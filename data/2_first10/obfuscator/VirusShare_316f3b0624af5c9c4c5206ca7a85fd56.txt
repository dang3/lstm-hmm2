shr
cmp
fisttpl
rcr
cwtl
pop
repz
stos
enter
outsl
mov
add
out
push
sub
scas
cmp
cmp
scas
loopne
cmp
cmp
dec
mov
jg
data16
push
std
aam
sub
ljmp
es
adc
and
push
sub
cmp
pop
jl
movsb
or
lcall
mov
mov
push
leave
outsl
fcmovb
jge
sub
cmpl
cmc
shrl
clc
andb
int3
jecxz
cmpsb
fidivrl
fwait
cmp
pop
add
arpl
mov
loope
aad
push
mov
fcmovbe
cmpsl
repz
push
scas
jns
sbb
cli
mov
inc
stos
jg
dec
sub
sbbb
sbb
jp
loopne
rorl
or
mov
bound
dec
jmp
mov
jns
mov
js
and
jle
push
repz
xor
test
std
stc
hlt
xchg
and
ljmp
pop
sbb
ds
lcall
push
adc
adc
push
or
adc
je
cmp
push
push
fadd
sub
cmp
mov
mov
ret
jns
lahf
xor
out
xchg
loopne
jl
cmpsb
in
pusha
push
sub
cmc
pushl
cmp
mov
jmp
sub
pushf
jmp
add
xchg
jecxz
jnp
daa
ret
decl
adc
pop
xchg
adcb
mov
sti
jp
nop
sbb
psraw
xchg
pop
cltd
ficoms
test
js
add
out
sar
fldenv
int3
pusha
hlt
imul
icebp
mov
roll
shl
nop
adc
push
xchg
sbb
cmp
loopne
sbb
mov
push
jmp
push
stc
pusha
sub
clc
clc
push
xor
call
pushl
call
lea
jae
stc
bt
stc
jmp
pusha
lea
je
stc
test
push
cmc
sub
bt
cmp
mov
jmp
push
push
pusha
movl
pusha
pushl
lea
jmp
cmp
ss
jecxz
js
adc
sub
push
loope
std
xchg
xor
test
loope
dec
adc
cmc
movsb
fwait
stos
stos
scas
test
outsl
cmp
lret
ficoml
repz
xchg
xor
setnp
mov
push
lea
jne
mov
movb
cwtl
movsbw
push
mov
bswap
movzbw
not
call
enter
jecxz
pop
adc
cmp
inc
cmp
xchg
hlt
mov
adc
mov
adc
add
cwtl
cld
std
jle
cwtl
sub
hlt
adc
sarl
jle
jae
and
jecxz
test
cli
outsl
test
icebp
inc
dec
adc
hlt
pop
arpl
shl
imul
inc
rcll
push
shlb
xor
stos
inc
xchg
pushf
call
add
inc
js
je
jb
arpl
jae
inc
sub
jecxz
and
rcrl
mov
ljmp
add
or
jmp
out
xchg
decb
pop
adcb
jnp
popa
mov
bound
xorl
cld
ljmp
js
sbb
mov
shrb
shrb
daa
mov
mov
adc
mov
lods
testl
add
mov
pushl
inc
jmp
jmp
mov
pushf
dec
jmp
lods
lock
ds
rcrl
daa
adc
push
fadd
push
les
leave
and
push
inc
sub
or
movsb
sbb
arpl
add
lcall
out
jb
pop
insb
add
test
and
sub
movsb
xchg
int3
jno
mov
adc
sub
popf
xchg
push
dec
call
mov
jmp
sbb
daa
mov
mov
xor
lds
aad
int3
cmc
inc
nop
cmp
adc
xlat
stc
ljmp
pop
or
mov
mov
pusha
mov
cmpxchg
shlb
xor
je
push
in
ficoml
mov
jge
ret
mov
mov
test
dec
clc
cltd
es
mov
add
add
or
xchg
adc
xchg
mov
jp
push
push
adc
dec
lods
push
and
lahf
and
pop
arpl
ret
jo
in
push
inc
pusha
mov
lea
jmp
lea
ja
stc
not
pushf
adc
sub
mov
lea
add
rcl
pusha
pusha
lea
mov
shr
inc
shl
mov
call
sub
cs
jecxz
call
cmp
dec
into
push
hlt
xchg
sbb
cmp
ja
add
pushl
loopne
sti
adc
xchg
push
xchg
adc
fs
mov
xchg
add
dec
cmp
loope
adc
ret
pop
and
lcall
jbe
add
mov
jl
test
enter
jb
mov
mov
mov
jecxz
or
mov
mov
outsb
sti
mov
mov
push
cmc
adc
xchg
sub
cli
jmp
xchg
jle
sbb
cmp
fmuls
gs
loopne
mov
mov
sub
inc
add
lock
insl
scas
imul
inc
dec
scas
ret
inc
pop
add
sub
push
loop
or
pop
dec
jg
xor
mov
push
sahf
xlat
mov
lret
test
mov
mov
ficomps
cwtl
sub
notl
lea
repz
mov
adc
sbb
lea
push
inc
lods
add
sub
pop
icebp
loopne
push
pop
jmp
iret
or
pop
dec
mov
js
sub
int3
pop
lods
cmc
clc
mov
test
pushf
cmpb
pusha
call
pusha
call
neg
jmp
repnz
pushl
jmp
cmp
setbe
bswap
pushl
lea
jmp
jmp
dec
pushf
inc
inc
lea
jmp
add
or
or
shl
cmp
mov
mov
clc
push
cmp
test
pusha
jmp
fistl
jecxz
into
fnsave
xor
adc
adc
sbb
pushl
cmp
rorl
loopne
add
sbb
inc
mov
xor
mov
sbbl
sub
test
pushf
cmp
es
push
xor
call
xor
repz
add
jecxz
push
daa
mov
fwait
xchg
mov
outsl
jns
inc
xor
call
and
xchg
sbb
in
fs
dec
sbb
mov
loop
jle
repz
cmpl
push
cmp
adc
pop
out
mov
arpl
cmpb
mov
sti
mov
fwait
xor
bound
cmc
and
mov
jae
ss
mov
xchg
das
scas
cmp
jne
xchg
inc
mov
aaa
ret
inc
xchg
add
pop
call
jmp
lea
jb
clc
call
rol
cmc
rcl
rcr
mov
pushf
bt
mov
lea
je
rol
jb
clc
test
neg
push
not
jmp
jmp
push
and
cmc
push
add
movb
pushf
push
pushf
lea
jmp
pop
imul
jns
fwait
sub
orb
sub
pop
mov
xchg
out
xchg
pop
fsubs
jle
inc
or
mov
out
lret
pop
xchg
aaa
add
outsl
xchg
inc
or
inc
pop
inc
pop
lcall
sbb
lahf
es
sti
in
repz
push
mov
xchg
daa
mov
aad
in
jge
rcll
enter
mov
and
pushf
pushf
mov
pushf
lea
jmp
test
or
xlat
outsb
adc
iret
mov
fwait
jb
addr16
xchg
imul
push
xchg
and
insb
mov
mov
inc
into
and
int
hlt
mov
rcr
pop
jb
lahf
das
mov
adc
cmp
addr16
mov
data16
xchg
or
shl
fdivrp
mov
dec
mov
lret
sub
cwtl
sbb
mov
dec
fdivp
inc
cmp
or
push
cmpsl
cmp
dec
pop
out
push
adc
sbb
rcrb
fwait
nop
movsl
std
mov
pop
cli
pop
cmp
inc
pop
cmp
je
scas
movsb
mov
movsl
insl
jb
xchg
hlt
push
push
dec
popa
notb
mov
dec
or
sahf
push
mov
pop
jno
xchg
cld
fs
ljmp
call
mov
dec
pop
mov
xchg
neg
mov
insl
test
cmc
in
pop
lods
es
pop
lret
out
lds
add
sti
inc
add
xchg
lock
mov
push
cmp
mov
mov
orb
jae
push
bound
rol
stc
mov
in
push
push
lods
xor
push
fsubs
xor
and
xchg
cli
pushf
sub
fs
call
push
lea
jae
cmc
sub
push
call
movw
lea
jne
call
loop
in
jecxz
daa
xor
pop
in
outsb
or
pop
call
cwtl
incl
mov
fdivrp
call
xchg
into
lret
mov
adc
mov
dec
push
add
pop
divl
lock
xor
sbb
arpl
or
add
mov
dec
fwait
test
jmp
xor
xchg
mov
outsb
or
bound
cmp
mov
int3
sbb
subb
dec
adc
call
lea
ja
jmp
lea
call
pushf
movw
mov
pushl
lea
jae
not
seta
mov
not
jmp
push
jmp
cmp
pushf
push
lea
ja
setg
inc
jmp
cli
std
xchg
lret
testb
mov
lret
call
dec
pusha
leave
out
and
call
or
rcl
leave
add
aad
fisttpll
fidivs
pop
pop
mov
and
jne
jns
cmpsl
xchg
fidivl
js
sti
adc
inc
mov
cld
pop
stos
aas
aam
or
sub
jns
mov
out
jae
sub
iret
and
loop
sub
jg
xchg
mov
outsl
test
in
mov
repz
adc
pop
xchg
adc
dec
or
jle
pop
test
add
call
jg
adc
jmp
loope
adc
lret
cmp
iret
pop
loope
push
pusha
lea
call
call
pusha
mov
pushf
movb
pushf
push
lea
jmp
testb
jecxz
cmp
lods
sub
lea
test
hlt
loope
mov
push
xor
mov
dec
int
jle
addr16
mov
xlat
aas
add
jecxz
jg
mov
push
in
mov
out
loop
imul
aas
push
inc
push
lret
adc
xor
pusha
out
or
xchg
inc
jg
imul
test
neg
or
mov
neg
btr
stc
add
sub
ror
mov
jmp
jmp
dec
xor
jecxz
mov
push
out
setl
imul
aaa
bound
mov
mov
sbb
dec
out
lods
sub
mov
pop
cld
adcl
out
mov
ja
sub
mov
xchg
lods
add
or
or
mov
in
mov
adc
test
inc
xchg
xchg
inc
insl
imul
mov
fmul
loop
out
mov
rcrb
push
popf
addr16
mov
jle
insl
leave
fsubrs
clc
lea
xchg
es
adc
clc
jp
cmp
ds
in
outsl
data16
pushf
and
adc
and
cmp
leave
mov
movsb
and
int3
dec
ret
fdivrs
fsubrs
imul
jno
lock
mov
sarl
lods
pop
andb
jnp
scas
outsb
sbb
mov
pushf
movsl
or
add
icebp
pop
or
adc
or
jns
out
dec
outsl
mov
add
mov
xchg
fabs
test
jge
mov
lods
inc
fstpl
xchg
adc
xchg
int
mov
jl
or
je
or
sub
add
call
lea
je
jmp
pushf
call
xchg
jmp
test
pushf
mov
lea
je
call
lods
jmp
call
aam
popa
test
lret
scas
push
iret
pop
icebp
je
cwtl
daa
ret
orb
mov
popf
sbb
inc
push
ljmp
mov
and
sahf
in
inc
scas
mov
insl
push
adc
jecxz
pushf
test
fldt
popf
xor
or
sub
inc
pusha
outsl
in
add
into
push
testb
or
shll
pushf
pushf
iret
jo
pushl
mov
cmpsb
stos
lea
push
js
iret
jo
fstl
mov
sub
andb
mov
push
mov
sub
ja
stc
pushf
sub
push
xor
push
mov
jmp
pushl
lea
je
bt
bt
or
push
pusha
lea
je
sar
cwtl
rol
bsr
sub
shr
stc
mov
cmp
call
int3
xchg
iret
and
adc
mov
push
loope
sbb
cmc
mov
xor
call
pop
and
stos
inc
rolb
add
push
in
jmp
int3
fisttps
push
fidivrs
mov
xor
push
dec
pop
cli
mov
xchg
fdivp
jnp
mov
cmp
ds
sahf
pop
sbb
fistpl
push
insl
push
lret
mov
sbb
pusha
inc
cmp
dec
out
xchg
sbb
cmp
out
sub
hlt
fdivs
jbe
lcall
mov
xchg
insl
ss
ret
jae
xor
enter
and
pop
dec
ss
popf
jg
sbb
inc
fmuls
push
pop
aam
push
les
loopne
das
adc
test
pop
popf
xchg
shll
or
push
in
xchg
push
xchg
sti
jecxz
lret
xor
mov
fimuls
mov
sbb
jecxz
xchg
lahf
xor
insb
pop
sahf
das
mov
mulb
fstl
outsb
aad
jne
inc
fcomip
xchg
add
in
lret
loopne
and
repnz
push
push
mov
xchg
jo
inc
or
sub
push
adc
iret
dec
imul
push
movsl
mov
lahf
xchg
mov
xchg
sbb
bound
ss
pop
movsb
fldl
test
mov
test
rcrb
cld
xor
mov
xor
xor
push
in
das
movsb
scas
xchg
stos
adc
cld
dec
imul
in
or
or
test
ds
push
out
jo
sbb
sahf
or
jmp
fisubrs
fwait
mov
ja
cmpsl
cmp
subb
mov
rcl
sub
fdivp
xchg
fwait
or
stos
in
pop
imul
xor
dec
sbbl
push
push
lds
jge
clc
xchg
aaa
sub
loope
ret
lods
popa
mov
cmp
les
jno
lea
movsl
inc
lret
arpl
jnp
add
cmpsb
leave
inc
iret
and
adc
add
nop
and
shl
js
mov
into
addr16
lea
movsl
xor
and
jg
stc
jle
insb
or
aam
sub
jp
cld
fstpt
pushf
or
in
mov
and
push
nop
pop
inc
addr16
repnz
jp
repz
aaa
sbb
mov
jmp
leave
mov
add
sbb
jbe
cwtl
sbb
mov
fistps
call
lea
jne
stc
call
in
jb
jecxz
mov
push
jmp
cmc
jle
stos
xor
adc
jno
or
sbb
fcomip
xchg
pop
adc
fimuls
les
xchg
inc
sbb
xor
out
add
mov
xchg
clc
addr16
and
addl
dec
iret
inc
push
mov
push
sbb
adc
cli
pop
pop
in
nop
es
pop
out
je
lods
cmp
outsl
js
xchg
scas
push
sub
pop
scas
pop
aas
cmpb
cmp
arpl
jg
popf
es
ja
inc
testb
test
pop
fldcw
and
ficomps
jle
out
or
inc
or
aas
subb
test
mov
icebp
mov
push
fisttpl
mov
or
sub
mov
or
sub
subl
push
jnp
cli
pop
stos
les
xchg
mov
pop
mov
mov
rclb
jmp
cmc
bt
clc
cmp
call
inc
and
neg
pushf
xchg
jmp
pusha
mov
stc
rol
cmp
mov
push
cmp
jmp
jmp
xchg
loopne
jle
lret
jmp
xor
cwtl
add
loopne
rcrb
pop
adc
jge
and
test
addl
out
fdivrp
mov
jae
pop
inc
addl
pop
imul
sbbl
cmc
add
inc
movsb
mov
hlt
shr
sbbl
mov
inc
mov
out
mov
cmpsb
sub
bsf
repz
mov
loopne
data16
push
xchg
lcall
xchg
jp
dec
mov
add
ret
mov
adc
outsl
jmp
push
je
insb
cmpsl
lds
pop
inc
int
arpl
adcl
jp
bound
xor
in
out
dec
pop
cli
js
nop
sub
inc
lret
outsb
add
aaa
loope
js
in
icebp
mov
mov
movzbw
rol
mov
jae
pushf
mov
pushf
call
lea
call
pushf
call
cmpb
call
call
cmpb
mov
lea
jne
cwtl
jmp
mov
push
inc
lea
call
inc
xchg
int
jecxz
movaps
mov
ja
es
or
jns
sub
cmc
jnp
mov
jb
add
push
scas
inc
pop
out
sbb
push
fcomip
mov
add
lock
lods
xor
dec
sub
sbb
or
dec
out
add
sub
push
call
shl
mov
jge
lret
popa
idivb
mov
insb
xchg
in
js
sub
mov
sbb
sbb
imul
pop
cmp
jae
add
jb
and
int
mov
test
pop
data16
les
test
mov
jne
xlat
loop
inc
int3
dec
int
fdivl
aaa
out
dec
cld
je
fnsave
pop
inc
ss
dec
jmp
or
mov
mov
and
add
inc
xchg
sarb
adc
into
pop
hlt
jg
mov
lock
ds
out
and
push
outsl
in
mov
cli
ss
mov
jmp
jecxz
call
mov
movsb
rorb
test
aaa
dec
outsl
nop
testl
insb
mov
adc
fucomip
ds
or
adc
mov
cltd
jle
jnp
roll
jl
call
mov
shrl
xchg
cmp
push
xchg
mov
lret
push
repz
cwtl
lea
push
call
movw
mov
pusha
lea
jmp
xchg
jecxz
testl
int
pop
mov
push
mov
jae
neg
cli
adc
xchg
xor
loop
ficoms
and
ret
pusha
push
mov
stos
ret
dec
clc
push
fisubrl
call
imul
jmp
into
lcall
mov
enter
pusha
mov
cs
nop
stos
mul
dec
subb
or
je
andb
in
inc
jle
lret
sbb
xor
lret
sub
dec
fbstp
mov
iret
jne
enter
lea
dec
lcall
lods
xor
or
mov
stos
mov
lock
mov
mov
mov
push
js
adc
push
lea
call
call
xchg
jns
jp
lret
adc
cmp
jo
outsb
pop
mov
mov
iret
lock
or
pusha
shll
in
mov
jne
and
hlt
xchg
ret
jge
add
mov
xchg
cmp
addr16
jno
in
test
mov
sub
sbb
loop
ret
ds
addr16
orl
lock
je
cld
pop
mov
and
test
test
mov
fbld
cmp
push
pushl
ret
lea
je
test
cmp
cmp
call
pusha
call
jmp
js
jecxz
mov
or
jnp
lahf
pop
mov
mov
sbb
push
rcr
out
xchg
mov
enter
push
xchg
or
les
adc
cmpl
pop
mov
pop
xlat
call
jae
xor
adc
stc
mov
sbb
pusha
out
nop
adc
dec
into
pop
mov
fsubr
mov
sub
jecxz
and
mov
mov
mov
nop
ss
add
popa
jle
in
push
sbb
out
xchg
ficoms
jne
sub
xor
sub
ss
out
sbb
rcrb
mov
mov
sbb
jg
sahf
out
jb
add
insb
inc
dec
in
imul
imul
and
idivl
test
mov
pop
mov
adcl
add
fs
call
push
pushf
pushl
mov
lea
jb
push
pushl
ret
lods
lock
stos
mov
arpl
inc
xor
push
into
arpl
inc
jo
or
sub
jne
pop
jb
add
lods
sbb
dec
outsl
push
xchg
add
jecxz
jp
inc
insb
or
mov
fsub
xchg
add
sub
adc
or
sub
lcall
mov
mov
fucomip
cmpsl
adc
std
inc
stos
je
in
jmp
dec
inc
aad
movb
nop
in
mov
fiadds
stc
in
enter
movsb
in
push
sbb
push
mov
xor
lahf
add
pop
sub
shl
dec
push
icebp
xchg
enter
mov
cmp
adc
sti
jb
rol
imull
test
nop
daa
dec
fcomps
das
mov
arpl
in
cmp
push
int3
xchg
adc
and
xchg
cmp
jbe
adc
das
insl
stos
mov
mov
or
repnz
push
jmp
not
pusha
pushf
lea
jne
dec
stc
not
push
clc
mov
jmp
pusha
lea
je
push
pusha
lea
jmp
andb
jecxz
bound
xchg
adc
je
mov
sbb
inc
pop
out
inc
vpxor
adc
push
sub
xor
sub
gs
add
or
ret
push
pusha
mov
jg
ja
and
hlt
or
add
out
arpl
jge
lahf
aaa
mov
xchg
mov
aas
jne
sbb
jmp
incl
jmp
ja
lret
adc
int3
adc
clc
or
jecxz
icebp
push
mov
filds
loop
insb
jae
idivl
lcall
xchg
mov
xor
mov
inc
and
jmp
dec
pop
push
stos
push
add
inc
and
mov
scas
das
fistpll
repz
pop
ja
into
inc
pop
xchg
adc
test
iret
pop
icebp
mov
scas
insb
lret
in
cltd
cmp
inc
mov
jle
push
cmp
imul
xor
adc
xorl
shl
xchg
inc
bound
jbe
lret
push
adc
test
lahf
push
or
jo
cld
add
dec
adcb
jecxz
out
xchg
stos
dec
adc
jbe
sub
xchg
mov
stos
dec
mov
aad
dec
outsb
addr16
mov
inc
pop
adc
jne
int3
jmp
or
adc
jg
jp
and
sbb
xor
scas
sbb
test
inc
test
and
pop
lahf
and
jmp
cli
mov
sub
or
mov
cmp
cmpb
jmp
sarb
inc
push
loop
or
je
cwtl
sbb
fs
adc
pop
ja
and
addr16
xchg
inc
cmpsb
adc
shlb
jmp
push
pop
out
movsl
push
cmpsb
push
repz
adc
cs
and
subl
or
inc
mov
mov
dec
ss
mov
cmp
lods
cmp
negl
xor
fsts
jmp
shll
rep
lea
movsbw
mov
push
mov
lea
jmp
add
add
mov
jmp
jmp
setne
lods
mov
push
jmp
sti
dec
mov
lret
push
repz
cwtl
and
and
xor
jo
mov
fisttpll
mov
aad
xchg
adc
adc
jbe
movsb
or
int3
decl
jle
ljmp
es
push
insl
js
lock
jno
xchg
flds
fs
pop
and
mov
ficoml
or
testb
add
cmp
mov
cld
xchg
sub
lcall
aas
dec
pop
stos
insl
mov
lods
lret
jmp
lret
es
cmp
test
push
aad
jecxz
or
std
mov
test
andb
icebp
sbb
xchg
push
sbb
loop
mov
xchg
add
mov
fadds
aaa
cmp
push
push
push
sub
sub
cmp
mov
jbe
mull
push
das
js
mov
lds
stc
loopne
jmp
jno
cmpb
mov
dec
xchg
mov
int
add
and
sbb
data16
xchg
scas
cmp
push
pop
mov
push
mov
and
call
pushf
push
jmp
jmp
push
call
addl
fstpt
mov
imul
fbstp
mov
xchg
add
jp
aas
xchg
mov
rol
pushf
jle
pop
and
stos
push
inc
add
or
out
jnp
sbb
xchg
cmpsl
cmp
imul
ss
js
push
fisubrs
sub
jae
lret
cwtl
sub
or
outsl
nop
int
mov
mov
jecxz
jns
dec
shlb
inc
aam
fidivrs
xchg
mov
sarl
repnz
push
push
jno
popa
stos
shlb
mov
dec
sub
and
xorl
add
sti
xchg
mov
mov
push
out
test
sti
mov
scas
pushf
loop
adc
and
push
pushf
pusha
mov
pusha
pushl
ret
add
inc
gs
outsl
fs
gs
imul
add
test
or
lret
push
xchg
adc
jne
adc
push
aam
adc
push
iret
out
xchg
outsb
mov
into
cs
and
cmpsb
jp
mov
repnz
test
les
xor
dec
test
or
mov
inc
sbb
pusha
sbbl
in
or
data16
jg
xchg
and
add
sub
adc
movl
jmp
jmp
push
push
mov
lret
jns
lea
lods
inc
iret
push
fildll
jp
mov
fwait
xor
mov
xor
dec
mov
icebp
mov
mov
rcrl
pop
mov
add
ljmp
mov
incl
dec
mov
and
xchg
lods
ja
jno
lret
or
data16
jo
xchg
sub
ret
stos
mov
cmp
arpl
icebp
lods
add
pop
fs
andb
pop
in
fidivl
loop
pop
shl
in
xchg
mov
test
pushf
ds
pop
sti
push
js
testb
jno
lret
test
and
add
xchg
and
mov
push
sub
imul
mov
or
sbb
shlb
decl
in
in
mov
ret
xor
shlb
fcmovnbe
fstps
inc
rcrb
jns
sub
mov
outsl
jl
push
and
pop
and
and
fidivs
fs
mov
gs
mov
dec
or
mov
xchg
push
stos
popa
and
or
scas
mov
daa
fldl
rorl
and
pop
in
add
jo
pop
sub
push
jmp
dec
cld
sbb
dec
iret
push
enter
pop
xchg
mov
gs
jge
dec
dec
xor
leave
cmp
dec
dec
xor
lcall
sub
ds
out
testl
sub
jbe
pusha
insl
repnz
fisttpll
dec
jmp
jb
test
push
push
testb
pop
jne
dec
cmp
repz
scas
loope
icebp
or
or
cmp
adc
arpl
call
sahf
sub
call
lret
push
das
arpl
addl
enter
shrb
xor
adc
imul
mov
xchg
out
push
sbb
push
xchg
fstl
fcmovnu
jge
xchg
mov
sbb
cli
add
jle
pop
and
or
jae
lret
jmp
notl
arpl
xchg
pop
imul
ds
bt
cmc
test
jmp
dec
movb
pusha
not
pushf
test
pushl
mov
jmp
pop
lods
in
jecxz
lahf
ret
gs
mov
mov
lods
push
pop
sbb
or
push
jbe
int3
out
xchg
mov
or
xchg
xor
pop
sub
push
mov
cld
cwtl
test
enter
xor
add
mov
stos
inc
add
popa
daa
inc
int3
and
rcrl
cmp
pop
repz
and
testl
out
push
imul
icebp
fisubl
pop
outsl
jecxz
mov
testb
xlat
je
nop
ss
or
jmp
in
ficoms
ret
adc
popa
pop
outsl
ret
in
cwtl
cld
test
pop
push
pop
sub
inc
xor
imul
notl
imul
or
mov
mov
pusha
movb
pusha
lea
ja
cmp
and
not
sub
bsf
add
inc
shl
shl
bts
mov
push
rol
mov
clc
repnz
pushf
lea
jne
pushf
seto
pushf
movb
bswap
mov
push
mov
movb
lea
pushf
mov
pusha
movl
pushf
call
stc
add
jmp
mov
push
mov
push
jmp
call
movzwl
mov
sub
mov
pusha
jmp
push
cmp
jmp
shlb
mov
push
mov
mov
imul
std
outsb
dec
loope
cltd
sahf
sub
lret
outsl
fistpll
push
cmp
jno
fildll
push
and
sbb
ror
shll
xor
add
ljmp
mov
lcall
dec
mov
xor
int3
xor
pop
mov
jne
push
jmp
pusha
lea
jb
pushf
cmpb
jmp
clc
stc
add
pushf
pusha
movb
pusha
lea
jne
pusha
jmp
jmp
push
inc
mov
inc
pusha
xchg
dec
bswap
lea
mov
inc
cmc
mov
pushf
test
clc
mov
add
clc
shl
mov
clc
test
push
sub
jmp
shlb
mov
pop
fnsave
nop
adc
xchg
pop
rorl
inc
scas
leave
insl
icebp
repnz
xchg
push
or
xor
aaa
sahf
mov
cs
arpl
cs
or
cmp
and
das
int3
adc
or
ljmp
dec
ljmp
rcrb
push
lret
rcl
imul
insb
jecxz
and
stos
cmp
sub
mov
ljmp
pop
fbstp
mov
out
xchg
lcall
inc
or
mov
xchg
scas
sysexit
fistpl
inc
dec
andl
ds
outsl
and
shr
cwtl
in
es
dec
inc
maskmovq
iret
sahf
cwtl
sbb
cmpsb
cli
mov
xchg
jns
mov
mov
lea
dec
jmp
adc
ret
lret
outsl
incb
stc
xchg
pop
lret
mov
cmp
dec
in
sbb
adc
imul
dec
fwait
imul
sub
push
stos
push
or
inc
int
test
mov
cmpb
fsubrp
pop
push
mov
inc
and
xchg
adc
arpl
xor
cmpsb
insl
sarb
cli
dec
inc
in
pushl
xchg
and
outsb
push
inc
dec
adc
in
ja
testl
ret
je
or
pop
cli
mov
test
das
jne
sbb
xchg
sub
dec
and
lea
ja
call
sbb
sbb
jb
mov
pushf
pop
mov
lea
mov
xchg
and
arpl
pop
and
mov
jge
sbb
fisubrl
xor
daa
ds
into
fisttpll
test
jge
loopne
dec
hlt
push
les
sbb
mov
outsb
std
in
gs
add
fst
in
or
jbe
push
jecxz
jae
pop
or
sub
test
movsl
inc
mov
loopne
mov
and
mov
pop
push
push
mov
mov
movsbl
call
jo
std
push
lret
dec
aam
clc
lea
movsl
ds
jns
pusha
out
xchg
jns
inc
pop
test
adc
push
push
mov
ja
adcb
ficoml
sti
movsb
pusha
xchg
xor
xchg
sub
pop
inc
dec
clc
dec
xchg
push
xchg
jl
scas
cltd
sbb
add
inc
sub
in
sbb
xor
jp
movsb
and
dec
loopne
add
cmp
xchg
shlb
icebp
pop
or
xor
xorb
add
out
aaa
xor
add
push
push
mov
movb
lea
jmp
call
test
lret
and
adcb
daa
mov
inc
add
jg
add
pop
ficoms
mov
sbb
mov
cld
dec
xchg
repz
in
xchg
xchg
cs
into
push
loopne
push
cwtl
jge
or
js
insb
mov
mov
imul
insl
add
ret
pop
fldt
or
sub
outsl
add
jg
sti
jo
adc
sub
push
loop
in
aad
jmp
daa
inc
loopne
sbbb
popf
push
dec
inc
inc
cs
pop
push
jno
js
jnp
cmp
mov
movsb
ds
loop
dec
mov
sub
add
insb
cld
movb
rep
lods
mov
insb
int3
xchg
sub
mov
mov
and
push
pop
in
mov
sub
mov
cmpsl
les
popf
test
mov
dec
aam
out
fwait
mov
in
xor
arpl
xor
sbb
lret
mov
pop
sbb
push
mov
ret
sub
ret
das
mov
mov
jo
pop
arpl
pop
pop
add
call
lods
loopne
xchg
scas
push
pop
cmp
adc
pushf
or
cmp
cmpsb
push
mov
push
daa
mov
jg
popf
xchg
mov
rcr
shll
inc
pop
push
jb
xchg
adc
add
mov
movsb
cmp
pop
pushl
mov
mov
lea
je
bt
cmp
call
or
jecxz
dec
fs
ss
add
pushf
mov
movsl
cmp
mov
inc
fbld
xchg
cmp
addr16
jl
mov
push
xchg
dec
or
mov
lea
add
sbb
mov
jmp
cmc
dec
out
enter
add
inc
cwtl
shl
jg
mov
lods
jcxz
out
or
ret
pop
mov
mov
sbb
testb
or
add
scas
xor
pop
in
push
push
lahf
cmp
test
aas
ss
int3
push
mov
inc
push
xor
push
xchg
sub
cmp
push
scas
call
aad
arpl
stos
testb
sbb
cli
mov
cmpsb
xor
pop
cli
mov
outsb
lods
icebp
mov
fimull
or
jcxz
push
cmp
push
fsubrl
lret
or
push
push
or
imul
sub
rcrb
jnp
adc
add
mov
xor
and
pushf
jnp
sbb
cmp
ja
xor
dec
jge
loope
xchg
jecxz
std
push
popf
mov
cs
adc
aaa
icebp
jbe
scas
ds
mov
inc
sbb
cmpsb
aam
mov
dec
cmp
pop
jno
jl
sahf
cmp
test
adc
movsl
or
lods
aaa
jne
jge
data16
add
ljmp
lret
push
out
cmp
aad
mov
jo
js
mov
daa
mov
imul
and
pop
imul
or
call
pushf
les
mov
push
pop
and
jl
sub
aaa
and
fnsave
mov
sbb
sbb
mov
adc
call
mov
sub
stos
sbb
sub
sub
jmp
popf
inc
jl
sbb
test
cltd
and
jmp
ss
sub
imul
ss
mov
insl
push
xor
scas
ret
lcall
cmp
stc
inc
pop
and
inc
fildll
jmp
push
push
and
or
sub
and
jb
repnz
movsb
push
sbb
das
movhlps
enter
cmpsl
gs
lret
gs
mov
aas
movsl
iret
xchg
fs
push
sub
repnz
cld
push
lret
xchg
stc
sbb
into
test
push
push
scas
ss
adc
push
xor
adcl
mov
xor
leave
or
popf
mov
dec
mov
inc
xchg
pop
sbb
and
pop
insb
and
mov
out
stos
or
int
das
sti
jns
mov
shrb
add
jns
sarl
aad
lahf
sbb
cmp
sahf
add
fwait
jo
fcomps
mov
sbb
fisubs
dec
sbb
mov
mov
jle
mov
pushf
push
add
addl
test
fs
sbbb
out
adc
jns
mov
jp
sub
ret
pop
ja
or
jbe
stc
xor
jmp
mov
fistpl
in
jp
sub
jno
icebp
adc
cmp
ljmp
cmp
shrb
jg
lock
popa
push
dec
addr16
aaa
ds
adc
jmp
sti
adcl
out
pusha
test
add
cmc
bt
cmp
push
movzwl
sub
pusha
pop
mov
stc
test
test
add
movb
bt
mov
bt
test
movw
lea
je
stc
add
jmp
repz
mov
push
out
cmc
jp
lods
sub
dec
enter
sub
cld
mov
sbb
fidivs
xchg
mov
outsl
jbe
imul
test
add
inc
push
in
and
jmp
repz
or
pop
outsl
add
push
arpl
lret
out
xchg
scas
dec
out
negl
fs
xor
xchg
aam
jg
popa
test
and
mov
xchg
mov
sub
out
mov
xor
iret
mov
jg
lods
jno
xchg
std
arpl
bound
in
inc
jnp
xchg
rclb
cltd
shrb
int
push
imul
inc
loope
into
or
add
sub
arpl
mov
dec
pop
repnz
sbb
es
xchg
ss
inc
push
arpl
testb
mov
lea
jmp
rcl
push
mov
bt
clc
cmp
and
clc
clc
add
add
jmp
mov
lret
daa
mov
loop
shlb
cltd
aad
daa
loope
mov
daa
jecxz
in
adc
loopne
cld
lea
jg
arpl
sub
adc
mov
stos
pop
mov
in
xor
sub
mov
pop
sbb
xchg
imul
mov
mov
jnp
mov
scas
xchg
xlat
out
arpl
imul
inc
push
and
fs
sahf
mov
fdivl
mov
xchg
cs
mov
fsqrt
jp
gs
pushf
movl
movw
jmp
inc
mov
cmp
xchg
push
btc
or
btr
mov
shl
sub
stc
cmc
mov
pushf
pusha
pushf
xchg
neg
sub
cmc
mov
mov
cmp
push
test
sub
call
pusha
movl
pusha
call
bt
pusha
add
clc
call
pop
pushf
movb
pushf
pushl
ret
mov
loop
jecxz
pushf
mov
xchg
sub
pop
in
cmp
mov
sahf
mov
adc
mov
push
jl
cld
test
add
pop
inc
xor
dec
fidivs
jle
lcall
adc
sbb
js
inc
fdivs
inc
or
jecxz
sti
add
testw
rcll
inc
push
lds
cwtl
sbb
xor
inc
xor
test
dec
push
scas
loope
add
sub
adc
out
push
fsubrp
incb
jne
cli
into
or
xor
imul
sub
rcl
mov
jl
test
iret
sar
or
decb
push
jl
push
mov
adc
pusha
cli
inc
mov
cmc
jmp
mov
lret
mov
test
mov
and
lods
mov
outsb
cli
mov
jge
test
adc
mov
cmp
repz
mov
test
lret
adc
push
ds
cwtl
fimull
rorl
aad
push
es
out
xchg
add
fbstp
das
sahf
scas
sti
mov
negl
sarl
fnstenv
jns
mov
outsl
or
adcb
stos
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
xchg
push
or
or
jmp
jmp
jne
gs
xor
fs
insb
add
add
fs
call
cmp
pusha
cmc
cmp
lea
je
pusha
lea
jae
jmp
sar
movsbw
mov
cmc
shr
bswap
sub
clc
movsbw
sbb
btr
lea
movb
test
sub
clc
pushl
popl
jmp
fwait
add
jecxz
jnp
and
xchg
cmp
sbb
sti
pop
xor
sarb
dec
in
in
lea
or
es
movsl
push
sub
cmp
test
out
pop
js
inc
cmp
jl
incl
cmp
mov
mov
mov
icebp
jnp
stos
in
les
fmuls
push
ss
jb
jns
repz
or
pop
nop
shl
add
jecxz
into
fnstenv
jl
xchg
jmp
fidivs
in
cmc
xchg
imul
jmp
pop
icebp
dec
or
jmp
xchg
mov
lock
insb
jnp
mov
in
insl
adc
test
orl
sti
adc
cmp
lret
lods
push
push
xlat
mov
aaa
iret
pop
idivl
inc
inc
sub
jo
jns
mov
jp
mov
idivl
cltd
in
pop
repz
xchg
pop
jecxz
out
or
mov
cmpb
mov
cltd
int
in
jp
sbb
and
and
psadbw
sub
incb
cmp
daa
in
aam
orb
roll
add
xor
in
int3
loope
hlt
data16
in
lods
movsl
orl
xor
adc
xlat
sub
icebp
test
hlt
sbb
push
add
ss
jp
idivl
iret
imul
lret
lock
push
popf
inc
leave
in
jns
sub
and
lods
mov
sbb
push
xchg
xor
nop
hlt
out
cli
jbe
cmp
inc
cmp
adc
int
data16
shrl
cmc
mov
mov
inc
fwait
mov
dec
sbb
push
aad
adc
xlat
faddl
bswap
pop
inc
push
or
nop
xchg
daa
movsb
scas
sti
orl
mov
pop
dec
mov
loopne
hlt
pop
pop
lock
mov
mov
movsb
cmp
into
mov
dec
gs
xchg
fisttpll
dec
aaa
adc
push
pop
push
pop
jecxz
or
in
add
aas
dec
loop
clc
dec
jne
mov
shl
jl
mov
das
ds
dec
pop
imul
pop
and
sbbl
mov
addr16
popa
jecxz
jg
into
adcb
or
clflush
mov
std
dec
dec
andb
xorl
lret
add
push
fistpll
xchg
fistps
mov
push
call
add
dec
outsl
arpl
inc
jb
add
lret
sbb
push
ret
es
scas
jo
iret
into
daa
and
loopne
movsl
and
inc
loopne
dec
pop
repz
xchg
mov
aad
enter
das
jle
push
test
xor
lock
fcoml
fcomp
pop
xor
xchg
xchg
insb
jns
or
dec
cld
push
push
mov
add
out
push
bound
or
fldenv
test
mov
xchg
inc
imul
mov
pop
mov
in
ja
xchg
sub
pop
out
out
rorb
mov
mov
xchg
cli
ljmp
jp
ljmp
and
inc
stc
bt
test
mov
not
test
bt
neg
bt
clc
bt
ror
mov
cmp
cmp
cmp
push
movzbl
bswap
sets
lea
lea
bswap
mov
pushf
movb
call
mov
sub
shr
pop
bt
add
rcr
add
btr
bts
mov
shl
mov
movsbl
neg
add
shl
rcr
adc
bts
movl
adc
test
xor
mov
test
pushf
pushf
pushf
cmp
movl
lea
jbe
clc
sar
sub
neg
btc
rol
mov
xadd
call
pushf
lea
ja
dec
not
not
jmp
or
pop
jecxz
dec
pusha
out
adc
ja
lea
mov
jg
mov
jmp
lock
out
dec
rep
repz
sbb
push
mov
cltd
xchg
xchg
adc
or
jl
cmp
push
lock
hlt
mov
mov
mov
repz
lret
push
lea
jae
test
stc
call
pushl
pushf
lea
je
jmp
jmp
pusha
neg
call
jo
cmc
pop
jecxz
scas
int3
imul
fnstenv
add
incl
cmp
inc
dec
mov
push
loope
repz
add
das
test
lds
fnsave
rcl
call
adcl
jp
sbb
addb
and
test
in
repnz
pop
adc
cmp
lret
nop
adc
clc
sbbl
das
lret
mull
jmp
mov
mov
sbb
mov
jg
or
ficoml
mov
test
fildll
iret
in
mull
push
inc
js
sbb
sahf
sub
or
lea
sti
jo
fcomi
xchg
sub
mov
fwait
sub
popa
lods
jmp
cmpsb
loop
cltd
and
pusha
xchg
pushl
call
inc
xor
sti
outsb
jo
add
push
shlb
out
jl
mov
push
dec
inc
repz
es
adc
out
xlat
add
xor
repnz
pop
repnz
idivb
mov
xchg
ljmp
mov
pop
cs
mov
jb
sub
sbb
ljmp
mov
cmp
xor
lods
stos
push
xor
sub
mov
and
cmpb
add
mov
outsl
xor
inc
gs
das
fs
sub
mov
sbb
xor
jno
push
bound
das
mov
add
push
lods
push
lods
stos
xor
adc
adcl
mov
sub
mov
sbb
into
mov
subb
sbb
push
mov
add
cmpsb
cs
dec
mov
rcrl
icebp
or
inc
jp
xchg
xor
jb
push
mov
or
inc
stos
sub
cmpl
add
and
stos
mov
call
fistl
pop
xchg
xor
add
mov
pop
dec
mov
es
cmp
jecxz
cmp
lods
outsb
loop
movsb
dec
adc
ss
sub
rclb
xor
xlat
repnz
push
in
mov
add
loopne
ljmp
mov
stos
repz
jl
and
push
xor
xchg
xchg
jnp
bnd
push
call
dec
lret
or
cltd
xchg
subb
push
adc
xchg
push
adc
jns
stos
pop
xchg
lcall
xchg
lods
adc
jle
cwtl
fistl
outsb
movsl
fisttps
pop
inc
out
push
jo
adc
gs
adc
mov
add
xchg
inc
pop
ret
stos
jno
outsb
mov
hlt
sub
movsb
fisubrs
push
sub
or
jb
adc
xchg
sub
and
mov
das
jmp
pop
mov
movsb
stos
in
sbb
es
pop
xchg
stc
iret
loop
es
jecxz
std
cmp
sbb
mov
inc
outsl
pop
mov
mov
xor
mov
and
and
ss
push
insb
arpl
xchg
pop
xchg
outsb
aaa
inc
and
push
mov
mov
stos
sbb
mov
xor
fildll
xor
cmpsb
mov
and
das
xor
lock
and
mov
xchg
jmp
xor
jb
test
lcall
xor
cld
pushf
stos
jb
repz
jle
and
aad
js
sarb
push
lock
adc
xchg
sub
mov
arpl
pop
mov
and
push
test
push
pop
dec
sub
pop
jo
stos
sbb
jo
mov
enter
sarb
int
xor
test
fistps
inc
std
add
push
sub
sbb
inc
mov
bound
mov
mov
insb
pop
mov
xchg
mov
jne
pop
outsl
xor
xchg
mov
jp
xor
sbb
sbbl
cltd
nop
mov
daa
add
cmpsb
inc
mov
xlat
mov
inc
pop
jb
and
shlb
sub
stc
fs
push
push
sub
cmp
imul
sub
add
xor
pop
test
lods
adc
out
cmpsb
outsb
xor
cmp
sub
rep
bound
pop
test
jo
push
mov
mov
mov
xchg
sub
sbb
cs
mov
jno
mov
roll
popa
mov
fisubs
or
popa
jg
cs
dec
sub
xor
lea
testb
movsb
jb
or
subb
mov
sarb
sbb
and
arpl
mov
nop
cmc
push
adc
lods
mov
or
pop
lock
sbb
test
fisubs
dec
ja
out
mov
scas
mov
sbb
xorl
pushf
xor
and
mov
mov
jbe
inc
lret
mov
mov
add
sub
add
mov
sub
inc
xor
push
jbe
into
jno
in
ljmp
movsb
sub
jp
ljmp
sub
push
lea
dec
pop
mov
xchg
dec
mov
loopne
inc
inc
mov
push
js
jo
pop
test
js
mov
stos
pop
inc
xchg
jge
jg
fldl
jb
movsb
pop
adc
pop
mov
jae
sarb
ficompl
mov
pop
out
sub
inc
pop
je
hlt
xchg
or
arpl
mov
mov
movsb
rclb
push
add
dec
fcoms
lock
xchg
push
mov
repnz
fucomip
sub
retw
xor
mov
and
inc
cmp
movsb
ficompl
andl
icebp
stos
int
add
adcb
stos
jmp
xlat
adc
push
sub
or
xor
ljmp
or
xchg
movsb
sbb
ds
mov
data16
sahf
pop
ficoml
repz
push
mov
xor
add
sbb
jmp
xor
das
pop
popa
sbb
adc
in
dec
movsb
lds
dec
and
cwtl
dec
mov
movsb
iret
jae
mov
repnz
lea
lret
movsb
nop
out
hlt
mov
loop
push
rep
insl
lds
bound
ss
xor
inc
mov
sub
jnp
loop
scas
push
fimull
adc
jg
mov
jecxz
inc
mov
jb
stos
es
data16
xor
cld
das
mov
shlb
mov
pushf
pop
sub
stos
mov
ret
repz
xor
inc
inc
outsb
pushf
mov
stos
repz
mov
sbb
repnz
ror
cs
sub
test
mov
mov
in
jmp
jno
subb
test
mov
lods
ret
lahf
pop
jmp
and
push
sbb
lret
movsl
xor
mov
xor
jo
jecxz
push
lods
xor
js
cmp
cmp
jb
das
jno
imul
ja
lret
jne
or
popa
pop
lods
cs
dec
ret
lods
push
cmp
lock
repnz
lret
out
push
mov
in
mov
mov
rclb
and
xor
ja
je
imul
xor
mov
ret
aas
mov
repnz
repnz
xor
xor
scas
pop
in
pop
push
mov
lret
je
xor
outsb
cmpsb
pop
test
shll
out
nop
outsl
pushf
sub
mov
mov
lods
mov
cs
xor
dec
sub
sahf
stos
jmp
stos
lret
jmp
outsb
pop
js
negb
adc
cs
or
xor
mov
stos
out
out
sarl
xor
jmp
xor
insl
sub
xor
test
icebp
mov
push
gs
sub
lea
xor
stos
out
mov
scas
inc
scas
dec
xor
sub
pushf
das
imul
and
jne
jno
dec
sahf
scas
sub
cmp
push
stos
lret
xor
nop
jne
sub
cmp
jmp
cmc
iret
xorb
push
xchg
sbb
pop
mov
mov
xorl
mov
test
sub
js
xor
call
stos
arpl
js
in
hlt
rclb
lock
fucomi
and
mov
fcomp
jno
stos
xor
pop
fsubrs
jae
jb
xchg
cmp
movsb
pusha
and
or
lret
push
jne
data16
cmpsl
and
jo
icebp
or
jmp
and
xor
xor
mov
xor
ljmp
add
jmp
lock
shrl
aaa
lock
and
gs
mov
icebp
or
dec
xor
sub
xor
mov
pop
das
inc
lods
adc
out
jnp
ljmp
jbe
cmp
mov
rolb
dec
pop
add
fisubs
push
out
movsb
loop
dec
sub
jmp
xor
shl
stos
repnz
mov
test
bound
ja
push
es
adc
lock
mov
xor
stos
arpl
popa
movsb
ljmp
mov
pop
lret
xor
out
xlat
imul
popf
jp
push
stos
icebp
dec
jo
pusha
jb
or
movsb
js
sub
cs
cmp
xorb
icebp
lret
mov
and
sub
arpl
data16
test
stos
test
or
cmc
inc
adc
xchg
dec
ss
inc
pop
mov
mov
push
mov
jb
lret
xchg
adc
fldt
fnstenv
arpl
mov
mov
jno
inc
cld
je
xchg
jo
mov
dec
sbb
sub
cmpl
push
test
outsb
adc
into
mov
xor
jns
mov
inc
adc
or
mov
movsb
cmp
push
subl
pop
cmp
lret
ficomps
shl
xorb
jb
insl
loope
jnp
jnp
dec
sub
shlb
push
call
rorl
push
jmp
inc
les
add
aaa
ljmp
repz
xor
inc
pushf
mov
jecxz
call
pop
xchg
and
xchg
cmovb
hlt
sub
or
arpl
js
mov
movsb
mov
inc
popa
sub
jb
ljmp
movsb
sti
popa
jg
push
jo
jecxz
mov
sub
js
push
jp
mov
add
lcall
xchg
add
and
adc
mov
sbb
mov
push
loopne
inc
bound
icebp
mov
bound
mov
out
pop
shrl
adc
sub
lock
adc
outsl
push
pusha
leave
adc
shlb
fldt
jl
jno
out
pcmpeqw
cmp
push
dec
xor
scas
mov
cmpsl
sar
push
loope
jmp
sbb
loope
clc
xlat
jno
lods
sub
mov
xchg
mov
bnd
inc
inc
pop
out
dec
mov
movsl
arpl
scas
jmp
sahf
fnsave
jp
push
sub
push
sbb
daa
xchg
testb
ficompl
xchg
adc
mov
mov
call
leave
lea
sahf
xorb
test
xor
sub
mov
jo
je
outsl
add
dec
ljmp
in
pop
sub
dec
fidivl
mov
sub
jle
sbb
lods
mov
and
mov
addl
ss
adc
cmp
sub
xor
jbe
jl
push
movsb
pop
xchg
sub
and
jo
xchg
add
sub
sub
mov
jmp
mov
lcall
adcb
mov
cmc
add
shll
fimull
pushf
bound
pusha
jno
sti
xlat
xchg
inc
arpl
inc
jle
add
lods
lcall
dec
scas
mov
mov
sub
mov
out
sbb
jg
sub
das
test
bound
sub
ss
xor
sub
push
clc
or
lods
mov
inc
aam
or
insb
dec
icebp
fsubs
push
loope
push
mov
popf
movb
mov
movsl
hlt
xor
xor
repnz
insb
pop
stos
mov
and
jo
lock
pop
sub
bound
mov
insl
icebp
aaa
loope
xchg
out
nop
inc
add
lods
push
sarl
mov
jp
jns
pop
sub
mov
xor
dec
andb
js
daa
or
shrl
enter
sarb
xchg
mov
adc
xor
xor
scas
or
inc
lods
cld
gs
test
push
sub
mov
adc
cmp
repz
stc
js
adc
xor
and
mov
fcomps
aad
pushf
xchg
inc
mov
sub
xchg
scas
mov
push
mov
add
movsb
cld
push
ss
mov
arpl
xchg
sub
mov
lock
shlb
add
adc
push
bound
jle
xor
pusha
mov
push
push
movb
scas
movsb
incb
leave
das
aam
mov
jno
push
mov
movsb
mov
sti
subl
es
insb
and
push
cmc
lock
fs
aas
adc
or
ss
sbbb
sub
addr16
pop
fdivr
xchg
sahf
fdivs
pop
cwtl
mov
sub
fisubrs
lcall
lcall
push
and
jecxz
xor
adc
scas
mov
fbstp
mov
cmp
scas
mov
pushl
mov
pop
out
test
push
hlt
pop
xchg
or
ret
inc
movsb
int3
sbb
mov
mov
xor
add
and
shlb
cmpsb
faddp
or
inc
pushf
mov
shll
mov
push
ret
dec
inc
nop
and
push
mov
and
push
push
mov
push
dec
lods
imul
and
xor
jo
das
daa
add
pop
mov
inc
imull
mov
xorl
inc
xchg
repz
in
sub
sbb
fisubrs
lret
pop
inc
push
ljmp
mov
cmp
cmp
test
sub
jbe
xor
lods
aas
or
push
testb
mov
jns
and
pop
rcrb
sub
push
push
jbe
xchg
xchg
push
push
dec
sub
push
inc
out
fisubs
push
movsb
scas
cmpl
mov
mov
ret
ficoms
cmc
mov
in
xlat
pushf
and
mov
dec
add
in
aad
push
ljmp
insl
mov
xchg
push
ljmp
xor
fs
movsb
shrb
xchg
push
lahf
xchg
lods
mov
or
inc
pop
jbe
inc
imul
sbb
movsb
rcrb
scas
add
sub
pusha
scas
add
out
xchg
push
add
dec
add
push
jns
sbb
mov
sub
jb
lods
adc
sub
sub
mov
push
outsb
jae
and
dec
imul
mov
insb
rep
je
sti
cmpsl
adc
das
mov
scas
add
lcall
xor
adc
sub
adc
fcmovne
mov
ret
cmc
push
sbb
stos
jnp
repnz
sub
out
ret
icebp
lcall
cld
mov
data16
jl
xchg
out
icebp
push
out
pop
imul
xor
loopne
mov
or
push
push
lea
cmpsb
xchg
push
jle
xor
jno
sbb
or
mov
mov
mov
adc
movsl
pop
insb
popf
shrl
xchg
fld
adc
xchg
sbb
outsl
jo
and
pop
inc
jl
cmc
mov
in
sbb
xlat
insb
dec
mov
dec
sub
add
mov
jp
mov
cmp
cs
or
int
adc
cmp
add
imulb
push
sub
rol
mov
sub
jmp
mov
xchg
cs
push
jne
shll
add
sub
movsb
jb,pn
adc
jns
dec
cmc
rolb
loop
jbe
inc
iret
or
shrb
repz
cmp
dec
or
adc
loop
das
push
outsl
cs
push
mov
lods
and
cltd
test
sbb
push
in
sti
fs
call
jns
jbe
add
iret
xor
stos
xor
mov
jno
or
sub
arpl
xchg
iret
xor
cmp
icebp
and
xchg
in
cmpsb
pop
jno
imul
gs
mov
int3
movsb
add
xor
adc
lcall
out
movsb
fiaddl
xchg
hlt
dec
sti
push
mov
int3
dec
bound
jns
int3
mov
fidivs
adc
lcall
pushl
shlb
xchg
cmp
jmp
add
push
mov
pop
push
jo
ror
lcall
xor
fmulp
push
mov
inc
inc
dec
adc
inc
mov
jne
sahf
movsl
xor
mov
sub
fwait
inc
paddsw
dec
xchg
mov
push
adc
inc
xrelease
dec
xchg
inc
into
insb
into
push
icebp
decb
sbb
jae
xchg
sahf
dec
jno
jle
mov
xchg
push
in
pop
mov
outsb
sub
inc
mov
pusha
test
cmp
std
push
sar
sub
leave
dec
xchg
into
sahf
add
in
add
test
pop
mov
movsb
adc
out
cs
pop
arpl
xor
jne
out
mov
adc
cltd
lods
rolb
mov
je
out
sub
dec
jne
mov
sbb
lods
lret
adcb
je
cwtl
stos
scas
add
nop
jo
subl
sub
hlt
xchg
scas
lods
jnp
dec
or
mov
inc
sub
add
ret
je
xor
cmp
push
mov
hlt
loop
mov
dec
mov
add
jne
jae
push
and
mov
mov
push
mov
jp
notb
incl
adcb
and
movsb
add
sub
incl
push
cmc
cmovg
mov
scas
loope
mov
sub
lcall
sub
mov
or
xchg
mov
sbb
xor
push
ss
xchg
mov
jmp
pop
nop
fwait
nop
lret
xor
lret
dec
adc
jno
push
scas
adc
lret
sbb
xor
movsb
adc
xchg
jecxz
lcall
mov
fisttpl
adcl
push
jb
test
sub
jmp
mulb
xor
ret
mov
sbb
cmp
jb
fisttpl
hlt
xor
movsl
sbb
ret
or
xchg
xor
lret
pusha
shr
fs
and
pop
shrb
scas
xlat
addr16
pop
inc
push
push
mov
lds
inc
dec
mov
cs
xchg
jb
xchg
mov
add
pop
nop
lock
jb
push
imul
loopne
xchg
cmp
xchg
mov
dec
mov
sbb
ss
xlat
xor
mull
mov
movsb
fdivrs
cmp
mov
test
pop
xchg
sbb
inc
xchg
aaa
cmp
mov
imul
mov
xor
aad
add
add
dec
pusha
jb
and
stos
mov
out
adc
test
jae
mov
test
outsb
lock
mov
add
fildl
sbb
popa
shrl
nop
jne
popf
arpl
mov
frstor
pop
xor
popf
outsb
xchg
jmp
jmp
mov
loope
pop
pusha
push
adcl
sub
outsb
sbb
mov
push
add
mov
inc
mov
mov
jp
nop
mov
xchg
pop
in
push
std
aam
popf
pusha
pop
sub
aaa
scas
or
cs
lea
roll
and
insl
jno
mov
pop
movsb
inc
jae
sub
inc
aam
sbb
aas
mov
into
imull
push
mov
and
xor
mov
scas
into
sbb
sti
push
jo
sub
loopne
iret
pop
and
mov
lock
test
inc
push
add
aaa
xor
add
ja
ja
shrl
mov
adc
outsb
es
push
xchg
xchg
aad
sub
adc
xchg
fstpt
arpl
jo
jmpw
movsb
cmpsl
xchg
add
nop
jo
stc
dec
mov
out
addb
ljmp
imul
jae
jo
jmp
inc
ret
push
scas
ret
fwait
iret
and
mov
loop
xor
ja
mov
push
push
xor
push
xchg
ss
mov
xor
aam
ficomps
daa
xchg
insb
movsb
testl
in
sbb
pop
test
xlat
xor
fdiv
sub
lds
sub
popa
xor
pop
clc
add
mov
jne
adc
push
test
mov
inc
sbb
in
mov
rcll
es
mov
xchg
pop
inc
insl
lcall
push
xchg
nop
mov
inc
in
sbb
mov
rorb
xchg
mov
mov
mov
in
out
ss
icebp
push
xor
or
sub
int3
clc
xchg
lcall
cmp
xor
aas
add
lea
push
scas
test
in
push
adc
cmpsl
fadd
add
hlt
in
js
icebp
clc
lahf
and
daa
jge
rol
mov
pop
push
push
test
out
xor
mov
cmpl
sub
push
aaa
jecxz
push
aad
ljmp
jmp
jnp
lcall
adcl
lds
lock
cs
dec
shl
ja
js
push
sbb
int
sbb
in
lret
movsl
inc
cli
mov
dec
mov
mov
sub
sbbb
dec
pop
imul
stos
clc
imul
out
ljmp
insb
add
andl
shlb
insb
jmp
int
sbb
add
mov
add
sub
test
sahf
nop
jb
mov
dec
cwtl
cmp
fmull
in
xchg
into
sbb
mov
mov
outsl
adc
pusha
sub
in
mov
test
andl
or
loop
lock
or
movsl
scas
ret
div
sarb
insb
mov
notl
dec
xor
or
lods
add
stos
mov
lea
dec
mov
inc
popf
lahf
hlt
shrb
fbld
lcall
es
jnp
cmp
inc
sahf
jmp
sbb
arpl
xchg
test
push
inc
addr16
dec
mov
repz
fstps
add
or
pop
test
ljmp
int
addl
jge
iret
in
xor
sub
arpl
xorl
sbb
icebp
lcall
je
cli
decl
adcb
aad
mov
sub
mov
and
pop
addr16
mov
les
fldl2e
shrb
inc
cmpsb
outsl
mov
leave
and
xchg
xchg
lock
lcall
jb
imul
xor
mov
movsb
iret
scas
sub
iret
mov
stos
ja
es
adc
scas
inc
scas
sub
loope
das
mov
jp
jnp
scas
sub
xchg
adc
pop
icebp
rolb
and
repz
dec
es
arpl
mov
mov
mov
add
popf
xorb
scas
push
adc
sbbb
sbb
add
outsl
test
insl
sub
cmovg
xor
vmaxps
adc
adc
mov
xchg
mov
ljmp
scas
rcrl
jb
push
cli
outsl
jp
pop
pop
mov
mov
dec
jo
cmp
sbb
lods
cs
imul
imul
int3
andl
mov
js
xor
and
push
lods
xchg
rorb
mov
xor
pop
jns
subb
dec
lcall
call
cs
jne
mov
sub
into
pop
jb
xor
insl
xchg
popf
jge
out
mov
test
repnz
ljmp
add
mov
jo
or
mov
mov
jbe
repz
daa
mov
mov
dec
dec
mov
jb
xor
leave
fdivs
lcall
ljmp
push
repnz
mov
insl
rcrl
out
insl
jge
and
ljmp
je
push
lods
imul
sub
cmp
or
jo
scas
daa
ficoml
imul
mov
hlt
mov
mov
inc
cmp
stos
sub
mov
enter
mov
push
jns
push
stos
repz
stos
pop
xor
jge
mov
movsb
inc
mov
adc
xor
dec
cmp
pop
pop
xchg
test
push
repz
sbb
rorl
leave
ss
jns
icebp
das
push
flds
cmc
push
cltd
adc
push
jne
xchg
in
out
out
ja
dec
es
es
jp
mov
or
notl
ss
jns
sub
in
lahf
xchg
xor
ret
idiv
mov
arpl
cmp
push
push
inc
push
sub
push
push
push
nop
jae
fmul
push
xor
lods
cmc
lahf
fsubr
sti
fistpl
nop
mov
mov
adc
dec
mov
sub
jno
repnz
jp
outsb
fcomi
push
dec
ljmp
aam
mov
nop
adc
inc
pop
mov
mov
cmpl
add
test
mov
leave
rcpps
aas
mov
cs
scas
mov
mov
aad
push
xor
addl
daa
aad
dec
and
rcll
add
push
cs
mov
leave
push
or
lea
push
jmp
arpl
std
pmaddwd
dec
add
call
jmp
dec
push
cs
push
insl
je
adc
or
ret
stc
mov
mov
inc
cmp
clc
mov
lcall
aaa
arpl
cli
test
xor
push
sub
jecxz
gs
jp
mov
or
mov
and
dec
das
das
insb
popa
mov
lea
xor
fldt
inc
inc
push
inc
and
rcll
push
and
sub
pop
ds
in
or
mov
cltd
jmp
leave
sbb
xor
mov
rep
push
mov
ja
sbb
ljmp
mov
mov
pop
jae
out
int3
ss
xor
mov
jbe
pop
cli
fcomps
lock
out
shll
or
arpl
into
mov
mov
mov
push
sub
mov
je
cmp
in
dec
and
pop
xor
icebp
and
sti
jo
adc
fldcw
mov
pop
out
push
sub
enter
lret
sahf
repnz
pushf
divl
dec
cmpb
scas
inc
adc
int
call
jno
adc
sbbb
sub
sbb
push
sbb
mov
jbe
sbb
adc
mov
ja
stos
push
or
cmp
jno
cltd
dec
xchg
out
enter
icebp
push
push
mov
repz
lcall
stc
loop
push
mov
mov
bound
fcomps
mov
hlt
leave
or
xorl
dec
aad
imul
jnp
adc
mov
and
lods
dec
test
sub
cwtl
movsl
aas
adcl
push
insl
add
out
sbb
push
lods
mov
aaa
scas
lods
addb
mov
mov
jg
shll
movups
cmp
mov
pop
icebp
jp
pushf
sbb
jns
bound
push
fwait
and
dec
pop
sub
es
fscale
lock
pop
ja
repz
cmp
add
lods
ficoms
inc
je
push
daa
jbe
int
aad
push
sub
add
movsl
sahf
fwait
xchg
add
jno
add
xor
xchg
sahf
hlt
and
pusha
xor
xor
xchg
jne
mov
jo
xor
pop
inc
movsb
sbb
push
sub
ret
and
jne
call
or
mov
sbb
push
mov
cmp
insb
rolb
loop
pop
cmp
mov
xor
mov
inc
movsb
xlat
pop
adc
fisttpl
ljmp
daa
sbb
icebp
shr
aad
pop
rcll
iret
cmpsb
jmp
mov
push
mov
dec
gs
push
mov
mov
or
stos
sub
mov
mov
and
fsubrl
pop
loope
xor
in
pop
xorl
subb
jmp
movsb
or
bound
and
jb
mov
lds
into
lods
mov
cltd
les
mov
ror
flds
pop
cmp
aas
dec
insl
sub
jne
sub
add
stc
rorb
movsl
lea
mov
mov
loopne
js
add
push
and
ret
mov
aas
dec
lcall
push
ss
ret
jbe
stos
in
cltd
jl
lret
rcll
sbbb
xor
repz
cmpsl
fs
jae
mov
add
insl
adc
adc
in
mov
fnsave
xor
mov
adc
sub
fisubrl
lods
imull
mov
add
jl
les
jo
ljmp
cmc
xor
inc
push
repnz
sub
lcall
lock
leave
lods
je
in
add
xor
lcall
jnp
mov
inc
jb
pop
xchg
sub
mov
stos
sub
jecxz
ret
or
fimuls
and
movsb
or
fmulp
sbb
dec
pop
imul
jo
and
inc
sub
sbb
xchg
cmp
jecxz
lret
icebp
push
popf
sahf
mov
jno
jns
cmc
std
bound
push
adc
sbb
push
mov
xchg
loopne
mov
jno
fisubrs
xchg
test
push
ljmp
push
sbb
mov
lods
lods
jae
sar
adc
mov
lock
scas
movsl
push
testb
mov
scas
push
mov
cmp
enter
lret
push
lds
cwtl
xchg
pop
dec
in
sub
hlt
jecxz
adc
and
fsubs
scas
fadd
test
and
adc
dec
fwait
and
loop
test
jb
mov
lds
mov
sub
bound
inc
jb
loope
push
pop
pusha
or
ss
jbe
jno
push
insb
xor
pop
int3
dec
popa
mov
orb
cmp
mov
xchg
inc
insl
call
mov
outsl
sub
sbb
and
pop
test
and
scas
mov
cmp
xchg
out
and
scas
sbb
pusha
adc
jge
dec
ljmp
mov
pop
and
outsl
push
out
mov
sub
add
lods
lea
fsubl
jns
or
mov
out
out
push
jmp
push
pop
fiadds
jns
adc
fnstenv
jae
xchg
xchg
fdiv
dec
aam
pusha
sub
mov
cwtl
and
and
cmc
repz
aas
lds
repnz
pop
mov
jo
sar
sub
lods
xchg
pop
lds
mov
cmp
mov
xchg
clc
lds
call
mov
xor
or
sbb
push
fstps
icebp
mov
xor
movsb
push
adc
mov
dec
mov
sub
stos
cmp
enter
jge
ljmp
push
orl
jle
sbb
pop
mov
pop
push
sbb
scas
xchg
imul
jl
sub
sub
cli
mov
lods
pop
addl
jle
sub
test
push
sbb
out
stos
sub
ret
movsb
pop
push
pop
mov
push
push
js
xlat
sub
xor
mov
push
into
movsb
adc
aad
aad
pop
push
sub
and
imul
add
ljmp
xlat
sbb
xchg
dec
sbb
mov
mov
loopne
mov
movsb
xchg
jo
ret
mov
jb
mov
xchg
sub
jge
xchg
xchg
in
push
push
in
into
dec
inc
add
push
jge
in
sub
arpl
mov
pop
push
adc
or
mov
out
xchg
xor
lock
enter
test
out
sbb
daa
insl
fistl
mov
in
jne
mov
bound
sub
out
lods
push
popf
adc
push
dec
mov
repz
iret
outsl
ja
insb
dec
and
fsubrs
xor
dec
push
push
imul
stc
dec
ljmp
sub
ds
fdivr
aaa
jp
imul
mov
xchg
ja
test
data16
fcmovu
bound
out
jp
mov
cmp
jg
mov
sbb
outsb
push
dec
mov
call
jb
xor
inc
jo
ret
xchg
sub
bound
and
cmp
jne
nop
insl
sbb
fisubl
int3
push
lods
repnz
jl
inc
jo
and
mov
and
ljmp
mov
ret
jne
push
clc
xor
xor
insb
aas
cmpsl
jb
cwtl
into
pop
sub
xchg
mov
cmp
in
mov
adc
mov
sar
inc
aaa
insl
scas
sub
jo
mov
and
fsubrl
adc
pop
stos
jbe
and
cs
mov
sbb
mov
ss
rcr
sub
mov
sub
shll
mov
addr16
push
mov
sbb
jmp
sti
sub
mov
mov
mov
push
sub
mov
sbb
sub
sub
scas
dec
sub
mov
fdiv
rcll
or
andb
sub
pushf
dec
inc
andl
mov
mov
mov
cld
cltd
and
xchg
dec
sub
push
call
test
repz
adc
lods
push
pop
rolb
mov
xor
pop
test
jmp
dec
jb
loope
push
push
cmpsb
sub
and
cmpsl
decl
add
ss
pop
jle
and
and
xor
adc
push
es
push
dec
shll
lret
pop
sbb
cs
mov
xchg
lret
sbb
aam
mov
ret
adc
add
cmp
jecxz
fsts
shrb
lea
cli
mov
sub
pop
mov
jmp
ret
mov
repnz
inc
call
and
mov
loopne
les
adc
mov
xor
or
leave
mov
cmp
jecxz
daa
xchg
push
ja
shrb
mov
rep
incl
mov
iret
dec
mov
cmp
lods
sbb
push
or
aam
pop
adc
test
mov
mov
iret
dec
pushf
xchg
jno
mov
sbb
scas
cmp
mov
xor
jne
movsb
dec
inc
pop
mov
push
mov
insl
popf
ljmp
push
mov
insl
and
ret
and
xchg
dec
lea
nop
sub
out
adc
movsb
mov
and
scas
loop
adc
jg
scas
leave
je
in
push
mov
push
orl
xchg
negl
dec
dec
xor
inc
jae
rcl
dec
sub
mov
repz
push
imul
ret
int
pop
clc
rcrl
mov
sti
movsb
mov
rcr
fistpl
dec
xor
insl
shll
pushf
addr16
mov
test
icebp
dec
mov
out
cmp
sub
enter
imul
iret
mov
lcall
nop
dec
jecxz
sahf
push
test
imull
test
mov
adc
and
std
pop
fdivl
js
push
sub
sbb
push
and
imul
mov
sub
adc
jne
xor
fcmovnb
shl
pop
xchg
dec
and
mov
jle
pop
mov
pop
in
add
outsb
movsb
rorb
pop
es
mov
imul
dec
adc
inc
xor
and
cmp
jno
scas
aaa
xchg
out
andl
insl
shrl
mov
cmp
push
repz
cmp
lea
movsb
mov
es
jle
pop
out
push
ds
lret
lret
adc
lock
sub
faddl
push
mov
ss
in
xor
jne
sub
fnstsw
dec
mov
das
mov
sub
add
scas
mov
shr
loop
lcall
xor
je
inc
jle
inc
xor
sub
pusha
mov
jp
push
addr16
lods
jo
lods
mov
or
mov
sub
dec
cs
jbe
dec
jbe
fidivrs
mov
stos
imul
jns
add
mov
pop
dec
push
mov
ja
outsl
ljmp
jecxz
xchg
xlat
mov
xor
push
popa
xchg
pop
mov
push
pop
xor
fadds
xor
push
nop
sbb
dec
lods
push
cs
movsb
call
loope
hlt
sbb
int3
insb
pop
inc
adc
repz
lea
stc
cmc
push
scas
inc
mov
out
clc
inc
lods
ljmp
inc
xor
sbb
sub
xchg
sub
repz
mov
inc
repnz
mov
pop
sub
inc
lea
data16
sbb
js
ss
pop
dec
popa
xchg
dec
mov
mov
xor
sub
mov
push
dec
mov
push
repz
pop
pop
stos
and
push
inc
xor
jo
lret
sub
fcomps
loope
ret
xchg
pop
xor
xor
xor
jne
sahf
sbb
mov
mov
inc
ja
push
xchg
iret
jo
adc
pop
xor
aas
scas
dec
mov
pop
and
mov
cmp
dec
add
and
xor
sbb
fldt
inc
xchg
xor
roll
loope
and
or
mov
push
aad
sub
mov
sbb
rcr
jecxz
movsb
inc
cmpsl
xchg
jne
gs
clc
je
mov
int3
ja
popa
xchg
movsl
int
shll
shrl
scas
jno
push
ljmp
cmovle
pop
add
pusha
dec
or
xor
call
jno
inc
lahf
pop
int
cmp
sbb
test
outsl
adc
movsb
cltd
jns
andl
dec
rorl
in
or
int
jno
jo
xchg
or
xchg
jle
dec
movsb
and
stc
test
adc
push
aaa
js
cltd
loop
insb
xchg
imulb
dec
gs
mov
shll
mov
cwtl
cmpl
jge
sub
movsb
sarb
loop
es
xorb
mov
dec
ss
xor
sub
loope
jmp
repz
in
pop
cmp
repz
scas
xor
iret
and
fs
subb
rcrb
sub
and
or
mov
orb
lods
imul
aaa
movsb
push
xchg
mov
fcoms
push
fidivl
push
sub
ret
or
ja
push
and
cmpsl
test
inc
pop
or
test
incb
mov
insl
add
jg
jne
stos
shlb
mov
scas
lret
fs
mov
inc
mov
cmpsb
lea
push
fnstenv
dec
movsb
push
dec
push
inc
adc
lods
jns
movsb
push
andb
loope
xchg
arpl
adc
popf
or
mov
insl
cli
or
dec
sbb
push
dec
push
clc
fwait
ljmp
in
ret
popa
sbb
or
mov
hlt
lds
sub
test
xchg
adc
pop
es
loope
mov
outsl
add
mov
mov
ret
call
and
insl
pushl
pushf
jnp
sbb
jns
sub
mov
fdivrl
sub
mov
fisubrl
sarb
xor
hlt
mov
cmp
iret
lods
shll
sti
sbb
push
stos
outsl
sbb
movsb
mov
adcl
shrb
pop
imul
or
sub
sub
mov
repz
and
push
pop
movsb
hlt
ret
sarl
mov
pop
mov
add
mov
pop
push
iret
sbb
lcall
dec
das
out
mov
mov
pop
sbb
mov
cmp
lea
cld
mov
add
ljmp
xchg
and
test
mov
aaa
mov
call
push
rcl
jecxz
pusha
push
xchg
movsl
enter
bound
pushf
push
push
stos
jno
or
and
sub
data16
inc
daa
adc
inc
into
adc
fiaddl
pop
iret
outsl
xor
sub
push
fcomi
xchg
scas
dec
or
jae
outsl
lret
mov
mov
sub
jo
xor
cmp
loop
ljmp
or
je
mov
jp
pop
test
or
push
push
lcall
mov
shll
lods
jae,pt
mov
fisubrs
xlat
adcb
xchg
mov
or
repnz
pushl
inc
jno
rcll
mov
inc
inc
mov
pop
inc
add
aad
stos
mov
loop
add
mov
mov
stc
mov
loopne
add
or
jl
outsl
inc
in
push
dec
and
cwtl
pop
ret
cld
pusha
mov
mov
out
pusha
add
pop
inc
add
xchg
out
iret
imul
xchg
mov
push
insb
insb
popf
adcb
inc
or
outsb
jbe
push
cmp
enter
incl
stos
push
mov
cmp
sbb
mov
xor
fistpll
popf
adc
jge
mov
and
and
imul
mov
fildll
mov
test
fcomp
daa
movsb
idiv
mov
pusha
xor
call
lea
stos
in
icebp
push
inc
mov
sub
xchg
mov
mov
lcall
cmp
xchg
in
fdivp
outsl
mov
push
mov
mov
cmp
xchg
imul
insb
cs
mov
push
jle,pn
dec
enter
add
movsb
pop
insl
adc
adcb
mov
xchg
xor
push
insb
lcall
aam
call
add
in
xor
or
inc
outsb
sbb
dec
or
pop
sub
or
push
fdivs
dec
cmp
bound
repz
and
pop
xchg
cmpsb
sahf
lods
mov
xor
sub
cmpl
xchg
jne
pusha
shrb
ss
out
or
div
fs
xor
cmovae
mov
xchg
lods
movsl
movaps
lods
int
pusha
in
and
or
mov
jl
or
pop
mov
int3
pop
sahf
cmp
inc
xchg
orb
inc
push
push
xor
out
push
jns
icebp
scas
enter
lods
or
fwait
out
cs
push
aaa
scas
scas
sub
jb
pop
loop
push
pushf
push
sahf
xchg
bound
imul
xchg
mov
pop
movsb
mov
pusha
inc
add
scas
ljmp
movsb
sbb
push
sbbb
dec
dec
xchg
inc
imul
loope
test
cmc
mov
mov
jns
mov
mov
scas
jnp
mov
pusha
cmp
in
sahf
xchg
lds
imul
cmp
out
dec
dec
fmul
pushf
popa
cwtl
xchg
in
mov
fcomi
out
jae
adc
mov
xchg
xchg
aad
call
lods
scas
lret
xchg
mov
mov
mov
movsl
fisubrl
or
lds
mov
or
adc
or
inc
faddl
push
xchg
sarb
and
pushf
add
or
pop
sbb
sbbb
call
insl
xor
and
repnz
leave
mov
jae
jno
push
movl
imul
add
sbb
das
mov
pop
and
jp
cmp
loop
push
and
insl
push
outsb
hlt
push
imul
xor
imul
push
or
and
std
sbb
and
cs
push
mov
pop
outsb
mov
push
dec
out
sub
nop
inc
cwtl
add
mov
sub
fsubs
xor
xor
jns
adc
iret
mov
jl
cld
inc
fs
movsb
inc
mov
sbb
mov
sub
scas
mov
lds
aam
ljmp
adc
aas
xor
orb
outsl
jno
jp
mov
insb
dec
js
pop
push
je
mov
frstor
aas
roll
sub
lcall
mov
mov
push
push
pop
mov
es
mov
mov
xor
cmp
test
movsb
rcrb
sbb
sub
gs
out
shlb
dec
lods
mov
aaa
xor
jg
sar
shrb
jns
clc
mov
dec
jno
push
jb
jno
aam
mov
js
addl
xor
lret
and
dec
push
scas
inc
enter
xchg
or
aad
repnz
fsts
sub
mov
shll
loope
jbe
adc
xchg
adc
mov
int3
scas
dec
or
jmp
test
jbe
or
sub
xor
xchg
xchg
mov
cwtl
push
mov
mov
movsb
inc
or
mov
dec
scas
add
push
sarl
mov
out
sbb
xor
stos
pop
jae
jno
cmpsb
push
subb
stc
sub
idivb
lahf
fmull
mov
cmp
push
pop
inc
jg
pop
mov
mov
ss
xchg
adc
psubusb
addr16
outsb
dec
pusha
cs
sti
xor
cltd
or
movsb
mov
cli
jns
ljmp
mov
sti
xor
push
push
jno
bound
mov
subl
jmp
inc
mov
imul
xor
mov
sub
ljmp
pop
pop
fldt
cltd
sahf
lcall
mov
repz
jg
cwtl
inc
mov
sub
arpl
pop
lcall
decb
dec
push
iret
outsb
push
scas
fs
loope
inc
mov
enter
add
push
int3
cld
stos
mov
and
mov
daa
mov
das
repz
repnz
and
mov
pop
mov
mov
movsb
mov
sub
push
gs
jp
push
ret
pop
hlt
icebp
ljmp
lea
or
jecxz
xchg
mov
lods
adc
addr16
pop
push
or
insl
sahf
test
cmp
jge
iret
scas
mov
mov
inc
mov
mov
in
fbstp
nop
xor
fiaddl
popf
icebp
iret
dec
mov
or
ljmp
fmull
add
adc
sub
mov
scas
or
mov
jle
fdivrs
gs
jne
adc
jb
orl
cs
sub
movsb
pop
add
loopne
fmuls
sub
js
imul
xchg
push
out
test
mov
adc
leave
xchg
movsl
jg
mov
lds
or
pop
shl
negb
shr
aaa
repnz
push
xor
popf
das
jl,pn
push
ljmp
mov
mov
cmpsb
aas
dec
jmp
sub
jns
jnp
loope
movsb
popf
mov
push
ret
insl
lret
dec
inc
push
sbb
xchg
mov
push
xchg
pop
jns
mov
in
xchg
mov
and
push
out
fidivs
or
call
push
insb
xlat
lds
lods
call
sarb
mov
loop
sbb
out
add
xchg
ss
aam
add
sub
sbb
pop
push
movsl
in
fstps
sub
ret
or
sbb
xor
cmp
cmp
cld
mov
aam
imul
cmpsb
xor
pop
in
push
rcl
dec
sahf
mov
out
pop
aaa
stc
movsb
out
stc
mov
stc
dec
push
cmp
sbb
popf
sbb
cli
push
mov
clc
pop
adc
popl
cmpsb
push
cmpl
and
mov
lds
mov
pop
inc
lea
add
adcb
pop
pop
je
filds
aas
insl
adc
pop
repz
in
lods
lock
scas
xchg
dec
fsubl
jecxz
fsubrl
in
add
hlt
bound
subb
movsl
loopne
in
pop
sbb
xchg
sub
out
pop
xlat
inc
lret
push
sub
pop
mov
sahf
scas
dec
mov
xchg
scas
mov
pop
je
out
cmp
sbb
pop
cmp
imul
fstps
mov
pop
icebp
nop
xchg
cmp
lods
in
clc
out
nop
test
sub
mov
stos
mov
sub
cmp
int
outsb
imul
movsb
jo
dec
lret
mov
push
add
cltd
jmp
mov
enter
cmp
cmpb
andb
mov
push
sbb
out
in
jmp
stos
fwait
jge
xchg
push
jp
out
lods
iret
mov
add
dec
mov
scas
jecxz
mov
xchg
imul
mov
cmp
repnz
aaa
and
cmp
call
push
fimull
lcall
lret
add
lods
jle
sub
movsb
addr16
or
mov
fnstenv
jmp
cmpsl
xchg
std
sahf
mov
mov
js
in
or
dec
rcrl
rcrl
fucomp
xchg
scas
stos
das
imul
jl
or
jg
push
lods
jmp
mov
jb
sti
ss
pop
les
out
mov
mov
rclb
repnz
ffreep
dec
and
cli
jl
mov
mov
pop
outsl
insl
dec
and
stos
xor
mov
pop
jge
icebp
push
movsl
stc
sbb
movsb
icebp
lahf
pop
cmpsb
push
push
and
xchg
dec
rep
mov
mov
iret
dec
jae
add
cmp
sbb
lods
iret
popa
lret
mov
cmp
into
inc
movsb
mov
sub
pusha
aaa
icebp
push
outsl
es
fisubrs
adc
mov
push
jae
pop
mov
inc
movsl
xchg
lock
enter
sub
jnp
push
xlat
aad
mov
lods
inc
add
sub
lods
xor
fistl
pop
fdivs
sub
push
mov
xchg
mov
or
jo
call
push
faddp
xor
addr16
jge
sbb
lret
out
es
dec
pop
sub
mov
sub
jb
negb
call
pop
loop
test
xor
mov
popf
fwait
mov
es
arpl
negl
push
leave
dec
dec
lret
sbbl
push
repnz
jae
xchg
mov
and
jae
adc
mov
pop
xor
xor
into
pop
fimuls
call
xor
mov
rcrl
and
fstpl
ret
sarb
jmp
ljmp
bound
inc
xorl
inc
xchg
mov
cmp
negl
ret
xchg
pop
cli
icebp
outsl
pop
mov
xchg
inc
mov
pop
xor
js
rcll
xor
aad
jns
or
test
push
dec
fildll
scas
mov
mov
ljmp
sti
pusha
int
movsb
test
adc
adc
lea
dec
outsl
bound
sub
mov
dec
fadds
arpl
test
out
mov
jmp
test
rcr
divb
push
push
cs
jb
aaa
sub
and
mov
dec
ret
adc
cmp
outsb
out
sub
ja
and
xchg
pop
lods
push
mov
pop
jo
stos
lcall
icebp
jne
dec
icebp
pop
mov
mov
outsb
xor
loope
sahf
aam
add
add
adc
mov
push
movsb
xor
sub
ret
test
pop
or
cmp
aad
fildll
mov
jmp
sub
dec
in
ss
fwait
aaa
test
push
scas
or
out
pop
aaa
mov
pop
jp
hlt
adc
insl
into
add
mov
push
shrb
and
ljmp
cmp
ljmp
clc
pop
sub
fdivs
jge
bound
scas
inc
xchg
jne
outsb
lods
and
cmp
ret
inc
mov
stos
adc
ds
sub
push
jge
and
repnz
es
cmc
test
cmpsl
push
ret
adc
scas
lcall
jo
mov
lods
call
inc
fnstcw
lds
icebp
or
stos
out
sub
jns
dec
sub
gs
dec
js
jmp
mov
dec
jno
mov
lods
lret
fiaddl
sub
and
pop
ret
shll
push
movsb
dec
push
shrb
sbb
xchg
js
ss
fmull
xor
sub
mov
push
inc
cmpsl
push
sub
add
rolb
mov
bswap
xchg
ficoms
lock
mov
push
cmpsl
mov
popf
adcb
mulb
mov
cmp
ficomps
cmpsl
cli
sub
fidivrs
ljmp
in
mov
data16
push
push
dec
sub
jno
push
in
push
and
mov
mov
fs
jb
dec
dec
jp
hlt
mov
in
add
sub
mov
adc
aas
xchg
mov
fdivs
pop
or
mov
push
mov
fistl
bound
les
movsb
out
mov
jle
mov
test
mov
sbb
inc
movsb
xor
sub
cli
pusha
sbb
sub
lea
cld
xor
lret
jo
notb
das
jb
jg
addr16
test
popf
and
std
daa
lea
cmp
fs
lods
out
imul
adc
pop
ljmp
or
into
insl
iret
out
mov
pushl
repz
inc
stos
jp
in
mov
cwtl
rcrl
sub
mov
mov
push
cmp
sbb
sbb
daa
push
sbb
mov
sub
sub
mov
dec
es
or
dec
je
pop
sahf
pop
imul
pusha
addr16
sbb
mov
lret
out
clc
pushf
div
mov
jge
sahf
jbe
je
mov
lea
outsl
push
xchg
xchg
mov
call
bound
js
xor
je
push
stos
adc
jge
bound
outsl
adc
outsl
mov
mov
dec
adc
adc
push
mov
idivl
jge
stos
jb
mov
addps
mov
mov
lds
ret
int
ret
cmp
insb
test
sub
stos
lret
jb
mov
lcall
add
and
test
sub
and
cld
push
xchg
out
jnp
xor
insb
lahf
lods
mov
or
pushf
push
movsb
sbb
les
pop
arpl
fnstcw
out
mov
pop
lcall
mov
xchg
mov
clc
or
push
or
out
cmp
pop
push
sub
mov
pop
pop
cmp
ljmp
mov
and
dec
sahf
adc
rorb
push
mov
idiv
xor
mov
cmpsl
jmp
lea
sub
and
inc
xchg
pop
jecxz
mov
add
and
mov
and
repnz
sbb
push
clc
adc
mov
inc
adc
pop
mov
divb
push
xchg
add
adc
fisttps
incb
mov
pop
movsb
in
subb
sbb
mov
inc
add
dec
xchg
sbb
pop
jmp
repz
adc
jnp
xchg
dec
int
mov
jp
decb
icebp
sub
dec
ljmp
xchg
mov
mov
jmp
add
mov
mov
adc
enter
cmp
adcb
icebp
into
pusha
mov
mov
dec
cs
jmp
fistl
lods
rclb
mov
inc
cmp
adc
dec
and
cmpsb
cmp
sar
mov
dec
jecxz
out
shrb
cli
lock
adc
xchg
push
popa
scas
mov
mov
lock
mov
and
xor
das
sbb
cmpsl
adc
xchg
xchg
dec
dec
mov
lods
xor
repz
inc
roll
cmp
in
lods
movsb
and
fcomps
lret
push
stos
and
sbb
cs
sbb
int3
add
lods
ss
sbb
sub
jmp
mov
addl
jmp
lods
ret
xchg
add
negb
orb
mov
mov
or
data16
fld
loope
mov
or
push
movsb
outsb
call
add
push
or
mov
movsb
inc
fmul
stos
and
jb
lret
jle
cmpsl
shrl
sub
scas
ljmp
arpl
inc
lahf
movsl
adc
dec
nop
repz
lock
hlt
cmp
cmp
jae
rorl
out
cli
leave
sbb
outsb
mov
movsb
aad
out
in
jp
sub
cmpsl
mov
stos
or
ljmp
jb
outsl
fwait
fs
and
mov
jbe
ret
outsb
mov
mov
divl
and
jo
add
sbb
mov
jo
mov
lea
cli
lods
loopne
jl
push
faddl
sti
icebp
xor
sub
xchg
int
inc
mov
aas
xchg
int3
cvttps2pi
rolb
mov
loope
sub
pop
and
xchg
mov
xor
pop
orps
xchg
inc
jb
jbe
xor
addr16
mov
jae
xor
cld
stos
cmp
push
in
adc
ret
lahf
iret
shlb
pop
mov
cmp
nop
ljmp
stos
push
mov
test
in
test
arpl
andb
popf
fdiv
jno
movsl
push
and
iret
out
push
mov
imul
mov
scas
movsb
or
jns
push
add
inc
mov
mov
jb
dec
bound
aaa
sbb
stc
subb
xor
lock
in
xchg
fisubs
popa
pushf
das
fsin
xor
mov
clc
xor
xchg
clc
mov
aaa
rol
aas
repnz
xor
pop
aaa
jl
imul
repnz
stos
sti
push
test
push
jp
jo
mov
push
iret
aaa
and
in
addr16
push
lahf
std
repnz
in
gs
out
sbbb
aas
fwait
in
aaa
pop
ljmp
test
add
pusha
xchg
xor
pop
sti
incl
js
pop
sbb
mov
cld
sbb
pop
sub
insb
sbb
dec
gs
lcall
rcrb
js
jb
mov
lcall
call
xor
mov
iret
mov
sarb
xchg
movsb
dec
jle
xor
pop
iret
mov
cmc
jo
pop
inc
stc
jnp
scas
mov
pop
jp
push
push
shrb
sub
in
add
cmpsb
mov
mov
mov
fsts
mov
bound
push
push
in
sub
sbb
and
lret
and
popa
lock
sahf
adc
outsb
fsubrl
inc
or
add
lods
xorb
mov
inc
das
inc
or
mov
sub
inc
js
popf
sub
or
add
mov
sub
dec
cmp
mov
mov
sbb
xchg
jae
jecxz
cli
or
mov
fistpll
sbb
icebp
xchg
lcall
pusha
insl
mov
sub
xchg
xor
loope
xchg
clc
push
mov
ret
mov
popf
sbb
ja
cmpsl
xchg
xor
aad
pop
ret
rol
in
xchg
aad
pop
add
aad
or
imul
pop
sub
fadd
aam
ss
lods
cmp
mov
cmp
test
mov
loopne
add
cmp
jne
mov
test
mov
xor
shr
test
gs
inc
pop
xchg
mov
mov
mov
cs
cmpl
jbe
pop
sub
pop
xor
enter
insl
or
cmc
jmp
fdivs
sub
mov
ret
cs
popl
xor
shrl
loopne
es
lret
loop
shlb
pop
xchg
or
push
jp
inc
dec
subb
push
ret
and
mov
test
push
jne
dec
mov
data16
rcll
ljmp
jb
aaa
das
sti
add
mov
pop
pop
add
inc
mov
inc
inc
fcmovnu
pushw
inc
xor
loopne
call
outsb
in
xor
shll
xchg
pop
es
inc
cmp
out
lcall
fidivrl
ret
jo
xchg
inc
cmpsb
pminsw
or
clc
push
scas
cmpsl
xor
pusha
pop
mov
xor
sub
pop
push
hlt
jns
or
out
xchg
jmp
mov
mov
outsl
dec
lcall
movsb
sbb
insb
pop
scas
scas
jge
int
idivb
cltd
xchg
or
ficomps
aam
jecxz
out
dec
loope
mov
cmp
xor
clc
push
add
sub
mov
cmp
jnp
or
dec
leave
sbb
lods
jg
mov
mov
lock
inc
and
pop
sub
lea
sub
loope
xchg
xchg
add
sbb
mov
loop
xchg
mov
cli
or
scas
rorl
mov
mov
loop
sub
loope
push
sub
imul
dec
jbe
push
jmp
mov
mov
xchg
sub
cmpsb
sbb
sub
aam
cld
js
mov
mov
push
inc
cmp
jb
mov
imul
int3
adc
jg
inc
gs
bound
scas
ret
rcrl
mov
mov
mov
jno
push
xchg
out
insl
int3
std
inc
add
fisttps
or
push
or
scas
repnz
push
imul
addb
sbb
shll
insl
mov
lods
cli
sbb
jno
aam
in
lahf
loope
push
out
pop
pop
movsl
movsb
es
inc
jbe
mov
testb
test
mov
cs
xor
inc
jnp
xor
test
mov
inc
push
xor
out
xchg
mov
jb
repz
insl
in
out
fdivrp
stos
add
add
pusha
aas
sub
fsubrp
push
nop
gs
sti
scas
sbb
shrb
cltd
lods
jecxz
and
ljmp
push
aas
dec
pop
daa
das
adc
fxch
push
mov
push
fs
jo
adc
mov
iret
mov
xor
mov
in
scas
imul
nop
push
xchg
add
dec
mov
sub
mov
inc
jmp
aam
add
mov
sbb
pop
lock
movsb
xchg
cmp
mov
jp
rcrl
js
lahf
stc
cmp
js
cs
movsb
push
sbb
xorl
pop
addr16
clc
cmpsb
xchg
and
test
fsubl
out
push
bound
jne
mov
dec
jl
push
mov
enter
aaa
mov
jno
movsbl
xor
imul
insb
or
or
dec
lret
jne
push
jp
insb
insl
or
jbe
fidivrl
std
out
xor
cltd
jae
lods
jmp
shll
call
push
mov
pop
stc
popa
loope
push
cmpsb
cmp
ret
test
sahf
xchg
jp
mov
adc
jno
mov
push
ret
lea
push
push
xor
cmp
push
scas
nop
pop
xchg
mov
xor
xor
repz
adc
adcl
popl
dec
out
mov
jmp
inc
and
fcmovne
out
or
xor
pop
dec
push
xchg
xchg
sbb
sbb
and
inc
pop
sti
sarl
imul
cmp
or
xor
or
dec
dec
mov
and
push
push
push
inc
out
sub
stos
mov
in
dec
ljmp
mov
sbb
pop
sub
jb
mov
cmpsl
repz
daa
stos
push
jno
jo
sahf
xor
loope
lock
mov
fsub
inc
mov
call
add
cs
xlat
sub
jb
push
test
sbb
stos
jo
pop
mov
mov
xchg
sbbb
repnz
jae
or
and
stc
nop
push
xchg
sub
insl
stos
fstpt
jnp
mov
cmpsb
add
mov
nop
loopne
push
push
mov
jbe
in
repnz
divl
lods
mov
fsubrl
mov
movsb
dec
nop
push
insb
jle
pop
jle
aam
es
mov
scas
or
add
jns
arpl
sub
pop
lcall
mov
inc
mov
popf
cmpsl
xor
rcll
mov
mov
iret
repz
mov
or
mov
fbld
cltd
lods
xchg
xchg
bound
mov
in
test
orl
repz
xor
mov
test
mov
pop
sub
mov
inc
jbe
stc
sbb
push
aaa
lods
inc
adc
or
push
ljmp
sub
icebp
or
movsb
jge
jae
push
jnp
das
xchg
sub
into
movsb
fwait
pusha
adc
dec
pop
push
or
pop
push
popa
dec
add
cmpb
jno
loope
cwtl
cmpsb
insb
iret
ds
out
push
cltd
les
cmpsl
cmp
repz
xor
mov
sub
dec
dec
add
lods
jle
outsb
sub
dec
adc
repnz
xlat
pop
mov
xchg
jne
leave
pop
jno
cmpb
xor
mov
pushf
orb
lock
push
xor
push
inc
pop
cmp
add
and
mov
bound
sbb
loope
ja
jns
inc
lods
push
jno
lds
xchg
cmp
add
jp
pusha
mov
mov
cmpsl
ja
and
andb
adc
mov
loope
xchg
mov
sub
pusha
insb
mov
pop
mov
sub
adc
mov
lea
xchg
sbb
bound
popf
sub
movsb
inc
pop
add
and
mov
or
add
jns
rorb
repz
sbb
das
lods
xchg
or
cmp
jbe
cmp
gs
fldcw
inc
data16
fsts
int3
push
loopne
out
mov
arpl
sbb
lea
repz
sub
sbb
sub
scas
sub
repnz
push
outsb
aad
sbbl
mov
pop
adc
push
sbb
jnp
rcl
out
es
adc
dec
rcr
bswap
xchg
push
mov
adc
nop
sbb
push
pushf
dec
sub
xchg
or
out
jno
lods
mov
cmpl
mov
movsb
bound
mov
xchg
das
mov
mov
imul
add
pop
ret
mov
loop
mov
stc
pusha
cmp
in
je
pop
dec
hlt
mov
xor
ss
jns
addl
jmp
out
scas
mov
or
das
aam
adc
call
sahf
xchg
icebp
sbb
add
test
outsb
jmp
sbb
ds
xchg
inc
rorb
aas
xor
shll
loope
mov
fmul
cmpl
nop
std
test
pop
hlt
mov
mov
hlt
nop
repz
or
call
cmpsb
repnz
push
mov
or
lret
xchg
in
into
ss
pop
sub
xchg
mov
movsb
add
pop
ja
and
jecxz
sub
adc
mov
dec
push
movsb
lds
and
push
mov
xchg
jb
sbb
movsb
cmp
add
jo
repz
mov
xchg
repnz
push
lahf
cmp
enter
punpckhdq
lods
add
and
mov
fcompl
inc
int
outsb
test
lods
fbstp
jle
mov
aaa
fsincos
pop
or
movsb
lods
jecxz
mov
mov
sub
loope
push
lods
js
mov
dec
mov
call
inc
sbb
inc
inc
sub
dec
cmpsb
scas
int
cli
jb
mov
das
rcrb
pop
cmp
and
xor
in
ss
std
ret
pop
out
cld
jb
push
inc
push
in
pusha
repz
xor
daa
xchg
jp
sub
ds
sub
adc
fdiv
fisubrl
in
fistl
adc
arpl
notb
mov
sbbl
dec
mov
es
mov
test
clc
push
mov
mov
stos
mov
xchg
imul
fisubs
sub
dec
leave
xor
andl
test
in
sub
stos
pushf
xchg
clc
xor
mov
sbb
in
fwait
mov
rclb
in
lret
js
and
jb
jl
cs
sbbb
cli
lcall
xor
xchg
imul
out
sub
dec
sub
outsb
or
sarl
scas
jecxz
mov
cli
aaa
pop
sbb
insl
sub
int
push
dec
cmp
xchg
mov
cmpsl
rorl
mov
xlat
mov
stos
push
lods
mov
pop
push
lods
cwtl
add
inc
out
scas
lret
gs
ljmp
jg
mov
xchg
clc
imul
out
sbb
push
push
ret
stos
rorl
sbb
pop
lea
jecxz
jmp
mov
mov
ret
scas
stos
idivb
mov
aaa
xchg
jo
adc
mov
sbb
mov
mov
jno
sbb
push
repnz
ljmp
mov
jmp
sub
lods
add
inc
mov
pop
dec
sbb
xor
mov
xor
xlat
xor
dec
jge
stc
data16
outsl
dec
pop
mov
lret
loopne
lret
mov
adc
fdivrs
dec
sub
cmp
jge
cmc
xchg
inc
dec
cld
aaa
inc
mov
adc
adc
jbe
das
test
lods
mov
jno
pop
jae
jb
xor
leave
andb
sarb
xor
in
out
inc
mov
sarl
push
jge
in
jmp
enter
outsl
jge
sarb
push
pushf
cmp
jb
dec
jb
flds
and
add
push
dec
popa
int3
sub
in
scas
bound
inc
out
jmp
mov
push
cmpsb
loope
in
mov
xchg
lcall
push
mov
jecxz
add
push
dec
add
sub
mov
mov
jns
push
mov
xchg
pop
mov
ss
jmp
mov
in
sar
out
fbstp
cld
xchg
dec
mov
outsb
enter
jge
subl
adc
xchg
xchg
decl
sub
mov
xor
or
xor
inc
jno
sbb
imull
in
jno
fsubrl
movaps
loopne
jne
outsb
mov
stos
imul
lahf
pop
dec
push
mov
out
xor
add
test
xchg
xchg
pop
xchg
es
into
addb
loop
xorb
arpl
push
xchg
stos
js
popf
xorl
adc
and
sub
testl
mov
imul
mov
js
mov
pusha
xor
cmpsl
mov
fcomi
dec
mov
mov
pusha
popa
push
cwtl
push
loopne
pop
idivb
outsl
jo
push
jl
movsb
int
mov
sti
lcall
push
je
jmp
popa
sbb
jmp
into
add
and
mov
jl
mov
das
repnz
into
xor
pop
pusha
cli
or
aad
movsb
aas
mov
rolb
out
push
daa
cmpsb
mov
cld
sub
adcl
xchg
outsb
mov
mov
sti
push
or
movsb
ror
jne
leave
pop
js
adc
sub
sbb
mov
mov
mov
xlat
mov
testl
push
xchg
sbb
sahf
loope
push
fnstsw
and
mov
sub
jb
fnsave
mov
dec
sbb
outsl
pushf
rep
sbb
xlat
lret
push
leave
xchg
adc
cmpsb
lods
mov
xor
push
movsb
icebp
or
je
mov
xor
or
pop
mov
mov
xchg
adc
sub
sub
movsb
xchg
xor
lods
dec
out
adc
shll
lcall
iret
sbbb
sbb
lcall
repnz
mov
ret
stos
mov
jle
shll
jge
out
or
xchg
stos
and
lods
mov
mov
jne
xor
sub
movsb
sub
xlat
xchg
jns
push
adc
sahf
or
sbb
int3
push
cmpsl
push
sbb
imul
dec
jmp
enter
and
hlt
or
inc
cld
xchg
bound
pop
sahf
out
xor
hlt
mov
sub
dec
mov
pop
inc
ja
ds
or
mov
subl
mov
std
dec
add
pushf
int
sub
rclb
cli
mov
or
movsl
into
sbb
mov
jns
or
lds
ss
pop
pop
mov
mov
mov
lret
repz
out
imulb
bound
mov
inc
push
lock
push
es
sub
add
leave
roll
loope
test
sarb
add
mov
mov
stos
inc
push
cmp
sub
xor
int3
jmp
inc
fimull
adc
and
pop
fsub
inc
adc
and
add
pop
push
lcall
sbb
dec
fstpl
dec
sbb
insb
push
out
xor
cltd
push
imul
bound
adc
fs
cwtl
andb
stos
jbe
sub
sub
lock
dec
pop
push
cmp
negb
das
jecxz
lods
inc
jno
pop
push
lcall
out
cltd
in
lcall
int
repz
inc
jl
mov
mov
movsb
fisubs
pop
ss
xchg
cmc
mov
sub
lock
mov
pop
jg
lahf
inc
mov
jno
pop
cmpsb
xor
adc
mov
adc
aam
popa
sbb
jne
and
inc
xor
std
cs
mov
scas
mov
or
pusha
cs
xchg
notb
stos
mov
sub
gs
pop
in
aaa
bound
jmp
cmp
and
adc
mov
movb
xchg
cmp
jle
aad
sahf
imul
adc
sub
jae
and
pop
aad
loop
jge
xorb
pop
mov
inc
or
xchg
pop
icebp
clc
andl
hlt
push
jecxz
jns
rcll
or
dec
aas
or
xor
jno
inc
fucomip
gs
lea
sbb
movsb
inc
mov
xor
xchg
pusha
mov
orb
test
and
mov
clc
loopne,pt
push
sbb
xor
jbe
dec
scas
mov
push
or
jecxz
movsl
push
lock
repz
ds
ljmp
loopne
cs
mov
add
imul
data16
adc
stc
sub
rcll
or
inc
sbb
aaa
mov
inc
add
pushf
and
loope
mov
mov
or
addb
repz
popf
outsl
repz
ret
and
aaa
ja
sbb
push
aas
mov
movsb
mov
dec
inc
ret
movsb
rcll
mov
xchg
sti
cmpl
scas
lcall
imul
pop
cmpsb
popf
jns
inc
cmp
outsb
movsb
sub
cmp
test
jb
sbb
push
popf
mov
into
push
ja
ss
cmp
leave
mov
dec
ljmp
sub
cmc
jg
in
inc
xchg
hlt
pop
adc
xor
xor
movsb
jmp
call
xchg
scas
ss
inc
mov
into
fcomp
pop
fistps
mov
aaa
sbb
adc
or
mov
pop
mov
xor
bound
and
jecxz
xor
std
out
sub
push
inc
dec
scas
out
mov
sub
push
mov
jb
push
repz
xor
mov
mov
cmpsb
sub
stos
int3
push
jl
fsubrl
movzwl
add
sub
mov
adc
jb
mov
out
mov
or
pop
xor
jmp
gs
rclb
data16
sub
ljmp
decl
movb
ret
movsb
aaa
cltd
bound
lret
inc
mov
out
adc
das
popf
sub
jb
in
call
mov
adcb
sbb
cmpsb
rcll
mov
push
nop
jecxz
sahf
sbb
and
imul
mov
stos
mov
jno
ja
sub
sbb
iret
loop
mov
cs
sti
cmp
push
xchg
scas
arpl
push
sbb
mov
jle
aad
outsl
push
and
cmp
sub
pop
pop
xchg
fldcw
filds
xchg
ljmp
xor
scas
sbb
sbb
cmpb
in
jnp
cmc
mov
imul
push
in
and
xorl
into
in
stos
xlat
mov
add
pusha
repz
pushf
mov
dec
popa
cmp
xor
jns
jbe
stos
icebp
imul
cmc
lret
in
add
jecxz
rorb
mov
pop
dec
lods
jnp
sahf
dec
movsb
into
fiadds
mov
cld
pusha
rcrl
push
cmp
inc
cld
add
sbb
cmp
ficoml
insl
jns
inc
in
xchg
mov
cli
sbb
test
or
scas
pushf
in
sub
mov
cwtl
outsl
push
jmp
dec
bound
shrl
or
cmp
lcall
cld
inc
aam
lea
shrb
shlb
mov
imul
add
insl
iret
sbb
lods
push
push
fnstenv
dec
jb
push
push
pop
lcall
sub
mov
xchg
dec
cmc
add
jmp
push
rcll
xlat
out
lods
enter
jo
mov
sub
xor
es
pop
mov
pop
call
sbb
inc
mov
lcall
pop
or
lods
xchg
mov
arpl
and
sub
push
bound
pusha
mov
xor
xor
jno
stos
inc
push
xlat
push
fnstenv
cmpsl
dec
gs
inc
add
dec
or
rcll
iret
sub
sub
cli
mov
push
cmpsb
pop
stos
fsubl
cmp
jne
xchg
fisubrl
inc
je
push
jo
in
lahf
pusha
push
repz
mov
push
js
mov
dec
cmpsl
sub
ljmp
sub
not
push
xchg
cmpsb
sub
xchg
fisttpl
mov
sbb
fisubrl
adc
idivb
xchg
sub
ret
movsb
in
sub
pop
test
mov
adc
scas
out
and
decb
inc
fstpl
cs
repz
adc
fnstsw
push
movsb
push
and
das
jb
stc
sbb
out
fnstcw
dec
push
mov
mov
sbb
jp
push
jnp
and
sbb
mov
out
stc
mov
out
or
pop
call
bound
stos
dec
in
lock
mov
pusha
shll
popf
lods
jge
imull
sub
int3
callw
xorb
hlt
icebp
fimull
iret
mov
movsb
sti
movsl
dec
mov
rolb
inc
fbstp
fbld
mov
and
dec
xchg
mov
bound
lock
jmp
inc
ljmp
add
imul
sub
aaa
push
out
dec
pop
pop
inc
cld
mov
pusha
popf
push
sbb
xchg
lock
mov
jp
cmpsl
icebp
hlt
mov
xor
fs
lea
or
xor
jo
xchg
lds
mov
mov
push
sbb
fcmovnb
mov
cmpsb
jne
jg
jns
xchg
mov
mov
push
push
pop
popa
pop
xchg
cli
cli
push
xchg
mov
pop
sti
adc
mov
stos
xchg
xchg
xchg
sub
dec
jecxz
adc
fsubrl
sub
aam
sub
sub
fadd
xchg
aaa
xchg
mov
push
sbb
cmpsb
outsb
dec
jp
jne
andb
cwtl
xor
sbb
cmp
mov
filds
clc
mov
stc
push
dec
lret
jae
pop
imul
sub
cltd
roll
lret
mov
fs
mov
mov
add
jae
push
outsl
mov
sub
sub
mov
cmp
and
shll
jns
push
sbb
pop
jge
enter
das
xchg
aam
jb
and
jno
jo
movsb
data16
out
mov
and
add
mov
enter
pop
jbe
insl
aad
pop
mov
add
cmpsb
lret
iret
xor
call
pop
cli
ret
insl
or
int3
push
ja
add
stc
xlat
sub
sbb
scas
mov
movsb
mov
xlat
out
jno,pn
jmp
outsl
cli
sub
mov
sub
scas
cmc
imull
sub
pop
mov
stos
test
out
aad
ret
mov
hlt
fsubr
ljmp
out
jle
ss
sbb
icebp
je
mov
add
cmp
stos
push
push
sbbl
movsb
loop
dec
lock
xchg
mov
xchg
mov
imul
out
mov
or
sbb
rorl
push
jmp
test
cmp
or
jle
ds
mov
repnz
insl
gs
cmp
cmpsl
cmp
scas
jle
add
and
scas
adc
cmc
jge
mov
ss
jbe
xchg
and
scas
and
dec
adc
fdivrp
loopne
fwait
outsb
or
out
js
and
icebp
in
mov
mov
stos
nop
movsb
repnz
inc
cs
push
adc
mov
sub
mov
cmp
leave
add
scas
test
int3
ss
sub
xlat
imulb
jp
addb
jg
or
xchg
repnz
out
repz
sub
pop
and
push
lods
and
lret
sub
cmpsb
sub
hlt
pusha
cwtl
iret
pop
and
cs
ret
or
test
mov
mov
or
or
push
sbb
insl
ds
movsb
lcall
subb
mov
iret
or
jle
push
push
xchg
xor
mul
outsl
arpl
scas
or
adc
mov
imul
popf
xchg
out
sti
jns
sub
push
mov
sub
mov
jnp
pop
mov
push
lock
test
call
mov
loopne
lea
xor
movsl
repz
fidivrl
push
push
nop
mov
adcl
fmull
mov
nop
push
xor
bound
jne
bound
or
sbb
pop
mov
in
insb
out
xor
jnp
aas
fbld
sarl
jno
shll
or
push
mov
adc
stc
sbb
lock
test
rcll
jge
dec
lret
inc
iret
adc
pop
mov
shll
clc
add
arpl
je
aas
movsb
imul
outsl
xchg
xor
andb
call
jb
inc
jmp
enter
sub
cmpsb
mov
mov
inc
cmp
sub
bound
insb
adc
shll
push
mov
iret
xchg
push
jno
sub
fcmovu
inc
pop
imull
shll
stc
mov
sub
loop
or
dec
mov
mov
test
std
and
stos
dec
lods
xor
shrb
inc
cld
jb
push
and
loopne
fsubs
sahf
lea
mov
and
jmp
ret
pop
sub
bound
arpl
push
xchg
push
xor
xor
jo
xor
mov
enter
into
dec
push
lds
ret
out
fistps
inc
jns
mov
and
out
adc
icebp
movsl
stos
adc
dec
mov
mov
dec
addr16
lahf
outsb
popf
mov
pusha
jge
dec
imul
movsb
cmpsl
push
insb
inc
std
out
adc
hlt
int3
cmp
dec
push
push
pop
mov
mov
jae
shrl
mov
inc
sbb
outsl
imul
lcall
jae
ret
mov
push
cltd
jecxz
mov
inc
loope
shrb
icebp
push
add
lea
xchg
stos
mov
xchg
mov
fcoml
testl
ljmp
pop
xchg
imul
pop
cltd
inc
mov
mov
mov
lods
mov
and
push
cmpsb
out
icebp
fidivrs
add
fdivl
and
lods
pop
icebp
adc
stos
in
fsubrl
push
cld
ss
lods
push
ljmp
sub
in
leave
push
jle
hlt
loope,pn
lods
pusha
out
insb
je
pop
jo
add
sbb
cs
cmpsb
jg
xorl
arpl
cs
and
sub
dec
or
shll
in
mov
mov
std
xchg
push
in
push
sub
xor
mov
insb
call
into
dec
push
pop
pop
mov
pminsw
imul
jle
push
ret
stos
stos
jae
lret
mov
mov
or
outsl
out
dec
mov
jp
inc
scas
and
sbb
fisubs
fwait
push
fsubrl
pop
xchg
lods
push
mov
repz
lcall
lahf
add
mov
mov
pop
dec
rcll
xchg
popf
inc
inc
out
xchg
repz
cli
jno
in
prefetcht1
pop
jb
xchg
jbe
stos
movsb
fistl
sub
arpl
in
fildll
sub
lock
movsb
out
daa
push
stos
jge
push
loopne
imul
pop
aaa
dec
mov
stos
ds
push
jnp
xor
test
cmp
dec
fwait
xchg
pusha
out
push
push
xor
sahf
pop
lcall
loop
push
lcall
xor
sub
xchg
fildll
ret
xlat
push
jb
add
sbb
aas
xchg
std
cmp
sub
fucompp
adc
sbb
adc
test
mov
sti
cmc
sub
xor
loope
cs
or
cmp
push
dec
lock
inc
movsb
imul
stos
sbb
mov
in
push
sti
cmp
into
shll
xchg
lea
test
rcl
sub
cs
pop
and
add
je
out
out
or
dec
fs
xchg
mov
movsb
or
add
movsb
fcompl
adc
dec
mov
movl
shrl
icebp
or
sbb
das
sub
outsl
lods
fldl
inc
pop
sub
into
movsb
pop
xchg
ret
jne
or
or
push
xchg
xor
pop
aaa
jmp
sub
jg
loopne
push
jae
sub
push
xchg
daa
icebp
orl
outsl
cs
pop
popa
sub
ss
or
ret
f2xm1
mov
and
inc
push
dec
sub
ret
sub
das
cmpsl
outsl
enter
mov
jbe
jno
pop
lret
add
mov
movsb
sbb
inc
adc
cs
mov
jmp
push
mov
mov
cmp
loop
lcall
xchg
jecxz
jg
cmpb
dec
pop
iret
sub
push
add
jo
jecxz
and
cmp
dec
shll
ja
mov
dec
add
mov
inc
mov
add
xchg
ret
jb
sub
mulb
stc
inc
mov
adc
pop
ljmp
fidivl
je
xlat
lock
sub
lods
loop
add
ret
xor
sub
call
or
sbb
pop
scas
cwtl
scas
sbb
jne
ss
sbb
sub
sahf
pop
rcrl
fiaddl
mov
aam
ret
mov
cs
outsb
xor
sub
pop
xchg
andl
gs
enter
repz
inc
push
iret
xor
sbb
addb
jl
or
lret
sar
in
sbb
mov
scas
add
lret
mov
or
and
sub
pop
test
popa
sbb
xorb
shr
test
mov
push
jp
jle
imul
cmp
mov
lcall
in
dec
cli
mov
jecxz
xorb
mov
sbb
inc
sbb
lahf
or
nop
push
popa
enter
mov
xchg
inc
inc
xchg
movl
adc
push
repz
fidivs
pushl
add
imull
mov
jle
xor
inc
mov
pusha
add
cltd
xchg
pop
lds
idivl
test
shl
mov
push
je
jns
imul
mov
loopne
pop
jp
mov
fcmovnbe
cmp
adc
sub
push
and
int
icebp
jb
aam
int3
jmp
adc
call
pop
sub
adc
sbb
negl
push
mov
ljmp
add
movsb
icebp
mov
push
xlat
fnstcw
mov
loopne
imul
ss
mov
stos
imul
xchg
or
sub
and
mov
pop
in
sub
out
icebp
outsl
add
xorl
lcall
mov
lcall
movb
and
stos
iret
fs
movsb
nop
push
sub
les
mov
aam
add
push
mov
lahf
mov
cld
mov
sub
pop
xor
hlt
insl
inc
in
jne
call
push
xchg
mov
pop
cmpsl
and
inc
stos
lcall
cli
arpl
outsb
or
push
in
xor
fildll
sub
lcall
cmp
pop
jp
mov
pop
das
insl
je,pt
lret
mov
inc
rcl
test
outsb
dec
push
jb
cli
test
mov
pop
sub
movsb
decb
shl
adc
xchg
xor
dec
sub
pop
xchg
adc
mov
push
jae
ret
stos
mov
rcrl
inc
and
mov
movsb
sbb
outsl
sti
movsl
sub
addr16
add
lods
std
das
adc
iret
adc
test
iret
adcl
das
pop
repnz
pop
and
mov
push
repnz
mov
cmpsb
mov
pop
repz
shrb
jne
fisubrl
mov
xchg
cmp
nop
mov
push
push
movsb
pop
fs
aam
and
fsubs
dec
lods
pop
cli
aas
or
inc
repz
bound
addr16
xchg
and
lea
sbb
push
jl
mov
sbb
adc
pop
xor
jne
sbb
insl
loope,pt
cmpb
test
mov
mov
sub
lods
push
insb
sub
cmp
lods
pop
cmpsl
lcall
mov
bound
movsb
popa
dec
mov
insl
cwtl
mov
daa
es
aas
xchg
loopne,pt
sub
inc
aad
or
bound
lods
lret
cmpsb
mov
xchg
dec
mov
pop
or
xchg
lods
cs
mov
push
dec
push
pop
clc
aas
mov
fsubrs
out
push
stos
xor
scas
cmp
test
mov
mov
loope
fnstcw
sub
xchg
jp
divl
nop
pop
xchg
xor
sbb
scas
jg
sbbb
out
jno
orl
bound
mov
lret
sahf
mov
addb
cltd
push
jno
xchg
mov
gs
ja
mov
aad
daa
jno
mov
mov
lods
scas
push
sub
daa
cmp
mov
dec
jge
cwtl
fsubr
cmp
fdiv
or
mov
inc
js
xlat
xchg
sbb
movsb
mov
or
test
pop
call
lds
nop
jge
icebp
shrl
mov
adc
repnz
sbb
push
mov
mov
xchg
icebp
scas
sub
mov
dec
cmpsb
repz
lock
clc
xor
lods
ret
pop
mov
add
daa
cmp
mov
inc
jae
sub
push
ja
aaa
mov
mov
xor
cmpsb
cmp
cmp
or
dec
dec
insl
or
jne
out
ret
in
mov
or
notl
cmp
mov
filds
std
arpl
pop
movsb
xchg
dec
xchg
mov
inc
out
jno
mov
cli
sub
jle
sbb
push
or
dec
aaa
jge
mov
push
jne
adc
xchg
lret
jo
sub
mov
shlb
fdivr
idivl
cli
js
lret
sar
das
mov
dec
mov
daa
addb
xor
mov
xor
lret
inc
add
movsb
cmpsl
loop
jbe
add
ljmp
call
jns
mov
xchg
inc
aas
or
enter
shll
out
mov
mov
cmpsl
mov
cmp
les
inc
shlb
mov
xorb
push
call
push
adc
into
dec
imul
movsb
and
pop
push
mov
es
and
mov
popf
ficompl
fisubrl
inc
call
cltd
cld
int
adc
add
mov
pop
xor
xorl
adc
dec
mov
sbb
mov
cmp
adc
popf
test
pop
lods
repz
mov
sbb
fnsave
dec
adc
mov
jno
add
dec
and
movsl
xor
icebp
outsl
repz
and
mov
push
xor
clc
hlt
scas
daa
outsb
fidivs
enter
sbb
outsb
mov
dec
out
mov
enter
pop
jb
adc
sub
cmp
mov
in
inc
mov
cltd
pusha
sub
xor
loopne
pop
dec
out
push
xor
inc
sbb
shl
pop
xchg
jge
insl
jne
fisubl
xchg
mov
cs
stos
lea
mov
sub
repnz
push
ret
jecxz
inc
add
mov
fld
scas
adc
lret
cmpsl
rclb
push
xor
cmpsb
add
xchg
pop
ss
dec
lcall
xor
push
sahf
mov
add
xor
insl
inc
mov
ss
lock
je
repnz
add
pop
add
push
das
inc
in
xchg
lods
or
popl
mov
push
xchg
jmp
jno
pusha
ss
int
ljmp
fisubrl
aad
sbb
and
lods
or
mov
mov
jmp
cwtl
pminsw
and
andb
and
push
js
rolb
fcmovu
cmp
pop
mull
sahf
ret
push
inc
aam
cld
sub
or
sbb
xor
mov
sahf
seta
in
mov
repnz
ficomps
inc
cmp
aam
shr
jecxz
aam
cmp
inc
jp
arpl
and
addb
mov
inc
push
add
dec
inc
add
mov
repnz
dec
jl
orl
push
adc
xchg
or
shll
xchg
fisubl
sub
mov
pop
call
stos
cltd
sbb
and
lock
xchg
es
xor
fldt
pop
scas
out
inc
movsb
pop
aad
jle
or
push
sub
in
cmpb
xor
mov
add
and
pop
jbe
inc
pop
add
adcl
or
xchg
iret
pop
xor
and
pop
scas
imul
iret
inc
inc
cmp
mov
adc
scas
shl
add
insl
dec
xor
cwtl
popf
xchg
int3
adcb
jp
add
insl
mov
ficompl
iret
hlt
xlat
mov
ljmp
hlt
and
fimuls
je
cmc
in
add
or
lods
ljmp
dec
mov
xor
insl
mov
jb
popf
xchg
mov
xchg
bound
lock
insl
cmp
dec
jp
pop
cs
xlat
in
sub
and
push
xchg
jo
out
lock
fsubs
or
add
out
mov
mov
movsl
cmp
adc
movsb
mov
dec
ret
inc
outsl
xor
daa
roll
push
js
sub
out
pop
sub
out
in
and
and
jle
mov
add
es
mov
pushw
sahf
dec
insb
ss
cmp
mov
and
jb
mov
fmul
mov
les
in
mov
sub
and
adc
scas
cltd
mov
test
mov
in
and
mov
leave
or
stc
inc
jecxz
loop
jmp
jmp
movsb
pop
xor
xchg
push
jne
jmp
movsb
adc
jbe
xchg
and
out
or
pop
iret
push
adc
loope
mov
jne
jmp
mov
lods
push
inc
mov
scas
cwtl
dec
movsb
dec
xchg
addb
not
rcll
mov
pop
int3
roll
into
test
push
call
pop
repz
fists
push
inc
sub
fdivrs
loope
imul
mov
repz
and
inc
js
sahf
sahf
xor
sub
cs
or
es
fcompl
incb
pop
mov
sbb
mov
clc
sub
or
or
mov
add
pop
jb
aam
sub
xchg
pop
push
and
pop
jecxz
dec
call
mov
mov
sub
pop
ret
aaa
push
test
mov
pop
daa
dec
fwait
mov
jle
cmpsl
xor
into
adc
add
dec
mov
sahf
int3
or
push
out
stos
in
into
addb
xor
ljmp
pop
scas
js
xor
icebp
repnz
cld
inc
jae
and
pop
iret
lcall
cmp
gs
sbbb
fistpl
push
loop
adc
inc
fstpt
shll
movsl
das
pusha
aaa
ret
movsl
mov
xchg
mov
or
push
and
dec
stos
ss
push
push
xor
mov
push
xchg
xorl
shl
xchg
push
in
nop
push
loopne
data16
testb
mov
push
mov
rclb
mov
daa
pop
shl
clc
cs
mov
mov
movsl
loop
push
stc
into
call
dec
loop
or
mov
popf
dec
mov
pop
cli
pusha
dec
pop
inc
lods
xor
loope
negl
sub
movsb
xchg
mov
das
xorl
dec
pop
and
add
mov
push
inc
aam
popf
xchg
jmp
ja
sub
or
mov
add
cltd
aad
ss
push
pop
jno
adc
push
int
int
xchg
xchg
daa
lret
adc
pop
sbb
cmp
mov
movsl
out
adc
mov
pop
cmpsl
mov
out
inc
movsb
pop
sub
addr16
ds
sub
mov
or
nop
push
dec
push
cltd
cwtl
jle
jmp
cmpsb
rcr
adc
outsl
mov
fdiv
push
insb
sub
jle
pop
fstps
mov
sbb
sub
loopne
std
stc
aam
loope
and
out
dec
or
out
mov
int3
cmp
xchg
pop
outsb
push
push
sbb
test
ss
xchg
jo
call
mov
cmp
mov
sbb
imull
insl
movsb
das
xor
movsb
adc
je
jl
sub
sub
mov
loop
jle
bound
xor
sahf
mov
mov
movsb
or
sub
call
ret
insl
jl
nop
aaa
push
andb
xchg
lods
out
clc
pop
mov
push
ret
mov
add
nop
jmp
lods
sbb
roll
in
out
bound
pop
mov
fidivrl
rorl
mov
jb
jp
push
popa
adc
mov
jne
jmp
dec
test
pusha
inc
aam
mov
jmp
fcmovnb
xor
adc
push
clc
or
adc
loope
inc
fisubl
movsb
adc
lcall
add
mov
jmp
ficompl
jns
repz
ret
lock
es
sub
pop
sar
loop
cmpsb
dec
jge
push
lods
add
test
dec
and
das
fwait
push
pop
add
mov
push
iret
arpl
inc
iret
shlb
jae
shrb
cmp
xchg
mov
pop
aam
sub
into
ds
push
andb
jo
cmpsl
push
adc
xchg
lock
add
loop
cld
dec
inc
pcmpeqw
jl
jg
popf
paddw
mov
mov
and
cwtl
and
ret
mov
jge
out
sub
mov
and
push
pop
nop
lock
bound
mov
test
push
enter
movsb
cmp
repz
sbb
jmp
push
lods
movsl
adc
jmp
add
movsl
mov
loope
xorl
enter
clc
pop
sub
data16
sahf
fldcw
in
or
sbb
mov
push
and
cmp
xchg
popf
sub
xorl
dec
lods
or
xor
loopne
loopne
repnz
sub
jae
mov
pushf
sbb
sarb
mov
ljmp
rorb
out
std
lods
xor
adc
fistpl
pop
insl
mov
push
mov
lret
jae
inc
fsubrp
jne
mov
sub
lret
adc
in
clc
pop
push
stos
in
leave
lret
jbe
cmp
movsb
aas
incb
xor
dec
push
vmread
jl
pop
test
inc
push
jmp
popa
mov
in
mov
mov
sbb
movsb
iret
pop
inc
lahf
sti
and
sub
stos
fstpt
add
in
scas
mov
sbb
test
ret
mov
mov
fdiv
xchg
movsb
frstor
or
cmpsb
out
or
jl
push
and
pop
sbb
mov
inc
repz
mov
jno
int3
pavgw
mov
jg
sarb
xor
push
js
cmovns
cmp
cmc
xchg
push
insl
lods
lret
or
ja
jmp
xor
and
mov
cmp
or
adc
push
insb
mov
sub
leave
cmpsw
dec
imul
pusha
mov
adc
mov
dec
bound
in
popa
xor
mov
sub
and
repz
adc
xchg
lods
out
add
adc
inc
mov
sbbl
je
mov
mov
sahf
cli
roll
mov
aaa
out
shrl
dec
push
pop
mov
xlat
fnstsw
scas
cmp
xor
inc
dec
stc
sbb
sub
in
or
mov
pusha
mov
xchg
lahf
sbb
loop
rclb
scas
push
dec
jne
movsb
xchg
dec
push
insb
sub
outsb
mov
enter
sub
out
mov
lahf
mov
movsb
lods
pop
jno
icebp
mov
mov
cli
push
and
test
add
mov
inc
mov
push
push
push
test
fs
test
imul
push
push
test
mov
jge
cmpsl
js
xchg
rep
and
and
adc
xor
xchg
sbb
mov
stos
stos
movsb
add
xlat
xor
into
and
sub
and
mov
sub
or
addr16
or
adc
cld
sahf
shlb
mov
pushf
add
mov
dec
add
fisubl
adc
mov
icebp
sub
jg
cld
stos
inc
out
sbb
jmp
clc
pusha
in
mov
push
pop
pop
out
mov
mov
ljmp
es
add
mov
inc
cltd
lock
jl
clc
pushf
push
out
push
push
jnp
incb
mov
and
mov
je
jo
iret
fwait
xchg
insl
clc
jecxz
lcall
jns
lcall
xlat
cs
mov
push
lods
xor
lds
nop
mov
movsb
in
lods
scas
enter
ds
pop
sub
mov
xorl
and
lret
cmpb
dec
popa
mov
loopne
fsts
sbb
jb
mov
lret
inc
stos
inc
push
inc
stos
jb
bound
sbb
sub
adc
ljmp
lea
dec
and
pop
dec
bound
pop
jne
jmp
out
mov
dec
fnstsw
mov
outsb
jae
das
pop
hlt
jns
fdiv
push
pop
repnz
cmp
jb
in
or
data16
shlb
sub
jns
sarb
jae
mov
mov
and
mov
aas
push
inc
int
inc
ss
cmp
push
mov
cmc
mov
mov
mov
movsb
push
inc
ret
test
sbb
lret
sub
xchg
sub
sbb
mov
andb
jb
cmp
push
imul
in
iret
cmc
or
out
daa
loope
dec
dec
add
insl
adcb
aaa
cld
cmc
cmp
sub
or
fdiv
scas
popf
loope
sub
sub
call
js
sub
add
jno
mov
mov
lea
pop
daa
sbb
rep
mov
ljmp
ret
sbb
aas
rclb
cmpsl
lahf
imul
mov
or
xchg
enter
enter
inc
pop
lcall
sub
test
mov
je
mov
adc
push
mov
sbb
or
xor
jbe
into
cs
fs
jmp
dec
mov
int
jbe
lcall
mov
pop
xor
and
cmc
aad
sub
mov
sbbb
mov
add
cmc
test
movsl
jg
scas
jb
stos
andb
mov
dec
sub
mov
push
addps
mov
sub
push
imul
loopne
out
lcall
movsl
add
bound
push
xchg
cmpsb
cmpsl
cmp
call
pop
ret
mov
xor
mov
mov
mov
pop
pop
movsb
and
xor
lret
pop
cltd
stos
inc
cmovns
lock
adc
dec
jnp
fdivr
orb
stos
pop
pop
push
lcall
lods
fbstp
mov
sub
les
mov
pop
xor
sub
push
mov
lea
sbb
dec
jae
fwait
pop
xchg
xchg
je
repz
mov
mov
cmpsl
scas
dec
ds
inc
addr16
out
js
daa
mov
out
in
dec
rolb
imull
add
mov
movsb
push
push
popf
cwtl
sbb
shr
inc
sub
adc
fstpl
shrb
sub
lcall
sbb
pop
dec
ss
sahf
fistl
fdiv
mov
and
mov
mov
and
scas
fisttpl
js
mov
cmpl
mov
arpl
fcoml
add
ret
rcrl
or
ret
sub
dec
jbe
je
cmpl
mov
addr16
pop
sarb
cmp
mov
push
cld
aas
js
push
mov
lcallw
mov
cwtl
push
fs
push
loope
push
add
in
jg
pop
sub
xchg
xchg
or
movsb
or
inc
push
mov
mov
sbb
jp
shlb
shrl
mov
test
insl
cld
push
mov
and
mov
out
int
push
add
daa
test
test
in
dec
aad
add
jmp
mulb
adc
mov
mov
and
iret
xchg
stc
bound
add
fstps
adc
adc
and
sub
sub
out
call
inc
push
fisubrs
xchg
test
test
loope
and
fidivl
fildll
repnz
mov
dec
sbb
pop
jmp
inc
xchg
sub
pop
fistl
mov
xchg
shr
push
mov
sub
or
mov
test
je
cli
lea
movsl
dec
rclb
je
mov
pop
xchg
add
repz
pusha
cmp
pop
fs
in
rcrb
inc
mov
mov
repz
push
xor
pusha
ret
sub
movsb
inc
rolb
adc
add
cs
subb
mov
in
adc
lds
lds
aam
push
adc
or
mov
dec
xor
out
bound
mov
bound
stos
iret
mov
add
movsb
mov
xor
push
lods
imul
fcomip
imul
pop
in
sbb
xchg
and
jge
mov
cmp
and
ljmp
jno
mov
mov
lcall
pop
je
sbb
push
fs
jl
jae
push
and
push
lods
fadd
lods
smsw
out
mov
mov
mov
inc
push
pop
mov
sub
pop
inc
lahf
test
inc
mov
push
push
xchg
insb
push
adc
pop
popf
push
sub
into
cmc
jmp
jb
sbbb
adc
mov
mov
lea
shl
mov
mov
push
pop
addb
push
loop
lea
mov
aaa
dec
stc
mov
out
shl
rcrl
or
in
pop
in
movsb
outsl
xchg
orl
sub
mov
jbe
clc
aad
or
shll
jmp
sbb
ljmp
fstpt
popf
bound
pop
loope
xchg
andb
lods
add
scas
or
rorl
mov
dec
in
or
sub
daa
jp
outsl
mov
dec
insb
push
cmpsb
scas
mov
xchg
xchg
cs
mov
int
bound
xor
mov
push
fidivl
dec
mov
inc
and
ds
arpl
aas
ret
mov
or
pop
lahf
adc
adc
mov
lea
mov
push
pop
or
insb
push
clc
inc
xchg
or
lret
mov
pop
jns
push
fdivrp
push
pop
jmp
mov
lods
xor
mov
orl
fs
adc
ficoml
lcall
add
jge
jmp
push
xor
dec
lods
out
mov
mov
out
ja
movl
dec
push
push
xchg
or
push
jl
sbb
add
rorl
mov
sub
sub
lods
sub
movsb
jmp
and
lcall
cmp
pop
jbe
xchg
movsb
incl
xor
stos
cltd
les
rep
adc
imull
mov
outsl
out
jno
xchg
mov
inc
ficompl
and
iret
imul
imul
lods
jp
inc
push
imul
ljmp
rorb
jo
scas
shll
lcall
ljmp
jo
xor
cmp
adc
push
xor
dec
xchg
fdivp
iret
add
push
outsb
lcall
dec
popf
jp
pop
test
inc
mov
sbb
sbb
fistpll
add
sbb
das
xor
cmc
or
arpl
inc
xchg
call
and
add
call
gs
inc
fdivrs
xorb
or
into
push
pop
adc
push
loop
testb
sbb
lds
cli
xor
fcmove
into
test
mov
sub
movsb
mov
inc
wbinvd
mov
movsb
loope
sub
lea
jg
outsb
int3
and
scas
scas
shrl
pop
xchg
push
mov
xor
xchg
xchg
movsb
cmpsb
inc
sub
fstl
int3
or
divl
mov
adc
xchg
inc
dec
lea
ss
into
mov
adc
mov
hlt
fwait
sti
mov
mov
xlat
mov
xchg
sub
xchg
xor
mov
movsb
cmpl
inc
xor
fadds
cmc
dec
inc
mov
sub
insl
hlt
cs
lods
cmp
sahf
xchg
imul
jnp
push
jb
mov
dec
call
cld
cld
sbb
mov
pop
xor
imul
pop
sbb
in
jae
xchg
push
mov
mov
mov
subb
sbb
cwtl
inc
sahf
dec
enter
mov
xchg
pop
imul
sti
or
mov
xor
imul
pop
xchg
and
imul
jmp
outsb
mov
push
jecxz
mov
das
add
les
sbb
xchg
or
sub
test
movsb
push
rcl
jnp
mov
adc
xchg
insl
dec
jno
or
lret
xchg
lods
iret
adc
jge
dec
jecxz
sbb
mov
pusha
xchg
outsl
ficoms
jb
push
imul
mov
jae
jecxz
fstpl
je
adc
fnstcw
sbb
fsubrl
ljmp
xchg
movsb
dec
inc
ret
jo
jecxz
dec
inc
dec
mov
cmp
xchg
jb
mov
or
icebp
arpl
sbb
rcrl
test
xor
cmpsb
sub
cmp
push
mov
test
ret
mov
mov
insb
and
pusha
mov
jmp
jle
mov
sti
xor
and
ret
in
movsl
sub
mov
or
push
jbe
test
jp
add
sbb
push
ss
dec
dec
hlt
mov
out
mov
push
xchg
inc
test
mov
add
roll
xlat
cmc
pop
mov
jmp
jmp
ret
in
cmp
cmpsl
mov
icebp
sbb
enter
jo
adc
inc
iret
and
icebp
sbbl
das
inc
dec
into
data16
mov
outsl
fildl
push
jmp
lods
arpl
imulb
out
mov
lahf
dec
dec
lods
jmp
jge
shr
jo
dec
movsb
mov
insl
pop
loopne
lods
subb
pusha
adc
cltd
mov
mov
pusha
rcll
push
dec
movsb
mov
lods
daa
mov
roll
pusha
push
arpl
xor
stos
mov
dec
mov
and
hlt
xchg
mov
lds
cmp
mov
lods
push
lret
incb
jmp
and
sub
jg
inc
aas
jge
mov
pop
add
cmpsl
out
lods
cmp
mov
cmp
mov
fstps
out
ret
xorb
out
mov
jmp
push
mov
jmp
outsb
or
loopne
inc
dec
pushf
pop
cmp
cmpsb
sub
push
sub
or
out
mov
dec
push
sbb
in
xor
enter
stos
dec
movsl
ja
inc
scas
jbe
xor
xlat
lock
push
flds
divl
xchg
pop
push
inc
arpl
jns
mov
dec
sarl
mov
xlat
in
mov
loop
pusha
xchg
mov
xchg
pop
ss
mov
inc
jp
add
adc
mov
rdtsc
arpl
je
or
inc
cmpsb
push
cmpb
pop
lret
or
cld
mov
xor
jl
movsb
orb
jecxz
fldl
pushf
mov
xchg
cmp
lods
loop
mov
jge
mov
lcall
repnz
jmp
aad
jo
push
inc
jp
push
mov
dec
sbb
adc
aam
mov
lods
xor
dec
cmpl
cmp
dec
mov
pop
mov
xchg
inc
xor
inc
leave
mov
fwait
ss
or
and
es
dec
adc
repz
cmpxchg
xor
mov
sub
fldl
cmp
fsubrp
movsb
xchg
dec
add
iret
inc
push
dec
outsb
cmpsb
xchg
xor
ljmp
or
unpcklps
fmul
xchg
or
mov
inc
fs
mov
mov
test
mov
jl
popa
or
pusha
push
jb
insl
mov
cli
xchg
movsb
dec
xor
mov
push
je
sbb
sbb
cmc
arpl
outsb
and
inc
cli
push
add
cmp
pop
dec
scas
mov
pop
fisubrs
ret
lcallw
lds
sub
aaa
mov
mov
sub
pop
loop
sub
call
cltd
and
xchg
xchg
into
ja
imul
jb
in
adc
add
sarb
addr16
jne
out
jns
lea
pusha
jno
or
adc
iret
cmp
cmp
push
fidivrl
jb
adc
ljmp
shrl
and
shll
inc
sub
jno
test
lock
pusha
pop
add
push
and
cmpl
sub
insb
movsb
and
loop
sbb
push
mov
shl
mov
jecxz
adc
mov
push
mov
xor
ljmp
sbb
mov
lods
jnp
sub
mov
inc
sbb
test
leave
shl
pop
test
es
cmpsl
mov
cmp
mov
stos
ret
lret
xor
dec
imul
pop
inc
pusha
lahf
hlt
stos
push
xchg
or
fwait
enter
push
fcmovu
popa
repz
rcrb
and
push
sbbl
ret
cli
insb
ds
mov
das
shr
repz
mov
add
sahf
sub
leave
jmp
rcrb
insb
bound
cmp
ror
popf
jo
pop
ficoms
aaa
cmc
int3
iret
addr16
jb
ja
jecxz
cltd
popf
rcl
mov
sti
fstps
fmul
sbb
push
std
sub
push
in
push
and
leave
scas
jae
in
dec
sbb
shlb
xchg
xchg
mov
cli
cld
mov
mov
inc
ret
push
out
stos
rcrl
xor
mov
sar
xor
sbb
mov
push
and
mov
ljmp
cmp
into
jp
mov
sub
add
insb
sub
mov
stc
inc
xchg
aam
xchg
cs
mov
repz
lahf
adc
push
rcrb
and
shlb
call
xchg
imul
ret
mov
mov
mov
scas
jb
stos
sahf
add
aam
mov
or
and
xchg
rolb
and
in
sub
xchg
int
mov
inc
ret
lret
xchg
cltd
sbb
jnp
movsb
and
call
popa
push
leave
jmp
es
mov
out
sub
xchg
sbb
ljmp
dec
sbb
popa
xor
xchg
and
mov
loopne
xchg
mov
mov
into
iret
sub
int
sbb
lds
lret
cmp
adc
lcall
pop
stos
cld
push
shll
addr16
mov
icebp
mov
sbb
jo
mov
jae
push
aas
push
mov
xchg
or
ret
dec
jbe
add
xchg
outsb
dec
push
and
pop
and
dec
xchg
pop
adcl
adc
xor
loope
xlat
out
sub
pop
shll
pop
mov
mov
loopne
fidivrl
sub
and
mov
mov
repz
push
sub
int
mull
sub
and
icebp
sub
cmpsb
faddl
repz
rolb
lret
ficoms
stos
adcb
icebp
lods
mov
dec
or
orl
dec
unpcklps
insl
faddp
push
vmwrite
out
xchg
xor
fsqrt
dec
or
insl
insl
popf
jp
or
fs
push
xlat
add
pop
xor
push
jecxz
and
ret
inc
jge
sub
daa
jne
add
movsl
mov
outsb
add
mov
jne
sti
xchg
sbb
cli
scas
mov
mov
lea
aam
lret
mov
cmp
add
mov
cmp
jge
pop
gs
adc
jmp
push
lahf
sbb
aaa
mov
fimuls
sub
andl
xchg
bound
adc
ljmp
pop
jns
shr
hlt
lods
pop
pop
fmulp
and
int
fisttpl
fs
adc
and
cmp
clc
leave
sub
iret
fcmovne
or
jl
aad
xchg
jo
call
mov
mov
mov
aam
pusha
sub
pop
lcall
adc
and
fs
add
xchg
lods
push
push
sbb
fwait
xchg
adc
push
divb
and
jbe
mov
mov
mov
jo
rorl
popf
xlat
inc
jne
sbb
fdivs
in
xor
cmp
fistl
orl
iret
jbe
leave
addr16
scas
scas
lea
iret
ficoml
nop
cmovl
sbb
push
dec
mov
or
jbe
lods
lods
mov
adcb
lods
test
push
cmpsb
jl
outsb
bound
xor
inc
lods
scas
inc
mov
rcrl
repz
int
lret
addb
mov
sub
jne
lods
es
mov
fadd
add
mov
mov
lods
fwait
cli
out
mov
scas
pushf
add
adc
push
cmpsl
cwtl
into
mov
sbb
es
adc
lds
inc
movsl
stos
and
shl
cmp
mov
push
inc
or
push
in
rep
loop
push
call
sbbb
jb
add
inc
mov
adcl
clc
jbe
loope
push
xor
xchg
push
je
divl
hlt
js
xor
stos
push
mov
sub
xor
rorl
jmp
mov
lods
ret
js
shr
out
mov
xchg
movsl
sub
inc
mov
mov
push
fiadds
loop
mov
andb
mov
sub
add
es
dec
and
sub
movb
and
mov
mov
ret
icebp
or
fsubrl
inc
jle
cmp
xor
cmp
and
cmp
add
jbe
loop
jle
fwait
jno
out
xchg
mov
sbb
mov
mov
sub
int3
mov
repnz
lods
xchg
addl
loop
subl
xchg
cli
test
cld
sub
enter
aaa
sub
push
mov
push
std
shl
sbbl
or
stc
sub
lods
stos
mov
push
hlt
add
loope
jae
mov
cmpsl
andl
aaa
sahf
ret
shll
push
adc
jae
dec
out
lea
movsl
fyl2xp1
sub
sub
leave
enter
stos
test
pop
mov
mov
xchg
xchg
push
dec
ja
xchg
mov
incb
push
ficoms
aad
fildll
mov
sbb
movsl
shll
scas
fisttpl
imul
imul
pop
lods
pop
ljmp
pushf
xor
mov
pusha
addr16
xchg
rcrl
mov
data16
mov
xor
xchg
mov
mov
int3
jne
push
xchg
cmpsl
xchg
ljmp
std
push
mov
sti
jbe
inc
clc
xchg
cmpsb
mov
add
ret
cmp
mov
push
mov
loop
or
mov
xchg
orl
movsb
stos
pop
add
ja
sub
enter
dec
jecxz
sahf
jne
sahf
pushf
into
hlt
adc
xchg
push
cmp
pop
xor
outsl
addr16
xor
icebp
push
adc
adc
mov
movnti
sahf
add
nop
out
stos
and
subl
xchg
xorb
aad
test
lcall
in
call
jo
in
cld
ja
int
mov
adc
jns
dec
sub
xor
add
ffree
bound
out
add
pop
repz
pop
test
jge
outsl
dec
aaa
movsb
arpl
dec
cmp
cltd
out
dec
xchg
sbbl
iret
sbb
ds
sbb
jno
sub
and
push
mov
dec
rorb
icebp
iret
cmpsl
and
sub
or
and
jmp
lret
cli
into
push
fidivl
and
mov
pop
jb
or
mov
push
add
insl
push
mov
les
out
ja
push
movsl
dec
add
pop
mov
je
sub
insl
ljmp
stos
inc
adc
lods
fiaddl
jne
mov
jmp
mov
pop
mov
adc
or
sahf
aaa
imull
lds
xorl
inc
into
ss
lds
mov
leave
mov
shlb
sahf
or
mov
fisttpl
dec
in
pop
cmp
jb,pt
daa
imulb
aam
adc
add
lods
ret
dec
cmpsb
in
scas
xchg
outsb
sbb
push
iret
and
loopne
mov
and
jle
mov
sub
push
shrb
add
push
mov
out
pop
and
out
ljmp
int
adc
sbb
out
repz
xlat
mov
jno
adc
or
fmulp
mov
loopne
sub
cmp
cwtl
imul
mov
add
lods
mov
out
or
sahf
orb
pop
cmp
or
inc
stos
adc
sbb
or
bound
jecxz
insb
pop
leave
pop
roll
pop
sbb
cmp
repnz
jb
sub
mov
or
push
dec
or
add
iret
xor
push
dec
mov
in
dec
jmp
xor
into
lods
dec
stos
mov
push
pop
stc
into
loopne
xchg
fimull
lods
movsb
fsubrl
adc
inc
push
movsb
sub
inc
fiaddl
xlat
ss
jge
adcb
imul
dec
out
mov
clc
sub
out
mov
fwait
js
repnz
sub
cli
sub
sub
pop
xchg
mov
rolb
fcomi
fdivrl
lods
ss
decb
or
xchg
inc
js
movsb
dec
gs
xchg
lods
inc
and
lea
add
lods
bound
pop
aas
sbb
fs
mov
cmc
mov
add
ret
scas
jno
movsb
pusha
xchg
sub
lods
adc
xchg
mov
or
enter
xlat
lret
jle
jb
adc
mov
xor
or
push
cmp
rep
inc
sub
popf
adc
jno
leave
mov
sub
or
mov
push
push
loope
or
mov
popf
out
les
inc
repz
jae
pop
loop
push
sahf
nop
jge
pusha
popa
xor
or
cmp
and
adc
and
aaa
xor
xchg
int3
bound
jb
xor
int
sub
push
mov
pushf
push
out
push
sbb
mov
inc
sbb
js
fstps
xor
jb
sub
jb
jo
test
sbb
fstl
outsb
sbb
jecxz
out
std
push
xchg
push
or
or
bound
push
lods
adc
jno
ret
lret
outsb
push
jno
push
subb
inc
fs
pusha
lods
and
sub
dec
mov
fidivs
sub
sbb
add
lcall
pop
sbb
bound
dec
push
inc
mov
sbb
shll
mov
fstpl
mov
scas
push
or
cmp
cmp
xchg
stos
mov
rorl
push
push
mov
and
jge
inc
ret
out
add
jo
cmpsb
jp
mov
jmp
mov
add
pop
adc
dec
mov
adc
loope
sub
push
push
mov
sbb
sub
jb
xor
mov
test
adc
sbb
pop
sbb
in
mov
or
mov
add
sbb
fdiv
and
xlat
cmpsb
mov
push
jle
mov
jbe
mov
pop
arpl
test
addr16
jb
jmp
lahf
jnp
or
sbb
pop
iret
inc
cld
xorb
add
fcmovnb
js
mov
push
mov
xor
pop
pop
mov
loopne
rorb
repnz
push
imulb
xchg
xchg
fdiv
inc
mov
dec
gs
movsb
bound
mov
popf
mov
adc
ljmp
fists
aaa
dec
bound
lea
aam
std
int
lahf
push
rep
movsb
pop
movsl
sbb
add
lcall
repz
jb
adc
scas
insb
lret
cmp
or
enter
mov
mov
ljmp
pop
sub
inc
jb
mov
jns
jmp
movsb
mov
push
sqrtps
stos
js
mov
and
ret
sub
adc
mov
in
insb
xorb
add
push
xor
adc
jmp
leave
fstpl
jp
mov
sub
mov
sti
in
cmp
jp
adc
jecxz
mov
xchg
movsb
ret
adc
aam
cs
jae
add
inc
lods
and
subl
push
scas
mov
xchg
dec
cli
xchg
jge
mov
add
sbb
sub
add
sbb
std
mov
leave
cmp
jb
jp
es
cmp
mov
dec
rorb
dec
js
xor
inc
dec
out
out
push
sbb
sbb
mov
push
data16
mov
sbb
jne
or
mov
or
push
jp
adc
dec
mov
and
std
sbb
mov
pop
test
fdivl
fcmovnbe
lods
cmpsl
cmpsb
pop
or
jno
aam
leave
movsb
inc
cmp
test
lds
fcmovbe
inc
sbb
jno
fistpl
mov
inc
shlb
stc
mov
lds
call
aad
cmp
movsb
in
mov
movsb
push
dec
sti
into
fmul
mov
rcll
inc
hlt
aas
xchg
pop
adc
pop
stc
mov
test
stc
sub
mov
out
call
imul
push
or
sbb
fists
mov
adc
mov
inc
lds
scas
test
push
push
out
pop
outsl
jbe
into
shrb
or
filds
jecxz
aaa
sub
icebp
push
rcrb
fwait
out
fistps
fistpll
jnp
std
andl
dec
lods
std
xchg
fcompl
jl
and
test
push
push
pop
push
push
fsubs
push
das
movsb
dec
push
in
push
mov
jle
or
popf
jp
negb
sbb
sub
sbb
jbe
lods
std
movsl
rcrl
outsl
or
cmp
add
fdivrs
fs
int3
sub
stos
bound
jp
aaa
std
ljmp
cs
sub
lret
ljmp
push
cwtl
xorl
cmpsl
cmp
cmp
repnz
test
cli
dec
aad
iret
and
push
mov
pop
in
dec
loop
and
popa
xchg
push
insl
or
dec
inc
pop
test
push
data16
ljmpw
mov
dec
test
insb
movsl
ljmp
ret
xor
sub
cld
leave
or
outsb
xor
push
cmp
inc
test
dec
ret
sub
cmpsb
sbb
cmpsb
jbe
sbb
push
cmp
mov
dec
push
lret
mov
iret
and
data16
cmp
lea
inc
ds
cli
sub
movsb
push
nop
addr16
mov
cmpsb
ficoms
sub
or
into
or
cs
call
cmc
mov
enter
setp
sub
pop
jb
cmp
in
inc
pop
sub
dec
cmp
dec
imul
adc
mov
test
jg
jne
repz
lock
rcrb
sbb
cli
push
jo
sbbl
adc
sbb
dec
and
dec
mov
and
data16
adc
dec
jg
and
mov
and
stc
loopne
mov
cmc
jne
jg
mov
cmp
sub
pop
cwtl
xchg
xchg
inc
mov
in
stc
push
ljmp
xor
adc
xchg
jne
mov
dec
mov
mov
outsb
push
cli
test
jnp
push
loope
popf
mov
ret
sbb
pop
adc
fstpt
out
sub
shll
ljmp
psubw
mov
push
aad
insb
adc
repnz
cmp
fidivrs
or
adc
scas
sub
pushf
xchg
xlat
ljmp
mov
push
into
out
add
cmpsl
pop
inc
fbld
pop
inc
test
or
repnz
add
jb
push
mov
shl
jae
std
sbb
sbb
xor
jne
hlt
mov
sbb
dec
push
repnz
pushf
out
call
dec
rcr
test
lea
ja
pop
cmc
mov
dec
inc
pop
cld
outsb
mov
mov
rcr
into
outsb
cmp
and
pushf
lock
mov
stos
push
dec
mov
imul
cs
sbb
fstpt
int
pushf
xchg
sbb
mov
jno
pop
cmp
adc
cmpsl
xor
inc
sahf
jecxz
xchg
pop
jno
dec
and
cli
inc
shrb
aad
mov
daa
sub
pop
stos
pop
mov
popf
and
inc
push
cmovp
repnz
pop
pop
pop
mov
adc
dec
adc
vrndscaleps
xor
out
xchg
push
lcall
sarl
pop
sub
pop
sahf
and
push
dec
sub
pop
and
pusha
push
es
mov
lods
add
jnp
xchg
mov
xchg
sbb
out
sbb
jmp
dec
in
add
in
mov
cwtl
xchg
push
mov
jb
lods
loop
test
je
sub
call
mov
repnz
pop
fsubrl
aaa
insl
mov
jmp
ljmp
das
dec
sbb
call
jno
jae
loope
mov
cmp
icebp
pop
xchg
fstpt
scas
test
lret
push
repnz
sbb
fistpl
and
pop
mov
dec
lods
xchg
sub
cld
xchg
sbb
and
pop
push
insb
xor
fdivr
and
sar
push
and
lea
xlat
mov
xchg
mov
inc
dec
aam
add
repnz
push
aad
leave
test
cmp
push
inc
repz
pop
mov
fnstenv
xor
or
dec
push
mov
mov
decb
lahf
out
xor
xchg
mov
ret
xor
xchg
in
sti
adc
push
dec
mov
movsb
gs
mov
cmp
jno
pushf
push
sub
xchg
cltd
dec
in
inc
out
sbb
repz
aad
dec
aaa
in
sbb
in
shlb
mov
bnd
ljmp
mov
xor
lods
dec
movsl
cmpsl
in
xchg
sbb
mov
iret
addb
lea
inc
or
nop
mov
sub
inc
loope
insl
into
pop
sub
pop
mov
fwait
testb
sub
mov
xor
xchg
push
jle
push
aas
pusha
sbb
out
out
xrelease
mov
inc
les
mov
mov
js
xchg
test
pusha
lcall
ret
mov
negb
ret
iret
xor
arpl
xor
idiv
sbb
aad
sub
loop
mov
out
sbb
out
mov
aam
ret
mov
add
sbb
movsl
out
add
leave
movl
in
cmp
push
test
mov
loope
push
inc
add
into
leave
cmpsb
and
sub
add
rorl
jno
addl
iret
mov
test
mov
adc
xchg
je
jge
push
sub
cmp
addr16
mov
mov
mov
stos
stc
xor
dec
add
jb,pt
sub
leave
inc
pushf
aad
add
sahf
aad
movsl
test
inc
adc
shlb
cmp
sti
xor
fistpl
mov
mov
xlat
and
fwait
xor
lods
inc
add
fwait
clc
mov
ret
mov
sub
icebp
or
and
cmovg
fwait
mov
dec
loope
popa
sbb
movsb
movsb
mov
bound
mov
fcoml
in
js
xor
lods
jno
dec
pop
ficomps
pusha
lahf
push
popf
dec
jmp
cld
pop
jo
add
mov
push
xchg
cmp
or
inc
lds
sbb
xchg
dec
jnp
lea
sub
nop
movsb
and
push
dec
fldt
sbb
stos
push
lret
push
push
mov
xchg
in
das
gs
adc
call
jb
js
call
adc
sub
outsl
lods
mov
xchg
xchg
clc
ljmp
cs
rorl
mov
arpl
jle
push
ret
popf
movsb
or
cmp
pusha
js
dec
xchg
fidivs
xchg
pusha
xchg
and
inc
test
mov
int3
sahf
adc
pusha
mov
push
scas
popf
sub
popa
sbb
out
outsl
cmp
insb
mov
cwtl
mov
inc
incb
mov
addr16
xorl
jmp
jb
mov
push
in
mov
or
xlat
icebp
mov
rcrb
jb
pmullw
sbb
sahf
mov
mov
fisubl
cmp
jb
sti
shlb
insl
sahf
stos
pop
jb
or
mov
and
add
jg
daa
enter
dec
mov
repz
shll
out
cmp
mov
in
mov
out
lcall
jmp
jle
stos
mov
sbb
movsb
mov
mov
mov
notb
mov
cs
mov
imul
mov
cmp
repz
sbb
in
das
mov
loopne
pop
out
ret
sbb
mov
xchg
inc
jmp
sub
sbb
push
add
cld
push
jae
icebp
andl
mov
inc
cmpb
sahf
mov
mov
scas
iret
and
sahf
fcomi
gs
movsb
les
mov
fsts
movsb
jbe
dec
push
mov
mov
mov
in
jl
push
xor
push
loope
sbb
movsl
cmp
sub
ret
outsb
mov
inc
jecxz
cltd
adc
and
out
fildll
jmp
in
mov
outsb
ljmp
sbbb
lret
dec
or
sub
pop
push
xchg
jne
mov
cmp
stos
mov
ljmp
daa
cmp
fstl
cld
je
push
scas
push
mov
pop
mov
into
movsb
aad
inc
or
jmp
stos
adcl
imul
mov
cmc
cmp
inc
jecxz
inc
cmp
cmp
in
xor
stos
xor
leave
mov
lock
push
ret
test
aad
adcl
jmp
das
inc
int3
pop
xlat
mov
cmp
xor
or
sbb
aas
lret
and
dec
gs
xchg
add
push
stos
loopne
shll
aaa
xchg
adc
or
sbb
push
inc
push
dec
xchg
sar
add
rcrl
lods
add
push
cmp
insb
outsb
mov
pop
mov
jmp
xchg
lods
push
mov
fdivr
iret
sbb
jmp
cltd
pusha
jmp
sbb
fistps
xor
mov
dec
dec
dec
adc
inc
mov
leave
out
inc
ret
push
fwait
sahf
cli
mov
xor
fisttpl
ret
insl
cmp
negb
aad
roll
fcomi
pop
and
movsl
enter
dec
dec
lods
mov
jns
fidivrl
jnp
fisubrl
jecxz
mov
shr
in
jns
sub
jg
sub
ja
mov
xchg
push
sub
loope
movsl
xchg
or
scas
shl
rcrl
cltd
imul
mov
or
sbb
cmp
outsb
lods
jecxz
outsl
jb
cltd
push
xor
pop
into
movsb
es
mov
and
psubb
jl
sti
sbb
movb
jle
mov
fildl
mov
mov
xor
mov
rorb
or
sbb
mov
movsl
cmp
iret
mov
inc
mov
inc
pusha
or
jns
je
mov
sti
mov
cmpsb
mov
push
add
outsl
push
out
jecxz
adc
scas
or
mov
and
inc
scas
adc
cli
outsl
in
adc
jl
sub
nop
repnz
and
and
ror
jo
je
aam
ljmp
xchg
push
stos
in
fwait
or
movsb
inc
sbb
and
lcall
push
add
sub
xor
andb
cmp
ret
xchg
out
stos
mov
mov
std
andb
lcall
repnz
mov
loope
and
xchg
sub
sub
or
add
xor
int
sbb
lods
aas
push
add
and
rclb
push
dec
and
fsubr
aad
leave
das
push
fwait
mov
mov
jb
pop
outsl
jb
test
add
idivl
or
jnp
insb
in
and
jbe
jns
jne
add
das
xor
aaa
mov
roll
roll
data16
or
loopne
mov
push
pop
lea
insl
mov
mov
fwait
sub
or
dec
fbld
shr
pop
leave
sub
outsl
movsl
fwait
push
scas
pusha
rcrl
stos
fiadds
icebp
pushf
or
mov
addr16
cmp
push
ss
sti
or
movsb
pusha
and
lds
sub
push
roll
pop
inc
jl
mov
mov
in
lea
adcb
subb
mov
leave
pop
adc
cmpsl
push
mov
nop
and
lret
outsb
mov
mov
mov
call
jb
add
adc
repnz
lds
xor
insb
out
jecxz
sub
or
pop
sub
jns
push
add
xchg
dec
sub
or
dec
pop
sub
lret
add
bound
enter
mov
lea
lret
mov
xchg
rep
clc
inc
roll
stc
sub
inc
mov
aaa
adc
out
cmpsb
divb
dec
mov
insl
pop
out
dec
cs
imul
hlt
push
lea
sarb
in
cwtl
fstpt
outsb
pop
inc
fsubr
and
in
adc
sub
jnp
inc
lods
cmp
sarb
push
inc
xor
imul
stos
in
out
hlt
and
rcr
stos
inc
adc
jb
outsb
cld
in
sti
adc
pop
sub
pop
movsb
mov
mov
fsubrs
ficomps
sub
stos
dec
fidivrs
push
fs
push
fsubrl
loope
enter
pop
or
movsb
hlt
cmp
adc
icebp
cli
add
mov
cmpsb
lcall
rcrl
jbe
ss
mov
or
ss
inc
push
dec
stc
imul
push
cmp
mov
or
push
hlt
pushl
es
ret
in
lret
leave
cmp
clc
mov
rorb
xor
mov
cmpsl
imul
notl
xchg
xchg
fdivs
test
mov
cli
fdivs
mov
stos
ljmp
jle
and
pop
xor
cs
mov
sahf
or
ljmp
into
xchg
jmp
dec
cmp
lods
xchg
call
movsb
jae
xchg
mov
xchg
test
enter
sub
arpl
leave
dec
adc
push
dec
call
fwait
movsl
ret
xor
sti
xchg
aad
out
pop
add
xor
jno
testb
ret
mov
push
jecxz
fs
mul
push
icebp
xchg
and
push
stos
mov
jle
ljmp
xor
inc
movsb
das
popf
or
lods
fsub
addb
push
loop
xchg
pop
mov
lret
sub
ljmp
aam
jecxz
jne
repz
dec
sbb
or
cs
or
leave
cmp
int
sar
mov
jbe
jae
popa
test
mov
jae
mov
loopne
jb
fisubrl
mov
shll
or
aaa
les
xchg
mov
pop
xor
loope
xor
mov
sub
clc
push
inc
fldt
pop
imulb
cwtl
sbb
mov
ror
xor
adc
sbb
fldt
dec
xor
cmc
jns
mov
mov
lods
mov
movsb
shll
lock
lea
lods
xor
push
inc
bound
mov
and
lods
push
insl
adcb
mov
sub
mov
fwait
sub
mov
sub
xchg
mov
insl
add
loope
sbb
and
ljmp
jge
lds
fisubrl
mov
rdpmc
and
sbb
pop
xchg
into
xchg
cmp
mov
les
fs
mov
add
xchg
xchg
pop
jno
rorb
enter
jo
dec
fucomi
mov
add
popf
pop
push
sub
mov
loop
mov
mov
add
cmpsl
sti
fcomps
cmp
sub
xchg
inc
xorl
aad
cs
jmp
fwait
sub
fstpt
mov
arpl
xlat
fdivs
jo,pt
xchg
arpl
loope
in
mov
out
dec
sub
repz
in
sub
idivb
mov
cltd
push
sub
int
test
aaa
scas
push
cs
iret
fucom
add
insl
cmp
xor
shr
adc
mov
and
sub
insb
push
xor
rcrl
pusha
sub
pop
mov
dec
dec
pusha
iret
push
leave
sbb
mov
in
aas
fs
push
cs
mov
outsl
in
scas
mov
movsb
iret
lea
insb
lcall
push
lods
popf
push
into
out
pop
xor
pusha
dec
out
popf
push
cmp
adcl
call
xor
mov
push
sti
dec
push
lcall
adc
test
jae
stos
aad
data16
xorb
mov
xchg
out
xchg
push
or
cmp
movsb
inc
sbb
mov
les
sbb
xor
or
and
or
xor
addl
mov
adc
inc
pushf
fwait
ljmp
adc
pusha
xor
adc
cli
sub
mov
sbb
xchg
mov
or
das
sbbb
movsl
scas
inc
ja
xchg
lds
push
mov
out
push
mov
addr16
mulb
pusha
loopne
sub
rorb
push
stos
cmp
or
xor
addr16
mov
loope
adc
outsb
push
inc
xor
sub
sbb
jb
rcll
jmp
add
ret
xorb
out
jnp
lret
jnp
sbb
leave
push
lods
mov
push
jae
daa
inc
lcall
repz
sub
cmpl
das
mov
add
xchg
ljmp
cmpb
add
test
jno
cmc
std
pop
mov
xor
jno
fsubrl
cmp
movsb
sahf
hlt
out
jae
sahf
inc
outsl
inc
lods
fisubrl
pop
scas
lock
icebp
ret
push
sbb
cmpsb
pushf
adc
xor
bound
pop
cmpsb
mov
mov
js
dec
push
scas
mov
jl
dec
sub
shrb
rcr
movsl
pop
pusha
insl
xchg
or
lret
rcpps
dec
and
jne
dec
mov
repnz
xor
sbb
test
cli
inc
sub
xor
xchg
cmp
push
dec
mov
aas
clc
and
ss
cld
pop
and
and
or
enter
sbb
icebp
mov
sub
fsubrl
xchg
shlb
jmp
jbe
mov
scas
adcl
out
lods
lahf
xchg
or
movsb
sbb
push
aam
xchg
inc
xor
sub
cmc
xor
mov
ret
inc
xor
mov
adc
aam
ret
mov
jecxz,pt
mov
jae
out
jb
jp
mov
lods
adc
loope
jae
out
lea
sub
jns
adc
jno
and
or
xchg
dec
sbb
xor
fimull
mov
sahf
scas
jge
les
clc
xor
jg
sub
std
fidivrs
movsb
dec
inc
sub
pop
adc
les
xor
repnz
mov
lea
mov
cld
je
jbe
jb
lds
dec
mov
sub
mov
lahf
add
inc
mov
xchg
jecxz
mov
sub
mov
inc
arpl
shl
mov
in
aad
pop
lret
call
cmp
dec
push
mov
mov
insb
insl
xor
sub
insb
push
cltd
push
jo
push
fldenv
pusha
dec
sub
stos
js
lret
ret
mov
loop
decl
or
les
fiadds
pop
jle
adc
push
rcr
cmp
xchg
int
lea
and
divb
push
fmuls
data16
mov
sub
movsb
mov
push
fsubrs
mov
cld
jns
ljmp
adc
in
pop
sub
mov
xlat
sub
mov
inc
ret
add
ss
cmp
push
pop
cmp
push
in
push
cli
mov
sub
xor
iret
repnz
pop
shlb
lcall
gs
pop
jp
push
push
jge
pop
dec
fidivs
add
das
xchg
mov
lahf
subb
jae
es
int
std
mov
mov
and
add
ret
ret
mov
push
push
xchg
mov
cwtl
sbb
jno
mov
in
bts
sarl
jbe
pusha
and
lea
lret
lods
sbb
cltd
mov
hlt
mov
movsb
sbb
frstor
push
ljmp
push
xor
push
lods
mov
jmp
xor
sub
and
adc
les
jnp
lods
scas
push
cmp
sub
ret
adc
imul
sahf
pop
and
add
mov
repnz
mov
push
incl
jb
inc
xchg
cli
cmpsb
mov
pop
inc
jge
arpl
out
das
sarl
popf
icebp
pop
add
loop
dec
lea
icebp
jge
cltd
xchg
dec
sbb
push
sbb
push
cmpsb
mov
sub
and
rorl
fisubl
fmull
daa
ljmp
fcompl
bound
pop
pusha
xor
loop
sbb
pop
adc
mov
fdivl
add
mov
jecxz
je
xchg
sub
outsb
push
add
shrl
je
ja
in
in
mov
lods
jecxz
fmul
enter
and
cld
push
std
sub
dec
pop
insb
push
repnz
push
xchg
outsb
push
sahf
sub
mov
ja
cli
mov
mov
leave
imul
cs
lcall
pop
lea
push
lahf
scas
in
in
addr16
and
andb
ficompl
jb
dec
sbb
sub
add
leave
jo
mov
xchg
sub
and
jmp
push
cmp
cmp
jb
test
push
inc
xor
movsb
or
push
pop
or
stc
or
xor
orb
xchg
cltd
fdiv
jo
dec
lahf
jecxz
cmpsb
js
lods
adc
mov
stos
adc
and
daa
jo
push
mov
cmp
ja
push
aaa
xchg
imul
push
repnz
into
add
addb
mov
add
or
mov
lods
adc
popf
notb
mov
pop
xor
push
or
add
loope
xor
mov
or
mov
ljmp
sarb
xor
scas
shrl
mov
stos
je
dec
sub
jmp
xor
les
dec
jbe
cmc
pusha
sub
call
subb
subb
inc
sbb
sub
adc
rclb
push
mov
arpl
jnp
aaa
push
xor
jb
aam
xor
or
sub
push
mov
sbb
test
mov
or
into
inc
in
jns
mov
and
ret
iret
lahf
inc
mov
mov
fwait
or
dec
in
push
sub
lcall
jecxz
mov
push
into
add
movsb
sub
mov
push
mov
cmpsb
jge
cld
pop
jb
xchg
mov
add
mov
lcall
sub
lods
jg
mov
repnz
mov
sbb
hlt
push
movsl
cmp
cmp
repnz
bound
popa
insl
pop
add
fildl
cmc
push
add
xor
jmp
shlb
stos
incb
push
sbb
sbb
jne
push
dec
cmpb
mov
ljmp
mov
fisubs
mov
jmp
mov
jge
sbb
dec
pop
mov
dec
testl
enter
in
add
aaa
movsb
cmp
into
push
cmpsb
stc
out
pusha
cvtdq2ps
mov
xchg
mov
jecxz
push
xor
pop
jae
js
push
data16
scas
aas
jb
lods
push
and
movsb
add
pop
push
cli
aad
sub
mov
pop
pusha
jb
inc
adc
mov
sbb
test
jae
push
les
stos
jne
xor
mov
scas
nop
or
and
push
nop
jmp
aad
push
fmuls
dec
loope
and
push
xchg
push
dec
loopne
push
push
sahf
mov
sti
les
lods
jb
out
xlat
mov
and
xchg
push
fcomps
aas
mov
jns
ret
cli
mov
adc
mov
dec
mov
inc
jge
sub
or
bound
sbb
xlat
lea
pushf
fmuls
sub
js
lret
rorb
mov
repnz
dec
imul
lahf
or
dec
xchg
movsl
jl
shrl
dec
inc
mov
sbb
cmovo
adc
jne
jle
popf
data16
movsb
mov
insb
repz
mov
mov
cwtl
je
cli
dec
cld
push
call
add
xorl
sbb
icebp
mov
insl
mov
mov
dec
jmp
sub
call
in
enter
xchg
xlat
daa
mov
xor
lds
movsb
jl
adc
push
std
cmp
mul
push
inc
and
mov
xor
lods
sbb
or
sub
ja
mov
lock
cmp
lcall
mov
stos
cs
fsubrp
sbb
xor
jbe
push
sub
jge
out
mov
mov
ss
dec
sub
adc
sub
shll
cs
jecxz
stc
xchg
jle
and
js
inc
mov
lahf
add
cs
cld
sbb
ss
xor
xor
and
xchg
adc
xchg
adc
push
cs
xchg
rorb
sub
inc
loope
scas
jne
sub
mov
sti
inc
sub
out
adc
mov
add
fistpl
lods
push
xor
or
stos
mov
andb
dec
cmp
jo
cld
xor
pop
out
insl
jmpw
mov
pop
jbe
mov
out
andb
mov
orl
xor
fstpl
cmp
sub
xor
sub
lods
add
aam
je
jns
imul
xor
mov
fxtract
sub
enter
cmpsb
mov
movsl
andl
push
jecxz
sub
cs
incl
sahf
mov
push
mov
jbe
ljmp
pop
or
adcb
jge
fs
inc
pop
mov
xor
int
push
rolb
pop
loope
add
aad
cmpsb
push
sub
cmp
inc
sub
fidivl
lods
cwtl
sbb
fidivl
icebp
xchg
imul
mov
sar
movsl
fs
inc
ror
jb
inc
xchg
xor
dec
insb
jae
cld
jne
mov
data16
js
add
cmpsb
lea
rcll
scas
in
push
imul
loop
mov
into
repz
and
mov
mov
bound
jge
arpl
cli
popf
jbe
mov
mov
insl
test
pop
popl
bound
dec
mov
add
ret
add
rcrb
outsl
mov
nop
es
jecxz
push
das
movsb
mov
mov
bound
pop
and
and
mov
sub
mov
ljmp
xor
mov
inc
aas
sbb
push
pop
jae
lods
and
cmp
int
xchg
jbe
push
pop
subb
xchg
out
xchg
leave
add
popa
cmc
hlt
cmpsb
lock
ljmp
xorl
daa
adc
aas
and
cmp
adc
mov
in
in
xchg
add
sub
lea
mov
pop
inc
adc
pop
imul
into
ja
das
dec
mov
push
ret
mov
inc
shr
mov
mov
icebp
sub
fiaddl
push
imul
jmp
inc
or
sub
lret
sbb
imul
fisubrl
inc
xchg
fs
mov
xchg
cmp
or
das
je
out
pusha
movsb
adc
sbb
mov
mov
mov
mov
xlat
shlb
js
push
pusha
repz
stos
in
and
cmp
sarl
in
sbb
xor
aaa
mov
out
mov
inc
xor
cmp
jb
sbb
adc
stos
sbb
dec
xchg
push
or
mov
das
push
mov
sbb
xor
inc
cmp
mov
ret
iret
inc
jae
ret
or
mov
cmp
inc
adcl
xor
mov
sahf
call
lea
mov
lock
lods
sahf
jnp
cli
dec
jge
and
jb
xchg
sub
lret
outsb
xor
jns
ss
mov
xor
xchg
call
movsb
int
cld
dec
mov
fcomi
ficoml
or
xor
shll
mov
push
jb
daa
stos
mov
pop
sbb
xchg
mov
fidivrl
xchg
or
and
xchg
pop
in
into
cmpsl
ficompl
insl
inc
and
or
mov
fs
leave
adc
fildll
ljmp
jns
mov
add
pop
sub
or
scas
inc
stc
xlat
icebp
cmp
pop
mov
bound
mov
into
pop
lea
xor
mov
and
out
mov
pop
sub
icebp
mov
xor
cmp
sub
test
pmulhw
stos
cmc
sub
lods
jno
lock
shll
and
imul
mov
insl
insl
daa
adc
pop
adc
jnp
jle
sbb
xchg
call
fidivrs
ss
leave
jb
scas
jp
mov
leave
mov
sahf
jle
xchg
push
mov
fistl
xchg
adc
int3
cmc
stos
xor
out
inc
and
bound
test
adc
pop
pushf
inc
cld
loop
and
xor
sub
pop
sarb
mov
data16
out
cld
stos
ds
andl
das
cmpsl
inc
popa
push
sub
gs
push
lods
mov
ss
lret
pop
and
xchg
test
lret
ret
bound
push
clc
sub
hlt
imul
adc
mov
jbe
push
cmp
fwait
jb
jge
ret
enter
dec
arpl
insl
xchg
test
pop
sbb
dec
cmp
mov
add
push
sahf
push
shrl
xchg
sub
inc
cs
mov
inc
jmp
bound
xchg
mov
clc
rorl
ret
cltd
cmc
scas
and
and
inc
call
sbb
out
pop
mov
movsb
lods
push
into
inc
pusha
inc
repz
pusha
push
sub
dec
imul
mov
scas
sbb
xchg
pop
mov
or
mov
aas
scas
mov
cld
and
loop
push
pop
mov
jno
pop
sbb
popa
sbb
push
cld
popf
addr16
aaa
call
or
pop
push
sahf
rcll
and
lock
shll
shlb
pop
jbe
stos
icebp
aad
pop
scas
sbb
sti
popa
sbb
mov
xor
jns
outsb
push
xor
hlt
or
jae
idiv
sbb
push
sub
cld
pop
addr16
add
lahf
arpl
and
inc
fidivl
mov
pop
adc
shll
and
pop
jnp
mov
out
jge
out
sbbl
cmp
xor
mov
or
lahf
xchg
inc
push
push
leave
mov
push
data16
xor
push
mov
mov
jno
push
adc
mov
or
lcall
xor
addb
fnsave
and
push
xchg
sub
bound
movsb
lock
mov
loope
lcall
xchg
mov
jmp
jb
pop
mov
aas
push
pop
mov
add
aam
mov
addr16
pushf
call
sbb
xchg
add
fisttps
add
lods
mov
fidivrs
push
rorw
aam
inc
pop
sub
lods
mov
sub
loope
jae
mov
fdivs
xchg
and
xchg
push
cwtl
ret
mov
jbe,pn
sub
cmc
jecxz
cltd
in
xorl
fwait
pop
inc
or
mov
inc
subb
ret
fidivrl
lods
pop
jmp
jno
lcall
test
int3
push
push
push
movsb
mov
jns
enter
clc
jg
mov
xchg
push
mov
cmp
cmpsb
adc
mov
pusha
movsb
divl
mov
vcvtsi2sdl
cmp
out
sbb
sub
lretw
sbb
mov
jmp
iret
movsb
pop
iret
adcl
mov
xchg
xor
push
pop
mov
inc
cmpsl
pop
mov
stc
in
lock
stos
push
lret
idiv
jae
sub
ret
jge
enter
loopne
xorl
mov
pusha
cmp
cmc
xor
add
movl
and
jo
push
stos
jmp
mov
pop
mov
sub
gs
jmp
addr16
movsl
mov
lea
mov
leave
andl
aaa
mov
mov
hlt
xlat
mov
imul
xchg
xor
fsubrl
jb
stos
pop
movsb
jbe
aam
xlat
mov
or
adc
mov
mov
fwait
adc
insl
inc
outsb
fsubrs
push
fs
mov
inc
inc
sar
das
sbbb
loopne
mov
je
add
xor
out
jecxz
lret
pop
ss
andb
sub
or
mov
int
adcb
mov
imul
mov
arpl
mov
push
daa
push
pop
rorl
out
jno
adc
lods
imul
adc
jmp
and
movsb
stc
fcoms
pop
into
mov
div
xor
movsl
mov
loope
adc
dec
xor
repnz
cmpsb
rolb
int
sbb
icebp
rcrb
dec
inc
mov
inc
daa
sub
outsb
shl
jo
lods
jecxz
mov
shrl
movsb
das
adc
lahf
push
pop
push
push
mov
out
into
pop
inc
das
sbb
hlt
mov
scas
dec
repz
lcall
mov
mov
xchg
xchg
xor
pop
stc
mov
div
cmpsl
xor
cli
inc
pop
fmuls
clc
rcrb
cmpsl
pop
xchg
adc
sub
call
stc
mov
xchg
div
enter
jle
in
and
pop
add
mov
decl
xor
movsb
jmp
xchg
sub
jmp
add
mov
ss
or
mov
pop
es
mov
std
push
mov
enter
loopne
shll
test
push
sub
and
scas
stos
addr16
lods
ret
add
xchg
adc
fs
mov
add
sbbb
and
cmp
push
fdivs
cmp
outsb
call
sbb
les
jbe
mov
call
push
sarb
xorb
dec
outsb
test
dec
sbb
xor
pop
pop
xor
inc
lods
popa
sub
in
mov
stos
pop
pushf
ret
dec
add
leave
shll
insb
dec
sbb
adc
push
leave
jb
daa
mov
ja
fisttpl
adc
mov
add
and
leave
imul
sbb
popf
notl
fs
popf
pushf
add
mov
cmpl
xchg
sysret
push
cs
xchg
and
sbb
xchg
jge
jmp
movsb
out
lds
pusha
cmp
setne
sti
xchg
jo
into
mov
rorb
sysexit
pop
mov
jge
out
ret
push
cwtl
pop
adc
cli
push
mov
mov
sub
lcall
notl
movsl
push
push
movsb
dec
mov
push
or
scas
pusha
pop
jnp
sbb
cld
push
xor
test
leave
dec
and
test
sub
xchg
pop
shlb
pusha
pop
push
inc
mov
sbb
cmp
mov
jb
lret
inc
sub
daa
mov
sar
push
mov
adc
mov
iret
xchg
adc
fldenv
call
pop
jb
lcall
cmp
adc
push
sbb
ret
xor
xchg
xchg
idivb
mov
fwait
adc
dec
imul
lock
mov
jecxz
subb
jne
ss
sub
outsl
icebp
rorb
dec
dec
clc
scas
sbb
jbe
das
push
pop
xchg
adc
cltd
clc
stos
push
jo
movl
aas
stos
mov
test
pop
jno
mov
repnz
imul
ss
mov
and
mov
mov
les
and
push
mov
test
fisubrs
cmp
jecxz
push
inc
xorb
inc
push
push
lock
jne
adc
loopne
lea
xchg
fdivl
adc
xchg
pop
add
addr16
add
imul
inc
fsubrs
ret
das
call
sub
insb
movsb
pop
es
push
inc
pop
popf
mov
or
mov
cmc
sbb
movsl
fisttpll
mov
inc
mov
in
push
xchg
push
and
test
xor
cli
scas
sub
cmp
add
subl
jnp
bound
ljmp
and
int3
push
inc
cmp
cvttps2pi
sbb
or
sub
pop
int
inc
repz
cli
popa
or
cs
dec
xor
pop
mov
enter
lods
rcrl
sub
lea
roll
mov
mov
push
insl
jecxz
mov
dec
mov
pop
inc
lock
aaa
push
add
int3
add
mov
dec
sahf
or
mov
shlb
mov
aas
jns
xchg
pop
insl
and
jp
out
lcall
imul
subb
ja
adc
sbb
das
xor
fsubl
mov
sub
cmp
std
pop
cli
pop
pop
adc
cmpsb
scas
bound
fsubs
mov
inc
fisubrl
insb
lods
jae
aas
jns
inc
imul
or
aas
sbb
xor
pop
xchg
sbb
pop
pop
cmc
call
cmp
ja
add
mov
mov
push
jp
rol
lcall
in
xchg
movsb
cwtl
insb
push
push
cmp
inc
insb
ret
mov
es
xlat
addr16
and
xor
lods
mov
adc
enter
pop
push
dec
in
push
mov
lods
rol
fmull
mov
jno
cmpsb
push
int
inc
mov
cmp
jb
push
sub
outsl
loope
sub
insl
xchg
cmp
imull
cld
jbe
negl
push
lods
pop
adc
adc
jns
dec
jl
dec
xor
mov
loope
mov
jmp
int3
scas
ljmp
aas
sub
jae
mov
mov
sub
inc
xorl
mov
mov
cmp
pop
lahf
hlt
jae
adc
orl
insb
mov
enter
mov
not
add
jmp
hlt
decl
fimuls
xchg
outsl
movsb
stos
push
fmuls
sub
mov
jmp
addr16
test
xchg
fcoms
dec
lea
roll
movsb
jle
mov
xor
push
stos
insl
loop
push
sbb
sub
cmp
dec
mov
or
jecxz
mov
inc
add
xchg
mov
and
pop
sbb
cld
cld
sbb
adc
lret
mov
stos
cmp
pop
xchg
fmul
and
bound
enter
into
ljmp
push
lods
push
push
cmc
xchg
or
dec
cmp
cmp
cmp
inc
mov
stos
jp
and
imul
lcall
js
push
sub
and
inc
xor
mov
sub
push
pop
cld
xor
dec
mov
sbb
push
rcr
sahf
mov
xor
xor
adc
fnstsw
xchg
test
add
sub
scas
mov
cli
addb
xor
jae
push
jb
push
adc
in
shrl
repz
lret
call
mov
scas
jle
bound
fstpt
sub
cmpsl
sbb
cmpsl
out
inc
jp
inc
outsb
inc
fmuls
std
icebp
cmp
mov
stos
inc
pop
iret
sub
or
cmp
insb
mov
sub
mov
dec
iret
mov
enter
inc
push
lea
arpl
add
inc
movsb
sub
lea
dec
outsl
ret
hlt
xor
xor
mov
out
dec
imul
lods
inc
add
inc
xlat
lea
insb
into
hlt
xchg
xchg
pop
jne
jb
sbb
es
sub
in
inc
push
pop
stc
xchg
pop
pusha
dec
scas
cmpl
maskmovq
mull
dec
dec
adc
in
dec
sub
js
shrb
ljmp
xor
pop
lods
xchg
scas
push
into
mov
xchg
jl
xor
add
ret
mov
mov
shrl
out
fiadds
ljmp
outsl
sub
or
sbb
inc
clc
outsl
scas
ss
test
pushf
into
je
and
jnp
xchg
mov
add
dec
dec
cmp
popf
jp
dec
or
insl
sbb
ja
stos
sub
scas
movsb
mov
mov
xor
pop
outsl
aam
xchg
lock
xchg
sbb
iret
mov
push
mov
dec
out
sbb
mov
fistl
pop
inc
outsl
shll
icebp
lret
insl
and
loope
jge
mov
xchg
inc
jecxz
dec
repz
fucomi
xor
fcoms
push
and
cmpsb
subl
movsl
adc
jo
push
pop
push
mov
mov
movsb
push
mov
push
sub
jnp
out
mov
adc
inc
and
fnsave
cmpsb
push
outsb
jae
and
hlt
addr16
iret
inc
push
pushf
dec
outsl
pop
fiaddl
mov
gs
mov
xchg
jg
jb
and
das
sub
rcl
jb
adc
incb
push
jp
fbld
repz
pushf
bound
xor
loopne
xor
mov
jo
inc
fisttps
cmp
mov
jbe
movsb
add
jecxz
xor
cmp
jno
outsl
pushf
inc
lods
add
ret
arpl
dec
ror
cmp
mov
mov
fldt
push
pop
mov
pop
dec
pop
repz
outsl
insb
inc
cltd
aad
add
add
cmpsb
test
icebp
sub
cmp
mov
insb
movsb
pusha
stc
lret
outsb
mov
data16
pop
sbb
adc
nop
sahf
mov
call
add
and
outsb
aad
mov
insl
hlt
movsb
lcall
mov
jno
int
jg
dec
xchg
mov
pop
xchg
mov
sbb
push
inc
fildll
and
mov
xor
and
xchg
cmpsl
mov
jmp
ret
sub
std
sbb
sbb
ds
mov
out
outsb
rcll
and
ja
mov
adcb
inc
dec
sahf
sbb
xchg
sbb
pop
jbe
jp
daa
aaa
or
out
outsb
or
mov
sub
xchg
push
jg
cmpb
cmp
sub
cs
cmp
inc
jne
out
or
sub
cmp
mov
movsb
sar
pop
mov
pusha
cli
mov
std
inc
and
add
neg
enter
stc
fidivrl
loopne
test
dec
pop
fidivrs
das
sbb
lds
fsubs
push
ficompl
arpl
jne,pn
notb
leave
push
add
enter
ficoms
psllw
jno
push
mulb
sbb
arpl
mov
jmp
scas
push
mov
idivb
sbb
cmpsl
test
mov
inc
aad
and
loope
ljmp
pushf
pop
lret
xchg
xchg
and
push
add
sahf
fldcw
and
push
int3
cmpsl
push
jge
adc
int
sub
xor
rclb
cmp
cld
mov
movsb
mov
addb
pop
scas
jg
in
repz
dec
fstpt
in
mov
mov
fsts
jb
mov
insl
stc
xor
mov
popa
xchg
add
add
bound
xchg
mov
movsl
hlt
dec
movsb
cwtl
and
push
mov
lahf
inc
shl
fisubrs
imul
clc
sbb
mov
sbb
iret
mov
mov
rorb
das
jbe
or
stos
xchg
repnz
aaa
jle
dec
jo
and
jb
movsl
add
das
arpl
insb
in
jns
pop
lods
dec
loope
push
andb
outsl
and
mov
pusha
push
aaa
out
decl
call
aad
xchg
insb
sub
fnstenv
pop
subb
imul
xchg
or
pushf
jg
outsb
in
sub
fdivp
mov
inc
sbb
xchg
add
and
int3
sub
arpl
sub
pop
mov
adc
in
test
leave
mov
dec
mov
or
push
test
popf
sbb
or
aam
jecxz
mov
jmp
pushf
enter
outsl
xchg
adc
mov
movsl
fwait
test
mov
xchg
or
loope
xor
jge
jne
inc
cltd
dec
jbe
xchg
mov
aaa
sub
xchg
cwtl
mov
mov
pop
movsl
push
ret
std
ret
mov
mov
dec
adc
sub
push
jo
ja
xor
mov
out
sbb
mov
jge
or
sub
jno
fcoms
inc
mov
xor
pop
or
pop
inc
or
xor
enter
cmpsl
adc
add
stos
jns
pusha
fdivrs
mov
xchg
pusha
ror
sarl
lcall
mov
xor
inc
inc
rorl
mov
pop
imulb
sbb
lcall
data16
clc
inc
add
call
rol
xlat
ja
sub
sbb
dec
mov
mov
mov
outsb
jge
mov
mov
mov
adc
test
movsb
jecxz
xchg
fimull
ss
xor
test
adc
out
or
inc
lods
or
cmp
cmpsl
add
movsl
dec
inc
sbb
inc
xchg
adc
push
mov
cmp
lret
les
loope
dec
mov
test
jns
add
pop
daa
mov
cmpsl
fsubs
push
lods
stos
jge
aad
inc
es
cs
sub
inc
dec
test
mov
lret
fisubrl
pop
aad
pop
dec
mov
mov
imul
and
push
bound
popf
fmull
test
lret
mov
xor
push
adc
push
stos
xor
dec
data16
push
xlat
stos
pop
add
in
imul
push
jb
fs
inc
push
loope
mov
lods
and
lcall
inc
xchg
add
adc
pop
pop
sub
je
pop
sahf
mov
dec
dec
mov
rep
or
sub
loope
aam
jbe
jo
or
sbb
dec
sti
loope
pop
push
sbb
mov
cmp
sbb
xor
jns
jno
mov
lock
nop
imulb
ds
push
lods
es
in
ds
jno
lea
pop
lock
sbb
mov
test
dec
mov
mov
out
push
mov
jae
sbbl
or
mov
lcall
xor
lret
lods
jb
testl
inc
or
sbb
into
mov
dec
pusha
mov
in
mov
call
mov
pop
xchg
ss
xchg
ss
adc
ss
adc
cmp
aas
xchg
stos
scas
xchg
add
testl
fmul
cmp
push
mov
sarb
and
dec
in
inc
enter
stos
bound
mov
xor
inc
pop
shr
and
xchg
jg
fsubrs
or
dec
scas
lds
jno
arpl
loopne
out
push
push
clc
jmp
jo
in
sarl
lcall
sub
enter
fsts
mov
loopne
mov
idivb
or
test
lcall
int
xchg
lock
lcall
aas
mov
lds
lock
mov
add
lods
dec
mov
pop
dec
adc
pusha
imul
stos
cld
pusha
adcl
dec
push
cmp
sar
je
inc
movb
push
sub
inc
add
jne
cmp
cmpsb
inc
ds
lret
push
jbe
orl
jge
or
test
mov
push
and
mov
dec
movsb
cmc
inc
jns
adc
lds
add
stc
cmp
outsl
xchg
mov
pop
or
jmp
iret
int
ss
mov
sub
stc
jbe
xchg
cmc
mov
mov
push
lds
arpl
inc
xor
inc
aaa
jle
movl
or
addl
add
icebp
incb
andnps
sarl
pop
sub
cmp
inc
repz
pusha
xor
jge
scas
loope
inc
test
push
stos
repz
or
orl
enter
lcall
mov
push
mov
xchg
inc
pushf
mov
cmp
call
mov
dec
push
pop
fs
sbb
cmp
inc
das
fwait
sub
mov
push
sub
insl
jnp
jns
jo
mov
or
push
pop
icebp
xor
mov
lret
movsb
pop
xchg
xchg
out
mov
push
into
into
test
loop
inc
out
cmp
int3
mov
outsl
aaa
repz
inc
nop
pop
das
aaa
sub
icebp
pop
out
jne
sbb
adc
mov
push
inc
sub
xor
mov
cli
inc
push
pushf
insl
sahf
mov
imul
jne
xchg
ljmp
fbld
push
stos
inc
cltd
out
jno
stos
push
pusha
lcall
or
mov
das
sub
pop
in
mov
jne
shll
mov
push
movsb
mov
pushf
stc
push
mov
lods
cli
cmp
aas
adc
add
mov
jmp
dec
inc
repz
dec
sub
sbb
pop
sbb
ljmp
test
enter
mov
add
lea
cmpsb
loop
xor
mov
ljmp
jnp
mov
cld
insl
aas
jo
inc
test
cmp
cwtl
dec
jno
sbb
push
xor
mov
sahf
xor
mov
stos
mull
xlat
cmpsb
dec
jns
cmpsl
pop
int3
rolb
xchg
lods
or
bound
lret
orl
testb
and
test
loopne
sub
mov
adc
cmp
jp
dec
cmp
xor
mov
mov
mov
into
ret
loope
adc
in
push
or
mov
repz
lods
sub
or
sbb
xor
mov
pop
nop
in
dec
movsb
and
add
add
pop
xchg
int3
add
setns
dec
int
mov
or
mov
ret
and
shl
cmp
jp
lds
aad
jbe
call
stc
push
dec
ret
call
dec
mov
sahf
popa
cmp
in
cli
and
cwtl
loopne
ss
call
arpl
adc
sbb
dec
mov
stc
movsl
sbb
add
push
das
lods
out
or
xchg
cmp
addr16
jg
fcomip
pop
mov
pop
cli
mov
outsl
inc
dec
mov
aaa
mov
test
fnstsw
test
stos
and
xchg
lods
sbb
add
imulb
jb
out
sub
xchg
sbb
movsb
jecxz
mov
mov
and
cmp
push
jbe
jns
mov
aam
mov
shlb
jbe
xor
aad
mov
and
repnz
mov
sahf
arpl
mov
sarb
shrl
or
xchg
clc
fstps
mov
sub
or
dec
push
stos
bound
pop
mov
dec
inc
lock
nop
xor
cmc
fs
mov
mov
lcall
sahf
pop
xlat
cwtl
icebp
cmpsl
mov
xor
lods
mov
pop
adc
movsb
je
mov
arpl
hlt
add
or
shll
sub
mov
test
loope
mov
push
and
sbb
cmp
pusha
and
in
xchg
arpl
sub
jg
jae
push
arpl
or
testb
fs
movsl
sahf
in
bound
mov
je
out
in
xchg
jae
add
in
dec
aaa
fdivl
int3
cli
jo
sub
cli
ret
mov
adc
sti
mov
int
jmp
sbb
or
mov
hlt
inc
bound
xchg
pop
mov
ljmp
bound
push
jg
xor
hlt
movsb
push
sbb
mov
iret
stc
leave
and
imul
adc
icebp
mov
inc
jb
je
xchg
sub
xor
sahf
sub
sub
pusha
data16
and
aaa
sub
jno
hlt
sti
ret
andb
dec
scas
mov
pop
sub
xchg
imul
mov
and
iret
xchg
and
and
loop
int
lret
hlt
sarl
scas
ljmp
mov
into
mov
nop
xchg
fsubrl
invd
stos
mov
cmc
push
mov
insl
sarl
mov
sub
sahf
ds
mov
mov
iret
addl
adc
popf
adc
or
mov
cwtl
sbb
pop
sub
sti
pop
repz
dec
mov
imul
pop
xor
xor
mov
cs
add
test
das
ficompl
sbb
out
push
in
push
xor
addr16
data16
cmc
cmpsl
or
dec
bound
sub
dec
ret
mov
sar
dec
dec
lods
dec
mov
push
xor
lods
call
ljmp
sahf
in
jae
add
or
cli
popf
and
fwait
sbb
push
cli
cld
push
mov
in
adc
idivl
je
dec
jns
mov
add
lods
mov
lret
xchg
sarb
mov
mov
ds
mov
mov
lahf
and
or
push
out
pop
sarb
aam
or
mov
lods
jmp
dec
or
in
mov
outsb
mov
fsts
lods
jnp
and
jge
or
dec
fsubs
push
movsl
cmp
lret
idivl
repz
mov
in
mov
scas
sbb
out
test
push
fisttpll
sarb
out
out
xchg
stos
mov
and
push
addr16
aad
arpl
pop
xor
add
dec
mov
cmp
outsb
lret
adc
inc
jb
fisubrl
mov
push
add
mov
mov
mov
pushf
adcl
fsubs
and
int3
jne
sbb
push
scas
shll
ljmp
xor
mov
pop
push
xor
mov
xchg
dec
mov
test
cs
push
lock
in
jne
filds
ret
ja
xor
cs
aam
outsb
push
mov
jl
mov
test
push
mov
mov
out
add
addr16
push
imul
dec
test
out
or
sbb
push
lcall
jns
and
divl
mov
sub
or
cmp
push
add
cmp
inc
addr16
mov
ror
ljmp
push
enter
cmp
addb
fidivs
or
dec
jge
mov
push
push
pop
call
scas
adc
jns
loop
stos
movsl
into
and
jle
xor
mov
pop
lods
je
les
icebp
popf
aam
enter
mov
adc
xorb
pusha
fld1
xor
inc
movsb
push
push
and
orb
push
cld
dec
in
and
repz
inc
mov
cmpb
jns
jle
sti
push
out
push
daa
cmpsl
cmp
mov
jae
mov
into
dec
push
or
add
mov
es
add
sub
push
iret
push
mov
bswap
js
insl
pusha
test
loope
setb
sub
jns
adc
int3
cltd
dec
setno
xchg
loop
repz
daa
inc
and
add
jne
sahf
push
movsl
movsl
or
scas
ds
jo
fdivl
stos
add
pop
insl
sub
cwtl
lcall
mov
and
mov
push
lods
ret
mov
cmp
pushf
pop
mov
jae
cmpb
pushf
jb
push
mov
loopne
xchg
jb
out
dec
xor
mov
sub
sbb
sub
dec
sub
rorl
shlb
lret
insl
aas
das
add
pminub
outsb
test
inc
adc
sahf
xchg
dec
insl
mov
mov
scas
push
mov
scas
push
cmpsl
ljmp
mov
inc
divps
jno
aad
xor
mov
ret
testb
sbb
popf
fwait
pushf
jge
xor
cld
movsl
jp
repnz
mov
mov
popf
xchg
lods
cmp
or
subb
lret
sub
leave
mov
add
jle
movsb
sub
jecxz
jl
in
dec
mov
xchg
push
ficompl
enter
mov
or
out
sbb
arpl
inc
jo
mov
out
arpl
dec
arpl
push
adc
jb
gs
xchg
or
test
gs
sub
jnp
ljmp
movsb
mov
aam
es
adc
pop
lahf
mov
sbb
aas
mov
popa
stos
addr16
lea
cmp
sub
xor
lods
aam
pop
mov
add
xchg
in
xchg
cmp
inc
push
mov
jb
lock
jnp
cmpl
sbb
js
fcoms
dec
push
dec
es
jp
adc
jb
lods
xorl
inc
push
jne
add
aam
mov
imul
repz
pop
notb
xor
lea
out
cmpsl
push
dec
out
insl
mov
ret
dec
jne,pn
dec
sub
adc
int
xor
pop
push
pop
sarl
mov
dec
das
ret
movsb
xor
push
push
dec
mul
mov
movntq
out
mov
cmpsl
pop
and
mov
jns
cli
xor
xchg
das
fcoml
sbb
ret
inc
loopne
scas
add
xchg
stos
fimull
adc
bound
scas
pop
mov
es
add
jbe
stos
xor
into
dec
aaa
testb
shlb
mov
push
fsubrs
sbb
inc
outsl
mov
fwait
mov
bound
inc
lcall
sbb
lcall
loope
mov
into
mov
cltd
mov
xchg
push
push
sub
pop
jge
lea
jecxz
adc
sbb
js
cmp
adc
test
add
ficompl
insl
mov
xor
mov
mov
outsl
mov
jns
push
addr16
mov
push
pop
out
adc
xor
sub
stos
cs
out
push
lds
shrl
inc
jmp
and
xchg
mov
xor
fists
pop
movsb
push
push
scas
ret
hlt
mov
mov
mov
popa
lock
sbb
int3
cmpsl
ss
mov
clc
add
xor
pop
cwtl
sub
call
mov
scas
in
mov
shll
or
inc
push
xor
ret
push
or
fsub
or
and
lret
dec
or
push
jns
inc
mov
inc
push
and
scas
xchg
mov
dec
out
outsb
test
fsub
enter
sbb
jae
adc
jecxz
inc
stos
jmp
shlb
add
test
insl
jg
mov
xor
mov
pop
inc
xchg
aas
add
andb
hlt
cld
mov
mov
adc
dec
out
test
pop
mov
cli
aaa
stos
mov
call
out
xor
loope
clc
sbb
push
imul
das
jmp
and
add
pop
xlat
ficomps
cmpsb
je
and
orb
jnp
jno
cmp
push
jae
sbbb
mov
push
sub
jge
cli
jmp
mov
mov
ja
or
xor
insl
sbb
mov
pop
jg
pop
hlt
mov
cmpsl
shlb
clc
js
xor
mov
mov
out
lea
jno
sbb
fiaddl
xor
sbb
sub
mov
popa
xchg
sub
push
lret
inc
inc
adc
sub
arpl
push
xor
jge
mov
jle
cs
mov
adc
cmp
add
sbb
lods
in
push
pushf
jge
inc
outsb
repz
fwait
loope
jno
dec
iret
dec
sub
push
out
cs
sbb
or
mov
sbb
addl
stos
jnp
int3
lahf
ret
call
cmp
add
lea
in
loope
out
mov
lods
movsl
or
stc
pop
mov
pusha
js
insl
insb
push
mov
ficomps
out
loope
ljmp
or
and
shlb
xchg
shrl
pop
jbe
inc
dec
add
push
adc
loope
lcall
lock
scas
pop
and
int3
xchg
jp
jbe
sub
lock
push
cmp
ret
icebp
movsb
sbb
inc
gs
cld
into
cmp
jb
das
push
rorl
cmpsb
fcmove
jmp
pop
sbb
imul
sbb
pusha
xor
inc
pop
inc
push
pop
inc
and
and
cmc
daa
shrb
js
cltd
sub
imul
xchg
add
imul
out
test
dec
test
ret
adcl
mov
enter
scas
or
pop
out
mov
mov
test
ss
int
cli
ljmp
pop
jbe
shrl
dec
cmpsb
add
mov
in
out
roll
mov
ljmp
or
repz
xorl
jmp
and
lods
sbb
cmpsl
xchg
in
fsubrl
repz
inc
mov
mov
cmpsb
fistl
repnz
hlt
jp
push
pop
push
push
movsb
sub
arpl
nop
sbb
push
add
lods
add
lcall
aas
subb
mov
pop
jno
or
test
lahf
jp
add
loope
daa
mov
in
or
mov
jl
out
cvtps2pi
fsubr
popa
bound
pop
mov
dec
mov
or
mov
aaa
fsubrl
xorb
enter
add
fiadds
scas
cwtl
std
lcall
inc
imul
pop
add
sub
stos
repz
mov
test
mov
ds
add
pop
push
mov
iret
xchg
fdivl
mov
pop
icebp
hlt
jmp
xor
insl
and
push
and
inc
mov
xor
jle
adc
lock
xor
pushf
in
lods
stc
in
lods
sbb
inc
lret
es
int3
xchg
imul
addb
stos
clc
lods
jb
pusha
popa
pop
jp
mov
ret
xor
cmc
nop
iret
sbb
bound
ret
movsb
mov
xor
into
mov
fldenv
ljmp
mov
add
loope
push
nop
imul
aam
and
test
mov
xchg
or
popa
rcr
mov
shll
add
dec
add
dec
push
cmp
xor
mov
not
in
sbb
icebp
icebp
add
mov
jmp
push
jg
mov
repz
std
jo
jg
test
mov
rep
popf
push
test
xor
in
jb
das
xor
loopne
cli
imulb
inc
mov
insl
xorl
push
pusha
repz
adc
cld
outsb
loop
cmp
in
mov
xchg
or
or
mov
cmp
pandn
in
lcall
pop
inc
xchg
xor
ret
xorl
insb
inc
push
leave
cmpsb
ss
adc
movsl
int
mov
mov
fisubrs
xchg
jne
pop
lcall
adc
ss
pop
mov
cmp
dec
add
dec
les
test
and
mov
or
xchg
cwtl
hlt
mov
mov
sub
mov
loope
inc
sbb
sbbl
movsb
mov
jo
jecxz
adc
mov
into
mov
cmp
cltd
mov
mov
push
xchg
push
mov
mov
ja
addr16
negb
popa
dec
inc
inc
pusha
adc
ss
daa
push
pop
mov
mov
pop
jns
enter
int
popf
lods
mov
ret
inc
jp
mov
ret
mov
lods
cmpsb
mov
mov
movsl
nop
fistpll
mov
jb
xchg
jns
cmp
pop
sub
pop
sar
pop
lea
cmp
in
xlat
sbb
xor
mov
jb
dec
adc
cltd
cmpsb
repz
mov
mov
mov
ja
inc
mov
push
push
adc
shll
lods
pop
sti
xchg
pop
mov
fistl
cltd
inc
cwtl
push
sub
sbb
sbb
xchg
and
sbb
rorl
lods
ret
jp
das
and
xchg
fldcw
jo
sub
fucomi
push
hlt
mov
sbb
sbb
das
movsb
mov
mov
jge
mov
iret
stc
loope
xor
push
int
test
jno
xchg
lea
cmp
cmp
cs
dec
dec
jg
addr16
sti
pop
ss
mov
scas
sub
push
je
rolb
addr16
test
movsb
jg
jbe
dec
jns
lods
jecxz
pop
xchg
add
and
movsl
pop
js
in
leave
cmp
stos
mov
xchg
jle
cs
lods
mov
cmp
adc
adc
ret
lea
jecxz
mov
sbb
sub
push
xchg
clc
loopne
insl
xlat
sbb
rcr
daa
out
stos
adc
inc
jbe
cmc
in
mov
sub
cmp
mov
call
xchg
stos
xor
and
movsb
cmp
loope
mov
mov
cwtl
push
mov
movsb
sub
in
lret
icebp
inc
xchg
xchg
inc
sub
sub
mov
xor
cwtl
sbb
repz
data16
sbb
fsts
dec
xor
outsb
mov
lcall
jge
cltd
mov
test
xor
xchg
push
sbb
lods
test
loope
add
cmc
mov
jo
negb
movsl
sub
stos
pop
adc
mov
cwtl
inc
ss
repz
sbb
inc
and
daa
push
ljmp
lods
in
movsb
dec
pusha
push
sub
pusha
lret
add
xor
repz
xchg
or
mov
shr
aas
add
adc
mov
punpcklwd
iret
sbb
aad
ss
hlt
adc
push
test
enter
lock
mov
pusha
imull
sub
sub
push
jge
xor
es
aam
xchg
dec
mov
dec
js
test
rolb
fiadds
dec
mov
sub
mov
jne
dec
jge
cmp
mov
sbb
push
lods
mov
sbb
pop
and
xchg
mov
mov
stc
dec
movsb
lcall
add
jge
xchg
pop
repnz
push
jp
add
imul
lods
out
jl
jbe
loope
insl
das
stc
mov
pop
fldl
cmp
clc
lar
scas
lcall
les
cld
add
mov
xor
sub
aad
mov
inc
mov
sub
rcll
fldcw
ret
push
loope
ror
sub
jl
stc
mov
movsl
xor
repz
std
loopne
mov
adcl
jmp
rcrb
int3
add
rclb
mov
scas
mov
out
test
adc
cltd
inc
jl
imul
jno
mov
xor
add
loop
inc
ds
dec
push
and
pop
shlb
xlat
testb
xchg
popf
cmp
jo
insl
dec
shl
cmp
add
add
xchg
xchg
push
hlt
icebp
xlat
push
pop
jne
xor
into
mov
sbb
aas
xor
inc
mov
xor
push
pushf
cmp
dec
dec
test
mov
cwtl
adcb
mov
xchg
jne
mov
jno
lret
add
pop
push
sub
pop
imul
jae
jno
push
lcall
mov
and
mov
push
sbb
in
sub
sub
shrb
bound
jge
or
loope
or
enter
xor
aam
cmp
mov
xchg
into
sub
imul
bound
add
popfw
mov
into
xor
roll
fwait
sub
push
mov
movsb
dec
call
xor
push
adc
popf
das
scas
xchg
call
ds
sbb
jb
inc
ja
cltd
or
push
cmp
leave
aad
stos
mov
push
outsl
addr16
lea
insb
sbb
pusha
ret
cmp
sub
cmp
dec
cmpsb
add
sahf
push
dec
dec
sbb
fwait
pop
stos
mul
popf
pop
push
xchg
out
enter
std
outsb
and
scas
subb
push
repnz
jecxz
xchg
cmp
mov
jp
mov
cld
mov
in
out
shlb
xchg
jecxz
pop
xor
cli
mov
sub
ret
out
mov
inc
lock
sahf
jge
sub
test
mov
push
lcall
mov
outsl
push
mov
push
sbb
sub
call
stc
sub
dec
jge
js
scas
outsl
inc
push
or
jge
mov
stc
movsb
out
stc
push
inc
subb
add
ret
cmpb
out
mov
popa
fmul
andb
cmp
sub
sub
adc
push
lcall
repnz
ljmp
fcoms
mov
pop
xchg
pop
jp
inc
stos
pusha
sub
cmp
push
push
push
lock
jle
push
and
inc
stos
das
dec
pushf
loopne
cwtl
pop
add
jg
call
adc
lret
pop
and
push
xor
mov
adc
cs
and
sbb
iret
adc
and
adc
mov
leave
pop
cmc
clc
push
mov
outsb
jnp
scas
pusha
movsb
pop
ds
push
das
pop
scas
pop
adc
xor
and
or
sarl
mov
lcall
jno
aaa
cs
xor
mov
xor
int3
rol
shrb
sub
mov
sub
mov
push
pop
xor
pushf
and
sub
mov
push
out
test
mov
jg
dec
das
pop
xchg
jp,pt
rcl
sub
push
cltd
adcl
cmpsb
push
lcall
ss
mov
out
mov
push
outsb
mov
push
add
and
cs
lods
dec
sbb
jns
sbb
sbb
loope
pop
pop
push
cs
mov
xchg
jge
mov
mov
es
ljmp
imul
adc
add
dec
test
jno
lea
xor
fdivs
out
lcall
lods
mov
clc
adc
xor
dec
ja
sub
dec
cmpps
mov
lds
cld
leave
mov
push
les
dec
add
jge
int3
fsubrp
pop
andl
sub
jge
cmpb
xchg
dec
add
movsl
rcl
mov
nop
sub
dec
dec
or
subb
push
icebp
jecxz
dec
mov
add
movsb
cmp
cltd
adc
notb
cmp
xor
mov
das
gs
adc
jp
shrl
jl
hlt
sbb
inc
adc
mov
and
cwtl
sub
or
fstps
adcb
test
jp
inc
mov
out
dec
mov
incb
cltd
data16
pop
mov
lods
inc
and
addb
sub
dec
xchg
mov
mov
jl
out
sub
sub
test
jl
orb
mov
imul
es
pop
mov
adc
lods
inc
lcall
or
outsb
in
shl
inc
push
push
in
adc
pand
call
xor
pop
dec
into
rcrb
pop
testb
lods
or
cld
js
mov
lock
dec
add
bsr
xorl
lods
ss
ljmp
lret
jge
push
jecxz
movsb
sub
sub
iret
sti
call
imul
xchg
pusha
lods
loop
cmpsb
in
mov
add
cltd
lds
jecxz
cmc
pop
add
push
inc
test
jb
inc
fists
xor
xor
call
ret
inc
in
dec
ret
push
xchg
jp
sahf
call
jb
inc
sub
dec
fisttpl
inc
fdivr
fisubrs
nop
inc
negb
mov
dec
js
incb
lods
out
cld
sbb
add
mov
cmp
nop
faddl
sbb
mov
cltd
fisubrl
jge
sbb
in
mov
popa
mov
adc
ret
cmpsl
xor
fwait
xchg
lret
mov
and
jno
lcall
fdivs
cltd
push
imul
fdivrl
lahf
clc
inc
mov
call
push
gs
xor
lds
repnz
lcall
ja
cmc
xor
into
mul
sub
movsb
subl
lahf
fs
adc
les
mov
lods
repz
mov
xchg
pop
mov
out
mov
or
inc
fstpt
and
lahf
in
mov
movsb
sbbb
out
push
xor
fs
std
push
sub
outsl
js
shll
call
test
movsb
jl
xchg
mov
popa
mov
ss
repz
mov
les
xor
movsb
ds
mov
inc
clc
iret
hlt
nop
cmpsb
das
pop
push
dec
pop
aaa
mov
mov
xchg
jbe
in
in
jno
lds
sahf
xchg
xlat
mov
loope
repz
ret
scas
cs
pushf
jg
xor
bound
mov
cmpxchg
mov
sub
iret
xchg
jecxz
push
push
pop
push
int3
daa
xchg
push
mov
movsb
imul
hlt
adc
das
or
xchg
mov
stc
cmp
dec
and
fistps
loope
jb
loop
fs
out
insb
xchg
dec
mov
out
stos
icebp
push
mov
sub
mov
mov
ret
sbb
adc
sbb
dec
addb
mov
jg
push
sub
jge
shrb
lds
out
or
mov
out
xor
jbe
test
mov
sti
addr16
int3
test
fwait
pop
mov
lahf
roll
push
movsb
jle
adc
leave
aaa
lea
mov
jge
fsubs
jo
jle
cmpsl
ficomps
repz
subb
ljmp
mov
adc
je
jno
jnp
add
mov
rcl
loope
sub
call
mov
arpl
mov
je
push
iret
lret
mov
dec
andb
ret
jb
sarb
push
sahf
pop
out
sub
add
int3
lods
push
mov
jge
or
dec
and
and
enter
out
fwait
xor
sub
fdivrs
add
sub
addr16
mov
add
cmc
idivl
push
lea
loop
insl
fildl
call
mov
mov
push
lods
xchg
mov
div
add
lods
jns
vmwrite
dec
mov
dec
add
cwtl
pop
inc
or
dec
roll
mov
fwait
sarl
or
push
aam
sti
xor
push
ljmp
adc
cld
movaps
or
ret
mov
jne
cltd
mov
sub
sbb
adc
mull
mov
mov
mov
popf
sbb
mov
mov
lods
mov
pusha
xchg
popf
adcb
inc
int3
cmp
ret
jbe
push
bound
sbb
jecxz
jo
ret
test
pop
xor
sbb
sbb
movsb
jae
cmp
xor
xchg
sahf
dec
mov
sbb
jl
add
lods
xchg
add
repz
in
xlat
mov
push
jecxz
push
hlt
adc
sahf
sub
scas
push
mov
fiaddl
and
std
mov
cli
popf
cmpsb
shlb
movsb
push
scas
adc
ds
mov
cmp
push
push
jecxz
lcall
jge
mov
adc
push
inc
loope
pop
int
gs
mov
jge
dec
bound
adc
les
or
inc
cli
dec
popf
push
dec
sub
adc
inc
pop
je
xchg
stos
lds
sub
outsb
mov
jo
clc
das
mov
push
mov
mov
or
push
sub
push
mov
or
insb
mov
shrl
addb
sub
loop
xchg
jns
jge
mov
cltd
xchg
mov
decb
and
mov
inc
inc
mov
popf
xor
test
test
push
dec
jno
jo
lret
fildll
lcall
cwtl
inc
shlb
xor
inc
pop
mov
adc
jmp
mov
and
add
fsubl
arpl
test
stos
add
movsl
xor
aad
ja
scas
pop
jecxz
mov
scas
pusha
cmpsb
jbe
sub
xor
xor
pop
jne
xor
inc
add
jb
or
mov
into
fidivl
sahf
lret
inc
repz
push
lods
rcrb
dec
icebp
arpl
dec
push
xor
or
int3
add
lahf
push
add
insl
ss
mov
push
movsb
in
mov
jge
sbb
mov
jb
loopne
sub
xor
enter
test
pop
arpl
les
ss
movsb
out
mov
bound
or
fdivr
cltd
push
inc
add
dec
lods
call
push
push
repz
push
push
xor
mov
fs
stos
out
push
xchg
aas
fcoms
xorl
movsl
xor
inc
iret
shl
cmp
popf
xchg
jg
mov
sbb
xchg
adc
sub
test
ret
imull
push
into
call
mov
fs
mov
lds
ljmp
sbb
xor
push
imul
or
mov
mov
and
pop
fnstenv
mov
scas
sub
sub
call
cmp
cmc
xchg
incb
mov
mov
sub
sti
mov
movsl
add
mov
mov
xchg
pop
out
test
push
sbb
push
rcrb
mov
inc
fcomps
outsb
dec
mov
mov
mov
sbb
fiadds
out
mov
push
cmpsb
es
lcall
xchg
xor
les
stos
inc
hlt
push
fs
in
sbb
jno
cmc
sub
mov
scas
push
push
cmpsb
lock
pop
out
rcll
pop
or
jb
enter
imul
popf
sub
mov
add
pop
lret
push
pop
mov
call
lret
fimuls
push
outsl
data16
inc
imul
adc
into
fcomip
push
dec
adc
push
and
movsb
sub
mov
incl
bound
addl
push
jmp
popf
subl
aaa
cld
repz
hlt
loop
cmp
pop
into
test
or
sub
out
sbb
pop
jns
push
mov
and
movsb
mov
mov
leave
mov
daa
pop
push
aam
jnp
out
mov
cmp
in
jmp
mov
dec
mov
ds
int
mov
mov
pop
adc
arpl
repnz
pop
rorl
add
sbb
mov
push
sub
mov
stos
outsb
xchg
rcr
inc
in
pop
pusha
xchg
push
jp
sub
fisubl
mov
nop
pop
in
ror
add
xchg
fsubrs
test
jae
add
sbb
test
mov
jo
sarl
pusha
inc
fcmovbe
loope
aad
test
push
int3
mov
es
out
fnstenv
xchg
aaa
inc
inc
popf
out
out
jb
icebp
mov
sar
out
je
shl
dec
subb
mov
cli
incl
bnd
mov
push
push
sbb
push
fld
cmp
xor
loop
flds
mov
rcrl
inc
xor
mov
sbb
xchg
push
ret
sbb
movsl
cltd
loopne
das
mov
ja
mov
cmp
cmp
addb
cmovo
inc
fs
imul
add
sub
push
or
leave
test
and
push
cmp
xchg
loop
push
mov
sub
or
cmp
sbbl
jnp
stos
sbb
loop
cmp
fwait
sbb
out
mov
ss
into
scas
fistpl
pop
scas
shlb
sbb
out
jo
ret
mov
xor
mov
es
sbb
pop
cmovb
rolb
ret
mov
mov
cmp
icebp
cmpsl
inc
out
cs
stos
add
into
rorb
sub
lods
xchg
std
ljmp
adc
mov
xchg
les
pop
cli
sahf
rolb
insl
imul
in
out
enter
mov
adc
movsb
sbb
lret
mov
fcom
or
push
inc
add
pop
adc
sbb
shl
movsb
adc
pop
mov
jecxz
mov
lcall
sbb
loop
shl
out
or
push
sti
out
and
xor
lock
xlat
clc
mov
ficompl
je
push
xor
cmp
loope
fidivrs
sub
dec
les
leave
push
imul
iret
inc
push
inc
and
jge
pop
lcall
mov
pop
cltd
push
into
mov
int3
push
add
mov
push
dec
xor
pop
nop
out
sahf
cmp
lods
dec
das
cmp
jns
push
xlat
mov
cli
popa
rolb
shll
mov
cmpsl
adc
test
decl
pusha
movsl
nop
mov
jo
ret
lods
scas
rorb
enter
int
pop
movsb
mov
adc
ss
leave
sbb
rcl
cmp
stos
dec
inc
shlb
mov
and
aam
sub
add
mov
stos
push
jb
out
das
sub
test
adc
je
sbbb
in
xchg
not
loope
aam
xchg
outsl
push
insb
outsb
out
cmp
sub
shll
jne
dec
and
mov
adc
jg
mov
filds
fmull
xchg
lods
test
lcall
mov
movsb
loope
inc
out
loop
mov
ljmp
xor
inc
ljmp
data16
mov
orl
stc
push
inc
push
sub
xchg
push
std
popf
cwtl
outsb
push
dec
cmp
imul
dec
in
pop
adc
fsubrs
mov
xor
mov
mov
fistps
mov
push
push
iret
pop
mov
mov
pusha
iret
out
sub
fdecstp
or
xchg
xor
out
stc
mov
sbb
ret
popa
std
test
rcr
mov
dec
sub
jmp
xchg
mov
inc
stos
mov
cmp
xchg
inc
dec
loop
insb
add
pusha
pop
mov
test
push
ss
or
mov
push
xlat
jge
mov
mov
test
rorb
mov
loope
lds
dec
repz
mov
sti
or
dec
mov
movsb
dec
aad
js
sbb
xchg
ds
or
and
mov
lret
and
test
rol
sub
mov
mov
jmp
cli
aad
jnp
lock
es
out
ss
lods
mov
insl
lcall
and
iret
sub
ficoml
xorb
pop
cmp
push
cmpsl
mov
je
or
hlt
repz
out
fsubs
bound
or
outsb
nop
xchg
xlat
mov
iret
xchg
nop
mov
mov
pop
xchg
fdivs
and
fwait
mov
xchg
ds
div
enter
sub
dec
xchg
add
incb
push
shlb
mov
out
cmp
push
int3
ret
xlat
test
pop
sahf
in
pop
mov
rol
jnp
add
mov
push
sub
int
cmpsb
call
mov
or
test
setb
arpl
sub
rorb
sub
out
lea
rclb
mov
push
dec
mov
mov
rcrl
or
cmc
mov
andb
sbb
mov
or
xor
sub
fcomi
call
sbb
mull
pop
cwtl
enter
movsb
push
scas
mov
mov
cmp
xchg
aaa
push
push
daa
stos
sahf
popa
mov
inc
jp
push
push
xor
lret
insb
fbld
push
push
test
ficomps
inc
adc
stc
mov
or
in
mov
imul
cmp
ret
call
inc
push
lock
test
cltd
lea
popf
inc
xchg
dec
hlt
inc
jbe
movsl
addr16
push
in
int3
xchg
mov
mov
sub
sub
xchg
cs
ret
inc
bound
lret
sub
sub
adc
frstor
lcall
xchg
cmp
sbb
jge
iret
or
mov
popa
movsb
in
in
mov
mov
out
orb
scas
pop
repz
push
xchg
rolb
jbe
cmpsb
cs
out
lods
dec
push
mov
mov
xchg
fdivl
addl
pusha
xchg
mov
pusha
pop
ss
shlb
dec
adc
mov
loop
pop
sub
pop
hlt
scas
andl
sub
movsb
fstpl
push
scas
mov
cmp
std
jne
stc
in
out
nop
jae
mov
xlat
hlt
mov
sahf
xchg
cmc
mov
daa
ljmp
cli
mov
cmp
jge
push
sub
movsb
dec
sub
in
mov
daa
xor
mull
incl
cmp
mov
xchg
sub
mov
bound
cmpsb
cmpl
xor
popl
popf
packssdw
mov
sbb
xchg
fcompl
fcoml
dec
out
into
push
adc
mov
cltd
push
andb
pop
into
pop
lods
stc
inc
push
push
push
lcall
push
pop
inc
mov
cli
icebp
stos
xlat
jae
mov
lock
xor
or
or
xchg
xor
cmp
mov
cli
sti
insl
movsb
cs
loope
and
jge
and
adc
fisttpl
in
xchg
xchg
dec
in
jno
cwtl
adc
xor
mov
popa
xchg
stos
cmc
ja
repz
and
lcall
pop
pusha
or
rorl
pop
andl
sti
lock
loopne
mov
jnp
pop
ja
jmp
cmp
lret
testl
sbb
push
pop
inc
adc
lods
sbb
ret
inc
mov
add
adc
fsubrp
ja
fdivrs
adc
mulb
mov
gs
scas
ficomps
test
push
es
sub
popf
loopne
push
xchg
lods
or
jno
jnp
inc
and
movsb
fdivl
cmp
rdpmc
jns
in
add
xchg
sahf
out
out
cli
lret
rorl
shrb
stos
iret
xchg
mov
sub
xlat
mov
addb
out
push
clc
daa
mov
or
lock
cmp
or
xlat
and
adc
test
mov
data16
hlt
lcall
ds
popf
ret
or
mov
dec
jno
movsl
xchg
cmp
jg
loope
push
js
pop
popf
movsl
mov
dec
sbb
mov
fmull
jp
stos
adc
or
inc
cmp
jbe
inc
xor
sbb
adc
inc
ljmp
mov
mov
insb
push
movsb
lea
fs
int
sub
pop
insl
cmc
dec
dec
outsl
xor
fldt
mov
add
call
popa
mov
mov
movsb
adc
fisubs
ret
dec
jg
push
aam
mov
and
cmp
adc
stos
and
ret
fs
push
push
sbb
aam
in
pop
loope
xor
pop
cmp
das
mov
mov
xchg
push
xor
popa
jae
stos
mov
aam
dec
or
fisttps
sub
lahf
xchg
in
push
leave
cmp
jno
adc
int3
ficomps
ret
sub
jno
movsl
loopne
or
cmp
sub
adc
pop
mov
mov
rep
dec
push
mov
cmp
and
inc
mov
mov
test
inc
add
sub
xor
lods
outsl
cmp
pop
rolb
adc
pop
lock
test
xor
adc
bound
cmpb
cli
outsb
mov
cmp
xchg
insl
xor
pop
test
inc
lret
xor
push
cwtl
movsb
scas
xchg
jno
insl
cmp
mov
push
push
aad
sub
data16
add
push
push
notl
mov
jp
lret
in
xchg
sbb
lret
lods
repnz
jae
mov
mov
sahf
adcb
popf
mov
sub
adc
fwait
sahf
lcall
cli
and
jne
jle
pop
inc
push
fbld
mov
or
add
cli
subb
or
and
mov
movsl
int
jno
cmpsb
sub
pop
mov
in
jb
xchg
cmp
test
jo
cmp
popf
add
lret
mov
test
jno
fildl
mov
into
xchg
bound
cmpsb
inc
adc
ret
cmp
add
mov
xchg
push
movsl
jo
icebp
mov
jp
mov
stos
pop
pop
addr16
enter
push
fdivrp
bound
xor
inc
rclb
jns
dec
xchg
add
fildl
pop
fwait
push
lods
adc
sub
aad
jb,pn
scas
sub
cmp
std
push
ficomps
dec
shlb
mov
lods
in
gs
pop
adc
mov
shll
push
push
inc
loope
les
aaa
nop
push
mov
mov
add
and
or
xchg
pop
inc
enter
and
lret
sbb
mov
mov
lret
ret
out
add
sbb
movsb
push
and
pop
push
movsb
data16
and
mov
ret
movsl
icebp
mov
mov
mov
jp
loope
adc
adc
and
fisubl
call
js
or
ldmxcsr
sub
cmpsl
and
rclb
jge
es
mov
xchg
add
sub
icebp
rcrb
dec
xchg
je
lret
insl
sbb
imul
and
fistpl
scas
inc
sbb
ss
insl
mov
pusha
ret
iret
pop
lcall
lods
test
inc
mov
pop
sub
mov
jecxz
pop
in
iret
and
cmp
cmpsb
subl
and
movsb
fcompl
mov
mov
fnstenv
movsb
dec
loope
dec
mov
fdiv
pop
sqrtps
sub
lods
and
test
push
xchg
jnp
ret
push
jg
sbb
sub
mov
sub
adc
lcall
sbb
jge
std
stos
nop
xor
insl
pop
pushf
and
mov
mov
ret
push
lret
std
jno
insl
or
lods
add
push
sub
dec
sahf
jbe
adc
or
jb
movsb
and
add
movsl
cli
cmp
sbb
pusha
inc
sbb
xorb
repnz
dec
dec
xchg
xchg
aam
sub
adc
cmpsb
push
dec
mov
jg
sbb
enter
imul
jae
add
mov
arpl
xchg
je
repnz
pop
in
sbb
fstpt
lea
mov
and
dec
push
stc
or
clc
mov
adc
lods
jbe
cmpsl
ret
stos
stos
mov
cs
mov
lods
mov
daa
fnsave
test
shlb
aaa
scas
push
cmpsb
mov
addb
in
pop
les
xchg
mov
mov
test
divb
fldpi
mov
popa
sbb
pop
mov
xor
mov
and
movsb
push
cwtl
push
clc
sub
test
mull
xchg
or
jns
mov
mov
push
leave
cltd
sub
add
stc
xchg
mov
mov
mov
lods
sub
addl
aam
push
insl
test
mov
cmc
push
inc
aam
mov
mov
jo
enter
loope
mov
outsl
xchg
shlb
mov
or
and
mov
cmpsl
sbb
mov
aas
dec
addb
sbb
dec
mov
test
orb
stos
ret
in
rcll
movsl
push
or
les
loope
movsb
stc
cli
lods
xchg
ds
or
mov
and
lods
rorb
add
out
loope
out
leave
xchg
call
repnz
outsb
xchg
add
rorl
int3
mov
movsb
adc
mov
cli
sbb
mov
dec
repnz
xor
sbb
ret
cli
jo
mov
pop
insb
and
icebp
sar
aam
popf
pop
mov
stos
mov
and
das
sub
push
push
popa
cmp
arpl
aam
mov
jge
adc
int
jp
jecxz
outsb
imul
push
and
fistps
xchg
and
and
mov
insl
adc
dec
push
pop
outsl
xchg
imul
hlt
xchg
in
stos
les
bound
and
fadds
push
and
or
je
mov
push
mull
stos
in
inc
add
ret
aam
jge
cmc
ret
pop
sub
stos
leave
xor
test
push
jnp
cmpsb
inc
movsl
shl
sub
mov
push
pusha
movl
pop
pop
cmp
aam
mov
mov
dec
xchg
sub
and
lea
mov
xor
das
mov
ficoms
sbb
add
js
aaa
movsl
loopne
mov
cltd
sub
in
xchg
sti
lds
xor
mov
jnp
mov
rol
enter
sub
xor
into
jb
pusha
sbb
pusha
faddl
cmp
sbb
dec
enter
dec
ss
push
popa
sub
dec
popa
mov
insb
sbb
mov
cmpsl
xor
lods
cmpb
adc
fwait
out
imul
sarb
in
jge
test
les
pop
mov
jbe
dec
imul
xchg
push
dec
cmp
cmp
push
lret
cltd
xor
and
ljmp
adc
mov
cs
mov
and
cmc
iret
sub
std
mov
cmc
pop
sbb
cld
xchg
push
popa
push
mov
sub
mov
jle
pushf
pop
mov
and
rorl
mov
shll
xchg
test
pop
pop
ja
add
shll
adc
add
cs
sbb
sbbb
in
or
iret
repz
ss
lret
xor
call
in
jge
xchg
add
ret
leave
xchg
mov
cmpl
dec
lret
scas
add
add
je
adc
push
adc
adc
sub
push
gs
mov
jb
push
adc
mov
jnp
jecxz
stos
mov
and
frstor
lods
in
pop
imul
push
cs
sahf
stos
aas
mov
roll
mov
movsb
xchg
insl
lret
lea
mov
cmp
rep
dec
jb
mov
inc
lds
shlb
pop
mov
repz
mulb
inc
sub
sbb
pop
aaa
or
loope
ret
ret
dec
mov
loopne
pop
into
scas
cmpsl
stc
sub
movsb
pop
pop
push
pop
loope
mov
dec
das
sub
fdivrs
jle
xchg
leave
arpl
jns
pop
stc
mov
lahf
or
jle
add
mov
mov
mov
pushl
es
mov
mov
cmpl
out
cld
ret
mov
xchg
inc
leave
es
dec
adc
jbe
dec
jo
stos
mov
xor
popa
jecxz
mov
sahf
cmp
jb
mov
lods
mov
cmpsl
add
andb
call
add
sbb
notl
jp
dec
xor
cmpsb
mov
push
mov
movsb
adc
adc
frstor
mov
mov
and
fcoms
in
push
outsb
mov
repnz
mov
fadds
sbb
xor
cmp
adc
in
add
in
inc
add
jge
sbb
ja
repz
add
pop
movsb
mov
inc
xchg
mov
fstpl
inc
sub
repz
arpl
inc
fcmove
cli
repnz
jnp
mov
bound
jg
mov
lds
mov
je
xor
sub
test
outsb
jl
adc
leave
repz
es
or
bnd
int3
es
sbb
dec
push
fs
lds
dec
aad
mov
insl
jle
or
xchg
pop
push
imul
outsb
test
mov
sub
cmpsl
pushf
cwtl
adc
orl
mov
sbb
pop
mov
jge
in
es
cmc
push
icebp
cmpl
scas
rcrb
push
insl
and
test
jbe
push
jnp
push
cli
pop
sbb
nop
mov
xor
loope
mov
sub
mov
adc
lock
lods
sub
scas
shll
inc
add
jbe
and
pop
fidivrs
sub
sub
in
mov
sbb
xor
pop
lcall
and
dec
push
movsb
xchg
lret
dec
scas
pop
in
mov
jb
shrl
dec
lock
or
incl
scas
sbb
mov
leave
repnz
sahf
and
mov
xchg
cmp
popf
jae
dec
movsb
mov
or
or
push
sar
test
add
jnp
mov
nop
jae
fistl
clc
or
inc
add
sub
outsb
dec
pop
movsl
inc
int3
sbb
jecxz
cmp
xchg
sti
pusha
xchg
shrl
inc
pop
movsb
pop
in
sub
enter
mov
xor
mov
iret
test
mov
sub
mov
mov
jge
movsl
movsl
das
ret
cmp
int
imul
jbe
mov
stos
xor
sub
push
repz
lret
push
sbb
mov
cwtl
cmp
adc
pop
out
adc
mov
pop
insl
inc
pusha
in
movsl
es
icebp
dec
xchg
insb
dec
cs
test
sbb
jg
xor
mov
cmpb
pop
cwtl
ret
clc
dec
into
cltd
add
xor
mov
stc
push
stos
outsl
mov
cmp
fadds
in
dec
stos
cmp
movsl
jecxz
push
and
cmp
pop
push
cmp
mov
incl
and
loop
push
mov
pop
cmp
mov
ret
inc
push
fdivl
cmp
in
cwtl
push
mov
stos
jo
pop
mov
enter
dec
xor
pop
jae
mov
mov
mov
jbe
mov
sar
jns
add
xor
scas
cmpsl
adc
in
iret
sbb
sub
mov
test
hlt
lods
fldcw
andl
insl
push
dec
dec
cli
push
inc
inc
sub
pop
mov
jo
push
sbb
stos
xchg
push
sbb
pushf
push
movsb
hlt
sub
les
pop
jae
sub
leave
mov
jl
xorb
cmp
mov
stc
push
inc
xor
cltd
xchg
fstpt
cmc
fbld
into
mov
rclb
lods
jge
scas
xchg
jnp
sbb
pusha
insb
push
ss
mov
inc
sti
mov
sbb
repz
stc
xchg
xchg
mov
fnsave
aam
inc
dec
and
push
aad
xorl
mov
push
jb
movsb
mov
inc
jmp
lods
and
adc
jo
mov
push
sub
cmp
push
mov
jb
cmp
inc
push
cmp
cmp
add
lods
int
adc
inc
xchg
std
test
mov
adc
mov
call
dec
pop
dec
cmp
movsb
or
outsb
sub
cli
call
in
gs
jmp
cmp
or
xor
xchg
cmp
insb
aad
mov
and
out
ja
mov
push
pop
fimuls
vpunpckhbw
ret
bound
jle
inc
sahf
mov
dec
movsb
in
out
jne
mov
dec
xor
pop
icebp
test
out
lret
mov
push
addr16
rcrb
adc
std
xor
mov
push
scas
fstp
sub
mov
or
cmp
xlat
repz
ss
outsl
lock
scas
mov
stc
imul
int3
mov
in
jecxz
jecxz
into
adc
fsubs
stos
adc
mov
insb
adc
lods
lcall
adc
iret
pusha
shlw
inc
out
fidivrs
or
out
or
out
mov
xor
mov
sub
lods
aam
subb
cs
push
mov
xor
stc
out
call
fistl
add
loope
jno
cld
jge
adcb
lea
cmp
mov
pop
dec
push
popf
arpl
out
test
adc
cli
les
mov
dec
outsb
sar
icebp
jne
add
or
xchg
iret
xor
insl
mov
or
push
mov
push
stc
fs
movsb
add
and
lods
sub
push
negb
sbb
sbb
cmp
leave
fadds
in
cmc
fmuls
icebp
sub
sti
imulb
mov
cmpsb
adc
mov
jne
fsubr
xor
ret
or
es
mov
mov
xlat
stc
testb
push
and
leave
ja
int
stc
jg
movsb
pop
int3
push
or
lea
sub
lock
sbb
xchg
mov
inc
into
fidivs
clc
frstor
adc
lcall
sahf
mov
or
mul
or
rclb
bound
add
or
push
mov
xchg
fwait
hlt
mov
shll
xchg
addr16
push
rcr
outsl
pop
dec
sbb
pmaxub
fsubl
rcrb
lods
pop
xchg
repz
call
mov
mov
aas
das
cmp
jbe
and
leave
sarl
pop
int3
bound
iret
hlt
or
lcall
je
add
mov
sahf
out
inc
in
or
jb
adc
faddl
lea
lods
ret
outsl
loopne
mov
dec
xor
dec
cmp
arpl
jne
add
arpl
sarb
cld
xor
addl
cmp
mov
push
shlb
push
push
inc
aaa
cmp
lcall
push
into
inc
dec
inc
mov
mov
push
es
pop
cmpb
add
adc
lahf
out
jecxz
and
fwait
jmp
mov
bound
and
or
cld
and
push
xchg
add
mov
sub
outsl
lods
ret
adc
pushf
into
pop
dec
addl
mov
inc
inc
test
jno
movsl
sub
xor
das
xchg
xchg
jnp
scas
pop
sub
mov
add
xchg
and
adc
lea
mov
sub
mov
dec
fbld
sbb
sbbb
mov
enter
jb
jns
mov
aas
cltd
xlat
sarl
mov
addr16
in
mov
fisttps
jns
fs
mov
pop
pop
push
push
xor
mov
inc
lods
movsb
out
std
push
enter
vmread
mov
ljmp
jb
mov
je
xchg
mov
push
es
xor
adc
or
dec
cmp
outsl
xchg
push
in
add
inc
lret
sub
jmp
adc
clc
jae
cli
mov
add
mov
faddl
rclb
cwtl
movsb
je
xor
push
and
xor
fimull
cmp
mov
dec
std
and
out
test
repnz
pusha
ret
jmp
movsb
mov
add
nop
fisubrs
rorb
mov
cwtl
mov
hlt
fcmovnbe
cwtl
iret
pop
xchg
leave
jmp
aas
addr16
cmp
mov
lret
mov
xchg
sub
bound
data16
push
mov
ret
jmp
cmp
pop
cmp
data16
jmp
loope
notl
xor
test
mov
xchg
sub
xchg
push
sbb
outsb
into
ret
call
adc
lock
sub
xchg
out
in
ret
jmp
test
adc
jmp
jge
nop
stc
mov
repnz
outsl
dec
popa
xor
adc
ss
je
scas
cmpb
addl
imul
push
icebp
mov
imul
xchg
xchg
add
xor
sub
shll
cmpsb
out
aad
arpl
iret
sbb
xchg
out
in
mov
sbb
adc
mov
or
add
ss
xor
test
pop
pop
and
add
cmp
cs
jno
adc
out
outsb
ds
push
sub
push
dec
push
ret
hlt
inc
inc
call
jnp
mov
cmp
das
add
out
cmp
sub
mov
push
inc
aaa
das
stos
rol
mov
cmc
fs
lahf
mov
cltd
adc
pop
sbb
ljmp
idivb
sbb
inc
std
rcl
lods
nop
in
orl
cmp
mov
sbb
clc
mov
mov
and
orb
iret
mov
add
xlat
sub
or
sub
adc
push
sysenter
sti
fisttpl
sub
mov
dec
popa
xchg
xor
xchg
mov
xchg
imul
out
in
mov
mov
scas
insl
repz
cmpsl
jecxz
dec
adc
mov
dec
test
lcall
scas
xor
stos
mov
aas
mov
scas
addr16
lods
lret
or
and
or
lcall
push
mov
xor
xchg
and
pop
mov
lods
in
adc
jb
mov
ljmp
xchg
adc
push
push
insl
and
sub
jg
push
js
xor
insl
fistpl
insb
pop
adcl
inc
aam
fwait
outsl
sub
mov
or
in
or
imul
lock
mov
cmp
jge
fldl
scas
icebp
fidivl
das
xlat
sahf
ss
ret
pop
les
inc
scas
lret
xor
xchg
jbe
mov
movsb
adc
scas
ret
jbe
mov
fwait
arpl
gs
ret
pop
je
out
cmc
jno
clc
lds
jbe
mov
sbb
cmpsl
adc
or
push
movsb
xlat
in
sbb
pop
je
js
cmp
fwait
or
mov
dec
adc
push
outsl
jecxz
sub
cmpsb
es
mov
inc
inc
xor
xor
repnz
call
movsb
adc
xchg
ret
iret
mov
cmp
jbe
stos
bnd
xor
dec
pop
sbb
mov
sub
cli
fisttpl
pusha
ror
nop
scas
enter
xor
repz
or
xor
xor
out
add
jnp
rcl
and
adc
int
pop
sbb
xchg
or
xchg
push
mov
inc
cmc
inc
daa
call
push
ret
xor
addr16
mov
jmp
mov
mov
rclb
pop
ds
jns
add
leave
mov
subl
popf
dec
push
xchg
hlt
sbb
sub
cmpl
stc
dec
ja
rorl
lea
es
clc
lods
ja
cmp
pop
addr16
sti
decb
pop
std
jb
sahf
jmp
adc
mov
push
sub
gs
popf
cmpsl
aad
insl
mov
mov
xchg
push
jbe
xchg
fstl
call
jns
dec
cmc
insb
jp
mov
pushf
subb
js
xor
mov
cli
pushf
xchg
movsb
dec
aam
xlat
leave
fs
cmp
mov
lods
js
xchg
xor
sbb
int3
movsb
mov
imul
or
mov
push
into
push
jns
add
xchg
add
jae
data16
push
mov
dec
ret
ret
test
loope
repz
jbe
adc
mov
call
sub
or
sarb
pop
movsb
or
sub
adcl
imull
pusha
imul
movsb
loope
loopne
dec
divb
push
lods
mov
push
jae
mov
lock
xchg
inc
imul
addr16
nop
push
into
adc
fwait
hlt
cs
or
push
sub
inc
movsb
pusha
xor
sbb
xor
aam
jae
mov
pop
ljmp
rolb
bound
sbbl
jge
aam
movsb
xorl
mov
adc
test
data16
inc
cld
orl
aad
adc
add
xchg
inc
inc
xchg
movsb
jp
shll
fsubl
cmpsb
das
imul
mov
add
idivl
sahf
out
xor
push
mov
fldenv
shrl
jbe
sub
pop
ss
leave
icebp
sbb
xchg
cmp
iret
cs
rorb
imul
cmp
pop
jnp
in
cmpsb
lret
inc
mov
aad
loopne
int3
insb
push
mov
in
push
les
jp
inc
in
ljmp
add
xchg
mov
sub
xor
sub
scas
add
push
dec
lret
inc
push
cmp
jns
push
mov
mov
inc
hlt
outsb
insb
cs
adc
lea
bound
fdiv
mov
incb
fbstp
out
and
mov
aam
sub
mov
xor
scas
add
cmp
movsb
dec
rcrl
ret
pusha
xchg
int3
ss
insl
out
shlb
lods
cs
push
shl
imul
or
out
xchg
ss
cli
add
mov
push
stc
cmc
cmpl
jmp
hlt
std
or
loop
js
movsb
mov
sbb
ljmp
enter
xor
pop
jg
pop
aaa
test
bound
fcoms
push
hlt
pop
mov
or
fisubrs
int
mov
stos
fs
out
cs
aas
test
mov
lret
jge
inc
popa
push
adc
or
xor
scas
adc
mov
fidivrl
ret
push
pop
lods
rclb
mov
ss
adc
pop
jae
pop
jle
movsb
andb
outsl
fsubrl
sbb
mov
lods
imul
dec
adc
fstpt
mov
fdivs
sbb
sti
jae
sub
push
call
sub
cmp
sub
push
rolb
cmp
pop
push
inc
shlb
and
fsts
push
das
sbb
pop
sbb
sub
jae
lods
mov
and
mov
movsl
and
mov
mov
out
cld
pop
xorb
test
fcmove
mov
lret
in
repnz
jns
push
addl
test
mov
push
dec
pop
stos
inc
stc
insb
inc
sub
sub
sbb
mov
or
mov
loope
es
rolb
sbbl
lcall
and
cmp
repz
and
jge
mov
add
repz
movsl
xor
push
push
ljmp
jmp
inc
fidivl
ja
outsb
das
mov
sbb
dec
add
repz
inc
and
xchg
sbb
and
push
mov
jne
pushf
sub
mov
in
adc
clc
mov
leave
movsb
cmpsb
cwtl
scas
xor
sarl
push
mov
or
scas
addr16
jmp
mov
int3
mov
ja
push
pop
ss
movsl
pop
lds
orb
and
xor
cmp
jo
jecxz
and
aad
adcb
jp
dec
stos
and
dec
out
jge
xchg
jecxz
movsb
sbb
add
mov
xor
pusha
jmp
in
pushl
stos
hlt
mov
mov
mov
loopne
lds
mov
xchg
mov
bound
mov
fs
xchg
mov
js
lods
mov
sub
mov
mov
push
into
xor
out
inc
test
adc
sbb
xchg
iret
mov
mov
outsb
mov
sbb
mov
jb
xchg
xor
sbb
add
insl
mov
mov
dec
jge
mov
dec
inc
push
pop
cmp
mov
repz
cmpsl
push
mov
add
or
fwait
inc
int
mov
sbb
or
sub
xorl
fimuls
jge
sti
or
jbe
dec
sbb
icebp
in
cwtl
loopne
jecxz
dec
lods
and
pop
loope
movsb
xor
call
cltd
std
push
mov
sbb
pop
push
mov
js
add
popa
push
aam
cmp
fsubs
insl
fdivrl
cld
fwait
lahf
test
bound
nop
mov
cltd
ret
xchg
xchg
or
jne
mov
iret
mull
mov
jecxz
movsb
rorb
insb
xlat
leave
jo
push
sbb
jge
sar
sbb
in
push
test
jne
scas
ss
pop
es
jle
insb
adc
mov
and
das
xor
test
movsb
mov
xor
push
sub
into
insb
sub
xchg
bound
mov
xchg
ret
sbb
imul
inc
xchg
sbb
xchg
test
xor
push
xchg
shrb
insl
mov
test
test
mov
insl
add
in
cmp
in
ficoml
imul
gs
push
xor
sbb
adc
sub
daa
add
inc
inc
subl
mov
pop
jle
pop
dec
push
push
out
mov
movsb
aad
pop
xchg
inc
mov
jne
ss
andb
sub
sbb
push
push
xor
adc
or
hlt
cli
push
lods
bnd
sbb
push
lock
les
pop
sahf
jne
and
fldl
fldt
imul
sbb
lods
mov
aad
jbe
fcomp
js
cmp
movsb
sub
test
pop
jb
xor
cmp
movsb
inc
fldenv
xor
or
and
sub
pusha
cwtl
mov
or
call
test
pop
and
jecxz
lock
lcall
jecxz
pushf
and
add
mov
je
sub
ret
fst
mov
sti
or
sbb
icebp
xor
test
adc
aam
pop
cmp
lock
arpl
sub
mov
mov
aam
cmp
push
xor
ficompl
movsb
mov
dec
cmp
fwait
mov
push
mov
mov
ljmp
fsubr
push
imul
imul
fcoms
mov
mov
decb
adc
adc
xchg
mov
mov
cmc
js
dec
mov
xchg
and
inc
add
inc
data16
sbb
push
pop
mov
sbb
or
data16
mov
jno
inc
inc
mov
xchg
sub
mov
test
cmpsb
jge
movd
call
shl
sbb
xor
movsl
int
jb
xor
mov
jb
negl
test
ret
movsb
cmc
mov
push
or
inc
jle
jg
aam
push
mov
leave
arpl
adc
push
bound
punpcklbw
push
fsubrs
ret
mov
cmp
xchg
cmp
scas
scas
addr16
push
mov
dec
cmc
sbb
punpckhwd
stos
cwtl
hlt
push
imul
aad
mov
and
pop
sbb
cmpsl
bound
xlat
test
jb
fdivr
lret
addps
sub
ret
ljmp
sub
mov
add
mov
sub
divb
lcall
das
push
insl
add
pop
push
lods
js
mov
inc
in
mov
cmpl
pop
mov
mov
sub
pop
mov
jb
xchg
flds
es
enter
bound
mov
add
bound
mov
mov
mov
jp
and
hlt
fwait
unpckhps
jb
movsl
push
adc
adc
sahf
jno
pop
jp
clc
mov
mov
sbb
dec
insl
outsl
sub
loop
dec
sarl
je
jns
fidivrs
ficompl
push
push
into
insb
xchg
mov
cmp
pop
inc
sbbb
out
and
sub
xchg
aad
inc
push
xor
or
and
adcl
pop
push
sbb
push
mull
mov
cld
inc
fbstp
mov
pop
jp
ret
ljmp
jb
cltd
and
repnz
movsb
test
jmp
mov
arpl
push
push
cmp
lret
shrl
mov
pop
scas
sub
sti
mov
test
out
js
outsb
lods
and
test
hlt
inc
enter
ds
pop
mov
adc
push
sahf
fidivrl
xor
mov
and
mov
fists
cwtl
jmp
jb
movsb
ljmp
call
jge
xchg
outsb
mov
mov
clc
add
and
ret
in
iret
xor
aaa
testl
jns
adc
push
push
cmc
pushf
scas
cmpsl
jae
cli
insl
sub
pop
jne
jmp
lcall
sarl
out
dec
stos
pop
jnp
daa
sub
arpl
insl
mov
mov
imul
mov
fwait
pop
push
cmpsb
mov
fstpl
mov
push
stc
pop
addb
mov
mov
lret
mov
mov
xor
mov
sbb
mov
sahf
cltd
mov
xchg
test
push
insl
pop
sbb
push
aaa
jge
push
lods
mov
xchg
dec
sarb
mov
and
jnp
cmc
pusha
in
cmpsb
ss
lds
mov
inc
xor
shrb
stos
xchg
mov
bound
cmp
mov
and
nop
into
push
xor
mov
in
lds
sbb
pop
repz
push
fdivrl
insb
mov
xchg
mov
in
or
call
cs
mov
loope
int3
xlat
pop
in
mov
mov
pushf
inc
and
xchg
les
inc
lret
ret
cmpsl
xor
nop
adc
inc
movsb
sub
push
mov
xchg
cmp
mov
mov
push
insb
pop
iret
push
push
or
lahf
push
jbe
dec
cltd
xor
jbe
and
ret
rclb
inc
outsb
dec
clc
nop
add
jmp
ds
jno
mov
add
dec
je
arpl
cld
add
inc
pusha
mov
xor
sub
cmp
roll
mov
sbb
push
fs
xorb
lds
andl
fwait
loopne
cmpsl
add
ss
xchg
mov
push
lahf
jno
sbb
aam
dec
or
mov
pop
xor
pop
jmp
ja
hlt
sti
andl
ja
dec
pop
pop
fs
rolb
jae
adc
mov
cld
push
pop
std
jmp
push
loop
add
sub
and
ljmp
les
jge
and
push
icebp
dec
adc
sub
jae
aaa
or
push
aad
jb
add
xor
and
and
mov
push
mov
int3
jb
push
push
test
pop
mov
cli
mov
push
dec
cmpsl
or
imul
cmp
enter
and
push
lea
lock
xchg
xor
jb
shrl
dec
in
ret
push
pop
mov
ljmp
shrl
mov
inc
ficoml
daa
outsb
inc
icebp
cmp
adc
jb
repz
insb
and
stc
cld
sbb
cmpsb
sbb
cmpsl
jne
ds
adc
mov
lods
jmp
pop
mov
movsb
scas
fisttpll
fs
cs
out
mov
push
sbb
pusha
mov
xor
stc
and
in
pop
sahf
bound
dec
nop
cmp
shlb
and
imulb
movsb
adc
aad
add
test
sub
adc
push
xchg
push
inc
mov
and
lret
lea
stc
mov
enter
dec
loope
ret
mov
push
in
jge
mov
pop
pop
dec
push
sbb
pop
data16
test
shll
xchg
mov
push
push
scas
pushl
outsl
adc
scas
fcomi
out
jno
dec
dec
dec
cmp
or
rorb
cs
sub
cld
xchg
leave
xor
test
xchg
out
mov
in
popa
jne
dec
jmp
push
mov
push
sub
repnz
repz
and
xor
dec
jns
and
push
hlt
jae
lock
jge
ds
stos
mov
in
pop
xchg
shlb
push
enter
imul
cmp
fs
jb
sbb
les
add
cld
loope
shrb
mov
sbb
jb
push
out
nop
xchg
shll
stos
enter
repz
and
mov
jo
lcall
pop
lcall
xor
aam
hlt
movsb
mov
out
sub
fisttps
lock
repz
cmp
push
push
mov
cmpb
pop
insl
pop
jno
and
push
xor
sbb
jo
mov
stos
adc
cs
push
cli
or
cs
imul
cld
mov
pop
ljmp
sbb
cmpl
fidivs
imul
cmp
mov
pop
push
ss
arpl
xchg
jne
ror
xchg
xchg
push
sub
shlb
cmpsl
jnp
cmp
sbb
pop
stos
std
mov
jmp
test
paddsb
sbb
popf
ret
es
lods
mov
jge
jne
sub
pusha
jo
add
lods
xchg
sbb
xlat
jmp
movsb
scas
mov
popa
jae
lcall
mov
jge
mov
das
mov
ss
lods
cmp
lods
mov
es
mov
or
movsb
sbb
aad
adc
sub
or
bound
mov
inc
loope
jecxz
sub
int
xor
mov
mov
addr16
test
sub
xchg
js
jmp
lds
mov
sti
dec
mov
jae
rclb
xor
push
inc
movsb
jnp
and
test
mov
xor
mov
or
cwtl
mov
cmp
pushf
ss
leave
lret
ret
fildl
outsb
bound
test
es
adc
cmpsl
scas
or
dec
or
orb
movsb
outsl
hlt
int
inc
push
test
lock
stc
lcall
ret
loope
mov
fsubrs
dec
add
inc
imul
xor
jge
out
fsts
xchg
mov
leave
fistl
cmp
mov
dec
sub
mov
xchg
add
mov
push
inc
mov
out
jle
jns
mov
dec
mov
xlat
enter
mov
sarb
lret
jnp
movsb
pop
adc
loope
les
stc
out
jne
in
add
call
dec
cs
lea
add
adc
xor
daa
jg
pusha
push
pavgb
lret
and
mov
imul
xchg
mov
xlat
push
push
int3
addr16
pop
xor
les
test
cmp
popf
mov
xlat
pop
xor
pop
subl
repz
cmp
and
sahf
xchg
orl
jle
push
lods
call
iret
or
lods
mov
sbb
and
mov
icebp
shll
lahf
mov
inc
mov
mov
cmp
into
enter
int
lods
and
call
lea
fiadds
in
ljmp
sbb
hlt
and
jmp
bnd
mov
xchg
sub
push
push
rcrb
xor
mov
mov
sti
sbb
cli
gs
lcall
cmp
sbb
int3
fcoms
push
xor
lret
sub
cmpb
enter
mov
shl
xorl
or
pushf
icebp
cli
stos
mov
mull
mov
xor
jno
push
pop
nop
lock
xor
fnstenv
xor
lods
adc
cmp
rep
cltd
bound
mov
mov
xchg
cs
sbb
push
out
xor
pop
push
ss
sbb
jbe
lods
push
push
aad
sub
and
mov
outsb
je
das
xor
xor
xchg
int3
mull
das
call
adcb
push
fldcw
loop
movsb
xchg
es
push
xchg
push
fadds
cli
sbb
dec
add
out
repz
out
addr16
mov
loop
pop
mov
mov
das
cmpsl
test
popa
mov
mov
sbb
rcrb
pop
sub
insb
sub
push
push
sbb
arpl
jno
loope
cmpsb
clc
ljmp
push
jecxz
and
cmp
ret
aad
mov
lods
dec
or
hlt
xchg
es
loope
nop
lock
aam
push
hlt
decb
sti
mov
repnz
xorb
out
mov
jno
outsb
and
imulb
cld
sub
or
cld
dec
cmp
stos
jp
call
fnsave
shll
lcall
orl
shll
mov
out
push
repnz
add
mov
jns
cltd
pusha
push
sbb
clc
iret
sarb
mov
movsb
jnp
sbb
arpl
lcall
insl
xchg
cmp
xorb
outsb
inc
cmp
aaa
sub
or
jle
rol
jne
cmp
test
cmc
add
nop
sbb
push
divl
and
jno
test
gs
loope
out
xchg
iret
test
fsub
add
aaa
pop
jmp
insl
jo
mov
jb
imul
ret
cmp
mov
cld
cmp
pop
ja
pop
lcall
or
repz
pop
mov
stos
test
xchg
mov
pop
cmp
xor
ja
xor
mov
inc
cmp
fadds
sub
mov
push
js
insb
je
mov
cld
scas
add
sarb
pop
leave
push
fmuls
pop
outsb
stos
jne
cs
fcomp
sti
jae
pop
jae
in
xchg
push
pop
inc
push
sub
mov
cs
sub
js
insl
out
inc
and
mov
pop
cmp
out
push
mov
lock
fsub
xor
push
and
rcl
cs
mov
popa
mov
iret
aad
test
into
jmp
xor
test
mov
pop
mov
mov
lods
sub
sbb
int
mov
xor
pcmpeqb
sbb
enter
sbb
and
dec
addl
sbbb
mov
mov
adc
sbb
xor
mov
add
mov
jecxz
mov
mov
lods
fldcw
imul
repz
sub
mov
scas
outsl
addr16
push
outsb
ljmp
push
adc
pusha
jge
xchg
mov
js
push
push
pop
inc
inc
cmc
push
xchg
repz
dec
je
mov
adc
stos
inc
outsb
pop
cmp
sbb
adc
mov
or
sbb
fxch
lcall
mull
sub
mov
cs
popa
xchg
fldcw
sub
lods
pop
negb
rcll
popa
fisubs
sbb
ja
lret
lcall
into
outsb
jns
hlt
adc
out
pop
imul
xor
mov
aaa
rorl
sarl
sub
push
adc
pop
push
mov
repz
out
push
ret
in
jge
cmc
sub
dec
jmp
push
mov
mov
add
xor
cmpsl
push
stos
pop
or
adc
mov
and
lcall
int3
xchg
or
mov
mov
mov
ret
add
cmc
add
out
call
lcall
int
mov
push
sub
stc
cs
xchg
xchg
sub
push
jo
jb
mov
cmpsb
jecxz
pop
jno
movsl
out
dec
cmp
mov
xor
ret
fcmove
pop
adc
stos
pop
clc
pop
aaa
or
sub
sub
sbb
mov
movsb
mov
das
fistl
faddl
sbb
jbe
inc
pop
dec
imul
adcl
out
in
jmp
add
lds
and
dec
dec
fdivp
xchg
ret
in
cmpsl
xor
mov
movsb
loope
out
cld
ficomps
ljmp
jmp
movsb
jecxz
mov
mov
or
or
rcr
jne
mov
pop
js
iret
dec
inc
aaa
xchg
mov
sub
push
testb
adc
or
lock
sbb
inc
xor
lea
add
nop
mov
inc
imul
mov
ficomps
xor
out
out
jb
ret
inc
andb
outsl
xor
adc
dec
cmc
stos
das
jp
lods
iret
add
sahf
or
push
ljmp
sub
mov
or
or
clc
fsubrp
and
dec
sbb
repnz
inc
mov
pop
adc
sahf
negl
cmp
mov
js
stos
shll
and
mov
mov
mov
stos
push
fadds
repnz
xor
push
jno
xchg
ljmp
mov
sahf
mov
jno
jnp
add
in
pop
ja
outsl
movsb
fwait
and
popa
xchg
push
adc
add
lods
push
adc
jp
ret
mov
xor
xor
shrl
pop
into
push
jae
rol
push
sti
sbb
sub
push
mov
fimuls
dec
mov
xchg
adc
dec
cmpsl
repnz
mov
mov
je
jb
popf
add
aam
insl
jge
not
test
and
mov
testl
mov
pop
mov
add
push
call
push
mov
in
mov
mov
mov
sub
cmp
sbb
mov
jns
adc
cs
leave
fcmovbe
jge
leave
pop
imul
pop
loop
sub
mov
scas
jecxz
jns
mov
lock
xor
sbb
push
dec
aad
repz
ret
pusha
xchg
test
jl
int
mov
movsb
push
mov
add
fimuls
loope
lcall
movsl
idiv
adc
lea
jl
sbb
xor
mov
fprem
bound
lods
sub
hlt
lret
bound
mov
xchg
inc
ret
lods
mov
dec
push
mov
fwait
test
movsb
outsl
shrb
stc
inc
push
sbb
pop
lods
bound
xor
popa
push
lcall
test
outsl
sar
outsb
and
hlt
pop
icebp
test
outsb
ja
xchg
mov
or
jnp
mov
xchg
xlat
or
xor
dec
dec
lock
fildll
cmp
int
ja
mov
lods
dec
orb
test
mov
xlat
sub
ret
test
ret
mov
jno
inc
out
sahf
or
adc
cmp
xchg
insl
daa
mov
cli
xor
imul
mov
fists
xlat
pop
daa
test
fidivs
test
cs
xchg
jne
lods
pop
adc
mov
push
insl
ljmp
mov
call
jge
cmc
mov
mov
cmp
push
add
pop
cmpsl
fldenv
test
or
jmp
add
andb
push
cmpsl
jmp
mov
sub
mov
pop
movsb
test
dec
repnz
jne
fsubrp
add
aam
mov
cmc
mov
shlb
scas
push
mov
mov
add
dec
push
push
imul
push
inc
lock
jg
pop
or
cld
mov
sub
pushf
push
jnp
cmp
mov
data16
fsubl
xchg
fdivrl
call
mov
mov
xor
or
push
cmpsl
push
lret
pop
push
sbbb
inc
xchg
xor
mov
mov
mov
sub
imul
movzbl
shll
sbb
sti
dec
push
xchg
ds
insl
xorl
xor
xchg
pop
mov
pop
pcmpgtb
jo
fdivrs
mov
cwtl
movsb
stc
inc
mov
adc
push
lcall
sbbl
adc
insl
cmp
push
je
jb,pt
ja
or
dec
jge
xchg
add
fstpl
push
jmp
sbb
sub
push
add
fs
jecxz
mov
jmp
xchg
repnz
or
aad
ljmp
enter
add
xchg
lods
rcrb
stos
rcrb
notb
ret
sarl
ss
add
and
ljmp
and
cmp
mov
pop
pop
or
aaa
push
seta
das
lods
xorb
mov
pop
mov
adc
pop
data16
fwait
add
or
or
pop
lods
jb
lock
mov
lcall
pop
insb
sub
stos
and
and
jecxz
inc
fs
jne
leave
lret
mov
lret
add
xor
lcall
sbb
xlat
in
jbe
add
pushf
dec
and
decb
sub
and
add
out
ljmp
pop
cmpb
int
mov
push
mov
add
sub
cmp
dec
push
cli
fadd
jns
jno
mov
ds
and
dec
out
pop
int
jne
sahf
jge
jae
sub
or
sub
movsb
lock
sub
inc
mov
mov
cmp
rorl
sub
mov
popf
push
jmp
outsl
pop
lods
or
shlb
insb
sbb
inc
mov
test
push
adc
mov
mov
pop
mov
inc
mov
loop
mov
call
imul
out
dec
sub
stc
addr16
jno
out
mov
nop
push
into
add
and
and
sub
jne
loope
fldcw
out
test
in
test
int
push
add
ret
clc
cmp
jecxz
stos
sbb
cmp
movsb
cmp
add
push
gs
push
loop
adcl
dec
pop
push
into
push
loope
xchg
and
sub
push
jae
cmp
bound
mov
cli
fiaddl
adc
mov
push
cmpsl
dec
div
ret
mov
pusha
stos
jno
bound
mov
xchg
and
push
jp
stos
shr
lods
xor
jno
les
jne
hlt
dec
sti
in
inc
inc
sub
das
test
add
call
dec
fstl
push
xchg
loop
cli
iret
pop
mov
stos
adc
loope
mov
push
call
movsl
xor
jb
les
sbb
cmpsl
jle
mov
cmp
lret
dec
lahf
xor
or
lea
dec
push
js
lods
ficompl
ss
imul
mov
iret
mov
push
cld
sub
test
sbbb
cld
ljmp
lods
inc
sub
call
dec
mov
mov
sub
popf
lret
fnstsw
jb
les
pop
call
shll
enter
int
push
adc
xchg
shr
loop
mov
dec
push
and
pop
xchg
add
xchg
scas
sub
xor
mov
loopne
movsb
pusha
int3
mov
subl
insb
outsb
pop
add
adc
dec
sbb
idiv
mov
lods
dec
inc
or
dec
jge
push
and
js
jp
pop
mov
insb
jb
pop
lahf
scas
scas
add
clc
push
mov
fcmovb
fmull
cli
dec
lds
mov
iret
mov
sub
repz
shrl
push
mov
popf
fsubs
sbb
mov
mov
test
enter
clc
jmp
inc
dec
ss
cwtl
ret
addr16
lods
mov
and
push
sbb
add
push
clc
into
jmp
xchg
sahf
jge
negb
mov
mov
mov
ljmp
in
mov
in
lcall
sbbl
lahf
mov
push
pop
sbb
imulb
jbe
hlt
pop
sub
test
lea
mov
imul
mov
sub
sbb
fcomi
mov
mov
inc
out
je
mov
push
sbb
jmp
insb
sbb
inc
sub
fsubrp
sbb
popf
xchg
sbb
pop
bound
pusha
inc
sub
out
mov
mov
cs
push
loop
loope
dec
addl
test
outsl
aam
inc
shlb
inc
lods
hlt
push
mov
cmp
pusha
xchg
gs
add
inc
lds
inc
mov
movsb
mov
cmp
adc
mov
jns
xor
mov
mov
lea
rcrl
inc
pusha
outsb
arpl
loop
adc
mov
lods
repz
inc
inc
clc
shlb
cmp
jbe
repz
jp
gs
push
test
and
nop
dec
es
ljmp
mov
push
fcom
push
pop
movsl
mov
rcll
cwtl
lods
sbb
addr16
xor
add
lds
add
in
pop
aaa
xchg
mov
mov
pop
jmp
fucomip
or
mov
bswap
sbb
push
insl
dec
and
insb
decl
outsb
push
push
sbb
push
jb
loopne
cmp
lods
leave
movsb
mov
mov
insb
mov
bound
test
pop
cmp
dec
imul
jp
lds
jp
pop
xchg
lods
push
das
lcall
adc
mov
mov
into
mov
das
jno
sbb
mov
cs
gs
xchg
scas
and
push
mov
popf
outsb
rcr
pushf
or
push
bound
xchg
ret
cmp
movsb
jecxz
xor
xor
adc
leave
inc
insl
inc
pop
outsb
dec
rorl
fcmovnb
mov
lret
dec
pushf
sbb
xchg
iret
repnz
push
dec
daa
mov
cmc
out
mov
movsl
out
lret
das
ret
mov
jno
fs
sub
repz
jne
sbb
dec
or
mov
jl
push
add
das
in
push
adc
out
les
add
mov
lds
sub
inc
mov
push
adcb
mov
mov
sbb
or
add
cld
dec
mov
insl
jbe
xlat
mov
in
push
add
push
mov
shll
jecxz
adc
loope
popf
arpl
int3
cmp
adc
sub
lahf
fcomi
lock
test
sub
cmp
xor
fadds
cltd
sbb
mov
and
cs
cmp
stc
test
or
xchg
cld
inc
mov
jnp
push
out
dec
into
add
sub
jg
ljmp
jne
ret
xor
jecxz
negb
sub
dec
subb
loop
lods
jbe
adc
inc
or
in
push
ja
mov
jae
push
repnz
fstpl
pop
gs
in
les
xor
and
sub
cmpsl
sub
dec
pop
shll
scas
xchg
cld
and
add
xchg
mov
in
movsl
cmp
out
clc
cs
scas
mov
push
push
loopne
scas
add
jno
in
adc
push
pop
mov
push
in
dec
addr16
leave
mov
dec
sub
lods
lea
cltd
dec
adc
insb
sub
call
ret
fdivs
push
add
jp
jae
mov
pop
sub
repnz
shll
dec
mov
repnz
mov
cmc
mov
xchg
jbe
cmp
add
imulb
aad
mov
leave
cmpsb
movsl
repnz
cltd
outsb
sub
add
mov
add
cmp
mov
out
jb
and
aas
adc
adc
mov
lcall
mov
push
and
adc
and
rclb
dec
mov
repz
cmova
test
mov
dec
or
ret
push
xor
pushf
add
dec
movl
mov
lret
imul
sti
lret
xchg
add
fwait
cld
ret
xchg
jbe
push
fbld
hlt
lcall
mov
xchg
dec
xor
adcl
add
not
test
call
mov
shrd
aam
dec
scas
push
sbb
mov
iret
sub
mov
gs
in
mov
xchg
mov
push
xchg
jne
sbb
nop
popa
sarl
dec
ljmp
test
inc
xchg
pusha
adc
pusha
stos
idiv
cltd
jno
insl
das
mov
mov
xor
sbb
sub
jmp
jmp
lahf
mov
cmpb
ljmp
shlb
push
pop
movsb
jl
cmp
mov
sub
mov
ss
repnz
pop
es
push
fstpt
xchg
jnp
in
out
xorb
jbe
jbe
or
ret
jge
mov
movsb
xor
or
scas
adc
adc
aam
fisubl
xor
lods
movsb
add
stc
movsb
pop
mov
sub
test
jns
dec
jmp
pop
inc
push
xor
inc
push
mov
filds
lods
and
add
addl
push
pop
xor
out
mov
xor
insb
jg
push
mov
in
js
jge
jbe
movsb
lea
stos
lods
clc
cld
adc
icebp
mov
pop
in
pop
mov
mov
jge
add
jp
push
cmp
ret
mov
push
mov
dec
icebp
jno
pushf
mov
inc
nop
movsb
sbb
sqrtps
mov
or
mov
mov
cpuid
stc
aas
jae
clc
xchg
push
adc
pop
fs
add
lods
inc
inc
mov
sub
pop
or
xor
jl
fmuls
push
repz
inc
adc
aas
loope
jo
mov
cs
shll
es
std
jae
fmull
xchg
sbb
and
dec
xchg
fxam
lds
mov
repz
mov
lcall
mov
loope
cld
mov
push
cmp
loope
int3
xor
and
scas
mov
xor
push
cli
or
and
inc
jnp
jmp
mov
xchg
adc
jo
push
out
sub
insl
lret
add
movsl
mov
hlt
test
cmp
inc
push
add
loope
insl
or
or
into
xchg
xor
push
xchg
movsb
push
mov
fs
jne
mov
je
inc
xor
leave
into
lods
mov
dec
pusha
dec
push
pop
out
xor
gs
movsl
dec
dec
shll
cs
add
mov
mov
push
lods
fcmovnbe
pop
dec
mov
lcall
ljmp
stos
push
dec
pusha
ret
jmp
lds
cmp
loope
sbb
in
lcall
aas
cld
adcl
lock
icebp
scas
sub
pop
xor
bound
jno
and
mov
sub
mov
in
cli
insl
mov
faddp
dec
jg
insb
mov
into
test
jmp
cmp
cmp
push
int
ret
cmp
xchg
mov
pop
dec
inc
mov
in
mov
repz
dec
mov
xchg
push
lods
mov
add
je
mov
mov
push
cmp
fisubs
mov
mov
jge
xor
rolb
fdivs
jo
fistps
sbb
lcall
and
insb
lods
mov
sbb
loop
rclb
xchg
add
add
mov
in
daa
dec
add
in
and
sahf
mov
mov
jp
sub
mov
into
pop
or
cs
stos
xchg
push
ret
call
imul
aad
pcmpeqd
std
repnz
mov
fcoml
and
mov
push
nop
mov
mov
jl
sbb
cli
mov
es
jns
cwtl
xor
pop
inc
addr16
rcrb
cmp
lds
xor
jecxz
sub
xor
out
pushf
ret
pop
stos
push
dec
mov
pop
inc
adcl
sbb
shll
mov
xchg
test
fs
xor
cmc
pop
push
adc
mov
out
cmp
mov
push
rcr
pusha
or
movsl
push
bound
mov
ljmp
cmpl
sub
mov
pop
mov
sbb
pop
jbe
sub
pop
bound
jg
data16
nop
out
push
movsb
push
popf
lds
rcl
iret
jns
cmp
dec
xchg
daa
xchg
stos
mov
test
mov
xor
xchg
iret
js
xchg
int
dec
imul
sub
xchg
sbb
sbb
mov
imul
sub
xor
ds
push
and
mov
or
out
jmp
jbe
mov
mov
inc
push
inc
or
idivl
push
pop
stos
cmpb
mov
sub
pop
lret
jb
ja,pn
lds
push
test
scas
outsl
lea
stc
mov
mov
fsubrs
pusha
jg
daa
mov
mov
and
pop
fdivs
inc
xchg
pop
and
push
lock
loope
mov
in
xchg
and
add
pop
cli
shlb
fcoms
cmpxchg
adc
push
loop
fcmovnu
xchg
jmp
movsb
subb
xchg
xor
es
test
dec
cmc
mov
or
sub
popa
outsl
test
mov
adc
cs
cmpsb
mov
leave
push
jmp
out
shl
mov
or
stos
mov
jbe
push
iret
add
fwait
cli
sbb
rolb
enter
xchg
cli
and
mov
les
mov
cmp
es
push
clc
inc
mov
push
mov
out
mov
push
add
cli
mov
dec
adc
in
loopne,pn
scas
push
rorl
cli
push
xchg
xchg
adc
sub
mov
movsb
insl
imul
das
dec
and
cmc
cmp
cwtl
pop
jb
roll
nop
sub
cmpb
mov
add
ss
pop
or
insl
sbbl
test
dec
mov
pop
adc
inc
cmpsb
mov
nop
mov
pushl
insl
mov
jp
mov
sub
mov
mov
sub
mov
loope
or
test
inc
mov
sub
push
loopne
in
std
hlt
data16
fs
jns
dec
lds
jns
pop
mov
push
aam
aam
jae
stc
test
xchg
cmp
cmpsb
mov
xchg
push
into
push
ds
je
lds
mov
inc
inc
das
lcall
das
pop
les
std
hlt
leave
dec
jl
inc
test
lock
add
cmp
fwait
scas
xor
cmp
insl
ficompl
out
pusha
pushf
imul
sub
popf
jnp
insl
bound
iret
rcll
inc
repnz
cs
fs
push
mov
cmp
cmp
popa
mov
sub
mov
adc
sahf
push
iret
cwtl
mov
mov
sbb
aam
iret
cmp
mov
stos
in
imul
inc
mov
inc
sbb
pusha
mov
leave
jo
inc
movsb
push
fmuls
jne
add
push
enter
sarl
adc
xor
mov
pop
jno
les
cld
and
out
mov
orb
ficomps
mull
inc
sub
insl
mov
push
jmp
pop
sbb
mov
cmp
movsb
int
mov
ret
xor
into
push
scas
popa
mov
iret
fs
repz
scas
call
test
out
rclb
repz
xchg
iret
pop
adc
pop
adc
jbe
imul
jge
push
lds
into
fmul
mov
popa
vfmadd231ss
loop
push
mov
sbb
insl
insl
stos
sub
push
repz
sahf
inc
mov
or
jb
mov
or
jne
imul
fsubl
sti
hlt
mov
jns
sbb
fimuls
xlat
es
sub
lods
dec
test
mov
repz
sbb
sub
clc
into
cmpsb
mov
mov
ljmp
rcll
mov
xor
cmp
add
cmpb
inc
pop
xor
and
shlb
dec
jno
and
ret
lret
std
push
xchg
xor
push
lahf
mov
outsb
dec
add
ljmp
andb
cwtl
out
mov
test
and
adc
outsb
iret
fs
bound
jmp
cli
je
jno
dec
iret
inc
jb
out
aam
fistl
mov
jmp
sbb
roll
test
dec
pushf
dec
repz
xchg
xchg
repnz
dec
xchg
imul
xor
and
cmp
jl
out
mov
pop
movsb
rcl
jmp
cld
or
mov
adc
aad
les
push
inc
xor
jo
call
ss
fisubs
sub
rcl
mov
mulb
roll
add
int
in
cmp
js
subb
mov
push
imul
rcrl
dec
and
ss
fsubs
test
mov
addl
dec
mov
jg
sub
repnz
je
aad
pushf
dec
cli
out
rsm
xchg
jge
icebp
inc
pop
les
repnz
shlb
inc
sti
push
movsb
adcb
int3
cmp
mov
jbe
test
ljmp
pop
inc
scas
lods
bound
lret
pop
nop
and
stos
loop
mov
pop
pop
cltd
mov
mov
and
lcall
cmp
iret
pop
cld
stc
js
jge
mov
cmp
shl
xor
xchg
adc
dec
ret
mov
jns
pop
jae
shrb
add
outsl
jns
ljmp
popf
aad
jno
pop
mov
int3
pop
sub
dec
cmp
std
das
adc
lcall
popf
xor
jmp
push
push
cmc
xor
cmp
push
test
lea
in
call
inc
xor
lret
cs
movsb
pusha
or
imul
mov
add
repz
movsl
loopne
cli
repz
ficoml
xchg
lahf
mov
xchg
xor
dec
push
es
sub
jge
out
and
lret
or
cmpsl
add
je
inc
ficoml
imulb
mov
sub
andl
stos
pop
movsb
out
adc
cmp
fnsave
adc
lahf
shl
sbb
jne
xchg
int3
insl
push
mov
sub
xor
xor
pop
test
shlb
in
insl
cmp
sub
pop
mov
into
popf
test
jno
mov
xchg
adc
jg
add
rcrb
out
add
xchg
fdivs
or
inc
leave
ja
ret
das
idivb
lods
mov
movsb
call
jno
cli
les
pop
scas
ljmp
push
mov
xchg
sbb
xchg
lahf
mov
pop
cmp
js
test
xchg
mov
push
aam
loope
cmp
dec
jb
and
jmp
jb
mov
xchg
mov
call
es
idivb
jg
jae
sbb
lahf
icebp
or
mov
das
lods
xor
mov
push
repz
aaa
pushf
movsb
sbb
pop
mov
pop
lahf
insl
mov
dec
fistpll
sbb
arpl
mov
aas
cs
mov
dec
sbb
or
sub
xchg
inc
inc
sbb
jb
add
data16
ljmp
movl
dec
inc
add
add
aaa
sbb
dec
hlt
repz
xchg
aam
inc
sbb
cmp
or
insb
mov
add
jne
loopne
ret
pop
insl
out
mov
loope
mov
add
mov
fdivrl
dec
pop
out
push
xchg
mov
and
dec
out
cltd
push
lcall
mov
and
sti
push
jae
xor
test
push
push
lock
fsubp
lcall
jb
dec
add
cmpsl
loope
sarb
leave
in
hlt
mov
lcall
mov
xchg
fiadds
mov
shlw
fadds
mov
adc
mov
mov
sub
or
out
cmpsb
subb
bound
repz
jo
out
push
enter
mov
mov
out
push
iret
adc
pop
mov
scas
pop
call
jge
mov
movsb
mov
add
mov
push
loop
outsb
sar
ss
sub
bound
dec
aad
cmc
cmp
sub
adc
add
pop
sbb
push
divb
fs
push
sbb
rol
das
mov
out
rsqrtps
nop
pop
mov
addw
mov
add
out
jg
movsb
dec
sub
sbb
cli
lret
pop
cmp
adc
jo
push
ret
jge
test
pop
gs
dec
adc
inc
xchg
jbe
xchg
mov
mov
and
jbe
add
pop
movsb
mov
outsb
repz
push
cmpsb
sub
sbb
jg
mov
inc
or
sbb
mov
jbe
sahf
stos
pop
mov
jno
dec
add
cmpsl
addb
or
pop
popa
and
shrl
mov
mov
mov
xchg
sub
enter
xchg
or
fldt
and
mov
xchg
repnz
shlb
xchg
in
and
cmpsl
pusha
push
loope
push
rcll
push
jle
ljmp
rcll
add
insb
lods
aam
js
ja
push
cli
push
pop
jecxz
stos
das
sub
fbstp
pop
ret
pusha
mov
push
addr16
addr16
push
call
push
cmc
in
in
inc
add
xchg
sbb
cs
in
dec
sbb
loope
add
adc
lret
dec
xchg
lock
fisttpll
lea
int3
dec
cmp
or
push
fdivs
in
adc
dec
inc
insb
dec
adc
xchg
jne
dec
movsb
pop
cmp
adc
xchg
sarl
jns
jb
push
dec
add
cs
xchg
addr16
pop
iret
or
push
das
loop
imulb
push
and
sub
add
test
and
cmpsb
loop
mov
pop
inc
push
iret
sub
out
push
sbb
xchg
push
ds
sbb
popf
rcll
jge
test
andl
es
clc
fldt
cmp
mov
lea
ret
int
push
mov
insb
es
sub
mov
mov
rolb
xor
pop
fimull
cmpsb
sbb
ds
pop
xor
in
adc
jne
lret
adc
push
dec
push
xchg
inc
xor
leave
xchg
xchg
fs
adc
call
push
mov
mov
out
jb
mov
rcll
cmpsb
popa
mov
pop
cmp
stos
arpl
jmp
mov
pop
xchg
pop
out
dec
cld
sub
cli
andb
cld
out
cmpsl
pop
repz
and
inc
inc
movsl
cmp
bound
aad
les
sbb
arpl
imul
or
je
xchg
aaa
aad
sub
call
jmp
lods
and
shlb
xor
das
hlt
jmp
lcall
hlt
rolb
pop
shll
cld
addr16
sub
nop
cltd
ss
push
int3
mov
xchg
adc
sahf
pop
xchg
call
clc
ffree
jno
lcall
les
and
sub
das
out
fcomip
mov
mov
icebp
xchg
xor
mov
or
inc
cmp
sarb
xchg
push
xchg
inc
mov
int3
jae
mov
jle
push
jp
or
test
mov
lea
sahf
mov
xor
and
pop
insb
aad
outsb
rclb
xchg
mov
jecxz
loopne
mov
in
and
lods
inc
sub
lods
push
test
movsb
insl
xchg
add
push
xchg
ljmp
dec
enter
movsl
mov
in
fsubs
adc
sub
add
mov
movsb
mov
insb
daa
or
in
push
sbb
lds
test
mov
adc
and
imul
push
daa
daa
dec
outsl
mov
xchg
mov
push
cmpb
mov
xor
xor
das
and
out
fmul
push
jl
sti
pop
push
dec
hlt
adc
push
lock
jne
or
xlat
dec
out
ret
call
addr16
jmp
leave
or
scas
aad
divl
jbe
insb
adc
xchg
jns
std
data16
dec
movsb
mov
daa
fsubrp
lahf
faddl
adc
rep
lods
dec
mov
xchg
aam
push
sub
and
hlt
sti
or
outsb
call
inc
xchg
insb
mov
jb
pop
rol
out
mov
mov
cmp
cs
fcmovnu
loopne
scas
dec
adc
sbb
inc
movsb
enter
push
push
pop
pop
in
arpl
jne
imul
test
sahf
sub
cmp
cmpsb
dec
std
movsb
rol
inc
psubsb
test
loop
dec
popf
cmp
mov
imul
rcl
inc
mov
leave
scas
push
xorl
dec
mov
cmp
clc
mov
lock
cmp
push
sti
dec
aam
push
mov
mov
push
test
inc
addl
and
mov
or
pushf
adc
and
push
fldl
out
xor
stc
xor
dec
jb
push
xchg
mov
loopne,pt
xor
xchg
mov
ljmp
mov
xchg
sbb
pop
add
sub
mov
pop
mov
das
dec
movsb
and
xchg
jns
outsl
jb
inc
pop
and
push
js
mov
add
movsl
mov
sahf
lock
aaa
xchg
adcb
out
sub
sbb
xor
add
jb
xchg
pop
xchg
dec
push
mov
lret
lea
aas
out
ret
sub
jg
jno
xchg
or
lods
mov
cmc
push
stos
aas
scas
lcall
jb
gs
js
add
mov
cwtl
ret
stos
sub
or
add
xchg
sub
xchg
push
test
stos
hlt
push
sbb
mov
mov
push
lcall
cmc
imul
sub
sub
jle
push
stos
arpl
das
sahf
test
xor
adc
mov
or
sbb
out
pop
stos
leave
and
sub
push
in
dec
and
fisttpl
mov
sahf
ficomps
into
sbb
dec
sbb
push
jl
cmp
cli
movsb
fs
pop
fstps
stos
shlb
xchg
out
mov
adc
push
push
cmpsb
mov
xor
fimuls
repnz
les
and
xchg
mov
subb
pop
mov
mov
jp
xchg
lock
fstps
das
das
or
icebp
movsb
sub
inc
and
mov
dec
rolb
jmp
mov
imulb
push
cmp
mov
dec
push
jae
lods
arpl
pop
inc
add
les
in
adc
mov
or
jae
leave
out
pop
mov
insl
cwtl
enter
or
mov
leave
mov
insl
sub
cmp
jb
stos
xor
loope
lods
sbb
notl
mov
enter
or
xchg
and
push
sub
aam
fiadds
stc
mov
das
bound
js
mov
mov
cltd
pop
pop
int
out
jbe
aad
clc
movsb
sbb
mov
mov
or
orb
out
xor
adc
sub
mov
dec
cmp
rcrb
clc
out
mov
fldt
and
out
sti
adc
or
stos
xchg
lock
dec
push
enterw
scas
shr
sub
push
sub
pop
xor
repnz
pusha
out
test
mov
cli
jb
push
mov
sar
jae,pn
scas
fildl
addl
dec
sti
push
push
sub
addr16
and
call
movsb
cmp
cld
das
sbb
iret
iret
xorb
inc
mov
xchg
or
cmp
jle
lods
mov
dec
es
out
mov
fsubs
lret
or
lock
sti
je
addr16
fwait
loopne
sub
aad
add
ss
hlt
cmp
movsb
mov
mov
sub
repnz
dec
push
outsb
sbbl
adc
subb
jle
mov
ljmp
das
data16
mov
loope
mov
xor
jb
aad
pop
add
movsb
int3
iret
pop
stos
xor
fidivl
cmpb
cld
outsb
mov
mov
mov
push
mov
mov
sbb
rorl
hlt
pop
dec
adc
in
sub
ljmp
lock
in
mov
popf
into
movsb
stos
es
movsb
jecxz
push
ret
push
jmp
or
add
imul
xchg
or
adc
dec
dec
inc
scas
mov
mov
dec
js
add
leave
xchg
and
sbb
or
sbb
adc
jnp
xchg
loope
ja
or
lret
outsl
dec
popf
mov
mov
dec
sbb
in
pop
fidivrl
inc
insl
stos
shrl
mov
jg
jno
test
cmpsl
movsb
push
ffree
aam
sub
mov
adc
mov
mov
jmp
outsl
xor
mov
xchg
xor
add
fdivs
sub
rclb
jae
ss
cmp
int3
into
aam
sub
or
or
loope
push
jbe
in
xlat
dec
push
pusha
adc
xor
fldcw
sub
call
mov
add
inc
lea
aad
andl
fisubl
sahf
sbb
scas
sub
ja
insl
dec
insl
out
mov
sub
in
inc
mov
push
xchg
pop
imul
stos
mov
dec
shlb
inc
inc
stos
ljmp
push
gs
add
mov
leave
mov
xchg
repnz
scas
jb
out
inc
sbb
inc
add
or
jns
iret
cmp
movsl
shrl
mov
pusha
add
mov
cwtl
adc
sub
sbb
mov
xor
movsb
pop
mov
mov
push
jmp
jne
add
imul
stos
lock
iret
fs
lods
mov
pop
aaa
cmc
sahf
xor
mov
testl
movsl
or
imulb
js
std
xchg
cmpb
pop
mov
push
push
into
movsl
jge
in
sbb
mov
imul
inc
inc
mov
daa
cld
pop
xor
xor
mov
mov
jg
inc
cmc
ljmp
dec
in
pop
out
faddl
arpl
sbb
mov
adc
mov
fs
push
xor
xchg
mov
outsb
or
jmp
cmc
aad
fwait
lahf
pop
loopne
shlb
lds
xlat
into
and
cmp
jge
testl
fistpl
xchg
cli
xchg
xchg
iret
iret
add
add
jns
cmp
fidivrs
les
icebp
push
sub
mov
lods
xor
mov
cmp
call
push
xchg
stc
aas
mov
leave
xchg
lahf
fimull
in
or
mov
sbbb
imul
sub
int
insl
ljmp
repz
adc
pushf
mov
inc
inc
rorl
dec
bound
test
jae
and
nop
stos
or
les
xor
mov
xor
lock
leave
mov
adc
shrl
fsincos
inc
popf
mov
mov
mov
repz
sbb
push
out
nop
xchg
iret
or
ret
mov
stos
mov
test
mov
neg
lret
outsb
fstps
inc
mov
icebp
orb
dec
sub
adc
enter
add
push
cmp
sarb
push
imul
jbe
dec
lcall
call
aaa
cmpl
add
fisubs
fwait
popf
push
test
popf
mov
test
mov
shr
xchg
jnp
cmp
dec
adc
enter
sti
and
das
mov
mov
fildll
xchg
cmpl
cmpsl
push
and
das
call
inc
inc
sbb
mov
mov
shlb
push
addl
mov
es
xchg
outsb
into
scas
mov
push
iret
add
movsl
push
lahf
outsb
xor
imul
mov
cwtl
iret
and
lret
shll
test
sub
hlt
inc
pop
jmp
jno
ficomps
cmp
lea
sub
in
nop
insl
inc
cmp
scas
out
arpl
sar
inc
aaa
push
lods
sarb
fstpl
jns
movsl
leave
outsl
mov
fiaddl
mov
inc
sbb
out
insl
mov
fisubs
inc
xchg
push
lods
es
push
lods
mov
jle
in
fwait
and
sbb
imul
mov
and
mov
idivl
imul
jle
movsb
jge
scas
outsl
lea
xchg
cmp
fadds
xchg
daa
insb
jmp
mov
xor
lret
xchg
je
pop
sub
xor
fldcw
and
mov
imul
popf
mov
adc
mov
ljmp
lds
insb
out
dec
jbe
inc
inc
push
stc
pop
mov
outsb
and
hlt
adc
insl
lea
rclb
mov
sub
dec
push
addr16
mov
pop
dec
sbb
cmp
fsubs
imul
jno
insl
bound
xchg
fsts
xor
xorl
push
mov
stos
sub
sahf
push
shll
bound
cmp
jo
xor
sub
lods
out
mov
mov
sub
dec
call
outsb
mov
push
icebp
push
ljmp
aam
xorl
pushf
sub
nop
dec
adc
fldt
sub
mov
or
pop
adc
repnz
xchg
stos
sbb
pop
lds
or
add
iret
xor
mov
inc
inc
cmp
ficoml
mov
push
outsb
js
cmp
dec
push
pop
sub
in
add
sbb
fwait
inc
lock
jno
iret
jb
hlt
mov
jb
mov
sbb
add
jp
xchg
iret
lds
or
repnz
xchg
rcll
repnz
jns
xor
pop
lock
icebp
adc
jne
mov
push
jb
test
dec
inc
jnp
lret
cmpl
pop
mov
pop
adc
jg
call
stos
push
dec
jb
sahf
fsubrs
es
pusha
scas
fmul
das
jge
lret
push
lahf
cmp
stos
repnz
fwait
sbb
movsb
sbb
or
insl
outsb
mov
movsb
out
xor
mov
mov
mov
imul
aam
xor
mov
mov
pusha
js
ss
cmp
mov
int
stos
cmpsl
das
or
adc
or
outsb
inc
dec
ror
cltd
aad
jp
jne
out
iret
aam
adc
adc
scas
pushf
enter
push
dec
scas
stos
mov
in
into
jo
xchg
sbb
sbbl
add
popf
sbb
movsb
nop
mov
inc
cmp
stos
cmc
divb
cmp
aaa
mov
inc
fdivr
out
mov
lods
mov
lcall
adc
push
dec
mov
bound
clc
fsubs
pop
mov
aas
add
xchg
lea
loopne
dec
mov
adc
sub
jle
stos
jo
movsb
inc
or
mov
pop
popf
in
stos
sub
cmpsl
dec
cmp
mov
popf
lcall
or
addr16
jno
shr
mov
pop
nop
cmpb
xlat
imul
xor
lods
push
in
and
mov
add
sbb
jno
arpl
pop
cmp
jecxz
mov
sbb
lods
push
test
cmpsb
ljmp
mov
mov
sbb
je
orb
pop
and
lods
mov
rcrl
and
sub
pop
and
mov
mov
sbb
inc
into
movsb
outsb
dec
mov
push
xor
push
pop
enter
xor
pop
ljmp
mov
xchg
push
xchg
arpl
adc
push
cmovae
cs
cmpsb
inc
ja
push
cmpsl
je
add
scas
jb
std
adc
xchg
out
xchg
addl
cmpsb
mov
push
and
adc
cwtl
std
xchg
call
pop
movsb
es
nop
mov
mov
icebp
cltd
xchg
fistpl
fcoml
movsb
pushl
mov
jae
stos
xor
mov
mov
icebp
lcall
iret
lea
lock
shlb
movsl
pop
push
pop
lds
aad
sbb
xchg
ret
mov
xlat
and
pop
and
imul
rol
push
mov
mov
jns
pop
popf
icebp
xchg
or
pop
mov
call
cs
push
jl
scas
ror
adc
fsubl
pop
sbb
cmc
push
sub
jecxz
sbb
mov
push
and
sub
imul
jl
lods
add
dec
mov
mov
xlat
adc
ret
dec
cs
fiadds
je
scas
mov
paddq
add
dec
or
lods
inc
or
sbb
daa
cmp
and
jmp
repz
ficompl
mov
xor
xchg
sub
xor
push
leave
pop
mov
jnp
push
push
pop
inc
scas
mov
add
cmpsl
cmp
jle
out
xchg
xor
pop
push
mov
mov
lret
int
faddl
push
jnp
sbb
lods
xchg
cmpsl
push
sbb
jne
cs
cmp
mov
xlat
cmp
imul
pop
movsl
in
bound
cmp
sbb
sbb
adc
xchg
je
or
imul
lret
pop
scas
pushl
das
pop
inc
negb
mov
push
add
fmuls
dec
adc
daa
cltd
scas
sti
pop
sub
or
bound
addr16
in
pop
add
push
or
stos
movsb
or
jmp
mov
push
jecxz
lcall
iret
jp,pn
shll
popa
xor
push
mov
test
mov
shll
nop
jecxz
xor
mov
es
pop
loopne
mov
dec
fs
xor
pop
lods
ljmp
inc
jecxz
outsb
mov
mov
test
jl
data16
out
test
pop
in
inc
xor
add
sbb
fidivs
addr16
imul
movsb
scas
mov
and
sub
xlat
inc
sbb
xlat
nop
shrl
sahf
fsubr
pop
ds
movsb
test
bound
xchg
adcl
out
jb
xchg
jecxz
in
jmp
sbb
jb
xor
jecxz
xchg
lods
cmpsb
sbb
iret
mov
outsl
arpl
and
mov
pop
fdivp
into
ret
jle
shrb
fidivl
jb
inc
rorb
out
cli
aam
mov
pop
lods
jb
std
pop
clc
sidtl
jge
inc
push
xor
sub
mov
scas
das
dec
jp
lods
cmovg
hlt
test
test
movsb
mov
cs
movsb
xor
rcrl
inc
ljmp
inc
scas
jne
fsubrs
push
cltd
cld
sub
jge
jl
cs
fsts
sub
sbb
out
pop
lret
jb
test
lds
push
call
insb
insb
dec
into
add
decb
mov
js
add
imul
xor
test
sahf
clc
movsl
divb
lods
cmc
les
and
push
xor
xchg
nop
sub
mov
addr16
mov
mov
lods
push
fbld
mov
ja
movsb
pop
shufps
mov
loope
into
imul
scas
xchg
jge
cmp
rorb
aad
pop
aad
xor
out
andb
push
push
lods
sbb
lods
sub
push
test
xorl
fwait
sbb
movsb
sub
cmp
cld
sub
sahf
add
xor
lods
jae
jmp
rorb
xor
sbb
mov
fcomip
xchg
sbbl
test
fwait
std
adc
pop
mov
fdivrs
dec
imulb
bound
scas
fnstenv
fidivrl
xor
cs
ljmp
jmp
mov
leave
dec
sub
pop
mov
xchg
inc
loop
rep
pop
call
ja
xor
repz
ret
mov
int
sbb
jns
clc
mov
minps
stos
stc
call
je
sbb
xchg
sub
push
add
mov
popa
mov
xor
scas
push
add
ss
dec
xchg
cmpb
das
mov
outsb
mov
rorl
lcall
ror
dec
ret
mov
push
sahf
fistpl
gs
xchg
imul
pop
mov
inc
pop
dec
inc
insl
and
pushf
in
imull
xchg
jbe
push
and
pop
and
mov
dec
sub
mov
jne
mov
popw
gs
dec
pop
fisubrs
jno
lods
sbb
loope
pop
push
mov
xor
lods
test
arpl
and
push
or
jne
clc
cltd
xor
inc
sub
lods
and
aad
push
leave
and
shr
daa
pusha
pop
cld
xchg
cld
cmp
jge
enter
jle
inc
popf
imul
xor
test
xchg
push
dec
xor
and
sbb
ljmp
pop
mov
cs
fs
xchg
jecxz
xchg
mov
and
lahf
stc
xchg
adc
sbb
inc
mov
jbe
sbb
dec
popa
out
mov
xchg
pop
insl
inc
cmp
repnz
sbb
adc
mov
push
leave
cmovp
gs
decb
fadd
mov
jo
sub
cltd
mov
jge
dec
fadd
mov
lods
daa
cmp
cli
movsb
in
adc
ret
push
xchg
into
shlb
add
pop
inc
jp
add
iret
pop
fiaddl
cwtl
push
cli
je
cltd
mov
adc
inc
jno
icebp
jae
lods
mov
or
icebp
mov
mov
dec
js
push
pop
xor
cmpsl
ret
out
add
xchg
xchg
mov
inc
xchg
hlt
adc
mov
push
leave
push
or
xchg
aad
mov
lock
fistpl
sub
adc
fsubrs
lahf
scas
dec
cmpsb
xor
imul
mov
jb
xchg
dec
in
lods
ds
inc
sub
fdivs
or
lret
loope
adc
outsb
das
ret
lock
and
inc
lods
ret
mov
daa
xchg
addr16
lret
cmp
leave
push
fwait
inc
ljmp
adc
test
lcall
scas
aaa
bound
lock
cli
xor
cli
mov
add
xor
push
mov
jb
mulb
out
in
rorb
pop
adc
pop
cmp
insl
aad
sbb
push
call
and
fwait
lods
mov
repnz
push
lds
mov
rcr
sbb
mov
mov
fwait
int3
xor
mov
jle
cltd
jmp
cmp
cs
jmp
cmpl
inc
sbb
push
mov
sbbb
mov
adc
sbb
icebp
scas
stc
cmp
inc
push
outsb
test
lret
lcall
les
xchg
push
shll
popa
insb
cmp
imul
push
push
fimull
sub
stc
inc
clc
cmc
mov
xor
scas
mov
icebp
pop
arpl
ss
cli
mov
and
xchg
sbb
sbb
dec
sbb
jge
aas
dec
or
xlat
fstpt
in
aaa
cmp
incb
sbb
adc
sbb
xor
xor
movsb
xor
sub
mov
push
sub
mov
mov
jp
add
sbb
pop
jb
dec
lret
fwait
push
cmp
add
push
cmp
ljmp
rcll
popf
loop
push
call
adc
aas
push
mov
insb
jp
mov
jne
xlat
lret
jge
and
or
xor
repnz
js
das
cmp
mov
xor
push
sbb
pop
push
push
pop
aaa
lret
lcall
sub
hlt
test
inc
enter
mov
fimuls
sbb
push
insb
aaa
xchg
in
hlt
push
outsb
int3
insb
shl
scas
pop
jb
enter
inc
push
mov
xchg
lods
sahf
mov
xchg
jne
mov
and
cmp
adc
aaa
pusha
sub
adc
or
jb
pushf
xchg
or
lcall
xchg
inc
movsb
inc
push
mov
cmp
jle
mov
movsb
in
cmc
jno
or
xor
xor
cltd
scas
clc
jo
imul
mov
push
fcoml
sub
jae
inc
xchg
cmpsb
outsl
rcrl
pushl
fdivrs
das
cltd
lds
scas
xor
jbe
iret
out
adc
add
fbld
mov
inc
or
rcr
xchg
mov
mov
jg
or
pop
mov
mov
pop
leave
xor
xchg
das
mov
insb
fcompl
adc
mov
push
mov
adc
jnp
movsl
movsb
pop
fiaddl
jb
gs
cmc
mov
into
je
sub
dec
sub
push
cli
adcl
lret
imul
mov
push
xor
fdivs
push
repz
cmp
popf
sahf
push
int
imul
and
lods
xchg
in
dec
inc
push
sbb
out
push
push
mov
adc
mov
or
adc
jmp
rcl
cmp
mov
xor
xor
lods
xchg
add
dec
or
pushf
mov
push
jbe
mov
imul
xchg
cmpsl
jecxz
dec
mov
adc
lock
inc
lds
addr16
jae
dec
movsl
enter
bound
cmp
mov
repnz
pushf
imul
inc
and
addr16
out
fstps
in
and
cs
scas
jmp
sbb
fcoms
adc
fdivrl
les
push
add
lods
je
es
outsb
cli
mov
cmc
inc
jmp
stos
xor
or
fdivs
int
sbb
push
int
and
sahf
ret
lods
or
gs
ja
sbbb
ss
mov
mov
sbb
in
push
mov
dec
sub
loope
scas
adc
lods
bound
decb
cli
cmpsb
orb
addr16
jb
push
test
cmc
aas
pop
lods
inc
fwait
jle
lock
subb
cmp
adc
out
mov
fwait
or
mov
add
leave
mov
jl
cmp
add
jle
ret
movsb
fdivrp
push
jnp
xchg
sub
loope
imul
mov
in
jnp
roll
loop
or
data16
adc
cmc
cmpsl
subb
scas
out
or
test
fcmovb
sub
inc
imul
add
xor
and
stos
cmp
leave
xlat
sub
push
sub
mov
movl
inc
sbb
cmp
cmp
push
insl
jo
hlt
test
out
ja
mov
sub
pop
fdivl
lcall
xorl
cmpsl
lods
mov
push
add
clc
add
sub
movsb
push
sub
fcoml
cld
insb
mov
jbe
jno
xor
push
jg
stos
push
mov
leave
ret
jb
fisubl
repz
and
bound
subb
and
xor
mov
mov
push
ss
gs
jbe
mov
jecxz
mov
and
movsl
cmp
insb
mov
jo
lds
sub
push
adc
outsb
cwtl
mov
das
lods
sub
call
push
clc
mov
inc
cmp
insl
cmp
lret
icebp
dec
and
jmp
sbb
or
mov
mov
cmpsl
insb
sbb
in
arpl
xchg
cmp
fsub
stos
add
jne
adc
sbb
lea
aas
outsl
lods
jmp
cld
pop
xchg
ret
inc
dec
xor
out
cli
sub
aad
push
mov
insb
mov
mov
test
sbbl
or
shll
mov
pop
inc
aad
rcrb
dec
lcall
repz
loop
rcrl
dec
pop
ret
cli
outsl
add
stos
imul
ret
mov
sub
xorl
ss
into
dec
mov
dec
data16
ret
and
divl
jecxz
fimuls
pop
cmpsb
ss
mov
inc
int
in
cmpb
lods
mov
test
cli
sbb
ficompl
cld
fnstcw
xchg
in
enter
into
jnp
sub
pop
xor
inc
in
out
xor
jmp
lea
mov
cli
dec
test
xor
mov
pop
add
adc
sbbl
sbb
jmp
orl
dec
movsb
pusha
repz
jne
int
sub
in
test
pop
sub
xchg
leave
cmp
jge
mov
mov
and
and
mov
addl
inc
pop
mov
jg
add
fisttpll
sub
clc
xor
adc
xor
lcall
dec
add
mov
test
daa
mov
adc
cltd
jmp
and
movsb
and
jnp
push
or
mov
cmpsb
or
call
roll
mov
div
pop
mov
mov
mov
pop
adc
adc
jbe
jb
xor
adc
jge
push
and
lods
add
mov
imul
jp
insl
pushf
cld
cmc
or
pop
clc
sbb
movsl
sarb
jne
add
jl
fdivs
sub
das
rcll
mov
mov
pop
rclb
cs
aad
sub
clc
mov
and
xor
clc
fisttpll
cmp
mov
mov
and
int3
orl
and
imul
stc
int3
mov
cld
fwait
icebp
jbe
fwait
or
lods
sbb
add
lahf
lcall
pop
dec
mov
andb
cmpsl
mov
and
or
mov
jne
shrb
fcoml
into
sub
pop
ficoms
jmp
lods
scas
xchg
std
jns
lods
test
xchg
mov
adc
pushf
cwtl
cld
cmpsb
xchg
adc
arpl
pop
dec
push
jmp
fs
pusha
into
and
inc
or
fcoms
jnp
push
cltd
pop
sbb
lcall
in
push
mov
mov
jae
inc
push
push
add
loope
cmp
jae
jb
jl
test
mov
xor
lds
lret
clc
sub
mov
add
lret
int3
jp
cmp
pop
outsl
test
adc
sub
jle
jno
mov
dec
xchg
sbb
inc
sbb
lock
fisubrl
push
data16
mov
jae
inc
cmpsb
je
pop
xchg
outsb
psllw
cmp
cltd
shrl
js
fidivrs
bound
push
popa
inc
jne
xor
mov
test
jns
pop
and
jb
mov
add
add
in
fsubs
mov
push
inc
mov
and
push
into
push
xchg
sub
cmp
sbb
aaa
shrb
mov
outsb
sub
pop
pop
pop
push
xchg
loope
shll
xchg
sub
repz
jp
aas
and
push
stos
fiaddl
cmpsb
mov
in
dec
fnstcw
out
loope
data16
enter
fcoms
jmp
sbb
cld
sbb
cmpsb
in
xor
imul
jmp
jnp
cli
adc
je
aaa
cmp
stc
cmpsb
cltd
dec
lahf
jns
adc
rcl
cld
lods
mov
xor
pop
ret
mov
div
mov
push
sub
fdivp
push
arpl
bound
pop
jae
push
mov
scas
mov
pop
cmp
adcb
jo
pop
jae
or
enter
fimull
shrl
pop
push
fisttpll
jno
dec
xchg
adc
mov
push
aam
fcmovu
inc
dec
scas
ljmp
movsb
push
mov
inc
xor
inc
push
adc
mov
orl
push
or
and
mov
lahf
stos
push
movsb
xor
scas
mov
cmp
pushf
jno
out
shrl
push
adcl
lret
add
ficomps
iret
sub
inc
mov
cmp
loopne
push
cmpsb
das
adc
ja
inc
jnp
add
scas
ror
icebp
arpl
in
test
movsb
pushf
lods
inc
mov
cmpb
insb
jb
xchg
bound
xor
stc
mov
movsl
sbb
cltd
leave
inc
nop
sub
shll
fwait
sub
insl
sarb
or
xlat
in
or
out
jg
push
fimull
aam
pop
scas
jge
sub
push
and
cmp
cli
xor
loope
daa
stos
mov
or
push
mov
xchg
sbb
jge
pop
movsb
out
mov
sub
jae
pushf
xor
push
xchg
cmp
pop
pop
test
cmp
jno
ret
ljmp
lds
ja
div
mov
mov
jge
jnp
dec
cmpsb
cmp
push
cmpsl
xor
xchg
out
sbb
ret
pop
and
jnp
mov
dec
jo
lcall
fwait
out
add
sbb
aaa
mov
add
jg
xchg
hlt
rdpmc
ja
out
imul
add
push
xchg
mov
and
xor
jmp
test
mov
dec
mov
in
fsts
jae
cld
mov
stos
jb
fcoms
add
movsl
cltd
mov
xor
xorl
push
ret
xchg
xor
push
push
retw
pop
dec
pop
or
inc
add
jge
movsb
mov
push
mov
loope
and
addl
inc
xor
lcall
dec
inc
jo
jnp
mov
lret
mov
lock
push
inc
cmpsb
imul
lret
scas
xor
mov
xor
xor
adc
mov
jno
add
pop
loope
inc
add
jmp
std
fldl
or
loopne
icebp
les
pusha
xor
sub
stos
mov
xchg
mov
cmpsl
dec
push
mov
int3
inc
mov
mov
mov
movsl
into
call
outsl
mov
ja
add
dec
or
sahf
and
shl
dec
mov
les
hlt
push
cwtl
xchg
imulb
sbb
add
ljmp
cmc
adc
add
and
inc
imul
int
sbb
mov
mov
push
push
pushf
sub
xchg
fsubr
jae
adc
sub
mov
outsb
nop
lahf
sub
movsl
fs
ret
lods
pop
test
or
call
sti
inc
sbb
icebp
bound
pop
jge
loopne
aad
pop
and
rcrl
inc
mov
inc
mov
addl
xor
cmp
fsubl
inc
inc
dec
and
aas
xchg
pop
lcall
flds
jmp
mov
testb
das
int
mov
por
dec
pop
cmp
sub
sbb
into
cmc
push
sub
roll
push
lock
mov
mov
mov
adc
add
adc
icebp
push
xor
leave
movsb
xchg
dec
push
call
add
lods
ret
cmpsl
inc
cwtl
jnp
sbbl
fwait
mov
fs
int
mov
inc
or
test
outsb
push
mov
lds
lahf
push
ljmp
movsb
loope
inc
mov
xor
pop
jge
and
or
adc
mov
cs
fdivrs
out
testb
push
stos
daa
cmp
shrl
xchg
dec
xchg
pop
add
mov
mov
xchg
mov
repnz
push
mov
notl
negl
shll
or
xor
stos
sub
push
ret
sub
int3
call
xlat
int
jl
pop
jb
mov
ror
stos
xor
lods
lea
jnp
mov
mov
xlat
fcomps
lret
xor
hlt
mov
xchg
rcrl
das
sub
movsb
adc
cmp
inc
jbe
sub
pusha
cltd
mov
sbb
inc
mov
dec
enter
jne
ret
push
xchg
pop
sub
push
dec
jmp
jb
adc
and
xlat
loop
loopne
mov
repz
adc
ljmp
sub
in
pop
jl
push
fdivs
aam
inc
repz
xchg
inc
mov
das
aam
stos
insb
sbb
data16
xor
pop
push
jo
nop
orb
or
outsl
adc
stos
jbe
dec
push
jg
lea
fwait
push
cmp
sbb
xchg
ret
mov
xchg
aaa
stos
pop
fpatan
mov
pop
std
sbbb
pop
xor
sbb
ret
fisubs
sub
mov
xor
sub
xchg
test
aaa
stc
iret
dec
testb
sbb
repz
cs
mov
aaa
stos
fidivl
sti
pop
ficomps
stc
mov
jl
outsl
adc
andl
dec
cld
cld
cli
mov
push
sbb
setno
mov
loope
pop
push
call
loope
movsb
mov
out
xchg
jne
inc
jo
sbb
jb
push
xor
jecxz
inc
or
adc
sbb
dec
add
ljmp
sub
out
xchg
out
repz
push
dec
mov
jge
mov
adc
je
dec
add
ss
jmp
sbb
mov
popf
subl
cltd
ret
out
lods
adc
mov
ret
daa
sub
pop
sub
mov
or
adc
ja
sub
sbb
repnz
subb
fldcw
lds
mov
pop
clc
and
xchg
adc
mov
test
nop
push
xchg
adc
and
mov
ja
repz
mov
lret
js
icebp
inc
mov
pop
inc
mov
or
xlat
out
cmp
je
inc
stos
mov
jp
loope
dec
dec
cmp
out
mov
mov
add
mov
pushf
dec
dec
sub
dec
dec
mov
inc
lods
sub
ret
add
in
mov
push
push
stos
mov
jo
add
ret
push
outsl
dec
mov
out
js
mov
leave
lret
pusha
cmp
pop
leave
jecxz
mov
popf
mov
stc
sahf
test
bound
es
sbb
inc
sub
sbb
xor
jae
mov
mov
cmp
adc
scas
pop
movsb
mov
dec
js
repz
aam
cld
sar
mov
stos
inc
ss
js
and
mov
mov
cmc
pop
sub
push
stos
je
pop
or
dec
xchg
hlt
pop
or
inc
das
jmp
out
mov
add
lret
dec
push
mov
in
fisubrs
es
or
sub
fimuls
push
out
fwait
xchg
fiaddl
xchg
fildl
xor
fdivs
push
xor
rorb
sarb
inc
push
jge
iret
mov
mov
mov
rcl
sub
mov
add
outsb
ret
mov
dec
hlt
insb
mov
xorb
cmp
es
mov
nop
cld
inc
xchg
sbb
cs
mov
xchg
shrl
cmp
sub
sarl
mov
mov
push
and
movsb
fildll
push
push
nop
movsl
es
mov
pusha
inc
addr16
adc
adc
cmpsb
je
ret
xchg
mov
pop
cmp
cmpsb
mov
jmp
cmpsl
stos
mov
pop
xor
cmp
jb
adcb
bound
subl
movsl
mov
xchg
cltd
fwait
in
adc
mov
fs
mov
pushf
cli
test
repz
xchg
xchg
movsb
and
inc
xor
sahf
fcoml
into
pop
mov
arpl
repnz
mov
ret
lods
movsl
push
aam
xchg
out
dec
jbe
sbb
iret
add
sub
repz
fucomip
and
fstl
lcall
subl
dec
cmpsl
subl
notb
cmp
xchg
push
data16
in
sub
mov
test
or
stos
cmpsb
ret
movsb
mov
arpl
nop
pop
test
and
les
inc
jno
mov
out
dec
mov
shrb
cmp
inc
inc
sbb
inc
jne
add
pop
ljmp
outsb
sbb
les
cmp
and
test
clc
add
mov
data16
mov
dec
out
movsb
jo
pushf
scas
mov
aad
inc
daa
pop
and
movsl
xor
cmp
inc
add
int3
fcoms
popa
ret
sbb
dec
mov
mov
dec
pop
orb
dec
jge
xchg
xlat
cmpsl
fs
xadd
inc
jp
jbe
adc
sbbb
lods
int
pusha
mov
shl
pop
sbb
sub
sbb
sub
inc
jns
cmp
push
outsl
or
outsb
jb
in
jno
das
xlat
repz
aas
dec
and
inc
mov
dec
xor
nop
dec
dec
sbb
sub
shlb
add
lea
inc
push
rcll
stc
and
lret
jnp
pop
or
adc
push
add
cmp
insl
cmp
sub
xor
call
add
xor
jne
fnsave
iret
je
loop
scas
cli
jbe
mov
mov
mov
stos
mov
mov
out
fisubrl
icebp
push
out
cli
rorl
test
into
mov
int
and
mov
ficoms
fisubrs
loope
scas
out
push
repz
xchg
iret
xor
jbe
jge
fcomps
lret
cmc
outsl
ljmp
sub
sbb
jb
cwtl
mov
sub
aad
leave
pop
cmc
mov
jecxz
roll
dec
in
jbe
push
lods
clc
mov
push
imul
data16
inc
jnp
setge
vpsubusw
or
stos
mov
xor
mov
push
icebp
push
sub
imul
pop
push
pushf
aaa
in
sub
call
cs
xor
mov
popa
fimull
mov
pusha
daa
mov
dec
out
in
or
lock
adc
mov
cmpsb
cmp
xchg
adc
fmulp
push
cld
dec
mov
push
mov
int3
mov
add
xchg
mov
lds
push
neg
mov
mov
je
add
popf
adc
dec
fwait
add
inc
dec
leave
xchg
lret
icebp
pop
dec
ljmp
stos
out
insl
movl
mov
xchg
sub
jbe
mov
movsb
fadds
push
or
shll
jo
and
out
push
cmp
mov
cld
ret
sub
jne
mov
imul
dec
push
jmp
pop
out
add
adc
das
loope
ret
ficoml
in
lea
out
movq
hlt
add
cmpsl
call
shll
pop
jg
sahf
dec
popa
adc
flds
movsl
outsb
mov
add
xlat
sub
lcall
out
ret
jae
aam
inc
bound
inc
xchg
fs
in
lret
notl
mov
and
adc
adc
popf
adc
mov
jecxz
shll
or
push
cmp
add
push
sub
shll
sub
cld
xor
jns
xor
aad
loop
in
scas
jmp
jnp
das
push
push
adc
in
sbb
popa
jmp
inc
mov
sub
std
not
mov
xor
addr16
rcl
xchg
add
lods
fisttpll
stos
adc
out
rorl
jmp
adc
pop
mov
fiadds
mov
xchg
inc
ja
mov
cmc
push
dec
jecxz
dec
inc
mov
dec
adcl
clc
out
jmp
out
mov
scas
push
cmp
stc
jo
ss
arpl
ret
jg
or
jle
movsb
mov
call
pop
sbb
aas
sbb
jbe
sbb
mov
std
jo
adc
sub
xchg
and
jmp
sbb
bound
les
cmpsl
je
adc
fs
mov
fildll
and
push
cmp
ds
pop
rolb
mov
into
mov
jmp
inc
xor
jbe
gs
cmp
xchg
cmp
dec
inc
loope
lahf
out
mov
mov
fdivs
in
loope
inc
cwtl
movsb
and
pop
outsl
loopne
repz
andl
or
xchg
sub
fisttpl
loopne
add
fwait
shll
lods
lea
mov
movsl
aam
mov
test
iret
xchg
out
xchg
gs
enter
out
jmp
pushf
mov
out
pushf
js
iret
aam
pop
cmpsb
ljmp
sbbl
adc
xchg
insl
add
or
cmp
sub
mov
iret
pop
jb
ljmp
or
loopne
inc
fidivs
dec
add
movsb
adc
or
cmp
popf
aaa
divl
cmp
ljmp
out
je
lods
xchg
push
inc
mov
and
das
fistl
in
xchg
xchg
shrb
movsl
cmp
movsb
mov
add
add
adc
dec
imul
stos
cli
push
pop
sub
jae
mov
mov
cmpsl
ret
or
in
loop
pusha
xor
xor
aas
pusha
cmp
xchg
les
es
arpl
push
push
movsb
test
mov
jne
adc
mov
in
mov
aaa
das
insb
add
sbb
adc
and
into
testl
push
fisubl
ljmp
sub
mov
stos
and
mov
and
pop
mov
cwtl
xchg
xchg
enter
lock
call
addr16
loope
mov
inc
inc
fistps
dec
pop
mov
jl
out
mov
test
cs
cmp
adc
jo
mov
mov
add
stc
lock
inc
shll
lods
stos
dec
push
cli
pop
lahf
jbe
out
rcrl
or
cmpsb
in
out
fsubrs
fcomps
clc
cmp
and
push
sub
add
xchg
cmpsb
add
sub
pusha
pop
fwait
push
mov
clc
scas
outsb
stos
test
jns
push
cld
jbe
leave
inc
stos
into
cmp
dec
jno
xor
or
bound
mov
popf
ljmp
cmp
mov
mov
bswap
pop
mov
fcoml
push
adc
mov
push
jo
jbe
or
leave
imul
stos
jb
imul
int3
arpl
sub
mov
out
fs
fcomp
sbb
cs
je
xchg
pop
enter
cmc
cmp
xchg
sub
push
aas
fsubr
nop
pushf
and
pop
mov
ret
mov
repnz
sbb
ljmp
add
jb
lcall
xlat
cmpsl
mov
lock
arpl
add
and
xchg
in
icebp
repnz
push
pusha
pop
ljmp
add
dec
mov
jg
cmpl
test
rcll
orb
outsb
dec
stc
mov
sub
lods
mov
out
add
mov
cli
mov
cli
fldt
arpl
add
shr
jne
pop
lea
sbb
mov
ljmp
sbb
lcall
xlat
push
add
xor
mov
imul
jge
movsl
movsl
icebp
cmp
mov
xor
xor
xchg
bound
xor
arpl
cmpsb
pop
jb
cwtl
xchg
ret
pop
mov
adc
iret
mov
xchg
pusha
xor
sar
out
ds
test
mov
mov
mov
gs
call
push
ret
shrb
push
rol
push
pop
addr16
mov
movsl
enter
and
jne
push
xchg
and
roll
jne
and
fs
xchg
jmp
add
das
cmc
or
dec
and
fldcw
add
push
mov
sub
ret
add
sbb
rep
dec
adc
sub
cwtl
lods
xor
mov
popa
inc
jne
mov
inc
mov
xor
dec
fidivl
repz
notl
mov
pop
pop
mov
stos
test
fs
je
ret
jno
sarl
mov
pop
icebp
in
imul
add
cmp
pusha
cmp
daa
add
imul
mov
pop
push
push
iret
pop
pop
mov
ret
jae
in
ficoml
out
fdiv
les
mov
aad
sub
addb
pop
js
ret
hlt
movsl
repz
sub
subb
push
mov
mov
cld
shl
movsl
push
cmp
imul
lods
xor
in
sbb
sub
les
push
hlt
jnp
popf
out
sub
sti
mov
mov
cmpsb
mov
inc
jge
in
sbb
test
sub
sub
outsl
lods
cli
repz
leave
lret
rcrl
cmpb
ret
aaa
mov
ret
ljmp
into
dec
add
fdiv
cmp
pop
stos
mov
jne
jne
test
push
lret
jecxz
lret
push
mov
adc
sub
xor
or
jb
xchg
loopne
mov
xchg
xchg
sub
pop
jno
pop
inc
mov
xchg
cmp
xchg
out
xchg
cmp
jbe
mov
les
mov
adc
mov
pop
push
pop
push
or
sahf
sub
lret
les
mov
movsb
inc
add
xor
or
push
fldenv
or
dec
and
pop
cmpsl
out
and
push
push
pop
inc
adc
cmpsb
imul
imul
sub
jbe
dec
aaa
push
xchg
jnp
mov
lods
adc
or
xchg
shll
sbb
test
or
xchg
jae
flds
outsb
shlb
shrl
popa
adc
iret
roll
or
data16
lods
test
sbb
pusha
enter
lods
push
or
movsb
xchg
dec
mov
adc
int3
cmp
movsb
dec
imul
mov
aad
push
fsubrs
iret
adc
jae
jmp
call
ss
mov
aas
sbb
mov
out
loope
mov
rorb
sbb
mov
mov
vmwrite
adc
test
aam
and
mov
pusha
jnp
pop
cli
sbb
lods
pop
adc
jbe
bound
das
mov
jle
push
mov
and
int3
or
cmp
cmp
sub
lods
or
pushf
sbb
movsl
sbb
push
mov
mov
imul
lods
pop
outsl
mov
inc
icebp
mov
adc
sahf
in
ficomps
scas
add
cld
dec
test
jns
mov
inc
inc
insl
xchg
mov
xchg
inc
add
jae
jb
add
mov
mov
setae
inc
lods
loop
rcrl
icebp
xchg
and
lds
push
pop
movsl
je
pop
stc
into
daa
jo
lcall
dec
out
test
adc
aas
or
lods
cmp
pop
stos
or
lret
andl
es
loopne
xor
inc
pop
jb
or
sub
pop
in
stc
dec
gs
out
push
cmp
ss
lods
arpl
shll
pop
ret
push
dec
xor
mov
push
movl
add
outsl
movsb
cs
lods
iret
push
fsub
stc
or
xor
iret
push
xor
imul
jbe
push
pop
cmpsl
xchg
fcmovb
outsl
enter
fimull
aad
inc
sahf
movb
jne
lods
shll
stos
ret
cmp
aaa
inc
shll
adc
and
sub
jge
aaa
rcrl
push
sub
arpl
sub
test
leave
sbb
test
mov
aas
jb
sub
pop
adc
lea
popf
or
xchg
clc
cli
lods
jle
les
int
push
pop
rolb
int3
in
jp
out
hlt
jo
mov
jp
test
cmpsl
sbb
fisubrl
mov
jbe
cmpsb
dec
dec
push
jle
mov
pop
mov
inc
push
stos
push
pushf
loop
and
fcomps
mov
bound
shrb
mov
out
jge
popf
add
jo
jbe
leave
ret
and
out
test
mov
mov
xor
sarl
xchg
pop
adc
test
and
push
adc
dec
push
ss
xor
shrl
cmpsb
mov
jno
pop
pop
adc
push
lods
pusha
mov
push
mov
mov
loop
lret
loope
sbb
ds
add
pop
jno
push
out
addr16
movsb
push
outsb
jbe
jnp
shll
lcall
das
into
mov
sub
movsb
fwait
int
xor
ljmp
push
xchg
jp
pop
mulb
inc
out
xchg
jne
pop
inc
das
lods
push
push
push
push
outsl
lods
shll
aam
jg
leave
jns
mov
push
fnstenv
jbe
hlt
cmpsl
mov
ja
ret
adcb
or
lds
or
or
jno
gs
inc
pop
stc
cmp
mov
pop
ret
popa
ffree
push
cmp
pop
and
dec
or
fidivl
not
jmp
jp
adc
aaa
xor
imul
ret
clc
push
mov
mov
xchg
jbe
mov
lea
adc
out
xchg
add
into
xor
dec
outsl
add
ja
jns
fdivrs
pop
push
jge
push
test
xor
out
sub
fisttps
push
cli
dec
jge
mov
mov
or
mov
sti
scas
repnz
sub
mulb
lret
addb
jge
push
cmc
movsl
lcall
ljmp
mov
jg
adc
jno
jnp
mov
outsl
fistpl
sub
subb
jb
xchg
mov
xor
in
pop
and
imul
ret
insl
fldcw
mov
jle
aaa
sti
or
sbb
pusha
mov
jno
push
xlat
jno
mov
testb
xchg
in
jmp
cwtl
mov
cs
movsb
ret
cmpsb
jg
dec
addb
xchg
and
or
repz
andl
rcrl
shr
movsl
lods
jle
cmp
inc
fcoms
loope
or
loope
ret
add
movsb
push
cmp
arpl
sub
cmpsb
lods
sbb
int3
ret
inc
cmpsl
push
sbb
pushf
nop
and
js
mov
pusha
ljmp
xchg
xlat
xor
int
sub
push
insb
jge
add
mov
icebp
mov
cmp
sahf
out
ja
xchg
xlat
nop
pop
push
out
mov
in
dec
push
add
xchg
mov
mov
dec
cmc
cmc
call
jo
sbb
inc
mov
cmp
mov
mov
mov
mov
std
cmp
or
push
dec
mov
sbb
push
pop
ljmp
jg
mov
pop
out
sub
jns
aad
xchg
fadds
sbb
dec
cmp
mov
fdivrl
push
mov
les
insl
pop
mov
sub
fstpt
rcr
xor
fistl
jl
cmc
movsb
mov
xor
xor
cmp
cmp
inc
xor
ret
mov
ljmp
into
add
fnstenv
and
pop
outsb
xchg
sbb
mov
mov
jbe
cmp
imul
icebp
mov
push
pop
pushf
fcmovne
push
sub
cmp
pop
test
scas
mov
or
add
mov
jmp
fimuls
mov
sub
push
shll
push
scas
frstor
lea
sbb
inc
cmp
scas
xor
mov
pop
mov
addr16
adc
outsl
ljmp
xchg
movsb
mov
cld
add
cltd
movsb
xchg
adc
mov
imul
test
jmp
jmp
dec
sub
mov
push
andl
xor
cmpsl
ficomps
adc
pusha
cmp
jl
jbe
and
push
dec
add
jle
insb
mov
sbb
mov
jmp
lods
popf
fldenv
jno
mov
outsl
dec
stc
mov
pop
mov
orb
out
mov
ss
sbb
jg
out
mov
sbb
in
aad
punpcklbw
mov
cmp
ds
sub
lods
inc
adc
mov
sub
dec
and
fwait
lcall
rcll
pusha
xchg
fidivs
adc
xchg
out
xor
lea
adc
jnp
xchg
xor
cmp
in
mov
mov
push
or
test
adc
sbb
sub
dec
lea
mov
cmp
mov
mov
pop
es
mov
sahf
enter
xorl
dec
and
shrb
pushf
xor
mov
push
or
sub
add
lods
rcr
shlb
push
leave
mov
push
inc
and
jle
dec
push
insb
xor
cwtl
das
rol
das
mov
lret
adc
push
mov
pushf
icebp
in
mov
stc
loop
mulps
ss
xchg
movsb
xor
ret
js
mov
roll
movsb
adc
mov
int
imul
inc
sbb
clc
jmp
data16
jae
xlat
es
xor
leave
cmp
jns
das
pop
mov
adc
sub
add
add
movsb
fists
icebp
lods
inc
mov
jae
xor
sub
movsb
in
je
cwtl
mov
sub
test
mov
outsb
aam
mov
cltd
pop
dec
cmp
popf
mov
cmp
dec
lods
fcomps
div
mov
and
fistpl
push
inc
in
push
cmc
mov
lcall
jae
jo
xchg
jmp
lret
scas
push
ljmp
fists
pop
jmp
mov
sub
ror
lods
cmpsb
and
jae
je
pusha
xor
in
stc
push
pop
les
jmp
lret
and
movl
jnp
jmp
sbb
mov
inc
fs
push
cld
ret
lods
int3
popf
mov
lds
aaa
mov
lea
in
push
pop
cmp
sbb
jns
push
jge
test
stc
adc
sub
mov
pusha
push
sub
cmp
fcomp
int
lea
ja
mov
inc
ret
mov
scas
or
loope
mov
and
ja
mov
testl
subl
jae
sub
and
movsb
dec
nop
cmpsb
xchg
ss
cmp
arpl
cmpsl
inc
repz
dec
pop
and
sarb
mov
xchg
sub
sbb
in
mov
mov
mov
jbe
cs
push
add
mov
xor
xchg
cmp
outsl
ds
mov
aam
jne
pop
ss
or
shrl
rcll
icebp
pop
inc
mov
pop
clc
xor
lea
push
out
mov
inc
sub
sub
or
ret
insl
outsb
inc
int3
mov
jle
mov
aam
xor
mov
sbb
in
cmpsl
jmp
test
add
inc
push
loope
cwtl
cs
push
and
pop
mov
sub
dec
loop
movsb
or
mov
lods
stos
pusha
call
aaa
xchg
push
or
mov
xchg
icebp
imul
inc
test
dec
vmovdqu
shrl
nop
enter
and
aaa
std
xchg
insl
and
push
pop
pop
cmp
xchg
insb
mov
adc
cmp
lods
adcb
lea
ljmp
and
xor
cmp
mov
pop
and
outsl
data16
and
das
push
pop
mov
pop
sub
xor
mov
push
or
xor
jno
mov
ss
mov
ret
sub
adc
dec
aam
imul
inc
mov
xor
xchg
dec
or
fisttps
imul
fs
nop
shlb
push
push
subl
mov
xor
mov
data16
je
lock
inc
mov
std
push
add
cmp
and
subl
sbb
xor
ret
push
ljmp
cmc
xchg
lds
fsubrs
ficomps
repz
jno
mov
jecxz
pop
mulb
inc
iret
sub
aam
adc
fwait
repz
rcr
pushf
out
jns
inc
hlt
fwait
scas
repz
xchg
cwtl
cs
xchg
lcall
fdivrp
inc
loop
and
pop
aaa
dec
in
xor
sbb
out
push
sbb
mov
mov
mov
fsts
xchg
cs
jp
cs
scas
inc
sub
repnz
lods
push
ja
fnsave
jo
xor
imul
dec
xorl
jno
mov
ret
scas
movsb
aad
push
mov
repz
pop
dec
cmpsb
mov
sbb
adc
mov
and
pop
mov
stc
mov
cmp
jb
and
popf
fdiv
out
iret
out
add
lret
fcoml
int
lods
xchg
jnp
jbe
in
mov
jnp
jmp
ret
stos
repnz
mov
cvtps2pd
fcmove
cli
xchg
jmp
lods
adc
in
jl
push
movsb
mov
and
paddw
shl
fdivl
push
jge
decb
and
fcompl
inc
data16
leave
dec
adc
sub
or
jle
dec
test
call
jns
fsubrs
fistpl
mov
push
subl
push
sbb
jmp
adc
cmc
popf
mov
inc
fcomps
push
cmpsb
hlt
ss
int
cmp
push
cmc
dec
sub
pop
movsb
loope
aas
xor
in
negl
test
stos
test
es
or
and
ffree
loopne
ss
mov
sub
scas
popf
jno
mov
aam
dec
ss
loope
mov
mov
outsl
pop
jns
lea
mov
pop
sbb
jae
movsb
jg
test
sub
inc
lea
fistl
dec
ud0
dec
jns
xchg
xchg
dec
mov
sub
sbb
mov
clc
and
inc
dec
mov
jne
icebp
test
sahf
lds
aaa
xchg
insl
inc
push
dec
mov
pushf
mov
pop
add
add
mov
ficomps
pop
imul
stc
shll
mov
dec
pusha
jge
shl
mov
movsb
jae
jne
enter
cmp
xchg
dec
mov
push
idivl
xorl
mul
inc
call
sub
movsb
fs
pusha
rcrl
jb
push
mov
inc
push
or
adc
cmpsl
push
sub
aam
pop
shrl
lcall
movsb
add
js
stos
mov
inc
mov
dec
add
push
cmp
mov
das
aad
xchg
push
ljmp
pop
cmc
jns
jo
stos
movsb
add
inc
clc
mov
pop
shl
bound
xchg
xchg
xchg
mov
xchg
movsb
scas
cld
cmpsl
fisttps
xlat
mov
nop
sub
inc
inc
ljmp
push
dec
add
push
loope
ror
push
push
sbb
xchg
dec
jns
scas
sub
xchg
bound
out
fwait
or
mov
fisttpl
and
scas
les
sbb
xor
and
jns
inc
cli
stos
loopne
xchg
xchg
fisubl
pop
ud0
sbb
mov
arpl
dec
jecxz
bnd
sub
adc
push
dec
enter
les
out
into
mov
out
push
jbe
pushf
repz
add
pusha
in
sbb
cmpsl
shrb
dec
fisubs
push
dec
pop
add
pop
mov
pop
push
orb
jge
jo
lods
jne
leave
pop
lods
pusha
sub
sub
push
jnp
sbb
cmp
mov
fs
fwait
out
pop
fcomps
xor
stos
mov
push
xor
out
ret
jge
and
mov
sahf
es
dec
out
jbe
je
mov
xchg
fidivl
test
jne
ljmp
push
pop
outsb
xchg
out
pop
add
lea
xchg
les
test
popf
or
movsb
mov
fprem
int3
and
movsl
cs
out
inc
stc
mov
enter
adc
icebp
ret
mov
stc
mov
inc
stos
mov
insb
mov
cmp
push
sahf
lock
lods
aaa
push
pop
add
bound
lods
fs
test
cs
stos
adc
inc
ja
cmpsl
aam
jle
pop
xchg
sbb
xchg
pop
imul
popa
sub
loopne
or
sub
repnz
dec
in
sub
cwtl
adc
lods
jnp
fstpl
cmp
add
mov
xor
dec
mulb
sarl
and
mov
cs
cli
dec
mov
jb
test
lods
dec
push
jp
cmp
and
push
jb
insl
ret
lcall
mov
notl
push
enter
pop
hlt
sbb
pop
aad
push
scas
rorb
ljmp
js
loope
loope
das
stos
bound
out
shlb
mov
xor
in
xchg
in
push
cmp
mov
xor
cmp
fadds
cmp
movsb
inc
popa
neg
xchg
scas
xchg
subb
loop
mov
imul
mov
stos
jmp
jge
andb
xor
cwtl
popl
lods
xchg
mov
outsb
jnp
jns
cwtl
incl
test
rclb
aas
hlt
jne
sub
mov
rclb
test
dec
movsb
mov
push
cwtl
cmp
sub
leave
sbb
mov
mov
gs
rclb
icebp
inc
or
icebp
jo
pop
sbb
insl
int
sahf
push
push
out
mov
mov
add
je
push
outsb
sub
sbb
dec
add
push
or
pop
sbb
pushf
jnp
mov
sahf
push
repz
js
rol
xchg
adc
test
xor
dec
insl
cmp
test
sub
jb
mov
push
outsb
adc
pop
push
mov
imul
icebp
mov
movsb
jecxz
mov
dec
sub
lahf
inc
inc
sub
lds
adc
out
mov
xlat
lret
or
orb
and
and
push
mov
mov
sub
dec
loop
pop
stc
push
jmp
psraw
jae
pop
mov
lock
fwait
scas
insb
dec
fucomip
or
arpl
inc
test
mov
push
sbb
hlt
pop
movsb
hlt
cld
sub
lahf
sbb
stos
push
pusha
mov
arpl
mov
xor
push
out
mov
cli
sub
mov
jns
cmpsw
rcr
sbb
inc
ja
divb
lds
inc
sub
movsb
ror
or
push
xchg
or
jge
jb
sub
enter
dec
xchg
cmc
pop
xchg
int3
mov
gs
sbb
fistpl
es
sahf
shll
push
cmpsl
jmp
adc
or
push
add
dec
lret
push
movsl
mov
cs
lods
pop
cmpsb
cmc
mov
or
dec
jb
adcl
sbb
sysret
addr16
outsl
test
xor
lea
rclb
repz
and
inc
fsubp
sub
aaa
out
outsl
and
cs
jns
mov
sbb
adc
and
je
subl
cmpl
sub
and
ljmp
icebp
xchg
and
dec
xchg
cmp
jne
scas
stos
mov
sbb
xorl
fwait
sahf
subl
xor
add
xchg
pop
nop
scas
inc
mov
add
lods
shrb
stos
inc
xor
jle
incb
bound
push
xor
lret
xor
xor
fs
inc
aaa
enter
jmp
sahf
mov
icebp
add
cmp
shl
dec
and
xchg
push
push
xchg
xchg
push
ss
cltd
add
mov
repnz
loope
mov
xchg
push
movsl
aad
and
mov
xchg
inc
ss
xchg
inc
mov
sub
cltd
sub
out
ljmp
jne
call
dec
cltd
xor
pop
sub
adc
dec
sbb
lahf
in
mov
jb
repz
sub
outsl
xor
jae
ret
add
mov
jae
mov
xor
addr16
repz
or
push
in
mov
or
shlb
outsb
push
mov
iret
pop
or
add
sub
pushf
pop
mov
clc
cs
xor
xor
push
nop
std
sub
or
out
push
mov
sbb
pop
scas
std
in
js
xor
popf
sub
int3
mov
cmc
push
enter
add
ret
xor
dec
popf
stos
sbb
or
fistpll
or
fists
pop
lcall
decb
add
xor
sbb
push
out
pop
xchg
jae
clc
call
test
xchg
ss
imulb
xor
jb
call
xor
push
adc
stc
mov
xor
pusha
clc
bound
and
and
mov
mov
mov
lret
sub
imul
push
mov
xorb
lods
popa
setg
test
mov
push
ret
scas
mov
cmpsl
sub
sbb
adc
sub
mov
mov
jge
xor
ljmp
inc
test
fdiv
movsl
cmp
sub
mov
or
dec
push
push
xor
dec
jge
dec
and
or
fsts
loop
or
mov
loopne
cmp
imulb
mov
inc
mov
sbb
bound
push
test
ja
js
stmxcsr
out
cld
push
mov
ss
mov
aaa
inc
mov
into
inc
je
mov
subb
pop
bound
or
mov
push
subb
inc
sub
xor
push
sbb
or
insl
sbb
xlat
mov
dec
sub
xchg
add
cs
jb
adc
lahf
sub
in
adcl
sbb
sub
in
jecxz
movsb
cmp
scas
push
push
movsb
or
sub
fs
andl
xchg
lock
mov
push
movsb
jmp
sbb
adc
mov
ss
adc
inc
vpsubw
mov
movsb
mov
mov
xor
mov
dec
notb
fdivs
bound
push
push
sub
and
fldenv
jo
xlat
push
pusha
adc
loope
jecxz
or
shrl
loope
lds
mov
sbb
add
call
loope
pop
pusha
xor
fsubrl
pop
xor
das
sti
mov
or
dec
jb
push
popa
push
stc
enter
fs
out
xor
inc
mov
mov
push
addb
hlt
cmpl
xchg
dec
out
imul
inc
sarb
add
sub
insb
mov
inc
xchg
cwtl
pop
cmp
repz
ret
idivl
das
pop
aad
and
int
mov
add
int3
pop
insl
outsb
xchg
xor
out
xor
jno
call
mov
fiaddl
jbe
adc
mov
ret
jbe
in
xchg
cmp
hlt
and
icebp
stos
pop
lret
adc
scas
insb
mov
pop
sbb
int3
test
push
lods
inc
cmpsl
stos
js
mov
ljmp
js
cld
and
push
mov
push
movsb
xor
cmp
sbb
sub
adc
and
xchg
inc
mov
mov
pop
sub
movsl
sbb
mov
icebp
imul
cmp
aaa
xor
std
adc
in
sbb
lock
add
mov
mov
jp
bound
sub
std
arpl
test
and
lcall
sub
mov
movsb
pusha
in
sbb
enter
cmpsl
ret
sub
in
mov
lcall
jb
imul
jnp
sti
outsl
xchg
jnp
ja
mov
movsb
jge
mov
mov
jp
sbb
mov
pushf
and
mov
scas
xor
sbb
addr16
outsb
xchg
mov
movsb
aas
and
sahf
adc
test
mov
lock
mov
cmpsl
ljmp
lds
cmp
repz
les
xchg
fmuls
test
sbb
push
pop
mov
out
lea
rorb
in
loope
and
lods
les
push
cmp
movsb
adc
push
insl
in
mov
mov
mov
and
out
sbb
aam
leave
jo
mov
xorl
lcall
int
jp
rcll
adc
aad
mov
xchg
mov
xchg
dec
jno
movsb
nop
pushf
sub
jmp
cmpl
rcr
push
push
repz
add
testb
dec
out
xchg
dec
fadds
inc
scas
or
pushf
insb
lods
test
loope
or
inc
cmpsl
insb
xchg
add
mov
fistps
jmp
sub
fadd
mov
repnz
ljmp
ret
movsb
scas
orl
push
pop
mov
pop
inc
mov
and
mov
mov
cs
sbb
adc
lret
push
js
sbb
out
gs
mov
into
pop
fcmovbe
or
and
fwait
add
mov
addb
mov
mov
mov
lods
pop
aad
out
or
sbb
ficoml
aaa
movsb
andb
mov
mov
ret
loope
test
lcall
and
xchg
fwait
rcl
cmp
and
test
loope
sbbl
sbb
mov
loope
ret
dec
add
adc
test
roll
sbb
rcrb
outsb
lods
mov
mov
movsb
add
out
fwait
jns
mov
stos
sti
mov
sahf
fldenv
push
insb
inc
mov
out
sub
repz
insb
hlt
add
add
leave
cmpsb
xor
lods
test
sub
dec
ja
int
sbb
movsl
sub
xor
outsl
push
cmp
mov
fdivr
cmc
add
inc
mov
test
ja
mov
push
repz
sub
xor
insl
out
jno
sbb
xor
cltd
fucomip
shl
dec
add
fisubl
pop
lods
ss
dec
bound
mov
movntps
xchg
clc
sub
movsb
push
out
mov
jo
leave
jbe
sub
enter
cmp
push
xchg
repz
lods
push
fidivrs
jle
dec
xchg
push
ja
push
insb
fwait
adc
mov
add
stc
addr16
js
xchg
es
call
jne
xor
sub
movsb
xor
jecxz
movsl
test
fs
in
cmp
dec
inc
orb
or
lods
pushf
sub
sub
lods
repz
lock
push
mov
mov
ret
jb
jae
mov
aam
imul
stc
jne
out
shlb
cmp
rep
stc
pop
adc
fwait
aad
jge
dec
mov
sarl
ljmp
call
mov
stos
mov
mov
jle
pop
hlt
leave
lods
mov
outsl
lods
je
das
xor
dec
decb
scas
lea
mov
iret
xchg
out
and
test
xchg
sub
in
fcomps
fbstp
shrb
jae
icebp
ljmp
mov
outsl
cmpsl
in
mov
shll
xchg
or
scas
cmpsb
sarl
jg
inc
cmpsb
dec
sbb
mov
jns
rclb
dec
cmp
adc
adc
sbbl
push
out
gs
nopl
fadds
daa
data16
imul
or
sub
pop
bound
aam
psllq
mov
mov
lock
cmp
pop
nop
insl
mov
in
sub
sbbl
mov
lret
sahf
shlb
sbb
mov
dec
mov
bound
jne
dec
mov
adc
lret
aam
pop
mov
jle
mov
inc
ret
adc
int
lret
dec
cld
and
mov
push
push
shrl
jmp
enter
xor
jne
sub
adc
repz
jl
jmp
sbb
dec
rorl
sub
stc
scas
pop
or
sub
call
sbb
sub
jb
cltd
mov
sub
outsb
mov
in
dec
lods
dec
push
fldt
mov
add
movsb
add
scas
cs
cmpsl
adc
sbb
leave
mov
movsb
pusha
aad
mov
int
adc
sbb
incl
xor
mov
mov
pop
sub
mov
aam
sub
mov
fsubrl
fcomps
sbb
mov
xor
rclb
cli
inc
inc
sub
jge
inc
loope
inc
and
jb
mov
les
add
xchg
push
or
sub
es
inc
cmpl
push
repnz
pop
dec
pop
jae
rcrb
push
movsb
out
xor
das
ss
pusha
mov
cmpsb
and
adc
jmp
fimull
sbb
pushf
rcll
fcmovnu
dec
sub
sub
push
sbb
fisttps
mov
pop
pop
mov
jecxz
jecxz
shl
mov
push
pop
dec
mov
xchg
popa
xchg
xchg
dec
sbb
sub
in
pop
stos
in
and
ror
subb
add
sbb
pop
nopl
add
pushf
cmp
mov
inc
cld
push
ret
xchg
add
or
out
cs
inc
ds
inc
stc
lret
lea
dec
fdivrs
enter
lcall
sbb
and
in
xchg
inc
mov
xchg
gs
outsb
fdivrs
shll
push
push
mov
stos
icebp
xor
decl
mov
movsb
jo
fcmove
and
imul
dec
inc
or
shlb
rorb
lods
inc
lods
and
js
xchg
outsl
xchg
or
je
repnz
mov
mov
pop
xor
xor
xor
movsb
popf
and
lock
cmp
dec
ja
cmp
int3
mov
xchg
ss
jmp
cmp
sbb
imul
xchg
xor
popf
dec
add
push
into
push
xchg
add
push
loope
lret
int
sub
inc
add
sub
decl
popf
ljmp
icebp
jge
pop
mov
jb
test
leave
sbb
xchg
addb
call
scas
repz
and
stos
push
dec
cmp
xchg
inc
mov
decl
hlt
adcb
mov
leave
js
sub
loop
movsl
sub
repz
iret
mov
fsubrs
icebp
adc
jp
mov
mov
jge
out
push
or
aas
or
and
enter
js
mov
movups
jb
cwtl
sbb
push
les
ret
jb
in
movb
mov
sub
mov
xchg
pop
mov
lret
sub
mov
out
push
xor
cmc
xchg
mov
lods
inc
in
pop
mov
jo
push
lea
mov
jnp
push
xchg
fstps
bound
roll
mov
repz
out
sub
pushf
add
out
xlat
inc
sub
je
jmp
mov
mov
jge
jecxz
cmc
test
scas
dec
sbb
cmp
into
ja
mov
mov
in
and
mov
fnstcw
jecxz
dec
or
pop
rcr
cli
add
jmp
in
movsl
or
lcall
fldl2t
cmpsb
cmp
sbb
lds
sub
int3
scas
pusha
inc
aas
test
mov
pushf
arpl
jmp
movsb
gs
outsb
orl
data16
xchg
mov
push
sub
cs
lock
push
fmulp
sahf
mov
pop
add
iret
mov
sub
lahf
dec
out
or
dec
xor
jecxz
xchg
inc
out
ljmp
loop
wbinvd
stos
rcl
push
or
push
and
idivl
rclb
orl
push
in
adc
pop
mov
dec
push
cmp
in
das
xor
ljmp
dec
outsl
dec
xchg
iret
fcmove
testl
les
ret
pop
cld
daa
aad
imul
cmpl
nop
aas
cmp
pop
mov
pusha
adc
testl
loop
enter
xorl
jns
movsl
jb
in
and
jle
add
sbb
scas
repz
dec
mov
xchg
cmp
push
ds
cmp
mov
test
stos
pop
add
in
shll
bt
sub
sub
fidivl
shll
inc
jge
mov
clc
fdivs
outsl
test
imul
test
pop
add
xor
mov
pop
push
jb
fcoml
mov
scas
pop
add
xor
mov
jg
movsb
dec
pop
dec
ja
out
das
mov
inc
into
push
sub
sub
loope
sbb
cmc
mov
mov
mov
mov
and
sahf
and
sti
enter
pop
cmp
cmp
je
and
dec
mov
mov
sub
xor
jb
lods
fisubs
push
mov
mov
pop
mov
arpl
lods
cld
xchg
mov
pop
movsb
aad
cwtl
push
jb
sub
mov
out
xor
mov
pop
mov
mov
jo
or
xchg
sub
out
add
push
out
movsb
pop
rcrl
lcall
dec
sbb
in
mov
sub
inc
xor
sbb
je
sbbl
pop
fiaddl
lcall
cmp
lcall
push
or
clc
push
xchg
xor
popf
dec
scas
es
sub
ret
lea
fsubs
or
push
mov
add
in
call
out
cmpsl
mov
xchg
push
lcall
shll
sahf
sbb
add
popa
out
setae
sub
mov
and
mov
sbb
jns
sub
mov
sti
sub
dec
pop
scas
andb
bound
testl
push
xchg
mov
adc
xchg
sub
cs
fxtract
push
mov
mov
pop
leave
cwtl
mov
push
jecxz
cltd
lock
ret
lret
mov
and
in
lcall
or
jmp
mov
subb
test
cld
jno
aaa
std
ret
sbb
jecxz
ret
outsb
push
ficoml
push
test
in
fldl
sub
aaa
test
andl
repz
mov
into
inc
mov
xchg
pop
out
sbb
movsb
add
cmc
cmp
out
leave
testl
out
adc
push
nop
outsl
mov
cli
inc
lret
pop
test
or
sarl
repnz
mov
mov
pop
out
repz
mov
das
lcall
imull
test
lahf
int3
pusha
sub
ret
dec
scas
cli
cld
dec
mov
inc
mov
nop
push
cmpsb
pop
inc
in
jnp
mov
popa
ffree
data16
rorb
imul
data16
lret
iret
setge
pop
push
scas
dec
push
loopne
adc
fnsave
lods
add
imulb
cmp
fcoml
jge
int
movsb
xor
push
sub
int
and
div
pop
or
xchg
push
sub
insl
add
or
pop
jnp
lcall
mov
divb
outsl
outsb
dec
or
sbb
push
in
mov
out
xor
dec
dec
imul
cwtl
sub
leave
outsb
ret
leave
cmpl
cmp
cmpsl
hlt
repz
mov
cmp
jmp
movsb
pop
fidivs
repnz
mov
jo
xor
lods
add
mov
and
daa
loope
mov
xor
inc
les
cs
pop
sub
mov
call
jb
addr16
iret
push
and
js
dec
mov
out
push
jl
ljmp
aam
cwtl
mov
insl
xchg
push
or
stos
mov
hlt
cmp
push
and
or
push
movl
lcall
pop
adc
je
mov
pop
jo
es
mov
or
xchg
fcmovnbe
jne
out
cmpsb
rorl
cld
xchg
mov
sbb
imul
xor
jmp
aaa
mov
cld
notl
add
lods
push
dec
pop
iret
or
xlat
push
push
pop
addr16
or
jnp
les
add
aam
jnp
outsb
jbe
and
mov
xor
push
cmp
mov
orb
push
or
repz
xchg
sbb
imul
popf
push
mov
popa
xchg
ljmp
mov
addb
and
and
shrl
inc
movsb
fwait
lods
fsubs
out
gs
pop
mov
dec
notl
scas
arpl
sbb
xor
push
mov
lods
mov
in
mov
nop
jne
sbb
into
mov
loope
stos
lea
test
pop
mov
cli
inc
cmp
pop
cs
or
mov
outsb
add
std
xchg
pop
cmp
jmp
lods
lret
enter
push
dec
outsl
pop
mov
ja
rcll
js
sbb
inc
jo
fs
mov
lds
cld
xchg
aaa
das
xchg
xor
fistps
repz
or
imul
in
cmp
cmp
movsl
pop
xchg
scas
dec
mov
js
dec
fsubl
scas
inc
repnz
scas
inc
push
cmp
shll
ret
loop
mov
mov
cmp
ljmp
pop
lods
push
pusha
fcompl
add
mov
cmp
or
aaa
sbb
enter
das
jmp
mov
cmpl
sbb
mov
mov
sahf
sbb
jp
repnz
repz
cmpsb
shlb
stc
out
stos
jns
add
inc
ss
lods
adc
push
imul
pop
fidivl
roll
jbe
aaa
fwait
test
cwtl
test
sbb
jo
or
imul
rcrb
sub
xchg
cs
and
pop
es
sbb
scas
repz
iret
ret
cmpsl
inc
stos
sbb
xchg
push
mov
mov
push
fwait
or
pop
sub
mov
jb
scas
sti
fbld
clc
push
sbb
aam
mov
cmp
inc
frstor
shlb
into
push
mov
push
lcall
negb
push
or
and
xchg
shrl
dec
ret
inc
ret
sbb
sub
sarb
ss
cmovp
popf
out
fdiv
fadd
dec
int
pop
or
adcl
sbb
stos
cmp
sbb
mov
test
jge
add
enter
mov
lahf
scas
lods
jae
xchg
call
repz
dec
fldl2t
test
add
loopne
loope
mov
in
xlat
lret
lds
es
pop
shll
xchg
sti
mov
imull
cmp
int
std
das
loope
cs
mov
bound
movsb
sbb
mov
in
aam
je
dec
mov
mov
inc
and
jp
repz
das
mov
pop
pusha
stos
imul
mov
push
aas
mov
jb
mov
mov
iret
jge
imul
mov
mov
jns
ss
and
imul
sar
enter
fwait
fwait
and
add
push
imul
xor
sahf
js
push
hlt
in
aam
mov
xlat
mov
xchg
dec
jae
mov
lahf
adc
mov
and
mov
in
pop
mov
loopne
clc
jecxz
adc
xchg
popa
ret
or
jb
jg
aad
jp
pop
gs
mov
push
and
jno
dec
into
cmp
shll
insl
repz
lods
or
pusha
imul
pop
repnz
jb
inc
mov
icebp
pop
mov
popa
adcb
sub
adc
clc
pop
pusha
out
or
adc
mov
sub
imul
es
mov
xor
xorl
scas
movsb
popf
push
in
stos
push
xor
les
out
dec
fldt
xlat
jbe
jno
jb
push
lods
ds
and
insb
xchg
mov
add
and
dec
fsub
pop
sbb
sub
adc
mov
or
dec
adc
jge
movsb
jns
sarl
inc
out
sub
stos
out
pop
arpl
jecxz
pop
test
push
jns
ret
sub
sub
mov
in
rcll
sbb
cli
pop
das
repnz
fidivs
out
adc
jno
xchg
out
adc
lcall
cmp
push
sarl
sub
sub
insb
ja
dec
dec
mov
pop
xlat
or
push
popl
cmpsb
mov
test
enter
mov
ret
out
sub
lods
sbbl
or
mov
ret
into
add
sub
stos
push
repz
adc
pop
rorb
pop
insl
ja
or
xchg
ret
sbb
hlt
nop
push
mov
js
cmp
sub
outsl
mov
scas
movsb
test
in
xchg
xchg
sub
iret
aaa
add
push
ror
dec
les
int3
xchg
push
loopne
cmc
xchg
dec
movsb
out
arpl
ja
mov
dec
cmp
mov
push
insl
mov
dec
testb
jno
shll
sbb
addl
push
mov
pop
mov
xor
xor
xchg
push
sub
ljmp
jne
lods
inc
push
arpl
cmp
add
sub
pop
push
jmp
and
int
mov
out
scas
add
sub
jb
test
xchg
out
dec
or
lods
adcl
lret
xor
sbb
and
mov
jb
negl
cmp
push
fldenv
aas
xchg
lret
sbbb
movsb
xchg
out
bound
repz
sbb
mov
xlat
cmp
pusha
repz
push
xchg
leave
or
ss
mov
sahf
pop
jge
and
xchg
sub
fbld
dec
shlb
push
cmpsl
js
sbbb
cmp
stos
test
xlat
arpl
aam
stc
mov
jo
push
mov
pop
lcall
movsl
subl
ret
lea
loope
push
xchg
cmp
inc
pop
ret
jge
test
in
test
and
fistpll
hlt
mov
push
xor
xor
je
shl
movq
fmull
mov
insb
jecxz
loopne
pop
mov
jo
imul
outsb
jbe
xor
lea
ljmp
test
outsb
xorl
inc
enter
shld
inc
testl
push
sub
mov
fimull
sbb
sarb
imul
out
hlt
add
mov
xchg
sub
cmp
push
js
subb
hlt
sbb
mov
xchg
ss
inc
mov
scas
pop
sarl
ret
sbb
adc
inc
ljmp
xchg
scas
add
imul
pusha
imul
xchg
mov
mov
dec
test
cmc
add
jne
lea
fimull
push
fldcw
mov
push
iret
lods
mov
inc
movsb
sahf
xchg
lods
pop
xor
mov
cmp
sub
mov
int3
fidivl
adc
mov
movl
mov
ja
lods
inc
jb
sbb
jo
lock
xchg
and
sub
sub
dec
pop
cs
pusha
mov
cmp
in
sub
xchg
mov
jns
outsb
push
add
adc
hlt
test
subb
das
pushf
call
cmp
inc
out
sbb
xor
sbb
xchg
xchg
sub
xchg
mov
jae
lods
inc
push
mov
pop
add
filds
out
lret
mov
ret
mov
dec
inc
cmpsb
push
jno
pop
bound
and
cmp
shlb
sbbb
mov
jnp
mov
mov
cmp
pushf
out
mov
fmuls
push
enter
cmp
in
scas
mov
and
or
add
out
sbb
dec
shl
or
es
sbbl
or
outsl
hlt
adc
and
add
shll
fcomi
arpl
mov
adc
das
ljmp
dec
popf
iret
add
add
test
mov
cmp
push
ror
cwtl
xchg
sarl
rol
js
outsl
and
ss
insl
outsb
incl
mov
data16
mov
pop
aam
cld
push
push
jg
sub
jne
mov
aam
xor
pop
aad
shlb
mov
loope
sbb
mov
test
mov
mov
out
in
dec
movsb
out
push
jne
pushf
pop
mov
sub
in
sub
ljmp
and
cld
fidivl
jne
xor
pusha
ja
aaa
imul
mov
push
sub
lea
and
scas
loope
mov
test
out
xchg
xchg
sub
stos
popf
sarl
add
sbb
stos
decb
push
popf
and
jns
jmp
das
sub
mov
icebp
dec
dec
mov
jg
sub
lret
mov
aaa
in
xchg
into
push
push
and
loop
scas
in
mov
cld
bswap
jns
mov
mov
pop
test
icebp
sahf
mov
stos
popa
mov
test
mov
fildl
mov
cli
add
sub
add
push
in
das
dec
ret
add
push
andb
lods
imul
jbe
jne
dec
pusha
mov
and
loopne
ret
sub
shll
ja
jno
imul
xor
pmulhuw
std
jne
insl
test
enter
lahf
sarb
addr16
sub
xchg
data16
mov
push
data16
pop
js
jno
push
sti
add
inc
insl
stos
mov
jno
daa
mov
mov
cs
inc
mov
pop
cmp
cmp
mov
mov
cmp
pop
bound
mov
adc
orl
mov
daa
jne
inc
es
fimuls
es
sbbb
xor
mov
nop
ja
sahf
fmulp
or
mov
scas
xchg
imul
bound
lcall
xor
cs
test
sub
sub
xor
fcmove
mov
test
xchg
sbb
add
or
lcall
xor
xorl
in
xchg
bound
test
dec
rcr
ljmp
sub
sbb
or
sbb
lods
and
dec
bound
and
add
sub
adc
mov
fisubl
push
repnz
pop
iret
rcll
ret
mov
out
adc
bound
inc
sbb
data16
iret
aad
sbb
fimuls
push
std
repz
scas
and
pop
mov
clc
lret
lock
and
movsl
insl
jb
or
je
adc
adc
das
xchg
or
jge
mov
arpl
sbb
inc
mov
testb
sub
push
xchg
push
xchg
dec
enter
sub
pusha
inc
mov
and
adc
push
loopne
div
into
ss
lods
mov
ljmp
ret
xor
pop
pop
sub
xor
push
fildl
out
loop
call
adc
mov
mov
mov
push
sub
sbb
aas
bnd
in
enter
cld
cmp
jns
stos
out
enter
mov
or
mov
insb
jno
sub
adc
mov
movsl
dec
push
rclb
cmpsl
gs
movsb
sub
lods
add
call
lret
cmp
dec
out
mov
test
mov
mov
xchg
dec
adc
and
call
cs
sub
cmp
dec
pop
scas
ljmp
fisubrl
mov
imul
inc
ficoms
push
cmpsl
pop
insl
ss
pop
daa
lcall
push
mov
insl
add
dec
cld
lods
cli
sbb
cmp
repnz
int
mov
mov
hlt
inc
nop
push
lcall
push
cmp
pop
mov
push
inc
adc
jp
out
sub
out
xchg
or
mov
xchg
mov
sahf
add
jns
pop
xor
sbb
shr
inc
push
cwtl
sub
add
fidivl
cli
mov
push
shll
sbb
push
cs
pop
jl
push
movsb
add
jmp
scas
or
push
mov
enter
aas
jl
lods
lea
out
sub
jno
push
push
cmc
mov
insl
fcomp
mov
add
inc
cmpsl
iret
pop
pop
jp
daa
jp
mov
test
rorl
mov
push
lods
add
and
pop
lds
in
jno
mov
inc
fcoms
pop
pop
mov
fidivs
push
loopne
mov
jae
sahf
out
shr
cld
shrl
inc
rcrl
add
lret
inc
add
sub
lcall
lods
push
sbb
pop
mov
fcoms
xchg
iret
jmp
dec
add
out
stc
fs
cmp
push
fcoml
movsb
push
out
mov
mov
sti
inc
inc
subl
mov
lcall
or
ljmp
mov
pusha
lret
out
and
fdivl
mov
divb
dec
add
pop
leave
cmp
pop
outsl
inc
push
out
mov
and
stos
rcr
scas
rcl
loope
insb
inc
inc
mov
fwait
aam
jb
mov
adc
test
out
jb
mov
test
ret
add
outsl
cmpsb
or
mov
cmp
loop
sahf
adc
push
mov
xchg
outsb
jge
fnstcw
mov
movsb
loop
pop
jno
inc
inc
mov
lods
cmpsl
loop
mov
icebp
push
sub
ret
mov
jecxz
test
loop
test
pop
lods
adcb
stos
xchg
std
out
mov
shl
mov
dec
flds
cltd
mov
lret
cmp
lcall
push
shrb
fld
sar
pop
outsl
jnp
pop
mov
mov
sbb
cmc
in
mov
jl
adc
fbstp
movsb
outsb
cwtl
push
pushw
rorl
pop
cmp
sub
movsb
mov
addr16
clc
pop
dec
mov
repz
shl
rol
cmpb
das
inc
push
xorb
pusha
and
addr16
sbb
inc
stc
adc
mov
inc
mov
arpl
dec
test
loope
dec
jnp
pushw
pop
subb
mov
out
xor
jne
push
jo
leave
jecxz
enter
and
jle
fdivs
xchg
mov
into
fmuls
jno
je
inc
adc
push
addl
adc
xor
cmp
ljmp
pop
inc
pop
sbb
add
xor
add
xchg
ds
cmp
xor
pop
push
in
mov
lock
pop
xchg
pop
mov
icebp
movsb
jne
inc
roll
inc
mov
sbb
adc
and
pop
fucomi
mov
sbb
xor
nop
stos
imul
loope
ja
mov
push
movsb
stc
popa
xor
ljmp
xor
xor
push
lea
bound
sub
fidivs
adc
sbb
add
push
test
xlat
sbb
out
sar
pushf
mov
fldt
out
shrb
mov
jp
sbbb
scas
adc
std
jb
das
fisubrs
shr
add
and
inc
rdpmc
mov
xchg
fidivl
sti
jo
out
lcall
mov
xchg
jmp
mov
xlat
mov
loopne
arpl
jnp
call
out
xchg
stos
mov
sub
fcmovne
sbb
into
loope
dec
xchg
mov
and
rcll
js
pop
sub
cwtl
sub
ss
jg
frstor
out
shlb
sbbb
jbe
stos
xchg
mov
icebp
out
out
bound
add
sub
and
sub
add
push
mov
or
push
add
test
push
mov
adc
mov
stc
cmc
das
shlb
movsb
or
xor
into
out
adc
test
dec
push
mov
pusha
imulb
into
cs
pop
cmp
insb
sub
lock
xchg
pop
stos
add
and
rorl
sbb
mov
push
mov
add
push
mov
push
aam
mov
test
push
imul
and
cmp
gs
cmpsl
xor
mov
mov
push
push
jnp
cmp
sub
xorb
inc
int
testl
xchg
sbb
and
jae
mov
sub
loop
push
sub
jnp
push
mov
jmp
adc
nop
fsub
out
mov
pop
and
mov
dec
mov
cmp
ret
addr16
mov
xor
or
pusha
lcall
and
mov
add
loope
into
out
dec
ja
sbb
xor
shrb
scas
js
mov
and
or
cmp
test
rclb
aas
lds
popa
in
ret
in
pusha
adcl
fildll
cli
pushf
pop
repnz
jl
mov
fisttps
jb
cmp
enter
xchg
xor
inc
and
sub
mov
and
aad
nop
pushf
mov
xchg
ja
mov
sub
fs
in
lret
test
add
cmp
pop
dec
add
loopne
xor
push
adc
lcall
into
dec
sub
adcl
mov
jae
ret
fistpl
into
xor
repnz
xchg
les
add
sub
and
je
or
inc
test
stos
sbb
push
lods
add
js
movsb
xor
pop
adc
mov
leave
pop
jle
and
fstps
jno
and
dec
imul
sbb
sub
das
movsb
sub
sbb
mov
and
out
mov
cmpsl
addb
scas
xchg
jp
push
imul
pop
std
lods
mov
sbb
jno
inc
ljmp
bound
and
imul
cmp
sbb
into
cmc
inc
inc
jne
pop
sub
out
repnz
in
pop
push
push
mov
hlt
call
sub
pop
mov
jns
mov
jnp
xchg
sti
sub
pop
lds
je
fdivl
es
dec
add
mov
popf
push
jmp
lock
xchg
hlt
mov
or
enter
ret
and
xchg
cmp
ljmp
icebp
lcall
adc
shrb
xchg
mov
jae
mov
push
jno
dec
imul
pop
fdivs
sub
mov
testl
add
mov
imul
movsb
out
dec
leave
dec
lahf
mov
push
pop
sbb
and
and
push
sub
push
cmp
js
sbb
aaa
dec
cwtl
jae
das
add
mov
jo
lea
leave
out
adc
push
cs
push
fsts
mov
inc
lock
lea
pop
inc
and
repz
sbb
pop
leave
xchg
xchg
mov
push
test
dec
push
mov
inc
cmp
dec
xlat
out
xchg
cmp
sub
sbb
ljmp
lods
dec
and
pop
sub
xor
and
sub
repz
addr16
mov
lcall
sti
xor
orl
hlt
testb
aaa
jnp
cmp
mov
jno
mov
popf
unpckhps
jecxz
push
call
or
movsl
ret
jl
lock
popf
and
das
mov
inc
pop
and
je
xchg
mov
cmp
mov
lods
arpl
fs
in
das
repz
imul
ret
movsb
pop
push
add
or
xor
sbb
movsl
mov
lcall
insl
jb
mov
je
les
jno
stc
out
jns
jbe
mov
sti
jne
pop
inc
xchg
arpl
xchg
aam
mov
jb
pop
push
mov
dec
fwait
stos
aam
dec
into
dec
out
idivb
mov
mov
sub
mov
lcall
ret
fcomp
and
mov
mov
or
outsb
pop
orl
or
cltd
movsl
shll
aas
rorb
jae
sub
xchg
sbb
outsb
inc
sub
push
movsb
das
aaa
imul
int3
lea
pushf
and
enter
mov
popl
lds
scas
mov
sbb
cmpsl
mov
add
inc
cmpsl
pop
fsub
push
aas
inc
jno
and
mov
sti
mov
push
movsb
es
fnstcw
in
push
loope
mov
outsl
xchg
inc
aad
and
stos
xchg
push
xor
pop
push
out
rcrl
mov
push
mov
mov
push
push
jecxz
mov
cmovle
xor
outsb
mov
cli
aam
push
shlb
test
pop
pop
push
adc
jns
pop
adc
sahf
fidivrs
out
adc
jge
andb
adc
add
dec
jns
lcall
adc
jno
fildll
iret
mov
inc
test
mov
mov
push
cmp
sub
mov
addr16
push
inc
mov
test
push
push
fisttps
enter
cs
or
add
sub
and
mov
enter
xor
xor
aaa
sub
loope
iret
jnp
cmp
pop
cs
pop
mov
shlb
adc
lods
xor
iret
dec
mov
jae
sbb
mov
ljmp
or
into
je,pt
lds
pushf
lret
mov
repz
and
stos
mov
dec
cld
cs
add
adc
in
out
and
xchg
xchg
shll
arpl
sbb
fsubrl
outsb
das
jnp
scas
movsb
int
call
jae
jl
lcall
fdivl
pop
sub
mov
aam
call
mov
jl
inc
fsubl
pusha
push
adc
mov
test
and
testl
ljmp
lods
fcoms
sarl
stc
jbe
loope
rcrb
cmpsb
add
dec
loope
cmpsb
pop
push
mov
bound
xor
jmp
dec
cs
scas
pusha
sbb
lea
mov
add
pop
jne
call
sbb
adc
jge
into
jne
aam
sahf
dec
jmp
pop
lods
cmp
icebp
cmc
jae
lds
pusha
popa
pop
arpl
mov
jp
xor
into
inc
xchg
call
push
icebp
inc
insl
pushf
mov
sbb
sub
cmp
stos
mov
movsb
xor
addl
lods
out
mov
movd
mov
mov
mov
xchg
cld
test
mov
xchg
cmc
mov
push
and
inc
adc
sub
dec
mov
ljmp
dec
xor
jae
sub
push
jge
xor
ljmp
inc
loope
ret
sbb
scas
mov
adc
and
fwait
loope
insl
arpl
dec
xchg
repz
das
mov
mov
mov
insl
xchg
ds
incl
jo
xchg
xchg
les
jnp
dec
pop
andb
mov
popf
lret
jnp
cmp
rorl
xlat
ret
cmpsl
dec
mov
sbb
push
aaa
lea
sub
aaa
jno
in
fisubrs
outsb
icebp
adc
shlb
or
mov
fcmovne
insb
xchg
lea
push
enter
test
mov
repz
sub
nop
aas
jno
insb
inc
sbb
incb
xchg
test
cld
jmp
push
repz
mov
add
ds
dec
and
mov
subl
mov
xchg
sub
sbb
add
mov
jbe
sub
xor
cmpsl
jno
ss
pop
in
movsb
mov
xchg
js
sub
xor
xchg
std
mulb
repnz
scas
pop
and
mov
xchg
jp
gs
sti
ret
and
push
out
arpl
mov
mov
bound
movsb
inc
and
stc
dec
push
inc
mov
lds
cmpsb
fstps
xchg
mov
mov
xchg
push
pop
inc
int3
jno
ret
sub
scas
fimull
outsb
icebp
les
mov
stos
inc
jb
mov
dec
pusha
outsb
pop
xchg
ja
mov
push
dec
pop
leave
jge
divl
inc
and
mov
cltd
bound
daa
iret
int3
pop
mov
or
iret
imul
cmp
mov
sahf
bound
mull
out
mov
pop
rep
adc
lods
int
and
daa
clts
outsb
ja
repnz
xorb
push
mov
movsl
push
add
into
and
loopne
fistps
xchg
arpl
lahf
mov
xchg
xlat
ffreep
push
cmp
negb
addb
jno
adc
scas
push
pusha
sub
cmpsl
adc
and
pusha
movsb
adc
inc
imul
pushf
pop
jb
movsb
fidivl
mov
ret
mov
scas
sub
lcall
es
test
jae
scas
shll
jp
cs
push
rcrb
sbb
bound
mov
mov
sub
pop
sbb
iret
jmp
pop
mov
push
call
pop
mov
push
add
jns
cmp
fcoms
xchg
addr16
bound
adc
repz
or
fwait
in
xor
lcall
mov
jl
lcall
mov
adc
int3
mov
cmp
pop
jnp
xlat
jge
add
hlt
mov
and
xchg
fdivr
shll
hlt
mov
adc
push
jb
mov
xor
fsubs
inc
out
hlt
adc
or
push
mov
inc
cmp
shl
aas
jg
sub
sti
pushl
mov
mov
orl
mov
pop
push
out
xlat
dec
adc
inc
push
daa
sub
dec
movsb
push
orb
jae
lods
xor
cmpb
push
or
sbbl
jb
jno
push
ja
jb
ss
ret
and
in
lds
insl
inc
sub
in
ret
cs
movsb
loopne
push
pop
dec
xlat
mov
les
push
adc
ds
fisttpll
jne
inc
mov
rcrb
cmp
ljmp
data16
xor
movsb
pop
in
mov
mov
sbb
into
rorl
outsb
mov
push
fistpll
and
popa
fs
mov
sarl
mov
imul
test
imul
adc
int3
push
lods
xchg
jb
dec
mov
add
mov
aad
push
add
and
xchg
and
xor
scas
andb
mov
push
nop
insb
add
outsl
movsb
in
inc
mov
shr
mov
adc
fdiv
out
cltd
popf
shr
rorl
dec
data16
andb
enter
test
pushf
sub
sub
pop
jecxz
pop
jbe
and
jbe
inc
dec
not
movsb
pop
lods
hlt
or
pusha
ljmp
bound
add
xor
daa
mov
dec
xchg
cli
movsl
pushf
jle
ret
and
subb
insl
call
add
mov
xchg
cs
xchg
pop
sub
jb
push
xchg
sbb
sbb
and
lods
push
dec
leave
or
outsb
bound
movsb
enter
in
xchg
ret
or
pop
sub
pop
bound
push
inc
adcl
mov
daa
mov
and
and
mov
mov
xchg
inc
dec
adc
roll
add
loopne
fisubrl
or
sbb
lret
ret
jge
push
push
sub
or
js
ljmp
es
lcall
inc
cmpsb
idivb
inc
iret
pop
jbe
xor
scas
scas
sarl
and
ret
int3
rep
lods
dec
pop
push
stos
push
repnz
mov
imul
fildll
ret
pushf
mov
dec
mov
js
jne
inc
or
pop
ret
push
push
ljmp
clc
cmc
cmp
mov
mov
lods
inc
mov
mov
movsb
gs
shrl
push
sbb
sahf
pop
lea
dec
out
cld
mov
mov
jge
sub
sub
lret
mov
xchg
andb
data16
imul
sub
test
push
scas
xor
mov
cmp
and
pushf
add
loopne
inc
sub
pop
adc
js
jge
fmull
push
jge
push
and
sub
cld
popf
adc
bound
lods
dec
mov
mov
push
xlat
loop
sbbb
sbb
lods
xchg
fdivr
xchg
andb
sub
fs
push
mov
sub
cmp
mov
mov
cmp
jo
adc
sub
mov
and
mov
fincstp
fwait
enter
push
fbstp
fsubl
mov
call
inc
sub
imul
fadds
fdivrl
unpcklps
xchg
cs
repnz
sti
insb
xchg
xchg
adc
lods
lahf
jnp
cmpsb
sahf
stc
sbbb
cmp
cmpsl
cmpsl
dec
lcall
in
jecxz
es
mov
inc
js
sub
insb
sub
jo
add
or
in
jge
and
mov
sub
sahf
loope
test
mov
insl
mov
inc
insb
insl
cmp
enter
shll
mov
xchg
inc
out
inc
mov
jp
xor
pop
loopne
ret
and
push
filds
jbe
fwait
mov
outsb
adc
inc
inc
pop
pushf
in
scas
loope
and
dec
inc
ss
sahf
stos
mov
xchg
cltd
addr16
push
fstpl
jmp
xchg
cmp
xchg
push
jecxz,pn
out
fbld
push
insl
inc
addl
xor
mov
stos
cmpsb
sub
sub
addr16
into
fldcw
loope
out
cld
lret
outsl
cmp
dec
adcl
push
ss
mov
sbb
sbb
or
mov
mov
sbb
sbb
lcall
sbb
test
aam
mov
mov
fisubs
add
outsl
adc
or
add
xchg
mov
stos
les
loop
inc
sahf
mov
mov
stos
shlw
rdpmc
iretw
inc
rcrb
rolb
sahf
jnp
imul
dec
fdivr
sbb
fcmovnu
mov
pop
aas
sbb
push
lods
inc
fsubs
stc
and
and
out
iret
adc
pop
cmp
mov
outsb
cmp
push
in
mov
mov
jg
xor
mov
lods
or
xlat
mov
dec
bound
pop
xchg
xor
jb
add
inc
push
xchg
dec
ficompl
bound
sahf
fisubs
in
cld
icebp
sbb
jo
daa
lods
sub
lds
sbb
das
xor
pushf
xchg
jae
pop
sbb
dec
mov
jecxz
lcall
lret
pop
and
lods
xor
lahf
xchg
into
nop
add
jg
outsb
call
adcl
addr16
pop
xchg
dec
pop
add
jb
mov
push
jnp
cmp
stos
lcall
idivb
in
cmp
in
push
jno
loop
pusha
sbb
sub
sbb
movsb
setae
pop
mov
popf
xchg
mov
sbb
in
and
xchg
movsb
jge
lret
or
xor
imul
inc
fwait
clc
add
jne
andb
add
jae
fisttps
in
jno
in
pop
jb
xor
sahf
stc
insl
loop
mov
push
xchg
cmpl
out
insl
outsl
out
sub
xchg
xchg
inc
repz
test
mov
test
jo
loope
jo
lret
xchg
lods
aam
mov
insb
inc
adc
rcrl
push
dec
fsts
and
aam
cmpsl
dec
movsb
mov
mov
daa
push
jb
fadds
lret
outsb
cli
mov
sbb
jb
adc
inc
jno
dec
ret
je
out
mov
sbb
mov
int
pop
daa
lret
insl
or
inc
int
out
aam
add
fwait
jno
aad
ljmp
enter
jmp
movb
push
sbb
mov
mov
push
add
inc
pusha
test
out
pop
inc
add
pmulhuw
cltd
and
fdivs
cmp
int3
xchg
push
loopne
cmp
jb
xchg
inc
sub
add
cmpb
mov
jns
add
iret
imul
and
mov
or
fwait
out
or
mov
xchg
and
jne
fdivrs
in
cltd
adc
pusha
xchg
movsb
repnz
adc
orb
int
jbe
adc
popf
sbb
xchg
inc
xchg
inc
rcrl
sub
jb
ljmp
js
xchg
xor
ret
sbb
sub
mov
cmp
push
clc
adc
sti
mov
cli
push
dec
scas
stos
call
dec
adc
dec
addb
lock
pushf
bound
mov
sahf
inc
ss
inc
ret
jno
cmp
enter
and
shll
arpl
inc
stc
ret
jp
xchg
xor
mov
insb
xchg
loopne
lea
add
dec
mov
xchg
enter
ljmp
cmp
mov
adc
leave
xchg
mov
lods
insl
mov
push
mov
stos
outsb
xor
aam
push
mov
or
popa
test
out
mov
ljmp
data16
aad
cmp
xchg
outsb
repz
cmc
aad
repz
icebp
cmp
outsl
repnz
xor
cmc
push
dec
or
jecxz
sub
lods
xchg
and
pop
je
push
call
mov
cld
cmpsl
dec
mov
stc
push
decb
mov
dec
aaa
or
mov
insl
cli
jmp
test
cmp
stos
inc
sub
mov
push
or
dec
inc
mov
xchg
jo
jl
and
test
scas
dec
mov
cmpsl
rclb
xchg
xor
cmp
nop
int
in
mov
ret
mov
xchg
pop
pop
push
adc
mov
outsl
lods
inc
mul
jns
push
push
orb
mov
pusha
pop
mov
push
add
fadd
jae
stos
mov
ljmp
jnp
fimuls
into
mov
arpl
add
push
cmp
lcall
lods
repnz
inc
and
add
js
add
cwtl
orl
dec
js
push
jnp
ret
inc
xchg
sub
jno
pop
cltd
dec
xchg
in
popf
int3
add
sbb
scas
add
stc
aas
vcvttps2dq
inc
push
mov
jne
jmp
sbb
sti
cmp
pop
lods
sbb
mov
jno
sub
fldcw
mov
repz
fwait
adc
mov
xchg
mov
lcall
lods
in
sub
addb
std
add
sbbb
or
fdivs
pop
mov
push
testb
out
stos
xor
xchg
jo
xchg
adc
cmpsb
insb
add
adc
fsubl
push
cmc
inc
data16
inc
movsb
mov
add
lods
xchg
call
push
aaa
add
and
repnz
or
hlt
xor
sub
and
sbb
jbe
dec
lcall
xchg
push
scas
movsb
mov
adc
mov
sbb
ds
shlb
sub
leave
lods
cmp
adcl
mov
cmpsl
mov
ficoms
jae
push
int3
cmc
cmpsb
in
bound
pop
dec
push
out
lea
cmpl
aam
mov
dec
jno
adc
ss
hlt
inc
nop
mov
jb
in
lcall
cmp
mov
add
outsl
pop
jnp
mov
mov
inc
xor
sbb
and
pop
jmp
icebp
adc
xor
jnp
cmp
jp
adc
cmpsb
mov
push
or
mov
stc
fisttpl
int
xor
adc
sbb
out
lds
ds
sub
xorb
aaa
movsb
stos
in
cltd
testl
or
sub
cli
dec
lret
jo
dec
fdiv
mov
mov
imul
mov
adc
jb
gs
inc
repnz
out
aaa
jne
jp
add
jae
jecxz
pop
and
stos
cmc
aam
dec
cs
rorl
sbb
jge
adc
or
sarb
imul
inc
out
mov
push
shll
dec
mov
mov
pop
ucomiss
loope
out
sbb
mov
inc
mov
int
lret
movsb
cltd
out
mov
cli
fcompl
adc
shll
push
sbb
movsb
aam
push
pusha
mov
pushf
xor
or
insb
xchg
mov
mov
cmpsb
cltd
outsl
shll
mov
push
push
movsb
jmp
pop
pop
rol
jo
pop
push
inc
test
cld
daa
sbb
pop
roll
xchg
in
loop
pop
mov
dec
cmp
sbb
sti
lea
mov
imul
stc
in
lock
lds
inc
mov
fisubl
popf
mov
cmp
fsubs
jnp,pt
cltd
stc
lcall
add
pusha
inc
pop
cmpsl
cmc
orb
mov
dec
jnp
repnz
sub
jb
mov
test
jbe
in
lret
lea
jb
rolb
es
dec
mov
mov
lods
mov
xchg
xlat
sbb
insl
lcall
jge
stc
lahf
sbbl
rorb
mov
mov
test
jge
enter
inc
mov
cmp
inc
movsb
iret
mov
mov
outsl
mov
ljmp
and
lahf
push
cmpsb
inc
scas
clc
sbb
mov
add
ret
fyl2x
mov
sbb
mov
out
push
sbb
jg
in
sbb
stc
jnp
mov
in
call
sbb
movlps
push
imul
clc
test
fcomi
sbb
dec
jae
stc
cmp
mov
pop
out
fwait
jmp
cmc
and
loop
fcoms
add
inc
sub
mov
ret
stos
inc
stos
sbb
pop
jns
mov
in
cmpsl
or
lods
xchg
call
rcll
cmp
out
jbe
sbb
dec
stos
scas
or
sahf
jno
pop
popf
aad
out
mov
mov
aam
lahf
leave
pop
out
repz
rcrb
adc
das
jae
nop
mov
testb
cs
add
pusha
mov
arpl
or
push
sahf
sub
adc
fwait
and
movsb
decl
stos
mov
mulb
cmpsl
push
or
movsb
rclb
icebp
xlat
sub
pusha
cwtl
sti
jns
cmp
sub
xor
mov
scas
into
mov
repnz
mov
mov
mov
pop
mov
stos
jge
pop
ljmp
cltd
mov
test
lods
push
xchg
sbb
pop
xchg
pop
or
inc
jo
je
mov
mov
shrb
xor
push
push
lods
bound
test
fsubrl
sahf
test
jb
scas
cmc
addr16
push
inc
mov
mov
addr16
mov
ficompl
and
int3
jb
inc
jns
ja
jae
pop
pop
movsb
lret
jae
jecxz
fistps
jo
clc
push
mov
cmp
ss
arpl
or
clc
and
mov
and
add
insl
adc
mov
cld
fbld
mov
lods
loopw
xchg
repnz
in
cmp
subb
and
je
xchg
xor
je
mov
pop
stos
xchg
hlt
jge
addr16
idivl
mov
verr
wrmsr
jbe
push
adc
mov
cmc
hlt
mov
sbb
lret
dec
incl
adc
inc
int
subl
popf
jmp
loope
mull
mov
idivl
outsl
and
shlb
jle
shrl
stos
test
mov
or
jo
imul
stos
cli
mov
xchg
les
ret
mov
inc
iret
scas
pop
mov
inc
fistps
xchg
gs
adcb
stos
out
ficoms
cmc
imul
push
outsl
pop
and
bound
inc
ljmp
lods
sbb
lea
in
negl
scas
adcl
mov
stos
mov
cs
rol
cmpsl
jp
mov
ret
mov
mov
int
jne
lret
shll
in
call
mov
das
add
ljmp
mov
mov
cmp
fstpl
xchg
jo,pt
shll
xchg
in
jp
lcall
popf
sbb
les
dec
cld
or
and
jl
adc
add
xor
jecxz
mov
mov
sbb
fwait
jb
mov
cmp
xor
xchg
out
mov
test
mov
scas
rcl
inc
dec
movsl
bound
mov
jge
sbb
and
sbb
insl
arpl
pop
pop
push
je
sub
iret
adc
in
push
xchg
mov
test
add
bound
mov
jbe
jns
or
cmp
jb
mov
into
sbb
call
sub
mov
jns
push
xor
pop
inc
fsubp
and
add
sbb
cmpl
mov
mov
jg
mov
add
rcl
ss
loope
sbb
sub
add
mov
push
test
add
es
adc
les
jb
mov
hlt
mov
adc
push
das
adcl
data16
lods
mov
dec
sahf
ret
movsb
repnz
or
xor
xchg
outsl
sbb
jl
mov
fidivl
std
adc
pop
mov
insl
xabort
js
pusha
sbb
inc
cmp
xchg
lcall
into
test
push
ljmp
shl
pop
jae
mov
fs
add
sti
or
fcoms
dec
xlat
pop
decb
sahf
mov
xor
sub
push
or
imul
mov
test
inc
imull
sbb
data16
shl
xor
jg,pn
pop
insl
aad
add
dec
xchg
sub
cmp
call
cs
lods
popf
or
dec
add
jecxz,pn
jno
cwtl
push
fwait
lock
mov
mov
call
adc
push
aas
cmp
mov
into
push
lret
xchg
movsb
js
shl
lea
mov
inc
stc
jmp
les
int3
movsb
cmp
push
mov
outsb
fsubrs
stc
out
addb
or
inc
mov
jb
xchg
add
cwtl
inc
mov
dec
dec
adcl
pextrw
stc
fidivl
xchg
mov
jmp
or
cli
mov
lcall
mov
mov
mov
xor
or
imul
cli
je
lret
xor
inc
aad
out
ljmp
in
leave
cwtl
in
xchg
dec
stos
stos
in
xor
cs
or
stos
movsb
pop
cmp
sub
aas
test
cmp
outsl
mov
cmp
scas
or
cmp
xor
mov
hlt
xlat
sub
jns
fcmovb
std
jb
test
xor
or
mov
sbb
ror
pop
sub
sub
jle
mov
nop
push
cs
mov
or
add
fldenv
xor
push
jmp
jbe
pop
or
rcr
scas
and
and
or
pop
out
out
push
in
push
ljmp
dec
cmp
stos
cltd
lods
ret
negl
cmp
dec
insb
fwait
lods
test
mov
das
sub
ss
push
loope
test
pusha
out
repnz
fsubr
adc
and
mov
and
pop
add
fbld
bound
inc
xchg
mov
out
rcrl
sub
dec
pop
cltd
pop
loope
aam
loop
push
mov
jg
mov
repz
sbb
jge
pop
mov
xor
ret
inc
mov
loope
or
xchg
fisubrs
mov
aaa
mov
adc
mov
andb
sbb
fnsave
add
dec
jne
add
mov
and
sub
add
fists
sub
jae
sub
pinsrw
mov
jno
push
or
pop
mov
fldl
mov
cli
das
xchg
jb
enter
jmp
jmp
mov
pop
jge
notl
les
out
imul
sbb
xchg
push
rcr
lahf
repz
jmp
mov
mov
pop
xchg
or
test
inc
out
call
push
icebp
es
sbb
in
mov
pop
call
gs
arpl
push
dec
pop
lahf
sbb
clc
lods
xchg
pusha
add
xor
aaa
in
add
pop
cmp
cmc
push
adc
and
leave
and
mov
add
adc
int
outsl
xor
mov
pop
out
pop
lods
adc
imul
in
ljmp
mov
push
inc
sub
pop
jns
and
pop
jb
xchg
fs
jns
sbb
pop
aad
xlat
mov
cwtl
ss
mov
data16
shll
sbb
ret
mov
scas
loopne
mov
insl
enter
jae
cmp
dec
mov
jb
cmp
cmpsb
lcall
push
sub
sub
inc
jae
xchg
fucomp
push
add
lret
test
add
jl
jge
add
aad
dec
xchg
inc
iret
cmp
add
loop
mov
lahf
jb
mov
adc
es
mov
push
lods
dec
cmp
mov
popa
ljmp
jge
jno
stc
call
cs
mov
inc
ret
sub
out
or
jle
cli
jbe
cmp
sub
in
scas
push
dec
mov
ljmp
cmp
call
scas
cli
xor
mov
lahf
inc
jle
mov
mov
lea
or
popa
jg
test
push
lock
xchg
lret
dec
hlt
mov
rorl
mov
popa
into
iret
xlat
add
andl
mov
ror
add
ja
mov
mov
ss
push
and
cmpsb
hlt
or
inc
sbb
jnp
into
mov
pop
sub
dec
jp
mov
cld
adc
aaa
dec
outsb
mov
xchg
cmpsb
lods
mov
rcll
push
cltd
sub
sbb
push
rcr
aas
jb
xchg
aam
pop
mov
in
scas
cmp
xlat
pop
and
clc
sbb
mov
inc
adc
lret
sub
idiv
movsb
xchg
or
pop
ret
out
nop
mov
push
out
movsb
xor
pop
mov
into
mov
gs
xor
cltd
mov
mov
xchg
push
inc
cli
sub
repz
pop
or
add
xlat
push
mov
sub
sub
pop
inc
psubusb
xor
ljmp
rclb
xor
sub
stc
popa
test
fdivrs
lock
fisubl
test
dec
xor
ja
bswap
or
push
push
mov
or
sbb
push
add
dec
bound
fwait
into
xchg
mov
mov
jg
sahf
dec
incb
outsb
movsb
cmpsb
and
xor
ja
icebp
mov
testb
lods
xor
aaa
cmp
or
test
dec
mov
push
dec
movsb
adc
pop
bound
jb
push
popa
stc
jmp
lret
outsl
cmp
stos
or
mov
mov
push
adc
xor
call
out
inc
push
jl
push
in
cmp
ret
movsb
pop
pop
inc
sbb
sbb
rol
mov
mov
mov
jb
inc
incl
aaa
repz
sub
cmc
in
repnz
cld
mov
push
testb
jb
mov
or
or
sbb
lods
lahf
or
add
pop
out
arpl
xchg
or
inc
xor
fdivs
adc
addr16
mov
movsb
call
das
lods
cmp
cmp
inc
pusha
loope
mov
icebp
cld
gs
jne
outsb
hlt
pop
popf
ljmp
xor
jp
fstpt
mov
cmp
or
inc
iret
mov
rcl
ss
and
xchg
inc
enter
loope
sahf
add
fmull
mov
push
mov
bound
and
adc
rcrl
cli
add
cmp
sub
push
mov
lods
dec
insb
jne
es
adc
cmp
pop
lods
adc
popa
insl
test
mov
cltd
xchg
sub
insl
add
pusha
vmwrite
pop
ljmp
push
testl
test
lcall
push
cmp
rorl
inc
sub
pop
adc
or
int3
and
adc
or
xor
mov
cli
xchg
lahf
sbb
lods
mov
mov
dec
repz
xchg
mov
aam
lahf
mov
inc
fimull
push
mov
js
xchg
movsb
pop
repz
push
fwait
cmp
in
mov
dec
outsb
xor
add
fsubrl
stos
cmc
pop
inc
popf
inc
dec
pop
pop
mulb
add
xor
out
stc
jb
scas
mov
lods
and
lea
add
mov
sub
mov
push
fs
sub
xchg
mov
scas
adc
adc
add
sub
icebp
stos
xchg
mov
dec
mov
hlt
into
and
lret
sarl
jne
dec
aaa
sub
arpl
sarb
adc
mov
sub
jge
xchg
fdivl
mov
pop
cwtl
mov
ret
mov
mov
addr16
push
fcomps
int3
cli
push
ljmpw
jno
in
fsubrp
mov
pop
jnp
mov
xor
mov
adc
xor
inc
sub
cmovne
icebp
lock
repz
cmp
into
je
cmpsb
popf
cmp
je
mov
mov
adc
lods
push
jge
int
push
and
fcompl
mov
stos
and
or
pop
mov
add
dec
mov
mov
mov
insl
subl
mov
out
cmc
mov
lcall
js
shll
sbb
xor
mov
into
or
xor
dec
mov
push
mov
xor
jbe
jne
sub
insl
movsb
enter
lea
pop
dec
sub
dec
js
sahf
pop
or
jl
xchg
sti
test
dec
xchg
gs
mov
ds
adc
inc
push
pop
loope
pusha
mov
mov
popa
sub
add
mov
fstl
repz
sbb
cmp
xchg
cmc
cmp
mov
and
fcompl
cli
popf
ljmp
fdivs
cs
leave
xchg
push
or
mov
bound
push
std
sbb
fstl
mov
mov
repz
pop
mov
idivl
xor
fmulp
popf
dec
lods
adcb
cmp
cltd
mov
mov
ljmp
scas
sbb
cmpsb
or
hlt
add
xchg
pop
ret
xor
cmp
lods
cs
in
rcll
cld
mov
loopne
jne
dec
aas
movsb
pop
testl
ret
movsl
jle
sbb
loop
aam
or
xor
jmp
fdivr
adc
fimuls
fdivrp
or
dec
int3
movsb
jle
sbb
test
jb
into
out
jne
test
push
in
std
mov
les
jp
add
pop
leave
mov
movsb
xchg
les
in
icebp
xchg
dec
mov
pop
movsb
fidivrl
and
stc
mov
xchg
mov
cmp
cmp
dec
arpl
clc
cmpsb
jae
mov
dec
xor
jae
icebp
cmp
push
ja
push
out
mov
lods
loope
ljmp
ja
push
xlat
jmp
stos
stc
mov
sub
add
mov
movsb
mov
outsb
stc
cltd
cltd
xor
jo
inc
mov
mov
mov
jle
dec
std
out
lods
pop
mov
jmp
shll
movsb
add
add
pop
es
mov
dec
push
or
jne
cwtl
lds
cmp
sbb
call
popa
adc
xor
mov
adc
and
mov
add
xor
in
aam
push
fsubrl
test
push
push
fcoms
andb
int3
jmp
pop
mov
pop
movsb
xor
and
jne
mov
xchg
pushf
popf
sbb
bound
bound
fdivp
mov
xor
pop
mov
mov
sbb
lds
ret
icebp
jnp
movsb
sahf
and
sub
dec
lds
push
faddl
dec
cmpsb
dec
xchg
imul
ret
loope
ljmp
insb
xor
incl
cld
sbb
fwait
push
lods
adc
and
xchg
dec
sub
xchg
rcl
sbb
fadds
inc
push
fmulp
jo
cli
jnp
or
jmp
mov
mov
stc
add
sub
movsb
daa
add
cmp
cmpsl
dec
dec
outsl
int3
push
push
leave
push
push
mov
pop
push
call
andl
gs
popf
jl
lods
bound
xor
mov
scas
mov
mov
in
mov
lcall
mov
das
mov
adc
push
bound
or
push
cwtl
call
in
sub
jge
call
movsb
dec
faddl
or
pop
scas
and
movsb
dec
idivl
mov
hlt
mov
insb
sbb
out
push
imul
ret
orb
cmpsl
mov
test
jp
divb
test
aam
fcoms
ret
dec
loop
adc
lret
mov
push
outsl
aad
js
mov
hlt
pop
adc
repz
adc
or
cmp
test
imul
add
push
mov
dec
pushf
cmp
mov
or
je
mov
insb
pop
jb
jae
cmp
out
lock
dec
cld
movsl
lcall
enter
jno
into
stos
test
jns
mov
xchg
lods
in
adc
add
mov
jne
pop
mov
rcr
repnz
adc
or
outsl
insl
dec
jmp
outsb
mov
mov
lret
imul
iret
ljmp
or
push
xchg
xchg
gs
adc
pop
fisttps
nop
push
xor
pop
lods
scas
adc
and
mov
js
xor
xchg
sub
lods
adc
sub
mov
icebp
sahf
in
inc
fadd
push
insl
mov
cltd
jb
shl
push
mov
ret
push
xor
dec
jns
pop
sbb
lcall
jb
push
mov
xor
sub
pop
jbe
pushl
fisubrs
cmpsb
mov
mov
lods
sbb
mov
cmpsl
mov
test
and
inc
stos
lret
imul
xor
popf
jne
pushf
jge
inc
int3
pusha
mov
cmp
loopne
int3
icebp
pop
movsb
mov
jns
call
ljmp
mov
mov
dec
xchg
test
mov
insl
cmp
fisubl
movsl
xor
xor
sbb
daa
xchg
int
add
sub
jecxz
dec
stc
in
nop
inc
mov
mov
inc
shll
push
rcr
stos
and
push
adc
lret
hlt
icebp
mov
pop
call
inc
cmp
sbb
adc
aam
jns
clc
dec
add
fcmovu
das
mov
cmp
dec
rorb
pushf
pop
rolb
aaa
mov
mov
call
xchg
mov
arpl
int
std
arpl
add
cmp
lcall
push
dec
mov
push
scas
imull
call
mov
mov
jno
das
push
push
mov
stos
lods
xchg
shrl
insl
cmp
push
inc
add
cmp
movsb
addr16
sub
imul
dec
adc
push
sub
pop
jl
and
and
xlat
sub
shl
cld
jno
jbe
mov
jmp
add
jl
dec
es
sub
lret
movsb
lods
cli
mov
push
je
imul
stos
jo
stc
mov
mov
vmwrite
pop
sub
aaa
mov
out
repz
int3
sub
cmpsw
add
mov
mov
sbb
mov
push
mov
mov
push
push
xor
movsl
mov
pushf
incb
jns
clc
jg
out
out
push
imul
push
cmp
adc
out
cmp
push
sahf
movb
mov
js
cmpl
movsb
mov
mov
xchg
pushf
leave
sub
out
addl
icebp
cli
mov
inc
ds
add
adc
jb
enter
int3
mov
fwait
bound
ss
fildll
xor
movsl
out
push
adc
stc
inc
cmp
in
pinsrw
xor
in
jg
testb
pop
add
add
mov
add
jmp
mov
fidivl
or
sbb
mov
iret
mov
psrld
cltd
rorl
je
fdivl
push
mov
rcrl
cmpsb
mov
out
mov
jmp
xchg
xor
add
mov
jbe
mov
cmp
pop
call
cli
xlat
jge
aad
and
sub
out
inc
xlat
incl
pop
lods
push
push
or
test
sub
sbb
pop
dec
mov
pop
js
repz
je
sub
gs
and
sub
mov
aad
mov
cmc
mov
xchg
push
into
mov
cmc
arpl
inc
shlb
shlb
sub
lahf
adc
fsqrt
sahf
je
mov
and
sbb
sbb
sbbl
sub
mov
mov
in
inc
add
mov
lock
cmp
arpl
insl
dec
stos
sub
fimuls
jns
add
and
cs
jmp
imul
out
faddl
subb
outsl
in
push
test
xor
dec
inc
jbe
cmp
xorb
fidivrl
dec
xlat
in
mov
in
push
jnp
or
nop
addl
adc
or
sbb
and
jb
fnstsw
js
lret
push
push
outsl
cwtl
aad
lods
dec
scas
sbb
mov
stc
push
rcrb
mov
mov
jnp
nop
xor
jnp
rolb
push
lds
cmp
inc
adc
or
sub
das
jne
fsts
jge
es
test
stc
push
jae
aam
sbb
mov
cli
or
jbe
dec
inc
leave
inc
add
rolb
mov
push
pop
mov
imul
in
inc
enter
addr16
dec
call
inc
mov
lea
fwait
gs
imul
fsubl
arpl
mov
enter
rcll
pop
insl
and
xchg
imul
sub
xchg
fsubl
movsb
nop
push
enter
cmc
out
popa
cmpsl
int
push
mov
sub
jb
jbe
lock
pushf
dec
movsl
adc
jge
sub
jmp
sbb
mov
cmp
mov
shll
data16
cmp
mov
ja
stos
mov
mov
add
cmc
xor
pop
inc
mov
scas
pop
add
ljmp
dec
mov
stc
jnp
bound
mov
shrb
xor
test
dec
push
aam
mov
gs
xchg
movl
xor
lret
mov
xchg
popa
loope
pushf
push
rolb
insl
xor
loope
inc
xor
out
dec
cmpsl
into
xor
or
sub
jno
bound
xchg
add
push
fpatan
jne
bound
push
lcall
cmp
xchg
repnz
and
dec
aaa
in
mov
into
pop
sahf
and
sub
add
xor
jns
sub
fadds
inc
jae
sub
popa
jmp
adc
mov
adc
mov
scas
mov
inc
or
and
fisubl
mov
dec
mov
inc
xor
xor
cltd
push
mov
pop
fldt
add
fldpi
aam
push
and
clc
mov
mov
xchg
fadds
out
mov
mov
andl
hlt
sbb
xor
or
js
pop
dec
ucomiss
enter
cmc
idivb
call
xchg
lahf
mov
mov
sub
ret
add
cmp
cmc
jno
movsb
push
mov
shlb
push
ficoms
push
movsb
inc
push
mov
jb
insl
mov
loope
dec
mov
cmc
lods
pop
jp
call
rcll
sub
lret
fldenv
adc
fisubl
das
lods
ret
leave
push
mov
adc
lcall
xchg
add
sbb
ret
cmpsl
daa
mov
and
dec
sahf
int
xchg
jnp
fs
ss
andl
or
push
mull
or
and
lods
das
mov
ret
pop
sub
pop
jns
xor
pop
or
idiv
in
scas
push
fcoml
lods
shll
push
dec
xor
insb
pop
mov
das
nop
lods
dec
in
ret
mov
xchg
aam
neg
std
mov
imul
sbb
sub
mov
cltd
insb
repnz
pop
std
jnp
and
in
popf
inc
xchg
inc
rorl
neg
cmp
mov
and
dec
fisttps
bound
add
repnz
add
and
iret
stos
shrl
cmc
das
ret
fdivrl
adc
lea
enter
push
test
pop
call
sbb
pop
lods
sbb
ds
fcomps
stos
arpl
jae
push
fcoml
setp
add
dec
scas
movsb
mov
dec
inc
mov
sbb
int3
mov
cmp
adc
test
mov
mov
clc
mov
popa
mov
test
stos
rcr
imul
scas
xchg
push
sarl
jmp
rorl
fstpt
jg
cmpsb
mov
lcall
cli
xchg
inc
cmp
jg
mov
mov
cltd
ja
mov
dec
loope
xorl
psubsw
add
iret
fnstenv
stos
sub
mov
inc
call
add
xorps
scas
mov
fadds
pusha
sub
adc
jns
bound
pop
cmp
ljmp
loopne
or
jb
clc
repz
adc
out
add
jge
mov
nop
sbb
mov
andb
out
pop
jbe
addb
mov
mov
jbe
push
movsb
addb
filds
xor
lret
and
cmc
sub
jae
rorl
dec
inc
jbe
fsubl
outsb
pop
in
sub
pushf
mov
pop
das
mov
movsb
mov
dec
xchg
jge
lret
cld
inc
rorb
mov
mov
sbb
jecxz
sbb
adc
jge
mov
int3
popa
mov
into
loope
pop
lcall
inc
cmp
or
cli
dec
xchg
pop
cmp
or
int
pop
xchg
mov
fnstcw
push
sbb
pop
adc
clc
and
imul
movsb
sub
mov
cmp
lea
bound
test
in
mov
inc
fwait
ljmp
insl
es
call
std
mov
jb
es
jmp
movsb
int
xlat
push
mov
sub
jmp
sbb
sbb
shlb
cltd
nop
mulb
test
adcl
mov
cmpsl
aad
xor
xchg
pop
push
xor
sub
test
mov
mov
movsb
dec
xchg
cmp
mov
sbb
mov
pop
pop
xor
or
jg
cltd
shrb
icebp
mov
cmp
push
mov
inc
dec
dec
lahf
inc
ret
pusha
insl
cs
jmp
or
mov
ret
mov
fisubl
add
mov
sbb
test
dec
call
inc
cmp
stc
push
jb
insl
dec
dec
and
jo
dec
ja
bound
or
fcomi
fmull
cli
cmc
call
pop
lret
outsl
ljmp
orb
cli
int
push
push
sub
sahf
sbb
movsl
mov
ror
jge
mov
imul
dec
ret
dec
popf
cmpsl
mov
or
sub
dec
push
insl
fwait
gs
fwait
sbb
push
xlat
add
ret
ficoml
in
lock
inc
cmp
push
mov
mov
outsl
dec
dec
push
sbb
inc
fsts
jp
adc
inc
jb
into
arpl
sub
movsb
mov
in
popf
cmp
jmp
pop
xor
mov
lods
dec
dec
stos
sbb
xchg
rcrl
into
outsb
xor
mov
pusha
scas
push
bound
mov
adc
hlt
decb
xchg
lret
sbb
add
sbb
into
ret
pop
sub
movsb
dec
aad
ljmp
cmp
mov
cmc
pusha
fildll
and
or
mov
decl
jb
inc
insb
js
adc
and
stos
pop
leave
sub
mov
cmp
push
jno
cmp
call
jmp
loop
mov
pop
aad
adc
leave
mov
gs
repnz
xor
subb
mov
inc
dec
push
arpl
dec
xchg
orps
ret
sbb
or
outsb
outsl
fcomps
or
jb
call
fnstsw
cltd
push
push
test
mov
jnp
dec
loope
gs
mov
in
pushl
inc
jne
add
scas
inc
rep
es
clc
es
lods
mov
adc
dec
movaps
dec
enter
pop
dec
and
mov
xchg
scas
add
ret
inc
in
ss
ds
fstps
mov
xor
fisttpl
testb
movsb
clc
jo
popf
push
js
loope
mov
in
movsb
push
push
inc
mov
xor
jbe
outsb
mov
dec
sbb
sbb
cmpb
cmp
hlt
dec
and
add
inc
lods
inc
lock
push
lret
cmp
mov
outsl
jb
push
lds
sbb
mov
mov
cmp
pop
or
xlat
enter
ds
fldenv
adc
dec
iret
lahf
stos
gs
incl
mov
mov
orl
enter
mov
jbe
mov
aas
insb
stos
pop
stos
cmpsl
jno
pop
sar
xor
sub
lods
fwait
jae
idivb
and
shll
jns
xor
xor
lds
in
jbe
pop
popf
or
cmpsb
das
push
xchg
jecxz
xor
push
cmp
mov
dec
jbe
les
inc
sub
mov
jmp
shrd
mov
pop
mov
sbbl
lcall
xor
jnp
lods
inc
fistl
push
adc
mov
mov
mov
sub
mov
cmp
dec
and
aad
rorl
out
dec
cmpsb
outsb
and
bound
cltd
xchg
push
dec
mov
or
adc
mov
and
rcl
push
jmp
ret
out
les
push
mov
stos
or
sbb
mov
jno
lods
mov
pushf
cmp
out
pop
enter
cmp
lahf
push
movsb
icebp
pop
inc
or
inc
out
xchg
jb
test
xchg
outsb
inc
push
xor
jno
or
lea
mov
das
mov
dec
loopne
icebp
push
mov
cwtl
push
and
movsl
jae
pusha
cmpsl
dec
and
popf
inc
inc
gs
cmpsb
mov
stc
xor
or
enter
and
push
or
ja
sbb
jge
mov
aaa
outsl
or
adcb
xchg
jg
aas
aam
dec
mov
pop
xor
mov
push
cmp
push
cli
jecxz
jp
loop
sub
negb
jl
aas
adc
xor
js
outsl
push
xchg
cltd
aam
push
scas
xor
test
push
and
mov
rorb
sub
in
and
jo
pushf
call
flds
pop
jp
or
nop
shl
jbe
pop
hlt
imul
and
fistl
ret
pop
adc
mov
fstl
aad
out
push
xchg
rcll
adc
ljmp
and
xchg
mov
sbb
jnp
cmpsl
xor
shrb
dec
cmovle
loope
insl
mov
push
or
fcoms
popf
pop
sbb
adc
repz
cmc
iret
jbe
lds
pop
ret
mov
xchg
scas
ja
insb
stos
or
pop
lods
inc
xchg
sub
or
insl
xor
rolb
movsb
mov
pop
pop
mov
ljmp
add
cmc
push
xchg
xchg
into
ljmp
test
movsb
imul
mov
dec
in
xorl
jbe
cmp
test
roll
xor
pop
jl
clc
ljmp
cmp
out
ja
lock
adc
iret
sbb
pop
jae
shll
in
add
sbb
sar
repz
into
popa
push
test
dec
xlat
int3
mov
icebp
lcall
pusha
lcall
rorl
xorb
pop
cmc
xor
xor
movsb
enter
loope
movnti
dec
mov
jg
mov
pop
mov
movsb
mov
sub
cmp
mov
cmpsl
and
movsb
gs
push
sub
into
lcall
hlt
dec
xchg
xor
dec
xchg
repnz
mov
in
jg
jne
dec
mov
sbb
xchg
inc
loopne
pop
mov
loop
dec
pop
jae
dec
mov
in
subl
cmp
lods
push
ljmp
hlt
sbb
imul
or
add
and
add
movsl
fdivrs
cmp
dec
add
lock
cmpsl
bswap
xlat
insl
jb
scas
pop
adcl
out
and
mov
lret
xor
popa
mov
or
inc
lods
xchg
or
dec
mov
lock
pop
mov
rcr
mov
dec
dec
and
dec
mov
sub
clc
fs
push
lods
and
roll
pop
and
std
cmp
push
aad
adc
mov
into
sub
imul
dec
cld
or
popa
cli
insl
sbb
push
add
lock
and
mov
xor
insb
inc
test
loope
shll
push
add
push
lahf
das
mov
push
cmp
rcl
ror
and
lret
pop
movsb
jle
push
test
sub
call
mov
clc
mov
data16
mov
xchg
jl
sbb
push
fmuls
insl
scas
lock
repnz
aas
iret
rcrb
sarb
int3
jl
mov
dec
dec
pop
mov
inc
push
xorb
orb
cmp
stos
popa
roll
xor
lea
xor
loopne
and
sahf
mov
push
fldt
mov
pop
push
cmp
stos
mov
call
pop
loopne
inc
jne
ret
adc
jne
mov
push
inc
cmpsb
jnp
hlt
inc
sbb
or
mov
aas
pushf
jnp
mov
jb
push
shll
push
outsl
shlb
and
out
loop
es
mov
movsl
cmc
movsl
mov
add
sbb
out
push
push
cmp
pop
inc
fldcw
cmp
or
push
test
dec
and
sbb
call
sub
adc
jb
aam
test
test
and
fildl
mov
adc
mov
imulb
sub
inc
jg
das
ficoml
movsb
hlt
call
mov
push
or
push
sub
sbb
mov
mov
lods
stos
mov
test
sbb
sbb
mov
ret
iret
aam
bound
out
xor
and
jle
rorl
cmp
sub
rolb
incl
movsl
fstpl
mov
sub
or
cmp
push
jo
out
xchg
mov
cld
fwait
inc
adcb
dec
stc
pop
push
mov
mov
lcall
mov
cmp
cmpsb
fsubrl
xor
inc
add
dec
ljmp
mov
sub
jge
mov
and
push
popf
mov
push
lret
mov
jg
cmp
cmpsb
btr
aam
movntq
push
pop
xchg
popa
inc
outsl
sub
insb
jmp
in
mov
or
add
xorb
outsb
mov
or
outsb
loopne
push
pop
push
mov
ljmp
jns
insl
mul
cld
adc
sub
or
roll
scas
rcl
dec
dec
lcall
movsb
sbbb
bound
sub
lods
sahf
mov
mov
hlt
cmp
add
lods
ss
cltd
mov
ljmp
das
daa
cmp
lea
or
pop
mov
jge
and
icebp
cs
adc
inc
jmp
lods
inc
cmp
in
addl
mov
push
pusha
adc
mov
mov
cld
pop
adc
fisttps
jne
inc
cmpsl
les
jne
sbb
cmpsb
insl
jnp
push
push
sub
das
mov
repz
in
xchg
outsl
into
mov
or
lcall
cmpsb
mov
fs
sub
mov
pop
push
sbb
push
or
pop
adc
es
mov
movsb
leave
fiadds
or
add
mov
xor
inc
popf
push
imul
or
insb
jne
push
dec
push
mov
dec
jns
ds
and
xorl
sub
popf
testb
sub
ret
mov
cmp
inc
ficompl
pop
popa
sub
test
das
dec
fcomi
pop
jmp
adc
fists
xchg
jno
mov
mov
dec
lods
push
addr16
push
cmc
cli
jbe
pop
fcoms
test
mov
out
or
xor
cmp
push
or
out
je
jae
add
jae
jbe
cld
std
nop
loop
lods
insb
fxch
inc
mov
cmpsb
arpl
jae
lods
push
into
outsb
roll
sbb
cmp
push
xchg
xlat
movaps
es
ret
lret
in
sarl
pop
negb
mov
xor
shll
dec
sbb
cs
lods
push
out
outsl
pop
pmaxub
cmp
in
jb
in
dec
sbb
mov
lods
push
pop
insl
adc
ret
scas
mov
inc
inc
and
mov
orl
sbb
stc
mov
addr16
dec
enter
test
cmovl
lcall
or
xlat
rcrl
aaa
gs
xor
sub
fldenv
arpl
test
daa
iret
xchg
mov
jbe
rcrb
xchg
adcl
pandn
mov
std
bound
xor
ret
or
sub
pusha
inc
ret
jb
jge
les
into
in
cmp
pcmpgtw
out
cli
adc
and
cmc
pop
mov
dec
sub
in
adc
adcb
movsb
dec
movsl
lds
mov
cs
jb
aas
inc
adc
sti
mov
mov
movsb
xchg
and
pusha
ljmp
pop
cmp
mov
mov
mov
clc
adc
movsb
in
iret
scas
adc
dec
inc
movsb
jns
mov
mov
or
dec
mov
mov
jne
xlat
xchg
sub
repnz
push
les
add
out
std
push
push
dec
int3
movsb
int3
cmpsb
sub
in
ret
jb
push
pop
pop
push
xchg
mov
in
sbb
push
aam
lock
push
fs
js
sub
daa
movsl
fwait
in
pop
cmp
out
jnp
jge
mov
lods
push
cmp
xchg
movsl
aad
in
or
movsb
ja
fdivr
inc
xchg
test
pop
ljmp
xchg
andl
sub
aad
dec
imul
ja
mov
inc
sbb
lret
movsl
imul
jnp
cmpsl
adc
dec
mov
mov
adc
ljmp
fsts
call
test
jge
shll
add
and
ljmp
fdiv
dec
mov
jno
jo
mov
dec
lods
nop
adc
lret
imul
push
push
jns
mov
push
pusha
imul
adc
sub
mov
mov
sbbl
push
scas
cmpsl
stos
rorw
outsl
rol
mov
mov
scas
rol
dec
mov
hlt
bound
stos
das
shll
iret
xor
movsl
or
and
pop
mov
add
je
xchg
fistl
push
add
test
push
mov
mov
mov
adc
jle
lret
out
and
xchg
inc
mov
dec
dec
cmp
jmp
or
cmpsb
push
test
cmp
pusha
sbb
cmp
stos
movsb
adc
clc
testb
fidivrl
mov
mov
cmpsl
push
lea
adc
dec
cmpsb
cmpsb
cmc
adc
xor
mov
xchg
out
mov
inc
popa
test
loope
in
sbb
cmpb
and
ss
lods
mov
pusha
in
hlt
test
jge
push
divl
add
ja
inc
cmc
and
js
test
cmp
aaa
xchg
push
sub
xor
inc
push
movsb
pushf
push
dec
jbe
daa
pop
mov
xor
mov
mov
adc
movsb
jne
inc
dec
movsb
jbe
xchg
xchg
xchg
dec
es
iret
dec
sbb
cmpsb
into
shll
clc
lods
mov
dec
insl
or
mov
jnp
adcl
mov
cld
adc
or
gs
jb
xchg
or
xchg
add
add
fimull
push
push
adc
dec
ret
lds
xor
sub
push
adc
and
jae
jmp
cmp
mov
mov
mov
xor
mov
mov
mov
mov
sub
sub
sub
sub
dec
sbb
sub
add
fbld
mov
inc
jae
inc
cli
lea
mov
push
push
push
iret
push
test
outsb
les
jl
mov
add
leave
daa
xchg
mov
cmp
cmc
enter
mov
fidivs
or
lods
iret
repz
mov
inc
or
cmpsl
xor
jg,pn
lahf
divl
jge
jl,pn
dec
ss
clc
xor
inc
outsl
mov
cmp
jmp
jg
xchg
dec
cmpsl
xchg
sbb
mov
fmul
push
pushl
fsqrt
push
lods
jb
add
dec
or
ljmp
dec
cmp
rorl
scas
dec
inc
movsb
xchg
sub
cmp
inc
adc
loope
pop
jp
mov
test
lcall
jnp
imul
scas
bound
in
jmp
sub
cmp
adc
pop
add
cmp
jne
mov
dec
lods
jecxz
add
xlat
arpl
mov
or
repnz
imul
enter
add
inc
mov
das
dec
inc
leave
js
or
aas
xchg
test
push
cmp
sub
inc
pushf
xchg
jns
xchg
dec
leave
and
fwait
add
lock
stos
push
aam
enter
inc
sbb
mov
push
popf
lods
xor
repnz
stos
mov
jecxz
cmp
push
adc
jo
cmp
and
jge
push
movsb
nop
call
lret
arpl
and
into
dec
jmp
into
stos
mov
mov
repnz
ljmp
sar
dec
push
ss
fidivl
lea
cld
xor
mov
push
test
adc
test
push
mov
je
lods
mov
push
int
ljmp
xchg
jge
call
mov
into
outsl
dec
test
stos
daa
add
push
or
loopne
test
es
push
push
aaa
in
dec
and
push
mov
outsb
aaa
fadds
mov
cs
cli
xchg
fcompl
fsin
push
or
xor
sti
je
repz
ds
mov
arpl
test
push
mov
lcall
mov
add
mov
ss
pop
dec
inc
fwait
mov
out
std
mov
outsb
lret
xor
push
xchg
or
popa
hlt
sub
in
mov
sahf
adc
int3
dec
andb
gs
inc
bound
sar
das
int3
dec
ja
pop
jb
or
in
fistpl
pop
daa
inc
lods
das
fmull
popf
sbb
into
inc
repz
push
arpl
pop
jb
gs
mov
inc
mov
push
lds
push
mov
mov
inc
mov
mov
adc
insl
mov
inc
jg
es
dec
sar
xchg
mov
data16
push
xchg
push
mov
mov
push
lods
pop
inc
cmp
pop
loopne
cmp
fldt
mov
sbb
rcll
jno
add
ucomiss
add
ljmp
sub
fcmovnb
cmpl
xchg
push
and
roll
stos
loope
nop
push
imul
sub
hlt
das
push
mov
inc
aaa
decb
xor
jp
push
pop
xor
xor
push
test
xchg
xchg
adcb
dec
push
cli
inc
pop
and
jne
clc
cld
ljmp
outsb
gs
mov
bound
xor
mov
jmp
push
sti
mov
sub
cli
mov
loopne
mov
mov
ret
pusha
pushf
stos
loop,pt
pop
out
scas
lea
cmpsb
subl
loope
in
push
repnz
mov
jmp
add
mov
fimull
sub
loope
inc
xchg
or
scas
inc
or
nop
popf
pmaddwd
and
cmp
bound
or
dec
jbe
sbb
and
sbb
or
setb
rolb
inc
shl
nop
fs
lods
pushl
stos
jb
test
mov
mov
mov
insl
xchg
ret
lea
daa
movq
cmpsb
jge
mov
rolb
and
xor
push
sti
ja
xor
stos
outsb
mov
xchg
rclb
mov
adc
inc
jge
ret
cmp
les
rcll
lods
sub
mov
ss
cmpsl
push
aad
ds
pusha
fisubl
sub
shrl
pop
add
out
enter
xlat
mov
repnz
cmp
cmp
push
xchg
dec
lahf
lods
pop
add
pushl
jns
and
adc
and
mov
xchg
lret
orl
adc
in
mov
mov
sub
xchg
test
pusha
mov
enter
test
test
test
movsb
test
je
lds
or
mov
fucomp
or
sub
pop
cmp
xchg
movsl
sti
pop
and
sbb
sbb
pop
das
xchg
fildll
cmp
mov
sub
stos
xlat
xchg
push
push
stos
dec
and
sub
push
push
cs
inc
xchg
ljmp
push
movups
pop
push
sbb
in
cwtl
sbb
jae
and
pop
imul
jno
pushf
imul
cs
inc
sbb
push
adc
ret
dec
and
and
pop
add
mov
sbb
negb
inc
mov
fadds
pushf
xor
sahf
sbb
lea
int
fadd
inc
roll
mov
outsl
int3
stos
insl
and
rcrb
subb
dec
jae
pop
mov
push
cmpsb
repz
js
push
repz
push
sahf
push
fldt
push
xchg
cmpsl
es
add
lods
push
or
fimuls
aaa
out
pushf
mov
mov
fsubrl
push
lret
inc
into
pop
jbe
cmc
bound
inc
sub
outsb
push
imul
sub
rcll
movsl
pop
into
pop
xor
testb
je
dec
cmp
fxch
in
dec
cmp
jp
pop
push
push
xchg
stos
dec
fsubrs
add
movsb
in
dec
adc
out
sub
sub
cmpsb
popf
sub
inc
std
xor
pop
pop
cli
sub
lock
inc
pop
sbb
pusha
ja
addr16
add
xchg
in
sbbl
loop
test
jae
loopne
lock
mov
stos
pop
hlt
ljmp
stos
mov
bound
aad
mov
cs
jmp
push
into
pop
enter
repnz
insl
sub
xchg
and
pop
xchg
outsl
push
inc
dec
minps
sbb
lret
movsb
mov
or
adc
push
cmpsb
push
adc
xchg
and
lea
xchg
je
push
push
fcoms
or
push
roll
aad
pop
jb
call
xor
lea
mov
fsubrs
push
out
movsb
inc
mov
pop
inc
inc
sbb
repz
shrl
mov
adc
cli
pop
inc
push
push
sbb
int
je
pop
lods
test
aas
pop
mov
mov
ret
fxch
movsb
loop
mov
xchg
xchg
xchg
iret
mov
es
sbb
iret
push
mov
cs
lcall
add
scas
or
cli
je
test
movsl
xchg
testl
fisubs
push
push
in
and
movsb
iret
popf
mov
scas
decb
sub
pop
out
popa
nop
pop
cmp
cld
xchg
call
loope
mov
cmp
inc
cli
push
sub
scas
xchg
or
mov
stos
mov
sub
jae
repz
aad
hlt
sbb
pop
pusha
loope
out
adc
repz
push
outsb
ficomps
sti
pop
outsb
sbb
inc
sbb
push
or
in
outsb
xchg
mov
push
push
jge
je
adc
xchg
cmp
add
mov
nop
inc
sub
inc
and
mov
fistps
bound
inc
cs
jno
dec
jns
cmp
mov
xor
in
cmp
aaa
sub
dec
ljmp
lcall
mov
test
mov
ror
outsl
mov
and
push
push
sub
jmp
test
cmpsl
pop
lret
add
loopne
lea
inc
lahf
test
add
add
cmp
pop
mov
fldt
push
sbbl
push
ljmp
jecxz
lea
sbb
mov
adc
inc
imul
jb
sub
je
imul
push
mov
mov
xchg
lods
movsb
and
xor
fwait
das
nop
sahf
dec
cs
push
cmp
xchg
sbb
cmp
jmp
pop
dec
inc
je
addr16
mov
push
mov
add
fstpt
daa
sub
xor
push
jns
adc
add
pop
sti
jb
cwtl
pop
cmpsb
or
movsb
dec
or
mov
xchg
mov
adc
sub
pop
movsb
outsb
nop
cli
and
gs
and
jge
test
mov
pop
cmp
and
not
xchg
or
stos
jmp
jno
inc
mov
cmp
pop
cmp
add
loop
dec
fadds
cmpsl
sub
fidivs
lods
scas
jbe
iret
call
or
lea
stc
iret
psubsw
movsb
lret
fidivl
mov
aaa
das
daa
mov
xor
ss
lods
out
shrl
mov
add
dec
mov
sub
sub
pusha
mov
push
inc
cmc
shrl
stos
jno
and
ss
mov
mov
mov
mov
cmp
xor
in
outsl
les
pop
cmp
mov
pop
mov
jmp
loop
dec
idivb
test
sbb
lcall
lahf
mov
xor
inc
bound
xchg
fs
jmp
sbb
movsb
or
mov
or
mov
jbe
in
rcll
sbb
cli
int3
adc
shlb
test
loope
call
mov
xchg
dec
adcb
dec
mov
scas
aaa
sbb
or
shlb
loope
mov
jecxz
aam
xor
in
xchg
adc
lcall
jmp
mov
cmp
mov
inc
dec
sbb
mov
xor
psubq
dec
int
cmc
jns
mov
sub
jb
inc
aas
je
insl
fistpll
push
movsb
les
add
sub
mov
push
test
adc
jg
adc
lret
lahf
sbb
add
cmpsb
push
imul
ror
sbb
jg
xchg
pop
lea
dec
leave
in
jnp
fidivs
sub
pop
lahf
lods
push
mov
jne
mov
sahf
dec
xchg
push
inc
scas
adc
sub
xlat
jae
subb
pushf
mov
mov
xorb
mov
mov
cmc
jne
shlb
sub
xchg
push
lods
imul
aad
adc
sub
aad
mov
xlat
sbb
lods
sbb
xor
div
fbstp
sbb
leave
inc
out
int3
mov
in
push
dec
pop
xor
inc
jp
xchg
xchg
sbb
mov
add
cmp
cmp
mov
leave
inc
xchg
scas
jns
push
push
repz
mov
xor
sub
out
inc
ds
push
movsb
shrb
mov
adc
or
cltd
loope
ror
sbb
int
mov
mov
mov
test
sbb
xchg
pop
into
jnp,pn
cli
mov
fidivrl
or
mov
add
movsb
xor
xchg
outsb
sbb
test
iret
subb
jno
add
xor
mov
pop
mov
test
nop
xchg
sbb
lds
repnz
xchg
loop
dec
xor
ret
aad
mov
xor
xor
pop
mov
movsb
lret
sbb
or
xchg
int
bound
pop
cmp
jns
mov
pop
sbb
leave
and
sbb
mov
repz
shrl
jge
ret
push
sbb
pop
and
push
das
add
outsl
jg
xor
mov
shll
iret
pop
and
jl
bound
leave
outsl
enter
mov
inc
movsb
dec
inc
inc
ja
push
js
xchg
test
cmp
orb
push
inc
rclb
cmp
stos
sti
xor
repz
stos
andb
add
mov
iret
or
lea
xor
repz
aad
push
mov
dec
outsl
rcrl
in
xor
xchg
mov
jecxz
test
pop
pushf
xorl
sub
fdivp
mov
outsb
pop
stc
cwtl
adcb
cld
inc
push
test
xor
shll
push
sbb
inc
lock
in
sub
mov
icebp
push
xor
imul
sub
not
or
mov
stos
ss
sub
sbb
and
mov
mov
inc
outsl
add
jno
jne
pop
inc
add
shlb
mov
or
mov
sbb
or
dec
fimuls
push
test
dec
jl
pop
addr16
mov
testl
scas
lahf
clc
push
adc
push
je
ret
sti
inc
enter
pop
ljmp
cmp
push
mov
mov
pop
xchg
enter
pop
nop
mov
ret
jmp
inc
insl
movsb
or
inc
sub
dec
pushf
dec
xchg
jb
fnstcw
push
fldt
cmp
ret
xchg
adc
mov
pop
and
sub
out
mov
push
mov
bound
or
stos
xlat
ret
cmpsl
push
mov
jbe
cld
xor
sar
pop
or
and
into
iret
lret
fwait
add
sub
lea
mov
and
pop
add
dec
loopne
mov
stos
sbb
pop
ss
sub
dec
lret
lods
add
cli
adc
mov
cmc
mov
stos
loop
jb
push
xor
outsb
dec
dec
addr16
ret
xor
pop
jo
in
icebp
xchg
mov
push
sub
lds
dec
mov
sbbb
mov
test
repz
pop
or
dec
adc
stos
pop
dec
and
mov
cs
push
inc
pcmpgtb
fstps
stos
jns
test
pop
dec
mov
frstor
bound
nop
xchg
xchg
mov
jbe
out
mov
dec
cld
shl
push
dec
loopne
pop
into
lret
in
lds
push
xchg
or
pop
flds
movsb
inc
push
xchg
cmp
movsb
xchg
mov
push
into
sub
cmpsb
or
enter
adc
fistl
mov
pop
add
hlt
add
mov
cmp
addl
ljmp
ljmp
das
mov
shrl
xor
outsb
xchg
bound
mov
loop
add
cmp
xchg
sbb
dec
sti
add
into
pop
mov
sub
mov
stos
in
jno
xor
fcomi
out
and
push
xchg
pusha
jmp
lea
scas
sub
xor
push
mov
fcoml
cmpsl
adc
out
dec
ret
std
dec
fmull
bnd
mov
pop
dec
adcb
add
push
rep
mov
mov
sub
jmp
aaa
sbb
jnp
mov
sub
dec
push
test
into
pop
loopne
and
jb
cli
jbe
lcall
mov
jne
es
push
sub
push
jb
aas
fldenv
mov
out
xchg
mov
sahf
add
mov
imul
scas
mov
cmp
lods
adc
pop
lds
iret
rorb
xchg
pusha
pusha
mov
rdmsr
cs
movsb
mov
cmpsb
inc
bound
ret
cs
mov
mov
xchg
inc
loop
lcall
push
adc
xor
fdivp
repnz
icebp
push
add
xchg
xchg
mov
pop
push
push
pop
imul
mov
fisttps
sub
cmpsb
mov
adc
int3
xor
xor
xor
mov
dec
sub
and
inc
aas
das
sub
fmuls
shl
adc
xor
shl
sub
xorl
ret
sbb
pusha
xchg
fsubrs
push
fwait
addb
insl
mov
sbbl
pusha
adcl
mov
inc
xlat
add
push
jbe
mov
push
dec
sub
cmpsl
cmpsl
push
pop
inc
jae
mov
cmp
insl
shrb
mov
mov
divb
in
loope
movsb
andl
clc
mov
sbb
or
dec
das
les
loopne
dec
mov
imul
dec
mov
stc
mov
dec
mov
not
call
shlb
lahf
cmpb
outsb
icebp
out
add
sub
and
sub
adcl
inc
adc
mov
mov
movsb
aaa
sub
push
xlat
lcall
sbb
and
mov
out
pop
ljmp
mov
cmp
out
outsb
jmp
adc
cmp
jb
xchg
aaa
cmp
mov
pop
int
call
jge
repz
pop
push
pop
cltd
fnsave
ss
pop
jb
mov
mov
cmc
rol
push
test
lds
leave
mov
fldcw
jns
push
cmp
mov
movsb
jnp
jecxz
sub
sub
ror
cmc
xlat
sub
out
or
ret
andb
push
rcr
fcompl
stos
push
cmpsb
adc
xor
cmc
test
mov
adc
inc
ss
ret
or
sbb
sub
sub
jle
cmpsl
insl
cmp
mov
push
ret
je
sbb
call
insb
out
loope
mov
push
fsubrs
mov
out
rorb
mov
jg
pop
popf
mov
jbe
hlt
mov
fwait
adc
shrl
pusha
push
cld
push
leave
sub
aad
mov
rol
out
outsl
sub
dec
clc
inc
sbb
add
out
xchg
mov
subl
sbb
lret
std
cltd
mov
jp
push
jecxz
insl
cmp
or
dec
cmp
push
xor
test
inc
das
leave
xor
sbb
xor
push
ljmp
jo
insl
inc
or
fwait
imul
fisubrs
nop
sub
cltd
lahf
ret
xchg
lahf
and
adc
push
jnp
cmpsl
pop
arpl
rclb
test
jno
and
xchg
clc
scas
lret
lcall
aam
dec
enter
mov
jno
push
fdivrl
setle
andl
jno
mov
xor
mov
andl
repz
cmpsb
cmp
cli
nop
inc
je
sbb
mov
mov
sbb
jb
daa
lcall
add
dec
xor
mov
sbb
iret
xchg
mov
xchg
call
xchg
pushf
cld
dec
lret
push
aam
sbb
add
into
mov
mov
pop
mov
jge
fdivs
dec
jp
out
adc
mov
xchg
outsb
lods
hlt
pop
mov
xor
hlt
mov
ljmp
loopne
das
mov
test
mov
hlt
jns
into
out
push
dec
iret
adc
pop
jge
mov
jne
jg
aam
lods
pop
out
sbb
bound
aam
dec
shrb
inc
dec
push
enter
fidivrl
jb
xchg
add
push
movsl
mov
je
xor
pop
pop
dec
fistl
fimuls
pop
inc
outsb
sarb
popf
mov
out
sahf
dec
jl
jge
fistl
jo
scas
std
jbe
push
or
shll
ljmp
mov
mov
lahf
sbb
xchg
ficoml
arpl
jb
jae
insl
fsubrs
lfs
or
lods
inc
repz
xor
les
sub
push
push
incb
cs
and
add
xchg
pop
mov
mov
fidivl
sub
outsl
movsb
mov
xor
adcl
mov
pop
gs
insl
fsubrp
call
push
pushf
push
bound
insb
fldl
dec
addr16
fistpll
scas
add
and
shll
iret
aad
jl
pop
xor
and
subl
lahf
lcall
repnz
sub
in
or
push
inc
jbe
sbb
add
cmp
enter
scas
jae
dec
mov
dec
hlt
jge
arpl
sbb
jne
fsubrs
pushf
xor
adc
enter
inc
xor
sbb
dec
mov
lods
out
test
push
sub
out
scas
jl
jmp
movsb
sbb
pusha
or
jnp
rcll
in
inc
call
inc
push
mov
adc
frstor
fbstp
sbb
adc
repz
sbb
mov
inc
lods
in
cmp
cmp
mov
sbb
cmpl
js
jbe
icebp
movsl
mov
jp
jnp
sub
sbb
and
jno
jle
andb
mov
jg
dec
mov
mov
notl
cmp
push
push
pop
pop
mov
sti
in
cli
cmp
je
sub
mov
or
fmull
jns
scas
push
lods
mov
mov
xchg
pop
dec
push
jl
das
mov
pmaddwd
sbb
sbb
cmpl
movsb
mov
sub
aam
test
ljmp
lret
or
sub
dec
cmp
aam
mov
inc
test
push
nop
push
lret
inc
pop
and
mov
pop
cmpsb
sub
add
cs
fisubs
cs
js
imul
and
dec
mov
or
ss
ljmp
ljmp
pushf
lret
andb
cmc
pusha
stos
outsb
in
or
and
mov
inc
dec
lods
cmp
psraw
mov
sub
repz
les
mov
daa
sub
popa
data16
jns
jae
lret
pusha
sub
or
outsb
ljmp
adc
scas
sub
mov
push
fildll
adc
pusha
cmc
or
lods
imul
nop
fs
dec
aad
cs
mov
jmp
jp
xchg
test
cs
lea
and
hlt
test
cs
movsb
outsl
cmpb
stos
outsb
jg
mov
pop
sbb
and
scas
jge
pop
jae
xor
mov
and
movsb
mov
xor
xor
fsubs
icebp
sbb
ficomps
addr16
pushf
push
jo
or
test
nop
orl
jb
popa
ficomps
inc
jp
sbb
cld
mov
fmuls
clc
pop
cmp
test
movsl
mov
and
mov
inc
add
shlb
mov
sub
mov
cli
jns
pop
jb,pn
push
pushf
andb
mov
sbb
lds
pop
lcall
icebp
cmp
das
arpl
pop
add
mov
jbe
ucomiss
sub
adc
data16
ret
push
xchg
faddl
inc
jno
jae
or
sbb
mov
and
hlt
push
mov
in
xor
push
les
sub
cmp
incl
mov
lret
inc
or
arpl
sub
outsb
xor
lods
int
adc
sti
ljmp
sub
inc
mov
jno
or
pop
mov
lds
ljmp
pop
in
mov
xor
cmp
icebp
shll
xchg
xor
ja
ret
xchg
repnz
cmp
push
outsl
cmp
lods
xor
adc
xchg
push
adc
out
rcll
bound
das
push
sbb
scas
push
mov
jo
pusha
xchg
xchg
mov
and
pop
push
xchg
lds
cltd
xchg
sub
lcall
push
cmp
cmp
fsubl
mov
push
mov
inc
leave
call
lods
push
imul
mov
ret
mov
xchg
and
loope
test
pusha
xorb
push
xchg
inc
sbb
movsl
cmpsb
cmpsl
or
dec
test
mov
xorb
sbb
adc
jmp
test
outsl
shrl
xchg
sub
jp
add
out
sbb
idivl
ds
lcall
add
fildll
ss
out
and
aas
ds
lret
push
inc
mov
jb
mov
data16
out
out
inc
popf
repz
adc
cmp
test
and
insl
popf
bound
xorb
sub
mov
cs
gs
test
sub
mov
xchg
jge
mov
out
mov
cli
add
movsb
pop
stc
in
xchg
ret
cmp
mov
aaa
jp
dec
sahf
rclb
xor
popa
hlt
inc
mov
imul
test
cmp
lds
mov
cli
push
mov
push
lods
fsubrs
jl
fcompl
into
negb
addr16
or
jmp
push
push
js
cli
mov
es
mov
push
leave
push
les
shlb
dec
mov
mov
or
fists
push
mov
adc
sbb
adc
gs
bswap
mov
ret
pop
lock
mov
enter
add
adc
dec
mov
mov
pop
icebp
push
and
and
xor
pushl
ja
lea
lcall
and
sub
sub
scas
or
out
pop
dec
push
pop
ret
jmp
icebp
push
sti
xchg
divb
std
push
outsb
pop
add
sti
popa
nop
push
dec
mov
push
stos
dec
mov
jge
subb
push
fs
stos
mov
jg
pop
mov
xor
js
fwait
movsb
and
cmp
shrb
push
mov
sub
sub
aaa
cli
sar
cwtl
push
mov
lods
inc
in
jne
mov
lea
push
jge
ret
inc
inc
dec
add
mov
mov
adc
xchg
daa
add
roll
ss
jle
rolb
lock
mov
cs
arpl
fcom
add
and
pop
push
idivb
pushf
jecxz
mov
cld
lds
dec
pushf
xor
cmpsl
mov
mov
fisubl
nop/reserved
add
mov
mov
stos
xorb
shll
into
fs
fisttpl
mov
loope
push
xchg
cmp
mov
xchg
or
push
xor
push
add
ljmp
imul
dec
add
jns
pop
stos
mov
add
push
lcall
pop
test
sub
out
dec
add
xor
adc
xchg
shlb
or
ss
cli
mov
mov
add
sub
insl
arpl
push
out
lods
jecxz
mov
lcall
or
mov
loop
pop
sbb
insl
js
xor
sbb
pop
gs
je
xchg
inc
test
push
ljmp
dec
cmp
in
inc
lcall
cmp
or
stc
push
adc
add
lcall
pop
lods
mov
les
push
cmpb
pop
mov
xlat
add
movsb
xor
andl
fldl
cmp
lret
sbb
jmp
and
ss
dec
push
lahf
jo
or
repz
clc
or
movsb
add
hlt
leave
cmp
lret
dec
mov
dec
mov
call
jno
pusha
or
stc
jb
xor
sub
adc
ss
ljmp
cmp
xlat
faddl
lods
aam
imul
cmc
pop
iret
enter
xchg
fidivs
mov
ss
movsb
sar
adc
push
fimull
mov
cmpsl
mov
mov
fsubs
adc
sbb
push
imul
or
ret
int3
xor
dec
lcall
movsb
mov
sub
sub
fwait
jo
repnz
cltd
outsl
leave
jo
mov
jbe
aaa
cmc
in
xor
insl
leave
xchg
movsb
jg
aaa
repz
jp
push
push
lods
mov
inc
xchg
xor
ficompl
stos
repnz
sbb
sahf
popf
mov
pop
jo
nop/reserved
repz
rcl
jo
sub
mov
pop
mov
xor
lods
add
fldcw
mov
mov
fisubrl
jg
les
loopne
jno
pop
dec
pop
cwtl
cmp
adc
lds
and
ljmp
ffreep
cmpb
adc
test
fisubrl
ss
loope
adc
repz
aad
push
shrl
inc
add
fnsave
daa
daa
ljmp
sbbl
inc
jae
inc
xchg
push
stos
int3
hlt
push
adc
lcall
icebp
inc
sahf
mov
lods
mov
adc
push
cmp
lods
pusha
sahf
cmc
stos
cmc
mov
rorl
cs
movzbl
mov
fildl
adc
add
shll
cmp
push
mov
xchg
jmp
mov
add
add
popw
ret
fidivl
data16
je
add
nop
mov
cli
ljmp
xor
sbb
pop
or
cmpsl
push
jne
mov
imul
adc
and
mov
lods
bound
movsb
aaa
xor
or
mov
cmc
mov
outsb
mov
sti
push
mov
dec
ret
jb
std
aad
sbb
std
inc
push
jge
scas
pop
sbb
imul
scas
push
jnp
imul
fstps
or
mov
sub
adc
mov
mov
push
fmull
sbb
mov
test
xchg
adcl
lock
cmpb
test
inc
xchg
jp
shll
js
ss
imul
call
dec
std
push
movsb
in
into
jg
lahf
pop
and
pop
out
std
push
cmpsb
and
aam
sub
dec
ljmp
fcmovne
jns
jne
push
das
shlb
mov
fcomps
pop
aad
xchg
outsb
outsb
out
fldenv
mov
adc
imul
test
scas
pop
cmp
adc
hlt
sbb
cli
push
arpl
nop
xchg
sub
xchg
jle
stos
ret
lods
cmpsl
push
and
or
jne
xchg
or
mov
lahf
pushf
sub
cmp
aaa
ret
mov
popa
loop
add
scas
dec
xchg
fimull
out
nop
jmp
stos
fisttps
outsl
mov
mov
fneni(8087
add
and
bound
pop
or
adcb
and
cmpsb
jno
rcll
inc
je
cli
test
aam
scas
pop
cltd
sbb
lcall
mov
or
mov
mov
mov
dec
cmp
pop
pop
add
cmc
or
xchg
popf
dec
or
sub
jns
pushf
pop
mov
xchg
sub
lcall
movsl
ficoml
nop
arpl
pop
out
aas
push
adc
mov
fs
pushf
xor
cmp
movsb
and
inc
ja
adc
icebp
or
sub
mov
sarl
jae
movsb
sbb
test
push
and
adcl
das
xor
repnz
loope
sbb
in
int
pop
in
test
inc
add
cltd
mov
dec
jne
inc
inc
mov
sub
or
dec
fdivrs
mov
xchg
xchg
adc
insb
jge
jge
sbb
push
out
cmpsl
cmp
lds
mov
mov
and
xchg
adc
inc
xchg
mov
pusha
xchg
mov
ljmp
inc
cmpsb
and
lods
jbe
inc
lret
jg
mov
mov
mov
cli
jae
sarb
and
int3
arpl
push
shll
pop
mov
lahf
xchg
int3
mov
mov
stos
xchg
addr16
test
aam
shlb
xor
xchg
jae
adcl
scas
push
in
pusha
xor
xor
cmp
cwtl
shll
inc
cli
sub
pusha
push
int3
sahf
lahf
in
sub
mov
ljmp
cmc
mov
sbb
rcr
pop
push
mov
jp
xor
cwtl
adc
scas
mov
dec
out
ljmp
or
cs
xchg
sbb
imul
xchg
or
inc
inc
add
dec
das
sbb
or
and
pop
mov
aad
testb
scas
dec
js
push
xor
inc
sub
cwtl
mov
sub
sub
pop
gs
xor
inc
cmp
lret
fcmovbe
and
stc
cmp
gs
pop
das
mov
sar
sbb
push
adc
xor
repz
mov
cld
inc
pop
dec
aam
cmpsl
push
mov
push
push
es
jge
unpckhps
push
sbb
sbb
jne
mov
loopne
into
or
dec
movsb
sbb
cli
mov
fstpt
sbb
jnp
push
jp
mov
mov
iret
or
in
cmp
shrb
addr16
rcr
jbe
adcb
mulb
sub
cli
dec
add
jbe
mov
mov
mov
inc
les
xlat
je
movsb
test
stos
cmp
pop
mov
movsb
jl
pop
mov
movsl
mov
out
ret
repz
icebp
xchg
or
add
enter
mov
sub
jae
jno
test
pushf
je
es
lods
jp
in
adc
repz
cmpsb
fsubrs
xchg
daa
jmp
jb
cmpsl
sahf
inc
outsb
add
mov
ljmp
push
pop
gs
jnp
mov
xor
mov
sbb
test
cwtl
sar
dec
bound
inc
xor
call
xchg
cli
cmp
mov
out
jmp
push
movsb
fcmovb
pop
sub
ljmp
push
ficomps
movsb
ficoms
push
sbb
add
rclb
xor
divps
push
sub
dec
xor
jmp
in
pop
sbb
sub
sbb
jno
stos
cld
mov
push
xor
cmp
xchg
sub
cli
xchg
jbe
movsb
xchg
pop
aad
mov
pop
dec
scas
xchg
fsubr
jns
pop
test
jno
sub
mov
add
lods
out
js
xchg
cmp
hlt
push
inc
sbb
test
cld
movsb
inc
rcrb
cmp
lret
cmc
fdiv
and
xor
add
cmp
movsb
insb
sahf
mov
or
jno
enter
ss
push
fiaddl
bound
dec
imul
mov
sbb
mov
sbb
mov
pop
xor
mov
les
fistpl
rcl
leave
sub
out
fisubrs
xor
icebp
test
in
in
cmp
xchg
data16
imul
adc
ljmp
int
seto
shr
mov
cmp
pop
pop
les
xchg
icebp
dec
jno
mov
call
iret
ror
mov
lods
daa
and
cmpsl
push
jne
scas
pop
inc
push
push
dec
jmp
cmp
es
push
mov
push
or
jmp
test
movsb
cmp
inc
stos
sub
pop
lcall
lods
scas
lods
push
pusha
pusha
mov
add
enter
push
neg
mov
xor
pop
jnp
inc
or
xchg
adc
je
enter
push
mov
pop
pushf
cld
int
insl
pop
pop
repz
out
and
sbb
movzbl
sub
flds
mov
push
mov
movl
out
xlat
ficoms
bound
out
fwait
mov
in
pop
mov
mov
pop
test
xchg
add
mov
sub
nop
dec
jg
mov
mov
call
ret
inc
stos
test
sbb
xchg
add
hlt
andb
mov
xor
cmp
call
ficoml
stos
jmp
mov
mov
mov
leave
jecxz
clc
cmp
add
sbb
xorl
test
stos
xor
shl
inc
int
in
dec
mov
cld
in
cmpsl
loop
add
mov
add
movsb
jo
aas
testb
call
pop
outsl
or
sbb
movsl
cs
mov
lahf
push
adc
sbb
and
repz
xchg
sbb
xor
cmp
idivl
out
sub
dec
test
fcoms
pop
sbb
push
ret
add
sub
mov
sahf
cld
mov
sub
nop
cmp
inc
arpl
ret
pop
addl
sbb
cli
xchg
xor
test
loope
insb
inc
mov
inc
fisubs
mov
mov
cmp
xor
out
sbb
ss
test
shrl
outsl
jnp
in
sbb
cmp
cmc
leave
aad
loope
push
test
xchg
loope
cmc
sbb
stos
in
lea
fistpl
or
ret
jle
loope
add
mov
int3
push
dec
xchg
mov
fcompl
hlt
adc
fwait
outsb
mov
push
mov
dec
sbb
xor
mov
popa
sub
adc
pop
jns
sub
sub
xor
and
mov
mov
and
lods
jbe
cmpsb
sub
outsl
mov
sbb
xor
addr16
stos
cli
dec
ffreep
lcall
incb
jae
hlt
cmp
lret
and
js
ror
outsl
out
push
or
adc
inc
movsl
fisubl
add
and
jnp
lods
cmp
xchg
and
mov
cmc
ror
adc
addr16
fwait
int
fcomps
lret
xor
in
stc
pusha
xchg
stc
outsl
or
pop
lea
mov
jno
mov
push
add
dec
mov
test
sub
mov
fidivrl
mov
mov
pop
fistpll
hlt
mov
lret
sbb
mov
fistps
jmp
out
bound
in
inc
lret
add
sti
mov
dec
cmp
dec
dec
mov
xchg
adc
and
cltd
jnp
and
cmp
push
cmp
dec
je
lods
stos
into
or
lods
mov
xchg
cmp
cmc
mov
cmp
aam
push
mov
or
and
mov
mov
jmp
cmpsb
test
icebp
imul
test
add
mov
paddsw
loop
lahf
push
mov
data16
les
mov
mov
xor
cmp
lods
aad
push
fbld
mov
mov
xchg
sub
repnz
ljmp
sbb
xorl
xlat
addr16
pushl
bound
dec
pusha
test
mov
xchg
movsb
push
cmc
imul
push
mov
push
aas
push
testl
shlb
pop
add
aas
popa
pop
jmp
or
or
je
popf
push
les
jo
xor
insb
and
jne
lret
add
sub
lea
mov
lock
cmp
xchg
pop
pusha
xchg
stos
movsb
mov
fbstp
adc
neg
repz
push
pusha
mov
push
mov
addr16
insb
shl
cmp
push
lret
sub
mov
xchg
push
fnstenv
inc
push
xchg
push
inc
or
sbb
jbe
int3
mov
pop
push
sub
cmp
and
xchg
add
inc
cwtl
or
insb
mov
pusha
mov
mov
js
mov
push
push
aad
xor
ror
push
scas
sub
or
xchg
rcll
dec
sahf
jb
test
mov
cli
sbb
add
addr16
andl
inc
in
mov
pop
jge
xor
cltd
jnp
cmp
sub
jl
jb
sub
pushf
mov
jne
sahf
aam
ret
mov
push
movsb
in
or
lods
sbb
aaa
jge
jp
and
mov
movsb
cli
ds
aad
add
imul
outsb
dec
sub
loope
out
mov
les
mov
jne
mov
adc
add
bound
aaa
ret
stos
xchg
ret
out
push
fadds
mov
aam
jp
lea
leave
mov
es
jo
icebp
scas
xor
movsb
pusha
xchg
or
mov
rol
pop
mov
fistpl
sbb
cmpsb
or
sbb
xor
jb
out
enter
or
mov
popa
adc
into
fdivrs
stc
add
xchg
inc
cmp
cs
push
pop
ret
bound
fnsave
xor
xchg
sub
fimuls
outsl
sub
test
mov
les
test
gs
lahf
loop
je
mov
or
ja
cmp
cmpsl
xchg
push
jp
bound
out
sti
lock
jge
imul
lods
das
fistpll
jmp
fldl
adc
inc
pop
xchg
mov
mov
inc
inc
inc
rcrb
jbe
enter
or
or
inc
dec
loopne
testb
mov
repnz
or
rcrl
cmpsb
pop
rolb
into
cltd
and
push
sub
ljmp
inc
scas
xchg
push
mov
lock
fcmovnb
mov
add
pop
mov
jnp
mov
sbb
rorl
pop
mov
jp
stos
pop
dec
out
fisubs
leave
and
pushf
sub
sub
repz
not
ljmp
out
adcl
xor
cld
jne
xchg
imul
adc
movsb
push
sbb
imul
mov
xchg
in
dec
push
mov
shrb
popf
popf
xor
xor
xor
inc
cli
push
lret
ret
scas
mov
inc
mov
pop
cmpsb
mov
cmp
test
incb
sub
inc
sub
jnp
mov
into
insl
out
jge
dec
push
jg
mov
mov
sbb
imul
xor
sub
mov
mov
xchg
sub
sub
cmpsl
nop
push
fisttps
out
mov
out
jo
cwtl
push
popa
xor
ja
or
mov
and
shll
mov
mov
movsb
lods
add
out
popa
sub
jb,pn
cmpl
sub
ds
out
fstpt
cmp
ret
dec
inc
adc
push
mov
movsb
daa
stos
iret
lret
popf
mov
jle
xchg
pushf
inc
cmp
adc
repz
out
fs
xchg
adc
pop
push
loope
out
xor
and
sbb
adc
sub
pop
scas
lods
out
pop
clc
ljmp
or
push
sbb
xor
xor
outsb
insb
enter
cmpsb
jno
aaa
xchg
jns
push
jg
les
or
addb
sub
xor
mov
cmpsb
xchg
repz
jo
leave
lret
xchg
push
scas
add
test
push
mov
in
testl
pop
jno
ljmp
cwtl
pop
push
movsb
mov
dec
cltd
xor
in
pop
sbb
pushf
enter
inc
in
dec
adc
data16
aam
jae
sbb
shll
out
sbb
push
fcoml
adc
test
pusha
pushf
arpl
pop
xchg
lds
sub
mov
cmp
fsubrl
sub
loope
jle
inc
pop
movsl
and
jbe
lret
lea
push
mov
nop
iret
inc
inc
pop
lahf
jne
movsb
add
mov
dec
lods
mov
or
push
add
pop
jbe
mov
mov
scas
mov
or
les
pop
jb
pop
add
inc
insb
repnz
sbb
loope
pushl
cltd
mov
lcall
cmc
call
push
push
mov
xchg
push
cmp
ljmp
pushf
or
and
js
orl
cmp
aaa
mov
jno
mov
dec
mov
sbb
sub
hlt
gs
int
ret
pop
adc
les
add
ret
pop
outsb
pop
xchg
iret
sbbl
stc
and
mov
push
or
lret
aam
bound
mov
jp
xchg
lcall
cmpsb
add
mov
das
cmp
test
jle
into
shlb
sub
push
inc
icebp
add
sbb
cmp
loop
fstl
and
mov
arpl
mov
or
cmpb
test
adc
mov
sbb
stos
lcall
add
jbe
lods
sbb
movsb
dec
inc
mov
repnz
imul
movsl
inc
lods
int
jae
repz
scas
js
imul
ljmp
xchg
test
lock
pop
aaa
lods
push
and
popa
movsb
xorl
ljmp
push
call
test
push
aas
mov
aam
xchg
jbe
cmp
dec
push
fiadds
pextrw
movsl
je
movsb
in
aam
pushf
roll
andb
repz
push
jp
lods
mov
in
cs
mov
inc
movsb
dec
stos
sub
pop
push
xchg
js
sbb
and
mov
mov
push
xorl
lcall
movsl
cmp
das
xchg
or
pop
mov
lea
xchg
xchg
dec
xor
inc
movsb
cmp
pop
shll
fadds
test
jno
popf
es
xchg
dec
lock
ljmp
adc
clc
xchg
add
ss
xchg
push
shlb
stc
loopne
jp
cmpb
adc
mov
dec
mov
outsb
je
imul
sub
cmpsb
stos
pop
arpl
mov
icebp
sbb
loope
subl
lock
out
sub
sub
pop
ret
push
jo
sub
scas
movsb
fdivrp
mov
and
pop
pop
cmpb
js
mov
pop
bound
aas
ss
jb
mov
ds
enter
dec
in
cltd
or
jae
repz
adc
sub
jbe
clc
in
xchg
sub
mov
cs
ret
lret
xor
mov
call
and
pop
push
sub
mov
adc
sahf
fistl
insl
adc
ret
jnp
mov
xor
adc
inc
je
lcall
lcall
pusha
pop
cmp
mov
cmp
cmp
xchg
int3
xchg
add
in
mov
mov
nop
in
iret
popa
pop
idiv
and
push
jg
and
das
imul
jbe
sbb
imul
repnz
mov
in
mov
sbb
adc
mov
mov
add
cmpsl
mov
pop
mov
dec
lea
mov
or
inc
notl
dec
add
push
lods
cmpsb
rolb
cld
ljmp
pop
popf
xor
pop
xchg
lods
and
stos
cmp
jb
jecxz,pt
dec
or
sub
imull
xor
mov
pop
jge
out
mov
mov
mov
loop
xchg
pop
push
and
lods
cld
mov
sub
mov
out
xchg
lock
push
repz
test
mov
add
in
das
shrl
je
cs
movsb
popf
imul
jg
mov
sub
outsb
dec
jne
pusha
push
out
arpl
pop
icebp
mov
add
loopne
xchg
or
pop
shlb
add
xchg
out
pop
xchg
cld
outsb
jb
sub
nop
in
push
movsb
std
xchg
add
imul
enter
je
not
cmp
push
mov
push
xor
je
sarb
test
sub
insl
add
cmp
scas
dec
sti
sub
mov
sbb
xchg
imul
movsb
lods
xor
mov
mov
xor
and
cmp
bound
mov
mov
sti
mov
jg
ljmp
leave
pop
pop
jecxz
sbb
shl
dec
inc
scas
fisubl
movsb
cld
cmpb
cmp
xor
shlb
sbb
aam
rorb
stos
cli
jecxz
inc
dec
fdivrs
push
cmp
jb
dec
xor
lods
or
push
repz
mov
fsubrs
jge
mov
xor
jle
fsub
mov
xchg
cmpsb
lods
sub
xchg
fwait
stc
dec
sbbb
push
add
pushf
mov
push
mov
xchg
pusha
repnz
inc
shl
pop
mov
lock
cwtl
push
jne
addb
sub
loopne
adc
out
mov
clc
andl
mov
out
rcrl
fisubl
outsb
xor
scas
sub
xor
xor
sbb
mov
dec
dec
mov
daa
add
jb
adc
cmp
pop
xchg
sbb
push
hlt
adc
lcall
xchg
push
stos
xchg
lods
dec
mov
jmp
xor
sbb
movntq
mov
cli
cmpsb
movsl
and
jo
cs
sbb
jbe
aam
sub
stos
mov
pop
lcall
dec
mov
enter
jb
stc
jle
cmpb
sbb
inc
push
mov
test
cmp
sbb
mov
cmpsb
mov
out
loope
test
push
aas
push
pop
pop
outsl
pusha
imul
mov
and
pusha
add
mov
test
xlat
inc
movsb
xchg
shll
aad
rol
push
mov
dec
mov
jl
subb
pop
xchg
js
adc
dec
stc
mov
lea
ss
divb
sarb
xchg
or
pop
out
in
push
cmp
shl
orl
in
stc
bound
xor
or
xchg
jb
std
push
sub
jl
xor
out
loopne
cmp
sti
lock
jmp
cli
stc
call
jb
dec
adcl
push
sub
test
out
cwtl
dec
iret
adc
xchg
jle
mov
push
xchg
mov
and
loope
scas
dec
inc
lods
lea
dec
mov
inc
movsb
mov
pop
mov
push
les
mov
inc
sbb
inc
das
cs
scas
xchg
ljmp
xchg
iret
and
mov
inc
push
and
and
jns
push
imul
bound
in
pusha
pop
push
daa
xor
fwait
pop
pusha
mov
sbb
mov
mov
push
outsb
mov
jle
in
xchg
inc
icebp
insl
je
inc
call
and
inc
cmp
cltd
sahf
sahf
mov
daa
jno
mov
outsb
pop
xchg
push
cmpb
repnz
mov
mov
pop
leave
movsb
adc
push
sub
popa
jbe
ss
mov
sub
andl
pop
cmp
mov
push
jp
cmc
das
push
adc
int3
call
pop
jb
adc
jle
dec
push
dec
push
dec
adc
cmc
fs
outsl
dec
pusha
jbe
test
sub
cmp
movsb
loope
inc
insb
outsb
repz
outsb
jnp
fsubs
test
out
pop
push
leave
rcrb
dec
lahf
test
or
adc
sbb
stos
nop
xor
popf
rcrb
add
into
movsl
test
pop
add
cmp
sub
add
sub
ja
sub
inc
outsb
je
xchg
in
bound
je
dec
mov
in
jg
sub
mov
or
sub
add
xor
int3
adc
pop
dec
shll
mov
outsl
movsb
and
mov
jnp
fcmovbe
sarl
loopne
sbb
or
adc
dec
pop
scas
dec
jbe
imull
jno
cltd
and
xchg
mov
or
repnz
dec
fdivl
pop
insl
loope
and
int3
enter
add
sub
mov
add
xchg
dec
mov
pusha
mov
dec
push
int
out
out
pop
xor
arpl
shlb
xchg
cli
mov
repnz
adc
movsb
add
das
push
xor
mov
loopne
insb
adc
mov
push
or
sub
movsb
sbb
cmp
inc
inc
and
jbe
add
add
imul
cmc
pop
xor
lock
pusha
dec
shr
jge
cmpsl
fimuls
pop
dec
ret
sbb
inc
pop
jmp
push
scas
fldcw
imulb
pop
mov
mov
sub
stos
and
daa
sub
add
test
cmp
enter
lcall
cmpsb
mov
push
cld
insb
sub
movsl
cmc
xor
insb
sbb
pop
rol
cmp
leave
pop
cmp
mov
pop
and
dec
sbb
pusha
xor
push
jg
pop
sbb
lods
dec
inc
xchg
cmp
mov
inc
mov
adc
or
inc
mov
sub
mov
pop
add
jo
pop
cmc
in
sub
or
aad
jl
outsl
lcall
ja
add
and
pinsrw
int3
mov
xchg
mov
cmpl
mov
sub
jb
lret
xor
enter
scas
outsl
pusha
jnp
popf
cs
xor
push
lods
xchg
aas
pop
stos
sub
shrb
out
mov
push
outsb
in
aad
adc
sahf
push
std
loope
pop
dec
mov
push
scas
movsb
ret
das
xorl
test
lods
and
lods
aad
or
cmp
pusha
inc
setae
mov
sub
jnp
nop
loop,pn
push
sub
lret
lea
stos
repnz
adc
les
xor
mov
test
pop
lods
cmc
ret
add
or
in
lea
mov
xlat
imul
lcall
push
add
mov
sub
and
enter
jbe
pop
test
jge
int3
call
cmp
and
decl
decl
repnz
pop
xchg
cmpsl
pop
sub
sub
std
add
jns
jb
outsl
stos
sub
imulb
nop
clc
rolb
inc
cmpsl
mov
aam
cs
pop
movsl
ljmp
or
cmovge
and
pushf
mov
sbb
mov
out
cmp
test
lods
push
insb
cli
pusha
int3
push
insb
sub
and
and
mov
xlat
dec
mov
cmc
push
cli
jns
sbb
loop
fisttpl
push
mov
sub
mov
and
imul
movsb
adc
adc
lea
mov
adc
xchg
push
mov
testb
and
adc
lcall
aaa
out
push
pop
sub
push
dec
ret
sub
pop
lds
sahf
cmpsb
shlb
insl
xchg
cltd
mov
fwait
or
mov
cmpb
lock
dec
pop
xlat
mov
lret
dec
repz
jp
mov
addr16
push
lahf
scas
stos
repz
fistpll
adc
aam
xchg
das
jno
lods
shll
jmp
fadd
and
pushf
mov
sbb
js
outsl
inc
repz
lea
mov
or
movsb
loope
imul
es
ret
bound
stc
in
je
push
mov
sbb
lret
std
pop
sbb
dec
adc
add
inc
stc
pop
push
scas
push
out
add
and
jo
lidtl
mov
psubsb
das
sub
imul
daa
adc
xorl
jecxz
sub
jge
ret
mov
jle
sarb
mov
hlt
loop
pop
int3
jg
or
push
inc
scas
sbb
jecxz
int
lods
or
das
into
xchg
gs
lds
mov
adc
js
xchg
fimull
inc
sbb
and
mov
or
in
test
test
mov
sub
rcrb
leave
fcmovnu
das
mov
out
pop
out
cmp
ret
cmpsl
xor
cmp
cmpsl
or
lcall
inc
les
cmp
dec
mov
ss
stos
mov
or
inc
push
lods
insb
inc
sub
mov
rolb
imul
push
cmp
mov
sub
adc
into
add
xchg
insl
mov
dec
sub
push
adc
mov
xorb
lret
add
mov
in
jbe
push
mov
sub
in
mov
imul
xchg
lcall
testb
in
jo
bound
mov
mov
loope
bound
push
enter
pop
sbbb
repnz
ljmp
xchg
cmpsl
movsb
xchg
popf
jmp
repz
mov
mov
adc
mov
cmp
adc
jb
dec
mov
sbb
das
sub
rorl
mov
mov
inc
out
pop
pushf
iret
cmpsl
lahf
pushf
fimuls
aad
pop
mov
lcall
stos
mov
mov
and
leave
jb
jo,pt
test
movsl
inc
bound
mov
outsl
js
sbb
loopne
data16
add
lret
ss
mov
push
cmp
and
popa
mov
bound
out
shrl
jns
sbb
aas
out
fwait
ret
xor
sub
scas
push
and
jbe
cmp
inc
sbb
sub
add
pop
push
sbbl
dec
es
rcrb
xor
jo
cmpsl
je
lcall
sbb
ss
movsb
adc
mov
pop
and
mov
fiadds
pop
lret
push
adc
push
pop
into
dec
xlat
ljmp
mov
ret
jnp
cmc
rcrb
es
xchg
enter
jmp
ficompl
mov
add
hlt
mov
lods
cmp
fisubrs
jno
mov
addr16
sbb
mov
dec
cmp
ret
sbb
imul
pusha
addr16
push
mov
orl
jle
jge
in
sbb
dec
cmpsb
pop
outsb
inc
pushf
stos
test
arpl
dec
nop
ljmp
jg
ss
mov
sbb
cmpsl
xor
dec
loopne
mov
aaa
ja
movsl
mov
mov
adc
jnp
cli
cmp
imul
aas
in
inc
rcr
lret
negl
dec
or
andb
mov
sub
dec
sbb
jge
in
sub
stos
cli
jb
idiv
stos
sub
jmp
jle
es
stos
sahf
mov
rorb
lock
lods
out
xorl
mov
inc
or
mov
push
dec
add
or
sbb
or
out
mov
fildl
sub
mov
in
jle
xor
sarl
gs
stos
aam
or
adc
in
xor
dec
out
getsec
and
jo
ds
sub
or
xchg
dec
fucomip
xor
sti
cmpsb
data16
mov
xlat
mov
scas
das
hlt
inc
xchg
loop
ret
into
lret
outsl
adc
daa
or
add
lods
or
or
jg
mov
cmpsl
in
mov
inc
ljmp
sub
sarl
jb
xor
into
out
add
sbb
std
push
mov
dec
pop
and
push
dec
dec
pop
jb
das
jbe
ljmp
add
addr16
xchg
pop
rorl
ljmp
xor
push
mov
ret
ss
movsb
bound
cmp
arpl
jb
repz
mov
test
stc
jbe
add
mov
inc
cmp
pop
scas
xchg
sub
push
cmp
aam
in
mov
stos
pop
mov
xchg
mov
bound
rcr
adc
xor
fldt
fldl
pop
mov
inc
mov
je
iret
inc
ljmp
cmp
mov
mov
sub
idiv
shl
jle
js
inc
xchg
les
pop
jmp
test
adc
movsl
jp
pusha
popa
adcl
adc
add
inc
dec
arpl
sub
jbe
movsb
or
stc
mov
repz
mov
jge
sub
mov
icebp
push
dec
xor
repz
icebp
push
sbb
push
rcrl
fiaddl
arpl
icebp
pop
and
sub
fcomps
sub
xor
mov
test
xchg
out
or
mov
cmp
in
fmul
movsb
fcomps
inc
lea
push
push
push
inc
insl
repz
pop
and
mov
sub
jae
data16
repnz
pop
out
repz
notb
mov
mov
xor
movsb
cmp
roll
mov
mov
push
or
jb
movsb
andb
xor
lds
pushf
subl
mov
adc
pop
call
xor
xchg
and
sub
push
movsb
out
mov
mov
addb
mov
fidivs
fwait
sub
das
xchg
adc
loope
leave
in
sbbl
cmpsb
mov
inc
push
fmulp
pop
jecxz
iret
clc
addr16
jb
push
das
or
ret
push
les
lret
sub
pop
aam
and
inc
mov
dec
iret
sub
cltd
adc
add
jecxz
push
or
push
movsb
add
shlb
stc
imul
adc
lds
fidivrs
lea
xor
pop
loope
rcrl
sti
cld
in
mov
fs
pop
pop
sub
loop
outsl
and
and
sub
mov
cli
in
lret
xchg
movsb
dec
xor
xchg
test
pop
enter
adc
in
dec
cmp
jne
mov
nop
movl
pop
inc
jle
lcall
or
cli
push
cwtl
add
test
in
lods
dec
mov
xor
dec
jns
repz
dec
fbstp
enter
jle
out
and
lods
jae
mov
int3
pop
clc
sbb
or
pop
and
inc
push
adc
stc
inc
les
mov
xor
cmpl
aad
ror
xchg
js
cmp
leave
rcll
stos
js
es
insl
cmpsl
cmc
rcrb
inc
mov
stos
xchg
push
addr16
push
mov
lods
push
enter
outsb
scas
aas
iret
aam
push
pusha
scas
pop
xchg
push
add
push
sti
xor
cmp
call
aad
xor
mulps
in
push
test
fidivrl
fsts
dec
fnstcw
adc
xor
mov
mov
inc
push
cmp
out
int3
inc
and
scas
mov
and
cmpsb
movsb
cli
and
gs
aad
add
lods
stc
je,pt
movsl
sbb
inc
lods
mov
shr
dec
dec
lret
sub
lds
arpl
pop
pop
inc
scas
mov
push
out
sbb
bound
inc
mov
psllq
mov
ret
push
adc
nop
ret
leave
push
lock
push
clc
scas
and
adc
lret
adc
or
je
xorb
dec
stos
inc
icebp
mov
pop
je
pusha
xlat
jp
jbe
cmp
pop
lds
int
xor
dec
pusha
dec
scas
pop
xor
or
fildl
jnp
and
stos
adc
mov
xchg
std
fwait
push
sbb
cli
movsb
xchg
adc
sub
cmp
inc
mov
das
stos
out
jle
xchg
mov
sbb
imul
or
jmp
test
pusha
push
cmp
xor
jbe
movsb
ss
or
push
cmpsb
push
nop
mov
xor
lods
ret
xor
fcmove
xor
jno
push
aas
xchg
aam
push
cld
lcall
mov
cmovns
repz
loopne
sub
ds
and
movsb
addr16
jmp
adc
lcall
outsl
mov
cmp
jbe
cvttps2pi
xor
ret
add
xor
out
xchg
jbe
fwait
es
shll
sub
mov
dec
push
movsb
es
push
in
nop
cmp
sbb
ljmp
jne
fs
outsl
adc
fidivl
loop
xor
pusha
xlat
ret
jp
in
and
cmpsb
cmp
cwtl
lcall
xor
outsb
cli
cmpl
dec
leave
ret
dec
test
push
cmp
push
add
sbb
pop
addr16
mov
movsb
cmp
mov
mov
add
sbb
jle
mov
inc
mov
adc
add
ljmp
xor
cwtl
ljmp
jnp
push
mov
repz
inc
sub
stc
pop
mov
push
xor
add
adc
in
rorl
data16
bound
cwtl
jns
jb
or
push
pop
iret
sub
jnp
mov
loopne
notl
and
enter
mov
das
movsb
in
scas
stos
sub
scas
cmp
inc
sub
mov
mov
pop
test
xor
mov
xchg
stos
pop
ljmp
sub
pop
lcall
xchg
fcoms
jge
xlat
lock
pusha
mov
add
jnp
test
pusha
sti
mov
insb
jb
ret
pop
popa
stc
insl
mov
jno
adcb
mov
mov
repnz
or
fldl
in
xor
sbb
in
lcall
aad
stos
mov
push
aam
sub
mov
lahf
xor
jae
out
lods
xor
jecxz
popa
aam
xchg
push
inc
pop
push
lods
add
push
out
arpl
call
les
lcall
adc
lret
mov
xchg
sbb
xor
inc
ljmp
ss
add
popf
divl
mov
mov
ss
push
out
dec
out
xchg
cmp
cmp
scas
cmp
sub
mov
push
jne
cli
sub
orb
push
cli
pop
lods
push
xchg
arpl
ret
mov
pop
mov
cmp
sub
pop
push
test
mov
mulb
lods
mov
dec
mov
dec
pop
mov
xor
add
call
dec
jbe
and
mov
cld
dec
push
cmp
mov
movsl
in
mov
sti
xor
mov
pop
addl
sub
cmpsl
mov
xchg
test
xchg
mov
xchg
mov
dec
adc
arpl
orb
push
sbb
jne
xorl
cli
pop
adc
cmp
push
aaa
push
jb
aaa
mov
and
test
push
mov
xor
mov
push
or
adc
push
das
aad
mov
push
sbb
add
xchg
mov
and
shr
movsb
xor
ds
pusha
out
mov
dec
mov
stos
and
iret
fs
arpl
sahf
dec
push
lods
mov
mov
lea
iret
xlat
inc
leave
cmp
ljmp
repz
or
inc
mov
mov
pop
leave
xchg
ljmp
xor
movlps
je
and
sahf
out
mov
jp
or
in
ds
xchg
sub
push
cld
call
dec
aas
dec
arpl
lcall
leave
loopne
sub
negl
mov
cli
stc
imulb
pop
xchg
popf
mov
imul
push
xchg
into
aam
std
stos
mov
pop
insb
lcall
or
stos
aas
decl
mov
and
popa
sub
out
cmpsb
xchg
dec
lret
jne
je
or
imul
sub
cld
data16
pop
mov
xchg
in
int3
add
adc
mov
pop
jo
fucomip
jmp
loope
sbb
stc
stos
mov
mov
repnz
cmpsl
push
mov
stos
cmp
sub
sub
push
ret
or
or
aad
dec
fsubr
insb
fdivl
or
mov
ret
lret
fcmovu
imul
dec
xchg
ss
add
pop
js
jb
mov
mov
cwtl
fs
pop
mov
inc
adc
movsb
mov
hlt
outsb
leave
jmp
sbb
icebp
sub
and
push
jecxz
insb
xchg
pop
mov
es
and
jno
push
je
pusha
lret
or
jbe
stos
pop
xor
scas
sub
pop
xor
and
sbb
push
imul
pop
mov
push
mov
nop
enter
insb
lods
mov
movsb
adc
mov
outsl
das
lea
addr16
sbbl
cmpsl
pop
lea
sub
xchg
test
pop
jge
movsb
push
mov
add
fcomi
shrl
das
sub
push
dec
fisttpll
pop
arpl
adc
das
je
push
enter
stos
insl
cmp
dec
jb
lcall
lds
lea
jp
mov
mov
jae
mov
ds
lcall
out
pop
int3
cltd
and
sbb
imul
lcall
xor
and
int
in
stc
jmp
push
popf
in
or
pop
subl
aaa
pop
mov
outsl
push
dec
mov
mov
push
pop
and
jmp
mul
mov
push
and
shlb
cld
fwait
push
ret
cmp
push
jbe
cmp
sbb
sub
out
pop
das
movsb
xor
mov
das
cmpsl
movsb
or
sbb
stos
lret
lods
repz
popf
insl
popa
jno
outsb
or
mov
lret
mov
add
cmp
lea
jno
inc
dec
insl
loope
jge
lahf
mov
and
loop
pop
mov
add
dec
jb
movsb
mov
fs
pop
pusha
mov
push
data16
scas
pushf
sub
push
pushf
notl
xchg
cmpsl
sbb
out
jb
inc
and
jmp
sub
xchg
insl
sub
fsubr
addr16
dec
mov
clc
lea
add
loope
and
pop
xor
add
jns
repnz
mov
mov
adc
js
mov
mov
pop
sub
cmp
ss
stos
pop
jns
push
pop
iret
xchg
movsb
shl
mov
inc
mov
adcb
sahf
push
or
sahf
push
push
mov
sub
xor
lcall
cli
insb
xor
icebp
xchg
fsts
cmpsl
in
idivl
ud0
sub
xchg
pop
out
adc
ret
mov
bound
sbbb
mov
lods
dec
add
dec
pop
push
les
xchg
test
jbe
movsl
in
lock
idivb
jl
fidivrl
repz
push
test
pusha
das
bound
dec
or
call
addl
xor
mov
enter
or
in
repz
mov
or
cmp
xchg
test
loope
mov
je
inc
mov
jae
cmp
push
push
push
sub
bound
outsl
imul
or
fwait
test
jbe
dec
icebp
jns
jno
scas
xchg
cmp
xor
jno
mov
jno
fdivrs
xchg
call
mov
stc
out
cmc
loop
pop
dec
xchg
mull
sub
stc
pop
cmpsl
and
jmp
inc
cmc
push
inc
dec
jbe
fcoml
outsl
leave
scas
mov
jle
jb
ret
add
xchg
mov
dec
loop
jge
mov
push
mulb
inc
outsb
out
loopne
mov
lcall
ss
nop
mov
push
fcoms
inc
cmp
jns
je
jecxz
inc
ljmp
fmull
mov
pop
xchg
fsubr
int
lock
inc
into
mov
movsl
mov
dec
subb
xor
stos
aas
dec
mov
dec
aaa
aam
jo
and
movsl
xor
inc
inc
movsb
xchg
or
sbb
dec
rcr
outsb
and
pop
adc
ds
and
insl
nop
add
pusha
jne
dec
mov
cmp
sub
pop
xor
mov
push
cli
push
pop
push
jmp
mov
enter
ds
and
mov
pop
mov
push
push
mov
jle
mov
jmp
dec
sbb
jns
loop
in
lods
cmp
mov
test
pop
push
rorl
adc
cmp
mov
cs
roll
fisubrl
incl
sub
scas
pusha
cs
mov
mov
jecxz
pop
push
xchg
push
xchg
stc
mov
cmc
leave
pop
ret
into
cmp
test
fisttpll
adc
js
aad
sub
nop
fimuls
xlat
push
arpl
int3
lcall
adc
js
sub
xor
mov
jnp
daa
addl
cmpsb
or
dec
push
push
aad
or
mov
lods
bound
cmp
mov
shlb
adcb
imul
lret
mov
pop
mov
add
or
jb
jo,pn
data16
add
jmp
lods
xchg
jmp
jno
mov
and
in
jge
repz
negb
dec
push
or
je
pop
pop
sbb
movsb
shll
xchg
gs
lea
movsb
mov
push
pop
pusha
mov
outsb
sbbb
mov
fimull
ljmp
or
inc
movsb
mov
sbb
cmp
in
or
dec
inc
jno
icebp
and
xchg
jg
popa
xor
in
push
push
pushf
mov
dec
dec
negl
icebp
out
jge
mov
js
pop
sub
daa
ret
fsubr
xchg
dec
icebp
movsb
push
adc
pusha
inc
bound
pop
lods
push
imul
sub
jg
data16
jmp
ret
sub
scas
bound
pushl
cmpsb
repnz
test
sahf
push
mov
mov
cld
sbb
mov
fs
mov
mov
or
xchg
aaa
iret
into
test
push
aaa
lcall
xorl
sbb
aas
movsb
pop
jle
and
dec
cmp
mov
orb
test
and
sub
icebp
popa
iret
xchg
xor
jne
add
sbb
loope
dec
sbb
lret
out
arpl
cli
pushl
push
jecxz
add
movsb
movsb
mov
test
in
pop
out
inc
rcll
stos
inc
mov
xchg
jnp
loopne
inc
inc
ss
mov
jmp
es
lds
dec
push
push
das
icebp
ja
mov
dec
daa
rcll
jmp
lods
mov
fmull
jnp
pop
sbb
inc
xor
gs
rolb
mov
pop
int
pop
insl
cltd
mov
mov
fnstcw
fucomp
int3
mov
xchg
roll
mov
jnp
popa
insb
xchg
ret
jmp
push
push
ja
xor
mov
push
scas
test
dec
vpshufd
out
mov
sub
ret
and
jnp
cltd
mov
inc
sub
lods
xchg
iret
stos
push
cmp
adc
mov
ficoml
add
pusha
out
ret
lcall
jmp
mov
call
sub
pop
push
das
sub
in
or
push
lea
sbb
ret
xlat
ljmp
jne
push
fsubrs
scas
push
in
push
xchg
into
mov
dec
sub
mov
xor
sbb
insl
fildll
lods
and
xor
xchg
out
test
cmp
das
cwtl
mov
ja
xor
lret
sbb
mov
mov
inc
adc
add
int3
add
mov
stos
pop
out
fbld
fldt
fwait
push
sbb
mov
insl
lds
repz
repnz
xchg
inc
jbe
sub
out
mov
movsb
andnps
jp
ds
lcall
mov
aas
lahf
rorl
negb
orl
xchg
adc
pop
daa
andl
lea
mov
aaa
lods
pop
sub
neg
dec
nop
fdivrs
xor
push
sub
push
inc
jns
shll
fld
je
imul
test
les
stos
pop
in
gs
mov
cmpsl
roll
add
sub
and
outsb
in
push
push
lds
daa
dec
mov
pop
fwait
imul
mov
adc
ret
das
inc
insl
mov
outsb
dec
movsb
popf
aad
clc
mov
shrl
pop
repz
push
popf
sbb
cwtl
int
xchg
and
lods
adc
mov
xchg
cmp
adc
negl
sbb
fs
jb
jle
loop
jl
roll
jmp
xchg
push
mov
mov
loope
add
mov
adc
or
lahf
cmpsl
inc
xchg
loope
cmp
xchg
icebp
push
dec
movsb
out
lret
sub
sub
mov
jg
pop
shrb
pop
shl
push
out
fcompl
movsb
scas
popa
push
pop
insl
mov
inc
jb
dec
pushf
lret
sub
jns
and
and
push
or
pop
add
or
mov
popf
jb,pt
jge
test
sub
loope
pop
outsb
imul
data16
mov
cmp
mov
mov
shlb
xor
push
dec
fldenv
lods
or
lret
iret
testb
lcall
mov
inc
imul
negl
add
repz
cmp
or
pusha
xor
stos
cld
stc
jge
jb
lock
inc
lods
push
imul
add
push
push
arpl
insb
aaa
in
jb
sbbb
mov
sub
mov
movsb
lods
xchg
inc
pop
loope
xchg
fnsave
sub
ja
dec
jmp
mov
movsb
ret
and
shlb
shrb
pop
or
sbb
jge
out
xor
fisubl
mov
incl
dec
out
cs
leave
cs
fdivl
and
mov
mov
and
mov
nop
pop
fnstcw
enter
iret
inc
out
fsts
loopne
mov
inc
inc
sbb
adcb
jne
nop
sub
in
repz
pop
in
lods
int
jmp
cmpsb
gs
hlt
lret
scas
imul
fldlg2
scas
dec
mov
out
divl
out
or
push
xorl
rcll
xchg
or
stos
fcoms
dec
movsb
adc
int3
cmpsb
add
cli
dec
sbb
sbb
in
fmull
outsl
jns
cmp
sub
xchg
xchg
add
mov
repnz
lods
adcl
mov
pop
cmp
or
inc
and
lea
in
cmp
stos
popa
jne
push
cmp
add
cmp
test
imul
push
sbb
sahf
pusha
or
add
xor
pop
or
test
shlb
adc
mov
mov
clc
or
lcall
cld
mov
mov
adc
jecxz
int
out
sbb
sub
sub
add
ret
or
xchg
hlt
and
mov
insb
testl
arpl
pop
push
lods
mov
sarb
shll
adc
and
and
ja
bound
adc
fcomps
ret
xchg
jecxz
push
ret
sub
lret
cwtl
jmp
enter
repnz
dec
sbb
subb
inc
mov
pusha
pop
inc
out
jge
adc
int3
mov
subb
fcoms
mov
mov
mov
xchg
xchg
lods
mov
sbbl
jo
mov
jae
rcl
gs
notb
movsb
divl
mov
aaa
dec
enter
cmp
xor
mov
sub
add
or
fstl
adc
mov
mov
xor
aaa
jl
cmpsb
mov
mov
mov
int3
sahf
mov
loope
xor
sub
adc
inc
inc
idiv
cs
and
push
or
popa
dec
xchg
sub
ret
mov
scas
lods
mov
sbb
repnz
xor
jb
fidivrl
mov
mov
mov
jbe
inc
call
int3
add
add
mov
xchg
aam
lcall
and
popf
jbe
push
das
fildll
pop
pop
stos
sub
push
fidivl
pop
mov
shll
inc
and
mov
movsb
push
add
ljmp
int
jnp
or
ss
push
inc
into
xchg
xor
pop
insl
lea
xor
pop
inc
imul
jbe
lods
sahf
shlb
imul
jecxz
bound
adc
aam
jns
fidivrl
xor
jmp
dec
cmp
pusha
outsb
jge
lock
in
jmp
repnz
pop
jnp
in
xor
push
int
pusha
push
rep
xor
mov
lcall
popa
mov
outsb
push
mov
pusha
dec
add
fimull
rcrl
js
cmp
mov
push
lods
xor
xor
lcall
aad
xlat
xchg
cmpsb
add
mov
sbb
inc
loopne
bound
xchg
hlt
adc
xlat
ret
sbbl
test
jae
or
inc
or
lods
mov
jg
ljmp
fisubl
addr16
insl
mov
fimull
add
in
mov
sti
lods
and
or
fldenv
aas
jno
rolb
jge
test
add
ljmp
push
mov
mov
movsb
pop
rolb
mov
pop
cmc
push
add
xor
xorl
scas
mov
pusha
push
int
mov
stc
cmp
sahf
mov
bswap
xlat
hlt
and
xchg
int
or
mov
mov
ja
sub
lahf
fistps
out
jge
dec
ret
mov
mov
add
lods
mov
sub
push
push
lods
imul
sub
adc
fsts
pop
popa
lret
ss
push
cmp
sarl
rolb
jp
test
punpcklwd
addr16
adc
xor
adc
test
fwait
je
pop
imul
fcomps
mov
cmp
xchg
push
das
add
or
xorl
fcoms
inc
push
mov
lods
pop
cmc
pop
adc
dec
sbb
inc
nop
mov
out
in
lock
xchg
jno
and
and
lret
stc
pop
pushf
xchg
aas
das
or
or
push
loope
loope
mov
push
clc
sub
lods
push
sarl
jbe
rep
mov
sbb
fadd
mov
sub
adc
xorl
jb
mov
ds
ja
adc
cs
aam
fstpt
mov
adc
pop
cmp
je
add
sbb
scas
inc
lods
test
and
push
push
outsb
into
mov
cmp
mov
cli
or
rcrl
sbb
inc
xor
cmpsb
jmp
mov
insl
loop
cmpsb
loope
call
adc
jae
pop
iret
xchg
or
sbb
push
sub
push
out
sub
jp
icebp
fs
cmpsb
xor
loope
ljmp
movsb
ljmp
dec
lock
outsb
push
ficomps
and
enter
repnz
mov
push
inc
dec
stos
pop
adc
dec
icebp
lds
ljmp
mov
cld
mov
repnz
sbb
xorl
lock
cmc
mov
iret
sbb
add
or
sub
inc
outsl
pop
testl
cvtps2pi
mov
sbb
sbb
or
fstpt
aam
lds
xor
out
lcall
sbb
xchg
mov
adc
mov
fisubs
and
lret
mov
lods
das
sbb
sub
lods
push
xchg
and
sub
sbb
mov
sahf
pushf
push
jge
and
jp
sub
sbb
gs
mov
aaa
xorl
movsl
sbb
loopne
jnp
dec
lea
scas
inc
dec
movsb
les
xor
bound
dec
dec
jmp
fwait
sub
into
and
pop
push
fs
lcall
and
inc
cwtl
pushf
push
out
add
in
xchg
aam
dec
cmp
lmsw
lret
gs
test
mov
inc
repz
mov
repz
fcomps
js
stos
rcll
lds
stos
je
or
mov
xor
js
movsb
and
aam
enter
sub
cltd
pop
ljmp
or
mov
or
jae
cmc
pop
mov
out
movsb
pusha
dec
adc
push
iret
add
mov
lods
mov
push
mov
sbb
idivl
faddp
sahf
js
test
lods
and
xchg
mov
ljmp
int
dec
insb
xor
lds
enter
ret
lcall
stos
pop
add
lea
or
pop
jb
lahf
add
xchg
dec
dec
sbbl
cs
movsb
outsl
rcrl
xchg
push
test
scas
cs
dec
mov
lcall
push
adc
sbb
jbe
cmp
push
addr16
in
mov
sbb
hlt
mov
enter
into
icebp
out
and
ss
popf
ret
sbb
inc
aaa
and
andl
sbbb
mov
scas
push
fs
xor
addr16
pop
clc
repz
inc
and
sub
subb
fnstenv
sahf
ljmp
inc
jno
mov
shlb
loope
pop
fadds
test
fwait
orb
repnz
jb
jge
fmuls
leave
movsb
outsl
call
insl
cmpsl
ret
dec
dec
out
cld
icebp
inc
dec
arpl
push
dec
scas
sub
jmp
pop
xchg
insl
and
mov
sti
outsb
mov
and
test
adcb
das
mov
inc
ljmp
jge
pop
stc
icebp
aad
jb
lods
and
ret
sub
mov
mov
mov
sbbl
int
aaa
dec
or
movsl
std
sahf
push
aam
add
lods
add
lds
rep
add
jb
imul
mov
ret
pushf
test
inc
sahf
jae
jb
je
or
mov
cltd
mov
int3
in
mov
jne
push
call
hlt
imull
push
mov
and
inc
mov
xor
xchg
fiaddl
cmp
pop
jle
mov
push
aad
mov
outsl
jge
test
sub
outsb
call
jo
ror
jmp
scas
shl
xchg
cmp
cmc
ljmp
cmp
push
movsb
xor
lods
mov
orl
fwait
lcall
rcl
pop
cmpb
pop
rclb
mov
bound
mov
dec
jmp
fdiv
push
into
cmpsl
call
jg
xchg
dec
add
cmp
push
ja
enter
js
and
dec
mov
mov
mov
int
dec
push
stos
scas
xchg
outsl
dec
jb
testl
xor
adc
lea
add
in
add
popa
jge
jae
repnz
push
pop
aam
maxps
jbe
call
stos
xor
pop
pop
sti
iret
das
cmp
jmp
inc
stos
int3
sub
xor
push
jmp
in
icebp
in
inc
das
pop
mov
je
call
leave
jbe
sbb
inc
mov
pop
jno
xlat
mov
scas
inc
lahf
fsubrl
adc
pop
ret
lods
inc
jbe
xor
adc
packuswb
cld
xor
fidivl
lods
dec
mov
imul
add
test
sub
cmp
js
cli
xor
cs
ljmp
cmp
sub
lds
bound
xor
mov
push
pop
pop
mov
adc
jns
jp
lea
out
sbb
xor
lcall
sub
inc
mov
movsb
stos
sub
jnp
bnd
jne
pushf
xlat
cmp
daa
mov
fiadds
cmp
fisubrl
repz
dec
in
out
jns
fstpt
repz
cmp
movsb
jle
sub
stc
repz
bound
addr16
cmpsl
add
loope
scas
adc
add
push
ljmp
lcall
cs
lahf
imul
in
cmpsb
push
and
sahf
mov
int
lcall
out
cwtl
outsb
sub
lcall
jo
dec
outsl
cmpsb
call
dec
mul
jbe
inc
enter
stos
fcomps
data16
enter
xor
bound
lret
sub
sub
mov
lds
xchg
mov
daa
push
lcall
jno
push
inc
push
in
pop
cmpb
mov
cmp
dec
inc
push
jno
outsb
mov
sub
jae
jbe
popaw
mov
imull
mov
loope
repnz
and
push
inc
loope
call
mov
pop
dec
into
insl
sub
dec
xor
mov
lcall
subb
filds
add
fwait
sub
cld
pop
repnz
or
sub
stos
add
data16
xchg
and
xor
scas
rcrl
mov
enter
jo
cltd
ret
int3
je
ss
inc
in
fsubs
mov
mov
lods
sub
and
pop
mov
aam
pop
cld
inc
xchg
arpl
sbb
dec
insb
jl
sub
and
leave
mov
leave
sub
rclb
repz
jbe
dec
int3
cmpsb
rclb
jae
xchg
jge
insb
stc
mov
jb,pn
stc
push
leave
jmp
stos
push
insb
xlat
xor
mov
jecxz
jne
dec
or
cmp
fmull
negb
leave
dec
dec
xor
pop
lcall
jae
push
lcall
adc
or
xor
mov
pop
push
mov
repz
lea
lcall
repz
pop
mov
push
mov
iret
jb
ja
int
xor
dec
inc
jns
out
adc
leave
mov
movsb
adc
dec
stc
cmpsl
xchg
cmp
fwait
bound
out
mov
outsl
and
int3
jge
sub
sbb
ficoml
adc
cmc
movsl
push
frstor
mov
lcall
das
popa
xchg
pop
xor
test
cwtl
mov
incl
fnstcw
fbld
pop
scas
outsb
mov
pop
sbb
fisubrl
mov
mov
clc
lods
xor
sub
dec
int
imul
ret
ja
or
fnsave
and
sbb
xorb
mov
and
sub
movsl
cmp
dec
pop
daa
cltd
mov
mov
add
les
jo
popa
dec
clc
das
cwtl
mov
ja
roll
sbb
movsb
mov
sub
jmp
fisubrs
cld
inc
repnz
das
mov
enter
mov
mov
sar
xchg
xor
cmp
jecxz
in
xchg
mov
das
inc
cmp
mov
pop
mov
push
pushf
mov
pop
push
imul
jmp
lock
roll
testl
stos
cmpsb
xor
lods
cli
shrb
lods
arpl
push
and
ret
loope
or
das
popa
aam
cli
push
mov
adc
or
xchg
fisttps
jp
mov
enter
rcrl
jno
cmp
jb
pop
adc
lea
je
dec
das
leave
rcrl
nop
cli
or
sub
push
rolb
ja
out
jl
xchg
and
or
jmp
imul
xorb
jmp
outsb
cmp
adc
jbe
mov
lfs
aaa
movsb
cmp
rorl
mov
xorl
lods
cltd
xor
stc
loopne
int
sbb
aas
or
push
xchg
inc
jmp
sbb
ss
xor
xchg
into
mov
aas
leave
rcr
out
sarl
mov
inc
cld
xor
inc
add
and
fsubrp
sbb
cmp
and
xchg
movsb
cmp
aad
ljmp
jno
xor
cmp
dec
pop
xchg
stc
std
sti
mov
int
repz
arpl
pop
ss
push
add
cmp
jbe
jb
mov
fsts
out
sub
push
int
jae
sub
andb
pminsw
andl
mov
xchg
iret
push
mov
data16
sub
add
inc
loop
test
push
test
add
mov
out
xchg
mov
jno
sti
rep
add
jno
shlb
mov
sub
inc
imul
cmp
cmc
call
push
push
jb
pop
fisttpl
cmp
push
sub
mov
mov
lods
sub
xor
frstor
adc
lret
ret
lods
sti
sbbl
out
mov
mov
jmp
push
lods
insl
out
sahf
ljmp
mov
cmpsb
bound
or
xlat
inc
fdivr
pop
rcll
lock
and
xor
jmp
and
pop
aam
cmp
cli
mov
mov
addr16
xchg
jne
nop
sahf
sarb
pushf
adc
aam
lock
jge
daa
and
mov
in
push
rolb
dec
movsb
test
out
sar
mov
add
push
jo
ljmp
cmp
fsubs
cltd
dec
shrl
dec
jbe
cmp
cmc
scas
jne
subb
stos
stos
fstps
insl
jae
sub
setl
xor
add
pop
je
data16
add
push
push
loop
dec
or
mov
ret
ja
pushf
orl
xchg
add
inc
jb
mov
xchg
mov
lds
dec
bound
jecxz
add
add
lret
mov
fmull
in
fsin
shrl
push
jns
mov
scas
cmp
fmul
popf
jns
jno
xchg
sub
pop
adc
push
dec
cld
mov
lock
jmp
stos
jg
cltd
repnz
add
pop
and
mov
shrb
lods
xor
aad
addr16
mov
mov
sbb
ret
xchg
push
pop
cmc
sarl
jb
movl
fs
add
push
dec
jne
je
jns
mov
pusha
lea
fwait
lods
mov
dec
jne
adc
xor
xchg
xlat
aad
inc
lret
leave
push
push
fdivrl
ss
ljmp
fadds
jb
mov
jmp
mov
push
and
lahf
std
xchg
mov
mov
hlt
mov
push
xor
mov
movsl
jge
dec
jo
movsb
ljmp
paddd
sbb
repz
jbe
cmpl
push
push
and
fadds
arpl
dec
ljmp
cmp
mov
pusha
jb
pop
hlt
jo
and
insl
add
ljmp
cmp
in
inc
cmp
push
int3
sbb
push
test
sbb
test
in
lock
test
xor
lea
add
xorb
jbe
mov
sbb
div
out
sub
je
pop
and
add
push
pop
cmp
mov
jb
cs
lea
mov
pop
pop
adc
ficomps
mov
xchg
mov
mov
scas
pop
js
cli
jo
jb
xchg
mov
movsb
mov
hlt
jbe
mov
lcall
fisttpl
mov
xlat
mov
repz
adc
les
push
pusha
gs
out
paddusb
mov
push
imul
cmp
cwtl
adc
rcrl
cmp
aas
xchg
xchg
stc
mov
adc
lods
pop
push
in
iret
cmp
add
jmp
jns
ret
pop
repz
and
cmpsb
jge
xlat
stos
insb
mov
sub
push
jb
add
das
cmp
xor
dec
ret
xchg
mov
mov
mov
cmpsb
out
adc
xchg
sub
fbstp
pop
mov
add
pop
mov
gs
push
loope
push
and
fildl
cmpsl
jp
bound
incb
shrl
push
fnstcw
cmp
gs
roll
lods
mov
movsb
das
sub
mov
lret
add
sub
pusha
push
jp
in
jge
stos
fisttpl
dec
add
pop
dec
ficoml
imul
mov
sub
push
popl
mov
mov
aaa
in
lods
xchg
scas
mov
push
loope
repz
fwait
xor
jno
cli
data16
ret
jnp
data16
adc
and
pop
ljmp
mov
mov
xchg
movsb
aaa
push
sub
inc
sbb
dec
test
popf
enter
stos
fsubrs
pop
mov
mov
mov
jne
cmpsb
sbb
sub
les
pop
inc
stos
sub
sahf
add
iret
mov
pop
dec
notb
pop
jge
rcrb
pop
xor
lret
inc
add
sbb
add
inc
dec
sub
enter
xor
mov
jnp
outsb
rol
inc
fcoms
arpl
insl
cmp
sbb
in
lock
cwtl
xlat
mov
leave
push
sbb
movsb
jle
mov
imul
rcrl
adcb
dec
sti
lea
std
jno
mov
aaa
movsl
lret
xchg
stos
xchg
repz
addr16
inc
sbb
and
xor
aaa
pushf
inc
lods
xchg
jb
xlat
fsubr
lea
mov
test
inc
repnz
and
ret
sub
mov
mov
fmull
popa
in
lock
mov
in
in
pusha
sub
jno
push
aad
and
das
mov
fidivl
call
jae
cmp
xchg
xor
mov
inc
push
iret
stc
nop
outsl
xor
stos
mov
jp
inc
mov
lods
lret
into
out
clc
and
ficoml
push
ret
in
es
jb
mov
push
ror
lock
loope
insb
xorl
orb
aad
pop
jne
push
movsb
push
jb
push
lods
xor
lret
pop
add
out
adc
mov
push
sahf
xor
push
mov
adc
cmp
adc
lods
mov
push
icebp
movsb
movsl
xchg
in
mov
lock
sbb
jecxz
dec
mov
lds
pop
sbb
xor
mov
ret
movl
mov
test
xor
mov
xor
lods
jecxz
mov
test
aaa
fsubrp
cli
bound
hlt
cwtl
and
lahf
movsb
add
mov
int
xor
fdivl
into
sub
fdivl
mov
or
scas
hlt
xor
sub
mull
dec
clc
iret
or
pop
xchg
leave
and
xchg
push
mov
bound
cltd
lock
sarl
out
xlat
cli
push
inc
mov
dec
stc
pusha
mov
cs
push
mov
in
sub
sub
imul
pop
outsl
push
stc
negb
movsb
jo
pop
mov
out
mov
cmc
std
scas
cmc
ret
dec
hlt
cmpsl
and
pop
jb
and
pop
xchg
cld
jg
push
iret
xor
dec
scas
lahf
dec
push
imul
adc
adc
mov
mov
push
sbb
call
cmpxchg
mov
xchg
lods
fsubrs
xchg
cmp
icebp
lcall
and
lcall
roll
cmp
sub
repnz
inc
mov
jo
sub
push
inc
iret
call
js
sub
inc
test
inc
or
negl
into
or
jb
xchg
fidivrl
push
cmp
and
mov
mov
xchg
adc
adc
test
into
sub
sub
mov
mov
sub
int
shrl
imull
outsl
sub
ljmp
adc
sub
adc
nop
mov
js
mov
inc
movsb
hlt
lds
cs
jno
cli
aaa
xor
or
inc
mov
int
pop
int3
loope
imulb
sbb
add
leave
outsb
mov
dec
or
js
movsb
std
int
push
xchg
bound
inc
pop
push
popf
lcall
jns
mov
push
add
dec
mov
sub
out
sub
push
ss
pop
sub
movsb
cmp
ret
and
jno
jo
push
bound
cmp
mov
andl
push
adc
sbb
and
lock
mov
clc
adc
jb,pt
sub
lret
add
shrl
repz
push
sbb
mov
pop
sbb
xlat
adc
jp
sti
push
out
int3
adc
jle
aaa
lods
in
aaa
loope
mov
push
jb
orl
lds
rolb
ds
dec
mov
push
dec
or
push
ljmp
clc
pop
addb
int
pop
sti
fwait
push
mov
xor
dec
insb
lcall
mov
leave
xchg
andl
mov
xor
movsb
and
int3
sbb
imul
pop
or
pushf
iret
pop
insb
add
fmull
inc
sub
fcmovu
mov
lahf
xchg
lcall
jmp
xchg
popa
adc
test
lahf
in
fstpt
push
jl
int
shll
sarl
jp
outsl
imul
mov
in
mov
inc
gs
add
cmp
movsl
dec
fistpl
cmp
cltd
in
xchg
inc
lods
dec
inc
pop
insl
fs
dec
push
xor
pop
popf
fistps
jg
xor
aaa
sub
jnp
push
mov
out
mov
mov
dec
es
and
add
rol
pop
xorl
inc
movsl
leave
pop
das
pop
jmp
test
mov
push
bound
push
cmpsb
int3
shlb
cs
push
cmp
mov
cmpsb
push
stos
lods
and
mov
and
mov
lods
icebp
inc
decl
hlt
jb
cmpsb
fidivl
add
repnz
les
mov
adc
outsl
insb
outsb
movsb
push
dec
cmp
test
pop
scas
jne
data16
lahf
iret
call
sbb
lods
fs
lcall
inc
aad
add
sbb
dec
retw
stc
out
add
adc
shl
or
ret
or
and
mov
int3
cmc
mov
lea
addr16
adc
sbb
xchg
ds
mov
imul
les
mov
dec
xchg
call
fst
or
xor
mov
mov
mov
jmp
cmpl
testl
push
sbb
xchg
call
push
loop
xor
daa
mov
and
icebp
xchg
mov
cmp
xchg
or
cmpsb
sub
pop
scas
dec
jo
jle
in
pop
movb
mov
icebp
mov
dec
imul
cmpsb
xor
insl
push
movsb
sbb
mov
jl
sub
stos
xor
mov
pushf
call
incb
fisttpll
pop
mov
mov
mov
addr16
test
dec
dec
cmp
ja
rep
pusha
js
push
lret
or
xor
aam
inc
ret
xchg
add
icebp
flds
aam
bound
pop
mov
sbb
sub
dec
add
xchg
inc
xor
movsb
into
jnp
in
inc
jmp
scas
jae
or
call
lret
test
mov
scas
or
imul
imul
pand
clc
rorb
mov
xor
mov
jmp
subb
xor
pop
xchg
inc
movsl
ret
cmp
leave
imul
hlt
sbb
sbb
fidivs
inc
dec
pusha
es
dec
fmull
outsl
stc
cli
in
mov
es
sub
mov
dec
jmp
es
ds
xchg
pop
or
fs
pop
jge
pop
sub
xchg
rorb
xchg
xorb
xor
cmp
imul
push
ss
test
cli
xchg
xchg
lahf
insb
sub
sub
filds
xorl
je
cs
stos
dec
loop
dec
mov
lcall
inc
rcrl
test
hlt
mov
ss
jne
loop
dec
mov
call
mov
inc
into
mov
ja
in
push
inc
and
adcl
push
andb
fnstcw
popa
lret
mov
ud1
pop
dec
fdivs
jbe
mov
test
push
push
loopne
mov
scas
in
fdivrs
ret
lret
push
bound
call
stc
pop
xchg
aad
xor
in
mov
xchg
mov
fsubr
cld
mov
xchg
push
jmp
xor
mov
push
cltd
ficomps
iret
pop
cmp
cltd
sub
loope
ds
pop
sbb
mov
outsl
rorb
cs
pop
sub
aaa
idivb
jb
lods
dec
cmpb
dec
call
push
or
pushl
dec
leave
xchg
aad
sahf
fmulp
xor
popf
xchg
pusha
pop
insb
push
or
negl
adc
mov
std
nop
cmp
mov
in
call
xlat
arpl
ret
xchg
pop
dec
push
iret
clc
pop
scas
mov
mov
pushl
lods
mov
lcall
xor
negl
out
push
mov
test
outsb
xchg
xchg
pusha
xchg
dec
pusha
or
push
mov
fadds
mov
sahf
mov
mov
iret
pop
imul
inc
mov
dec
sbb
inc
lcall
jnp
sbb
pop
pop
aaa
nop
mov
and
jge
push
dec
push
lcall
push
ljmp
jns
jne
or
xchg
sub
dec
outsb
into
icebp
sahf
lds
nop
hlt
pushf
dec
sub
scas
mov
lods
mov
xor
cmpsb
jg
cld
jno
push
sbb
push
jb
push
lahf
les
cwtl
dec
ret
or
aaa
pop
mov
out
mov
inc
or
mov
ffree
xor
xchg
hlt
nop
iret
sub
mov
movsb
outsl
xorl
dec
mov
out
push
add
mov
lods
jno
mov
add
add
inc
dec
jge
mov
lcall
test
inc
movsb
outsl
add
fmull
cmpsb
push
sub
jecxz
movsb
jge
jnp
scas
imul
adc
jb
aas
pop
mov
fsubrs
and
jne
je
xchg
stos
mov
sub
cmpsb
dec
mov
pop
and
cmp
loopne
push
mov
push
mov
mov
test
mov
ret
cltd
dec
jmp
loope
dec
shl
xchg
lea
test
sub
mov
daa
mov
lods
out
insb
dec
leave
adc
orl
dec
mov
push
imul
mov
ret
xor
xchg
jge
push
cmp
movsb
xorb
loope
and
mov
adc
int
jb
loope
pop
out
sbb
sti
subl
dec
mov
and
push
in
lret
cmp
fs
mov
aaa
ret
scas
je
push
out
inc
out
adc
inc
dec
sub
or
scas
push
push
data16
test
sub
cli
and
popa
rcl
mov
lock
neg
xlat
lods
inc
cwtl
adc
outsb
les
mov
lcall
arpl
mov
sbb
push
push
mov
jae
punpckhdq
xlat
fsts
roll
mov
pop
iret
sbb
add
xchg
mov
in
lods
repz
mov
loope
aad
mov
inc
add
stos
sub
adc
fsin
cmp
lods
xor
push
cli
mov
shlb
js
pop
repz
das
jg
fs
idivb
test
mov
xchg
lcall
ljmp
fstpt
mov
das
in
and
ss
clc
in
je
cld
xor
jmp
xchg
sub
mov
jmp
test
adc
pop
xchg
mov
mov
shr
jo
leave
push
jl
enter
cmc
xchg
orps
in
dec
ljmp
push
inc
jne
test
out
iret
movsb
inc
shr
push
inc
das
push
lods
ret
leave
pusha
mov
xor
stos
outsb
fimull
in
add
cmp
pop
sbb
mov
mov
mov
iret
mov
frstor
sub
lea
sub
scas
cmp
mov
out
into
inc
sbb
mov
fldenv
lret
sbb
add
push
test
or
testl
push
in
ss
bound
cmpb
sbb
add
lods
lret
push
das
inc
addb
sub
repz
adc
dec
mov
xor
push
mov
inc
das
cmp
ja
scas
cmp
jb
sub
push
shrl
lock
jbe
sub
cmp
push
sbb
xchg
negl
in
mov
add
movl
int3
mov
sbb
aam
xor
movsl
lcall
rorl
cld
rolb
leave
mov
stc
push
sahf
and
cs
lret
sbb
mov
mov
mov
test
movsb
mov
mov
sub
push
add
rcll
fs
mov
mov
hlt
ret
or
jb
data16
pusha
insl
lret
mov
cli
out
sub
mov
push
decb
mov
bound
xchg
add
mov
test
jbe
jl
mov
movsl
dec
clc
xlat
in
pop
mov
or
dec
vpcmpgtw
dec
dec
out
sbb
pop
or
mov
test
ret
aam
js
push
adc
dec
or
test
ljmp
and
mov
iret
stos
sub
mov
lock
mov
imul
jno
aad
dec
jne
outsl
outsb
mov
imul
cli
push
jp
push
push
mov
xchg
mov
pop
fadd
insb
cld
dec
xor
mov
mov
mov
mov
iret
fdiv
in
mov
test
mov
test
mov
lcall
pusha
jno
in
adcl
movsb
imul
ja
cmpsl
jo
cmp
orb
xchg
std
addb
mov
mov
dec
cli
mov
xor
sbb
sub
enter
pop
mov
jb
jmp
ds
sbb
mov
sahf
call
pushf
mov
jbe
push
fadd
xor
movsb
aas
bound
aas
adcl
movsl
shll
mov
roll
adc
call
mov
cmp
mov
adcl
nop
pop
mov
ret
xchg
pop
cmp
out
insl
sub
sbb
dec
pushf
adc
jge
pop
add
xchg
cltd
pop
jbe
leave
call
sbb
andl
pop
cmp
arpl
data16
movsb
je
cmp
cmp
adc
pop
lock
dec
test
lods
stos
cmp
scas
das
jno
stos
test
movsb
push
ror
mov
pop
jbe
shrl
sub
adc
mov
fwait
jo
mov
mov
or
out
mov
mov
sbb
in
adc
cli
fcmovbe
cmpsl
gs
mov
insl
adcl
mov
std
hlt
out
jl
daa
pop
nop
mov
andl
jge
arpl
lcall
jmp
pop
pop
or
addr16
lods
pop
push
ret
xchg
mov
arpl
movsb
push
lea
pop
fsubs
int
in
out
pop
stos
jb
movsb
add
pop
rcrl
lea
rcl
sub
mov
xchg
mov
shlb
mov
ror
leave
xor
pop
and
int
sbb
adc
enter
mov
imul
mov
xor
xchg
inc
movaps
inc
xor
data16
pop
pop
ljmp
aam
cmp
mov
xchg
stc
fcomip
sub
cmpsl
cltd
sbb
repz
xor
push
xchg
dec
fildll
aad
dec
sarb
daa
cmc
add
mov
iret
sti
andl
shrb
hlt
ja
push
imul
inc
jne
cmp
mov
add
call
and
test
sub
imul
inc
ret
xchg
scas
pushf
insl
push
or
pushl
mov
pop
sub
sub
inc
addr16
add
subb
or
imul
pop
movsl
jbe
adc
fdivs
loopne
cld
mov
pop
jecxz
ljmp
inc
mov
dec
cmp
mov
movsb
mov
js
push
outsb
cmp
shl
fstps
insb
inc
stos
outsb
jb
mov
adc
fsubs
mov
jle
adc
movsb
dec
push
popf
out
jbe
fwait
or
inc
mov
xchg
test
mov
jmp
aaa
test
fsubr
sub
pop
cmp
mov
pop
movsl
pop
fidivrs
push
xlat
xlat
jne
call
nopl
imul
iret
dec
les
mov
pop
jle
cmpsl
push
jle
nop
out
sbb
cli
push
hlt
lods
adc
out
pop
jmp
mov
mov
repnz
jns
mov
sbb
adc
mov
mov
xchg
mov
sub
cltd
iret
aad
adc
xor
call
lcall
jbe
lret
xor
jne
xchg
inc
push
sbbb
mov
test
xchg
mov
fbld
addr16
enter
addr16
pushf
testl
test
and
mov
sar
leave
das
leave
divb
sub
je
ret
stos
mov
call
lahf
movsb
cwtl
scas
adc
cmp
xchg
loope
in
aaa
mov
jae
adc
add
and
jb
mov
adc
jo
out
test
pop
in
and
cmpxchg8b
mov
push
or
cmpsb
adc
xor
inc
lock
not
inc
into
add
push
push
sbb
mov
leave
xlat
cmpsb
jo
pushf
fbstp
pop
loop
in
xchg
inc
mov
inc
lcall
cld
push
xor
sub
pop
mov
sahf
and
push
sub
aad
cwtd
push
dec
hlt
cmp
pop
mov
add
test
sar
pop
xor
lods
inc
xlat
call
jb
mov
mov
and
insl
push
test
inc
sub
or
cmpl
mov
push
xor
stc
and
mov
xchg
mov
and
lods
stc
add
sub
fcompl
lds
enter
mov
into
add
js
mov
popf
push
pop
ret
loopne
stc
fwait
mov
in
cwtl
add
cld
xor
add
cmp
pop
push
sub
inc
incb
pusha
push
inc
push
mov
loope
xor
cmovs
sbb
mov
mov
aam
mov
mov
pop
xor
push
lret
mov
aas
lcall
jb
enter
adc
xchg
in
lods
mov
out
pop
and
loop
pop
xor
int3
sub
fldenv
sub
incl
out
dec
loope
inc
jecxz
in
add
xchg
jbe
mov
paddusb
push
fldenv
loope
adc
test
or
xor
cli
ss
sub
incl
mov
mov
mov
movsl
xor
xchg
pushf
jo
out
cmc
mov
lods
fwait
sbb
daa
pop
sbb
outsl
add
sub
sbb
add
insb
fidivrl
sti
or
and
xorl
aad
test
xor
ljmp
jmp
mov
sub
gs
out
mov
and
jl
jnp
sbb
push
ret
xchg
lahf
cmp
ret
call
cli
push
ret
lods
or
insb
fiaddl
mov
pop
lods
sbbb
cmp
or
push
cmp
mov
jmp
mov
xchg
and
jnp
pop
sbbl
push
cwtl
lock
dec
lret
sub
stos
xchg
jnp
mov
iret
aad
push
and
jge
hlt
mulb
mov
mov
ljmp
insl
lock
ljmp
adc
mov
cmp
mov
mov
shlb
aad
mov
outsb
call
dec
jbe
xchg
loop
out
test
je
add
popa
sbb
jae
jb
mov
dec
inc
pop
aas
adc
lcall
into
pusha
sbb
mov
and
int
inc
cltd
lea
ss
push
fistpl
fdivr
fsts
loope
and
mov
add
pushf
xor
test
repz
xor
adc
cltd
clc
notl
loopne
push
xchg
jp
mov
xchg
adc
cwtl
xchg
push
inc
pushf
mov
push
jae
stos
xchg
sub
in
adc
mov
arpl
mov
daa
jg
dec
mov
add
jecxz,pt
xorl
push
pushl
int
push
adc
mov
mov
inc
negb
push
mov
xor
xchg
and
adc
jae
fists
mov
cmpsb
jne
sbb
addr16
loopne
lods
mov
adc
pop
xor
mov
test
int3
jno
clc
sahf
out
test
pop
adc
pushf
ss
sbb
loope
mov
ja
adc
ffreep
ret
ret
mov
mov
adc
or
pop
pop
gs
xchg
mov
add
push
bnd
out
mov
jne
stos
dec
scas
js
dec
push
iret
xor
mov
inc
cltd
or
cmp
je
xlat
lret
inc
movsb
out
jge,pn
mov
lds
push
outsl
jge
xor
shr
out
adc
insl
xchg
mov
sbb
orb
in
pusha
cmpsb
adc
mov
jo
ret
cli
inc
cwtl
mov
mulb
sub
jns
push
push
lods
ljmp
stc
mov
aad
jg
xchg
xor
mov
jns
fsubl
xorb
pop
fbstp
push
xor
jo
sub
lods
inc
mov
pusha
pop
cmc
iret
push
sahf
enter
repz
adc
sti
dec
in
xor
push
cmp
sbb
shll
mov
cli
in
inc
lcall
daa
inc
scas
push
fisubrl
js
nop
push
cmp
inc
sub
cli
push
punpckhbw
call
xchg
lods
pop
mov
ja
jno
andb
inc
mov
daa
mov
xlat
xchg
pop
xchg
js
xchg
dec
sub
adc
mov
jns
ds
iret
ss
sbbl
test
or
fstps
popf
xor
or
cmp
dec
cmpsl
jo
jmp
out
lock
mov
adc
dec
mov
push
add
sbb
test
adc
mov
call
mov
push
mov
xchg
jo
dec
les
add
xor
sub
popa
scas
push
push
lock
or
pop
icebp
lea
mov
ljmp
inc
les
movsl
movsb
in
mov
stos
pop
mov
mov
cs
lods
mov
std
jg
jmp
sbbb
jle
cwtl
icebp
mov
xor
sbb
test
mov
out
and
cmc
mov
lock
push
add
pusha
mov
arpl
xchg
or
pop
xchg
add
sbb
mov
xchg
pop
ss
jp
adc
bound
insb
hlt
inc
mov
mov
sbb
imul
mov
cmpsb
inc
push
cltd
ret
jno
insl
arpl
or
imul
xor
or
lods
sub
xor
cmpsl
lock
stos
std
inc
xor
pop
push
imul
dec
outsb
dec
jmp
scas
push
cmc
bound
push
in
jbe
sahf
hlt
stos
ret
push
inc
pop
mov
ljmp
daa
jb
xchg
pop
stc
repnz
jge
ljmp
push
cmc
push
call
cltd
sub
lea
xor
shlb
mov
movsl
dec
loope
inc
hlt
adc
shll
add
adc
jge
xchg
loope
stos
add
push
add
adc
pop
ss
sub
ret
in
insl
popf
pusha
cmp
xor
mov
das
sub
mov
mov
out
lea
sub
cs
das
lods
add
push
adc
mov
adc
aaa
bound
jb
mov
push
inc
pop
mov
ret
and
or
mov
adc
dec
or
out
or
inc
push
mov
rcl
xchg
icebp
sub
bound
inc
add
mov
repnz
push
pusha
sub
movsb
adc
imul
xchg
sbb
lea
add
sub
cmc
gs
sbb
dec
or
xchg
and
inc
and
insb
sbb
xchg
movsb
test
inc
insb
rorb
push
lret
jae
roll
das
insb
mov
or
adc
ss
cmpsb
xorb
mov
lds
xchg
mov
imul
jb
add
push
lea
dec
dec
es
xor
adcb
mov
lea
mov
xchg
leave
lahf
cmp
mov
xchg
bound
xor
sbb
call
push
xchg
mov
clc
jb
push
call
inc
rcrl
inc
mov
dec
pushf
insb
sub
mov
fldl
lock
jno
dec
add
push
add
lods
pop
hlt
addl
into
cmpsl
andb
lcall
ret
test
xchg
xor
and
repz
mov
icebp
stos
aad
inc
call
dec
cmc
dec
mov
adc
or
in
test
adc
xchg
scas
in
dec
clc
add
add
mov
xchg
dec
aad
dec
inc
sbb
xchg
idivl
xchg
xor
pop
sbb
pop
ljmp
jne
mov
pop
xor
int3
mov
add
push
subb
out
ror
scas
push
pop
jns
ljmp
cmp
lcall
sbb
imul
push
inc
or
lea
inc
popf
jmp
dec
dec
shll
or
xchg
test
adc
aam
clc
aaa
adc
xchg
clc
in
jb
push
inc
in
aaa
repz
sbb
jnp
cld
iret
push
dec
sbb
mov
fnstenv
loopne
dec
pushf
adc
ljmp
pop
xlat
movsb
int3
push
inc
mov
lcall
sub
movsb
test
das
test
mov
movsb
cmp
sub
dec
dec
push
pop
mov
ss
pop
jle
and
jno
mov
in
in
or
add
outsl
gs
push
mov
cld
aam
stc
lea
pop
cmc
and
adc
lret
jns
mov
lods
lods
hlt
jns
add
ret
inc
mov
sbbl
lcall
lods
xchg
jp
outsb
js
les
pop
movlps
repz
and
faddp
fcompl
insb
sbbl
fsubl
cmp
xor
pop
popl
stos
rorl
popa
xor
mov
pop
ret
lret
pop
mov
imul
xor
pop
mov
push
cltd
enter
repz
adc
cltd
mov
rcll
fists
dec
jno
inc
lcall
jo
mov
gs
push
push
jge
add
nop
or
addr16
loope
stc
ret
cli
add
sub
addb
scas
sub
jo
ss
inc
test
ja
repnz
sahf
mov
push
pop
in
pusha
pop
mov
xchg
inc
dec
int3
mov
sub
fcomi
sub
adc
ljmp
mov
sub
lods
push
mov
mov
xchg
inc
mov
repz
dec
mov
push
pop
dec
shlb
lcall
xchg
inc
jmp
movsb
jo
cmpsl
cmc
add
rcrb
cltd
rorl
bound
imul
push
loop
and
fisubrs
or
pop
test
in
mov
andb
mov
push
mov
repz
push
jbe
pop
or
stc
jo
stc
test
sub
arpl
clc
adc
cmp
mov
add
pop
aad
push
sbb
pop
ljmp
int3
push
cwtl
push
sub
movsb
inc
sub
jo
pop
xchg
dec
jb
dec
mov
mov
outsl
js
ljmp
repz
scas
icebp
mov
mov
mov
cmpsb
mov
inc
jmp
cmp
jns
das
fldcw
inc
jno
ljmp
dec
std
jbe
jge
test
lock
mov
xchg
pusha
js
sbb
or
push
mov
imul
inc
jg
mov
sbb
mov
mov
inc
lcall
jo
and
rcr
sub
repz
stc
pop
adc
clc
push
data16
mov
cmp
inc
arpl
insl
mov
push
and
sbb
mov
xchg
sub
mov
cltd
pop
mov
lcall
imul
push
lea
mov
fmuls
int
aam
fsts
mov
cli
icebp
sub
pop
sbb
dec
loope
sti
out
dec
aam
xlat
or
xor
fcomi
pop
jb
nop
stos
push
ljmp
testl
push
shrl
inc
jne
mov
and
mov
out
dec
and
mov
ljmp
mov
cmp
push
pop
dec
ret
jmp
mov
int3
mov
lret
adc
inc
inc
cwtl
pop
arpl
sbb
xchg
js
loope
idivl
push
aam
outsl
hlt
inc
sub
dec
mov
fwait
mov
arpl
scas
movsb
pusha
fildl
aaa
mov
int3
xor
add
cmpsb
pushf
or
and
push
insb
out
popf
cld
ljmp
repnz
adc
jne
daa
pusha
mov
jne
xor
mov
andb
mov
dec
push
cld
sahf
jnp
fisttpll
cmpsb
jb
mov
mov
sahf
cld
stc
lea
mov
sub
int3
in
sbb
or
jne
push
push
pop
scas
adc
icebp
insb
fcmovnb
or
push
sub
xor
int
aad
cmp
xor
mov
rcrb
jge
imul
push
insl
lods
dec
xlat
lds
sub
mov
mov
push
push
or
out
popa
mov
stos
icebp
adc
mov
insl
es
insl
and
xchg
shll
push
mov
out
inc
xchg
popf
sub
mov
cwtl
xchg
daa
cmp
adc
fdivr
mov
lcall
mov
inc
add
sub
inc
mov
ret
sbb
pushf
andl
pop
pop
pop
xor
push
adc
xchg
hlt
ret
mov
jl
or
lret
es
cmpsb
adc
imul
inc
cmp
in
repz
pop
mov
test
and
push
pop
iret
xchg
pop
and
adc
pop
sub
loopne
jp
movsb
aas
lds
dec
mov
dec
xor
call
sub
dec
mov
and
jo
mov
lcall
adc
pop
mov
pop
pop
das
mov
xor
ljmp
mov
mov
xchg
lcall
pop
sub
lret
and
int
mov
ret
loopne
and
cmp
outsb
add
cli
sub
push
dec
push
dec
or
adc
lock
cmp
popa
cmp
mov
pop
xlat
jno
out
shll
sub
and
push
sub
movsb
pop
insb
int
fldenv
sub
and
add
ss
jl
push
std
and
outsb
scas
sar
fisttpl
imul
jnp
sub
jg
push
pop
jg
jnp
xor
xor
mov
jb
cld
stos
push
push
push
je
sahf
sub
cmp
push
stc
rcrl
xor
mov
rcrb
and
sbb
sub
lock
popf
aas
cmpsb
fdivl
mov
repz
mov
dec
mov
xor
shll
xor
cmp
loope
adc
xor
shll
dec
jno
pop
orb
adc
mov
pusha
js
ljmp
gs
fdivl
lods
dec
fwait
shll
mov
adcb
push
test
jg
lock
ret
sti
mov
shlb
mov
test
xchg
stos
in
popf
cli
loope
mov
sub
or
mov
test
add
dec
push
pop
inc
scas
or
and
pop
sbb
pop
mov
cmp
xchg
out
cmpsl
adcb
fcoml
mov
mov
or
xor
sti
inc
xor
movsl
jnp
push
mov
mov
jo
ret
lret
cmp
fistpl
mov
mov
xor
or
js
lcall
nop
arpl
fwait
iret
sub
loop
mov
pop
push
lret
pop
ds
inc
push
popf
push
test
sbb
test
push
sub
imul
imul
push
mov
mov
mov
mov
cmp
lret
gs
cs
jae
fimull
test
add
xchg
insb
lret
sub
mov
mov
icebp
rep
adc
bound
push
dec
adc
fiaddl
psubsw
sub
rorl
add
cmp
sbb
mov
xchg
or
inc
mov
dec
adc
mov
not
dec
roll
test
xor
xor
sti
mov
enter
das
js
scas
movsb
cmp
call
cmp
cmovo
pop
fidivl
mov
xchg
xchg
fadd
adc
pop
aam
pop
bound
jbe
pushf
mov
xor
out
mov
repz
mov
mov
repz
pusha
add
jnp
lret
mov
pusha
std
mov
int
repnz
insb
and
sbb
cmp
xorl
rol
inc
dec
insb
push
jb
jno
fmull
sub
xchg
lods
mov
mov
xor
inc
mov
pushf
pop
adcl
adc
sub
int3
sub
mov
out
mov
cld
out
adc
sbb
jne
xchg
mov
and
xchg
cmpsl
mov
cmc
and
pop
mov
sahf
movsb
loop
out
movsb
sahf
into
add
push
gs
cmp
aaa
popa
loope
addr16
sub
mov
cltd
mov
call
mov
push
dec
lea
mov
mov
sub
mov
faddp
jne
xor
popa
xor
pop
out
mov
repz
dec
xor
cmp
add
xchg
xchg
xorl
adc
mov
aam
sub
pop
add
push
dec
movsb
aad
cmp
jmp
push
movsb
mov
mov
shll
push
outsl
cli
mov
mov
shlb
adc
enter
or
out
dec
pop
fwait
sub
jne
sahf
jge
cwtl
pusha
jae
mov
imul
and
stc
rol
push
jo
repnz
mov
jae
or
sub
adc
mov
bound
sbb
aad
test
std
lcall
mov
push
inc
and
adc
push
les
ss
lods
xorl
shlb
xchg
push
outsb
rep
jmp
les
adc
sbb
cwtl
mov
adc
test
pop
ret
lods
or
sahf
inc
stos
aaa
add
cmp
enter
mov
add
jae
cmp
cwtl
loop
jp
and
mov
xor
adc
addb
cmpsl
fnstcw
jl
dec
push
mov
mov
movsb
das
adc
mov
notb
xor
jae
add
cmpsb
cmpsl
dec
out
fists
mov
xor
imul
call
movsl
xchg
stos
out
cltd
cmc
sbb
mov
pop
scas
ds
dec
aam
lods
push
imul
adc
xchg
dec
mov
fsub
lea
mov
data16
data16
mov
addr16
sbb
jne
sub
push
jae
ret
xor
ret
js
iret
inc
pop
mov
push
icebp
mov
das
pop
lret
jo
dec
or
and
adc
mov
movsl
jbe
mov
stos
mov
scas
lods
aaa
ret
ljmp
aam
push
sub
pushf
mov
test
imul
popa
or
sub
jae
dec
push
sbb
ds
dec
mov
sbb
ja
popa
mov
mov
jb
loop
movsb
sahf
bound
pop
imul
scas
mov
jo
mov
mov
stos
or
jae
iret
rcr
out
push
mov
shr
ja
in
mov
xor
insl
pushl
mov
enter
sahf
sbbb
jno
dec
jb
dec
jnp
out
or
fisttpll
push
xor
add
jl
popl
out
pop
cmpsb
push
xchg
xor
mov
mov
xor
sar
dec
inc
push
xlat
dec
lods
dec
cmp
xchg
cs
js
cwtl
inc
push
sbb
mov
aam
xor
xchg
xor
push
lret
jmp
ret
dec
ret
out
mov
je
push
jl
cmp
inc
movsb
icebp
shrl
mov
mov
lock
in
cmp
insl
mov
or
cli
insl
out
sub
test
test
xor
pop
les
sub
mov
add
ljmp
jg
cld
insb
dec
mov
fwait
add
pop
or
cmpsl
insb
pop
mov
aam
shll
arpl
fwait
pop
movsb
inc
xchg
aam
ret
out
jns
dec
sub
ret
movsb
mov
cmpsl
icebp
pusha
mov
mov
mov
int
int3
and
lcall
addr16
movsl
xchg
adc
sbb
adc
insl
mov
aaa
cmp
mov
and
cmp
push
sub
xchg
add
sti
pusha
push
rolb
test
add
jb
lods
inc
and
fisubrs
mov
xor
push
sbb
add
test
sub
sub
test
add
into
in
cmp
and
lds
movsl
mov
push
adc
les
loope
push
lcall
ljmp
insl
pushf
dec
xor
repz
orl
mov
fsubrl
adc
repz
pop
stos
add
inc
ret
mov
lods
pushf
out
sbb
xor
lods
cmp
in
cmp
out
aam
dec
shlb
fmull
jnp
cmovp
cmp
adc
lret
aas
or
dec
pop
add
dec
push
push
scas
sbb
lcall
icebp
fisubs
test
les
cld
add
inc
jle
das
jmp
stos
adc
sub
loope
cmp
dec
rcrb
loop
sub
hlt
xchg
outsb
mov
mov
mov
mov
sahf
outsl
inc
push
mov
ficoms
pop
and
in
dec
sub
ret
cmc
or
aas
test
popf
aad
pop
add
mov
inc
in
pop
sub
into
push
movsb
jne
pop
lods
dec
lods
mov
mov
sbb
mov
imul
mov
jo
js,pn
ret
je
mov
xor
cmp
ljmp
push
mov
test
xorb
call
jg
push
and
and
push
add
mov
movsb
loop
pop
inc
sub
xchg
mov
sub
subb
nop
or
jns
ret
dec
xor
mov
pop
sub
pop
push
mov
dec
dec
lds
mov
xchg
aad
push
and
pop
xchg
cmp
adc
mov
scas
cli
push
pop
jmp
rol
stos
mov
sub
mov
push
movsl
xchg
pushf
lea
leave
push
fs
push
adc
call
int3
push
subb
outsl
push
push
gs
jno
xchg
cld
sahf
pop
dec
movsb
xchg
pop
scas
and
lret
mov
cmp
jbe
mov
sub
insl
lcall
or
stc
jp
fiaddl
aas
jmp
cmp
out
or
and
push
cmp
push
mov
cmpsl
cmc
out
ja
and
adc
addl
mov
pop
sbb
mov
xchg
mov
cld
xor
mov
cltd
mov
in
xchg
mov
sarl
add
cmp
cmpsb
jmp
add
in
xor
sbb
and
push
xchg
cltd
fiaddl
and
fisubs
out
sbbl
or
lods
gs
lea
lcall
das
sub
xorb
sahf
inc
shlb
jecxz
flds
xchg
pop
xchg
fsincos
test
or
icebp
nop
add
test
stos
pslld
and
pop
jnp
outsb
pop
and
lods
sahf
pop
mov
push
push
xor
lcall
jne
push
cmpsb
mov
or
push
cmp
fs
inc
jb
xchg
cmp
cmc
pop
stos
lds
sar
es
in
cmpsl
in
sti
sub
xchg
shrl
mov
int
daa
push
ljmp
dec
les
rep
add
xor
jle
jb
cmp
repz
movsb
xor
es
mov
aam
jge
sub
inc
inc
iret
stos
imul
dec
and
push
jnp
pop
std
test
int
sti
add
fstpt
and
jb
imul
pop
lds
test
les
cmc
dec
test
or
dec
push
ret
test
jg
ss
push
roll
inc
out
loopne
jno
orb
bound
arpl
je
push
sbb
push
mov
ficomps
into
push
stc
andb
sbb
jb
mov
imul
iret
push
js
dec
lock
aas
sbb
daa
push
jns
lods
mov
sub
xchg
pop
jle
mov
movsl
sbb
hlt
and
xor
test
lds
pop
push
or
sub
adc
shr
pusha
das
jns
mov
aad
les
dec
cmp
popa
inc
jmp
inc
fidivl
icebp
test
ret
mov
xor
sub
ljmp
adcb
or
mov
sub
test
jno
mov
xchg
test
fmulp
les
dec
add
mov
shrl
sub
dec
mov
mov
pop
ljmp
ja
insl
cmc
jg
cmp
dec
flds
repnz
add
mov
jbe
fdivs
stc
dec
aaa
mov
mov
lods
xor
jnp
jo
xchg
mov
cmp
xor
adc
mov
scas
pmaddwd
pop
xor
xor
mov
and
sub
pop
sbbl
sub
ljmp
xor
add
cmp
sarb
gs
push
push
jge
xchg
ret
scas
std
xchg
outsb
repz
aas
push
inc
mov
lcall
ds
mov
add
scas
das
je
dec
cli
sbb
jb
insl
xchg
add
jbe
mov
cmp
xchg
ret
mov
je
cltd
mov
pop
xor
cmp
pop
xchg
sub
jmp
jbe
aam
mov
pusha
mov
bound
push
and
ljmp
xor
pop
xor
cmp
sub
pusha
dec
mov
insl
dec
rorb
in
and
fists
mov
cltd
mov
mov
enter
sub
aam
in
cmp
cli
aaa
lret
dec
lahf
cli
leave
andl
cmp
dec
sbb
in
sbbb
popa
mov
adc
mov
ljmp
shrb
cmpsb
ret
subl
mov
stos
int3
pop
imul
notb
shl
cli
push
insl
jbe
inc
or
stc
jns
mov
mov
cmp
mov
mov
inc
pop
enter
pop
icebp
in
sbb
mov
lods
jb
jno
xlat
nopl
mov
outsb
cmp
lahf
arpl
push
idiv
push
int
jne
pop
add
lods
orl
xchg
mov
inc
mov
cmp
inc
and
push
mov
pusha
dec
mov
outsb
cmp
mov
bound
xor
lods
sbb
inc
rcll
icebp
mov
adc
add
push
jl
xor
push
in
jle
stc
movsb
loopne
add
insb
cs
adc
imul
xor
movsb
andb
and
jb
repz
push
push
mov
pop
sub
dec
rclb
sbb
add
lret
jns
mov
mov
lock
mov
mov
shr
aad
js
jge
lods
and
xchg
mov
in
outsl
adc
adc
lea
jb
loopne
sbb
stos
push
fdiv
cld
mov
xchg
mov
xor
lods
cmpsb
incl
cmp
out
jbe
js
xchg
inc
mov
xchg
push
mov
pusha
test
push
mov
mov
inc
xchg
popa
add
icebp
popf
movsb
xchg
and
fadd
lods
repz
rol
repz
mov
dec
dec
scas
jne
loope
mov
mov
cmc
pop
push
mov
pop
jb
sub
inc
or
subl
bound
in
dec
lahf
sub
xor
cld
das
shlb
fadd
and
outsl
jmp
test
stos
mov
int3
sbbb
pop
rcl
and
add
sbb
clc
xchg
test
ret
cmp
inc
xor
imul
pop
jnp
js
out
call
adc
out
add
add
cmp
add
dec
daa
aad
iret
adc
loope
mov
dec
js
mov
xor
push
pop
mov
xchg
push
lahf
ljmp
inc
adc
sti
call
jae
cmp
dec
and
cmc
scas
mov
mov
inc
adc
lods
in
bound
push
lods
and
jns
pop
adc
sub
and
cmp
xchg
iret
scas
mov
inc
or
movaps
push
adc
xor
push
arpl
dec
out
pusha
repz
sub
mov
add
bound
lret
pop
rcrl
test
sub
cmp
std
or
push
push
fwait
lods
cmp
lret
cmpsl
je
int3
sub
add
sti
mov
mov
movsb
jb
roll
or
divl
and
popa
mov
xor
sbb
nop
jnp
fstps
scas
xchg
clc
rcrb
mov
fisubrs
lods
fildl
stos
lock
dec
inc
push
lods
stc
loope
packsswb
js
loope
or
stos
cli
mov
lods
dec
adcb
xor
js
and
adc
and
jo
add
mov
scas
dec
mov
addr16
ffree
ds
xor
inc
rorl
mov
cmp
sbb
test
pop
add
test
aaa
pop
stc
push
push
push
push
xchg
and
mov
cli
adc
xor
or
sbb
enter
test
clc
and
adc
pop
xor
adc
stos
fstl
pusha
fiadds
pusha
mov
and
mov
bound
pop
mov
stc
mov
jo
call
cmp
hlt
outsb
inc
test
sub
icebp
adc
imul
jne
mov
push
inc
test
aam
es
lds
sub
fwait
cld
mov
add
dec
faddl
fwait
movsb
lret
outsb
enter
jno
sub
ss
scas
push
inc
cli
mov
rorl
ljmp
and
loopne
xchg
cs
jns
insb
mov
cmp
mov
aad
icebp
in
imul
and
movsb
fistpl
inc
icebp
imul
xor
jae
rcll
adc
and
jno
rorl
fwait
add
mov
mov
movsb
je
mov
xchg
shlb
push
mov
dec
push
ljmp
push
sub
jmp
inc
sbb
mov
aad
lods
add
sbb
add
lcall
call
sub
mov
enter
lods
shrb
test
sbb
sbb
or
or
or
or
test
sbb
jae
insb
je
push
mov
roll
lea
and
outsl
scas
xchg
xchg
dec
pop
out
int
cmp
mov
pushf
arpl
gs
mov
fucom
iret
mov
loop
jnp
and
mov
lcall
xchg
xchg
jae
mov
movsb
sub
jns
popa
cmp
sbb
addb
lcall
add
add
ljmp
dec
push
mov
je
mov
cld
mov
movsb
jmp
xor
pop
out
or
jbe
scas
cmp
repnz
stos
dec
mov
add
sub
fcomps
sub
gs
adc
test
adc
mov
xlat
call
enter
lods
in
stos
in
cli
push
test
push
icebp
add
jle
dec
imul
dec
leave
stos
jle
sub
lret
pop
pop
mov
sub
lcall
hlt
mov
stos
lret
cmp
fsts
fnstsw
loop
mov
pop
test
add
inc
dec
stos
jb
adc
xor
mov
mov
test
inc
stc
cmpsb
out
mov
cmp
sub
inc
sub
mov
sti
mov
dec
xchg
andl
mov
jp
out
mov
stos
mov
lods
call
ljmp
in
mov
incl
mov
fisubl
sub
push
in
shll
push
mov
mov
xchg
mov
jno
push
out
jg
xor
lods
repz
mov
lret
add
xchg
mov
call
inc
fidivs
cmc
xchg
scas
and
sti
lock
into
cmp
jp
push
mov
or
inc
outsl
jp
into
dec
adc
sbb
push
sbb
jg
mov
cld
jo
leave
mov
xor
pusha
xchg
xor
lods
movsl
push
mov
push
fsubrl
cwtl
push
mov
push
inc
xor
inc
add
outsl
call
fwait
sub
lods
xchg
ret
loope
and
notb
scas
sbb
push
lcall
mov
mov
lods
and
mov
int
aad
mov
adc
in
call
stos
sbb
das
adc
in
mov
test
jnp
pop
mov
mov
mov
adc
push
jns
icebp
aam
mov
lret
xrelease
aam
stos
sub
sar
bound
mov
shrb
shll
lds
addr16
lahf
pop
jno
imulb
addr16
addb
dec
in
cmc
call
cmp
mov
mov
xor
jns
in
xor
push
push
xor
push
jmp
sub
push
xchg
sahf
xchg
jbe
ljmp
mov
jno
pop
or
subl
jl
icebp
jp
mov
sbb
sarl
mov
out
pop
or
inc
lds
ss
or
dec
imul
stc
cmpsb
push
pop
sbb
xchg
sarb
iret
jle
jg
dec
jne
sbb
mov
lcall
stos
imul
xor
repnz
jnp
push
pop
hlt
xor
mov
mov
sti
mov
insl
push
arpl
stc
pop
mov
sbb
push
or
push
imul
fidivrl
adc
arpl
xchg
jecxz
mov
out
sahf
inc
lret
cs
movsb
mov
xchg
mov
call
cmp
pop
cltd
dec
cmpb
js
pop
sbb
pop
mov
push
int
push
inc
stos
stos
xchg
fisubs
pop
inc
adc
pop
jge
mov
mov
pop
mov
pop
outsb
xchg
aad
sub
movsb
int3
repz
shrl
out
dec
and
mov
adc
ficoms
dec
dec
or
sub
adc
andl
aas
outsl
testb
sbb
imul
push
insl
setb
sub
movsl
int
mov
or
sub
dec
dec
out
fnstenv
outsb
jg
pop
sarb
cmp
imul
test
andb
movsb
inc
sub
sarl
add
add
mov
dec
aad
pop
aaa
dec
or
add
mov
dec
insb
mov
mov
cmp
or
sbb
push
cmpsl
sub
call
pop
dec
lcall
mov
sub
dec
and
leave
jl
mov
mov
cmp
jno
push
mov
scas
jle
inc
fmul
pop
in
xor
mov
sahf
cli
outsb
xchg
das
lret
mov
es
test
mov
push
sub
lock
ficoml
sub
std
sahf
xchg
jns
dec
pop
sub
or
imul
imulb
std
insb
sti
aas
mov
scas
das
dec
pop
mov
push
jbe
xor
aad
cmp
push
loope
pop
outsb
stc
add
test
and
data16
in
and
mov
or
insl
iret
movsb
push
and
lret
pop
jb
mov
sub
daa
hlt
add
xlat
dec
ret
in
inc
cmpsl
jae
push
shlb
cmp
out
jb
mov
out
xchg
cmp
xor
stos
ja
jb
fisubrl
addr16
mov
inc
ret
test
cmp
add
rol
adc
mov
aam
sub
pop
les
sub
enter
popa
jb
leave
outsl
sub
mov
cs
add
push
mov
mov
push
jne
inc
fisubl
daa
test
push
pushf
sbb
mov
mov
notb
mov
inc
or
mov
add
fsubrp
dec
adc
add
jle
add
pop
int
outsb
cwtl
mov
sahf
arpl
pusha
les
jbe
xchg
sbb
imul
sahf
xchg
jo
inc
lcall
mov
sbb
mov
xor
mov
clc
fildll
out
adc
sbb
sahf
pop
insl
push
fucomi
sbb
cmpsb
addb
jmp
jmp
addb
ret
jge
je
inc
je
ss
push
jecxz
push
pop
mov
rorl
adc
mov
cmp
and
movsb
insl
xor
cmp
inc
int3
test
sti
xor
jns
sarb
lods
fs
movb
shll
sbb
mov
push
push
icebp
in
push
xor
lods
shlb
cmpl
test
xor
adc
lea
imul
or
inc
sti
pop
movsb
lahf
out
sub
sti
movsb
sysret
lea
sub
mov
lock
scas
adc
movsb
pusha
xchg
add
cmp
movsb
jo
repz
push
ljmp
ret
les
push
int
mov
popa
hlt
outsb
and
jno
cmp
out
lcall
sub
fucom
mov
cmp
mov
cmpsb
xchg
rcll
pop
mov
mov
sbb
push
aam
xor
sbb
xor
cmovl
pop
test
loope
and
ljmp
test
cmp
xchg
mov
repnz
je
ljmp
adcl
jae
out
xor
repnz
dec
mov
and
sub
sbb
iret
mov
push
jecxz
test
adc
cltd
add
mov
mov
out
adcl
inc
lret
rclb
fildll
and
xchg
lock
mov
push
xor
mov
cltd
jp
mov
lods
lahf
fnstcw
sub
cmpsl
pop
stos
aaa
out
fisubl
popf
lds
dec
out
sbb
imul
xor
fimuls
and
cmpsl
xlat
push
add
fbld
out
inc
pusha
dec
adc
sbb
mov
into
push
sbb
inc
sbb
in
xor
mov
jl
mov
pop
sbb
clc
xlat
ds
pop
xchg
jp
fsubrs
lods
enter
push
dec
cmp
xchg
pop
and
and
movsb
es
cmp
add
js
jne
mov
push
fsubr
sub
push
push
inc
add
fcmovne
sbb
lods
push
js
std
in
in
jns
std
bound
les
inc
nop
xchg
bnd
mov
jbe
adc
cmc
pop
lcall
add
cmc
dec
cmp
je
dec
lock
imul
pop
push
pop
mov
sbb
push
sub
repnz
scas
and
cmp
jno
stos
ret
sbb
mov
add
dec
and
adc
fistpl
fnstcw
cld
fwait
lods
inc
mov
xchg
mov
push
stos
int
jno
sub
sahf
mov
into
add
xchg
cmp
sbbb
inc
add
in
push
push
inc
das
out
daa
jns
cmp
push
out
sub
daa
sbb
pop
jl
das
pusha
mov
data16
bound
lds
mov
mov
mov
js
sbb
push
sub
add
jge
aad
pop
jnp
fsubs
cwtl
pusha
dec
pop
bound
pop
mov
fiaddl
test
enter
int3
add
gs
les
dec
sub
mov
lock
mov
mov
ret
jge
dec
jl
icebp
mov
mov
pop
fldcw
insl
rorl
shrl
enter
sbb
in
jb
mov
or
scas
xchg
arpl
cmp
fs
int3
mov
jecxz
and
cs
outsb
sub
push
pusha
cmpl
cmpsb
mov
cmpsb
dec
arpl
inc
xor
psllq
inc
add
les
ret
jmp
inc
and
popa
mov
mov
or
jle
les
icebp
insl
adc
in
imul
mov
lods
push
and
push
in
mov
jecxz
notl
or
mov
sub
ss
sarl
mov
mov
or
xchg
fistpll
cmpl
testb
cmp
gs
es
push
sub
out
mov
adc
out
inc
scas
mov
xor
rcr
xchg
ret
jge
loop
lock
xor
sti
imul
inc
push
inc
add
sub
lods
leave
pushf
add
and
cmpsb
xchg
jg
icebp
fdivrs
sarl
mov
dec
fmull
jp
pop
push
out
outsb
addr16
mov
ja
stos
push
push
stos
fstpl
sbb
fdivs
int3
jb
cmpsl
add
imul
lods
pop
inc
and
xchg
lods
push
jno
push
imul
jns
xor
inc
adc
ljmp
mov
sbb
in
and
movsb
mov
arpl
xor
adc
push
mov
xchg
push
dec
scas
lock
adc
pop
ljmp
mov
or
mov
fidivs
inc
and
ss
ljmp
mov
lods
shll
and
aam
into
sub
mov
jp
sbb
stos
shll
mov
mov
fs
std
xchg
fcomps
imul
out
inc
ret
stos
es
xchg
inc
mov
pop
xlat
bound
aam
push
rolb
mov
cmovg
stos
sub
cmp
test
mov
push
loop
mov
shlb
and
mov
jo
test
iret
pop
xchg
loope
push
sub
fiaddl
sbb
mov
adc
adc
adc
cmp
jbe
fisubrl
mov
adc
dec
shlb
fwait
mov
in
add
mov
inc
jo
das
add
fadds
loopne
xchg
adc
inc
add
mov
cmpsb
push
pop
pop
je
xchg
dec
es
mov
xchg
ds
inc
add
sub
lods
mov
sub
dec
int3
mov
sbb
in
inc
cmpb
and
shrb
xor
mov
cwtl
lock
iret
mov
sbb
cld
mov
pop
movsb
mov
inc
dec
xorl
jnp
dec
dec
fcompl
push
pop
scas
sbb
dec
pop
sbb
and
lahf
pop
cmp
ljmp
imul
inc
mov
dec
call
int3
lods
loopne
lea
outsl
xchg
adcb
push
pushf
mov
push
iret
stos
push
and
movsl
fwait
das
into
push
xchg
ror
inc
or
icebp
das
mov
xchg
in
lcall
or
xor
xor
testl
lcall
dec
call
stos
push
fstpt
push
and
jge
adc
xor
adc
gs
push
testl
push
lods
ficomps
iret
aam
out
cmp
or
inc
add
stc
ficoms
jg
jb
sub
je
movntq
out
mov
mov
stos
cmc
bound
sub
lock
ljmpw
enter
decl
lock
jnp
cld
mov
imul
scas
cmpsb
xor
push
hlt
or
movsb
pop
pusha
std
jb
or
es
sub
insb
bound
jmp
add
orb
out
in
mov
mov
push
mov
bound
dec
daa
push
lahf
cld
sub
sbb
mov
mov
xchg
push
adcl
mov
enter
mov
mov
movsb
test
or
out
sbb
dec
shlb
stos
mov
les
push
movsb
pop
pop
dec
lds
mov
popa
out
and
test
jno
cmp
push
notl
push
push
incb
xor
sbb
xchg
sbb
movsb
into
dec
pop
adc
pop
out
adc
sub
int
fsubl
cmp
sbb
pop
mov
je
mov
jbe
fstps
sbb
xor
in
je
or
and
mov
out
pop
pop
sub
lods
stos
fstl
test
inc
mov
test
pop
pop
jns
xchg
ret
mov
dec
cmp
repnz
xchg
inc
push
add
mov
je
add
fwait
mov
bound
popa
or
jns
test
mov
clc
mov
xor
arpl
lods
addl
or
arpl
gs
mov
mov
mov
mov
test
sbb
mov
ss
shrb
sahf
jl
push
fstpl
frstor
push
data16
cmp
bound
cs
jns
push
sub
in
push
loope
ljmp
aam
inc
push
dec
icebp
ljmp
cld
sub
xor
cli
sarb
add
jnp
repnz
mov
les
dec
xorl
sub
icebp
movsb
repnz
adc
daa
mov
dec
cmp
mov
dec
movsb
xchg
pusha
sub
jge
xchg
dec
dec
enter
out
loopne
jo
movsl
dec
or
xchg
lret
dec
jb
in
push
dec
or
fs
cmp
imul
aad
jb
mov
mov
rcl
push
movsb
adc
daa
cmpps
push
push
mov
jae
or
aad
data16
repz
pusha
sbb
mov
or
sub
iret
pop
mov
cltd
xor
pop
mov
and
push
repz
out
ljmp
ss
jecxz
lret
pop
sub
xchg
dec
ficomps
lods
adc
push
cmp
sub
jp
pop
xor
mov
cmp
subb
pop
mov
mov
insl
movsl
and
cmp
adc
ljmp
pop
inc
loop,pn
fstl
ret
es
jecxz
sub
into
mov
and
movsb
cwtl
push
cmp
jle
adc
pop
lods
ret
jbe
sbb
popf
out
cmp
imul
out
sub
mov
push
into
aas
and
cmc
xorl
jae
adc
cmp
scas
arpl
cmp
out
xor
repnz
dec
sbb
cmp
shlb
cli
cmp
sahf
and
xchg
or
mov
adc
sahf
fisubrs
cs
sbb
add
mov
movsb
mov
pop
loope
and
repz
mov
insb
fnsave
ret
mov
add
test
scas
rol
pop
jp
ret
inc
std
xorl
push
lds
dec
dec
out
in
lods
mov
in
scas
add
rcll
adc
fcmovnu
ss
cmp
aad
jge
jbe
xchg
add
mov
mov
aad
pop
pusha
mov
mov
cmp
pop
nop
push
cmp
clc
inc
movsb
mov
cmpsl
mov
cmc
test
cli
push
xlat
pop
xor
out
xchg
mov
mov
mov
nop
repnz
inc
test
jbe
call
jno
mov
idivb
mov
lods
pop
push
es
push
sub
jne
mov
insb
add
and
fnstcw
inc
mov
adc
sahf
cmc
sbb
enter
stos
mov
xchg
xor
mov
sbb
movsb
lret
mov
and
sub
push
arpl
jmp
int
push
sub
cwtl
popf
gs
push
jb
sbb
pop
or
jmp
movsl
jo
jb
jge
xchg
jmp
stos
loope
scas
push
or
jno
ljmp
rclb
jmp
outsb
mov
cmp
sbb
push
movsb
pop
lret
stos
dec
cltd
pop
push
jbe
jb
mov
call
and
aam
xlat
add
fwait
mov
hlt
adc
jns,pn
xchg
enter
outsb
lods
adc
cmp
mov
or
push
push
and
push
xchg
movsl
xchg
add
push
sbb
xor
xchg
pushf
sbb
sbb
testl
hlt
hlt
das
push
movsb
and
dec
mov
sub
jle
mov
pop
jne
fs
lds
pop
sbbb
mov
push
aaa
in
push
mov
and
mov
iret
sub
push
push
mov
sub
adc
xchg
dec
fwait
bound
cld
xchg
xchg
inc
std
aaa
imul
rcl
mov
push
fsubs
adc
adc
clc
iret
daa
ljmp
mov
enter
mov
inc
movsb
std
fldcw
xchg
mov
xchg
ss
lcall
in
iret
push
mov
xchg
lea
mov
test
test
or
jp
and
mov
pop
hlt
adc
inc
out
stc
call
mov
mov
call
nop
dec
mov
movsb
hlt
lock
cmp
sbb
or
or
xor
or
mov
dec
std
cs
xchg
shl
and
add
cmc
push
push
mov
fsubrp
dec
pop
sar
mov
mov
xor
mov
std
fisubrs
jb
ljmp
ljmp
push
add
call
mov
je
loop
cmp
xor
mov
leave
cmp
rcll
stc
mov
out
cmp
pop
inc
gs
das
and
lahf
mov
ret
scas
push
dec
outsb
or
test
push
fisttpll
sarl
inc
jge
sbb
or
push
jl
scas
repnz
xchg
sub
add
daa
sub
jne
cmp
movsb
mov
nop
inc
push
dec
push
lods
mov
sub
inc
sbb
jg
je
or
adc
cmpsb
scas
rorb
sbb
push
test
jmp
ret
adc
int3
xchg
xchg
leave
outsl
ret
mov
xchg
jae
pop
dec
push
push
xchg
dec
xchg
push
iret
lcall
sbb
inc
mov
cmp
leave
mov
jbe
xchg
mov
fwait
sub
aad
mov
mov
pop
das
fldlg2
sub
mov
mov
cmp
jb
mov
clc
sbb
je
push
pop
outsb
mov
mov
cmp
shrl
out
or
mov
lods
jb
pushf
adc
xor
adc
jno
add
mov
or
dec
jge
or
rcll
incb
xor
xlat
adc
xor
lods
bound
adc
cltd
addr16
lcall
imul
add
or
lcall
inc
and
push
inc
gs
fisubl
inc
jb
xor
sub
shrd
mov
pushf
or
ljmp
mov
es
ss
es
cmpsl
pop
adc
daa
mov
scas
or
sbb
ljmp
jb
dec
and
iret
aam
mov
shlb
int3
or
mov
or
mov
sub
add
pop
shll
fists
in
sti
jo
xchg
pop
or
jno
xor
inc
pop
out
add
sti
aaa
push
call
rcrl
ljmp
mov
sub
mov
push
icebp
lods
sub
std
push
hlt
outsb
xchg
orb
fisubrs
inc
movsb
fwait
push
dec
push
ret
and
cwtl
mov
dec
sub
js
jnp
or
mov
int3
jmp
lods
and
shl
xchg
pop
xchg
and
outsb
adc
rolb
pop
ret
mov
xor
repnz
ljmp
push
test
icebp
scas
test
iret
cld
mov
pop
insb
xchg
add
sub
inc
int3
xorb
lods
adc
lds
daa
btc
mov
cmp
sub
sbb
arpl
dec
xchg
repz
fists
add
adcb
movsl
jb
dec
push
inc
xorl
cltd
xor
test
inc
jno
aaa
pop
push
and
jp
stos
sbb
sub
mov
lods
jl
out
mov
mov
sbbb
jmp
jno
ss
and
pop
lods
xor
loope
xor
fs
enter
aam
das
adc
mov
dec
shlb
sub
sti
jo
ret
popf
loopne
pusha
stos
test
scas
xor
push
outsl
ret
xlat
test
nop
mov
pop
lods
nop
mov
xchg
pop
mov
adc
in
push
jo
push
sub
inc
add
or
test
call
mov
ret
pop
fsubrl
outsl
pop
rorl
cmp
mov
fdivs
sub
pop
jns
mov
mov
xchg
pop
sub
mov
addr16
push
lds
adc
clc
xor
mov
stos
cwtl
cmpb
arpl
push
jp
fstpt
movsb
jae
jae
addr16
fdivrs
push
jecxz
pop
add
hlt
cli
push
inc
and
cltd
divb
pop
idiv
hlt
xor
imul
je
xchg
faddp
pop
mov
and
lods
stc
add
adc
jno
mov
shlb
iret
fs
int3
outsl
sub
adc
adc
lcall
in
imul
popf
add
shll
cmp
lcall
daa
push
out
popa
push
movsb
cmp
push
xchg
imul
in
xor
mov
shrl
test
pop
jb
dec
movsb
mov
xchg
jnp
pop
sub
sahf
jne
mov
mov
and
jmp
leave
bound
std
mov
mov
sub
dec
test
and
daa
xor
mov
sbb
mov
adc
add
push
enter
movsb
mov
push
sub
clc
into
shl
xchg
or
add
jl
add
push
cmpb
adc
rolb
adc
imul
fnstcw
dec
mov
repnz
arpl
mov
test
pusha
je
or
scas
mov
icebp
dec
rcr
in
adc
sbb
pusha
sub
stos
jle
jns
xchg
and
imul
push
movsb
gs
js
jns
test
int3
test
add
adc
mov
cli
insl
xchg
sub
jae
bound
mov
movsb
push
stos
pop
or
sub
sti
jno
mov
or
inc
jecxz
add
lea
stc
push
sub
push
xor
push
fisubl
xchg
out
adc
stos
mov
dec
bound
jb
popf
xchg
ja
repnz
pushf
aaa
fstl
and
mov
pop
jmp
jge
je
mov
movsb
pop
aaa
mov
test
pop
jp
insl
add
dec
jns
push
rolb
inc
scas
lods
push
inc
mov
test
sti
ljmp
sub
loope
lods
jecxz
push
pop
add
rcll
cmp
push
cmp
in
bound
cmc
mov
cmpsl
jge
mov
int3
jmp
or
bound
add
hlt
sete
shlb
jno
xchg
or
pop
popf
push
arpl
mov
dec
mull
adc
jnp
incl
gs
in
adc
adc
push
inc
inc
fadd
lcall
mov
xchg
xor
inc
pop
pushl
mov
xchg
pusha
fdivl
cltd
jae
sub
bound
jbe
cmc
in
xchg
mov
aam
cmpsb
jmp
shlb
popa
icebp
or
lock
push
mov
pop
jmp
dec
cli
jnp
gs
out
sub
lea
fdivs
bound
inc
cltd
fs
test
inc
js
in
mov
aam
out
ficoms
sbb
in
sub
mov
and
jae
cmpsb
int
addb
mov
clc
push
cmp
and
sub
je
iret
or
push
insb
outsl
mov
dec
negb
adc
jae
enter
scas
dec
sahf
pop
js
aaa
stos
int3
into
in
es
mov
push
bound
int3
movsb
lock
call
and
adc
xchg
push
pop
push
cli
push
dec
movsb
adc
xor
cmp
and
into
jnp
push
les
push
mov
mov
lods
push
xchg
in
inc
hlt
xchg
mov
fcomp
xchg
dec
and
push
addr16
mov
adc
pop
das
pop
push
repz
call
outsl
cmp
repz
mov
aaa
fstl
xor
jge
add
sbb
sub
fs
sbb
lret
adc
cmp
sub
pop
scas
into
in
das
repz
pop
subl
and
mov
fldcw
mov
mov
and
imul
ss
sarl
push
pop
add
add
es
ds
mov
fwait
mov
mov
xchg
mov
fistps
js
cmp
ljmp
add
xchg
bound
or
rcrb
stos
dec
adc
das
jns
mov
pusha
push
outsl
inc
cmp
lret
sub
mov
sahf
mov
stos
call
cmpsb
jns
push
sti
pop
pop
sub
orl
sub
jb
les
int
jb
aam
cmpsl
cmp
jb
mov
xor
hlt
mov
int
dec
aad
movsb
aad
movsb
incb
in
sbb
jle
js
imul
fnstenv
mov
in
test
repz
jmp
xlat
rcll
pop
pop
call
lods
inc
pop
and
fldenv
cltd
lret
mov
imul
popfw
adc
xchg
bound
fistpl
cmp
cmovp
push
test
mov
sub
daa
bound
imul
pop
mov
cs
aam
mov
cmpsl
pushf
ret
xor
sub
sub
pop
cmc
fsubs
pop
jmp
fs
fsubr
call
into
in
dec
add
negl
ror
in
xchg
lods
cmp
xor
lcall
rolb
hlt
inc
lret
stc
dec
jp
andl
mov
cmpsb
or
idivl
jb
push
bound
dec
outsb
shll
cwtl
and
shll
mov
and
xor
ljmp
jp
adc
movsb
cmc
std
clc
sbb
jb
mov
pop
loope
fisubl
add
add
in
pop
mov
jb
dec
sub
stc
mov
or
call
cmp
pop
xchg
xchg
fisubrs
stos
jnp
jae
out
xor
sub
push
fildl
enter
jne
stos
adc
punpcklwd
xchg
mov
test
pusha
push
or
icebp
cmp
jb
push
dec
inc
cmpsl
adc
or
dec
scas
aam
mov
cli
pop
outsl
dec
fsts
mov
out
mov
lods
sub
insb
ljmp
mov
shrl
sbb
scas
mov
cmp
push
sbb
std
pushl
icebp
shl
jns
adc
ret
adc
sub
leave
das
inc
mov
cmc
cmpsb
jno
and
dec
xchg
mov
scas
lods
xchg
inc
cmpsl
inc
or
sahf
inc
mov
push
fiadds
or
iret
into
sbb
mov
jp
push
sbb
mov
nop
dec
loope
enter
jmp
sbb
addr16
aam
dec
ret
dec
or
xchg
xchg
lcall
sahf
inc
mov
jecxz
ss
divb
adc
pop
ret
movsb
sub
xchg
cld
insb
sub
inc
jne
pmullw
fs
jno
scas
scas
leave
xor
mov
sbb
movsb
add
push
out
lods
and
add
xchg
loop
imul
mov
push
mov
sub
mov
lods
jbe
or
pop
jecxz
aad
jp
call
and
rcrl
imul
xchg
mov
sahf
call
adc
ret
stos
dec
xorb
or
icebp
and
sub
cmc
lods
int3
push
ret
sbbl
int
stos
test
es
add
push
dec
cmp
gs
adc
or
out
mov
push
adc
xor
bound
add
sub
mov
jb
les
pusha
jp
push
pop
pop
cmp
dec
popf
stos
outsb
inc
mov
pop
xor
mov
dec
inc
mov
pop
sub
ret
sub
loope
std
and
addb
mov
cmpsl
out
mov
ffreep
jl,pn
add
daa
inc
loop
sub
sub
mov
jno
stos
loop
cmp
jne
mov
jle
mov
lcall
shrl
push
dec
pop
and
outsl
das
xchg
lret
sub
pop
mov
mov
adc
lods
pop
mov
add
and
loope
push
cmp
xchg
cmpsl
test
sbb
popa
xor
bound
outsl
dec
outsb
stc
jo
enter
pop
pop
and
mov
outsl
push
xchg
jns
mov
fwait
sub
xor
jb
cli
push
lods
movsl
scas
xor
test
dec
stos
popa
je
xchg
lock
call
jge
mov
testb
aad
adc
lods
mov
sbb
movsb
push
dec
roll
xchg
jg
mov
aaa
inc
sbb
push
mov
andl
jns
adc
mov
push
jbe
lds
std
dec
movsb
inc
mov
jle
mov
push
test
xchg
ljmp
fldcw
mov
sub
and
push
mov
add
pop
pusha
mov
shll
or
test
mov
jl
or
rcr
sub
outsb
icebp
push
pusha
out
xchg
cmpl
jno
popa
push
cmp
bound
ljmp
cwtl
aam
sahf
push
push
or
cld
ret
mov
and
popf
out
mov
sbbb
das
movsb
and
bound
jb
mov
rcrl
jno
call
add
mov
inc
dec
call
adc
repz
mov
sbb
or
push
in
jne
shll
rcrl
es
fiadds
mov
inc
mov
lcall
movsb
mov
jb
mov
jbe
leave
ss
pop
cwtl
movsb
inc
mov
test
cmp
dec
mov
hlt
gs
sbbb
mov
cmp
dec
mov
addr16
add
and
pop
push
push
lods
in
dec
xor
xadd
fdivl
jg
inc
or
lea
mov
scas
jmp
dec
jne
pop
xor
mov
add
or
das
adc
lods
pusha
pop
jno
insl
xor
add
add
dec
and
mov
lcall
popf
jmp
sub
fisubs
ret
mov
pop
sarb
pop
dec
mov
lds
adc
testl
pop
mov
std
jns
pop
xchg
frstor
pop
insb
mov
and
mov
adc
adc
sub
pop
xor
inc
xor
cli
xchg
jb
or
inc
xchg
push
dec
mov
mov
fs
jle
adc
fimull
xor
jg
add
pop
bound
test
test
and
fcmovnbe
test
push
scas
outsb
jae
outsl
lods
cmp
mov
insl
or
xchg
ret
xlat
jle
loope
sbb
loop
xor
lods
bound
cmc
mov
jb
pop
push
addb
push
imul
jg
mov
jmp
das
jb
lret
and
rorl
lcall
cmp
sbbb
rorb
ret
mov
cmpsb
sub
popf
test
mov
lods
dec
les
outsb
jnp
cmpsb
int3
adc
sbb
push
clc
gs
jnp
movsb
scas
mov
das
add
dec
inc
push
jge
or
mov
mov
test
fstpt
pushf
push
mov
enter
fcomp
push
mov
rorl
or
mov
mov
cli
mov
mov
aas
negb
pop
testl
int3
ds
fisubs
stos
loopne
adc
push
je
sub
testl
ljmp
ja
popa
leave
push
scas
lds
mov
sbb
add
jnp
ret
das
xor
xchg
fcoms
inc
out
lret
add
pushf
sub
dec
and
mov
pushf
shlb
stos
xchg
cvttps2pi
idivl
xchg
icebp
mov
bound
mov
leave
sub
shl
mov
pop
fldcw
in
sub
or
dec
sub
and
jns
and
iret
mov
subl
add
aas
cmc
inc
xchg
pop
or
movsb
lcall
xor
leave
adc
add
mov
aad
cmp
xchg
push
push
movsb
fildll
pop
dec
add
mov
cmc
stos
cld
mov
rorl
inc
test
sbb
popf
pop
call
into
mov
mov
sbb
gs
xchg
push
jp
int3
cmc
ret
into
jmp
xchg
mov
mov
sub
out
inc
sub
fidivl
push
dec
call
fcmovb
movsb
stos
adc
sub
repz
jmp
jg
xchg
fsubrp
or
roll
mov
mov
outsb
xchg
mov
lret
sbb
out
test
ret
xchg
test
loop
ror
fists
mov
insb
andl
test
dec
jns
leave
lods
sar
xlat
push
xorl
dec
lcall
xor
fwait
jbe
adc
mov
rcrl
repnz
push
lods
movsb
cmpsb
inc
and
mov
call
cmpb
repnz
push
xorb
mov
gs
stos
mov
push
push
jns
pop
stc
cmp
mov
imul
stc
notl
pop
pop
faddp
cwtl
xchg
mov
fisttpl
jne
mov
push
sub
inc
push
adc
inc
jl
and
in
loop
pop
mov
pusha
dec
mov
lock
add
mov
cmp
sub
cmpsb
jge
pop
popf
cltd
jno
sub
sbb
fcomi
push
addr16
fsubrl
xor
adc
cmp
xor
lret
fcompl
ja
testb
xor
push
addr16
jb
in
outsb
fiadds
adc
dec
into
mov
mov
add
das
push
addr16
mov
and
mov
adc
movsb
es
das
pop
cmp
push
icebp
inc
xchg
xchg
in
mov
popf
jb
or
mov
sbb
cld
out
inc
add
cmp
mov
jno
and
movsb
mov
sbb
xchg
je
fdivrp
xchg
xchg
sub
lods
loopne
inc
fwait
cmpsb
jne
in
pusha
cmp
test
push
adc
inc
mov
fldenv
cld
jno
das
mov
pushf
enter
xchg
iret
ret
insb
movsb
xor
push
or
mov
adc
pop
les
xchg
inc
in
mov
bound
loop
rcrb
or
daa
cltd
iret
push
je
mov
xor
mov
xchg
mov
or
adc
bound
mov
dec
outsb
das
mov
xlat
xor
mov
jns
hlt
mov
lret
call
mov
and
pusha
adcl
lahf
sub
adc
or
pop
xor
cmpsb
push
sbb
push
mov
sub
jae
stos
repz
inc
stos
mov
xor
mov
lds
out
imul
pop
jge
sbb
adc
fsts
xorb
pusha
mov
push
sub
jae
push
mov
or
daa
stos
es
mov
add
dec
fs
jle
shr
cmpsb
mov
loop
out
jb
addl
std
pop
lods
sub
cmpxchg
inc
pop
leave
fxch
mov
addl
rorb
popf
jb
xchg
add
insl
pusha
mov
push
ljmp
bnd
jno
je
call
sub
movsb
sahf
fcompl
cmpl
xor
dec
push
in
ror
div
outsb
or
inc
cmp
jmp
inc
repz
sub
push
xor
arpl
jmp
dec
sub
leave
ds
outsl
lods
rcl
inc
jge
rcl
sbb
mov
das
cs
mov
arpl
js
xor
enter
push
filds
push
icebp
int3
jb
mov
push
jmp
pop
or
mov
lret
mov
xchg
movb
add
jecxz
shll
xchg
sub
jl
lahf
jecxz
mov
mov
sub
lret
btc
and
test
iret
cmc
cli
xchg
out
movsb
inc
inc
adc
sub
mov
mov
sub
dec
addr16
mov
add
jmp
and
cmpsb
shlb
xor
movsb
pop
or
dec
xchg
mov
push
mov
js
out
das
inc
jle
dec
cmp
ss
pop
loope
lret
enter
pusha
out
jl
jno
sub
in
mov
aad
cld
push
movsb
inc
aad
jne
pop
sbb
inc
mov
xchg
push
out
mov
mov
lret
stc
fidivrs
sbb
out
and
xchg
mov
inc
gs
xor
lea
dec
and
out
xchg
sbb
sbb
in
into
sbb
mov
insb
push
sbb
mov
icebp
repz
sub
pusha
outsl
bnd
xchg
pop
popf
dec
jns
leave
imul
lods
mov
mov
or
mov
movsl
or
mov
sahf
fmull
adc
adc
hlt
pop
push
mov
or
test
push
aaa
outsl
out
lcall
lcall
ss
lods
jmp
aam
adc
mull
imul
sub
jno
pop
insl
cmpsl
sbb
push
bound
rolb
mov
dec
jp
pop
inc
shll
subl
push
mov
sbb
xlat
enter
es
dec
add
movsb
lcall
int
xorl
sbb
sbb
jne
xlat
lea
pusha
fwait
cltd
sahf
enter
jl
jns
lret
stos
lds
dec
fwait
push
push
mov
fbld
lea
nop
add
fsubl
pop
sub
lods
addr16
imul
popa
repnz
scas
dec
xor
push
imul
lods
cs
icebp
pop
cmp
mov
dec
inc
mov
data16
xchg
cmpl
push
movsb
les
lcall
inc
aam
imul
sub
jb
movsb
mov
sti
imul
dec
movsb
stc
aad
xor
test
push
adc
paddusw
xor
fwait
mov
mov
sbb
outsl
push
aam
insb
push
mov
and
test
aad
bound
mov
repz
lcall
mov
out
lcall
inc
dec
mov
sbb
xchg
repz
push
icebp
test
adc
mov
lods
sbb
inc
dec
sarb
adc
gs
xrelease
mov
movsb
test
lea
pusha
or
sub
in
xchg
aaa
cmp
shl
sbb
adc
out
bound
fcoml
dec
adc
insl
push
int3
ss
lcall
jae
movsb
icebp
nop
inc
pop
imulb
in
testl
mov
popf
out
xchg
scas
out
out
mov
xor
std
enter
pop
fnstenv
data16
cmp
push
movsl
sbb
push
xchg
lret
jge
add
inc
xor
in
add
ljmp
cmp
jne
repz
test
int
dec
or
sbbb
jno
xchg
lret
ret
or
and
mov
jmp
je
pushl
fstpl
push
lcall
jb
nop
push
out
movsb
dec
dec
insl
outsl
push
jmp
xchg
xlat
test
aad
or
sarl
jno
test
jb
jns
mov
xlat
add
jns
mov
dec
pop
addr16
mov
mov
lcall
inc
mov
and
sahf
stos
jae
call
mov
xchg
orl
push
and
sub
ret
mov
sbb
cmp
sbb
sbb
outsl
sub
iret
arpl
xchg
outsb
xchg
mov
dec
mov
cmc
push
dec
ds
loop
xchg
pop
stos
fcom
imul
pop
mov
cli
mov
jb
in
loopw
pop
movsl
lcall
enter
sub
out
in
int
loope
or
adc
cmp
sub
sub
test
test
cmp
xchg
jo
loope
jle
mov
and
xchg
shll
fs
leave
dec
movsb
mov
add
xor
inc
negl
repz
aas
add
mov
cmp
xor
push
hlt
lcall
xor
mov
std
xor
arpl
xor
rolb
push
push
pop
mov
outsb
int
cwtl
jo
nop
out
arpl
push
clc
xchg
addl
daa
jle,pn
xor
inc
adc
inc
mov
fcomp
jno
push
das
fs
iret
mov
jg
push
or
push
sbb
xchg
inc
lock
push
inc
xchg
add
xor
push
outsl
jae
xor
adc
push
jecxz
pop
and
push
imul
scas
lods
cwtl
loop
in
stos
repz
movsb
loop
stos
jno
xchg
and
adcb
std
jb
adc
jle
xor
pop
sub
or
ljmp
clc
cmp
jne
jbe
sub
lret
pop
push
popa
sub
lods
xchg
and
les
sub
jge
pop
or
mov
repnz
adc
adc
cld
dec
out
roll
pop
andl
dec
push
sti
cld
inc
push
pop
jl
push
pop
inc
push
stos
jge
push
mov
cmp
test
mov
test
xor
push
into
mov
rcrb
std
fimull
jnp
sub
mov
mov
add
pop
mov
ficompl
mov
lock
andl
imul
pushf
jb
pop
hlt
sub
decb
pusha
cmp
fdivrs
and
daa
popa
and
or
xor
sahf
pop
lahf
inc
sti
lods
sbb
mov
push
std
inc
xchg
cmp
loope
shll
pusha
leave
mov
sub
aaa
or
xor
cwtl
cli
into
mov
testl
ja
sti
ljmp
dec
add
mov
and
jns
sub
lods
aaa
pusha
or
sub
mov
push
mov
cmp
sub
hlt
je
cmp
into
andb
cwtl
mov
div
xor
xor
dec
or
stos
mov
sbb
add
jae
je
or
outsb
dec
rcrb
and
mov
sub
lods
js
mov
push
dec
push
xchg
adc
subb
cmp
mov
ja
stos
shlb
int3
sub
inc
lods
fldpi
pusha
sbb
mov
fs
ficoms
xchg
aam
push
mov
in
pop
icebp
in
loopew
sub
loop
jne
xchg
ja
jbe
cmp
or
aas
rcll
pop
int3
add
adc
jecxz
push
sbb
iret
dec
das
push
lea
cli
sub
movsb
xchg
jb
inc
adc
pop
pop
dec
ret
sub
and
push
mov
or
xchg
jmp
sbbb
push
xchg
testb
cmpsl
mov
pusha
jmp
xchg
jge
fadds
sub
jb
jg
jbe
push
or
das
fwait
sbb
rcrl
lcall
lods
jle
sar
lds
les
in
in
and
mov
mov
ret
or
bound
into
sub
repnz
mov
stos
icebp
cmp
movsb
xchg
or
adc
les
adc
jno
out
mov
xor
loope
lcall
outsb
outsb
sub
jecxz
fldenv
jp
cs
call
stos
pushf
pop
jns
push
mov
rep
xchg
jbe
mov
xchg
fcompl
mov
or
xchg
icebp
das
dec
divl
push
or
out
test
mov
call
mov
out
adc
push
emms
jno
push
mov
push
dec
scas
data16
push
test
sbb
cli
movsb
xor
out
lea
fdivs
into
pusha
and
pop
lahf
cli
pop
jb
xchg
bound
mov
xor
xchg
jmp
push
cmc
adcl
jecxz
jbe
jb
push
push
sbb
inc
jbe
js
inc
into
imul
push
mov
xchg
popf
push
inc
ljmp
inc
adc
dec
in
sahf
sub
out
fldl
pop
stc
mov
je
sub
aaa
xchg
sahf
pop
fyl2x
lods
imul
sub
mov
or
aad
cmp
jge
cwtl
fidivs
jae
je
ret
xchg
xchg
mov
inc
mov
cmp
jo
push
fst
lods
cmp
stos
xchg
jae
pushf
je
outsl
dec
push
mov
sbb
lret
xor
into
out
orl
roll
popf
lea
push
pop
pop
popa
and
sub
mov
cli
and
imul
movsb
mov
leave
ljmp
inc
jns
ret
adc
push
cmp
mov
xchg
push
into
lods
inc
or
jns
mov
movsb
push
inc
pop
sub
push
mov
jle
mov
imul
addr16
inc
call
and
clc
mov
nop
push
out
les
stos
out
push
mov
data16
pop
cmp
sub
push
push
dec
hlt
shll
cli
les
nop
and
hlt
inc
cmp
lret
aad
js
aad
xor
inc
rcr
or
jno
pop
push
sbb
aas
subl
es
clc
leave
inc
test
movaps
dec
shl
iret
in
inc
clc
or
push
adc
dec
push
push
and
rcl
shrb
inc
out
test
shll
cmp
and
fs
inc
mov
sbbb
mov
ljmp
jl
mov
pop
sbb
ret
inc
inc
add
cmp
cmp
movsb
fistps
daa
mov
les
adc
cmp
scas
mov
sbb
icebp
bound
stos
fdivrs
push
mov
mov
lods
pusha
sbb
mov
cld
hlt
jecxz
movsb
adc
dec
or
iret
movsl
cmpsb
or
jmp
dec
test
jno
ret
cmpsl
fwait
inc
movsb
loope
test
dec
mov
pop
cld
imul
loop
xor
jo
xchg
adc
mov
dec
andb
pop
in
push
sub
inc
aaa
mov
inc
cmpsl
and
pop
mov
and
imul
stos
pop
imul
pop
cltd
imul
cmp
movsl
jle
sbb
jb
pop
dec
mov
jmp
loop
fsubs
repz
sub
movsb
jg
jne
and
jecxz
pushf
adc
nop
mov
fwait
adc
mov
rcl
jo
lcall
lcall
mov
jg
mov
mov
mov
shrb
push
pushf
xor
fcmovne
je
dec
mov
sub
and
in
mov
and
pop
jb
addl
fisttpl
movsb
sbbb
push
jae
sbb
adc
push
pop
xor
popa
in
pop
clc
cmpsl
js
or
inc
das
sbbl
xor
sbb
iret
sub
dec
fcomps
pop
hlt
mov
daa
adc
mov
test
sahf
mov
sti
mov
je
mov
mov
into
mov
mov
mov
movsb
xchg
iret
push
es
mov
jl
cld
sub
push
insl
fimuls
into
pop
adc
push
mov
adc
sub
mov
push
scas
push
bound
adc
mov
cmc
movsb
ror
dec
inc
mov
movsl
mov
add
cli
stos
add
shr
outsb
sti
jge
stos
xor
fwait
inc
xor
add
mov
adc
mov
lods
mov
mov
bound
inc
loope
test
sbb
sbb
fcoms
jno
movsb
std
add
sbb
and
push
je
lret
jg
push
xor
aad
lock
pop
pop
jb
adc
mov
fidivs
scas
push
push
fiadds
fsub
push
test
insb
arpl
lea
aam
sub
mov
addb
es
mov
mov
mov
sbb
insb
or
ljmp
mov
adc
or
mov
mov
pop
jecxz
push
les
jp
cmp
cmc
sub
mov
loopne
xchg
cmp
cmp
push
cmp
mov
lods
and
push
dec
sub
adc
cs
mov
repz
out
jl
lea
lock
pop
ret
mov
jmp
lods
xor
or
hlt
popf
cmpsl
cmpsb
mov
out
scas
sbb
push
push
pushl
pop
cld
jno
into
arpl
sbb
pusha
cmp
sbb
in
enter
or
pusha
jge
xchg
jb
cmpsl
xlat
loope
stc
pop
out
fisttpll
mov
rorb
xor
or
push
sbb
sub
lods
pop
inc
cld
or
xchg
sti
imul
sbb
ud0
push
push
inc
add
and
mov
rcrb
loopne
xor
stos
and
push
push
ficoml
pop
inc
shlb
cmc
testl
nop
cltd
js
idiv
jo
sbb
fs
mov
shl
aas
movsb
faddl
jno
fsubs
xor
in
xor
sub
or
das
push
pop
xchg
outsl
jns
ss
push
into
movsb
add
sub
fst
std
fs
cli
pop
ret
stos
fsubrl
or
insb
ret
imul
xchg
add
mov
js
jne
nop
cmp
adc
outsl
out
jns
adc
and
adc
jo
xchg
sbb
xchg
movsb
mull
mov
and
adc
rcrl
in
insl
jne
mov
jb
ficoms
pop
push
lea
js
mov
bound
popf
movsb
push
cmc
xchg
cmp
outsl
lds
je
mov
hlt
adc
sbb
and
lock
mov
lcall
insl
mov
jp
aad
into
lds
mov
pop
lret
mov
sub
mov
adc
enter
stos
incl
mov
dec
jg
leave
push
fwait
xor
lods
ss
aam
push
jnp
dec
outsb
push
mov
mov
jb
add
lds
add
test
fsubr
pusha
jb
add
outsb
jno
push
pop
jmp
mov
dec
fxch
bound
shrb
jns
mov
pop
fistl
add
or
and
ljmp
repnz
mov
mov
pop
ja
xchg
mov
addr16
push
out
mov
xor
sub
sbb
ret
and
xchg
int3
and
popa
add
mov
mov
repnz
xchg
insl
mov
out
dec
jmp
xor
adc
adc
subb
jge
mov
outsb
sbbl
lds
jnp
icebp
push
jae
inc
xchg
mov
int
sbb
outsb
xor
es
mov
into
fildll
fdivl
lds
fidivl
ret
adc
iret
cld
fdivrp
insb
dec
push
push
bound
cmp
aam
ja
repnz
mov
cs
movsb
lock
sti
hlt
jg
mov
jnp
movsb
dec
mov
adc
roll
ljmp
movsb
xchg
jbe
mov
mov
cwtl
out
fimull
roll
xor
sub
ret
and
jae
test
jmp
mov
lock
jb
pop
or
cltd
ret
dec
pop
sub
push
icebp
xchg
call
add
mov
add
lea
flds
bound
insb
push
xor
filds
push
push
mov
data16
xor
stc
adc
jp
xor
xchg
jb
das
ss
sbb
into
mov
cmp
in
xlat
push
sub
cmpsb
jno
stc
into
fs
mov
scas
inc
cld
jb
out
mov
fwait
xchg
jl
add
cmp
js
jns
push
idivl
je
int
repnz
ret
lret
sbb
mov
sbb
stos
push
pop
mov
int3
data16
adcl
add
add
pusha
xchg
in
dec
addr16
sbb
shrb
dec
faddp
rcr
dec
aad
arpl
insl
xchg
das
adc
cwtl
inc
sbb
push
push
push
mov
xor
dec
jecxz
std
add
in
hlt
mov
fadds
pop
pusha
insl
jge
sbb
mov
xchg
sbbl
adc
cmovge
sub
sub
jnp
ss
jns
xchg
jns
sarb
iret
int
and
out
xor
mov
imul
testl
mov
pushf
mov
mov
sub
mov
outsb
call
mov
jae
repnz
sub
addr16
mov
scas
ret
mov
dec
pop
roll
lods
xor
iret
lods
adc
dec
pop
pop
scas
dec
xor
mov
paddd
lahf
jmp
lds
mov
lret
add
pop
mov
ret
pushf
mov
call
mov
out
inc
xor
dec
xor
outsb
repnz
mov
add
ret
xlat
dec
inc
xchg
stos
push
mov
insb
cmc
sbb
ret
invd
mov
push
xor
mov
push
mov
sub
sbb
add
in
inc
or
inc
shl
xchg
xchg
outsl
insb
cli
pop
sub
lret
jne
mov
icebp
push
mov
adc
push
push
cmpsb
pop
xor
test
rorl
scas
pop
xchg
int
in
fisubrs
mov
mov
sub
into
divb
pop
xor
cmp
jno
add
cmp
insl
lcall
mov
sbb
ds
xor
dec
and
jmp
dec
out
sub
call
or
sub
lods
mov
fcomps
dec
fiaddl
cmpsl
mov
and
mov
mov
bound
sbb
vminsd
pop
push
add
pusha
adc
pop
movsb
mov
data16
cmp
shll
pop
in
mov
jnp
bnd
jl
xor
ret
into
aaa
comiss
mov
inc
add
cwtl
jb
xchg
jecxz
mov
rcrb
loope
outsl
push
fsubl
aad
lods
jge
xchg
ljmp
and
movsb
addr16
dec
scas
cmp
dec
xor
push
ret
dec
mov
loop
in
sub
shlb
call
lret
or
cmp
ret
add
pusha
or
pop
inc
or
cmp
pusha
int3
and
dec
enter
jne
cmc
mov
xchg
loopne
xchg
inc
mov
rorb
pop
adc
rcr
fsubrl
lods
xchg
sarl
addr16
imul
fsubrs
bound
dec
adc
mov
adc
pop
jle
push
pop
inc
ret
push
subb
aam
sub
jne
lcall
sub
pusha
jns
in
aam
xchg
pop
mov
or
pusha
sub
push
xchg
add
push
lds
mov
adc
fadds
inc
jp
xchg
add
push
ds
stos
push
ss
or
pop
xor
pop
fldcw
xchg
mov
in
push
push
repz
sbb
ret
and
push
cmp
fcompl
pop
mov
sbb
rcrl
notb
or
mov
mov
sub
shlb
mov
mov
pop
inc
sbb
add
or
lret
call
xlat
pusha
cmpsl
pop
hlt
or
mov
movsb
es
cld
jne
push
xor
pop
shll
lcall
out
sbb
mov
iret
pop
sbb
repz
inc
icebp
mov
movsb
shr
pop
loope
mov
mov
pushf
jbe
sbb
test
mov
jmp
pop
jle
push
dec
push
shlb
fisubs
test
jge
cmp
fistps
mov
or
mov
leave
sub
and
sub
inc
sub
lods
inc
and
sahf
ret
mov
sub
enter
fldt
sub
dec
add
aaa
or
movsb
aad
das
mov
sahf
jmp
in
sbb
sbb
xchg
inc
insl
outsl
stos
inc
addr16
sub
into
add
movsb
out
cltd
fnstcw
pop
dec
in
mull
dec
out
or
cmp
adc
ret
jbe
sbb
pop
iret
arpl
sbb
rclb
into
push
pop
insl
lods
sahf
fwait
dec
clc
xchg
cli
adc
lcall
add
ret
mov
inc
icebp
out
scas
outsb
jns
cmp
arpl
push
icebp
movsb
mov
sbb
adc
cmp
jnp
pop
push
adc
mov
in
cmp
mov
sar
ret
and
movsb
jg
push
pop
mov
cld
pop
pop
imull
xchg
push
sub
push
lret
adc
scas
mov
xchg
mov
repnz
dec
cmp
ds
and
dec
pop
mov
mov
xchg
or
dec
and
dec
mov
pop
jl
loope
outsb
int
arpl
pop
fs
and
or
jp
dec
mov
push
bound
hlt
lods
push
inc
or
lret
repz
clc
mov
test
in
xor
jg
mov
loope
ljmp
addb
dec
aaa
fsubrs
push
loope
inc
jae
cwtl
mov
es
int
ret
xchg
or
push
ret
mov
sub
fcomi
gs
push
cs
cmpsb
sbb
and
mov
mov
pop
push
add
pop
lds
mov
and
xchg
push
cmp
or
push
and
add
ss
test
imul
sbb
subl
lds
pop
pop
jmp
stos
call
mov
push
xorl
sbb
fldenv
notb
mov
mov
xchg
shrd
sub
sbbb
mov
or
cli
pusha
lcall
ret
and
popf
dec
pop
mov
sub
sbb
jbe
ficoml
stc
xchg
jmp
dec
and
jle
lods
cmpsl
testl
movsb
or
sub
fstpt
sub
insb
outsl
sub
movsb
xchg
bound
push
xchg
out
pop
add
shlb
adc
xor
sub
mov
sub
xchg
cmp
jb
lea
test
xchg
in
fisubrs
jb
sbb
push
cmp
aam
sub
and
pop
test
adc
mov
push
and
mov
sub
push
push
shlb
mov
add
xorl
push
int3
mov
mov
js
mov
mov
lahf
sahf
dec
jecxz
negl
jp
loopne
sbb
bound
and
adcl
mov
shlb
loope
or
xchg
cmpsl
cmc
push
cmpsl
mov
lcall
jg
pusha
dec
cmp
xchg
dec
jae
pop
lods
adcl
dec
es
icebp
mov
jno
mov
and
jns
inc
iret
push
lcall
add
mov
fs
ret
pop
inc
movsb
mov
xchg
jae
jge
leave
sbb
cs
sub
ret
mov
mov
pop
das
scas
movsb
inc
insl
xchg
and
lods
and
hlt
fldt
jns
mov
sbb
fcmovne
and
mov
cmp
into
xchg
mov
into
fisubl
test
out
mov
mov
stos
fwait
outsl
das
dec
jmp
movsb
cld
lock
mov
cli
imul
sbb
adc
jg
or
sbb
mov
js
add
lret
out
and
mov
mov
or
or
stos
sbb
outsb
pop
and
aas
jo
inc
ret
xor
jb
call
inc
add
sub
mov
cmp
shlb
push
outsl
cmp
ja
or
sarb
arpl
pop
bound
mov
ret
cltd
push
scas
or
and
call
and
lods
push
lods
sub
sbb
out
mov
add
dec
push
xchg
out
inc
insb
out
test
enter
push
mov
pop
gs
adc
stos
push
ret
xchg
mov
xor
orl
movsb
hlt
pop
push
sub
fsubrs
enter
ret
ja
xor
push
lods
jbe
lcall
in
jl
cmp
push
xchg
movsb
lods
popa
xchg
cmp
lret
adc
ljmp
xlat
dec
int
jg
xor
sub
jmp
imul
ljmp
jae
add
fldcw
divl
stc
mov
jae
dec
dec
dec
cmpsb
add
fsubrp
cmp
ffreep
cs
mov
add
fstpl
mov
in
jae
push
ds
xor
mov
pop
xor
jo
ret
pusha
leave
push
push
or
aam
sbb
ss
lods
xchg
aad
sbb
mov
idiv
sahf
xor
repz
mov
add
xchg
jmp
pop
dec
adc
sbb
jle
and
push
not
mov
dec
sbb
mov
jmp
out
and
cmpsb
stos
xor
loopne
int
loope
js
lds
xorb
xor
dec
aas
scas
subl
sub
pop
dec
push
or
movsl
mov
adc
mov
ljmp
aam
xchg
cmc
scas
jmp
inc
iret
data16
mov
or
mov
xchg
cltd
jo
ret
mov
mov
and
in
mov
aam
stos
pop
xor
cmp
push
cmp
pop
lcall
sub
movsb
mull
sbb
rolb
andl
icebp
or
sub
sbb
cmpsb
xor
cmp
mov
jb
mov
adc
xchg
popf
jnp
cmovp
mov
sub
xchg
jmp
sub
enter
pop
mov
mov
filds
sahf
dec
mov
iret
and
dec
lods
add
mov
stos
movsb
sbb
sub
dec
jp
and
mov
xor
das
lods
cmpsb
sbb
pop
adc
push
dec
test
frstor
mov
lods
mov
pop
push
scas
mov
movsb
mov
leave
stc
outsl
and
fbld
jmp
mov
jmp
enter
insl
jb
push
stos
jns
loop
mov
stos
xlat
dec
xchg
cmp
mov
pop
mov
rorl
sub
out
movsb
add
push
mov
gs
push
or
push
lds
stos
mulb
int3
mov
fldcw
mov
jp
call
mov
daa
sahf
inc
icebp
add
push
pop
adc
jp
es
and
in
ljmp
pop
mov
data16
jb
and
dec
sbbb
shlb
pushf
mov
es
mov
mov
push
xchg
xor
jecxz
in
cmp
sub
mov
incl
xchg
adc
xor
sbb
hlt
cmp
fadd
adcl
mov
mov
inc
xor
add
sub
in
jp
jp
mov
ret
inc
lods
xchg
out
mov
cli
sub
in
and
push
test
into
push
pop
ljmp
arpl
iret
xchg
in
lea
mov
loopne
in
push
and
sarl
push
cmp
mov
lods
fsubrs
xor
scas
stos
mov
mov
dec
iret
lea
icebp
fists
movsb
sarl
je
nop
xor
shll
movb
stos
and
fld
push
mov
sbb
out
sub
insl
dec
lret
jnp
xchg
push
cmp
xchg
mov
clc
mov
jp
push
aad
mov
repz
ss
addr16
mulb
jne
jae
fidivrl
mov
js
mov
mov
data16
mov
sbb
insb
scas
inc
mov
pushw
iret
and
cmpb
sub
test
jno
or
mov
inc
scas
cmpsl
shrl
jmp
icebp
stos
in
out
cmc
pop
cs
or
push
inc
add
jge
jno
or
cs
pop
mov
mov
dec
sub
fmulp
sub
pop
push
push
ret
xchg
in
mov
xchg
jp
lea
pushf
push
jp
jecxz
pop
int
cmpsl
orl
dec
shrb
test
jae
pop
aam
loop
mulb
pop
add
push
lahf
add
push
jecxz
pop
lods
dec
leave
fidivrs
cmc
popa
test
call
aad
push
cld
push
jb
dec
pop
cmp
sbb
jl
mov
addb
je
fidivrl
scas
dec
mov
lcall
sbb
push
cld
imul
jmp
mov
dec
mov
pop
pushf
aad
shlb
repnz
jl
dec
ja
dec
inc
inc
test
hlt
dec
jno
daa
sbb
xchg
insb
adc
cmpsb
pop
cmpsb
fdivrl
call
cmc
sbb
xchg
or
mov
xor
push
pop
nop
sbb
subb
and
sub
inc
imul
cmpsl
in
push
dec
sti
in
scas
in
repz
adc
lcall
cld
cld
ret
lcall
cs
ja
ss
into
or
in
and
movsb
xor
mov
adc
pusha
shl
or
aaa
fwait
dec
adc
sbb
pop
mov
sbb
pushf
inc
jb
push
adc
cmpsl
jo
fcoms
sub
push
nop
cmc
dec
out
mov
nop
add
jg
ss
sub
repz
lea
ds
cmp
out
jns
cmpsl
or
jo
mov
das
xchg
in
sbb
inc
sub
mov
bndldx
int
frstor
sub
jae
std
sub
movsb
icebp
and
aam
in
addr16
pop
loope
ljmp
inc
inc
and
scas
mov
mov
jge
ds
cmp
mov
ret
push
jne
push
lock
jle
xor
in
or
xchg
xchg
mov
adc
adc
out
jae
out
movsb
aaa
or
out
jmp
cs
jle
lods
test
xchg
cmc
out
shll
das
into
scas
fidivl
mov
negb
inc
jle
bound
lods
add
lahf
imul
add
adc
leave
lods
adc
sub
sub
stos
int3
adc
push
fwait
movsl
nop
xchg
fmull
lret
mov
fidivl
cmp
aam
sub
fwait
mov
enter
stos
mov
adc
jb
shl
push
gs
aad
int
in
mov
dec
sub
loope
scas
push
mov
push
enter
dec
movsb
cmp
bound
xchg
dec
dec
sub
movsb
inc
enter
add
stos
mov
mov
jb
add
repnz
sbb
xchg
mov
cmp
repz
sbb
mov
sbb
push
mov
inc
aas
test
int3
dec
imul
inc
andb
pop
sub
push
jmp
pushl
adc
mov
rol
sub
push
jno
push
leave
cmpsb
mov
fisttpl
sub
add
mov
jge
arpl
mov
mov
hlt
mov
lods
cmc
pushf
mov
pop
repnz
push
push
stc
cmp
jp
xorb
ljmp
adc
push
sahf
xchg
xorl
aaa
mov
clc
cmc
xor
sbb
aam
adc
mov
adc
jb
cmp
in
test
pusha
addb
cmc
or
lods
aad
cmpb
xchg
and
movsb
xor
bound
es
inc
and
pop
mov
fisubrl
scas
push
xchg
adc
movsb
and
bound
fstp
mov
mov
or
icebp
mov
mov
push
or
lcall
int
add
stos
push
or
aad
mov
adcl
repnz
mov
subb
movsb
jp
aas
xchg
gs
fwait
sub
lea
sbb
sbb
sbb
dec
sahf
xchg
test
ja
mov
arpl
xor
movsb
push
jno
lods
jmp
cmp
add
fwait
addb
ljmp
rol
jo
imulb
frstor
cwtl
fidivl
cltd
ss
mov
rcll
imul
dec
push
shll
pop
lret
jmp
and
outsl
repnz
ds
add
pushf
loopne
lock
inc
lret
jo
mov
fsubrl
push
jb
stc
jno
shll
push
add
mov
out
sbb
test
lock
jns
stos
adc
jb
movsb
xchg
cmp
pushf
or
jo
jae
mov
les
mov
shl
jge
repnz
sbb
jge
push
mov
dec
in
faddl
and
inc
push
cmp
rolb
xor
push
or
push
lods
add
jns
adc
pushf
shl
mov
cmp
arpl
inc
ljmp
xor
jb
jo
rcrl
outsb
push
stos
mov
inc
fmul
ret
cwtl
add
sub
jmp
jecxz
push
jns
mov
push
out
nop
or
fnstenv
addl
pop
insb
roll
pop
mov
add
pop
xchg
jnp
pop
cmp
push
or
call
mov
fldcw
push
and
shll
push
cmp
mov
push
ds
sub
cs
stos
imul
inc
inc
aad
adc
jmp
jo
and
xchg
incl
xchg
shll
push
xchg
movsb
push
pop
or
ss
in
add
xor
inc
adcb
sub
sbb
dec
mov
sbb
mov
and
loope
jp
icebp
movsb
fldenv
xchg
adc
xor
fiaddl
mov
movsl
or
int
or
cmp
xlat
push
adc
out
aas
js
andb
mov
cs
hlt
sub
ljmp
and
call
xchg
pop
xchg
cmp
pop
or
in
xor
in
xchg
rcll
pusha
add
orb
adcb
sarb
movsb
fcmovnu
shll
mov
mov
mov
xor
add
or
sahf
pop
or
inc
dec
lea
push
adc
fmuls
mov
or
push
movsb
sbb
and
cmc
or
testb
inc
loope
inc
inc
test
rcll
jb
out
sbb
fsts
xchg
sahf
mov
mov
out
ds
loope
sbb
add
push
adc
xlat
bound
cmp
xor
stos
pop
xchg
lahf
cmpl
mov
jae
iret
cmp
ret
pop
movsb
jno
out
rorb
mov
rcll
and
int
xor
mov
jp
xchg
int
dec
repnz
loope
mov
in
lcall
arpl
jl
cmp
xchg
xor
lock
lods
adc
mov
fildll
jbe
xchg
sti
mov
mov
jns
or
jbe
pop
es
rcll
jp
loope
add
aaa
push
cmp
pusha
lea
cmpsb
dec
ret
insb
fldenv
dec
mov
jb
jg
and
outsl
lcall
push
stos
stc
push
inc
jns
and
lea
cmp
jle
xor
xchg
mov
sbb
dec
and
js
push
test
mov
jns
add
mov
inc
lcall
aad
scas
adc
mov
xor
arpl
mov
xchg
push
pusha
sub
mov
inc
inc
shll
dec
cmp
aam
and
cmc
sub
shl
nop
xchg
outsb
mov
xchg
pop
push
aad
jnp
mov
mov
decl
divl
mulb
pop
jae
xor
mov
mov
ficomps
mov
push
add
mov
clc
adc
push
scas
imul
call
sbb
shr
jmp
xchg
stc
push
movsb
mov
mov
xor
jns
dec
rorl
cmp
jno
sub
pop
adc
mov
lret
and
mov
and
in
out
jp
adc
fildl
pop
sbb
cltd
aaa
lea
mov
rorl
ret
mov
dec
iret
das
push
hlt
pop
cmp
pop
into
lahf
cmpsl
mov
test
cmpb
aad
jge
ljmp
insl
inc
push
jbe
addr16
pusha
insl
or
lahf
dec
in
in
jmp
movsb
roll
mov
lret
outsb
jmp
jbe
mov
loope
cs
leave
push
push
adc
mov
stc
aaa
jbe
push
push
stc
and
cwtl
test
repz
enter
testb
mov
ficoml
bound
lods
jne
out
addb
bound
add
sub
or
mov
outsl
mov
pop
and
rcll
push
js
adc
cmp
mov
in
loope
inc
xchg
inc
sub
sar
popf
rcrb
gs
lea
sub
daa
sub
ljmp
rcll
jns
stos
addb
xchg
jne
out
mov
out
xlat
mov
lods
pop
mov
loopne
dec
scas
jl
fisubrs
roll
mov
or
mov
xchg
cli
mov
ss
test
negl
mov
inc
xchg
mov
out
fldl
mov
cmp
or
cmp
push
mov
bound
ljmp
mov
jnp
fmul
pop
pop
mov
cli
les
scas
push
inc
jmp
sbbb
mov
add
push
shlb
testb
and
stos
enter
leave
test
mov
mov
rcll
movsb
jo
lcall
movsb
and
cmp
or
add
mov
bound
ljmp
fidivrl
in
je
orl
ss
mov
in
repnz
dec
pop
dec
mov
sub
out
cmp
push
pushf
lcall
sub
inc
push
inc
add
xchg
mov
cmpsl
aad
out
or
add
jbe
shll
push
or
mov
iret
add
cmp
pop
lea
xor
xchg
cmp
mov
dec
xlat
push
lods
xchg
push
adc
aas
lcall
xor
mov
test
pop
cmp
fidivrs
movsb
test
adc
fwait
bound
mov
rolb
or
mov
cltd
mov
nop
mov
lcall
xor
dec
lock
out
or
bound
mov
mov
inc
frstor
fcoml
ljmp
js
lods
mov
cld
iret
cltd
int3
adc
movsb
int
call
arpl
adc
sbb
mov
or
outsb
add
pop
pop
dec
es
jnp
insl
lcall
sbb
sub
ljmp
push
push
push
push
sbb
test
stos
or
lcall
xchg
lods
lock
stos
or
sub
pop
sub
push
dec
push
jge
lahf
sbb
inc
insl
insl
or
sbb
inc
sub
pop
adc
sti
stos
or
stos
jmp
int
xchg
loopne
pop
das
pop
push
ss
adc
outsb
mov
ss
pop
je
hlt
push
into
leave
enter
inc
cltd
sub
pop
ja
lds
mov
rolb
bound
and
ret
ret
push
ss
lock
and
xchg
xchg
and
push
fsubrs
cmpsl
or
mov
pop
rclb
lret
ret
cmp
mov
stos
fucomp
fistps
jecxz
mov
loopne
das
fldl
lds
mov
scas
add
aam
mov
mov
mov
xor
adc
mov
outsl
pop
out
jnp
mov
addr16
mov
rcr
sub
mov
mov
cltd
clc
jecxz
fsubrl
into
xchg
inc
pop
lods
ret
je
shr
cld
das
fwait
jl
cmp
decb
sbb
fwait
sub
add
outsb
mov
sbb
pop
pop
mov
xor
xor
cwtl
andl
fiadds
push
sub
enter
mov
xchg
div
mov
shlb
iret
cmc
push
push
and
push
push
or
cmc
jmp
scas
jbe
in
add
lcall
repz
mov
xor
add
mov
aas
jae
movsb
ficomps
loopne
nopl
xchg
int3
add
push
mov
fnstcw
dec
jnp
pop
ret
xchg
push
insl
jno
mov
or
dec
sbb
pop
ds
xchg
ja
mov
jp
arpl
pop
fwait
cmp
bound
lcall
fwait
loope
fstpt
sub
movsb
cld
pusha
mov
mov
ja
mov
jb
loope
mov
cli
xchg
imul
mov
sub
ret
gs
mov
sbb
rclb
add
xchg
cli
enter
add
hlt
inc
add
xchg
jge
stos
xchg
icebp
fcmovb
sub
pop
xor
inc
sbb
rcll
fidivl
sbb
and
xor
mov
and
aas
sbb
repz
scas
dec
in
loope
or
xchg
pop
js
fsubrp
pop
stos
xchg
mov
cs
inc
int3
cwtl
in
movsb
stos
sbb
dec
jno
pop
mov
xor
loopne
push
jae
or
dec
fiadds
stc
xchg
and
dec
fcmovnb
jmp
mov
or
sbb
imul
mov
movsb
xchg
out
xchg
xchg
mov
cs
sub
jns
insb
pop
aas
leave
push
or
push
or
sub
es
stos
cmp
or
ficoms
jo
repz
mov
push
sub
jo
sub
test
add
das
mov
sub
inc
jbe
pop
jnp
fisubrs
and
mov
xchg
push
std
mov
jno
mov
ljmp
iret
push
pop
push
sub
movsl
decl
imul
sbb
pop
fmull
cwtl
xor
or
out
mov
sub
or
dec
mov
inc
mov
mov
outsb
daa
lods
das
ret
fmuls
pop
jle
and
stc
or
mov
dec
adc
push
pop
push
push
mov
inc
stc
inc
and
mov
shr
lock
pusha
roll
jmp
mov
push
push
cld
cmp
xchg
pop
pusha
adc
stos
lcall
or
xchg
and
in
ret
pusha
dec
sbb
scas
loope
out
inc
insl
push
add
jecxz
pop
push
sub
in
lds
sub
xchg
and
imul
lahf
loope
jae
loope
push
xchg
sti
arpl
and
sub
xor
iret
out
or
lea
cmp
mov
popf
insl
cwtl
inc
inc
push
or
hlt
xor
aad
jg
sti
push
inc
pop
sub
pop
mov
adc
and
fisttpl
loopne
mov
pop
mov
mov
daa
lret
rcrb
dec
or
in
ret
push
movsl
xor
xchg
je
ja
mov
push
dec
sub
jge
ljmp
les
sbb
mov
cs
lods
cld
jns
pop
fidivrl
mov
movsl
push
sub
popf
xchg
xchg
gs
in
loope
adc
ret
jp
ret
jns
dec
xchg
push
int3
insb
sarl
ret
rclb
insl
mov
pusha
mov
adc
dec
lods
lea
pusha
leave
insb
pop
aad
jle
subb
fcoms
mov
or
cmp
sub
out
xchg
mov
lcall
fisubrl
add
sti
movsb
lock
gs
insb
xchg
sub
mov
movsb
loop
mov
fsub
scas
outsb
mov
push
data16
cmp
xor
sub
stos
lret
gs
mov
bound
dec
stc
mov
shlb
xor
cmpsb
in
xchg
pushf
adc
shlb
je
sbb
adc
pop
dec
and
insb
mov
decl
gs
jb
movsb
xchg
inc
push
aad
mov
mov
xor
sub
cmp
test
test
or
scas
dec
inc
lcall
push
mov
pop
enter
xlat
out
ljmp
jae
or
mov
outsl
js
pop
dec
aam
pop
popf
xchg
dec
sbb
push
mov
inc
fsubrs
aad
sahf
int3
sub
mov
sbb
mov
adc
rorb
dec
cmp
mov
lret
sbb
cltd
and
sbb
add
xchg
lahf
add
adc
push
repnz
or
lods
jl
sbb
xor
movsb
cmpsl
mov
icebp
adc
dec
sub
or
and
les
jmp
mov
inc
test
or
dec
mov
xorb
pop
mov
adc
in
pop
sub
out
fstpt
fwait
or
xor
cltd
gs
repnz
pop
shrb
out
negl
movsb
jmp
js
gs
mov
mov
mov
mov
dec
fs
mov
aam
mov
subl
and
hlt
inc
iret
shrb
stos
mov
xchg
push
cmp
das
lcall
sub
xlat
jp
movsb
rolb
sub
pop
mov
push
lret
repnz
mov
sbbb
inc
loope
xlat
inc
bound
cmp
sub
scas
movsb
xchg
in
or
iret
inc
fs
aad
hlt
mov
inc
jo
sbb
das
jno
sbb
adc
pop
sbb
and
adc
lret
lcall
test
es
fisttpl
or
cmp
jno
call
fdivrs
loope
out
rcr
jnp
pop
movsb
jbe
sti
jae
arpl
rcll
clc
xlat
jb
int3
pop
cmp
fcomip
push
jbe
mov
xchg
repz
int3
dec
cmc
mov
mov
adc
rcrl
shlb
cmpsb
add
ret
jbe
movsb
orl
dec
stos
push
xchg
xlat
cmpsl
imul
jbe,pt
ljmp
xchg
push
and
inc
inc
sbb
in
loop
pop
sbb
xor
inc
fisubrl
push
xorb
movsb
cmc
scas
jb
cmp
stos
imul
test
incb
jge
fldcw
lods
aam
stc
sbb
stc
loope
popf
and
adc
push
pop
sbb
push
push
cmp
push
cltd
es
aaa
lcall
scas
stos
jb
mov
or
pusha
popf
cmc
mov
mov
pushf
lea
lods
dec
out
js
adc
arpl
hlt
fistpl
push
xchg
push
fsubrs
lods
ja
pushf
scas
or
jecxz
xor
push
jecxz
xchg
shl
or
fcomps
push
popf
or
ljmp
test
call
and
mov
adc
adc
shll
mov
xchg
or
test
jb
popf
hlt
mul
push
adc
cltd
lcallw
mov
jns
sbb
pusha
andl
lea
cmp
out
fmuls
loope
sti
inc
dec
mov
cmp
scas
mov
mov
scas
ja
mov
jecxz
sub
adc
int
mov
jo
rcr
and
sti
fdivl
cmp
ret
rep
bound
mov
je
inc
js
ljmp
dec
cld
pusha
call
adc
push
out
negb
lods
pop
and
aad
cmp
cmp
xor
addr16
jno
test
pop
inc
stos
out
push
je
jl
es
stos
and
inc
cs
xchg
mov
rclb
clc
pop
int
arpl
ret
mov
and
mov
mov
sbb
fdivs
xor
add
cmp
inc
fcomps
movsb
int3
xchg
xor
sbb
mov
and
pop
xor
or
mov
inc
cli
push
cwtl
sbb
jecxz
sahf
sub
int3
daa
jnp
cmc
xchg
xchg
cmpsl
dec
rcll
xor
cmp
pusha
jno
mov
outsl
cli
stos
jae
xor
adc
aam
mov
mull
repz
pusha
mov
mov
mov
cli
xor
sbb
movsb
cmp
xor
xor
mov
mov
enter
fsubrs
sub
mov
mov
and
add
insl
mov
jge
ljmp
cld
fisubrl
dec
repnz
or
iret
push
push
movsb
dec
fidivrl
pop
stc
in
adc
push
call
faddp
into
int3
mov
lods
xchg
jp
lcall
sub
mov
outsb
xchg
add
ficoms
xor
push
xor
dec
stos
loope
sub
movsb
push
decb
idivb
insl
dec
dec
or
mov
rcll
mov
hlt
fdivl
leave
ja
mov
jb
and
adc
mov
add
xchg
pop
pop
mov
cmp
aaa
icebp
lds
out
jnp
in
jno
mov
js
dec
popl
xor
lea
repnz
or
dec
and
and
push
push
aad
test
bound
loop
mov
sti
ret
or
lret
idivb
cmp
mov
xor
aam
movsb
mov
mov
or
rcrb
xchg
mov
lret
push
aaa
test
sbb
pop
jbe
mov
test
dec
inc
mov
repnz
xchg
pop
mov
test
or
jo
repnz
in
shl
sub
mov
ss
adc
stos
mov
ljmp
mov
pop
lcall
sub
movsb
adc
jg
or
sub
pop
mov
lods
mov
pop
adc
ss
lahf
lahf
in
fwait
pop
cmpsl
or
mov
and
sub
add
into
movsb
dec
in
repz
test
xlat
orb
mov
ret
mov
loope
out
ljmp
inc
cld
push
mov
and
or
mov
push
cmpsb
addl
jbe
scas
inc
push
icebp
mov
cmp
push
cmpsb
pop
push
stos
xor
lret
xchg
lods
outsb
pop
insl
add
xor
leave
bound
mov
xor
in
dec
mov
into
das
je
int
cmc
adc
xchg
inc
jns
out
mov
popf
push
shlb
cmpsl
mov
sahf
data16
push
push
cmp
lea
je
jno
jbe
popa
iret
push
cli
mov
dec
inc
push
movsl
mov
insb
cli
xor
shl
cmp
pop
enter
inc
cli
inc
mov
jb
loope
sbb
adc
adc
jg
push
pop
pop
inc
out
fistpl
pop
jns
or
test
inc
and
xchg
lock
movsb
adc
lods
mov
movsb
dec
xorb
mov
loopne
sub
mov
mov
mov
sub
or
popa
push
push
pop
outsl
adc
add
movsl
sbb
mov
or
cwtl
push
cs
rorb
enter
pusha
adc
mov
clc
jg
ret
and
push
lea
add
inc
pop
ffree
jo
sub
lcall
movsl
es
std
ja
fstpt
xchg
ja
movsb
pusha
jb
jbe
add
hlt
cli
push
and
xchg
jle
add
adcb
sub
scas
dec
aas
ret
jno
adc
repnz
shrb
xchg
adc
jno
or
push
ja
xlat
lcall
mov
jbe
cli
mov
or
lcall
jmp
mov
jns
out
jmp
repz
cmp
mov
test
cltd
push
dec
hlt
xorb
into
jno
and
ret
sub
dec
mov
frstor
aaa
mov
cli
lods
xor
cs
pop
adc
jmp
out
mov
jp
push
inc
push
adc
repnz
lods
inc
adc
pusha
jno
xor
div
pushl
ja
aas
lret
mov
dec
aad
cmc
rep
jbe
inc
adcb
adc
xchg
pop
add
xchg
mov
mov
mov
push
lods
inc
leave
loope
sahf
sbb
outsb
cmc
inc
pop
loope
sbb
or
je
addr16
out
and
push
add
filds
orl
enter
aas
jmp
rcrl
inc
out
insl
adc
add
insb
in
xchg
pop
push
xlat
scas
adc
pop
call
les
insb
mov
rorl
or
stos
sub
les
push
outsb
and
lods
ss
mull
movsb
mov
subb
sahf
inc
cmpsb
lods
xor
mov
mov
xchg
or
pop
lods
bound
pop
stos
cmpsb
push
xchg
and
shlb
rolb
enter
sbbb
or
ljmp
mov
jo
into
inc
push
insl
push
roll
test
push
xor
movsb
jge
push
out
mov
ret
ficomps
jle
fnstenv
mov
jmp
push
insl
add
xor
mov
es
dec
rol
outsl
jg
stos
jmp
insl
ret
sub
xor
in
mov
loope
int
mov
aaa
inc
aaa
maskmovq
notl
jbe
iret
fidivs
mov
sti
lods
lret
mov
insb
sub
jle
ljmp
xchg
insl
pop
dec
mov
sbb
nop
mov
lea
jns
sbb
out
push
pop
fisubrs
por
lds
inc
lods
push
sub
arpl
cmc
cs
dec
xchg
cmp
pop
nopl
mov
jbe
ret
dec
xchg
mov
push
stc
sub
inc
insb
xchg
sbb
push
repnz
rclb
stc
or
stos
das
ljmp
rorb
jmp
je
insb
push
imulb
or
push
lret
scas
loop
das
sbb
loop
les
push
gs
sbb
cmp
pop
sahf
int3
aas
ja
mov
push
adc
add
loope
out
imul
dec
pusha
or
icebp
stos
in
stos
test
fmuls
testb
mov
mov
sbb
sub
incl
fdivrl
stos
into
in
push
dec
xor
insl
sbb
xchg
add
mov
or
dec
add
call
add
mov
push
xchg
test
xchg
pop
clc
jo
aad
fidivl
cmp
jbe
jno
repnz
dec
mov
mov
xchg
movsb
add
push
adc
loopne
inc
pusha
lret
push
push
xor
mov
sbb
out
xor
xchg
mov
sbb
icebp
iret
ret
rorb
inc
xor
jmp
cmp
pusha
mov
ja
int3
pusha
scas
jb
sub
stos
pop
lcall
out
mov
or
jp
xchg
mov
jno
loopne
lock
loopne
dec
test
push
fstcw
pop
out
dec
rorl
fwait
cwtl
adc
dec
jne
mov
xchg
fs
mov
out
push
push
add
jnp
scas
rolb
loopne
aas
mov
cmp
jae
lods
shll
movsb
cmp
cmpsl
insl
inc
mov
cli
xchg
das
mov
jmp
dec
icebp
cmpsl
je
ja
lds
push
es
test
dec
xor
loop
imul
jb
sub
pop
outsl
pop
es
lods
sti
dec
movsb
sbb
push
jns
jp
arpl
sbb
insl
xchg
xor
pop
pushf
cltd
and
jbe
jns
lods
sub
jne
inc
mov
xor
dec
inc
movsb
ja
jmp
out
ljmp
popf
ljmp
adc
inc
xchg
mov
popa
jae
mov
add
mov
lret
pop
jnp
inc
cs
in
push
iret
cmpsb
hlt
pop
imul
add
inc
or
cmp
popa
push
dec
push
sar
mov
scas
stos
sub
lret
sub
movsb
test
jge
fdivrs
in
int3
pop
push
xchg
outsl
pop
sbb
insb
inc
out
push
aam
sub
xor
jge
mov
xchg
fmuls
dec
fcoms
jb
add
pop
jp
ds
mov
je
enter
lock
mov
mov
lods
xchg
addl
orb
imulb
movsb
inc
or
or
shr
lea
dec
sbb
mov
lods
xlat
adc
test
mov
testb
cwtl
sbb
mov
fdivrs
cmovnp
mov
fiadds
push
out
push
aam
subb
lahf
cmc
cmp
test
out
cmp
adc
dec
sbbl
shlw
pop
push
movsb
fstpl
das
cmc
ja
or
mov
leave
inc
xchg
insb
loop
outsb
lcall
cwtl
ror
push
sub
out
mov
pop
xor
mov
je
shr
mov
out
jmp
jl
push
cmp
pop
das
push
lds
bound
push
je
rep
xchg
bound
mov
inc
fmuls
popf
fs
mov
cmp
das
test
push
lahf
movsb
push
mov
cmpsw
adc
sub
das
and
pop
dec
add
dec
test
hlt
mov
adc
cmp
jle
ja
outsb
gs
add
rcll
lods
xchg
push
ja
mov
jo
stos
test
xchg
dec
sahf
sub
pushf
pop
mov
push
shld
sbb
dec
out
adc
xchg
out
inc
lds
push
fwait
xor
sub
dec
dec
enter
test
ja
cli
dec
add
std
lds
push
mov
mov
adc
or
sbb
jge
and
sub
sub
xchg
es
push
cmpsl
pop
xchg
mov
in
fcoms
or
push
sub
xor
xchg
mov
xchg
add
inc
imul
enter
jmp
mov
out
inc
inc
push
hlt
adc
pop
mov
andl
negl
imul
inc
sub
sub
jns
frstor
test
pop
bound
pop
or
push
shlb
lcall
lods
jg
jp
movsb
mov
cltd
ss
idivl
leave
jl
xchg
das
cltd
sti
pusha
add
and
test
leave
adc
sub
add
push
js
nop
adc
aad
jo
xor
and
add
aam
in
mov
push
outsl
inc
movsb
mov
sub
es
rolb
dec
stc
fcmovnb
sub
adc
stc
mov
dec
imul
hlt
adc
lea
adc
test
jns
in
test
loopne
jge
movsb
ljmp
daa
rcll
mov
xor
into
adcb
mov
sbb
or
ret
out
fcmovu
lahf
cmp
adc
mov
fbstp
lock
jae
mov
pop
mov
jb
stos
in
add
add
mov
xlat
sahf
cltd
icebp
push
mov
cmp
out
call
jnp
sub
sub
dec
subl
sbb
pushf
mov
xor
mulb
sbb
cmp
pusha
mov
pushf
jb
sti
pop
and
adc
xor
mov
pop
aam
icebp
jne
lock
pop
into
outsb
push
sub
and
inc
mov
cmp
nop
shll
lock
and
enter
sti
pusha
movaps
pop
out
adc
or
aad
shll
xor
insb
ss
cmp
mov
mov
out
data16
cmp
ja
sahf
repz
sbb
ret
mov
jmp
sub
or
jb
lcall
push
outsb
pop
pop
leave
push
leave
inc
outsb
cld
cli
xchg
push
loope
pminsw
test
push
lahf
int
mov
adc
mov
dec
add
mov
out
push
les
lea
lahf
pusha
lcall
ljmp
cmpl
sub
data16
ret
loope
inc
fsubrl
add
mov
xchg
lret
jno
sub
insl
mov
inc
jge
xchg
add
cwtl
or
loope
xchg
inc
xchg
xor
hlt
jb
mov
leave
xchg
jg
imul
and
ss
iret
jno
in
dec
scas
and
jge
arpl
notb
sub
ds
popa
lods
adc
jg
mov
iret
out
aam
js
data16
sub
neg
sbb
mov
and
mov
mov
jae
jae
jle
loop
das
into
fstp
pop
add
push
xchg
xchg
pop
fisubrs
or
dec
pop
out
aas
and
fcompl
push
jnp
outsb
jno
stc
adc
repz
aam
movsb
fimuls
xor
push
popa
bound
test
rcr
push
xor
xchg
outsb
dec
movsb
bound
cmp
inc
adc
fwait
loop
mov
sahf
mov
inc
shll
and
pop
dec
fsubs
mov
jae
sbb
and
stos
shrl
in
rorl
lea
sbb
aad
call
jge
mov
sub
dec
enter
dec
push
stc
mov
cmpsb
inc
in
stos
repz
test
movsb
pushf
aaa
hlt
fsubrs
cmpsb
je
push
sbb
push
jno
pop
and
cmp
fisubl
add
pop
fstpt
inc
push
stos
pop
mov
mov
movsb
repnz
out
mov
std
imul
jne
xor
movsb
arpl
bound
push
pop
cmp
in
xchg
mov
lods
jmp
lods
mov
das
and
sub
jle
xchg
data16
mov
xchg
pop
stc
cmp
int3
mull
movsb
sbbb
mov
pop
aam
sahf
aas
push
xchg
aam
lea
stc
xor
or
popf
repz
ljmp
in
lea
cmp
into
or
or
inc
push
sbb
cli
test
dec
mov
inc
loope
push
push
mov
lods
push
addr16
jecxz
sub
int3
inc
call
mov
mov
fcomps
inc
pop
pop
out
aaa
add
jmp
idivl
mov
inc
xchg
es
add
lcall
out
in
jae
aam
cli
inc
cmpsb
jmp
cwtl
dec
inc
lret
lret
push
lcall
push
or
pop
xchg
scas
sub
daa
ja
imul
sub
cmp
adc
fnstcw
cmpsl
mov
hlt
mov
rorb
in
cmpsb
sar
popf
leave
jp
cmpsl
and
mov
inc
mov
test
sub
adc
xor
xchg
iret
or
mov
ud0
sbb
das
lods
jno
inc
fimull
jp
inc
aas
scas
xor
pop
imul
movsb
xchg
rcr
jno
add
jno
addr16
mov
sbb
mov
pop
out
sahf
sub
mov
inc
sub
jmp
dec
out
pop
pushl
mov
and
dec
push
mov
dec
xorl
mov
or
mov
shl
dec
inc
and
jns
ja
add
push
je
jb
lods
push
adc
ja
scas
jb
sbb
xchg
insl
mov
jne
cmp
xor
push
imul
pop
jp
jmp
inc
inc
fsubrs
cmpsl
repnz
jne
fidivl
sahf
dec
xor
cmp
dec
cmp
add
hlt
xor
mov
cmpb
mov
pop
dec
icebp
stc
lods
sbb
mov
jne
inc
dec
sbb
insb
notl
adc
sbb
in
jbe
add
sub
jl
into
cli
out
push
jnp
fwait
js
jb
arpl
js
and
push
loope
jb
lcall
adc
fucom
insl
or
lods
insb
push
inc
or
ret
jno
cwtl
int
lea
inc
ret
jb
pop
fcomip
pop
cmc
mov
lods
mov
aaa
push
jge
mov
cmp
ljmp
minps
insb
int
mov
mul
fsts
js
insb
push
lods
xor
jecxz
xor
loop
into
movzwl
inc
scas
or
es
jns
jnp
ds
and
test
nop
mov
scas
or
cltd
ret
adc
mov
stos
mov
lods
jae
imul
ret
sub
mov
jmp
fsubl
xchg
adc
add
sub
sub
into
es
outsl
sub
xchg
push
hlt
sub
mov
inc
jb
fcomi
push
out
and
lods
aad
jnp
or
nop
jbe
mov
pop
mov
mov
lods
and
jno
mov
iret
push
testb
push
jp
clc
aam
and
pop
jne
push
loope
mov
insl
jge
lock
ja
js
leave
xchg
dec
bound
or
mov
popf
xor
in
cwtl
fldenv
or
test
adc
push
dec
mov
repz
lods
add
idivb
cmp
inc
addl
pushf
lods
mov
adc
mov
mov
mov
sbb
outsl
or
jnp
cmp
insl
mov
popf
call
scas
sbbb
and
mov
movsb
stc
dec
lds
dec
xor
movsb
lods
pop
ret
and
mov
mov
subl
xchg
movsl
ror
and
jg
jnp
mov
mov
sbb
insb
cmp
stc
pop
scas
dec
in
push
push
aad
enter
rcrl
cmp
lret
sbb
and
scas
lods
pop
adc
dec
adc
mov
in
jge
adc
add
xchg
orl
subl
adc
push
mov
push
sbb
xor
mov
in
jb
gs
add
lea
imulb
add
int
sub
mulb
xor
xchg
lahf
movsb
pop
sub
and
rcrl
out
inc
iret
sahf
xor
mov
stos
xor
scas
movsb
pop
mov
roll
out
and
movsb
pop
scas
dec
leave
adcl
lods
add
int3
das
pop
lea
and
xor
inc
inc
popa
cltd
push
je
test
ljmp
mov
arpl
push
popa
push
inc
sub
jno
psubw
mov
mov
scas
xchg
test
pop
xor
icebp
sbb
mov
cmp
cmc
js
insb
xor
xchg
movsb
mov
mov
sbb
add
movsl
sbb
pop
lods
sub
mov
test
enter
mov
jne
mov
mov
push
aas
dec
xchg
stos
jmp
shlb
cli
mov
movsb
repnz
insb
mov
fists
in
stos
and
movntps
movsl
neg
sbb
jbe
clc
sub
inc
xchg
das
scas
sbb
pop
outsl
fistl
js
test
test
mov
dec
jg
adc
roll
test
mov
or
stos
pop
and
push
sub
divb
nop
movsl
sub
stc
xchg
xchg
pop
xchg
mov
push
xchg
push
mov
push
mov
in
call
adc
stos
bound
lods
mov
inc
cwtl
push
and
xchg
cld
sbb
ss
mov
xchg
out
or
adc
or
int3
jp
mov
in
aam
push
outsl
mov
jecxz
sbb
push
movsb
ljmp
movsb
xchg
jbe
fistpl
outsb
in
mov
mov
subb
repz
xor
inc
loope
insl
dec
clc
xchg
lds
hlt
xchg
mull
out
xor
mov
adc
mov
imul
xor
add
lock
mov
ljmp
cs
jecxz
and
call
jo
outsl
ret
inc
xchg
mov
add
pushf
mov
dec
mov
fs
sub
mov
insl
rclb
push
ljmp
jb
das
sub
test
gs
push
sbb
jg
xchg
cmp
mov
xor
ret
cmpsl
sarb
rorb
lcall
or
das
xlat
sub
test
push
in
stos
repz
cmpsb
sub
xor
mov
pop
sbb
sahf
push
xor
popa
nop
mov
push
dec
dec
mov
aam
jb
and
sbb
push
repz
add
push
scas
ja
daa
sbb
pop
pop
mov
cmp
inc
pop
sbb
add
mov
push
stos
mov
mov
push
jno
adc
xor
repz
dec
lds
and
pop
mov
out
icebp
std
push
ret
and
mov
fisubrs
repz
and
test
inc
int
push
in
iret
cmp
and
std
hlt
loop
xorb
pop
jge
mov
xlat
bound
adc
test
clc
sbb
outsl
inc
push
cmpsl
and
xchg
xor
dec
lods
aam
sarb
decb
push
sbb
fadds
xor
jle
std
andl
nop
stc
jbe
mov
push
in
push
movsb
imul
hlt
pusha
lods
sbb
movsb
or
mov
adc
das
in
jge
cmpb
fucomip
arpl
movsb
js
fisttpl
inc
es
fmull
sub
stos
fdivr
movsb
test
out
insl
bound
add
or
into
sub
ljmp
xchg
scas
pusha
pop
clc
jo
ret
jg
dec
or
insl
pop
lods
cvtdq2ps
push
dec
pop
dec
outsb
inc
inc
push
les
or
sbb
daa
scas
lea
jbe
scas
aam
mov
inc
jge
ror
les
rcr
fs
fstl
cmp
add
cld
push
in
cmp
sbb
stc
into
rcll
gs
xchg
xchg
mov
stos
ds
scas
iret
push
insl
bound
jg
std
jae
mov
mov
mov
or
add
pop
jp
int
fwait
cli
add
adc
xlat
std
sub
xor
cmpsb
dec
iret
pop
stos
in
out
jp
jle
out
ud1
inc
mov
lret
jp
fmuls
push
call
sub
int3
in
adc
inc
fsubrl
add
aad
mov
out
ficoms
mov
aaa
xor
ds
and
insb
dec
lods
repnz
imul
fs
movsb
xchg
lret
inc
pop
in
test
aam
or
cltd
sbb
cmp
push
lods
push
popa
outsb
iret
clc
cld
push
out
int3
xor
mov
cmpsl
sti
enter
fnstenv
pop
fimuls
mov
adc
cmp
jge
xchg
stc
cmp
pop
ret
push
ja
cmp
pop
out
pop
cmpsl
out
cmp
rcrl
xchg
xor
pop
sbb
xchg
cmp
sub
repnz
sbbb
mov
insb
scas
bound
push
mov
fisubrs
lea
es
arpl
mov
mulb
lcall
movsb
popf
push
jne
pop
fldt
add
in
jl
dec
jecxz
aaa
fstl
cld
outsl
push
mov
pop
dec
sub
mov
lret
sub
test
push
sub
fsubrs
push
dec
push
mov
sbb
add
add
push
cli
jnp
cmp
push
mov
ja
cmpl
inc
adc
mov
mov
xchg
lcall
aad
lcall
jne
pop
pop
sbb
mov
in
push
push
push
jae
mov
pop
out
out
and
sub
ficomps
sbb
rclb
jl
xor
dec
sub
xchg
xchg
jbe
loope
push
dec
daa
fsub
insb
shll
sahf
add
sbb
cmp
xchg
push
add
xchg
mov
dec
or
xorb
and
pushf
movsb
inc
ret
push
aaa
pop
and
sbb
adc
mov
xchg
rep
das
arpl
ds
jecxz
xchg
sub
push
xor
and
mov
sbb
scas
jae
insl
or
jns,pt
stc
cmp
mov
push
mov
inc
int3
mov
movswl
scas
cltd
lods
roll
jno
sub
cmc
lods
pop
xor
in
dec
pop
repz
ljmp
jnp
mov
xor
jbe
and
std
ja
pop
pop
in
in
mov
scas
lds
cmpsl
out
adc
inc
mov
xchg
push
std
sahf
sarl
iret
test
cmp
xchg
jmp
mov
rcll
outsb
dec
sbb
mov
cmpl
mov
sarb
out
cld
adc
fdiv
or
fwait
repnz
jae
cmc
add
xor
mov
xor
repnz
mov
mov
fisubrs
jl
adc
adc
mov
sbb
aam
and
pop
fstpl
mov
lds
mov
mov
or
movsb
jg
adc
sub
mov
sub
jns
sbb
pop
pop
jb
scas
inc
dec
cmp
push
fdivl
insb
sub
out
mov
les
xor
mov
int
scas
loope
ret
adc
or
push
in
es
cld
ret
pushf
subb
cli
jge
push
jb
pop
pop
ret
jle
faddl
add
sub
stc
call
sahf
adc
add
sub
mov
fcmovb
movsb
pop
imul
jl
push
arpl
cmp
push
loop
adc
inc
mov
mov
cld
ss
movsb
pop
into
adc
push
adc
cmp
leave
aaa
xor
lahf
or
rcrb
call
popf
nop
xor
mov
loope
xchg
sub
mov
addb
aad
push
mov
or
gs
pop
xor
inc
lods
push
loop
in
dec
pop
adc
mov
xchg
pop
xchg
cs
pop
outsb
sub
scas
lea
cmp
xor
les
dec
cmp
sub
gs
into
adc
inc
jb
xchg
lods
or
in
or
cli
lea
insb
sub
inc
js
mov
leave
xor
iret
scas
in
es
push
cmpb
cltd
je
mov
push
je
jns
mov
xchg
add
inc
cmp
xchg
push
push
movsb
movsl
inc
cmc
out
lret
cld
push
imul
and
xchg
or
jb
repnz
mov
pop
mov
adc
jns
rcrb
jmp
and
mov
push
cltd
bound
lcall
aaa
mov
mov
clc
mov
movsb
shrb
cmpsb
repz
sbb
xor
xchg
adc
dec
lds
mov
dec
sub
stos
shrl
mov
in
imul
cmp
movsb
add
jae
es
sub
pop
data16
jns
mov
inc
pop
or
inc
popa
sbb
cmp
mov
push
fmull
imull
or
sub
shl
andl
scas
sbb
test
lret
call
cli
insb
add
pop
cmp
iret
mov
movsb
inc
adc
pushf
outsl
jne
cmc
sti
push
call
cmpsb
sub
roll
mov
fmull
push
xchg
cmpxchg
pop
inc
test
pop
xchg
mov
cmp
pop
aas
dec
out
cmp
outsl
call
lea
scas
jnp
inc
movsl
hlt
call
cmp
xchg
push
mov
mov
divb
xor
pusha
pusha
not
pop
cltd
cmp
inc
sub
adc
lods
dec
repz
sarb
xor
fidivrl
dec
clc
ror
mov
xchg
or
rclb
sbb
rolb
add
imul
mov
testl
push
loope
and
inc
adc
adc
mov
dec
sub
and
outsl
ret
mov
dec
mov
push
lret
cld
ss
lret
cmc
mov
lds
sub
test
sbb
mov
push
fists
movsl
adc
mov
sahf
push
pop
and
xor
mov
mov
adc
jne
enter
sbb
or
lods
jne
inc
or
pop
shl
in
pop
arpl
jp
push
xor
xor
mov
lods
mov
sbbl
mov
pop
xchg
sahf
and
cld
hlt
sbb
jmp
ret
mov
pusha
mov
out
xchg
shr
mov
mull
mov
inc
push
int
imul
pop
repz
xor
repz
fs
sub
dec
cltd
mov
out
mov
dec
cmpsb
inc
xchg
mov
subl
movsb
jmp
dec
adc
sub
shlb
arpl
movsl
lods
cmp
add
mov
mov
adc
pop
xor
mov
jbe
lcall
or
add
mov
movsb
pop
scas
mov
and
cmp
pusha
xchg
sbb
cmpb
push
push
sub
dec
lcall
or
pop
lret
inc
iret
or
pop
cmpsb
mov
inc
and
jo
xchg
fwait
push
rolb
fildll
mov
cmpsb
sbb
movsb
pop
fimuls
dec
lret
lods
jb
mov
push
mov
cmp
cmc
aam
mov
es
hlt
jns
dec
and
dec
add
insl
subb
lcall
add
mov
mov
push
inc
fidivs
xor
push
sbb
mov
push
jge
add
int
cmpsl
lcall
mov
sbb
fcoms
sub
mov
cld
jb
jns
shll
dec
mov
lea
or
push
out
movsb
hlt
mov
loop
rcrl
adc
lret
sbb
dec
mov
pop
adc
xor
push
fdivrl
adc
pop
inc
cmc
push
adc
scas
andl
xor
jl
dec
and
jo
cmp
mov
jb
shll
ss
testb
das
fsubs
inc
jnp
lcall
ds
xlat
mov
push
cli
in
xchg
jg
cmp
out
push
mov
ret
add
add
movsb
lret
xor
sbb
or
das
mov
lret
shr
inc
stc
xchg
sub
jmp
dec
rorb
ret
dec
mov
inc
dec
mov
xchg
dec
xor
xor
iret
jnp
scas
lea
imul
aad
or
lcall
mov
fdivs
or
adc
dec
mov
fsubrl
popf
lret
ret
gs
fisttpll
push
das
fsubs
int3
jge
or
test
ss
cli
jb
push
fisubl
push
out
dec
or
sub
enter
dec
loope
push
fsts
lods
fcompl
mov
leave
sarl
imul
shll
jmp
mov
in
or
ud1
lahf
out
push
imul
testl
int
adc
push
adc
push
out
rorb
add
jg
lock
or
sbb
xor
sbb
xchg
adc
lcall
push
jmp
inc
mov
add
add
mov
cwtl
sub
ja
push
fidivl
lahf
mov
rcll
inc
pop
pop
jb
ljmp
jne
data16
jnp
cmc
jle
mov
lods
je
jno
cwtl
jbe
or
ljmp
iret
push
mov
bound
jle
push
sub
test
sti
scas
inc
call
mov
shlb
test
inc
jecxz
jae
push
xchg
jmp
incl
stos
bound
dec
jne
mov
push
xchg
mov
xchg
pushf
fwait
xchg
inc
dec
out
cmp
inc
insb
ljmp
xchg
dec
data16
adc
ret
jge
aas
xor
xchg
stos
mov
ja
loopne
jmp
pusha
iret
xchg
mov
and
dec
add
sub
jns
fadds
dec
mov
pop
and
or
xchg
jae
and
decb
jo
cmpsl
loope
dec
push
xor
mov
jne
call
sbb
inc
enter
dec
or
xor
call
mov
xor
das
hlt
mov
fwait
jmp
adc
pop
sub
repnz
mov
inc
popa
pop
out
ret
hlt
push
into
push
pusha
or
push
jae
ja
insb
idivb
cli
cs
or
mov
mov
mov
aam
cmc
orb
dec
imulb
mov
cmp
icebp
sbb
rcrl
sub
stc
ret
roll
insb
push
test
jo
aam
inc
rolb
adc
mov
mov
test
mov
shlb
xor
sub
and
inc
pop
or
add
mov
xchg
stc
sbb
inc
movsb
inc
sub
fwait
pop
loope
and
mov
test
jmp
push
call
cs
add
adc
xchg
es
movsb
sbb
push
jae
movsl
sti
push
rolb
je
xchg
mov
fistpl
and
cmp
xchg
mov
adc
dec
hlt
test
cmp
aas
outsb
xchg
pop
sub
xchg
xor
dec
or
mov
nop
neg
in
aas
jo
pusha
test
je
jg
push
lods
mov
neg
mov
mov
in
icebp
faddl
call
das
mov
in
out
sahf
sti
pop
mov
jmp
cmp
and
scas
mov
mov
shlb
hlt
and
sub
out
andb
aad
bound
and
aaa
out
mov
pop
sbb
ds
add
dec
lods
jmp
xchg
cmp
sub
imul
sub
jmp
push
sbb
xchg
push
pop
test
inc
bound
gs
xchg
divl
pushf
jns
xchg
movsb
lahf
mov
mov
test
add
dec
mov
enter
mov
mov
xor
mov
ret
or
fisttpl
push
or
scas
sbb
inc
push
pushl
sbb
dec
mov
xchg
movsb
cmp
push
sub
mov
jns
push
push
add
mov
and
mov
push
iret
mov
mov
sub
pop
ja
ror
pop
sub
pop
push
outsl
stos
push
fdivrs
arpl
sbb
js
in
add
xor
pop
sub
xchg
xor
shll
and
xchg
hlt
sub
mov
adc
push
sahf
dec
mov
add
into
mov
xchg
inc
clc
loope
xchg
loop
or
lcall
daa
sub
xor
and
enter
les
mov
lret
dec
adc
and
daa
outsb
lods
mov
adc
adc
or
dec
imul
push
xchg
mov
sub
pop
cmc
mov
gs
or
jns
ja
lods
xlat
xor
jno
cwtl
or
lds
ja
mov
ror
push
mov
cmpsb
ljmp
cmpsl
lods
and
sub
add
pusha
sbb
inc
gs
inc
jp,pn
cwtl
leave
mov
sub
iret
mov
sbb
mov
mov
les
push
les
and
lea
loope
bound
push
adc
xchg
ss
scas
dec
cmpsb
sub
jge
inc
mov
push
pop
popa
dec
sbb
shlb
mov
mov
dec
jge
in
jo
xchg
pop
mov
mov
jnp
les
mov
into
mov
add
mov
xor
clc
pop
es
xchg
and
cmpsb
pusha
xchg
mov
push
mulb
loope
inc
in
lcall
shll
lds
add
add
jns
aas
mov
push
mov
in
inc
cli
mov
outsb
out
xchg
mov
adcb
int
sub
jp
mov
cmp
btr
mov
fcom
lret
mov
push
pop
dec
arpl
wrmsr
dec
sub
adc
pop
dec
sub
adc
lahf
xlat
hlt
jl
mov
call
adc
xchg
xchg
ljmp
sub
movsb
cmp
sbb
push
mov
in
fisubs
inc
mov
vmovsd
lea
push
mov
mov
ret
mov
mov
mov
lcall
xchg
aam
mov
imul
mov
mov
or
mov
sahf
lds
test
sbb
mov
jmp
inc
mov
cmpsl
stos
sbb
and
push
jnp
stos
ficompl
mov
pop
in
jge
dec
xchg
insl
mov
lods
aaa
jp
lret
mov
ljmp
add
mov
stos
out
ret
mov
mov
testb
pop
mov
pop
push
daa
mov
mov
aaa
addb
loope
js
pop
aad
fnstenv
push
push
nop
mov
xor
lods
mov
xchg
sbbb
sbb
int3
hlt
fwait
aaa
lods
pop
adcb
icebp
and
arpl
xor
cmp
xchg
cmp
push
mov
add
lret
mov
sbb
sub
mov
push
cltd
sub
jmp
adcb
dec
push
enter
dec
dec
ficompl
loop
dec
ljmp
lahf
mov
lods
mov
push
push
sbb
rcrl
shrb
lret
xchg
lock
dec
iret
pop
adc
inc
push
bound
int
sbb
nop
test
enter
stos
add
jbe
cmp
push
jae
jle
dec
inc
jb
ljmp
int3
mov
push
jo
mov
ds
xor
ss
pop
push
sub
inc
rclb
int3
repz
bound
mov
xchg
clc
xor
mov
sarl
push
and
lods
mov
mov
cmp
mov
and
leave
mov
dec
inc
decb
bound
push
in
and
lahf
dec
adc
inc
sarl
push
dec
pop
or
mov
mov
xor
lock
into
mov
mov
xchg
iret
or
push
or
push
ss
ljmp
lcall
insl
push
dec
dec
clc
push
das
and
mov
pushf
pop
push
dec
push
movsb
push
jnp
jg
push
pop
mov
dec
and
movsb
adc
xchg
jno
enter
addb
adc
push
fmuls
pusha
mov
dec
jp
gs
cld
pusha
stc
jb
nop
fisttpll
decb
sub
shll
cmp
xchg
xor
mov
mov
add
push
dec
sub
xlat
cmp
jp
lods
es
sbb
adc
pop
sbbb
ret
gs
hlt
sbb
loopne
sbb
clc
push
mov
cmp
ret
outsl
mov
xor
cmc
imul
loop
fadd
pop
inc
lcall
shlb
ret
mov
movsl
xor
or
imul
sahf
and
lea
js
repz
jbe
adc
push
cld
mov
loopne
jbe
and
sbb
data16
or
pop
into
mov
or
mov
mov
scas
cmp
sbb
loop
mov
and
test
subb
dec
mov
push
loope
into
je
dec
add
xchg
mov
and
mov
mov
fldcw
out
xchg
xlat
mov
pusha
jge
and
pusha
stos
insb
insb
pop
lcall
cmpsl
pop
jne
sub
mov
mov
movsb
les
out
jno
and
test
fisubs
xchg
or
xchg
pop
cmc
sbb
and
sbb
sub
push
jne
sahf
jo
xchg
add
mov
jle
push
jge
aam
das
dec
mov
insl
inc
jmp
xorb
mov
subb
xor
addr16
push
fsubrl
xchg
and
jno
scas
xchg
dec
mov
hlt
xchg
jno
mov
jne
rolb
fdiv
pusha
test
cmp
imul
pop
dec
sbb
aaa
fs
mov
mov
pop
cli
inc
jns
ret
xor
lcall
or
push
cmpsb
jnp
into
popf
daa
addr16
inc
mov
xchg
repnz
jbe
enter
mov
mov
jle
movsl
aas
outsb
std
into
and
test
dec
aam
add
mov
out
movsb
jnp
les
aad
mov
jle
pop
sti
mov
repz
imul
push
mov
cmp
pop
outsb
jns
cmp
jne
clc
mov
aas
jne
lods
mov
js
ret
jge
jno
ss
jno
scas
pop
shl
and
insb
ret
mov
aas
inc
xor
leave
inc
adc
ljmp
pop
lret
inc
ljmp
lea
scas
gs
mov
loopne
mov
adc
cs
cmpsl
dec
xchg
jno
add
dec
jge
ret
mov
pusha
cmp
sub
decb
pop
subl
ss
addr16
ret
pop
push
xchg
inc
fwait
std
adc
xorb
popa
cmpsl
jno
iret
loopne
sub
lods
mov
mov
sbb
mov
insb
xor
push
mov
and
add
into
cmp
insb
mov
lods
fs
mov
xchg
shll
andl
lock
mov
inc
add
sbb
mov
sbb
mov
test
and
mov
push
push
jge
dec
in
cmp
test
jbe
fs
mov
js
movsb
or
sub
nop
mov
cmc
dec
cld
call
adc
into
push
sub
es
jb
lcall
jbe
aad
cltd
pop
cmpsb
xchg
xchg
adc
dec
sbb
mov
mov
sub
imul
jecxz
sub
or
xchg
cmp
rcl
aaa
jb
and
push
jge
call
out
lock
sti
scas
add
repnz
push
adc
sbb
push
test
mov
push
xchg
movsb
stc
xor
mov
fdivl
lods
dec
aam
cmovo
jmp
sahf
push
out
in
sbb
subb
fstps
arpl
adc
in
dec
ds
out
sub
inc
pop
divb
packuswb
and
push
mov
xchg
aad
jecxz
clc
jno
cmp
out
fnstcw
test
ret
movsb
cmpsb
test
push
insl
cmpsl
push
cmp
sbbl
inc
pusha
aad
das
insb
rol
push
sti
mov
std
jnp
insl
adc
cmp
outsb
out
out
jb
movsl
ret
mov
add
inc
fsubrs
shll
dec
lock
mov
push
or
out
adcl
mov
in
jno
dec
pop
in
sbb
movsl
push
outsb
stc
loope
lods
and
icebp
movsb
xor
ret
jl
fildl
aad
adc
popa
ljmp
out
jmp
inc
cld
lods
or
mov
push
stos
pop
rolb
icebp
adc
jns
inc
sbb
mov
pop
ss
cmp
push
iret
jnp
mov
sbb
les
outsb
movsb
cld
shll
cmp
fcomip
iret
icebp
subb
lea
outsb
repz
xor
loope
stos
ficoml
std
cmpsl
or
andl
in
push
out
mov
je
push
movzbl
incb
pop
aam
les
pop
jne
xor
push
add
stos
mov
and
int
stc
movsl
adc
inc
cmp
jmp
add
mov
xchg
and
lret
jge
push
or
stos
and
jl
out
leave
add
pop
mov
into
xchg
es
dec
lods
dec
add
hlt
cmpsb
mov
jns
mov
stc
idivl
xchg
and
add
mov
loopne
cmp
leave
dec
pop
in
xchg
addr16
or
shrb
leave
push
std
subb
nop
push
repnz
les
add
push
scas
cmc
lock
sub
mov
xchg
lds
inc
int3
inc
cmp
loope
mov
jo
or
ljmp
cli
sbb
pushf
fsubrs
push
dec
aaa
es
xor
ja
repnz
sbb
inc
cmp
and
sub
mov
mov
pop
push
stos
in
cmp
pop
es
add
rorb
cmpsl
andb
aad
gs
gs
insl
aas
inc
scas
stos
inc
cmp
lret
fsub
into
outsb
cwtl
rcrl
ljmp
into
cmp
test
out
mov
push
fwait
jns
mov
aam
mov
dec
sub
ret
aam
sbb
jne
jl
insl
adcl
repnz
inc
roll
dec
int3
imul
icebp
fisttpl
mov
mov
andl
mov
jno
lods
add
in
pop
push
mov
xor
nop
ret
push
xor
cmpsb
mov
pop
adc
sbb
inc
nop
push
cmp
sbb
dec
scas
add
outsl
mov
dec
mov
scas
es
xchg
sub
mov
pop
mov
xchg
pusha
xchg
jp
sbb
test
push
movsb
pop
xchg
xor
in
mov
dec
xor
sub
pop
sub
dec
mov
fisubrl
int3
jb
in
arpl
shlb
adcb
out
sub
clc
dec
xchg
cli
xor
inc
sub
pop
add
movsb
mov
xor
scas
xchg
dec
hlt
cmp
decb
cli
lea
lods
std
mov
scas
arpl
sub
jnp
test
movsb
sbb
sbb
movsb
adc
jbe
stc
mov
subb
outsl
xchg
rcl
outsb
es
lcall
xchg
push
dec
mov
jae
add
sarl
bound
mov
stos
cmp
xchg
adc
mov
into
movsb
filds
rolb
cmp
ud2
cltd
sbb
or
xlat
adc
daa
jnp
test
data16
mov
xor
ja
xchg
vxorps
sub
out
xor
ret
dec
js
movsl
nop
jmp
mov
ficomps
pop
pop
scas
xor
dec
sarl
sub
int
jno
or
sbb
decl
gs
cmp
enter
stos
push
ja
test
movsb
int
mov
lock
stos
add
pushf
cmc
mov
icebp
lcall
push
inc
xor
dec
outsl
scas
or
jp
adc
fistpll
dec
lret
mov
pop
sbb
ljmp
dec
outsb
lret
jns
shl
dec
lds
pop
ds
jne
xor
pop
repz
and
push
mov
add
add
lret
inc
mov
pop
jb
cltd
sbbl
insl
das
mov
je
fucomi
and
out
fstl
hlt
lea
jp
pop
inc
mov
sbb
xchg
cmp
movsb
add
fidivrl
arpl
or
insl
mov
pusha
pop
sbb
fistl
cs
movsb
pop
cli
xor
fdivs
stos
push
fildll
aas
mov
inc
mov
ja
sub
cmc
ljmp
dec
push
aad
aad
movsl
push
movsb
jb
test
sbb
cwtl
in
pop
or
sahf
gs
inc
fcoms
xchg
nop
sub
xor
mov
adc
dec
jbe
bound
mov
test
jb
imul
sbb
adc
mov
dec
test
out
dec
xchg
es
mov
mov
pop
push
data16
mov
pop
sub
push
repz
scas
xchg
dec
mov
enter
xchg
repnz
add
pop
out
xor
imul
push
lret
xorb
roll
imul
cmp
mov
clc
lcall
ror
or
out
xor
jae
rcrl
cltd
xchg
dec
push
icebp
jbe
xlat
popf
mov
jo
lods
and
pop
ret
jno
insb
jb
repnz
mov
into
adc
jnp
scas
pop
cs
subb
fsubrp
sbb
xchg
inc
push
pop
lock
call
dec
es
mov
or
xor
cmovb
int3
ret
lods
mov
or
inc
lret
repnz
cmp
pop
iret
add
sub
add
loope
mov
inc
xor
sbb
jno
sbb
aad
jle
push
adc
sbb
out
jle
inc
or
adc
mov
cmc
ljmp
push
lret
enter
lcall
push
mov
mov
fldenv
popf
icebp
add
mov
push
sbb
sbb
fldt
cmp
pop
fcomps
repz
int
jae
shl
mov
clc
fnstsw
ficomps
enter
lods
dec
dec
push
pop
dec
pop
jne
test
incl
and
subb
scas
lahf
push
enter
imul
aas
dec
out
and
xor
repnz
mov
xor
ja
jb
lods
mov
imull
push
stc
add
aas
xorl
mov
sub
and
int3
aas
cmp
mov
push
pop
sub
cs
cltd
add
xor
pushf
mov
push
mov
cmpsl
pusha
popa
imul
adc
or
js
push
insb
jp
bound
pushf
sub
fisttpl
fdivr
dec
movsl
push
mov
or
push
lods
insl
jb
and
repz
adc
rcrb
cmpsl
push
mov
xor
mov
inc
push
sbb
add
jbe
sbb
icebp
bound
push
call
lods
aas
jo
jbe
xchg
xor
dec
lods
inc
andb
push
push
hlt
xchg
jns
jnp
cli
out
jnp
mov
mov
xchg
mov
les
adc
stos
mov
popf
push
pushf
sub
mov
xor
mov
pop
jnp
mov
das
in
xorb
fwait
mov
pop
movsb
addl
sub
fs
mov
icebp
mov
pop
nop
xlat
xchg
mov
adc
and
cmp
mov
insl
jnp
sub
sbb
leave
test
mov
pop
mov
pop
jecxz
ret
xlat
scas
jmp
sbb
jb
adc
lods
mov
cwtl
btr
mov
pop
shl
bound
pop
mov
sub
gs
sbb
cmp
xchg
test
cmp
sti
adc
and
lock
js
lods
stos
cmpsl
mov
sbb
sub
mov
mov
inc
pop
fwait
jg
xlat
jb
mov
leave
jbe
js
dec
mov
mov
rcrl
xchg
test
repnz
clc
mov
mov
repz
gs
inc
mov
mov
loope
into
mov
sub
pop
pop
or
ret
jle
in
pop
mov
pusha
sbb
test
push
mov
ret
push
mov
mov
test
jne
adc
push
mov
iret
and
and
in
and
lret
inc
stos
xchg
sbb
lcall
mov
rorl
in
lcall
arpl
jnp
xor
andb
fwait
xor
dec
sarl
pop
or
dec
jns
mov
clc
mov
and
insl
push
mov
sbb
repnz
nop
outsb
mov
xor
call
sbb
push
mov
fistl
mov
orb
hlt
push
mov
push
xor
sub
cmpsb
fstl
pop
push
pop
enter
push
xchg
push
adc
jecxz
jne
fbld
cmp
cmp
stos
xor
push
cmpsl
inc
sub
adc
test
jge
je
jl
les
not
loope
mov
push
sub
cld
cmc
test
rclb
int
adc
mov
mov
pop
fdivrl
and
mov
dec
sub
cwtl
jno
call
xchg
in
sti
or
bound
test
lcall
lock
adc
daa
or
jno
or
fcomi
xchg
pushf
mov
pusha
jb
movsb
inc
sbb
scas
xlat
add
inc
fldenv
mov
aad
mov
fildll
push
pop
mov
nop
xchg
ret
xchg
pop
dec
sti
scas
scas
push
repz
xor
sub
cli
fxch
ja
movsb
imul
das
cmpb
mov
icebp
xchg
pop
sahf
mov
or
add
loopne
hlt
stos
dec
sbb
mov
or
xlat
dec
dec
repnz
repnz
mov
iret
dec
leave
push
mov
sbb
fnstcw
scas
sub
inc
or
push
stc
pop
xor
mov
xchg
call
mov
mov
jl
addr16
add
outsl
ljmp
sub
pusha
mov
adc
or
xor
mov
jmp
repz
push
xor
cmp
call
pushf
add
sub
dec
jmp
ret
or
mov
dec
sbb
repnz
loope
mov
mov
test
fs
and
xor
sahf
movsl
jle
xor
rcr
dec
or
mov
lock
mov
dec
leave
outsl
sub
cmpsb
xorl
mov
pop
add
out
jne
mov
movsl
ror
aaa
pop
dec
call
scas
jg
sub
out
lret
ret
imul
xor
sbb
xor
fsubrs
dec
push
mov
lahf
int3
lea
inc
mov
pop
lods
fwait
mov
daa
inc
inc
insl
mov
mov
cmp
sub
inc
int3
mov
in
or
xchg
iret
les
jp
mov
xchg
jp
sub
insl
jae
xchg
sbb
adc
aas
dec
or
and
shl
dec
and
popf
sahf
mov
adc
mov
mov
dec
or
mov
jo
push
jno
mov
in
pusha
int3
mov
push
push
mov
add
je
inc
in
lret
xchg
mov
shll
je
pop
jb
dec
addr16
enter
lcall
and
inc
out
gs
addr16
das
sub
sub
cwtl
test
fcomps
gs
bound
push
add
jge
mov
movsb
fnstsw
hlt
mov
mov
ljmp
jns
jae
mov
movsb
dec
fnstcw
xor
pusha
sti
cmp
addr16
sub
pop
xor
xchg
mov
and
cmp
or
dec
out
adcl
add
sbb
js
out
jmp
in
stos
js
adc
mov
cmc
pop
rol
test
stc
int3
sbb
adc
mov
dec
frstor
cmp
push
xorb
fnstcw
xlat
push
mov
cs
scas
negl
cld
shl
sbb
scas
loop
inc
orl
xchg
fcompl
mov
xor
mov
out
inc
stos
cli
in
clc
nop
mov
push
addb
dec
loop
lahf
popf
stos
mov
jg
inc
mov
sub
out
scas
mov
sub
lods
sbbb
pop
insb
xor
insl
loopne
sub
fistpl
sub
fmull
shlb
gs
mov
dec
insb
add
push
or
or
dec
mov
xchg
mov
lcall
sub
sub
imul
jnp
jmp
rclb
adc
lods
add
xchg
imul
sbb
jo
scas
test
pop
and
mov
dec
or
xor
je
xchg
cmp
jno
mov
cltd
imul
jecxz
jmp
mov
jmp
movsb
jg
jb
xchg
pop
nop
in
inc
enter
or
addr16
inc
andb
cltd
mov
cmp
lret
js
subb
cmp
cmp
test
pusha
lcall
inc
mov
out
sbbl
and
mov
xor
fsubrl
mov
add
cmc
repnz
push
insl
mov
lods
pusha
pop
jl
icebp
mov
mov
mov
sbb
push
xchg
push
xor
inc
xor
aas
mov
xor
jg
mov
repnz
push
stos
mov
loop
cmp
hlt
sbbl
stos
adc
stos
jae
fld
fadds
pop
fsubs
sbb
pusha
movsl
inc
imul
movsb
sbb
lods
mov
in
jbe
pop
fdivs
or
mov
cld
loop
add
dec
sbb
add
hlt
mov
push
ja
fs
mov
sbb
fidivrs
push
ljmp
out
xor
shl
xchg
mov
xchg
xor
mov
hlt
jb
addr16
das
ret
cmp
pop
mov
imul
adc
in
sub
add
xor
push
cltd
mov
cmpb
cmpps
fimuls
mov
imul
orl
xchg
or
sbb
sbb
das
movsb
xor
dec
add
or
or
repz
outsl
mov
gs
inc
cli
ret
decl
mov
lcall
mov
xor
lock
out
jb
loopne
pop
movsb
dec
loope
adc
push
sbb
ja
loopne
sbb
mov
shlb
sub
push
push
sub
mov
pusha
sbb
call
movsb
jae
out
mov
sarl
adc
cli
in
hlt
pop
xor
or
insl
ss
cmpsb
mov
jecxz
insl
jne
adc
mov
test
repnz
adc
adc
sahf
scas
and
xor
pop
sbb
xchg
mov
and
cmc
lods
jle
mov
push
cmp
xchg
xor
fisttpll
jnp
xor
jne
lods
and
jmp
cmpsl
repz
stos
daa
stc
fiadds
and
xor
pop
je
cs
sub
mov
mov
scas
cli
test
pop
mov
pop
movsb
mov
icebp
mov
cmpb
je
aaa
mov
loope
test
lods
test
idivl
fcompl
xchg
push
jecxz
cmp
bound
adc
das
insb
pop
arpl
jmp
sarb
sti
mov
in
out
add
clc
dec
lcall
dec
lret
test
sbb
dec
hlt
adc
ja
jnp
test
int
mov
clc
pusha
loope
rol
or
adc
cwtl
cmp
fcomps
call
and
fwait
loop
sub
gs
sbb
fisubs
xchg
and
cmp
xchg
enter
in
mov
cmp
mov
fisubrl
ret
scas
mov
mov
enter
inc
pop
out
mov
sub
xorl
push
push
shll
fadds
jb
bound
jns
in
gs
enter
bound
call
jno
and
in
push
dec
jnp
int3
sub
mov
push
fsubl
sbb
mov
push
notb
loope
pop
mov
pop
ljmp
icebp
imul
jp
idiv
decl
add
jp
or
mov
push
lock
scas
inc
push
mov
aaa
add
dec
lods
or
push
cmc
xchg
add
arpl
mov
push
ss
andl
addb
mov
mov
je
lods
push
into
in
shrl
jmp
test
jp
adc
cmpsb
adc
enter
std
mov
xchg
outsl
lahf
adc
test
mov
sub
stos
orb
jle
cmp
int3
pop
addb
mov
addr16
sbb
add
xor
push
ss
and
xchg
mov
adc
pusha
mov
lcall
mov
mov
add
cli
insb
jp
dec
dec
inc
xchg
dec
fs
mov
fstl
ret
das
and
pop
push
cwtl
daa
and
clc
push
cmpsb
mov
or
lds
stc
ljmp
iret
push
or
jge
push
xchg
xchg
int
sub
push
aas
jnp
jns
mov
rcrb
adc
cmp
sub
fiadds
pop
jl
shll
das
adc
out
fldcw
int
hlt
das
ret
loopne
mov
out
pushf
into
xor
push
test
jbe
xchg
mov
xchg
imul
fdivl
mov
idivl
xchg
dec
loopne
out
push
xor
mov
push
aad
pop
sbb
call
inc
rcl
push
movsb
push
not
int
mov
sti
xor
sbbl
dec
aad
add
shlb
std
xchg
dec
or
fildll
cmpsb
mov
cmp
mov
hlt
cmp
inc
les
add
popa
or
cmp
pusha
shl
or
jno
jmp
add
mov
add
int3
pushf
cmp
arpl
mov
sub
ret
xchg
mov
out
notb
shlb
inc
scas
xchg
mov
mov
xchg
icebp
movsb
and
adc
dec
push
psubsb
imul
sub
call
jns
mov
arpl
leave
mov
or
adc
insl
jno
insl
enter
mov
aam
test
pop
jbe
rcr
push
inc
movsb
int3
pushf
sub
inc
addr16
imul
cli
sub
test
int3
clc
xor
xor
sbb
fcoms
ret
popf
stc
adcb
cmpsb
xchg
xor
pop
push
jbe
mov
adc
inc
or
lret
mov
scas
imul
call
addl
jmp
rcll
fisttpl
cmp
hlt
inc
xchg
pusha
mov
mov
repnz
sbbb
subl
xchg
dec
jg
inc
adc
push
lods
sbb
or
outsb
dec
stc
mov
mov
repnz
lods
push
mov
aaa
mov
orl
xchg
sbb
mov
xor
cmpsl
inc
or
cmp
call
sub
inc
outsb
dec
push
push
clc
jmp
and
ljmp
xor
loope
sti
int3
mov
arpl
xor
lcall
popa
shlb
fs
push
push
dec
gs
cmpsl
mov
cld
in
add
test
xlat
rcl
movsb
ja
imul
fucomip
jne
push
mov
out
movsb
std
mov
lds
lea
andl
lret
sub
pop
in
fisttps
mov
mov
ficoml
add
loopne
cmp
in
das
pop
ljmp
inc
int
ss
shrl
mov
pop
lods
rorb
cmpsb
fidivs
mov
lods
enter
pop
xor
cltd
jp
mov
leave
jnp
fsubr
arpl
mov
push
push
push
or
ljmp
sbb
in
jns
pop
xchg
in
ret
pop
mov
xor
ret
test
testl
mov
sub
movsb
ljmp
call
popf
arpl
add
pop
hlt
js
dec
inc
mov
mov
xor
movsb
or
bound
call
add
add
adc
ja
sub
rep
pushf
arpl
lods
push
repz
lcall
lea
pop
shrl
xor
jmp
repz
or
xor
arpl
scas
bound
insl
xor
in
sub
into
test
addr16
repnz
jle
mov
popf
leave
sub
or
xor
push
in
test
cmp
or
jns,pn
pminub
sti
inc
cmp
pusha
jmp
out
outsb
cmp
jmp
sti
loopne
test
sub
pusha
xchg
pusha
dec
hlt
inc
bswap
lret
or
movl
or
push
mov
out
xor
call
icebp
xchg
push
pushf
xlat
stc
jmp
insb
mov
inc
xchg
mov
outsb
adc
jmp
jl
sbbb
call
push
leave
mov
negb
mov
pop
out
xlat
pop
ljmp
add
clc
dec
lcall
mov
jecxz
xor
xchg
insl
cmpsl
lds
shlb
aaa
pop
dec
filds
loopne
das
mov
mov
cmpb
pop
test
pop
clc
gs
jne
enter
int3
outsb
xchg
dec
push
add
adc
xor
lds
aam
lahf
lock
mov
inc
jle
mov
lds
addr16
and
jmp
xchg
je
add
mov
imulb
stos
stos
cmc
adc
dec
mov
lds
add
aaa
mov
mov
xor
or
mov
and
push
dec
mov
xor
xchg
adcl
sbb
jge
loopne
testb
pop
wrmsr
lcall
mov
ds
fs
out
mov
inc
pop
inc
pop
scas
je
arpl
or
mul
sbb
mov
lcall
movsb
xchg
dec
push
xchg
sbb
xor
sbb
push
int
mov
ret
aad
insb
jne
xchg
mov
dec
scas
int
lcall
push
sbb
cmpsb
and
call
int
aaa
mov
scas
in
jmp
dec
or
out
mov
rcll
or
add
pop
subl
cs
mov
nop
cli
inc
sbbb
push
or
or
dec
sub
xchg
mov
dec
inc
ljmp
sub
data16
mov
mov
dec
push
subl
in
dec
sbb
add
repz
popf
mov
repz
lcall
popf
cmpsb
pop
jle
js
insl
xor
clc
sahf
dec
xchg
pop
into
test
cmp
mov
cltd
pop
add
stos
pop
adc
jp
jmp
and
cmpxchg
idivb
fldcw
sahf
jl
outsb
inc
push
pop
out
and
push
hlt
cmc
dec
popa
cmc
or
mov
movsb
rorl
jbe
pop
fwait
adc
jbe
add
or
ret
into
leave
pop
jbe
addr16
lret
gs
mov
xor
fdivrs
imul
xor
ret
imul
sbb
sub
stos
outsb
xor
mov
lds
or
jo
test
out
ret
das
mov
lods
leave
dec
test
mov
mov
or
jno
lods
or
and
sti
sbb
js
sbb
push
movsb
cmc
inc
mov
pop
adc
mov
sbb
pop
push
mov
test
xchg
mov
pop
mov
xchg
cmpsl
dec
mov
outsl
fwait
out
repz
rol
cmp
or
clts
or
sbb
iret
jns
and
push
sbb
pop
je
insl
push
test
enter
andb
cli
hlt
sbb
repz
lods
mov
test
mov
dec
mov
mov
xchg
dec
enter
repnz
cltd
jge
xor
sbb
mov
in
jnp
inc
sub
push
xor
icebp
or
lcall
xchg
idivb
push
popa
jb
add
jb
mov
mov
iret
in
cmp
or
inc
sbb
repnz
or
xorl
in
addl
imul
in
cli
sub
adc
or
push
xchg
out
pop
push
dec
gs
push
fldcw
lea
jge
fiadds
jbe
push
faddl
loope
xor
cmp
mov
mov
test
push
in
inc
push
lods
sahf
mov
jp
or
ret
mov
jnp
scas
bound
ss
mov
or
lods
push
pop
iretw
movsb
push
mov
loop
outsb
xor
into
enter
mov
inc
lahf
mov
sbbl
inc
or
jb
movsb
pop
mov
xchg
push
jbe
aam
arpl
xor
push
add
stos
clc
in
sub
in
and
push
fists
cs
icebp
hlt
enter
fcmovu
stos
mov
mov
shl
cmp
push
jge
adc
mov
mov
or
fists
es
xlat
and
inc
xor
js
bound
fisttpll
bound
outsl
xor
out
aam
popf
jnp
mov
mov
inc
inc
mov
xchg
mov
xchg
repz
cmpsb
lock
icebp
pop
cs
mov
dec
dec
loopne
mov
test
push
push
or
add
dec
into
adcb
daa
loope
inc
adc
outsb
movlhps
cmp
mov
push
xlat
sub
mov
mov
scas
jno
enter
in
incl
lcall
mov
add
mov
adc
movsb
out
popa
inc
repz
inc
adc
jp
pop
lret
mov
ljmp
push
bound
repnz
repz
orb
jg
shl
sbb
movsb
push
stos
bound
mov
enterw
lock
and
fdivp
mov
sarb
and
adc
std
add
mov
mov
iret
jns
imul
and
push
jo
mov
dec
in
xor
sarl
mov
inc
dec
das
into
test
sti
orb
out
adc
notb
stos
mov
movsb
mov
popa
push
or
icebp
movsb
popf
sub
sub
jge
dec
mov
add
ljmp
push
xor
pop
inc
insb
sbb
or
and
mov
or
sbb
inc
jl
adc
fdivrs
cmpsb
jae
jbe
xor
outsl
fdivl
daa
popf
pop
and
mov
movsb
lret
insl
mov
fwait
je
jecxz
jbe
adc
fnstcw
scas
insl
sub
sub
adc
xor
out
sahf
or
cmp
ror
jbe
xchg
cld
mov
ljmp
in
xchg
mov
cmp
adc
jne
fs
out
sub
mov
int3
pop
addr16
cwtl
push
pop
mov
xchg
jae
mov
dec
orl
insb
cmp
clc
or
mov
pusha
push
lods
mov
push
stos
pop
addr16
jno
xchg
push
lret
cmp
sbbb
dec
mov
inc
movsb
aad
es
lods
sbbb
in
inc
in
and
aam
out
push
stos
int3
pusha
jecxz
out
mov
sbb
cmp
mov
push
sub
out
jmp
fisttps
shr
scas
mov
xor
in
sbb
cmpsb
inc
xchg
lods
inc
lretw
in
rclb
or
xor
dec
add
xchg
or
dec
sub
and
mov
cmpsb
inc
add
mov
mov
rcrb
mov
ss
cmpsl
dec
push
push
jno
clc
mov
popf
sarb
divb
lcall
and
mov
scas
pop
xor
dec
cmpb
inc
lods
inc
xchg
push
dec
in
dec
and
push
xchg
and
inc
pop
bound
sti
add
and
out
in
arpl
mov
loope
shrb
fs
dec
cmp
fidivl
outsb
sub
outsb
pop
repz
pop
jmp
inc
push
pop
popf
xor
sbb
mov
loope
pop
push
or
jno
mov
into
push
int3
jp
or
pop
jmp
cmp
fsubs
mov
lret
adc
mov
insl
das
fisubs
xchg
inc
aaa
int3
xchg
fiadds
mov
push
mov
lret
mov
fldcw
hlt
pop
dec
mov
xlat
push
mov
in
xor
bound
jnp
fmulp
mov
lods
imul
testb
cs
out
mov
xchg
aas
fs
int3
orl
push
xchg
cli
mov
je
jmp
sbb
or
mov
fstps
dec
cmp
enter
icebp
in
sar
and
lods
jmp
ss
in
pop
push
clc
cmp
das
lret
mov
lds
jp
insl
push
mov
fldl
xor
subb
jmp
mov
std
call
scas
je
jb
ljmp
push
movsb
add
push
ljmp
jbe
in
xchg
mov
add
fiaddl
pop
push
cmpsb
mov
xor
outsb
adcb
loopne
imul
aad
sub
dec
and
ja
adc
push
aaa
fs
out
out
stc
clc
hlt
push
dec
mov
xchg
inc
jo
xchg
sub
ja
iret
cmpsb
jnp
and
add
sub
loope
push
ss
fwait
js
pop
cmp
lods
or
mov
add
dec
push
mov
ss
mov
movsb
mov
inc
shrb
les
mov
add
loop
mov
xchg
sub
roll
roll
cmc
popa
test
testb
sub
mov
insb
out
fs
fsubl
lcall
hlt
sub
mov
pushf
mov
fwait
pop
mov
adc
stos
and
jb
cmp
pushf
sub
movaps
pop
and
push
mov
cmpsl
mov
jp
pop
cmp
mov
call
lds
jb
ljmp
or
sub
sub
test
aam
in
cmc
arpl
shlb
orb
clc
sbb
rclb
add
or
les
xlat
mov
lods
loop
pop
push
rorb
fdecstp
mov
notb
into
and
stos
sub
jno
xlat
repz
shrl
mov
filds
lahf
ja
xor
inc
pop
dec
cli
fisubs
mov
sti
mov
sub
es
mov
divl
xchg
fdivr
mov
xchg
push
into
adc
cmp
fmulp
aas
adc
mov
mov
lods
or
sarb
ljmp
aam
adc
xchg
mov
mov
and
cld
cltd
iret
in
xor
ljmp
stos
cld
sbb
fimuls
xchg
and
jae
xorb
pop
xor
and
out
stc
outsl
push
pop
mov
jg
andb
out
sub
or
idivb
jns
pop
lds
or
stos
pop
add
lea
mov
adc
into
sub
mov
jmp
adc
mov
push
and
lret
jmp
das
jae
insl
pop
mov
lds
or
jb
dec
push
push
enter
dec
mov
das
adc
cmp
sbb
mov
jno
js
rcrb
lods
cs
test
mov
or
or
cmpsl
add
xor
lcall
sub
cmp
mov
dec
mov
cmc
mov
sbb
sbb
dec
in
jmp
sub
movsb
test
xor
and
lods
or
test
mov
sub
mov
loopne
push
fstps
call
xchg
mov
movsb
inc
pushf
pushf
sub
mov
int3
or
lods
cs
iret
cmp
roll
push
out
xchg
xchg
xchg
mov
and
testl
add
aaa
out
je
jo
mov
scas
sahf
std
mov
xchg
arpl
shll
inc
jns
shlb
shlb
in
mov
ds
jae
xor
or
mov
in
mov
cmpsb
nop
ja
mov
sbb
sub
insb
out
jl
scas
leave
stc
xor
movsb
cmp
hlt
xchg
test
addb
loope
scas
jmp
or
push
clc
sbb
outsb
sub
lcall
sbb
les
out
insl
mov
call
xchg
dec
lret
add
push
lcall
repz
pusha
mov
fwait
push
mov
dec
mov
xchg
insb
sub
fdivs
cmp
fisttpll
jnp
mov
fmul
add
sbb
inc
mov
pop
inc
or
loope
sti
push
dec
insl
js
je
out
aad
mov
orb
aam
fistpll
add
mov
mov
mov
jge
pop
jo
add
stc
imull
adc
jns
mov
push
pop
push
mov
sub
mov
or
pop
pop
pop
jae
movsb
decl
adc
pop
cmp
fs
stc
mov
sub
jp
ds
es
shll
cmp
bound
int3
sub
loope
stos
mov
jns
iret
add
stos
shl
cmc
push
add
out
jmp
rcrb
mov
scas
cmp
int3
call
cli
push
test
les
jo
jb
xor
lods
adc
dec
sahf
sub
cmp
iret
sub
sbb
in
pop
pop
mov
stc
fidivrl
or
fwait
mov
call
push
das
fisubs
orb
mov
mov
ss
mov
mov
and
sub
inc
or
mov
push
rorb
push
fnstenv
lods
out
xchg
scas
imul
ret
push
mov
xor
add
lods
pop
ret
mov
data16
xor
lcall
adc
or
xor
fistpl
adc
bound
shrb
iret
xchg
add
js
sub
and
cltd
sub
xor
pusha
into
sub
push
bound
maskmovq
testl
push
xchg
mov
jne
mov
mov
loope
cld
add
add
gs
inc
in
ja
adc
cld
movb
xor
ss
xchg
xchg
and
mov
or
cmp
sarl
mov
and
cmp
jb
in
mov
cltd
cmc
and
add
pusha
push
scas
std
lret
icebp
jns
sub
or
adc
roll
ret
jmp
mov
movsl
push
fmuls
shl
xor
mov
ja
adc
ljmp
stos
inc
insl
lcall
push
shlb
pop
and
sbb
cmc
or
divl
movsb
sub
sbb
sub
adc
inc
repnz
ljmp
pop
cmp
lds
xor
dec
jns
loop
xchg
fwait
jp
lea
sbb
lret
mov
in
int
push
fldl2e
je
mov
cmp
mov
mov
pop
dec
es
jl
adc
or
push
add
pop
bound
ljmp
enter
xchg
adc
adc
rorl
add
enter
cmp
aam
and
js
dec
fcoml
lods
dec
repnz
xor
and
add
pop
xchg
cmp
jle
nop
or
mov
mov
push
jae
mov
jnp
lret
jecxz
or
mov
cmp
hlt
sub
push
in
or
sbb
stos
xchg
lods
addr16
in
and
push
push
movsb
sbb
popa
xor
in
mov
sub
repz
repnz
mov
mov
mov
lea
pop
xor
inc
test
dec
add
jno
imul
sub
fistps
fwait
in
shrb
movsb
or
lods
pop
aaa
lahf
cli
movsb
cmp
sub
pop
inc
outsb
pop
adc
movsb
xchg
in
orb
xchg
repz
mov
push
pop
pop
insl
lds
ss
sub
xor
sbb
mov
sbb
cmp
dec
mov
movsl
iret
inc
outsl
xor
test
mov
popl
lret
xchg
or
sbb
cld
xorb
jp
sbb
stos
insl
pop
popf
pusha
mov
mov
sti
mov
iret
inc
inc
fdivs
and
jo
sbb
enter
lods
les
push
outsl
arpl
stos
mov
stos
repz
ds
inc
mov
cmp
inc
mov
cli
sub
test
lods
loopne
xchg
jmp
or
xchg
in
sub
in
repz
cmp
fisubrs
add
pop
call
cli
push
fdivs
cli
sbb
sbb
sub
mov
movsb
cmp
out
adc
adcb
inc
dec
popf
leave
push
popf
or
xor
sbb
mov
cmp
lock
shll
lret
fcmovnbe
jecxz
inc
imul
pop
stc
fcmovnu
in
iret
push
insb
mov
and
mov
sahf
and
scas
push
fdivrp
mov
pop
push
mov
lcall
testl
adc
pop
call
lret
clc
push
dec
call
push
pusha
test
or
sbb
cli
xchg
popa
mov
push
pop
mov
sub
dec
iret
xchg
mov
mov
xchg
push
test
in
sub
sub
pop
xchg
fildl
xchg
ljmp
xor
dec
sbb
test
outsb
out
push
mov
xchg
mov
cmp
pop
mov
dec
or
scas
push
push
call
nop
xchg
lods
and
stos
pop
sub
mov
lahf
and
int
out
imul
xchg
push
imul
sbb
outsl
jb
dec
jmp
shrb
bound
jae
cvttps2pi
xor
mov
sub
rorb
adc
lcall
or
and
adc
mov
loop
mov
xorb
mov
mov
fidivl
scas
push
xor
pop
mov
cmpsb
lds
mov
dec
es
scas
inc
cs
lods
dec
push
loope
mov
movsb
outsl
mov
mov
test
ds
mov
test
outsl
fnsave
add
mov
push
add
pop
orb
lret
mov
iret
lcall
sbb
outsb
and
mov
mov
leave
jb
pop
movsb
imul
pusha
lods
faddl
mov
inc
outsl
lcall
inc
push
jne
dec
mov
jo
push
xchg
es
rorl
dec
xchg
pop
out
sbb
in
jae
insl
pop
dec
or
sbb
hlt
aad
rclb
test
rorl
push
xchg
ret
and
jmp
or
sbbb
inc
rcrl
out
rcll
test
repz
cs
xor
les
mov
sub
lods
mov
jge
add
ja
es
mov
adcb
movsb
outsb
adc
jge
addr16
out
or
pop
dec
outsl
dec
in
jbe
sarb
lcall
fisubl
mov
cli
push
mov
lcall
call
mov
lods
lcall
xchg
inc
push
lods
lcall
or
dec
xor
push
scas
xchg
jno
inc
imul
outsb
mov
mov
inc
push
inc
xor
push
icebp
sub
pop
test
icebp
xchg
jno
mov
pop
mov
out
push
xchg
mov
stc
dec
adc
das
mov
ret
pop
int3
pop
xchg
dec
lea
int3
mov
mov
insl
or
mov
xchg
push
loopne
mov
pop
ljmp
inc
mov
and
test
and
cmp
xchg
mov
das
and
xor
loope
cmpl
pop
push
jb
pop
inc
mov
push
sub
fs
pop
cmp
ret
lock
movsb
arpl
add
outsb
ljmp
push
movsb
mov
pop
sub
xor
scas
mov
sub
loope
arpl
sbb
sub
sbb
filds
test
lret
inc
mov
insb
cs
rorl
sahf
xchg
les
cld
icebp
mov
push
mov
and
jbe
arpl
lods
aaa
sbb
xchg
movsb
testb
insb
fs
jae
movsb
cmpsl
jo
adc
and
gs
cmc
add
test
dec
push
out
notl
mov
jle
adc
js
shll
testb
dec
pop
nop
xchg
scas
inc
jl
sub
pop
xlat
push
mov
lea
mov
clc
sub
dec
cmpsb
adc
gs
or
jp
cltd
aaa
and
and
repnz
add
inc
xchg
dec
ret
daa
mov
cmpsb
or
movsb
in
inc
xor
lahf
or
mov
jge
jo
sbb
push
push
pop
xor
cmpsb
lods
jecxz
pop
inc
lret
aad
push
ret
add
push
dec
fdivr
jne
lahf
fsubrl
dec
mov
mov
cwtl
out
fimuls
dec
shll
hlt
xchg
rorl
pop
loopne
pop
in
push
sbb
dec
sub
jle
cmp
jno
push
lcall
sub
dec
jnp
adc
sbb
xchg
push
sarl
jae
les
fmulp
mov
pop
adc
add
insb
pop
add
cs
pop
fs
movsl
fnsave
arpl
pusha
mov
std
push
pop
decb
ja
movsb
dec
negb
sbb
lock
enter
outsl
sub
inc
fucomip
adc
movsl
and
and
sub
nop
das
mov
adc
rolb
xchg
shll
test
inc
notl
fs
arpl
inc
stos
stos
pop
dec
repz
loopne
cld
gs
test
mov
ret
push
mov
sbb
xchg
xchg
lcall
jno
dec
sub
sti
sub
movsb
in
push
jb
cli
jae
stos
scas
nop
sub
cmp
jb
ja
cmpsb
sub
or
sbb
cmp
ljmp
push
sub
sub
cmp
ds
ficompl
xor
rep
rolb
mov
xor
push
adc
pop
lods
je
subb
inc
lods
lods
loopne
adc
daa
mov
mov
fildl
test
or
and
mov
mov
xlat
lods
insl
inc
lods
push
inc
bound
and
cld
aam
mov
ret
outsb
xchg
pusha
xchg
mov
sbb
mov
sbb
mov
push
test
mov
and
mov
fcmovne
aas
inc
dec
sarb
mov
add
inc
cld
subb
dec
in
cld
sub
sub
xor
push
sbb
adc
or
ja
pop
fdiv
icebp
sub
mov
xor
arpl
cld
inc
mov
out
int
test
sbbl
lock
mov
sub
mov
pop
xlat
mov
mov
and
lahf
shl
lcall
sub
mov
xchg
mov
bound
gs
popf
repz
jnp
leave
test
mov
mov
jbe
sbb
cmpsb
rol
lock
insl
std
mov
movsb
insl
fildll
out
outsb
and
mov
mov
imul
sub
adc
imul
je
stos
out
stos
push
mov
pusha
jp
insb
test
pop
cs
stos
inc
decb
xor
loope
movsb
push
ret
movsl
in
push
push
jo
dec
mov
outsl
out
mov
jnp
out
das
xchg
test
xor
mov
in
mov
push
rcll
inc
sbbb
xor
hlt
mov
fsubs
sbb
test
icebp
stos
mov
pusha
ret
test
push
outsl
pusha
add
mov
call
push
mov
adc
jecxz
in
pusha
ds
push
xchg
addr16
add
cmp
xchg
mov
mov
cltd
dec
lods
or
and
lods
pop
jge
adc
fwait
cmpl
pop
xor
cmp
iret
add
sub
popa
iret
pop
bound
pop
ljmp
leave
cvttps2pi
dec
subl
sub
and
mov
push
arpl
pushf
sbb
hlt
lock
subl
push
lods
cmp
dec
sbb
in
pop
jns
inc
cmp
stos
or
scas
cmpsl
xchg
outsb
lods
mov
cmpl
jne
adc
test
push
xchg
rep
cltd
jo
imul
psubusw
lods
mov
movsb
inc
rolb
sbb
call
xchg
pop
hlt
in
stc
xchg
push
adc
sbb
hlt
xchg
mov
lock
pusha
mov
out
inc
movsb
or
mov
mov
aas
mov
mov
ljmp
pop
out
mov
stc
push
into
sub
dec
enter
insl
cmp
shrd
xchg
mov
icebp
or
jge
jnp
movsb
fcmovbe
sub
dec
pop
xchg
aad
push
lcall
shrl
outsb
icebp
stc
js
fbstp
ds
push
cmpsl
cmc
pushf
push
xor
aaa
lods
xor
insl
sar
jmp
mov
or
pop
sbb
jmp
lods
lcall
insb
jmp
mov
shr
push
or
fistpl
movsb
jmp
push
inc
pusha
insb
pop
fbstp
jle
push
call
push
lcall
cmp
sub
add
sbb
add
out
cli
dec
cmpsb
inc
je
push
push
push
movsb
fisubrs
loopne
ljmp
xor
pop
xlat
push
lret
mov
push
mov
mov
jnp
cmpsb
push
mov
fs
jmp
push
scas
sti
sub
idivl
movsb
popf
decl
push
movsb
sub
dec
test
sub
lods
es
int3
pop
test
fwait
mov
and
xorl
or
adc
mov
xchg
movb
das
push
pop
lret
push
out
sub
cmp
lea
dec
pop
enter
and
mov
push
jge
cmp
pop
xchg
sbb
fidivl
or
cmc
adc
adc
pop
gs
loope
idivl
js
pusha
cmp
add
fbstp
push
jecxz
enter
sti
lods
adc
push
or
lock
and
dec
push
cld
xchg
add
xor
xchg
or
and
fsts
and
adc
jle
push
arpl
jecxz
repz
mov
push
repnz
addb
mulb
jge
sbb
daa
sub
mov
nop
push
adc
cmp
push
mov
xchg
mov
bound
mov
mov
les
mov
add
sar
inc
inc
lcall
mov
jbe
enter
int3
mov
mov
mov
sub
imul
mov
and
into
fisubrl
into
jae
jp
data16
ret
arpl
movswl
jns
xor
sarb
sbb
ljmp
adc
sahf
and
rcrb
aaa
mov
xchg
cmp
lcall
out
pop
jo
push
js
xchg
iret
xor
out
fsubrs
sbb
mov
push
data16
fs
out
inc
imul
sbb
mov
jge
fs
bound
sub
ja
lods
iret
imul
fsubs
rcll
dec
into
sub
sub
fwait
push
pusha
jnp
xor
add
or
dec
std
ret
xchg
sbb
cmp
mov
insb
shll
sahf
dec
jo
jge
sbb
dec
pusha
in
mov
jb
scas
dec
mov
or
lahf
pop
pushf
popf
mov
pop
sbb
shlb
jl
sar
loope
fs
mov
shl
out
xchg
jae
cmp
icebp
out
cwtl
sbb
sbb
repnz
cmp
into
arpl
aas
outsb
lret
sbb
xchg
fdivrl
mov
inc
aaa
cmpb
rcr
inc
add
cmc
add
lods
mov
in
lret
mov
outsb
push
test
es
push
mov
cmp
lcall
mov
movsl
fsubrl
jne
outsb
stc
jle
test
push
pop
jne
mov
push
dec
ss
inc
out
push
dec
fisubrs
push
jmp
pop
aam
jnp
xorb
mov
movsb
push
gs
in
mov
add
and
sub
xor
push
fsubrl
fcomip
dec
aad
pop
pushf
shll
xor
aad
xchg
cmp
mull
mov
cld
pushf
dec
adc
or
es
rol
pusha
push
push
add
jns
enter
test
xchg
rol
movsb
bound
jb
repz
jns
or
out
mov
scas
xchg
jne
or
jbe
in
repz
outsb
push
inc
rcl
lea
mov
cli
je
push
push
cmpb
dec
jnp
mov
lea
shll
and
mov
inc
pop
std
sbbb
bndstx
movsb
fstp
fdivrs
mov
stos
mov
sbb
cmp
push
test
aad
mov
mov
dec
mov
roll
lea
adc
push
aad
icebp
pop
xchg
gs
fsubr
fisubrs
in
aaa
push
movsb
imul
xchg
ja
dec
icebp
mov
sbb
inc
ljmp
fsubrl
call
jecxz
cmp
or
lods
jl
aad
ljmp
ja
mov
mov
sbb
or
daa
repz
std
push
scas
cs
pushf
jo
shlb
out
shll
cmc
sbb
add
inc
daa
cmpl
mov
in
inc
out
out
mov
mov
testb
les
mov
scas
mov
test
mov
mov
movsb
inc
push
jb
sbb
or
lods
stos
mov
jge
lea
mov
fisubrs
cmpl
sub
fnstenv
mov
test
cmc
mov
or
sar
dec
inc
iret
or
and
lods
daa
mov
in
xchg
movsb
ret
leave
mov
ret
outsl
xor
lods
jno
jnp
or
xchg
push
test
jb
pop
or
mov
xchg
push
xchg
push
or
mov
push
push
ficomps
and
mov
stos
add
push
lcall
lcall
or
lcall
mov
pop
adc
and
mov
mov
push
fldcw
jge
cmpsl
cli
lcall
out
test
and
push
mov
in
outsb
into
push
adc
xchg
dec
jge
inc
jnp
and
ret
adc
cmpsb
lods
inc
push
inc
lods
in
dec
mov
sbb
xor
xchg
and
xor
in
imull
inc
push
mov
push
loop
xchg
mov
cmp
orb
scas
sbb
add
jbe
aaa
leave
es
sub
xchg
jb
int3
jbe
and
add
dec
and
sbbb
cmpl
test
jp
xor
jb
mov
lret
daa
imul
xchg
sbb
andl
dec
cmpsl
sub
sbb
pop
cmpsl
sbbb
xor
sbbl
sbb
fnstcw
mov
xchg
stc
xchg
push
in
aad
sarb
sub
sub
ss
shrb
stos
cli
je
loope
sub
dec
add
aad
mov
scas
mov
adc
insb
push
stc
aas
xchg
pop
sbb
je
movsb
jo
daa
bound
cltd
and
fistl
inc
das
pop
movsb
int3
add
outsb
sbbl
shrb
dec
into
movsb
rol
shl
xchg
es
push
cwtl
into
mov
or
inc
addr16
dec
outsb
mov
addr16
xor
fistpll
andb
roll
push
push
cwtl
pop
and
or
fcomps
mov
push
jns
mov
inc
jb
or
adc
test
pop
pop
imull
ret
fs
xorl
add
clc
int3
cs
mov
xor
icebp
loope
fimull
addl
mov
cs
cmp
fdivp
sub
lea
adc
pop
jbe
imulb
sbb
invd
mov
and
jnp
dec
cmp
rcrl
ljmp
jno
mov
sbb
outsb
cmp
movsb
push
cld
sbb
scas
mov
jno
pop
mov
jne
cwtl
cmp
or
xchg
mov
dec
lock
sahf
scas
pop
les
xor
mov
aam
jmp
mov
imulb
in
cmp
inc
stc
aaa
push
push
mov
add
cmp
cli
mov
cmc
push
or
lods
push
or
pop
leave
inc
ja
test
cli
inc
mov
rorb
sbb
sub
dec
push
add
push
es
icebp
add
xor
rol
and
push
fcomps
push
test
xchg
mov
dec
mov
inc
mov
and
mov
stos
packssdw
xor
and
in
stc
sub
lods
loope
pushf
in
mov
sbb
mov
orb
bts
aas
and
sub
shll
stc
jo
or
or
jmp
mov
loopne
pop
imul
jns
lahf
cmp
xchg
je
or
lea
rclb
mov
push
pop
xchg
cmp
icebp
dec
cltd
add
inc
push
lea
sub
ficoml
mov
adcl
sahf
jbe
add
lret
jmp
scas
lds
mov
add
std
cmpsl
nop
sbb
xchg
ljmp
mov
lods
repz
inc
mov
stc
aaa
mov
jns
cmp
sub
inc
mov
jmp
mov
lods
sub
push
xorb
imul
inc
fsubs
aaa
cmpsb
adc
popa
pop
or
jp
repz
mov
add
mov
sbb
cli
test
xchg
cmc
pusha
test
in
psllw
mov
mov
push
icebp
test
adc
shl
arpl
js
pop
xor
inc
add
dec
rorb
and
paddd
push
sub
stos
jne
daa
pop
mov
push
sub
ds
sbb
cmp
movsb
imul
xchg
loopne
mov
shll
out
mov
jge
xchg
aaa
pushf
out
cmp
dec
testb
or
aad
aam
push
xlat
mov
or
js
add
cmp
mov
lods
cmp
sub
dec
das
jge
insl
push
notb
dec
inc
movsb
scas
xlat
xor
cmpsb
outsb
mov
add
cmp
sub
cmp
mov
lcall
push
cmp
or
jmp
cmpl
push
sbb
push
pop
fsubs
mov
loope
jmp
insl
push
setns
push
movsb
inc
repz
aaa
inc
cmpsb
mov
push
mov
jmp
scas
lods
or
ds
jne
lods
pop
lods
pop
mov
out
xchg
loope
and
ds
mov
sahf
roll
push
sub
jae
pop
fistps
mov
mov
push
call
lock
push
loope
in
in
out
or
cwtl
imul
ret
pop
pusha
fimuls
fs
dec
repz
shlb
jp
mov
fwait
rcrb
fsubrl
notb
scas
mov
movb
mov
je
es
mov
notb
jmp
xchg
mov
aam
xor
and
movsb
cmp
cmp
test
jo
cmp
out
rcrl
clc
mov
xchg
sbb
enter
sub
xchg
in
repnz
mov
jnp
xchg
sub
call
lcall
cmpsl
xchg
pusha
cmp
orb
dec
inc
adc
or
wrmsr
cwtl
push
int
subb
lods
push
pushf
jle
jne
jns
lds
fstpt
fstl
clc
jge
adc
mov
out
dec
jne
into
mov
lods
dec
push
data16
push
imul
jl
in
aam
xor
xchg
inc
jle
adc
push
push
mov
fadd
rolb
push
dec
or
adc
inc
lcall
insb
sbb
jbe
or
mov
sub
fimull
out
pop
lcallw
mov
xor
push
xor
push
or
leave
mov
insl
mov
test
lods
lret
jb
outsl
push
or
ljmp
pop
sahf
aad
insb
cmp
inc
bound
shrl
lock
out
cltd
sbbl
mov
push
sbb
notb
and
es
pop
ja
or
or
fdivl
push
out
inc
fcmovne
test
jb
pop
inc
dec
dec
sbb
sbb
sub
das
jge
or
lret
inc
fs
inc
dec
addl
cld
leave
outsb
or
xor
std
mov
movsb
mov
jns
cwtl
ficoms
ret
sbb
lods
int
mov
sahf
imul
xchg
push
sahf
mov
ja
push
jge
and
sbb
cmp
mov
aaa
leave
xchg
sub
or
inc
jmp
pop
sbb
fstpt
sbb
out
push
sub
cs
lods
test
mov
in
dec
mov
xor
fmuls
xchg
stos
xlat
test
cmc
add
lcall
xor
dec
movsb
js
int3
add
lcall
dec
cmp
sbb
jecxz
into
cwtl
les
movsb
jle
ss
lods
sbbl
or
testl
sbb
shrb
fldt
adc
add
mov
cmp
sbbb
in
ss
scas
mov
stc
dec
loop
test
jns
sti
cs
out
fsubrl
sbb
fcomp
mov
inc
pop
out
xor
out
cmp
or
lock
mov
jae
pop
xor
sti
roll
movsl
movsb
pusha
popf
stc
pop
jns
pusha
mov
das
mov
push
pop
test
jns
test
add
sbb
js
mov
arpl
dec
lods
add
pop
pop
movsb
cmc
lret
xchg
dec
xchg
push
mov
shll
cwtl
cmp
nop
aas
push
cmpsb
cmpsl
pop
gs
insl
cltd
test
leave
and
repnz
fndisi(8087
mov
out
ficoml
jecxz
cmp
cwtl
jne
pusha
subb
sbb
sub
xor
cmp
fisttps
out
and
jnp
sub
shr
push
pop
fcoms
nop
dec
cmp
jns
inc
clc
push
insb
clc
adc
cs
jmp
xor
ja
cmpsl
das
adc
cli
imul
mov
subb
inc
sub
sub
call
sbb
addr16
dec
data16
in
in
loopne
xlat
pusha
dec
sbb
mov
aaa
and
or
sub
mov
scas
xchg
popf
add
into
push
imul
mov
icebp
ss
insb
pop
ljmp
fstps
js
push
xlat
sbb
sub
push
idiv
movsb
mov
adc
mov
call
movsb
push
inc
xchg
sbb
mov
add
jae
loope
adc
sub
xchg
push
addr16
cli
mov
xlat
or
stc
lcall
pushf
test
decl
cmp
mov
std
jp
outsl
orb
xchg
dec
in
out
outsb
shlb
dec
hlt
outsl
xor
sub
mov
test
xlat
mov
dec
cmp
lea
mov
jg
and
aam
movlps
arpl
xchg
inc
and
pop
jnp
and
movsl
push
mov
lods
test
jb
imul
rorl
lds
es
mov
mov
loop
xchg
cmc
ret
incl
sbb
les
test
cmp
add
test
or
add
dec
adc
jge
or
add
in
test
and
mov
mov
fcoml
mov
push
cltd
sub
push
xor
call
das
lock
mov
and
cmp
stc
imul
fdiv
xchg
call
out
sarl
loop
cwtl
jno
int3
xchg
mov
fcomps
shll
lock
inc
scas
cltd
mov
xor
cltd
sub
add
cmp
ja
adc
daa
fs
sbb
xchg
jno
dec
sahf
dec
sbb
mov
pushf
dec
ret
scas
sub
ret
sub
push
movsb
aam
es
xorl
cmp
mov
stos
test
outsl
mov
xor
jnp
xchg
pop
xchg
jbe
jns
cs
clc
pop
pop
mov
dec
faddp
adc
cmp
loopne
scas
cmp
les
jo
lods
inc
mov
sbb
push
cmp
icebp
rolb
shll
scas
enter
and
xor
mov
hlt
pop
mov
loopne
and
sub
repz
xor
gs
scas
imul
lods
stc
cld
mov
es
adc
inc
jle
sub
jns
dec
lds
push
mov
mov
and
xchg
mov
je
add
pop
push
xchg
adc
pop
dec
popf
mov
jge
ds
repnz
push
or
lcall
lods
ret
or
or
xlat
pop
mov
aas
scas
cmp
mov
mov
clc
rorb
sbb
in
insl
mov
mov
mov
or
mov
ds
pop
sbb
into
mov
jno
adcl
xchg
add
insb
xchg
fdivl
scas
pop
sahf
jmp
repz
jno
sub
aaa
jl
ret
call
and
push
lret
jge
lods
lret
inc
sbb
bound
ud1
push
mov
stc
inc
in
mov
ljmp
adc
inc
pusha
jb
insl
push
dec
outsl
sub
arpl
scas
adc
xor
inc
xor
filds
imul
in
outsl
or
xchg
sub
xchg
out
push
dec
lcall
dec
inc
push
sbb
int3
movsb
outsl
add
aad
add
gs
les
cmp
lods
ds
pop
cmp
sub
add
popf
mov
pusha
popl
aaa
push
sub
dec
push
insb
daa
iret
lea
in
and
loop
or
adc
xchg
aam
in
jo
cmp
out
cmp
mov
mov
inc
push
out
xchg
push
fdivrl
jb
mov
das
jno
or
mov
sbbb
dec
in
imul
fs
push
das
lcall
sbb
jnp
cs
fcmovbe
es
clc
mov
mov
push
daa
inc
rcl
add
fildll
adc
xor
push
or
mov
sbb
fistl
xor
into
mov
rsqrtps
xor
add
xchg
mov
mov
inc
jp
subl
sahf
or
loope
sub
pop
call
aas
sbb
pop
push
jmp
stc
push
jne
rcrb
mov
jp
mov
addr16
mov
or
aaa
scas
imul
xor
pop
or
adc
mov
ja
pop
jns
xor
icebp
inc
jle
xor
jmp
ss
mov
mov
roll
jns
and
mov
jns
sbb
movsb
movsb
rcrl
fimull
add
xor
nop
dec
jb
sbb
cmp
fisttpll
iret
loope
adc
cmp
insb
xchg
ds
mov
jb
push
mov
lods
and
xchg
dec
fistpl
dec
pop
test
scas
or
mov
aad
repz
jl
pop
sbb
loop
mov
repz
dec
add
lea
add
inc
dec
lret
test
xorl
hlt
bound
scas
mov
mov
std
xchg
push
insl
jp
arpl
aam
mov
mov
add
cli
outsl
sahf
lret
or
mov
int
ror
pop
movsl
jle
test
and
and
xchg
insl
out
mov
or
pop
iret
cmp
dec
js
adc
or
lds
mov
cld
mov
in
xor
lods
and
mov
sub
hlt
dec
push
push
mov
mov
fs
jae
sbbb
and
arpl
fildl
lock
fbld
xchg
push
xchg
sbb
cs
call
xor
movsb
icebp
mov
jbe
je
adcb
call
test
out
mov
mov
adc
xor
rdmsr
clc
shlb
sub
inc
jecxz
push
push
movsb
enter
jns
xchg
cs
mov
sub
adc
dec
imul
flds
add
jnp
fs
pop
mov
lcall
mov
ret
jns
mov
push
xorl
push
cmp
dec
jns
ljmp
inc
insl
xchg
sub
xchg
pop
dec
add
cmp
xor
add
push
cmp
iret
adc
inc
push
gs
pop
in
mov
jl
pop
fisttpll
add
arpl
jns
das
inc
pop
arpl
repz
data16
lds
and
lods
push
and
insl
dec
stos
xor
pop
subb
mov
insl
jp
lods
xchg
lret
mov
mov
cs
mov
enter
jg
dec
mov
scas
cmpsl
sub
stos
cmp
das
xchg
xor
xchg
mov
ret
bt
jo
adc
mov
rol
pushf
icebp
mov
cmp
cmpsb
or
mov
mov
xor
aas
movsl
mov
lock
ret
fucomi
jns
jge
out
mov
add
push
dec
jb
xchg
mov
pop
in
addl
xchg
ljmp
or
mov
and
sbb
andl
mov
jno
mov
aaa
out
mov
sbb
cmp
outsl
stos
insl
sahf
cmpsl
push
add
ds
icebp
add
cli
imul
jns
loope
aam
mov
cmc
adc
or
repnz
es
nop
mov
sub
xor
fcomps
test
xchg
ljmp
push
sub
xchg
jl
xor
daa
and
xor
mov
dec
push
mov
jmp
xchg
movsl
sub
sub
cmc
cmp
das
dec
cmp
lods
in
jno
or
add
scas
jno
aas
xchg
clc
push
jle
jge
mov
fsubs
xchg
int3
pusha
cli
ljmp
mov
push
stos
add
aaa
stos
jne
inc
pop
shr
jmp
sub
ja
enter
push
scas
add
movsl
mov
dec
fmuls
push
test
inc
sub
push
mov
icebp
jge
stos
dec
sub
sbb
mov
dec
cmc
cmp
call
in
mov
shrl
rorl
outsl
pop
xor
bswap
jae
cmp
mov
push
pop
or
stos
push
mov
je
push
push
mov
xchg
ljmp
mov
mov
sub
subb
add
aam
mov
out
cli
cmpsl
sbb
mov
or
outsb
out
jg
jb
arpl
das
ljmp
loop
xorb
es
sub
scas
sub
mov
pop
cmp
mov
xrelease
stc
push
mov
mov
call
push
pop
and
sbb
pusha
dec
mov
inc
mov
fwait
mov
mov
dec
and
fidivl
sub
cmp
cmp
inc
lds
dec
subb
mov
scas
xchg
scas
into
mov
add
fimull
negl
mov
and
hlt
xchg
ret
and
add
pop
sub
fstpt
ss
dec
xchg
hlt
mov
adc
mov
setge
clc
cmpsb
and
lret
stc
test
pop
inc
aam
fadds
lahf
sbb
fwait
inc
roll
fidivrs
pushf
add
add
or
arpl
dec
roll
fsubr
adc
dec
rcl
cs
and
pushf
and
add
insb
es
push
push
pop
lret
bound
icebp
ja
jb
jbe
cmp
repnz
negl
je
xor
push
cli
ljmp
lea
idivl
test
mov
jmp
test
xchg
xor
mov
mov
movsb
sbb
pop
rol
scas
sbb
cmp
push
mov
mov
or
xchg
dec
shll
jne,pn
mov
in
call
cld
mov
subl
cmp
andl
call
sub
movsb
cmp
cmp
mov
clc
popa
dec
dec
and
jno
repz
pusha
pop
movsbl
dec
jne
xchg
pop
sub
push
fs
lea
cli
ja
mov
xor
ljmp
inc
cmpsb
pop
or
dec
dec
rorb
cmc
repnz
and
dec
cld
inc
roll
sub
inc
sbb
jle
pushf
push
ret
fdivs
ret
adc
mov
mov
add
stos
insl
lods
int
sbbb
xor
dec
orb
sub
adc
call
mov
sbb
mov
bound
shrb
sbb
mov
sub
adc
ss
adc
pusha
aad
jnp
cmp
mov
mov
fdivrs
sbb
mov
loope
jb
jge
dec
mov
outsb
es
mov
mov
cmp
cmp
movsb
pusha
pop
mov
stos
fimuls
insl
mov
fiaddl
dec
insl
pop
out
insl
enter
in
dec
mov
push
mov
jo
pop
adc
xor
xchg
lahf
lods
inc
cltd
enter
lds
out
xlat
cmp
ret
loopne
dec
fiadds
xchg
dec
and
insb
mov
ss
sub
push
pop
clc
and
pushl
sub
cli
ljmp
lods
mov
enter
sbb
lock
shrb
sbb
mov
jbe
ljmp
dec
imul
and
das
lock
pushf
imul
filds
cmp
mov
add
stos
in
mov
repz
jl
pop
test
inc
xchg
jmp
mov
pop
fdivs
insb
adcb
mov
out
pop
sarb
mov
add
imul
push
push
adc
notl
mov
mov
mulb
jmp
mov
adc
sub
mov
jbe
lea
adc
mov
stos
insl
rorl
mov
repnz
std
and
ds
js
es
movsb
cmp
xchg
xor
xchg
push
mov
movsl
xchg
push
repnz
leave
jmp
insl
mov
push
bound
xor
xlat
loopne
sub
mov
loopne
pop
push
adc
je
push
adc
lods
xor
fs
je
xchg
repnz
mov
pop
mov
fdivrp
sub
and
mov
popa
xchg
lret
bound
js
movsb
shll
out
xchg
and
sub
adc
mov
dec
leave
mov
mov
fbld
mov
cld
jno
mov
pusha
pusha
lods
loop
push
mov
jmp
aaa
sub
mov
and
xchg
gs
xor
loopne
mov
incl
dec
lods
jns
sub
xchg
repz
jne
mov
bsr
outsb
hlt
in
ljmp
jle
pop
je
scas
pop
push
scas
inc
jg
icebp
aad
pop
into
ljmp
add
repnz
push
addr16
call
lods
subl
or
bound
fists
scas
movsb
ret
pop
mov
mov
fidivs
aaa
mov
lret
xsavec
or
sbb
jle
and
in
mov
sub
mov
xchg
rcll
pop
or
sub
or
leave
loope
sub
push
push
sub
lods
dec
cli
ret
cmpsl
aad
insl
pop
xchg
mov
pop
repz
fcomps
sahf
xchg
fwait
add
fidivrl
bnd
je
jbe
stc
cwtl
add
push
mov
sub
adc
mov
out
xor
sub
push
dec
or
jmp
push
scas
lods
call
lcall
xchg
popf
out
dec
iret
loope
mov
repz
dec
icebp
mov
inc
mov
ret
imul
stc
sub
sub
lret
add
call
mov
pusha
popf
dec
adc
sbb
push
xlat
iret
in
repz
int
jb
mov
aam
push
enter
xor
mov
out
js
jno
mov
jbe
fstpt
dec
fs
mov
test
movsl
cmp
pushf
movsl
rol
cmc
mov
lea
push
sub
pop
loope
popa
movsb
jmp
add
pop
xchg
into
xchg
and
or
outsl
repnz
orb
fimuls
dec
or
orb
push
sub
loope
sbb
mov
cmpsl
leave
mov
adc
sbb
int
ret
leave
sarl
mov
sar
and
mov
adc
or
es
mov
xchg
push
sbb
xchg
xchg
mov
aaa
ret
dec
dec
scas
adcb
orb
inc
dec
mov
adc
push
or
repz
andl
cld
std
sbb
notb
inc
cmpsl
rcrb
insl
hlt
bound
sub
inc
push
dec
sbb
es
loope
sub
cmp
setbe
incb
loopne
dec
cmp
mov
jge
dec
psubusb
inc
movsl
or
test
inc
mov
dec
xor
jno
insl
test
cmp
cmpsb
lahf
xlat
shr
or
movsb
loopne
push
shr
lret
mov
loope
repz
lods
xchg
mov
outsl
aam
stos
addl
mov
mov
sub
xchg
or
cwtl
cli
sub
push
xor
mov
mov
lret
cmpsl
dec
imul
lcall
mov
popf
mov
lds
mov
push
pop
bound
decl
cmp
dec
cmc
pusha
jne
in
dec
and
or
fsubs
out
mov
jb
stos
bound
jns
jge,pn
ret
addb
in
or
lea
add
mov
pop
shr
sbb
sbb
adc
push
insb
sub
cmpsl
mov
shll
pushf
imul
cli
mov
jecxz
rep
cli
rolb
mov
cmp
fdivs
pop
lea
movsb
sti
mov
sbb
es
jbe
lock
sub
mov
mov
sbb
push
push
mov
add
pop
jl
pop
sbb
rep
xchg
dec
ljmp
ljmp
xor
cmp
rcr
imul
jb
mov
pop
and
push
pop
imul
shlb
sahf
mov
xor
sbb
xchg
pop
popa
xchg
pop
inc
jp
fbld
dec
mov
pop
in
sbbb
ret
jmp
stos
mov
or
xchg
sub
outsl
nop
mov
jle
push
jge
sub
ret
dec
sub
vprotd
pusha
push
dec
xor
pop
orl
sub
pop
mov
xchg
movsb
lcall
and
mov
xchg
iret
push
je
xorb
shlb
sub
cmc
xchg
scas
dec
jae
pusha
mov
nop
imul
sbb
sti
mov
out
xchg
jo
icebp
push
cli
xor
les
std
repnz
ss
mov
push
clc
movsb
add
insl
mov
pop
and
jne
adc
cs
mov
pushf
decl
repnz
mov
jmp
sub
lock
nop
or
push
sub
lods
jp
shr
fcmovb
jle
jb
fs
ljmp
outsb
mov
lcall
iret
es
add
dec
cld
push
jp
cli
insb
int
push
inc
cltd
mov
cmc
adc
xor
mov
bound
bound
lds
test
sbb
mov
inc
and
mov
ja
addl
icebp
add
bound
push
add
and
mov
mov
adc
out
stos
xchg
lds
dec
into
iret
lcall
inc
add
sub
sub
shlb
loop
imul
or
insl
repz
xchg
into
loopne
xor
lods
push
sar
fadds
insb
in
and
lcall
dec
adc
xchg
push
movsb
push
lock
loopne
repnz
push
mov
mov
ja
and
sub
xchg
stos
stos
adc
enter
jmp
jl
mov
push
mov
cwtl
xchg
jb
cmp
push
push
fs
out
negl
cs
loope
dec
test
es
sbb
lret
add
jbe
and
cmc
fstps
xchg
jl
repz
hlt
jnp
inc
enter
jmp
mov
cmpsl
xchg
mov
sbb
jae
into
inc
in
mov
subl
sub
fisttpl
adc
mov
add
cmpsb
mov
and
or
je
fdivrp
mov
fistpl
ja
xchg
sub
sub
jmp
movsb
inc
push
movsb
adc
jnp
ss
xor
inc
rorb
mov
test
lds
loop
loopne
jae
sub
mov
push
aad
repnz
iret
jae
jge
mov
push
and
inc
xchg
icebp
dec
jmp
repz
xchg
in
shr
or
dec
dec
sub
shll
movsb
lcall
lods
and
insl
jmp
cmpsl
xchg
sub
testb
add
jnp
insl
mov
minps
xchg
pop
out
pop
sbb
orl
lods
cwtl
adc
mov
sub
fld
push
test
lahf
mov
fidivs
fsubs
add
push
mov
mov
xor
mov
out
aam
mov
lea
sub
push
cmp
dec
jge
xor
insl
jb
mov
out
dec
out
sbb
fdivl
lods
lods
aam
xchg
mov
movsb
mov
repnz
stc
fisttps
add
lret
add
cltd
push
pop
pop
call
xchg
mov
lcall
rolb
cmp
aaa
scas
jge
jle
fiaddl
movsb
pop
cmp
jne
aad
out
iret
push
push
dec
push
ret
lea
scas
mov
fcoms
call
mov
pop
lret
lods
movsb
cmp
cli
shr
ret
scas
xchg
xorl
push
push
or
mov
aam
pop
pop
pop
and
pop
aam
mov
cmp
pop
sub
jns
scas
jo
add
add
ljmp
in
imul
mov
jae
jp
pop
daa
shll
out
cmp
rcll
jb
push
jne
inc
sbb
sarb
mov
fsubl
out
xor
and
cmpsl
dec
ja
cmpb
inc
or
xor
movsb
xchg
adc
jmp
or
fwait
enter
dec
sub
call
mov
rolb
scas
sbb
mov
movsb
pushf
xchg
push
das
lods
arpl
lea
loope
or
std
pusha
lret
jae
sub
dec
lods
sub
cmpsb
rol
dec
jne
and
adc
sub
or
lea
jae
sub
inc
and
mov
mov
cmc
scas
addr16
scas
cmp
inc
bound
jb
pop
jb
pop
mov
sbb
jns
mov
and
adc
fimuls
jmp
mov
out
andl
sbbb
mov
add
inc
loope
shlb
imul
or
dec
push
dec
push
xchg
fmulp
aaa
test
int
pushf
pop
xchg
dec
test
mov
or
imul
mov
push
lcall
mov
adc
sbb
roll
push
cmpsb
pusha
test
inc
ret
lret
dec
dec
in
pop
test
stos
pushf
mov
cmpsl
idivb
push
mov
sbb
or
leave
jns
pop
out
cmp
sub
mov
mov
mov
jno
sub
in
mov
out
testl
aad
lea
xor
pusha
mov
je
iret
cmp
xor
test
lcall
cmpsb
repz
dec
dec
and
xor
aam
sbb
pusha
pop
xorl
lahf
add
stc
xchg
loope
arpl
jo
push
adc
es
fs
adc
adc
xchg
nop
into
js
lcall
adc
xchg
jbe
adc
inc
int3
hlt
sub
ljmp
lods
test
adcb
xor
dec
icebp
mov
lods
add
sbb
cld
dec
ret
push
stos
jmp
ret
int3
int
insb
outsb
pop
sub
ljmp
rcrb
mov
pop
punpckldq
aaa
outsl
arpl
pop
adc
and
mov
lahf
pop
scas
jb
adc
push
out
xorb
adc
pop
out
rorb
fcom
ljmp
test
stos
push
enter
push
dec
sahf
outsl
mov
repz
mov
fisubrs
aaa
shlb
out
add
cmpsb
insl
das
jmp
and
pop
out
movsb
outsl
push
inc
repz
mov
push
lods
mov
and
movsb
in
negl
pop
mov
and
cld
xchg
lret
or
les
test
ret
bts
cmc
orl
xlat
mov
ret
push
lcall
out
jb
cmpb
and
pop
sub
jne
lods
pusha
pop
rol
inc
movsb
hlt
mov
dec
sahf
lea
mov
lcall
mov
lea
jb
stos
mov
add
cmp
int
arpl
aad
sbb
pop
dec
jo
pusha
std
jns
outsb
and
add
xchg
push
lods
jno
ds
inc
push
roll
sub
incl
add
ds
dec
je
mov
lea
mov
fmull
lret
pop
jne
mov
outsb
sub
dec
sbb
inc
lods
mov
in
movsb
in
push
lods
xchg
mov
pop
mov
fs
sahf
ficoml
mov
jg
mov
push
cli
sbb
xchg
sbb
loope
or
shll
loope
add
out
jecxz
xor
movsb
sbb
cli
dec
push
mov
pop
push
outsb
mov
in
xchg
gs
shll
test
jns
outsl
movsb
fsubrs
xchg
dec
imul
jmp
cmp
scas
lds
or
dec
mov
pop
mov
xor
lds
sbb
popf
mov
adc
jno
js
and
bound
gs
and
mov
mov
xor
mov
lods
addb
sub
mov
icebp
mov
add
adcb
testl
dec
std
hlt
xchg
xchg
lods
push
jbe
insl
or
push
mov
aam
add
sbb
pop
push
adc
sub
into
invd
das
lcall
add
sub
sar
mov
or
pop
push
je
xor
mov
fidivrs
add
dec
out
les
mov
or
out
ficomps
mov
cmp
push
lods
pop
push
adc
mov
dec
fidivl
jp
enter
sub
jno
aas
sqrtps
pop
cwtl
mov
xor
jae
pop
call
mov
pop
dec
dec
mov
xchg
repnz
adc
stos
ss
dec
cmp
outsl
mov
fidivrs
sti
sbb
mov
shll
inc
mov
insb
adc
sbb
inc
mov
stc
and
push
repnz
in
out
mov
decl
subb
xchg
icebp
mov
sub
or
out
and
je
popa
pop
mov
lds
out
lahf
movsb
add
cwtl
in
sbb
insb
fwait
mov
mov
mov
out
bound
addr16
or
int3
push
pop
add
pop
div
sub
hlt
sahf
pop
into
loopne
push
scas
sbb
test
sub
int3
cmc
lea
push
stos
adc
push
mov
pop
out
xchg
jb
movsb
mov
ljmp
cli
push
sbb
fmuls
inc
jp
dec
dec
icebp
xlat
pop
jne
dec
cltd
push
call
inc
pop
push
sbb
mov
push
xor
pop
mov
dec
insb
subb
mov
xchg
and
shlb
sub
pop
adc
int
cs
stos
lods
cmp
jl
sarl
in
xor
jns
sub
sahf
mov
sbb
cld
cmc
add
and
sub
in
int3
cs
push
xor
pop
rcr
xchg
adc
sub
add
pusha
repz
cmc
and
jne
sbb
in
xchg
insl
fadds
iret
ljmp
xor
notl
in
dec
lcall
mov
jbe
lcall
mov
pop
or
inc
sub
lds
add
outsl
pushl
es
mov
mov
out
insb
adc
or
ds
sub
push
sub
addr16
movsb
es
mov
dec
xchg
movsl
add
jecxz
dec
mov
decb
pusha
sti
imul
mov
xor
or
stc
imul
push
test
dec
dec
lods
ss
lods
pop
ret
cs
je
loopne
mov
mov
sub
cli
testb
add
and
lock
fsubrl
lods
add
xlat
sub
shrl
adc
hlt
mov
add
repnz
out
fcomi
in
out
loope
push
adc
pop
icebp
call
push
mov
adc
rorb
adc
in
push
inc
fs
incl
cli
stos
movsb
out
js
xor
orl
data16
fld
movsb
mov
les
sub
cmp
adc
nop
pop
pop
test
inc
imull
enter
aaa
clc
inc
pop
dec
add
pop
xor
pop
sarl
push
movsb
stos
shlb
xor
adc
insl
fildl
inc
mov
orb
and
test
pop
inc
and
iret
rorl
mov
fistl
push
xchg
fimuls
bound
mov
jle
lret
xchg
in
mov
mov
repnz
cmp
add
stos
movsb
subl
ljmp
aad
mov
cwtl
loopne
xor
mov
adc
jge
cmp
pop
cld
mov
sub
cmp
flds
push
xchg
bound
push
pusha
cmp
sub
jecxz
push
xchg
xchg
pop
mov
mov
adcb
dec
cld
out
movsl
jns
xchg
pop
dec
ret
or
and
xor
ljmp
pop
push
mov
js
dec
or
dec
jb
nop
notb
mov
pop
or
push
outsb
add
mov
jmp
sbb
jns
sbb
lods
cmp
jmp
xor
lds
push
add
js
cpuid
jne
je
and
aaa
cmc
pop
mov
cmovp
xchg
xchg
shl
xchg
adc
push
push
dec
test
lret
out
js
mov
fcomp
adc
fbld
testb
stos
pushf
rcll
jl
outsb
pop
mov
icebp
push
xor
and
pusha
ljmp
dec
xor
dec
pop
xchg
mov
cmpsl
repz
xchg
addl
out
lea
test
ja
xchg
mov
push
shl
outsl
decl
adc
jae
iret
adc
dec
mov
cwtl
push
lods
pop
mov
outsl
test
ficoml
push
mov
pop
sbb
movsb
pushf
mov
push
and
nop
sahf
dec
aad
std
sbb
dec
mov
dec
jb
int3
xchg
add
out
aad
sub
mov
nop
mov
fldl
cld
cmp
nop
mov
jp
mov
fcomps
xor
std
inc
mov
mov
sub
cli
cmpsb
lods
loop
test
lods
lods
xchg
cmp
sub
test
out
lcall
jge
ljmp
mov
pop
sbb
push
in
cwtl
cmp
fcoml
inc
mov
popa
sub
mov
adc
loopne
dec
adc
dec
incl
lods
lds
or
push
sarb
out
fcmovne
fnsave
xchg
call
mov
sbb
call
dec
mov
fnstcw
call
mov
mov
dec
jnp
pop
mov
loope
pop
mov
daa
idivl
shr
ds
jmp
mov
sbb
cwtl
dec
inc
lock
lods
jp
fisttps
fsubrs
xorl
repz
repnz
test
pop
push
inc
xor
or
popf
and
test
call
enter
mov
loope
xchg
sbbb
shrl
push
mov
orb
in
and
mov
sbb
pop
bound
fcomps
push
push
movsl
cltd
or
cmpsb
sub
xchg
inc
add
ds
enter
or
mov
cmp
ljmp
out
stos
test
cli
fs
lods
pop
xor
fdivrl
xchg
inc
js
ss
mov
mov
pop
loop
std
jb
or
push
aaa
jb
cs
rorl
push
pop
jl
outsl
dec
daa
pop
mov
icebp
or
dec
test
test
adc
or
es
ret
push
add
xchg
cmpl
ficoms
mov
popa
dec
jne
ja
jge
orl
paddd
lods
sahf
jl
push
ljmp
out
loope
push
adcl
xchg
loope
push
pop
ja
inc
mov
jge
mov
daa
xlat
xchg
mov
fcos
adc
mov
loop
pusha
fs
in
jp
shl
xchg
jmp
aaa
jp
and
ret
mov
rclb
pop
jo
daa
jge
cmp
lods
in
sub
cmp
lcall
mov
fsubrp
push
daa
rolb
pop
iret
xor
sbb
xor
jae
mov
fnstsw
sbb
shlb
push
pop
sahf
jecxz
mov
sti
movsb
mov
ljmp
xor
and
imul
sbb
pop
xchg
enter
notl
xchg
pusha
repz
jo
cmp
pop
jo
mov
mov
cmpsl
dec
loope
sahf
sbb
jno
enter
mov
mov
faddp
cmc
mov
pop
or
sub
sub
inc
xor
pop
scas
jnp
push
xchg
test
mov
push
add
lods
aad
xor
imul
jns
and
cmp
jmp
je
sbb
cmpsl
shrl
mov
cmpb
inc
jb
cltd
jno,pn
cmc
xor
out
adc
gs
xchg
hlt
ljmp
in
sub
test
insl
dec
clc
xor
int
das
and
pop
xchg
scas
cli
dec
les
lcall
push
sbb
imul
jno
les
adc
fisttpl
adc
outsb
add
lds
lock
dec
xor
mov
sbb
mov
aaa
fucomip
mov
sbb
loop
pop
dec
shll
imul
push
jp
sub
ret
sbbl
and
in
mov
mov
stos
adc
into
in
icebp
cli
out
jp
mov
sti
vpunpckhwd
stos
mov
mov
sbb
xor
lods
push
int
les
cld
outsl
cld
inc
sarb
lcall
sbb
ds
push
or
rcrb
shll
shl
inc
or
in
test
jnp
addl
daa
inc
lods
mov
mov
xchg
lds
aaa
mov
mov
jb
out
ja
mov
cmpsl
jbe
sbb
xchg
xor
into
push
cli
sti
ret
fdivs
add
inc
xchg
mov
lea
mov
pop
test
jmp
stos
and
pop
xor
cmp
sub
inc
push
mov
int
loop
mov
fnsave
adc
clc
hlt
push
insb
mov
lods
ds
pop
add
in
xchg
inc
cs
testl
imul
xchg
mov
mov
jmp
lcall
adc
into
insb
jnp
push
scas
xor
frstor
test
push
sub
mov
push
sbb
sahf
test
and
fmuls
jbe
test
dec
nop
sbb
mov
or
das
xchg
mov
clc
loop
mov
jbe
sub
mov
lods
pop
inc
popf
xchg
lret
xchg
sub
addr16
dec
movsl
mov
repz
aas
push
subl
sbb
adc
int
and
sbb
jno
scas
push
inc
adc
imul
andl
mov
unpckhps
dec
push
je
jecxz
adc
sub
enter
cmpsl
movsb
inc
icebp
stos
jae
inc
ja
fadds
iret
pop
inc
out
orl
inc
dec
and
call
pop
pop
or
jmp
test
cs
ret
or
pop
pop
add
pushf
gs
icebp
insl
or
jg
lcall
rorl
lea
mov
daa
sbb
sbb
push
sub
test
pop
add
pop
xchg
clc
xor
xlat
fdivrs
or
outsb
adc
pop
les
pusha
xchg
xorl
mov
push
pop
jns
into
push
jae
sub
ss
iret
fmuls
testl
ret
pop
arpl
pushf
lods
pop
inc
pop
leave
jmp
lds
inc
shr
clc
cmpsb
push
leave
dec
pop
jne
fldln2
scas
adc
pop
ficompl
push
jns
nop
hlt
cld
out
out
push
xchg
and
fwait
shl
es
sarb
push
movsb
scas
dec
pop
inc
imul
insl
mov
jno
cli
mov
movsb
mov
xor
jae
push
addr16
cmpsl
sbb
fwait
outsb
xorps
mov
mov
shll
sub
lret
insb
adc
mov
out
stc
xchg
cmpsl
xor
pop
in
adc
sub
orl
mov
push
lods
adc
neg
stc
testl
int3
lods
xchg
adcb
xlat
movsb
sbb
jno
dec
lcall
jnp
mov
cmpsb
popf
jb
mov
leave
fistpl
leave
and
pop
dec
ret
lcall
das
iret
cmp
call
movsl
das
pop
mov
leave
jmp
lahf
push
fcmovbe
cwtl
and
sub
cmp
outsl
gs
xor
pop
cmc
pop
add
sub
dec
mov
jl
cld
es
pop
push
mov
mov
out
cmp
in
ljmp
jno
cmp
repnz
mov
fwait
jmp
xor
in
scas
js
push
iret
inc
jmp
ljmp
and
xor
pcmpeqd
sub
mov
repz
inc
and
ljmp
push
lret
dec
mov
in
cli
mov
add
mov
or
mov
adc
aas
xor
lods
cmpsb
mov
clc
imul
mov
aaa
mov
push
xchg
testl
sub
add
out
push
push
pusha
daa
int
aam
add
push
lret
int
xlat
mov
testl
pop
iret
outsl
add
push
jp
lock
cli
mov
mov
mov
out
xor
push
inc
les
and
jno
mov
mov
sub
fwait
sbb
push
dec
lods
sub
enter
push
sub
add
test
sub
mov
outsb
pop
mov
or
xor
mov
sbb
in
ss
add
outsb
mov
sahf
cli
popf
or
cmp
stc
pop
ret
rorl
notl
mov
or
cmp
mov
pop
mov
ss
fisubrl
cmp
sbb
daa
sub
jmp
inc
or
push
pop
orl
jmp
lahf
sarl
add
lods
adc
jo
sbb
out
into
iret
push
subl
mov
int3
pop
push
add
movsl
addr16
inc
xorl
pop
idivb
icebp
std
sub
push
mov
ret
jo
es
dec
sbb
iret
jb
pusha
inc
enter
and
repz
add
in
jge
jae
popa
pop
push
stos
dec
rep
cld
inc
ja
cmp
es
jl
dec
out
xor
loope
push
adc
push
inc
mov
scas
lods
mov
cmp
jns
dec
jnp
jl
jo
ret
mov
stc
stos
xchg
cmp
sbb
loopne
sbb
push
mov
test
popf
jmp
lock
insl
xchg
push
sub
fnstsw
cltd
pop
pop
das
hlt
sbb
aam
hlt
cs
mov
insl
sub
dec
mov
pushf
addb
mov
shll
add
xor
xor
sbb
mov
jg
out
dec
repnz
add
jmp
outsb
arpl
pop
ret
xor
jno
jmp
mov
jnp
lock
pop
mov
xor
xchg
add
push
incl
in
jl
mov
sbb
jns
xchg
cld
dec
add
fsubrl
jb
mov
lahf
sub
mov
repnz
mov
dec
test
xor
sbb
jmp
mov
clc
or
insb
xchg
sahf
mov
mov
scas
xchg
mov
icebp
cwtl
sub
pop
xchg
push
dec
movsb
xchg
jnp
sbb
push
adc
pop
movsl
jns
insl
std
in
cmp
and
add
mov
pop
mov
rorb
and
mov
lea
icebp
lret
les
jmp
lcall
sub
mov
and
push
xchg
in
mov
mov
es
or
addl
scas
sbb
ja
ljmp
add
icebp
fbstp
sbb
inc
call
push
mov
cld
or
leave
dec
mov
jbe
lods
and
dec
add
add
out
loopne
pcmpeqw
pop
mov
mov
jb
dec
jmp
jp
push
jg
push
inc
and
mov
cmpsl
lahf
or
fcoml
mov
sub
mov
sahf
jb
out
add
push
inc
xor
add
sub
movsl
jo
xor
mov
xor
movsb
pop
push
out
scas
sbb
lods
mov
in
int
push
jns
out
xlat
cmp
ffreep
lock
xchg
cmp
cs
out
add
out
stos
push
cmp
popa
xor
icebp
xchg
cmpsb
sub
ret
adc
sahf
jns
mov
pop
stc
bound
iret
shlb
mov
mov
mov
mov
bound
imulb
cmp
mov
test
xor
ja
insl
addr16
mov
mov
fwait
in
xchg
and
jl
fistps
push
sub
mov
add
mov
xchg
mov
push
aad
push
jns
push
adc
jl
mov
mov
adc
sahf
dec
iret
or
fmull
stos
scas
mov
mov
inc
push
fsubrs
adc
shrl
xor
testl
cmc
bound
shlb
cmpsb
push
iret
test
lods
adc
insb
mov
sub
mov
mov
push
sub
mov
ret
mov
jnp
xor
jbe
dec
inc
cmp
jb
mov
psraw
adc
gs
xlat
jb
mov
mov
xchg
push
pop
andl
or
pop
push
xor
aam
inc
lock
movsb
scas
mov
icebp
xlat
xchg
mov
imul
test
insl
cmp
jno
pop
push
pusha
lcall
inc
fiaddl
imul
sub
subl
pop
fisubrl
lods
cmp
mov
pop
xlat
cmp
jmp
mov
jns
cmp
pop
sbb
mov
nop
nop
dec
push
sbb
stc
lods
js
rclb
ret
pop
xchg
mov
inc
jns
pop
lcall
neg
int3
mov
test
cmp
out
dec
divl
mov
xor
pop
scas
jp
movhps
jns
push
lret
into
dec
or
popf
dec
push
mov
mov
or
insl
movsl
dec
add
mov
push
xor
sub
das
out
adc
ds
movsb
repz
js
or
mull
lock
notb
mov
aad
gs
je
vpcmpeqd
push
imul
mov
lcall
xor
cmpsl
fdivrl
notb
sub
stos
ja
dec
mov
pop
mov
push
and
push
xchg
jecxz
pop
mov
mov
imul
cli
adc
call
xchg
xchg
mov
xor
out
sub
jecxz
popa
sub
into
into
les
jb
movsb
cltd
or
xchg
pop
test
inc
lea
fstpt
or
dec
sbb
mov
ret
lcall
sub
loop
xor
fimuls
dec
pop
into
icebp
dec
movsb
mov
pushaw
xor
dec
ficomps
mov
push
mov
test
insb
push
aaa
and
test
jno
pop
or
and
scas
lcall
xchg
pusha
outsb
jno
imull
xor
outsl
std
mov
sbb
shll
mov
lock
lds
xor
mov
loope
pop
cmp
fsts
lea
ret
mov
in
xor
pop
out
bound
dec
jo
mov
sbb
mov
jb
push
iret
inc
add
push
popf
xor
aam
outsb
mov
ja
push
dec
adc
popf
pop
mov
mov
mov
movb
outsb
inc
les
push
add
push
jp
sbb
dec
jne
cmp
arpl
sub
add
sub
es
pop
in
outsl
jae
out
popa
je
lods
jns
cltd
mov
aam
popf
sbb
mov
lods
xorb
stos
les
bnd
push
fwait
out
movsb
outsb
roll
inc
pusha
or
mov
iret
sbb
xor
hlt
xchg
into
fwait
repnz
jl
lahf
pushf
mov
loopne
mov
xor
adc
movsb
pop
add
push
dec
xor
fucomi
mov
inc
movsb
nop
mov
mov
add
cmp
or
fistps
lcall
ret
fdivl
add
mov
push
lods
adc
int3
cli
call
mov
mov
js
dec
and
push
scas
nop
lcall
into
nop
pop
and
cmp
sub
sbb
loope
push
and
mov
rolb
mov
add
data16
mov
ljmp
push
push
mov
xchg
std
xor
push
xor
shlb
pop
dec
push
lret
add
mov
jp
jno
sbb
xchg
mov
pop
xor
mov
imul
push
inc
cs
mov
aaa
xchg
push
sbb
mov
lea
jg
outsl
push
push
subb
jb
cltd
outsb
xor
std
fsubs
xor
imul
rorb
sbb
ljmp
push
lods
movsl
fimuls
iret
mov
dec
cmp
fcomi
xchg
clc
mov
int
pop
addl
sbb
adcb
mov
jns
mov
lds
lcall
pop
bound
xorb
pop
test
stos
and
adc
rclb
jne
adc
mov
lahf
dec
xchg
jge
addl
mov
push
aaa
aam
cmp
fiaddl
pusha
jae
pusha
hlt
xchg
push
ja
scas
mov
jmp
rcl
dec
pusha
repz
ret
scas
stc
or
lock
mov
lods
pop
sub
cmp
lds
test
cwtl
fs
mov
xchg
fcom
xchg
sahf
int
inc
outsb
stos
mov
sarb
mov
sbb
or
inc
pop
aas
pushf
mov
hlt
in
icebp
es
mov
sub
andb
pop
es
les
jge
in
aam
mov
out
xor
bound
nop
sub
mov
cs
inc
or
sbb
sahf
cmp
mov
movsl
cwtl
stos
mov
outsb
dec
mov
push
fistpll
sub
negb
and
adc
add
in
inc
mov
mov
int
sub
cmpsl
cmp
mov
call
in
ret
scas
xor
mov
xchg
push
mov
or
orb
mov
cmp
imul
push
pop
and
jb
xchg
pusha
iret
sub
arpl
into
jns
lcall
push
iret
cmovl
push
dec
arpl
dec
arpl
scas
inc
fldenv
mov
das
jns,pn
pop
jl
lret
scas
push
leave
imul
jo
push
je
cmp
ror
xchg
aad
hlt
push
sub
lds
pusha
lods
mov
sub
dec
mov
mov
jno
mov
cmc
ucomiss
adc
inc
je
scas
mov
cmp
out
imul
scas
mov
mov
je
and
ret
lds
into
cmp
mov
fnstenv
dec
cmpsl
pop
add
bound
mov
add
xor
lods
lahf
push
push
inc
lea
daa
cmp
fldcw
push
inc
push
ss
je
add
iret
imul
xchg
and
sub
fcomps
ss
pushl
mov
xorl
in
pop
loope
mov
sub
cli
mov
mov
jno
sub
and
sbb
popf
sbb
xor
imul
pusha
arpl
mov
and
mov
xor
sarl
jmp
clc
push
add
cmp
adc
aam
js
movsb
hlt
mov
cmpsl
push
mov
push
mov
ljmp
repz
pop
repz
iret
orb
cmp
jo
mov
call
pop
adcl
jmp
sub
ret
xor
stc
adc
adc
sub
mov
sub
les
and
jbe
shrb
xor
mov
sub
mov
movsb
cltd
call
push
lods
int3
dec
xchg
int
mov
push
push
inc
dec
dec
ret
mov
or
pop
and
mov
insl
mov
aam
mov
add
icebp
or
xor
xor
xchg
and
add
push
mov
add
stc
push
sbb
sarl
and
sub
jl
out
popf
and
xor
ror
sub
jmp
sub
gs
scas
test
or
pop
mov
inc
mov
fs
cmp
jns
cmp
flds
sbb
insl
dec
pop
inc
push
jp
or
je
ja
add
popa
scas
sub
leave
sbb
xchg
sbb
cltd
scas
test
xchg
cmp
xchg
pop
ficoml
notb
or
sbb
adc
jbe
mov
enter
add
push
jae
stos
xchg
cmc
scas
cmp
in
aad
pop
sbb
mov
and
jecxz
and
loope
sbb
adc
fwait
in
mov
arpl
sbb
lret
rcrb
add
repnz
nop
xor
push
out
xchg
movsb
mov
repz
call
dec
cmp
pop
hlt
les
mov
sahf
xor
imul
lods
fnstcw
inc
in
sahf
movsb
mov
daa
add
and
sbb
mov
mov
mov
push
mov
adc
mov
fsubrs
sub
sub
mov
xorl
mov
call
pop
mov
movsb
mov
in
adc
push
inc
adc
gs
test
add
mov
js
mov
xchg
add
xchg
mov
std
outsl
mov
stos
cwtl
fildl
and
push
negb
ds
leave
push
stc
dec
in
movsb
data16
lods
insl
shrl
sbb
movsb
push
cld
mov
jb
sub
je,pt
popf
sbb
inc
push
jns
aad
push
popf
pop
pushf
ret
fcmovnb
arpl
inc
cs
xchg
loope
add
orb
xchg
and
mov
loope
or
cmp
mov
pop
add
push
das
inc
movsb
stc
cmpsl
inc
aam
jmp
jne
rep
iret
lahf
xchg
das
mov
or
pushf
push
push
lods
pop
loope
push
xchg
xchg
stos
andnps
movsb
sbbl
mov
sbb
or
iret
xor
dec
or
jmp
ss
movsb
fistl
stos
mov
adc
fwait
add
mov
add
test
and
xchg
fistpl
xchg
pop
mov
movsb
aaa
inc
mov
iret
je
dec
addr16
cld
fldenv
inc
movsb
or
mulb
jge
rolb
movsb
iret
xchg
mov
inc
inc
je
int
out
xor
movsb
or
or
add
pop
push
push
mov
mov
movsl
loope
mov
mov
cmpsb
pop
mov
cmpsb
mov
popf
xor
lods
push
outsl
xor
push
ss
cmp
test
jno
jg
adc
adc
mov
lods
call
or
mov
mov
shrl
aam
sbb
mov
sbb
orl
inc
out
sub
xchg
pop
gs
sbb
and
das
pop
xchg
pusha
cmp
inc
cmpsb
loope
pop
push
movsb
lret
or
sbb
pushl
inc
addr16
test
jns
mov
sub
lods
js
jb
loop
test
or
aas
fidivrs
push
movsb
push
lcall
and
int
dec
dec
call
xlat
outsl
into
notl
xchg
mov
shrl
mov
aad
mov
cmovle
cld
push
andl
mov
jge
push
add
fdivs
vpminsw
popf
add
pop
adc
add
mov
mov
movsl
bound
dec
or
les
mov
mov
rcrl
mov
push
lods
jae
out
mov
std
call
sub
cmpsl
xorb
sbb
lret
mov
cmpsl
sub
scas
mov
mov
scas
dec
xor
adc
inc
adc
das
in
inc
fidivrs
sub
jmp
int3
add
into
test
jmp
jae
mov
int3
and
adc
jae
out
ja
pusha
dec
fnsave
ficomps
in
pop
xor
repz
mov
push
bound
mov
orb
bound
dec
pop
jmp
adc
push
push
arpl
dec
out
xor
fisubs
cld
movsb
jo
insb
push
mov
lea
sbb
call
mov
je
sbb
pop
repz
dec
pop
dec
rcrl
pop
movsb
jne
mov
addr16
sub
int
and
js
insl
push
xor
addr16
jno
movsb
negl
shl
xor
jns
mov
into
inc
push
inc
scas
in
push
add
test
outsb
sbb
push
shl
adc
dec
jge
lods
push
pushf
mov
mov
mov
push
outsl
push
outsb
fldl
loop
fsubl
shlb
xor
ja
mov
sub
add
std
sub
inc
push
xor
pop
test
outsb
aam
sahf
mov
xor
movsb
dec
aam
or
imul
sub
cmp
push
subl
jno
jmp
adc
dec
push
inc
fmull
add
push
sub
loope
fidivs
ss
insl
lods
sti
pushf
fwait
or
and
out
roll
call
jmp
push
int3
pusha
mov
sbb
dec
mov
add
fldenv
adc
out
repz
ficompl
push
pusha
jecxz
or
sub
jmp
int
rcrl
fcoms
fdivrs
pop
out
adc
scas
jb
jge
sbb
and
loop
mov
jecxz
cmp
cwtl
dec
dec
adc
push
pop
cmp
imul
stos
ss
mull
rcrb
sub
cmpb
ret
imul
jg
repz
call
aad
jae
ret
and
ja
ret
add
and
push
inc
jmp
outsl
xor
in
pop
popf
data16
aas
imul
in
sbb
push
push
lods
in
shlb
mov
mov
pop
lods
push
rorl
rol
xchg
out
cmp
mov
or
repz
mov
or
mov
cwtl
cmp
add
adc
jbe
fs
int3
and
nop
sbb
inc
push
push
mov
movsb
cmp
jae
fcmovbe
cmpsl
lods
xchg
jmp
pop
in
rcrb
lods
and
and
outsb
ja
or
stos
inc
mov
sahf
cli
mov
push
dec
hlt
sbb
mov
int3
call
stc
pop
dec
shrb
jb
mov
sbb
lods
xchg
inc
movsl
dec
push
out
sub
jb
ret
adc
lret
js
push
fdivp
std
out
jecxz
xchg
cmc
icebp
mov
dec
xor
xor
sub
aam
addr16
fisubrs
int3
subb
lock
jge
call
movl
test
mov
insl
push
and
inc
sbb
lcall
push
pop
jo
daa
mov
pop
ss
ret
xchg
loop
daa
testb
movsl
push
fstps
stos
inc
mov
test
addb
push
jno
mov
stos
outsb
pushf
hlt
inc
hlt
popa
inc
xchg
dec
mov
push
int3
bts
insb
jbe
movl
aad
fidivl
movsb
pushf
jns
pop
push
inc
push
loope
xchg
pop
or
jl
int3
shll
xchg
mov
mov
les
mov
je
push
out
movsb
xor
push
xorb
pop
jp
push
dec
or
out
ret
sub
movsb
xchg
ljmp
icebp
iret
rcrl
test
mov
sti
push
xchg
mov
dec
jge
pop
loop
sub
hlt
cli
cmovs
fs
ss
inc
sub
or
stos
or
imul
pop
jbe
addb
sub
mov
insl
sbb
sahf
sbb
or
push
jge
outsl
test
or
inc
ret
xor
les
dec
int3
push
cmpsb
fwait
mov
mov
scas
adc
mov
and
fdivrs
lds
mov
loop
xchg
add
loope
mov
xor
mov
or
jb
out
sti
repnz
testl
or
cwtl
pushf
jb
push
fstpt
xor
mov
or
into
test
scas
fdivrp
leave
mov
and
test
icebp
jge
adc
leave
getsec
out
test
inc
sbb
cwtl
and
dec
xor
mov
loop
aaa
mov
push
mov
sti
arpl
fwait
xchg
mov
insb
shlb
sub
xchg
add
lods
xchg
outsl
dec
mov
rorb
scas
dec
mov
out
fs
lea
cmp
fcomi
out
pop
sbb
orl
mov
jae
movsb
nop
mov
fidivrl
dec
push
icebp
jns
or
jl
es
stos
sub
stos
xor
mov
inc
int
dec
xor
mov
in
mov
movsb
sarl
and
dec
pop
push
pop
jecxz
call
in
daa
or
xchg
jl
mov
xor
popf
push
shll
pop
mov
outsb
mov
out
insl
pop
fiadds
jp
inc
cmpsl
mov
add
fsub
pop
inc
ljmp
pop
push
imul
fcomp
jno
movsl
int
mov
xchg
les
incl
adc
xor
jno
adc
push
into
cwtl
cmp
test
sub
or
sbb
out
mov
xor
xchg
and
cmp
mov
out
or
mov
sti
es
cmp
aad
sbb
pop
jno
enter
lds
jge
icebp
xor
adc
fsubrs
xor
mov
mov
xchg
push
lods
add
sub
dec
arpl
stc
jecxz
fldt
test
lods
xor
addr16
mull
test
lods
and
pop
jp
rcrl
adc
add
fcoms
std
outsb
aad
fsts
pop
sub
push
adc
xorl
leave
ss
dec
hlt
leave
jae
inc
lods
jb
pop
push
movsl
xchg
dec
sub
mov
pusha
jle
das
dec
mov
sti
mov
cmpsb
lods
cld
push
call
jecxz
ja
mov
mov
and
icebp
add
add
fcmovnbe
sub
add
mov
mov
lcall
hlt
sub
cs
push
sub
push
dec
hlt
and
adcb
scas
jns
arpl
jecxz
stos
pushf
pushf
nop
loope
mov
andl
mov
pop
mov
jle
push
cmp
mov
lds
cs
mov
dec
shll
pop
cmp
les
imulb
pop
lcall
jle
ja
imul
sub
ret
in
jmp
mov
lret
loop
lcall
add
neg
imul
popf
hlt
into
lods
adc
jne
pop
out
stos
push
mov
movsl
dec
lock
pop
pop
sbb
stos
mov
aaa
jo
dec
mov
pop
jae
sub
mov
pop
cli
jo
mov
in
mov
fisttpl
lret
mov
pusha
mov
int
pop
xchg
push
call
ret
and
inc
push
lea
pop
fwait
mov
add
jp
addr16
stos
mov
cltd
addb
mov
shl
xlat
sahf
jle
push
mov
jne
mov
imul
jl
repz
fsubrs
mov
push
push
clc
cmp
xor
ret
test
mov
arpl
in
sbbb
push
jbe
leave
mov
es
out
ret
xor
mov
into
mov
sbb
dec
sti
out
mov
sub
jns
mov
das
fwait
in
inc
insb
mov
push
es
int
out
shr
orb
cld
add
sub
dec
push
mov
jge
cld
pop
sub
or
fisubl
dec
aaa
scas
jno
push
xchg
lret
push
sbb
mov
pushl
aam
or
fs
cmpsl
add
sbb
bound
mov
mov
lods
shl
addl
daa
mov
fists
int3
andl
lods
aad
dec
lods
iret
pop
aad
or
pop
mov
pop
dec
push
rcrl
cmp
xchg
xchg
mov
aam
aad
pop
add
ljmp
mov
hlt
push
jge
push
xchg
sub
int3
add
sub
mov
mov
ret
clc
std
mov
movsb
lea
adc
xorb
mov
push
dec
xchg
or
xchg
or
outsb
ret
push
lcall
mov
cmp
dec
sub
shlb
cs
fisttpl
lods
jno
scas
push
movsb
and
mov
mov
cmp
lahf
add
pop
pop
xor
sbb
mov
dec
or
shrl
xchg
cmp
adc
pop
gs
lods
ret
out
mov
insb
pop
jae
pop
movsb
xchg
scas
or
loopne
fiaddl
adc
mov
cmpl
addr16
es
cs
sti
scas
lea
es
in
rcr
dec
scas
sbb
push
rcrb
mov
rorl
shlb
mov
sahf
pop
sbb
jl
mov
daa
repz
mov
inc
mov
pop
and
in
pop
repnz
adc
push
sbb
cli
int3
xchg
sbb
insb
lods
pop
add
sub
ss
push
mov
aaa
pop
lods
mov
dec
jno
push
test
clc
cmp
jbe
addb
or
or
addr16
cs
mov
les
mov
icebp
cwtl
jb
stc
shrb
sahf
mov
jno
repz
inc
adc
mov
jae
movsb
imull
mov
loope
orb
sbb
mov
jl
sub
mov
push
inc
inc
adc
pop
scas
adc
sub
iret
sub
mul
scas
ret
movsb
dec
pop
push
sbb
fmul
dec
lcall
nop
outsl
adc
repnz
xchg
sub
out
insb
inc
in
aad
std
mov
hlt
adcb
cmovns
pop
cs
push
inc
movsb
pop
add
aas
inc
mov
pop
das
pop
and
popf
rolb
sbb
lahf
movsb
push
pop
rclb
scas
sbb
aad
xchg
sbb
push
outsl
in
push
inc
pusha
push
mov
xor
mov
rorl
xor
test
roll
xchg
add
cmp
jle
push
ja
fldcw
pop
lds
fimuls
rorl
fstps
movsb
rorb
dec
dec
mov
nop
cmp
cmp
fsubrs
loopne
or
jns
pop
cmp
xor
jle
cmc
jecxz
sbb
mov
iret
adc
xchg
leave
jns
push
pop
dec
sbb
fxch
mov
in
jb
cs
mov
mov
inc
dec
xchg
insb
xor
test
scas
arpl
mov
sub
loope
in
fdiv
nop
ss
stos
leave
imul
adc
fs
pop
mov
xchg
out
sub
test
push
fmuls
mov
test
mov
jno
fisttpl
mov
mov
jg
addl
xchg
enter
dec
ljmp
dec
fimuls
jp
je
cmp
jo
cmp
xchg
mov
adc
xor
sbb
movsb
arpl
in
push
cltd
hlt
xor
inc
imul
adc
hlt
dec
jnp
mov
push
xorb
mov
scas
lret
or
pushf
and
cmp
int3
in
test
daa
popa
test
push
cli
sub
jge
dec
sbb
fldt
xor
rcr
push
sub
movsb
lods
mov
push
call
push
sub
cmpsl
mov
push
mov
dec
es
adc
mov
lcall
arpl
push
push
aam
pushf
jmp
pop
out
movsb
pop
into
sbb
and
lret
dec
dec
ljmp
mov
leave
cli
xor
cmp
in
popa
daa
add
push
jb
adc
mov
sbb
adc
fcmove
dec
mov
mov
mov
fs
sti
sub
in
add
add
lret
movsb
mov
repnz
sbb
mov
mov
enter
pop
stos
push
mov
fisubrs
sbb
mov
adc
xchg
shll
lods
les
shlb
movsl
pop
dec
sbb
or
addr16
out
xchg
mov
pop
mov
xlat
test
fs
push
xchg
xor
mov
scas
xor
mov
lret
lcall
unpcklps
lcall
gs
daa
sbb
aaa
sbbb
call
push
ficoms
mov
sahf
sub
xor
and
push
push
iret
mov
dec
xor
mov
mov
or
test
or
fimull
xchg
push
movsb
cwtl
push
sub
xchg
and
pop
iret
leave
and
jle
xor
es
mov
cltd
dec
stos
push
push
loope
inc
packssdw
addr16
imul
shrl
insb
sbb
andb
shrl
dec
xchg
shlb
lods
mov
imul
test
add
stos
lods
inc
jmp
outsb
xchg
insl
mov
mov
icebp
shrl
movsb
sub
add
pop
fxch
cmp
sub
adc
and
pusha
mov
dec
jbe
pop
iret
dec
mov
jmp
cmpsl
lods
push
cmc
inc
lcall
fldt
cmp
mov
or
pop
xchg
cld
xor
into
push
outsb
mov
icebp
loope
xchg
outsb
ret
stos
jno
xchg
insb
lahf
mov
push
cmc
push
jbe
sub
mov
sub
fmuls
jle
insl
pushf
xchg
cli
mov
test
in
bound
xor
popf
and
or
mov
fistpl
psubb
sbb
mov
cmp
pop
popa
or
movsb
gs
loop
pop
lret
bound
xor
or
je
dec
mov
sbb
mov
pop
inc
fbld
stos
lcall
repnz
cs
mov
popf
lea
ret
lds
cltd
fdiv
jle
push
adc
test
lcall
mov
movsl
push
lods
mov
add
mov
mov
data16
push
ss
or
cmpsb
mov
mov
mov
push
icebp
lods
es
pop
shlb
mov
xor
fsubrs
pop
daa
mov
and
lods
icebp
in
dec
stos
inc
jecxz
dec
les
xor
outsb
mov
mov
mov
mov
dec
xchg
iret
cmpsb
test
cmpsl
movsl
ljmp
outsl
mov
jge
push
jns
dec
stc
sub
stos
jp
cmpsb
push
and
inc
push
jo
push
insb
cmp
mov
in
scas
enter
cmp
repz
dec
and
jb
movsl
sub
xor
movsb
pop
jge
push
xchg
inc
jb
fiaddl
div
nop
or
mov
cli
mov
cmovg
lods
xor
inc
daa
sub
mov
adc
popf
sub
mov
sbb
stc
fcmovne
dec
add
add
movsb
rsqrtps
mov
ficoms
adc
xor
repnz
div
pop
jns
sahf
dec
and
out
cmp
add
stos
dec
sub
test
subl
sub
notl
movsl
outsl
pop
add
cwtl
xchg
std
shlb
sbb
mov
mov
mov
jbe
push
movsb
add
or
mov
jne
dec
cmp
cld
cs
sub
mov
rol
sub
or
ret
push
aam
pop
les
test
cmc
push
fldt
jno
loopne
outsl
mov
push
outsb
movsb
sub
pushw
push
adc
cmp
mov
add
fmuls
pop
in
sar
lret
push
or
aas
sbb
data16
xlat
or
or
and
sub
mov
mov
leave
mov
and
dec
outsb
sub
fsubrs
out
xchg
arpl
leave
xor
fistpl
xor
addb
jbe
add
jno
add
xor
xor
xlat
or
rdtsc
stc
lcall
sub
dec
into
dec
lret
pusha
mov
mov
data16
in
addr16
mov
femms
mov
add
sub
or
out
jb
and
jb
push
xchg
std
add
or
clc
push
push
addb
enter
jne
mov
js
jp
cmp
adc
and
pushl
call
jge
push
mov
push
mov
mov
dec
xchg
sub
adc
ja
movsl
or
nop
sub
sbb
les
cmpsb
cmpsl
inc
and
clc
mov
jge
in
lcall
dec
push
cmp
lcall
ret
xor
aad
xchg
jge
ss
jo
inc
iret
adc
fistpl
cmpsl
inc
xorl
pop
popf
push
ljmp
ja
sub
mov
xchg
mov
add
push
enter
sbb
inc
xchg
push
jno
repz
es
dec
test
out
adc
mov
sbb
mov
mov
mov
cli
popf
sub
xchg
iret
xor
fnsave
jns
dec
xor
ds
add
cmp
stos
mov
mov
fwait
sarb
les
mov
pusha
mov
sub
push
push
xlat
movsb
mov
fsubr
scas
mov
cs
jge
or
imul
push
dec
sub
xor
aas
lcall
or
rcrl
rcll
nop
xor
jmp
sbb
inc
jno
inc
addr16
scas
loop
es
push
push
pop
insb
popf
sbb
clc
adc
mov
sar
nop
jno
mov
pushf
xchg
cs
xchg
mov
pop
sysenter
imul
sbb
fidivrl
push
adc
jnp
cmpsb
jp
jno
enter
cs
push
les
dec
sbb
push
sbb
cmc
dec
and
lret
inc
lcall
sub
cwtl
clc
repz
subl
push
inc
xchg
cmp
sub
adc
sbb
idivb
jg
xor
mov
ficomps
or
adc
shlb
bound
mov
scas
mov
fsubrs
xor
lret
fwait
dec
inc
lret
f2xm1
cmpsb
fsts
std
push
mov
xchg
int
movsb
stc
mov
cmp
jae
mov
cmp
mov
call
push
mov
xchg
ljmp
push
lcall
mov
pop
orb
pop
mov
adc
mov
lcall
cmpsb
arpl
mov
mov
mov
push
xor
dec
jle
xchg
in
mov
icebp
lods
repnz
test
push
push
insl
mov
popa
push
adc
cmp
push
push
mov
movsb
pusha
loop
dec
mov
xor
mov
lret
cmc
imul
xor
scas
ds
or
dec
jb
test
test
or
push
or
push
rcll
iret
rcrb
push
jg
dec
mov
call
loope
sbb
stc
push
xorl
lret
jge
mov
pop
aaa
mov
je
shlb
push
sub
lds
and
out
scas
xor
sti
push
dec
gs
xor
stos
popf
lods
insl
orl
xor
mov
in
gs
lcall
popa
in
mov
sub
outsl
ljmp
lds
stos
mov
movsl
lcall
cmp
xchg
scas
sbb
adc
repnz
mov
pop
jnp
add
push
adc
mov
fistpll
enter
sbb
testl
enter
inc
insl
sub
pusha
or
stos
adc
or
pop
lcall
sbb
xor
push
ja
repz
jns
mov
sub
sub
in
inc
mov
jl
mov
inc
mov
je
sbb
lods
adc
out
aad
sbb
mov
and
mov
daa
inc
inc
shrb
mov
lods
jecxz
sub
pop
imul
jo
dec
and
cmp
xchg
rclb
les
xor
lods
pandn
push
adc
bound
mov
push
sbb
push
push
add
jecxz
fucom
js
mov
xor
and
lock
fdiv
shrl
lahf
lcall
add
bound
fs
jo
fidivl
fisubs
xchg
mov
scas
push
cwtl
mov
push
jnp
push
orl
sub
js
cli
hlt
adc
mov
xor
jb
jge
adc
out
fbld
rcll
cltd
sub
sub
sub
push
test
mov
and
pusha
js
or
out
test
mov
out
cmp
push
dec
movsb
cvtdq2ps
xchg
scas
mov
sub
mov
push
mov
jp
ljmp
mov
sub
mov
loop
gs
mov
sbb
xchg
fwait
js
movsb
mov
mov
push
xchg
in
iret
mov
sti
je
lock
adc
or
pop
stc
inc
outsb
mov
fisttpll
int3
jnp
icebp
test
in
pusha
push
xchg
sbb
daa
sbb
or
loope
rol
jmp
jnp
stc
mov
fcomps
imul
push
in
push
sahf
pop
lahf
cs
aad
rcl
mov
icebp
sar
inc
jb
aaa
es
jp
in
int3
xor
scas
lods
mov
pusha
mov
sub
adcl
jne
lods
shll
add
or
push
addr16
sbb
add
das
in
pop
pushf
jns
out
sbb
jmp
test
popf
mov
popf
aad
pusha
test
cltd
cpuid
add
je
fcoms
outsb
fnstenv
xchg
ret
hlt
ds
rcr
pop
jl
xchg
or
test
cmp
bound
daa
cs
xor
mov
int3
mov
mov
ret
out
mov
mov
sub
ss
mov
in
xor
mov
cmp
and
incb
inc
mov
pop
inc
or
cltd
inc
xchg
add
int3
mov
sub
aaa
xor
lods
ret
int
loope
xchg
pop
clc
push
xchg
mov
inc
repz
loopne
inc
loope
xor
into
fadds
add
jge
std
loope
sbb
imul
aaa
and
or
paddusb
push
jb
or
les
mov
dec
sbbl
mov
sub
test
sbb
xchg
xor
jbe
jns
mov
movd
mov
cmp
add
mov
icebp
stc
nop
add
xchg
movsb
outsl
lahf
jns
or
ficoml
cmpsb
stos
mov
sbb
mov
xor
std
jae
sub
bound
pusha
daa
xorb
or
loope
mov
dec
mov
mov
nop
mov
pop
lods
xchg
addr16
mov
divl
popa
pusha
out
les
mov
pop
mov
xor
dec
mov
pop
push
and
sub
inc
loope
neg
mov
mov
sub
mov
or
adc
cs
cmp
mov
jbe
push
cmpsb
push
jge
out
mov
imul
fimull
adc
mov
dec
ss
cmpsb
loopne
jecxz
xchg
mov
mov
imul
stos
call
hlt
mov
movsb
in
hlt
into
mov
shr
pusha
sbb
or
das
lods
sbb
test
shr
jge
sub
addb
inc
cmp
loopne
dec
fsubr
in
scas
fldcw
fldcw
push
mov
add
jge
nop
sub
or
aaa
push
sub
dec
stos
pop
test
ret
cmp
fsubl
or
mov
inc
inc
ljmp
in
pop
jbe
dec
pusha
mov
and
pusha
scas
mov
jb
sbb
mov
jne
and
cmp
pop
push
sub
pop
dec
mov
daa
push
sbb
lret
add
dec
es
loope
mov
push
push
shlb
stos
fildl
lea
iret
scas
add
mov
or
repz
mov
ds
in
lods
sti
sbb
dec
test
dec
loope
shll
jbe
pop
out
inc
and
and
push
lds
pusha
sub
sub
jmp
call
mov
sub
xchg
add
jbe
sub
data16
ret
dec
mov
subl
or
or
cmpsb
push
and
inc
sbb
jp
into
xor
inc
push
scas
fs
cmovge
pop
adc
push
stos
mov
shrl
or
loope
sub
jb
jmp
mov
xchg
insl
sub
clc
xchg
jp
inc
movsb
jge
pop
cmp
mov
sahf
inc
mov
or
adc
leave
stos
mov
fs
push
mulb
cmp
fldcw
pop
sub
inc
loopne,pn
fcoms
into
test
push
test
sbb
sub
cmpsl
stos
jp
andb
xchg
cmp
lcall
and
dec
pusha
mov
stos
cmp
aam
mov
pusha
push
push
push
dec
insl
in
ds
xlat
push
popf
imul
call
lds
and
dec
fcoml
test
ds
mov
push
insb
idivl
push
cmpsb
xor
rcrb
xor
aaa
dec
inc
out
mov
insl
icebp
mov
mov
xchg
and
add
mov
iret
mov
out
jns
ds
cmpsb
movsl
sub
cli
xchg
mov
sub
js
adc
scas
outsb
mov
xchg
dec
xchg
push
push
lods
xchg
sbb
movsb
push
jg
test
adc
mov
sub
je
push
jne
push
adc
out
sub
lcall
push
sub
or
adc
mov
imul
or
rorl
addb
jmp
das
push
out
dec
pop
xorl
jns
mov
inc
push
ja
mov
mov
test
movsb
push
enter
or
jle
sbb
cmpsl
ja
add
lret
popf
test
xchg
mov
int3
ds
ss
cmpsb
es
sbb
mov
cmp
fsubr
outsl
xor
shl
mov
stos
sbb
add
adc
or
data16
adc
imul
hlt
int3
icebp
decl
jg
enter
adc
mov
lea
int
insl
jmp
scas
mov
xor
push
enter
cld
mov
fcmovnbe
jns
cs
lods
adc
jl
test
pushf
psllq
jle
iret
push
mov
dec
std
rorl
aaa
iret
mov
inc
decb
adc
pusha
dec
sub
movsl
push
cmp
in
adcb
add
stc
dec
push
xorl
xchg
mov
and
mov
xor
out
jns
xchg
loopne
xchg
mov
sub
mov
sub
dec
or
jbe
movsb
cld
xor
test
pop
sub
rclb
fstpl
nop
pop
test
sub
add
mov
ljmp
or
pusha
lea
push
imul
mov
lods
iret
pop
leave
stos
into
lea
lods
pop
sbb
fsubrs
sti
sub
je
sbb
icebp
in
repz
loope
jecxz
scas
pushf
loope
fcoms
cmp
xchg
inc
xor
lods
ljmp
subl
xor
daa
subb
xchg
cmp
ret
pushf
sub
adc
push
mov
scas
pusha
inc
mov
sub
pop
mov
movsl
lret
xchg
fadds
mov
xchg
jb
lods
add
stc
pop
fld
xchg
cs
jns
insb
lods
loop
shll
cmp
jnp
inc
lds
es
xor
sub
sub
lods
mov
dec
out
sbb
fidivs
xchg
mov
js
das
mov
jno
mov
subb
or
outsb
pop
or
jne
loope
jae
mov
inc
jecxz
loope
sbb
stos
fs
cmpsl
adc
jle
daa
and
outsb
mov
xor
xchg
nop
pop
jb
xchg
les
ljmp
xchg
stos
in
adc
lret
mov
adc
fists
negl
cs
movsb
repnz
mov
js
mov
or
mov
xor
imul
pop
sub
inc
lods
rolb
cmp
out
int
xor
outsb
mov
mov
xor
je
inc
mov
mov
push
jecxz
fdivp
shrl
mov
data16
cmp
lea
mov
mov
ret
bound
cs
in
xor
nop
push
ljmp
lea
lock
hlt
in
and
in
clc
push
jb
jl
pop
push
dec
dec
outsl
mov
daa
scas
pop
ret
push
stos
inc
addr16
scas
push
xor
jae
call
outsl
sbb
xchg
pop
movsb
sbbl
fisubrs
mov
movsb
into
data16
push
push
push
movsb
add
push
and
stc
lea
out
cmp
lods
adc
test
add
repz
adc
cmp
out
or
xor
mov
sub
xchg
inc
and
jne
in
fdivl
aaa
cld
lods
jmp
push
cwtl
sub
pop
mov
cwtl
test
aas
mov
jbe
mov
push
popf
sahf
add
xchg
jne
cwtl
dec
repz
sub
mov
lret
xor
addr16
arpl
or
xor
fildl
icebp
arpl
cld
cmpsb
and
dec
lea
mov
or
adc
mov
das
dec
hlt
xchg
inc
pushf
ficomps
xchg
push
fcompl
mov
or
les
and
xor
addb
push
fdivr
xorb
loopne
inc
push
stc
push
add
xchg
mov
cmpsb
mov
stos
jle
fs
dec
inc
jno
stos
stos
mov
stos
jp
cmp
cmpl
lods
insb
add
lcall
and
sub
adc
ljmp
push
cmpsb
adc
push
scas
add
lcall
aas
pusha
stos
sub
cld
jb
das
and
pop
sbb
or
xchg
lret
cmp
insb
or
sbb
adc
sbb
dec
adc
pop
sub
rcr
xchg
inc
jns
xor
dec
sub
or
mov
sbb
inc
xchg
xor
pushf
add
mov
add
sub
lock
je
lret
stos
push
jns
xor
rclb
enter
repz
pushf
scas
xchg
lock
aas
mov
xor
jno
ret
sbb
cmp
adc
add
add
pop
lea
fcmovu
lods
push
call
loop
movsb
dec
imul
daa
pushf
shrl
stc
jno
insl
inc
adc
mov
lcall
in
bound
dec
stc
out
jge
mov
xor
sub
jns
fdiv
add
pusha
outsb
or
mov
sbb
int3
mov
jmp
ds
stos
mov
addr16
inc
jl
mov
out
mov
push
mov
mov
movsb
cli
mov
sub
sub
xor
add
jbe
lcall
xor
pop
jmp
in
sub
iret
pusha
and
mov
in
push
xor
xchg
daa
xor
pop
pushf
mov
inc
mov
sub
dec
xchg
lea
movsb
jecxz
fmull
adc
pop
push
mov
test
push
sarb
outsb
cmp
aad
adc
inc
movsb
inc
jecxz
cmp
insl
enter
gs
mov
es
rolb
lea
pop
jo
mov
test
mov
jge
idivb
nop
enter
sub
addb
nop
lods
add
pop
call
jo
mov
mov
icebp
jb
fsubrl
popa
fcomps
rorl
mov
inc
insl
or
xor
jmp
iret
or
dec
mov
adc
inc
mov
jbe
add
xlat
daa
push
outsl
or
and
lret
dec
pop
mov
imul
mov
push
ja
sahf
sti
cmp
adc
mov
fisubs
lahf
xchg
sbb
mov
dec
or
repz
push
roll
andb
jp
push
fidivs
shrl
arpl
aaa
xchg
lcall
sahf
cmpsl
xorb
call
xor
repz
bound
pop
sub
cmc
jp
sub
outsb
lcall
test
mov
xchg
out
shll
pop
mov
pop
int3
lods
loope
lret
iret
xchg
pop
mov
sbb
push
out
fsts
xor
cs
or
fwait
cltd
into
out
add
mov
mov
insb
call
add
pop
xchg
xor
sub
movsb
adc
dec
mov
test
mov
and
stc
in
mov
pop
dec
jge
popf
adc
sub
jmp
movsb
outsl
adc
fildl
icebp
push
imul
lds
cmp
mov
mov
pop
xchg
mov
pop
stos
or
pop
mov
test
rol
mov
xor
sti
pusha
mov
mov
push
jbe
fisubrl
lods
les
xchg
mov
hlt
sahf
call
sbb
pop
stos
push
mov
inc
dec
xor
cmp
mov
mov
sbb
fwait
jns
mov
or
ljmp
fwait
mov
mov
mov
mov
inc
and
data16
jns
xor
movsb
xlat
push
jge
lods
pop
jge
bound
sub
jo
mov
xor
mov
fcompp
insb
xchg
sbb
leave
xor
cmp
lods
and
cmpsl
jp
mov
sub
aaa
cld
jns
dec
call
add
repz
cmp
ja
arpl
jns
pop
insl
cmp
negb
rcr
inc
daa
sbb
aad
pop
cmp
inc
mov
imul
or
orb
sbbb
adc
add
mov
sar
dec
push
cmp
loop
fadd
call
nop
and
rorb
xor
adc
out
subl
ret
fcom
or
push
movsb
mov
dec
xlat
mov
push
jb
mov
fcoml
dec
sbb
repz
movsb
mov
or
dec
xchg
outsl
xor
addl
lcall
pop
stos
call
sub
scas
mov
jae
jae
inc
and
inc
sbb
sub
push
imul
mov
sub
xchg
inc
enter
mov
sub
push
jno
out
es
add
fsub
cwtl
les
mov
cmc
ja
inc
xchg
data16
lods
pop
ret
xchg
scas
push
xlat
sbb
in
push
dec
adc
imul
aas
ja
cmpsl
jno
xchg
cmp
lcall
mov
xchg
sub
and
and
push
mov
dec
mov
daa
pop
loope
sbb
shlb
inc
movsb
push
xor
inc
xchg
hlt
sbb
pop
push
popa
aaa
adc
pop
adc
mov
inc
test
sub
and
ret
or
dec
fwait
mov
addr16
lods
jge
lds
xor
or
or
shr
scas
leave
mov
pushf
jbe
sub
mov
mov
mov
inc
inc
adc
subl
or
movsb
jb
pop
push
mov
xor
xchg
mov
xchg
pop
test
iret
jns
ffreep
cmp
jmp
in
jnp
movl
pop
int
push
div
jge
mov
sub
clc
xchg
cmpsl
loope
in
mov
jle
mov
iret
aad
push
xchg
repz
jae
dec
rorb
jae
ss
lcall
jnp
cld
xor
xor
dec
decl
jo
adc
dec
pusha
mov
xchg
cmp
ficoms
andb
push
xor
jg
xor
push
lcall
xchg
sti
and
test
ljmp
push
sub
insl
mov
pop
xchg
push
mov
ds
decl
jmp
pusha
push
jecxz
dec
jmp
mov
movsl
sbb
xor
rcrb
or
mov
dec
jne
mov
adc
or
and
xchg
mov
arpl
int
les
cli
jb
cmp
pop
adcl
mov
mov
es
iret
aad
cld
hlt
jb
ljmp
cmpsl
pushf
daa
xor
ret
mov
movsb
push
insb
lret
push
sub
sbb
mov
ds
xor
fwait
cli
shr
adc
adc
lock
push
xchg
pop
sub
in
es
sub
arpl
dec
adc
stc
mov
mov
push
mov
lods
aam
dec
mov
popa
cwtl
xchg
mov
fcmovu
imul
mov
movsb
leave
or
or
int3
clc
jle
je
sbbl
aas
push
add
fisubrs
mov
lods
std
or
cmpsl
out
lahf
jp
movsb
pop
mov
sti
enter
sub
or
cli
in
fbld
mov
outsl
fwait
jmp
inc
dec
adc
jmp
movsb
pop
into
and
mov
xchg
cmp
lods
lock
daa
pop
dec
adc
dec
addr16
jle
in
jne
cltd
icebp
icebp
xor
push
push
push
fwait
out
push
mov
test
andb
push
cmpsb
push
loop
std
das
in
movsb
pusha
adc
and
sahf
push
les
sbb
insl
add
fwait
shr
lret
dec
mov
out
xor
clc
scas
sub
insl
call
lret
mov
jae
mov
add
mov
pop
icebp
xchg
gs
andb
stos
das
popf
mov
xchg
out
outsb
push
inc
inc
aad
push
in
pop
stos
jbe
push
lods
xor
pop
mov
movsb
pop
repnz
icebp
lods
rcrb
mov
ret
sbb
andl
es
cmpsl
adc
jle
mov
in
sub
jne
xchg
arpl
push
testl
inc
divl
imul
test
xor
add
incl
mov
mov
arpl
shll
sub
jne
push
and
xchg
rorb
sub
pop
xchg
mov
call
lcall
addr16
adc
sub
fstpt
mov
pop
fidivl
pop
scas
push
inc
xchg
fstps
rorl
mov
hlt
stos
ljmp
inc
pusha
jl
gs
outsb
lods
push
das
lahf
sub
sbb
sub
mov
pop
pop
xor
dec
ret
ljmp
push
cmpsb
jge
xchg
sub
cmp
cwtl
sub
cli
pop
sbb
pop
sarl
sarl
stos
imul
jno
ds
xchg
mov
loope
inc
ret
mov
cmpsb
mov
push
and
or
inc
cmp
movsl
mov
or
mov
test
xor
cmp
jl
inc
jmp
pop
xchg
pop
repz
loop
popa
outsl
rcrb
scas
adc
push
add
stos
in
dec
aaa
push
mov
cmpsb
ficoms
adc
ja
xor
adc
ret
push
xchg
pop
add
adc
js
sbbb
in
dec
push
rol
push
xorb
stos
adc
jp
lret
pop
pop
mov
fisubrl
jnp
icebp
aas
gs
inc
cld
add
cltd
push
jl
scas
lock
inc
sbb
dec
jecxz
test
jae
cmpsb
iret
aad
dec
pop
adc
arpl
jns
incb
xchg
cmpsl
ficomps
imul
mov
cwtl
dec
pusha
sbb
and
jbe
and
dec
cmc
push
sub
imul
mov
adc
push
mov
sti
hlt
lods
mov
fnstenv
add
inc
mov
xchg
push
add
ljmp
sub
inc
adc
add
cmovl
fnstenv
fsts
pushl
clc
pop
cmp
insb
cmpsl
dec
fldcw
push
lcall
or
xchg
insb
ja
call
scas
adc
sub
data16
insb
aaa
push
cli
sbb
lcall
popf
ds
sbb
or
fdivrl
out
sbb
fadd
push
scas
or
mov
stos
xor
out
mov
call
insb
adc
ss
insl
movsb
jmp
addb
mov
jno
xchg
xor
fcomi
fisubl
jg
fwait
adc
jns
mov
shrl
xchg
insl
or
pop
test
cmp
or
rclb
mov
xor
xlat
jmp
mov
outsl
negl
fcom
sbb
xor
bound
dec
sbb
out
fisubs
pop
mov
aam
and
inc
push
mov
mov
fisubs
sub
mov
and
push
dec
mov
and
pop
aas
xorl
fs
clc
sub
jb
push
icebp
cmp
xor
mov
cmp
adc
mov
mov
push
stos
loop
hlt
xchg
pop
or
ljmp
or
outsb
xor
in
inc
lods
mov
inc
mov
push
mov
push
pushf
ret
pop
int
mov
adc
xchg
or
and
push
mov
mov
jl
mov
cltd
insb
shrb
andb
repz
shll
xor
jae
pop
loopne
xor
dec
aam
hlt
adc
movsb
mov
pop
loopne
cmp
adc
push
pop
jb
icebp
shll
inc
mov
mov
ljmp
mov
inc
sub
ret
cmp
xchg
xchg
mov
js
dec
xor
fstl
push
mov
mov
sti
dec
outsb
xchg
enter
mov
dec
insw
and
dec
ffreep
ficoms
cmpsl
mov
jno
mov
cli
and
cld
les
cmc
adc
jno
je
mov
iret
pop
mov
jb
add
push
xor
sub
sub
inc
or
cmpb
das
jl
es
cltd
inc
pop
mov
inc
sbb
sub
pop
jle
sub
fisttpl
mov
fistpll
jle
mov
insl
mov
shlb
aad
ja
addr16
test
mov
add
mov
dec
push
sbb
push
xchg
and
stos
lods
xor
inc
and
jl
sahf
inc
fcompl
push
sbb
fidivl
mov
pop
push
dec
sub
fldl2t
mov
movsb
jae
jb
mov
lods
mov
lock
inc
cmc
mov
or
scas
pusha
push
cli
cmp
adc
mov
rcll
jge
mov
dec
push
mov
dec
jb
and
cmp
int3
test
cmp
fwait
mov
push
mov
dec
inc
dec
add
sbb
in
movsl
shlb
mov
cmpsl
pushl
ficompl
mov
sub
and
pop
les
loope
xor
xlat
mov
dec
adc
xchg
int3
inc
mov
cli
ss
and
popa
push
fsts
ret
add
jp
mov
insl
lret
loope
inc
fsubs
mov
xchg
push
dec
inc
jb
push
mull
inc
xor
pop
dec
rep
jge
rorl
xchg
ficoms
sub
xor
bound
jae
mov
pop
xor
sub
icebp
subb
lock
les
repz
pop
rcll
cmp
or
pusha
in
fdivrs
in
push
jns
in
or
xorb
inc
pop
test
sbb
aad
stc
pop
mov
aas
movsb
jno
call
cmc
fisubs
jmp
movsl
push
lock
or
ja
adc
call
pushf
out
inc
push
addr16
jo
dec
repz
bound
dec
sub
cmp
dec
sub
inc
roll
lret
stc
mov
call
sub
mov
mov
jge
mov
mov
int
cltd
pusha
mov
push
or
adc
shll
xor
hlt
lods
push
shl
movsb
xlat
inc
int3
enter
push
test
xchg
sbb
sbb
mov
lahf
dec
sub
aaa
push
push
cld
es
ret
out
stc
xchg
push
mov
pop
outsl
jg
xchg
or
mov
ss
mov
push
mov
push
incb
push
mov
pslld
jno
jb
es
sbb
jmp
push
xchg
xchg
sbb
sub
push
js
bound
mov
push
decb
cmc
add
aam
movsb
les
cmp
adc
shl
sub
adc
outsl
xor
lret
roll
mov
in
andl
out
adc
push
mov
pop
jns
daa
mull
clc
in
sbb
cwtl
repnz
mov
cmc
jnp
fisubl
out
mov
pop
xchg
addr16
sub
out
push
mov
stc
adc
cmp
in
nop
bound
xor
fisttps
adc
mov
gs
mov
push
adc
arpl
scas
and
sarl
or
sbb
hlt
sahf
pop
inc
pusha
mov
int3
xchg
pop
aam
dec
cmp
push
loop
das
pop
mov
lods
lret
aam
test
bound
push
fmuls
mov
sub
sbb
decb
push
mov
ret
push
dec
call
mov
mov
add
adc
and
mul
mov
imul
cmc
subl
rorb
xchg
push
cmp
or
sarl
inc
adc
add
js
movsb
loope
lret
bound
outsl
movsb
push
mov
sbb
mov
je
ret
insl
add
cmp
jbe
xrelease
popa
push
inc
jge
inc
push
fs
call
shrl
inc
mov
mov
in
pushf
dec
cmp
xchg
mov
xor
bound
ret
in
in
mov
ss
ljmp
lods
repnz
jb
pop
cmp
imulb
adc
xor
scas
outsl
mov
loop
push
test
inc
outsl
lods
cld
notb
arpl
in
inc
mov
into
fsts
mov
cmpsb
cmp
mov
jne
xchg
test
sbb
xor
testb
sub
jnp
add
dec
inc
jl
add
push
incl
jo
stc
cs
and
mov
outsb
sub
pop
ret
pop
mov
push
and
loope
adc
and
movsb
pop
leave
lea
nop
adc
bound
xchg
test
xor
into
mov
xor
mov
outsl
fst
pop
mov
lahf
jge
jg
xchg
pop
pop
mov
iret
aam
out
scas
xchg
adc
cld
or
ljmp
insb
popf
fsubrp
xor
push
xchg
mov
cmp
cmpsl
xchg
mov
popf
arpl
mov
sbb
cltd
fistpl
stc
outsl
test
xor
insb
addb
adc
testb
sub
test
ja
and
pop
mov
das
cs
inc
call
mov
out
pop
mov
jb
daa
clc
or
cmp
mov
inc
cwtl
adcb
notl
sbb
cmp
lahf
and
repnz
dec
fdivp
idivl
mov
push
cmp
mov
pusha
mov
mov
test
test
adc
mov
jecxz
aaa
in
sub
mov
jb
lret
ret
and
in
cli
pusha
sub
jg
push
and
out
mov
filds
sub
mov
loope
mov
xor
rcr
lock
cmp
fcompl
ljmp
scas
xchg
jl
aas
sub
xchg
mov
test
lock
stos
js
sahf
sarl
dec
lret
pusha
lods
mov
dec
negb
jle
outsb
mov
push
shrb
outsb
dec
bound
stos
movsb
icebp
les
xchg
call
es
pop
xchg
lods
jl
sub
adc
mov
cmp
nopl
jge
insl
sub
mov
movsb
push
loope
xchg
jge
mov
out
orl
sbb
movsl
test
sbb
divl
add
ret
adc
mov
sub
outsl
repnz
jmp
mov
call
mov
add
test
nop
add
ret
xchg
call
les
adc
cmp
outsb
mov
scas
or
pop
jne
pusha
sub
out
adc
inc
outsb
push
push
push
jecxz
inc
notl
in
jnp
cli
sbb
ss
ds
jbe
iret
cmp
ss
fcomps
mov
mov
ljmp
orb
xor
pop
pop
cmp
shll
ret
jbe
jns
inc
or
daa
jb
testb
scas
cmpl
sahf
push
xchg
inc
adc
cmpsb
jg
rorb
adc
notl
sbb
jmp
mov
push
test
sbbb
frstor
pop
adc
jno
mov
add
rorb
sub
daa
xchg
mov
xor
aam
je
lea
mov
cmp
and
popf
cmpsl
ss
sub
sub
mov
sbb
jge
jl
int
push
xor
jo
adc
sub
es
sbb
mov
dec
loop
inc
mov
repz
call
sub
inc
stc
dec
stos
movsb
out
fwait
push
cltd
inc
xchg
mov
imul
jbe
or
scas
ret
loopne
mov
sbb
pop
out
xchg
push
mov
or
aad
das
cwtl
jecxz
cmpsl
scas
into
ds
mov
mov
addb
dec
repz
dec
ffree
or
mov
adc
jecxz
mov
mov
adc
cltd
push
mov
dec
in
jnp
pop
jecxz
cmp
int
bound
sbb
xchg
cmp
xchg
xchg
pop
sub
mov
fmuls
jle
scas
add
mov
stos
aam
xchg
mov
inc
adc
int3
mov
push
mov
bound
lea
roll
lock
xchg
jbe
mov
call
sub
pop
sub
add
push
dec
jg
lock
dec
mov
ss
push
leave
mov
out
mov
mov
lcall
or
push
ljmp
mov
fwait
outsb
repnz
xor
test
dec
cmp
js
lea
roll
bound
xchg
das
sub
mov
pop
ud1
imul
jb
inc
rol
stos
out
addr16
push
cmpsb
jge
cmpsb
mov
ja
dec
fildl
movsb
sahf
adc
jo
clc
ret
fldt
mov
pop
daa
push
push
cmpsb
mov
in
pop
mov
movsl
xchg
add
sbb
adc
and
mul
jbe
test
xorl
inc
sub
fs
fdivrp
pop
add
imul
imul
cmp
arpl
xchg
jmp
sbb
sub
cmc
xlat
cmpsb
xor
add
or
add
lds
fs
fcmovne
xor
inc
pop
cli
mov
add
loope
xchg
sahf
dec
xchg
pop
adc
clc
pop
cmp
leave
push
add
je
ret
mov
imul
or
xchg
movsb
mov
jb
add
mov
subl
popf
add
in
sbb
dec
sub
pop
pop
push
jns
pop
add
and
cwtl
stos
mov
inc
mov
dec
push
adc
scas
cmc
mov
lret
mov
orl
mov
dec
jns
push
mov
lcall
or
mov
sti
fsub
inc
xor
jne
inc
push
sbb
adc
sub
ret
xlat
lock
inc
jbe
dec
xor
cmp
dec
scas
sub
pop
pcmpgtw
sub
cmc
cmp
jg
push
lods
cmp
shl
mov
add
ljmp
test
shrb
int
rorl
subb
dec
push
sti
in
pop
xchg
dec
mov
lahf
popa
adc
leave
sub
fisubs
inc
lods
jae
clc
stos
mov
inc
pusha
adc
insl
xchg
jo
fsubs
mov
dec
ja
adc
mov
lahf
stos
and
aaa
subb
lods
fidivl
adc
sub
andl
rorl
addl
fadds
aad
mov
shlb
and
lock
aam
call
adc
pop
stos
mov
test
adc
pop
inc
adc
pusha
or
mov
popl
mov
cmp
pslld
insb
xor
xchg
push
sbb
repnz
sub
clc
sbb
out
lcall
leave
jp
dec
dec
std
mov
xchg
das
cli
movsl
push
pusha
pop
insl
adc
fistpl
inc
shrl
notb
sub
in
imul
push
cmpsb
sbbl
mov
mov
arpl
cwtl
mov
out
mov
cli
adc
push
xor
out
cwtl
push
mov
out
int3
inc
movsl
aad
or
mov
adc
aad
inc
in
out
add
mov
dec
push
jge,pn
sbb
mov
aas
mov
jmp
pusha
xchg
divb
jno
add
ffreep
icebp
ss
add
test
stos
mov
cmp
stos
roll
out
inc
push
mov
inc
in
lcall
add
sbb
xchg
xchg
dec
out
sub
lret
jae
pushf
stc
scas
mov
out
pusha
xchg
mov
nop
std
loopne
cmpsb
mov
mov
arpl
sti
in
adc
jg
adc
and
ds
stos
repz
shl
sbb
jb
lods
mov
in
jbe
sbb
mov
ss
lret
movsb
inc
push
addr16
stos
xchg
sbb
or
lods
pop
mov
lods
push
orl
gs
add
dec
adc
out
push
loope
mov
ss
es
mov
jmp
push
sub
jle
into
pop
jge
adc
dec
ljmp
dec
mov
xlat
jo
jle
loope
jge
sbb
or
scas
outsb
test
mov
arpl
push
or
jno
jb
push
cld
and
bound
ljmp
mov
or
pop
pop
leave
push
daa
xchg
stos
pusha
sub
cld
repz
loopne
mov
xchg
pop
cmc
sub
ljmp
pop
mov
xchg
and
xchg
adc
mov
sar
push
in
loopne
in
mov
popf
push
bound
add
movsb
or
pop
or
pop
pushf
nop
mov
cmp
mov
scas
insb
xchg
clc
sub
jle
mov
cs
xor
mov
lahf
inc
and
adc
xor
xchg
rolb
cmp
out
dec
push
inc
lds
mov
or
or
mov
and
jo
mov
push
enter
cld
pop
lcall
ss
inc
push
mov
sbbl
sbb
mov
dec
dec
sbb
je
add
jmp
jb
push
imul
lea
andl
xor
sbb
std
movsb
mov
lods
jl
add
test
mov
jo
cmpsl
sbb
loop
movsb
dec
stc
mov
inc
push
hlt
inc
xor
jmp
sbb
lcall
pop
mov
js
fistl
jae
movsb
jge
mov
outsb
lds
sub
mov
shlb
jno
lods
push
mov
shl
mov
lea
das
sub
in
in
in
inc
pop
movsb
nop
shll
test
fs
pusha
into
popa
into
lahf
add
test
adcl
shrl
adc
idivl
sbb
pop
movsb
xchg
push
stc
repnz
add
bound
jb
pcmpgtd
mov
scas
call
mov
jp
popf
aam
sbb
cli
push
mov
push
std
imul
clc
call
subl
mov
fcmovb
stos
mov
stos
popf
cld
push
enter
cs
pop
xlat
push
ljmp
mov
xchg
inc
movsb
flds
ret
roll
pop
jb
pop
dec
jp
sahf
jecxz
testb
pop
or
and
inc
pop
mov
or
jmp
cmpl
and
mov
pinsrw
std
sar
sahf
js
test
vsubps
mov
xorl
add
mov
xlat
jno
jmp
int
adc
pusha
sub
and
inc
out
loope
hlt
shrb
inc
push
ss
sti
lock
enter
scas
mov
jno
out
pushf
push
mov
pop
push
xlat
cmp
fsubl
push
push
xor
sbb
jnp
loop
pop
mov
insl
sbb
hlt
ficomps
dec
inc
jo
mov
and
lods
cmp
dec
adc
jo
jbe
sub
test
mov
sub
lods
inc
clc
mov
outsl
test
popa
les
arpl
repz
lea
loopne
mov
mov
stos
fs
data16
es
adc
mov
lcall
or
fcoms
shld
movsb
inc
js
mov
sub
xchg
out
loope
sbb
sub
lods
and
xor
jo
sub
decb
dec
mov
jne
xor
lods
ret
dec
inc
xor
push
insl
in
arpl
addr16
mov
pop
testb
xchg
aam
arpl
adc
cmp
loopne
neg
out
or
dec
mov
insb
cwtl
or
cmp
aaa
orl
loope
dec
dec
inc
inc
mov
inc
sub
mov
iret
xchg
push
fs
es
in
adc
mov
decb
mov
popa
shlb
jg
arpl
sub
sbb
xchg
iret
into
repnz
lret
mov
dec
lahf
and
push
dec
mov
inc
dec
adc
scas
ret
insl
jmp
je
stos
pop
xor
xchg
push
movsb
mov
xor
bound
add
test
and
mov
mov
cmpsb
cmp
sub
cmp
sub
inc
mov
test
push
dec
fcompl
call
fwait
cmp
pusha
insl
adc
imul
xchg
and
push
xor
mov
dec
ror
xor
sahf
mov
mov
test
clc
minps
sbb
xchg
jecxz
sub
mov
cmp
xchg
repz
cmp
cmp
add
cmp
xor
loop
shll
inc
push
mov
mov
repnz
fdivrs
pop
sti
add
faddl
adc
cmpsl
jb
fmul
daa
mov
sbb
mov
dec
mov
and
push
pushf
mov
mov
mov
mov
ret
ror
pop
stos
lods
mov
mov
inc
xchg
pop
enterw
ljmp
dec
or
mull
or
addb
insb
fcoml
adc
je
sbb
jb
lods
sub
or
cmp
xorl
dec
xchg
imul
jmp
stos
in
stos
jmp
andl
sbbl
shlb
bound
les
mov
mov
lcall
mov
add
mov
sbb
sar
fwait
rep
push
ds
daa
shrl
pop
dec
mov
adc
fpatan
int
mov
jae
push
dec
fdivrs
repz
loop
mov
pusha
pop
mov
ret
mov
jecxz
pop
mov
push
pop
repz
jbe
outsb
sbb
adc
andw
sbb
inc
mov
das
sub
xor
or
pop
mov
cmp
test
inc
mov
in
cmp
xor
iret
loope
add
xchg
or
movl
cmp
stos
movsl
dec
mov
adc
fst
leave
flds
mov
repnz
xlat
sbb
pushf
fnstsw
ds
leave
idivl
mov
xchg
jne
aad
sub
xor
cs
jb
push
addr16
mov
sub
inc
sbb
nop
cmc
cmp
mov
jmp
sbb
cmp
in
outsb
jo
xor
dec
cmp
fpatan
dec
mov
jnp
xchg
aaa
or
hlt
pop
gs
loop
aaa
adc
adc
or
sti
addl
mov
push
mov
mov
lock
fcomps
pop
movsl
andl
pop
push
inc
dec
jnp
imul
xor
sti
das
jge
lret
xchg
movsb
add
enter
sbb
mov
or
or
ror
idivl
xchg
jp
sbb
lods
adc
and
mov
inc
jecxz
fidivl
sub
mov
jecxz
cmp
ljmp
inc
leave
jmp
xor
adc
push
inc
subb
mov
xlat
test
jle
inc
adc
ljmp
sbb
inc
mov
dec
lds
movsb
dec
daa
jmp
mov
scas
bound
cli
jbe
or
adc
stc
in
icebp
cmp
lret
repz
mov
repnz
sbbb
mov
mov
inc
adc
push
sub
pop
sub
not
and
inc
xor
inc
sbb
jp
mov
inc
andb
push
mov
lcall
pop
in
pusha
ficomps
ret
mov
subl
popf
in
sbb
jns
jge
cli
xor
push
and
pop
xchg
cld
xor
dec
jno
cmp
inc
xchg
andl
subb
movsb
adc
mov
sbb
push
jge
aaa
movsl
mov
push
outsb
mov
das
push
mov
jle
push
andl
sahf
xor
add
mov
sub
xor
jbe
shl
sub
movsl
inc
dec
xor
jb
dec
xor
mov
fwait
jg
out
push
je
insb
frstor
out
cmp
imul
out
cli
test
sub
outsl
rcrl
or
mov
cmp
xlat
xchg
push
fcoml
dec
lods
ljmp
push
fimull
and
outsb
movsb
cli
jo
adc
xlat
dec
out
jnp
push
xor
call
ret
in
jnp
pop
xor
ljmp
lock
insb
jl
dec
sub
and
iret
xchg
jo
jge
sahf
xor
xchg
data16
mov
in
fisubl
mov
movsb
pop
jae
push
enter
xchg
fiadds
in
rorl
jb
lcall
in
popa
adc
sbb
dec
dec
inc
inc
dec
jge
fcoms
jb
test
pop
cmpsb
movsb
sub
mov
sbb
lret
call
rcll
fbstp
pop
add
sub
cmpb
xchg
subb
inc
jb
mov
into
xchg
bound
popa
sarl
or
cmp
lods
xor
or
xchg
mov
sarl
aad
cmp
dec
cmp
jno
add
into
fdivrs
mov
mov
mov
push
clc
push
mov
cmpsl
and
and
mov
push
cwtl
fwait
mov
push
shlb
cmc
sbb
mov
lahf
out
cmp
call
push
inc
enter
jne
leave
test
mov
into
dec
std
clc
and
aad
cmp
das
ds
sbb
push
cmp
outsb
imul
mov
jno
imul
adc
add
sub
test
std
pusha
sub
flds
addr16
cltd
jg
les
mov
jp
sub
mov
test
mov
mov
cmp
add
sbbb
lcall
sub
rcll
repz
lods
icebp
mov
mov
xchg
movsl
and
in
sub
adcb
mov
shll
add
hlt
adc
pop
ret
mov
fcomp
popa
lcall
xchg
notl
int
cs
sub
shrb
push
ret
rorl
push
aam
pop
std
xor
or
push
mov
jle
mov
mov
jmp
jns
pop
cs
cltd
mov
hlt
pop
push
mov
stos
pop
scas
les
inc
push
repz
jno
dec
pop
and
cmp
xor
mov
sbb
test
dec
mov
ja
out
movsb
pop
popf
loop
push
inc
mov
push
aad
sbb
add
inc
cmpl
adc
scas
add
mov
scas
xchg
push
pop
fdivp
movsb
lahf
bound
stos
mov
lock
mov
mov
nop
push
in
addr16
add
jbe
pop
pop
ja
inc
pop
movsb
add
int
push
iret
stos
adc
jmp
sub
xor
push
scas
xor
inc
repz
dec
jnp
mov
mov
add
add
mov
mov
push
loopne
int3
ret
push
push
mov
adc
jge
cld
pusha
insb
or
xchg
jle
movsb
addr16
sub
xor
xor
daa
fdivrs
popf
les
mov
xor
jae
and
sbb
fsubrl
mov
inc
or
out
adc
inc
or
cltd
adc
sub
cmpsl
jge
mov
add
divb
lods
fstl
loope
shll
sbb
cmp
bnd
sbb
clc
jbe
gs
and
outsl
inc
enter
push
mov
jl
pop
jg
push
cmc
adc
insb
je
jae
incl
cmp
insl
into
inc
pushf
dec
sub
hlt
jae
inc
mov
jns
sbbl
pusha
xor
mov
push
lock
fsubrl
xchg
faddl
mov
aam
xor
mov
jge
xchg
lret
jp
xchg
cmpsb
sbb
enter
fldt
mov
push
mov
and
fstps
hlt
sub
xorl
push
adc
push
add
shl
jg
clc
sbb
dec
js
das
test
imul
fs
rolb
movsb
add
les
enter
jns
outsl
dec
leave
in
mov
push
bound
pop
xor
cmp
scas
sub
xor
sub
icebp
pop
ret
mov
mov
out
push
cwtl
dec
movsb
inc
push
sti
pop
lcall
pusha
gs
je
adc
jno
mov
loope
adc
xchg
insb
stc
push
call
mov
iret
xchg
mov
lcall
mov
push
mov
xor
jnp
daa
loope
movsl
mov
nop
ljmp
push
iret
push
outsb
fwait
push
mov
mov
negl
sbb
or
jecxz
add
sbb
lods
jmp
in
sbb
pop
lahf
pop
imul
rep
xor
outsb
insb
fsubs
lret
cmpsb
sub
daa
loope
dec
cwtl
mov
sbb
das
sbb
orb
pop
cmp
cmpsl
mov
idivb
mov
ret
rol
inc
dec
scas
test
mov
add
imul
mov
xchg
popf
imul
or
mov
sub
push
fidivl
incb
jns
insb
cli
lds
int3
jne
mov
inc
and
popf
cltd
scas
mov
lds
adc
ret
js
ffreep
test
mov
jno
mov
pushl
pop
popf
rol
dec
sarb
test
or
pusha
in
xlat
jnp
loopne
sbb
push
sbb
push
out
lcall
mov
mov
lods
ja
lea
sub
dec
fcomps
push
fdivs
fsubs
push
adc
lret
mov
mov
loope
mov
lods
sbb
ficomps
stc
decb
sahf
xor
pop
and
sub
cs
jecxz
cli
je
or
orb
sub
inc
sbb
shrb
movsb
test
fdiv
mov
or
lock
scas
in
mov
add
dec
decb
fdivr
jge
fistps
or
xor
push
and
sti
stos
lock
sbb
xchg
ret
lock
testb
aam
xlat
js
call
pusha
xor
or
js
repz
mov
xchg
push
and
sti
das
nop
fstl
xchg
aas
mov
mov
addl
or
push
outsl
pushf
push
lahf
ja
stos
addr16
lret
lret
inc
jo
mov
adc
mov
movsb
fisubs
shl
lcall
fnstenv
dec
outsb
mov
mov
jle
stos
andb
mov
dec
stc
adc
dec
sub
insl
movsb
cmp
inc
ficoml
rcll
fnstcw
lret
and
shl
cmpb
lods
clc
loopne
sbb
dec
mov
xchg
aaa
cwtl
sub
pushf
mov
dec
repz
pop
mov
add
pop
dec
jp
outsl
push
ljmp
and
sbb
into
sub
mov
pop
test
xor
call
loope
mov
dec
push
dec
push
sbb
inc
inc
pop
xchg
mov
pop
mov
and
cltd
push
xchg
dec
pushf
dec
adc
xor
sbb
out
and
push
xchg
nop
xchg
stos
xorl
pop
shlb
dec
add
mov
pop
xlat
sbb
out
adc
push
lea
sub
out
xchg
mov
aas
cli
push
imul
mov
ljmp
test
dec
sub
add
in
stos
call
jecxz
in
and
mov
movsb
andl
xor
cltd
lcall
in
inc
test
leave
mov
dec
int
sbb
cmp
movsb
in
inc
cmp
call
loopne
mov
sub
stos
scas
xchg
in
push
fwait
dec
lods
and
dec
bts
mov
jb
cmp
cmp
leave
insb
adc
dec
and
cs
scas
stos
jb
adc
addl
pushf
mov
in
sar
shl
loopne
jno
mov
out
lods
jns
or
es
pop
push
mov
loop
mov
cmp
lock
push
daa
jge
push
push
enter
scas
cld
je
xorb
xor
lods
jno
adc
ss
cld
addb
rolb
xor
test
in
add
out
pop
pop
adc
in
cmp
or
push
out
cmpsl
inc
sbb
dec
rol
shlb
popf
mov
mov
sbb
mov
push
lds
aam
fcompl
or
sub
out
mov
sbb
sbb
sahf
rcll
xchg
sub
scas
fcmovb
sub
popa
cmp
pushf
out
jmp
xor
xchg
out
clc
fldcw
mov
out
dec
add
insl
cmp
stos
and
lcall
mov
dec
mov
push
jne
fld
scas
cmpl
jns
cmp
stos
mov
mov
pop
ret
pop
sub
outsl
ja
orb
daa
pop
aaa
roll
xchg
sub
sti
cs
jg
cmpsb
dec
cmp
mov
add
sub
push
sub
fimull
mov
fwait
or
cmp
loop
and
push
inc
mov
gs
sbb
mov
jae
outsl
call
mov
mov
adc
mov
sub
push
movsb
lcall
cmp
jbe
addr16
xor
add
jmp
jo
pusha
out
xor
iret
int
dec
mov
xor
mov
or
lahf
insb
pop
inc
hlt
inc
ljmp
scas
xchg
xchg
xor
jge
pushf
jno
adc
adcl
ljmp
or
mov
push
fsubl
pop
movsb
or
repz
ret
repz
inc
xorb
fwait
xor
dec
into
or
lea
in
cmp
adc
sub
jb
mov
cmc
xor
shl
push
sub
mov
cli
lret
lret
ret
mov
dec
cmpsl
jnp,pn
prefetcht1
xchg
pop
adc
sahf
inc
fdiv
mov
fdivr
fwait
inc
push
inc
das
rorl
jne
sub
mov
dec
push
xor
mov
dec
cltd
dec
fcmovb
ret
push
pop
lock
dec
jo
aam
stos
cmp
movsb
xor
mov
pop
ret
xor
xchg
ret
iret
lods
jb
xor
push
add
mov
iret
jmp
jns
or
repnz
and
jle
add
mov
or
push
scas
in
aas
ret
test
movsb
ds
into
sbb
nop
andl
mov
mov
mov
cmpsb
stos
loope
mov
stc
xor
sub
enter
push
pop
jle
push
icebp
or
sub
dec
clc
scas
stos
out
push
adc
aam
dec
lret
add
sbb
filds
cmp
movsb
into
xchg
cmp
aad
xchg
lds
push
or
js
out
sbb
push
pop
mov
and
xchg
inc
lock
pop
jno
sub
clc
xor
pop
int3
mov
stos
jns
pop
push
xchg
test
mov
in
mov
or
ja
inc
push
add
xchg
push
ljmp
mov
std
das
in
lcall
cmpsb
push
aad
je
xchg
rep
sub
lahf
dec
lret
fs
dec
aad
dec
sub
jb
bound
divb
popa
or
jns
adc
sub
mov
pop
adc
sub
xchg
cmpsl
lcall
sub
mov
enter
sbb
xor
mull
in
jno
out
sbb
mov
orb
push
pxor
cmpsb
adc
mov
movsb
push
cmc
ss
call
add
lret
or
lock
cmp
mov
dec
pop
add
mov
lods
pop
insb
outsl
aad
sbb
int
push
push
lods
add
les
ret
insb
or
or
mov
mov
push
stc
jl
inc
and
mov
loopne
inc
outsb
lea
iret
sbb
popf
mov
cmpsb
pop
inc
mov
xlat
test
and
mov
sub
inc
pop
jnp
lods
pusha
scas
mov
xor
push
out
add
es
push
sub
rcr
divb
and
sbb
in
inc
das
loope
ljmp
nop
mov
pop
pushf
ss
fs
inc
mov
push
cmp
lret
daa
pop
add
jg
daa
xchg
xor
bound
adc
movsb
cli
xchg
push
jb
lock
into
pop
push
stc
inc
insl
xor
lea
xchg
mov
mov
dec
pop
add
xchg
bound
jmp
scas
movsb
cmpsl
insb
cwtl
jae
jae
xchg
pop
fwait
int3
sbbl
or
adc
ficoms
cmp
ljmp
xor
jno
imul
and
push
loope
pop
fcmovb
fnstenv
movsb
sbb
mov
ljmp
dec
push
dec
mov
aam
lods
xchg
and
mov
lret
shlb
lods
xchg
mov
out
xor
lods
push
mov
je
enter
xor
xor
scas
clc
ljmp
xchg
add
jge
mov
push
shl
adc
push
sarb
cld
movsb
sbb
jl
imul
pop
sbb
iret
fsubrs
adc
push
cmc
push
pop
lock
sub
sbb
dec
mov
sarb
or
sub
addr16
mov
sub
cli
adc
push
movsb
and
int3
cmp
xchg
jns
pop
push
cmp
dec
fildl
scas
sbb
imul
inc
jmp
adc
and
xchg
into
icebp
loope
jae
dec
xorl
xor
lods
push
imul
lahf
adc
mov
push
jbe
push
add
mov
addr16
test
adc
mov
xor
inc
jns
stos
sahf
dec
inc
nop
mov
pop
push
pop
daa
pop
jmp
push
jmp
push
jb
adc
ficomps
sar
dec
mov
jmp
jae
iret
mov
cmp
sub
jp
mov
imul
gs
testb
add
fisubs
test
pop
lods
sbb
push
bound
sbb
bound
jmp
movsb
mov
mov
fwait
push
repz
iret
cld
push
mov
dec
jmp
adc
jb
mov
pop
mov
cs
push
cmpsl
mov
cmp
gs
sbb
add
inc
bound
cmpb
insl
cli
mov
xchg
sbb
or
jmp
add
leave
jno
mov
popa
clc
jbe
movsb
inc
leave
cmp
adc
inc
gs
xlat
ljmp
int3
iret
ret
aam
push
aad
lods
mov
pop
sub
mov
or
stos
mov
jb
fcompl
sbb
je
inc
mov
rorl
fidivl
mov
pop
andl
push
lods
and
inc
adc
daa
pusha
sahf
mov
std
inc
imul
enter
xor
dec
ss
sbb
sbb
xor
imul
movsl
cmp
mov
cmp
enter
dec
test
xor
lods
xor
es
aaa
inc
gs
pop
fidivs
pop
adc
sub
push
andb
test
jbe
dec
lret
ficoms
mov
mov
pop
mov
shrl
bound
mov
push
mov
mov
add
push
arpl
add
iret
pop
fsub
fnop
jmp
sti
aam
iret
mov
adc
sub
enter
sahf
in
repnz
pop
inc
jb
hlt
repz
cmp
shl
stos
jb
adc
push
icebp
dec
or
xchg
shrl
xchg
mov
scas
negl
add
add
inc
jb
push
mov
test
test
outsl
or
lods
or
sub
les
xor
popa
repz
jo
dec
cmp
insb
out
mov
or
sahf
and
mov
in
push
add
addl
dec
adc
jns,pt
ret
repz
jge
movsl
negb
mov
loop
sbb
int
setne
js
sbb
bndstx
mov
pushf
scas
sbb
add
dec
mov
cli
out
scas
or
in
jl
sarb
xor
insb
xchg
jno
dec
in
or
xor
jbe
cs
fs
lods
rcll
or
cmpsl
js
dec
clc
mov
test
scas
imul
adc
push
sub
push
mov
rcl
and
xchg
push
loopne
test
pop
push
out
jns
push
aaa
push
out
mov
mov
addr16
mov
push
push
sahf
push
cmc
xchg
sbb
imul
jb
inc
cwtl
pusha
popa
lcall
iret
rcrl
es
push
pop
fisubl
xor
out
mov
out
push
fists
mov
sbb
xchg
scas
push
lret
xor
mov
paddb
pop
les
jo
and
xor
lock
and
test
ret
loope
inc
scas
xor
mov
mov
lcall
into
jno
neg
pop
push
add
push
mov
in
lods
jns
mov
jb
ja
sub
pop
ret
jnp
sbbb
addr16
fistpl
push
lret
push
mov
cmp
push
push
addb
filds
lret
sbb
mov
testb
dec
dec
jb
fiadds
mov
outsb
lret
psllw
loopne
or
dec
out
xor
sub
sbb
pop
sahf
psllw
cmp
shlb
jae
mov
into
adc
sub
and
imul
inc
jle
sub
and
shll
repnz
mov
ds
mov
dec
test
int
mov
fnstenv
mov
dec
pusha
xor
adc
or
xchg
jmp
sub
aam
mov
nop
hlt
loopne
cld
or
inc
hlt
add
mov
jle
xchg
xor
pop
rclb
sbb
imul
push
movsl
sub
mov
pop
loopne
adc
xchg
mov
mov
mov
je
jmp
loopne
stos
pop
mov
stc
sub
inc
mov
inc
lods
push
dec
out
repnz
xor
stos
lods
ljmp
cs
mov
fwait
push
insl
shl
nop
sub
ficoml
cwtl
test
and
jns
arpl
movsb
insl
les
adc
adc
dec
pop
or
aas
dec
out
xchg
rorl
push
inc
imul
addr16
jno
in
stos
dec
sbb
subb
sbb
push
mov
out
scas
cmp
fmull
lcall
inc
or
lret
enter
jno
ljmp
push
jge
mov
jecxz
mov
jbe
xchg
and
xchg
inc
jl
clc
loop
lea
test
bound
ljmp
jl
dec
mov
push
mov
xchg
rcrb
lods
mov
add
cwtl
out
cli
push
je
xchg
jmp
lret
and
les
push
jne
std
add
mov
mov
sub
mov
mov
pop
into
pop
aam
int3
mov
lahf
xlat
test
out
aas
pusha
ljmp
movsb
fldt
mov
icebp
repnz
lods
xchg
fstps
rol
stos
daa
push
cmpl
clc
cs
ljmp
int3
sub
add
sub
in
shrb
mov
aas
popa
and
sub
cmp
mov
or
les
mov
mov
jae
xchg
iret
jne
cwtl
mov
stc
daa
pop
cli
xchg
in
sub
repz
inc
enter
pushf
fisubrl
js
lcall
arpl
in
xchg
adc
and
mov
xchg
stc
cmpsb
lods
scas
addb
mov
sub
addr16
loope
jns
xor
dec
inc
std
mov
sbb
jne
das
out
in
pop
aaa
insl
xchg
push
dec
pusha
mov
xchg
mov
movsl
adc
mov
mov
sub
sub
push
ja
adc
hlt
jg
mov
cmp
scas
mov
inc
fisttps
ss
cmc
pop
orb
and
movsb
dec
lock
lcall
inc
fs
aas
das
cmc
lahf
stos
push
clc
mov
lds
sbb
dec
mov
iret
sar
mov
cs
xchg
sub
ffree
push
out
das
push
sub
xchg
bound
insb
push
sub
xor
repnz
sahf
xchg
inc
mov
sbb
inc
lods
sbbl
js
or
sbb
cmc
dec
insl
lds
add
sbb
xor
cwtl
jns
leave
ljmp
inc
push
jbe
test
das
les
adc
ja
mov
sbb
lcall
xor
orb
clc
imul
jnp
push
push
sub
mov
out
cld
dec
xchg
call
sub
cld
mov
and
ret
pop
adc
or
ds
jo
or
dec
sub
mov
mov
mov
mov
jp
add
iret
jae
clc
push
xchg
xor
jmp
sbb
jmp
mov
and
mov
sbb
xchg
add
inc
adc
push
adc
lods
mov
add
xor
das
pop
adcl
mov
dec
jp
dec
clc
cmpsb
push
addb
adc
clc
mov
adc
lock
add
js
in
adc
jg
outsl
insb
std
es
or
jmp
stos
iret
inc
aaa
xor
jo
jp
sub
mov
nop
xchg
pushf
dec
or
test
shl
xor
cli
out
or
sbb
jmp
stos
int3
into
inc
sbb
leave
inc
sub
jbe
cld
sbb
ret
imull
push
insl
mov
call
cmpsb
add
cmc
out
bound
dec
add
fsubrl
lods
dec
push
loopne
cmpsl
stos
inc
fdivrp
xchg
nop
xor
jb
das
out
jns
loopne
repz
rcrb
jbe
pusha
cwtl
jp
sub
xlat
xchg
push
clc
lock
push
loopne
dec
mov
jecxz
cmp
mov
pop
inc
fcoms
out
xchg
out
addr16
cmp
pop
mov
mov
pop
ret
mov
push
flds
js
fs
adc
add
xchg
or
push
fidivl
mov
pusha
jle
and
lock
mov
call
movsb
or
hlt
add
dec
fnstenv
pop
sbb
adc
add
aam
adc
mov
push
jge
shll
inc
and
out
mov
adc
iret
jge
xlat
mov
mov
mov
xchg
jle
mov
or
mov
and
lcall
inc
add
sub
jns
inc
push
add
mov
cltd
fimuls
lahf
mov
in
xchg
test
aad
in
sbb
negb
mov
mov
push
mov
ljmp
dec
aas
ret
and
cmpsl
in
push
hlt
dec
mov
vmovapd
mov
xchg
sub
adc
dec
inc
sub
popf
jb
shrl
mov
outsb
mov
lea
cmp
hlt
ret
xchg
ret
cmp
xchg
sub
enter
test
lcall
cli
lods
xchg
or
pop
bound
push
xchg
dec
add
int3
or
mov
shll
xchg
jge
in
and
inc
adc
fistps
ss
pop
inc
sar
das
push
or
xchg
pop
insl
sub
iret
sub
fxch
test
cmp
dec
mov
pushf
push
fcomi
filds
sbb
je
push
xor
add
push
mov
das
mov
out
mov
adc
popf
test
dec
lods
push
jmp
lock
sbb
cmpsb
mov
pop
and
sub
decb
int3
jg
mov
mov
mov
jo
xchg
sbb
mov
mov
test
sub
xchg
xorb
outsb
inc
aam
cmp
jle
jne
aam
and
sub
mov
fldl
mov
jle
scas
xchg
add
xor
pop
add
stos
movsb
or
jno
pusha
lock
mov
sbb
xchg
stos
mov
cld
int3
imul
sbb
sahf
dec
cmc
aad
pusha
loope
pop
cld
dec
pop
xchg
jge
scas
pop
das
sarl
xchg
adc
push
xor
pop
pop
incl
call
mov
and
push
cmp
xor
lods
sahf
pop
xchg
outsl
adc
sbb
push
jbe
inc
aad
mov
inc
push
jo
or
or
add
pushf
add
lock
movsb
mov
aaa
mov
rcll
adc
xchg
popa
jb
push
push
adc
dec
movsb
mov
xchg
andl
aam
push
cs
adc
mov
push
push
outsb
cmp
mov
nop
sub
jbe
inc
cli
testl
sbb
inc
mov
ja
js
nop
inc
inc
cmpsl
gs
imul
aas
sahf
out
sub
imull
sub
xlat
jb
fimull
jae,pt
jle
dec
dec
sbb
jmp
div
pop
jns
lds
push
sbb
push
or
int
and
enter
addr16
leave
sbb
test
sub
ds
pop
outsb
xchg
sbb
pop
clc
mov
fiaddl
or
out
xor
push
or
dec
dec
jmp
shlb
push
addr16
scas
jge
nop
sub
daa
mov
movsb
inc
hlt
mov
add
xor
pusha
pusha
pop
scas
sbb
and
and
pop
xor
jg
xchg
inc
jmp
scas
mov
loope
das
aaa
pop
into
mov
jge
imul
mov
in
and
test
out
sbbl
mov
dec
sbb
scas
jbe
jp
adc
mov
repnz
pop
testl
jbe
push
push
sub
jmp
mov
mov
fs
or
mov
cs
add
jns
in
sub
ret
adc
outsl
xor
pop
cmp
ja
in
arpl
xchg
faddl
cld
xor
lods
push
shll
adc
cwtl
pop
add
ss
into
das
and
inc
cmpsl
cltd
aaa
push
repnz
sbb
sbb
xor
movsb
mov
cmpsb
sbb
sub
ret
mov
cmp
push
fdivrp
jmp
add
and
mov
fisttpl
and
push
mov
fsubs
mov
out
rolb
sbb
scas
jmp
das
pop
or
jle
pop
shlb
fucomi
stos
mov
mov
fidivrl
xor
bound
js
and
push
push
dec
lds
add
cs
lods
cmp
testb
adc
jle
fldcw
stos
iret
or
pop
inc
movsb
mov
mov
push
add
enter
xchg
mov
cmp
jg
scas
mov
adc
call
test
movsb
or
push
gs
mov
shll
xchg
lcall
inc
cmpsb
das
dec
out
in
mov
popf
add
inc
mov
shrl
jb
cmpsb
lret
outsl
mov
mov
cli
xchg
les
sti
in
testb
stos
adc
fsts
dec
cmp
mov
mov
or
xchg
mov
frndint
sub
xor
dec
pop
xchg
push
cli
lds
sub
sbb
push
sub
xchg
ret
add
push
inc
pop
cmpsb
pop
out
adc
sub
mov
mov
test
popf
push
mov
lret
sub
fwait
out
bound
or
add
mov
mov
movsb
out
insb
jle,pn
mov
sbb
inc
jae
outsl
test
sub
pop
mov
ds
movsl
outsb
pop
and
loope
lock
lcall
push
subb
or
xor
call
arpl
outsl
cmp
jns
cli
jge
in
in
fwait
xor
mov
repz
movsb
cld
add
and
cmpsl
popa
jbe
ss
les
push
jmp
mov
cld
add
enter
ja
outsb
outsb
pop
fwait
das
mov
cmpsl
pop
dec
jno,pt
lds
or
das
add
push
fsubrp
lcall
push
lds
fsubr
xor
bound
xor
ret
jnp
push
dec
xchg
mov
xlat
loop
inc
mov
cmp
insl
mov
hlt
sbb
jp
add
pop
jg
cmpsl
jge
hlt
lods
pop
std
jle
pop
ret
pop
fmuls
enter
movsl
fwait
jmp
push
movsb
mov
fsubl
sahf
push
and
lods
lods
or
insb
inc
cmp
negl
out
pop
shrl
iret
mov
add
mov
cltd
sub
outsb
sarb
hlt
mov
bound
test
and
mov
or
das
and
adc
mov
inc
or
out
iret
jno
stos
add
fimull
push
xor
enter
pop
pop
xchg
movsl
xor
sahf
or
mov
and
fcompp
pop
out
sbb
enter
adcb
cmpsb
pushf
sub
dec
mov
lods
pop
jecxz
jmp
cli
ljmp
pop
addr16
mov
sub
repz
ss
dec
les
repz
mov
lods
adc
cld
lahf
shrl
aaa
pop
cmc
or
and
xchg
push
loope
imul
and
mov
lods
mov
or
insb
iret
enter
mov
scas
cli
scas
cli
mov
dec
xor
jnp
cmp
ljmp
push
stc
add
push
sbb
and
lret
xchg
xchg
mov
scas
cwtl
fcompl
insl
or
dec
fbstp
mov
mov
cwtl
cs
push
mov
pop
jns
push
sub
fnstcw
ret
arpl
das
jbe
add
or
repnz
jno
lea
mov
lods
repnz
inc
int3
lods
in
jge
in
or
push
fisttpll
outsl
mov
add
clc
cmp
dec
push
fwait
stos
sub
sti
call
fwait
rorb
push
jne
xor
lods
adc
mov
sub
pusha
popa
sbb
ret
xor
push
mov
icebp
pop
mov
mov
out
mov
pop
shlb
cld
xor
loopne
out
mov
mov
mov
icebp
mov
test
ss
popa
in
leave
add
lret
adc
jno
adc
imul
pop
clc
mov
push
mov
mov
mov
lea
xor
mov
or
mov
idivl
decl
xor
repnz
std
ret
push
pop
mov
xor
sbbl
mov
dec
sbb
jecxz
jbe
add
lds
bound
push
lcall
inc
sub
rcll
jno
lcall
sub
rcr
mov
cmp
cltd
mov
inc
jo
sbb
or
aad
icebp
test
loopne
js
aam
mov
pop
cmpsb
inc
clc
icebp
mov
lock
das
fidivs
stos
mov
imul
xchg
insb
lcall
enter
or
sub
aam
fcoml
mov
or
add
shl
push
cmp
repz
pop
mov
jge
enter
ret
sarl
aad
jno
lcall
inc
sub
stc
push
sub
outsl
inc
sbb
ljmp
cld
test
jge
out
sub
paddw
add
jge
or
cmpsl
ret
push
aad
jl
sbb
push
rcll
add
push
aad
or
popa
ficompl
inc
mov
or
stos
add
shlw
or
fwait
sub
xchg
jl
push
or
stos
jge
xchg
ss
push
lods
xor
cmc
add
cmc
push
dec
cmp
in
pop
xchg
xchg
or
xchg
xchg
inc
mov
lods
stc
cld
int3
jge
push
addr16
dec
ljmp
mov
clc
popa
adc
repnz
adc
movsb
addl
test
xor
es
outsl
and
inc
push
inc
mov
push
push
mov
jmp
lods
hlt
xor
mov
push
pop
es
jno
sti
dec
jle
mov
pop
push
sar
or
loope
movsb
sbb
lcall
cmp
les
call
out
jge
sbb
sti
arpl
xor
daa
cmp
cmc
and
ret
xor
inc
push
add
repz
call
dec
or
push
mov
ja
int
push
jo
fwait
lcall
mov
lock
mov
pop
xlat
and
ljmp
lahf
loop
xchg
loop
orb
call
mov
popf
mov
inc
xor
imul
mov
ljmp
cli
shlb
dec
pop
sbb
shrb
add
push
or
jle
loope
movsb
and
aam
sbb
jmp
pop
fwait
push
mov
fs
add
clc
dec
lcall
cs
push
mov
mov
lret
dec
xor
mov
repnz
pop
push
stos
and
cmp
dec
iret
sub
loope
cli
mov
mov
mov
cmpsb
pop
test
xchg
dec
dec
xchg
out
push
sbb
push
push
lea
addr16
cltd
pop
push
mov
sbb
sbb
in
sahf
sub
cmp
adc
pop
mov
mov
mov
dec
orb
jbe
imul
imul
jmp
ja
sub
movsb
jge
and
imul
test
jb
pushf
inc
cmpsl
dec
shld
xchg
xchg
and
pop
dec
add
cmp
pop
mov
cmp
mov
lret
out
insb
mov
rol
adc
pop
jno
jno
rcrb
movsb
stos
jp
shrl
lret
mov
inc
mov
sub
sub
jp
cmpsl
jno
or
lret
and
push
mov
test
add
pop
rep
inc
xchg
and
aas
sti
sub
lds
push
mov
mov
mov
loopne
js
push
imul
mov
jle
sbb
mov
rol
xor
test
mov
sbb
jmp
iret
adc
arpl
fcomi
sbb
int
xchg
sub
repnz
roll
adc
daa
push
inc
mov
xchg
inc
cld
xchg
mov
mov
jns
and
and
xchg
bound
push
stos
mulb
sbb
stos
in
es
sub
xor
lahf
sub
mov
pop
testl
mov
jp
cli
ljmp
jb
bound
leave
ja
xchg
das
jbe
xor
aad
inc
cltd
mov
jns
fstpt
ss
out
adc
popl
cli
scas
movsb
pop
sahf
test
test
lret
cmc
clc
je
pop
xor
cs
lods
xor
xchg
and
fimuls
lods
mov
loope
mov
mov
mov
in
jbe
mov
push
dec
int
ja
pop
mov
out
and
or
mov
scas
mov
sub
popf
sub
xor
sub
dec
ret
xchg
push
mov
dec
mov
push
or
stos
fdivr
mov
rclb
mov
mov
jb
jge
fstps
mov
es
sbb
mov
push
adc
adc
xchg
mov
xor
mov
sub
movsl
sbb
test
xor
push
dec
movsl
fcom
pop
mov
gs
push
and
bound
cmpsl
data16
pop
ja
mov
pop
shlb
pop
adc
jns
shlb
cmp
jl
inc
lods
sbb
sbb
jg
lods
xchg
mov
pop
sbb
mov
and
pop
xchg
aad
stos
pop
dec
cmp
insl
pop
ret
lret
xor
cld
jbe
leave
push
mov
repz
xchg
cli
pop
into
xlat
leave
ss
sub
loop
dec
dec
scas
push
cmc
mov
lcall
adc
lret
or
mov
cmpsl
inc
subb
xor
xchg
test
add
jns
stos
add
sti
push
aas
icebp
clc
dec
jp
sbb
in
lock
jl
repnz
hlt
js
bound
es
mov
push
lret
cmp
mov
mov
pop
add
xchg
mov
mov
sub
mov
ja
bound
int3
stos
mov
fwait
or
fldcw
ljmp
dec
sub
ficomps
std
iret
fmuls
jns
mov
cmpsl
addr16
mov
mov
cmp
fsubrl
int
lret
inc
dec
dec
jnp
call
imul
push
repnz
je
cmp
mov
neg
jno
dec
cmc
inc
ds
hlt
dec
or
mov
xchg
inc
jb
mov
sarb
xor
repz
sbb
add
ds
mov
ljmp
cmpsb
divb
mov
lea
mov
sub
out
cmp
mov
out
xchg
nop
idivb
rcr
cld
lret
cwtl
outsb
lret
xorb
movsb
pop
push
cli
stos
cmp
ret
cli
push
mov
sub
add
and
movsl
and
adc
jg
push
pushf
mov
aam
repnz
cli
mov
repnz
xchg
sub
pop
push
mov
cmc
xor
sbb
sub
adc
das
sub
stos
xor
xchg
mov
test
push
adc
hlt
xchg
mov
adc
cmp
mov
std
inc
pop
mov
cmc
lahf
xor
mov
out
jmp
insl
lcall
cmp
xchg
cmp
mov
aad
repz
pop
loop
das
mov
iret
clc
loop
cmp
outsb
and
call
mov
adc
std
cmovns
pusha
lock
leave
stos
jle
xor
cli
aam
push
rolb
adc
int3
scas
cli
pop
lock
iret
inc
aad
mov
iret
xchg
ljmp
movsb
lea
adc
inc
je
xlat
loopne
pop
sub
add
movsl
pusha
aad
add
into
sub
je
mov
enter
and
lea
sbb
ficomps
bound
mov
cmpb
push
sbbb
mov
push
pop
push
les
into
arpl
push
out
shl
test
inc
mov
xor
pop
cmp
fld
mov
pop
iret
scas
test
addr16
stos
jecxz
test
imul
adc
icebp
iret
push
mov
xor
adc
push
cwtl
mov
ljmp
adc
cmp
push
outsb
mov
jbe
je
repz
inc
mov
and
addb
cmp
mov
scas
pop
inc
loope
jbe
or
inc
addr16
cmp
add
adc
mov
in
push
movsb
mov
xchg
cwtl
outsb
lock
out
lods
cmp
fmulp
and
insl
scas
mov
jb
cmp
pushf
mov
add
mov
jg
inc
inc
sub
cmp
jae
push
dec
movsb
xchg
jg
add
or
test
mov
sbb
add
push
cmp
xor
mov
pop
and
clc
xchg
lahf
imul
shlb
fidivs
call
push
enter
jbe
ficompl
lcall
mov
push
int
jle
mov
seta
cmp
in
insl
adc
push
fsubs
mov
adc
and
mov
dec
fbstp
fistpll
mov
sub
sbb
movsb
pop
sbb
mov
mov
sub
dec
fdivl
cmp
mov
push
scas
push
ss
sub
mov
jb
xchg
mov
orb
or
cmp
movsl
icebp
mov
stos
arpl
xlat
cmpsl
sahf
frstor
lcall
and
std
stos
sub
sbb
dec
inc
jbe
adc
movsb
lods
decl
push
addr16
enter
into
ja
ljmp
pop
xchg
mov
xor
mov
cmpsl
mov
mov
sub
sbb
mov
pop
cli
sub
stos
aas
in
sbb
enter
sub
jecxz
sbb
out
mov
in
xchg
xchg
mov
shll
xor
mov
cmc
dec
jae
bound
fs
jb
daa
and
jmp
add
mov
jb
cmp
daa
shlb
lock
stos
adc
jnp
movsb
xchg
ss
lods
ret
sbb
mov
xor
add
subl
test
lock
push
mov
jg
push
aad
jge
pop
pusha
pop
movsb
xchg
ljmp
inc
lcall
xor
push
mov
jb
repz
add
cli
inc
lea
arpl
push
iret
outsb
cwtl
push
mov
sbb
jecxz
xor
in
andl
pop
aad
rcrb
jmp
loope
pop
inc
xlat
movsb
pushf
fildl
or
ja
call
pop
mov
movsb
mov
int
push
jg
lods
movsb
jae
mov
inc
xchg
add
pop
out
inc
leave
loope
enter
cmpsb
ret
jp
or
push
dec
lahf
mov
lods
pop
ljmp
mov
mov
insb
add
cmp
mov
add
std
cmp
pusha
and
inc
push
std
ret
aaa
sbb
pop
and
mov
ror
add
stc
push
xor
loop
pop
mov
es
popf
arpl
test
enter
mov
imul
test
test
dec
ja
fsubrs
sub
mov
or
mov
arpl
xlat
stos
sub
dec
add
push
adc
cltd
and
xchg
mov
dec
movsb
adc
mov
repnz
lods
cmp
pop
add
add
call
jge
fstpt
dec
xchg
ficomps
add
and
inc
imul
dec
cmc
dec
mov
dec
loope
nop
insb
sub
mov
dec
mov
cld
xchg
pusha
popa
mov
aas
jmp
xor
or
dec
das
rcrl
out
xor
cli
divb
insb
in
xor
addl
mov
mov
xor
or
xor
aas
clc
mov
ret
pop
add
sahf
dec
mov
enter
adc
icebp
sub
loope
hlt
outsb
addr16
int3
push
sbbl
dec
stc
mov
mov
or
lock
inc
xchg
jg
push
test
les
fdivr
xor
iret
stos
pusha
dec
adc
pushf
cld
mov
mov
lock
div
addb
loope
inc
test
out
and
stc
jo
in
and
lods
push
xchg
loop
dec
pop
push
sahf
inc
call
fsubs
pop
mov
ror
pop
and
rol
add
mov
mov
push
out
lods
xchg
outsl
les
push
movsb
rcrb
stos
sub
mov
lcall
scas
call
flds
wbinvd
jne
les
fimuls
lods
loope
into
punpckhwd
xor
xlat
inc
pop
mov
sbb
out
in
in
push
fisttpl
xor
or
mov
sub
adc
movsb
mov
mov
xchg
stos
cmpsb
sub
adc
sub
sub
mov
xor
lea
mov
cld
or
clc
fs
outsl
call
jecxz
inc
scas
mov
lea
repz
sbb
cmp
mov
lahf
sbb
addr16
icebp
jmp
or
lods
daa
dec
push
adc
lock
xchg
ret
call
and
bound
outsb
jmp
push
cs
je
pop
sbb
lods
rolb
xchg
pxor
hlt
shlb
xor
ljmp
mov
mov
repnz
sub
pop
xchg
mov
or
sahf
pop
xchg
ja
jo
leave
lea
push
push
movsb
and
dec
dec
orl
leave
pop
inc
inc
lods
icebp
sub
adc
push
aaa
test
inc
mov
ss
addr16
xchg
dec
jg
xchg
mov
and
xchg
sub
xchg
orl
sbb
lock
pop
out
inc
rol
imul
repnz
ret
inc
mov
mov
dec
dec
je
pop
movsl
pop
lret
and
cmp
jb
sbb
cmpsl
jne
xor
insb
sub
popf
adc
pop
xchg
sahf
jle
or
int3
push
xor
jp
pop
popf
xor
loope
das
scas
or
daa
iret
aam
shll
iret
add
das
int3
xor
sub
sti
cmc
outsb
outsl
or
out
popf
sub
in
ret
jo
jne
imul
mov
xor
div
fildll
shl
inc
js
push
into
lds
movsb
imul
jle
add
pop
mov
sub
or
jbe
loope
mov
mov
fiaddl
mov
test
scas
insl
fcomps
add
jnp
int
mov
jo
lock
mov
repz
inc
test
enter
or
pop
movsb
pushf
ljmp
dec
bound
imul
inc
fcom
inc
mov
dec
pop
adc
roll
dec
inc
jle
dec
fists
lock
cmp
mov
lcall
and
cmc
movsl
data16
aaa
aad
test
mov
sahf
pop
inc
mov
mov
scas
and
int3
cltd
jae
or
aaa
or
nop
popw
pusha
cmp
leave
and
sub
mov
rorb
in
fidivrs
mov
int3
inc
movl
dec
fstpl
pop
divb
add
imul
inc
jo
nop
cmpl
call
shufps
mov
push
fcomps
nop
sub
mov
dec
loope
pop
and
pop
ficoml
adc
filds
jb
add
in
in
shll
cmp
mov
xchg
popa
xor
cmp
xchg
lock
les
test
push
xrelease
pop
arpl
lret
daa
xor
sub
xchg
jp
stos
sub
int
inc
iret
sbb
scas
add
mov
enter
icebp
pop
outsb
outsl
push
mov
cmpsl
out
jno,pn
cli
mov
pop
xchg
pop
aam
inc
aad
push
adc
scas
outsb
add
push
inc
jns
shl
fwait
cmpsl
mov
adc
data16
mov
dec
mov
ss
addr16
movsb
add
jb
ret
loopne
fidivs
dec
inc
adc
dec
daa
push
push
jo
mov
pop
inc
jo
mov
ja
lea
inc
aam
mov
cmp
ret
mov
jns
push
adc
das
push
outsb
xchg
mov
adc
xor
rorl
inc
sbb
rep
out
mov
movsb
test
push
mov
imul
push
clc
rclb
pusha
test
xchg
rclb
movsb
mov
ret
xor
rcll
push
into
or
pop
sbb
scas
xor
mov
arpl
sub
popa
loope
cli
cld
repz
in
arpl
mov
xchg
mov
frstor
loop
jae
jno
mov
sub
lea
gs
outsb
stc
aad
mov
inc
xchg
add
inc
test
add
pop
pop
sbb
push
hlt
mov
mov
sbb
pavgb
cmp
lret
jl
mov
lods
jno
mov
xor
pop
pushl
jno
or
shrb
js
mov
rcll
cmp
add
dec
cmp
movsb
lahf
jl
jl
or
outsb
rcr
pop
scas
jne
lds
sub
gs
pusha
jb
outsb
xor
push
xchg
mov
and
mov
sub
pop
or
mov
sub
sbb
pusha
push
adc
and
data16
or
arpl
push
inc
xchg
adc
add
dec
ss
pop
inc
xor
sub
mov
mov
aam
inc
cltd
iret
add
jb
arpl
pop
mov
scas
jb
mov
sbb
andl
lahf
fisttpl
push
xor
xor
jb
iret
and
mov
push
pop
or
aam
lods
xor
iret
or
leave
xor
stos
xchg
mov
mov
mov
cwtl
scas
lahf
lods
pusha
je
push
adc
xchg
push
pop
dec
repz
sbb
push
insl
leave
sub
cmp
fldt
rorl
ljmp
aaa
js
je
xor
outsb
inc
imul
push
xchg
sub
loope
rorb
add
jnp
repz
or
sub
lods
mov
hlt
ret
iret
and
enter
aam
xchg
popf
cmpsl
bnd
ja
movsb
mov
mov
enter
mov
mov
sbb
jns
cltd
call
mov
sbb
fsubr
outsl
ret
jp
jge
adc
andb
jge
mov
jl
shll
daa
sbb
inc
in
sub
and
push
mov
test
adc
sub
lsl
scas
push
lcall
mov
in
sbb
push
bound
movsb
sbb
xor
loope
lea
push
fimuls
pop
roll
mov
or
mov
sbb
iret
jb
push
and
bound
ja
gs
repz
add
out
subb
into
xor
lea
push
es
mov
in
lods
nop/reserved
mov
iret
adc
aaa
mov
bound
mov
add
jnp
mov
es
lods
xor
or
lea
or
dec
and
sbb
jae
in
push
sub
inc
rclb
jno
stos
cli
filds
gs
test
adc
push
inc
sub
pop
pusha
out
or
jb
pop
scas
and
xor
enter
mov
mov
sub
inc
pop
or
push
out
cmp
pop
les
hlt
and
stc
testb
gs
adc
pop
roll
sbb
dec
pop
scas
cmp
push
iret
enter
cmpsl
adc
xor
clc
pop
lcall
rorb
mov
mov
mov
lds
inc
outsb
subb
movsb
lahf
icebp
jo
add
inc
inc
das
lea
xor
ds
xor
mov
repnz
pop
cld
mov
inc
je
mov
lods
ret
jg
add
inc
sub
inc
movsb
xor
scas
scas
sub
rclb
shrb
test
mov
adc
leave
xlat
lods
cs
sahf
push
xor
adc
shrb
leave
push
sub
add
inc
sub
or
xchg
movsl
ljmp
popf
stos
jmp
inc
mov
push
sub
pushl
xchg
out
and
out
lret
in
dec
mov
inc
adc
add
adc
push
movsb
aam
shrb
dec
testl
add
int
pop
mov
shrl
pop
adc
aaa
pop
mov
mov
jnp
xor
sub
repz
shrl
push
jo
cltd
dec
pop
and
test
les
icebp
dec
popf
repz
cld
out
int
int3
pop
dec
ret
fdivl
faddl
and
cmp
mov
mov
fs
adc
rcr
stos
xlat
aam
add
lock
sbb
sub
mov
ljmp
iret
ret
mov
cmpsl
mov
daa
mov
mov
call
jp
sub
sbb
lods
aaa
pop
sub
cmp
dec
jne
cmpsb
and
mov
fdivs
loopne
cmp
into
addb
rclb
cld
xor
mov
add
pusha
std
lock
mov
jle
fbstp
repz
xlat
mov
push
jle
sbb
lgs
mov
mov
mov
cmp
push
jo
outsl
aam
mov
iret
mov
repz
add
or
div
lods
movsb
dec
into
xor
popf
movsl
mov
cmpb
xchg
out
jge
lds
pop
xchg
cs
add
xchg
adc
pusha
pop
sub
cmpsb
push
cltd
sbbb
adc
lds
mov
push
adc
rcrb
cs
fnsave
ljmp
out
lods
repnz
orb
cli
push
inc
xchg
sbb
push
xchg
dec
push
insl
les
in
adcb
mov
cld
pushl
popa
iret
sbb
jbe
xchg
cltd
out
mov
mov
xchg
fdivrs
jg
insb
out
pop
hlt
adc
dec
les
fidivl
iret
add
cmp
push
ss
popa
out
pop
mov
and
jg
jge
adc
pop
popf
pop
and
jne
sahf
popf
jbe
dec
sub
push
arpl
jg
out
movsb
lods
push
sub
jb
daa
imul
xchg
mov
sbb
xor
jmp
stos
xchg
mov
orb
stc
sub
movsb
pop
inc
pop
ret
jbe
dec
and
mov
pushl
adc
inc
fwait
xchg
and
sbb
pusha
jnp
and
mov
cmp
faddl
mov
outsb
aaa
xchg
rolb
ljmp
rorb
dec
jle
out
jge
ret
fs
pusha
xchg
fst
xor
iret
xchg
or
inc
mov
fisttpl
jae
ss
mov
add
mov
aas
sbb
pop
sub
rcll
mov
xor
iret
dec
imul
mov
cltd
jne
cmp
enter
adc
in
dec
aam
lcall
push
push
dec
push
sti
dec
jo
push
sub
adc
adc
sbb
jecxz
aam
add
xor
daa
and
mov
push
fsubs
pushaw
das
pop
cs
shll
mov
addl
rclb
lods
xor
das
shrb
bound
jge
cmp
dec
cmp
mov
cli
cwtl
and
repz
or
popf
lock
or
stc
cmp
cmp
xchg
scas
scas
addr16
jp
insl
or
sbb
jno
scas
sbb
incl
xor
xchg
inc
mov
mov
push
adcb
mov
inc
enter
outsl
or
in
jecxz
mov
mov
into
ljmp
ja
jae
adc
sbb
pop
int3
insb
inc
xor
adc
add
or
mov
out
dec
cli
add
add
push
or
push
dec
mov
sbb
shll
sar
int
adc
sbb
sub
sub
mov
roll
mov
sbb
movsb
outsl
xchg
ret
mov
fdivrs
lods
out
es
mov
repz
push
add
out
cli
and
lods
dec
inc
push
fildll
mov
add
imul
xchg
std
xchg
loop
jno
pop
push
cli
or
into
mov
xor
rep
or
ret
out
sub
lods
loope
leave
jl
shr
jge
pop
in
jbe
mov
cmpsb
imul
jo
daa
into
addb
rcrb
inc
scas
fs
pop
aam
dec
mov
mov
xchg
xchg
dec
repnz
mov
pop
inc
sub
mov
sbb
sbb
inc
push
mov
mov
fs
jle
mov
jl
sub
adc
ljmp
repz
nop
xchg
xor
inc
sbb
pop
cwtl
decb
add
aam
sub
idivl
loope
cs
movb
aam
imul
pop
pushl
jo
add
clc
loop
adc
mov
mov
scas
insb
lods
fs
sarl
add
sub
repz
lods
aas
mov
jo
cmp
dec
fadds
out
movsb
inc
or
ret
sub
mov
xorl
icebp
movsb
adc
daa
adc
pop
sbb
adc
sub
xor
movl
and
bound
aam
lock
xor
in
xchg
or
stos
sahf
cld
out
movsb
mov
adc
repz
adc
sub
lea
mov
test
pop
mov
dec
push
cmp
scas
aam
fisubrs
inc
mov
xor
push
inc
mov
dec
mov
sbb
in
clc
leave
mov
or
mov
mov
inc
repz
adc
xchg
sub
mov
fst
scas
cmp
mov
out
mov
sahf
jae
mov
pop
cmp
pop
call
mov
lods
rcr
rcr
fwait
xor
fstps
fsubrl
loop
loopne
mov
sub
out
xorb
xchg
dec
fsubrs
and
punpcklbw
push
cmc
insb
or
xor
outsl
pop
cs
stc
repnz
sub
jns
jbe
jae
xchg
movsb
sarb
leave
sub
es
sub
notl
subb
xchg
ljmp
testl
fldl
push
ss
xor
mov
mov
sbb
jne
add
cmp
icebp
mov
jnp
sbbb
jb
push
xchg
int3
lods
mov
test
sbb
push
scas
nop
outsb
pop
sbb
movsb
sub
cmp
xlat
imul
lret
mov
cmp
popa
pop
sti
lea
sub
jbe
xor
xor
lock
out
add
add
jb
push
into
mov
ret
sub
xor
ret
fcomps
push
mov
push
mov
fldl
test
xor
pop
data16
and
outsl
std
inc
fisubl
rcl
sbb
sub
repnz
push
inc
psubd
pop
sub
movsb
movsl
imul
pop
pop
out
dec
adc
sti
iret
or
sahf
data16
xor
add
sub
xchg
push
mov
add
push
push
push
xor
mov
push
stos
fildl
repz
or
sub
fldcw
sub
mov
push
insb
aas
clc
cmp
sbb
xlat
sub
mov
das
test
lcall
fidivrs
outsl
subb
add
out
enter
aaa
bound
insl
jle
vcvtdq2ps
xor
and
mov
ret
lds
dec
jns
mov
aam
mov
mov
lods
stos
xor
mov
mov
sub
push
adc
jns
popa
inc
lods
push
mov
and
enter
inc
icebp
push
outsl
lock
stos
jno
std
ret
repnz
aad
ret
dec
pop
sbb
or
imul
in
movsb
not
push
add
xchg
fistpll
add
dec
pop
outsb
mov
lock
shrl
mov
push
sbb
clc
add
sub
lods
pushf
cvtpi2ps
fcmovne
gs
mov
in
lret
js
dec
jne
pop
movsb
xchg
jbe
aas
adc
sbb
addb
scas
fcoms
mov
push
push
mov
fiaddl
mov
mov
js
xchg
lcall
xor
loopne
push
sbb
lods
jno
mov
lret
jb
fmulp
out
add
lds
mov
shll
rcll
jne
int3
popf
mov
ljmpw
scas
cmp
sbb
xchg
lret
dec
cli
pop
hlt
mov
lods
xor
xor
cmp
cli
out
or
mov
nop
or
in
scas
test
and
xor
and
mov
fsubrs
xor
add
sub
mov
movsb
mov
jnp
sub
fistl
push
push
xor
ljmp
or
sbb
mov
ret
lcall
cs
mov
popf
out
ret
push
push
push
add
jp
sub
loope
stos
popf
sbb
cmp
lods
mov
js
push
jge
pushf
or
cmp
mov
adc
inc
hlt
adcl
xchg
enter
add
or
and
iret
lods
pop
jb
cmp
mov
aad
mov
xor
outsl
test
mov
push
add
or
adc
les
or
add
jmp
imul
pusha
pop
repnz
or
xchg
push
and
pop
das
dec
pop
xorl
loope
std
fnstcw
mov
iret
mov
loop
jne
xchg
lret
imul
jb
mov
popa
inc
stos
mov
movsb
add
xchg
dec
lret
imul
jmp
testb
divl
fisubrl
nop
movsb
sub
inc
sub
jb
mov
bound
cltd
or
outsb
pop
push
pop
cmc
lahf
pusha
xor
fistl
subb
push
adc
das
inc
sbb
aaa
in
pop
imul
and
pop
outsb
add
or
mov
pop
rorb
cmp
mov
hlt
imul
jno
adc
arpl
cmp
xchg
dec
pop
nop
in
xchg
or
test
rorl
in
push
push
cmpsb
ds
inc
out
add
pop
or
sub
inc
mov
adc
jae
sbb
fldenv
mov
push
jnp
mov
mov
jae
sub
pushf
cmp
inc
dec
out
lret
int
mov
movsb
mov
xchg
pop
jecxz
mov
lds
sbb
jge
jle
and
cmpl
adc
pop
out
ja
xor
daa
aam
mov
int
in
inc
add
or
push
mov
or
xlat
mov
xor
inc
dec
mov
and
mov
xchg
sub
ljmp
js
cmp
mov
xchg
mov
or
subl
mov
add
test
arpl
ret
fsts
fstps
ficomps
adc
push
add
ljmp
push
mov
sbb
ljmp
shrl
and
loope
divl
xor
dec
repnz
cmpsl
dec
test
mov
dec
fidivl
xorb
mov
mov
push
mov
push
mov
mov
sub
pop
bound
and
or
movsb
out
cmc
adc
std
insl
mov
outsl
call
push
lret
mov
mov
push
cmp
xchg
cld
push
popa
fsubrl
inc
xor
movsb
sbb
js
xchg
adc
mov
int
mov
dec
adc
push
fsubrs
jb
in
fisubs
or
imul
mov
repz
sahf
mov
cmp
add
jbe
jns
movsl
xor
movsb
push
pop
push
inc
sbb
add
cmpsl
xlat
fildll
pop
sub
out
push
sub
mov
and
js
in
adc
movsl
in
int3
test
lcall
out
mov
push
mov
sbb
addb
sub
mov
or
xor
or
or
mov
adc
jb
push
lahf
dec
hlt
push
cmp
sahf
fimuls
mov
int
mov
pop
lret
pop
in
scas
arpl
add
addb
jb
and
ret
cmp
iret
sbb
lea
jne
int3
jns
inc
add
pop
cs
fiaddl
aam
mov
test
mov
addr16
mov
fmulp
mov
xchg
sti
loope
xchg
les
popa
andl
xchg
jb
mov
jb
cmp
xorl
lods
mov
stc
testl
push
xlat
lcall
add
mov
stc
mov
into
test
dec
mov
pusha
into
sbb
test
or
sub
ret
mov
je
imul
into
inc
sbb
cmpsb
ret
clc
and
dec
mov
ret
lods
sbb
ret
test
cmc
pop
clc
fldenv
sbb
sub
imull
push
mov
cmpsb
loope
hlt
les
jmp
pop
push
lret
call
stc
dec
cmp
cli
lods
lahf
add
mov
stos
mov
mov
xchg
scas
hlt
imul
mov
adcl
lods
lds
rclb
fsubl
fldl
stos
lcall
outsl
test
ss
xor
movsl
push
mov
das
adc
jmp
and
fwait
and
pop
push
daa
fiadds
inc
aam
callw
mov
movsl
push
scas
xor
mov
das
lods
loop
aad
and
mov
aam
ret
out
push
add
xchg
addr16
adcl
pusha
inc
fsin
mov
test
mov
fiaddl
xchg
add
mov
jecxz
pushf
movsb
aad
dec
loopne
adc
iret
dec
mov
pop
aaa
sub
xchg
rcrl
cmpsb
test
stos
stos
in
clc
xor
sbb
loopne
sub
mov
pop
fdivrl
push
xor
mov
mov
cmp
adc
sub
shrl
xor
mov
lock
insb
rorl
movsl
pop
jae
push
rclb
pop
int
pusha
push
mov
cs
pop
lea
je
bound
push
and
or
xor
ss
mov
jo
mov
scas
sub
adc
dec
dec
scas
mov
xlat
aad
cmpsb
inc
dec
xor
scas
jb
xor
lret
hlt
pop
sar
lcall
fcoms
sbbb
xchg
repz
lds
shll
repnz
mov
sub
addr16
gs
dec
cmp
int
sub
out
or
lcall
jmp
lret
add
dec
add
popa
xchg
mov
nop
and
insb
addr16
insl
insl
lds
lock
sbb
aad
mov
pop
and
cs
xor
push
mov
call
das
cs
repz
push
not
bound
lods
xor
out
cmpsb
nop
rorl
fdivl
inc
movsb
dec
mov
xlat
cmc
inc
adc
lcall
jecxz
dec
sbb
jl
mov
mov
pop
negl
xor
xchg
ret
push
fcoms
aad
add
add
ret
mov
mov
test
and
adc
and
mov
dec
icebp
lea
mov
mov
das
cmc
fcmovne
lods
mov
leave
fwait
xor
repz
leave
es
mov
movsb
push
lods
xor
sbb
js
xchg
sbb
cmpb
sub
xor
jno
jecxz
daa
loopne
mov
pop
rorb
xchg
fsubrs
scas
push
add
xor
das
fildl
dec
into
add
fsubrl
cmp
add
pusha
dec
fisubl
stc
push
roll
insl
bound
jge
aas
pop
sub
out
aas
ljmp
push
imul
xorb
scas
arpl
cwtl
fwait
popf
ror
xchg
test
fsubs
mov
adc
hlt
push
pop
cld
pusha
and
and
sbb
inc
cmpsb
call
pop
cld
cmp
dec
sbb
test
pop
xor
pop
out
mov
sub
push
push
nop
ja
into
fcompl
xchg
or
lret
add
hlt
data16
dec
stos
jno
mov
jge
inc
sbb
sub
sti
lods
mov
fisubrl
scas
bound
aas
xor
mov
shrl
mov
addr16
clc
movl
push
mov
sbb
divl
sub
cmp
ss
lods
push
xor
cmc
clc
fsts
add
sub
cltd
ss
mov
frstor
mov
sbb
push
test
je
jecxz
jmp
sub
cmpsl
scas
lret
js
jb
lock
inc
inc
pop
jl
movsw
icebp
int3
out
shrb
pop
xchg
lds
cmp
and
mov
pop
clc
adcl
jp
aas
pop
cmp
or
mov
and
mov
or
sbb
and
bound
jle
cmpsl
repz
shr
fistpll
inc
xchg
inc
lret
ja
clc
add
insb
lods
loope
in
enter
or
cmpsb
ret
push
hlt
gs
sbb
ss
in
mov
mull
int3
test
mov
icebp
int3
fbstp
fwait
les
pop
dec
movsb
xor
or
and
fidivl
loope
mov
fsts
movsb
es
push
mov
jno
xor
jl
dec
push
ret
mov
sub
dec
mov
xor
pop
inc
ficomps
aas
mov
cmpsl
popf
xchg
sub
cmpsl
sbb
stc
sbb
xchg
lods
dec
in
movsl
pop
dec
sub
or
jne
pop
jg
push
mov
lods
in
mov
mov
cmpsb
adc
lods
fwait
add
sub
lcall
mov
adc
sbb
xor
jmp
stos
sbb
pop
mov
out
aam
add
sub
inc
add
insb
loopne
mov
sbb
outsb
pushf
push
icebp
fildll
lret
add
mov
aam
or
hlt
out
clc
mov
inc
pop
ljmp
sbbl
inc
adc
or
pushf
jnp
dec
sbb
xchg
loop
or
fistpl
jl
mov
stos
and
mov
cmp
cld
test
fstps
sbb
sub
xchg
iret
cwtl
xorl
insl
add
push
jne
xchg
popf
xor
in
nop
pusha
movsl
and
js
add
mov
iret
adc
push
or
ljmp
sbb
cmpsb
mov
mov
xchg
inc
push
ftst
std
dec
inc
loop
fcoms
jno
sbb
cmp
lret
add
inc
mov
mull
cmc
andl
iret
dec
mov
push
xor
and
sets
xor
cmp
xchg
jp
jp
or
fidivl
cli
stos
and
call
mov
dec
sahf
pop
push
stos
lods
pop
sbb
or
pop
dec
outsb
fbld
jb
inc
add
jnp
std
insb
mov
lods
in
dec
sbb
insl
fisubl
xlat
jno
mov
or
adc
xchg
hlt
sbbb
push
push
movl
cmp
cwtl
mov
mov
bound
jmp
imul
mov
sti
mov
pushf
rdmsr
scas
fisttpl
out
dec
nop
xchg
dec
adc
lods
call
pcmpgtw
les
lret
mov
and
jb
jge
mov
movsb
and
xchg
inc
daa
leave
mov
mov
cmc
mov
inc
mov
imul
dec
lods
add
ss
mov
mov
mov
xor
sti
and
xchg
repz
fcomip
mov
xchg
stc
out
or
push
sbbl
movsb
push
xchg
mov
mov
mov
dec
sub
mov
jg
fimull
std
scas
adc
xchg
stc
inc
push
imul
mov
addr16
lods
mov
jae
sub
jle
int3
enter
inc
adcl
in
inc
out
pop
hlt
ljmp
mov
sbb
mov
xchg
mov
mulb
cmpsl
mov
inc
sbb
test
and
push
xor
inc
notb
adc
jge
jb
or
test
bnd
and
js
add
popa
jne
pop
jl
sbb
movsb
sub
in
mov
xchg
or
push
xchg
outsb
enter
cli
ret
shl
push
cmp
int3
or
push
repz
aaa
fwait
cmp
sbb
mov
iret
xor
addr16
cmpsb
std
rolb
roll
pusha
test
cs
and
inc
and
push
sbbb
mov
xor
iret
xchg
movsb
mov
jne
cmp
inc
ret
mov
jne
mov
mov
sub
dec
xchg
lea
dec
sub
fmuls
and
xlat
mov
and
out
mov
repz
sbb
cmpsb
mov
inc
icebp
mov
les
push
push
out
and
add
ss
cld
mov
sahf
sbb
adc
fucomp
lods
xor
mov
jae
insb
mov
mov
outsl
ret
into
fcomps
push
loope
jo
lods
xor
je
or
movsb
imul
cmp
mov
xchg
mov
adc
push
jp
loope
into
icebp
fldcw
mov
aad
sbb
mov
daa
inc
mov
imul
sbb
xchg
xor
movsb
adc
lds
shll
stos
jmp
mov
rcll
ljmp
sbb
lret
int3
repnz
jno
insl
mov
pop
mov
int
jae
mov
inc
or
add
lods
push
lahf
mov
movsb
cmpsb
into
mov
mov
sub
pop
xor
sbb
mov
popa
rorl
sbb
or
fstps
adc
cmc
mov
jb
cmc
pop
pop
xor
scas
xchg
and
rcl
stc
dec
fimull
xor
mov
jle
stos
push
mov
push
les
xchg
repz
test
sbbl
jb
push
fs
shrb
out
sub
clc
lods
pop
add
push
mov
push
out
insb
andl
sub
mov
push
loope
pop
lods
add
mov
dec
xchg
mov
mov
xchg
lret
addr16
shl
sub
jmp
cld
je
sbb
pop
lcall
ret
jmp
xor
pop
lret
fstpl
jp
inc
insb
xor
outsl
popa
cmp
lds
jnp
adc
lods
dec
out
lods
scas
xchg
mov
pop
mulb
in
rclb
cmc
xchg
rorl
test
sbb
jo
or
movsl
das
int3
idiv
sub
shlb
loop
push
scas
cmp
les
out
xor
adc
repz
sub
insl
xchg
xchg
pop
xchg
enter
jb
subb
cmp
es
sti
cld
push
xorl
mov
mov
ret
push
outsb
loope
cs
xchg
mov
dec
fimull
cmp
mov
je
push
movsb
movsl
pop
sub
jle
lods
mov
lcall
jb
push
mul
mov
ret
test
xchg
icebp
xchg
mov
sub
scas
mov
lods
add
aad
ret
test
scas
roll
sbb
or
cmpsb
int
sbb
mov
mov
and
test
pushl
je
and
jo
lret
xchg
push
fmuls
repz
xor
loope
subl
movsl
xchg
sub
mov
sbb
imul
sub
jg
ljmp
ret
mov
dec
adc
bound
push
aad
push
imul
cs
mov
xchg
data16
jle
adc
jmp
jns
xor
add
lahf
adc
int
lock
aam
mov
adcl
dec
mov
clc
jle
imul
push
lcall
insb
and
cmpsl
into
dec
fs
add
xor
and
cwtl
fistpll
mov
test
jbe
jge
mov
xor
xchg
cmp
sub
xorb
jno
out
mov
aam
js
lock
jns
jg
xchg
dec
jae
push
aas
adc
mov
movsb
int
mov
push
inc
mov
dec
pop
dec
daa
sbb
push
call
lahf
rol
lahf
sub
out
add
dec
and
cmpsb
out
jns
push
mov
mov
ljmp
inc
cmpsb
inc
lret
sar
shrl
mov
mov
jle
push
ret
mov
add
pushf
xor
mov
iret
xor
xchg
mov
or
repz
mov
mov
jp
dec
lods
arpl
stos
pop
push
lea
xor
movsb
ss
loope
mov
lods
and
push
or
shll
data16
pop
mov
or
insb
push
mov
scas
cltd
rolb
iret
in
out
dec
int3
lods
sbb
xchg
or
mov
fcmovne
xor
pop
xor
into
fcomps
push
push
cld
jne
pop
into
cmpsb
dec
push
jmp
out
decb
add
stos
addl
inc
ficoms
fistpl
xchg
aam
jb
push
lret
jae
fiadds
popf
int3
fmull
or
ljmp
in
pushf
cld
aaa
sub
pop
fistpl
add
xor
stos
dec
push
addb
jge
enter
inc
sahf
cltd
xor
xchg
pop
ljmp
pop
repz
ficoml
xor
bound
push
cli
add
es
faddl
lods
aad
mov
subl
lods
push
es
add
ljmp
sbb
pushf
sub
cld
mov
xchg
mov
lock
das
or
mov
mulb
ret
pop
mov
cmpsb
dec
mov
jae
int
push
data16
imul
jnp
mov
and
pop
dec
mov
jns
fcoms
sahf
fmuls
cmp
ja
sub
sub
lcall
add
imul
jns
rcrb
sbb
int3
call
aad
and
adc
movsb
dec
insl
jge
in
mov
adc
xchg
fmul
xchg
or
mov
fsubr
xchg
pop
bound
out
mov
stos
xchg
popa
push
or
inc
add
jge
add
pop
ja
cld
insb
test
dec
sbb
push
lods
cwtl
fimull
push
push
adc
testl
push
cltd
mov
mov
push
push
mov
xor
push
or
xor
mov
mov
and
bswap
sub
inc
mov
dec
mov
jbe
inc
cmp
xchg
jno
add
mov
push
inc
mov
push
les
shlb
dec
push
and
xchg
fcomps
sbb
mov
mov
cli
cmp
mov
push
insb
sahf
shrl
adc
inc
lock
adc
cmp
lods
mov
insb
inc
jae
jnp
subl
mov
sbb
mov
xlat
fmul
xchg
cmp
pop
ficompl
jo
nop
dec
subb
pop
mov
lret
dec
mov
ljmp
adc
ficoml
xor
dec
aam
shlb
jb
xor
cvtps2pi
gs
stos
mov
mov
and
aaa
lcall
xor
dec
and
cmc
les
jb
rcr
stos
repnz
pop
insb
jne
inc
jns
mov
pop
rolb
subl
pop
mov
mov
insl
scas
ret
mov
roll
in
jl
mov
mov
or
mov
and
orb
dec
movsb
and
push
call
or
or
int3
jecxz,pn
ret
mov
dec
bound
pusha
wbinvd
stos
xor
xor
loop
or
or
lcall
das
aaa
sbb
push
cmp
jg
sub
inc
cli
sbb
xor
popf
dec
inc
sbb
mov
push
fldt
adc
xchg
jge
test
mov
ret
push
dec
pop
insl
addl
sub
cmpsl
pop
mov
stos
cli
mov
sub
mov
lock
lahf
out
hlt
jge
lret
test
aam
mov
and
call
fs
pop
mov
jmp
jne
ljmp
xor
mov
mov
movsb
pop
push
out
sub
call
xor
imul
jno
outsl
inc
sbb
jns,pn
decb
les
mov
mov
ss
jnp
shrb
push
fisttpl
ret
mov
pop
jns
jno
roll
inc
scas
xor
lods
sub
stos
lock
cs
gs
movsb
mov
xchg
xchg
lods
dec
jae
add
dec
fisubrl
jb
jge
or
movsb
jb
enter
pop
stos
mov
or
cmpsl
adcb
popf
ljmp
das
xchg
adc
sbb
xor
xchg
push
xchg
mov
dec
lcall
cli
sti
mov
push
aam
jp
cwtl
mov
adc
test
jle
sbb
js
mov
push
pushf
lret
jns
mov
insl
dec
and
add
xlat
sahf
push
jbe
pop
sub
jp
cli
inc
or
ds
ljmp
lret
aaa
gs
add
cli
mov
mov
xor
sub
pop
sub
fsubrs
dec
movsb
xchg
add
and
add
in
xorb
xor
xor
leave
pop
rcrb
jmp
inc
xchg
or
xchg
adc
pand
push
cpuid
loop
std
movsb
adc
adc
mov
xchg
addl
aam
repz
and
pop
mov
ret
inc
das
lods
lea
xor
adcl
cmpsb
pop
call
loope
xor
and
shl
ljmp
movsb
iret
dec
add
dec
in
pusha
push
cmp
xorl
xorl
decb
and
mov
sbb
pop
adc
fcomps
lret
int
aad
mov
cltd
jno
outsb
sub
dec
adc
mov
outsb
ret
cli
shl
mov
pushf
int
xchg
cmpsl
dec
das
pop
inc
call
or
lock
adc
xchg
xchg
and
and
sbb
cli
sbb
clc
or
fisubl
or
pop
cs
in
mov
ret
repz
sub
add
push
adc
mov
pop
and
push
mov
sbb
fmul
xchg
aaa
push
mov
inc
pop
lods
sti
sbb
mov
lods
rorl
outsb
push
cs
arpl
and
bound
rcll
add
cmp
fistl
mov
sbb
push
jb
pop
into
repz
mov
and
rorb
pusha
add
scas
notl
scas
andb
mov
fwait
cmp
dec
mov
fisubrs
iret
mov
or
jo
sbb
mov
imul
cltd
mov
gs
xor
xor
xchg
bsr
mov
ss
or
ja
or
push
dec
and
not
sbb
sub
sbb
cmp
enter
mov
loop
je
outsb
mov
cmpsb
roll
xlat
xor
inc
fbstp
mov
in
mov
cmp
lahf
mov
in
sti
ljmp
sub
and
cmc
jno
das
cmp
dec
add
cmc
mov
mov
lods
adc
inc
fwait
loope
dec
cs
in
xchg
jp
inc
push
xchg
push
stos
push
stc
jg
or
outsb
push
mov
daa
stc
sub
insl
cld
test
ret
das
dec
outsl
sbb
jb
mov
pop
popf
dec
subb
cmpsb
pop
cmp
sbb
inc
xchg
or
sub
jb
and
mov
cmp
call
outsl
stc
push
pop
subb
adc
fsubr
loop
insb
xor
sub
push
stos
mov
fidivs
pop
sub
xchg
sahf
adc
xchg
add
jg
outsl
cltd
ja
pusha
sub
cmpsl
movsb
push
es
mov
or
dec
cmp
add
ja
and
je
dec
aam
push
imul
xchg
pop
les
mov
ds
insl
cmp
testb
xorb
jbe
push
movsb
or
xchg
sub
dec
mov
nop
test
aad
fsubs
outsl
cmp
scas
xor
shlb
add
lods
push
popa
arpl
mov
fdivl
push
ficompl
imul
in
lcall
and
aad
lock
ljmp
scas
or
dec
pop
stos
nop
lods
mov
pop
andb
xor
movsb
cmp
aas
pop
mov
sbb
push
inc
pop
loope
pop
rcrl
cmpsb
push
add
out
je
shl
add
add
scas
pop
xchg
pop
rorb
das
insl
pop
mov
push
shrb
or
iret
mov
mov
cld
xor
push
mov
pusha
mov
into
jno
mov
pushf
icebp
jae
scas
mov
mov
sub
mov
andb
add
repz
inc
pop
adc
pop
int
shl
insb
lret
push
sbb
lea
adc
repz
push
fnstenv
mov
or
test
in
mov
popf
adc
stc
mov
inc
ret
sub
ret
movsb
call
mov
cmc
pop
jns
inc
push
sbb
mov
cmp
ljmp
loope
rorb
movsb
fxch
aas
insb
out
or
iret
in
hlt
scas
es
or
mov
aaa
enter
cs
xchg
stc
std
xorb
pop
xor
loop
and
cmp
mov
fcoml
jb
repnz
fmuls
movsl
aam
mov
xor
mov
push
sub
mov
imul
sub
lds
mov
data16
mov
pop
xchg
sbb
cmpsl
andb
gs
xchg
shr
sbb
mov
lret
test
cmp
pop
push
shrl
icebp
fcoml
xchg
leave
mov
dec
sub
pusha
add
mov
lret
mov
andb
pop
out
cmp
decb
cs
jmp
adc
das
mov
into
pop
push
add
dec
jb
dec
test
mov
js
ds
push
push
into
dec
mov
xor
stos
mov
lea
je
orl
psubusb
mov
insl
cmp
cld
ret
popf
mov
mov
neg
repnz
in
jge
xchg
sub
mov
test
add
xchg
pop
js
loop
dec
je
xchg
test
in
cli
lcall
mov
sbb
xor
stos
xchg
jno
push
mov
movsb
xor
mov
leave
cmp
jge
cmp
mov
xor
je
xchg
imul
mov
add
sub
mov
sahf
mov
fldcw
aaa
add
repz
xor
pop
mov
movsb
push
mov
mov
imul
jns
pop
out
cmp
push
pushf
sub
mov
mov
leave
ss
cld
pop
jae
call
out
pop
lea
std
insb
adc
mov
mov
cmp
adc
mull
shlb
cmc
adcb
lds
imul
push
stos
mov
cld
add
ljmp
js
inc
sub
xchg
dec
jo
je
cvttps2pi
inc
jecxz
pop
sub
and
dec
cmovno
das
push
int3
or
sub
and
hlt
fildll
arpl
scas
ds
xchg
mov
mov
push
jmp
fldl
popf
inc
sbb
jae
xor
sbb
cs
mov
sub
mov
and
cwtl
fstpt
dec
sub
or
mov
mov
dec
outsb
rep
xor
stc
xchg
pusha
jg
ss
mov
test
dec
arpl
ljmp
cmp
sahf
xor
mov
sub
add
ret
popa
fsubs
fwait
push
xor
push
cld
pusha
dec
pop
push
xlat
ret
ljmp
pushf
or
cmpsb
mov
arpl
adcb
fwait
scas
outsb
adc
stc
mov
push
call
xor
mov
inc
test
test
xor
test
movsb
pop
push
dec
mov
mov
movb
cli
call
sub
mov
dec
shll
adc
les
jnp
loopne
into
sbb
jb
cld
and
inc
adc
mov
mov
call
andl
in
xor
loop
and
ljmp
ret
rol
push
or
xchg
pop
sbb
repz
push
aam
cmp
or
outsb
pop
jmp
pushf
push
icebp
in
rcll
sbb
scas
imul
repnz
ficomps
mov
mov
outsb
and
mov
xchg
dec
out
les
and
xchg
push
add
mov
or
out
popa
mov
les
movsb
sub
ss
lods
xchg
hlt
ljmp
push
js
adc
call
ds
push
hlt
ja
repz
add
sub
ljmp
lret
push
push
or
and
adc
or
movsb
inc
dec
rorb
loope
sbb
lods
setns
jbe
stc
cmpsl
lea
into
sub
shlb
mov
ds
pop
mov
xchg
outsb
cmp
sub
inc
mov
lods
ffree
add
ret
or
aam
cmp
sbb
xlat
adc
orb
movsb
das
test
popf
mov
test
mov
push
cmp
sbb
mov
lock
xchg
add
dec
push
shll
ret
dec
cmp
gs
sub
push
mov
adc
aam
lds
push
mov
ret
cmp
cmc
ror
sub
jecxz,pt
jecxz
adc
scas
sbbl
xor
ret
in
mov
pop
test
sbb
lds
jge
fcmovne
cld
fdivs
inc
add
mov
mov
rcrl
subb
mov
jb
or
aam
xchg
xchg
sub
push
dec
ljmp
or
cmp
mov
fdivs
inc
jge
or
out
and
dec
mov
and
jae
icebp
xchg
movsb
popf
jae
xchg
lcall
sbb
push
shrl
xor
dec
jmp
fwait
inc
adc
jmp
test
leave
push
sub
mov
rcrl
loopne
dec
lock
push
push
lds
lods
mov
out
jno
leave
pusha
mov
test
les
daa
jno
popa
lods
fs
and
push
push
jae
mov
inc
data16
cmp
in
andps
rorl
fwait
mov
xor
loope
xor
jmp
jnp
pop
adc
or
cs
mull
push
sahf
sub
test
subb
push
jl
or
inc
das
adc
jno
lret
mov
lods
fcmove
push
inc
or
mov
lea
arpl
mov
fadds
std
fs
repz
andb
rol
inc
or
std
ud2
push
movsb
or
out
mov
jbe
push
fdivrl
jl
and
jp
cmc
mul
enter
pop
insb
xchg
nop
mov
mov
jne
nop
push
mov
mov
shl
mov
adcl
repz
iret
pop
pusha
sub
xor
inc
jne
shll
ficoml
ffreep
icebp
mov
or
sub
ret
cmp
mov
sub
pop
dec
aas
sbb
push
repz
mov
mov
xchg
push
outsb
insl
cltd
sub
out
mov
daa
out
cmp
jg
dec
push
int3
mov
jb
ss
popa
ficompl
xchg
pop
mov
addr16
push
xor
jp
hlt
add
ror
adc
orb
push
rcll
cld
cltd
adc
mov
aam
pop
mov
dec
push
repz
add
enter
xor
out
and
scas
jmp
lcall
cltd
sub
add
sub
mov
leave
je
cmp
pop
add
jp
mov
and
shlb
xor
cmp
movsb
pop
lods
dec
iret
cmp
mov
insl
jbe
repnz
daa
pop
push
aad
inc
add
outsb
cmp
out
sbb
pusha
mov
ja
mov
pop
mov
scas
jb
int3
jne
xor
adc
mov
pusha
cmp
les
jns
sbb
adc
lret
cmpsb
xchg
mov
fs
stos
dec
lods
fnstsw
fcomps
pusha
mov
mov
pop
mov
pop
xchg
push
fsubrl
stos
jae
pop
sub
loope
cltd
nop
stos
dec
sbb
or
in
aaa
movsb
pop
mov
adc
test
mov
scas
movsb
cld
ljmp
int3
dec
mov
mov
mov
insl
lea
or
lods
ret
sub
and
dec
push
add
das
push
mov
fcoml
mov
in
hlt
out
sbb
mov
lods
sub
add
jo
cs
cmp
lea
loop
add
in
push
pusha
sub
and
movsb
jns
hlt
jge
clc
lret
call
leave
adc
and
jp
pushf
mov
sbb
adcb
into
ss
out
test
push
sbb
clc
cmp
mul
push
repnz
sbb
iret
mov
sub
jge
pushf
push
setge
aaa
out
mov
sub
dec
push
unpcklps
mov
das
movsl
mov
push
push
add
cmpsb
sub
sahf
ljmp
adc
pop
push
les
lcall
mov
pop
dec
push
xor
dec
push
xlat
mov
lds
push
scas
lea
jbe
xchg
lods
lods
mov
enter
or
sahf
into
push
dec
cmc
add
bound
jne
stos
pusha
jne
hlt
leave
je
xor
push
clc
pusha
inc
imul
sti
jb
mov
inc
mov
sti
test
xchg
clc
sub
lods
aad
repnz
xchg
cmp
or
jno
mov
pop
sbb
xor
imul
movsb
lahf
mov
xor
xchg
ret
sbb
inc
mov
inc
dec
or
mov
rolb
pusha
stos
das
les
jmp
out
test
scas
adc
cmp
cmp
lods
bound
cli
mov
imul
les
sbb
jae
dec
xor
ljmp
enter
cmp
sub
sub
lock
add
sub
xor
mov
jg
imul
push
xor
insl
mov
lods
orl
shlb
popf
and
sub
lods
fucom
std
xchg
repnz
mov
xor
std
xor
dec
subb
movsb
js
mov
sub
fidivs
add
sbb
mov
sub
ja
cmp
jmp
xor
divl
pop
arpl
adcl
cs
popa
scas
push
lds
push
inc
sbb
xchg
add
cmpsb
cld
push
xor
popa
sahf
xor
inc
movsb
sbb
lea
cmp
inc
mov
dec
sahf
xor
fsubl
pop
pop
sbb
sub
cmp
adc
xchg
or
lods
sti
xor
pop
xor
jno
push
enter
cli
cmp
into
push
leave
dec
adc
lods
loope
push
out
sbb
pop
shlb
adcb
push
xor
inc
sub
mov
in
add
daa
clc
and
sub
out
xorb
jnp
dec
xchg
data16
fcoms
pop
adc
push
mov
out
xor
mov
push
jecxz
mov
fisttps
pop
cmp
stos
xor
jbe
lea
inc
lcall
negl
add
sub
push
test
aam
sub
or
mov
test
adc
imul
imul
outsb
xlat
cmp
mov
add
mov
mov
push
outsb
aam
pop
push
shr
jbe
bound
mov
arpl
fbstp
jno
jb
nop
or
mov
or
cmp
mov
test
ss
and
or
mov
pop
ret
imul
jne
push
add
jae
scas
iret
aad
filds
mov
stos
push
js
mov
data16
pop
push
es
push
push
stos
arpl
inc
into
mov
xor
lcall
shll
xchg
xor
call
mov
pop
int3
xorl
cmp
xchg
xor
inc
xor
mov
xchg
jne
or
mov
and
sub
xor
xor
bound
andb
das
lods
cmp
sahf
clc
bound
push
push
xchg
bound
addr16
lds
cmp
sub
xor
xchg
sbb
mov
out
lret
out
ljmp
repnz
inc
sub
inc
push
jnp
jge
mov
lods
xchg
inc
mov
jmp
lods
cli
sbb
sbb
sbb
cltd
mov
imul
scas
rol
lret
inc
mov
mov
pusha
les
jbe
xchg
sub
dec
dec
sub
push
mov
adc
les
test
dec
cli
outsb
pushw
jno
das
into
nop
fadds
movsl
dec
dec
sti
and
and
jne
sub
mov
sub
sub
pop
cmpsb
sub
mov
psrld
ja
lock
shll
andl
les
in
mul
sahf
mov
iret
and
inc
adcl
in
pop
das
inc
lods
sub
data16
xchg
cmp
or
mov
add
fsubrl
ffreep
jae
xchg
movsb
dec
xchg
fcoml
lea
fbld
cmp
lcall
mov
pusha
int
nop
jge
data16
dec
fwait
dec
mov
aam
pop
dec
push
fstpt
gs
mov
push
xor
inc
jle
add
jns
test
xor
popf
jbe
add
inc
mov
push
sbb
call
xor
jecxz
arpl
mov
nop
ret
jns
loopne
arpl
mov
insb
aaa
push
pop
insl
xchg
sub
pop
push
bound
push
stos
into
push
out
cmp
stos
push
movsb
iret
stc
es
insl
shl
jecxz
jo
push
in
sub
xor
decb
cmp
dec
add
cmp
sub
sbb
repnz
mov
jne
push
lcall
pop
dec
push
sbb
scas
pop
lock
pop
adc
mov
lahf
xor
in
cmc
lahf
addr16
sahf
lods
pop
lds
xlat
pop
push
push
jo
or
sbb
and
inc
loope
sub
push
lcall
mov
sahf
pop
mov
test
sbb
fnsave
xor
xorb
push
popf
orl
xor
xor
jle
arpl
fnsave
lock
push
les
imul
int3
nop
cli
fidivs
andl
mov
dec
add
aaa
sub
mov
and
dec
outsl
cmp
jb
aaa
int
std
shl
sub
ret
jge
repz
cmpsb
mov
sub
cmp
enter
pop
lcall
pop
mov
mov
and
sub
mov
adc
fidivl
or
inc
cmpsb
sbb
inc
mov
dec
testl
cwtl
xor
jb
lods
sti
hlt
mov
loopne
and
dec
pop
ss
dec
ja
sbb
sbb
or
adc
adc
sbb
pop
adcb
or
jge
mov
xchg
ret
stc
mov
sub
dec
xorps
push
cmpsb
sub
out
xor
or
imul
mov
test
sbb
mov
mov
xchg
into
push
mov
and
stos
iret
cmpsl
inc
push
bound
out
in
enter
jmp
and
mov
popf
mov
test
fistpl
sbb
rclb
out
and
pop
fmul
mov
xor
mov
sub
cmp
loope
int
push
ret
inc
jno
pop
std
sahf
scas
inc
rcll
outsl
mov
xor
mov
dec
shl
dec
and
ljmp
movsb
adc
add
push
pop
in
mov
js
mov
ret
out
cld
push
add
sub
test
or
stos
pop
lods
push
ja
ret
cwtl
test
and
push
dec
inc
sbb
jb
rolb
lods
add
sbbb
pushf
in
aaa
xor
into
sbb
jecxz
imulb
leave
jo
out
stos
pop
push
in
dec
mov
lcall
pop
sahf
sbb
pusha
mov
test
sub
out
aas
push
nop
cmp
daa
mov
add
shlb
iret
sub
sbb
xor
jno
in
daa
ss
out
test
dec
adcb
xchg
repz
sub
leave
jmp
jmp
pop
sbb
or
rcr
mov
fdivrl
and
movsb
jle
push
xchg
and
add
push
xor
rcll
pop
pop
dec
popf
push
loope
push
rcll
jo
in
mov
cmp
sub
add
and
push
mov
movsb
dec
lods
sbb
inc
test
repnz
jns
lods
sub
and
out
mov
lea
or
pop
or
add
jb
mov
jmp
mov
jmp
push
in
mov
test
insb
push
in
loop
dec
fcmove
shlb
mov
and
test
dec
sub
mov
movsb
decb
mov
or
adc
lock
scas
add
icebp
mov
mov
mov
out
ret
dec
mov
inc
std
push
push
sub
jnp
ljmp
pop
push
or
xor
insb
in
stc
pusha
push
clc
adc
cmpsb
sub
sbb
sub
inc
xor
xchg
fcomps
adc
fisttpll
incb
mov
insb
mov
sarl
out
or
into
inc
push
and
movsb
movsl
out
jb
stos
das
jge
mov
popa
adc
mov
std
in
mov
or
call
xchg
xchg
sub
outsb
clc
sub
jae
ret
push
dec
add
leave
push
jno
popf
dec
push
pop
adc
sbb
fdivrl
push
ljmp
sbb
rep
test
imul
and
dec
mov
mov
aaa
adc
ficompl
sbb
enter
movb
sti
ret
jo
mov
fcmovu
sub
dec
sub
dec
test
mov
sbb
push
enter
insl
fcoml
and
enter
xor
into
orb
aaa
inc
shll
pusha
cld
lods
xchg
mov
cmc
ljmp
or
push
push
insb
jecxz
movsb
popf
mov
mov
mov
int3
outsb
xchg
cmp
lods
int
cmpl
add
fdivrs
out
pop
mov
mov
rolb
mov
adc
fs
or
orb
mov
in
mov
mov
cmp
mov
push
subl
test
cld
aad
hlt
test
repnz
rcll
icebp
out
mov
add
nop
inc
shr
add
cmp
push
xor
fidivl
popf
pop
iret
xchg
sub
xchg
stos
pushf
mov
rolb
mov
lock
xor
cmc
cmp
sub
jo
sub
lods
stc
ja
pop
mov
gs
xor
mov
andl
jbe
iret
push
pop
pop
inc
ss
mov
nop
jns
jecxz
and
mov
lock
movsb
jo
push
imul
or
outsb
mov
jmp
scas
xorb
mov
push
inc
lds
adc
ror
mov
dec
int3
jno
repnz
push
stos
mov
mov
insl
xor
out
adcb
popf
in
dec
enter
jnp
push
aad
inc
call
iret
push
lods
jnp
icebp
or
cmp
sub
data16
aas
cwtl
sub
and
mov
hlt
notb
jno
push
clc
pushf
pop
imul
xlat
jns
sbb
popa
lods
cmp
jp,pn
mov
int3
pop
xchg
sarb
jns
jbe
outsw
out
stos
popa
movsb
adc
cmp
pop
mov
or
lcall
push
lock
leave
sbb
loop
sub
push
mov
and
decl
cmp
outsb
jns
sti
dec
ljmp
dec
xchg
aam
add
cmpb
jns
ljmp
sub
movsb
mov
out
cmp
sub
outsl
sub
dec
lret
or
sarb
adc
mov
jle
scas
or
sbb
cmp
iret
scas
fsubl
mov
mov
mov
add
out
lea
movsb
pusha
add
cli
repz
jecxz
jmp
sbb
insl
ljmp
and
push
movsb
sbb
cwtl
mov
gs
dec
push
or
das
fsubl
mov
sarb
out
sbb
jno
mov
enter
int
movsb
lcall
sbb
sub
lock
adc
mov
mov
ret
dec
movsb
bound
xchg
out
xor
dec
pushf
jns
imul
jns
lret
negb
into
push
push
jno
scas
add
mul
in
mov
insl
xchg
fs
adc
cmp
sbb
cmp
nop
pop
dec
test
out
pop
add
adc
xchg
mov
jbe
sub
sub
mov
mov
jmp
sub
test
int3
jnp
mov
bound
or
jbe
cmpsb
mov
ljmp
loopne
pop
test
xchg
xor
add
dec
push
bound
mov
sub
lcall
jno
mov
pop
push
imul
jno
in
cmp
mov
xchg
rcr
out
icebp
rol
test
xchg
or
hlt
adc
jecxz
sbb
xorl
mov
jmp
pop
enter
mov
jp
scas
nop
mov
loope
hlt
mov
cmovae
sub
pop
shlb
and
push
mov
stos
jb
popf
popf
jns
dec
push
icebp
sbb
mov
inc
push
pop
scas
fdivl
xchg
icebp
xchg
lret
or
lcall
imul
out
pusha
bound
and
mov
mov
lods
pop
dec
jmp
cli
stos
sahf
mov
popf
mov
inc
xchg
repnz
mov
lods
imul
out
add
add
cmp
mov
ficompl
or
mov
add
dec
loope
dec
pop
jge
fadds
xor
sbb
out
repnz
cltd
ja
dec
lret
ja
ss
lods
lods
xchg
test
leave
dec
jb
cmpsb
and
sub
mov
movsb
lea
les
jecxz
je
dec
mov
movsb
pop
push
mov
pop
adc
sub
or
sub
iret
adc
jb
sbb
mov
dec
test
notb
push
adc
xchg
mov
xor
add
sub
or
inc
push
jae
mov
loopne
sbb
pop
popf
icebp
loopne
mov
inc
mov
jb
popf
cmpsl
mov
repz
repz
mov
push
mov
mov
push
xchg
sbb
or
lahf
mov
dec
or
push
ss
xlat
jge
int
movsb
add
sbb
jge
ljmp
mov
sahf
imul
cmp
cs
sub
mov
lahf
jns
cmpsl
lret
mov
iret
xor
and
or
test
stc
or
jmp
mov
xor
pop
int3
dec
jnp
cld
stos
adc
jb
jg
push
cmp
outsl
outsb
repnz
sub
adc
add
bound
fsubrs
out
xchg
mov
jne
add
les
out
pop
dec
hlt
mov
jns
xchg
push
or
fsubrs
imul
xchg
xor
jae
xor
sub
push
sahf
loop
cld
sub
xchg
mov
sbb
add
lcall
test
rcll
dec
or
fdivrs
sarl
mov
xchg
pop
hlt
out
push
cmpsl
jge
or
shlb
iret
xor
lea
add
jb
inc
mov
inc
xchg
dec
mov
popf
shrl
jecxz
dec
sub
mov
xor
icebp
xchg
sub
sub
dec
icebp
cwtl
jae
sbb
movsb
repnz
icebp
jp
jg
dec
sub
in
testb
sbb
pop
jb,pt
je
jmp
push
popf
mov
mov
jns
aad
pop
aaa
pusha
sub
pop
inc
cmpsb
ljmp
movsb
stos
mov
arpl
mov
ljmp
cmc
pop
out
in
jno,pn
mov
push
imulb
dec
jle
cmpsl
pop
jp
push
out
cli
sahf
push
sbb
push
rolb
aas
idiv
negl
shlb
sbb
sbb
pop
sub
movsb
add
push
aaa
mov
inc
loopne
enter
inc
sub
cmpsl
popa
mov
stc
into
and
pop
ret
adc
cmp
jb
push
add
sbb
jnp
mov
mov
in
mov
out
in
imul
fdiv
push
pop
popf
adc
popf
pop
lods
jmp
imul
mov
inc
mov
dec
insb
shr
fld1
rclb
fwait
sub
jo
mov
ret
dec
cwtl
inc
lds
repz
dec
xchg
adc
enter
insl
xchg
adc
stos
jbe
fcmovu
mov
das
repnz
inc
insl
bound
cmpsb
add
icebp
inc
out
mov
test
stos
nop
pop
add
xchg
test
jae
xchg
mov
or
ja
in
jg
mov
xchg
push
ljmp
cmp
into
shlb
gs
addr16
test
nop
jno
cld
mov
cmp
cmc
mov
xchg
pinsrw
push
bound
aaa
mov
jb
mov
rorl
mov
in
lret
pop
xor
fld
popf
mov
and
push
pop
test
push
mov
inc
outsb
cld
les
clc
addr16
aam
cltd
push
movsb
dec
in
sub
int
sub
push
lock
ljmp
xor
push
sbb
jp
or
xchg
das
mov
dec
adc
enter
add
add
lcall
xor
bound
sub
push
cld
stos
int
lods
ret
add
test
cli
pop
inc
push
outsb
clc
roll
mov
int
sbb
loope
pop
lds
cmp
mov
movsl
and
lods
push
sbb
ret
jb
out
jmp
jae
lods
xor
jb
movsb
test
testb
aam
dec
adc
mov
jns
mov
mov
push
cmp
popf
fistl
aad
mov
repnz
xchg
pusha
xchg
xor
jne
add
jmp
jl
jbe
cmp
pop
xor
adc
inc
or
or
mov
push
push
cmp
sbb
sbbb
ds
inc
mov
shll
push
mov
xor
pusha
test
pop
jp
or
mov
test
mov
iret
adc
xchg
test
in
dec
jb
cld
xchg
popa
call
xchg
ljmp
inc
add
cwtl
cld
dec
call
inc
rep
lods
xchg
push
jge
jge
in
rorl
sbb
jp
pop
pop
je
sbb
push
push
add
fsubl
dec
xchg
lahf
out
mov
incb
lods
pusha
xchg
jne
xchg
dec
mov
cmp
and
or
fnstenv
ds
pop
add
mov
subb
in
inc
push
xchg
bsr
jb
loope
jbe
leave
mov
ja
push
dec
add
sbb
mov
gs
xchg
repz
xor
lret
in
mov
cmp
inc
inc
mov
xchg
ret
repz
adc
mov
mov
in
arpl
mov
mov
push
add
mov
mov
imul
or
push
jns
dec
js
sar
stos
lods
xchg
mov
out
push
clc
outsb
mov
lods
ds
pusha
insb
add
popf
ljmp
sub
je
mov
mov
pop
push
rcrb
mov
and
xlat
cmpl
cmpsb
fcom
outsl
cld
test
jne
dec
orl
loopne
jecxz
call
push
inc
data16
sub
or
insl
lret
dec
ret
xchg
xor
sbb
scas
mov
jns
movsb
mov
adc
xchg
push
xor
fsubrs
gs
jbe
push
shrl
push
aaa
out
mov
or
stos
sbb
adc
cmp
idivb
adc
mov
out
mov
cmp
movsb
sbb
lea
test
xchg
add
out
pop
dec
test
jb
push
sub
or
sub
les
or
stos
loopne
pushf
and
lods
mov
dec
jmp
punpckhwd
pop
sbb
rcll
inc
das
xor
push
xchg
inc
mov
jnp
cld
mov
pushf
pusha
xchg
lds
cs
loop
test
imul
mov
and
inc
pusha
or
xchg
jne
xchg
test
sub
xchg
jb
fldcw
sub
lods
ret
mov
scas
add
pop
xorb
iret
adc
ss
jns
gs
lret
ret
push
lods
sbb
jecxz
subb
cwtl
push
scas
nop
sub
mov
sti
lcall
fwait
movsb
jge
js
lock
ljmp
xor
dec
in
pop
sbb
sub
xchg
push
inc
jge
in
negb
shll
jl
push
add
pop
xlat
shlb
xchg
lods
pop
xchg
and
ds
mov
fsts
xchg
mov
lea
jb
push
cwtl
iret
enter
mov
test
fwait
sub
shr
jle
mov
sbb
out
enter
or
mov
sub
mov
pop
sub
mov
call
mov
maskmovq
idivl
push
cmp
fs
lods
dec
mov
std
mov
fucom
mov
xchg
inc
xlat
scas
cmc
mov
testl
sbb
call
divl
cld
lods
cli
mov
pop
aam
aam
nop
cmpsb
or
fsubs
mov
icebp
ljmp
mov
sbb
cli
fldt
jno
ret
sub
sub
or
int
mov
jmp
push
push
lea
jns
pop
mov
xor
push
inc
push
pop
icebp
fwait
out
call
loop
dec
bound
xchg
jge
sub
inc
mov
adc
and
sub
clc
psrad
stc
jecxz
in
inc
xchg
sbb
mov
pop
loop
lea
loope
mov
popa
sbb
add
pop
insl
mov
jl
js
movsb
push
push
jno
int
push
pop
pop
pusha
movsb
adc
in
jns
xor
fcoms
mov
sub
rcr
imul
sbb
lods
push
in
cmp
sub
mov
pop
mov
pop
insl
or
popf
add
adc
and
and
movsl
push
jle
sbb
cmpsl
mov
push
ss
pop
jge
ret
fsubr
jb
xchg
clc
roll
and
rorb
cmpb
cmp
xor
pusha
rcr
xor
mov
lcall
jns
test
mov
pop
pop
les
mov
pop
jbe
mov
inc
jmp
jno
out
ficompl
ss
mov
sbb
adc
and
aas
fstps
jge
mov
lds
mov
push
scas
push
test
into
arpl
xchg
dec
push
lret
mov
adc
pusha
into
inc
push
iret
lds
push
scas
cmp
iret
jo
in
jbe
adc
jb
or
in
dec
xor
push
push
xorl
data16
inc
cltd
mov
lock
jmp
add
pop
imul
sbbl
ret
cli
imul
sub
fisttpl
add
dec
insb
imul
xorl
mov
cmpsb
mov
pusha
mov
js
mov
sbb
xor
push
pusha
pop
insl
push
pop
mov
push
loopne
repz
gs
outsl
mov
inc
std
sub
movsb
pop
fwait
mov
ret
lret
and
sub
push
xchg
mov
js
mov
push
xchg
mov
dec
daa
dec
sub
dec
mov
and
jae
cltd
nop
clc
enter
leave
push
jb
push
cli
and
test
push
arpl
pop
dec
sub
mov
mov
inc
add
roll
and
pop
rcrl
xchg
fdivp
test
scas
push
lods
and
sti
dec
jne
sbb
or
mov
adc
mov
cmp
sbb
out
cli
stos
scas
mov
adc
out
es
xor
and
in
fwait
movsb
pushl
or
jle
cs
dec
push
test
mov
jbe
outsl
xor
jbe
repz
aam
sub
push
aad
xor
mov
in
ret
mov
ret
dec
sbb
and
push
mov
push
cld
jp
test
jge
mov
bound
fs
mov
lcall
aam
push
sub
or
push
sub
jg
sub
mov
mov
test
mov
mov
mov
dec
cmpsb
mov
ret
scas
gs
pop
mov
mov
jo
and
pusha
fwait
add
aam
xchg
movsb
dec
cld
ljmp
stos
jo
push
cmp
add
inc
pop
mov
and
and
mulb
test
and
stc
clc
enter
call
xchg
out
pop
and
pusha
mov
imul
and
lods
loope
sarb
call
mov
sub
pop
push
pop
sub
scas
stos
ljmp
lcall
scas
cmp
insb
fcompl
adc
xor
repz
lods
fsubrs
sahf
cltd
repz
xchg
mov
stos
jnp
xor
mov
rol
into
cltd
mov
mov
inc
pop
lods
jmp
popa
dec
jbe
hlt
adcl
mov
add
ljmp
pop
sub
jp
xchg
es
es
je
insb
sbb
mov
pop
mov
cmp
into
sub
pop
imul
jb
sub
mov
adc
inc
inc
push
hlt
dec
fwait
mull
mov
mov
inc
sbb
ds
pop
pusha
subl
inc
sub
mov
js
pop
in
outsb
ss
dec
cmp
push
jecxz
stc
repz
scas
out
ljmp
dec
test
cmp
add
shrb
mov
adc
popl
bound
ret
xchg
or
push
jbe
aam
fcompl
xor
xor
cltd
xchg
inc
ljmp
rorb
push
lods
hlt
shlb
dec
mov
jmp
mov
jmp
and
lods
scas
nop
out
leave
call
sub
dec
outsl
mov
scas
jp
lods
lods
cmp
mov
in
xor
ret
add
insl
sub
movsb
push
xchg
push
sbb
xor
cmp
ds
jge
sbbb
outsl
jne
stc
mov
mov
lcall
xor
cmp
cmp
push
and
movsl
or
adc
subl
sub
xor
dec
cmc
xor
push
insb
aam
mov
push
xor
xchg
mov
or
push
jmp
pop
mov
xorl
adc
add
cmpsl
outsb
add
ds
in
ret
popa
enter
xor
adcb
xor
xchg
scas
imul
cmc
xorl
pop
xor
adc
out
fistps
aas
or
sbb
lret
xlat
movsb
sbb
or
cmp
inc
sub
call
inc
stos
xchg
adcb
and
mov
push
ljmp
xor
repz
push
cmp
into
jb
mov
aad
jbe
inc
and
and
test
and
mov
mov
jle
fsubl
fidivs
xlat
popa
es
cli
loopne
jbe
cmp
sbb
lcall
mov
push
ss
jl
sbb
pop
stc
leave
pop
pop
popaw
aam
outsl
mov
loope
lods
mov
sti
cmp
sahf
aad
repnz
jns
loope
imul
movsb
sub
sub
inc
push
insl
rcrl
or
mov
push
sub
xchg
pinsrw
fldcw
lods
repz
jns
sub
cld
scas
scas
repnz
into
jg
rorb
ret
dec
push
insl
sbb
sbb
fsts
xchg
pop
push
mov
jge
jle
pop
jle
shrl
lcall
ljmp
xor
pushf
add
sub
gs
mov
lcall
mov
adc
movsb
repnz
pop
sub
cmpsb
or
mov
fmul
mov
push
sub
loopne
fmull
arpl
mov
bound
ret
iret
push
jne
js
dec
mov
adc
pop
mov
testl
sbb
outsb
andl
mov
dec
push
nop
sbb
lods
xor
gs
lret
pop
into
mov
fsts
pop
xchg
fwait
and
test
scas
sahf
mov
fwait
and
inc
repnz
cmp
movsb
sbb
fwait
and
add
sub
movsb
aad
push
shll
repz
call
xor
xor
sbb
or
cs
mov
jb
movsb
stos
xor
or
les
int3
mov
gs
push
mov
lea
fstpl
and
adc
pop
mov
ljmp
add
cmp
pusha
mov
jno
sub
mov
mov
jge
cmp
inc
enter
lods
sub
ret
sub
adc
xchg
cmp
dec
outsb
mov
aam
jae
pop
fwait
mov
aad
sub
subb
ljmp
dec
pop
scas
jne
adc
jnp
mov
mov
call
pusha
sahf
and
scas
aaa
sti
add
scas
ss
mov
jnp
cmp
pop
sbb
call
pop
je
mov
fs
sub
clc
mov
mov
lods
repnz
loopne
and
es
fnstenv
inc
arpl
sub
lcall
in
in
jae
iret
cltd
fdivrs
add
ficomps
adc
imul
inc
cli
push
dec
adcb
inc
mov
adc
jbe
scas
or
dec
xchg
push
sub
mov
mov
das
jge
out
ss
dec
lcall
jp
mov
jno
mov
push
scas
aam
movsb
adc
sbb
push
insb
stos
sbb
leave
out
rcl
ret
jbe
aad
fdivl
mov
stos
ficoml
shr
xchg
mov
neg
sub
int
imul
cmpsl
decb
push
xbegin
cwtl
mov
ja
mov
test
mov
arpl
cmpsl
es
lods
push
stos
popf
bound
loop
insl
jnp
dec
or
aad
ficoms
push
outsl
pushf
and
insb
adc
pop
out
scas
and
pop
out
pop
not
lods
dec
adcb
ret
sub
movsb
xchg
mov
pop
or
dec
lds
cld
sbb
mov
movsb
adc
mov
or
in
in
add
cmp
pop
shll
mov
std
mov
sbb
add
dec
cs
cli
sub
dec
push
dec
arpl
mov
adc
out
jns
mov
push
and
push
mov
daa
sahf
dec
shlb
lret
stos
pop
push
sarb
sub
sub
sub
jns
mov
loope
in
aas
lds
scas
or
sub
cmp
test
ljmp
dec
sbb
xorb
pop
xchg
push
pop
xchg
xor
mov
mov
mov
into
or
cli
fwait
test
jb
add
push
outsl
shr
lret
jae
stc
movsl
loope
dec
sahf
lods
pop
movsb
push
into
loopne
int
cmpl
dec
push
mov
add
xor
sub
dec
enter
xchg
clc
popa
mov
shl
cmpsb
rorl
loop
push
sbb
bound
int
xor
dec
xchg
jo
fninit
xchg
lods
dec
dec
fs
jnp
jp
out
repnz
lods
lock
adc
mov
add
pop
mov
add
lcall
inc
subb
sti
cltd
pop
into
xchg
lcall
dec
iret
bound
sbb
stc
sub
int3
jmp
imul
pusha
insl
xorl
cli
and
js
loop
xor
mov
aad
xchg
mov
test
xor
aas
mov
xor
dec
mov
inc
fiaddl
mov
stos
cmp
std
mov
scas
xchg
cmc
jmp
outsl
mov
movsl
jb
adc
cld
xor
int
jg
pop
add
mov
repnz
sbb
xchg
add
xchg
push
lds
adc
in
test
fwait
stc
js
mov
xchg
or
imul
inc
in
cmp
inc
jb
call
in
scas
xchg
repz
aam
or
call
ss
sub
adc
cmp
jne
mov
ret
cwtl
imul
mov
xor
mov
out
aaa
stc
into
mov
push
cltd
jl
sub
cmp
inc
push
mov
xchg
out
jmp
shrb
cs
adc
sahf
adc
mov
mov
shll
rcr
mov
bound
sbb
call
mov
sub
and
sbb
pop
cmp
xor
cwtl
xchg
jnp
sahf
into
ljmpw
repz
or
xchg
sub
pop
mov
sti
enter
out
push
call
add
cmovns
ljmp
js
jnp
xchg
sbb
pusha
adc
jne
push
sub
test
jne
cmpsb
jo
fidivl
hlt
push
push
test
or
pop
movsb
int3
mov
jmp
jo
inc
mov
packssdw
sbb
sub
fldt
xchg
mov
jecxz
hlt
fnsave
stos
dec
popf
sbb
hlt
fadds
out
add
sub
aad
push
mov
jmp
pop
mov
insl
in
call
dec
icebp
loope
mov
sbb
dec
xchg
adc
pop
ss
pushw
das
push
xor
aaa
stos
test
pop
xchg
jmp
call
data16
fstpl
xorb
sub
out
xor
jnp
cmpl
pusha
or
xor
mov
les
sbb
jmp
mov
mov
sub
xchg
movsb
aad
sbb
iret
pop
sbb
push
out
stc
push
jae
stos
into
mov
add
xor
cmp
mov
sub
fldt
pop
xor
xchg
sbb
ficompl
sub
push
jb
shlb
and
and
dec
icebp
movq
lock
mov
into
pop
jbe
jno
outsl
std
scas
jmp
daa
xor
sbb
add
jmp
mulb
jne
inc
mov
out
stc
push
lds
and
fisubrs
sahf
jbe
inc
std
stos
add
ds
xor
bound
int
lock
xchg
ret
push
and
sub
inc
cld
sub
push
jo
mov
subb
xor
xchg
clc
mov
rolb
push
xchg
inc
pop
pop
sub
shlb
mov
repnz
out
jmp
dec
add
fldt
dec
ret
repnz
cs
jae
stos
cmpsl
cmpsb
lahf
sub
xchg
icebp
packsswb
pop
mov
and
push
xrelease
or
lds
push
test
jmp
icebp
sub
pop
addr16
inc
mov
test
and
jno
add
out
mov
jbe
and
ss
lods
leave
in
xchg
or
jnp
dec
dec
pop
in
inc
cmpsb
jb
xor
mov
pop
aaa
in
sub
ficompl
sub
cmp
xor
std
xchg
and
push
mov
mov
movsb
outsb
cmp
push
lock
xchg
add
push
shll
lods
lret
adc
pop
sbb
movl
lock
outsl
cmp
adc
loope
sub
and
xchg
cld
mov
dec
xor
push
je
jle
xor
and
repnz
test
jmp
adc
xor
sub
dec
sbb
cmpsb
test
mov
fs
push
call
jnp
leave
or
cmp
push
and
call
cli
andl
adc
jecxz
mov
out
cmpsl
notb
movsb
test
jno
mov
mov
pop
je
fs
imul
sub
pop
push
push
into
es
je
in
mov
movsl
add
mov
loop
xchg
xchg
scas
imul
mov
dec
incl
dec
sbb
sbb
mov
imul
pop
sbb
cmp
jbe
jbe
jmp
add
adc
mov
adc
scas
cmpl
mov
mov
ficoms
xchg
mov
sbbl
rcrl
xorb
cmp
xchg
adc
hlt
push
mov
mov
push
push
mov
add
and
sub
fs
mov
andl
int3
adc
sub
pusha
mov
fmull
hlt
call
scas
sub
ljmp
xchg
pusha
mov
or
pusha
lea
or
jb
cmp
lret
stos
ret
cltd
sub
mov
pop
inc
lret
xor
lret
and
inc
mov
ret
scas
sub
adc
lock
call
ret
cld
fdivs
sarl
lods
or
xor
mov
bound
push
inc
xor
jge
dec
in
mov
fs
ss
or
inc
jbe
call
pop
mov
lcall
push
jbe
add
cmp
jecxz
and
jne
mov
and
mov
cmp
adc
mov
scas
scas
loopne
cmpb
repnz
dec
ret
out
repz
pop
iret
ficoml
aad
lea
pop
in
mov
mov
push
push
ret
mov
lcall
mov
sbb
into
das
lods
ja
mov
gs
xor
push
hlt
faddl
cwtl
mov
or
cli
lcall
mov
les
inc
mov
mov
or
add
fdiv
into
loope
push
mov
mov
ss
rcrl
mov
lods
and
jp
cli
pop
xor
mov
faddp
or
lret
xchg
in
out
fwait
mov
add
push
mov
pop
les
mov
leave
dec
ds
or
sub
pop
bound
rorb
sub
sub
lea
lods
xor
mov
std
mov
enter
sbb
pop
loope
sbb
out
dec
ds
lods
cmp
jp
sub
addr16
sub
iret
loopne
aad
sahf
push
cmp
repnz
jne
test
pop
pusha
push
fwait
inc
repnz
cmp
mov
imul
pop
mov
pusha
sbbb
push
pop
xor
movsb
dec
and
hlt
ret
push
stc
out
xchg
cmpsb
xlat
cmp
cs
sbb
cmpsb
add
cmpsb
jb
cli
mov
cmp
push
call
pop
mov
sbb
lret
les
jb
gs
dec
xor
ficoms
popa
bound
jne
enter
pop
popf
lret
xchg
mov
adc
adc
xor
ljmp
mov
push
xchg
or
jno
xchg
lods
sub
and
inc
rcr
or
dec
test
inc
push
std
mov
fstps
mov
xchg
movsb
sti
inc
shl
enter
sub
mov
lods
insl
mov
or
gs
push
mov
aad
xor
out
xor
ljmp
lock
mov
jle
inc
out
mov
cmc
cmp
jle
mov
out
mov
xchg
jmp
inc
mov
lods
mov
push
sub
mov
sub
jb
mov
pop
jle
jne
cmpsb
push
stc
test
pop
push
xlat
shll
mov
mov
jbe
add
iret
inc
and
icebp
xor
movl
pusha
jnp
adc
loop
sub
loopne
mov
xor
xchg
ljmp
das
movsb
lods
mov
xorl
fcmovbe
pop
cmp
mov
pop
xor
sbb
sbb
sbb
loope
push
stos
scas
pop
or
mov
xchg
and
jno
and
das
mov
pop
xchg
push
lcall
sbb
leave
mov
mov
mov
insl
pop
xor
dec
sub
ficomps
stos
hlt
push
and
cmp
sahf
or
outsl
bound
stos
and
jge
ret
and
add
cld
cltd
and
cmp
scas
outsb
pop
out
mov
cmp
mov
lods
sub
fisttpl
aam
incl
push
scas
scas
leave
cmp
xchg
nop
mov
xor
fs
iret
push
mov
js
dec
imul
and
cld
pop
jle
pop
out
icebp
cmp
push
mov
or
xchg
movsb
inc
int3
dec
sub
aaa
or
pop
push
loopne
int3
and
cs
inc
cltd
enter
shrl
js
mov
push
push
mov
jp
jle
out
add
clc
push
sub
call
dec
ss
in
sbb
les
xchg
dec
xchg
or
mov
dec
out
dec
mul
push
fwait
cmp
gs
add
sbb
bound
test
outsl
and
adc
add
std
inc
outsl
lock
imul
lods
jp
outsb
add
adc
jg
sahf
adcl
jnp
jns
push
repnz
loop
ss
mov
sub
out
xlat
je
mov
int
in
and
jge
mov
sbb
jbe
hlt
jo
pop
enter
inc
or
adc
xor
roll
xchg
inc
sub
add
push
dec
bound
cmc
dec
or
lods
lret
repnz
movsb
jg
mov
add
movsb
mov
xor
sbb
out
icebp
mov
in
ret
scas
jl
mov
insb
xchg
les
jbe
iret
push
xchg
lds
mov
xchg
pop
push
mov
push
or
data16
divl
pop
jb
out
or
pop
mov
xchg
enter
pop
cmpsl
repz
push
sbb
xchg
ljmp
mov
mov
add
mov
pusha
fwait
sub
ffreep
sub
sub
aad
fcoms
push
xor
push
imul
cmpsb
mov
mov
mov
sahf
sub
push
lahf
sub
mov
inc
mov
adc
loop
repz
mov
divl
inc
loop
sub
scas
repz
jbe
loope
cltd
ljmp
dec
mov
cmp
jg
mov
jb
dec
insb
outsl
xchg
dec
popa
inc
xchg
sbb
scas
loopne
pop
mov
xor
lea
push
out
outsb
cld
push
mov
xchg
push
inc
rolb
sub
pop
ret
stos
das
sarl
stos
scas
je
push
lods
push
mov
add
mov
dec
adcl
popf
sub
ljmp
out
or
and
adc
cmp
rcrl
jecxz
movsb
push
stos
xor
scas
inc
xchg
xor
sahf
mov
xor
pusha
or
mov
ret
lret
jo
fbstp
xchg
and
rclb
popa
in
shrb
les
mov
sti
mov
std
or
and
subl
sub
arpl
jbe
sub
lods
test
cwtl
sbb
mov
dec
mov
lret
xor
sqrtps
push
cmc
jg
loope
jbe
cmpl
xor
sub
mov
mull
movsb
int
sbb
ftst
inc
add
jb
lods
sbb
xchg
into
xchg
dec
mov
lret
aad
pop
mov
loope
rorb
lods
fcomps
mov
sti
imul
pop
jle
push
insb
mov
pop
mov
jae
xchg
and
out
shr
push
xchg
and
sub
push
stos
mov
xchg
mov
pop
mov
xchg
lock
arpl
push
pop
out
das
push
xchg
in
fmull
or
dec
xor
xchg
mov
cmpsb
int3
sahf
cs
gs
mov
jb
rolb
or
cld
mull
mov
pop
cmp
sbb
push
int
shll
adc
mov
shl
mov
jge
loopne
jo
jno
sub
stos
aad
jae
push
inc
lcall
mov
jl
out
mov
mulb
mov
mov
cmp
call
push
les
mov
adc
outsb
mov
jne
arpl
dec
jmp
stos
cwtl
scas
cmpb
fmul
jmp
pop
jb
enter
imul
mov
scas
cld
into
sub
inc
cli
int3
cmpsl
mov
lahf
test
gs
lret
cmpsb
aam
jge
cmp
es
pop
pusha
mov
xor
push
jp
scas
push
xor
sub
xor
les
btc
cltd
xchg
insl
inc
pop
xor
sub
shr
fwait
jecxz
pop
popf
roll
adc
fwait
sbb
test
mov
inc
push
lods
jb
pushf
lcall
lods
add
cmc
dec
mov
xchg
movsl
jo
cmp
cmpsb
xchg
out
sbb
xor
xor
inc
mov
test
jns
out
nop
repz
enter
sub
aam
jns
pop
lods
pop
jbe
push
vpunpcklwd
stos
popa
jb
test
pop
mov
mov
fbstp
xorb
mov
data16
xchg
addr16
mov
cli
lea
jb
or
add
insl
sbb
push
sahf
push
fsubrs
xchg
adc
adc
inc
add
jae
cltd
into
and
outsb
inc
mov
mov
in
jecxz
add
inc
popa
mov
push
add
cmpsl
aad
stos
loope
call
jb
out
dec
mov
push
push
dec
xchg
push
push
ret
sbb
fldenv
ret
mov
pusha
das
into
ja
lods
jnp
mov
andb
jmp
mov
mov
xor
sub
inc
rcrb
push
js
popf
xlat
jmp
push
mov
stos
in
fdivr
push
jp
stos
jbe
inc
fidivrl
cmp
pop
dec
dec
test
mov
mov
fisubrl
push
std
mov
movsl
ret
addr16
xchg
fwait
pushf
mov
das
call
fstl
mov
fsubp
xchg
sbb
xor
das
pop
cmp
ss
jns
enter
jg
jge
lret
jl
adc
cmp
cmp
imulb
rolb
lods
mov
int3
call
fiadds
in
pop
test
inc
movsb
addr16
ret
movsb
push
pop
cld
int
xchg
in
into
je
sub
imul
mov
cwtl
adcl
call
cmp
daa
mov
xorb
lcall
push
push
add
or
xchg
jg
or
outsl
lds
jp
repnz
push
mov
sub
mov
popa
or
jne
je
add
sbb
test
inc
mov
fstps
call
fcoms
rcrb
imul
jge
pop
sub
mov
addl
out
mov
ret
sub
push
js
xor
mov
in
pushf
jno
imul
ret
sbb
pop
fstpt
mov
add
dec
pop
push
fcmove
sub
dec
fwait
andl
and
mov
cs
adc
int
push
push
lret
push
call
or
or
dec
vmread
sbb
mov
xor
cmp
stos
cmc
add
pop
push
inc
movsb
into
dec
in
mov
pop
testl
cmp
stos
mov
outsb
mov
sub
out
inc
bound
mov
fdivrl
push
insl
lcall
les
inc
mov
dec
subb
mov
jae
addb
je
fidivs
dec
lcall
lret
and
adc
mov
repz
or
mov
insb
jg
iret
sysenter
xor
xchg
jns
out
xchg
test
push
in
xchg
pop
push
cmpb
xchg
mov
je
jmp
mov
mov
sub
mov
jl
lods
mov
movsb
test
daa
jb
ret
mov
add
xchg
xchg
push
xchg
repz
xor
push
xchg
call
pop
mov
int3
sbb
in
lods
sbb
sahf
add
test
outsb
jb
dec
push
xor
mov
fiadds
add
dec
decl
cld
shlb
lods
int
xor
lods
cmp
jb
insl
add
sub
xor
dec
lcall
iret
sbb
andb
adc
nop
stc
fildll
inc
cmp
xchg
xchg
out
bound
sub
movsb
icebp
out
int3
das
iret
repz
in
mov
mov
mov
sbb
or
mov
mov
lcall
jns
out
jp
int
pop
ret
push
iret
outsl
outsl
pop
pop
inc
lcall
inc
in
incl
mov
cli
adc
rcll
dec
push
cltd
pop
push
inc
nop
into
stos
inc
sbb
cmpb
enter
push
ds
dec
push
jno
aam
cmp
ljmp
adc
sub
xor
push
sub
cmpsb
sub
cmpsl
mov
and
mov
mov
int
addl
add
jne
mov
jmp
adc
dec
jge
rcrl
mov
xchg
jne
inc
cmpsb
jmp
sbb
sub
push
push
js
mov
daa
lret
enter
xlat
mov
test
mov
cmc
cmpsb
mov
cli
mov
loope
insw
test
lds
jnp
enter
scas
rcr
or
lods
imul
data16
std
aam
lret
mov
repnz
int
xacquire
jnp
adc
int
movsb
test
sub
dec
neg
fwait
repnz
ret
sub
jns
and
jno
shll
cmp
popf
mov
mov
jmp
out
xor
in
insl
test
adc
xchg
xor
incl
mov
adc
mov
repnz
outsl
lcall
lret
inc
icebp
scas
ljmp
jl
test
test
jg
insb
sbb
cltd
decl
insb
jg
or
mov
aam
movsb
les
pop
outsb
dec
mov
cmp
mov
or
stos
ret
stos
mov
sub
push
adc
ffreep
jmp
lcall
repnz
mov
js
aam
adc
mov
stos
arpl
aad
inc
loop
std
pushl
xor
xchg
pop
rcrb
inc
inc
dec
jnp
jecxz
ljmp
ret
sub
push
push
mov
test
fninit
push
jp
rcll
mov
lds
aas
pop
mov
shrl
mov
ds
jle
aam
mov
ret
lods
ljmp
xlat
sub
pop
sbb
faddl
lods
fldl
rcr
xor
mov
notrack
mov
testl
outsb
mov
or
aam
out
icebp
ljmp
loope
mov
inc
push
xor
mov
aam
cmpb
sub
subl
mov
cmp
call
cld
lods
cmc
and
adc
out
push
add
adcb
cmp
cltd
data16
das
jo
loop
pop
sbb
lods
and
lds
mov
in
insb
loopne
cli
sub
sub
jno
fsts
movsb
jbe
pop
pusha
mov
push
pusha
es
sarb
sub
stc
pop
rcrl
dec
sahf
jp
add
push
jb
sarb
mov
mov
mov
sbb
sub
sahf
leave
sub
sahf
lods
xorb
in
outsb
push
xlat
xor
cli
jge
sub
lcall
frndint
adc
movsb
jne
sub
movsl
fmul
test
mov
pop
popa
add
andl
aad
or
and
scas
bound
lds
sub
out
rcrl
into
xchg
sub
adc
lods
cmovge
mov
lods
icebp
shrb
push
adcl
popf
loope
mov
insl
lock
les
mov
xor
sbb
inc
xor
and
les
dec
cmp
sbb
dec
xor
mov
dec
xchg
lods
scas
sub
cmp
push
shlb
dec
lret
inc
xchg
jae
xchg
sub
xor
xor
aas
sub
jae
ficoms
fdivs
stos
mov
jb
dec
pushf
fs
mov
push
mov
sbb
lods
ret
pop
out
xchg
pop
mov
outsb
or
sbb
test
fsubrl
mov
push
pop
mov
adcb
push
xlat
shl
adc
lods
sub
sbb
mov
mov
mov
adcb
test
repz
lret
imul
mov
stc
xorb
sub
ret
loope
mov
shlb
cmp
insl
mov
repz
lods
push
jecxz
lock
loopne
mov
test
inc
fadds
outsl
lods
pop
pop
shlb
push
cmpsb
jbe
leave
cvtps2pd
outsl
addr16
cmp
cmpsb
xchg
and
pop
mov
gs
leave
fcoms
jns
out
movsl
add
sub
lods
dec
shlb
mov
icebp
leave
nop
rorb
xchg
insb
aaa
mov
xchg
pop
xor
int
xor
mov
movsl
aam
mov
jae
cli
jae
mov
jl
lea
pushf
xchg
int
and
fdivp
push
cmp
daa
mov
int3
cmpsl
jb
addr16
push
rcrb
rorb
xor
stos
lret
mov
sahf
sub
lods
add
sub
or
jno
stos
setp
xor
clc
enter
cmp
out
inc
sahf
jae
repz
rcl
lea
add
cmc
nop
fimuls
ret
sub
sub
movsb
jns
jge
lods
add
inc
ret
pop
out
pusha
cmp
lock
or
lea
icebp
lcall
mov
pusha
or
rolb
into
push
in
mov
les
shll
pushf
cmp
call
decb
es
pop
test
out
cmp
pushf
dec
adc
cmc
mov
cmc
jo
mov
pop
mov
mov
movsb
imul
sub
movsb
push
xchg
push
mov
push
clc
push
pop
jne
stos
dec
push
repz
cmp
iret
mov
loop
cmpsb
mov
jmp
packssdw
push
insl
ss
imul
push
jle
stos
jo
mov
stos
jl
jmp
adc
in
push
mov
adc
push
push
lds
xor
or
jecxz
mov
push
stos
mov
loopne
scas
sahf
sub
mov
insl
jb
cmp
or
push
lods
mov
in
das
mov
sbb
push
test
xchg
test
cmp
cmpb
xchg
mov
and
cmp
call
sub
bound
out
dec
inc
or
shrb
lcall
jbe
mov
fldz
mov
inc
aad
out
jge
adc
lods
fdivr
jecxz
testb
inc
test
sbb
loopne
inc
pop
fucomip
jmp
jmp
movsb
cmp
imul
into
enter
sbb
es
addr16
push
sarl
xchg
lods
out
repz
and
stc
inc
inc
and
movsb
cwtl
out
push
in
ror
add
xor
xchg
lret
and
out
push
mov
jb,pn
jecxz
iret
mov
add
push
and
jecxz
lds
arpl
mov
xor
xchg
int3
test
fldenv
xchg
scas
mov
divl
xchg
imull
jnp
jnp
jb
cmp
shlb
inc
cmpsb
pop
outsb
setno
idivl
test
outsl
add
mov
aaa
push
cli
mov
dec
iret
mov
mov
cld
push
lds
sbb
mov
xor
or
cmp
nop
std
test
imul
scas
scas
loope
mov
fs
mov
outsb
push
and
call
cmp
mov
pop
int
movsl
dec
bound
inc
aad
push
jo
jb
inc
jns
and
sub
xchg
loop
bound
hlt
out
xor
mov
jbe
lods
mov
decl
aam
data16
or
and
js
mov
cltd
fs
sahf
xchg
mov
aam
fs
movsb
pusha
pushf
xchg
or
jle
sbb
inc
mov
xor
xor
bound
movsb
cs
roll
cld
shrl
xlat
and
dec
xor
dec
sarb
add
cwtl
into
movsb
fcoml
adcl
test
popa
cmp
scas
sub
xchg
push
sbb
adc
pop
or
mov
xchg
jno
add
bound
add
icebp
sbb
or
and
jbe
jns
mov
lods
inc
in
test
stc
xchg
bound
mov
pusha
and
shlb
fnstcw
push
jnp
call
sti
mov
icebp
mov
mov
xor
add
rclb
sbb
inc
fcmovne
push
mov
cs
mov
cli
pop
insl
insb
ret
fstpt
lods
lret
mov
jle
aam
push
sti
test
in
xchg
aaa
hlt
call
xchg
icebp
mov
dec
repnz
jmp
das
sahf
stos
enter
test
mov
xor
pop
pop
adc
jmp
shrl
mov
sbb
test
jb
xchg
pop
cmp
mov
imul
mov
pop
scas
pop
fildll
push
inc
mov
inc
push
jnp
adc
cmp
xchg
sub
bound
mov
add
orl
movsb
lea
shlb
andb
in
mov
fsts
pop
sub
lods
push
push
movsl
ret
popf
outsb
jnp
lods
inc
call
test
xchg
ds
outsb
repz
int
shr
push
es
test
divb
idiv
push
mov
bswap
sub
pusha
pop
sub
popa
cmpsb
mov
lods
clc
ljmp
ss
lret
daa
push
hlt
shr
out
add
shl
subl
std
cmp
mov
in
jecxz
jb
mov
push
mov
lods
jge
les
adc
xor
cli
push
jp
adc
mov
in
adc
mov
lret
xor
imul
pop
rcll
js
flds
mov
push
mov
in
daa
icebp
mov
mov
stos
ret
test
push
adc
and
mov
icebp
dec
xchg
cmp
test
xor
mov
addr16
lea
dec
xor
cltd
sub
movsb
ss
movsb
or
sbb
cmpsb
mov
ss
fistpl
es
rcll
mov
subl
std
popf
scas
jbe
xor
or
jle
add
in
lods
enter
sub
filds
mov
jne
pop
aaa
cmp
ficoml
jbe
lods
repnz
arpl
or
jb
int
push
sbb
dec
push
call
and
pop
test
pop
aad
into
sub
adc
fidivl
lock
xor
adc
add
jo
xor
cmovne
repz
inc
addb
pop
insl
or
push
insb
test
mov
pop
test
jbe
xchg
js
ljmp
test
test
push
adc
mov
stos
or
sbb
ret
shll
or
dec
out
stos
sarb
lcall
cmp
movsb
cmp
dec
loop
out
call
push
lods
aam
sete
cmpsb
pop
insl
cmp
jb
mov
add
jmp
ljmp
mov
scas
sub
dec
mov
or
cmp
and
scas
jnp
jno
pop
sub
or
cwtl
adc
sbb
sbb
cltd
cmc
mov
lods
je
int
add
das
xchg
jbe
inc
in
xchg
or
dec
push
pushf
adc
mov
or
sub
es
pushf
sti
dec
cmp
call
or
sbbl
je
xor
jb
out
mov
mov
les
or
stos
inc
iret
vpcmpgtb
hlt
inc
xchg
and
cli
adc
mov
add
icebp
pop
cltd
or
loope
mov
or
pop
outsb
sti
push
stos
enter
movsb
jge
hlt
mov
lcall
shll
lahf
mov
call
stc
stos
sahf
outsl
inc
movsb
add
adc
xor
mov
jo
enter
jne
sub
adc
nop
lods
cwtl
xchg
gs
sbb
and
pop
movsb
imul
mov
inc
dec
mov
fdivrs
data16
lret
lret
dec
pop
fiadds
out
mov
add
xor
fbstp
cmp
fidivl
call
imull
push
nop
ja
jo
into
jp
push
fisubl
pop
mov
sbb
mov
inc
pop
mov
fcomi
fsts
jmp
or
inc
jb
pop
loop
mov
cmp
sbb
xor
sub
mov
stc
pop
xor
push
xchg
icebp
outsl
mov
dec
adc
xchg
push
pop
mov
je
frstor
sub
les
hlt
lods
shll
adc
enter
mov
push
mov
dec
out
mov
cmp
outsb
popl
stos
dec
cmpl
adc
pop
fwait
cmpsb
insb
lcall
icebp
movsb
cmp
jecxz
add
das
ljmp
mov
xchg
mov
xchg
dec
sbb
mov
push
aad
clc
sbb
movsb
sub
cs
push
sbb
and
adc
dec
out
stos
or
out
mov
sub
push
fstpt
fyl2xp1
mov
sbb
jg
mov
test
popf
xchg
shr
push
outsb
fcmovu
adc
insl
cmpsl
pop
mov
loopne
mov
das
ret
mov
xchg
add
ljmp
mov
sub
cmpb
jb
mov
sub
mov
push
stos
cmpsl
andb
test
add
inc
cs
mov
or
mov
movsb
insb
push
sbb
pop
xor
outsb
in
scas
movsl
stc
dec
mov
iret
jge
daa
test
stos
pmuludq
inc
push
jle
and
xor
xchg
adc
pusha
inc
add
jns
jne
mov
dec
xchg
mov
scas
icebp
xchg
mov
pop
lods
and
mov
push
pop
mov
xlat
xor
mov
mov
outsl
add
movsb
stos
hlt
int
lock
call
sub
add
jbe
pop
aad
mov
mov
fldl
mov
and
add
shrl
push
rcrb
es
and
mov
or
or
xchg
in
jg
mov
xchg
test
aam
test
add
dec
push
mov
popf
lods
bound
pop
shll
jno
call
popa
subb
movsl
mov
rorb
lea
dec
adc
call
jecxz
in
mov
xor
loopne
push
scas
rcrb
mov
aam
fwait
mov
push
lods
sub
cmp
pop
out
xor
mov
xchg
mov
or
out
cmp
sbb
jnp
push
mov
bound
outsb
jbe
aaa
adc
cmp
sub
dec
mov
add
sbb
loope
popa
sub
inc
into
mov
push
pusha
jns
test
add
cs
xor
dec
jnp
and
xorl
jle
std
cld
mov
mov
cmp
cmp
cmpsb
pop
int
cltd
adc
dec
mov
sbb
insb
mov
mov
adc
faddl
pop
xchg
xlat
repnz
jne
sub
mov
jne
pop
mov
sbb
mov
fidivrs
int3
xchg
mov
jno
and
mov
lods
xor
cmp
call
mov
in
pusha
inc
pop
and
mov
adc
repnz
iret
sarl
test
ljmp
and
je
divl
popa
inc
int3
push
or
outsl
dec
add
fbstp
mov
mov
bound
cltd
adc
aaa
add
adc
stos
int3
xor
lcall
jg
and
sbb
sbb
outsl
xor
in
mov
push
adc
shl
jl
addr16
xlat
push
nop
insb
xchg
mov
movsl
lds
aad
jmp
adc
cmpsl
call
push
mov
cltd
rclb
jge
xchg
xchg
xchg
pop
cmp
cwtl
repz
push
jmp
adc
out
dec
cmpsl
out
jle
mov
mov
repnz
insl
fwait
jl
shlb
push
mov
lahf
add
sub
cmc
mov
inc
loop
stos
jmp
lahf
outsl
xchg
mov
pop
sbb
or
fwait
jbe
inc
mov
inc
rcrl
mov
xor
add
aas
movsb
lcall
inc
inc
cmp
scas
push
jp
adc
stos
mov
mov
dec
xchg
test
mov
pop
cmp
mov
mov
mov
test
xchg
mov
bound
sub
cmp
movsb
sub
cmp
call
cwtl
and
jb
test
xrelease
movsb
in
jo
jg
push
outsb
fcmovne
cmp
ret
sub
or
lds
xchg
ljmp
cmpb
bound
adc
mov
bound
pop
cmp
pop
sub
add
cli
pusha
rclb
lds
mov
add
cmp
cld
shl
sub
imulb
movsb
mov
inc
mov
adc
pop
jno
cmc
in
pop
lods
jge
push
push
les
or
inc
stos
dec
mov
pusha
movl
fiaddl
xor
jg
out
mov
aam
mov
xor
mov
push
sub
ljmp
pop
stos
cmpsb
in
mov
lcall
insl
enter
ficomps
xchg
sub
arpl
lods
xor
mov
dec
sahf
int3
jle
fstps
dec
cwtl
xor
mov
xor
mov
nop
cwtl
addr16
push
bound
int
or
movsb
jge
or
std
ljmp
js
pop
sub
adc
outsb
sub
mov
rcll
pushl
mov
xor
pop
test
loopne
push
movsb
cli
cmp
inc
imul
jo
jbe
leave
pop
adc
jnp
sub
ret
js
addr16
ljmp
dec
out
push
test
pop
jne
out
out
xchg
mov
mov
addl
ret
mov
outsb
repz
lods
addr16
or
cwtl
sahf
jge
jbe
movb
or
cli
fsubr
sbb
dec
aad
in
push
pop
push
ret
sbb
push
jge
shrl
roll
adc
out
scas
sahf
xlat
dec
pusha
imul
sti
xor
in
inc
mov
pop
popf
leave
sbb
inc
and
dec
enter
jb
sbb
xchg
pusha
sahf
hlt
call
and
adc
pop
repz
hlt
aam
cltd
mov
jge
lock
inc
decl
push
mov
dec
out
stos
idivl
xchg
jnp
xchg
lea
orb
in
push
rcrl
or
aaa
sub
hlt
pop
cmp
jnp
sub
mov
sbb
dec
shrb
push
popf
sub
mov
fdivrs
out
pushl
push
iret
insl
sbb
or
rorl
adcl
in
xchg
repz
subl
or
push
xor
cmpsl
push
loopne
xor
cwtl
push
out
imul
test
jge
out
orb
fs
push
dec
inc
dec
push
xor
jmp
cmp
rcrw
iret
icebp
adc
xor
xchg
xor
lcall
cli
cmp
ret
sub
xor
dec
and
inc
int3
mov
mov
cmp
repz
sbb
sbb
hlt
mov
setp
aaa
es
jb
or
lock
lods
mov
cli
mov
xchg
cmp
into
incl
daa
insb
push
dec
mov
and
xor
out
ret
js,pt
gs
and
orb
cmpsl
cmc
cld
sub
and
pop
mov
in
icebp
jl
in
sbb
mov
lods
popl
ss
adc
jbe
sbb
jno
sub
into
push
aaa
push
xchg
cmc
je
inc
lcall
mov
jb
ljmp
fsubs
in
inc
push
or
or
mov
mov
movsb
cmp
aas
shll
scas
add
mov
es
mov
icebp
jb
mov
stc
pusha
sub
sti
out
mov
repz
xchg
push
and
dec
inc
imul
addr16
jns
cmp
jge
insb
jle
mov
das
fsubrl
fistpl
push
or
mov
mov
mov
lcall
outsl
mov
pop
lcall
dec
cmpsb
dec
jne
sub
or
test
imul
mov
add
push
js
shll
xchg
aad
or
xor
fmul
pusha
fiaddl
push
out
jns
mov
aam
jecxz
pusha
ss
push
pop
sub
add
mov
mov
push
push
nop
mov
arpl
out
mov
xor
lods
xchg
fwait
popa
xorb
movsb
test
pop
xchg
stos
test
insl
mov
leave
fptan
repnz
fsts
push
xor
adc
repz
mov
sahf
bound
ret
ret
pop
and
fdivrl
push
mov
dec
sub
in
push
bnd
mov
pop
cs
insl
push
sub
xor
sbb
ret
xchg
pop
pop
pop
sahf
sub
cmp
add
xor
xchg
cmp
aam
stos
repz
mov
test
stc
lea
jb
xor
in
inc
add
push
int
push
cmp
loop
enter
jecxz
sub
fmul
clc
ret
ljmp
adc
inc
jns
aad
mov
dec
rcll
ja
mov
and
sub
sub
dec
xchg
mov
adc
sub
out
pop
lods
and
rcrl
negb
imul
sub
push
mov
push
push
mov
pop
pusha
in
and
lcall
cmp
mov
add
add
movsl
xchg
in
pop
dec
inc
outsl
fidivrl
add
adc
mov
jo
sti
bound
or
xor
aam
xchg
icebp
nop
ret
push
test
add
mov
ljmp
mov
imul
adc
scas
or
fs
pop
bound
jl
add
notb
mov
sub
rep
pusha
push
insb
xchg
je
js
ljmp
mov
sub
or
rorl
sub
rcrl
jge
adc
and
out
mov
pop
aaa
push
popf
call
idivb
fisubs
lea
loop
dec
dec
stos
enter
js
push
pop
jbe
xchg
sti
adc
std
stos
dec
push
jb
test
dec
inc
imul
push
mov
sbb
jb
mov
mov
ret
jne
and
cmp
sub
pop
push
cmp
movsb
je
lea
psubusb
out
mov
inc
aam
repnz
leave
test
les
mov
mov
xor
lods
andb
in
jecxz
leave
int3
test
sub
sub
cltd
jle
icebp
test
gs
add
mov
fadds
into
or
mov
popf
push
xchg
movsb
push
mov
cltd
lcall
mov
mov
loope
add
push
jns
in
dec
add
xchg
daa
pop
push
adc
movsl
repz
lods
in
iret
enter
cmc
stos
js
out
les
pop
shlb
testb
clc
aas
gs
push
lods
push
nop
cwtl
scas
mov
jno
sub
cli
jbe
mov
mov
lret
clc
cmp
out
sbb
ja
jmp
jno
xchg
cmp
insl
mov
xchg
xchg
in
jnp
jge,pn
sub
mov
adc
loop
rcr
aaa
mov
jb
mov
mov
test
out
or
push
bound
sarb
repz
addr16
dec
sbb
into
mov
loopne
fiadds
das
shlb
push
es
stos
sub
cmp
sub
pop
nop
aad
and
ret
cmpsl
shlb
dec
xchg
stos
pop
push
add
xor
jmp
inc
push
push
rcll
pop
sahf
jle
push
les
sarb
movsb
push
test
subb
cld
mov
adc
loop
mov
jle
dec
or
outsl
hlt
push
jp
lods
jns
jg
mov
icebp
out
ljmp
xchg
lret
hlt
jbe
movsb
cmc
cmp
lods
ret
push
dec
xchg
stos
pop
mov
cwtl
or
cmpb
fisubs
pop
pop
mov
xor
insl
pop
out
repnz
mov
jns
xor
clc
jg
shl
insb
vminss
xor
add
inc
inc
jns
and
sub
mov
int
scas
push
pop
ss
out
cmpsl
mov
fmuls
adc
jnp
jl
xor
cli
jb
ljmp
stos
sub
fwait
mov
mov
mov
dec
add
mov
ss
outsl
rcl
lcall
and
mov
out
push
xor
lcall
sub
mov
cs
iret
xor
imul
mov
push
cmp
push
in
in
repnz
movsb
xchg
pop
hlt
mov
mov
ljmp
aas
push
stos
mov
xchg
add
lock
stc
mov
insl
jnp
fimull
dec
dec
jne
sbb
into
insl
push
movsb
dec
pcmpeqb
sub
add
dec
cmp
and
pushf
cmp
fsubrl
mov
push
mov
and
shlb
jae
sbb
pop
cmp
xchg
stos
movsb
fiaddl
inc
stos
xor
mov
xchg
jbe
outsl
pop
shrl
pop
xor
or
outsl
jne
nop
mov
aaa
cmp
fbstp
xchg
jg
add
mov
add
cwtl
mov
dec
data16
jbe
or
movsb
test
mov
cmp
addb
sti
hlt
imul
lock
jns
fsubrs
lcall
push
xchg
ret
imul
stos
add
lcall
sub
aad
ljmp
test
or
dec
aam
lret
bound
jge
mov
sub
inc
pop
lods
leave
adc
aam
xlat
mov
mov
xchg
or
cwtl
adc
inc
movsb
test
mov
pushf
and
ret
hlt
movsb
insb
sub
pop
add
xchg
pop
and
ds
out
insl
cmovae
push
call
mov
push
adcb
test
iret
in
pop
out
mov
data16
data16
arpl
dec
dec
sbb
mov
xor
fisubl
push
mov
shll
sahf
mov
mov
sbb
or
xchg
dec
xorb
lods
aad
xlat
insl
cli
adc
lods
in
cs
sbb
ret
lods
mov
mov
out
sarb
adc
mov
add
rolb
mov
dec
cmp
jp
dec
mov
loope
sub
jns
mov
jl
lock
xchg
outsl
cmp
mov
jmp
push
gs
leave
and
stos
sbb
xlat
cmpsl
mov
push
sbb
call
mov
sub
and
pop
push
lcall
push
je
lock
mov
stos
enter
jo
lea
add
outsb
push
jg
adc
sbb
adc
or
cmp
adc
int
movsb
cmpsb
add
insl
push
in
mov
daa
lcall
repz
mov
in
in
push
movsb
icebp
fs
add
push
add
mov
pushf
mov
push
add
imul
pop
sbb
adc
and
inc
jmp
sub
mov
inc
adc
jge
aad
jo
mov
jg
fistpl
call
xchg
inc
enter
clc
inc
or
in
sbb
fdivr
xchg
dec
sub
mov
add
repnz
leave
sub
cmpsl
enter
xor
push
lcall
int3
jno
shl
in
mov
pop
lahf
adc
fadds
inc
jae
stos
dec
in
jge
add
inc
fisubs
int3
mov
std
dec
into
cs
insb
std
pop
outsb
lds
sub
push
xor
inc
lds
lods
lods
es
or
data16
pop
popf
add
cmpsl
lahf
mov
pusha
sub
fs
mov
test
and
jb
xor
invd
cltd
xchg
imul
mov
pusha
imul
rcr
pusha
lea
cmp
js
notb
lods
ret
lret
inc
add
mov
imul
lcall
jmp
lods
and
sub
jmp
arpl
or
cmp
out
fs
adc
push
push
out
insb
or
fnstenv
ljmp
push
jp
cwtl
mov
sub
mov
aam
push
push
enter
fwait
mov
dec
xchg
push
sahf
mov
test
lahf
jne
das
leave
push
fldcw
and
cltd
popa
mov
out
and
loope
adc
add
out
into
pusha
mov
jb
shlb
enter
mov
mov
add
pop
repnz
sbb
and
jo
jl
sub
push
cmpsl
mov
push
mov
mov
mov
xor
sub
icebp
xor
cmp
in
aad
fidivrs
push
cmc
sub
sub
data16
daa
call
or
xchg
movsb
inc
into
pop
pushf
xor
or
icebp
leave
mov
mov
push
dec
mov
sub
adc
cltd
xchg
clc
adc
or
or
fnsave
and
sub
aam
and
mov
add
imul
ljmp
imul
movsb
rcrl
sbb
push
scas
or
pop
jb
sbb
push
adc
in
lods
mov
add
mov
adc
outsb
jmp
in
and
out
lods
sete
ret
stos
mov
out
mov
test
out
inc
or
cmc
xchg
or
stc
js
sti
jnp
push
mov
mov
outsb
fstl
movsb
in
xchg
adc
nop
xchg
aad
mov
ljmp
icebp
sub
lea
mov
xchg
or
mov
cld
hlt
fwait
out
pop
jbe
out
push
lods
dec
icebp
stos
in
insl
sbb
loopne
xchg
std
pand
pushf
cmp
aas
sbb
cld
movsl
into
ja
mov
inc
es
mov
inc
sbb
jne
pushf
arpl
jno
or
stc
loope
das
or
cmp
dec
repz
mov
or
enter
mov
xlat
sub
pop
lret
push
mov
mov
or
ljmp
jle
adc
xchg
dec
lcall
inc
loopne
popa
mov
mov
mov
scas
cmpsb
xor
lods
push
lods
mov
and
jmp
mov
add
sbb
and
pusha
jnp
lods
inc
xlat
out
pop
xor
mov
decb
aam
inc
push
mov
cmpsl
fdivs
xchg
xor
jmp
scas
xor
jno
flds
mov
xor
mov
xor
add
loop
movsb
cltd
ss
xor
mov
clc
int3
xlat
aas
bound
xor
icebp
jmp
mov
mov
dec
fbstp
imul
scas
jg
push
mov
stos
adc
jb
jo
or
mov
and
enter
dec
xor
jle
pop
decb
bound
pand
cmpsl
ret
dec
inc
dec
xchg
lcall
fadds
cmpb
scas
xchg
jmp
roll
scas
pop
xchg
jge
xchg
jb
mov
and
scas
mov
loop
outsb
sbb
push
lds
ljmp
add
out
push
hlt
sub
xchg
or
push
cli
movsb
xchg
daa
mov
inc
xchg
ret
dec
movsb
pop
movntq
bound
mov
push
sbb
fidivs
es
dec
sub
mov
pushf
int
xchg
sub
sbb
mov
notl
mov
mov
pop
jecxz
lods
mov
popf
or
and
lcall
dec
jne
pop
push
daa
pop
iret
mov
adc
nop
push
pop
mov
in
dec
movsb
je
mov
dec
lea
int3
call
cmp
inc
pop
insl
or
push
adcl
out
add
rclb
xor
adc
push
sti
stos
mov
repnz
xchg
inc
ja
jle
pop
fnstcw
or
iret
lods
sbb
aam
xor
mov
fisttpl
outsl
push
jl
cmpsb
cmc
cli
xor
mov
xchg
push
mov
sub
xor
lds
fsubl
push
lock
pop
push
mov
mov
into
insl
es
mov
push
sub
xchg
fwait
out
cmp
movl
test
enter
and
mov
pop
test
sub
aam
fs
cmp
aad
popa
dec
cld
out
sub
push
fldenv
inc
loope
and
stos
cmc
movsb
loope
stos
lods
bound
push
xor
cltd
xchg
ljmp
scas
fs
jge
loop
jg
in
cmp
mov
shl
pop
lcall
call
inc
fmuls
pusha
mov
stc
dec
cmp
cmp
enter
imul
jno
arpl
ret
mov
inc
rcll
and
test
cmpsb
call
sub
jg
scas
aad
jno
ds
scas
outsl
sarb
stos
out
mov
sub
jnp
xchg
sub
sub
pop
stos
jbe
int3
mov
fstl
sub
outsl
insl
add
push
cmpsb
cwtl
xlat
into
pop
mov
mov
xor
jle
test
mov
ss
testb
test
movsb
data16
push
out
add
xlat
pop
pop
jecxz
jo
push
mov
sub
inc
jecxz
xchg
ret
mov
nop
addb
in
subb
jecxz
jge
mov
addr16
lcall
or
mov
shlb
inc
idivl
das
movsb
push
sub
pop
in
jmp
insb
ret
add
sbb
testl
xchg
fsubs
gs
mov
xchg
mov
mov
in
pop
lds
pushf
jns
addr16
loope
xor
rcr
popa
out
mov
cmp
das
and
lods
sbb
subb
ret
xlat
push
aaa
push
lods
pop
subl
sbb
gs
push
push
adc
push
xorl
push
adc
sub
daa
fadd
dec
push
and
iret
testl
sbb
jge
scas
shrl
xor
mov
mov
ljmp
jae
mov
xor
sbb
mov
outsb
ds
movsb
dec
sbb
cmp
icebp
xorl
pop
pop
cmp
dec
xor
jne
mov
aam
xlat
or
out
xor
insl
inc
popf
sub
inc
insb
jno
clc
imul
sbb
push
cwtl
cmp
sbb
insb
push
push
arpl
push
mov
mov
inc
push
mov
lock
pop
mov
sahf
push
mov
inc
popa
xor
data16
lock
mov
repnz
jns
mov
andb
call
pop
leave
fcmovnu
xor
mov
lods
bound
xlat
hlt
repz
loop
loopne
movsl
add
sub
shll
and
movsb
jo
jae
loop
mov
cld
jb
subb
subb
mov
add
shlb
cmp
shrl
push
pop
packsswb
dec
sbb
or
test
push
out
enter
push
stos
adc
lods
mov
lahf
test
bound
pop
xchg
js
imul
mov
decb
in
lret
scas
pushf
add
in
cvttps2pi
xchg
ret
fidivl
nop
push
sub
xlat
mov
push
mov
xchg
xchg
roll
out
pusha
out
imul
cmp
inc
mov
pop
iret
sub
stos
arpl
sub
cmp
ljmp
iret
mov
jno
repz
xlat
and
stos
aad
imul
mov
icebp
fmull
repz
lret
sti
mov
imull
mov
call
mov
jg
outsb
scas
shrl
ret
jbe
mov
or
dec
add
jmp
jb
inc
cs
int
push
scas
jmp
xor
ret
adc
shlb
xor
addr16
or
dec
push
repz
lcall
xor
dec
xor
and
in
sub
sbb
addr16
popf
insl
int
jne
or
xchg
repnz
dec
push
add
xchg
pop
icebp
lods
or
insb
cltd
int3
outsl
je
xchg
or
es
std
sbb
fstpt
cmc
fwait
push
outsb
lcall
dec
jecxz
mov
bound
rcrb
hlt
cs
in
mov
insb
sbb
lea
ds
loopne
cmp
inc
jno
dec
jmp
adc
mov
xchg
jnp
fwait
dec
movsb
das
out
in
sub
add
mov
mov
xor
mov
mov
or
popa
sbb
jb
inc
push
xchg
sbb
enter
ljmp
in
rsqrtps
dec
xor
jge
nop
ret
add
jno
insb
ljmp
pop
sub
sbb
or
add
dec
xchg
fcoml
inc
add
stos
ret
fcomps
jecxz
push
mov
dec
add
mov
mov
je
cltd
and
inc
pushf
sub
jns
inc
xchg
mov
inc
aam
jp
std
orl
std
jge
jb
sbb
sbb
packssdw
jo
bound
loop
pop
mov
or
je
pop
mov
mov
pop
rcll
adc
or
sub
push
push
jge
adc
dec
xchg
jns
test
repz
outsl
jnp
pushf
adc
movsl
add
cmp
mov
cmp
sub
cmp
inc
mov
inc
gs
dec
dec
inc
xlat
adc
fwait
addr16
jmp
jae
sub
adc
sahf
not
sub
dec
arpl
sahf
and
fldt
cmp
and
inc
jb
fidivrl
mov
mov
mov
mov
nop
dec
sub
data16
or
movsb
sub
int
imul
shrb
nop
sub
andl
gs
or
sti
add
push
cmp
sub
arpl
mov
push
add
lock
pop
fcmovne
mov
subl
aad
xor
jge
add
scas
push
mov
xchg
mov
loope
inc
outsb
movsl
orb
jp
pop
sub
pusha
cmp
aad
xchg
ljmp
add
fs
push
push
je
jo
sbbl
push
mov
mov
or
push
aaa
jg
xchg
sub
scas
lods
cli
mov
ret
inc
jo
addl
loop
movsb
and
dec
or
dec
sub
add
cmpsb
das
out
add
daa
imul
bound
ljmp
add
clc
pop
out
fsub
shll
gs
xlat
mov
xchg
sub
pop
pop
xor
movsb
add
adc
push
xor
enter
jns
loopne
daa
xor
das
mov
sub
adc
loope
jb
mov
cmp
or
hlt
pop
mov
dec
out
inc
stos
out
mov
fldt
sub
adc
dec
push
adc
out
pusha
fnstenv
sbb
lods
push
jno
push
js
hlt
push
push
and
dec
bound
mov
inc
push
xor
pushf
enter
aas
jno
sbb
jbe
ret
or
ljmp
inc
inc
sbb
aad
dec
jns
shl
mov
movsl
rcll
and
pop
inc
ret
stc
out
movsl
push
sahf
xor
movsb
or
add
jle
xor
std
xchg
arpl
xor
push
mov
ss
dec
mov
mov
verw
jo
push
mov
pop
jno
sub
lods
js
sub
into
sahf
cld
ds
out
sub
insb
sbb
insl
movsb
inc
stc
mov
outsb
sub
push
mov
add
pushf
add
int
push
mov
sub
fcmovb
inc
std
mov
repnz
xor
inc
scas
scas
mov
jno
inc
int
push
xor
js
lods
ret
xlat
in
sub
pop
insl
sbb
lods
shlb
or
jns
std
push
mov
mov
xor
push
pop
mov
xor
mov
les
mov
xor
sub
sub
jb
mov
fildl
mov
not
cs
sub
push
sar
xor
push
mov
fistl
repnz
mov
movsb
aaa
popa
das
enter
push
mov
jg
test
sbb
and
les
xchg
xchg
mov
mov
sahf
cmp
test
std
push
mov
pop
cltd
ret
ret
xchg
inc
sarb
adc
mov
es
and
pop
add
pop
mov
insl
push
scas
shll
jno
jns
out
sub
aad
out
sub
xlat
push
sub
imul
out
jnp
inc
lods
aaa
mov
in
and
sbb
loopne
sub
fisubrl
mov
sbb
inc
enter
ljmp
cmp
push
sahf
mov
es
dec
push
shll
xchg
xchg
movsl
jae
shrb
mov
shlb
pop
mull
jno
or
stos
sub
mov
cmp
mov
jno
subb
sbb
not
pop
fisubrs
clc
jg
cmp
pop
pop
and
or
in
xor
movsl
cmp
cltd
das
aas
popa
jl
mov
xchg
fsubrs
hlt
sub
movsb
mov
cs
jg
stc
push
push
add
ss
ret
pop
and
lock
mov
ret
hlt
xchg
inc
dec
sbb
fmul
jb
inc
lock
mov
mov
cmp
xor
pop
lods
mov
xchg
popa
or
cmp
fistl
push
negl
push
cmp
sbb
aam
notb
inc
jle
mov
jno
shl
cwtl
mov
inc
dec
cmp
cs
pop
xor
jns
cmpsl
and
ljmp
cs
sbb
and
dec
addb
mov
mov
inc
or
and
or
or
sbbl
mov
ficoms
adc
dec
enter
mov
pop
sub
pusha
lods
rcrl
popa
cmp
iret
enter
test
pop
pop
dec
mov
dec
lret
ds
ja
cmc
scas
cmp
lods
dec
mov
cmpsl
fdivrs
sahf
xor
lea
xlat
mov
xchg
pop
sub
mov
sbb
or
jb
je
pop
sbb
out
cs
outsb
mov
sbb
xchg
call
sbb
pusha
loop
ss
movsb
fisubrl
sub
shrb
jmp
leave
iret
sub
pop
mov
and
xchg
call
jns
push
movsl
xchg
stos
jmp
jb
into
pop
in
mov
sbb
jg
sbb
sub
xor
lret
test
mov
xor
call
enter
cli
or
mov
jb
movsb
inc
out
and
pop
and
lea
movsb
jae
jo
mov
sbb
lcall
not
aas
aad
sub
and
lret
stos
xchg
dec
test
adc
mov
pop
test
sub
repz
and
jnp
cld
add
mov
ss
jge
sbb
jno
addr16
inc
mov
cmc
inc
xor
sbb
and
iret
jb
adc
stos
leave
stos
jl
orl
xor
mov
inc
xchg
test
ret
push
mov
js
arpl
in
dec
insl
scas
mov
jge
outsl
ljmp
addl
inc
push
or
push
sub
xchg
pop
lods
jecxz
and
pminsw
sbb
mov
mov
aam
mov
xor
sub
icebp
sub
jge
and
fisubl
mov
lods
xchg
out
mov
push
movsb
mov
adc
sub
push
aam
add
pushf
cs
and
sbbb
jno
mov
jge
mov
xor
into
mov
xlat
lcall
mov
mov
mov
inc
mov
and
xchg
inc
push
mov
loopne
adc
pop
mov
mov
jg
daa
jmp
add
dec
dec
add
lret
and
mov
jbe
lret
add
stos
push
mov
add
add
mov
xor
rcr
pop
dec
xchg
or
push
mov
das
gs
pop
sahf
sbb
xor
push
xor
shll
outsb
pop
mov
mov
dec
add
sbb
pop
inc
stc
addr16
pop
inc
pusha
cwtl
mov
outsl
mov
xor
sahf
lcall
jle
cmpsl
pop
or
xchg
jmp
pop
insl
movsb
dec
mov
dec
hlt
inc
dec
and
daa
fwait
inc
call
xchg
mov
fidivs
fcmovnu
in
inc
pop
adc
icebp
mov
sub
test
add
xchg
cs
je
jb
ja
pop
movsl
sahf
das
mov
xor
sub
inc
mov
adc
push
stos
and
or
jbe
cltd
pop
xchg
fmuls
in
rcrl
adc
cmpsb
movsb
sbbb
pop
lock
lahf
jg
or
jns
add
add
data16
es
adc
outsb
daa
push
fwait
sahf
mov
mov
aam
and
insb
jo
add
leave
jo
mov
and
pop
add
int
xchg
xchg
sbb
icebp
mov
ljmp
cmc
insl
ret
jge
lret
lret
push
movsb
lcall
xchg
xchg
into
mov
fsubs
out
hlt
stc
lcall
xchg
bound
rcrb
ja
stos
mov
loopne
imul
pop
shr
xor
test
mov
pusha
mov
lock
xchg
or
sbb
fistpll
ljmp
loope
xchg
subb
push
cmp
sbb
loope
cli
data16
cmp
inc
jecxz
lcall
add
loope
sub
xorb
sbb
xor
dec
scas
gs
lods
jbe
and
pop
lcall
test
cmpsb
cwtl
pop
add
dec
xchg
pop
fwait
aas
pushf
dec
adc
pop
mov
mov
pop
mov
sbb
and
dec
rcrl
jle
inc
push
or
insb
mov
cmpsb
addr16
cs
lods
dec
ret
mov
orl
pop
out
push
in
movsb
imul
pop
mov
movsb
aaa
shr
adc
push
inc
sbb
add
lods
pop
and
lods
xchg
mov
sti
fsubl
xor
mov
dec
and
enter
test
aad
in
adc
inc
xor
stos
mov
cmp
lret
stc
adc
dec
ljmp
and
fiaddl
shl
push
shrb
sbb
jo
inc
fdivs
or
shlb
dec
push
cmp
outsb
add
mov
repnz
push
sub
les
mov
sbb
inc
add
fwait
enter
and
je
cmp
bnd
push
aaa
mov
push
dec
sub
cmp
jb
repz
push
pop
push
aas
addr16
sbbl
stc
push
xor
jbe
mov
xchg
sub
out
lret
jb
sub
cmp
shrb
mov
movsl
stos
jbe
jne
add
add
pop
adc
adc
fnstenv
pop
movsb
xchg
add
hlt
bound
inc
lock
mov
movsl
test
mov
mov
sarl
pusha
and
ret
and
mov
mov
hlt
jnp
push
sub
sub
cmpsl
subl
ficoml
sbb
dec
mov
mov
adc
pop
or
xor
or
xchg
and
pop
lods
mov
push
lcall
xchg
aaa
jnp
icebp
lret
andb
push
hlt
mov
movsb
fdivs
cli
sub
fstpt
notb
or
push
test
xchg
sub
sub
xchg
adc
push
arpl
xchg
bound
jmp
outsb
lods
gs
pcmpeqw
push
cwtl
xchg
xor
mov
or
pop
mov
movsb
lea
mov
mov
enter
loopne
in
push
insl
sbb
xchg
push
icebp
mov
dec
nop
pop
dec
ret
in
fdivp
aaa
pushf
jae
mov
cltd
cmpsl
rcll
xchg
ljmp
movsb
jp
rol
push
mov
loopne
repz
pop
mov
sub
js
movsb
aad
movsl
dec
pusha
in
pop
push
bound
sahf
jge
andb
lock
das
movsb
cmp
cmpsl
sti
sbb
iret
iret
sbb
and
imul
scas
xlat
int3
iret
insb
sahf
xchg
sub
cli
hlt
mov
sbb
ja
and
mov
cmp
mov
sbbb
popa
cs
stos
loop
sahf
pop
sbb
push
leave
sub
sub
pusha
sub
jo
outsl
fiadds
sbb
xchg
mov
xor
inc
mov
pop
outsb
clc
fdivp
cmp
mov
fimull
mov
mov
scas
repz
xlat
mov
dec
mov
inc
mov
pop
clc
fbld
inc
fwait
shl
push
lret
iret
xchg
negb
mov
adc
out
cmpsl
inc
cmpl
push
mov
lcall
adcl
jp
out
pop
enter
imul
sub
adc
mov
cmp
and
or
jg
out
push
mov
inc
pusha
das
push
and
cmp
add
mov
shlb
les
mov
mov
enter
sub
les
aad
dec
sbb
stc
pop
mov
push
xchg
mov
or
call
add
xor
push
test
test
stos
pop
dec
rclb
aaa
sbb
mov
lcall
or
out
and
fsubrp
pushl
cmp
xchg
mov
sub
adc
mov
inc
insb
sbb
add
aam
jnp
hlt
ret
mov
enter
fwait
pop
ret
dec
outsb
pop
lods
adc
and
in
dec
insl
stc
jne
sub
fmul
adc
xor
pushf
push
hlt
sbb
andl
fimull
icebp
sbb
xchg
mov
push
push
cs
mov
movsl
daa
jae
out
and
push
lcall
pop
push
jnp
sbb
divb
lds
fadds
iret
ja
lcall
das
sbb
push
push
mov
fmuls
test
lcall
mov
scas
mov
xchg
mov
mov
mov
sar
sub
ficompl
popf
xor
jae
icebp
mov
movsb
lock
cs
orl
das
pop
pushf
fsub
add
outsl
ja
je
pop
lods
mov
stos
mov
adc
loope
jecxz
fcoms
sbb
sub
rol
push
mov
in
mov
sub
stc
push
fimull
iret
pusha
pop
pop
nop
lods
push
push
jno
clc
ret
add
in
fcomps
dec
push
xor
test
cli
mov
lds
and
stos
or
ret
insl
arpl
cld
push
mov
cmp
push
lods
lret
xor
stc
xor
sbb
sbb
cmp
je
js
xchg
xchg
sbb
sub
out
out
cmp
xor
ret
mov
clc
into
mov
xchg
sub
adc
adc
in
into
call
lock
test
movsb
pop
adc
enter
sub
mov
mov
je
addl
mov
jge
add
data16
sbb
mov
mov
cmc
ss
pop
clc
jp
out
and
cmpsb
jb
shlb
xor
jbe
iret
add
sbb
insl
add
lret
jb
movsl
dec
dec
aad
and
jle
and
and
sbb
in
test
ret
mov
jge
outsb
fnstenv
mov
mov
je
loope
test
inc
aas
sub
xchg
pop
lds
addr16
mov
andb
jno
comiss
call
arpl
push
pusha
xchg
pop
xor
pop
lret
xchg
add
icebp
nop
std
jp
pusha
out
xchg
cmc
out
int
out
sbb
daa
push
fadd
inc
aaa
cs
fisubrs
cmp
movsb
and
xchg
jno
dec
ret
pusha
add
test
aaa
cmp
ljmp
test
and
jnp
xor
push
paddd
cld
arpl
fisubrl
sub
bound
pop
mov
xchg
aam
sbb
movsb
inc
mov
jno
xchg
sub
pop
test
add
xchg
add
repnz
fisttpl
test
outsb
push
cwtl
push
adc
pushf
xchg
test
or
push
xchg
out
je
push
mov
and
sbb
inc
mov
dec
push
roll
loope
add
xchg
int
not
movsb
filds
sahf
sub
repnz
adcl
lods
out
xor
cmp
iret
outsb
test
mov
in
ret
mov
cs
ret
insl
movsb
fsts
push
inc
ret
or
lret
push
mov
lcall
push
fisubrl
pusha
movsb
pushf
leave
pop
ja
pusha
inc
outsb
int3
out
fldt
jne
pop
cmp
sbb
xor
jno
cli
jne
sub
aaa
iret
sbb
movsl
bound
push
sub
sub
lds
out
data16
mov
fnstenv
data16
les
ss
dec
sub
dec
lahf
mov
fmuls
lds
addb
pop
sub
lcall
and
push
cltd
es
cld
insl
xchg
cli
sbb
mov
ss
lods
int
cmp
mov
mov
push
stos
aad
scas
add
ljmp
ficoms
push
jo
sbb
mov
add
mov
add
mov
jns
mov
bound
rcrb
pusha
imul
les
xor
call
push
sbb
inc
insl
fistpl
pop
hlt
push
jb
orb
adc
jb
shll
xor
insl
jae
test
aam
or
xchg
fdivrl
rcrl
sub
int3
xor
push
add
lds
cmp
in
cli
test
inc
mov
mov
sub
or
or
xor
test
xchg
pop
loope
xor
pop
lret
inc
shlb
gs
jl
xorb
outsb
or
and
sahf
jp
cmp
mov
mov
xlat
fsubrs
test
insb
lea
jns
bswap
inc
dec
sahf
dec
jbe
push
dec
cmp
dec
das
jp
sub
hlt
lods
nop
inc
out
bound
mov
movsb
cmp
jb
iret
add
inc
shll
jp
aaa
loop
int3
das
and
rcrb
mov
push
pop
add
lahf
pop
jns
or
enter
fsubrs
jne
and
iret
subl
aas
ss
sub
push
add
aas
adc
shll
dec
jno
cmp
xchg
pop
add
rolb
mov
das
adc
jbe
mov
mov
aam
xor
ss
sub
les
les
sbb
daa
or
cmc
je
mov
jbe
push
les
inc
out
into
mov
or
jge
mov
mov
cmc
jae
sarb
jbe
arpl
lcall
cli
int3
scas
stos
sub
sub
mov
lcall
xchg
mov
ljmp
xchg
inc
mov
es
aad
in
nop
out
mov
insb
push
add
test
push
lods
mov
adc
push
sbb
cs
jmp
dec
lret
paddb
jo
enter
aam
dec
pop
push
std
jno
cmp
mov
inc
and
mov
cmpsb
xchg
scas
leave
cs
test
enter
cmp
sbb
pop
outsl
jmp
repz
dec
into
ja
pop
fimuls
mov
jnp
sub
mov
imul
sub
sbb
inc
int3
inc
sbb
hlt
mov
mov
cmp
lcall
mov
sbb
fs
js
rcll
and
lods
frstor
pop
xchg
into
lret
bound
lock
out
enter
fisttpl
cmp
cltd
or
icebp
fistl
int3
sarb
insl
cmp
in
out
lock
jge
mov
call
aaa
repz
rcrl
inc
add
xor
mov
test
sahf
and
or
pop
mov
ret
cld
enter
enter
lcall
xchg
mov
sti
mov
fs
lds
push
sbb
cli
push
push
inc
adc
and
jge
inc
sahf
jo
push
icebp
movsl
inc
sub
fs
lcall
xchg
sti
push
sub
jns
iret
sbb
inc
xchg
jmp
dec
int3
mov
lcall
add
mov
sbb
mov
hlt
bound
xchg
mov
push
scas
push
mov
scas
sti
mov
sub
pop
mov
push
push
adc
mov
push
mov
xchg
lret
adc
bound
aam
push
jp
movsb
test
ret
test
cmpsl
mov
jmp
repz
outsl
pop
daa
cmp
dec
and
pop
sbb
pop
out
data16
fdivrs
fxtract
push
out
jle
jbe
outsl
sti
aam
mov
mov
jecxz
push
jg
subb
pop
in
mov
cmp
aaa
sub
adc
fcmovne
mov
mov
cmpsl
adc
enter
pusha
outsb
ret
setne
mov
sahf
sub
lret
lcall
sub
negl
pop
dec
adc
lea
mov
push
sub
push
push
loope
fs
mov
dec
add
popf
sahf
rcll
mov
or
popa
dec
cmp
push
mov
add
push
xchg
mov
mov
in
aam
xor
jmp
je
cmc
cmp
dec
sub
dec
out
xor
scas
fisubrl
cmp
push
mov
out
mov
and
pop
jmp
mov
bnd
enter
out
jae
notb
out
add
push
enter
mov
bound
in
out
cwtl
popa
mov
jge
mov
mov
and
mov
cmp
pop
jb
jmp
cmp
jnp
cmpsb
aad
add
mov
push
xor
sbb
mov
int3
or
std
in
loop
adc
cmpsb
lret
xchg
mov
test
sbb
xchg
push
fmul
shll
int3
and
mov
push
in
fwait
push
inc
mov
ja
daa
imul
adc
jge
movsb
or
pop
fs
gs
daa
pop
hlt
bound
fs
adc
rol
cld
mov
pusha
into
pop
inc
or
jmp
push
icebp
adc
sub
leave
sbb
filds
lcall
push
icebp
sub
or
pop
add
rorb
fwait
in
jno
je
push
add
scas
mov
movsb
arpl
xchg
and
stc
cmp
pop
and
imul
mov
lods
and
popa
pusha
mov
or
iret
or
xchg
mov
out
add
data16
sub
mov
loop
mov
push
out
jo
push
cmp
jns
jge
adc
lds
mov
inc
mov
pop
insb
mov
push
aaa
mov
pop
pop
sub
mov
jbe
adc
orl
cld
fdivl
mov
repnz
test
sub
xlat
jne
mov
imul
inc
lods
mov
mov
jnp
or
loopne
push
std
jb
push
stos
filds
and
sahf
dec
ja
xor
push
loopne
mov
cmp
das
lods
aam
fistl
and
rorl
loop
movsb
testl
mov
pusha
mov
arpl
in
sbb
insb
stos
or
cltd
mov
mov
xor
sbb
repz
jp
lcall
jae
push
sarb
push
mov
mov
imul
psrld
popf
ja
andb
loope
push
push
insl
data16
mov
xchg
mov
ds
imul
lea
or
icebp
pop
or
push
push
jle
adc
imul
push
mov
fcomip
and
mov
or
or
push
lret
cmp
xor
mov
data16
jmp
pop
cwtl
hlt
call
ljmp
inc
adc
imul
stos
mov
bnd
jns
js
jb
adcb
mov
mov
push
loop
jae
sub
jl
rol
fbld
js
lods
pop
sub
and
sbb
cmp
xor
repnz
push
out
lods
mov
outsb
flds
fidivl
test
mov
orl
or
mov
loope
sub
jno
in
xchg
out
mov
movsb
add
mov
test
sahf
mov
sahf
xor
ja
scas
pop
and
push
ficompl
aaa
jno
dec
movsb
les
xchg
mov
jmp
mov
xchg
dec
mov
push
aad
mov
add
mov
sub
daa
andb
popa
adc
xor
mov
icebp
push
mov
gs
test
mov
fnstenv
jg
call
fsubrp
lock
insb
or
dec
push
ljmp
xchg
inc
cmp
insl
sahf
pop
mov
sub
fisubrl
or
fcoms
into
cmp
data16
iret
push
jne
xchg
push
addr16
in
lds
add
in
sti
jmp
xchg
add
mov
aam
cmp
xor
das
sbb
hlt
mov
sahf
cs
movsb
xor
push
scas
inc
pusha
negl
cmp
jb
or
ret
or
fadds
jns
mov
xor
fs
sub
lods
js
pop
in
movsb
or
cwtl
sub
sbb
icebp
ret
mov
data16
lret
mov
movsb
pop
data16
faddl
repz
mov
add
shrl
mov
in
pop
pop
pop
or
movsb
xchg
push
sub
add
mov
inc
pop
dec
aad
inc
fadds
test
sbb
movsb
loopne
or
or
xorl
sbb
push
push
jmp
xlat
movsb
push
test
popf
mov
jae
xchg
mov
call
stos
fdivp
fisubl
pop
cmp
jae
mov
out
bound
sub
ljmp
lea
test
lds
pop
aas
iret
mov
fsin
pop
lds
out
lcall
ret
out
mov
lods
stos
xchg
jge
rorb
mov
sbb
movl
mov
xchg
cs
dec
test
sub
and
pusha
call
add
push
xor
xor
push
sbb
cld
mov
or
pop
int
pop
mov
sub
dec
xor
pop
mov
je
sbbb
loope
mov
test
shll
mov
xor
xchg
jbe
lods
andl
imul
fnstcw
daa
pop
sub
or
sbb
add
mov
ret
dec
pop
imulb
imul
xor
pextrw
and
mov
xorb
xchg
mov
int
mov
filds
insl
scas
dec
movsb
fsubrs
xchg
add
sti
push
repnz
pop
addr16
add
push
sub
scas
lret
insl
out
scas
movsb
pop
sbb
xor
xchg
movsb
cs
mov
or
das
adc
stos
pop
movsb
pop
jbe
rcrl
js
pop
sub
nop
icebp
sbb
aas
clc
adc
mov
call
sbb
subl
rcrl
aaa
xchg
adc
adc
jns
inc
aam
sub
insl
ljmp
jmp
sub
push
std
mov
pop
mov
std
cmp
fdivrs
cli
mov
xchg
or
sub
dec
or
add
or
test
mov
les
fs
push
loopne
addr16
or
dec
test
adc
adc
lods
cmp
jl
sbb
sbb
inc
dec
push
cli
xchg
repnz
push
mov
push
aam
sbb
cltd
sub
pushf
push
jge
dec
aad
sti
pop
sahf
cmp
add
jmp
sbb
jle
cmpsl
stos
sbb
adc
jbe
adc
xchg
shlb
in
sbb
push
lock
repnz
js
cmp
push
sub
fsub
sbb
outsb
xor
mov
push
outsb
movsb
add
xor
add
lret
popf
push
inc
mov
push
shrl
sub
das
xchg
lods
push
inc
arpl
ret
pop
or
movsl
sub
lds
call
ljmp
lock
xor
mov
or
gs
sub
lods
inc
movsb
mov
jecxz
nop
je
daa
jge
enter
mov
inc
sbb
pop
fcomps
sbb
rclb
sub
lods
jb
and
lock
int3
mov
xchg
mov
popf
jb
push
cltd
xor
lods
adc
inc
pushf
lcall
cmpb
call
add
je
push
xor
in
js
add
or
pop
xchg
out
jb
ja
mov
adc
fsubrs
and
push
mov
aaa
mov
push
sahf
in
dec
das
movsb
jo
xchg
dec
and
insb
arpl
xchg
xor
xchg
loop
in
lcall
pop
push
ret
and
sub
sbb
sti
cltd
cli
ljmp
push
add
xor
sub
mov
aad
cmc
jns
inc
es
push
add
xchg
ror
fdivl
stos
wbinvd
and
out
add
subl
mov
leave
cmp
mov
sar
sbb
mov
mov
push
aam
xor
mov
jb
fwait
sbb
sub
and
adc
add
scas
cli
je
pop
inc
inc
mov
pop
hlt
push
cmpsb
xor
enter
sub
xor
xor
int3
adc
or
mov
sbb
ficomps
int3
ss
inc
mov
xor
jb
andb
sarl
xlat
push
outsb
aas
fcoml
xor
sub
mov
inc
lods
ret
cmpsb
sub
sub
subb
lea
jp
movsb
incb
pop
insl
jg
mov
dec
xchg
jne
pop
xor
sub
lcall
adc
sub
pop
movsb
imul
jo
je
sub
fsubr
push
sahf
cmp
xor
jbe
arpl
sub
lds
mov
js
pop
leave
xchg
popf
sbb
pushf
push
mov
cmp
movsl
jo
add
mov
in
pop
jge
repz
jns
mov
pop
ljmp
cld
sub
sbb
push
jge
out
push
subb
rorb
lahf
dec
and
pop
and
xor
loope
mov
mov
xorb
jge
jmp
xor
sbb
hlt
jnp
push
sbbl
divb
jns
pop
xchg
orb
mov
pop
add
imul
sub
sbb
push
lods
inc
add
adc
mov
dec
dec
dec
jne
dec
loope
out
dec
and
push
mov
lods
mov
mov
insl
push
clc
jno
in
mov
ja
sti
xor
mov
in
fmull
or
cmp
stc
push
test
and
stc
jb
mov
je
or
das
ret
js
imull
int
jnp
mov
jo
out
xchg
mov
nop
outsb
sbb
gs
into
std
fs
insb
add
mov
sub
lcall
hlt
aad
es
mov
add
test
cmpsb
push
fldcw
adc
adc
shll
jbe
cmpsb
cmp
dec
sub
in
int
cmp
cmc
inc
data16
test
mov
push
mov
cld
mov
push
cmp
lahf
out
pushf
outsl
lods
sbb
adc
sub
insl
or
cmp
lcall
pop
arpl
jnp
sbb
mov
hlt
lea
push
lods
jl
jbe
cli
sub
xchg
jae
int
hlt
sbb
shlb
mov
cmp
pop
xor
adc
cmp
int
or
movsl
test
dec
stos
sbb
mov
jbe
push
mov
xchg
sub
jnp
roll
mov
rorb
scas
scas
mov
stos
bound
adc
xorl
jns
mov
or
stc
jbe
jns
andl
int
pop
push
add
jb
movsl
mov
pop
addr16
mov
push
outsb
jae
sub
mov
push
mov
cmp
jno
in
mov
inc
xchg
jl
lods
and
pop
dec
xchg
icebp
or
pushf
cld
sbb
dec
add
in
inc
test
fnsave
fcomps
inc
movsb
sbb
jp
pushf
movsl
xor
cli
jb
or
bound
lods
imul
inc
ret
xchg
or
sub
sub
fidivs
add
into
mov
lds
jnp
outsl
or
sarl
pushl
sar
mov
pop
or
pop
cmpsb
jmp
subl
rcr
jbe
mov
lea
imul
test
push
push
ja
aas
stos
mov
repz
loop
lcall
jnp
jns
insb
fsubrs
sub
lret
adc
stc
testb
movsb
cmp
push
cmpsl
jecxz
subb
sbbl
cli
xchg
insl
add
inc
fnstenv
outsb
in
xor
lret
push
je
idivl
test
test
push
test
jne
ljmp
jnp
fldt
jns
add
push
jns
and
loopne
mov
mov
aad
and
jnp
cwtl
push
jno
fbld
xchg
lcall
aas
push
das
lret
movb
mov
mov
xor
jge
mov
pusha
insl
lea
ss
xchg
push
fmull
sub
loopne
or
and
cmp
sub
push
ror
sbb
mov
push
bound
ret
gs
lods
sbb
stos
inc
shl
mov
rolb
mov
mov
xor
jnp
out
ret
fsubs
sub
sub
lock
xor
mov
push
sub
repz
push
jmp
out
adc
sub
xchg
bound
push
cmp
cmp
data16
mov
iret
pushf
cs
mov
test
jmp
test
fsubs
xchg
pusha
mov
and
arpl
rclb
jb
out
cld
pop
sub
sub
cwtl
mov
inc
inc
or
dec
push
roll
add
push
jb
dec
lds
sbbl
push
lods
loop
sub
dec
ret
hlt
cmp
adc
stc
adc
add
pop
dec
dec
dec
xor
repnz
cs
add
cld
loope
roll
cltd
and
fmuls
xchg
fistps
jno
mov
mov
mov
outsb
push
test
xlat
inc
jb
shll
hlt
add
cltd
sub
sbb
inc
mov
push
sub
sbb
adcl
xchg
lret
or
xchg
pop
xor
lret
sbb
ja
scas
mov
or
movsb
jb
or
insb
jno
test
notl
cmp
sub
push
movsb
cmpb
push
sbb
cmp
nop
mov
movsb
dec
pusha
jb
sbb
fisttps
pushl
cmp
inc
inc
pop
sub
cmc
int
fsubl
mov
cmp
hlt
inc
xor
pop
fdivs
repz
mov
jecxz
sbb
add
sbb
adc
ljmp
mov
sub
movsl
repz
push
sahf
enter
push
pop
outsb
and
dec
push
bound
jge
add
pop
js
ljmp
insl
aam
cs
dec
test
cld
cmpsl
lods
sub
xchg
jnp
push
sbb
loope
jnp
jl
xor
insl
movsl
rcll
pop
lods
imul
mov
movsl
shll
lea
jmp
daa
ret
jb
add
rsm
cmp
scas
sub
jo
cs
mov
repnz
mov
shlb
xorl
sub
inc
shld
scas
dec
fisubrs
lods
lcall
pop
mov
fs
enter
insb
inc
daa
pop
mov
lcall
mov
or
pop
test
inc
jb
xorl
mov
aad
adc
and
dec
and
cld
dec
pop
lock
inc
mov
outsl
pop
insl
sbb
or
and
cwtl
jb,pt
shrb
sub
insl
loope
test
push
lds
shl
xor
mov
and
mov
dec
pop
cltd
in
xchg
insl
fcoms
clc
ds
lcall
dec
xor
mov
movsb
push
push
pop
add
sub
in
xchg
dec
ret
fxch
lock
dec
loope
movsb
mov
jno
mov
jl
adc
jge
jae
jp
adc
fisubl
xchg
push
sbb
rcrl
cli
sub
icebp
outsb
das
or
pop
bound
leave
and
xorb
ret
xor
out
rorb
outsb
jno
outsl
test
add
sbb
std
mov
sbb
gs
xlat
incl
push
test
lods
ret
popf
cmp
out
cs
clc
hlt
jns
test
xchg
enter
scas
aam
pusha
sbb
xlat
es
fstps
add
testl
mov
pop
adc
sbb
loope
stos
gs
xchg
out
mov
mov
xor
xor
xchg
inc
dec
daa
mov
ss
add
jecxz
xor
loop
inc
jmp
mov
sbb
cmovno
sbb
cmp
mov
stos
orb
pusha
mov
jecxz
stc
decb
sub
jecxz
mov
xor
cmp
mov
pushf
lods
nop
repz
aad
addb
ret
mov
mov
je
inc
scas
movsb
xchg
push
cmpsl
pop
mov
mull
add
into
push
pushf
push
lods
adc
loope
and
add
dec
or
jp
cmova
xchg
jecxz
iret
add
inc
xchg
shrb
push
loopne
mov
cld
aaa
out
bound
rolb
repz
pop
ss
cs
mov
sub
fxam
dec
call
add
adc
xlat
push
pop
mov
jmp
gs
pop
lods
push
push
push
jb
jmp
in
fdiv
inc
stos
xchg
nop
fisttps
pop
outsl
mov
xor
cmc
dec
sbb
call
out
cs
mov
xchg
iret
mov
popf
divb
jle
push
dec
sbb
mov
pop
adc
lret
sbb
scas
pop
mov
push
les
loope
mov
push
pusha
or
cmc
ss
dec
xchg
out
popa
into
stos
inc
outsl
fwait
push
lods
push
rclb
cmp
repz
push
adc
xor
mov
movsb
sub
and
and
pushf
movsl
jb
pop
stos
out
adc
bound
jp
sbb
push
fs
add
jg
push
aaa
or
sub
scas
stos
xor
and
add
rcr
outsl
movsb
pushf
jmp
ss
cmp
xchg
popf
inc
adc
push
cmpsb
in
add
mov
sti
mov
add
lods
mov
xchg
lods
push
sub
test
cltd
dec
mov
loop
mov
daa
xor
push
mov
pop
sarl
xchg
in
imul
pop
lret
iret
xorl
incb
mov
xor
dec
enter
jns
xor
or
and
inc
fisubrs
rcr
xor
sahf
mov
fld
scas
out
mov
data16
dec
push
push
dec
fsubrl
je
push
xchg
ret
lret
mov
push
mov
scas
mov
jno
or
mov
xchg
inc
test
mov
mov
sbb
data16
pop
jb
push
cwtl
testb
push
movsb
mov
das
sub
mov
dec
pop
lret
fimuls
xor
jne
and
iret
mov
mov
sub
roll
sbb
loope
push
pop
stc
stc
in
dec
push
or
add
xchg
pop
or
xor
pop
push
in
add
rcl
sbb
fsts
and
adc
or
jmp
cwtl
pop
ret
lret
dec
pop
out
sbb
mov
insb
fucomip
cmc
jne
inc
sub
repnz
push
xchg
add
cmpsb
dec
adc
cld
fcmovne
push
sbb
mov
ss
mov
lret
ljmp
sbb
push
lahf
nop
arpl
in
test
cltd
dec
sahf
pusha
jmp
push
pusha
lret
movsb
shrl
cmpsl
mov
jg
cli
mov
jbe
popf
xchg
js
mov
inc
push
dec
sahf
jecxz
addb
sub
pushf
adc
clc
jae
adc
ds
sbb
jb
ret
cmp
mov
stos
loopne
sbb
cmp
shr
or
lods
sbb
int3
push
dec
sub
out
sub
adc
std
int
std
daa
into
jg
aad
and
out
sbb
adc
pop
cld
inc
in
andw
cmpsb
outsl
clc
sub
dec
adc
xchg
loope
and
mov
adc
pop
cli
xor
loope
andb
mov
add
add
lea
pop
or
pop
arpl
shrl
pushf
and
imul
push
and
hlt
pop
scas
adcb
sub
sub
lcall
leave
pusha
scas
lcall
inc
inc
call
mov
inc
xchg
mov
cmp
adc
mov
je
test
and
sub
or
sub
repz
cmp
lea
pop
cmpsl
cltd
lahf
jmp
negb
xchg
sub
lock
push
js
mov
fsubrs
jnp
aaa
rcrl
clc
and
cs
leave
dec
mov
stos
dec
aad
pop
icebp
cmp
cltd
or
pop
push
ljmp
movsb
ja
adc
or
push
dec
scas
mov
push
lock
or
sahf
push
and
imul
cmp
out
cmpsb
mov
cmp
out
add
sti
fsubrl
cmp
cmc
adc
fdiv
push
inc
movsb
mov
lret
jo
fnstsw
sbb
fiaddl
jb
inc
in
push
mov
and
movsb
lcall
xor
fldcw
iret
pop
push
sbb
outsb
inc
sub
das
jne
push
sahf
ficoml
mov
xor
jmp
inc
inc
bound
xchg
mov
sbb
mov
sub
lods
insb
popf
push
test
stos
rcrl
jne
mov
pop
mov
movsl
mov
into
pop
cmp
lods
scas
mov
and
adc
and
jo
fcmove
les
ret
sbb
lock
fsubl
outsl
jae
int
ret
in
inc
mov
xchg
push
test
xchg
cld
mov
xor
lods
out
adc
mov
xor
sbb
scas
ja
das
push
stos
jne
ss
mov
cmp
fwait
jb
shll
loopne
mov
dec
lcall
jne
jge
test
sarl
xlat
pop
and
xchg
xchg
inc
les
pushf
and
cmpsb
and
pop
test
popa
push
loop
lea
cmp
sbb
fsubs
shll
scas
push
add
fidivl
imul
mov
mov
mov
rcll
jbe
add
ss
mov
punpckldq
xchg
lods
mov
adc
movsb
lods
mov
mov
std
mov
movsb
aad
cmpsl
mov
in
jecxz
cmp
xor
mov
into
or
call
mov
fldenv
fsubp
leave
mov
dec
mov
xor
xor
movsb
ficoms
insl
sbb
pop
mov
ret
cmp
jmp
sbb
mov
fisubrs
icebp
xchg
fldl
lods
xor
pop
ljmp
das
pop
pushf
cmp
push
mov
sub
xchg
mov
inc
xchg
sarl
arpl
mov
and
test
mov
iret
adc
mov
jmpw
adc
mov
xor
or
out
je
jle
sub
mov
mov
push
call
lahf
bound
push
fcomps
mov
lret
adc
subb
cwtl
in
adc
pop
icebp
mov
push
int
scas
or
ret
fsub
insb
push
sbb
xchg
push
testb
sub
xchg
repz
pop
mov
movsb
adc
stos
test
sbb
clc
mov
aam
and
mov
popa
or
xchg
test
imul
cs
mov
cmp
mov
int3
sar
and
setbe
out
rorb
xor
xchg
sub
loope
adc
ljmp
repz
movsb
scas
push
cwtl
sbb
or
inc
clc
shr
mov
mov
jb
xchg
sub
out
fisttps
or
mulb
mov
push
fsts
loope
iret
sahf
xchg
push
out
in
ss
decb
fsubl
xorl
into
lret
push
push
sub
fdivl
addr16
int
mov
mov
push
aas
jns
shlb
inc
push
jle
inc
int3
mov
popa
fwait
dec
out
pop
shrl
cmpsb
pusha
popf
ljmp
adc
jo
fcoms
pop
mov
test
xor
pop
mov
and
add
pop
rolb
ret
xor
stos
loope
mov
fwait
cltd
das
shrb
inc
pusha
leave
mov
mov
popf
lds
add
lds
insb
sbb
lcall
out
lods
push
jge
fnstcw
dec
mov
dec
nop
fwait
mov
mov
or
movsb
cmp
subb
outsl
inc
push
pushf
push
sub
xor
btr
insb
lods
int3
wbinvd
cmp
scas
pusha
cltd
imul
aad
icebp
lcall
icebp
add
pop
test
loopne
pusha
fadds
cmpl
push
mov
sahf
adc
sahf
push
je
push
in
adc
lds
jne
outsb
ret
jb
jp
push
inc
repz
xchg
push
add
xorl
loope
popf
and
xor
scas
in
ss
pop
mov
cmp
and
sub
inc
test
shrb
sbb
xchg
jne
pop
sub
dec
mov
push
sub
hlt
sbb
shll
icebp
sub
or
outsl
test
inc
fdivl
cli
mov
sbb
sub
push
adc
mov
scas
xchg
jge
leave
sub
insl
test
or
cmp
or
movsb
cmc
out
mov
adc
pop
push
inc
sahf
jnp
call
les
ljmp
call
insl
lcall
add
inc
ret
enter
mov
pop
dec
inc
xor
aam
clc
movsb
addr16
test
push
xchg
push
mov
mov
stos
and
adc
mov
imul
jns
notb
pop
fdivl
sahf
push
mov
mov
lcall
inc
xor
imul
inc
shlb
adc
inc
data16
andl
pop
bound
cltd
inc
mov
out
lods
mov
mov
xor
andl
xchg
or
xor
mov
gs
inc
jno
or
adc
add
xchg
inc
cmpb
out
cmp
inc
jecxz
aad
xchg
nop
mov
xchg
xchg
enter
shlb
xchg
addr16
sbb
std
xchg
stos
cmpsb
scas
jb
enter
adc
movsl
aaa
xchg
rcll
insb
pop
hlt
or
jecxz
and
movsl
mov
dec
jbe
mov
inc
rclb
dec
idiv
test
ret
or
int
jae
call
scas
adc
icebp
movsb
push
jb
mov
jb
ljmp
xor
pop
jbe
bound
jb
stos
aad
dec
push
xor
bound
movsb
repz
xchg
icebp
dec
sbb
js
jecxz
xor
mov
outsl
push
add
ret
adc
sub
fwait
push
xchg
mov
jmp
xor
inc
lret
push
and
mov
cmp
insl
inc
sbb
call
mov
xchg
les
out
cmp
mov
xor
sub
cmp
or
pop
inc
mov
add
pop
gs
add
mov
pop
adc
movsb
lock
sti
stos
fdivrl
mov
or
mov
sub
lods
das
lods
rolb
test
dec
mov
sbb
bound
inc
sub
ficompl
jb
jp
push
sub
stc
lahf
mov
jmp
loopne
enter
in
js
or
out
imulb
push
test
andb
out
and
push
test
stc
cltd
jbe
fidivs
inc
ret
sbb
testb
cld
mov
pop
jp
out
and
sub
jo,pn
ljmp
adc
or
sub
enter
sbb
call
lods
xor
jae
mov
jb
jg
mov
les
psraw
add
cmpsb
lods
inc
add
inc
and
pusha
insl
and
jo
xor
mov
pop
pop
sub
pop
dec
inc
std
mov
outsb
cmpsb
aaa
or
and
pop
mov
sub
mov
push
mov
ret
sub
into
xor
repz
dec
js
ja
mov
fiaddl
ret
movsb
pushf
lods
pop
loop
lods
stc
or
out
xchg
xchg
outsb
xchg
cmp
and
xor
xchg
xchg
mov
iret
cmpsb
lods
je
mov
lret
add
inc
out
mov
add
add
iret
nop
aam
sbb
inc
cmp
mov
lods
cmp
push
movsb
dec
mov
daa
fs
dec
dec
nop
and
pop
or
add
sti
enter
xor
inc
sub
sub
ja
or
outsb
sbb
and
ljmp
sub
in
inc
data16
push
cmp
dec
pop
lcall
jecxz
stos
push
push
aaa
sub
sbb
dec
mov
stos
push
jae
frstor
jmp
pop
mov
ret
dec
out
out
mov
scas
rcl
ss
mov
mov
inc
aad
add
lods
stos
mov
sbb
push
push
mov
mov
or
push
dec
xor
push
in
jns
adc
and
add
stc
imul
loopne
ret
and
cmp
fisubrs
ljmp
push
sbb
sbb
mov
movsb
jnp
mov
sbb
and
subl
pushf
movsb
cld
sub
mov
mov
arpl
ljmp
jb
add
pop
cmp
jmp
mov
aad
ljmp
jle
sub
sbb
loope
getsec
notb
ja
imul
lods
cmpsl
mov
push
add
arpl
mov
xor
jns
xchg
push
aam
clc
stos
mov
rep
inc
je
out
loopne
push
push
cmp
lds
jp
push
jbe
mov
push
sub
sbb
sub
cs
xchg
xor
push
push
rcl
not
sbb
sbb
movsb
add
cltd
scas
aas
repz
pop
lcall
sub
and
sahf
dec
stos
stc
and
xor
sbb
inc
lock
ret
iret
inc
push
int
shrb
cmpsl
push
movsb
andl
aam
mov
mov
ret
cwtl
fsts
mov
les
mov
inc
mov
jo
clc
sub
psrad
mov
out
repz
mov
mov
icebp
stos
fstpt
pop
pop
aaa
mov
fistpl
jb
mov
sbb
nop
mov
into
and
pop
inc
sub
dec
inc
add
xchg
xchg
mul
nop
mov
xorl
cld
out
lcall
mov
inc
into
fwait
iret
nop
mov
push
pusha
hlt
xchg
lahf
push
mov
minps
fcoms
out
adc
push
sub
iret
shll
xchg
bound
jne
mov
loopne
bound
mov
inc
jo
in
mov
push
cwtl
cmpsl
inc
das
mov
cmpsb
movsb
insb
xchg
and
jmp
scas
cmp
ja
dec
out
sbb
ret
sahf
out
dec
dec
sub
addl
sbb
imulb
into
test
rcll
add
mov
cltd
out
mov
lcall
cmp
adc
xor
ret
cltd
insl
loop
lods
push
and
lods
or
mov
sub
pop
cli
or
xchg
sub
scas
je
out
mov
jo
cmp
sbb
pop
mov
dec
pop
hlt
jle
lods
add
push
lcall
mov
lds
xchg
in
add
jmp
mov
rorl
xchg
mov
pusha
sbb
ljmp
push
out
jnp
sub
adc
ret
push
cmc
loopne
arpl
jbe
sbbl
int3
in
imul
jle
xor
cmpsb
jle
adcl
push
icebp
inc
les
out
sbb
mov
ret
fidivs
stos
stc
popa
push
ds
adc
and
add
lods
or
mov
cli
xchg
mov
adc
sahf
adc
push
or
pushf
fnstcw
xchg
dec
rclb
jg
xchg
testb
sub
add
sub
clc
in
cmp
lods
shl
cmpsl
push
addr16
stc
xor
pop
outsl
fstp
xor
xor
out
mov
repz
mov
ret
dec
add
aad
dec
cmp
mov
sbb
mov
mov
and
pusha
je
dec
xchg
or
sub
movsb
ss
pop
cmp
iret
cmp
dec
cmp
jbe
rcll
fdivs
outsb
mov
fbld
pop
jb
xchg
mov
out
imul
sti
cmp
jne
lds
adc
lds
js
sbbb
loope
lea
scas
pushf
das
outsb
gs
push
mov
and
shr
dec
dec
es
push
xchg
mov
mov
je
sar
xchg
cmp
pop
xchg
mov
mov
fdivl
mov
incl
sbb
mov
fs
mov
addr16
jns
inc
mov
cmp
pusha
ret
leave
mov
or
sub
das
push
and
mov
jne
push
pop
pop
imul
decb
xchg
mov
dec
mov
lcall
loope
adc
pop
aaa
mov
jb
mov
test
in
mov
scas
insl
in
mov
push
pop
inc
cmp
sbb
cmpb
adc
fldcw
daa
insl
pop
dec
rclb
cmpsb
inc
stos
cmpsl
xchg
pop
pop
shrl
mov
mov
ficomps
mov
mov
or
mov
ficomps
or
sub
jmp
pop
jbe
pminsw
divb
jle
insb
stc
pop
dec
xchg
aad
push
cmp
push
pop
mov
add
or
pop
mov
mov
mov
jne
inc
orb
pop
movsb
adc
or
mov
aaa
push
or
push
xchg
mov
imul
test
mov
mov
mov
push
popa
pop
pop
mov
ret
xchg
cmp
fs
xchg
sub
pusha
sbbb
es
and
xchg
mov
bound
rclb
push
jl
push
inc
stc
test
fcomp
into
loope
stc
fnsave
fstpl
in
jns
mov
int
dec
jge
push
dec
psubusb
push
stos
cmpsb
jp
adc
nop
adc
rorb
aam
ret
sbb
pop
jb
cmovne
outsl
into
stos
xor
xor
ljmp
push
sbbb
fistpl
das
jge
fcomps
nop
daa
incl
shrl
stos
push
icebp
xchg
shlb
movsb
inc
mov
push
xor
das
lods
pushf
mov
movsl
mov
je
mov
lea
push
or
xor
aaa
in
insl
aad
dec
xor
nop
movsb
insl
cld
bound
cli
out
mov
inc
jge
out
mov
sub
jnp
loope
cmp
shrb
mov
imul
adc
mov
dec
arpl
call
cmp
call
jnp
fmuls
icebp
sbb
movsb
dec
enter
cmp
sbb
push
add
lock
movsb
xorb
mov
test
sub
sbb
hlt
inc
pop
mov
inc
xor
sub
pop
pop
sub
gs
xor
das
add
push
xor
mov
dec
sbb
mov
rcll
pop
or
imulb
sub
adc
sbb
jo
lods
lds
ret
test
in
stos
mov
enter
inc
inc
imul
sbb
sbb
dec
andl
shrl
out
movsl
sub
ret
mov
and
push
mov
mov
mov
sbb
les
inc
xchg
jne
test
mov
imul
pusha
mov
push
into
xchg
jnp
mov
push
and
sbb
test
mov
sub
adc
sahf
jl
loope
jae
sbb
mov
adc
or
or
jle
lahf
sub
add
outsb
movsb
fidivl
mov
js
dec
fcmove
bound
movsb
mov
out
push
mov
mov
mov
loopne
inc
ljmp
push
sub
das
scas
stos
in
and
ret
jge
inc
pop
popf
jmp
pop
mov
mov
push
movsb
imul
inc
out
and
jne
mov
push
leave
hlt
daa
push
dec
pop
test
jge
es
call
lea
lret
in
fsubl
inc
jmp
inc
mov
fistl
mov
mov
xchg
dec
mov
push
sub
push
dec
icebp
outsl
out
jl
aad
mov
pop
mov
shlb
scas
movsb
sub
inc
mov
or
dec
icebp
push
and
daa
pushf
outsb
cmpl
push
lods
into
popa
mov
adc
jge
ret
movsb
jg
adc
push
jae
sbb
imul
and
fstpl
lret
fiaddl
outsb
stos
pop
dec
xor
mov
dec
pop
jnp
fmuls
jb
mov
das
push
sub
or
adcl
fs
jge
sub
cmp
pop
xor
sbb
sti
mov
push
pusha
sbbl
lea
adc
xor
jns
ja
add
xlat
fisttpll
ljmp
mov
in
and
mov
xor
movsb
fucompp
roll
movsl
xchg
jns
ja
lods
add
inc
cs
mov
imul
push
add
andl
mov
fwait
xchg
dec
jno
scas
push
repnz
call
and
movsl
sbb
mulb
lods
fsubs
hlt
mov
pushf
inc
add
push
jo
add
sbb
mov
mov
out
mov
mov
sbb
jbe
xchg
lea
cmp
scas
ficomps
push
mov
xchg
or
push
push
xlat
inc
or
cmpsb
lea
repz
adc
sbbb
mov
xchg
jnp
loope
out
jbe
push
repnz
pusha
sbb
arpl
fcmovnu
imul
mov
fidivrs
xor
cmp
lret
cs
dec
movsb
dec
in
xor
cmpsl
iret
sub
in
cmc
iret
je
repz
jae
pop
push
orl
mov
pushl
mov
xchg
xor
mov
push
or
popf
xchg
enter
fcmovnbe
fdivl
es
adc
iret
orl
mov
add
mov
fsubp
cmc
cmp
push
pushl
add
fs
dec
fcompl
dec
sub
sbb
xchg
lcall
xchg
pusha
push
dec
cli
scas
push
xor
ljmp
mov
lods
inc
pop
insl
jbe
inc
mov
pop
jg
push
stos
mov
addr16
outsl
push
adc
xchg
mov
dec
les
cli
lds
stos
scas
test
sub
out
jbe
push
mov
sbb
clc
inc
inc
pop
mov
jns
dec
pop
jp
orb
sub
mov
bound
outsb
popf
pop
mov
add
ret
lock
inc
scas
movsl
call
adc
fcmovnu
dec
ret
rclb
sub
or
and
test
inc
push
fisubrs
mov
lods
dec
mov
xchg
mov
call
lcall
shlb
out
negb
pop
cli
mov
or
push
adc
lods
lret
ror
mov
inc
stos
jb
cmp
lret
dec
dec
loop
sub
or
stos
dec
push
sbb
les
loope
push
jmp
adc
gs
jp
lods
inc
push
stos
jmp
lret
inc
jb
movsb
xchg
jae
mov
or
mov
test
or
aam
stc
cmp
push
adc
in
roll
lds
jae
fistl
pop
fldenv
mov
movsb
fwait
ret
movsb
inc
xlat
push
jmp
clc
or
imul
cmc
adc
sbb
push
sti
mov
js
cmc
lret
xchg
iret
push
lods
adc
ret
xchg
jmp
cmp
xor
cmp
sbb
sub
mov
das
sub
jge
out
cli
cmpsb
loop
jbe
dec
add
hlt
daa
scas
jecxz
jae
in
out
rorl
mov
movsl
paddsw
pop
lcall
mov
jae
and
sbbl
inc
popf
and
jle
pop
test
lret
popa
xlat
xchg
lods
jb
popf
xchg
push
push
sub
cltd
pushf
outsb
fxch
pop
das
imul
out
add
add
jne
imul
inc
lods
test
loop
push
imul
jne
int
xchg
jae
imul
pop
sbb
gs
push
pop
das
dec
lret
mov
inc
je
stos
jns
jp
xchg
and
push
push
push
lods
jne
sub
ljmp
fisubrs
fisttpl
jle
pop
push
rcll
mov
stos
loopne
mov
faddl
push
insl
adc
mov
mov
pop
jns
loopne
call
and
jae
mov
lock
cmp
fnsave
mov
xlat
es
call
lret
push
pop
pop
enter
mov
mov
mov
add
push
mov
lahf
jp
pushf
or
call
pusha
xchg
sub
pop
pop
jnp
dec
mov
push
jl
sbb
jo
insl
xorb
xlat
inc
pop
leave
mov
bound
push
mov
cld
insb
ljmp
push
arpl
mov
dec
ds
in
xchg
loope
rcll
pop
cld
shlb
aad
das
jg
mov
push
lcall
cmp
inc
xor
pop
lods
addr16
sbb
arpl
jne
mov
stos
xchg
scas
cmp
pop
pusha
sub
decl
insl
aad
mov
cld
jbe
fidivl
jae
shlb
push
and
pop
ja
lahf
inc
inc
mov
lds
aad
add
add
cmpsb
mov
hlt
mov
popf
pop
push
icebp
aad
mov
cli
cmp
sub
js
xor
aad
stos
dec
aam
mov
xchg
push
pop
fnstcw
inc
imul
sub
add
in
xor
imul
adc
mov
xchg
cmc
sub
fwait
ja
cmp
dec
mov
lds
push
sub
fisubrs
call
mov
mov
in
xchg
or
out
xor
push
cmc
into
dec
aad
dec
push
mov
sub
es
xor
and
xchg
bound
pop
dec
pop
inc
leave
sub
mov
sub
adc
mov
popf
and
jnp
dec
inc
xor
mov
xchg
or
mov
incb
jmp
sub
cmp
btr
loope
xor
jmp
or
and
xchg
adc
lods
push
cmc
or
stos
stos
daa
cltd
fstl
mov
sub
add
cmpsl
repnz
ds
je
inc
lods
out
add
jb
pop
mov
inc
mov
mov
cld
xor
jo
mov
andb
push
dec
xorb
lcall
das
sub
xchg
mov
test
add
mov
aas
or
or
xchg
testb
stos
xchg
clc
jo
jecxz
sbb
sbbb
insl
cvttps2pi
sti
adc
shll
mov
xchg
inc
insl
or
pop
mov
mov
mov
inc
mov
ljmp
push
jns
ret
push
popf
pop
and
and
jno
inc
mov
inc
xor
xchg
and
push
adc
jo
les
inc
add
or
mov
adc
flds
push
pop
add
xor
inc
or
pop
ret
sub
jmp
adc
arpl
or
jo
add
shll
aad
gs
clc
sub
ret
pop
xchg
and
insl
bound
jg
cmp
xchg
lods
add
mov
lods
ret
pop
push
sub
sbb
orb
sbb
bound
dec
push
rclb
stos
lods
mov
xor
pop
inc
test
mov
leave
xlat
jmp
insl
sahf
iret
sub
jns
xchg
cmp
sahf
inc
std
xchg
dec
fstl
cmc
stos
rcr
mov
orb
push
dec
add
sub
jo
adc
cs
fcomi
xor
inc
scas
dec
cmp
pushf
aam
dec
cmc
or
mov
out
mov
js
ficoms
mov
inc
push
pop
push
mov
xchg
jp
xor
subb
dec
push
outsl
out
add
or
xchg
xchg
push
divl
adc
das
adc
out
and
mov
repnz
fsub
je
mov
arpl
shll
pop
movsb
and
sub
adc
inc
hlt
cmp
rorl
orb
in
mov
dec
cmp
shll
in
insb
enter
xchg
xchg
push
push
pop
inc
loope
xor
out
xchg
fisubrl
sub
xchg
sub
mov
push
add
insl
adc
shl
jbe
out
arpl
inc
scas
aam
jecxz
repz
iret
push
sub
lods
ja
sbb
dec
ss
push
sbb
sbb
clc
loope
sbb
inc
in
scas
xor
push
adc
roll
ja
int
cmpsl
loop
jbe
mov
ret
insl
add
ret
mov
les
mov
push
testl
pop
repz
int
pop
les
aaa
lds
and
mov
mov
add
mov
ds
outsl
leave
jg
sub
mov
sahf
jno
cld
jbe
es
pop
movsb
addr16
shll
insb
sub
xor
imul
stc
clc
push
into
movsb
jns
adc
call
scas
sti
mov
movl
mov
imul
mov
mov
add
pushw
aas
pop
mov
inc
sarl
xchg
les
jg
xor
mov
add
jns
xor
enter
dec
xor
mov
jns
popa
arpl
xchg
inc
pop
out
mov
sub
movsl
add
fnsave
popf
aad
xchg
lcall
lcall
pop
sbb
pop
xorb
sbb
outsl
mov
mov
push
and
shrl
add
insb
mov
cmp
arpl
adc
jae
jmp
repz
cmovle
stos
inc
lds
rcrb
mov
mov
and
push
in
mov
mov
out
lahf
pop
popaw
mov
lods
jae
imul
push
jne
arpl
push
das
xor
jmp
push
or
mov
push
sbb
stos
loope
and
out
sub
fmull
lea
iret
cmpsl
insl
stos
aaa
loopne
idiv
mov
and
or
push
cmp
jmp
movsb
jns
add
lahf
cmp
fcmove
fcompl
xchg
mov
fdivl
lahf
jns
lea
cmp
push
sub
push
outsl
push
stc
or
add
push
pop
sbb
sahf
pop
mov
inc
mov
pop
inc
fcmovbe
jo
outsb
aad
dec
mov
dec
pop
movsl
loopne
fdivl
out
mov
loope
sub
push
ljmp
or
sti
mov
arpl
mov
push
jbe
pmuludq
cmp
aaa
clc
ret
cmp
inc
mov
mov
scas
fcoms
fsubrp
ret
enter
add
xchg
jns
mov
push
mov
inc
in
xor
ret
inc
hlt
into
stc
idiv
lods
and
dec
mov
test
popf
add
dec
add
sbb
cmp
mov
dec
fadds
pusha
or
rolb
dec
cld
daa
repz
and
jl
cs
jbe
mov
pusha
mov
mov
jge
xor
iret
sub
test
sbb
sbb
mov
fs
movsb
fldenv
inc
pop
mov
push
lods
jl
jbe
jp
shlb
je
mov
lahf
aas
jbe
dec
test
fnstenv
movntps
add
mov
fldt
adc
es
fsubrs
icebp
inc
mov
les
dec
cmpsl
outsb
mov
mov
int3
pop
ret
mov
xchg
xchg
imul
xchg
cmp
enter
cli
and
mov
or
push
lcall
sbb
xor
lret
loopw
xchg
int3
or
std
lcall
addr16
adc
subl
mov
cmp
aaa
and
bound
sub
lods
aas
aaa
add
add
adc
lahf
push
dec
cmp
arpl
cwtl
or
xchg
notl
out
iret
stos
mov
mov
sub
mov
xor
pop
sbbb
sahf
ss
pusha
outsb
imul
pop
cmp
mov
rolb
stos
pushf
push
sub
mov
or
movsb
mov
jae
xchg
jne
call
lret
xor
jns
and
stos
ljmp
adc
xor
xlat
or
jbe,pn
push
pop
add
jo
and
in
push
or
mov
enter
xchg
out
loop
lcall
dec
fimull
push
cmpsb
ret
xor
aas
pop
jmp
xchg
lcall
aad
inc
lcall
cld
scas
in
mov
push
movsl
stos
inc
sub
repz
pop
repnz
jge
test
aad
mov
outsb
and
mov
sarl
or
xchg
repnz
pop
ds
pop
cmp
cmp
das
mov
addb
mov
mov
mov
pop
repnz
cli
adc
add
gs
cmc
adc
mov
xor
movsb
popf
xor
in
jecxz
inc
mov
ret
test
ror
xchg
lds
pop
push
push
in
test
xchg
addb
mov
jns
stos
loope
adc
adc
or
pop
pushf
je
outsb
pop
mov
sbb
dec
xchg
jecxz
and
jb
cli
iret
clc
sub
iret
fadd
fidivl
push
xor
scas
lcall
shrb
mov
mov
mov
pop
stos
stos
ror
sub
add
enter
jnp
outsl
rclb
jmp
out
push
lret
xor
jns
pop
scas
mov
jns
mov
subl
pop
cwtl
sub
outsl
add
bound
inc
sub
mov
dec
aaa
mov
aas
cmpl
xchg
lret
lea
stos
cld
sbb
hlt
pop
adc
pop
insl
pop
push
call
pop
xlat
cli
mov
test
sbb
lock
test
push
mov
insl
sbb
bound
outsb
ss
ss
xchg
jbe
push
sbb
mov
mov
adc
scas
inc
nop
mov
stc
push
test
outsb
sbb
mov
jo
and
jbe
mov
fdivrs
aam
dec
cmp
or
mov
pop
mov
popf
or
loopne
inc
lcall
jmp
mov
mov
lock
cld
sbb
out
lods
and
iret
push
clc
adc
stos
xorl
addr16
into
sub
add
es
addr16
xchg
enter
pusha
xchg
and
dec
data16
ds
sub
add
aad
mov
fmull
pop
jle
out
cmpsl
mov
jecxz
adc
outsl
pop
mov
push
das
idivl
pusha
mov
imul
cli
and
add
or
push
pusha
in
inc
push
sub
dec
or
movsb
pop
aam
mov
xor
sbb
jl
pop
or
mov
jae
into
stos
xor
adc
jne
lods
mov
pop
push
jns
les
imul
lods
addb
inc
mov
es
imul
cmpsb
mov
movsl
mov
bound
or
dec
ja
imul
lock
ljmp
aaa
mov
pop
outsb
add
jge
sbb
pusha
add
or
mov
pop
das
stc
cwtl
movsb
repz
repz
fwait
hlt
or
cmp
into
jo
xchg
loop
fldenv
out
mov
mov
test
call
jnp
jnp
stos
lods
jbe
mov
sub
ret
push
rcrb
mov
mov
push
add
fisubrs
lcall
jle
pop
mov
cmp
fstl
or
je
push
sub
cvttps2pi
or
in
mov
mov
mov
sbb
fsubs
imul
xchg
mov
pusha
sub
dec
aas
jno
adc
pop
mov
cld
rolb
jmp
mov
movsb
movzbl
xor
inc
std
ficoml
sahf
out
add
pop
mov
icebp
mov
cmpsb
xchg
sub
adc
shrb
call
popa
push
mov
sti
shrl
hlt
fcmovnbe
jnp
pop
cmp
jge
mov
mov
movsb
cmpsl
in
xchg
cli
hlt
sar
cmpsb
inc
pop
out
outsb
int
pop
rcr
bound
test
stos
cwtl
ja
xor
hlt
in
js
enter
je
inc
imul
cltd
in
mov
scas
inc
shll
fldcw
cmpsb
out
inc
mov
jnp
mov
adc
inc
scas
lret
xor
daa
xchg
fdivl
sub
cmpsb
or
add
imul
imul
jmp
hlt
dec
push
lahf
push
rcll
test
outsb
mov
aas
sbb
pop
repnz
popf
cmpsl
mov
stc
mov
stc
cwtl
mov
bound
shr
sub
lods
lahf
push
push
sbb
adc
cwtl
mov
push
mulb
mov
sti
pop
getsec
bound
dec
push
lcall
imul
mov
stc
into
jnp
out
xor
lcall
sahf
dec
pop
sub
jae
stos
rorb
ret
adc
lock
sahf
dec
scas
loope
aam
mov
scas
mov
mov
or
mov
adc
and
mov
lret
cmp
adc
mov
outsb
enter
fdivl
ljmp
jns
outsb
ret
xor
mov
es
sub
outsb
imul
ds
push
nop
shlb
dec
dec
xor
adc
pop
pusha
stos
sbb
lods
pushf
int
movsl
dec
sub
cs
sarl
jle
inc
adc
insl
cmp
sub
or
fdivrs
ja
jnp
insl
adc
out
mov
sbb
jle
push
cmp
push
sub
and
jo
sub
pusha
arpl
and
cmp
inc
push
repz
mov
push
mov
mov
add
stos
jmp
addl
cmpsl
cmp
cli
sub
ljmp
mov
push
mov
sub
dec
jb
fisubs
out
mov
xor
ret
mov
dec
push
scas
jb
sbb
jne
sub
insb
mov
adc
faddl
dec
pop
ss
aam
push
pop
setg
xchg
or
push
mov
push
ja
jae
iret
xor
and
push
aam
xchg
and
jle
mov
pop
daa
mov
adc
pop
mov
fiaddl
ss
sti
cmp
xchg
movsb
jmp
jns
mov
repz
sbb
leave
and
js
push
aam
mov
lcall
mov
mov
mov
hlt
inc
arpl
fisubs
lods
mov
or
add
inc
cli
sub
pop
cs
add
cmp
test
mov
jns
icebp
xor
lret
inc
jecxz
mov
adcl
pop
movsb
incl
sub
ljmp
shl
and
mov
sub
sbb
mov
or
inc
jb
loop
mov
jo
outsb
adc
jnp
and
dec
cmp
sub
ja
pop
lcall
jnp
stos
push
rorb
mov
sub
cmp
pop
fldt
pop
mov
fcomps
mov
or
and
daa
lock
inc
mov
nop
xor
xchg
fisubs
and
hlt
pop
mov
lcall
dec
inc
push
into
and
call
jmp
jge
pop
test
out
sub
ja
pop
mul
negl
mov
gs
packuswb
scas
lods
mov
and
push
jnp
icebp
pop
xor
dec
ret
xchg
xchg
dec
leave
push
jl
les
scas
mov
cmp
daa
push
cmp
inc
jl
mov
adc
and
sub
sti
mov
inc
xchg
in
imul
add
xor
jle
inc
add
je
adc
push
xchg
pop
inc
les
jb
jge
fwait
or
mov
xchg
call
repz
lods
push
roll
jg
adc
and
incl
mov
loope
adc
dec
or
movsb
cmp
xchg
aaa
rcll
pop
mov
mov
sti
xor
push
stc
arpl
mov
cmp
das
clc
mov
push
push
xor
and
sub
mov
push
mov
add
sub
xor
icebp
pop
push
xchg
push
sbb
or
stc
shl
add
les
in
in
ja
dec
or
sbb
add
xlat
sub
sub
jp
hlt
jmp
push
lea
in
cs
mov
adc
les
idiv
mov
std
xchg
pcmpeqb
movsb
decb
test
mov
mov
inc
sub
aam
sbb
cli
jecxz
shrb
mov
push
jmp
sbb
test
int3
rorl
push
xlat
and
sbbb
pcmpgtd
hlt
pushf
and
xchg
xor
dec
lcall
xchg
add
push
fdivl
mov
push
andb
jge
dec
js
nop
xchg
adcb
cmp
jno
scas
pop
movsb
cmp
ret
scas
ret
jne
cs
mov
psubw
push
jle
sub
pop
mov
sub
cmpsl
mov
fildl
dec
icebp
or
test
lret
out
lret
call
sub
pop
xchg
bound
stc
dec
std
cld
mov
movsb
sbb
add
je
mov
xchg
call
xchg
xchg
fadds
das
mov
lea
movsb
jbe
jne
xchg
stos
stc
adc
dec
aas
les
test
mov
push
out
and
stos
cmp
inc
jb
fwait
jno
cmc
cmp
inc
sbb
push
add
cs
mov
jle
in
add
push
push
shlb
xchg
js
cmpsl
addb
mov
adc
mov
inc
cmc
jbe
out
cmp
jb
push
stc
push
das
xchg
aad
aas
aam
fmul
xor
ficoml
sub
lcall
movsb
fldl
fs
push
xchg
dec
dec
and
popa
inc
xor
pushf
ljmp
push
mov
inc
adc
mov
pop
sbb
ret
xlat
mov
add
sub
cwtl
movsb
loope
xchg
sub
add
xchg
inc
and
shrb
int
cmp
ljmp
mov
shll
adc
push
add
cmp
and
mov
and
push
dec
cltd
andl
push
mov
scas
gs
jnp
pop
std
stos
add
sbb
repnz
and
scas
push
push
sub
rolb
cmp
fcomps
and
mov
movsb
pop
pusha
aam
inc
shlb
cmp
aad
mov
pop
jne
ss
test
jge
lea
outsb
add
js
stos
mov
push
cmpsl
movsb
xor
cmpsb
popf
lcall
push
popl
repnz
test
mov
pop
mov
mov
jl
ljmp
sub
lock
inc
ror
stos
stc
fs
scas
ds
cld
mov
or
test
jbe
jae
push
xchg
test
in
shl
xchg
dec
in
mov
test
fdiv
fidivs
pop
decl
stos
inc
call
test
sbb
mov
xor
inc
movsb
sbb
xchg
pop
lds
sbb
sarb
sbb
hlt
in
mov
jb
imul
xor
gs
push
vmread
stos
pop
mov
lods
sbb
jmp
gs
cmp
add
sarl
loope
repz
xchg
mov
mov
leave
clc
add
inc
mov
test
shlb
pop
mov
xor
mov
nop
adc
jecxz
mov
dec
jp
bound
lock
jecxz
aaa
subb
sbb
mov
mov
jno
jns
jo
cli
aaa
xor
add
stos
test
fmul
ljmp
movsb
push
add
inc
or
pop
xchg
cmp
movsb
lcall
in
fiaddl
fsts
xchg
bswap
sbb
test
ss
insl
mov
or
xor
xor
inc
xchg
movl
movsb
scas
pop
xor
jo
dec
pop
dec
mov
mov
int3
fisubrl
sbb
js
pop
dec
mov
rcrb
adc
jne
es
mov
fnstenv
mov
inc
xchg
aad
loope
adc
mov
clc
and
scas
fldenv
cmc
insl
push
xchg
sbb
cmp
mov
push
aad
mov
je
xchg
xchg
loope
sub
push
push
mov
test
cmpsl
stos
les
jnp
inc
push
iret
test
loope
fisubrl
mov
and
and
sahf
sahf
fadds
daa
jge
sbb
jmp
sti
aas
pop
loop
cmp
add
icebp
or
ficompl
fwait
pop
insb
scas
clc
pop
pop
cli
cmp
or
lea
push
mov
shr
fisubrl
sub
iret
sub
or
sub
pop
xlat
dec
mov
push
subl
pop
push
data16
call
mov
sbb
push
incb
enter
outsl
fucomp
in
ret
out
xchg
mov
es
adc
sub
in
out
int3
leave
ja
fnstcw
jb
mov
int3
inc
jmp
inc
sub
cmpsl
inc
dec
mov
xchg
mov
sub
and
jge
imul
and
sbb
jne
outsl
pop
sub
mov
outsb
lods
sub
lock
iret
aas
in
test
je
push
inc
jns
movsb
and
sbb
adc
addb
sahf
arpl
pop
ficompl
push
mov
subb
mov
pop
xor
loope
xchg
jnp
cmc
sub
pusha
mov
in
or
mov
jno
and
mov
popa
mov
out
adc
repz
movsl
fcomip
loope
xorl
aas
mov
sub
dec
and
jnp
cld
mov
out
push
pop
lds
movsb
or
pop
pop
or
cmp
jbe
scas
std
fiadds
sub
and
lcall
pop
adc
and
faddp
out
jns,pt
out
neg
and
cmpsl
cld
in
inc
push
push
cmp
cmp
mov
adc
add
cltd
iret
ljmp
or
fisubrs
cld
inc
les
int3
jp
mov
xchg
into
add
jg
pop
push
pusha
movsb
fistl
add
insb
pop
sub
movsb
shrl
mov
xchg
inc
jns
sub
movsbl
hlt
lods
or
xchg
cmp
stos
enter
push
mov
add
subl
or
sub
cmp
lds
xor
jo
or
or
mov
jo
int3
lds
dec
or
xor
ljmp
mov
xchg
sbbb
mov
xchg
pop
fidivl
das
imul
bound
mov
cmpsb
jne
das
lods
or
dec
movsl
sub
movsb
mov
cmp
or
jns
hlt
add
mov
cmc
mov
cmp
gs
jge
xor
scas
xchg
loope
sbb
repz
cld
jle
enter
repz
lods
jecxz
movsb
mov
stos
inc
inc
ficoml
sbb
adc
repz
out
ficompl
les
pop
mov
jmp
les
xor
cltd
push
hlt
cwtl
test
xor
movsl
and
jmp
inc
sbb
ret
call
inc
sti
test
mov
movsb
call
xor
mov
fsubr
and
push
fsts
movsb
jns
push
jp
shll
mov
jo
enter
and
cmp
outsl
in
imul
inc
jmp
xchg
xor
or
jns
or
lods
sub
dec
sbb
xor
in
dec
xchg
aam
jb
cmp
fildll
fs
jge
loope
out
adc
cmpb
mov
rcrl
cmpsb
movsb
sub
notb
sub
or
add
cmp
jmp
pop
sbb
and
xchg
push
lods
mov
cmc
or
push
ret
mov
sub
xchg
pop
das
jno
repz
loope
mov
in
push
jl
rolb
lea
mov
iret
aad
xchg
sbb
mov
and
fwait
sbb
mov
rolb
and
addl
cmpl
es
lcall
sbbl
and
fsubrs
cld
xor
or
push
js
mov
mov
pop
jge
mov
cmpsl
mov
sub
repz
mov
daa
ret
add
jecxz
push
stc
ss
adc
loop
sub
je
mov
ljmp
jb
push
lods
push
xor
mov
cmpsb
or
push
sub
sbb
rcr
adc
scas
stos
mov
mov
shl
mov
mov
mov
test
dec
movsb
loope
icebp
add
lcall
sub
push
sbb
mov
addl
enter
push
lret
cwtl
lock
pusha
stos
sub
aaa
movsl
hlt
lea
cld
inc
addb
mov
out
jle
daa
mov
adcb
xor
sub
fwait
imul
aas
movsb
or
xchg
insb
xchg
dec
sbb
xchg
aas
or
dec
ljmp
bound
sub
xor
mov
enter
mull
sbb
and
dec
js
fsubrl
stos
enter
outsb
or
negb
xchg
sub
xor
andb
push
sbb
push
cmp
wbinvd
push
iret
loop
js
jle
dec
sub
stos
push
lcall
add
xchg
mov
mov
mov
mov
or
js
inc
jbe
mov
push
sbb
add
mov
cltd
pop
es
xchg
adc
mov
bound
push
mov
and
jns
mov
cmp
pop
sbb
das
xchg
or
cmp
stos
jp
pusha
loop
shlb
adc
mov
sbb
inc
jge
fsubs
leave
mov
sub
sub
sub
imull
mov
sbbl
stc
sbb
fimull
js
cmp
lods
subb
scas
push
lds
outsb
outsl
fwait
xlat
add
das
dec
cmp
mov
aad
xcrypt-cbc
cmpsl
xchg
xchg
aad
inc
push
xchg
out
sbb
enter
push
mov
adc
imul
lock
lcall
pop
jne
mov
sahf
sub
out
pushf
jle
mov
push
aam
lcall
jb
les
rorl
inc
movsl
cmp
and
je
sub
pop
mov
mov
mov
jge
or
xchg
sub
and
push
pushf
jno
pop
pop
pop
sub
or
jo
repz
sub
or
mov
out
addl
xchg
mov
in
pushf
fldl
cmp
addr16
push
jecxz
js
mov
enter
ja
pop
movsl
scas
push
sub
mov
insl
notl
jbe
xor
cmp
gs
cmp
sub
inc
addr16
cmp
jno
lock
iret
lds
jmp
scas
sbb
dec
movsb
xchg
xchg
les
loop
mov
in
cld
jl
xor
scas
xor
mov
outsl
sbb
pop
stos
ror
cli
add
push
and
mov
xchg
test
push
cmp
xchg
out
sahf
bound
call
add
outsl
push
cs
sbb
mov
dec
fwait
push
inc
xchg
or
out
js
sti
inc
push
mov
lods
cmp
outsb
sbb
jmp
inc
outsb
popa
mov
or
pop
lcall
call
stc
pop
insb
aas
mov
jp
bound
sub
add
jbe
stos
movq
dec
cmp
push
rcl
arpl
fisubs
adc
jb
aad
stc
js
lods
mov
push
hlt
stc
ret
mov
into
mov
inc
add
ret
sub
sub
xchg
clc
xorb
xor
pusha
std
dec
packuswb
ffree
sub
pop
and
and
sahf
mov
adc
mov
and
mov
addr16
mov
sub
jmp
mov
pop
arpl
orb
cmc
jo
movsl
and
mov
sarb
test
adc
lea
xor
aam
das
push
mov
dec
cmp
movl
mov
xchg
cs
cmp
sub
es
aas
xor
mov
xchg
scas
pushf
pop
fisubl
ss
lcall
or
ret
sub
add
mov
jmp
shrl
xor
pop
sub
test
dec
adcb
je
inc
xor
pop
mov
into
loop
fdivrl
stc
and
jb
cmp
clc
stos
insb
int
jp
push
out
and
dec
jno
ljmp
fldt
shr
cmp
inc
adc
lods
dec
mov
pop
cmp
cmp
hlt
rorl
por
in
popa
mov
movsb
outsb
pushf
inc
adc
out
xor
ja
xor
shr
xor
xchg
mov
push
xor
inc
icebp
cltd
mov
loope
adc
pushf
and
mov
jnp
stos
cmp
fsubs
lret
or
test
lcall
std
inc
mov
incl
sti
inc
icebp
inc
mov
cmp
repnz
cmp
mov
mov
shl
sbb
mov
sub
xchg
ds
hlt
or
cmp
loope
xorb
and
sub
leave
cmp
cs
add
mov
ljmp
cmpl
mov
pushf
mov
sub
or
add
xchg
and
lods
mov
mov
movsb
mov
les
aad
inc
xor
sbb
test
mov
out
sbb
fisttps
daa
fimuls
enter
mov
xchg
into
and
nop
push
outsl
cmp
add
sub
push
bound
fcomps
ds
jns
pusha
mov
cmp
push
aad
mulb
iret
add
in
cmpsb
add
movsb
pusha
adc
popf
push
jp
mov
lods
nop
mov
jl
sbb
push
add
loopne
sahf
dec
mov
loope
fsubrl
setno
ds
dec
repnz
loop
repnz
ja
dec
mov
repz
mov
gs
shr
sbb
jl
addr16
sbb
dec
mov
xchg
xchg
pop
or
test
xchg
push
loopne
xchg
xchg
pop
mov
mov
cli
pushf
push
sbb
cmpsb
mov
adc
into
inc
push
pop
icebp
jecxz
and
mov
gs
imul
sub
inc
loope
pop
int
push
pop
jge
mov
mov
pop
lods
lahf
push
push
lods
mov
cmp
jmp
pop
inc
xor
scas
outsl
in
hlt
out
aas
cmc
repz
stos
cmp
xorb
bound
icebp
jb
push
xor
leave
xchg
dec
jo
mov
mov
shl
sbb
stos
jge
loope
in
add
fwait
jle
and
es
ret
fsubr
jne
mov
cltd
inc
lds
pop
push
lea
jge
sbb
dec
push
mov
sbb
adc
mov
dec
aad
fbstp
fisttpl
fisubrs
stc
mov
and
add
cmp
or
dec
movsb
cli
gs
fisubl
insl
xchg
mov
mov
je
and
mov
shr
mov
and
cmp
mov
orl
lock
cmc
bound
lcall
add
pushw
ret
cmp
pop
mov
pop
or
xor
mov
push
or
lret
push
pop
cli
fistpl
pusha
repnz
pop
subb
mov
adc
andl
jbe
bound
pop
ss
dec
fistpl
adc
movsb
sarl
iret
mov
mov
pop
push
and
jno
adc
shll
pusha
dec
sahf
jnp
sti
sbb
adc
jb
cmp
dec
mov
add
int3
jne
pop
cmp
mov
icebp
movsb
pop
popf
into
das
sub
push
jno
out
mov
push
lods
ror
push
ljmp
es
rcrl
movsb
fnstenv
inc
gs
mov
imul
lret
enter
cmp
ss
addb
cmpsl
mulb
lock
xchg
out
das
mov
lcall
dec
jg
pop
fidivs
push
xchg
xor
popf
insl
cmp
arpl
rorl
jmp
sbb
mov
mov
sub
ret
mov
dec
mov
hlt
mov
lret
xor
jo
or
xchg
pop
push
ds
mov
mov
mov
loop
insb
lahf
scas
lret
lods
jno
jmp
in
movsl
jle
add
icebp
daa
mov
cmp
jno
or
lcall
fcomps
adcb
or
inc
mov
mov
jb
scas
cmc
stos
loop
xchg
insb
jge
push
aas
jb
jmp
sti
mov
sbb
shll
and
pop
jp
adc
xorl
inc
xchg
shrl
addr16
mov
js
inc
xor
stc
push
daa
cltd
sbbb
std
aas
xchg
je
and
cmp
ret
aas
jne
xor
mov
jmp
sbb
push
xchg
add
aad
lret
push
mov
fldenv
jge
cmpsb
mov
cmpsb
adc
add
mov
or
jge
stos
pop
pop
icebp
loope
ret
sbb
push
mov
dec
mov
dec
ljmp
stos
roll
inc
adc
loopne
shll
shlb
aam
adc
insl
idivb
push
ror
mov
ficomps
lea
mov
and
jecxz
jno
mov
repnz
mov
outsl
clc
mov
cld
movsl
cmpl
sbb
std
call
ret
or
fdivl
jnp
scas
pop
sahf
test
les
jo
repz
rcrb
repnz
fdivrl
dec
push
fwait
test
push
jmp
or
and
cmp
loop
int
sbb
xor
inc
push
push
aam
repz
cmpsb
enter
push
faddl
push
pop
sub
xor
inc
test
jnp
jg
cli
jne
lcall
lods
xchg
vunpcklpd
fsts
xchg
fadds
mov
jle
rorl
pop
push
lcall
das
stc
inc
lret
mov
cltd
push
ljmp
mov
dec
dec
mov
cmp
add
or
lods
add
pop
inc
outsb
xor
sbb
sub
push
sbb
jg
testb
sbb
rcrl
mulps
rorb
jge
out
cld
xorl
mov
movsb
repz
pop
fdivs
or
sbb
cli
hlt
pusha
cmp
and
movsl
mov
in
les
mov
daa
leave
cmovb
cs
mov
movsb
sub
mov
xchg
push
std
xchg
imul
testl
test
adc
bound
push
fstps
or
pop
or
jmp
mov
inc
mov
icebp
add
push
dec
in
xchg
pop
insl
adc
lods
and
bnd
mov
test
in
cmp
int3
enter
dec
and
test
repz
lods
loope
mov
addl
xor
dec
mov
add
dec
cmp
push
hlt
adc
sahf
jmp
pop
jno
xchg
ud0
int
lds
mov
lods
push
mov
jle
mov
pop
mov
fdiv
cmp
aaa
nop
xor
outsl
cmpsl
pop
pop
and
ds
in
mov
je
setp
adcb
mov
dec
cwtl
and
inc
mov
adc
in
les
sub
pop
clc
pop
mov
loopne
mov
pop
gs
adc
mov
fbld
loop
loope
in
inc
pop
xchg
daa
insb
mov
jmp
mov
cmp
or
pushf
in
dec
lahf
dec
test
cld
jns
fdivrs
loope
popf
imul
and
icebp
movsb
ficoml
xchg
or
decb
push
leave
ficoms
jge
incl
xor
in
jp
jmp
dec
mov
movsl
and
notb
int
mov
push
and
sarl
jo
scas
pop
adc
adc
pop
jge,pt
fs
push
lahf
push
rolb
bound
jae
mov
xchg
adc
jge
and
andb
or
mov
mov
mov
int3
mov
push
sbb
lret
fsubrl
push
insb
aam
shrl
fcomi
fstps
sub
pop
lock
add
mov
sub
inc
testb
push
pop
rol
sub
test
and
jns
jmp
out
fdivr
inc
imul
les
mov
les
icebp
inc
repnz
or
xor
jno
insl
fsubrs
lret
sub
mov
mov
adc
lods
mov
out
dec
sbb
mov
ficoml
test
sub
js
ret
in
jp
sbb
adc
sahf
and
cmp
sbb
in
adc
dec
or
jne
outsb
call
pusha
mov
arpl
imul
adcb
jnp
aam
in
mov
add
sub
mov
imul
int
dec
lret
xor
test
push
push
mov
mov
int
or
or
in
cmpsb
add
xchg
lret
fsubrl
and
js
aad
pop
inc
ret
mov
mov
xor
fistpl
shlb
sbb
jecxz
pop
jno
sarl
ljmp
int
push
out
add
xor
push
lcall
pop
outsb
mov
or
bound
testl
xor
orb
add
popf
lret
mov
call
push
mov
mov
or
gs
shr
inc
push
lds
jno
mov
pop
xchg
in
xchg
stos
mov
push
cmp
push
mov
mov
dec
shl
les
xchg
scas
mov
push
jmp
lcall
mul
mov
mov
js
sub
into
ret
jp
nop
push
push
xchg
xchg
mov
ja
add
mov
in
notb
inc
cmpsl
push
push
lds
scas
cmp
jg
dec
stc
fcoms
push
movsb
cwtl
in
je
sub
scas
push
jo
sub
notb
and
imul
ret
loopne
xchg
aad
mov
shll
jb
mov
gs
popf
mov
rcr
push
adc
fdivrs
iret
das
leave
xor
dec
sbb
ficoms
pushl
and
lea
cmpl
out
movsb
cld
in
jb
sbb
mov
icebp
pop
mov
mov
mov
lods
mov
xchg
loope
dec
mov
movsb
push
pusha
mov
popa
jno
cmc
xchg
push
insl
shl
mov
adcb
hlt
or
cmp
push
sbb
das
sbb
movsb
push
add
adc
lret
repz
fistps
pop
out
xchg
push
jge
xchg
imul
add
and
dec
xchg
in
pop
js
jnp
sbb
inc
xchg
ljmp
out
lock
mov
clc
mov
lahf
insb
repz
lods
addb
mov
addr16
jae
mov
iret
lods
loop
bound
hlt
mov
xchg
mov
push
data16
inc
sub
popa
insl
dec
imul
jb
shrl
push
mov
jae
in
aad
dec
imul
test
daa
push
xchg
fadds
pop
rcrb
jo
stc
test
push
fadds
sub
scas
cli
addr16
sbb
adc
jae
daa
mov
pop
push
jo
cwtl
xchg
lea
xchg
inc
fisttps
outsb
sub
scas
rorl
hlt
scas
mov
or
icebp
xor
or
xchg
or
sahf
pop
popa
repz
adc
sbbb
push
das
jbe
clc
out
mov
std
dec
pop
push
incb
loope
or
fstps
dec
orl
adc
sub
and
aad
lock
sub
insb
mov
add
push
jo
je
iret
lret
lds
testb
cmp
adc
pop
addb
sub
xchg
mov
fistpl
into
out
cmp
mov
das
lods
loopne
dec
push
stos
ror
sub
mov
jns
push
or
mov
mov
loopne
adc
sub
popf
push
dec
mov
xor
or
ret
js
mov
sbb
mov
inc
nop
jmp
inc
ljmp
push
dec
cld
and
pop
mov
stos
cmp
lock
fstps
lds
and
and
int
cmp
movsb
xor
adc
ss
hlt
sub
les
push
ret
push
cltd
push
das
or
dec
and
stc
notb
iret
push
cmp
jns
cltd
mov
add
or
xlat
sbb
sbb
push
sub
adc
es
mov
cmp
mov
sbb
fstpt
fidivrs
sarb
mov
enter
add
mov
push
dec
aaa
movsl
xor
pop
lock
stos
iret
jb
inc
mov
cs
stc
dec
cmp
push
std
mov
fsubl
out
rcrb
int
ja
ds
fidivrl
dec
mov
iret
repnz
iret
int3
and
adc
lcall
mov
loopne
subb
mov
lods
push
mov
mov
dec
fsubrp
imul
aad
cld
mov
cmp
out
jmp
xor
and
mov
stos
pop
sbb
or
sub
pop
mov
outsb
ret
loopne
pop
clc
add
in
push
push
and
int
jns
lcall
pushf
ja
pop
js
in
sub
pop
push
mov
pop
fs
outsl
fidivl
sbb
xor
jb
in
cmc
int
lahf
inc
pop
pushf
cmpsb
xor
mov
out
inc
push
xchg
sbbl
and
ja
repz
int
push
scas
dec
and
aad
pop
int3
insl
jns
aad
dec
mov
pop
adc
and
dec
cmp
and
mov
dec
mov
test
jo
mov
sbb
dec
sbb
pushf
mov
or
rolb
xor
sub
pusha
cld
sub
sbb
dec
mov
or
mov
outsb
mov
sub
mov
jge
movsl
in
xchg
popf
jmp
pusha
outsl
in
mov
jmp
enter
enter
lahf
inc
insl
int3
stos
fldl
pusha
pusha
int
test
dec
insl
mov
mov
push
fisttps
sbb
sub
fcompl
inc
ja
cs
in
cld
iret
lcall
adc
in
add
mov
sbbb
dec
adc
inc
ljmp
lods
lea
mov
mov
and
orb
pop
push
sub
sub
in
push
xor
mov
mov
es
cltd
loopne
int
cltd
pushf
addl
movsb
jno
dec
das
lods
repz
xchg
mov
mov
inc
sub
pop
jb
mov
iret
push
sahf
scas
lret
icebp
mov
lcall
inc
cmp
movsb
xor
addb
sti
mov
push
jno
push
insl
and
xor
jmp
cmp
xchg
xorl
push
cmp
push
fcoms
push
test
test
in
mov
or
std
outsl
lret
outsb
pop
xor
js
jb
lret
mov
cmpsl
pop
pop
push
popa
jo
jnp
pop
cltd
scas
dec
sbb
mov
pusha
imul
fsubrp
push
inc
movsb
imul
mov
jecxz
jmp
sarl
popf
cmp
push
adc
outsb
repnz
mov
or
pop
adc
jmp
data16
inc
inc
cmp
lods
jnp
xlat
pop
mov
push
clc
xor
repnz
pop
mov
out
cmc
aas
mov
test
mov
data16
fwait
in
xchg
mov
xchg
push
mov
popf
clc
cmpsl
sub
lods
xchg
cld
xorb
or
sbb
or
mov
inc
lds
ret
pop
cmp
mov
xchg
mov
fsubr
cli
push
sub
sahf
hlt
scas
dec
jae
xor
or
and
sbb
aas
xor
cs
out
adc
jmp
movsb
movsl
adc
clc
js
xor
mov
xchg
xor
dec
sbb
sub
dec
jb
sub
xchg
stos
add
xor
fwait
cld
adc
subb
daa
sbb
xchg
jb
mov
std
insb
mov
add
cmc
sub
ljmp
ret
jns
or
adc
pushf
mov
pop
inc
outsl
frstor
adc
gs
push
xchg
jg
ljmp
mov
xchg
rorb
orb
dec
push
icebp
sub
mov
pop
mov
rorl
and
pop
or
es
add
lea
imul
lret
sbb
dec
repnz
xchg
int
insl
test
sub
pop
mov
mov
sbb
les
psraw
lcall
xchg
cld
aad
jbe
loop
jmp
add
iret
fisubrl
push
hlt
mov
addr16
pop
dec
xchg
cmpsb
jnp
push
mov
clc
lret
ficoms
leave
dec
mov
push
jae
bound
test
into
push
mov
adc
dec
inc
add
push
sarl
out
pop
out
mov
popf
popa
or
mov
push
repnz
sahf
mov
and
loope
mov
fisubs
out
popa
jb
movsb
cwtl
daa
mov
lock
enter
loope
js
adc
lods
and
push
out
adc
in
sub
add
and
push
cmp
and
das
stos
mov
int3
movsb
fisubrs
pushf
adc
in
push
ja
fsubrs
stos
mov
sahf
dec
cmpsl
in
push
push
insl
xor
cmc
xchg
mov
xchg
aam
incb
xchg
mov
loope
ljmp
dec
cld
out
push
scas
iret
mov
fistpll
cmpsb
mov
repz
mov
int3
sbb
test
out
dec
pop
mov
jge
push
sahf
imul
xchg
int3
cmpsl
mov
test
lcall
xchg
sub
mov
jae
dec
repz
in
into
xor
and
bound
leave
pop
sub
cmpb
decb
inc
xor
imul
push
js
scas
mov
out
jb
push
movsb
push
cmc
pop
fsubs
movsb
ss
inc
out
adc
inc
adc
pop
push
dec
clc
mov
jno
iret
repnz
xchg
repz
popf
xor
gs
lock
and
jae
arpl
gs
ljmp
dec
push
ret
dec
mov
sbb
push
dec
jl
rcl
sbb
dec
cmpsl
and
or
pop
hlt
in
xchg
push
sub
sbb
mov
inc
adc
inc
cmpsl
mov
loop
sub
mov
mov
and
les
xchg
jno
dec
addr16
add
dec
in
data16
lcall
pop
jbe
stc
test
int
daa
and
in
invd
cmp
adc
xchg
stos
jmp
stos
imulb
daa
lods
jno
xchg
ret
rorb
xchg
push
xchg
andb
mov
pop
jge
xchg
adc
or
test
sahf
out
orl
mov
cli
inc
adc
push
sub
pop
int
pop
cmp
dec
pushf
out
or
xor
call
xor
shll
jmp
repnz
mov
stos
lods
mov
adcb
nop
sub
jecxz
rcrb
and
cld
adcl
js
add
push
loope
repz
mov
out
daa
mov
mov
or
nop
daa
notl
fucomip
dec
subb
push
jnp
sarl
mov
les
insl
movsb
adcb
xchg
jge
js
cmp
lahf
scas
mov
cmp
xor
mov
aam
pop
push
mov
cltd
popa
out
mov
lods
cmpsl
int
jmp
push
sub
jp
scas
jo
rcrl
inc
pop
test
imul
lcall
hlt
lods
or
push
das
cld
cmc
mull
inc
add
push
sbb
cs
mov
aad
fbstp
jmp
int
push
dec
hlt
push
mov
fidivl
aaa
mov
dec
lods
mov
mov
jmp
test
cmp
mov
jmp
neg
jb
std
jne
push
leave
jb
add
and
hlt
mov
hlt
into
pop
outsb
sahf
and
cs
add
push
push
fcom
pop
sbb
push
out
cltd
pop
push
dec
cmp
pop
fdivrs
and
divl
and
insb
mov
or
pushf
inc
aad
lahf
mov
je
in
test
mov
or
sub
scas
out
jno
pop
sbb
adc
pushf
mov
inc
mov
or
sbb
mov
push
lcall
dec
ret
lods
and
xor
or
stc
jle
lods
stc
push
xchg
lods
gs
sbb
add
or
inc
enter
imul
mov
mov
cli
add
and
sbb
push
call
pop
fsub
pop
add
adc
mov
pop
cmpsb
inc
das
pop
flds
addr16
push
sbb
jp
out
cmpsl
movsl
sbb
shrb
mov
rolb
rcrl
shrl
jb
xchg
cmp
mov
pop
xor
lcall
sbb
dec
or
lods
xchg
xchg
clc
lea
inc
mov
push
movsb
xor
ror
push
mov
pop
ljmp
add
cwtl
mov
pop
pop
sub
ljmp
push
subl
jbe
enter
dec
sbb
add
cmc
inc
pushf
xchg
jb
ljmp
dec
lods
std
xlat
ror
mov
fld
xchg
push
mov
adc
stos
sarb
stc
ja
add
inc
fsubrs
add
jae
in
or
into
inc
cmp
sub
add
in
push
loope
push
jns
push
mov
mov
addl
ret
xchg
sahf
mov
mov
js
test
jns
cmpl
cmc
fcmovnb
mov
pusha
imul
mov
sbb
test
mov
outsb
xlat
out
sbb
pop
notb
inc
int3
outsb
nop
lods
inc
dec
push
test
iret
sbb
cmc
in
push
jns
or
daa
xor
enter
xchg
push
iret
add
push
push
mov
push
xchg
pop
fsubrl
push
insl
cmp
cmpb
int
cmpsl
fisttpl
jle
in
cld
pushf
xlat
cwtl
pop
sahf
aam
sub
pop
cvttps2pi
dec
sbb
sub
lea
jle
pusha
fiaddl
and
ret
dec
push
jg,pt
inc
xchg
hlt
or
out
out
rcll
bound
sbb
adc
cmp
icebp
aad
hlt
popa
inc
sbb
mov
xchg
sbb
inc
xlat
insb
pop
cwtl
pusha
shll
adc
int
repz
out
xchg
divb
mov
xorb
scas
cld
push
adc
add
fdivr
xchg
lock
jns
sbb
jns
inc
push
sbb
dec
xor
std
cmp
push
lret
out
mov
aaa
mov
and
and
push
fcompl
pop
das
xor
fisttps
mov
cmp
cmp
xchg
mov
repnz
scas
out
add
or
pushf
add
mov
dec
ficoml
xchg
xor
inc
movsb
xlat
sbb
jb
pushf
ja
enter
inc
push
int
inc
pop
pop
lock
and
adc
iret
xor
sub
lods
jge
inc
add
dec
adc
iret
sub
test
xlat
mov
cmp
sub
ljmp
cmpsl
lods
data16
fwait
or
cli
lret
pop
push
xorb
lds
mov
sbb
pushf
in
inc
add
mov
jae
roll
fstps
pop
stos
lods
cmpsl
leave
mov
repnz
inc
mov
jb
add
cmpsb
scas
arpl
stos
push
mov
and
dec
inc
test
fnop
push
dec
cmp
movsb
dec
data16
sub
mov
lock
sbb
bound
mov
push
out
sbb
mov
lods
jbe
mov
xor
jle
jae
jns
inc
movsb
push
dec
jmp
aam
filds
inc
fmul
ja
ret
jge
test
test
ret
sub
cltd
fcompl
cld
sbb
mov
or
fs
sti
es
cmpsb
loope
in
repnz
jne
mov
mov
in
jle
test
fildl
xor
mov
add
add
mov
insl
add
test
stc
jg
lret
sbb
inc
pop
cli
movsb
pop
sub
mov
add
mov
push
add
mov
movsb
push
or
sub
fmul
loopne
inc
cld
es
loopne
push
flds
jge
es
ljmp
loop
mov
adc
fcmovnu
dec
push
lret
mov
and
mov
xchg
push
fwait
testl
dec
sbb
push
mov
int
xchg
mov
push
xchg
lahf
sbbb
ss
sbb
rolb
inc
inc
jo
push
pop
mov
aam
out
adc
inc
mov
sbb
mov
mulb
jge
cmpsl
dec
repz
ja
add
cmp
shrb
cwtl
popa
imul
sbb
inc
xor
out
addr16
pop
jne
cs
mov
lahf
mov
push
movsb
rcrl
push
fstps
xchg
sub
pop
lock
push
add
push
xlat
fcoms
or
add
outsl
scas
fs
aaa
call
fsubrl
mov
mov
idivb
pusha
leave
sbb
out
xchg
xchg
cmpsl
inc
jp
scas
fwait
jp
movsb
test
mov
add
push
bound
and
dec
add
push
push
adc
mov
sbb
dec
fisubl
sub
cmpsl
fstpl
int3
icebp
cltd
push
mov
jns
pop
sub
xchg
add
sbb
jo
xor
jae
pop
push
int3
sbb
cmpsb
mov
lea
dec
and
je
arpl
int
int
mov
repnz
sbb
icebp
xor
ljmp
xchg
adc
cld
repz
test
add
mov
movsb
outsl
lods
mov
xor
pop
mov
add
mov
xchg
adc
xor
dec
push
mov
iret
xor
pusha
cs
jge
test
inc
movsb
add
adc
data16
or
repnz
mov
and
and
push
aam
outsl
sub
icebp
mov
adc
mov
jecxz
sub
and
arpl
mov
lock
cmp
insl
cwtl
in
lods
pusha
jae,pt
xchg
pop
mov
imul
ret
andl
out
push
pop
fsubrp
rol
xchg
jl
lahf
insl
inc
mov
xorl
cmp
subb
push
push
mov
mov
ret
pushf
inc
out
mov
add
inc
movsb
add
and
pop
jo
xor
sub
or
popw
jl
or
cs
mov
dec
mov
cmpsl
icebp
pop
and
and
pop
push
cmp
into
in
jmp
xor
push
lods
and
aad
jg
mov
ret
or
sbb
mov
dec
mov
lea
dec
inc
xor
ret
cmp
mov
scas
push
jl
inc
mov
test
mov
push
enter
dec
ds
and
stos
mov
stos
pop
das
call
lret
mov
add
js
scas
mov
fcomps
ficoms
pop
arpl
inc
std
sbb
jmp
jnp
pop
sub
mov
stos
pop
mov
testl
arpl
dec
in
sarl
pop
aaa
pop
movsb
les
stos
scas
mov
std
sarb
mov
mov
subl
jno
outsl
ljmp
mov
cwtl
sbb
shlb
jmp
jge
aam
mov
cmp
and
fimuls
lods
mov
xchg
inc
ljmp
cmp
test
and
clc
cmpsl
int
ds
roll
popa
jno
sub
cmp
fsub
mov
scas
js
cmp
test
sbb
dec
in
in
xchg
mov
xchg
hlt
jb
push
sbb
push
hlt
sub
out
or
mov
shrl
cmc
nop
jno
int
mov
inc
inc
mov
movsb
and
loopne
iret
fimuls
add
inc
loop
out
push
xor
in
push
ljmp
rolb
push
int
jnp
pop
imul
and
jmp
sti
loop
inc
stos
lods
cmp
sbb
idivb
inc
bndstx
xchg
lods
add
cmpsb
faddp
movsb
ret
test
push
push
sub
sub
stos
xchg
jg
mov
iret
mov
cmpsb
out
pop
jb
push
enter
mov
in
mov
stc
dec
imul
jge
lock
sbbb
icebp
call
test
int
lock
mov
movsb
pusha
dec
add
mov
js
fildll
push
addl
lods
jb
out
sub
test
xchg
dec
in
mov
imul
je
jns
repz
push
fsubp
inc
inc
dec
xchg
outsl
sbb
mov
dec
jg
std
pop
mov
push
adc
pushf
xor
fistpl
mov
jb
movsb
lea
loope
aaa
test
sub
sti
seta
or
fwait
mov
and
mov
pusha
jne
aam
pop
into
outsl
xchg
insb
fiadds
fwait
xchg
jo
push
push
fsubr
jg
cmp
mov
dec
mov
jne
push
int3
mov
arpl
mov
mov
arpl
sti
jmp
out
adc
insl
xchg
outsb
xchg
sub
rol
xchg
in
mov
aaa
pop
fisubrs
movsb
sbb
mov
sbb
cli
lret
cmp
jg
push
aas
jp
lods
and
pusha
add
cmp
std
dec
pusha
rcl
inc
inc
xchg
push
dec
mov
call
jnp
daa
bnd
xlat
xchg
lcall
aaa
jne
xchg
and
lcall
xor
push
mov
lods
ljmp
xor
arpl
or
js
mov
xchg
mov
ljmp
add
push
xchg
jp
jmp
in
stos
mov
shlb
pop
pusha
cmp
lahf
and
lret
cmpb
xchg
sbb
hlt
lcall
xchg
cmc
fstps
or
lds
js
and
mov
es
inc
push
fisttpl
push
jno
shlb
pop
mov
mov
js
push
movsb
out
nop
ficoml
pop
mov
imul
outsl
iret
jge
add
xor
addr16
sub
lcall
aam
sub
and
roll
scas
jmp
jno
and
and
and
mov
mov
jo
cmpsb
xchg
push
add
lret
xorl
mov
stos
notl
mov
mov
fmuls
mov
cmp
aam
mov
into
add
jecxz
lock
cmpsl
cmpsl
mov
dec
loop
push
push
mov
and
lods
inc
incl
aam
cwtl
cmc
stos
movsl
xor
xchg
popf
add
adcb
dec
and
aas
push
mov
adc
dec
push
mov
inc
add
push
mov
sti
jns
std
idivb
loope
mov
les
sub
jae
cli
or
aad
xor
pop
clc
inc
imul
scas
cmp
sahf
movsb
dec
lahf
jo
fldenv
dec
sub
pop
jnp
shrb
repz
push
stos
stos
push
cs
aaa
shrl
sbb
mov
lods
insb
leave
andl
iret
icebp
ficompl
cmpl
lods
mov
ret
pop
xchg
mov
jmp
enter
mov
mov
cmpl
sub
stos
int
add
cltd
push
inc
sub
jg
sbb
dec
cltd
lods
popa
push
cmpsl
fdiv
pop
pop
mov
cmp
jl
lea
xor
stc
add
in
pop
push
cmpsb
test
in
dec
xchg
outsl
mov
sub
mov
sub
or
jmp
inc
test
xor
decb
fisubl
xchg
push
in
or
pop
decl
mov
pop
push
add
ljmp
mov
test
bound
call
or
roll
inc
xor
xor
push
mov
jge
jmp
sbb
movsb
sbbb
adc
cmp
add
jp
push
daa
jge
mulb
sub
adc
xor
mov
fisubs
fsubrp
or
fmuls
adc
popf
andl
adc
sub
push
dec
or
cwtl
xor
dec
mov
fucomp
rolb
cmp
ja
adc
mov
insl
movsb
adc
mov
dec
dec
mov
mov
sbb
dec
inc
mov
stos
fcomps
les
aad
jge
test
test
je
and
mov
push
cs
das
cld
xchg
xchg
ret
cmp
and
inc
lcall
mov
xchg
cmp
dec
movsb
push
mov
lock
xchg
jge
mov
ja,pn
faddp
sub
cld
mov
sub
xchg
pop
adcb
jnp
or
out
jecxz
cmp
rorl
jo
stos
shrl
xchg
mov
lods
pop
imul
lea
lcall
push
loope
mov
pop
dec
sbb
mov
fldl2t
into
dec
and
add
xor
imul
movsb
mov
push
mov
pop
out
leave
movsl
jae
jb
ss
out
xlat
sub
dec
pusha
inc
and
cmp
movsl
loop
or
mov
inc
mov
dec
adc
gs
xchg
push
mov
int
cmpsl
cmp
push
xchg
mov
dec
mov
or
sbb
xchg
mov
sti
mov
inc
stos
mov
jl
adc
and
push
pop
pop
aaa
mov
arpl
jmp
inc
lds
outsl
int
sub
push
or
dec
sbb
sbb
jns
mov
push
adc
out
loope
cmp
and
push
sub
sbb
sub
out
pop
dec
leave
negl
xor
mov
mov
mov
jne
mov
call
fsubrp
push
xchg
scas
sbb
inc
movsb
dec
pop
push
lcall
or
shll
mov
lret
fwait
push
lock
sub
jno
lock
cmp
pop
sub
sub
cmpsl
xchg
rorl
iret
imul
mov
mov
xchg
pop
les
mov
mov
int3
xor
sbb
xor
inc
sub
clc
or
push
dec
call
ret
int3
daa
pusha
mov
ret
out
push
dec
mov
test
mov
mov
loop
pop
jecxz
js
sub
sbb
decb
into
cmp
lock
xchg
in
push
into
rep
movsb
pusha
pushf
je
jmp
aad
sub
nop
xchg
fsubrl
idivl
jbe
push
or
sub
in
cltd
mov
out
mov
scas
sbb
push
lcall
in
addl
xor
adcl
call
pop
push
sub
xchg
inc
inc
jno
js
push
cmp
pusha
sub
jno
outsl
and
pop
sub
cmp
push
dec
xor
jns
popa
and
adc
inc
icebp
rep
test
cltd
add
mov
outsl
cs
mov
xor
cmpsb
ficoml
xchg
push
pop
scas
mov
loope
inc
je
cmp
data16
xor
stos
fadds
mov
sbb
xchg
mov
dec
popa
cmp
push
lods
push
and
or
xchg
push
push
push
test
and
inc
mov
adc
stos
outsl
jge
sub
retw
out
xorl
enter
cltd
lea
scas
push
dec
pop
pop
and
mov
cmpl
or
cld
mov
jbe
sub
mov
cmp
aaa
xchg
sbb
xchg
mov
pop
dec
cmc
push
pop
push
movsb
fwait
push
sbb
clc
int3
dec
aaa
add
iret
jnp
inc
enter
lcall
sub
adc
xchg
fmuls
mov
push
and
stos
pusha
stos
mov
cli
lock
jbe
std
popa
mov
push
addl
dec
adc
xor
cmp
xor
mov
fadds
fucomip
sbb
xchg
std
push
pop
sbb
xchg
pop
mov
lock
xchg
out
cld
xor
imul
mov
mov
push
cld
jno
stos
dec
push
pop
cmp
repz
xor
sub
clc
insl
mov
pusha
inc
icebp
fstpt
mov
movsb
lahf
fwait
sub
cmc
cmp
daa
push
pop
pop
add
pop
ret
cmp
nop
or
in
lock
test
push
cmp
mov
mov
sbb
fwait
sti
mov
fstpt
dec
pop
push
hlt
add
nop
cmp
xchg
adcl
adc
in
pushf
rcr
jge
pushf
scas
mov
adc
loope
idivl
fs
mov
mov
xchg
jbe
insl
test
enter
fwait
inc
into
les
popf
movsb
scas
decl
pusha
lret
test
adc
out
gs
iret
sub
sahf
add
out
inc
adc
into
pop
cmc
mov
sub
add
xchg
mulb
push
pop
ror
testl
xchg
movsb
orb
btc
cmp
mov
iret
pop
mov
testb
jb
test
adc
cwtl
stos
xlat
xor
push
subb
jnp
sub
sbb
adc
ret
dec
cmp
pushf
sbbb
push
xchg
xchg
jae
sub
lods
out
std
xchg
sub
test
mov
mov
dec
cmp
ss
xchg
lahf
or
xorl
sub
dec
and
gs
push
icebp
stos
mov
add
dec
mov
pop
lret
xchg
insb
sub
nop
fldenv
jmp
cmp
std
push
mov
inc
repz
or
add
sbb
outsb
aad
jne
out
outsb
sub
sub
mov
push
pop
aam
out
add
loop
jno
mov
pop
mov
cmpsl
sbb
aaa
pop
jmp
pop
xchg
sbb
push
stc
sbb
push
dec
ret
int
aam
pop
push
lods
pop
jnp
pop
dec
lds
push
scas
adcb
scas
sbb
jmp
clc
push
lret
outsb
movsb
and
push
add
mov
mov
in
int
xchg
xor
fs
inc
movsb
jmp
jb
ret
imul
dec
flds
dec
inc
gs
push
or
dec
sub
push
inc
lods
cltd
fidivrl
out
mov
mov
jmp
mov
out
aad
jb
add
sub
icebp
faddl
loope
xor
lods
mov
pusha
dec
dec
jnp
push
insl
adc
iret
sti
add
movsl
inc
ja
mov
pop
nop
sahf
adc
imul
pop
and
in
sarb
outsl
pop
pushf
jnp
mov
inc
popa
loope
sub
and
adc
cmp
or
sbb
inc
les
mov
jns
imul
mov
dec
into
popf
push
cmp
jns
add
sahf
cs
fs
call
mov
mov
stos
push
mov
xchg
movsb
leave
jg
mov
cmp
loope
lea
jne
ja
or
jecxz
lret
pop
pop
repnz
incb
xchg
sbb
or
rcll
leave
std
sub
or
ficoms
lret
jo
inc
dec
shlb
or
movsb
mov
aas
orl
mov
ss
out
jne
fs
xor
mov
cmc
pop
cmp
mov
popa
jb
mov
push
stc
movsl
inc
scas
in
mov
aam
mov
jge
fcoml
push
lret
iret
pushf
dec
jne
push
outsl
lock
push
and
dec
jge
insb
out
rclb
lock
sbb
mov
mov
mov
lods
xorb
out
adc
xchg
gs
cmc
mov
bound
xor
test
cmp
push
sbb
pop
adc
adc
and
lahf
aam
xchg
mov
or
mov
mov
orl
out
cmp
jb
xchg
in
dec
leave
and
cmc
sub
andb
test
adc
fisttps
in
push
sbb
sahf
out
in
push
aam
inc
shl
xorl
mov
sbb
ljmp
call
pop
cmp
xchg
cld
push
dec
pop
inc
fbld
lahf
das
daa
mov
cmp
mov
int
pop
cld
out
adc
stc
icebp
les
jnp
lea
in
and
pop
jae
lcall
shrl
mov
or
mov
test
and
mov
mov
pop
jecxz
mov
imul
daa
in
add
push
enter
das
xchg
lea
mov
std
mov
mov
xchg
xchg
movsb
sbbl
push
aas
cmp
jns
movsb
xor
sbb
and
mov
dec
jp
inc
mov
dec
fdivrs
ret
pop
out
call
dec
dec
xor
xchg
jns
xchg
out
mov
std
daa
xchg
shll
divb
pop
stos
pop
add
testl
push
andb
mov
jnp
andl
ret
mov
cmpsb
push
push
cmp
mov
das
imul
dec
dec
aam
jo
sub
pop
mov
fcoml
fsubr
mov
mov
dec
jg
mov
pop
or
insl
fdivrs
hlt
push
pop
sbb
and
mov
shlb
push
cmp
roll
pop
push
push
dec
mov
mov
sub
sub
mov
cmp
dec
and
pop
or
mov
movsb
pop
pop
or
sahf
mov
mov
fnstsw
add
movsb
cmpsl
xchg
cmp
mov
inc
push
mov
mov
jp
cmc
dec
sbb
fcoms
shll
dec
cmp
xor
xchg
mov
xor
insb
jp
sub
jmp
rol
sbb
jge
xor
arpl
enter
scas
inc
sub
cmc
push
lcall
outsl
fwait
sub
push
repz
add
frstors
cltd
inc
call
shlb
and
pop
sub
andl
out
rclb
sub
out
call
out
idivl
pusha
cmpl
xor
addr16
and
in
jecxz
and
out
adc
in
sti
dec
js
insb
and
jns
sub
call
lret
jge
or
mov
lea
rorl
movsl
add
lods
push
shrl
jecxz
mov
mov
ss
cld
ljmp
xor
mov
mov
mov
mov
dec
inc
aad
jg
into
sub
and
lcall
repz
mov
dec
lods
add
add
mov
movsl
sarl
or
sub
movsl
dec
aaa
mov
push
pop
inc
int3
scas
inc
mov
xchg
shl
dec
push
mov
sub
or
cltd
jge
fistl
and
mov
movsb
add
xor
push
mov
or
cmp
mov
data16
mov
in
xchg
subb
push
mov
loop
push
mov
or
mov
jne
repnz
add
pusha
mov
addr16
insb
jbe
std
cmp
test
xchg
mov
popf
out
cs
dec
ljmp
data16
lret
sahf
or
stos
sub
daa
pop
push
dec
adc
mov
movsb
push
sar
in
outsl
push
das
arpl
das
sbb
addr16
inc
push
cli
mov
pop
sub
sub
sbb
push
dec
fdivrp
test
aam
iret
sub
xor
lcall
mov
mov
push
in
je
lods
cmpsl
and
mull
push
mov
push
sarl
movsb
or
incb
push
daa
test
out
sbb
movsb
pop
ficomps
xchg
roll
sub
stos
movsb
adc
repz
inc
mov
movsb
or
mov
pop
sarb
xor
lods
and
out
es
pop
cmp
jbe
mov
mov
insl
cmp
adc
pop
call
pop
add
cltd
movsl
mov
pushf
testl
dec
test
dec
mov
adc
and
addr16
mov
test
mov
or
inc
dec
mov
rcll
mov
mov
into
outsb
dec
dec
ljmp
insl
andb
aas
pop
jno
arpl
adc
xchg
in
bndldx
pusha
out
fadds
es
movsb
js
ror
stc
sbb
roll
je
xor
jecxz
xchg
mov
int
cmp
dec
mov
sub
mov
nop
lods
pop
lcall
insl
jmp
scas
or
adc
aad
mov
mov
xchg
mov
mov
or
mov
xor
cmp
out
mov
insb
push
movsb
pop
fadds
mov
push
mov
sub
lcall
enter
mov
pop
dec
pop
hlt
xor
movsb
sbb
add
xor
jge
mov
pop
sbb
loope
cmpsl
mov
jno
push
ljmp
mov
fcmovnb
pop
leave
and
pop
adc
sbb
or
xor
lock
sbb
ret
scas
out
add
cmc
outsb
mov
fwait
les
and
arpl
fsubrl
push
movsb
jns
out
mov
xchg
leave
lcall
mov
mov
push
adc
arpl
inc
fstl
dec
lods
into
push
stc
inc
shrb
jae
mov
jl
jno
xor
popf
pop
pushf
pop
fcmovnbe
sbb
and
push
mov
mov
mull
loope
lods
jmp
jns
and
sbb
fists
movsb
leave
dec
sbb
cwtl
push
std
pop
in
out
clc
mov
fsubrl
cmp
movsl
add
leave
fadds
xor
inc
mov
bound
or
mov
xor
neg
adc
subb
cwtl
xor
and
xchg
lods
mov
jae
push
adc
and
ret
push
push
adc
pop
scas
ret
add
push
and
dec
mov
mov
xchg
loopne
imul
movsb
mov
in
and
rorl
ret
adc
xor
jb
adc
dec
dec
rol
and
mov
adc
adc
int
cmpsl
cmp
dec
mov
out
cli
push
aaa
mov
fdivrs
loopne
xchg
int3
mov
mov
xor
pop
in
push
xchg
fimuls
subl
mov
jns
scas
push
mov
out
push
jp
jb
cmpsl
mov
aad
push
mov
sbb
pop
pusha
outsb
mov
or
je
and
push
es
add
or
dec
xor
fwait
sbb
pop
push
pop
outsl
ja
mov
xchg
sahf
dec
add
imul
out
add
inc
jnp
clc
imul
stos
scas
lcall
sub
push
mov
cs
dec
xor
test
fsubrl
shlb
sub
xlat
sub
or
lds
xchg
testb
je
xchg
push
in
push
mov
adc
sbbl
stos
loope
scas
push
lods
les
mov
sbbb
mov
push
js
jb
shrb
outsb
aad
daa
add
inc
test
sub
push
es
cltd
daa
dec
cmp
inc
scas
mov
into
cltd
xor
push
in
fistl
sub
jmp
jmp
add
stos
push
out
jmp
stos
inc
lret
and
pop
push
fbstp
insl
cld
jp
mov
bound
jae
cmpsl
adc
mov
fsubr
sub
dec
cltd
mov
pop
es
popa
jmp
in
jg
addr16
or
mov
ss
stc
xchg
cmpsb
loope
sbb
xorb
adc
test
je
insl
xor
pop
ficoml
sub
fdivl
mov
xchg
fucomi
adc
fnstcw
and
movsb
jmp
sub
xchg
call
mov
pop
sub
push
jmp
inc
xor
pop
cmpsl
mov
or
jo
and
cmpsl
xchg
repnz
repz
ss
leave
cmp
xchg
aam
pusha
jno
mov
bound
es
lret
aad
sbb
imul
xchg
cmp
ret
femms
stos
pushf
iret
inc
and
mov
lods
jbe
iret
sbb
inc
rcll
dec
jo
sub
jae
sub
mov
sub
popf
adc
cmp
inc
stos
test
xor
sub
mov
in
aaa
sbb
pop
or
pop
jecxz
cmp
mov
jb
pop
sbb
jo
push
jg
lea
inc
sbb
iret
in
aad
lahf
ss
enter
and
lock
out
lds
in
cmp
mov
mov
mov
jmp
mov
xchg
push
or
repz
lcall
dec
cli
sub
pop
xchg
xor
fs
push
fdivl
ljmp
jno
xor
rcrb
cmp
out
stc
aad
dec
mov
je
push
movsb
jns
sub
xor
outsb
jbe
cli
push
add
sahf
mov
repz
or
mov
and
jo
dec
mov
cmc
xchg
sub
lods
cmp
movsb
test
sub
mov
mov
push
push
mov
call
jbe
lret
mov
out
dec
aaa
mov
pushf
pop
in
popf
mov
mov
adc
jb
xor
stos
aam
lcall
mov
hlt
in
sub
sub
sbbl
jg
add
pop
bound
pop
aaa
mov
movsb
adc
pop
test
ret
inc
or
int3
mov
inc
sub
pop
js
add
cmpsb
inc
xchg
pusha
mov
add
lods
mov
mov
mov
xchg
sub
or
sub
sarb
enter
and
insb
or
pushf
cmp
jae
mov
test
dec
mov
icebp
xchg
loop
mov
sub
sub
cwtl
fimull
mov
fcomi
fs
lock
data16
aam
or
cmp
mov
hlt
xchg
xchg
arpl
jo
lds
scas
push
mov
dec
dec
dec
push
and
test
pusha
pop
in
leave
mov
adc
sub
repnz
push
jb
test
jb
stos
mov
ret
mov
ret
adc
je
repnz
mov
jmp
mov
mov
addb
mov
add
add
adcb
jge
imul
or
stc
dec
dec
lahf
movsb
aaa
ret
imul
mov
mov
jns
lock
cmpb
adc
mov
cli
mov
nop
pop
mov
jo
inc
mov
iret
cwtl
les
sbb
popf
aad
shlb
xor
or
mov
mov
mov
leave
fstpt
dec
push
fisttps
clc
jne
dec
rep
dec
inc
gs
dec
rorl
xchg
xlat
mov
cld
add
jmp
sbb
cs
scas
adc
ja
cmpsb
jns
xchg
addr16
ret
jno
rol
or
jbe
mov
jle
hlt
push
mov
enter
test
sub
mov
pop
push
movsb
ss
push
lods
mov
inc
lret
dec
je
imul
mov
dec
sub
jae
or
cld
call
ret
push
add
rclb
addl
and
cmp
ficoml
xor
out
cmp
inc
mov
cmp
outsl
xor
js
mov
jl
sub
sbb
hlt
stc
and
jp
les
xchg
enter
aam
nopl
jp
jl
lods
mov
outsb
fwait
imul
fxtract
leave
xor
dec
mov
add
push
mov
fwait
fs
fiadds
inc
inc
jne
stos
fstpl
adc
or
sub
or
inc
flds
mov
cmp
pop
stos
out
in
cs
andb
push
fs
or
push
dec
sar
imul
jg
pushf
test
mov
js
xchg
ret
cld
lret
mov
aam
int
push
jge
pop
loop
mov
iret
js
jp
mov
adcl
lods
mov
and
ret
mov
icebp
adc
cmp
outsb
jge
sbb
test
int
jmp
adc
in
xor
stc
or
cli
cli
pop
xor
pusha
mov
div
mov
mov
jns
xor
test
out
dec
push
lcall
scas
stos
mov
sub
jmp
and
stc
out
cld
jmp
push
out
lea
mov
mov
cmpb
xchg
and
lock
sbb
repz
lds
scas
stc
xor
incl
fdivrl
cmp
add
iret
push
ret
sub
repnz
mov
cmp
xchg
fsubrs
cmp
or
aaa
dec
mov
sub
dec
sahf
imul
lcall
outsb
pop
loop
sbb
mov
cltd
fldcw
repz
mov
into
sarl
xor
arpl
inc
sub
and
adc
lock
or
fisubrl
push
das
daa
mov
and
inc
mov
xor
out
adc
lods
push
iret
mov
xor
adc
adc
pop
aam
aaa
lahf
lret
icebp
push
mov
mov
xchg
orb
mov
sub
jb
data16
xchg
xor
cmp
lock
sub
adc
jo
sub
inc
push
mov
xchg
mov
popa
iret
stc
xor
mov
sbb
jb
jp
xchg
fidivl
pop
adc
xchg
mov
xor
push
cmc
aas
push
test
call
test
ljmp
iret
or
xor
fildl
or
pop
in
stos
mov
or
or
lea
cmpsl
mov
dec
inc
test
inc
sbb
push
std
mov
idivb
ret
out
cmc
adc
push
test
std
pandn
mov
insl
rol
int3
sbb
lea
into
into
xor
push
sub
mov
xor
jae
xchg
adc
and
test
xor
movsb
push
jnp
xchg
out
push
aad
pop
pop
pop
adc
mov
xrelease
mov
pop
jge
int
int3
mov
jp
sub
fldl
ljmp
mov
push
sub
mov
mov
cmp
test
pop
mov
jmp
adc
inc
xbegin
ljmp
int3
cmp
into
fstl
push
or
dec
and
push
mulb
andb
or
in
cmpsb
rep
push
or
jbe
mov
adc
jno
dec
or
cmpl
fadds
pusha
imul
movsb
xor
fsts
iret
leave
enter
es
sbb
bound
xchg
sbb
pop
cmp
dec
lret
mov
pop
mov
push
pop
jns
std
call
scas
lods
repz
mov
pop
mov
add
enter
icebp
gs
mov
jmp
scas
call
rolb
mov
roll
insl
mov
push
add
leave
icebp
push
movsb
push
mov
or
stc
add
dec
add
jne
pop
push
jp
push
sbb
out
add
ret
lods
and
jae
data16
mov
adc
pop
mov
xchg
or
add
insb
call
out
pop
sub
mov
pusha
xor
ret
push
fs
inc
jecxz
jno
xor
jnp
fildl
stos
lahf
dec
mov
shll
inc
int
mov
fadds
add
cwtl
leave
sub
repz
cltd
cmpsb
adc
jmp
mov
mov
jns
or
daa
in
push
mov
pushf
or
push
pop
lret
cmpb
mov
lods
hlt
stos
inc
test
lret
or
push
pop
popf
pop
fisubrl
sub
xchg
leave
add
enter
xchg
push
mov
movb
or
pop
stc
scas
adc
or
cmp
jmp
adc
and
xchg
mov
mov
jae
loopne
dec
hlt
ret
cmp
push
sbb
andb
scas
cmp
mov
mov
mov
int
mov
adc
das
xchg
lods
out
xor
mov
push
popf
inc
sub
lock
push
and
mov
jae
inc
es
lods
orl
adcl
lret
mov
mov
stos
mov
sarb
je
repnz
loop
adcb
inc
pop
adc
dec
mov
das
scas
dec
mov
add
xchg
mulb
mov
adc
movsb
pop
int
sub
es
jmp
movsb
push
sbb
add
in
out
jae
cmpsb
pop
nop
shll
loope
sahf
fsubr
adc
test
jecxz
out
dec
push
mov
test
add
dec
mov
pop
or
inc
inc
xor
dec
pusha
stos
jb
push
add
les
and
push
push
push
out
repnz
add
adc
xorl
mov
mov
sbb
xchg
call
xor
mov
pop
aas
movsb
bound
rol
stc
mov
mov
mov
int3
jnp
sub
cmp
data16
adc
xor
xchg
jo
stos
pop
sbb
lds
mov
ret
inc
sub
push
push
jmp
jb
and
jge
xchg
call
jae
out
rorb
rclb
clc
mov
in
pushaw
cmp
in
iret
adc
fisttpl
fldcw
es
loopne
and
arpl
sbb
jle
push
fdiv
scas
lds
es
movsb
ds
sbb
enter
out
and
mov
or
das
lret
repnz
mov
cmpb
in
and
outsb
lods
je
scas
enter
call
sbb
xor
sub
jno
das
xor
int3
jne
adc
sbb
jge
xchg
stc
xlat
shrb
add
mov
dec
fidivl
movsb
mov
sub
ret
cmp
nop
jno
mov
cmp
enter
dec
outsb
push
fidivl
stc
pop
loop
push
iret
push
xchg
or
jle
and
mov
pop
inc
xchg
sbb
inc
mov
or
or
scas
int3
pusha
test
push
cltd
test
ret
pop
mov
call
sbb
jae
aas
ret
xchg
inc
cli
in
xchg
insb
mov
repz
mov
mov
inc
add
imul
lret
cmc
lret
out
sbb
sbb
sahf
push
imul
mov
cld
ss
and
sub
or
push
out
xor
push
and
jge
sti
mov
mov
ja
sub
push
lods
jbe
fdivr
loopne
orl
stc
loope
or
movsb
je
test
xchg
cwtl
in
cmp
rcl
stos
int3
push
das
mov
fmuls
pop
movsl
fimull
or
or
add
andb
negb
movsb
je
lret
push
insl
out
sarl
cmc
les
pop
ret
xchg
pop
in
mov
pusha
xchg
insb
cld
mov
outsl
add
leave
sbb
xchg
xchg
mov
enter
dec
mov
lret
mov
repnz
sbb
mov
ljmp
dec
mov
adc
testl
andl
inc
test
add
lods
rcrb
repnz
sbb
repz
push
fmuls
dec
aam
rcrl
sub
icebp
lods
push
add
sbb
iret
test
mov
push
lret
adc
imul
rorb
outsl
or
pop
jl
loop
jl
pop
push
loopne
dec
cmp
jg
repz
or
push
add
add
aaa
lods
out
movmskps
pop
stc
aad
or
adcl
add
jg
sahf
orb
out
call
xchg
bound
xchg
xor
mov
scas
mov
add
arpl
sahf
jecxz
data16
enter
lods
stos
xor
mov
xlat
mov
rcll
shr
cmp
movsb
inc
push
dec
aad
into
push
jp
pop
fstps
shrb
sbb
push
sub
lret
fimull
lods
push
inc
stos
outsb
ja
dec
mov
cld
sub
adc
outsl
addr16
pop
sbb
sub
je
icebp
cmc
stos
subl
pop
data16
imul
mov
lods
cmp
daa
dec
aad
push
adc
cltd
test
arpl
aaa
add
jae
xlat
ror
add
push
mov
push
mov
push
lods
out
or
mov
pop
push
sub
xlat
dec
add
lret
mov
bnd
jmp
iret
shlb
lea
imul
push
mov
mov
mov
movsb
push
jnp
movsb
push
jl
push
lods
sub
mov
cmp
mov
cld
jne
jl
add
sub
js
sahf
jae
dec
mov
push
push
pop
dec
fmul
xor
aad
mov
pop
dec
cmc
push
jb
roll
sarb
leave
inc
and
pop
add
mov
subl
hlt
mov
mov
jbe
out
and
xor
clc
roll
xor
subb
or
or
jecxz
outsb
aaa
inc
and
stos
ja
aad
shrb
dec
or
or
mov
stos
stos
gs
mov
bound
pop
andb
jbe
fdivl
push
pop
loope
push
cmpsl
pop
xchg
inc
mov
jne
repz
mov
je
daa
out
dec
shrl
mov
sbb
and
sar
popa
sbb
cmpsb
into
pop
das
mov
fs
inc
sub
or
jo
ss
int
add
sbb
out
int
enter
mov
pop
mov
insl
js
or
out
std
iret
into
ret
xchg
insb
fstps
loope
aad
mov
push
dec
nop
push
ljmp
orb
insl
js
jb
lea
cli
mov
mov
mov
mov
jecxz
lds
insl
ss
fcomps
lods
cli
imul
cmc
mull
mov
ljmp
fisttpl
mov
bound
sbb
xchg
jno
cmp
xchg
mov
inc
scas
mov
nop
pop
and
pop
mov
ret
ss
mov
sub
mov
stos
jb,pt
or
sub
push
fisubs
sahf
sub
in
jb
mov
lods
aad
push
roll
repz
adc
aas
inc
ljmp
lahf
xchg
push
hlt
inc
arpl
fdivrl
jecxz
bound
movsb
lcall
push
dec
lods
inc
aad
sbb
test
das
xor
jbe
xchg
mov
je
xchg
movsb
sbb
jmp
mov
push
stos
stos
enter
mov
add
iret
fld
gs
in
js
adc
imul
pusha
xor
rclb
fs
add
cwtl
lock
enter
xchg
mov
mov
add
jecxz
iret
inc
shlb
mov
push
lock
rcr
xrelease
sarl
movsb
das
sahf
mov
aam
les
add
xor
iret
in
pop
mov
out
insl
rcr
imul
pusha
aam
lea
ss
inc
xchg
insb
push
pop
jge
xchg
in
cld
insb
inc
sbb
mulb
inc
jp
inc
bound
add
outsb
dec
leave
out
pop
int3
test
push
adc
dec
lcall
ret
adc
fnstenv
sbb
call
jae
call
jno
jae
inc
adc
mov
sub
insb
jg
lock
icebp
iret
into
divl
movsl
pop
mov
mov
outsl
lock
adc
or
xor
jns
mov
adc
jmp
xor
mov
dec
jns
xchg
das
add
add
insl
push
das
lods
sbb
mov
dec
mov
and
add
cmp
test
mov
int3
xchg
lcall
sub
cwtl
sub
imul
sub
push
into
subb
mov
or
xchg
out
ret
inc
mov
pop
pop
mov
mov
stc
xor
push
cltd
sbb
mov
adc
fcmovnb
mov
test
lahf
iret
mov
lods
and
cmp
jae
lcall
push
jmp
push
sbb
and
sub
test
push
dec
shlb
popa
sub
and
push
xor
and
pop
push
ds
jp
jbe
add
decl
stos
cld
popf
push
outsb
sub
fistpll
bound
push
outsl
mov
mov
dec
xchg
push
jb
iret
rolb
xor
mov
lcall
xchg
mov
mov
jecxz
dec
adc
xor
sbb
cmpsb
cld
push
nop
jns
mov
out
xlat
nop
mov
arpl
jle
xor
sahf
push
stc
xor
adc
movsb
out
aad
shl
in
cmpsl
xchg
fcomps
testb
flds
xor
std
out
mov
xor
in
lcall
inc
mov
test
mov
inc
jnp
push
cmp
or
sbb
xchg
xlat
add
movsb
dec
mov
xor
in
pusha
mov
jnp
or
jns
iret
pop
ss
dec
mov
insb
jae
cmp
push
insl
dec
push
mov
push
les
cltd
loopne
fisttps
ficoms
cld
movsl
pop
jb
mov
out
sahf
inc
rcll
imulb
dec
inc
cmp
dec
dec
jns
jl
inc
jb
sbb
imul
mov
adc
ljmp
xorb
fistl
mov
adc
mov
and
mov
test
jo
mov
push
lea
push
sbb
jg
dec
sub
xchg
lock
arpl
mov
mov
aad
xor
cmp
jno
icebp
sbb
icebp
push
lods
test
sbb
sahf
sub
test
pop
repz
sahf
fisttpll
dec
jno
sub
add
cmpsl
test
pop
rorl
mov
int
inc
push
jnp
fs
mov
js
push
push
jbe
lods
sar
mov
fcoms
ret
dec
or
outsb
data16
ret
ret
in
add
cwtl
into
call
js
outsl
ret
movsb
inc
mov
mov
mov
xlat
sub
mov
xchg
ljmp
shl
pushf
fimull
mov
sub
shl
sub
pop
xor
hlt
jg
mov
sarl
sub
aad
in
ret
and
or
jle
out
xchg
mov
mov
fsubl
xchg
cs
inc
lock
stos
mov
sub
mov
mov
into
xchg
xor
std
shll
dec
pop
mov
test
add
cmpsb
es
push
push
pop
cmp
lods
adc
dec
mov
inc
pop
out
pusha
ss
inc
add
pop
adc
add
rcll
rcll
sbb
lret
add
lea
sub
outsl
test
movb
jmp
fldt
adc
sbb
xchg
mov
imul
sahf
ficoml
jge
sbb
rorl
xor
sahf
mov
push
cmc
inc
sub
cld
inc
push
pop
and
xchg
jnp
subl
mov
mov
mov
addr16
icebp
sub
call
lock
imul
fidivrs
das
mov
push
add
mulb
dec
mov
outsl
mov
pop
into
fs
mov
mov
mov
stos
dec
and
stos
sub
cmpsb
adc
arpl
cmc
mov
push
dec
mov
imul
sub
sahf
sbb
gs
outsb
ret
in
xchg
test
mov
inc
insl
mov
add
sub
shlb
adc
pop
std
or
int3
mov
push
sbb
sbb
add
inc
cmc
jno
in
cwtl
ss
or
pusha
mov
mov
sbb
aad
push
test
sub
out
fnstenv
jbe
cmpsb
das
jbe
lcall
int3
adc
pop
cmp
rcrb
fxam
es
fistps
xchg
pop
cwtl
xchg
dec
pop
jl
bound
jle
dec
or
repz
add
sbb
shll
rclb
sbb
xlat
lods
sub
xchg
dec
daa
mov
test
mov
pusha
addl
add
mov
xchg
imulb
and
js
mov
dec
mov
shr
cli
dec
daa
les
das
add
nop
outsl
push
lods
or
xorl
andl
mov
ret
arpl
fisttpll
dec
cltd
jge
xchg
mov
adcl
test
repnz
and
jne
pusha
ds
jo
fsubs
popa
cli
or
arpl
mov
or
push
fadd
movsb
pop
mov
sub
negl
fbld
mov
out
pusha
xchg
aaa
fstpt
cmpsl
lds
lods
add
bnd
test
mov
cmc
xor
xor
stc
loope
ret
xor
lret
cld
iret
lcall
pop
movsb
dec
push
lods
js
out
iret
mov
sbb
leave
aam
dec
jge
shl
clflush
add
ljmp
pop
int3
fdivrs
mov
sar
mov
hlt
mov
dec
pop
or
mov
mov
addr16
sub
push
outsl
sub
sub
pushf
mov
pop
mov
sub
push
jl
scas
pop
push
xchg
fidivrl
cmp
xor
mov
inc
xchg
cmovge
mov
bound
jne
hlt
fldenv
adc
call
pop
sub
pop
mov
inc
sub
mov
cs
lcall
push
idivb
sub
cmpsl
scas
xor
or
mov
xor
cmpsl
pop
test
mov
pop
sbb
sub
and
jle
clc
mov
mov
pop
add
repnz
dec
or
push
fsub
push
cmp
mov
sub
loope
xchg
cmpsb
add
or
push
adc
sub
jp
add
call
xchg
ficoms
cmc
cmc
scas
xchg
xor
aam
stos
mov
outsb
sub
xchg
loope
popa
aas
pop
xor
jl
xor
xor
add
push
movsl
jbe
mov
cmpsb
pop
mov
sub
sbb
repz
pop
mov
flds
mov
repnz
pop
adc
jg
xchg
movsb
jecxz
shrb
test
in
dec
outsb
sub
cmc
les
lods
mov
pop
mov
js
jmp
popf
fcmovb
push
cmpsl
jecxz
fsts
mov
mov
add
adc
pusha
iret
jmp
jb
and
pop
call
sub
push
push
xchg
xor
hlt
pop
cli
jl
aam
jns
lret
sub
mov
push
popa
xchg
mov
mov
sub
xlat
stos
in
imul
movsb
js
out
adc
es
rcrl
push
out
sbb
adc
mov
push
pop
push
and
dec
mov
xorb
loope
xor
mov
lcall
pop
add
mov
sub
dec
int
add
mov
xchg
sbb
fiadds
sbb
jns
je
mov
jno
stos
mov
fs
nop
cli
jb
arpl
sub
add
iret
push
ja
inc
fdivrl
into
mov
repz
sti
movsb
jo
daa
or
ret
push
push
es
push
ror
pop
mov
inc
lcall
fidivrl
pop
ret
and
mov
cmc
cmp
push
pop
mov
lds
push
mov
sub
stos
movsb
ret
fwait
scas
or
lock
adc
dec
adc
iret
testl
arpl
xor
je
or
dec
dec
andl
lods
sahf
stos
or
ja
fucomi
loopne
or
jns
bound
fcompl
sub
dec
repz
movsb
cld
jns
je
iret
es
icebp
pop
fbstp
mov
movsl
or
jno
pop
bound
cmp
in
push
dec
mov
sub
mov
or
insl
cmp
lea
les
ret
aas
repz
sbb
mov
jb
jge
roll
sub
bound
xchg
dec
cltd
fldcw
and
pop
xor
add
dec
sub
shrl
lock
pop
stc
test
jmp
stos
sub
and
xchg
mov
sbb
repz
sbb
das
or
inc
sub
out
dec
mov
inc
pop
mov
jle
andb
xor
call
mov
sub
ficoms
pop
and
inc
xor
or
or
rol
cld
enter
insb
pop
mov
out
and
or
push
mov
in
push
neg
aaa
insb
sub
loope
or
add
test
sub
std
insl
stc
add
xchg
scas
repnz
add
fidivrs
pop
pop
aas
ss
push
xchg
xchg
ja
inc
push
ljmp
push
and
push
imul
mov
sbb
mov
shll
mov
ud1
stos
push
out
xchg
jb
leave
out
adc
sub
sub
vmulpd
push
jle
mov
sbb
orb
cld
and
pop
int
xchg
adc
sub
cmp
xchg
jl
pop
rcrb
aaa
mov
push
push
sbb
push
xor
jmp
jle
push
cs
jle
fwait
inc
bound
sbb
loope
mov
sub
mov
or
adc
das
lods
push
mov
push
in
icebp
outsl
pop
mov
test
negl
xor
lods
or
jbe
cmpsl
repz
push
adc
jne
push
mov
and
mov
pop
xchg
add
jge
mov
adc
insl
fdivr
ja
or
xor
xlat
bnd
jne
stos
adc
aas
mov
ret
jb
push
push
push
into
jo
xor
pop
leave
cli
xor
or
out
add
and
ds
lret
push
insl
gs
movsb
add
out
inc
xor
pushf
aam
add
push
push
outsl
dec
nop
push
loopne
pop
sub
test
push
lods
sub
inc
adc
loop
sub
pop
mov
xor
sbb
scas
movsb
jp
mov
mov
repnz
jmp
jge
rclb
mov
mov
push
stos
insl
add
adc
loopne
dec
xor
mov
adcl
push
pop
cltd
jecxz
sub
add
pop
pop
dec
adc
daa
movsb
aad
aaa
dec
cli
mov
mov
hlt
jp
xchg
jp
mov
sub
bts
call
testl
aad
push
out
or
dec
and
in
dec
adc
aas
sbb
in
mov
fst
lods
cwtl
xchg
ja
fsubrp
xchg
lret
outsl
xor
or
loope
jecxz
add
movsb
push
adc
or
pushf
xor
cmp
scas
out
cmp
leave
dec
xchg
inc
stc
jns
cltd
sub
mov
fisttps
jmp
ss
pop
push
cld
es
sbb
cld
scas
or
xchg
push
sbb
dec
jge
sbb
jb
sub
aam
aam
in
shl
lods
jno
xchg
insl
xchg
mov
jnp,pn
and
jecxz
movsb
nop
add
sarb
sbb
es
push
shlb
mov
lret
loopne
mov
mov
jl
ret
mov
nop
test
xlat
mov
enter
adc
cwtl
cltd
sub
push
xor
insb
pop
lret
fsubs
lock
pop
movsb
xor
push
lds
hlt
jle
and
sub
movsl
sahf
movsb
xor
xchg
xchg
fsubrs
stos
dec
sbb
aad
add
mov
mov
jge
insl
pusha
out
xor
add
dec
loope
sarb
das
in
pop
notb
sbb
pop
orl
mov
fdivrp
out
into
xor
xchg
mov
push
bound
hlt
push
test
cmp
addr16
mov
mull
insl
dec
xchg
mov
repz
ja
jmp
inc
lds
xor
pop
std
sbb
mov
into
push
sub
dec
sub
jp
pusha
icebp
xchg
cmpl
repnz
mov
mov
and
andb
jle
xor
sub
push
inc
and
jne
imul
imul
inc
push
sub
mov
xor
sub
mov
adc
mov
into
pop
in
pusha
flds
push
sahf
pop
lods
xchg
adc
icebp
aam
out
dec
icebp
jmp
push
jnp
cwtl
movsb
cmpsb
leave
mov
add
ljmp
sub
inc
iret
outsl
or
pop
out
add
xlat
mov
sub
inc
hlt
pop
mov
add
mov
aas
jecxz
movsb
jge
push
cmp
stos
dec
jae
rolb
dec
shrl
out
add
insb
cld
push
pusha
popa
rclb
mov
dec
nop
sbbl
mov
push
jl
in
lds
add
outsb
inc
pop
cli
mov
repz
mov
mov
roll
call
aas
enter
adc
je
or
push
sub
or
ja
mov
pusha
lods
loop
xchg
bound
enter
cmp
sbb
sbb
inc
lcall
or
push
in
outsb
test
jo
popa
push
out
inc
cmp
mov
xchg
lock
lret
fcomi
cmp
xor
xor
pop
test
aam
mov
mov
rclb
into
xchg
mov
sbb
pusha
sub
mov
fcoml
cmp
sub
sub
scas
cmc
mov
push
insb
push
fisubrl
stc
jp
cmp
xchg
or
sbb
mov
push
popf
mov
sub
cmovnp
push
or
jne
push
jge
jbe
mov
sub
push
or
push
jmp
pop
sbb
mov
jb
sbb
stos
inc
movsb
mov
mov
andl
js
ret
pop
pop
test
aaa
or
std
cmpxchg
rorb
pushf
add
stos
pop
cmc
mov
cmp
loopne
idivb
int3
fcmovnu
xor
mov
aam
mov
shlb
dec
pop
mov
insl
imul
push
add
cmc
es
fistpll
sbb
jns
or
sub
icebp
clc
ud1
push
adc
adc
inc
orl
jb
dec
loope
xchg
mov
ljmp
mov
lds
mov
cmp
jo
fbstp
jecxz
pinsrw
jmp
sub
out
dec
dec
mov
or
syscall
out
mov
and
cmp
sbb
pop
mov
xor
jbe
stos
in
xor
jae
xchg
xchg
leave
dec
push
xchg
xor
shlb
lret
sub
test
xor
xlat
push
movsb
sub
inc
pop
cmp
xor
push
aas
aad
inc
rorb
inc
inc
test
jno
mov
ret
fidivs
leave
jo
push
xchg
stos
lods
divb
pusha
or
sbb
pop
pusha
jo
lods
addr16
or
adc
outsb
icebp
xchg
add
pop
mov
and
mov
push
pop
enter
ficompl
sub
or
push
movsb
and
adc
inc
invd
idivl
mov
adcb
xchg
sub
xor
push
popf
into
inc
icebp
lcall
fadds
repnz
dec
das
mov
inc
lods
xchg
into
sbb
stc
sub
cwtl
mov
fmulp
or
or
mov
dec
in
add
scas
sbb
fnstenv
lods
mov
sbb
jp
mov
sub
xchg
xor
movsb
cli
mov
fistpl
xlat
pop
sahf
enter
aaa
ss
jp
inc
mov
test
dec
in
sub
stos
out
xor
std
jle
jo
mov
mov
xchg
pop
neg
xchg
xor
pusha
shlb
sbb
mov
xor
enter
pop
inc
pop
add
fbld
imul
cs
push
enter
xchg
xor
jmp
arpl
jae
ljmp
sbb
mov
test
sub
cli
adc
cmp
and
pushf
fidivl
repnz
sub
sub
mov
cld
cmc
repnz
dec
addr16
lods
add
in
push
xor
faddp
sbb
fists
cmpsb
leave
arpl
aas
mov
jp
or
das
les
roll
jmp
xor
mov
mov
div
pop
std
push
enter
mov
sbb
sub
cmpsb
mov
mov
adc
shlb
aam
cmpsl
sahf
call
lcall
push
js
sub
jge
xlat
xor
call
xor
sub
mov
xor
dec
mov
add
xchg
roll
insb
out
dec
mov
in
xor
jo
push
into
stos
push
adcl
pop
call
cmpsb
ljmp
pop
xchg
mov
imul
fs
mov
scas
pushf
pop
into
mov
ds
das
inc
mov
sbb
test
xor
push
fwait
sub
loope
or
cmovne
into
cwtl
dec
test
xchg
mov
outsl
ss
enter
sub
pop
and
jo
adc
out
std
test
xor
push
out
add
adc
lods
mov
lds
cmp
dec
mov
mov
sbb
add
call
dec
push
dec
sbb
cmp
pop
mov
int
std
push
sbb
xchg
out
sub
in
fcompp
mov
push
mov
scas
shll
sar
test
push
xor
popa
jecxz
test
dec
cmpsb
lea
repz
pop
ret
es
or
imulb
push
adc
pop
mov
test
movsl
cmp
mov
lods
mov
mov
push
sub
orb
movsb
loopne
pop
inc
mov
js
jge
dec
inc
movsl
jle
adc
iret
mov
mov
iret
loop
add
test
int
pop
pop
cmpsl
in
push
add
dec
cmpsl
pop
pushf
push
insb
dec
fiadds
pop
outsl
or
mov
stos
movsb
or
jne
jl
inc
dec
xchg
aam
add
test
iret
sbb
xchg
cli
inc
ds
jecxz
out
and
or
xchg
test
or
sub
hlt
cmp
jb
hlt
cmpsb
push
and
dec
daa
xchg
sbb
xchg
mov
cmp
jno
test
pop
hlt
sahf
sbb
ret
cli
je
mov
jo
push
popf
testl
shl
jne,pn
jnp
aad
fwait
jnp
or
cmp
or
mov
mov
jp
push
mov
sbb
rcrl
push
fidivrs
xchg
inc
imul
adc
inc
loop
push
sub
dec
pusha
push
stc
and
mov
je
mov
inc
jbe
jge
jae
jl
add
and
pusha
or
iret
jge
mov
lret
dec
leave
push
mov
ret
mov
push
push
daa
scas
movsb
loop
daa
add
add
mov
jmp
lahf
jecxz
sub
or
int
mov
sub
filds
icebp
xor
fstpt
ljmp
cmpsb
xor
inc
cmpsb
jb
adc
scas
nop
push
lods
inc
pop
in
icebp
push
in
push
out
fidivs
mov
idivl
dec
sub
sahf
insl
adc
jne
cmp
sbb
call
imul
sbb
popa
dec
push
jo
sub
enter
clc
mov
xor
test
push
aaa
cwtl
adcl
imul
rcrl
jb
bound
mov
andb
movsb
fisttps
and
add
outsb
sub
xchg
push
dec
jns
mov
jb
add
fsubl
inc
out
xchg
mov
fs
pop
dec
push
movsb
adcb
and
xchg
sub
mov
add
jns
mov
jbe
shlb
jne
mov
mov
sub
inc
dec
imul
sub
cs
bound
inc
stc
inc
inc
repnz
les
dec
mov
enter
fcom
push
into
pop
add
mov
jg
lahf
lret
add
jmp
mov
insb
es
mov
fcomi
inc
lods
xor
lods
mov
mov
insl
fisubrs
sub
jb
scas
and
mov
sbb
and
out
std
imul
cmc
lds
adc
clc
fnstcw
out
and
xchg
mov
add
sub
add
pop
ljmp
lods
mov
clc
lods
movsb
xor
fcmovne
jge
fnsave
mov
aad
cli
cmp
push
jns
mov
jnp
ror
and
sarl
push
jae
push
sub
mov
js
push
sub
sub
in
xor
movsb
cmc
sbb
bound
mov
repnz
daa
out
dec
icebp
call
stc
jnp
js
xchg
enter
lods
mov
imul
adc
or
jmp
mov
vmovdqa
pop
cmpsb
pop
cld
and
ret
xchg
lds
fcompl
movsb
mov
out
lods
mov
js
ja
leave
inc
dec
cltd
cmp
sbb
rcl
sub
lahf
pusha
addr16
dec
enter
cmpsl
xchg
cltd
dec
or
xchg
sbb
sub
jge
fmulp
mov
inc
mov
mov
or
and
jmp
addl
jp
jno
xchg
jp
pop
call
fcomps
xchg
shl
sbb
sbb
jmp
cli
hlt
clc
push
xor
fidivrs
imul
xlat
push
sbb
dec
xchg
ja
pop
pop
cmpsl
loop
js
mov
sub
filds
push
pop
or
pop
lea
fisubs
clc
add
lods
ja
mov
xchg
sbb
push
in
rol
pop
mov
imul
push
fs
stc
stc
push
sbb
sbb
adc
int
mov
fsubs
aam
repz
jmp
negb
idivl
adc
clc
xor
dec
fcoms
pushf
sub
inc
out
mov
out
sub
sub
nop
xor
jno
sti
push
ja
add
fiaddl
xlat
lgs
xchg
test
dec
sbb
mov
or
subl
aaa
cmc
clc
pop
sub
aaa
test
cmpsl
ret
push
mov
lock
int3
xor
sub
rclb
lods
push
cmp
mov
aad
lcall
xor
xchg
icebp
mov
xchg
pop
rorl
ja
scas
jbe
movsb
ljmp
xchg
rol
in
mov
sbb
cmp
push
add
dec
inc
movsb
adc
xor
lods
cmp
mov
repnz
pushf
inc
mov
push
xor
xchg
enter
mov
push
gs
mov
add
adc
xorl
fprem
pop
cmp
outsb
repnz
pop
repz
stos
mov
iret
stos
mov
movsb
pusha
pop
shrl
loope
jns
rcrl
mov
int
lods
cmpsb
lret
xchg
test
scas
jo
dec
mov
sbbb
hlt
xorb
movsb
lcall
cs
lods
std
popf
fadds
fsts
sub
xor
pusha
pop
clc
cmp
ds
divb
mov
add
adcl
repz
inc
push
jo
cmp
js
out
inc
test
dec
add
and
pusha
push
rol
mov
mov
xchg
mov
push
push
adc
dec
push
mov
in
jmp
xor
jae
sbb
xchg
pusha
jno
lret
lds
sub
xorb
aad
push
mov
icebp
inc
dec
movsb
in
dec
fxtract
cmp
mov
pusha
stos
in
in
push
fmul
imul
sahf
loopne
call
lods
xchg
sahf
push
push
jge
or
xlat
cld
push
cs
fldcw
sub
sub
std
dec
in
xchg
jno
pop
adc
lcall
mov
ja
xchg
fidivrl
mov
push
xchg
xchg
push
sub
outsb
call
xor
add
sbb
cld
jb
and
mov
bound
mov
rcll
aam
clc
mov
shrb
push
addb
jne
ds
out
icebp
dec
pop
sbb
add
fadd
aas
loop
test
dec
jns
mov
xchg
out
icebp
sbb
divss
pop
and
iret
mov
cwtl
test
call
out
fucomi
push
and
mov
jecxz
lea
push
adc
stos
inc
lods
and
mov
push
es
or
aad
fcompl
add
shr
in
mov
jl
push
inc
pusha
mov
leave
test
mov
loope
push
mov
clc
adc
mov
mov
or
push
sub
inc
cli
dec
inc
and
fwait
cmp
mov
in
je
mov
push
rcr
cmp
out
stos
xchg
xor
ljmp
or
dec
mov
push
xor
pop
inc
jb
or
or
sbb
out
add
scas
aaa
test
fisubl
sub
inc
add
dec
pop
fisubl
stc
xor
add
lods
sbb
pusha
pop
mov
andb
adc
lods
sub
adc
pop
pop
pop
lods
mov
movsb
xor
mov
hlt
cltd
push
push
adcb
dec
jno
xchg
pop
insb
pop
cmpsl
aaa
xor
mov
sqrtps
sbb
xor
and
das
xchg
inc
mov
xor
push
lahf
push
pop
hlt
mov
in
add
mov
mul
push
push
or
leave
inc
orb
push
mov
mov
adc
loope
push
xor
ljmp
mov
into
sub
xor
pop
jb
push
sahf
or
xchg
push
insl
lea
cli
dec
hlt
xlat
lret
fdiv
xor
xorb
xchg
push
cmpsl
mov
inc
mov
inc
pop
movsb
cmp
inc
dec
ret
sbb
xor
in
push
insl
jb
xchg
sbb
das
addl
pop
pusha
jmp
lahf
pop
mov
xor
sbb
adc
test
mov
test
outsb
bound
dec
leave
aad
dec
xchg
mov
pop
xlat
adc
das
shlb
stos
add
jge
add
mov
cli
push
mov
xor
or
lcallw
xchg
dec
xor
adc
mov
push
dec
sbb
jb
ds
inc
clc
cmp
push
mov
mov
repnz
pop
jb
adc
test
xchg
mov
dec
ja
lods
inc
adc
shrl
aaa
ret
sbb
mov
mov
bound
rcll
pop
push
xchg
scas
xor
mov
mov
aas
pop
jb
mov
jle
mov
insl
mov
dec
fldcw
clc
push
mov
gs
fldl
mov
leave
addr16
xor
xchg
pop
mov
adc
scas
xchg
inc
sbb
jno
or
push
mov
pop
inc
jb
dec
icebp
sub
dec
push
adc
movsb
lcall
and
shll
rcrb
xor
sub
js
xor
add
scas
and
mov
adc
fdivrl
push
cmp
lock
test
mov
add
mov
push
jmp
mov
sub
call
jb
int
jo
jb
inc
in
cmc
mov
sbb
push
mov
and
inc
adc
outsb
add
cmc
into
dec
mov
cmp
and
jecxz
mov
jg
iret
sbb
aam
mov
dec
mov
and
mov
dec
cmp
add
nop
ljmp
std
ja
adc
mov
mov
sbb
jns
dec
inc
inc
sub
xor
xchg
daa
cmp
sbb
inc
xchg
add
aad
xchg
adc
mov
adc
or
cltd
loopne
out
movsb
out
mov
fldcw
ja
add
sub
mov
iret
pop
insl
loopne
aaa
jnp
mov
bound
jns
sub
mov
add
js
movsb
mov
shrb
push
ret
lods
lcall
mov
fs
or
shrl
negb
sub
addr16
into
outsb
cmpsl
or
xchg
or
pop
cmpsl
push
test
mov
jno
leave
push
cmc
mov
out
filds
or
sub
dec
xchg
push
pop
sub
add
sbb
aaa
pushw
in
js
add
bswap
xchg
mov
add
ret
pop
nop
cmpsl
cli
xor
mov
mulb
bound
insb
enter
outsl
sbb
call
dec
lcall
in
cmp
decb
and
rcrb
ss
iret
loop
jge
pop
into
sbb
fbstp
iret
cmpsl
add
cmp
mov
out
cs
repz
mov
xor
mov
inc
mov
mov
sbb
movsb
out
in
sbb
mov
repnz
nop
sub
roll
jmp
lods
fmuls
repnz
push
mov
and
sub
inc
xchg
in
xchg
inc
sbb
add
adc
dec
int3
add
sbb
call
xchg
mov
js
push
out
add
add
adc
jae
jns
pop
movsb
mov
sub
mov
aas
lea
test
dec
pusha
ss
adc
in
cmp
lods
negl
lahf
movsb
mov
mov
into
xorl
fimuls
sbb
out
lock
ss
inc
pop
jge
sahf
bound
cmp
xor
je
sub
subb
inc
sbb
lahf
inc
mov
call
sbb
dec
pop
pop
lods
push
sbb
or
xor
jb
dec
in
aam
mov
sub
lret
and
fstps
inc
sub
mov
mov
dec
repz
dec
mov
add
or
outsl
nop
adcl
or
cmp
jno
shll
imul
add
leave
pop
call
add
adc
adc
add
mov
push
jnp
mov
sub
out
outsb
mov
xchg
fstpt
bound
sbb
and
mov
mov
inc
movsb
fcmovnu
mov
add
mov
loope
push
out
add
cmc
loope
in
and
adc
adcl
cmp
ds
fsts
je
mov
movsb
jne
mov
int3
stos
dec
jl
int3
push
jns
add
stos
fcomp
dec
pop
mov
sbbl
jl
out
fsubs
les
movsb
dec
jb
jge
lods
mov
pop
sahf
mov
leave
sub
shr
es
sbb
bound
or
and
movsb
lret
testb
lea
std
mov
dec
jno
dec
jge
dec
pop
jnp
lcall
mov
mov
xor
xor
jbe
outsl
out
inc
mov
dec
jge
mov
fldenv
push
xchg
cli
jbe
add
aam
jb
jne
sub
mov
hlt
cmc
das
mov
lahf
ret
lret
mov
mov
adc
xor
mov
ss
or
es
add
xchg
xchg
sbb
xor
cli
inc
movsb
jo
cmpsl
cmp
mov
cmp
mov
jae
sarb
mov
sbb
xor
ljmp
aam
inc
cld
fsubrp
ret
cs
fistpl
push
shll
clc
and
stos
push
lcall
fistpll
lret
std
push
ss
out
xor
in
icebp
test
out
scas
lcall
inc
pop
sub
fldenv
sub
mov
cltd
jnp
add
xchg
push
cli
sbb
out
addr16
ljmp
out
cmp
stc
stos
addr16
fstpt
push
cmp
jl
fxtract
cmp
dec
int3
adc
lcall
mov
mov
popf
xchg
gs
daa
leave
push
fwait
sbb
mov
arpl
sarb
push
sbb
mov
outsb
daa
jns
iret
lds
xor
or
dec
outsb
sub
jo
jb
insl
sbb
out
dec
dec
fs
jne
sub
cs
in
pusha
cli
pop
insb
dec
mov
xchg
insl
add
xor
ficoml
imul
movsb
je
jne
shll
push
add
or
cmp
repnz
push
xchg
stos
es
icebp
jae
mov
xor
test
mov
add
scas
adc
and
arpl
cli
fdivs
pop
lods
stc
fcoml
out
ret
repz
mov
dec
mov
dec
push
or
lret
testb
push
jmp
cmp
push
je
dec
shl
data16
mov
inc
adc
mov
jl
pop
sub
mov
pop
enter
xchg
loop
sub
dec
xchg
push
push
js
mov
out
pushf
xor
scas
or
fidivl
dec
push
loop
clc
leave
dec
xor
xchg
ljmp
mov
jb
push
fs
mov
sbb
dec
jmp
mov
test
adc
inc
test
add
pusha
sbb
push
mov
fdivl
mov
hlt
shrb
mov
adc
sub
push
mov
xor
icebp
das
loop
into
sub
int
push
sbb
insl
stos
push
movsl
subb
das
push
mov
aaa
ret
dec
in
lcall
ds
cs
cltd
mov
mov
iret
repnz
inc
popa
dec
or
mov
jne
aas
mov
fsubr
xor
xchg
and
cmp
jne
mov
movsb
mov
or
xor
mov
mov
addr16
cmc
mov
mov
mov
and
int3
cmpsb
pushf
clc
jmp
xchg
xor
stos
dec
inc
adc
jnp
fidivrl
pop
xchg
es
dec
pop
add
loopne
push
mov
cmc
and
arpl
push
lret
xchg
insl
push
les
inc
pop
sub
stos
ss
or
pop
cmp
aaa
xchg
rclb
ret
or
inc
mov
push
mov
sbb
pop
test
jle
cmp
out
push
arpl
sbb
and
lahf
dec
dec
pop
in
or
stos
call
and
sti
call
and
mov
out
aam
les
add
fists
mov
repz
lods
and
pop
inc
or
xchg
mov
lret
js
in
leave
subl
mov
and
fdivl
adc
mov
in
fdivs
and
lahf
bound
xor
push
xchg
mov
movsb
test
stc
jb
jbe
gs
and
repnz
add
idivl
sti
add
aaa
shrb
dec
add
mov
sub
test
push
sub
fs
pop
and
or
dec
cmp
das
adc
cltd
pop
test
popa
dec
loop
outsb
int
jb
stos
insl
sub
gs
out
push
stos
sub
push
xchg
pushf
push
cmpsb
sahf
inc
push
in
xor
shrb
scas
stos
adcb
sbb
fistpll
mulb
add
insb
dec
fmulp
push
cmc
out
or
jl
cld
push
or
and
je
mov
popf
push
inc
push
test
dec
mov
mov
push
dec
sub
fisttpll
xchg
repnz
xorb
add
pop
out
pop
xor
and
movsb
std
loope
mov
sahf
mov
div
mov
or
loop
imul
xchg
mov
mov
lea
and
fwait
inc
mov
sub
adc
shlb
sbb
fildll
xchg
inc
adc
enter
sbb
test
subb
cltd
ja
pusha
pop
dec
mov
sbb
push
ljmp
outsl
add
movsl
sub
lods
push
mov
loop
adc
ret
jnp
inc
push
repz
cwtl
bound
mov
cmpsb
mov
xor
xchg
imul
add
push
mov
movups
lahf
adc
ljmp
lret
xlat
jns
sbb
outsl
mov
jecxz
cltd
adc
scas
leave
pop
or
mov
sarl
inc
ljmp
iret
or
jp
adc
sub
enter
xor
jae
fistpll
or
hlt
mov
stos
std
mov
cmp
jecxz
inc
sub
mov
out
mov
dec
xchg
jno
or
or
andl
negl
adc
test
add
test
cmpsb
or
les
cwtl
xor
int3
clc
mov
cmp
fldt
loope
scas
pop
sub
cltd
lods
cs
push
jns
inc
fcmove
pop
int3
jno
sub
xchg
iret
or
repz
fisubs
xchg
mov
mov
dec
mov
arpl
and
push
dec
push
fstl
dec
and
cmc
mov
add
adc
sub
movsb
repz
mov
sbb
xor
dec
movsb
aaa
fsts
aad
pop
das
ret
mov
pop
pop
xchg
jno
ficoml
sarb
push
arpl
sub
in
lret
cmp
or
xor
inc
cld
dec
setns
xchg
out
pusha
adc
pusha
jp
sbbb
dec
jb
inc
add
sbb
cli
scas
mov
lods
outsb
mov
mov
dec
ret
push
cld
movsb
in
out
inc
adc
movsb
adc
xorb
popf
hlt
popf
jnp
jl
mov
pushf
mov
mov
mov
cmp
and
stos
sbb
add
sbb
jns
test
dec
cld
inc
in
xchg
jae
fadds
fs
call
lahf
js
fmuls
mov
sub
in
cli
cltd
mov
adc
mov
push
aad
shll
ljmp
lds
sub
popa
iret
cltd
and
push
fwait
cmp
mov
dec
xchg
jno
push
sub
jb
xchg
cmp
mov
int3
xchg
dec
jl
add
cwtl
imul
adc
push
lcall
add
call
fcoms
and
or
cmp
loopne
push
rcrb
insl
or
and
neg
cwtl
pop
das
pop
jge
jecxz
movsb
mov
mov
aas
mov
ret
sub
mov
push
pmulhuw
push
adcb
cmp
jns
jp
jg
mov
mov
popf
pop
scas
add
sti
lods
sbb
xlat
popa
sbb
add
push
push
xchg
ret
jns
inc
lds
flds
test
cmp
imul
add
push
out
dec
mov
ljmp
insl
add
inc
xchg
sbb
cs
or
insb
aam
roll
hlt
adc
gs
out
sbb
loope
sbb
jp
stos
ret
mov
and
jo
push
repz
bound
mov
mov
aad
lahf
scas
pop
inc
jmp
popf
push
mulb
xchg
ret
in
pop
jbe
cmc
fistps
add
aaa
sbb
xor
mov
dec
dec
jo
xor
ds
test
insb
cmp
sub
add
mov
pop
cltd
scas
dec
inc
lods
xchg
fcmove
adc
cmpsb
xchg
insl
sbb
mov
xor
lcall
fimuls
imul
lea
mov
shl
popl
fisttpl
fidivrs
fcoml
aam
pop
sub
jnp
test
sub
mov
lea
mov
mov
mov
ret
ja
sub
xchg
cltd
push
push
add
es
call
stos
icebp
push
fsts
mov
cli
lods
or
xchg
in
pop
jb
jb
cli
mov
jno
xchg
ret
outsl
enter
jb
mov
cmpsl
imul
inc
lret
shll
mov
add
out
fdivrs
int3
sahf
dec
cltd
movsb
lods
gs
arpl
pusha
jge
inc
sbb
push
push
push
scas
leave
push
mov
and
sbb
shrl
xchg
punpckldq
jae
les
mov
pop
mov
inc
test
gs
ret
or
stc
scas
notb
xor
inc
into
and
int
jecxz
lea
sub
outsb
ljmp
cmovne
imulb
repz
scas
cld
sub
scas
jmp
sub
repz
mov
sub
dec
xor
movsb
call
dec
cmp
lea
cmc
jne
outsl
and
inc
cmp
dec
fcoms
imull
sub
mov
mov
cmpsl
or
push
jmp
add
cld
pushf
mov
dec
push
sbb
clc
stos
pushl
ret
lcall
pop
mov
push
mov
leave
aad
test
test
jno
ret
stos
ss
scas
leave
push
mov
xorb
add
add
mov
inc
xchg
cmp
test
xor
pop
rol
sub
stc
stos
cmc
mov
and
push
push
xor
sub
repnz
fwait
pop
testb
pushf
fldcw
adc
divb
and
pop
es
andl
sbb
fistps
les
sub
pop
fisttpl
adc
push
xbegin
xchg
push
inc
loop
movsb
mov
push
push
inc
loope
fwait
movsb
cmp
imul
pusha
loopne
jae
mov
mov
mul
js
nop
iret
and
pop
pop
scas
das
lret
dec
xor
je
bound
lds
daa
cmp
iret
addb
sub
cmp
adc
popf
andl
cmpsb
arpl
or
lret
lret
je
daa
addl
mov
test
outsb
mov
jne
cmp
xchg
mov
gs
outsb
xor
std
cld
push
mov
sub
mov
dec
jmp
or
push
xchg
outsb
cld
sub
in
xor
inc
imul
push
xchg
push
adc
and
push
xchg
cmp
pusha
sub
mov
lret
xlat
icebp
nop
mov
sahf
and
std
push
mov
fs
cmpsb
xor
sub
cld
xlat
sbb
movsb
mov
pop
pushf
repnz
mov
int3
push
movsb
jp
adc
loop
cmp
jmp
mov
push
cmp
mov
dec
mov
mov
mov
hlt
jns
lods
mov
push
mov
scas
jno
pcmpgtd
mov
adc
push
mov
mov
adc
fwait
negl
in
movsb
jmp
out
fidivrs
inc
movsl
dec
hlt
add
cmpsb
cmp
movsb
stos
out
adc
pop
mov
sub
sub
inc
xchg
push
mov
add
and
xchg
push
mov
add
dec
sub
add
mov
sub
jecxz
sub
mov
cs
out
movsb
andb
lcall
adc
inc
mov
pop
and
mov
clc
daa
push
push
cli
jecxz
jge
std
push
cli
int3
jne
repz
bound
xchg
outsb
mov
sysexit
sbbb
mov
dec
mov
cmp
xchg
mov
iret
js
pop
pop
jl
dec
sbbl
aaa
je
inc
jns
pop
cli
mov
add
scas
movsb
mov
adcb
dec
add
or
sub
push
test
ss
outsl
subl
add
movsb
lret
lret
push
push
lods
mov
je
ljmp
mov
mov
addl
sub
xor
mov
stos
inc
mov
mov
daa
adc
sarb
mov
adc
xlat
mov
je
push
sub
push
enter
clc
inc
ds
inc
sar
mov
xchg
lods
std
pop
into
mov
or
xchg
rolb
add
imul
leave
mov
stos
mov
sub
ficompl
rol
mov
sti
stos
cs
mov
call
push
lods
sub
sbb
jns
and
inc
pop
add
bnd
fsts
iret
pop
pop
hlt
mov
sbb
clc
inc
leave
jae
add
xor
or
cmpsb
jge
into
add
push
inc
sbb
dec
lds
push
loopne
dec
lods
sbb
sub
lret
add
pop
mov
mov
push
insb
js
repnz
cmp
and
sub
sub
jo
dec
es
xor
dec
jmp
push
jns
in
xchg
cmp
dec
aas
inc
pop
or
int3
es
add
and
es
mov
movsl
inc
movsb
rorl
mov
cmc
cmp
push
push
inc
adc
xchg
pop
jns
out
jb
fsin
push
or
mov
xchg
ss
outsl
pop
and
je
rcrl
or
loope
in
sub
test
hlt
scas
lcall
stos
sbb
mov
in
hlt
sub
movsb
test
call
mov
loope
xchg
adc
pop
ficoml
mov
xchg
mov
lods
ret
dec
dec
stos
sbb
push
rorl
adc
push
mov
pop
dec
jmp
in
into
stos
xlat
mov
lret
xchg
movb
cltd
jnp
insl
les
ljmp
dec
movb
push
pop
xlat
jnp
sbb
xchg
push
jbe
jno
ss
popa
mov
dec
push
cwtl
lret
lahf
loop
or
xchg
xor
jbe
mov
push
fstpt
add
inc
inc
jnp
mov
jge
repz
lret
stos
mov
lret
lods
mov
mov
xlat
sub
mov
outsl
lcall
insb
movsb
mov
sub
movsl
lods
mov
jb
jne
scas
sbb
add
push
inc
mov
lret
push
mov
lods
add
sbb
out
push
inc
cld
imul
fnstenv
mov
and
mov
pop
das
pop
xchg
ja
push
bound
cmp
push
xchg
and
lcall
mov
push
rcrb
dec
mov
insb
jno
xchg
je
lock
push
jae
lea
push
sub
pop
iret
es
or
out
int
mov
test
das
mov
test
hlt
push
add
int3
dec
loope
push
rcr
in
sub
dec
mov
or
insl
js
loop
test
mov
jnp
les
dec
push
jle
sub
dec
or
inc
mov
jl
xor
push
aad
in
mov
mov
paddb
mov
ljmp
xor
pop
sahf
jl
xor
rorb
ja
jbe
mov
fwait
jb
mov
mov
insl
adc
pop
xor
xchg
std
sub
dec
jnp
cmp
push
stos
and
add
fisubrs
clc
sbb
test
cmc
mov
rcrb
std
xor
sub
pop
ret
pusha
roll
outsb
mov
gs
sub
mov
outsl
jno
movsb
cmp
das
fisttps
pop
pop
lahf
repnz
std
out
or
cs
stos
adc
pop
mov
rolb
inc
leave
cmpl
xchg
jmp
sub
push
hlt
push
movsl
adc
movsl
push
data16
lcall
cmp
add
mov
insl
add
nop
jle
pushf
aad
xchg
les
jb
cmpsb
pop
sub
int3
jb
inc
mov
dec
pop
jmp
daa
outsb
add
popf
push
lods
mov
repnz
shlb
data16
int
insb
sub
jno
fsub
or
lcall
outsb
mov
mov
das
push
mov
test
stos
mov
shrb
add
mov
mov
cmc
fsubl
and
adcl
pushf
mov
pop
xor
nop
mov
imul
cmc
imul
scas
pop
adc
lods
jp
jg
fsubl
sbb
mov
fcomi
ffree
sbb
sbb
sub
cld
push
mov
push
jp
mov
sbb
xchg
movsl
icebp
movsb
jae
and
fnstsw
icebp
inc
jne
lea
jg
addr16
movups
jmp
lods
ret
out
lods
repnz
pop
sbbb
mov
inc
dec
push
xchg
pusha
inc
xor
adc
ret
outsl
jp
lea
repz
into
ss
inc
fisttpl
clc
mov
icebp
inc
test
mov
outsb
out
inc
inc
repz
jnp
jge
lods
jge
dec
jns
xor
ja
aas
dec
pop
inc
dec
fwait
jge
cmpsl
push
or
mov
xor
pop
jbe
mov
sub
xchg
sbb
cmp
dec
movsb
pop
jae
cmp
cmp
lahf
jnp
jecxz
add
xor
pushf
fwait
mov
shrl
into
mov
mov
test
mov
pop
jge
dec
jb
cltd
in
jg
add
movsl
js
lret
into
shll
jae
mov
mov
push
pop
out
pop
push
inc
cmpsb
shlb
pop
xor
push
xchg
dec
lea
push
fcom
add
cmp
stos
call
stos
xor
fidivrs
fwait
hlt
and
dec
pop
mov
sub
hlt
icebp
jmp
es
xor
dec
add
inc
mov
clc
pop
sarl
jo
stos
xchg
into
cmp
arpl
xor
in
clc
adc
mov
in
inc
fistpll
add
mov
pop
sarl
ret
rcrl
pop
fimuls
or
xor
out
test
sub
xorb
fisubrl
push
jl
add
mov
outsb
imull
mov
aam
jae
sbb
movsb
stos
dec
cmp
dec
sub
push
fidivs
sbb
push
mov
jb
mov
fsubrs
jle
shl
cmp
pop
jg
je
hlt
loopne
xchg
lods
mov
adc
pushf
mov
or
jne
sahf
cs
push
push
sub
cli
xor
add
iret
je
dec
or
je
pop
mov
sub
sbb
cmp
add
negb
push
xor
xchg
inc
mov
call
shlb
add
dec
sub
dec
sti
enter
fdivl
mov
pop
xor
cmp
pop
xchg
or
into
push
lcall
out
sarb
or
ret
ror
sub
pop
notl
repnz
insb
fstpt
pop
pusha
pop
mov
mov
inc
dec
mov
iret
push
add
sub
lods
and
push
inc
out
aaa
cmp
mov
adc
jmp
hlt
xor
cmp
inc
adcl
insb
mov
ljmp
push
xchg
leave
and
mov
ficompl
pusha
or
fbstp
pusha
and
sub
mov
or
sub
ljmp
inc
mov
inc
divl
push
pusha
data16
xor
pusha
out
mov
xor
cmp
cmc
adc
out
inc
stos
lret
xchg
xor
mov
fnstenv
adc
mov
push
add
add
mov
xor
jg
pusha
cwtl
cltd
xor
inc
or
clc
cwtl
das
addr16
lcall
push
jns
adc
stc
cmp
repz
outsb
bound
loope
sub
cmp
sub
lcall
outsb
sbb
jns
mov
push
in
mov
jp
xor
xor
test
jge
xchg
pop
sbb
std
enter
mov
notb
inc
cmpsb
das
mov
aaa
test
ss
popa
test
mov
sbbl
xchg
les
push
sbbb
lock
mov
into
iret
inc
stc
and
jge
push
stos
fsubrs
cmpsb
les
mov
movsb
cwtl
cmpsb
jb
pop
insl
add
inc
roll
pop
jp
jge
adc
pop
mov
xchg
add
shrb
mov
cld
pop
pop
gs
enter
out
push
sub
call
je
lcall
nop
ficomps
inc
jmp
test
movsb
cmpsb
mov
stc
adc
fidivrl
cltd
ljmp
repz
mov
pop
xor
sbb
pop
sar
and
or
or
pop
jb
cmpsb
test
pop
and
fucomp
fsubrs
xchg
dec
mov
cmp
pop
sub
sbb
scas
xchg
dec
inc
xchg
stos
jnp
xchg
out
call
fmul
jb
daa
pop
cmp
in
pop
or
and
leave
jge
nop
ljmp
add
stc
sarl
leave
sub
pusha
or
push
jge
xor
out
jb
clc
add
add
sbb
cmp
dec
call
orl
outsb
push
xchg
les
lock
mov
repnz
shll
mov
and
fists
inc
mov
or
pop
clc
shl
ja
dec
cmc
sbb
mov
icebp
leave
cmp
movsb
xor
xor
sbb
mov
test
mov
shrl
pop
mov
mov
movsb
cmpl
ss
and
pop
shlb
pusha
mov
clc
lds
scas
ljmp
shrl
push
orb
call
and
push
dec
int
xchg
pushf
sub
sub
jae
pusha
cmp
dec
add
xor
cmp
xlat
push
xchg
mov
into
negb
pop
sub
dec
mov
sbb
jp
cs
adc
movsl
leave
test
mov
add
and
add
pop
insl
sub
insl
mov
mov
push
sbb
mov
xor
in
test
xchg
add
dec
push
cmpsl
cwtl
add
push
loope
lods
inc
fistpl
ret
pop
shrb
call
xor
out
sahf
or
cmp
adc
pusha
fdiv
push
je
pop
ds
outsb
sub
test
cmpsb
jecxz
div
mov
mov
incb
mov
int3
push
sbb
mov
and
xchg
subb
outsl
in
and
aas
lods
icebp
sub
int
pop
dec
enter
cld
scas
push
mov
movsb
ret
sbb
jb
mov
cmp
xor
mov
lods
sub
push
push
fs
sbb
sub
bound
cmc
mulb
push
push
scas
clc
pop
xor
aaa
ljmp
inc
rol
pusha
and
jnp
ljmp
add
fidivs
repz
inc
mov
and
cs
and
mov
add
xchg
jge,pt
cmp
jns
jne
hlt
add
iret
and
shr
sbb
or
push
aaa
subb
sub
ja
jb
add
push
push
cli
inc
lods
in
sbb
sub
icebp
stos
imul
jp
xchg
dec
mov
fwait
jbe
stos
hlt
mov
in
and
cmovle
pushl
subb
and
enter
mov
test
int3
cmc
pop
pop
lods
pop
adc
mov
and
sub
out
das
lods
sbb
mov
aam
stos
insb
dec
nop
dec
sub
sbb
mov
sbb
es
mov
cmpsb
pop
dec
cmc
loop
pop
lret
lds
adc
xor
xor
sub
pcmpgtd
pop
outsl
xor
push
mov
daa
mov
shrl
sarb
ret
insb
inc
ret
sahf
mov
stos
lret
push
out
or
std
and
icebp
out
cs
mov
ds
and
in
cli
cmpsb
lods
imul
cmp
push
pop
mov
mov
mov
inc
scas
jne
iret
mov
dec
inc
bound
sub
pop
movsb
inc
pop
xor
out
sbb
mov
mov
sarb
pop
push
icebp
in
cli
xchg
dec
sbb
das
dec
dec
loop
lods
sbb
mov
sbb
xor
bound
sbb
inc
adc
pop
ret
adc
pop
mov
daa
ja
jne
xchg
cmpsl
fcompl
mov
and
sbb
fisubrl
pop
mov
inc
rorl
int3
mov
incb
aaa
inc
push
es
vmwrite
out
sahf
in
rcrb
aas
insl
jnp
enter
mov
fwait
sub
jns
dec
pop
push
sub
pop
sbb
fsubr
pop
and
and
jecxz
insb
jae
movsl
mov
insl
push
push
push
sub
sub
pusha
inc
mov
mov
xor
or
icebp
aad
xor
movsb
rcll
cmpsb
jle
int3
and
adc
enter
movsb
mov
in
mov
push
xor
outsl
gs
sbb
aaa
fidivl
fildll
pop
adcb
sub
aam
xchg
dec
sbb
sub
mov
inc
xchg
sbb
and
pop
je
and
fists
mov
add
push
daa
loopne
jns
push
fsubs
inc
pusha
out
dec
add
pop
fstpt
insl
loope
mov
cli
mov
pop
xor
aad
adc
gs
neg
inc
push
inc
in
push
or
or
lods
xor
push
jae
jp
mov
mov
iret
mov
xchg
mov
popa
sub
inc
in
xchg
pusha
ljmp
insl
stc
push
jae
cmp
shrb
mov
mov
outsb
and
inc
pop
pop
mov
xor
push
or
out
dec
insl
xor
cmp
pop
jae
addr16
cmpsl
jns
enter
sub
fisubs
mov
or
fidivs
mov
aas
cs
imul
mov
bound
push
sub
shl
jae
or
and
dec
cs
cs
test
mov
fwait
xor
gs
nop
aam
movsb
les
dec
cmpsl
test
xlat
push
cltd
mov
outsl
or
icebp
or
jo
push
sbb
repz
adc
nop
mov
jns
lds
and
popa
inc
pop
iret
fsubs
mov
leave
out
fldenv
gs
push
jbe
lds
aas
lods
mov
fdivrl
ret
jo
xorl
xorb
jge
pusha
sar
orl
jle
std
push
push
mov
je
xchg
fimuls
pusha
sub
mov
test
jb
lret
leave
push
insb
repnz
sbb
sub
inc
fadds
lret
in
out
jmp
xor
pop
jne
push
movsb
stos
inc
sbb
fcmovnb
sar
repz
xchg
push
nop
jns
rcrl
int
imul
popf
outsb
scas
popf
inc
fildl
inc
mov
lds
mov
push
or
pop
test
push
sbb
lahf
std
cmpsl
adc
cmp
pop
pushf
ret
lods
sub
arpl
sub
sbb
and
lahf
mov
jge
pop
dec
dec
cltd
add
clc
add
mov
sti
aam
pop
jge
sub
jnp
cwtl
add
mov
cmp
lea
push
fldt
cmpb
sub
sti
jns
add
jge
cli
xor
xchg
addr16
sbb
sbb
lcall
xor
sbb
xchg
mov
mov
cs
jb
loope
cmp
add
nop
pop
sbb
add
push
sbbb
repz
xchg
xchg
pop
add
sub
jns
mov
jne
clc
scas
pop
ljmp
sub
adc
sbb
pusha
jge
mov
movsb
test
cmp
inc
sbb
push
insb
dec
add
shlb
or
cmp
mov
or
mov
pop
into
jb
out
xchg
into
idivl
insb
pusha
xchg
jp
dec
jb
mov
ja
jle
push
es
inc
cmpb
mov
xchg
cltd
bswap
and
incb
daa
aam
inc
aad
xchg
pop
sub
sub
sub
push
dec
sub
cmp
mov
repnz
das
stos
jae
push
cmpsl
mov
and
and
in
jbe
mov
cmpsb
mov
mov
xchg
and
inc
adc
sub
push
sub
pinsrw
xchg
ds
les
lret
sub
xchg
jg
hlt
sbb
ljmp
fldl
mov
repz
push
jp
push
repz
cwtl
dec
mov
push
divb
mov
cmp
lds
sbb
ret
lret
sti
mov
pop
sub
mov
xor
cmp
add
add
pop
stc
mov
in
out
cmp
mov
nop
das
ret
pushw
lds
xorl
mov
jp
leave
push
lods
ret
mov
mov
out
mov
std
adc
mov
dec
push
lods
mov
xor
ret
mov
filds
push
shl
fildll
lcall
push
fsubs
mov
xor
jns
enter
jno
adc
inc
mov
js
or
ret
add
enter
in
mov
out
inc
int3
cwtl
xlat
jl
ja
xor
push
and
push
aad
daa
out
aaa
mov
sub
nop
mov
pop
sbb
lods
pop
jbe
jns
mov
push
mov
or
and
sbb
stos
mov
inc
fsubrs
and
out
das
lea
xchg
sub
mov
mov
outsl
mov
push
int3
jne
mov
cmpsb
bound
stos
mov
push
fidivl
test
sub
inc
mov
push
sbb
in
xchg
std
xor
push
daa
frstor
icebp
push
adc
cli
int3
stos
loope
loop
lock
or
in
cmpsl
add
sti
mov
imul
sbb
invd
mull
insb
inc
inc
inc
adc
nop
das
cmc
push
call
add
jne
loopne
fisttps
cmp
mov
shll
jle
mov
sub
add
sub
roll
ficoml
xchg
xchg
cmp
outsb
fisubs
xchg
pop
xchg
rcr
xlat
push
sarb
or
and
xor
divb
sub
push
icebp
fs
mov
in
dec
inc
sbb
xor
stos
push
xchg
jo
xor
mov
xchg
call
iret
xor
pusha
stos
lcall
or
dec
ljmp
sub
mov
repnz
cltd
loope
pcmpeqb
hlt
and
cmp
shll
xchg
movsb
imul
adc
aas
dec
fistpl
pop
ja
dec
or
jecxz
cld
push
cmpl
pop
dec
push
es
lods
shlb
stc
rcll
sbb
add
push
jo
inc
push
lret
adc
push
mov
bnd
call
push
imul
push
jno
push
push
lods
int
sub
add
fstpt
lods
call
shr
jo
imul
dec
push
movsb
pop
pushf
push
or
ficoml
ljmp
add
dec
fnstcw
pop
mov
stos
mov
fiadds
push
popa
mov
rcrb
jmp
pusha
mov
insl
jp
cmpsb
jmp
fisttpl
push
adc
out
aam
lock
sbb
int
cmp
push
xchg
mov
ja
fcmovnu
xchg
or
lods
sub
shlb
jo
lds
aam
aam
sbb
lods
or
jnp
ret
mov
jmp
adc
pop
lcall
jp
lea
sub
icebp
push
mov
sarb
jge
add
push
sbb
adc
sahf
imulb
adc
pushf
dec
pop
daa
ret
xchg
test
or
push
insl
inc
sub
mov
or
or
jae
mov
mov
aam
and
mov
in
stos
iret
cmpl
jb
std
hlt
sub
pop
pop
xor
sti
mov
xor
ds
or
roll
mov
lea
in
dec
lret
shll
mov
xor
aam
or
stc
jae
sbb
scas
sub
test
add
lret
cld
adc
movsl
add
jle
jmp
lret
bnd
pop
push
jg
jl
sbb
inc
mov
mov
lods
cmp
enter
fcomps
sub
push
lock
jno
insb
fildll
dec
das
mov
out
arpl
sahf
xchg
dec
xor
jnp
sub
repnz
sbb
scas
add
cmc
adc
add
xchg
adc
jle
js
jmp
arpl
push
mov
inc
pop
inc
aam
outsl
ljmp
cli
rcrl
jmp
sbb
test
inc
xchg
cmpsl
bound
xchg
mov
pop
mov
mov
xor
cmp
aaa
fdivrs
push
scas
sbb
mov
outsl
mov
or
cltd
mov
adc
or
outsl
mov
decl
xchg
add
popfw
sbb
mov
push
pop
fcoml
sub
ljmp
sbb
mov
cmp
addr16
mov
js
cli
mov
push
jmp
sti
pop
add
sbb
push
jp
dec
sbb
cmp
movsb
pop
xchg
adc
or
in
cmp
pminub
mov
out
xchg
adc
je
adc
aad
incb
lods
adc
jge
sbb
lds
nop
or
mov
push
call
cmp
xor
lods
jno
jns
push
fsubr
fs
repz
lods
adc
test
mov
mov
xchg
cmpsl
adc
add
adc
jmp
dec
and
testl
clc
jl
pop
or
lds
dec
loope
dec
xchg
cmpsl
ret
push
push
lea
popf
adc
fs
orb
inc
and
subb
and
and
cmpsl
div
inc
in
mov
mov
push
xor
sbb
mov
movsl
fsubrs
sbb
cltd
repz
sub
cli
stos
loop
mov
mov
jp
sub
jmp
insl
lret
sti
pop
mov
lods
clc
rcrb
fisttpll
cmp
lahf
lock
sbbl
xlat
fwait
mov
mov
jb
arpl
sbb
std
pop
inc
cmp
fisubrs
fxch
mov
js
adc
cmp
mov
out
rcrl
sub
push
mov
int3
outsl
add
mov
and
mov
push
mov
imul
mov
mov
or
xchg
dec
cmp
add
lds
enter
insl
sarb
paddsb
push
hlt
ret
lods
push
or
clc
ja
sub
es
and
or
ds
cmp
sbb
jl
dec
shlb
lea
mov
pop
dec
lahf
push
loope
push
jne
jae
dec
sub
sub
jmp
xorb
pusha
and
sub
stc
fbstp
sbb
jo
loope
dec
xor
shlb
cs
pusha
mov
cmp
xchg
sub
xchg
lea
pop
jb
pop
cli
hlt
push
mov
xchg
bound
push
dec
fildll
icebp
pushf
daa
into
sbb
mov
cs
andl
mov
dec
or
sti
and
enter
les
cmc
jl
adc
push
push
or
xor
sar
imul
jno
sub
push
in
pop
scas
mov
cli
mov
out
xchg
push
pusha
fwait
jb
fs
pop
pop
mov
test
mov
loop
lock
cli
out
mov
inc
add
fwait
jb
mov
push
out
push
mov
mov
daa
sub
xchg
xor
loopne
add
stos
sbb
dec
add
nop
popa
cmp
jl
js
and
pop
cli
xor
jmp
mov
xchg
lds
rorl
jbe
cmpsb
dec
das
pop
movsl
adc
movb
jg,pn
and
lea
in
adc
xor
inc
out
idivl
mov
movsb
mov
dec
push
aam
fidivl
xchg
ja
add
mov
mov
leave
sbb
or
xchg
inc
adc
out
movsl
insb
out
inc
repnz
cmp
mov
mov
inc
mov
xlat
and
popf
setae
pop
test
sub
mov
int3
or
mov
in
push
stos
arpl
lods
popf
xchg
pop
popa
cli
pop
ret
xchg
sub
ss
unpcklps
mul
aam
xchg
lock
inc
pusha
mov
jg
mov
xchg
mov
data16
mov
pusha
mov
inc
push
mov
mov
xor
adc
pop
mov
push
xor
jno
add
adc
xchg
or
outsb
mov
mov
repnz
pusha
pusha
daa
sub
fs
pop
outsl
icebp
aaa
pusha
shll
mov
std
daa
push
adc
xor
pop
xor
pop
ss
pop
jmp
outsb
xchg
jl
das
pop
cltd
xchg
and
mov
inc
cltd
mov
jne
mov
inc
cmp
iret
mov
sbb
xchg
aad
jecxz
and
xchg
dec
sti
scas
cmp
jns
cmp
movsb
jbe
int3
mov
and
repz
add
add
dec
jo
jnp
sub
fwait
dec
cltd
adc
xchg
leave
lods
mov
mov
sarb
push
mov
imul
outsb
lret
or
sub
push
clc
jecxz
repnz
xor
sub
mov
lcall
mov
push
inc
cmp
xor
pop
call
sub
inc
and
int3
xchg
jno
xor
xchg
ljmp
lods
call
pop
cs
movsb
or
mov
daa
xchg
fstpl
dec
sub
pop
jbe
cmp
test
xchg
push
push
pop
sbb
lds
mov
in
das
std
je
dec
pop
fdivl
inc
movsb
shll
and
in
rorl
or
jb
cltd
sub
stc
das
cld
movsb
xlat
leave
and
dec
inc
scas
test
inc
stos
mov
jo
sub
enter
push
lea
and
xor
pop
sub
in
stc
jns
into
stos
jbe
out
mov
int3
cltd
sub
call
sahf
cld
xchg
jl
sub
shrl
cmp
dec
mov
add
jnp
and
jecxz
sbb
mov
repz
aam
fistps
aam
sarb
push
mov
lods
mov
call
mov
mov
stos
andb
pushf
subb
push
inc
jle
xchg
cmc
pop
pusha
mov
xor
sub
cli
push
bnd
pop
mov
mov
int
mov
sub
clc
xchg
inc
std
pop
aaa
xchg
roll
dec
stos
lea
sbbb
stos
fs
push
dec
aam
mov
sub
lea
notl
sub
mov
mov
mov
repnz
cs
add
repnz
inc
aam
lods
add
jb
dec
dec
sbbl
cs
scas
mov
xor
dec
insb
jmp
outsb
aam
ror
cltd
xchg
int
push
mov
push
lret
lods
sub
bound
mov
movsb
lods
dec
fmuls
movsb
jle
push
xchg
jb
fs
outsb
inc
push
inc
jb
cwtl
aaa
jg
js
insl
add
push
jb
loopne
dec
xor
int3
push
mov
mov
push
xor
jmp
lahf
sub
jmp
cmp
cmpb
dec
cmp
xchg
dec
scas
jge
or
ret
mov
mov
fsubs
movsb
mov
and
mov
or
rorb
das
xor
inc
addr16
dec
xor
sub
fisubrl
jbe
enter
push
push
sarb
add
push
fsubs
lret
xor
les
fcmovu
push
mov
pusha
push
dec
scas
repz
pop
mov
imul
jmp
mov
dec
popa
scas
cs
sti
stos
mov
xchg
mov
stos
pop
jb
dec
ja
cs
ficoml
mov
xchg
mov
pop
fidivrl
addr16
dec
pop
loop
ret
mov
mov
pop
inc
pop
push
sbb
stc
pop
jno
scas
xor
lods
out
loop
dec
cwtl
xor
xlat
push
fidivrs
mov
orb
pop
jmp
and
sub
mov
sbb
ljmp
sub
pop
jbe
push
inc
incb
ret
xor
test
xor
sub
fmul
jge
mov
int3
dec
pop
push
aaa
add
mov
lret
adc
aam
mov
es
and
cmp
loop
mov
cmpsl
pushf
mov
loopne
cmp
inc
mov
or
test
ljmp
stos
sub
jl
jns
push
push
out
push
jb
mov
in
wrmsr
in
jmp
leave
sub
stc
out
xor
xlat
add
mov
aam
jb
repnz
lods
outsb
es
xor
jb
push
dec
ljmp
lcall
push
rorb
jns
xchg
mov
inc
aas
jge
xchg
fwait
jle
pop
idivb
xchg
mov
sar
jns,pn
sarl
lcall
testl
mov
push
pop
sub
sub
xchg
decl
ss
orl
adcl
into
scas
cs
pop
mov
dec
cmp
lea
inc
mov
mov
mov
repz
pop
imul
cld
jg
push
ret
insl
pop
in
testl
sbb
jle
insl
xor
lahf
out
and
mov
add
lret
jae
push
adc
sub
ja
cmpsl
sahf
mov
xchg
scas
test
mov
shlb
imul
sub
cmp
inc
add
std
sub
cmp
xor
lret
das
push
lock
lock
popf
inc
jae
mov
xchg
push
jns
inc
mov
mov
testl
sti
fdivrl
out
fnstcw
int3
pop
mov
test
cmpsl
push
sub
lret
mov
xor
mov
enter
sub
cmp
nop
fsub
lret
out
mov
or
xlat
push
decb
mov
fsub
inc
xchg
pushl
mov
push
test
nop
int
call
sub
aad
nop
adc
leave
add
mov
mov
in
mov
imul
in
addr16
scas
sbb
inc
mov
lea
call
adc
out
imull
cwtl
mov
aaa
dec
stos
sbb
scas
int3
movsb
loope
and
mov
ljmp
stos
xchg
sbbl
lret
cmovp
xor
stos
sub
cli
movsl
ljmp
xor
loope
inc
ds
mulb
jnp
test
jnp
shll
mov
xchg
mov
push
dec
jp
in
adc
xor
adc
xor
jb
movsb
or
cmp
xor
aaa
mov
xchg
aam
sub
cwtl
cmp
and
xor
and
js
bound
call
inc
add
sbb
mov
imul
pusha
nop
ss
cmp
arpl
add
imul
push
mov
mov
mov
xchg
sbbl
fs
mov
fisubrl
insl
ljmp
outsb
lods
out
or
inc
xor
aad
add
jge
pop
xchg
push
ja
fistpl
lock
sub
jae
sbb
sbb
dec
mov
and
lods
xchg
gs
stos
mov
das
sub
adc
xchg
xorb
das
call
cmpsl
aad
sbb
xchg
or
adc
mov
scas
test
jae
jo
or
or
leave
xor
das
movsb
rcrb
inc
jge
js
sbb
pop
loope
push
push
dec
sub
mov
sbb
mov
out
pop
std
mov
sbb
movsb
jmp
pop
ss
rorl
inc
aam
jb
movsl
ret
leave
mov
jns
sar
fmull
scas
loopne
jnp
mov
aaa
cmp
xor
test
cmc
das
jb
adc
jp
cmp
sbb
das
pop
xor
fcoms
cmp
insl
fisttpll
jge
pop
xchg
mov
cmc
insb
xchg
xlat
pushf
inc
mov
cmp
bound
adc
lcall
jecxz
lcall
call
stc
mov
mov
push
fsubrl
adc
sbb
mov
push
jge
xchg
sub
cmpsb
fistpl
xchg
movsb
cli
mov
bound
vpavgb
pop
sub
pop
outsb
jge
pop
xchg
pop
xor
clc
add
popf
sub
insb
mov
cmpsl
xorl
inc
cltd
jmp
int
mov
addb
or
jmp
xchg
jecxz
outsb
rcl
mov
fnsave
nopl
out
mov
and
call
push
outsb
add
repnz
mov
mov
jmp
inc
fidivl
in
mov
in
cmp
add
aam
shlb
movsb
xchg
and
ljmp
mov
mov
adc
cmp
mov
ficompl
sbb
cmpsb
pop
shrl
hlt
push
jecxz
jne
aaa
and
sub
push
xor
cmp
inc
xchg
mov
push
xchg
lds
pop
add
or
xor
pop
inc
inc
push
hlt
cmpsb
pushf
sub
pop
mov
cmp
test
dec
add
enter
jl
inc
jmp
shll
push
ljmp
and
adc
xor
push
mov
mov
dec
push
ljmp
gs
jne
cmpsl
jno
pop
fildll
in
add
les
cmp
test
jno
mov
add
int
faddl
dec
jecxz
pop
lret
cmp
cmpsb
pusha
push
xchg
lock
mov
fwait
enter
push
outsb
mov
scas
mov
jns
or
lds
imul
mov
mov
scas
dec
imul
jmp
pop
into
enter
cltd
or
jb
loop
or
rorl
jns
sub
dec
ret
out
add
mov
xor
shl
in
and
shll
movsl
loopne
jg
push
xchg
xor
scas
lcall
xlat
mov
ljmp
inc
scas
and
jle
pushf
push
movsb
imul
cmc
sahf
sub
popf
dec
xchg
cld
jp
and
push
push
mov
mov
dec
mov
xchg
mov
push
pushf
fnstcw
repnz
in
fldcw
sbb
mov
pushl
pushf
std
icebp
shll
movsb
pop
dec
add
push
adc
xchg
out
mov
mov
inc
xor
dec
ss
sbb
push
push
push
xchg
mov
push
jmp
add
pushl
add
stos
in
call
dec
movsl
rol
icebp
push
xor
mov
push
fsubr
dec
pop
sub
lods
pushf
lods
dec
sub
faddl
xor
mov
mov
push
add
mov
mov
icebp
inc
mov
lea
popa
push
jmp
adc
sbb
data16
xchg
push
mov
jae
loop
xchg
jb
or
adc
xchg
pop
xchg
add
add
mov
test
clc
push
insb
test
xchg
das
pushl
fcomi
out
xchg
repnz
dec
mov
mov
dec
cmp
testl
inc
inc
jmp
scas
mov
enter
inc
pop
shll
mov
add
xorb
mov
cmpsl
and
decb
xchg
lcall
sbb
daa
in
xchg
inc
cwtl
arpl
mov
mov
lods
std
mov
mov
push
pop
and
cmp
cli
fwait
addl
jbe
iret
leave
bound
push
stc
fdivs
jbe
fistpll
arpl
das
repnz
xchg
jge
sub
mov
jge
xchg
sub
adc
dec
call
and
ret
repz
jecxz
pop
fwait
loopne
lds
lret
outsl
arpl
push
dec
pop
sbb
mov
cmp
ljmp
sbb
stos
mov
fwait
cmp
xor
push
push
mov
pusha
sarb
jmp
push
mov
insb
xor
jmp
or
ss
cmpsb
pop
mov
sbb
movsb
adc
cltd
push
loop
aad
add
in
ss
data16
lods
mov
adc
sub
inc
and
mov
and
mov
imul
pop
sub
add
cmp
enter
insl
ja
dec
push
sub
sub
aaa
adc
mov
inc
sbb
shrb
cs
mov
jae
das
push
lods
inc
outsl
lods
and
cwtl
inc
xor
xchg
fadds
iret
mov
dec
shlb
push
push
sbb
repnz
mov
mov
pop
jmp
stc
sub
shlb
nop
int
pop
push
out
lret
cs
scas
mov
test
jb
lea
mov
jbe
sub
or
into
ret
sub
rsqrtps
push
lea
outsb
sti
xchg
or
inc
je
mov
imul
mov
movsb
es
test
sbbl
pop
ljmp
pop
add
test
je
jbe
iret
movsb
lods
pop
wrmsr
daa
add
in
mov
data16
rcrb
xor
call
jno
iret
and
and
outsb
and
pop
nop
movsb
pusha
jle
out
ret
lcall
jge
jge
pop
jb
pop
pop
jb
jg
aaa
cmp
pusha
lods
je
cltd
pop
aam
xchg
sub
add
subb
repnz
mov
push
sbb
cmp
pop
jmp
sub
push
sbbb
fdivrl
xchg
xor
pop
lods
cmp
mov
add
repz
fdiv
push
or
ret
shlb
lcall
inc
repnz
jb
jge
jge
in
push
jae
test
jbe
mov
int
test
rcr
outsb
mov
mov
icebp
xorb
mov
cs
or
pushf
mov
mov
mov
mov
adcb
dec
mov
ss
aaa
mov
std
add
outsl
jecxz
mov
ds
inc
xor
in
je
xor
xchg
clc
andb
sbb
dec
ss
sbb
idivl
in
add
sub
dec
dec
mov
ret
mov
aaa
rcrb
cmp
inc
dec
ljmp
sbb
xor
mov
stc
imulb
or
and
test
mov
cmp
push
ret
xchg
jmp
sub
xchg
xchg
mov
xor
out
jb
cs
aas
sbb
push
push
movsb
rolb
mov
push
in
push
pop
or
lcall
jo
jp
in
outsb
imul
loope
jb
ja
mov
into
mov
and
aam
insl
jbe
arpl
inc
jno
cld
repnz
push
xor
outsb
cmp
jns
sarl
neg
push
lret
add
sahf
xor
pusha
and
es
sbb
push
mov
std
inc
mov
xor
aaa
pop
in
lret
sub
je
mov
mov
es
addr16
mov
xor
andb
enter
mov
adc
fldenv
push
mov
xor
ret
jbe
and
test
daa
rorl
xchg
jb
not
mov
sub
xchg
mov
xor
sti
xchg
push
mov
sbb
add
test
and
sbb
mov
sahf
addr16
rol
jne
fsubrl
jle
imul
mov
bound
xor
cmp
movsb
mov
mov
sbb
inc
mov
or
push
popf
pop
pusha
fists
xorl
fsubrp
mov
lods
testl
lahf
in
pop
aas
andb
adc
sti
sbb
popa
rcl
cmp
jmp
xor
cmp
sbb
ret
mov
sbb
pop
dec
cmp
jne
insl
sbb
test
pusha
sbb
stos
cs
add
and
into
lods
mov
xchg
popf
jecxz
scas
hlt
dec
xchg
sub
xor
mov
out
push
push
push
inc
mov
adcl
addr16
add
xlat
or
in
leave
push
sbb
arpl
aam
jge
jb
mov
push
sub
pusha
insl
mov
mov
into
std
push
sahf
shlb
pop
mov
loope
adc
bound
ss
shlb
mov
lret
aad
ljmp
js
sub
xor
jns
clc
test
mov
dec
pop
cmc
sbb
outsl
mov
aam
popa
jle
inc
cs
jns
loope
jl
cld
aaa
push
mov
scas
mov
jne
mov
or
scas
xor
mov
or
lds
lods
and
pusha
xchg
or
ss
and
movb
mov
or
fwait
sub
mov
in
jb
xchg
ljmp
push
lcall
sbb
jb
mov
sbb
mov
outsl
dec
enter
aas
sub
lahf
xchg
loopne
mov
aas
dec
adc
push
mov
jae
jbe
iret
ret
add
movsl
inc
mov
pop
xchg
push
iret
adc
cltd
popa
sbb
xchg
dec
test
jnp
push
in
cmpsb
out
push
cmp
dec
inc
xor
sarb
out
dec
push
pextrw
cltd
sbb
xchg
and
push
inc
xchg
fsts
fldl
lock
fildl
cmp
fadds
push
out
lods
xor
out
or
mov
das
pop
sbb
daa
push
pop
adcl
adc
pusha
mov
pop
sub
pop
xor
scas
stc
fcom
jmp
inc
jne
xchg
lods
fists
dec
cmp
push
das
repnz
pop
xchg
mov
sub
mov
jge
mov
sbbl
pop
jb
sub
pop
ja
mov
sbb
mov
rol
pop
lock
xor
stos
iret
jno
out
sbb
cld
pop
cwtl
jne
jno
sbbb
mov
imul
fldenv
in
test
iret
sar
popf
xor
xchg
repnz
lret
xchg
mov
cmp
inc
fadds
jl
cmpsb
lods
adc
and
pop
sub
es
jbe
mov
sahf
sbb
sub
stc
ss
test
push
sub
cld
ljmp
jns
repnz
ficomps
movsl
mov
dec
push
xchg
dec
jb
xor
sahf
and
das
or
or
mov
jnp
add
mov
scas
inc
push
ds
mov
inc
or
outsb
bnd
insl
cs
mov
icebp
dec
iret
push
data16
mov
pop
movsl
movsb
aas
into
subl
sbb
xchg
imul
out
mov
sub
push
fidivrl
aaa
sub
or
xor
mov
aaa
out
call
es
sti
mov
jp
push
mov
pop
mov
lcall
gs
notb
icebp
iret
mov
js
cmpsl
dec
mov
insl
cmovae
icebp
dec
pusha
jb
mov
push
lds
xchg
push
das
sub
mov
cmpsb
sub
and
xchg
gs
sub
icebp
sub
btc
lock
das
inc
in
in
ja
pop
mov
pusha
add
push
aam
xlat
orl
cmpsb
pop
in
sar
inc
mov
mov
jge
stc
pop
frstor
inc
cmpsb
xor
cmc
mov
in
ret
movsb
std
hlt
mov
cli
dec
sahf
lret
add
lods
mov
das
add
icebp
test
call
lods
xchg
repz
dec
and
fdivl
scas
test
int
pop
imul
or
jb
inc
add
mov
jle
dec
gs
mov
ja
mov
mov
add
push
test
sub
sbb
pushf
inc
stos
and
movsb
addb
pop
dec
les
ret
aas
in
sub
imul
push
lahf
pusha
inc
dec
stos
xlat
cmp
mov
ljmp
pop
jnp
shl
sbb
fdivrl
mov
mov
loope
out
sbbl
pop
into
hlt
push
sbb
enter
sbb
movsb
inc
fcmovu
xchg
lcall
push
ret
pusha
imul
sub
in
popf
sbb
sbb
fsts
push
daa
push
mov
push
lods
push
je
jg
mov
mov
pop
sbb
add
or
sub
stos
adc
aam
lahf
sub
sti
mov
sbb
xorb
repnz
inc
loope
lcall
fwait
xor
hlt
test
mov
xor
sub
pushl
popa
jns
push
jno
cmpsl
movsb
adcl
jnp
push
addr16
sub
dec
or
mull
sti
mov
mov
in
lods
pusha
hlt
and
ss
cmpsb
repnz
inc
pusha
inc
fucom
cmp
loop
insb
out
and
pop
dec
jecxz
jae
jmp
inc
iret
jb
cmpl
das
dec
addl
dec
mov
adc
add
pop
shll
push
into
stc
pusha
iret
sub
out
ret
and
arpl
lods
cmp
in
pop
mov
adc
pop
andl
addr16
lahf
add
jge
pushf
cmpsb
jae
cmp
mov
mov
jns
mov
nop
push
sbb
dec
into
cmc
mov
adc
xchg
dec
data16
repnz
data16
lret
or
out
popa
out
mov
push
push
fmul
pop
mov
repz
rorl
xchg
xor
add
ljmp
fs
cmp
xchg
popa
adc
lds
xor
push
outsb
mov
stc
outsl
rcrb
sbb
iret
sub
mov
ljmp
lahf
xchg
xor
push
movsb
pop
decb
sub
call
movsb
mov
fst
inc
or
mov
stc
divb
cli
sbb
fisubs
adc
mov
imul
out
cs
fnstcw
mov
push
pop
sub
gs
dec
fs
scas
fdivrl
push
pop
mov
jb
push
jne
push
mov
jbe
out
ret
dec
dec
mov
pushf
test
ret
popa
cmp
fcmovu
mov
icebp
fisubs
cs
mov
pop
push
lcall
push
sub
je
mov
pop
cmp
mov
xchg
sar
je
insb
mov
xor
sahf
dec
stos
pop
pop
dec
stc
fsubl
pop
jnp
ret
push
push
dec
sub
lcall
neg
movsb
pusha
xor
xchg
inc
and
inc
jmp
xchg
sub
decb
movsb
loop
dec
bound
xchg
popf
mov
scas
cmpsb
mov
bound
icebp
lods
xchg
cli
dec
sbb
add
adc
sahf
iret
xorl
cmc
xchg
xor
iret
add
adc
les
mov
or
push
lss
in
outsb
or
ss
mov
xchg
test
push
andl
fisubrs
scas
hlt
in
enter
cmpsl
inc
bound
jl
xchg
adc
mov
xchg
push
int3
push
pusha
adc
loopne
arpl
lock
sti
icebp
cmp
test
adc
add
add
pop
or
mov
stos
out
cltd
adc
bound
cmp
test
lea
movsb
xchg
mov
les
adc
pushf
add
sbb
mov
inc
mov
adc
cmc
lret
je
mov
pop
dec
add
sbbl
dec
jae
xor
mov
add
jg
xor
mov
or
jge
pusha
or
repnz
rep
lahf
in
inc
mov
sub
shrl
add
push
mov
lods
lret
arpl
cld
mov
xor
push
std
inc
cmpsb
push
insl
jno
popf
adc
mov
mov
daa
adc
lea
dec
pop
jge
jno
dec
add
mov
fcomps
popl
stos
adc
fcomp
fisubrs
cltd
xchg
sub
push
inc
xor
sbb
fisttps
cmpb
inc
jae
enter
ja
sbb
lods
loope
mov
mov
sahf
imul
mov
xlat
lods
pop
and
mov
sbb
ljmp
lds
ret
leave
pop
jg
and
scas
js
test
fdivr
xor
in
mov
lock
push
and
push
or
push
push
test
lods
dec
fs
push
ljmp
popf
cmpsl
jbe
dec
xchg
aam
fs
xchg
inc
push
call
dec
enter
add
mov
jp
ret
inc
lret
or
out
cmp
cli
cmp
outsb
inc
xchg
aad
inc
dec
mov
jecxz
test
xor
insl
pop
das
cmpl
cmpsb
fs
add
andl
fs
add
fsubl
ljmp
mov
popf
fwait
int3
cmp
adc
xor
fsubrp
lret
add
xlat
ret
popf
mov
push
movsl
dec
lods
out
fucompp
xor
lea
jle
cmp
pop
push
jg
inc
push
movsl
jmp
scas
add
and
shll
xchg
icebp
and
shlb
fnsave
loop
xor
je
std
xchg
jnp
hlt
lcall
cmpsl
lods
mov
dec
mov
mov
push
mov
mov
out
mov
les
out
das
jle
sub
pusha
cltd
cmpsl
inc
push
lods
aaa
or
movsl
push
mov
icebp
les
inc
and
mov
shrl
mov
mov
pop
aam
popf
fwait
cld
pop
xchg
insb
xor
rolb
lret
add
pop
mov
sarb
push
mov
gs
sbb
or
pusha
jnp
sub
cli
mov
xchg
addr16
unpcklps
pop
add
clc
das
cmp
int
aam
jg
int3
jl
add
shll
or
sbb
and
lods
dec
and
jns
clc
sub
dec
lcall
aad
cmp
loope
shlb
sbb
mov
inc
push
fdivrl
adc
add
inc
sub
jmp
int
lods
push
sahf
sbb
int3
test
mov
fidivrs
dec
pop
ds
sbbl
andb
pop
sub
in
fldz
pop
sub
add
pusha
jl
test
xchg
mov
aaa
or
bound
out
adc
mov
jmp
pop
sbb
push
mov
iret
fsubl
mov
cld
lcall
insb
stos
aam
xor
push
inc
xor
lods
outsl
xchg
fwait
mulb
outsl
je
pop
and
and
cmpsb
out
cltd
scas
fadd
add
or
push
pmullw
cli
pop
push
inc
xchg
mov
into
lds
dec
jbe
leave
mov
inc
in
movsb
rol
or
mov
stos
cmpsb
insl
mov
arpl
sub
jb
jecxz
pop
into
outsl
in
push
dec
fisubs
int
in
call
push
inc
into
jae
lods
xor
jns
sbb
call
ficoml
pusha
aad
shll
lcall
or
sub
movsb
sarl
push
stos
lret
loope
bound
repnz
jecxz
xchg
out
push
or
into
stos
cmp
in
lods
mov
xchg
mov
mov
push
push
jne
les
and
xchg
xchg
enter
and
loopne
mov
jle
pop
imul
fdivs
loopne
inc
cmpsb
dec
push
mov
scas
mov
jbe
cld
das
les
mov
sbb
lret
adc
xlat
fidivrl
icebp
cltd
mov
fnstsw
push
sub
enter
loope
push
dec
mov
outsb
xor
add
cltd
mov
mov
xchg
pop
or
cmpsb
sub
or
sbb
mov
mov
pop
scas
mov
mov
push
insb
icebp
invd
rclb
jae
sub
mov
jns
cltd
cmp
or
stos
xchg
mov
cmp
xor
fdiv
jb
jbe
push
pop
mov
testb
mov
shl
call
and
fs
jmp
sub
jb
pop
push
aad
dec
ljmp
aad
sar
mov
xchg
lret
add
cmp
int
push
pop
jno
hlt
out
setnp
push
lahf
fcoms
mov
add
mov
adc
mov
xchg
mov
xor
sub
loope
or
aaa
xor
push
dec
mov
mov
sub
cmp
sbb
movsb
fdivrl
mov
js
pshufw
std
mov
and
mov
or
test
into
inc
mov
pusha
jne
dec
aaa
xor
dec
roll
aam
filds
jmp
adc
mov
lcall
outsb
pusha
out
lods
sub
stc
sahf
xor
insb
enter
cwtl
sbb
adc
sub
adc
aaa
pop
mov
decl
and
ljmp
dec
jbe
push
out
scas
mov
cmp
insb
push
cmpb
incb
dec
xor
call
sub
daa
fs
icebp
mov
int3
and
sub
pushaw
xor
sbb
jnp
sub
ds
xor
rcrb
jbe
xor
mov
or
shlb
jno
in
xor
lods
insb
ret
jne
arpl
jmp
cmc
call
cltd
enter
repz
lds
mov
aad
lea
aam
mov
xorb
iret
inc
sahf
xchg
inc
xor
mov
movsb
das
sahf
lahf
add
dec
mov
sbb
jno
lret
popf
xchg
sahf
push
sarl
scas
inc
in
add
cmp
ret
lret
or
adc
inc
je
cs
mov
jae
shll
mov
or
push
jnp
inc
mov
and
xor
int
mov
loopne
xor
pop
dec
data16
sub
ret
jmp
xor
nop
sbb
mov
mov
mov
ljmp
rsqrtps
sbb
fadds
add
jne
pop
pop
stos
pusha
lods
dec
shrb
insl
loopne
and
mov
mov
ljmp
lods
addr16
leave
cwtl
test
mov
adc
mov
sbb
aam
push
imul
pusha
jne
add
cmp
and
rorb
fmul
mov
lods
mov
adc
cmpsl
iret
xchg
push
hlt
fcoms
stos
and
lret
mov
sbb
hlt
and
lret
or
mov
inc
cmp
sub
in
enter
mov
mov
mov
addr16
mov
mov
push
jp
mov
pusha
mov
sub
movsl
gs
icebp
leave
adc
outsb
in
dec
shr
sub
mov
jb
mov
push
xor
push
jge
push
xchg
fdiv
jge
movsb
es
ja
jb
mov
jg
insl
aad
sbb
push
mov
ret
pop
nop
arpl
movsb
das
xchg
pusha
and
lcall
bound
movsb
in
dec
mov
cld
sub
mov
lahf
call
push
jecxz
lret
xor
add
and
pop
aad
cltd
dec
in
push
movsb
jl
movsl
xor
lods
jb
sbb
mov
aam
aaa
aad
xchg
lea
test
cmpsb
pop
sbb
sub
dec
mulb
ljmp
sbb
fsubr
ss
inc
rcl
cmp
xchg
mov
sbb
adc
andl
into
jns,pn
int3
cwtl
sbb
lods
ret
mov
pop
test
jo
jb
iret
push
ja
xor
out
mov
jecxz
in
adc
mov
bound
stc
aad
adc
fs
xor
jb
out
or
sub
andb
arpl
xchg
rcrl
fisubrs
sub
cwtl
jns
repz
cs
outsl
inc
lea
fcmovne
dec
test
cmc
je
iret
xchg
mov
loope
enter
push
mov
out
sub
repz
test
dec
lahf
ljmp
jno
xchg
push
test
enter
aaa
and
mov
ret
push
repnz
lret
mov
jo
sbb
mov
in
ds
dec
xchg
push
es
pop
cmpsl
sub
cmp
xor
mov
jge
loope
mov
adc
into
cs
dec
into
fldt
xchg
cmc
mov
jb
mov
bound
pop
imul
sbb
lods
mov
rclb
pop
in
sbb
mov
mov
cld
dec
push
xchg
sbb
das
mov
mov
cmp
pusha
mov
xor
dec
loopne
sub
icebp
push
inc
xchg
cmp
fnstcw
clc
cli
lea
jmp
dec
jns
mov
fcoms
pop
cmp
and
mov
call
pop
sahf
outsb
dec
ret
sbb
aam
pop
cmp
push
fdivr
jl
xor
mov
pop
js
push
sbb
sub
pusha
fdivl
iret
or
and
cmp
lret
mov
ficompl
dec
inc
push
jge
sbb
movsb
int
mov
bound
inc
loopne
inc
or
gs
dec
mov
mov
cs
jo
jecxz
iret
pop
xor
xchg
pop
sub
aad
aam
pop
lea
loopne
mov
adc
stos
jmp
xlat
stc
xchg
jge
out
pusha
fsubrp
sbb
xchg
xchg
sbb
sub
fpatan
adc
pusha
imul
ja
mov
xchg
bts
push
or
iret
cmp
mov
popf
jne
add
add
dec
clc
mov
xlat
aas
pop
push
push
sbbl
xchg
fldt
repz
rcll
sub
pusha
cwtl
and
test
adc
out
rol
leave
or
and
divb
jns
xchg
mov
negl
inc
push
pusha
add
sbb
jb
cli
add
cs
adc
push
push
adc
pop
stos
add
pop
sahf
out
sub
add
mov
mov
xchg
add
test
movsb
xor
bound
mov
les
inc
xor
lcall
pop
sarl
adc
push
aam
sub
imul
mov
or
icebp
or
jno
ret
push
das
and
jle
ja
fists
das
pop
sbb
or
push
cltd
cli
ficoms
or
pusha
add
sbb
nop
sub
iret
xor
push
lea
inc
hlt
cmp
inc
mov
mov
sub
aam
clc
push
lcall
pusha
dec
lret
jge
cmp
xchg
push
inc
lock
fadds
or
pop
sub
mov
stos
in
mov
sub
mov
sub
sbb
mov
push
fs
sub
lods
cmpsl
scas
adc
push
mov
dec
out
mov
frstor
andl
movsb
pop
add
or
in
adc
lods
cmp
fists
cmp
jne
das
push
bound
or
outsl
cmpl
es
das
pop
sti
test
jns
inc
ljmp
sahf
sahf
xchg
roll
mov
dec
jb
xchg
addr16
xchg
xlat
push
movsb
pop
push
repnz
dec
jns
outsb
repz
sbb
or
inc
add
jns
adc
mov
mov
push
sub
pop
mov
lea
pop
lods
add
or
mov
pushw
sahf
add
les
fld
add
xchg
andb
addl
loop
sbb
movsb
rol
leave
test
sbb
in
nop
shrb
xor
iret
lret
int3
xor
in
fsubrl
movsb
mov
jbe
sbb
ss
repnz
cs
push
and
jmp
ljmp
sbb
inc
pop
jp
dec
xchg
int3
adc
inc
jae
inc
sub
mov
aaa
xor
pop
pop
sub
jmp
pop
cvttps2pi
jg
xchg
aad
popf
sub
jo
dec
push
jb
outsl
jnp
mov
stc
dec
call
jmp
ja
sbb
in
insb
or
sbb
push
mov
pop
outsb
pop
ret
cmp
daa
pop
ljmp
ficoms
cmc
inc
mov
xchg
push
into
mov
push
es
cmc
stc
out
lea
lods
or
push
adc
lods
loope
das
sbb
mov
adc
pop
hlt
int3
pushf
pusha
test
push
push
add
shrl
pop
mov
sbb
push
jb
inc
fs
xchg
repz
and
cld
loop
out
adc
aam
pop
mov
inc
push
in
ja
add
shlb
cmpsb
andl
test
jb
pop
movsb
sub
popa
test
je
dec
push
scas
mov
es
cmp
sti
ja
mov
in
aaa
lea
ss
ret
jno
mov
repz
in
fidivrs
sub
shl
les
aaa
mov
push
mov
ljmp
mov
outsb
adc
dec
les
outsb
arpl
sbb
fdivl
dec
outsb
lods
mov
notl
sub
sbb
mov
push
movsb
insb
into
aad
das
sbbb
push
push
sbb
jnp
shll
in
imull
loop
push
ljmp
sub
scas
mov
add
mov
add
adc
dec
scas
es
mov
cmp
or
sub
inc
mov
stos
and
sbb
pop
push
jne
loop
add
or
mov
add
mov
push
test
into
mov
mov
dec
test
cld
cmp
inc
scas
iret
pop
aad
cmpsb
shufps
mov
and
mov
loop
mov
sti
icebp
jbe
jae
pop
push
ss
cmpsb
fisttpl
push
jmp
out
xor
sti
mov
mov
loopne
inc
mov
push
jo
lds
scas
scas
jno
or
sub
iret
imul
adc
mov
jno
push
pushf
sbb
fwait
and
lcall
mov
mov
dec
cmpsl
daa
fwait
adc
sbb
adc
nop
and
dec
mov
in
jns
loope
into
mov
inc
push
xor
sub
mov
sahf
cmp
loopne
pusha
dec
or
sahf
push
enter
lret
sub
in
or
xchg
xor
jb
loope
lods
dec
call
mov
inc
mov
cs
in
push
das
add
clc
and
inc
ljmp
push
imulb
lock
pop
xor
mov
jge
into
ja
je
add
dec
mov
xchg
pop
pop
inc
ljmp
das
sub
sub
and
loope
mov
jle
adc
aam
sbb
jno
adc
jne
cli
in
pop
stos
pop
adc
movsb
out
mov
repz
imul
pop
cmp
jmp
adc
adc
jns
dec
test
sub
inc
sbb
rorl
sub
mov
ljmp
xor
mov
xor
pop
sbb
hlt
dec
insb
insl
stc
loope
adc
or
lret
out
in
das
mov
or
pop
push
mov
pop
dec
xor
das
loop
sub
or
xchg
mov
scas
movsb
pop
out
mov
lcall
outsb
in
push
fwait
mov
aas
xor
and
hlt
add
mov
jae
push
jmp
jo
enter
push
sub
repnz
orl
push
sub
lock
popf
and
mov
bound
inc
ljmp
mov
loop
push
scas
sbb
imul
and
mov
movsb
dec
mov
xor
sub
xlat
ret
push
testb
pop
pop
gs
out
lret
movsl
fidivs
orl
imul
cmpsl
ret
clc
sahf
push
inc
popa
jmp
enter
loop
stos
xchg
aam
leave
loope
inc
sub
mov
fcomip
or
adcb
mov
pusha
outsb
cs
repz
das
cmova
ret
sub
cmp
push
fdivrs
add
out
add
data16
jecxz
mov
jbe
stos
icebp
addr16
ljmp
jg
mov
fs
outsl
aam
sbb
mov
dec
int
sub
mov
or
add
lods
lret
imul
fisubrl
sbb
loop
nop
popa
mov
push
out
dec
shr
mov
scas
pop
sahf
sahf
lods
into
test
pop
and
hlt
xor
or
inc
push
sub
lahf
xchg
bound
fcoml
adc
movsl
jo
mov
mov
pop
mov
xor
movsb
ret
cmp
pop
jb
add
in
ja
insl
mov
test
adc
stos
dec
push
rol
jb
inc
cmp
add
subl
xchg
into
sbb
pop
loop
sub
fidivl
adc
ds
sub
mov
test
mov
daa
aas
insl
xchg
mov
cmpxchg
xor
mov
push
lods
stos
cmc
and
hlt
push
lds
cmpsb
js
xor
xor
sub
mov
or
ss
adcl
jp
inc
stos
sub
mov
pop
sbb
aad
cmp
xchg
pushf
fldpi
push
or
ret
mov
mov
ret
das
ret
imul
fdivrl
jle
outsl
mov
adc
sbb
clc
xchg
push
scas
fistl
ss
mov
addr16
jecxz
pop
adcb
movsl
inc
ljmp
bound
out
aas
xor
movsb
sarb
iret
mov
push
jnp
dec
cmpb
movsb
xor
pop
enter
call
iret
iret
push
js
inc
mov
filds
sub
xchg
dec
mov
jae
dec
xchg
mov
lods
and
test
repz
hlt
inc
ds
mov
inc
scas
cmp
out
lcall
cmc
sahf
iret
pop
insb
cld
pop
cmp
loope
pop
mov
sbb
cwtl
mov
inc
in
dec
push
in
das
and
lock
pop
sub
lahf
frstor
loope
scas
cmc
dec
sbb
dec
rcrb
mov
stos
and
or
mov
inc
insb
roll
aam
xchg
sub
icebp
inc
cli
dec
adc
les
jne
xor
jb
andl
lock
add
dec
lds
idivl
mov
sbb
mov
pop
cmp
pop
rcrb
push
aad
and
push
or
jmp
repz
lcall
xchg
outsb
out
inc
lock
nop
fdivr
pop
scas
add
int
add
mov
movsb
adc
test
insb
cmp
push
out
cmp
adc
lea
jo
in
jle
xchg
and
cmpsl
pop
adc
mov
inc
loope
xchg
fisubs
ljmp
pop
sub
inc
enter
mov
mov
jb
roll
inc
movsl
mov
sub
rorb
or
xchg
clc
push
push
sbb
leave
leave
push
xor
lods
jge
fsts
jmp
add
dec
rcll
movsb
xor
fimull
mov
dec
dec
pop
ret
pcmpgtd
fidivs
int
movsl
mov
js
insb
mov
cmc
insb
sub
push
dec
in
pop
cmpsb
out
adc
outsl
imul
pusha
mov
and
sbb
push
push
es
sahf
sbb
cmp
sarb
das
pop
sbb
fdivs
push
lcall
dec
insb
sbb
jge
scas
add
push
push
aas
mov
dec
movsb
xor
lds
pop
mov
mov
xchg
and
test
clc
arpl
into
pop
mov
dec
popf
dec
mov
call
adc
jge
pop
adcb
push
lahf
pushl
jl
mov
movsb
cmp
xor
arpl
push
sub
fwait
mov
ret
pop
cmp
outsb
or
bound
pop
nop/reserved
sub
lcall
je
mov
and
ljmp
jg
mov
test
lcall
sub
call
xchg
adc
sbb
iret
shrl
inc
je
repz
cmp
sub
pop
orb
adc
pop
dec
lahf
lahf
or
out
dec
in
ret
jns
ds
enter
push
test
or
or
arpl
push
outsl
lods
mov
fildll
inc
inc
mov
lahf
cli
sbb
insb
mov
outsl
xchg
pop
test
mov
divb
push
jb
sbb
dec
out
popa
adc
mov
push
lods
je
jge
push
sub
shlb
shrb
gs
xchg
outsl
jne
mov
jbe
dec
icebp
ret
dec
dec
mov
dec
andl
push
cs
inc
call
fldenv
jge
mov
imul
insb
sub
popl
mov
mov
bound
xor
mov
cwtl
dec
cmp
mov
dec
pop
std
adc
fs
movl
push
inc
xchg
icebp
mov
fisttpll
mov
das
mov
pushf
pop
mov
push
adc
loopne
mov
mov
inc
std
or
ljmp
addl
hlt
cmp
ret
inc
jbe
push
fbld
insb
mov
mov
mov
dec
jp
lods
xchg
xchg
js
shlb
add
icebp
push
movsb
push
mov
int
and
je
test
dec
mov
pop
call
lea
ucomiss
push
pop
fidivl
ret
mov
or
outsl
cmp
in
mov
mov
lret
pop
pop
push
mov
pop
leave
test
inc
arpl
test
mov
mov
pop
xorl
push
push
call
cmp
mov
xorb
mov
pop
cltd
insl
enter
mov
adc
add
mov
test
loop
mov
jg
mov
mov
cli
scas
insl
call
lods
mov
push
pop
push
add
into
les
aam
out
fdivl
push
int
ret
and
je
sub
aam
pop
add
aad
ret
ret
jp
fsubl
pop
xchg
dec
divl
dec
mov
cmc
dec
sub
mov
inc
cmp
sub
sub
cmpsb
mov
xor
xchg
lods
fistpl
ljmp
icebp
mov
or
in
and
mov
dec
push
push
fwait
sub
jp
push
notl
loop
dec
repnz
mov
lea
or
mov
adc
enter
fiadds
cmp
stos
xor
cmp
jg
mov
lea
push
testb
test
xor
jns
add
pushf
loop
lods
ds
push
mov
scas
in
mov
mov
mov
ret
jmp
imulb
jno
int3
inc
fdivs
icebp
xchg
jge
jb
xchg
mov
push
inc
insl
call
ja
lods
ret
cltd
dec
cli
xor
lds
outsl
into
sub
dec
mov
popf
pop
pusha
in
xor
jb
divb
xorb
jb
aas
loopne
int
call
dec
xchg
dec
sub
out
cs
jnp
xlat
pop
mov
xor
add
add
cmc
push
in
pop
fcoml
mov
mov
jmp
sub
adc
xchg
es
adc
adc
pop
in
ret
outsl
sub
arpl
mov
push
fidivl
sub
adc
sbb
cwtl
aam
push
and
ljmp
cwtl
pushf
mov
push
das
shll
or
mov
aas
jns
add
fisubrl
subl
in
push
idiv
mov
inc
fs
push
mov
insl
clc
adc
mov
mov
sbb
add
push
pop
jno
xor
stos
imul
pop
and
shr
arpl
imul
dec
insl
jns
xor
in
sub
push
xchg
inc
mov
push
fldl
es
pop
lret
xchg
pop
sub
movsb
xor
iret
bound
push
jb
sbb
xor
dec
repnz
loope
test
inc
enter
dec
push
mov
cs
mov
fisubrs
add
or
cmp
cwtl
sub
sbb
cli
jb
dec
or
or
pushf
and
mov
verr
mov
ret
mov
mov
outsb
cwtl
scas
outsb
lock
pop
mov
mov
xchg
fiaddl
cltd
cwtl
leave
enter
imul
out
push
mov
sbb
repnz
pop
jecxz
dec
fsubrl
mov
rorb
movsl
jbe
clc
mov
sub
push
lods
add
faddp
lcall
cmp
sub
sti
push
or
sub
fimull
lods
cmc
sub
mov
pushf
mov
and
mov
stc
das
push
lods
aaa
rcl
and
scas
jge
or
cld
js
stos
movsb
movsb
adc
inc
js
add
movsb
push
xor
fisttps
xlat
jge
popf
pop
insb
das
jmp
fadds
push
jae
xorb
notb
sub
push
outsl
leave
sbb
fdiv
pop
sbb
in
adc
cmp
mov
ret
sbb
pushf
loope
ret
add
iret
fistl
xchg
pushf
push
adc
cmp
enter
popf
add
pop
out
push
or
insb
mov
mov
sub
fwait
and
leave
sahf
or
lea
and
dec
cs
negl
fildl
shll
jge
xor
or
addl
leave
enter
xchg
mov
lods
mov
das
cmp
push
insl
lods
jmp
out
and
psraw
and
jmp
add
xor
aam
imul
andl
pushf
cld
mov
sbb
pop
dec
clc
les
sbb
sub
dec
aad
sub
push
test
cld
or
pop
out
mov
or
inc
adc
dec
jmp
ja
add
arpl
and
cmp
lods
and
cli
xchg
test
pop
ljmp
ja
stos
inc
call
insl
mov
out
mov
arpl
das
out
out
xor
int
adc
sbb
and
push
jecxz
push
pop
cld
mov
or
and
js
cmp
out
inc
test
loope
mov
sub
and
and
adcl
lret
mov
aas
pop
dec
sub
mov
or
cmp
mov
cmp
sarb
enter
add
cmp
xchg
jns
test
stos
jnp
add
popf
movsb
outsl
xchg
sbb
push
mov
out
mov
dec
jg
and
push
es
and
push
xor
movsl
fcompl
mov
push
bound
sub
and
sub
fmull
in
test
cld
push
xchg
fcmove
fsubr
push
lcall
mov
shll
sbb
cmpsl
sub
imulb
add
jmp
mov
stos
std
mov
dec
sahf
hlt
mov
in
xchg
cmc
mov
je
das
popa
cli
scas
lret
dec
dec
sahf
adc
scas
cmc
push
push
shlb
jg
lods
xor
idivb
bound
sahf
outsl
xor
fidivl
pop
xor
cli
in
out
push
adc
mov
out
int
in
pop
fwait
cmp
fdivr
sub
nop
je
jo
fisubrl
lods
xor
pop
dec
movsb
pop
inc
sbb
pop
shll
add
push
sbb
sbb
in
jno
pop
mov
addr16
cmpsb
nop
add
inc
jge
ret
pop
scas
in
stos
or
mul
outsl
call
movsb
shrb
and
andps
fwait
ljmp
pop
jge
or
fwait
scas
mov
jno
sub
test
rcl
ja
stos
sub
cli
push
out
ficoms
shl
xor
dec
inc
roll
pop
les
xchg
dec
mov
mov
lods
dec
enter
push
jno
mov
in
push
add
gs
das
cmp
mov
lods
repnz
in
les
lds
inc
mov
adc
ret
repz
sub
dec
and
lods
std
cmovb
pop
leave
lret
inc
xchg
mov
mov
icebp
xorb
mov
movsb
jne
aam
and
and
or
stos
repnz
sarb
int3
add
inc
mulb
mov
xchg
add
movsb
add
test
std
cmp
loop
fisubl
push
xchg
sub
mov
sub
dec
jnp
in
xchg
inc
sub
fstps
mov
stos
jecxz
sub
pop
mov
movsb
mov
insl
out
jns
jb
cltd
inc
cmc
test
cs
in
adc
or
pop
mov
pop
insl
cli
mov
sub
shll
and
test
push
and
ss
enter
push
sarb
adc
inc
sbb
out
xor
gs
sahf
popa
xchg
repnz
orb
iret
mov
iret
mov
mov
pop
imul
stc
sbb
jg
sub
pusha
fwait
dec
adc
cmpsb
popf
sbb
notb
sub
adc
repnz
jbe
xor
sub
pop
dec
mov
test
mov
add
testl
adc
sarl
xor
xchg
sbb
out
out
push
int3
lcall
adc
pushl
xchg
subb
je
and
mov
pop
dec
repnz
dec
pop
aam
sub
xor
sbb
sbb
leave
sub
fcomps
cltd
xchg
movsb
repz
or
dec
push
inc
push
ljmp
add
xor
aam
int3
xchg
or
iret
ljmp
shll
jle
xchg
lods
aam
pusha
rcrl
cmp
add
add
ficompl
ret
enter
and
pusha
sbb
fsubl
mov
movsb
and
aaa
les
or
scas
js
cmp
or
out
mov
fcompl
xchg
movsb
aas
push
outsl
aad
push
push
xor
clc
rolb
mov
cld
xchg
in
sbb
cmp
rorb
mov
cmc
dec
subb
xor
mov
outsb
adc
cmp
add
dec
das
sbb
sub
ret
add
mov
out
vmwrite
push
iret
mov
xor
cmp
xor
sub
movsl
in
inc
lea
stc
cmp
stos
pushf
ficoms
jmp
sub
jmp
adc
in
ficomps
notl
scas
imul
mov
sbb
sbb
lods
sbb
aam
shrl
in
push
out
jbe
notb
push
xchg
jbe
inc
scas
mov
pop
xor
lods
dec
bnd
mov
add
mov
mov
leave
sub
out
and
cltd
ficoms
inc
repz
jl
lret
lret
arpl
shlb
push
jbe
jecxz
mov
daa
stos
lods
jecxz
clc
mov
stc
stos
mov
popf
pushf
scas
mov
icebp
xchg
sbb
movsb
outsl
shl
sahf
iret
das
stc
ljmp
pop
je
dec
mov
push
mov
pushf
out
mov
bound
dec
push
pushf
movsl
cmpsb
mov
inc
test
lcall
jb
xchg
xchg
movsb
xchg
xchg
lret
pop
rorb
and
push
fdivl
push
add
jo
lds
jmp
repz
xor
jae
clc
mov
mov
stos
movsb
hlt
dec
cmc
mov
insb
int3
cmp
xor
aad
rcrb
xor
inc
sub
jmp
sub
dec
fxch
and
aas
mov
in
sbb
shlb
in
dec
lcall
push
or
pop
xor
enter
iret
rorb
sub
jae
push
gs
jnp
dec
mov
repz
push
data16
test
xchg
pop
xchg
push
decl
or
das
test
xor
fiaddl
xchg
sub
mov
pop
xorb
cs
movsb
sahf
and
lea
sahf
out
mov
mov
pop
out
push
cs
dec
mov
hlt
adc
icebp
jb
push
cmp
jg
sub
cmpsb
mov
imul
gs
imul
insl
icebp
jae
mov
jmp
mov
lcall
push
iret
push
shrl
add
das
out
movsb
xor
sub
repz
pop
repz
pop
lea
mov
movsb
orb
jnp
jo
sbbb
inc
mov
or
loope
sub
in
xchg
xor
pop
test
xor
adc
dec
pushf
mov
in
push
pop
sbb
push
mov
push
mov
cmp
jno
xor
scas
or
in
movsb
adcb
mov
xor
mov
jae
je
mull
cmp
cmc
lret
jmp
in
movsb
xchg
mov
push
sbb
loope
push
push
sub
leave
sub
ds
xor
xchg
push
clc
dec
dec
jmp
std
ficomps
sti
movsb
shrb
xor
mov
jnp
ljmp
repz
jmp
rcll
pop
stc
imul
xchg
or
comiss
shr
mov
jg
ljmp
lock
mov
cmpsl
inc
push
test
jns
or
sbb
sub
sub
and
lahf
pop
add
sub
icebp
push
bound
jb
xchg
mov
cmpb
lods
push
inc
inc
mov
lds
mov
jge
inc
mov
cs
lods
lret
or
xchg
mov
or
or
add
sbb
mov
pop
cli
cmc
shll
lock
pop
inc
les
adc
adc
insb
or
xchg
and
iret
xor
das
mov
mov
repz
je
das
les
repnz
add
sub
sahf
sub
sbb
dec
bound
ljmp
jne
arpl
test
jmp
jl
add
fistpl
push
insl
ljmp
movsb
outsl
pushf
mull
mov
jb
mov
jb
pop
jge
cmc
mov
ljmp
in
mov
data16
mov
add
outsl
jp
ja
adc
imul
shll
jmp
int3
js
sbb
dec
in
iret
mov
fstpl
movsl
iret
cld
push
adc
dec
movsb
xchg
xor
cmpsb
fxch
or
push
movsb
mov
or
jbe
sub
mov
jb
xlat
movsb
andl
or
mov
stc
mov
push
addr16
inc
bound
scas
dec
mov
lea
repnz
and
ljmp
pop
rep
lods
add
call
xor
dec
dec
enter
cs
dec
pushf
add
xchg
roll
int
mov
out
sub
dec
mov
rep
stos
push
test
mov
sahf
loop
adc
xchg
cmp
shl
movsl
jbe
sub
adc
sbb
test
jg
mov
ja
mov
mov
out
xorl
repnz
jp
sarl
ret
cmp
inc
sbb
jle
xchg
adc
mov
or
cs
xchg
and
scas
jmp
ss
or
popa
sbbb
xchg
inc
incb
sub
fwait
arpl
mov
fcmovne
add
push
cltd
int3
aaa
cmp
xchg
or
push
call
xor
add
mov
dec
lods
sub
lcall
xor
xchg
cwtl
jnp
aad
and
call
mov
jne
or
dec
out
jecxz
xor
in
and
jne
dec
rcr
push
out
jbe
imul
movsl
xchg
push
dec
fs
or
cmp
mov
pop
pusha
inc
pop
fdivs
xor
dec
xlat
sbb
or
mov
push
or
sbbl
inc
mov
scas
inc
push
sub
loope
xchg
scas
xchg
adc
xchg
push
mov
pushf
pop
xor
mulb
fldcw
lret
sbb
inc
adc
aas
lods
push
jl
push
aaa
dec
xor
iret
sbb
mov
fisubrl
sahf
sbbb
inc
pusha
adc
and
aad
mov
mov
movsb
enter
stos
sbb
repz
sub
dec
mov
enter
aad
inc
mov
inc
fdivs
rcl
clc
pop
dec
cwtl
cmc
jns
rcrb
or
dec
shlb
inc
pusha
clc
add
push
add
xor
repz
xor
imul
xchg
fsubs
in
push
push
fistpl
xor
out
orb
in
xchg
jno
repnz
pop
test
cmp
idivl
push
jns
lock
mov
mov
rcr
stos
sub
sub
xchg
scas
sbb
sub
cmp
std
jne
and
leave
dec
xchg
mov
mov
mov
push
or
lods
xor
push
xorl
nop
cmp
notl
iret
mov
in
mov
xor
rep
mov
ljmp
jnp
push
mov
pop
outsl
mov
jmp
cld
add
add
test
mov
cmp
cmp
inc
inc
rcrl
sub
dec
lods
jb
mov
addr16
push
sub
stos
stc
push
pop
ljmp
aad
mov
loope
cli
in
push
les
or
dec
int
and
sub
inc
or
push
cmp
pop
bswap
mov
imul
jb
scas
sbb
cmpsl
xor
movsl
sub
mov
xor
in
cli
divb
outsb
adc
add
sbb
xor
lcall
sub
mov
out
adc
negl
mov
xlat
mov
pusha
out
test
test
add
ficomps
mov
shrl
and
sub
scas
stos
adc
push
lods
stos
gs
out
fcoms
and
sbb
icebp
movsb
fcmove
stc
imul
scas
sbb
jns
int3
or
mov
sbbb
mov
aam
xor
sub
sti
jmp
mov
aad
je
hlt
mov
repz
pusha
cmp
xlat
test
incb
sbb
add
enter
add
sbb
jo
mov
mov
dec
adc
jp
add
adc
pop
in
dec
jne
cwtl
faddp
and
in
mov
mov
cs
jo
jecxz
add
movsb
mov
inc
push
aad
shrl
cmpsb
arpl
bound
repnz
mov
mov
mov
sub
into
and
test
jo
leave
cmpsb
mov
jb
mov
fwait
mov
pop
xlat
movsb
sub
ret
sbb
xor
lea
scas
out
addb
sbb
mov
loope
sbb
icebp
adc
imul
lods
jbe
call
iret
mov
repnz
add
leave
lds
enter
lods
sbb
or
add
mov
and
mov
dec
sub
decl
idivb
clc
sbb
movsb
inc
adc
das
lcall
sbbb
pop
mov
mov
scas
lea
mov
rcr
xlat
and
xchg
mov
stos
in
push
ret
movsb
testb
lods
ss
stc
stos
mov
inc
test
loope
add
dec
roll
jg
ja
sbb
push
push
pop
ret
lock
popf
aas
xchg
dec
xchg
adc
xor
call
popf
lods
sbbl
mov
cmpsb
repnz
cmp
fwait
or
inc
mov
enter
sahf
lret
push
mov
mov
sub
cmp
ret
imul
pop
cmp
or
fcoms
sub
adc
cmpsb
xorl
in
aam
das
xor
adc
mov
aam
shrb
sbb
mov
jge
and
addb
test
sbb
scas
jmp
movsb
push
sub
out
lret
outsb
arpl
ljmp
aas
lods
loop
adc
cmp
mov
dec
mov
sbb
imul
subb
push
cmp
mov
out
jo
jmp
and
sahf
sbb
cmp
int3
pushf
loope
mov
mov
shrb
fs
mov
clc
cwtl
ret
stos
xchg
push
test
cmp
ret
adc
xchg
mov
dec
xchg
push
lds
inc
outsb
mov
push
cmp
ret
out
loopne
stc
mov
add
adcl
dec
add
movsb
lds
lods
adc
imul
cmp
and
into
lret
push
inc
xor
sarb
push
ret
inc
cmp
mov
jge
lcall
in
sbb
pop
mov
add
inc
inc
enter
pop
and
into
add
dec
gs
sub
decb
or
dec
ljmp
sub
push
inc
xchg
sub
stc
xchg
push
dec
stos
jle
push
mov
popf
fldcw
inc
mov
mov
stos
or
lahf
mov
imul
js
lods
add
cmp
cmpl
xorb
aad
cmp
shr
push
inc
fcoml
or
jbe
int
outsb
inc
outsl
jecxz
sub
aaa
xchg
in
stos
push
sarl
jb
add
mov
push
jmp
xor
sbb
aam
inc
mov
or
ret
insl
addr16
sti
mov
mov
ja
mov
rcll
mov
mov
jbe
loopne
into
addb
fstpl
mov
jl
jae
bound
dec
adc
sub
lods
mov
stc
int3
call
ljmp
clc
push
fildll
push
enter
adc
jbe
sub
outsl
cmp
push
js
subl
xchg
dec
dec
aad
outsl
mov
sarl
mov
xchg
dec
push
scas
call
push
rdpmc
adc
jl
ror
bound
pushf
aaa
js
inc
sbb
jge
push
pop
sub
andb
xchg
fisttpll
or
mov
filds
adc
mov
lods
sarl
mov
out
pop
adc
mov
mov
in
je
lock
mov
outsb
dec
lock
pop
mov
inc
notl
push
out
cmp
xchg
stc
cltd
jbe
movzbl
sbbl
and
mov
pushw
outsl
sbb
aam
out
mov
cld
cmc
adc
outsb
sahf
mov
repnz
testb
sub
cmp
mov
inc
xchg
push
into
mov
bound
ljmp
seto
mov
or
orl
popa
call
ret
mov
push
mov
je
arpl
je
lods
pusha
and
lods
xchg
lahf
cmpb
mov
jle
pop
mov
fisttps
mov
push
dec
aam
mov
inc
movsb
mov
xlat
cli
cltd
in
jb
fisubrs
sbb
je
nop
aam
push
jb
xlat
sti
xchg
dec
jbe
pop
fs
out
cmp
pop
push
inc
pop
cmpsl
xor
lods
aaa
in
and
cld
sub
fistpl
addl
add
dec
std
shrl
scas
push
das
psubw
lret
mov
lahf
std
outsl
es
cltd
adc
data16
sbb
cmp
push
rcrb
pop
mov
xchg
mov
dec
xchg
xor
xchg
into
mov
mov
lds
outsl
mov
mov
jno
push
movq
mov
dec
shll
sub
pop
cld
mov
fistpl
seta
rcrb
movsl
sti
jb
sub
lcall
adc
out
xchg
repnz
add
push
pop
cs
ds
bound
cmp
mov
punpckhbw
sub
push
inc
dec
xchg
cltd
pop
push
les
push
push
addb
call
adc
add
xchg
jnp
mov
test
repnz
sbb
jg
jg
cld
das
push
pop
mov
call
jb
mov
popf
hlt
or
lods
jmp
out
data16
push
and
dec
cmp
jno
scas
aad
jle
jae
cmp
or
lret
mov
into
dec
push
pop
sub
mov
xor
mov
scas
jae
xchg
lods
scas
mov
aad
les
call
sub
mov
ret
cld
cmc
push
xchg
sub
test
ljmp
sbb
mov
gs
mov
std
insb
sub
pop
sub
notl
lods
or
sbb
mov
cmp
pop
aaa
mov
bound
sub
adcb
or
push
jmp
mov
ret
jb
adc
push
lret
xchg
loopne
movsb
repnz
rorl
inc
adc
push
inc
mov
outsb
or
shrl
xchg
cmp
je
mov
movsb
mov
jae
cs
movsb
cmc
xor
mov
clc
adc
or
mov
loop
cmp
js
or
and
add
jbe
add
outsb
sub
or
dec
pop
call
pop
stos
push
mov
xor
scas
popf
jp
xorps
or
aaa
call
sbb
subl
enter
mov
mov
or
aad
xor
push
sbb
leave
mov
neg
es
jge
add
call
mov
xorl
loope
loope
adc
xchg
rorb
lods
mov
fisubrl
lahf
stos
js
mov
jl
hlt
ret
add
iret
xor
repz
cmp
pusha
mov
imul
imul
mov
mov
daa
xchg
les
xchg
cmp
pop
inc
iret
mov
fldenv
clc
test
or
dec
movsb
adc
adc
push
push
xchg
icebp
push
or
iret
ss
add
mov
cli
jle
fwait
push
jb
cmp
scas
lret
mov
int
ret
and
xchg
xchg
xchg
call
in
shr
mov
pop
sbb
mov
mov
pop
fisubl
xor
sbb
mov
push
fsubl
lea
aam
inc
repnz
lcall
pusha
lahf
movsb
ss
movsb
int
cs
push
mov
push
cmc
and
push
loop
in
popf
push
ret
mov
lret
sbb
bound
ja
es
orl
mov
bound
pop
cmc
push
repnz
bnd
or
subb
xchg
push
sbb
xchg
jg
pop
mov
sbb
movsl
lods
imul
aaa
addb
and
pushf
or
call
lret
movsb
inc
ja
aam
pop
pop
or
push
into
fsubrs
mov
mov
fsubrs
sbb
dec
add
jb
mov
mov
std
pusha
lock
out
cltd
xor
mov
mov
jle
add
jnp
pop
xchg
jbe
test
ljmp
cmpsl
pop
clc
loop
mov
pop
scas
das
adcb
mov
sbb
mov
fmuls
push
outsb
stos
mov
testl
or
mov
mov
rcr
into
insl
cli
test
add
lea
xchg
in
hlt
sbb
jge
mov
in
add
rcr
lcall
cmp
jae
mov
pop
adc
mov
xor
mov
mov
sub
ret
fwait
xor
dec
gs
aaa
xchg
mov
push
cmpsb
sub
mov
jge
mov
or
sub
sub
lods
gs
and
mov
lods
js
sub
mov
jmp
mov
and
push
mov
stos
mov
jbe
daa
mov
pop
or
and
mov
test
imul
xor
push
xchg
xchg
and
lcall
das
xchg
add
cbtw
push
mov
inc
and
adc
xchg
lds
mov
push
push
xchg
sbb
pop
in
aaa
aad
xchg
ret
cwtl
aam
xchg
sbb
inc
orb
sbb
or
inc
div
mov
cmpsl
or
mov
mov
or
sbb
daa
rcrl
int3
jmp
dec
incb
aaa
sub
jne
sbb
xchg
in
mov
nop
jecxz
push
cli
pop
out
jne
fldcw
or
in
push
sub
mov
cmpsb
push
int3
mov
in
add
dec
sahf
adc
or
lea
jmp
lahf
sbb
pop
hlt
xchg
aad
mov
add
pusha
loope
pop
xchg
mov
dec
pusha
xchg
outsb
cmp
jge
aas
das
pushl
movsb
jne
pop
test
mov
adc
mov
int3
aad
mov
loop
loope
jo
jbe
and
sbbl
add
insl
in
push
inc
xor
cwtl
cmpsl
cs
sub
fidivl
mov
or
xor
jmp
mov
aad
mov
add
aas
pop
iret
hlt
or
or
insb
xchg
pushf
movsb
push
ja
out
jl
sbb
cltd
mov
mov
xor
cmp
xor
clc
sbbb
scas
xor
addl
mov
cmc
or
leave
adc
ret
xchg
cmpsl
not
pop
scas
test
aaa
sbb
scas
cmp
movsb
cmp
ljmp
add
les
push
adc
mov
xor
cmp
fidivl
cs
adcl
cmpsl
push
mov
fnop
sub
cwtl
mov
mov
enter
enter
cltd
loop
mov
sbb
iret
leave
push
int3
out
jge
mov
mov
xchg
sbb
shlb
cld
xor
or
pop
sbb
inc
imulb
jp
inc
mov
dec
xchg
icebp
int3
add
les
fsubrs
pop
pop
xchg
sub
js
adc
movsb
lret
scas
or
push
jo
outsb
mov
js
push
pop
cmp
mov
bound
jns
cs
dec
push
aam
lods
or
or
jae
xor
inc
mov
pop
fistl
negb
cltd
mov
incb
iret
fs
mov
sbb
rcrl
mov
push
fcom
data16
testl
loope
nop
sbb
movsl
iret
lock
std
pop
stos
mov
cli
lcall
cs
outsl
push
ret
mov
sub
mov
jb
loop,pn
lock
lods
bound
cwtl
jno
inc
in
jg
pop
push
sbb
scas
mov
add
add
mov
mov
xchg
push
cmp
xor
add
xchg
rcl
mov
das
or
orb
push
lods
test
cmp
mov
inc
fs
ljmp
aaa
stos
sbb
xchg
jp
rclb
sbb
push
pop
xor
and
add
jmp
repz
clc
sub
cltd
dec
ds
icebp
and
mov
and
xor
push
repz
adc
push
arpl
insb
loopne
rclb
das
dec
push
push
or
movsb
jmp
cmp
stos
notb
xlat
leave
sub
dec
lret
bound
mov
cmp
mov
int3
popa
insb
adc
xor
bound
adc
or
js
test
hlt
and
icebp
test
sahf
sbb
cmpsb
imul
imul
xchg
js
outsl
leave
sub
das
cmp
cmp
cmp
push
dec
push
and
movsb
shlb
jmp
inc
push
add
mov
fidivl
pop
jmp
or
sbb
and
mov
nop
cmp
or
into
mov
and
mov
js
lods
dec
adc
mov
fdivs
icebp
sbb
ljmp
jae
add
add
movaps
adc
outsb
inc
xor
call
insb
cmp
mov
sub
adc
sti
sub
xchg
pop
ljmp
data16
and
arpl
add
mov
inc
jb
or
mov
rcr
pop
movsb
mov
arpl
imul
ja
ror
mov
sub
shrb
sub
push
pop
inc
incb
mov
dec
in
mov
stos
mov
cmp
or
lret
push
cmp
mov
sbb
iret
cmp
lcall
push
mov
stos
lret
pushf
inc
outsb
xor
mov
jnp
lock
pop
dec
aam
add
dec
mov
inc
fwait
push
push
nop
jbe
xchg
aad
pop
add
fdivrs
mull
xlat
cmp
push
xor
shll
mov
inc
fsts
adc
mov
jge
mov
movsb
mov
xchg
pusha
arpl
push
xchg
faddp
insb
test
cmp
pop
rcll
pop
dec
test
push
fnsave
push
push
or
sahf
add
loope
and
adc
fmuls
arpl
sub
dec
push
sbb
xchg
ret
cltd
xor
loope
cmp
jl
lods
push
push
mov
outsb
subb
ds
dec
movsb
les
lods
pushf
or
or
lods
add
and
ljmp
and
push
fistl
mov
les
pop
sub
leave
add
insb
lcall
movsb
xorb
fistpl
xor
ret
mov
daa
push
bnd
nop
mov
cli
add
call
or
sahf
pop
xor
test
mov
mov
or
out
stos
stos
iret
insl
sbb
inc
jb
mov
inc
xor
cmp
nop
push
mov
xchg
jne
push
cmp
addr16
sbb
and
mov
sub
mov
or
pusha
lcall
into
mov
push
pusha
faddl
notb
adc
sbb
or
push
bound
cmpsl
push
addr16
xorb
imul
pop
inc
cmp
out
sbb
lcall
fisubl
leave
and
cwtl
jb
clc
loop
outsl
outsl
movsb
add
and
and
xchg
pop
cmp
add
addr16
xchg
sub
push
or
ret
rcll
adc
push
jg
cmp
adc
cmp
xor
iret
push
jns
inc
sub
jb
movsl
mov
dec
ja
fs
ds
scas
xor
mov
push
into
push
push
lret
ja
imul
loopne
mov
cmpsl
mov
movsb
xlat
push
jns
or
mov
iret
pop
bound
add
ficoms
mov
mov
xor
dec
xchg
incb
fs
aaa
jmp
or
and
repz
pop
jne
lock
fidivrl
cmpsb
rolb
xchg
push
test
pop
mov
adc
and
jb
maxps
gs
fsubrp
cmp
ljmp
cli
jmp
js
push
bound
loopne
mov
push
lea
leave
jmp
adc
roll
loope
xchg
mov
into
sub
les
pusha
mov
mov
imul
mov
sub
aad
jno
addr16
sbb
mov
mov
and
mov
lcall
adc
arpl
mov
lret
mov
sahf
jmp
cmpl
clc
lret
jo
ret
mov
and
mov
and
pop
push
and
iret
lcall
scas
mov
jne
sub
adc
push
rclb
jnp
mov
sub
xchg
adc
push
mov
mov
loop
ljmp
jge
jno
insb
out
jp
dec
lods
inc
stos
jecxz
outsl
mov
lock
cmp
sub
inc
test
and
xor
movsb
jo
xor
and
or
and
mov
pop
jo
sub
imul
pop
inc
popa
inc
inc
add
jge
sti
rclb
push
ja
ret
and
test
pop
pop
into
sub
sub
xor
sbb
and
addl
movsl
pop
mov
inc
cvttps2pi
mov
inc
push
lods
inc
nop
mov
mov
loope
xor
dec
fisubrl
pop
inc
loope
and
cs
out
loopne
cmpsb
outsl
and
sbb
cltd
pop
xchg
pushf
jle
mov
cmpsl
xchg
sbb
dec
sbb
mov
jl
push
mov
mov
mov
and
cs
rorb
add
in
shll
movsb
push
int
and
punpcklbw
mov
mov
outsb
jb
ljmp
cwtl
ret
movsb
cmp
mov
rep
repz
test
inc
mov
enter
mov
pop
xor
lds
jmp
lods
loopne
int
mov
in
insb
adc
test
repnz
push
xor
xchg
call
fildl
int
gs
stos
push
insb
pop
jnp
mov
push
push
inc
fs
push
sbb
lods
mov
subl
lods
mov
jo
jne
push
jmp
dec
adc
lea
fisttpl
lods
mov
movsb
movsl
xor
leave
pop
inc
bound
mov
jb
lds
xlat
clc
jae
xchg
fwait
jno
pop
sub
call
aam
and
mov
mov
sbb
mov
or
pop
xchg
ret
xchg
mov
adc
xorl
push
out
cs
movsb
sbb
xor
stos
mov
xchg
jge
sub
fidivrl
ljmp
adc
scas
sub
out
lods
les
inc
mov
push
mov
mov
arpl
in
sbb
test
popf
xchg
pop
test
xor
in
arpl
xchg
xor
push
sbb
sbb
idivb
mov
popf
loope
sbb
xor
jb
aad
push
sub
inc
jecxz
mov
jecxz
pop
in
lods
popf
jecxz
nop
es
push
std
daa
add
mov
gs
mov
and
lcall
cmpsl
les
insb
cmp
cltd
cmpsb
imulb
push
pop
dec
add
dec
cmp
test
push
fbld
scas
add
inc
movsb
jno
imulb
cmp
orb
fsts
testl
aaa
inc
cli
xorb
ficomps
mov
mov
add
inc
dec
push
mov
sbb
repz
or
inc
mov
or
inc
add
fistpl
sub
xchg
decb
mov
scas
aam
test
add
int
aam
sbbl
fstl
setnp
aam
or
andl
xchg
push
inc
daa
xchg
je
out
scas
lea
icebp
mov
andb
ret
rcll
dec
push
testb
popa
mov
dec
ffreep
bound
clc
or
and
inc
push
call
mov
sub
hlt
mov
int3
jg
sbb
or
mov
mov
cwtl
or
mov
jne
mov
dec
jmp
xlat
fmul
pop
mov
insl
xor
outsl
ss
insb
xchg
jmp
pusha
test
insb
testb
call
sbb
addr16
cmp
lahf
jb
or
or
xor
lea
xchg
arpl
outsl
mov
xor
nop
add
mov
or
or
mov
lcall
add
rdmsr
xor
fs
fwait
pop
pusha
jge
cmp
xor
aam
mov
lods
test
xchg
add
jns
in
rolb
dec
inc
jle
or
lds
out
dec
fnsave
scas
ja
scas
jo
or
repz
mov
add
xchg
sets
clc
adc
cmovb
mov
lock
inc
push
bound
push
out
xchg
faddp
cwtl
pop
mov
lea
mov
inc
iret
and
sbb
enter
fmuls
push
jmp
dec
and
xorl
sub
insl
cmpsl
lods
jae
stos
ficoml
mov
sub
mov
arpl
jne
dec
pusha
out
sub
dec
add
push
mov
cmp
mov
push
rcrl
cld
ss
adc
mov
mov
ud1
add
ss
add
mov
or
jecxz
fisubs
jo
shrb
cmc
fists
push
mov
clc
sahf
out
inc
ret
sub
outsb
push
sub
cs
mov
mov
pop
adc
lcall
push
daa
dec
fiaddl
pop
ret
jno
imul
adc
dec
sub
stos
cltd
adc
inc
movsb
popa
clc
add
push
movsb
mov
push
movsb
gs
test
sub
and
dec
lea
insl
aad
sub
fisubs
lret
lods
xor
roll
and
jns
push
sbb
ljmp
adc
mov
in
mov
leave
jns
jmp
xor
jbe
movsb
orb
mov
gs
add
lds
xchg
inc
jnp
std
lods
dec
ret
scas
sbb
xchg
out
icebp
mov
icebp
ja
xor
dec
outsl
pop
dec
lock
sbb
pusha
mov
or
hlt
negl
mov
test
lea
and
mov
in
movsb
inc
push
ret
sahf
mov
inc
lcall
or
lods
ds
ja
cmp
out
mov
test
mov
add
loope
lret
and
paddq
jmp
xchg
movsb
cmpsl
mov
imul
and
in
fistpl
cmpsb
dec
sub
ljmp
jbe
jecxz
or
ss
js
cmp
cs
cmp
movsb
rclb
push
popf
or
jl
xor
fldcw
push
sti
lock
inc
ljmp
jp
dec
inc
push
push
dec
jl
jb
xor
lahf
push
or
mov
and
or
stos
fsubrl
xorl
hlt
sub
nop
dec
enter
push
mov
sub
dec
movsb
loope
inc
mov
mov
jg
enter
mov
adc
adc
push
dec
pop
test
adc
mov
cmp
iret
fnstsw
or
shrl
shll
jg
mov
mov
xchg
pop
fldt
std
ret
xchg
pop
sub
popa
xor
cli
cmp
imul
xor
fistpl
sub
xor
jecxz
movsb
xor
hlt
jne
inc
or
mov
inc
out
xchg
punpcklbw
insl
imul
dec
push
inc
mov
add
jg
inc
repnz
outsb
rcr
adc
add
jnp
cltd
push
and
push
call
arpl
mov
cmpsb
fbstp
pushf
mov
jo
cmp
ss
mov
xor
xchg
rcll
mov
test
in
repz
cmc
or
dec
xor
js
outsb
fsubr
pop
xor
push
xchg
cmpsl
and
pop
xor
adc
mov
cmp
cmp
xor
adc
popa
push
cld
enter
andl
std
mov
daa
in
add
xchg
fidivl
add
pusha
arpl
iret
jp
inc
sbb
test
fnstcw
cmp
decl
fcomps
shr
sbb
ljmp
pop
repz
xchg
repnz
inc
in
fsubs
mov
sahf
gs
pminub
lea
fldenv
in
xchg
test
or
xchg
sbb
mov
ror
jo
jb
pop
and
hlt
or
lcall
dec
push
push
sub
rorl
jle
es
popa
js
cmpsb
push
repz
sahf
dec
push
and
sub
jecxz
lods
mov
sbb
mov
mov
je
je
mov
xor
imul
push
ds
lret
loopne
mov
sub
xlat
lods
pop
addr16
push
icebp
in
xchg
mov
mov
out
ret
bound
inc
jmp
sub
inc
push
lods
sub
cmp
mov
shlb
push
clc
aaa
dec
mov
jb
pop
add
scas
sbb
adc
pop
imul
cli
lods
bnd
mov
cmpsl
cs
ljmp
nop
popf
xchg
sub
insb
leave
jb
std
jecxz
dec
dec
mov
je
call
jg
dec
loop
pop
mov
dec
sub
out
pop
outsb
lods
sbb
aaa
into
push
lret
cmp
xchg
pop
scas
cmpsb
and
into
test
xchg
inc
in
in
out
cmp
cltd
testl
cs
dec
mov
push
icebp
xchg
fst
xchg
mov
cmpsb
scas
lds
sahf
and
adc
test
das
adc
add
or
adc
ja
test
adc
icebp
int3
bound
ljmp
cmpsl
push
aad
or
lea
loop
lods
pushl
jle
mov
js
cmc
loop
xchg
shlb
adc
jo
xchg
subb
and
sarl
fdivs
add
add
idivb
mov
aas
addb
xchg
movsb
sarb
lods
jmp
dec
mov
inc
insb
sbb
lret
jno
shll
mov
stos
das
mov
mov
outsb
jl
dec
enter
jnp
adc
push
in
jo
push
mov
mov
mov
ret
mov
stos
jae
and
mov
shl
dec
ficompl
mov
push
cmp
les
ss
data16
add
adc
pop
mov
sub
movsb
cltd
gs
shrl
dec
sarb
into
adc
test
lret
adc
add
mov
cltd
and
push
inc
add
es
adc
mov
xchg
push
sbb
pop
pop
fdivrl
leave
jo
cmp
cmpsl
jae
pop
push
sbb
cs
mov
jo
cmp
aas
mov
shlb
dec
push
stos
sti
popa
sub
ss
push
inc
rcrl
mov
js
scas
loopne
push
test
jb
stos
inc
lods
repnz
in
fisubl
ret
int3
es
inc
gs
test
mov
cs
mov
sbb
jne
or
enter
pop
and
xchg
xor
ret
pop
push
hlt
mov
lods
push
in
gs
movsb
into
stc
sub
mov
push
lfs
insl
xor
loop
dec
xchg
ja
sahf
push
push
shll
in
mov
push
push
or
subb
jbe
je
aad
mov
aam
filds
lcall
xor
leave
and
mov
je
push
mov
sub
insb
pop
cmpsl
cs
jmp
arpl
mov
in
lret
mov
xor
scas
fadd
sub
dec
dec
add
dec
xor
pop
fisubrl
mov
mov
ds
iret
nopl
mov
sub
or
cmp
data16
lods
shll
ss
xor
pop
jne
sarl
popf
stos
add
jb
shlb
xor
dec
movsb
das
ss
jp
pop
je
aam
jns
sbb
data16
push
loope
dec
scas
mov
js
outsb
mov
fwait
stos
in
call
sbb
loop
fsubrl
push
cmp
loope
pop
inc
bound
pop
mov
fs
sub
into
jecxz
mul
and
cmc
insb
cmp
sub
jmp
sbb
or
aad
lock
imul
into
sub
imul
daa
stos
adc
outsb
mov
mov
mov
xchg
mov
arpl
ljmp
cli
out
pop
sub
ret
mov
push
push
pop
mov
sub
jmp
mov
push
or
pusha
or
stos
int
jne
clc
jne
add
andb
lock
or
pusha
data16
fcoml
jl
and
sub
loop
mov
dec
leave
or
dec
mov
repz
js
je
fstpl
sub
mov
xchg
inc
sub
mov
leave
push
push
ss
sbb
cld
inc
cld
stos
jg
loope
or
push
ljmp
shlb
cli
adc
mov
scas
mov
icebp
lret
or
lea
cs
pop
outsb
adc
insl
mov
cs
imul
mov
sbb
and
dec
dec
repz
jl
mov
idivb
pop
adc
mov
sub
xlat
test
bound
cld
data16
add
mov
xorl
sarl
enter
aam
jbe
mov
or
lahf
adc
cmp
push
and
mov
lods
mov
dec
mov
int
shll
dec
mov
popa
inc
daa
xchg
push
mov
inc
icebp
add
mov
mov
jg
pop
movsb
nop
xchg
arpl
inc
mov
sub
mov
movsb
cmp
lcall
js
sub
jp
inc
adc
lcall
push
dec
aad
push
pushf
mov
adc
std
fsubrs
fstps
and
mov
jp
lods
xchg
mov
sbb
out
fsubl
sbb
push
sub
movsl
call
sub
fstps
jae
push
outsb
outsl
les
mov
stos
push
in
mov
cwtl
add
out
mov
je
push
jne
dec
repz
push
movl
lret
xor
sub
sub
lds
add
inc
mov
dec
jg
and
nop
ret
sete
loopne
jge
lcall
sbb
lock
mov
dec
aas
fsubrs
in
hlt
pop
jmp
iret
xor
sub
add
sub
in
std
and
stos
xchg
pop
lods
mov
jae
lods
test
mov
dec
pushf
arpl
test
insl
jo
push
fnstenv
mov
popf
jmp
pop
je
pusha
repz
sbb
ja
adc
mov
fstpt
test
shlb
rol
sub
in
and
cli
aam
cmp
push
dec
adc
lods
pop
jbe
insl
xchg
sub
mov
dec
jge
in
cmpsl
mov
insl
aam
jae
sub
fcmovu
inc
cmp
jge
lock
jmp
inc
jecxz
mov
inc
adc
ja
cld
xor
cs
jb
adc
sbb
jmp
push
mov
mov
or
and
dec
sahf
insl
test
cwtl
pusha
aad
push
push
les
mov
mov
leave
loope
int3
cmp
inc
pop
sbb
movsl
sub
push
mov
les
push
scas
jge,pt
data16
mov
mov
lcall
xchg
imul
add
push
push
jmp
inc
data16
fcoms
cld
andb
inc
mov
dec
std
cmp
inc
mov
dec
push
jg
mov
push
fisubrl
sub
add
scas
mov
lret
or
mov
loopne
inc
ret
pusha
arpl
and
mov
jg
and
call
aad
fsubrp
int3
mov
scas
repnz
lea
dec
leave
into
imul
sub
push
sub
lahf
call
int3
push
mov
test
dec
movsb
push
push
in
jne
mov
mov
push
push
test
std
add
testl
out
rcrl
in
mov
pop
sub
mov
add
xchg
cwtl
mov
out
mov
jb
xchg
xor
aad
jo
push
add
or
mov
lret
jns
hlt
xor
fisttpll
add
xchg
cltd
call
mov
movsb
push
xchg
out
adc
jbe
or
jno
xorl
xor
popf
bound
add
mov
sahf
stos
movsb
pop
push
andl
mov
icebp
sub
mov
lcall
je
add
xchg
sbb
jg
sbb
jmp
sub
shrb
push
xor
int
or
sar
insl
mov
cltd
aad
push
inc
jl
add
sub
cli
xchg
push
repz
adc
inc
push
mov
xor
mov
loopne
mov
cmp
mov
mov
scas
xor
cli
push
shll
movsl
and
dec
movsb
stos
inc
scas
push
and
mov
aam
je
leave
fsubs
rcrb
bound
popa
jg
popa
pop
mov
push
pop
push
cmp
mov
pushf
cmpsl
inc
pop
out
pop
xor
shlb
lret
xor
mov
xchg
movsb
mov
test
aaa
rolb
add
adcb
jle
popf
mov
push
rcr
xor
into
stos
push
add
dec
ret
mov
mov
sbb
jne
jmp
or
inc
in
jns
fwait
mov
add
push
out
jnp
xchg
jnp
out
mov
mov
sahf
movsb
fwait
mov
aad
mov
xor
mov
inc
sub
mov
xchg
xchg
outsl
mov
ret
lods
popa
or
outsl
insb
lahf
or
xor
xor
push
incb
imul
das
sbb
stos
rclb
int
push
sbb
mov
insl
lea
aad
jl
push
jge
jne
sub
sbb
xor
fidivl
gs
add
fdivl
or
adc
test
dec
iret
xlat
pop
xor
push
xchg
loope
hlt
test
lods
into
adc
prefetch
or
lahf
ljmp
dec
add
fcomps
sbb
es
cli
or
sub
fisubrs
movsb
xor
xlat
dec
jge
xchg
insl
fadds
mov
popf
enter
imull
mov
mov
mov
xor
cmc
xor
sub
cli
mov
test
scas
stos
lcall
imul
or
fsts
movsb
add
cmc
push
lcall
leave
sub
jno
jge
les
lods
mov
jg
sub
cmp
and
out
int
adcl
or
jbe
enter
jo
and
xchg
jge
ss
lcall
jle
loope
lock
iret
ljmp
leave
sbb
jno
scas
lret
sbb
test
push
mov
fnstenv
enter
xor
xor
lcall
push
jle
mov
sti
lahf
pop
je
ret
ss
inc
outsl
imul
bound
mov
je
mov
sbb
push
into
jmp
mov
ret
mov
sub
shll
mov
test
mov
lcall
decb
jge
push
jo
fyl2xp1
das
fs
aad
lock
or
jb
inc
cmp
js
aad
lods
mov
aad
adc
rclb
enter
in
xlat
mov
sub
jmp
mov
jae
jb
insb
test
push
push
inc
fs
sahf
rcrl
cs
in
pop
ret
jae
nopl
repnz
out
mov
fs
pop
mov
and
mov
mov
mov
xor
push
stos
mov
movsb
sbb
les
je
ret
sbb
xchg
roll
data16
mov
es
push
sarb
pop
mov
add
add
xchg
sarb
ss
enter
dec
or
ss
and
sub
pop
add
mov
xchg
sub
lds
push
sub
cmp
sub
out
icebp
add
mov
scas
jbe
out
test
scas
movsl
iret
add
sbb
inc
mov
dec
mov
fwait
pop
pusha
xchg
pop
push
out
mov
xor
jmp
inc
rcll
sbb
into
rep
test
cmp
mov
outsb
mov
jmp
sub
pmuludq
das
lods
sub
mov
stos
xor
insb
xchg
out
dec
adc
mov
in
mov
inc
push
push
flds
loop
and
add
jl
fsts
push
and
jns
sub
dec
lahf
dec
mov
fdivrs
mov
icebp
leave
dec
add
pop
scas
sbb
sbb
adc
bound
repnz
sub
jae
and
pop
sahf
insb
sbb
jge
cmc
adc
lds
jecxz
jp
mov
push
mov
lock
imulb
sub
inc
jmp
push
pop
jo
xor
hlt
pop
fcmovb
xchg
subb
repnz
cs
pop
lods
push
cmc
dec
xchg
dec
repz
dec
mov
imul
pop
rcr
adc
jb
ja
aad
imul
mov
pop
js
imul
pop
fdivrs
aam
movsb
das
inc
cwtl
hlt
mov
call
jge
jae
hlt
and
lods
mov
cwtl
out
out
mov
cmovs
cld
sbb
jns
push
mov
pushf
push
in
push
fcompl
xchg
and
hlt
adc
insb
hlt
rep
data16
aad
cmpsl
andb
insl
push
adc
movsb
push
mov
fcoms
push
inc
mov
packsswb
cli
mov
fmull
ficompl
fnstcw
fcoml
outsb
jnp
jb
sbb
pusha
ljmp
xchg
sub
sbb
mov
or
mov
sub
mov
dec
mov
outsb
inc
clc
outsb
cmp
mov
clc
arpl
jmp
cli
insb
mov
jge
jp
xchg
dec
xchg
xchg
jl
orb
push
mov
jg
pushf
mov
shr
jmp
movsl
fistl
push
jae
dec
add
lea
mov
pushf
shlb
pop
pusha
cmp
mov
scas
or
stos
xchg
aam
cli
pop
lret
push
push
ja
xor
push
lret
ret
push
sub
jb
lods
dec
inc
loopne
xor
lock
fisttps
mov
mov
cmpsl
sub
lahf
lret
push
sub
iret
mov
push
pop
mov
imul
pop
adc
dec
fnsave
sbb
lcall
lcall
mov
xor
xchg
in
sbb
mov
jns
push
xchg
mov
testb
push
sbb
push
xchg
pop
cwtl
xlat
mov
inc
lods
outsb
mov
das
movsb
cli
mov
in
outsb
loop
pop
and
stos
jnp
push
inc
mov
jnp
pop
cltd
mov
jl
mov
inc
shlb
insb
testb
lock
xor
mov
push
jns
testl
fisubl
mov
sub
imul
xlat
cmc
cltd
repz
fcoms
arpl
pop
movsl
pop
lods
mov
xchg
sbb
outsb
outsl
cld
push
mov
clc
insl
js
and
dec
push
mov
insb
or
inc
ret
cmp
jmp
movsb
or
fistpll
adc
inc
or
mov
pop
mov
sbb
test
sar
outsl
mov
push
sti
xor
pop
js
test
ljmp
popf
fisubrs
mov
cmp
sub
add
lcall
sub
mov
mov
pop
sub
fdivp
push
xchg
add
mov
dec
and
ficoms
out
fwait
or
sbb
inc
icebp
xorps
in
addr16
and
add
cmc
mov
sub
lcall
xchg
inc
leave
mov
add
ret
out
mov
inc
lock
jg
jo
pusha
out
or
sahf
inc
andl
scas
je
outsl
das
mov
mov
xor
mov
movsb
xchg
leave
lcall
xor
xchg
cmp
in
sub
add
lea
popa
sub
dec
notb
jno
jb
sbb
pop
sub
lock
scas
daa
push
sub
sub
xchg
push
out
imul
dec
xchg
push
pop
subl
adc
mov
or
mov
stos
mov
out
mov
fimuls
mov
mov
xchg
xchg
mov
inc
out
xor
push
and
imul
mov
xchg
movsb
xchg
push
andl
mov
lods
push
jecxz
loope
outsb
mov
pop
xor
lret
pop
add
mov
fmull
popaw
sub
cmp
mov
addr16
push
sub
mov
out
mov
scas
xor
ret
cli
sub
pop
push
push
mov
and
rcl
pop
push
push
fwait
cmpsb
and
jb
gs
dec
mov
outsl
aam
imul
js
adc
sahf
xor
pop
movsl
gs
cld
mov
and
test
sbb
xor
pop
xchg
repnz
or
pop
mov
movsb
pop
icebp
std
icebp
mov
fbstp
cltd
outsl
test
fsub
cld
sbb
inc
sbb
int
arpl
and
push
pop
xchg
adc
fisubl
dec
clc
out
jo
mov
cli
nop
xchg
das
pop
mov
sub
push
repz
jnp
lods
cli
xchg
in
mov
dec
inc
mov
call
push
in
das
lods
jp
add
push
movsb
sbbb
and
cwtl
fdivp
jbe
sub
das
sub
call
xchg
les
inc
push
dec
out
xor
cld
xor
mov
inc
inc
sub
fadd
mov
test
xchg
xchg
or
call
aaa
ret
jnp
xlat
lods
ss
into
mov
mov
bound
dec
xor
es
or
jmp
push
hlt
jb
push
gs
mov
push
sbb
cs
pop
push
in
call
adc
mov
lds
roll
sbbb
lods
mov
out
les
test
mov
xor
test
cmpsb
fcoml
adc
jl
xchg
nop
test
pushf
adc
mov
dec
sbb
jnp
jmp
outsb
xchg
sbb
leave
xor
test
mov
popf
lods
arpl
insl
mov
jae
out
dec
push
push
push
test
jb
mov
push
and
push
dec
sub
testl
mov
dec
test
outsb
pop
leave
movsb
cmp
cwtl
ret
mov
push
xor
push
add
jb
jge
inc
lods
mov
pop
xor
daa
mov
xor
jle
fsubs
repnz
lahf
sbb
ud0
cmc
adc
outsb
cld
cmpsb
pop
mov
iret
js
cli
push
out
jp
or
cmp
xchg
sub
insl
jmp
movsb
in
int
push
jecxz
sub
xchg
rcr
fwait
and
cld
push
iret
push
repz
ljmp
mov
roll
call
incb
das
push
subl
dec
mov
fildll
push
sub
lcall
bound
movsb
je
sbb
sub
stos
mov
popf
lods
push
insl
or
dec
xchg
sub
in
imul
xlat
sub
push
sbb
adc
push
jb
mov
std
jmp
push
fdivrs
les
push
adc
incl
mov
in
xor
inc
inc
bound
pushf
mov
xchg
inc
movsb
es
neg
mov
push
icebp
out
jecxz
arpl
hlt
test
mov
xor
mov
cmp
lea
mov
clc
push
xor
movsb
pop
sbb
jnp
outsb
mov
popa
sub
loop
js
cmpsb
enter
ja
aad
nop
jnp
call
enter
repnz
mov
ds
pop
xchg
adcb
imul
imul
pop
imul
in
add
add
fcomi
arpl
les
cmp
int3
outsl
lods
mov
add
or
jecxz
mov
jnp
in
pop
fistl
movsb
jmp
cli
cmp
or
adc
ss
insl
shll
xchg
push
mov
int3
loop
xchg
adc
xor
dec
insl
insb
jb
stos
aad
out
jle
push
jl
lea
pusha
or
xor
adc
testb
inc
out
cmp
mov
xor
addl
mov
push
sar
sub
cli
lahf
pop
jg
push
mov
and
outsb
sub
iret
mov
pop
test
jae
add
nop
cs
insb
sub
mov
roll
xor
jb
add
mov
jl
mov
insb
cmp
adc
into
pop
aad
jge
sub
aas
dec
andl
pop
dec
jae
inc
xchg
test
jp
addr16
fidivs
movsb
push
sbb
and
in
bound
loope
ret
mov
ret
bound
lret
cmpb
mov
das
xor
pop
mov
pop
add
mov
or
jge
int3
fsubl
xchg
mulb
rorl
int3
scas
jb
roll
test
cwtl
xchg
in
aam
gs
bound
movsb
data16
repz
xor
hlt
sub
mov
mul
mov
aam
loopne
scas
pop
jb
gs
test
sbb
adc
and
mov
adc
cld
xchg
test
pop
in
jb
mov
lods
dec
jl
pop
aaa
push
xchg
pop
mov
scas
sub
repz
inc
dec
movsb
pusha
sub
pop
xchg
roll
pop
pusha
pop
fldt
xor
lret
jb
sbb
sbb
xor
add
pusha
or
dec
mov
test
sub
inc
sbb
rcll
jle
aaa
movsb
decb
lock
mov
pop
xchg
xchg
lea
sub
adc
or
leave
lret
adc
fnstenv
imull
and
in
decl
ja
cli
lcall
inc
dec
mov
cld
test
sbb
sub
lods
sub
fucomip
mov
test
mov
push
cltd
scas
sub
loopne
mov
xchg
pusha
movsb
add
aad
mov
cld
mov
xchg
scas
jecxz
and
sbb
jne
sub
aad
enter
test
std
adc
or
fcmovb
cmp
popf
shll
inc
int
sub
sahf
hlt
repz
addr16
push
or
call
mov
pop
mov
sbb
xor
jns
xchg
sbb
stos
lds
iret
leave
dec
insb
sub
cmc
inc
cmp
cmp
sbb
ret
call
mov
outsb
xchg
insb
js
cs
mov
and
addr16
cltd
ret
inc
outsb
addl
inc
mov
inc
movsb
and
dec
xchg
cmpsb
stos
mov
cli
jbe
sub
mov
and
gs
movsb
mov
push
adc
dec
xor
mov
mov
xor
inc
mov
mov
inc
leave
mov
gs
adc
mov
adc
pushf
push
hlt
repz
loope
fdivr
push
lods
icebp
xchg
push
mov
xchg
inc
dec
push
xor
sub
sub
pusha
jno
push
push
cmp
orl
stos
mov
cmp
or
jmp
mov
les
sbb
mov
sbb
lods
int3
or
mov
lods
outsb
pop
adc
insl
in
sahf
subl
cmp
cmpsl
adc
out
and
and
aaa
xchg
sub
push
lret
jae
movsl
push
xchg
pop
or
push
in
dec
in
movsl
push
lcall
push
pushf
cmpsb
into
int
sub
in
dec
cs
adc
mov
loope
stc
dec
cli
xchg
or
pop
adc
jge
adc
rcrb
and
shlb
dec
ja
aam
fiaddl
mov
cmc
movsb
in
fistpl
in
mov
hlt
ds
insb
jo
push
movsb
pusha
std
pop
mov
testl
stc
shll
xchg
test
mov
push
fiadds
adc
dec
andl
je
mov
jne
in
xorl
hlt
sub
push
enter
mov
pop
xor
ds
jnp
add
and
mov
popa
add
stos
pop
repnz
mov
cmpsb
sbb
jbe
mov
les
sbb
rorl
sbb
rep
aaa
dec
adc
push
insb
pop
xchg
ljmp
fucomp
cmp
test
movsl
lods
dec
jno
inc
mov
sbb
test
cmpsl
adc
pop
push
pop
push
push
mov
ljmp
js
fistl
in
insl
enter
mov
jl
mov
dec
cs
xor
hlt
xchg
vunpcklpd
or
pop
xchg
xor
pop
cmp
lahf
mov
jno
les
adc
xchg
inc
enter
std
das
inc
lcall
sbb
repnz
lods
aaa
dec
and
push
outsb
jnp
xor
push
repz
add
insb
movsl
bnd
ret
jo
fistps
mov
sub
push
mov
pop
icebp
cmp
popf
mov
insb
add
iret
cs
stos
mov
jno
ljmp
in
aaa
mov
aaa
cli
push
je
xchg
inc
clc
mov
imul
shrb
mov
fsubl
jmp
jno
stc
shl
ret
inc
jb
imul
xchg
jbe
add
and
hlt
dec
adc
nop
outsl
mov
xacquire
and
jne
negl
cmpsb
jb
add
jnp
fidivrl
sbb
inc
pop
mov
cld
cmp
test
push
xchg
xchg
je
fcoms
lret
dec
push
xor
or
mov
mov
cmp
sub
jae
icebp
and
pusha
lahf
loop
int3
jb
pop
pop
leave
je
outsl
fidivl
sbb
testl
ret
movsb
cs
push
mov
and
lods
loope
add
rcrl
add
aad
inc
aam
lods
movsb
addb
addr16
testl
inc
sub
push
mov
fnstcw
test
lcall
xlat
in
ljmp
icebp
jle
jmp
dec
lds
push
sub
lea
add
repnz
jno
aaa
loope
and
pop
shl
inc
movsb
fs
test
repnz
fidivrs
sbb
jne
jo
enter
cmpsl
add
addr16
xchg
mov
jl
adc
or
popa
dec
add
add
js
pop
pop
push
ljmp
or
pop
cltd
lret
sub
fimuls
pop
loopne
lods
aam
fdivrs
push
mov
out
fnstcw
stc
lea
cmp
pushf
cmp
mov
dec
adc
mov
jnp
ja
dec
stos
mov
test
mov
out
outsb
mov
repz
jns
fdivrs
js
sahf
pop
fmuls
lcall
stos
repz
adc
cs
lret
repz
bound
sub
sub
inc
mov
add
ret
mov
popa
sub
xorl
mov
ljmp
aam
push
pop
dec
dec
pop
jae
popf
or
mov
xor
cmp
orb
repz
adc
inc
or
dec
mov
push
sub
dec
inc
scas
mov
inc
sub
mov
movsb
lock
mov
jo
mov
jnp
sub
cmpsl
jae
jbe
cmpb
cmpsb
mov
mov
outsb
dec
ficompl
bound
mov
lock
lods
mov
jne
push
mov
out
jecxz
and
repnz
aaa
mov
idivl
pop
inc
push
mov
mov
leave
inc
cmc
jae
movsb
xor
jne
jge
outsl
call
push
xor
mov
mov
jbe
dec
test
sbb
push
mov
jns
inc
mov
mov
sub
xor
mov
lea
jmp
sub
xchg
push
aad
scas
das
hlt
xor
insl
lods
fmull
loope
sub
scas
test
add
mov
jbe
ljmp
mov
mov
sub
lods
inc
mov
cli
add
in
xchg
jecxz
mov
jecxz
mov
js
sub
into
xchg
mov
push
movsb
inc
sub
xorb
xor
aad
and
stc
or
jb
aad
aas
cld
dec
mov
push
push
into
mov
cmp
and
mov
push
cmp
addr16
dec
ret
inc
xchg
mov
cmp
sub
sub
lods
mov
dec
fwait
pop
dec
mov
shlb
cmp
mov
lret
xchg
aaa
ret
insb
mov
stos
lea
add
int
mov
mov
repnz
div
scas
loope
lds
xchg
adc
insb
add
out
clc
es
fsubs
movsb
in
push
cld
mull
scas
jo
dec
cmp
push
pop
mov
divb
add
or
xchg
fadds
dec
mov
push
scas
ljmp
inc
pop
xor
mov
loop
mov
shrb
push
sub
cmp
inc
cmpsb
pusha
movsb
and
rorl
inc
sbb
or
in
lahf
sbb
xor
scas
int3
lods
loope
mov
mov
mov
js
pop
sub
lcall
and
mov
sbb
hlt
movsb
xor
fcoml
in
sbbl
cmp
repnz
push
test
or
cmp
add
sub
mov
adc
add
pop
jnp
fisubl
pop
icebp
dec
mov
mov
daa
mov
add
insl
jbe
mov
ficomps
dec
dec
mov
aam
sub
inc
shll
stos
into
loop
fldt
rorb
xor
in
sub
aad
push
aam
jg
cmc
jb
add
outsl
xchg
inc
loope
ficompl
shrl
mov
xchg
andl
pop
sahf
lods
ret
lcall
gs
stc
mov
call
loopne
pusha
lret
dec
mov
loopne
loope
outsl
jne
out
push
das
sbb
or
sub
pusha
xchg
outsb
sahf
fsts
adc
shr
fistpl
mov
push
jne
pop
or
scas
xchg
sbb
movsb
or
cmp
in
jmp
inc
xchg
outsl
cmpsl
mov
popf
lock
loope
lods
fwait
jg
ja
pushf
sub
mov
sbb
imul
push
lret
movsl
and
mov
or
lea
push
mov
or
mov
xchg
pop
sub
nop
dec
add
pop
mov
pop
jb
mov
jg
sbb
and
in
stos
dec
repnz
lret
popf
outsl
jb
push
leave
out
int
add
rcl
pop
xchg
cltd
mov
jne
aam
cmpsl
jge
cwtl
xor
arpl
daa
adc
jmp
in
ja
jo
aas
mov
inc
push
fdiv
sub
mov
or
inc
repz
mov
push
clc
imul
sbb
stos
outsl
adc
pop
dec
leave
push
arpl
mov
adc
pop
pop
nop
repz
mov
cmpsb
stos
imul
add
jecxz
sti
push
jl
cmpsl
enter
sub
cli
je
sbb
mov
int3
stos
hlt
sub
push
mov
movsb
aad
in
pusha
mov
push
repz
outsb
push
mov
mov
xor
daa
leave
sub
js
mov
sub
xor
adc
lret
xchg
add
sub
int
add
mov
xchg
xchg
inc
and
mov
push
xorl
xchg
push
sub
stos
xchg
lcall
or
jge
xchg
dec
mov
jb
cld
cmpsb
push
adc
and
sub
mov
mov
insb
lods
out
xor
cli
inc
fldenv
or
mov
sub
jae
and
pushf
ss
movsb
sahf
iret
into
mov
es
sbb
add
fwait
rclb
in
dec
mov
xor
jne
cmpsb
in
insb
sbb
jns
sub
sub
cmp
or
out
dec
lea
mov
mov
pusha
ret
fmull
lods
pop
jbe
sbb
rcll
jmp
popf
sbb
loopne
aad
push
mov
mov
hlt
call
xor
fdivp
inc
iret
or
mov
push
in
push
mov
incb
fmuls
sbb
mov
add
sub
push
add
scas
mov
sbb
mov
leave
jmp
inc
into
ja
xor
jl
jle
lret
movsb
les
insl
lcall
shll
cli
dec
pushl
and
pop
ljmp
mov
hlt
jl
mov
pop
fimuls
jne
xchg
xchg
stos
imul
pop
movsb
mov
sub
dec
movsl
sub
or
aaa
fiadds
repz
xchg
in
lods
ret
adc
push
mov
jg
sahf
xchg
cmp
aam
mov
addb
sub
mull
dec
ljmp
icebp
mov
stos
mov
testl
dec
sub
fsubl
cld
xchg
xor
movsl
lret
insb
repz
and
lods
cmc
mov
cld
mov
pop
sti
rol
push
fdivrl
and
lea
repz
add
pop
loope
jecxz
lahf
mov
insb
insb
or
or
mov
or
xchg
aaa
adc
cs
lods
adc
jne
fisubrl
xchg
daa
dec
adc
sub
aas
mov
jb
jb
push
fsubrs
cmpsb
adc
push
cmp
xor
jmp
inc
test
jb
xor
and
or
add
repnz
xchg
and
inc
fs
lock
mov
or
cmc
test
jmp
fisubs
xor
in
push
dec
mov
out
into
push
mov
pop
ret
jmp
fimull
and
xor
das
adc
push
iret
jns
xor
ret
pop
mov
cltd
dec
out
pop
aad
or
scas
lods
fwait
std
iret
test
jb
xchg
dec
sub
jne
pop
and
sub
cs
mov
shr
out
and
fisubs
jp
and
mov
pop
mov
push
add
pusha
mov
das
lret
push
push
cmpsb
stc
shl
xlat
jb
xor
adc
mov
inc
mov
popa
push
gs
ss
sub
mov
mov
mov
dec
ss
jno
cltd
std
dec
daa
and
add
sbb
xor
jge
pushf
jmp
ljmp
or
inc
xor
in
test
dec
mov
ficoms
inc
xchg
scas
inc
ret
fdivrs
push
divl
ds
xor
test
jge
cmp
test
clc
pop
xor
or
xchg
das
dec
dec
pop
arpl
imul
dec
es
jns
jb
fldenv
sub
mov
mov
push
jmp
push
shrl
into
and
dec
cmp
les
mov
imul
jno
into
jle
jecxz
pop
pop
dec
add
inc
lret
cs
lock
push
adc
clc
pop
or
out
aas
nop
ljmp
leave
ret
movsl
cltd
pop
inc
xchg
and
aad
cld
mov
mov
inc
add
lds
mov
mov
flds
jp
mov
jbe
push
mov
aas
loope
pusha
mov
ror
fstpl
pop
mov
ljmp
adc
arpl
push
test
shll
mov
hlt
jp
movsl
mov
push
outsb
lcall
ficompl
or
mov
xchg
loopne
jno
das
jno
add
mov
in
enter
repz
mov
mov
pop
neg
jbe
or
icebp
dec
insb
cs
movsb
dec
fidivs
hlt
xchg
mov
mov
ljmp
out
xchg
enter
push
xor
sti
pusha
loopne
test
pop
mov
adc
mov
dec
or
push
pop
in
mov
or
jmp
clc
leave
sub
xor
movsb
cmc
mov
jbe
push
push
adc
lock
fsub
mov
fnstenv
xchg
imul
arpl
inc
or
and
stc
in
xchg
push
ret
xchg
cmc
sub
movsb
stos
mov
lret
aaa
sub
cli
inc
sub
pop
fsubs
int3
push
data16
fsub
lahf
enter
sahf
nop
addr16
xor
inc
jp
sbb
or
jecxz
mov
inc
xchg
ljmp
lcall
and
outsb
dec
or
xchg
mov
lret
push
mov
pop
int3
sbb
sub
xchg
jbe
xor
add
ss
movsb
cmp
dec
pop
add
ss
decb
cld
jmp
mov
mov
inc
pop
test
cmpsl
cmp
cmpl
sahf
insl
arpl
push
jnp
movsl
mov
enter
leave
xlat
mov
pop
jl
mov
jnp
negl
jnp
add
sbb
nop
cltd
push
hlt
xorb
push
lods
jns
sub
inc
arpl
push
lret
notb
dec
scas
dec
je
shlb
fwait
hlt
jmp
mov
jb
sbb
jbe
mov
and
xor
lds
adc
sbb
jnp
int3
dec
hlt
mov
movsb
cmpb
xor
aad
push
lea
cltd
das
aas
scas
repnz
outsl
pop
mov
outsb
cld
dec
addr16
movsb
push
ret
mov
cli
stos
mov
push
iret
xor
pop
decb
mov
dec
inc
out
aam
mov
les
sub
mov
pop
push
xchg
adc
push
dec
inc
or
push
ret
aad
xorb
sbb
aam
jb
notb
scas
jne
mov
cli
jmp
lods
jb
inc
ds
mov
push
jno
bnd
adc
sub
xor
loopne
fisttps
push
xor
rcrl
jmp
xchg
sub
mov
in
mov
mov
ret
pushf
subb
mov
cli
cld
xor
stos
mov
arpl
test
mov
cmpsl
scas
test
and
sub
mov
dec
mov
xor
mov
push
das
enter
inc
cmp
cmp
inc
dec
sbb
mov
imul
out
loop
mov
idiv
test
inc
pop
aaa
mov
dec
cmp
scas
sub
sbb
xorl
scas
add
mov
inc
subl
mov
xchg
sysret
ds
bound
fmuls
ljmp
mov
fimuls
int
push
hlt
pop
lret
fucomi
xor
out
inc
inc
incl
cltd
mov
inc
call
mov
cs
and
jp
bound
pop
int3
addr16
lods
movl
sub
adc
dec
stos
mov
out
jle
and
fdivrp
xchg
adc
ss
pop
leave
mov
cmpsb
dec
push
fwait
or
mov
imul
mov
or
mov
push
sbb
cmp
cmp
xchg
out
or
fs
insb
lcall
cmp
loopne
push
xchg
movsb
fadds
cmp
jo
fwait
rcll
dec
inc
xchg
xor
jno
pop
jb
repz
sbb
pop
icebp
sbb
sub
adc
das
push
pop
xor
nop
loopne
xor
arpl
lods
imul
mov
jb
pop
mov
add
push
mov
xor
repz
jnp
fisttpl
xor
lods
lcall
jle
inc
pop
aam
xchg
mov
push
addr16
cli
notl
push
addr16
xlat
or
jb
clc
enter
sbb
lea
adc
sub
add
outsb
addr16
xor
fdivrs
cmpsb
adc
jns
ret
and
mov
sbb
mov
js
shr
xchg
shl
mov
pusha
pop
in
or
ds
pusha
mov
cmp
xchg
pop
mov
ljmp
push
int3
stos
movsb
sub
cs
mov
mov
mov
fisttps
ja
cmpsb
sub
jae
enter
jmp
inc
je
mov
lret
push
mov
sub
repz
mov
fwait
dec
and
stc
mov
movsb
addr16
sub
lods
push
repnz
sub
mov
int3
and
lcall
aam
cmp
jnp
je
in
pop
sub
xor
sbb
mov
ret
negb
cld
mov
movsb
dec
adc
fmul
cmp
out
add
xchg
fldcw
orl
push
ret
movsb
add
stos
pop
fimull
sbb
jnp
adc
mov
test
mov
das
insl
stos
sbb
mov
mov
rol
mov
sub
aas
push
inc
aam
repz
xchg
xchg
dec
dec
xchg
cmp
jne
jecxz
and
mull
and
ljmp
jns
lods
daa
xchg
mov
repz
mov
push
cmp
repnz
lods
or
movsb
clc
jae
adc
adc
add
call
mov
cmp
or
jnp
stc
or
sub
sub
stos
lods
and
stos
js
into
ljmp
ror
pop
push
push
stos
fmulp
test
loopne
cmp
aaa
stos
push
sbb
mov
arpl
lds
jmp
pusha
cmp
push
push
xlat
jmp
scas
cmp
inc
cmovb
hlt
cwtl
mov
mov
mov
mov
mov
inc
mov
xor
or
or
mov
pushf
xor
fildll
insb
mov
xor
inc
and
add
sahf
jge
adc
and
hlt
stos
les
xor
and
adc
pop
cs
ja
dec
repz
fwait
scas
mov
loop
fiaddl
lea
dec
pop
mov
sbb
push
push
pop
sub
and
je
stos
xchg
pop
or
adc
cmpsl
loope
jmp
fisubrs
aaa
jbe
mov
insb
std
push
mov
push
mov
stos
call
push
push
ja
mov
shlb
roll
add
insl
les
outsl
movsl
inc
jmp
mov
mov
mov
cmpsl
pushf
cmpsb
cmpb
sbb
push
add
lods
lock
or
dec
clc
js
dec
pop
fisttpl
iret
clc
stos
xchg
mov
cs
outsl
mov
mov
adc
incl
divl
cld
insl
fildll
lods
repz
fwait
scas
push
add
mov
stos
mov
shll
lds
mov
bnd
push
cmp
xor
cli
loopne
add
scas
movsb
leave
ss
lods
je
nop
cmp
cs
jp
mov
rorl
jbe
mov
rclb
sahf
aad
cmp
push
iret
imul
daa
inc
xor
sti
fidivl
data16
leave
es
daa
js
mov
leave
stos
cs
pop
cmp
movsb
xchg
cmp
cmpsb
jo
push
xor
sub
dec
sub
imul
sub
push
sarb
idivl
or
dec
and
shlb
jb
adc
insl
je
nop
mov
mov
cmp
mov
int
cmp
in
jno
jne
pop
add
inc
and
imul
jmp
mov
dec
aaa
jmp
sahf
push
in
push
popf
lods
mov
mov
add
daa
fisttpll
orl
jecxz
rclb
push
inc
in
jbe
cmp
add
aam
xor
sahf
xor
jae
dec
cmp
mov
xchg
lock
jle
push
int
xor
imul
mov
mov
sbb
ret
pop
and
clc
xchg
gs
sub
mov
mov
les
push
mov
mov
mov
push
add
ljmp
inc
cwtl
dec
adcl
xor
movsb
sub
push
push
adc
push
mov
xchg
out
lea
cmp
movsb
fisttpl
imul
jp
push
loop
mov
pop
shll
mov
xor
out
sub
or
sub
rcrl
inc
xchg
mov
mov
sub
ljmp
xor
or
sbb
xorb
mov
aad
test
cmpsl
xchg
sar
fsub
cld
pop
popa
lret
scas
lds
push
cld
popf
in
repz
ret
xchg
push
sub
idivl
ficoml
ljmp
cmp
ss
movsb
sub
scas
mov
and
mov
cmc
pop
inc
pop
fptan
ficoml
adc
repz
scas
xchg
jae
mov
stos
aaa
insl
sub
lret
mov
mov
sahf
inc
lock
cmpsb
ja
mov
adc
lcall
jb
gs
jae
pop
lahf
push
or
subb
fnstsw
mov
inc
cmp
mov
cmpsb
stos
push
mov
in
mov
add
insb
das
push
mov
xor
mov
pop
movsl
mov
push
jns
lahf
jns
lcall
cmpsb
popf
cmpsl
fisubrl
jbe
pusha
sbb
xor
lock
inc
xchg
xchg
mov
jnp
sbb
repz
clc
push
jns
lret
jnp
imul
movsb
mov
push
cmpsb
gs
pop
prefetcht1
insl
hlt
jl
jp
in
stos
sub
jecxz
out
sbb
mov
adc
mov
mov
jno
ja
adc
adc
aam
xchg
inc
dec
xor
in
movsl
sub
js
cli
addb
shl
lea
mov
add
adc
les
cmp
mov
aaa
jns
add
enter
popa
sub
ja
push
adc
ljmp
in
xchg
jb
sbb
sbb
sbb
hlt
push
sub
or
pop
pop
stc
test
inc
xor
js
mov
or
repnz
cli
pop
pop
or
mov
in
mov
cs
dec
add
leave
adc
ret
pop
fsts
insb
out
dec
stos
ja
subl
sub
mov
lods
mov
mov
scas
xchg
movsb
jb
ss
imul
xchg
jp
push
xchg
cmp
fnstenv
dec
jp
lods
sbb
sub
jae
pop
js
adc
rolb
pcmpeqd
xor
into
and
mov
cmp
xor
push
mov
mov
lock
or
push
mov
es
shrb
xchg
xor
fsubrl
jmp
mov
mov
mov
rclb
testb
call
push
cmp
out
jmp
jl
mov
mov
rcrl
incl
sub
movsb
iret
test
inc
lcall
dec
ror
test
outsb
js
xor
inc
pop
scas
mov
mov
aam
bound
sub
mov
sti
or
cltd
mov
and
pop
mov
sub
call
cmp
mov
fldcw
stos
test
bound
repnz
test
cmp
call
jns
ljmp
lcall
in
movsl
fwait
or
mov
dec
ret
jp
xor
lods
gs
mov
mov
loope
lock
js
jno
pop
or
shr
mov
dec
mov
pop
ja
xchg
add
or
stos
or
xor
sbb
push
test
mov
test
icebp
ljmp
shlb
je
imulb
psadbw
push
aas
hlt
decb
lahf
push
push
and
sub
mov
mov
jp
push
test
ret
test
pop
sub
insb
out
dec
rcll
imul
frstor
insb
add
popf
fcmovne
mov
jb
inc
sub
sub
in
lret
movsl
gs
xor
sbb
popf
sub
xchg
push
into
imul
ljmp
movsb
sbb
lods
inc
mov
cmc
xorb
mov
inc
push
sbb
fwait
xchg
jb
aas
pop
jne
inc
popa
scas
pop
fidivrl
pop
div
ret
ja
jb
stos
insl
test
iret
insl
fists
add
fcomi
pop
xor
call
jae
inc
sti
hlt
mov
xchg
ss
push
jb
or
std
insb
loopne
mov
xchg
cmp
pop
dec
int3
cs
repz
js
dec
cwtl
dec
psrlw
inc
mov
mov
mov
pop
ret
ja
pop
lods
and
jmp
dec
inc
subb
jbe
mov
adc
dec
add
testb
xor
jmp
cmp
int3
add
push
push
stc
movsl
and
ja
push
adc
adc
les
jecxz
jnp
int
xor
clc
xlat
or
cmpsb
lret
xlat
sbb
orb
mov
rep
das
push
testl
sub
mov
mov
add
lcall
dec
cmp
bound
subb
imul
aas
cli
mov
push
xorb
jge
shll
mov
cmp
sbb
ljmp
out
xor
or
pusha
enter
insb
jmp
ljmp
cmp
cmp
jae
jae
mov
inc
jb
xchg
pop
cs
xchg
push
xchg
cli
and
mov
lock
adc
ret
cmp
mov
stos
add
das
inc
add
aas
mul
aad
test
es
shrl
fnstcw
outsl
sarl
insl
mov
mov
shl
sub
into
std
or
push
mov
sbb
push
jno
mov
xor
lods
mov
cmpsl
icebp
adc
fcoms
stos
repz
es
push
inc
data16
lds
lds
stc
mov
jmp
xchg
xchg
call
aad
mov
mov
jmp
dec
adcl
cmpsb
call
icebp
sbb
call
jl
pop
int
dec
push
arpl
dec
enter
jbe
loope
int3
lods
inc
pop
xchg
sti
mov
xor
mov
repz
int
mov
mov
repz
mov
push
aas
es
std
mov
movsb
cmp
call
arpl
ja
dec
sub
xchg
test
xor
sbb
mov
cvttps2pi
lods
push
cmp
addl
ret
outsl
mov
stc
out
popf
mov
icebp
das
and
lcall
push
fdivrp
xor
mov
movsb
pushf
fiadds
pop
pop
jmp
push
movsb
shl
pop
dec
sub
sbb
rorl
loopne
addl
js
scas
dec
bound
shll
xorl
fabs
push
rcr
jo
xchg
push
jmp
mov
cli
imul
jno
cwtl
leave
mov
lods
aas
addl
sbb
xor
subl
xor
mov
push
call
add
or
movsb
mov
stc
in
imul
stos
aad
inc
sub
or
subb
jg
shll
add
jns
push
mov
sbb
ret
jge
add
sub
outsb
sub
dec
lcall
or
fimull
pop
cmp
inc
and
pop
mov
mov
iret
inc
push
call
enter
test
test
add
fcmovnbe
mov
pop
mov
ret
push
lret
test
or
or
sar
mov
rcrl
es
stos
push
push
or
jns
add
or
mov
lds
out
dec
and
popa
push
mov
mov
das
adc
adc
sbb
fucomp
xchg
decl
xchg
xchg
push
movsb
roll
ret
pop
pop
jae
cltd
out
loope
pusha
or
jns
cmp
scas
push
add
adc
add
dec
rorb
std
or
repz
pop
scas
test
add
push
lcall
xchg
xor
ljmp
mov
push
scas
cmp
insl
push
leave
add
jmp
sbb
ficoml
ret
mov
dec
nop
orb
fchs
loope
dec
mov
js
or
jmp
pop
bound
ds
lcall
std
shrl
jae
cwtl
and
mov
test
mov
lods
mov
push
adc
pop
mov
pop
push
jge
das
int3
mov
loopne
jle
push
mov
lds
dec
pop
movsl
jecxz
out
loope
fs
add
or
movsb
stc
bound
xlat
lock
add
les
sbb
jo
lea
inc
jb
mov
jbe
test
cmpb
inc
ljmp
jp
jle
stc
insl
sbb
cmovs
movsl
in
mov
sub
js
pop
js
lods
inc
mov
out
sbb
daa
and
adc
inc
lods
push
inc
xor
popa
mov
and
sbb
mov
cli
sub
mov
lret
sub
scas
push
addr16
ja
inc
adc
sub
rclb
mov
mov
push
dec
out
push
rcr
xchg
jmp
out
cltd
pusha
sub
std
dec
or
mov
mov
or
push
pop
and
sub
mov
inc
jp
ja
into
leave
jnp
ljmp
repz
lcall
add
add
sub
pop
jge
scas
cmp
cli
lcall
out
lret
cmp
inc
scas
mov
out
je,pn
movb
sub
pop
repz
cs
mov
imul
enter
sub
pop
aam
push
arpl
mov
insb
and
outsl
iret
outsb
mov
push
push
jnp
pop
sbb
dec
clc
jnp
imul
outsl
leave
mov
lods
adc
xor
andl
scas
shll
dec
push
mov
fwait
mov
scas
mov
ss
pop
pop
or
mov
and
sahf
pop
test
xor
fldenv
aad
and
and
in
mov
scas
sub
xchg
stos
mov
sub
bound
or
or
stos
movsb
sub
inc
mov
loop
movsl
data16
cmp
xchg
rclb
mov
jmp
scas
jb
stos
adc
les
iret
sub
dec
jg
push
pop
lahf
xor
imul
jbe
into
pop
int
arpl
jno
xor
xchg
push
sbb
clc
or
fcoms
and
jge
xchg
movsl
popf
mov
aam
mov
fdivrs
cmp
xor
cmp
mov
mov
into
iret
inc
mov
jb
sub
fmull
dec
add
mov
mov
mov
prefetcht0
icebp
jecxz
leave
ja
leave
loope
push
push
add
or
jno
mov
jb
insl
std
jb
and
lock
dec
jl
jns
cmp
mov
shll
xor
rolb
jecxz
fsubrl
xchg
scas
aaa
insl
gs
jno
push
out
jecxz
push
push
mov
bound
rcrb
sbb
pop
stos
aam
movsb
pop
int3
dec
mov
ja
push
jnp
int
dec
dec
fmul
dec
fucomi
stos
in
mov
mov
negl
push
or
jge
jae
lcall
mov
sub
cmp
cmp
fnstsw
xchg
es
push
sub
aam
test
aad
out
mov
mov
shl
hlt
dec
mov
rcll
mov
mov
mov
in
jecxz
shlb
xchg
cmc
jp
lods
inc
mov
loope
rcrb
jge
loop
int3
lds
push
xchg
lods
and
jmp
or
or
pusha
cmpl
xchg
cmpsb
leave
scas
sahf
sbb
mov
cltd
dec
cmp
fwait
iret
adc
lcall
mov
jae
aam
pop
fdiv
insl
pusha
out
decb
scas
addr16
mov
pusha
imul
repz
jns
loope
sbb
lret
test
icebp
dec
sysexit
fnstcw
lahf
lret
add
movsb
lods
xchg
popa
gs
test
ret
inc
ljmp
jo
mov
or
stos
pop
fisttps
xor
out
nop
jns
test
lret
pop
in
jl
out
cmp
pusha
shrl
or
mov
test
je
cli
rolb
out
int
roll
bound
mov
pop
jb
hlt
lea
and
inc
add
imul
xor
pop
mov
add
ljmp
mov
xor
scas
mov
popa
adc
sbb
ss
sbb
es
mov
pushf
xchg
add
xchg
jg
dec
push
cmp
inc
sbb
flds
mov
adc
sbb
lock
leave
mov
into
mov
je
ljmp
mov
mov
dec
cmp
out
jb
cmpsb
in
xchg
stos
fwait
rclb
sti
add
lcall
testl
repnz
ljmp
xor
mov
stos
dec
adc
push
xor
in
mov
cmp
jg
add
xor
loopne
mov
insl
orb
icebp
shr
push
aaa
call
or
scas
sbb
cmpsb
aaa
mov
rolb
cltd
shrl
jns
push
test
sub
das
pop
int3
jo
and
mov
frstor
push
inc
nop
mov
icebp
mov
shll
mov
cmpsb
jne
sub
xchg
xor
fldenv
mov
mov
mov
icebp
cmp
inc
push
push
or
mov
push
adc
dec
sub
mov
or
cmp
cmp
inc
stc
stos
outsb
movsb
das
arpl
lods
dec
mov
xor
std
and
jns
push
mov
jge
mov
imul
mov
mov
mov
or
cmc
mov
and
and
mov
daa
enter
push
enter
mov
test
xor
mov
popf
or
dec
stos
sub
daa
mov
and
lods
and
shlb
movsb
fnstenv
insb
bound
adc
aad
sahf
xchg
out
push
sub
adc
xor
fadds
push
cs
mov
mov
sti
and
push
cmp
mov
sahf
imul
xor
adc
fldenv
dec
jno
or
xchg
out
xchg
push
add
mov
dec
js
sub
and
lods
lods
pusha
mov
inc
test
aas
iret
jge
jb
adc
mull
mov
or
cltd
xor
lods
xlat
iret
xchg
bound
ss
xchg
adc
es
add
mov
mov
subl
xor
pop
push
push
fldenv
stc
sbb
imul
movsb
outsl
pusha
stos
inc
push
lret
xor
mov
insl
mov
or
daa
lods
sbb
or
add
or
movsl
idivl
ds
fidivrl
sub
cmp
inc
movsl
cmc
mov
mov
jb
or
insl
mov
jg
mov
mov
dec
ds
je
mov
enter
mov
mov
call
out
das
jmp
or
jno
mov
sub
scas
mov
mov
cld
imul
pop
pusha
xchg
lods
dec
pop
in
mov
pop
and
in
inc
push
sub
cmp
jo
loope
xor
inc
cmpl
mov
sti
jne
wrmsr
out
mov
sbb
sub
out
xchg
mov
cli
insl
aam
imul
shrb
inc
sahf
push
pusha
xor
sbb
push
repz
push
push
jmp
cmp
aaa
jp
cli
arpl
add
adc
mov
inc
sbb
or
ja
xor
gs
jg
test
push
sbb
pusha
sub
mov
out
mov
lods
push
call
ficoms
inc
aam
es
pop
sub
push
jge
xchg
pop
pop
movsb
xor
pop
jp
pop
cmp
push
and
std
adc
cmp
int3
push
jp
scas
mov
mov
aaa
inc
mov
sbb
mov
ss
fsub
cmpsl
xchg
add
imul
les
add
mov
mov
fidivrs
iret
test
cmc
add
ljmp
push
pop
add
loop
nop
andl
jmp
push
mov
pusha
insl
xchg
scas
and
cmp
xchg
pop
xor
or
cs
mov
adcl
mov
sbb
in
pop
orl
call
xchg
sbb
hlt
push
sub
lods
xchg
or
inc
sub
pushf
pop
xor
mov
jp
pop
push
lret
mov
dec
xor
jb
jle
lods
ljmp
test
repnz
push
mov
stc
pop
dec
mov
and
sub
repz
xchg
lret
sub
lods
and
jmp
inc
mov
jns
add
jge
in
sub
aad
pop
push
mov
les
cmp
into
mov
mov
dec
mov
insl
or
scas
lods
jmp
mov
cmpsl
leave
hlt
fcoml
jb
dec
sub
mov
mov
lods
jmp
mov
mov
bound
testb
mov
xlat
mov
pop
mov
out
outsl
cmp
mov
into
ja
jmp
lret
shrl
mov
hlt
lea
scas
sti
es
movsb
js
outsb
pop
sbb
adc
mov
jecxz
movsb
mov
in
insb
push
jmp
mov
and
aas
jo
mov
call
pop
mov
lds
aad
out
jbe
leave
mov
push
sub
jge
out
mov
pusha
clc
sbb
push
jo
ret
mov
add
push
in
cld
jecxz
dec
mov
pop
pmullw
inc
scas
jo
adc
out
into
push
leave
mov
jns
jb
imul
sub
stos
push
lods
pop
inc
loopne
pop
xchg
hlt
call
jns
lods
pushf
sbb
sub
mov
push
lods
ret
pusha
inc
cmp
fcoms
lret
dec
jnp
or
jmp
add
push
sbb
cmc
xor
jecxz
insl
or
movsl
adc
jmp
cmp
sub
fdivl
mov
out
cmp
cmp
out
or
out
jno
stos
sub
mov
push
out
xor
add
pushl
sub
fwait
test
in
insb
loope
stc
push
lret
sbb
je
outsb
ja
pop
pop
subb
fcmovnb
movsb
jmp
inc
insl
lods
fsubrl
shrl
lahf
punpckhdq
arpl
pop
dec
mov
xor
fidivrs
mov
push
jecxz
cmp
ss
cmp
xchg
bound
push
add
inc
js
sub
or
pusha
out
push
sbb
loope
pop
dec
negl
push
les
cmp
mov
je
mov
xor
push
vmovsd
push
lods
add
clc
and
std
cli
push
out
movsl
shll
adc
xchg
inc
mov
lret
mov
lods
jle
xor
repz
jae
int3
xchg
mov
scas
rcrb
stos
fs
outsl
push
push
dec
mov
mov
or
ret
pop
movsb
loope
jbe
push
push
lock
push
mov
jnp
adc
inc
push
jnp
movsb
push
cmp
adc
add
or
loope
loope
test
pushf
outsb
lock
inc
push
in
out
and
stos
and
hlt
xchg
mov
dec
int
ds
sub
movsb
jne
lods
orl
pop
jbe
push
mov
arpl
add
push
cmp
cwtl
repz
add
mov
sbb
dec
dec
lods
sbb
insl
das
movsb
popa
mov
dec
xor
sbb
aam
and
decb
pop
mov
repnz
pop
lds
mov
das
leave
cmpsl
cld
cmpsb
mov
negl
test
or
cmpsb
push
repz
add
push
sub
mov
xchg
ret
dec
das
in
jg
icebp
lods
add
cmp
and
mov
and
push
cld
jge
mov
xchg
scas
aaa
mov
vpxor
es
popf
bound
sub
int
out
add
sub
cmpsl
cs
shl
je
addr16
or
cmpsl
leave
shll
stc
dec
dec
push
add
dec
std
dec
xchg
cltd
add
jecxz
adc
xchg
adc
xchg
inc
leave
pop
mov
push
add
ficomps
mov
mov
rorl
jl
aas
jb
clc
pop
out
lret
repnz
loopne
loope
push
mov
mov
cmp
mov
mov
notl
xchg
mov
loope
sub
lods
call
movsb
adc
stos
xor
loopne
jle
or
xchg
jmp
fcompl
sub
cmpsl
pop
fdiv
sbb
cmp
xor
in
cmp
sub
and
jno
pop
xchg
icebp
outsl
add
dec
cmp
lea
stos
orl
dec
sbb
mov
mov
xchg
inc
adc
incl
cwtl
cmp
mov
pusha
ret
stc
lea
inc
mov
jae
sub
fbld
jno
hlt
lods
ret
movsb
negb
dec
dec
or
out
pusha
push
adc
mov
pusha
repz
loope
mov
lds
aad
cmpsb
outsb
dec
gs
mov
gs
and
ret
sub
movsl
bound
pop
sub
add
jmp
dec
push
dec
dec
repnz
dec
push
xchg
cmp
and
movsb
pop
mov
mov
add
scas
insb
cmpsb
fsub
repnz
das
sub
jbe
dec
or
pop
sbb
icebp
sub
outsb
mov
mov
icebp
sti
sahf
jecxz
mov
pop
sbbb
cmc
mov
movsb
cs
mov
leave
repnz
mov
pusha
xchg
dec
jbe
xor
out
sbb
out
ja
aad
pop
inc
pop
adc
pop
jge
leave
ret
dec
fdivrs
mov
pusha
jge
or
add
insl
std
fsubl
push
sahf
xchg
and
inc
inc
mov
mov
jg
dec
add
mov
in
and
shll
stos
ret
xchg
popf
xor
aaa
jo
sbb
push
lahf
ret
or
or
fsubrl
icebp
lcall
jae
roll
jb
out
push
pop
insb
inc
loope
sbb
popa
out
dec
stos
cld
xchg
cltd
xchg
test
insb
push
lret
push
inc
inc
and
or
ret
mov
rol
test
pushf
loope
js
lods
xor
push
rcl
lea
jmp
cmp
cmpsb
inc
aas
test
in
sbbl
shl
and
and
pop
add
mov
inc
inc
imul
pop
leave
mov
repz
add
lock
shlb
dec
mov
mov
gs
scas
and
pop
xor
mov
fdivs
stc
inc
adc
fildll
arpl
or
inc
repnz
test
insb
pop
mov
pop
out
leave
push
xor
shll
mov
sub
mov
shll
or
pusha
sub
pop
mov
les
cmpsb
xchg
jne
push
lea
ret
sbbl
cmpsb
sbb
das
movsl
adcl
jno
or
adc
adc
xchg
lds
insl
insl
mov
mov
hlt
jle
mov
sub
out
mov
and
sub
fs
fcmovnbe
dec
ja
rol
dec
cmp
cmp
ljmp
and
mov
aad
in
hlt
push
push
cmp
insl
jo
cs
jp
xchg
pop
xchg
test
lcall
dec
mov
int3
mov
xor
lahf
rcrb
fwait
jae
mov
cmp
sub
mov
in
cmp
add
repnz
adc
loope
sub
enter
int
dec
pusha
fadds
pop
lret
aam
push
adc
bound
add
call
xchg
shlb
mov
inc
rcrl
mov
shll
lods
iret
and
sub
mov
xor
add
inc
mov
sub
push
push
cwtl
jb
pop
sti
scas
sub
mov
mov
je
lea
test
cmp
mov
daa
dec
fcoms
xchg
lahf
cmp
push
aad
mov
stos
pop
pop
cmc
lods
shl
imul
pushf
sbb
adc
or
inc
and
setle
inc
or
aam
add
scas
cs
fisttps
or
stos
pusha
stos
xchg
add
lret
repnz
jmp
adc
shll
jns
pop
pop
jb
popf
sti
xor
outsb
test
shrb
cmc
icebp
cmc
hlt
nop
pop
mov
pop
cmpl
xchg
insl
movsb
xchg
addl
stc
mov
sbb
movsb
cmp
push
pop
addr16
lea
imul
loop
dec
sub
mov
mov
icebp
pop
ret
scas
jne
int
push
addr16
pop
push
push
out
jnp
dec
sbb
loop
jnp
pop
inc
push
and
add
jbe
pop
outsl
adc
xchg
mov
rorl
movsb
mov
add
fdivl
ljmp
test
icebp
sbb
push
fld
adc
orb
ret
into
fldt
cmp
icebp
sbb
arpl
or
je
movsb
mov
jnp
adc
or
mov
hlt
xor
push
sub
clc
or
or
mov
jne
jae
or
cmp
fiaddl
sbb
leave
inc
sti
add
scas
test
or
aam
out
daa
repnz
int
pop
andb
es
mov
dec
sub
add
mov
pop
aam
pop
mov
mov
jae
mov
mov
iret
mov
jae
pushf
out
or
inc
jb
jg
hlt
jl
adc
std
cmpb
lods
fstpl
into
arpl
ret
stos
je
mov
bswap
add
jo
sub
and
pop
cld
xchg
movsb
pop
fcmovbe
xchg
loope
hlt
cmc
fnsave
mov
lret
xchg
sbb
adc
lods
je
mov
ljmp
mull
jg
imul
xchg
add
mov
aaa
jae
daa
aad
xchg
push
cmpb
xor
cwtl
outsl
mov
cs
xor
arpl
mov
out
nop
jge
mov
lods
mov
imul
out
out
xchg
mov
or
inc
repz
movsb
je
in
das
mov
lods
ficoml
outsb
popl
and
sub
xchg
stos
vmovmskps
dec
stc
aas
shll
add
jb
pusha
mov
cmp
add
push
stc
pop
stos
sahf
mov
mov
push
addr16
sbb
cmpsl
adc
pop
push
and
push
xchg
subb
out
adc
aad
inc
outsl
bound
andb
rcrb
sbb
insb
in
sbb
mov
hlt
jb
lret
sub
xchg
jbe
push
mov
inc
mov
pop
jecxz
sti
shll
dec
fldt
mov
inc
movsb
adc
insb
insb
pop
mov
call
popa
cmp
mov
lcall
mov
bound
and
int
and
stos
adcb
arpl
push
movsb
pop
jo
push
call
in
jo
mov
sbb
add
movsl
mov
fildll
or
or
cmpsl
out
adc
into
mov
mov
add
cmp
xor
loope
test
mov
cmp
xor
sub
addb
sub
ja
dec
ja
mov
in
fmul
push
pop
pop
and
sub
pop
adc
mov
lds
stos
movsl
loope
nop/reserved
inc
mov
mov
test
mov
mov
sub
aad
jge
bound
xor
and
mov
es
addr16
inc
adc
pop
adc
pop
cmc
pop
or
mov
pop
lea
dec
cld
add
dec
inc
mov
cwtl
mov
fwait
mov
cmp
dec
cld
xchg
sbb
jbe
mov
mov
into
insl
mov
jmp
xlat
subl
adc
js
jno
mov
mov
add
outsb
movsb
jne
das
mov
pushf
shll
ret
push
dec
xchg
or
pop
divb
insb
and
mov
add
sub
dec
cmc
movsb
inc
test
jg
and
or
push
lods
sub
movsb
sub
mov
mov
cmp
movsb
push
mov
cmp
jns
ret
mov
xor
fcomi
pop
mov
dec
mov
repz
lret
xor
lcall
into
add
or
xchg
cltd
ljmp
ror
cli
mov
imul
mov
repz
outsb
sarb
aaa
jmp
into
mov
xor
fwait
mov
sub
inc
xor
jnp
jno
mov
adcl
jge
xchg
or
pop
outsl
ret
lcall
cmp
pop
xchg
cmp
in
ret
xchg
lcall
cltd
mov
test
cmc
mov
bound
jle
pusha
test
ljmp
dec
movsb
mov
test
mov
subb
push
in
leave
push
dec
inc
test
push
punpckldq
jl
lea
mull
mov
test
mov
xor
into
outsl
cmp
mov
xchg
inc
push
sbb
bound
xchg
xchg
rolb
repnz
lods
sbb
in
dec
jne
daa
xor
mov
dec
int3
jmp
notl
cmp
out
mov
jae
loop
pop
negl
xchg
jo
xchg
in
lods
lods
stc
dec
cmp
or
adc
hlt
bound
insl
xchg
add
or
imul
jmp
enter
adc
cmp
arpl
in
movsb
jo
cmp
pop
arpl
pusha
sbb
loopne
jmp
into
repnz
lods
mov
jge
xor
push
jle
push
jge
mov
jnp
xor
pop
pop
lahf
imul
pop
stc
imul
jmp
cld
or
scas
sti
pop
jecxz
shl
mov
or
pusha
jmp
pmulhw
addr16
dec
add
fidivrs
jmp
gs
rcrb
popa
sbbl
xchg
iret
in
gs
sbb
add
mov
push
sub
out
movsb
sub
addr16
stos
mov
push
xchg
or
fmul
cmp
icebp
lods
ja
fwait
std
and
addr16
push
enter
push
rcrb
jb
pushf
movsb
es
push
je
jmp
mov
mov
rcrb
dec
clc
mov
sub
dec
push
enter
es
xchg
sbb
fs
popf
xchg
dec
ret
sbb
in
outsb
push
jmp
add
cli
aad
adc
shlb
inc
push
sub
enter
call
aad
lock
ss
sti
rcll
mov
cmpsl
pusha
add
aas
cld
loope
rclb
pop
imul
sahf
and
lods
loop
add
cltd
dec
dec
xchg
dec
and
ljmp
fsubs
mov
add
bound
ret
js
sub
mov
adc
push
ficoms
dec
mov
repnz
jecxz
movsb
lahf
prefetch
or
pusha
fcomip
jl
mov
icebp
add
scas
test
stos
arpl
jl
add
and
mov
adc
arpl
jmp
fldcw
jb
arpl
jns
xor
fisubl
jo
data16
scas
jmp
hlt
mov
sahf
bound
mov
add
popa
ret
inc
arpl
pop
lods
enter
push
mov
cmpsb
lcall
test
subb
or
dec
xor
cli
adc
mov
int3
push
lods
int
stos
and
and
popf
sub
nop
pusha
iret
or
loope
hlt
push
cmp
lret
inc
fisttps
jnp
mov
or
std
and
pop
mov
std
sub
xchg
rol
leave
mov
mov
add
push
dec
and
mov
jg
dec
lahf
xor
lds
or
notl
sub
mov
imul
mov
xor
shll
fildll
repz
mov
pop
xchg
push
mov
iret
pop
and
aad
cwtl
or
jbe
stos
repz
cs
pusha
setno
sbb
lods
mov
push
scas
bound
mov
jge
pop
and
xlat
xchg
jl
insb
lahf
fcomps
add
ret
dec
test
or
xor
jecxz
outsl
pop
jge
sahf
cmp
idivl
lods
shrb
adc
mov
fiadds
mov
add
divl
mov
pop
out
jae
pop
xor
xchg
cmpsb
scas
aam
outsl
sub
leave
jbe,pn
popf
fsubr
jg
mov
xor
adc
mov
divb
lahf
jge
outsb
sti
sbb
sahf
dec
fmull
xchg
cmp
dec
push
lret
test
dec
mov
or
insl
add
or
and
rolb
nop
dec
inc
jno
jne
inc
int
jmp
movsl
dec
cs
je
pandn
pop
loopne
push
cmpsl
mov
scas
stos
pop
mov
ret
mov
pop
mov
pop
rol
mov
pop
movsb
test
or
jl
xor
ret
add
xchg
pop
out
clc
sti
ds
jae
scas
or
packuswb
mov
out
movsb
push
and
test
call
leave
rclb
lods
pushf
iret
jl
movsb
sbb
jns
or
push
test
pop
subl
push
sbb
sbb
mov
test
jge
gs
sub
mov
pop
psllq
inc
xor
lods
nop
mov
arpl
rcrl
inc
xor
pop
xchg
pop
dec
sar
xlat
sub
or
mov
sub
mov
jb
sub
adc
aam
mov
adc
sub
inc
lea
fistpl
mov
scas
mov
cli
imul
jmp
out
das
sub
push
sbb
shll
shrl
andl
mov
adc
aaa
jle
dec
ret
dec
or
decl
mov
out
out
movsb
jae
lcall
stos
push
into
ljmp
lods
lods
mov
xor
ret
sbb
adc
pop
insl
lds
iret
cli
enter
inc
mov
mov
inc
daa
adc
decb
inc
movsb
aam
es
pusha
xor
push
pushf
mov
adc
cmc
jno
inc
jg
pop
imul
xchg
sbbb
push
lock
push
and
cmp
mov
adc
xlat
sbb
jae
jecxz
movsb
push
fcoms
aam
xchg
sbb
mov
sar
dec
punpcklbw
adc
adc
xor
movsb
xlat
leave
in
mov
test
das
test
xchg
movsb
dec
clc
scas
ret
enter
out
mov
inc
insl
stos
hlt
in
push
push
and
mov
lods
inc
andl
ret
outsb
mov
add
sahf
fisubrs
and
mov
xor
clc
je
mov
jge
cmp
sub
or
mov
stos
mov
es
sbb
pop
mov
xchg
inc
mov
imul
dec
aas
loop
sbb
daa
mov
repnz
mov
jb
fs
push
add
fidivl
or
pop
mov
aas
lods
jne
add
outsb
push
in
jmp
inc
shlb
xorl
shr
jge
mov
repnz
or
out
scas
adc
or
xlat
jle
jne
push
xor
jg
sub
mov
mov
xchg
push
mov
mov
or
pop
aas
mov
jnp
das
mov
lods
mov
adc
push
xor
lcall
lahf
cmp
inc
xor
push
pop
pop
sub
fdivl
mov
movsl
hlt
scas
cmp
jl
ret
incb
or
mov
jae
rorb
jecxz
insl
mov
in
dec
fnstsw
in
jmp
cld
clc
mov
movsb
mov
out
inc
ret
lret
aas
mov
je
jae
push
call
pop
and
icebp
pusha
mov
inc
fmull
icebp
js
push
pop
rclb
xor
jge
mov
aaa
daa
xchg
cmpsb
repz
es
push
dec
xchg
or
lret
movsb
testl
lods
ffree
mov
inc
pop
mov
sub
into
xchg
pop
push
mov
or
pop
inc
cld
shll
push
dec
cwtl
jne
mov
xchg
cltd
dec
lcall
inc
pop
sub
clc
mov
xchg
stos
xor
mov
push
xchg
pusha
pop
sbb
fxsave
inc
outsb
xchg
test
add
mov
les
jle
mov
cs
mov
das
or
mov
fldt
cmp
mov
xchg
fildll
aad
or
fisubl
push
movsb
insb
imul
xor
test
and
lcall
hlt
js
lcall
add
sub
xchg
hlt
iret
scas
cmp
mov
mov
inc
and
jno
lret
rorl
jno
xor
movsb
jo
aaa
adc
mov
mov
adc
lea
mov
pop
test
xchg
jmp
int3
cmp
test
or
stos
outsb
fiaddl
jmp
xor
jle
test
dec
mov
xchg
loopne
shrl
adc
insl
cwtl
fsubr
mov
dec
lods
int3
cmp
pop
and
pop
shrb
arpl
mov
inc
push
xchg
lea
xlat
mov
push
sbb
mov
rorl
add
add
loopne
push
movsb
int3
push
ror
int
nop
imul
sub
push
dec
lods
pop
out
loope
icebp
es
rcrb
xor
das
addr16
dec
scas
out
inc
and
ss
mov
dec
in
lods
xchg
lret
jbe
lea
sbb
pop
pop
shll
mov
pop
loope
std
jge
mov
mov
clc
mov
hlt
sub
fnstenv
ja
inc
aaa
jb
cmpsb
movsb
push
int
jnp
mov
test
cmp
xchg
xlat
pop
insb
cmp
mov
shll
add
xchg
fcoms
pop
cmp
mov
aas
jbe
jmp
sbb
fisttps
loop
hlt
movsb
pop
adc
fistl
add
loope
push
mov
in
push
and
imul
xor
daa
sub
sub
inc
rcll
cmp
or
aad
push
lods
sbb
imul
inc
push
inc
xor
adc
adc
subl
sub
mov
out
test
movsb
gs
mov
or
push
sbb
das
imul
xchg
js
mov
scas
mov
inc
push
dec
pushf
push
pop
mov
mov
lret
ds
lock
push
or
jo
adc
fidivl
mov
and
cmp
add
es
dec
test
rolb
repnz
mov
xchg
jno
cltd
cld
aad
jae
enter
loop
add
shlb
popa
movsb
cmc
jbe
push
mov
mov
push
and
scas
dec
les
sbb
out
and
xchg
mov
push
dec
xlat
out
sub
aas
xor
pop
or
jmp
mov
inc
lahf
inc
sub
popf
dec
dec
cmp
jns
hlt
sbb
pop
xor
sub
jne
and
and
flds
xchg
inc
aad
dec
les
mov
int
fs
call
cpuid
mov
lea
push
mov
out
jb
test
mov
pop
rclb
inc
subb
stos
jb
xor
out
xor
decb
mov
dec
cmp
pop
call
cmp
addr16
push
pusha
fs
std
stos
icebp
inc
call
cwtl
lods
pop
fimull
sbb
mov
lret
pushf
pop
dec
push
outsb
mov
mov
xchg
mov
fs
xchg
mov
xor
pop
test
mov
jne
mov
lock
jb
stos
lock
int
push
iret
outsb
mov
add
nop
mov
inc
and
shll
sbb
lds
enter
jns
jg
xor
xchg
out
jnp
push
mov
test
or
sbb
les
mov
sub
xor
jbe
dec
repnz
or
dec
mov
repnz
stos
jb
outsb
shlb
lods
pop
sub
dec
push
sarl
xor
ljmp
xor
out
mov
inc
mov
test
scas
jo
mov
inc
clc
and
test
jb
and
out
xchg
pmulhuw
sub
arpl
addb
add
push
lea
sahf
mov
fidivl
dec
dec
dec
cli
hlt
lock
and
movsb
int
stc
icebp
insl
rorl
push
dec
popf
popa
add
addr16
pop
in
sbb
cmpsl
inc
and
les
loope
xchg
stc
mov
mov
dec
xchg
jbe
mov
cmp
jae
pop
sub
je
outsl
test
mov
cltd
adc
pop
mov
xor
lods
scas
cld
dec
dec
sub
cmp
ret
inc
xor
pusha
pop
mov
fwait
mov
sbb
xor
sbb
jl
dec
jo
xor
movsb
mov
mov
mov
and
dec
repz
xor
inc
test
movsl
jle
imul
fdivs
fwait
adcb
ret
mov
imul
cmp
mov
xchg
fadds
dec
int3
jb
mov
xchg
mov
pop
ret
aam
js
push
mov
inc
sbbb
inc
dec
mov
xor
adc
and
fcomi
pop
jno
enter
jecxz
popf
test
clc
scas
xor
sub
imul
aam
addr16
ja
and
cmp
cmpsl
jle
sub
push
sbb
jmp
sub
push
sbb
data16
fcomps
xchg
dec
bound
sub
iret
xor
lea
jmp
or
rcrl
pop
shrb
jb
mov
stc
dec
pop
data16
decb
push
in
das
jbe
loope
mov
icebp
and
fisubs
mov
jb
adc
push
push
pushw
jb
adc
jmp
mov
arpl
test
aaa
sbb
mov
nop
cmp
lods
and
outsb
jmp
push
add
fidivl
imul
jmp
out
dec
stos
pop
rep
inc
cwtl
xor
push
das
movsb
out
or
xchg
jge
push
popf
mov
in
mov
cmp
sub
dec
mov
sub
jecxz
fisubrl
int3
push
jl,pn
ljmp
outsl
xchg
imul
addl
aad
ss
cmp
test
outsb
mov
popf
mov
jmp
ret
lcall
addr16
mov
sbbb
fwait
orb
test
rcll
les
lock
jmp
lret
icebp
mov
push
cwtl
movsl
cld
outsb
pop
inc
rclb
mov
mov
and
mov
sbb
setp
pushl
mov
mov
stos
idivl
stos
gs
aaa
push
jmp
popa
and
les
mov
sub
fwait
add
xchg
mov
and
pop
jnp
pop
in
cli
fsubrs
in
xchg
fwait
lret
out
call
push
sbb
add
lds
dec
mov
mov
and
aas
popa
and
lods
inc
loop
insb
jecxz
fmuls
and
aaa
push
push
std
mov
mov
push
sbb
aas
lcall
xor
push
clc
mov
sub
pop
fmuls
jnp,pn
pop
jb
ret
and
mov
xchg
icebp
dec
jo
mov
in
xchg
fisubl
xor
movsb
mov
insl
andl
push
jae
lahf
mov
adc
push
dec
mov
lods
adc
add
out
sub
xchg
or
fdiv
mov
jl
cmp
fcomi
fldcw
adcl
es
rorl
pop
hlt
xchg
shrl
ljmp
xchg
movsl
sub
xchg
repnz
test
dec
cmp
fimull
sub
lea
sbb
sub
pop
inc
or
push
jge
inc
lret
stos
xchg
repnz
bound
inc
and
sbb
and
push
shll
nop
cs
mov
push
lahf
sahf
ljmp
add
pop
cmp
out
js
push
or
in
stos
ret
mov
sub
into
movsb
icebp
sbb
xchg
inc
push
insl
push
dec
mov
xchg
cld
lods
cmpl
add
stc
ja
xchg
pusha
jmp
inc
mov
stc
int
int3
in
outsl
mov
and
sti
mov
push
hlt
je
repz
cmp
nop
fimull
xor
shrl
aam
xchg
sbb
sub
add
push
fcmovnu
mov
xchg
enter
add
sbb
jnp
cs
fdivrs
jb
push
ljmp
in
fdivr
neg
sbbb
push
pop
xchg
hlt
dec
sbb
repz
push
sbb
in
dec
xchg
mov
lods
push
xor
push
or
les
js
bnd
iret
sbb
adc
push
rep
xchg
push
iret
pop
in
fsubr
xor
lcall
cld
mov
mov
xchg
add
xor
cmp
xchg
movsl
call
pop
pop
mov
iret
mov
jno
and
in
adc
jo
adc
cmc
jge
mov
push
push
cwtl
mov
mov
imul
pop
sub
movsb
lock
cmpsl
and
mov
pop
movsb
pushf
out
adc
aad
out
add
lds
in
sbb
xor
mov
or
sbb
cmc
mov
iret
in
data16
xchg
inc
wbinvd
and
lds
mov
in
mov
pop
mov
or
add
sub
xor
push
jge
lock
inc
lods
repnz
sub
push
lahf
pop
sub
cmp
mov
aaa
pop
shlb
fs
xchg
xor
lcall
imul
sub
sub
jmp
daa
adc
ljmp
loope
pop
sahf
add
or
cmp
jb
addb
stos
loopne
pop
mov
add
shrb
popf
shl
scas
pusha
imul
aad
ret
les
loope
push
gs
adc
cmc
movsb
or
fsubr
jecxz
pop
push
imul
xchg
inc
sub
sub
repz
imul
jnp
dec
mov
mov
ja
inc
std
mov
pushf
inc
dec
das
mov
cmp
cmp
pop
cmpsl
xor
jb
addr16
out
xchg
cs
pop
ja
stc
xor
jb
cmp
mov
pusha
xchg
mov
sub
outsl
lods
adc
lods
add
sbb
fwait
addr16
mov
js
mull
add
js
out
stc
pop
das
and
pop
test
xchg
aas
jae
ficoml
lcall
out
fisttpl
pop
mov
clc
or
cltd
jg
aam
les
aad
sub
pop
aam
nop
or
cmp
stos
fs
and
int3
jmp
pop
pop
out
leave
add
mov
pushf
cmp
bound
gs
in
scas
dec
adc
movsb
fists
mov
mov
shl
fwait
cmp
mov
in
xor
sub
jge
lea
subb
mov
fiadds
mov
push
pop
test
xlat
lods
xchg
repnz
repz
cmc
xchg
xchg
ds
imul
hlt
mov
aad
cld
sub
call
loopne
aaa
push
aaa
cmp
jb
cwtl
pop
inc
mov
jecxz
pop
adc
lods
jb
inc
jmp
mov
stos
push
repnz
dec
pusha
jge,pn
sahf
xchg
lcall
xor
lcall
and
mov
sahf
aaa
pushf
push
into
cwtl
xchg
je
mov
or
push
ror
ja
sub
mov
out
push
or
cwtl
arpl
push
jp
test
out
clc
lock
push
ljmp
ja
es
jmp
adc
repnz
rorb
xor
loope
mov
dec
lcall
xchg
lods
jle
push
mov
lea
out
push
or
lds
mov
push
dec
les
lods
mov
inc
mov
pop
inc
mov
or
repnz
cmpsb
and
mov
ret
push
jmp
fwait
add
mov
psubd
and
xchg
lods
int3
mov
ja
add
ror
mov
xor
push
imul
mov
outsl
repnz
bound
pop
dec
rol
aaa
mov
xchg
jne
mov
pop
stos
out
pop
sub
inc
aam
xchg
fwait
inc
movsb
push
jbe
enter
bound
ljmp
repnz
push
std
shll
adc
sbb
lea
jge
cld
inc
xor
stc
cmpsl
mov
pusha
cmpsb
das
hlt
and
xor
les
movsb
dec
mov
mov
negl
add
mov
cmp
inc
lret
ds
and
out
xchg
dec
insb
push
adc
ret
or
pop
sbb
cs
jb
ficoml
sbb
shlb
jle
stos
xor
fstp
mov
sub
mov
int
or
stos
xor
movsb
mov
lcall
and
and
imulb
and
fcoms
scas
sub
sbb
mov
lcall
jo
hlt
push
sbb
dec
inc
shlb
ljmp
pusha
lret
lds
mov
les
in
mov
jge
pop
stc
xor
dec
addb
mov
mov
loope
shlb
out
lock
in
sub
add
sub
sub
int3
les
jnp
mov
dec
cmc
cmp
or
mov
clc
lret
jne
jo
leave
data16
enter
std
dec
scas
mov
ja
xor
inc
movsb
pop
enter
sbb
std
xchg
scas
push
andb
fs
scas
cmpsl
push
push
and
test
push
sub
das
lahf
imul
dec
enter
jmp
repz
pop
inc
outsb
bound
cmpsb
cmpsl
call
mov
sub
jno
orl
ja
les
push
xor
pop
jle
dec
cmp
ficomps
fwait
inc
cld
sbbb
das
jo
pop
adc
push
mov
test
in
xlat
jmp
pushl
clc
and
push
push
leave
jo
ljmp
jmp
mov
movsb
test
adc
mov
out
insl
in
dec
stos
stc
cmp
xchg
andb
insb
movsb
inc
inc
int3
mov
mov
jno
movsb
je
mov
stos
icebp
add
sub
gs
test
lock
pop
adc
xor
sub
xor
hlt
shlb
push
ds
shlb
push
daa
cmp
lea
dec
rclb
mov
mov
shrb
ljmp
cmp
mov
outsl
lods
mov
sub
push
enter
mov
mov
xchg
adc
outsb
stos
and
inc
fdivl
fisubl
sub
sahf
mov
jae
js
call
fisttps
in
or
ret
jne
fadds
dec
iret
dec
clc
insl
sbb
sbb
clc
mov
arpl
sub
mov
ljmp
es
or
ret
push
jge
clc
mov
loope
and
icebp
mov
cmpl
test
sub
add
dec
jno
outsb
jns
mov
mov
movsb
sub
cld
or
push
lock
iret
icebp
push
push
movsb
outsb
cmp
lods
and
js
pusha
out
in
xchg
outsb
scas
gs
je
push
pop
cvttps2pi
in
sar
sub
rolb
mov
or
jl
mov
push
mov
wbinvd
and
push
push
movsb
xchg
jbe
xorl
and
jns
pushf
fldt
out
and
into
cltd
lds
ja
in
push
nop
sub
cmc
scas
lods
je
es
xlat
dec
pushf
cmp
out
jmp
mov
mov
lret
repz
push
xchg
rcrl
mov
mov
pusha
in
nop
push
or
xchg
cltd
loope
push
mov
sarl
jno
push
iret
arpl
xlat
movsb
test
in
pop
push
mov
xor
mov
jmp
in
mov
mov
jns
sub
movsb
or
sub
fsubrs
rcll
ja
clc
sub
movsb
mov
push
jnp
adcb
cmpsb
popf
rcrb
lods
jno
int3
add
mov
in
jns
imul
xor
std
daa
enter
mov
mov
push
fcomip
and
movsl
rcrl
repz
pop
sbb
repnz
shrb
fisttpll
sbb
xchg
call
bound
movsl
sub
imul
insl
movsb
lahf
add
add
scas
push
mov
jno
inc
xchg
popa
or
out
adc
sbb
push
out
dec
test
dec
aad
dec
mov
sbb
jno
jno
mov
insl
cwtl
unpckhps
cmc
shlb
or
xchg
or
and
mov
lods
pop
push
scas
and
mov
jge
out
stos
out
lret
sbb
test
dec
mov
push
dec
scas
mov
rcll
psubsw
push
adc
xor
movsb
sbb
mov
pusha
adc
and
sti
mov
aad
jno
dec
rcll
sub
dec
cli
mov
xchg
fistl
sub
bound
jmp
ret
scas
test
or
cld
xor
lods
repnz
pop
std
sbb
xor
add
out
add
jge
push
mov
mov
ss
lods
cld
mov
in
mov
test
outsb
add
sub
sub
add
jg
outsl
adc
into
cli
xor
outsl
inc
adc
or
cmp
fstl
icebp
scas
decb
xorb
loop
mov
and
push
insl
dec
sub
inc
sub
enter
inc
pop
or
cld
jb
mov
add
les
jbe
lods
mov
and
lcall
xchg
sbb
or
and
lcall
pmovmskb
pushf
adcb
sbb
jo
fmuls
movsb
int3
mov
mov
scas
mov
sahf
mov
cld
jns
mov
mov
cmpsl
add
repnz
ret
icebp
sbb
lods
mov
dec
jbe
movsb
nop
mov
inc
sbb
je
push
repz
outsb
clc
pop
jl
sub
cli
pop
or
mov
ficoms
jo
imul
pushf
sub
jae
sbb
or
call
adcl
lea
dec
mov
movsb
clc
adc
out
loope
fwait
push
enter
cmpsb
mov
jae
or
push
pusha
mulb
jle
push
sub
ljmp
sub
arpl
jb
and
ds
andl
lret
out
call
movsb
or
pushf
ret
lea
xlat
popa
cld
push
xchg
cs
jge
mov
test
outsb
push
mov
or
ficompl
sub
fldt
out
ljmp
dec
mov
je
sbbb
ss
fbstp
mov
fldenv
mov
inc
mov
ja
stos
sbb
mov
jge
xchg
stc
dec
pusha
loope
cmp
lea
lea
push
sub
pop
das
lods
push
xor
in
aam
rclb
adc
call
leave
imul
outsl
push
push
sbb
jge
ret
push
xor
sub
cmpsl
jge
lcall
and
lods
jb
pop
stos
rolb
pop
mov
mov
cmpsl
jbe
dec
sbb
sub
adc
sub
sbb
cmp
add
push
shll
or
pop
popa
fisubrs
sub
scas
mov
popa
pop
icebp
stc
fs
add
aaa
aas
mov
push
lcall
dec
push
in
outsb
jecxz
mov
ss
sti
pusha
cwtl
hlt
xchg
mov
out
add
and
dec
mov
jnp
mov
inc
js
ja
fs
pushl
jmp
and
loop
repz
popf
push
push
gs
rcll
jns
sbb
sbb
addr16
mov
sbb
mov
adc
lods
mov
hlt
adc
call
dec
or
sahf
or
ret
lds
xor
mov
inc
jb
movsb
jge
inc
push
push
popa
xor
addr16
push
stc
xchg
ret
mov
pop
scas
dec
add
cs
out
adc
or
mov
fdivl
jns
data16
sub
mov
arpl
xchg
jmp
add
call
insb
cld
xor
imul
dec
xlat
mov
incb
les
mov
lcall
jno
mov
pop
fwait
stos
das
imul
ljmp
pushf
and
cmp
fisubl
jmp
lea
shl
cltd
pop
leave
pop
push
or
cli
push
pop
mov
movsb
sbb
mov
adc
scas
xor
sub
sub
or
orb
mov
lods
lret
adcb
and
mov
lods
es
mov
add
push
mov
movsb
push
pop
adc
sbb
int3
mov
notb
stos
mov
shl
fpatan
inc
int
insl
push
pop
xchg
dec
mov
incb
aad
das
mov
ja
or
mov
push
int3
call
dec
add
fwait
lcall
das
das
push
rorb
cmp
add
lods
sub
sarl
inc
xchg
fidivl
into
fcom
cmpsl
aad
or
mov
mov
dec
mov
test
ss
add
add
xchg
sahf
pop
sbb
or
nop
imull
insl
inc
mov
mov
push
add
sub
or
loopne
rcll
push
mov
aaa
sbb
in
mov
pop
aaa
jns
imul
out
orl
pusha
dec
iret
sahf
pop
js
jl
nop
dec
cmp
add
pop
in
cmp
or
sti
cmp
cli
push
adc
cmp
push
movsb
or
hlt
adc
pop
fbstp
repnz
push
shl
inc
movsb
icebp
dec
pop
imul
data16
jl
push
hlt
fdiv
std
mov
mov
and
sbb
xchg
and
inc
data16
mov
sub
or
pop
jo
adc
xchg
sbb
sub
mov
cmp
inc
leave
inc
lahf
hlt
adc
std
stos
stos
mov
mov
out
insb
std
lods
mov
inc
jp
sbb
dec
sarb
test
loope
into
js
pop
cmc
dec
sbb
push
lods
mov
cmp
jno
push
add
mov
mov
mov
add
or
fistl
and
stos
ja
int3
clc
sbb
fstps
es
cld
xchg
aam
stos
ret
mov
jbe
sub
subl
in
popf
mov
ret
inc
aad
xchg
lret
mov
ljmp
mov
mov
std
in
pop
das
stos
xchg
movl
lcall
outsb
push
in
mov
out
adc
out
lods
outsl
push
sahf
out
add
outsl
jb
cmp
aam
jp
fdivrl
sbb
inc
xor
mov
ljmp
jnp
loope
mov
loop
stos
shlb
enter
test
push
push
les
out
lds
push
repz
adc
and
lods
cmpsl
add
jno
push
inc
sub
insb
arpl
aas
lcall
in
inc
js
sub
into
fstpt
inc
adc
jmp
mov
lds
sub
mov
mov
or
push
js
push
dec
clc
push
push
inc
scas
test
je
scas
mov
ror
adc
push
in
mov
push
jbe
sub
test
fbstp
in
xchg
add
adc
mov
in
test
lods
jge
add
sub
jbe
adc
dec
xlat
add
enter
call
repz
mov
insb
cmp
sbb
mov
les
popa
xchg
test
aaa
mov
imul
lss
xor
fsubrs
dec
mov
aaa
fiaddl
or
out
push
inc
inc
mov
insl
cmp
push
mov
mov
add
mov
inc
fcoml
add
fwait
nop
adc
sahf
sub
aam
cmp
and
repz
push
pop
imul
movsl
stos
push
into
push
mov
xor
sub
stos
mov
addr16
daa
cmpsb
sahf
xor
ret
insl
pop
push
jne
cli
pop
jmp
lods
js
add
daa
push
repnz
or
fs
cli
jbe
movsb
or
lahf
sub
ret
add
ds
push
out
das
pop
lcall
jae
lret
sub
and
cmp
sysexit
cld
adc
or
js
mov
shrb
mov
aaa
cld
iret
add
cmc
or
inc
lcall
or
add
outsb
cwtl
push
adc
mov
leave
inc
lret
and
or
xlat
lods
cmp
fdivrs
pushf
push
mov
movsl
dec
int
mov
decl
push
pop
into
push
cmc
sbbb
cmc
xchg
in
mov
cmp
adc
pop
jo
ja
les
mov
xchg
xchg
enter
xor
into
cmp
inc
xor
cmp
movsb
shl
dec
lock
insb
adc
lret
jg
cli
call
jbe
aam
push
pop
inc
xchg
flds
test
les
xor
shrl
mov
ret
inc
arpl
mulb
xor
sbb
and
rorl
mov
push
scas
ljmp
mov
aam
subb
aas
aad
adc
cmc
mov
dec
cwtl
adc
out
mov
sub
idivl
fcoml
dec
pop
and
aaa
subb
xor
mov
pop
stos
movl
mov
lret
jmp
imul
and
leave
dec
push
mov
sub
mov
fs
test
xchg
lcall
cmp
xor
sub
int3
rcrl
lea
dec
pop
lahf
scas
in
pusha
push
out
cli
add
cmp
adc
stos
sub
das
mov
inc
cld
inc
scas
es
cmc
and
idivl
jno
movsb
mov
sub
adc
test
or
xchg
push
pop
dec
sbb
lods
mov
adc
inc
out
adcl
rolb
sbb
ret
mov
lret
cmpsl
mov
push
or
aam
cs
xchg
xchg
add
out
xor
xchg
mov
pop
push
mov
outsb
xor
loope
xchg
mov
pop
mull
outsb
faddp
mov
in
inc
mov
sti
mov
test
call
bound
ja
stos
scas
in
xchg
mov
sbb
inc
mov
lcall
aad
jnp
lcall
push
bound
fs
outsl
sub
lods
sbb
xchg
adc
jge
xchg
inc
add
mov
sahf
and
jmp
inc
add
push
test
mov
sahf
sbb
movsb
cmp
cmp
xorb
sbb
push
jnp
pop
stos
mov
dec
imul
xchg
push
sub
movsl
xchg
loope
mov
ljmp
push
cld
fs
ret
fisttpl
mov
xor
cmp
lods
pop
loope
pop
mov
inc
mov
ljmp
repz
in
mov
ss
jecxz
aam
out
dec
jb
or
and
xor
lea
or
pushf
aam
xchg
mov
pop
lea
dec
jne
pop
sbb
lods
cwtl
loop
sub
sub
mov
cmpsl
adc
xlat
lret
jo
jge
in
ss
or
in
mov
test
call
push
pushf
ja
mov
inc
sub
jne
sbb
add
and
divb
addb
cmp
aaa
jo
mov
test
mov
outsl
xor
dec
mov
repnz
pop
ja
and
fwait
mov
into
dec
scas
into
pop
stos
push
dec
movsb
ja
pop
cltd
jl
sbb
into
ljmp
lret
cltd
mov
ljmp
frstor
cmp
mov
lods
cltd
test
adc
iret
or
pop
movsb
nop
xchg
jbe
jb
mov
mov
ficoml
jge
lret
fcomi
call
push
xchg
push
stc
mull
fiaddl
sub
sub
ret
lea
fldenv
int
in
lret
jge
inc
fsub
ss
shr
orl
push
add
inc
mov
pop
push
sbb
aam
call
sbb
push
loope
arpl
ja
and
push
adc
xchg
adc
xlat
mov
xchg
xchg
xchg
sub
jge
sbb
aam
std
mov
mov
fbstp
fcoms
or
psrlq
jge
pop
inc
mov
in
shrb
adc
sbb
stc
push
cmp
pop
cmp
mov
repz
ljmp
lods
xlat
jge
pop
sbb
hlt
xchg
jno
fdiv
sub
stos
adc
shl
push
div
lods
pop
mov
mov
xchg
add
rcrl
lods
fnstenv
lods
cmp
xchg
out
pop
aad
out
mov
out
ja
mov
lods
add
mov
cmp
into
xchg
jo
pop
mov
xor
jge
fisubrl
lods
jle
cwtl
adc
mov
ss
dec
sub
int
iret
frstor
add
mov
cmc
lods
outsl
lock
mov
xor
jge
leave
push
mov
mov
pop
jnp
pop
ja
sahf
sbb
jg
fnstcw
mov
sub
lods
sahf
pop
inc
push
mov
dec
icebp
fcomps
cmpsb
pop
inc
sahf
dec
aad
pop
mov
stc
and
sub
push
xor
orb
push
scas
mov
loopne
mov
sbb
stos
jns
arpl
aad
or
xlat
lods
sbbb
sub
mov
addr16
out
jo
mov
inc
xchg
inc
ret
mov
ret
mov
and
aam
push
add
shlb
lea
lcall
popf
sbb
cli
sub
in
scas
pusha
or
jmp
sub
clc
ja
xor
mov
mov
dec
dec
jnp
rolb
pusha
test
in
lcall
testl
push
and
inc
dec
movsl
add
stos
jo
dec
mov
mov
sbb
hlt
cli
lock
call
or
pushf
iret
imul
inc
jns
pop
scas
outsb
aad
sbb
in
fdiv
cltd
shlb
push
cmp
lret
scas
xor
lret
mov
cmp
xor
mov
data16
add
sub
cwtl
xchg
mov
add
test
arpl
xchg
jb
movsb
int3
or
subb
das
wrmsr
cli
lds
ret
jae
pusha
mov
cli
shl
jge
rol
push
sbb
mov
icebp
inc
loope
lock
nop
and
add
inc
sub
xchg
je
push
and
fildll
repnz
sub
cmc
test
lods
mov
cmp
lods
cld
push
jo
jnp
cmp
xor
pusha
cmp
outsb
xor
fs
mov
out
imul
fcomp
outsb
aad
ds
add
fnstsw
bound
xchg
xchg
cmp
mov
mov
push
push
jb
pushf
mov
cmp
xor
rorl
add
adc
lods
push
in
inc
jb
in
jae
xchg
cli
pop
cli
and
sbb
mov
lods
jns
dec
add
push
int3
cmp
sbb
out
xchg
push
or
pusha
push
jp
sti
bound
cmp
cmp
mov
xor
jecxz
jecxz
mov
popa
pop
mull
repz
in
xor
int
and
pop
jle
mov
clc
insb
mov
arpl
ret
mov
jnp
adc
lcall
out
ja
addr16
sub
and
add
mov
pop
cmp
and
sbb
mov
lock
call
bound
fcomip
or
xchg
pop
outsb
out
mov
mov
xchg
movsb
pusha
test
movsb
popf
and
mov
push
insb
add
arpl
mov
stos
pop
sarb
and
lods
clc
inc
cmpl
sub
pusha
test
int
xchg
sbb
insl
mov
xlat
cli
xchg
fs
jno
icebp
loopne
nop
pushf
cld
js
add
mov
orl
xor
push
dec
rcrb
pop
and
push
sbb
and
addl
and
out
adc
inc
push
lds
and
sbb
insl
sar
mov
sbb
enter
push
push
dec
rorb
pop
sbbb
arpl
pop
lods
inc
mov
xor
iret
pop
xor
pop
ljmp
push
adc
jbe
loope
add
outsl
jnp
mov
mov
orb
arpl
scas
mov
imul
into
test
adc
je
pop
stos
push
addb
xor
icebp
mov
cwtl
pop
shll
sub
sbb
out
inc
pushf
jbe
ret
xchg
adc
pop
dec
cld
pusha
nop
cmpsl
xchg
movsl
add
int3
or
cmpsb
scas
mov
or
sbb
xor
cs
addr16
inc
mov
ss
push
mov
sbb
leave
loopne
int
xor
test
push
stos
cli
inc
idiv
cs
ret
mov
das
jo
and
sbb
push
cmc
dec
stos
in
imul
push
add
dec
pop
aaa
pop
loop
adcl
insb
xchg
aad
std
leave
xchg
jnp
inc
jae
dec
fucomi
fsubrl
dec
outsb
lcall
roll
enter
fs
sub
lret
mov
lock
fisubl
data16
dec
in
addr16
mov
pop
cmp
push
clc
pusha
jb
lret
test
ror
jp
add
pop
arpl
xor
test
fcompl
movsb
les
lods
jnp
pop
test
pop
pop
nop
mov
mov
cmp
jbe
or
shrl
jns
push
aam
xchg
jb
stc
mov
cmc
adc
sbb
adc
push
push
xor
lods
fisubrl
push
icebp
out
cltd
mov
inc
mov
or
in
xorl
das
xor
cmp
or
push
bound
jnp
and
jl
xor
sub
mov
mov
mov
sub
addb
or
push
inc
mov
sub
jns
outsl
movsb
jmp
add
call
adc
lcall
dec
call
jb
push
repnz
cmp
xchg
xchg
push
pop
push
pushfw
push
mov
das
cmp
cmpb
pop
clc
outsb
ret
cmp
xchg
icebp
adc
pusha
pop
test
repnz
jo
mov
fldcw
lock
je
xor
pop
mov
xchg
pop
popf
cmc
es
cmpsl
adc
sbb
inc
dec
jmp
into
push
mov
ds
ss
out
mov
ret
jb
sub
dec
stos
aam
sub
mov
icebp
fimull
jmp
lcall
lahf
in
sub
int
shl
int3
jg
nop
pop
xchg
outsb
mov
or
je
or
add
push
fmulp
shlb
test
fs
mov
movsb
lods
jge
jno
mov
dec
inc
push
adcl
cmp
ja
ret
push
sub
push
mov
inc
fdivs
cli
push
cmp
sti
mov
lods
pushf
xchg
xchg
ds
dec
sub
mov
pop
mov
lea
push
sub
test
dec
xchg
mov
add
lods
xor
jne
loopne
imul
dec
in
mov
fidivs
lret
aad
or
pop
or
mov
lahf
pop
lds
movsl
enter
fisubl
or
and
or
jge
jns
jnp
lock
mov
sahf
sbb
movsb
fcmovu
sarl
mov
cld
cmovb
mov
lcall
adc
dec
in
mov
add
pop
scas
rcr
xlat
das
daa
inc
mov
repz
mov
cmp
sbbb
cmp
jae
out
push
sub
xlat
sub
fisttpl
pop
into
in
jo
ja
push
or
es
xchg
push
out
mov
sbb
mov
imul
aam
mov
push
out
leave
iret
rclb
sbb
lea
ret
pop
nop
pop
xchg
rcll
test
fsub
aas
jno
push
pop
mov
jns
sahf
repz
jl
sbb
ret
outsl
stos
out
xchg
push
fwait
mov
mov
fisubrs
test
call
andb
pusha
insb
sarb
call
fldenv
in
dec
dec
mov
arpl
shlb
and
leave
stos
or
adc
adc
cmpsb
ds
sub
cs
lret
dec
and
cmp
jge
xchg
push
sub
xor
sub
movb
mov
pop
std
cmp
push
sbb
xchg
pop
pop
jno
test
daa
cmp
push
sub
mov
dec
mov
pop
nop
inc
sub
sbb
test
mov
fwait
repnz
sbb
pop
xor
push
ja
add
jns
mov
test
adc
hlt
adc
fiadds
push
jae
jb
out
push
and
test
sub
jl
test
sbb
mov
mov
pop
bswap
shl
cmp
fnsave
mov
and
mov
inc
sub
loop,pt
lods
jb
and
stos
add
setne
rcrl
stos
sub
inc
movsb
test
lods
adc
test
leave
lahf
shll
imul
lods
movsl
mov
stos
pop
stos
insb
sbb
fsubrs
sbb
lods
add
fidivl
shl
jge
cmp
lret
add
add
int3
cmc
sbb
mov
xor
movsb
inc
jge
pop
inc
push
sbb
push
enter
inc
iret
adc
cmp
xchg
mov
lods
dec
rcll
inc
mov
jns
xchg
daa
fst
insb
jmp
pop
dec
icebp
pop
gs
and
loopne
pop
mov
and
mov
sbb
mov
into
int3
push
insl
dec
adc
xor
clc
push
cmp
cmp
es
pop
sub
xchg
nop
ret
int3
inc
pop
stc
pushf
dec
insl
pop
inc
in
mov
in
or
ljmp
xchg
xorb
add
icebp
and
jmp
mov
mov
nop
out
sub
jmp
lret
push
repnz
cltd
pop
jg
and
jnp
inc
movsb
shrb
rcrl
imul
popf
sbb
ds
cmp
inc
add
hlt
xchg
sysenter
enter
mov
fildll
ret
jae
add
test
jne
movsb
fcoms
into
or
scas
jbe
mov
add
inc
sbb
lds
inc
pop
push
ss
sub
jae
or
mov
add
mov
mov
or
pop
xor
cmpsl
out
sub
push
ret
mov
jecxz
fmul
jbe
cmpsb
mov
add
imul
xchg
loop
sbb
sbb
lods
jbe
jle
stc
fidivrl
popf
mov
mov
ja
jne
insb
lea
xor
mov
push
push
dec
or
mov
xor
mov
mov
dec
xchg
iret
sbb
mov
mov
mov
adc
add
daa
and
push
push
inc
push
adc
pop
insb
jmp
xor
xchg
fbstp
cmpsl
mov
xchg
adc
les
jo
jmp
xchg
imul
enter
imul
xchg
add
insb
adc
in
xchg
xchg
lret
sub
arpl
and
lds
pop
sub
or
inc
dec
dec
pop
call
sub
jne
mov
mov
std
out
stos
fnstenv
xor
xor
or
in
sbb
es
testl
loopne
jbe
repz
das
inc
cmpsb
xchg
movsl
insb
data16
out
add
mov
inc
dec
insl
mov
enter
inc
mov
push
lds
push
movsb
inc
mov
sbb
add
in
cld
jb
stos
out
out
sbb
adcl
cs
jae
cli
int3
jmp
mov
into
push
mov
pop
push
pop
mov
pusha
dec
int
push
or
jl
nop
dec
flds
pushf
mov
das
scas
lods
or
and
test
push
mov
movsl
int
outsl
adc
adc
jnp
sbb
mov
in
xchg
push
iret
stc
jne
inc
jp
lcall
jmp
dec
cmp
xor
add
or
xchg
inc
jns
imul
sbb
jb
scas
cli
adc
lret
pop
mov
mov
add
sub
test
sub
les
sbb
lods
pusha
push
xchg
xchg
and
icebp
out
dec
sbb
jecxz
mov
and
mov
ret
lret
mov
imul
das
fistpl
inc
push
arpl
xor
cwtl
adc
and
pop
icebp
dec
inc
pop
jge
scas
xor
in
inc
or
mov
dec
or
adc
dec
xchg
scas
mov
les
mov
cmpsb
sbb
cmpsb
inc
cmp
mov
adc
rol
sub
add
out
movsb
mov
mov
lret
jecxz
mov
sbb
cmp
arpl
ljmp
shlb
xchg
xor
mov
pop
out
shlb
push
xor
xor
mov
daa
xor
iret
mov
movsb
jno
fisubl
jo
ss
repnz
fadd
add
notl
cmp
mov
jmp
sbb
jns
fwait
stos
jno
jmp
rol
cmpsl
imul
sti
scas
bound
sbb
insb
mov
or
push
sub
ja
ret
push
call
cmp
stc
push
push
enter
inc
jecxz
sub
int3
fsts
rclb
xchg
adc
mov
sub
lahf
pushf
movsl
xchg
cmc
add
mov
inc
int3
mov
popf
inc
lods
cmp
mov
bound
subb
js
cmp
mov
push
xchg
nop
add
pop
repz
adc
dec
addr16
mov
clc
fstpt
pop
addr16
push
ss
or
iret
bound
fnstenv
adc
notl
sub
fdivrp
insl
sub
jnp
pop
iret
es
cmp
icebp
hlt
clc
xor
mov
cmp
mov
fsubr
fs
pop
movsb
dec
pushf
mov
leave
out
sub
hlt
and
jge
aad
fwait
mov
divl
jb
stos
adc
and
dec
rcl
inc
iret
les
lret
ljmp
jmp
fsubrl
rcl
mov
lods
lods
pop
dec
orb
in
xchg
scas
scas
jb
aaa
mov
mov
jne
pop
mov
xchg
sub
movsb
mov
xchg
and
enter
fs
adc
movsb
inc
arpl
pop
xor
pop
jbe
ret
lret
or
mov
inc
hlt
push
mov
insl
scas
mov
add
xchg
ds
enter
inc
xor
mov
jns
movl
mov
cmpsb
cmp
ss
sar
movsl
inc
ror
aas
dec
lods
lcall
outsl
push
test
sbb
es
mov
xor
std
add
aaa
movsb
lgdtl
xchg
add
fcomps
and
jno
rcrb
push
fcomi
pop
mov
dec
cltd
sahf
ljmp
mov
push
adc
fcmovne
cmp
lcall
dec
inc
stos
aam
in
fnstcw
pop
xchg
int3
jns
test
sbbb
ret
mov
insl
hlt
das
ljmp
mov
lret
jl
into
std
push
out
add
lds
mov
add
jns
mov
sbb
fs
pop
pop
cld
and
std
xchg
test
mov
pop
mov
sub
xorl
xor
and
sbbb
clc
divb
ja
jmp
sub
mov
xchg
xor
mov
rcpps
xchg
inc
rcrl
mov
fadds
das
mov
or
sarl
in
mov
mov
aad
aam
ja
xor
dec
inc
jae
movsb
test
lds
cli
mov
push
out
dec
loope
push
or
lods
iret
inc
mov
cmpsl
push
sbb
dec
ljmp
fists
add
mov
lods
xchg
mov
dec
sub
dec
in
pop
mov
jmp
mov
dec
sub
adc
fidivs
mov
sub
lea
mov
in
ja
stos
push
cmpsl
cmp
mov
mov
out
mov
inc
add
stc
pop
in
mov
xor
pop
xchg
pop
and
mov
mov
push
mov
movsb
sub
fistpl
mov
aas
add
hlt
movsb
sub
lret
ret
sub
arpl
pusha
repnz
mov
pinsrw
movsb
mov
outsl
sbb
repz
and
push
add
and
outsb
test
pop
decb
cmpsb
mov
or
pop
sub
cli
or
jae
cmp
ret
mov
sbbb
aaa
pop
adc
add
ss
pop
bound
xchg
enter
outsb
dec
orl
push
mov
in
scas
andl
rcrb
lea
fwait
jo
movsb
lods
repnz
icebp
xchg
jno
leave
fcmovnu
pusha
add
repz
mov
cmp
outsl
cmp
mov
mov
or
mov
ds
mov
sbb
dec
and
movsb
scas
mov
stos
push
ljmp
jg
sbb
add
jbe
int
out
incb
mov
andb
ljmp
cmp
pop
mov
je
push
xor
xchg
push
fs
inc
jmp
jge
ret
jb
inc
pop
ss
insl
push
mov
test
xlat
mov
sti
cmc
sub
cwtl
lcall
push
mov
jns
lahf
adc
mov
cli
mov
lods
out
popa
shrd
pusha
outsl
add
ljmpw
or
inc
jbe
inc
pop
gs
push
or
cmc
and
repz
mov
sub
popf
add
sbb
adc
dec
sar
pop
xchg
arpl
imul
inc
pop
enter
sub
sub
fisubrl
cpuid
mov
mov
mov
js
cld
daa
inc
outsb
mov
pop
jbe
sahf
ds
test
pop
in
sbb
push
pushf
in
fmull
or
aaa
scas
mov
cmp
sub
lods
cmp
aad
outsb
cmpsb
sub
lods
xor
cld
int
pop
rorb
add
sub
cpuid
mov
push
mov
scas
ret
xchg
shr
fcomp
pusha
fwait
in
sbb
push
mov
sbb
pop
mov
stc
sub
out
aaa
mov
cli
sbb
mov
ja
andb
and
jecxz
mov
mov
push
in
dec
mov
dec
cmp
sub
add
shl
bound
insl
push
shl
or
repnz
push
cmp
aaa
mov
mov
push
lock
int3
and
inc
push
sub
pop
cmp
push
dec
test
add
xchg
sahf
mov
sbb
mov
sub
lods
adc
adc
push
inc
mov
scas
fistl
rorl
insb
pop
stos
aam
loop
and
mov
inc
bound
or
daa
mov
pop
sub
sbbb
pop
stos
dec
movsb
pusha
jg
in
adc
js
lea
out
outsl
test
movaps
repz
sbb
sub
xorl
mov
jnp
mov
rol
xorb
xchg
cmpsb
out
call
in
and
das
push
lock
xor
lock
hlt
or
and
je
int3
sub
leave
das
pop
jne
sbb
jecxz
rcrb
sub
int3
mov
sub
push
xchg
sbb
enter
jmp
orb
out
subl
mov
stos
jecxz
mov
cli
daa
cld
xor
inc
push
jno
push
loopne
gs
jo
das
loope
adc
xchg
hlt
xchg
sub
pop
and
ficomps
inc
dec
jp
pop
push
xchg
sbb
xchg
and
jl
cli
adc
repnz
cmp
sub
shrl
add
or
or
jle
loopne
out
xchg
inc
movsb
stos
add
ret
fsts
sbb
mov
pop
push
mov
add
mov
imul
loop
pop
mov
or
lods
add
push
aas
vmwrite
sbb
out
sub
das
xchg
jp
movsb
cmp
sub
push
and
mov
adc
cmpsb
pop
loope
add
sbbl
pusha
lock
out
and
push
dec
xchg
mov
or
cmpsb
sbb
xchg
bound
add
test
sahf
imul
add
jmp
jge
dec
mov
sub
push
inc
ljmp
mov
sar
xchg
je
xchg
push
je
adc
ret
lods
testl
int3
std
mov
mov
xchg
xchg
repz
pushf
xchg
xor
lods
mov
mov
sub
mov
in
and
addr16
fdivrs
jle
cwtl
ficompl
fdivs
mov
adc
inc
and
sub
cmc
clc
lret
jo
mov
loop
cld
lret
sub
test
insb
cmp
mulb
jmp
cld
es
lods
xlat
jne
mov
neg
dec
das
add
jmp
imul
pop
mov
pop
ret
xchg
jo
in
lahf
xor
xchg
xor
add
movsb
daa
adc
and
dec
xchg
outsl
cld
scas
jle
pop
lock
jge
push
movsb
es
mov
jnp
ret
js
inc
mov
sbb
lea
pop
jb
xchg
loope
and
mov
shll
jae
jg
xor
mov
out
fcompl
and
mov
add
mov
inc
mov
or
add
xchg
mov
push
jb
out
lea
or
mov
ret
aad
out
cwtl
bound
repz
and
cmp
pop
stos
aam
mov
jge
xorl
addl
ja
int
sbb
nop
mov
xchg
pop
sar
dec
jb
cmp
in
roll
and
pusha
bswap
add
outsl
in
sbb
push
xor
mov
push
lds
xor
cmpsl
dec
inc
repz
dec
pop
mov
xchg
lret
inc
ss
inc
mov
jb
filds
dec
mov
rcl
inc
das
push
or
lods
or
rorb
fcompl
popf
daa
dec
lahf
imulb
fsubr
pop
sahf
or
stc
mov
out
movsb
jbe
clc
xchg
push
stc
dec
mov
fisubs
pushf
sub
pop
popa
push
mov
jmp
xchg
xor
imul
jnp
loop
mov
sbb
lods
xor
in
rol
orl
je
pop
jg
mov
aam
adc
or
sub
mov
arpl
pop
mov
fiadds
ss
mov
or
call
fisttps
and
sbb
pop
leave
adc
and
xchg
rorb
mov
lods
dec
xor
dec
mov
ret
cli
lret
adc
in
jl
flds
dec
cmp
push
lea
xor
xchg
cs
popa
adc
outsl
lds
push
push
cmp
ds
jbe
repz
testb
cmp
mov
push
movsb
xor
iret
int
mov
pusha
cmp
xchg
popa
xor
xor
jl
dec
int3
out
fidivl
out
and
jg
lods
lods
mov
mov
xor
and
sbb
push
mov
fcom
dec
in
and
cmp
or
mov
int3
inc
movsb
mov
into
outsl
fstpt
sti
rcl
loopne
lret
fdivrs
mov
imul
xor
out
outsb
push
cmp
push
into
push
mov
outsb
jb
mov
pop
add
and
sbb
ror
mov
mov
shlb
aad
in
sub
scas
pop
repz
loopne
dec
adc
xor
loop
dec
xchg
jmp
into
or
jge
sub
iret
test
shlb
xor
andnps
xchg
pop
sbbb
jmp
inc
test
mov
vcvttps2dq
fdivrs
mov
push
jp
mov
sbbl
add
pop
push
dec
and
xchg
sbb
cs
lods
ret
cs
sbb
mov
loop
out
cmpl
sub
lods
lret
push
gs
and
rcll
or
outsb
fcoms
push
movsb
les
jge
shr
xchg
mov
repz
cmp
xchg
mov
cmpsl
dec
jne
mov
and
addr16
sbb
dec
inc
sarb
shl
mov
mov
add
pop
push
jbe
add
shlb
ret
aam
mov
stos
out
adc
sahf
mov
movsb
mov
dec
out
adc
scas
ljmp
fisttpl
xchg
push
dec
loope
or
xchg
loop
or
lcall
enter
aas
and
repnz
movsb
jp
adc
push
movsl
sub
mov
jb
mov
mov
add
dec
leave
xor
push
stos
ljmp
adc
or
cmpsb
fiadds
fnstsw
push
arpl
pop
push
or
cmp
pop
mov
hlt
pop
cmp
mov
dec
adc
jge
dec
push
sub
in
mov
and
clc
insb
lcall
mov
ret
bound
jae
sbb
incl
gs
loopne
frndint
repnz
push
add
adc
flds
fwait
lods
xchg
mov
jl
mov
fists
and
jnp
push
loope
mov
notl
lahf
jo
sub
add
jle
test
in
add
les
fsubs
mov
and
fstps
cmp
je
fadds
sbb
fsubrs
lds
add
sub
rol
jae,pn
dec
adc
cmp
cmovno
sub
push
push
lcall
faddl
shll
pop
xor
call
sbb
mov
and
push
sti
inc
fucomi
mov
les
sub
es
shrb
jnp
dec
mov
ja
scas
inc
mov
inc
pop
cmp
push
mov
jnp
mov
pcmpeqw
pop
lds
pusha
jecxz
jmp
push
and
jl
xchg
mov
sub
push
adc
or
lods
in
push
pusha
cmp
push
or
popf
sbb
mov
xor
iret
cltd
jbe
xchg
mov
pop
shrl
dec
mov
ss
imul
adc
stos
push
push
cmc
loope
mov
pusha
fsubs
out
leave
push
cs
jecxz
mov
xchg
rolb
stos
push
pop
imul
and
or
cmp
mov
bound
mov
add
xchg
cltd
jle
dec
movsb
ret
fwait
dec
cs
dec
and
cld
popf
data16
popa
mov
or
pop
repnz
imul
popa
jno
dec
sbb
iret
mov
mov
xor
lahf
shlb
ds
sbb
xchg
and
scas
inc
jle
insl
push
nop
jno
dec
enter
pop
or
aaa
push
addb
mov
sub
les
orl
mov
mov
cmpsl
jbe
mov
outsb
dec
addr16
les
popf
xchg
pop
inc
pop
xor
jae
xchg
jp
and
orb
notb
dec
push
mov
cmp
les
dec
adc
xchg
notl
mov
lcall
mov
add
mov
out
pop
test
dec
insl
leave
sbb
mov
sub
dec
pop
repnz
idivb
sub
xchg
fldl
negl
xchg
sbb
pop
or
mov
das
fcomi
fcmovbe
or
scas
jnp
loope
das
sbb
inc
movsl
xor
jae
sbb
xchg
into
fisubrl
inc
cmp
pop
mov
into
sub
movsb
les
imul
sub
jb
stos
mov
push
bound
adc
mov
outsb
and
scas
inc
lods
mov
inc
cmp
mov
jnp
mov
shlb
jmp
fadds
ja
incl
addl
pusha
adc
sbb
jne
jno
cmp
xorb
and
pop
inc
aad
fildll
cli
ljmp
xor
mov
movsb
andb
aam
popa
push
popf
xor
pop
decl
or
dec
cmpsb
inc
xor
mov
lea
pop
mov
rcrb
xchg
cltd
push
push
add
sbb
and
cmp
jb
stc
lret
pop
jb
movsb
pushf
jecxz
test
mov
in
jne
mov
cmc
lods
pop
sub
jns
sbb
cltd
movsl
pop
inc
adc
jo
je
andl
mov
pop
movaps
dec
push
sbb
inc
xchg
and
xor
mov
out
leave
mov
in
xchg
pop
mov
lods
or
sub
inc
or
das
xchg
pop
sbb
pushf
bound
jmp
cmc
loope
or
inc
repz
je
add
dec
inc
mov
lods
adc
sarl
jbe
subl
mov
or
insl
sub
or
int
adc
test
lea
push
dec
push
stos
hlt
mov
inc
push
pop
in
sbb
and
rorl
sbb
sub
and
jae
pop
das
addr16
in
sub
jg
scas
loop
add
mov
cmp
sub
cmc
mov
sbb
lcall
jmp
pop
and
ret
lret
adc
dec
int
je
jo
dec
iret
pop
push
mov
inc
sub
lea
push
cltd
je
jno
in
lds
jae
fld
scas
inc
enter
or
pushf
pop
mov
imul
pop
dec
xchg
cmp
push
push
xchg
adc
test
scas
sub
sub
outsl
pushf
or
pop
mov
icebp
ret
mov
push
in
into
mov
inc
mov
aas
adc
mov
scas
bound
jge
push
xor
movsb
enter
xchg
aas
cmp
sub
ret
movsb
dec
in
push
mov
mov
daa
ftst
shrb
push
loope
mov
pop
jb
fldcw
inc
or
adc
cmpsb
mov
imul
and
movsb
test
cs
jae
notl
in
cwtl
into
into
push
loopne
xor
in
outsl
add
sbb
shlb
lret
jo
sbb
loope
movsb
shlb
jae
sbb
idiv
sti
mov
ja
mov
mov
insl
les
mov
dec
dec
int
ret
lods
xchg
sti
movsb
jge
xor
fdivrl
andl
cmp
smsw
shlb
popf
mov
mov
cmp
int
xor
hlt
cmp
lock
mov
jbe
mov
pop
inc
or
or
mov
lret
sub
test
scas
in
in
mov
mov
inc
lahf
mov
insl
or
das
aam
outsb
iret
push
clc
test
adc
mov
enter
sbb
xor
movsb
dec
cmpsb
mov
iret
cmp
and
cli
sbb
out
rcr
cltd
sbb
mov
xchg
test
mov
jl
les
xchg
bound
push
jns
inc
ret
push
ret
mov
orl
subl
pusha
or
sbb
sti
idivb
leave
push
cld
test
ret
sub
jae
daa
mov
push
cs
push
cli
xor
cli
jae
dec
inc
jmp
xchg
aaa
adc
pop
mov
xchg
jns
notb
les
sbbb
sub
int
sub
inc
mov
dec
data16
or
push
enter
out
dec
popf
push
jbe
and
mulb
pop
dec
aaa
xor
mov
adc
jl
dec
mov
inc
and
jns
dec
call
nop
repnz
movsb
jo
dec
sub
inc
sbb
cmc
aam
mov
lcall
sbb
stc
in
cs
sbb
lods
push
sub
inc
pushf
adc
iret
data16
xor
cli
add
mov
xlat
lea
pop
ret
and
push
push
push
xor
aam
call
mov
shr
adc
jl
sbb
push
jp
test
out
cmp
call
xor
clc
mov
pop
and
insl
das
aam
xchg
lahf
and
movsb
mov
test
ljmp
adc
and
lcall
fsubs
or
jge
int
cmc
and
call
adc
scas
insb
sbb
sti
loope
add
ret
lds
dec
nop
xor
das
push
lods
push
push
cmpsb
fucomip
and
add
push
xchg
or
push
ret
mov
mov
cmpsl
into
inc
test
rolb
outsl
push
in
mov
pop
push
sbb
jb
int3
cli
aam
mov
adc
inc
jp
and
int
pushf
jmp
xor
mov
mov
sti
inc
popf
rolb
je
pop
iret
movsb
push
lret
mulb
mov
outsb
incb
mov
sbb
jns
lret
sbb
movsb
adc
mov
xchg
sub
xchg
sarl
xor
adc
fmul
pop
loop
mov
filds
push
out
ficompl
ja
std
loopne
ret
scas
mov
add
in
loopne,pt
sub
jns
lea
test
inc
aaa
mov
or
mov
xor
or
mov
stos
jle
sub
mov
or
xchg
dec
in
and
mov
int3
repz
lods
adc
add
sar
lods
lret
add
xchg
clc
jmp
mov
push
and
outsb
sti
mov
or
jno
mov
lret
xchg
push
jbe
test
mov
pop
sub
and
sets
mov
test
loop
add
out
testb
pop
mov
dec
pusha
inc
push
shr
ret
lcall
ljmp
les
cs
jmp
cmp
idiv
mov
sub
xchg
sub
cmp
enter
pop
mov
or
add
insl
std
test
jbe
mov
mov
jbe
stos
or
inc
out
cmp
push
or
jns
jge
imul
push
pop
bound
mov
outsl
xchg
or
lods
adc
pop
mov
in
or
pop
aaa
mov
fs
push
test
add
or
xchg
and
daa
repz
add
pop
fwait
outsb
lods
addr16
movsl
cli
js
scas
sub
sbb
jmp
enter
cmp
repz
lods
and
cs
and
pusha
imul
jb
int
les
cld
jno
ja
or
arpl
or
xor
movsb
testl
jp
aam
out
repnz
inc
imul
mov
add
cmpl
fiaddl
aaa
in
jno
repz
fsub
daa
xor
stos
test
sahf
sub
cmp
push
movsb
inc
shlb
mov
pop
scas
imul
xor
imul
mov
dec
pop
mov
mov
iret
push
mov
adc
cltd
mov
insb
andb
jg
fdivs
push
mov
jae
movsb
dec
or
xchg
incl
je
cmp
mov
mov
xchg
xor
inc
sub
inc
enter
and
repnz
mov
aaa
pop
or
aas
lcall
push
enter
jb
lret
add
lret
shll
lods
stc
sbb
push
jp
inc
sti
in
mov
cmpsl
outsb
pop
dec
test
loop
jp
enter
push
mov
es
mov
hlt
pop
lock
lods
cmp
pop
and
das
pop
mov
loope
pop
push
xor
stos
inc
inc
jle
mov
inc
fcoml
jg
ret
mov
ret
and
dec
mov
loop
sub
gs
sbb
mov
sbb
shll
cmpsl
xlat
jae
stos
xor
and
add
push
lods
pop
sahf
jge
movsl
test
inc
pop
add
cmp
mov
stc
lds
or
movsb
data16
sbb
loopne
mov
sub
lea
movsb
sbb
inc
dec
scas
xchg
mov
jmp
repz
add
jg
inc
mov
jae
mov
gs
popf
jne
sbb
push
mov
cmp
lods
xor
movsl
mov
adc
mov
adc
cltd
mov
push
push
movsl
out
or
leave
and
cmp
movsl
mov
shll
push
jno
leave
sbb
xchg
mov
xor
adc
lock
pop
hlt
mov
test
xchg
pop
in
rcrl
outsb
pop
xor
pop
mov
bound
fdiv
mov
das
add
aaa
mov
icebp
dec
jno
and
mov
xorl
sbb
sub
in
leave
dec
mov
insl
lock
out
mov
mov
out
xlat
je
call
jmp
add
mov
and
movsb
fs
fdivr
sbb
mov
or
jge
imul
xlat
sub
test
mov
xchg
inc
sub
pop
and
mov
test
jmp
or
push
in
pop
rorb
and
sbb
cmp
pop
adc
cmp
orb
repz
push
adc
fildl
daa
or
push
bsf
and
js
cmc
adc
dec
push
rclb
pop
inc
xor
add
pop
out
scas
and
fsubs
pop
ljmp
mov
or
out
mov
mov
pushl
das
sbb
lods
imul
sub
jnp
mov
or
lret
mov
cmpsl
dec
add
dec
gs
jbe
stc
in
xchg
mov
mov
pushf
loope
and
iret
xor
stos
aas
xchg
adc
mov
and
dec
out
add
cmp
daa
jne
inc
call
lods
bound
cmp
mov
push
leave
jae
inc
adc
movsl
or
sti
jb
cltd
jo
mov
icebp
roll
movsb
jp
push
push
clc
adc
mov
adc
orl
jnp
and
xor
orb
movsl
push
or
sbb
sahf
pop
xor
xor
mov
repz
mov
cwtl
cld
fs
mov
fistps
push
xor
or
pop
push
nop
stc
xor
fmul
insl
inc
sbb
jne
leave
add
push
lods
pop
ret
jg
movsl
into
sbb
jmp
sbb
sub
cmp
test
je
ficompl
test
push
push
sbb
ljmp
inc
clc
pop
shlb
add
push
sbb
cmp
mov
xchg
or
cwtl
das
and
das
or
dec
xlat
fisubrs
int
test
sbb
notl
enter
adc
orl
loope
jge
in
dec
pop
mov
xchg
pop
mov
inc
out
lds
fisubrs
mov
getsec
jmp
push
aam
jbe
jg
iret
bound
enter
push
inc
adc
inc
and
xchg
inc
stos
inc
or
and
movsb
sub
out
and
insb
xchg
mov
sbb
adc
add
test
push
and
push
mov
call
or
sbbb
shlb
shll
xchg
add
jecxz
pop
shlb
dec
xor
jns
rol
mov
scas
leave
cwtl
xchg
mov
mov
xchg
lcall
movsb
scas
push
ds
and
in
xor
mov
das
test
dec
mov
mov
mov
jnp
sbb
xlat
in
shr
or
nop
aam
iret
pop
push
or
push
or
xchg
in
mov
mov
push
cs
gs
in
pop
inc
hlt
cwtl
out
mov
adc
arpl
sub
xchg
sub
jp
sub
xchg
movsb
sub
cmp
pop
ret
pop
mov
mov
cmpsl
mov
int3
xor
sbb
movsb
repnz
xchg
jae
mov
fistpll
mov
jl
jbe
gs
into
roll
imulb
mov
outsb
scas
or
test
iret
pop
lcall
fisubl
leave
and
sub
les
lcall
xchg
push
xchg
push
imul
push
push
js
ror
push
mov
inc
xchg
fsubs
rol
fisubs
cld
movsb
or
movsl
lods
movsl
popa
pop
add
shll
mov
cmpsl
mov
movsb
in
pop
lds
xor
xorl
inc
jle
out
mov
xor
mov
jns
mov
mov
push
sbb
cmp
push
adc
sbbl
pusha
popf
mov
jne
xchg
xchg
jp
add
add
xchg
sbb
ja
jae
and
jne
or
mov
popf
push
mov
inc
notb
shlb
loope
out
sub
inc
pusha
cs
mov
int3
sub
movsb
sub
stc
lods
push
les
dec
inc
lret
movsl
addr16
push
sub
dec
subb
das
loope
cmp
mov
adc
scas
jb
repz
mov
jge
jbe
scas
out
lods
jo
repz
outsb
sbb
out
push
aad
xor
mov
mov
push
mov
mov
push
cs
mov
cmc
ljmp
mov
movsb
mov
sbb
inc
fadds
sub
sub
dec
push
lcall
push
in
lcall
xchg
pop
jp
aam
sbb
movsb
inc
xchg
sub
mov
movsb
adc
movl
add
das
adc
mov
jbe
pop
pushl
xchg
into
pop
insl
fdivs
push
ja
testl
xchg
push
pushf
lcall
xchg
outsb
xlat
pusha
imul
movsb
pusha
pushf
popf
lret
out
shll
adcl
push
sub
mov
xor
and
mov
hlt
or
jb
jne
sahf
fdivl
lcall
aaa
ss
mov
lds
and
adc
insb
add
ljmp
and
movsb
xchg
push
imul
into
sbb
repz
loopne
and
fcmovnu
sub
xchg
pop
int
xchg
sub
bound
mov
pop
loopne
pop
push
std
or
scas
mov
pop
jp
lret
jno
stos
loope
adc
sub
dec
adcl
fisubrs
cmp
mov
test
popf
test
lahf
mov
psraw
ljmp
imul
outsl
sub
cmp
lret
rsqrtps
sub
mov
sub
xchg
xor
andl
icebp
pop
test
mov
es
out
add
mov
fldenv
xorb
jmp
outsb
push
sbb
push
sub
scas
sbb
bound
inc
jecxz
adc
cld
push
fdivrs
sub
pop
das
sbb
lock
pop
js
add
jp
pop
sbb
push
mov
jb
stos
outsb
mov
int3
xor
xor
push
lods
jecxz
pop
into
dec
adc
jp
cmpl
in
mov
xor
or
into
fldenv
push
mov
mov
sub
addr16
ss
lods
and
sub
cmp
sbb
inc
aam
push
nop
push
shl
jne
repnz
fwait
sub
pushf
out
sahf
mov
addr16
add
fdivl
push
popa
ret
movsb
jnp
ss
testl
lret
or
outsl
fmul
pop
addr16
mov
dec
adc
push
scas
incb
fdivl
cli
repz
xchg
adc
jl
or
hlt
sbb
xor
outsb
and
add
mov
mov
ljmp
ret
xchg
mov
jge
cmp
movsb
mov
push
pop
cli
lods
adc
icebp
or
into
sub
adc
pop
sbb
cmpsl
iret
pop
cmp
fnstcw
imul
fcomps
dec
insb
js
push
inc
pop
mov
aas
sbb
scas
sbb
lock
movsb
mov
xchg
push
mov
lcall
iret
inc
fadds
and
cmp
out
jge
sub
into
movsb
push
or
dec
orb
repz
in
pushf
ret
addr16
rcr
pop
pusha
les
loopne
ljmp
add
inc
or
xor
xor
std
pop
mov
cli
and
jle
pop
nop
nopl
xor
xor
les
and
mov
and
dec
adc
push
or
lods
xlat
insb
repz
xchg
shlb
xor
call
out
sub
mov
push
xchg
sbb
xchg
scas
jns
enter
add
sub
pop
sub
loop
mov
xorb
push
pushf
add
imul
mov
sarb
mov
or
push
mov
add
iret
dec
les
xchg
enter
mov
mov
mov
push
xor
push
decb
inc
mov
addr16
push
lea
dec
sub
push
add
push
enter
js
loope
cmp
pop
inc
jecxz
cld
jp
fdiv
into
mov
mov
pmuludq
and
mov
into
in
jb
mov
adc
dec
dec
mov
std
hlt
mov
idivl
jge
mov
bound
fisubs
cli
jge
push
lret
push
sbbl
cli
xor
mov
add
les
mov
ds
jmp
pusha
jne
mov
frstor
inc
jg
jns
es
mov
scas
dec
fnstcw
imul
xor
movsb
push
insb
jmp
sbb
test
add
cmp
mov
push
push
push
into
aad
data16
int3
adc
jg
sahf
sbbl
mov
mov
inc
iret
and
mov
push
or
es
and
adc
and
or
dec
add
mov
sbb
lods
and
adc
fsubrs
push
push
std
mov
inc
pushf
sbb
sub
ret
dec
inc
orl
lret
ss
cli
push
sub
xor
aam
mov
out
push
es
cmpsl
int3
aaa
sbbl
mov
mov
mov
cli
push
repnz
std
dec
pop
jae
cs
out
sub
xor
or
rclb
jnp
xchg
and
outsl
fsubrs
sbb
in
decb
les
sti
add
mov
mov
sub
fdiv
mov
fcmovu
sub
roll
and
cs
mov
mov
fisubrl
sub
mov
add
outsl
mov
arpl
int
jnp
mov
or
scas
cs
mov
cmc
mov
int3
cmc
xchg
cmp
xchg
popf
movsl
outsb
fldenv
in
fsubl
jb
jb
pop
rcrl
pop
test
ds
mov
push
and
inc
add
cmp
aad
inc
and
imul
mov
nop
xchg
sbb
push
dec
mov
sbb
jns
shll
addb
fisubrl
dec
scas
subl
shl
bound
pmullw
pop
sub
outsl
fsts
xchg
push
ja
mov
test
outsb
add
movsb
jle
mov
sub
lods
insl
outsb
mov
popf
sub
add
fwait
daa
arpl
push
cli
cmp
sbbb
outsb
sahf
call
push
push
pushf
out
sub
xor
mov
and
mov
das
mov
stc
loopne
in
sub
fmull
xor
mov
out
out
clc
mov
popa
ret
scas
out
mov
iret
pop
mov
sub
push
mov
shl
cs
in
xor
orl
dec
lret
add
sub
xchg
cmp
jge
js
inc
xor
mov
inc
push
aam
aaa
pusha
out
insl
push
jl
je
sbb
fcoms
cmp
rcll
and
test
sbb
mov
and
cmp
pusha
cmpsl
mov
dec
cmp
je
xchg
test
into
jo
dec
test
dec
mov
push
pop
add
xchg
cld
fwait
or
push
jl
push
rol
sub
fisttpl
sbb
sub
fidivs
aam
add
pop
fsubrs
pop
or
pop
jb
lcall
mov
mov
inc
pusha
repz
fmuls
rolb
push
mov
jnp
push
clc
or
pop
insl
in
add
sar
inc
pusha
rorb
nop
push
add
mov
in
jl
add
loopne
in
cmp
out
push
mov
inc
pop
adc
add
cmp
jl
mov
addb
adc
test
int
inc
lods
call
lret
ret
nop/reserved
add
mov
out
inc
sbb
test
xor
fdivrs
pop
xor
and
icebp
cmpb
movsl
push
popf
mov
adc
mov
fcoms
pop
inc
mov
mov
dec
and
inc
add
cmc
push
add
and
pop
repz
lods
mov
in
cmc
movsl
sbb
jb,pn
ret
iret
jb
je
iret
aad
mov
mov
inc
div
insb
fisubs
add
ret
sub
lahf
lret
cld
pop
popf
xchg
or
mov
cmp
mov
xchg
and
mov
adc
or
popf
hlt
pusha
sti
repz
imul
cltd
mov
and
jns
jnp
pusha
repz
mov
pmullw
or
repz
adc
cmp
pop
xlat
or
mov
sbb
xchg
and
push
dec
fstl
mov
jnp
or
cmpsl
movsl
xchg
mov
stos
jnp
jb
cld
add
and
push
xchg
xchg
je
dec
push
ljmp
mov
cli
aad
arpl
inc
pop
pop
bound
mov
insb
dec
sbb
jge
lea
sub
jb
repz
inc
sub
ljmp
mov
mov
sti
movsb
adc
ljmp
push
cmpsb
jo
or
jo
lods
in
shrb
jbe
pop
cltd
loope
shl
loope
mov
test
movd
call
icebp
icebp
lcall
sahf
xor
add
jnp
data16
xorl
outsl
shll
xchg
cmp
outsl
fs
pusha
movsb
int
sbb
lods
jp
mov
bound
push
out
mov
push
jnp
popa
mov
jge
lods
dec
shlb
or
jecxz
pushf
add
std
cmp
repz
aas
sub
in
scas
shlb
shll
lock
inc
scas
or
adc
mov
les
movsb
out
sbb
push
inc
mov
lods
in
jns
sbb
mov
inc
or
cmp
shrb
or
sub
xchg
mov
push
push
xchg
sbbb
mov
icebp
in
aam
loope
xchg
fwait
mov
dec
inc
ss
sbb
push
push
push
dec
movsb
repz
adc
dec
lahf
ret
cmpsl
rcll
fistps
lods
scas
dec
repz
pusha
gs
cli
lret
fs
dec
dec
jp
insb
shlb
sub
jecxz
out
sahf
iret
adc
mov
lea
mov
inc
sub
les
out
sti
adc
adc
xlat
ja
mov
jne
orl
mov
lret
and
fldt
mov
gs
push
add
cld
jb
mov
dec
ja
mov
push
sub
cmp
stc
add
das
sbb
jb
adc
jge,pn
nop
jno
imul
jecxz
aas
mov
lret
jo
jmp
jnp
mov
and
aam
push
addr16
jbe
dec
sahf
gs
ret
shrl
sbb
mov
jb
lcall
hlt
mov
andl
push
js
movsb
loope
inc
and
imul
fwait
in
fistps
mov
popf
and
in
adc
rolb
movsb
mov
out
pop
cmpsl
push
dec
sub
call
iret
jg
xor
es
sub
repz
mov
bound
ja
mov
add
in
mov
ja
xor
aad
push
iret
and
not
mov
and
arpl
pop
shl
cmc
cli
pusha
loopne
test
push
push
jl,pn
enter
outsb
mov
xor
sbb
loopne
mov
es
sahf
lods
pop
or
mov
jns
mov
enter
mov
lret
pop
mov
fisubs
sbb
sub
int
pushf
rcrl
test
loope
int
stos
lds
jecxz
mov
das
pop
jge
or
pop
movsb
xchg
inc
push
mov
and
push
scas
cmp
aaa
cli
and
fbstp
push
jbe
mov
cmp
fcomps
push
aas
loop
dec
sbb
ret
sub
stos
ror
mov
mov
ss
mov
fidivl
sub
push
mov
mov
mov
jge
ret
dec
mov
ficomps
push
rorb
pop
fs
in
push
add
cld
mov
add
imul
int3
pop
add
lods
mov
ret
mov
ljmp
push
jecxz
pushf
and
dec
scas
lea
fisubrl
jb
mov
ss
sub
movsb
push
cs
and
dec
push
lods
outsl
sti
mov
or
add
xchg
mov
leave
or
xchg
or
cmp
jb
rcrb
int
adc
fdivs
in
add
jg
pop
aam
mov
movsb
inc
fisubs
push
xor
fcoml
lcall
inc
jp
push
jl
xchg
ljmp
sub
movsb
test
inc
add
xor
mov
or
in
jno
jne
sub
loope
inc
popf
jo
sbb
jp
bound
cmpsl
xlat
mov
dec
add
mov
push
fadds
scas
xor
inc
dec
in
mov
sub
pop
cs
inc
rcrb
fwait
movsl
jbe
pop
stos
test
sub
xchg
pop
xchg
mov
stc
xchg
test
inc
jns
lahf
sarl
and
idiv
in
ret
test
mov
aad
cmc
lods
and
loope
xchg
push
in
dec
dec
pop
mov
mov
repz
cmp
add
stos
or
rolb
jg
into
test
push
aad
sbb
pusha
subb
lock
addl
push
lock
and
lret
xchg
fdivl
popf
cs
mov
inc
or
mov
fmull
mov
push
fisubl
insl
or
dec
movsb
add
orl
or
mov
ja
dec
add
sub
xlat
add
aam
cmp
adc
dec
jmp
ja
je
pop
data16
outsb
push
loopne
or
mov
dec
mov
pusha
push
xor
int
cs
lods
jmp
out
pusha
popf
sub
dec
test
pop
pop
and
mov
jg
push
stc
cmp
insl
sarb
sub
outsb
aaa
addr16
bound
aad
inc
fidivl
sub
outsl
sub
stos
std
jb
mov
stos
imul
push
jb
imul
inc
lods
loop
cwtl
decl
int3
mov
adc
les
fdivl
ficoml
push
fisttpl
add
aas
mov
cmp
mov
cmc
clc
sub
dec
push
xor
jnp
pop
int
and
lcall
jecxz
push
fnstenv
dec
and
ret
stos
xor
pop
and
loopne
movsl
sbb
in
js
sub
mov
sbbb
sub
lahf
or
push
arpl
jb
aam
or
orb
shlb
dec
push
cmp
lods
xchg
lret
mov
loope
dec
fisubs
dec
inc
fstpt
mov
push
dec
or
push
sbb
in
mov
bound
sub
mov
loope
push
add
in
outsb
xor
icebp
clc
pop
jmp
mov
mov
je
inc
imul
xchg
into
fcomp
rorb
jg
ss
sbb
sub
ss
push
das
pop
dec
aad
lret
xchg
fbld
int
and
cmpsl
mov
mov
lcall
mov
mov
push
xchg
fcompl
movsb
cmc
jecxz
mov
lds
dec
push
add
je
xor
sahf
xchg
dec
or
add
push
and
popa
push
int
dec
pusha
jae
adc
cld
dec
fmull
jbe
sub
adc
lds
cmp
mov
loop,pt
inc
in
icebp
add
fstl
adc
adc
cmp
loope
jae
fstl
sbb
sarb
push
andb
xchg
bound
pop
jne
mov
movsb
ljmp
mov
das
xchg
adc
cmp
add
subb
fldcw
ret
mov
sub
in
shlb
sti
adc
stos
cmp
das
cmpsl
movsb
fsubrp
or
sub
out
lods
xchg
cmp
mov
imul
jl
jmp
fcompl
jns
dec
mov
jecxz
cmp
subb
out
dec
call
jb
movsb
stos
enter
dec
dec
mov
lea
xor
lock
movsl
mov
addr16
jns
xlat
push
sahf
xor
mov
xchg
rcrb
jl
add
pop
sub
jmp
in
lcall
adc
jp
stos
sbb
dec
or
push
adc
stos
mov
and
push
cmc
push
std
sbb
inc
adc
cltd
mov
scas
addr16
imul
ljmp
cli
cmp
bound
and
cmp
mov
into
and
lret
adc
fcoms
or
shll
scas
shlb
cmpsl
fsubrs
int
inc
push
adc
fs
mov
leave
pushf
sbbl
clc
cmp
aam
pusha
xor
pusha
sbbl
les
dec
cmp
scas
pop
xchg
aas
cmp
aaa
loope
stos
dec
push
jae
loopne
in
and
sub
cmp
or
dec
movsb
xchg
aad
pushf
xor
jns
inc
xor
cmp
jae
xchg
fistl
cld
imul
xchg
rcr
ret
aaa
push
and
cmp
jno
jb
in
loope
stos
xchg
lcall
lds
mov
jnp
cmpsl
jge
fs
and
icebp
inc
inc
mov
mov
dec
dec
add
insl
pop
mov
cltd
mov
or
mov
ret
pop
dec
in
repnz
popa
mov
adc
aas
fdiv
mov
push
icebp
enter
fildl
movsb
mov
pop
mov
shl
stos
dec
cld
xor
out
adc
cmpsl
mov
jae
rclb
popa
bt
stos
lret
pop
les
lret
adc
les
movsb
mov
fdivr
in
dec
jg
mov
pop
xchg
jl
inc
iret
xchg
adc
out
je
or
pop
xor
mov
outsb
into
jmp
stos
pop
pop
sbb
mov
sub
and
inc
xchg
nop
inc
into
leave
ss
icebp
je
jns
icebp
out
outsl
mov
gs
mov
out
sbb
xchg
adc
test
repnz
cwtl
divb
mov
repnz
inc
mov
push
push
data16
movsb
sub
push
repnz
leave
jo
inc
add
lret
insl
jl
cmp
jno
push
loopne
push
in
ret
flds
decb
mov
cmp
daa
push
push
loopne
adc
enter
mov
lock
adc
inc
cmp
popa
stos
in
hlt
insb
lcall
mov
jmp
xchg
sub
or
xor
push
xchg
insb
sub
out
shrb
ss
xor
adc
jb
subl
sub
aad
cmp
pop
arpl
sbb
cli
pop
and
rcrb
mov
push
rorb
cmpsl
sub
into
cmpsb
xor
movsb
jo
popa
mov
pop
xor
adc
data16
pop
in
mov
cmp
das
cwtl
movsl
xor
fcomi
in
repz
push
call
or
imul
ret
jns
adc
lret
push
sub
stc
sub
jne
or
add
mov
adc
outsb
les
push
lea
lcall
mov
lahf
mov
dec
or
cmp
lret
fs
bound
pusha
pop
cmc
dec
mov
cmp
xchg
jbe
adc
into
push
xor
je
push
and
mov
enter
dec
push
pushf
push
insb
stc
call
inc
pop
jp
sahf
stos
imul
add
pusha
bound
push
ret
sub
enter
sahf
je
cld
push
adcb
xchg
mov
jp
xchg
es
pop
iret
push
cmp
xchg
push
xchg
insl
ja
lcall
sbb
or
mov
xchg
mov
lods
sub
call
jae
push
std
sub
mul
sbbl
es
jle
push
sbb
dec
in
test
pop
mov
pop
dec
dec
mov
mov
cmpsl
insl
mov
sub
cs
pop
pop
rcrb
and
mov
xor
movsb
fistpll
subb
jbe
icebp
jmp
pusha
sub
push
xchg
fcmove
push
xchg
inc
sub
inc
call
mov
jge
out
mov
sbb
lock
into
iret
sub
cmp
cmp
leave
pop
mov
icebp
xlat
jae
xchg
mov
aam
pushf
jns
imul
xchg
cltd
js
orb
in
cmp
test
xor
mov
mov
mov
rorb
iret
jmp
pop
pop
aad
jecxz
mov
dec
enter
test
aad
mov
imul
xor
cmp
mov
dec
cwtl
dec
pop
sbb
std
test
mov
jo
mov
jp
jne
sub
rorl
mov
pop
dec
push
jns
jb
lock
movsl
jb
jp
mov
andb
sub
scas
imul
or
daa
fcoms
pop
and
sub
movsb
dec
pusha
leave
mov
xor
mov
dec
push
aas
mov
adc
mov
arpl
add
pushf
sbb
mov
mov
sub
cmpl
aas
loope
addr16
stos
or
xor
pop
shlb
push
ret
sub
jb
mov
dec
push
in
cltd
sub
leave
adc
dec
ljmp
std
in
xchg
call
mov
mov
jns
sub
sbbb
mov
jb
mov
cmp
jle
pusha
pop
fwait
adc
shrl
cmpsb
xor
insl
insl
lock
or
xchg
jmp
adc
pop
mov
into
jp
jnp
push
mov
xchg
aaa
xor
mov
mov
incl
push
js
das
xlat
stos
mov
pop
mov
pop
and
push
lahf
lcall
lds
sub
inc
xchg
bound
adc
adc
shrb
dec
call
cs
xchg
push
sub
mov
mov
hlt
add
add
test
pop
loopne
lret
daa
or
sub
jle
cmp
mov
outsb
push
call
push
xchg
jg
in
adc
ds
pop
sbb
rolb
out
fwait
dec
repz
imul
adc
sbb
and
nopl
or
or
andl
add
sub
lea
mov
or
and
add
ss
lds
pusha
test
stos
and
sub
jmp
lock
stos
shrl
xchg
sub
hlt
ljmp
push
add
icebp
repz
adc
mov
imulb
movsb
sub
aam
bound
lods
xor
movb
movsb
xlat
cmp
jns
inc
imul
idiv
sbb
in
loope
in
pop
fsubs
pop
mov
adc
or
mov
aaa
cmpl
sub
test
jno
add
stos
out
fcoms
rorl
out
jns
mov
fldt
sbb
sub
add
sbbb
movsl
orb
les
into
pusha
loope
cmp
xchg
pop
jb
fisubl
stc
je
sbb
int
dec
sbb
push
popa
mov
and
cmp
pop
push
ret
icebp
stc
xorb
int
test
das
arpl
lods
mov
lcall
xor
pop
lcall
jo
movsb
jecxz
jns
aas
push
aad
pop
xchg
sbb
rol
ljmp
and
jae
adc
push
fsts
test
aaa
lgs
call
or
cmp
loop
jmp
imul
ret
xor
mov
ss
mov
dec
mov
cmp
dec
push
sbb
add
jmp
aam
xchg
push
sub
outsb
pop
xor
sub
add
ja
je
scas
jae
mov
and
xor
pop
mov
pusha
xchg
mov
xchg
test
pop
xchg
cmp
xchg
ja
enter
fmull
bound
sbb
sub
jb
mov
pop
dec
int
push
pop
lea
add
lea
lret
mov
enter
push
jge
insl
les
adc
fucomip
gs
jl
cmpsl
js
mov
inc
xchg
and
lcall
in
push
pop
push
jnp
add
lret
mov
sti
repnz
nop
add
hlt
sub
ret
dec
sub
aam
pop
out
mov
dec
pop
out
mulb
stos
fcomp
pusha
and
int
xor
add
sub
ja
insb
jbe
fstpl
push
adc
cmc
js
add
add
nop
xor
lods
xchg
xchg
add
lods
lret
or
ret
movsb
ss
aam
mov
sbb
jmp
mov
mov
add
lret
sub
xchg
push
sub
push
pop
mov
movsl
jnp
movsl
and
pop
js
in
shlb
insl
push
sbb
inc
enter
pop
xchg
int3
mov
inc
orb
xor
and
outsb
and
mov
out
inc
mov
aam
cmp
cmpsb
mov
xor
xor
stos
cwtd
push
aam
mov
xchg
in
cwtl
inc
hlt
ficoml
cmpsb
jne
arpl
mov
cmp
gs
or
and
loop
int
js
or
mov
test
cs
mov
mov
mov
pop
or
cmp
mov
neg
outsb
and
fadds
mov
xor
mov
mov
fcoms
js
xor
out
add
or
fdivs
xchg
lods
repnz
jo
pop
xor
das
stc
push
aad
adc
out
jl
sbb
pop
js
xchg
fdivs
cli
fwait
or
mov
in
popa
xlat
and
mov
xchg
scas
popf
mov
fidivs
cwtl
out
stos
mov
xor
cmc
movsl
loope
sub
ret
cmp
xor
sbb
adc
sub
xorb
fcoml
jb
mov
outsl
dec
dec
gs
sub
jecxz
push
fisttpl
mov
xchg
add
into
add
dec
mov
jmp
adc
mov
jb
lret
movsb
es
pop
or
mov
push
call
bound
lock
mov
loop
jbe
clc
jmp
add
add
add
stc
leave
mov
out
adc
sub
fdivs
dec
xchg
lea
insb
lcall
jge
lret
shrl
mov
sbb
push
sbb
movsb
cli
pop
fimull
or
jge
popl
loope
imul
dec
xchg
mov
dec
jns
xlat
pop
testl
aaa
jnp
xor
mov
xchg
mov
pushf
inc
cld
aas
mov
je
add
xchg
aas
adc
xchg
stos
sub
sub
cmp
movsb
pop
testb
jo
xor
push
mov
insl
negb
js
dec
stos
test
lods
scas
rcll
inc
sub
xchg
add
cmc
shlb
ds
cli
push
test
push
aas
pop
xchg
leave
push
xor
inc
mov
rorb
pop
loopne
sub
push
fdivrs
pop
icebp
push
loop
xchg
cmp
mov
jecxz
in
mov
icebp
arpl
aaa
movsl
inc
test
mov
outsl
pop
xchg
fcoms
pop
les
imul
jecxz
stos
scas
xchg
mov
sub
xor
lcall
mov
adc
and
mov
mov
pop
xchg
int
out
nop
push
and
das
lods
outsb
out
stos
xor
call
cmp
jae
xorl
xor
mov
fdivr
ret
cwtl
decb
mov
icebp
stos
dec
push
enter
sbb
xor
push
or
cmp
mov
jge
cmpsl
ficoms
sub
sub
scas
xchg
iret
adc
dec
sbb
jae
pop
xchg
sub
lret
fisttpl
sahf
jo
jge
les
loopne
mov
jae
mov
ljmp
cmpsb
insb
out
das
insl
xchg
mov
pop
gs
push
pusha
mov
mov
xchg
push
add
mov
inc
jmp
push
pop
sbb
mov
out
into
call
dec
inc
stc
sahf
dec
in
push
inc
fimuls
addl
sub
adc
jmp
sbbl
add
stc
cmc
cmp
mov
adc
add
mov
pushf
cmovl
push
pusha
cmpsb
inc
pop
dec
decl
cltd
in
xchg
leave
mov
mov
push
sub
mov
das
stos
lods
push
xor
or
das
add
jle
xchg
or
push
addl
movsb
add
sub
fiadds
mov
lcall
and
leave
pop
outsb
cld
jb
mov
xor
sub
xchg
lods
ljmp
outsl
aad
sbb
adc
cmp
mov
leave
mov
mov
negl
mov
out
in
nop
pop
jb
xchg
ret
mov
addr16
sub
icebp
jmp
cs
dec
call
push
dec
dec
loop
fs
sub
fildl
imull
sbbb
jl
movsb
out
hlt
fsubrs
sahf
adc
or
movb
imul
push
xchg
push
aaa
out
bound
adc
xchg
int3
pop
fnsetpm(287
movsl
xchg
lret
mov
stc
loope
lods
adc
ja
es
pusha
jae
and
iret
jmp
xchg
sub
lock
pusha
add
cmc
outsb
sbb
push
popf
insb
jae
sbb
popf
push
mov
adc
mov
and
mov
mov
adc
rcll
pop
mov
and
or
cmp
sub
pop
lods
test
xor
mov
ss
insl
pushf
jp
pop
jns
stc
jle
jecxz
mov
subl
fstpt
jg
sub
mov
aas
xor
cltd
inc
fbld
enter
push
push
out
scas
sahf
push
sbb
js
mov
inc
sub
int3
sbb
outsb
jae
jb
ret
xor
into
imul
repnz
fisubrl
cmp
inc
unpcklps
jg
lret
inc
push
xchg
bound
clc
imul
nop
pop
cmp
ret
fucomip
dec
push
sbb
dec
mov
fwait
push
mov
mov
shrl
add
into
fisubrl
pop
inc
xor
add
stos
loope
dec
mov
mov
inc
push
js
in
inc
jbe
xor
push
cmpsb
outsb
int
movsb
push
in
xchg
mov
stos
jo
scas
inc
pusha
push
add
cli
in
insl
cmp
test
and
add
and
mov
mov
sub
ja
pop
dec
pop
jmp
insl
pop
dec
repz
xor
pusha
mov
sahf
mov
mov
in
hlt
imul
cmpsl
cmpsb
lods
sbb
repz
aas
mov
xchg
insl
dec
cs
nop
xlat
jp
add
sbb
dec
inc
cld
mov
add
inc
scas
hlt
and
repz
ljmp
cld
push
or
std
ss
mov
pop
cwtl
mov
clc
insl
jne
js
sbb
mull
push
outsl
scas
xor
add
mov
loop
les
pop
nop
push
pusha
mov
add
repnz
push
popa
adc
push
jbe
mov
mov
mov
pop
repz
pop
sbb
mov
dec
sbb
fidivl
andl
sbb
ror
mov
scas
mov
cmp
leave
rcl
loope
fidivl
out
nop
adc
push
les
push
mov
mov
test
out
orl
push
push
fistl
push
or
fdiv
jg
sbb
in
test
scas
stc
shrl
or
int
pusha
sbb
pop
and
mov
push
ret
mov
jb
add
into
lcall
aaa
cwtl
das
mov
test
push
loope
xchg
out
adc
dec
push
int3
sub
mov
sub
dec
xor
jno
dec
dec
ljmp
fildl
pushl
mov
leave
push
pushf
mov
aad
cltd
mov
add
das
fisubrs
mov
pusha
sbb
jecxz
pop
push
jmp
cmc
cmpsb
push
inc
mov
cmp
add
pop
mov
push
mov
call
cltd
sub
add
mov
in
rorb
sti
xlat
jg
cwtl
dec
and
frstor
dec
mov
mov
popf
push
lods
sub
push
inc
fistpll
add
xchg
mov
leave
stos
das
xor
pop
in
add
lods
popf
xchg
push
jns
jno
repnz
insl
int3
in
xlat
mov
add
inc
gs
and
lock
enter
xchg
mov
subl
ja
pushf
ret
mov
test
out
mov
insb
iret
mov
mov
mov
inc
jno
jno
daa
inc
mov
jb
cltd
insb
ja
mov
insb
into
aas
call
push
fsubrp
mov
mov
fimull
push
shlb
test
std
test
das
sbb
ss
loop
es
je,pt
cmc
inc
mov
daa
xlat
pop
aad
xchg
push
sbb
ficomps
dec
push
jge
xor
int
in
dec
push
call
shll
lret
push
movsl
push
xchg
pop
sahf
or
lcall
dec
insl
jnp
and
sub
mov
test
nop
or
pusha
xor
xchg
and
pop
cli
sbb
mov
fwait
sub
or
shll
xlat
push
inc
clc
jne
jl
sbb
dec
pop
dec
imul
imul
sbb
cmp
notl
leave
mov
stc
jne
lret
sub
dec
inc
pop
xchg
xchg
adc
push
enter
jne
mov
lret
mov
sub
into
lods
jmp
sbb
popa
pop
sti
push
cmp
fcoms
cs
pop
and
jnp
push
imul
shrb
imul
jb
mov
cmp
push
push
scas
ret
rcll
push
or
mov
and
movsb
ja
mov
shr
aas
xchg
push
shl
push
mov
cltd
hlt
outsl
ds
sub
pop
push
sub
je
cmpsb
mov
and
or
pusha
clc
test
fwait
outsl
and
insb
and
fsubs
xchg
adc
aam
push
pop
js
les
in
push
inc
movsl
pop
xor
insb
movsb
insl
add
sahf
mov
push
push
les
mov
iret
add
fs
lods
mov
popf
cltd
dec
pop
pop
add
test
iret
sbbb
mov
cmp
sbb
scas
fnstsw
imul
fiadds
pushl
ss
lret
insb
popf
mov
or
fwait
sub
ret
inc
bound
xchg
jne
mov
xor
mov
movsb
mov
movsl
inc
mov
and
xor
add
jg
jp
mov
inc
adc
in
mov
xchg
sbb
outsb
rcrb
fidivs
cli
push
pop
pushf
mov
add
push
sbb
ficoml
pop
push
mov
enter
repz
clc
add
jecxz
scas
xchg
lods
push
jge
fsubl
loope
scas
clc
cmpsb
or
add
jo
push
iret
fsts
nop
sbb
xor
test
cmc
add
xor
mov
out
imul
mov
call
rcl
xor
sub
mov
dec
bound
ss
mov
inc
gs
ficompl
mov
mov
aas
push
flds
add
jmp
pop
add
add
mov
mov
dec
jmp
lret
mov
inc
cli
adc
insb
insl
push
and
add
mov
ljmp
pop
jo
sbb
stos
dec
inc
mov
xor
mov
cmpsl
jne
xchg
lds
push
dec
jl
enter
sti
insb
mov
ljmp
jns
rolb
fsubr
push
jp
bound
sub
and
pop
or
xchg
and
out
lock
repz
and
and
sub
add
bound
ds
movsb
out
addr16
sbb
adc
imul
shll
mov
push
inc
push
movsb
jno
mov
ficoms
pushf
push
scas
sti
bound
mull
movsb
mov
and
adc
xor
in
jb
mov
push
lods
enter
mov
cmp
cmp
cli
imul
add
sub
mov
xor
pop
jge
shrd
jecxz
xor
push
push
sti
mov
jmp
mov
scas
xchg
clc
adc
sub
lahf
push
aaa
js
push
xchg
scas
add
fcomps
adc
jmp
movsb
test
push
dec
dec
aaa
lods
pop
sarl
fsubrp
lret
out
jb
test
and
sub
ds
int
dec
cmc
or
popf
or
out
sahf
je
push
dec
cmp
sub
ljmp
sub
push
lret
or
xor
dec
movsb
mov
int3
loopne
inc
stc
sub
mov
cmc
es
movsb
scas
inc
push
add
push
jo
mov
decb
pop
push
sbb
shlb
adc
lods
and
push
jle
movsl
pop
sbb
or
xor
mov
push
jmp
inc
fsubs
mov
mov
scas
cmp
ds
adc
jns
inc
fimull
mov
arpl
clc
pop
dec
xor
sti
dec
repnz
divb
mov
in
sub
popa
jo
dec
inc
pop
cld
cmp
lret
rclb
push
js
pop
jmp
xor
dec
mov
cltd
sub
add
dec
pop
sub
mov
cmp
sbb
pop
jne
jg
adc
mov
mov
pop
adc
mov
inc
sub
add
lret
jae
ss
xor
mov
add
repnz
add
int3
xor
fcomi
out
adc
rclb
pop
stc
pop
lea
cmp
repnz
lds
es
leave
jmp
jecxz
sahf
xor
fidivl
rcrl
insb
sub
nop
cmp
popa
push
cmc
mov
push
sub
xlat
movsb
sbb
cmp
lods
ret
lea
mov
or
imul
fcmovne
xchg
jnp
dec
loope
sub
sbb
ror
fcoms
test
inc
movsb
xlat
cmpsl
mov
pushf
pop
test
les
mov
sahf
divb
add
call
in
and
mov
notl
mov
pop
mov
mov
push
movsb
pusha
xchg
push
nop
loopne
aas
out
gs
iret
les
xchg
jbe
or
stc
mov
mov
dec
pop
inc
aaa
xchg
dec
sub
mov
cs
test
dec
xor
sub
movhps
pop
nop
test
in
je
fisubrl
jmp
xchg
xchg
fwait
lds
je
or
adc
repz
dec
std
jb
xchg
inc
xor
xchg
adc
add
popf
xchg
sbb
sbb
cmpsl
and
in
subb
hlt
mov
scas
ss
or
mov
pop
rcl
cs
mov
pop
mov
fidivs
cmp
movsb
loopne
test
gs
leave
dec
ret
in
lods
mov
push
sbbb
icebp
mov
jns
push
jge
out
cmp
lcall
dec
dec
movsb
add
into
mov
ljmp
push
inc
out
inc
ret
xor
fcom
inc
jecxz
outsb
pushf
and
mov
push
sub
mov
ficoms
enter
loopne
js
cmp
xor
fcoms
movsb
mov
mov
push
mov
xor
sti
pop
mov
imul
in
adc
mov
pop
add
and
pop
add
push
mov
mov
xor
dec
dec
mov
adc
repnz
sbb
lods
addr16
mov
xchg
push
test
aas
mov
out
fucompp
repz
add
aaa
xor
inc
xchg
dec
loope
sbbb
dec
movsb
repz
lcall
pop
scas
ss
dec
cmpsb
push
mov
and
imul
fsubl
cltd
cmp
dec
int3
sub
add
inc
sbb
fisubl
cmpsb
addb
scas
je
imul
or
sub
cltd
push
int
mov
nopl
pusha
push
sbb
push
cld
outsb
push
jo
ficoms
fildll
dec
psrlw
jg
dec
shlb
sub
movsb
shrl
bound
das
mov
sti
inc
std
stos
scas
clc
push
repz
dec
pushf
jnp
inc
scas
jnp
cmovae
add
out
inc
mov
out
push
call
cmpsl
jp
hlt
mov
fwait
in
pop
fsubs
mov
xchg
mov
mov
push
cmp
cs
pusha
fidivrs
aad
subb
or
push
dec
fidivrl
mov
add
sbb
xlat
xchg
and
mov
movsl
pop
sub
sahf
stc
out
jne
cmpsb
pop
ljmp
mov
or
lahf
push
iret
data16
adc
outsl
outsl
mov
dec
xor
pop
test
aaa
inc
mov
call
jne
jno
dec
cmp
mov
jbe
jne
enter
push
bound
outsb
dec
out
stos
aam
addr16
adc
mov
fs
cmp
mov
dec
or
mov
xchg
xchg
lods
pop
add
cmpsl
jge
sbb
cmc
cmpsb
mov
cmp
push
xchg
stc
shll
pop
pop
mov
cld
xchg
dec
pusha
stc
jmp
mov
or
mov
lods
mov
pusha
jl
inc
xor
ljmp
int3
jmp
rcll
xchg
mov
shlb
fwait
xor
iret
mov
mov
pop
sbb
xor
cli
xor
or
push
or
mov
xchg
subb
mov
sbb
iret
lea
mov
out
dec
mov
es
cmp
push
or
adc
and
cmpsb
scas
xchg
sbb
fldt
dec
inc
dec
mov
adc
test
adc
xchg
mov
out
adc
das
dec
mov
pop
imul
dec
fisubl
in
out
cmpb
sub
nop
out
insb
push
push
cmp
jns
loop
rclb
xorb
sbb
in
xor
and
mov
mov
sbb
xchg
sbb
push
adc
icebp
test
enter
adc
xchg
mov
jl
mov
int
jmp
mov
sub
insb
and
jl
pop
add
stc
rcl
movntq
dec
push
movsb
sbb
dec
cmp
dec
test
inc
dec
stc
pop
or
mov
xchg
xor
pop
xor
stos
pop
xor
xchg
fsubs
aad
adc
cmp
adc
bound
pusha
jne
testl
jbe
iret
stos
jbe
sbb
ljmp
movsb
inc
call
jp
mov
stc
rcl
xor
and
and
jg
add
jno
int3
xchg
lret
call
icebp
pandn
fsubrs
aaa
sub
fmuls
and
repnz
popf
pop
pop
or
out
not
aam
inc
jecxz
imul
sub
lods
add
dec
stos
mov
sahf
pop
fwait
xchg
ret
push
push
fwait
out
sub
sub
mov
mov
in
andnps
jnp
pushl
xchg
rcr
or
shr
push
sti
aas
test
pop
scas
and
adc
add
or
jl
movsb
es
shlb
xor
jge
push
mov
adc
stos
fldcw
imul
adc
jg
and
lcall
xchg
jmp
mov
stos
xor
icebp
push
xlat
call
push
dec
dec
andb
orb
mov
push
xchg
arpl
int3
call
inc
push
cwtl
jb
into
iret
add
loopne
add
pop
pop
icebp
stos
xchg
repnz
lds
pop
pop
sbb
and
out
movsl
cmp
mov
or
loopne
add
jmp
fsubrs
test
movsb
fs
movsb
mov
arpl
jae
push
inc
mov
xor
jne
mov
push
int
ss
arpl
imul
fwait
push
insb
sbb
push
hlt
or
jmp
or
outsl
pop
mov
in
popa
push
movsl
sahf
adc
repz
xchg
shrb
mov
fnsave
push
sbb
popa
dec
pop
fisubl
scas
div
sub
push
adc
lcall
pusha
into
popf
add
sbb
sbb
dec
dec
mov
inc
cs
cmp
jno
lock
ret
test
andl
mov
mov
cmp
notb
adc
cwtl
push
lods
push
push
cli
daa
outsb
push
iret
add
insb
les
add
js
shlb
cld
dec
insb
adcl
sbb
sbb
insl
scas
cmc
cltd
pusha
pop
xlat
cmp
xchg
xor
fistpl
mov
mov
push
sub
sub
mov
mov
pop
das
or
mov
ret
addl
or
cwtl
mov
push
lods
inc
adc
movsl
ret
sbb
pusha
fwait
mov
leave
sbbl
jb
iret
and
aam
dec
lock
stc
sbb
sub
mov
mov
and
sub
aad
jmp
ss
dec
outsb
sbb
mov
pop
andb
hlt
mov
invd
and
lahf
out
jmp
sub
sahf
add
lret
cli
push
movsb
cwtl
outsb
addr16
mov
push
stos
jmp
mov
mov
or
daa
dec
inc
inc
adc
push
dec
xor
jge
push
pusha
fdivrs
push
movsb
lret
adc
lcall
mov
cwtl
pop
mov
mov
repz
dec
pop
clc
popa
daa
jb
and
mov
bound
pop
dec
or
pop
mov
push
sub
outsb
and
js
jmp
pop
jge
add
push
fbld
xchg
dec
lods
in
int
mov
pusha
cs
sahf
bound
mov
cmp
arpl
inc
push
jmp
mov
lods
leave
push
adc
pop
sub
push
and
loop
das
cmpsb
jp
int3
mov
adc
bound
addr16
mov
dec
dec
xchg
outsl
or
add
dec
jge
sub
and
aaa
jo
cmp
and
call
jne
xor
lods
adc
adc
adc
jecxz
addr16
sti
ss
xchg
int3
lds
add
jmp
add
adc
cmp
aam
pushf
lahf
pop
into
hlt
mov
mov
dec
ret
jnp
inc
into
mov
es
mov
stos
aad
lods
push
lahf
nop
sbb
add
cmp
inc
push
add
call
xchg
scas
movsb
cmp
insl
mov
pop
fwait
push
negl
push
loope
insl
mov
pop
sub
movsl
or
sub
fs
fnstenv
cmp
das
mov
fadds
fyl2xp1
test
cmp
lods
jno
loopne
test
mov
push
mov
les
and
cld
push
mulb
icebp
ja
scas
fidivs
jne
lret
xor
xchg
mov
stc
ficoms
mov
hlt
fisubrl
pop
pop
leave
xor
pop
scas
mov
leave
pop
xorl
movsb
push
stos
imul
xor
ss
push
push
xchg
insl
or
lret
push
incl
mov
and
mov
loopne
nop
bound
mov
es
push
sub
es
push
xchg
cmp
jae
pop
pop
lds
push
xchg
jne
mov
push
xchg
gs
repz
sub
mov
push
mov
mov
lcall
xor
call
lds
dec
sbb
clc
and
test
cwtl
add
repz
scas
out
call
xchg
ret
and
fsubrp
sbb
fmuls
movaps
and
inc
xchg
mov
enter
jno
and
enter
jmp
mov
xchg
aad
mov
cld
out
dec
sub
imulb
add
mov
inc
imul
mov
xor
or
sub
fimull
sbb
sub
sub
mov
or
mov
xlat
mov
xchg
pop
mov
or
std
subb
xchg
jge
adc
scas
in
mov
cmp
ret
push
call
jg
xor
into
xchg
cmp
scas
outsl
add
ss
mov
lahf
sahf
leave
sahf
loope
sub
mov
sub
jb
mov
int3
test
dec
stos
pop
add
jne
jmp
inc
mov
lods
mov
mov
aaa
clc
testb
sbb
movsb
ss
mov
sub
and
ljmp
inc
jle
mov
xchg
mov
inc
clc
call
add
into
xor
jno
sbb
add
repnz
jae
or
sub
mov
xchg
ret
mov
movsb
and
cmpsb
adc
cmp
inc
les
stc
jmp
lcall
jp
mov
ss
cmp
xor
sub
and
shr
sbb
fnstenv
imul
das
dec
aad
inc
and
iret
in
cmp
das
mov
cmp
or
xchg
push
jbe
decl
sub
mov
daa
lock
pop
pop
mov
hlt
xor
iret
mov
shr
jmp
adc
pushf
int3
and
dec
sub
idivl
nop
push
and
cmp
inc
fnsave
sbb
sbb
push
and
mov
push
lds
dec
ret
cs
push
out
out
in
sbb
rorb
jecxz
insl
into
dec
hlt
aad
jne
movsb
lcall
out
adc
mov
scas
js
xor
fidivs
add
push
into
fcomps
out
fdivrs
mov
jne
cmp
in
sbb
and
clc
xor
xor
vandnps
sub
out
lock
pop
jae
dec
push
fisttpll
outsl
xorl
subb
lods
sbb
sub
cmp
jo
loopne
push
push
movsb
pop
or
pusha
push
mov
and
rcrb
ss
jbe
xchg
cmp
mov
cmp
lods
ret
sbb
add
jo
cmc
sub
pusha
ljmp
inc
push
inc
sbb
xor
jbe
sbb
jmp
stos
push
rep
loope
enter
dec
add
int3
repnz
xlat
call
cmp
xorb
lea
xchg
mov
mov
push
jo
popa
enter
xchg
movsl
or
inc
rol
mov
dec
pusha
scas
mov
xchg
cmp
jmp
add
test
jg
cltd
fidivs
sbbb
out
pop
les
adc
aad
cmpsb
out
jo
cmp
push
dec
sub
aaa
dec
movsb
int3
pause
mov
addr16
pop
int3
jae
movsb
das
inc
stc
mov
cltd
repz
std
in
jb
push
push
jb
xchg
push
pop
in
inc
fstps
jecxz
mov
mov
es
and
lds
out
mov
test
cmpsb
adc
fldenv
xchg
mov
inc
pop
jbe
nop
xlat
sti
adc
xchg
push
out
ljmp
cmp
iret
in
ljmp
push
cmp
or
cmp
ja
or
mov
sbb
shrb
sub
sub
adc
lods
push
call
adc
aaa
sub
push
andl
sub
cmc
rorb
sub
xor
jns
cmp
je
movsb
orb
mov
ret
fcmovbe
gs
ret
lea
jbe
gs
cmp
xor
hlt
mov
mov
jmp
mov
cli
movsb
jo
roll
stos
push
std
andb
repz
int3
inc
rcrl
xchg
bound
lods
pop
mov
pusha
and
sbb
leave
sahf
ja
mov
lods
rcll
out
xchg
psllw
mov
out
imul
in
test
pop
sti
mov
lret
dec
jnp
or
hlt
movsl
ljmp
sti
sub
movsb
lods
jge
arpl
sbb
adc
call
imul
mov
cmp
fs
into
movsb
dec
into
xor
ret
xchg
gs
psllw
xchg
insb
out
fisubrs
outsb
fsubrs
push
out
mov
js
cmp
sarl
imulb
cmpb
lcall
fidivrs
adc
dec
dec
aam
popa
ficomps
push
sbb
jnp
xchg
sbbb
ljmp
mov
sbb
inc
dec
sub
sub
pop
mov
xor
insl
shrl
jmp
and
lods
aad
add
jg
adc
and
pushf
aas
xorb
andl
add
scas
cmpsl
inc
test
outsb
or
loopne
jbe
inc
inc
pop
ja
pop
hlt
or
mov
dec
xor
sbb
aad
add
in
jl
xchg
sbb
or
inc
fadds
cmp
jle
mov
addr16
rolb
mov
movsb
pop
aad
xor
mov
ss
pop
xor
pop
and
sbb
popf
mov
mov
in
pop
shll
shlb
push
lcall
add
cmpsb
adc
add
push
mov
dec
sti
adc
inc
dec
jb
cli
dec
xor
in
dec
mov
sub
fnstenv
aas
call
cmp
out
fisubrl
lahf
test
bound
dec
movsb
xor
enter
decl
movsb
dec
mov
xchg
das
pop
repz
cmp
pop
fsubrs
inc
out
into
mov
or
mov
stos
imul
lods
aad
sbb
data16
jbe
fdivrs
add
cmpsb
cmpsl
test
stc
insl
sbb
out
sub
xchg
in
and
sahf
dec
sub
loop
ret
out
or
xchg
or
mov
inc
fwait
push
pop
dec
enter
div
add
mov
cs
out
or
cwtl
xor
ret
insl
movsb
and
mov
push
mov
enter
bound
push
push
sbb
or
dec
and
cmp
sti
in
jb
cmp
cs
mov
sbb
jg
dec
mov
sub
mov
orb
adc
mov
sbb
ror
push
xor
clc
dec
xor
and
into
orb
cmpsb
adc
enter
xor
push
jnp
fidivs
movsb
jl
cld
jbe
or
shrl
das
lods
cli
nop
lods
jecxz
mov
fs
sbb
es
inc
sbb
inc
clc
dec
cli
and
je
insb
inc
mov
enter
push
das
cmp
inc
les
sbb
pop
pop
mul
adc
test
fldt
lods
into
leave
es
ljmp
inc
pop
outsl
or
fwait
dec
push
leave
jne
stos
or
outsl
ret
nop
out
dec
cmp
xchg
notl
lds
inc
aad
movsb
cmpsl
icebp
push
gs
fwait
cmpsb
cmp
push
mov
pop
movsb
int
mov
mov
inc
mov
xchg
hlt
repz
in
add
and
stos
dec
push
pop
cli
les
mov
imul
sub
or
scas
jne
sub
shrl
add
mov
cmc
push
push
jmp
xlat
inc
mov
sub
cmp
add
movsb
mov
add
fcomps
ret
imull
insl
mov
adc
xchg
xlat
lods
xorl
mov
add
scas
sub
repz
lods
shlb
dec
enter
mov
sbb
mov
xor
std
popf
cmp
lcall
fisttpl
cmp
jbe
push
enter
out
sbb
pop
mov
mov
adc
and
fidivs
inc
cmc
xor
mov
mov
mov
sbbw
cmp
fstps
mov
lcall
cmpsb
test
daa
cs
movsb
leave
arpl
sub
xor
orl
xchg
pop
insb
in
add
mov
sub
mov
dec
and
mov
les
xchg
mull
dec
sub
in
jmp
mov
jns
fiadds
sbbl
popf
mov
cmpsb
outsb
sub
lods
ret
mov
mov
ret
xchg
jmp
push
jb
mov
cld
mov
adc
mov
mov
cmp
xchg
mov
scas
in
repz
or
lods
mov
sarl
xchg
sbb
pop
aad
ljmp
jb,pn
call
add
inc
lahf
outsb
inc
push
or
jmp
lahf
mov
testb
cmp
jle
push
daa
fimuls
fiadds
inc
aam
jbe
ret
movsb
or
mov
pop
outsl
jb
and
mov
insb
mov
dec
pop
sbb
pop
cmp
jns
testb
or
andb
adc
ja
jb
cmc
hlt
push
xchg
roll
jns
in
jbe
push
add
std
jnp
ficompl
mov
sbb
adc
push
mov
subb
rol
jnp
push
lods
add
xor
mov
pop
xchg
pop
les
data16
mov
lret
inc
jb
fdivs
in
adc
pusha
push
insl
mov
sbb
push
insb
or
movsb
inc
repz
sbb
pop
repz
add
or
clc
aam
repz
ljmp
jo
push
call
push
and
or
addr16
movsl
jmp
push
adc
mov
int3
xchg
dec
xchg
dec
push
pusha
aad
loope
push
cmp
jae
lcall
ljmp
hlt
ss
roll
shrl
pop
mov
adc
outsl
incl
push
pop
in
les
dec
dec
mov
add
test
lret
sub
dec
pushf
movsb
loope
clc
push
add
cmc
jb
ljmp
adc
imul
dec
shl
push
loope
pop
xor
push
mov
or
pop
in
sarl
xor
insl
ja
sub
mov
iret
adc
push
mov
in
repnz
test
lcall
insb
adc
jle
xor
rorl
ds
pop
into
in
and
scas
repz
frstor
add
orl
jmp
aas
in
subb
call
bound
das
fsts
xchg
or
movsb
mov
std
xchg
pop
fsub
mov
in
int3
outsb
addr16
test
aam
push
push
pop
mov
mov
cmp
jg
lcall
push
lods
or
adc
incb
idiv
hlt
cmovne
cmp
sbb
inc
add
jge
pusha
and
addr16
push
mov
add
cli
insb
lods
mov
stos
jp
push
adc
and
cs
addr16
inc
push
xchg
pop
aad
jbe
repz
xchg
scas
add
insl
mov
setae
sbb
add
sub
xor
and
mov
xor
out
mov
cmpb
mov
icebp
inc
insl
lea
lcall
push
lcall
jb
xor
mov
push
push
call
std
mov
xor
cmp
jl
mov
inc
push
cmp
jmp
test
push
lods
andb
rcrl
cmp
jno
es
movsb
pop
in
loope
repz
hlt
and
adcl
fdivrs
dec
adc
add
sbb
aaa
sbb
lcall
arpl
xchg
cld
fwait
push
adc
sub
adc
scas
adc
icebp
xchg
into
mov
add
mov
pop
jo
jecxz
fdecstp
mov
push
sub
jecxz
sub
movsb
mov
arpl
dec
icebp
mov
pop
data16
test
dec
mov
shll
sub
jb
jp
push
mov
mov
jo
or
roll
lods
mov
mov
mov
or
inc
jge
addr16
mov
jp
pop
iret
sbb
sbb
dec
push
push
in
push
and
loope
out
bound
mov
xchg
movsb
loope
mov
xchg
cmp
les
mov
js
loope
nop
cld
fcom
out
cmp
sbb
mov
icebp
cltd
adc
cmp
arpl
aam
es
mov
push
cmp
hlt
xchg
outsb
inc
je
jae
out
dec
xchg
enter
xchg
repnz
shr
push
xchg
and
dec
pop
push
push
mov
jo
rcrb
cmpsl
pushf
lds
negl
loope
ljmp
pop
xchg
inc
mov
jb
xor
int3
xlat
js
mov
outsb
test
pop
ja
xor
out
mov
jno
pop
pop
dec
jp
pop
das
lret
mov
dec
cmp
jno
add
iret
xchg
push
adcl
dec
jae
std
pusha
push
dec
enter
xchg
sbb
orl
push
push
lea
es
adc
hlt
mov
call
xchg
repz
mov
cmc
lret
cmp
stc
std
aam
pusha
incb
scas
dec
pusha
pop
ret
xchg
cmp
fcom
test
add
mov
cmp
shll
cmp
lahf
add
mov
stos
xchg
xchg
leave
jb
cltd
and
xchg
fildl
mov
sub
inc
movsb
mov
outsb
sbb
lcall
inc
aad
icebp
mov
aas
fdivs
push
mov
push
push
sarb
mov
mov
subl
fldt
ljmp
xor
xlat
lcall
cs
sbb
mov
call
mov
in
std
mov
pop
insb
xor
xchg
lcall
stos
pop
lret
mov
jmp
and
push
daa
adc
or
push
cwtl
sub
jle
mov
add
cmp
cs
outsl
mov
jp
add
and
adc
jae
sbb
loopne
push
mov
adc
ret
inc
inc
xor
jno
jnp
xor
lods
mov
and
cmp
shll
stos
rcr
pop
and
and
sub
inc
out
ds
push
adc
mov
ljmp
xor
stc
jae
inc
outsb
push
call
shlb
dec
es
rcrb
xchg
dec
sbb
fisubrs
mov
ja
sub
mov
push
sub
int
push
push
stos
shl
jle
movsb
push
cmpsb
pop
pop
xlat
popf
mov
pop
jle
mov
push
fiadds
movsl
loopne
push
test
test
push
pop
aad
add
clc
in
inc
push
cld
jb
inc
dec
jno
jge
inc
sbb
shld
xor
xchg
xor
lret
push
sti
aaa
adc
repnz
pusha
out
in
insb
xchg
out
popa
rcll
dec
jne
jns
cmp
popf
mov
add
pop
nop
dec
lods
test
addr16
cli
cmc
insb
test
xchg
leave
call
addr16
push
fnsave
inc
mov
jmp
addr16
loopne
push
fcmovnbe
lret
sub
mov
mov
dec
jbe
lea
push
mov
loopne
jno
sub
xchg
push
xlat
repnz
lods
sbb
jne
insl
orl
div
mov
je
in
add
pop
cmp
inc
cmp
xchg
iret
dec
idiv
gs
test
dec
ret
pusha
jp
idivb
enter
ss
or
rcrl
sub
xchg
cmpsl
ja
bound
les
sahf
and
xor
add
xor
pop
jne
cmpsb
push
xchg
fdivrl
push
shlb
pop
pop
pop
les
jle
pop
nop
push
scas
stos
lock
cs
stos
mov
sbb
aam
imul
fsubr
pop
faddl
push
pusha
repz
mov
ret
imul
mov
lcall
insb
addr16
dec
add
fldcw
add
lret
add
adc
hlt
dec
dec
lods
sub
cmpsl
push
andl
add
addr16
cmpsb
adc
movsb
imul
mov
dec
outsl
int
ficoms
orl
stos
lcall
mov
add
nop
or
jmp
add
lods
repnz
mov
in
scas
mov
or
lock
jns
and
sbb
cmp
fcomps
cmp
jmp
inc
das
jb
xchg
and
mov
push
scas
ljmp
jge
push
outsb
mov
sti
mov
dec
test
dec
hlt
pop
sbb
sub
jo
popf
xchg
push
repz
lcall
pop
pop
into
sub
mov
arpl
adc
pop
sbb
popf
hlt
adc
dec
or
out
cmp
inc
jecxz
adc
jns
mov
test
repnz
or
cltd
inc
bound
jb
dec
adc
inc
neg
cwtl
xchg
fbld
adc
cltd
shlb
cmpsb
mov
jb
mov
cmp
push
cwtl
dec
sub
fwait
data16
push
jge
imulb
jg
jecxz
sbb
aam
push
fsubrl
mov
aaa
lods
xchg
cmpsl
ret
sub
push
pop
xor
mov
pop
mov
or
aas
pop
xor
xchg
dec
and
into
sub
imul
mov
mov
sub
repz
ret
cs
xor
xchg
pop
jo
out
outsb
fs
movsl
movsb
rolb
lods
push
fxtract
adc
stos
imul
lea
push
xchg
jbe
and
sti
jg
mov
jbe
fs
push
jg
shrb
xor
inc
mov
call
dec
in
lcall
in
and
mov
cld
mov
mov
jns
arpl
out
pop
fwait
xor
icebp
sahf
jbe
push
add
stos
icebp
lcall
lods
repz
rcrl
jns
in
jne
dec
cmp
dec
xchg
aas
imul
and
dec
imul
cmp
add
xchg
int3
test
sub
pop
or
adc
bound
jmp
and
adc
mov
xchg
es
imul
icebp
cmp
push
push
aam
or
cli
add
jbe
push
scas
insl
jb
into
lret
mov
jmp
adc
pop
rorb
push
sbb
push
dec
aam
jnp
sub
adc
imul
mov
sub
push
dec
fadds
orl
imul
push
push
decb
dec
jne
inc
push
pusha
adc
or
andl
inc
push
mov
sahf
out
rcrb
xchg
sbb
mov
fld
lods
dec
icebp
mov
sub
or
aas
pushf
push
imul
jle
ret
js
mov
cmp
and
mov
int3
dec
mov
mov
dec
int
sahf
pop
xorl
movsl
faddl
rcl
or
mov
lcall
lds
testb
iret
int3
adc
jmp
repnz
lahf
push
dec
and
sti
inc
cwtl
mov
xchg
cmp
mov
jae
add
pop
dec
andl
pushl
jg
jge
dec
ret
movsl
scas
xchg
sbb
fs
mov
mov
je
jbe
cmpsb
ret
pinsrw
jb
ror
mov
xchg
dec
aas
or
mov
lock
pusha
scas
imul
mov
sbb
iret
dec
add
ret
stos
jle
mov
rol
mov
mov
gs
push
push
push
jle
divl
imull
jno
inc
mov
cli
andb
sti
lock
je
jne
cltd
cmp
mov
sbb
movsb
cmpsl
dec
push
gs
iret
cmp
rolb
scas
mov
dec
movsb
pop
and
cltd
repnz
outsl
mov
jno
dec
push
jnp
add
mov
pop
jb
sbb
or
pushf
jl
jmp
mov
inc
xchg
mov
push
incb
mov
xor
sti
andl
or
sub
inc
xchg
ret
movsb
sbb
and
fstps
addr16
jb
or
dec
xlat
arpl
sbb
fmul
shrl
sbb
mov
mov
out
cmp
mov
cs
xchg
lret
mov
jns
outsl
jb
jns
mov
jns
inc
or
into
movsb
mov
mov
add
ljmp
sub
cmpsl
popf
and
lods
movsb
push
jg
sarl
jbe
sbb
insl
mov
mov
xchg
add
loope
mov
push
ja
movsb
pop
stos
push
insb
add
and
int3
sbb
cmp
outsl
outsb
jb
dec
pusha
inc
rcr
das
cmp
and
es
inc
lods
pop
pushf
shl
and
jle
imul
adc
fidivrl
push
insb
test
cld
pop
fldl
jae
int
pushf
and
mov
dec
pop
loope
arpl
pusha
sub
sbb
push
mov
xchg
imul
adc
xor
sbbb
pop
dec
mov
mov
mov
repz
stos
inc
hlt
inc
ror
mov
loope
mov
popf
sub
movsb
scas
xor
call
xchg
push
sbb
pop
mov
cmp
test
fwait
nop
sbb
call
mov
lcall
xchg
cmpsl
std
lods
shll
nop
mov
loop
lahf
fstl
xchg
sub
js
aaa
movsb
push
mov
out
jae
xchg
adc
pusha
js
cwtl
cmp
xchg
je
sti
test
in
movsl
jnp
pushf
add
inc
xor
mov
ljmp
daa
ror
out
sub
popa
sbb
xor
lods
jne
push
add
push
mov
loop
and
mov
cmp
stc
push
addr16
fisubrs
ja
push
ficomps
lods
push
adc
pop
adc
fadds
lods
int3
pcmpeqw
rcr
jb
loop
xchg
lret
inc
inc
xlat
jle
pop
shrl
stos
inc
cmpsl
loopne
cwtl
adc
add
imul
and
mov
pusha
xchg
hlt
iret
outsl
cmpsb
dec
rcr
js
pop
ret
sub
sbb
orb
insl
push
xchg
inc
in
xor
leave
fmull
xchg
movsb
and
ds
cmp
xchg
ficoml
test
je
pusha
movsb
movsb
inc
and
dec
out
dec
or
adc
in
gs
jne
gs
push
popf
scas
xor
mov
mov
push
cmp
loopne
inc
mov
jo
loopne
repz
rorb
sub
lods
lods
sbb
xor
pop
repnz
mov
cli
lret
cwtl
xor
jmp
sbb
and
push
dec
jb
mov
call
fadds
and
stos
jmp
mov
scas
and
mov
and
lcall
test
lea
cld
mov
mov
ret
call
xchg
mov
push
stos
out
add
enter
push
mov
test
imul
jb
push
cli
jl
and
jge
dec
insl
push
in
xlat
movsl
mov
xchg
lea
xor
insl
cmp
mov
mov
mov
push
movsb
int
jne
leave
and
push
les
mov
push
bound
int3
sahf
add
out
pop
mov
std
jb
scas
fwait
sub
fcomip
movsl
adc
mov
in
jl
push
rorl
mov
and
xchg
loop
jb
out
mov
movsb
popa
xchg
push
ret
test
fs
sub
adc
jo
fcoms
mov
dec
movsl
push
push
movsb
add
xor
pop
cmpsb
sbb
sbb
push
stos
fpatan
sub
mov
popa
dec
shrl
xor
xchg
fs
adc
xchg
xchg
addr16
jecxz
fstl
xor
stc
loopne
add
ret
ret
in
stc
mov
int
jb
inc
les
and
dec
mov
imul
lahf
push
mov
mov
push
mov
sub
inc
std
in
cmp
stos
gs
ret
scas
movsb
sti
negl
jbe
sub
lods
lret
dec
sbb
dec
shrb
lcall
dec
aad
and
iret
jno
enter
jno
and
or
pop
xor
arpl
out
jae
pop
out
sub
aam
cli
adc
cmp
mov
insl
adc
xchg
lcall
mov
dec
insl
sbbl
lods
mov
dec
sub
sbb
aad
imul
outsb
in
xor
mov
jne
jb
mov
aam
push
movsb
push
clc
aas
insb
mov
mov
sbb
insl
addl
outsl
aas
and
cs
stc
ret
lret
adc
push
cmc
arpl
lea
out
inc
int
sbb
sbb
and
add
pusha
mov
clc
loopne
or
in
mov
jmp
add
mov
ss
jae
jl
xchg
mov
adc
leave
sub
dec
mov
pop
out
int
push
jle
hlt
insb
sub
fldt
lock
add
push
jno
out
cld
movsb
fsubrl
pusha
hlt
stos
mov
cmp
dec
and
cs
in
jecxz
mov
clc
push
ret
les
jae
aad
inc
jmp
mov
or
movsl
or
mov
dec
cli
insl
ljmp
stos
mov
push
sub
sub
aaa
das
mov
push
dec
sbb
hlt
loopne
xchg
inc
cmp
testl
out
mov
mov
push
jnp
aad
ds
pop
in
divl
shr
cli
ss
ficoml
fsubr
mov
aaa
inc
repz
mov
out
lock
jns
das
setbe
test
jge
iret
add
xor
ljmp
add
cmp
mov
mov
xchg
aaa
ljmp
imul
repnz
pop
jnp
and
sbb
std
aad
call
subl
push
pop
add
pop
push
sti
cmp
movsb
mov
leave
ja
addb
mov
arpl
jge
mov
test
mov
ret
adc
sbb
cs
stc
test
dec
outsl
loopne
jecxz,pn
xchg
cmp
pop
mov
int3
mov
mov
mov
repz
fbstp
inc
enter
ds
shrl
push
xor
mov
jns
lret
and
fwait
xor
or
mov
xor
sbbb
cmpsl
or
mov
nop
sub
sbb
adcb
test
jb
xchg
mov
aam
int3
mov
sbb
inc
aad
mov
fsubrp
fdivrl
fs
mov
xchg
shll
lods
sbb
adc
xchg
movsb
pushf
push
in
sub
xor
add
lret
aam
scas
leave
and
cmpsl
pop
mov
pop
mov
cmc
in
sbb
xor
fisubrl
jne
movsb
arpl
subl
cmpsb
sub
lods
and
dec
pop
movsb
cmp
shll
pop
cwtl
fistpl
clc
mov
cltd
adc
push
xor
jnp
jl
insl
popa
pop
rorl
fdivl
add
sbb
pop
cwtl
sarl
push
iret
mov
insb
aad
and
scas
and
rclb
daa
out
push
subl
mov
jb
xor
push
adc
mov
mov
inc
out
xor
and
loope
lock
mov
push
dec
test
mov
movsb
push
xchg
push
and
fidivs
mov
and
scas
dec
mov
ret
hlt
das
sbb
xchg
bound
xchg
xor
and
jecxz
ljmp
mov
adcl
jl
nop
aam
scas
jl
lcall
sbb
jno
fcomp
jns
adc
cs
sbb
mull
subl
pop
pxor
adc
rcrb
andb
repz
incb
jle
mov
push
push
lock
cld
fmull
shll
loope
inc
cs
mov
bound
add
call
sbb
pop
cltd
les
push
loope
dec
xor
xchg
push
pop
dec
iret
adc
push
movsb
icebp
or
push
js
inc
lds
push
sbb
adc
lods
mov
pushf
test
into
fstps
les
xchg
cmp
sub
rcll
je
mov
or
inc
negb
sbb
das
push
in
jno
icebp
xchg
jnp
ret
popf
mov
mov
in
pop
xor
aas
pop
fs
pop
inc
xor
imul
sbb
jno
adc
sbb
sbb
jbe
cs
jb
fdivp
sub
inc
push
stos
stc
mov
out
push
dec
sub
add
dec
inc
test
in
inc
loope
enter
inc
lods
mov
movmskps
mov
pusha
and
icebp
je
push
and
int
call
das
and
stc
bound
out
and
jno
lods
pop
sub
cmp
cmpsl
mov
jnp
push
pop
push
sub
sarl
inc
je
push
test
add
push
pushf
es
xchg
in
mov
sarl
push
or
sub
jnp
cli
dec
aam
push
fsubl
cmp
add
pushf
test
mov
fnstcw
divb
repz
mov
jb
aaa
iret
mov
aaa
and
out
nop
jle
pop
mov
sbb
jge
daa
xor
xchg
bound
add
daa
or
mov
mov
xchg
outsl
jecxz
mov
xlat
xor
and
add
hlt
lds
xchg
test
call
mov
or
dec
dec
jg
ljmp
or
mov
bound
fbstp
lods
subb
cmp
mov
xlat
inc
ficoms
dec
mov
xor
add
inc
insl
fsts
sub
inc
imull
outsl
ret
add
jbe
mov
jb
mov
mov
pop
adc
xchg
pushl
lea
pop
cld
push
mov
insl
or
sub
xchg
pop
push
les
cmc
repnz
ret
cmpsl
mov
mov
rorb
sbb
lea
cmp
mulb
jl
mov
leave
mov
xor
fdivr
imul
aad
ljmp
or
int
setno
push
sub
fnstenv
adc
in
es
ja
xor
and
andl
fldenv
xchg
pop
mov
nop
lods
sub
fimull
ljmp
and
pop
cmc
nop
das
adc
fwait
mov
add
xor
std
push
and
sbb
pop
lcall
sub
fldcw
test
hlt
mov
fsubs
and
cld
scas
cmp
mov
xchg
xchg
fcomps
out
test
rcrl
int
xor
daa
sub
icebp
fcomi
fbstp
pop
push
shrl
cli
and
movsl
jbe
test
mov
mov
fcompl
loopne
and
stos
add
sbb
stos
imul
sub
in
cli
aad
inc
xor
les
lcall
push
lock
mov
adc
jb
divb
je
clc
adc
nop
mov
sarb
fisubrs
cwtl
repz
in
sbb
sub
dec
dec
push
add
pop
cmpsl
fdivrs
enter
mov
ja
daa
inc
push
push
stos
lock
lcall
cmpl
mov
add
xor
pop
push
sub
xchg
pushl
outsl
cmpsl
lret
xor
lcall
fiaddl
out
mov
sbb
mov
lods
dec
sbb
mov
test
dec
lock
adc
sbb
test
sbb
xchg
add
scas
mov
inc
iret
out
jp
sub
js
inc
js
dec
daa
jo
push
or
sbb
and
mov
call
bound
fsubr
mov
push
lock
add
andb
mov
or
inc
mov
xor
jb
into
cmp
jns
xor
push
inc
mov
or
xor
enter
add
add
push
xchg
xor
pop
popf
lcall
out
flds
jbe
mov
inc
loop
jae
dec
das
data16
bound
out
out
rcll
push
xchg
dec
and
lds
outsl
insl
mov
xor
shrl
insl
mov
push
sbb
outsb
dec
cmp
fsubs
fldt
sub
test
push
jle
add
jae
scas
sahf
test
pop
into
and
fsubrs
pop
sbb
adc
jg
out
dec
push
dec
repz
outsl
lods
ret
ds
shrl
movsb
and
or
push
je
idivl
lahf
mov
outsb
xchg
mov
xchg
cld
loope
xor
movsb
les
mov
pop
mov
and
test
jge
insb
jle
lret
and
cmc
lock
xchg
inc
inc
jb
daa
pop
shrl
bound
xchg
cmc
call
stos
or
rolb
pop
movsb
push
out
fisubl
and
loop
fimuls
pop
popf
leave
inc
jmp
stc
jae
jb
ljmp
adc
jo
push
mov
sub
addb
pop
js
xor
push
movsb
jno
cmp
stos
sbb
cs
add
es
fs
cmp
int
push
mov
sub
adc
and
inc
mov
sub
push
push
add
sub
arpl
push
movsb
fstpt
inc
adc
aam
jbe
rdmsr
lods
je
es
mov
pop
sub
into
cmp
inc
pop
ret
stc
push
aaa
dec
xorl
mov
ljmp
aaa
push
iret
add
aad
bound
mov
push
imul
js
fldt
or
je
sub
xor
mov
out
inc
mov
icebp
inc
mov
aad
repz
imul
sub
dec
push
push
push
push
pmaxub
cmp
cmp
mov
fsubrs
mov
lods
cs
jecxz
mov
dec
push
std
jne
and
jge
rolb
jo
js
stos
loope
repz
or
stos
dec
in
std
loop
cmp
popa
in
pop
xor
cmpb
fnsave
xchg
daa
mov
pop
daa
les
pusha
cmpb
subb
dec
sub
loopne
sub
bnd
jae
icebp
push
inc
jns
cmp
push
ss
sbb
repz
orb
mov
mov
adc
mov
push
mov
sbb
push
adc
mov
pop
xor
and
rcrb
cmpsb
shlb
leave
add
sbb
popa
pop
inc
mov
jns
add
inc
mov
mov
outsl
test
stos
das
sub
push
lea
scas
adc
std
je
lcall
pushf
mov
enter
lods
mov
gs
ja
push
xor
data16
mov
fs
aas
push
loopne
scas
in
mov
std
jg
push
subl
pop
in
dec
aad
dec
push
push
test
test
adc
mov
xchg
mov
jge
rcrb
dec
ret
lret
push
push
out
cmp
test
xlat
sub
xchg
lock
xchg
dec
mov
pop
rol
adc
aam
movsb
iret
jno
stos
ljmp
mov
cmp
jns
inc
sahf
xor
lods
cmc
pop
push
outsb
lret
mul
fyl2xp1
ficoms
jge
cmp
fcompl
fidivl
pop
dec
xor
push
jno
jno
enter
adc
cltd
mov
jo
repnz
movsb
int
call
push
sarb
cmc
in
push
mov
push
enter
dec
or
ficompl
jmp
pop
cmp
xor
pop
adc
fldcw
fldenv
mov
cmpl
call
repnz
sbb
mov
movsl
and
stos
and
pop
push
or
out
add
es
stos
repnz
jl
in
pop
mov
mov
jecxz
ror
stos
dec
leave
ss
fiadds
clc
sbb
out
jb
lret
cs
mov
xor
xchg
les
outsl
stc
xor
aaa
leave
or
mov
sub
or
rcr
dec
mov
jmp
xchg
mov
sub
pop
cmp
out
rorb
cltd
icebp
call
ja
in
js
sub
rcrl
sub
and
shll
mov
pop
push
xchg
mov
stos
inc
sbb
jns
pop
pop
movsb
es
filds
lds
sbb
movsb
decl
xor
iret
mov
xchg
daa
lcall
movsb
adc
enter
shl
pop
mov
movb
mov
push
cmpsb
addr16
aad
mov
ret
xchg
test
inc
shll
adc
mov
popf
inc
pop
inc
dec
stc
adcb
or
pop
inc
jbe
or
push
adc
push
pop
test
clc
ja
das
push
and
rorl
add
mov
jecxz
mov
mov
iret
movsl
loope
icebp
mov
fcmovne
pop
fnsave
inc
sub
sub
loop
xor
out
hlt
push
dec
push
enter
out
mov
jo
xchg
inc
push
add
xchg
jp
pop
or
fidivl
push
es
int3
pop
mov
inc
popa
push
decl
stc
cmpsl
inc
sub
mov
mov
xor
lods
xor
addr16
cltd
ret
mov
mov
jp
xorps
pusha
jae
out
fidivrs
aas
cmp
mov
cli
push
xchg
lods
push
aad
scas
mov
cmpsb
cmp
lcall
cli
push
shll
rdpmc
scas
mov
jge
test
mov
mov
test
dec
dec
jmp
aad
fs
sbb
lcall
aad
orl
mov
gs
pop
jae
jne
fdivs
mov
sub
sbb
mov
sbb
pop
adc
xorl
and
out
int
aam
fwait
xchg
cwtl
jnp
or
mov
lea
dec
mov
lcall
sub
or
mov
sbb
xor
das
dec
stos
sarb
mov
xor
data16
pop
lcall
mov
xchg
sub
movsb
jbe
mov
stos
inc
xor
dec
pop
xchg
cmp
movsb
adc
je
and
les
mov
jmp
or
sbb
xor
in
cmpsl
movsl
cld
iret
mov
push
xchg
jns
aad
mov
aad
xlat
add
mov
repnz
cmp
dec
vmread
fsubl
xchg
pop
insl
jbe
dec
push
adc
bnd
xchg
dec
lods
push
pop
loope
out
iret
out
int
pop
fwait
and
fistpll
test
xor
movsb
leave
cli
jbe
repnz
mov
jp
fcompl
adc
xchg
dec
repnz
sub
xchg
sub
jb
pop
int
xor
test
lea
popf
sub
dec
popf
and
lods
mov
mov
lcall
cld
sbb
xorl
ja
jbe
ret
movsb
add
aam
fldenv
mov
xchg
orl
xor
xor
jp
cmc
pop
push
in
xor
push
sub
mov
std
pop
pop
adc
roll
jbe
mov
mov
xchg
into
mov
shll
ja
jle
pusha
or
cmp
cmp
cmpsl
out
jne
push
adc
or
add
mov
shl
movsl
inc
and
cmc
inc
dec
mov
mov
or
jecxz
test
or
dec
mov
mov
xchg
mov
or
rcl
adc
in
push
shrl
adc
lods
push
dec
adc
or
inc
arpl
insl
sub
jnp
cmpl
rcrb
mov
movsb
pop
adc
inc
sbb
pop
adc
mov
cli
imul
incb
cmpsb
pushf
adc
fdivl
ljmp
lock
cwtl
cmp
sbb
das
push
std
enter
repnz
xchg
pusha
int3
mov
cmp
aas
iret
movsb
inc
add
and
stos
and
mov
pop
shll
cmpsb
sar
stc
push
add
or
aam
mov
loop
fwait
mov
rolb
mov
dec
movsb
andps
inc
mov
out
xchg
push
repz
sub
or
mov
das
xchg
inc
pop
ret
sti
es
popa
cli
pop
into
adc
mov
in
adc
mov
jnp
mov
roll
insb
test
cltd
pusha
inc
mov
rol
jnp
scas
add
mov
inc
inc
xchg
loop
mov
aad
mov
mov
jecxz
test
sub
adc
bound
repnz
xchg
lds
addl
push
sbbb
sub
push
fnstenv
lods
and
xchg
into
je
mov
or
stc
lret
sar
adc
pushf
les
aam
mov
in
lds
xchg
in
sub
cmp
pop
sub
mov
test
aad
out
cmp
inc
xor
js
pop
adc
mov
or
mov
dec
xchg
dec
inc
sahf
add
mov
je
push
xor
pop
data16
int3
mov
fisttpll
test
gs
stc
je
in
ret
jg
mov
divl
leave
ljmp
shl
icebp
cmp
lods
mov
sub
lret
outsl
jns
and
xor
loope
and
jbe
pusha
ret
int3
fidivs
mov
lods
mov
jp
pushf
push
stos
jo
cli
ficompl
ret
mov
mov
cwtl
mov
outsb
mov
add
mov
add
andb
mov
out
mov
scas
xchg
mov
and
bound
jp
popa
fwait
sub
insl
mov
mov
mov
xchg
fcomip
inc
bound
imul
cwtl
out
mov
movsb
pushl
or
popf
faddl
pcmpgtw
mov
xchg
aaa
add
push
pusha
sbb
sub
add
cs
mov
fmull
pop
test
repnz
xchg
xchg
mov
pop
mov
pop
imul
std
mov
or
pop
jne
sub
negb
push
mov
mov
out
push
lcall
outsb
daa
repnz
lret
mov
rcr
repnz
add
cmp
dec
test
mov
xchg
xor
cld
movsl
cmp
inc
dec
cmp
scas
sub
dec
in
xchg
lahf
scas
jne
insl
stc
dec
xor
jl
js
outsb
cld
pminsw
fs
mov
call
push
jecxz
shr
aam
adc
or
in
add
sbb
cmp
mov
mov
dec
aad
fwait
addb
in
xor
mov
lods
jno
inc
nop
dec
les
outsb
leave
cwtl
xchg
push
sbb
jnp
hlt
cli
add
add
push
ljmp
sub
les
mov
mov
lods
add
imul
add
pusha
ss
jp
dec
testl
xor
hlt
xlat
mov
push
mov
xchg
mov
ret
lea
dec
movsb
inc
xchg
ficoml
cltd
mov
clc
jb
sahf
jne
in
enter
mov
mov
sub
push
test
cmpsl
sbb
les
jmp
gs
femms
les
mov
dec
mov
paddw
les
inc
pop
hlt
enter
cli
fadds
sbb
and
popf
xchg
mov
mov
sub
iret
mov
scas
call
dec
adc
add
sub
push
mov
fimull
nop
mov
repz
sahf
lods
out
ret
push
push
in
xor
mov
pop
int3
cs
or
mov
jo
nop
mov
jb
xor
xchg
outsb
xor
popf
arpl
pop
int
cmp
push
inc
fbld
aaa
imul
mov
or
cli
in
fadds
xchg
shlb
les
bound
ret
imull
lcall
mov
shlb
adc
xorb
pop
xor
push
mov
ds
mov
repnz
mov
lods
mov
mov
into
add
sbb
xchg
roll
mov
add
shl
rcll
lret
add
ds
arpl
mov
and
cmp
mov
jne
in
add
scas
icebp
movsb
inc
sahf
mov
lret
sub
xor
sbb
imul
aad
push
fsubrs
jnp
push
insb
sbb
cmp
mov
xchg
jb
pusha
gs
data16
dec
movsb
scas
ds
outsb
jle
cs
push
mov
push
and
popa
repz
cmpsl
sub
loop,pn
jg
inc
jno
sbb
movsb
lea
mov
ret
jb
mov
xorl
stos
mov
push
lahf
pop
call
ret
jb
movl
xchg
xor
pop
sub
mov
sub
pop
movsb
sbb
aaa
dec
xchg
jge
movsb
fmull
ja,pn
rorl
jo
ljmp
jp
xor
jge
cmp
call
push
call
repnz
push
iret
ljmp
stos
test
push
or
andb
dec
loop
scas
bound
dec
xor
jbe
sub
pop
adc
jecxz
mov
ljmp
mov
mov
sub
leave
mov
lea
push
rcrl
shr
add
cmp
dec
mov
aad
inc
jge
loopne
pop
xchg
sahf
mov
mov
dec
orl
les
jo
sub
pop
xor
xchg
add
and
rolb
inc
mov
jb
dec
sub
mov
and
lcall
outsl
sub
call
jmp
pop
arpl
lcall
sbb
ds
icebp
fldenv
lods
mov
dec
icebp
mov
mov
xchg
sub
xchg
ss
jg
hlt
push
or
dec
mov
mov
aaa
or
fcmovu
mov
call
jmp
inc
test
aam
iret
dec
out
dec
cmp
test
hlt
xor
mov
dec
push
xor
cmp
lods
sub
and
fs
mov
icebp
ret
sbb
and
sub
inc
mov
outsb
mov
cmpsb
jnp
and
add
out
imul
pop
insl
repz
push
loope
imul
and
mov
sub
mov
inc
sub
stos
mov
out
adc
iret
jae
xor
lods
mov
push
xor
ret
mov
shrb
test
test
cs
mov
dec
lock
jmp
es
xor
mov
pop
aam
push
sub
cmpsl
mov
orl
mov
and
nop
adc
roll
mov
add
roll
test
sarl
mov
fimull
ljmp
mov
pusha
mov
shl
outsb
inc
roll
int3
mov
sub
xor
popa
sub
fcoml
mov
rcr
xor
testl
jge
pop
dec
adcb
and
cmpsb
add
mov
movl
mov
pop
loop
cmp
cmp
test
jne
mov
mov
push
xchg
push
pop
pushf
cwtl
xchg
adc
lods
or
sub
imul
xchg
mov
mov
sub
imull
insl
popf
push
repnz
mov
inc
stc
push
sbb
inc
sub
and
jns
dec
pop
mov
sub
rorl
fstpt
sbbl
sub
rcpps
jg
pop
fwait
dec
add
fstps
sub
scas
sub
jbe
cli
xchg
jb
push
push
hlt
mov
std
fsub
push
sahf
cmp
add
and
fdivl
ljmp
mov
jno
xor
xor
adc
aad
pop
xchg
xchg
dec
pushf
add
pop
push
loope
stos
je
ret
out
mov
nop
mov
sbb
movsb
push
shlb
insb
jg
mov
ja
sbb
repnz
loopne
scas
pop
pusha
adc
mov
xlat
push
bound
push
loop
sbb
in
ret
sub
jle
sub
cld
push
cmp
sub
mov
mov
mov
mov
and
cmp
inc
les
movsl
push
pop
mov
sbb
in
mov
and
inc
ret
rorl
sub
mov
xor
adc
jmp
mov
push
adc
sbb
or
into
sub
in
call
pop
push
and
hlt
or
cwtl
pop
or
test
cmp
in
pusha
cltd
mov
cmpb
in
in
add
sbb
mov
das
loope
jno
sahf
pop
sub
and
dec
lods
dec
cmpb
jle
in
into
scas
cld
jge
mov
dec
or
pop
bound
ds
ficompl
in
scas
leave
stos
pusha
jbe
adc
push
in
fxch
stos
gs
dec
mov
pop
movd
sbb
xor
scas
mov
repnz
in
dec
mov
mov
sub
xlat
or
jbe
lret
ret
jnp
fs
jae
adc
xchg
stos
loop
sbb
pop
ds
cli
sbb
lds
into
not
pushf
jge
pusha
popf
sub
xor
sbb
int
repnz
sbb
sbb
das
mov
scas
xchg
jge
insb
pop
mov
popf
lret
movb
lods
cld
push
cmp
or
mov
mov
inc
je
cmp
ja
in
mov
jecxz
jp
gs
or
mov
stos
aam
stos
sbb
clc
rep
push
mov
ljmp
addr16
icebp
jp
loope
bound
mov
push
pushf
out
scas
inc
adc
aam
scas
xorl
or
loopne
les
xchg
loope
sub
mov
xchg
dec
inc
jb
jno
and
mov
aam
sbb
addb
mov
shlb
xor
gs
xchg
into
mov
stc
mov
rorb
ss
outsl
popf
shlb
lods
repz
movsb
rorb
shll
push
mov
inc
push
and
mov
sub
std
das
pop
dec
in
cmp
mov
ljmp
iret
sub
add
inc
lods
mov
sahf
shll
in
std
push
mov
dec
dec
ret
in
push
sub
inc
adc
push
xchg
cmp
subb
sbb
cmpsb
fldenv
bound
xor
fstp
andl
push
aad
out
dec
sbb
or
adc
lock
pop
shrl
dec
aam
movsl
rolb
pop
xor
cmp
jecxz,pt
sub
fmuls
push
and
ljmp
add
inc
mov
mov
fnstsw
jae
out
jg
cmp
jmp
inc
mov
imul
xor
sbb
js
jno
xor
pop
xlat
pop
ljmp
sarb
pop
dec
or
mov
sarb
lds
loopne
movsb
mov
fnstenv
push
mov
orl
movsl
sub
or
call
push
popf
jb
cmpsl
and
mov
repz
mov
pop
mov
push
fistps
sbb
push
cld
fs
jo
xor
pop
mov
fisubrs
push
loop
inc
enter
mov
xor
das
lods
lods
in
mov
inc
sub
mov
mov
mov
stos
pop
jge
ds
adc
mulb
or
iret
and
mov
incb
fsub
xor
scas
inc
xorl
cwtl
shlb
pop
mov
movsb
stos
mov
push
daa
mov
add
xchg
mov
sub
pop
fwait
jle
pop
aad
mov
inc
mov
subl
cltd
shlb
ret
repz
mov
or
scas
test
adc
jecxz
jne
pushf
mov
movsb
je
clc
adc
inc
test
mov
in
test
ud1
repz
pop
aas
push
jno
jnp
pop
into
sub
cld
inc
mov
stos
lds
pop
and
mov
das
mov
cli
sub
mov
or
mov
xor
fisttps
xchg
orl
lods
sarl
xchg
in
and
jb
mov
xor
sbb
sbb
mov
call
sub
insl
push
mov
push
mov
mov
inc
test
pop
negb
and
aam
rorl
mov
and
out
adc
cmpsl
sbb
xchg
mov
mov
hlt
sub
insl
xchg
mov
je
dec
sub
hlt
sbb
ficompl
mov
in
lods
pusha
stc
mov
push
movsb
cltd
popf
pop
xchg
add
std
stc
rcl
xor
fcmovnu
inc
loopne
rcrb
push
mov
push
test
mov
sub
movsb
jmp
and
and
jnp
repnz
call
inc
movb
je
fsubr
lahf
sub
sbb
loop
cmp
shll
adc
pushf
pop
push
mov
lea
xor
lods
minps
es
push
and
xorb
pop
sbb
xchg
push
dec
outsb
xor
daa
xor
cmp
nop
jae
add
push
push
add
jg
mov
fwait
dec
pop
aaa
pusha
es
pop
stos
inc
pusha
insl
push
xor
or
xchg
sub
test
loop
inc
cs
sbb
inc
lcall
xchg
inc
data16
aaa
or
mov
data16
add
push
inc
lods
in
add
sarb
lock
lock
loopne
loopne
xor
movsb
inc
jb
ljmp
out
or
je
push
push
mov
add
outsb
push
jle
clc
fcoms
hlt
dec
mov
sahf
lea
lret
sbb
cmc
mov
aam
or
stos
movswl
ror
sub
dec
sbb
leave
cmc
in
fwait
xchg
xchg
push
inc
cmp
sub
xor
call
dec
cmc
stos
mov
loop
iret
lods
xchg
sbb
bound
jae
out
sub
dec
movsb
sub
and
stos
jns
add
pop
inc
sahf
mov
xchg
movsb
hlt
sub
mov
adc
xchg
inc
inc
or
ljmp
xchg
lret
imul
xor
mov
clc
jl
add
ljmp
lcall
hlt
dec
sbb
sbb
xor
lock
and
mov
mov
dec
xchg
jge
cwtl
push
sub
enter
mov
push
xor
mov
or
or
cmpsl
sahf
bound
popw
popf
jecxz
stc
insb
in
mov
scas
dec
adc
shrb
jp
push
jno
mov
push
and
movsb
sub
sub
enter
jns
ret
pop
int3
dec
ret
mov
and
icebp
faddp
or
mov
sbb
int
and
push
stc
mov
jle
mov
roll
pop
dec
inc
mov
divl
test
scas
mov
xchg
adc
andl
cmp
lret
push
cmp
xor
and
cmp
into
es
jmp
mov
lods
mov
fcmove
dec
pop
test
pop
jae
subl
mov
xchg
mov
jne
pusha
lcall
cmp
cs
ficoms
fisttps
cmpb
lcall
stc
fdivl
lcall
add
rclb
subb
pop
int3
mov
jmp
test
cmpsb
mov
pop
fldcw
lds
sub
es
and
inc
push
fwait
mov
daa
sbb
insb
test
jmp
nop
mov
cs
inc
jle
cmp
and
inc
scas
bound
out
lds
in
xchg
mov
cld
cmc
loope
xchg
in
xchg
inc
jle
sub
pusha
adc
jl
push
test
mov
insl
aam
sub
xchg
jmp
inc
lods
push
sub
push
fidivrs
bound
loope
stos
out
les
addr16
int3
shr
stc
das
ret
pop
fisubs
inc
pop
cmpsb
sub
cmc
pop
inc
or
jle
cmc
and
lahf
imul
jmp
pushl
pop
fnsave
dec
mov
cmpsl
add
inc
pushf
and
call
iret
cmp
sbb
movsb
mov
sub
sub
rolb
imul
je
inc
xchg
sub
shlb
xor
pusha
jg
mov
int
stos
xchg
xor
shrl
insl
xchg
xchg
push
loopne
mov
repz
push
adc
lea
add
jg
cmp
rcrl
sbb
push
sub
gs
mov
fs
cmp
clc
out
inc
jo
imul
adc
popa
test
call
cmp
push
mov
pop
mov
int
in
mov
push
fs
insl
outsb
pusha
pushf
push
test
xor
xchg
iret
ret
cmc
cs
ret
je
loope
lea
imul
lods
push
pop
aaa
bound
dec
loope
jl
mov
decb
and
xchg
orb
iret
xor
or
cltd
fs
sti
cmp
add
xchg
sbb
adc
insb
jle
pop
in
dec
icebp
mov
pushf
and
pop
mov
fcoms
hlt
jle
dec
jb
aaa
jb
test
mov
outsb
or
add
ret
xchg
xchg
ret
dec
ret
xor
jne
test
into
sub
adc
pop
popf
or
repnz
call
xor
mov
mov
mov
inc
movsb
ds
push
cli
pusha
push
push
sbb
hlt
jae
sub
mov
mov
in
xor
les
insl
js
scas
in
jo
scas
jo
ret
fsub
movsb
aaa
fiadds
cmc
dec
enter
sbb
movsl
xor
push
lcall
aas
cmp
stos
xor
rcr
insl
cwtl
or
idivb
mov
inc
push
inc
jg
and
stos
int3
dec
jl
pop
mov
dec
cs
jne
mov
lea
cmpb
lds
pop
js
rclb
in
or
jbe
push
add
dec
mov
arpl
sub
aad
mull
pop
push
in
pusha
dec
xor
inc
sahf
in
mov
sahf
mov
in
mov
mov
fidivrs
mov
jge
xorb
mov
mov
gs
or
mov
mov
adc
jecxz
aaa
stos
jo
push
mov
inc
jmp
fistpl
cld
cmpsl
insl
dec
xchg
orb
and
pop
mov
mov
bound
int3
insb
mov
aad
pinsrw
xchg
dec
add
sarl
test
imul
es
ljmp
lcall
mov
and
cli
addr16
in
dec
mov
in
pop
push
jecxz,pt
mov
rclb
pop
test
mov
ja
push
mov
mov
adc
pusha
stos
lea
dec
into
lret
sub
pop
or
xchg
outsb
mov
or
loopne
sbb
cmp
or
xor
das
pusha
ficomps
data16
popf
or
sti
add
sub
cmpsl
movsl
ret
shrl
je
lret
jge
ret
dec
push
lods
iret
pop
loope
int
jge
push
shl
pushf
sub
sub
dec
inc
jns
sub
jo
sbb
mov
xchg
mov
xlat
push
cmc
mov
adc
iret
test
or
les
stos
mov
outsb
mov
fadds
or
shll
cmp
inc
in
xchg
lcall
and
inc
andb
inc
or
xchg
push
dec
and
loopne
daa
cmp
cmp
fstpl
jmp
xor
mov
sub
fistpll
or
or
rorb
ror
add
pop
jb
icebp
xorb
test
iret
push
je
outsb
xorb
ljmp
xchg
and
and
mov
ret
mov
hlt
push
cld
sub
or
lea
fcomps
punpcklwd
xor
and
jecxz
jne
das
movsb
data16
mov
pop
and
clc
insb
jmp
inc
or
mov
mov
sub
and
sub
mov
jmp
and
fwait
adc
test
hlt
jnp
mov
out
std
jmp
adc
inc
sbb
call
mov
add
cmp
push
mov
cwtl
or
or
jo
mov
fs
and
cld
adc
jp
shr
les
sub
dec
out
aad
mov
mov
je
mov
mov
dec
orl
jne
push
mov
fs
pop
sbb
nop
xor
mov
sahf
xchg
ljmp
lcall
movsl
mov
mov
add
cmp
test
xchg
xchg
rcr
gs
mov
xorb
loope
sub
sbb
mov
add
sbbb
gs
fldl
dec
sub
push
mov
cmp
push
xchg
mov
orb
movsb
mov
cmpsl
dec
mov
ja
jp
aaa
mov
lock
dec
sbb
ret
leave
mov
mov
es
test
jp
and
adc
pop
and
fstpt
jp
scas
out
movsb
add
mov
fcmovne
sti
inc
or
sahf
daa
test
hlt
sub
jg
jae
jne
lds
cli
adc
pop
push
arpl
repnz
sbb
jno
push
shrb
imulb
add
pusha
mov
ja
mov
ret
pop
dec
mov
cld
add
inc
mov
gs
int3
int
lcall
arpl
pop
push
sbb
pop
pop
cmp
push
je
cmc
out
bnd
shll
xchg
iret
addr16
cltd
enter
push
aaa
mov
insl
lahf
int3
and
push
cld
add
push
mov
xor
xor
dec
cmpsl
rclb
sub
cli
lcall
clc
adc
je
lret
ss
mov
pop
mov
hlt
sbbb
push
gs
fiadds
jo
sub
test
cmp
push
out
movsl
push
or
push
outsl
mov
and
mov
xchg
dec
aam
xchg
or
dec
clc
xchg
mov
add
jecxz
push
fidivs
xchg
repz
rorb
sub
sub
adc
push
pop
jmp
xor
xor
mov
add
mov
out
in
jbe
pop
fwait
imul
mov
cmpsl
mov
mov
add
xor
lods
jb
adcb
scas
fsubrp
mov
cltd
push
pop
mov
stos
dec
stos
lea
cmp
inc
mov
jp
outsl
lcall
es
insl
cmp
dec
sbbl
cmpsb
movsb
mov
aaa
mov
ljmp
mov
and
imul
lcall
adc
pop
xor
in
cmp
rcrl
or
dec
adc
add
int3
inc
data16
mov
hlt
repz
enter
dec
movsb
cmp
hlt
std
pop
dec
sbb
xor
inc
loopne
mov
mov
repnz
sbb
cmp
mov
stc
push
popf
add
ficoml
jp
push
fcmovbe
jae
mov
andl
mov
adc
xchg
or
pop
out
and
mov
sub
push
mov
iret
add
sub
movsb
inc
push
jbe
lods
pop
das
pop
aas
imul
or
andb
gs
sbb
jg
scas
sub
enter
in
insl
sub
inc
enter
lret
jnp
iret
mov
mov
push
lea
dec
movsb
repnz
mov
aam
push
stos
pop
xlat
or
fbstp
mov
mov
adc
xchg
cmp
insb
push
sbb
xor
dec
mov
jnp
ret
pop
dec
mov
pop
sub
xor
mov
adc
pop
call
push
lret
mov
jb
and
call
lods
in
adc
push
cwtl
aaa
in
adc
idivl
cwtl
xor
sub
movsl
mov
sti
rsqrtps
jno
cmpsl
mov
insb
mov
xor
lods
mov
mov
mov
pop
inc
repnz
mov
test
mov
sub
jecxz
inc
ret
mov
adc
dec
pop
or
movsl
insl
call
into
sub
jb
cli
push
loopne
add
mov
cmp
xor
fs
clc
and
and
pop
mov
clc
xchg
lock
pusha
xchg
add
push
inc
push
cmp
enter
mov
cli
test
sub
scas
jne
xorb
mov
in
insl
insl
test
inc
ficoml
cli
mov
mov
jno
repnz
repz
dec
cmc
movsb
jbe
cmp
pop
jl
adc
and
jb
outsl
xchg
push
xchg
push
jmp
inc
sbb
test
sub
xchg
outsl
pop
fwait
xor
sahf
shrb
popf
jno
mov
dec
adc
pushf
and
mov
test
mov
xor
sub
mov
enter
jno
mov
pop
popf
inc
ret
sub
and
cmp
push
push
mov
cwtl
movsl
xor
stos
scas
icebp
mov
rcrl
cmpsl
aad
mov
inc
sbbb
pop
lods
iret
mov
adc
or
pop
ljmp
mov
int3
faddl
mov
das
rcl
mov
mov
nop
cmp
daa
sbb
imul
sub
adc
loope
push
mov
fsubrl
stos
xlat
sbb
movsb
fucom
fidivs
adc
and
mov
mov
sub
dec
and
xchg
sbb
inc
aad
push
mov
decb
mov
fldl
jmp
ficoms
cli
inc
dec
cli
ss
mov
incl
lcall
jns
xchg
inc
fcmovne
dec
jo
iret
pop
stos
subl
fsts
iret
push
jmp
and
or
sub
arpl
inc
mov
jl
mov
cmp
xchg
push
fstpt
jns
and
movsb
addr16
push
hlt
pusha
dec
mov
adc
xor
setg
sub
iret
sbbb
dec
subl
xor
sub
mov
mov
cmp
sbb
cmpsl
aam
inc
fisttps
daa
cmp
testb
add
rcrl
xor
and
mov
dec
mov
mov
and
roll
push
sub
aad
and
imull
scas
jl
add
cmp
mov
mov
push
shll
push
das
adc
shlb
mov
rcll
adc
outsb
or
cld
push
push
sub
inc
pop
fiaddl
or
es
fcmovne
test
pop
inc
mov
ds
int
mov
sub
scas
ljmp
inc
xor
add
mov
clc
pusha
scas
out
pop
sbb
push
lods
xor
pop
sub
sbb
pop
adc
xchg
orl
mov
or
pop
sbb
enter
shrb
dec
push
xchg
mov
gs
jno
pop
aam
add
pusha
pushf
inc
dec
test
ja
movsb
mov
mov
add
xor
mov
ljmp
mov
mov
pop
out
or
sub
stos
jno
iret
inc
inc
mov
jb
sbb
or
push
jp
in
bound
mov
sub
fs
stc
cmpsl
les
rclb
inc
inc
mov
add
jge
gs
mov
sub
fmuls
sbb
xchg
mov
pusha
movl
shlb
fstpt
imul
into
mov
test
mov
outsb
leave
lret
loopne
rcl
fwait
push
cmp
sti
sub
push
insl
mov
cmpsb
dec
mov
fsubrs
aam
repz
pop
pop
ret
icebp
in
pop
cli
pop
xchg
cmp
test
push
dec
pushf
xor
push
call
lods
stos
mov
adcb
xor
sahf
pushf
mov
or
pop
in
les
push
mov
inc
movsb
test
add
pusha
mov
adc
push
jl
push
mov
enter
mov
xor
arpl
outsb
notl
xor
mov
jb
jb
and
sbbl
ret
pop
fmul
xchg
mov
icebp
mov
pop
nop
lock
pushf
xchg
sub
pop
push
push
mov
outsl
scas
cld
add
pop
jle
lds
jns
push
jecxz
push
ljmp
jp
add
subb
xchg
inc
or
sub
popf
data16
rorl
pop
pop
pop
outsb
sub
pusha
adc
gs
movsb
ja
fsin
mov
rcll
push
ljmp
sub
es
je
add
mov
aaa
sahf
cld
insb
pop
push
cs
jno
icebp
out
outsb
imul
mov
xchg
mov
ret
pop
nop
push
fldcw
cmc
lods
push
sbb
mov
out
mov
push
call
mov
in
pop
or
stos
test
stos
repnz
gs
fcmovnbe
ret
out
xlat
sub
aad
clc
cmp
xchg
lods
and
pushf
inc
cmc
sbb
addb
fnstsw
fwait
push
or
sbb
cmp
add
jo
movl
imull
es
enter
aas
scas
ss
rcrl
sub
push
sbbl
sub
dec
aaa
mov
pop
and
jo
pop
mov
mov
aas
inc
insl
sbbl
fmull
dec
loope
pop
pop
xor
xor
xor
ljmp
movsl
jmp
jb
pop
lcall
or
mov
sbb
lods
or
cld
insb
pop
jb
mov
sbb
mov
xchg
sbb
enter
test
pop
aad
push
sub
pop
movsl
and
sub
adc
popf
mov
inc
cmp
leave
scas
push
cs
sub
cld
push
pop
movsb
lods
pop
push
inc
inc
dec
cmpsb
inc
shlb
cmp
pop
and
adc
jge
push
sti
push
mov
mov
lods
test
xor
sbb
in
and
adc
push
mov
add
out
popf
fimull
ficomps
add
js
sbb
scas
aam
pusha
sbb
dec
pop
mov
jecxz
pop
cmp
cmpsl
aam
loope
push
movsb
dec
cmp
or
outsl
pop
aad
mov
xchg
aad
mov
dec
les
sbb
jge
and
push
or
stos
jae
mov
insl
les
jns
fwait
push
push
xchg
xchg
clc
pop
push
movsb
sti
aas
in
rcl
jne
cmp
push
shlb
inc
ret
shll
push
lret
sbb
adc
fs
cmpsb
hlt
iret
add
sub
enter
test
cmp
and
mov
jg
mov
mov
cwtl
mov
push
xchg
jmp
inc
in
sbb
popf
outsb
cs
repnz
popa
loop
loope
es
pop
inc
or
addr16
adc
movsb
rol
addr16
mov
repnz
lret
cltd
subb
out
pusha
dec
scas
jp
lret
cmp
fdivrs
es
push
icebp
in
xor
stos
dec
mov
inc
mov
in
add
enter
pop
sub
roll
in
pusha
sub
jns
bound
dec
mov
imul
mov
and
push
into
and
loopne
jnp
xor
jno
call
test
in
je
inc
stos
mov
inc
movsb
fidivs
into
xchg
inc
and
in
push
sbbl
sub
outsb
cmpsl
mov
imul
fmull
pop
dec
test
dec
pop
xchg
jmp
add
mov
mov
insb
mov
fs
es
scas
add
or
sahf
push
dec
cmp
mov
inc
out
test
and
mov
sub
mov
mov
xchg
pop
test
xchg
adc
fucomp
ficoms
movsb
mov
out
ret
stos
clc
andb
jb
inc
xchg
call
cmp
fwait
ret
mov
dec
adc
xor
adc
or
movl
sbb
movsl
mov
and
clc
enter
sub
ss
jns
lahf
call
addr16
movsb
xor
mov
test
sub
int3
xor
sub
or
pop
fwait
das
mov
imul
inc
sub
fdivs
insb
sahf
sub
mov
lds
gs
adc
gs
fisubl
cmpsl
ss
js
lods
sub
and
js
and
mov
cmp
jge
xchg
pop
out
inc
lds
leave
push
mov
mov
rcll
sub
or
and
pop
loopne
jge
pop
aaa
xchg
mov
jbe
leave
pop
adc
arpl
mov
movsb
add
lcall
adc
test
jbe
push
lods
or
add
cmp
push
and
enter
cmp
bound
sub
repz
loope
xlat
xchg
popf
movsb
mov
jb
push
mov
or
or
push
addl
ljmp
jae
fildl
negl
sub
lods
rclb
mov
iret
and
cmpsl
cwtl
push
mov
push
loope
scas
movsb
and
sub
jno
movsl
jmp
sbb
jno
shlb
mov
jbe
mov
push
sbbl
in
rcr
dec
stos
out
andl
movsb
rcl
ss
cmpsl
xor
inc
xor
vpminsw
hlt
push
push
ds
popa
sbb
or
cmp
mov
sub
test
push
add
incl
adc
stc
push
cs
lcall
inc
push
mulb
std
sub
sbb
mov
cmp
test
cmpsl
das
lahf
mov
fdivs
mov
fistl
repz
movsb
ret
and
orl
call
jo
leave
cltd
adc
pop
mov
push
adcl
movzwl
sub
movsl
scas
xchg
gs
sbb
mov
enter
sub
testb
xchg
xchg
dec
xor
mov
push
or
ss
sub
xchg
call
int3
add
sbb
test
pop
mov
push
out
jb
push
je
repz
pop
in
cmc
pusha
push
mov
jmp
mov
mov
xor
xor
ficompl
inc
call
cs
cmpsb
mov
add
testl
and
mov
inc
test
cli
cs
sar
mov
cmc
lods
addb
out
push
lcall
pushf
scas
jle
push
dec
pop
ret
xchg
iret
das
arpl
and
ret
pusha
push
outsl
out
addr16
sbb
jbe
mov
sahf
dec
dec
cs
push
jg
push
into
jnp
jbe
xor
leave
adc
popf
bound
rcr
lock
adc
adc
imul
or
mov
mov
pushf
ljmp
adc
enter
lods
jns
xor
jp
push
jnp
leave
in
mov
ds
mov
jb
jl
add
push
dec
das
sbb
push
fdivrs
jb
cmpsb
dec
pop
push
shrb
inc
mov
and
or
push
add
mov
pop
push
or
movsb
out
hlt
push
lea
loope
in
lods
repz
push
bound
test
xor
test
iret
push
dec
call
sub
movsb
or
and
shlb
jbe,pn
add
cli
lock
dec
aas
jno
addb
stos
imul
mov
mov
lock
idivb
ret
sub
xor
das
xchg
popa
pushf
inc
ret
cs
icebp
test
movsb
stos
pop
in
in
cmp
sbb
lcall
sub
sub
lods
call
pop
test
mov
push
jne
dec
push
fs
aad
or
insl
stos
clc
push
inc
xor
subb
cmpb
fiaddl
or
and
aas
mov
mov
fmull
das
sub
mov
pusha
xor
push
js
icebp
add
add
mov
addr16
data16
mov
aas
jns
and
push
mov
hlt
push
mov
mov
pop
inc
mov
popf
jne
adc
cmp
bound
dec
testb
loope
lds
mov
push
js
movsb
ret
insb
aam
test
dec
sbb
cld
popf
arpl
sub
jge
popf
cmp
pop
fwait
xchg
orb
bound
sbb
das
je
sub
movsb
push
jmp
xchg
fsubrl
int3
sbb
ret
pop
push
push
inc
arpl
inc
adcl
xor
jl
scas
ljmp
cld
cmp
addr16
mov
clc
lods
jnp
aad
push
lcall
pop
push
es
in
sub
dec
scas
orb
cmp
loop
out
movsb
mov
dec
xchg
in
mov
lcall
adc
or
pop
mov
inc
pop
sub
push
adc
jbe
sbb
sbb
and
xchg
push
int
fimuls
sub
mov
xor
dec
xchg
sbb
add
test
pop
or
movsb
xor
sbb
fldcw
ficomps
aaa
ret
mov
leave
sub
sar
cli
and
fwait
movsb
sub
mov
cmp
dec
mov
bound
in
mov
mov
add
jne
out
rclb
orl
cmpb
inc
call
ja
lea
mov
sbb
mov
mov
sbb
add
jbe
and
mov
test
fucom
hlt
rorb
mov
xor
mov
pop
pop
popf
sub
movsb
mov
test
dec
aam
pushf
jb
pushl
aaa
movsb
stc
mov
adc
rep
movsl
nop
cmpsl
das
int
fdivr
jnp
out
cs
addr16
cld
pop
fcoml
xchg
shlb
xchg
sbb
push
jmp
loope
push
scas
sub
jbe
xlat
sbb
imul
cli
mov
dec
cld
mov
push
jge
push
cmp
ror
mov
add
inc
jge
aad
ss
fsubs
jl
loope
push
cmpsl
popa
push
cmpsb
dec
out
or
outsb
sbb
add
mov
lret
nop
repz
push
inc
mov
scas
scas
movsb
pusha
in
sahf
movsl
push
out
sub
loopne
mov
loopne
ljmp
in
jge
mov
aam
sbb
xchg
cmpsl
xchg
aad
sub
cli
fadds
jb
cmp
push
lods
sbb
and
out
rclb
clc
cs
pop
lsl
pop
lahf
je
das
insl
sub
mov
mov
jns
call
cs
decb
jnp
mov
rorb
ljmp
ficoms
mov
test
pop
add
call
pushl
jae
movsl
notb
mov
iret
sbb
pop
pusha
sahf
xlat
dec
inc
xor
push
inc
das
mov
push
repz
insl
pop
and
adc
push
jge
jb
cmp
push
add
inc
mov
pop
push
sub
inc
dec
fmulp
lods
sub
pop
popl
jns
and
pop
add
dec
push
mov
out
sub
lods
mov
bound
gs
and
mov
inc
add
test
pop
aas
out
fbld
or
mov
add
movsb
leave
push
jnp
jbe
dec
mov
int
mov
jmp
dec
mov
and
gs
addb
dec
andl
or
orb
inc
loopne
repz
ljmp
jmp
popf
lods
dec
mov
lcall
cli
dec
stos
daa
fdiv
jp
push
and
ljmp
neg
lcall
lods
neg
hlt
sarl
lods
hlt
enter
inc
xor
subb
outsl
push
std
add
lcall
sar
sub
add
inc
adc
mov
xchg
adc
dec
jb
gs
inc
lea
insb
adc
lahf
sub
sub
add
daa
lds
sbb
adc
std
sbb
inc
in
jge
mov
mov
xchg
hlt
cmpsl
push
lcall
std
mov
dec
in
inc
dec
or
xchg
mov
mov
pushl
jp
push
sub
fisubrl
test
cld
jns
cmp
mov
dec
adc
push
push
inc
jmp
js
into
lret
or
mov
jg
insb
mov
lods
sbb
mov
les
jp
js
dec
pop
aas
dec
inc
cmp
push
mov
mov
cmp
aad
jecxz
xchg
sahf
sub
sbb
jo
jle
sahf
cld
jbe
mov
repnz
mov
lods
mov
jb
add
addl
push
jle
or
and
fldcw
inc
inc
dec
in
pop
sub
pop
xchg
inc
cmpsb
cmp
cld
mov
iret
adc
in
fs
movsb
lock
mov
xchg
pop
mov
sub
insl
sub
jb
out
bound
ljmp
scas
aam
mov
out
outsl
and
dec
sub
mov
jge
cwtl
and
icebp
pushf
sub
es
lcall
inc
bnd
dec
loope
movsb
jbe
adc
enter
sub
or
ja
call
mov
push
push
and
aam
inc
mov
jge
out
dec
sub
inc
sub
aas
call
lods
stos
push
jae
sti
sub
fadds
les
mov
xchg
lret
cli
aad
sahf
repz
pop
idivl
movsl
and
push
enter
push
stos
cld
ja
sub
lahf
mov
cmp
clc
scas
sbb
sub
and
add
fisubrs
push
insl
pop
inc
dec
imulb
movsb
mov
ret
rep
ficomps
adc
mov
dec
in
xchg
push
fstps
out
pop
add
jg
leave
lret
xlat
mov
or
fildll
fsubr
mov
jb
sbb
dec
stos
in
mov
mov
dec
aad
mov
lods
add
rol
cs
sbb
mov
outsb
xchg
fimull
dec
repnz
cmp
stos
jmp
push
and
cs
dec
in
out
aas
jo
inc
dec
cld
outsl
repz
sahf
cmp
dec
mov
shrb
aam
out
dec
sar
adc
or
xor
push
inc
adc
xchg
mov
jecxz
sub
fsubl
bound
bound
dec
dec
cli
out
sbb
cld
sub
add
outsl
in
ffree
int3
cs
enter
or
mov
sub
inc
sbb
dec
fldl
mov
sti
movsb
mov
mov
xor
push
call
repnz
test
pop
push
sbb
push
add
fsubs
dec
repz
mov
jle
add
lea
xchg
and
imul
movsb
iret
in
add
or
sub
mov
mov
dec
mov
lea
movsb
push
das
shrb
enter
outsl
dec
mov
mov
std
adc
cs
addr16
addr16
jl
push
in
pusha
and
fdivl
mov
sahf
and
fs
sbb
xchg
push
and
shll
push
repnz
mov
or
jo
fbstp
popa
jl
jnp
scas
pop
repnz
or
mov
jmp
test
push
popa
mov
test
lods
fnstcw
lcall
cld
sub
sub
fists
imul
insb
sub
stos
lods
and
mov
jno
in
inc
mov
test
loopne
movsb
addl
mov
das
shlb
xchg
xchg
or
push
sub
cmc
mov
inc
mov
sbb
push
pop
iret
movsb
inc
ljmp
cmp
icebp
cmp
scas
nop
cmpsl
sub
inc
push
push
lods
subb
mov
mov
js
enter
mov
ljmp
xchg
insl
adc
inc
cltd
jg
xor
je
out
jmp
insb
and
mov
cld
je
cmp
fucomi
or
push
xchg
outsb
clc
jno
xor
pop
scas
mov
xchg
shl
mov
fs
sbb
out
stos
cli
ret
movsb
fisubrs
add
enter
pushf
call
mov
repnz
mov
scas
not
into
scas
xor
dec
add
jmp
int3
fsubrl
cltd
xor
ljmp
jge
jle
shll
nop
jbe
add
sbb
cmp
sbb
push
mov
jge
decl
jbe
jbe
add
add
rolb
iret
in
mov
or
mov
sub
cld
and
lea
xlat
sub
jns
pop
testb
test
push
pushf
call
jno
sti
add
dec
add
stc
ja
popf
das
or
fisubrl
cmc
fwait
pand
rcrl
lods
or
mov
cmc
mov
jno
ljmp
fsubl
and
inc
rorb
insl
pop
and
fisubrs
mov
movsb
xor
adcb
ret
jg
inc
push
and
sbb
dec
push
ja
inc
pop
ljmp
loopne
mov
movsb
add
add
add
out
pop
leave
sbb
fisubs
sub
mov
pop
jne
and
cmp
cmp
mov
movsb
stos
int3
mov
movb
gs
sbb
mov
lcall
xlat
sbb
xchg
and
outsb
mov
sub
add
gs
mov
cmp
sti
sbb
insl
cmp
insl
loopne
sbb
xor
push
outsb
andl
mov
decb
leave
sub
movsb
xchg
fcoms
into
cmp
aad
dec
inc
fwait
ret
call
mov
pop
neg
iret
push
inc
mov
mov
add
cmpsb
sub
or
pusha
sbb
or
cltd
or
aad
arpl
sub
movsb
or
bound
push
movsb
cmc
insl
clc
aam
adc
jno
sub
cltd
addr16
mov
nop
sarb
sub
jle
insb
aaa
and
xor
and
pop
adc
mov
into
ljmp
imulb
pop
adc
jp
in
clc
xchg
push
sbb
mov
sbb
jne
add
lcall
fwait
lret
imul
mov
push
push
dec
xor
fwait
jo
dec
push
sub
pop
mov
incb
push
jmp
int
rcrb
shrb
mov
add
inc
inc
push
sbb
mov
popf
xor
sub
adc
or
mov
mov
mov
mov
mov
mov
insb
jp
cmp
adc
aaa
add
sub
mov
cmpsl
imul
push
ljmp
in
xor
mov
mov
test
lods
cmpsb
dec
and
sub
popf
outsb
adc
aam
fidivrl
xchg
jl
ljmp
movsb
mov
lods
xchg
mov
mov
and
lcall
ljmp
push
adc
push
cmp
xchg
lret
repz
js
nop
mov
add
jge
lock
imul
adc
push
adc
or
mov
pop
jp
lea
aad
int
xchg
cmp
push
lds
jbe
dec
xchg
sub
incl
and
sub
stc
jbe
inc
std
icebp
and
fdivrs
jge
mov
stos
jbe
jb
xor
cld
aaa
aam
enter
movsl
xor
and
lret
aam
repz
shrb
and
leave
ret
sbb
mov
int3
and
adc
lcall
test
xchg
adc
hlt
cmp
sbb
aam
pop
mov
cmpsb
jae
pop
and
mov
repz
icebp
push
pop
pop
jb
xor
jb
jmp
enter
push
xor
test
xor
insl
push
dec
push
jle
cmp
iret
jnp
xor
nop
inc
in
dec
call
hlt
adc
push
push
add
dec
scas
cmpsl
in
stc
sub
mov
cmp
in
add
ffree
aad
cmpsb
jae
mov
fistpl
lea
xor
mov
ret
jecxz
sub
cs
decb
ret
dec
xchg
xchg
mov
repz
movsb
pop
jg
xchg
and
pop
cmp
out
ds
sbb
and
jmp
dec
mov
sub
ret
std
ljmp
dec
mov
ljmp
pop
and
add
jno
push
push
rclb
jp
rolb
daa
fsubs
inc
add
mov
fsubl
adc
mov
cmp
jbe
xchg
xor
push
jns
lds
inc
insb
xor
orb
sub
and
cmp
rcll
mov
jecxz
cmp
sahf
sub
out
aad
lods
xor
das
xchg
xchg
test
push
mov
mov
hlt
stos
cmp
dec
add
add
sub
outsl
cwtl
lock
jns
jno
cmp
dec
cmp
cmpsb
inc
adc
movsl
lock
insb
sti
aad
iret
sub
stos
insl
mul
outsb
popa
movsb
mov
mov
lds
mov
je
sahf
jns
rcrb
mov
in
imul
and
daa
cli
sbb
cmp
jb
and
inc
cld
int3
sub
stos
stos
pop
and
ret
and
push
fiadds
cmp
cmp
sub
cmc
inc
pop
and
in
inc
cli
out
xchg
into
jge
das
fisubl
jb
pop
xchg
add
addb
mov
pusha
inc
imul
cmpsl
adc
xor
jbe
loop
lret
jns
mov
mov
sbb
pop
push
add
pusha
inc
iret
sbb
fwait
cld
stos
lods
mov
cltd
int
dec
jnp
les
fstpl
xor
lods
add
jbe
lods
dec
jp
add
add
lcall
ret
pop
inc
mov
xor
push
call
into
cli
xor
stos
add
xchg
dec
mov
nop
outsb
insl
add
ljmp
call
pop
mov
aad
es
cmpsb
and
push
inc
rolb
inc
xor
xor
js
push
push
mov
sbb
cld
in
hlt
xchg
sbbb
and
cli
jno
imul
jp
sub
push
jns
cld
fisubl
mov
inc
jge
es
add
dec
imul
cwtl
cmpsl
lock
push
or
daa
in
js
pop
es
mov
adc
cmp
cmpsb
or
enter
mov
cmp
add
repnz
insb
data16
outsl
mov
xor
push
xor
mov
sbb
ljmp
ret
jmp
lock
stos
enter
jle
and
cmpl
je
test
cmp
cmpsb
out
out
push
lret
shll
mov
mov
sti
cli
outsb
ret
int
fisubrl
pushf
nop
cmp
movsl
dec
lods
loopne
sbb
dec
inc
mov
adc
out
mov
sbb
adc
jae
iret
scas
sub
or
pushf
repnz
jmp
into
inc
imul
push
test
lcall
test
loopne
push
dec
xor
or
or
dec
sbb
mov
add
xchg
pcmpeqd
stc
pop
pop
dec
mov
mov
push
into
rclb
dec
mov
scas
fisubrs
push
shl
orl
and
pop
pop
enter
adc
xor
dec
shl
mov
pop
pop
push
cmp
or
or
dec
insb
jmp
sub
pop
pushf
cmc
pop
or
push
mov
pop
push
sub
sbb
mov
adc
push
ja
xchg
dec
test
dec
sub
ds
xchg
or
or
sti
sub
xor
xor
push
call
js
push
fsub
sub
push
test
jae
dec
pop
out
cmp
leave
shrb
sub
mov
cmp
lds
jo
test
ljmp
jmp
add
mov
jae
mov
dec
adc
mov
je
push
fwait
sbb
test
xor
add
int
mov
dec
lods
roll
ficomps
jbe
ficoms
in
xor
sbb
lods
sub
mov
ror
iret
mov
sub
push
inc
mov
sbb
jne
xor
fimull
xor
pop
add
push
sub
push
sub
test
sub
dec
jns
jp
shrb
sub
xor
adc
xchg
dec
xchg
jne
fnstenv
cmp
ret
rcl
push
xor
imul
rcll
adc
mov
jge
jge
mov
mov
paddusw
loopne
leave
push
xchg
repnz
mov
ljmp
js
int
xchg
pop
ss
dec
insb
push
push
pop
lods
fcoml
test
jecxz
pop
jns
scas
test
mov
xor
out
xor
mov
xchg
jno
into
mov
fcoms
in
dec
inc
movsb
jmp
jecxz
sarl
jle
mov
adc
popa
jno
jns
xor
mov
mov
and
test
jp
icebp
clc
lcall
xor
ja
pushf
mov
add
pop
sbb
mov
mov
xchg
mov
repnz
or
shrl
mov
push
dec
jl
test
movsb
xor
add
sub
enter
pop
xchg
orl
fildll
shll
call
mov
out
cwtl
mov
sbb
xchg
jecxz
jge
ret
sub
sbb
xchg
out
fsts
add
mov
lds
inc
add
int3
jge
test
sahf
incl
fcomps
rolb
add
cmpl
adc
inc
icebp
mulb
sbb
push
and
mov
mov
ljmp
sub
push
scas
stos
pop
ret
sbb
clc
adc
lods
dec
pinsrw
outsl
pop
inc
mov
sti
roll
std
push
dec
xor
into
pop
ljmp
add
stos
out
and
jmp
sti
sub
dec
daa
lock
mov
lahf
cmp
jo
lods
fisubs
addr16
sbb
sbb
inc
std
jb
cs
stos
push
pop
xchg
call
mov
repz
imul
mov
or
mov
jge
sub
mov
shll
xchg
xchg
and
call
or
stos
aad
push
inc
shlb
stos
fwait
ja
sarb
sbb
lret
pop
push
jbe
add
mov
xor
mov
enter
inc
in
pop
pop
repnz
push
xchg
jp
iret
add
ret
jecxz
mov
je
push
or
fs
sarl
pop
add
ljmp
aam
xor
adc
dec
scas
jecxz
sub
add
ret
fstps
sbb
scas
cltd
loope
cmp
dec
push
repnz
aaa
mov
pop
pop
lock
mov
into
xor
cmp
adc
int
pop
in
push
or
je
fmuls
loope
mov
xor
dec
cmp
lods
cmp
lret
sti
mov
mov
outsb
and
pop
sub
lcall
pop
cmpsl
lds
stc
mov
lods
imul
sahf
or
push
stos
xchg
xchg
je
int
ljmp
shll
mov
xor
mov
xchg
enter
jns
jo
cmc
ret
jl
mov
test
mov
adc
sub
sub
mov
dec
inc
xor
iret
icebp
jae
mov
mov
and
divb
pop
dec
dec
lret
sbb
mov
pushf
push
stos
push
aad
add
scas
insl
lods
xor
mov
insl
loope
icebp
push
jle
push
lods
mov
ja
jge
or
sbb
cmp
mov
movsb
fnstenv
fwait
inc
cmp
aaa
lret
sub
mov
cmc
push
adc
enter
and
mov
push
sub
movsb
xchg
add
stc
xor
sete
pop
andb
sbb
push
sub
adc
stos
inc
push
scas
int3
adc
inc
rcll
repz
add
cmp
lods
scas
fildll
pop
dec
aad
mov
adcb
shrl
in
scas
lds
stc
mov
mov
fwait
inc
mov
push
dec
mov
sub
lods
rcrl
mov
lcall
sbb
xorl
mov
aad
test
push
mov
negl
out
sbbl
rcll
mov
sahf
insl
mov
dec
sbb
lahf
mov
mov
push
sub
pop
sub
rcrl
cmpsb
mov
pop
cli
xor
addr16
xchg
xchg
fstl
bound
push
outsl
xor
out
mov
fistps
xor
sub
cmpsb
dec
cmp
inc
pushw
pop
mov
mov
sub
inc
mov
adc
pop
sbb
mov
rcr
sbb
and
xchg
ds
and
bound
lea
and
push
testl
sub
cmc
push
mov
in
dec
stc
cmpsb
mov
or
push
dec
mov
movsl
xor
adcb
push
xlat
mov
inc
fcoms
push
sub
push
mov
shll
fildl
test
ret
pop
cmc
sub
ljmp
dec
dec
push
sahf
jb
jne
dec
aad
push
cmpl
notb
or
sub
into
mov
stos
pop
xchg
nop
shl
adc
mov
stc
push
mov
mov
movsb
pop
push
ret
xstore-rng
cmpsl
inc
shrl
stos
movsb
jae
and
push
out
xchg
sbb
repz
xchg
dec
cld
mov
inc
movsb
pop
fidivs
jecxz
or
out
mov
or
sbb
int3
xor
sub
sub
sub
adc
xchg
shll
sbb
cmp
enter
test
mov
xor
and
jmp
movsb
aad
shr
sub
sub
pop
cmp
in
aas
cmp
xchg
xchg
movsb
imul
and
cs
push
ljmp
xchg
subb
sub
push
shr
sbb
cld
mov
lcall
jmp
adc
mov
xchg
test
mov
push
aad
mov
mov
fwait
xor
lea
ret
cli
mov
repz
shll
aad
fiaddl
adc
jmp
data16
scas
outsb
xor
pop
sub
inc
es
xchg
rcl
add
cmpsl
push
popf
sbb
cmp
subl
outsb
jge
test
movsl
mov
mov
dec
push
sahf
lock
and
push
stc
mov
or
jge
jg
sbb
jno
insb
or
cmpsb
nop
or
mov
divb
cmp
jle
movsb
dec
sub
iret
and
xchg
inc
adcb
dec
fnstenv
loope
das
and
sbb
adc
sbb
jb
sarl
sar
popf
in
mov
fnstsw
lret
sub
scas
stos
stc
ja
gs
inc
jnp
int3
rdpmc
sbb
sbb
insb
outsl
sahf
js
mov
push
mov
mov
mov
cmp
sbbl
add
lds
ja
dec
inc
fsubrp
dec
dec
mov
or
xor
jb
lods
mov
or
lock
das
ret
hlt
movsb
sub
sbb
mov
sub
lods
pushf
scas
mov
mov
xchg
lods
inc
inc
fsubl
addr16
cs
push
out
inc
pusha
xor
sub
pushf
fsubrp
dec
loopne
out
push
cs
test
mov
sti
inc
outsl
in
adc
adc
sbb
pop
push
dec
inc
rolb
popa
nop
and
lcall
repz
jg
mov
jbe
lret
push
mov
push
push
outsb
shll
add
dec
jp
xchg
fadd
sub
arpl
jo
add
mov
jb
cmc
adc
jl
scas
jge
xorl
ljmp
dec
out
test
je
mov
lods
mov
decb
ss
les
push
imulb
push
aad
mov
xchg
dec
jne
outsl
push
lds
loop
mov
lcall
push
sbb
sbb
scas
mov
jmp
movsb
dec
xchg
or
add
fnstsw
shlb
and
add
cmp
cmp
push
jecxz
fs
push
aaa
loopne
cmpsb
xchg
cltd
push
call
mov
xchg
mov
jecxz
ds
dec
or
xlat
adcl
xchg
leave
addr16
add
pop
mov
mov
mov
xchg
sub
loop
mov
out
inc
call
popf
test
sbb
fimuls
dec
pushf
fsubl
rclb
push
clc
jns
adc
sub
popa
lcall
outsl
pop
mov
mov
mov
lcall
and
mov
shl
movsb
shl
mov
mov
rol
sub
mov
test
jbe
ficompl
imul
flds
mov
ret
cld
push
xchg
xor
repz
sbb
and
mov
testb
repz
mov
xorb
fs
sub
mov
xor
sbb
movl
jno
out
inc
xor
je
addl
inc
mov
fsubrs
into
mov
sahf
daa
das
push
addb
sub
mov
sub
jbe
mov
inc
push
jge
xchg
pusha
dec
mov
sub
cmp
fsubrs
push
pushf
sbb
fstl
int
int3
push
push
jbe
ljmp
dec
rorl
sbb
divl
insl
enter
enter
mov
sub
pop
jno
xchg
mov
cmpsl
push
call
ret
mov
fcmovnu
cmp
mov
sub
dec
and
xlat
push
pop
adc
sbb
roll
jmp
movsb
xorl
lods
or
pop
or
xor
pop
aas
sbbb
outsl
cli
scas
cs
jnp
mov
aad
mov
loope
scas
movsb
mov
data16
jnp
shl
sbb
add
mov
mov
jnp
push
push
mov
pop
rcrl
insl
dec
pop
sar
push
idivl
mov
mov
fildl
mov
popf
push
push
xor
lcall
mov
in
loopne
insl
fstps
sahf
adc
mov
movsb
std
shrl
test
sarl
stos
insl
test
and
sbb
inc
push
mov
jno
push
dec
or
dec
outsb
gs
stos
loope
mov
shrb
jns
outsl
and
jbe
mov
xchg
push
mov
jmp
mov
pushf
jl
jb
jecxz
icebp
loop
lahf
jns
xchg
outsl
pop
rorl
sub
subb
dec
push
sbb
jnp
icebp
mov
push
or
xor
xor
test
xor
pop
stos
lahf
out
ljmp
jno
push
or
ja
orb
int
mov
int
call
mov
ret
mov
adc
xor
movsl
ret
cli
cmpsl
adc
aad
ja
cmp
leave
mov
in
pushl
sti
push
jns
cs
shrl
push
inc
scas
icebp
inc
mov
sub
aaa
lcall
jno
push
fiadds
adc
dec
xor
es
and
adc
ficoml
insb
mov
pminsw
push
and
dec
out
sbb
pop
insl
pop
movsb
push
loop
addr16
rcll
fldcw
in
jge
dec
aam
push
lds
jecxz
mov
sub
addb
pop
out
pop
fiaddl
sbb
stos
out
adc
ljmp
mov
lea
xchg
inc
popf
movd
int
movsb
stc
or
add
imul
pop
add
lcall
xchg
xchg
test
dec
cli
xchg
mov
sarl
add
lcall
hlt
pop
lods
or
sti
stc
and
sub
sti
dec
jns
bound
pop
movsb
flds
adc
cmp
sarb
shlb
rol
aas
and
sub
scas
ljmp
jnp
pushf
jno
inc
jecxz
movsb
lea
push
push
xor
lret
dec
jl
mov
repz
addr16
pop
stos
sbb
cmpsl
rcll
push
mov
xor
test
push
ljmp
dec
lods
hlt
pop
mov
mov
lods
and
push
adc
addr16
nop
out
test
andl
aaa
cmp
cmp
out
fldenv
jp
repnz
lods
or
pusha
mov
fisttpl
mov
pop
insl
sub
and
das
xchg
mov
mov
sub
sub
mov
lcall
jl
insl
mov
dec
cmc
movsb
or
push
data16
test
pop
popf
xchg
adc
ret
inc
loopne
fwait
cwtl
loopne
mov
mov
jb
mov
add
icebp
add
or
fwait
adc
mov
je
fldenv
loope
sub
fadds
les
sub
jbe
mov
jb
lea
scas
icebp
test
cwtl
cmpl
retw
loope
or
mov
inc
and
cltd
movsl
push
mov
pop
repz
js
and
frstor
xchg
std
aas
incb
inc
fadds
pop
ret
je
stc
ja
fdivs
or
pop
xor
popf
int3
test
dec
xorb
aam
inc
out
out
rcr
push
push
and
and
push
cmp
sar
orb
sbb
or
jo
stc
call
int
inc
or
mov
stos
scas
add
pusha
sti
pop
jbe
out
test
dec
xor
cmp
ret
jns
inc
xchg
mov
xchg
les
or
mov
mov
or
mov
sarl
xchg
xchg
iret
mov
push
xchg
push
outsl
dec
lock
add
add
das
icebp
sub
mull
aam
pop
mov
cmp
insl
call
push
or
ljmp
out
testb
xchg
setle
aam
mov
movsb
int3
int
cmovp
mov
jns
and
jnp
and
add
stos
adc
push
into
sub
les
dec
dec
push
fs
sbb
pop
lods
test
add
movsb
pop
popa
stc
jmp
movsl
dec
ljmp
sub
lods
push
rcrl
sarb
es
jg
inc
and
and
pop
pop
push
sbb
int3
sti
out
insl
mov
sbb
scas
les
xor
cmp
sub
pop
xor
cmp
movsb
jmp
mov
add
lods
ret
mov
xchg
movsb
lret
jo
jno
pop
jp
or
ss
iret
cs
movsb
xchg
orb
loop
inc
std
movsl
cmp
outsb
aaa
lods
sahf
adcl
or
dec
jbe
cmp
das
xchg
xor
aam
lcall
das
cmp
icebp
outsl
xor
jne
in
dec
scas
jge
jne
push
jmp
iret
in
mov
movsb
mov
mov
dec
jmp
dec
mov
test
cmpsl
sbb
iret
push
addr16
pop
or
insl
pop
mov
call
and
bound
mov
add
std
xchg
arpl
push
movsb
mov
test
inc
lods
scas
jge
or
cmpsl
testl
movsb
push
push
or
push
mov
sahf
push
imul
add
mov
cmc
cmp
lock
das
or
aas
pop
pusha
sti
je
jne
stos
push
jl
push
clc
cmp
movsb
scas
adc
shll
imul
ljmp
sub
and
lret
arpl
stos
mov
mov
sub
out
add
jge
popa
call
inc
popf
pop
adc
arpl
cmpsl
sbb
add
mov
sbb
or
push
leave
outsl
outsb
sub
mov
or
rcll
jne
in
imul
lea
data16
inc
sub
push
sbb
mov
mov
jmp
bound
pop
push
pop
ret
int3
push
test
data16
cmp
lock
adc
mov
or
push
mov
push
aam
sbb
lret
cmp
mov
mov
cmpl
cmpsl
dec
js
int
aam
imul
test
into
xchg
pop
add
push
jo
sbb
inc
lret
sub
push
jne
jo
lds
pop
movsl
adc
mov
push
jmp
test
jecxz
hlt
mov
or
xchg
mov
or
lock
ret
clc
setge
aaa
pop
xchg
pop
gs
and
ret
fdivr
push
fsubrl
mov
cmpsb
jb
das
xchg
xchg
mov
test
and
and
icebp
cmpsl
mov
ret
adc
push
fnstenv
pusha
cmp
mov
dec
pop
mov
xchg
bound
cmp
mov
shl
cmp
lods
jb
sbb
add
mov
imul
movsl
mov
mov
add
mov
mov
loop
aam
and
ficompl
push
popf
push
push
imul
mov
jns
pop
pushf
dec
stos
or
std
fimull
mov
jg
and
cwtl
lea
int
cmpsl
mov
cmp
jb
aaa
jge,pn
and
aas
jl
rcll
push
adc
push
popa
push
xor
inc
lret
dec
or
pop
mov
push
repnz
mov
sahf
pop
xchg
repz
ret
scas
stos
cmc
xor
dec
sbb
lcall
cltd
pushf
or
out
inc
jb
cld
mov
xor
test
pop
adc
fstpl
cmp
scas
jecxz
jne
cmpsb
mov
add
jp
mov
mov
push
rcl
add
lock
in
fimuls
cmpsl
pop
lcall
push
pop
enter
repnz
xor
mov
xchg
pop
lcall
imul
add
mov
in
push
out
cmp
lods
adc
fs
dec
xor
mov
jecxz
movsb
mov
loop
faddl
push
mov
in
xchg
fwait
sub
lcall
lods
mov
sub
or
repz
cmp
push
sub
dec
leave
mov
cli
mov
insl
add
jmp
sub
add
mov
lea
push
add
jb
or
pop
jge
das
lods
out
pop
jnp
ja
cmc
shl
or
fsubr
movsl
repz
imul
fistl
mov
aaa
lods
push
scas
lret
lcall
mov
inc
mov
pop
in
mov
mov
jbe
add
push
or
test
cmpsb
mov
hlt
movzbl
test
xor
sub
sbb
dec
mov
imulb
xchg
dec
sub
xor
xchg
mov
lcall
icebp
or
dec
sub
movsl
arpl
xchg
pusha
xor
pop
mov
add
lahf
or
jb
movsb
dec
cwtl
xor
mov
sub
add
mov
dec
aam
mov
popa
mov
cmpb
dec
push
iret
sub
dec
cltd
in
das
rcl
repz
fnstenv
dec
arpl
pop
xchg
cwtl
test
pop
xor
add
inc
add
dec
ss
arpl
int3
es
xlat
std
ja
nop
mov
shrl
pushw
lds
push
mov
push
push
pop
pop
shlb
cmp
push
iret
ret
dec
add
clc
mov
daa
push
adc
jle
inc
pop
push
shll
leave
xchg
push
lods
lds
sub
sahf
rcll
add
jnp
leave
adc
pop
imul
dec
lds
movsl
lret
sbb
enter
in
lds
jl
lods
shl
xlat
pop
mov
sbb
repnz
pop
stc
mov
xchg
sarl
push
mov
push
inc
fistl
sub
mov
stc
xorb
lds
dec
mov
mov
add
scas
mov
mov
cli
jo
rorb
inc
out
jmp
inc
ljmp
jo
mov
sub
xor
mov
mov
mov
pop
mov
iret
xor
pop
jae
pushf
gs
es
movsb
and
idivb
in
xor
xor
mov
mov
sahf
push
int3
test
sbb
push
add
adc
pop
xchg
out
bound
dec
test
mov
cltd
xor
nop
jnp
inc
movsb
lods
pop
or
addr16
adcl
arpl
cmp
dec
xchg
daa
mov
rcrl
cmpsl
mov
movsb
test
dec
xlat
sub
cmc
cmc
sbb
ret
hlt
fwait
pushf
mov
jnp
sub
es
xchg
rclb
sub
lcall
fsubrs
pushf
and
aam
jge
xchg
mov
mov
fidivs
lret
int
push
mov
cmp
xor
dec
mov
push
push
pop
arpl
mov
and
push
mov
scas
arpl
adc
movsb
mov
nop
lods
test
movsl
je
mov
push
push
jg
mov
movsb
lret
mov
sbbl
lods
adc
xchg
inc
cmp
and
inc
data16
mov
fistl
jmp
loope
lods
out
mov
mov
mov
call
cmp
jb
mov
orl
into
roll
test
mov
mov
xchg
jl
sbb
mulb
arpl
xor
dec
push
out
dec
sbb
fnstcw
rcll
cmp
int
cmp
pop
ja
out
aas
in
lahf
inc
dec
cmpsl
sti
ljmp
incl
jb
sbb
aam
mov
or
cmp
cmpsl
out
shll
fimull
xchg
cmc
push
outsb
jp
insl
pop
lock
xchg
in
push
xor
inc
jp
dec
xor
jge
or
in
sahf
dec
and
lods
pop
into
push
sub
mov
xchg
outsb
jnp
mov
insl
or
or
je
xor
push
pop
xor
je
addr16
sbb
sub
mov
adc
pop
cli
push
mov
movsb
pusha
adc
jb
daa
xchg
mov
adc
call
rorb
dec
fiaddl
xchg
push
fwait
mov
lds
adc
test
das
insl
adc
ss
fcomi
fistpll
pop
repz
lods
dec
stc
shl
movsb
mov
sbb
bound
rorb
pop
xor
fldcw
sub
mov
mov
jb
bound
lea
stos
fdivl
or
les
das
popf
cmpsl
or
hlt
or
inc
ss
mov
cmpsl
fidivrs
sub
hlt
popf
andb
call
mov
leave
divl
mov
mov
sysenter
add
repz
rorl
add
xor
sbb
inc
int
inc
sti
mov
fsubrs
loop
clc
lds
pusha
loop
mov
ds
sub
add
inc
pop
mov
into
movb
in
push
add
movb
jmp
cs
jp
mov
pop
mov
sbb
mov
dec
cmpb
dec
pop
popf
mov
jge
movsb
push
jb
outsb
call
shll
mov
cmp
pop
pop
mov
jl
sub
or
lods
dec
xlat
lret
dec
adc
jge
nop
test
adc
adc
popf
pop
cld
sub
sbb
shrb
and
cld
push
mov
ds
sub
dec
inc
dec
mov
push
xor
mov
addr16
packuswb
lods
je
dec
sub
bswap
sub
movsb
xor
shlb
and
xchg
sub
in
sti
fadds
test
fsubl
scas
jo
in
jb
mov
mov
cmp
xchg
jb
movsb
cltd
or
sbb
inc
cmp
adc
or
xor
pusha
movl
mov
sbb
push
mov
loop
iret
mov
faddl
mov
jg
push
imul
daa
notl
ret
hlt
daa
into
sbb
negl
xchg
adc
jns
hlt
lahf
cmp
push
lods
mov
out
mov
adc
push
dec
dec
mov
cltd
lods
lret
add
pop
push
inc
push
repnz
aam
mov
lds
pop
scas
add
mov
add
mov
xchg
in
outsl
adc
movsb
inc
pop
mov
lods
push
cmp
sbb
or
cmc
into
or
adc
mov
dec
mov
mov
cld
push
sub
xor
roll
lcall
inc
loope
loope
cmp
mov
sub
cmp
pushf
cld
je
cmp
add
xor
cmpb
in
fwait
xchg
cli
or
mov
in
lods
ljmp
xor
xor
das
mov
xchg
outsl
add
sbb
dec
ljmp
stos
insl
cli
jae
cmp
inc
jecxz
daa
rol
mov
loopne
enter
cmpsb
sub
mov
test
xor
in
pop
and
xor
push
arpl
loope
add
insb
icebp
fcmovbe
or
mov
mov
jge
pop
pop
push
sub
movsb
pop
sub
cmp
les
pop
inc
lahf
or
pop
int
lods
inc
aam
sbb
sub
mov
jge
push
mov
pushf
decl
push
fcmovnb
stc
adcl
mov
inc
aas
mov
cld
pop
fnstsw
adc
push
or
int
pusha
push
mov
ret
and
jbe
cld
sub
dec
add
sbb
adc
push
pop
mov
insl
inc
fisubrs
sbb
ds
mov
mov
lods
cmp
ss
into
icebp
xchg
pop
add
enter
rcr
lock
adc
jae
dec
and
movsb
das
fisubrl
push
sbb
push
and
lods
enter
mov
mov
out
and
inc
sub
mov
mov
pop
cmpl
jbe
push
lds
cmc
cs
rcl
mov
and
pop
inc
xlat
lods
ret
push
das
sub
inc
fisubrl
shlb
cmp
inc
mov
xchg
out
ret
das
fcmovbe
xchg
inc
mov
and
rcll
cmpsb
inc
xor
idivb
mov
out
or
push
mov
add
mov
frstor
jne
fnstsw
in
shrb
adcb
pop
iret
fidivs
imul
rorl
shrl
insl
inc
mov
or
or
lods
sub
fisttpl
and
and
jae
lods
ret
ja
or
repz
inc
hlt
ss
cld
call
xor
mov
inc
dec
lods
pop
xor
test
nop
mov
dec
push
add
jne
mov
lcall
enter
and
push
sbb
inc
or
mov
jp
xchg
test
outsl
push
jmp
ja
sub
insb
movsb
daa
data16
mov
mov
dec
movsb
xor
cwtl
sub
xor
lods
mov
mov
addr16
mov
mov
mov
lock
sbb
hlt
fiaddl
mov
fdivp
loopne
fmul
cmp
jns
stos
bound
pop
pusha
movsl
mov
aam
pop
xchg
jle
subl
mov
out
sbb
jae
std
sub
add
sub
cmc
xchg
dec
xchg
inc
sbb
dec
lcall
test
lods
push
pop
lea
dec
push
mov
lds
push
gs
shl
jb
stos
movsb
sub
dec
and
jg
mov
sub
icebp
out
mov
sahf
xchg
inc
std
cwtl
xorl
das
negb
lods
in
mov
ljmp
dec
dec
int
jno
test
cmp
pop
insl
sahf
sbb
pop
loope
jnp
mov
xor
fstpt
lock
lcall
daa
int3
movsb
mov
repnz
sub
push
lods
iret
scas
dec
mov
dec
cmp
stc
push
xchg
adc
adcb
scas
shrl
sub
xchg
imul
push
call
ret
jo
outsb
imul
xchg
shlb
and
jmp
aas
jns
jne
pop
mov
inc
mov
sub
jnp
inc
out
xchg
cmc
adc
jecxz
sub
inc
sub
das
pop
imul
jmp
divb
loope
sub
inc
and
or
fstpl
faddl
push
xchg
xor
ds
stos
mov
lahf
inc
jb
movsb
inc
and
cmc
pusha
loopne
div
pop
xlat
mov
xor
jae
out
scas
sub
push
test
cld
aaa
inc
xor
mov
movsb
jns
jb
add
cltd
or
or
mov
ficomps
nop
in
adc
fidivrl
mov
xor
xchg
in
arpl
jbe
sub
mov
cmp
inc
sub
and
iret
lods
fildll
movsl
push
mov
test
sub
adc
call
decl
ja
in
mov
dec
lods
and
dec
mov
subb
push
mov
push
inc
std
clc
mov
mov
xlat
decl
ret
or
push
in
sbb
jge
lods
out
popa
into
push
sbb
xor
aam
idiv
aad
je
pop
push
mov
xchg
into
call
test
lock
push
and
sub
inc
fsubr
jg
mov
mov
sub
or
add
pause
sbb
movsb
mov
jo
jb
subl
enter
cli
cmp
push
fld
push
repz
mov
sub
sahf
dec
pusha
xchg
sub
mov
lods
shll
jmp
xor
xor
pop
popf
and
xlat
cmpsl
cmp
scas
imul
jb
es
shlb
or
add
popa
inc
orl
or
fisttpll
outsb
jb
pop
inc
mov
enter
ds
adcl
sbb
jecxz
xor
inc
push
hlt
addr16
xor
aaa
cmp
push
or
aad
je
ss
aaa
pop
lret
sub
mov
mov
cmc
lahf
pusha
mov
xlat
cs
setl
mov
inc
out
shlb
sbb
pop
sub
push
sbb
scas
out
mov
js
loope
std
dec
pop
and
pop
das
adc
ret
insb
ds
sub
cmp
test
dec
xchg
jge
insl
or
push
push
xchg
lds
push
push
aam
jge
lds
mov
cmpsb
pop
cld
les
push
inc
cmp
mov
lods
test
dec
xchg
adc
pusha
sub
dec
pop
lods
clc
jle
add
xor
push
pop
add
push
dec
push
mov
cmp
mov
mov
std
mov
xor
mov
xorl
mov
add
xchg
cli
js
mov
enter
sbb
push
or
inc
mov
push
sbb
sub
outsb
jno
inc
mov
int
in
pusha
insb
add
dec
imull
push
push
jb
movsb
and
in
and
pop
fimuls
lods
cmpsb
test
mov
adc
mov
mov
fidivl
mov
fcoms
test
pop
add
add
movsb
ds
jns
ljmp
fwait
mov
pop
jae
sub
jp
jns
and
cmc
stc
inc
xchg
arpl
xchg
dec
repnz
cs
pop
into
aam
dec
jecxz
push
cmp
fstpt
bound
das
out
pop
pop
mov
pop
imul
mov
inc
add
dec
mov
fidivl
push
jge
jns
ret
and
movsb
fsubrl
enter
xchg
pop
imul
pusha
in
test
les
push
loopne
iret
idiv
jge
sub
push
xor
pop
stos
sub
xor
outsl
add
cmc
inc
mov
push
add
cmp
pusha
in
push
outsb
inc
adc
pop
jo
cmc
sub
out
leave
es
xlat
mov
cmpsb
das
movsl
sar
mov
int3
push
popa
jns
sbb
and
lcall
and
mov
aas
add
cmc
mov
mov
aad
std
shrb
push
fwait
ds
xor
arpl
in
fildl
dec
push
out
jb
mov
hlt
mov
mov
cmp
daa
cltd
adc
pop
xlat
sahf
fcomi
in
and
lds
mov
inc
fiadds
shrl
stos
test
dec
inc
ss
xor
mov
icebp
mov
ret
das
mov
pushf
mov
mov
je
jo
jb
movsb
xchg
sbb
xchg
xor
sahf
add
and
add
mov
cwtl
es
aam
leave
mov
stos
in
popf
movsb
movsb
mov
push
adc
shrb
int3
ljmp
das
lcall
clc
rcrl
dec
adc
mov
jns
jae
std
xor
movsb
xor
xor
jg
mov
and
adc
icebp
ja
xchg
test
faddl
pop
mov
pop
stc
sbb
jbe
clc
sbb
fs
dec
jb
sub
mov
rclb
jo
mov
sbb
cmp
movsb
pusha
xchg
repz
scas
imul
add
into
enter
jnp
test
adcb
imul
cld
adc
outsb
call
ds
and
and
scas
push
mov
nop
sub
repnz
jp
xor
dec
mov
jp
xchg
movsb
mov
sub
fiaddl
mov
test
xor
pushf
push
enter
pop
xorl
mov
mov
loop
mov
std
sbb
sub
frndint
pop
sbb
sahf
mov
shrl
xchg
xchg
imul
sbb
jmp
stos
aad
fimull
mov
sbb
xor
movsb
imul
ja
sbb
rcrl
mov
add
or
les
fsubrs
popf
stc
ja
movsb
pusha
cltd
imul
out
lcall
adc
dec
push
push
and
lds
push
push
lods
inc
mov
mov
sub
jmp
add
xchg
xorl
lods
xchg
outsb
iret
adc
movsb
push
dec
fwait
and
mov
xchg
mov
mov
call
inc
sub
cltd
mov
sub
inc
inc
push
mov
cmp
dec
ss
icebp
pop
subl
scas
mov
mov
rcr
xchg
ljmp
orb
scas
inc
sbb
sbb
inc
inc
aam
fmull
imul
insl
das
sub
sti
mov
test
xor
dec
rcrl
fsubrs
lods
lds
dec
cpuid
xchg
test
in
pop
test
out
xchg
movsl
adc
jo
or
mov
dec
xor
popf
mov
das
or
mov
cli
mov
jle
pusha
imul
pop
pusha
and
sbb
pop
xchg
es
js
fwait
pusha
fisttpl
mov
sub
and
mov
lods
test
movsb
into
hlt
or
test
xchg
jb
or
aad
and
jbe
push
mov
sub
cmpsl
outsb
pop
push
insb
sub
lcall
test
sbb
push
fbstp
add
mov
mov
in
push
dec
in
jmp
mov
xor
loope
sbb
sbb
mov
outsl
mov
or
movsl
and
jl
push
or
xchg
aam
cmc
lods
and
pop
jne
das
push
mov
iret
push
push
popf
out
jb
mov
cmp
sbb
scas
cmovb
mov
sbb
push
arpl
pop
insb
jno
icebp
xor
sub
adc
stos
cli
xchg
inc
and
adc
adc
test
call
lods
popa
loop
add
dec
lcall
xchg
mov
sbb
cli
pop
pop
lds
or
push
add
cwtl
cmp
addl
sub
lea
sub
fisubs
mov
sbb
fsubrl
push
sbb
push
int
out
out
arpl
sbb
test
push
notb
push
stc
sarb
pop
stos
aam
sbb
iret
test
jb
sub
popa
dec
pop
lret
ficompl
in
lock
jmp
adc
sub
mov
cwtl
pop
xor
mov
icebp
pop
xchg
aaa
cwtl
add
push
movsl
jecxz
arpl
addr16
mov
dec
push
jg
cld
push
push
or
jle
ss
dec
fstpt
sbb
sub
mov
imul
and
mov
jo
or
lds
xlat
mov
jmp
dec
ja
jb
cltd
mov
adc
bound
push
push
dec
cmpsw
pop
xchg
mov
rorb
movsb
sbb
int
out
rclb
dec
cmpsl
mov
iret
xchg
popa
mov
pop
into
scas
stc
sub
icebp
shll
lea
je
or
fcomi
dec
mov
xor
dec
ljmp
bound
bnd
dec
mov
daa
fnstsw
or
mov
mov
lds
out
add
jmp
sbb
in
mov
mov
sub
fmuls
hlt
xorl
fdiv
cld
out
mov
enter
les
or
mov
jge
push
js
das
rcrl
pusha
jno
cmp
test
sub
pusha
sub
scas
mov
hlt
dec
rorb
pusha
mov
mov
sets
pushf
xorb
mov
lods
jecxz
sub
and
fmul
mov
mull
pop
mov
movsb
push
dec
js
fnstenv
scas
pop
jns
bound
xlat
adc
mov
cli
mull
cltd
lds
pop
and
sti
xor
pop
push
jae
jbe
sbb
sub
mov
movsb
fwait
lock
rep
adc
sbb
cltd
insl
sub
jge
rcrb
push
cmp
ret
shlb
inc
mov
xchg
int3
push
ljmp
out
hlt
push
leave
and
sbb
imul
jo
stc
push
lods
mov
mov
clc
dec
iret
xchg
je
rcrl
sbbl
sbbb
inc
xlat
add
in
sbb
stos
mov
ljmp
test
in
divb
enter
jge
addl
add
or
push
lods
jp
push
sub
jecxz
es
push
dec
faddl
cmp
icebp
pop
pop
jbe
push
mov
mov
push
bound
repz
mov
mov
nopl
movb
sbb
lret
pop
lods
rcll
ja
pop
sbb
rorl
and
dec
adc
dec
adc
push
dec
sbb
xor
jp
push
cwtl
scas
dec
mov
and
dec
flds
lret
adc
push
mov
ret
mov
mov
std
add
in
icebp
daa
mov
lock
mov
xchg
sub
lods
les
push
hlt
aas
sub
push
test
in
dec
movsb
xchg
push
inc
icebp
out
jb
jno
push
nop
clc
daa
rcpps
mov
les
mov
xor
pop
in
out
les
data16
jno
cmc
push
out
bound
aam
add
bound
orl
int
adc
and
movsb
int3
push
das
sub
insb
sarl
mov
out
push
gs
scas
repz
sbb
jge
rcrb
adc
pop
bound
ret
push
in
and
push
sub
pop
pop
cltd
outsb
xchg
pop
roll
out
je
pop
pushf
mov
mov
pop
push
jp
xor
ja
inc
cmp
sub
shrb
leave
add
mov
in
cmc
jb
scas
mov
cmp
xchg
xlat
xor
loope
mov
sbb
int3
cmc
mov
inc
or
notb
sub
mov
fcomps
sub
sbb
lods
jbe
mov
cmc
cmpsb
mov
push
bound
je
dec
fisubrs
jno
outsl
ret
mov
movsl
cld
iret
sbb
cwtl
cwtl
jl
xor
into
out
xchg
push
or
hlt
jne
in
mov
mov
sub
pop
cwtl
in
mov
aam
mov
lea
out
fimuls
mov
mov
shrb
test
lcall
jp
clc
push
mov
leave
stos
mov
scas
subl
cmpsb
in
out
imul
movsb
sub
repz
loope
inc
insb
sub
scas
adc
iret
ret
lods
pop
or
push
ljmp
jo
aam
adc
lods
rolb
sbb
xchg
push
je
sub
mov
ret
mov
fidivl
in
add
push
ljmp
xor
push
ds
movsb
mov
mov
js
aad
cltd
leave
fcmovne
inc
jl
testb
mov
mov
divl
push
sub
jnp
add
leave
push
dec
fldenv
jge
call
add
and
or
hlt
stos
sahf
pushf
mov
fmull
repnz
inc
xorb
adc
pop
mov
cli
adc
add
in
sbb
jbe
jns
movsb
cli
je
xor
mov
lods
sub
mov
mov
mov
push
cmp
int3
xchg
pusha
add
outsb
fcomi
mov
inc
jnp
jb
cmpsl
int3
inc
pushl
sbb
sub
hlt
mov
testl
sub
outsb
cmpsb
xor
and
sub
cmc
pop
cmp
pop
notl
sub
mov
sub
mov
enter
movsb
fwait
call
inc
push
mov
das
jge
xor
sub
mov
dec
lods
ds
pop
int3
shl
repz
xor
and
jmp
mov
test
mov
enter
stos
fisubrs
cmp
andb
in
dec
sub
jo
movsb
jmp
das
mov
in
inc
mov
movsl
mov
loop
jns
in
movsb
sbb
sub
aam
push
pop
fisubrs
cltd
loope
xor
cmp
movsb
aas
jecxz
popf
xor
repz
xchg
dec
ljmp
mov
xchg
adc
dec
jmp
mov
and
pop
adc
pop
mov
ret
mov
sub
iret
pop
cmpsl
cmpsl
dec
call
scas
aam
movsb
in
push
jno
mov
jge
sbb
pop
arpl
outsb
sbb
jp
sub
and
jge
dec
hlt
pop
mov
pop
outsl
mov
pop
fsubs
in
or
call
xchg
xor
pop
mov
dec
and
mov
adcb
mov
lods
mov
int
and
loopne
imull
in
sub
jl
repz
cmp
or
test
ds
sbb
mov
jbe
pop
aaa
mov
gs
pop
xor
psrld
movsb
sbb
sbb
mov
int3
inc
cmpsl
int3
jns
fists
cmp
roll
cmc
addr16
sbb
or
movsb
hlt
or
adcl
xlat
mov
mov
xor
add
loop
dec
and
lret
fildl
mov
dec
testl
and
addl
arpl
shr
hlt
mov
add
vaddss
test
push
and
and
in
insb
push
adc
insl
enter
gs
push
aaa
test
pop
inc
pop
cld
gs
outsl
lcall
push
out
jp
addl
nop
jecxz
mov
adc
mov
lods
ficompl
cs
nop
xchg
jae
sub
or
shr
sub
mov
xor
lahf
int3
adc
jge
jmp
mov
inc
ret
sub
sub
xchg
push
pop
in
jns
sbb
pop
push
xchg
call
insb
dec
aam
and
mov
cmc
xchg
cmp
inc
lret
insl
push
ds
scas
pop
frstor
outsl
mov
adc
add
pop
sub
xor
sbb
sbb
jb
clc
sub
aam
scas
xor
inc
das
xchg
sub
je
fwait
or
mov
cmpsl
mov
loopne
sub
xor
movsb
add
dec
add
sbb
or
nop
out
cli
or
into
xlat
pop
and
lods
xor
push
xchg
ljmp
pop
pop
jle
push
push
sub
mov
jle
inc
pop
mov
daa
aaa
pop
shl
xchg
dec
xor
xchg
in
adc
jo
test
movsb
xor
stos
stc
mov
dec
add
xor
popa
mov
mul
fs
push
jecxz
push
xor
icebp
ret
jl
repz
insb
cld
cmp
jae
cmp
xor
and
lods
addr16
pusha
pop
cmp
frstor
ljmp
or
cmp
mov
cmp
dec
cmp
pop
enter
push
repz
fidivrs
xchg
lods
xor
movsl
xchg
adc
loope
sbb
push
int
dec
repnz
push
adcb
cltd
subb
mov
and
or
aam
mov
movsl
out
cmc
push
stos
je
xor
test
fwait
pop
out
inc
movsb
add
xchg
insl
mov
jae
bound
jb
dec
movsb
jb
scas
lock
jne
aam
inc
repnz
jbe
clc
or
lds
push
repnz
clc
sub
or
or
roll
mov
jmp
dec
out
aam
mov
scas
mov
push
jmp
cs
lock
lods
aad
inc
hlt
dec
or
loope
js
xchg
lods
dec
dec
sbb
mov
sbb
movsl
add
aad
cmpsb
jbe
outsl
dec
outsb
cmp
mov
xorl
bound
xor
fldcw
xchg
push
roll
sub
mov
jp
and
sbb
ljmp
adc
mov
mov
test
xor
test
loop
notb
mov
ljmp
inc
push
fsubrl
aas
jnp
xchg
ljmp
or
adc
mov
scas
lret
sbb
ret
mov
int
fs
push
jmp
out
jo
scas
in
sbb
inc
movsb
dec
lret
dec
das
addl
inc
or
arpl
lods
cltd
addb
jge
lahf
cmp
stos
push
sub
jmp
mov
cmp
out
mov
push
repz
sbb
dec
scas
pop
jae
ficomps
test
cmp
adc
fdivs
push
pop
shll
jle
mov
dec
mov
fimull
jns
dec
repz
out
fldt
xchg
out
xlat
jmp
aaa
push
repnz
lahf
push
pop
js
mov
jb
outsb
add
out
or
or
bound
mov
ja
pop
adc
das
mov
repz
lods
mov
adc
sbb
mov
pop
sarb
mov
mov
hlt
mov
xor
negl
dec
pop
sbb
movsb
mov
out
es
test
pushf
mov
dec
cld
xchg
clc
cld
insb
test
repz
and
or
fcomp
mull
call
adc
or
and
inc
rcrb
and
mov
dec
fs
xor
pop
mov
popf
add
loope
sbb
and
jmp
lods
ret
cmovo
imul
xchg
popf
sahf
dec
sub
and
sub
or
mov
or
mov
loop
addr16
push
scas
stos
test
push
into
sahf
arpl
pop
cltd
sub
jmp
je
icebp
insl
shlb
test
ret
add
dec
push
ljmp
fidivrl
repz
aam
pop
mov
mov
dec
stc
jne
mov
push
insb
dec
push
jno
adc
sbb
xchg
std
mov
adc
mov
subb
ficoml
add
lret
ds
outsb
movsb
shrl
nop
lret
pusha
or
mov
jmp
jne
pop
cmpsb
mov
loop
nop
push
repz
jno
dec
fiaddl
ret
or
mov
sbb
dec
sbb
insl
movsl
mov
cmp
mov
cmp
mov
icebp
xor
int
es
in
add
out
dec
test
testb
addr16
inc
mov
cmp
arpl
mul
mov
mov
jb
dec
mov
cmp
push
pop
add
pop
xchg
or
insb
xchg
movsl
push
int
pop
loope
push
out
add
sbb
and
fidivs
pop
pusha
and
sub
pop
xor
int3
xchg
lods
jns
jae
mov
jo
dec
sub
es
push
add
scas
lret
shr
hlt
inc
pop
ret
mov
fsubl
add
sub
sub
les
push
cmp
mov
xchg
mov
xor
lea
out
dec
push
icebp
scas
dec
jno
cmp
movl
fmull
dec
xchg
lret
cmp
enter
call
and
push
jbe
pop
test
sbb
lods
roll
arpl
jmp
lcall
outsb
mov
iret
cli
insl
jmp
lds
xor
ret
shrb
mov
movsb
cmp
fs
testb
mov
loope
dec
pop
ljmp
or
lods
and
loopne
or
sub
call
pop
xchg
ret
push
inc
jnp
adc
jb
cmp
cmpsl
or
mov
sub
decl
es
dec
mov
adc
mov
mov
jl
test
pop
mov
leave
ljmp
pop
lret
xor
push
sarl
pop
push
aas
dec
movsl
pop
jmp
cld
insb
sub
inc
stos
push
cmpsb
pusha
add
mov
cmp
sbb
xor
push
in
out
sub
sub
incl
mov
sub
lahf
mov
mov
gs
lea
addr16
iret
mov
inc
ss
mov
nop
iret
bound
sub
and
dec
sub
out
inc
xor
outsl
cmpl
or
iret
dec
dec
movsl
outsb
scas
cmp
push
pusha
shl
push
pop
imul
mov
mov
and
mov
es
mov
pop
aaa
fidivl
pop
inc
mov
sub
sub
int
jnp
lahf
or
sub
lcall
cmpsl
xor
sbb
arpl
fcmovbe
xchg
pop
into
pop
mov
or
cld
clc
pop
sub
add
jmp
and
and
and
jae
and
jae
movsb
iret
sbb
int3
cmpb
imulb
sahf
push
add
cmpsl
mov
xor
or
in
jl
lahf
add
jb
xchg
shlb
inc
xor
clc
rep
stos
stos
cmpsb
mov
sbb
xchg
xor
mov
jne
push
dec
jge
into
push
cmp
inc
xchg
inc
ss
or
inc
push
cmc
xor
jg
mov
fimull
outsb
cli
sbb
iret
lds
lea
jge
stc
xchg
jno
dec
inc
mov
into
enter
push
or
pop
lock
pushf
ror
in
sub
jno
inc
dec
test
sub
xor
add
icebp
mov
gs
lods
rolb
add
iret
sbb
loopne
lcall
mov
inc
sub
icebp
mov
mov
cmpsb
inc
fcoms
jnp
sub
ss
mov
bound
flds
pushf
ss
inc
movsb
outsl
pop
popa
mov
jae
movsb
push
fisttpl
xor
xchg
xor
pop
jns
fsubrs
iret
rorb
ret
pop
mov
cmp
mov
push
int3
dec
inc
dec
push
mov
mov
pop
aad
in
sahf
fisubrs
dec
aam
cltd
mov
ficoms
popa
pop
sbb
xor
mov
and
and
aam
cwtl
test
jne
ss
clc
mov
mov
enter
ret
cli
imul
ret
fmulp
jl
arpl
cmp
cld
adc
dec
push
mov
add
push
jecxz
loope
add
mov
addr16
sbb
mov
into
arpl
cmp
imul
pusha
sub
pop
mov
or
mov
xor
mov
scas
cld
sbb
lea
js
cli
cmc
sbb
stos
in
inc
mov
mov
jo
push
loop
pop
sbb
ljmp
mov
pop
push
xor
jno
or
dec
adc
sub
lods
in
cmp
mov
mov
xor
mov
mov
lcall
jg
push
js
sub
mov
mov
push
inc
call
and
adc
hlt
arpl
mov
add
mov
xor
mov
stos
mov
outsl
out
aad
rep
nop
cltd
sahf
fsubrs
test
mov
cld
ja
and
add
xor
sub
pop
jno
addb
and
jb
push
mov
test
xor
rcrl
call
outsb
cmpsb
mov
sub
jno
and
push
ficoms
leave
inc
mov
movsb
orl
sbb
movsl
push
dec
dec
adc
mov
cmp
inc
dec
sbb
add
fdivrl
and
mov
add
jp
je
xor
inc
enter
push
jmp
or
xor
sub
jp
add
icebp
ds
cld
jo
sub
xlat
cltd
clc
mov
lret
sbb
mov
or
xchg
xor
cli
sbb
fimuls
hlt
mov
inc
xor
mov
xor
ss
pop
lret
mov
fxtract
daa
pop
fldenv
fidivrs
lods
ljmp
test
outsl
add
inc
les
push
add
dec
add
push
fists
xchg
mov
pop
rorb
out
lods
mov
je
jg
add
push
shrl
test
inc
lds
bnd
pushf
ljmp
jno
into
inc
push
xlat
movsb
gs
dec
in
lods
icebp
icebp
insl
movsl
mov
sbbb
mov
mov
sub
gs
push
scas
repnz
fsubrl
push
dec
xchg
das
xchg
jp
and
std
push
jne
jno
jne
push
and
int3
roll
adc
aam
lods
pop
ljmp
sbb
mov
out
mov
decl
movsb
dec
loopne
and
and
mov
lcall
add
adc
adc
ja
mov
ret
jp
outsl
test
dec
sbb
cwtl
and
mov
mov
sub
add
sbb
enter
add
adc
fwait
dec
jp
mov
and
xor
dec
or
test
sbb
push
cmpsl
lcall
dec
pop
jmp
mov
mov
mov
push
sub
movsb
sahf
int
mov
andb
sub
hlt
xor
shrb
xchg
lods
pop
pop
mov
and
test
dec
xchg
leave
call
or
xlat
jge
jecxz
movsb
gs
and
push
out
test
mov
repz
inc
pop
pushf
nop
lock
inc
mov
stos
pop
dec
inc
ret
lods
xchg
xchg
or
mov
xor
dec
lds
cld
sub
sub
aaa
mov
and
stos
mov
push
dec
dec
imul
scas
stc
or
and
arpl
add
adc
and
sub
dec
jbe
lods
pop
pop
push
pop
imul
lds
push
clc
nop
mov
xchg
inc
scas
mov
or
inc
int
jne
out
pop
mov
add
hlt
mov
ss
rolb
pop
sub
mov
jnp
add
xchg
insl
sbb
sub
gs
mov
dec
clc
pop
adc
push
push
aaa
lcall
inc
stos
scas
sbb
mov
loopne
repz
cltd
sti
jp
sub
xor
aad
arpl
push
push
repz
pop
idiv
cmp
push
pop
add
mov
sub
jge
mov
ja
dec
push
in
xchg
mov
push
dec
mov
out
pop
sub
push
mov
inc
sarl
sar
cmpsl
hlt
mov
bound
enter
xchg
sbb
je
sub
or
cmp
test
ss
sbb
rorb
lar
fwait
in
repz
leave
xor
imul
arpl
or
mov
mov
repz
mov
pop
jb
and
sbb
rcrb
or
and
scas
fidivrs
push
mov
xchg
popa
or
xor
cwtl
into
mov
push
aad
sub
jge
stos
push
xor
test
lret
adc
pop
je
ficomps
push
cmp
mov
fdivrs
cltd
jbe
aaa
iret
mov
decb
inc
mov
shl
push
adc
lods
fildll
lahf
cli
fisubrs
scas
or
inc
mov
into
add
out
adc
nop
fwait
add
into
sub
add
adc
enter
lcall
or
xlat
jle
fistpll
loopne
ljmp
sub
call
mov
test
sbb
sub
push
dec
mov
aam
mov
mov
setp
dec
sbb
lea
mov
dec
or
mov
loope
cmp
decb
fs
xchg
mov
cli
add
xchg
lcall
mov
lods
mov
pop
sbb
push
and
push
daa
fmuls
dec
outsb
nop
shrb
cmp
push
outsl
repnz
or
mov
ret
shl
add
xor
mov
or
fsubs
pop
mov
xchg
or
or
and
mov
insl
xor
inc
into
imul
lea
and
adc
ret
jnp
aad
xor
inc
shrl
mov
push
js
mov
push
mov
fwait
aam
loop
cli
mov
leave
xor
or
cs
mov
lods
jle
fisubrs
dec
cmpsb
pop
xor
sub
mov
scas
test
fcomps
jo
sub
xor
js
fldenv
aam
cli
push
jmp
aas
ja
das
sub
rolb
sub
and
sbb
fldcw
das
out
adc
mov
xor
mov
cs
inc
sbb
adc
mov
in
rsqrtps
call
mov
imull
scas
in
stos
xchg
and
xor
jle
test
dec
scas
ljmp
jge
ja
shlb
lds
push
mov
xor
cld
insb
xchg
sub
xor
sbb
out
jno
sub
and
mov
dec
ss
sbb
mov
enter
push
jae
push
sub
pop
sbb
je
imul
xlat
cli
mov
sub
sub
scas
mov
adc
fstpl
pop
and
cwtl
sbb
pop
das
je
dec
popf
repz
pop
jns
sub
outsb
and
fisttpll
je
push
inc
call
xor
leave
xor
lock
sbb
stc
loop
hlt
cmp
jle
xchg
ja
or
rcrb
mov
adc
icebp
dec
jo
aaa
aaa
push
dec
and
insb
imul
xchg
scas
sub
sub
das
jmp
xchg
inc
add
test
sbb
adc
das
notl
pop
cmp
outsb
ja
out
sbb
out
mov
das
cmp
sarl
jns
adc
jo
and
cmp
push
rorl
jl
xchg
aas
outsl
dec
mov
lods
jae,pt
jmp
xchg
push
lea
inc
mov
aad
ss
scas
insb
insl
subb
imul
mov
stos
loop
ja
rorb
and
lahf
jmp
xchg
mov
push
push
icebp
add
xchg
fwait
popf
pop
les
sub
lahf
dec
cld
xchg
clc
jo
sub
fiaddl
cltd
outsl
sub
dec
inc
and
ja,pn
cltd
stos
and
sbb
push
aaa
orb
ret
subb
scas
sti
das
pop
int3
sub
mov
stc
mov
push
mov
int
cmpb
stos
add
and
arpl
mov
or
push
adc
mov
shlb
jno
mov
scas
test
cmp
mov
pop
push
xor
scas
lods
inc
in
mov
outsb
push
lret
sbb
enter
sub
mov
ja
shll
jle
scas
movq
ss
dec
dec
call
or
jecxz
lcall
mov
sub
scas
idivl
popa
sub
mov
jne
dec
icebp
jecxz
lock
cltd
mov
and
dec
jb
push
sub
mov
xchg
mov
ja
mov
out
das
cs
push
sbb
aas
xchg
outsb
in
xchg
bound
mov
testl
dec
or
dec
clc
popf
mov
jae
mov
and
xchg
dec
adc
xor
dec
add
lods
jo
sub
cs
movsb
cli
pop
cs
jmp
mov
mov
stos
dec
fisubl
mov
insl
cmp
mov
dec
shlb
xor
ljmp
sbb
xor
dec
jge
push
jg
into
mov
cs
ret
insb
test
or
pop
xchg
sub
sbb
xchg
stos
mov
and
arpl
out
mov
stos
das
jb
ret
nop
add
divl
in
add
aaa
cmc
xor
pop
add
rorl
jno
mov
cld
into
jno
push
mov
jne
jbe
in
insl
sub
les
iret
insb
aas
mov
xor
lcall
outsl
mov
stos
dec
mov
aam
jne
in
mov
das
cmc
sub
cmp
inc
mov
sbb
xor
xor
sub
cmp
lret
daa
lods
cmp
cmp
in
push
nop
aam
repnz
sbb
insl
int
sbb
sub
mov
jae
das
in
and
cmp
push
add
sbb
and
scas
scas
nop
dec
shrl
jns
xor
popa
adc
sti
stos
sub
jnp
mov
bound
inc
imul
mov
xor
dec
sbb
lods
sub
mov
lret
sub
sbb
lahf
mov
outsb
ss
push
sbb
xchg
stos
ss
sub
sbb
lods
push
mov
jmp
cmc
rcl
scas
lods
scas
jb
das
xor
or
sub
lods
data16
inc
pop
mov
xor
mov
insl
and
mov
out
xor
pop
push
cmp
outsl
aaa
ss
inc
push
nop
push
sub
cmp
dec
stos
xchg
out
out
push
push
xor
push
sbb
testb
jne
push
xor
loope
inc
mov
jecxz
sbb
popa
fsts
add
imull
dec
stos
jmp
or
jp
mov
sub
xchg
mov
inc
into
sub
dec
or
mov
js
outsb
push
pop
daa
sti
xchg
out
mov
cltd
jl
or
iret
into
or
scas
bound
dec
sub
out
sbb
mov
dec
xchg
mov
push
sub
repz
sub
jmp
pop
cmp
les
add
stos
insb
mov
xor
popa
and
scas
out
and
push
push
fisubl
cmp
scas
pop
mov
xor
imul
insb
mov
or
push
inc
adc
cmovne
push
shrb
dec
sbb
xor
stc
movsl
lods
mov
ja
dec
outsb
jne
dec
adc
aam
imulb
sub
xchg
xor
xchg
hlt
imul
adc
inc
pop
pop
sbb
je
insl
scas
dec
push
ds
mov
sbb
pop
jb
mov
mov
fistpll
push
das
jmp
scas
jg
sub
cwtl
ret
push
out
outsb
loopne
adc
xor
fisubrs
xchg
outsl
subl
sbb
sub
into
enter
addr16
xchg
outsl
and
inc
mov
mov
and
lcall
mov
andb
mov
arpl
fdivs
xchg
out
movsb
sub
imul
imul
clc
jmp
mov
mov
mov
mov
mov
or
or
mov
mov
test
hlt
xor
into
adc
cmp
xor
xor
rcrb
add
inc
jns
pop
mov
rorb
cmc
je
mov
xchg
out
jmp
loope
xchg
and
lcall
in
xor
xor
pop
jb
mov
sbb
cmp
mov
jbe
fwait
jb
fadd
mov
jne
jns
jg
icebp
scas
addb
dec
pop
fnstsw
mov
lcall
mov
or
jns
sbb
and
jae
sbb
movsb
clc
popf
push
mov
lcall
movsb
jnp
push
aad
je
jmp
xchg
test
adc
mov
and
xchg
push
dec
push
adc
sub
push
rolb
lods
jecxz
in
imul
mov
xchg
jns
and
ret
lds
mov
call
repz
stc
sahf
mov
sub
pop
rorb
lret
push
lea
adc
pop
add
and
xchg
sbbl
cltd
cmc
ret
mov
inc
lods
inc
jb
dec
cmpsb
movsb
and
sub
call
mov
cmpsb
and
push
aam
xor
sub
inc
movl
les
cs
xchg
dec
out
scas
sbb
fwait
rorb
shlb
mov
add
aam
addb
sub
bound
push
test
or
daa
fstl
call
test
pop
sub
lcall
sbb
loopne
dec
sub
pop
in
push
xchg
cmc
iret
mov
ret
aam
xor
fwait
cmp
in
xchg
lods
out
test
clc
add
pop
imul
ret
cmpsb
popf
int3
mov
mov
rcr
f2xm1
push
ds
jmp
loopne
shrl
jb
lock
adc
push
add
or
push
cmp
sbb
xor
mov
lea
pushf
arpl
sbb
das
mov
sbb
stos
xor
xchg
jmp
jne
inc
sbb
or
movsb
mov
and
fwait
push
lret
cmp
push
loopne
in
cmp
pop
and
ret
adc
pop
xor
mov
stc
and
test
pop
xchg
das
mov
cli
inc
pusha
cwtl
cmpsb
loopne
push
jecxz
mov
jne
mov
fsubs
inc
shr
dec
sub
enter
push
jg,pn
jle
mov
jecxz
push
repz
add
mov
test
push
jp
adc
xchg
mov
stos
adc
xchg
add
lds
pop
pcmpgtw
inc
rorl
inc
sub
imul
cmc
fcmovbe
xlat
or
insl
lds
icebp
and
jmp
adc
mov
sub
push
push
xchg
stos
dec
roll
adc
cmp
fwait
sub
xlat
movsl
arpl
xchg
mov
fwait
hlt
push
lahf
mov
aaa
test
inc
daa
xor
jae
pop
ret
popf
jns
push
mov
dec
sbb
xor
adc
out
aam
cmp
mov
movsb
enter
pop
les
mov
pop
xor
outsb
xor
mov
xchg
sub
rcrl
in
fadds
std
xor
or
xchg
shll
daa
mov
js
fdivrl
sahf
stc
faddl
sbb
jle
sahf
jnp
add
jb
lock
fs
jp
out
mov
out
or
sub
mov
mov
sti
push
in
lcall
les
hlt
mov
push
add
pop
mov
push
push
and
stos
mov
das
mov
neg
sub
ret
outsb
dec
cmc
xchg
test
cs
push
mov
fistpl
mov
pop
clc
xchg
sub
mov
fstpl
and
lods
cmc
cmpsl
es
lahf
push
std
pop
inc
fcomip
test
adc
mov
dec
out
pop
fisubl
or
or
lret
add
dec
mov
dec
stc
inc
scas
pusha
aaa
jbe
je
jnp
movsb
cld
push
push
cmpl
pop
sahf
and
cmp
mov
push
sub
pop
lea
mov
out
adc
inc
enter
add
jbe
push
scas
lods
sbb
xor
cmpsl
add
inc
or
jno
cmc
pop
pop
and
ficomps
fs
fxtract
or
push
jbe
mov
stos
mov
push
push
inc
sbb
mov
unpcklps
nop
push
jno
shlb
shlb
rcrb
adc
les
cmpl
push
cmpsl
ss
jbe
xor
jb
xlat
xchg
xchg
jo
iret
cmpsb
insb
or
inc
push
cs
jns
xor
xchg
aaa
pop
sbb
xchg
and
in
cmc
jne
pop
xlat
cmpsl
insb
pop
outsb
or
jecxz
pusha
rcll
mov
mov
cmp
and
mov
andb
out
lea
push
mov
push
jae
mov
fwait
push
cmp
jb
sti
xchg
shll
xchg
pusha
in
inc
inc
ljmp
adc
mov
inc
lahf
and
jno
mov
push
imul
sub
push
push
mov
outsl
iret
push
mov
iret
mov
aad
dec
sub
sbb
mov
mov
stc
xchg
cmp
add
movsb
lock
pop
mov
pop
push
pop
mov
mov
lea
cltd
into
cmp
and
push
out
iret
jge
mov
pop
jb
and
cld
out
inc
mov
stos
xchg
icebp
jp
fiaddl
sub
testl
into
rcrb
mov
mov
loopne
push
je
out
sub
fmull
orb
aad
pop
mov
mov
mov
paddq
or
fidivl
es
inc
mov
pusha
add
stos
fwait
mov
iret
icebp
or
subb
jae
jo
negl
jns
push
rcr
clc
cmp
sub
push
mov
adc
mov
pop
aaa
mov
scas
cli
sbb
outsb
inc
out
das
in
jg
hlt
lret
stos
sub
lods
int
jns
rcrb
xor
xchg
push
movsb
xchg
rcll
sub
mov
fimull
scas
and
repz
in
outsl
shll
add
popf
cmpsl
roll
decb
sbb
lods
cs
jmp
pop
sbb
or
push
jne
test
into
xor
sub
mov
aam
popf
and
loope
mov
shl
or
xchg
mov
pop
jo
mov
or
pop
ljmp
fadds
dec
push
out
mov
movsb
dec
or
stos
and
mov
cwtl
jmp
push
adc
xor
pop
mov
fisubrl
cs
mov
clc
lods
jmp
xor
out
inc
mov
ja
fsts
mov
into
outsb
or
mov
insl
hlt
mov
mov
sub
add
cld
or
lods
inc
pusha
dec
ljmp
jmp
add
nop
sub
scas
sbb
fsts
adc
jmp
inc
lock
loop
scas
movsb
das
outsl
pop
mov
rclb
das
addr16
or
inc
mov
aad
sub
inc
stos
cmp
inc
xchg
sbb
mov
pop
hlt
jae
lock
cld
cmp
cmp
mov
shl
fs
out
ret
sub
push
xchg
mov
cmp
scas
mov
sbb
loopne
lods
mov
arpl
pushf
or
adc
dec
push
jnp
mov
aaa
jb
add
pushf
ljmp
mov
gs
sbbl
hlt
dec
pop
test
add
fs
dec
mov
insl
das
sbb
clc
addl
push
xlat
sub
into
movsb
gs
scas
incb
push
xor
bound
lret
ja
inc
xlat
push
ret
mov
insb
sub
mov
mov
jb
push
push
and
outsl
or
std
cmp
shll
lods
pop
jecxz
add
adc
fisubrl
inc
xor
sub
cmp
add
imul
inc
leave
and
or
gs
xchg
out
mov
les
mov
enter
dec
mov
xchg
test
push
xchg
mov
lcall
adc
movsb
sti
jl
lcall
jo
jnp
mov
xchg
add
and
pushf
aam
or
ljmp
movsb
sub
pop
lods
lds
in
in
add
rolb
enter
add
or
pop
stos
xchg
mov
lahf
push
addb
dec
push
aad
jp
flds
cmpsb
in
dec
mov
add
repz
xor
cmpsl
inc
cmp
cmp
jnp
scas
mov
lcall
lcall
idivl
stos
mov
js
mov
push
xchg
test
adc
lea
mov
xchg
rcrl
rol
inc
stc
subl
mov
dec
mov
test
arpl
subl
fwait
cmc
movsb
xchg
push
rcrl
mov
mov
scas
push
fwait
mov
sbb
orl
push
sub
int
movsb
xor
pop
sbb
loopne
stos
cmp
xor
insb
add
in
dec
pop
sub
inc
xchg
mov
daa
iret
aam
lcall
mov
lret
mov
pusha
and
shl
jns
in
out
stos
test
mov
cmp
outsb
adc
fucomip
dec
sub
jecxz
xor
lock
xchg
ret
pop
or
es
movsb
xlat
fsubp
sub
cltd
std
loope
dec
in
mov
lahf
adc
lret
mov
lods
ds
cmc
shrl
pop
das
movsb
inc
psubw
xchg
fcmovbe
and
sbb
pop
mov
movsb
rorl
movsl
leave
invd
icebp
cmp
movsl
mov
fcomps
aaa
sub
lods
outsb
xchg
push
sub
into
movsb
sub
test
test
mov
or
loope
xor
sub
or
mov
out
loopne
stos
insb
stos
cmpsb
repz
sbb
sbb
shll
test
jmp
adc
aaa
push
scas
jge
jl
mov
inc
sbb
xor
fwait
mov
stc
mov
movsb
mov
loopne
out
cwtl
cld
orl
or
mov
add
jmp
in
cmp
jmp
dec
enter
cmc
outsl
sub
mov
lretw
adc
notl
repnz
jecxz
mov
mov
rorl
scas
lcall
wrmsr
push
nop
mov
xor
and
sub
mov
fldenv
movhps
push
dec
stos
test
mov
add
ljmp
dec
and
adc
das
stos
sub
xor
mov
cs
inc
xor
popa
inc
jno
xchg
mov
loop
inc
aaa
in
loopne
shlb
scas
sub
mov
fsubr
jno
push
pushf
sbb
sub
int
mov
or
inc
movsl
xchg
cmp
xor
lock
mov
jb
adc
jg
cwtl
mov
jecxz
leave
enter
call
dec
icebp
mov
pop
push
mov
jecxz
and
jge
jno
or
jmp
mov
decl
push
cmp
jb
xchg
inc
adc
loope
test
sarb
or
sub
cmpl
into
xor
pop
inc
fs
pop
cmp
popf
push
push
adc
and
out
jno
jnp
fiaddl
push
cwtl
arpl
loop
out
inc
cmp
fildl
addl
call
cmp
add
lahf
lods
push
and
push
adc
add
iret
and
repz
popa
mov
insb
fs
mov
inc
ficoms
xchg
outsb
or
sbbl
lret
sbb
es
add
cmp
rorl
es
inc
jno
daa
les
add
xchg
push
insl
iret
xor
jo
jns
and
pop
fwait
test
fs
push
xchg
cld
mov
add
push
lea
pop
dec
stc
mov
mov
add
jbe
and
cli
jge
arpl
std
mov
mov
in
cmpsb
call
inc
dec
popf
scas
outsb
pop
je
mov
inc
std
test
enter
aaa
and
jne
push
out
pop
inc
pusha
sbb
out
rep
jge
test
shrl
test
call
aad
jge
mov
pusha
repz
loope
lods
lret
xor
lret
xlat
sub
mov
mov
aam
call
mov
pop
mov
add
stos
test
dec
ds
bnd
jl
out
in
lods
and
sbb
movsb
push
orl
pusha
inc
jecxz
aam
stos
call
std
mov
lret
sbb
push
repz
loope
adc
lds
pop
inc
dec
mov
push
mov
hlt
incb
es
mov
and
movsb
sbb
and
adc
inc
arpl
sbb
jo
push
arpl
scas
das
lock
dec
arpl
fists
int3
sti
in
dec
orb
xchg
hlt
mulb
mov
lret
mov
and
mov
stos
dec
mov
ret
pop
and
mov
das
movsb
jae
xor
xchg
fisubrs
dec
xor
mov
orl
sub
in
ficoms
std
out
adc
xor
xor
popa
das
sub
nop
scas
xchg
daa
add
test
push
jno
cli
cmp
div
jle
push
shrb
jg
dec
je
cmp
push
pop
jno
mov
inc
sti
lods
fidivrl
mov
movsb
sbb
lods
mov
pusha
dec
jp
adc
test
out
gs
shrl
das
add
add
xor
lods
ret
adc
mov
dec
pop
jns
imul
ror
pop
push
sub
xchg
adc
insl
mov
fidivl
and
jb
adc
leave
loope
lea
push
rcll
sub
fistps
repz
xchg
push
sub
dec
adc
lcall
or
fdivrl
repz
addb
xchg
dec
imul
test
sub
lret
mov
push
popf
or
cs
scas
outsb
mov
jo
jge
add
xchg
push
loope
outsb
fnstsw
xchg
int
push
mov
and
xor
pop
and
adc
aam
jmp
fcoml
jp
mov
mov
fnstenv
shrl
cmp
hlt
lret
outsl
fsubr
push
mov
mov
mov
vpshlq
sbb
and
fcoms
push
jg
mov
cmp
rclb
fimuls
loop
lock
repnz
or
pop
fsubr
daa
pop
cmp
add
loopne
outsb
int
push
adc
jecxz
outsl
jnp
jp
sub
es
sbb
fisubrl
inc
repz
movsb
pushf
lea
or
out
pop
adc
aaa
jb
pop
leave
push
mov
mov
lods
out
popa
xor
insl
or
out
lods
shll
add
lock
dec
into
sbb
jp
add
ja
imul
mov
and
sub
lock
jns
inc
mov
xchg
dec
mov
inc
enter
sbb
adc
sub
jne
adc
mov
icebp
sub
cmpsl
xor
outsb
ja
lcall
movsb
aas
aas
int
aad
es
pop
jns
inc
sbb
rclb
fisubs
es
pop
das
xor
daa
jb
ret
movsb
shl
pop
sahf
mov
pop
fs
mov
push
jmp
adc
pop
daa
add
repz
xchg
dec
popf
clc
push
dec
xor
mov
mov
push
jecxz
cli
cmp
jnp
dec
mov
mov
inc
insl
lods
jno
cmp
pop
pop
inc
bound
sub
jno
xor
mov
push
cli
lret
and
mov
bound
mov
mov
inc
xor
ret
mov
out
cmp
push
fcoms
inc
mov
loop
cmpsb
xchg
in
xor
insb
loope
push
sub
vphsubbw
dec
jb
pop
mov
test
xchg
repz
out
roll
mov
out
mov
pushf
sub
das
mov
jb
dec
pop
loop
adc
cwtl
sub
cmp
mov
dec
cwtl
adc
push
fcoms
xor
push
movsb
push
stos
arpl
inc
push
fmul
sbb
insl
sub
mov
movsb
inc
in
mov
xlat
sub
icebp
mov
jmp
pop
int3
iret
xor
sbb
loope
fyl2xp1
sub
push
jb
mov
test
pop
sub
dec
pop
outsl
jne
scas
adc
adc
testb
lods
stos
or
bound
pusha
mov
pop
ret
and
scas
adc
inc
insb
repz
outsb
xor
cmp
sbb
and
push
and
mov
xor
dec
out
jns
lcall
into
das
xlat
lods
pop
roll
dec
push
lock
mov
pop
scas
jae
ret
stos
mov
push
push
mov
roll
cwtl
pop
cwtl
fidivrl
lods
push
shll
lock
mov
test
fcmove
push
xor
arpl
pop
subl
mov
xchg
fldl2e
or
jne
push
mov
movsb
push
sbb
pushf
jns
je
ljmp
push
fnstenv
mov
sbb
popf
popa
xor
jecxz
shll
shlb
ljmp
shl
pop
dec
test
and
pop
jle
cmp
fs
aas
sub
jge
dec
inc
mov
dec
and
mov
in
sub
sbb
mov
pop
adcb
sub
add
adc
push
lods
inc
push
js
addb
ret
cltd
dec
mov
cmp
in
sbb
lods
lods
jb
or
fidivs
mov
stos
test
mov
out
xor
push
and
mov
mov
xor
dec
sub
jb
lods
aas
sar
outsl
sub
pushf
mov
mov
arpl
out
pop
xchg
pop
sahf
stos
inc
adc
xchg
stos
push
jmp
xor
lea
nop
jl
enter
add
int3
cmp
mov
scas
adc
mov
clc
jbe
mov
into
loop
lcall
adc
jmp
imul
sbb
adc
ds
cmpsl
xlat
and
jg
je
dec
int
sub
insb
iret
pop
add
test
fldenv
imul
xor
sub
or
int3
test
xor
cwtl
dec
pop
mov
fstps
add
xor
xchg
pop
std
mov
push
xor
inc
aas
sti
scas
test
ljmp
mov
mov
dec
lods
dec
inc
mov
add
mov
cmp
or
mov
andl
and
adc
gs
sub
lods
mov
jo
sub
js
or
into
add
hlt
xchg
into
xchg
out
pop
pop
jb
mov
imull
sub
aam
sub
iret
mov
sbb
xchg
jge
je
jne
repnz
jne
pop
push
mov
xchg
pusha
rolb
data16
sbb
movsb
dec
dec
lds
fadd
stos
or
lea
mov
jne
movsb
cmp
jge
mov
sbb
sub
push
dec
inc
stos
mov
lock
in
dec
aas
and
fs
adc
cmp
test
sub
push
daa
mov
sub
cld
shlb
add
inc
movsb
add
pop
mov
xchg
or
mov
cmp
int
sarb
mov
cmpsl
cwtl
das
dec
rep
addr16
imul
and
cmp
add
pop
fcom
mov
out
xchg
out
add
xchg
pop
popf
push
outsb
mov
stos
inc
pop
mov
push
mov
push
call
imul
mov
mov
movsb
lods
inc
mov
add
es
mov
or
insb
jae
sub
lods
inc
inc
xor
pusha
mov
jb
mov
adc
out
jae
sub
add
ret
pop
push
inc
xchg
shlb
fwait
js
ficompl
mov
mov
jle
dec
inc
imul
xchg
dec
mov
test
inc
movsb
mov
in
les
les
add
js
mov
stc
aaa
fcmovnb
mov
imul
sub
jo
call
in
lea
sub
mov
push
lret
out
cld
inc
cli
pusha
outsb
cs
cmpsb
aad
and
xchg
lds
fs
mov
and
rolb
in
lret
lock
loope
rol
leave
repz
xor
push
lods
fsubrs
dec
pop
xchg
mov
mov
mov
mov
testb
ficoml
xchg
mov
mov
loopne
aaa
pop
inc
fisubl
imul
loop
mov
dec
mov
adc
dec
lds
cmp
mov
stos
call
mov
jg
cmp
stos
xor
sbb
sub
mov
das
sub
shrl
aam
inc
cmp
loope
sub
rcll
mov
orl
xchg
mov
scas
push
out
mov
cwtl
rorl
xchg
test
mov
fcoml
xchg
mov
ljmp
xlat
push
mov
pop
dec
xchg
aam
fidivrl
sbb
adc
in
cli
mov
cwtl
xor
mov
cmc
push
mov
xchg
cmp
sbb
mov
xchg
push
xchg
repz
sbb
ret
stos
pop
imull
mov
hlt
and
push
jno
mov
daa
jb
aaa
mov
popf
and
psubsw
lock
jb
push
das
scas
push
into
lret
push
adc
out
orb
lcall
lods
add
movsb
in
ss
lcall
aam
clc
jge
mov
sub
or
push
inc
pushf
sub
movsb
pusha
mov
add
inc
add
stos
or
shr
enter
mov
out
dec
mov
adc
mov
add
aad
pushl
loope
and
fistl
inc
in
sbb
add
ror
arpl
jns
xor
add
stos
inc
lods
ret
popf
xchg
fbstp
xor
mov
push
and
mov
aad
dec
mov
xor
mov
movsb
push
dec
arpl
and
inc
mov
and
mov
add
mov
scas
jo
and
sub
mov
sub
inc
cmp
in
jp
sbb
mov
cmpsb
cmpsl
dec
orb
xchg
rol
cmpsl
lea
stos
jge
jb
popf
xor
jp
addl
pop
xchg
jb
movsb
fcomps
xchg
or
movsb
notl
call
sub
fwait
pop
in
push
mov
inc
lret
push
xor
scas
lea
loope
fs
push
mov
call
invd
adc
je
dec
out
aam
sbb
inc
adc
sub
out
ret
std
pop
push
mov
xchg
mov
shll
aaa
and
jl
dec
ljmp
out
adc
mov
ds
cmp
mov
jmp
fisubs
xchg
inc
dec
mov
inc
decb
jnp
daa
push
aad
push
int3
mov
out
add
mov
mov
or
js
sub
jge
push
sbb
cmp
add
es
xchg
mov
sub
xchg
sub
imul
ljmp
sub
outsl
push
mov
jbe
nop
fisubrs
push
out
add
lcall
xchg
sub
movsb
ja
pop
mov
aaa
jmp
testb
int
xchg
mov
xchg
pop
pop
xchg
daa
sub
xlat
xchg
pop
aam
scas
pop
inc
sbb
xor
outsl
cmp
subb
fistpll
clc
sbb
xor
mov
inc
inc
mov
jae
dec
arpl
lds
movsb
cli
xor
lods
aam
inc
pop
cmpsl
sub
push
test
mov
mov
pop
aaa
push
jo
outsb
mov
xchg
ror
mov
cmpsb
ljmp
mov
inc
arpl
push
test
mov
pop
rclb
scas
pop
xchg
pop
sub
mov
dec
xchg
int
sub
iret
mov
mov
loope
or
pushf
gs
call
sbb
ret
movsb
mov
mov
sbb
loop
loopne
xchg
adc
scas
loopne,pn
jle
sbb
pop
sub
cli
sbb
add
push
mov
in
into
dec
inc
ss
cmp
fimull
adc
sub
shlb
cmp
test
stos
xor
test
xorb
loopne
lods
ds
shll
insl
pop
xor
dec
jg
sarb
jle
inc
test
cmp
jb
sub
fidivl
push
fldt
push
inc
mov
mov
add
das
leave
ficoms
xorb
icebp
push
sbb
incb
sbb
pop
mov
cmpsb
xor
call
or
push
rcr
mov
lods
dec
jnp
mov
lret
pop
ss
cmp
pop
push
arpl
mov
jns
rcll
ja
lret
jae
push
mov
mov
into
sub
pusha
dec
hlt
popa
divl
in
push
add
pop
push
push
call
testb
stos
in
into
mov
movsl
rcrb
or
dec
loope
in
jmp
pop
pop
pop
iret
lret
mov
mov
out
xchg
lcall
lcall
lods
push
insb
ficomps
das
xor
xor
movsb
pop
sahf
mov
mov
mov
lcall
shrb
leave
mov
mov
enter
movsb
clc
out
dec
mov
ret
mov
outsb
xlat
cmp
jbe
mov
mov
std
push
mov
pop
xchg
ret
add
mov
pop
push
ljmp
or
pusha
fmul
mulb
insl
adc
sub
mov
into
pop
sub
inc
jns
cmpsb
fdivrs
dec
ret
mov
sbb
sub
pushl
mov
inc
mov
bnd
int3
xor
mov
mov
adc
dec
push
movsb
fldl
xchg
ret
cmp
test
shll
sub
inc
or
inc
add
in
in
or
sbb
mov
mov
add
inc
mov
pop
and
sub
xchg
cld
cmp
inc
outsb
push
xor
addr16
xchg
dec
sbb
test
sub
ret
push
adc
add
jmp
movsb
or
arpl
shr
cmp
mov
fidivl
mov
sub
jmp
jb
andl
fdivr
sbb
push
rolb
mov
xor
lea
add
cmp
iret
mov
loope
test
xchg
xchg
xchg
stc
jno
lods
test
and
dec
in
imul
mov
cmp
loope
out
push
dec
nop
ret
addr16
test
sbb
arpl
adc
sub
cwtl
mov
xchg
imul
call
sbb
movd
push
hlt
mov
adc
jno
mov
xor
and
cmp
test
cmp
add
fcomps
stos
adc
or
sarb
jg
pop
subl
ja
sub
mov
mov
xchg
insl
push
stos
in
xor
mov
fimull
lods
lods
xchg
aam
aam
push
sub
and
mov
aam
jno
dec
cmp
push
fwait
jmp
push
enter
jg
and
dec
shrb
sub
cmpsb
add
mov
sub
jae
dec
arpl
movsb
adc
lahf
stc
push
aad
stos
aam
call
movsb
add
push
add
add
ja
fnclex
mov
cwtl
shrb
xchg
push
adc
mov
pop
xor
sub
movsb
mov
addr16
xchg
aas
push
inc
adc
mov
mov
fdivrs
cmp
fstpt
dec
fldenv
scas
mov
mov
jns
pusha
in
and
jge
jbe
add
movsb
lds
sbb
push
jp
and
repnz
and
or
pushf
xlat
stos
or
pop
lds
lea
xor
xchg
cmpsl
iret
pop
add
adc
add
sub
scas
mov
test
rcpps
or
je
xchg
sahf
std
pop
sete
insb
mov
xchg
dec
jo
js
jl
cmp
xchg
sbb
das
xor
inc
pushf
pop
push
dec
loop
sahf
jns
add
popa
mov
addr16
mov
push
arpl
add
inc
sbb
xor
dec
mov
sub
jmp
mov
mov
mov
decl
pop
push
xor
adcb
imul
pop
pop
imul
sub
rol
push
imull
aam
xchg
lds
insl
movsb
mov
xor
mov
or
sub
data16
xor
aam
mov
bnd
stc
aas
stc
out
inc
sbb
out
gs
test
and
shrb
add
out
push
aad
fcomps
jecxz
out
pushf
jb
scas
lods
ljmp
mov
sbb
sbb
ss
pop
or
sub
lods
xor
jns
test
jmp
lcall
lcall
jns
jns
lret
or
inc
mov
clc
add
aas
test
lea
scas
cmp
inc
mov
push
jns
aaa
push
push
mov
sub
cmp
stc
mov
mov
sub
fldt
in
into
dec
ja
cmpl
aad
add
lods
ret
push
mov
mov
mov
sub
stos
pusha
mov
in
fisttps
push
into
aad
je
mov
fildl
mov
ret
into
cmp
sub
sbb
repz
addr16
add
pop
outsl
add
xchg
dec
lcall
pop
and
cmpsl
jl
cmp
jae
mov
mov
jne
pushf
pop
sub
sub
sbb
inc
sbb
and
das
stos
push
mov
pop
sub
test
mov
movsb
test
jns
and
add
repz
mov
and
shlb
mov
lods
loop
pop
cld
bound
push
mov
lahf
mov
test
test
xlat
jecxz
xchg
cmp
fcomps
loop
lcall
mov
push
add
mov
cli
out
mov
push
push
ret
inc
mov
jne
mov
xchg
out
ljmp
mov
inc
xor
mov
lods
std
sbbl
jmp
lahf
mov
mul
mov
bound
je
fnstcw
inc
jb
sub
call
ljmp
lods
imul
xchg
inc
adc
sti
inc
in
fcoms
sahf
outsb
xor
repnz
adc
js
ljmp
sbb
shrb
adc
ficompl
lret
out
movaps
mov
insb
xor
daa
mov
data16
call
pop
and
cmp
pushf
ljmp
or
test
xchg
xor
in
push
repnz
cmp
push
lds
div
aaa
bound
xor
and
fcoms
cmpsb
jl
loope
jbe
sbb
mov
fimuls
out
loope
div
data16
mov
and
mov
stos
add
and
push
mov
adc
add
cltd
mov
xchg
mov
ret
adc
sbb
or
or
repz
inc
das
icebp
cmp
mov
xchg
pop
mov
and
push
jb
ret
cmp
xchg
cli
push
cmpsl
sbb
sbb
push
and
adc
in
mov
or
mov
repnz
cmp
jmp
fs
or
pop
sub
out
cmpsl
ljmp
pop
lods
fmull
and
push
push
sbb
jb
sub
pop
xchg
fadds
ret
push
lcall
or
jecxz
popa
dec
cs
jno
mov
jb
push
mov
dec
stos
push
setb
movsl
sbb
and
xchg
in
xorb
aaa
push
xor
mov
cld
mov
xor
mov
add
mov
pop
xor
mov
xor
inc
outsl
mov
add
sub
jg
push
repz
dec
gs
ljmp
push
in
bound
call
dec
scas
jle
insb
mov
xchg
jecxz
dec
inc
jae
shl
pop
push
pop
mov
sbb
add
ret
xchg
gs
sbb
stos
add
loop
push
cmpsl
fcmovu
inc
shld
scas
jo
fcomps
and
dec
filds
adcl
repnz
xor
je
sbb
out
jmp
shll
ret
cmp
mov
lods
scas
cs
movsb
push
into
mov
push
into
hlt
aaa
push
fmuls
sub
scas
mov
or
jne
mov
mov
or
sub
mov
sarl
enter
sbb
push
xchg
in
push
pop
push
js
cltd
push
mov
dec
movsb
cmp
hlt
in
in
cmpsl
insl
add
mov
js
dec
push
repnz
aam
or
pop
rcrb
mov
add
adc
andl
sub
sub
pop
sub
mov
daa
lods
mov
pop
xchg
pop
fmul
adcl
xchg
icebp
bound
jb
inc
adc
enter
add
and
push
mov
cmpsl
adc
test
mov
lcall
das
outsb
sub
add
inc
js
jns
or
sbb
aad
xchg
inc
jno
stos
cmp
cmpsb
push
and
jno
cmp
xchg
cmp
jns
fcomps
andl
and
jle
lods
adc
int
push
mov
xlat
shlb
rep
out
loop
dec
shl
and
movsb
jecxz
fmuls
push
mov
shlb
inc
or
mov
test
add
cmp
cmp
fsubs
out
push
mov
shlb
jb
shlb
and
or
cltd
inc
mov
and
push
push
mov
lods
push
jbe
repnz
movsb
xchg
cmp
pop
mov
and
pushf
dec
scas
sub
inc
or
jae
bound
cmp
test
iret
push
dec
pop
sbb
mov
pop
ficomps
sbb
int3
add
pop
test
shll
lock
ds
dec
pop
sub
dec
outsl
cmc
cmp
cmp
pop
xor
lods
inc
loop
cmp
inc
sub
pop
fwait
test
movsb
into
jge
pop
push
dec
shl
cmp
pop
sub
mov
outsl
xchg
inc
mov
cmp
rorb
mov
jg
popf
leave
push
outsb
mov
jbe
mov
sub
mov
fstps
rcpps
mov
jae
insb
or
mov
aad
inc
daa
mov
decb
push
in
mov
push
loope
inc
sub
and
push
dec
xor
inc
xchg
pop
int3
pop
jae
mov
out
mov
mov
icebp
push
jae
inc
sub
pusha
es
and
mov
cs
lcall
mov
add
adc
sub
lret
das
and
fwait
arpl
sar
xor
pop
scas
push
xor
adc
push
xor
dec
fists
sbb
mulb
sub
add
mov
cmpsb
or
mov
jo
push
dec
push
pop
or
data16
stc
imul
inc
out
jmp
lds
aam
cmp
lods
rcl
adc
cld
das
movsb
shlb
rorl
bound
mov
xchg
dec
imul
in
cli
jae
mov
inc
xchg
xor
mov
pop
out
inc
add
sbb
dec
inc
loopne
cmp
into
and
outsl
imul
cmp
aam
mov
push
cs
mov
cs
push
xor
bound
add
pop
add
mov
movsl
stos
cwtl
mov
mov
inc
mov
jecxz
mov
dec
shll
adc
addr16
enter
mov
dec
sahf
cld
mov
ja
jmp
divb
cs
lahf
jo
sarl
loop
fimull
jo
into
int3
pop
lds
aaa
jnp
scas
jb
mov
or
push
mov
jmp
outsb
mov
sbb
jmp
mov
int
xchg
xor
test
push
jns
mov
sbb
push
repnz
cld
jl
and
movsb
mov
sbb
lds
xor
das
jl
mov
adc
pop
dec
hlt
aaa
scas
test
fmull
insb
movsl
cli
bound
aad
popf
push
mov
les
lock
push
or
or
xchg
cmp
int3
gs
hlt
mov
adc
subl
or
rcll
jno
adc
push
jmp
jno
sub
outsb
insl
movsb
lea
sbb
cmc
mov
jo
fisubrs
je
pop
pusha
or
addl
stos
loopne
xchg
pusha
inc
ret
out
xor
push
add
cli
call
add
outsb
push
mov
mov
leave
mov
loope
adc
push
das
lods
mov
lret
xor
cwtl
bound
fcmove
xchg
mov
into
pop
or
stc
out
sbb
cs
mov
xor
lods
push
and
sahf
movsb
and
fcompl
fmuls
cld
and
mov
insb
scas
fisttpl
div
fwait
insb
mov
mov
jb
jb
xchg
stos
jne
fidivl
jmp
enter
push
idivb
iret
into
xor
or
dec
jl
xor
in
mov
mov
popa
ja
ret
sbb
mov
cmpsb
and
fwait
xlat
jns
lcall
add
fiaddl
cmp
sbb
or
dec
jg
cmpsl
dec
push
shrb
je
movsb
or
clc
adc
lret
nop
jecxz
imul
mov
cmp
shrb
loope
push
cmp
pop
testb
xchg
lret
lret
out
adc
in
pop
movl
sarl
pop
daa
mov
xchg
fwait
sbb
pusha
aad
mov
mov
add
sbb
lods
or
out
stc
subb
in
mov
jge
jae
mov
dec
mov
in
hlt
shll
xchg
out
test
jge
xlat
cltd
xchg
add
sub
lock
cld
jl
fwait
mov
iret
sbb
adc
loopne
mov
das
adcl
add
movsb
bound
jmp
jno
fsubrs
add
fmull
fisubs
mov
inc
xchg
push
call
mov
sbb
jne
arpl
dec
stc
sub
mov
ret
ret
mov
lods
pop
push
add
aam
push
fldt
cs
or
mov
aad
out
push
xchg
push
xchg
std
xchg
push
cs
and
ljmp
cmpsl
fisubrl
in
lods
aaa
adc
xchg
mov
jno
sbb
test
and
test
sbb
sub
es
je
xsha256
cmpsb
push
ljmp
inc
push
cwtl
outsb
mov
dec
cmp
sbb
inc
sub
aaa
ds
into
mov
push
push
lds
jnp
iret
dec
leave
jo
in
add
popa
xchg
push
fstpl
movsb
adc
imul
mov
rcll
leave
xor
xchg
dec
aam
mov
push
add
xchg
mov
repz
push
push
jns
jbe
fsubrs
stos
mov
pop
jmp
aas
mov
cs
push
sub
movb
dec
add
jae
sub
movsb
inc
stc
mov
add
inc
dec
fs
push
lock
pop
lret
inc
outsb
inc
lret
sub
mov
add
jmp
sub
mov
and
std
mov
aaa
clc
pop
pop
add
shlb
mov
cmp
mov
sbb
add
inc
and
dec
jg
movsb
mov
push
lods
cli
or
cmp
fs
repz
mov
cli
mov
insb
lock
mov
cld
dec
sub
mov
shll
sub
or
push
enter
pop
jl
fsubrl
push
or
mov
cmp
pop
iret
ror
or
insb
orl
mov
xor
fisubrl
lods
enter
dec
and
fmul
xor
jae
adc
push
mov
cli
mov
or
mov
push
pushf
loope
shll
in
dec
dec
hlt
adc
imul
or
scas
fdivrs
push
or
add
xchg
mov
lock
in
addb
add
jl
mov
sbb
adc
ss
mov
in
dec
es
push
mov
lea
xor
mov
add
dec
sahf
repnz
call
neg
outsb
iret
push
out
sub
loope
add
mov
xor
mov
nop
sub
in
cs
push
and
lods
test
mov
iret
xchg
fdivl
dec
outsl
jecxz
sub
lcall
mov
jge
mov
or
pop
and
mov
or
sub
imul
jb,pt
lods
dec
sbb
lock
fstps
jbe
sub
out
int
shl
add
add
inc
cmp
cmp
out
jge
jbe
bound
mov
sub
orl
dec
rcll
push
mov
rcrb
aad
pop
movsl
lret
pusha
push
insb
add
jb
shl
mov
push
cmp
aad
pusha
push
xlat
arpl
das
sub
mov
inc
lock
mov
insl
dec
push
sub
and
loope
fisubl
cmp
fwait
push
push
repz
dec
andb
mov
fwait
jp
into
xchg
mov
jne
test
inc
sub
aam
leave
xchg
xchg
into
lcall
or
push
or
mov
cs
mov
cmpsl
sub
sbb
sub
pop
cltd
fstps
sbb
std
test
push
lods
inc
push
jp
dec
addb
popa
jge
cmpsl
adc
andl
xchg
fs
sbb
push
and
xchg
scas
das
pand
push
outsb
xchg
pop
cli
iret
jge
pop
mov
and
inc
fcmovu
shl
push
xor
or
push
jo
movsb
das
push
das
lods
in
and
dec
sub
fadds
mov
call
out
adc
mov
jg
ret
mov
stos
cmp
sbb
push
push
xchg
dec
sub
cmc
cmp
ss
mov
add
adc
xor
movsb
das
rcrl
mov
and
outsb
pop
aad
test
cmpsb
adc
sub
clc
jb
xchg
outsb
xchg
movsb
clc
scas
dec
icebp
in
shlb
cli
daa
sahf
rol
ja
das
lods
sub
dec
es
std
cmc
cmp
cmpb
fcoms
inc
insl
dec
ret
in
cmpsb
enter
aaa
sahf
jbe
pop
lds
adc
iret
rclb
jge
mov
movsl
movsb
cmp
lock
iret
inc
test
cwtl
int3
cmp
mov
fsubrs
rorb
jg
and
pop
ror
cmpsb
fists
mov
sbb
cwtl
sub
cmc
jmp
mov
pop
sub
mov
jg
xchg
sbb
xchg
insl
cs
push
call
fprem1
push
aaa
in
arpl
sti
cmp
insb
jge
push
inc
lock
mov
lcall
pushf
xor
outsb
stc
movsb
loope
push
xchg
mov
pop
jg
sub
stc
pop
adc
xor
push
sbb
jge
movsb
je
sbb
rcr
push
cmpsb
inc
lea
or
out
xchg
inc
mov
rcrl
adc
mov
mov
notb
ljmp
pop
mov
mov
cmpl
inc
pushf
loop
xchg
gs
stos
jne
insl
or
iret
mov
xlat
cli
sub
cltd
add
lret
enter
pushf
push
push
lods
add
jecxz
xchg
in
out
jmp
iretw
jns
aaa
adc
aam
or
add
adc
jecxz
sub
jb
mov
cs
cmpb
ljmp
jmp
in
cmp
enter
out
ret
movsb
push
lds
jle
jae
movsb
ljmp
pop
bound
jb
mov
xor
lfs
inc
lods
rcll
xor
jbe
mov
ljmp
cmp
fisubs
jp
in
add
mov
jo
call
stos
sub
mov
sub
cmpsb
jmp
dec
sbb
mov
inc
push
push
pop
movsb
mov
adc
scas
cltd
xchg
and
rcr
xchg
mov
cwtl
and
add
pop
push
in
lods
jnp
dec
test
cltd
std
dec
fs
push
das
icebp
dec
scas
sub
dec
sub
cs
sbb
sbbl
pop
cmp
add
jp
mov
adc
jl
push
stc
dec
sub
idivl
iret
mov
inc
push
adc
scas
add
rorb
fdivrs
loope
stos
into
scas
in
mov
push
lods
xchg
pop
xor
push
movsl
mov
fisubrs
pop
prefetch
stos
ror
mov
or
xor
sub
sub
and
outsb
pusha
sub
call
icebp
add
test
mov
jno
fdivrp
sbb
mov
mov
jae
mov
push
mov
nop
lds
lock
pop
sti
push
test
pop
out
not
pusha
pusha
out
std
fisubl
push
jge
cs
ret
lds
fld
mov
pushf
push
xlat
sbb
lret
fsubrp
xchg
sub
mov
ds
clc
mov
xchg
mov
sub
sbb
outsb
scas
xchg
daa
mov
sbb
mov
loope
dec
pop
mov
cmp
insl
inc
xor
xor
movsb
sbb
lods
imul
mov
mov
inc
cli
and
gs
dec
aaa
nop
or
cmp
push
mov
movsb
sbb
mov
jg
scas
pusha
push
xchg
decb
cwtl
xchg
mov
cmp
shlb
pusha
and
mov
outsb
pop
jbe
data16
js
ficomps
xor
cmp
subb
jno
lea
das
mov
or
lret
pop
popf
mov
imul
xor
mov
cld
repnz
mov
insl
xchg
sub
scas
pop
dec
popf
jns
negl
or
dec
ret
std
clc
fidivl
adc
das
push
adc
mov
xor
jbe
and
sbb
cmpsl
mov
xchg
mov
in
frstor
mov
lods
mov
jnp
sub
and
mov
cs
sbb
mov
sti
and
and
xchg
push
xor
into
xchg
cmc
push
shlb
mov
fdivl
std
sbb
stos
inc
jb
iret
or
sbb
mov
cmp
xchg
sahf
xchg
cmpl
push
dec
xchg
insl
cmpsl
subb
ja
lock
dec
push
int
cmpsl
ljmp
repz
mov
cmp
andb
sub
js
inc
lods
sbb
fdivrl
jb
hlt
pushf
xchg
stos
push
or
ret
jge
jns
loopne
mov
mov
sub
jb
inc
jnp
xor
ja
scas
jnp
jmp
fisubrl
inc
ljmp
pushf
insl
cs
mov
dec
push
add
or
push
scas
mov
stos
aam
or
sub
jo
jle
jno
push
push
aam
sti
adc
cmpsb
andb
mov
sbb
sbb
jbe
mov
xor
call
dec
test
fnstcw
aas
jge
insb
and
xchg
and
iret
clc
dec
cmpsb
add
mov
pop
or
subl
mov
adc
sub
push
jle
inc
cld
pop
jecxz
mov
xlat
add
and
sub
lods
in
dec
xor
sbb
dec
jecxz
sub
divw
xor
inc
pusha
sbb
test
xchg
cld
stos
mov
mov
pop
dec
cmp
xor
sbb
in
pop
cmp
cld
mov
dec
mov
sub
dec
mov
cmpsl
xor
lods
lods
fiadds
pop
push
pop
cmc
lods
es
xchg
jb
mov
and
fldl
cmc
mov
and
cmp
nop
fisttps
stos
clc
stc
loopne
aad
adc
or
in
jbe
xchg
mov
nop
mov
lea
inc
pop
movsb
inc
jnp
mov
in
push
movsb
rep
cmp
fnsave
push
in
or
mov
push
test
test
jnp
mov
push
add
sbb
add
icebp
cli
loope
xor
xchg
xchg
loopne
dec
fsubrs
mov
inc
xchg
mov
rcll
sbb
addr16
jb
push
cld
cmp
push
mov
std
cmp
mov
pop
arpl
sub
fwait
movsb
pop
call
jmp
mov
mov
std
mov
jne
mov
subb
pop
push
lcall
lods
cmpl
clc
scas
fs
adc
sahf
dec
cmp
arpl
push
enter
xlat
movsb
decb
stc
jb
nop
idivl
dec
push
enter
xor
push
jo
mov
jne
push
sub
sub
sub
test
pop
push
repz
lods
test
mov
mov
arpl
and
cmp
pop
stos
sub
test
mov
xor
mov
les
lcall
addb
lock
in
leave
dec
mov
lea
xlat
pop
jb
cwtl
shlb
pop
sbb
es
lahf
lds
or
xchg
mov
andb
divl
jge
sub
shll
jo
adc
xchg
xchg
lret
aas
jmp
enter
stc
mov
sub
add
jecxz
imul
xor
lahf
mov
loope
inc
movsl
int
mov
jne
cmp
sub
push
jns
sub
pusha
xor
ficoml
outsb
jg
jno
adc
sub
xorl
lea
push
jle
daa
lock
mov
push
je
dec
aaa
gs
pop
pop
mov
and
insl
das
pop
outsb
mov
enter
xchg
pop
cs
sub
loopne
xchg
mov
in
iret
ss
mov
sub
addr16
in
int
into
inc
adc
fisubl
xor
les
xchg
sbb
fsubs
idivl
xor
xorl
dec
jns
jg
jmp
sbb
sub
loope
sub
lods
xchg
mov
roll
ret
and
les
imul
ljmp
lahf
int
push
jle
cwtl
adc
ficoms
or
cs
insl
movsb
pop
sahf
dec
fs
pop
sbb
xchg
int
js
add
out
xchg
lcall
lods
sbb
adc
clc
pop
adc
pop
xchg
adc
or
pop
daa
mov
xchg
sbb
jo
add
mov
lret
mov
xchg
xchg
lds
imul
jae
iret
lret
lods
sub
and
cs
in
hlt
ja
jns
lds
pop
and
sub
dec
push
arpl
sub
pop
sub
jge
ds
dec
rolb
pop
sbbb
cmc
in
jb
add
and
cmp
jo
sbb
cs
clc
push
push
jmp
loopne
xor
in
lret
add
stos
and
jle
lods
stos
sti
add
xchg
adc
lret
push
sbb
sbb
and
aas
ret
mov
fcmovnb
sahf
add
out
pop
add
call
sub
xchg
push
cmp
inc
roll
jne
sbb
push
pop
lock
and
xchg
into
ja
mov
fsin
rorb
adc
in
pop
ret
lret
in
pushf
jno
dec
dec
push
ret
fdivrs
pop
add
sub
std
aam
icebp
loopne
addr16
lods
cmc
das
mov
add
arpl
in
lea
pop
fsubr
idiv
sub
cld
js
out
adc
mov
gs
out
movsb
inc
idivl
push
jo
popf
std
rcrl
in
push
test
xor
push
enter
fisttps
cmp
inc
loopne
mov
loope
xorl
insb
cs
lds
mov
jmp
imul
sub
mov
and
push
rclb
jp
or
xor
xchg
push
jns
stos
dec
lods
pminsw
cs
dec
and
cmp
ret
dec
add
addl
pop
push
jp
mov
mov
insb
pop
inc
mov
hlt
mov
sti
pmuludq
xor
xchg
cs
push
out
mov
imul
xchg
push
push
out
pop
or
leave
push
jp
addr16
jne
imul
lahf
dec
jno
cli
cld
inc
mov
std
cmpsb
dec
sub
mov
push
jbe
mov
push
xchg
or
push
movsb
dec
pusha
out
push
hlt
out
in
push
repnz
push
xor
dec
sub
dec
xchg
sub
jb
outsb
stc
adc
out
dec
pop
sub
pop
fldt
push
pop
inc
sbb
ljmp
adc
mov
mov
hlt
xchg
lods
jno
dec
aam
fadds
arpl
xor
pop
cmpsb
hlt
inc
jg
jp
lcall
xchg
insl
mov
test
jmp
dec
aam
cmp
add
mov
testb
xchg
inc
mov
fsubr
lahf
addr16
sbb
mov
jl
add
add
lock
xor
jae
mov
ljmp
mov
sbb
jbe
lea
daa
jg
int3
push
xchg
pop
dec
orl
xor
cmc
test
sub
test
cmp
mov
inc
out
aam
pop
movsb
pop
in
and
addr16
xchg
inc
ljmp
lea
movsb
mov
pop
jno
lods
push
sahf
xchg
pop
lds
andb
ret
pop
pop
rorb
mov
push
in
idiv
jae
mov
lods
jb
inc
cmp
bound
sbb
or
js
into
in
ss
mov
pop
and
enter
or
jo
inc
fs
push
rolb
push
ja
mov
addr16
ret
inc
and
outsb
femms
jmp
jge
xchg
repz
sbb
pop
test
xor
outsl
push
xchg
sub
repz
hlt
dec
cmp
sub
enter
add
mov
mov
cmp
push
lea
mov
pop
rcrl
test
pop
ljmp
jo
xchg
pop
test
pop
and
cmp
mov
scas
mov
js
stos
mov
inc
inc
xor
xchg
or
and
movsb
cmp
lret
testl
das
pop
xor
lods
mov
pop
pop
cmc
mov
xchg
testb
inc
pop
sbb
fidivs
outsb
mov
mov
cwtl
enter
ret
movsb
mov
sub
push
lahf
mov
mov
inc
clc
xchg
ljmp
xchg
push
pop
xchg
xchg
mov
scas
fiaddl
cmp
mov
push
mov
push
lds
mov
mov
jle
test
cld
jae
fcoml
mov
mov
shll
xchg
xchg
sbb
shll
jl
or
push
outsb
mov
sub
cmp
test
push
push
ret
pmullw
hlt
mov
aas
mov
cli
aad
orl
call
or
sbb
ja
dec
lahf
mov
pop
pop
aam
fwait
outsl
inc
test
and
mov
jg
xchg
cmp
cmp
cltd
mov
sbb
cwtl
xlat
dec
mov
adc
xchg
test
mov
push
rcll
outsb
xor
repz
test
jl
mov
jae
es
sub
js
push
out
sbb
lods
nop
push
xor
lcall
cwtl
pushl
hlt
sarb
fisttps
scas
sub
pop
jmp
xor
mov
mov
inc
andb
add
imul
add
mov
jle
add
lock
and
sbb
mov
cmpsb
in
iret
cmc
pop
adc
sub
mov
mov
xor
push
aad
mov
dec
dec
pop
jno
cmp
mov
lds
insl
lea
out
dec
cmp
mov
insb
pop
ja
and
mov
cmp
insl
in
jb
cmpsb
xchg
xchg
ret
mov
push
stc
ficoms
push
cmpl
hlt
imul
insb
popl
jnp
jp
dec
insl
loope
cmpsl
sub
push
sbb
outsb
movsb
push
lcall
push
cvtdq2ps
sbb
sub
mov
inc
push
andl
loope
lods
adc
push
inc
movsb
sub
or
mov
leave
outsb
xchg
jmp
bound
xchg
stc
mov
cltd
xor
push
push
mov
loope
push
int3
cmp
push
xor
lods
sbb
push
adc
test
hlt
std
dec
sahf
xchg
sarb
fidivl
aad
into
sub
lods
adc
rcrl
es
xor
cmpxchg
jle
inc
fldt
jecxz
sub
push
shll
mov
mov
imul
in
adc
mov
stos
in
mov
mov
arpl
dec
shrl
fsub
or
push
push
push
push
icebp
add
push
jo
loope
insl
hlt
mov
scas
mov
pushl
xor
dec
sub
push
enter
mov
pop
push
out
add
inc
push
mov
mov
popa
loop
jne
adc
shrb
nop
out
mov
xchg
movsl
and
sub
pop
sub
mov
add
fistps
push
hlt
das
imul
jne
jnp
in
movsl
orb
icebp
sti
mov
ss
in
call
inc
cs
stos
pop
mov
xchg
mov
icebp
andl
mov
mov
mov
inc
insb
lcall
out
cli
dec
push
cmpb
push
stos
mov
and
aam
hlt
dec
cmp
fdivrs
loope
and
sub
jge
or
mov
cld
adc
and
and
xchg
inc
outsl
dec
jb
pop
roll
call
pop
out
cld
xchg
movb
or
mov
shr
jo
aam
inc
mov
scas
movsb
xor
out
and
cs
leave
push
popf
add
es
fmull
and
lcall
cs
icebp
fstpl
test
stc
mov
mov
cmp
fs
xor
and
out
movsb
or
icebp
jb
or
lock
sub
mov
or
test
outsl
pop
jb
jbe
push
addr16
into
jb
lcall
jne
push
and
push
in
popa
pop
dec
jb
arpl
pushf
popf
repz
ljmp
movsb
mov
js
lcall
mov
mov
dec
pop
sbb
push
pop
lods
mov
cli
mov
sbb
mov
stc
lods
jp
push
cwtl
inc
inc
inc
cli
fdivp
add
mov
sub
add
mov
out
jbe
sub
pop
pop
insb
in
xchg
xchg
pusha
lds
lds
push
clc
xchg
fcomip
xor
cmp
mov
xchg
xchg
mov
jnp
push
mov
les
sub
jbe
les
xchg
imul
xor
jne
sbb
push
stc
pop
sbb
adc
push
pusha
into
jg
hlt
jle
das
cmp
xchg
fdivs
bound
or
clc
mov
scas
cld
push
mov
inc
sahf
insl
or
cs
xor
pop
jbe
jbe
jbe
aaa
sub
popf
mov
or
jnp
mov
cmpsl
xchg
jo
lods
ret
popa
push
pop
xchg
neg
mov
lods
xchg
cmpl
mov
mov
fwait
cmc
clc
and
pop
mov
into
aaa
test
pusha
add
enter
rorb
outsb
xchg
repnz
xor
mov
sub
lret
out
scas
fwait
cmp
push
mov
jae
sub
jns
lea
movsl
sbbw
xchg
lock
pop
idivb
bound
jno
dec
je
nop
lea
fldcw
sbb
movsb
mov
ret
hlt
sub
xchg
inc
fucomi
jo
push
mov
and
dec
mov
add
popa
addl
cmpb
into
imul
iret
xor
lock
pushf
cmp
js
fstps
imul
sbb
mov
andb
jl
fbld
push
notl
push
sub
mov
int3
mov
or
sbb
pop
push
addb
cmp
call
jp
setl
jl
pop
xor
inc
stc
push
insl
ret
add
fidivl
sub
adc
dec
sub
sub
mov
mov
imul
sahf
mov
dec
or
mov
push
pop
fsub
mov
pop
mov
ss
clc
cltd
rep
movsl
jle
or
sub
nop
push
daa
push
inc
add
pop
and
pushf
xchg
fmuls
fidivrl
loope
push
icebp
jge
pop
and
scas
xor
xchg
xchg
aam
pusha
jmp
lods
dec
jb
stos
sbb
das
lret
push
push
nop
xchg
call
add
push
jmp
lcall
dec
pop
xor
ljmp
lea
insb
out
push
xchg
rorl
ret
popa
mov
popa
xor
les
xor
es
imul
push
out
hlt
dec
mov
push
mov
subb
insb
adc
xor
sahf
sahf
sbb
aad
aam
sbb
jmp
mov
arpl
adc
or
insl
mov
push
fidivrl
pusha
or
je
repnz
push
fldcw
dec
xorb
add
dec
mov
std
jle
push
fmuls
xor
lcall
daa
test
inc
inc
stc
insl
test
adc
mov
mov
fistps
test
inc
mov
dec
dec
test
mov
sub
mov
hlt
mov
test
bound
xor
movsb
jl
bt
sbb
or
cld
rcll
hlt
mov
dec
mov
mov
pop
fimuls
sbb
push
out
jp
in
das
jge
lods
test
or
inc
shlb
mov
fwait
movsb
adc
mov
mov
inc
aaa
or
addr16
inc
lret
dec
jae
jle
insl
repnz
xlat
js
xchg
outsb
jp
ljmp
lcall
adc
xchg
in
scas
xchg
inc
mov
iret
sbbl
xchg
ret
jb
mov
mov
in
loop
scas
pop
dec
add
in
or
xchg
push
fcoms
pop
cmc
push
sub
nop
mov
and
and
xchg
push
push
arpl
ljmp
stos
mov
fs
or
nop
call
mov
push
cmpsl
mov
aad
mov
and
add
pop
fwait
and
mov
daa
mov
pop
mov
imul
inc
ja
bound
aam
out
xchg
dec
sub
arpl
push
jns
imul
adc
movsb
and
imul
mov
ret
int3
cmp
cmc
add
lods
dec
push
sbb
test
lcall
scas
mov
mov
cmp
inc
jmp
push
test
sbbl
mov
fldt
mov
add
imulb
sub
push
in
ret
xchg
adc
enter
push
mov
jno
in
mov
dec
jp
imul
dec
push
hlt
cwtl
xchg
inc
and
push
test
cwtl
mov
mov
loope
int3
pop
cld
in
adc
xchg
push
out
mov
movsb
jge
fimull
iret
or
lahf
scas
in
push
jp
mov
dec
cmp
and
cmp
push
adc
jns
out
mov
aas
into
mov
inc
xor
jno
rol
inc
dec
pop
cmpsl
push
mov
nop
xor
in
lret
sub
jns
enter
jnp
fistps
sbb
add
sti
mov
adc
dec
push
stos
je
ljmp
sarl
in
jbe
popf
sub
je
enter
movsb
pop
inc
sar
xor
outsb
mov
xor
pusha
jp
jnp
pop
push
jnp
lods
jno
lods
push
or
dec
je
xor
adc
cli
add
inc
bound
dec
in
sub
cmp
les
mov
and
popf
jbe
mov
das
or
inc
stos
jo
enter
fiaddl
mov
inc
fwait
adc
insl
clc
movsb
imul
jnp
sbb
lcall
jmp
dec
sub
pop
sub
inc
push
fdivs
outsb
inc
arpl
nop
test
bnd
pop
adc
mov
lret
icebp
add
or
inc
mov
mov
dec
ret
popa
mov
jp
mov
call
das
fisubrs
pop
out
mov
jae
jo
sub
stos
hlt
aaa
pop
jb
clc
push
addl
push
bound
enter
enter
inc
inc
xchg
aam
or
lcall
movsb
add
and
lods
or
leave
in
cli
jle
inc
pop
mov
sahf
sub
int3
fldt
shrb
movsb
lods
imul
repnz
cld
fisubrl
mov
or
push
xchg
outsl
xchg
or
lock
or
lods
dec
cwtl
fcomp
jb
stos
les
push
sub
xchg
addr16
mov
pop
int
xor
ret
fildl
iret
sub
mov
addr16
xorps
lea
pop
jno
bound
call
in
les
xchg
mov
sbb
or
clc
outsl
or
rcrl
mov
fidivl
xor
stos
pop
mulb
test
loop
push
mov
xlat
scas
jb
pop
repz
std
cmc
mov
jnp
push
inc
in
jl
popl
mov
stc
mov
les
cmp
dec
jle
insl
xchg
jne
scas
pop
subb
mov
scas
jecxz
testb
push
inc
ret
nop
push
mov
into
sub
xchg
test
push
enter
cld
xchg
push
cmp
lods
inc
ret
lahf
sbb
aam
pop
xchg
rorl
mov
cmp
stos
pop
cmp
cmovge
xlat
jae
testb
and
add
adc
shl
in
mov
push
data16
lret
ret
repnz
pusha
js
jno
cmp
imul
mov
jo
sbb
fsubl
insl
mov
insb
sbb
mov
ret
ret
loopne
xchg
mov
movl
inc
push
xchg
push
push
fdivs
insl
mov
push
pop
fs
xchg
int3
mov
jo
add
sbb
imul
add
or
mov
daa
pusha
insb
in
add
dec
ret
sub
sub
mov
mov
pop
in
jg
sahf
sub
sbb
scas
dec
daa
nop
mov
jae
nop
mov
es
jecxz
adc
insb
lret
mov
inc
in
adc
xlat
push
cltd
add
je
mov
mov
sbbb
push
imul
push
fdivrl
sub
mov
or
mov
rolb
or
push
push
lahf
pop
movsb
fidivrs
push
jge
mov
and
adc
jno
je
mov
pop
xor
popf
mov
data16
sbb
push
pop
sub
mov
testb
lret
sbbl
test
mov
dec
xor
pop
mov
push
pop
dec
pop
pop
or
scas
ljmp
or
mov
xor
sbb
sub
sbb
inc
repz
imul
sub
add
rcr
imul
testl
or
int3
xor
add
mov
adc
ror
test
mov
add
mov
push
stos
xchg
xorl
push
xor
fcoml
fsubl
notb
lock
sbb
pop
sub
nop
sahf
pop
adc
insb
or
sub
inc
into
movsb
in
aam
jb
xchg
stos
sti
dec
test
test
push
sbb
push
pushf
pop
add
je
out
ljmp
add
mov
xchg
or
jno
subl
mov
mov
jge
movsb
sbb
mov
cli
push
mov
out
push
pusha
cmp
add
inc
fsubl
leave
icebp
ss
mov
in
push
push
jno
cmp
sbb
lret
pop
lret
xchg
out
arpl
push
dec
and
xchg
xchg
jne
cmc
inc
pop
mov
stos
push
mov
jns
out
jp
cmpsl
xchg
cmp
ret
repnz
cmc
cli
dec
mov
test
shr
adc
pop
dec
mov
fsubr
fcmove
aaa
and
sti
inc
dec
lods
cmp
loop
xchg
cltd
into
lods
leave
pop
ljmp
enter
jb
fildll
xor
or
dec
test
js
xchg
add
inc
sub
lods
test
mov
xchg
leave
fadds
clc
mov
test
jo
xor
pop
mov
mov
cmp
clc
adc
push
ja
movsb
lahf
mov
lahf
inc
in
in
lods
ficoml
stos
outsb
mov
rcl
mov
push
lcall
popf
push
cmpsl
fidivl
sbb
outsl
push
jle
dec
int3
jb
jae
fsub
js
inc
jnp
mov
cs
pop
adc
stc
cmp
test
xor
jmp
repz
or
lds
dec
std
outsb
dec
subl
call
insl
loopne
imul
cmp
push
test
xor
insl
or
fnstenv
xchg
ficomps
cmpb
leave
dec
inc
jne
sub
or
pop
xor
repz
mov
sub
in
mov
mov
pop
sub
pusha
xchg
inc
dec
outsb
pop
cli
stos
scas
sub
pop
imul
xor
xchg
shl
movsb
xor
into
into
sub
and
shrl
pop
into
fcmovnb
jns
js
mov
sahf
imul
and
imul
mov
mov
add
repz
push
addr16
xchg
jg
add
xor
jns
mov
sub
ss
test
out
sub
fucom
mov
push
xor
addr16
jns
or
mov
jns
shl
orl
pop
rclb
lods
out
push
repz
incl
jnp
orw
popf
add
mov
push
js
ja
and
jo
jl
cmpsl
mov
cltd
enter
push
xor
stc
dec
mov
movsl
push
mov
xchg
pop
add
push
gs
sti
out
jmp
movsb
and
ss
pushf
lahf
in
push
outsb
inc
jl
adc
pushf
sbb
jb
std
mov
mov
push
xor
jl
andl
inc
out
icebp
push
mov
negb
shrl
addr16
jp
mov
outsl
rcrl
pop
push
dec
stos
add
bound
int3
mov
pusha
je
adc
les
and
data16
leave
mov
inc
mov
adc
repnz
ss
inc
cmpb
punpckldq
xor
push
lea
push
fdiv
or
std
sbb
movsb
movsl
xchg
push
arpl
repnz
lock
sbb
jne
sub
cmp
sbb
mov
shll
sub
and
dec
pop
in
mov
rcr
lea
je
pusha
mov
jnp
ret
loop
sbbb
and
fdiv
dec
sbb
add
adc
mov
xor
je
cmp
push
fmull
xor
loopne
mov
cvttsd2si
inc
mov
mov
mov
sbb
add
in
call
sbb
pop
movsb
mov
add
mov
or
pop
fisubl
inc
insl
cld
cmc
stos
fdivp
scas
lea
ret
xor
pushf
cmpsb
fisubrs
dec
xor
or
shrb
dec
xor
and
in
int
lahf
cs
stc
ljmp
inc
sub
ljmp
adc
loop
mov
fisubs
mov
pop
push
xor
push
fs
add
mov
xor
icebp
inc
adc
es
dec
shll
adc
arpl
stos
sub
push
dec
out
xchg
mov
lret
outsb
bound
adcl
fdivrs
sub
cli
out
inc
dec
and
lret
jecxz
xchg
xchg
imul
enter
divb
inc
sbb
pushl
pop
or
jecxz
mov
mov
stc
push
adc
mov
inc
cmp
jle
andl
es
je
insb
pop
or
arpl
mov
xchg
fadds
pop
fs
mov
pop
xlat
icebp
pop
add
xor
add
sub
xchg
sub
iret
xor
push
push
sbb
pop
mov
inc
sbb
mov
adc
or
fsubl
aad
into
xor
leave
icebp
pusha
adc
sahf
iret
xor
sbb
aad
mov
loopne
sbb
das
jge
lea
test
xor
shrb
jo
lods
jno
into
bound
sbb
andnps
cmpsb
fsub
pop
lahf
mov
mov
xor
mov
mov
andb
insb
and
daa
or
int3
in
cmp
jno
xor
add
sbbb
mov
ror
fldl
movsb
push
lahf
cmpsb
push
lret
inc
pop
stos
fimuls
es
xorl
and
push
lock
bound
cmpsl
mov
daa
das
movsl
lret
cltd
sub
and
and
divb
mov
push
roll
mov
mov
hlt
movsl
sub
xchg
ds
pop
movsb
jle
dec
shll
aad
xlat
insb
loope
sbb
sti
mov
repz
xlat
pop
xor
fdivrs
in
mov
mov
xchg
js
andb
push
mov
jne
cli
fidivl
fistpl
scas
ds
mov
push
mov
mov
lds
or
ds
or
or
movsl
or
lock
lock
add
scas
xchg
push
pop
inc
test
leave
pop
sbb
movsb
test
int
or
mov
scas
add
jle
push
cmpl
sub
out
pop
imul
xchg
jnp
push
xor
test
cmp
aam
push
outsl
popa
mov
and
or
mov
push
testl
cmpsb
mov
lcall
insl
xor
data16
jno
jl
test
test
das
icebp
mov
test
xchg
inc
xor
sub
jmp
lods
aad
xchg
mov
out
jns
dec
add
xchg
cmpsl
cmpsb
mov
sub
cmp
xchg
sub
outsl
jecxz
push
dec
movsl
in
ret
push
in
cwtl
mov
mov
in
mov
shl
sub
aad
push
mov
mov
daa
inc
pop
jo
inc
adc
xchg
lods
ss
loopne
mov
add
xchg
jecxz
mov
int3
jmp
jb
xchg
adcl
dec
pop
aaa
pop
mov
sbb
mov
pop
jb
cs
btc
xor
mov
jnp
lcall
lret
loopne
sbbb
xchg
add
popf
lods
fwait
ret
popa
jmp
sub
mov
insb
mov
mov
clc
xor
sub
sahf
xlat
cmp
daa
add
fld
sahf
xor
cmp
sub
aam
pop
sub
sub
xlat
push
jmp
stos
xrelease
mov
rcll
js
mov
cld
or
ljmp
cltd
stc
mov
mov
lods
mov
sbb
xchg
subb
sub
mov
xor
aas
inc
dec
pop
mov
cmpsl
push
cmovne
pop
aaa
mov
stos
add
add
sub
jmp
sti
addb
fwait
scas
ficompl
jmp
jnp
mov
push
pop
pop
or
ss
adc
cld
test
mov
mov
xor
iret
inc
jo
xorl
xchg
loop
mov
and
pop
xchg
or
inc
mov
dec
inc
mov
out
arpl
mov
inc
xorb
mov
mov
and
dec
sbbl
mov
jle
jb
in
xchg
add
das
lds
push
xchg
and
mov
loope
enter
pusha
lods
andl
dec
sti
mov
cmp
js
jp
sbb
dec
dec
xor
sti
push
inc
int3
mov
cmpsl
rcrl
sub
aad
jb
nop
push
out
and
add
cmc
les
aam
mov
stos
test
xor
clc
mov
clc
pop
pop
cmp
and
push
pop
dec
das
or
out
aad
aaa
push
xchg
pop
mov
out
pop
or
lea
add
ljmp
mov
sbb
les
xchg
mov
and
int
jbe
xchg
outsb
add
dec
in
cmp
xchg
mov
lret
xchg
xor
sti
gs
int
sbb
cwtl
jnp
fs
rorb
mov
adc
push
pusha
dec
stos
popf
xchg
sub
ds
xchg
inc
cmp
and
jne
cmpsl
add
push
stc
stos
jae
into
es
sub
scas
cmp
xchg
sub
in
test
test
jne
subb
pop
ss
enter
push
push
frstor
ds
ljmp
les
je
mov
stos
fcomps
outsl
xor
call
addl
shrl
xchg
iret
mov
mov
pop
inc
dec
cltd
pop
scas
adc
mov
sbb
outsb
out
outsl
lods
stos
adc
scas
and
and
sarb
xchg
mov
jae
dec
cmc
movsl
mov
push
shlb
repz
mov
aam
popa
adc
mov
xor
pop
pop
cs
mov
pusha
dec
mov
dec
in
es
mov
repnz
icebp
xchg
stos
lds
or
mov
sub
movsb
loope
jmp
mov
lcall
pop
push
into
in
push
mov
sub
aad
iret
add
andb
pop
lock
in
scas
push
into
sbb
adc
pop
xchg
in
push
xchg
xorb
add
in
outsl
dec
outsl
repnz
cmc
leave
mov
pop
aaa
and
call
or
adc
mov
dec
insl
push
fsubl
push
stc
xor
movsb
pusha
pop
xchg
push
mov
cmpsb
fstpt
dec
cmpsl
dec
sub
std
xchg
push
jg
addb
addr16
test
push
jmp
jecxz
lods
jb
push
adc
xlat
mov
push
lret
aaa
mov
pushf
push
outsl
cmp
cld
cmc
or
xlat
outsb
xor
mov
jo
lods
mov
add
ret
int3
fwait
jae
or
mov
xchg
loop
and
xlat
movsb
ja
rcl
loop
icebp
shl
cmc
into
or
leave
lods
bound
adc
mov
inc
mov
mov
dec
movsl
cmp
mov
into
movsb
ds
sub
call
bound
adcl
lcall
sbb
stos
cmp
mov
dec
cmpb
adc
push
mov
push
sub
mov
add
pushf
pop
fwait
lcall
sub
fstpt
ret
adc
push
inc
movsl
lods
test
mov
mov
lea
dec
js
sub
lods
mov
test
movsb
pop
add
call
cmp
push
mov
and
rcl
sub
dec
mov
sbb
jmp
cltd
dec
pop
mov
or
xchg
xchg
cmp
mov
inc
enter
hlt
cmp
cmp
pusha
or
stc
add
cs
movsb
sbb
outsb
mov
loop
fnstenv
das
sub
mov
add
call
les
loop
push
stc
pop
lods
lcall
dec
jle
out
test
add
mov
pop
fcomps
jp
dec
push
or
push
movsb
or
std
or
mov
sbb
jns
aas
repz
gs
lcall
cmp
inc
rorb
lea
dec
repz
aad
sub
add
andnps
and
fildl
mov
jo
mov
cmovbe
mov
xchg
inc
push
scas
xchg
mov
cmp
das
push
sti
mov
out
mov
mov
dec
xor
sbb
and
mov
dec
das
jb
movsb
jnp
aad
cmc
ret
mov
mov
test
push
push
jmp
fiaddl
sub
dec
mov
dec
pop
fsubl
sub
ret
leave
stos
pusha
out
mov
jb
fs
pop
mov
cmp
jecxz
loope
test
mov
sub
push
sbb
fcmovb
mov
inc
push
mov
and
xchg
sub
jno
out
mov
subb
addb
cwtl
ds
add
fnstcw
les
jae
sbb
mov
imul
dec
jno
xchg
cmc
lods
mov
adc
inc
aad
pusha
cs
sar
popa
aam
adc
xor
xor
lods
fucomp
cltd
jle
jns
sub
in
pop
dec
ss
es
mov
push
push
sahf
bound
mov
jbe
and
aam
mov
fistpl
mov
lods
jb
and
rcrl
push
les
loope
hlt
push
sbb
mov
mov
mov
into
xor
mov
lahf
sub
inc
mov
lahf
mov
and
shr
pop
mov
sub
and
ljmp
aam
repnz
test
aam
iret
dec
fadds
pop
inc
ss
add
gs
adc
or
cli
xchg
jbe
xor
divl
imul
inc
or
enter
mov
dec
pop
and
mov
enter
add
out
fwait
loopne
sub
push
sub
repnz
testl
test
in
mov
shrl
hlt
sub
and
mov
call
xchg
dec
cs
sbb
test
xor
outsb
gs
movsb
int
jp
fdivs
lcall
jmp
adc
mov
inc
xchg
mov
cmpsl
into
push
and
mov
enter
andl
jo
jae
inc
mov
push
lods
mov
aad
mov
mov
lret
loopne
gs
mov
adc
jnp
mov
mov
jge
lods
les
or
jg
loope
xor
mov
outsl
stos
repnz
sbb
shlb
push
in
xor
xor
xchg
js
cltd
jge
sub
or
rclb
sub
shl
jge
jge
jp
in
testb
cmp
sbb
push
and
sub
xchg
aam
sbb
jnp
jb
dec
movsb
xchg
test
sbb
dec
sahf
inc
jbe
shll
iret
xchg
movsl
jne
jecxz
sub
scas
pop
dec
pop
pop
in
roll
cmp
mov
mov
inc
dec
aam
cld
mov
xor
xor
push
dec
xchg
gs
aad
mov
pop
mov
aaa
popf
ficoml
sub
fidivl
push
mov
test
and
mov
or
mov
dec
repz
movsb
xlat
fiaddl
pop
and
rcll
shll
pusha
leave
es
or
sbb
iret
enter
das
mov
shrb
vmread
loopne
inc
fnstenv
inc
push
inc
add
mov
jae
das
cmp
aam
stos
add
push
inc
cmp
pop
insb
mov
mov
mov
cmpsl
jmp
fcompl
enter
sub
lcall
ljmp
xchg
sub
aad
mov
xchg
data16
xchg
ret
jbe
cli
mul
in
shlb
push
iret
mov
pop
mov
fildll
addr16
pusha
lcall
fcmovne
lahf
xlat
mov
xchg
or
cmp
repz
jae
bound
mov
mov
add
sub
idivb
cmp
adc
iret
inc
ljmp
das
xchg
gs
pusha
cmp
mov
sub
mov
xor
ss
mull
gs
lods
mov
mov
lret
adc
ficoms
daa
sbb
loopne
jbe
add
sub
arpl
mov
sbb
test
push
cmpsl
int3
lods
and
xorb
popf
rcr
loope
cwtl
hlt
jno
shr
push
lods
xchg
xchg
push
pop
mov
or
movsl
jbe
mov
sub
add
and
cmpsl
lods
mov
arpl
jle
inc
cmp
xlat
mov
cs
fsubrl
imul
scas
dec
aad
scas
lret
call
cltd
fists
push
stos
shll
mov
ss
mov
sbb
clc
pusha
sahf
outsb
stos
dec
mov
sub
and
xor
or
leave
ds
sub
mov
lods
sbb
icebp
aaa
mov
sahf
js
xchg
mov
pop
push
out
outsl
dec
add
shrb
cltd
ror
ss
xchg
fsubr
inc
push
mov
xchg
mov
sbb
adc
icebp
fbstp
mov
movq
jns
sub
xchg
movsb
call
jne
xor
jmp
add
arpl
pop
or
icebp
cmc
popf
or
mov
lret
hlt
movaps
outsl
push
and
loopne
mov
jmp
icebp
mov
and
adc
pop
lea
ja
mov
jle
xchg
outsl
push
in
push
adc
dec
pop
ficoms
mov
cmpsl
xchg
xchg
jns
cmpsl
add
add
mov
and
iret
xor
orb
cs
mov
insl
sub
cmp
jo
jb
mov
xchg
scas
imul
jmp
orl
loope
orb
mov
ja
cmp
xchg
clc
mov
sti
or
aam
popa
sub
lea
gs
negb
sub
mov
les
xchg
mov
ret
ret
sub
mov
aam
lea
inc
out
mov
jge
mov
xchg
aad
push
out
int
movsb
lret
lret
cmp
jge
leave
enter
jne
mov
jo
es
sahf
xor
push
mov
sbb
mov
inc
paddb
adc
bound
adc
aam
hlt
and
mov
test
adc
mov
inc
sub
addr16
arpl
neg
push
ss
push
mulb
pop
lret
addl
xchg
lods
lcall
mov
or
xor
lcall
lods
fucomi
dec
push
sbb
mov
sub
jbe
aas
cs
mov
notb
movsb
in
add
sbb
sub
inc
les
in
lds
push
or
push
push
xor
mov
cmp
adc
or
push
sbb
scas
sbb
cmpsl
addr16
add
jb
jp
adc
jl
sar
mov
pusha
insb
imul
movsb
pop
sub
inc
add
mov
adc
mov
sahf
or
pop
xchg
sub
xor
lcall
pop
scas
test
fcompl
out
add
mov
pop
fcomps
shlb
sub
push
aaa
push
xchg
jnp
mov
daa
aas
xor
outsb
icebp
aam
pop
int3
push
jns
dec
push
mov
push
xchg
lea
push
arpl
int3
testb
fisubrs
sar
lock
lods
bound
push
insb
shrb
and
pop
or
pop
mov
ret
mov
lods
adc
sbb
mov
pop
sub
outsl
insl
push
add
in
and
mov
ja
pop
cmp
rcrl
lret
clc
notl
jge
jnp
xor
movsl
and
stos
and
movsb
fistpll
cmpsl
lret
dec
and
pop
adc
inc
push
sbb
push
push
and
cmp
sub
in
pop
mov
jnp
or
call
jo
popa
mov
mov
dec
movsb
dec
mov
mov
dec
out
enter
or
add
adc
mov
jbe
cmp
xchg
sub
sub
in
mov
mov
hlt
and
dec
popa
je
xlat
jnp
data16
cmp
adc
fcoms
sahf
cmovg
add
dec
test
push
mov
mov
sbb
shl
fadd
les
pop
mov
jb
mov
mov
push
fldt
xchg
or
cmp
mov
and
mov
inc
add
xchg
cmpsl
mov
insl
jecxz
xor
mov
in
mov
add
mov
inc
mov
mov
lret
jb
push
mov
sub
sbb
jecxz
xchg
les
mov
xchg
mov
mov
and
pop
pop
lock
mov
xchg
aam
outsl
testl
and
and
adc
mov
pop
lock
and
movsb
xor
cmpsl
cmc
mov
imul
sub
call
into
xchg
lods
aad
enter
sarl
xchg
lcall
push
pop
mov
cs
sbb
adcb
std
adc
mov
mov
fistl
lods
ds
mov
inc
push
sahf
es
gs
popa
in
and
je
std
dec
mov
or
bound
lret
in
sbb
inc
cmp
mov
sub
lods
sbb
and
sub
test
mov
shll
stos
fidivs
mov
scas
ret
mov
outsb
cmp
cmpb
imul
mov
mov
stos
xlat
mov
in
pop
jbe
movl
cmp
repz
xchg
mov
or
dec
sbb
inc
rorl
popa
adc
sbb
xchg
sahf
xchg
jmp
sbb
sar
dec
adc
add
in
cmp
mov
mov
add
push
xchg
mov
lods
xchg
aam
xor
decb
dec
adc
scas
mov
inc
cmp
push
mov
and
lods
push
loope
shrl
xor
sbb
sbb
lea
aaa
and
mov
lahf
push
test
out
outsl
pop
loope
mov
dec
out
or
sub
sbb
cmp
mov
add
subl
push
xor
mov
jmp
lret
outsl
aaa
call
or
test
cltd
arpl
sub
loop
test
out
mov
push
sub
pop
mov
clc
sbb
out
test
test
xlat
cmpsl
test
mov
or
adc
pop
ret
mov
dec
filds
stos
dec
fsubl
jae
int
mov
and
and
in
cmp
push
popa
jmp
lods
cmp
call
sbb
bound
stos
mov
mov
mov
stos
stos
mov
xchg
test
mov
cmp
into
jecxz
movsb
jo
dec
adc
adc
push
loop
stos
loopne
lods
mov
push
add
push
icebp
push
ss
xchg
mov
xor
out
jne
leave
mov
test
lods
or
mov
mov
cmp
jae
mov
outsb
push
cltd
sbbb
mov
sub
call
stc
das
insb
jmp
in
push
js
push
sbb
mov
xchg
mov
jle
movsb
jne
clc
mov
fldt
pop
dec
in
out
fdivs
mov
jb
mov
mov
push
idivb
dec
nop
mov
push
ja
fs
in
into
jge
shl
mov
dec
jbe
add
loop
pop
imul
dec
xlat
adc
fbld
sub
mov
nop
cli
pop
add
movsb
mov
lcall
leave
sarl
aam
or
cmpsl
iret
and
cmp
dec
cltd
sub
lahf
pusha
sub
xor
icebp
jb
ss
shlb
rcll
ret
sub
sahf
push
sbb
xor
mov
adc
jle
lret
sbb
loope
pop
push
push
insl
push
and
movsl
mov
enter
es
and
sub
inc
or
jno
or
adc
sahf
push
fs
outsb
or
mov
mov
popf
aam
insl
mov
inc
ja
ljmp
lahf
jb
or
xchg
rolb
mov
test
cwtl
inc
bound
sti
or
out
mov
mov
dec
or
in
das
pusha
lret
cmp
ds
adc
sub
loopne
sub
int
call
push
mov
dec
sbb
je
inc
cld
test
push
sbb
loope
ljmp
pusha
loop
into
xchg
xchg
add
mov
adc
add
negl
stos
in
fs
xorb
mov
jb
popa
and
lods
incl
and
aad
sub
repz
in
mov
push
or
inc
push
jnp
xchg
sbb
idivb
dec
cmovae
aam
adc
lods
inc
out
repz
test
sub
rolb
mov
fs
cmp
and
xchg
ret
jb
push
mov
test
xchg
xor
andb
hlt
mov
xchg
sub
ret
stos
movsb
push
sub
mov
and
add
icebp
test
mov
das
add
popf
sahf
inc
sub
inc
fcoms
lds
jb
mov
and
popa
arpl
aam
repz
inc
movsb
mov
repnz
jne
push
inc
cmp
icebp
sets
or
xchg
inc
movsl
xor
mov
add
icebp
out
sub
call
imul
scas
pop
out
xchg
ja
mov
fdivr
jle
jo
loope
mov
jno
lods
loope
jp
mov
rolb
push
out
arpl
jmp
xor
jp
call
jae
movsb
xor
call
outsb
jl
and
push
and
test
xor
ss
lods
scas
mov
cmpsl
pop
jmp
pop
lock
mov
push
mov
xorb
mov
mov
jmp
mov
clc
mov
mov
out
xor
jne
rcl
out
xor
add
fwait
xor
sub
andb
sahf
in
mov
icebp
insb
mov
mov
xor
xor
in
arpl
sub
ljmp
add
stc
cmpsb
fistpl
mov
pop
mov
movsb
cld
sub
or
xchg
addb
int3
xchg
adc
fsub
push
mov
cmp
jb
dec
shlb
mov
jbe
mov
mov
sarb
test
xchg
add
push
push
mov
test
jns
ret
mov
clc
ss
mov
fidivl
insb
bound
dec
or
xchg
push
mov
add
xor
pushf
dec
add
or
incb
push
jo
in
movsb
test
loopne
in
dec
nop
adc
push
rcrl
std
sbb
and
stos
lods
repz
fidivs
bound
pusha
iret
insb
jns
repz
inc
cmpb
fsubs
in
inc
shl
pop
dec
cld
add
push
xchg
mov
pop
or
cltd
popf
pop
mov
dec
xor
sub
dec
aaa
mov
xchg
and
mov
jnp
push
sub
ret
inc
xor
arpl
mov
jecxz
xor
jo
sbb
push
ss
dec
jae
fcmovnu
and
lcall
mov
xchg
push
popa
xor
mov
pcmpeqb
jle
outsl
movsb
dec
jle
fidivrs
mov
insb
ret
mov
movsl
jb
and
and
xlat
bound
fimuls
outsb
in
js
ja
rol
rorl
jmp
shrl
push
movsb
jae
pusha
cld
or
psllw
mov
and
dec
lea
push
stos
mov
cwtl
fisttps
mov
aaa
sub
ss
jb
or
js
in
push
mov
sbb
add
fildll
jmp
mov
aam
mov
jo
sub
icebp
pop
fcoml
mov
arpl
inc
xor
pushf
sbbb
bnd
xor
jge
lods
ret
fidivrl
jno
add
jne
push
push
gs
inc
push
cmpsl
data16
or
lret
lods
xor
loopne
ljmp
add
ds
add
repnz
push
stc
test
ljmp
sarb
or
push
mov
mov
in
mov
sub
movsb
pusha
mov
lcall
add
les
call
stc
mov
gs
jb
pusha
aam
sbb
insl
lods
adcl
shll
hlt
push
and
jae
adc
daa
jbe
rorl
dec
outsb
scas
xchg
outsb
cld
sub
shll
mov
and
pop
mov
sbb
cmp
add
jg
add
xchg
das
xorl
sbb
push
sub
push
push
sub
add
mov
xchg
add
ret
cld
mov
and
adc
xchg
adc
lcall
push
jns
idiv
push
rcrb
inc
add
fnstsw
push
adc
jp
adc
les
out
shrl
fs
inc
imul
lock
inc
cmp
cmpsb
lcall
insl
xsha1
cmpsb
into
sub
lea
adcl
add
ljmp
mov
push
jge
push
sub
sub
mulb
pop
mov
jle
repnz
repnz
neg
and
fdivl
lock
lods
xor
push
outsb
cli
dec
scas
adc
sub
popf
fnstcw
xor
jge
push
mov
inc
mov
stos
fwait
sub
xlat
push
inc
xrelease
mov
js
enter
cmovg
mov
sub
push
inc
push
xor
fldt
push
es
in
fisubs
ret
add
fistpll
lcall
mov
das
ret
jno
mov
pushf
loopne
xor
jb
xchg
inc
insb
sub
lods
or
sbb
sub
add
int3
in
push
js
sub
jnp
add
loope
mov
idivb
ret
cltd
shlb
fiaddl
sub
push
fimull
sbb
out
out
cmp
ret
nop
test
fcomi
push
pusha
xor
and
jmp
xchg
cmp
or
fsubrl
js
insb
addr16
inc
jo
out
adcb
arpl
out
sub
dec
cmp
pop
rorl
sbb
push
mov
dec
pop
add
sub
dec
lahf
sub
flds
lret
lods
mov
push
shll
scas
cmp
sub
in
mov
orb
jmp
jmp
and
movsb
inc
iret
andl
pop
shr
aaa
insb
sbb
sti
jb
cmp
dec
int
pop
movsb
adc
or
xlat
jbe
notl
repz
test
aas
push
outsl
add
push
sub
cmp
aas
lret
xor
ss
cs
pusha
pop
and
inc
sub
fiadds
jmp
lret
pop
adc
loope
xlat
loop
movsb
cmp
ficompl
inc
add
push
js
mov
enter
jnp
push
mov
scas
cmp
repnz
jbe
push
pop
imul
lods
test
and
movsb
loope
cmp
xor
movsb
push
dec
and
sub
mov
lea
inc
xchg
mov
sahf
mov
add
xchg
loope
iret
dec
xchg
fnstcw
nop
inc
into
fisubs
orl
and
cmp
les
insb
xor
lods
pop
dec
cmp
test
lcall
outsl
xor
test
in
les
ret
xchg
cmp
imul
lods
sbb
insb
test
mov
in
sbb
inc
test
call
or
lea
inc
lret
roll
mov
cmpb
sbb
pop
inc
push
dec
mov
xchg
outsb
push
xor
xor
inc
cltd
fimuls
xchg
scas
add
and
stc
xchg
mov
xchg
push
mov
mov
sub
push
inc
repz
xchg
shlb
mov
xor
in
and
bound
push
sbb
into
loop
lcall
scas
in
adc
fldpi
jg
mov
popa
fsubs
loop
xor
les
and
mov
mov
aam
adc
jmp
shlb
int3
dec
dec
test
pop
mov
cmp
mov
leave
pop
jbe
mov
movsb
jo
jl
mov
push
insb
inc
cli
icebp
aaa
add
frstor
xor
cmp
shlb
repz
push
xor
loope
mov
add
mov
pop
dec
sub
pop
ret
inc
arpl
out
or
xchg
push
push
sbb
pop
mov
in
push
mov
jmp
add
or
dec
jnp
adcl
add
lds
mov
jno
popa
add
cmp
xlat
std
clc
push
mov
sub
mov
movsb
js
sbb
push
pushf
or
mov
sbb
loope
ret
mov
mov
push
sub
ljmp
jo
inc
sub
xchg
clc
pop
aad
pop
ss
sub
mov
push
sahf
pop
mov
mov
sub
jb
xor
scas
or
xchg
mov
and
dec
clc
mov
xchg
mov
jb
cmc
lods
les
testb
daa
adc
cwtl
insl
loope
or
sub
shlb
mov
add
xchg
adc
dec
inc
cmc
fimuls
mov
stc
cmpsb
mov
mov
movsb
hlt
lods
outsl
jg
xlat
xchg
out
mov
dec
xor
jecxz
push
mov
mov
int
cmc
mov
jnp
xor
pop
push
push
sub
pop
test
arpl
cwtl
shll
and
dec
das
lret
adc
xchg
cwtl
jmp
arpl
das
loopne
adc
ja
mov
call
dec
xchg
mov
push
sbb
outsb
mov
xchg
stc
mov
cmp
stos
mov
adc
call
enter
pop
loope
mov
repnz
push
xchg
sbb
adc
and
sbb
sbb
shl
sbb
loope
repz
repz
pusha
mov
sbb
push
xor
mov
sub
std
sub
cmp
and
mov
mov
lock
out
lcall
jb
xchg
sub
fsub
test
sub
cmp
cmp
cltd
xor
test
iret
fcmovne
dec
xor
jne
pop
pop
inc
xor
jae
inc
push
iret
inc
loope
stc
mov
lds
sbb
ja
and
and
mov
jmp
ljmp
xchg
xor
mov
sub
push
or
repz
cwtl
movsb
pop
adc
jmp
sbb
fsubrs
inc
fdivr
mov
dec
icebp
add
inc
je
in
mov
aad
flds
aam
repz
sub
cld
jb
sbb
aam
fstl
jno
push
pop
popf
xchg
dec
mov
inc
jb
jo
pop
inc
push
lock
pop
cmc
or
mov
sbbb
cmp
icebp
add
popa
dec
stc
add
cli
jnp
add
ja
sub
lods
stos
lret
insl
or
or
cli
aaa
popfw
movsb
aam
cld
xchg
leave
js,pn
sub
mov
mov
xor
or
mov
xor
xor
lcall
daa
mov
es
in
dec
xor
sbb
xor
jmp
arpl
xchg
push
xchg
xchg
mov
mov
out
adc
jno
sbb
mov
lods
lods
sub
mov
mov
popa
inc
jae
lds
test
out
shll
repz
aam
inc
call
in
dec
dec
int
sbb
lods
push
inc
fadd
jb
cli
mov
jnp
xchg
test
mov
aaa
sbb
mov
icebp
pop
jp
adc
mov
cmpsl
jno
push
pushf
out
pop
xlat
rorb
jae
sbb
jb
fcmovbe
sbb
fists
cld
sbb
cmp
lock
mov
fmull
push
fldt
xchg
mov
scas
mov
aam
lret
jb
negl
jge
popw
cmp
add
jno
sbb
xor
mov
mov
mov
popa
stos
sub
cmc
adc
outsl
add
addr16
cmp
sbb
xchg
add
push
jne
out
mov
jns
rcll
xor
cmp
add
inc
inc
ja
pop
dec
lods
lret
test
adc
cmp
xchg
mov
lea
in
dec
test
aam
and
adc
shlb
out
repz
fcmovu
or
popf
xor
test
aaa
mov
mov
testl
lea
enter
xorl
mov
pushl
jno
roll
jae
push
and
adc
jb
nop
std
sbb
fiadds
xor
aam
or
test
mov
push
mov
mov
adc
sbb
fidivrs
rcrb
mov
push
jb
cmc
repz
and
in
xchg
mov
add
xor
and
pushf
mov
ljmp
jns
loope
push
and
push
cs
push
push
cmp
or
sub
das
mov
sub
inc
xor
xchg
mov
xor
adc
mov
xor
pusha
movsb
in
les
inc
cmp
pop
pop
jl
push
cmc
jns
sbbb
mov
adc
call
scas
jb
xchg
lods
inc
inc
test
fmuls
andl
push
mov
inc
mov
jmp
pop
xchg
pop
inc
std
mov
ds
test
pop
mov
rcrb
imul
mov
gs
sub
int3
xor
mov
movsb
push
icebp
andl
repnz
or
xchg
sub
xchg
adc
movsb
cli
ret
cltd
bound
pusha
out
aaa
es
and
loopne
jbe
mov
mov
add
fcoms
mov
inc
movsl
dec
jg
movsb
cmpsb
push
imul
aaa
enter
sbb
sub
mov
sbb
push
sub
and
fcoms
ss
fwait
jecxz
in
cli
in
or
sbb
push
dec
ljmp
popf
cli
sub
xchg
cli
in
jl
jno
mov
out
dec
hlt
mov
sbb
cmp
sahf
push
dec
push
jg
outsb
and
jo
repz
lock
mov
inc
cmp
add
cwtl
nop
lea
push
xor
push
insl
sub
shr
adc
repnz
mov
das
push
hlt
in
push
push
je
in
imul
adc
add
inc
loope
cld
dec
ljmp
rorl
imul
es
push
jne
bound
sahf
out
mov
rorb
pop
push
xor
push
mov
enter
jle
xor
repnz
iret
aas
sub
xor
inc
mov
pop
sub
jecxz
in
popl
icebp
and
dec
inc
ret
xchg
jnp
movsb
pop
cmc
xor
mov
sub
cmp
lea
xor
dec
les
dec
sub
jge
inc
in
xchg
mov
jmp
lods
ficoms
divb
jns
sub
inc
jge
mov
repz
xor
push
push
bound
push
mov
push
adc
pop
mov
std
jns
dec
pop
movlps
lret
aam
outsl
inc
jg
ja
xchg
jns
cmpsl
xor
movsb
push
aam
mov
jl
add
aad
scas
jecxz
mov
call
push
sarb
out
mov
cltd
sti
fsubl
ret
mov
sbb
sub
push
push
popa
inc
cld
add
aam
pop
stos
mov
repz
icebp
ds
ljmp
aam
adc
xchg
dec
sub
pusha
pop
stos
push
dec
call
mov
pop
jb
movsb
inc
sbb
mov
sub
lods
xchg
icebp
pusha
dec
lret
leave
adc
pop
pop
cld
iret
ljmp
movsb
out
adc
daa
add
mov
push
mov
cwtl
pop
sub
stos
mov
inc
mov
or
rclb
hlt
clc
je
xor
lods
inc
xchg
sbb
hlt
push
jns
cli
lea
fs
or
mov
add
test
or
inc
negb
jge
and
sub
lods
scas
ret
pusha
outsl
dec
in
sub
push
aad
sbb
pop
cmp
lds
push
sub
sub
adc
jns
ucomiss
es
push
lods
cmp
loop
or
mov
imul
dec
movsb
shll
insb
mov
fisttpl
aam
outsb
imul
add
dec
mov
adc
ficompl
movsb
add
fwait
inc
loope
or
pop
dec
jl
rep
ret
pop
adc
cmp
lds
or
cs
mov
pop
mov
xor
repz
insl
or
xor
stos
xor
movsb
mov
scas
push
pop
mov
jbe
ss
or
sbbl
arpl
xchg
nop
jno
pop
cmpl
inc
movsb
cwtl
js
lea
dec
jbe
xchg
mov
lcall
fsubs
pop
rorl
stos
sbb
pop
ror
cmpsl
pop
or
inc
jno
add
jecxz
addr16
xchg
notb
les
push
pop
adcl
xchg
adc
mov
jns
jno
fiaddl
pop
cmp
and
mov
subb
nop
in
cmp
push
scas
addl
stos
fstps
jne
dec
data16
inc
icebp
xor
leave
xchg
mov
mov
dec
lds
das
loopne
jne
or
pop
xor
and
cmp
pop
loop
das
jecxz
cmp
aam
adc
mov
vhaddps
sti
fsubrs
insb
fnstcw
lods
js
out
adc
pop
sub
enter
rolb
mov
pusha
and
adc
inc
dec
xchg
outsl
mov
cmp
sbb
sbb
jno
xor
rorl
leave
das
push
and
ja
ljmp
movsl
in
xor
icebp
out
jge
mov
pop
cmp
xor
cmpsb
fcoml
cmpl
adc
mov
fstp
scas
out
pushf
pusha
xor
dec
mov
rorl
movsl
sub
notb
ret
enter
into
shll
pop
sub
dec
movsb
push
shrl
es
jb
or
adc
jns
jo
outsb
loop
insl
inc
ljmp
inc
imul
mov
mov
and
icebp
je
andl
cmp
pop
xor
stc
sub
push
addb
mov
fcoms
lcall
mov
xor
xchg
mov
popf
xlat
dec
cmpsl
pop
mov
movsb
ss
add
add
mov
xchg
in
pop
insb
scas
mov
sub
push
xlat
xchg
jnp
dec
shr
xor
push
jmp
rcrb
inc
pop
xchg
lahf
xchg
shll
or
scas
fsubrp
mov
mov
out
add
pusha
mov
mov
jno
push
pushf
push
inc
and
or
xchg
dec
pop
xor
adc
lret
jle
pop
sub
pushl
xor
ja
mov
push
inc
jnp
lcall
mov
jmp
lods
push
in
cli
and
ljmp
ficoml
cltd
adc
mov
xchg
and
mov
jp
divb
sbb
xor
test
fsubp
add
adc
add
hlt
adc
sbb
pop
sub
call
cmp
xor
pop
mov
push
mov
nop
rcrb
or
insb
and
lods
pop
call
adc
insl
lahf
sti
push
mov
fsubr
push
fbld
fld1
insb
xchg
daa
dec
mov
adc
aas
mov
add
lahf
ficoms
popf
inc
daa
cmc
mov
ficompl
insb
lods
sub
ret
push
xor
ja
xor
cmp
sbb
pop
push
and
jns
push
or
aam
sub
divb
sbb
insl
mov
dec
lcall
jl
adcl
sub
push
and
inc
call
or
pop
idivl
mov
mov
dec
lods
out
sbb
insb
xor
mov
lea
lahf
popf
jo
lods
pop
mov
mov
xor
adc
stos
xchg
scas
mov
adc
scas
jae
or
fidivrl
jp
push
lret
fistl
fwait
jns
mov
mov
pop
daa
mov
jl
lods
cmp
stc
arpl
and
rorb
mov
test
jl
icebp
ja
or
mov
loope
mov
fwait
sbb
roll
divb
mov
fdivs
lahf
out
insb
pusha
iret
jge
push
push
pop
push
jb
dec
stc
push
and
aas
mov
jae
outsl
mov
lcall
lock
sti
lret
movsb
jg
mov
mov
cmpsb
mov
jb
adc
dec
mov
mov
mov
sahf
fcomi
bound
mov
adc
mov
lods
faddl
dec
pop
or
stc
aaa
sti
adc
xchg
nop
inc
mov
pusha
fdivl
ljmp
mov
sbb
into
dec
movsl
data16
mov
mov
push
cmpsl
addb
cs
fidivrl
dec
les
mov
lods
adcb
aad
pushf
into
in
add
mov
or
lods
fadds
dec
adc
hlt
or
push
sysexit
and
push
jb
rclb
sub
sub
gs
pop
mov
aas
enter
cwtl
pop
dec
repz
inc
icebp
gs
cmpsb
jge
cmpsl
inc
inc
dec
je
push
jmp
in
jge
lds
cmpsb
xor
add
enter
xchg
sbb
in
or
mov
das
movsb
pop
stos
shl
outsb
lea
mov
inc
sbb
pop
lods
ret
and
jg
sbb
out
or
enter
fists
jns
mov
jb
lahf
fwait
sahf
bound
push
les
mov
shl
aam
movsb
inc
test
mov
jbe
cwtl
enter
jecxz
jp
add
mov
xchg
fcmovnb
add
loope
popf
bound
popa
inc
mov
xchg
mov
mov
mov
xlat
sub
cmp
stc
mov
movsl
sbb
loopne
mull
test
mov
sbb
mov
movsb
ljmp
pop
dec
enter
out
enter
inc
and
jmp
pop
sti
fisubl
dec
insb
rclb
mov
adc
movsb
xchg
push
mov
sbb
test
add
lea
into
aaa
int
xchg
and
sbb
jl
or
ret
and
mov
cmc
negl
ss
add
mov
nop
fs
sbb
pop
dec
rcl
lods
test
test
int3
dec
decl
and
je
imul
or
gs
shrb
mov
xorl
push
jb
xchg
cmpsl
push
jne
sbb
xchg
mov
xchg
mov
pop
mov
pop
data16
mov
jns
pop
adc
dec
leave
out
and
push
and
mov
cmpl
cltd
dec
push
mov
jae
mov
cmp
push
sbb
sub
mov
loop
xor
inc
je
add
adc
fbstp
repz
lret
mov
xchg
pop
inc
mov
clc
mov
jnp
and
adc
clc
cmpsb
repz
or
jbe
jmp
xor
movsb
jo
insl
stos
mov
imul
mov
jmp
jmp
sarl
lcall
aam
insb
sub
cmp
and
repnz
add
dec
inc
lds
push
loope
jae
in
xchg
sbb
scas
mov
loop
repz
mov
mov
jb
jp
adc
cmp
aad
sbb
dec
cmc
aad
fimull
jno
push
inc
cs
mov
push
out
hlt
es
adc
das
in
lods
lods
sarb
push
std
addr16
js
xor
sub
lret
mov
pop
adc
xchg
xor
lock
mov
fsubrs
cmp
jl
push
mov
add
xor
cli
pushf
xchg
cmp
mov
xchg
dec
cld
paddsb
or
aaa
call
insb
or
rclb
mov
sub
insb
inc
daa
pcmpeqd
mov
incb
mov
lods
lcall
xor
xchg
jne
sahf
adc
orb
mov
mov
aad
xor
push
push
fiaddl
stos
shll
sub
gs
mov
push
mov
scas
aad
xorb
sub
xorl
jmp
cmc
and
inc
inc
add
xlat
pusha
jns
pop
ret
push
adc
xlat
fisubs
jne
aad
iret
jo
cmp
rep
sub
test
dec
mov
imul
aam
and
dec
mov
aas
or
leave
xlat
fiadds
adc
mov
jae
mov
ror
je
sti
pop
test
lret
push
ja
mov
inc
jp
fisttps
and
xchg
sbb
lahf
push
mov
inc
or
xchg
jo
rcrl
adc
aam
stos
mov
xor
xchg
dec
scas
pop
push
mov
fyl2x
out
jb
decb
dec
mov
ficomps
jbe
cmp
or
sub
pop
add
jno
pop
and
ror
jge
in
bswap
dec
cmp
sub
sub
push
xchg
dec
mov
cmp
repz
cmp
add
negb
sub
imul
movsb
jp
cmp
sbb
inc
inc
out
add
aam
outsb
inc
xor
mul
pop
xchg
dec
inc
or
nop
gs
xchg
and
push
movsb
mov
fsubrp
cmp
cmpsb
dec
outsb
shll
daa
lods
arpl
lahf
or
jmp
cmp
std
fwait
or
mov
inc
movsb
bound
fsubrl
scas
ljmp
call
shlb
cmp
inc
sqrtps
sub
xchg
enter
mov
sbb
or
sti
int
mov
xor
push
sbb
movsb
pushf
mov
jae
in
push
arpl
mov
dec
jns
pushf
and
incl
pop
into
and
cmpsb
mov
xor
mov
and
rcrl
outsb
jnp
cmp
dec
aad
lods
sub
mov
iret
lock
dec
push
pop
xchg
loope
inc
dec
sbb
xor
pop
push
insb
cmp
pop
or
cmp
inc
inc
test
push
push
cld
pop
je
je
pop
pop
inc
mov
jae
fdivs
jo
mov
dec
jmp
and
push
mov
mov
xor
push
pop
push
outsl
test
ljmp
movsb
xchg
in
cwtl
scas
test
mov
sbb
mov
mov
dec
std
cmp
fcoms
incb
movsb
inc
xor
inc
cmpsb
sub
inc
lods
lods
jne
cmp
pushf
data16
xlat
ficompl
add
mov
jno
nop
cld
mov
iret
pusha
std
inc
test
xchg
adc
xor
adc
roll
mov
aam
shrb
mov
imul
out
fadds
mov
out
loope
add
cmpb
xchg
out
mov
call
inc
dec
cmpl
or
cld
mov
push
xchg
adc
sub
push
jp
and
out
clc
sbb
add
sub
dec
xchg
push
stos
sbb
sub
sti
jle
lods
push
das
out
dec
mov
mov
aad
sub
pop
aad
das
dec
int3
call
shl
cld
imull
imul
out
cmp
mov
call
lods
xchg
das
xchg
andb
jb
mov
stos
stos
push
lods
mov
pusha
push
cmp
notb
popf
sub
pusha
xor
stos
les
and
mov
push
sub
hlt
lods
push
and
mov
arpl
insl
pop
sub
movsb
mov
in
xchg
mov
je
add
lea
dec
cli
fsubrs
aam
fs
sbb
movsb
insl
fdiv
int3
pusha
inc
adcl
mov
ss
pop
sub
cltd
jnp
pop
hlt
std
pop
mov
mov
pop
ja
dec
xchg
push
das
stos
icebp
notl
sti
paddq
xor
movsl
mov
iret
stos
gs
cmpsl
cmp
xchg
fisubrs
add
cmp
cli
push
add
jb
mov
xor
and
or
push
out
xor
mov
insb
cmp
mov
icebp
lret
xlat
push
cmp
xlat
pop
mov
push
lret
iret
xchg
aam
adc
iret
arpl
roll
repz
inc
push
jb
and
or
icebp
shrl
insb
push
mov
inc
outsl
or
stos
cmp
mov
lahf
push
inc
orl
andl
push
xor
cmc
sti
lods
xchg
jmp
jno
lods
pop
shl
xor
jns
aam
cmp
mov
dec
stos
jae
sahf
mov
xchg
test
push
mov
or
add
ja
and
push
sbb
xchg
es
lcall
mov
or
repz
into
dec
movsb
xchg
xchg
in
and
rol
cmp
insl
imul
fwait
iret
push
stos
in
clc
pop
xor
sbb
call
fbstp
mov
fisubrs
add
ljmpw
or
mov
pop
push
add
ret
fbld
dec
adcb
scas
test
test
sahf
outsb
pop
test
aad
pop
enter
movsb
shlb
cli
sbb
outsb
and
pop
adc
popl
adc
cmp
std
mov
mov
or
addb
sbb
lock
mov
cmp
into
stos
fsubr
cmp
dec
imul
inc
fcmovu
mov
out
movsb
cld
pop
xchg
adc
lock
in
sub
test
stos
jbe
adc
jne
sub
je
movsb
loope
in
gs
and
or
fildl
mov
clc
lds
pop
xor
jl
xchg
or
cwtl
scas
lahf
movnti
sbb
fsubl
pusha
sbb
and
notl
dec
sbb
fistpll
bound
jge
sub
xchg
push
fistl
imul
and
shrb
jbe
push
xor
out
test
out
cmp
push
movsb
push
outsb
gs
or
jge
pop
fwait
add
in
xchg
int3
mov
inc
mov
pop
push
repnz
mov
cli
adc
ss
sbb
inc
push
mov
lds
rep
ret
cmp
adc
out
jg
cmp
xchg
repz
das
and
in
mov
enter
xorb
in
and
and
add
insl
sbb
call
dec
pop
push
jno
cmpsb
mov
add
ret
push
jno
adc
cmp
mov
sbb
dec
imul
sub
dec
movsb
pop
mov
sbb
aam
xchg
mov
jae
jo
xchg
imul
xor
mov
insb
mov
divb
mov
rol
shr
adc
and
cld
int
int
adc
jae
add
outsl
and
jae
leave
ret
outsl
lods
pop
pop
sub
and
jne
sbbl
push
sti
ljmp
js
lock
arpl
sub
sahf
cwtl
scas
add
xlat
in
fstps
xchg
mov
daa
bound
and
or
lods
adc
or
push
adc
movb
mov
ss
mov
leave
mulb
or
ret
pop
sbb
dec
push
hlt
mov
aaa
xchg
sbb
clc
mov
test
push
cltd
mov
rcl
inc
pop
call
out
repnz
and
out
cmp
pop
shrb
xchg
lcall
sbb
js
popa
lea
cmp
fstl
arpl
movsb
lea
sbb
aam
addr16
jb
dec
adc
jmp
into
cltd
and
sub
stos
pop
pop
cmp
jmp
scas
dec
pusha
subl
aaa
mov
fiaddl
sub
and
add
xchg
lea
movsb
jle
jge
and
lahf
inc
insl
xor
jp
mov
dec
xchg
shll
sub
call
xchg
lds
xchg
jns,pn
addr16
adc
mov
fwait
lds
adcl
mov
push
mov
es
pop
lods
repz
xor
test
sub
sub
mov
inc
cmp
popa
inc
ret
test
cwtl
jmp
inc
xor
xor
in
ja
xchg
push
add
fdivrl
xchg
fiadds
mov
stc
imul
je
pop
dec
imul
inc
jo
outsb
xor
test
pop
leave
jmp
aad
mov
adc
ss
arpl
adc
jge
insl
mov
sbb
xor
clc
or
sbb
mov
repnz
cmpsb
mov
inc
mov
push
xchg
sub
jne
dec
mov
adc
and
mov
lds
fmuls
xchg
test
mov
sbb
cmpb
xchg
xchg
loope
and
jl
jne
aaa
jbe
add
mov
sub
es
mov
mov
stos
xchg
lods
aad
pop
int
fwait
lods
popa
inc
pop
sbb
jg
xchg
out
sbb
addr16
jnp
mov
add
stos
sahf
mov
scas
sbb
in
loop,pn
aaa
push
das
iret
or
push
add
scas
push
sub
jb
or
and
bnd
arpl
sub
push
mov
call
lea
mov
call
sub
mov
enter
xchg
pop
jns
or
sbb
sbb
out
into
int
repz
bound
fisttpl
inc
lret
xor
push
scas
ret
sahf
sbb
decb
mov
pop
js
inc
mov
lods
pop
mov
pusha
cmpl
lock
pop
inc
sbb
push
lods
xchg
xchg
mov
cmp
ret
xorb
loope
mov
sbb
in
xor
dec
sar
xchg
cmc
movsb
xor
dec
out
out
mov
lods
mov
dec
jo
ja
mov
sub
sub
into
inc
jb
inc
clc
cbtw
add
add
inc
in
mov
sbb
add
xor
push
jo
mov
insb
fdivrs
nop
aas
in
jne
idivl
test
pop
dec
inc
sbb
cs
dec
mov
xor
jmp
jp
dec
sbb
jmp
movsb
dec
jns
jge
pop
xor
mov
in
fildll
ljmp
scas
in
inc
cli
mov
decb
leave
bound
and
add
repnz
repz
stos
faddl
cwtl
mov
adc
arpl
je
jns
push
jge
mov
xchg
outsb
jns
mov
les
pop
dec
xor
pop
hlt
inc
fimull
jno
sub
xor
int
inc
lock
dec
inc
shld
repnz
cli
adc
imul
inc
iret
arpl
out
cld
mov
mov
roll
clc
popf
mov
xchg
mov
dec
loope
fsub
cld
xchg
jno
sub
jo
jmp
pop
pop
int3
bound
cmpsb
in
adc
lea
or
cwtl
repz
push
xchg
iret
mov
cmp
inc
fsubs
mov
and
dec
adc
push
mov
call
aam
rep
mov
and
push
lea
inc
dec
push
or
addr16
xor
xchg
mov
clc
sti
subl
push
mov
out
mov
mov
and
insl
jns
mov
push
dec
sub
dec
cmp
inc
or
mov
out
movsb
mov
or
popa
int
inc
dec
mov
icebp
popf
fcos
sub
jg
loope
jno
pop
mov
mov
decl
dec
ss
ss
andl
lock
repz
adc
scas
shrb
sbb
adc
idivl
xorb
jb
inc
fisttps
mov
or
or
fwait
arpl
sub
xchg
outsb
mov
jb
aam
je
bound
enter
scas
jnp
mulb
xlat
insl
jnp
les
jp
lods
push
or
test
xchg
in
pop
sahf
pusha
sbb
scas
push
add
push
test
aad
xor
aad
imul
xorb
arpl
jmp
cmp
scas
mov
pop
subb
cmpsb
insb
sbb
inc
inc
xor
sbb
lcall
adc
sub
lret
ss
lods
push
clc
add
or
iret
lret
aas
xlat
pop
aaa
inc
ljmp
insb
hlt
leave
push
mov
or
inc
sub
lods
es
movsb
adcl
pop
mov
mov
cmp
xor
lds
push
jmp
data16
in
xchg
xor
dec
sub
ja
add
adc
dec
or
push
jb
sbb
loop
call
and
sti
sub
jb
mov
adc
lds
in
test
mov
xchg
pop
out
push
mov
dec
pop
sub
mov
cwtl
scas
and
jno
mov
out
mov
pop
or
xor
dec
mov
mov
inc
push
push
into
hlt
clc
and
jno
imul
mov
mov
jnp
push
dec
push
scas
stos
fimull
sbbl
mov
mov
movsl
push
pop
adc
loop
xchg
dec
out
xor
outsb
mov
iret
xor
sti
icebp
jbe
das
fcoms
jno
fidivrs
mov
decb
sbb
mov
outsb
aam
loope
add
subb
hlt
push
dec
adc
xchg
mov
xchg
ss
jns
test
xor
pop
dec
sbb
mov
cmp
movsb
in
orl
jge
testl
cmp
scas
sub
hlt
inc
iret
rorl
mov
xor
push
movsb
loop
push
push
iret
mov
ret
clc
notb
mov
pop
and
or
movsl
sbb
sub
cmpsl
push
fbld
sbb
fdivrs
jne
jae
jg
jo
add
stos
pinsrw
rcll
cli
mov
cmp
xor
adc
jnp
loope
movsb
pushl
mov
divb
inc
sahf
cmp
adc
rclb
stos
push
lret
das
ret
popf
lcall
sti
mov
pop
or
in
jbe
inc
mov
ret
insl
movsb
xchg
add
dec
mov
lods
push
mov
pop
push
adc
mov
scas
cltd
mov
xor
lahf
aaa
pop
add
pop
cs
mov
mov
push
int
lock
inc
mov
lret
bound
mov
lcall
lods
xchg
push
pushf
je
mov
shlb
push
idivb
notl
pop
mov
fsubrp
test
mov
sahf
xchg
into
mov
ja
out
cmp
mov
imul
mov
aaa
das
mov
nop
jno
xchg
dec
push
enter
das
sahf
movsb
ljmp
xchg
xchg
sti
mov
pop
mov
sbb
mov
pusha
hlt
jns
clc
loope
xor
mov
lahf
ljmp
and
idivl
mov
cmpb
daa
xchg
outsl
or
pop
repz
sbbb
fnstsw
ret
mov
scas
add
frstor
push
int3
push
mov
lock
insb
cmp
loop
xor
outsl
push
mov
shrl
lcall
xchg
mov
xchg
push
adc
jnp
test
iret
hlt
pop
addr16
sub
into
fisttpll
or
leave
add
imul
subb
and
xor
jle
icebp
and
lcall
pop
lret
mov
mov
inc
ret
mov
sbb
or
dec
cli
mov
or
pop
xor
bound
test
cli
push
ljmp
sub
leave
sub
xor
loopne
mov
push
sub
xchg
jecxz
cmp
jbe
xor
dec
arpl
or
dec
pop
ljmp
jb
fidivrl
sbb
sbb
lods
ds
lods
fisubs
jne
dec
loop
fwait
hlt
iret
leave
stos
out
push
pop
mov
in
out
add
pop
xorb
outsl
pusha
adc
push
pop
addb
cs
mov
repz
mov
inc
add
test
js
stos
shlb
imul
or
mov
insl
pop
and
sahf
int
inc
xchg
dec
outsb
clc
or
mov
xor
cli
sub
lods
sbb
jns
shl
push
or
mov
outsb
jns
add
jle
and
outsl
cmc
inc
subb
sbb
mov
xor
xor
sub
stos
dec
bound
push
mov
iret
and
dec
pop
mov
mov
out
sti
cmpb
dec
dec
mov
leave
ljmp
imul
mov
jnp
mov
xlat
cmp
mov
mov
ja
pusha
push
sbb
out
fbstp
imul
mov
jb
in
outsb
xchg
lods
pushf
add
lcall
scas
repz
ds
sbb
aaa
sub
add
call
stos
lcall
iret
jns
mov
int
mov
fistps
inc
stc
adc
xor
repz
xchg
pop
jno
mov
stos
pop
jns
jl
xchg
stc
out
fimull
repz
inc
and
mov
lds
dec
cmpl
outsb
sub
test
adc
mov
notb
inc
fsubrl
inc
int
jae
xlat
mov
scas
add
icebp
test
lods
mov
pop
insb
add
push
fldcw
cld
pop
xchg
jbe
sub
test
push
ljmp
and
roll
and
mov
xchg
popa
ss
lea
pop
push
dec
lods
out
inc
bound
data16
movsb
sub
inc
pop
sub
jmp
cmp
sbb
test
cmpsb
fcompl
mov
imul
mov
jnp
xor
movsb
imul
ss
test
test
pop
jb
arpl
mov
pop
pop
xchg
ror
pop
stos
int
push
test
repnz
sbb
outsl
and
les
jo
hlt
cltd
cmc
mov
scas
cmp
mov
sbb
dec
mov
mov
dec
push
and
xchg
cmpsb
mov
inc
sbb
jno
mov
fdivr
iret
xor
das
and
insb
fisubrl
les
sub
jge
fidivs
lods
or
arpl
dec
imul
pushf
adc
xchg
lock
insl
pop
scas
xchg
pop
cmpsb
arpl
rcrb
xor
cmp
imul
cld
add
in
jge
cmp
fldcw
xor
outsl
push
dec
out
out
push
dec
movsb
dec
ror
sbb
jecxz
mov
cmp
push
jmp
jbe
xlat
pop
mov
les
nop
aaa
pop
sub
shr
fadd
arpl
cltd
gs
mov
mov
cmp
pop
and
push
sbb
xor
push
leave
movsl
or
aam
xchg
mov
pop
jno
xchg
mov
shll
and
rclb
int
xor
jb
mov
test
and
dec
cld
bswap
jl
mov
sub
dec
sub
pushf
sub
adc
mov
mov
push
push
aam
andb
mov
popa
js
mov
sahf
dec
push
cs
es
popf
daa
lea
sub
jnp
pop
sbb
push
xchg
stos
mov
std
arpl
adc
inc
push
push
or
outsb
imul
sub
mov
dec
sub
pop
lcall
pop
test
ja
sub
mov
push
mov
mov
test
mov
sbb
shlb
outsb
xor
movsb
mov
cvtpi2ps
xor
dec
cld
xor
je
popf
daa
mov
mov
mov
dec
inc
sar
xlat
push
xorb
xor
movsb
inc
lock
adc
roll
cmp
pusha
xchg
rolb
jle
sub
movsb
aam
mov
lds
xchg
add
jns
inc
in
fwait
cmpsb
adc
jb
fstpt
xchg
popf
add
cmpsl
adc
xchg
stos
push
dec
fwait
pop
jne
push
pop
mov
mov
stos
shl
ljmp
push
les
mov
call
or
repnz
sbb
pop
outsl
sti
xor
test
pushf
pop
push
mov
dec
nop
fcompl
pusha
into
mov
fwait
cmp
add
xor
mov
xor
test
lcall
push
bound
ljmp
adc
lods
fwait
mov
push
pop
adc
mov
fisubs
inc
cmp
cli
stos
scas
sbb
lock
nop
lcall
adc
fcomi
in
int3
fwait
cmp
enter
cmp
xchg
mov
repz
pop
int3
arpl
and
jp
out
scas
cmp
ss
jnp
pusha
lcall
sbb
push
shll
test
test
scas
movsb
gs
jno
ret
cltd
fmuls
pop
popa
insb
mov
jbe
movsb
fistpll
icebp
mov
icebp
cwtl
cmp
pop
leave
mull
movsb
push
cmpsl
inc
sub
sbb
xor
ljmp
or
ja
xchg
ja
sti
mov
outsb
xchg
cld
dec
push
mov
nop
or
jg
mov
inc
daa
lods
dec
mov
cmp
sub
mov
pop
mov
nop
push
jle
jb
pop
jge
fdivs
sub
out
insb
fisubrl
outsb
push
mov
lahf
xor
bound
mov
sbb
in
jl
loopne
jne
or
mov
fistl
and
mov
arpl
mov
ret
call
lret
push
xchg
cmp
repz
icebp
movsb
cmp
push
sub
loope
mov
sarl
movsb
xor
sbb
dec
je
mov
xor
pop
test
out
aaa
lock
mov
std
dec
add
sbb
lcall
inc
mov
inc
or
icebp
mov
subl
mov
ret
add
xor
iret
mov
dec
ds
aam
mov
mov
adc
xor
mov
adc
insb
out
jmp
xchg
or
sub
icebp
cmovge
mov
mov
pop
fwait
mov
jb
pop
or
icebp
leave
xor
imul
out
mov
std
mov
mov
or
adc
mov
push
lds
xchg
pop
xor
pop
cmpb
outsb
and
sbb
hlt
mov
jns
bound
imul
mov
or
cwtl
clc
adc
ljmp
add
pop
mov
mov
pop
adc
test
std
sahf
enter
lds
not
repnz
hlt
mov
test
mov
jbe
loopne
or
dec
outsb
sub
imul
loop
mov
mov
loopew
cmp
adc
mov
scas
lcall
stos
mov
das
insl
or
mov
push
pop
sti
repz
pop
nop
inc
inc
adc
mov
pop
lds
movsb
xlat
mov
mov
outsl
lret
js
lods
or
bound
sub
cmp
addl
out
aam
or
mov
lcall
inc
and
push
pushf
cmc
and
imul
cmpsl
adc
jl
pop
adcl
adc
insb
jo
mov
mov
mov
int
adc
cs
fdivrl
mov
add
sub
push
xchg
jns
mov
lds
insl
xchg
mov
jne
dec
iret
ss
movsb
pusha
sti
cmp
push
int3
mov
ljmp
mov
sbb
ja
cwtl
mov
cmp
mov
addr16
lds
sbb
ds
sarl
cmpsl
popa
jne
cmpsb
sbb
mov
imul
mov
sub
push
stos
mov
push
and
in
les
jnp
inc
into
jg
inc
pop
rclb
sbb
es
rcrb
cmp
pop
daa
inc
push
fmull
sbb
sbb
push
dec
lods
les
cmpsl
in
and
mov
pusha
mov
mov
xor
adc
ds
lods
jns
ss
jb
subl
dec
pop
dec
fwait
mov
mov
push
out
cmp
jg
adc
std
xor
push
sub
dec
xchg
hlt
ljmp
mov
push
and
sbb
xchg
sub
jb
inc
in
mov
pop
std
cmpsl
stos
adc
fstpt
leave
mov
movsb
adcb
cmp
fdivp
sub
mov
addr16
cwtl
inc
dec
inc
andl
adc
cmp
and
or
cli
push
xlat
lods
in
fcmovu
pop
test
xchg
mov
sub
dec
mov
les
aad
sbb
ss
outsl
iret
sbb
dec
test
sbb
and
mov
sbbb
lea
enter
stos
data16
xor
test
and
lock
xchg
xchg
inc
loop
enter
test
imul
inc
xchg
jp
les
pop
jb
cs
xchg
inc
dec
aad
incl
lods
ret
imul
inc
jnp
hlt
cmp
mov
fisttpl
inc
add
aam
xor
sbb
add
sahf
dec
test
stos
shrb
aam
loop
xor
ret
xor
hlt
fnstcw
lods
fcompl
sarl
lahf
jb
cmc
mov
dec
test
pop
sbb
les
test
xchg
mov
out
mov
jo
bound
in
popl
repnz
popa
sbb
movsb
mov
dec
es
mov
sub
stos
mov
insl
or
rcll
sub
loopne
jbe
shl
sbb
mov
adc
sbbl
sbb
xchg
and
mov
int3
push
push
pop
xchg
add
cmpsb
jnp
xor
mov
out
test
inc
loopne
sub
cmp
xor
daa
jmp
mov
iret
adc
movsb
push
test
stos
push
sti
ljmp
popf
mov
movsb
mov
xor
adc
jbe
sbb
sti
or
xor
sti
push
lcall
or
mov
push
adc
aas
lea
repz
sub
jns
nop
push
adc
andl
scas
sub
sub
cmp
add
inc
push
add
cs
clc
add
into
xchg
jbe
jbe
enter
lods
xor
xchg
jbe
jbe
sbb
cmpsl
inc
mov
jle
adc
mull
arpl
cmp
and
out
mov
pop
mov
les
xchg
lds
xor
sbb
push
shlb
lods
or
sbb
jp
jno
ret
notl
sub
outsl
jecxz
out
xchg
pop
add
push
cmp
fisubrs
dec
fdivp
xor
sar
push
xor
cmp
push
fdivrs
test
inc
cld
pop
inc
movsl
sbb
pop
lods
xchg
nop
lret
repz
mov
adc
pop
and
ret
lods
mov
inc
mov
sbb
fs
sbb
xchg
inc
push
cld
dec
xchg
andl
sbb
leave
das
movsb
fdivrs
sbb
adc
sbb
popf
loop
lea
popa
loope
jle
dec
jge
mov
int3
repz
xchg
jb
cmp
push
inc
pusha
outsb
orl
bound
push
enter
into
ret
hlt
pushf
lcall
fimuls
mov
in
js
subb
iret
outsl
sbb
movsb
jmp
mov
lret
mov
faddp
adc
mov
lret
xorb
mov
aad
lods
cltd
inc
dec
shr
or
jbe
andb
xchg
sbb
sub
pop
push
ret
cmp
sub
sub
pop
mov
mov
xchg
arpl
enter
dec
mov
lds
pop
pusha
cwtl
push
subl
hlt
decb
in
stos
test
cmp
shlb
pop
sub
cli
daa
pop
sahf
inc
sub
push
aad
lea
in
push
out
sub
pop
mov
xor
dec
test
or
ret
shrl
mov
mov
add
sbb
mov
ret
rcrl
stc
inc
dec
lcall
mov
lods
and
cltd
mov
fsubr
js
mov
test
lods
pop
loop
les
push
cmpl
ljmp
sbb
int3
shlb
lods
adc
sbb
cmp
stos
jge
fwait
mov
push
xchg
inc
push
dec
into
mov
pop
and
out
psubusb
jb
pusha
les
data16
cmp
push
mov
jno
cltd
mov
sub
daa
icebp
mov
inc
xorb
test
jae
outsb
shrl
inc
jne
inc
fcomi
pop
cmpsl
nop
out
adc
movsl
insb
dec
xchg
pop
andl
aaa
xlat
sub
outsl
push
fcompl
mov
push
loope
test
sub
repnz
outsb
subb
fsts
cmp
adc
lods
jle
popa
push
rcl
push
stc
mov
pop
lahf
fs
xchg
pop
pop
sar
and
call
adc
insb
clc
dec
and
idivb
lock
dec
add
and
jbe
push
mov
xchg
or
andb
addr16
out
fwait
int3
iret
cmpsl
cmp
aas
jp
sar
insb
xchg
insl
rorb
add
fwait
sub
insl
adc
jno
test
loopne
xchg
push
sbb
jle
test
lods
pop
leave
clc
les
jae
test
or
mov
jbe
push
bound
dec
jl
jp
lods
xchg
push
fildll
mov
add
lcall
rol
js
mov
cmp
pop
mov
loop
xchg
es
pop
outsl
add
fldenv
gs
nop
not
push
pop
mul
test
rclb
loope
enter
mov
shlb
rdtsc
adc
popf
jae
xor
insl
mov
or
lods
cld
ss
inc
mov
push
dec
fnstsw
icebp
subb
repz
ja
push
push
dec
xor
push
test
sbb
add
mov
push
push
dec
mov
leave
rorb
ss
pop
lods
int3
push
pop
or
pop
cli
cs
es
mov
scas
and
jl
stos
inc
popa
xchg
xchg
mov
and
stos
loopne
mov
jb
out
xlat
sbb
jp
or
jl
test
push
arpl
inc
dec
add
enter
dec
or
sti
cmp
cmp
mov
push
cmpsl
xor
or
mov
cld
adc
or
inc
rcll
or
dec
js
pop
insb
outsb
jns
pop
sbb
mov
mov
gs
lock
adcb
ret
mov
mov
faddp
pop
movsl
outsb
mov
add
mov
jnp
push
pushf
sub
insb
rolb
lock
imul
out
mov
sub
imul
ss
push
test
test
fsubrp
imul
sbb
push
mov
movsb
adc
loope
inc
mov
rclb
idivl
mov
sbb
nop
xchg
js
orb
shr
pop
ss
stc
xor
movsb
insl
jno
clc
cmpsl
mov
sbb
inc
and
lcall
popa
cmp
repz
mov
and
ficoms
pop
push
jne
jl
or
les
jge
xchg
or
rorl
sbb
dec
pushf
xor
mov
mov
bound
ja
shrl
addr16
dec
jl
or
aaa
pop
movsb
cmp
mov
arpl
push
jp
repnz
xor
jae
scas
lods
and
fwait
lea
mov
mov
into
add
ds
xchg
dec
add
add
ror
movsl
jp
rclb
lods
jl
gs
pop
cli
sahf
push
repz
dec
arpl
mov
or
or
dec
into
scas
pop
mov
pop
movsb
mov
jg
cmp
and
xchg
pop
repz
addl
movsb
lods
outsl
lcall
movsl
icebp
cs
in
sbbl
pop
mov
mov
nop
je
rcll
out
jno
repz
mov
jb
scas
pop
fstpt
push
es
mov
cmc
cltd
outsl
push
lds
mov
lods
ficoml
scas
pop
rcl
pop
jne
xor
sbbl
mov
push
iret
test
pop
xchg
js
icebp
mov
dec
movsb
mov
push
scas
pop
fisubs
jns
mov
out
cmc
and
push
inc
xor
dec
push
dec
dec
int3
clc
andb
sbb
push
fisubs
out
dec
cld
leave
aam
sub
lods
cwtl
lret
loope
imul
sbb
mov
push
ret
jns
fs
pop
inc
rcrl
lods
pop
xor
enter
sub
lock
fsubs
pop
lods
adc
cmp
shlb
shlb
dec
nop
fcoml
or
jp
adc
sbbb
aaa
xchg
xor
mov
push
out
cmpb
js
push
or
dec
movsb
xorb
or
imul
xchg
jb
mov
mov
call
out
dec
pop
in
xchg
ss
mov
scas
repz
xchg
cmpsl
pusha
rclb
fdivrs
jge
scas
lea
or
int3
call
sub
pop
and
jmp
jae
inc
push
sbb
js
adcl
push
in
xchg
imul
lret
outsb
mov
xor
dec
les
mov
dec
jecxz
stos
mov
fwait
xor
into
stc
xor
xor
dec
movsb
into
aam
lock
ds
mov
arpl
pushf
push
popa
das
push
add
and
dec
es
xor
inc
sti
aaa
cltd
aad
lods
jl
xor
out
fnstcw
in
inc
add
inc
das
add
shrl
imul
pop
xchg
lcall
jno
sbbl
ret
and
jno
lret
xchg
ss
mov
sub
loope
sbb
mov
mov
dec
leave
lcall
mov
push
jle,pn
jae
xchg
icebp
mov
jle
pop
jb
ficoms
stos
jle
sub
mov
sub
mov
sub
out
adc
adc
enter
push
lcall
imul
dec
fisubrl
or
je
mov
jb
sub
mov
fcmovne
jmp
jnp
cmpsl
nop
cmpb
lcall
movsl
movsl
shll
mov
fwait
loop
xchg
fimuls
je
add
je
pop
fisttpl
rcrb
push
int3
pop
iret
sahf
test
pusha
cmpsl
mov
repnz
push
out
mov
pop
int3
dec
sub
mov
scas
jb
lea
mov
mov
cmp
sbb
daa
mull
rcrb
outsb
push
js
mov
insl
cld
cltd
or
icebp
mov
pop
mov
into
cmp
mov
negb
sbb
mov
add
shll
xor
movsb
ret
dec
in
outsb
iret
mov
and
inc
lahf
in
cmp
xlat
jge
adc
and
jnp
nop
jb
aaa
fwait
mov
stos
xorl
and
imul
test
jp
pop
mov
xor
mov
mov
lcall
mov
dec
rolb
xlat
jge
xor
pop
loop
subb
and
test
lcall
mov
add
cmp
gs
cmp
imul
sbb
aam
pop
popf
mov
add
orps
and
mov
mov
cmp
pusha
inc
bound
dec
fwait
daa
in
pop
jno
addr16
dec
push
cmpsl
pop
mov
rolb
inc
shr
sub
shl
pop
iret
pop
notl
dec
icebp
lods
mov
adc
xor
in
mov
pop
cmovg
mov
stos
fsubrl
ret
int3
test
insl
jle
xor
and
pop
pop
add
sarb
stos
xor
push
xchg
xchg
mov
sub
ja
rcrb
loopne
ds
sub
ljmp
movsl
adc
lcall
loope
fcompl
xlat
mov
push
test
dec
cmovg
and
addr16
leave
jge
sub
inc
dec
test
orb
cmp
mov
fdivrs
pop
lcall
mov
jnp
jp
test
and
adc
das
jb
call
ss
jnp
pushf
sub
xor
jae
cmc
leave
add
adc
cmp
xlat
dec
inc
lock
sbb
push
in
cmp
dec
out
movsb
jmp
imul
add
aad
aam
fisubrl
popa
push
or
stos
stos
xlat
jno
in
data16
push
repz
xchg
in
ss
pop
mov
sbb
hlt
xlat
fwait
pusha
ss
push
aaa
push
hlt
jl
mov
movl
xchg
lods
jnp
pop
pop
xor
jb
out
shl
push
xchg
jmp
repnz
or
shll
mov
add
enter
and
pop
shlb
outsl
jb
aam
stc
mov
movsl
in
sbb
mov
mov
pop
push
or
cs
jge
popa
xchg
js
adc
ss
jg
mov
cmp
mov
negb
enter
hlt
rep
pusha
sub
pop
xchg
orl
insl
insb
jge
addb
loopne
ror
sbb
xchg
in
mov
jb
in
hlt
call
jmp
pop
stos
scas
sub
xchg
push
mov
fnstsw
icebp
add
push
dec
adc
add
movsb
cmp
sub
in
add
mov
sti
repz
mov
outsb
and
mov
inc
xchg
lods
daa
ret
sbb
push
outsl
mov
adc
inc
add
jl
scas
xor
push
repz
sarl
push
cwtl
pop
scas
enter
xor
xor
enter
push
mov
stos
or
and
fisttpl
imul
push
bound
movsb
in
andb
inc
jg
sub
stos
cs
sti
dec
xchg
mov
lret
ds
ljmp
push
xchg
jg
dec
fidivs
and
fldenv
loopew
stos
stc
sar
push
cmp
mov
mov
mov
inc
fbstp
cli
mov
cmpsb
push
das
icebp
scas
push
push
shlb
adc
add
xchg
xor
inc
stos
push
jle
outsl
fsubrs
cli
jne
pop
jg
stos
les
cs
aad
call
out
movsl
sub
jae
push
dec
jl
push
sub
xchg
sbbb
scas
sub
cmpsb
mov
js
mov
and
rolb
jb
pop
rolb
stos
cmp
pop
movsl
lods
stc
hlt
mov
adc
lock
movsb
mov
sarl
inc
jno
and
jmp
mov
stos
add
mov
insb
outsb
add
cmc
decb
jo
jno
arpl
add
sbb
aam
dec
jp
and
push
and
dec
sub
test
scas
add
scas
cmp
mov
and
orb
gs
jmp
into
popf
mov
cmp
addb
mov
int
hlt
xlat
sub
adc
ret
push
adc
bound
insl
pop
mov
hlt
ds
sbb
jl
ljmp
cmc
mov
cmp
inc
jb
iret
mov
dec
cmpsb
jo
stc
jmp
push
lret
pop
push
push
enter
sbb
andl
push
mov
lcall
jp
mov
popa
xor
mov
aaa
in
sbb
rcll
js
lods
shl
or
and
int3
jb
xchg
out
dec
stos
iret
loop
push
dec
push
cmp
icebp
js
mov
idivb
decb
push
int3
sbb
int
les
sub
lods
xor
mov
ds
pop
push
adc
inc
out
gs
mov
jno
sbbb
sahf
pop
mov
daa
xor
xor
dec
loope
bound
test
clc
sbb
adcl
xchg
xchg
inc
repz
out
sub
adc
mov
pop
ret
push
mov
push
jae
and
push
pop
add
cmpsl
jns
or
repnz
aam
xchg
mov
bound
pusha
dec
stc
xor
inc
mov
std
fcmovne
bound
xchg
leave
cwtl
or
mov
push
stos
mov
push
fldt
push
push
movsb
mov
xor
das
jnp
ss
clc
jmp
push
dec
mov
inc
inc
adc
sbb
lcall
fdivs
mov
leave
js
es
jb
pop
push
sub
insl
movsb
push
mov
pusha
cmp
cs
cmpsl
or
and
dec
pop
div
push
dec
in
jo
aad
xor
mov
sub
pop
neg
mov
or
cmpsb
sbb
jno
das
mov
cltd
sub
stos
pop
and
loopne
fs
add
xchg
sub
mov
xchg
adc
or
xchg
add
repnz
push
scas
pop
dec
outsl
repz
add
push
xchg
xchg
or
les
fcomps
sbb
stos
sarb
dec
imul
movsb
icebp
inc
jbe
lods
or
scas
stos
mov
js
fs
lcall
inc
cmp
arpl
sti
into
push
jb
sbb
adcb
movsb
pusha
cmp
dec
mov
aam
insl
push
pushl
rorb
jo
push
push
jb
sbb
jne
mov
movsb
add
test
sub
fcomi
pop
jp
std
adc
inc
adc
sbb
mov
mov
pushf
fldl
int3
push
imul
and
jb
call
data16
adcl
mov
fidivs
pop
sbb
push
jp
or
pop
in
pop
pop
cmc
push
adc
lret
jo
mov
in
dec
arpl
pop
mov
mov
mov
pop
dec
jl
fdivrs
sub
sbb
gs
imul
mov
imul
stos
add
mov
xor
jns
shll
das
int
sub
pop
push
ret
in
pop
cli
mov
cltd
enter
lret
aad
out
ljmp
cld
push
push
test
pop
xor
mov
push
rcll
push
push
sbb
leave
jae
and
push
gs
das
or
push
inc
ds
imul
inc
sbb
jb
sahf
aas
mov
push
lods
mov
xor
loope
lret
jbe
stos
ret
insb
cmp
mov
or
pop
cmc
addr16
fwait
dec
adc
je
inc
jnp
push
mov
imul
shrl
mov
sub
sbb
mov
xor
mov
fwait
xorb
jb
jmp
lret
xchg
xchg
clc
inc
adc
fsubp
and
cwtl
int
mov
pop
pop
mov
cs
sub
cmp
aaa
jbe
fstpt
push
adc
test
adc
jge
xchg
lock
nop
lods
lods
in
repz
mov
mov
movsl
repz
movsb
pop
jl
adc
push
cmpsb
into
and
fistpl
add
lahf
cmc
pop
push
pop
mov
push
bound
sub
cmp
sub
insl
outsb
mov
cmp
mov
add
popa
pop
loopne
push
xchg
and
lea
xchg
adc
leave
jb
pop
lea
push
ret
cmpsl
js
movsb
jge
add
push
xchg
rolb
orl
insb
fstpl
pop
out
mov
mov
leave
mov
insl
sub
aaa
sbb
cltd
lods
rol
jbe
ljmp
dec
sub
mov
mov
cltd
out
pusha
jnp
push
ret
push
mov
jb
mov
imul
repz
ljmp
out
ret
cwtl
push
xchg
pop
pop
fwait
jb
lock
cmp
sub
xorl
movsb
sub
push
icebp
in
lds
movsb
out
xchg
mov
xor
jb
je
sub
lcall
xchg
insl
pop
xor
fcomps
pop
push
pop
mov
mov
mov
movsl
push
push
pop
imul
pop
stos
fucomip
fidivl
ret
popa
sbb
push
inc
orl
dec
test
xchg
mov
add
cld
or
out
mov
jmp
sub
in
shlb
mov
cmp
xchg
loop
mov
mov
mov
cmpsb
xchg
jnp
test
addr16
jg
push
mov
dec
inc
adc
pop
rcrl
cmpsb
cmpsl
dec
insl
pop
mov
mov
xor
jmp
add
pushf
jns
xchg
popa
xor
outsb
add
xor
movsl
xlat
cmp
adc
scas
sbb
nop
mov
cltd
jne
lds
mov
daa
mov
int
mov
into
dec
leave
pop
popa
in
push
jno
fisttpl
mov
and
int
cmc
movsb
lods
xor
stc
rcll
iret
and
xchg
mov
repnz
adc
in
and
mov
sbbb
push
clc
mov
dec
les
je
xchg
out
sahf
mov
outsb
fisubs
in
cmp
mov
xchg
mov
loope
hlt
dec
mov
add
fadds
outsb
mov
push
cli
sbb
xor
dec
out
add
jbe
js
test
mov
adc
js
test
scas
sub
mov
out
sub
push
sub
movsb
jae
insb
stos
jecxz
movsl
mov
mov
ja
les
divl
push
xchg
adc
sbb
fs
cmp
hlt
test
cld
or
mov
repnz
add
imul
xchg
pop
xor
cmpsb
mov
or
mov
insl
jecxz
dec
out
das
divb
shl
out
cld
dec
pop
dec
and
mov
cmp
pop
mov
fdiv
cs
les
ss
mov
repz
pop
data16
mov
mov
inc
cld
sub
push
mov
dec
fnstcw
ret
and
mov
xchg
mov
mov
inc
add
pop
mov
push
pop
aad
cmp
jge
out
insb
push
loope
arpl
jns
jl
mov
es
adc
jbe
jg
aaa
fisubrl
mov
mov
ljmp
aam
jns
mov
dec
push
add
sbb
jb
cmpsb
adc
sbb
lock
ret
icebp
lcall
jmp
pop
push
mov
push
and
pop
adc
lods
and
fstpt
cmp
icebp
pop
or
jno
sub
add
mov
enter
insb
dec
or
or
arpl
push
inc
or
cmc
les
or
aaa
and
fistpll
cli
push
inc
sub
lea
xchg
mov
pop
shlb
out
mov
in
xlat
cli
jne
sahf
stos
lods
cmp
xchg
sub
addb
mov
inc
mov
jp
idivb
push
imul
es
sbb
in
xchg
mov
rep
mov
scas
lds
pop
sub
and
inc
cmpsl
and
dec
shrl
lcall
adc
sbb
pop
stos
xchg
sub
data16
icebp
adc
xchg
movsb
inc
movsl
sahf
cltd
adc
dec
fimull
in
int
outsb
jo
fnsave
xchg
sub
and
pop
xchg
stos
test
push
outsl
add
cld
pop
test
push
outsb
jp
push
rep
mov
subl
jne
repz
or
movsb
lea
add
adc
lods
dec
nop
mov
lds
xor
sbb
sbb
pop
mov
and
push
mov
lds
clc
or
jno
push
or
sbb
push
adc
adc
call
lcall
and
and
xlat
xor
fldenv
or
jnp
or
sbb
mov
pop
shrl
imul
sbb
xchg
call
test
xor
mov
push
orb
mov
xchg
and
jmp
das
xchg
or
fsubl
aas
adc
push
fwait
mov
and
xchg
lea
ret
lahf
push
or
fisubrs
sti
aaa
push
mov
xor
movsb
and
inc
insl
mov
adc
repz
add
fiadds
cld
ret
aam
out
pop
jecxz
jo
pop
adc
cmp
bound
push
adc
into
mov
dec
testb
bnd
repz
lea
outsl
xchg
xor
loopne
movsb
inc
mov
dec
notl
pop
cld
jmp
xor
scas
mov
add
int
mov
aaa
lods
jg
test
scas
xchg
pusha
stc
xlat
jg
bound
fcomps
in
rorl
cmp
fcomip
andl
dec
addr16
loopne
xchg
cld
cli
pop
loop
add
or
pop
addb
cmpsl
imul
je
scas
sub
testb
dec
stc
adc
pop
cmc
mov
repz
jp
stos
sub
mov
dec
mov
test
xchg
dec
add
incb
dec
call
neg
sbb
bound
pop
xchg
in
xor
xor
mov
aaa
inc
fwait
sbb
adc
icebp
dec
pop
add
xor
fwait
dec
xchg
sahf
dec
test
stc
mov
in
mov
push
insb
xor
js
lret
push
jp
ss
cmp
mov
jbe
and
and
popf
jne
mov
pop
or
cli
xor
push
mov
sbb
insb
lret
push
mov
pop
xchg
test
movsl
dec
iret
ja
rcll
daa
scas
dec
and
push
in
outsb
xor
xor
sahf
xchg
pusha
sub
push
lret
xor
pop
sbb
jb
jbe
xor
dec
jbe
jb
sbb
cmp
dec
mov
sub
das
mov
out
mov
pop
sbb
pop
sbb
mov
in
cmp
test
jge
or
sbbl
cmp
fists
repnz
inc
ljmp
outsl
lock
ss
imul
pop
or
dec
aas
mov
sub
popf
stc
scas
sbb
inc
sbb
sub
inc
popf
push
mov
jne
stos
jnp
jbe
movsb
push
pop
in
add
mov
hlt
or
rcrb
sbb
cmpsl
iret
cmp
js
fisubrs
enter
cmp
and
push
mov
jb
lods
push
ret
mov
lock
fdiv
xor
lods
adc
out
outsb
std
dec
add
add
mov
arpl
and
je
lods
ret
outsl
out
dec
dec
in
iret
jne
mov
jo
lcall
sub
bound
dec
adc
in
call
fwait
jnp
cmp
push
out
sub
push
add
and
mov
call
pop
out
out
sub
arpl
in
mov
jnp
add
mov
mov
aam
jp
xor
push
ja
mov
mov
int
mov
xor
mov
add
js
mov
mov
movsb
lods
loope
les
je
ret
xor
mov
cmp
adcl
enter
dec
adc
fsubl
lret
or
loop
lods
and
fcom
shrl
clc
ja
int
popa
adc
push
cmp
ret
stos
xchg
jbe
sub
lds
inc
stc
cli
mov
shll
mov
insb
dec
xchg
push
les
sbb
cmpsl
cltd
das
push
sub
push
mov
push
cltd
add
leave
movsb
outsb
xchg
inc
and
mov
in
sbbl
cmp
loop
nop
push
jnp
ss
add
ret
xlat
pop
je
xchg
mov
into
adc
enter
lods
xchg
outsb
adc
mov
jo
cmc
and
movsb
aaa
addr16
icebp
sbb
and
test
dec
and
mov
xchg
repz
xor
js
loope
jne
test
xchg
mov
std
or
icebp
gs
fs
push
push
es
cmp
jbe
mov
sub
xlat
fdivrp
push
xchg
jge
mov
imul
cmp
clc
adc
pop
imul
dec
add
and
fldt
test
ss
mov
jo
dec
push
ss
jae
mov
iret
jge
fsubrl
sub
into
enter
fs
outsb
les
cmpsl
cli
jnp
xor
xchg
and
scas
rcrl
sub
rol
outsl
fistpll
push
sahf
push
dec
in
adc
mov
pushf
leave
rcrb
and
push
movsb
mov
pop
fsts
loope
icebp
dec
mov
daa
adc
sub
rorl
in
xchg
int3
aad
push
push
shrb
out
add
push
mov
out
mov
xchg
shr
jae
dec
inc
mov
in
pusha
popf
inc
insb
pop
into
inc
fcomps
into
out
lea
int3
das
sub
test
fimull
add
or
add
adc
mov
mov
fimull
movsl
pop
xor
rcll
adcl
push
cmp
mov
mov
dec
cmpb
and
js
mov
mov
push
popa
pushf
in
xchg
subb
fstpt
ret
sub
clc
adc
popf
dec
hlt
std
es
pop
add
pop
fcmovnu
movsl
out
int3
aaa
cld
ljmp
fs
mov
jae
mov
push
clc
aas
cmpsb
xor
sub
or
mov
add
imul
dec
and
outsb
insl
outsb
push
std
mov
mov
mov
cld
mov
jp
push
or
xchg
xorl
daa
in
dec
aas
mov
push
ja
push
ret
add
ret
sub
repz
adc
dec
sub
fs
pop
test
call
test
cwtl
adc
movsl
and
jno
sarl
push
sub
mov
test
xchg
rorl
popf
mov
cmpb
dec
inc
movsl
out
cmpb
cmpsl
imul
mov
mov
test
xchg
push
sti
arpl
xchg
int3
or
sub
test
outsl
cmp
push
mov
add
push
test
xor
cmp
stos
sub
punpcklwd
inc
add
mov
mov
aaa
inc
xchg
sub
leave
call
mov
push
adc
sub
push
jbe
stc
out
rclb
jmp
negl
dec
ljmp
mov
aad
pushl
jno
cli
mov
out
jb
mov
call
fdivrs
repz
cmc
sub
arpl
inc
xor
das
dec
loope
jle
lods
cmp
mov
enter
mov
repz
pop
ljmp
call
jbe
out
mov
push
je
sub
xorl
dec
stos
iret
out
inc
lret
into
adc
pop
movl
fidivrs
int3
lods
fsubrp
and
cmp
push
jge
dec
sub
xchg
aad
orb
and
fsubrl
mov
mov
dec
pop
or
add
sbb
repnz
or
jmp
mov
inc
xchg
jb
in
sbb
mov
stos
bound
jge
jmp
cmc
fadds
or
or
or
insl
les
xlat
sahf
pop
outsl
xchg
movsl
lret
rcrb
jnp
jnp
popa
sbb
jg
scas
repz
jecxz
mov
imul
xor
stos
movsb
or
jg
pop
imul
cmp
xchg
movsb
jg
push
mov
fdivs
lcall
xchg
cmp
mov
mov
adc
les
loope,pt
iret
adc
rcrl
or
push
pop
sbb
add
push
add
push
insl
and
jmp
cmp
cmp
ljmp
jb
outsb
cs
movsb
insb
out
insb
cs
mov
add
in
mov
push
xchg
mov
adc
xchg
outsl
dec
loop
xor
idiv
stos
jecxz
movsb
mov
mov
inc
push
add
scas
arpl
in
mov
mov
mov
test
movsl
mov
fsubrs
xchg
push
cmp
cmp
xor
sub
out
aaa
movsb
dec
mov
test
push
or
pushf
sti
imul
out
or
outsb
fisubs
pop
js
js
fnstcw
and
pop
or
xor
inc
adc
addb
xchg
xor
pop
ret
in
out
inc
out
in
mov
mov
push
mov
fbstp
push
push
popl
xor
and
mov
loop
mov
arpl
lods
adc
jnp
sbb
movsb
cli
or
jp
push
movsl
push
jne
andb
or
and
adc
xor
xchg
cmpsl
push
jno
cmp
movsb
jns
sbb
dec
add
mov
sub
addb
fdivrs
nopl
cmp
jp
pop
push
mov
or
mull
xor
daa
push
hlt
imul
or
sub
xchg
ljmp
sub
cli
imul
lods
adc
fcoml
in
and
fnstenv
iret
stos
xchg
jbe
add
ss
cwtl
cmp
stc
sub
and
cmp
or
add
ds
pop
addr16
stc
sub
stos
push
sub
push
call
sbb
adc
xchg
sti
ja
out
adc
dec
repnz
mov
sub
ljmp
mov
push
fldt
ljmp
pop
movl
arpl
clc
mov
cwtl
push
mov
mov
inc
xor
lds
pop
pop
xchg
mov
inc
dec
inc
jb
movsb
sahf
cmpsl
hlt
dec
jg
iret
stc
scas
mov
jg
jmp
or
mov
sub
cmc
push
arpl
sbbb
dec
adcl
dec
adc
or
jns
sbb
push
xor
jns
pop
adcl
pop
adc
loopne
outsb
and
incl
lahf
mov
mov
inc
pusha
out
jbe
movsb
addb
pop
ss
je
lods
daa
imul
rcrl
mov
loopne
cmpb
adc
in
iret
nop
xor
sub
mov
ja
mov
add
xor
gs
cltd
pusha
addl
mov
das
lcall
popf
mov
int3
mov
cmpl
jns
sahf
shrl
adc
pop
fucomi
jo
addr16
jbe
mov
mov
popf
adc
mov
xchg
mov
mov
imul
incl
pop
mov
pop
push
test
iret
fnstenv
enter
cmpsb
cmp
sahf
jmp
ret
lods
insb
fimuls
es
mov
and
sub
hlt
andl
mov
loope
data16
fdivrl
cmp
or
lret
decb
cmpsb
lock
adc
movsb
or
xor
mov
scas
clc
or
mov
sub
ret
lods
cmp
jno
xor
inc
or
mov
hlt
hlt
in
push
push
mov
push
add
hlt
cld
sbb
inc
in
sub
mov
push
cmp
cmp
cmp
sti
mov
jge
pop
pop
and
ss
add
xchg
mov
insb
cs
sub
call
mov
push
xchg
aam
jns
inc
inc
jmp
fcmovnb
lahf
cmp
lods
jb
ret
pusha
pop
imul
int3
fsubrs
pusha
in
xchg
gs
xchg
incb
push
xchg
and
mov
push
pop
sbb
xor
push
movsl
sti
adc
dec
bound
or
pushf
lret
loop
outsb
aam
xor
mov
scas
xchg
mov
mov
cmc
test
pop
mov
adc
push
cs
into
xchg
leave
push
cmp
movsb
lcall
in
shll
sub
fs
lahf
mov
shl
cmp
push
xchg
lea
cmpsl
jmp
repz
sbb
mov
in
aaa
jmp
aas
insl
bound
sub
aas
and
add
sub
or
into
add
int
ret
testb
add
je
fcomi
fidivl
stos
fsub
push
cmpsl
dec
cmp
call
nop
cli
mov
sahf
ret
xor
lods
jae
dec
or
hlt
faddl
outsb
push
lahf
stc
push
pusha
push
push
in
addl
movsb
jo
mov
lcall
push
sub
xor
add
push
inc
mov
xor
inc
arpl
shll
mov
rolb
stos
adc
jmp
fcoml
or
or
popa
or
mov
push
movsb
mov
cmpsl
or
arpl
cmp
dec
roll
out
nop
inc
mov
xchg
lcall
dec
add
into
outsb
hlt
xor
loop
stos
cmp
push
push
mov
sbb
frstor
mov
jbe
out
rep
jno
loope
iret
push
cwtl
icebp
ss
push
int3
inc
add
mov
cmp
add
inc
arpl
xchg
xor
cld
lcall
shr
sbbl
lea
or
mov
pop
push
mov
aad
in
xchg
sbb
mov
push
sub
movsb
adc
shlb
push
fstps
outsl
add
jo
push
enter
mov
movsl
push
subl
imul
aam
psrad
in
out
mov
mov
jge
jecxz
mov
adc
push
mov
hlt
push
dec
sub
stos
adc
lods
mov
mov
sub
idivl
pop
out
cld
sub
dec
adc
jne
cmp
test
popl
pusha
lea
cmp
jns
imul
aam
mov
mov
ret
jbe
mov
gs
notl
pop
lret
out
sbb
movsb
bound
aaa
inc
loope
stos
ljmp
push
fdivp
ret
jge
add
add
addb
in
ja
and
cs
jns
xchg
iret
daa
jmp
loope
cmp
inc
scas
pop
aam
int3
into
sub
pop
stos
xchg
mov
jp
sub
jecxz
outsb
dec
lock
and
pop
sub
cmp
cmpsb
sar
cmpb
leave
je
push
cltd
add
sarb
mov
lahf
add
cli
dec
sbb
pop
dec
xor
mov
pop
mov
pushf
or
jbe
sbb
pop
scas
ja
je
jg
sti
pop
clc
les
adc
cld
pop
addr16
decl
jl
stc
jmp
mov
call
jae
cmp
leave
mov
adc
fcmovne
hlt
or
sub
push
push
mov
lret
js
addl
jne
adc
sahf
out
xor
cmpsb
cmp
mov
repz
loope
mov
mov
or
rclb
cmp
lret
je
jl
xor
loopne,pn
mov
dec
mov
lret
cs
pop
adc
fldt
pop
mov
imul
mov
mov
iret
out
sub
cwtl
add
rorb
jmp
and
movsb
fisttpl
mov
mov
insl
les
and
xchg
mov
cltd
ror
sub
js
dec
dec
pop
int
dec
icebp
movsb
imul
aad
imulb
andb
icebp
inc
sbb
aas
arpl
push
mov
adc
lds
pop
lds
jge
hlt
sub
sub
into
hlt
push
adc
mov
ret
mov
dec
sbb
cmp
sub
std
xor
mov
mov
pop
push
add
mov
lods
or
jle
test
xor
sub
pop
add
mov
xor
push
push
inc
sub
inc
jb
movsl
stos
mov
fcomi
gs
and
add
jbe
inc
push
add
cld
push
mov
push
stos
cmpsb
mov
scas
mov
inc
push
fdivrs
jmp
scas
stos
pop
mov
cmpl
flds
xor
xchg
inc
push
ret
shll
aad
xor
gs
xchg
icebp
sahf
and
cmc
inc
cltd
pop
push
lahf
in
cmp
call
xor
iret
je
cs
test
and
pop
sbb
cli
adc
sbb
clc
stc
jle
cmp
sub
mov
mov
lods
call
sub
out
cmp
insb
xchg
loope
and
lea
out
push
mov
ds
arpl
js
inc
push
mov
movsl
scas
stos
iret
in
mov
dec
mov
adc
fstpt
lods
rclb
mov
xor
movsb
jo
adc
mov
jl
xchg
jbe
mov
ret
sub
pushf
movl
mov
mov
pmaxsw
ss
jno
push
aas
dec
cld
out
cmp
ficoml
fldcw
xor
add
stos
ret
in
jge
bound
xlat
mov
movsb
add
lret
push
xor
cli
dec
movsb
adc
fstp
popf
je
mov
gs
mov
fs
sbb
jle
dec
cmp
sbb
push
stc
xor
mov
pop
sbb
aad
jmp
cmp
mov
ljmp
insl
adc
inc
adc
cmpsb
lcall
or
negb
es
inc
out
sub
mov
mov
adcl
icebp
pusha
ds
mov
ficoml
shll
jb
xor
inc
inc
push
je
rol
aad
nop
sbb
dec
adc
clc
push
dec
subl
cmp
pusha
test
inc
stc
leave
sub
std
out
mov
clc
sarb
test
mov
inc
or
or
cmp
arpl
stc
outsb
mov
js
loopne
pop
insb
dec
scas
xchg
dec
cmc
decb
sbb
movsb
dec
lods
sbb
mov
pop
mov
mov
das
loop
cmp
loope
lret
mov
int3
mov
dec
je
or
shlb
push
jbe
mov
imul
pop
pop
popa
add
out
mov
out
sub
shll
dec
lods
mov
sbb
mov
jae
in
mov
and
mov
cwtl
test
jmp
mov
daa
test
push
aam
fidivl
push
mov
or
lds
xor
cmp
jae
pusha
inc
xchg
inc
mov
int3
pop
adc
ret
in
xor
sbb
out
es
outsb
sub
repz
jnp
and
imul
xor
push
sub
popf
push
xchg
rcll
lds
mov
cmpsl
loope
lods
andb
mov
insl
inc
and
add
call
loopne
mov
scas
dec
in
cmp
inc
add
mov
mov
mov
popa
jne
adc
mov
sub
and
mov
lahf
pop
pop
jle
xchg
mov
ja
pop
mov
mov
push
test
mov
cli
das
sub
cmp
inc
pop
loopne
push
loop
xor
pop
cld
xor
push
dec
cltd
inc
jns
jb
xlat
addl
pop
das
lea
leave
push
das
xor
xchg
test
nop
sub
mov
sub
xor
enter
js
daa
inc
mov
xchg
jp
mov
gs
jo
push
out
mov
cmp
addr16
out
nop
jo
push
mov
sub
xor
mov
mov
push
dec
inc
push
dec
or
rorb
fwait
or
je
sub
adc
mov
ss
into
js
jo
mov
orb
dec
jp
sub
mov
mov
cmp
movsb
xchg
cld
fldt
or
mov
jge
outsb
mov
aad
dec
outsb
lods
jle
mov
add
insl
jl
int3
jns
and
imul
mov
xchg
call
mov
mov
das
subb
aaa
inc
lods
push
adc
inc
jb
gs
mov
push
data16
outsb
mov
push
mov
or
notl
cltd
inc
repz
fsubs
mov
mov
inc
test
stos
adc
inc
pop
mov
sbb
aam
mov
out
movsb
push
sbb
sbbb
loope
cmpsl
xchg
adc
movsb
cld
iret
inc
dec
sbb
sbb
or
cmpxchg
and
jb
dec
jp
fs
les
sbbb
lods
aaa
pop
mov
popf
addr16
fildll
jmp
xor
sarb
ret
ror
jecxz
mov
sub
les
push
sar
std
sub
out
sbb
movsb
pop
call
push
gs
mov
je
jae
cmp
orl
mov
arpl
cmp
mov
jno
aam
cmp
lahf
rcl
scas
popa
jno
add
loope
inc
dec
sti
hlt
shrb
rclb
adc
push
adc
xor
mov
jb
and
std
push
mov
ljmp
das
or
test
repz
dec
lods
rcrl
cwtl
repz
jl
jmp
dec
ret
cmp
sarb
inc
int3
sbb
cs
clc
jo
push
jno
dec
mov
adc
movsb
xchg
cmp
sub
cs
inc
push
outsb
pop
enter
movsb
orb
or
in
sub
push
popf
and
jnp
cld
hlt
insl
xchg
bnd
dec
mov
push
xchg
dec
lds
dec
adc
pushf
mov
sti
movsb
push
insl
pop
sti
mov
sub
xchg
cmp
iret
push
and
in
nop
out
jmp
cmpsb
jge
cld
and
adc
mov
mov
or
or
test
inc
aaa
ficoms
into
pop
add
jno
je
sub
mov
sub
pushf
cs
sti
stos
mov
cs
and
add
push
xchg
lret
aam
adc
arpl
lock
cmp
arpl
push
mov
out
jb
xor
loope
adc
lods
in
push
outsb
loop
out
or
mov
dec
insb
scas
mov
pslld
and
push
inc
shlb
push
or
ss
lods
mov
mov
addb
jnp
lock
or
jp
pop
lcall
fisubrl
push
inc
and
lods
cwtl
idivb
sub
sub
add
fmuls
hlt
stc
push
idivl
arpl
sub
jge
mov
std
jl
movsb
cmpsb
fimull
sub
push
int3
mov
faddl
push
mov
popf
int
sti
pusha
movsb
xchg
test
jae
push
jge
sub
sub
push
testb
call
scas
stos
ds
or
test
push
ret
mov
or
xchg
push
mov
or
mov
lods
movsb
mov
divl
adc
push
jne
or
fadds
and
sub
mov
movsb
psubq
repz
cmpsl
imul
addr16
inc
mov
sub
repnz
xchg
pusha
test
sub
das
adc
inc
jl
inc
adc
xor
test
aam
cltd
xor
sub
add
dec
pop
add
test
jne
into
subl
xchg
out
mov
jge
les
insb
mov
aaa
push
and
aaa
cwtl
lods
pop
mov
popf
loope
aaa
in
add
stos
jnp
das
shrb
dec
jb
adc
push
into
cmp
lods
bswap
divl
cmc
out
mov
into
out
jmp
mov
call
sbb
cmp
js
popa
mov
push
cmp
subb
out
pop
dec
xor
dec
jl
adc
test
jno
es
mov
scas
jo
aad
bound
and
and
inc
lea
test
xor
loop
loope
orb
les
ret
icebp
flds
jmp
aaa
pop
mov
nop
fcoml
flds
fisubrl
inc
imul
mov
jg
ljmp
out
sub
popf
and
fidivrl
push
cmc
xor
pop
jge
pop
cmpsb
jne
shlb
mov
cmpsb
adc
or
cmp
cmpsl
sbb
lods
das
push
ljmp
ret
push
movsb
movsl
mov
push
ret
fwait
xor
pusha
xor
mov
movsl
fs
or
call
or
cmp
and
sbb
jo
ret
aad
add
inc
mov
pushf
mov
lea
push
cmp
push
aaa
add
es
cli
test
sub
jmp
mov
push
dec
adc
dec
adc
and
sbb
aad
rorl
stos
mov
push
mov
mov
pop
lds
lock
push
fsubl
pop
mov
jmp
pusha
pmulhw
sub
dec
popa
dec
xchg
jne
sub
mov
jg
les
lods
xchg
mov
cmp
subb
push
sbb
pusha
movsb
push
je
add
pop
xchg
fbstp
rolb
push
insb
fistpl
jp
icebp
xor
fdivrp
push
stos
mov
icebp
cld
mov
sbbb
jno
jns
mov
inc
call
rcrb
cmpsb
lods
adc
in
mov
fnstenv
fs
rcl
add
mov
fistl
mov
lods
mov
aad
imul
nop
and
lock
imul
cmp
cs
sar
cwtl
pop
mov
mov
lret
popf
jns
jl
push
ret
cmpsb
xor
push
sahf
sub
cmp
ss
ficoml
adc
xor
in
aaa
pop
enter
xor
mov
inc
hlt
sarb
ds
mov
popa
and
fimull
mov
inc
aaa
and
mov
inc
into
mov
adc
in
shll
andl
popa
mov
ja
jmp
xchg
aaa
push
adc
pushl
xchg
inc
jmp
add
mov
cmpsl
xchg
adc
in
pop
add
jae
sbb
mov
xchg
fwait
bound
xchg
rcrl
popa
add
pop
xor
repnz
cltd
push
imul
repz
stos
in
lahf
mov
jle
popf
adc
hlt
arpl
push
insl
adc
lahf
mov
bound
cmc
fnstenv
mov
pop
push
sbb
mov
and
jmp
pop
push
dec
dec
orl
xor
sarb
movsb
rcrb
test
sub
add
xor
pop
jns
lods
mov
jmp
xchg
insl
sbb
rclb
insb
jnp
xchg
bound
aam
xor
xchg
adc
xchg
shlb
xchg
inc
xor
pop
inc
sub
jo
cwtl
push
test
enter
fimull
out
and
sbb
movsl
cli
pusha
push
outsb
loopne
je
xlat
into
add
jmp
and
xchg
loop
icebp
mov
arpl
mov
cltd
sub
mov
dec
mov
shll
sbb
mov
jmp
movsb
jno
les
cmp
sahf
rcll
das
gs
fmuls
fldenv
push
lcall
xlat
ljmp
xchg
je
cmp
pop
mov
jnp
orb
add
lock
cs
outsl
daa
and
lods
leave
push
clc
repz
mov
fbld
addr16
dec
mov
push
jb
xchg
scas
aaa
xor
stc
sbb
xchg
iret
lock
lods
mov
inc
pop
imul
fisttpll
pop
sbb
mov
dec
lods
mov
mov
sub
data16
sub
scas
sub
clc
stos
lds
pop
jae
pop
lret
jg
jns
jne
push
mov
adc
and
lahf
shrl
xor
in
sub
loope
rcll
cmp
cmp
xor
xchg
mov
ret
mov
cmp
fsubr
call
inc
sub
repz
xchg
xchg
push
shl
mov
xchg
lods
cld
test
jns
add
insb
jbe
mov
aad
in
pop
arpl
fcomi
push
dec
cmpsl
std
jbe
xchg
hlt
jae
movsb
jbe
and
cmp
jne
imul
mov
jno
fmuls
ret
movsb
dec
int3
xor
xor
mov
pop
dec
call
sub
xchg
stos
lods
jbe
mov
fisubrs
push
jo
ficomps
stos
mov
pop
inc
cltd
lea
mov
ljmp
sbb
mov
inc
mov
ss
aam
or
fldt
jle
dec
fiaddl
jb
daa
pop
das
jno
sbb
out
ret
and
mov
scas
loope
pop
inc
sbb
push
mov
int3
leave
in
sub
jmp
dec
ret
rolb
jae
cmp
insb
push
dec
fmuls
out
xchg
lock
dec
push
adc
inc
cmc
push
sbb
fiadds
ljmp
push
das
add
cmpsl
sub
mov
insl
call
lods
fldt
ret
adc
jnp
and
negb
and
xchg
lods
not
sub
sub
int3
fnsave
adc
add
ds
aad
dec
fists
out
je
jp
subb
xor
push
mov
adc
cmp
das
fldt
movsb
lss
jo
sbb
loope
cmp
bound
cmp
xor
mov
pusha
mov
out
insl
sbb
dec
mov
adc
mov
sbb
imul
xor
sahf
mov
ret
push
push
test
bnd
sub
loope
ret
mov
fdivs
jb
mov
iret
lds
adc
das
inc
dec
stos
xchg
push
popa
dec
cmc
mov
and
push
lods
push
outsb
push
jle
outsb
rolb
unpcklps
movsb
mov
pop
and
mov
lcall
and
shlb
xchg
lods
je
add
movsl
aaa
sub
movsb
pop
cli
sahf
repz
shll
mov
popa
push
pop
or
mov
push
and
in
cs
or
mov
mov
push
loop
in
test
loopne
pop
jmp
add
xor
sbb
loopne
jl
xchg
dec
dec
leave
xor
outsb
lods
leave
dec
icebp
jg
ret
push
in
push
dec
add
push
cmpsb
jge
movsb
adc
xchg
xchg
mov
jno
cmp
xlat
inc
fdivs
pop
push
xlat
xchg
mov
cs
mov
ljmp
imul
push
clc
std
mov
testb
stc
fs
gs
push
jmp
inc
cmp
cs
pushf
sbb
add
xchg
mov
jb
push
js
push
inc
xor
repnz
push
push
cmp
loope
enter
push
repz
idivb
addr16
jb
inc
push
sub
cmp
or
inc
adc
adc
fsts
lock
push
lret
xchg
lds
ss
add
mov
mov
stos
repz
pop
adc
pop
sbb
int
rep
mov
jb
or
scas
iret
sub
ret
inc
sbb
inc
adcl
imul
fsubl
mov
lds
leave
outsl
leave
sbb
inc
jb
out
lods
sub
dec
mov
xor
mov
jb
out
fdivrl
sub
push
mov
sti
dec
sahf
orps
popa
adc
mov
shll
mov
mov
lods
mov
mov
int3
sbb
mov
pop
aaa
cli
jbe
push
mov
into
inc
dec
popf
mov
fsubl
imul
sbb
pop
ret
mov
movsb
mov
inc
fistpl
enter
fcmove
or
mov
repz
enter
iret
stos
or
pop
fwait
lret
xchg
or
lods
test
xor
ljmp
hlt
inc
push
lcall
sub
inc
pop
lods
and
lods
sbb
or
mov
sub
lods
mov
ja
sti
enter
scas
add
dec
das
adc
nop
jne
mov
hlt
inc
insb
scas
sub
into
testl
ss
sub
sub
or
loopne
push
popa
xchg
sti
sub
fldcw
sub
fisubrs
inc
in
mov
lea
lret
fdivs
out
sbb
jb
and
sbb
clc
mov
mov
xor
popa
nop
mov
rorb
jne
pusha
gs
sbb
out
adc
cmp
or
or
mov
aas
push
sub
aam
push
test
adc
push
lods
rclb
fidivl
push
xchg
sub
icebp
mov
push
cmp
jns
sub
call
sub
pop
cld
int3
insb
push
jbe
xor
iret
push
js
adc
rolb
jno
mov
ret
arpl
and
add
and
pop
push
xor
push
mov
iret
loopw
sub
dec
scas
mov
mov
repz
mov
cld
and
rcrb
int3
mov
mov
push
dec
decl
pop
sub
inc
mov
mov
int3
xor
filds
mov
movsb
pusha
mov
cs
iret
leave
scas
test
push
pushf
jge
lret
mov
mov
pop
shl
test
lock
or
mov
stos
xchg
sahf
fcmovnbe
fldenv
cmc
mov
test
fiadds
add
mov
fsubs
and
adc
pusha
pop
mov
mov
shlb
xorb
lods
roll
pop
fdivl
mov
mov
cld
movsb
stos
mov
lcall
push
cmp
lds
enter
jg
mov
int
ss
xor
arpl
repz
movsb
icebp
out
mov
divb
dec
fiadds
scas
pusha
into
dec
loop
mov
das
mov
loopne
repz
sbb
cmp
push
dec
sbb
fmull
add
inc
enter
dec
mov
mov
pop
push
popa
mov
xor
mov
adc
mov
ds
inc
or
xchg
loope
test
sahf
xlat
jb
popf
sub
mov
iret
rol
aad
dec
bound
rclb
inc
icebp
xor
xchg
inc
repnz
inc
idivl
mov
mov
sub
dec
mov
push
addr16
popf
or
aad
push
pop
scas
shlb
das
in
lods
les
loope
inc
jne
push
cwtl
jge
add
mov
ds
cltd
mov
xchg
nop
jge
mov
sub
push
cli
movsb
dec
lds
or
insb
add
cmp
mov
stos
adc
sub
mov
repnz
dec
mov
sbb
mov
mov
iret
jg
icebp
xor
mov
pushf
xor
sub
xor
and
iret
inc
add
xorb
jns
movsb
test
xor
push
add
mov
or
negw
xor
or
cmp
pusha
lods
adc
cmp
je
cmpsb
pop
gs
lock
or
and
out
aam
dec
hlt
insl
movsb
mov
mov
mov
pusha
add
xor
xchg
cltd
xchg
dec
mov
mull
mov
dec
push
nop
mov
int
jns
mov
xor
repnz
mov
push
push
das
sbb
mov
into
mov
sbb
mov
mov
or
enter
pop
insb
xor
stos
fsubrp
in
push
push
in
and
cwtl
adc
and
or
call
inc
jbe
xor
aam
xor
push
dec
fsubl
int3
dec
inc
idivb
int3
fwait
sub
mov
or
shlb
test
add
mov
mov
iret
out
test
ljmp
out
adcl
idiv
cmp
and
shll
hlt
mov
jb
pop
and
movl
or
mov
jno
movsb
icebp
iret
rol
lcall
sub
shr
gs
stos
test
js
mov
test
aam
fimull
sub
rep
cmp
sahf
cmp
popa
push
mov
test
pop
or
enter
hlt
bound
jl
mov
cmp
jne
lret
aaa
pop
xchg
mov
mov
ja
aad
adc
int3
fdivp
insl
movsb
adc
jne
mov
mov
out
fs
sub
mov
dec
dec
stos
jecxz
movsb
inc
jge
add
insb
pop
mov
dec
cmp
mov
gs
push
inc
sbb
das
lock
aam
mov
push
push
data16
dec
dec
mov
mov
stos
mov
test
cli
cmp
sbb
and
lods
arpl
call
pop
rorl
push
cmp
cli
aad
fcoms
lds
es
jbe
pop
ret
mov
cmp
scas
pop
mov
jb
mov
jge
clc
cs
mov
call
xchg
fbld
out
sbb
sbb
idiv
or
dec
sub
jns
and
push
jb
push
xor
js
mov
mov
clc
jbe
out
sarl
int
jecxz
movsb
test
xor
mov
inc
inc
xor
mov
dec
xchg
lds
sti
hlt
hlt
xchg
cmpsl
inc
fidivrs
pusha
xchg
adc
mull
cmp
mov
pop
jbe
mov
addb
pop
insb
js
pusha
mov
insb
push
sub
inc
xor
cmp
sub
xchg
sub
xchg
call
push
pop
shrl
and
jb
xor
sbb
add
lcall
je
push
add
xchg
or
cmpsb
jno
push
mov
pop
lods
and
adc
leave
and
shrb
icebp
testb
mov
jnp
jg
daa
sub
cmc
shlb
jmp
inc
and
jecxz
push
out
bound
mov
dec
cmp
lcall
inc
mov
jl
mov
repnz
clc
pop
mov
jae
push
sub
push
call
pop
push
xchg
outsb
movsb
push
mov
pcmpgtw
jbe
dec
mov
xchg
mov
lcall
sbb
mov
dec
jne
inc
sub
push
pop
and
push
fcomps
sub
addr16
add
add
rorb
ljmp
inc
mov
mov
sbb
fiaddl
xor
sub
mov
cs
clc
jno
imul
add
in
sub
incb
mov
shll
adc
clc
cmp
add
scas
push
sub
mov
push
iret
es
mov
or
pop
insl
fsubrs
sub
lods
movsl
push
sub
adc
push
add
inc
movsb
cmp
sub
add
iret
mov
lods
push
lcall
jl
scas
add
add
inc
inc
xor
and
inc
mov
mov
adc
scas
sub
cmpsl
in
int3
psubsb
cmp
sub
lock
mov
dec
inc
scas
inc
stc
push
scas
adc
sub
pop
les
xor
push
adc
dec
mov
orl
movsb
cld
mov
popf
stc
cmpsl
jb
mov
repnz
arpl
popf
xor
insb
mov
rol
jg
cmp
pop
fdivl
mov
pop
gs
sbb
not
xchg
mov
xchg
jns
pop
xchg
in
jecxz
movsl
subl
lahf
inc
syscall
mov
sub
outsl
rorb
add
fdivl
andb
lret
xchg
scas
xchg
movsl
and
mov
inc
shlb
sbb
sub
test
sarb
mov
sbb
sub
fmull
mov
movsb
push
jg
inc
sahf
and
outsl
push
add
adc
push
xor
lcall
ljmp
insb
pop
orb
fcoms
xor
cld
mov
push
cmp
xor
cmpsl
sbbl
add
insb
in
inc
test
xor
push
sbbb
mov
xchg
add
sub
mov
lds
lret
push
xor
sub
dec
negl
lds
mov
sti
add
cmp
imul
popa
mov
lahf
loop
enter
rorl
fptan
mov
jbe
jne
clc
dec
iret
ds
dec
inc
gs
inc
dec
into
aam
sbb
mov
pop
inc
outsl
ds
scas
mov
mov
ret
repz
fs
aam
sub
push
xrelease
cmpsl
lahf
push
or
and
push
mov
jns
fldt
std
test
imull
stos
xchg
add
and
data16
lds
stos
movsb
repz
test
sbb
sbb
jne
xor
mov
ss
or
mov
dec
movsb
mov
stos
imul
lea
cmc
mov
fdivrp
insl
xchg
jge
scas
cli
push
sbb
add
sub
mov
push
lods
mov
xchg
andnps
pusha
mov
inc
push
push
push
outsb
cmp
les
cmp
negl
or
std
adc
jnp
shrl
dec
mov
jae
out
shlb
fmul
add
decl
inc
mov
cld
xor
test
dec
loope
mov
xchg
roll
call
xor
repnz
fnsave
pusha
shlb
in
or
lds
loopne
stc
inc
push
inc
and
ljmp
fwait
or
sbb
inc
das
adc
xor
insb
or
mov
js
popf
push
or
enter
sub
int3
jge
jp
or
and
imull
dec
js,pt
loop
pop
xchg
cs
push
mov
popa
outsl
repnz
pushf
in
xchg
dec
movsb
and
loop
lods
and
mov
or
sub
ret
mov
xor
into
jae
pop
sbb
push
cs
mov
xchg
shll
fdivrl
leave
lret
rcll
xchg
pop
loop
aaa
je
xorb
in
push
movsl
push
movsb
pop
sub
add
xor
push
add
loope
hlt
ficoms
ljmp
cmp
inc
ss
loope
cmp
mov
fucomi
jbe
add
in
add
into
mov
mov
gs
pop
mov
push
jae
arpl
adc
or
sub
divl
pop
sti
mov
push
enter
rclb
in
shrl
add
es
sar
cli
push
pop
adc
sarb
jns
jne
xor
xor
xor
out
pop
jns
addl
dec
inc
dec
xchg
sbb
mov
pop
neg
mov
lcall
imul
pop
fbld
popa
loope
mov
mov
sahf
push
pop
int
rorl
jg
lods
jp
fdivl
and
cmp
push
shrb
in
nop
sub
call
add
lret
mov
mov
pop
stos
jb
lds
mov
int3
add
xchg
loope
fimull
lods
adc
stos
and
scas
or
jecxz
pop
mov
push
lea
or
push
test
inc
sub
and
push
or
push
loopne
fadds
sbb
mov
shlb
jns
push
cmp
or
pop
je
sbb
bound
pop
movl
sti
xchg
shlb
mov
stc
mov
loopne
lret
push
xor
aaa
test
repz
and
push
jbe
inc
adc
test
adc
push
dec
popa
jns
lcall
lods
mov
das
xchg
loop
sbb
arpl
inc
test
or
push
fisubrs
push
sbb
fidivl
jno
jne
stos
inc
adc
mov
div
fs
cmc
aad
jno
xchg
jno
push
adc
cs
sbb
cmp
sub
mov
aaa
push
cmp
lds
dec
imul
jb
mov
adc
mov
inc
aas
mov
xlat
fldt
ds
cmpsb
mov
das
ret
mov
mul
pop
mov
movsb
sub
clc
pop
test
loopne
dec
or
jno
pop
out
arpl
loop
bound
ss
adc
mov
mov
pushf
aad
jbe
stos
repnz
clc
data16
stos
scas
shrd
int
add
or
leave
mov
ret
jno
mov
xchg
sbb
mov
jnp
sub
jge
stos
mov
ss
xchg
and
fdivs
aam
mov
dec
lea
mov
add
mov
push
out
lods
rcl
popf
pop
sbb
push
cmpsb
or
aas
outsl
xchg
push
jbe
mov
dec
add
aam
add
ja
rol
imul
xchg
mov
rcl
lret
insl
ljmp
cmc
jmp
iret
mov
jmp
imull
dec
lods
mov
mov
jb
jg
hlt
mov
insb
mov
xor
addr16
mov
ss
addl
ja
mov
xlat
push
nop
jb
les
cli
jmp
enter
xor
mov
adc
out
pop
jno
jae
stos
rep
cmp
insb
xorl
fidivrs
pop
pusha
shrl
jae
lods
les
add
xor
pop
cmc
outsl
dec
mov
fildll
sbb
xchg
insl
push
mov
lods
std
push
inc
cmpsb
jno
les
dec
lret
jmp
ljmp
rolb
or
aas
jg
stos
and
and
rolb
cmp
test
mov
es
inc
dec
adc
clc
push
mov
lods
mov
movsb
pop
lock
fmull
repnz
sahf
push
insl
lods
dec
mov
mov
je
int
js
jecxz
shlb
or
bound
adc
jne
sbb
cld
in
mov
movsl
inc
lock
sub
and
ja
insb
call
out
xchg
arpl
push
sub
sbb
push
mov
pop
aaa
sub
hlt
dec
fsubl
pushf
icebp
xchg
cmc
popl
push
fsubr
lods
inc
jns
dec
mov
inc
mov
lcall
add
sub
sbb
sbb
adc
mov
jno
push
movsb
sbb
hlt
daa
or
stos
aaa
xor
clc
xlat
scas
adc
movsb
cmp
pop
sbb
jg
push
push
icebp
xor
fsubl
rcr
inc
sub
mov
cmp
mov
loope
imul
hlt
addr16
nop
lss
add
incl
push
push
xlat
pop
ret
mov
mov
push
enter
loop
fdivrl
add
ds
pop
inc
roll
in
sub
mov
nop
pop
xor
movsb
inc
pop
add
jae
jp
ds
pusha
or
sbb
mov
jge
pop
xor
or
push
add
xor
fsubrs
lods
or
push
mov
mov
sub
loopne
cmp
sti
aaa
pop
les
and
mov
lods
dec
pop
aam
movsb
das
frstor
mov
cwtl
xor
orb
in
vmovaps
and
jmp
iret
dec
sbb
xchg
call
adcb
jb
xor
imul
jge
pop
push
lcall
inc
cmp
daa
or
jno
sub
xchg
mov
xchg
pusha
sbb
jge
cmp
pop
push
or
xchg
pusha
cmp
xchg
gs
int
scas
arpl
bound
xor
pusha
add
or
out
sahf
lea
cmp
adc
ficomps
lock
bound
or
jo
adc
lock
sub
push
sub
notb
sahf
inc
loope
out
push
insb
or
sub
mov
sbb
xchg
push
push
pop
push
test
es
pop
lock
lcall
or
xor
dec
adc
clc
loop
fldt
mov
es
cmp
mov
scas
jbe
push
or
sub
rorl
jbe
or
sahf
addr16
lods
out
pop
pusha
xor
cld
push
mov
or
arpl
add
jae
push
repz
mov
jmp
sub
arpl
inc
or
mov
cli
add
mov
out
mov
cltd
pop
es
sub
enter
jns
nop
aaa
pop
mov
sbb
shll
mov
sub
fsubrs
cli
inc
mov
adc
jecxz
pop
cmp
xor
jmp
icebp
arpl
movsb
mov
icebp
stc
cmp
dec
scas
scas
sbb
mov
sahf
arpl
insb
mov
lods
scas
cmpsb
rolb
push
enter
or
andl
out
cltd
test
sbb
pop
ja
and
test
scas
lods
in
mov
stc
or
rolb
sbb
dec
adc
adc
nop
orl
cmp
orl
clc
ret
sbb
sub
mov
repnz
test
sub
lea
pop
dec
mov
adc
mov
xchg
inc
and
sti
ljmp
and
int3
fucomi
adc
jb
mov
push
movsb
mov
aad
out
stos
fildll
add
imul
lds
add
cmp
popa
hlt
mov
movsb
int3
ja
icebp
cmp
sub
pop
sarl
shll
and
xchg
lcall
mov
mov
xchg
push
push
mov
add
mov
mov
jns
mov
xor
or
loope
cmp
scas
xrelease
loope
add
jns
shrb
inc
cld
mull
or
scas
push
sbb
out
or
mov
lods
jecxz
insb
mov
jb
cmpsl
or
ds
in
shll
sub
lods
pushf
push
adc
outsb
aaa
sbb
cmp
cmc
js
aaa
icebp
outsb
sahf
inc
aaa
lods
popf
cmp
lret
and
sub
jle
jae
repz
stos
cmp
daa
sbb
lods
imull
test
pop
sbb
jno
outsl
icebp
dec
lods
jp
mov
repz
call
je
jns
xchg
arpl
cmpsb
mov
arpl
fcoms
out
pop
push
dec
jbe
mov
ljmp
lea
lods
push
out
jnp
jp
xchg
cmpl
loope
fsts
gs
lret
mov
pushf
jl
sub
add
pop
xchg
push
addr16
and
add
mov
fidivrl
pop
xchg
cmp
jmp
dec
xor
dec
outsb
test
stos
inc
push
cli
repz
mov
lret
jmp
lods
ret
js
lahf
and
test
lods
or
mov
loope
in
das
mov
pushl
add
sti
mov
shlb
sub
xchg
jl
ret
test
mov
xchg
cmpsb
mov
and
std
add
lds
ret
xchg
out
xchg
pusha
and
rcrb
mov
sub
cmp
dec
sbb
pusha
popf
into
lods
jb
cmpsb
mov
sbb
dec
xchg
stc
stc
jg
lods
or
adcl
mov
push
mov
ret
xchg
xor
mov
mov
sbb
arpl
jge
test
mov
das
jno
cmp
int
jne
bound
xor
hlt
clc
or
outsl
mov
add
lea
pop
rcll
push
adc
leave
aaa
iret
addr16
jns
push
aad
jmp
jle
mov
jge
dec
subb
rolb
or
imul
insb
cmp
mov
arpl
dec
add
mov
shll
shl
or
loope
push
xor
fwait
outsl
and
fiaddl
mov
push
adc
popf
bound
push
xor
mov
js
sub
and
test
stos
mov
jb
cmp
out
aam
pop
sub
je
cs
lods
xchg
mov
mov
pop
sbb
jb
mov
jo
lds
fstps
popl
cltd
xor
and
ljmp
movb
sub
shlb
daa
fwait
cli
add
xchg
sbb
dec
shrb
cmp
nop
mov
inc
add
sti
sub
outsl
mov
arpl
imul
mov
push
sbb
jne
mov
sub
daa
movsb
or
sbb
cltd
pop
fdivrs
lods
stc
push
aad
pusha
lret
imul
aas
icebp
decb
sub
or
aaa
dec
scas
pop
xchg
sub
cld
dec
std
cld
scas
fsub
adc
lcall
jp
xchg
cs
cmp
loop
push
mov
mov
das
mov
jge
mov
and
xchg
xor
movsb
dec
sti
push
adc
cmc
add
lea
scas
out
push
stos
pop
xlat
stos
arpl
jbe
filds
xor
mov
lret
fistps
pop
dec
movsb
enter
pop
cld
mov
dec
popa
aad
clc
mov
cmpsb
sub
mov
mov
das
lods
dec
cmpsb
xlat
jmp
or
cmp
movsb
out
pop
mov
xchg
and
paddsw
adc
xchg
outsb
mov
lods
jo
mov
mov
das
inc
cmp
fildl
icebp
push
pop
push
xlat
pop
sbb
sub
lods
ret
fmull
jae
fstps
push
jnp
mov
gs
cmp
or
push
mov
insl
cvtps2pi
cmp
jbe
sarl
subl
sarl
xchg
mov
lds
cmc
sbb
add
imul
cmc
xchg
sbb
push
jp
mov
and
pushf
jmp
jb
fistl
inc
rcl
jp
and
popa
jge
cmp
jae
movsb
inc
imul
ljmp
push
push
jo
add
stc
lret
es
cld
mov
pop
inc
sbb
adc
mov
aas
mov
cs
shll
add
stos
cmpsl
pop
aaa
lea
adc
pop
shl
fs
out
pop
pusha
or
aaa
dec
out
sbb
and
enter
scas
call
xor
call
orl
dec
in
popf
call
mov
sbb
and
fisubs
arpl
shrl
jmp
xchg
sbb
gs
push
or
add
test
sub
jmp
mov
mov
insl
cmp
rolb
push
lods
in
shlb
push
push
or
ja
mov
cwtl
mov
pop
stos
insb
xchg
jmp
aam
lds
xchg
jno
popa
mov
pop
cld
push
aas
push
movsb
xchg
mov
and
jno
or
add
jae
xchg
cmpb
push
pop
sub
enter
js
sbb
xor
and
inc
xor
hlt
pop
inc
scas
aam
push
enter
mov
dec
das
add
es
fdivrp
rep
mov
lock
mov
inc
and
or
sarl
movsl
cmp
dec
jecxz
pop
and
inc
out
fucomip
inc
andb
incb
je
mov
xchg
dec
xchg
ljmp
push
inc
lds
pop
lods
lds
and
dec
nop
xchg
jp
loopne
lcall
mov
leave
xchg
cmpsl
xchg
mov
and
pop
in
shlb
mov
in
repnz
lods
push
xlat
pop
cmpsb
mov
arpl
push
lock
insl
or
mov
test
pop
stos
aad
aas
jae
test
clc
movsb
cmc
imul
rcll
stos
and
loope
or
in
adc
cmp
int
push
mov
inc
loopne
cmp
push
stos
adc
call
xor
jb
stos
xor
pop
mov
es
fadd
sbb
sub
dec
cmc
add
sub
ja
clc
lock
enter
xor
dec
push
sub
push
sbb
cmpl
xlat
or
or
andl
movsb
or
ljmp
scas
cli
not
js
xchg
jp
popa
cmp
das
aam
pusha
pop
adc
incb
movsb
jne
sbb
push
cmp
jo
push
aaa
orb
add
pop
fadd
fstpt
cmc
cmpsl
sub
cmpsl
lods
pop
out
inc
js
or
jb
xchg
std
push
fnstenv
andl
mov
push
adc
dec
and
in
cmp
sbb
cs
in
jbe
push
and
cmp
mull
xchg
addr16
jp
jnp
jecxz
movsb
lret
jl
rcrb
fadds
jb
mov
push
mov
jae
xchg
jecxz
dec
data16
in
outsl
xchg
test
inc
mov
adc
adc
pusha
and
arpl
mov
icebp
mov
test
test
and
cld
rcrb
out
jp
movsb
shrb
pop
pushf
testb
movsb
sbb
loop
fsts
adc
adcb
sbb
mov
lds
jg
pop
add
add
push
lods
xchg
xchg
push
ljmp
inc
mov
xchg
scas
sbb
add
mov
sub
fwait
xchg
push
add
rcl
jbe
sbb
mov
mov
sub
mov
stc
inc
cmpsb
jb
cmp
stos
inc
inc
or
jnp
jns
movsb
incl
in
adc
mov
and
mov
stos
and
pop
inc
pop
popl
xor
shlb
xchg
aad
gs
sub
xor
sahf
push
mov
incb
mov
and
icebp
cmp
aam
mov
mov
in
out
xor
mov
enter
loope
xchg
imul
sub
xchg
out
mov
rorb
cs
mov
ja
sahf
xchg
dec
sub
cmp
or
scas
jae
mov
sub
ret
xor
ror
push
sbb
cmp
push
cltd
mov
mov
add
cs
xor
add
mov
push
sbb
pop
adc
cmp
mov
adc
mov
cmpsl
insl
jae
cmc
out
and
mov
nop
mov
jns
arpl
mov
push
jp
mov
mov
ljmp
jge
scas
jb
push
cmpl
inc
rcrb
sbb
sub
fisttps
inc
mov
loope
xchg
cmp
in
xor
lods
sub
sub
jnp
push
ret
or
adc
sbb
sarb
imul
daa
lcall
sub
jae
outsb
pop
fwait
xor
add
push
jnp
mov
sbb
scas
jle
cmpsb
mov
insl
sbb
icebp
inc
jmp
push
std
repz
pop
inc
inc
es
es
cmpsb
adc
push
xor
mov
in
and
mov
mov
push
cmp
and
cmp
sub
adc
shrb
and
dec
dec
cmp
lcall
xor
int
mov
gs
pusha
pop
sub
in
hlt
aas
or
test
mov
lods
shr
sbb
and
mov
subb
scas
movsb
mov
lea
ja
jo
xchg
xlat
leave
mov
fsubs
and
mov
mov
divb
xchg
ja
or
mov
or
cmpsb
gs
cmpsl
xor
lcall
jo
les
adc
fistl
mov
sub
js
xchg
iret
aas
push
or
xor
jo
lods
and
pop
jecxz
repz
ret
jmp
stos
dec
adc
mov
sarb
sub
dec
mov
mov
es
shl
xchg
mov
pop
ret
mov
mov
stos
ficompl
fwait
and
push
sbb
pop
xchg
insb
and
lock
pop
jns
cmp
sub
cltd
push
pop
adc
daa
xor
add
mov
sub
cltd
fisubl
push
mov
jb
inc
aam
lahf
pop
cmpsl
push
and
imul
mov
and
jns
lahf
daa
lods
mov
loopne
gs
sbb
leave
jge
push
adc
nop
sarl
dec
fcmovb
mov
call
mov
xor
lret
mov
inc
ret
stos
inc
sub
cmpl
xchg
enter
hlt
sbb
and
mov
push
or
push
stos
mov
jo
sub
jbe
mov
ja
xor
cs
mov
adc
mov
sbb
je
js
outsb
xor
dec
add
mov
jne
jnp
ja
cmpsl
andb
cld
inc
or
in
mov
add
out
mov
stos
jo
aaa
stc
subl
jp
repnz
sub
fcomip
int3
gs
mov
fsave
fwait
cmpsb
push
ficoml
shld
popf
mulb
lods
jb
rcll
add
jb
and
dec
push
xchg
xchg
mov
cmpsb
adc
mov
xor
test
push
mov
pop
out
push
jo
sbb
inc
mull
loope
xor
mov
jnp
and
pusha
push
dec
stos
out
jge
ja
inc
fnstsw
mov
xlat
xor
or
loopne
pop
push
fs
add
push
and
inc
xchg
dec
jae
add
lods
add
nop
mov
clc
repnz
les
icebp
push
jp
jle
out
jo
aad
loop
add
movsb
pusha
fs
ljmp
inc
arpl
add
fcomi
pop
sub
lods
test
lods
push
add
dec
loop
gs
xor
pop
xor
pusha
repnz
and
inc
jb
ficoml
shlb
adc
jno
repz
jmp
add
pop
rcr
xor
inc
clc
jae
adc
jp
outsl
cmp
add
push
pop
jo
jb
stos
dec
sub
ret
jno
sub
lods
in
sbbb
push
mov
enter
xchg
mov
sbb
popf
and
and
push
es
jp
add
and
fcoml
xor
push
in
bound
adc
lods
and
out
pop
add
inc
pushf
ficompl
data16
stos
loop
dec
es
jnp
dec
cmp
or
add
sub
mov
daa
push
pop
dec
xor
push
daa
push
push
xlat
ljmp
push
push
jecxz
aam
mov
mov
stos
adc
lods
mov
in
jno
loope
jmp
adc
mov
fidivs
mov
scas
sti
aad
dec
testl
jmp
cli
pushf
mov
xor
iret
mov
add
shl
or
and
fmull
xchg
lea
cltd
ret
clc
mov
mov
mov
push
cmp
pop
cmpsl
roll
lea
into
jnp
pop
movsb
in
inc
adc
cmpsb
push
je
or
loope
jl
xchg
in
hlt
lahf
insl
jp
stc
nop
aad
loope
pop
int
out
lret
movsb
lock
out
mov
stos
es
rcrl
sub
mov
lea
sub
out
pusha
les
addr16
mov
sahf
jno
dec
pop
and
jb
push
mov
scas
sub
popa
xchg
mov
pop
xchg
push
std
pop
ja
scas
sub
mov
sarl
jg
sahf
int
push
dec
and
mov
es
movsb
scas
ljmp
xor
ja
out
xchg
xlat
lods
xor
mov
mov
shll
inc
pushf
sbb
in
push
cli
mov
ss
xchg
xor
shr
mov
fiaddl
sub
arpl
and
hlt
jb
or
lcall
fwait
scas
push
movsb
dec
jns
mov
sbb
mov
cmp
out
ja
xor
add
hlt
test
dec
xchg
pop
mov
pop
insl
orb
mov
rorb
pop
cs
mov
cmpps
test
jb
bound
leave
mov
pop
xchg
mov
dec
test
cld
and
out
aaa
es
pop
adc
xor
jp
ret
cli
scas
in
mov
lea
test
popa
shrb
stc
dec
cmp
xorb
mov
cs
mov
push
aam
icebp
pop
adc
add
repnz
lods
and
setp
daa
cld
or
add
and
rclb
push
or
outsb
rclb
push
push
mov
mov
ror
dec
repz
les
mov
int3
loope
jo
mov
iret
or
or
pop
inc
push
adc
hlt
pop
xor
push
inc
lods
and
xchg
add
pop
mov
sti
movsl
mov
mov
xchg
ja
cmc
inc
es
pop
icebp
mov
mov
mov
jno
xchg
mov
movsb
cmp
mov
xchg
aaa
adc
jae
dec
mov
jge
xchg
lods
pop
repz
adc
mov
push
ds
aad
test
push
sbb
call
ss
or
int3
ds
sbb
scas
cmp
push
push
scas
mov
pop
cltd
mov
cli
in
mov
inc
shl
add
in
push
mov
inc
adc
mov
xor
and
cmp
lret
shl
popf
pop
cmp
dec
cli
je
les
mov
cmpsl
add
add
jae
xchg
mov
and
out
jb
dec
inc
cmp
adc
cmc
mov
xchg
mov
sub
xchg
stc
mov
add
dec
jb
fs
gs
out
mov
jbe
fidivl
fstpt
pusha
cmp
lods
inc
adc
dec
jae
movsb
pop
mov
pop
cmpsl
sub
push
pop
aam
icebp
jle
adc
repnz
iret
add
das
add
incb
insl
into
out
xlat
cmp
cmpsl
inc
in
mov
lcall
mov
dec
adc
xchg
loope
xchg
cs
lods
cmc
mov
jno
insl
sbbb
cmp
mov
adc
dec
add
jmp
push
mov
push
mov
invd
dec
movsb
out
xor
arpl
aam
lret
push
xor
sbb
cwtl
adc
pop
push
dec
push
icebp
dec
loop
repnz
push
xchg
adc
cmc
or
lret
add
cmpsl
sub
and
cmp
xor
cmpsl
mov
mov
jmp
xor
inc
mov
pop
aaa
mov
in
stos
jno
aad
xchg
movsb
xlat
sti
jae
loop
push
adc
and
sbb
jns
mov
mov
mov
mov
pop
jecxz
test
je
or
xor
mov
mov
or
lea
daa
rcl
das
leave
lods
cwtl
sub
fiaddl
rcl
sub
sti
sbb
add
movsl
std
sahf
push
aam
sbb
aam
aad
call
andb
std
dec
repnz
adc
ljmp
or
cmc
mov
dec
or
stos
xorb
cmpsb
push
add
add
inc
lods
je
mov
cmc
mov
enter
add
dec
hlt
xlat
pop
xchg
mov
mov
and
out
popf
in
push
sbb
je
jno
mov
ljmp
dec
add
adc
sbb
and
xor
sbb
jne
pop
out
mov
call
nop
imul
into
sbb
lods
sbb
in
and
mov
gs
and
or
add
inc
ret
ss
inc
sbb
xchg
jne
xor
push
mov
aad
rorb
outsb
inc
shll
add
idivb
and
fstps
jge
dec
int
mov
test
lods
into
and
fidivrl
out
cmp
into
xchg
out
imul
jns
inc
in
xor
xchg
scas
scas
movsb
xor
inc
jb
xchg
jne
and
mov
push
movsb
xlat
ljmp
lock
xor
sub
xor
mov
fsubr
xor
xor
in
test
xchg
iret
add
in
or
rorb
clc
sbb
pop
testb
movsb
push
jno
arpl
add
fisttpl
xchg
in
fisttpl
and
sbbb
out
push
shrb
ja
inc
sbb
inc
rorl
push
mov
movsb
inc
push
mov
mov
lret
popf
cmpsl
inc
mov
jns
xor
pusha
sub
push
loopne
les
inc
sub
push
js
pop
js
insb
aaa
movsb
mov
cwtl
pop
out
and
mov
clc
pop
xchg
gs
xor
div
add
pop
cs
sub
mov
jno
fsubs
test
xlat
sub
xchg
push
sub
jns
or
push
mov
pop
movsl
cmp
push
lea
pop
pop
mov
lcall
pop
stos
lods
mov
hlt
loop
sub
lcall
push
rcrl
or
dec
rep
stos
pop
inc
jb
in
cmp
movsb
xchg
jp
jmp
dec
sbb
xchg
loope
jae
out
cmp
lock
insb
imull
lods
lds
sub
iret
mov
xor
rorl
add
or
cli
movsb
inc
js
pop
push
incb
xorl
add
inc
lods
popf
int3
mov
jno
pop
sub
fcomps
rcpps
enter
sarb
mov
inc
or
ljmp
add
mov
sub
dec
inc
dec
sti
test
mov
and
push
je
pmaxsw
ret
enter
dec
fstl
mov
clc
xchg
data16
and
push
sbb
mov
testb
andl
in
mov
mov
aas
cmpsb
fldenv
sub
arpl
movsb
nop
addr16
mov
lods
xchg
lock
push
cmpsb
cld
mov
cmpb
test
pop
jne
sahf
imul
jnp
push
ds
stos
insb
cld
unpcklps
push
hlt
xchg
and
pop
jnp
in
fsubs
mov
pop
fs
fdivs
mov
pusha
pushf
mov
inc
add
movsb
enter
ds
fidivrs
add
sbb
sbb
arpl
mov
sub
aad
or
cmpsl
sbb
dec
adcb
sahf
sub
xor
mov
fs
jmp
fildl
repnz
push
mov
pop
hlt
xor
ret
lods
shl
pusha
ss
adc
arpl
inc
shll
hlt
int
mov
ftst
dec
in
outsl
stos
outsb
jle
jbe
pop
and
pop
and
add
movsl
lret
or
daa
lods
inc
mov
fbstp
mov
jp
stos
fisttpl
sub
daa
or
jae
add
xor
mov
mov
insb
sub
mov
sub
movsl
lret
aad
pusha
lods
loopne
mov
int3
out
xchg
pusha
addr16
mov
mov
adc
lods
mov
imul
and
out
sbb
fnclex
outsl
cmp
call
loopne
sbbb
push
scas
lods
int3
xchg
jnp
jnp
dec
mov
dec
dec
jbe
sahf
or
enter
mov
sahf
adcb
xchg
sti
sub
or
pop
pop
fdivp
add
pop
fmuls
sub
mov
jns
inc
pop
sbb
sub
jl
leave
push
negb
mov
inc
fdivp
in
push
aam
mov
aad
lods
sbb
aaa
cmp
push
and
add
pop
jb
popl
sub
icebp
xor
mov
adc
movsb
in
pop
test
pop
add
mov
iret
mov
xchg
pop
orb
stc
enter
mov
into
in
imul
ja
lret
fisubrs
sbb
mov
mov
sahf
pop
or
xchg
enter
inc
xchg
mov
ret
push
aam
fsubr
gs
sbb
mov
xor
out
fdivs
dec
lret
push
add
mov
inc
lods
mov
mov
dec
cvtdq2ps
stos
das
popl
out
cmpsb
sub
dec
sar
sub
push
pushf
stos
icebp
xor
cmc
push
inc
andl
subb
popf
pop
mov
in
std
movsb
das
mov
addr16
shll
into
jb
lock
pop
adc
test
jb
add
mov
call
push
jecxz
les
int3
icebp
push
ret
dec
dec
xchg
jbe
jg
jno
shrl
ret
and
dec
out
add
add
test
jl
jae
repz
mov
outsl
jae
or
or
mov
incb
shll
outsb
lods
push
shl
scas
stos
mov
fsub
or
call
cld
lods
sarl
mov
and
popf
incl
cmp
sub
out
out
adc
add
pusha
cmpsb
ss
fwait
or
dec
test
call
gs
sahf
sbbl
call
aaa
mov
repz
cmp
pop
andl
jns
mov
das
mov
adc
cs
shl
jns
insl
outsl
jb
jae
aaa
and
inc
in
mov
mov
pop
hlt
insb
pop
fcomi
test
mov
pop
mov
pop
sbb
jae
jle
xchg
mov
dec
push
inc
iret
out
stc
push
inc
subl
into
ljmp
adc
adc
dec
outsb
lea
jnp
dec
lods
cltd
icebp
scas
test
inc
stos
adc
fsubl
mov
fidivs
jmp
dec
xchg
xor
stos
xchg
movsb
ret
xor
scas
cld
dec
rclb
lock
es
inc
popf
dec
cmpsl
icebp
repz
jmp
mov
lods
xor
mov
outsb
jnp
das
mov
pusha
xlat
decb
sar
dec
and
jns
icebp
cmp
mov
dec
dec
loope
cmp
in
adc
xchg
test
outsb
bound
mov
in
xor
inc
mov
mov
dec
mov
out
addr16
call
mov
inc
push
add
fmul
lret
jno
iret
clc
push
scas
ret
mov
and
addl
clc
cvttps2pi
and
sbb
inc
bound
mov
jnp
inc
pop
fisubrl
into
sub
cmp
fwait
sub
cmp
arpl
mov
outsb
sub
je
cli
insb
outsb
xchg
or
mov
icebp
movsb
fmuls
push
je
dec
outsb
pop
inc
sbb
data16
insb
movsb
dec
orb
stos
ret
test
inc
and
mov
lock
call
push
bound
mov
sub
inc
jg
xchg
jge
xlat
scas
imul
xchg
xor
adcl
dec
lds
push
loopne
xor
pop
xchg
icebp
pop
test
shll
nop
pop
xor
lods
add
mov
dec
sub
mov
in
dec
sub
data16
sub
out
sahf
push
adc
mov
call
xchg
popf
jnp
call
and
mov
cmp
push
mov
ljmp
scas
jmp
xor
js
arpl
inc
mov
fisubrl
or
xor
mov
hlt
pusha
xchg
jle
rolb
mov
mov
std
sub
pop
mov
push
xchg
cs
mov
sub
pop
lods
mov
sub
shrl
in
cld
and
roll
stos
movsb
jnp
aam
push
iret
out
pop
pop
movsb
jp
or
fidivl
in
cs
cmc
shll
clc
mov
adc
add
fimull
cmp
inc
sbb
and
push
adc
stc
jbe
je
mov
mov
scas
pushf
xchg
pusha
ret
add
dec
mov
lds
adc
push
mov
aaa
fsub
jae
xchg
sbb
pop
sub
ret
add
jo
aaa
pop
sbb
bound
mov
inc
imull
push
jge
test
cwtl
out
sahf
xor
xor
cmp
push
shr
sahf
es
push
fcmovu
int
add
xchg
insl
lcall
mov
adc
add
dec
int
out
mov
mov
sub
sbb
insb
insl
add
das
dec
dec
xor
scas
mov
xor
stos
lods
in
nop
nop
leave
or
xchg
arpl
push
arpl
cmpsl
jmp
repnz
sbb
jnp
popa
push
lods
hlt
xchg
cmpsl
cmp
push
jno
fsub
repnz
mov
out
push
pushf
lret
mov
push
cmp
sbb
and
sbb
and
cmp
icebp
xor
sub
bound
insl
push
mov
push
fldl
sub
add
jae
jle
lods
cmpsb
push
dec
mov
ret
jbe
outsl
jnp
mov
movsb
pop
iret
jns
incb
sub
addr16
jb
mov
xor
cmc
repz
push
jp
jle
sbb
call
and
jmp
jmp
add
ljmp
inc
sub
xor
sub
dec
insl
imul
xchg
lcall
in
mov
push
cmpsb
mov
mov
into
js
pop
xor
jmp
cmpsl
dec
pop
inc
repnz
seto
decb
outsl
xchg
cmpsb
jo
mov
fildll
stc
nop
inc
xchg
mov
sarl
pusha
pop
dec
cmp
cmpsl
test
shll
cli
lcall
jnp
lea
pop
loope
xchg
in
xor
cs
jmp
mov
push
std
mov
pusha
sub
cld
pop
and
cmp
mov
call
stos
mov
lcall
lcall
mov
push
lods
out
hlt
mov
sub
out
mov
fidivs
mov
pop
push
and
aad
int
mov
inc
sub
call
movsb
adc
sbb
xchg
xchg
hlt
popa
mov
cmp
outsl
pop
adc
push
mov
sarb
lea
jne
add
mov
mov
negb
adc
test
insb
mov
bound
arpl
call
mov
lock
xchg
int3
adc
hlt
pop
xchg
ficompl
mov
es
movsb
fsubrl
aam
sbb
mov
mov
add
lret
pop
cmc
adc
xor
sahf
push
push
xor
aaa
insl
sar
add
jae
mov
ret
fisubs
pop
xchg
mov
mov
add
dec
xor
ss
je
stc
pusha
cli
jp
outsb
movsl
fsub
jnp
hlt
aaa
mov
ficompl
cmc
out
pop
mov
movsb
xchg
sub
inc
add
push
jno
sahf
ja
pop
or
sub
sbb
or
sarb
or
push
pop
xchg
shll
lret
cmpsb
pop
jno
pop
jbe
pop
fadds
xchg
ljmp
icebp
jmp
mov
mov
push
sti
pop
lcall
cmp
push
lret
cmp
mov
std
dec
push
inc
and
sbb
lcall
jb
loopne
mov
movsb
mov
xlat
jo
insl
jb
test
jg
data16
mov
cs
pop
xor
shlb
mov
xchg
xor
push
andb
mov
fs
scas
push
and
fwait
iret
std
ficoms
mov
and
repz
push
push
add
adc
es
pop
fwait
cmp
rorl
add
cmp
and
adc
mov
mov
or
mov
stos
andl
mov
cli
add
xor
sub
pusha
iret
adc
cwtl
jns
add
loope
cmp
das
push
or
push
ss
movsb
and
loop
gs
dec
lahf
int
filds
sbb
shrb
icebp
push
xlat
dec
inc
xor
mov
push
andb
cltd
je
and
pusha
shl
push
dec
leave
xor
movsb
adc
sti
mov
xor
mov
mov
add
pop
cmp
sbb
out
fs
outsl
pop
fistl
ret
mov
and
xor
mov
hlt
test
sbb
out
scas
mov
jle
sub
jo
roll
outsl
lods
subb
mov
dec
lds
dec
loop
lea
fs
or
mov
test
push
nop
repz
mov
jns
lods
pop
fnstsw
inc
sub
incl
sbb
cmc
mov
pop
inc
sub
lcall
mov
movsl
movsb
adc
aad
sub
sbb
xchg
pop
mov
pop
aas
aam
xor
push
mov
icebp
dec
sbb
adc
inc
inc
sub
dec
fsubrl
lcall
lods
push
cmc
outsl
sub
leave
sbb
aas
add
or
ret
add
int3
pushl
aaa
popf
jae
sbb
pusha
ja
subl
mov
pusha
das
xor
adc
cmpsb
fcomp
push
scas
sub
fcomps
xchg
fnstenv
into
aam
pushf
lcall
fisubrl
cmp
push
lock
cmp
std
cmpsb
mov
lcall
movsb
mov
fadd
mov
fisubl
js
scas
data16
jg
xchg
mov
sarb
pop
mov
inc
mov
mov
mov
ficoml
xchg
mov
cmp
xor
pop
cli
push
adc
add
dec
jge
sbbb
sbb
fistl
dec
mov
mov
out
pop
cmc
ss
add
movsl
fidivrl
mov
dec
pop
shrb
push
packuswb
movsb
ljmp
fmuls
jb
cmp
mov
stos
or
dec
shrl
dec
or
dec
mov
mov
sub
das
sub
test
xchg
aaa
mov
push
mov
in
test
adc
pop
xchg
sub
pop
dec
insb
cs
pop
sub
in
sub
mov
popf
mov
sbb
xchg
mov
push
sub
cwtl
mov
xor
jge
mov
mov
jne
mov
test
inc
push
jno
mov
mov
mov
jae
and
jge
jne
or
jae
lods
or
test
lds
iret
ja
cltd
xchg
or
pushf
push
mov
sbb
inc
add
dec
xchg
out
dec
inc
cvtps2pi
sbb
mov
xchg
push
push
and
out
mov
xor
mov
cmp
inc
daa
or
dec
insl
sbb
lds
iret
push
mov
pop
adc
jae
pop
inc
je
mov
mov
mov
in
push
insl
sub
ljmp
in
gs
sbb
push
sbb
sub
xchg
cli
add
mov
cs
sub
lret
out
out
mov
mov
dec
xor
xor
fistpl
xchg
push
pusha
mov
popf
mov
cmp
jmp
mov
inc
outsl
sbb
gs
int
add
mov
sub
cltd
sti
call
add
cli
pop
push
iret
xor
call
xor
jmp
movsb
movsl
iret
mov
lret
add
jecxz
es
sub
call
push
or
push
mov
insl
lret
add
inc
mov
inc
mov
sub
enter
mov
fwait
ret
xchg
mov
int
arpl
jno
ljmp
rcrl
jns
les
jne
push
xchg
push
call
adc
add
cld
push
mov
add
in
dec
sbb
pusha
gs
es
cli
add
das
jno
push
ret
gs
xchg
adc
sbbw
inc
daa
add
add
jne
and
movsb
and
dec
mov
jns
or
sbb
out
call
dec
ret
cmpsl
lea
or
test
outsl
xlat
mov
xchg
xchg
cvttps2pi
in
jge
jg
adc
out
sbb
test
fcoms
push
push
cmp
or
cmp
fidivs
fldcw
mov
add
jae
inc
or
adc
clc
and
dec
movsb
push
ret
add
test
and
inc
jb
aaa
repz
js
mov
imul
out
mov
jp
xor
fidivl
push
xor
fcomi
xor
jno
call
lods
lcall
add
lock
pushf
mov
mov
leave
pop
sbb
or
popf
lods
push
ret
leave
xchg
loop
inc
pop
sub
mov
adc
cmc
pop
xor
and
xchg
xor
dec
call
movsb
xchg
out
lock
lret
lock
fisttpl
sbbl
into
lea
xor
call
or
jae
jb
fwait
rcrl
pop
xchg
test
pusha
enter
insl
loop
add
decb
mov
pop
or
dec
adc
jle
pop
mov
mov
out
jg
shr
sub
cmpsl
fs
cmp
pop
lret
xchg
movsl
test
jo
loope
bound
mov
pop
insb
adc
loop
call
outsl
addr16
jmp
lods
scas
mov
insb
gs
les
insl
xchg
cmp
mov
loope
call
pop
mov
dec
sbb
scas
jge
enter
clc
mov
iret
sub
or
or
lods
dec
dec
push
daa
fdivrl
arpl
xor
push
fcmovne
mov
cli
into
gs
mov
ret
add
int3
inc
mov
js
adc
loope
shll
add
xor
inc
scas
movsb
sbb
mov
xchg
sub
sub
pop
mov
mov
bound
dec
cmp
sub
and
sbb
adc
xor
or
test
sbb
mov
movsb
pop
jno
icebp
lods
lds
xor
out
add
pusha
sub
in
js
mov
arpl
hlt
neg
push
pop
out
jns
lods
movsl
cli
lret
jmp
mov
movsb
adc
aad
popa
cmpsl
adc
sbb
pusha
mov
lods
stos
inc
insb
fsave
nop
lahf
sub
sbb
out
push
sub
lret
jg
dec
cmp
ret
xchg
jnp
cs
sbbl
cmpsb
arpl
jmp
pop
cmp
xchg
dec
xchg
mov
mov
push
lods
por
push
aad
jo
xor
bound
add
jne
dec
shll
jbe
jb
cmpsl
ret
arpl
in
mov
shll
outsb
leave
jl
imul
aas
imull
and
push
ret
or
adc
in
lcall
push
icebp
scas
addr16
jnp,pn
sub
push
pop
test
and
fnsave
xorl
mov
test
lret
mov
addr16
pusha
mov
push
pop
mov
out
out
mov
cmp
out
andl
mov
pop
mov
pop
scas
xchg
das
and
test
movsb
data16
push
in
call
rcrl
aad
dec
jb
aaa
or
negl
pmullw
movsb
mov
ret
test
rorl
lea
dec
pop
cmp
rcrl
movsb
shlb
mov
xlat
dec
xor
mov
mov
hlt
movsl
jge
or
mov
mov
lock
mov
dec
xchg
mov
and
fidivs
lcall
cwtl
test
sbb
lods
ja
in
adc
icebp
sub
pop
repz
inc
psubsw
mov
inc
lock
dec
insb
das
push
jl
mov
cld
push
in
mov
push
cmpsl
aam
adc
xor
lods
mov
addb
lret
xor
adc
mov
cmp
mov
cmp
sub
jnp
mov
stc
xor
add
jne
xchg
mov
aad
push
mov
jp
fidivrs
int
push
xor
xor
xor
imul
cmp
sub
inc
fsubrs
or
and
pop
sub
insb
sbb
andl
fnstenv
cmp
or
mov
sbb
mov
flds
add
jp
cmp
pop
fwait
push
cmpsb
andl
mov
jecxz
lea
mov
xchg
fildll
les
cmpsb
insl
xchg
lcall
mov
pop
xchg
sbb
sbb
jbe
jb
inc
pop
imul
xchg
popa
sub
xchg
ljmp
mov
jae
mov
jns
arpl
ss
into
push
repnz
in
xchg
stc
sub
aas
xchg
aam
lret
push
lcall
sub
lret
mov
cmp
in
push
mov
sbb
pop
lea
xor
xchg
mov
inc
mov
inc
mov
jns
mull
pop
push
mov
lds
xlat
dec
inc
xor
das
bound
adc
sar
push
stos
sub
mov
shll
push
cmc
xor
in
movsb
je
adc
push
xor
movsl
subb
jnp
test
dec
xchg
outsl
lcall
rcll
mov
jge
mov
jecxz
lcall
mov
pop
test
cs
mov
out
push
fxam
lea
dec
aad
pop
shrl
mov
cli
imul
mov
in
adc
xor
push
mov
sbb
adc
shlb
sti
jnp
add
scas
pop
push
mov
cmpsb
in
inc
inc
add
sbb
in
test
mov
pusha
sahf
int
out
popf
test
movsb
clc
sbb
rolb
mov
fsubrs
enter
adc
cltd
inc
cmp
add
pop
sbb
xor
xor
std
test
pop
mov
mov
rolb
or
loopne
fwait
or
and
fcmovnu
int3
inc
dec
sub
add
rclb
cmp
lcall
push
lret
aad
mov
mov
and
mov
inc
repz
jecxz
jge
test
movsl
js
pop
and
mov
xchg
sahf
mov
add
enter
dec
push
in
movsl
jae
mov
push
stos
inc
push
stc
repz
xchg
or
ja
out
add
xorl
push
jbe,pn
mov
sahf
or
xor
addr16
fsub
mov
jb
outsl
pop
and
ds
dec
push
bound
sub
push
mov
cs
push
clc
les
add
sub
inc
and
mov
pop
stos
jno
xor
pop
xor
je
je
cli
hlt
jbe
aad
cmc
ljmp
test
mov
mov
jbe
jb
mov
mov
lcall
lcall
shl
movsl
xorb
mov
cli
stos
and
push
sahf
rolb
push
adc
mov
mov
aad
xchg
lcall
and
sub
push
fsubr
cld
mov
mov
or
loope
in
pop
mov
jae
notl
pop
pop
cmp
icebp
lods
or
pop
pop
lahf
pop
mov
adc
mov
adc
mov
mov
inc
sbb
xchg
movsb
rolb
insl
xchg
in
lcallw
iret
pop
js
or
outsb
sbb
fmulp
pop
popl
and
adc
mov
xacquire
push
movsb
hlt
dec
imul
ja
lods
xchg
out
adc
cld
and
push
in
push
jmp
mov
cli
mov
dec
insl
les
imul
pop
ds
lcall
sub
mov
cmp
mov
or
cld
pop
hlt
xchg
test
push
adc
gs
sbb
or
jge
fldl
sub
sub
sbb
subl
clc
jo
jg
loop
dec
loope
cmp
inc
in
aam
push
dec
push
mov
js
jg
pushf
outsb
pop
xor
sub
adc
mov
jno
movsb
shlb
arpl
mull
nop
sub
test
xorb
in
push
cs
add
push
or
jo
aas
jae
mov
cwtl
jmp
stos
shlb
mov
pop
in
push
sbb
mov
jb
fwait
jp
aad
xchg
push
or
jmp
pusha
push
movsl
in
lret
dec
lcall
cltd
data16
sub
or
xchg
jne
sub
sbb
and
sub
push
int3
jmp
lcall
jne
push
cwtl
jbe
jbe
add
xchg
sbb
stos
mov
xchg
aam
jecxz
rcrl
cmp
cmp
adc
das
lods
inc
jnp
insb
sub
sti
aad
and
mov
mov
ficompl
ljmp
xor
xchg
inc
mov
add
lods
pop
mov
push
pop
iret
adc
inc
xor
push
scas
pusha
dec
xchg
aam
mov
inc
dec
std
cmpsl
outsb
subb
lods
call
sbb
int
insb
movsb
xchg
int3
xchg
dec
adc
pusha
scas
mov
push
stos
or
movsb
jo
and
push
xchg
ret
mov
sub
push
xor
pop
push
push
ficoms
mov
movsb
int3
cli
insl
cmc
xor
rol
enter
out
pop
stos
mov
add
cmp
loop
adc
js
mov
rorl
sub
add
pop
or
fldt
fimull
bound
fisubrs
xor
les
mov
adc
mov
jmp
add
inc
out
je
loopne
adc
fdivs
jecxz
lock
inc
xor
je
hlt
push
fmul
pop
cmpsb
gs
xchg
movsl
push
push
cld
mov
dec
and
sbb
addb
xchg
dec
movsb
mov
xor
jg
cmp
push
enter
test
sub
fdivrs
dec
adc
out
lods
in
lock
aad
mov
cmc
into
lods
xchg
inc
adc
nop
push
or
cwtl
data16
cwtl
aaa
hlt
sub
inc
xorb
ret
pushf
shl
outsb
roll
mov
cmp
arpl
or
mov
int3
xlat
sbb
stos
cld
mov
out
mov
scas
mov
dec
call
repnz
jge
sbb
mov
mov
fcomp
and
mull
lret
fists
jbe
imul
mov
push
dec
out
mov
sub
fiaddl
mov
add
mov
inc
cmp
lea
out
add
inc
sbb
pusha
enter
mov
lret
test
insb
mov
ret
je
or
aam
mov
push
push
lods
mov
cmp
cmp
mov
mov
sub
lcall
repnz
inc
sgdtl
cmp
addl
pusha
dec
cltd
mov
jb
aaa
push
cli
in
jmp
enter
add
pop
or
scas
dec
push
outsl
mov
push
add
test
loop
sahf
imul
sbb
mov
sbb
in
subb
je
int3
lcall
into
cmp
sub
jns
adc
stc
fsubr
aas
dec
sbb
jne
pop
inc
mov
fsubrl
add
mov
mov
jge
fcomps
bound
into
out
sub
nop
mov
cs
lds
or
imul
dec
or
jmp
push
fidivrs
out
movl
mov
mov
mov
test
sti
das
xchg
aas
ret
adc
mov
xlat
sub
fwait
out
mov
cpuid
push
jge
test
xchg
inc
dec
into
jnp
dec
adc
cmp
lahf
push
sub
fisubl
xchg
sahf
icebp
ret
add
mov
das
cmc
fwait
add
inc
aad
mov
repz
sub
loope
xchg
insb
jo
sbb
mov
enter
mov
jp
repz
rolb
add
xor
in
mov
mov
mov
inc
movsb
adcl
cmp
pop
push
or
pusha
cmp
sub
or
xchg
cmp
sbb
je
push
and
add
cmpsb
pop
jno
aad
sbb
insl
jb
prefetchw
ja
movsb
add
sub
outsb
repz
sub
and
push
rcrl
xchg
push
iret
and
jb
das
fwait
and
inc
ljmp
jb
and
add
lods
mov
decl
fucomip
mov
add
mov
in
adc
mov
jns
mov
push
and
adc
inc
cld
imul
aam
push
ss
aas
pop
lea
adc
xor
sbb
movsl
fdivrl
loopne
cli
into
push
jne
bound
adc
jo
hlt
popa
popf
inc
sbb
pop
cwtl
push
push
pop
cwtl
mov
mov
ret
cli
movsb
push
or
sub
bnd
cmpsb
ljmp
or
pop
dec
hlt
jge
or
insb
lret
hlt
pop
inc
lods
outsl
popa
pop
push
cmovle
and
pop
lods
sti
aam
pop
cmp
in
and
pop
scas
jae
bound
test
nop
data16
sub
pop
mov
sub
mov
add
sub
inc
push
jb
xchg
xor
lods
cmpsb
sub
dec
or
enter
mov
out
pop
sbb
rolb
movsb
je
xor
popf
repnz
shll
add
xchg
push
pop
call
into
mov
setae
dec
xor
enter
push
pop
xor
icebp
push
adc
hlt
int3
dec
mov
rorl
enter
push
stos
pushf
mov
cmp
in
mov
pop
loope
cmc
insb
adc
push
cli
test
dec
sub
imul
cmc
adc
xchg
call
pop
jbe
dec
imulb
jae
and
xchg
add
add
dec
test
mov
sub
cmp
pop
dec
adc
adc
and
mov
mov
mov
adcb
loope
sbb
sbb
ret
cld
pop
push
addr16
es
jge
insl
mov
aam
add
jg
jne
vshufpd
out
les
jne
ja,pt
test
das
pop
dec
xchg
xchg
mov
test
insb
dec
push
add
xchg
fidivs
jns
xor
dec
jne
pop
sbb
adcb
and
cld
xchg
mov
push
jo
add
mov
cwtl
mov
daa
jns
orb
pop
jns
dec
and
jno
cli
cmpsb
xor
aas
fadds
mov
push
jnp
mov
mov
mov
loope
das
mov
push
mov
mov
xorl
pop
sbb
ret
addl
push
in
or
push
nop
test
xchg
jecxz
sub
xor
mov
dec
and
ja
xchg
cmp
inc
push
ljmp
rcll
fwait
push
jno
adcl
movsb
dec
addr16
mov
fstpt
jge
hlt
icebp
movsb
pushf
out
jmp
daa
mov
inc
cmc
iret
fmul
dec
int3
sbb
sahf
decb
mov
push
dec
outsl
stos
push
push
pop
inc
push
xor
xchg
arpl
adc
hlt
add
neg
and
xchg
dec
mov
add
lea
fbstp
jae
jl
xchg
ss
fcmovne
int
in
dec
mov
fstpl
shrl
jnp
mov
or
or
jns
ja
xchg
push
fcoms
jb
leave
out
pusha
sbb
fiaddl
jns
enter
dec
cwtl
push
iret
lret
pop
xor
mov
cmp
jns
jns
jbe
sub
cwtl
sbb
lret
ljmp
xchg
xchg
adc
aaa
xor
out
sbb
mov
pop
sahf
add
xor
xchg
cltd
aam
cli
cmp
inc
loope
pop
push
insb
testl
mov
push
sbb
and
sbb
mov
lods
push
xor
decl
cmp
hlt
adc
jge
pop
jns
gs
and
scas
movsb
loop
adc
mov
lods
push
fs
xor
xchg
subl
mov
adc
sub
or
clc
out
jle
inc
add
mov
mov
shlb
xor
into
sbb
pusha
out
test
enter
mov
xchg
and
fstps
push
test
adc
stc
paddd
lods
push
xor
in
ret
push
jbe
xchg
out
shr
add
out
fnstcw
xchg
mov
or
cmp
push
sbb
ljmp
dec
xlat
lds
sbb
xchg
aad
mov
jne
leave
call
iret
pusha
popf
mov
mov
sahf
xchg
xorl
adc
movsb
push
mov
cmp
iret
arpl
sub
lods
fdivp
inc
xchg
cmp
mov
cmp
sbb
dec
imul
mov
xor
pcmpgtd
das
movsb
aaa
ja
sub
inc
mov
add
jge
push
mov
xorl
fsubl
dec
int3
mov
sub
mov
push
outsb
adc
jns
mov
subl
cmp
addr16
mov
out
repz
mov
fiadds
lds
data16
mov
jae
sub
imul
outsl
cld
pop
push
xchg
int
lods
decl
in
jbe
lret
cmc
add
in
insl
sbb
add
adc
andl
mov
fisubl
sbb
add
sbb
imul
push
and
sti
aad
rolb
adcl
les
adc
fimull
loop
scas
dec
push
stc
into
add
scas
es
aaa
push
sahf
adc
icebp
lock
push
bound
arpl
add
sub
inc
fcmovne
inc
or
popa
inc
push
inc
mov
dec
js
push
xchg
dec
push
outsb
adc
into
add
cmp
lock
xchg
push
fs
fldenv
jmp
cli
fadds
pop
xor
lock
mov
test
xchg
push
iret
push
xchg
xchg
cmp
dec
mov
and
cltd
and
mov
xor
jp
inc
addr16
repz
xlat
ds
mov
sbb
inc
jle
sub
rcll
add
aaa
add
ret
out
cmp
jge
loop
leave
aam
or
fidivs
call
mov
mov
mov
mov
ljmp
and
push
xor
xchg
push
mov
jl
pop
sub
addr16
arpl
pop
pusha
sbb
mov
dec
dec
mov
fstpt
add
psubw
cmpsl
jbe
push
cmp
repz
sub
ja
pop
lret
pop
insl
lcall
xor
enter
js
xor
repnz
shrb
xlat
or
sub
test
mov
ret
mov
divb
jle
punpcklbw
int3
and
mov
int
int3
fldcw
dec
sbb
cmp
ljmp
jns
xchg
dec
stos
insb
insl
ljmp
subl
and
sub
fdivrl
int
xchg
jecxz
shlb
or
scas
iret
xor
push
nop
push
cmp
mov
cmp
repnz
stc
mov
loope
sub
stos
repnz
fildll
inc
jge
imulb
adc
test
push
jo
jno
leave
push
mov
ljmp
test
mov
lcall
or
sbb
or
in
adc
sub
enter
jae
pop
push
lods
stc
push
and
jge
es
dec
cmpsb
shrl
inc
cld
inc
imul
lea
cmc
push
and
xchg
mov
repnz
mov
out
repz
push
movsb
sbb
dec
fidivrs
lods
xchg
xchg
sub
movsb
lret
mov
mov
test
loop
arpl
out
in
mov
add
xchg
cmpsb
xor
or
push
xchg
dec
pushf
cmp
inc
imul
sbb
mov
sbb
mov
fsubs
cmp
xor
mov
cmp
enter
pop
js
daa
out
pop
pop
sub
andl
sbb
push
or
movsb
pusha
ret
cltd
in
jle
and
inc
dec
xchg
in
push
mov
loop
into
or
and
dec
inc
or
mov
aad
jge
or
cltd
roll
mov
sbb
test
sub
lods
out
xchg
fistps
or
push
mov
repz
push
lcall
imul
ret
loop
dec
jp
pusha
jmp
jo
or
mov
and
mov
rorb
jae
mov
push
or
ret
cmc
pop
lods
in
push
add
leave
sarb
or
dec
dec
movl
das
aam
xor
dec
dec
lods
rcrl
lcall
icebp
push
mov
push
jae
cmc
add
jb
mov
jmp
push
xor
push
jns
orb
xchg
mov
jb
addl
jo
mov
jge
fistl
mov
mov
loope
in
sub
or
inc
mov
ljmp
push
incb
and
cwtl
pop
sub
xchg
testb
dec
cmpsl
lods
and
aaa
inc
sbb
cmpsb
hlt
and
add
adc
movsb
pop
push
dec
jno
leave
ljmp
cmp
push
sub
mov
pop
pop
arpl
add
lret
sub
xchg
dec
loopne
sub
stos
push
ljmp
daa
jnp
scas
push
and
inc
mov
sub
ror
adc
and
fxch
mov
movsb
or
cmp
sbb
xor
cli
ret
repz
and
stos
adc
shrl
cmp
pop
leave
stos
test
adc
push
inc
ror
je
dec
mov
int
lahf
jns
xlat
das
idivb
adc
xchg
mov
fmul
mov
mov
pop
pop
push
dec
clc
mov
xor
xchg
dec
inc
mov
ret
push
push
cld
decb
rclb
xor
mov
adc
das
mov
cmc
mov
mov
movsb
xchg
fstps
xchg
add
sti
dec
add
mov
test
mov
pushf
jns
scas
test
xor
ret
fdivrs
sbb
shrb
push
ret
mov
inc
jb
inc
jo
ret
dec
movsb
pop
inc
arpl
repz
sbb
in
sub
sbb
xchg
iret
xchg
std
ret
imul
pop
adc
and
in
mov
jnp
cmp
mov
bound
cmpsb
leave
cs
push
fldt
lret
loop
cmpsl
leave
xor
dec
mov
mov
enter
inc
xchg
ficompl
mov
test
int
sbb
lock
insb
pop
leave
pop
fs
xchg
sub
int3
push
sub
scas
ret
sbb
or
push
sub
sbb
into
pop
rolb
mov
and
and
sub
mov
xchg
scas
clc
mov
mov
jb
fcomps
add
mov
movsb
ss
pop
xor
and
int3
inc
movsl
repz
bound
push
int
pop
inc
int3
stc
pushf
push
cmp
mov
push
jl
ja
jp
out
sub
imul
ret
insb
scas
xchg
push
sarb
xor
adc
add
sub
mov
fs
pop
xor
jae
mov
cmp
fisttpl
mov
sub
xor
stos
mov
fadd
mov
or
test
and
add
in
dec
ss
mov
outsl
jb
add
rorb
jae
jbe
mov
lds
jns
sub
fisubs
iret
lea
cmc
movsb
dec
fistpll
stos
stos
arpl
mov
fs
ss
sub
add
mov
xchg
push
or
insl
jae
sarb
aad
test
inc
mov
daa
jnp
hlt
cmpsb
in
cmpsl
ret
sbb
lods
orl
inc
mov
test
enter
mov
jb
dec
push
les
sbb
cmpsl
and
lret
bound
inc
jnp
movsl
lds
ret
lcall
adc
ljmp
test
hlt
push
decl
mov
in
jmp
xchg
jns
sub
push
push
cmp
jb
mov
lods
push
cmp
jo
iret
sub
outsb
sti
add
and
dec
hlt
test
jno
add
cmp
sub
sbb
xchg
movsb
sub
mov
sub
and
hlt
daa
inc
mov
test
ret
adcb
int3
out
inc
inc
xor
sbb
or
subb
push
mov
sub
or
cmp
scas
pop
sbb
push
movsb
sub
insb
faddl
leave
out
ja,pn
pop
xor
fstps
test
out
push
insb
push
inc
cmc
std
scas
jp
mov
movsb
imul
call
cmc
enter
enter
fildll
mov
mov
mov
fldl
repnz
xchg
test
cmp
in
lcall
int3
push
insb
ficompl
pop
mov
xchg
sti
inc
fdiv
icebp
inc
pop
aad
ret
adc
or
popf
jo
sub
xchg
das
sahf
sbb
jl
nop
xchg
cmc
int
xlat
sub
ret
add
mov
in
loopne
lods
rorl
cmp
dec
xchg
dec
push
inc
sahf
fcompl
sbb
sbb
test
add
mov
inc
xchg
test
xor
cld
cs
repz
xor
mov
pop
sbb
pop
pop
jle
mov
adc
xchg
add
mov
lcall
mov
sub
sbb
pop
inc
mov
mov
sub
add
shrl
mov
sub
cli
and
jge
mov
clc
pop
inc
mov
jmp
movsb
insl
test
lret
ret
aam
icebp
jne
loopne
filds
cs
lds
inc
jbe
push
popf
iret
lcall
cmpsl
pushl
in
addb
add
and
and
and
inc
adc
imul
in
xor
mov
cmp
pop
lea
mov
into
lcall
and
jecxz
testb
ja
sbb
jmp
jp
pusha
ret
pop
lea
mov
pop
push
pushf
inc
mov
neg
std
sbb
fbld
sub
xchg
adc
and
ljmp
adc
push
add
jns
idivb
jo
sub
jb
xchg
rcrl
call
jg
fs
fs
das
jb
mov
xor
dec
pop
xor
dec
loopne
xchg
push
addb
sub
lods
ret
add
dec
and
mov
jns
cs
fcomip
mov
inc
xchg
pop
jb
cwtl
jae
jo
xor
mov
sub
test
sub
js
movsb
mov
mov
sub
iret
sbb
jne
mov
negb
rol
ljmp
mov
lock
enter
push
xchg
sub
popa
imul
jnp
movsb
rep
stc
jns
mov
xorb
push
and
adc
stos
ss
scas
movsb
scas
je
jnp
mov
mov
mov
scas
fstl
add
lret
xchg
pop
sub
dec
fsubs
jno
mov
cmp
sub
mov
or
mov
inc
hlt
lcall
les
add
pushf
cmc
mov
jnp
adc
hlt
mov
in
aam
mov
mov
xor
loope
test
in
cmp
cmc
inc
cmpsb
repz
push
jmp
jbe
fmuls
mov
xor
mov
xchg
add
adc
outsl
mov
xchg
cli
mov
xchg
gs
pusha
jne
xor
cmpsl
pusha
jns
push
xchg
mov
push
in
cwtl
or
rclb
outsb
shll
shll
movsb
arpl
cld
movsb
push
pop
jb
aad
out
pop
mov
fidivrl
leave
js
dec
xchg
mov
sub
jo
push
out
sar
movsl
xor
aas
dec
adcl
sbb
push
mov
test
les
gs
dec
adc
sub
dec
stc
fidivl
ss
call
dec
jae
cli
add
into
int
mov
repz
insl
inc
loope
xchg
cmp
xchg
adc
dec
jecxz
mov
cmp
push
mov
lahf
hlt
pop
in
push
push
xor
movsb
dec
call
jns
pusha
sub
mul
insb
ja
ja
movsb
pop
fwait
add
ret
jle
scas
add
out
lods
sbb
mov
hlt
aaa
pop
adc
adcl
out
movsl
bound
inc
adc
mov
xchg
unpcklps
mov
ljmp
mov
daa
data16
lock
call
dec
or
fisubrl
fs
cmp
mov
leave
test
and
xchg
imul
jl
xorb
jnp
push
pop
push
sub
or
add
fwait
bound
inc
xorb
mov
shlb
sbb
sub
sub
and
dec
xor
lods
mov
pop
xchg
jecxz
xor
mov
loopne
dec
lretw
mov
loop
pop
arpl
jb
mov
lods
gs
int
cmpsl
aad
push
mov
outsl
repz
scas
and
push
call
or
movaps
add
mov
pop
sti
fnstcw
mov
xchg
rcr
test
pop
sub
push
test
aam
scas
cmpb
jbe
fbld
dec
pop
arpl
add
add
aad
and
fistpl
ret
fdivrs
add
sbb
push
aam
pusha
repnz
in
cmpsb
sub
repz
xor
mov
pop
push
mov
loopne
pop
pop
stc
push
adc
xchg
lds
mov
push
push
pusha
mov
adc
pop
movsb
pop
idivb
jp
out
ret
bndldx
aad
mov
outsb
mov
test
push
movsb
stos
sub
mov
push
jge
lods
push
adc
movsl
and
mov
push
adc
inc
sbb
cmc
push
movsl
mov
jp
jbe
mov
dec
push
inc
insl
test
pop
movsl
adc
loope
roll
aas
xor
and
pop
rol
inc
push
push
push
pusha
jmp
mov
test
or
movsb
mov
inc
push
in
notb
inc
repz
push
imul
sbb
fcmovnu
cmp
or
push
in
popf
insl
push
xor
add
jecxz
pop
fisubrs
push
pop
cmpsb
sbb
je
pusha
out
jg
push
mov
cmp
cmp
push
outsl
add
jbe
add
lock
fisubs
cld
test
adc
inc
cwtl
jb
and
mov
push
and
push
dec
lahf
leave
imul
dec
outsb
jo
outsl
dec
mov
sbb
rorb
dec
xor
arpl
or
popf
adc
in
mov
xchg
ss
sbb
stos
jno
in
icebp
aaa
daa
cltd
jg
jb
xor
mov
dec
add
xchg
hlt
add
mov
adc
xor
testl
jge
jns
cmp
icebp
lods
int3
push
xchg
and
fs
jb
imul
roll
or
sbb
movsb
xchg
xor
push
imul
in
add
mov
mov
out
std
imul
cmp
fstpt
hlt
sahf
call
pop
dec
lods
mov
cltd
mov
dec
mov
scas
es
in
xchg
movsb
add
xchg
xchg
ja
mov
inc
push
addl
shlb
sub
repz
dec
xchg
add
mov
xchg
icebp
add
inc
push
stos
jge
mov
mov
lahf
xchg
sub
fnstsw
or
xor
lods
and
cmp
stos
mov
xchg
jmp
pop
insl
add
repnz
cmpsl
dec
test
imul
mov
testl
lods
and
outsl
decl
xor
repnz
icebp
pop
or
mov
stc
adc
test
cmpl
addr16
jb
dec
mov
out
js
aam
mov
add
in
ficomps
jno
mov
aam
jp
sbb
sbb
cli
cmp
std
push
data16
adc
xchg
sbb
adc
insb
js
and
fistpl
mov
sub
cmpsl
aam
mov
dec
mov
dec
jle
das
xlat
pop
mov
cmp
push
movsb
sahf
rclb
stc
push
push
pop
xor
out
cmp
stc
lock
insl
es
movsb
scas
fstl
inc
jg
nop
mov
jnp
outsb
and
cld
fcmove
rol
das
push
je
gs
sbb
imul
and
les
lods
idiv
mov
mov
cltd
divb
dec
inc
das
addr16
mov
aaa
mov
push
lcall
bound
lods
inc
dec
aad
movsl
lock
and
fwait
imul
lods
adc
shl
subl
popa
imul
movsb
adc
mov
movsb
aas
loope
push
push
jae
add
and
or
jo
mov
xor
push
movsb
jb
test
test
iret
loope
and
sub
call
xchg
xchg
xchg
lahf
leave
sub
movsb
mov
hlt
cmc
push
xchg
leave
xor
je
dec
icebp
repz
shld
addr16
mov
mov
sub
push
mov
and
ret
mov
inc
lcall
out
cmovb
lods
mov
mov
sbbb
andl
sbb
adc
lds
or
hlt
aad
cmpsb
pop
add
sub
js
daa
sbb
pusha
sub
pop
sub
sub
scas
pop
mov
in
cli
jae
es
mov
aaa
out
jae
iret
mov
mov
xchg
icebp
ja
push
mov
int3
stos
pop
mov
das
in
push
push
lods
lods
ds
mov
out
cli
adc
scas
scas
mov
mov
cmp
mov
dec
repz
mov
sbb
push
dec
adc
pop
jbe
cmpsb
pusha
push
hlt
push
pop
adc
mov
fbstp
xor
pop
jb
fwait
mov
pushf
or
push
inc
lret
dec
dec
xor
scas
int
std
lret
or
test
fistl
xchg
sub
pop
adc
movsb
stc
adc
stos
inc
ljmp
test
cwtl
daa
popf
call
in
fidivrs
push
ret
and
movsl
out
jp
pop
mov
lds
cs
movsl
mov
iret
jecxz
aam
cmc
push
data16
push
ret
movsb
mov
hlt
in
cmc
into
shlb
fstpt
cmp
cmp
cmp
call
xor
jns
cmpl
sbb
xchg
dec
bound
movsl
jg
add
call
popf
jne
and
xchg
lock
sbbl
aam
push
mov
mov
sub
mov
movsb
mov
popl
fidivrl
test
shrb
insb
xchg
ret
subl
or
bound
scas
mov
lret
cli
iret
pusha
mov
shlb
push
sti
mov
sbb
push
jmp
pop
xor
inc
mov
jnp
mov
mov
adc
mov
mov
pop
jb
scas
sbb
or
push
outsb
scas
mov
push
sub
lods
sbb
mov
inc
movsb
lret
add
inc
push
sub
jno
imul
jmp
sub
outsb
shr
mov
lods
stos
fistpl
cmp
testb
xchg
imul
pop
xor
out
sbb
jmp
lock
std
xchg
xchg
sbb
or
mov
add
arpl
into
addl
jp
cmc
insl
addr16
add
mov
push
mov
push
adc
jg
mov
imul
mov
sub
mov
out
movsb
mov
and
cmpsl
bound
das
and
mov
xchg
mov
mov
lods
bound
test
push
mov
outsl
pop
sbb
pop
adcb
popf
in
dec
scas
mov
ror
and
lgs
negb
test
xor
pshufw
aad
icebp
dec
lcall
sahf
mov
loopne
hlt
popf
mov
dec
int3
dec
arpl
push
sbb
mov
rorl
sub
xor
loop
xchg
cltd
dec
bound
mov
pop
sub
mov
mov
or
adc
mov
std
aad
adc
xor
repz
je
scas
and
fdivs
icebp
push
sub
stos
scas
cli
mov
sbb
and
mov
and
push
gs
mov
ja
add
iret
orl
dec
mov
lea
mov
arpl
cmc
iret
add
stos
lret
sub
and
add
mov
push
outsl
mov
lea
xchg
rorb
sbb
adc
cwtl
jb
fwait
repnz
in
stos
out
cmpl
loope
mov
cmp
jno
pop
inc
je
jmp
lret
dec
push
movsb
inc
adc
or
cmp
ja
out
rcrl
ljmp
sbb
jge
mov
insl
sbb
stc
cmpsb
push
lahf
push
pop
pop
inc
nop
inc
push
adc
adc
ds
mov
jne
pop
stc
pop
sub
fs
adc
call
cli
lcall
popa
lods
mov
jb
pop
push
dec
and
data16
insb
sub
sub
les
aad
ljmp
mov
dec
mov
sahf
sub
int
cs
pop
ljmp
or
xchg
cwtl
sarb
imul
js
xlat
daa
add
call
adc
lcall
shll
jne
sub
mov
lods
orb
leave
in
mov
imul
sbb
mov
into
jge
call
iret
ret
loop
mov
cmp
and
movsb
sub
adc
and
inc
lods
pop
mov
add
lods
std
nop
and
fadds
fcoms
cs
mov
xchg
je
adc
xor
jns
fisubrl
call
in
mov
mov
mov
jns
daa
sbb
and
jbe
stos
pop
ja
test
xor
lods
push
push
test
mov
les
and
cli
add
dec
sub
clc
jecxz
out
inc
cmc
std
cmp
cwtl
or
fwait
sti
adc
xor
xor
jp
jle
push
ficompl
cmc
jns
imul
sahf
cld
push
or
mov
push
addb
mov
bound
sbb
mov
bound
cs
push
push
pop
outsl
mov
jmp
cwtl
adc
iret
outsb
push
gs
ret
dec
dec
fildl
sub
int3
mov
scas
dec
shl
dec
pop
sti
subb
push
fs
and
insl
cwtl
mov
stos
aas
subb
movsb
pop
mov
movsb
adcl
dec
cmc
cltd
and
fisubs
adc
add
insb
pop
inc
and
es
xlat
and
mov
repnz
jno
insl
xor
das
sub
sbb
mov
incb
fcomp
push
rorl
inc
loopne
mov
int3
add
inc
dec
movsb
or
xchg
push
shlb
add
sbb
je
andl
cmpsl
sbb
push
test
fistps
dec
jle
cli
xor
lods
add
movsb
or
in
xchg
inc
jne
ret
mov
lret
stc
xlat
mov
pop
or
sti
jno
int3
jns
aaa
aaa
repz
inc
cmp
push
aam
inc
andl
imul
pop
xchg
out
inc
mov
cmp
out
push
pop
mov
jmp
xor
mov
sub
and
call
push
out
leave
inc
push
gs
add
dec
inc
int3
mov
repz
into
mov
gs
and
adc
fmuls
scas
into
xor
dec
mov
add
sbb
int3
dec
sbb
outsb
sbb
jp
shlb
stos
mov
cwtl
push
cld
sub
mov
icebp
fcmovne
sub
ss
inc
mov
outsl
fwait
cltd
enter
sub
mov
mov
fwait
je
xor
jmp
aad
lcall
cld
sub
outsb
xor
push
mov
out
jmp
mov
ret
ret
out
shl
adc
mov
out
mov
jae
xchg
push
add
dec
repz
mov
repnz
dec
and
jno
xor
xchg
pop
inc
inc
or
rorl
xorps
orl
aam
adc
push
movsl
fcmovnu
push
and
pop
data16
hlt
mov
movsb
xchg
sbb
sub
sbb
sub
scas
sahf
cli
es
cmpsb
mov
sub
lods
fld
mov
pop
iret
jne
and
sbb
leave
pop
fs
xor
jmp
divb
xor
pop
sub
dec
inc
push
push
cld
and
stos
xor
test
cltd
and
stc
out
pop
dec
mov
push
dec
jbe
jmp
bnd
sub
fsubl
stc
push
lcall
stc
mov
jno
stos
aam
push
rcr
bound
pop
sahf
subb
fmull
testb
lods
xchg
push
add
dec
and
lods
push
loop
sbb
pop
jge
scas
cld
dec
mov
xchg
fdecstp
fistpl
mov
lahf
or
mov
out
xchg
add
or
and
xchg
hlt
inc
xchg
insl
xchg
xor
dec
xor
add
jno
mov
sub
sbb
scas
xchg
jb
cmp
add
jb
mov
sub
or
sbb
sub
pop
lods
mov
fsubl
mov
jl
es
jecxz
cmpsb
out
mov
ja
fdivs
insl
movsb
jae
mov
cmc
sahf
movsb
xchg
in
rcl
mov
sub
or
mov
mov
rolb
imul
xor
mov
sub
cmp
sarb
xor
lods
scas
inc
fcompl
lds
inc
cmp
js
stc
int3
test
pop
sub
sub
and
clc
ror
or
add
fdivrs
add
sbb
sub
dec
lock
js
sub
mov
xchg
shlb
lods
jns
fs
mov
outsl
xor
xor
ljmp
icebp
inc
inc
pop
and
push
jecxz
cmp
pop
push
jns
add
loop
outsb
andl
mov
adc
mov
pushf
mov
push
movsl
shr
push
cltd
out
cmp
sbb
xor
mov
shl
cmc
cli
out
scas
or
add
push
shlb
ret
mov
test
outsl
insl
in
iret
mov
xlat
mov
popf
sub
xor
mov
out
imul
or
mov
fiaddl
add
int3
add
push
lock
mov
sub
adc
stc
in
push
xchg
sti
lahf
push
sub
push
xchg
jo
push
jb
push
pop
xor
mov
pop
xorl
push
movsb
loopne
in
sarl
dec
shl
insl
mov
or
lahf
xor
push
lret
arpl
jae
sub
mov
sbb
push
jge
jp
mov
ja
call
inc
mov
mov
ljmp
add
insl
jecxz
fistl
out
fmull
cli
andl
jge
jmp
stos
xchg
insb
mov
lret
add
dec
aam
das
mov
mov
scas
inc
movsb
movsl
pushl
pop
outsb
lret
in
xor
mov
inc
iret
jne
ss
subb
pop
xor
cltd
arpl
jns
xor
movsb
negb
je
in
mov
sbb
mov
jb
adc
xchg
jae
sbb
push
xchg
inc
push
dec
fcoms
pusha
sbb
addr16
mov
gs
imull
mov
mov
into
js
pop
setno
fwait
add
cmp
lods
jl
or
insl
fadds
cmp
addb
ljmp
lea
mov
test
jmp
fdivrp
test
jge
mov
sub
pop
sub
imul
jmp
cmpsb
popf
sub
jge
into
adc
das
adc
outsl
xchg
or
jb
es
inc
jg
ret
icebp
aam
mov
mov
sarb
cmp
xchg
aam
movaps
ret
mov
sbb
cmpsb
pop
sbb
add
sbb
test
dec
ds
push
hlt
and
pop
cmp
dec
aad
insl
pushl
test
jns
xor
mov
leave
mov
mov
push
sub
xor
pushaw
imul
inc
testl
ficomps
xor
jp
or
xor
jl
fs
loope
notb
lea
and
test
dec
fxch
mov
add
push
xchg
adc
push
xchg
daa
leave
jmp
loope
inc
daa
lcall
inc
hlt
dec
hlt
and
or
mov
int
mov
pusha
daa
mov
push
outsl
sbb
xor
push
lahf
xor
mov
bound
adc
lret
sub
das
cli
mov
scas
mov
mov
xor
xor
addl
in
add
push
sub
vpcmpgtd
bound
xor
in
push
fimull
xchg
cmpsb
loope
jmp
jnp
leave
inc
adc
sahf
mov
mov
popf
outsb
or
cmpl
popf
dec
mov
mov
fnstcw
dec
jnp
jbe
cmpsl
orl
dec
push
and
xor
ret
mov
ja
dec
mov
pop
add
xchg
jne
xchg
cmp
xlat
sub
xchg
sahf
daa
mov
pmulhuw
push
mov
imul
lods
xor
mov
es
cmpsb
cmpsl
push
and
push
lcall
or
pop
out
mov
lret
sub
push
shrb
mov
and
out
lock
mov
adc
imul
test
mov
faddl
xor
xchg
or
sub
or
subb
or
adc
pop
inc
aam
js
lcall
mov
dec
mov
popf
sub
js
push
insb
test
out
sbb
fsub
sub
aaa
in
mov
mov
sub
insl
ret
pop
divl
inc
addb
je
xchg
int3
test
mov
sub
aaa
imul
aas
fcom
push
js
mov
out
or
xchg
imul
and
pop
mov
outsl
mov
push
adc
mov
mov
repz
jne
xchg
cmpsb
das
shl
mov
push
inc
mov
int3
stos
mov
aam
jnp
xchg
sbb
and
aad
outsb
and
mov
mov
or
pop
mov
sar
ret
enter
xorl
movsl
pop
jb
mov
icebp
adcl
sub
repz
insb
mov
arpl
mov
adc
or
repz
sub
jns
mov
xor
data16
dec
mov
mov
sub
std
xor
imul
sbb
test
mov
cmp
movsb
repnz
sti
xor
jbe
dec
push
lret
je
in
lock
xchg
xchg
into
mov
repnz
add
insl
mov
add
lock
jmp
in
mov
fistl
xor
jmp
mov
mov
lods
and
into
nop
movsb
mov
xchg
cmp
fisttpl
mov
in
push
cmpsb
xor
mov
jb
mov
adc
stos
in
test
push
mov
mov
pop
loope
ja
sbbb
push
adc
es
stos
xchg
pop
cmc
gs
cli
adc
dec
lcall
cld
insb
mov
mov
pop
cmp
dec
es
test
das
jno
jo
adc
int
mov
pop
xor
popa
pusha
bound
inc
sub
cmpsb
dec
dec
jo
outsb
test
cmp
xor
sub
inc
mov
jmp
cmp
sbb
push
dec
jp
xchg
mov
mov
fldenv
daa
push
mov
fstpt
adc
ss
mov
jmp
imul
inc
std
iret
hlt
push
adc
es
xor
mov
iret
loope
shrb
inc
xchg
ds
jle
movsb
mov
xchg
out
lea
sub
sahf
mov
incl
std
jp
inc
mov
sub
xor
stos
pop
out
inc
movsl
rclb
sub
sbb
mov
pop
sbb
sub
stc
cwtl
scas
push
fcmovne
mov
hlt
sub
fcmovne
and
jb
cmp
imul
mov
push
add
imul
dec
js
scas
mov
idivb
fcoms
loop
xor
cmp
xor
test
inc
notl
cltd
xor
cmp
call
xor
movsb
rorb
cmp
clc
test
into
icebp
xrelease
inc
je
xchg
add
aad
btc
movsl
lret
popf
adc
add
jae
stos
gs
imul
xor
insl
or
fnstenv
sbb
aad
stc
push
sub
adc
dec
or
xchg
stos
push
or
and
insl
psubw
sbb
call
push
outsl
sbb
adc
or
inc
dec
aas
or
scas
fldenv
mov
ret
jb
mov
xorl
ljmp
xor
add
jmp
into
push
sub
lret
sbb
push
fs
and
pusha
sub
fldl
cmpsb
push
cmc
and
cli
and
sbbb
and
mov
faddl
clc
in
adc
je
push
mov
fidivs
xor
push
dec
scas
out
inc
mov
les
repnz
cmp
push
cmp
pop
sub
popa
jmp
sbb
movsl
xchg
scas
cmpb
ja
jno
sbb
shll
push
mov
mov
add
push
stos
pop
das
bnd
imul
outsl
ret
enter
and
ficompl
loop
dec
jns
aam
add
sbbl
pusha
push
inc
xchg
subb
xchg
imul
add
and
jb
imul
inc
fbstp
mov
push
adc
jns
mov
sub
cltd
repz
lods
lods
out
push
dec
mov
loope
in
addr16
jbe
sub
dec
andl
fnstenv
int
lods
mov
subl
jle
xchg
or
call
pop
adc
scas
mov
gs
or
lock
or
adc
and
das
call
mov
es
ja
fidivs
sub
push
movsb
push
shrl
cli
cmp
stos
outsb
cs
imul
cmpsl
cmp
push
ficomps
hlt
ret
jnp
mov
rcrb
adc
dec
ret
xlat
inc
sub
shrb
xchg
jmp
pop
movsb
adc
jne,pt
stos
inc
dec
jne
out
adc
pop
insb
dec
sbb
adc
sbb
push
mov
add
jae
rclb
sub
fsubl
sti
sahf
jae
xchg
dec
out
pop
outsb
sbb
mov
pop
mov
out
sub
ret
int
push
adc
add
sub
lcall
xchg
into
xor
pop
mov
mov
jnp
and
mov
xchg
test
inc
out
bnd
jecxz
cmpsb
sti
iret
aam
cld
icebp
jae
aad
icebp
mov
mov
lods
add
fs
or
stos
inc
fmuls
push
or
add
pop
or
outsb
pop
jp
sub
cmp
scas
addr16
clc
push
mov
movsb
out
or
jp
add
push
mov
fdivs
les
shlb
sub
mov
jb
mov
pop
addb
or
cs
and
insl
loope
imul
pop
and
or
dec
jne
insl
fbld
pop
les
mov
sti
out
push
inc
mov
jo
cmpsl
cmpl
lods
sbb
bound
lret
xor
les
mov
psraw
stos
mov
movsl
rcll
int
rorb
push
icebp
sbb
jge
push
xor
push
sbb
mov
xchg
mov
pusha
lcall
cmpsb
dec
fsubrs
lods
xorl
test
push
jae
fwait
sahf
dec
imul
insb
test
or
stos
das
mov
jl
cltd
push
xor
loope
and
movsb
cmp
bound
and
test
fsubrl
fists
pop
data16
cmpb
fs
enter
pushf
push
or
iret
push
in
mov
sbb
jns
cmc
inc
loope
insl
rclb
das
or
loop
mov
imul
push
lock
sub
ret
ja
lcall
jne
repnz
repnz
shlb
dec
arpl
jo
cwtl
imul
test
inc
sub
lods
mov
loope
subb
jge
push
movsb
nop
int
ja
mov
cmpsl
sbb
mov
xor
in
fiadds
das
adc
push
xor
inc
mov
sbb
adc
notl
xchg
push
stos
out
dec
jmp
push
push
sbb
decl
cmp
out
mov
mov
out
or
ret
push
sub
test
xor
bound
xor
out
jno
jae
lcall
fisubl
mov
sub
add
adc
jmp
nop
push
mov
inc
cwtl
outsb
mov
xor
mov
cs
adc
cltd
les
cmp
cmc
sbb
sbb
cmp
cmp
in
test
or
test
or
adc
mov
stc
sahf
ljmp
call
arpl
xchg
data16
jecxz
sbb
test
cld
jmp
sub
pushl
dec
leave
push
adc
sub
sub
xchg
insb
shll
jo
les
das
push
mov
fldcw
xchg
jge
jbe
rcl
lcall
aaa
mov
and
nop
test
cwtl
pop
dec
adc
loope
mov
loopne
sub
push
xlat
mov
push
xchg
lea
xchg
ds
push
or
lds
push
sti
scas
mov
mov
mov
cmpsb
stos
into
mov
lret
add
daa
ficomps
cmp
jmp
cltd
cmp
sub
arpl
pop
fsubs
dec
sbb
cwtl
mov
xor
lret
lods
pushf
shll
lea
cs
je
sbb
sbb
jg
repnz
inc
lcall
pop
aas
movsb
iret
or
cltd
lods
lcall
repnz
aaa
cmc
push
loopne
ljmp
mov
xorb
push
jae
dec
stos
arpl
int
push
sub
cwtl
or
and
out
enter
xchg
mov
mov
sbb
and
and
jo
xor
pop
push
mov
sbb
repnz
mov
push
mov
jge
lcall
mov
popf
int3
fmul
adc
in
ret
test
and
insl
idivb
icebp
push
mov
vmread
jb
dec
mov
int
je
cmp
out
fiaddl
sti
fwait
outsb
pop
scas
repz
hlt
callw
out
mov
jg
sbb
dec
out
shlb
cli
sub
mov
bound
fs
rolb
adc
sub
cmp
das
push
stc
outsl
or
or
mov
fldt
not
outsl
popa
pop
pusha
clc
mov
out
or
mov
mov
ret
mov
orb
cld
insb
add
lock
add
arpl
movsb
in
inc
repnz
mov
xchg
setb
or
adc
mov
mov
js
scas
add
shll
dec
test
clc
push
push
mov
pushw
mov
loope
and
insb
xchg
sti
push
jae
lcall
adc
jno
lea
push
lcall
iret
repz
xchg
sub
jmp
jl
arpl
mov
addr16
test
les
mov
jae
adc
xor
mov
push
cmp
add
sbb
jge
in
xorl
aam
cmpsb
mov
add
idivl
addr16
mov
or
dec
push
adc
add
das
or
push
movsb
pop
xchg
dec
aad
sub
mov
sbb
shlb
das
sub
jle
cwtl
adc
pop
sbb
inc
cmp
js
fsubrs
arpl
add
sbb
xor
pop
scas
inc
jb
add
loop
xlat
mov
in
xlat
push
mov
cltd
push
icebp
je
dec
mov
xor
xchg
push
push
pop
clc
lods
insb
dec
and
outsb
sarb
push
cmp
dec
mov
loop
xchg
jne
jno
adc
lcall
mov
jae
mov
insl
dec
dec
lock
movsb
je
std
mov
je
dec
iret
add
xchg
mov
mov
icebp
std
jae
push
cmp
cmp
add
pusha
das
jge
stc
into
push
imul
int
movsl
repnz
jne
cmpsb
sub
sbb
mov
leave
mov
sbb
into
cmpxchg
adcl
cmpsb
push
sbb
hlt
adc
daa
das
pop
inc
mov
pop
cmc
lds
icebp
movsl
adc
or
out
mov
xchg
pusha
test
sbb
xchg
lea
jmp
sub
sbb
imul
dec
pop
andl
or
popa
pushl
addb
js
and
lods
scas
aam
lea
mov
dec
int3
cmp
call
pop
inc
jp
push
faddl
cltd
mov
cwtl
sub
rep
dec
cli
ss
out
lds
dec
adcl
sub
dec
scas
inc
inc
xchg
push
js
cmpsl
dec
test
push
sbb
add
mov
test
dec
mov
xor
jge
mov
mov
aaa
mov
push
jo
bound
iret
sbb
xchg
test
insb
xorl
lea
mov
hlt
mov
lret
stos
push
sub
push
mov
iret
ficompl
pop
jnp
cld
lods
push
adc
inc
xchg
aaa
mov
push
sbb
inc
lds
jl
mov
fs
push
outsb
bound
cs
stc
mov
push
jmp
std
pop
cli
movsl
mull
adc
pop
test
jmp
mov
add
sub
scas
sbb
iret
addb
and
push
call
call
stos
adc
sarw
push
mov
mov
nop
rep
imul
dec
sub
mov
je
pushf
cmp
adc
or
mov
icebp
adc
xchg
aas
dec
enter
out
inc
jae
stos
sbb
mov
fdivs
cmp
cmp
sub
call
mov
test
test
ret
movsb
jbe
cs
and
cli
jnp
jmp
dec
orl
fistl
rcrl
leave
cmpsb
sub
out
xor
jno
lret
out
cmc
mov
dec
mov
insb
xor
mov
dec
add
jae
add
inc
das
movsb
aad
sub
pop
loop
pusha
mov
leave
dec
push
mov
std
inc
aad
mov
jae
movsb
mov
and
pusha
mov
movsb
mov
jle
pop
ficoms
add
scas
mov
test
aam
or
insb
mov
lahf
call
mov
gs
inc
or
orl
das
mov
xchg
jb
mull
scas
cmp
in
jno
push
xchg
dec
cmp
loopne
dec
icebp
into
mov
sti
push
aaa
std
pop
out
js
mov
pop
sbb
and
shlb
hlt
test
pop
dec
in
repnz
mov
sub
jns
popf
out
or
add
adc
ret
into
jno
cmp
xor
xchg
jnp
xor
jbe
stc
hlt
enter
cmpl
lret
mov
sti
in
insb
jne
mov
les
outsb
and
jo
in
sbb
vmread
test
stc
xchg
fs
mov
rclb
fsubrs
dec
xor
aaa
xor
push
std
and
scas
cmpsb
jo
push
icebp
or
loop
sub
shrb
mov
rcrl
cvttps2pi
xor
pop
or
xor
fstpt
mov
fcoms
mov
adc
xor
mov
aam
cli
lahf
je
mov
in
lret
ljmp
fidivl
jns
mov
movsl
jmp
out
mov
mov
cmp
lods
push
aam
xchg
das
sti
sub
push
scas
call
xor
push
mov
into
loop
rorb
es
adc
pop
in
jne
fsts
sub
xor
inc
cmpsb
ss
lods
frstor
pop
dec
je
jno
movsb
sub
xor
lods
and
ljmp
dec
sub
mov
out
popf
ds
sahf
sbb
jns
jae
in
xorw
sub
mov
mov
mov
mov
mov
mov
ljmp
xor
std
enter
push
sub
movsb
jns
jge
mov
loop
std
movsb
mov
sub
in
ljmp
int3
test
mov
cmc
les
test
shll
pop
outsl
rorl
sti
cli
xchg
idiv
dec
xchg
lods
ret
jb
mov
fadds
xchg
xor
fimull
sub
aas
push
imul
jmp
mov
or
shl
je
cmp
outsl
dec
ja
add
lods
sbb
call
cmpsb
and
and
sti
mov
lods
jge
inc
cmc
pop
push
icebp
sbb
movsb
and
jbe
out
shlb
cmc
clc
xchg
and
jb
ds
mov
lods
push
icebp
adc
jb
mov
pop
cmpsl
shll
fildll
sub
add
int
xchg
and
call
sub
mov
mov
sbb
shrl
nop
adc
call
lds
pop
hlt
mov
jmp
scas
jp
fadds
jle
into
mov
mov
cmc
pop
ljmp
stos
adc
movsb
xorb
push
xorb
subb
sbb
push
mov
jb
mov
mov
mov
and
imul
cli
and
push
into
mov
sahf
scas
aaa
or
mov
ret
cli
adc
dec
xlat
in
dec
sahf
ficomps
pushf
lcall
add
in
adc
cmpsl
pusha
sub
sub
loopne
jne
dec
cmp
dec
jmp
xchg
mov
andb
mov
or
lcall
jo
aam
adc
shl
call
mov
add
xor
sub
push
aam
sub
pop
out
leave
mov
movsb
lret
sbb
movsl
and
mov
push
movsb
clc
adc
xor
sub
inc
cs
les
xlat
movsb
cli
xlat
xchg
enter
lret
mov
adc
add
psubb
mov
cmp
leave
sub
jbe
cmp
jge
mov
inc
cmp
adc
jmp
fidivl
bound
data16
pop
mov
cli
lods
xor
add
mov
jns
mov
je
mov
add
jns
pop
in
sarl
pusha
mov
sub
call
and
das
lods
lods
dec
add
cmpsb
movsb
mov
mov
jne
ljmp
push
mov
and
stos
sbb
xor
fnstenv
add
or
jbe
sub
les
push
mov
adc
or
cmp
je
and
mov
adc
shl
scas
mov
push
push
jle
or
cwtl
add
pop
bound
mov
mov
inc
jbe
clc
addr16
enter
lcall
and
mov
push
and
pop
das
mov
and
mov
mov
sub
mov
mov
dec
sub
loop
push
add
dec
cmpsl
enter
cmp
icebp
movsb
pushl
dec
ret
std
call
inc
arpl
dec
movsl
sub
insb
dec
pop
popa
sbb
test
inc
mov
lea
jne
mov
sbb
sub
cmpsl
insl
sub
sbb
rcll
jle
aaa
mov
xor
adc
push
jge
pusha
pop
mov
mov
push
rcrl
cmp
adc
enter
xchg
imul
mov
stos
nop
mov
orl
insb
outsb
cs
lods
aam
push
montmul
cmpsb
subl
dec
fsubrp
fsubrs
jg
jno
xchg
mov
xor
push
mov
sbb
xor
ljmp
cs
mov
pop
insl
and
rclb
jnp
movsb
jmp
nop
push
mov
bound
repz
mov
out
pop
sub
arpl
xchg
jno
sbb
jne
lock
push
aaa
aaa
fs
mov
add
test
mov
popf
cmpsb
repnz
ss
push
push
inc
mov
fists
stos
rolb
insl
pop
imul
pushl
jbe
push
fistpl
xchg
mov
int3
lods
cld
sbb
pop
inc
decb
pop
add
sub
sub
leave
fsubrs
or
dec
dec
add
sub
push
push
lods
shlb
into
push
enter
leave
mov
mov
aam
test
out
adc
ljmp
mov
xor
pop
rcr
xchg
push
test
stos
mov
insl
push
stc
pop
lcall
ret
push
cmp
gs
shlb
insb
jb
scas
daa
xor
int3
dec
pop
mov
das
scas
bound
icebp
loope
loop
std
push
outsl
psrlq
add
mov
cmc
out
flds
mov
jb
fwait
pop
pop
xorb
push
sbb
lods
iret
sbbl
rorb
sub
mov
dec
mov
adc
sahf
or
sbb
mov
mov
repz
dec
mov
ljmp
dec
or
cmp
mov
sbb
add
sbb
sub
jg
and
mov
loope
add
cmp
movsb
dec
scas
ljmp
cs
subb
jl
fcmovu
stos
and
jmp
jno
les
aad
ret
pop
mov
dec
test
pop
and
or
lods
jns
adc
fisubs
push
pop
jmp
dec
movsb
aas
fsubrs
jp
adc
and
mov
movsb
mov
pop
outsb
add
sarb
push
jmp
insl
inc
repnz
jno
andb
add
aaa
push
mov
push
in
outsb
fs
cmc
lcall
sub
sub
jbe
mov
fstl
jp
mov
push
icebp
mov
int3
fucompp
fsubs
push
or
add
sbb
ficoml
inc
movsb
in
sbb
jmp
es
mov
or
xchg
int
int
loopne
mov
xor
or
ljmp
fcomi
mov
mov
jle
lahf
enter
movsl
cmc
xor
xor
mov
sbb
adc
pop
test
push
cmpsl
adc
mov
ljmp
inc
pop
sub
inc
das
mov
xchg
cwtl
into
dec
enter
adc
mov
dec
sbb
dec
loope
add
jb
rcr
xchg
stos
ljmp
lret
cmp
movups
xchg
mov
repz
adc
sub
xchg
push
mov
cld
push
mov
or
lods
add
mov
add
fldcw
mov
pushf
daa
insl
add
mov
sub
xor
dec
mov
adc
jno
dec
add
jno
add
xchg
jb
sbb
sti
cs
clc
out
push
mov
jle
stos
popa
or
repnz
les
or
or
sbb
pusha
jno
movsl
popf
adc
stc
push
push
scas
cli
cmp
stos
daa
imul
ret
iret
cmp
outsl
mov
scas
icebp
add
cmp
clc
sti
cmp
cmp
jo
sub
adc
mov
int
pop
imul
mov
mov
stos
in
popa
and
adc
cmc
fadd
je
jb
stos
mov
mov
dec
dec
mov
lret
inc
push
sub
mov
lea
mov
mov
push
arpl
dec
lret
pop
jl
pop
cmp
sub
pop
sarb
into
or
pop
js
and
cld
pop
push
test
pop
inc
outsb
adc
adcb
and
push
aad
sbb
sub
mov
jae
push
push
push
pop
xor
inc
into
jnp
leave
dec
jge
sbb
stc
cmc
dec
and
test
ja
mov
adc
jge
test
clc
or
sub
lods
test
jb
push
movsb
xor
dec
push
popf
fwait
jns
dec
push
pop
inc
repnz
ret
fdivr
lret
sub
inc
xchg
xor
jno
out
icebp
push
lcall
test
sub
cwtl
push
sahf
push
mov
jns
sub
cmc
xchg
push
cmpsl
adc
cmc
ljmp
mov
mov
in
fistps
mov
in
pop
jo
aas
mov
mov
gs
arpl
gs
int
je
scas
into
mov
mov
int
or
idivb
jb
arpl
xor
mov
or
mov
sti
cwtl
shll
and
test
mov
dec
vmwrite
fcmovb
cmpsb
mov
in
loopne
ret
rcl
es
add
xchg
das
dec
mov
jge
jp
dec
arpl
xorl
invd
imul
inc
out
fldcw
dec
jmp
out
adc
mov
insl
ficoml
aaa
pop
divb
xor
cli
jno
js
lcall
xchg
cld
lcall
aam
mov
stos
addr16
xor
outsl
pop
jae
jne
in
mov
clc
dec
cli
inc
add
arpl
pusha
push
insl
fsubrs
call
dec
sub
into
jl
mov
dec
rolb
xchg
test
mov
negl
les
push
lea
scas
cmp
xor
mov
movsl
sahf
outsl
lods
and
xchg
imul
cs
fcoml
decb
data16
sbb
in
aam
push
sbb
setnp
dec
inc
dec
add
and
dec
lods
pop
enter
xor
xchg
add
scas
lahf
push
repnz
inc
cwtl
xchg
fistps
add
xor
pop
out
aam
inc
out
test
mov
mov
dec
roll
and
add
data16
imul
cmpb
fisubrs
add
push
in
cmp
cmc
sahf
xchg
dec
js
fnstenv
lcall
hlt
adc
pop
scas
ret
nop
inc
rcrb
repnz
bound
cmc
cld
xchg
aas
add
mov
and
or
push
xchg
insl
and
mov
fwait
add
mov
sbb
sbb
out
pop
push
scas
roll
stos
mov
faddl
mov
mov
jb
ja
lret
add
inc
addl
iret
lcall
pop
leave
pop
mov
sbb
lret
xchg
mov
cmpsl
jne
iret
gs
mov
fimuls
mov
jb
and
cmp
test
sub
stos
inc
mov
xchg
push
push
enter
ss
sbb
jecxz
bound
fisubl
xor
les
jecxz
cmpsl
dec
lods
sub
pop
inc
es
sub
xchg
jbe
push
inc
popa
xchg
dec
aad
arpl
jns
andb
cli
pop
in
jno
jg
mov
repnz
in
out
das
and
insl
and
enter
xor
ljmp
pop
repnz
add
and
shl
cmc
lods
inc
xchg
jne
and
add
sub
add
ss
mov
js
and
cld
mov
xor
mov
and
cmp
jle
cmp
inc
push
jno
pop
stos
adcl
call
dec
addr16
lods
xchg
sub
jns
push
lds
dec
pushl
aad
insl
ss
add
mov
and
xchg
xchg
xchg
cmpsb
std
ficomps
sbb
aam
mov
lods
les
and
push
jns
inc
lcall
jnp
jns
cltd
loop
arpl
mov
adc
dec
jp
inc
push
insb
test
and
xor
fdiv
push
add
lods
popa
mov
cmp
bound
lods
ret
pop
ret
adc
and
push
outsl
fs
lock
adc
mov
or
fisubl
mov
pop
adc
push
in
fsubrs
xlat
ficoml
fidivrl
xor
shll
cmovle
les
jns
mov
insl
jae
jno
push
and
test
sub
icebp
mov
push
lcall
xor
popl
or
pop
push
dec
stos
mov
lods
push
scas
loopne
out
and
sub
sbb
or
iret
cs
adcl
aaa
mul
lahf
cmp
fdivs
push
iret
in
pop
mov
es
mov
or
sub
push
push
fcomps
mov
cli
xor
mov
mov
arpl
cld
repz
xor
sbb
jecxz
or
sub
jbe
and
stos
out
mov
push
cli
and
fwait
pop
xchg
jne
cmp
das
push
pop
into
inc
stos
hlt
jp
inc
dec
mov
cld
mov
push
cmp
lods
mov
addr16
aad
arpl
out
mov
pop
addl
insl
mov
lea
sbb
andb
jb
leave
mov
pushf
cli
ss
movb
cmp
lods
mov
test
push
lods
sub
daa
int3
fs
push
xchg
lea
push
imul
fs
fsubr
mov
jge
push
mov
aam
call
loope
mov
xor
fs
xchg
test
mov
scas
adc
mov
add
arpl
xor
sub
sub
pop
mul
insb
xchg
pop
pushf
cmp
mov
in
xor
cmc
cltd
adc
ja
enter
addb
sahf
cmc
mov
pushf
mov
xchg
pop
xchg
imul
sbb
sub
jg
das
iret
xchg
mov
mov
xor
adc
dec
add
gs
loope
pop
push
pop
les
push
inc
lock
sbb
jno
int3
push
xor
int
xchg
xor
push
jnp
push
in
add
addr16
es
pop
mov
sub
aaa
or
mov
ljmp
pop
fwait
xchg
mov
or
rcl
inc
dec
loope
insb
sti
icebp
or
or
rcrl
das
mov
dec
mov
xor
fildll
mov
mov
pop
fistpl
jb
mov
cld
popf
arpl
push
mov
out
dec
outsb
and
mov
jne
loopne
jno
ss
mov
les
mov
cli
sub
fdivp
jns
and
lods
imul
cmp
out
adc
jns
subb
stos
cmp
xchg
cmc
or
jb
pop
jge
sbb
add
iret
cmpsb
mov
test
outsb
push
or
push
sub
add
xor
push
lcall
mov
xchg
lods
js
in
mov
lds
push
adc
stos
enter
clc
adcl
imul
ret
push
insb
push
push
adc
xlat
mov
in
pop
mov
push
mov
mov
out
and
push
cmp
shlb
and
int3
stos
jg
dec
sub
sbb
cwtd
or
mov
mov
cmpsb
stos
lods
test
movsb
mov
and
lods
fistl
mov
pop
jge
ret
lods
cmpb
scas
dec
movsb
inc
iret
xor
cmpsl
sbb
and
sbb
pop
ret
mov
outsb
dec
jns
mov
fwait
std
hlt
or
lcall
lods
cli
sub
xor
mov
push
clc
sbbl
sti
jecxz
push
mov
xor
testl
mov
pop
jae
jmp
loope
fistl
pop
jae
fdivp
add
test
out
aaa
mov
xor
add
sub
cmp
cld
push
cmc
adc
rclb
repnz
into
pop
push
inc
out
add
jge
mov
fwait
lods
mov
pushf
adcl
adc
iret
xchg
jge
xchg
dec
subb
icebp
lret
addl
sbb
stos
ret
mov
aaa
ret
xor
or
jmp
xchg
icebp
stos
maskmovq
xchg
int3
adc
mov
icebp
out
lahf
or
jle
adc
cmp
xchg
cmc
sbb
mov
mov
pop
inc
outsb
mov
dec
pop
cmpsb
fisubrs
movsb
mov
sbb
dec
push
sub
stos
pop
enter
sahf
sub
out
cmp
ljmp
and
jg
test
sub
mov
roll
repz
xchg
push
mov
xor
and
xchg
pop
mov
lods
iret
rorl
stos
xchg
movsb
imul
adc
cwtl
push
dec
pop
sub
insl
jl
bound
dec
mov
jge
daa
rcrb
push
jnp
cmp
jbe
addr16
insl
sahf
mov
outsb
xchg
jb
movsl
and
xchg
hlt
or
adc
xor
bound
sub
inc
int
inc
movsb
leave
push
xchg
iret
sbb
push
mov
add
mov
lahf
les
inc
and
jge
int3
xchg
adcl
iret
ss
sub
pop
out
fdivrl
mov
shlb
outsb
inc
jbe
mov
pop
lret
push
shl
xor
out
aaa
fstpt
adc
sub
xor
xchg
das
sub
psubb
lcall
or
cmp
xorb
mov
mov
ret
repz
loope
adc
pop
sub
or
or
add
push
stos
sub
pusha
mov
mov
mov
mov
xor
mov
push
add
inc
jns
in
fsts
jno
adc
pop
add
sbb
adc
pop
push
fdivrs
adc
ret
scas
ror
subb
xchg
int
sbb
or
push
aad
call
or
test
sbb
lcall
into
sub
jge
aas
jbe
loope
xlat
pop
xlat
fsubrs
das
hlt
cmp
mov
iret
lds
pop
scas
jmp
mov
push
lods
mov
pop
cmc
adc
sbb
insl
scas
inc
aam
call
loop
repz
jno
push
jno
out
sarl
add
add
inc
stc
and
cmpsb
in
dec
or
cmp
jg
scas
jg
movsb
xchg
adc
jge
adc
hlt
enter
and
dec
adc
repnz
es
mov
xor
scas
adc
fists
fbstp
sbb
add
out
xor
sahf
sbb
lret
mov
mov
sbb
lock
jl
and
int3
aad
int
insb
out
dec
sub
mov
cmp
out
cld
mov
aad
cmpl
iret
push
daa
cmp
nop
jo
and
mov
js
sub
mov
repz
in
push
loop
mov
and
leave
inc
sbb
adc
inc
lods
in
xor
inc
cmp
call
repz
popf
and
xor
ss
sub
xor
push
and
mov
lahf
or
and
ljmp
stos
mov
cmp
xchg
popa
dec
jge
lret
and
cmp
stos
ja
inc
into
sub
adc
sub
scas
mov
repz
lea
mov
pop
test
mov
movsl
mov
jns
xchg
scas
call
ficomps
pop
movsb
rolb
inc
loopne
call
subl
out
fs
hlt
or
mov
mov
xor
push
ljmp
xor
inc
jmp
jo
cld
cld
mov
and
or
or
iret
mov
inc
lea
sub
imul
inc
xchg
inc
aaa
cld
mov
cli
xor
and
dec
sbb
cmc
aam
gs
rol
inc
call
pushf
ss
lret
ja
fcomps
mov
bound
in
mov
mov
sub
jno
mov
push
push
jmp
xchg
cmp
pop
sbb
sub
imul
and
push
cs
xor
cmp
cs
and
cmc
mov
lods
inc
xor
cli
outsb
fmull
sbb
mov
xchg
xlat
mov
into
rcr
pop
loopne
xlat
aad
mov
jns
push
mov
mov
pop
cmc
jnp
push
jno
rcrl
sti
and
fcomi
fsubl
xor
movsb
mov
sbb
pop
lea
pusha
xchg
out
subb
in
or
mov
fcoml
outsl
add
out
aam
loope
push
or
xor
cmp
jno
and
jmp
mov
hlt
out
aad
or
fsubs
daa
sub
cmp
ljmp
jb
xor
push
mov
mov
imul
adc
push
jmp
lcall
loop
cmp
jae
xchg
jne
cmp
sub
jg
jns
add
and
movsb
mov
mov
mov
lcall
mov
movsl
xchg
shr
imul
ljmp
cmp
arpl
dec
xchg
adc
xor
sahf
sub
xchg
push
sti
aam
jnp
inc
mov
iret
enter
repz
mov
aaa
js
lds
hlt
pop
pop
mov
in
loope
in
inc
ret
pop
jmp
pop
mov
mov
sahf
icebp
mov
iret
and
mov
aad
inc
xlat
pushf
sub
push
xchg
movsb
pop
clc
into
mov
xchg
orl
dec
dec
mov
fdivl
mov
xchg
ficompl
loopne
mov
in
les
mov
icebp
mov
hlt
xor
mov
jle
lods
repnz
test
dec
fisttpl
mov
iret
xchg
aam
out
mov
icebp
mov
dec
mov
outsb
jge
sub
push
push
adc
dec
fmuls
lods
ja,pt
xchg
jl
sbb
inc
idivl
decb
sub
pop
jg
pop
mov
mov
push
mov
enter
xchg
jne
push
mov
dec
jmp
test
inc
jns
sbb
jg
je
movsb
inc
jbe
rorb
pusha
mov
push
out
imul
mov
lods
ret
jne
mov
shlb
xor
pop
or
das
repz
jle
es
pop
dec
pop
enter
inc
mov
pusha
test
scas
js
xor
sub
lock
jmp
mov
push
and
insb
push
push
lcall
dec
ss
and
jge
push
in
lods
outsb
shlb
cmpsl
or
inc
lock
dec
adc
fadds
push
push
mov
out
adc
or
inc
jo
jge
in
mov
ret
pop
mov
dec
lret
pop
movsb
xor
xchg
mov
nop
push
andb
loopne
and
cli
in
mov
adc
push
stos
in
mov
push
addr16
icebp
pop
popa
clc
in
lds
lret
mov
dec
or
outsl
mov
push
pop
cmp
scas
pop
xchg
push
dec
orl
scas
pop
xchg
aam
adc
sub
pop
jp
sub
xchg
lds
lods
sub
push
cmp
lret
scas
loope
lock
push
xor
adc
cltd
insb
sub
movsb
jge
mov
lods
xor
adc
add
ljmp
mov
fwait
mov
push
jbe
movsb
stc
les
jl
inc
rorl
cmp
xchg
push
leave
sbb
lret
repnz
lea
ja
pop
into
bound
mov
dec
cmp
mov
subl
subb
gs
cs
lds
mov
ret
ret
sbb
pop
orb
mov
pop
xchg
fcoms
pop
inc
push
mov
outsb
hlt
into
icebp
in
pop
lock
cmc
das
cmp
imul
lods
out
std
sub
jge
in
stos
idivl
loope
cltd
movsl
mov
rep
add
ja
push
inc
sbb
bound
mov
dec
lcall
inc
dec
add
xchg
jnp
mov
outsl
je
lea
insb
sbb
xchg
shlb
movsb
daa
pop
test
in
pop
fnstcw
js
repz
push
hlt
sahf
and
dec
in
cmp
pop
lcall
clc
imul
fs
movsb
aam
fisubrl
or
icebp
into
sbb
nop
in
sbb
shrl
icebp
lods
sahf
clc
ror
adc
xor
xlat
repnz
popf
sbb
mov
inc
push
push
sub
sub
std
lcall
fdiv
in
mov
sub
outsb
loope
add
jb
push
dec
push
lods
xchg
test
faddp
inc
loope
jno
pop
dec
pop
xchg
repnz
and
adc
mov
fstps
dec
push
jnp
in
push
loop
pop
cltd
xchg
jo
mov
and
bound
dec
adc
add
or
xchg
insl
ret
lcall
pushf
fcmovu
jno
xor
inc
lds
popf
or
push
pop
movsb
ss
repz
xor
mov
add
fyl2xp1
pusha
ret
in
pop
loope
xor
xbegin
mov
icebp
cltd
shrl
inc
icebp
mov
and
or
pop
pop
insl
mov
lret
or
cmpsl
adc
dec
xchg
pop
arpl
lock
lret
nop
in
pop
repz
aad
mov
out
and
ss
xor
or
jbe
add
lds
into
sub
sub
sub
or
xor
into
xchg
inc
cli
movsl
pop
call
out
gs
das
sub
stos
in
jl
push
lea
or
fcomps
icebp
inc
add
bound
jecxz
out
hlt
sbb
decb
inc
xor
iret
popa
or
mov
iret
sub
into
pop
mov
into
hlt
ficompl
sahf
jg
pop
dec
lock
lcall
add
lds
cltd
test
gs
mov
mov
pop
sbb
add
mov
mov
mov
inc
lods
fdivrs
push
jg
sti
hlt
lods
fs
test
sbb
push
push
adc
mov
cmpb
inc
dec
and
es
add
loopne
dec
enter
insl
loop
mov
mov
pop
fcoms
dec
loope
mov
jp
lods
fcompl
enter
les
loop
lcall
ss
fadd
mov
roll
pop
sbb
xor
hlt
lret
std
pop
sub
in
outsb
mov
shll
mov
lahf
jns
or
int
add
sub
sbb
scas
add
fidivl
add
jno
mov
sub
push
out
popa
sbb
xchg
mov
imul
stos
mov
cs
inc
fs
popa
mov
push
mov
testl
imul
and
movsb
sub
aam
out
pusha
mov
movsb
leave
out
nop
sub
adc
cmp
aad
ds
jne
jae
jb
mov
mov
push
add
stc
dec
aam
dec
movsb
test
mov
sub
les
xor
and
cmp
xor
cmp
pusha
mul
mov
and
lods
repz
pusha
call
cmp
insl
addr16
mov
or
xchg
outsb
into
outsb
xchg
mov
jbe
add
out
jmp
sbb
push
movsb
daa
and
and
test
add
test
gs
aad
sub
mov
xchg
or
arpl
outsl
pop
add
aam
out
mov
push
xchg
nop
mov
push
sbb
push
xchg
xor
cmp
lock
lret
repnz
inc
aad
jne
mov
pop
movsb
mov
dec
jno
or
adc
je
cmpsb
or
dec
lods
addr16
stc
cmp
adc
jmp
sub
sbb
pop
pusha
jo
mov
dec
ds
sbb
jae
lods
and
sub
loope
mov
cld
je
push
mov
mov
lret
mov
cmp
jmp
fimull
popf
lcall
lcall
mov
pusha
das
push
mov
adc
sub
lcall
mov
add
hlt
mov
in
dec
lods
sub
push
dec
leave
pop
mov
sahf
mov
orl
imul
mov
pop
push
les
adc
pop
xchg
test
aas
lcall
cltd
fwait
sarl
mov
shll
cli
push
or
scas
xchg
jp
dec
jmp
push
inc
lock
orb
pop
and
and
mov
loop
leave
mov
fs
fdivrs
xchg
mov
cmp
andl
inc
enter
dec
pusha
in
int
sbb
cmp
popa
rorb
dec
xor
rorl
add
cld
pop
out
mov
push
cmp
into
adc
adc
rorb
mov
mov
lods
cmp
es
add
xor
bound
pop
test
sub
xor
mov
pop
not
sub
sarl
mov
test
mov
xchg
inc
hlt
and
adc
mov
jg
add
pop
sbb
mov
mov
test
bound
shll
jmp
sub
lret
shll
push
push
cmp
cmp
cmovns
rcrl
xor
lea
or
test
sbb
imul
inc
mov
xlat
scas
xor
bound
sbb
xor
ljmp
mov
outsl
int3
mov
leave
mov
ljmp
cs
stos
push
movsb
insb
or
mov
inc
stc
xchg
inc
scas
xchg
pop
and
lock
mov
xchg
leave
jp
push
sub
lret
pusha
lds
inc
lret
pop
cmp
mov
jecxz
mov
and
xchg
push
nop
add
jecxz
jp
cwtl
icebp
sbb
sub
and
or
sub
movsb
lea
in
rcr
sti
sbb
stos
sbb
das
lahf
jge
scas
mov
mov
mov
add
cld
ret
orb
adcl
out
mov
aad
pusha
arpl
jb
dec
test
mov
dec
mov
adc
and
push
and
stos
insb
rcr
cs
mov
adc
leave
cmpsl
push
bound
jae,pt
iret
or
out
push
scas
mull
fidivrl
pop
xchg
pop
decl
pop
cmc
push
in
sarb
iret
sub
stos
xor
mov
lahf
lcall
cmp
andb
mov
bound
adc
dec
xchg
jge
xchg
cmp
ficoml
inc
or
mov
sbb
pop
pop
xchg
icebp
and
pusha
push
add
mov
xor
push
xor
mov
icebp
pop
dec
loop
arpl
cmp
popf
repz
shll
sahf
lock
cmpsl
or
push
pop
mov
jecxz
ret
jns
push
daa
mov
sbb
sub
int3
fwait
inc
sub
mov
and
inc
movsb
fimull
inc
mov
inc
lds
push
push
push
add
repz
xchg
in
rol
push
movsb
mov
sub
mov
jl
xor
addl
scas
cmpsb
jl
mov
je
jae
fs
xor
sbb
xor
adc
jno
ret
mov
imul
push
or
xor
lds
out
mov
and
jb
push
sarl
sbb
mov
dec
mov
pop
andl
and
decb
dec
or
stos
js
pusha
push
adc
sbb
push
and
pop
pop
push
test
movsb
add
mov
jb
stos
fldt
addb
jmp
sbb
addl
lods
jmp
jb
pop
or
mov
aam
mov
les
outsb
xchg
push
mov
lods
mov
fsubl
add
push
cs
cmp
mov
pop
pop
adc
cmpsl
fdiv
lret
mov
xor
mov
addl
pushl
add
mov
sbb
mov
lcall
es
sarl
lods
or
aas
scas
and
mov
add
aas
scas
std
xchg
and
sub
pop
xor
fcomi
out
rcrl
xchg
sbb
xchg
or
adc
ds
jne
cmp
xor
or
je
pushf
lds
inc
push
cmpsb
divl
sbb
pop
jecxz
push
xor
mov
cld
outsb
fwait
cmpb
mov
or
xor
outsl
push
xchg
pop
repnz
push
ja
shrb
decb
ret
xchg
inc
adc
mov
and
data16
hlt
decb
outsb
add
lcall
lods
mov
es
popf
xchg
push
cmp
stos
cs
xchg
cld
add
hlt
xchg
les
push
icebp
jb
cli
pop
mov
xchg
mov
mov
sbb
jns
mov
data16
in
inc
mov
push
aaa
mov
jns
sub
inc
cmovp
stc
test
cld
cltd
adc
rcrb
adc
sub
xchg
arpl
clc
out
push
out
push
inc
test
xchg
shll
sub
lret
adc
movsl
inc
sub
inc
movsb
jecxz
xor
xor
push
cwtl
repnz
lock
loope
jo
lods
xor
mov
jnp
xor
repz
test
std
jbe
ret
xor
mov
repz
dec
cld
mov
out
jp
and
push
add
outsb
mov
cmovbe
dec
dec
mov
jge
xor
adc
sbb
adc
mov
movsb
aam
cli
mov
rcl
cli
in
mov
push
loop
xor
and
xchg
cld
mov
bound
iret
or
test
ficompl
push
mov
mov
mov
sbb
cld
ficompl
xchg
inc
inc
adc
dec
jb
adc
test
jo
aam
test
pop
cmp
nop
outsb
add
dec
out
jge
sbb
push
xor
sbb
cld
dec
add
in
pop
xor
cmpsb
xchg
cmpsl
mov
int3
arpl
stos
or
mov
jo
pop
lahf
mov
es
sbb
mov
lds
insb
and
push
mov
lcall
cltd
and
push
outsl
xor
dec
add
xchg
es
sub
in
dec
loopne
test
xor
push
jno
aad
and
jl
push
mov
mov
outsl
in
scas
xchg
icebp
inc
jge
jmp
xchg
int3
lds
enter
inc
aam
xor
xor
lods
or
dec
mov
aam
xchg
icebp
jns
js
cmp
xor
add
pop
mov
shll
jmp
push
leave
cmp
lcall
fsubr
insl
cmp
jl
loope
xor
push
pop
out
outsl
sbb
fwait
decb
dec
xor
arpl
and
xor
mov
aam
push
pop
push
je
outsl
ja
push
mov
pop
test
sub
pop
movsb
dec
subl
dec
xchg
mov
mov
enter
xor
imul
jbe
outsl
xor
mov
insl
test
int3
push
add
fcmovb
das
or
jecxz
or
dec
jl
mov
xchg
lds
pop
cmpsl
enter
jp
pop
xor
lret
sbb
movsb
in
sub
push
and
push
movsb
jns
cmp
popf
cmpl
sbb
ss
test
and
mov
je
lock
pop
scas
and
xchg
loopne
lods
lahf
cmc
test
jb
or
push
aas
loop
in
cld
push
out
lock
inc
imul
or
and
cmc
and
mov
add
out
cmp
nop
fisubrl
sarb
cmp
test
or
mov
sbb
mov
sbb
mov
push
jb
movsb
loop
push
sahf
pop
insl
pop
mov
lcall
and
push
sub
dec
add
pop
fnstcw
inc
xchg
mov
xchg
adc
sub
push
scas
lds
out
mov
push
rcll
fwait
cli
and
jnp
in
or
js
es
js
push
sbb
call
jecxz
lret
cmp
xor
stos
xor
cmp
cmp
jno
add
push
movsl
adc
add
and
sbbb
jnp
sbb
std
pop
mov
jmp
sbb
xor
push
into
lods
jae
mov
fidivrl
andb
jns
outsl
outsl
jmp
push
icebp
xchg
sbb
repz
or
fldl
in
or
xor
adc
ret
add
cld
xor
cmp
orl
arpl
sub
stos
push
xor
cltd
or
hlt
test
push
sbb
xchg
loope
push
xchg
jb
imul
pop
jmp
cmp
repnz
insl
arpl
xor
xlat
mov
aam
dec
pop
arpl
jae
jl
sub
cltd
leave
push
add
std
xor
inc
and
lds
out
cmp
icebp
lock
lods
cmp
hlt
ja
scas
out
cld
push
inc
pop
scas
inc
jb
rolb
xchg
stos
pushf
pop
sahf
mov
aam
sub
sbb
test
push
dec
push
mov
xchg
add
cmp
scas
mov
sub
dec
shll
mov
pop
scas
adcb
cmp
lret
adcb
add
push
add
leave
mov
movsb
aaa
jns
cmp
inc
out
hlt
inc
fmul
cmpsb
jecxz
xchg
aam
mov
stos
pop
mov
push
icebp
repnz
ret
push
dec
jmp
imul
mov
pop
sub
shlb
mov
into
punpckhdq
mov
sbb
imul
cwtl
mov
int3
adc
dec
in
nop
lock
jns
rol
jbe
scas
jno
jbe
testb
pushf
ficompl
pop
jnp
lods
out
mov
dec
rcl
dec
std
or
dec
repz
dec
mov
shl
in
sti
sub
subl
cmp
in
dec
insb
or
xor
xchg
stos
push
push
push
popa
sub
push
mov
jae
repz
mov
gs
sub
dec
xor
inc
movsb
xchg
xor
lcall
mov
jmp
les
xchg
lcall
fwait
enter
lgs
arpl
test
cld
mov
adc
adc
ja
mov
mov
jecxz
fst
aas
dec
jg
sub
adc
hlt
test
mov
and
mov
in
add
clc
sbb
cmp
push
push
fsts
les
repnz
punpckhdq
push
icebp
add
lods
push
sbb
mov
mov
movsl
push
push
jo
bound
repnz
jg
sub
push
adc
dec
fwait
out
jo
xchg
mov
cmpb
mov
and
addr16
inc
sub
inc
mov
cmc
cmp
pop
inc
inc
loope
mov
addl
loope
lods
ret
cmpl
adc
popa
push
xor
mov
sub
push
jae
fwait
xor
sub
lret
icebp
jo
popa
mov
cmp
bound
push
sti
or
add
mov
ds
cmpsb
jge
pop
push
mov
mov
pop
mov
pushf
mov
xchg
in
rolb
or
lea
adc
cmp
mov
imul
push
movsb
and
imul
dec
push
jae
mov
cmp
aaa
int3
jg
in
mov
sti
xchg
and
mov
sub
arpl
inc
das
movl
mov
stos
je
xchg
lods
push
sub
test
outsb
dec
mov
and
insl
scas
push
pop
je
adc
loope
add
arpl
inc
in
stos
movsb
mov
ljmp
stc
lds
aam
sub
rolb
mov
andl
xor
outsl
movsb
das
sub
sbbl
and
stos
ljmp
sub
xchg
dec
ret
adc
mov
daa
and
xchg
add
mov
fldt
mov
fcos
mov
fs
mov
xorb
cmpsb
insl
ret
xlat
and
jo
cli
mov
sbb
cmpsb
jge
aas
es
jp
or
stc
xor
sahf
sbb
sub
mov
mov
inc
push
jmp
mov
iret
mov
sub
shl
mov
add
add
jns
add
push
cs
sub
fsubs
add
sbb
push
mov
mov
mov
popa
cmpsb
adc
cmp
dec
pop
push
ret
mov
and
xor
jb
je
or
sbb
inc
jl
insl
movsb
out
cltd
xchg
dec
or
sub
sti
add
popa
dec
cmpb
sub
inc
iret
sub
jo
jo
push
push
imul
out
push
sub
data16
icebp
fs
pop
cs
mov
xchg
and
pop
xchg
xchg
cli
loopne
ds
xor
dec
enter
insb
add
movsb
mov
scas
xor
sub
mov
cld
hlt
xchg
sarl
mov
mov
jmp
mov
xchg
add
in
jbe
dec
and
mov
pop
dec
cmc
pop
push
xor
stos
mov
vpmacswd
iret
mov
adc
sub
xor
add
rcrb
add
add
es
and
pop
divb
repz
push
jno
repnz
and
cmp
retw
loope
mov
jno
jp
pop
loope
jge
lea
or
es
inc
daa
jno
add
subb
decb
jle
push
adcl
add
and
jnp
cs
push
mov
ret
jl
sbb
mov
pop
adc
ljmp
sti
add
mull
pop
xor
mov
fmuls
ret
movsb
adc
out
push
inc
subl
cmp
jp
in
sbb
call
orl
and
sbb
push
insl
jmp
or
and
rorl
cmp
jnp
jnp
out
xchg
sti
lcall
mov
mov
jb
add
test
push
in
ret
lahf
adc
jnp
sbb
fldt
xor
leave
mov
pop
out
xchg
dec
imul
adc
lods
dec
and
cli
mov
dec
outsb
jne
mov
popf
mov
dec
push
inc
adc
pop
mov
lcall
jnp
pusha
idiv
or
mov
mov
ja
jns
mov
xchg
das
insb
daa
lcall
lea
outsb
aad
je
mov
lods
mov
arpl
hlt
jae
mov
or
imul
out
push
inc
test
rcrl
mull
push
push
adc
in
xchg
inc
lds
sbb
ror
mov
addr16
out
jno
mov
icebp
mov
xor
sete
repnz
test
enter
and
mov
jns
inc
loopne
cmpsb
xchg
or
leave
push
shll
dec
dec
add
je
jno
add
dec
stc
sub
adc
mov
pusha
push
dec
cmp
sub
in
in
push
ret
xchg
jne
iret
dec
mov
mov
hlt
jno
js
dec
sbb
mov
ret
into
fidivs
xor
out
mov
inc
or
mov
lahf
ja
xor
mov
and
adc
cmp
mov
stos
cmpsb
xor
call
jnp
mov
lods
les
jb
call
out
outsb
ja
xchg
insb
pop
sbb
out
add
fsubl
xchg
mov
movsb
mov
ret
das
int
adc
cmpsb
push
nop
cli
dec
mov
sub
mov
dec
cmova
movsb
cmp
aad
out
adc
ror
dec
fsubs
inc
push
sub
lods
fwait
loope
adc
inc
mov
movsb
rcr
iret
sub
pop
gs
stos
sbb
adc
sahf
pop
jmp
sub
repz
mov
sub
cs
sub
ljmp
and
adc
mov
call
int
mov
mov
mov
ret
and
fimull
decl
das
mov
sub
add
inc
movsb
push
cmp
iret
call
fldenv
movsl
in
fidivs
movsl
or
xor
mov
outsl
test
and
sbb
testb
jge
add
pop
mov
call
lods
into
mov
cltd
movsb
mov
cmp
fsubl
pop
push
addl
or
les
sahf
sub
cmpsl
in
mov
xor
and
call
dec
ret
sbb
mov
pop
bound
jns
mov
scas
mov
xor
test
ret
lret
mov
sti
pushf
push
das
loope
mov
mov
mov
xchg
sub
scas
lods
daa
inc
mov
push
daa
aas
nop
bound
fsubr
imul
add
jb
pop
push
std
xor
cltd
outsb
mov
movsl
xor
orb
adc
pop
int
sar
in
push
scas
aad
iret
fcomps
arpl
dec
push
adc
push
icebp
lds
xor
rcrl
inc
push
inc
ret
jmp
mov
dec
das
pusha
cmp
pop
lret
dec
sahf
add
leave
adcl
lods
outsl
push
push
enter
dec
ret
push
xor
mov
arpl
add
leave
xorb
add
inc
ljmp
add
fldenv
sbbl
mov
mov
aas
sub
jns
out
cmp
pop
in
pushf
pusha
mov
stos
pop
sbbl
mov
sub
lea
xor
xchg
push
mov
notb
in
sub
jg
pop
xor
int3
fcmovnu
xchg
into
das
push
les
pop
inc
in
fs
push
sahf
mov
push
cmp
lods
js
out
int3
pop
stos
sub
outsb
sub
push
mov
sarb
ficomps
add
sub
jae
mov
inc
dec
sbb
in
loopne
cmp
stos
stos
cltd
mull
jbe
in
jmp
stc
movsb
adcb
pop
mov
mov
adcb
mov
cs
test
nop
push
rsqrtps
mov
mov
sbb
mov
xor
lds
jo
cmc
lds
dec
leave
mov
hlt
aas
sub
mov
mov
lcall
sub
jecxz
pop
push
mov
xchg
stos
aaa
fcom
out
sbb
and
mov
popa
out
lods
addl
jo
mov
xchg
or
xchg
enter
lods
push
pop
out
xchg
dec
aad
and
mov
push
icebp
pop
and
clc
push
push
inc
mov
pushf
jmp
push
fwait
and
inc
enter
sub
test
popa
fildll
push
dec
out
inc
xchg
inc
loope
lcall
add
out
add
das
lods
addr16
or
pop
push
mov
adc
test
and
push
test
das
dec
repz
pop
movsb
add
leave
add
cltd
dec
push
jns
stos
sbb
jns
and
pop
cmp
cwtl
inc
lock
cmp
jge
inc
icebp
mov
dec
lock
cmpsl
scas
jne
mov
mov
sub
jl
sbb
hlt
fistpl
filds
inc
adc
into
inc
xor
stos
stc
jbe,pn
xor
iret
push
les
lret
cmc
dec
roll
mov
iret
cmpsb
xor
jo
lds
sbb
mov
es
addl
decl
mov
sbb
stos
ja
retw
repz
shll
push
not
decb
cs
repnz
in
mov
aas
push
push
pusha
sbb
dec
cs
mov
mov
add
icebp
test
cmp
mov
in
sahf
jno
mov
mov
test
addr16
fs
pop
insb
dec
mov
ja
xor
ret
icebp
cmovae
repz
mov
out
je
lret
shll
push
in
movsb
insl
adc
adc
imul
jns
xchg
out
push
into
int
ret
jns
movsb
sub
outsl
insl
push
cmp
lods
xorb
cli
or
cs
cmc
push
push
and
loopne
xlat
or
ds
cli
push
xor
addl
insl
sub
hlt
test
xchg
mov
popa
cwtl
sbb
xor
and
jb
and
int3
hlt
mov
pop
icebp
je
rolb
pop
inc
aad
fwait
data16
mov
mov
mov
repnz
fdivrs
pop
inc
daa
xlat
hlt
bound
subb
xor
stos
jb
fisubrl
outsb
mov
jge
add
mov
in
mov
cmpsb
in
adc
fsubl
dec
jmp
xlat
sub
inc
aam
mov
push
sub
pop
xchg
jbe
das
insl
sub
jnp
or
lods
subl
pop
jp
dec
xor
or
bound
mov
dec
push
fdivs
jbe
push
repnz
in
mov
sbb
scas
cs
outsb
sbb
mov
sbb
ret
mov
les
popf
mov
mov
loope
fs
push
jnp
push
mov
jge
and
outsl
sbb
jb
sbb
xchg
push
out
ljmp
mov
mov
push
mov
mov
push
add
sbb
jne
mov
aam
cmpsl
mov
xchg
bound
and
pop
pop
and
fbld
mov
cmp
lcall
mov
lds
call
fs
push
pop
xchg
jecxz
pop
jae
int
dec
lcall
cmp
pop
movsb
and
leave
sarb
rcl
daa
mov
pop
cmp
dec
ljmp
jge
inc
faddl
shll
fidivl
popa
add
mov
mov
jge
daa
mov
xor
add
aam
xchg
xchg
leave
mov
xchg
movsl
sbb
int3
cmc
xorb
xchg
test
push
pop
es
fdivr
add
lods
loope
inc
inc
cmp
scas
xchg
jne
mov
ds
push
mov
insl
mov
dec
push
stos
ret
or
mov
pop
mov
shrl
and
movsb
shlb
pop
scas
pop
mov
in
pop
orb
insb
insl
pop
andl
inc
mov
cmp
out
sub
jno
ljmp
push
pop
test
xchg
ret
mov
xchg
ret
xabort
pop
xchg
cltd
sahf
repz
adc
sub
out
sub
scas
movsb
mov
cmp
cmp
subb
add
mov
adc
clc
js
ljmp
arpl
subl
and
shll
add
mov
sub
mov
fs
addr16
jmp
inc
jae
push
addr16
jp
jg
jp
push
cli
jge
xor
rcll
mov
movsb
int
sub
stos
clc
cmp
jge
and
xor
mov
jp
cmp
into
fmuls
insl
fimuls
clc
imul
adc
mov
jp
lcall
pop
inc
movsb
bound
loopne
adc
dec
pusha
cmpb
jns
jp
divl
adc
enter
xor
inc
dec
jmp
lea
mov
rcrl
std
into
mov
lds
jno
fisubrl
inc
adc
push
shr
cltd
jns
or
inc
sub
pop
ret
jmp
cmp
cmc
or
or
stos
mov
cmpl
mov
mov
mov
lods
push
sub
cmp
pushl
inc
mov
iret
call
mov
mov
push
arpl
jo
dec
enter
sbbl
pop
or
fmuls
shlb
xchg
or
sub
lret
stos
shlb
scas
mov
and
dec
loop
mov
mov
sbb
sub
into
sub
push
jecxz
fldt
in
jmp
inc
inc
mov
fldl
push
mov
out
jg
pusha
lret
adc
aad
and
andb
lea
xchg
loope
and
je
lods
adc
scas
rcl
mov
std
test
mov
sbb
dec
xor
fidivrs
fs
xor
jmp
cmpsl
xor
cmpsb
out
sub
cltd
cltd
push
xchg
mov
pop
jbe
adc
push
adc
test
sti
pop
xchg
enter
sub
push
fs
adc
sub
scas
mov
inc
mov
cmc
ss
stos
test
scas
push
fcmovbe
mov
movsl
add
repz
or
call
repz
cmp
adc
pusha
push
xchg
jae
movsb
dec
mov
lods
mov
pusha
nop
xor
jns
nop
test
xor
pop
fdivl
xchg
add
aaa
mov
mov
fstpt
movsl
out
fsts
mov
scas
xor
xor
fsubs
lret
sbb
mov
xor
sbb
push
ds
jo
les
clc
repz
ficoml
or
aam
pop
adc
adcl
mov
imul
movsb
pop
imul
push
cmp
insl
out
dec
and
push
scas
and
repz
sub
mov
cmpsl
loope
cli
push
das
ret
push
inc
dec
stc
xor
mov
pop
mov
imul
dec
or
rol
sub
movsb
jno
sahf
shll
pop
out
jecxz
push
add
push
mov
cwtl
movsb
mov
sub
jo
pop
cmp
mov
dec
xchg
movsb
dec
lods
inc
sub
adc
push
leave
or
xor
push
jnp
stc
insl
mov
sub
iret
in
inc
xor
pop
fsts
push
imul
xchg
mov
jne
hlt
aaa
adc
mov
pop
in
push
cmovs
into
aad
int
xor
sbb
adc
int
mov
movsl
mov
sub
xchg
movsb
je
mov
test
mov
mov
dec
in
icebp
scas
cs
cmpsl
add
jne
das
mov
shlb
sbb
addl
or
pop
jmp
lds
xchg
xchg
add
mov
push
dec
andb
mov
pop
add
test
mov
adc
sbb
mov
mov
call
cmp
xchg
sbbl
insl
repz
mov
scas
sub
add
pop
jb
mov
xchg
jno
pmulhw
or
dec
sahf
out
ret
into
jno
add
xor
inc
mov
loope
xchg
rcll
ljmp
out
test
iret
fwait
leave
arpl
mov
lods
xchg
add
test
fcoml
jno
pop
cmp
test
xor
mov
aam
insb
sbb
ficoms
cwtl
ret
fiadds
hlt
pop
mov
hlt
jo
mov
out
movsl
cmp
mov
mov
xchg
push
mov
or
dec
or
sub
push
cmp
sub
lods
pop
dec
mov
ss
lock
scas
dec
loopne
nop
int3
es
mov
sub
cmpsl
xchg
sub
shlb
fildll
mov
aam
push
lea
push
dec
mov
js
push
xchg
cmc
jmp
sub
or
cli
sbb
aaa
shlb
sbb
inc
out
fbld
imul
cmp
push
jb
andb
iret
cmp
imulb
lahf
cmpsb
push
adc
or
testl
out
xor
push
jmp
ret
xchg
xor
outsb
push
lock
loop
jo
add
aas
push
je
add
xchg
mov
jae
shl
mov
ret
int
jecxz
lahf
les
fistl
jbe
mov
pusha
dec
fadds
icebp
orl
out
push
jbe
and
bound
movsb
jmp
cmc
cmpsl
cli
insl
dec
bound
cmp
adc
xor
lods
push
jnp
std
mov
int
add
in
daa
pop
lahf
insb
cwtl
sbb
insl
jno
pop
mov
sbb
lods
ror
cmp
sbb
mov
fiaddl
push
cmpl
add
sbbl
adc
xchg
sbb
out
add
fcoml
pop
arpl
and
xor
jb
sar
jb
dec
leave
test
cli
pop
data16
cld
sub
movsb
js
sbb
cli
pop
paddd
push
rcll
insl
cli
out
push
insl
sub
das
push
jp
leave
or
mov
add
inc
jnp
in
movsb
mov
rcrl
add
ret
aad
lea
sub
fsubrs
sahf
insl
jnp
outsb
ret
dec
jo
lret
cmp
call
lret
test
scas
xlat
push
push
aad
fidivs
cmc
testb
orl
fadd
stos
mov
mov
ss
movsb
mov
fsubrs
xor
fisubs
mov
xchg
xor
fisttpll
shrl
aam
sbb
xor
leave
fsubrs
cmp
or
ljmp
dec
push
scas
insl
dec
pop
cmpsl
push
jle
push
or
lcall
mov
repnz
pushf
jp
imul
ljmp
clc
not
mov
lods
sbb
mov
sbb
push
rcr
sbb
adc
xchg
pop
push
add
pop
lea
test
and
repz
jecxz
xor
lea
hlt
sbb
mov
cmp
in
sbb
xor
inc
movsb
sub
sub
les
mov
or
or
std
outsb
adc
push
dec
sbb
xchg
gs
call
xchg
cmp
mov
mov
or
dec
mov
mov
dec
adcb
jo
icebp
negb
lods
movsl
dec
add
xchg
fs
lcall
mov
sbb
mov
inc
popf
xchg
adc
pop
add
xchg
or
lods
jecxz
rcr
dec
sub
cmpsl
or
ret
add
jo
fs
sub
hlt
bound
lret
cmp
mov
mov
pop
iret
cmp
pop
mov
imul
adc
sub
mov
jo
xchg
xcrypt-cbc
cmpsl
push
in
adc
or
arpl
stos
mov
shll
lods
add
mov
push
mov
jb
jmp
jmp
xor
pop
sbb
sbb
lods
es
call
rcrb
out
add
call
test
es
push
faddp
sti
daa
mov
ss
imul
sub
mov
stos
inc
mov
stc
jb
in
pop
sbb
and
and
pop
pop
into
insl
cmc
cmp
gs
push
lds
sub
ljmp
js
xchg
js
lahf
mov
pop
int
iret
sbb
push
add
sub
rorl
xchg
daa
nop
mov
push
in
mov
lock
out
xor
call
lds
inc
jb
mov
movsb
xchg
sub
insl
mov
mov
fstps
rolb
xchg
mov
ljmp
dec
jb
pushf
push
hlt
adc
call
inc
les
lret
jb
pop
pushf
dec
aaa
cmp
leave
xor
mov
inc
sahf
add
sti
dec
in
stos
mov
mov
dec
jp
lea
into
out
mov
movsb
sub
repnz
pop
pop
xchg
mov
arpl
mov
pop
push
mov
insb
insl
cmpsl
imul
std
xor
add
mov
loope
negb
out
rclb
fmul
shlb
mov
lret
inc
out
push
inc
xchg
sub
das
cmc
adcb
mov
fmull
loop
xor
sbb
lds
ret
cmc
scas
sub
pop
pusha
cmp
scas
xor
hlt
aam
add
imul
es
in
loope
push
xor
mov
sbb
mull
dec
cs
bound
cmp
or
ret
adc
or
shrl
mov
fmull
push
movsb
ja
cmpsb
sub
test
cmp
pop
add
outsl
out
addr16
jp
enter
enter
mov
insb
movsb
jmp
ret
iret
jmp
nop
push
ja
stos
ja
pop
repz
mov
sbb
outsl
bound
sub
mov
aad
adc
xor
popa
sbb
cld
mov
and
inc
push
dec
ret
les
or
lods
rcl
fsubl
mov
inc
and
data16
mov
xor
movsb
fists
nop
mov
call
push
lret
xchg
daa
sbbl
ror
mov
mov
pop
int3
cmpsl
out
mov
and
pop
mov
loope
push
xchg
fucomi
and
inc
std
mov
cmp
or
xlat
lods
inc
push
jb
inc
push
cmp
sbb
hlt
push
es
decl
and
mov
push
xchg
bound
jae
pop
cmc
add
add
inc
popa
movsb
push
iret
js
sbb
nop
xor
mov
jbe
and
ret
adc
sub
and
pusha
dec
pop
sbb
daa
xor
cwtl
test
call
add
xor
repnz
shll
in
and
mov
call
ja
push
andb
pusha
pop
mov
in
pop
leave
lds
xchg
sub
inc
pop
sub
push
sub
fidivl
xchg
xchg
sub
mov
fildll
xor
jae
mov
or
stos
xor
pop
cmp
mov
pop
rclb
sub
mov
sub
mov
ljmp
loope
fidivs
cmp
xchg
xchg
outsb
sub
call
nop
mov
es
sbb
or
insb
jmp
xchg
les
insb
subl
hlt
out
sbb
stc
aam
lcall
lahf
adc
je
inc
incb
in
ret
adc
js
xor
xor
les
pop
clc
add
or
cmp
test
rclb
aam
or
sarb
mov
mov
mov
jae
cmp
cltd
pop
call
inc
popa
sub
dec
cli
ds
add
sbb
sub
xor
add
jo
repnz
pusha
pop
data16
xchg
sub
sbb
repnz
inc
jg
mov
int3
out
sub
push
lret
xor
orl
mov
mov
int
cs
dec
mov
lock
push
sub
ds
bound
mov
inc
sbb
imul
pop
mov
jecxz
jae
test
add
loope
cmp
pop
cmp
cmpsl
nop
jmp
andb
aad
mov
sbb
lret
push
push
dec
lods
loopne
mov
xchg
scas
mov
sbbb
in
mov
lods
sbb
int3
addl
sub
jne
xlat
int3
rcrl
sbb
aam
cmp
dec
push
fistps
nop
lods
outsl
sti
cld
push
mov
pop
inc
mov
jmp
push
jb
xchg
jp
movsb
out
imul
adcb
jl
out
xor
test
loope
and
lods
jl
mov
int
loope
ficoml
loope
call
push
std
cmpl
cmp
and
jl
fbld
aaa
dec
xchg
movsl
dec
or
sub
fmuls
test
mov
gs
cld
out
loope
add
aas
or
imul
sar
icebp
fwait
iret
add
adc
stc
test
pop
outsb
mov
lea
adc
lea
test
and
push
add
ss
lds
xchg
xor
inc
push
mov
mov
dec
ljmp
pop
inc
xor
mov
dec
xchg
lcall
imul
push
lret
inc
enter
inc
fsubrl
sarb
loope
mov
mov
push
daa
in
add
lods
push
inc
fisttpl
ret
aas
xor
sub
sbb
inc
push
xchg
lea
ja
xor
or
pop
test
xchg
mov
loop
movsl
inc
bound
jae
jns
cmp
in
push
push
mov
adc
in
xchg
xlat
mov
repz
fsubrl
sub
cmpl
clc
test
out
dec
iret
loope
mov
rcl
or
inc
in
cmpsb
stos
cld
ror
mov
je
pop
xor
fs
fnstenv
xor
out
addr16
add
add
add
rclb
sub
sbb
xor
jns
out
sbb
dec
cmp
call
es
je
xchg
shrl
fdivl
jno
fidivrl
sbb
jmp
fwait
mov
or
sahf
lcall
mov
adc
ret
mov
mov
dec
pusha
dec
in
mov
jns
es
mov
scas
shr
dec
mov
cmp
inc
leave
dec
mov
test
decb
xchg
xchg
ja
add
sbb
addr16
fistpll
fwait
jno
sahf
mov
mov
sub
push
mov
insl
lcall
pop
lret
mov
sarl
lods
jo
repz
cs
push
sub
pushf
xor
test
pop
jle
xor
fdivs
mov
push
push
sbb
loopne
bnd
clc
pop
pop
mov
insl
hlt
cmpsb
imul
out
cwtl
fdivrl
insb
sbb
mov
in
cmp
jae
mov
jbe
shlb
and
xor
jb
nop
ret
sub
movsl
xor
dec
mov
or
push
cld
iret
incb
push
insb
clc
mov
leave
cmp
sbb
ret
pop
adc
mov
mov
sub
mov
mov
sub
sbb
rcll
pop
mov
xchg
loopne
xchg
sub
jge
outsb
repnz
out
sahf
jnp
or
mov
dec
push
movsb
xchg
mov
into
les
jp
out
sbb
ret
dec
adc
into
fmull
mov
add
xchg
wbinvd
pop
jno
test
cmpsb
movsb
aam
mov
mov
stc
inc
test
mov
pusha
fsubs
movsb
xor
or
cwtl
inc
out
push
sahf
pop
sbb
into
ljmp
pop
repnz
lods
scas
int3
dec
jle
imul
jmp
inc
fdiv
xor
and
rcl
sbb
inc
inc
rol
decb
insb
addr16
add
cmpsb
xchg
add
lods
sbb
jle
cmp
adc
jne
mov
push
mov
xchg
insb
aad
xor
shll
into
sub
mov
xlat
mov
sahf
mov
and
repz
jl
cmpl
pusha
mov
xlat
shl
sub
shl
sub
adc
inc
ljmp
xchg
loopne
inc
loop
daa
cs
dec
movsb
add
xor
add
jb
or
aaa
pop
aas
mov
mov
lods
mov
pushf
je
roll
mov
push
dec
out
mov
loopne
and
es
pop
and
xchg
push
push
testl
add
jno
movsb
pop
xchg
jns
lods
iret
imul
sbb
xchg
mov
hlt
sbb
jecxz
xor
sub
es
lret
loopne
jb
std
mov
std
and
cmp
cs
iret
ljmp
xor
or
out
popa
push
mov
pushl
xchg
hlt
push
stos
fcom
pop
mov
pusha
jle
jbe
jg
daa
push
sbb
jge
insb
pop
or
sub
pop
jg
xchg
cld
or
test
cmc
and
xor
xor
push
cmp
aaa
aad
les
jns
ds
cwtl
xchg
add
sbb
jns
ret
shrb
sbb
mov
dec
in
sub
pop
je
stos
dec
int3
push
push
or
scas
pop
loopne
jle
arpl
jb
ret
repz
or
sub
sbb
daa
adc
add
or
and
and
push
mov
sub
cli
or
jp
ficoml
push
stos
outsb
gs
mov
movsb
push
inc
mov
push
sub
cs
fidivl
or
in
js
adc
dec
mov
push
push
daa
or
outsl
call
lods
sarb
mov
out
rsqrtps
jbe
fwait
test
or
adc
xor
cwtl
sbb
bound
inc
xor
andl
xchg
popf
push
andb
inc
sub
fimuls
frstor
ret
arpl
add
aam
aam
push
sub
fidivs
ret
insl
sbb
int3
out
inc
dec
xchg
pop
dec
and
dec
adc
mov
iret
lcall
dec
mov
aaa
pop
fnsave
les
or
dec
pop
dec
mov
adc
cld
mov
lret
mov
imul
jne
loope
loope
lahf
mov
jg
jns
mov
sbb
stos
int3
aad
pop
arpl
pop
xor
int
jnp
nop
dec
data16
sub
repnz
ss
test
sub
outsl
mov
inc
pop
mov
jmp
popa
out
subl
lea
inc
pop
dec
and
xor
mov
jl
dec
mov
lods
insb
jns
push
push
mov
add
push
pop
xchg
popa
aaa
das
enter
outsb
scas
sub
insb
mov
lods
pop
push
sbb
xor
je
daa
mov
mov
fidivs
int
lret
fstpl
aam
xchg
mov
sbb
adc
pop
jns
data16
loopne
xor
imul
jle
and
movsb
dec
ljmp
std
mov
cmpsb
cmp
inc
rcll
ljmp
cmpsl
push
dec
mov
lds
push
out
fs
jmp
pop
xchg
mov
lret
lds
adc
repz
pop
mov
aam
add
cmp
inc
jnp
fcomi
pop
cli
loope
es
jbe
rcl
pop
dec
add
shlb
outsb
dec
pop
call
out
push
pop
repz
lock
lret
fisubl
popf
cs
stos
fs
mov
hlt
add
mov
scas
ljmp
mov
pop
gs
mov
push
mov
pop
xchg
sarb
cmp
ret
in
sub
push
and
sub
cmc
push
cmp
sbb
mov
js
pop
sub
lds
mov
sbb
xor
cltd
mov
movsb
dec
sbb
push
out
sub
lcall
scas
icebp
test
rcrb
jnp
cmc
jb
push
les
pop
imul
imul
sub
ds
cwtl
popf
jae
sbb
cmp
fsts
iret
mov
push
enter
cmpsb
loope
inc
adc
out
sbb
add
aas
pop
pop
sbb
cmp
push
outsb
adc
or
sbb
xchg
mov
repz
mov
cltd
bound
adc
mov
mov
jmp
dec
lods
subb
lret
shrl
sbb
scas
fs
sub
xor
pushf
jno
cmp
repz
jp
icebp
pusha
mov
dec
pop
pusha
sub
call
or
xchg
enter
ljmp
sbb
lods
push
dec
jle
add
sub
arpl
push
movsb
xchg
cwtd
mov
loope
push
push
movsb
or
dec
mov
repnz
clc
test
mov
inc
mov
aam
jno
xchg
mov
add
xchg
sbbb
sub
push
sbb
push
fists
add
mov
cmpsl
btc
ss
and
push
test
lock
in
mov
push
pop
mov
arpl
in
and
repz
fsubl
outsl
xchg
mov
cmp
outsb
inc
jp
ss
aam
sub
mov
xor
mov
in
sahf
sub
push
mov
pop
xchg
mov
sbb
mov
in
jg
push
push
cmp
pop
mov
jp
jo
push
ljmp
movsb
loope
lods
shll
sub
shlb
jnp
jbe
insb
xchg
adc
repz
aam
arpl
pop
mov
inc
sbb
lahf
mov
iret
aad
pop
mov
rorb
mov
push
arpl
idivl
int3
dec
lods
jge
sbb
jns
inc
lods
mov
in
cmp
or
xchg
aam
ja
ret
aam
ficoml
cs
inc
lret
xor
insb
in
jbe
lds
fistl
imul
scas
push
dec
mov
leave
xchg
cs
lds
mov
jbe
aaa
and
jns
xchg
or
hlt
adc
mov
sbb
movl
mov
out
rcll
femms
xchg
ret
scas
mov
cmp
xor
movsb
adc
cmp
mov
mov
shl
xor
mov
sahf
jae
or
cmp
push
scas
test
inc
cmpsb
jns
jmp
test
fucomi
adc
mov
out
sub
movsb
inc
mov
aaa
call
mov
sub
mov
imul
cmc
movsl
push
call
nop
add
mov
mov
shlb
mov
inc
lods
ss
mov
call
in
inc
lcall
add
in
mov
mov
mov
sub
sub
arpl
push
push
ljmp
lret
ja
xor
arpl
push
or
loop
lret
jmp
mov
xchg
mov
popl
sahf
lods
mov
jge
call
cmp
clc
push
push
adc
inc
aad
xchg
fsubl
pop
push
test
icebp
call
cmp
ljmp
loop
aaa
scas
cmp
xor
sub
jbe
ret
bound
mov
mov
mov
cmc
mov
mov
adc
cwtl
scas
outsl
test
jb
test
inc
pop
sub
in
push
test
sbb
push
js
mov
jge
pop
xchg
call
mov
add
nop
sub
scas
int
loopne
arpl
mov
fsubr
pusha
sub
cmp
add
xchg
movsb
sbb
movl
loope
jne
pop
adc
jne
push
movsb
out
ficoms
fwait
mov
add
or
add
pop
cwtl
rcr
jmp
das
aaa
in
mov
mov
cmp
loope
mov
insl
call
push
test
or
xor
aad
leave
les
mov
or
frstor
dec
cmpsb
jno
or
insl
and
notl
sarb
add
fcomps
mov
and
daa
cld
sar
pop
out
push
and
outsb
or
idivl
mov
pop
mov
dec
mov
jae
cld
shrl
pop
inc
pop
add
xorl
add
mov
fisubrs
cmp
sahf
cmpb
repnz
and
mov
cmp
jnp
aas
jp
lods
mov
xor
or
int3
mov
pop
xor
jp
mov
addr16
sti
aaa
jo
add
xchg
popf
mov
xchg
push
xor
jns
sub
mov
mov
stos
iret
inc
ret
pop
fs
adc
add
jbe
mov
xor
mov
cmpsl
mov
out
cld
mov
out
jb
jno
mov
sub
outsl
mov
sbb
pop
movsb
push
sbb
mov
cmp
push
jl
outsl
movsb
mov
leave
xlat
and
jo
lahf
mov
loope
xchg
das
inc
scas
test
mov
adc
lods
mov
dec
sbbl
xchg
das
movsb
fs
clc
add
push
lods
pop
inc
pop
lcall
mov
int
adc
and
pop
sbb
addl
xrelease
cli
stos
jle
js
jecxz
test
aam
lret
jno
rclb
jecxz
pop
jg
jne
sub
push
out
xlat
mov
cmc
movsb
stos
mov
adc
cmpsl
jnp
cmp
mov
rcl
pusha
xchg
jb
notl
ds
loopne
pop
orl
jp
sbb
xchg
pop
icebp
orl
mov
dec
cmp
fisubs
cltd
imul
adc
shrw
movsl
inc
sbb
pop
pop
test
rcrl
pop
mov
inc
lods
arpl
xchg
cmpsl
or
lds
into
mov
insb
sbb
ret
scas
lcall
sub
xor
out
mov
sub
lods
xchg
and
daa
andl
sbb
mov
cli
mull
dec
xor
lods
jb
cmp
sbb
cmpsb
mov
xchg
shrl
inc
add
cmpsl
dec
cs
and
xor
mov
mov
arpl
inc
dec
xor
adc
mov
shlb
sbb
fcoml
dec
dec
bound
movsb
jge
mov
push
in
adc
jae
push
mov
pop
outsb
das
push
cmp
pushf
jnp
daa
jle
dec
mov
pusha
lods
movmskps
scas
adc
out
and
xchg
es
xor
push
fcoms
fistpl
push
push
shlb
lds
inc
inc
popa
sbb
pusha
bnd
arpl
outsl
jno
ljmp
mov
sti
dec
mov
addr16
add
fs
movsb
call
or
fisubs
pop
or
lcall
xlat
and
jns
in
dec
jmp
mov
fstpt
stc
lods
or
jno
imul
adc
lds
mov
mov
ss
dec
fdivs
cmp
push
mov
loopne
hlt
jge
push
gs
fdivl
sbb
lods
adc
sub
ds
jne
sahf
push
fsubl
dec
lods
mov
xchg
inc
dec
fsubl
xchg
ljmp
not
push
push
mov
bound
inc
fcomps
and
roll
bound
cmpb
adc
and
lock
adc
int3
pushf
push
dec
dec
jg
push
pop
lods
cmp
fidivs
jmp
cmpl
jne
jge
dec
push
iret
mov
outsl
xchg
mov
fidivs
xchg
test
ret
movsb
jmp
push
outsb
xor
lods
aas
add
test
insl
jge
inc
mov
xchg
ret
sbb
mov
aad
rolb
jg
loopne
sbb
out
std
jg
cmc
rclb
mov
scas
lds
mov
sbb
pop
dec
or
add
push
and
push
jnp
jnp
addr16
aas
ds
cmp
ljmp
divl
andl
icebp
into
cmp
adc
inc
adc
xor
pop
sbb
mov
inc
xchg
ss
xor
lahf
call
sub
mov
mov
push
js
and
out
aas
ljmp
aad
xor
sbb
mov
inc
jb
xlat
fsubs
andb
cmp
data16
pop
push
and
shll
push
sub
xor
inc
dec
shr
pop
dec
sub
das
gs
aam
ljmp
jl
insl
dec
or
push
mov
cmp
adc
addr16
in
sti
dec
cmp
lds
cmpsl
loop
movsb
ret
nop
adc
mov
jg
hlt
push
push
arpl
mov
les
jae
jae
mov
pop
lods
std
push
out
cs
jl
xor
mov
stos
jo
and
mov
ret
jns
movsb
sub
xchg
gs
inc
mov
call
fdivrs
movsb
dec
pushf
xor
bound
xor
or
dec
insb
mov
xchg
hlt
jmp
mov
icebp
pop
int
sub
sub
xor
flds
jns
mov
jle
ret
ljmp
rol
push
dec
or
sahf
hlt
xchg
jg
loope
in
adc
jbe
addb
hlt
push
xorl
es
cli
fisttpl
pop
cmp
cwtl
sub
dec
fcos
outsl
lea
mov
xchg
jecxz
in
sahf
jle
push
mov
inc
pop
scas
cmp
cmp
cmpl
mov
pop
xor
adc
pop
push
adcb
xchg
outsl
mov
sub
dec
icebp
and
mov
movsl
mov
cld
dec
fs
mov
add
addb
mov
xchg
lods
pop
fimull
popa
push
xor
push
cmpsl
cmp
clc
andl
aaa
xchg
sbb
mov
hlt
bound
push
movsb
sbb
jnp
mov
xor
fwait
push
clc
icebp
sbb
idiv
daa
ret
xor
outsl
xchg
mov
jle
es
push
xchg
inc
adc
sub
in
xor
adc
or
fnstenv
leave
lret
aam
mov
ret
mov
push
sbb
and
xchg
xchg
pop
dec
icebp
push
xlat
jbe,pt
into
jge
push
sub
mov
int
push
call
cltd
jnp
in
shlb
in
pushf
imul
rorb
int3
xor
add
lods
cmp
or
test
cmp
cmp
incb
add
push
inc
xchg
mov
arpl
dec
sahf
rcll
pop
jb
movsb
pushf
adc
in
imul
push
and
xor
adcb
mov
jno
cli
pop
add
mov
fstpl
rsm
ljmp
dec
insl
jbe
adcl
ss
sbbb
xchg
push
add
or
movsb
nop
nop
dec
fdivrl
fnstcw
jge
lock
sub
in
inc
xor
fidivl
lock
cmpsl
dec
push
insl
arpl
adc
scas
or
jae
in
lsl
dec
or
xor
inc
pop
jecxz
movsb
xchg
xchg
call
mov
sbb
mov
push
fdivrl
push
fdivrl
add
stos
mov
popf
lods
xor
add
jecxz
add
mov
dec
mov
cltd
mov
gs
mov
mov
mov
xchg
inc
repz
or
xor
mov
sbb
loopne
or
push
mov
enter
adc
cli
popf
sub
push
and
cwtl
es
mov
pusha
pop
in
loopne
sbb
sahf
in
mov
sbb
fistpl
mov
movsb
pop
sti
leave
mov
xor
mov
test
pop
scas
mov
in
rcll
mov
cmp
sbb
push
pop
lret
bswap
or
jle
fdivl
xor
sub
or
out
out
subb
adc
jo
ljmp
call
inc
dec
sub
mov
aaa
je
push
subb
xor
inc
daa
dec
jecxz
les
std
arpl
and
xchg
aam
jns
lods
and
add
sbb
enter
bound
pusha
jns
push
and
sbbb
push
lea
push
adc
outsl
icebp
mov
lods
bound
ficoms
jp
je
pop
jmp
mov
std
into
sub
mov
xor
sub
scas
in
stos
cmpsl
stos
add
add
mov
push
mov
mov
mov
lods
adc
ret
xchg
cmpsl
inc
push
and
mov
sub
rol
icebp
add
stos
sbb
mov
sbb
movsb
mov
jmp
push
repz
cmp
sbb
jle
imul
and
outsl
rcl
mov
mov
iret
add
imul
or
adc
mov
mov
xchg
sub
aam
arpl
popf
push
mov
in
and
mov
cld
push
push
lahf
sub
xor
mov
das
push
ret
repnz
mov
xchg
add
mov
mov
mov
movsb
mov
dec
addl
inc
mov
test
push
sahf
or
loop
ret
jae
mov
cmp
jp
and
hlt
in
js
jo
push
out
lods
push
aam
andb
in
dec
mov
sub
scas
stos
mov
or
mov
enter
aaa
aad
test
mov
fdivrl
mov
je
bound
aad
cmp
xchg
lods
lods
ret
dec
arpl
out
sub
jmp
clc
mov
push
push
mov
cs
call
xor
cmp
in
dec
in
sbb
sbb
mov
sbbb
inc
repnz
test
cli
or
mov
add
adc
cmpsb
xchg
dec
mov
or
pop
mov
pop
xor
adc
into
push
xorb
push
sbb
aam
cmpsl
imul
jbe
movsb
push
jge
cli
pusha
xchg
subl
sahf
mov
ss
in
jns
push
adc
jns
mov
inc
loop
jl
adc
xlat
pop
xchg
jecxz
inc
les
orb
jge
vpmullw
pop
jae
push
movsb
pop
jge
insb
enter
imul
and
push
rclb
sub
movsb
mulb
xor
stos
loopne
sub
outsb
in
jno
ja
repz
sub
mov
sqrtps
jmp
cmpsb
movsl
mov
sti
fidivl
bound
sbb
dec
jne
repz
iret
sub
fmull
or
sub
adc
pop
cmovge
push
or
add
cmp
cmpsl
mov
and
add
fidivs
jmp
mov
pusha
lcall
xchg
inc
mov
mov
addr16
inc
lods
mov
sti
hlt
test
sbb
sub
repnz
sbb
jb
sub
fbld
cmp
lods
popa
push
data16
fiaddl
pop
lret
add
ljmp
mov
cmpsl
ss
das
jmp
pop
stos
push
imull
insl
icebp
nop
pusha
push
int3
pop
sub
xorb
aas
or
loop
push
cmp
dec
sbb
sbb
or
addr16
js
addr16
xchg
inc
xchg
cmp
jae
fidivrl
push
fisubrs
mov
sahf
jle
ret
ss
ja
addr16
add
aam
add
loop
in
pop
sbb
js
adc
sbb
cmpsb
ljmp
lea
inc
push
mov
lcall
inc
stc
jmp
subl
add
xor
lods
fsqrt
mov
xor
jp
sub
xchg
andl
sbb
dec
lods
rorb
cltd
and
inc
and
cmp
movsb
int3
mov
imul
test
xchg
sub
push
xchg
cmp
sub
pop
mov
sbb
push
push
add
mov
jle
rorb
and
je
subb
enter
decb
adc
push
cmc
sti
add
lods
pop
int
bswap
es
jle
sarl
cli
movsb
jmp
mov
cs
nop
arpl
or
xchg
push
leave
push
stos
and
lret
in
out
push
fistpl
fists
clc
jnp
adc
jns
in
jae
enter
mov
xchg
jmp
cmp
sbb
lods
mov
pop
xchg
or
dec
enter
push
movsb
and
or
jae
mov
mov
nop
and
mov
inc
push
dec
pop
mov
mov
pop
scas
pop
ljmp
mov
or
push
fisttpl
add
xchg
push
xchg
cmp
lcall
enter
push
cmp
out
incl
adc
xchg
mov
aam
in
mov
xchg
insl
adc
and
lcall
and
sbb
pop
xchg
mov
mov
cli
jns
shrb
into
js
mov
xchg
sbb
mov
cmc
out
mov
movsb
pusha
jae
adc
sbb
faddp
test
dec
movsb
ja
dec
movsb
pusha
mov
add
xlat
cs
stos
bound
xchg
aam
jns
xchg
outsw
nop
aas
stos
scas
cmc
push
sbb
lock
push
hlt
sub
or
jge
movsb
loope
outsl
idivb
sub
mov
call
inc
sbb
movsb
or
bound
mov
mov
and
flds
out
mov
stos
test
in
jae
leave
movsl
cmp
mov
orb
imulb
gs
xor
and
pop
mov
xchg
incl
mov
mov
mov
cmp
jecxz
push
adc
xor
mov
sahf
xor
rclb
dec
daa
adc
mov
rclb
out
jae
push
lret
mov
push
jmp
sub
mov
mov
repnz
sub
fadd
push
adc
out
lret
movsb
addr16
mov
loope
mov
in
mov
xor
iret
mov
stc
scas
outsb
iret
push
icebp
dec
push
int3
pusha
pop
test
jmp
push
jo
es
mov
push
mov
js
push
pop
sub
aaa
cmp
push
adc
mov
jb
in
sbb
enter
stos
mov
bndldx
int
fisubrl
pop
shll
aad
stos
shll
nop
jge
sbb
aad
or
repz
mov
inc
cld
mov
icebp
or
mov
adc
sub
jmp
jnp
or
outsb
dec
add
and
lock
pushf
jnp
mov
xor
pop
int
shl
dec
fs
shlb
xchg
dec
mov
ficoms
aaa
test
lds
cwtl
call
cld
dec
push
jbe
sub
insb
cmpsb
jecxz
sub
pushf
lret
cmpsl
xchg
in
adc
push
fsubrp
icebp
inc
insl
adcl
jbe
mov
sbb
scas
jmp
sub
leave
sbb
or
nop
mov
mov
outsl
fistpl
cmp
ss
xchg
lcall
dec
out
std
cmc
cmp
repz
repz
mov
hlt
ret
dec
call
xlat
inc
test
icebp
lock
pop
dec
jecxz
push
cmp
inc
fs
pop
add
cmp
mov
pop
xorl
push
into
sbb
mov
mov
pop
cmp
dec
adcl
dec
lds
data16
out
fcompl
lea
test
test
scas
sbb
in
out
adc
movsb
adc
rolb
call
push
add
fs
mov
push
xor
test
insb
sub
dec
stos
pop
sbb
shll
jg
imul
adc
sbb
lods
hlt
inc
xchg
in
mov
popa
aam
cli
push
mov
mov
call
mov
dec
jns
cld
mov
push
outsb
jmp
mov
and
mov
sbb
jae
adc
jp
jmp
ret
jge
es
mov
in
aam
xchg
test
sti
sti
fisttpll
in
add
add
lods
mov
push
loopne
lcall
and
enter
movsl
add
movsb
aam
sub
lea
xor
mov
imul
scas
int3
bound
mov
sahf
xchg
jne
loope
jge
movsb
push
add
sbbb
pop
xor
insl
mov
ljmp
test
pusha
dec
lods
sub
sub
push
fs
jns
jnp
sub
sub
adc
cs
outsb
ss
xchg
popf
out
hlt
aad
in
cmp
push
addl
mov
movsb
test
inc
hlt
mov
lea
lods
jp
shll
icebp
gs
xor
sahf
mov
dec
jnp
mov
fcomps
movsb
and
xchg
shll
adc
lcall
xor
xchg
sbb
pushf
arpl
jb
inc
pusha
stos
push
icebp
sbb
inc
push
mov
dec
add
add
sbb
mov
cmp
push
in
mov
movsb
inc
out
lahf
aam
mov
stos
add
leave
sub
idivl
push
addr16
mov
pop
sbb
adc
mov
mov
xor
mov
sbb
inc
notb
add
jecxz
jae
das
ljmp
adc
dec
fisubl
or
cmp
lods
loope
mov
cld
fwait
adc
repz
adcl
push
mov
mov
lods
jb
and
icebp
sub
mov
push
lret
test
xorb
fstpt
jno
cmp
push
in
pop
data16
push
mov
jb
mov
sub
out
inc
movsb
stos
jecxz
mov
shrb
popf
ret
mov
add
dec
xlat
ljmp
push
movsb
jp
push
es
ja
push
jno
jmp
or
dec
ljmp
jnp
or
repz
mov
pop
push
movsb
fadd
enter
xchg
shll
repz
jmp
mov
nop
xchg
aam
mov
aad
sti
mov
fcompl
mov
xor
dec
push
and
ret
sbb
ror
dec
sbb
insb
insb
outsb
pusha
test
ret
jge
inc
movsb
jno
pop
stos
ret
sarl
jge
dec
push
sbb
jmp
lds
mov
insl
cmc
push
and
ret
cmp
stos
out
mov
ljmp
push
jb
jo
mov
sbb
leave
pop
push
xchg
pusha
xchg
cmp
jge
js
cmp
jmp
cmc
scas
adc
pop
xor
outsb
punpckldq
push
aad
movsb
out
loop
loopne
xchg
cmp
mov
icebp
xor
mov
stos
pop
insb
pop
mov
xor
or
imul
and
sub
push
cmpsl
imul
adc
movsbl
jnp
jp
mov
movsb
pop
nop
and
mov
jbe
cmp
inc
cmpl
test
into
lds
push
pop
push
test
icebp
dec
in
push
icebp
add
mov
pop
jge
dec
pop
or
sub
dec
mov
lea
call
jnp
pop
jno
int3
and
sbb
ret
test
push
test
xchg
movsb
or
scas
hlt
cli
pop
inc
cs
inc
cmp
sub
stc
test
pop
std
and
push
div
filds
mov
dec
roll
test
push
mov
aam
sub
adc
xchg
mov
cmpb
aas
cmp
loope
sub
cmpsb
pop
jne
bound
mov
lret
arpl
push
inc
pop
fcoms
in
cmp
fwait
nop
out
sbb
test
and
arpl
fnsave
aaa
stc
pusha
pop
in
sub
xchg
sbb
mov
sub
xor
mov
and
lcall
xchg
push
mov
mov
push
adc
push
jb
fsubl
xchg
dec
jb
dec
cld
jae
aas
es
pop
call
aaa
pop
and
movsb
fsub
push
les
pop
adc
xor
cmpsl
lcall
fs
call
movsb
mov
xor
or
lods
push
cmp
xor
jae
push
sbb
mov
dec
fcom
into
inc
mov
dec
add
mov
jns
divb
sbb
stc
push
ficompl
dec
ss
xchg
fsubs
jp
sub
aam
jnp
cli
jge
rorl
pop
or
pusha
inc
je
cs
dec
lcall
mov
imul
push
xor
add
int3
test
cmp
mov
cmp
xchg
mov
add
stc
mov
cmp
dec
add
pop
mov
mov
rol
out
std
mov
addl
in
mov
pop
stos
mov
jno
arpl
enter
push
xchg
push
notl
adc
pop
cmp
or
jbe
aas
enter
adc
mov
mov
dec
adc
addr16
jns
cld
mov
repz
call
push
mov
rcll
mov
lea
stc
pop
subb
or
xor
pop
fcompl
sub
cmpsb
insb
ds
add
out
test
movsb
es
ficomps
les
xchg
mov
xor
lea
add
mov
inc
xor
fsubrs
push
movsl
cmpb
fcoms
movsb
xchg
mov
cmp
xchg
push
xchg
hlt
repz
out
lds
es
lods
hlt
adc
push
jl
and
fdivl
insl
xchg
dec
cld
mov
push
sub
call
cmpsl
xlat
imul
test
mov
mov
movsb
and
pushf
pop
rcll
test
mov
into
shll
cmp
adc
lods
insl
jns
mov
xchg
aad
jmp
addb
lcall
sbb
jnp
xchg
aam
lcall
xchg
or
or
adc
xor
cmc
mov
pop
mov
and
inc
add
in
mov
iret
or
cmpsl
lcall
aam
stos
sub
push
imul
rdtsc
clc
mov
mov
test
lahf
jl
jmp
mov
jecxz
fadds
repnz
push
adc
or
adc
in
sahf
scas
pusha
lret
pop
sti
and
stc
rorl
imul
push
mov
inc
addr16
clc
xor
mov
xchg
jbe
jmp
sub
jnp
or
repz
fdiv
jo
pushf
pop
pcmpeqd
jno
mov
xor
sub
adc
sbb
push
mov
decb
xchg
out
popa
jns
movsb
ret
out
scas
pusha
mov
xor
lret
in
in
jp
pop
mov
lods
mov
repnz
dec
lock
cmc
cmpl
lods
xor
call
xchg
popf
or
xchg
push
out
jle
push
mov
inc
aad
add
rclb
out
lods
outsb
iret
out
in
sbb
ss
popf
xchg
movsb
inc
stos
jp
mov
xor
jns
fs
rcr
mov
gs
ljmp
jmp
jno
rorl
xchg
out
inc
out
arpl
pushf
out
ljmp
add
sbb
in
cmp
sbb
cmp
call
cli
es
mov
outsl
mov
or
pop
test
ffreep
and
or
mov
lcall
push
cmpsb
outsb
jb
pop
scas
push
push
stos
and
dec
xor
in
dec
cmp
push
inc
das
popf
fdivs
pop
andb
addr16
or
nop
pop
test
inc
sbb
inc
or
insl
insb
dec
jo
dec
cmp
inc
mov
and
bound
in
fcoms
mov
insb
stos
mov
lcall
jmp
jge
scas
push
ja
sub
cltd
sub
sahf
lds
and
mov
fxch
mov
xor
cltd
scas
push
ljmp
iret
scas
dec
adc
add
pusha
fisubs
mov
xor
sahf
scas
cli
scas
and
jb
mov
cmpsl
xchg
pop
sub
mov
push
sti
jae
push
inc
pusha
ljmp
inc
pop
sub
testb
xchg
pop
popa
cwtl
aam
dec
jg
push
xchg
sub
dec
lret
mov
fcompl
inc
dec
outsl
xchg
push
push
xchg
dec
cmp
jns
pop
or
insl
xor
jecxz
sbb
and
cld
jbe
or
lock
or
repnz
sub
leave
dec
add
mov
adc
cltd
jl
int3
mov
jb
or
dec
cmp
movsb
int
dec
aam
sub
jb
mov
fldt
out
mov
inc
jne
xchg
arpl
cld
lods
mov
xor
push
pop
xchg
repz
repz
jmp
sub
iret
push
cld
je
mov
inc
daa
jae
das
lods
cld
ja
xor
insl
add
repnz
cmp
jmp
sub
adc
inc
mov
insb
arpl
stos
inc
shrl
cmp
mov
movsb
bound
movsb
pop
mov
pop
adc
pusha
xor
out
xchg
test
mov
fistpl
xchg
inc
stc
mov
mov
movsb
jecxz
popf
mov
push
fsubr
add
gs
and
xor
bound
sar
xor
and
cmpsb
dec
mov
push
sub
jl
and
icebp
cld
xlat
inc
mov
aad
mov
aaa
orl
fdivs
add
mov
xchg
push
jns
dec
icebp
mov
xor
es
das
mov
adc
imul
ret
aas
mov
jge
daa
xlat
mov
mov
mov
dec
cli
adc
je
movsb
pusha
adc
sbb
arpl
xchg
inc
decb
mov
jb
movsb
les
stos
data16
cli
jae
jb
pop
fucomip
jl
out
xchg
xchg
popa
aas
mov
fisubrl
mov
push
mov
vmread
sub
in
mov
loop
xchg
add
call
dec
or
js
rcr
add
push
sbb
mov
push
dec
enter
sbb
mov
in
stos
stos
pop
shrl
add
push
vpsllw
cltd
aas
mov
jecxz
push
pop
mov
xchg
and
mov
pushf
data16
andl
push
and
inc
adc
and
loopne
mov
rolb
jno
sub
fidivrs
movsl
xor
pop
imul
push
fstl
add
test
fs
mov
mov
sub
out
in
inc
std
mov
push
pop
xchg
call
out
std
fs
sbb
pusha
adc
lahf
jmp
shrl
xchg
cmp
jl
sbb
sub
jge
bound
sbb
cli
int
insb
lea
inc
mov
ret
fbld
les
aad
out
js
mov
pop
jge
in
fwait
adc
jmp
mov
scas
xor
insl
mov
inc
outsl
out
sub
cltd
mov
mov
enter
jp
cli
mov
shll
dec
xchg
cmp
stos
lds
inc
mov
push
inc
or
dec
push
jno
movsb
pop
movsl
sahf
push
das
mov
mov
sub
addr16
or
or
mov
pop
repz
mov
sub
cmpsl
jno
pop
push
add
mov
rolb
ret
mov
loopne
mov
mov
mov
push
push
mov
lods
add
xchg
or
hlt
scas
jbe
fs
sti
mov
aad
jnp
loope
ja
mov
test
jbe
mov
into
in
leave
jne
pop
jb
lret
movsb
or
xor
jb
jns
icebp
in
divb
int3
mov
lcall
dec
lret
icebp
or
jl
pop
jmp
sbb
mov
push
pop
mov
daa
jb
inc
push
fadd
cmp
loopne
add
mov
jb
bound
out
jp
popa
repz
adcb
or
in
or
sbb
dec
pop
xor
xchg
jg
sub
into
mov
push
and
sbb
adcl
cmc
repz
mov
into
cmp
or
popf
mov
js
xchg
push
lock
dec
xchg
arpl
mov
and
enter
nop
inc
test
hlt
pop
jb
xor
inc
gs
mov
iret
repnz
fstp
xlat
scas
push
push
push
jae
fsubrl
jp
jge
js
inc
lret
and
mov
shl
push
enter
bound
pop
xchg
cli
lea
imul
std
das
and
fistpl
mov
ss
lods
mov
dec
push
xchg
or
scas
sub
dec
imul
gs
cs
inc
mov
ds
mov
repz
test
loope
ljmp
mov
mov
cmc
sbb
std
roll
cmpsb
stos
adc
mov
faddl
xchg
inc
iret
repz
ret
fidivrl
mov
ret
repz
jmp
and
push
mov
jns
hlt
cmpsb
addb
loopne
push
lock
js
and
push
cmp
sti
pushl
shlb
xor
and
das
add
or
sbb
mov
les
das
push
enter
in
aam
dec
scas
stos
insb
arpl
call
in
mov
xor
int3
clc
xchg
push
dec
movsb
cmp
in
or
out
xchg
xor
cld
mov
sub
test
adc
sub
pop
pop
ss
bound
dec
pushf
ret
mov
test
sub
add
push
in
loope
dec
fmul
call
mov
inc
jecxz
add
cmc
dec
sub
pusha
inc
bound
mov
mov
in
mov
arpl
in
jp
ror
scas
mov
and
mov
std
and
cmpsl
pop
mov
rcrl
mov
jbe
jmp
popf
scas
std
push
jecxz
enter
xchg
test
pop
insb
sub
jle
ljmp
xchg
jge
es
jns
pop
mov
and
mov
nop
ficomps
daa
or
mov
mov
in
cmp
inc
divl
jle
jb
or
lods
in
push
and
add
js
dec
push
sub
xchg
ret
mov
aam
push
push
mov
or
xchg
hlt
jge
xchg
dec
mov
adc
cs
cli
jns
inc
mov
cmpsb
out
pop
sbb
cmp
lock
cs
sub
push
mov
sbb
icebp
andb
lods
sub
pop
mov
mov
out
or
adc
or
stos
adc
and
or
xchg
popa
push
enter
push
inc
cmp
jno
jecxz
out
pop
test
mov
aas
inc
mov
movsb
lds
cs
or
aaa
out
mov
mov
ror
es
cld
scas
sub
and
xchg
loopne
cli
sub
xchg
movsl
pushf
fwait
shr
aas
xor
dec
jb
out
jmp
sbb
sub
xchg
out
push
cmp
test
sub
bound
jge
mov
jle
adc
push
xlat
push
aam
sahf
push
sbb
sbb
inc
call
inc
push
or
mov
or
jb
rorb
andl
mov
dec
cmc
mov
mov
dec
xchg
add
stos
cmp
cmp
ljmp
jo
jb
xor
leave
and
mov
push
xchg
cwtl
pop
xchg
lea
fidivs
pop
inc
mov
push
clc
sbb
mov
sahf
sbb
add
das
aaa
lods
jge
jno
rcrl
dec
jno
mov
cli
popf
cwtl
cmpsl
pop
dec
jbe
inc
gs
mov
rcr
push
pusha
aad
dec
dec
shlb
fildll
aas
pop
push
ds
push
int3
scas
aaa
sarl
insl
xchg
push
mov
cmp
mov
lret
cmp
push
icebp
sub
adc
outsb
scas
sbb
mov
pop
inc
mov
inc
stc
cmpsl
loope
lods
std
mov
inc
movsb
call
and
mov
mov
mov
xor
mov
aas
jb
mov
outsl
stc
sbb
dec
imul
shrl
jo
lods
loop
mov
test
movsb
mov
mov
stc
mov
mov
mov
cltd
add
jmp
aaa
into
scas
imul
pusha
scas
xchg
ficoms
out
pusha
pop
push
in
adc
pushf
mov
pushf
jno
sarb
sbb
rcrl
mov
fcompl
repnz
xchg
fstps
or
xchg
or
push
movsb
mov
enter
shr
outsb
hlt
mov
mov
inc
mov
mov
push
push
cltd
out
fdivrs
mov
dec
in
sbb
mov
movsb
mov
or
jmp
push
imul
icebp
xchg
push
and
sbb
lods
sub
add
ljmp
jnp
lret
je
out
xlat
es
popf
stc
shrl
add
enter
sarb
nop
and
mov
aaa
xor
lods
insl
adc
aaa
mov
inc
hlt
movsl
fidivs
inc
scas
push
jne
jge
mov
pusha
pop
cmc
testb
js
lret
call
aad
stos
out
fisubl
jp
and
imul
jo
xchg
test
adc
js
inc
adc
dec
cmp
xor
xlat
ret
es
cld
orb
mov
or
popa
cmpsb
clc
mov
imul
pop
xlat
jns
lds
pop
xchg
in
subl
or
xor
fiaddl
stc
mov
divb
movsl
sub
and
lahf
cmp
or
cli
mov
xchg
enter
sbb
out
mov
or
mov
ret
lods
stos
inc
std
call
jb
es
adc
xor
mov
ljmp
sub
sti
mov
nop
inc
cltd
out
adcl
inc
inc
sbb
and
dec
mov
jo
inc
or
cmpsl
lods
arpl
leave
xchg
iret
cmc
scas
cmp
xchg
cmpb
mov
jns
lds
lcall
int3
mov
sbb
mov
call
imul
fnstenv
ret
jae
lds
test
lret
cmc
push
or
sub
mov
sub
jae
ret
enter
insl
cmpsl
xor
mov
fcmove
dec
adc
push
mov
scas
jb
and
stc
mov
lahf
push
orb
daa
std
pop
insl
sub
rcl
or
and
lcall
xor
mov
jb
jae
out
in
push
iret
imul
lods
fcoml
repnz
xor
push
sub
loope
jecxz
sti
pop
dec
aam
jmp
sub
jp
and
xchg
add
data16
and
enter
daa
es
sub
adc
adc
jmp
add
test
pop
hlt
xchg
fists
mov
sbb
out
popf
or
insb
mov
dec
icebp
fs
mov
jo
push
mov
cmpsl
fs
inc
push
xchg
je
push
cmp
sbb
inc
movsb
adc
call
sub
fisubrl
cs
stos
call
xchg
lock
in
jnp
or
icebp
cmc
ficoms
shl
pusha
lret
sarb
cwtl
and
movsb
mov
push
call
gs
dec
pop
stos
je
cs
incb
xchg
mov
and
adc
ds
ret
mov
sbb
cmpsl
and
adc
push
and
mov
nop
je
jno
mov
push
push
divl
lods
dec
divl
mov
xchg
sub
pop
sub
xor
push
in
out
xor
push
fwait
jb
psubsb
push
add
lods
dec
mov
scas
call
pop
fnstcw
stos
call
push
and
cmp
jg
fcmovb
mov
mov
scas
das
push
dec
loope
xor
cli
scas
out
jge
inc
movsb
iret
and
dec
cs
xor
outsl
mov
pushl
into
mov
lods
dec
inc
mov
scas
xchg
xchg
lds
hlt
cmpsl
jge
pop
add
and
ret
fcomp
adc
fwait
into
pop
cmp
movsb
mov
ljmp
lss
test
jbe
adc
lds
ficoms
cmp
clc
push
sub
incl
fisttps
dec
mov
mov
fmull
add
mov
add
fcomps
sbb
mov
pop
sarl
mov
mov
sub
mov
enter
push
fimull
inc
stos
xchg
inc
ret
mov
icebp
lods
ja
adc
roll
add
fmulp
sbb
cmp
cmpsb
jnp
es
dec
enter
jb
inc
xchg
jae
jno
imul
into
jge
xor
cli
mov
stos
sub
jnp
xchg
shrb
sbb
in
rcll
mov
in
mov
xchg
xor
iret
adc
cmp
in
gs
mov
out
sub
fprem
xchg
scas
lcall
shrb
fmull
daa
or
cs
push
mov
inc
mov
dec
add
rclb
aad
pop
lods
lds
aas
mov
mov
push
ljmp
mov
mov
into
repnz
jae
adc
mov
jb
sub
dec
and
lods
notb
insl
pushf
repnz
push
imul
call
fst
imul
pop
jno
inc
repz
push
es
gs
out
or
imul
push
loopne
pop
cmpb
xor
xor
filds
rep
or
inc
into
movsw
clc
inc
cmpsb
mov
inc
cmpsl
add
cmp
call
mov
test
xor
add
outsl
stos
mov
insb
mov
mov
inc
sbb
push
lcall
addr16
xor
lock
ret
push
aaa
pop
add
pop
hlt
fstpt
mov
pop
int
dec
inc
jbe
sbb
adc
ret
repz
mov
lock
fst
xchg
jge
push
inc
aam
sub
fwait
int3
cmp
add
stos
data16
into
mov
lds
nop
jns
jnp
mov
sbb
fldt
test
sub
addr16
test
scas
dec
icebp
cmp
out
jmp
lret
mov
arpl
iret
add
or
mov
lds
aad
orl
sbb
xorb
push
je
sub
daa
mov
jns
xor
xchg
lods
pop
in
lret
push
inc
push
daa
adc
xor
mov
sahf
xor
andl
and
int3
push
loopne
xlat
lret
jmp
lcall
in
mov
push
jne
mov
xor
insl
xor
mov
ss
cmpsl
lods
inc
ljmp
push
inc
fldcw
lcall
xor
nop
clc
push
lods
add
sbb
xor
cld
pop
pop
cmp
rolb
or
pcmpgtw
inc
imull
push
fstpl
mov
test
push
push
push
adc
orl
shrb
push
sub
enter
rcrb
fcomps
sub
or
inc
jb
dec
mov
mov
pop
adc
in
pop
mov
mov
addr16
fistpl
xor
push
mov
fistpl
out
mov
mov
sbb
xlat
jmp
popl
int3
aam
jo
adc
pop
sti
movsb
int3
sti
inc
imul
sbb
or
xor
lea
sbb
test
movsb
or
andl
ljmp
imul
movsb
dec
mov
sar
xor
movsb
push
push
push
sub
and
sub
xchg
xor
dec
jae
out
adcb
sub
lods
in
mov
dec
fisubl
mov
faddp
push
icebp
arpl
into
mov
js
fsubs
addr16
clc
loope
or
jne
pop
mov
sub
mov
inc
adc
sub
inc
andl
cwtl
cltd
add
lahf
add
int3
clc
sahf
ss
les
jmp
pop
je
test
outsl
xor
cmc
xor
sbbl
add
xor
mov
or
mov
lods
cli
or
cmp
mov
movsb
stc
or
cmpb
jno
cld
xchg
scas
ds
loop
pusha
into
aaa
adc
push
iret
jmp
mov
lods
cmp
orl
clc
jl
arpl
fnstsw
in
mov
js
repnz
xor
out
clc
loopne
enter
and
daa
push
repnz
and
out
gs
clc
inc
scas
push
inc
es
or
test
xchg
fadds
movsb
sub
push
add
pusha
mov
mov
lods
fdivrs
sahf
or
cmc
fiadds
loope
mov
inc
in
lods
cld
xor
fyl2x
push
insl
sbb
xchg
or
ds
add
sbb
cld
xor
mov
cmp
dec
inc
push
lock
mov
mov
scas
lea
sub
jecxz
ja
push
int3
pop
addl
dec
push
int3
xor
mov
fisubrl
xchg
sarb
fcmovb
insb
pop
outsb
adc
mov
hlt
pop
cmc
dec
aas
stos
std
movaps
inc
movsb
pop
test
xor
pop
sahf
lock
adcb
or
mov
lcall
imul
ret
loope
add
cmp
sub
sub
shlb
jb
and
fsubr
mov
adc
ret
stos
pusha
sbb
pop
movsb
ficoml
push
mov
das
xchg
mov
cmpsb
pop
sti
add
xchg
dec
xchg
out
push
jns
pop
mov
dec
mov
out
mov
mov
fwait
decl
and
pop
imul
xchg
add
pop
aas
ss
mov
stos
mov
sbb
lock
push
pop
in
sbbb
stos
insl
ljmp
loope
cmc
and
ret
in
ret
es
test
into
mov
das
or
fcomip
xchg
push
jg
xor
cmp
popf
int
add
lock
mov
pop
pop
sub
or
sbb
xor
jno
scas
mov
pop
jne
inc
js
mov
enter
insb
cltd
push
adc
mov
jge
shlb
mov
push
gs
jmp
xorb
xor
mov
sti
repnz
sbb
or
leave
mov
insl
push
xchg
sbb
push
mov
mov
mov
mov
shlb
mov
xor
or
dec
scas
ret
ljmp
sub
dec
popa
pop
adc
xchg
inc
xor
inc
sub
jns
rcrl
inc
mov
test
insl
je
push
add
fiaddl
xor
insb
leave
sbb
push
stos
imul
aaa
push
shlb
jns
xchg
outsl
leave
add
mov
test
adc
xor
xchg
pop
pusha
fiaddl
test
imul
loope
jne
jno
movsb
cmc
repz
add
or
es
rol
leave
dec
sarl
push
sub
icebp
fwait
ror
int
lret
out
cwtl
test
inc
ret
and
outsl
jns
sub
icebp
push
push
imul
sbbl
pop
add
out
mov
fidivs
mov
mov
jne
jbe
stos
adc
push
stos
ror
pop
movl
jns
sbb
dec
in
ljmp
mov
push
sub
sbbb
adc
inc
ja
fmulp
inc
repz
jg
adc
rcrb
lss
jmp
sub
mov
cmc
mov
add
pusha
lret
les
stc
xchg
adc
sub
enter
int3
sub
pop
sub
adc
xor
pusha
mov
nop
cmc
hlt
cmp
outsl
neg
out
pop
xor
jl
in
int3
add
clc
nop
pop
or
mov
inc
sub
out
lea
cli
mov
inc
jbe
scas
push
mov
outsl
scas
push
lods
rcr
jl
cmpsl
mov
jns
pop
jl
notl
push
mov
mov
xchg
or
or
dec
lds
inc
cmp
xchg
dec
dec
or
jge
clc
add
pusha
mov
cwtl
fisttpl
inc
imul
repnz
test
jg
stos
ret
and
add
dec
sub
test
stos
fdivl
dec
lods
cmp
mov
xor
pop
shll
push
push
dec
cmp
insl
adc
jno
out
inc
aad
out
jbe
leave
mov
mov
push
subb
push
popf
mov
in
cmp
dec
push
movsb
sahf
mov
bound
jns
lret
and
lcall
call
dec
push
pusha
cmpsl
fcoms
or
mov
loope
add
or
mov
jecxz
cmp
lods
nop
dec
or
outsb
sub
lock
push
syscall
xchg
mov
scas
inc
movsb
mov
cmpsl
pop
dec
ja
outsl
xchg
cmp
ljmp
lcall
cli
shlb
fucomip
mov
push
jne
mov
xchg
xorl
lds
xchg
add
sbb
sbbb
movsl
in
mov
ljmp
or
loope
in
sahf
ljmp
xorb
sub
pop
push
ret
je
sub
xchg
shrl
push
mov
ds
push
insb
mov
sbb
or
lock
ret
dec
call
cli
jp
cld
cli
inc
rcrb
mov
sbb
pop
pop
lcall
xor
call
dec
dec
and
pop
pusha
xchg
jne
mov
push
push
xor
jb
cli
mov
cmp
cmp
fmuls
ds
sub
jle
and
mov
popa
ss
sar
arpl
insl
mov
lea
js
or
fldl
pop
and
xor
push
mov
jne
push
pop
mov
outsl
mov
ret
pop
xchg
cmp
repz
rcll
movsb
mov
xchg
lcallw
inc
xor
sub
push
sahf
loope
cmp
cmc
mov
fistps
jg
je
xchg
dec
jno
push
or
mov
xor
fcmovb
jbe
jmp
xchg
push
gs
pusha
jle
int
pop
sub
dec
adc
push
aas
and
imul
dec
inc
adc
shrb
mov
mov
push
fwait
add
and
outsl
add
dec
pushf
das
inc
and
sbb
lcall
mov
test
or
and
test
out
shlb
lret
inc
push
pop
cmovne
xor
addl
inc
sbb
mov
movsb
push
shlb
push
sub
add
stos
aaa
push
movsb
mov
mov
or
bound
cmpsb
int3
adc
xchg
fildll
adc
test
mov
scas
jns
cmp
xchg
mov
cli
loop
shlb
movsb
rcll
icebp
dec
adc
lods
pop
and
and
int
pop
cmpl
popa
mov
pop
sub
stos
xlat
mov
aas
loope
in
lock
shr
fdivl
add
mov
dec
lods
test
in
out
inc
dec
cmp
add
pop
sub
cmc
shrl
cmpsb
and
repnz
shll
mov
and
into
push
xor
jge
aas
push
adc
dec
push
mov
popa
push
and
lds
loope
fcoml
push
push
test
inc
outsb
jmp
xor
sub
test
push
inc
sbbl
sti
ljmp
xchg
lret
pop
jb
movsb
and
mov
jae
jp
mov
mov
sahf
out
cmp
enter
adc
push
sbb
andl
pop
xchg
push
xor
es
sub
decl
imul
aam
cs
mov
out
mov
imul
sub
dec
jns
xchg
jo
jge
push
mov
aaa
je
or
inc
lcall
movsb
xor
inc
in
jno
mov
sbb
mov
ss
inc
mov
push
stc
es
and
jge
cmp
push
sbb
and
cld
sahf
pop
fidivs
and
loopne
adc
sti
mov
sahf
dec
pusha
jnp
scas
jb
ljmp
pop
cmp
data16
jmp
and
jmp
test
inc
push
cs
mov
push
bound
idivb
sub
imul
fisttpl
xorb
ss
jae
push
mov
or
or
xorb
sbb
ljmp
and
sbb
fistpl
xor
cs
and
scas
pop
xor
lds
mov
lods
mov
dec
or
push
les
jle
test
cmp
out
fdivs
fs
into
mov
aad
pop
call
cld
ja
or
pop
outsb
inc
or
xorl
jns
leave
aaa
add
push
sbb
ljmp
sbb
sub
sub
cs
pop
ret
add
cltd
mov
movsb
pop
sub
loopne
xlat
ljmp
cli
sbb
push
insl
fwait
add
dec
fucomi
xchg
data16
push
or
mov
dec
jp
outsb
mov
inc
sbb
add
add
add
cmp
or
jp
lods
add
sbb
mov
lods
cmpsb
or
add
mov
push
rclb
inc
divb
enter
mov
je
cmpsl
pusha
lods
repnz
int
les
js
out
jno
jo
xor
pusha
int
out
mov
pop
xor
push
or
test
inc
sbb
movsb
pusha
pop
push
aam
lret
pop
fidivl
xor
mov
jne
test
sbb
add
push
adc
movsb
int3
cmp
mov
mov
inc
imul
mov
imul
mov
jnp
adc
das
mov
fstpl
cwtl
movsb
std
aas
out
fdivrl
add
int3
xchg
mov
push
mov
insl
mov
les
mov
stc
push
xchg
xor
movsb
lea
push
fadds
mov
lods
scas
aas
imul
rcr
pop
adc
dec
pop
mov
jae
mov
pop
xchg
neg
cmpb
cmc
call
insb
mov
push
add
adc
xchg
xchg
test
inc
loope
cmp
ja
insl
mov
movsl
add
push
repnz
orl
push
mov
in
mov
fcmovu
cltd
sub
mov
loopne
push
push
out
mov
lods
jnp
out
test
in
adc
and
xchg
jne
dec
sarl
pop
stc
xchg
pop
xchg
push
or
inc
in
jo
lods
hlt
in
and
adc
cmp
jne
jb
add
ret
cmc
stos
cmpl
sbb
dec
test
mov
add
mov
add
xchg
push
add
fmuls
mov
sbb
add
and
sbb
jno
xchg
jae
mov
push
sub
sbb
ret
adc
jnp
shll
sbb
in
es
jg
cwtl
mov
dec
dec
ljmp
dec
mov
dec
lahf
cmp
jno
mov
sbb
into
repz
clc
aaa
movsb
loop
movb
aaa
push
jecxz
fidivrl
jmp
mov
xor
dec
sub
insl
fwait
loope
jl
sub
adc
jmp
shll
or
in
inc
jae
fdivs
subb
and
inc
in
xlat
xchg
xor
cmc
push
xchg
xchg
movsl
pusha
lret
mov
das
jmp
in
xlat
imul
test
stos
movsb
dec
out
jbe
ucomiss
dec
inc
xchg
std
jne
out
jne
scas
stc
iret
sub
pusha
inc
mov
enter
pop
mov
push
std
in
rcrl
mov
add
jns
dec
dec
mov
cmp
std
push
je
aaa
movsl
sahf
xor
ret
xlat
in
int3
mov
movsb
adc
aas
xchg
adcl
inc
decb
out
lahf
mov
mov
shrl
loop
mov
push
adc
pop
mov
xchg
into
addl
dec
imul
insb
mov
sbb
std
xorl
les
sub
je
add
loopne
clc
jae
mov
std
sbb
pusha
adc
lock
push
sbb
pop
lds
hlt
add
mov
sub
dec
pop
cmp
dec
fdivl
pop
popf
icebp
sahf
lea
inc
mull
sbb
cmpb
fsubrl
ljmp
xor
dec
int3
mov
fmulp
lcall
subl
push
popa
insb
or
inc
in
sub
imul
lret
jmp
gs
sti
push
and
fsubrl
cs
fnstenv
repnz
lcall
mov
mov
adc
mov
cwtl
pop
xchg
repz
ror
fstpt
jb
lock
mov
mov
mov
jle
call
sub
insb
add
inc
xor
or
lea
lock
das
into
inc
cmp
aad
dec
idivl
cmp
cmp
and
add
inc
xor
add
jp
xchg
aam
add
adc
lcall
int3
insl
add
push
scas
movsl
sub
inc
lock
mov
pop
mov
mov
cmp
lods
cmp
stos
hlt
sub
sub
dec
call
jns
sub
xlat
lret
jge
dec
nop
fstl
pop
repz
leave
sahf
into
mov
data16
leave
dec
ret
movsb
insl
xchg
push
stos
scas
dec
pusha
mul
fistl
mov
xor
mov
mov
inc
loopne
ret
mov
cmp
cwtl
outsb
xor
repz
pusha
bound
or
inc
add
mov
lcall
mov
mov
imull
push
jmp
adc
outsb
fiadds
jg
lcall
mov
ficompl
sub
pop
jnp
adc
push
pusha
std
dec
sti
das
lret
lods
aad
and
outsb
mov
xchg
insl
sbb
stos
mov
and
imul
aas
out
sub
aaa
lods
jle
xchg
int3
or
pop
xor
inc
mov
jge
roll
les
adc
outsb
cmpsb
mov
in
cs
rorl
andl
addl
lock
aam
mov
pop
ss
jo
inc
mov
cltd
jmp
ret
aam
mov
jp
dec
outsb
pop
push
lcall
xchg
mov
mov
push
iret
das
ss
lods
daa
mov
mov
subb
in
push
addr16
fcomp
mov
pop
lret
xlat
call
mov
fcoml
jae
call
jne
andb
cmp
pop
mov
mov
mov
dec
xor
je
cmp
jb
inc
push
inc
ret
push
xchg
adc
or
jg
inc
or
mov
jge
lds
outsl
lods
data16
sbb
lock
mov
and
jmp
lods
sub
pushf
push
xchg
in
lcall
xchg
mov
leave
jg
je
mov
push
mov
out
mov
lds
xor
push
and
mov
and
dec
test
fwait
repz
loopne
addl
jae
push
shr
ficomps
addl
enter
push
movsb
rcrl
dec
sub
lods
cmp
js
test
test
movsb
lcall
ljmp
adc
std
stos
jle
nop
ret
outsb
mov
movsl
into
int
mov
jge
xchg
jmp
fucomp
icebp
ror
cwtl
sub
or
jmp
inc
add
fdivrs
lods
in
test
add
outsb
adcl
popa
sbb
adc
shlb
ljmp
push
cmc
cli
jmp
insb
ljmp
adc
jns
or
and
fistl
add
loopne
dec
push
aam
into
add
notl
inc
cmp
outsl
outsb
aam
jns
aaa
and
inc
xchg
loope
or
movsb
push
push
out
push
jo
fidivrl
test
pusha
daa
stc
mov
mov
dec
dec
or
jne
loop
fcomi
add
sub
cmp
adc
mov
fisubrs
stos
aam
cmp
mov
mov
lret
clc
add
out
or
fdiv
in
ss
ficoms
lret
das
in
or
cmpl
icebp
mov
xchg
dec
aaa
cmpb
adc
lea
adc
shlb
test
mov
inc
jne
sbb
push
add
xor
movsb
insb
mov
cmp
stos
mov
arpl
into
sbb
xor
mov
push
inc
push
out
out
stos
sub
xchg
push
add
jle
dec
leave
outsb
xorl
mov
or
xchg
xchg
ljmp
clc
sub
lcall
adc
jmp
and
movsb
cmp
pop
jbe
iret
cs
iret
iret
adc
push
iret
pop
add
mov
xchg
jnp
test
mov
mov
jno
shlb
in
jno
adc
bound
add
pop
xchg
inc
jge
sti
jbe
dec
lcall
jmp
fdiv
out
mov
ret
sbb
cs
dec
jecxz
leave
sub
push
sti
adc
pop
mov
pop
pop
out
push
push
add
aam
gs
cmp
repnz
adc
mov
vmwrite
std
cmpsb
popf
lods
ret
dec
mov
pop
out
add
enter
lods
out
dec
ja
or
cmp
js
out
enter
xchg
out
sub
test
repz
xor
push
leave
mov
jae
out
cmp
xchg
mov
jg
movsl
popf
jge
jne
push
mov
sbb
sub
movsl
push
lcall
mov
jbe
xor
jo
sub
push
and
pop
pop
dec
push
xchg
shlb
pop
push
push
add
data16
in
ret
lret
ds
dec
sub
and
mov
sub
add
mov
inc
jbe
and
loope
xor
mov
or
lret
push
sub
sub
mov
cmp
mov
scas
adc
sub
rcll
ljmp
repz
mov
lds
in
push
movb
mov
xchg
pusha
fsts
leave
xchg
leave
push
clc
jecxz
stos
mov
ficoml
jno
arpl
mov
mov
mov
pusha
and
lods
mov
or
push
jecxz
mov
in
sub
push
mov
ret
xchg
sbb
mov
mov
ljmp
or
fistpl
cli
lahf
int
shlb
sub
out
adc
test
and
lds
xor
ljmp
push
adc
mov
xor
sub
rcrl
fdivrs
jecxz
aas
lahf
lret
sub
mov
xchg
gs
cmpsl
mov
jle
insl
mov
jge
xlat
ret
int
and
cmpl
mov
mov
xchg
mov
mov
jnp
or
xor
jns
xor
das
lret
adc
lahf
mov
mov
mov
pop
xor
jae
and
gs
cmpsb
outsb
mov
mov
aas
fcmovne
aad
sbb
mov
mov
pop
sub
inc
adc
or
fbstp
lds
in
jb
cmp
outsl
mov
sub
dec
push
jle
dec
mov
jns
mov
cmp
js
movsb
jno
sbb
add
xlat
into
scas
mov
adc
and
fsubrl
into
out
xor
xor
and
ficoms
sbb
repnz
adc
popa
nop
jne
cli
xor
js
add
cld
inc
mov
outsb
aas
call
sbb
popf
xorb
and
jnp
mov
xchg
mov
in
push
sub
lahf
ret
lcall
test
pop
jge
inc
or
dec
leave
daa
pop
out
call
arpl
out
insl
mov
cwtl
ljmp
rclb
int3
les
cmp
mov
mov
cmc
dec
mov
mov
sub
stos
push
rolb
lahf
sahf
xor
and
pop
push
enter
fstpt
ficompl
les
lock
mov
fidivrl
add
scas
insb
shrb
xor
cmpsl
fmul
mov
dec
and
out
sub
lods
fdivrl
push
call
iret
push
adc
mov
sub
dec
pop
sbb
mov
aaa
aas
scas
push
mov
adc
pop
cmp
icebp
out
lcall
iret
add
sbb
hlt
psubq
mov
sub
jns
subb
std
cmc
sbb
mov
hlt
adc
gs
inc
cmp
rorb
iret
push
inc
icebp
add
mov
mov
jae
add
add
insb
cmp
insl
imul
enter
adc
add
leave
xchg
cmp
adc
addl
mov
out
add
dec
cmpl
adc
mov
sbb
jge
aam
or
into
cmpl
mov
jl
adc
fwait
scas
faddp
sbb
jno
push
dec
mov
mov
dec
xchg
ja
in
int3
sbb
cmp
inc
pusha
sbb
mov
pop
in
mov
xor
lods
pop
daa
shrb
cmp
sub
pop
add
and
ss
push
data16
and
dec
aas
pop
sbb
lea
jnp
rep
loope
pop
jae
jo
in
add
stos
mov
fcoml
adc
mov
cli
addr16
pop
mov
fsubp
andb
sbb
adc
xchg
jns
xchg
pextrw
bound
and
xchg
popf
xor
sub
jg
xor
cmp
cltd
jge
jno
jb
cmpsb
adc
mov
scas
shrl
dec
in
ja
mov
icebp
lret
xor
mov
pop
or
lret
int
xchg
sub
insl
xor
cs
popa
stos
mov
sub
movsl
push
jno
js
mov
dec
adc
fisubrl
xchg
inc
in
outsl
ljmp
jecxz
mov
movsl
mov
xorl
add
fs
outsb
idivl
dec
pop
test
in
arpl
leave
cmpsb
rcl
pop
mov
arpl
cwtl
aad
push
out
pop
outsl
jp
and
jecxz
sub
in
mov
jno
sbb
fs
outsl
mov
scas
scas
push
loope
test
lcall
out
lcall
jp
lods
mov
or
ret
pop
sahf
hlt
inc
pushf
push
les
cmp
fcmovb
dec
cmp
addb
sbb
out
fwait
inc
mov
icebp
adc
jbe
sbb
lock
out
out
jle
jmp
mov
ja
mov
mov
nop
cltd
fwait
and
xchg
xchg
mov
dec
aaa
mov
stos
cmpsb
lods
jnp
push
mov
imul
mov
add
cld
rolb
add
fsubrl
cmp
cmc
mov
fdivrs
scas
les
add
adc
or
mov
outsl
lcall
jmp
sbb
jo
inc
js
or
xor
movsb
nop
push
imull
aaa
loope
mov
scas
add
adc
lds
sub
movsb
loope
into
gs
mov
cmpsb
gs
dec
repnz
int3
lar
mov
push
aad
pop
mov
js
sbb
lret
fmull
stos
iret
push
cmp
in
jg
pop
cmpsb
jmp
es
push
mov
and
mov
loop
mov
lea
shrb
push
cli
xchg
jle
cli
jecxz
push
mov
or
in
xchg
cwtl
and
pusha
outsl
movsb
push
shll
rcl
hlt
testl
or
leave
cld
ret
repnz
push
aam
jbe
imul
pop
mov
ds
cmpb
ja
sub
mov
test
and
jne
inc
orb
orl
push
movsb
sbb
es
push
jns
addl
push
cvttps2pi
ljmp
inc
lea
jmp
dec
jge
fisubrs
decl
sub
inc
adc
mov
sti
pop
or
cmpsb
out
inc
mov
jecxz
pop
or
outsb
ja
outsb
stc
xchg
sahf
inc
lcall
mov
movsb
cmpsl
cmp
dec
mov
mov
sbb
sahf
outsb
idivl
sbb
dec
and
push
leave
mov
xor
jns
or
stos
cmp
xor
cmp
iret
xchg
popa
aad
push
xchg
lock
dec
ret
xor
and
stos
xchg
test
jge
sub
in
or
jbe
lcall
sub
mov
subb
dec
test
loope
pop
popf
stos
jno
imul
and
repnz
jae
cmpsb
aad
adc
xor
insl
lock
cmp
xor
mov
xor
and
jge
mov
adc
je
jmp
test
jo
ret
enter
out
in
or
and
dec
inc
mov
daa
jae
xor
jbe
dec
int3
stos
xor
push
shrl
jns
iret
cs
movsb
nop
mov
xor
imul
pop
mov
mov
in
add
aad
mov
add
hlt
jnp
pushf
and
mov
mov
xchg
jnp
sahf
sahf
sbb
jnp
aas
test
or
loope
jge
movsl
stc
and
mov
and
cwtl
nop
sub
and
int
shll
mov
loope
dec
push
mov
popf
bound
repz
movsb
mov
ss
mov
inc
mov
jns
cmpsb
out
test
jae
sti
pop
and
inc
fs
adc
cltd
dec
mov
xchg
mov
ret
lea
cmp
insl
inc
leave
scas
xchg
sbb
loopne
pop
pop
repz
pop
sub
mov
xchg
fidivrl
das
pop
jmp
and
or
pop
jmp
jno
and
movsb
sbb
push
shlb
push
jae
in
mov
mov
jb
fisttps
cmp
mov
pop
daa
jge
rcll
mov
idivl
movsb
jno
mov
dec
mov
lods
aam
mov
les
mov
inc
mov
clc
xor
call
add
jmp
adcl
hlt
leave
lcall
push
push
divb
cmp
ret
and
adc
pop
out
hlt
sub
xchg
ss
sbb
mov
rclb
es
fisttpl
push
lods
sar
dec
or
and
lods
in
test
aaa
adc
cmp
into
xchg
and
icebp
jno
sub
aam
clc
mov
lods
cltd
jge
xor
lret
in
fsub
pop
gs
enter
mull
xchg
inc
push
sbb
scas
movsb
inc
lock
imul
and
xor
add
dec
mov
fisubrl
inc
rcr
insb
push
or
lods
fnstcw
stos
sub
pop
mov
sbb
pop
jmp
inc
fists
mov
push
outsb
add
or
loope
push
pop
pusha
cld
cmc
repnz
sbb
push
pop
out
nop
pop
jnp
inc
dec
xor
dec
movsb
mov
push
inc
lds
mov
cld
sahf
sbb
repz
mov
scas
loop
or
dec
xor
add
shll
adc
insb
fwait
cmpsl
xor
lret
je,pn
ss
insl
xchg
arpl
icebp
subl
sub
aam
lods
jae
aaa
jns
or
repnz
lods
inc
mov
int3
stos
loopne
dec
push
stos
imul
adc
mov
arpl
das
push
pop
test
pusha
mov
cli
cmpsb
xor
dec
sbb
call
jmp
mov
sub
je
pop
xchg
dec
ss
push
push
mov
leave
mov
subl
xchg
jbe
iret
in
je
sub
clc
rolb
sbb
cmpsb
mov
mov
lcall
push
mov
mov
xlat
jecxz
mov
sub
cwtl
repz
jmp
jae
mov
xchg
inc
cmc
std
inc
out
xchg
data16
stos
jnp
lods
sbbl
mov
jb
inc
ss
add
sbb
std
inc
outsb
jnp
mov
xchg
in
les
cmp
cmpsb
xor
push
scas
push
pop
mov
cs
int
icebp
aas
pop
adc
dec
mov
mov
cwtl
inc
jmp
jge
xchg
loope
sbb
scas
jmp
mov
movsb
movsl
jne
into
and
dec
jno
shl
lods
int
fxch
incb
ja
lock
fwait
aas
cli
test
je
jmp
aas
mov
lea
movsb
mov
pop
xor
xor
loope
out
ss
inc
mov
and
mov
mov
test
jp
jno
jp
sub
fmuls
mov
lds
adc
aad
mov
ljmp
adcl
stos
sbbb
xcrypt-cfb
cmpsl
loope
mov
mov
stc
sahf
or
xor
xor
into
fsubrs
jns
hlt
push
out
dec
mov
mov
sub
xlat
leave
into
rcrl
dec
sbb
movsb
dec
fnstenv
pop
lret
out
and
hlt
stc
dec
scas
pusha
lcall
cmp
pop
pop
and
sbb
push
cltd
sahf
mov
in
mov
out
es
adc
adc
xlat
cmp
jo
lds
aam
lods
mov
inc
pop
cmc
inc
and
mov
add
mov
sbb
cmpsl
mov
dec
lret
fwait
lods
xor
bound
push
stos
aaa
loope
insl
and
xchg
mov
mov
fiaddl
inc
out
shll
pop
mov
fwait
mov
jmp
stc
and
mov
sub
cmp
mov
es
mov
push
gs
js
mov
jo
fcomps
sub
push
daa
pop
dec
mov
xchg
and
or
clc
push
loope
scas
push
subl
stos
add
cmpsl
add
lock
das
pop
sub
jle
sub
insb
sbb
movsb
jge
xchg
pop
xchg
mov
fists
adc
jp
popl
and
cs
inc
mov
push
xchg
mov
and
xchg
mov
loope
mov
lcall
cmp
lret
sub
xor
adc
je
xchg
xchg
xor
sbb
mov
push
mov
pop
test
lods
pop
arpl
insb
fnstcw
mov
xor
orl
jnp
add
dec
cmpsl
popw
jge
xchg
mov
add
aad
sub
xchg
jp
imul
stc
cmpsb
sub
jb
test
dec
aaa
add
lock
mov
mov
cld
inc
movsb
fcmovu
push
nop
inc
inc
mov
inc
cmp
ret
or
cmpsb
lods
mov
mov
inc
dec
pop
mov
loop
mov
jl
scas
int
xor
pop
arpl
insb
ljmp
xor
bnd
push
xor
movsb
fmul
mov
lods
xchg
xchg
std
and
or
mov
imul
pop
das
push
or
je
rcrb
dec
mov
dec
cmp
push
lcallw
mov
inc
outsb
cwtl
mov
cmp
sbb
addr16
push
mov
movsb
cwtl
adc
or
push
test
stos
into
lret
xor
pop
data16
fdivrl
lret
lods
cltd
enter
orl
dec
call
into
or
pop
mov
ss
loopne
in
sbbl
jg
dec
movsb
cmp
adc
jge
adc
cmp
dec
xchg
adc
pop
mov
lds
aas
pusha
in
pop
lods
jecxz
movsb
push
jne
mov
pusha
inc
cmpl
adc
movsb
pop
divl
inc
ret
or
and
shrb
nop
addb
and
jecxz
adc
mov
enter
in
sti
insl
ljmp
inc
lods
stos
repnz
jp
dec
fwait
and
xor
mov
loope
push
sarb
das
out
test
jbe
lret
int
push
aad
xor
faddl
sahf
adc
push
das
subb
xor
xor
xchg
adc
mov
mov
xchg
in
inc
movsb
mov
aam
dec
sahf
lea
out
add
jns
fcompl
fisubrs
sbb
and
hlt
mov
scas
push
cmpsl
xchg
subb
lods
cmpsb
adc
icebp
sub
cmp
js
sahf
cmp
sub
or
jb
xlat
movsb
nopl
sti
cltd
lcall
imul
lods
mov
pop
test
std
push
mov
sbb
ret
bound
lds
push
mov
cmc
ja
jae
cmpsl
icebp
xchg
adc
dec
mov
test
ja
rcrl
aad
mov
rorb
fstps
roll
dec
sub
jl
push
dec
sti
hlt
and
adc
sub
jge
cmp
pop
sub
stos
cmc
movsb
repnz
sar
jbe
mov
adc
xchg
sahf
inc
notl
adc
mov
fcom
cli
cmp
push
jb
mov
stc
dec
push
jbe
xchg
mov
add
loope
mov
stos
and
pop
rcll
pop
push
bound
fisubl
scas
leave
mov
fisttpl
jo
xlat
push
and
jbe
jns
int3
xor
fstps
ljmp
add
and
jae
xchg
or
shrl
xor
dec
jge
or
push
adcl
xor
out
ljmp
ret
aad
outsl
push
push
push
rcll
push
mov
jge
leave
pop
scas
push
sbb
test
sbb
add
adc
sar
data16
and
pop
hlt
adc
and
notb
sbb
cld
imul
add
mov
push
lods
mov
sbb
ss
or
or
inc
int3
push
cmp
cmp
test
mov
ficoml
sti
movsl
fisubrl
enter
mov
dec
sbb
cmp
stos
xlat
jns
shlb
mov
jg
icebp
cmp
imul
and
aaa
cmp
add
sub
bound
mov
mov
addl
jnp
push
into
and
cmp
hlt
outsb
test
mov
notb
adc
stos
das
scas
movsb
cmp
push
jbe
mov
ljmp
gs
add
jg
inc
stc
pop
icebp
add
icebp
movsb
loope
push
and
push
scas
adc
cwtl
stos
push
sbb
xchg
ret
xor
dec
mov
adcl
in
pop
fucom
inc
mov
lea
sub
jp
push
aad
orl
jbe
sbb
sub
or
fcompl
dec
out
shlb
sub
jmp
cs
rolb
and
test
inc
rorl
xchg
in
jno
mull
outsb
stos
or
adc
aad
lock
js
cmp
push
mov
movsb
scas
push
or
loopne
add
xchg
stos
sub
fdivr
arpl
movsb
dec
sub
addl
fcoms
mov
pop
cmp
mov
repz
mov
jg
stc
mov
pop
aam
into
push
pop
cmpsl
test
jge
pop
outsb
xor
xor
pop
mov
fs
push
mov
jae
orb
sub
cmc
bound
scas
popa
mov
mov
add
arpl
pop
dec
pop
push
jae
stc
dec
aas
pop
cld
pop
dec
inc
mov
dec
decl
lahf
adc
cld
cmc
fsubrs
outsb
stos
xchg
into
sbb
call
cmpsl
inc
subb
mov
mov
test
loopne
dec
mov
sbb
adc
rcll
pop
xor
js
mov
jnp
insl
bound
imul
sbb
sub
les
push
adc
or
jle
scas
xchg
neg
js
mov
into
and
or
lret
inc
cmp
pop
xchg
xor
in
mov
mov
xor
inc
pop
pusha
cmp
movsb
add
or
xor
movsb
sbb
sub
out
lock
xor
scas
fsubl
out
lea
push
frndint
dec
mov
leave
push
stos
mov
fcmovnbe
add
aam
pop
jb
addr16
lret
dec
movsb
and
add
imul
sbb
jmp
arpl
xchg
push
mov
clc
or
xchg
mov
lds
addr16
cmp
jge
iret
stos
push
jecxz
push
xor
mov
and
mov
jns
mov
xchg
rep
xlat
cmp
add
in
les
pop
mov
hlt
or
push
mov
idivb
cmc
ret
shrl
js
sub
mull
jns
sub
adc
adc
add
imull
les
lcall
add
mov
bnd
icebp
or
ror
aam
xor
hlt
add
lods
jnp
pop
stos
adc
repnz
mov
ljmp
jle
sbb
mov
shl
push
leave
adc
fcomps
mov
or
sbb
repz
fnstenv
sub
push
jl
cmpsl
add
repnz
aad
xor
fadds
nop
sbb
inc
and
mov
lock
stos
outsb
repz
sbb
jle
aaa
jge
mov
cmpsl
and
cltd
leave
out
pushf
inc
filds
or
cwtl
mov
sbb
pushf
adc
adc
pop
jge
cmp
stos
cmp
xchg
jnp
mov
jns
jns
cmpsl
fwait
sub
push
mov
or
sbb
test
jg
pop
ficomps
test
cli
fs
sub
inc
mov
std
iret
fisubrl
inc
bound
insl
cmp
les
mov
lea
push
pop
negb
aad
jle
in
arpl
inc
mov
lds
push
dec
push
jge
fidivl
int3
mov
inc
mov
in
enter
mov
add
es
movsb
stos
rorb
push
cmp
in
jge
fiadds
addr16
shr
xor
mov
aad
clc
xchg
daa
push
ss
repz
cmp
or
xor
jbe
jns
fidivl
scas
loopne
jb
scas
pop
add
dec
cmp
movsl
js
jg
cmpsb
dec
mov
mov
sbbl
cltd
mov
scas
sub
mov
dec
push
ror
enter
mov
ds
or
push
push
insl
xchg
mov
mov
lods
popf
inc
loopne
shrl
sbb
jp
test
repnz
movsl
jmp
repz
test
cmc
mov
pop
repz
jno
mov
mov
push
ljmp
lods
mov
push
mov
jno
movsb
sub
or
sub
and
adc
arpl
add
mov
dec
jecxz
jmp
outsb
mov
mov
aas
in
les
and
xor
repnz
pop
jl
or
aam
cmpsl
imul
sub
dec
bound
arpl
mov
jge
fdiv
mov
sub
adc
shrl
loope
jbe
push
leave
pop
xor
test
cmp
pop
nop
add
call
mov
lds
xchg
out
flds
mov
jbe
mov
aam
addr16
lds
pop
xchg
into
add
fadds
shl
jnp
insl
out
mov
sbb
pushf
adc
adc
daa
dec
lock
gs
movsw
shlb
sahf
push
imul
ja
xchg
out
repz
pusha
push
push
inc
mov
xor
out
push
mov
sub
push
dec
push
inc
pushf
sbbb
pushf
cmpb
push
pop
sbb
xchg
testb
mov
jns
mov
lods
mov
add
push
dec
pop
mull
rclb
push
push
scas
xchg
inc
int
jge
fmulp
imul
negb
push
and
loope
mov
jp
insl
jmp
pop
mov
adc
sub
lahf
cmpsb
adc
xchg
sub
dec
jmp
decb
lcall
adc
bound
aaa
pop
jae
iret
repnz
lods
ds
jecxz
dec
out
lods
cmp
dec
sbb
sub
sub
bnd
sahf
jp
out
ret
scas
adc
iret
mov
test
rcll
in
mov
inc
pop
or
fldt
test
pusha
push
rclb
pop
mov
das
pmaxub
jne
push
jo
jge
cmp
fimuls
into
add
inc
aas
loop
orl
mov
shl
mov
sbb
add
es
xlat
lods
sub
icebp
rcl
xchg
shll
mov
cmp
andl
shrl
inc
call
lea
andl
mov
adc
addr16
push
popf
sahf
push
pushf
int3
in
inc
sahf
adc
loop
jnp
sub
es
cmc
test
nop
sbb
push
pop
popa
jbe
push
imul
das
adc
or
scas
mov
cmp
cmc
push
popl
pop
jbe
testl
in
dec
lock
or
lods
jmp
xchg
push
dec
das
es
inc
data16
xor
adc
es
dec
lds
mov
or
inc
movsb
std
mov
push
push
sbb
mov
jge
out
sahf
xorl
cmp
incb
push
mov
xchg
mov
cs
jb
out
in
xor
add
sub
lods
mov
sbb
imul
subb
mov
repz
hlt
icebp
pushf
pop
mov
xchg
shll
jns
orl
push
jbe
stos
lahf
stos
ret
sbb
mov
mov
ds
imul
dec
mov
test
sub
aam
dec
sahf
leave
cwtl
and
sub
push
test
jns
repnz
les
sarb
and
scas
mov
adc
sahf
push
or
push
icebp
mov
xchg
jbe
mov
mov
xor
cmp
mov
push
dec
cwtl
insb
enter
addr16
cmpsb
js
adc
xchg
jno
add
lock
push
push
mov
mov
sbb
xchg
mov
fcmovne
fstl
out
sbb
stos
repnz
bound
sbb
adcl
cmp
ja
ss
fsubrs
nop
cmp
ds
ficomps
inc
xchg
mov
ret
ljmp
mov
stos
adc
mov
sbb
icebp
pop
mov
pop
and
jne
leave
pop
push
iret
ss
cmpsl
xlat
pop
jae
xor
jg
mov
int3
lds
sub
mov
inc
cmp
sbb
hlt
jmp
shrl
sbb
push
cmpsb
nop
and
push
decl
sti
sahf
and
adc
mov
daa
mov
dec
jecxz
movsb
or
sbb
pop
in
fsts
mov
addb
ljmp
dec
mov
cwtl
or
jp
jecxz
pop
pop
imulb
les
and
jg
dec
mov
stos
popa
mov
stos
dec
mov
push
lret
fwait
jmp
cli
hlt
fidivl
in
inc
sub
mov
scas
adc
fiadds
xor
pop
test
sub
cli
xchg
clc
sbb
push
scas
mov
push
adc
push
clc
pop
insl
hlt
bound
jns
cwtl
test
rcr
or
movsb
bound
sti
movsb
aas
repnz
mov
inc
insb
xchg
add
fadds
and
mov
fucomip
dec
jns
inc
loopne
icebp
cli
stos
cmp
dec
shll
cmp
insl
pop
leave
xchg
sub
or
mov
fistpl
movsl
addr16
lds
inc
outsl
test
push
les
mov
sbb
ljmp
aam
or
rorl
into
adc
inc
or
mov
xor
call
out
sbb
push
fs
cmc
les
out
sbb
sbb
or
out
push
pop
daa
mov
sbb
pusha
or
ss
inc
cmp
jmp
mov
sub
fisttpll
push
mov
mov
lcall
rol
cli
movsl
das
out
sti
jb
in
sub
mov
xchg
je
movsb
iret
pop
jno
pushf
iret
add
fcmovnbe
cld
movsl
loope
test
jae
nop
mov
repnz
push
mov
xlat
dec
insl
jbe
dec
mov
xor
mov
or
xchg
xchg
std
out
rorl
popa
add
fwait
push
jns
cwtl
inc
mov
test
out
insb
jns
dec
jnp
out
rep
das
xchg
pop
jb
ljmp
cmp
dec
and
stos
ljmp
fsubl
outsl
sub
test
loope
mov
pop
cmc
bound
rorb
xchg
and
sbb
stos
std
ret
int
jge
pop
xchg
sub
jge
outsb
sahf
fidivrs
mov
sbb
push
mov
or
mov
inc
es
cmp
test
sub
xor
push
insl
mov
sahf
push
mov
jae
mov
mov
mov
mov
hlt
dec
sbb
dec
sub
jle
jb
inc
ljmp
sbb
sbb
pop
fcomi
in
push
sub
xchg
fbld
mov
movsb
inc
xchg
add
je
push
rolb
cmpsb
in
sub
jmp
dec
movsb
cltd
outsb
sub
or
sarl
push
jl
dec
lock
sbb
rclb
push
adc
pop
orl
or
cli
push
icebp
aad
jbe
lcall
fcompl
ficompl
andb
lods
xchg
adc
mov
lcall
aaa
shll
xchg
pop
and
movsb
mov
mov
add
fsubrp
pop
jbe
insl
mov
xchg
xor
das
sub
sbb
cs
mov
push
inc
push
les
ds
pop
xchg
cwtl
leave
inc
cli
int3
loope
or
int3
ljmp
adcl
xchg
xchg
jb
iret
xchg
in
jl
cmp
sub
xchg
add
dec
pop
add
mov
pop
aad
lgs
inc
mov
add
sub
neg
imul
pop
ret
je
sub
push
mov
or
and
jo
mov
cltd
jl
repz
mov
push
sbb
js
ljmp
mov
jp
call
adc
je
fistl
ret
outsb
cld
jns
pop
insl
shl
aaa
xchg
and
pusha
add
dec
out
cli
insl
addb
shl
lea
mov
mov
lods
inc
andl
jns
and
and
les
dec
mov
popf
xchg
adcb
movsb
loope
lahf
icebp
lds
lret
out
xor
mov
aad
add
sub
sub
push
pop
jg
pop
cs
sti
adc
adc
pop
callw
sub
mov
cs
mov
lods
xor
mov
iret
pushf
adc
mov
xor
daa
sahf
cld
dec
dec
adc
push
inc
sub
es
or
movsb
dec
or
repnz
int3
inc
or
xor
cs
mov
pop
cmp
inc
push
pop
sbb
scas
sahf
insb
push
dec
xchg
or
sub
iret
insb
mov
stc
shl
loopne
mov
cs
cmp
gs
in
jns
sahf
sbbb
push
mov
imul
call
in
push
mov
or
dec
xor
ljmp
enter
sub
shrl
lods
aam
inc
call
mov
mov
jbe
flds
push
pop
xor
push
loope
mov
mov
orb
rcll
scas
fmul
sbb
sti
ss
push
std
dec
pusha
inc
call
cmp
enter
mov
insl
repz
imul
mov
pusha
push
icebp
sub
mov
jmp
or
and
insl
ds
inc
pop
jns
add
xchg
adc
mov
hlt
ret
mov
ret
cs
mov
add
pusha
es
xor
xchg
loop
je
repz
movsb
mov
ret
loopne
jp
cmp
jne
add
lea
sbb
lret
unpcklps
add
out
jnp
pusha
mov
sub
shlb
int3
sbb
cmc
idivb
jmp
mov
addr16
sahf
sub
xor
leave
leave
lahf
lods
fimull
bound
cmp
sub
test
bsf
adcb
hlt
lock
adc
scas
dec
sub
sub
mov
jnp
bound
pop
push
fstl
repnz
mov
mov
cmp
add
mov
into
pusha
arpl
aas
daa
push
nop
dec
sub
push
pop
pop
insb
je
or
idivl
push
sbb
push
fcom
sbbb
jae
movsb
in
call
mov
aam
xchg
push
mov
dec
test
xor
mov
int
in
xchg
xorb
stc
into
pop
push
pusha
jl
cmp
movsb
icebp
dec
popa
sub
mov
lods
insl
fsubs
fwait
sub
notl
nop
mov
mov
enter
jbe
lea
sbb
push
adc
das
mov
and
xor
repnz
ja
loope
shll
and
dec
ror
add
out
jno
mov
mov
lds
add
and
mov
fmul
cmp
repnz
adc
clc
mov
insb
jno
xor
jmp
xchg
addr16
lods
movsb
mov
sbb
pop
jb
ret
repz
cld
xor
movsb
lcall
outsb
lds
push
nop
mov
push
pop
stc
les
lahf
rcll
js,pn
lock
sub
jno
inc
sub
iret
pop
cmp
push
sub
inc
insl
out
jae
sbb
cli
sti
clc
bound
mov
push
jno
fisubl
pop
and
call
dec
idiv
mov
pop
push
dec
imul
scas
movsb
adc
adc
fldt
andb
pop
js
inc
mov
in
or
insb
pop
jmp
pop
nop
movsb
mov
inc
pop
hlt
mov
push
into
frstor
mov
cld
mov
stc
int3
push
sbb
cmp
subb
cmc
add
hlt
and
shr
std
jno
add
push
scas
loope
fdiv
insb
in
mov
cmp
enter
ja
cmp
lods
mov
int3
fsubl
jns
gs
xor
enter
call
mov
bound
dec
jb
xor
mov
pop
xchg
popf
mov
sub
sub
mov
dec
xor
movsb
pop
int
pushl
jb
hlt
aad
hlt
cltd
jbe
fsubrs
aam
js
cmpb
lds
notb
xorb
xor
loope
xor
mov
inc
push
mov
xor
call
adc
repz
lods
loopne
out
into
in
mov
mov
or
cmp
shl
dec
cmpsb
ficoms
cmp
sub
sbb
insl
dec
push
mov
sbb
push
pop
mov
dec
push
arpl
cs
icebp
xor
stc
repz
inc
repz
and
popf
xchg
push
cld
adc
lods
mov
stc
mov
ret
lods
jae
nop
lock
insl
mov
mov
cmp
adc
iret
lods
jge
add
arpl
or
mov
scas
inc
outsl
in
push
xor
fcomi
call
adc
jge
pop
pop
dec
mov
ds
adc
push
shrl
fwait
adc
mov
jb
dec
lret
hlt
loop
add
fdivrl
sub
push
xor
or
and
ljmp
xchg
in
xor
sahf
cmp
sbb
lock
lcall
inc
subb
pop
subl
aaa
push
mov
stos
adc
aam
add
daa
subb
aas
add
adc
movsl
xor
adc
mov
rorl
lret
mov
jb
xchg
jne
js
jb
fdivrl
add
sub
xchg
lods
bound
adc
xchg
push
aam
dec
xchg
and
lods
sbb
push
xchg
in
fdivrs
hlt
adc
mov
or
enter
or
lret
pop
fists
fmull
or
pop
mov
jecxz
scas
cmp
aam
lahf
push
lods
jns
xchg
adc
push
aaa
lods
mov
movsl
pop
fisubrs
mov
jne
xchg
jno
cmp
dec
repz
orl
adc
or
clc
lods
setns
movsl
xchg
jge
pop
push
lods
or
pop
test
and
js
or
cwtl
push
xchg
cmpsb
mov
es
push
in
xchg
fcoms
pop
les
dec
mov
inc
xor
adc
mov
mov
jb
sbb
mov
jb
xor
imul
fcmovu
mov
xor
icebp
movsb
xor
fyl2x
dec
jne
imul
fwait
xor
push
jg
mov
pushf
and
test
ja
mov
subb
sahf
jl
lret
loope
lods
fisttpl
xor
hlt
xlat
add
test
std
pop
mov
add
ss
and
sub
xchg
int
pop
mov
fists
loopne
sub
mov
sbb
adc
jp
stos
jmp
xchg
repz
addr16
out
push
lds
jge
xchg
mov
fwait
xor
daa
aam
jmp
mov
dec
lods
inc
test
mov
stos
sbb
les
loope
add
mov
clc
push
sub
dec
jmp
mov
testl
ss
movsb
add
adc
dec
mov
mov
adc
into
jle
sub
mov
mov
xchg
mov
and
mov
or
mov
push
mov
ret
cwtl
lds
jb
call
mov
outsl
pop
and
sub
xchg
popf
andl
ds
sbb
outsb
lods
hlt
lods
data16
insl
cwtl
scas
out
jge
pop
repz
enter
sbb
repnz
cmp
aad
push
insl
mov
std
xor
inc
das
aad
outsb
xchg
xor
je
xor
stos
andl
popa
and
out
or
push
test
dec
insl
stos
jae
jl
mov
test
cmp
sahf
push
clc
lock
jmp
movsb
loope
xchg
xchg
pop
push
repz
lods
dec
lcall
or
ljmp
subb
repnz
jl
sbb
lods
mov
sbb
jo
pop
lret
leave
push
repz
push
stos
repz
idivb
outsb
dec
test
or
outsb
dec
roll
sbb
or
out
fldt
pop
sub
bound
sbb
cmp
mov
in
mov
lock
jbe
jecxz
mov
daa
popa
or
and
fsubl
dec
adc
mov
scas
aaa
pop
ret
cmpsl
ret
jo
xchg
leave
push
or
jmp
sbb
xchg
mov
pop
xchg
add
sar
pop
jb
sub
push
bnd
subl
cmp
stos
dec
and
sub
arpl
les
outsl
loopne
jnp
or
sbb
lods
xchg
add
or
cmc
out
mov
mov
out
ljmp
outsl
and
mov
outsb
loope
movsl
ss
pop
nop
fdiv
clc
dec
jns
push
dec
cmp
mov
pop
inc
in
cmp
aaa
sub
mov
test
js
movsb
mov
xor
dec
negb
add
fwait
pop
push
push
call
test
or
insl
push
cmp
notb
sahf
xor
mov
inc
in
inc
insl
push
aad
mov
inc
je
pop
mov
or
lods
dec
xchg
cmp
loop
jb
fucomip
inc
and
xchg
lret
cmp
lods
movsl
leave
sbbl
mov
mov
call
in
outsb
cmp
psubw
push
movsb
das
adc
push
push
repz
mov
push
dec
mov
out
push
fcoms
cmp
aad
mov
je
sarl
push
das
cmp
sahf
mov
loopne
das
popa
xor
jl
clc
cmp
lret
out
rorl
pop
mov
xor
int
lods
push
inc
xor
inc
in
cmpsb
stos
xchg
xchg
sub
dec
pop
inc
arpl
cs
xchg
add
xchg
outsb
pop
mov
aad
aaa
adc
aad
dec
rclb
nop
shrb
push
fldt
pusha
out
decb
in
xchg
filds
inc
sbb
in
dec
ljmp
inc
sub
jp
shr
mov
outsl
outsb
rorl
dec
ret
and
xchg
or
mov
pop
out
stc
lcall
jb
imul
jnp
lcall
adc
in
pop
jmp
jb
xchg
push
into
sbb
mov
int3
fisubrl
nop
jno
mov
jmp
lods
xchg
outsb
scas
pop
mov
adc
addb
into
mov
insb
push
or
sub
jbe
aam
nop
pusha
lcall
arpl
movsb
ss
jmp
pop
mov
cmovns
dec
adc
jecxz
jle
cmp
push
xor
inc
out
inc
mov
daa
aas
aam
ds
mov
incb
add
pop
sub
jmp
int3
shll
test
jo
or
cltd
fwait
cld
pop
ljmp
neg
push
and
cs
inc
inc
aam
jle
push
mov
xchg
push
pop
sub
into
xchg
fsub
pop
out
pop
js
jb
mov
sbb
pop
fimuls
mov
lea
xchg
cmp
cmp
mov
dec
in
movsb
push
loopne
dec
mov
pop
lods
mov
scas
bnd
cld
push
idiv
stos
sub
fisubl
dec
scas
mov
icebp
ret
lods
ds
sbb
mov
lcall
dec
sub
cwtl
jns
xor
xorb
lret
fsubs
lahf
xor
adc
xchg
rclb
imul
lods
cmpsl
ja
mov
mov
adc
dec
cmc
jp
insb
inc
shlb
mov
aad
fcoml
pop
push
add
call
and
test
lcall
xchg
iret
stos
jo
cmp
in
inc
stc
dec
mov
mov
aas
pop
mov
sub
add
ja
mov
jbe
inc
imul
outsl
dec
dec
data16
mov
sub
adc
push
popf
movsb
jb
mov
push
cld
mov
std
out
dec
bound
sub
lea
mov
cld
je
ljmp
dec
rol
stos
xchg
sahf
mov
push
push
sbb
aaa
or
sub
sub
cmc
test
adc
xorb
xlat
dec
repnz
lea
test
iret
data16
pop
sub
das
ret
popf
xchg
into
or
inc
movsb
mov
inc
lcall
push
cmp
push
mov
xchg
mov
lods
js
ret
mov
fwait
pop
rcrl
push
hlt
lods
cmp
mov
sub
add
dec
sbb
pop
push
dec
jmp
cmc
and
jb
imul
mov
addl
cmp
dec
xor
add
and
shrl
dec
movsb
scas
sub
loope
push
push
stos
cmpsl
movsb
jno
xor
push
mov
repnz
xchg
sub
adc
sub
mov
bound
cmpsb
andl
cld
cmpsb
sub
adc
daa
inc
xchg
mov
dec
ja
dec
divb
sbb
push
xchg
fldl
cltd
mov
out
in
or
xor
push
pop
xor
push
call
mov
or
or
fists
mov
je
push
inc
loopne
into
leave
sub
xchg
mov
inc
add
dec
mov
test
adc
sbb
pusha
add
mov
ljmp
lds
sub
dec
jns
sbb
ficoml
ds
outsb
mov
adc
les
xchg
or
mov
and
adc
mov
pop
iret
ljmp
repz
jo
dec
dec
push
jbe
jp
icebp
ret
dec
pop
daa
pop
mov
addr16
cmp
push
pop
les
mov
xchg
dec
movsb
enter
aad
ljmp
mov
dec
rorl
stos
stos
jmp
sub
int
cmp
lret
iret
cmpsb
bound
push
inc
aad
push
imul
fcompl
insl
aam
xchg
mov
push
inc
enter
imul
movsb
js
and
mov
push
data16
push
movsb
cltd
mov
cwtl
les
fdivl
sbb
pusha
lret
shll
scas
dec
inc
mov
sahf
gs
imul
pop
sub
sbb
les
xlat
addl
cwtl
hlt
data16
arpl
rep
mov
push
push
movsb
pusha
inc
testb
sahf
pop
cmp
addr16
add
outsb
sbb
xchg
lods
jb
int3
mov
mov
jno
ja
pop
jp
imul
sub
mov
mov
fidivrl
mov
cmc
adc
pop
sub
test
pop
add
mov
jbe
out
bound
sub
fdivr
stos
inc
fdivr
enter
adc
in
cs
mull
aas
mov
lcall
call
add
mov
fsubrs
divl
iret
add
pop
jb
inc
sub
push
cmp
xor
bound
jns
add
xor
pushf
xor
pop
stos
sub
ret
xor
lods
pop
and
push
lcall
inc
insl
add
cmovne
xor
add
cmpsb
das
popf
jb
pushw
xchg
leave
mov
lods
mov
ret
std
rcrl
sbb
jo
push
imul
movsb
inc
pop
out
push
sbb
popf
pop
sub
inc
repnz
mov
mov
stos
lods
loope
hlt
lahf
in
mov
cmc
fs
fistl
sub
fcmovnbe
lcall
subl
sub
pop
mov
mov
call
js
mov
daa
cs
pop
test
add
sub
repz
jb
xchg
inc
xchg
or
hlt
rcrb
mov
or
sar
andb
aad
xchg
in
mov
lds
dec
stc
aam
push
jb
loopne
sub
dec
push
cli
rorb
and
jmp
adcb
mov
out
jns
add
ljmp
fsubrs
mov
movsb
inc
xor
cmpsl
mov
and
dec
cmp
dec
dec
mov
sub
mov
aaa
xchg
pop
inc
inc
pop
int
inc
xorb
sbb
adc
mov
sub
ret
jmp
push
xor
aas
push
push
mov
cltd
push
lods
bound
push
push
inc
push
jb
xor
stos
icebp
test
cmpsl
lret
sub
lods
xor
hlt
dec
and
lcall
xchg
mov
int3
inc
leave
insl
add
pop
mov
add
pop
add
pop
mov
mov
jmp
and
mov
push
scas
in
aad
mov
int3
cld
shr
das
push
sahf
hlt
ljmp
pop
shl
jb
cli
or
cmp
cmp
xchg
sub
pop
xor
lahf
xchg
fidivl
cli
push
dec
fdivrs
dec
jmp
sbb
sbb
cmpb
jo
mov
fbld
scas
jge
js
in
mov
add
lret
bnd
adc
sahf
or
aad
and
inc
jno
sahf
pop
es
inc
dec
sbbb
mov
pop
in
aam
mov
out
in
iret
int3
fisubl
sub
pop
or
mov
aas
ja
dec
xor
and
push
icebp
inc
jno
outsb
dec
mov
inc
xor
aam
dec
scas
lahf
pusha
or
sarb
ret
sbb
xlat
testl
xorl
adc
cmp
loope
dec
xchg
ss
lds
fcomi
repz
das
lea
xchg
gs
push
test
jp
mov
shll
adc
push
lcall
test
loope
in
sub
push
movsb
mov
sub
xchg
out
dec
data16
pop
popa
jns
stos
xor
jb
sbb
push
movsl
in
push
test
xchg
ds
ror
shll
iret
ja
dec
inc
xor
shlb
xor
lea
mov
fdivl
test
jge
xchg
push
xchg
xlat
or
xchg
mov
jge
enter
mov
cmpb
adc
jecxz
and
mov
leave
scas
cli
es
mov
nop
push
pop
xchg
jbe
jge
ds
es
mov
daa
aaa
push
mov
jbe
loop
loope
jae
flds
xabort
dec
pusha
loope
xor
mov
pop
mov
cmpl
xor
cli
push
fnstcw
mov
cs
pop
out
repz
jnp
mov
in
sub
inc
mov
js
sbb
mov
jp
sub
mov
cmc
cmp
std
leave
pop
fisttps
and
inc
inc
mov
xchg
xchg
mov
push
xchg
and
stos
add
hlt
popa
push
mov
adc
pop
cwtl
sahf
sub
cmp
sub
sbb
imul
push
push
mov
mov
push
inc
out
nopl
jl
push
repnz
cmp
sub
stos
gs
adcb
sub
test
mov
xchg
jle
or
pop
sub
movsb
mov
out
js
dec
push
sbb
fidivrs
sub
mov
sub
xchg
cmc
pop
shld
adc
hlt
fiaddl
movsb
idiv
call
or
sbb
call
mov
cmc
cmp
jne
cmp
and
lret
and
mov
mov
dec
sbb
cmp
ret
test
test
and
push
lds
push
imul
jns
mov
cli
mov
addr16
push
fildl
and
push
mov
aaa
aaa
mov
cmpsb
hlt
jne
push
adc
jno
sub
data16
ret
pusha
test
repnz
lcall
aaa
mov
ficompl
sub
and
insb
mov
mov
in
scas
sub
pop
push
clc
vpshufd
and
mov
mov
and
stos
inc
shrb
lods
add
cmp
push
or
add
cltd
mov
ficomps
jo
push
sbb
repz
mov
bound
inc
xchg
ljmp
jne
jnp
enter
xchg
xchg
loope
mov
xor
ja
jnp
js
push
jecxz
test
xchg
jae
scas
test
pop
aam
push
arpl
jae
or
int
cmp
mov
lods
adcb
fisubrs
insb
mov
and
std
je
push
or
xor
les
cmc
xchg
mov
and
dec
sub
scas
fcmovnu
mov
or
ret
lds
cs
jno
pop
lock
negb
out
jne
cltd
mov
push
lock
or
lea
mov
mov
or
in
int
lods
pop
sbb
add
imul
sbb
lods
ja
cmpsl
lock
pop
lea
push
stos
jge
pop
pusha
sub
mov
and
or
ficompl
add
fcomps
or
or
notl
jo
sub
daa
mov
jecxz
in
push
lods
lret
pop
pop
ljmp
sub
scas
or
adc
sbb
mov
xchg
xchg
fs
mov
push
inc
vcvtps2dq
adc
cltd
nop
lea
push
mov
aaa
push
jb
arpl
les
roll
pop
inc
xor
sub
xchg
xchg
bound
jge
add
or
mov
push
pop
test
push
dec
stc
inc
out
gs
icebp
test
jae
xor
outsl
lea
dec
hlt
jo
pop
pop
push
push
and
sti
stos
movsb
push
or
cmpb
data16
push
movsb
or
cmp
insl
jmp
mov
jp
dec
and
sub
add
cli
push
adc
or
repnz
dec
lods
lods
aad
ljmp
je
add
dec
int3
pop
push
mov
lcall
sub
ss
lcall
mov
je
stos
xchg
scas
ljmp
jb
sub
call
mov
or
push
cmp
mov
push
adc
and
adc
fidivl
mov
cli
lcall
sub
mov
or
pushf
xchg
jo
jb
das
sub
sahf
push
in
les
hlt
mov
aam
push
movsb
xchg
mov
mov
fwait
pusha
push
fsubrl
rep
inc
movsb
mov
gs
or
and
insl
push
and
jnp
adc
add
lds
fsubrl
sub
cmc
repnz
pop
adc
dec
in
stos
pushf
mov
and
lea
add
jl
add
loope
mov
mov
incb
jb
mov
sub
adcl
xor
popl
jae
jp
mov
divb
jmp
adc
mov
stos
lcall
pushf
sub
pop
bound
cltd
pusha
push
outsl
pop
jle
pushf
in
cmpsb
jae
adc
push
dec
xchg
mov
adc
push
sbb
jle
pop
or
js
adc
movsb
in
adc
leave
popf
imul
lret
mov
adc
jmp
mov
loop
cmp
xchg
inc
lods
xor
mov
adc
scas
cmpsb
cmp
es
sbb
cmp
subb
fcom
push
mov
xor
mov
bound
mov
or
or
push
pop
sbb
sub
jns
push
push
imul
lcall
push
mov
mov
fidivl
out
js
cli
imul
mov
dec
mov
adc
je
inc
out
cmp
mov
mov
scas
jbe
xchg
jmp
orl
dec
xor
mov
inc
sbb
mov
jns
int
les
enter
xchg
push
ds
in
outsb
dec
cmp
fsts
ret
and
push
mov
fisubrs
popf
pop
push
xchg
inc
jecxz
addr16
ffreep
push
push
add
out
out
dec
xchg
aam
out
or
and
push
lcall
stos
mov
add
ret
loope
mov
mov
std
xorb
sbb
arpl
mov
rcll
mov
repnz
pop
and
inc
jb
sbb
xor
mov
iret
sub
cmc
lods
push
dec
push
pmullw
sbb
clc
inc
sbb
test
pop
xchg
add
cmpsb
ret
mov
adc
add
mov
push
lret
jnp
adc
out
pop
movsb
or
gs
std
imul
repnz
outsb
jg
jne
aad
dec
call
js
test
push
jl
xchg
xorl
jno
insl
push
xchg
sub
xchg
scas
cld
push
test
mov
das
mov
inc
dec
out
mov
fstl
mov
dec
jg
js
add
repnz
dec
loopne
inc
sbb
in
mov
in
clc
xchg
data16
pop
adc
mov
dec
fcoml
in
jg
popa
movsb
repz
jb
inc
int3
fsubs
enter
sbb
je
sub
mov
pushw
outsb
cwtl
push
xor
stos
rorl
fs
outsl
out
mov
fimuls
push
adc
aad
lods
stc
push
xor
mov
mov
les
movsl
out
mov
push
shll
outsl
arpl
pop
sbb
jae
xlat
testl
and
and
xchg
jne
imul
mov
fiadds
add
and
xchg
mov
shll
ret
and
xor
dec
shll
cmp
xchg
pop
sbb
fadds
nop
lods
jmp
mov
divl
fwait
add
add
dec
bound
xchg
divl
xchg
lods
sbb
sub
clc
xor
mov
push
push
rcrb
sub
mov
add
pop
dec
test
mov
repnz
or
les
sub
in
adc
xchg
stc
or
mov
testb
mov
push
mov
arpl
mov
pop
lcall
sbb
pop
cli
frstor
push
enter
popf
lock
movb
in
pop
dec
push
and
xor
das
sub
mov
movsb
leave
xlat
in
les
loopne
aam
inc
push
scas
int
mov
into
mov
xor
pop
pop
mov
test
jb
dec
fs
xor
movsl
mov
mov
push
in
and
mov
and
pusha
push
xchg
in
arpl
or
fcoms
lret
xchg
lcall
mov
xchg
sub
lcall
xor
jmp
fabs
ret
aaa
mov
jg
jns
daa
push
xchg
cmpl
and
or
dec
es
mov
hlt
mov
iret
aam
sbb
out
add
xchg
inc
xor
dec
aas
inc
xchg
push
cltd
dec
adc
int
outsb
dec
push
icebp
scas
add
jecxz
or
loope
jp
dec
push
cmp
lahf
or
push
adc
lcall
push
or
lock
mov
orl
jl
xchg
jb
call
jmp
xor
mov
scas
mov
loope
sub
flds
pop
add
cmp
cmp
xchg
xchg
aam
cwtl
leave
divl
push
je
inc
inc
add
push
mov
rol
inc
or
jae
test
jnp
lods
lods
dec
jl
sti
fldenv
xor
lcall
cmp
out
push
cs
movsb
aad
xor
mov
fstpt
out
xor
pop
inc
adcb
pop
gs
lcall
cmpsl
push
pop
cmc
push
push
clc
mov
inc
push
mov
nop
movsl
scas
lods
sbb
push
jns
adc
cli
cs
test
jge
inc
jl
sub
jecxz
aaa
jmp
mov
xor
ja
js
outsl
jns
cmpl
js
push
test
xor
push
shld
jge
addr16
dec
push
xchg
ljmp
ljmp
lods
sbb
pop
aad
pop
jne
mov
sbb
shll
dec
hlt
insl
testl
aad
mov
jle
call
iret
sbb
mov
imul
fs
jle
out
sbb
pop
lock
mov
cmc
xor
outsl
bound
jg
stos
sbb
repnz
mov
sbb
fcomps
arpl
push
hlt
pop
push
and
sub
xchg
or
orb
mov
and
lods
jns
mov
mov
fstpl
sub
lds
push
and
mov
fmull
xorb
out
in
das
fs
shl
jmp
mov
xor
adc
xchg
sbb
scas
mov
pop
xchg
jmp
jns
mov
sub
mov
scas
sbb
fcmovu
mov
sbb
cmpsb
cli
int3
jae
sub
add
jbe
shld
push
and
push
xchg
push
insl
stos
in
shlb
xchg
movsb
xchg
je
pusha
rcll
dec
rclb
ja
pusha
jp
xchg
jo
mov
add
push
mov
mov
push
mov
dec
in
leave
cmpsl
jp
sub
cmpsb
daa
ljmp
cmc
adc
push
popa
push
mov
rcr
je
or
sub
fidivs
cmp
test
pop
mov
js
or
lock
lea
fisttpll
xchg
imul
sbb
xchg
jb
mov
sti
and
fstpt
bound
dec
or
out
push
jge
aas
in
loop
xor
ljmp
inc
sub
dec
add
cmp
movsb
and
mov
and
subl
fsubrp
inc
dec
jo
cs
dec
lods
pop
push
es
push
icebp
inc
sub
scas
ja
pop
push
enter
cmc
insl
out
mov
enter
or
mov
daa
icebp
xor
ds
bound
pusha
aaa
add
pop
adc
sti
mov
xor
sbb
out
push
movsb
xlat
inc
call
pop
adc
es
jmp
hlt
sub
pusha
or
mov
pop
or
inc
mov
mov
jg
orl
xchg
sbb
cs
jb
cwtl
jno
loop
lret
push
push
xchg
std
pop
jb
call
add
sub
lcall
loope
push
jp
xor
adc
dec
cmpsb
stos
in
sbb
push
xor
inc
adc
inc
es
mov
icebp
shl
mov
push
movsb
push
push
loop
out
in
adc
xchg
xchg
ss
xor
inc
adc
sbb
cmp
dec
jns
loope
and
and
not
inc
js
lds
in
sbb
les
mov
jb
jge
popf
mov
push
scas
xchg
mov
outsl
ljmp
lods
push
and
jle
orb
andl
mov
sub
call
jge
xchg
mov
jge
ret
lcall
push
fucom
test
mov
mov
fcom
jo
push
mov
adc
cs
mov
iret
mov
sub
lcall
adc
sub
add
in
push
std
je
jp
xlat
out
push
clc
pop
ljmp
push
stos
repnz
jns
rcrl
cli
xchg
xor
outsb
xchg
jno
hlt
ljmp
mov
mov
dec
clc
add
clc
daa
push
jp
inc
xchg
sbb
push
lods
andl
in
or
lret
in
adc
in
fstpt
movsb
lahf
hlt
shrb
fistps
xor
mov
mov
enter
mov
lds
pusha
fcoml
mov
lret
or
mov
fcmovnb
rclb
push
sti
insl
out
add
data16
dec
mov
lods
jmp
ss
orb
cli
xor
jp
aam
fwait
dec
ljmp
scas
sbb
aad
sbbl
stos
movsl
dec
loopne
insl
or
jp
out
xchg
pcmpeqd
stos
cmp
bound
leave
ljmp
push
movsb
inc
andl
mov
push
jae
lods
or
push
lock
push
dec
out
xor
in
mov
mov
and
dec
std
ja
negb
and
hlt
clc
dec
xchg
test
cmp
mov
jae
pop
jl
enter
lahf
clc
adc
das
dec
pushf
test
fdiv
out
mov
lea
sub
pushf
push
daa
sahf
mov
xor
dec
ljmp
mov
fsts
mov
mov
and
out
jno
inc
nop
cmp
jns
flds
sub
js
mov
inc
mov
xor
scas
xchg
fwait
bound
sbb
gs
or
cmpsb
mov
push
flds
add
imul
pop
sbb
orb
loope
push
movsb
inc
pushf
jle
sbb
sbb
call
roll
jae
loope
pop
setne
or
test
sub
inc
lds
dec
repz
jno
or
ret
ret
cmp
out
push
int
pusha
pop
add
mov
jno
lcall
pusha
mov
jae
shll
pop
cmp
in
cmp
add
pop
les
and
loopne
xor
aaa
or
roll
sar
xor
cltd
scas
ja
sub
repz
test
mov
xchg
push
xchg
dec
lcall
pushf
mov
das
adc
aam
pcmpeqb
das
sub
lock
icebp
fsubl
xchg
mov
sub
inc
fdivs
and
aam
int3
jo
dec
mov
add
lea
outsl
push
stc
jne
sub
cmp
aam
mov
scas
add
mov
out
dec
xchg
push
sbb
leave
cmpsb
add
xor
leave
imul
sub
jns
pop
pop
add
add
sub
cs
add
xor
stos
cmpsl
scas
dec
push
ljmp
es
stos
dec
dec
xor
stos
movsb
push
xchg
adc
inc
add
insl
subb
popf
add
xor
mov
mov
sbb
adc
xor
push
inc
sbb
int3
add
fisttpl
pop
mov
inc
mov
ljmp
dec
xchg
or
inc
aam
imul
inc
push
das
mov
mov
popf
and
movsb
mov
push
and
lret
out
cmp
repz
push
les
sub
jmp
add
cmp
fsubp
mov
dec
in
scas
mov
jb
add
out
lcall
xchg
scas
push
adcl
sub
mov
iret
aam
test
xor
mov
cli
inc
sub
pop
ret
out
mov
inc
and
lcall
popf
sub
sbb
jp
mov
pop
or
mov
cmpsb
mov
push
push
testb
mov
aaa
inc
idivl
js
mov
out
and
outsl
lods
adc
mull
jle
mov
outsl
jmp
xchg
sbb
inc
lods
push
or
fwait
sub
pop
aaa
sarb
lea
sub
jno
rcrl
fsub
sti
push
ja
dec
mov
cmp
lods
jp
ret
mov
xchg
addr16
notl
fwait
jae
daa
fisubs
sbb
push
pop
inc
je
test
push
stc
jnp
or
ljmp
int3
dec
aaa
rcrb
dec
ja
push
dec
aas
inc
sahf
jle
or
shll
insb
pop
jno
shrl
lods
addr16
sbb
cld
mov
cwtl
push
jp
xchg
push
sub
nop
lods
xor
add
arpl
dec
mov
sahf
xor
adc
insb
xor
insl
stos
jbe
inc
bnd
push
jae
xor
lcall
inc
push
add
push
inc
fwait
push
dec
xchg
enter
xor
xchg
ret
nop
fsubrs
fldl
lock
add
jb
imul
xchg
stc
jmp
mov
pushf
lods
les
je
stos
imul
clc
mov
cld
and
scas
lret
repnz
jno
rolb
xor
pop
jo
mov
mov
fnstsw
mov
popf
subl
les
cmp
movsb
or
sub
mov
jae
les
push
push
clc
xchg
jp
rcll
push
sahf
push
cli
ss
mov
rolb
cmp
arpl
leave
fldcw
mov
repnz
pop
addl
in
scas
mov
xor
cmp
sbb
lods
loop
mov
iret
lds
stos
inc
jno
xor
dec
mulb
add
jbe
mov
jne
push
outsb
sub
leave
lcall
xorb
fists
ljmp
das
and
js
lods
adc
loope
cmp
cmpsl
jno
push
iret
mov
mov
or
test
mov
adc
in
add
sbbl
push
or
adc
pop
xchg
imul
push
xchg
ret
ss
shll
leave
pop
aam
arpl
test
lods
or
push
iret
add
xchg
je
test
add
xchg
ret
jae
int
fwait
ja
pop
sub
add
hlt
sub
jge
ficoml
or
dec
adc
aaa
sti
sbb
pop
movsb
sub
hlt
js
repz
push
lods
mov
fwait
into
jmp
jg
fdivs
xor
mov
and
cmp
in
pop
add
outsb
push
sub
mov
std
repz
fisttpl
std
dec
push
imul
popa
xorl
xor
mov
sbb
push
fsubl
mov
cltd
call
jmp
add
mov
or
push
shrb
pop
adc
cmpsl
movsb
xchg
fwait
lock
dec
jl
outsl
pop
hlt
pop
sub
mov
lret
pop
cmpsb
xor
and
and
es
sub
push
test
jo
adc
in
movsb
jg
xorl
xor
outsl
fsts
pop
cmp
and
enter
pop
test
andl
ja
push
adc
lahf
xchg
repnz
lret
pop
fwait
add
mov
dec
leave
icebp
xorl
xor
sahf
mov
popf
outsl
add
jno
jl
loope
adc
jo
pop
and
fsubs
dec
popf
loope
jae
sub
pop
or
jp
sub
sbb
xchg
lahf
rorl
xlat
jmp
jo
cwtl
push
ret
push
sbb
stos
lea
stc
dec
bound
push
repz
mov
inc
dec
add
cmp
push
pop
imul
inc
out
sbb
test
jg
push
sbb
mov
push
ficoml
mov
dec
inc
sub
xchg
xchg
mov
dec
push
addl
cs
es
in
shll
inc
mov
mov
ss
or
jae
sub
mov
movsb
packsswb
push
jle
add
xchg
test
addl
fbld
push
iret
repz
out
inc
lds
les
xor
ljmp
movsb
lret
xlat
dec
nop
sbb
out
repz
push
dec
inc
pushf
xor
call
dec
subb
js
or
sbb
cwtl
dec
in
mov
mov
loope
jge
das
push
int
imul
icebp
dec
add
xchg
addl
into
and
xlat
movsb
sub
add
fnstenv
and
push
xchg
push
jo
std
pop
ret
fs
sub
iret
daa
cmp
add
in
jne
ja
lods
outsl
lea
fs
mov
mov
stos
add
sub
insb
aam
jl
iret
mov
jno
cli
mov
push
push
test
dec
inc
lods
ficoms
jl
pop
js
mov
mov
pop
sbb
mov
out
int
icebp
add
mov
add
push
pop
sbb
adc
movsl
add
sbb
mov
mov
jmp
mov
ljmp
pop
test
outsb
sbb
push
sub
fcomi
in
lret
or
cld
ret
stc
pop
mov
adc
jle
add
add
fnsave
enter
xchg
fsubr
stos
rcrb
aad
add
pop
mov
push
inc
push
int
pop
cmc
lock
add
and
mov
insb
cwtl
insl
jge
cmp
in
repz
cs
adc
xchg
scas
js
call
push
dec
sub
inc
movsb
repz
cmpsl
pop
incb
xchg
or
cltd
flds
push
int3
test
mov
adc
call
push
mov
jae
insb
pusha
cwtl
jecxz
lret
adc
mov
cs
movsb
outsl
out
mov
sub
fistl
mov
mov
inc
push
cld
pop
les
bound
jmp
push
addl
cld
push
jns
movsb
int
add
or
aam
aam
mov
repz
push
cmp
and
fsubs
adc
into
fs
cmp
repz
jecxz
movsb
je
or
loopne
hlt
orb
gs
cmp
xchg
jb
xchg
or
dec
push
lds
hlt
push
bound
out
jne
mov
hlt
mov
sahf
mov
repz
mov
test
icebp
push
mov
or
push
adcb
jp
pop
jnp
mov
pop
and
push
mov
mov
mov
or
mov
adc
lods
test
outsb
mov
lea
sub
jecxz
in
mov
jo
mov
dec
lods
mov
or
push
cmp
mov
cmpsb
rorl
xor
into
mov
lcall
or
incl
inc
jmp
fwait
call
aam
inc
std
out
inc
ss
cmp
dec
jmp
jns
cmp
ljmp
mov
icebp
andb
aam
insl
mov
data16
xor
movsb
sub
addr16
into
lret
add
push
inc
sbb
xor
mov
fidivs
stos
or
mov
dec
fimuls
mov
icebp
mov
loope
outsb
sub
jns
sbb
xchg
call
jp
jb
xchg
push
pop
dec
xchg
push
rcll
adc
pop
test
das
sarb
scas
sbb
add
cmpsl
dec
sub
cld
sbb
sub
sub
and
je
mov
pop
fucomi
or
sub
inc
cmpsl
mov
js
mov
jecxz
mov
xor
push
dec
icebp
in
outsl
cmpsl
fsubrs
mov
inc
xor
adc
xchg
push
mov
push
lds
lret
insl
rorb
mov
adc
sub
sbb
stos
call
dec
aas
jp
sub
in
pop
xchg
jns
rcrb
psllq
add
jno
xor
sbb
inc
lds
stos
pop
ret
or
hlt
push
adc
mov
adc
sbb
sbb
jb
and
or
call
lock
and
mov
pop
fmul
jae
lcall
or
enter
xchg
pop
pop
fcoms
jnp
popf
pop
in
addr16
mov
sub
mov
sbb
movsb
inc
xlat
jp
add
stos
inc
xor
mov
lcall
mov
adc
jbe
pop
xchg
lret
cmpsl
clc
xor
sub
dec
testb
mov
cs
testl
inc
sbb
push
or
fadds
sub
call
mov
mov
sti
call
imul
in
sbb
scas
in
push
lods
addr16
leave
or
or
out
mov
and
pop
add
scas
js
push
in
cmp
out
inc
jle
pusha
sub
je
xchg
into
dec
push
jb
inc
push
mov
push
pop
or
mov
pop
cmp
stos
popa
adc
loope
out
cwtl
jae
sti
mov
inc
jnp
jae
cmp
out
xor
stos
inc
jnp
xchg
xor
xchg
jl
and
mov
jns
inc
push
or
push
mov
cltd
push
ret
inc
out
mov
cltd
mov
cmpl
aam
out
mov
jnp
pop
jnp
sbb
dec
fsubrs
and
popf
repz
push
imul
sub
clc
mov
and
stos
cwtl
jb
cmp
es
stos
mov
sub
stc
shll
int
mov
mov
xchg
mov
stc
fld
pop
or
push
mulb
xchg
orb
imul
mov
and
pop
xchg
je
mov
cmpsb
push
shlb
in
pop
lahf
mov
push
repz
stos
enter
mov
fdivs
aaa
setp
arpl
adc
mov
add
out
jae
sbb
rcrb
inc
adcl
or
popa
into
xor
xorl
movsb
or
sbb
fs
ds
rcll
adc
int
sbb
jns
imul
loope
xor
neg
mov
ret
movsb
dec
mov
xchg
lcall
ss
cmp
mov
mov
in
sar
push
gs
cli
adc
push
pop
push
xor
std
sub
fsub
int
outsb
xchg
inc
test
repnz
jle
data16
out
add
jns
push
loopne
and
cmpsl
mov
mov
mov
mov
pop
push
mov
jb
loope
sub
push
mov
test
mov
xlat
pop
ja
jmp
add
jae
mov
xor
mov
mov
jmp
fnstcw
lods
gs
inc
invd
mov
cmpsb
cmp
rorb
aad
daa
or
outsl
por
bound
dec
jp
sahf
in
sbb
movsb
pop
bound
xor
mov
jmp
or
dec
pop
int3
and
push
push
mov
pop
lds
jne
inc
mov
xor
mov
xor
push
sahf
shrl
lods
arpl
bound
cmp
imul
adc
movsb
lcall
mov
lods
mov
pop
inc
movsl
cmpsl
push
ret
out
or
mov
inc
push
imull
popa
dec
mov
shrb
sbb
nop
and
cmp
lods
jnp
int
in
or
subl
or
clc
out
lods
xchg
in
push
mov
xchg
push
iret
fwait
movsb
rorb
fisttps
dec
pop
cmp
iret
leave
xor
dec
mov
fdivr
ror
repz
sbbb
add
lods
dec
sub
mov
fnstenv
jb
xchg
js
ss
cs
push
xchg
mov
es
rclb
or
in
mov
test
add
mov
jge
enter
fsubrl
subl
pop
push
push
imul
cli
outsb
cmpsb
hlt
push
cmpsl
loope
lods
cld
adc
mov
addr16
pop
das
lods
lea
xor
and
sbb
aam
mov
enter
movsl
inc
xor
out
les
ss
or
jo
out
daa
and
movsb
fcmovbe
jb
mov
push
mov
outsb
add
pop
mov
out
push
pusha
das
sbb
inc
rorl
notl
in
cmpsl
int3
addr16
cmp
fisubs
out
xor
in
dec
sub
les
dec
pushf
push
enter
jmp
sub
lods
cmc
cmpsl
test
or
mov
loop
das
jl
or
jmp
hlt
or
lea
mov
xchg
inc
push
ret
adc
jmp
rorb
mull
and
fsts
xchg
push
mov
pusha
sub
mov
mov
test
adc
sub
sbb
fldcw
dec
outsl
mov
mov
xchg
imul
addr16
insb
mov
ss
lods
ss
jecxz
mov
outsl
add
sbb
jg
dec
pop
lahf
out
pop
clc
sbb
or
mov
sub
xchg
fucomip
adc
cli
xchg
sbb
lods
pop
push
pop
ljmp
aaa
fisubrl
bound
jge
pop
sub
xor
lds
add
enter
mov
enter
adc
xchg
popw
and
rolb
push
xor
cli
push
jbe
pop
xor
addr16
lock
enter
scas
into
push
pop
test
xchg
minps
jno
fdecstp
out
insb
incb
aam
push
or
outsl
in
repz
jg
mov
out
jbe
pop
dec
adc
jmp
adc
andb
clc
aas
cmp
push
dec
in
clc
je
mov
in
mov
mov
js
stc
dec
xchg
adc
ret
mov
fmull
push
mov
movsb
sbb
mov
dec
xor
cmp
push
lcall
outsl
adc
int
sahf
jbe
insl
adc
push
or
mov
lahf
aaa
lods
movsl
fcmovb
push
sarb
push
cmc
xchg
fcomps
xor
jno
scas
test
movsl
mov
je
add
dec
dec
jnp
in
or
cmp
hlt
jge
cld
rorb
into
jne
xor
cmpsl
bnd
ds
and
mov
scas
emms
loopne
mov
push
test
sbb
out
xchg
insl
xor
inc
adc
xchg
push
xor
dec
dec
push
mov
test
push
push
sbbl
mov
and
popf
xchg
inc
insb
fisttpll
imul
jecxz
lods
xchg
in
int
cld
and
rcll
pop
movsb
add
push
xor
mov
pop
mov
xchg
icebp
nop
pop
sub
and
aaa
inc
sbb
cwtl
aas
push
lods
mov
push
adc
enter
test
push
mov
pop
insl
movb
adc
xchg
mov
pop
cmp
push
mov
mov
in
add
jl
push
mov
out
jl
sbb
lock
mov
mov
ds
lock
push
jb
mov
lahf
mov
repz
and
js
jecxz
sbb
mov
daa
test
mov
aam
std
cmpsl
mov
fistps
push
jno
mov
push
and
enter
pop
les
fucomp
dec
xchg
jbe
dec
push
shrl
or
push
mov
jge
out
or
int3
addr16
jp
fidivs
stos
repz
mov
or
cmpsb
call
in
pop
or
insl
inc
movsb
xchg
jbe
aam
test
jge
outsl
jnp
push
enter
push
mov
mov
clc
mov
ljmp
pop
mov
jecxz
sub
out
aad
pop
sbb
ret
lods
movsb
mov
ss
stc
int
adc
pop
cmpsl
xchg
sbb
pop
and
adcl
pop
std
or
std
aad
insl
dec
xchg
fs
and
out
clc
xchg
mov
add
movsb
dec
jno
adc
push
fldcw
sub
mov
jae
mov
iret
jle
cmp
sub
push
sbb
dec
pusha
ljmp
jmp
or
adc
sbb
call
xchg
mov
sahf
lea
mov
enter
push
jne
enter
loope
mov
lea
lea
push
mov
ljmp
das
sub
arpl
jmp
adc
rolb
sahf
dec
insl
test
addl
xchg
lods
xor
xchg
xor
xchg
jmp
dec
add
xor
imul
out
out
popa
xchg
jo
sbb
imull
lcall
out
bound
lods
cmc
pop
inc
out
stos
jl
adc
xor
mov
aaa
pop
sub
push
inc
xor
xchg
jb
sub
lds
sbb
push
or
mov
ror
nop
jl
pop
jb
aam
mov
fdivr
cmp
test
pop
arpl
add
cli
out
fsubrs
adc
call
inc
dec
insl
pop
xchg
pop
mov
dec
pop
jbe
movhps
mov
push
xor
stos
frstor
sbb
jno
push
sub
jmp
shll
xchg
cli
into
mov
inc
sbb
mov
add
shrl
mov
stos
mov
lcall
cmpsb
test
pop
push
add
push
movsb
loope
mov
push
and
gs
xor
mov
dec
pusha
cmpsb
xor
stos
divl
mov
fistl
lods
lret
push
orb
mov
or
and
popf
outsb
dec
dec
add
xchg
movsl
repz
out
mov
hlt
adc
sar
push
aam
imul
repnz
jno
dec
sub
xchg
sti
push
testl
inc
push
gs
inc
xor
dec
jb
mov
cltd
das
pop
xchg
arpl
xchg
sbb
pusha
in
loope
lock
push
lds
movsb
lock
xor
je
ret
adc
mov
and
test
repz
inc
daa
cs
adc
int
dec
fnsave
mov
push
loopne
out
push
cltd
lods
rclb
mov
xchg
mov
aaa
push
cli
stos
xchg
hlt
add
lret
nop
fidivl
in
loop
lret
idivl
fucompp
nop
arpl
or
outsb
xchg
xchg
jne
mov
repz
loop
adc
pop
push
loopne
ja
scas
test
mov
imul
leave
or
and
iret
mov
hlt
shlb
cmpsb
movsb
fcoml
lret
sahf
stos
enter
jmp
imul
jb
add
imul
push
iret
pusha
lcall
inc
aam
pop
mov
xlat
add
pop
pop
mov
pop
push
jge
ss
idivl
add
ljmp
jl
mov
fmuls
mov
sbb
pushf
movsb
sar
mov
jae
or
lds
test
dec
cmpl
test
cmp
mov
pop
jo
dec
aaa
mov
xor
add
or
xor
dec
jmp
sbb
pop
aad
jb
xchg
mov
adc
ja
mov
jb
pusha
pop
adc
mov
aaa
ss
sub
adc
adc
lea
in
inc
dec
mov
into
pop
sbb
icebp
adc
incb
cli
sbb
mov
int3
mov
lods
pop
xchg
cld
jle
aam
lcall
and
lods
pop
and
and
mov
lahf
hlt
aam
mov
mov
inc
xchg
push
repnz
xor
inc
mov
out
outsb
pop
dec
push
push
mov
lea
mov
jb
movsb
pop
xchg
arpl
xor
out
jno
jae
fsts
inc
hlt
add
mov
mov
fidivrs
ja
cwtl
mov
int3
push
sbb
pusha
fbld
iret
sub
cs
test
mov
pop
push
movsb
out
push
lea
push
nop
jnp
fisubs
subb
aas
xor
mov
adc
lret
mul
cmp
je
repz
pop
adc
mov
or
das
lea
movsb
push
imul
fdivrl
filds
out
shrb
mov
std
and
fsubr
sbb
mov
cmpl
push
xor
and
dec
inc
sarb
aad
mov
stos
insb
xor
cmp
mov
xchg
xor
mov
inc
inc
lahf
push
mov
std
mov
xchg
jb
bound
outsl
xor
cmp
dec
lods
gs
gs
dec
sub
sub
xor
rolb
push
cmpb
cmp
dec
dec
sbb
dec
mov
pusha
test
mov
mov
sub
movsl
add
ffree
add
pusha
or
xor
call
mov
cs
imul
fidivrs
pusha
fwait
push
and
mov
aad
adc
popa
pop
lock
inc
inc
sbb
mov
lcall
es
jns
or
daa
jnp
pop
hlt
mov
and
test
leave
adc
gs
mov
and
xor
jae
cmpsl
repnz
push
push
popa
cld
push
dec
ret
mov
push
ret
clc
fidivs
mov
add
xor
xor
sub
stos
dec
push
mov
insb
dec
push
adc
push
mov
dec
insl
icebp
movsb
imulb
in
les
lods
in
mov
xchg
int
cmc
sub
lods
mov
mov
push
adc
imul
mov
add
mov
dec
pop
pop
incb
mov
mov
scas
and
mov
je
mov
sbb
jge
fs
adc
inc
inc
gs
cwtl
dec
scas
lods
sbb
jb
pop
sbb
shlb
xchg
adc
das
lods
mov
sub
mov
sbb
in
xor
or
loope,pn
aam
jno
test
je
xchg
adc
lret
xor
pushf
xor
rorl
xchg
mov
icebp
dec
sub
mov
push
in
jge
and
cmp
subb
xchg
sbbl
inc
and
subb
xchg
mov
sbb
jnp
stos
popf
aaa
push
pop
gs
xchg
movsb
jle
dec
ds
sub
sub
loop
insl
inc
mov
adc
xor
jg
sbbb
jbe
add
push
sbb
popa
dec
mov
scas
xchg
xor
lea
out
or
out
pop
hlt
add
inc
push
ret
outsb
xlat
cmp
iret
mov
mov
mov
mov
scas
add
mov
pmulhuw
ljmp
mov
stos
loopne
lock
movsb
jge
add
push
cmp
scas
into
lret
xchg
pusha
pop
lahf
out
clc
popa
cwtl
cmovge
jae
repnz
mov
roll
add
mov
jnp
scas
cli
int3
or
mov
out
popa
dec
mov
dec
jae
xchg
mov
and
xchg
aas
mov
ret
push
pop
adc
loope
stc
pop
or
int3
sub
mov
dec
cli
js
xchg
add
popf
jg
shl
sbb
and
movsl
cltd
stos
mov
decb
xor
clc
push
ret
or
xor
movsl
mov
mov
mov
xlat
and
cmp
dec
test
sbb
cmpsb
mov
cmp
pusha
jo
std
in
scas
out
push
andl
aad
cltd
pop
or
cld
inc
movsb
lret
add
outsb
out
inc
into
cmc
rcl
mov
insb
and
mov
fcoml
lods
xor
xchg
cmp
in
jmp
enter
adcb
cmp
pop
cmp
sbb
shl
std
xor
cmp
pop
aas
or
movsl
int
push
lea
mov
test
and
mov
cmp
cmpsb
xlat
ret
push
push
sub
jmp
das
arpl
jg
out
call
clc
dec
mov
inc
enter
fsubr
sbb
xchg
aad
mov
xchg
push
imul
scas
jae
adc
cmp
gs
lds
mov
dec
fdivl
cmc
fisttpl
scas
and
mov
add
push
cmp
loope
clc
stos
xchg
cvtpi2ps
inc
or
or
out
xchg
nop
icebp
dec
fsubrl
sbb
fdivrs
repnz
xchg
shlb
push
cmc
and
outsl
fcomi
in
inc
inc
fcoml
iret
push
add
adc
xlat
dec
mov
repz
out
dec
daa
hlt
aas
fbld
jns
aam
mov
movsb
sub
add
jno
lea
mov
push
mov
aas
pop
push
pop
mov
ret
push
push
test
cs
adc
rolb
rcr
jno
push
and
repz
icebp
fisttps
jae
cli
push
aas
pushf
or
inc
aas
or
pop
iret
pusha
ja
mov
stc
out
dec
jmp
icebp
stc
subl
cmovl
jae
addr16
popf
mov
add
je
inc
mov
push
xchg
sub
add
inc
ljmp
push
mov
div
cli
jge
sub
jp
xor
adc
mov
push
cmpsb
add
enter
adc
push
repz
xor
push
mov
mov
in
and
xlat
mov
imul
rolb
stos
notl
aam
sbb
push
xchg
stos
out
xchg
movlps
xor
push
sbb
out
int
push
stos
cli
mov
jno
or
lods
sbb
jl
sahf
xor
jno
pop
jp
ljmp
and
sti
sub
into
fcoml
sub
xchg
rcrb
mov
add
pusha
push
sub
cmp
cmp
movb
lds
push
or
andl
iret
aas
push
insl
adc
add
inc
leave
das
addr16
fdivrl
jae
or
xchg
dec
aad
lods
insl
repz
xlat
les
scas
sub
pop
push
xor
mov
push
jno
mov
popf
fimuls
and
testl
push
lods
fldt
and
fwait
iret
mov
inc
outsl
sub
xchg
xlat
fdiv
add
in
push
push
jl
pop
dec
mov
repz
mov
nop
xchg
repnz
mov
rorl
jb
cld
pusha
mov
std
cltd
mov
add
sub
mov
popa
jb
movsb
mov
das
hlt
cmp
addr16
ss
jnp
mov
shr
test
cmp
movsb
push
inc
jge
pop
pop
inc
cli
xor
out
cli
jbe
daa
jnp
movsb
cmc
pop
orl
lcall
xor
out
jp
mov
push
shrl
adc
xchg
jl
test
imul
pop
inc
push
add
nop
cmc
std
push
lods
cltd
aad
idivl
shrb
pusha
loop
pop
outsb
adc
mov
rorw
dec
in
test
jge
ja
movsb
les
push
mov
mov
aad
xchg
pop
dec
bound
sub
adc
mov
adc
dec
pop
xor
cmp
cmp
push
frstor
and
dec
mov
mov
in
pop
jg
ret
push
jns
dec
adc
imul
xchg
mov
mov
adc
gs
jns
daa
das
mov
pusha
insl
fdivl
pop
inc
push
popa
sarb
add
stos
imul
mul
mov
xor
repz
jg
movsb
push
cld
mov
aad
sub
out
das
mov
mov
xchg
into
inc
cmp
or
ret
loopne
rep
rorb
push
cmp
ljmp
adc
mov
fcmovne
xor
xlat
jecxz
xor
ss
repnz
sub
sub
inc
push
outsl
das
movsb
leave
sub
xor
mov
xchg
loop
movsl
scas
lcall
sub
sbb
jge
clc
arpl
enter
subb
in
inc
add
add
push
push
notb
stos
imull
push
icebp
imul
xor
lods
jl
rcrb
dec
fwait
or
fcoml
sti
cmpsb
pop
loope
mov
sbb
inc
mov
test
sbb
add
sbbl
addr16
pop
or
out
jecxz
inc
or
cld
test
cmpl
mov
push
sub
dec
movsb
das
ds
inc
mov
add
mov
xchg
movsb
push
mov
f2xm1
adc
mov
push
mov
sub
clc
mov
jge
inc
outsl
scas
ja
sbb
add
ret
xor
repnz
movsb
jecxz
imul
push
xor
data16
mov
mov
movsb
and
in
loopne
dec
out
and
sti
stos
cwtl
cli
popf
pop
movsl
outsb
sbb
lcall
fiaddl
and
int3
pop
addl
cmp
les
xchg
lods
jbe
test
dec
add
sahf
mov
cld
rclb
cmp
fisttpll
sarb
mov
dec
mov
mov
mov
fsts
mov
jns
xor
push
out
pop
fldt
sti
das
add
aam
dec
jge
mulb
daa
mov
sti
lods
mov
lret
mulb
sbb
movb
adc
or
sub
dec
cmpl
xchg
mov
nop
add
cli
out
movsb
pop
sbbb
pop
je
push
sub
test
int3
flds
pop
negl
push
outsb
out
add
int
dec
sub
cmp
mov
insl
xor
sub
push
shrb
into
jno
fsubrl
jbe
push
je
imul
mov
aaa
dec
push
movsb
pop
inc
xor
mov
adc
or
stc
and
stc
sub
mov
aam
add
fistl
mov
mov
mov
rcl
push
sbb
inc
and
fstpt
add
pop
subl
mov
ljmp
cmpsb
xor
in
fwait
push
jb
rep
arpl
or
mov
les
test
mov
aad
js
bound
cmc
popa
add
lods
mov
cmp
ficomps
insl
divl
and
and
push
gs
mov
ficoml
cmpsl
shlb
arpl
cli
sbb
sbb
pop
mov
fldcw
sbb
scas
sbb
rol
adc
sub
jns
lcall
int
scas
addb
xchg
push
call
movsl
mov
xchg
sbb
jb
cmp
ds
std
pop
cmpsl
pusha
mov
cmpl
and
stos
icebp
or
mov
jbe
stos
fcoms
loope
insl
xlat
rcrl
sbb
jbe
insl
or
das
push
int
rcll
imul
jecxz
xor
fwait
mov
or
adc
jmp
mov
pop
mov
jae
ret
mov
mov
push
mov
bnd
shl
inc
sbb
inc
mov
fmul
push
stos
scas
mov
xchg
and
xchg
dec
mov
imul
pop
adc
je
and
das
ret
cmp
jae
pop
fbstp
push
or
repnz
adc
into
mov
adc
pop
in
movsb
jae
add
sub
jb
fdiv
or
es
loope
jge
daa
sbb
outsl
jmp
call
mov
sbb
jo
sbb
jp
add
es
enter
fisubrs
cmp
cmpsl
mov
inc
sbb
shll
xor
lods
sbb
cmc
out
ja
mov
push
insb
xchg
push
xchg
pop
decl
mov
xor
sbb
jns
ret
pop
outsb
movsb
sar
sub
fistpl
inc
and
push
les
push
jmp
cmp
dec
mov
pop
outsb
mov
cmpl
jecxz
repz
mov
movsl
arpl
movl
addb
pushf
sub
leave
lods
sub
xor
inc
movsb
stc
lock
aad
mov
jg
movsw
leave
fsts
dec
and
push
xlat
mull
add
mov
add
dec
jns
cmpl
fildl
cmc
pop
jne
push
add
and
cmp
iret
arpl
mov
mov
mov
pop
cmpsb
in
cltd
jae
mov
lds
mov
jbe
insl
popf
mov
icebp
cltd
mov
inc
sub
fimuls
test
cmp
xchg
out
or
outsb
lods
inc
inc
call
arpl
mov
inc
movl
inc
insb
jl
loope
les
out
hlt
loope
push
push
mov
pop
lcall
mov
fisubrs
pop
pop
sar
iret
push
cmpsb
mov
or
arpl
xorb
pop
xor
fmull
adc
sahf
mov
or
push
sub
insb
jnp
mov
mov
hlt
scas
add
aas
out
and
outsb
cmpsb
mov
push
push
or
xchg
xchg
subb
mov
cwtl
int3
out
xlat
in
cld
mov
xor
or
gs
jne
movsb
mov
loope
stos
sub
mov
or
ficoml
pop
std
movsl
repnz
mov
jle
in
imul
push
pop
xor
push
xor
sti
jnp
call
stc
fisubl
pop
fstps
fisttpl
xor
jmp
xor
fistl
pop
call
je
imul
xchg
insl
in
in
ja
nop
das
mov
xchg
rcll
es
adc
in
loopne
loopne
loope
and
dec
lret
sbbl
int
lret
fcmove
movsb
push
mov
cmp
mov
aad
cmp
movsl
xlat
sbb
pop
fdivrs
push
inc
mov
out
fcoms
lret
add
iret
mov
popa
xchg
js
arpl
leave
call
xchg
int3
mov
or
and
jns
jb
movsb
xchg
in
addr16
cs
mov
pop
jns
cmp
lods
dec
pusha
cmp
mull
jb
cmp
int
repz
push
cltd
ja
das
jp
mov
and
sbb
add
jmp
fsubs
out
inc
sbb
mov
int3
jae
ret
cld
andl
and
bound
jb
pop
sub
mov
xor
push
lods
fwait
stc
ret
sbb
aad
xchg
mov
movsb
int3
fists
inc
pop
jecxz
imul
addr16
mov
push
repz
jg
mov
mov
cmp
adc
adc
and
out
sub
cli
adc
dec
cs
test
pushf
cs
xchg
dec
xor
push
into
sbb
insb
sub
jmp
bound
xor
dec
das
shll
scas
mov
test
adc
arpl
inc
pop
pusha
sub
ret
push
jno
sti
mov
sarb
or
sbb
mov
and
clc
mov
pop
lahf
add
sbb
and
lock
and
cmp
jl
mov
inc
mov
dec
int
pop
xchg
hlt
pop
jno
sbb
mov
cli
dec
outsb
stos
gs
in
push
mov
lcall
xor
fxch
popa
lret
fs
test
pop
mov
xor
dec
out
cmp
adc
pusha
cld
arpl
sbb
lcall
push
pop
pop
mov
leave
jmp
decb
jg
sub
shrb
add
jae
jmp
xchg
cli
stos
mov
inc
add
call
mov
jae
fcmovnbe
dec
aam
dec
pop
stos
rcr
xor
jge
sub
mov
aas
stc
xchg
pop
ucomiss
enter
inc
adc
ljmp
and
addr16
mov
aam
push
mov
cmp
and
sub
pop
shlb
mov
dec
sbb
lcall
cmpb
xlat
sahf
stos
add
sbb
xchg
pop
pop
das
cmp
add
mov
ret
call
push
xchg
sub
pop
xor
or
mov
movsb
jns
and
pop
into
push
inc
into
dec
idivl
push
lds
mov
mov
jo
out
push
pop
mov
testb
add
push
in
mov
cmp
fdivs
pop
hlt
out
mov
pop
mov
mov
lods
cmp
jle
sbb
and
out
adc
jno
mov
nop
lods
enter
loop
testb
push
adc
pop
inc
sub
or
mov
lret
pop
subb
jp
inc
sub
xchg
sbb
stos
xchg
int3
jo
push
sti
pop
or
jae
mov
sbb
xchg
test
jnp
arpl
push
push
dec
xchg
mov
inc
sbb
movsb
push
sub
xchg
frstor
outsb
and
lods
jne
fmull
xor
and
rcll
xchg
mov
ret
ss
in
daa
insb
outsb
push
inc
or
ja
mov
mov
fiadds
movsb
sarl
fxch
ss
add
mov
pop
data16
sub
mov
inc
inc
push
pop
cmp
negl
dec
stos
pop
push
bound
add
pop
cmp
adc
adc
out
mov
mov
mov
sbb
add
std
movsl
mov
inc
rcrb
inc
inc
sbb
inc
sbb
shlb
sub
pop
and
xor
push
aam
test
xor
fidivrs
ljmp
inc
dec
pop
cmp
movsl
das
bound
sub
xor
jns
inc
push
mov
pop
adc
data16
or
mulb
insb
xchg
test
stos
cmp
cmp
jo
sbb
scas
mov
movsl
repz
cli
push
mov
data16
pop
flds
push
lahf
dec
pop
std
lea
cs
push
pop
push
and
sti
push
cwtl
mov
fcoms
mov
mov
add
notb
subl
xor
or
mov
iret
mov
mov
dec
fs
mov
pop
xchg
stos
cli
nop
add
imul
jno
arpl
xchg
adcb
mov
pop
cmc
das
push
dec
mov
mov
popf
xchg
into
jg
mov
sub
outsb
sbb
mov
mov
push
mov
test
pop
cmc
mov
sub
stc
xchg
inc
pop
xchg
cmpsb
jae
fnsave
in
es
add
ds
sub
or
repnz
lcall
xor
mov
inc
test
inc
bswap
cmc
xor
out
arpl
lcall
add
mov
cmpsl
in
int3
sub
pop
cld
sub
xchg
jne,pn
sub
scas
mov
lock
pop
push
pop
dec
jns
add
push
or
into
inc
cmpsl
and
mov
xchg
or
or
adc
rcll
dec
mov
push
dec
pop
sub
pop
aad
cmp
add
add
dec
in
insl
scas
mov
sub
pop
inc
mov
dec
pop
or
out
cli
add
les
sbb
dec
xor
lcall
test
inc
cmpsb
dec
nop
scas
stos
cmp
movsb
inc
cmp
jge
icebp
mov
js
jae
test
inc
inc
mov
lods
add
repnz
push
in
adc
dec
hlt
iret
jns
and
je
and
jno
into
popf
sbb
mov
push
sbb
fildll
je
bound
mov
adc
das
push
test
out
sar
push
inc
ficompl
aaa
dec
mov
mov
dec
cs
cmp
test
cmp
sbb
xorb
repz
lahf
or
or
ss
ret
cltd
mov
cs
test
jne
sbb
sbb
sub
test
mov
sbb
inc
mov
movsb
cmp
clc
xchg
push
xor
and
orl
jae
xorl
in
xchg
sub
pop
sub
jno
adc
push
xchg
cmpsl
lods
jae
clc
dec
icebp
pusha
cltd
sub
cli
inc
inc
daa
out
leave
cs
idiv
pop
or
and
dec
mov
inc
jbe
xor
dec
xchg
into
or
pop
popa
jb
jno
sbb
nop
pop
sbb
fiaddl
adc
aam
out
es
outsb
inc
push
pop
push
pop
sbb
mov
addr16
mov
mov
sti
jns
mov
hlt
fimuls
mov
js
jg
push
dec
jecxz
push
mov
push
add
ds
test
js
dec
dec
push
jg
cmp
pop
or
jmp
pop
lret
mov
pop
adc
out
mov
popa
sbb
repz
outsb
or
es
fisttps
dec
jne
jb
test
pop
out
adc
and
inc
movsb
in
repnz
inc
ds
in
movsb
mov
xor
sub
inc
mov
in
fidivl
pop
push
test
cmp
daa
mov
inc
push
outsb
push
nop
push
mov
es
mov
xchg
arpl
mov
push
jp
adc
test
mov
cmp
jno
ljmp
lcall
and
clc
lcall
mov
xchg
xor
ds
int3
and
sar
jae
adc
fists
push
dec
mov
cmpsb
mov
jb
aam
sbb
adc
and
ficoml
inc
ds
movsl
mov
inc
nop
mov
xor
data16
cmpsb
inc
iret
xchg
enter
lods
sub
repz
pop
jno
pop
push
lcall
add
ds
mov
mulb
cs
mov
stos
push
add
jle
push
mov
jmp
sub
movsb
lcall
mov
loop
xchg
cs
movsb
xlat
cmp
push
leave
xor
add
iret
test
lret
das
push
mov
int
dec
or
inc
xchg
adc
dec
sbb
mov
testb
push
addr16
lcall
in
adc
rcr
mov
outsb
mov
je
jns
fsubrs
fsub
adc
js
bound
xchg
aad
popa
dec
add
mov
movsb
js
add
ljmp
fdivs
push
pop
pinsrw
cmp
fildll
jno
scas
stos
mov
push
imul
push
xchg
into
ret
adc
scas
inc
sbbl
gs
mov
lcall
jno
mov
repz
das
pop
adc
add
pop
cmp
test
xchg
inc
mov
add
stc
dec
lock
inc
fwait
and
sbb
in
xchg
aam
inc
dec
pop
push
aad
xor
push
ret
xchg
int3
fists
fsub
test
loopne
mov
and
clc
loopne
pusha
mov
je
adc
fildl
sub
fwait
dec
and
movsl
mov
or
jnp
xorb
pusha
push
out
mov
cwtl
mov
lcall
lcall
mov
aad
mov
stc
popa
push
mov
inc
add
mov
repz
inc
mov
lods
mov
mov
addr16
andl
mov
aaa
bound
movsb
movsl
fmul
and
imul
scas
lods
gs
sub
push
xchg
xor
je
sub
sub
pop
fstpt
decl
mov
cli
je
push
add
sub
mov
jnp
pop
mov
cs
pop
into
fmul
adc
cmp
pop
jecxz
loope
dec
outsb
jle
out
mov
cmpsl
dec
in
mov
movsb
rcrb
sub
jbe
xchg
lea
jno
mov
mov
negl
cmpsb
add
lret
in
xlat
test
add
adc
and
sbb
push
dec
test
jge
jp
inc
pop
pop
cmp
ret
fidivrl
loopne
int3
xchg
loope
ljmp
das
movsb
adc
jns
test
mov
cmp
pusha
fwait
shll
outsl
mov
imul
enter
dec
andb
pop
xchg
sbb
in
cmc
mov
lods
mov
mov
pop
fadd
pop
pop
fs
cmp
lods
test
movsb
les
mov
inc
and
into
add
push
sub
sub
lods
vgetexpss
loop
xor
je
inc
jl
bnd
push
xor
mov
bound
lahf
xor
stc
inc
lods
outsl
in
stos
stc
push
lods
pop
push
je
repz
cli
shrb
sub
sub
imulb
imul
adc
and
push
repz
xor
xchg
jns
nop
jns
lret
stos
mov
jle
sbb
xchg
outsb
addb
cmc
mov
add
fisttpll
xor
lcall
movsl
inc
dec
xor
xor
dec
mov
cmp
jne
testb
xor
cltd
lds
mov
dec
not
mov
mov
push
into
hlt
add
inc
movb
daa
push
lock
and
in
mov
sub
mov
in
and
xchg
mov
std
mov
movsb
xor
pusha
mov
sarb
pop
rorb
popf
ds
aam
push
loope
dec
shll
dec
lret
movsl
push
js
movsb
dec
inc
jle
subl
or
jbe
das
lret
jp
movsb
test
idiv
inc
push
mov
sbb
loopne
push
gs
pop
add
mov
out
mov
mov
lcall
das
mov
js
enter
test
xor
jb
leave
popa
sbb
mov
cmpsb
in
gs
add
aam
cld
icebp
pop
sbb
lods
sahf
jns
cs
sub
xchg
add
xchg
lods
fmul
mov
jmp
loope
sti
push
fnstsw
repnz
mov
sub
pop
sub
stos
sbb
pop
flds
pop
mov
cld
cmp
jb
cld
aam
sub
imul
sbb
push
andb
popa
js
sbb
addr16
cltd
mov
les
jecxz
mov
mov
fidivs
mov
ret
pop
mov
rcr
mov
or
enter
movsb
xchg
out
in
stos
jbe
inc
cmp
push
insl
inc
push
dec
jns
push
mov
and
lods
add
pop
loop
ja
movsb
adc
jne
in
mov
stc
mov
pusha
out
insl
mov
mov
cli
insl
das
bound
in
movsb
sbb
je
mov
mov
orb
mov
popa
mov
push
xchg
pop
jns
xor
push
adc
addb
mov
push
cmc
mov
scas
lret
push
xchg
imul
and
xchg
rclb
ljmp
out
pop
mov
aam
jae
inc
pop
mov
lret
add
jge
stc
push
push
mov
dec
ljmp
jge
test
xor
push
pusha
fsubl
pop
adc
shl
pop
xor
stos
sub
sub
xchg
or
leave
mov
mov
movsb
add
cmp
xchg
mov
adc
or
addr16
movsb
dec
adc
cmpsb
jmp
push
mov
call
aaa
cli
stos
mov
xlat
inc
jns
jbe
lds
add
jge
pop
fwait
jns
add
add
ficomps
mov
arpl
cmp
stos
out
fmull
mov
orb
xchg
xor
lods
and
negb
jge
push
xchg
add
loopne
sub
push
pop
ja
jge
popf
inc
int
imul
repz
or
or
dec
jg
pop
mov
xor
int3
adc
lods
das
xor
xchg
mov
imul
add
movsb
outsl
jnp
push
ret
push
lods
push
push
pop
mov
sub
sub
xor
mov
fisubl
lods
mov
add
mov
push
iret
arpl
lcall
jno
mov
jl
je
jbe
jne
inc
xor
lret
ljmp
ja
test
xor
mov
adc
inc
sub
and
test
repnz
xchg
leave
setb
idivb
iret
lea
ror
cmp
loopne
int3
hlt
push
push
cmp
pop
repz
inc
mov
cli
aaa
sbb
xor
sbb
mov
xchg
out
sahf
aas
iret
and
jbe
rolb
or
mov
inc
lret
inc
cmc
std
fs
add
pushf
mov
lea
in
cli
sub
insl
push
insb
mov
or
mov
jae
push
jecxz
sbb
inc
cs
cld
push
sub
mov
jne
mov
push
mov
pop
mov
cli
xchg
into
xor
adc
out
into
les
ljmp
cmp
stc
in
lea
sub
mov
sbb
test
or
sti
mov
jge
mov
fisubl
cmp
ja
data16
inc
jbe
ja
lret
sub
mov
fstpl
addr16
sbb
sub
cmp
das
sahf
jge
pusha
mov
xor
pop
lea
mov
popl
andb
in
aam
dec
scas
push
mov
in
sbb
lea
push
mov
cltd
push
inc
mov
pop
sub
mov
shl
pop
xor
sub
inc
adcl
repnz
jb
pop
les
call
push
aam
cmpsl
sub
jb
les
mov
mov
test
push
aam
addr16
push
test
shr
call
pop
and
lcall
jo
cmp
addr16
xchg
jmp
xor
add
and
dec
push
xor
imul
pop
sbb
xchg
sub
xchg
rcr
sbb
sbb
or
xchg
add
mov
add
cmp
xchg
pushf
mov
mov
pushf
and
sahf
lcall
enter
jb
idiv
clc
mov
lret
inc
sub
cmpsb
mov
jl
aad
in
push
fldt
and
sbb
xchg
adc
xchg
mov
testl
fistpl
inc
or
push
les
shll
shrl
lods
fnstenv
cs
adc
add
int
jmp
pop
sub
xchg
test
les
fldcw
fsubs
push
or
sub
hlt
das
imulb
mov
mov
movsb
loope
mov
int3
decb
std
repnz
cli
push
stos
sub
roll
es
out
pop
sbb
ret
jb
add
ud1
jmp
movsb
arpl
pop
push
pop
cmp
cltd
xor
cmp
cmp
mov
push
mul
pop
pop
shll
jo
lds
rorb
lds
and
pop
and
inc
repnz
das
lahf
jno
jo
mov
push
std
mov
outsb
sahf
sbb
repz
fmul
jbe
pop
dec
cmpsb
jno
inc
aam
pop
xor
pop
inc
push
ljmp
mov
insb
iret
andl
mov
inc
daa
into
sbb
add
es
ss
loope
jge
and
jno
sbb
lcall
pop
xlat
jns
movsb
imul
outsb
mov
mov
mov
stos
stos
hlt
sbb
or
dec
xchg
inc
mov
dec
rcll
in
pop
call
lods
sbb
jecxz
je
and
mov
xchg
loope
sub
mov
shr
call
jne
fcoms
popl
fcoml
scas
jb
and
insl
or
cmp
sti
push
dec
in
push
in
test
imul
jnp
sub
cmc
sub
xor
push
sbb
std
mov
stc
sbb
call
outsl
jge
adc
enter
imul
dec
sbb
add
aas
outsl
fcomi
gs
adc
or
fsubrl
cmp
je
push
imul
cmc
push
inc
push
mov
stos
mov
insb
imul
sub
xchg
ret
mov
cmc
lret
iret
hlt
out
mov
xchg
xor
scas
ret
xor
jg
subb
les
mov
jb
outsb
or
cmp
inc
jae
sbb
or
adc
test
jns
repz
xor
and
pusha
mov
fimull
mov
push
xor
loopne
pusha
ja
dec
mov
fbld
fcoml
imul
mov
and
fdivrs
dec
fsubrp
test
arpl
add
cmc
outsb
mov
daa
pop
xchg
mov
add
mov
out
cwtl
pop
lock
mov
nop
mov
mov
add
mov
push
adc
dec
leave
pop
mov
call
mov
mov
movsl
jnp
pop
pop
dec
or
adc
sub
daa
jb
dec
sti
add
test
sub
jmp
mov
clc
add
jp
pop
mov
and
jbe
out
mov
movsb
loope
push
rorb
xor
or
dec
inc
inc
mov
out
daa
sub
inc
cmpsb
pop
mov
loop
inc
sub
or
sbb
out
pop
pop
rcll
sbb
insl
data16
sub
cmovno
mov
insl
xor
cmp
imul
xchg
mov
and
loope
test
mulb
jmp
repz
inc
jb
fcomi
filds
ret
jp
out
lock
xor
xchg
sbb
gs
jns
out
mov
icebp
andl
fists
lods
sbb
sub
mov
push
stc
test
shr
shlb
sub
jne
cmpsb
and
shrb
and
mov
loope
inc
inc
cli
out
pop
movsb
fsub
xor
mov
sti
lods
mov
mov
int
rclb
call
addl
mov
sub
sbb
jmp
pusha
popf
dec
pop
xchg
mov
dec
in
xchg
xor
ljmp
ds
outsl
push
in
jmp
adc
xchg
mov
gs
xchg
enter
sahf
cmp
mov
loope
jl
lods
mov
jne
test
imul
adc
movsb
in
fs
lock
in
shll
dec
loope
sub
ret
mov
movsb
inc
or
or
push
sub
cmp
rol
ret
push
pop
mov
repz
mov
lods
jae
ljmp
aad
fldcw
jecxz
push
ror
sub
es
and
or
add
push
mov
or
in
iret
pushf
in
sbb
jg
xchg
cmpl
pop
sub
shrl
jb
dec
jmp
scas
outsl
mov
sub
pminsw
out
imul
test
dec
sub
sub
outsb
in
jns
inc
lods
jmp
test
cmc
push
iret
mov
inc
pop
lret
cmp
scas
lea
das
push
and
lcall
mov
stos
out
mov
subb
pop
push
pop
inc
sti
dec
ljmp
pushf
push
or
ds
add
popf
mov
sub
mov
mov
lret
scas
lods
mov
and
scas
xor
xchg
and
lods
mov
push
dec
pushf
xchg
adc
pop
fwait
and
mov
adc
sbb
repz
icebp
imul
stos
lea
add
jo
aam
cs
clc
loop
fs
pushf
mov
std
dec
and
push
adc
cmpsb
mov
jo
lcall
xchg
daa
inc
push
jp
jo
or
xorb
cmc
xor
pop
jne
cs
inc
pop
xchg
cmp
lret
sbb
mov
repz
lds
adcl
inc
hlt
stos
ss
lods
cmp
dec
outsl
lahf
cmp
gs
mov
das
inc
mov
fld
push
sub
loop
outsb
fsts
andl
pushf
nop
std
xchg
cmp
movsl
dec
mov
xor
pop
jle
or
push
ret
mov
shrb
mov
mov
leave
sub
add
scas
jle
pop
sbb
or
mov
sub
jmp
repnz
cltd
and
in
and
adc
pop
xor
call
pop
iret
adc
add
mov
out
mov
push
xchg
scas
mov
adc
sbb
mov
ljmp
psubd
mov
icebp
jno
pop
testl
adc
popa
ret
and
enter
sar
les
dec
out
adc
cltd
add
xchg
push
aaa
ja
rorl
jmp
xor
call
hlt
fiadds
xorb
sti
cmpsb
or
mov
stc
fidivrl
daa
xchg
dec
xor
daa
inc
into
push
cmpsl
ret
pop
test
cs
inc
aaa
shrl
fadds
cld
sub
fimuls
sbb
jno
jb
push
std
pop
movsb
xchg
or
pop
fcmove
shr
xor
out
rclb
movsb
mov
push
ljmp
cmp
aaa
jle
jmp
outsb
cmp
xor
lds
add
mov
loop
adc
sbb
sub
jmp
into
inc
cmc
leave
in
jns
mov
and
adc
bound
stos
shll
cmpsw
push
loope
adc
cld
popa
add
jnp
mov
outsl
jno
xor
inc
push
inc
mov
dec
add
hlt
lods
pop
icebp
xlat
adc
adc
pushf
mov
in
decl
sbb
fisttpll
das
movsb
sbb
out
add
gs
xchg
adc
xor
bound
sbb
into
fdivs
imul
jge
add
fldt
aam
sbb
push
or
mov
pop
mov
or
repnz
jnp
popf
push
xor
xchg
out
or
aad
jae
arpl
inc
shlb
andb
xor
std
lcall
push
jmp
pusha
lds
sbb
pop
dec
jbe
sub
data16
pop
dec
xlat
cmpsl
sub
dec
push
scas
std
cld
and
inc
mov
loopnew
sti
ret
push
shll
push
add
rcll
add
push
jmp
in
dec
mov
adc
dec
push
jbe
gs
clc
pusha
lret
pop
loope
xchg
xchg
xchg
pop
or
mov
pop
loope
enter
fcoms
ret
sub
xlat
add
jnp
idivl
int3
sbb
popa
call
pop
fabs
push
inc
addr16
pusha
or
push
sbb
bound
lods
lcall
jmp
ds
out
xor
sub
sub
dec
arpl
insl
cmp
cmpl
jp
jg
mov
mov
aad
pop
pop
add
int
out
shll
pop
in
into
sbb
arpl
das
mov
std
mov
test
pop
sub
cmp
mov
jbe
lret
push
push
xchg
dec
scas
outsb
xchg
addr16
cmp
sub
xor
xchg
insb
cmp
sub
fisubrs
testb
repnz
mov
loop
fisubrs
fsts
pop
cmpsb
imul
mov
das
out
jg
mov
negl
sbb
inc
xorl
jge
push
cmpb
adc
sub
cmp
es
mov
inc
dec
shrl
jns
enter
ss
cmp
xchg
shr
push
pop
ds
adc
subl
mov
xchg
add
ljmp
mov
xor
mov
mov
imul
aas
stc
and
out
pop
lds
jb
movsb
jb
jae
push
dec
xchg
sarb
outsb
out
or
call
scas
or
pop
sbb
ds
inc
mov
jno
pop
sub
out
bnd
push
imul
push
stos
out
xorl
jbe
cmp
mov
mov
arpl
jnp
jne
fsubl
subl
divl
jnp
push
jp
fldt
hlt
sub
or
sub
clc
lahf
mov
repz
cmpsl
ss
push
add
adc
andb
fisubs
or
lea
mov
jns
jp
push
dec
les
fstpt
and
sbb
rcrb
jge
inc
cmp
push
or
sub
and
fs
jnp
lock
outsl
cmc
movsb
fwait
adc
cld
mov
sub
fcomi
arpl
lods
test
lret
cmp
les
imul
xchg
js
cmpsl
jmp
mov
sbb
in
in
xor
dec
xor
dec
and
movsb
push
addr16
dec
mov
push
mov
fbld
int3
into
xorb
xor
out
cmp
push
sub
neg
sbb
and
movsb
sarl
push
pop
jne
push
mov
jnp
inc
or
nop
lods
adc
mov
test
dec
jp
movsb
dec
test
in
xorl
xor
xlat
cwtl
int
rcll
aaa
lret
mov
cmp
adc
cmpsb
cmpsl
stc
icebp
in
shr
fidivs
or
sti
loop
lock
cmc
in
jmp
sub
mov
mov
xor
loope
inc
mov
jae
lret
sarb
popa
cmp
subb
xchg
pop
mov
xor
movsb
xchg
in
sti
push
adc
es
and
mov
push
dec
jl
cmc
ds
daa
lods
adc
cmp
imul
test
cmc
or
repz
pop
fucomip
inc
shlb
sarl
mov
pop
xchg
orl
insl
pop
movsb
xchg
and
add
pushf
cli
push
jo
and
xorb
sub
jno
mov
cmp
jns
subl
push
lds
jle
sbb
or
push
arpl
inc
call
xchg
sbb
jge
xchg
add
push
sbbb
adc
jns
int3
push
cwtl
shll
xor
inc
icebp
dec
jmp
pop
ret
adc
cmpsb
mov
in
mov
das
lcall
adc
cld
lods
test
pop
insb
jg
movsb
inc
and
bound
arpl
fdivrl
jnp
call
insl
sub
mov
jb
cmp
packsswb
ja
inc
xor
pop
sarb
scas
rcll
ret
or
fdiv
mov
sbb
push
aas
adc
sub
jae
shlb
xor
mov
lea
icebp
movsl
in
pop
pop
fnstsw
or
jp
adc
movsb
fs
cmp
and
int
and
jp
andl
out
mov
mov
inc
movsb
and
mov
mov
lcall
cli
cli
pusha
sbb
mov
mov
out
jns
jecxz
ja
scas
imul
xchg
push
pop
idivb
mov
mov
lret
shlb
outsb
mov
es
ficoms
iret
nop
jge
sub
into
ret
dec
cmp
inc
and
lret
jns
push
sbb
mov
mov
jmp
data16
clc
test
and
cmpsl
mov
push
repz
push
dec
jb
repnz
inc
and
loopne
shl
dec
stos
adc
sbb
movsb
popa
push
xchg
aaa
push
cltd
xor
pop
icebp
pop
xchg
fidivs
add
or
pop
outsb
sbb
xchg
inc
lcall
movsl
mov
into
jbe
jno
fsubl
cmp
addr16
lcall
mov
lds
cli
dec
in
mov
mov
add
das
lcall
cld
lret
sbb
mov
lock
icebp
cli
mov
push
xor
dec
push
cld
sub
imul
outsl
stc
jae
inc
inc
cwtl
clc
jle
repz
pop
xchg
out
jge
dec
repz
dec
dec
and
xchg
adc
sbb
sti
mov
xchg
xchg
pop
jb
jno
xor
das
cmp
mov
xor
xchg
fmull
sbb
push
cmc
cmp
mov
fdivs
jns
inc
leave
push
mov
jbe
and
mov
mov
scas
lcall
icebp
cs
xchg
sbb
jg
pop
nop
jmp
pop
jge
arpl
dec
pop
popf
push
subb
pop
cmp
pop
std
or
jnp
pop
jne
mov
xchg
aam
sar
push
iret
repz
xor
dec
adc
sahf
aad
jne
or
cli
mov
xor
pop
sub
cwtl
push
sbb
es
mov
clc
shlb
sahf
add
add
dec
stc
scas
iret
jb
sub
cmc
xor
sub
sahf
add
add
int3
test
popa
lock
neg
fldt
push
pop
popa
or
pop
dec
les
test
hlt
xor
jae
xchg
outsb
sub
je
cmp
fs
imul
sub
test
repnz
out
mov
addb
pop
lret
das
push
pusha
mov
and
mov
jmp
loope
arpl
xor
jbe
arpl
sbb
stos
stc
sub
shll
data16
pusha
subl
push
aad
cmp
mov
push
std
in
push
out
push
ret
push
mov
dec
adc
or
mov
jns
adc
push
push
nop
xchg
push
icebp
test
push
push
rorl
xor
dec
aaa
mov
pop
push
leave
inc
push
lds
ljmp
mov
pop
arpl
sub
adc
inc
cmc
or
pop
iret
pop
and
dec
jne
cmp
bound
bound
mov
and
jne
fiadds
sub
dec
xor
std
mov
lahf
mov
lock
sbb
xchg
mov
bound
push
fwait
shrb
inc
inc
xchg
insb
mov
jo
cmpsl
inc
pusha
xchg
mov
out
outsl
pop
mov
cltd
sub
dec
adc
mov
jg
jg
sub
jmp
les
loope
int3
pusha
aad
push
call
out
sub
xor
mov
dec
jb
pop
arpl
lds
rcr
or
mov
into
repz
pop
ds
xchg
jbe
push
bound
test
xor
mov
sub
decl
enter
adc
sbb
test
ds
outsl
dec
es
lea
outsb
iret
fwait
in
hlt
push
test
dec
push
add
scas
outsl
adc
xor
and
das
pop
sub
fcomps
rol
or
fwait
sbb
xor
mov
cli
std
outsb
dec
hlt
shrb
hlt
or
pop
xchg
das
pop
ljmp
xchg
lcall
xor
movsl
xlat
loopne
mov
lock
sbb
je
push
jae
sbb
aaa
xchg
mov
push
mov
ljmp
imul
mov
movsb
ret
repz
mov
pusha
mov
cli
sub
lret
cs
sahf
rclb
rclb
out
test
gs
xchg
adc
xchg
dec
jno
mov
ret
lahf
push
adc
xchg
repnz
push
notb
into
out
jmp
jecxz
mov
jmp
rolb
outsb
outsl
fstps
xorb
sub
xchg
or
adc
adc
aas
adc
stos
pusha
pop
or
stos
mov
and
ds
dec
mov
mov
xor
mov
rorb
add
out
movl
aam
ja
ret
insb
push
mov
fucomi
sub
pop
je
cli
shll
dec
mov
mov
and
lock
inc
int
pop
add
and
sbb
nop
aam
xorl
mov
addl
ficomps
push
add
and
push
std
mov
rcr
jge
ss
movsb
or
outsb
inc
xor
lods
add
xchg
das
movsl
mov
je
adc
into
xor
ljmp
into
mov
mov
shlb
int
jge
scas
cmpsb
add
mov
daa
jb
sub
std
push
or
call
fstpl
loope
adc
mov
icebp
mov
das
scas
fimuls
movsb
lret
xor
lcall
mov
or
and
call
popa
sub
push
movsb
and
loopne
or
negb
mov
jle
sub
cli
mov
jbe
cmp
gs
pop
ss
and
lods
cmp
jns
das
jp
icebp
jns
lcall
cmp
sub
out
xlat
add
std
add
lods
xor
or
inc
movsb
adc
jmp
jp
clc
in
sbb
loopne
out
push
and
stos
in
mov
lret
xor
outsb
mov
cltd
push
cmp
cmp
in
add
dec
shrb
mov
das
push
mov
movsb
nop
inc
cmp
xchg
jo
aam
mov
pop
xor
sbb
aaa
inc
movsb
loopne
sbb
insb
cli
dec
mov
pop
push
scas
stos
inc
call
push
hlt
push
or
stos
push
pop
xor
or
mov
sahf
mov
cmp
and
aam
into
jmp
cmpsl
cmp
sahf
lock
lods
stos
cmc
popf
arpl
ja
jge
scas
cli
fidivs
rorb
xor
push
ja
cs
cmpsl
int
xchg
push
cmp
dec
and
sbbl
xlat
xchg
fdiv
inc
les
out
out
push
fs
push
add
aam
pop
xor
enter
push
xor
in
pop
outsb
clc
sub
enter
hlt
mov
add
mov
repnz
aam
sbb
pop
add
jns
add
movsb
rol
mov
jbe
test
sub
pushf
mull
push
lods
sub
popa
fdiv
aad
push
xor
mov
ret
mov
mov
jno
fisubrl
cli
icebp
jns
xor
cwtl
inc
out
jne
push
sbb
aad
hlt
call
fldenv
sbb
mov
mov
subps
movsl
push
pushf
and
test
sbb
imul
pop
orb
push
push
jne
mov
or
pop
jno
sub
cpuid
xchg
insl
add
in
add
test
push
xchg
test
push
sbb
add
ficomps
rcl
test
movsb
mov
out
jb
adc
shll
cwtl
add
in
xor
dec
pusha
lds
sbb
add
orb
xchg
dec
rep
mov
and
mov
push
aam
mov
loope
arpl
pushf
inc
and
xor
icebp
fisttpl
test
test
push
xor
insl
push
sbbb
xchg
mov
hlt
lods
push
aas
test
xchg
inc
iret
cmc
push
xchg
rol
mov
mov
sub
xchg
into
sub
sbbl
xor
mov
sub
mov
ljmp
andl
fsub
pop
xlat
push
jbe
pop
out
jb
sbb
mov
pop
mov
push
push
leave
and
mov
cmp
push
insb
mov
push
pop
xor
mov
add
jae
psrld
aas
rol
pop
pop
das
pop
lret
movsb
movsl
mov
mov
mov
data16
imul
lock
mov
pop
ret
jbe
mov
das
inc
fldt
iret
push
xor
xchg
repnz
aad
mov
fcmovnbe
andb
mov
movsb
fldl
les
xor
jp
fmul
cmp
jns
jge
dec
lahf
push
mov
mov
lods
sar
mov
std
push
xchg
cmc
or
lock
pop
aaa
xchg
jg
mov
icebp
push
inc
add
or
inc
fmuls
aaa
pushf
mov
movb
add
addr16
jmp
or
pop
add
and
inc
xor
adc
push
xchg
insl
jo
xlat
xor
sbb
cmp
xor
bound
jmp
js
mov
and
lea
cli
or
push
popa
test
or
jmp
xchg
sti
mov
jmp
jmp
sub
lret
xor
je
xlat
sbb
push
mul
in
cmc
mov
dec
test
adc
xchg
pop
jge
xor
fadds
jmp
outsl
sub
out
push
stos
xor
jge
ret
divb
xor
cltd
sub
and
lahf
xor
repnz
mov
cld
fimull
lods
test
xor
dec
dec
cmpsl
jge
scas
jecxz
sub
push
push
sub
enter
mov
scas
mov
idivl
mov
lret
scas
push
les
scas
cli
xor
flds
inc
sub
sbb
mov
jno
cli
dec
add
idivl
scas
sti
sbb
int3
mov
pop
lods
pop
push
jbe
scas
lcall
lahf
aad
mov
sub
pop
xchg
rcr
int3
test
in
push
addr16
sbb
jbe
stos
push
jnp
or
and
sub
adc
and
jp
add
outsl
cmpsb
jp
and
cli
mov
jecxz
and
fcomps
cmpb
xchg
sbb
dec
lcall
fdivrs
sbb
dec
cltd
mov
pop
repnz
or
cmp
dec
dec
mov
push
es
xor
loopne
inc
stos
test
lods
fbld
adc
sahf
pop
push
sbb
push
icebp
adc
or
jne
fmul
jecxz
in
lret
sbb
xorb
mov
pop
mov
or
or
sub
fsubs
mov
imul
out
push
inc
fimuls
insb
out
sub
mov
pop
pop
sahf
jge
jg
sbb
xchg
clc
jae
bound
cmp
mov
sub
jg
jge
call
outsb
js
inc
add
ja
sub
inc
and
xor
mov
orb
inc
fsubrl
ds
dec
push
jl
repz
or
pop
sahf
jo
bound
jbe
xor
lods
repnz
stos
popa
addr16
xchg
ret
outsl
cli
mov
in
scas
cltd
xchg
aad
ljmp
rcll
sub
mov
inc
inc
dec
call
pop
orl
js
outsb
shr
add
or
sahf
int3
mov
ret
push
push
xchg
push
mov
dec
mov
out
shll
xlat
pop
test
out
mov
iret
push
mov
stos
lret
cmpl
sti
rolb
ds
aam
push
stc
cmpsl
lcall
and
pop
test
sub
addr16
shl
out
cmp
mov
mov
les
inc
mov
adc
lcall
das
adc
jmp
push
cmpsb
add
and
cs
lock
ret
cld
aam
ss
mov
pshufw
mov
loop
rcr
mov
xchg
cmpl
mov
insl
push
inc
mov
out
xor
push
jb
or
fisubs
and
test
movsl
add
sbb
mov
or
neg
lahf
ja
rcr
adc
mov
or
jns
pop
ret
ljmp
incb
xlat
stos
pop
mov
cmp
es
repz
jno
scas
pop
ljmp
inc
dec
in
mov
add
loopne
adc
xorl
orl
imul
test
scas
sbb
aaa
repz
jb
dec
xchg
mov
test
or
aas
lahf
enter
dec
mov
or
aas
jne
mov
pop
pusha
sub
sbb
mov
push
and
arpl
test
shl
iret
out
movsb
adc
xchg
sbb
xor
inc
lods
mov
icebp
adc
pop
outsl
fldt
and
lock
in
in
stos
es
loope
add
loope
xorl
stos
out
or
jae
adc
clts
out
pop
addr16
adc
cld
repnz
jp
jae
cli
es
mov
add
lods
xor
ss
repnz
xor
or
add
xor
lods
outsb
jb
addr16
popf
push
cli
push
lret
mov
test
neg
mov
lods
test
fisubl
xor
mov
pop
pop
mov
jp
jle
lods
jns
push
sub
adc
xchg
jb
loope
shll
sub
xor
ja
insb
lcall
daa
xor
in
mov
inc
xchg
push
inc
mov
push
mov
mov
iret
xchg
sub
sub
int3
sarb
pop
pop
sub
sub
push
sar
sbb
int3
jmp
push
aam
ljmp
movsl
mov
cmc
xor
bound
push
int3
stos
psrad
add
mov
xor
arpl
xor
xchg
scas
sbb
sbb
sub
xchg
cmp
jge
mov
es
pusha
xor
mov
jbe
add
ret
addr16
lcall
cmc
mov
xchg
pusha
cmp
shrl
fisubl
hlt
gs
loop
push
dec
xor
pop
mov
dec
dec
sbb
call
push
mov
jmp
jg
test
cmp
shll
adc
mov
mov
and
mov
cmp
and
fisttps
ljmp
wbinvd
push
add
mov
push
jnp
cmp
sti
sarb
pop
mov
and
dec
and
das
dec
dec
das
jnp
lods
pop
push
scas
mov
scas
jne
jb
mov
or
test
stos
movsl
pusha
out
push
cmp
int
xchg
js
sbb
mov
mov
pop
jae
jle
pop
cmp
sub
repz
test
push
scas
aad
xchg
push
dec
js
xor
jge
and
mov
pop
or
push
pop
fs
lods
das
mov
mov
js
push
xchg
test
int
fstps
push
pop
jbe
enter
push
mov
js
jge
pop
mov
cmpsb
xor
mov
cmp
xor
insb
hlt
and
lret
add
mov
aaa
or
call
push
out
test
pop
jmp
push
push
mov
aas
insl
int3
insb
loopne
pop
push
sub
add
jns
es
xchg
or
xor
into
movntq
lea
movsb
lret
mov
push
subl
and
pushf
add
js
mov
pop
insl
hlt
adc
pusha
rcrb
es
lret
frstor
int
pusha
pop
jbe
out
int
pop
adc
xor
hlt
push
push
movsb
or
aaa
hlt
push
fxch
ljmp
cmp
cmp
outsb
mov
jb
fcoms
aas
ret
mov
jnp
je
les
jae
andl
cmp
jno
or
sub
movsl
aaa
out
mov
cmp
sbb
mov
or
or
fsubs
out
lods
pop
xchg
and
mov
outsl
in
aad
enter
sub
pop
cld
les
stos
xor
notl
xor
lret
fnstenv
mov
xchg
stos
fildll
dec
xor
inc
cli
jbe
stc
mov
js
sbb
adc
jae
scas
mov
stos
fdivrs
sbb
es
jno
xor
mov
fbld
and
rolb
sub
push
fildl
push
xor
popf
cmpsl
mov
in
push
imul
leave
dec
mov
jbe
push
xor
push
stos
outsb
ficomps
mov
inc
push
and
jg
xor
ds
sbb
sub
mov
sbb
jno
stos
mov
stos
je
push
inc
outsb
push
pop
outsb
cmc
dec
mov
stos
int
hlt
aaa
mov
mov
iretw
push
xchg
test
dec
bound
shrl
adc
xlat
movsb
jns
repnz
aas
mov
push
dec
subb
sbb
adc
pop
rcl
jbe
mov
inc
sub
bound
repz
mov
pop
cwtl
das
pop
add
mov
mov
cld
mov
arpl
in
loope
inc
cli
xor
call
sub
adcl
notl
js
subb
and
mov
push
test
mov
jg
jo
add
push
out
mov
xchg
stos
leave
cltd
adc
mov
fisubs
push
inc
sbb
xchg
mov
dec
sti
sub
out
outsb
enter
add
stos
pop
or
xor
sub
cmc
and
rcrl
pop
add
ja
push
sub
pop
xchg
sbb
push
mov
push
mov
cmpsl
loopne
cld
dec
xchg
scas
adc
loop
and
mov
stos
movsb
orl
cwtl
nop
jmp
outsb
test
xsha256
cmpsb
push
sub
in
jle
fstps
ljmp
outsl
fwait
stos
cli
cmp
mov
or
fidivs
inc
sub
jbe
in
push
or
push
sub
ljmp
add
push
lea
push
mov
movsl
jge
sub
fs
test
shll
cmpsb
ja
push
fs
dec
and
push
fcmovnb
push
fildll
minps
and
pop
out
or
lods
insb
xchg
lahf
pop
jle
jo
dec
mov
lahf
repnz
stos
cs
loope
hlt
mov
mov
mov
shll
outsl
pop
ljmp
push
mov
pop
xchg
lret
cmpsl
repnz
into
punpcklbw
aam
arpl
xchg
call
and
lods
sub
mov
aad
pop
mov
jno
ljmp
add
dec
ret
es
adc
jb
cmp
mov
push
cltd
cmp
add
lcall
cmp
cmc
addb
das
ret
movsb
int
in
int3
es
push
adc
add
cmp
or
nop
lcall
les
adc
pop
cmpsb
jl
push
ljmp
mov
cli
cmp
mull
in
ss
fdiv
mov
xor
pop
add
xchg
sub
mov
std
arpl
mov
push
adc
icebp
push
lods
fwait
add
gs
and
push
dec
xor
pop
add
les
push
mov
loopne
ss
inc
sbbl
jne
daa
xchg
ret
notb
fadd
lods
mov
outsl
loop
jb
and
jbe
pop
dec
add
mov
popa
push
add
icebp
sarl
cmc
mov
testl
mov
aam
xorl
push
mov
pop
out
out
xor
pop
insb
cmp
or
fldt
xor
pop
xchg
xchg
or
lods
cmp
push
scas
adc
push
pop
in
and
cld
not
mov
cmp
jle
movsb
pop
fcomps
lea
test
jge
dec
fisttpll
cmp
lods
cmpsb
popa
out
movsb
xorl
dec
mov
out
das
jl
jbe
test
mov
mov
icebp
out
sbb
xlat
jl
mov
aas
jg
xorl
lods
aaa
mov
xorl
mov
mov
out
orl
mov
lods
rol
sub
mov
into
jbe
adc
mov
jb,pt
inc
insl
cmpsl
lcall
xor
mov
and
xchg
push
mov
insb
fisubrl
int
cld
stc
mov
inc
pusha
scas
call
subl
jmp
or
inc
das
mov
or
popf
iret
fnstcw
ret
jle
shlb
div
insb
inc
mov
cmp
data16
and
or
jg
mov
cmp
shrl
mov
xor
mov
cmpl
call
bnd
jp
aam
jg
inc
add
lods
push
nop
cli
cs
mov
cmp
sahf
mov
mov
mov
imul
cs
xor
popf
sbb
add
pop
or
aas
mov
mov
add
adc
test
mov
fisubrl
xchg
daa
ljmp
aam
hlt
fcomi
in
adc
int
ss
cmp
cmp
cwtl
add
inc
arpl
outsb
cmpsb
orb
leave
dec
cld
push
lret
dec
ja
iret
pop
inc
xchg
push
push
push
dec
in
adc
mov
das
sub
cmpsb
rcll
or
fs
popa
push
movsb
mov
cltd
and
hlt
stos
adc
mov
add
push
sub
lret
pop
push
mov
pop
iret
jbe
rcll
fcomps
mov
or
out
leave
fsubr
arpl
cs
lods
jbe
and
es
mov
leave
das
add
iret
jle
ja
dec
test
test
xchg
and
push
xlat
jo
inc
or
and
jge
insl
mov
mov
or
push
sbb
out
lods
test
fdivrs
lfs
jo
cmpb
cmpsl
popf
jbe
adc
bound
pop
in
mov
shrl
aam
fldcw
sbbb
into
jnp
rcl
and
and
loopne
and
add
daa
jno
out
shlb
sbb
mov
add
adc
sbb
mov
lcall
shrb
test
sub
jnp
or
jb
cmp
stos
and
mov
mov
jge
rcrl
xchg
mov
mov
lods
outsl
push
daa
cmp
ja
push
sbb
sbb
inc
sbb
stos
lret
bound
cmpsl
out
scas
pop
xor
and
std
fisubrs
or
dec
or
sbb
sub
cltd
int3
arpl
mov
push
mov
ror
sub
faddl
mov
ret
out
mov
daa
les
sbb
sbb
cmp
dec
pop
mov
scas
data16
dec
pop
aam
mov
inc
movsb
jle
or
out
push
and
mov
arpl
mov
lods
cld
rcrb
inc
add
or
dec
ret
sub
sub
mov
data16
mov
out
mov
scas
mov
mov
icebp
xor
sbb
hlt
call
xchg
test
das
sbb
aaa
lret
sub
cli
xchg
jns
out
lods
or
out
mov
std
outsl
lock
xchg
orl
outsl
aam
push
xorl
sub
inc
or
fwait
push
test
in
jns
xor
sbb
js
mov
mov
mov
out
inc
xor
scas
xchg
and
mov
sub
inc
jecxz
repnz
and
mov
mov
sbb
jae
mov
cltd
std
repz
mov
shrl
xchg
push
leave
lret
repz
mov
into
add
fidivrs
fidivl
incl
cmp
or
push
sbb
shl
mov
iret
adc
je
push
xchg
mov
fsubrs
inc
and
dec
ret
movsb
and
pop
flds
adc
mov
xchg
fildl
ret
cs
jno
cmp
pop
add
adc
pop
fmul
and
rcll
iret
into
xchg
push
jno
xchg
xchg
popa
cltd
clc
inc
test
adcb
ret
mov
sub
cmp
lret
mov
aam
and
outsl
sub
jo
push
cmp
cld
insb
shlb
aam
jbe
loope
sub
test
mov
mov
jne
insl
jno
mov
inc
mov
in
into
jae
and
mov
dec
int
xchg
out
int
ret
test
movsb
shll
inc
stc
mov
xchg
sbbb
and
mov
out
aad
ret
mov
movsb
cmp
push
cmpsl
inc
mov
pushf
mov
add
adc
ja
and
xor
add
xchg
sbb
lds
adc
fsubs
pop
aam
adc
sub
out
int
lds
and
movsb
test
dec
dec
push
rdpmc
mov
insl
sbb
dec
daa
adcb
shll
lods
push
aaa
icebp
sahf
sbb
adc
xor
mov
inc
cli
fisttpl
xchg
fbstp
add
lods
push
roll
fisttpll
cmc
cwtl
bound
jl
dec
fisubrs
stos
sbb
out
xchg
lcall
dec
add
add
mov
ljmp
loope
inc
cmp
mov
call
sub
insb
jg
ljmp
or
pop
push
enter
test
sub
cs
out
aaa
mov
outsl
cmp
jae
mov
sbb
add
lcall
scas
ds
getsec
aad
loope
dec
mov
nop
hlt
addl
int3
mov
mov
cmp
fwait
adc
sub
in
mov
in
ret
jbe
bound
add
lea
mov
imul
push
pop
lods
pop
jl
clc
sahf
xor
call
mov
repz
push
jle
jnp
adc
inc
cmpsb
sbb
jp
out
add
movsb
jg
push
data16
push
scas
mov
mov
sti
and
int
jne
sub
pop
cmp
out
cmpl
mov
jle
sub
jmp
ret
xor
popf
dec
pop
lods
sbbl
mov
lcall
pop
mov
into
scas
mov
inc
jne
mov
cwtl
insb
icebp
cli
sti
dec
rcll
mov
aam
negl
mov
sub
and
addl
popf
mov
jge
negb
xchg
xchg
jp
sub
jns
mov
add
lods
xor
fmuls
cmp
sub
sub
mov
xchg
push
push
sbb
movsb
dec
sbb
push
lcall
jo
mov
sub
movsb
inc
popa
mov
dec
cwtl
fiaddl
and
mov
testb
out
lcall
and
sbbb
and
jmp
mov
push
fstpl
loope
xchg
jb
in
pop
arpl
jp
mov
daa
jnp
cmp
or
jmp
pop
add
push
sub
insl
jns
cwtl
adc
sub
stos
add
xchg
fidivl
mov
or
in
mov
je
jge
jo
ja
dec
lret
jne
sbb
call
jg
movsb
pusha
xchg
and
mov
adc
add
mov
push
idivl
xchg
stos
add
je
adc
cld
sbb
mov
loope
mov
je
stos
daa
push
add
dec
and
test
cli
adc
pop
repz
and
mov
sbb
xchg
mov
sahf
fisubrs
sbb
mov
ret
xchg
ljmp
mov
mov
xorb
adc
sub
sub
pop
jmp
subl
push
jecxz
fsts
push
or
mov
xor
arpl
add
pop
xlat
repz
sub
sub
pop
or
jo
add
imul
mov
stos
jecxz
or
data16
ds
sub
mov
jns
pop
pop
movsb
subb
cmp
mov
inc
loop
mov
push
js
lea
xchg
push
movsb
bound
lds
roll
xor
add
mov
out
sub
pop
dec
in
pop
dec
push
icebp
adc
in
cmpsl
push
and
cmp
mov
pop
push
sbb
cmpsl
jae
bound
lds
mov
push
add
inc
jns
test
sahf
cmpsb
out
dec
test
mov
inc
jge
mov
mov
leave
cli
push
sahf
loopne
pop
push
dec
pop
xchg
mov
jecxz
sbb
dec
fidivl
and
push
jae
je
insb
mov
mov
mov
inc
stos
add
repz
sub
or
and
mov
lea
insb
sbb
dec
sub
mov
addr16
setnp
add
call
cli
push
jmp
aam
xor
push
mov
scas
push
sbb
mov
mov
sbb
stos
test
lds
icebp
sub
push
fstp
inc
fsubrs
mov
lods
icebp
push
les
mov
push
mov
dec
stos
jae
popf
sub
stos
pop
shlb
pushf
fisubs
out
jp
pop
jne
ja
xchg
jno
cmp
out
stos
mov
adc
movsb
dec
mov
xchg
add
lock
xor
jmp
call
push
cmc
jl
pushf
sbb
xor
mov
pop
xchg
mov
jns
shll
aaa
mov
xor
add
push
push
outsl
lcall
xchg
aas
dec
sbb
cli
push
sub
leave
mov
roll
mov
inc
ficoml
ffreep
mov
addr16
dec
xchg
push
loope
arpl
pop
push
rolb
hlt
cmp
stos
mov
jb
movsb
cmpsl
xor
jae
sub
hlt
es
xchg
scas
addr16
shr
lods
lock
mov
andl
sub
pop
and
xor
push
mov
mov
lret
clc
pop
adc
mov
or
lds
mov
xor
lods
mov
fcom
xchg
hlt
das
jns
xchg
cmp
aaa
dec
mov
mov
cld
jge
add
push
dec
mov
jnp
popf
push
les
loope
fld
imul
sbb
fmulp
adc
inc
or
push
inc
loopw
lods
jo
jmp
stos
movsb
mov
aad
pop
adc
mov
xchg
ret
xor
fcoml
stos
adc
push
ja
shrb
dec
aaa
jae
mov
mov
mov
xchg
xchg
xchg
leave
jg
in
dec
xor
subl
jne
add
in
rcll
outsl
fidivrs
sahf
aad
stc
imul
test
movsl
shr
inc
jmp
sub
push
xchg
mov
les
sbb
scas
jns
mov
jns
sbb
loop
mov
dec
sbbb
jns
ret
inc
mov
mov
dec
inc
jle
sub
and
adc
xchg
push
push
call
fidivrl
loope
sub
gs
daa
fwait
icebp
xchg
inc
call
test
lock
or
jmp
into
fnstenv
xor
push
mov
lock
xchg
fcoms
aam
cmp
les
mov
arpl
inc
das
scas
xchg
mov
shlb
sub
lods
dec
jp
jge
pop
loope
inc
aam
pop
xor
repz
in
adc
dec
out
rolb
xor
pop
add
sub
fisttpll
jge
movsb
jne
movsl
sub
or
daa
cmp
mov
pop
sbb
mov
push
mov
xchg
sub
stc
add
ljmp
mov
out
into
arpl
loopne
inc
int3
lea
ficompl
adc
xchg
and
in
xchg
fcmovbe
jo
decb
push
hlt
fsubl
popa
pop
mulb
loope
push
push
mov
push
inc
fnstcw
movsl
insb
sub
mov
xor
mov
mov
push
insb
pop
dec
xlat
into
pop
push
dec
and
cltd
mov
call
out
mov
mov
ljmp
enter
lock
arpl
call
in
testb
jae
add
arpl
shrl
cmp
aam
adc
repz
ljmp
xchg
scas
lods
sub
test
mov
push
mov
jl
dec
add
sbb
dec
repz
push
dec
in
xchg
or
aad
or
inc
mov
push
loopne
mov
movsl
jnp
add
and
sbb
rcrl
in
scas
lcall
and
push
dec
jns
stos
jge
hlt
mov
iret
push
dec
stc
sub
jae
cmp
movsb
sub
xor
mov
fcoml
pusha
icebp
aam
mov
inc
add
pop
icebp
call
pop
lods
stos
sub
and
xorb
jns
lea
les
dec
adc
movsb
fcmovnu
stos
xor
lods
xchg
pushf
xchg
andb
ret
xor
push
out
cmpb
repz
flds
hlt
push
adc
mov
or
popf
jbe
lock
in
icebp
sbb
test
dec
out
jl
xor
pop
movsb
sbbb
mov
sbb
adc
loop
out
push
test
dec
icebp
sub
insb
rcrl
fnsave
xchg
mov
das
aad
cmp
inc
movsb
push
mov
add
jg
lds
mov
sub
imul
inc
int
scas
push
push
rorb
cld
fwait
inc
and
mov
jno
jb
xor
add
inc
jge
mov
imull
jmp
int
pop
subl
je
cmp
add
and
shrl
roll
cmp
xchg
adc
mov
stos
les
sub
xchg
orb
mov
aas
dec
sbb
xchg
mov
jle
stos
addr16
sub
pop
push
mov
cli
mov
mov
mov
pop
movsb
pop
rcl
add
nop
or
shr
jl
rcrl
lret
clc
sti
pop
test
pop
adc
fiaddl
fildl
cmp
icebp
mov
fimull
lea
inc
mov
into
ss
lret
inc
push
ljmp
cmpsb
lea
jo
sub
in
pop
lods
fcoms
imul
push
lods
pop
sbb
out
out
ss
ljmp
outsl
sub
sbb
pusha
scas
divb
push
or
mov
mov
push
aam
sbb
mov
push
sub
repz
push
sbb
cmp
gs
jne
daa
icebp
enter
add
cltd
mov
inc
repnz
mov
mov
scas
int
adc
daa
ss
and
adc
das
mov
mov
lea
cmc
push
ret
hlt
jg
push
xchg
add
mov
or
fistpl
mov
sbb
xor
xor
hlt
push
push
fistl
adc
fidivl
pop
dec
pop
mov
pop
mov
cmp
mov
dec
mov
lahf
imul
out
inc
into
gs
lock
jmp
cmp
arpl
jg
add
mov
in
jp
and
add
into
arpl
movsb
aad
les
pop
cwtl
or
mov
xlat
andl
out
rcll
xchg
test
lret
loopne
add
scas
subl
jns
mov
fistps
xor
lret
insb
push
xchg
or
mov
in
dec
sub
ret
cmp
mov
pusha
imulb
pop
aam
mov
xchg
ficoml
cmp
cmp
cmp
xor
and
fidivl
test
lods
sub
cmpsb
and
sub
or
js
xor
push
pop
and
sub
sbb
mov
mov
lods
repnz
out
std
arpl
test
or
mov
inc
fsubrl
pop
scas
push
imul
mov
aad
xor
lahf
dec
call
js
sbb
cmpsb
cmpsl
lret
aaa
int
std
xor
or
pop
jb
aas
mov
clc
stc
xor
les
test
pusha
push
xchg
stos
sub
or
adc
addr16
ret
mov
sub
inc
add
call
fisubl
ret
pop
div
sbb
das
inc
adc
repz
cmp
xor
inc
repnz
fcmovbe
aam
push
push
mov
lea
xor
enter
sub
insb
push
dec
push
sub
out
stos
adc
cli
insl
xor
jb
repnz
enter
mov
cmpsb
xor
mov
enter
sbbb
mov
dec
mov
mov
shrl
das
mov
rep
flds
add
pop
cmp
stos
fyl2x
sbb
jle
mov
jns
jne
das
stos
mov
incb
and
lea
and
inc
test
mov
jmp
xchg
pushf
xchg
mov
rorl
daa
add
ljmp
sub
movsb
test
inc
and
dec
jmp
and
stos
cs
aam
push
lea
lret
mov
mov
sub
lds
and
stos
or
add
icebp
notl
jb
push
jns
sahf
leave
gs
adc
mov
movsl
mov
jno
jle
pushl
in
and
sbb
push
ss
pop
jb
stos
repnz
xchg
pop
addr16
xchg
mov
faddl
outsb
mov
pop
out
ja
sbb
inc
push
cmc
gs
jo
lods
rol
fs
bound
popa
or
into
call
jg
xor
out
idivb
mov
cmp
data16
repz
fstpt
mov
lds
mov
movsl
ret
enter
pop
je
loope
sahf
push
pushf
rcll
aad
dec
pop
and
add
outsb
xor
aam
push
mov
jnp
push
scas
out
lea
jl
ror
lcall
scas
jo
mov
aas
bound
adc
fisttpl
outsb
movsb
pusha
mov
sbb
mov
xchg
hlt
mov
mov
mov
fidivs
and
pop
xchg
aas
mov
dec
fsubrs
jns
aad
pop
out
xor
push
repnz
dec
add
jo
test
xor
ret
ljmp
pop
fdivp
push
adc
movsb
fwait
icebp
xor
ss
loop
into
and
pop
aam
and
push
fadds
dec
add
icebp
out
in
lods
inc
xchg
xorb
repnz
cmc
loope,pt
stos
sub
addr16
xchg
push
cld
xchg
ja
xor
test
mov
adc
mov
xor
inc
mov
xchg
scas
cmp
pop
ret
insl
test
lret
shll
addl
sub
dec
pushf
insl
and
dec
data16
sbb
ljmp
cmp
xchg
pop
adc
jg
mov
xor
lods
into
movsl
inc
hlt
push
fcmove
push
cmp
or
pusha
paddd
xor
mov
sub
pop
sub
add
cwtl
flds
xchg
pop
aam
cmc
and
xor
xchg
push
repz
test
data16
std
sub
cmc
scas
jp
out
cmpsb
or
iret
ljmp
jnp
int
insb
mov
out
xorb
lods
sti
push
movzwl
xchg
in
adc
lahf
in
cmp
scas
lret
bt
mov
cmp
xchg
or
add
or
jp
rcl
sbb
test
cwtl
jnp
hlt
cmpsb
xchg
and
clc
fisubrs
sbb
and
push
jb
xor
cmp
sbb
mov
xor
mov
jnp
xchg
ret
iret
sti
sub
xorl
cmp
insb
cmp
movsb
test
and
xor
push
inc
add
add
dec
scas
adc
mov
cld
xchg
jecxz
aam
ret
out
pop
sahf
and
sub
insb
mov
push
mov
sub
jge
jo
in
pop
subb
or
push
pop
push
cs
sbb
adc
mov
add
cmpb
dec
in
mov
lods
sbb
sbb
cmp
push
sub
sbb
sti
sbb
mov
pop
fdivs
movsb
loope
iret
hlt
out
cwtl
repz
call
dec
test
lds
nop
cmp
in
jno
xor
push
mov
push
mov
adc
sbb
in
inc
dec
lods
xor
jne
sbb
sbb
xchg
sahf
das
inc
pop
mov
pop
push
shr
or
iret
cmp
push
lock
adc
loope
push
das
js
pusha
sahf
inc
lret
xor
insb
popf
inc
scas
notb
icebp
sub
push
aam
mov
mov
mov
mov
mov
pop
adc
xchg
movsb
das
cli
test
push
pop
mov
dec
int3
mov
dec
lds
clc
dec
into
cmp
pop
push
jl
loop
or
insl
mov
sbb
lcall
mov
pop
dec
xor
sbb
xchg
cld
push
dec
xchg
pop
imul
movsb
aad
arpl
dec
mov
in
sbb
movsb
mov
inc
call
mov
stos
in
and
or
fsubs
pop
addr16
fcompl
jg
and
movsb
add
aam
mov
gs
mov
push
popf
daa
cmc
dec
inc
call
hlt
mov
mov
mov
pusha
out
jo
das
scas
mov
out
push
pop
lcall
push
mov
stc
and
jnp
pop
aad
push
shl
dec
inc
jno
test
mov
movsl
add
jge
mov
insb
das
jns
jno
xor
xlat
inc
mov
and
les
scas
jge
setns
insb
adc
adc
scas
iret
mov
mov
ljmp
jns
in
jl
lods
aas
inc
and
lcall
xlat
imul
ret
push
push
sub
mov
dec
fbld
push
xchg
lods
adc
jb
jnp
push
daa
outsb
push
movsb
mov
dec
push
or
or
and
out
arpl
fdivl
mov
enter
imul
mov
lgs
inc
fisttpll
xor
mov
daa
sbb
xor
stos
jge
sub
daa
mov
insl
xor
sbb
les
mov
push
adc
aam
push
scas
into
mov
mov
push
mov
sub
js
hlt
in
jge
test
mov
stos
mov
cli
loop
movsb
cs
jnp
test
jbe
xchg
xor
xor
mov
cmp
cmp
jge
iret
pop
xor
pop
mov
add
out
aam
or
mov
sub
sub
mov
push
pop
mov
pusha
adc
sub
stos
sbb
sbb
sbb
cmp
cli
inc
pop
adc
dec
imul
adc
lds
rorb
mov
notb
sbb
jmp
inc
fdivs
test
adc
adc
xchg
push
mov
fisubrs
inc
mov
pop
movsb
ret
push
fcomps
call
pushf
lds
lods
dec
adc
and
jg
inc
movsb
sub
mov
out
mov
fisubrl
lret
lea
pusha
sub
mov
sbb
ljmp
daa
cmp
mov
sub
into
fldl
mov
lret
out
add
xor
cmp
push
notl
hlt
lods
jns
push
xchg
clc
sub
into
cmp
inc
stos
cmp
leave
aam
mov
movsb
jg
hlt
aad
les
mov
xchg
loope
or
cmp
movsb
cmp
sub
sub
xchg
aad
push
dec
xor
lcall
dec
pop
bound
stos
sub
cmc
push
adc
mov
pop
dec
fcoms
shll
mov
xor
cli
mov
xchg
adc
mov
setne
shll
jns
out
mov
in
sub
cmp
aad
iret
hlt
mov
sub
lea
push
mov
iret
stos
cmpb
mov
xchg
aam
mov
xor
call
movsb
inc
cmp
in
jnp
jb
cli
mov
xchg
sub
movsl
insl
pop
dec
dec
cmp
push
movsb
leave
add
es
pop
jb
cmp
xchg
push
adc
mov
subb
cwtl
mov
mov
cld
aas
clc
ret
cmpsl
mov
out
insb
jno
dec
and
push
or
xlat
cmp
mov
pop
cs
cmp
mov
cld
pop
mov
stc
push
fs
cmp
adc
add
adc
mov
out
into
push
sub
mov
shl
orb
jge
xor
add
mov
movsb
stos
add
lds
repz
sub
cli
scas
in
clc
sub
mov
mov
scas
mov
les
and
std
dec
dec
xor
fmul
js
adc
mov
xorb
xchg
fadds
shlb
out
mov
jno
sub
pop
sub
sub
sbb
stc
add
cmp
mov
daa
dec
int3
mov
mov
sbb
sub
fcmovu
dec
adc
cmpsl
push
out
inc
movsb
adc
ds
mov
mov
cwtl
leave
jmp
das
into
xor
shufps
sub
out
fisttpl
dec
imul
and
aad
push
out
or
cmp
out
iret
push
sbb
popa
add
mov
cli
fimuls
adc
cmp
inc
mov
jbe
shll
fnstenv
jns
int3
xor
dec
adc
xor
and
jp
cltd
decb
cmpsb
aaa
pop
push
push
and
rcl
arpl
stos
mov
adc
cld
push
xor
stc
jle
mov
mov
pop
in
jbe
xor
subb
imul
in
add
mov
in
outsb
pop
das
aaa
andl
xor
iret
test
mov
sbb
das
sbb
lods
ret
xlat
pop
stc
push
and
lcall
unpckhps
jo
xchg
mov
addl
inc
mov
mov
outsb
test
mov
or
test
ss
fnsave
mov
sbb
mov
lea
push
and
xor
pushf
and
dec
ret
scas
shll
cmc
jg
jbe
fisubl
push
cwtl
pusha
pop
cld
imul
sarb
call
adc
pop
mov
sub
sbb
test
pop
mov
pop
sahf
std
cmp
roll
dec
sbb
int3
movsb
xchg
jecxz
adc
and
mov
mov
lcall
xchg
movsb
test
arpl
cs
mov
fistps
stc
inc
notb
pusha
jp
or
mov
ror
sub
mov
add
pop
shlb
adc
mov
loope
adc
or
ficoml
adc
dec
sub
insl
scas
and
mov
add
add
pusha
popa
arpl
or
jge
andl
cmp
jno
fsubs
pop
sub
adc
adcl
push
mov
xor
sahf
std
dec
gs
or
mov
cli
aas
pop
fists
jecxz
and
imul
movsb
pusha
jl
xchg
dec
add
dec
sbb
and
jecxz
jno
in
xchg
jge
in
gs
sbbl
out
mov
sub
cmp
inc
outsb
les
sbb
dec
adc
jecxz
xor
fisttpl
push
sub
add
push
xchg
rcll
fimull
jge
lcall
scas
mov
sbb
sub
mov
jp
cltd
hlt
in
shl
int3
mov
mov
dec
ret
pop
jge
stos
add
sbb
sub
xchg
test
aam
sqrtps
das
iret
loop
pop
cmp
push
addr16
call
mov
jg
push
shll
test
sub
ss
aam
mov
mov
push
jmp
cmp
sbb
xor
mov
ror
mov
jp
jg
inc
bound
inc
jge
push
lods
movsb
xor
hlt
bnd
in
push
mov
push
dec
lods
mov
das
push
movsb
push
lahf
or
adc
push
adc
fidivs
shlb
dec
lds
dec
pop
in
out
adc
insl
jge
xchg
pop
or
and
xchg
pusha
push
in
fisttpll
ss
mov
push
and
shrb
xchg
mov
dec
adc
outsl
divb
xor
ja
dec
push
push
xor
iret
ffreep
out
mov
adc
dec
fildll
sub
ficomps
cmc
xor
bound
push
fwait
decb
repz
sahf
mov
cmp
mov
test
add
and
mov
jl
pop
dec
das
mov
cli
scas
xchg
cmp
loop
xor
inc
sbb
pop
inc
lods
icebp
aad
bound
sbb
inc
or
clc
icebp
fwait
inc
xchg
sbb
js
mov
mov
mov
pushl
cmpb
les
iret
call
pop
pop
xor
sbb
pop
test
and
push
pop
dec
push
jp
push
repnz
xor
jb
add
outsl
add
add
jo
mov
mov
jmp
movsb
sbb
pop
mov
loopne
sbb
cmp
sarb
fcomp
or
insb
adc
xchg
jmp
loope
scas
xor
sahf
call
xchg
gs
ds
push
cli
jns
aas
mov
dec
or
outsb
out
aam
daa
xor
jmp
loopne
loopne
iret
arpl
sbb
pop
xor
add
push
adcb
sbb
mov
movsb
imul
xchg
push
stc
xlat
xorb
gs
push
mov
insb
loope
mov
in
fcoml
ret
iret
jmp
push
subl
add
sub
mov
push
in
cmpsb
xchg
or
ds
mov
push
push
mov
mov
loop
mov
das
lods
lret
jg
addr16
ljmp
enter
jg
jmp
mov
sbb
shl
stos
lock
movsb
aad
sbb
xchg
lods
xor
into
fidivrs
ljmp
xchg
jne
mov
iret
les
mov
js
push
jne
dec
push
movsl
xchg
mov
mov
shlb
leave
loopne
xor
adc
and
mov
inc
ds
divb
bound
and
cmp
or
popa
add
inc
or
mov
jno
fs
xchg
es
sti
add
fbstp
lcall
cmp
mov
add
sbb
sub
add
adc
sbb
and
add
imul
rcl
xor
scas
std
inc
ficoml
imul
aaa
invlpg
cmp
mov
fwait
mov
int
lret
pop
sarl
sub
clc
push
mov
mov
std
and
icebp
je
sti
loope
sub
mov
js
xchg
adc
mov
inc
xchg
jno
out
xchg
cmpl
add
bound
bnd
bsr
push
jns
mov
add
mov
jb
mov
dec
test
mov
int
repnz
test
sub
sbb
repz
adc
inc
repz
notb
xor
jmp
outsb
fnstcw
mov
mov
pop
xchg
push
lods
lret
dec
sti
out
iret
lds
out
pop
cli
xchg
cmpsl
pop
push
pop
cmp
xchg
xchg
inc
xor
dec
cmp
mov
fxtract
pusha
fsts
cmp
daa
testl
pop
imul
rcl
jbe
xchg
lret
cmp
sub
cmc
repz
pop
jo
or
jge
mov
decl
cmp
dec
test
adc
ljmp
cwtl
cmpsb
cld
fwait
sbbb
or
in
xor
or
inc
jge
stos
jne
xorl
aad
push
dec
aam
out
jmp
pusha
jge
in
test
inc
adc
enter
mov
inc
shlb
js
lods
and
mov
hlt
push
loopne
lcall
lcall
mov
or
outsb
mov
mov
xchg
xchg
cmpb
sbbl
adc
push
iret
add
sub
fs
notl
or
repz
mov
les
mov
xchg
xchg
scas
sti
mov
add
pop
and
sub
les
repz
ja
jne
cmc
or
inc
in
cmpsl
test
rcr
jp
mov
lods
jb
mov
sub
andb
shl
mov
mov
lods
push
adc
loop
pop
fdivr
sbb
ret
icebp
mov
xor
cld
out
pushf
out
fdivrs
pusha
sub
dec
lods
dec
xor
cmp
cmp
pop
movsb
cmpb
add
and
mov
ja
xor
push
add
cld
adc
add
mov
jecxz
xlat
jge
mov
sbb
sahf
shl
pop
pop
js
pop
movsb
cmp
es
scas
sub
cmpsb
mov
jae
cmp
adc
dec
test
dec
mov
scas
lea
jns
sub
jge
lret
xor
mov
sbb
cmp
jmp
lods
sub
mov
dec
outsb
fwait
xor
aaa
cmp
repz
sub
test
pushf
mov
dec
clc
lds
fwait
addl
shl
and
sub
push
mov
popa
imul
adc
jns
lcall
std
dec
mov
hlt
push
fisubs
mov
jb
mov
push
xor
loope
ja
bound
xchg
mov
sbb
lcall
mov
loopne
jp
mov
xor
addl
rorb
mov
call
cmp
inc
pop
addr16
inc
sar
stos
xor
pop
mov
outsb
nop
mov
hlt
adc
iret
dec
out
push
mov
add
mov
insb
sub
dec
lea
pop
xorl
mov
pusha
xor
add
out
jae
fbld
incb
outsb
enter
imul
adc
cwtl
mov
sub
shlb
and
pop
les
cs
stos
push
mov
xor
imul
ljmp
mov
mov
jge
pop
jg
adc
pop
insl
mov
shll
adc
fcmovu
dec
mov
dec
jae
dec
jmp
in
mov
inc
shlb
fidivrl
fs
std
or
iret
mov
mov
movsl
call
rcll
or
sbb
je
mov
cmpsb
sbb
repnz
fs
stc
sbb
ljmp
mov
les
daa
inc
xor
loopne
xor
jno
or
mov
mov
mov
scas
xor
xor
outsl
sbb
call
scas
pop
jno
out
dec
lea
ja
mov
cmp
add
mov
je
mov
mov
mov
or
fsubl
scas
lcall
jg
jae
pop
cld
xor
addr16
xor
or
sub
xor
xor
push
ss
movsb
test
cmpl
xor
jp
out
inc
outsb
mov
mov
int
cld
lods
cmpsl
lock
iret
lcall
mov
dec
into
xchg
inc
jno
outsb
add
in
push
xlat
jl
test
cmp
movsb
cmp
jb
push
adc
das
loopne
inc
fwait
add
jge
lret
sbb
jo
jp
xchg
mov
popl
jmp
mov
dec
divl
inc
dec
push
ljmp
in
pop
jbe
lcall
popa
leave
lret
in
sub
lods
rclb
int3
lock
cmp
test
incb
mov
sbb
lods
fstpt
gs
and
movsb
loop
dec
pusha
into
xchg
mov
xchg
cmpsb
mov
jge
testb
mov
mov
das
dec
cmc
sub
insb
aad
xor
outsl
or
jge
rclb
fidivl
lods
sub
mov
shrl
stos
dec
lock
gs
jl
aas
test
iret
jmp
xchg
adc
rcrb
aam
into
sub
fdivrp
mov
add
sub
mov
negl
ret
xchg
outsb
scas
adc
mov
fucomp
mov
mov
je
sbb
in
push
test
xchg
inc
sub
xchg
fucomi
push
xor
dec
aad
int
movsb
push
fsubp
pop
shrb
lcall
leave
mov
mov
in
xor
pushf
push
pop
push
sub
xor
jmp
jae
fcmovnbe
jns
dec
std
mov
fcomps
lret
test
jb
shll
addl
mov
jmp
ja
adc
cmpsb
int3
fstpl
loope
scas
lods
in
adc
cwtl
xchg
push
jo
push
movsb
jbe
ljmp
vmread
adcl
mov
scas
jmp
in
jnp
idivb
pop
sub
test
dec
sub
mov
mov
xchg
xchg
movsl
cld
dec
ss
mov
add
repnz
aad
mov
shr
iret
lds
mov
rcrb
insl
mov
lods
div
dec
mov
and
pop
stos
enter
icebp
ficompl
xor
push
xchg
loop
mov
movsb
xchg
bound
fisubrs
stos
out
and
sbb
dec
cs
call
jle
add
jmp
pusha
jae
addb
xchg
mov
data16
shlb
movsb
inc
xor
in
cmp
icebp
repz
dec
les
jno
pop
jb
mov
jne
roll
dec
dec
sub
push
ret
xor
inc
rolb
jne
xchg
sub
ss
pop
inc
or
cmpsl
mov
mov
or
jae
inc
jns
in
es
stc
lahf
ss
imul
push
gs
cld
lds
xchg
lret
xchg
xchg
fmuls
push
dec
jg
js
popf
add
adc
out
movsb
cmp
jp
repnz
movsb
iret
gs
cmovge
xchg
insl
inc
es
cmp
mov
pop
aaa
mov
mov
fcomps
lock
subl
pop
in
shrb
push
stos
shr
movsb
bound
decb
mov
xchg
xor
cli
mov
mov
ret
rep
inc
icebp
jge
cmp
push
cmp
xor
ds
movsb
imul
push
lea
mov
xchg
stc
push
fstpt
mov
and
sbb
jbe
dec
in
mov
ja
jae
inc
lahf
or
int
outsb
mov
dec
shlb
outsl
push
mov
xor
xor
and
fxch
add
pushf
movsb
inc
push
jae
aas
cmp
sub
xchg
and
shrl
imulb
lock
add
cmpsb
je
push
lahf
or
or
jp
mov
xchg
loopne
inc
lods
cmc
std
ss
stc
stos
call
gs
cli
dec
add
add
rclb
aad
xor
cmc
pop
pop
xor
jp,pt
psubsw
jbe
fabs
xchg
movsb
ljmp
jo
xor
dec
xchg
sbb
sbb
mov
scas
mov
xchg
aaa
dec
add
jno
sbb
jns
insl
jb
and
xor
cmp
outsb
subl
xchg
iret
lds
lcall
cmp
scas
cld
mov
shll
sub
push
enter
je
add
mov
xchg
add
mov
xchg
cltd
push
out
jmp
sbb
mov
aam
inc
mov
cwtl
jbe
xor
stos
cmc
mov
rcll
outsl
jecxz
aad
jge
repnz
stos
adc
add
imul
loop
mov
push
leave
jbe
xor
cmp
xor
push
ds
subl
icebp
pop
jnp
loope,pn
pusha
adc
mov
popf
mov
aas
repz
fildll
repnz
or
les
pushf
mov
lahf
xchg
rcr
jg
cwtl
mov
pusha
jb
xchg
push
movsb
pop
aad
arpl
ficoms
js
mov
neg
xchg
nop
mov
ret
imul
test
and
mov
fdivrs
mov
mov
mov
and
jae
movsl
add
add
jl
pop
jmp
pcmpeqd
les
fists
sti
outsl
lds
sub
call
sub
xorl
xor
pop
add
xor
pusha
fimuls
es
les
cmp
add
aad
out
jle
mov
fdivp
call
push
fcmovbe
idivl
dec
xchg
mov
addl
das
cmp
stos
mov
pushf
and
push
mov
stos
pusha
addb
xchg
les
scas
and
adc
arpl
jb
in
and
lods
loopne
and
xchg
pop
adc
push
pusha
cld
dec
sarl
pop
mov
inc
cmp
mov
imul
or
add
cmp
aad
mov
sub
mov
and
insl
jae
mov
mov
or
lock
mov
mov
cmpl
pop
dec
sub
sub
rorl
inc
fistpll
jae
fcomps
andl
shll
pop
dec
adc
maskmovq
divl
enter
add
lcall
repnz
clc
pop
mov
dec
mov
xchg
shlb
mov
ret
xor
ror
inc
sub
aam
jae
jns
cltd
and
or
sbb
pop
scas
fnsave
fnstcw
mov
syscall
hlt
sahf
push
gs
popf
call
aam
xor
mov
mov
aaa
or
lcall
xchg
unpcklps
jbe
mov
jo
pop
loope
xor
lcall
lods
xor
cmp
push
adc
mov
lods
jns
fildll
cmp
add
ljmp
dec
push
jge
iret
adc
inc
movsb
or
pusha
dec
dec
rep
or
ss
mov
cli
sbb
sbb
and
pop
rsqrtps
lea
stos
push
loope
mov
sbb
out
or
icebp
inc
sub
sub
test
push
dec
mov
aad
test
fmulp
mov
xchg
movsl
xchg
push
fwait
js
cmp
mov
xchg
into
and
movsb
outsl
dec
inc
fsts
pop
jp
dec
das
arpl
push
jg
mov
das
jno
je
lods
imul
push
pop
xchg
push
adcl
fcmovne
xor
mov
dec
call
dec
movsb
sbb
mov
je
sbb
popf
mov
xor
adc
enter
cmp
jecxz
sub
test
and
pop
fnstsw
outsl
insb
mov
sub
jno
sub
sbb
outsb
xchg
add
and
push
into
sub
movsb
repz
insl
rorb
push
popf
stos
test
cmp
xchg
mov
mov
mov
orb
push
movsb
sub
les
and
aam
imul
pop
mov
xor
sbb
popf
sub
jb
int3
xlat
mov
mov
jecxz
stos
mov
dec
ret
sahf
mov
test
stc
push
gs
lods
add
data16
pop
xchg
mov
fdivrp
dec
fwait
movsb
jbe
sub
jge
outsl
in
je
jno
mov
inc
jns
adc
mov
icebp
pop
inc
inc
in
or
in
dec
xor
in
dec
idivl
cmpl
or
sbb
push
add
xchg
into
dec
dec
mov
push
sbb
sub
mov
outsb
mov
dec
adc
add
inc
outsl
push
dec
inc
inc
mov
cwtl
mov
adc
scas
das
mov
int
js
jae
adc
xchg
cmpsb
jns
dec
addb
adcl
push
or
inc
mov
push
aaa
call
mov
in
pop
lods
repnz
pusha
call
sub
xchg
lcall
add
ja
mov
movsl
and
inc
arpl
xlat
dec
out
add
jp
pop
or
mov
push
pushf
pop
mov
adc
fcomip
xchg
xor
popa
mov
inc
aaa
sub
shlb
xor
cli
lods
or
jmp
testb
xor
clc
jo
push
insb
dec
fs
sub
pushf
push
xor
bound
fisubl
push
and
adc
adc
cmp
inc
arpl
cmp
pop
push
andb
lahf
xchg
in
fsubrs
arpl
mov
rcr
pusha
sti
mov
mov
adc
ret
and
movsl
xorb
and
ret
negl
mov
stos
mov
dec
pop
pop
outsl
subb
mov
jno
ret
mov
xor
orl
jbe
add
aas
bswap
in
push
adc
mov
fisttps
cli
ret
stos
mov
lret
notl
bound
test
pop
adc
lock
sub
jns
rol
pusha
jnp
cmp
dec
out
add
ret
mov
mov
mov
scas
jae
lods
sarl
mov
cmp
loopne
ret
testb
mov
sub
scas
movsb
shll
pop
lahf
mov
pusha
fiadds
push
jbe
pop
pop
pushf
pop
movsb
scas
call
lds
call
movsb
xor
xor
repz
arpl
xchg
mov
inc
sbb
jbe
repnz
lcall
mov
jge
inc
xchg
push
pushf
mov
repz
cld
xchg
jns
cmp
xor
lods
pop
insl
mov
or
ret
scas
mov
xor
add
jg
or
mov
xchg
pusha
sub
and
stc
je
sub
lock
and
arpl
movsb
push
mov
push
inc
and
push
or
pop
xchg
and
into
jbe
adc
adc
xorl
test
sub
fcoml
jle
lods
aaa
dec
xlat
push
daa
sub
dec
enter
jbe
sub
int
pusha
mov
xor
imul
and
push
or
sub
sbb
jne
xchg
imul
jp
je
mov
push
pop
data16
sub
sub
lods
jmp
push
sub
cwtl
adc
or
jge
out
pop
shll
or
add
sbb
push
jl
mov
lcall
rol
mov
es
outsl
ret
mov
cmp
pop
mov
jge
push
test
cs
in
fldcw
into
cmpsl
mov
push
adc
lcall
fwait
outsl
inc
sub
ret
movsb
hlt
loope
aad
xchg
cltd
aaa
scas
icebp
fistl
imul
cmp
cld
xchg
adc
cs
lods
scas
mov
pop
push
push
xor
mov
add
out
aam
mov
or
cmp
sbb
jb
frstor
fcmovnu
mov
xor
test
test
xorl
ljmp
fcomi
fldenvs
test
xchg
sub
jb
and
mov
cmc
mov
sub
lods
mov
pushl
int3
lahf
fstpt
sub
in
and
cs
imul
jmp
movsb
and
inc
mov
xor
addb
push
push
int3
imul
enter
sbb
sub
push
or
hlt
mov
pushf
push
shrb
addr16
pushf
cmp
dec
dec
insb
sbb
ljmp
sbb
push
bound
movsb
dec
mov
push
pop
inc
cwtl
mov
xchg
inc
jno
ljmp
int
repz
jno
js
mov
das
mov
call
dec
mov
in
lea
cltd
icebp
stos
into
mov
lea
cwtl
dec
cmp
subb
xor
out
add
nop
sub
lret
cmpsl
sub
mov
and
lods
test
and
popa
dec
sbb
sbb
lds
psubb
and
jb
lcall
mov
mov
int
out
xchg
repnz
jmp
dec
sti
sub
sub
dec
xchg
outsl
jl
mov
xchg
jae
push
xchg
adc
lcall
and
sbb
lods
leavew
or
bts
fistpll
xchg
pop
jno
ret
pop
xchg
shlb
cmp
fadds
lds
cli
mov
xchg
cmc
jnp
pop
lods
add
test
xor
cmp
xor
pop
pop
sbb
ret
cmp
js
mov
lret
int3
sub
pop
adc
test
jmp
fldenv
fadd
inc
push
pop
call
cmp
jbe
pop
testb
adc
nop
xchg
mov
mov
sub
clc
jecxz
orb
mov
cmpsb
scas
dec
xor
cmc
stos
xchg
jo
mov
or
jl
out
jno
les
subb
insb
push
and
mov
mov
push
leave
inc
in
das
lcall
loope
adcl
loope
test
push
js
mov
aad
push
mov
and
jmp
loop
pusha
sub
inc
mov
repz
movsb
jge
insb
jg
cmp
add
mov
js
das
lds
aaa
sahf
aas
jne
inc
sub
fisubs
fsqrt
xor
inc
cmp
cmp
mov
sub
push
adc
mov
neg
cltd
adc
ret
inc
enter
and
mov
push
mov
sbb
mov
out
push
sbb
or
in
iret
stos
inc
cmpsl
jns
test
mov
mov
push
mov
les
mov
and
sub
sub
cs
in
cmp
xor
ja
ds
mov
dec
cmp
mov
add
arpl
sub
adc
dec
mov
jecxz
js
ljmp
cmp
push
pusha
dec
call
cli
sbb
sub
mov
mov
inc
xchg
movsb
push
scas
and
aam
add
lods
adc
js
add
or
mov
dec
pop
xor
out
and
mov
xchg
pusha
loopne
jbe
push
pushf
nop
out
out
out
insb
cmp
insl
popf
mov
sbb
dec
ds
aam
mov
jg
cmp
ja
xor
mov
add
and
lods
jno
addr16
mov
es
mov
cli
mov
ret
cmp
xorb
fdivrl
adc
into
fsts
jb
cmpb
repz
cld
sub
sbb
mov
pusha
cli
push
mov
fsubs
rcrb
mov
xchg
push
pop
repz
das
sbb
mov
ds
or
insl
scas
fsubs
bound
xchg
rolb
sbb
sub
out
sahf
mov
xchg
popa
xchg
inc
or
lock
into
inc
out
jmp
aaa
hlt
adc
pop
cwtl
pushf
nopl
mov
inc
popf
mov
or
cmc
mull
mov
out
push
lock
aam
add
and
loopne
push
movsb
jae
fadd
ljmp
iret
orl
xchg
in
or
or
scas
cs
enter
call
aam
jne
push
add
cwtl
jno
sbb
mov
cmpsl
sub
repz
cwtl
dec
sbb
int3
insl
popf
mov
test
inc
push
mov
ljmp
int
dec
dec
inc
xor
mov
aam
dec
popf
push
jae
les
pop
mov
lret
ret
popf
adc
push
pop
push
movsb
mov
dec
sub
fcos
xor
ret
stos
repnz
sub
push
ljmp
movsb
pop
mov
in
mov
andb
notb
mov
xor
lods
or
popf
in
lcall
or
arpl
andl
push
fwait
dec
mov
pusha
mov
and
inc
mov
add
xor
push
mov
fisttps
outsb
mov
cmp
sub
jns
mov
push
and
movsb
cmp
mov
add
stos
or
insb
mov
or
arpl
test
push
lea
adc
xchg
and
icebp
cmpsl
mov
jb
mov
add
subb
mov
inc
push
dec
inc
mov
mov
enter
inc
gs
mov
dec
push
jl
jg
movsb
mov
cmpsl
addr16
cmp
xor
dec
roll
or
push
push
xor
dec
xchg
xor
fmull
in
hlt
jb
fs
cmpsl
test
mov
cmp
mov
jmp
hlt
inc
cmpb
int3
xchg
push
mov
sub
xor
psubq
out
dec
cmpsb
pushf
arpl
outsb
mov
push
movsb
in
or
jmp
pop
pusha
sub
in
push
mov
into
pusha
xor
outsl
pop
ficompl
sub
fcomps
pop
daa
fbstp
jge
out
cmp
loope
jns
pop
dec
cwtl
dec
sub
lret
shl
mov
mov
adc
cmc
and
aaa
mov
outsl
mov
xchg
and
cmp
mov
lods
out
mov
xlat
aaa
jl
push
fisttpl
mov
fsubrl
inc
inc
call
xchg
cld
imul
dec
dec
mov
into
iret
lcall
mov
adc
mov
mov
mov
ds
adc
adc
out
mov
mov
and
sahf
mov
lock
ds
aad
shrb
sub
shr
inc
push
xchg
pushf
test
pop
ljmp
sahf
in
mov
push
pushf
xchg
push
pop
ret
movsb
xor
mov
mov
out
pop
xchg
in
cmc
inc
dec
xor
cmc
pusha
movsl
notl
jo
xchg
cld
and
mov
push
pop
repz
jmp
push
and
xchg
add
sarb
into
ret
movsb
push
in
xchg
test
testb
negl
test
pushf
idivb
or
jns
inc
or
out
lods
lret
sbb
scas
dec
loope
mov
clc
mov
and
int
xor
mov
and
enter
sbb
int
or
clc
pop
or
lods
ret
loopne
stos
ror
cmp
es
test
sub
cwtl
daa
mov
shll
cmp
lret
and
movsb
dec
xchg
mov
subb
in
sub
or
aad
jmp
mov
push
cmpsl
addr16
mov
lods
push
outsl
mov
sbb
shlb
dec
andl
scas
movsb
and
dec
push
mov
ds
imul
out
and
pusha
lahf
inc
inc
pop
fcmovnbe
decl
data16
or
test
cmp
push
push
xchg
sbb
movsb
hlt
cmp
lcall
mov
push
fwait
push
inc
bound
xchg
int3
fbstp
lods
adc
xchg
dec
clc
sub
stos
adc
pop
pop
rorb
mov
bswap
mov
shlb
sbb
ss
lods
sti
lods
fs
or
aas
movsb
sub
and
cmc
out
call
movsb
add
mov
dec
movsb
ficomps
mov
imul
lods
and
or
inc
cli
stos
cmpsl
push
xchg
add
enter
shll
ja
sbb
shll
jnp
pop
jne
xor
push
sbb
shlb
mov
enter
out
cli
mov
cmp
pusha
jb
sbb
gs
push
jge
arpl
sbb
push
movsb
icebp
dec
hlt
mov
sti
movl
sbb
filds
xchg
add
mov
loop
and
mov
cmp
int3
in
pusha
add
push
xchg
repnz
test
icebp
inc
adc
mov
aam
cmp
xchg
mov
xor
mov
push
cltd
jle
jno
stc
xor
sub
into
hlt
mov
mov
mov
pusha
hlt
add
fs
xorb
xor
sbb
add
cmpsl
xchg
pop
in
popf
rol
sub
aas
cmp
inc
push
sbb
imul
push
dec
xlat
or
mov
loope
nop
and
insl
lods
cmp
loope
enter
js
fidivrs
rcpps
lret
add
add
imul
pop
push
inc
jae
sbb
dec
es
inc
and
push
mov
xchg
sarl
xchg
icebp
or
dec
fcoms
cmp
mov
sbb
mov
fwait
and
bound
lods
adc
push
push
sbbl
fistps
fsubs
cli
sbb
mov
dec
jb
ret
xor
hlt
cmp
cmpsb
cmpsl
movsl
cld
sub
lods
mov
and
cwtl
jl
pop
fs
jg
cmc
es
sarb
add
int
xchg
and
es
adc
push
mov
repz
dec
lods
push
lods
fists
shlb
dec
icebp
dec
cld
cld
sub
iret
ljmp
cmp
aad
mov
sbb
inc
inc
mov
scas
fisubrs
or
inc
add
inc
int3
in
sbb
in
add
xchg
shl
cmp
mov
mov
cwtl
in
pop
ret
shr
mov
out
popf
fwait
adc
dec
push
and
inc
sbb
cmp
scas
sub
rcrb
xor
push
fstl
lods
pop
mov
sbb
in
imul
lcall
cld
fwait
out
mov
xor
lret
aad
cld
sub
hlt
ljmp
pushw
stos
jb
push
pop
mov
bound
mov
pop
stos
icebp
cmp
push
jle
and
add
lods
mov
aam
sahf
insl
das
inc
mov
jl
adc
cmp
jmp
ret
iret
hlt
idivb
mov
inc
lds
rcrb
xchg
jns
sub
dec
or
rorl
push
lds
into
mov
das
xor
out
iret
cmpsb
mov
fadds
gs
fisubl
jle
mov
dec
aam
inc
push
insl
cs
pop
pop
cli
pop
xchg
add
jno
sbb
jle
cmp
mov
xchg
sbb
int3
sub
adc
sub
aam
sbb
mov
sar
cmp
adc
lea
mov
sbbb
mov
mov
outsl
sub
dec
push
daa
icebp
ljmp
mov
push
das
sbb
push
daa
push
push
insl
xor
pop
scas
pop
add
sbb
ja
out
mov
outsl
fcompl
dec
xor
xchg
pcmpgtw
jl
subb
xchg
mov
mov
xchg
push
shll
fldcw
mov
and
adc
test
and
movsb
mov
scas
jbe
jns
dec
jge
inc
mov
hlt
addb
and
rorl
dec
movsb
jl
sub
xchg
repnz
add
add
lods
pop
sub
xlat
add
pop
lss
adc
mov
leave
in
ret
xchg
outsb
shrb
lret
cmovge
call
in
xor
icebp
push
sub
or
sub
imul
stos
sbb
loope
pop
inc
lcall
gs
mov
cmc
arpl
sub
sub
inc
je
sub
adcl
stc
sar
pop
clc
test
adc
ror
lcall
jne
mov
leave
mov
lcall
inc
pusha
inc
orb
loope
mov
les
add
push
sti
insb
cmc
dec
loope
fimuls
push
cmpsl
shrl
mov
cltd
xor
mov
ljmp
or
mov
leave
xor
push
dec
aas
sbb
mov
das
or
rol
or
or
test
inc
repnz
lcall
mov
and
jno
or
dec
scas
xor
lods
rcrl
sbb
sub
add
mov
les
pop
xor
shrb
cmp
push
mov
ss
ror
ljmp
scas
xchg
or
xor
jmp
mov
call
movsb
mov
repz
or
mov
filds
sbb
pop
rclb
popf
push
sub
movsb
sub
aam
jnp
xorb
fidivs
pop
roll
dec
add
pop
int3
cmpsl
in
xor
sbb
pop
aam
xor
arpl
loope
data16
or
pop
jge
adc
dec
rclb
movsl
xor
lods
xchg
mov
nop
pop
testb
mov
lods
add
or
repnz
pop
or
sahf
aaa
and
pop
mov
mov
ret
mov
leave
aaa
push
xchg
mov
dec
push
sub
xor
and
pop
icebp
frstor
mov
data16
add
aaa
dec
inc
xor
mov
xchg
out
mov
add
lock
sub
dec
lods
outsl
mov
in
adc
es
es
sbb
jmp
push
jge
xlat
insl
sbb
cmpb
mov
pop
inc
test
es
adc
scas
jbe
and
cmp
cs
pop
aas
push
xchg
cs
loopne
push
mov
and
jae
mov
inc
cmc
and
sbb
mov
jle
dec
out
fmull
scas
aam
xchg
or
gs
and
sub
mov
mov
rcrl
in
jnp
ja
sarb
jmp
push
repz
aad
fimull
cld
scas
out
fiaddl
popf
inc
mov
nopl
add
sub
sti
sub
ret
lock
pop
js
or
nop
cmc
imull
cli
or
dec
movsb
xlat
lods
sub
pop
xor
rcl
pop
mov
negb
inc
lcall
add
ja
dec
mov
lds
rol
call
inc
pop
sub
les
insb
jne
mov
pusha
shrb
or
push
subb
add
movsl
pop
and
movsb
mov
bound
gs
das
popf
movsb
call
das
cmp
testb
gs
dec
hlt
cs
jmp
pop
mov
cs
cmp
ds
push
outsb
fbld
xor
fwait
jns
inc
dec
pop
jp
subb
add
inc
xchg
mov
mov
das
mov
stos
dec
xor
cmp
mov
fdivs
cmp
scas
mov
pop
sub
jns
and
pop
lcall
xorb
add
cmp
mov
inc
loope
adc
dec
jbe
movsb
lahf
mov
shl
sahf
sbb
mov
ret
jle
cltd
pushf
or
out
mov
pop
int
push
xchg
mov
mov
inc
bound
or
xchg
cmp
mov
xor
mov
cmpsl
mov
repnz
subb
push
mov
cwtl
mov
ret
lea
dec
mov
push
xor
movsl
test
int3
hlt
push
leave
gs
fldcw
cli
xorl
inc
lret
outsl
ror
pusha
dec
jmp
cwtl
int3
shll
mov
stc
pop
ja
jb
lea
hlt
dec
sub
pop
ds
jne
jnp
push
pop
iret
aas
pushf
in
enter
icebp
inc
lock
or
sahf
dec
ljmp
or
and
mov
sub
insl
stc
dec
repz
sub
ret
movsb
pop
test
lcall
add
inc
enter
jle
xchg
loope,pt
lret
test
jae
push
pop
hlt
aad
mov
add
push
pop
push
jbe
mov
mov
dec
lds
aad
mov
gs
mov
das
aam
in
adc
mov
ret
dec
ja
mov
sbbl
in
fidivs
push
mov
dec
cmpb
adc
mov
sbb
stc
test
in
xor
sbb
ficoms
mov
jo
mov
int3
pop
mov
cmpsb
ja
into
cmc
and
push
data16
sub
xchg
iret
pop
movsb
add
add
mov
in
js
and
jb
movsb
jb
fsubs
movsb
in
push
or
aaa
insb
or
cmp
mov
bswap
xlat
adc
adc
aas
pop
or
lea
je
in
push
jbe
and
pop
and
sub
aad
mov
ja
sbb
hlt
fdivl
jmp
jae
pop
adc
in
xor
ficompl
push
lods
xchg
shrl
and
inc
lcall
mov
lock
mov
dec
cli
mov
iret
pop
lcall
pop
mov
or
jbe
adc
jae
notl
mov
xor
or
rcrb
shll
adc
xchg
lods
pop
outsb
jae
lods
push
cld
xor
pop
mov
fldt
adc
dec
sbb
xchg
xor
lcall
out
in
fidivl
aad
fisttpl
jmp
adc
xor
bound
pop
xor
out
fstps
movsb
into
cwtl
daa
jmp
ss
mov
popa
dec
mov
lods
xor
pushl
xor
jns
and
repz
int3
push
mov
dec
xlat
sub
stos
scas
cmp
pushf
push
std
adc
lea
cwtl
mov
insb
movsb
rolb
inc
mov
into
or
lea
adc
aad
cld
jle
loope
add
and
aaa
repnz
adc
movsl
push
mov
mov
adc
add
popf
add
and
pop
push
pop
xor
mov
pop
icebp
push
xor
cmp
pop
mov
dec
sub
into
mov
jb
pop
rcr
in
fstl
push
test
add
imul
arpl
lods
push
cmpsb
out
fcompl
xor
push
pop
xchg
ljmp
es
outsl
jb
pop
movsb
mov
popf
fdivrs
jns
add
insl
rcrb
jl
aam
lods
sbb
add
and
outsl
movsb
pusha
out
jbe
xlat
jae
fs
cmp
cwtl
cmp
sbb
push
jbe
dec
adc
dec
xchg
or
scas
mov
sub
movsb
or
jmp
push
mov
adc
imul
mov
gs
adc
pusha
xchg
in
std
sbb
insb
pop
sbb
mov
mov
stos
xchg
js
outsl
or
pop
idiv
je
cmp
sub
cmc
popa
xor
push
cltd
mov
xchg
xor
xor
test
addl
les
leave
jp
js
mov
cmp
pop
loop
adc
sbb
push
ljmp
dec
cmp
pop
into
repz
fcomip
mov
movhps
mov
mov
aad
jmp
cmc
xchg
push
and
pop
push
push
add
pop
fidivl
jns
fcomi
in
andl
fsubrl
xchg
sub
xchg
icebp
daa
inc
or
or
les
dec
sbb
or
fs
jo
ljmp
fsubl
lea
mov
ret
leave
dec
bound
in
lcall
popa
add
jne
lds
divl
xchg
test
enter
fdivrs
lods
jne
lret
pushl
stc
insb
inc
clc
call
push
pop
xor
jnp
shll
lods
mov
pop
shlb
popa
je
lahf
fdivs
dec
stos
add
sub
sub
lret
mov
mov
xchg
cli
setl
mov
stc
das
xchg
mov
pusha
mov
dec
pop
mov
xor
fildl
cmp
pop
aas
int
movsb
pusha
in
push
movsb
mov
pop
lcall
nop
call
jnp
mov
cmc
inc
xchg
jbe
sbb
dec
imul
nop
mov
js
xchg
insl
push
int3
inc
xchg
pop
in
das
inc
lea
or
xchg
sub
call
scas
xchg
mov
mov
movsb
cli
mov
sub
jg
aad
jae
fnstcw
es
inc
adc
xchg
out
mov
shrb
fists
and
mov
jne
aam
jno
cmp
push
cmp
mov
faddl
or
test
add
push
fidivl
hlt
jge
fidivl
sub
mov
insb
ljmp
scas
inc
cld
into
mov
jbe
jge
outsl
pop
push
xor
sub
mov
pop
adc
testl
ljmp
pusha
and
inc
push
mov
pop
xchg
pusha
outsb
dec
inc
sub
hlt
gs
into
sbb
xchg
rclb
and
and
xor
inc
insb
hlt
int3
mov
shr
xor
in
ds
movsl
xor
add
lods
pop
mov
xchg
mov
arpl
xor
pop
into
cmp
fldcw
lods
cs
and
sub
xor
pop
sbb
xchg
ljmp
mov
imul
les
shrl
sbb
movsb
mov
sub
les
jo
adcb
xchg
fnsave
test
fdivr
fs
mov
mov
inc
jl
and
add
lea
inc
lcall
loope
xchg
jae
pop
jno
ret
sub
pusha
sbb
adc
push
jp
test
push
xor
cli
enter
adc
iret
leave
das
mov
scas
xor
jge
lods
mov
mov
cmp
jbe
jno
lret
aas
mov
cs
cli
mov
mov
jl
sub
lea
jnp
mov
sbb
cmp
aam
lahf
cmpsb
inc
add
or
sbb
push
in
das
xchg
mov
leave
cmp
sbbl
outsl
xchg
sub
or
sbb
mov
jge
inc
xchg
enter
mov
repnz
dec
imul
adc
clc
jns
xor
mov
push
ret
mov
adc
ret
adc
jge
jne
dec
jge
cld
sbb
in
lea
in
ss
and
not
les
inc
outsl
lods
nop
add
cld
mov
sti
adc
leave
adcb
push
jge
lahf
faddl
add
dec
jmp
jns
inc
xchg
mov
push
jl
movsl
and
mov
repnz
fs
cmp
add
lahf
std
xchg
ret
adc
adc
mov
jnp
arpl
repz
repz
or
mov
lods
iret
jnp
cmp
add
lcall
cmpsl
pop
jne
loopne
xor
dec
add
inc
fisubrl
xchg
out
mov
addr16
push
aas
or
mov
lock
enter
cmpsl
mov
data16
fidivs
imul
xchg
xchg
jl
dec
add
lods
xchg
add
popf
ret
cs
mov
adc
std
push
push
mov
movsb
ret
pusha
mov
push
fwait
xchg
xchg
inc
xor
xchg
lea
imul
sahf
sbb
test
mov
outsl
dec
cmp
lcall
lahf
pop
sub
filds
xor
cs
mov
enter
push
outsl
mov
xchg
iret
mov
or
nop
sub
mov
popa
push
push
adc
xchg
cmpb
and
pop
sarl
movb
stc
push
xor
mov
push
popa
add
xchg
lock
mov
adc
stos
rolb
test
enter
ljmp
mov
arpl
aad
push
lods
mov
fcompl
sbb
loopne
call
js
jne
lock
cmp
mov
dec
and
rcl
pop
xacquire
inc
frndint
xor
mov
sub
adcb
popf
mov
into
shl
out
mov
mov
mov
stos
pop
pop
push
int3
mov
mov
lret
pusha
cli
xchg
and
push
add
sub
icebp
fadd
addr16
call
cs
out
repnz
js
xor
mov
jno
push
push
mov
stos
push
icebp
lcall
es
pop
mov
lea
subl
nop
insb
das
adc
or
mov
and
hlt
jmp
sub
test
repz
jns
pusha
push
mov
xorb
jbe
cmp
jae
mov
outsb
pop
andb
inc
movsb
or
mov
push
test
xor
lret
ja
or
xchg
addb
xor
data16
pushf
in
fmuls
scas
jns
in
js
repz
push
mov
jge
and
push
push
arpl
cmpsb
pop
into
inc
out
mov
mov
sub
cmp
mov
push
leave
cs
lods
iret
add
mov
mov
add
nop
sbb
add
sbb
gs
pushl
add
lods
test
mov
xchg
pop
popa
and
rep
push
das
dec
test
mov
xor
fs
fisubrs
hlt
jb
dec
jb
js
add
add
jae
mov
fisttpl
jle
mov
inc
addr16
mov
sub
dec
addr16
shll
dec
xchg
dec
xchg
imul
ja
lds
aam
arpl
movsl
push
add
sbb
dec
and
jne
jb
cld
mov
in
iret
test
push
sbb
and
je
adc
cmp
daa
loope
aad
int3
arpl
je
test
inc
repnz
insb
and
adc
jb
add
cltd
push
hlt
or
les
fldl
push
mov
pop
mov
mov
inc
stc
lods
cmp
xchg
adc
and
adc
sbb
mov
adc
or
movsl
das
or
addl
cmpsb
les
lret
mov
cli
mov
cmpsb
mov
or
dec
hlt
cmp
aam
pusha
mov
mov
pusha
mov
xchg
jae
fwait
dec
jns,pt
inc
mov
hlt
adc
jne
lods
mov
call
and
jno
testl
adcb
decb
sub
sub
jnp
inc
push
ljmp
mov
mov
push
or
shlb
sbb
mov
xor
push
pop
outsl
lcall
outsb
dec
mov
addl
jp
gs
subb
jns
push
fmul
mov
mov
cld
js
sub
push
ret
stos
mov
rcrl
test
out
mov
mov
jmp
jmp
outsb
fadds
mov
mov
xor
lods
inc
sbb
sbb
ss
jge
xlat
scas
sbb
in
jb
cwtl
adc
add
add
jg
mov
rolb
inc
inc
rcrl
roll
icebp
in
mov
sbb
jmp
mov
jp
xchg
cmpsb
push
shll
adc
adc
stc
scas
cmc
rorb
stc
pop
adcb
pop
dec
lcall
movsb
dec
xchg
and
sbb
mov
fwait
ror
sbb
mov
dec
jge
pop
pop
js
push
sbb
dec
push
das
faddl
mov
mov
inc
push
test
pop
add
adc
enter
bound
pop
add
sub
scas
hlt
movsb
sarl
out
sub
mov
inc
testl
push
sbb
mov
push
dec
inc
mov
out
rdmsr
fdivl
add
mov
xlat
cmc
jo
dec
mov
xor
xchg
add
mov
xchg
movsl
and
fisubrs
sub
push
outsl
xchg
pop
cmp
mov
lcall
addr16
dec
push
push
repnz
lods
fs
std
fdivrs
mov
and
adc
mov
sti
repz
inc
cmpl
sbb
rcrl
loop
inc
test
cld
fdiv
out
outsb
lods
dec
dec
mov
and
mov
lods
mov
adc
repz
jg
jnp
push
ret
inc
aam
jae
shll
sahf
ss
ss
xchg
movsb
lret
sub
sbb
mov
mov
bound
gs
push
shll
jnp
sbb
in
and
test
pusha
gs
bound
fnstcw
iret
stos
push
insb
xorl
adcl
add
jg
daa
orl
cmp
jb
inc
push
push
movsb
fs
scas
lods
sub
mov
cmovg
aam
dec
adc
es
push
inc
pop
push
in
jl
jge
fwait
cltd
pusha
fisubrs
lods
bound
repnz
sti
imul
xchg
mov
fs
hlt
mov
xor
and
mov
cli
js
lcall
roll
mov
aam
orl
ficomps
sbb
push
scas
sahf
mov
stc
into
xchg
push
scas
lods
incl
sti
gs
adc
mov
test
dec
or
stc
insb
cmpsb
adc
in
dec
hlt
inc
push
or
fldt
pop
shlb
or
lret
imul
test
mov
push
xchg
ficoms
fildll
adc
jmp
inc
mov
adc
imul
dec
movsb
jl
subl
jb
cmp
fisttpl
iret
jge
add
cwtl
mov
call
mov
shrb
dec
enter
js
adc
mov
sbb
cli
stc
sbb
repz
arpl
jg
mov
jmp
jg
sub
push
shrl
pop
sbb
mov
push
or
out
xchg
pushf
cmp
out
mov
loop
mov
push
cld
xchg
popa
mov
arpl
scas
mov
mov
add
and
jne
test
xchg
sbb
insl
inc
out
mov
ret
mov
sbb
jl
cltd
scas
into
adc
jae
adc
mov
push
mov
mov
cmpsl
outsl
lcall
lods
popf
mov
pop
scas
lcall
and
movsb
das
fmull
rcl
sub
rcl
fcmovu
imul
adc
pop
cs
pop
test
aam
and
sbb
jno
jns
push
and
add
push
push
mov
push
aam
sbb
loope
bound
sub
add
mov
mov
push
inc
ss
xchg
push
push
out
lock
repnz
pop
jns
or
divb
pop
sub
add
sub
pop
dec
push
jns
mov
xchg
arpl
pushf
inc
mov
cmpsl
xor
scas
push
mov
sti
xor
int3
push
mov
mov
out
rorb
push
out
lahf
push
pusha
sub
insb
push
cli
adc
dec
push
outsb
add
nop
jmp
sub
pop
pop
fcomp
or
lds
push
mov
popf
cmp
mov
pop
movsb
fidivs
jg
outsl
pop
sti
insb
push
dec
subb
jbe
or
fstps
into
add
idiv
pop
and
inc
push
bound
lds
ljmp
movsl
icebp
clc
call
movsb
int
dec
rorl
mov
pop
mov
xchg
rolb
insl
mov
outsb
icebp
je
fdivrs
imul
add
jge
lret
push
mov
sub
mov
dec
pop
leave
je
das
cli
xchg
rol
outsl
mov
fildll
lock
dec
hlt
xchg
out
repz
insl
stos
and
into
mov
add
outsb
xchg
push
pinsrw
push
scas
add
std
mov
xor
imul
mov
mov
jl
aaa
ja
push
jge
pusha
cli
mov
test
add
or
das
shl
adc
adcl
pop
push
addr16
push
pop
out
fsubs
cld
movsl
cmp
cmpsb
and
in
stos
jns
mov
sarl
adc
popa
imul
int3
xorps
cmpsl
push
insl
cld
lock
loope
sub
xchg
dec
jl
pop
mov
test
pop
jb
push
mov
mov
sub
jo
ficompl
adc
mov
cmp
or
mov
mov
sbb
mov
inc
and
add
xorb
stos
and
call
stos
lret
adc
mov
notb
movsb
pop
ret
imul
out
aaa
mov
jle
icebp
jmp
sbb
lock
mov
ret
movsb
inc
sub
or
lods
loop
clc
xor
or
sbb
aas
scas
xchg
push
repnz
xchg
jo
add
stos
insb
mov
leavew
mov
dec
mov
xchg
dec
lods
pop
adc
lcall
sub
sub
outsl
ljmp
adc
ljmp
ss
pop
or
mov
adcl
jae
push
jg,pt
in
imul
fdivrp
or
mov
jge
ds
je
jne
nop
ss
dec
int3
lahf
ret
adc
sbb
jge
pop
leave
adc
cmp
pop
pop
shl
fsubrl
cmpsb
movsb
scas
ds
ucomiss
mov
icebp
scas
stos
sbb
imul
sbb
or
jge
ja
jge
mov
adc
jg
data16
mov
inc
scas
sbbb
inc
mov
cmpsl
mov
pop
xor
hlt
ss
inc
popf
xchg
inc
test
push
mov
mov
mov
inc
cs
cmpsb
movl
cmp
movsb
pop
or
or
xlat
icebp
xor
add
lahf
stos
stc
adc
dec
cmp
xchg
push
jbe
iret
lret
fmuls
movsb
mov
mov
add
pop
int3
fs
xor
jl
je
in
jecxz
cs
sbbb
mov
inc
fisubl
movsb
bswap
xchg
add
cmp
sbb
out
inc
clc
adc
outsb
cmp
cmp
mov
push
sbb
push
sub
out
not
sub
pusha
fcomps
cld
cmp
clc
fbstp
cmp
clc
jbe
sub
pop
push
cs
fsubl
xchg
sahf
scas
bound
adc
mov
add
cwtl
jbe
cmp
mov
push
inc
lock
test
in
test
sub
insl
mov
sbb
aam
movsb
or
mov
xor
es
rcll
lcall
jne
repz
fiadds
lods
sub
das
sahf
or
inc
or
lcall
faddl
mov
dec
decb
js
shlb
mov
xor
push
cmpl
xchg
push
pop
or
notb
dec
inc
loope
test
call
je
icebp
xor
dec
xchg
stos
cltd
push
mov
push
push
mov
popf
into
insb
aam
mov
lea
fnstsw
sbb
cmpsw
cli
out
lods
sbb
lret
addr16
cli
pop
adc
add
fstpt
or
rep
xchg
pop
push
and
adc
js
mov
roll
rcrb
pushf
mov
push
add
sahf
mov
lret
movsb
jne
mov
xor
sub
sub
mov
or
dec
fcmovnbe
pop
cmp
insl
movsb
inc
mov
sahf
mov
adc
xchg
es
mov
add
and
mov
dec
lods
sub
jo
jbe
mov
mov
mov
cltd
scas
cli
ss
lods
ficoml
cmp
lock
stc
xchg
adc
mov
sub
sub
test
test
and
insb
out
faddp
stos
fnstenv
daa
mov
sahf
lcall
lods
fidivrs
push
pop
xchg
fildll
call
xchg
push
aaa
push
fnstcw
cmp
cmp
movsb
data16
arpl
dec
mov
pop
cli
jns
stc
imul
cmp
aam
repnz
jbe
adc
mov
cmp
push
jge
mov
shrl
mov
fxch
lds
push
mov
and
xor
call
es
jg
movsb
andb
pop
dec
dec
sub
add
mov
frstor
or
push
cmpsl
xrelease
xchg
pop
adc
mov
hlt
add
and
div
cmp
shrl
lock
mov
movsb
ja
jbe
fwait
das
inc
adc
arpl
push
fmuls
push
stc
push
aam
ljmp
mov
mov
cltd
push
push
fldenv
jbe
cmp
pop
or
sbb
mov
push
push
sub
lods
mov
mov
fiadds
adc
and
and
lods
jae
daa
cld
sub
jne
sbb
xchg
rclb
insb
lods
push
adcl
lods
sub
push
pop
push
xchg
adc
xor
mov
pop
push
jge
imul
hlt
outsl
fidivrs
jae
fisttps
stos
call
ds
push
in
loopne
scas
inc
mov
jp
mov
imul
repz
punpckhdq
pop
enter
sub
hlt
push
mov
shr
sub
xchg
bound
mov
in
xlat
mov
mov
loope
fisubrs
cltd
cld
adc
mov
scas
mov
push
dec
xchg
movsb
push
movsl
shl
lods
jmp
lds
sbb
sbb
movsb
popa
cltd
ss
sub
xor
int
sbb
adc
mov
adc
mov
and
dec
movsb
adc
sbb
orb
inc
hlt
mov
jbe
xchg
in
mov
outsb
loop
mov
or
push
cs
movsb
les
mov
cmc
fdivs
out
xchg
aad
js
stos
scas
inc
mov
push
fisubrs
jno
leave
mov
xchg
in
outsl
loope
cmpl
mov
xor
mulb
add
xchg
scas
xor
adc
popf
out
adc
mov
inc
fwait
int
push
push
lods
hlt
insl
mov
push
sbb
jo
mov
iret
outsb
std
adc
fidivs
icebp
mov
mov
fidivl
test
scas
cs
pop
push
int3
mov
mov
mov
adc
fwait
push
orb
repz
ja
xor
or
pop
jae
cmp
push
iret
pop
cmc
sub
das
mov
adc
adc
loop
xor
stos
ret
adc
push
lcall
xor
aad
pop
movsl
das
inc
stos
push
sub
mov
stos
cmp
jns
mov
jbe
outsb
iret
or
cld
jbe
inc
movsb
inc
hlt
sub
cmp
stos
pushf
push
clc
pop
adc
xchg
mov
pop
gs
fisubrs
cmpsb
jp
xchg
fs
push
outsl
das
inc
push
out
cmp
arpl
xchg
cli
pop
aaa
jle
sbb
push
imul
lret
subb
leave
int
rclb
and
xlat
inc
insl
inc
daa
mov
adc
out
jb
cld
push
clc
in
sub
cltd
xor
cmp
or
dec
data16
push
movsb
jno
arpl
mov
xchg
xor
mov
mov
jbe
or
in
test
lcall
push
sub
pop
mov
hlt
xor
or
scas
or
add
out
sub
dec
mov
scas
or
shrl
jns
outsl
scas
stc
stos
sbb
ret
inc
imul
mov
dec
mov
fs
test
mov
popf
jmp
jmp
cmpsl
jno
in
push
lret
fs
sarb
iret
inc
mov
inc
jl
imul
xorl
addr16
cwtl
dec
repnz
test
aaa
sub
add
call
lcall
push
jge
leave
or
fstps
data16
je
add
mov
or
xor
mov
stos
je
sbb
xchg
dec
jl
mov
popf
push
inc
pop
jle
jno
pop
out
mov
inc
or
popa
in
outsb
pusha
xchg
jecxz
mov
dec
outsb
ljmp
call
enter
loope
cmpsb
xor
mov
insb
out
xor
jbe
adc
or
dec
xor
pop
push
jnp
cmp
adc
je
add
syscall
push
in
mov
iret
leave
sbb
fists
jb
sbb
sarb
lds
or
stos
in
stc
mov
rorl
cmpsl
fdivl
mov
arpl
and
pusha
fcompl
loope
cltd
cmp
or
arpl
xchg
pop
push
and
or
push
mov
popf
jae
inc
das
mov
cmp
adcb
movsb
xchg
jecxz
aad
in
aas
push
add
ret
mov
inc
xor
mov
std
cld
xor
jle
sbb
xorl
mov
es
push
pop
inc
push
push
fdiv
mov
push
cmp
or
xorl
add
imulb
flds
inc
scas
addl
inc
jnp
fldl
scas
test
jns
cmc
adc
dec
sub
xor
loopne
inc
mov
jnp
call
jmp
fdiv
cmp
sub
fsin
popf
lods
mov
orb
cmpb
call
sub
pop
xor
push
lods
push
ja
dec
xchg
xorb
sub
push
mov
and
jp
pop
in
idivb
inc
lods
cwtl
add
xor
adc
out
das
xchg
mov
xchg
xchg
arpl
add
cltd
xchg
adc
inc
mov
repz
mov
cli
mov
popf
cmp
push
xor
mov
pop
add
cmp
into
clc
jle
stos
inc
ss
push
das
pop
xor
mov
pop
xor
and
mov
inc
jne
mov
loope
or
mov
pop
lods
add
aad
jge
cmp
in
loope
pop
aaa
push
cltd
adc
scas
cltd
sbb
dec
lret
movsb
repnz
fsubrl
adc
scas
jb
dec
add
iret
push
lcall
stc
add
ss
jmp
add
cmp
in
cmpsb
sub
pop
mov
dec
in
mov
xchg
out
lods
shll
test
cmp
data16
loop
mov
repz
mov
ljmp
push
fisubrs
lods
xor
iret
fiadds
pop
dec
fidivrs
cvtdq2ps
outsl
fldenv
mov
push
sub
scas
sbb
dec
push
ss
sub
push
jns
lret
pop
ja
jnp
pop
int
into
iret
dec
stc
mov
repnz
sub
shll
mov
insb
jge
sbb
stos
inc
arpl
test
add
mov
push
mov
pop
xchg
xchg
cmpsb
pop
dec
mov
lock
add
xchg
out
cmc
mov
push
inc
stos
repz
mov
push
movsb
push
mov
pop
in
xor
pop
loope
scas
push
push
fcomps
and
decl
repnz
test
arpl
mov
mov
in
jns
aam
clc
mulb
sbb
xchg
xchg
inc
mov
into
add
subl
mov
cmpsb
sub
mov
xorl
gs
jne
mov
arpl
xor
jmp
mov
xor
cli
scas
and
das
mov
enter
jle
jp
jbe
mov
loop
ljmp
and
xor
add
leave
cmpsb
arpl
ss
dec
push
xor
cld
cli
pop
sbb
fcompl
xlat
nop
push
xor
mov
sbb
cmp
dec
mov
xorl
cmp
stos
cmp
cmpb
xor
lods
jge
fistl
and
add
outsl
ss
mov
lods
mov
ffree
iret
sub
pop
dec
inc
es
test
mov
hlt
repnz
pop
cmpsl
movsb
repz
popa
shlb
hlt
in
mov
sti
xchg
jbe
mov
adc
adc
adc
aaa
insb
fcomi
fldenv
push
xchg
insl
mov
addr16
sbb
imul
inc
imul
and
or
mov
stc
out
cltd
js
xor
aaa
scas
mov
mov
jns
xor
mov
and
les
sub
movsl
orl
pop
scas
jb
leave
ret
enter
cltd
or
mov
and
adc
mov
sub
shrl
shll
mov
pop
dec
es
movsb
out
or
mov
xorb
xor
bound
fstpt
mov
and
std
sarb
daa
xchg
xchg
xor
sti
bound
ficoml
jbe
push
sub
lods
or
ret
mov
push
jne
mov
cbtw
push
test
lds
inc
lods
js
lret
mov
xchg
arpl
aam
cmpsb
enter
mov
pop
mov
sbb
push
sub
or
sub
loope
in
push
pop
arpl
es
xor
sahf
jmp
std
jecxz
movsb
mov
psubsw
adcb
pop
loope
ret
bound
mov
stos
inc
adc
aam
dec
iret
sbb
mov
fldenv
sbbl
sbbl
ret
stc
and
or
lods
popf
pop
jmp
lods
cmp
sahf
xchg
mov
and
xor
fwait
pop
stc
gs
push
lret
cs
aaa
or
or
mov
mov
xchg
insb
out
cmp
stc
sti
jecxz
jb
xor
lods
iret
or
pop
aam
movsb
ds
jae
push
aaa
mov
or
dec
cmp
leave
jne
adc
sub
push
stos
scas
jns
mov
jl
mov
mov
sbb
test
mov
test
jle
xchg
or
and
push
aaa
lods
movsb
stos
inc
lea
scas
xchg
jp
cmp
dec
popf
sbbl
inc
fimull
cmpl
mov
fimuls
in
shll
jmp
jge
das
arpl
fcmovb
in
ljmp
dec
fcoms
les
scas
incl
lods
push
mov
bound
stos
dec
aaa
sub
sbb
movsl
adc
aad
cld
or
jbe
iret
outsl
adc
pop
repz
inc
sbb
sub
in
mov
xor
scas
and
mov
push
ss
jae
xchg
lret
xchg
sti
enter
and
mov
mov
push
daa
push
inc
dec
fdivr
xor
mov
and
mov
adc
add
sbb
mov
push
adc
imul
int3
hlt
inc
bound
in
sub
xchg
pinsrw
xchg
sub
mov
dec
and
lcall
addb
jbe
inc
clc
jl
cmpsb
sti
cmpsl
gs
test
imul
xchg
ret
xchg
imul
jge
jae
cs
xor
pop
jb
xor
in
nop
addr16
pop
loop
dec
mov
lret
sbb
gs
xlat
or
jl
lcall
push
pop
push
push
adc
mov
xchg
mov
cmpsl
pop
xor
xchg
or
fisubrs
jno
jmp
out
adc
sub
pushf
adc
push
sbb
mov
mov
das
adc
xchg
or
pop
xor
push
jmp
int3
mov
popf
ja
es
jbe
adc
cmpsl
push
pop
iret
jle
sbb
sbb
mov
xchg
mov
cwtl
jno
pusha
cmp
jb
movsb
sub
mov
sbb
stos
cmpsl
sub
cmpsb
popa
mov
test
pusha
dec
mov
inc
rcrl
sbb
cmp
cmpsl
mov
insb
aad
xor
sahf
xchg
or
repz
addr16
lret
jp
sbbb
int
pop
push
adc
cs
cli
xor
adc
mov
shlb
sub
insb
mov
and
sub
fldcw
icebp
iret
mov
cmc
call
cmpsl
mov
out
mov
mov
icebp
mov
pop
lret
mov
stc
mov
pop
roll
or
xor
jmp
cltd
sub
mov
ljmp
jno
jno
sub
out
testl
in
adc
sub
out
adc
das
mov
jl
js
mov
std
es
aad
jmp
or
ficoml
jp
push
xor
sub
push
inc
imul
out
mov
jmp
loop
rcrl
xor
and
push
mov
rol
jb
arpl
pop
dec
mov
mov
xor
and
pop
cli
aam
pop
jb
loopne
out
push
and
push
shll
sub
repnz
push
adc
das
mov
movsl
stos
adcb
mov
xchg
mov
mov
and
mov
scas
insb
jns
iret
test
cmc
mov
repz
fildll
xor
cmpsb
fidivs
mov
and
sub
jae
movb
cmp
fwait
xchg
ret
xor
pop
mov
inc
dec
adc
neg
jbe
iret
scas
stos
fsubrp
loop
mov
mov
rclb
js
mov
lahf
mov
popa
and
mov
push
inc
loope
mov
fadds
cs
mov
das
pop
push
xor
jmp
mov
add
cmpsb
int3
adc
jmp
jne
lods
xor
mulb
jno
xlat
push
dec
ret
jns
outsb
push
sbb
test
in
es
push
mov
dec
hlt
mov
cmp
pop
lcall
push
repz
cmp
dec
hlt
pop
xchg
sub
roll
dec
cs
js
aam
pop
rorb
ljmp
out
dec
xor
insl
sbb
push
ja
pop
jp
jnp
jb
lea
inc
lea
in
xor
push
movsb
loop
test
out
push
adcl
hlt
push
sahf
push
stc
pop
mov
jmp
ja
ret
inc
fisubs
dec
xor
repz
xor
test
repz
cmp
inc
sbb
xchg
add
mov
in
xchg
or
addr16
mov
insl
mov
mov
mov
sbb
loop
fcomip
setp
stos
cmp
outsl
loope
xchg
mov
out
mov
mov
inc
mov
lods
lahf
ss
scas
sub
and
pop
scas
cmp
jecxz
push
arpl
dec
sub
sbb
push
ljmp
js
cmp
rcrb
sub
adc
das
ret
pop
movsl
and
xchg
in
mov
fsubrl
mov
jl
js
push
aad
subb
mov
xchg
lret
mov
outsl
in
inc
xor
xchg
cmpsl
push
fdiv
push
in
cmpb
mov
push
cmp
sub
movsb
fidivl
dec
push
mov
inc
pop
clc
mov
lods
xor
outsl
cwtl
fistpll
aad
mov
xor
call
cli
je
jno
hlt
push
mov
sbb
stos
pop
leave
xor
lods
dec
nop
icebp
pop
inc
popf
jb
cmp
push
pop
xchg
stc
aad
jl
lcall
sti
push
lods
inc
leave
dec
int3
sub
outsl
loope
in
lods
loop
negb
fcmove
pop
dec
pop
sar
sub
out
add
jbe
lgdtl
aaa
clc
sahf
mov
xor
fsubs
sub
mov
test
xchg
in
adc
push
icebp
pop
push
aad
or
repz
xlat
sbb
cmp
out
push
pop
addr16
mov
ret
cmpl
addr16
mov
sbb
and
ljmp
sarl
gs
imul
in
mov
int
pop
mov
or
dec
aad
add
mov
loope
fldcw
pop
sub
mov
xor
xchg
fimull
je
ret
mov
mov
adc
dec
xlat
sub
cmc
cmp
jb
and
jae
jmp
lcall
xchg
fwait
rdtscp
pop
mov
movsb
pusha
jno
dec
jmp
xchg
pop
and
xchg
mov
pop
insl
xchg
xor
sub
les
inc
aad
in
jmp
decb
lds
pop
fsubrp
pushl
sub
and
stc
test
xor
rol
arpl
push
mov
mov
cmp
adc
inc
test
adc
mov
mov
out
clc
and
daa
lods
cmpsl
xlat
jns
dec
jge
aad
xor
inc
jae
mov
mov
jno
jns
shlb
std
outsb
iret
mov
ds
mov
lea
sbb
push
xlat
mov
dec
subb
minps
push
mov
mov
lret
fmuls
fidivs
sub
mov
icebp
sbb
push
insb
lcall
das
adc
jge
adc
mov
negl
and
mov
push
or
mov
xor
jno
cmpl
cmp
xchg
sbb
add
xor
mov
fiaddl
stc
push
adc
xchg
std
jmp
push
and
push
xchg
pop
cmc
jg
daa
add
decl
es
lods
mov
inc
scas
cmove
dec
scas
mov
jns
inc
fs
pop
ss
out
dec
ss
sub
add
xor
mov
fnstcw
daa
xchg
adc
xchg
mov
mov
in
popl
mov
lods
sahf
cli
xor
jns
push
mov
call
mov
xor
cli
xor
aaa
jl
lret
push
mov
cli
push
mov
test
push
aad
xchg
mov
lcall
mov
lahf
test
xor
mov
arpl
inc
fisubrs
pop
add
gs
out
dec
adc
jnp
inc
nop
out
aam
les
xchg
les
roll
inc
dec
inc
inc
mov
imul
xor
movsb
jle
xchg
jae
movsl
sub
ret
mov
xlat
push
xchg
inc
or
movsb
cmp
inc
adcb
fdivrl
and
sbb
aam
negb
push
out
wrmsr
xorb
jb
jge
outsl
mov
pop
shlb
jnp
movsb
sti
cs
insb
cmp
xchg
or
shl
stos
cs
jge
dec
cmp
pop
fadds
mov
dec
jbe
jne
mov
cmp
jbe
dec
arpl
push
mov
add
sahf
push
push
imul
sbb
pop
xor
mov
jg
mov
inc
and
in
fbld
xor
stc
inc
lcall
add
in
ljmp
leave
aam
das
adc
xchg
out
or
adc
sub
ljmp
push
push
mov
pop
pop
jp
xlat
test
fsubrs
inc
push
data16
fiadds
mov
aad
dec
push
jge,pn
mov
push
lahf
cmp
cmpsb
pop
hlt
cmpsb
jge
dec
push
lock
xor
push
ljmp
jne
and
dec
fcompl
adcl
ror
adc
shlb
mov
scas
mov
ds
cs
je
dec
jno
push
xorl
loopne
mov
inc
push
pop
push
outsb
pusha
dec
mov
popa
dec
in
orl
repz
cld
adc
test
push
mov
stos
test
lock
dec
sahf
imul
movsb
loope
outsl
cmp
lcall
rolb
movlps
lea
fs
sub
test
mov
jb
or
jno
push
adc
sbb
push
fidivrs
xchg
mov
cs
sub
out
jecxz
adc
sbb
sub
lock
jb
mov
scas
in
stos
imul
fidivl
dec
repz
mov
movsl
cmp
push
push
pop
add
cld
stos
xor
test
sbb
mov
mov
pop
jbe
xor
push
rep
incl
sub
sbb
stos
pop
mov
xor
push
xor
xchg
cmp
jns
mov
xor
cmp
movsb
push
or
out
jmp
fldcw
movsb
add
dec
int
cmpsb
gs
jne
stc
test
jb
sub
mov
sbb
insb
sbb
jno
xchg
frstor
mov
scas
movsl
mov
lods
shrl
pushf
insb
in
sub
lods
push
xchg
pushf
outsb
in
add
mov
imul
into
xchg
aaa
sbb
dec
rorb
cs
pop
in
adc
mov
sbb
push
pop
shll
sbb
mov
xchg
dec
push
test
sub
mov
orb
cmp
es
cmp
pop
test
bound
fldcw
dec
enter
adc
sub
outsb
sub
dec
gs
dec
movsb
jae
out
sub
sub
stos
sti
icebp
andl
sbb
je
iret
int
nop
in
ret
inc
xchg
or
xor
jnp
mov
xlat
xchg
lss
cmpsl
iret
cmp
loopne
dec
data16
mov
xchg
addr16
movsb
cmp
jno
aas
fstpl
dec
jge
repnz
or
ljmp
add
cltd
lea
cmovb
add
sahf
xor
pop
ljmp
xchg
lock
lret
mov
and
pop
lods
adc
push
rorb
andl
pushf
int
cmp
pop
or
sub
mov
in
sbb
jge
mov
pushf
stos
inc
adc
movsb
mov
fdivrl
aam
lret
sbb
ljmp
mov
sub
dec
xlat
stos
adc
and
push
pop
testb
clc
lods
pop
jae
xchg
lahf
cltd
add
push
rcrb
cmp
lcall
stos
insb
lods
mov
dec
popf
divb
lods
pop
stc
push
cmp
or
xchg
dec
mov
ljmp
adc
xor
decb
adc
das
fsubrs
sqrtps
fcoml
or
push
in
or
mov
pop
xchg
pop
pop
je
leave
push
fadd
outsl
pop
mov
xor
sub
pop
adc
popf
sti
ret
movsb
cmpsb
addl
enter
andnps
lods
and
sub
fmul
mov
movsb
bound
and
lea
mov
jl
inc
daa
lods
pushf
adc
hlt
pop
dec
arpl
fisttpl
cmp
mov
insl
stc
divb
in
dec
dec
in
push
push
mov
shlb
imul
add
cltd
xchg
inc
leave
xchg
mov
pop
inc
mov
jnp
aad
mov
xchg
imul
sub
jmp
in
fsts
xchg
fs
idiv
aad
mov
stc
mov
dec
pop
movsb
inc
sahf
fmull
roll
in
mov
adc
insl
lods
mov
aam
cmpsl
add
lods
idivl
das
jecxz
mov
mov
xchg
push
push
mov
ficomps
ljmp
movsl
fs
ret
stos
sub
pop
pop
loop
xchg
cmp
jo,pn
xchg
sbb
jg,pt
mov
lods
mov
movsb
jge
lcall
mov
sbb
dec
addl
push
lret
jne
fadds
mov
lret
cmp
out
sahf
cwtl
in
add
mov
add
bnd
push
insl
fidivl
pop
scas
cmpsb
jbe
ds
je
imul
xor
xor
inc
pop
leave
pop
movd
aad
push
les
mov
or
sbb
mov
sub
insl
sub
aas
and
pop
jnp
dec
repz
jo
shl
movsl
lods
divl
in
sbb
outsl
mov
xchg
popa
stos
dec
mov
mov
scas
xor
and
std
or
shrl
loope
ret
or
dec
stc
jns
pop
inc
insb
bound
push
aam
sbb
loopne
push
dec
cltd
or
insb
mov
inc
test
leave
stos
rolb
push
mov
nop
or
ret
popa
fs
fdivl
cmpsl
push
pop
mov
dec
cmp
mov
iret
xor
shr
fisubs
outsl
imul
jbe
dec
mov
mov
pusha
xor
jp
xor
addr16
stos
inc
aas
outsb
push
inc
push
cwtl
shl
jbe
inc
es
insl
lock
cmpsl
outsl
sub
lods
in
je
jns
inc
jb
sub
bound
add
or
ja
scas
loop
xchg
push
xchg
push
stos
sub
xchg
add
dec
movsb
les
adc
mov
xor
pop
popa
hlt
fdivr
add
mov
xchg
pop
pop
leave
fcmovb
add
scas
movsb
in
movl
sbb
mov
mov
popf
ret
mov
sbb
dec
jb
pushf
aam
test
mulb
or
out
rcrl
mov
lods
mov
lock
push
and
insb
cld
dec
or
or
xchg
sub
dec
aam
sbb
gs
mov
dec
test
int
pusha
and
or
mov
enter
fstl
sbb
leave
xchg
lods
cmp
add
xchg
and
nop
stos
and
pop
push
lahf
movsb
insl
rorl
movsl
mov
sbb
xchg
ds
aad
mov
pop
jo
jae
inc
hlt
lods
mov
out
call
sub
int3
cmc
push
jbe
mov
call
cmp
push
hlt
mov
ret
js
inc
mov
and
push
adc
push
mov
push
fsubs
rclb
and
xor
dec
popa
aam
inc
pop
push
popa
nop
mov
mov
shlb
imul
sub
mov
add
testb
pop
imulb
lcall
shrb
adc
fdivrl
call
mov
dec
movsl
arpl
mov
repz
scas
das
pushf
add
mov
movsb
lods
dec
js
push
loope
rcrb
adc
adc
rcll
mov
out
mov
repz
ss
push
mov
repnz
loope
sbb
movsb
lods
pop
ror
lea
inc
ret
xchg
sub
cld
test
xchg
fiadds
fldt
fbld
jns
push
sbb
fcomip
rorl
movsb
push
imul
pushl
jle
mov
test
xlat
jae
or
pop
mov
mov
mov
inc
bound
mov
out
ss
dec
xor
pop
ret
aam
and
or
xchg
movsb
xor
sub
popl
lods
add
iret
cld
and
cmpsl
les
or
mov
add
ret
repz
jb
add
jp
push
icebp
paddusb
loop
int
push
lods
jb
movsl
adc
sti
lret
insl
dec
cwtl
bound
in
outsb
jp
mov
jmp
inc
cmpsl
mov
push
dec
push
inc
jl
jb
jae
cmpsl
jecxz
into
jno
add
mov
cmp
or
sbb
xor
jo
sub
nop
lock
sub
dec
inc
push
test
jbe
lock
push
enter
sub
jl
aaa
mov
cwtl
jns
cmp
push
jns
jb
mov
shr
in
sub
imul
loopne
adc
pushf
cmp
cmpsb
xchg
dec
in
das
fisubs
mov
ret
cmpsb
xchg
ljmp
cmpb
or
pop
mov
cmp
pop
xor
jo
lea
pop
imul
cmpsb
int
stc
scas
sahf
xor
outsl
dec
ljmp
js
enter
pop
std
cmp
inc
jp
das
lods
push
pop
test
xchg
add
mulb
inc
xor
flds
adc
lret
xchg
ljmp
sbb
ljmp
fdivl
inc
sub
dec
push
fistpl
inc
xor
inc
mov
inc
xlat
sub
and
and
cmp
aad
lods
je
jno
data16
test
ret
mov
dec
push
scas
push
out
adc
mov
mov
xchg
je
mov
cmp
push
imul
cmp
je
adc
rorb
lea
sti
ds
repnz
add
jns
in
push
push
inc
sub
fisubrs
xchg
xchg
xchg
lcall
lock
add
add
mov
mov
push
add
xchg
bound
int3
mov
lods
leave
mov
pop
mov
xor
push
fsubs
cmp
pusha
jmp
and
arpl
sub
mov
repnz
cli
mov
sub
ret
lds
test
icebp
jge
mov
cmp
ret
dec
push
ret
xchg
add
dec
sbb
dec
fstpl
push
mov
dec
jg
sbb
jecxz
inc
adc
arpl
icebp
mov
outsl
inc
out
mov
adc
xorb
lods
ret
add
sahf
and
mov
addr16
aad
insl
aam
mov
add
push
ljmp
adc
adc
sbb
lret
mov
xchg
inc
sub
sbb
lcall
iret
push
or
pop
add
lea
rclb
jns
dec
mov
xor
ja
js
fisttpl
jl
mov
clc
fsubr
sbb
mov
lds
popa
adc
xchg
push
loop
lcall
loope
aam
inc
pusha
and
psraw
push
push
pop
fdivrl
add
mov
add
scas
mov
repz
xchg
mov
mov
mov
jl
sarb
scas
mov
inc
nop
call
push
hlt
xlat
mov
dec
mov
or
lea
mov
mov
cmc
add
aam
push
xor
das
movsb
repnz
sub
shlb
cmp
mov
aam
and
and
fdivs
fstpl
fidivl
fdivrl
cmp
lahf
repnz
sbb
mov
mov
pop
jns
adc
sub
pop
repz
xchg
ljmp
in
cld
repz
xlat
or
out
imul
jge
jge
push
scas
xor
cltd
lcall
lods
and
pop
inc
sub
mov
movsb
push
sub
jle
mov
imul
imul
xor
mov
pop
xchg
inc
scas
notb
cmp
mov
adc
push
mov
fdivrs
mov
shrb
sbb
sbb
sti
mov
icebp
push
xchg
into
aam
arpl
in
and
jge
int
mov
aam
push
aaa
sbb
in
clc
mov
shrb
cmp
arpl
or
and
mov
out
pop
aaa
jno
pop
mov
sbb
repz
mov
jp
mov
jae
rclb
inc
mov
jecxz
repz
push
push
xchg
jbe
adcb
xlat
mov
mov
orl
mov
repnz
mov
pop
push
dec
mov
stos
xchg
or
cmp
dec
lcall
jns
fdiv
sub
cmp
in
aam
mov
aad
nop
lcall
les
outsl
or
add
jecxz
sub
loope
lock
hlt
lcall
aaa
ret
xchg
xor
hlt
mov
shlb
mov
mov
add
addr16
cmpsl
push
sub
push
movsb
sahf
cwtl
jmp
test
filds
cmp
daa
wbinvd
push
arpl
popa
test
inc
mov
and
dec
dec
jnp
orb
sub
mov
mov
lods
rcrb
and
repz
pop
dec
outsb
aam
xchg
clc
mov
insl
mov
movsb
call
cmp
sbb
ret
or
push
popf
mov
out
push
sti
repz
iret
jne
das
mov
rorb
sbb
jo
xor
stos
popf
cmpsl
add
mulb
testb
outsb
mov
nop
sbb
jo
stos
inc
pop
or
mov
mov
xchg
gs
pop
jo
pop
ljmp
insl
stos
leave
xorl
in
jno
pop
fcomps
jno
mov
mov
subb
cmp
aam
fcompl
dec
ljmp
lods
adcb
mov
fistpl
je
sbb
push
adc
or
aaa
mov
in
or
es
jecxz
cmpsl
xlat
and
lock
xchg
or
mov
out
orb
or
in
sar
fcom
pop
repnz
push
insb
int3
lret
sbb
bound
flds
jae
mov
jae
mov
mov
xchg
push
xchg
shl
ljmp
repz
sarl
sub
xor
push
jmp
mov
icebp
fisttps
and
add
orl
hlt
cmpsb
imul
lods
in
stos
dec
bound
dec
mov
pop
dec
addr16
loope
in
sub
movsb
aas
sub
xor
dec
mov
add
cld
adc
loopne
jge
dec
xchg
add
cs
dec
in
outsb
dec
cld
sbb
or
adc
push
inc
or
bound
addr16
insb
sbb
jb
add
aas
mov
push
sbb
jmp
shll
inc
xor
push
jecxz
and
sub
fucom
stos
ret
and
stc
icebp
dec
push
jbe
xor
pop
cltd
mov
pop
mov
aam
and
pop
ficomps
ja
sbb
push
push
sbb
jl
sahf
pushf
pop
adc
push
xor
wrmsr
fistps
sub
mov
add
lds
add
lds
xchg
lea
inc
jae
jb
popf
xor
mov
icebp
into
data16
incb
out
adc
jle
mov
xchg
xchg
ret
std
mov
push
or
je
addr16
fisubrl
or
aad
mov
les
pop
jnp
jb
sbb
std
and
jne
in
subl
or
insb
fcomi
rorb
ret
aas
movsb
out
divb
cmp
lahf
adc
outsl
or
leave
test
shll
cld
stos
out
idiv
popa
push
loop
mov
test
dec
mov
mov
sub
outsl
jmp
sub
mov
ljmp
iret
aad
sbbb
arpl
mov
aad
inc
mov
scas
sbb
into
repnz
fsubl
jge
inc
mov
loopne
lret
dec
mov
jmp
lahf
push
xchg
or
dec
inc
testb
dec
inc
call
push
test
fsubl
lods
lret
out
xor
sub
or
popa
lock
push
mov
aaa
jne
es
fsubs
add
std
push
cmp
add
fstpt
andb
fldenv
xchg
mov
scas
ljmp
mov
jbe
jae
popa
mov
jl
inc
enter
jae
fadds
sub
cmpsl
pop
cmp
mov
fidivrs
bound
scas
push
out
je
xchg
inc
arpl
mov
or
rclb
mov
mov
bound
mov
aaa
std
dec
mov
dec
jecxz
dec
mov
jbe
sbb
dec
ljmp
fsub
sub
sub
test
push
push
mov
popl
movsb
mov
adc
jno
ja
outsb
pushf
les
in
xchg
roll
mov
mov
pop
arpl
pop
jge
ss
iret
les
out
mov
sub
imul
in
push
push
aaa
lds
xchg
and
add
idivl
stos
sbb
sbb
arpl
repz
jmp
jle
jb
mov
sbb
inc
lock
dec
jo
mov
enter
jno
aam
leave
movsb
xchg
dec
in
push
into
aad
test
dec
jb
cmp
sub
in
aam
mov
pop
mov
call
jno
mov
push
lods
mov
iret
shll
scas
fmull
sbb
int
sub
into
rcrl
cmp
jnp
add
or
cmp
push
fsubrl
inc
call
lcall
dec
out
push
xor
dec
jns
xorl
sbb
or
lds
lods
mov
pop
adc
scas
mov
mov
aam
aam
jbe
pop
pop
adc
dec
in
cmovge
jp
inc
pop
jae
and
add
aam
or
shll
sub
into
data16
shl
xor
pushf
fidivs
aam
movsb
xchg
mov
pop
call
jmp
lret
andb
out
push
mov
subl
jg
add
add
pushf
lods
rcr
inc
lock
adc
cmpsb
mov
int3
mov
popa
or
imul
iret
add
push
xchg
stc
adc
push
cmp
insb
add
sub
jmp
sahf
sahf
fidivs
sub
test
fsubr
ds
lods
pop
insl
xor
in
jecxz
mov
dec
jl
iret
fs
push
jle
outsb
mov
mov
cmp
aam
stc
andl
pop
mov
js
dec
add
sub
rcrl
xchg
in
adc
lods
shlb
push
mov
pop
push
rol
sub
scas
push
inc
push
les
add
inc
arpl
ret
enter
test
fldt
mov
or
ss
out
cmpsl
iret
insl
sbb
ret
jmp
sub
fcompl
cmp
add
loop
icebp
inc
sbb
lcall
add
mov
repz
js
jno
pop
outsb
shrl
insl
mov
das
mov
daa
jnp
push
int3
dec
test
enter
andl
inc
push
jbe
ljmp
sub
dec
jns
std
loopne
sub
or
ja
mov
jg
aam
push
push
xor
mov
push
sub
arpl
mov
push
ret
ljmp
mov
sbb
push
cmp
js
sti
sbb
pop
xchg
bound
fs
insb
pop
fdivs
cmp
fldl
into
add
cmpsl
cld
das
negb
lea
and
mov
mov
bound
sub
xchg
iret
vrsqrtps
xchg
and
lea
mov
jp
sub
inc
sub
call
pusha
test
cmc
or
add
jno
fldt
lds
push
mov
xchg
add
ss
dec
fnstcw
scas
and
adc
aad
adc
shr
ret
xorps
jmp
fnsave
xchg
and
sbb
arpl
sbb
les
pop
movsb
andl
mov
xchg
push
mov
xor
rdtsc
js
nop
pop
ljmp
sub
xor
inc
mov
std
jae
aam
and
shlb
clc
cmpsb
sub
mov
int3
cwtl
jg
mov
xchg
popf
dec
cmp
inc
cltd
pusha
sbb
unpcklps
jnp
push
fisubrl
hlt
sub
mov
fs
cmpsb
insl
adc
or
test
das
push
lods
jb
cmpsb
mov
insl
imul
leave
pop
insb
jp
sub
call
sub
lods
add
out
mov
repnz
pushf
stos
sbb
addr16
test
lock
jb
xchg
or
sbb
movsl
and
pusha
popf
xlat
arpl
pop
sub
icebp
pop
ja
adc
divb
sub
outsl
pop
mov
sbb
jnp
mov
xchg
cltd
jae
testb
ret
inc
inc
clc
mov
xchg
repz
adc
faddl
xor
dec
xchg
mov
sub
dec
mov
xchg
setp
push
inc
lcall
repz
fbld
pop
ret
mov
mov
sahf
ljmp
mov
bound
nop
mov
fldcw
mov
jno
out
jbe
xchg
stc
outsl
pop
testl
adc
inc
push
sub
jne
pop
cmpsb
cmp
stos
mov
repnz
mov
or
inc
mov
push
push
leave
test
jno
dec
cmpsb
loopne
stc
loop
xor
mov
syscall
adc
iret
inc
sub
or
mov
pusha
push
mov
call
iret
add
ficompl
test
enter
push
pop
sub
jno
mov
pusha
movsb
jecxz
cmpsb
arpl
lea
and
insb
sahf
jns
in
push
ja
jge
scas
arpl
dec
movsb
mov
gs
add
xlat
aas
adc
push
es
push
xchg
scas
sbb
dec
or
out
fistps
xor
outsb
mov
into
call
mov
mov
jmp
add
jns
lods
mov
push
pusha
dec
cmp
out
xchg
cli
insb
cli
das
divb
or
mov
lock
xor
jnp
or
sub
sub
and
or
divl
jne
lods
insb
iret
ljmp
add
mov
daa
jb
movsl
or
push
ss
lock
clc
pop
inc
rcll
nop
push
pop
mov
flds
out
sbb
scas
jecxz
add
jns
mov
repnz
outsl
popf
cmpsl
je
dec
push
xchg
stos
aaa
popf
push
inc
mov
lahf
mov
mov
inc
add
jne
testb
loopne
scas
mov
aam
mov
sub
or
xor
add
fsts
ljmp
jle
xor
roll
jns
xor
sbb
ja
xchg
scas
test
stos
lret
cmp
adcl
lret
pusha
mov
push
pop
les
lea
mov
mov
and
cmp
pop
stc
ss
mov
scas
push
movsb
sbb
sbb
lret
pop
dec
cmpsl
cmp
and
aad
dec
cmp
cltd
negl
or
xor
clc
xchg
sbb
xchg
sbb
pop
daa
adc
mov
jnp
inc
sbb
stos
es
cwtl
lds
xchg
sub
sub
mov
movsb
das
repz
jbe
xor
dec
iret
ljmp
lods
ds
add
sub
push
fimuls
xchg
movsb
clc
test
pop
movsb
inc
in
test
sbb
jno
push
jb
mov
je
lcall
push
pop
push
xchg
fsubrs
pop
inc
xchg
jno
or
arpl
push
addr16
fs
bound
test
xchg
inc
jbe
ja
das
jb
gs
jns
add
les
shlb
cmp
sub
fsts
test
jae
insb
rep
lods
xchg
adc
mov
inc
push
lret
mov
aaa
lods
mov
push
movsb
gs
std
fs
or
insb
ret
in
xchg
sub
xchg
xor
insl
shld
pop
mov
sub
sbb
popf
cmp
or
push
push
xchg
testl
hlt
push
leave
pop
pop
push
mov
enter
xor
mov
sbb
xor
ret
xlat
loopne
cli
push
mov
mov
aad
jmp
sub
sub
mov
es
dec
jnp
push
adc
mov
or
int3
and
int3
mov
mov
in
inc
repz
cltd
arpl
loope
add
iret
test
cmpsb
xor
pop
mov
jns
leave
jns
add
insl
jg
xor
adc
movsb
inc
adc
stc
sbb
adc
xor
mov
jno
dec
jno
lcall
adc
xchg
mov
push
outsb
cmpsb
clc
dec
push
sbb
mov
nop
xor
xchg
jns
adc
jge
mov
pop
test
xlat
push
xorl
testl
adc
and
mov
mov
adc
test
pop
mulb
mov
push
push
jbe
sub
mov
dec
addl
ljmp
aad
xchg
or
dec
test
mov
movsb
imul
jecxz
dec
mov
test
imulb
outsb
mov
lods
test
popf
push
mov
repnz
in
push
lods
adc
stos
inc
movsb
loope
fs
sbb
mov
cli
dec
push
add
in
loop
enter
hlt
mov
cli
push
fidivs
mov
leave
add
push
xchg
jb
xchg
push
pop
aas
sbb
cmp
lods
dec
mov
lret
fidivs
adc
insl
jb
xor
mov
xchg
xor
les
push
mov
mov
adc
shrl
dec
push
push
mov
insb
pop
ret
aam
leave
push
inc
add
lods
fs
xor
push
xchg
out
insb
xchg
inc
movsb
jb
aam
jbe
fisubrl
jns
xchg
mov
orb
xchg
adc
dec
xor
dec
push
scas
sahf
out
jns
repz
shrb
mov
js
pop
jb
jo
sbb
cltd
jb
dec
pop
hlt
inc
cli
pop
leave
add
out
mov
repnz
sbb
lods
xchg
mov
pop
mov
xor
test
mov
ret
and
cmpl
in
sub
pop
add
cli
fisubl
push
push
jge
mov
out
ret
movsb
cld
adc
rorb
xor
dec
je
popa
mov
mov
pusha
in
sahf
hlt
pop
pop
test
xor
add
dec
sarb
scas
cli
popf
fwait
imull
xor
iret
and
cmc
lahf
pop
adc
add
xor
xor
ja
int
push
iret
out
pop
mov
mov
xrelease
gs
into
icebp
xchg
pushf
scas
push
mov
inc
sbb
cwtl
or
lods
sub
dec
test
xor
mov
stos
ss
push
popf
pop
mov
cmp
out
ljmp
dec
call
pop
sub
pusha
jae
fldcw
push
or
test
xchg
pop
fdivrs
and
sbb
inc
lods
mov
xor
mov
fdivl
push
arpl
pop
xor
daa
mov
and
xchg
sub
shll
andl
scas
mov
mov
scas
xor
xchg
and
jae
stos
dec
movsb
outsb
decl
mov
test
mov
outsl
push
out
popf
divb
dec
aas
and
adc
xchg
fisttpl
jno
push
push
aas
push
sub
js
add
or
movsb
cmp
inc
sti
call
pushf
mov
loop
push
rorb
sbb
mov
xlat
xchg
ret
movsb
loop
push
xchg
sub
mov
mov
cli
inc
dec
mov
movsb
inc
dec
les
push
cltd
les
push
dec
adc
mov
push
stos
adcl
rcll
pop
js
dec
dec
mov
or
sbb
pop
sbb
cmpsl
pop
fisubrs
lea
mov
mov
lcall
sbb
into
movsb
push
cmpsb
sub
repnz
notb
sbb
cmc
loope
ficoml
mov
sub
out
into
xor
push
xchg
sbb
and
scas
jl
adc
jae
push
scas
jbe
cmp
call
push
or
pop
xor
into
adc
sub
clc
push
cmpsb
stc
dec
dec
testb
and
mov
daa
or
test
hlt
icebp
sbb
hlt
mov
and
in
mov
add
mov
lcall
leave
push
jbe
sbb
lea
mov
hlt
bound
out
gs
sbb
loop
jmp
dec
cli
pop
fwait
mov
jnp
hlt
cmpsl
dec
ljmp
subb
stos
and
sub
cmp
aad
jns
icebp
mov
outsb
call
bound
adc
jo
xor
sbb
add
adc
std
lcall
dec
lahf
jle
sub
and
fisubrs
jbe
fisubrs
in
push
lods
ret
inc
in
aas
imul
stos
or
pushf
mov
pop
je
and
shlb
and
xchg
push
and
data16
bound
iret
enter
push
loope
mov
push
jmp
cmp
push
mov
negb
jns
into
jle
dec
mov
or
movsb
addl
cld
ss
jno
int
mov
into
push
cmpsb
scas
xchg
push
popf
xor
popa
cmp
or
sub
add
arpl
addr16
movsb
imul
mov
aaa
cli
lods
xor
mov
das
xchg
sbb
mov
or
js
sub
insb
dec
les
call
and
fwait
pop
ret
ret
sbb
fldcw
mov
or
iret
clc
sub
fiadds
bound
sbb
loope
inc
in
cld
jle
mov
mov
mov
ret
pop
gs
lock
sub
shrd
fidivrl
bound
fs
mov
xchg
add
clc
scas
popf
int
sti
movsb
cmp
pop
iret
adc
sbb
adc
sub
movsb
out
add
imul
pop
sbb
adc
sbb
push
pop
fistl
rcrl
jecxz
lods
push
push
inc
aam
or
out
repz
call
pop
mov
movsl
jo
jb
fsubs
sub
push
aas
outsb
or
dec
nop
in
lods
decb
jae
lock
lods
fildll
popa
mov
cmpsl
hlt
mov
add
sbb
inc
sub
rcl
pop
push
lcall
pop
pop
push
dec
call
xor
outsl
ljmp
sbb
outsl
pusha
xchg
in
lcall
ljmp
pop
std
cmpsl
push
pop
mov
popa
add
scas
inc
sbb
test
mov
out
ds
out
xchg
aam
addr16
cmpsl
jne
jmp
insl
call
push
push
push
mov
xchg
out
push
jg
hlt
test
in
lock
pushf
ljmpw
mov
call
push
mov
mov
inc
mov
pop
mov
in
subl
pop
push
pop
push
mov
lods
mov
pop
xchg
or
sbb
mov
add
iret
jp
mov
jb
xchg
mov
cmp
lret
insl
mov
or
mov
scas
lcall
or
int
pop
test
fstpt
cltd
adc
aaa
add
inc
sbb
xor
sub
jno
push
xor
and
pop
mov
or
push
xchg
test
mov
mov
jp
dec
imul
or
mov
lods
or
mov
sub
fwait
and
movsb
lods
int
insb
dec
push
xlat
fs
icebp
scas
fimuls
out
and
xchg
es
sarl
pop
lea
jg
mov
mov
dec
cmp
pushf
sti
mov
xchg
xor
int3
and
shrb
sbb
sbb
add
outsl
cmc
dec
push
jge
nop
mov
lds
jge
data16
scas
cmpsb
shll
rorl
in
pop
addr16
lock
mov
neg
push
mov
adc
stos
pop
pop
ret
jb
mov
es
leave
out
inc
fidivrl
jae
ds
and
fdivr
mov
movsb
or
jae
lods
test
sub
mov
scas
ss
xchg
sub
pop
mov
fcmovu
mov
cmp
push
push
mov
sbb
pop
xor
dec
mov
mov
data16
dec
aam
and
hlt
pop
mov
mov
cli
ss
pushf
mov
in
or
xor
inc
pop
cmp
scas
iret
ljmp
pop
test
dec
cli
mov
pushf
arpl
stc
aam
push
mov
pop
push
xor
jno
jne
aam
andb
fwait
jb
mov
xchg
loope
and
mov
jge
cmp
or
and
icebp
mov
xor
outsb
sbb
je
adc
pushf
sarb
inc
dec
popf
call
sbb
jg
push
movsl
jno
aam
push
cmp
push
mov
push
cmpsb
adc
add
nop
int
jo
mov
cmp
call
scas
clc
jno
ret
xchg
add
xchg
mov
gs
enter
mov
jo
js
icebp
xor
xchg
stos
enter
shrb
xor
lods
sub
fs
sbb
inc
pop
stc
je
call
and
js
lds
dec
fimull
sub
mov
adc
add
cmp
inc
mov
stos
test
sbbl
inc
data16
movsb
mov
mov
cmpsl
test
in
xor
xchg
jg
xchg
jmp
cmpsl
pusha
arpl
sub
stos
inc
mov
cmp
pop
faddp
add
lret
sbb
dec
mov
xchg
mov
lret
scas
call
out
xor
movsb
in
mov
lods
shll
add
sbb
xor
adc
xchg
outsb
sub
hlt
sbb
mov
scas
cmp
movsb
jae
subl
mov
mov
notb
jl
repnz
mov
mov
lock
out
pop
push
imul
mov
cmp
shll
jmp
pushf
pushf
jb
adc
pop
adc
pop
or
jns
sub
cmp
jns
or
popf
cmp
bound
sub
xchg
cs
xor
jae
pop
ror
mov
lret
sub
pop
sbb
mov
sbb
mov
dec
inc
out
mov
mov
dec
stos
jle
movsl
out
push
mov
mov
incl
movsl
inc
rorb
pop
test
mov
dec
push
pusha
adc
lods
cmp
jo
sub
nop
btr
int
lods
mov
aad
mov
fnsave
aam
pop
bound
ret
inc
clc
or
sti
xor
pushf
in
icebp
push
add
mov
call
jecxz
and
dec
adc
adc
jmp
pop
mov
enter
popf
fldt
mov
imul
arpl
xchg
sbb
sub
jmp
jae
ja
jl
jne
push
pop
jns
dec
aaa
or
sahf
and
rep
daa
push
lcall
aad
and
push
icebp
movsb
inc
adc
jmp
add
mov
stos
pop
xor
push
and
mov
xor
adc
add
test
dec
rcll
jb
inc
dec
adcb
stos
out
hlt
jmp
mov
insb
xor
adc
xlat
movsb
cmovno
push
or
lods
add
ss
or
outsb
jnp
jge
lret
jmp
ss
inc
pop
cmpl
cwtl
push
call
xchg
sbb
ljmp
cmovge
dec
inc
mov
dec
push
iret
mov
pop
std
xor
test
stos
jo
decl
dec
aam
pusha
aad
outsb
sahf
iret
lret
jne
leave
dec
inc
lea
xchg
xchg
mov
adcl
xor
lods
sbb
lock
decb
xchg
mov
loop
dec
pop
repnz
dec
sbb
popf
outsb
push
xlat
and
add
aas
sub
ss
pop
push
add
test
xor
or
mov
inc
jg
popa
add
cltd
js
movsb
pop
repz
les
mov
add
pop
sbb
fcmovu
das
sarb
mov
sbb
iret
sub
add
sbb
inc
mov
negl
mov
scas
es
jbe
stos
xor
popf
jb
sbb
pusha
ss
cli
xor
int3
jns
arpl
sub
repz
dec
xorb
xchg
addl
and
mov
shll
lds
negb
movsb
aam
inc
out
fsubs
and
lcall
imul
fxch
ljmp
cmp
xor
in
jno
lret
mov
sub
jbe
fisttpl
out
add
or
or
cmc
and
jns
mov
push
outsb
out
inc
stc
push
mov
cmpb
hlt
lods
mov
dec
ret
xchg
stos
pop
repnz
mov
in
je
dec
cs
sbb
das
jl
scas
mov
aas
cmp
jge
iret
mov
lret
sub
stc
xchg
jmp
test
decb
repnz
and
adc
mov
xor
cld
repnz
data16
push
bound
clc
push
mov
aad
inc
lods
rep
out
or
ljmp
mov
push
or
mov
repz
mov
push
sub
les
lcall
pop
and
sub
sub
cmpsl
iret
xorl
cmp
push
popa
daa
push
xchg
jns
jecxz
jne
or
dec
ja
mov
xor
aaa
sub
inc
mov
test
sub
adc
xor
sub
loope
jmp
inc
repz
dec
fcoms
mov
cmc
push
push
fstpt
add
stc
inc
je
pushf
insl
ss
mov
cmpsl
std
les
sub
add
add
arpl
inc
fcomps
les
mov
jns
jge
add
push
xorb
mov
push
lock
rorl
into
sub
ds
mov
mov
scas
sbb
subl
gs
mov
fldenv
imul
jge
jecxz
mov
or
jno
lcall
cmp
mov
add
cmc
movsb
and
mov
jp
xchg
and
nop
ljmp
jg
lods
pop
lret
decl
test
fisttpll
icebp
ljmp
push
scas
hlt
or
jecxz
xor
add
icebp
mov
cmp
xchg
sub
dec
sub
insl
icebp
push
and
rclb
lcall
clc
jmp
mov
test
cmp
repnz
call
lahf
or
or
enter
cmp
das
mov
pop
push
movl
sti
scas
adc
adc
movsl
scas
adc
shr
movsb
outsl
hlt
adc
or
fidivrs
mov
scas
incl
mov
hlt
add
pop
fsubp
pop
icebp
fwait
pop
mov
and
int
shlb
loopne
push
stc
push
mov
mov
dec
or
or
ds
lock
push
xchg
inc
dec
cmp
jge
mov
xlat
hlt
testl
cs
fisubrl
mov
out
sbb
mov
lret
es
mov
rorl
xor
xchg
cmpsl
mov
outsb
mov
or
cmp
sbb
js
cli
push
aam
aad
rcr
cmc
inc
movsl
enter
shrl
jae
clc
dec
subl
mov
stos
jns
cld
push
lahf
fcoml
dec
xchg
mov
jbe
test
cmp
andl
stc
push
out
adc
mov
or
jnp
repnz
jbe
add
jne
pop
sub
adc
push
xchg
pop
out
ret
insb
inc
jno
arpl
jae
insl
fadds
loope
jle
or
push
decl
add
xchg
js
add
jo
ja
test
adc
mov
push
adc
insl
mov
jle
xor
and
push
jmp
in
aam
test
cmpsl
sahf
add
dec
sub
repz
das
cmp
daa
pusha
mov
insl
mov
les
cmp
fsubs
mov
fnstcw
or
loop
xor
cmp
in
xchg
jae
jno
pop
mov
jb
movsb
mov
out
dec
ss
dec
fadds
loop
xchg
jns
stos
pop
xor
sub
cmp
adc
lods
push
das
inc
arpl
and
xor
stos
cwtl
fcompl
dec
es
lret
xchg
cmc
and
and
pop
cmpl
or
fsubr
inc
xor
into
push
pop
movsl
or
int3
insl
inc
sbb
or
out
push
dec
sub
pusha
fiadds
adcl
or
mov
fidivrl
cmc
jb
sub
cmp
adc
sbb
cmpsl
cld
call
and
mov
dec
out
sub
lea
or
or
jmp
pop
mov
movsbl
cld
sub
std
pusha
add
add
sbb
push
pop
pop
add
mov
xchg
fwait
mov
push
dec
test
mov
cmp
std
mov
subl
pop
jmp
les
lods
fadd
xchg
or
movsl
sahf
lds
jbe
mov
into
mov
test
test
clc
add
mov
mov
sbb
iret
jl
fdivl
ljmp
movl
xchg
cmp
aas
out
xchg
loope
subl
adc
add
pop
int3
jae
mov
mov
push
push
stc
or
mov
subb
testl
xor
imulb
mov
out
cmpsb
cwtl
popf
mov
push
cmp
cmpsb
hlt
stos
sbb
inc
adc
outsl
iret
stos
dec
cli
iret
out
insb
sub
bound
scas
jb
clc
bound
xchg
and
adc
inc
lock
xor
aad
or
mulb
mov
sbb
pop
push
lock
push
xchg
sarb
dec
mov
fisubrs
out
or
push
idivb
xchg
mov
pop
xor
inc
les
insb
pushf
les
andb
push
subb
push
pop
push
add
gs
popa
xchg
pop
outsb
insl
fidivl
dec
jb
mov
mov
mov
fldcw
loope
xlat
stc
idivl
add
popf
sbb
xor
es
mov
and
mov
mov
les
push
nop
push
cld
add
add
lods
xor
jns
jb
stos
sub
sbb
sub
sub
inc
adc
mov
outsb
fwait
xchg
cs
out
xor
cmc
mov
outsl
xor
scas
add
add
dec
sti
out
sbb
ja
fstpt
xchg
mov
push
mov
pop
pop
imull
lods
pop
adcl
jge
popf
jge
xlat
push
jne
stos
pop
cmc
andl
xor
mov
loopne
insl
int3
aaa
push
push
inc
cmp
sub
icebp
or
jge
in
mov
jbe
push
adc
mov
pop
testb
outsb
xor
push
imul
test
js
adc
push
bound
push
lods
mov
or
mov
imul
cmp
push
jb
pusha
stos
inc
mov
inc
ljmp
movsb
jg
mov
into
test
int
fcomp
push
pop
cmp
js
mov
dec
aam
cmp
pop
jns
ljmp
lcall
push
push
dec
out
gs
push
mov
sub
stc
xchg
jae
pop
push
divl
mov
nop
inc
stos
sub
inc
pop
stos
clc
jecxz
sbb
pop
cwtl
mov
cltd
lcall
insb
adc
lods
mov
jp
pop
dec
scas
fisubrl
movsb
push
sub
push
outsb
jns
cs
repnz
cmp
push
pop
sub
ljmp
cmp
data16
negb
push
mov
inc
mov
push
inc
cld
mov
jecxz
stos
adc
jno
jo
mov
sub
ja
mov
mov
mov
fcompl
gs
adc
ror
jg
fsubrp
aas
pop
cli
mov
icebp
dec
jb
mov
das
cmp
inc
stos
loopne
push
jge
xor
cld
cmp
int3
inc
or
jns
or
cld
mov
mov
pusha
xor
sbb
shlb
fsubrs
test
xor
ljmp
lods
and
popf
and
and
push
mov
mov
bound
in
push
jnp
aad
sub
cli
jne
or
sub
icebp
xchg
lret
push
clc
test
mov
inc
lea
shll
xchg
sbb
dec
clc
xor
push
int3
das
xchg
sti
or
sbb
xchg
shlb
adc
movsb
hlt
jle
mov
push
push
cmc
inc
scas
xchg
dec
push
push
out
orl
jb
add
stc
cwtl
hlt
mov
mov
int
jge
outsl
add
xchg
movsb
add
hlt
mov
and
adc
clc
nop
sub
andb
daa
loop
popf
lock
and
sub
fidivs
mov
test
dec
sti
scas
mov
jbe
jp
add
out
add
pop
pop
pop
ja
movsb
xchg
sub
enter
pusha
mov
outsb
cmp
or
insb
das
mov
cmpsb
out
aas
loopne
popa
dec
std
outsl
movsb
jmp
xor
sub
mov
sti
sbb
popf
in
jb
xchg
xor
or
add
gs
cmp
rolb
and
bound
dec
mov
xor
xchg
add
sub
push
lea
mov
cmp
xchg
mov
pusha
mov
cs
sub
lea
jne
icebp
push
mov
gs
dec
movsb
ret
lret
popf
and
push
jns
pushf
hlt
xchg
lock
add
xchg
in
push
adc
aaa
dec
sbb
push
jns
cmp
inc
hlt
sbb
adc
push
jl
dec
xor
cli
mov
pusha
imul
cmpsl
or
mov
adc
pusha
mov
mov
jb
inc
sbb
cmp
out
push
rorl
fcoml
push
in
aam
add
xchg
push
xor
lods
rsqrtps
rorl
mov
shrl
mov
dec
shrb
fisubrs
pop
sub
and
sbb
mov
sub
movsl
sbb
stos
lods
cmpsl
mov
ret
dec
addl
jb
mov
mov
fisttps
daa
push
rcl
pop
insl
call
ret
xor
xchg
cltd
push
xor
jb
jmp
out
jb
mov
jbe
jmp
pop
pop
movsl
outsb
adcl
push
mov
cs
xlat
add
mov
sub
sbb
shll
movsl
pushf
or
or
gs
adcb
mov
jnp
imul
je
popa
and
loope
xor
and
mov
push
dec
in
iret
call
mov
test
test
and
insl
jb
lcall
cmp
cmc
loopne
xor
shll
jecxz
lret
leave
add
enter
test
xchg
fcomp
jg
outsb
or
pop
sub
adc
mov
sbb
xchg
inc
aam
push
lahf
xchg
js
gs
cs
lret
lods
fnstsw
scas
aad
sahf
pop
fidivl
sbb
mov
arpl
ljmp
push
pop
jecxz
scas
push
outsl
jle
and
divb
mov
movsb
lcall
call
push
xchg
insb
push
scas
jp
gs
sub
pushl
and
jge
sbb
enter
mov
mov
xor
insl
scas
xor
xchg
ret
iret
dec
dec
cs
pusha
jb
scas
cwtl
pop
in
jb
cs
insb
sub
mov
les
or
movsb
loope
paddsw
sbb
arpl
loopne
jbe
xchg
dec
cmp
add
call
jne
cmp
cli
add
cmp
mov
push
xchg
lods
mov
leave
push
cmp
repz
fnstenv
and
inc
adc
add
xchg
call
lods
pop
lret
inc
dec
fisubrl
jmp
push
je
pushf
lret
mov
movsb
into
iret
aas
ret
das
add
adc
sbb
test
test
cmp
imul
ss
dec
xchg
sbb
xor
mov
mov
sahf
dec
fnstsw
sbb
xchg
jp
fs
add
adc
mov
inc
mov
add
movsl
sub
insb
aad
outsl
stos
jo
aad
data16
dec
in
push
ja
js
jb
xor
icebp
fimull
xchg
jb
std
mov
insl
pop
xor
cmpsl
inc
mov
jno
xchg
jl
sbb
and
scas
je
and
pushf
cld
fadds
fisttpl
and
dec
cmpsb
lods
jl
xchg
push
test
loope
lods
add
mov
sub
xchg
jo
mov
adc
bound
hlt
sub
les
dec
jae
insb
mov
sub
daa
adc
lcall
pop
sbb
mov
push
shl
jmp
ss
aas
mov
fiaddl
jae
mov
stc
fidivl
scas
das
and
fsubs
sub
es
adc
les
sub
lcall
mov
or
dec
and
mov
and
rcrb
sub
fldcw
xchg
xor
loopne
push
ds
and
xor
add
repz
sbb
add
imul
dec
jl
xchg
imul
cmpsl
add
sub
loope
mov
or
repz
adc
jecxz
add
dec
cmc
cs
fmuls
loope
lock
or
int3
sub
sub
cmc
test
sub
jno
add
gs
jmp
out
inc
mov
jb
sbb
mov
div
mov
mov
cwtl
fsubrl
fidivrl
mov
and
in
int3
adc
mov
xchg
test
mov
inc
xor
dec
pop
dec
xchg
lcall
cs
inc
xchg
in
inc
fs
push
in
jbe
mov
inc
adc
dec
inc
xor
mov
cld
into
imul
inc
and
out
pushf
push
cld
cmp
and
js
cmp
xchg
xlat
adc
sbb
jmp
fwait
inc
dec
mov
sub
int3
iret
mov
cltd
icebp
mov
or
add
ret
adc
rcrb
xor
mov
ss
out
mov
pop
fadds
push
mov
pop
inc
movsb
or
outsb
cmp
jns
pop
in
xchg
mov
addr16
mov
add
in
stc
out
mov
mov
cmp
out
mov
add
add
inc
pusha
push
js
add
xchg
mov
mov
mov
inc
push
xchg
popf
lds
jecxz
dec
fisttpll
fsubl
lahf
shr
add
mov
pop
das
cmpb
adc
pop
and
movsb
enter
mov
cltd
pusha
lods
out
fs
mov
lcall
jge
cmc
inc
cli
jb
loopne
mov
xchg
arpl
cmp
push
add
add
xchg
ljmp
sub
inc
sbb
jae
sub
xor
push
xchg
loop
inc
icebp
sub
in
cltd
lds
push
aam
mov
ret
je
jae
enter
daa
in
popa
push
ret
pop
test
and
pop
cmp
xchg
loope
fstl
push
insl
pop
push
into
je
scas
es
mov
arpl
push
aam
inc
cmp
push
rep
jmp
inc
loope
inc
aaa
das
cmpsb
nop
lods
mov
mov
gs
out
fistpl
sbb
stos
int3
mov
lcall
rorl
cmp
scas
test
les
dec
xchg
out
pop
iret
add
sub
jno
push
das
stos
out
cmc
and
fdivrl
nop
cwtl
inc
sub
dec
jo
out
test
loope
imul
sub
cmc
xchg
xchg
subb
loopne
stos
xor
in
sbb
mov
dec
addr16
fdivs
cld
scas
and
test
rcl
clc
pusha
in
push
scas
sbb
mov
arpl
mov
and
sub
jno
lret
mov
cmp
pop
adc
pop
das
inc
jne
jnp
sub
mov
jae
cmpsb
pusha
pusha
stos
movl
imul
xor
imul
out
sbb
jl
shrl
pushf
out
test
mov
ret
sbb
out
pop
mov
dec
test
mov
xor
push
sahf
or
call
sub
fdivrl
rorb
jo
jne
ljmp
subb
dec
dec
movsb
lret
popf
arpl
lods
mov
pusha
mov
data16
outsl
mov
or
repz
add
fcmovne
mov
sub
xchg
add
mov
cmp
add
and
mov
inc
sti
lock
movsl
mov
dec
jge
arpl
imull
pop
jl
jmp
push
test
jnp
xor
mov
dec
sbbl
arpl
loop
out
sbb
add
adc
cli
sbb
mov
hlt
enter
rcrl
sbb
mov
imul
pop
cmp
jo
xchg
push
and
repz
mov
sbb
scas
push
pop
pop
mov
pop
sbb
adc
dec
mov
inc
rclb
sahf
jns
xor
push
pop
jge
inc
add
scas
push
xchg
stos
xchg
popf
mov
xor
and
in
shll
mov
int3
xchg
lcall
dec
sub
jl
gs
cmp
mov
mov
lock
mov
popa
xchg
mov
inc
mov
leave
xlat
sub
test
sbb
imul
jb
mov
fdivs
jg
scas
cmp
pop
sahf
dec
adc
mov
js
pop
xor
je
ret
icebp
mov
cmp
xchg
cwtl
cmp
outsl
push
inc
mov
pop
sub
xor
fcomi
fs
inc
sarb
mov
sbb
sub
xor
aaa
jae
mov
sub
addr16
repnz
popf
into
or
pop
ficomps
xor
inc
push
xor
sub
mov
js
imul
cmp
push
test
popf
scas
mov
add
and
out
cli
push
or
ret
dec
mov
test
inc
mov
jns
pop
dec
outsl
cli
fs
lcall
mov
or
cmpsb
loope
es
xor
mov
xchg
or
mov
lds
mov
leave
mov
sbb
jb
call
hlt
fxtract
mov
and
icebp
fildll
repnz
dec
les
cmp
jmp
cmpsb
out
mov
add
mov
inc
mov
or
shrb
push
add
adcl
push
inc
cmp
les
adc
dec
adc
jo
stc
push
dec
adc
lea
jg
sbb
lods
jmp
stos
lcall
bound
lods
sub
outsl
xor
push
and
in
dec
jno
sbb
jge
adcb
pop
fildll
sub
shlb
loope
das
mov
adc
xchg
push
or
and
cmc
xchg
push
jge
mov
inc
imul
pusha
hlt
adc
or
add
xor
lods
aad
dec
adc
xlat
or
push
cmp
dec
stos
sbb
adc
clc
adc
sahf
in
jge
jae
sahf
test
pop
inc
ds
popf
mov
out
jbe
sbb
xor
cmp
jmp
paddq
dec
xchg
and
jb
mov
imul
and
jns
enter
dec
shll
mov
jno
pusha
cmp
push
sub
xor
inc
mov
xor
mov
fs
sub
mov
lahf
jno
mov
cli
outsb
pop
cmc
push
ss
mov
mov
cld
xchg
push
mov
jo
jbe
push
hlt
fsubr
mov
jp
rolb
cmpsb
or
mov
jbe
out
lock
adc
push
adc
sbb
test
into
in
mov
xchg
jg
xor
out
imul
jecxz
jns
sub
xchg
mov
xchg
loopne
notb
jmp
cmp
js
xchg
dec
xchg
inc
insl
es
mov
imul
test
push
sbb
scas
into
pop
push
testl
mov
jno
call
imul
out
adc
xor
jp
or
loop
outsb
in
or
movsb
mov
insb
sahf
fdivr
adc
aas
dec
rcll
aaa
cld
test
or
hlt
mov
inc
jno
lock
hlt
inc
data16
cld
call
fcompl
ljmp
sub
mov
stos
adc
mov
rorb
leave
data16
int
insb
sahf
or
ret
add
pop
in
sarb
push
loopne
aaa
xor
push
into
fcoms
das
or
enter
xchg
sub
enter
data16
mull
cld
dec
mov
jmp
lcall
xchg
popf
cmpsl
pusha
inc
call
jne
xor
adc
lahf
mov
sbb
test
lret
pop
pusha
and
mov
mov
lcall
mov
add
clc
scas
repz
icebp
sub
hlt
outsl
sahf
push
and
ret
cmp
dec
movsb
dec
mov
xorl
mov
ud2
loope
inc
fdivrs
bound
sti
lahf
pusha
dec
xor
add
lcall
inc
ljmp
adc
in
lods
sub
add
fnsave
jl
and
mov
jp
fcom
ljmp
lcall
mov
js
cltd
std
bound
push
fs
jno
insb
repz
pop
pop
arpl
loopne
xchg
es
stc
cmpsl
fdivs
enter
jge
adc
sub
mov
arpl
add
leave
add
xchg
les
adc
insl
push
mov
dec
sbb
int
xor
dec
add
sub
cld
insb
add
mov
dec
mov
and
rcr
gs
push
jmp
mov
cwtl
in
clc
jbe
or
lds
or
push
jne
xor
xchg
xor
lods
fs
mov
ljmp
out
jle
aam
adc
pop
mov
push
or
sub
or
push
cli
mov
inc
add
mov
sbb
add
jno
cmp
stos
adc
jbe
or
xor
movsl
push
jno
aad
push
pop
cmpsl
mov
sub
push
or
mov
out
into
pop
and
shlb
stos
adc
xchg
add
out
mov
lcall
xchg
lret
dec
xchg
inc
test
enter
ficoms
pop
and
push
mov
stos
mov
aaa
or
pusha
jae
cmp
sub
add
mov
cmp
sarl
daa
and
shr
jbe
repnz
xor
jae
rorl
shl
and
repz
movsb
fucomp
out
jbe
ljmp
xchg
xor
mov
out
jne
add
lea
bound
or
in
inc
mov
fdiv
adc
fs
mov
iret
je
cmpsl
fs
sub
inc
mov
ret
fistps
cmp
jmp
sub
inc
and
std
ss
test
and
sbb
xor
adc
mov
push
sub
test
lods
js
rol
fsubrs
lods
lahf
jne
xor
jae
push
sbb
cwtl
sub
ret
movsb
and
pushf
test
cmp
sbb
sub
outsb
jmp
adc
sub
or
mov
dec
out
cwtl
cli
inc
sarb
mov
push
mov
push
cmp
xchg
mov
mov
mov
sub
aas
out
int
cmp
addl
jp
nop
dec
sbb
inc
mov
cli
sbb
jae
sub
mov
push
jl
dec
data16
repnz
pop
pop
imul
ds
std
push
push
test
lods
dec
lgs
sbb
imul
xor
test
in
or
fnstenv
fnstenv
pop
push
jne
cmp
shll
bsf
sbb
insl
mov
lods
push
mov
or
test
cmp
xchg
iret
test
ret
mov
addr16
xor
jno
cmpsl
xchg
js
jg
into
fldenv
aam
or
insb
imul
or
sub
test
push
cmpsb
jae
sbb
test
xchg
mov
popf
push
adc
xchg
stos
test
mov
addr16
mov
mov
sbb
and
mov
sbb
sti
sbbl
ljmp
insb
in
in
repz
bound
repz
cmpsl
repnz
mov
sub
dec
insl
or
mov
mov
mov
es
fnstsw
push
movsb
jmp
sbb
xor
add
mov
aas
scas
fcompl
mov
fdivrs
add
cmpsl
xchg
iret
mov
mov
sbb
sub
mov
fisttps
inc
mov
pop
jae
sub
cli
push
and
add
adc
inc
dec
dec
mov
mov
movsb
les
adc
arpl
add
xlat
lods
in
push
test
hlt
test
fmuls
out
mov
jge
mov
cld
enter
mov
mov
ljmp
sub
mov
bound
mov
arpl
mov
push
int3
pop
cli
xchg
ja
jno
push
jecxz
sbb
xor
pop
xchg
in
mov
into
mov
pop
movsb
and
jecxz
push
lock
push
dec
clc
or
inc
xrelease
scas
sub
mov
insl
lods
pop
push
sub
fstpt
aaa
mov
add
sub
push
int3
data16
outsl
insl
jb
test
add
cmpb
and
ss
fistl
outsb
jbe
jmp
xchg
cmp
or
or
leave
xor
cmp
imulb
sub
cmp
mov
loop
outsb
cwtl
icebp
arpl
jnp
mov
mov
hlt
xchg
jo
adc
and
sbb
bswap
imul
les
sbb
push
lods
or
jns
jl
dec
iret
jmp
ja
mov
sub
addb
dec
inc
mov
xlat
data16
mov
das
cli
lods
adc
cwtl
jnp
ja
imul
dec
lods
ret
mov
xlat
sbb
outsb
add
mov
test
dec
lds
sarl
jne
or
loop
push
imul
and
sub
sbb
pop
pop
sub
xor
sti
dec
mov
xchg
xchg
arpl
mov
inc
das
push
test
shll
aaa
aam
ja,pn
push
add
arpl
adc
jl
lods
insl
cmp
jl
and
mov
test
loope
xor
inc
mov
in
push
mov
mov
dec
adc
mov
ja
dec
and
pop
bound
mov
cmp
xor
test
lods
iret
das
sub
icebp
mov
mov
nop
out
mov
out
stc
lahf
mov
push
in
fcomps
jecxz
dec
inc
insl
out
xor
into
test
fcompl
outsb
inc
and
push
jnp
out
push
jg
cmc
xor
call
fsubl
pop
pop
mov
dec
adc
sub
repnz
add
pop
xor
inc
sub
push
push
push
xchg
dec
jbe
adcb
mov
jns
xchg
xchg
out
ret
jmp
jae
mov
mov
orb
add
fsubrp
push
shlb
aad
aas
ljmp
mov
add
mov
aam
jmp
sti
orb
mov
cwtl
inc
pusha
in
jo
sub
sbb
insb
or
xchg
push
andl
sub
dec
mov
sarb
arpl
mov
repz
movsb
mov
jecxz
mov
mov
push
inc
or
testl
mov
xchg
adc
jl
xor
xor
testb
sub
jbe
iret
xchg
jb
popf
aam
andb
ret
jb
inc
iret
lods
pop
jg
ljmp
call
test
jbe
fcmovbe
daa
dec
mov
movsl
add
aad
sbb
add
push
mov
sub
imul
les
mov
push
jnp
inc
dec
jp
or
es
mov
imul
cmp
adcb
aam
adc
in
and
push
push
bound
loope
sub
fwait
aam
imul
into
push
jo
pop
repz
push
mov
push
aaa
pop
fdiv
push
and
sub
xor
xlat
clc
add
push
mov
add
dec
push
mov
fistpll
and
in
inc
es
in
pop
lcall
or
cmp
daa
adc
in
call
push
stos
aam
mov
subb
xchg
or
and
fbld
fistl
pop
je
insl
jmp
sbb
xor
call
xor
orl
ljmp
out
dec
inc
out
fmul
jge
lods
stos
shlb
sub
add
ss
cmp
pushf
inc
repnz
data16
pop
repz
adc
pop
das
add
cmp
jecxz
loop
imul
pop
testb
jge
or
add
sbb
mov
mov
lods
mov
shlb
cltd
or
cld
push
leave
xlat
jecxz
shlb
fdivrl
inc
and
mov
dec
movsl
lods
sbb
insl
enter
cmc
sub
les
pop
or
and
sahf
pop
push
iret
outsb
ja
xchg
stos
mov
stos
or
push
cmpsb
hlt
inc
into
subl
mov
ss
fstps
push
shrl
cmc
cmpsb
andb
cwtl
aaa
mov
xchg
cli
mov
sub
clc
ss
mov
xor
scas
mov
add
outsl
rep
mov
lret
push
or
fidivrs
lods
mov
push
dec
and
add
xor
movsb
adcl
dec
pop
jge
mov
inc
and
cmc
adc
ret
push
push
outsb
aaa
adc
pop
push
adc
pushf
and
out
lods
in
loop
sub
shl
jns
inc
xchg
cmpsb
imul
stc
mov
movsb
xor
xchg
inc
popf
bound
inc
inc
or
inc
call
mov
scas
repz
in
dec
cmc
xchg
pop
shlb
and
jb
push
out
test
push
ret
jecxz
adc
shll
pop
cld
xchg
fstl
pop
xor
sub
xor
pop
rorl
loopne
jge
fldenv
ficomps
xchg
iret
hlt
mov
or
je
movsb
mov
cmp
daa
into
repnz
pop
xlat
sub
bound
push
mov
icebp
cmp
fisubrl
lods
jmp
shr
fucomip
je
xchg
mov
pushf
testl
push
push
outsb
sbb
push
xor
negl
mov
mov
aam
pop
insl
jl
dec
lods
lret
xor
bound
dec
lods
fisubrs
les
sub
adc
stc
dec
dec
mov
pop
xchg
test
dec
cmpb
outsb
pop
lret
lcall
mov
test
into
shlb
lods
sbb
stc
mov
rcll
divl
ss
mov
and
movsb
push
fildll
sub
imul
xchg
dec
and
nop
add
call
fwait
pop
pusha
out
mov
ljmp
cmp
ds
imul
les
fldcw
adc
cli
jge
xchg
pop
dec
push
mov
mov
cmp
jecxz
in
dec
arpl
push
lock
cli
femms
push
pushf
xchg
gs
mov
iret
mov
cmp
or
aaa
xor
mov
adc
aaa
outsb
repnz
xor
mov
popf
stos
cs
mov
sub
fiadds
hlt
fs
int3
loope
shl
jp
push
dec
pop
inc
push
sbb
sbb
shll
enter
js
xor
sub
packuswb
push
ret
inc
xor
pop
cld
mov
addb
pop
movsb
fcomip
std
je
add
sarl
and
mov
mov
push
ljmp
cmp
and
movsb
add
sub
arpl
ljmp
mov
aad
dec
jge
clc
test
dec
xchg
mov
cwtl
or
mov
push
xor
inc
pop
ficompl
lods
repz
aaa
scas
ficoml
dec
xorl
xor
pop
dec
pop
dec
mov
clc
adc
xchg
daa
roll
mov
push
mov
mov
inc
sbbl
in
fwait
decl
xchg
hlt
cld
dec
adc
dec
popf
js
xor
cltd
mov
or
lret
xchg
in
dec
mov
std
pop
or
mov
nop
push
push
jl
mov
lea
mov
testl
or
pop
add
add
mov
mov
mov
aam
push
inc
ja
in
adc
dec
jecxz
adc
cld
pop
cmp
sub
mov
jp
push
lods
and
lret
fwait
ret
lcall
lcall
jge
push
fisttpl
mov
sahf
add
xor
pop
nop
xor
inc
adc
mov
inc
movsb
fisubrs
mov
xchg
inc
adc
enter
stc
arpl
mov
inc
push
scas
inc
iret
shrl
fprem
pop
mov
fldl
mov
stos
test
dec
inc
xchg
jge
or
cmpsl
jae
mov
pop
andl
movsb
nop
ds
jnp
das
sub
arpl
mov
pop
dec
push
xchg
push
push
in
insl
mov
dec
xchg
or
mov
sub
dec
out
mov
sub
adc
pop
push
movsb
mov
or
adc
mov
int
mov
out
mov
sar
pop
sahf
pusha
out
lret
jmp
int3
test
divb
adc
mov
sub
pop
push
inc
stc
arpl
pushf
enter
add
das
fsubl
push
lea
push
mov
jo
loop
sarb
sahf
jno
outsb
or
dec
push
repz
aam
xchg
aas
sub
mov
in
push
in
loop
sub
enter
cs
jns
fs
mov
lds
test
shll
bound
push
pop
pop
jmp
test
iret
out
out
jl
jo
data16
dec
lds
add
scas
mov
mov
xor
jge
loop
filds
cli
xor
xchg
inc
loop
mov
mov
loopne
or
pusha
cmp
jo
ljmp
data16
jne
xchg
xchg
int
aam
dec
pop
fcomps
mov
cmp
test
push
sbb
push
xchg
cld
mov
mov
fcmovu
dec
dec
cld
movsl
rcrl
ret
or
iret
jne
dec
jg
add
test
xchg
cmp
or
cmp
pop
dec
mov
adc
andl
push
mov
push
cwtl
pop
inc
outsb
jae
out
mov
in
repz
outsb
ds
xor
lods
mov
ret
cltd
repz
inc
sbb
popa
cli
mov
mov
into
jl
mov
stos
mov
lret
int3
jno
dec
mov
repz
shlb
inc
cmp
fidivrl
mov
xor
les
mulb
mov
loop
and
call
and
ret
sahf
jne
das
lods
mov
mov
and
mov
repz
and
loope
lea
iret
add
ret
mov
inc
xorb
and
aaa
cmp
inc
dec
stc
xlat
add
in
lcall
pushf
out
out
cmp
lods
push
js
arpl
xchg
test
mov
vpinsrq
std
orl
or
dec
call
call
cmove
mov
mov
iret
sbb
or
es
push
pop
adc
or
hlt
sub
outsb
shl
call
ret
add
lods
ret
lret
push
das
mov
add
mov
jge
mov
rolb
dec
add
xchg
daa
sub
test
or
cmpl
mov
lret
mov
movsb
cmp
cmp
sub
dec
loop
mov
cli
mov
je
mov
dec
lock
jp
xsetbv
push
test
xor
fdivp
pusha
sub
pop
push
add
repz
hlt
xchg
fmull
mov
jle
push
xor
ret
sub
lcall
test
inc
mov
icebp
lret
iret
repnz
sub
mov
push
imul
mov
test
aam
lcall
fstpl
cmp
add
scas
fidivrs
andb
push
or
xor
mov
mov
xchg
lea
mov
ss
sub
imul
lcall
scas
hlt
mov
js
lcall
std
daa
test
lea
shrl
fisttpl
sbbb
dec
mov
loope
jmp
addb
sbb
adc
inc
inc
in
test
xor
sub
fisubs
sub
lods
or
lea
cmc
pop
cmp
fisttpl
or
addl
mov
cli
add
andb
cmp
mov
cli
push
lods
pop
in
xchg
push
imull
adc
or
push
dec
es
xor
push
push
pmulhw
inc
cld
lahf
lds
lea
loopne
mov
sti
stos
mov
ret
pop
push
fidivs
mov
aad
pop
cmpsb
aam
ret
mov
lret
outsb
mov
xchg
dec
mov
into
push
dec
bound
movsb
xchg
inc
jae
xor
xchg
and
push
push
loope
insb
aam
mov
rorb
jge
or
sub
xor
hlt
hlt
sbb
aas
sbb
sub
dec
inc
and
dec
inc
or
mov
mov
out
pop
mov
mov
mov
ss
aam
cltd
and
repnz
das
xchg
gs
es
cmpsl
push
out
cld
xor
sub
lret
mov
repnz
aam
pop
aaa
cmp
mov
xchg
pop
jae
jae
repnz
adc
call
dec
mov
fwait
mov
inc
lods
cmc
fdivrl
lds
sti
lcall
leave
dec
cli
push
rclb
iret
xor
int3
mov
xchg
movsb
mov
ljmp
jle
dec
push
sub
scas
mov
dec
xor
xchg
outsb
enter
loopne
add
mov
out
je
push
data16
test
mov
push
xor
add
sub
and
jae
or
sub
push
andl
incb
ljmp
sbb
mov
inc
xchg
mov
mov
stc
ljmp
lcall
inc
pop
addr16
jmp
xchg
stos
add
dec
add
leave
imul
inc
ja
or
and
add
sub
rclw
sub
xchg
jb
enter
cltd
scas
sti
jb
xlat
dec
orl
ss
pop
dec
cmp
sub
retw
ds
xor
cs
ret
sub
inc
xchg
or
fsubs
popf
jno
adc
mov
shlb
cmc
ret
fadds
pop
outsb
mov
xchg
cs
jns
inc
out
mov
lods
fstp
pop
iret
fistpll
sarb
jnp
jb
mov
ljmp
loope
enter
in
push
mov
sub
mov
nop
adc
outsb
sub
es
inc
fs
dec
hlt
dec
mov
stc
pop
gs
jns
lock
or
test
mov
cmp
cld
data16
xor
jp
cmpsb
popa
inc
lock
outsb
push
inc
jge
aad
mov
xor
inc
shrl
jno
jl
push
fcomi
pop
testl
js
jle
cmpsl
add
dec
testb
ret
jbe
mov
fiaddl
daa
mov
mov
test
jbe
dec
les
jns
fdiv
outsl
lods
ret
ficoml
sbbb
outsb
cmp
repz
shrb
movsb
inc
mov
pop
hlt
pop
add
cmpsl
push
jge
pop
stos
repnz
hlt
jb
pop
mov
test
scas
insb
jno
pop
scas
out
cmp
add
push
jmp
mov
sbb
addr16
adc
sarl
jmp
ficomps
lock
outsb
lods
mov
les
aas
adc
cmpsb
mov
roll
or
mov
mov
cmp
mov
push
inc
adcb
out
xor
mov
hlt
out
and
arpl
ret
pop
push
sbb
inc
push
sub
loopne
mov
bound
add
aaa
dec
add
push
ds
aam
mov
xlat
decl
cmp
or
lcall
mov
add
xchg
loope
shll
lcall
insl
sub
push
pop
movsb
jae
push
dec
add
xlat
xor
sub
inc
stc
dec
xchg
push
mov
mov
push
test
add
add
rcrl
push
cli
mov
stos
test
sbb
and
ja
and
push
adc
dec
lods
roll
pop
mov
sbb
adc
scas
jns
fisubl
add
stos
or
mov
movb
xor
outsb
push
lods
or
dec
dec
and
cmpsl
mov
mov
es
out
add
mov
jl
mov
sub
push
and
add
data16
dec
mov
mov
cwtl
mov
movsb
imul
dec
jl
outsb
notb
add
sahf
repnz
cmpl
jb
push
pop
les
test
das
mov
movsb
dec
push
jle
stos
dec
jb
fpatan
movsb
test
icebp
movsl
adc
inc
mov
xchg
ja
movsb
inc
outsl
add
jae
adc
lahf
jno
inc
fadds
mov
pop
out
scas
cmc
sbbb
stc
push
inc
pushf
lea
pop
sub
or
inc
into
mov
cmp
xchg
fsts
jo
dec
das
mov
hlt
jo
push
dec
aaa
jns
insl
xlat
mov
xchg
ffreep
add
fxch
lret
inc
rcr
sbb
mov
cs
xor
add
inc
in
mov
lods
fisttps
lds
mov
and
int3
pop
dec
dec
jo
push
mov
fs
adcl
xchg
in
mov
xor
iret
jmp
addr16
mov
insb
popa
push
in
push
and
jmp
lcall
mov
je,pt
cmp
rcrl
push
jge
test
sub
mov
nop
fldenv
or
add
mov
shll
lods
cmp
cli
and
addb
mov
mov
mov
ret
or
pushw
push
in
sahf
xchg
sub
popa
add
sub
movsl
out
test
ja
and
pop
or
mov
mov
repz
clc
lret
xchg
repnz
mov
mov
cltd
xor
cli
sub
lcall
add
out
adc
imul
cmpsb
push
pop
mov
push
dec
sbb
mov
shll
push
insb
mov
in
loope
jbe
in
jmp
lret
dec
sbb
jmp
xchg
inc
mov
mov
push
in
adc
mov
jl
outsl
movsb
bound
and
adc
andb
out
mov
into
arpl
xlat
popa
imul
push
in
iret
push
loop
fmull
mov
pop
ret
imul
outsb
lods
bound
clc
adc
jmp
addr16
or
inc
dec
push
in
rcrb
sub
stos
imul
les
inc
jge
clc
andl
stos
sti
mov
sub
jl
ss
jg
mov
adc
dec
jg
in
push
jns
out
repz
stos
or
xchg
mov
and
mov
lcall
sbb
shlb
jb
aad
mov
or
sub
jno
pop
push
aam
outsl
rorl
jb
fmull
mov
xor
fbld
repz
xchg
sub
popf
pop
inc
sub
scas
push
xchg
xor
ss
idivb
adc
insb
sub
nop
dec
cmpsl
call
xchg
cmpsb
push
inc
push
sbb
xchg
ret
lock
sbb
out
idiv
insl
test
daa
repnz
inc
inc
enter
push
je
cmp
movsb
push
mov
js
aas
bswap
stos
popf
jno
in
mov
xor
inc
outsl
ss
mov
sbb
insl
into
fwait
xor
pop
xchg
jns
or
inc
push
mov
adc
dec
xor
imul
repnz
and
push
std
pushf
lret
push
push
aas
in
fcmove
scas
insb
mov
gs
cmp
stos
jb
lock
cmp
mov
leave
xchg
sbb
ss
mov
mov
cs
insb
ret
les
jmp
cltd
movsl
aad
mov
int
pop
ficomps
sbb
xor
mov
adc
ficoms
and
inc
insl
jp
jae
sub
xchg
lods
aad
packuswb
mov
push
push
popa
xchg
shlb
movsl
icebp
fmuls
mov
inc
add
mov
ds
icebp
xorb
in
xchg
fmuls
push
xor
jmp
mov
fsub
lcall
stos
adc
adc
or
dec
mov
ljmp
loope
jae
cmpsl
insb
mov
pop
adc
icebp
gs
ljmp
mov
add
lods
sub
xchg
mov
cld
pop
fidivl
push
pop
sbb
cmp
adc
rcrl
adc
scas
sub
arpl
push
jmp
xor
or
or
adc
jp
fists
gs
and
push
mov
mov
lret
stos
cli
cmpsl
sbbb
shll
push
and
adc
mov
mov
sahf
stos
cld
pop
dec
fdivl
ss
push
sub
ss
lods
dec
addr16
pop
adc
inc
fs
ret
bound
fmuls
mov
outsl
add
roll
pop
mov
push
andl
xor
dec
xor
jo
out
push
jno
xor
push
fdivs
fs
pop
inc
in
ret
jnp
fbld
adc
inc
add
mov
stos
sahf
dec
xchg
pop
pop
sub
sbb
dec
aam
in
sbb
je
or
jns
js
xor
ss
cmp
test
sahf
push
scas
test
outsb
mov
cmp
inc
xchg
and
sub
push
scas
not
cmc
push
dec
push
lret
push
das
dec
fyl2x
cmp
push
adc
pop
pop
outsb
mov
xor
push
loop
mov
lock
imul
cmpsl
sub
ljmp
push
and
lock
pop
test
negb
lret
mov
fimull
pop
das
stos
mov
in
loope
call
stos
mov
daa
sbb
jle
add
sbb
hlt
arpl
add
fwait
or
inc
adc
push
sti
adc
out
ds
mov
cli
test
dec
mov
js
pop
out
jbe
dec
addr16
pop
data16
cmpsl
dec
sbb
jle
adc
sub
xchg
call
sahf
add
nop
mov
push
ljmp
lock
je
fdivs
mov
into
and
aam
pop
cmp
cli
jb
or
insl
push
dec
jp
hlt
outsl
rclb
je
lods
dec
or
cmc
stos
sbb
fs
mov
dec
add
and
push
dec
and
sub
and
xchg
jp
xchg
push
out
mov
cmp
mov
aad
xchg
cmpsb
inc
arpl
outsb
rolb
mov
xor
jnp
fs
orl
lods
mov
or
xor
enter
cwtl
movups
add
decb
loope
inc
sbb
loop
movsb
and
cmc
stos
mov
dec
filds
scas
shll
mov
mov
jmp
stos
mov
xor
push
add
or
add
jmp
adc
enter
movsb
mov
fcoml
dec
stc
sbb
or
sahf
aad
mov
adc
xchg
mov
fdivs
in
lock
daa
add
repnz
ret
jp
mov
movsl
jge
test
sub
cmp
imul
mov
adc
cmpsb
cli
sbb
add
shrl
cs
cmc
lods
je
test
jg
subb
dec
add
pop
cld
mov
mov
jg
sub
scas
add
xchg
cmpsb
mov
call
adc
loope
cli
repnz
dec
xor
xor
stos
jnp
sub
mov
mov
add
or
xor
cmpsl
sbb
mov
pop
mov
mov
jl
lock
lds
and
lods
push
jne
jno
ds
mov
adc
and
scas
mov
call
push
xchg
into
inc
aam
jecxz
in
cmc
movb
sbb
push
mov
add
call
jmp
mov
xchg
jne
push
ljmp
test
hlt
ret
inc
loopne
adc
test
repnz
enter
lcall
stos
dec
jo
cwtl
cmp
movsb
jmp
fisubl
pusha
test
sti
repz
ljmp
sub
pop
rorl
cmp
call
jp
mov
pop
inc
and
sahf
push
xchg
cmp
jle
dec
scas
shlb
dec
xor
ret
cmc
cmp
lea
xchg
jbe
dec
test
push
xchg
mov
rcrl
pop
fdivrl
mov
inc
fiadds
int3
inc
xchg
cmovb
or
mov
add
sti
push
testl
add
inc
push
cmc
adc
cs
dec
call
mov
stos
mov
sub
xchg
mov
les
cmp
or
mov
push
test
xchg
xor
lret
int
outsl
xor
outsb
fidivs
or
sbb
mov
sub
add
mov
rolb
mov
mov
jmp
movsb
jo
push
jmp
out
cltd
pop
pop
dec
aam
pop
sub
mov
lret
cli
icebp
jb
push
lahf
lds
and
xor
dec
xlat
jbe
sbb
adc
pop
sbb
call
js
xchg
push
push
in
fsubp
sti
daa
rcrb
xlat
xor
sub
andb
popf
jmp
sbb
push
std
sub
clc
push
ret
sbb
and
incl
imul
out
loopne
pop
or
or
and
ss
jbe
stos
aam
inc
sub
mov
dec
cmp
mov
add
inc
pop
jecxz
shl
push
cmp
cmp
sub
push
mov
sbb
lcall
sub
cmp
ret
push
mov
mov
xchg
push
cmp
sbb
mov
jge
jno
and
ljmp
mov
bound
adc
mov
pusha
icebp
jno
mov
pusha
arpl
cli
pop
clc
out
sbb
je
andb
fwait
xchg
jecxz
aas
xchg
jne
sbb
xor
test
mov
pop
dec
jmp
out
movsb
cltd
dec
push
mov
cltd
pop
fsubrs
xor
mov
sub
fdivrp
add
and
push
pusha
pushf
mov
push
fdivrs
mov
daa
cmpsl
jo
aam
fists
ret
scas
leave
scas
cld
sub
add
aaa
aam
or
fdivs
push
jb
mov
xchg
jns
cmp
push
clc
es
call
or
in
sbbb
dec
sarb
jne
pushf
sub
mov
sub
daa
aaa
dec
sbb
push
mov
jb
sbb
mov
pushf
xchg
xor
mov
inc
out
mov
sbb
fdivs
popa
test
or
pusha
lret
cwtl
cmp
fdiv
shlb
scas
and
sbb
dec
subb
cli
adcb
stc
fs
sub
and
frstor
iret
xchg
adc
mov
push
into
and
mov
push
sub
cmp
inc
jne
les
stos
jmp
or
sar
push
lcall
out
jge
mov
xor
dec
call
add
dec
cmp
xchg
and
std
roll
lds
dec
dec
xor
aad
mov
sbb
or
int3
cmp
in
les
punpckhbw
dec
fmulp
adc
pop
sbb
ds
stc
mov
and
add
xchg
scas
mov
out
xor
xor
out
aaa
addl
sbb
ret
xchg
mov
sub
pause
sti
cwtl
iret
repnz
ret
and
pop
movsb
add
int
mov
out
jp
cli
jae
cs
jae
popf
addr16
pop
pop
scas
testl
xor
sub
lock
stos
cmp
iret
mov
pop
jae
loopne
mov
sub
jnp
cs
dec
and
inc
lds
outsb
lods
sbb
xchg
pop
mov
mov
popf
sbb
dec
mov
nop
popa
scas
and
mov
shrl
xorl
sub
xlat
gs
jnp
adc
out
mov
aam
repz
out
xor
insl
and
xchg
sarl
shll
insl
outsb
push
cmp
and
xchg
mov
stos
roll
mov
jb
imul
inc
or
xorl
data16
outsl
pop
adc
pop
mov
dec
arpl
xor
sub
rcll
repz
gs
push
test
fdivr
mov
push
out
sbb
in
adc
lds
adc
mov
mov
sahf
push
in
cld
mov
cwtl
iret
aam
or
stos
scas
jmp
into
dec
xchg
mov
inc
jp
fsubrp
jmp
nop
jmp
push
lahf
jb
dec
test
ret
add
sbb
mov
movsb
adc
sbb
iret
outsb
xlat
jns
sti
pop
andb
test
outsb
nop
xchg
mov
imul
and
enter
cwtl
les
popf
les
cmpsb
push
push
cmp
cwtl
aas
outsb
fnstenv
xchg
in
mov
dec
push
mov
inc
adc
xor
icebp
xorl
inc
sbb
dec
and
push
insb
outsb
leave
cltd
cwtl
mov
lea
outsl
loope
sub
xchg
adc
cltd
cmp
fsubl
data16
mov
and
jnp
add
mov
cmpsb
push
shll
xchg
sarb
fsubs
push
dec
js
pop
sbb
test
push
lds
pop
pop
pusha
cmovae
push
std
stos
dec
stos
out
cli
fs
xorb
aam
dec
inc
stc
mov
rclb
pop
je
cltd
dec
pop
mov
jo
fildll
mov
jle
mov
add
jne
push
pop
outsb
push
insb
mov
add
mov
mov
and
mov
fldt
cli
stos
mov
loope
subb
xchg
inc
cmp
fisubs
cli
jge
repnz
xchg
fwait
subb
jo
pop
movsb
sub
je
mov
fdivs
loope
and
insb
mov
aam
addr16
outsl
das
add
fcoms
xchg
fdivs
adc
sbbb
add
jbe
fisubs
ja
adc
mov
test
je
test
call
or
pop
sub
addr16
cmc
pop
aaa
sub
adc
push
ss
lret
push
mov
ret
idivb
shlb
mov
lret
xor
js
jmp
insl
and
repnz
sub
ja
movsb
fs
shll
jge
mov
adcb
xor
stos
lock
add
mov
mov
ljmp
push
movsl
dec
idiv
mov
lods
dec
inc
and
loopne
xchg
subl
pop
sbb
push
pop
mov
dec
punpckldq
xchg
ljmp
and
into
icebp
mov
mov
int3
push
inc
push
jb
jno
stos
data16
das
mov
int
sub
and
arpl
arpl
xbegin
outsl
in
jp
in
sub
mov
jmp
ja
das
pushf
lods
mov
imul
adc
push
inc
movsb
xor
mov
stos
fisttpll
cmp
pop
in
jb
popf
aam
lds
dec
movq
mov
movsb
clc
pop
faddl
jle
mov
push
jecxz
lcall
sub
cmc
pop
mov
sbb
or
scas
ss
sub
leave
inc
jo
lock
cmpsb
jbe
jns
aad
mov
mov
cmpsb
lret
lds
jmp
aas
or
popa
jb
xor
aas
jbe
mov
sbb
je
mov
jbe
and
lcall
push
pop
mov
clc
loope
or
js
mov
icebp
mov
mov
mov
and
sarl
ret
push
adc
mov
mov
pusha
je
mov
cmp
xchg
mov
jb
je
aad
mov
adc
adc
lahf
sbb
sub
sbb
arpl
jge
out
mov
test
mov
pop
xchg
push
stos
mov
leave
xor
mov
out
call
adc
adc
adc
push
mov
stc
push
push
das
imul
jo
push
stos
xlat
outsb
ljmp
stos
test
fldcw
leave
icebp
mov
xchg
sub
and
jns
fcomps
xlat
push
shl
mov
ljmp
jns
fsts
aam
push
jbe
inc
pop
mov
inc
out
xor
xchg
fwait
mov
sbb
fisubl
ss
sub
rcrb
push
dec
mov
loope
mov
and
dec
push
pop
lret
adc
mov
adc
dec
add
insl
ljmp
push
lods
hlt
dec
or
jecxz
mov
xchg
insl
and
pop
shl
pop
jb
fdivs
out
xor
fimuls
cmp
jmp
push
add
jmp
sbb
fmull
mov
jbe
adc
pop
orb
andl
scas
enter
dec
and
pop
dec
stos
push
xor
popf
mov
pop
cli
and
xor
or
daa
cmp
insl
mov
scas
movsb
scas
push
sbb
loope
lods
shll
out
jmp
add
iret
mov
aam
pop
jbe
pusha
loop
pop
lcall
mov
insl
mov
xor
jae
mov
fs
xchg
add
mov
xor
mov
movsb
sbb
out
out
push
fmull
mov
into
lods
jnp
add
out
out
arpl
js
sub
dec
subb
cli
or
in
call
pop
inc
push
into
pop
mov
cmp
scas
in
loope
in
inc
loop
pushf
out
push
xchg
mov
xor
mov
dec
cld
pop
loop
pop
mov
mov
mov
lods
movdqa
push
fcomps
xlat
sub
das
rclb
inc
adc
jge
sar
adc
and
lods
ret
sbb
call
dec
rclb
ret
mov
push
lods
int
mov
xchg
ljmp
movsb
popf
jns
inc
mov
push
movsl
push
xlat
stos
pop
cmpsl
push
mov
mov
fimuls
push
iret
sbbb
dec
add
adc
jmp
pusha
mov
roll
sbb
scas
sbb
cwtl
outsb
dec
inc
lods
sbb
push
sbb
popf
les
sub
add
push
test
gs
or
enter
bound
mov
inc
jae
dec
ds
scas
jbe
pop
ret
cmp
mov
rcrl
adcl
pop
sub
xchg
aad
push
push
or
dec
cmp
pusha
adc
add
inc
lea
popf
mov
mov
popa
fwait
dec
repnz
outsb
push
xchg
jbe
fisubl
xorl
in
hlt
cmpsb
divb
test
push
adc
out
xor
mov
sub
jno
add
das
and
mov
xchg
push
sub
jne
add
cs
sub
lods
jb
push
push
sub
mov
jno
jb
push
outsl
dec
ret
dec
popf
bound
sbb
adc
or
hlt
jnp
sub
jno
jae
push
pop
dec
in
dec
adc
shr
xor
scas
sarb
movsl
xchg
jno
leave
test
clc
mov
mov
push
xor
mov
add
out
add
adc
xchg
int3
inc
sahf
nop
pop
pop
and
xchg
ja
sub
movsb
sbb
and
push
out
mov
inc
sub
sbb
aaa
fdivl
cmc
and
loope
push
cmp
sahf
push
mov
lods
andl
outsl
orl
xor
sub
add
aam
ret
movsb
mov
push
lret
aas
cmp
cmp
inc
dec
or
ret
pop
popl
cltd
push
cs
pop
fidivs
and
mov
sbb
jmp
stos
insl
cmc
mov
inc
sbb
cmp
adc
in
nop
pop
push
mov
mov
jmp
inc
xchg
rorb
xchg
pop
jnp
and
mov
aaa
enter
sbb
lcall
mov
push
and
fdivr
icebp
bound
dec
pop
xor
mov
ret
leave
xlat
mov
sub
sbb
lds
jns
shrl
xchg
xor
push
push
or
fimuls
xorb
lock
push
stc
fsubrl
es
call
mov
sub
cmp
loope
rorb
fstps
popa
mov
ljmp
in
mov
aas
mov
pop
pop
fucomp
enter
adc
stc
mov
mull
jle
dec
mov
fsubrs
lods
in
test
xchg
mov
in
mov
addr16
push
clc
mov
ds
enter
outsb
add
jbe
mov
mov
cmpsl
mov
daa
sub
mov
push
lea
into
lcall
insb
hlt
ret
clc
pop
inc
leave
cwtl
fisubrl
mov
fistps
mov
in
movsb
repnz
sbb
mov
in
jge
repnz
sbb
push
pop
sbbb
cs
movsb
mov
imul
lcall
mov
in
outsb
xchg
notb
das
jno
pusha
nop
fisubs
and
inc
mov
sub
fildll
data16
cmp
inc
pushf
mov
push
or
insb
jl
sub
jbe
pop
shlb
or
das
fistpll
cmpsb
push
sub
sarl
aaa
jp
mov
xchg
movsb
jl
ds
les
cmp
jmp
pusha
dec
les
fnstenv
inc
loop
fcmovnb
push
sub
mov
mov
fwait
in
and
rcl
push
scas
mov
cmp
jae
leave
stos
fbstp
xchg
cmc
iret
hlt
mov
pop
sub
add
mov
pop
aaa
test
shll
out
xchg
stc
mov
ljmp
into
inc
pop
pusha
mov
mov
pop
sub
xor
arpl
mov
mov
fcompl
or
adc
cmp
movsl
sub
mov
lods
mov
add
jbe
inc
cli
jb
pop
cmp
cmpl
mov
gs
jns
cld
push
fidivs
ja
sub
repz
ret
xchg
pop
ss
xor
into
test
dec
in
push
add
dec
push
mov
xor
les
repnz
inc
hlt
test
pop
push
jmp
xchg
adc
mov
out
hlt
jb
enter
and
repz
roll
mov
js
mov
stos
scas
cli
lea
mov
sub
js
in
jns
stos
lods
mov
mov
popa
lods
mov
outsb
xchg
adc
mov
inc
sub
enter
jne
xor
scas
sbb
xor
mov
popa
cmc
ret
stos
pop
mov
xor
mov
nop
cwtl
xor
loop
jno
mov
mov
and
inc
dec
icebp
inc
sahf
scas
fiadds
cwtl
lods
mov
push
addb
xor
fmuls
push
or
in
pop
push
adc
mov
push
je
push
fs
jge
xchg
sub
test
aaa
pop
jnp
xchg
test
jbe
aam
in
repnz
jno
imul
mov
inc
divb
jne
mov
pushf
lea
mov
scas
shlb
mov
sub
mov
cs
sub
jne
pop
jae
in
in
pop
repz
push
arpl
movsb
andb
dec
adc
push
xchg
jge
push
shrb
fs
jp
mov
stc
mov
fiaddl
movsb
mov
jge
cmp
push
xchg
adc
aaa
inc
xchg
mov
out
int3
mov
stos
pop
pusha
sbb
fistps
inc
mov
jbe
movsl
fiaddl
popa
scas
mov
or
adc
mov
in
cli
sbb
mov
sbb
mov
test
pop
mulb
mov
lcall
push
lcall
dec
pusha
aam
xchg
scas
insb
mov
in
iret
cmc
je
lock
lret
jo
mov
dec
setge
rcr
lods
shrb
lods
repnz
inc
jp
mov
leave
add
add
nop
jmp
sbb
xor
test
mov
sarl
push
xchg
test
cmp
push
cli
out
xor
call
xchg
inc
xchg
push
mov
push
jne
stos
inc
inc
inc
mov
jns
xor
idivl
fnstenv
adc
mov
loope
lcall
mov
rcrb
adc
push
cmpl
push
sbb
std
xor
testl
arpl
mov
js
push
pop
mov
imul
popf
xor
mov
andl
push
cmpsb
jl
imul
cmc
andb
adc
inc
xor
or
sbb
call
dec
push
lods
cmpsl
sbb
aam
hlt
lahf
popf
mov
mov
das
test
push
sbb
sbb
cmp
ret
push
xor
jecxz
push
fdivs
cmpsb
out
and
push
insb
jmp
pop
jp
mov
sti
mov
testl
test
jecxz
in
push
sarl
outsb
xor
iret
jns
in
out
sub
ds
jge
je
shlb
cmp
pop
jne
cmp
jo
insb
dec
inc
mov
ret
mov
dec
je
aaa
inc
repnz
mov
pop
pop
mov
and
dec
push
mov
idivb
fdivrl
andl
inc
inc
sbb
pop
and
xchg
inc
test
adc
loop
stos
nop
cld
push
sbbl
out
cli
jbe
xchg
push
mov
mov
or
and
jecxz
cld
stos
mov
subb
mov
sub
dec
xlat
sub
insb
in
cmpsl
iret
lcall
stos
in
pop
dec
jg
xchg
stos
mov
dec
jmp
movsb
js
jecxz
jp
pop
popa
daa
inc
dec
movsl
ss
or
mov
fdivl
imul
stos
cmp
inc
icebp
lret
fxtract
sti
push
call
and
push
push
data16
sub
fisttpl
in
scas
cmc
mov
xor
sarb
nop
mov
push
xor
adc
pop
les
repz
dec
leave
popf
in
mov
mov
mov
mov
push
dec
stc
pop
ss
and
lahf
sarl
test
repz
stos
push
movsb
pop
inc
ret
sahf
shlb
add
ss
mov
push
dec
or
enter
sub
jp
sub
mov
mov
push
daa
jae
pop
mov
cmp
icebp
mov
push
test
stos
stos
mov
rcll
lret
sub
rorb
test
addr16
pop
bound
xchg
xor
in
xchg
aas
jecxz
or
jne
fcomps
sub
mov
dec
stc
add
xor
outsl
aas
mov
add
lcall
xchg
enter
sbb
mov
fsubrp
dec
cld
dec
sub
mov
xor
jns
push
adc
ja
ja
mov
add
sti
in
cmp
jno
fcoml
repz
int3
push
pusha
imul
xchg
ret
cli
int3
sbb
stos
lock
scas
movsb
xor
jb
ret
mov
inc
call
jg,pn
imul
aam
sub
stos
cmpl
sub
out
xchg
cwtl
test
dec
push
test
mov
mov
jmp
inc
push
mov
push
enter
mov
adc
shlb
mov
push
movsb
pop
push
arpl
mov
sbb
ds
ret
xlat
mov
or
sar
sbbl
push
jns
add
decl
mov
xchg
dec
imul
gs
fcompl
inc
inc
sbb
daa
lods
lods
and
test
loope
or
sub
sub
jmp
ss
insb
std
add
mov
jnp
clc
lcall
addl
fsubp
push
push
cwtl
lret
daa
pop
es
xchg
push
std
nop
add
aad
push
flds
scas
mov
mov
lcall
and
mov
push
cli
jl
adc
xchg
lds
xchg
push
mov
cmp
xlat
push
sbb
adc
adc
movsb
pop
cmp
jb
movsl
enter
iret
pop
xchg
repnz
jns
divl
repz
ljmp
fwait
add
xchg
push
and
and
mov
add
or
aas
mov
jnp
xor
ss
daa
adc
jb
movsb
popf
xor
mov
ja
jbe
ljmp
mov
test
sub
sbbb
cmpsl
hlt
mov
nop
inc
outsl
ds
imul
dec
fisubs
or
rcr
xor
movsb
fs
rol
int
jae
add
inc
xor
or
cmpsl
cmc
mov
push
adc
movsb
arpl
add
mov
dec
sbb
fldcw
mov
mov
scas
and
sbb
jb
imul
xlat
call
adc
in
mov
pop
test
add
sub
enter
adc
sbb
jb
das
pop
mov
xchg
into
mov
arpl
das
aad
addr16
mov
xchg
xchg
repz
dec
int
jae
imul
lods
xor
mov
in
mov
mov
mov
mov
adcl
push
and
test
push
insl
dec
cld
bound
jb
jl
mov
aaa
sti
push
scas
lods
sub
test
nop
pop
and
push
repnz
jle
adc
push
xchg
xor
push
or
fs
lret
xchg
or
add
lods
sbb
inc
jnp
dec
mov
clc
and
fwait
xor
dec
mov
icebp
push
fs
mov
aaa
popf
push
cli
movsb
sub
shlb
sub
dec
pop
xchg
push
loop
jb
sub
xchg
les
orl
mov
mov
push
in
mov
lds
out
nop
lret
dec
call
and
jno
add
hlt
into
jl
jne
sbb
imul
and
gs
int
xor
test
les
aas
or
into
push
mov
xor
mov
mov
xlat
mov
lods
push
rcl
xor
mov
pushf
inc
dec
hlt
repnz
or
pusha
jge
pop
cmp
lods
lret
or
and
repnz
subl
xor
insb
insb
cmpsb
lods
and
mov
mov
xor
pop
add
cmp
jl
imull
iret
xchg
ret
and
out
sub
jl
insl
je
int
pop
adc
sbbb
sbb
dec
mov
push
hlt
and
push
lret
mov
mov
adc
stos
ljmp
mov
xor
jmp
loope
sub
lea
orl
unpcklps
adc
xlat
ljmp
out
mov
in
cmpsb
hlt
outsb
jmp
out
addl
enter
sub
lock
jp
jno
ror
out
mov
inc
lods
fwait
dec
mov
xor
cmp
mov
inc
or
and
cmpb
test
aad
rep
ljmp
iret
shrb
mov
ror
cmpsl
fildl
mov
pop
lods
and
aad
cmp
mov
addl
push
pop
ret
rclb
inc
sbb
mulb
gs
sbb
mov
divb
ss
xor
dec
dec
shlb
mov
inc
sti
loopne
mov
cmp
stos
lods
jbe
jl
addl
ljmp
push
mov
cmp
int
insb
jno
jge
mov
push
adc
and
mov
scas
or
ljmp
mov
out
cld
lods
sbbl
test
lock
jecxz
das
push
or
add
jb
jae
jno
mov
mov
pop
mov
ss
sub
inc
ljmp
xchg
xchg
iret
and
mov
or
lds
pop
and
sbb
xchg
stc
mov
xchg
xchg
lahf
xchg
dec
xchg
insl
fldt
add
push
and
fs
sbb
mov
lods
aad
out
pop
imul
or
sub
dec
and
add
test
loopne
out
not
xor
jns
jp
push
jbe
cs
jae
int
xchg
push
mov
fisubrl
popf
push
sahf
mov
adc
std
xchg
xchg
push
inc
lods
mov
pop
mov
lcall
shl
xchg
add
stos
jae
imul
es
outsl
inc
inc
out
push
mov
dec
sahf
jns
mov
mov
js
addl
xchg
gs
ficoms
push
punpckldq
adc
cmpsb
outsb
xor
xor
pop
mov
mov
bound
jae
sbb
push
adc
push
lahf
or
addl
rclb
xor
ss
jg
daa
imul
inc
test
dec
stos
mov
push
xchg
cwtl
bound
and
cmpl
lods
dec
cli
cmpsb
xchg
cld
clc
pusha
pushl
add
push
aam
gs
mov
ret
and
into
les
push
add
iret
mov
adc
in
psubsb
push
adc
sub
mov
inc
loope
loop
cld
pcmpeqb
insl
pop
in
sbb
addr16
xor
icebp
pop
jns
imul
cmpsb
sbb
mov
shlb
or
xor
stos
push
mov
push
sbbl
call
nop
push
xor
adc
dec
pop
add
outsb
lods
adc
cmpsb
out
stos
insl
xchg
jns
push
in
mov
mov
sbb
mov
into
lret
or
adcb
sbb
ss
inc
jl
stos
mov
add
outsb
aaa
push
bound
decb
pop
mov
inc
movsb
int
inc
std
jb
mov
jnp
ret
cmpsb
movsb
xor
jbe
shrl
inc
push
je
adc
out
iret
mov
lret
adc
pop
mov
jns
dec
pop
pop
pop
add
rorb
inc
sub
shll
xor
ja
xor
fmul
call
enter
xchg
xchg
movsb
mov
notl
call
mov
pop
das
sbb
jnp
push
inc
push
pop
addb
jmp
dec
testl
sub
cld
scas
add
cld
push
xchg
sub
xor
xchg
test
popf
xor
pop
mov
adc
lods
aas
sbb
lahf
xor
add
stc
push
aad
fdiv
jb
ficompl
lods
mul
test
push
sub
mov
sahf
dec
insl
rcr
mov
xchg
addr16
stos
imul
mov
adc
add
add
and
mov
xchg
lahf
call
orl
inc
mov
imul
xor
in
mov
and
cmp
add
inc
mov
push
xchg
repnz
bound
and
xchg
inc
js
and
test
test
mov
ret
fwait
test
push
or
xchg
mov
mov
in
mov
bound
int
pop
hlt
sub
jbe
push
movsb
daa
iret
pop
fsubrs
sbb
mov
jnp
outsb
jno
mov
xlat
sub
mov
bound
and
lds
inc
pop
jmp
push
imul
pop
add
lock
mov
test
inc
pop
ror
push
sahf
jne
scas
shlb
adc
rcll
inc
stos
add
xor
outsl
mov
cmp
dec
into
sub
aaa
outsb
ficompl
iret
mov
jno
ret
fdivr
mov
jns
sbbl
mov
hlt
enter
inc
cmp
les
adc
push
pusha
cwtl
mov
or
fdiv
in
mov
test
cld
mov
mov
ljmp
mov
enter
cmp
call
mov
les
clc
popf
repz
imul
cmp
xchg
mov
cli
dec
in
fwait
in
jge
hlt
aam
popa
sbb
jns
pop
sarl
movsb
xchg
stc
jae
imul
aaa
roll
stos
enter
dec
std
aas
dec
inc
out
mov
notl
stos
xorb
lcall
and
sub
shlb
pop
push
add
aas
push
leave
jle
sbb
sbb
pop
jmp
movsb
cwtl
outsb
cmc
dec
mov
ja
xor
jg
sub
fldcw
add
pop
push
imul
and
inc
sbb
xor
cli
mov
sub
cwtl
cltd
xchg
mov
insb
clc
mov
je
sbb
mov
xchg
mov
fsubrs
packuswb
outsl
adc
bswap
pop
int
xor
xchg
ljmp
ljmp
test
test
fsub
mov
lds
inc
jge
shlb
lods
ret
popa
pop
jns
test
or
jl
push
inc
call
fidivl
sti
fs
scas
test
imul
mov
jge
flds
popa
outsb
cli
or
sbb
mov
bound
andb
mov
stc
push
and
ficoml
lret
mov
jns
lods
insl
test
mov
xor
lds
sbb
pop
das
out
sub
and
add
inc
inc
test
jg
aam
jb
hlt
push
loope
mov
add
or
out
dec
movsb
push
dec
mov
in
cmc
cmp
jb
insl
mov
cmc
pushf
gs
repz
pop
repnz
das
pop
mov
fmul
mov
stos
cmp
pop
inc
outsb
mov
or
bound
mov
mov
sahf
fldcw
int3
mov
pop
sub
movsb
sbb
ds
jmp
ret
and
add
and
sbb
sahf
test
lahf
dec
stos
mull
outsl
inc
mov
push
lea
jge
das
sti
jbe
mov
push
mov
in
call
lea
mov
cmp
loope
fstl
leave
sahf
sbb
inc
js
and
lds
fimull
out
jno
je
push
pop
in
xchg
and
mov
xchg
adc
loope
push
xor
dec
push
push
mov
mov
popa
add
sti
sub
dec
movsb
mov
outsl
fidivs
push
mov
inc
rol
mov
cmp
not
movsb
push
cld
push
or
lret
mov
xchg
jne
sbb
inc
xchg
jne
and
lods
scas
lret
loope
xchg
xor
pop
aam
add
mov
mov
imul
insl
cmp
ljmp
mov
xorb
xchg
pop
fwait
add
mov
dec
pop
mov
sub
jb
out
jno
mov
movsb
inc
dec
lods
lret
sub
xchg
repnz
pushf
push
sub
mov
dec
movsb
push
jmp
jno
inc
gs
dec
pop
ficoml
adc
loope
fadds
out
jae
xchg
and
push
xchg
cmp
jb
or
fsubl
sbb
test
jl
bound
shlb
fidivl
jns
ss
or
jnp
cmp
ficoml
sub
cmp
pop
cmp
out
cmpsl
mov
out
sub
ljmpw
xchg
sahf
in
pusha
xchg
push
pop
scas
dec
pop
add
jg
dec
and
xchg
xlat
sarb
or
shrb
test
adc
ficoms
call
outsb
mov
mov
scas
fdiv
add
mov
lret
cmp
pop
fcoml
call
and
xor
sbb
jg
repz
insl
mov
xchg
enter
or
loope
insl
fs
mov
and
jp
fdivrs
pop
stos
je
pop
andb
ljmp
add
or
movsb
jbe
xchg
cmpsl
mov
not
dec
movsb
cwtl
push
adc
les
repz
lahf
shr
aas
sub
mov
arpl
and
loopne
fwait
cli
mov
pop
sub
call
scas
adc
xchg
add
test
dec
sbb
fmull
inc
fstps
pop
fsubrl
add
ja
fdivs
push
ss
cltd
cmp
fsubs
pop
dec
dec
and
inc
push
stos
and
shlb
dec
lcall
jg
sub
sub
cmp
adc
repz
loope
push
hlt
stos
push
jmp
dec
push
jg
cmp
jle
ret
xor
cmp
popf
sub
dec
push
mov
sub
and
xchg
aas
add
lods
cli
dec
ret
sub
push
fisubrs
mov
stos
dec
leave
cmp
cmpl
mov
pusha
jne
xor
rcrb
dec
shll
mov
push
jno
sbb
xchg
jb
or
dec
sbb
call
lcall
ret
mov
cwtl
pop
xchg
mov
pop
dec
mov
rolb
sbb
cmp
in
dec
cmp
scas
movsb
insb
xor
shlb
push
adc
or
lods
push
ss
lods
mov
lds
sarb
dec
xor
lcall
sub
dec
nop
sub
sub
bound
sahf
mov
xorl
sbb
mov
cmp
scas
push
dec
xchg
lret
je
hlt
enter
adc
mov
inc
lock
xor
xchg
aam
stos
fsubr
lock
mull
lods
push
jne
cmp
dec
push
daa
xor
scas
jge
add
xchg
push
dec
sbb
push
fdivs
cmp
loop
aaa
scas
pusha
into
les
cmpsl
std
pop
out
aad
lods
sbb
pop
cwtl
lods
in
out
sbb
mov
dec
rclb
sub
mov
xchg
xchg
sbb
pop
idiv
sub
mov
mov
xchg
aad
mov
and
test
sbb
sbb
mov
push
testl
fldt
jmp
mov
mov
ficoms
arpl
ja
stos
into
xchg
cmc
and
xchg
movsl
and
out
add
jg
push
outsb
fstpt
adc
das
dec
adc
pop
xchg
pusha
clc
out
cs
lea
push
cld
dec
out
lret
cli
sbb
adc
mov
push
mov
bound
mov
jns
movsb
scas
cmp
mov
sub
mov
inc
les
jae
out
xchg
bound
pop
add
movsb
ja
sub
decb
call
add
xlat
jo
icebp
push
ljmp
pop
xlat
jb
fwait
loopne
test
orb
jno
iret
adc
mov
jle
fdivrl
subl
inc
int3
jo
mov
repnz
mov
in
cli
xchg
xor
iret
andl
sub
mov
shlb
or
push
jp,pt
xor
lock
loop
or
sub
mov
mov
pop
adc
into
jnp
pop
or
notl
aaa
bound
pop
pop
shlb
inc
stos
jne
and
or
pop
cmpl
fsubs
fisttpl
fsts
mov
fcompl
in
pusha
jno
inc
out
xchg
add
aaa
xchg
sbb
addr16
enter
jle
aad
jb
pop
into
flds
enter
jbe
adc
or
repz
jno
jns
inc
xchg
and
cltd
lcall
lret
inc
clc
lods
mov
movsb
ret
test
dec
stos
out
dec
push
int3
cltd
into
js
stos
ds
mov
lcall
cmp
and
ffreep
movsb
jmp
cmpsl
stos
adcb
push
je
fcoms
cmc
mov
sub
jp
dec
jmp
add
sub
mov
mov
outsl
adc
es
push
mov
mov
or
scas
aas
adc
pop
sub
add
dec
lcall
fsub
jbe
dec
push
sub
lods
mov
inc
adc
mov
jne
call
xchg
xor
lock
jae
mov
mov
fwait
lea
mov
mov
test
xor
nop
scas
and
mov
imul
xchg
mov
pop
pop
inc
jae
icebp
ss
enter
jbe
mov
les
jb
loopne
les
arpl
fldpi
push
xor
stos
mov
mov
cmp
jo
jnp
pushw
mov
xor
insb
push
push
shr
mov
dec
mov
out
mov
sbb
popf
cmpsl
sub
popw
mov
inc
dec
mov
sahf
test
or
inc
pushf
cli
push
adc
enter
and
insl
hlt
lret
jae
call
testl
xchg
lds
inc
dec
popa
xor
cmpsl
les
outsl
pop
cs
test
mov
out
mov
sbb
push
dec
push
xchg
or
loope
test
idivl
sbb
push
test
mov
into
and
sub
fnsetpm(287
xor
push
mov
in
cmpsl
cmpsl
cmp
cmp
cmp
fsts
shl
cltd
into
sahf
clc
jb
and
mov
sub
pushf
xchg
xchg
push
xor
movsb
bound
mov
or
lods
jb
mov
xor
xorb
iret
cld
aam
fadd
jbe
or
xlat
sub
movsb
sbb
addb
sbb
or
inc
push
sub
add
scas
mov
std
sub
stos
pusha
sub
sub
mov
push
clc
pop
jb
mov
xor
mov
mov
push
pop
push
mov
lcall
jbe
sub
mov
mov
xor
or
pop
jge
xchg
cld
cmpsb
mov
xchg
mov
fdivl
inc
dec
out
std
ret
push
mov
js
icebp
xchg
dec
out
das
push
adc
inc
stc
inc
inc
test
inc
mov
jb
hlt
or
add
lret
xor
push
hlt
pusha
dec
fmul
and
push
mov
xor
mov
das
or
outsl
mov
hlt
js
xor
inc
dec
mov
test
ficompl
fdivl
cmpsb
pop
xchg
mov
xor
dec
mov
dec
das
fisubs
dec
test
lods
mov
movl
cwtl
fdivl
fsts
pusha
cwtl
add
fstps
hlt
gs
inc
call
dec
outsb
mov
imul
mov
push
adc
jae
fdivr
xorl
push
mov
aad
add
cmp
sub
or
in
cmp
dec
adc
sub
push
loop
test
lock
aam
mov
mov
fdivrl
cmp
or
or
scas
add
mov
dec
les
xor
jbe
pushf
jmp
push
or
sti
xor
aam
icebp
lret
jmp
add
push
pop
adc
mov
xchg
out
inc
fdivrp
mov
xchg
dec
dec
in
insb
fisubs
rcll
ss
mov
imull
bound
fsts
into
sbb
or
xchg
and
cld
aaa
clc
clc
mov
repnz
xor
dec
es
sarb
addb
cmp
xchg
mov
mov
push
xchg
xchg
inc
loope
rcrl
mov
in
imul
xor
cli
cmp
es
pop
and
je
out
jo
fildl
lcall
fidivl
sub
iret
ljmp
in
lods
mov
loope
push
dec
xor
sub
je
inc
push
adc
xor
ret
mov
cmpsb
fsubl
mov
loope
jnp
testl
jmp
in
into
stos
clc
mov
mov
mov
xchg
jae
mov
cmpb
flds
inc
lret
pop
ret
sub
cmp
aad
inc
mov
jb
inc
pop
ss
mov
call
stc
lahf
icebp
sub
pop
and
adcb
xchg
sub
leave
inc
adc
call
movsl
ljmp
mov
jl
mov
add
push
lock
adc
aas
lods
test
dec
sbb
inc
mov
aas
out
das
jo
and
rcll
cmp
push
iret
sub
movsb
inc
fxch
inc
sbb
sbb
arpl
lret
idiv
dec
lods
xchg
lcall
cmpsl
mov
and
mov
pmulhuw
jb
or
push
or
mov
sbb
mov
mov
pop
jg
push
xchg
out
lahf
mov
mov
in
push
cmp
in
or
mov
add
mov
xchg
enter
movsb
add
pop
test
inc
clc
es
dec
and
mov
cld
and
movsb
jbe
add
inc
sbb
rcr
dec
mov
mov
and
sbb
icebp
sub
push
or
addr16
notb
xor
mov
add
sbb
das
fsubrs
mov
mov
push
xchg
jns
mov
and
jle
mov
insl
cmp
push
inc
push
cmpsl
popa
adc
mov
push
adc
fisttpll
hlt
pushf
xchg
mov
aaa
pop
sub
test
mov
jmp
stc
sub
lods
pop
out
call
js
test
jp
xchg
lods
or
jae
push
cmp
push
aam
fdivl
les
sbbb
cld
mov
loope
mov
lods
xor
aaa
xchg
add
popa
sub
lods
sub
out
pushf
or
sbb
push
cld
push
movsb
das
push
rolb
push
xchg
mov
dec
add
dec
push
xor
lock
arpl
xchg
imul
ja
int3
push
scas
data16
sub
mov
repnz
mov
les
sahf
mov
test
add
ljmp
or
mov
call
pop
push
adc
cld
scas
icebp
sub
xlat
lahf
jb
add
ss
in
mov
push
shrb
js
inc
imul
lcall
mov
cmp
xor
fstps
andl
jmp
test
add
ror
cmpps
aam
pop
sub
mov
mov
xchg
inc
sub
mov
ret
pop
movsl
adc
movsb
xchg
jnp
out
fs
js
xchg
mov
mov
subl
addr16
imul
pop
jno
cwtl
sub
jg
cld
pop
inc
mov
or
adc
adc
xor
mov
add
out
sub
dec
das
push
inc
mov
test
outsl
sub
mov
repnz
mov
push
dec
sbb
xchg
into
jo
mov
jbe
add
dec
repz
clc
push
loop
pop
shlb
cmp
jl
push
sbb
jp
jae,pn
sbbb
in
es
loopne
xor
jns
lret
xor
push
lret
ret
ret
call
lcall
roll
dec
cmp
adc
jae
mov
lds
fcomi
in
sub
dec
push
add
and
mov
xchg
push
movsl
cmp
jns
loopne
movsl
faddp
xchg
stos
cli
nop
mov
stc
adc
push
cmp
mov
and
movsl
adc
sub
jp
dec
cmp
call
push
jb
or
mov
sub
fisttpl
push
icebp
jbe
push
pop
lds
arpl
cs
or
inc
sub
sbbl
enter
jmp
in
lahf
jns
mov
insb
mov
adc
int
add
mov
sbb
xchg
movsb
ds
jb
push
shlb
xlat
aas
gs
mov
jmp
adc
sub
add
pop
push
mov
dec
std
add
movsb
adc
mov
push
xchg
scas
sub
subl
sbb
dec
xchg
sbb
fisubs
mov
sub
lret
les
push
lret
adc
add
cmp
dec
mov
pop
aam
fwait
mov
cmp
insl
jb
or
xor
leave
xor
sub
mov
out
jno
jecxz
jl
ss
or
cli
and
mov
pop
or
das
stos
sbb
mov
mov
cmp
jl
pushf
test
xchg
fstpl
xor
loope
lret
out
movsb
cmp
js
mov
mov
popf
cmpsl
or
lcall
outsl
lret
mov
pop
shrb
dec
cwtl
rcl
movsb
neg
fimull
popf
adc
out
jmp
cli
xchg
ja
jb
movsb
fstp
sub
fcmove
cmp
or
pop
push
out
pop
pop
mov
in
rol
mov
sbb
jecxz
call
das
push
push
setno
push
push
shrl
sbb
rcrl
stos
sbb
fdivs
sub
mov
pop
add
push
lods
pop
pop
dec
gs
jae
lret
loop
popa
mov
mov
fs
mov
cmpsb
jnp,pt
in
push
je,pn
mov
out
clc
aaa
pop
test
cmpb
cmc
and
lods
jmp
enter
stc
mov
ds
insl
movsl
shl
inc
xchg
pop
pop
mov
std
mov
movsb
das
sbb
sbb
adc
addb
insb
mov
push
jae
insl
sbb
pop
xchg
arpl
stos
xchg
lret
jno
lcall
jp
aad
dec
xor
push
jb
int3
xor
pop
les
xor
mov
repnz
jno
xchg
xor
jge
cwtl
loope
jno
jecxz
mov
sub
sub
addb
sbb
lock
test
lret
jne
jb
sbb
call
jge
push
fildll
inc
or
pusha
repz
sbb
mov
push
cmpsl
movsb
inc
mov
les
test
je
test
adc
jmpw
das
push
enter
shlb
ret
test
adc
adc
shrb
jne
adc
das
pop
cmpsl
mov
sub
add
outsb
dec
cmp
sbb
push
sub
add
cmp
lds
push
push
in
pop
and
xchg
push
mov
bound
sbb
sub
je
mov
lret
dec
cmp
movsl
push
or
in
sbb
jge
and
xor
cltd
jmp
xlat
movsl
inc
jb
std
adc
mov
iret
lods
loop
out
mov
into
movl
or
pop
les
fisttpl
std
in
shrl
xchg
test
pop
or
add
decl
jmp
sub
inc
int3
fsubs
xor
add
xchg
sbb
lods
stc
xchg
jbe
sub
pop
aam
cmp
add
push
fcmovnu
cmc
les
mov
sub
sbb
das
fxtract
lods
cmc
inc
call
jl
in
pop
push
xchg
icebp
lret
ror
sub
dec
int
lock
pop
ljmp
fadds
call
jecxz
pop
and
repz
jne
or
dec
mov
xorl
decb
mov
mov
in
cmpl
jge
mov
jno
sbb
mov
cmp
lock
xor
call
mov
sarb
add
or
and
or
lret
bound
push
hlt
jle
enter
add
sbb
lret
movsb
sub
inc
jne
jle
je
or
dec
push
dec
mov
inc
mov
in
arpl
pushf
pop
outsl
sub
out
imul
fs
aaa
or
pusha
inc
loopne
fcmovnbe
addr16
in
add
lret
fs
push
adc
in
hlt
pop
pop
xrelease
jp
fdivs
std
or
push
nop
mov
push
mov
xor
in
je
cli
push
out
sbb
mov
dec
stos
les
pop
push
stos
xchg
add
sbb
shrl
jno
loope
mov
cs
and
mov
push
inc
cmc
xorl
xor
imul
gs
or
adcl
or
outsl
push
mov
fsubs
cld
push
dec
and
dec
mov
pushf
inc
test
inc
adcl
mov
pop
xchg
mov
cmp
pop
daa
rolb
xchg
jae
or
aad
cli
insb
mov
or
dec
or
cld
xor
mov
jnp
mov
out
in
enter
insb
lret
xor
xor
mov
mov
mov
xchg
cmpsb
push
sub
dec
and
push
jnp
clc
dec
inc
pop
pop
mov
filds
pop
cld
dec
out
pop
fwait
outsl
lcall
enter
xchg
adc
xor
cmp
hlt
mov
idivl
mov
sbb
jae
dec
fmuls
test
das
xchg
movsb
sar
push
hlt
lds
daa
and
lods
adc
dec
or
dec
mov
int3
lcall
lret
xor
into
sub
mov
push
mov
jg
sub
adc
test
pop
jb
mov
jge
mov
push
clc
sub
gs
sub
push
mov
pop
repz
roll
loope
and
je
bound
int3
mov
xor
sub
movsb
pop
pop
mov
nop
xor
mov
xor
fcmovne
mov
rcrl
sbb
and
dec
aad
cld
xchg
dec
xchg
aaa
out
in
pop
loopne
xor
mov
shl
jmp
xchg
pop
cld
orb
sub
xor
sbb
loopne
mov
push
int
sbb
hlt
ret
daa
mov
mov
out
jp
or
out
jno
push
test
clc
sbb
mov
dec
jmp
loopne
push
push
xchg
cltd
mov
movsb
dec
push
add
cs
shll
loope
cmc
dec
jecxz
jecxz
out
inc
push
nop
test
xchg
cmpsb
or
push
cmpsb
sub
jns
mov
jnp
out
stos
ja
outsl
mov
inc
and
cmpl
cmp
mov
out
or
pop
mov
int3
hlt
xlat
leave
out
dec
imul
adc
inc
in
push
jecxz
pop
loop
xchg
pop
push
dec
in
das
test
push
add
pop
mov
mov
mov
repz
xchg
and
add
inc
sub
push
into
sbb
lret
mov
sbb
push
push
dec
out
sub
xchg
mov
adc
popa
mov
jge
pusha
out
fcoml
mov
jae
or
imul
mov
das
fwait
into
and
pop
cmp
xor
push
fbstp
xchg
sub
mov
test
push
outsb
inc
jno
sbb
pushf
shl
jp
cld
dec
xchg
sbb
movsl
inc
testb
iret
cmp
push
xlat
mov
loop
cs
and
rcr
arpl
sahf
mov
jge
xor
shlb
pusha
and
cmpsl
mov
call
mov
dec
jp
xor
jb
int3
pop
xor
push
test
sti
mov
pushf
xchg
pushf
push
xor
mov
push
mov
scas
pop
push
sub
jbe
stos
test
dec
add
inc
aam
iret
mov
and
fadds
sbb
or
subl
test
hlt
test
cs
xchg
add
mov
stc
jbe
les
xor
or
and
push
rclb
xchg
sub
mov
dec
scas
add
movsl
fwait
dec
xor
repz
xchg
dec
cmpsl
andb
sti
xchg
mov
push
roll
xor
shlb
cmp
sbb
push
push
push
dec
call
cltd
mov
cs
mov
push
imul
stos
dec
or
movsb
test
cmc
ds
xchg
mov
fmul
imul
mov
and
adc
and
sbb
push
test
mov
out
loopne
int3
aad
jb
xlat
call
movsb
mov
aas
jo
inc
ljmp
iret
arpl
xlat
es
js
xchg
gs
das
pop
or
mov
std
xchg
mov
sub
mov
fdivrs
adc
stc
mov
cmp
movsb
scas
divb
inc
add
or
or
insb
mov
fadds
mov
pop
aaa
arpl
jg
std
mov
xor
cmp
inc
mov
cld
sub
and
lret
adc
xchg
aad
out
shrl
dec
sub
cmpsl
fwait
cmp
mov
and
aam
rcrb
adc
jae
movsb
xor
xchg
fiadds
rclb
mov
jns
inc
int
lahf
and
cmpsl
outsl
xor
jl
xchg
imull
hlt
push
jne
xor
sub
movsb
out
mov
mov
rolb
scas
in
or
cwtl
jbe
idivb
pop
inc
rol
pop
jo
push
pop
mov
out
adc
pop
mov
push
enter
mov
mov
mov
adc
cmc
sbb
out
pushf
repnz
hlt
mov
xchg
push
retw
jbe
inc
pusha
sbb
fs
push
pop
dec
adc
jne
bound
loope
mov
jbe
stos
dec
adc
adc
mov
ret
pop
mov
xor
xor
mov
cltd
jbe
xchg
xchg
push
or
cli
fistpl
rcll
call
dec
lds
les
daa
nop
insl
insb
cs
movsb
cmp
out
les
push
and
mov
cwtl
in
push
sub
jp
push
add
stc
mov
cs
push
mov
movsb
loope
lds
shlb
push
mov
fldl
rcll
lods
inc
test
mov
stos
das
imul
scas
in
cli
push
arpl
mov
mov
stos
mov
mov
jns
or
fistps
pop
xchg
rclb
inc
push
outsb
xlat
in
inc
call
repnz
out
jmp
loop
pop
fstpl
fsts
cld
in
sbb
xorl
push
mov
divps
scas
clc
add
xchg
jae
mov
and
je
out
data16
loopne
mov
loope
mov
add
mov
mov
jns
das
iret
mov
jne
mov
lock
rcll
cli
pop
and
add
movsb
daa
push
addr16
xor
jb
adc
lock
inc
into
test
lods
iret
ret
gs
das
clc
outsb
xor
or
enter
jmp
dec
sub
dec
or
je
mov
ret
out
adc
rorb
mov
jo
bound
push
xor
mov
repnz
leave
push
cli
movsb
jmp
nop
push
sub
mov
pop
mov
shrb
lret
fwait
out
mov
in
mov
aaa
mov
iret
jbe
fs
jo
add
sbb
movsb
stc
or
scas
push
fldenv
mov
mov
mov
cld
fidivl
jle
push
xchg
mov
push
jle
das
mov
pop
xchg
test
mov
ja
movsl
int3
roll
and
lods
and
add
mov
lods
lock
lahf
dec
push
loope
cmp
out
popf
pop
dec
adc
fcomp
aas
jo
arpl
xchg
scas
movsb
and
pusha
imul
cld
aad
push
flds
mov
imul
movsl
jl
arpl
mov
adc
clc
fsubl
dec
into
sbb
pop
cmp
test
sbb
test
xor
push
pusha
cmp
movsb
xchg
or
sbb
lods
ret
mov
sub
inc
into
aas
push
insb
mov
push
mov
sbb
xchg
sub
imul
xor
add
dec
fdivp
test
pop
into
xchg
xchg
add
and
cltd
in
cltd
mov
cli
sub
pop
jle
xor
mov
sub
and
sbb
cmp
cmp
sbb
inc
push
dec
les
cmp
repz
lret
cs
push
cmc
inc
rorb
movsb
imul
cmp
fldcw
mov
xchg
pop
out
arpl
int3
or
sbb
out
add
insl
gs
mov
pop
cmc
pop
cli
lock
fiadds
scas
mov
pop
pop
fs
inc
cld
aad
ss
das
xchg
sub
out
imul
js
lcall
push
sbb
sub
fisttpl
loop
sti
movsl
lods
cli
das
adc
lods
into
push
fnop
push
adc
push
aaa
sbb
fbstp
bound
jmp
or
jno
rolb
push
imul
xchg
orb
sahf
inc
push
dec
scas
sub
jmp
sub
jge
dec
push
mov
rcll
mov
cmp
push
in
hlt
jb
movsb
insb
call
es
adc
sbb
jo
inc
adc
iret
jmp
mov
adc
mov
mov
cs
mov
hlt
in
sbb
icebp
fprem1
sti
movsl
hlt
call
xchg
sub
xchg
mov
mov
mov
inc
loop
push
sub
jne
pop
js
lock
in
pusha
loope
add
scas
sbb
inc
das
mov
cmp
mov
insb
xchg
bound
add
enter
adcl
repz
ret
fcoml
or
sub
ds
xor
lcall
adc
sahf
jge
lods
das
movsl
popf
ljmp
jns
mov
iret
gs
push
mov
pop
bnd
xchg
xchg
xchg
xchg
mov
inc
adc
aad
int
xchg
mov
ja
stos
mov
popf
fisubrs
mov
out
mov
mov
inc
fsts
sbb
jmp
mov
pop
pusha
ret
ret
push
lods
aad
out
ss
xor
pop
jbe
les
aam
jnp
jb
test
sarb
push
je
mov
sub
mov
dec
push
mov
movsl
cmpb
dec
pushf
push
dec
sub
add
aam
cld
movsb
mov
hlt
popa
jae
hlt
cmc
jbe
in
mov
jle
pop
sbb
sub
sub
mov
rep
daa
mov
mov
mov
jns
add
hlt
mov
adc
icebp
es
and
dec
lret
movsl
lods
and
outsb
sub
mov
dec
xchg
pusha
cmpsb
push
push
jbe
scas
movsl
xor
test
and
mov
aaa
arpl
pop
fwait
sbb
mov
hlt
cmp
jg
lods
and
dec
push
mov
mov
lcall
cmp
mov
jns
mov
push
cli
testb
addl
fs
nop
les
adcl
fdivrs
xchg
dec
lea
sbb
adc
cmp
out
movsl
sub
mov
add
dec
sbb
js
pop
mov
sbb
dec
jg
and
rcll
std
flds
rep
mov
add
jle
add
or
sub
aaa
mov
jmp
ljmp
sbb
rcrb
pop
cmpsb
lcall
pushf
mov
icebp
lods
out
xor
push
icebp
mov
mov
pop
rorb
xlat
mov
mov
dec
std
lcall
insb
or
movsb
loope
xor
call
sub
popf
mov
or
leave
inc
lea
or
ljmp
inc
scas
cmpl
rorl
ret
pusha
adc
mov
xor
faddl
scas
xchg
loopne
xchg
fsubrs
cmp
mov
mov
repz
push
inc
inc
andb
or
or
lcall
inc
mov
ljmp
xor
jecxz
movsb
add
imul
das
lea
mov
nop
and
adc
js
mov
cmp
xchg
mov
mov
popf
inc
lods
and
jne
push
je
mov
pcmpgtw
shrl
sahf
mov
jb
repz
pop
pusha
mov
mov
mov
xchg
xlat
xchg
and
sbb
cli
jle
push
jecxz
fsubrp
into
dec
push
data16
xchg
mov
cmp
cltd
pop
adc
and
les
ret
scas
bound
js
sub
cmp
add
jae
mov
push
pop
arpl
sbb
test
orb
movsb
imulb
idivb
je
inc
xchg
in
mov
sbb
call
sub
stos
repnz
ffree
or
je
pop
sbb
inc
fistps
pusha
xor
sbb
lret
fdivr
lret
jns
pushf
rcrb
mov
repnz
iret
ret
bound
jno
shlb
and
ljmp
xor
addr16
mov
xchg
inc
fsubrs
mov
sub
inc
xchg
ret
push
sbb
enter
dec
rcll
kmovw
inc
cli
scas
jae
push
mov
orb
insb
mov
add
add
repnz
xchg
aam
mov
divb
mov
push
cmpb
push
rol
pop
pop
dec
mov
rol
stos
mov
add
jbe
lret
loope
pop
enter
jnp
ja
je
lret
cmp
sub
mov
cmpl
ds
pop
scas
pop
mov
xchg
mov
sbb
scas
add
xchg
pushfw
fisubs
lods
pop
inc
add
mov
out
pop
sarb
and
jo
push
push
mov
add
shrl
outsl
inc
call
mov
shlb
mov
sub
ljmp
mov
adc
imul
movsb
push
loopne
push
gs
int
fadds
sbb
jae
sub
bound
sbb
scas
cmpsb
sbb
sahf
adc
xchg
pop
jns
push
and
xor
xlat
jne
pop
lcall
dec
pop
in
movsl
cmp
test
enter
xchg
fistps
mov
stos
sbb
stc
repnz
cltd
es
clc
and
add
jp
movl
cmpsl
mov
jns
dec
xor
xchg
shl
xor
sub
jmp
xchg
push
add
sbb
scas
leave
lods
dec
stos
into
imul
lods
dec
ret
cli
out
sahf
iret
test
sub
movsb
icebp
xchg
jo
loope
imul
outsl
and
xor
inc
xchg
mov
inc
ret
nop
cmc
mov
es
mov
mov
sahf
mov
lods
add
movsl
cwtl
aaa
mov
shlb
divb
lock
lcall
ret
imul
pop
mov
movsb
shrl
hlt
test
mov
xlat
push
add
out
testb
or
rorl
popf
xor
cltd
addr16
stos
sarb
inc
outsb
adc
push
mov
fwait
rcll
mov
bsr
imul
jge
lcall
jno
pop
push
out
pusha
mov
dec
inc
jge
mov
pop
daa
ds
push
jae
jmp
adc
in
rol
sbb
fcoml
rcr
xchg
int
fwait
movl
push
and
sub
dec
arpl
fwait
dec
scas
push
les
in
inc
scas
cs
mov
iret
mov
push
fimull
jmp
aad
xchg
mov
push
inc
addr16
out
in
fcompl
call
inc
mov
fnstenv
or
das
lock
mov
stc
sub
sub
test
mov
sub
je
into
sub
add
pop
or
cmc
inc
jg
fdivs
shlb
xchg
inc
lcall
dec
cmp
mov
jnp
or
es
mov
and
pop
cli
jge
sbb
cmc
mov
sbb
xchg
pop
lods
jp
dec
ret
jmp
sbb
in
mov
mov
push
jno
or
pop
clc
cmpb
int
pop
cmpsb
xor
push
sbb
ret
jmp
xor
and
lcall
aaa
leave
inc
movsb
mov
or
in
movsb
dec
test
sbb
sti
sub
lret
aam
lods
iret
or
add
add
pop
fsubs
das
sbbl
sbb
mov
dec
pop
subl
xchg
xor
enter
sub
test
sub
std
jns
mov
arpl
mov
dec
pop
add
aad
pusha
fiaddl
adc
das
fsts
xchg
movsb
scas
cmpb
ret
mov
mov
xchg
adc
xor
xor
das
mov
lods
cmpl
cwtl
je
pop
pop
mov
loope
into
js
jno
push
call
xor
stos
stos
dec
mov
movsl
pop
adc
or
sbb
sub
add
mov
jg
cmp
and
mov
and
mov
cmp
pushf
and
aaa
adc
pusha
adcl
jg
stos
inc
add
xchg
cmc
loope
aaa
push
mov
sahf
dec
stos
xor
xchg
das
mov
loope
sbb
add
add
outsl
mov
mov
lcall
push
xor
sbb
inc
dec
cmp
sub
sub
subl
adc
jp
sub
cmc
pop
mov
mov
or
ss
fs
mov
jbe
lock
cmp
repnz
sub
mov
jmp
fsubrl
lds
outsl
add
adc
repnz
hlt
in
push
les
movsb
lods
aaa
xor
jmp
mov
adc
jb
adc
mov
dec
xor
mov
arpl
sbb
in
insl
sub
int3
movsb
popf
ss
jecxz
iret
repnz
cmc
les
movsl
mov
repz
popf
xor
shrb
pop
mov
ror
les
mov
mov
cmp
in
fdivs
test
mov
imul
arpl
ljmp
adc
nop
add
in
repz
sbb
jg
pushf
jne
adc
iret
inc
aam
testb
push
mov
sahf
jae
test
mov
mov
xlat
mov
and
imul
mov
pop
xor
outsl
fisttpll
pusha
movsl
mov
jge
push
das
push
sbb
in
cltd
lock
std
das
mov
call
add
bound
lcall
sbb
outsb
dec
push
sbb
jle
sbb
jb
rorl
and
jecxz
in
insl
adc
xchg
iret
mov
xchg
mov
addr16
shrl
adc
call
adc
ret
lahf
mov
out
sbb
lods
sti
not
push
les
int3
lret
mov
xchg
xor
icebp
push
dec
jg
rcl
mov
pusha
icebp
push
add
xchg
push
or
pop
adc
rolb
mov
inc
push
cmpsb
jbe
add
xor
mov
shlb
cmp
xor
icebp
pop
fmull
and
xor
or
mov
shlb
int3
roll
cltd
fs
adc
fdivs
and
call
pop
js
pop
dec
push
aam
jbe
stos
ret
cmp
adc
or
das
ret
dec
and
jnp
cmc
push
stos
insb
pusha
loopne
outsb
jp
mov
repnz
movsb
out
les
cwtl
scas
sahf
mov
mov
dec
push
popf
pop
lret
in
mov
mov
std
scas
and
xchg
lods
ret
cltd
out
mov
fs
and
js
stos
inc
iret
sub
fcmovnu
or
cmpsl
cmpsb
sar
sub
outsb
push
faddp
frstor
out
repnz
call
inc
dec
or
aam
inc
push
dec
mov
add
push
icebp
sbbl
push
int3
in
test
sbb
ret
sub
movsb
leave
inc
ja
pusha
push
inc
cmpsb
jp
stos
xor
jns
jns
fstpl
jb
cmpsb
adc
les
es
and
je
inc
dec
mov
les
xor
push
pop
cltd
dec
scas
sbb
pop
jne
push
in
mov
lods
frstor
rorb
mov
mov
push
je
loop
push
pushf
mov
jl
pop
hlt
cld
and
jnp
pop
call
dec
aas
sbb
fnstenv
out
push
out
stos
push
pop
out
inc
mov
mov
inc
jo
sbb
xor
lahf
iret
inc
stc
and
cmpsl
mov
add
into
dec
inc
push
das
sub
mov
movsl
lcall
mov
mov
xorb
dec
push
test
dec
sbb
out
adc
xchg
cmp
push
lret
cmp
fcoms
popf
vcvtps2pd
sub
push
mov
mov
and
pop
sub
das
xchg
outsb
inc
lcall
imul
adc
into
nop
sbb
push
loop
push
imul
nop
lret
jns
sub
mov
add
sbb
adc
fildll
inc
inc
and
shl
xchg
aad
jno
mov
push
pop
aad
sub
stos
lods
and
xor
adcl
insb
movsb
or
sbb
mov
lahf
sbb
mov
movsb
jl
mov
shrb
push
out
das
dec
mov
lock
and
movsb
std
push
aad
jb
popf
test
pop
gs
xor
and
mov
out
sub
xchg
lock
movsb
xchg
pop
push
jle
movsl
sub
inc
stc
enter
or
pop
mov
jbe
mov
mov
lcall
sbb
notl
int
cli
test
push
cmp
dec
sbb
and
shlb
std
scas
adc
sbbb
mov
stos
push
inc
lods
lea
fdivrs
push
incl
sti
xchg
bound
mov
lcall
shll
push
outsb
fsub
dec
ror
mov
aad
push
jge
in
lea
lret
in
mov
mov
jge
pop
loop
pop
test
push
mov
mov
xchg
push
int
and
or
stc
mov
sbb
stc
and
nop
or
mov
jo
iret
rol
xchg
stos
sub
sbbl
mov
imul
mov
call
imull
lret
rcll
xor
lods
mov
js
jno
mov
movsb
pop
stc
ja
push
adcl
outsl
jnp
movsb
xchg
cwtl
xchg
pusha
dec
mov
dec
pop
cli
lods
jmp
sub
fisubrs
sar
pop
stc
jmp
adc
jl
xor
pop
jp
mov
jmp
scas
lea
les
lock
mov
jbe
or
inc
jp
sub
xlat
shrb
xchg
lods
orb
in
repz
inc
icebp
jmp
into
call
out
mov
mov
mov
pop
cwtl
out
push
adc
xor
aaa
test
xor
sub
inc
adc
ljmp
xor
pop
fsubrl
sbb
push
pop
inc
hlt
add
enter
scas
stos
jo
push
dec
pop
xchg
pop
outsl
pop
xor
add
lahf
mov
lcall
pop
xchg
pop
xor
ss
jo
push
inc
fmuls
aas
mov
and
fisubl
repz
and
pusha
pop
icebp
aad
ret
ficomps
and
and
popa
lock
xor
adcl
mov
sahf
push
in
pop
jp
push
mov
repz
sti
sbb
cwtl
test
xchg
sbb
adc
dec
mov
out
pusha
jb
inc
ss
fcmove
inc
xchg
sub
and
push
mov
sub
mov
dec
cwtl
jne
push
mov
mov
cs
or
xor
xchg
or
dec
fidivrl
xor
sbb
and
nop
jg
sbb
stc
sbb
adc
push
mov
js
mov
cmpsl
jo
in
pop
movsb
cmp
mov
pop
mov
pop
or
popf
bound
mov
test
ss
mov
cld
push
jno
pop
mov
cmp
jns
mov
and
shlb
cmc
nop
in
mov
in
ja
pop
mov
adcl
roll
test
mov
out
out
cli
lcall
imul
popf
je
cli
jns
test
popf
jo
insl
jo
aam
std
mov
sub
imul
daa
pusha
sub
mov
aad
aaa
movsb
or
jmp
push
push
das
jecxz
movsb
imul
fisubrl
mov
push
pop
push
xchg
dec
les
cmp
fidivrl
sbb
and
jmp
adc
scas
lock
mov
lret
adc
jbe
js
adc
cli
bound
push
mov
xchg
ljmp
insl
push
cmpsb
sub
into
xor
mov
mov
movsb
mov
stos
mov
adc
pop
hlt
jns
xor
imul
inc
push
cld
lret
loope
loope
sbb
xlat
mov
sub
cld
rclb
shll
mov
push
add
ja
mov
jb
movsb
insl
mov
or
pop
pop
push
or
cmpsl
sbb
sub
stos
mov
int3
xchg
pop
pusha
mov
cmp
mov
jne
ret
or
mov
aam
or
and
dec
mov
outsb
fldenv
sbb
dec
movsb
stos
pop
push
push
call
and
pop
push
ljmp
push
dec
xchg
pop
push
and
aaa
notb
mov
outsl
pop
lcall
outsb
lcall
sub
cmp
addb
mov
ja
subl
push
sub
ret
sbb
add
mov
adc
lahf
and
ret
loope
fdivl
fdivrs
sub
xor
in
jp
xor
mov
jmp
jno
loopne
dec
adc
outsl
sub
mov
adc
or
xor
lods
cmp
fistpll
sbb
mov
enter
test
and
inc
xchg
mov
mov
lods
pop
mov
outsl
dec
dec
bound
pop
ljmp
inc
and
and
lods
jmp
xor
aam
xchg
push
sahf
xor
loope
ljmp
mov
into
outsb
movsb
mov
sti
adc
ret
paddw
pop
add
pop
and
push
nop
aad
es
sub
jl
or
movsb
pusha
out
out
loop
mov
add
cmpl
push
movsl
jnp
push
mov
fcomi
leave
sub
movsb
test
sahf
and
pusha
sub
lock
imul
cld
cltd
inc
aad
push
aas
sub
jg
cmp
sub
mov
out
sub
aad
dec
pushf
cli
mov
sub
dec
jge
imul
add
data16
xor
les
sbb
call
sbb
xorl
jl
jmp
jle
movsb
ljmp
jno
mov
pop
jecxz
pop
jne
jmp
and
jne
push
adc
divb
ss
xchg
loop
jb
cld
aas
xor
les
stos
inc
and
xor
or
int3
stos
push
jne
movsb
push
stos
mov
mov
mov
movsb
mov
mov
sub
lods
pop
push
movsb
cmc
fmuls
push
or
sbb
add
xchg
pop
push
dec
rclb
pop
lcall
add
jl
inc
std
shrb
and
mov
sub
adc
cmp
jp
push
dec
lret
mov
clc
dec
roll
insb
mov
inc
sub
inc
fs
dec
repnz
inc
add
adc
jo
daa
out
adc
jp
xor
rsm
adc
lock
mov
or
mov
movsb
inc
and
jg
mov
add
int3
cmpsb
mov
inc
adc
jno
add
xchg
jmp
mov
and
dec
dec
iret
ja
mov
cmc
mov
stos
sub
push
fstpt
jo
mov
lds
or
loope
out
push
fsubs
lret
push
popf
sub
inc
js
xor
sub
decb
int
pop
xor
ds
mov
push
or
sub
lcall
out
ret
xchg
mov
sbbb
imul
lds
mov
push
mov
aad
jb
ss
jne
or
fisubrl
push
mov
movsb
nop
ljmp
mov
jne
inc
pop
sub
lret
jmp
sbb
push
pop
sbb
push
cmp
mov
leave
cld
jbe
iret
insl
and
xchg
mov
push
notl
lods
loop
gs
add
lds
xor
xchg
aaa
lods
call
push
outsl
mov
and
mov
and
jge,pn
sub
dec
pop
mov
mov
add
fsubrl
mov
cli
sbb
std
mov
rcl
sub
ja
cmp
jecxz
or
out
mov
enter
inc
mov
mov
xor
sbb
sub
sub
or
sub
or
mov
xchg
xlat
xchg
sbb
pop
pushf
push
jl
and
outsb
lcall
lods
push
xor
dec
push
lods
add
inc
mov
jp
les
mov
push
in
sahf
push
gs
movsb
arpl
dec
xor
dec
sub
and
sbb
mov
repnz
mov
mov
enter
mov
lcall
xor
or
aaa
cmp
cs
cmp
bound
movsb
add
adc
mov
loopne
add
orl
push
fs
mov
mov
or
or
push
fsubrs
lds
add
inc
ljmp
cltd
les
mov
push
ljmp
jbe
or
leave
ja
lock
sub
mov
jbe
mov
pusha
scas
loopne
rorl
push
out
adc
inc
mov
jp
adc
pushl
test
sub
inc
scas
xor
mov
test
movsl
test
pop
mov
fcomps
xor
ffree
jbe
jbe,pn
leave
mov
inc
push
push
jb
dec
aam
cmc
or
jns
mov
sub
pop
pop
jbe
movsl
jnp
lods
jbe
loop
sbb
push
arpl
stc
jns
mov
in
xor
andl
fsubrs
cmp
scas
xor
mov
xchg
sbb
jbe
mov
mov
adc
hlt
pop
push
xchg
outsb
dec
out
repz
outsl
lea
jp
push
pop
sub
rcrb
mov
call
and
movsb
adc
and
iret
sub
mov
mov
sbb
insb
ss
and
shr
insb
sarl
out
ret
mov
sub
outsl
lods
push
out
stos
inc
inc
fidivrl
hlt
mov
gs
dec
lds
lret
lods
test
and
hlt
lcall
xlat
cltd
push
roll
rol
movsb
js
mov
stos
adc
sbbl
sub
ja
insl
and
fcmovu
outsl
jbe
jns
jp
sub
out
push
push
inc
pop
clc
insb
lret
sub
in
fstpt
subl
or
xlat
bound
jb
push
sbb
mov
sbb
repz
dec
mov
lcall
mov
lods
xchg
lea
push
das
movsb
adc
int
add
loope
insl
xor
sub
in
imull
lods
add
loope
push
push
rcrl
cli
stos
jae
dec
insl
sub
shll
pushf
pop
sbb
cltd
push
add
out
mov
insl
jmp
flds
call
jb
mov
pop
pop
mov
imul
inc
into
mov
push
dec
xor
in
out
js
jns
ljmp
add
cmp
dec
jno
mov
notb
orb
mov
fcoml
inc
xchg
fcoms
and
pop
aam
sbb
sub
mov
leave
and
out
repnz
xor
cmp
fidivs
shrb
mov
dec
xchg
pop
xor
cmpsl
jg
sub
xlat
movsb
std
bound
xchg
mov
pusha
adc
dec
push
dec
xchg
pop
ror
xchg
add
in
adc
mov
mov
push
hlt
movsb
sbb
movsb
adc
mov
jb
sbbl
sti
repz
gs
sar
sbb
fsubrs
loopne
add
movsb
cwtl
test
inc
jge
dec
sub
mov
dec
jmp
jmp
je
cmpsb
pusha
fisubrs
aas
lods
test
push
shl
xchg
push
cli
dec
test
push
jno
sub
aam
or
jge
insb
cld
jns
mov
or
fdivrl
lret
adc
dec
mov
xchg
ret
sahf
mov
jg
lds
stos
cmpsb
mov
in
pop
xchg
ja
call
movsb
in
sbb
pop
dec
lods
fdivrs
xchg
xor
xchg
mov
adc
aad
mov
push
ror
and
inc
jno
aad
xor
sbb
push
mov
xchg
sbb
fcompl
pop
sub
dec
lea
or
jle
mov
lcall
test
les
pushaw
lea
aas
lods
icebp
ljmp
sub
dec
lock
jbe
mov
mov
adc
mov
data16
aam
or
ja
jle
pop
movsb
jo
push
mov
adc
subl
fldenv
cli
insl
clc
mov
xchg
sbb
sub
int
stos
aam
stos
jns
imul
mov
sbb
bound
jnp
mov
nop
sub
adc
sahf
iret
xor
xchg
scas
fdivl
jae
sbbb
shl
test
mov
mov
mov
das
mov
adc
int3
aam
inc
outsb
or
scas
ss
xchg
mov
sub
lcall
add
ficompl
inc
xlat
rcrl
nop
movsb
add
pushl
jb
divb
hlt
mov
dec
out
jp
sbb
scas
dec
add
mov
icebp
clc
scas
push
lcall
ret
mov
jbe
les
inc
jge
jp
xchg
xchg
arpl
or
inc
cmp
mov
inc
mov
cmp
mov
sarb
xor
pop
push
nop
sub
lahf
cli
jne
out
enter
cmp
push
repz
xor
in
shll
rep
pop
out
inc
xchg
imul
sbb
mov
mov
js
movsb
pop
sbb
sub
in
cld
pop
sub
addr16
addr16
and
ss
mov
mov
mov
inc
mov
mov
xor
ljmp
sub
outsl
fstpt
adc
sub
cmpsl
xchg
sub
pop
jbe
dec
iret
loope
sub
shl
int3
jae
cs
pop
mov
jo
sub
inc
jmp
mov
adcb
mov
sbb
std
mov
out
imul
sbb
xor
mov
in
sub
mov
mov
fcoms
outsb
in
cmp
call
mov
or
or
roll
jae
and
xlat
rcl
xor
dec
lods
daa
push
icebp
inc
xchg
inc
shr
dec
pushf
movsb
pop
xor
dec
das
out
fbstp
or
lcall
stc
xor
lods
jnp
sbb
aad
loope
dec
jae
mov
and
add
or
push
sub
mov
int3
out
sbb
lods
in
cld
add
and
test
adc
data16
repnz
pop
xor
vucomisd
pop
into
push
out
cmpsl
jns
cs
push
adc
jne
into
scas
sub
ds
add
leave
in
push
mov
jge
ljmp
push
mov
pusha
or
rorl
jae
loope
popf
ds
dec
dec
push
inc
insl
sub
mov
nop
mov
shlb
cmpsl
cwtl
into
mov
or
jge
mov
insl
mov
inc
pop
aad
testl
push
cmp
adc
xor
mov
js
imul
je
dec
pop
ret
dec
sub
aas
ss
test
sub
js
imul
jo
ds
in
mov
subb
movsb
mov
push
mov
adc
mov
icebp
hlt
fldcw
mov
push
popw
test
add
movsb
pop
loopne
fiadds
mov
hlt
mov
test
nop
mov
mov
sub
jns
movsb
jle
lcall
mov
xchg
hlt
mov
push
pop
mov
lods
push
pop
xor
lea
imul
mov
jne
les
xchg
test
push
sub
push
jmp
mov
xchg
jecxz
sub
fnstsw
and
clc
pop
sahf
sub
inc
sarl
stc
bound
scas
fldenv
popa
in
ret
mov
dec
pushl
je
push
daa
icebp
push
and
iret
pusha
xchg
jmp
repz
fstpt
cs
xchg
xor
xchg
mov
or
ret
rorl
cld
mov
loopne
stos
push
add
out
ret
xchg
push
addr16
fdivrl
jl,pn
and
push
add
insb
jle
pushf
push
mov
cwtl
repz
and
daa
lea
xchg
scas
and
mov
outsl
rcll
fwait
testl
jnp
lret
mov
xor
fyl2x
cli
push
and
pushf
les
sub
leave
loope
sub
pop
mov
push
and
push
and
lds
enter
inc
jae
sub
enter
subl
inc
push
cmpsl
mov
push
mov
inc
pop
jb
xor
inc
add
loopne
repnz
clc
pop
xchg
xchg
jne
inc
xchg
jb
lcall
pop
stc
inc
jno
fsubrs
mov
push
ss
sbb
inc
scas
pop
jmp
jnp
repnz
xchg
je
mov
loope
jae
es
or
paddq
xorb
in
das
pop
lods
adc
fs
dec
pop
js
stos
mov
loopne
sub
fistps
xchg
sbb
push
mov
inc
mov
mov
lods
fsubrp
lock
mov
xchg
ficoms
imul
rep
cli
roll
pop
mov
call
ja
xchg
in
jecxz
mov
cmp
fwait
repz
or
lods
mov
idivb
aad
sub
xor
pusha
mov
add
mov
mov
sbb
sbb
nop
sbb
xor
xchg
cld
mov
ja
cmpsl
test
sbb
mov
jo
push
ljmp
test
or
or
in
sbb
ja
shlb
int3
scas
mov
xor
in
pop
ljmp
sbbl
xor
hlt
xor
fdivrl
nop
outsb
push
or
jne
out
inc
jb
xor
sub
xor
mov
loopne
push
sub
imul
fs
and
sahf
fistl
adc
xor
xor
insl
pop
or
xor
push
iret
xor
mov
xor
pop
out
loop
fstpl
sbb
xor
subl
dec
xor
push
fnstenv
jne
jge
pop
xor
imul
orl
jo
mov
stc
jb
enter
and
daa
cmp
in
rolb
sub
xor
push
and
sub
sti
in
in
int
add
negb
repz
hlt
out
xor
out
pop
jo
mov
popf
jbe
sbb
jne
push
data16
ss
daa
adc
insb
mov
jae
inc
pop
xchg
mov
cmpsb
stos
xor
xor
stos
jnp
mov
xor
push
pushl
sbb
inc
add
mov
mov
jb
jnp
adc
jp
jmp
fsubrl
sbb
iret
iret
or
pusha
jne
popf
xlat
jb
push
inc
scas
imul
or
nop
or
xchg
or
sub
je
lahf
cmp
sbb
xor
push
scas
ss
dec
jl
xor
push
xor
pusha
rolb
and
cmpl
xor
mov
jne
jge
push
je
xor
mov
idiv
loopne
and
adc
sub
and
insb
xor
ljmp
rorl
push
clc
xchg
mov
mov
test
dec
cmp
ja
push
and
sub
jb
xchg
xlat
es
imulb
mov
jb
clc
fcmovnu
in
sub
ljmp
insl
div
and
sub
jl
in
mov
fmul
xor
test
repz
and
or
xor
mov
fistl
aaa
push
out
adc
outsb
mov
subb
push
xchg
sub
push
rcrb
out
call
iret
sub
test
stc
out
jecxz
iret
scas
nop
mov
mov
dec
imul
mov
mov
jne
push
push
push
jb
cs
jae
testb
pop
push
xchg
inc
subb
sub
lock
mov
push
cwtl
sub
xlat
mov
loopne
int
sbb
push
jle
cmpsb
std
icebp
frstor
mov
shll
jge
cmp
lea
fidivrs
and
iret
or
into
je
mov
xor
or
pop
lods
and
xor
test
mov
xor
pop
outsb
sbb
adc
cltd
inc
xor
loopne
xor
mov
lods
xor
push
nop
std
loop
lods
cs
dec
dec
cs
mov
fs
cmpsb
loop
push
addl
sarb
movb
mov
sti
pop
push
int
push
fistps
xchg
out
aas
pop
mov
insl
cltd
cmp
loope
jns
mov
cs
adcb
ja
pop
cmp
inc
mov
popa
xorl
mov
push
xor
movsb
add
sbb
pop
mov
sub
cmp
pop
xor
mov
sbb
scas
and
dec
insb
dec
insl
mov
and
outsb
xchg
dec
sub
xor
out
and
mov
mov
xlat
dec
sahf
mov
out
xor
fldt
push
loopne
rclb
xchg
scas
adc
dec
xor
sub
xor
icebp
cli
fmuls
cmp
xor
nop
jb
out
cmp
cmp
cmpb
jne
xor
out
nop
inc
cmp
add
popf
addr16
push
jge
jo
je
ds
pop
mov
stc
or
sarb
insl
xor
push
push
mov
lods
adcb
cmp
scas
out
jmp
rcll
dec
pop
inc
pop
or
loopne
xor
in
sbb
sub
xor
jnp
jge
sarb
imul
push
push
cs
lods
lock
es
in
sbb
incb
ss
adc
sahf
fiadds
xor
or
xchg
and
xor
ja
lret
cld
jnp
popa
test
mov
xor
pop
or
popf
shr
mov
pop
ds
gs
fs
mov
push
push
dec
add
and
mov
sub
js
mov
or
xor
pushl
sub
cmp
sub
and
mov
mov
mov
push
cmp
jmp
lock
push
push
xor
aam
rorb
mov
loopne
stos
mov
roll
add
or
inc
mov
loope
sub
rclb
lahf
shlb
orb
movsb
scas
push
cmp
xchg
adcb
stos
ds
or
imul
push
mov
xchg
lods
adc
cmp
movsb
mov
xchg
clc
sub
dec
rolb
lcall
adc
jae
xor
in
ret
enter
xor
xor
or
sub
outsb
loope
aaa
push
xor
inc
mov
ficoms
cmp
leave
cs
mov
icebp
bound
inc
mov
sub
ret
jp
popa
scas
xchg
mov
cmovs
cmc
mov
mov
sahf
gs
fldt
test
jp
and
mov
add
mov
cmp
pop
test
and
test
xchg
cld
xor
mov
test
mov
xor
rcrb
cli
out
pop
xor
xchg
xor
jp
adc
sbb
clc
or
inc
ss
add
js
push
add
dec
rcll
das
pop
aas
sub
xor
pushf
int3
add
lods
ss
stos
aad
add
mov
cs
adc
leave
pop
xchg
push
dec
mov
lods
nop
adc
xor
push
ret
out
test
add
ficoml
dec
push
pop
stc
stos
jo
imul
xchg
jbe
pop
loopne
cmp
dec
or
dec
push
out
mov
cld
and
js
mov
push
xor
shrl
popf
loope
stc
xor
stos
lods
inc
mov
out
xor
mov
ja
sti
mov
aam
xor
add
cmc
sahf
das
mov
stos
gs
sub
aad
mov
or
add
ss
mov
pop
out
xorl
xchg
dec
xor
cwtl
or
stos
lret
cs
fdivrp
lahf
rorb
jmp
add
jo
adc
mov
push
cmp
push
testb
or
jl
int
call
dec
cs
cmp
jns
shrl
cli
or
or
cmpsb
and
loopne
add
xor
mov
imul
and
sbb
mov
push
push
mov
lods
xor
inc
arpl
dec
es
xor
push
cmpsl
push
adcl
and
cmpsl
xor
jl
adc
pop
ja
inc
dec
in
repz
push
js
sub
scas
in
add
adc
xor
add
shll
mov
xor
outsl
mov
xor
mov
adcb
jae
mov
mov
mov
stos
jo
xchg
pop
std
push
xor
push
push
pop
sbb
or
sub
mov
lea
pop
xchg
xchg
jnp
cmp
inc
cs
gs
test
in
inc
xor
in
mov
xor
pop
mov
insl
outsl
stos
loop
cld
jecxz
mov
dec
outsb
and
xor
adcl
fmull
ja
push
dec
test
bound
push
scas
push
inc
test
scas
mov
sub
iret
in
shl
std
and
and
mov
pop
shll
or
aas
xchg
iret
sbb
mov
pop
sub
xor
mov
cs
out
push
jo
cwtl
rcr
test
sub
jle
push
adc
sub
cmpb
addr16
cwtl
arpl
and
dec
fcmovbe
out
xor
test
mov
xor
cld
scas
push
popl
or
xor
push
ljmp
pop
int
mov
cs
adc
lret
scas
ja
or
movsl
xor
jmp
jno
into
mov
ja
sbbb
jo
cmp
adc
mov
test
push
xor
insl
xor
lahf
outsl
mov
arpl
jnp
xor
sti
daa
xor
aas
adc
adc
popf
pop
mov
xchg
je
lret
xchg
aad
adc
dec
jmp
add
movsb
mov
sub
fadd
and
adc
sub
andb
ja
jo
xor
cwtl
xor
pop
pop
imul
sahf
and
in
je
movsb
fldln2
xor
xor
mov
sub
scas
testb
imul
add
jbe
mov
stc
lock
fldcw
jo
lcall
andb
mov
leave
add
test
xor
ljmp
dec
xor
ljmp
shlb
sub
test
jp
xor
fwait
xor
mov
inc
mov
cmc
gs
lcall
push
hlt
sub
test
push
ds
fsts
imul
mov
loop
xor
mov
repnz
jnp
push
stos
rcrl
push
aas
jle
cmp
insl
dec
adc
fisubrl
inc
fwait
push
cli
inc
xor
jns
push
fistpll
pop
arpl
ret
push
scas
xchg
push
mov
add
sbb
testl
jno
jo
pop
mov
lods
loope
inc
mov
jbe
test
xor
cmp
or
jo
cmpsl
fldcw
jg
adc
rcrl
mov
imul
add
push
mov
xor
ss
lock
shll
jb
sub
dec
and
js
sbb
mov
and
roll
or
cltd
loopne
mov
out
xor
nop
popa
mov
sbb
sbb
cs
mov
lock
sbb
jb
mov
daa
add
add
xor
or
mov
jne
mov
inc
xor
cmc
push
into
aas
lcall
rol
out
inc
stos
jo
mov
pop
filds
jl
xor
jo
in
jo
call
outsb
outsl
dec
rorb
movsb
mov
sub
cs
xor
pop
iret
fidivrl
in
pop
and
andb
lods
adc
jno
repz
xor
xor
mov
bnd
das
and
into
pop
sbb
sbb
mov
aas
repz
xor
sub
xchg
sbb
add
pop
dec
lods
repnz
dec
sub
add
in
pop
movsl
cmpsb
cmc
xor
shl
xchg
and
mov
add
das
lods
lahf
dec
sub
cmpsb
pop
inc
ds
mov
jns
sarb
shrb
shl
adc
dec
jns
or
sub
sbb
xor
mov
inc
pop
jno
cmp
test
xchg
pop
xchg
adc
packsswb
aad
int3
lahf
xchg
je
lahf
rolb
loopne,pt
cltd
cmp
mov
mov
cld
cmp
push
xchg
pop
call
dec
dec
je
mov
lahf
outsl
in
mov
xor
in
mov
shlb
inc
lock
dec
sub
sbb
add
shlb
and
mov
adc
xchg
push
inc
pop
adc
cmp
cmp
aas
xchg
je
lahf
outsl
fcoms
ljmp
sub
mov
je
lahf
sarb
into
xchg
cmpsb
adc
cltd
add
lods
out
and
push
cmpsb
push
xor
repnz
cmp
cmp
cmp
jg
lahf
mov
inc
or
inc
shrb
adc
adc
dec
dec
ss
inc
add
je
xlat
ljmp
pop
dec
xchg
repnz
ficoml
aas
mov
mov
pop
dec
and
out
xor
mov
and
rolb
lds
aaa
loope
jge
loopne
adc
stos
xor
sub
enter
pop
jne
or
aas
cmp
jae
imul
sub
cwtl
shlb
jmp
add
jae
sbb
repz
xchg
shr
and
adc
ret
dec
push
aaa
adcb
fs
sbb
das
frstor
sub
test
xchg
and
loopne
int
lcall
pop
ficompl
jns
ljmp
push
nop
movsl
in
mov
insl
das
sbb
and
xchg
xor
lea
outsl
adc
ds
pop
enter
or
popa
sub
stos
adc
lahf
mov
jo
out
jp
rolb
subb
adc
mov
jo
cli
sub
scas
stos
mov
das
je
mov
lahf
pop
sub
pop
dec
cmpsl
adc
fistpl
xchg
push
jg
sub
mov
nop
lahf
add
aad
xor
adc
inc
or
push
sub
sbb
adc
or
out
inc
pop
in
lds
aas
or
outsl
push
test
jg
sbbb
jns
pop
xlat
sbb
int3
xor
lock
pop
loopne
xor
adc
add
cs
outsb
bnd
mov
int
and
jb
addr16
aas
dec
pop
imul
adc
lahf
bnd
mov
addl
insl
jns
xchg
loopne
adc
xor
sub
sbb
pushf
push
ljmp
shrl
add
inc
pop
push
jg
cmp
xorb
dec
insb
imul
adc
sbb
int3
loopne
adcb
sti
add
sub
xor
jo
sbb
daa
loop
dec
orb
and
mov
cmp
sub
cld
pop
arpl
lods
lahf
xchg
cmp
mov
dec
mov
lods
movsb
fists
dec
shrb
aam
jmp
rcl
add
cs
inc
push
pop
cmp
push
dec
stos
int3
aas
lahf
outsl
xchg
xchg
jg
jge
mov
sub
adc
test
lock
jbe
lahf
add
lods
sbb
scas
cs
lahf
pop
push
adc
dec
aaa
ds
aas
lret
cmp
js
xchg
int
in
mov
lea
jne
dec
jg
mov
imul
cmp
shlb
loopne
mov
adc
and
xor
xor
addb
jp
add
sub
fimull
jg
mov
paddusw
mov
lahf
rol
out
je
adc
gs
out
adc
sub
jae
sldt
sahf
mov
pop
insl
sbb
sub
loopne
pop
sahf
push
cmp
dec
out
adc
iret
cmp
pop
mov
pushf
jbe
jmp
dec
inc
imul
adc
scas
fs
dec
out
mov
sub
and
sub
mov
lahf
lock
shlb
mov
or
jbe
test
dec
xor
aaa
jbe
jmp
call
std
repnz
dec
and
cmc
repnz
movsb
jp
pop
mov
rorl
jmp
xchg
mov
shl
xor
fimull
cmp
adc
pop
andb
push
sub
jno
pop
je
stos
adc
aas
stos
lret
ss
push
jg
dec
dec
imul
cmp
aas
shlb
jp
loopne
pusha
push
jbe
sub
or
dec
mov
xor
das
jl
fimull
pop
inc
insb
jae
lahf
outsl
ss
pop
xor
loop
push
sub
jg
je
mov
cmc
repnz
mov
xor
pop
stos
mov
lret
cmc
mov
lahf
shrb
les
shl
cmp
dec
or
adc
jl
dec
add
insb
xor
xor
cmp
das
mov
xlat
push
dec
xchg
es
jle
and
nop
mov
push
test
aad
lock
outsl
push
imul
loopne
or
jno
outsb
inc
xor
lret
pop
scas
dec
mov
repnz
fidivrs
or
sbb
pusha
mov
xor
fs
sub
lret
nop
lock
sbb
adc
divl
repnz
inc
clc
jae
leave
cmpb
je
popf
outsl
or
stos
movsb
repnz
jg
loop
js
cmpb
inc
sbb
inc
movsb
rcrb
dec
add
sub
push
jb
mov
in
fmull
repnz
pop
fisubrl
xchg
outsl
pop
mov
lds
jg
push
xlat
mov
lahf
nop
add
out
rcrb
adc
adc
pusha
fdivs
stos
xor
bound
dec
sbb
dec
aas
jmp
jecxz
dec
neg
int3
mov
mov
ret
mov
sub
rorb
rclb
lock
mov
adc
jo
cmc
dec
das
mov
aaa
lods
imul
dec
xchg
sub
mov
outsl
jns
rcl
cmp
inc
lahf
jg
rcrb
lods
sub
add
dec
loopne
cmc
repnz
shrb
div
sbb
ljmp
add
sub
cs
lock
sbb
test
push
outsl
push
pop
fbld
pop
shl
adc
lcall
rolb
dec
adc
icebp
xlat
dec
imul
xor
dec
das
scas
push
repnz
hlt
lcall
sub
mov
inc
pop
test
js
bound
jne
mov
je
dec
jmp
into
lahf
call
and
mov
sarb
lock
mov
outsb
ljmp
mov
ljmp
mov
aas
insb
fs
sub
mov
std
pop
sub
add
jg
cmpsb
les
dec
jl
xor
or
mov
outsl
or
imul
shrl
dec
xor
push
pop
jg
rorl
bound
add
fists
sbb
jno
push
mov
mov
mov
in
sarb
je
mov
mov
sub
pop
dec
inc
das
sub
je
lahf
outsl
cmpsl
adc
lret
inc
ss
sar
mov
in
mov
lahf
dec
or
pop
push
push
adc
sbb
xchg
inc
push
push
inc
cmpsb
push
dec
xor
adc
scas
sub
adc
pop
decb
dec
negb
and
maxps
inc
repnz
jg
jns
cmovle
lahf
inc
dec
fwait
js
in
cmp
fs
lahf
lock
loopne
adc
aad
aaa
xor
dec
popf
test
pusha
sub
out
push
jl
push
cmp
je
lahf
jg
rclb
sahf
movlps
push
andl
rolb
add
repnz
loopne
ficompl
inc
adc
stos
insl
daa
cmc
ljmp
mov
mov
fidivl
mov
jmp
inc
aaa
lret
orb
mov
xor
imul
rorb
repnz
in
cmp
ds
mov
loopne
je
mov
and
das
lock
mov
out
es
mov
push
sub
inc
test
popl
iret
shrb
int
xchg
loop
mov
jp
mov
je
lahf
loopne
adc
push
popl
sbb
mov
lock
dec
int3
and
aas
arpl
xchg
lahf
gs
repnz
lock
imul
mov
push
iret
movsb
cmpsb
aas
jo
inc
jno
mov
push
adc
add
mov
jns
cmp
dec
cltd
sub
bnd
into
mov
lods
jo
dec
sub
loop
jle
lock
dec
mov
adc
mov
sub
push
xor
dec
dec
movzwl
cs
sub
push
dec
dec
imul
jg
and
int
sti
push
cmp
mov
dec
pop
cld
mov
stos
pop
cmpl
mov
inc
pop
and
outsl
push
mov
pop
dec
cld
popf
cmpsb
jno
jge
adc
in
jbe
div
out
mov
sti
repz
repnz
clc
add
scas
lock
sub
cmp
dec
mov
mov
mov
and
push
repnz
and
pop
pop
and
clc
mov
jg
mov
and
shlb
lods
loopne
sahf
xor
xor
cmp
mov
xadd
or
aas
cld
outsl
test
inc
loopne
arpl
imul
popa
lahf
movsb
sub
rorb
loopne
mov
adc
adc
fisubrs
and
sti
mov
orb
xor
aas
add
jp
lcall
scas
insl
adc
mov
adcb
sbb
lahf
std
mov
rorb
sahf
cli
jno
fcoml
shl
out
dec
inc
adc
in
lea
jno
das
or
repnz
in
out
adc
cmp
movq
scas
pop
jbe
lds
pop
out
push
sub
loop
sbb
icebp
psllw
mov
push
hlt
push
pop
adc
adc
mov
xor
lahf
aas
sbb
adc
lahf
mov
shlb
imul
lock
lcall
sub
ficoml
mov
das
mov
xlat
push
lock
mov
aas
fiadds
je
or
sub
les
bnd
ficompl
aad
adcb
cmpsb
cmp
mov
jno
das
and
aam
pop
aas
xlat
sub
xchg
pop
cmp
fidivrl
lahf
push
xchg
xlat
loop
sbb
xor
jno
aaa
stos
sub
out
adc
xrstors
lods
adc
lock
sbb
or
mov
push
subl
into
je
mov
cmp
sub
lcall
adc
jns
mov
cmp
fdivs
sub
scas
dec
imul
lods
mov
outsl
jbe
mov
and
push
das
adc
mov
cmc
and
shlb
repz
fucomip
jb
jmp
js
repnz
pop
jp
pop
xchg
push
xor
ficompl
rolb
push
mov
jl
sub
mov
loopne
js
repnz
jno
dec
loop
imul
sbb
adc
dec
mov
dec
add
inc
xor
pop
dec
in
or
bound
lahf
dec
sysexit
popw
aad
xchg
rorb
dec
and
shr
lods
mov
adc
add
packssdw
dec
jae
ss
dec
jo
jns
fidivrs
movsb
imul
pop
mov
dec
adc
push
adc
ss
shr
mov
arpl
adc
fcmove
andl
sbb
inc
xor
xor
div
imul
dec
jbe
cmp
loop
fnsave
adc
sub
je
lahf
mov
imul
negl
adc
xor
adc
incl
cmp
mov
ss
pop
cmpsb
jmp
push
movsl
mov
fsubs
pop
pop
dec
and
adc
adc
pop
sub
mov
lahf
rorb
shrd
cmpsl
lock
loopne
je
ja
add
adc
fidivl
add
sub
and
jne
aaa
scas
ds
dec
lock
sbb
pop
leave
shr
jo
ss
sub
cltd
scas
dec
pop
and
ds
cmp
stos
or
cwtl
repnz
mov
push
lock
lahf
rcrb
in
lcall
xchg
pop
fisubl
lcall
lock
push
lahf
mov
pop
bound
sub
sub
imul
mov
pop
dec
jae
es
mov
lods
aam
add
fwait
insl
lahf
int3
adc
jmp
out
movsl
lahf
jbe
rclb
popa
sarb
sub
jae
in
stos
xor
xor
mov
repnz
sub
mov
jno
out
adc
jae
or
inc
lahf
sarl
call
mov
adc
mov
mov
repnz
lock
divb
shl
test
call
mov
add
out
adc
insl
ss
cs
xchg
mov
cmp
xchg
sub
lods
stos
and
rcl
imul
mov
movsb
ret
rcl
sub
push
je
insb
or
imul
fdivrl
push
mov
inc
orb
add
dec
adc
add
fimuls
sub
js
ljmp
add
je
sub
mov
jmp
je
cs
sub
and
dec
sbb
adc
sbb
sub
out
push
sub
xchg
out
jb
push
loopne
pop
cmc
cmp
xchg
xchg
das
test
mov
jbe
arpl
mov
jle
insb
orb
mov
dec
xchg
imul
jg
mov
xor
lahf
fcmovnbe
cmp
sahf
shl
lock
xchg
or
data16
aas
add
cwtl
and
stos
shrl
dec
ret
xchg
pop
dec
mov
test
mov
aas
subl
fists
fidivl
push
pop
and
dec
push
popf
inc
xchg
sub
jno
ret
lahf
loopne
shl
mov
xor
shl
cmp
orb
inc
xor
repnz
pop
fisubrl
pop
ss
mov
je
mov
icebp
lahf
push
xchg
and
cmpsb
mov
lock
cli
out
adc
sbb
jmp
jae
sahf
js
dec
sub
jmp
pop
int
js
xorb
xor
lret
movsl
cmp
aad
pop
push
sub
mov
out
sub
addb
push
adc
push
je
sbb
adc
les
flds
cmpsb
cmpsb
js
das
mov
das
fistps
lcall
popf
xor
mov
jb
xor
inc
jne
mov
xor
jp
and
jo
dec
and
outsb
jne
scas
addb
std
pop
inc
xor
dec
or
repnz
outsl
lea
ret
loope
adc
dec
jge
xor
sbb
ljmp
adcb
and
in
sbb
sub
push
xor
test
mov
lods
rcrl
gs
dec
dec
mov
repnz
add
fsubrp
lahf
mov
pop
mov
xor
push
adc
add
dec
adc
out
mov
sub
testl
pusha
sub
in
aad
push
lods
cmp
sub
popf
rorb
xor
lock
adc
add
out
in
xor
insb
ss
xor
push
imul
pop
sti
addb
push
lret
jae
mov
imul
je
fisubrl
add
aad
mov
cmc
add
repnz
pop
cmpsl
sub
repz
add
add
aam
pop
insb
cmpsb
aaa
insb
lea
ret
sarb
and
sub
out
lahf
dec
scas
xor
fidivl
rol
stos
loope
fucompp
jbe
mov
mov
push
out
repnz
das
mov
repnz
cmp
sbb
pop
outsl
add
test
shlb
mov
sub
lahf
push
sahf
rorb
xor
xor
adc
pop
fidivl
adc
stos
test
mov
adc
adc
shll
xor
imul
jge
in
inc
lahf
mov
test
lock
pop
loopne
sub
adc
outsl
mov
cmc
cltd
xor
or
test
int3
je
mov
cmc
fistpl
outsl
xor
and
lods
pop
outsb
push
xor
and
ret
lahf
mov
xor
pop
loopne
repnz
push
fimull
add
lods
stc
int3
inc
repnz
pop
jmp
je
jbe
pop
outsl
add
mov
xor
cmp
mov
shlb
pusha
mov
bts
xor
fldt
and
dec
cltd
clc
mov
inc
das
clc
je
lahf
pop
or
dec
and
sub
imul
je
cli
pop
xchg
mov
sub
loopne
stos
je
mov
dec
pop
dec
clc
out
xchg
xchg
jo
cs
stos
test
ret
cmp
outsl
jp
pop
pop
jo
jmp
lret
push
inc
mov
jbe
jmp
and
mov
pushf
adc
mov
lock
add
hlt
sub
ss
das
outsb
pop
mov
outsl
mov
adc
and
adc
and
sub
nop
lahf
loopne
pusha
lcall
jmp
repz
scas
stos
mov
dec
pop
sub
jns
sahf
pop
xchg
adc
lcall
mov
lahf
mov
jmp
nop
inc
adc
js
dec
leave
and
and
std
cmpsb
sub
aaa
bnd
dec
jae
stc
pop
std
dec
test
insb
popa
mov
ret
xor
and
pshufw
je
lahf
jg
shlb
push
mov
sub
ret
iret
rolb
jo
push
and
mov
push
pop
sub
out
pop
jo
lods
out
pop
xchg
adc
fdivrs
cmp
rcrb
rcrb
icebp
aaa
or
mov
lahf
lahf
pop
sub
adc
shrb
daa
sub
cmp
ficoml
xor
xchg
adcb
dec
jae
xor
pop
dec
push
xchg
jge
fnstenv
icebp
outsl
inc
xor
mov
cli
lahf
cmc
jne
jle
sarl
xor
lock
jae
setae
shr
aaa
sub
stos
inc
das
aaa
pop
ljmp
out
jecxz
cmpb
cmp
dec
mov
ficoml
mov
mov
pop
lcall
fistpll
ret
inc
jne
loop
add
shll
xor
ss
outsb
loopne
cli
mov
jo
movsb
shll
in
jbe
test
ss
aas
lahf
je
jns
dec
xorl
out
inc
or
mov
imul
lods
dec
imul
shl
ficoml
lock
mov
loopne
cltd
imul
int3
scas
sti
jno
scas
lcall
mov
rorb
dec
inc
mov
ja
pusha
pop
mov
jmp
sti
into
dec
adcl
xchg
fadd
push
cmp
pop
mov
addr16
adc
jp
or
sahf
xor
sub
addr16
sbb
pushf
aas
inc
cmpsb
cmc
outsb
xchg
xor
je
bound
hlt
sub
loop
mov
push
shlb
mov
dec
sub
mov
adcl
xor
sub
cwtl
enter
movsl
sub
outsl
ds
mov
jg
repz
xor
cmp
ficoms
jge
dec
pop
sahf
mov
mov
das
cmp
jo
push
cmp
scas
inc
cmp
xor
sub
ljmp
adc
jns
stc
sub
adc
mov
adc
jmp
cs
lahf
add
xchg
cmp
jb
sahf
outsl
es
or
cmpsl
mov
pop
dec
cld
bnd
dec
ja
notl
xor
rclb
pop
rorb
shll
or
jge
in
imul
jecxz
movnti
xor
mov
repnz
icebp
test
pop
js
dec
mov
jge
push
ret
pusha
pop
aaa
repnz
xor
nop
jg
xchg
jns
dec
out
orb
es
outsl
out
mov
adc
mov
das
stos
decl
mov
popf
cltd
test
xor
add
js
inc
and
outsl
jecxz
or
and
pop
shr
stc
mov
xor
stos
jns
sbb
sub
mov
aaa
dec
inc
je
mov
lahf
pop
imul
divb
cmp
dec
andb
ret
lahf
iret
xor
rorb
xlat
push
push
mov
rcll
xlat
repnz
add
and
ret
notb
pop
sbb
dec
rcr
xchg
addl
cs
mov
je
mov
cmc
fistps
and
cld
shrb
fcomp
es
add
push
and
mov
mov
pusha
xor
xchg
das
repz
scas
push
ljmp
sbb
jbe
xor
das
outsl
xchg
je
xchg
inc
jp
inc
fwait
jg
mov
cmpsb
lret
lahf
into
insl
cmp
out
lahf
lock
fnsave
jbe
push
xchg
lea
mov
repnz
cmp
pop
icebp
shrl
icebp
adc
mov
fisubrl
mov
lahf
in
pop
rorb
popa
jne
bnd
mov
sahf
in
mov
cmp
fsubr
jmp
repnz
icebp
clc
inc
pop
xor
xor
mov
aas
push
push
mov
pusha
push
lds
lods
jg
je
lret
pop
push
shrl
lahf
imul
sbbb
adc
add
js
sub
push
sub
cmp
imul
insl
aas
mov
sub
addb
adc
push
sti
jg
movsb
ljmp
xor
jle
adc
sub
and
sub
das
lret
dec
mov
cwtl
mov
repnz
push
jp
outsl
mov
dec
jns
or
dec
xor
rcrl
shrb
shlb
xchg
and
jecxz
lods
add
and
das
sub
mov
out
pop
jnp
cmpsb
push
out
push
outsl
mov
pop
mov
movsb
scas
adc
adc
arpl
lahf
int
gs
lahf
ror
call
jns
cmc
inc
adc
jmp
stos
and
lcall
cmp
pusha
outsl
shll
sub
pop
mov
dec
sub
push
dec
sub
xchg
movsl
cmp
or
inc
shrb
mov
adc
jnp
cmc
cmc
fcomps
imul
sarb
pusha
pusha
sub
aad
or
fucomp
xor
dec
outsl
push
scas
dec
scas
lods
mov
push
hlt
xchg
pop
jle
xchg
shlb
aad
jno
xor
insl
stos
mov
dec
adc
mov
andl
sbb
clc
scas
cmpb
push
and
aad
adc
test
pop
adc
sub
dec
outsb
adc
insl
xchg
nop
add
adc
dec
insb
imul
scas
iret
scas
test
push
mov
mov
lahf
pop
out
mov
and
icebp
xchg
lahf
in
rolb
xchg
adc
pop
rcr
adc
je
imul
rclb
push
add
lods
jno
loop
scas
fmuls
sub
pushf
pop
mov
dec
jp
aas
lret
push
and
add
inc
and
ficoml
cmpb
mov
int
xor
cmp
adc
imulb
bound
fsubrl
jb
dec
sbb
xor
test
loop
cmp
xor
mov
hlt
ja
les
push
push
lret
ret
loop
subb
xor
rol
out
testb
adc
icebp
xor
das
jb
vpunpckhdq
xchg
outsl
pop
ds
cmp
popl
imul
mov
pop
mov
lahf
add
test
or
lods
jle
jl
sbb
lock
cmpsb
jmp
or
sub
dec
push
cmp
repz
aaa
push
in
pop
sbb
jno
aas
stos
addr16
push
insb
loop
dec
cmp
pop
insb
pusha
test
sbbb
dec
xchg
aaa
pusha
je
mov
mov
and
dec
lock
or
adc
insl
xor
outsb
sub
pop
fidivrs
int3
inc
xchg
push
gs
push
and
cmpsb
mov
lea
jo
in
sbb
mov
sahf
mov
sub
cmp
sub
adc
sbb
add
cld
inc
js
loop
mov
mov
cmc
sbb
out
xor
dec
dec
lcall
pop
mov
ss
lahf
in
scas
loope
stc
push
mov
in
push
shlb
lret
lock
pop
iret
inc
sub
jp
jne
loope
sub
push
dec
or
sahf
jns
rcll
rcl
rolb
icebp
sbb
mov
mov
sub
cltd
adc
push
mov
sub
pop
add
sub
jg
jnp
inc
lahf
sbb
sahf
jno
jmp
adc
ss
test
sub
xor
in
pop
xor
cli
push
mov
call
sbb
adc
sub
push
mov
dec
xor
mov
aaa
mov
sbb
mov
lock
cmc
or
and
push
adc
jno,pt
jmp
outsl
nop
subb
sbb
fisubrs
dec
adc
add
dec
rcrb
lods
dec
jle
cmp
clc
or
sub
sbb
sub
xchg
sub
je
popa
test
pop
sub
imull
xchg
push
outsl
enter
clc
popl
sub
dec
mov
ljmp
ficoml
adc
ja
jp
sarb
push
repz
ja
cli
mov
outsb
outsb
push
fisubrl
xchg
pop
dec
jge
insl
xchg
xor
push
mov
mov
repnz
pop
dec
daa
xor
dec
xchg
js
jb,pn
rolb
adc
add
dec
bound
fs
cmp
shlb
pop
fiaddl
xor
lds
rcrl
jb
mov
repz
jg
push
or
mov
popa
dec
lret
mov
adc
mov
push
dec
in
adc
push
ss
jae
clc
sbb
cmp
sub
jb
cld
jmp
xchg
and
shrb
cli
jb
cmpsb
and
xor
cltd
xor
xor
insl
and
mov
and
push
sbbb
mov
adc
mov
cmpb
mov
jmp
mov
add
loopne
cmp
lods
cmpsl
ljmp
mov
pop
test
lahf
aas
mov
ss
xchg
jg
fidivl
flds
or
seta
lock
out
cmp
aaa
xorb
jo
andb
jmp
das
mov
jmp
outsb
push
dec
rcrb
dec
fsub
pop
in
lods
testb
frstor
xchg
pop
paddq
push
rorb
call
xchg
adc
imul
test
xor
mov
xor
sbb
push
outsl
stos
imul
popa
xchg
dec
pop
es
xchg
movsl
into
adc
fcomps
sbb
dec
aad
loop
scas
pusha
and
fisubs
xorb
sub
jne
movsb
and
or
dec
lahf
into
sti
ss
fistps
je
lahf
or
rorl
push
xor
shrb
mov
aaa
push
test
push
pushl
push
or
lods
fidivs
inc
bound
dec
scas
xchg
je
dec
les
stos
jns
cmp
arpl
push
push
mov
xlat
and
sbb
loopne
cmpsb
es
ret
in
jbe
sub
repz
lahf
das
pop
adc
push
in
adc
addb
jae
dec
test
sarb
mov
xchg
shlb
add
shrb
jnp
dec
inc
into
shll
notl
faddl
sub
test
iret
jo
sahf
das
mov
int
mov
imul
xchg
aam
pop
sub
adc
adc
pop
add
jge
dec
out
or
xchg
adc
in
lods
mov
mov
icebp
dec
mov
sarb
ljmp
mov
mov
cld
lahf
ror
rolb
jo
movsl
dec
loope
out
mov
dec
popa
out
jae
gs
mov
rorb
rcrb
lea
push
pop
mov
adc
adc
aad
je
mov
ljmp
pop
inc
or
inc
push
inc
fcomp
scas
push
sahf
xor
xor
xchg
outsb
sub
xchg
jp
jo
dec
leave
xchg
lock
inc
lock
das
mov
push
jae
shll
out
mov
bound
cmc
jno
jo
decb
sub
add
imul
adc
popf
mov
sbb
rclb
dec
out
movsb
xor
cmc
sub
dec
mov
lea
jns
cmp
mov
jp
sbb
js
xchg
mov
dec
out
shrb
push
or
int3
mov
repnz
es
inc
add
sub
add
mov
clc
or
xchg
in
push
stc
pusha
mov
inc
push
adc
pop
lock
imul
ljmp
sbb
js
stos
pop
cli
xor
jle
dec
mov
fmuls
iret
sub
and
fimuls
out
xchg
sarb
mov
jns
cmc
nop
dec
pop
cmpsb
dec
add
roll
add
sbb
xor
sub
xor
cs
shr
leave
add
ljmp
stos
xor
lret
das
mov
jae
cmp
loope
jp
add
adcb
scas
scas
dec
pop
imul
jg
mov
hlt
push
pusha
or
dec
sub
cwtl
in
lods
lahf
push
dec
imul
lods
push
dec
shlb
in
test
mov
nop
cmpb
or
xor
int
push
adc
mov
xchg
ret
pop
jg
push
or
test
lahf
stos
mov
lahf
dec
pusha
xchg
dec
add
inc
loopne
and
mov
lods
dec
das
dec
dec
sub
mov
cwtl
scas
xchg
mov
push
sbb
sub
in
xor
lcall
mov
jle
dec
sub
mov
cwtl
mov
cmpsb
das
lods
test
jns
xor
xchg
pop
pop
xchg
in
inc
cwtl
out
lea
sahf
push
and
mov
mov
push
pusha
lds
xchg
or
stos
lahf
adc
and
add
push
lret
ret
cs
mov
mov
lods
sbb
dec
xchg
out
xchg
adc
or
lahf
jg
xorb
pmulhuw
lods
in
sti
xor
mov
notb
push
mov
stos
scas
stos
cltd
das
dec
in
fstps
psubsw
repz
sub
mov
xor
ret
outsb
les
xor
loop
insb
in
rorb
fidivrl
call
mov
jb
cmc
push
das
daa
imul
outsl
insb
je
mov
lahf
pop
adcl
lret
mov
lret
mov
fisubl
inc
inc
push
push
test
or
jo
pusha
lock
jbe
xor
pop
adc
js
cs
outsl
xchg
ljmp
mov
jl
sahf
jp
js
gs
push
outsl
adc
xor
dec
outsb
xchg
cmp
pop
cld
jg
jb
jnp
xor
sbb
jecxz
ja
inc
loopne
jne
bound
mov
orl
pusha
or
jb
aaa
cmp
imul
sub
mov
lahf
jg
xor
repnz
sarb
jb
out
cwtl
mov
push
mov
dec
adc
stos
xor
das
arpl
sub
or
push
repnz
push
ss
jno
adc
pop
push
scas
rclb
mov
cmp
pusha
je
lret
mov
aad
mov
push
xrelease
out
cmp
inc
das
dec
sar
sbb
cmp
cmp
aas
mov
dec
mov
jg
cmpb
mov
outsl
mov
push
adc
inc
mov
je
mov
mov
ret
mov
insl
add
notl
xor
dec
scas
inc
jbe
dec
int
jp
mov
mov
out
mov
jo
ljmp
insl
imul
and
aaa
cmpsb
rorb
and
out
dec
jp
adc
jmp
clc
xchg
mov
sub
mov
add
xlat
push
or
ja
inc
push
ficompl
xchg
lock
jle
jge
mov
fistpll
xor
add
dec
pop
push
and
in
jns
scas
inc
push
dec
lret
insl
or
xor
push
jmp
out
andl
in
hlt
fcoms
rcrb
lock
sub
lcall
adc
push
imul
xor
jmp
out
outsl
xchg
lahf
mov
push
pusha
mov
or
push
push
sub
push
test
dec
subl
cltd
pop
mov
add
mov
jmp
sub
and
dec
cmpsb
cmpsb
xor
xor
lahf
jg
loope
and
mov
sbb
or
or
adc
mov
mov
outsb
add
jns
shll
das
pop
mov
push
insb
pop
sbb
rcll
mov
data16
pop
sub
mov
push
cmp
or
lods
mov
psadbw
sbb
aaa
inc
adc
stos
xor
es
adc
lock
mov
fisttps
dec
mov
xchg
cmp
push
xorb
pop
jae
xchg
pop
cltd
fistps
scas
inc
leave
imul
lock
stos
gs
adc
aad
das
mov
das
iret
jo
push
icebp
push
cmpsb
lahf
add
sbb
dec
psllw
ud2
lcall
int3
aaa
scas
adc
hlt
push
pusha
clc
jbe
stc
add
es
inc
add
fidivs
and
dec
adc
add
pusha
pop
xor
pop
jl
mov
sbb
mov
mov
push
xorb
dec
push
orb
jo
xor
pop
adc
sub
outsb
cmc
mov
jg
mov
pop
push
repnz
fisubrl
jmp
and
jg
icebp
adc
xor
jbe
dec
adc
test
adc
jge
je
les
dec
cld
pop
sub
std
repnz
sub
inc
mov
fwait
mov
sbb
pop
sbb
sahf
push
sub
sahf
in
push
cld
out
loopne
insb
sub
xchg
mov
sbb
test
aas
cmp
xor
xchg
dec
test
lds
fsubr
sbb
add
jmp
inc
xor
pop
push
mov
cmpsb
jl
adc
dec
iret
mov
xor
mov
icebp
das
cmc
ljmp
or
rclb
and
or
ret
mov
jno
mov
inc
hlt
aaa
bnd
sbb
mov
adc
jb
push
cmp
xor
dec
das
mov
je
pop
jbe
xchg
imul
test
mov
jns
es
mov
je
or
mov
mov
jle
int
pop
sub
mov
subb
push
sahf
scas
into
out
push
lret
sahf
adc
inc
jb
dec
daa
cmp
lods
in
scas
jno
mov
lahf
andl
aam
aaa
mov
and
push
sub
mov
je
arpl
dec
shll
sub
outsl
fistpl
fimull
rcll
inc
cmpsb
xchg
mov
mov
mov
mov
mov
jnp
jmp
mov
das
mov
pop
insl
xchg
sub
iret
jecxz
add
and
mov
push
loop
and
jg
cmpsb
inc
jo
lahf
fdiv
repnz
imul
mov
shll
loopne
aaa
xchg
fs
xchg
mov
mov
xlat
sub
add
icebp
aam
xchg
push
icebp
repnz
mov
add
lea
or
sub
add
sbb
movsl
adc
lods
iret
push
outsb
rol
add
xor
sub
jle
pop
dec
cmpsb
mov
cmp
stos
cmpsb
mov
mov
in
aas
mov
mov
into
xchg
inc
sub
inc
scas
cmovnp
imul
mov
cmp
xor
pusha
dec
xchg
test
repnz
dec
clc
xor
scas
sub
orb
aaa
jbe
imul
xor
outsl
push
stc
adc
sarl
dec
rcll
fdivr
push
inc
cmp
sbb
pop
mov
jle
sbb
lock
lock
adc
lods
lret
mov
js
bound
dec
sub
cmp
jp
pop
jnp
push
push
cli
jbe
test
fs
lock
mov
lahf
dec
or
cmp
mov
pop
js
daa
xchg
movsl
sub
mov
xor
das
lea
pop
mov
rcll
mov
bound
cmp
or
push
cmp
adc
decl
xor
mov
rcrb
mov
dec
and
cmp
out
sub
push
mov
xor
push
icebp
scas
jb
lret
adc
mov
dec
sub
lahf
mov
add
add
push
js
int
loopne
adc
xchg
sysexit
xchg
sub
das
dec
int3
iret
or
roll
lret
shlb
xor
popl
loop
adc
dec
pusha
lods
mov
rcr
hlt
xor
mov
inc
fcompl
iret
lock
loopne
scas
mov
and
add
es
inc
imul
sub
jbe
pop
cltd
adc
lret
xor
sub
adc
xor
xor
mov
jp
cmpsb
push
fwait
outsl
pop
cmpsb
push
inc
gs
adc
jmp
cmp
jp
jne
mov
inc
jge
loop
in
test
and
push
mov
jbe
shlb
push
loope
add
or
lcall
aaa
cmpsb
sub
push
adc
mov
sar
rorb
repnz
rcrb
stos
jb
lock
mov
ret
fildl
arpl
mov
scas
or
sbb
test
or
push
ficompl
test
sub
push
loope
adcb
icebp
lahf
lods
mov
rorb
mov
cmp
in
jns
pusha
xchg
je
cs
adc
push
dec
push
stos
lea
addr16
and
pop
add
sbb
mov
push
ficompl
lret
or
xor
outsb
ret
fadd
lret
dec
out
adc
sahf
mov
adc
pop
xchg
mov
pop
ret
icebp
ret
pusha
sarb
je
add
and
divl
xchg
nop
popf
cmp
shlb
les
mov
pop
xlat
or
inc
pop
ljmp
pop
dec
sub
sub
lret
daa
lahf
outsl
adcb
xor
sub
ret
lea
clc
mov
scas
jmp
je
sub
loopne
xor
call
test
popa
sub
imul
adc
and
lods
mov
xorl
int
mov
inc
mov
push
mov
sbbb
dec
mov
pop
out
inc
test
dec
sub
and
inc
dec
dec
push
ret
scas
scas
lods
pop
pop
cmp
jg
cmpsl
push
push
ret
negl
jb
xchg
shrl
xor
push
out
adc
sahf
add
clc
out
and
xorl
icebp
ret
int3
pop
fldt
fistpl
mov
mov
adc
sahf
jne
adcb
mov
popa
push
scas
loope
scas
jae
es
adc
add
cmpsb
sbb
lock
jl
sarl
xchg
dec
dec
int
outsl
out
adc
inc
sahf
icebp
mov
jp
jg
jo
xor
sbb
lahf
pusha
rclb
pop
xor
pop
sbb
aaa
push
lock
inc
xor
into
dec
stos
wbinvd
mov
jg
stc
mov
aaa
adc
sbb
repnz
test
add
mov
in
or
adcl
lds
dec
fisubl
adc
sub
xchg
adc
filds
xchg
mov
pop
rolb
movsb
push
mov
rolb
add
dec
jle
mov
ljmp
jp
incl
pop
inc
ja
loop
bound
cs
stos
decl
aaa
push
dec
pop
ret
xorb
jo
adc
ret
lods
inc
outsb
ficompl
outsb
cmp
out
sub
ljmp
int3
je
rorb
mov
cltd
loopne
or
shrb
mov
jo
loopne
xchg
pop
test
mov
and
sub
rcll
fs
inc
sub
aas
cli
and
outsl
pop
push
das
lret
repz
mov
nop
sub
ret
mov
je
fcomps
jmp
insb
or
out
sahf
jle
stos
jg
into
call
out
add
push
mov
pusha
xor
push
sub
xchg
and
imul
lahf
mov
xor
rcr
sbb
xor
adc
lock
jae
iret
and
xor
clc
xor
lret
mov
aas
int3
ss
cmp
and
cmp
lea
into
stc
xor
push
cmpsb
sub
mov
xchg
out
or
xadd
xor
test
sub
add
subb
mov
jb
dec
cmp
and
out
xchg
je
cli
push
push
and
imul
xor
xor
loope
and
xor
lods
andb
xchg
xor
jmp
and
xchg
movsl
lahf
out
jecxz
dec
and
data16
das
cld
adc
dec
cmc
push
cltd
adc
pop
push
cwtl
mov
stos
push
insb
xor
jecxz
jae
or
dec
mov
int
xor
into
dec
cmp
mov
push
jl
mov
call
mov
ss
ror
jae
push
iret
cmp
subl
loope
out
push
sub
pop
mov
mov
out
dec
push
je
jae
add
in
outsl
cmpsl
sbbb
jmp
xchg
lods
inc
sbb
mov
jmp
test
mov
adc
cmpsb
rcrb
mov
push
pop
pop
dec
lods
aas
dec
pushf
adc
cmpsb
lret
and
cld
movhps
cmpsb
loope
lcall
mov
or
or
xchg
dec
loopne
mov
mov
adc
scas
scas
nop
jo
xor
dec
incl
xor
andb
mov
add
insb
dec
ret
psubusb
int3
or
jp
sbb
push
lea
and
lcall
outsb
or
cs
mov
scas
cmp
mov
mov
dec
mov
imul
and
repnz
add
pop
loopne
dec
and
addl
sub
pop
das
imul
shll
xor
pusha
mov
mov
jbe
mov
jmp
lock
inc
lahf
adc
jo
xor
sub
das
outsb
je
clc
imul
jp
dec
nop
pusha
mov
leave
iret
sub
xchg
loop
sub
jg
and
sarb
or
pushf
fs
pop
xor
imul
adcl
icebp
dec
push
pop
inc
sbb
loop
cmpl
mov
hlt
mov
loope
jmp
adc
imul
push
ret
add
xor
xor
lea
imul
dec
sahf
out
je
push
sbb
cmpsb
add
mov
cmp
aas
mov
lcall
fcmove
sub
adcl
dec
mov
adc
dec
inc
das
cmp
in
dec
repnz
fidivrl
and
lock
loopne
cmpsb
adc
adc
insl
mov
xor
das
add
test
pop
dec
jo
mov
jmp
ret
pop
mov
lock
mov
je
dec
lahf
adc
rcrb
xorb
cmp
loopne
dec
rcll
mov
andl
div
iret
dec
inc
lods
cmp
imul
lcall
test
mov
cld
daa
rcr
lock
cmc
jb
adc
push
test
das
leave
dec
pop
sahf
imul
mov
xchg
pop
in
mov
xor
imul
repz
lcall
dec
lret
pusha
pop
lods
fdivr
outsb
dec
neg
sub
sarb
jo
mov
out
shlb
subb
insb
mov
dec
push
sub
repnz
pop
xchg
inc
mov
and
sub
fmuls
repnz
enter
rep
sbb
adc
icebp
jae
cmpl
je
fiaddl
dec
sahf
cmpsb
ljmp
dec
and
fmuls
mov
dec
in
mov
pusha
ljmp
stos
lods
xchg
dec
das
imul
adc
sahf
movsb
sbb
sub
aas
jmp
rclb
ret
scas
dec
sub
xor
dec
cmpsb
out
insl
bnd
ret
sub
je
pop
sbb
or
mov
inc
xchg
ds
adc
sub
inc
or
pop
leave
push
imul
xor
test
scas
adc
cmp
jge
rorb
cmpsb
cli
jb
mov
mov
adc
pop
mov
push
ds
mov
arpl
mov
gs
shll
mov
imul
cmpsb
fimull
jb
test
mov
xchg
adc
xorb
addr16
subb
sbb
lods
pusha
dec
rclb
dec
jmp
cld
rolb
in
mov
dec
popl
sarl
jno
scas
adc
rorl
add
das
iret
loope
pop
scas
mov
pusha
or
stos
push
jmp
divb
loopne
fimuls
cmp
scas
pop
lock
sub
or
pop
ja
push
imul
pcmpeqw
dec
fisubrl
jbe
aas
mov
es
jns
mov
mov
push
xchg
cmp
dec
xor
sbbb
lock
leave
fwait
cmpsb
push
mov
inc
test
mov
mov
in
adc
shlb
sub
mov
push
imul
sub
in
rorb
mov
call
jp
mov
das
adc
aaa
add
test
lea
xchg
or
mov
dec
mov
or
pop
push
test
mov
mov
push
dec
shrb
mov
pusha
xchg
scas
or
lret
push
add
sub
mov
dec
mov
rorw
push
adc
insl
push
fdivs
mov
lods
mov
cli
mov
rolb
adc
stc
iret
ljmp
sub
xchg
push
cltd
jbe
mov
es
call
push
lret
int
pcmpgtb
leave
dec
or
xlat
ret
ret
mov
jne
loop
cmp
dec
test
or
imul
push
add
mov
shrb
push
je
movsb
mov
cmp
push
cld
mov
sub
aas
or
xchg
xor
aaa
push
and
ds
cmp
cmp
rcrb
adc
roll
add
movsb
or
xor
mov
sbbb
notb
mov
jge
push
cmp
inc
dec
sbb
xchg
test
dec
sbb
or
lock
adc
ja
bound
into
scas
cmpsb
test
add
mov
mov
jmp
or
fsubrs
cmp
addr16
xor
xor
roll
inc
ja
xchg
push
sahf
insb
jp
lods
pushf
insb
xor
and
inc
insb
mov
lods
mov
push
imul
sbbb
std
push
mov
pop
sub
lcall
xlat
pop
arpl
xchg
sub
jbe
ret
push
fsubrs
repnz
cmp
inc
push
cmp
sub
into
clc
push
lock
ret
out
cmpsl
pop
pop
cmp
aas
shrl
push
mov
mov
xor
xchg
adc
addb
sahf
pusha
andl
adc
pop
sub
lods
out
and
das
add
lods
dec
push
cld
leave
fldcw
jae
pusha
divb
jae
pop
sbb
xor
orb
aam
adc
and
cmp
pop
push
mov
lods
push
andl
cmp
add
je
stos
outsb
out
adc
shll
xor
mov
pusha
and
cmc
and
lahf
pop
push
cmp
lret
cmp
scas
xchg
hlt
push
cld
inc
sub
pop
push
not
loopne
add
dec
stos
das
sbb
sarl
mov
dec
dec
pop
adc
xchg
mov
idivb
dec
jle
mov
xor
fisubl
push
mov
cmpsb
xchg
and
fsubrs
outsb
repnz
fisttps
sub
gs
push
repnz
dec
bound
pop
dec
xor
or
out
pushf
in
sub
ljmp
orl
mov
sub
daa
js
inc
or
push
jbe
pop
test
hlt
idivb
mov
dec
es
push
clc
minps
xor
push
mov
loope
push
xchg
punpcklbw
push
sub
jg
addr16
lock
lahf
push
shrl
scas
jo
mov
push
mull
nop
jne
outsb
jecxz,pn
sbb
mov
dec
into
xchg
xor
adc
xor
clc
xchg
jo
shr
mov
dec
mov
lcall
mov
mov
in
jo
mov
pop
jmp
adc
fwait
mov
mov
mov
mov
sahf
lods
scas
adc
xchg
bound
bound
xchg
dec
mov
sub
shl
jp
shl
inc
dec
dec
xchg
inc
jo
cmp
add
je
push
sub
sub
imul
sub
or
xchg
add
adc
bound
cmp
popf
je
call
xchg
mov
xadd
lock
shl
lahf
adc
lret
mov
in
xor
sbbb
cmp
imul
jg
xor
and
lahf
xchg
mov
inc
stos
sar
mov
loopne
iret
pop
cmp
add
sahf
aaa
sub
outsl
icebp
loop
dec
lods
out
fidivl
cmp
add
mov
enter
push
jmp
mov
mov
aam
outsb
repnz
jns
xor
popf
je
fsubrs
stos
adcl
jl
aas
ss
hlt
in
xlat
aad
bound
imul
jo
mov
into
je
in
repnz
cmpsb
jb
stos
adc
iret
dec
lods
pushf
hlt
ret
daa
stos
mov
cmp
pop
cmp
jns
insb
ss
popa
mov
stos
neg
jb
loopne
cmc
mov
or
mov
xchg
cld
sbb
sub
xor
into
mov
je
lahf
lahf
jo
mov
and
adc
aam
adc
mov
add
push
repz
sub
rol
in
cmc
xor
lcall
call
clc
imul
pushl
outsl
pop
xchg
fldenv
xor
dec
pop
iret
les
adc
pusha
fwait
mov
sbb
inc
xor
sarb
jo
aaa
clc
rcrl
mov
and
mov
sbb
aam
scas
sbb
dec
decb
push
mov
fstpl
cmp
cmp
sub
mov
in
hlt
test
ret
outsl
or
fdivrs
sbbl
scas
mov
cmp
stos
push
lahf
fistps
mov
mov
push
imul
das
xor
push
jbe
sub
mov
sbb
clc
lret
push
lahf
and
mov
add
rcl
aad
jmp
dec
in
lcall
jmp
pushw
aas
test
sbb
pop
xor
lahf
cmp
repz
inc
ds
or
pop
fsubr
dec
mov
sbb
repz
pop
lcall
outsb
lds
and
addb
std
and
ds
ss
dec
lahf
shlb
add
sub
icebp
push
pusha
bound
dec
sahf
pop
imul
xchg
push
or
xchg
dec
pcmpeqw
loope
loope
sbb
faddp
dec
jno
jg
nop
mov
jo
repnz
cwtl
xchg
stos
xor
lcall
sbb
imul
imul
adc
pop
shrb
outsb
dec
inc
inc
lret
cmc
out
cmc
inc
stos
pushw
mov
insl
xchg
stos
hlt
or
jns
adc
push
out
dec
adc
mov
and
mul
xor
test
aam
movsl
dec
orps
jbe
es
mov
inc
push
ljmp
rolb
dec
xchg
or
sub
jo
jno
aaa
adc
sub
scas
adcl
bound
mov
movsb
dec
insl
clc
or
sub
iret
push
mov
add
inc
and
push
dec
shrd
pusha
cmp
push
jns
lock
pop
loopne
ficompl
push
out
jno
sub
add
into
sbb
lret
jge
push
push
testl
mov
jo
ret
ljmp
out
imul
fidivs
popa
cmp
imul
stos
jge
cwtl
adc
push
cmpsb
sub
mov
dec
xor
xchg
scas
jb
sbb
jno
pop
mov
sub
repz
lods
mov
xchg
inc
mov
mov
mov
into
inc
stc
rclb
in
shl
lods
mov
sbb
push
mov
and
cmpsb
pop
outsb
pusha
clc
das
jmp
inc
xchg
push
cmp
test
push
xchg
test
push
addl
icebp
dec
push
fidivl
pop
push
cmp
gs
aad
subb
adc
pop
out
add
adcb
bswap
lcall
xchg
out
lods
jo
pop
mov
je
movsb
xor
xchg
jmp
cmp
xchg
fdivs
pop
sahf
jne
xor
stos
ljmp
push
dec
adc
rol
pop
xor
aaa
or
sbb
shr
aaa
loope
es
shlb
rcl
sub
and
stos
mov
rcrb
xor
mov
lcall
mov
sub
call
mov
and
clc
mov
lahf
out
and
shlb
jno
mov
cmp
xor
xchg
sahf
xor
popa
jne
jo
subl
aas
pop
je
or
push
imul
jp
out
pusha
fisubrs
adc
xor
lahf
std
and
bound
xor
xor
hlt
inc
pop
lcall
mov
push
sub
mov
loop
pusha
xor
push
sbb
mov
icebp
fiadds
pop
leave
adcb
hlt
stos
sub
repnz
inc
lret
pusha
push
testl
nop
push
mov
or
icebp
outsb
sbbl
loop
or
dec
push
ss
imul
out
imul
or
xchg
push
pop
or
push
lcall
jbe
dec
adc
push
movswl
xchg
ja
repnz
aaa
cs
mov
mov
insb
mov
movsb
test
test
subb
jo
cmc
scas
lahf
ja
push
int3
mov
xchg
jle
pop
dec
mov
mov
lret
lea
mov
add
sub
sub
mov
cli
es
int3
ret
jbe
mov
sbb
pop
jg
jge
mov
lahf
xor
lods
adc
fisttpl
adc
mov
sub
mov
sub
das
and
xchg
dec
outsb
pop
jb
dec
clc
sub
pop
mov
imul
xchg
mov
cmc
insl
lahf
add
aaa
rclb
sub
adc
cli
mov
fistl
bound
enter
imul
mov
cs
dec
and
adc
xor
loop
ret
push
add
push
sbb
movzbw
not
setp
push
test
mov
pushf
bsf
mov
movb
xchg
mov
add
sub
lea
pushf
mov
mov
jmp
clc
ror
call
add
sub
shl
mov
neg
shl
jmp
stc
cmp
push
lea
jae
pushf
cmp
pushf
pushf
pusha
call
xchg
push
out
adc
xor
push
jecxz
out
nop
sub
dec
imul
push
adc
icebp
repnz
sbb
push
shrl
pop
lcall
popa
sbb
push
add
mov
push
out
jg
test
xor
add
sbb
sub
lret
xchg
adc
in
in
lea
lods
cmp
bswap
add
aas
jecxz
lea
jecxz
pop
scas
adc
add
push
xchg
pop
mov
mov
or
pop
repz
sbb
inc
mov
ret
xor
xchg
out
pop
jp
xchg
sarl
mov
mov
lret
and
and
mov
test
mov
sbb
aas
mov
fwait
daa
mov
fldcw
imul
cltd
call
mov
pusha
movw
pushf
pusha
lea
jmp
push
dec
inc
add
rcl
sbb
pushf
xor
xchg
add
dec
mov
clc
mov
stc
test
push
shrd
mov
bt
cmp
stc
sub
pusha
jmp
mov
pushf
pusha
pusha
movb
lea
jmp
inc
sub
xlat
lret
dec
ficomps
jae
mov
mov
movsb
dec
mov
sub
push
pop
test
sti
dec
mov
roll
leave
cli
xor
inc
push
popf
jmp
call
and
sbb
jne
fwait
and
add
js
lods
lret
gs
xlat
lret
push
fbstp
add
jnp
xchg
inc
adc
adc
dec
aaa
jns
jp
int
test
movsb
cmp
cmc
test
sti
push
ja
or
sbb
jp
cwtl
and
jb
add
lcall
data16
lret
fs
jle
lods
aaa
les
jns
lahf
sub
es
mov
mov
int
ret
jecxz
int3
sbb
push
sub
jb
dec
mov
leave
fsubl
ljmp
xchg
pop
mov
in
cmp
hlt
out
jmp
clc
loopne
mov
adc
xor
js
and
roll
repnz
mov
aam
cli
mov
pushf
cs
fistpl
lahf
cmp
push
mov
lret
int
std
push
cmp
aaa
push
adc
pushf
jnp
mov
xchg
adc
out
mov
lahf
inc
lret
or
xchg
cltd
cmp
pop
in
sbb
jmp
loop
pop
and
lea
jae
pusha
lea
jne
pusha
mov
call
mov
lret
xor
push
ljmp
aad
testb
cmp
int
test
popa
adc
dec
adc
xchg
mov
rcrw
and
fsubs
mov
ds
movsl
add
cwtl
shrl
sti
or
adc
lret
sub
mov
dec
scas
nop
test
sbb
jecxz
rcl
icebp
dec
imul
inc
fsubs
xchg
push
pushf
ss
aas
test
mov
lcall
or
jg
popf
and
sub
not
mov
ret
jecxz
mov
xchg
jne
dec
add
mov
adc
push
dec
and
fldl
dec
mov
jecxz
add
mov
daa
jno
sbb
fwait
rorl
lods
jnp
dec
mov
push
cmp
jns
push
xor
movsl
mov
push
and
push
bswap
mov
test
loop
add
or
shll
pop
fs
jbe
add
mov
inc
stos
sbb
pop
or
cmp
stc
rorb
rorb
sbb
cs
xchg
inc
xchg
cmp
pop
mov
sbbb
dec
push
fnsave
imul
leave
sbb
aam
mov
mov
fs
xor
pop
ja
mov
lods
xor
push
ljmp
xor
cs
call
mov
mov
negb
xchg
xchg
fcoms
add
clc
sub
jbe
pushl
clc
jmp
lea
ja
rol
neg
dec
cmp
sub
bsf
bswap
add
bt
btr
cmp
mov
bt
mov
bt
repnz
pusha
pushf
lea
jne
jl
movsbw
lea
movsbw
movb
jmp
call
fs
xchg
arpl
lret
or
out
mov
mov
ss
fisttpll
and
jo
negb
icebp
daa
jbe
push
sarl
push
adc
add
and
test
aad
push
push
aam
push
aam
or
clc
inc
sub
js
scas
ss
sub
xchg
in
pushl
lea
je
push
add
cmc
cmp
movb
lea
jb
clc
clc
cmp
pushf
mov
jmp
mov
lea
je
bts
stc
add
pusha
sub
neg
seta
neg
shr
push
mov
pushl
shld
add
shr
add
lea
inc
bsr
mov
jp
test
shr
stc
push
cmp
pushf
lea
je
clc
jmp
test
sub
test
pushf
jmp
call
lea
pushl
pushf
jmp
dec
xchg
iret
xlat
lret
xor
push
in
xchg
movsl
sub
pop
in
lock
cmc
fsubs
add
jecxz
jge
mov
movsl
fs
mov
mov
sub
sub
or
ficompl
arpl
cli
inc
xchg
dec
jo
aas
cmpsl
popa
mov
in
sar
popf
cmp
add
cmp
out
aaa
lds
movsl
setae
clc
in
int3
dec
push
lea
icebp
xchg
sub
inc
and
mov
shr
mov
pushf
and
mov
add
pushl
push
mov
lea
jmp
sub
sub
btr
push
bsr
mov
adc
lea
movsbl
mov
push
push
test
mov
mov
rcl
shld
push
ror
inc
pushf
push
mov
rcr
xadd
xchg
bt
or
mov
not
shr
btr
mov
shr
cmp
mov
call
call
adc
mov
fs
cwtl
daa
ret
popa
repnz
test
inc
push
popf
rcrl
fnstcw
cmc
jne
jno
sbb
push
imul
fldcw
imulb
jb
dec
pcmpgtd
ficoml
and
add
insl
aaa
lds
lods
rcll
incb
testb
pusha
in
insb
or
hlt
dec
enter
xor
mov
pusha
xlat
lret
rcrl
sbb
pop
out
add
imul
cmp
push
mov
lret
pop
std
sti
jno
or
or
pop
ja
mov
sti
loop
outsl
mov
pop
mov
movsb
mov
pop
shl
out
loopne
cmc
das
repz
push
mov
push
in
addl
rcrl
lcall
iret
in
lret
mov
mov
mov
mov
mov
or
or
add
shl
mov
jmp
push
mov
lret
arpl
jae
lahf
add
sti
xchg
test
adc
cld
sahf
add
sub
push
insb
pop
jle
test
cmpsb
inc
call
mov
mov
push
mov
lret
sti
inc
add
cwtl
jp
pop
into
icebp
subl
icebp
or
fucomip
test
orl
mov
dec
dec
dec
int3
gs
arpl
mov
sbb
sub
into
pop
icebp
jge
jo
fs
hlt
cs
push
and
add
push
cmc
in
dec
add
cmp
lods
repnz
mov
adcb
mov
testb
xchg
sbb
adc
iret
rcrb
popf
jmp
push
enter
sahf
push
popa
std
mov
out
push
in
imulb
lret
sub
fidivrl
aas
fwait
movsb
aaa
movsl
jp
mov
jae
mov
mov
scas
lahf
jle
cld
ljmp
clc
test
mov
gs
fistpll
jle
cmc
fwait
jnp
add
mov
dec
movsb
lods
push
test
loope
shr
jg
subl
popf
adc
jmp
pop
jbe
or
mov
xor
ds
es
jg
pushf
hlt
mov
push
mov
xchg
xor
pop
fxtract
sti
loop
mov
mov
mov
mov
jns
mov
int3
aad
xor
mov
sbb
push
jbe
orl
sub
pushf
sbb
ffree
mov
xchg
xor
in
push
gs
ja
mov
stos
inc
shlb
or
adc
inc
iret
push
and
xchg
iret
cmp
lret
or
cmp
jbe
test
xchg
pop
stos
sub
cs
pop
mov
push
test
jecxz
or
cmc
es
les
adc
sbb
sub
testb
xchg
sahf
push
push
adc
mov
inc
pop
inc
data16
cmpsb
bound
push
and
or
faddp
int3
jb
mov
leave
out
enter
sub
mov
int
jnp
ficompl
idivl
mov
fbld
xchg
test
dec
mov
sbb
xlat
lret
and
adcb
inc
int3
gs
mov
sahf
adc
vmulss
mov
or
mov
mov
jg
lea
lods
add
cmp
inc
pop
lock
pop
inc
xchg
pop
sub
push
mov
popf
daa
mov
aad
out
jns
mov
dec
jecxz
inc
xor
lret
push
sub
jns
scas
adc
sub
cmp
cs
rcll
dec
sbb
aad
sub
cmpsb
mov
adc
add
mov
and
scas
cmpsb
fwait
outsb
push
fildll
fsubs
je
std
adcb
in
popa
jo
or
push
loope
std
xchg
daa
lds
pop
testb
ret
pop
xlat
lret
test
jb
xchg
das
rorb
mov
xor
and
lods
cmp
fisubrl
mov
jecxz
aaa
cmpsl
jnp
clc
jno
push
sbb
mov
add
push
mov
mov
fadd
add
jns
jg
pusha
imul
roll
bound
add
mov
jp
mov
lahf
sbb
sbbl
xlat
lret
pop
in
jae
push
inc
popa
dec
push
rol
daa
out
add
xlat
inc
mov
popf
sub
pusha
in
lds
jnp
or
pop
imul
mov
clc
mov
inc
push
add
gs
mov
xor
repz
sti
ss
sarl
fcomip
push
cmp
xchg
int
adc
pop
ret
enter
pop
mov
push
xlat
jne
pop
sbb
sub
movsb
pop
not
mov
not
mov
movw
pushf
lea
jmp
jle
add
lret
loope
pop
mov
popa
cli
les
insb
fcmovnb
cli
mov
mov
jecxz
mov
mov
xchg
pop
mov
daa
cmp
lock
adc
outsl
ret
std
data16
int3
leave
mov
push
rorb
xchg
and
gs
in
js
pop
jp
nop
pop
test
jne
fwait
sbb
xor
jg
pop
or
ss
xlat
lret
sub
insb
icebp
xchg
sbb
push
lahf
push
and
jne
sbb
gs
xchg
sbb
xor
xchg
leave
out
pushf
es
enter
add
xchg
pop
pop
pop
lret
out
push
ret
add
push
fldt
jmp
sti
mov
lods
pop
dec
cmp
mov
jecxz
pop
jecxz
setg
cmc
jne
out
xor
fdivp
jl
in
jb
dec
cmpb
call
add
dec
gs
popa
addr16
outsl
js
add
xor
jge
add
push
nop
pop
xlat
lret
add
imul
inc
mov
pop
mov
jno
mov
bound
mov
mov
test
and
std
xchg
xor
les
inc
pop
inc
mov
push
sahf
repnz
mov
and
add
mov
mov
cli
test
leave
add
lret
loopne
decb
push
out
jno
inc
mov
xor
mov
jo
mov
repnz
mov
dec
ror
mov
adc
xor
ret
loop
xchg
xchg
xchg
clc
fwait
out
frstor
jno
test
or
push
int3
shrl
movsl
lea
mov
mov
cmp
xchg
mov
das
sbb
pop
nop
lahf
cmp
pop
loopne
push
mov
insb
idivb
adcl
lcall
or
mov
int3
xlat
jbe
mov
aad
mov
das
xor
je
cmpsb
xor
out
xchg
pop
sahf
add
or
or
out
xor
xlat
arpl
insb
jae
call
scas
inc
fnsave
test
mov
inc
in
jnp
ljmp
lea
ja
pusha
mov
bt
imul
pusha
cmp
add
pushf
mov
push
mov
lea
jmp
jmp
pushf
push
lea
je
pusha
stc
bt
pusha
add
cmc
cmp
jmp
mov
aas
pop
xlat
lret
popf
inc
mov
mov
lods
dec
jo
ret
cmp
or
jmp
jecxz
push
lahf
add
hlt
jno
sbb
test
call
pop
bnd
xchg
call
inc
ret
add
and
call
call
call
push
cmpsl
mov
dec
fnsave
test
ja
lea
lahf
imul
push
movl
dec
clc
clc
shl
call
and
xlat
lret
or
mov
cmpsl
fimuls
movsl
daa
xchg
inc
pop
out
xor
cs
call
or
push
sbb
and
fwait
pop
test
or
call
call
es
mov
mov
imul
or
rorb
int
repnz
mov
mov
mov
add
je
das
push
bts
shrd
shl
bswap
push
rol
not
push
inc
and
aam
movsbw
mov
cmp
cmc
bt
test
push
push
jmp
pushf
mov
movsbw
not
movsbw
mov
mov
mov
mov
pushl
mov
lea
jmp
cmpsl
mov
add
jmp
cmpsl
movsb
enter
sbb
sbb
mov
sbb
adc
mov
subb
add
jmp
cmpsl
mov
test
or
jmp
cmpsl
mov
cmp
sbb
cmpsb
popf
cmpsl
mov
loopne
sbb
push
xor
cmpsl
mov
jmp
cmpsl
mov
add
jmp
cmpsl
mov
cld
pop
push
sbb
testl
sbb
loop
fisubs
pop
sbb
iret
push
jecxz
cmpsl
mov
roll
jmp
cmpsb
inc
sbb
dec
add
jmp
cmpsl
movsb
lret
add
jmp
cmpsl
movsb
decb
unpckhps
sub
mov
inc
cmp
mov
jo
mov
pop
or
jmp
cmpsl
mov
cltd
add
jmp
cmpsl
mov
mov
add
jmp
cmpsl
mov
addr16
outsb
loopne
cmpsl
movsb
mov
inc
mov
sbb
and
sbb
xchg
sub
cmpsl
movsb
fmuls
xchg
adc
jmp
cmpsl
mov
dec
add
jmp
cmpsl
mov
or
sbb
mov
mov
pop
loop
sbb
outsl
cmp
sbb
js
sbb
xor
mov
mov
cmc
mov
cmpsl
mov
xor
sbb
insl
push
cmp
mov
mov
adc
jp
add
jmp
cmpsl
movsb
testb
sbb
xchg
sub
push
nop
pushf
push
cmpsl
mov
xchg
add
pop
inc
cmpsb
inc
sbb
push
add
jmp
cmpsb
inc
sbb
add
jmp
cmpsl
mov
rolb
sbb
inc
aaa
xor
movsl
cmp
sbb
pop
xchg
xchg
sbb
mov
ret
push
stos
cmpsl
mov
jmp
cmpsl
mov
jge
sbb
add
sub
add
jmp
rol
test
test
jmp
sbb
push
xlat
lret
test
mov
int3
arpl
jns
mov
pop
cmp
xor
mov
jecxz
xor
mov
adc
ret
addl
clc
inc
jle
aas
push
xchg
jp
sbb
mov
cmp
stos
sti
and
fcmovnb
mov
call
mov
mov
ret
jp
lcall
inc
adc
xchg
sbb
or
movsb
pushl
jmp
test
push
xlat
lret
dec
rcll
std
xchg
sub
enter
dec
xchg
push
sbb
inc
ljmp
iret
callw
fcomps
sbb
lods
inc
or
dec
dec
icebp
adcl
mov
test
xchg
pop
scas
dec
mov
leave
into
push
inc
test
imul
test
out
push
add
pop
lret
bound
add
out
test
adc
imul
imul
test
das
lds
inc
xor
shll
lcall
mov
push
sbb
jmp
adc
out
ret
js,pn
inc
loope
test
mov
decl
sub
jnp
orl
iret
dec
mov
mov
sahf
xor
jb
je
ljmp
jecxz
jne
jp
test
mov
and
popa
loopne
gs
into
add
pop
icebp
jae
mov
xlat
or
sti
cltd
xor
enter
xor
clc
movb
not
push
stc
clc
mov
push
push
add
test
test
call
push
pusha
add
pushl
mov
movb
lea
jmp
ds
lret
push
xlat
lret
mov
mov
shrl
aaa
rol
fstpl
nop
fwait
out
pop
clc
ja
testl
pop
lock
test
lahf
ret
sar
xchg
sbb
repnz
add
sbb
lret
jl
adc
mov
rcr
xor
mov
sbbb
inc
mov
adc
ljmp
xor
push
or
stos
xor
dec
imul
xchg
in
sub
cmpsb
inc
sbb
fldt
push
adc
pop
into
nop
push
stos
inc
int3
dec
stos
in
cmp
xchg
call
aas
jbe
sub
jg
pop
push
stos
xor
pop
out
rcrl
xorl
call
lret
arpl
lahf
push
mov
repnz
xchg
call
dec
jg
sub
mov
cmp
dec
jecxz
testb
movsl
or
loopne
jge
jle
cmp
sbb
add
cli
pop
cmp
lret
cmp
jb
int
add
je
fdivrs
sub
push
test
pop
pop
adc
rcl
pop
out
adc
cld
pop
fs
lds
lods
and
rclb
add
push
scas
jnp
pop
push
pop
rcl
clc
in
idivb
into
mov
scas
mov
push
mov
xchg
pusha
xchg
dec
hlt
outsl
into
fsubr
fcoml
cmpsl
mov
cmp
popa
out
jle
sahf
sbb
mov
stos
xor
cmp
fisubrl
jge
das
mov
fwait
sub
pop
xlat
ret
notb
inc
add
insl
sar
xlat
lret
pop
stc
mov
or
vprotb
mov
jge
push
push
xchg
push
pop
push
ja
notl
and
in
rcrb
pop
data16
cmp
imul
inc
xor
jl
jno
push
addb
lcall
pop
js
xchg
xor
mov
cmpsl
xor
mov
xchg
and
movsb
xor
push
cld
call
lret
add
sbb
fcmovnb
mov
or
mov
sub
pop
testb
fwait
pushf
std
mov
pop
jecxz
cld
and
mov
mov
das
shl
push
aam
bound
cltd
and
push
xorl
push
xlat
lret
fwait
cmp
jo
fwait
mov
mov
ss
in
push
int3
ror
aad
in
jp
mov
xor
aad
vrcpps
test
int
adc
test
jae
adc
mov
or
xor
xor
dec
shlb
call
aas
pop
ret
aaa
orb
jg
fndisi(8087
out
test
sbb
jmp
jg
push
jecxz
out
iret
test
mov
mov
aas
pop
iret
out
or
in
adc
jecxz
fisubl
adc
push
xchg
pushf
add
mov
jmp
movw
lea
jb
pusha
clc
stc
cmp
jmp
lea
jne
movzbw
cmc
clc
mov
push
stc
pushl
add
test
jmp
bt
cmp
clc
call
lea
ja
dec
setne
inc
pushf
call
jg
or
xlat
lret
js
adcb
cmp
push
jb
ret
and
mov
pusha
gs
loopne
idivb
lahf
cmp
fsts
jo
shl
shll
fbstp
testb
mov
gs
sub
dec
insb
loope
lahf
aas
push
shll
jae
test
movsl
inc
or
pusha
gs
out
jne
dec
xlat
lret
movsb
and
dec
fisubrl
xchg
xor
inc
mov
shl
cs
push
inc
mov
sbb
mov
rolb
inc
js
add
xor
pop
shrb
adc
xchg
pop
mov
add
vmread
push
lea
call
call
cmp
add
bt
pushf
cmc
test
pushl
mov
jmp
lahf
test
dec
xlat
lret
and
clc
cltd
sbb
mov
stos
pop
xor
mull
adc
jecxz
imul
push
xor
push
mov
sqrtps
push
jp
rclb
mov
cmc
mov
sub
sar
xor
push
cmp
in
rcl
xor
and
mov
pop
sbb
xor
incl
mov
pushf
outsl
call
into
adc
xor
lea
jae
pusha
lea
jmp
movw
pushf
movl
mov
pushf
movl
push
pusha
mov
pushf
lea
jmp
movb
movl
push
movb
lea
jmp
jmp
lea
jne
movsbw
mov
or
shrd
xor
bts
mov
push
clc
call
cmp
call
push
call
jb
testl
call
movsl
xor
je
mov
sub
cmp
aaa
jno
loope
fildll
pushw
sarl
movsb
int
cmc
test
mov
or
mov
fidivl
adc
inc
xor
add
mov
push
mov
pushf
lea
call
call
movb
setae
not
push
push
lea
movb
movl
jmp
mov
sbb
mov
leave
push
stc
push
xor
fistpl
mov
cmp
xchg
or
cmpl
pop
testl
adc
sbb
mov
mov
dec
loopne
ja
cld
movsb
daa
xor
add
xchg
pop
mov
stos
inc
dec
jmp
jge
in
mov
das
lods
inc
mov
lret
xchg
sbb
test
lods
dec
iret
push
jecxz
inc
gs
jb
insl
sub
and
fcomip
inc
cmpsb
jmp
mov
sbb
imul
je
dec
xor
pop
jns
pop
cmp
loop
sub
adc
or
xchg
lret
jb
lcall
repnz
mov
inc
xchg
pushf
cmp
pushl
pushl
pusha
lea
jb
cmp
cmp
pushf
jmp
in
ficompl
dec
xlat
lret
pop
mov
ja
xchg
push
movsl
cs
xor
test
inc
into
cwtl
sbb
movsl
or
inc
xchg
add
jb
jl
and
clc
push
or
push
mov
mov
repnz
push
shrl
sub
rcrb
ret
in
aaa
lret
inc
fbld
mov
lahf
xor
pop
add
jo
ja
gs
rclb
rcr
popa
ljmp
push
std
out
shlb
stos
lea
pop
rclb
adc
mov
roll
xchg
xor
mov
cs
movsl
shlb
and
aas
sbb
imul
scas
cmp
jnp
ror
stos
or
popf
daa
cli
mov
leave
xor
mov
xor
fs
push
leave
mov
cmp
inc
out
mov
sbb
imul
push
loop
adc
and
ss
fisubrl
sahf
es
rclb
dec
xlat
lret
add
pop
fwait
adc
jecxz
mov
cmp
stc
sarb
inc
stos
stos
sub
push
cmc
xchg
pop
incl
divl
mov
mov
shr
mov
outsb
movl
pushf
call
lahf
repz
xlat
lret
or
jbe
mov
outsl
outsb
dec
dec
xor
fdivrs
sub
push
jecxz
clc
or
out
call
push
cmp
int3
scas
dec
ds
adc
rolb
mov
ss
adc
sahf
jb
mov
ja
jl
inc
sub
test
mov
cli
jne
mov
jmp
pop
std
mov
movsl
xor
sar
cmpsb
leave
mov
addr16
lret
mov
lcall
or
push
jle
inc
popa
shlb
push
mov
imul
add
inc
call
pop
cmp
mov
dec
adc
add
sbb
push
cmp
fldt
cmpsb
adc
and
je
push
in
inc
hlt
imul
mov
sahf
xor
xor
mov
incb
mov
movb
movb
lea
call
push
mov
call
or
dec
xlat
lret
arpl
ja
popf
cmp
push
fstpl
sbbb
pop
push
mov
hlt
test
push
push
mov
xchg
imul
fsubs
xchg
mov
sub
dec
out
stos
insl
mov
xor
andb
int3
movsl
imul
fsub
adc
shrb
shll
inc
rorb
pop
test
pop
bsr
inc
shlb
je
xchg
mov
xchg
push
cld
fwait
cmpsb
inc
rclb
cmp
add
add
dec
clc
xor
add
add
dec
cmp
mov
xor
cltd
sbb
add
loopne
add
add
add
rorb
pushl
jmp
mov
in
xlat
lret
push
rcrl
jl
movsb
and
pop
lock
andl
jbe
in
sar
or
xchg
push
shll
dec
mov
cmpsl
jnp
nop
xchg
arpl
out
push
add
out
xlat
fisttpll
out
in
fidivl
and
fidivrs
scas
js
dec
and
sbb
dec
aad
fildll
movsl
das
mov
std
pop
mov
int
pushf
pushl
pusha
mov
movzbw
movsbw
jmp
add
dec
outsl
popa
fs
imul
add
std
ds
xlat
lret
xchg
fdivs
xchg
xor
inc
loope
push
push
cmc
insb
inc
jnp
test
mov
aaa
mov
mov
or
rcrb
push
xor
mov
mov
lock
jg
xchg
and
add
adc
mov
xchg
inc
testl
lds
and
xorl
mov
cmp
add
ljmp
and
popa
mov
mov
push
lea
jmp
test
inc
xlat
lret
rcll
js
pushf
sub
out
push
mov
shrl
in
scas
xor
nop
adc
jno
sahf
jl
filds
scas
fwait
mov
sub
movaps
pop
outsb
xor
push
xchg
bound
mov
and
ss
sbb
scas
xchg
test
or
test
jo
mov
cmpsb
xor
push
cmp
push
lock
mov
pop
push
mov
lret
push
xchg
and
orl
dec
arpl
icebp
push
test
fwait
sbb
std
bound
in
dec
mov
stos
iret
ljmp
push
loope
sub
jnp
int
mov
pextrw
das
and
and
loope
jae
stos
neg
scas
jne
xchg
out
in
imul
mov
xchg
daa
jnp
xchg
mov
test
inc
xlat
lret
add
je
pushf
sbb
dec
dec
push
rorb
and
movsb
jecxz
or
gs
div
inc
repz
lods
shll
or
loopne
pop
sbb
cmpsl
jmp
push
hlt
xor
lock
mov
jp
adc
lahf
imul
lret
ss
xlat
out
imul
jmp
cmp
idivb
xchg
das
lds
lcall
cmp
loopne
ja
add
xorl
add
sar
mov
xchg
mov
bts
shrd
mov
clc
pushf
pusha
xor
bt
jmp
jmp
mov
lret
fnstsw
cwtl
cmp
pop
out
jnp
andl
ds
inc
jae
int
inc
insb
mov
jecxz
std
inc
pop
jecxz
mulb
sahf
cmp
or
cmp
sub
pusha
in
mov
sub
inc
lahf
jp
cmp
xchg
pop
cwtl
pop
xchg
sbb
gs
das
lds
cs
xchg
test
dec
push
lret
test
iret
arpl
adc
scas
xor
clc
mov
aaa
stc
xor
lret
xchg
daa
sarb
movsl
xor
dec
jmp
popa
lret
cmp
and
aad
shrl
movsl
fs
neg
or
add
sub
pop
dec
rcl
pop
loope
stc
fwait
aaa
leave
popa
out
adc
inc
vmread
out
jno
in
rcll
inc
xlat
lret
add
jo
movsb
and
dec
inc
imul
fbld
jecxz
in
and
ficoms
ss
push
mov
add
jae
movsb
push
add
sbb
xchg
adc
loope
hlt
sti
enter
mov
or
mov
xchg
mov
orb
adc
jae
clc
inc
xlat
lret
dec
in
push
jne
mov
fcmovnbe
push
pushf
jnp
pop
mov
popa
adc
sbb
xor
xchg
sub
push
stos
dec
jnp
je
and
das
ds
ret
decb
jg
and
inc
andb
scas
mov
roll
mov
std
int3
sbb
adc
ljmp
mov
push
jno
cmp
or
rcr
cmp
mov
xchg
sub
pop
out
sbbb
aad
jbe
ljmp
push
inc
xlat
lret
pop
std
test
lods
inc
aam
in
jg
sbbl
rcl
andl
repnz
repnz
mov
sarl
lds
lods
mov
mov
fdivrp
push
hlt
add
xor
pusha
lock
lcall
add
mov
jae
dec
imul
mov
data16
into
sbb
pop
jbe
mov
jb
add
pop
mov
xor
jle
cwtl
aaa
fisubl
jne
mov
repnz
jg
jg
sub
dec
dec
rcl
mov
js
es
push
insl
sbb
pop
cld
or
mov
sub
lret
sbb
push
jo
pop
insb
lds
mov
roll
mov
sbb
mov
fimull
pop
nopl
or
push
inc
inc
test
call
xchg
xchg
sub
mov
loope
mov
and
jae
push
cmc
bt
sub
push
call
mov
lret
adc
out
adc
cs
fdivrs
in
lcall
add
mov
in
shlb
push
sbb
and
xlat
sbb
push
lcall
popf
loop
pop
ret
xchg
outsb
jecxz
popa
roll
hlt
decl
das
fs
stos
sub
popa
mov
aad
fldz
orl
inc
out
or
dec
cmp
ljmp
xchg
cmpsb
cmp
sbb
sbb
lret
inc
fldenv
mov
xchg
pop
mov
loop
pop
mov
inc
sub
pop
xchg
jle
fucom
jns
dec
mov
imul
or
lret
bt
fisubs
xchg
into
js
push
fwait
andl
push
sti
sbb
cld
sbb
inc
movb
daa
mov
xlat
popa
jmp
and
in
and
sarl
je
call
mov
ds
xlat
lret
xor
jo
xlat
int3
rcrl
mov
jb
je
jns
mov
popf
xor
fs
jmp
pop
insl
lods
ret
add
mov
pop
jecxz
repnz
pop
out
fcompl
ret
jl
mov
orl
xchg
or
xor
jmp
dec
repnz
clc
xor
loope
pop
movsb
loop
mov
push
add
cmp
xlat
lret
cmp
sbb
mov
stos
dec
adc
jnp
adc
xor
aas
pop
popf
and
dec
fistpll
adc
push
leave
cmp
xor
frstor
push
das
inc
add
cmpsl
cmp
out
mov
jle
mov
xchg
xlat
mov
and
call
ljmp
aam
dec
push
fmuls
jmp
icebp
cmpsb
xchg
sub
push
sbb
sub
movsb
inc
mov
scas
mov
lret
xor
adc
mov
leave
stos
jecxz
cli
out
add
and
je
cli
or
dec
adc
nop
mov
aam
dec
dec
mov
mov
xchg
sbb
sbb
loopne
loop
jns
in
addr16
xchg
ret
mov
scas
mov
js
xchg
cmp
ljmp
data16
lcall
add
inc
and
inc
lea
lea
jne
lea
dec
mov
stc
cmc
pusha
jmp
adc
inc
xlat
lret
out
xchg
sub
mov
xlat
mov
inc
sbb
dec
mov
jae
shr
ja
xchg
cmpsl
mov
mov
push
mov
lcall
idivl
mov
std
ja
xchg
jns
aas
xlat
lret
mov
jae
stos
dec
xlat
push
mov
movsb
imul
ret
ja
in
jbe
jecxz
in
pop
cmpsl
mov
jno
orl
fimull
scas
dec
push
jb
out
add
sar
fcoms
lret
pusha
loope
call
pop
lds
mov
adc
gs
test
or
jno
test
xchg
pop
mov
xchg
sbb
dec
stos
dec
loope
xchg
btr
mov
rol
mov
shld
add
rcl
bt
shr
test
movzbw
rcr
mov
movsbw
bswap
rcr
add
pushf
movzbw
mov
lea
jmp
out
cmp
xlat
lret
xlat
insb
cmc
jl
movsb
inc
in
andb
ret
or
add
xlat
inc
cmp
mov
jno
mov
iret
adc
mov
xor
xor
loope
or
mov
jp
or
push
lret
push
movsb
fidivrs
dec
jmp
es
pop
mov
int3
push
lods
adc
repnz
push
cmp
pop
imul
pop
cmpb
fucomip
pop
js
push
js
ljmp
movb
dec
mov
pop
pusha
or
scas
aaa
pop
and
jb
scas
xor
push
pop
adc
cmovb
loopne
xor
leave
inc
push
fistpl
xchg
js
outsb
mov
shl
mov
jne
xlat
lret
jle
scas
inc
rcrb
shl
fcmovnb
cmovb
pop
test
push
sub
xchg
push
rorl
xchg
mov
pop
lret
cltd
add
rcrl
jae
dec
xchg
push
arpl
pop
sbb
sub
or
sbb
andl
mov
ret
dec
aam
push
inc
loop
xchg
sbb
or
jae
add
mov
iret
cmpl
push
vmwrite
aad
mov
inc
scas
imul
enter
test
loopne
int3
loope
mov
icebp
call
jl
or
mov
ret
mov
fbstp
scas
inc
cmp
jae
pop
cs
out
dec
push
mov
push
cmp
inc
push
fnstenv
lret
out
out
aam
icebp
xchg
es
ss
sbb
ss
dec
loope
add
gs
gs
add
stos
cmp
and
jae
cmp
xor
call
sub
pusha
bt
clc
clc
cmp
call
pushf
movw
movb
not
mov
inc
mov
call
into
and
xlat
lret
dec
loop
in
jge
mov
jl
pushf
inc
xchg
xor
ffree
hlt
int
dec
int3
and
xchg
das
fdivs
stos
bound
mov
mov
add
and
pop
mov
mov
mov
in
add
mov
adc
scas
pop
stc
cwtl
adc
test
aam
lock
cwtl
sub
dec
sahf
fcoml
movsb
sub
adc
xlat
lret
ret
insl
hlt
orl
ja
cmp
pop
inc
push
int3
xor
xor
sub
xor
xor
sub
pop
daa
mov
cmpsb
test
lods
int3
cmp
dec
xor
xchg
mov
or
ficomps
std
adc
stos
ret
fisttpl
enter
inc
sub
add
mov
shll
jg
rcll
mov
loope
out
cmp
xlat
lret
int
jmp
add
jge
lret
repnz
mov
adc
inc
idiv
xchg
rcrl
adc
aaa
int3
mov
lds
xor
mov
or
jg
lea
shr
rcl
mov
dec
orl
fwait
mov
xchg
movsl
inc
mov
jb
xchg
pop
dec
popa
std
test
xchg
out
push
loop
pop
lret
outsl
pop
pop
bound
cmp
lret
clc
test
inc
adc
pop
jne
arpl
mov
stc
push
cwtl
jecxz
jno
xchg
jno
lods
or
outsl
jp
mov
mov
and
je
test
dec
push
dec
pop
or
push
fidivrs
push
cltd
or
sahf
xchg
mov
xchg
insb
pop
dec
sub
xlat
fcompl
jmp
arpl
jge
mov
scas
stos
outsb
jge
mov
cmp
lret
mov
jno
mov
mov
rorl
shlb
mov
xor
addl
xor
outsl
stos
xchg
cmpsb
int
mov
push
mov
or
repnz
stos
sbb
sub
mov
adc
iret
add
mov
bound
jae
push
aaa
es
aam
notb
push
test
scas
push
test
clc
dec
call
pop
daa
pusha
cmp
lret
sub
pop
jecxz
out
js
xchg
xor
pop
jmp
and
lahf
push
rcll
cmp
gs
add
dec
sahf
push
addl
cmpsl
aad
jo
jbe
popa
sub
mov
pop
outsl
and
pop
pushl
mov
jbe
imul
pop
push
loope
sbb
int
je
pop
and
mov
pop
jmp
mov
add
jno
jns
lea
adc
lea
jne
pusha
call
mov
lret
pushf
sub
add
sub
push
in
andl
stc
push
and
mov
or
xlat
adc
divl
rorl
jp
cld
fs
pop
jle
mov
dec
mov
sbb
movsb
adc
hlt
shl
inc
rclb
je
pop
pusha
ret
xchg
mov
add
in
add
cltd
movsb
mov
shrb
stc
bt
stc
ror
call
adc
lret
ss
dec
shrl
cwtl
daa
enter
incl
sbb
aas
mov
xchg
pop
sahf
mov
inc
xchg
add
into
add
mov
cltd
inc
dec
fwait
addr16
jnp
je
pop
ret
and
sbb
call
daa
in
imul
stos
xor
add
lods
iret
pop
cmp
mov
je
adc
jmp
lea
je
jmp
call
push
push
lea
jae
xchg
mov
push
sete
call
jmp
pop
inc
xchg
xlat
lret
outsl
or
push
stos
xor
and
mov
jmp
out
testb
jo
rcll
repnz
cmc
test
jo
push
stc
cli
outsl
adcb
jg
lahf
sub
fildl
js
orb
inc
cmp
lret
xchg
daa
mov
mov
test
ret
and
adc
stos
iret
in
pop
jb
mov
cld
mov
push
dec
imul
mov
jae
js,pt
inc
pop
shr
xchg
push
mov
fidivl
nop
sbb
sbb
in
lcall
xlat
lret
and
mov
lods
aaa
int3
imul
mov
iret
cmp
push
jecxz
daa
xchg
jecxz
test
push
jno
dec
pop
pop
mov
cmp
out
mov
add
and
mov
or
jmp
or
lcall
mov
inc
inc
inc
pusha
fucom
jge
movsl
sub
and
pop
dec
popl
jge
pop
inc
aaa
xlat
lret
and
addb
jae
mov
sbb
call
sar
xchg
adc
jp
rcrl
cli
and
test
int3
push
pop
fstpl
push
mov
insb
lcall
in
js
xchg
and
aaa
xlat
lret
out
adc
orl
ja
scas
adc
mov
addl
xchg
aam
rclb
push
cld
xor
in
call
test
rorl
ret
push
addr16
push
push
stos
cmp
dec
xchg
jg
add
and
outsb
push
stos
rcrb
jl
mov
pop
pushf
inc
dec
xorb
pushl
stc
test
mov
into
push
arpl
jg
xchg
inc
add
add
out
incb
sahf
ljmp
xchg
pop
shll
jne
lea
xchg
je
pushf
pop
mov
xchg
add
or
mov
xchg
mov
push
shl
xchg
mov
sbb
jne
arpl
ljmp
cmp
sbb
push
sub
adc
jp
mov
icebp
cmp
xor
int3
dec
fidivrl
scas
sahf
mov
stos
xchg
cmc
outsb
je
out
fbstp
mov
add
mov
js
mov
push
and
je
mov
repnz
push
and
fcomps
inc
dec
adc
xchg
push
xchg
push
cmc
xchg
movsb
sub
loop
push
roll
scas
frstor
pop
adcl
push
mov
mov
bound
jo
daa
mov
scas
cmp
dec
iret
addr16
adcl
lahf
in
pop
shr
scas
push
add
xor
cmpsb
xor
imul
lods
sub
xor
mov
sbb
fisubrl
mov
mov
adc
or
sbb
add
dec
mov
push
mov
push
sub
subb
cmc
das
mov
std
inc
movsl
xchg
in
fmul
adc
imul
push
push
fldenv
xchg
xor
gs
adc
repz
stos
jns
or
out
inc
jns
xlat
lret
jmp
mov
jnp
mov
int3
mov
pop
leave
xlat
xor
bound
addb
jp
lret
mov
pop
xchg
and
pop
ja
cmp
and
dec
mov
lcall
repz
cmp
adc
sahf
push
push
je
jmp
mov
inc
imul
rcrb
push
test
xor
notb
and
xor
pushl
popl
pushf
clc
cmp
pusha
call
mov
call
xor
add
lahf
sub
mov
popa
loop
fwait
ret
test
xor
inc
xor
and
mov
rcr
adc
add
add
jp
adcb
dec
jecxz
or
jns
lods
push
vmread
dec
data16
mov
jmp
lret
imul
mov
lret
push
xorl
xchg
lcall
push
shrl
leave
movsl
mov
test
std
push
loop
bound
mov
xchg
and
push
in
clc
xchg
movsb
xchg
xlat
push
add
test
mov
xor
lret
in
jno
fwait
ss
push
jmp
int
add
sbb
jne
fisubs
jecxz
out
pop
xor
fdivl
mov
add
jbe
mov
or
jg
push
inc
pop
lcall
jmp
adc
mov
mov
jns
push
cld
repnz
mov
test
scas
push
cmp
inc
xor
daa
xor
xchg
xor
lret
sbbb
push
fcomps
mov
and
adcb
ljmp
jnp
jecxz
push
outsb
inc
ret
mull
mov
sub
push
mov
and
jns
lahf
movhps
add
jg
repnz
adc
fwait
mov
mov
sahf
xorl
jnp
in
push
pop
call
mov
inc
jo
mov
mov
xor
lret
sbb
jb
sahf
and
fwait
popf
adc
add
mov
xchg
inc
or
fs
mov
adc
and
inc
push
fisubrs
mov
into
daa
or
and
cmp
sub
test
xchg
inc
xchg
imul
dec
in
mov
mov
je
faddl
enter
gs
dec
int
jns
stos
icebp
adcl
test
lds
test
add
sbb
arpl
mov
inc
dec
loope
test
mov
xchg
dec
sbb
adc
adc
lods
inc
into
pop
loopne
push
movsb
inc
fidivs
xchg
jns
dec
in
dec
outsl
std
test
test
stc
add
sub
jmp
lea
jne
pusha
jmp
fistl
xlat
lret
test
mov
fsubs
popf
sub
out
jp
dec
dec
fwait
aad
mov
nop
out
push
roll
fs
out
dec
cmc
test
mov
push
push
outsb
jmp
xchg
sbb
out
ja
sbbl
add
insb
jns
lahf
ljmp
adc
lret
imul
sbb
mov
pop
dec
bound
loopne
pop
pop
add
sub
sub
stc
ja
jae
pushf
in
mov
push
cmpsl
hlt
mov
pop
push
dec
lds
jnp
mov
and
lea
fsub
xchg
push
inc
inc
ret
fdivrl
popa
push
out
jmp
add
and
jp
std
cmp
and
cmp
sub
lcall
add
xor
push
stos
cmp
movsb
adc
cmp
cld
cmp
jp
jbe
jo
loop
aad
ret
lret
into
jmp
mov
dec
fcomi
xor
cmp
inc
cmp
sbb
or
mov
adc
repz
pushf
cmp
sub
std
rorl
rcl
repz
and
cmp
add
push
push
jae
lods
roll
stos
mov
out
pop
fs
mov
scas
shl
add
neg
into
loope
pop
mov
jb
or
mov
jbe
mov
mov
jns
pop
insb
xor
add
jg
fstpl
shlb
mull
hlt
arpl
inc
repz
pop
arpl
lea
out
jns
std
gs
jnp
out
add
add
cvtdq2ps
adc
push
dec
arpl
cwtl
push
jne
call
in
push
clc
mov
std
fucomip
inc
jge
add
adc
sbb
sub
fbld
shll
mov
out
orl
xor
jmp
adc
ffreep
call
push
shl
clc
bt
xchg
shl
btr
bts
pushf
lea
shl
aad
setle
not
sub
neg
jmp
ds
das
xlat
lret
sub
push
loop
add
fs
sub
jge
push
and
mov
cmc
mov
mov
test
add
add
or
sub
sub
push
pushf
xor
push
out
adc
or
js
mov
push
lea
call
push
jmp
sub
test
test
pusha
cmp
cmp
movw
mov
lea
ja
clc
imul
jmp
push
mov
mov
lea
jb
not
pushf
mov
movzbw
xchg
movsbw
mov
pushf
mov
mov
pushl
ret
push
jmp
dec
mov
xlat
lret
loop
cli
xchg
cs
xchg
mov
or
push
mov
jb
inc
mov
xchg
xor
fildll
add
and
nop
scas
inc
idiv
imul
leave
les
scas
push
jp
or
pop
and
imul
and
setnp
stos
dec
fnstsw
xchg
and
shrb
mov
xchg
sub
test
inc
push
push
fisubrs
jnp
pop
rorb
or
in
jle
sbb
jns
fs
mov
bound
aaa
jae
frstor
mov
adc
popa
out
call
mov
add
add
fcompl
aaa
test
mov
push
inc
rcr
cmp
inc
mov
sbb
xchg
mov
jnp
mov
int
or
mov
ss
mov
sub
icebp
test
mov
std
ljmp
pop
stc
sbb
mov
sub
int3
pop
lock
les
dec
or
jo
push
add
mov
add
and
in
push
pop
sub
mov
out
xor
cmp
xchg
fwait
mov
lods
pop
adc
cltd
loope
pop
jo
imul
lcall
inc
or
jnp
bound
lods
push
fcoms
push
push
add
push
sbb
fldenv
pop
and
out
xchg
fsubrp
imul
cli
notl
inc
in
sub
adc
pop
leave
pop
dec
inc
sbb
imul
lods
data16
in
mov
fnstenv
xchg
xor
enter
jmp
push
add
cmp
lods
lret
das
inc
fldenv
ja
mov
lahf
pop
sarl
rolb
fisttpl
mov
pop
lock
pushf
test
pusha
movb
lea
je
cmp
pusha
stc
clc
sub
pushf
pushf
test
cmp
jmp
pusha
call
cmp
leave
sub
lret
mov
test
scas
sub
pop
hlt
test
sub
xchg
and
bnd
push
mov
xchg
and
xor
aas
push
push
cmp
int3
or
test
sti
add
lock
inc
scas
clc
xor
push
in
aad
gs
ss
into
nop
push
fincstp
ret
add
dec
lcall
dec
out
jle
xchg
xor
pop
in
jp
cmpsb
repnz
pop
cld
inc
lea
ja
movzbw
setge
lea
movsbw
pop
pusha
mov
mov
mov
lea
setae
mov
pushf
call
jp
jne
xlat
lret
pop
loopne
or
push
in
xchg
adc
add
addr16
jb
and
fisubl
mov
cmp
push
fnstsw
mov
scas
lahf
pop
jns
cmp
and
icebp
sub
fdiv
jae
mov
pop
cmp
xchg
xchg
and
sti
xchg
pop
mov
std
fisubl
inc
rcrl
jb
jmp
pushl
pushf
pusha
mov
pusha
lea
jmp
xor
movw
lea
call
cmc
cmp
jge
pushf
mov
push
lea
jae
clc
cmp
pusha
pusha
pushf
push
lea
jae
clc
test
test
jmp
popf
addr16
lret
outsb
or
pusha
inc
xor
sub
xor
add
notl
orb
dec
xchg
rcrl
pusha
imul
mov
inc
mov
sub
xlat
cs
mov
and
cli
pop
xchg
sub
fstpt
lods
aaa
nop
lret
sahf
xchg
sahf
ljmp
rolb
xor
out
xor
mov
cld
or
sub
lret
jno
mov
xchg
neg
jmp
add
arpl
test
cmpsl
lea
push
das
movsb
scas
xor
pop
icebp
xchg
and
inc
mov
gs
rorl
dec
xlat
jne
cltd
pop
scas
push
rcrl
jne
call
push
mov
mov
push
mov
pushl
jmp
mov
lret
dec
in
loop
add
xor
pop
iret
in
shlb
sub
xor
ja
leave
and
jp
mov
pop
lods
mov
inc
insl
int
push
neg
in
dec
das
sahf
stos
xor
sub
hlt
adc
add
add
shll
iret
icebp
xor
mov
scas
pop
test
or
push
xchg
insb
nop
mov
inc
mov
je
sbb
push
mov
cmc
les
push
add
pop
fnstenv
cwtl
cmp
inc
mov
rclb
jae
push
push
cmpsb
mov
movsb
mov
loopne
notb
adc
mov
adc
xchg
sar
enter
stc
bt
mov
push
cmc
add
stc
test
mov
call
jecxz
jo
xlat
lret
shlb
test
xchg
sbb
imul
fisttps
xchg
insb
shr
addl
daa
inc
push
add
call
movsb
mov
mov
mov
lret
xor
fs
or
add
inc
mov
sbb
aad
mov
sti
test
sub
mov
sbbb
xor
pop
loop
out
adcb
fisttps
xchg
mov
popa
movsl
lea
jne
pusha
mov
lea
jne
call
pusha
pusha
pushf
lea
jmp
xor
lret
cmpsb
inc
lret
jg
fwait
and
dec
fs
cmp
cmp
and
mov
push
aam
hlt
pop
push
push
pop
xor
into
or
xchg
out
jne
popf
xchg
ja
pop
insb
fsub
popa
mov
stos
imul
nop
mov
js
xchg
sub
mov
ds
lds
dec
daa
xlat
lret
xor
dec
jmp
mov
rorb
gs
les
jo
add
in
mov
sub
xor
dec
loop
mov
mov
mov
insb
jns
fistpll
cwtl
mov
repnz
lods
or
pop
mov
int3
pop
in
mov
lcall
adc
cmpsl
pop
dec
mov
lock
aad
xlat
lret
mov
outsb
add
jbe
dec
lahf
push
and
pop
push
jecxz
cmc
xor
sbb
rorl
mov
aaa
jb
xchg
jnp
stos
adc
xchg
data16
push
jo
cld
or
fldenv
adc
xor
fs
ror
inc
loop
or
test
mov
out
stos
mov
push
call
jmp
inc
dec
inc
test
cmp
and
sar
xchg
rol
aam
inc
mov
cmp
stc
inc
add
mov
test
mov
btc
shld
mov
test
sub
pushl
rep
not
lea
mov
pusha
lea
jmp
outsb
mov
xor
test
mov
rorb
lea
cwtl
ds
popa
xchg
jns
roll
mov
and
shll
repz
lock
push
stc
push
testb
lea
cmpsb
inc
shlb
test
mov
out
gs
loopne
ja
dec
popa
in
int3
and
test
or
pop
repz
and
inc
cmp
sbb
movsb
sub
hlt
push
arpl
inc
dec
rcrb
js,pt
push
or
and
inc
gs
rcrb
lods
add
mov
fsubs
mov
pushf
gs
or
sbb
iret
sbb
sbb
cltd
stos
aaa
int
dec
mov
pop
or
mov
push
cmp
in
andl
loop
jb
xor
sbb
cmpsb
mov
ljmp
add
js
das
jmp
daa
scas
add
xchg
aaa
rcrl
pop
inc
dec
in
xchg
jo
lret
test
and
ljmp
or
add
mov
adc
mov
and
mov
lcall
outsl
mov
pop
ds
xchg
dec
xchg
gs
mov
lds
push
mov
fdivr
loopne
push
cli
mov
sti
sbb
cmp
into
xlat
popa
repz
jns
xchg
dec
push
sub
add
lret
sarb
lea
inc
jecxz
aaa
jno
dec
mov
mov
aam
pushf
mov
jnp
cmc
sbb
push
xlat
and
js
cmp
rdpmc
bound
sbb
mov
fisttpl
fcoml
mov
fs
aaa
jge
shrl
pop
xchg
mov
ret
or
sub
fcmovu
popa
mov
fdivs
popf
mov
pop
mov
push
mov
sbb
mov
daa
cmp
mov
insb
into
int
out
mov
mov
lds
subb
sbb
icebp
inc
out
jb
fucomp
pop
outsb
or
or
gs
push
movl
lods
stc
xor
push
lret
mov
xchg
mov
xor
cmpsl
add
add
fstps
push
fcmovnbe
hlt
test
cmpsl
push
shr
pop
gs
xchg
push
xchg
push
xor
std
sbb
or
cmpsb
inc
jns
sbb
int3
push
cltd
jnp
cli
mov
mov
je
jle
jmp
mov
add
mov
sub
fdiv
gs
ret
loop
push
insb
push
pop
jecxz
mov
cmpsl
inc
lret
out
pop
jge
stos
xor
out
push
pop
cmpsb
aad
subl
mov
fwait
mov
iret
ss
nop
mov
sub
loope
into
xlat
xorb
lahf
xor
arpl
cmpb
dec
mov
pop
stos
in
xor
sahf
mov
xchg
add
sbbl
sbb
cmp
pop
jb
jne
push
mov
ss
popa
sti
mov
pop
add
inc
arpl
stos
shll
push
cmp
jp
add
jae
pop
sub
into
emms
dec
xor
leave
adc
xchg
std
push
fwait
xor
pusha
push
cmc
push
sarb
dec
jle
xor
lods
sbb
mov
or
hlt
xchg
or
lods
mov
incl
mov
xor
adc
mov
sub
decb
push
vmovss
adc
mov
sbb
push
jne
out
sbb
ret
mov
mov
cli
cld
mov
cltd
in
daa
inc
mov
jle
aaa
push
cmc
push
or
outsl
stc
roll
mov
and
iret
push
xchg
mov
and
sbb
movsl
xchg
sti
push
xchg
loop
dec
xor
sahf
mov
cmpsb
leave
add
and
cmc
out
pop
push
push
fldt
lret
arpl
loope
mov
or
push
ror
lahf
cmp
aam
imul
lahf
pop
mov
fwait
or
fldl
scas
push
jae
adc
fimuls
and
test
push
out
rcll
xor
fimull
or
pop
jp
sbb
fdecstp
xchg
xor
pop
push
dec
or
scas
mov
or
notl
pop
loopne
sub
iret
ss
lock
ljmp
ret
sub
fs
adc
sbb
jmp
pop
jge
stos
sbb
dec
mov
pop
and
pop
dec
pop
fdiv
jl
sahf
pusha
lcall
sbb
sarl
shlb
sbbb
test
mov
sub
jle
push
jb
popf
cs
loopnew
dec
mov
push
lock
test
lret
push
push
cmp
dec
in
fimull
ret
adc
adc
xor
das
lahf
int
popa
cltd
andb
out
lret
push
repz
sub
pushf
mov
in
inc
shrb
fdiv
test
mov
lret
shl
pop
mov
pop
leave
fidivrl
popf
addr16
fmuls
cmc
push
test
dec
sub
cmp
mov
movsb
xor
enter
inc
sub
dec
fs
into
out
sub
jp
aaa
cmpsb
leave
mov
outsl
xchg
sub
aas
mov
imul
bound
insb
mov
mov
sbb
mov
pop
insl
mov
adc
stos
sub
mov
adc
adc
shl
sarb
dec
in
adc
adc
xchg
clc
sbb
addb
aas
add
jbe
cld
fisttps
sub
leave
push
clc
fcomip
pop
imul
sbb
movsl
mov
cld
shrb
cvttps2pi
inc
lods
lds
sarl
popf
mov
dec
loop
jo
dec
dec
ja
ja
inc
xchg
cmpsl
xor
mov
insl
ret
sbb
enter
into
icebp
cmp
push
mov
inc
inc
pop
cmpsl
nop
xor
or
gs
fs
mov
in
add
popf
loopne
mov
mov
xchg
test
iret
pop
and
pop
loop
add
mov
sti
xchg
out
adc
and
sbb
dec
out
test
and
jbe
dec
dec
cmp
mov
outsb
or
add
inc
lods
int3
jp
pop
push
push
fstpl
sbb
sbb
dec
fwait
aad
or
in
push
push
adc
add
dec
in
xor
jne
add
jae
arpl
std
loopne
or
sti
add
test
clc
xlat
andl
ss
ret
mov
and
icebp
push
pusha
notb
aad
push
mov
jmp
fstl
cs
pop
jb
lea
mov
and
ret
loop
pop
ret
popf
je
or
sub
addr16
lea
add
ret
lods
push
adc
out
dec
jge
sub
jg
mov
jns
xor
push
push
dec
sahf
adc
outsl
fsubrp
test
sqrtps
in
movsl
enter
out
pop
mov
sbb
in
sti
push
and
mov
adc
cmp
mov
mov
pop
jp
scas
mov
icebp
mov
addb
mov
lahf
test
pop
cld
mov
and
je
loop
mov
enter
je
cltd
sbb
xchg
aam
andl
mov
jae
rcll
addr16
enter
jge
jns
orl
xchg
pushf
lods
inc
loopne
pop
int3
in
lcall
int
es
or
and
js
in
imul
ret
popa
dec
out
lcallw
lcall
sahf
mov
hlt
arpl
dec
imul
dec
in
cmp
in
push
sbb
jae
clc
or
out
mov
aad
cld
ljmp
aam
mov
aad
data16
ja
aad
jg
add
xlat
cmp
mov
pop
mov
mov
dec
xor
mov
inc
mov
push
cld
inc
call
xchg
out
fst
in
into
int3
mov
mov
mov
je
mov
jle
cmpb
lret
ja
lds
pop
movsl
aas
and
stc
stos
sarl
dec
mov
mov
daa
es
add
sbb
or
jne,pn
hlt
adc
or
adc
pop
mov
popf
cmp
pusha
xor
mov
repz
inc
arpl
or
movsl
aam
mov
test
sarb
push
fmul
mov
es
and
std
mov
mov
or
arpl
inc
mov
nop
cmp
xlat
ds
loopne
mov
dec
mov
sbb
fcomip
pusha
and
mov
cmpb
and
cmp
lcall
movsl
sub
es
movsl
inc
xchg
rcr
add
dec
mov
cmp
into
mov
fdivrs
insl
orb
in
cli
and
cwtl
add
push
or
fwait
mov
adc
adc
pusha
lods
out
push
mov
xor
mov
scas
jmp
sahf
rorb
mov
lods
pop
decl
ret
pop
sub
cltd
repnz
dec
sub
xchg
bsr
or
fdivrp
outsb
clc
inc
pop
mov
popf
adc
mov
test
repz
in
inc
sub
lret
daa
lret
xor
je
mov
mov
pushf
aaa
pushf
mov
repnz
in
andl
add
mov
fldl2t
push
xor
lods
mov
cmp
add
jmp
jne
test
cld
ss
xchg
adc
mov
in
mov
jbe
sahf
cwtl
incl
cmpsl
inc
sarl
movsb
rcll
sbb
and
sub
fwait
xchg
adc
int
add
fsubrs
dec
neg
jecxz
jno
int3
dec
in
xchg
lret
es
testl
pop
leave
jmp
xchg
add
xchg
jnp
ss
lahf
cmp
mov
mov
pop
cmpsl
push
cmpb
dec
fs
push
pavgw
pusha
std
xchg
or
push
fbstp
add
cs
adc
inc
addl
mov
stos
or
sub
int
push
shr
push
cmpsb
adc
jg
jns
ss
and
arpl
or
jmp
adcb
xor
dec
gs
jbe
lods
into
imul
in
dec
xchg
lret
cmp
sahf
xor
or
les
loope
and
sbb
and
fadds
push
shll
rorb
stos
xor
xor
mov
ret
jecxz
inc
mov
mov
mov
mov
mov
mov
mov
inc
push
mov
popf
mov
dec
sbb
cmp
pop
pop
xlat
cmc
add
push
leave
out
pop
sbb
adc
sti
xchg
loope
insb
lret
sbb
push
pushf
pop
stc
xchg
add
xor
cmpsb
pusha
pop
mov
mov
push
outsb
imull
xor
stc
loopne
gs
adc
sbb
ret
fimull
shr
cmpl
add
in
pop
rorl
arpl
mov
sbb
sub
fbld
out
int
pop
bswap
push
mov
pop
and
ss
into
shl
ljmp
jns
add
and
cli
pop
pop
addr16
or
mulb
and
in
out
stos
mov
scas
das
cmp
jns
ljmp
push
rdmsr
mov
movl
mov
arpl
std
cltd
in
pusha
in
cmp
jne
sti
push
fsts
ds
push
jmp
pop
iret
and
ret
xlat
popa
repz
jns
test
ss
test
lods
outsb
or
out
sbb
das
shll
stos
sbb
jmp
and
lock
sbb
jp
jbe
in
adc
ja
cltd
mov
mov
push
xabort
dec
hlt
bound
inc
in
ficompl
in
pop
sti
or
xchg
mov
cmp
imul
push
dec
imul
insb
add
fyl2xp1
pusha
jno
jp
xlat
jle
or
popa
sub
out
test
mov
hlt
mov
adc
jne
xor
add
mov
leave
lods
xchg
mov
jmp
leave
add
xchg
fstpt
ret
cmpl
sbb
xlat
cli
orl
jne
std
stos
dec
std
pusha
sub
loopne
ds
xor
push
pusha
stos
iret
loopne
push
mov
addr16
arpl
out
int3
sarl
fidivrs
pop
xchg
insb
jg
sbb
xlat
ja
mov
or
jge
pop
inc
xchg
xchg
mov
cli
out
fwait
add
push
and
test
sti
cmp
in
testl
add
cmpsl
mov
pop
loopne
mov
jmp
adc
mov
mov
xor
dec
stos
mov
scas
sub
mov
movsl
cmp
jmp
mov
dec
push
faddp
cmp
jbe
pop
outsb
or
test
shl
aas
xchg
inc
jae
add
xchg
test
mov
xor
xchg
sbb
mov
in
xchg
fstpt
xor
add
xlat
pop
cmp
cltd
add
sub
mov
mov
test
aad
in
add
sbb
cmp
push
mov
adc
ret
int
and
sarb
push
ss
pop
mov
pop
pop
dec
in
push
and
inc
cmpl
jp
mov
inc
fwait
adcl
fistps
pop
mov
cli
sbb
add
pop
jno
sub
sbbl
test
aas
push
lods
sub
out
mov
test
clc
js
sub
sbb
push
jmp
push
push
insl
and
lcall
sahf
fisubs
mov
add
cmp
jno
sbb
and
add
mov
inc
jp
push
leave
test
std
xchg
inc
adc
or
dec
lcall
icebp
js
lcall
lret
insl
add
push
icebp
mov
adc
xlat
pop
outsl
fists
dec
sbb
in
inc
mov
cmp
mov
sub
add
pusha
mov
out
mov
push
fidivrs
bound
or
pop
cmp
mov
mov
mov
adc
xchg
mov
sub
mov
loop
sar
fsubrl
flds
dec
or
or
mov
mov
scas
inc
and
pop
push
repnz
cmp
pop
jo
mov
lods
mov
repnz
in
loop
lret
and
sbb
lret
cltd
ljmp
adcl
cwtl
mov
jae
fsubl
and
pushf
push
insl
push
test
xchg
mov
and
popa
roll
pop
dec
subl
add
jl
bound
aaa
int
rcrl
aas
push
mov
push
addr16
in
inc
push
sub
pop
mov
scas
call
xchg
std
das
shll
ljmp
xrelease
rolb
sar
stos
xor
cmpsb
leave
sub
into
mov
daa
inc
out
iret
or
dec
add
add
rcrl
push
ja
stos
inc
nop
lret
sbb
in
ss
jns
clc
addr16
xchg
sub
jbe
pusha
jmp
cmp
add
push
js
xchg
jnp
pop
xchg
pop
xor
cmp
mov
movsb
mov
cltd
subb
adc
popf
or
pushf
inc
xchg
pop
repnz
pusha
jns
clc
cmp
nop
xor
js
hlt
jae
dec
lea
push
sbb
int3
cld
mov
add
mov
push
ss
es
adcl
cmp
xor
and
aam
and
jg
ss
and
aad
addr16
fwait
cmp
das
adc
push
xchg
push
jnp
and
jne
cmp
push
pushf
mov
sub
mov
int3
fadds
js
jge
pop
push
out
in
cmpsb
inc
and
jmp
or
pop
inc
and
hlt
int3
lea
mov
mov
or
mov
enter
and
lahf
in
andb
cmpsl
cmp
adc
lret
inc
shll
xchg
daa
mov
jbe
mov
sahf
ljmp
or
and
es
pop
jmp
and
test
out
adc
jle
test
xor
repz
push
idivb
movl
incl
clc
cmp
call
adc
lret
mov
mov
jge
lods
push
out
add
mov
sub
call
fildll
mov
adc
mov
xchg
push
enter
and
data16
mov
pusha
cld
cwtl
or
in
push
cmp
cmp
out
fsubrp
test
sbb
js
xchg
xor
nop
into
stos
xorb
add
adc
inc
and
mov
pusha
push
pushl
pushl
ret
jmp
cmpb
adc
dec
lret
loope
cmp
cmp
jb
cmc
fistpll
outsl
js
jmp
fidivs
lea
xchg
pop
cmpsl
mov
fwait
mov
sbb
repnz
insb
mov
adc
pusha
mov
in
and
stos
and
dec
inc
stc
and
stc
pop
jbe
mov
aaa
enter
push
fimull
mov
jbe
push
insl
leave
sbb
hlt
dec
imul
sbb
fwait
mov
fidivl
out
and
push
push
adc
xchg
in
pop
in
movsl
punpcklwd
or
scas
dec
popf
sbb
setne
jge
ss
ja
jae
pusha
cmp
pusha
cmp
push
call
jne
jo
xlat
lret
push
xlat
pop
out
addb
and
add
jae
in
adc
fcoml
mov
shl
and
add
dec
pop
or
stc
outsb
mov
mov
js
sahf
and
vmread
jge
xor
adc
xlat
lret
cs
cmp
push
out
or
leave
xchg
push
and
sbb
xchg
out
js
jecxz
repz
mov
and
or
cmp
xchg
repz
jnp
xchg
pop
mov
addr16
jne
cltd
aaa
pop
cld
jle
and
cwtl
addr16
xchg
sarb
dec
int3
shll
mov
adcb
cmpsb
xchg
fsts
stos
and
pushf
jmp
pushf
mov
pusha
stos
mov
pushl
push
lea
jmp
jo
std
adc
lret
push
fisubrs
mov
jb
mov
lock
imul
cmpsl
xor
xchg
mul
test
add
cwtl
pop
addr16
mov
pop
stos
mov
incb
fidivrl
in
in
mov
push
movsb
sbb
xlat
les
pop
fsub
xchg
xor
inc
rclb
jb
xchg
xor
xor
mov
out
or
xlat
lret
in
or
pop
jecxz
sbb
mov
jbe
push
lds
jecxz
shl
fsubs
adc
dec
add
inc
mov
mov
adc
andb
lds
pop
cmc
dec
mov
push
add
lea
jge
arpl
inc
outsb
lea
lret
in
je
xchg
adc
inc
cmpb
mov
adc
lret
shrb
xchg
sbb
pop
notl
xchg
ja
push
push
pop
popa
mov
cmc
popl
xor
sbb
andb
xchg
mov
jb
adc
push
lock
mov
in
jge
and
leave
pop
mov
mov
cmp
push
test
bt
cmpb
pusha
lea
jne
add
aaa
xor
sub
mov
setbe
add
neg
rcr
not
jmp
pusha
test
jmp
jmp
not
lods
stc
sub
jmp
lea
jae
movsbw
movzbw
mov
pusha
movzbw
pushl
mov
pushf
mov
mov
lea
jmp
push
lea
jne
shrd
mov
bt
cmp
call
adc
push
lea
jae
push
pushf
lea
jne
jmp
popa
lods
out
xlat
lret
dec
in
in
test
mov
mov
mov
in
repnz
xchg
hlt
andl
outsl
cmp
je
dec
jge
adc
jge
pop
jb
xorb
xchg
push
adc
sub
push
icebp
xchg
sbb
orl
lock
sub
lds
cmc
mov
cmp
gs
cld
fwait
ss
mov
test
out
push
fldt
push
push
pop
sbb
push
sub
add
or
push
js
add
les
notb
lds
dec
cwtl
sub
adc
push
popf
dec
pop
clc
call
addr16
jb
dec
fnsave
insl
aaa
and
mov
adc
jnp
xchg
movsl
addr16
ret
jp
pop
push
xlat
lret
jne
test
popf
sbb
inc
loope
jmp
aam
dec
mov
mov
jecxz
sbb
stos
rcll
scas
jge
mov
dec
push
or
rclb
jg
data16
adc
pop
stc
xor
inc
rcrb
push
aas
aad
arpl
jns
mov
push
sub
jecxz
add
dec
cltd
xlat
pop
idiv
fwait
cmp
movsl
fimuls
xlat
lret
mov
sbbl
stc
xchg
inc
sbb
mov
aaa
dec
fldenv
xor
lret
or
push
cmpsl
dec
lahf
outsb
or
aad
fldcw
arpl
cltd
xor
sub
sub
imul
jbe
push
mov
mov
cltd
and
pop
movsb
loop
xor
data16
dec
orl
lahf
ss
cmp
sub
push
cmp
push
nop
push
xchg
icebp
jbe
stos
mulb
ret
push
xchg
jg
addb
cs
push
sbbl
int3
mov
inc
data16
mov
mov
xchg
mov
mov
xchg
jle
test
mov
cwtl
xor
adcb
push
testl
or
test
dec
loope
jmp
sbb
imul
dec
fwait
jp
xor
call
shr
add
rol
rcl
mov
test
test
jmp
out
imul
dec
int
cmc
mov
lods
xor
into
and
inc
mov
adc
mov
and
mov
push
out
jnp
cltd
sub
push
push
lea
mov
pop
fstl
fsubr
inc
jl
in
add
dec
sahf
cs
iret
xor
shll
mov
scas
sti
cmp
icebp
jle
dec
inc
fs
jl
push
lods
rclb
addr16
adc
jge
sbb
dec
movsb
mov
fists
xor
imul
push
xor
or
ss
jb
push
xchg
subl
les
test
stc
cmp
mov
pusha
jmp
pusha
movb
mov
mov
call
pusha
cmc
cmp
pushf
pusha
lea
ja
je
clc
cmp
clc
cmp
cmp
push
call
lea
jae
pusha
bswap
call
in
or
lret
in
or
imul
loopne
mov
xchg
pop
mov
push
inc
aad
test
inc
faddp
sub
or
mov
lret
add
dec
push
cmp
nop
push
call
jp
mov
ja
xchg
inc
pop
jo
jmp
pop
and
fildll
lods
adc
idivb
inc
sahf
test
jo
mov
scas
dec
fcompl
js
mov
lea
fs
jne
bt
ror
cwtl
bts
sub
dec
cmc
xor
mov
jmp
sub
sub
xlat
lret
mov
mov
rolb
add
std
pusha
pushf
lods
movzbl
into
jcxz
pop
rcll
add
out
inc
mov
jl
out
ret
push
cmp
cmc
das
int
xchg
lds
out
fsub
cmp
fistpll
movsl
lods
or
into
loope
adc
xchg
sbb
push
addb
add
or
lret
mov
push
clc
xchg
inc
jge
mov
dec
cltd
sbb
xchg
divl
or
nop
inc
lcall
xchg
mov
or
jne
or
cmpsb
xor
lret
leave
push
xor
jecxz
bound
ljmp
pusha
in
add
pop
jns
dec
pushf
add
mov
xchg
inc
sub
xlat
lret
loopne
add
std
mov
mov
pop
push
scas
mov
jecxz
mov
xor
notb
push
inc
jnp
pop
sbb
out
adc
imul
mov
loope
ja
jle
adc
dec
push
mov
push
and
notl
ljmp
adc
xchg
xor
mov
cmp
shll
mov
lcall
jno
ja
mov
jcxz
roll
scas
or
jcxz
add
mov
inc
xchg
jp
inc
adc
lcall
adc
mov
or
cwtl
jmp
cmp
loop
cltd
dec
jge
fs
lea
fst
fisubrs
adc
jg
test
dec
out
add
jbe
mov
push
mov
dec
out
mov
bt
mov
btr
push
stc
mov
pushf
cmc
mov
call
pushf
pusha
pusha
dec
pushf
cmp
not
push
pushl
test
mov
cmp
cmc
bt
add
bt
bt
clc
test
call
pushf
mov
lea
je
call
mov
test
xor
shr
sub
btc
btc
mov
clc
call
call
lea
je
jmp
sahf
add
xlat
lret
sub
mov
pushf
das
mov
and
mov
mov
popa
inc
shlb
xchg
xor
ret
and
push
ret
or
outsl
mov
xchg
fs
shrl
cmp
dec
arpl
jbe
popa
inc
data16
scas
inc
or
mov
xlat
pop
std
xchg
stos
aas
fsts
mov
outsl
lods
daa
push
ja
fldenv
xor
add
decl
inc
and
movb
movb
pushf
pushl
ret
add
mov
cmc
movzwl
inc
stc
sub
mov
call
jecxz
or
lret
or
push
cmc
jb
cwtl
xor
dec
idivw
sub
out
jecxz
insb
and
cltd
mov
push
add
ja
dec
xchg
cmp
scas
addl
lods
je
ds
mov
dec
cwtl
pop
and
lods
out
xor
je
mov
jo
dec
dec
stos
cld
sbb
pushf
cmpl
call
fsub
bound
je
adcb
sbb
cmp
jecxz
mov
jno
mov
pop
xlat
lret
addr16
jns
lea
ret
dec
fldcw
push
test
or
ja
outsb
test
cli
fs
mov
inc
inc
mov
jne
mov
add
lret
sbb
xchg
add
sub
jo
and
cmp
test
xchg
neg
mov
mov
push
xor
pop
dec
test
lods
sub
ret
dec
rcrb
addb
scas
push
call
int3
sub
dec
loopne
cmpsb
cmc
not
jmp
in
jno
xlat
lret
imul
or
inc
pop
in
js
mov
or
xchg
add
lahf
and
jo
jecxz
in
pop
lret
jno
loop
add
push
sbb
inc
mov
mov
fbld
push
stos
cmp
js
dec
stc
adc
fucomip
jae
xchg
and
jg
mov
jg
pop
xchg
cmp
out
pop
dec
imul
gs
xor
cs
insb
add
insb
push
xlat
lret
pop
repz
daa
mov
jns
mov
pop
mov
pop
mov
fs
stos
sti
movl
sub
jecxz
xor
adc
imul
mov
sub
ret
pop
movsl
insb
clc
push
mov
inc
mov
jmp
push
in
pop
mov
push
in
insl
stc
inc
sbbl
mov
xor
loop
add
cmc
pushf
mov
sub
jmp
in
push
xlat
lret
ret
jns
sbb
jnp
mov
jae
in
pop
inc
arpl
adc
arpl
xchg
pusha
int
mov
lock
cmpsl
adc
mov
test
call
imul
and
int3
and
popf
add
mov
pop
mov
int3
pop
mov
cmp
cmp
xlat
jb
nop
sbb
jle
movsb
mov
insb
pop
stos
or
std
mov
cmp
and
ret
ror
bt
pushf
sub
test
test
bt
xor
mov
cmp
std
pushw
popfw
call
or
add
clc
mov
scas
inc
fldcw
mov
add
fsub
das
and
or
dec
outsl
push
fisubrs
iret
inc
test
pusha
loope
pop
test
gs
jg
mov
int
int
mov
loop
outsl
adc
fs
jbe
call
ret
add
lret
cmp
addr16
stos
xor
mov
aam
shl
push
mov
jg
jecxz
or
push
mov
dec
insl
jbe
dec
xor
andl
or
push
mov
cmpsb
push
out
mov
cmp
and
repz
mov
pop
and
or
leave
inc
fwait
test
jo
jl
xchg
push
mov
xchg
adc
pop
leave
rcrb
cmc
stc
add
jmp
sub
add
lret
push
lea
movsb
sub
mov
nop
scas
es
stos
adc
push
push
lock
jno
scas
test
jns
pushf
rcl
inc
jb
sbb
xor
stos
insb
cmpsb
ja
push
push
out
cli
and
or
clc
mov
cltd
jl
mov
pop
inc
lock
push
mov
push
sub
lods
dec
ljmp
xchg
faddp
int3
pop
in
mov
movw
pushf
movb
lea
jmp
xchg
call
jge
mov
mov
add
pop
jg
subl
xor
div
jge
and
roll
mov
add
hlt
test
je
push
push
adcl
dec
jmp
mov
out
das
insl
lea
js
adc
and
bts
shrd
mov
clc
jmp
mov
pusha
movsbl
pop
mov
pushf
push
pushf
pushf
pushl
ret
shr
stc
cmp
call
sub
lea
call
bnd
xlat
lret
inc
into
pop
hlt
test
dec
fs
xchg
xor
andl
neg
arpl
inc
negb
xchg
imul
or
sub
orb
adc
imull
jmp
nop
clc
int3
push
add
maskmovq
testl
arpl
aad
lret
cmp
lods
xchg
mov
movsb
mov
mov
test
jbe
pushf
call
push
cmp
push
mov
pushl
pushf
not
movb
push
call
push
push
dec
add
lret
cmp
adc
data16
lcall
add
adc
pop
jecxz
pop
int
mov
inc
cld
sbb
jp
add
fldcw
divb
or
pusha
int
fstpl
push
ljmp
xchg
cwtl
push
jb
jns
and
loop
nop
xor
dec
out
test
mov
push
out
jo
enter
mov
xor
xlat
xchg
sub
adc
movsb
inc
imul
sahf
cmp
xor
sarl
sub
sub
xorl
jo
xor
es
sbb
repz
les
pop
jno
adc
fldt
movsb
adc
sub
and
sbb
ljmp
pop
es
cmp
mov
mov
sbb
aad
shrl
dec
sarb
xor
mov
xchg
inc
test
lcall
dec
xlat
xchg
xchg
ljmp
push
fistpl
ss
cwtl
mov
outsb
sub
dec
dec
or
sbb
add
ficompl
lea
mov
movsb
lret
add
div
insl
add
roll
pop
adc
es
movsb
int
shll
jg
rcl
cmp
lock
scas
outsb
push
pop
test
into
xchg
repnz
fcmovnu
sub
push
mov
bound
and
movsb
add
iret
sub
aas
mov
pop
test
insl
lret
pop
jb
fimull
sub
cmp
ds
insl
dec
lahf
stos
xor
imul
movsb
repnz
test
insl
push
stc
rcll
stos
aam
lods
fs
xchg
cmp
mov
movsb
les
shll
aas
das
mov
jno
ja
pop
pop
sti
push
adc
xor
cwtl
jbe
jb
sub
jl
stos
loope
ljmp
test
dec
es
add
dec
sbb
cmp
dec
popf
inc
sahf
out
ljmp
and
mov
icebp
mov
mov
push
mov
fisubrl
mov
mov
outsl
add
sarb
pop
sbb
scas
add
xor
das
pop
out
dec
imul
aas
push
inc
jb
adc
adc
mov
shl
mov
insb
sbb
sub
sahf
test
and
xor
sub
dec
ljmp
stos
ret
jge
mov
mov
push
lret
adc
cmp
xor
jp
mov
outsl
jmp
fdivs
mov
sub
movsb
cmp
mov
das
pushf
les
mov
dec
jb
addb
jle
xor
xor
add
imul
and
and
adc
outsl
xor
outsb
in
sub
sbb
mov
or
jecxz
cmc
dec
xor
repz
out
bound
xor
lods
push
mov
or
mov
aam
pop
and
adc
jb
mov
cs
pop
mull
in
and
adc
repnz
xor
lods
outsl
js
inc
test
add
mov
xchg
and
xchg
mov
mov
xchg
xor
cmpsl
pop
dec
push
das
movsl
clc
jmp
xor
inc
push
adc
xchg
push
cmpsb
inc
pop
xor
jmp
std
jmp
and
es
adc
mov
movl
xor
inc
lcall
fisubs
jno
xor
and
ficoml
mov
and
xor
sahf
and
push
cmp
jbe
mov
mov
mov
mov
call
push
mov
cs
loope
cltd
pop
arpl
fcoml
xor
xorl
inc
mov
mov
popf
les
sub
sub
xor
jmp
sub
fistl
imul
xor
ret
xor
dec
repz
jbe
sub
jecxz
lods
and
sub
or
sbb
mov
jo
xor
cltd
popa
sti
cmp
push
icebp
jb
loope
sbb
sti
fldenv
sti
ja
push
das
jl
jno
push
pop
cmp
jbe
call
mov
mov
jle,pn
jg
mov
out
sti
jne
cli
sbb
sti
sub
cmp
jbe
dec
add
mov
lock
mov
cmp
jbe
mov
sbb
mov
jecxz
fcomip
jno
and
push
dec
cmp
jbe
in
mov
and
sub
jb
in
add
and
fnstsw
jbe
mov
mov
mov
lock
and
dec
sti
outsl
and
cmp
jbe
and
shrb
pop
jnp
je
jnp
data16
xor
lods
mov
mov
movsl
int3
sti
xor
scas
push
mov
jbe
mov
mov
mov
pop
push
sti
out
and
and
jno
sbb
push
mov
and
dec
sbb
xchg
push
xchg
lcall
xor
in
lods
inc
jmp
xor
loop
lahf
iret
loop
sbb
push
scas
xor
mov
mov
jno
rcrb
lahf
xchg
loopne
xchg
and
sar
outsb
and
ret
cmp
jbe
xchg
jecxz
push
jbe
fstl
mov
and
xor
fldenv
push
popa
cmp
jbe
cmpsl
xchg
mov
and
jmp
sti
jo
push
ret
jbe
and
mov
and
push
and
xor
and
mov
and
xor
and
push
cmpb
sbb
mov
and
sub
and
push
loope
fistl
mov
and
xor
in
sti
jae
push
aas
cmp
data16
push
pop
mov
and
imul
and
sarb
mov
and
sub
sti
arpl
push
push
cmp
jbe
jp
stos
mov
dec
aaa
pop
pop
xchg
jle
lods
insl
jmp
cmpsb
scas
adc
add
inc
mov
out
xchg
push
test
pop
aaa
push
das
and
jmp
mov
inc
fldt
mov
push
test
das
dec
pop
jmp
lahf
jmp
test
adc
inc
mov
scas
xchg
stos
push
push
popf
pop
movsl
push
das
sahf
mov
inc
mov
adc
xchg
pop
xor
sbb
lods
sti
jmp
push
cmp
mov
xchg
stos
push
mov
pop
add
jl
lods
call
adc
inc
mov
int
imull
ficoms
fucomp
lods
xor
rclb
adc
push
mov
aas
mov
mul
mov
repnz
popa
jno
xor
push
mov
je
and
mov
ss
mov
push
popf
cs
mov
stc
mov
and
dec
aam
pusha
xor
jno
mov
mov
inc
mov
push
mov
xor
cs
jle
sbb
sbb
ja
mov
iret
nop
jno
mov
jmp
adc
mov
mov
stos
push
dec
negl
pushf
push
das
dec
xor
inc
dec
jne
sahf
inc
mov
mov
lahf
stos
push
pop
push
pop
ljmp
jmp
dec
movsb
adc
xchg
pop
mov
jmp
mov
adc
mov
mov
dec
push
sbbb
push
das
push
ret
jmp
cmpsl
jmp
dec
and
mov
iret
push
add
push
test
xor
push
cltd
and
mov
js
xor
andl
pushf
ret
sbb
lcall
and
mov
mov
push
je
lret
xor
dec
jae
fiaddl
lods
js
inc
fbstp
insl
inc
and
jbe
pusha
cmp
jbe
add
lods
js
inc
filds
in
jb
cmp
jbe
ja
push
mov
inc
push
rcll
cmpsb
inc
mov
roll
pop
movsb
push
das
lods
adc
lods
cld
jmp
das
jmp
add
inc
stos
pop
adc
inc
mov
aas
xchg
stos
push
mov
das
fstpl
lods
imul
loop
adc
and
mov
push
fdivrl
push
das
loope
jmp
outsl
jmp
out
je
fistpl
loopne
pop
outsb
push
das
dec
shr
sahf
jmp
in
jb
sti
fldenv
stos
ja
mov
pop
add
bnd
inc
push
add
mov
xchg
jbe
fisttpll
lods
imul
loop
adc
and
mov
push
fsubrl
push
das
loope
jmp
outsl
jmp
out
je
fisttpl
loopne
pop
outsb
push
das
dec
scas
jmp
sahf
jmp
dec
jmp
popf
jmp
jecxz
adc
and
mov
test
mov
imul
pop
out
jne
inc
adc
mov
jbe
dec
je
jmp
imul
outsb
inc
and
mov
push
push
sbb
push
cmp
inc
push
insl
adc
xchg
pop
lahf
push
das
dec
jge
lods
sahf
jmp
dec
scas
adc
adc
fwait
stos
push
dec
mov
dec
out
jmp
cltd
jmp
pop
ficoms
test
mov
push
xchg
pop
cmpsb
push
das
push
sub
lods
movsl
jmp
push
sbb
movsb
inc
mov
dec
xchg
push
fistpll
insl
push
pop
in
jb
insb
lock
pop
pop
adc
mov
mov
dec
jbe
fnstsw
imul
mov
adc
mov
int
sti
stos
push
mov
pop
add
fucomp
lods
stc
jmp
mov
adc
inc
mov
sub
dec
pop
push
das
mov
jmp
add
adc
inc
lahf
inc
jnp
add
stos
lods
xchg
stos
push
mov
pop
add
mov
inc
scas
fcoml
incl
mov
xchg
stos
push
lods
sub
std
push
das
mov
jmp
add
inc
stos
cmp
sti
inc
mov
pop
xchg
stos
push
test
das
mov
jmp
add
inc
mov
adc
inc
mov
mov
mov
pop
add
jmp
cld
jmp
sub
lods
add
inc
stos
sbb
cli
inc
mov
cmp
imul
mov
lods
jmp
mov
adc
inc
mov
cltd
xchg
stos
push
loop
pop
jo
pop
out
jne
inc
fdivrl
loope
xchg
jbe
dec
je
fcmovnu
jmp
imul
outsb
inc
and
mov
push
pop
js
das
fistpll
jmp
insl
jmp
in
jb
sti
fldenv
stos
ja
ficomps
insb
push
das
jecxz
jmp
jno
jle
inc
jbe
fnstsw
imul
push
pop
out
jne
inc
fcompl
loope
xchg
jbe
dec
je
fldt
inc
loopne
adc
and
mov
push
fcmove
pop
js
das
fistpll
jle
and
sti
fldenv
stos
ja
fcompp
pop
insb
push
das
jecxz
jmp
jno
jle
inc
jbe
xchg
push
loop
pop
jo
pop
out
jne
inc
fsubl
adc
mov
push
xchg
jbe
dec
je
fildl
lods
imul
outsb
inc
and
mov
push
fisubl
js
das
fists
jle
and
sti
fldenv
stos
ja
fidivrs
jecxz
jmp
jno
jle
inc
jbe
fstp
xchg
push
loop
pop
jo
pop
out
jne
inc
fdivr
adc
mov
call
out
je
fistpl
jmp
imul
outsb
inc
and
mov
push
fidivl
pop
js
das
fbld
jmp
insl
jmp
in
jb
sti
fldenv
stos
ja
fiadds
insb
push
das
jecxz
jmp
jno
jle
cld
or
data16
mov
xchg
xchg
jbe
dec
jne
faddl
inc
loope
adc
and
mov
push
loopne
jmp
outsb
jmp
in
jae
fcmovb
xchg
push
fcomip
pop
insl
push
pop
in
jb
out
pop
xchg
jecxz
pop
jno
pop
call
fnsave
mov
xchg
push
push
inc
pop
mov
jbe
inc
fnsave
imul
xchg
jbe
dec
jne
fcoml
inc
loope
adc
and
mov
push
mov
jmp
add
inc
test
mov
out
add
pop
push
das
scas
xor
lods
jmp
mov
adc
xchg
stos
pop
scas
xchg
stos
push
stos
xchg
pop
cli
push
das
mov
jmp
add
inc
mov
mov
lds
cmc
pop
push
push
das
lods
adc
inc
mov
adc
mov
and
inc
pop
add
jae
lods
stc
jmp
mov
adc
inc
mov
addl
pop
push
das
mov
jmp
add
adc
inc
lahf
inc
adc
add
stos
add
cli
stos
es
out
repz
push
mov
push
jmp
or
inc
scas
jb
incl
mov
add
cmp
lods
addb
xchg
push
stos
rcrl
sti
push
das
loopne
jmp
outsb
jmp
in
jae
xchg
push
pop
insl
push
pop
in
jb
adc
add
xor
jno
pop
call
frstor
adc
mov
push
xchg
jbe
dec
jne
faddl
lods
push
inc
loope
adc
and
mov
push
imul
jmp
in
jae
fiaddl
fbstp
in
jb
mov
ja
xchg
jecxz
pop
jno
das
stos
bnd
cli
jmp
pop
loop
test
mov
add
and
rcll
push
jmp
aad
inc
fwait
jo
sub
dec
pusha
xchg
pop
cltd
push
das
pop
sub
test
inc
push
mov
cmpsl
and
xor
inc
mov
mov
stos
add
mov
push
ds
lcall
cld
stos
sub
lcall
mov
in
cmp
filds
mov
stos
imul
pusha
adc
arpl
mov
ret
sbb
mov
sub
loopne
inc
js
movsl
push
and
sbb
mov
xor
jo
movaps
sbb
shll
mov
lcall
shlb
cmp
push
mov
and
dec
bound
push
leave
movsb
push
pop
aad
cmp
jb
scas
add
inc
pushf
inc
sub
insb
mov
push
jns
orb
mov
and
pop
adc
push
outsb
lds
lahf
adc
jo
outsb
lahf
add
push
xchg
xor
lcall
jo
scas
mov
pop
repnz
sub
les
and
pop
mov
insl
stos
stos
jo
adc
mov
roll
lcall
mov
jb
scas
fwait
sbb
push
divl
cs
mov
mov
movsl
mov
adc
or
jbe
add
jb
push
jb
inc
lods
ja
pop
xchg
pop
movsb
push
xchg
xor
mov
aam
scas
sub
mov
icebp
inc
std
js
mov
pop
mov
popf
js
sub
push
rolb
dec
xor
jb
scas
or
enter
jg
outsb
imul
das
sbb
push
popf
jo
scas
ljmp
lcall
aam
add
jecxz
push
ret
rcrl
scas
jge
popf
push
jl
pop
jnp
pop
push
cmp
push
or
outsb
jb
jb
outsl
xchg
adc
mov
jg
stos
dec
popl
popf
sub
mov
lret
sub
mov
push
push
stos
sub
jno
push
mov
push
scas
mov
rclb
or
push
cmp
scas
jbe
jb
and
adc
fildll
add
cs
stos
cmp
sti
and
and
inc
insl
js
mov
push
pop
and
scas
push
mov
mov
ds
sahf
outsb
lcall
push
pop
jo
scas
jae
mov
lahf
jbe
lcall
mov
xor
ja
stos
ret
scas
sbb
push
stc
jo
outsb
mov
in
dec
mov
lcall
add
out
jne
test
movsb
mov
cs
outsl
lcall
popa
lcall
jge
mov
mov
jmp
fbstp
scas
dec
sbb
xorl
movd
ja
arpl
aas
call
jo
dec
mov
pop
push
adc
stos
mov
push
cmp
mov
lea
sbb
and
fwait
stos
loop
xor
adc
and
mov
fisttpl
pop
sbb
mov
cltd
inc
stos
popa
lea
scas
push
stos
jo
outsb
cmpb
sbb
push
or
push
scas
outsb
xchg
cmp
push
jno
jb
scas
sub
inc
xor
adc
lcall
mov
sbb
ja
mov
dec
mov
negl
imul
scas
pop
sbb
inc
les
sub
xchg
xor
xor
cmp
subl
sub
sub
mov
enter
jmp
scas
mov
rorl
negl
xchg
mov
sub
ficompl
ret
mov
mull
ficoml
jo
outsb
ror
mov
pop
push
data16
outsb
pushf
fsubrs
xchg
or
and
sub
jbe
add
jb
cmp
jbe
pop
sub
imulb
fistps
mov
pop
jp
adc
mov
cs
icebp
stos
adc
pop
xor
push
inc
outsb
test
lods
into
lcall
jb
scas
lcall
adc
mov
mov
scas
movsb
stos
shr
and
xor
xor
push
cmp
bndldx
dec
dec
sub
push
dec
pop
sbb
repnz
test
xchg
push
std
mov
pop
data16
inc
popa
mov
push
sub
or
mov
mov
lcall
cld
mov
mov
mov
ss
cs
push
sub
movsl
and
cmp
jo
scas
pop
stos
adc
lods
push
push
pop
mov
mov
jo
scas
sbb
in
adc
bnd
push
mov
stos
add
and
cltd
mov
fisubrl
stc
or
lahf
cmp
out
and
push
test
dec
jb
outsb
movsl
js
hlt
stos
insb
cwtl
and
add
xor
jb
outsb
cmp
jmp
xor
push
mov
mov
aaa
mov
cs
insb
inc
movsl
ja
dec
addr16
xchg
mov
sbb
jb
call
les
les
mov
cs
es
push
xor
inc
xor
jbe
jge
stos
cmp
xchg
jmp
call
imul
mov
dec
out
mov
shrb
negl
xchg
mov
xchg
pop
push
xorl
push
mov
mov
jo
outsb
xchg
xor
push
push
xor
outsb
pushf
int3
lcall
jb
scas
nop
push
sbb
dec
sub
js
test
fcoms
outsb
out
lcall
jecxz
mov
sbb
push
adc
push
lcall
insl
jne
pop
jo
outsb
add
pop
sbb
dec
outsb
or
cs
loope
loopne
iret
jo
scas
sbb
sub
outsb
aad
aam
addb
and
scas
lcall
lcall
jo
scas
out
sbb
push
int3
outsb
lret
lret
push
jo
lock
mov
lcall
popf
lahf
pop
repnz
push
popf
idivb
cwtl
js
cmp
push
add
out
xchg
push
xchg
popa
mov
scas
push
popf
jo
scas
mov
xor
push
outsb
lcall
jo
scas
jmp
and
dec
outsb
ds
jo
scas
int3
sbb
stc
lcall
push
outsb
inc
jae
push
push
sbb
popa
jo
scas
pusha
sbb
push
push
xor
cs
xchg
push
test
iret
cmp
cltd
cmp
mov
cmp
dec
in
arpl
mov
adc
cwtl
mov
stos
int3
aad
add
mov
cmc
and
push
pusha
outsb
mov
jno
push
sbb
sbb
imul
lcall
xchg
sbb
push
cmpsb
outsb
test
lcall
mov
mov
sbb
lcall
dec
sbb
mov
sbb
outsb
aad
and
cs
ds
stos
fwait
push
cmp
and
jb
hlt
mov
sub
sbb
mov
adc
mov
xor
or
push
add
sub
jp
test
mov
xor
mov
and
mov
fidivl
or
lock
or
mov
push
pop
sbbb
push
ja
and
mov
stos
sbb
mov
fstl
jo
scas
sbb
cli
push
js
addr16
lcall
cmc
sbb
xor
rcll
outsb
adc
lcall
lcall
sub
or
rcll
stc
adc
ss
mov
mov
stos
insl
sarl
mov
push
pop
xor
loope
xor
jo
outsb
repz
data16
popa
add
lcall
mov
repnz
shrl
loopne
mov
scas
in
sbb
jmp
lret
jo
scas
mov
outsb
xchg
je
xor
pop
outsb
or
lcall
pop
je
imul
ret
sbb
and
push
and
subl
loop
and
push
cltd
outsb
xchg
nop
cs
fstpl
mov
and
push
add
rcrb
scas
sbb
std
push
fsubrl
fistpl
mov
push
cmpsb
outsb
test
mov
jg
or
mov
cli
outsb
cmp
jbe
shlb
mov
jb
lock
fwait
xchg
cmp
pop
je
pop
shll
fimuls
add
adc
insb
mov
int
dec
outsb
xchg
mov
add
loope
sbb
inc
test
push
push
dec
mov
sbb
pusha
ds
fsubrl
xchg
lcall
jo
outsb
pusha
pop
mov
sbb
push
xchg
outsb
xchg
bound
lahf
and
xor
cli
out
adc
mov
stos
adc
xchg
jle
movsl
mov
sub
lahf
scas
push
mov
jecxz
sahf
adc
or
or
lcall
and
mov
sbb
push
add
rcrb
scas
mov
outsb
fwait
jp
pop
repnz
in
push
out
add
ss
mov
inc
mov
js
mov
pop
xor
push
fistps
imul
push
cltd
outsb
pop
repz
lcall
jb
scas
int
mov
xor
sub
pop
inc
xchg
hlt
add
ljmp
jb
mov
insl
stos
lods
and
or
addr16
gs
movsb
stos
mov
lret
outsb
subl
lret
jo
scas
mov
adc
mov
rcr
xor
inc
cmp
jge
push
mov
cli
push
testb
insb
mov
stos
ret
popf
add
lcall
jb
scas
jp
xchg
cmpb
mull
sbb
sub
pop
sbb
push
sub
mov
cmp
shrl
sbb
movsb
adc
mov
push
ds
int3
adc
and
cld
fcomps
ds
fdivrs
mov
fdivrs
mov
fdivrs
push
sti
adc
and
cmp
hlt
dec
adc
xchg
jns
movsb
adc
add
xor
cltd
and
ljmp
ucomiss
xor
js
xor
push
mov
xor
push
mov
cmp
mov
mov
lods
cs
push
inc
nop
mov
lods
xchg
scas
nop
mov
pop
push
gs
mov
jle
push
inc
outsb
lock
lcall
mov
sbb
cltd
scas
aaa
sbb
addb
pop
sbb
lret
mov
sbb
xor
outsb
adc
sub
and
and
xlat
push
cmp
std
push
cld
jo
scas
pop
sbb
mov
pop
xor
inc
sbb
sahf
push
pusha
nop
or
outsb
mov
push
dec
out
or
jo
scas
es
scas
je
les
repz
push
repnz
mov
lcall
lcall
push
jecxz
and
mov
adc
pop
cwtl
jb
out
mov
and
xor
inc
and
sbb
sbb
inc
adc
jb
and
jb
out
daa
push
jb
push
jb
xor
cmp
jp
sub
imul
mov
xchg
adc
test
jecxz
sub
sub
sbb
ja
and
xor
jo
scas
cltd
sbb
sbb
inc
lahf
mov
xchg
jae
pop
xchg
push
dec
xorl
pop
mov
jae
xor
in
movsl
xor
repz
adc
mov
fwait
push
bound
xor
sub
mov
cltd
pop
mov
and
bound
rclb
adc
xorb
shrl
icebp
cs
ds
outsb
jno
mov
stos
inc
add
add
hlt
xor
jbe
push
and
xor
xor
lcall
inc
mov
dec
sub
sbb
mov
pop
fndisi(8087
rcrb
and
xor
push
and
adc
xchg
add
inc
xor
push
and
xlat
push
sbb
scas
les
xor
lock
sbb
scas
out
push
outsb
push
adc
fwait
mov
and
mov
push
and
push
jg
push
lret
cwtl
scas
fsubrs
xor
loope
xchg
xor
add
mov
das
sbb
and
aas
and
push
imul
push
shlb
add
push
sub
rcr
stos
jmp
out
adc
repz
or
imull
add
push
sbb
push
cmp
cli
outsb
ljmp
stos
sub
insl
cmp
or
or
push
fcoms
fists
cmovb
ds
jb
je
xchg
shrl
adc
push
fisttps
mov
pop
mov
sbb
dec
cmp
andb
push
mov
mov
push
sbb
mov
sbb
cmp
pop
cmp
lea
popf
fcomps
jo
xor
das
mov
sbb
push
dec
sahf
mov
xchg
pop
cs
mov
repz
insb
sbb
pop
mov
sbb
and
sbb
lahf
dec
push
jle
ret
mov
sbbl
movsl
push
mov
outsb
and
in
jl
mov
stos
ficompl
push
cltd
push
fwait
mov
or
mov
frstor
mov
outsb
mov
sbb
scas
inc
sbb
std
outsb
mov
mov
sbb
push
out
mov
jle
imul
into
aas
lods
or
sbb
cli
sbb
cmp
imul
jb
outsb
sub
and
fwait
and
xlat
outsb
cwtl
fdivl
jo
lahf
lock
ss
aas
lods
adc
jb
push
popa
jo
scas
jg
scas
push
lea
lret
and
sbb
jo
scas
xchg
jne
outsb
xorl
push
loopne
imul
sbb
outsb
sbb
daa
push
inc
jo
scas
inc
sbb
mov
push
inc
cmp
scas
add
pop
push
sbb
outsb
sbb
lcall
pushf
xor
aaa
mov
fisubrs
imul
int
lret
push
ret
pop
jb
ficoms
negl
in
mov
push
stc
adc
push
sbb
sbb
outsb
stos
ss
mov
inc
stos
jb
lcall
xor
lret
outsb
lds
push
jmp
lods
scas
test
aad
rcr
in
outsb
jmp
lcall
cs
cs
repz
insb
mov
jb
lret
ljmp
and
cli
mov
mov
sub
pop
jb
dec
jb
js
mov
ja
mov
mov
std
test
leave
sub
mov
fnstenv
stc
mov
push
stos
inc
xchg
xor
xor
mov
adc
mov
sahf
daa
sub
sbb
and
mov
push
filds
js
push
sbb
push
aad
jb
outsb
push
jb
push
jb
inc
jb
data16
sub
and
sub
mov
mov
mov
inc
xor
xor
jbe
test
cmp
imulb
out
cs
xchg
mov
fs
cs
mov
inc
jae
mov
test
scas
cmp
aad
sub
jo
cmp
imul
shrb
sbb
cmc
pop
xor
jecxz
or
scas
mov
in
lea
pop
mov
scas
or
add
xor
pop
add
inc
mov
push
test
sbb
push
mov
cmp
pop
lods
insl
mov
push
data16
push
ret
add
add
sbb
push
lods
push
and
push
sub
inc
sbb
and
mov
lock
sbb
xor
xor
xor
adc
outsb
cwtl
clc
lcall
jb
scas
add
jmp
mov
lcall
adc
mov
stos
daa
push
xor
clc
out
inc
in
mov
xorb
out
sbb
outsb
js
cs
add
xor
cs
stos
mov
sbb
popa
lahf
dec
push
adc
scas
jl
cmp
jle
push
cmp
es
repnz
inc
cmp
cli
xor
es
push
lea
pop
adc
sbb
mov
outsb
mov
hlt
sbb
mov
cs
push
fisubrs
mov
jo
pop
push
sub
mov
scas
adc
mov
outsb
imul
lcall
mov
pusha
mov
nop
mov
andb
xor
mov
aas
cs
shll
loope,pn
stos
popf
adc
xor
sbb
movsl
sbb
dec
cld
ds
stos
mov
outsl
sub
inc
and
and
pop
lock
scas
fildll
add
stos
mov
push
and
xchg
out
dec
and
ds
outsb
popf
mov
cmpsl
push
test
bnd
push
leave
outsb
xchg
push
dec
xchg
das
xor
imul
inc
ss
cmp
pop
mov
jb
sahf
mov
stos
add
mov
out
mov
fbstp
xor
cmp
sbb
insl
and
push
lahf
jo
sbb
and
scas
push
sbb
sub
into
jp
mov
inc
cmc
mov
adc
inc
push
push
push
lret
xchg
sbb
repz
push
pop
cmp
sbb
repz
sbb
sbb
and
int
cs
push
mov
push
push
jle
push
aad
xchg
push
in
or
xor
sbb
aad
stos
push
std
jmp
push
mov
outsl
push
shlb
pop
lods
cmp
fisubrs
imul
push
pop
lods
nop
mov
mov
mov
jmp
sbb
push
add
mov
xor
fdivl
xor
push
sti
mov
xor
sti
mov
pop
xor
sti
mov
xor
sti
mov
xor
xchg
sbb
mov
dec
cs
movsb
inc
xor
movsb
adc
imul
fdivrs
xor
lds
xor
out
cmc
sub
in
sbb
sub
sbb
xor
xchg
add
shl
xor
xor
push
mov
inc
imul
xor
negl
data16
lahf
lods
mov
mov
jae
xor
notl
mull
mov
mov
arpl
movsb
mov
lcall
mov
mov
jbe,pn
xchg
adc
lret
xor
insb
pusha
mov
jmp
sbbl
push
das
mov
jmp
adc
pop
mov
lret
shll
jae
movsb
cld
mov
pop
mov
scas
xor
mov
jp
add
and
jb
mov
mov
mov
mov
or
and
mov
mov
mov
mov
ret
mov
xor
das
adc
inc
mov
andb
int
insb
addr16
xor
mov
push
mov
stc
push
ret
xor
mov
mov
mov
cwtl
pop
xor
mov
sbb
and
and
add
mov
jno
subb
in
movzbl
dec
pop
jno
das
xor
test
inc
scas
push
add
cs
cmp
mov
mov
cs
sub
dec
insb
xchg
cmpsb
sbb
ja
jo
out
push
sub
scas
xor
push
cmp
orb
sbb
or
cwtl
push
mov
stos
inc
jne
lea
jo
outsb
ret
lods
sbb
jbe
and
pop
push
push
push
inc
test
scas
pop
sbb
ds
dec
outsb
shrl
fstpl
push
sbb
jmp
sahf
mov
mov
and
inc
test
jge
repz
pusha
adc
shrb
cmp
into
jo
push
in
inc
xor
mov
stos
xorl
cli
adc
jge
fidivrs
push
repz
fisttpll
mov
loop
iret
jo
int
xchg
mov
add
mov
xchg
clc
mov
pop
adc
repz
dec
push
xchg
cld
adc
mov
ja
sub
rorb
arpl
jo
test
sub
lds
mov
pop
bnd
add
repz
call
sbb
push
jmp
mov
leave
ljmp
shll
ss
mov
hlt
mov
pusha
mov
xor
jecxz
icebp
push
xor
aas
lock
nop
stos
in
or
pusha
js
and
das
shrl
xchg
ljmp
pusha
mov
sub
mov
push
pop
imull
push
stos
sbb
sbb
xorb
fimuls
sub
push
stos
push
or
lret
scas
xchg
adc
xchg
sub
das
xchg
adc
pop
lods
in
loop
and
inc
jno
not
and
dec
jp
xor
dec
outsb
nop
push
mov
mov
cli
adc
repz
scas
add
mov
cs
mov
cs
sub
lods
insb
dec
push
aas
sbb
push
popa
push
bound
sbb
int3
dec
aaa
xor
movsl
push
pop
cmp
test
sbbl
aas
fnstcw
mov
inc
xchg
add
ret
pop
jp
lret
cli
sbb
in
sbb
imul
int
or
mov
jo
into
or
dec
sbb
xor
lods
xchg
stos
pop
out
xor
out
jl
sub
cmc
mov
cmc
dec
inc
sub
stos
push
mov
sub
gs
or
mov
jmp
xchg
sbb
sub
xchg
inc
inc
xchg
roll
ret
stc
pop
negl
cmp
test
lock
sbb
int3
pop
adc
ljmp
ss
jo
push
cwtl
mov
dec
ds
cli
mov
mov
lods
push
scas
push
out
mov
xchg
imul
shrl
push
mov
outsl
dec
aad
jne
mov
sub
out
out
das
stos
sbb
das
out
cli
sbb
mov
mov
mov
cwtl
and
pop
cmp
cmpsb
int
jmp
in
dec
sbb
or
in
call
xchg
mov
xchg
addr16
mov
notl
sub
xchg
xor
jmp
mov
push
pushf
push
dec
cmp
mov
mov
mov
sbb
fwait
mov
sbb
jecxz
xorl
ja
pop
jmp
pop
adc
jne
push
aaa
jo
pop
xchg
data16
pop
adc
xlat
test
jno
ja
sbb
adc
dec
cmp
push
fs
insl
in
loopne
mov
test
sbb
push
cmp
jb
mov
sbb
pop
xor
lods
mov
sarb
adc
dec
das
mov
out
jnp
push
popf
test
adc
aam
fwait
les
mov
cmpsl
js
inc
negl
xchg
aad
in
and
or
mov
fdiv
ds
pop
outsb
mov
xor
fnstcw
cltd
orb
subb
dec
jne
inc
inc
lea
sbb
or
sbb
repz
imul
repz
in
mov
or
iret
popf
dec
mov
cmc
fiaddl
jno
les
inc
dec
mov
push
mov
ret
aas
sbb
xor
ds
scas
xor
sti
xor
cmpsb
push
or
cmp
fstpl
jg
jbe
shll
cmc
sbb
mov
je
ss
aas
sbb
xor
testl
dec
call
jae
pop
push
jo
sahf
jecxz
push
dec
xor
in
sub
push
sbbb
insb
clc
push
enter
xchg
pop
xor
lahf
inc
push
loopne
xor
movsl
cld
sbb
sub
xor
movsb
stos
mov
and
mov
cmp
rcll
cld
mov
xchg
flds
cs
lock
sub
cmpsb
testl
inc
sbb
xchg
xchg
lret
cld
pop
add
adc
mov
mov
in
mov
data16
movsl
rcrb
out
loope
push
inc
xchg
pop
insl
xchg
mov
hlt
rorb
fists
test
adc
xlat
inc
mov
xor
dec
xchg
push
imul
add
add
addr16
repnz
ds
pop
xchg
add
jg
and
dec
movsb
cmp
outsl
or
mul
xorb
push
and
mov
push
mov
mov
lods
bound
rcll
sub
stos
iret
mov
repz
test
shlb
ds
subl
xor
jb,pn
int3
fldcw
jb
cmp
lds
jb,pt
cld
push
ret
popf
sbb
lea
and
inc
test
sub
cld
subl
jnp
add
and
pop
jnp
xlat
inc
xorl
in
inc
mov
jle
sbb
mov
cmpb
dec
jns
repnz
stos
mov
add
xorb
adc
iret
imul
ret
and
lret
lcall
ret
sti
inc
jo
fistpl
xor
shll
pop
cmp
mov
add
add
pop
jmp
cltd
aas
mov
push
xor
or
xor
icebp
xchg
rep
dec
xor
or
mov
sub
mov
mov
cmp
cmpsl
add
pop
xor
aas
pop
dec
xor
jle
test
iret
jmp
decl
jns
inc
stc
lea
repnz
pop
das
mov
mov
push
scas
xchg
ja
and
or
push
xor
pop
xchg
jno
pushf
xor
or
scas
clc
int
cs
das
add
add
mov
mov
in
das
shlb
inc
pop
sbb
lods
or
outsl
enter
lock
inc
call
das
bnd
dec
mov
push
ret
inc
data16
sub
cmp
sbb
pop
es
ss
push
scas
or
mov
cmp
mov
out
push
outsb
pop
xor
adc
out
adc
sti
adc
jmp
das
and
ss
std
mov
jmp
mov
sub
stos
imul
lret
cli
xchg
adc
pop
xor
sub
mov
jp
adc
sub
pop
xchg
pusha
and
ljmp
push
sub
mov
cmp
push
mov
test
test
rcrb
push
fldcw
xchg
in
sub
xor
xor
sub
test
das
mov
xor
ret
xchg
sub
pusha
push
aaa
mov
mov
xor
daa
clc
and
addr16
inc
dec
idivb
cmp
mov
mov
xor
or
sbb
stos
xor
xor
jl
xor
cs
test
ds
mov
call
mov
and
aaa
aas
dec
gs
xchg
mov
cmp
test
movsl
xchg
xor
and
stos
cmp
push
movsb
jp
imul
and
fcomps
sub
stos
je
sub
push
enter
sbb
mov
cmpsl
sbbb
insb
xchg
data16
sub
out
icebp
and
loop
pop
mov
test
xor
xchg
mov
sub
inc
in
sbb
xor
dec
inc
stos
gs
sub
movsl
inc
xor
scas
inc
repz
inc
repz
test
das
lret
mov
test
pop
mov
cmp
push
mov
jne
adc
xor
mov
notl
stc
test
ja
xchg
xor
mov
push
adc
push
fs
mov
lods
sbb
scas
mov
mov
dec
push
mov
repnz
ljmp
sarb
aad
imull
test
adc
aad
xchg
add
inc
push
fs
scas
sbb
push
mov
inc
in
mov
stos
mov
aad
out
inc
mov
in
xchg
adc
mov
push
xchg
push
push
lds
and
aad
mov
cmp
push
sbb
fs
mov
fisubrl
fwait
sub
lds
cmc
ljmp
mov
add
cmc
mov
sub
and
hlt
mov
aam
xor
sbb
into
push
xchg
mov
and
enter
pop
insb
cmpsb
add
hlt
xor
push
hlt
inc
fadds
add
cwtl
movsb
scas
lds
mov
push
adc
jl
pop
jns
dec
xor
notb
xchg
xchg
sub
dec
imul
mov
mov
push
lds
push
lret
ds
inc
sbb
jae
outsb
ds
or
xor
lahf
sarb
out
jl
in
xchg
sbb
or
dec
lea
xor
add
push
sub
dec
dec
sahf
iret
popf
and
pop
stos
imul
cmp
orl
mov
cmp
sti
test
xor
mov
and
adcb
ficompl
sarl
movsl
jb
adc
mov
xor
sub
dec
arpl
ret
jb
mov
outsb
xchg
xor
push
mov
rol
sbb
and
push
gs
icebp
sbb
jb
stc
push
jbe
xor
pop
pusha
push
cs
xor
sbb
jno
pop
jne
je
sub
mov
push
jae
jg
push
jle
test
in
xchg
push
data16
lds
sbb
jle
inc
inc
and
xor
es
jle
mov
movsb
cwtl
js
mov
jo
inc
push
xor
mov
mov
decb
dec
and
pop
jp
jmp
dec
sub
sets
sbb
mov
pop
cmp
and
iret
sub
push
mulb
iret
pop
lods
and
jp
sti
nop
inc
push
loopne
decl
sub
xor
sti
out
push
repnz
mov
sub
pop
popf
dec
jl
xor
sub
xor
adc
cs
and
cmp
xor
ja
xor
cs
je
sub
cmpsb
adc
clc
stos
cltd
fcoms
cmp
push
hlt
inc
add
pop
in
and
aaa
xchg
cltd
add
adcl
mov
daa
cmp
push
sub
cld
stos
jl
mov
add
xor
sub
inc
cmp
and
cld
mov
lret
add
and
mov
lea
cs
adc
xor
xor
jecxz
cmp
mov
jo
add
mov
pop
push
mov
sub
cmp
popa
clc
mov
xor
mov
lea
scas
stc
pop
inc
outsb
inc
sub
mov
or
and
imul
repz
enter
sub
mov
fisubrl
adcb
xor
mov
jns
mov
stos
pop
jp
sub
ret
mov
lcall
test
das
idiv
dec
daa
inc
fptan
stos
push
daa
repz
sub
mov
sub
lea
or
sbb
jmp
iret
sbb
pushl
mov
jl
and
jmp
jnp
xchg
pusha
popf
push
lods
aaa
aaa
lea
aad
mov
cmp
push
xor
mov
xchg
lock
mov
fnstcw
cwtl
inc
out
mov
mov
sub
enter
adc
inc
xor
inc
push
sbb
push
or
data16
jne
push
xchg
gs
and
mov
repz
mov
cmp
mov
movsb
xor
sub
adc
inc
mov
and
scas
in
push
shrl
ss
movsb
push
sub
mov
je
fs
push
pop
aad
adc
cmpl
xor
xor
or
mov
jp
in
jp
mov
mov
mov
aam
mov
inc
loopne
in
xchg
ljmp
sbb
pop
scas
mov
adc
dec
pusha
xor
mov
sbb
repz
adc
pop
and
push
jb
mov
lahf
sub
ret
jecxz
jb
push
inc
shr
outsl
inc
test
jle
dec
scas
mov
sahf
xchg
xchg
push
loopne
pushl
xor
jno
shlb
adc
nop
iret
pop
pop
icebp
xor
pop
ds
pop
loope
ret
and
sub
mov
jb
xrstor
testb
js
dec
es
pusha
scas
sbb
sbb
mov
add
fnsave
lods
xor
jp
sub
shr
lds
mov
outsb
or
enter
js
sub
mov
jb
sub
hlt
subl
push
xchg
arpl
or
and
xor
hlt
pop
je
scas
add
sbb
jb
adc
jne
imul
hlt
or
jno
inc
imul
push
loop
mov
lret
pop
jb
push
jo
hlt
arpl
pop
mov
sub
pushf
loop
xor
sub
in
clc
scas
xor
push
push
push
les
push
push
xorb
inc
xor
js
idivb
and
fnsave
xor
movsb
shrl
dec
push
mov
cmp
push
repnz
nop
jb
js
xor
inc
hlt
arpl
push
lahf
mov
jo,pn
push
push
pushf
jb
mov
cli
sbb
fcomi
insl
ss
xor
jb
pop
dec
pop
outsb
sti
lret
xchg
xlat
je
jb
jbe
clc
jne
mov
mov
cmp
fbstp
ljmp
dec
outsl
hlt
or
movsb
inc
je,pn
push
in
mov
sbb
add
sub
add
aad
and
inc
jb
rsqrtps
sti
repz
mov
adc
xor
xor
sahf
push
xor
pop
mov
push
push
inc
je,pn
sti
hlt
mov
mov
shl
pushf
jg
inc
mov
inc
loope
push
sub
je
sbb
shll
cmc
lds
outsl
inc
push
or
inc
stc
mov
cmpsb
pop
xor
adc
mov
mov
add
push
xor
cmpb
push
cmp
sahf
pop
movsl
add
mov
push
mov
adc
adc
jmp
and
mov
add
xchg
aad
mov
xor
jb
sub
add
mov
lahf
or
jle
push
cmp
aam
and
xchg
rolb
insb
or
daa
jo
push
cltd
xor
mov
sbb
push
jb
mov
cmc
push
lods
jmp
in
repz
mov
push
dec
jb
mov
xor
sbb
jae
test
scas
push
mov
push
fsts
xor
inc
lahf
stos
loope
jne
fwait
js
fdivrl
jb
cmp
icebp
push
add
stc
das
imul
cwtl
lock
insb
jae
push
xchg
pop
push
imul
push
sub
js
mov
scas
xor
test
out
push
jb
lret
inc
stos
aad
push
repz
push
mov
xor
sarl
push
jp
ret
in
sub
adc
mov
xor
nop
out
xor
stos
nop
mov
jb
lret
mov
jmp
lret
xor
xchg
xchg
ja
cmc
dec
xchg
hlt
or
ja
dec
aad
push
div
mov
push
in
aaa
inc
ljmp
test
cli
leave
mov
mov
pusha
adc
sub
add
cs
enter
mov
dec
aad
scas
sahf
jg
mov
push
scas
pop
mov
test
xor
inc
mov
in
push
or
cwtl
jmp
sbb
into
clc
xchg
pop
repnz
xchg
ret
and
movsb
xlat
sbb
xor
cmp
scas
orb
fsubs
repnz
cwtl
outsl
xor
mov
ss
insb
scas
dec
jb
xor
xchg
mov
cli
mov
mov
jae
cmpsb
dec
mov
cld
xchg
adc
jo
arpl
imul
shll
dec
mov
jb
xor
adc
dec
sub
push
sub
testb
or
push
pop
dec
scas
test
sub
sub
add
jbe
mov
push
jb
xor
repnz
push
cmp
clc
js
mov
mov
cltd
jb
jle
fstpt
add
das
out
dec
stos
or
or
cwtl
mov
negl
cmp
js
gs
fidivl
xor
xor
mov
mov
jae
xor
mov
ja
mov
cmp
inc
pop
jb
lret
push
xor
jb
movsl
push
repz
jb
mov
aaa
in
aas
imulb
stos
in
dec
or
lret
xor
add
lahf
bnd
mov
iret
mov
cli
enter
jno
mov
dec
mov
jns
testl
in
push
push
aad
mov
mov
fldt
mov
jb
lret
xchg
ljmp
or
stos
push
cmpsb
loopne
ds
movb
push
push
in
sbb
and
daa
les
in
mov
rol
push
movsl
repz
mov
in
fdivr
iret
mov
ja
je
je
fbstp
bnd
stc
xor
in
push
xor
mov
cs
pop
jbe
idivl
out
mov
xor
imul
fdivs
xor
jb
xor
shlb
loop
xor
bound
sahf
xor
rcll
xchg
mov
outsb
arpl
mov
xchg
add
inc
push
cmp
jae
aas
jmp
dec
adc
andl
clc
inc
mov
jg
jbe
loop
out
mov
jmp
pop
or
sbb
cmp
cltd
and
jb
movsl
dec
dec
mov
push
mov
push
repnz
fdivs
sahf
and
inc
fbstp
or
shlb
testb
dec
xlat
repz
imul
adc
or
test
jae
out
negb
mov
mov
in
mov
and
arpl
xor
adcl
data16
sub
sub
sub
stos
sub
mov
out
mov
jb
mov
jl
mov
outsb
mov
repz
mov
mov
push
mov
push
fnsave
sbb
mov
jae
adcl
out
adc
ret
ljmp
incl
imul
jae
sbb
xor
mov
out
in
lcall
sbb
stos
mov
dec
mov
pop
mov
fwait
scas
mov
jb
idiv
pusha
sti
xor
stos
mov
aaa
xor
mov
jb
insb
test
cli
xor
inc
push
inc
xor
mov
push
cmp
xor
dec
sub
data16
jno
xor
jb
repz
icebp
cli
mov
test
popa
xor
mov
mov
push
cld
mov
out
xchg
fsubrs
jb
clc
fstl
std
jb
push
imul
push
mov
xor
adcl
pop
loop
sti
jno
scas
jb
imul
test
outsl
xor
mov
pop
mov
sbb
repz
incl
jb
pusha
div
andb
loope
out
adc
outsb
mov
mov
jb
hlt
aam
movsl
in
aad
xor
cli
mov
or
mov
in
dec
xor
sub
nop
sub
out
jb
enter
xchg
cmp
mov
pop
inc
jbe
lods
scas
xor
mov
mov
sub
cmp
lods
mov
cs
xchg
cld
jb
sbb
jb
out
sub
push
push
pop
jb
cltd
xor
jno
pusha
mov
outsl
repz
jo
mov
adc
shrl
icebp
mov
adc
push
hlt
adc
negl
daa
loop
cmc
mov
mov
add
jle
jno
mov
sti
adc
stos
leave
hlt
fbstp
cmp
popa
xor
out
imul
jl
jno
mov
jbe
ja
jb
sbb
xchg
jl
enter
in
xor
std
push
xor
cmpsb
mov
inc
jb
mov
mov
mov
nop
testl
mov
pop
push
icebp
jb
lcall
repz
xchg
xor
xor
dec
nop
mov
mov
ficoms
mov
das
cs
mov
outsl
js
pop
add
nop
outsb
mov
mov
out
enter
jmp
or
pop
adc
aad
mov
pusha
jno
xor
subl
sti
test
sub
insl
mov
pop
and
jge
daa
mov
fidivl
xchg
mov
pop
ret
fdivrs
jb
xor
dec
and
imul
push
jbe
pushf
mov
sub
xlat
dec
xor
mov
js
jbe
xchg
push
dec
mov
jne
xor
mov
das
nop
repnz
push
xor
cwtl
mov
mov
jb
push
cwtl
cli
mov
das
movsl
mov
mov
imul
sahf
lahf
jae
shr
xor
pop
jmp
sub
sbb
xor
sti
xor
and
mov
push
push
xor
mov
mov
mov
test
xor
xor
dec
sbb
stc
stos
into
sbb
sub
jb
mov
sbb
outsl
sub
pop
lret
pop
repz
jb
mov
pop
mov
mov
lcall
mov
inc
add
mov
rcrb
insb
add
js
mov
pushf
pause
push
mov
mov
push
pop
in
aas
out
test
dec
mov
shlb
mov
and
mov
xchg
mov
lea
jo
scas
in
push
inc
mov
jmp
xor
in
pop
xor
cli
out
movsb
jno
cltd
mov
stc
repz
and
scas
ss
inc
js
outsb
mov
jle
scas
mov
test
sub
sahf
jb
scas
cmp
je
jb
sub
jl
xor
sbb
mov
inc
mov
jno
mov
push
sub
push
lcall
jo
dec
jmp
mov
mov
shl
add
push
sahf
mov
xchg
or
adcb
xchg
sahf
jp
loope
and
pusha
dec
jp
outsl
stos
mov
repz
dec
js
pop
repz
gs
movsb
sub
xchg
aad
addr16
lods
xor
jbe
xor
push
test
cs
pop
cs
dec
fistpll
mov
push
jb
pop
test
push
sbb
daa
jge
push
into
and
jb
jb
sub
jmp
xor
and
std
push
dec
dec
imul
mov
cmpsb
xrelease
push
jb
js
jb
and
test
nop
mov
outsb
loop
lcall
xor
nop
je
mov
shll
lods
loope
adc
pop
xchg
jb
out
pop
mov
shlb
out
push
mov
jle
mov
out
jne
mov
mov
mov
icebp
cmp
movsl
addr16
shll
fs
pusha
loopne
add
xchg
aaa
mov
scas
cwtl
xor
push
or
mov
mov
inc
sub
lahf
mov
pause
cwtl
jb
jle
mov
sub
mov
cltd
jb
mov
mov
cmp
mov
pushf
jns
call
push
jb
inc
mov
lods
mov
jb
and
add
jns
jmp
repz
loop
into
xor
and
inc
or
loop
inc
stos
dec
xor
push
icebp
in
adc
fidivl
or
cli
and
add
dec
aas
xchg
mov
js
repz
xor
jle
sub
test
out
btrl
pop
jb
mov
xor
fs
push
outsb
sbb
int3
cmc
add
call
mov
lods
mov
dec
push
mov
dec
push
push
xor
jmp
repz
push
aaa
and
scas
xchg
sub
jle
outsl
int
jmp
std
xchg
xor
repz
mov
icebp
repz
cmpsb
cld
sub
sbb
jb
push
lret
sbb
jmp
outsb
pusha
mov
mov
xor
inc
mov
adcb
psrlw
repz
mov
pop
lcall
add
xor
lock
inc
push
pop
js
jb
push
scas
fidivrl
sub
jb
cmpsb
in
lcall
xor
sub
xor
mov
mov
lret
mov
mov
mov
push
fcmovb
mov
inc
pop
cs
js
inc
jle
mov
xor
fldlg2
repz
or
ja
stos
fsubrp
repz
scas
enter
pusha
add
cmp
push
and
sub
push
adc
repz
pop
jb
xor
mov
repz
xor
and
xor
imul
push
xorb
mov
mov
loop
adc
outsl
inc
imul
inc
shlb
adc
cs
and
je
scas
cmp
repz
sub
insb
jmp
je
xor
aad
popf
jb
popa
xor
dec
jno
test
mov
dec
hlt
jle
dec
jmp
cs
stos
dec
outsl
mov
pop
jl
rorb
push
jb
popf
xor
inc
dec
push
dec
jb
nop
scas
mov
test
xor
sbb
repz
scas
push
sahf
out
xor
push
cs
cs
enter
lcall
sub
mov
and
int3
stos
mov
in
icebp
repz
icebp
repz
xchg
testl
lea
and
repz
mov
jo
mov
mov
mov
add
jns
jno
xor
repz
and
push
push
rclb
lock
adc
xor
movsb
push
jle
sahf
mov
mov
dec
pop
mov
jge
mov
xor
imul
fwait
or
xor
jne
xchg
inc
inc
hlt
mov
nop
mov
ljmp
sub
jb
or
xor
out
rorl
jb
dec
aaa
outsb
pop
jge
xor
xor
pop
and
lods
push
int
fnstsw
jbe
data16
je
xchg
jb
repnz
push
imulb
jb
mov
repz
repnz
add
xor
push
movsb
inc
inc
jbe
mov
andl
repz
push
adc
aas
lcall
repz
movsb
inc
shlb
sub
cs
lcall
mov
movsb
inc
insl
jbe
lea
push
scas
pop
mov
inc
mov
icebp
js
lea
xchg
dec
test
rorb
push
push
and
add
jg
push
dec
ds
in
push
jb
shlb
or
xor
ficomps
cli
push
push
scas
xchg
mov
repz
mov
nop
scas
mov
addr16
push
xor
insb
out
clc
repz
scas
sub
xor
jne
or
jb
dec
jb
push
mov
js
fidivs
push
movsl
imul
mov
xchg
out
inc
and
repz
sub
jo
rclb
inc
icebp
jbe
loope
das
mov
mov
repz
sarb
lock
je,pn
dec
fisubrl
push
scas
mov
out
ud0
lock
jge
inc
into
js
push
push
pushf
test
aas
das
and
push
push
mov
sub
dec
das
inc
mov
test
int3
scas
data16
repz
loope
imul
stos
cltd
outsl
and
popf
repz
mov
mov
sbb
jbe
add
jb
sahf
mov
xor
cmp
dec
and
insl
pushf
jb
push
jge
ja
push
mov
out
cmpsb
xor
sbb
mov
xor
outsb
lock
cs
lret
pusha
sbb
rcll
adc
jb
or
xor
xor
sbb
push
pop
imul
mov
mov
mov
mov
xor
jge
scas
xor
mov
xorl
jge
jae
js
push
scas
and
mov
icebp
mov
and
lret
mov
xchg
repz
in
outsb
pop
dec
cmp
cwtl
push
dec
jb
nop
iret
mov
jmp
or
je
nop
jb
lea
push
mov
push
xchg
sub
and
mov
jb
pop
add
xor
stos
mov
sub
mov
mov
adc
or
idiv
mov
dec
sahf
repz
subb
add
xor
jl
mov
out
inc
repz
mov
jbe
insl
mov
jge
push
push
mov
hlt
nop
xor
stc
js
xor
push
xor
mov
sbb
sti
subb
fwait
mov
jb
stos
dec
jbe
cltd
aas
ret
mov
jb
dec
and
lock
mov
add
dec
mov
jb
dec
jmp
push
incl
adc
push
lea
xor
lret
loopne
jbe
clc
lock
and
imul
jo
sub
push
dec
push
mov
adc
add
loope
push
adc
sbb
outsl
js
jg
lahf
xor
lock
push
add
adc
sahf
lcall
xchg
cltd
jb
lret
insb
push
iret
js
hlt
nop
xor
jmp
movsb
lahf
jb
or
jl
enter
or
jg
push
cmp
pop
repz
jmp
repz
cs
ficompl
insb
jmp
push
shrb
je
mov
mov
sahf
jo
inc
add
repz
in
repnz
mov
movsb
push
xor
inc
js
pusha
call
js
mov
xor
das
sbb
push
aas
mov
pop
cmpxchg
lock
mov
shlb
jb
movd
push
scas
in
iret
sbb
inc
js
sbb
cltd
pusha
push
movsl
mov
data16
scas
push
xor
jb
lret
xor
js
fstps
mov
jmp
lcall
xor
dec
shll
cmpsl
repz
push
cltd
mov
in
push
fisubl
or
jnp
push
push
jb
jle
sahf
fnsave
aaa
xorb
cli
xor
push
cmp
outsb
addb
out
and
inc
repz
mov
scas
mov
rcll
loope
adc
scas
outsl
sbb
lahf
shrb
mov
movsb
inc
add
push
mov
sarb
sahf
and
iret
xlat
inc
out
js
pushl
xor
out
hlt
sbb
dec
test
pop
hlt
arpl
xor
fdivr
mov
sub
jecxz
push
cmpsb
mov
jb
mov
loope
mov
jnp
xor
mov
icebp
repz
js
nop
mov
scas
jmp
pop
xor
mov
push
out
repnz
addl
pop
scas
push
cmc
sub
inc
jo,pn
repz
mov
xor
das
mov
pop
lods
aas
sbb
mov
sub
xor
pop
jb
mov
mov
repz
psllq
xor
pop
jns
or
add
xor
and
lcall
mov
jo
or
repz
cmp
mov
mov
scas
xor
repz
outsl
mov
pause
mov
sub
pop
mov
mov
repz
jmp
or
push
cmp
xchg
xor
fstp
bound
cmc
out
nop
add
fisubl
xor
push
xor
jo
mov
adcb
roll
adc
mov
adc
pop
lret
dec
mov
jg
mov
repz
loopne
jno
cs
dec
jb
jno
push
xchg
scas
mov
out
mov
imul
xor
push
dec
xor
sti
ds
imul
jb
xchg
sub
ret
jp
jbe
stos
add
mov
jb
inc
mov
sti
nop
push
sbb
repz
icebp
inc
stos
scas
mov
stos
lret
ljmp
sub
dec
push
push
test
mov
nop
mov
mov
push
repnz
out
nop
add
dec
xor
sub
push
cs
fisubl
pusha
push
dec
mov
ss
mov
mov
xor
repz
add
sub
imul
jno
pop
inc
imul
lods
lahf
sub
jbe
lock
addb
push
push
sahf
js,pt
jle
sahf
sub
mov
mov
push
sbb
adc
or
xor
jmp
cs
pop
pop
shlb
mov
repz
stos
inc
je
mov
scas
pop
adc
repz
adc
and
nop
or
pop
cs
dec
lret
push
outsb
mov
fs
cli
xor
push
insl
xchg
mov
clc
loop
mov
and
jo
icebp
jno
jo
lods
pusha
sbb
repz
icebp
ss
jno
js
repz
jbe
dec
sub
imul
inc
sarb
shlb
loopne
cs
dec
movsb
push
outsb
cmpb
sahf
xor
jae
xor
hlt
add
or
pop
mov
lret
jae
test
mov
repz
mov
jp
stos
push
repz
mov
fisttpl
jo,pn
lcall
insb
jb
icebp
mov
repz
pop
dec
outsl
jb
add
mov
sarb
lock
jb
xor
xor
sarb
repnz
jb
enter
inc
mov
inc
jo
pause
sub
subb
mov
scas
and
rcrb
cs
lret
outsl
mov
je
rcr
lock
repz
dec
lods
outsb
sbb
xchg
xor
hlt
gs
push
pushf
gs
ja
pushf
mov
rorl
dec
mov
jo
scas
stos
stos
lcall
or
sti
lret
sbb
repz
push
pop
pop
stos
pop
repz
lock
xor
dec
sbb
jg
js
and
lock
mov
add
repz
in
xorl
out
mov
loop
insb
xchg
push
push
test
or
in
pusha
mov
repz
xor
mov
mov
adc
shrb
cs
and
mov
mov
jno
movsb
inc
lahf
jbe
shlb
add
ds
jle
mov
inc
push
push
shll
test
hlt
or
xor
push
jle
mov
xchg
sbb
mov
popa
js
xorl
outsb
jmp
or
sbb
repz
andb
mov
lret
push
repz
mov
or
cli
pop
cs
mov
inc
cwtl
loopne
xor
addr16
push
xchg
out
ret
sub
clc
out
pusha
add
and
push
push
jo
push
nop
push
repz
rorl
adc
jno
pop
clc
loop
xor
mov
adc
dec
xrelease
or
dec
xor
pop
fisubrl
push
dec
xor
xor
jp
mov
mov
xor
and
mov
or
out
jmp
insl
es
insl
mov
jb
popa
mov
push
stos
push
lcall
or
sti
xor
cmp
mov
icebp
cltd
stos
mov
aas
sbb
add
rep
dec
adc
sar
xor
cmp
lcall
insl
repnz
lods
loop
mov
cld
mov
inc
push
psllq
andb
imul
shlb
in
loope
jno
das
sbb
push
jb
inc
repz
js
jg
lahf
push
shr
lock
inc
js,pn
mov
mov
xor
dec
mov
mov
push
pop
xor
jb
shll
add
and
pop
or
jmp
mov
popa
cmpsb
mov
js
mov
xor
and
shll
cmp
imul
add
mov
sbb
xor
pop
xor
and
popa
push
out
dec
jb
out
pop
xor
shlb
loop
xor
and
addr16
inc
js
jo
imul
mov
rcl
cs
and
adc
dec
mov
aas
sahf
mov
fdiv
loop
xor
ror
lock
push
sub
ja
jmp
xor
cmp
movsb
fwait
jb
lret
xor
je
jae
mov
sti
push
hlt
out
mov
xor
pushf
mov
push
mov
push
shlb
scas
jmp
repz
outsl
mov
or
pop
subb
cs
stos
mov
push
or
repz
xchg
xor
cli
push
out
andl
mov
repnz
repz
add
push
adc
push
andb
sbb
js
repz
xor
adc
pop
lcall
sbb
xor
mov
sbb
or
loopne
mov
push
and
mov
in
movsb
int
mov
xor
mov
nop
addl
mov
mov
cmp
inc
pop
jl
jbe
add
lcall
inc
mov
cmp
pop
repz
inc
mov
adc
mov
jb
btr
incl
clc
sub
repnz
add
ss
push
scas
lret
rep
jo
cli
and
nop
std
push
clc
mov
mov
addr16
loope
jb
push
repz
cmpb
jp
outsl
dec
jno
xchg
psllq
sub
dec
mov
xor
jno
mov
jp
mov
hlt
mov
lret
xor
cmc
jg
jb
xor
mov
repnz
mov
xchg
mov
mov
stos
movsb
loop
and
lock
jmp
lds
testb
aaa
mov
xor
mov
and
and
jb
mov
jb
jae
fistl
sub
adc
jno
das
sub
sbb
push
sbbb
jg
fistps
push
shlb
push
cmc
stc
push
cwtl
jb
int3
or
mov
jne,pn
push
xor
xorb
add
in
jmp
daa
mov
imul
das
push
orb
repz
inc
push
pop
ja
mov
bound
dec
int3
xor
and
push
test
jl
scas
and
daa
push
xor
push
mov
aaa
into
stos
jb
mov
push
jb
push
mov
cmpb
mov
mov
stc
add
nop
xor
push
jb
loop
rcl
push
pushl
incb
idiv
push
mov
pop
cmp
pop
lea
lods
das
stos
pause
pop
aaa
mov
aas
xor
outsl
daa
jno
pop
pop
sub
mov
test
dec
fbstp
cmpl
enter
sbb
jne
jbe
icebp
sub
jb
add
stc
bnd
out
add
sub
xor
repnz
adc
push
sub
inc
mov
mov
sub
sub
dec
xchg
in
jbe
pop
arpl
mov
mov
std
xor
mov
pop
mov
mov
push
fnsave
jl
jno
add
out
neg
lods
and
push
mov
sti
shll
push
in
jb
js
imul
push
sub
xor
fmull
mov
jb
aad
movsl
push
arpl
adc
aam
mov
daa
in
xor
aad
pop
mov
xor
mov
xor
cli
dec
xchg
push
push
int3
xor
add
scas
xor
inc
movsb
push
pusha
push
xor
nop
clc
div
adcb
pusha
mov
stc
push
mov
movsl
xchg
xor
add
in
push
or
dec
jb
rclb
lock
fisubl
iret
nop
clc
jae
subb
lret
jmp
dec
dec
xor
aaa
cmp
push
mov
mov
and
pusha
mov
nop
nop
mov
cmpb
fnsave
jl
jno
std
jmp
gs
xchg
or
loop
sub
outsl
xor
pop
pop
jb
sub
inc
ficompl
dec
sahf
mov
push
xor
mov
xor
nop
pop
xor
inc
mov
or
xor
push
repnz
pop
sub
lret
pop
aas
push
mov
lock
repz
sbbl
lret
mov
xor
lea
out
add
cmpsl
xchg
sbb
fsubs
clc
xor
push
push
sbb
or
sub
and
push
mov
inc
sub
xchg
and
add
xchg
repz
std
and
and
push
dec
and
xchg
mov
imul
lods
mov
mov
outsb
or
lcall
hlt
lret
repnz
adc
pop
das
lcall
and
inc
jo,pn
mov
lods
enter
xor
xor
push
pop
xorl
hlt
sbb
lea
or
jmp
mov
outsb
mov
sub
lcall
mov
xor
cwtl
and
mov
in
pop
mov
xor
mov
scas
jb
mov
sti
aaa
push
out
dec
push
idiv
les
or
sbb
gs
repnz
icebp
aaa
mov
loope
dec
mov
xor
and
cltd
xorb
cmp
test
mov
fdivr
xor
adc
iret
pusha
jmp
test
idivb
cmc
and
and
fisubs
jne
pushl
movsb
divb
or
xor
out
mov
mov
imul
jo
and
aad
fwait
xor
fidivrl
push
xor
aad
cld
xor
sub
icebp
xchg
hlt
pop
add
adc
sub
jno
mov
test
std
xor
push
push
hlt
push
or
hlt
dec
data16
subb
xchg
data16
xor
or
add
or
inc
push
in
movsb
push
xor
pop
pop
jnp
mov
mov
imul
jb
pop
xor
jno
jmp
cli
mov
push
xor
hlt
shll
lds
aaa
pop
fisubrs
lock
cwtl
xor
jle
jge
xor
fdivl
xor
push
mov
dec
shll
or
into
loope
push
jb
adcl
xor
add
hlt
sub
call
fwait
hlt
push
xor
xor
aad
call
imul
decb
shlb
shl
mov
sub
inc
xor
mov
lret
xor
push
dec
xor
test
loop
adcb
or
aam
xor
lea
xor
shr
jne
mov
aam
mov
or
or
pop
xor
xchg
ss
pop
and
clc
mov
test
xor
sti
jb
mov
xchg
mov
shll
mov
mov
xchg
test
pop
jae
popa
xor
pop
lods
xchg
fildll
xchg
mov
decl
clc
xor
xor
pop
cmp
push
cmp
push
xor
arpl
ja
jb
push
xor
add
cli
xor
xor
cltd
jb
push
mov
mov
movsl
jp
mov
movsb
loopne
xor
insb
jb
xor
mov
sbb
mov
push
gs
inc
hlt
mov
mov
aas
mov
mov
mov
mov
lahf
dec
pusha
push
mov
mov
out
call
xor
jbe
adc
js
xchg
xorl
mov
add
hlt
je
xor
xor
iret
cltd
mov
xor
mov
push
mov
cmp
out
int3
inc
jb
and
push
xlat
jae
shll
into
push
xor
pop
hlt
pusha
push
pop
mov
stc
jae
or
xor
or
xorl
mov
xor
push
mov
jb
arpl
movsb
adc
movsb
mov
sbb
movsl
mov
pop
push
xor
add
into
test
or
xor
xor
xor
and
push
xor
addr16
movsb
mov
iret
adc
pop
push
jbe
pushf
in
fisubrs
jae
and
cmc
int
mov
inc
xor
repz
iret
sub
mov
mov
shll
cltd
mov
xor
xor
pushf
loop
imul
xor
push
adc
mov
mov
jno
data16
inc
or
cmc
shrl
cmove
sub
sbb
jo
arpl
orl
xor
rcll
test
xor
push
xor
dec
stos
jno
fistps
movsl
lcall
mov
movsb
out
into
pop
xor
stc
aam
mov
leave
shll
in
mov
mov
or
mov
hlt
xor
flds
xor
mov
adc
jo
out
imul
xor
jae
xor
xor
test
mov
push
hlt
sbb
fidivrs
and
adc
enter
adc
push
cmp
shlb
mov
inc
xor
mov
push
cli
xor
test
adc
in
mov
mov
mov
aam
mov
cmpsl
xor
out
mov
leave
adc
adc
xor
repnz
das
dec
push
lcall
idivb
addr16
insl
xor
add
xor
hlt
fisubl
add
repnz
mov
xor
jb
test
xor
mov
mov
aam
cmc
sahf
gs
xor
movsb
data16
mov
jb
cmovl
or
sbb
imul
add
js
mov
mov
movsb
inc
cmpsl
xor
xor
mov
stc
mov
push
clc
mov
mov
jnp
xor
mov
push
out
xor
imul
sbb
repnz
push
test
fcoml
inc
xor
push
adc
scas
inc
mov
cmpl
std
xor
dec
aad
mov
les
unpcklps
xor
mov
mov
jmp
les
inc
xor
pop
push
mov
cmp
cli
xor
add
je
inc
mov
fnstenv
insb
loopne
addr16
xor
dec
lds
mov
je
adcl
cmp
testb
shlb
andps
jmp
les
mov
cmp
adc
je
push
mov
je
cli
les
add
add
pushf
in
xor
push
mov
xor
and
and
in
and
and
fdivr
xor
and
xchg
dec
and
ss
pushf
jns
hlt
fistpll
push
push
mov
mov
test
or
mov
jo
arpl
cltd
xor
xlat
test
sbb
pop
addb
dec
jmp
mov
jnp
je
les
xor
jle
cltd
push
in
call
cwtl
xor
je
hlt
ss
cmp
pop
xor
mov
xor
fs
sbb
pop
frndint
jg
dec
fbstp
dec
and
cmc
pop
sahf
repnz
lahf
xlat
mov
aam
cmp
je
dec
mov
lock
push
cmp
imul
jmp
fmul
mov
dec
xchg
mov
mov
cs
xor
dec
lret
negb
pop
pop
sbb
lds
inc
adc
mov
xlat
jl
fisubrs
aaa
subb
mul
aam
mov
ja
push
outsb
mov
out
xorl
mov
test
icebp
adc
mov
push
push
pop
xor
imul
aaa
mov
push
sub
shlb
adc
mov
loope
pop
jne
clc
das
dec
int3
xor
xor
lcall
ja
jb
xor
xchg
push
test
xor
xor
test
jmp
scas
xlat
mov
mov
mov
push
nop
jbe
mov
xor
sbb
mov
push
xchg
push
xorl
cmp
cmp
push
icebp
and
inc
mov
push
pop
jne
push
add
aam
lods
jno
xor
push
sub
xor
dec
cmpsl
lods
lcall
outsl
adc
cli
jmp
cltd
lods
xor
adcl
add
in
ss
sbb
sub
xchg
sub
xchg
hlt
xor
add
mov
movsl
xor
xor
mov
xor
sbb
lea
std
ljmp
xor
sbb
sub
inc
lods
inc
call
sbb
add
in
add
lods
dec
mov
dec
adc
jp
pop
ss
addb
mov
add
cmp
add
jp
sub
adc
sbb
jg
push
popa
sub
xor
cmp
xor
js
xor
movsb
iret
sub
add
mov
add
fmuls
aad
shll
js
xor
sub
cs
sub
lret
xor
sub
cmp
call
dec
outsl
ljmp
lea
aam
sub
adc
add
orb
sub
or
mov
or
sbb
enter
jne
gs
enter
jb
add
jae
xchg
jp,pt
pop
ja
fwait
inc
sub
xor
arpl
jae
fs
sub
sarb
push
dec
clc
fnstsw
aam
mov
adc
xor
and
jbe
out
push
sarl
push
outsb
mov
in
cmpl
mov
xor
movsb
stos
mov
mov
push
psrld
outsl
cmpsl
xchg
stos
push
in
mov
mov
sub
incl
xchg
mov
lods
xchg
bnd
clc
mov
mov
push
adc
clc
jns
insb
lcall
in
or
mov
ss
jo
xor
sub
shlb
hlt
sbb
mov
les
cli
shlb
push
xor
in
adc
inc
inc
fildl
lds
ss
enter
xor
clc
cmpsb
push
test
pop
push
push
mov
movsb
sahf
sbb
jb
sub
push
neg
sub
xor
push
xor
and
loope
addr16
jae
ss
pop
les
xlat
pop
nop
clc
leave
dec
jle
inc
ja
addr16
mov
imul
xor
out
mov
add
movsb
out
mov
push
or
push
daa
mov
mov
mov
sbb
in
shll
out
mov
push
and
jbe
cmc
mov
mov
mov
loop
cmp
push
mov
mov
sub
cmc
push
push
ss
in
mov
fdivl
loope
mov
cli
mov
push
add
adcb
xor
out
in
push
arpl
xor
popa
mov
jl
test
popf
lock
and
mov
and
sub
cmpsb
cmp
adc
adc
sbb
jp
es
lds
fidivl
jne
jns
test
test
adc
repnz
adc
push
sub
imul
nop
ss
xchg
clc
xchg
ljmp
pop
pusha
sub
push
mulb
xchg
sahf
pusha
imul
sbb
ljmp
shll
pop
adc
movsb
sbb
in
push
out
je
pop
sti
repz
mov
js
mov
leave
jbe
dec
stos
and
out
xor
flds
ja
dec
in
cmpsb
das
cmpl
or
xor
xchg
fdivs
clc
fcoml
or
std
xchg
mov
push
test
adc
in
inc
add
or
andb
es
jbe
stos
mov
sub
fcmovnbe
push
imul
mov
test
pusha
idivb
jno
js
das
mov
xor
movsl
add
mov
je
lock
add
sbb
xor
push
sub
cmpsb
hlt
insl
jno
ss
es
jge
jmp
cmc
sub
sub
mov
lock
push
add
insb
loop
enter
sbb
jnp
xchg
or
mov
jmp
xchg
pop
mov
in
cltd
lret
adc
js
mov
in
cwtl
imul
test
outsl
mov
xchg
xor
out
test
mov
add
jbe
inc
mov
ss
in
mov
in
jg
pop
mov
in
mov
cmp
jmp
test
sub
inc
out
and
lods
stos
xor
std
repz
pop
mov
cs
xlat
cmp
cs
pop
bound
stos
push
push
push
sub
xchg
in
sub
mov
mov
mov
xor
sbb
iret
inc
shlb
xchg
test
cmpsl
push
inc
add
ss
in
mov
dec
jge
xor
push
sbb
pop
mov
and
cli
adc
cwtl
scas
xor
cmp
stos
mov
mov
mov
sbb
mov
dec
cmp
sub
mov
jmp
xor
adc
jo
lock
xor
pop
jne
loop
xor
push
gs
scas
nop
insb
jno
clc
in
mov
push
mov
mov
das
lds
add
pop
ss
cld
mov
xchg
imul
hlt
xor
lret
or
adc
pop
sub
out
sub
sbb
stos
fidivs
cmp
call
inc
mov
xchg
mov
dec
and
insb
mov
out
out
add
jmp
inc
add
in
cld
mov
dec
idiv
mov
imul
outsb
jo
stos
loop
mov
xor
push
aad
adc
mov
leave
sahf
outsb
cmp
jno
cs
je
test
add
adc
mov
mov
lahf
sub
adc
push
test
mov
mov
insl
push
jbe
into
sti
mov
sub
gs
xchg
push
jae
push
arpl
mov
mov
pusha
xlat
cs
imul
imull
cmp
cs
jp
jle
and
filds
ljmp
push
mov
hlt
cmpsb
lea
push
push
sub
pop
mov
mov
dec
ss
sub
test
xor
mov
loope
push
cld
sub
xor
xor
test
mov
mov
inc
jge
mov
and
mov
repz
jbe
mov
data16
xchg
ss
dec
jo
mov
cmpsb
lret
adc
imul
subl
call
test
jmp
mov
pusha
and
and
or
xor
repz
orb
adc
dec
rorl
jns
push
mov
jno
dec
loopne
mov
xor
movups
push
test
jmp
scas
jnp
mov
notl
add
sbbb
jp
mov
sub
mov
sub
push
add
and
scas
cmp
push
cwtl
mov
sub
fsubrs
add
add
repz
jbe
subb
jb
adc
loop
pop
shlb
in
pop
push
xor
ror
cld
jl
xor
mov
es
dec
sub
or
lods
cmpb
es
or
dec
inc
aaa
das
adc
clc
lcall
data16
push
ss
sub
xor
aad
mov
js
shlw
mov
stos
repnz
sub
jo
mov
pop
insl
rcr
mov
jg
js
sbb
mov
inc
cld
es
xchg
fisubrs
jo
mov
cmpsl
lods
dec
jmp
mov
outsl
clc
sub
scas
call
push
mov
repz
arpl
icebp
ret
nop
jbe
cmp
xlat
test
mov
push
jae
cmpsl
cs
in
adc
mov
das
cmp
idivl
and
pushl
mov
daa
insl
in
sarb
bound
push
sbb
xchg
lods
mov
das
xchg
pop
mov
sub
cmp
in
fcomp
inc
js
sti
lods
mov
popa
adc
aad
callw
jae
fldt
pop
jbe
into
movsl
scas
leave
push
pop
sti
xorb
jae,pn
mov
xchg
mov
movsl
xchg
mov
inc
out
xor
lock
mov
jae
push
xchg
je
movl
pop
xlat
push
out
xchg
cs
inc
ss
ja
stos
scas
out
addr16
pusha
and
lcall
dec
sub
sahf
pusha
sub
cmp
jae
cs
push
mov
lods
xor
lods
in
repz
push
xchg
jns
scas
inc
adc
stc
popf
mov
pop
loope
mov
ss
sub
fldenv
adc
mov
stos
xchg
test
cmc
gs
xor
iret
ss
push
jns
negb
push
sbb
aaa
jb,pn
inc
cmp
push
push
ss
add
push
xor
test
stos
push
jae
aaa
not
mov
inc
in
mov
and
lahf
hlt
in
mov
inc
repz
out
xor
sti
pop
sub
clc
lds
stos
and
pop
cs
sub
cli
rclb
adc
in
push
aad
jmp
je
push
sub
or
add
mov
ss
push
cmpsl
icebp
ss
push
notl
mov
mov
sub
cmc
test
jbe
popa
jb
jg
mov
jle
test
dec
loop
xor
and
ljmp
xor
std
outsb
xor
stos
mov
xor
jns
imul
mov
mov
icebp
mov
jb
out
pop
mov
ja
stos
adc
xor
repz
mov
adc
addr16
adc
psadbw
jmp
imul
pop
bound
xlat
insl
in
cmp
mov
mov
xorl
and
cli
push
sub
push
pop
ss
cltd
pop
mov
cmp
mov
scas
leave
sub
or
insb
cmc
or
je
and
push
rolb
test
scas
pop
lret
js
mov
pusha
xchg
xor
repz
repz
jae
lock
movsl
loope
xchg
pop
hlt
sub
ss
lcall
sub
ss
xor
inc
and
xor
repnz
mov
sub
add
movsb
jl
mov
ss
outsb
insl
adc
das
cs
sahf
push
sub
cmpsb
xor
lock
jg
jbe
lcall
int3
add
xor
shlb
mov
adc
ret
daa
jmp
xor
mov
push
fabs
mov
add
shll
pop
xor
mov
test
stos
inc
rcll
imul
in
push
jae
test
lds
jne
sub
aam
hlt
dec
mov
add
mov
xor
in
fsts
test
jl
cmpsb
jo
xchg
hlt
inc
sbb
iret
ss
cs
data16
xor
pop
cmp
adc
adc
scas
xchg
push
fstpt
xor
push
cmp
xor
insb
repz
stc
push
movsb
sbb
jno
hlt
fxch
push
cmp
mov
lock
cs
out
fnstenv
and
lcall
cs
ss
mov
in
jb
test
sub
xlat
mov
icebp
jne
ss
and
mov
mov
imul
cs
sahf
daa
subl
and
push
xor
push
mov
pusha
rcrb
lock
pop
cmc
mov
mov
xor
out
xor
mov
dec
sub
mov
mov
mov
adc
loopne
fidivl
cli
shrb
test
ja
test
pop
inc
push
cwtl
xor
inc
adc
cs
jge
sub
out
mov
dec
xor
andb
adc
adc
xor
xor
mov
cmp
test
sub
xor
pop
andb
adc
jae
cmp
mov
test
mov
dec
loope
mov
jbe
scas
pusha
push
sub
dec
test
ss
mov
add
arpl
cs
mov
push
mov
lcall
and
push
enter
xor
lods
insb
das
arpl
jae
test
mov
sbb
rolb
test
repnz
inc
inc
das
and
aas
loope,pn
mov
push
add
je
sub
shlb
mov
dec
sub
push
les
ret
push
mov
sub
outsl
repz
scas
enter
push
in
push
outsb
adc
outsb
push
sub
in
dec
stos
add
in
mov
or
test
hlt
cld
jecxz
les
xchg
adc
adcb
jns
and
hlt
stos
fnstenv
push
cmp
sub
cmc
scas
or
leave
xor
hlt
lods
inc
push
ss
hlt
sub
pop
add
stc
std
cmp
dec
mov
ret
xor
in
cmc
jo
cmp
mov
jo
mov
push
ret
out
in
repnz
ss
pop
popa
xor
icebp
in
xor
js
dec
sub
push
fldenv
xchg
lret
bound
mov
mov
mov
adc
sub
mov
sub
push
mov
aam
sub
adc
insb
nop
and
and
push
test
jo
push
stos
adc
addr16
ss
pushf
xor
sub
fcoms
insl
mull
jne
sub
and
sub
sub
add
subb
and
mov
test
fdivrl
xor
xor
xorb
pop
and
out
repz
sbb
cld
stos
adc
xor
mov
jno
mov
lods
sti
dec
sub
mov
das
insb
cmp
scas
add
pushf
xor
pop
test
clc
stos
inc
in
sub
mulb
ss
rcr
insb
insb
dec
mulb
test
push
int3
fidivl
cmp
hlt
pusha
test
xchg
lcall
mov
cmpsl
insb
gs
rcll
iret
into
shlb
pop
rclb
mov
sub
adc
add
cmpsb
add
push
mov
add
xor
in
in
fstps
leave
sahf
aaa
andl
add
enter
icebp
ljmp
fwait
call
xchg
stos
imul
outsb
inc
in
enter
cld
xlat
scas
decl
iret
ljmp
jb
test
xor
je
outsl
cmc
push
enter
mov
fcmove
outsb
add
sub
lock
mov
pusha
push
xchg
fwait
hlt
pop
lea
out
insb
roll
pop
ljmp
rclb
aaa
jns
jmp
shll
ss
mov
mov
sub
in
xor
jne
mov
or
adc
mov
mov
test
loop
mov
mov
cmp
xchg
incl
mov
test
lret
push
stos
jbe
pushf
repnz
lret
push
test
scas
je
push
cli
push
popa
lods
push
xor
call
pop
add
lcall
jbe
movsl
push
shll
divb
in
sbb
lds
cmpsb
out
ja
fs
sub
adc
loope
pop
sub
fs
es
xchg
or
in
fld1
jne
cvtps2pd
adc
dec
adcl
mov
mov
in
sub
shlb
dec
mov
mov
add
repz
es
clc
push
inc
sub
xlat
stos
push
mov
cld
je
add
cmp
pop
sub
std
sub
sub
dec
dec
sub
lret
jb
pop
sti
into
test
outsb
add
jne
mov
gs
push
mov
mov
imul
outsl
push
dec
mov
imul
or
mov
push
je
sub
push
sub
fcos
cmp
jmp
mov
xor
mov
or
cmpsl
adc
inc
xor
out
jno
loope
imul
jmp
and
mov
cmp
push
adc
ljmp
insl
sbb
cmp
or
rcr
push
outsb
xor
mov
and
add
and
jb
cmc
sub
xchg
adc
cmpsb
test
xchg
mov
jns
cmpsb
and
popf
loop
scas
mov
mov
mov
mov
mov
add
mov
xor
add
leave
pop
sub
adc
scas
int
xor
sub
es
es
push
or
push
inc
in
cmp
movsl
inc
outsl
sub
out
je
xchg
add
cs
push
out
ds
inc
xchg
mov
sarl
mov
inc
ret
or
mov
xor
mov
in
outsl
enter
or
clc
jmp
push
dec
iret
push
sub
jmp
xor
dec
ss
sbb
test
push
sub
push
jmp
inc
xor
dec
adc
outsl
gs
mov
push
jae
ja
cs
xchg
lods
pop
xor
xchg
dec
jne
fisubrl
mov
sub
lods
jne
in
mov
xchg
aaa
sub
sub
cs
cmc
inc
push
stos
iret
sub
dec
dec
test
loop
arpl
mov
divb
shlb
push
pop
sub
xchg
sbbb
stos
fisubrs
dec
cmpsb
stos
fsts
add
push
jb
test
sub
mov
ljmp
mov
or
jp
and
dec
mov
push
cmp
mov
sbb
fs
dec
incb
sbb
mov
mov
add
mov
mov
outsl
add
jb
aas
xor
push
sub
xor
ds
imul
pop
out
insl
dec
test
fdivl
popa
ret
sub
cld
and
jae
mov
mov
loop
xchg
jmp
jmp
inc
stc
rcr
mov
scas
add
mov
gs
sub
cmp
mov
insb
dec
hlt
hlt
pop
ficoml
inc
mov
inc
inc
mov
sub
cmp
addr16
xor
and
shlb
lcall
push
sub
cmc
sub
pop
out
adc
sub
push
mov
aam
or
push
gs
xor
xor
sub
rcrb
adc
mov
xor
xor
mov
imul
push
mov
pop
sub
sub
xor
jb
hlt
data16
dec
xor
xor
mov
lods
add
mov
sub
lcall
or
cmp
int
repnz
adc
add
shrl
inc
push
xor
and
xor
jno
daa
sub
push
clc
xor
inc
mov
push
test
mov
jae
subb
fcomps
sub
or
jp
sub
pop
sbb
and
insb
imul
xor
jno
push
jns
sub
inc
push
in
leave
sahf
das
mov
push
push
mov
cmp
cltd
loope
rolb
xchg
inc
jo
jo
ret
das
mov
push
jo
jb
jno
pushf
stos
adc
sub
les
push
insb
out
outsb
test
push
mov
xor
daa
jne
sbb
data16
stos
sahf
jmp
cmp
and
imul
bnd
fisubs
mov
negb
outsl
jb
cmc
mov
wbinvd
push
mov
outsb
sub
push
sub
and
fnsave
push
repz
repz
data16
jb
lock
jo
mov
pop
divb
enter
stos
jge
inc
aaa
in
std
push
js
inc
test
insb
lea
jbe
in
aad
xchg
lea
and
movsb
dec
stos
out
sahf
jmp
icebp
sub
jge
pop
cs
fldl2t
shlb
fsubs
sbb
popf
and
outsb
xor
call
xchg
push
ljmp
xchg
jmp
push
xor
xchg
xor
xchg
test
je
aaa
xor
in
xor
mov
scas
stc
pop
add
pop
push
cli
xchg
insb
mov
cmp
push
fwait
insl
movsl
mov
push
outsb
fsubrl
lock
push
cmp
stos
push
push
push
enter
xor
in
enter
xor
cmpb
push
pop
outsb
jno
inc
sub
push
mov
subl
add
mov
iret
jmp
outsb
inc
sub
outsl
out
xorl
sub
add
mov
pusha
insb
setnp
sub
adc
movsb
pop
dec
in
pop
mov
test
cmp
aad
sbb
pop
test
out
inc
mov
cmp
push
popa
mov
and
andb
ret
cmpsl
inc
inc
clc
xchg
mov
dec
shrb
mov
sub
addr16
in
loop
cs
mov
je
mov
sub
sahf
xor
jne
push
mov
fs
daa
mov
lcall
push
fisubrs
or
outsl
cwtl
inc
out
outsl
imul
xor
jno
xchg
cs
mov
push
cs
enter
add
out
outsl
sbb
sub
call
cmp
jmp
mov
pop
adc
jo
sub
jb
sbb
out
arpl
adc
aaa
inc
mov
jbe
out
aaa
mov
dec
je
sahf
sub
in
and
xor
mov
mov
pop
push
push
cmc
sahf
jae
xor
aad
notb
push
mov
dec
sub
xor
xorb
mov
dec
dec
sub
dec
mov
movsb
xchg
push
mov
mov
mov
pusha
cmp
stos
clc
xchg
sub
pop
lahf
repz
push
shlb
adc
nop
sbb
xchg
shll
push
adc
cmp
dec
pop
aas
in
pop
iret
and
test
push
xor
add
fadds
and
jne
adc
cmpsb
pop
sbb
xchg
push
mov
leave
jg
xchg
adc
movsl
test
xchg
mov
sub
jb
lret
push
add
ret
sub
dec
mov
je
xor
jmp
jle
dec
aas
pop
jg
arpl
dec
pop
or
fwait
in
repz
or
bound
xchg
push
or
call
pop
lods
jno
pop
pop
dec
das
and
mov
push
je
and
inc
jge
stos
inc
cmc
xor
ret
sub
xor
xor
std
fnstsw
dec
sub
addb
loop
rcrl
mov
cmp
push
add
xchg
mov
fistl
jmp
mov
sub
repz
cmp
inc
jle
mov
cmc
and
mov
dec
adc
pop
jo
mov
mov
and
ja
or
addr16
sahf
cmp
inc
add
inc
xchg
cmp
testl
enter
mov
mov
mov
mov
jno
jb
push
out
arpl
scas
pop
jl
mov
sub
outsl
das
aam
aam
xor
dec
fsubrs
bound
test
cmc
mov
sahf
stc
mov
push
clc
sbb
push
loope
loop
imul
mov
scas
push
nop
test
pop
sub
jb
jnp
out
not
ss
not
cwtl
repnz
xor
pushf
xchg
push
loop
push
or
xchg
mov
leave
pusha
sub
cmpsl
int3
adc
inc
sub
scas
xchg
mov
xor
xor
pop
sahf
sbb
push
pop
add
daa
sbb
push
mov
adc
sub
push
xor
mov
inc
xor
cmp
add
pop
mov
xor
xor
cs
mov
adc
xor
ljmp
cs
dec
cmp
sub
cmpb
imulb
lahf
push
xlat
fiaddl
cmpsl
push
mov
mov
imul
jb
mov
xor
and
dec
loop
add
negb
cmpsl
push
mov
mov
imul
jb
mov
xor
and
inc
xorb
xor
push
subb
test
sbb
or
pusha
and
mov
xor
xor
cs
mov
cs
xchg
mov
mov
and
xor
xor
cs
divb
pop
scas
test
xchg
xor
xor
cs
xchg
sbb
push
or
mov
xor
xor
iret
push
adc
mov
xor
xor
adc
xor
jo
sub
inc
xchg
paddq
jno
les
mov
lods
sub
xchg
mov
hlt
data16
cmp
cmp
inc
push
insl
xchg
fidivl
inc
jp
inc
iret
ljmp
push
test
xor
repnz
dec
xor
fcomps
mov
insl
mov
push
pop
cld
inc
cmp
clc
mov
lahf
xor
decl
adc
mov
cmp
pop
fcmovbe
cs
jb
dec
mov
xor
mov
leave
xor
fxch
jae
lea
mov
xchg
lock
gs
sub
faddp
adc
fldl
adc
adc
xchg
decb
and
mov
mov
xor
stos
mov
xor
pop
jbe
inc
jg
clc
push
add
mov
xor
or
fcoml
xchg
inc
mov
out
xchg
subb
push
shlb
loop
xchg
fisttpll
adc
push
ss
xor
jmp
mov
sbb
mov
xor
clc
sbb
lds
loopne
fadds
xor
addr16
aad
lods
test
enter
jb
fs
addr16
enter
lock
xchg
and
inc
push
xchg
ja
test
jl
dec
scas
sti
fsub
jb
sti
pop
pop
js
adcb
and
lock
gs
popa
mov
cwtl
xchg
jge
mov
pop
icebp
test
faddp
mov
clc
sbb
and
fcoml
mov
xor
ja
or
xor
or
in
inc
repz
xor
lahf
inc
pop
inc
rcll
inc
and
jns
sub
data16
push
cwtl
icebp
cmpsl
inc
xor
mov
int3
add
pop
ss
adc
aam
hlt
pop
xor
xchg
dec
je
fnsave
dec
xor
jno
sub
push
aaa
inc
jle
inc
icebp
fmull
xchg
outsl
mov
sbb
out
movsb
push
xor
aam
mov
imul
lock
xor
cmpsb
popa
aad
jne
dec
inc
shl
adc
mov
adc
xchg
and
xchg
fcmovnb
adc
bound
push
aad
cmc
iret
lods
cmpsb
add
lods
aaa
aaa
jp
ret
divl
cwtl
cmp
push
add
je
sbb
push
psllw
dec
add
push
hlt
xor
cmpl
add
out
pop
jb
jne
pop
and
xchg
inc
dec
xor
add
adc
mov
mov
cmp
mov
mov
and
daa
enter
rcll
pushf
or
sbb
mov
fcomps
adc
call
inc
mov
dec
ret
push
push
push
jno
add
sti
lcall
lahf
ljmp
mov
or
dec
xor
push
jmp
pop
mov
icebp
and
and
iret
xchg
push
repz
jg
aas
adc
inc
adc
inc
and
cmp
mov
jae
inc
shlb
xchg
push
and
fcompl
xor
insl
test
cmp
sub
cmp
nop
dec
mov
scas
mov
bound
xchg
scas
push
mov
xchg
and
mov
mov
xor
xchg
and
test
dec
jp
xor
xchg
mov
fistl
ss
add
dec
pop
sub
mov
fistl
ss
sbb
and
pusha
insb
or
pop
push
xchg
es
roll
fisubrl
xor
adc
punpckhdq
shl
and
xor
cmp
cmp
xor
adc
lds
and
in
sbb
mull
xchg
xchg
inc
jbe
ss
xchg
cmc
dec
jno
call
xor
fsub
push
pop
jne
pop
jo
and
mov
inc
loope
xchg
jb
sahf
push
push
xchg
cmpsl
push
dec
xor
js
icebp
inc
call
push
outsl
sub
shl
xchg
clc
push
or
cmp
adc
imul
arpl
and
dec
sarl
xor
fsubs
pop
xchg
notb
mov
clc
or
divl
scas
xor
fadds
icebp
imul
imul
lods
xor
outsl
adc
shrl
inc
test
add
jge
dec
scas
and
shll
push
xchg
push
push
inc
addb
sub
sbb
adc
repz
jno
and
btr
loopne
pop
outsb
add
add
mov
sub
bound
dec
xchg
jmp
inc
jb
andb
or
repz
jns
ret
or
inc
jecxz
push
xor
mov
or
xchg
inc
jno
push
add
add
push
mov
pop
jecxz
inc
pushf
mov
jno
fsubrs
ss
loope
xor
roll
push
xor
daa
cmp
add
bound
sub
pop
pop
xor
xorb
insb
push
push
scas
or
nop
xchg
loopne
fcompl
add
xor
pop
push
xchg
inc
xor
jno
sbb
sbb
mov
dec
daa
es
xor
xor
dec
dec
dec
xlat
int3
xchg
or
mov
mov
mov
jg
lahf
sarb
xor
mov
sahf
iret
cmp
jge
popf
into
cmp
insb
pop
mov
int
xor
mov
fwait
int3
cmp
xor
dec
cmp
pop
mov
cltd
lret
xor
cwtl
mov
inc
ja
xchg
cld
jb
fdivrs
xchg
mov
xor
jne
xchg
test
push
inc
je
xchg
xor
inc
jae
arpl
dec
mov
pop
mov
push
pushf
add
adc
xchg
jnp
and
cmp
xor
sbb
inc
cs
mov
jno
sub
dec
xor
and
and
and
rcl
andl
mov
xor
pop
xchg
test
ss
mov
rcl
xor
or
xchg
push
pop
and
shrl
push
out
test
pop
adc
jne
bound
lds
mov
mov
jo
fistl
scas
adc
sahf
cli
pop
and
mov
sub
idivl
imul
inc
mov
or
jbe
out
push
mov
orl
popf
sub
add
pop
mov
jo
dec
addr16
popf
sub
pop
mov
fildl
inc
adc
fsts
xchg
cmc
add
lods
cmp
pop
cmc
or
xor
scas
fwait
push
testb
pop
sbb
mov
lret
mov
hlt
sbb
or
mov
rol
mov
mov
nop
cmp
cs
loope
mov
and
sub
xor
adc
xor
adc
ljmp
mov
out
xor
or
mov
xor
iret
pop
repnz
and
xor
mov
xor
xchg
cwtl
icebp
fcomps
jbe
ficompl
call
adc
jo
ljmp
std
fisttpll
das
and
js
xor
aam
xchg
xor
jl
lret
pop
inc
loop
adc
mov
test
dec
ja
xor
popa
mov
std
lcall
cmpsb
jae
lods
jge
sub
ret
xor
sti
mov
and
js
xor
in
jns
cmp
jg
xchg
adc
icebp
lcall
sbb
adc
fcoms
jnp,pn
add
adc
pop
daa
push
mov
jb
inc
xor
sahf
fstpl
pop
adc
das
ficomps
inc
pop
les
mov
ficomps
mov
scas
push
xchg
adc
mov
mov
mov
int
mov
sbb
dec
fisubrs
add
or
cmc
jbe
les
subb
in
sub
popf
push
cwtl
xor
cmp
dec
lret
mov
jo
push
jge
jae
pop
dec
push
jl
push
cmc
cmpsb
imul
jae
test
addb
out
test
pop
xchg
jecxz
sub
popf
inc
lock
xchg
jo
xor
out
pop
xor
je
xchg
add
xchg
add
mov
lds
xorb
hlt
cmp
movsl
or
repz
insb
addb
cmpsl
inc
xor
outsl
xor
sbb
xchg
fisttpl
data16
sbb
and
jb
in
and
or
enter
sbb
jle
js,pt
je
fistpll
mov
sub
call
xlat
test
jmp
sbb
or
add
inc
test
xor
loope
icebp
and
inc
and
mov
inc
bts
jne
test
inc
xor
out
dec
sub
sti
adc
push
add
dec
sbb
sub
les
push
mov
inc
add
xor
es
fistpll
orb
ja
cmpsl
inc
mov
das
mov
or
adc
into
adc
adc
sub
inc
jecxz
cmp
mov
sub
fildll
lret
lock
inc
aaa
repz
enter
inc
inc
mov
mov
mov
dec
lcall
mov
les
mov
xchg
mov
sbb
out
mov
pop
push
nop
add
xlat
insl
bound
mov
dec
mov
clc
jle
sub
sbb
xor
outsl
dec
mov
mov
repnz
mov
cmp
sub
dec
loope
mov
int
xor
mov
and
scas
movsl
mov
jecxz
push
jno
imul
jbe
aad
inc
jnp
push
fimuls
jle
mov
push
pop
cmp
outsl
mov
xor
jnp
xor
insl
test
sub
xor
repz
dec
ljmp
loop
pop
aad
fidivl
push
mov
out
pop
adc
dec
push
or
repnz
and
gs
mul
into
das
dec
cmp
ffree
xchg
xor
out
addr16
fstpt
fldlg2
add
xchg
mov
inc
stos
inc
adcl
lahf
or
mov
aaa
lret
inc
sub
jo
mov
xor
cmp
inc
lds
cmpsl
ja
push
jmp
push
and
bound
push
lds
subb
inc
popa
xor
fstpl
jg
ss
inc
hlt
cmp
repnz
aad
popa
push
sbb
and
loopne
xchg
xor
xlat
mov
outsb
in
mov
push
xorb
out
das
or
ja
jns
xchg
or
jno
popa
sub
int
xor
cmp
pop
and
jb
sbb
jecxz
jne
mov
out
adc
loope
pop
xor
mov
lods
mov
mov
xor
ret
push
pop
repnz
sub
fsubs
xchg
ja
into
stos
dec
cmp
push
push
fistl
push
push
ficoml
dec
jno
rcr
push
mov
sbb
jb
scas
push
sub
repnz
cs
jb
jno
dec
loop
adc
mov
mov
xor
inc
pop
xor
bound
fucom
cmp
inc
ja
xchg
mov
movsl
out
xchg
add
and
imul
cmp
jb
mov
dec
cwtl
adc
rcl
xlat
sti
mov
adc
xchg
shll
push
dec
test
xlat
out
xchg
and
ljmp
ds
push
iret
rol
in
and
and
xlat
daa
clc
je
ret
cmp
mov
xchg
cld
dec
pop
xor
jne
mov
addr16
and
stos
xchg
adc
inc
jecxz
in
loope
lock
mov
fcomps
pop
push
pop
mov
xor
jecxz
int3
sbb
sar
sub
lahf
push
pop
mov
sbb
mov
nop
iret
or
das
fdivl
jmp
enter
mov
shll
inc
cli
xchg
jo
dec
mov
out
xchg
mov
xchg
mov
or
stos
pop
loop
xor
enter
clc
les
xor
mov
repnz
inc
bound
mov
jbe
in
ret
pop
inc
sbb
and
push
outsb
incl
dec
mov
dec
add
sbb
add
sub
rorb
pop
je
mov
inc
andb
mov
dec
sub
jmp
dec
inc
and
out
pop
outsl
outsb
adc
sub
jb
gs
xor
notl
shl
outsb
mov
outsb
and
inc
dec
pop
sub
ss
push
test
addr16
add
in
repz
in
xchg
push
outsb
das
icebp
fdivrs
cmc
or
repnz
ret
cli
push
xchg
mov
sub
jns
scas
bound
cmp
pop
lcall
inc
add
push
mov
ret
sbb
jns
test
and
lods
sbbb
and
xchg
mov
jle
push
lahf
es
addr16
clc
outsb
push
inc
cmpsl
aad
lahf
inc
imul
fdivrs
and
mov
rcll
ja
leave
call
push
or
lea
xor
lods
jb
icebp
pusha
push
aaa
popf
sbb
and
jmp
cltd
mov
mulb
cmpsl
mov
xchg
shl
push
jmp
xor
shll
pop
jg
inc
and
inc
xchg
cltd
test
enter
cmp
jmp
xchg
mov
mov
sbb
sbb
lret
aas
outsl
rcr
gs
scas
mov
repz
push
xchg
pop
outsb
mov
xor
push
das
xchg
call
mov
out
dec
je
out
imul
xchg
sub
je
dec
xchg
nop
mov
shrl
sbb
das
stos
outsl
aas
cltd
push
adc
sbb
scas
inc
pop
jb
xor
xchg
popf
pop
repnz
jmp
sbb
and
sub
or
pop
adcb
xchg
dec
push
ljmp
sbb
aas
stos
dec
xchg
inc
jo
ljmp
outsl
pop
and
loopne
icebp
in
data16
jbe
add
push
push
adc
mov
mov
xchg
jmp
ljmp
and
sbb
ja
orb
jl
lea
out
cmp
push
insl
test
loope
in
daa
xor
push
sub
stos
leave
jg
push
dec
sub
hlt
pop
and
lahf
outsb
xor
mov
movsb
int3
dec
mov
cmp
les
inc
xchg
xchg
xchg
fs
out
popl
test
stc
cli
call
mov
inc
and
fnsave
xor
push
sbb
sbb
xchg
xor
jle
and
dec
xchg
popw
mov
mov
dec
inc
push
std
in
nop
push
cmp
adc
sub
xor
dec
ret
out
int
pop
mov
mov
push
jmp
mov
fdivs
xor
lock
inc
pushf
push
jo
mov
mov
cli
jl
adc
popf
or
xor
jne
push
enter
jnp
add
pop
insb
push
xor
xchg
inc
mov
mov
int
or
cmp
adc
popf
dec
xor
mov
dec
sub
repz
xor
xchg
mov
outsl
fdivl
fsubrs
adc
or
xchg
icebp
addr16
pop
std
ds
in
xchg
mov
movb
mov
sahf
cmp
jb
mov
test
lods
test
je
cli
add
loop
into
lods
cmp
jge
aaa
lret
mov
sub
xor
cmc
jmp
xor
sbb
bound
sbb
jl
imul
fmul
fcmovb
enter
outsb
out
or
xor
or
nop
or
inc
xor
addr16
movsl
ja
push
or
jmp
adc
xchg
cmp
jo
lods
push
xor
adc
stos
jge
add
xor
loop
iret
xor
nop
xchg
jno
mov
pushf
sbb
xchg
inc
jmp
pusha
lcall
inc
sti
sbb
push
xor
ret
add
hlt
loopne
fadds
clc
jns
dec
push
loope
jmp
cld
movsl
jg
jo
xor
xor
mov
nop
pop
in
fbstp
jge
xorl
and
jne
xchg
iret
jns
dec
inc
movsl
pushf
fsub
fs
mov
cmp
popa
enter
fnstenv
out
pop
xor
mov
jge
inc
xor
fcmovb
xchg
lahf
mov
jle
and
cmp
data16
cmp
shrl
pop
in
nop
push
push
jge
mov
out
out
lcall
xor
dec
lahf
mov
xor
push
sbb
iret
cmpsl
sub
imul
mov
pop
aaa
xchg
xor
daa
jne
mov
mov
test
aaa
fisubrs
dec
add
mov
loope
in
adc
or
sbbl
xor
push
and
cltd
pop
dec
jge
mulb
adc
push
insl
stc
std
test
mov
in
lret
and
jle
add
fs
inc
test
mov
xor
inc
outsl
fistps
test
addb
and
dec
mov
or
inc
jge
rcrl
loop
dec
adc
or
ret
icebp
xor
rcl
outsl
notl
cmpsl
sub
mov
cmp
lret
xor
rolb
orl
hlt
fisttpl
test
xor
loope
loopne
iret
lret
pop
push
repnz
jae
js
sbb
xor
lods
adc
bound
in
mov
bound
in
hlt
sub
jno
mov
pop
lret
loopne
inc
pop
dec
int
sbb
xor
mov
fcom
je
aad
cmp
mov
jecxz
movl
lea
mov
addr16
push
push
lods
push
xor
pop
fldt
popf
xchg
mov
fidivl
xor
dec
lahf
js
inc
pop
adcb
ja
shlb
sahf
mov
mov
pop
jne
sbb
sti
pop
in
or
addr16
add
int3
adc
stc
inc
test
xor
push
xor
mov
adc
sbb
xor
test
inc
dec
adc
dec
or
add
addr16
pusha
in
xor
cli
lods
lds
xchg
aam
xor
mov
xor
adc
addb
dec
inc
es
dec
mov
in
mov
sbb
mov
data16
cs
rclb
imul
fwait
xor
adc
xor
clc
pop
cmp
mov
xchg
xor
popl
data16
dec
movsb
xor
add
xor
or
and
and
xor
cld
rorl
jg
mov
insb
cli
xchg
sbb
dec
aad
jo
mov
movsl
pop
fcomip
sub
xor
cmp
cmp
mov
xor
xor
stos
mulb
add
pop
shlb
xor
movsl
sub
mov
inc
mov
pop
adc
mov
xor
loope
xor
dec
mov
xor
push
mov
ret
xor
jns
pop
mov
mov
mov
xor
jo
mulb
and
inc
xor
cli
mov
xorl
jnp
pop
jno
cmp
xor
cld
scas
jne
rcr
xor
and
fdiv
mov
fnstenv
adc
mov
jge
and
jp
cltd
std
hlt
popa
xor
mov
insl
mov
ret
lods
sbb
xor
lea
repnz
push
pop
rcrl
xor
in
mov
cld
xor
dec
rol
or
xor
mov
data16
aaa
gs
mov
jp
xchg
jns
sub
jl
jnp
mov
ret
mov
or
jmp
xor
imul
mov
xchg
dec
xor
xchg
pusha
lret
mov
jle
mov
and
xor
mov
cmp
decb
push
int3
cmc
or
enter
push
cld
adc
mov
mov
xchg
popf
insl
pop
push
adcl
sahf
fs
add
jge
rol
sbb
inc
mov
adc
andl
mov
mov
add
xor
cs
pop
insl
xor
mov
lea
inc
out
xor
add
ret
hlt
cs
jmp
mov
enter
les
movsb
stc
push
jb
xlat
or
pop
inc
dec
inc
sub
loop
push
lret
ss
arpl
fsub
xchg
push
inc
xor
in
pop
xor
adc
out
push
push
cwtl
daa
inc
jmp
sub
in
xor
push
shl
gs
ss
enter
cld
jecxz
push
clc
sahf
mov
xor
lds
test
popa
sub
push
jbe
mov
xorl
or
mov
in
jno
stc
fildll
or
sub
fs
dec
push
scas
shlb
inc
push
mov
adc
push
dec
repnz
jl
jb
shrd
mov
arpl
vcvtsi2sd
push
jb
nop
pop
jb
mov
ret
bound
adc
shl
or
pushf
push
add
jno
aas
jg
jb
ret
lret
repz
lds
mov
pop
ret
and
in
sbb
outsl
test
jne
sarb
and
stos
mov
xchg
mov
repz
loope
gs
rcr
outsl
popl
outsb
xor
pop
and
pop
pop
sbb
sbb
lock
insb
das
ds
ja
pop
daa
cmp
bound
stc
mov
outsl
outsb
das
xorl
aad
arpl
and
xor
mov
xchg
pop
add
mov
and
pushf
jnp
mov
loopne
pop
je
and
xor
sbb
pop
lcall
repnz
repnz
dec
dec
adcb
js
out
subb
or
sbb
xchg
sub
call
cmpsb
in
pop
and
mov
lret
mov
add
rcll
fildll
adc
and
lahf
mov
lea
nop
xlat
daa
inc
jne
fwait
and
xorb
aas
mov
lea
push
mov
dec
inc
push
cmp
xor
or
aad
cmc
mov
adc
xchg
gs
js
les
dec
jl
sbb
xor
hlt
push
into
mov
ss
mov
jae
or
ret
inc
adc
sbb
andl
scas
and
xor
sbb
shr
mov
inc
xor
lock
stc
pop
mov
orl
sti
xor
loop
in
lods
cli
divb
cmp
xor
xchg
adc
or
mov
and
sbb
xor
pushf
psadbw
dec
add
or
push
adc
push
sub
insb
xor
bound
adc
pusha
lahf
or
shl
xor
pop
xchg
xor
xor
lret
mov
lods
pop
xor
and
cwtl
in
ret
ja
dec
notl
add
test
addb
aam
icebp
xor
dec
push
cmp
cmpb
cmpsb
mov
xor
mov
push
inc
xor
xor
dec
xor
push
loope
test
loopne
icebp
out
dec
sbb
dec
out
mov
ret
cld
stos
daa
lods
data16
cmp
pop
clc
cmpsl
xor
xor
xor
lea
bound
adc
lock
mov
iret
test
and
xchg
loopne
adcb
jle
add
xor
sahf
dec
insb
push
lock
cmpsb
push
or
mov
dec
icebp
xor
xor
clc
jg
ljmp
xor
rcrb
lret
xor
mov
xchg
push
fimull
stos
mov
jmp
cmp
push
ljmp
mov
in
clc
bound
ss
pop
sahf
arpl
imulb
xchg
icebp
mov
inc
rcrb
pushf
jnp
into
clc
mov
xor
loope
sbb
xchg
pop
xor
mov
xor
cmpsb
stos
mov
sbb
sbb
cmp
mov
mov
mul
xor
cmpsb
out
xor
dec
lods
test
dec
sub
cli
psubsb
arpl
inc
inc
push
xchg
dec
inc
cmp
jge
push
mov
sbb
gs
int3
xor
cmp
xor
push
shll
push
and
loopne
xor
out
fwait
decl
xor
cmp
mov
xor
mov
push
pop
orb
xor
insl
roll
cmp
jns
mov
dec
push
fstpt
xchg
jne
pop
orl
pushf
cmp
test
pop
loop
xlat
ds
mov
lahf
mov
loopne
xor
movb
aam
xor
sub
adc
push
push
inc
jno
xor
out
movsb
jns
xchg
mov
adc
and
movsl
mov
push
push
imul
lds
test
bound
push
in
push
loope
mov
inc
xchg
adc
mov
xchg
pop
cmpsb
xchg
imul
rcrl
sbb
mov
push
js
loop
iret
pop
adc
sahf
xor
popfw
dec
notb
call
adc
pop
and
adc
cmp
pop
dec
dec
stos
das
sbb
add
and
add
rclb
cmp
xchg
push
adcb
icebp
mov
mov
ret
fwait
cltd
cs
and
pop
mov
push
orl
push
je
adc
scas
sub
int
mov
js
iret
inc
xor
loopne
xchg
roll
das
mov
test
lret
push
leave
xor
ljmp
jb
or
stos
and
jne
imul
mov
imul
adc
lods
push
sbb
sbb
mov
or
mov
xchg
jg
adc
fidivrs
pop
loope
mov
mov
icebp
aam
out
js
xor
movsl
jns
and
and
jo
lahf
push
xlat
movsl
sbb
pop
nop
adc
mov
add
push
call
sub
mov
lea
adc
stos
push
sbb
jbe
aas
aam
push
or
push
icebp
ds
push
incl
ljmp
adcb
sbb
dec
dec
pop
leave
add
rcll
mov
sbb
mov
mov
arpl
lret
mov
test
in
imul
sub
xor
out
push
dec
pusha
adc
sahf
jle
push
mov
pop
jno
iret
out
mov
sarb
mov
pop
pop
cmp
aas
pop
aas
mov
lds
jo
mov
loopne
pop
jmp
pushf
leave
mov
sub
mov
test
rcll
lret
popl
mov
jbe
loopne
fnstsw
out
ds
xor
push
fiaddl
mov
inc
lock
or
push
outsb
shlb
lcall
outsl
xor
scas
push
icebp
and
das
fildl
in
pop
pop
push
jmp
out
push
jl
sbb
sar
dec
push
mov
adc
lcall
push
aas
mov
jo
sbb
das
inc
aaa
sub
push
jns
xor
push
pop
mov
sbb
fildll
insl
das
jb
adc
mov
pop
and
mov
cltd
repz
ret
sbb
add
mov
mov
das
dec
lods
enter
repz
mov
push
test
lret
dec
lahf
mov
sub
or
insl
or
sbb
sbb
push
test
mov
aam
cmpsb
dec
push
push
push
or
imul
mov
add
adc
push
pop
sarl
jecxz
rorl
sbb
and
jbe
cmc
adc
and
insl
repnz
jg,pt
enter
aaa
mov
xchg
push
inc
mov
gs
cmpsb
push
in
mov
fisubrl
jne
xor
cmp
fstl
inc
xor
cs
add
ja
xor
sbb
cmp
fsubs
test
scas
mov
xor
mov
xchg
inc
add
fiaddl
out
cmpsb
and
gs
mov
mov
inc
fisttps
xor
movzwl
and
xchg
jl
mov
stos
daa
cmp
xor
scas
push
sub
std
xchg
out
shrb
pop
xor
fistpll
shlb
xor
sub
aaa
push
sbb
stc
pop
or
dec
in
fsts
mov
cmp
jns
dec
sub
xor
push
mov
jb
call
mov
xchg
enter
imul
mov
je
sbb
sarl
stos
lea
add
clc
or
shll
les
test
outsb
aas
cld
adc
dec
mov
and
and
inc
inc
pop
add
add
fs
pop
and
sub
stos
add
jnp
mov
and
jle
push
sub
and
pushf
mov
ljmp
mov
ds
pop
ds
jno
inc
xchg
sub
and
inc
jle
mov
push
mov
test
or
add
mov
decl
int3
cmp
adc
sub
out
dec
sub
outsl
push
dec
mov
in
sub
dec
loope
scas
mov
dec
mov
ds
lock
shlb
stos
adc
pop
popf
mov
outsb
lahf
sub
into
adc
inc
adc
push
push
fdivl
mov
outsb
push
xor
shl
data16
mov
jmp
dec
pop
xorb
jne
pusha
fwait
in
adc
mulb
adc
jmp
clc
inc
jno
inc
pop
push
mov
and
lcall
mov
push
push
and
xchg
push
xor
push
bound
inc
push
imul
sbb
push
lahf
out
cmp
add
cmpps
inc
loop
push
fdivrs
sub
inc
xor
insb
inc
dec
mov
ret
dec
pop
jbe
or
xchg
fisubrs
jg
xchg
sbb
inc
ret
outsb
inc
jbe
rclb
in
ret
and
icebp
jno
clc
dec
lret
out
outsb
dec
xor
dec
loope
jno
push
rcrl
aas
pop
cmp
and
inc
repz
bnd
ljmp
push
ret
jge
mov
cmp
repnz
dec
sub
hlt
inc
ret
jno
push
pusha
outsb
mov
adc
notl
les
cmp
jl
xor
mov
add
push
and
inc
nop
and
dec
mov
dec
pop
ljmp
dec
sbb
mul
push
cmp
pop
sub
xor
outsb
insl
xchg
lret
inc
inc
int
dec
jbe
and
mov
stos
mov
xor
inc
lcall
or
dec
icebp
lds
subl
mov
pusha
sbb
repnz
adc
mov
shlb
push
sub
xchg
xor
sbbb
add
push
mov
adc
std
push
rcrb
dec
mov
lods
xchg
adc
iret
cmp
dec
popa
mov
sub
and
scas
jmp
xor
and
jmp
jg
push
das
adc
cmp
pop
jmp
divb
jb
enter
repz
out
mov
jge
jae
dec
and
or
add
and
xchg
mov
cmp
outsl
jb
jecxz
loope
xor
cmpsb
and
xor
imul
scas
jnp
das
repz
mov
and
mov
lahf
imul
mov
rcl
sahf
outsb
push
jecxz
jno
jnp
dec
jg
fdivs
add
cmpsl
enter
dec
jmp
mov
jo
dec
xorb
mov
test
xlat
cmp
push
addb
and
push
push
out
ficomps
add
push
xorb
add
xor
push
mov
fmuls
xor
mov
fmull
pop
das
das
and
andb
lahf
in
or
dec
lret
lret
xchg
pusha
mov
inc
call
scas
repnz
stos
xchg
sbbl
mov
fisubrl
jmp
pop
pop
icebp
or
popf
inc
mov
add
sbb
mov
fcmovbe
dec
cwtl
add
xchg
sahf
cmpsl
repz
mov
outsb
jg
adc
leave
shl
lahf
addr16
lahf
cmp
dec
push
loop
loope
xchg
rorb
bound
dec
loop
lahf
das
and
mov
push
out
bound
not
pop
push
sbb
shlb
lret
jle
pop
sub
inc
insl
popa
icebp
and
sub
push
xor
add
stos
adc
ljmp
xor
ret
push
icebp
mov
mov
dec
dec
lahf
aas
xor
mov
jno
jp
aas
pop
mov
sarl
das
stos
repnz
cmpsl
dec
push
scas
and
add
mov
lcall
mov
lods
mov
add
pushf
lret
dec
insl
lods
fs
mov
push
imul
inc
add
sub
xchg
sbb
jo
mov
xor
mov
sbb
xor
popa
and
sarl
push
enter
sbb
push
ret
das
and
inc
arpl
inc
fdivs
push
mov
stc
xchg
out
cmpsl
hlt
push
add
ret
loop
jb
push
test
cmpsb
and
and
sbb
popa
mov
and
xchg
cwtl
jns
sub
dec
add
mov
sbb
cmp
jp
pop
cs
shll
dec
ja
aaa
ss
cmp
cltd
outsb
sahf
sub
inc
xchg
xchg
mov
cmpsl
cld
mov
or
fwait
jnp
push
push
js
push
cs
jo
xor
adc
fbstp
imul
and
mov
mov
sub
out
sbb
cs
xor
data16
xor
int
add
adc
push
pop
mov
xor
add
ss
xor
cmpsl
sbb
mov
test
jae
mov
xor
jnp
lds
ss
shrb
int
xlat
inc
loop
test
mov
incl
cltd
push
frstor
ss
movsb
out
pusha
inc
adc
insl
fdivrl
jecxz
xorb
add
and
cmpsb
cmp
and
inc
sti
jae
pop
pop
pop
pop
je
dec
and
push
jp,pn
inc
sahf
out
ljmp
push
loop
bound
aam
data16
or
mov
pop
in
scas
sub
popa
pop
xorb
add
cltd
dec
pop
xor
test
out
sub
shl
cmpsb
inc
inc
adc
xor
add
or
lock
imul
pop
pushw
dec
addb
or
mov
das
jmp
mov
jl
xchg
push
addr16
jno
arpl
movsl
fldcw
xor
sbb
fidivl
imul
aam
mov
cwtl
xor
test
cmc
mov
xor
test
pop
inc
or
jae
inc
test
fcomps
int3
aad
aaa
cmp
or
enter
mov
ss
mov
outsl
int3
out
repz
pop
push
cmpb
xchg
je
lea
push
push
in
ret
mov
mov
mov
jb
and
repz
jmp
xchg
sbbl
or
sti
mov
mov
icebp
mov
or
pop
jno
pop
imul
sub
fimull
pop
imul
sub
add
rolb
imul
out
mov
mov
inc
and
inc
mov
and
movsl
aas
sub
pop
xor
sub
test
jl
sbb
mov
test
popf
cmp
dec
pop
cmp
pop
add
mov
mov
jle
xor
arpl
jno
out
lods
xor
out
adc
push
xor
jns
xor
inc
mov
and
inc
and
xor
stos
dec
je
fndisi(8087
xor
cmc
mov
pop
ljmpw
repnz
push
xchg
xor
and
adc
cs
in
test
mov
xor
push
stos
inc
loope,pt
scas
xor
sub
pop
xor
cmp
out
aas
cld
pusha
push
or
jecxz
mov
mov
les
fwait
shll
jnp
sbb
addr16
add
imull
cmc
push
adc
push
pop
fcoml
lret
roll
jb
dec
je
pop
and
sub
outsl
inc
lea
invd
leave
lock
jle
nop
in
mov
fistpll
or
bound
and
xlat
not
or
ret
sti
sub
and
pop
cwtl
addr16
mov
pop
sbb
xor
mov
stc
dec
sub
in
fstpt
sub
outsb
or
cmp
bound
lock
push
insb
es
mov
ljmp
xor
test
jmp
dec
jle
xor
out
mov
fldl
dec
sub
fadd
ret
xchg
loop
repnz
mov
push
orb
or
fidivrl
fisubrs
insl
int3
icebp
mov
or
incb
or
mov
inc
loopne
or
iret
or
add
mov
jb
scas
cmpsl
lods
lds
lahf
pop
hlt
dec
roll
add
pop
and
pop
mov
lea
mov
and
scas
push
jns
dec
lock
loopne
pusha
movsb
inc
push
inc
mov
jecxz
add
outsl
add
shll
and
nop
sub
aas
call
pop
pop
das
inc
dec
ret
push
mov
ret
dec
pusha
push
sbb
dec
xor
xor
rcll
inc
add
xlat
push
cs
iret
imul
rorl
ret
and
mov
pop
outsb
xchg
bound
lahf
pop
loopne
xor
daa
inc
mov
push
jno
mov
dec
repz
dec
mov
cmc
push
jae
xorl
inc
mov
mov
movsl
pop
inc
add
scas
call
push
mov
xor
enter
shrb
pop
cmpsb
fsubs
sahf
mov
and
sbb
scas
inc
pop
and
and
jbe
andl
test
out
cmpsb
inc
daa
inc
inc
cld
xchg
test
jmp
jb
push
add
xchg
dec
icebp
ja
jmp
inc
cmp
push
push
push
arpl
jb
sbb
inc
pop
nop
das
ret
int3
bound
out
xchg
add
fs
lods
cmp
push
repz
sub
xor
add
test
push
xchg
scas
sub
and
mov
inc
scas
aad
mov
das
shll
push
stos
pop
shlb
enter
xchg
adc
mov
in
jbe
mov
je
and
mov
outsl
xchg
mov
jno
lret
cs
pop
fs
scas
xor
rorl
and
adc
add
das
ret
mov
pop
and
xchg
sub
mov
stos
clc
fadds
xor
dec
dec
cwtl
and
add
push
xchg
mov
xchg
cmc
add
pop
pop
jecxz
mov
inc
mov
fstps
mov
cmp
mov
aaa
jb
push
xlat
or
insl
xchg
xchg
scas
cmp
sub
jbe
and
fstps
in
mov
sub
rcll
shl
in
push
or
ffreep
repnz
popa
xor
inc
mov
xor
xchg
xor
mov
and
dec
xor
pop
sub
pop
push
lods
jo
ljmp
lods
add
int
insl
es
xor
in
and
push
cmpsl
xchg
enter
mov
jo
leave
test
daa
out
mov
rcrb
and
and
adc
xchg
lea
xor
int3
jecxz
mov
push
rcrl
outsb
outsb
cltd
jmp
aas
mov
ss
add
add
dec
push
hlt
or
dec
push
mov
pop
enter
inc
movsl
leave
push
repz
xor
call
dec
jo
dec
aad
pop
lcall
les
daa
sbb
pop
cmp
call
mov
shlb
inc
inc
fdiv
popf
ljmp
sub
and
js
cs
and
pop
xor
daa
mov
stos
jmp
add
mov
icebp
and
pop
lods
pushf
mov
jno
insb
jne
mov
pop
fstpl
ja
lea
mov
adc
and
xchg
addl
shl
jno
jecxz
ret
cmc
mov
cmp
rolb
adc
jo
sbbb
icebp
inc
jp
mov
mov
sub
sbbb
adc
shlb
xchg
pop
dec
and
push
dec
inc
lods
loopne
xor
dec
push
shl
rcll
xchg
mov
pop
nop
mov
mov
sub
xor
xchg
popa
cmp
fsub
xchg
mov
mov
add
inc
and
dec
ds
cli
test
or
ja
enter
orl
add
pop
xor
or
rcrl
and
stos
in
pop
jnp
jno
inc
cmp
fildl
push
mov
dec
rcrl
sbb
inc
cmp
dec
pop
dec
inc
cmp
cmpsl
test
cld
pop
stos
dec
ret
xor
es
mov
andb
insl
and
push
inc
mov
mov
cli
repz
pop
xor
mov
jb
aaa
ljmp
dec
jbe
adcb
shll
movsl
sub
lea
xor
roll
cmc
push
ja
dec
lcall
mov
xor
call
cmp
ss
dec
push
aam
sub
mov
lret
xor
add
stc
pop
in
daa
mov
push
int3
jae
lods
arpl
mov
lods
sub
cmpsb
cmpsl
xchg
mov
rcrl
repnz
push
ljmp
inc
data16
push
and
testl
sub
jae
imul
cmp
mov
lcall
jns
mov
push
xor
call
mov
insb
icebp
mov
mull
xor
fwait
jmp
xchg
test
or
movsl
aas
fbld
mov
push
popa
mov
add
sub
icebp
xor
fnsave
fistl
xor
gs
je
and
outsb
dec
push
add
bound
push
pop
dec
jp
dec
mov
sub
pop
lret
xchg
mov
jo
icebp
pushf
shl
out
or
dec
xor
jge
xor
sub
sub
adc
dec
movsb
test
cltd
idivl
xor
dec
mov
je
and
mov
call
xor
ficoml
fdivp
xor
dec
div
sti
shlb
loope
cltd
adcl
xor
push
mov
test
loop
cltd
adc
mov
xor
daa
test
mov
lods
jns
gs
rcrb
xor
add
xlat
jns
xor
out
daa
popf
movsb
into
data16
mov
dec
loope
xor
or
push
sub
jle
sub
insl
stos
cmpsb
divb
xchg
iret
and
sub
ja
aad
and
ret
lods
movsl
repz
jb
imul
jae
xor
ja
sahf
mov
bound
xorb
cltd
mov
in
cmp
or
adc
xor
push
push
jne
clc
add
mov
xlat
xchg
push
mov
jns
and
inc
push
out
xor
mov
xor
int
fidivl
push
loop
hlt
movsl
and
xor
add
outsl
cs
adc
push
in
xor
adc
adc
fisubrs
movsb
cmc
and
or
xorb
push
out
mov
ss
outsb
dec
int
push
repz
jle
push
test
scas
inc
stos
xor
add
jns
jno
jmp
push
mov
add
out
xchg
stos
mov
fisubs
cs
test
xor
add
shlb
int
into
ret
fsubr
jmp
dec
fsubrs
sub
cmp
inc
dec
push
push
fwait
repnz
in
into
and
push
mov
pop
pop
pop
sbb
repnz
mov
add
inc
lret
ja
in
jmp
push
imul
add
adc
das
xchg
imul
lea
xchg
test
jl
inc
imul
pop
cmpsl
xor
sub
jl
mov
push
cltd
jo
cmp
mov
xchg
mov
mov
test
mov
sub
mov
lret
or
mov
sbb
cld
in
mov
and
dec
and
push
clc
inc
xchg
lods
pop
sub
scas
mov
aad
lea
inc
xor
sbb
dec
inc
arpl
shrl
dec
cld
and
inc
mov
or
mov
push
call
pop
repnz
in
scas
shll
cli
xor
lret
pushf
mov
fistl
aam
sub
xor
sbb
adc
lea
mov
add
adc
inc
rolb
repz
test
xchg
and
mov
jne
mov
adc
gs
adc
push
sahf
xor
xchg
push
repz
shll
dec
sahf
or
sub
sahf
jo
mov
popf
xor
sarl
mov
mov
in
jno
mov
add
xor
loopne
jb
clc
hlt
push
jb
mov
jg
inc
xor
jp
inc
popa
dec
mov
inc
adc
xchg
and
fcompp
adc
xor
shlb
dec
aad
adc
push
mov
jno,pt
dec
es
jb
mov
sub
push
enter
test
das
cmp
je
xchg
sub
test
cwtl
ss
icebp
jmp
xor
cmp
hlt
jbe
adc
cmp
add
inc
push
scas
pusha
jecxz
mov
jns
dec
insb
push
das
push
mov
hlt
js
mov
mov
or
inc
fidivs
or
sahf
test
push
pop
add
mov
push
xchg
lahf
ja
sti
jno
xchg
push
insl
mov
in
xchg
out
je
add
push
inc
sbb
cwtl
xchg
jae
pop
mov
std
xor
fidivrs
sbb
lock
push
aaa
push
push
cmp
jb
fmulp
fcomps
mov
mov
loopne
jg
jle
das
push
orl
or
mov
mov
jae
fisttpl
dec
adc
cmp
push
sbb
cmp
pop
xchg
fnstenv
mov
cmp
ja
scas
fwait
xor
sarb
jo
push
cmp
and
movsl
adc
test
in
filds
addr16
lret
movaps
dec
mov
cld
inc
xor
jg
inc
pop
cli
cmp
fs
dec
xor
not
dec
xor
xor
lock
mov
cli
ss
les
push
aad
xorb
dec
jbe
lea
mov
ljmp
inc
add
sub
xor
jnp
outsl
movb
xchg
dec
and
mov
cld
push
xor
in
pop
rcrb
cltd
sbb
and
push
ret
ss
xor
mov
xor
outsb
lock
mov
loop
sbb
and
adc
xor
pop
xor
nop
adc
mov
jmp
in
cmp
mov
sbb
inc
jecxz
mov
pop
sti
pop
or
jne
jl
push
pop
push
outsl
xor
adcb
imul
mov
aam
push
push
sbb
in
adc
dec
daa
lods
fldenv
xor
jo
or
pop
xorb
push
xchg
sub
inc
lods
rorb
lds
loope
scas
jne
xorb
int
sub
jns
inc
inc
dec
sub
ljmp
pop
in
or
lds
stos
xchg
mov
push
into
loope
xor
lock
out
mov
dec
xor
js
repz
pop
mov
mov
adc
xchg
stc
inc
in
add
in
lret
loope
push
adc
dec
aad
jmp
mov
sub
idivl
sub
or
fimull
push
stos
in
shll
jb
xchg
daa
std
ss
sarb
xor
sahf
push
inc
add
xor
push
test
mov
cmpsl
imul
jo
cmpb
sbb
pop
push
data16
mov
pop
loop
clc
jg
push
fistpl
cmpsl
std
imul
lods
push
insl
xchg
dec
mov
mov
mov
lods
xor
inc
adc
xor
xchg
hlt
and
jecxz
jp
pop
shlb
out
repnz
add
stos
out
subb
test
and
test
dec
pop
push
outsb
and
insl
ficoml
ja
mov
addr16
hlt
jo
fs
xor
push
dec
pop
xor
data16
xor
imull
es
and
repnz
push
push
movsb
je
xor
gs
pop
sub
pop
jb
adc
das
sub
xor
and
xchg
mov
sbb
fs
or
lret
adc
sub
and
or
hlt
add
stc
lock
and
jo
push
cmc
jae
xor
jmp
pop
mov
lret
outsb
inc
inc
sub
ss
push
repz
inc
daa
add
mov
push
addb
mov
jmp
fcoml
sub
mov
cli
repnz
xor
pusha
push
jbe
outsb
push
jmp
add
cs
xor
and
movsl
pop
pop
aaa
cmp
xor
scas
xor
mov
fadds
sbb
and
xor
mov
pop
pop
xor
sub
cld
mov
or
std
xor
xor
aad
adc
push
out
jno
test
sub
push
jo
cld
mov
scas
rcll
xor
dec
leave
xor
mov
xchg
add
not
and
sub
dec
ret
add
into
clc
xor
arpl
and
fs
adc
xor
repnz
jmp
lahf
and
xor
cld
jno
movsb
sbb
fsubrs
inc
or
jecxz
mov
cmc
mov
xor
add
out
xchg
stos
cs
loopne
and
xor
arpl
xchg
jne
test
pushf
cmpsl
jp
jo
xor
mov
adc
es
mov
push
shr
jno
xchg
and
fisttpl
aam
xor
addr16
xchg
jne
add
pushl
and
sti
int
or
xor
xorb
call
jns
aaa
adc
notl
imul
lahf
sbbb
fadds
mov
lret
cltd
out
mov
push
lods
adc
jo
xchg
or
and
out
notb
add
int
pop
call
xor
cmp
lahf
out
inc
cmp
jmp
mov
insb
ljmp
sarl
mov
stc
sub
into
jl
and
or
cld
mov
or
out
shll
add
mov
xor
xor
cltd
xor
xor
mov
addr16
xor
add
jge
lcall
cwtl
cld
push
repz
sub
push
test
in
inc
ss
push
ds
dec
shlb
in
or
and
jno
cld
push
mov
enter
pop
loope
shrl
mov
sub
inc
int3
insb
xor
xchg
rcl
xor
test
sbb
inc
push
in
add
cmp
mov
xor
ffree
out
xor
loop
sub
or
pop
sub
xor
or
icebp
xor
push
shlb
mov
mov
sbb
or
mov
inc
stos
mov
lahf
sbb
dec
cld
jg
pop
sub
mov
dec
xor
sti
ret
push
lret
inc
movsl
sbb
xchg
add
dec
xchg
xor
out
jg
sbb
icebp
test
xchg
dec
shll
jecxz
pmaxsw
sbb
xchg
lock
lcall
and
imul
sti
adc
dec
jne
xor
push
mov
push
fidivs
lahf
bsr
inc
out
int
js
test
and
pop
inc
gs
xchg
adc
xor
cmp
ret
push
in
clc
sbb
xor
xchg
cmc
cmp
jno
add
movsb
stos
sub
outsl
cmp
xor
repz
jg
inc
arpl
popf
adc
fnstenv
add
int
xor
mov
sbb
rorl
dec
cld
mov
mov
ljmp
push
rcrl
push
fidivl
jmp
xchg
xchg
adc
sub
push
call
scas
mov
mov
xchg
cmpb
and
push
test
loope
clc
scas
ja
xchg
jmp
mov
and
sub
lret
mov
jmp
pop
rclb
lods
ret
dec
pop
inc
pusha
mov
add
fstl
xlat
mov
sbb
loope
enter
fs
sbb
or
ss
xchg
lret
sti
or
dec
nop
jp
add
mov
push
sbb
scas
push
add
sub
and
inc
insl
addr16
arpl
hlt
bound
fadds
or
sub
sbb
jbe
sub
test
int
xchg
cmc
rdmsr
test
hlt
fbld
subb
aad
add
test
icebp
cld
push
sub
testb
push
in
and
inc
ret
xchg
adc
daa
xor
push
and
sahf
dec
loop
and
test
cmp
lahf
and
push
cld
xor
insb
daa
mov
mov
push
pop
jo
xor
xor
sti
xor
mov
mov
rclb
pop
in
fs
aad
in
push
xor
shll
xor
pop
lret
adc
repz
pushf
mov
jae
xor
clc
add
jno
dec
gs
sbb
aaa
icebp
or
mov
push
mov
sbb
push
mov
das
clc
test
mov
notb
sti
push
inc
jne
hlt
shlb
sahf
lods
ret
mov
std
cwtl
mov
lret
pop
idiv
xchg
xor
cmpsl
or
movsl
adc
mov
inc
xlat
cmc
mov
test
jo
ds
xor
add
stc
out
pop
xor
xchg
ret
jnp
bound
mov
or
xor
push
xchg
mov
outsl
nop
mov
push
mov
sbbb
mov
mov
dec
aad
push
lret
mov
xlat
sub
and
xchg
xchg
int
cs
push
xor
loope
and
jb
inc
xor
mov
addb
xchg
add
mov
inc
jbe
popa
xor
adc
fildl
int
xchg
sbb
sahf
xor
mov
mov
loop
dec
jo
cltd
add
xor
lock
push
add
sub
sub
out
aad
xchg
xor
xchg
test
cwtl
inc
mov
jl
push
xor
scas
hlt
mov
mov
xor
mov
add
push
adc
mov
or
xor
xchg
pushf
pop
sbb
pop
sahf
xor
adc
shlb
outsl
add
cs
pop
add
lds
movsl
in
fdivl
lock
mov
scas
int
push
loop
xchg
push
jo
mov
cmp
lock
mov
idivb
jmp
mov
stos
xor
subb
lock
lret
sub
fstpl
inc
iret
orb
cli
out
mov
jae
add
and
xor
mov
xor
and
xchg
or
in
sbb
push
cmp
sub
test
call
jg
es
sub
in
xor
loopne
xchg
loop
pushf
inc
mov
xor
lods
jp
cli
fisttpll
xchg
or
jg
repz
sub
xchg
mov
mov
cmp
sub
lret
arpl
jb
dec
push
fs
mov
sbb
test
mov
shr
sub
mov
addr16
add
mov
inc
mov
inc
cli
mov
push
xor
adc
pusha
xor
sbb
xor
stos
sub
adc
xor
push
mov
dec
add
ljmp
mov
jo
add
ja
xor
lods
fst
aad
and
xchg
test
or
xor
imul
mov
push
cmp
cmpsl
clc
ret
stos
push
lret
lahf
or
dec
pop
nop
aaa
pop
xchg
mov
sbb
jae
inc
xor
bound
mov
dec
and
sub
add
lods
rclb
cli
mov
andl
lods
xor
addr16
jb
pushf
movsl
add
lds
push
addb
addr16
sub
cs
pop
cmp
dec
outsb
shrl
cvtps2pd
int3
jo
dec
jge
push
sub
sub
fdivrs
cmp
imul
gs
sub
lret
call
cltd
cli
fcoms
fistpll
imul
xchg
mov
ds
and
mov
adc
cmp
or
xor
cmp
xchg
jecxz
out
pushf
inc
xor
cltd
lods
xor
sarb
adc
int3
xchg
xor
popf
pushf
mov
cmp
sub
ljmp
lock
cmp
les
movsl
mov
test
cmp
enter
idivl
lds
and
leave
adc
add
ss
in
adcb
jno
les
ljmp
cli
mov
lcall
xor
sbb
pop
jae
mov
mov
and
cmc
xor
mov
xchg
scas
dec
adc
jns
outsb
jp
pop
adc
repz
inc
ficoml
popf
mov
inc
mov
lods
jb
xchg
insl
mov
jp
popa
dec
jno
xor
aas
shrl
inc
push
addb
stos
sub
in
sahf
sbb
imul
xor
adc
out
mov
insb
mov
push
add
dec
xor
xor
add
sbb
dec
sbb
test
lock
or
sub
roll
popf
xchg
push
xchg
int
mov
pop
lods
std
movsb
mov
movsl
mov
leave
loope
mov
mov
xor
insl
xor
xorb
aam
in
xchg
or
inc
pop
daa
rcll
fdivs
and
lret
in
sbb
or
push
inc
xor
inc
les
cwtl
insb
or
pop
pop
mov
jbe
popf
inc
xchg
xor
in
inc
sbb
les
xor
repnz
xor
dec
pop
out
out
xor
sbb
add
dec
je
cli
mov
cmp
mov
jmp
lods
add
ret
into
pop
push
push
or
sub
sub
jbe
dec
pop
pop
push
sahf
push
mov
lret
mov
xor
xchg
mov
inc
mov
jb
inc
mov
fsubr
cmp
jns
int
lods
daa
adc
sbb
or
xor
cli
add
xor
mov
xor
sbb
push
cmp
xor
mov
pop
adc
cmpb
add
and
push
jmp
xor
xchg
icebp
divl
and
test
add
jne
xor
imul
pop
int
mov
test
addb
xor
fildl
ficompl
sbb
mov
adc
addr16
ja
outsl
mov
mov
popf
xor
xchg
rdmsr
fcmovu
add
sub
xorl
gs
lret
lods
push
cmp
ss
xor
jmp
aas
push
mov
lock
arpl
je
mov
xor
call
add
mov
mov
cmp
mov
loopne
xchg
mov
mov
lods
sbb
enter
mov
js
testl
enter
push
outsb
push
pop
xchg
pop
jbe
sar
cld
jl
test
cli
bound
xor
sub
push
hlt
test
addb
push
sub
popa
mov
test
dec
lock
mov
movsb
fldcw
nop
pop
adc
popa
test
push
loopne
dec
loop
xor
pop
push
orb
imul
loope
adc
rorl
stos
jg
mov
pop
sub
outsb
mov
cmpsl
push
jne
stos
xor
fnstenv
and
insl
ja
and
nop
lret
lods
jne
cmp
or
loope
ja
daa
xor
pop
pushf
mov
or
mov
pop
cmp
test
popf
ret
mov
cmpsl
fdivr
fbstp
fidivrl
movsb
inc
mov
push
enter
cmpsl
pushf
xor
add
cmc
and
pop
adc
cmpsl
loopne
jne
in
xchg
cmp
lcall
adc
dec
jne
xor
repz
test
shlb
and
jp
mov
xchg
scas
and
psubsb
push
and
loop
or
adc
popf
leave
nopl
dec
clc
jae
mov
sub
mov
ljmp
mov
push
inc
les
jge
push
jge
jbe
push
leave
or
jmp
mov
cmc
xor
adc
mov
xor
xor
inc
xor
leave
mov
adc
enter
cmpsb
ss
push
in
in
lods
dec
inc
adc
je
arpl
cmpsl
in
test
mov
inc
movsl
movsb
lret
scas
pop
cmpsb
sub
cmpsl
xor
je
jo
xor
call
sub
data16
sbb
fxch
xor
mov
mov
call
das
jno
xchg
jno
or
test
sub
cmpsl
push
inc
and
xor
cwtl
imul
mov
pushf
xchg
adcb
xor
ds
push
push
outsl
les
push
xor
add
or
mov
movlps
add
jnp
and
xor
testl
out
aad
xor
adc
xchg
sbb
cmpsl
cs
inc
call
xor
ja
out
xchg
mov
xor
inc
dec
push
repz
sbb
push
and
sbb
sub
or
ror
daa
dec
mov
fs
mov
sbb
pop
aas
pop
sub
in
daa
ljmp
out
int3
mov
jno
xor
lods
shlb
jmp
lds
inc
xchg
repz
lret
js
pop
scas
mov
pusha
outsb
pop
sbb
ret
jecxz
sub
scas
lret
mov
mov
js
repz
outsb
das
cltd
pop
sbb
stos
dec
or
jle
sub
aaa
bound
push
mov
and
jns
sahf
daa
cmpsl
imul
pusha
orb
xlat
aam
xchg
lods
sub
daa
mov
mov
inc
inc
and
mov
pop
and
dec
jg
jo
scas
add
popf
addr16
outsb
outsl
mov
mov
sahf
jl
lret
inc
push
dec
nop
pusha
xchg
dec
nop
pop
mov
sti
or
addr16
cs
aad
pop
outsl
addb
pusha
or
mov
clc
insb
shlb
jge
pop
shlb
jg
push
daa
ss
shlb
and
scas
and
insb
mov
mov
mov
mov
adc
pop
push
fadds
int3
push
test
mov
aas
jbe
int
addl
lret
mov
daa
xchg
mov
test
add
ljmp
das
and
gs
mov
sub
sub
popf
pop
outsb
cmpsl
ss
mov
ja
inc
mov
sub
or
jbe
std
push
ljmp
adc
pop
sbb
sbb
xor
mov
mov
inc
mov
cmp
push
fs
xorb
mov
jle
mov
movsl
jmp
xor
shll
xor
cmc
sahf
aas
inc
mov
sbb
dec
mov
inc
fs
mov
shrl
sbb
test
mov
sti
and
mov
mov
xor
movsb
lcall
aas
fmull
ret
push
test
stos
lods
xor
sbb
dec
mov
mov
int
clc
mov
shlb
in
rorb
jg
je
das
cmp
or
xor
div
mov
mov
lret
lods
or
cmpsb
xor
into
mov
adc
adcb
sbb
sarl
sub
mov
xor
jge
in
xor
jle
push
xor
inc
out
sub
and
rcrl
cmc
aad
push
jbe
jmp
les
rolb
mov
cmc
bound
rolb
adc
dec
xchg
test
loopne
jecxz
sub
inc
push
xor
sbb
adc
push
xchg
scas
hlt
insb
cs
fsubs
push
jae
xchg
push
js
lahf
bnd
mov
inc
and
sub
and
and
out
adc
and
pusha
aad
jae
mov
sub
mov
mov
push
dec
xor
imul
jge
adc
mull
stos
cmp
insb
mov
add
and
cwtl
xor
pop
sbb
jl
aad
scas
dec
cli
xor
popa
xchg
push
or
subl
push
jns
inc
xor
insl
imul
mov
pop
or
in
jge
inc
cmp
data16
out
into
push
add
movsl
xor
mov
das
jge
or
xor
sbb
xchg
fisubrl
xor
popf
xchg
loopne
popa
and
aam
lock
arpl
pop
inc
mov
sti
pop
into
ja
xchg
stc
fisubl
cmpb
adc
mov
xor
lock
push
cmpsl
int
adc
jle
aaa
sarb
jmp
xchg
aaa
jb
bound
enter
xchg
aad
pop
jns
idivl
jb
int
cmpsb
int3
add
vunpcklpd
xor
mov
or
xchg
inc
xor
scas
sub
inc
mov
insb
ret
je
cmpsb
scas
fbstp
push
push
mov
pop
push
jno
xor
dec
imul
mov
dec
rcr
int
pminsw
cmp
fdiv
int3
dec
je
sbb
mov
leave
pop
pop
xor
xlat
ja
xchg
xor
fistps
xor
std
stc
push
jmp
gs
fimuls
sub
or
xor
cmc
movsl
mov
mov
push
mov
cwtl
fdivs
xor
les
xor
mov
inc
inc
xor
imul
xor
pop
gs
or
inc
fnsave
xor
mov
lods
xor
aas
cmp
mov
jle
mov
mov
xchg
inc
inc
pop
shrb
inc
adc
xchg
testl
repz
jle
add
lods
push
fisubl
xor
dec
pand
ret
push
adc
xchg
xor
add
add
and
and
inc
pop
insb
pop
popf
pop
xchg
cmpsb
xor
ja
dec
pushf
pusha
int3
mov
cmp
and
push
lea
ljmp
push
cmp
ret
clc
mov
push
pop
pop
cmpsb
dec
cmp
mov
clc
in
sti
insb
and
daa
dec
xchg
dec
sub
sahf
push
xor
and
insl
cmpsl
bound
push
jbe
adc
js
lahf
inc
add
cmp
cmp
xor
imul
jo
cmp
xor
cltd
int
idivb
adc
test
sub
pop
int3
mov
popa
pop
ds
addr16
cs
inc
stc
mov
ret
xor
repz
pop
icebp
out
popf
add
sub
fs
fisubrs
dec
in
pop
rorb
fisttps
ret
mov
test
add
sbb
sub
fsubrs
stos
or
adc
and
push
out
dec
daa
push
xchg
bound
das
xor
je
xor
in
pop
test
push
push
dec
mov
out
sbb
repnz
mov
dec
je
mov
orb
adcb
lods
xor
xor
jp
test
push
or
xchg
push
jmp
sbb
imul
jnp
call
clc
xchg
scas
sub
fcmovnu
fwait
pushf
adc
xor
outsl
sub
mov
insl
mov
xor
sub
jg
push
xchg
mov
lock
push
jno
push
jo
cmp
std
adc
dec
inc
xor
push
mov
push
outsb
xor
jnp
xor
imul
mov
jg
sub
cmp
xor
insl
mov
aad
and
sbb
adc
sub
ss
or
cmp
xorb
rcrb
push
mov
int3
in
adc
sbbb
aam
fnsave
mov
sbb
xor
mov
ss
jle
adc
jns
bound
test
shlb
adcl
cs
jge
daa
jl
cli
pop
cmc
sub
std
test
mov
addr16
pop
jns
shlb
pop
repnz
andl
add
lds
data16
and
jns
mov
xchg
push
add
cmc
adcb
push
jnp
cmp
xchg
ret
enter
js
mov
add
lahf
add
cmc
jne
mov
cmp
loop
inc
or
add
xor
jno
dec
xor
addb
sahf
and
repnz
dec
cs
in
jp
xor
out
sbb
adc
nop
inc
cs
clc
test
push
aas
xor
das
mov
dec
xor
mov
xor
jb
xor
xchg
cmpsb
ficompl
xor
jns
inc
inc
xorb
mov
push
jb
xor
push
xor
inc
cmc
in
xchg
in
popf
daa
out
mov
xor
cmpsb
dec
neg
stos
mov
loop
adc
mov
repz
rclb
fxch
xchg
xchg
or
icebp
xor
daa
dec
xor
ljmp
jl
outsb
test
xor
cmp
mov
subl
inc
leave
add
imulb
icebp
pop
repnz
jb
and
lret
mov
push
dec
inc
scas
scas
jl
xorl
movsb
iret
lcall
jle
push
mov
aaa
hlt
push
aam
push
inc
addr16
push
rcll
jle
push
js
mov
cli
pop
xor
scas
xor
fnsave
push
lock
push
nop
iret
sbb
fwait
ret
xor
jle
ljmp
inc
push
xor
pop
insl
mov
pop
aad
fidivl
adc
xor
xor
xor
inc
mov
iret
loopne
pop
xor
clc
jp
sti
imulb
gs
xchg
add
xor
ss
xor
xor
ljmp
inc
lds
cmp
lcall
rcrb
adc
jae
addr16
cld
orl
es
pop
xor
or
arpl
sub
cmc
xor
repz
cmp
push
adc
fbld
out
adc
jne
aaa
xor
mov
xor
insb
inc
push
xlat
pop
push
gs
or
sbb
fs
xchg
pop
add
pop
push
aas
inc
and
outsb
jg
or
pop
push
in
xor
cmc
ret
adcl
jg
hlt
mov
cli
push
jmp
add
pop
or
mov
nop
data16
sbb
xor
jno
sub
sbbb
mov
mov
les
jge
into
pop
cmpsb
imul
dec
test
rcll
xchg
stos
add
push
fidivs
movsb
xlat
test
jb
push
imul
mov
pop
xor
or
xor
in
jecxz
pop
das
jle
clc
jmp
adc
mov
fwait
add
push
xor
popa
jnp
rolb
inc
fisubrs
call
jl
loop
pusha
add
mov
shrb
xor
push
mov
mov
call
cmp
xchg
cmpsl
mov
fisubrs
test
add
out
push
fsubp
insl
cld
and
sbbb
xchg
pop
jl
mov
jo
cmc
mov
pop
cmp
jns
sbb
icebp
xor
std
xchg
mov
fdivl
xor
outsb
fdivs
xor
stos
add
fcmovne
push
inc
adc
mov
or
lods
fildll
repz
jno
add
pop
cltd
pop
sub
fisubrl
iret
push
cmc
out
xor
xor
roll
pop
pushf
jne
lock
bnd
push
sti
adc
jae
out
mov
mov
cmp
insl
inc
xorb
loopne
ja
es
xor
hlt
lahf
outsl
xor
sub
popf
cmp
data16
loopne
jnp
mov
xchg
fisubl
xor
in
cmpsb
mov
das
cmp
or
inc
push
xchg
insb
cltd
sbbb
pop
mov
add
sbb
adc
push
subl
js
push
std
adcb
int
fisubrs
gs
xor
out
adc
into
jmp
adc
sub
or
mov
jecxz
inc
and
sub
push
lret
mov
cli
movlps
shlb
mov
fnstenv
out
push
lret
lock
shll
add
mov
mov
mov
andb
dec
mov
mov
mov
movsb
loope
push
push
mov
jmp
lea
in
lea
xchg
jp
push
imul
push
and
loope
mov
push
rcpps
lods
in
mov
cmp
push
push
push
pop
das
pusha
xor
xor
rcrl
pop
mov
or
sub
lock
push
les
stc
push
dec
cmp
jbe
cli
sub
cmp
mov
out
jecxz
push
ret
pop
outsl
ljmp
dec
sub
mov
xor
inc
into
in
out
adc
div
mov
add
jne
push
rcrl
shl
cmp
scas
loope
jb
xchg
xorl
aaa
xchg
lock
cmpsb
out
jne
test
out
push
or
sub
inc
xchg
xor
mov
or
ret
push
rolb
sub
jo
dec
loop
xor
jae
inc
cwtl
out
push
and
cli
pushl
negl
aas
sbb
pusha
out
lret
fdivp
jae
sub
cmp
ret
outsb
addl
loop
mov
jge
lea
mov
into
imul
jnp
jne
xor
jmp
jae
insl
or
cld
cs
addr16
jnp
add
imul
orb
loop
call
enter
loopne
rclb
xor
and
xchg
jo
xor
xor
cltd
aam
xor
rolb
out
daa
aaa
inc
cmp
add
loopne
inc
shrl
xlat
fsubs
lahf
imul
fmull
loope
outsl
push
insb
jns
aas
mov
jge
add
push
jae
ficompl
and
add
lahf
scas
xchg
repnz
stos
into
add
jb
push
adc
scas
nop
mov
sbb
shl
add
sub
dec
sbbb
cs
jmp
jnp
dec
pop
mov
push
sarl
data16
xchg
ret
sbb
mov
sub
and
repnz
pop
mov
mov
ja
pop
or
inc
and
xchg
pop
pop
jns
push
dec
mov
adc
pop
pop
mov
popf
divl
mov
mov
out
jmp
lahf
lcall
subb
and
sbb
es
and
addr16
push
xchg
clc
and
aas
xor
sub
data16
mov
push
adc
cs
addr16
inc
jno
addr16
iret
les
out
xor
pushf
dec
repz
fnstenv
push
jne
inc
mov
out
xchg
movsl
outsb
cmp
test
loope
push
mov
xor
or
js
adc
mov
cltd
ljmp
aaa
or
sub
aas
jno
cmpsb
xor
inc
inc
imul
cmp
jno
dec
xor
cmpsl
add
cvtps2pi
pop
pushf
in
inc
outsl
inc
lock
pop
push
and
in
sbb
xchg
push
cwtl
clc
stc
outsl
jo
inc
ss
and
enter
test
xor
test
divl
mov
xchg
jae
xor
push
push
inc
or
js
scas
push
fidivl
xchg
daa
aad
test
push
outsb
outsl
dec
adc
stos
outsl
xor
xchg
xor
leave
rdtsc
adc
cs
jo
repz
mov
adc
xchg
or
mov
pop
ljmp
les
in
movsl
enter
push
out
out
xor
int
mov
stc
xor
jg
lods
mov
outsl
repnz
jmp
adc
push
mov
mov
push
scas
aam
mov
mov
mov
jb
aam
aad
sahf
jae
mov
xor
enter
testl
out
sbb
in
mov
dec
xchg
add
scas
sub
cmpsb
sbb
inc
in
adc
inc
test
loope
or
test
sti
mov
test
inc
pop
pushf
jbe
push
pop
xchg
push
scas
pop
cmp
xor
notl
pop
cmpsl
jge
das
icebp
adc
sbb
mov
ret
inc
lea
inc
mov
pop
pushf
aaa
mov
data16
mov
push
call
jno
push
ljmp
iret
popf
and
and
scas
lret
je
lock
sub
sub
mov
iret
push
movsb
sub
aas
int
mov
xor
rcrb
lds
les
ror
fwait
inc
push
flds
or
mov
aad
mov
xor
sbb
adc
ss
ja
es
push
sub
shl
mov
sub
lret
pop
push
lcall
xchg
test
fnop
and
jae
pop
sbb
fisttpl
into
xchg
xor
mov
pusha
mov
gs
push
xor
sbb
or
stc
xchg
cmc
mov
fimull
arpl
sbb
mov
outsb
rorl
fs
stos
sarb
clc
jle
cmp
xor
cltd
ja
xor
xchg
xlat
into
addr16
sub
inc
or
in
imul
in
addr16
call
loope
inc
sbb
lds
adc
mov
cld
and
decl
mov
movsb
jbe
sub
and
movb
dec
cld
xor
mov
xchg
sub
jns
or
xchg
daa
cmp
mov
xor
xchg
xor
push
mov
imul
push
outsl
inc
pop
xor
adc
cmp
rolb
test
xchg
mov
inc
mov
int3
jecxz
jge
inc
popf
lods
sbbl
sbb
lods
adc
xor
mov
fimull
or
lock
shrl
mov
jae
jne
add
xor
xor
mov
insb
es
and
iret
jnp
into
pop
fidivs
test
fs
mov
clc
dec
xor
not
xor
divl
mov
fwait
sbb
sub
mov
mov
mov
inc
js
mov
int
test
loopne
rclb
adc
orb
or
enter
dec
mov
shlb
arpl
adc
je
fdivrl
adc
xor
ret
add
les
jp
xchg
adc
cmpl
cmpsl
mov
jle
mov
hlt
mov
push
fisubrs
jb
int3
test
gs
stos
xor
repnz
lea
flds
lcall
mov
inc
addl
adc
repnz
inc
out
add
push
scas
stos
sbb
lcall
or
xchg
or
cli
inc
inc
and
shrb
ffreep
mov
test
xor
cli
adc
xor
mov
iret
ja
mov
xor
shrl
xchg
adc
xchg
xor
sub
rcrb
xor
inc
push
das
fs
push
xchg
jl
loop
aaa
aaa
and
and
adc
sti
and
jbe
xor
ds
mov
jl
sbb
mull
xor
xchg
pop
outsl
test
xor
inc
pop
test
jge
xor
movsl
xchg
mov
adc
rorb
adc
cld
repnz
out
fwait
inc
xchg
jecxz
inc
sub
push
ljmp
jg
sbb
cmpsl
cs
dec
pusha
mov
sub
add
out
loope
jae
sbb
repnz
inc
cmp
sub
mov
loope
xchg
mov
mov
cli
or
xor
lret
stos
outsl
sbb
testb
jp
test
cmovg
pop
iret
popa
addl
ljmp
mov
xchg
sub
mov
mov
pop
inc
pop
mov
fdivrs
mov
inc
xlat
loop
xchg
lret
rorl
inc
mov
lret
outsl
sub
jb
repnz
push
mov
sbb
or
out
cltd
mov
cli
mov
xchg
lods
and
sbb
out
das
lock
fdivrs
loopne
aam
lods
test
adc
xchg
pop
add
sahf
inc
lea
sbb
push
stc
jne
sbb
ljmp
jo
out
aad
adcb
xorb
movsb
jae
push
push
jns
mov
fdivr
dec
sbb
mov
loopne
xchg
sub
in
les
test
xor
cld
aam
dec
xchg
dec
jnp
out
push
jb
les
xchg
mov
lods
outsl
and
mov
sub
xor
cmpxchg
fsubs
mov
xchg
or
popl
inc
adc
jns
or
popa
sbb
push
sbb
mov
mov
mov
jb
cmp
ljmp
xor
lret
addb
ret
fwait
out
adc
and
cs
lods
xor
cmp
insb
fwait
dec
sub
lock
push
repnz
push
push
js
movsb
push
divl
fcmovb
bound
mov
sbb
cmp
arpl
rcrb
imull
popf
mov
xchg
in
vzeroupper
cmp
cwtl
bound
fdivr
lods
dec
xor
xchg
ret
rclb
lods
ret
xchg
sti
push
sar
jmp
sbb
mov
sub
movsl
sbb
cmp
cld
cmp
scas
and
cmc
and
sbb
pop
push
push
pop
jle
inc
mov
cld
adc
lds
iret
pop
repnz
js
sahf
jns
push
fsubrs
leave
insl
pop
xchg
adc
pop
push
movsl
fstps
int3
idivl
rolb
dec
adc
xor
insl
cmp
mov
loop
and
ljmp
jg
mov
pop
les
in
lahf
cmp
and
push
mov
mov
xor
or
addb
mov
sbb
mov
jl
xchg
or
xor
lcall
std
xor
sub
adc
je
in
lds
bound
fcmovu
xor
xlat
jns
mov
hlt
or
cmpl
add
pop
cmp
enter
mov
cmp
aaa
xor
clc
loop
jo
jle
mov
andps
or
outsl
insb
and
roll
je
push
pop
fnstenv
lret
jbe
mov
mov
inc
loopne
lret
sbb
adc
mov
mov
mov
adc
jb
xor
rcr
add
popa
iret
arpl
xchg
xor
lahf
imul
test
pusha
iret
lea
xor
jae
wbinvd
lods
xchg
or
gs
add
pop
int
inc
into
cmp
inc
push
fidivs
stos
inc
inc
sbb
add
out
jns
lcall
cmp
data16
adc
aam
ljmp
fsubrs
adc
loop
jae
and
xchg
sahf
mov
std
cmp
pavgw
fdivl
add
fisttps
mov
and
mov
je
jnp
inc
jg
or
cmp
cld
adc
arpl
xchg
test
sbb
fsubrs
movsb
adc
jg
push
push
hlt
mov
xchg
adc
mov
and
lcall
and
mov
mov
sbb
sbb
repz
xchg
movsb
adc
addr16
jns
push
jnp
adc
cmp
shlb
push
cmp
xor
xlat
pop
in
scas
add
shlb
sub
mov
or
imul
test
jbe
lock
mov
xchg
sub
and
rorl
mov
ret
lds
mull
push
iret
insl
pop
sbb
aaa
inc
cmp
jno
cld
ret
push
gs
fsubs
inc
jb
rcll
je
test
ret
jbe,pn
push
clc
mov
into
and
mov
cmpsl
fcmovbe
stos
jle
lock
iret
add
sti
fisubrs
push
adc
cli
test
sahf
or
mov
aam
add
enter
in
inc
xor
pop
lret
push
cs
testb
cmp
sub
xchg
xchg
test
icebp
fcoms
or
or
aaa
xor
pusha
addr16
adc
add
scas
movsl
cmp
xor
insl
adc
mov
leave
mov
pop
cmc
sbb
lods
sub
movsl
stos
hlt
lahf
ss
les
pop
mov
sub
mov
adc
in
ljmp
jae
fstpt
xlat
out
movsb
push
and
and
push
nop
cmp
shr
push
push
icebp
pop
je
imul
dec
push
pop
mov
xor
add
cld
jp
in
inc
mov
jne
push
mov
lods
jnp
rcrb
lret
inc
sub
into
jb
lcall
mov
adc
xchg
xor
test
mov
out
xchg
imul
mov
fcoms
sub
and
fcompl
out
xchg
inc
xor
test
mov
xor
repnz
aad
xor
mov
pushf
xchg
add
and
in
fucom
ja
cmp
pop
lret
and
dec
imul
in
xor
cltd
inc
pop
bound
sahf
xor
std
sbb
mov
mov
stos
sahf
or
xor
sbb
mov
lock
ds
xor
xchg
pop
mov
pusha
cmp
sub
cltd
mov
in
jne
loopne
jbe
ret
push
js
shlb
pop
jne
xor
shr
xor
test
cmp
xor
and
jecxz
jbe,pt
xor
out
das
dec
scas
testl
dec
scas
mov
lret
je
inc
xchg
mov
fcomps
mov
adc
inc
mov
sbb
mov
xor
into
stc
cli
lods
mov
in
push
mov
cmpb
and
ss
fcomp
call
mov
adc
ret
jb
loop
repz
insb
push
cmp
jmp
xor
xor
scas
push
sar
xor
push
je
shrl
xor
in
sub
in
cmp
pop
jp
aad
loopne
add
jae
or
cld
and
inc
pusha
xchg
xor
mov
fisubrl
mov
add
adc
das
xor
mov
xor
sbb
and
pop
js
scas
pop
test
arpl
cs
inc
dec
and
dec
jno
jo
andl
into
xchg
pop
push
xor
rorb
mov
scas
push
pop
loope
and
fcompl
in
or
incl
bound
stc
icebp
sbbb
popa
jmp
cmpsb
outsl
loope
xor
xor
loopne
mov
add
and
ja
insl
adc
push
xchg
movsb
or
jb
rclb
sub
repnz
dec
fsubrl
imul
hlt
jo
shll
aaa
daa
sbb
add
cmp
jp
iret
mov
xor
icebp
ret
movshdup
outsb
push
out
pop
and
xor
push
push
adc
xorl
adc
jg
dec
aad
pushf
xor
jge
push
imulb
scas
mov
in
in
stos
xlat
xor
mov
xor
add
xchg
push
aad
int3
std
pop
clc
lcall
push
xchg
push
ja
xorl
icebp
insb
push
sub
jmp
jbe
mov
and
andb
and
lods
jle,pn
lret
mov
rcr
iret
cmpsb
jl
jne
inc
sub
ds
xchg
or
popa
xor
dec
push
adc
xor
js
mov
or
xor
sti
xchg
lahf
jle
xor
aad
xor
in
jb
xchg
or
inc
pusha
flds
cltd
or
js
imul
cmc
and
rolb
and
loope
pusha
xorb
fcoml
mov
jns
mov
aad
xlat
jmp
lfs
andl
xor
dec
pop
mov
push
gs
add
mov
in
sahf
shl
or
and
nop
imul
pop
ret
mov
mov
jae
xorb
clc
jp
push
add
add
inc
mov
int
pop
hlt
push
nop
mov
fcmovnu
imul
je
xor
and
es
subb
jns
lret
test
xchg
out
into
lret
inc
inc
jns
mov
subl
fdivrl
jg
mov
xor
mov
push
xor
xchg
std
das
shrl
into
gs
mov
ret
inc
aad
cmpb
add
call
jne
mov
mov
in
ljmp
adc
cmp
inc
mov
arpl
dec
push
repnz
in
pop
xor
or
mov
out
je
sub
cli
sti
cmc
ja
add
inc
cmpb
pushf
sbb
loop
xor
lods
jl
arpl
and
push
out
add
sub
aaa
fnsave
mov
out
pop
push
jmp
mov
sub
pop
fdivrl
dec
rcr
pop
jnp
mov
add
pop
or
hlt
mov
call
in
insb
pushf
or
inc
adc
sub
stos
pop
cmp
ds
hlt
push
sub
cmp
ss
ja
scas
jmp
xchg
dec
push
das
lcall
cmp
cs
repnz
dec
repz
jge
jmp
push
add
rdtsc
inc
je
mov
inc
shlb
and
jae
adc
dec
mov
jno
roll
add
pop
mov
push
test
xchg
cmp
je
scas
xor
bound
push
repnz
push
adc
divb
push
bound
out
daa
or
inc
lahf
ret
ret
mov
inc
jno
lea
subb
jp
xor
cmp
or
inc
jp
in
mov
pminub
pop
aad
in
cli
dec
stc
cmp
mov
sub
lds
add
cmp
repnz
out
lret
pop
shll
cmp
adc
sbb
push
cmc
mov
mov
aas
mov
es
inc
rorb
inc
mov
mov
dec
xor
lahf
inc
enter
retw
push
mov
movl
in
lods
sub
xor
imul
fcomip
xchg
xor
cmp
fwait
mov
movsl
push
mov
aaa
testb
add
out
addr16
cmp
or
xor
out
sbb
out
xor
dec
mov
ljmp
orl
cmp
cmp
test
dec
outsl
gs
and
sbb
xor
lock
sbb
cmp
or
or
das
xor
jno
dec
push
gs
cmpsl
dec
or
push
pop
xlat
outsl
cwtl
xor
mulb
test
cmpsl
gs
cs
and
aas
rorb
and
lods
fistps
je
pop
xchg
mov
jge
lock
sarl
subb
in
xchg
and
adc
xor
push
pop
icebp
out
stos
jae
clc
dec
inc
add
repnz
add
inc
sbb
movsl
adc
std
pop
lock
ljmp
in
sbb
jmp
or
inc
xor
xchg
loopne
je
mov
inc
cmp
mov
inc
inc
ficoml
ljmp
pop
jae
inc
lock
mov
mov
adcb
mov
push
cmp
cmp
dec
lret
push
out
mov
cli
jnp
fldl
push
shll
cmp
pop
mov
lahf
leave
arpl
lcall
inc
xor
mov
daa
int
dec
mov
scas
cmpsl
imul
ljmp
mov
push
loope
sub
jae
sub
inc
ds
xor
adc
pop
cmp
icebp
movsl
cltd
and
jbe
cld
xor
out
lds
and
ljmp
outsl
bound
push
call
int
sbb
cmc
add
std
adc
xchg
inc
xor
mov
mov
xor
pushf
adc
xchg
cmp
xor
iret
jno
jne
dec
pushf
xor
fsubs
jge
out
xor
mov
inc
xchg
mov
xchg
std
inc
dec
mov
cwtl
inc
xlat
fidivl
ja
cmpsb
data16
fsubrs
xor
pushf
mov
xor
xchg
and
pop
ret
stos
dec
and
pusha
jns
test
inc
loopne
adc
cmc
or
data16
sbb
and
mov
pop
in
hlt
jl
cs
xchg
std
or
inc
adc
ja
dec
nop
stos
dec
sbb
aas
sbb
shll
or
and
or
jns
cmc
fnsave
dec
rcrl
xor
cmp
xchg
and
mov
mov
xor
iret
cmpsb
popa
and
pop
mov
cmp
cmp
leave
popa
les
repnz
xchg
cmpsb
sub
mov
dec
jae
add
add
jp
std
sub
icebp
lods
and
push
sbb
rorb
sub
or
and
pop
out
mov
daa
insl
popa
mov
xor
inc
dec
add
sub
push
aad
sub
insb
cmpsb
xor
adc
mov
add
and
fs
sbb
or
decl
jne
cmp
popa
adc
aas
dec
icebp
addb
leave
jmp
xor
addr16
lcall
pop
aam
mov
lods
lock
jae
xlat
fisubrl
xchg
cmpsl
sub
lcall
push
cmp
xor
in
leave
push
mov
cmpsb
fidivl
cmpsl
adc
cmp
xor
mov
addr16
sbb
and
popa
xor
adc
mov
lods
cmpb
shlb
jb
adc
xchg
jne
pop
xor
repnz
pop
scas
sbb
or
test
xorl
sub
cmp
xor
sbb
cltd
dec
xor
dec
push
movsl
cmp
cmp
jo
imul
xchg
jmp
daa
sub
cmpsl
xor
fstpt
setl
pop
sbb
mov
pusha
addl
mov
out
out
or
or
clc
xchg
imul
xor
jecxz
jge
iret
adc
mov
push
jbe
loope
orb
imul
es
mov
mov
out
fisttpl
repnz
fbstp
aad
sbb
aad
pop
les
lods
mov
nop
popa
xor
pop
sbb
loop
lret
imul
mov
xchg
popf
imul
xchg
pop
leave
inc
cmp
mov
popf
cli
mov
shll
pop
shlb
out
push
inc
push
xor
out
jnp
dec
or
add
lds
push
test
inc
rorl
ljmp
call
dec
pop
je
xchg
xor
cltd
ljmp
sbb
lahf
aas
xor
fstpl
jmp
ret
xchg
xchg
inc
or
popf
pop
cmp
mov
or
das
inc
adc
or
sahf
leave
mov
fdivl
adc
cwtl
mov
xor
mov
inc
xor
add
into
mov
fisubl
les
aas
lds
fisubrl
outsb
fcomip
andl
jb
nop
stos
sbb
fdivs
jno
int
jecxz
lret
mov
test
in
or
sub
outsl
lods
inc
mov
sbb
sbb
xor
mov
or
add
xor
int
xor
sbb
and
push
out
xchg
adc
lret
pushf
insl
test
adc
outsb
and
mov
xchg
std
inc
or
jae
inc
repnz
enter
mov
xor
push
in
sbbl
mov
mov
push
adc
adc
mov
jns
xchg
cmp
pop
inc
in
pop
je,pn
or
xor
test
fildl
sbb
xor
mov
out
or
mov
add
pop
mov
std
or
clc
lahf
xor
adc
xacquire
shrb
andl
sbb
jb
add
xor
lret
ret
jno
push
jnp
cmovle
inc
lahf
ret
push
mov
mov
push
mov
push
push
loop
xor
cld
xchg
pusha
xor
sbbb
and
fdivl
iret
arpl
or
ret
mov
lods
jl
lock
dec
ffree
xchg
scas
pop
inc
in
mov
out
clc
xor
mov
xchg
push
ret
repnz
imul
push
jno
xchg
jne
mov
adc
sarl
clc
or
xor
push
sbb
shlb
mov
sub
inc
out
shlb
je
xchg
lahf
ret
cmp
mov
adc
sub
lret
adc
fcomip
cs
push
das
or
fwait
cmpsb
and
mov
cli
insb
inc
lock
xlat
xchg
fs
in
ret
mov
je
inc
push
les
lock
les
xchg
sahf
inc
sbb
xchg
push
nop
jbe
adc
pop
push
inc
push
mov
sbb
pop
roll
divb
adcl
ret
xchg
mov
jmp
pop
add
mov
push
es
mov
cmp
insl
shrb
out
inc
out
call
aaa
ja
push
stos
mov
cmpl
xor
and
lds
stc
mov
shll
int
mov
lea
mov
out
sub
icebp
cltd
mov
mov
insb
sub
stc
mov
testl
push
xor
or
pop
mov
push
scas
push
pushl
cmpsl
mov
mov
pushf
push
insl
mov
pop
xor
push
pusha
xor
push
push
push
xchg
mov
lods
test
dec
mov
xor
cmp
xchg
add
sub
cmc
sbb
iret
mov
pop
jmp
dec
lret
imul
adc
pop
sub
pop
js
push
xchg
ret
push
dec
out
mov
test
rcll
cmp
lods
cli
adcb
xor
fisubs
icebp
arpl
aas
inc
inc
enter
push
xor
clc
stos
into
ja
mov
jg
mov
mov
nop
sub
loope
stos
mov
inc
rolb
xor
dec
gs
mov
int3
xor
fwait
pop
aad
out
cmpl
jge
add
or
inc
pop
ret
or
jo
pop
fwait
out
ss
ljmp
sub
inc
addr16
and
pop
lret
and
jae
out
add
lret
daa
mov
pop
ficomps
pushf
pusha
out
andb
iret
rol
movsb
mov
xor
aas
xor
lods
fisubs
cs
jmp
cmpsl
adc
adc
inc
xor
stos
clc
mov
scas
xor
fwait
push
popa
test
fld
add
andl
inc
and
lock
sarl
dec
ja
inc
push
mov
mov
outsl
push
mov
lahf
lock
call
add
fwait
icebp
xor
fiadds
dec
xor
fbld
inc
and
inc
pop
xchg
jge
xor
das
data16
pop
rcrb
int
mov
pusha
je
pop
sub
cli
xor
adc
mov
out
rolb
xor
mov
mov
outsb
jecxz
outsl
pop
xor
leave
mov
sbb
roll
cmp
cs
dec
jb
aaa
jbe
fmulp
push
movsb
cmp
pop
test
cld
and
and
jl
xor
xor
adc
stc
notl
dec
add
enter
pushf
in
or
jb
fists
sbb
and
cmpsl
shll
repnz
xor
insl
xchg
outsl
mov
pop
sub
cmp
fdivrs
xchg
sbb
fwait
sub
mov
dec
xor
rorl
and
xor
add
loope
fnstsw
aam
lret
mov
movsl
xor
ljmp
jmp
movsb
lea
dec
js
decb
xor
icebp
mov
inc
sti
xor
lods
mov
pop
and
cmc
pop
lahf
std
cwtl
or
pop
lret
pop
ficoms
and
add
sbb
xor
mov
loopne
xor
and
fsubl
mov
cmpl
dec
sub
xor
pop
sahf
cmpsb
rcrl
cmpb
jmp
lods
lahf
add
dec
sub
dec
cmpb
push
mov
repz
xor
xor
pop
mov
dec
rcrl
mov
dec
push
mov
adc
dec
inc
jle
outsb
adc
lcall
fs
imul
xor
push
or
out
adc
out
adc
and
aaa
mov
mov
xor
outsb
mov
sub
inc
aaa
cs
outsb
sub
dec
xchg
mov
mov
push
in
mov
mov
mov
sub
repnz
outsb
ja
jb
sbb
inc
imul
cmc
repz
xor
mov
mov
push
ret
inc
ss
sbb
data16
scas
mov
mov
testb
mov
jbe
dec
jno
stos
sub
inc
xchg
jb
adc
in
testl
sub
shrb
shlb
imul
mov
jp
pushf
cmp
mov
mov
xor
cmc
test
jmp
sub
and
mov
mov
test
jp
das
scas
sub
stos
fdivs
and
shlb
cmc
xor
and
and
and
sbb
mov
mov
xor
sub
jle
sbb
cltd
stos
xor
mov
sbb
push
xchg
insl
xor
xor
jo
cmp
out
rorb
and
mov
lock
xor
dec
adc
jae
xor
and
cmp
lods
cmp
insb
in
shlb
dec
clc
jb
push
jmp
cs
jno
das
and
lret
mov
in
push
push
mul
movsb
and
lock
loopne
mov
dec
mov
dec
mov
or
dec
das
aas
outsl
lahf
dec
imul
mov
fisubs
loope
bnd
cmpsl
js
negl
add
mov
scas
mov
xchg
mov
and
mov
sahf
das
jo
add
push
lret
xor
jno
sub
dec
div
bound
pop
cli
imul
stos
adc
shlb
ljmp
xor
push
ret
loopne
push
mov
and
repnz
jno
cmc
arpl
insl
add
shl
jmp
std
repnz
inc
repnz
pop
xchg
or
repz
popa
insb
xlat
and
mov
xor
xor
or
scas
pop
add
dec
fs
stos
pop
and
xchg
sub
cld
mov
xor
sbb
sbb
xor
cmp
repz
jnp
add
xchg
xor
mov
daa
in
sub
pop
mov
mov
call
pop
subb
stc
rorb
pop
sub
push
xor
and
xchg
inc
sbb
cli
xor
inc
ja,pn
push
adc
bound
jge
fwait
aam
inc
and
mulb
mov
push
and
mov
shl
bound
mov
jno
pop
xor
mull
bound
mov
sbb
sahf
rsqrtps
adc
ds
pop
jne
imul
push
lods
outsb
dec
mov
mov
dec
sbb
xor
scas
mov
or
and
shrb
pop
mov
xor
sbb
jbe
nop
dec
stos
lahf
scas
bnd
pusha
inc
ljmp
jo
lods
repnz
inc
mov
and
mov
push
hlt
push
pop
aaa
repnz
or
and
loop
dec
mov
stos
imul
jmp
sub
stos
xor
cs
and
jle
inc
sub
repz
xor
xor
mov
add
sbb
inc
jae
div
cmp
jle
imulb
pushl
mov
push
cs
push
and
es
ds
cmp
stos
jbe
sbb
mov
jb
jmp
je
xor
push
dec
outsb
dec
jmp
aaa
push
repz
ljmp
sbb
mov
inc
repnz
jmp
shll
inc
sti
mov
pushf
out
mov
mov
dec
cmp
into
mov
int3
imul
and
mov
int
jnp
push
sbb
lcall
push
sbb
push
cmc
outsb
mov
lcall
jle
insl
push
sbb
or
pop
jo
scas
stc
sbb
push
cmpsb
outsb
xchg
inc
lcall
jb
scas
jo
pop
push
adc
scas
lcall
jmp
cltd
push
cwtl
outsb
inc
ss
jae
and
outsb
mov
lcall
pushf
sbb
ficompl
jbe
and
outsb
mov
cs
push
lcall
mov
cmp
int3
lcall
or
enter
gs
lcall
jb
scas
inc
sbb
push
loopne
iret
jge
insb
push
sbb
scas
mov
outsb
push
or
xchg
scas
inc
mov
rcrb
push
push
outsb
mov
dec
jo
scas
ljmp
xor
jo
outsb
jb
mov
sbb
push
shrl
lcall
fwait
sbb
fstps
jne
and
adc
sub
add
jo
scas
lea
cmp
sub
lret
lcall
sbb
push
mov
fs
lcall
jo
scas
aas
sbb
push
fildll
jl
imul
or
outsb
push
pop
lcall
inc
dec
mov
sbb
push
shrl
outsb
lcall
lods
sbb
dec
outsb
cli
jmp
jo
scas
xor
in
aam
cmpb
push
shlb
pop
sbb
outsb
in
lcall
scas
call
outsb
je
lcall
jo
scas
dec
sbb
push
out
outsb
popf
mov
fldt
ja
es
lcall
push
pop
mov
sbb
push
mov
sub
push
jnp
push
lcall
sbb
push
outsb
cmc
mov
inc
push
xor
scas
sarb
mov
insb
mov
sbb
jo
dec
lret
bound
adc
div
je
pop
jbe
inc
lock
ds
jbe
movsl
lock
lods
xchg
jp
cmpsl
sub
testb
add
push
push
outsl
and
push
mov
adc
lock
push
lock
inc
jbe
fs
xchg
jbe
mov
inc
add
xor
inc
jmp
mov
pop
adc
mov
xor
sub
adc
shlb
iret
jae
in
and
arpl
adc
mov
mov
push
mov
mov
xor
ret
hlt
fwait
or
xor
in
ja
add
jge
mov
and
xor
and
outsl
and
adc
and
add
dec
mov
addb
stos
jbe
lods
xchg
jp
xlat
rep
out
jp
xor
jp
xchg
xor
push
lods
push
inc
jp
push
jno
fs
jp
stos
xchg
lods
roll
mov
xor
push
xchg
into
shlb
sub
bnd
adc
mov
add
and
jmp
push
pop
add
and
add
popa
andb
mov
xor
shll
or
add
and
and
add
subb
leave
pop
add
loope
and
outsl
add
aas
and
inc
jbe
shl
add
lock
loopne
pop
add
cs
ds
mov
jge
scas
jbe
sahf
lock
mov
dec
outsl
and
jmp
add
add
push
push
outsl
and
push
mov
adc
lock
cmp
insl
jp
aad
fistpl
xor
lea
outsl
and
adc
lock
ds
mov
xor
lds
or
add
pop
ficoms
outsl
and
push
sar
adc
and
add
dec
sahf
dec
adc
lock
ds
mov
xor
ret
sbb
xor
subl
shlb
sub
and
mov
fwait
stos
lods
repnz
or
dec
or
push
test
je
lods
sbb
sbb
dec
lock
mov
cmp
sub
add
xchg
mov
outsl
and
jnp
add
jbe
fwait
lock
mov
int3
fwait
adc
adc
lock
mov
xor
xor
jp
mov
push
mov
push
cmp
push
ds
push
sbb
sub
stos
and
add
cmpl
in
and
sub
xor
and
pop
and
mov
xor
stos
and
add
popa
mov
xor
or
sub
pop
lock
xor
push
xor
test
xor
add
clc
or
add
add
push
daa
and
add
mov
and
dec
sbb
je
lods
int3
cmpsl
jbe
fdiv
clc
jp
test
out
call
dec
sbb
and
je
lods
mov
es
outsl
and
addb
leave
push
jbe
xor
mov
data16
xchg
xchg
mov
jp
std
lods
dec
out
stos
addr16
lods
mov
xor
stos
es
sbbb
adc
mov
sub
push
jno
mov
mov
ret
mov
jge
xor
adc
mov
adc
xchg
ss
cmpb
icebp
repnz
and
jo
ss
loop
enter
in
jb
ss
cld
inc
fadds
and
or
jnp
sbb
lods
lret
mov
test
fwait
scas
and
mov
fsubl
xchg
jmp
cs
pusha
dec
inc
ja
jae
jp
fwait
ret
outsl
mov
mov
je
lock
cmc
mov
sub
jae
jne
push
jmp
mov
jb
pop
mov
sbb
push
mov
clc
stos
xlat
and
mov
iret
stos
mov
sub
lods
clc
dec
jmp
cmp
int3
jp
mov
jbe
scas
jecxz
insl
dec
bound
jle
imul
mov
cmp
mov
out
dec
adcl
jle
inc
sub
shll
mov
mov
lcall
mov
je
scas
adc
mov
xor
inc
in
sub
and
pop
mov
mov
lahf
add
imul
jno
ja
xor
xor
xor
jmp
mov
or
and
out
dec
jo
inc
dec
sub
sbb
inc
mov
push
fwait
je
outsl
lcall
jbe
jl
lock
dec
jmp
repnz
sbb
repnz
mov
fwait
mov
out
lcall
jbe
lods
dec
out
jo
dec
push
jmp
pop
insb
xlat
and
mov
sub
mov
imul
sub
or
pop
cwtl
mov
cmp
popa
push
repz
pop
push
popa
lahf
js
xchg
jp
scas
mov
sbb
lock
outsb
imul
je
dec
ljmp
add
lock
test
je
lock
or
aas
or
and
je
dec
ja
loop
clc
lahf
add
and
mov
push
inc
sub
push
in
lahf
notl
lahf
jbe
adc
mov
dec
xor
lahf
ret
add
jb
lret
je
lods
sub
lods
insb
in
jmp
cmc
push
cwtl
mov
xor
dec
mov
rorb
jne
mov
inc
hlt
cmp
xor
je
lock
mov
push
mov
lock
mulb
xor
movsb
jbe
clc
push
sbb
dec
cmp
sub
mov
sbb
dec
pop
adc
jle
inc
mov
das
push
mov
lock
das
mov
and
sbb
lahf
adc
and
std
stos
scas
imul
loope
cmc
or
loope
jle
and
push
mov
pop
scas
push
add
sbb
sub
icebp
mulb
and
lods
lcall
jbe
sbb
rorl
repz
sbb
nop
je
dec
sub
ljmp
adc
scas
jb
jno
pop
imul
sbb
outsl
mov
mov
lods
insb
shl
mov
cmp
sub
push
jo
dec
xor
sbb
push
sbb
and
and
mov
xor
xor
adcb
outsl
imul
cs
mull
pop
mov
clc
jo
scas
xchg
sbb
outsb
in
cs
sbbl
test
lods
and
jno
out
fdivs
hlt
dec
stos
in
mov
mov
lods
push
scas
jns
sbb
pop
push
dec
lods
add
mov
mov
ficoms
sbbl
pop
push
dec
sub
xor
jbe
into
adc
fwait
scas
ret
clc
sub
dec
test
push
pop
mov
mov
jmp
out
jne
scas
add
stos
enter
je
adc
xor
ret
mov
sub
and
pop
and
mov
imul
testb
add
test
arpl
ljmp
pop
pop
jbe
or
push
mov
xor
adcl
cmp
jns
popf
xor
clc
mov
push
or
in
popf
lods
mov
push
dec
mov
stos
mov
fidivs
adc
sbbl
push
repnz
mov
pop
stos
xor
jbe
adc
sbbl
xor
lcall
imull
mov
and
decl
shlb
push
and
push
test
mov
and
pop
stos
jns
pop
dec
pop
test
inc
and
jnp
fldl
xchg
pop
imul
mov
out
test
mov
xor
stos
in
popa
outsb
inc
ja
clc
mov
mov
iret
ss
cmc
xor
and
bound
shll
cmp
jmp
ljmp
push
out
adc
fisubl
cmp
mov
mov
push
cmc
mov
dec
ja
inc
inc
cmp
clc
jbe,pt
or
inc
std
mov
sub
sbb
or
pop
adc
cli
mov
push
jne
stc
fs
mov
jo
aas
push
dec
out
push
insb
jecxz
js
mov
call
xchg
jne
and
mov
cs
cmc
cwtl
mov
sub
jae
adcl
xchg
mov
scas
ucomiss
mov
js
mov
xchg
jp
xor
repz
test
inc
sub
mov
rcrl
dec
lods
clc
pop
jmp
repnz
ucomiss
jmp
jo
sbb
mov
lods
imul
lods
jle
and
mov
pop
outsl
push
dec
cltd
mov
and
xchg
cld
in
js
js,pn
xlat
sub
mov
mov
lods
sub
js
outsb
insl
loope
mov
in
and
push
cltd
sub
stos
sub
insb
scas
xor
adc
push
in
jle
inc
stos
sub
and
shr
mov
or
icebp
mov
je
sahf
icebp
cmpsl
das
sub
insb
jp
mov
xchg
push
jle
inc
imul
jmp
mov
mov
jg
and
fnstenv
jbe
sahf
jb
xor
repnz
jp
lods
test
jl
jb
out
js
jl
mov
notb
cmp
js
cs
and
test
clc
lcall
jbe
test
jbe
push
or
and
stos
negl
or
add
jmp
lods
mov
ja
mov
lods
repz
cmp
and
and
cmc
sbb
mov
mov
clc
dec
cs
and
mov
mov
lods
outsl
jmp
pop
dec
lods
jbe
sub
jmp
or
cmp
cwtl
push
mov
pop
jno
sbb
lahf
sub
and
fldpi
xor
and
je
dec
mov
sub
jecxz
jne
das
and
mov
out
or
and
lret
adc
inc
jbe
or
nop
sbb
dec
mov
inc
mov
mov
xor
ds
jbe
stc
dec
scas
pusha
pop
dec
lods
je
add
and
add
das
mov
push
lods
cmp
scas
je
lock
pop
ljmp
jbe
aaa
leave
outsl
in
or
jno
sub
adc
daa
and
sub
daa
mov
pop
ljmp
jae
mov
rcll
sub
mov
rcll
aas
js
rorl
xchg
cmc
xlat
jmp
insb
lock
mov
mov
lock
insl
sub
repz
jbe
lock
inc
push
stos
cmp
sub
inc
mov
lcall
fs
and
lahf
jne
mov
adc
ja
cmp
popf
jne
mov
push
push
lods
lahf
test
jne
mov
add
sbb
pusha
push
popf
jne
mov
movb
imul
jne
jb
out
out
or
out
test
or
stos
addr16
repz
mov
and
mov
lcall
jbe
xchg
jl
sbb
mov
bnd
dec
xor
lahf
mov
and
mov
inc
sub
and
mov
lret
inc
jo
dec
mov
adc
pcmpeqb
or
push
repz
lahf
out
bnd
sbb
xchg
xor
xor
mov
pop
xor
lahf
insl
out
sub
cmpsl
jbe
iret
pop
mov
scas
dec
insl
adc
fstl
pop
repz
or
lea
lea
sub
sbb
mov
mov
xor
sub
jle
push
mov
sub
sub
push
mov
sbb
sbb
sub
inc
cmpsl
jmp
and
adc
jbe
enter
sbb
inc
lock
outsb
cs
or
and
push
jno
pop
scas
subl
mov
outsw
mov
sub
in
or
or
sti
je
dec
sub
xchg
inc
and
push
and
repnz
data16
imul
imul
outsb
push
cwtl
mov
imul
jmp
test
lahf
xchg
add
repz
ljmp
ljmp
je
jnp
jns
jnp
mov
mov
inc
jmp
test
and
or
mov
je
lock
movsl
insb
pop
aaa
dec
mov
adc
dec
clc
sub
mov
jbe
scas
mov
adc
ss
inc
movsl
sbb
mov
fwait
mov
mov
push
push
jno
ss
jne
mov
sub
dec
xor
adc
mov
sub
mov
je
scas
gs
dec
jbe
inc
lock
and
inc
jbe
xor
push
jmp
jae
xchg
xor
mov
outsb
hlt
movsb
or
and
outsl
inc
das
jb
xor
je
lock
cmp
xor
je,pt
mull
mov
mov
sub
and
mov
xor
sbb
lock
lcall
cmc
sub
jo
sbb
imulb
xchg
icebp
sbb
ljmp
xchg
outsl
sbb
mov
int
jno
xchg
dec
lock
cmp
sbb
mov
sbb
and
pushf
fwait
out
loop
jo
dec
jb
fiadds
inc
lods
sbb
ficomps
mov
popa
fwait
push
out
lcall
stos
inc
lods
cmp
xchg
xor
mov
inc
mov
loope
in
jle
mov
push
insb
lahf
mov
imul
and
mov
mov
lods
mov
jmp
imul
xor
xor
jp
cmp
jp
inc
jo
ja
jae
dec
push
ja
xor
mov
cmpsb
sbb
mov
cmp
mov
fwait
xor
out
mov
stos
mulb
fildll
scas
xlat
sbb
cltd
ljmp
iret
push
divl
xlat
xchg
js
incl
out
repnz
stos
jo
jbe
iret
imul
out
sbb
mov
and
inc
mov
int3
and
mov
lcall
xor
out
jbe
idivl
sbbb
ds
jbe
testl
lahf
or
stos
mov
or
mov
test
cmp
sub
jno
mov
lcall
cmp
sub
cmp
cmp
je
pop
fdivrs
sub
imul
jecxz
jb
insb
cltd
sub
pop
stos
hlt
sbb
mov
jmp
dec
jbe
gs
ljmp
in
mov
mov
jo
pop
mov
mov
xor
lods
sub
and
mov
or
mov
insb
adc
xor
cli
fdivs
mov
das
and
out
rep
call
jbe
scas
call
ret
mulb
ljmp
das
jbe
push
dec
xor
dec
stos
lahf
add
and
push
stos
out
cmp
dec
das
jmp
sbb
and
sbb
fdivs
mov
insl
inc
stos
das
mov
out
rep
jmp
stos
ss
jbe
mov
mov
jne
jmp
fisttpl
lahf
enter
sbb
inc
enter
sbb
sbb
js
ds
je
sahf
les
sbb
jo
lock
mov
cmp
push
sub
inc
ljmp
ret
lock
mov
cmc
jle
inc
ja
outsl
and
outsl
dec
mov
test
inc
cltd
mov
jg
and
jbe
xchg
jp
lods
test
mov
jbe
cmpsl
and
sbb
stos
icebp
mov
scas
sub
mov
adc
push
sub
orb
xlat
add
cmc
mov
lods
sbb
jne
in
push
sub
in
cltd
mov
repnz
jp
mov
lods
enter
push
jmp
sbb
cmp
inc
sbb
dec
fwait
jmp
fnsave
push
stos
sub
xchg
sub
dec
sub
and
dec
sub
adc
mov
xor
repnz
outsb
aaa
sub
jle
and
stos
negb
mov
mov
insb
push
lock
outsb
ss
cwtl
lods
jle
and
push
xor
aas
js
fnsave
dec
add
push
dec
lahf
jb
mov
jp
mov
jo
pop
cmp
adc
push
and
mov
je
scas
and
xor
jle
push
xor
xor
lret
push
pop
mov
lret
sub
lahf
xor
lahf
repnz
jp
outsl
xor
mov
popf
or
jp
jmp
pop
mov
ds
and
mov
sbb
iret
lock
outsb
xor
inc
stos
inc
xor
mov
sbb
sub
push
dec
xor
dec
mov
lahf
daa
add
sbb
mov
lods
out
inc
jmp
das
stos
or
jle
and
push
jne
pop
mov
pop
sarb
adc
je
cs
mov
fs
dec
mov
jo
jnp
je
lock
fs
sub
out
sub
and
fs
lcall
jbe
xchg
dec
sub
xchg
lahf
movl
lods
mov
mov
lods
jae
jmp
sub
aaa
push
scas
test
ljmp
sbb
xorl
repnz
jp
lock
lods
iret
xchg
mov
lods
dec
bound
jle
push
sub
bound
dec
and
fbstp
sbb
xor
xlat
jg
mov
push
movsb
das
mov
pop
mov
imul
push
sub
out
xor
lea
stos
lock
aad
mov
stos
cltd
sub
stos
jo
jbe
iret
lcall
jle
push
mov
lods
lods
mov
je
lock
lds
repnz
mov
sub
je
dec
mov
jg
jmp
rolb
inc
cmc
sbb
inc
rcrb
sub
jmp
scas
cmp
or
jb
jbe
mov
adc
scas
in
sub
or
leave
jbe
in
out
pusha
leave
dec
mov
lahf
test
and
adc
xorl
mov
cld
push
imul
and
imul
sub
jle
sub
mov
mov
jle
aaa
dec
sub
push
stos
jle
inc
ja
and
xor
mov
lcall
jbe
xor
pop
ljmp
xor
dec
js
sub
sub
and
cmp
and
ja
mov
pop
jp
mov
jbe
scas
pop
testl
push
and
push
enter
jns
inc
xor
negl
lods
mov
lods
insl
inc
jmp
jne
cwtl
sub
push
testl
xor
xchg
and
push
das
jae
je
js
mov
daa
mov
mov
fs
scas
add
repz
mov
cs
imul
push
or
test
jo
scas
negb
movsb
push
xchg
pop
inc
sbb
push
loop
shrl
sbb
lods
push
pop
jo
scas
cli
sbb
push
cmpsl
outsb
xchg
inc
lcall
addb
adc
scas
lcall
in
sbb
aaa
lcall
je
and
xor
mov
mov
lcall
popf
sbb
lcall
sbb
push
outsb
mov
stos
push
mov
jo
scas
lcall
push
sbb
outsb
mov
push
jo
scas
cmc
or
cs
lcall
jle
insl
push
sbb
or
pop
jo
scas
stc
sbb
push
cmpsb
outsb
xchg
inc
lcall
jb
scas
jo
pop
push
adc
scas
lcall
jmp
cltd
push
cwtl
outsb
inc
ss
jae
and
and
push
ret
pop
lcall
pushf
sbb
ficompl
jbe
and
outsb
mov
cs
lcall
mov
cmp
int3
lcall
or
enter
gs
lcall
jb
scas
inc
sbb
push
loopne
iret
jge
cmc
jg,pn
pop
and
pop
je
lods
daa
repz
je
outsl
stc
lods
mov
or
push
sub
add
jne
andl
daa
jo
mov
in
lea
jnp
andl
lods
push
jbe
mov
cmc
into
lods
jmp
aam
lock
sub
jmp
mov
in
cmp
divb
cld
data16
add
insl
add
repnz
js
sub
test
jae
not
das
and
int3
stc
sub
cmp
in
mov
sub
mov
cld
je
lret
repz
imul
jae
insb
push
dec
push
mov
jmp
shll
sub
enter
add
out
in
nop
jo
shrl
sub
add
jbe
out
cmc
add
jno
ret
dec
mov
repz
lods
sub
fcompl
xor
mov
lea
jmp
pop
sbb
ret
xlat
push
je
imul
ja
fdivrl
cmp
out
insb
testb
js
jns
lret
jge
jb
out
inc
shl
pop
mov
loop
and
dec
icebp
jae
and
sub
inc
stos
inc
xchg
mov
dec
in
push
clc
xchg
mov
stc
and
out
mov
push
jle
mov
sub
add
dec
insl
clc
jae
je
in
rcrb
cld
ret
push
arpl
out
leave
and
xor
push
inc
and
add
and
mov
mov
ds
xchg
push
push
clc
xchg
push
les
mov
enter
lea
js
cmc
and
push
push
call
jg
push
out
inc
pop
or
jmp
pop
jnp
int
je
jne
xchg
ficomps
aaa
or
stc
xor
mov
push
and
push
mov
mov
shrl
test
fwait
ljmp
imul
jbe
cmp
push
mov
clc
cmc
pop
je
in
fistpl
dec
ret
push
arpl
das
sbb
iret
out
xlat
pusha
push
mov
and
stos
stc
and
add
dec
adc
jmp
je
in
add
subl
mov
and
into
shll
cmp
lea
mull
and
popf
icebp
ret
inc
xor
jmp
lret
ss
in
pop
out
pop
lcall
mov
dec
js
fdivs
scas
out
mov
add
dec
mov
jae
je
in
adc
push
out
fcom
outsb
in
lea
js
andb
mov
out
jmp
push
and
popa
repnz
in
xchg
xor
dec
inc
stos
clc
clc
cmp
xchg
stc
js
cmpsl
and
iret
mov
lcall
lock
sub
pop
cli
push
dec
mov
dec
out
jae
and
sub
lods
stos
inc
mov
push
ds
sbb
jg
hlt
pop
fs
mov
xlat
and
out
pop
stos
jo
out
inc
adcl
mov
pop
out
sbb
push
sbb
shll
into
sub
stc
and
lods
xchg
sti
mov
xor
jbe
mov
outsl
mov
dec
jno
andl
push
lock
sub
mov
shl
scas
sub
pop
or
push
cld
mov
stos
pop
push
dec
arpl
icebp
ret
and
lods
lea
in
out
popf
fwait
ret
pushl
or
imull
repnz
nop
and
jnp
in
jbe
xlat
imul
and
divb
outsl
lret
test
add
push
andl
push
jne
cmp
subl
mov
sbb
in
and
xor
sub
lea
adc
cmc
sub
xor
mov
and
jmp
jno
sub
mov
push
sahf
inc
repz
ja
sub
add
jb
adc
or
icebp
fstpt
popf
insl
mov
je
mov
jns
xchg
xor
std
stos
mov
push
lea
cmc
repnz
or
je
outsb
or
add
imul
je
add
add
outsl
add
and
lods
dec
dec
call
add
jmp
int
push
hlt
pushl
lods
out
out
enter
out
ljmp
cmc
ret
push
push
cmpl
dec
jno
jg
lock
in
xlat
pop
mov
neg
out
movsl
jmp
jb
and
ret
and
ret
jbe
in
push
dec
add
sub
insl
add
in
jp
jp
data16
lods
push
mul
mov
mov
adc
imul
out
je
jbe
imul
xor
mov
xorl
jne
mulb
jo
pop
or
pop
testb
ljmp
inc
adc
test
fs
or
data16
int3
jo,pn
xor
lock
mov
insb
iret
lods
cmpsb
dec
in
jae
imul
jb
fldln2
jne
icebp
add
in
add
out
sub
and
loop
addw
push
js
imul
idivl
sub
jle
enter
enter
mov
push
xor
mov
imul
je
and
cltd
jg
sbb
out
sub
cmpsb
push
mov
jmp
and
jae
iret
insb
hlt
hlt
cmp
push
mov
out
mov
sbb
mov
mov
jge
insl
jecxz
and
rol
mov
add
and
and
add
and
or
and
xchg
subl
shlb
cli
pop
jecxz
push
and
mov
and
enter
mov
push
or
mov
push
stos
and
data16
insl
inc
push
jecxz
dec
rolb
jecxz
xchg
push
push
cmp
pop
std
mov
ds
jbe
and
mov
pop
inc
add
jecxz
jmp
arpl
mov
push
mov
xor
enter
dec
je
mov
mov
jbe
and
add
leave
cmc
and
adc
xor
and
outsl
cmpsl
adc
jecxz
icebp
xor
sti
jmp
shlb
pop
inc
inc
mov
cmp
push
mov
xorb
dec
add
ljmp
xorl
loop
cmp
xor
add
hlt
mov
dec
add
adc
dec
rclb
test
mov
dec
and
push
and
outsb
stos
inc
dec
je
pop
xorl
outsl
mov
out
adc
dec
xor
inc
cmp
jbe
lea
in
into
jp
add
jmp
xchg
arpl
and
mov
adc
and
push
outsb
mov
or
stc
mov
ds
jbe
sub
nop
mov
mov
lcall
pop
stos
cli
dec
push
xchg
adc
pusha
mov
stos
mov
jns
mov
mov
cmp
je
xchg
and
bound
adc
mov
mov
aaa
sarl
inc
repz
and
xor
repnz
mov
push
incl
push
jno
inc
pusha
xchg
xor
push
mov
jbe
repnz
mov
enter
jp
pop
jl
aad
push
pop
fidivs
and
pusha
mov
push
dec
adcb
inc
fwait
shll
cmp
test
loope,pt
push
adc
popa
add
stos
das
lods
lds
jmp
jge
push
dec
and
pop
stos
mov
jg,pt
fnsave
sarb
cmp
lods
xchg
loopne
dec
mov
ljmp
sti
dec
push
outsb
adc
pop
mov
pop
jg
mov
mov
and
mov
ljmp
sbb
cmp
and
mov
push
xchg
jge
lahf
popf
adc
into
xor
push
out
lock
fidivs
decb
test
dec
lods
or
dec
inc
xor
pop
and
add
subb
adc
loop
test
stos
jbe
and
add
mov
and
pop
jmp
icebp
jecxz
ds
cld
pop
outsl
pop
dec
jecxz
xor
and
push
stos
add
push
ja
jnp
push
and
mov
cltd
jecxz
mov
mov
jbe
and
pop
mov
push
xor
jp
inc
xchg
cmp
jmp
xchg
dec
cmp
mov
jecxz
test
jmp
dec
and
stos
stc
dec
pop
inc
pop
add
scas
mov
adc
jle
orb
orb
shlb
push
shlb
jb
and
xchg
insl
sbb
shlw
or
sbb
in
imull
xor
clc
add
mov
shll
aaa
jge
mov
js
outsb
enter
cwtl
stos
or
js,pt
sub
pop
mov
jmp
pushf
fiadds
dec
ss
pop
and
sbb
adc
push
and
cmp
jl,pt
jge
clc
lret
outsb
fsubs
inc
sub
pop
jb
push
sub
scas
xchg
stos
jbe
push
clc
ja
mov
sub
pop
ljmp
clc
in
stc
xor
das
mov
sub
clc
outsl
jle
stos
in
je
scas
ret
lock
dec
xor
add
je
insb
lods
dec
mov
jno
inc
jmp
and
das
dec
out
lahf
lock
ss
repz
das
sbb
out
lahf
jno
inc
subl
jmp
xor
push
repnz
out
push
icebp
dec
pusha
and
lea
inc
outsl
push
sbb
nop
repnz
and
ss
in
sub
hlt
js
sub
lock
xchg
jbe
scas
mov
xlat
stos
das
or
imul
popa
jae
cmpsb
sub
xor
dec
sub
lods
pushl
xlat
imul
sub
xor
loop
je
inc
hlt
jno
and
ss
ja
push
andb
shll
mov
lret
in
lcall
lods
mov
xor
push
dec
repnz
cs
dec
mov
or
sub
sub
das
insb
and
ds
mov
imul
inc
leave
sub
ret
imul
pop
sub
ja
hlt
cs
add
cmp
cmp
bound
sub
mov
es
imul
loopne
out
mov
fwait
and
ret
bound
repz
stos
mov
sub
mov
jp
pop
adc
sub
mov
ss
xor
aaa
sub
and
ja
mov
xor
dec
xor
jecxz
sbb
and
cs
xor
stos
dec
subl
add
aaa
adc
imul
stos
mov
adc
adc
outsb
push
mov
jbe
xor
push
jae
hlt
jb
and
and
mov
das
scas
lock
imulb
dec
icebp
jbe
imul
notl
sbb
mov
sbb
push
ljmp
sbb
push
mov
je
stos
mov
sbb
push
jo
das
pop
outsb
scas
sub
lods
push
sub
scas
push
sub
outsb
test
xor
sbb
jb
mov
jo
scas
out
sbb
push
lods
outsb
sub
jo
scas
test
outsb
mov
mov
scas
mov
lock
insl
outsb
in
push
cmp
jo
scas
mov
mov
mov
insl
sub
jbe
xor
hlt
xor
out
lods
lcall
mov
jb
and
push
lock
scas
imul
scas
je
jg
movsl
scas
clc
pop
push
add
insb
mov
jne
cmc
jb
sbb
jo
scas
in
sbb
jmp
jb
out
push
and
add
insb
mov
mov
jae
nop
push
mov
jo
das
sbb
push
scas
outsb
insl
sub
jbe
daa
sub
lods
push
mov
lcall
negl
mov
je
xor
stos
mov
sbb
xor
scas
mov
outsb
sub
jo
scas
sub
jmp
stos
outsb
js
lcall
xor
cmc
push
mov
jb
outsb
xor
lcall
out
sbb
in
lcall
jmp
outsb
xor
jno
push
das
jo
scas
lods
sbb
cmp
mov
jae
jbe
popf
mov
sub
jne
xor
cs
sub
in
push
stos
outsb
ja
lcall
jo
scas
out
sbb
outsb
imul
push
jmp
imul
stos
jno
sbb
xorl
clc
push
jne
cmc
outsb
jb
mov
sbb
mov
insl
in
lcall
xor
xor
repz
loop
mov
std
out
and
pusha
ss
loop
mov
cmp
push
mov
test
ljmp
cs
movsb
xchg
arpl
xor
sbb
sub
in
cmp
cmp
sbb
dec
pop
or
adc
int3
lods
xor
out
push
mov
cmp
rcr
pushf
sub
sbb
and
xchg
xchg
je
jno
xchg
adc
sub
sub
xor
fadds
repz
je
or
ds
mov
mov
aaa
ja
hlt
out
xchg
jmp
adc
stos
xlat
stos
sub
insb
pop
in
sub
mov
lods
mov
pop
dec
dec
mov
lahf
outsl
lock
mov
lds
push
repnz
sti
xor
sbb
pop
xor
cmp
jbe
mov
arpl
jnp
xchg
xchg
fisttpl
mov
xlat
add
cmp
inc
lahf
dec
lea
cmp
fnstcw
xchg
cltd
mov
and
add
leave
ss
addr16
cmp
inc
mov
pop
push
fnsave
fsubrs
xor
hlt
aam
lods
xor
aas
xor
addr16
sub
bound
addr16
fbstp
enter
mov
lea
cmp
std
out
push
lahf
mov
ret
adc
out
xorb
dec
xchg
mov
and
sub
lcall
pop
mov
xor
push
punpckhwd
mov
xchg
lret
imul
das
mov
xlat
in
fdivs
lcall
fidivrl
cmp
inc
pop
pop
pushf
xchg
inc
pop
popa
jne
sbb
sub
inc
fs
addr16
pop
jbe
mov
and
lock
inc
es
mov
lock
mov
xchg
push
pop
jae
cmp
div
jbe
mov
xchg
divb
mov
push
add
pop
es
cmpsb
and
mov
sub
leave
scas
pop
push
aad
js
xor
icebp
jae
add
inc
inc
inc
daa
push
test
mov
inc
push
enter
test
push
mov
test
scas
fs
mov
outsl
mov
mov
dec
fnsave
ja
inc
fdiv
repz
pop
inc
aas
jbe
sahf
sbb
push
aas
shll
dec
ja
jno
xchg
es
das
push
jne
clc
cwtl
lods
js
cmp
xor
sub
sub
dec
cmc
test
dec
sbb
icebp
ja
mov
xor
daa
xor
stos
mov
subl
inc
lods
imul
addl
mov
repz
repz
outsl
or
xor
pop
xor
std
shlb
repz
clc
mov
pusha
jns
ds
and
scas
sbb
insb
xchg
das
mov
imul
sub
ret
loop
imul
lods
lock
mov
in
in
xor
outsb
dec
pop
lahf
sbb
ljmp
sub
test
js
xorl
je
cmc
mov
sti
or
test
aaa
pop
inc
cwtl
lret
jnp
imul
mov
jle
mov
and
sub
inc
mov
fisttpl
pop
aaa
scas
xor
sti
and
out
ss
dec
mov
test
sbb
jmp
mov
push
pop
dec
out
inc
scas
ljmp
jle
mov
dec
ljmp
pop
or
ja
jno
repnz
jno
jle
imul
sbb
dec
movsb
iret
lret
sahf
insb
out
sbb
repz
stos
cmpb
mov
add
insb
std
lahf
jnp
xchg
aas
jl
xor
sbb
dec
insl
inc
icebp
outsb
outsl
mov
sti
cmp
lahf
mov
and
jbe
in
ret
sbb
scas
lcall
add
test
pop
push
stos
cmp
shlb
out
jbe
in
ret
lcall
test
mov
subb
outsb
scas
mov
jle
lcall
cmp
lods
rcrl
scas
in
pop
out
shlb
insb
jbe
in
add
fisttps
ds
imul
push
daa
jne
out
scas
lods
sub
scas
jecxz
jne
nop
filds
sub
inc
dec
imul
push
inc
ljmp
stos
jecxz
adc
in
sub
stos
sbb
dec
fwait
sbb
icebp
dec
and
insb
sub
push
xor
dec
mov
xchg
std
pop
js
test
imul
xor
sub
sbb
sbb
cmp
jno
sub
or
jno,pn
js
jmp
jo
cmp
fucom
dec
jmp
cltd
scas
aaa
shlb
mov
dec
imul
std
mov
fnsave
and
scas
mov
and
lods
dec
loop
repz
mov
adc
scas
adc
or
in
dec
push
mov
mov
xchg
aam
push
in
cmp
test
shrl
fisubl
xor
sbb
pop
outsb
mov
nop
xor
leave
inc
aam
jl
jmp
decb
dec
cmp
clc
push
mov
jnp
xor
dec
dec
cmp
pop
and
inc
aaa
jne
cmpsb
imul
jg
mov
pop
jmp
dec
mov
mov
mov
fidivs
sahf
mov
sbb
scas
lods
pop
dec
and
das
sahf
mov
sbb
fwait
mov
pop
out
xor
scas
jle
inc
aas
dec
scas
lock
mov
inc
xor
pop
lret
pop
sub
jno
rcll
sub
mov
xor
dec
imul
xor
mov
cmp
dec
mov
out
xor
cwtl
lods
lret
sub
insb
pop
fisubrs
pusha
sarb
lahf
inc
jbe
imull
xor
pop
and
pusha
das
pop
notl
xor
lahf
jmp
dec
mov
aas
sbb
pop
je
dec
jg
shrb
stos
inc
xor
adc
push
or
scas
mov
popl
mov
pop
rcrl
insb
mov
lahf
das
dec
das
or
scas
sbb
sub
jo
in
mov
pushf
sub
dec
dec
stos
lret
dec
sub
jno
into
loope
mov
aas
jmp
dec
jg
mov
js
popa
lahf
jne
outsl
fs
jg
lret
cmc
je
dec
aas
rolb
aam
cltd
xor
xor
inc
pop
mov
or
dec
jne
lock
dec
outsl
lahf
loop
cmp
and
bound
lods
mov
ljmp
out
push
mov
mov
outsl
imul
sub
aad
movsb
dec
xor
xor
mov
pop
lock
lahf
sbb
repnz
mov
mov
jg
dec
and
dec
jg
mov
scas
sub
fwait
mov
in
loop
stos
mov
in
xor
iret
js
fsubrs
cmc
cltd
incl
jb
imul
jbe
pop
jnp
lcall
cmc
out
add
xor
cwtl
push
push
or
fbstp
lahf
lret
mov
scas
dec
dec
clc
xlat
das
xor
ljmp
inc
mov
push
jg
cld
add
pop
jmp
mov
inc
push
lock
mov
add
xor
sahf
movd
aad
xor
sub
fnsave
fwait
xchg
sbb
cmp
push
push
les
jb
ret
test
mov
mov
pop
out
mov
dec
mov
das
je
ljmp
ja
cwtl
mov
outsl
call
pusha
mov
and
push
xor
cmpsl
jb
enter
or
outsl
jno
arpl
lret
dec
jo
pop
stos
jne
inc
popf
outsb
mov
mov
jb
jae
popl
adc
pop
lods
into
push
sbb
xor
mov
jne
jb
adc
mov
gs
push
outsb
outsb
mov
loop
mov
xor
outsb
sti
sbb
push
fistps
lea
mov
in
scas
inc
je
cmc
mov
push
daa
mov
jnp
and
xor
add
hlt
cmpl
movsb
dec
fmuls
inc
hlt
adc
sub
sbb
push
sub
repnz
xor
shlb
lea
adc
aas
hlt
stos
mov
dec
mov
imul
insb
add
stos
ljmp
shlb
add
cmp
loop
mov
scas
mov
in
lret
push
sub
inc
popa
loope,pn
int
mov
fstpl
sub
push
lcall
fcmovnu
cltd
jecxz
and
pop
and
sbb
shll
pop
jno
dec
xor
pusha
nop
dec
repnz
adc
movsl
and
repz
and
aas
lods
push
mov
rorl
popf
test
into
ret
mov
xchg
dec
lock
mov
adc
mov
outsb
add
outsl
insl
mov
ljmp
inc
bound
inc
js
adc
dec
and
outsb
xor
jo
inc
outsl
mov
outsb
outsb
scas
lcall
jbe
cmpsb
lods
add
mov
jo
mov
icebp
sub
sbb
mov
mov
xor
pop
cmc
pop
shl
mov
call
fmull
jo
fimull
xor
sahf
push
es
std
add
insl
and
sbb
mov
inc
lcall
out
xor
sahf
insb
or
lea
jo
mov
outsb
rcrl
push
dec
imul
cmp
xor
fisttpll
scas
jns
mov
adc
scas
xor
pop
in
loop
lods
xlat
cmp
mov
and
pop
jnp
mov
sub
aaa
out
dec
mov
push
adc
xchg
sub
call
and
sub
aad
mov
jae
sub
fistps
shrl
mov
bound
stos
push
push
xchg
xor
loope
and
js
div
fwait
mov
bnd
es
mov
sbb
jl
rorl
ja
lret
pushf
sub
outsl
out
outsl
repnz
push
jmp
repz
dec
xor
mov
mov
jmp
lods
in
outsb
rdtsc
mov
je
pushf
in
ret
inc
out
je
mov
and
adc
roll
imul
and
and
jbe
in
push
lcall
mov
pop
repnz
mov
push
dec
pushf
jbe
fstp
and
outsl
inc
mov
push
inc
jmp
dec
and
pop
lods
out
imul
stos
outsl
sbb
add
add
pushf
dec
inc
xor
scas
sbb
mov
jecxz
sub
mov
je
sahf
lods
dec
xor
je
out
jp
mov
and
movsl
sub
sub
mov
rcll
sbb
fstl
js
imul
pusha
xor
sbb
dec
insl
out
outsl
ds
stos
clc
mov
push
xchg
lods
mov
pop
sub
xorb
jb
pop
or
cmp
imul
in
push
scas
adc
cmc
js
ret
pushf
mov
in
nop
sub
repz
shlb
stos
jbe
in
ret
mov
mov
jle
inc
jmp
imul
jge
and
xchg
inc
lahf
xor
icebp
nop
and
scas
nop
jbe
sahf
dec
test
js,pn
and
jbe
in
inc
cmp
add
aaa
jbe
js
jle
inc
aaa
outsb
mov
roll
add
push
insb
insl
xor
subb
mov
stos
jbe
icebp
subb
xchg
sub
call
outsb
xor
xchg
mov
ret
sub
cmp
aaa
and
sbb
cmp
push
mov
sub
notb
into
jecxz
sub
inc
mov
xor
push
mov
icebp
mov
jno
or
in
mov
out
push
cmpsb
adc
and
pop
cmpl
mov
cmc
pop
jae
jle
mov
lret
xor
sbb
insb
in
cmp
pop
outsl
sbb
xor
movsb
mov
inc
cmp
loop
repz
adc
lods
inc
mov
icebp
bound
mov
jle
xchg
and
test
repz
sbb
pop
out
out
xchg
lret
dec
xor
aaa
insl
popf
outsb
push
jl
xor
mov
sarb
mov
outsb
lock
scas
cmp
bound
adc
movsl
movsl
outsl
fistps
jb
mov
xor
sbb
nop
out
sahf
or
sahf
mov
mov
pop
decl
out
push
test
jbe
subl
xor
mov
xchg
mov
pop
cmp
aaa
inc
xor
hlt
ret
xor
inc
fcmovne
mov
sub
lret
push
and
dec
push
adc
sub
aas
bound
dec
jb
mov
sub
cmpsb
dec
xchg
scas
scas
in
mov
shll
push
jno
sub
cs
bound
mov
xor
and
jb
mov
mov
bound
mov
icebp
ljmp
shrl
popf
jnp
cmpsl
sub
pxor
out
stos
xor
sub
lods
paddsb
icebp
pusha
cmpl
das
movsl
in
rol
je
insb
adc
inc
mov
dec
pop
pop
stos
jnp
pop
rorl
repz
jl
in
jp
lahf
dec
mov
lea
xor
sbb
mov
in
push
sahf
mov
and
xchg
je
insb
mov
push
sub
lock
loopne
ljmp
dec
pop
mov
xchg
pushf
lea
adc
cs
cmc
fwait
pop
shll
xor
popf
scas
bound
or
insb
movsl
sub
dec
jecxz
scas
mov
jp
sbb
xorl
fidivrs
mov
ds
fbstp
shrl
rcll
mov
in
jno
jp
xor
dec
push
int
testl
test
xor
mov
outsb
scas
scas
jbe
out
lcall
push
pop
mov
in
dec
out
lret
repz
jo
push
jns
sub
xor
cmpsb
sub
mov
cmp
stos
jno
dec
jae
icebp
outsb
jno
cmpsl
push
dec
or
push
arpl
jmp
adc
xor
inc
cmp
call
xor
xchg
mov
jb
xor
lret
mov
push
mov
pushf
push
adc
add
mov
test
lcall
add
add
lods
jecxz
shrl
lret
inc
or
dec
push
cmp
cmp
adcl
dec
in
rorb
mov
testb
push
dec
outsl
outsb
repz
xchg
mov
mov
cmp
in
xor
mov
cmp
fwait
repnz
adc
rep
repz
pop
adc
mov
xor
shr
xor
adc
fidivs
xor
mov
sub
cltd
hlt
cs
cmp
sbb
aaa
cmp
std
mov
shrb
cmpb
mov
pop
pop
inc
bnd
dec
add
pop
les
das
cmp
jo
fxtract
push
and
out
stos
dec
sub
lret
mov
push
add
push
lods
and
cs
insb
mov
mov
sub
dec
jbe
inc
mov
mov
fwait
adc
out
sub
and
push
mov
outsl
inc
mov
and
xchg
loope
xlat
shlb
lahf
adc
in
cmpsl
hlt
cwtl
outsl
sub
loope
fisttpll
pop
lods
mov
hlt
repnz
push
sub
push
scas
shll
mov
dec
outsb
or
dec
push
sahf
mov
in
in
jno
push
ja
xor
je,pn
mov
aaa
scas
mov
divb
repnz
outsb
inc
pop
lock
ror
outsb
adc
push
xrelease
imul
sub
outsl
mov
data16
stos
jb
dec
insl
out
push
lea
xor
sahf
outsb
cmpsl
mov
stos
sbb
stc
cmp
xor
or
jno
inc
sbb
jb
mov
mov
dec
repz
ret
daa
sub
lock
sahf
leave
shl
scas
and
in
mov
icebp
xchg
xchg
mov
mov
pushl
sub
dec
push
repz
repnz
pop
repnz
fldcw
hlt
repnz
xor
repnz
xor
jo
xor
jo
or
push
mov
mov
lods
cmp
and
mov
jge
repz
data16
push
in
lret
ret
xor
mov
pushf
or
into
shlb
mov
jno
mov
js
iret
outsb
in
mov
dec
rorl
push
repz
in
sti
inc
fldt
jno
insb
mov
mov
sub
or
dec
das
mov
mov
das
mov
sub
jp
mov
out
mov
sub
sbb
push
jmp
xor
pushl
dec
insl
pop
into
sub
dec
pushf
jne
jno
in
mov
and
pop
push
and
repnz
rorl
sahf
mov
repz
cmp
adc
scas
scas
shrl
push
jo
jmp
adc
push
jno
stos
shrl
loopne
shr
dec
jno
fsubr
lods
jno
repnz
xor
sub
sti
push
fwait
dec
lret
mov
mov
jno
dec
mov
lods
addb
mov
fistpll
or
dec
insb
mov
xorl
xchg
xchg
mov
repnz
data16
xchg
icebp
or
sub
sub
sbb
les
cmc
sbb
ljmp
lods
push
test
sbb
mov
sub
cli
dec
in
mov
das
xchg
adcb
jae
add
repz
sub
std
push
pop
in
sbb
jg
or
sub
iret
mov
jp
and
mov
cwtl
jmp
popa
and
rclb
inc
xchg
inc
and
and
out
jb
push
popa
sbb
dec
pop
xor
add
xchg
mov
lods
sub
popa
out
outsb
shl
stos
movsb
lea
in
nop
lods
sbb
outsl
pop
jg
mov
xchg
pop
push
and
push
pusha
push
je
mov
jb
cld
test
movsb
pop
fcompl
outsb
cld
in
pop
jbe
pushf
pushf
fists
add
jmp
or
xchg
pop
iret
lret
mov
push
comiss
imul
outsb
mov
xchg
ja
dec
mov
mov
push
in
mov
cmc
jg
jo
lock
hlt
push
shll
cli
das
mov
xor
mov
cs
mov
mov
lods
cwtl
outsb
mov
stos
jo
push
rcll
pop
sahf
or
sbb
and
fs
out
sub
stos
das
sbb
mov
pusha
mov
nop
pop
popa
xor
hlt
push
inc
out
jbe
push
rorl
cmpl
jb
sub
jns
inc
cmp
mov
cmp
mov
mov
rol
stos
push
popf
insb
aas
push
mov
into
insb
js
mov
out
bound
lahf
jge
mov
or
jl
adc
lea
push
sti
push
fcmovnb
xchg
dec
scas
dec
inc
jo
jae
aaa
scas
pop
mov
je
jae
mov
das
mov
bound
std
jbe
xchg
dec
add
stos
insl
pop
test
in
xlat
icebp
pop
ja
lcall
stos
ljmp
push
fists
mov
adc
out
jno
lods
lret
sub
sbb
sti
push
subl
cmpsl
mov
inc
rcl
mov
jb
movsb
insl
mov
jle
dec
outsb
sub
fwait
js
cmpsl
dec
dec
xor
out
out
sahf
mov
pop
mov
or
icebp
jne
push
cmp
sub
pop
arpl
int3
mov
xlat
lea
mov
pop
xchg
sbb
lahf
pop
in
shl
jb
mov
outsb
imul
push
or
iret
repnz
je
push
mov
cmpsb
jae
dec
bnd
jno
insl
sub
mov
or
jne
mov
sahf
pop
lods
mov
mov
hlt
jmp
lods
mov
sti
rcll
inc
rdtsc
insl
push
jb
mov
push
jb
jno
dec
repz
shr
pop
dec
hlt
pop
mov
cltd
das
into
es
nop
jbe
ds
dec
js
ljmp
scas
outsl
jne
push
jae
stos
mov
pcmpeqb
repz
outsl
mov
dec
sbbb
pop
cmp
mov
pop
mov
push
std
sub
push
imul
mov
jl
add
or
sub
pop
add
dec
test
repnz
outsl
jmp
insl
outsb
pop
sub
popa
insl
std
pop
loop
pushf
cmp
insb
pop
cmc
fwait
outsl
iret
mov
icebp
xor
or
xor
mov
dec
loop
mov
jmp
imul
mov
addps
shrb
sub
mov
dec
mov
cmpsb
push
mov
jge
jbe
jno
imul
push
in
and
mov
jne
mov
ja
out
out
pop
or
jb
jge
in
sar
js
xor
daa
jle
mov
push
xor
loop
push
pop
inc
decl
jp
pop
imul
outsb
out
in
loope,pt
sbb
pop
xor
iret
insl
aad
mov
and
add
xor
movsb
aad
stos
push
sahf
das
lds
aad
xor
getsec
mov
add
lock
outsb
push
je
popa
pop
push
pusha
sbb
popa
cmp
stc
pop
jno
ds
mov
ds
sbb
imul
scas
cmp
pop
negb
dec
out
insl
outsl
ds
stos
lods
aam
xor
dec
jns
dec
push
fistpll
dec
ljmp
lods
pop
dec
shl
sbb
push
dec
cmpsb
push
jnp
in
pop
fcmovb
repnz
scas
pop
out
lods
xchg
scas
shll
pop
cmp
sub
js
push
cmpsl
push
paddd
out
pushf
outsb
stos
movsb
insl
pop
cmp
test
cmpsb
mov
ret
cmp
decl
js
jbe
pop
das
dec
jno
mov
dec
lods
dec
sub
repz
add
cmp
jbe
lock
push
xor
int3
lock
dec
popa
loop
and
dec
mov
pushl
shll
dec
dec
shlb
insb
pushf
mov
jp
ds
outsb
pop
frstor
add
dec
xor
int
and
aas
xchg
lea
pop
repz
sbb
dec
subl
iret
fbld
pop
scas
xchg
mov
mov
je,pt
sbb
jle
push
mov
outsb
dec
jno
push
sbbl
jno
sub
shlb
xchg
mov
in
sub
popf
xor
outsl
call
cmp
jbe
les
mov
dec
dec
jae
inc
ds
sbb
jg
cmp
xor
dec
push
mov
mov
push
dec
sub
cmp
mov
add
mov
ds
push
jg,pt
ds
fildl
inc
ds
outsb
ret
push
mov
outsb
jg
outsb
call
push
outsb
jl
int3
fbstp
sahf
pop
js
cmp
imul
mov
sahf
int
sahf
push
nop
sub
xor
js
sub
mov
in
cmp
jb
imul
sahf
lods
test
insb
js
sub
int
sahf
lock
hlt
push
ret
repz
and
add
mov
sahf
int3
xchg
test
adc
ds
outsb
sahf
adc
mov
xor
lock
push
cmp
xchg
hlt
xor
sbb
add
sahf
or
sub
imul
repnz
outsb
sub
mov
repz
insl
clc
ds
and
je
push
adc
xor
adc
push
mov
scas
ja
sub
jae
push
or
add
mov
sbb
and
jno
jae
xor
shl
pop
repz
fwait
dec
add
cmp
cmp
test
xchg
negb
inc
lahf
lret
lahf
cmp
cmp
pushf
lahf
in
fistps
and
jno
repnz
push
dec
sub
hlt
call
clc
dec
mov
jp
pop
ds
inc
ds
fwait
ds
push
mov
outsb
jg
outsb
clc
outsb
or
add
pop
cmpsb
std
sbb
pop
mov
dec
inc
sbb
cmp
outsb
sahf
aas
iret
jbe
cs
pop
sub
ds
add
dec
hlt
dec
jp
add
mov
or
add
and
testb
pop
mov
lds
xchg
jo
outsl
sahf
inc
ljmp
mov
mov
mov
xor
jp
scas
sub
iret
mov
outsb
mov
inc
ljmp
dec
fwait
inc
leave
mov
mov
inc
xor
jno
pop
adc
jmp
ret
fs
cmpsl
push
nop
mov
das
add
rcrl
xor
lahf
divb
sbb
insb
pop
icebp
lahf
push
mov
pop
loop
icebp
outsl
pop
lcall
xor
mov
mov
outsb
xor
lahf
jb
pop
push
ja
xor
jp
jle
jmp
push
sbb
rorl
sti
sub
mov
sbb
push
pop
adc
and
mov
pop
xor
inc
xor
aad
inc
mov
out
std
push
loopne
dec
mov
mov
lahf
pop
cmp
push
mov
ds
mov
fwait
push
jmp
mov
dec
in
lahf
sti
jns
push
scas
lret
das
adc
lea
mov
xor
repz
mov
fwait
dec
add
jg
mov
xor
inc
dec
pop
pop
lock
jp
push
dec
mov
push
sub
push
jp
pop
push
adc
outsb
cmpsb
mov
jae
mov
outsb
jmp
pop
icebp
insb
pop
in
aas
fnstenv
sub
adc
dec
sbb
xor
xor
f2xm1
addr16
jno
fsubrl
lock
xor
insl
dec
das
jg
iret
jo
pushl
shrl
imul
cmp
xchg
xor
clc
out
xor
notl
xor
sbb
pop
adc
mov
aam
xor
out
test
je
dec
repz
xor
push
mov
lahf
dec
ds
xchg
in
xor
push
mov
je
in
outsb
sti
sbb
pop
adc
les
xor
ds
ds
out
adc
jle
mov
mov
je
in
outsb
sti
sbb
pop
adc
mov
mov
fwait
outsl
ret
mov
mov
je
in
dec
sti
sbb
jg
jle
testb
in
sti
jns
fdivl
fs
xor
mov
mov
pop
cs
sahf
pop
sub
pop
stos
insb
outsb
pop
das
test
push
je
in
ds
fs
fsubrl
xorl
mov
xor
xor
outsl
into
leave
pop
in
xor
sti
sbb
push
jg
jle
mov
aam
sub
outsb
fs
lahf
push
mov
jle
mov
mov
outsb
xor
mov
inc
push
je
sbb
lea
mov
mov
je
in
sti
sbb
rorl
pop
xor
je
in
das
sti
sbb
lods
sub
sbb
pop
adc
mov
mov
xor
adc
in
pop
sti
pop
sub
in
lahf
sti
sbb
xorl
push
push
aaa
add
repnz
push
rcrl
sub
push
dec
adc
aas
mov
mov
mov
aaa
stos
outsb
into
jno
jle
mov
mov
je
in
dec
sti
sbb
outsb
jns
xor
dec
sbb
inc
pop
jp
mov
and
outsb
add
je
in
outsb
sti
sbb
outsb
adc
mov
mov
sbb
outsb
mov
cmp
stos
jecxz
fwait
outsl
in
sub
clc
ds
je
in
dec
fnstenv
sbb
push
mov
mov
adc
pop
add
outsl
mov
repnz
push
jle
mov
mov
je
mov
je
icebp
dec
sti
pop
jg
push
jg
add
je
fmull
dec
add
lahf
je
lock
jp
ds
mov
fldcw
lahf
push
je
rorl
mov
mov
je
in
aas
sti
sbb
subl
in
jo
sti
pop
push
xor
adc
jae
pop
mov
and
js
das
xlat
lods
push
sub
adc
lock
jno
mov
sbb
sahf
fwait
xor
lods
in
loope
xchg
cs
jae
movsb
mov
push
cld
pop
and
pop
or
inc
xor
or
xor
mov
lock
push
jno
mov
bnd
or
dec
sub
cmp
xchg
push
dec
pop
insb
pushf
fnstsw
push
cmp
dec
fbstp
jbe
dec
je
jno
and
cmp
mov
xor
lahf
jo
jno
cmp
mov
aam
test
repnz
aam
jae
push
jbe
ja
loope
lcall
cli
mov
mov
mov
sub
js
xor
scas
dec
shr
and
pop
pop
fdivl
loop
aas
cs
dec
lods
mov
aas
push
pop
loop
outsl
add
and
jg
insb
pop
and
lahf
jo
cs
stos
jle
andb
jp
fldl
sub
je
xlat
sub
adc
dec
or
or
outsl
hlt
pop
dec
mov
repz
sub
hlt
mov
insb
adc
fnstsw
dec
sub
das
test
lea
leave
jne
leave
cmpsb
sub
xor
jmp
inc
in
aas
mov
pop
xor
dec
mov
lods
cs
dec
jno
sbb
icebp
test
popf
inc
jns
jbe
shlb
push
in
adc
outsl
js
adc
sbb
mov
cmp
mov
es
mov
jge
aaa
repz
faddl
mov
lds
sub
subps
insl
cmp
movsbl
in
ljmp
and
pop
push
fisttps
jno
scas
jbe
into
notl
dec
sub
sub
and
xor
sub
push
adc
mov
xor
cmp
loop
sahf
pop
push
push
adc
cli
sub
ds
pop
push
repnz
add
das
mov
and
jbe
in
aas
mov
ja
sub
and
std
out
sub
cmp
dec
jmp
mov
repz
sub
dec
daa
mov
sbb
cmp
cmpxchg
jmp
shll
push
fwait
stos
adc
imul
fwait
xchg
dec
mov
mov
sbb
jno
in
lret
pop
scas
scas
gs
cmpsl
je
push
sub
and
or
stos
imul
push
in
cmp
mov
push
leave
push
imul
outsl
pusha
hlt
icebp
hlt
repnz
mov
ja
jne
stc
fidivl
insb
lods
fadds
outsb
scas
insl
js
sbb
sub
shrl
jno
movsl
dec
js
mov
ds
sbb
repz
aas
rcrb
and
dec
scas
xor
sarl
repz
fidivs
sahf
cmp
jno
dec
jno
xchg
xor
outsl
lods
or
mov
sti
out
scas
pop
adc
xor
cmp
pop
push
cmc
push
cmpsl
mov
shrl
in
and
lahf
lods
push
cmp
ja
adc
cmpsl
jmp
sti
repz
jno
ja
lea
xor
push
xor
jno
pop
mov
cmc
dec
pop
mov
jnp
popa
inc
push
icebp
cmc
and
pop
sbb
mov
test
lahf
adc
sbb
xchg
dec
das
iret
das
pop
and
jmp
xchg
jo
fcomps
mov
dec
aaa
mov
mov
ljmp
in
push
mov
dec
pop
mov
pushf
mov
dec
cmp
mov
sub
push
pop
or
cmp
out
xchg
adc
and
bound
mov
push
loope
jno
jns
in
inc
xchg
je
aad
lcall
add
test
in
dec
add
jbe
lahf
dec
rdtsc
and
mov
scas
push
jno
cld
xor
sbb
xor
fwait
mov
mov
popf
xor
sti
push
fwait
cmp
jp
xor
or
sub
and
mov
mov
pop
mov
push
pop
xor
rorl
sub
je
das
enter
repz
repz
sub
out
dec
leave
dec
mov
push
xor
ja
mov
cmp
sub
mov
xor
dec
rcrl
jae
repz
scas
xor
sub
sub
lds
adc
jo
xchg
imul
ljmp
xor
shrl
clc
cmp
dec
imul
in
das
mov
fisubrl
dec
jo
xor
jmp
dec
insb
dec
jb
aad
xor
insb
js
mov
movsl
mov
je
cld
test
pop
in
mov
dec
mov
outsb
add
pop
mov
dec
dec
lock
sub
or
sti
pop
sub
mov
mov
dec
xchg
mov
aaa
cmp
mov
jns
out
aaa
js
ja
dec
pop
and
xor
ljmp
pop
repz
dec
outsl
dec
out
dec
dec
lods
dec
jo
repz
jp
mov
in
mov
out
scas
js
mov
mov
clc
xor
xor
lods
shll
dec
rcrb
out
mov
rorb
outsb
pop
sub
insb
sbb
push
es
mov
jno
movsl
pslld
mov
xor
cmpsl
mov
jmp
nop
mov
jno
ds
mov
sub
mov
jmp
sub
push
cmovle
inc
popf
sbb
out
pop
push
sub
ficoms
pop
push
aad
fnsave
adc
xor
ss
add
push
inc
je
mov
cwtl
jno
icebp
fimull
jmp
sub
jge
mov
cmc
divb
add
cmc
jmp
pop
or
iret
cmp
pop
fidivs
pop
mov
in
imul
shrl
ljmp
lcall
psubw
and
xor
ja
repz
fisubrs
xor
pop
into
imul
jno
pop
hlt
adc
es
xor
pshufw
dec
dec
imul
outsl
call
dec
adc
outsl
lret
scas
nop
sub
insb
jmp
lock
and
mov
add
sti
out
mov
cld
dec
lcall
mov
dec
in
mov
stos
dec
fwait
aas
add
outsl
je
lock
jp
jg
mov
sahf
lahf
ja
in
sbb
ds
dec
je
in
aas
sti
sbb
pop
adc
mov
mov
pushf
mov
xor
sbb
arpl
and
jmp
mov
push
mov
cmp
jo
and
xor
jmp
mov
xchg
xor
sbb
mov
fdivrp
mov
addr16
xor
cmp
xor
sbbb
repnz
jno
mov
mov
in
mov
insb
dec
xor
repz
jl
jnp
in
lea
jecxz
jno
imul
lea
push
movups
mov
dec
pusha
jns
sub
jno
mov
mov
adc
sub
out
cli
cmp
pop
pop
mov
mov
sbb
and
scas
and
pop
inc
lcall
push
lods
jecxz
in
ret
cli
pop
inc
mov
cmp
cmc
add
cmp
xlat
xor
in
jb
sbb
insl
xor
cmp
adc
dec
outsl
inc
push
mov
mov
sub
mov
sub
aaa
sbb
mov
jbe
sbbb
dec
mov
int
fwait
scas
sub
sbb
pushl
sub
mov
punpcklbw
xor
sbb
stos
ja
jno
xchg
dec
jnp
cmp
ss
or
cmp
dec
hlt
dec
mov
fstpt
mov
rcrl
stos
jne
mov
sbb
jle
pushl
fnstcw
mov
pushl
loope
pop
lret
loop
ds
test
xor
jge
rep
add
nopl
les
mov
pop
mov
imul
jae
outsb
mov
jno
cli
stos
or
xor
xor
xor
jo
sbb
mov
push
pushf
loope
dec
pop
das
sub
sub
rolb
call
pslld
push
sub
cmp
lock
insb
jno
in
test
mov
pushf
sbb
or
shrb
bound
sti
repnz
pusha
sbb
cmpsb
aam
fimull
or
repz
mov
xlat
lods
jo
cmpsb
push
lods
sti
jo
jno
jo
xlat
cmc
lock
jno
jo
dec
stos
lds
testb
sub
push
jle
mov
sbb
insb
or
or
loopne
dec
add
inc
push
nop
jbe
jnp
cmpsb
fs
repz
lcall
xchg
xor
lock
sub
mov
rolb
mov
lods
sbb
push
lahf
jae
and
pop
mov
aas
jno
jle
repz
rorl
mov
fisubrs
sub
mov
test
jle
adc
daa
dec
mov
ja
aam
repnz
xor
add
ljmp
jnp
jno
jno
and
addr16
add
pop
test
mov
add
sub
adc
adc
xlat
clc
sub
popa
jmp
ja
or
shrb
mov
aaa
sbb
imul
xchg
aam
cs
imul
scas
xor
jo
push
int
mov
mov
mov
sbb
outsb
jmp
andb
insb
xor
add
dec
xor
jne
jns
psllq
imul
mov
call
shlb
mov
mov
insl
pop
mov
sub
test
xchg
mov
inc
stos
xor
popa
pop
fsubrl
stos
adc
or
mov
jo
and
repz
cmpsb
scas
imul
jno
aad
daa
imul
mov
inc
jno
xor
dec
sub
add
jno
cs
mov
dec
adc
mov
add
jo
pop
and
jno
xor
mov
lods
and
xor
xor
insb
mov
clc
sbb
mov
loopne
and
xor
jno
lods
dec
jno
lods
dec
mov
jbe
jns
xor
cmpl
repz
xchg
cs
jno
out
enter
mov
mov
aaa
dec
lock
mov
cmp
shlb
into
mov
scas
sub
mov
jno
jmp
cmc
je
lahf
mov
mov
jbe
mov
cwtl
jno
dec
ljmp
dec
mov
mov
psubb
jge
sbb
out
cmpsb
dec
sub
jo
xor
cli
cmp
outsb
adc
dec
xchg
mulps
xor
lcall
dec
pop
push
mov
idivl
mov
jg
mov
mov
cli
mov
cmpsl
jmp
test
xchg
cmpsb
jle
mov
in
adc
or
and
sbb
mov
mov
dec
push
test
movsl
xor
stos
xor
dec
lods
mov
pcmpgtb
shll
into
xchg
jno
jae
or
jne
pop
popf
sar
das
lods
or
mov
call
mov
dec
repnz
sub
inc
cmpl
scas
test
mov
mov
inc
cmp
mov
xor
sub
imul
push
lea
shlb
fmul
mov
cmp
adc
xor
stos
jnp
lods
add
jmp
sti
cmc
in
push
or
cmpsb
sbb
shll
int
sub
mov
stos
mov
data16
xchg
data16
outsl
xchg
sub
arpl
sub
sub
cs
test
inc
mov
mov
insl
lock
shld
xchg
xor
mov
cmpsl
jbe
dec
daa
std
dec
ljmp
jge
sahf
push
jns
and
fwait
mull
sbb
pushf
fdiv
xlat
outsl
out
int3
lret
push
push
das
adc
dec
imul
or
das
jb
pop
push
jae,pn
mov
mov
add
js
add
aad
loopne
xchg
movq
xchg
pop
in
and
mov
pop
sbb
lea
jno
imul
ljmp
dec
std
xchg
in
and
cvtdq2ps
mov
arpl
lahf
pop
test
iret
push
push
xor
loop
pop
in
lods
insl
cmp
stos
xchg
je
imull
push
imul
jno
fadds
sub
xor
add
testb
jmp
scas
mov
sbb
mov
jno
stos
xchg
mov
pop
outsb
lcall
cmp
icebp
imul
sar
or
les
in
arpl
fsts
into
mov
push
cmp
sub
arpl
out
int3
fcoml
pushf
push
pusha
dec
mov
sbb
jo
imul
sub
jmp
jge
repz
and
mov
sbb
xor
sub
xor
or
sub
repnz
pop
fucomp
ljmp
mov
lods
xlat
shll
popf
jl
xor
loopne
xchg
lock
jmp
dec
pushf
repnz
std
scas
xlat
push
adc
mov
dec
xor
out
shll
sarl
fdivl
std
jl
sub
jbe
cli
das
pop
lret
aad
mov
mov
lock
cwtl
cs
insb
out
xorl
jle
dec
cs
insl
in
mov
push
adc
mov
mov
mov
inc
shll
repnz
arpl
add
insb
add
push
cmpsl
scas
lret
outsl
sub
xor
mov
sbb
mov
push
and
std
outsl
xor
test
jo
mov
arpl
in
or
mov
cmp
jno
insl
mov
sbb
mov
push
jl
push
dec
lock
repz
or
lods
hlt
xorl
lods
push
and
je
lods
sti
sub
loopne
adc
mov
mov
sbb
pop
int
pushf
mov
mov
xor
pop
scas
dec
int
stos
in
jp
ds
mov
icebp
scas
mov
sub
sub
mov
mov
xor
ds
push
mov
mov
sub
mov
mov
jp
in
jae
mov
je
push
adc
adc
inc
mov
xor
je
in
sti
sbb
push
in
adc
push
pop
xor
sar
aad
cmp
mov
test
outsl
pushl
adc
add
je
fnstsw
ds
mov
jge
lcall
push
fstl
scas
xorl
lahf
out
push
or
mov
lret
or
cwtl
dec
xor
lods
cli
shl
sub
push
adc
fucomip
subl
sbb
mov
pop
sub
sub
js
inc
jne
push
sbb
pop
and
mov
out
in
cltd
outsb
add
sub
loopne
adc
sub
inc
je
in
sub
ds
and
repz
sbb
mov
jle
mov
mov
sbb
sub
xorl
sbb
in
sbb
dec
or
add
in
ds
movsl
mov
mov
xlat
jmp
imul
sub
push
adc
sub
mov
in
sti
sbb
push
cmp
jle
mov
mov
sbb
and
scas
push
sub
adc
jp
stc
or
jle
mov
push
jle
mov
mov
icebp
je
cli
lock
sbb
adc
imul
adc
imul
jle
adc
imul
xorl
sub
mov
imul
add
jp
jnp
mov
je
push
adc
xor
je
adc
pop
pop
jns
loopne
push
adc
lods
in
lods
jp
ds
inc
je
in
lods
jp
ds
inc
je
loopne
movsl
xor
loopne
jle
sbb
fwait
or
mov
push
push
mov
mov
and
in
jp
jle
fwait
jbe
je
int3
jp
scas
mov
mov
je
int3
mov
mov
mov
jle
lahf
cmc
push
adc
mov
mov
add
mov
lcall
int3
adc
int3
lahf
xor
dec
shll
mov
aam
jae
int3
clc
int3
sti
sbb
push
int3
adc
adc
mov
ds
inc
fs
sti
hlt
in
jp
jle
sahf
testl
ds
sub
div
sbb
jno
xchg
inc
aam
mov
jbe
stc
loopne
ja
scas
mov
sahf
inc
or
push
aas
jo
cmpb
adc
push
jle
fimuls
xchg
in
insl
pop
xor
loopne
xchg
pusha
rolb
sub
push
shll
dec
fimull
add
push
andl
pop
jo
popa
push
mov
push
pop
mov
inc
jo
pop
into
outsb
sbb
sbb
in
data16
pushf
and
mov
mov
test
sub
jb
sub
shll
fiaddl
ds
xlat
xor
jne
push
daa
mov
xor
pusha
xchg
xor
jb
sbb
mov
iret
xor
xchg
xchg
add
scas
xchg
jb
mov
xor
aam
mov
xor
cs
adc
adc
sub
in
scas
push
cs
xchg
mov
sarl
mov
loopne
pop
mov
xor
push
jb
mov
xor
cmp
dec
push
int3
jb
mov
xor
cmp
adc
addl
dec
cmp
cmp
test
push
divb
mov
xor
and
xor
sub
js
test
sbb
push
cmpsl
jb
mov
xor
mov
xor
xchg
sbb
jmp
sahf
xor
add
xor
daa
pop
jne
daa
mov
xor
push
popa
sub
daa
or
adc
jmp
mov
xor
test
daa
or
popa
mov
test
es
sub
xor
cs
push
sbb
mov
xor
dec
sbb
mov
xor
add
les
cmp
sbb
fs
roll
mov
and
cmpsb
jno
pop
sub
data16
loopne
cmp
inc
shr
mov
loop
xor
scas
daa
pop
xor
mov
push
cmp
fcomps
add
lret
repnz
mov
andb
mov
xor
xor
or
cmc
jbe
les
xor
movsb
je
xor
or
dec
pop
cmp
inc
shrl
cvtps2pd
ss
dec
jge
adc
test
iret
cmpsl
je
fadds
cmp
imul
out
lret
call
cltd
cli
fcomp
mov
xor
lret
fisubrs
inc
stos
add
shll
jbe
and
mov
adc
dec
cmp
or
inc
xchg
cmpsl
cmp
xor
lret
inc
test
out
lods
pop
sarb
or
out
xchg
aad
popf
xor
in
sub
call
bnd
mulb
les
mov
and
bswap
outsl
cs
cmp
fwait
adc
test
cmpsl
cmp
lods
fidivs
mov
incl
sbb
in
xchg
fs
cli
movsb
or
jno
mov
push
sti
jecxz
cmp
xchg
test
inc
pop
and
xor
loope
jae
mov
shlb
ja
pop
mov
adc
adc
add
stc
push
in
stc
not
mov
jb
adc
enter
inc
and
call
aam
int3
ficoml
repnz
add
mov
dec
inc
cs
push
push
push
dec
xor
aam
mov
and
xor
and
and
divb
addb
hlt
ret
dec
repz
push
ds
pusha
jecxz
and
cmpsb
xor
xor
lahf
mov
sub
bound
sbb
inc
pop
inc
jb
bound
rcrl
or
mov
fs
lds
jecxz
push
xor
mov
jno
xchg
pop
sbb
popa
cmp
add
push
mov
cmp
inc
mov
or
add
add
ret
and
inc
and
xor
or
inc
pop
fs
and
rcll
rcll
aas
outsl
insb
push
scas
xor
fmuls
mov
fcompl
and
and
xchg
inc
sbb
sbb
sbb
sub
es
dec
and
dec
dec
dec
int3
xchg
cmp
mov
xorb
jg
mov
sarb
outsb
pop
mov
scas
sahf
iret
cmp
xor
pop
mov
pushf
int
pop
mov
fwait
int3
cmp
push
mov
lcall
mov
cltd
lret
dec
js
cwtl
mov
inc
ja
xchg
xchg
inc
jbe
xchg
xchg
mov
xlat
push
inc
jne
xchg
xor
push
inc
je
fs
test
xor
arpl
js
dec
pop
jecxz
push
rcl
jle
mov
cmp
cmp
lods
and
xor
sbb
sbb
shll
test
inc
aas
dec
xor
and
and
and
mov
pop
movsl
and
ja
movsl
adc
xchg
leave
call
xor
mov
xchg
rcl
jnp
or
xchg
loop
push
and
adc
push
test
pop
adc
pop
push
mov
add
xor
dec
cmpsb
mov
mov
jo
fwait
add
scas
adc
sahf
cli
pop
and
dec
inc
push
push
xor
in
mov
imul
inc
mov
or
mov
fistpll
into
out
push
xor
sub
popf
or
stc
xor
loop
out
or
mov
fildl
addb
pop
sub
xchg
movb
adc
lods
cmp
pop
add
and
cmpsb
shrl
mov
leave
out
sub
hlt
add
cld
xchg
hlt
sbb
or
mov
rol
xor
stos
popf
aad
aaa
nop
cmp
xor
js
or
dec
mulb
mov
mov
jb
dec
dec
inc
xor
cltd
jg
add
jo
jne
adc
ljmp
mov
xor
ds
mov
pop
push
jae
adc
xor
and
mov
mov
ret
xor
fldl2t
hlt
fimuls
mov
fcoms
pop
jbe
cmpsb
push
push
sub
adc
jo
ljmp
std
fisttpll
stos
and
js
fadds
aam
xor
lret
and
into
adc
mov
jne
loope
add
xor
je
mov
std
lcall
cmpsb
jae
lods
jge
cs
jl
stc
inc
hlt
ds
mov
push
insl
xchg
in
jns
cmp
lods
xor
xchg
adc
icebp
lcall
sbb
adc
fcoms
xchg
pop
into
cmp
jnp
add
cs
pop
push
xor
jl
dec
and
cmp
mov
je
shr
sti
fisubrs
mov
mov
test
dec
pop
aad
xor
or
or
mov
sub
or
mov
fdivl
xor
cmp
push
add
ficomps
test
jo
ds
jnp
lock
cwtl
xor
xor
adc
xor
adc
inc
add
or
xor
mov
adc
jns
pop
cmp
aaa
icebp
int3
add
xor
sub
fstl
inc
call
lret
test
mov
jecxz
std
inc
dec
or
xor
sahf
xchg
andb
push
fcompl
mov
pop
loopne
fld1
xor
arpl
mov
add
jae
mov
sahf
popa
ljmp
mov
xor
out
cmc
lea
mov
xor
pusha
fwait
or
push
sbb
xorb
and
ret
in
xor
add
xor
jp
cmp
sar
dec
jecxz
shrb
push
cmp
mov
jo
and
mov
dec
mov
sub
mov
scas
gs
int
movsb
imulb
repz
stos
repnz
lahf
ss
out
and
xchg
cld
inc
andl
and
int3
lds
data16
or
xchg
lods
ret
xchg
ucomiss
jnp
xor
test
ljmp
dec
pop
loop
sbb
add
and
lcall
rdmsr
pop
push
mov
mov
fnsave
push
insl
dec
popa
add
sub
adcb
mov
popf
push
gs
out
iret
lret
xor
addr16
shl
test
fimull
fnsave
scas
add
clc
mov
xor
jle
adc
fstps
mov
gs
mov
jnp
xor
inc
sbb
stos
mov
pop
jnp
sbb
push
insl
adc
adc
push
mov
hlt
iret
mov
jmp
sub
shrb
repz
pop
sub
int
push
pop
js
push
xchg
ret
push
dec
out
mov
test
rcll
cmp
lods
cli
adcb
push
fidivs
gs
arpl
aas
inc
enter
pop
push
ss
xor
stos
into
ja
mov
xor
sub
jbe
stos
mov
rolb
xchg
cs
orb
imul
mov
int3
pop
adc
jp
pop
aad
clc
xor
push
jne
adc
mov
daa
fistpll
xor
mov
adc
mov
mov
lds
xor
inc
addr16
and
pop
lret
and
jae
out
add
lret
daa
mov
pop
ficomps
pushf
pusha
out
jo
insb
cmp
cli
cltd
stos
mov
push
cld
pushl
aas
xor
addr16
xor
mov
push
sbb
orb
cmpsl
xor
inc
ret
stos
clc
mov
scas
xchg
and
outsb
jl
fwait
push
popa
pop
sub
rolb
xorl
mov
inc
xchg
push
outsl
enter
test
mov
aaa
inc
push
mov
mov
outsl
push
mov
lock
jb
rolb
lods
ss
jnp
icebp
xor
std
fiadds
xor
data16
aaa
cmp
and
inc
sub
jo
fcomp
sub
pop
xor
stos
popa
clc
das
adc
pop
shlb
sub
into
mov
pusha
je
pop
mov
cli
xor
adc
mov
out
rolb
lods
into
mov
xor
jecxz
outsl
xor
in
mov
sbb
roll
mov
dec
jb
aaa
xor
leave
push
movsb
cmp
pop
xor
hlt
jl
xor
inc
xchg
adc
stc
mull
push
and
inc
xor
xchg
jb
fists
push
sbb
mov
cmp
xor
cmpsl
shl
fdivs
sti
subb
xchg
ror
pop
sub
dec
jne
fdivrs
xchg
cltd
sbb
jbe
insl
sbb
xor
dec
xor
mov
es
and
jge
add
push
loope
js
aam
lock
mov
push
movsl
arpl
mov
adc
lea
ret
dec
js
decb
lock
icebp
mov
xor
lods
mov
xchg
pop
and
pop
lahf
std
cwtl
scas
or
lret
ficoms
mov
xor
ret
inc
sbb
cmp
cmp
inc
loopne
or
and
fsubl
mov
cmpl
dec
sub
or
sahf
cmpsb
rorl
pop
mov
jecxz
sbb
mov
mov
je
in
push
and
sub
inc
jg
and
imul
cmp
fdivs
jb
and
inc
push
mov
sti
fidivs
insl
rcrb
daa
xor
dec
inc
out
call
aaa
ja
push
stos
mov
cmpl
xor
and
lds
stc
mov
shll
int
mov
lea
mov
out
sub
icebp
cltd
mov
mov
insb
sub
stc
mov
testl
repnz
std
cs
pop
mov
push
scas
push
jmp
mov
cli
pushf
push
xor
adc
in
and
imul
cmp
dec
push
push
xchg
mov
lods
mov
mov
dec
out
cmpsb
sbb
pop
inc
lds
adc
add
cs
ficompl
cmc
sbb
ret
subb
iret
rol
movsb
mov
aad
mov
les
jmp
lods
add
nop
adc
lods
dec
dec
xor
sahf
fwait
addr16
xor
adc
mov
mov
repz
jb
lret
andl
mov
push
inc
scas
loop
lret
mov
addb
mov
and
add
jp
repnz
and
and
incl
sti
repnz
adc
mov
inc
int
fdivs
aam
mov
push
cli
and
pop
or
mov
sarb
addr16
push
add
sub
clc
jg
xor
outsl
int3
mov
cmpsb
jo
lahf
and
pop
push
test
pushf
sbb
es
loopne
push
xor
ret
in
add
lock
lods
add
xor
lcall
xor
jg
push
add
lods
xor
xchg
mov
add
fcomps
nop
xor
mov
push
orb
arpl
xlat
pop
inc
mov
jmp
shrl
xor
xchg
mov
sbb
xor
pop
push
cmpsl
out
dec
sahf
and
outsb
jnp
shll
mov
xor
push
jmp
or
inc
jl
xor
std
in
xor
ret
pop
cmp
fidivl
bnd
mov
xor
mov
sarl
stos
repnz
xchg
pop
mov
fbstp
add
gs
rol
flds
lea
xchg
addb
adc
and
dec
xor
sbb
xchg
jne
sbb
mov
mov
inc
mov
push
movsb
and
shll
xor
ljmp
movsb
addr16
mov
mov
mov
and
jno
std
jns
inc
mov
xchg
lods
adc
fildl
xchg
xor
mov
ds
movsb
xchg
cmp
int
jbe
sub
repz
andl
cli
pop
xor
insb
repnz
jno
add
jmp
lods
aam
xchg
xor
xlat
inc
mov
sahf
add
aas
vdivpd
pop
sub
cmpsl
out
jge
or
xchg
imul
xchg
mov
xor
xor
sbb
dec
mov
jo
lret
insb
sbb
push
lods
pop
xchg
xchg
and
ss
xor
in
adc
mov
sbb
xor
mov
sti
xchg
std
xor
or
cmp
cld
mov
lods
dec
out
aam
scas
je
into
mov
in
xor
add
rolb
lea
hlt
mov
ja
incb
jae
das
jg
xchg
adc
pop
into
and
filds
cmp
je
xchg
xchg
jmp
std
shll
addr16
xor
lret
mov
xor
inc
insl
pop
xor
shlb
jno
sbb
mov
subb
and
sub
or
andl
add
xchg
sbb
imul
rolb
mul
cmc
xor
leave
mov
push
lret
jb
dec
scas
sub
push
lock
sub
decl
xor
xchg
outsl
fidivrl
aad
xor
adc
addr16
cmpsl
mov
xchg
in
lods
xor
or
scas
insl
adc
xchg
mov
jnp
xor
decl
push
sbb
xchg
aaa
mov
imul
mov
sub
rcll
scas
xchg
imul
pop
sbb
fisttps
das
xor
into
push
mov
jmp
pop
movsl
dec
fidivs
lret
mov
push
jbe
sahf
pcmpgtw
xor
lea
out
enter
mov
sub
mov
pop
xor
jne
mov
xor
sbb
or
adc
call
mov
ret
in
cmpsl
gs
cmp
inc
jo
adc
push
popf
xor
pop
dec
outsl
fcomps
aaa
dec
aad
jnp
fwait
sbb
inc
loop
sbb
xor
mov
adc
sbb
fadd
pusha
xor
xchg
xchg
sub
xchg
inc
inc
outsl
in
clc
mov
idiv
jnp
or
mov
and
push
fnstenv
pop
xor
rorl
fistl
jns
xor
push
movsb
inc
iret
mov
lcall
mov
cmpsb
ret
pop
idivb
xor
xchg
dec
int3
adc
and
dec
mov
data16
cmp
cli
pop
arpl
test
and
jp
mov
jmp
sub
mov
stc
jo
pop
dec
in
mov
dec
movups
xor
push
rorb
xorb
cli
adc
sub
cmp
bound
xor
std
sub
or
ret
xchg
add
ss
aad
or
xor
movl
or
xor
cmpsl
lock
fildl
or
je
fbstp
clc
push
imul
test
xor
mov
sarl
pop
xor
add
xor
int
fsubrp
cmc
or
and
pop
pop
push
inc
xor
loopne
mov
jmp
jb
cmp
add
xor
pop
xchg
mov
lret
xor
lds
inc
scas
loop
jmp
xor
nop
pop
jecxz
add
icebp
mov
std
adc
jle
mov
addb
cmp
jmp
jb
cld
movsl
lret
jae
lds
out
add
ljmp
cmp
xor
mov
fnstcw
mov
dec
loop
lods
mov
mov
xor
sbb
lea
sub
dec
call
int
scas
mov
int3
mov
sub
xor
jb
jp
cs
les
aaa
les
xor
adc
test
aaa
cmp
mov
aam
add
enter
in
inc
xor
pop
lret
push
cs
testb
cmp
pop
ss
xchg
adc
push
mov
aaa
xor
pusha
addr16
adc
add
scas
movsl
cmp
loop
inc
cmc
sbb
sub
stos
movsl
stos
hlt
lods
lahf
loop
les
sub
xor
mov
adc
and
cmc
in
ljmp
stc
jae
jl
xor
xor
movsb
push
lods
push
push
insl
xchg
lahf
inc
and
jecxz
cld
jne
xor
ljmp
cltd
jge
icebp
pop
je
in
xor
pop
imul
mov
xchg
adc
xor
cld
jp
in
mov
adc
push
ss
lret
lods
inc
sub
xor
lcall
mov
adc
xchg
xchg
sub
add
addr16
push
xchg
xor
xchg
imul
mov
push
push
sub
xor
cwtl
mov
sub
adc
mov
xor
sbb
xchg
cs
lret
stc
pushf
and
and
in
xor
loope
cmp
pop
lret
and
xchg
dec
sub
in
icebp
cltd
inc
pop
bound
push
cmc
sahf
xor
sbb
pop
mov
dec
stos
sahf
xor
inc
inc
rcrb
sti
mov
cmp
or
push
xchg
pop
mov
scas
pusha
cmp
xlat
cltd
mov
mov
jne
loopne
jbe
ret
xor
mov
rolb
shr
cmp
jno
sbb
mov
lds
pop
jo
and
jecxz
xor
jbe
cmp
movsb
das
dec
subb
dec
movsb
add
je
xor
mov
fcomps
mov
icebp
jmp
lock
push
scas
fcmovne
mov
xor
mov
push
pop
loope
shrl
enter
loope
xor
mov
sub
add
int
repnz
cld
push
loop
xor
jnp
ret
xor
je
mov
cmpb
and
mov
fcomp
call
adc
sub
and
ret
sbb
mov
xor
sub
add
insb
or
movsb
mov
mov
stos
push
sub
sub
ret
sub
push
adc
add
out
roll
dec
test
mov
adcb
loop
sub
mov
and
loop
stos
inc
stos
lret
call
daa
inc
push
cmp
xor
shll
pop
js
fmuls
fsts
adc
sub
in
icebp
push
and
dec
mov
clc
xor
pop
mov
sbb
decl
pop
push
inc
sbb
jmp
mov
in
xor
aam
xorb
ds
dec
push
add
pop
push
mov
pop
test
xchg
pop
idivb
xchg
inc
ss
mov
ss
inc
mov
or
repnz
fs
push
pop
icebp
loope
nop
aam
xor
mov
ficoml
adc
adc
lds
xor
mul
xor
fisttpl
push
into
xor
mov
xor
test
xor
mov
jge
xor
scas
mov
dec
mov
xor
push
popa
sub
xlat
dec
fwait
xor
push
xor
or
pop
or
pushf
fwait
and
je
sub
xchg
inc
sbb
fcmovne
movsl
inc
jns
sahf
stos
mov
sub
testl
or
loopne
jle
mov
fadd
sub
inc
xor
dec
xchg
mov
xor
xchg
ss
daa
jo
xor
jno
bound
ss
push
jbe
and
clc
sti
pushl
and
and
lds
dec
xor
pushf
cmp
jecxz
test
cs
xchg
mov
sub
adc
cmp
fs
cmc
into
cld
mov
subb
lods
pop
fildll
insl
call
push
add
in
xor
and
div
cmpsb
ret
dec
mov
lret
dec
fcoml
push
mov
lret
ret
pop
clc
jg
xor
dec
out
adc
jns
inc
adc
insb
roll
cmp
rclb
fistps
cmp
hlt
jo
push
or
mov
adc
mov
push
fdivl
mov
aad
pop
loop
ja
sub
or
sarb
sahf
pop
mov
push
mov
xchg
sub
lods
mov
cmpsl
adc
xchg
and
mov
sub
mov
lock
adc
enter
scas
mov
pop
or
movsb
icebp
insb
sbb
push
fidivs
pusha
jnp
mov
xchg
out
xor
in
and
or
fbstp
test
fisttpll
sub
push
roll
pop
mov
scas
mov
xor
push
xor
lret
xchg
cmpsl
and
adc
pushf
push
mov
sti
sbb
cmpsb
fiaddl
inc
sahf
or
and
repnz
movsl
add
icebp
or
insl
dec
mov
adc
sub
ret
cmp
sbb
xchg
aaa
ja
jb
pop
or
jl
xchg
pop
sbb
xor
push
ljmp
xchg
cmpsl
sub
imul
fidivrl
xor
push
inc
hlt
lods
sti
mov
jp
lret
dec
aad
adc
xor
jns
adc
push
fdivrs
push
hlt
inc
mov
and
push
pop
shrl
xor
sti
xchg
repz
mov
jle,pt
out
sbb
mov
nop
dec
mov
mov
das
xor
int
and
xchg
pop
xor
cmc
fxch
mov
cmp
push
mov
loope
jnp
lret
insb
sti
jo
inc
fsts
xchg
xor
dec
popa
cmp
pop
addb
aas
lcall
xor
andb
pusha
and
into
xor
repnz
jnp
scas
cld
xchg
add
out
or
shrb
test
shll
jb
hlt
jns
jle
push
cs
jl
adc
xchg
hlt
pop
in
sbb
cli
adc
in
xor
and
sarb
mov
cld
je
mov
inc
pop
push
cld
xor
dec
pushl
adc
pop
lret
add
cli
and
mov
push
add
in
div
les
mov
lods
loope
mov
movsl
push
call
adc
sahf
shlb
cmpsb
imul
push
jno
adc
imul
and
jns
mov
adc
mov
xor
push
mov
cmp
stos
adc
loop
xor
sbbb
into
inc
stc
adc
or
jae
test
pop
sahf
popf
add
xchg
rcl
jb
lcall
ss
or
add
push
push
ds
sti
mov
and
test
fisubrl
aaa
andb
mov
and
test
bound
xlat
hlt
mov
stc
and
xor
int
test
jns
push
aam
push
das
inc
xchg
out
in
adc
sub
ror
xor
and
xchg
pusha
xor
jge
and
sub
bound
das
rcrl
add
adc
cmp
xor
les
xor
test
sub
test
xchg
jle
add
int
jb
dec
cmp
mov
in
in
push
xor
rorb
cmp
xchg
dec
sub
loopne
jnp
push
mov
mov
nop
sbb
mov
dec
pop
xor
stos
mov
push
xor
sub
fimuls
rorb
push
push
repz
xor
sbb
mov
pop
movsl
xor
push
jbe
fwait
daa
mov
xor
sarb
pop
add
das
out
push
cs
dec
scas
sbb
xor
loop
lods
xor
add
cmp
push
jge
xchg
fimuls
xlat
push
aam
mov
in
inc
aaa
in
push
mov
dec
xor
rcrl
pusha
sti
inc
xor
stc
mov
and
mov
jp
jne
in
popa
jecxz
dec
sbb
mov
jb
leave
xor
shr
cmp
xchg
lods
and
xchg
pushl
pop
jg
mov
je
cld
jl
mov
xchg
pop
cs
fadds
clc
ret
push
mov
call
lret
fildll
mov
push
ficoml
and
imul
out
in
mov
mov
adcb
sbb
jnp
lock
add
xchg
cmp
lahf
js
xchg
inc
jmp
xor
nop
lods
je
mov
jp
push
out
mov
and
push
add
xor
or
push
pop
pop
cmp
xchg
mov
fnsave
pop
sbb
addb
aad
xor
test
xor
scas
in
or
ja
sbb
jb
jmp
cli
xchg
pop
call
jbe
sbb
dec
push
into
push
sbb
rol
jmp
ljmp
or
adc
lock
mov
scas
xchg
test
xchg
xor
adc
push
xchg
cld
mov
mov
out
sub
sub
pop
mov
add
adc
add
popf
and
mov
mov
fisttpll
loope
pop
dec
scas
xchg
xor
cmp
and
xor
fs
pop
inc
adc
jno
lret
xor
add
out
mov
lahf
cmp
sub
fdivs
pop
dec
sub
jb
xchg
stc
scas
repz
add
push
sub
popl
or
mov
xor
xchg
sub
jecxz
push
xor
cmpsb
sbb
js
lcall
xchg
fadd
push
sbb
add
jns
dec
movsb
sub
shrl
mul
mov
pop
add
nop
lahf
xlat
test
dec
insl
je
sbb
dec
int
cmpsl
xor
or
in
repnz
xor
jno
inc
mov
or
js
or
and
push
fbstp
ljmp
xor
pop
mov
sti
adc
adc
sub
cltd
xchg
cmpsl
pop
fcoms
dec
mov
jae
adc
ret
js
int3
cmp
adc
dec
or
xor
pushf
sub
mov
or
pusha
xor
enter
shrb
jb
hlt
sar
mov
sysexit
mov
add
adc
movsl
or
xor
xchg
rcrb
adc
cmp
sbb
dec
shll
cmp
cld
xor
sti
mov
clc
or
sahf
inc
add
sub
add
sbb
mov
jno
mov
mov
xor
mov
jecxz
mov
mov
bnd
xor
add
mov
les
sti
mov
or
repz
sub
shll
cld
in
pop
jno
int3
xchg
sub
pop
sbb
xchg
xor
cmp
push
jmp
mov
ja
incl
lret
mov
sbb
stc
lea
stos
xchg
jmp
xlat
cli
hlt
loop
sti
decl
or
mov
test
cmpsl
ja
push
mov
and
and
xor
jnp
sahf
mov
roll
out
addr16
ja
xor
xor
movsl
push
lea
flds
xchg
jne
ss
xchg
mov
xchg
mov
jns
adc
and
out
adc
and
jl
jne
out
cmp
push
insl
test
loope
in
xor
jmp
stos
leave
out
jg
xor
rorl
xchg
test
add
inc
int3
adc
ljmp
cmpsb
scas
adc
sbb
push
push
shrb
dec
leave
dec
or
cmp
xor
fstpl
add
and
test
lods
lds
aam
pop
lcall
xor
pusha
dec
inc
jnp
xor
dec
mov
in
setae
push
in
inc
inc
mov
ljmp
rclb
imul
fwait
xor
adc
push
cmpb
pop
cmp
add
mov
shlb
dec
movsb
pop
jmp
push
pop
mov
jno
and
xor
popa
cld
adc
inc
jg
mov
cli
xchg
xor
outsb
pop
dec
aad
sub
jb
movsl
pop
fcomip
sub
dec
push
dec
xor
mov
fidivs
cmp
xor
fdivl
xor
cld
push
and
icebp
fcomps
jae
lea
fwait
shlb
xor
xchg
jge
xor
out
mov
lods
mov
mov
dec
xor
data16
xor
jns
xor
mov
mov
xor
and
sub
mulb
xchg
add
inc
sub
mov
mov
jbe
movsb
jns
jnp
lret
pop
jno
cmp
fidivs
cld
scas
jne
rcr
movsb
and
pop
mov
and
fdiv
mov
inc
mov
xor
add
in
jle
xor
nop
xchg
std
jno
mov
pushf
adc
setge
loopne
fbld
lcall
sti
sbb
xor
rol
xlat
adc
mov
jge
and
jp
cltd
std
hlt
popa
xor
mov
insl
mov
ret
lods
sbb
xor
lea
repnz
push
pop
rcrl
xor
in
mov
test
into
jne
add
dec
movsl
sbbb
cmp
or
fwait
inc
fnstenv
push
pop
imul
mov
jge
inc
movl
add
rorl
hlt
jg
mov
xor
bound
pop
ret
fidivrs
xchg
mov
jnp
test
rclb
xor
js
pushf
xor
stos
cmp
or
imul
mov
cmp
jecxz
xor
xchg
pusha
xor
ret
mov
jle
icebp
in
and
xor
mov
xor
decb
push
mov
inc
or
ret
cltd
pop
enter
push
cmp
lods
mov
mov
xchg
popf
insl
pop
push
xorl
insb
les
add
xor
inc
and
ret
inc
adc
and
jne
xor
mov
mov
add
clc
addr16
out
pop
insl
xor
dec
and
pop
inc
xor
mov
push
ret
hlt
cs
jmp
mov
enter
xor
movsb
stc
push
jb
xlat
repnz
aas
or
dec
inc
sub
and
push
lret
xor
arpl
fsub
xchg
push
xor
jne
inc
shrl
outsl
mov
and
push
cwtl
daa
inc
jmp
das
sbb
xor
stos
and
gs
sub
enter
mov
sub
push
xor
lds
test
cwtl
mov
push
jbe
jae
xor
push
adc
or
push
push
adc
sti
fildll
or
cs
pop
fs
dec
push
scas
shlb
sbb
adc
notl
dec
stos
jl
push
add
lods
fsubrl
mov
call
rcll
gs
xchg
mov
loop
rolb
adc
popf
adc
inc
ja
std
repz
push
mov
fsubrp
in
pop
gs
lcall
mov
push
stc
dec
push
sbb
fs
les
ljmp
xchg
mov
xor
and
inc
movsb
push
jnp
sub
cmp
mov
jp
mov
and
mov
mov
adc
or
cmp
daa
outsl
inc
mov
mulb
mov
insl
xor
cli
cmp
test
lods
pop
out
mov
xor
xor
xor
xchg
stc
ret
mov
xchg
mov
push
mull
or
and
mov
xlat
jbe
shlb
jp
in
jecxz
mov
push
mov
stos
les
cltd
imul
sub
push
mov
mov
xor
daa
cmpb
dec
lock
cwtl
mov
dec
aaa
xor
cld
mov
mov
dec
pushf
sti
add
cs
sbb
jo
mov
imul
jle
das
dec
adc
pop
jecxz
sbb
inc
and
loop
loopne
add
mov
jo
in
fs
sub
in
jno
xorl
adcb
insb
adc
jecxz
cmc
adc
mov
xor
lock
sub
or
xor
dec
addr16
arpl
xor
fs
shll
jl
adc
test
inc
xor
push
negl
and
js
xor
dec
xchg
jbe
add
jbe
pop
ret
jg
rcrb
dec
mov
pop
dec
pusha
jnp
xchg
sub
adc
loop
xchg
adc
mov
xor
adcb
add
inc
push
in
mov
daa
sub
xchg
and
mov
pop
add
mov
xor
test
dec
sub
sub
inc
iret
xor
and
or
in
lock
mov
arpl
dec
xor
cmp
mov
mov
pop
xor
xor
xchg
mov
jo
sub
fnstcw
in
pushl
and
fnsave
loopne
add
ret
push
data16
push
cld
in
lcall
dec
mov
xor
sahf
cmp
xor
xor
sub
fdivs
dec
insb
out
sub
test
add
imul
aaa
into
or
test
fucom
mov
sbb
sbbb
das
adc
push
xor
push
sbb
adc
arpl
mov
and
out
int3
and
fsub
mov
popf
ret
loopne
fistpll
xor
or
stos
adc
cmp
xor
sbb
mov
xor
push
jp
ss
in
xor
ret
loopne
movsl
cwtl
xor
cmp
xor
std
dec
jmp
xor
mov
adc
xor
aaa
xor
dec
mov
jg
cmp
lods
jns
cs
adc
xor
lcall
adc
sbb
xor
pushf
ss
mov
lahf
add
cli
iret
cmp
sub
jbe
incb
jmp
stc
repz
sti
call
ja
and
out
pop
jg
mov
xchg
daa
cmc
sub
leave
jne
inc
sbb
xor
and
lock
aaa
fcoml
lods
add
adc
push
repz
test
aaa
push
mov
or
inc
xchg
jb
mov
lahf
push
sbb
pop
cs
hlt
ds
ds
fiaddl
rorl
pop
mov
xor
stos
into
pop
sub
les
mov
adc
xlat
adc
or
out
int
lret
inc
sub
int
add
xor
je
mov
mov
mov
add
mov
lock
push
mov
cmp
dec
mov
sti
test
lret
cmp
sub
shlb
push
and
stos
arpl
xor
fcmovne
mov
xor
mov
pop
inc
sbb
mov
shrb
adc
adc
out
or
mov
in
movsl
movsl
movsb
xor
cmovns
xor
cwtl
loop
xchg
jmp
in
push
loope
pop
xor
mov
dec
push
or
xchg
xor
dec
and
in
incb
dec
aaa
shlb
inc
xchg
jnp
cld
mov
ret
mov
mov
xor
sbb
fwait
jne
xor
jmp
stc
inc
daa
xor
ret
int
sub
jge
in
out
or
sti
pop
out
adc
lea
dec
ror
mov
xor
cmpsb
fwait
std
push
mov
mov
bound
pop
inc
adc
sbb
sub
and
push
lea
sbb
aam
roll
and
xor
jno
xchg
mov
fnstcw
push
mov
in
sub
int
mov
mov
mov
cli
jl
jo
rclb
in
adc
shl
idivl
popf
sbbl
lock
mov
enter
out
into
add
xchg
or
lcall
sub
push
repnz
dec
push
sub
outsl
fadd
jbe
xor
dec
ja
inc
insl
test
addr16
std
test
call
jne
ljmp
xchg
aaa
test
xor
xchg
push
imul
sbb
rcl
mov
jl
xor
xor
xor
nop
mov
or
scas
int
loope
loop
enter
sti
icebp
mov
and
jo
mov
or
mov
enter
xchg
sub
shl
xchg
xor
pop
jmp
movsb
shrb
lret
mov
fbstp
lea
lds
mov
pop
outsb
add
shl
adc
stc
test
cmp
dec
xor
scas
xor
push
xor
mov
pushaw
xor
sar
fcomi
xchg
xor
mov
daa
xchg
lcall
sbb
xor
mov
loop
sahf
sub
adc
add
into
adc
mov
pusha
push
cmp
mov
fadd
add
and
test
andb
pop
divb
pop
push
outsl
call
and
in
popf
xchg
arpl
in
outsl
inc
pusha
xchg
cmp
fwait
int
cli
lods
pop
fwait
pop
add
inc
sub
fdivp
push
lahf
inc
gs
mov
mov
test
sub
push
sub
lret
in
cld
and
pop
shrl
or
or
data16
dec
pusha
inc
stc
xor
nop
addr16
rorb
sub
fsubp
jns
pushl
test
in
idivl
adc
outsb
xor
rcl
es
xor
scas
popf
mov
xchg
clc
aas
ucomiss
adc
test
cmc
mov
out
in
add
mov
inc
and
xor
jg
dec
xlat
js
andl
dec
call
pusha
dec
inc
clc
test
push
mov
mov
jns
xor
sti
leave
and
roll
cli
mov
and
rorl
sub
jle
push
push
test
leave
dec
fs
dec
fldenv
pop
cmp
mov
cmp
inc
test
sbb
pusha
mov
push
rcrb
dec
sub
inc
and
fstl
shll
lock
lahf
xor
push
mov
lret
je
add
mov
adc
fs
xor
dec
jge
inc
movsb
not
call
inc
arpl
popa
jecxz
jp
mov
cmc
outsl
js
xchg
mov
pop
lods
jns
add
movsb
xor
xor
mov
and
add
xor
scas
movsb
popa
jo
mov
dec
push
mov
dec
add
hlt
pop
cmc
push
and
in
hlt
push
add
cmc
sbb
mov
inc
xchg
mov
xor
dec
lods
xchg
jp
push
and
adc
aad
dec
out
ss
adc
xor
add
cmp
cld
loope
pop
and
adc
mov
mov
xor
out
fs
cmp
mov
mov
divb
fucomp
sub
push
jg
xor
inc
xchg
pop
stos
bound
push
movsl
jo
inc
or
lahf
sub
gs
test
repnz
jecxz
jl
popf
int3
xchg
add
xchg
adc
stos
loop
mov
cmpsb
xchg
sub
mov
js
xchg
loope
jle
xor
and
outsb
xor
sub
test
or
mov
xchg
xorl
fs
out
cli
sub
xor
call
mov
and
push
sbb
lcall
push
and
dec
xor
loopne
outsl
hlt
loop
dec
push
std
in
nop
push
xor
cmc
xor
idivl
push
xor
sbb
int
pop
hlt
das
and
jmp
negb
xor
fdivs
xorb
and
andb
or
xor
fwait
jbe
enter
pop
add
pop
insb
push
sub
xchg
inc
mov
mov
popf
dec
adcl
dec
aad
xor
push
js
test
shl
xchg
mov
sub
xchg
mov
movb
mov
sahf
cmp
jb
mov
test
lods
test
je
cli
add
loop
into
lods
cmp
jge
aaa
lret
mov
sub
xor
enter
push
or
bound
sbb
xor
imul
xor
fcmovb
enter
out
or
or
adcb
adc
pop
cmpsl
xor
movsl
ja
push
int
adc
enter
adc
xchg
cmp
pop
lods
sub
sti
or
xchg
in
dec
ret
out
push
stos
jge
fucomp
xor
mov
or
loopne
fnstenv
fadds
jns
xor
loope
jmp
cld
movsl
jg
outsb
xor
stc
fsubs
mov
pop
in
das
fistpll
sbb
jne
cld
xor
cld
xor
cmp
data16
faddp
xor
loope
in
push
adc
cltd
and
cli
mov
scas
fmuls
lahf
mov
ja
push
sbb
test
movsl
imul
mov
pop
aaa
xchg
sbb
jne
pop
mov
lods
adc
sbb
aaa
and
scas
out
and
dec
sbb
mul
in
and
mov
loope
xor
pop
xchg
in
sbbl
test
int
ret
adc
mov
sahf
cmpb
fwait
adc
insl
stc
std
and
pop
pop
in
jle
sub
icebp
fs
fisubrl
in
and
mov
push
sbb
inc
outsl
fistps
mov
test
mov
inc
cmp
out
dec
mov
stos
lock
repnz
sbb
inc
loopw
dec
adc
or
ret
icebp
xor
rcl
outsl
notl
cmpsl
sub
mov
cmp
lret
xor
rolb
orl
hlt
fisttpl
test
xor
loope
loopne
iret
lret
pop
push
repnz
jae
js
sbb
xor
lods
adc
bound
in
mov
jb
and
sbb
hlt
add
dec
mov
mov
xchg
inc
pop
dec
int
sbb
xor
mov
fcom
je
aad
cmp
mov
jecxz
movl
lea
mov
addr16
push
push
lods
push
xor
pop
fldt
popf
xchg
mov
fidivl
xor
lahf
xchg
mov
cwtl
loop
addb
test
add
and
xchg
push
sub
jb
adc
test
and
jb
mov
inc
xchg
xor
jb
jo
hlt
imul
or
bnd
or
cld
xor
adc
pop
jns
cli
repnz
cs
add
clc
or
loope
inc
fbstp
xor
pop
fxrstor
ret
cmpsb
test
in
inc
xorl
push
and
pop
pop
hlt
repz
xchg
repnz
inc
pop
subb
xor
mov
or
popa
jae
push
adc
fs
xor
xchg
mov
mov
add
mov
aas
or
data16
xchg
cmp
mov
mov
cs
pusha
xchg
inc
incb
cld
add
push
repz
adc
fisubrl
sub
mov
xor
rcll
cld
lcall
mov
xor
add
repz
mov
inc
dec
movsl
sbb
jb
cli
adc
hlt
jbe
shll
push
sti
imul
cmp
cli
movsl
sub
mov
mov
mov
add
cltd
ds
mov
pop
mov
das
sub
xor
mov
lcall
cmc
mov
arpl
adc
sbb
xor
push
imul
cli
and
push
sub
and
inc
mov
xor
sbb
hlt
mov
repz
adc
pushl
in
push
and
push
flds
mov
add
adc
lock
pushf
shlb
xor
int
repnz
lret
pop
out
inc
jo
out
add
or
popf
sub
adc
aaa
outsl
pop
lahf
flds
cmp
sbb
or
xor
mov
out
sahf
pop
clc
ljmp
daa
adc
and
xor
add
xor
loopne
mov
inc
jge
jo
les
mov
mov
cmp
lods
mov
and
inc
xchg
data16
dec
cs
push
inc
or
sub
in
ss
add
addb
hlt
mov
xchg
lock
add
mov
fs
and
jle
pusha
sub
cmpsl
inc
and
jnp
push
call
push
sti
aad
push
sbb
and
and
arpl
mov
dec
dec
movsl
xor
xchg
call
outsb
mov
faddl
sti
jl
cld
stos
jns
push
add
sub
xor
add
jnp
in
dec
aam
out
cltd
inc
iret
mov
andl
push
mov
ret
jae
lods
cli
hlt
pop
adc
sahf
mov
or
push
mov
mov
scas
addb
pop
adc
dec
jle
dec
hlt
jns
mov
jp
je
mov
dec
lds
add
xlat
push
and
and
inc
cmp
inc
sub
fwait
dec
mov
popa
vxorps
jb
and
mov
pop
cld
or
xchg
lahf
std
push
adc
mov
arpl
cmpsb
shr
jnp
inc
adc
fldcw
xor
pop
mov
je
mov
cwtl
xor
xchg
pop
xor
sub
mov
rorl
scas
andb
pusha
in
and
cmp
pop
sbb
xchg
dec
dec
mov
mov
mov
push
aam
js
mov
mov
pop
in
les
and
or
xor
xor
test
mov
xor
xchg
adc
or
out
idivl
push
test
pop
xchg
cmp
jae
lods
cmp
hlt
pop
cmp
lock
xor
push
and
pop
out
inc
ljmp
xor
repz
mov
pop
mov
dec
fnstsw
xor
add
ja
dec
pushf
fdivrl
in
add
adc
add
sbb
iret
scas
inc
sahf
in
das
adc
xchg
and
or
outsl
xchg
adc
push
adcl
scas
aam
sbb
lods
mov
dec
jle
push
add
mov
lods
cmp
xchg
sti
ret
sti
stc
xor
cli
shll
hlt
mov
fnstenv
mov
or
jmp
rcrl
mov
outsl
cmp
mov
stos
sbb
sbb
push
fs
cli
xor
stos
js
jns
xchg
xor
popf
cmc
sbb
sub
enter
jle
xor
or
xor
adc
out
or
add
in
or
out
mov
iret
movsb
xchg
and
jns
inc
aaa
push
xchg
push
jmp
dec
aad
sub
jge
repnz
and
mov
lock
sub
ja
sub
push
add
movsl
cmp
call
xchg
cs
jg
sbb
das
fstpl
sarl
or
jl,pn
es
jne
or
xchg
lods
les
fnstenv
std
mov
test
jae
aad
idivl
pusha
fnstenv
scas
iret
lahf
mov
sub
jae
in
xor
out
gs
pop
xor
push
loope
scas
fisttpll
xor
gs
aad
and
push
mov
aad
out
std
adc
mov
jge
ss
fidivrl
in
mov
lret
or
mov
xor
push
push
cltd
out
xchg
mov
push
test
andl
xor
ret
mov
ss
jge
xor
pop
push
jmp
cld
lods
cmpsl
enter
stos
orb
jae
in
or
mov
rcll
xor
xchg
mov
jmp
jg
inc
test
lods
xchg
or
add
adc
cld
inc
push
loopne
int
and
orb
cmp
hlt
xchg
adc
dec
mov
sahf
jl
gs
cld
xor
icebp
or
jnp
lea
sbb
mov
cs
inc
adc
sarb
imul
push
pusha
jae
lahf
shr
push
or
orl
pop
xor
adc
add
testl
and
je
out
add
xchg
adc
movsl
fsub
push
aas
test
cs
jge
repnz
hlt
hlt
add
popa
jmp
outsl
mov
lock
into
mov
orb
dec
adc
cld
std
outsb
inc
add
jle
sbb
xchg
repz
jo
add
push
add
mov
divb
hlt
in
push
stc
out
sub
mov
cld
sbb
jno
lcall
jmp
sub
lods
loope
push
xchg
xor
in
sbb
pop
fiaddl
pushf
jg
xacquire
movl
adc
les
rcl
mov
in
test
or
test
push
test
das
mov
dec
mov
data16
adc
sbb
sub
cmp
xchg
int3
inc
pop
mov
pop
fs
hlt
dec
xor
inc
data16
pushf
xchg
addb
ja
adc
xchg
imul
jl
pop
sbb
pop
adc
adc
data16
jno
add
jae
xor
push
shl
sub
lods
and
pop
imul
call
ss
repz
lcall
push
push
rol
add
mov
repnz
push
cli
hlt
mov
xchg
inc
jno
fdivrp
and
jmp
hlt
add
movsl
icebp
sti
jb
test
imul
aad
hlt
jp
das
mov
or
ret
hlt
mov
pop
je
xor
in
adc
jb
add
push
loop
cli
lret
cmp
push
movb
add
repnz
hlt
lods
sbb
sti
test
mov
and
adc
in
xor
inc
sbb
in
xor
adc
sbb
jp
lds
addr16
mov
outsb
xchg
out
lods
les
pop
sahf
cmp
sub
outsl
roll
push
add
mov
imul
dec
mov
jp
pusha
inc
push
or
cs
shrb
xor
pop
xor
std
dec
pop
ret
fimull
inc
out
pop
jne
jmp
or
add
or
test
addb
mov
jg
cs
pop
les
mov
cmp
xchg
aad
push
imul
cmc
or
xchg
inc
cmp
rcl
adc
push
loop
jl
subb
shll
xchg
lods
rcll
sbb
lea
lds
hlt
adc
std
je
xor
mov
xlat
or
gs
cmpsb
shlb
xchg
xchg
ret
lcall
dec
adc
int3
xor
mov
add
loop
push
addr16
mov
data16
and
mov
and
sub
jae
xchg
decb
xor
pop
lret
out
mov
aaa
imul
filds
pop
pusha
mov
xor
mov
std
sub
jns
mov
jmp
jnp
ljmp
daa
and
pop
push
jno
and
jecxz
xor
pusha
lods
add
push
aaa
mov
pop
mov
inc
fst
inc
iret
xor
sub
xchg
pushf
inc
les
jp
pop
push
mov
push
push
mov
push
xchg
dec
xor
notb
mov
cmp
mov
push
dec
xor
sub
ret
dec
jecxz
ja
and
push
negb
or
ret
dec
xorb
add
ret
and
mov
adc
out
adc
mov
pop
mov
pop
cltd
cli
xlat
and
xor
and
das
fucomi
xor
inc
dec
xor
test
gs
fcmovnbe
xor
push
cmp
cmp
mov
fbstp
negb
insl
popf
fildl
dec
adc
cmpsl
imul
pop
and
adc
and
ss
int3
popa
xchg
jp
mov
sete
push
dec
movsb
fdivs
xchg
dec
loopne
js
rclb
in
mov
std
dec
icebp
xchg
inc
inc
inc
sub
imul
push
pushf
cs
push
dec
adc
xchg
clc
xor
test
shlb
xlat
xor
push
mov
fiadds
jge
push
jns
dec
pop
xchg
pop
push
add
loope
cmp
lock
inc
add
cmpsl
jp
adc
fbstp
test
push
or
popf
movsl
mov
ss
out
and
ret
and
adcb
jp
and
mov
or
data16
xor
sbb
inc
cmc
xor
jecxz
push
dec
xor
ds
mov
imul
jg
cmc
leave
mov
sbb
mov
xchg
daa
push
mov
fwait
cmp
xor
std
push
popf
movsb
mov
push
sarb
not
cltd
xor
jg
adc
mov
xor
test
popa
addb
fstpl
push
fmul
mov
or
add
popa
lea
imul
cltd
addb
aas
sub
sar
or
inc
hlt
add
xor
jb
lods
sub
inc
xor
mov
add
test
jbe
xlat
xor
rcr
sbb
dec
aas
xor
inc
fnstsw
stos
xchg
xor
or
in
loopne
mov
call
lea
xor
stos
test
lods
stos
xor
mov
lret
rolb
dec
sub
shl
cmc
mov
es
push
inc
movsl
or
or
sbb
xor
cld
push
repnz
xlat
frstor
add
xchg
lea
jl
jae
movsl
push
xor
gs
mov
add
jbe
push
out
pushl
pop
fwait
cmp
outsl
dec
and
daa
jno
out
cmpsl
fnsave
push
pop
jns
adc
mov
push
ret
call
test
or
dec
movsl
xor
fmulp
clc
jnp
outsb
cmp
push
mov
sub
fidivrl
data16
ret
pop
lds
enter
lret
or
cmpsl
inc
call
xor
inc
neg
pop
bound
sub
movl
pop
in
xor
dec
lret
xchg
mov
cmpsl
xchg
out
into
push
pushf
push
xor
popf
pop
adc
jno
icebp
cld
clc
imul
shll
and
add
lret
cli
adc
sub
outsl
sub
mov
cmp
das
jb
mov
in
insb
scas
xor
sbb
test
rolb
cmp
dec
and
push
fimuls
xor
leave
out
sbb
fs
std
adc
cmpsb
add
adc
lea
div
push
mov
mov
jl
lock
iret
mov
or
lds
pusha
cs
or
sub
jnp
mov
mov
and
mov
imul
lret
sub
cmp
jge
inc
sub
xchg
xor
pop
add
and
xchg
and
gs
pop
lcall
adc
inc
ficoml
mov
pop
jo
and
in
imul
inc
cmc
lds
mov
push
mov
loop
dec
mov
xchg
sbb
jno
xor
mov
adc
xchg
sub
jno
and
test
lahf
in
loop
inc
mov
push
outsb
lods
je
pusha
minps
sub
std
sti
lock
xor
lcall
cmp
pop
pop
fwait
mov
dec
js
inc
mov
ficomps
cld
pop
fnstsw
xchg
mov
xor
pop
xor
inc
jo
pusha
pop
or
sub
movsl
fcompl
sub
lret
mov
cmpsl
dec
repnz
dec
clc
dec
push
out
and
cld
inc
sub
repz
fcmovb
mov
fcoml
push
fisubrs
insl
ficoml
pop
cmp
inc
enter
hlt
inc
daa
mov
movsb
jno
mov
mov
jno
mov
les
jne
call
or
cmpsb
xor
jp
fisttpll
lods
fildl
in
adc
xchg
pushf
out
jne
xor
mov
ret
loopne
aam
cs
movsl
lahf
pushf
mov
fs
nop
push
mov
inc
ret
cmpsb
pop
push
jno
int
rep
jl
cs
jge
jbe
xor
or
loop
in
xor
repnz
out
lods
xchg
cmpsb
cli
xchg
shll
popa
push
xor
push
shr
sub
into
lock
dec
adc
add
mov
or
and
jae
xor
test
xor
xchg
and
movsl
pop
fldenv
bound
dec
scas
cmpsb
add
insb
sbb
jp
xor
dec
mov
fcmovnbe
xor
inc
push
clc
ss
pop
xor
xor
lret
jmp
push
or
xor
pop
dec
sub
push
xor
pop
std
cwtl
jb
sahf
divb
out
sub
mov
shlb
mov
insl
movsb
cwtl
imul
das
mov
and
mov
pop
mov
fmull
xchg
lret
xor
inc
stc
jecxz
out
add
xor
mov
mov
jo
test
xor
dec
dec
push
into
je
in
pop
hlt
popa
fnstsw
dec
xor
lods
clc
int
fsubl
or
jo
into
rcll
iret
jns
cs
pop
inc
push
popa
xor
jge
mov
xlat
lret
jae
loopne
out
sbb
and
xor
cmc
cmpl
jbe
int
fisttps
mov
imul
ret
xchg
and
or
mov
stos
xor
shlb
xor
or
into
orl
daa
xor
jle
popa
xlat
mov
mov
mov
stos
xchg
and
jae
jbe
setae
andl
push
jns
fiaddl
mov
stos
lea
mov
xor
fnstsw
js
xchg
or
ja
mov
std
xor
stc
jno
pop
mov
push
jge
sub
ret
jmp
lret
shll
mov
in
pop
cmp
push
in
roll
aaa
and
xchg
jns
sbb
call
push
xlat
test
xor
push
dec
sbb
add
mov
and
jae
stc
lock
pushf
mov
cmp
int
mov
ja
dec
movsl
jo
pushf
push
test
int
das
mov
add
xor
int3
pop
enter
xor
cwtl
ja
add
fidivl
sbb
cmp
mov
mov
lea
push
adc
lods
dec
xor
push
in
loope
cmc
sub
mov
push
add
mov
mov
cmpsl
test
inc
or
sbb
adc
xor
dec
push
and
lods
sub
out
aaa
mov
ret
and
roll
lret
and
test
lahf
xchg
push
xchg
aaa
inc
cwtl
and
jp
fcomp
gs
mov
popf
mov
mov
inc
fs
and
repz
mov
jnp
in
sti
xor
xor
cmp
hlt
rolb
js
ss
add
xor
adc
or
divl
xchg
push
loop,pt
aaa
or
xor
jp
ja
adc
aas
lock
gs
lods
add
aad
int
xchg
lea
pushf
jecxz
jp
addr16
cmp
std
mov
mov
jnp
shll
fwait
mov
repnz
aaa
sub
xchg
or
cmc
lret
jg
and
sbb
xor
or
xchg
in
emms
push
xchg
xchg
pop
push
frstor
ss
push
fcomi
push
sub
jns
xor
sbb
and
inc
add
mov
xor
sbb
xchg
call
adc
dec
and
xor
dec
dec
pop
scas
mov
xor
pop
lock
fcomps
xor
ss
jle
loopne
jp
or
xchg
xchg
xor
pop
push
lds
pusha
out
imul
std
repz
rorb
mov
pop
add
popa
mov
sub
xchg
mov
sub
test
scas
test
sbb
jne
or
in
or
cmpb
and
mov
popf
es
push
mov
enter
fstps
cld
lahf
pop
xor
sub
cmpsl
xor
ja
pop
xor
xor
sbb
cltd
dec
adc
adcl
shlb
insb
xor
sbb
pop
xor
hlt
push
ret
xchg
mov
adc
cmpsl
scas
sub
xor
cmpl
xor
cmp
and
loop
sbb
mov
jp
sub
xor
push
loope
sub
or
push
mov
mulb
and
imul
xchg
ljmp
cs
cs
pop
xor
xchg
xchg
xor
jo
nop
sub
jmp
nop
inc
js
cld
call
loopne
adc
test
mov
sub
jns
jo
xor
or
xor
mov
cli
popa
ret
xor
fwait
insb
mov
mov
fcoml
xor
orb
jno
and
clc
inc
xor
inc
arpl
stos
add
jo
inc
enter
sub
repz
in
sub
repnz
adc
xor
add
xorl
jns
fisttps
into
adc
lods
ficompl
xor
je
hlt
les
jo
mov
xor
xchg
imull
sbb
aas
fbstp
jae
lcall
pop
fwait
loope
pop
enter
jb
ds
mov
aad
dec
mov
in
sahf
fiadds
mov
mov
movsl
mov
push
push
mov
jo
sub
test
ds
int3
or
xor
mov
fmulp
xchg
xchg
inc
test
sbb
negb
icebp
jle
adc
push
dec
xor
add
inc
mov
and
xchg
popa
psubusw
sbb
pop
inc
pop
mov
stos
sti
xchg
mov
xchg
inc
mov
insl
xor
jbe
jns
cltd
dec
mov
popa
adc
sub
out
mov
mov
inc
clc
xorb
ret
xor
adc
cmp
rcll
adc
xor
inc
stos
or
push
cmpsb
rolb
aad
scas
or
mov
xor
mov
out
adc
fmulp
cmc
push
and
adc
inc
sbb
fsubrs
xor
inc
fwait
stc
ss
pop
mov
into
into
test
xor
xor
xor
notl
xchg
mov
sahf
xor
mov
xchg
push
mov
mov
lahf
xchg
adc
test
push
stc
sbbb
push
add
and
rcrb
pushf
mov
jno
dec
ror
cmp
rcrb
and
xlat
mov
repz
mov
data16
mov
shl
repz
test
andb
rolb
adc
mov
and
jo
xorb
mov
mov
outsl
push
add
dec
lock
pop
xchg
cmpsb
sbb
mov
adc
and
jns
and
fchs
sbb
arpl
dec
push
shl
rcll
xchg
mov
pop
nop
mov
mov
sub
xor
xchg
popa
cmp
fsub
xchg
mov
mov
add
inc
and
dec
ds
cli
test
or
ja
enter
orl
popa
xor
cmpsl
stc
ret
or
pop
out
jecxz
xor
push
jno
pop
cmp
fildl
push
mul
or
in
dec
rcrl
cmp
or
inc
cmp
dec
pop
dec
inc
xor
cmpsl
test
cld
pop
stos
dec
xor
sub
ss
mov
xor
push
inc
mov
mov
cli
repz
sub
mov
rcr
dec
dec
jbe
pop
add
movsl
ss
xor
mov
jnp
inc
cmc
xor
ja
dec
lcall
mov
lea
adc
fmuls
les
sbbl
fmull
jo
sub
push
lret
dec
xor
jnp
stc
pop
in
push
daa
mov
ss
jae
arpl
push
mov
xchg
fnsave
cmpsb
cmpsl
xchg
mov
popf
jl
xor
repnz
ljmp
daa
data16
ljmp
ss
sub
testl
repz
jae
push
xor
add
cmc
mov
jns
sub
push
xor
mov
icebp
and
and
sub
push
add
xchg
test
xor
add
aas
fbstp
and
mov
mov
sub
icebp
adc
add
jno
push
clc
gs
xor
mov
imul
add
loopw
pop
scas
dec
cmp
mov
xor
cmpsb
or
pop
lret
xor
test
icebp
pushf
sar
out
mov
mov
dec
xor
shrb
mov
xor
adc
adc
movsb
test
ss
idivl
std
dec
mov
pop
je
xor
xor
nop
stos
cmp
xor
xor
adc
cmc
inc
scas
fs
xor
idiv
shl
ja
xor
xor
push
shlb
stos
loop
cltd
adc
mov
std
mov
in
test
aad
sub
shlb
push
xor
or
cltd
xlat
jns
ja
out
daa
xor
in
mov
cmp
fbstp
or
xor
sub
push
sub
xor
cmpsb
notb
sbb
mov
ja
pop
aad
and
pop
fsubrs
js
imul
sub
cwtl
rcrl
add
ja
sahf
sub
sub
xorb
mov
ljmp
sub
xlat
jb,pn
xor
xor
push
push
jne
clc
add
mov
xlat
xchg
push
jae
inc
jns
ss
push
out
sub
mov
in
in
adc
xchg
xor
push
loop
hlt
movsl
and
test
add
outsl
cs
adc
xor
jno
adc
push
enter
cmc
and
or
fwait
xor
push
outsl
sbb
mov
aas
outsb
dec
int
push
mov
cmpsb
push
xor
inc
stos
mov
xor
jns
jno
jmp
push
xor
stos
mov
fisubs
cs
test
sbb
inc
aad
xor
int
into
ret
fsubr
jmp
dec
fsubrs
sub
sub
and
dec
push
push
fwait
bnd
and
into
xchg
xchg
mov
pop
push
xchg
or
adc
pop
sbb
repnz
mov
add
inc
lret
ja
and
push
imul
add
adc
xchg
mov
mov
test
jl
imul
sub
xor
inc
fwait
mov
test
jo
cmp
mov
bound
mov
test
mov
sub
mov
lret
or
mov
gs
sub
cld
divb
stc
loope
and
push
clc
xchg
lods
pop
sub
imull
pop
addb
ret
loop
push
movsl
push
ret
sub
dec
cld
into
and
les
mov
or
jae
push
jnp
repz
xchg
pop
repnz
das
in
shll
cli
xor
outsl
lret
mov
xchg
xchg
shrb
loop
add
jb
adc
sbb
adc
lea
xor
stc
mov
add
test
xchg
and
xor
inc
jne
mov
adc
gs
adc
cli
jb
xchg
dec
mov
xor
mov
sahf
or
sub
sahf
jo
mov
popf
xor
sarl
mov
mov
in
stos
scas
out
psrad
test
mov
fidivs
dec
popf
gs
mov
fisubrl
aaa
xchg
and
xchg
and
fsts
jbe
shl
jbe
dec
jnp,pt
push
mov
jno,pt
jg
es
sub
jb
mov
and
xor
fiadds
sub
shll
in
add
loopne
dec
dec
icebp
jmp
and
lea
xor
cmp
add
inc
push
scas
pusha
jecxz
mov
jns
dec
insb
push
das
push
mov
hlt
js
mov
mov
xchg
int
cs
xor
mov
test
cld
push
pop
lods
or
mov
mov
mov
sti
jno
xchg
mov
mov
in
xchg
je
fisttps
push
xor
mov
add
fidivrs
sbb
lock
push
aaa
das
push
push
or
pusha
mov
jb
fmulp
fdivs
lcall
add
loopne
sub
addb
or
mov
jecxz
sub
or
cmp
push
sbb
adc
mulps
jecxz
ja
scas
stc
xor
sarb
jo
xchg
push
cmp
xor
cmp
sub
fbstp
std
push
and
sti
xor
movaps
mov
cld
inc
int
or
xor
cmp
xor
push
dec
fwait
push
leave
bound
mov
xor
lock
lods
cli
xor
les
aad
xorb
dec
jbe
lea
fmuls
push
inc
rorl
push
fwait
jnp
jp
out
xchg
dec
and
push
loope
adc
cltd
sbb
in
ret
mov
rdmsr
or
imul
lock
pop
mov
out
sbb
loop
scas
lods
xor
xor
xor
pop
push
shl
adc
mov
xor
push
pop
in
cmp
mov
inc
sbb
mov
mov
xor
sti
pop
iret
add
push
xor
outsl
push
adcb
imul
addr16
push
xor
sbb
adc
mov
lods
fsts
divl
fwait
push
or
dec
and
test
stos
xor
pop
and
ret
lods
rorb
lds
fucom
fs
inc
dec
int
data16
mov
inc
dec
sub
ljmp
pop
in
or
lds
xchg
mov
push
into
loope
push
out
mov
dec
xor
js
repz
mov
mov
adc
jnp
stc
inc
add
lahf
gs
sbb
in
lret
loope
adcb
dec
aad
jmp
mov
fcomi
mov
sub
or
xchg
xor
or
in
shll
cmp
std
sub
sarb
or
sahf
push
inc
add
lock
aaa
push
test
fsubs
dec
cmpb
sbb
pop
push
data16
je
adc
push
clc
jg
push
fistpl
cmpsl
std
imul
lods
push
insl
xchg
dec
mov
mov
fmull
adc
xor
xchg
hlt
and
ret
jecxz
mov
mov
ja
push
out
test
dec
add
stos
out
subb
test
and
test
dec
pop
push
outsb
lret
insl
xchg
ficoml
rcr
mov
addr16
xor
jo
fs
or
mov
dec
xor
les
shlb
imull
es
sub
subb
fs
cmp
sub
inc
gs
pop
inc
sub
jb
adc
das
mov
imul
and
xchg
mov
data16
fs
or
lret
iret
aam
xor
orb
fwait
and
xchg
stc
inc
lock
and
jo
mov
jmp
mov
xor
inc
sub
xchg
and
repz
mov
push
addb
xor
jge
shr
mov
dec
jo
sub
ret
adc
cli
repnz
insb
mov
jbe
outsb
jmp
lods
add
xor
jb
pop
aaa
cmp
sub
scas
out
lds
sbb
inc
xor
sbb
and
in
xor
pop
mov
ds
mov
add
in
std
xor
bound
xor
out
jle
sbb
jo
scas
cld
mov
shrl
lahf
xor
lret
push
fidivs
mov
xchg
and
in
bound
sub
add
icebp
into
clc
push
xor
lea
es
inc
fs
adc
shl
xor
jmp
inc
cs
std
xor
imul
movsb
sbb
inc
or
jmp
outsl
mov
das
inc
add
xor
outsl
sbb
add
out
xchg
stos
sub
test
cmc
arpl
xchg
jne
test
pushf
cmpsl
jp
jo
jle
xor
adc
xchg
xor
push
jmp
mov
xchg
and
fldt
mov
adc
xor
xchg
jne
add
repnz
mov
sub
test
xor
sti
int
xor
xor
call
xchg
inc
adc
pop
xor
lods
pop
stos
xor
lahf
xor
inc
jo
aam
loop
out
mov
push
adc
cwtl
mov
sub
or
and
shl
pop
xchg
adc
in
in
sbb
jbe
fistpll
cmp
outsb
dec
lahf
out
cmp
xor
enter
in
insb
ljmp
lcall
and
push
push
add
xchg
xor
xor
sbb
mov
addr16
sub
add
nop
xor
sub
xchg
rcll
loope
in
rclb
fs
jecxz
or
and
jno
cld
hlt
std
test
sub
inc
int3
insb
xor
xchg
rcl
xor
test
sbb
inc
push
in
add
cmp
mov
xor
ffree
out
xor
loop
sub
or
pop
sub
xor
ficompl
sub
push
pop
subb
rcll
and
mov
out
adc
xor
or
leave
aad
xor
inc
sbb
test
rcll
pusha
sbb
inc
pushf
jno
ds
and
jle
stos
or
divl
scas
xchg
or
add
xor
or
incb
dec
popf
movsb
dec
xchg
add
add
cs
in
cld
divl
pmullw
cmp
xor
imul
mov
mov
inc
bound
sbb
aas
cmp
jmp
sti
js
fwait
call
fs
shr
fidivs
or
scas
mov
es
rolb
cmp
jno
xor
adc
loope
data16
xor
sbb
test
cwtl
fmul
xor
and
mov
popa
clc
push
xor
xchg
push
jne
dec
and
dec
xor
jge
sub
les
push
or
aad
jmp
or
pop
or
jb
or
div
or
aad
jmp
mov
push
inc
mov
xor
jnp
aaa
sbb
pusha
cmp
jne
or
xchg
xor
test
mov
sbb
mov
adc
fnstenv
icebp
dec
inc
mov
xor
sub
xor
xor
xchg
mov
inc
mov
nopl
adcl
add
ret
test
fsts
push
xor
fcmovnb
icebp
out
xchg
push
imul
sub
jnp
xor
test
shlb
sub
mov
or
sbb
nop
inc
pushl
mov
pop
sbb
adc
push
lea
xor
mov
sub
or
out
add
clc
ds
jbe
cld
mov
cwtl
scas
lods
mov
mov
jb
xlat
xor
repz
add
jp
add
adc
xor
outsl
call
dec
mov
adc
sub
popa
or
jnp
cmp
fs
jmp
xchg
lcall
add
jbe
push
scas
mov
xor
aas
push
push
pop
mov
xchg
ja
or
arpl
fldt
aas
xor
js
ret
add
xchg
clc
ljmp
jo
or
mov
sbb
jno
dec
inc
add
shll
push
add
mov
or
add
jns
arpl
mov
fwait
pop
add
jo
dec
mov
out
jmp
mov
push
mov
es
mov
sub
fcompl
add
jo
dec
or
js
shr
jbe
cli
push
fwait
adc
int3
xor
out
lret
clc
fbstp
test
lea
fdivs
xchg
jle
jne
pop
ret
mov
push
push
scas
push
aas
jnp
lcall
fcoms
enter
fwait
aam
xor
push
cwtl
or
movsl
mull
daa
outsl
or
inc
lock
in
stc
xor
adc
jo
mov
lock
lods
sahf
mov
outsl
fs
call
dec
fists
push
push
cmc
mov
mov
cmp
cmpsl
lret
pop
fldt
fiaddl
push
test
xor
add
cld
loopne
pop
add
add
jmp
movlps
sbb
cs
incl
and
pop
mov
inc
push
in
jne
push
jo
loope
xor
sbb
ret
xor
cmpsb
sbb
fidivs
daa
fnsave
repnz
sahf
sbb
jbe
pop
xor
movsb
out
rdpmc
les
jle
rolb
push
adc
scas
xor
xor
xchg
dec
int
add
inc
sbb
hlt
lcall
daa
jmp
pop
loop
rol
cs
and
pushl
cmpsl
daa
imul
repnz
jl
fistpl
xchg
fidivrs
movsb
and
insl
xchg
pushl
or
icebp
pop
jo
mov
sbb
xor
aaa
in
scas
push
mov
pop
xor
call
pushf
imul
inc
jle
adc
insb
cmp
push
jo
sbb
xor
call
movb
adc
inc
xor
mov
push
push
push
loopne
test
xor
test
mov
xor
sub
add
inc
xor
or
xchg
int3
mov
iret
sbb
mov
xlat
repnz
xchg
add
cli
rorl
xor
cmp
mov
orb
add
adc
mov
xor
cmp
pop
and
mov
pop
das
or
mov
fcomps
sti
sbb
and
pop
cwtl
loopne
adc
xor
stos
addr16
nop
fstpt
push
insb
lret
xor
cltd
subb
and
and
pop
push
lret
sti
jg
hlt
adc
add
repz
and
mov
sti
cmp
ds
and
movsl
xor
loopne
inc
jmp
or
mov
out
xor
or
push
lock
imull
mov
mov
out
xchg
push
shlb
fildl
popf
adc
inc
orb
scas
cs
or
ljmp
aam
stos
cld
rolb
jle
popa
push
jnp
loope
stos
pop
fidivs
dec
push
xchg
push
mov
adcb
pop
dec
mov
inc
out
xor
cld
and
mov
xlat
movsb
add
ss
xor
jle
push
push
or
pop
mov
flds
loop
mov
mov
lods
jge
popa
jle
pop
sti
outsl
cs
sub
pop
int
add
push
or
cmp
hlt
or
lds
bound
or
jp
pop
test
int
jnp
shl
ja
mov
xchg
fsubrs
xchg
cmpsb
sub
dec
jp
push
push
dec
add
jle
sarl
dec
mov
or
mov
push
push
test
fstpt
and
jbe
xor
cld
xor
loope
sub
shrl
mov
inc
subb
mov
sub
pushf
int3
xor
movsb
xchg
sbb
sub
and
jbe
pop
rorl
jo
and
add
fisttps
test
sbb
scas
mov
and
xchg
jbe
mov
adc
or
cld
xor
push
push
rcr
mov
fdivl
push
fnstcw
cli
lret
push
xor
les
pop
ret
fidivrs
jge
xor
outsl
scas
jnp
orb
jo
mov
sbbb
push
lds
sub
sti
add
xor
scas
incl
int
xchg
xor
scas
fcoml
jge
or
into
aad
lods
inc
cmpsb
xor
cwtl
sti
repz
mov
xor
lahf
inc
xorb
rolb
icebp
xchg
ret
jmp
inc
loope
xor
mov
sub
sub
sarl
lds
subb
int3
mov
mov
adc
clc
aaa
or
fnstenv
inc
xchg
jne
jl
push
in
mov
or
fidivs
mov
or
jne
hlt
loope
pusha
xor
push
push
lods
subb
mov
pop
imul
repz
mov
call
add
clc
in
pop
shr
dec
scas
arpl
mov
jle
jmp
jg
xor
mov
outsb
or
clc
outsl
mov
cmpsb
adc
fisttpll
and
int
repnz
popa
pop
push
mov
cs
jp
mov
inc
and
xchg
mov
or
movsb
mov
inc
popa
xor
stc
pusha
clc
lret
lahf
mov
xor
popf
lods
dec
andb
xchg
mov
mov
inc
push
ret
ret
cmc
sub
into
addr16
pushf
mov
fmul
xor
scas
or
xor
in
lods
stc
add
xor
inc
push
push
fisttpll
mov
aam
loop
xchg
dec
ss
xchg
repnz
lret
xor
xchg
in
data16
push
jns
xor
fnsave
js
sbbb
or
jle
adc
or
sbb
xchg
pop
addl
dec
jb
icebp
mov
xchg
pop
out
test
xchg
xor
in
fmull
add
xchg
xor
mov
fists
lods
xor
lea
pop
icebp
stos
leave
sahf
scas
xor
dec
mov
les
xchg
or
sub
pop
jbe
hlt
sbb
push
es
in
ret
in
mov
mov
or
xor
mov
lock
xorl
jge
nop
push
and
jb
cltd
xchg
adc
mov
cmp
call
xchg
outsl
mov
mov
fcmovne
gs
cmp
push
jb
test
lcall
vcvtps2dq
frstor
lea
ror
mov
and
xchg
mov
ret
cld
jbe
pop
prefetch
jns
xor
inc
sub
dec
mov
xchg
jb
repz
insb
xor
pop
jecxz
push
int3
jmp
fxtract
loope
cmp
nop
cld
in
divb
sub
bnd
jbe
fdivs
xchg
das
pop
subb
cmp
or
adc
lahf
pop
push
xor
jp
dec
add
xor
or
add
scas
cmc
mov
iret
xor
sahf
sti
in
outsb
jle
xor
imul
and
inc
xor
add
xor
mov
pop
dec
inc
faddp
pushf
orl
cmp
mov
mov
scas
jl
xor
cs
ds
arpl
inc
mov
jp
sbb
xor
mov
rolb
lcall
dec
xchg
xor
and
inc
xchg
xor
test
pop
and
mov
cmp
mov
fadds
enter
xchg
adc
xor
sub
inc
dec
or
sub
ja
jb
push
jp
sbb
or
cmp
movsl
xor
xor
mov
inc
out
roll
mov
sti
aaa
add
loopne
inc
mov
notb
sub
xchg
xor
loop
popa
xchg
lea
out
push
int
push
in
mov
xor
push
xchg
fdivs
xor
lds
xor
mov
inc
xor
shll
add
pushf
xor
nop
mov
ljmp
divl
sti
ret
arpl
fbld
inc
xor
add
adc
adc
or
das
xor
jbe
mov
sahf
pop
xorl
cmpsl
aaa
enter
add
inc
enter
mov
out
movsl
or
xor
mov
stos
cwtl
xor
and
jge
dec
or
lock
movsl
or
sub
cmp
inc
clc
out
sbbb
xchg
adc
cmc
pop
and
int3
push
dec
sbb
xor
into
jb
jb
fstl
sbb
xor
xchg
xor
mov
add
clc
imul
mov
inc
or
mov
sub
xor
wbinvd
xlat
xchg
dec
xchg
and
inc
xor
inc
fadds
xchg
jp
add
sub
rolb
and
cli
or
adc
mov
jl
loop
jge
mov
push
pushf
pop
cmpb
decb
cmp
sarl
jo
dec
xorb
mov
and
and
xchg
mov
cli
adc
dec
cmp
hlt
xorb
sub
add
orb
xor
pop
mov
mov
pop
mov
dec
xor
bts
sti
movsl
dec
jne,pn
out
inc
and
in
adc
jg
fwait
inc
fldcw
xor
sbb
pop
mov
in
daa
dec
ret
sub
leave
outsb
addb
fcomps
pop
mov
push
push
xor
daa
pop
iret
rorl
push
dec
pop
pop
jnp
iret
add
in
sar
jns
sbb
sub
mov
out
outsb
pop
and
xor
xchg
jns
jno
sti
lret
add
mov
xor
xchg
add
fwait
pop
test
inc
shl
mov
push
cld
mull
ret
repz
push
sbb
in
cmp
sarb
pusha
xchg
ret
xor
or
shll
adc
imul
jp
or
or
jo
jns
aam
lock
mov
loope
or
dec
xorb
or
adc
data16
xchg
add
sbb
fwait
cmp
xor
dec
scas
mov
jnp
adc
mov
out
mov
mov
xor
loopne
xor
loop
ljmp
mov
addr16
and
pop
pop
cmpsb
sub
xchg
sahf
out
jno
loopne
pop
into
xchg
jbe
or
pop
push
in
push
or
rcrl
push
xchg
add
and
or
mov
and
and
sbb
scas
mov
mov
test
mov
xor
ds
push
xor
out
xchg
mov
xor
and
and
or
ret
or
cmpl
mov
adc
lds
inc
stos
repz
es
cli
xor
fwait
xor
push
notl
xor
inc
hlt
cmp
push
lods
jnp
jge
rolb
xor
or
push
shrb
sub
xor
loop
int
xor
sti
pop
jecxz
xor
xchg
push
shrl
mov
mov
xor
outsb
testl
sbb
test
xchg
push
call
out
shr
jbe
xor
mov
add
aas
cmp
xchg
adc
jne
imull
addr16
xor
xlat
out
xor
push
sti
enter
cltd
adc
in
inc
aad
loope
and
jno
rorb
stc
jecxz
mov
xor
ret
popf
push
mov
dec
mov
xor
adc
pop
xor
int3
jne
xor
test
push
mov
notb
out
pushf
adc
pop
pop
push
outsb
push
cmp
repnz
xchg
mov
ja
fprem
xor
xchg
mov
lock
xor
ss
xchg
icebp
xor
pop
loope
rdmsr
gs
fwait
lea
xlat
xor
sarb
popf
adc
xor
daa
push
mov
pop
cmp
xlat
pop
das
jmp
adc
mov
mov
add
hlt
push
push
into
xchg
xor
incb
movsb
mov
fisubrl
inc
in
adc
xchg
mov
xchg
nop
lret
aas
outsb
inc
enter
xor
add
test
xor
push
and
xor
movsl
int
xor
pop
fs
out
fwait
xor
cmp
sub
cmp
out
dec
sahf
pusha
push
push
hlt
aaa
sbb
sub
ds
loop
push
mov
cld
xor
or
shll
mov
fnstenv
adc
dec
imul
in
mov
sbb
ss
pop
sbb
add
in
push
int3
cli
sbb
xchg
cmp
das
cmc
cmp
xchg
inc
inc
pushl
jae
lret
js
addr16
clc
test
nop
adc
stos
cwtl
dec
out
scas
sub
lock
push
push
xor
inc
xchg
fld
nop
jns
and
out
jge
xor
arpl
sub
mov
scas
insb
mov
mov
dec
pusha
ficompl
mov
loope
pop
lea
dec
arpl
inc
test
pusha
movsb
xor
in
loopne
ret
adc
xor
lret
mov
inc
mov
dec
jbe
pop
and
cs
xchg
incb
lods
dec
push
mov
pushf
xchg
add
inc
cmp
mov
adc
and
push
push
mov
aaa
in
cmp
xchg
lea
in
xchg
add
hlt
icebp
xor
inc
mov
repnz
mov
ret
jge
sub
aad
xor
mov
and
nop
repnz
fs
add
loope
shrb
sub
mov
aad
xchg
ss
sbb
icebp
or
jne
pop
adc
and
xor
cmp
lds
xchg
xor
adc
into
cwtl
into
outsb
xor
adc
gs
mov
out
mov
fists
hlt
pop
in
push
sahf
xchg
loopne
ficomps
xor
jg
aas
mov
fcompl
xor
js
andb
lods
stos
xor
jbe
and
dec
xchg
cld
sbbb
sub
fldcw
push
lds
lock
icebp
xor
addr16
mov
pop
int3
jb
popf
sub
lods
mov
xor
ds
rep
leave
sbb
add
imul
push
xor
add
xor
ret
stos
scas
bound
push
fisubrs
xor
loop
ror
xor
add
and
mov
cmc
xor
jmp
inc
jno
in
iret
test
mov
sbb
push
lcall
cmp
mov
pop
int3
insl
insb
lret
or
or
stos
mov
push
jb
dec
mov
mov
jbe
lret
jne
out
jmp
pop
rclb
lods
xor
and
inc
pusha
mov
xor
fstl
repnz
outsb
sbb
loope
enter
and
xchg
jno
pop
push
stos
ss
addr16
mov
or
dec
nop
jp
pop
fdivl
push
mov
ss
scas
xor
add
sub
and
insl
andb
arpl
fcoms
xchg
cmp
or
xor
aas
inc
jbe
out
sub
adc
int
in
je
loop
stos
add
push
inc
shlb
jp
icebp
cld
xor
in
testb
xor
in
mov
in
sbb
adc
jp
xchg
or
les
adc
dec
lea
and
test
jne
xor
mov
mov
lds
xor
movsl
into
cld
jl
fldt
mov
sub
sahf
ljmp
sbb
xor
int
mov
mov
rcrb
out
xor
into
in
push
jo
shll
mov
adc
mov
repz
xlat
pushf
cs
jae
ret
clc
add
mov
inc
dec
gs
sbb
popf
sub
or
fwait
pop
xor
push
mov
xor
mov
lea
mov
mov
sti
push
inc
jne
shlb
mov
mov
add
cwtl
mov
lret
pop
idiv
xchg
les
movsl
adc
xor
xlat
cmc
mov
test
sub
xor
cld
stc
xchg
lds
jns
ret
jnp
fs
xorl
rolb
xor
push
sbb
sub
loop
xchg
movsb
jg
sub
inc
mov
xlat
xor
and
xchg
xchg
int
xor
push
or
mov
and
jb
inc
daa
mov
inc
addb
das
addr16
xor
inc
jbe
popa
notb
xorl
fildl
inc
push
loopne
int
xchg
sbb
sahf
repz
out
mov
lds
cltd
and
das
mov
nop
in
xor
add
jmp
inc
ja
xor
sub
add
jg
inc
pop
xchg
test
xor
push
sub
mov
mov
xor
mov
lods
add
push
add
mov
xor
push
loop
pushf
xor
or
inc
lods
adc
or
xor
bound
add
lds
cmpsb
lock
mov
or
push
cmc
xchg
push
lahf
jo
inc
lods
cmp
ret
mov
imul
mov
mov
aam
xor
inc
stos
adc
test
push
lret
shrb
fstpl
inc
iret
orb
cli
out
mov
repz
imul
xor
mov
fisubs
bound
test
in
sub
loopne
push
xor
in
sub
xor
sbb
divl
jb
in
cmpsl
jne
xor
loopne
xchg
cltd
pushf
jnp
cmp
jns
and
pop
stos
or
jg
repz
andl
mov
mul
cmp
sub
cld
leave
arpl
and
fs
mov
mov
xor
mov
jmp
mov
pusha
mov
and
jnp
inc
test
inc
mov
inc
cli
mov
push
sub
fldenv
jne
inc
sbb
fs
xor
stos
sub
adc
pop
push
xor
dec
lret
call
xor
or
test
jg
add
sub
and
xor
or
dec
xorb
mov
test
adc
ret
sub
lret
or
inc
loope
pop
nop
aaa
xchg
outsb
sbbb
testl
jo
dec
aas
sub
adc
lock
add
stos
inc
mov
xor
jecxz
push
out
into
cmpsb
shlb
stc
or
das
test
fdivrp
hlt
mov
repnz
loope
push
loope
sub
add
mov
xor
xchg
or
xor
or
adcb
add
icebp
pop
push
jl
mov
mov
cmp
or
je
mov
inc
ret
inc
or
nop
xor
sub
pushf
add
mov
mov
push
push
sub
jl
xor
adc
inc
fwait
and
fsubrs
cs
inc
out
pop
push
outsl
bound
aad
cli
nop
or
inc
out
mov
je
lock
mov
lahf
pop
inc
and
les
mov
xor
cltd
test
add
and
cwtl
inc
shll
fldt
in
lds
in
testb
or
mov
xor
jne
std
stos
or
xor
sbbl
mov
push
mov
lock
hlt
sub
test
out
push
sub
daa
rcrb
xchg
in
mov
dec
inc
out
lahf
repnz
data16
lods
pop
add
addr16
ret
bnd
fmuls
test
mov
lret
xchg
pop
fstl
rcpps
aaa
mov
sti
or
and
pop
push
outsl
add
pop
pop
xorl
shll
loope
mov
mov
flds
xor
cmp
or
mov
repz
cmpsl
dec
fldcw
xor
push
mov
xchg
adc
xor
imul
mov
and
adc
xlat
lds
popf
cmpsl
pop
mov
mov
test
and
out
shlb
mov
jmp
push
cmp
xor
stc
in
add
or
xor
int
sti
bound
mov
fldt
pop
mov
jp
stc
jns
das
ljmp
lret
rorb
vprotd
xor
jmp
out
adc
jle
cmpsl
pop
add
sti
test
mov
arpl
and
inc
xchg
mov
int
mov
movsl
add
insl
sub
jbe
push
stos
je
mov
xor
outsb
mov
add
jnp
xchg
adc
mov
xor
sti
out
xor
jns
dec
hlt
fdivr
pushf
jl
lods
nop
lds
fwait
insb
pop
mov
xchg
sbb
mov
dec
imul
fdivl
and
mov
jno
js
xchg
mov
adc
sub
hlt
fsubrp
lds
lock
mov
test
mov
xor
popf
fnsave
es
jmp
arpl
push
pushf
mov
pop
insl
addr16
add
jge
jmp
stc
push
in
cwtl
or
ss
jmp
lea
in
int3
stos
leave
xor
inc
dec
pop
mov
and
jo
data16
gs
into
push
xor
sbb
inc
mov
fisttpl
cmp
mov
mov
addl
cmp
xor
inc
cmp
xchg
adc
xchg
das
int3
notb
or
in
pop
mov
and
xor
out
in
sbb
fsub
movsl
dec
popf
mov
test
negl
xlat
mov
pop
iret
push
mov
adc
push
aam
adc
testb
hlt
cmp
rcrl
in
xor
fwait
adc
enter
add
xor
sti
stos
into
pop
js
xchg
xor
sbb
sbb
lret
imul
inc
roll
sub
add
push
adc
add
cmp
test
dec
inc
movsb
sub
aaa
push
lcall
aaa
sbb
ljmp
mov
icebp
or
adc
push
aaa
dec
and
repnz
jae,pt
call
lcall
loop
xor
push
fistps
fldl
xchg
add
sbb
repnz
fistl
pop
sbb
pop
sub
in
inc
insl
movl
or
sub
out
add
cld
sbb
add
pop
lock
xor
scas
stc
inc
xor
rcrl
adc
cli
mov
clc
mov
addb
sub
jbe
int3
incb
ja
push
mov
xchg
into
fistps
adc
pop
mov
xchg
push
notl
xchg
sbb
outsb
into
std
xor
xchg
lods
adcl
push
stos
lea
cwtl
jle
lcall
loop
push
adc
push
pop
jae
scas
cmc
mov
dec
jbe
aam
pop
add
mov
or
push
xor
or
mov
repz
mov
rorb
mov
sbb
cld
shll
popf
xor
adc
push
mov
xor
push
add
lods
in
mov
inc
js
mov
out
cmp
outsl
dec
fcomip
push
ret
mov
sahf
sub
sbb
es
jge
movsb
cmpsb
jo
insb
ss
test
xor
scas
xchg
add
jg
cs
shll
dec
bound
xor
incb
sbb
push
cltd
xchg
add
data16
xorb
sti
and
mov
fnstsw
sub
or
xor
jle
mov
roll
mov
js
pushf
xor
out
xchg
adc
fucomi
pusha
shll
fs
cwtl
push
outsl
xchg
add
xchg
sarb
inc
fsts
lret
les
adc
scas
daa
cli
xor
cmp
shlb
mov
data16
stc
pop
xor
hlt
pop
enter
aaa
jne
jnp
fiadds
xor
and
adc
fcmovnb
push
lcall
lret
sbb
xchg
std
je
xchg
pop
sub
sahf
mov
imul
jnp
mov
jg
shlb
mov
add
out
and
lahf
ss
daa
or
ret
xor
push
push
xor
outsl
dec
lds
jp
je
loopne
call
ja
adc
ss
scas
push
ss
jnp
xor
jno
xor
cwtl
insb
dec
mov
call
in
movsb
push
add
adc
push
and
add
int
mov
outsl
gs
jle
push
rol
stos
or
lock
mov
sti
sbb
outsb
pop
shr
jno
lds
pop
daa
pop
cli
and
loope
and
fidivs
or
cmp
mov
inc
add
ss
daa
pop
shll
dec
xor
lods
sbbl
and
mov
sub
lock
sbb
cld
adc
std
push
pusha
jae
lret
test
add
aaa
xchg
mov
outsb
xor
push
lea
xor
movsl
fildl
or
and
loop
cmp
fidivrs
cmp
and
xor
addr16
jb
dec
or
xor
mov
jge
leave
mov
jmp
mov
or
pop
xor
mov
test
stc
lcall
pushf
xchg
in
push
xor
call
lret
xor
jnp
test
push
rclb
adc
shrl
mov
xor
stc
cwtl
jle
mov
pop
pushf
or
xor
mov
mov
ret
mov
fwait
or
aaa
jae
adcb
ss
add
add
push
pushf
inc
mov
mov
nop
mov
fcmovnu
imul
xor
xchg
and
adc
lods
ss
pusha
jmp
jns
dec
aaa
std
jmp
sub
jle
lret
inc
inc
push
sbb
sub
xor
jl
jg
mov
out
sub
into
mov
ds
mov
ss
movsb
or
fldenv
pop
int3
mov
adc
add
movsb
enter
xor
push
and
lea
add
sbb
xchg
sub
dec
xor
leave
mov
test
insb
mov
add
or
jno
xchg
jecxz
lods
int
es
andl
pushf
sub
and
xor
jns
dec
fwait
rorb
or
push
test
xchg
xor
repnz
icebp
stos
xchg
mov
mov
and
push
push
lock
sahf
lock
push
pop
roll
hlt
cmp
xchg
sub
adc
pop
insl
xor
call
mov
jne
fidivs
adc
scas
dec
hlt
jecxz
orb
lret
outsb
lret
fisubs
sbb
sub
aad
xchg
fs
mov
dec
into
ffree
push
hlt
int3
xchg
orb
arpl
xor
rorl
popf
adc
jge
fwait
and
sub
and
inc
dec
xor
orb
cmp
cmpl
xor
mov
movsl
add
rol
xor
insb
sahf
sub
xorb
xor
in
adc
xor
cld
hlt
mov
shll
rcrb
push
jle
out
dec
xchg
rcr
inc
inc
mov
add
xor
scas
jg
aaa
les
sti
or
pop
cli
and
dec
push
cs
pop
cmpsl
add
push
dec
rep
adc
test
push
sbb
mov
add
mov
je
test
xor
scas
jbe
aad
xor
xor
adc
inc
add
jo
pop
out
lret
xchg
push
aam
jae
add
lods
add
push
or
popf
popa
repnz
jle
pop
sti
or
jle
in
xor
xchg
je
les
xchg
mov
jb
push
jo
inc
stc
cltd
sub
loop
jl
imul
adc
xchg
jo
pushf
and
sbb
jmp
pop
je
inc
ret
fwait
lods
lds
enter
imul
nopl
lea
xor
pushf
mov
and
stc
cmp
pusha
jb
pusha
dec
nop
sbb
addb
xchg
cmp
jbe
lds
shrb
pop
jp
push
loopne
xchg
cltd
xor
and
inc
pusha
xchg
xor
mov
fisubrl
mov
add
adc
das
xor
mov
ret
or
sbb
xor
xor
arpl
xor
dec
and
inc
jo
andl
repz
pop
push
push
xchg
jb
or
xor
sahf
fcompl
in
or
incl
bound
and
icebp
pop
scas
jg
jmp
cmpsb
outsl
lock
xor
jge
loopne
mov
add
and
ja
insl
add
push
xchg
movsb
or
adc
pop
xchg
xor
fstpt
mov
out
cs
xor
jo
shll
aaa
stc
xor
lock
cmp
mov
or
jbe
fcomi
ret
movshdup
adc
pop
and
cli
inc
rorl
arpl
mov
mov
adc
cmp
add
in
aam
push
jg
dec
aad
xor
imulb
xor
mov
add
stos
xlat
pop
scas
xor
pop
and
add
xchg
push
aad
std
xor
lcall
xor
adcl
jmp
xor
mov
mov
pop
andb
loopne
lods
push
jle
lret
xor
jp
add
faddl
iret
cmpb
inc
cs
call
xor
xor
ja
js
mov
or
xchg
clc
xor
jle
je
xor
shl
rcl
ficoms
in
arpl
xchg
or
adc
inc
clc
jl
lods
xor
xor
xchg
adc
and
ffree
add
xchg
or
in
mov
loope
pusha
xor
pop
sub
xchg
mov
push
popf
ret
ja
mov
outsb
daa
sub
mov
push
rolb
rorl
hlt
sti
xor
dec
pop
mov
push
gs
add
mov
in
sahf
shl
or
and
nop
imul
pop
sbb
jp
jae
push
push
aam
ds
adc
pop
xor
mov
push
xor
xchg
std
das
shrl
into
gs
mov
ret
inc
aad
cmpb
add
call
dec
jae
mov
in
push
ljmp
adc
cmp
mov
arpl
dec
push
repnz
out
xor
or
mov
insl
pop
ss
sub
cli
sti
cmc
ja
add
inc
cmpb
pushf
sbb
loop
xor
lods
jl
arpl
and
push
out
add
sub
aaa
fnsave
mov
out
pop
push
jmp
mov
sub
pop
fdivrl
dec
rcr
mov
clc
pushl
ret
xor
pushf
into
adc
arpl
push
hlt
push
sub
cmp
sbb
xor
push
xchg
dec
push
das
lcall
cmp
sub
dec
dec
aas
mov
sbb
cmc
xor
pop
rdtsc
je
mov
loopne
xor
rorl
and
jae
jno
fisttps
addr16
mov
flds
mov
int3
adc
pop
mov
push
test
xor
popf
je
xor
sub
and
ss
mov
shrl
push
xor
jb
and
fdivl
fldcw
std
jmp
jl
mov
out
jp
xor
mov
mov
sti
xor
sbb
imul
cmp
cmp
inc
cwtl
xor
mov
jo
add
shl
int3
or
shl
mov
mov
inc
push
into
mov
xor
in
shrb
test
loop
sub
into
pop
pushf
out
test
cmc
mov
mov
lods
mov
pop
ret
push
call
in
jg
xor
xor
inc
add
xor
add
in
sbbl
and
nop
stos
push
out
xor
jmp
dec
ret
mov
jns
lds
test
mov
ljmp
pop
sub
ss
add
xchg
lcall
pop
mov
jge
in
aam
lds
and
call
inc
cmp
sbb
stos
sub
xchg
mov
les
pop
add
aaa
in
in
fs
jp
xchg
cld
hlt
lds
cs
push
add
lods
xor
mov
mov
pop
mov
cmp
shll
lods
add
jp
mov
cs
inc
adc
hlt
cmpsl
sbb
fwait
or
pop
sub
sbb
xor
pop
aaa
mov
or
xor
push
push
jno,pt
cmp
pop
sub
mov
xchg
dec
adc
sub
dec
mov
loop
iret
jae
jge
push
xor
rcll
or
lods
mov
mov
xlat
imul
mov
or
adc
pop
sbb
fldcw
shr
into
xor
movsl
jmp
je
xor
scas
xchg
ds
adc
mov
sbb
test
and
xchg
shl
icebp
cmp
mov
pop
xlat
jnp
push
xchg
je
push
push
pop
adc
xor
or
cmp
xchg
sbb
push
xor
out
std
pop
jmp
adc
inc
fnstsw
jg
adc
stos
pop
xor
out
or
xor
stos
lods
jae
push
mov
shl
call
xor
in
je
pop
cmp
xor
pop
or
xchg
data16
divl
ret
pusha
xor
jb
lods
sub
fsubr
aaa
int3
adc
and
icebp
int3
jbe
xorb
dec
fcoms
fidivrs
sbb
mov
nop
popa
xchg
xor
pop
lret
imul
adc
popf
imul
cs
pop
leave
cmp
rorl
test
pop
shlb
push
inc
push
aad
xor
dec
or
inc
xchg
lds
sub
test
rorl
ljmp
adc
incl
push
insb
dec
pop
xor
cltd
ljmp
sbb
xor
fstpl
jmp
ret
xchg
xor
add
adc
or
cmp
or
clc
cmpsl
cmp
xor
call
inc
mov
cwtl
mov
mov
xor
add
jp
fiadds
cli
sub
fcmovb
arpl
aas
xor
in
push
mov
lcall
pop
jb
xchg
xor
sbb
jb
fistpl
mov
push
mov
addr16
pop
mov
push
push
iret
inc
pop
mov
aas
inc
add
notl
cmp
xor
lret
pop
xor
mov
outsl
mov
test
cmc
mov
enter
lods
xor
mov
add
inc
dec
addb
push
data16
xchg
sub
mov
mov
dec
xchg
mov
xor
out
cmpsl
xor
pushf
jbe
mov
cltd
outsl
movsb
sbb
xor
pop
adcl
out
shlb
push
clc
cld
ret
orb
cmpb
fsubs
mov
loopne
xor
loop
in
aad
test
out
cmp
test
mov
xor
pop
or
int3
inc
adc
cld
add
push
lock
xchg
inc
je
pop
addb
fsubrs
cli
shlb
pop
jno
xor
mov
test
mov
mov
test
xor
fnstcw
mov
and
mov
push
mov
jo
nop
dec
add
push
pop
andb
sub
adc
outsl
xchg
lods
sub
pop
xchg
jb
enter
aam
stos
sub
and
fildll
mov
jo
cwtl
into
bound
fisubrs
xor
punpcklbw
and
es
mov
iret
xor
shlb
mov
inc
int3
popa
lret
xchg
leave
test
lds
mov
cwtl
faddp
je
jne
clc
pop
orl
jge
aam
xor
stos
cmc
xor
inc
mov
sub
js
xchg
mov
je
mov
out
addr16
pop
stc
mov
xor
mov
idivb
jp
jge
outsl
and
lock
fwait
ljmp
push
cmp
xor
loope
aad
pushf
xor
push
shlb
dec
les
in
fidivrl
hlt
clc
pop
ds
movsl
cli
and
call
pusha
pop
ds
scas
mov
cs
mov
hlt
imul
cmp
lcall
jae
popa
xor
xor
bound
sbb
and
or
or
ret
inc
aam
imul
es
dec
and
jl
jb
int
pop
mov
jb
and
clc
jp
xor
jno
xor
shll
and
addb
xor
in
out
sahf
sbb
shrb
push
sarb
cmpsl
cltd
xor
nop
push
dec
je
and
cmp
jae
cmp
adc
sbbb
scas
cld
xor
lods
cmp
testb
sub
sti
ljmp
lret
push
iret
jmp
stos
repnz
jne
sbb
pop
aam
xor
dec
adc
cmp
stc
enter
pop
test
inc
mov
xor
jns
mov
add
aas
adc
in
xorl
or
mov
xchg
rorl
cld
mov
aad
dec
test
xor
test
push
ret
xchg
sbb
bound
divb
test
stos
adc
andb
stc
popa
xor
hlt
fcomp
dec
test
xor
popf
jp
adc
mov
rorb
add
dec
inc
fs
pop
xor
xor
mov
push
cld
jb
sbb
mov
push
out
sarl
std
cmpsb
push
repnz
setg
ds
dec
dec
test
cvttps2pi
adc
mov
insb
mov
lcall
dec
aam
xor
push
xor
sbb
sbb
test
xchg
lock
mov
push
adc
cmp
xor
push
xchg
ror
sub
dec
pop
lods
std
movsb
xor
mov
jbe
loope
push
frstor
dec
or
enter
aaa
add
iret
fwait
in
xchg
or
pop
daa
rcll
mov
lret
in
and
push
or
push
inc
pop
pop
inc
les
pop
in
xchg
pop
pop
pop
mov
xor
popf
inc
xchg
jnp
in
inc
and
cmpsb
ficompl
test
cld
cmpsl
xor
repnz
mov
in
pop
out
sub
jo
add
adc
cs
sbb
les
mov
push
add
sub
imull
nop
inc
pusha
negb
or
jno
xchg
pop
jbe
cmp
fdivp
dec
pop
in
jnp
mov
sbb
cmp
mov
adc
xor
sbb
mov
mov
out
aaa
pop
add
fs
outsb
mov
jns
int
lods
daa
cwtl
idiv
xor
xor
jo
or
or
add
xchg
inc
mov
mov
dec
xor
mov
sbb
pop
sbb
mov
and
sub
lahf
cmp
xor
mov
pop
adc
cmpb
add
and
push
jmp
xor
xchg
icebp
divl
and
test
add
jne
xor
imul
pop
int
mov
test
addb
xor
fildl
ficompl
sbb
mov
adc
addr16
ja
outsl
mov
mov
popf
xor
xchg
rdmsr
fcmovu
add
sub
xorl
gs
lret
lods
push
cmp
ss
xor
jmp
aas
push
mov
lock
arpl
je
mov
xor
call
add
mov
mov
cmp
mov
loopne
xchg
mov
sub
inc
int3
shll
and
iret
inc
inc
push
xorl
sarb
sub
xor
dec
push
adc
sarl
je
sbb
cmp
jne
xor
ret
mov
sahf
push
out
xlat
cld
push
add
xor
push
dec
sbb
dec
insl
int
xchg
dec
cwtl
inc
cmp
lods
sub
add
scas
adcb
les
mov
xor
aas
shl
mov
inc
ss
push
clc
subb
mov
cmc
scas
pop
xorb
jmp
pop
pop
xor
std
popf
addr16
movsl
adc
imul
cmp
aam
mov
movsb
inc
dec
mov
xor
xlat
js
lcall
dec
xor
sub
sub
adc
movl
xchg
pop
lahf
xor
data16
push
stc
sbb
xor
cmp
js
lea
xlat
clc
mov
jmp
stos
sub
ss
fcmovb
jle
xor
xchg
clc
das
push
xor
xor
ljmp
and
jp
call
push
push
add
dec
inc
outsb
pusha
dec
adc
outsb
and
cltd
mov
dec
in
pop
cs
gs
sub
dec
xor
mov
sbb
or
jp
pop
cs
shll
adc
push
jns,pt
cltd
xchg
jo
xor
xor
mov
or
jnp
push
and
fwait
lock
xor
or
xchg
adc
fbstp
add
xor
enter
mov
leave
inc
sbb
ss
adc
sbb
xchg
jae
xor
inc
push
int
jp
push
push
mov
pop
mov
xor
shlb
pop
jecxz
cmp
cmpsl
sbb
mov
test
jae
mov
xor
jnp
lds
ss
sub
jne
loop
mov
xor
sbbb
pop
movsb
out
inc
mov
sbb
roll
imul
adc
push
add
add
jp
cs
inc
lock
dec
stos
shlb
shlb
push
push
jp
inc
sahf
ljmp
aad
loop
mov
xor
mov
lea
xchg
adc
lahf
xor
pop
aas
mov
lret
mov
adc
stos
sub
mov
lock
cli
fidivl
dec
cmp
in
xchg
xor
jbe
dec
xor
out
sbb
push
cmp
xor
xor
cltd
arpl
sbb
mov
sub
ds
jae
xor
iret
gs
sbb
jo
inc
inc
pop
jle
sub
imul
fs
int
xlat
push
leave
sbb
sbb
das
sub
xor
cmp
xor
xchg
in
mov
cmp
shll
pop
insb
add
cmp
cmpsb
testb
jle
dec
clc
sbb
inc
mov
mov
outsl
mov
insb
bnd
adc
pop
inc
cmp
sub
test
inc
nop
lcallw
xor
adc
xor
or
dec
push
mov
mov
idivb
loopne
ss
mov
mov
jnp
jne
xor
xorb
scas
leave
sub
cmc
int
xor
and
jl
scas
and
int3
ja
xor
shrb
pop
add
add
jecxz
inc
stos
xor
ficomps
daa
shlb
add
fsubrs
cmpsl
lret
loop
xor
add
or
aad
int3
xor
fsubrs
inc
jnp
add
mov
add
loop
xchg
dec
pop
cmpsb
jno
hlt
and
pop
int
mov
insb
and
push
cs
cmp
xor
jle
add
add
mov
pop
in
scas
sub
xor
xorb
add
mulb
mov
sub
sub
hlt
cmpsb
inc
cld
inc
xor
jg
or
xor
dec
xor
imul
pop
repnz
cmpb
aam
shll
and
das
jmp
neg
xor
addr16
jno
arpl
add
out
xor
imul
mov
fisubs
xchg
aam
mov
sub
js
icebp
test
cmc
mov
push
xor
pop
pop
inc
or
adc
xor
fcomps
aad
aaa
or
lcall
adc
subl
pop
mov
dec
lock
je
dec
adc
push
sub
inc
jp
adc
jmp
and
andl
lret
xor
test
je
sbb
mov
cmp
repz
cmp
mov
jns
pop
sbb
jle
mov
cmp
aam
xor
ljmp
inc
push
shrb
imul
rorb
nop
jecxz
clc
mov
inc
scas
sbb
jp
pop
loopne
push
mov
and
xchg
lds
ljmp
int
adc
sub
add
push
jnp
pop
das
inc
test
xor
repz
xor
cs
cmp
mov
dec
xor
loopne
xor
push
adc
loopne
cmpsl
jae
mov
jae
mov
subb
mov
popf
inc
pusha
jp
mov
or
fs
push
test
int3
mov
mov
cmp
lcall
clc
mov
xchg
sub
mov
rorl
push
pop
addb
jo
bnd
inc
sub
push
ds
mov
call
out
xor
lahf
imul
in
jge
xor
sbb
mull
stos
cmp
insb
adc
add
mov
fmuls
orl
jl
aad
dec
sub
xor
popa
xchg
push
or
addr16
xor
inc
inc
mov
insl
imul
mov
pop
or
in
jge
inc
cmp
xor
out
into
push
add
movsl
xor
mov
das
jge
or
lds
sbb
xchg
fisubrl
dec
rcrb
and
mov
je
aam
lock
int
pop
mov
sti
pop
into
ja
xchg
stc
xor
cmpb
enter
mov
call
fs
popw
add
mov
mov
mov
stos
mov
dec
xchg
xorl
fwait
pop
sbb
mov
popf
out
rcr
push
out
pop
loope
mov
adc
xor
inc
sub
or
push
rcl
mov
xor
dec
loop
add
jae
inc
cwtl
out
push
mov
je
inc
pop
and
aaa
stos
aas
sbb
pushl
sub
lods
cmp
adc
outsb
addl
fidivrl
jge
mov
orb
sub
sub
std
fdivs
insl
or
sub
inc
jnp
aad
aaa
imul
adc
shl
push
call
enter
loopne
rclb
xor
and
xchg
jo
xor
xor
cltd
aam
xor
rolb
out
daa
aaa
inc
cmp
mov
adc
shrl
addr16
and
aam
fmull
loope
subb
jns
xor
arpl
xor
pop
sti
jmp
scas
adc
xor
mov
loop
bound
lss
mov
push
or
push
mov
notb
adcb
jmp
sub
lods
adc
dec
push
cmpl
ret
int3
jb
inc
and
mov
je
ljmp
adcb
rolb
jne
insl
push
sub
cmc
scas
loop
adc
xchg
jns
popa
lods
adc
push
jb
addr16
sub
jno
negl
movsb
sub
inc
dec
xor
divl
inc
dec
ja
sbb
xchg
pop
xor
mov
insb
shrl
pop
mov
divl
xor
mov
sub
xor
cmpsb
sbb
sahf
dec
cmp
pop
loop
ds
xor
and
lret
mov
mov
cmpsl
mov
cmpsb
sarb
stc
inc
out
lcall
idivl
loop
insb
mov
mov
push
inc
fdiv
inc
flds
sub
pop
pop
jl
jb
mov
nop
call
cmp
xor
orb
sahf
sub
push
xor
push
pop
xor
lods
sub
add
negb
rolb
aad
push
xor
fs
mov
lret
add
push
lret
xor
dec
mov
cwtd
push
push
sbb
sbb
xor
stc
mov
pop
repnz
pop
lods
hlt
pusha
cmpb
js
sbb
or
aad
mov
inc
sar
adc
cs
mov
mov
push
out
mov
push
push
push
pop
int3
mov
inc
xchg
dec
mov
push
mov
adc
inc
xchg
xor
gs
stc
lea
repnz
dec
and
imul
xor
pop
fsub
mov
andb
mov
and
loopne
cmp
push
neg
mov
sub
ljmp
xor
std
mov
in
xor
scas
adcl
in
cmp
in
push
arpl
pop
rorl
xchg
test
pop
mov
addr16
pop
les
push
lods
mov
mov
ja
xor
loopne
test
outsl
jno
test
xor
sub
push
mov
jle
and
or
xchg
and
and
dec
lock
sbb
sbb
xor
mov
mov
inc
mov
cmp
push
fs
xorb
mov
jle
mov
movsl
jmp
xor
shll
xor
cmc
sahf
aas
inc
mov
sbb
dec
mov
inc
xor
addr16
dec
sbb
imul
mov
xchg
mov
xor
pop
movsb
lcall
fmull
insl
ret
push
test
stos
lods
and
data16
dec
mov
nop
lock
or
pop
clc
cs
shr
rorb
xchg
cmpsl
or
cmp
or
pop
div
xor
and
or
or
xor
ret
imul
push
xor
out
sub
sbb
mov
mov
ret
in
mov
dec
jle
push
xchg
adc
ffree
inc
out
sub
rcrl
adc
aad
push
push
fsubr
mov
movsl
cmp
xchg
inc
in
mov
arpl
cmc
bound
int3
ret
jae
dec
cltd
pop
clc
orl
inc
inc
pop
aad
pop
lods
and
int3
fcmovnu
fwait
int3
adc
fwait
out
mov
mov
xor
mov
sti
sub
dec
push
loop
shl
sub
pusha
jbe
jecxz
xor
ret
mov
in
fwait
outsl
mov
dec
and
or
outsb
loopne
dec
add
pop
jecxz
adc
jg
out
repz
mov
orb
xlat
mov
sbb
lods
xor
rorl
xor
outsl
bound
fisubs
rcr
pop
movsb
xor
dec
dec
sti
dec
fbstp
mov
cmc
push
cwtl
inc
mov
xor
adc
and
pop
mov
scas
xor
rcrl
add
shlb
call
lret
call
insb
data16
jns
cmc
mov
pop
mov
fbld
or
cmp
hlt
fst
sbbb
mov
sbb
lds
inc
mov
mov
add
xlat
arpl
in
fistpl
mov
rcr
pop
jno
ret
pop
sub
mov
jnp
fcoms
stc
sysenter
lods
mov
inc
aas
sbb
inc
add
mov
dec
push
xor
sub
sbb
call
mov
adc
pusha
jo
jl
pop
inc
scas
fnstsw
je
add
dec
cwtl
and
psrad
mov
inc
mov
jae
cli
int3
mov
divl
repnz
adcb
xchg
aas
and
icebp
call
mov
divl
add
popa
xchg
inc
cs
xor
dec
insl
mov
je
cmpsb
lds
aas
push
push
mov
pop
xor
dec
orb
xor
and
sbb
fs
rcr
int
ljmp
repnz
dec
je
sbb
nop
jae
cltd
inc
leave
pop
pop
jle
xlat
xor
xchg
xcrypt-ctr
cmpsl
sbb
fbstp
cwtl
repz
lods
jle
std
xchg
stc
push
jmp
xor
fimuls
sub
or
inc
sarb
movsl
mov
mov
push
bound
fdivs
jb
push
repnz
fwait
ret
mov
xor
test
mov
pop
gs
or
xor
xor
mov
loopne
dec
pushf
dec
aas
cmp
mov
jle
mov
mov
xchg
sbb
shrb
xor
loop
xor
inc
icebp
mov
jnp
test
jle
pop
or
xor
inc
xchg
lahf
cltd
ljmp
adc
push
adc
xor
incl
xor
hlt
js
inc
pop
insb
pop
cmp
ja
and
test
dec
gs
insl
pop
popf
shll
sbb
ret
mov
dec
xor
insl
jle
and
std
and
mov
and
aaa
pop
stc
pop
mov
lods
out
js
mov
mov
xor
jns
adcl
fisubrs
jbe
sbb
cmpsl
add
in
jp
or
dec
lock
push
in
xor
rolb
push
fmulp
xor
cmp
cmp
shr
mov
mov
xchg
in
lods
pop
jo
out
sbbb
inc
mov
das
icebp
mov
loop
jg
shlb
xor
xchg
mov
xchg
sbb
pop
fmull
mov
xor
leave
cwtl
aam
xor
test
cmp
scas
fnstsw
xor
fwait
jae
call
mov
dec
jle
sbb
xchg
fcompl
imul
mov
jle
mov
sbb
rcrb
xor
mov
divb
pop
xor
stc
jge
clc
scas
les
xor
and
adc
imul
loop
cs
push
sbb
sub
shlb
pop
orb
pop
inc
mov
mov
ret
cli
push
jb
dec
mov
jmp
xchg
inc
xor
and
xor
das
push
jbe
adc
xchg
outsb
lahf
inc
sbb
cmp
adc
mov
sbb
push
xor
jo
out
cmp
ljmp
idivb
adc
test
sub
pop
int3
mov
popa
pop
ds
addr16
cs
inc
stc
mov
ret
xor
repz
pop
icebp
out
popf
add
sub
fs
fisubrs
dec
in
pop
rorb
fisttps
ret
mov
test
add
sbb
sub
fsubrs
stos
or
adc
push
popa
xchg
fsubp
dec
daa
push
xchg
bound
lret
xor
cmp
xchg
pop
divl
enter
push
push
dec
mov
out
sbb
jp
shlb
mov
or
je
adc
ret
lods
fdivl
jp
test
scas
or
xchg
lods
ja
es
cmp
mov
mov
mov
or
mov
push
pop
decb
xor
insb
mov
dec
sbb
dec
cmpb
adc
xchg
fdivl
jno
inc
jl
ljmp
cmp
iret
or
inc
mov
jle
inc
ljmp
jl
cmp
xor
gs
jae
leave
jle
cs
push
push
xor
dec
aam
js
xor
sub
or
push
into
icebp
mov
dec
in
sbb
cmp
cmpsl
xor
adc
int
data16
dec
shlb
sub
mov
or
stos
loopne
xchg
add
call
scas
xchg
xor
jns
pop
xchg
repnz
mov
inc
mov
xor
fiaddl
loop
fidivs
jle
cmc
out
sub
or
sub
cli
ja
xchg
sub
sub
xor
mov
xchg
ret
xor
in
cmp
insb
xor
or
xor
cld
jns
in
frstor
cltd
shll
faddp
cmp
je
pusha
mov
xor
pushf
sub
std
jle
mov
imul
xor
and
loop
pop
cmp
lods
mov
int3
test
inc
jno
ljmp
sbbl
pushf
or
pushf
sti
dec
sbb
mov
xor
dec
add
dec
je
sub
jns
adc
adc
lret
push
jno
push
and
cli
loopne
adc
je
xor
mov
sub
push
outsb
mov
xor
adc
repnz
mov
jg
xor
sub
popa
loope
insl
mov
test
sbb
adc
mov
xlat
mov
or
adc
fs
dec
ret
rcl
sub
ljmp
jnp
inc
jns
in
lock
xor
aam
fnsave
cli
mov
sub
ss
jle
cmp
fcoms
xadd
mov
int3
mov
daa
jl
pop
cmc
jae
xor
test
mov
mov
push
pop
jns
shlb
in
pop
decl
addl
or
lds
les
pop
cmpsb
fcoml
or
out
jo
and
lods
loopne
ss
out
enter
pop
mov
adc
scas
mov
lock
into
stc
test
out
mov
sbb
clc
sti
xor
push
repz
push
loop
inc
or
ss
xchg
fs
jno
dec
je
imul
cmc
loopne
imul
sbb
mov
shrb
aaa
nop
inc
push
rsqrtps
sar
test
and
das
mov
pushf
dec
fnsave
pop
jb
and
xchg
loop
ficompl
pop
sarl
inc
cmova
outsl
sub
jnp
push
jb
xchg
insb
out
sbb
cmpsb
pop
xor
imul
xchg
loop
scas
popf
sti
out
cs
fbld
stos
mov
push
adc
jbe
inc
shl
repz
faddp
xchg
sar
or
xor
xchg
xchg
or
icebp
xor
xor
adc
xor
jl
outsb
mov
pop
pop
xor
cmp
mov
xor
pusha
inc
leave
je
xchg
repnz
or
lretw
mov
dec
inc
push
scas
mov
cmp
sub
mov
dec
out
mov
mov
xor
adcl
add
cmc
mov
sub
push
or
sbb
lret
and
inc
xlat
movsb
imulb
jns
jl
imul
xor
xor
sti
nop
clc
jg
push
in
ret
jnp
xor
xor
jge
fcmove
pop
add
mov
lods
inc
leave
xor
pusha
lds
outsb
sbb
lock
mov
or
rcrl
shlb
or
es
jecxz
je
enter
push
js
in
or
movsl
rcll
mov
jg
xor
sub
ja
xor
ficoms
xchg
lea
call
dec
pop
xor
inc
add
sar
stos
clc
andl
dec
pusha
stos
sub
adc
aaa
hlt
push
aam
inc
stc
pop
outsl
mov
in
roll
cmpb
sahf
mov
leave
icebp
pop
xor
loop
push
xor
stos
push
mov
inc
jb
dec
pop
push
fwait
xor
pop
insl
inc
mov
aad
fidivl
adc
dec
sub
dec
in
pop
bound
pushf
inc
mov
iret
fwait
loopne
pop
sbb
sub
and
xor
imulb
xor
xchg
add
or
movsl
fst
les
test
pushf
adcl
inc
lds
cmp
lcall
adc
jae
addr16
cld
dec
xor
or
cmpl
pushf
or
arpl
inc
sub
mov
cmc
xor
xor
orb
xor
push
adc
xor
out
adc
aad
xor
pusha
fmuls
int3
jecxz
jmp
pop
push
gs
or
add
fs
xchg
lock
sbb
pop
mov
sti
pop
push
cltd
cmp
jne
outsb
add
sbb
scas
mov
ljmp
adc
xchg
ret
xchg
cmp
sub
add
sahf
dec
and
aaa
jo
nop
add
mov
insb
xor
ret
add
xor
mov
or
xor
sarb
icebp
into
cmp
jb
or
gs
xchg
fisubs
outsb
lret
inc
test
pop
in
pop
adc
leave
jge
push
pop
jo
arpl
pop
mov
mov
repnz
jge
in
add
addr16
sub
shll
in
ret
scas
sbb
mov
mov
repnz
xor
push
pop
clc
xor
cmp
pop
add
aaa
dec
es
cltd
sahf
add
and
jge
pop
in
mov
lea
mov
sbb
dec
add
xor
push
cmpxchg
fldenv
xor
push
adc
shrb
je
and
lahf
xor
arpl
ret
inc
jge
pop
add
dec
mov
cmp
imul
inc
push
in
lahf
mov
out
add
negb
mov
aas
sahf
adc
mov
inc
jl
and
cmpb
cmp
inc
jle
mov
or
outsb
inc
xor
sbb
jne
inc
insl
test
pop
push
jnp
cmp
mov
sub
xchg
and
insb
mov
xorb
sbb
mov
sahf
or
out
sbb
stos
sbb
push
fmuls
rcr
xor
loope
xchg
shrl
sub
mov
icebp
aam
xor
add
pop
xor
out
andl
dec
jge
xor
out
call
cmc
enter
xchg
mov
xor
iret
xchg
dec
addb
fsubl
fadds
or
dec
or
lock
add
sub
xor
cmc
rol
sub
jecxz
dec
hlt
mov
sbb
dec
leave
out
xor
add
xor
mov
nop
sbb
aad
pushf
cs
sbb
shlb
jno
sub
add
ret
push
les
cmp
into
pop
cmpsb
imul
add
mov
add
sub
xlat
test
jb
push
in
jns
fdivl
cwtl
repnz
pop
xor
or
xor
in
jecxz
pop
das
jle
clc
jmp
adc
mov
fwait
add
push
xor
popa
jnp
rolb
ret
fisubrs
call
jl
dec
pusha
pop
add
mov
test
xlat
xor
stc
mov
les
add
pop
push
cmpsl
cmp
popa
jbe
scas
xor
clc
push
test
jbe
jmp
pop
inc
ficomps
out
shl
xor
lock
fidivl
ljmp
out
cmpb
jo
xor
mov
cmpb
sahf
lahf
or
cmc
fwait
cmp
gs
jb
mov
sub
dec
xor
push
jge
xor
xor
sbb
jnp
push
jne
mov
dec
shlb
mov
cmp
push
add
mov
je
jne
sub
sbb
xor
mov
lods
sub
rorb
xchg
adc
xchg
mov
mov
xorl
mov
push
sti
pop
adc
ror
xchg
push
pop
mov
jmp
cmp
jne
ret
mov
xor
sbb
push
fsubp
adc
xor
inc
cmp
lds
xor
mov
ret
mov
jae
out
fisubl
in
sub
pop
dec
push
xor
mov
push
add
dec
add
pop
add
jl
mov
jo
fwait
mov
pop
cmp
jns
sbb
nop
icebp
mov
std
xchg
jno
inc
aad
cld
dec
shl
xor
mov
xchg
outsb
fdivs
push
stos
xor
pop
adc
lret
xlat
push
imul
mov
inc
inc
outsb
lret
ficoms
pop
cltd
pop
ss
lods
push
push
cmc
out
cmp
xor
movsl
cmpsl
roll
pop
pushf
jne
lock
bnd
push
sti
loopne
jae
out
mov
mov
cmp
insl
inc
adcb
loopne
ja
es
dec
xor
fsubrs
pusha
dec
xor
loopne
mov
lods
or
mov
pop
sbb
xor
das
cmp
inc
or
push
xchg
insb
adc
mov
push
ret
pop
inc
lret
stc
mov
test
les
pusha
cmc
inc
pop
int
and
or
push
xchg
jae
cmc
mov
pop
pop
repnz
sbb
mov
dec
lret
jno
iret
daa
jmp
repnz
cmpsl
fistl
xlat
xor
lods
sub
shr
mov
fs
xor
xchg
cs
leave
xor
ja
jbe
xchg
xor
xor
xchg
outsb
rcll
jne
fcos
fists
pusha
into
mov
cld
test
dec
jmp
imulb
xor
xchg
or
fidivrl
xor
push
xor
xchg
test
adc
sbb
out
push
mov
sub
cmpsl
xor
loope
addr16
es
loopne
out
mov
test
push
insl
xor
inc
movsl
pop
lahf
fadd
sub
out
mov
sbb
jle
jl
mov
jmp
inc
ss
xchg
sub
clc
xor
add
lret
add
xor
mov
and
andl
inc
and
mov
inc
fistpl
xor
mov
xor
in
addr16
cmp
pop
xor
adc
or
inc
dec
and
cwtl
mov
test
add
or
push
outsl
fwait
int3
push
xor
insb
sahf
pop
xor
js
daa
adc
orb
iret
mov
fists
dec
out
lret
mov
daa
lods
pop
or
mov
cwtl
in
ret
ja
dec
xchg
adc
add
jl
call
loope
sub
dec
push
cmp
cmp
sub
pusha
ret
push
xor
in
lahf
mov
jg
push
loope
out
test
icebp
out
dec
fistpl
xor
dec
out
mov
ret
cld
stos
daa
lods
data16
dec
mov
sub
and
ss
mov
lcall
test
mov
or
sub
xchg
jp
pusha
mov
push
mov
hlt
inc
int3
es
dec
rclb
lret
jo
inc
fs
xor
bound
lods
xor
mov
fistpll
repnz
arpl
dec
xor
jno
stos
out
shrb
pushf
push
lock
sbb
jbe
dec
repz
or
add
andb
movsl
inc
aad
mov
in
xorb
lret
cwtl
popf
leave
pop
and
mov
mov
jbe
cmp
jno
adc
pop
mov
xor
jbe
sbb
out
test
popa
inc
jo
mov
xor
sub
mov
and
dec
fnstcw
jo
xor
sbb
mov
adc
in
sub
ret
jo
ficompl
push
sub
xlat
or
adc
frstor
inc
mov
mov
ljmp
imul
mov
or
jnp
adcb
jle
add
xor
sahf
dec
insb
push
pop
add
jns
ds
icebp
sahf
inc
and
push
dec
xor
jg
cmp
adc
cmp
fcmovbe
sbb
cmp
dec
mov
or
pushf
cmc
leave
mov
mov
lahf
sbb
jae
inc
xor
rorl
clc
sub
xor
in
imulb
ds
xchg
icebp
push
aaa
rcrb
insb
pushf
jnp
into
clc
mov
and
pop
xor
jb
xchg
pop
mov
data16
or
xlat
cmpsb
stos
mov
scas
es
sbb
sub
xor
or
xor
mul
mov
push
and
cwtl
enter
inc
push
mov
dec
out
push
pop
cld
adc
inc
jb
pusha
imul
xor
jb
clc
and
add
ret
aaa
mov
dec
xor
mov
sub
movsl
lds
adc
stc
adc
xchg
repz
inc
je
xchg
aas
add
jl
dec
adcb
cmpsb
cmp
shrl
adc
loop
es
dec
popa
mov
shlb
out
push
mov
sbb
rol
sbb
int
jo
clc
ds
cwtl
and
je
jne
jns
push
xor
pusha
inc
rclb
xchg
sub
ss
mov
mov
cmp
add
jmp
xor
popa
and
mov
mov
mov
fnstsw
pushl
cmp
adc
fcoms
shll
jge
aaa
mov
je
cli
mov
jo
sbb
and
or
addb
imul
pusha
mov
mov
xchg
loopne
push
sti
push
push
movb
hlt
cmc
and
lods
xor
cmp
divb
jle
inc
das
adc
xchg
mov
cmp
and
push
shll
push
add
push
xor
lods
das
cmp
jmp
sahf
cmp
jbe
xor
push
mov
pop
xor
add
inc
cmp
jns
mov
ret
aas
xchg
jne
pop
xor
iret
jnp
ljmp
pop
jle
xlat
sub
aam
xor
sarb
movb
xor
out
mov
sub
in
imul
out
movsb
jns
xchg
lods
inc
mov
dec
in
adc
insl
movsl
mov
push
mov
xor
test
bound
mov
loope
ja
and
cli
mov
adcb
sub
lahf
dec
fs
sbb
xor
mov
arpl
popf
dec
xor
pop
call
enter
sbb
sbb
adc
lock
xchg
push
mov
push
jo
xchg
xor
xor
pop
hlt
in
call
stos
or
repz
xor
adc
aas
test
or
mov
and
cltd
sub
je
dec
bound
fwait
xor
dec
out
adcl
imulb
xor
cmp
mov
ja
jne
insl
pop
rorl
fcomip
out
imul
int
jmp
idivb
jne
push
cmp
mov
icebp
mov
xchg
loopne
xchg
jno
pop
into
test
and
mov
aad
adc
mov
int3
fwait
psubsb
xchg
loope
dec
push
push
in
xor
jle
out
xor
fs
jno
or
pusha
sbb
lret
fcmove
push
ror
xor
inc
or
fwait
push
ljmp
fidivl
xchg
fildl
hlt
in
std
xor
es
xor
sub
in
arpl
pusha
iret
imul
aas
sbb
int
repnz
xchg
rol
inc
sahf
inc
mov
mov
in
jecxz
add
pop
hlt
pop
adc
mov
rcll
add
jbe
xorb
adc
bound
dec
jle
add
aad
aaa
or
mov
mov
and
push
or
mov
mov
cmpb
leave
xor
pop
imul
rcrl
cmp
out
sub
push
je
push
js
out
inc
int
mov
js
iret
inc
xor
loopne
xchg
roll
das
mov
test
lret
push
leave
xor
ljmp
jb
or
stos
and
jne
imul
mov
imul
adc
lods
push
sbb
sbb
mov
or
mov
xchg
jg
adc
fidivrs
pop
loope
mov
mov
icebp
aam
out
js
xor
movsl
jns
and
and
jo
lahf
push
xlat
mov
cli
cmpb
lcall
call
mov
fs
mov
push
clc
or
dec
addr16
je
or
test
lds
adc
adc
cmc
je
pop
jns
or
jo
push
xor
jg
xchg
xor
cld
xchg
jns
mov
xor
cwtl
pop
dec
adc
mov
pop
lret
inc
sbb
ljmp
insl
fs
push
dec
xor
dec
xchg
jp
push
push
loope
pop
mov
cmc
movsl
sub
mov
int
xchg
mov
fs
xlat
rep
cmp
or
adc
lods
dec
je
pop
into
pop
mov
xchg
gs
mov
xchg
nop
lock
les
lods
xor
ret
xor
mov
adc
rcrl
sbbb
arpl
or
jno
mov
inc
daa
add
or
sub
pop
mov
xor
cmpsl
sub
mov
lahf
std
xor
out
lds
adc
and
or
lods
daa
push
fadds
mov
ja
sub
adc
ds
scas
mov
mov
inc
mov
dec
cs
ret
mov
movsb
or
les
cs
xchg
sub
imul
jg
or
test
mov
cs
lock
inc
test
out
push
pushf
xchg
in
cmpsl
cmp
mov
and
dec
jne
ja
push
mov
sub
push
ficomps
insb
xor
out
int
js
test
and
or
mov
xchg
xor
imul
or
mov
sbb
inc
add
xchg
cmc
cmp
inc
jno
push
insl
movsb
stos
mov
outsl
xor
pop
loope
mov
lret
arpl
popf
adc
fcomp
add
xor
xchg
mov
mov
sbb
rorl
cli
dec
mov
mov
pushl
ljmp
shll
lahf
inc
in
pop
push
fidivl
jmp
xchg
ja
inc
or
fs
jmp
nop
dec
ret
inc
or
add
test
xchg
xchg
aad
mov
les
test
out
adc
dec
ret
sarl
add
xchg
jmp
push
inc
fstps
mov
xor
xchg
ret
xchg
ss
scas
fistl
xor
sub
pop
call
xor
push
test
xor
fimull
lret
mov
xor
dec
icebp
push
js
push
shll
out
cmpsb
arpl
and
out
xchg
cwtl
repnz
jg
sbb
pop
inc
sub
mov
fwait
pop
dec
cmp
sarl
movsl
shlb
pop
loop
ret
leave
mov
out
lds
andps
mov
mov
mov
movsb
pushf
mov
add
lods
jge
inc
inc
aaa
adc
int3
xor
mov
sub
push
ss
mov
bound
add
movsl
loopne
or
int3
xchg
sub
test
push
pusha
add
lahf
or
adc
xor
aas
test
call
pop
pop
fisubrs
push
shlb
cmp
jle
or
mov
movntq
repz
test
test
xchg
or
mov
push
jle
ds
clc
xor
push
xor
cmp
sbb
xchg
pusha
mov
mov
jo
lret
mov
ljmp
cmp
xor
mov
add
inc
jne
ss
lahf
jnp
pop
stos
cmp
and
jb
gs
mov
pop
cmp
dec
pop
into
arpl
or
insl
jmp
fmuls
add
cmp
dec
cmp
sbb
lods
das
sub
cld
xor
pand
subb
cmp
xor
loop
xor
or
xor
mov
lcall
imul
xorb
pop
out
mov
xor
mov
mov
loop
mov
cli
add
inc
mov
mov
lret
xchg
cld
fnstenv
int
cmpsb
mov
add
popa
nop
xchg
sbb
lahf
leave
mov
sbb
mov
je
pop
enter
xor
xor
psubusw
pop
jge
pop
mov
sub
push
xchg
pop
pop
je
shlb
inc
data16
cmp
rcrb
popa
mov
lret
jmp
fisubrl
xor
push
lods
movsl
xor
rcll
push
es
fadd
mov
mov
enter
stc
pushl
push
loop
mov
push
xor
mov
scas
sbb
ds
jo
sub
mov
mov
sub
arpl
lods
dec
dec
inc
sbb
cmpsl
and
xor
jns
ljmp
inc
xor
mov
cld
shl
aaa
sub
mov
cmpsl
xor
jl
mov
xor
mov
xor
xchg
movsl
test
push
addb
fcompl
add
cmp
sti
add
mov
mov
or
sub
pushw
cld
aad
push
mov
scas
lods
arpl
mov
sbb
add
mov
addr16
stos
xor
mov
push
in
in
mov
xchg
mov
mov
test
xlat
and
fisubs
or
or
inc
clc
std
xor
sbb
stc
or
leave
int3
jnp
roll
xor
xor
ja
inc
xor
bound
xor
fcomps
repnz
mov
dec
psubusw
xor
jge
push
inc
dec
loopne
aad
xor
jl
iret
push
ja
cltd
adc
pop
addb
pop
rolb
in
add
xchg
sub
cli
mov
xchg
cmc
sbb
iret
inc
dec
je
jl
incl
dec
cmp
ja
and
bswap
into
pop
lods
jne
xor
mov
mov
daa
mov
pop
pushf
adc
fucomip
mov
xor
cli
adc
ret
xor
jmp
hlt
mov
inc
xor
xor
scas
jp
jl
adc
pop
shl
xor
adc
xchg
loope
or
mov
shll
lea
loope
pop
lret
clc
mov
addr16
in
mov
test
cmp
sub
push
inc
sub
lods
stc
or
leave
mov
adc
cli
ret
bound
xchg
ret
jge
pop
outsb
mov
stc
fimull
or
lock
sub
mov
jae
jne
add
xor
into
popa
test
leave
mov
movsb
imul
xor
cwtl
out
jnp
into
pop
jnp
xor
loope
xchg
leave
test
mov
mov
jg
push
mov
xor
mulb
mov
add
aas
es
jmp
je
in
cmp
jg
mov
inc
js
mov
outsl
test
pop
loopne
xchg
in
fiaddl
mov
popa
mov
xor
fmulp
mov
dec
mov
fcmovnbe
arpl
xchg
or
adc
fdivrl
adc
xorl
cmp
ret
das
les
xor
xchg
adc
int3
fs
int3
mov
jns
pop
test
cmp
lret
sub
jno
fisttpl
mov
dec
mov
mov
stos
and
xor
mov
inc
jmp
cwtl
pop
fcoms
push
mov
jne
xlat
sbb
sub
shl
mov
lods
xor
inc
mov
pop
insl
iret
addr16
mov
dec
mov
cmc
bound
scas
mov
movsb
mov
leave
fimuls
dec
fadd
pop
mov
pop
movsl
ja
push
mov
push
icebp
xor
ret
xorb
testl
fs
arpl
adc
cmp
sub
loopne
xor
gs
sbb
sahf
sub
jns
add
hlt
or
roll
fidivl
mov
rcrb
add
and
mov
cli
std
adc
sbb
lds
jno
adc
xchg
cli
cld
mov
inc
xor
stos
sub
pop
test
xor
nop
mov
inc
insl
ret
bound
inc
mov
cwtl
or
xor
dec
fwait
xchg
mov
dec
repz
jne
inc
js
xor
mov
or
jecxz
fcmovbe
aas
mov
xor
fmulp
dec
call
cmp
gs
into
addr16
roll
mov
fmulp
jno
xor
push
cs
test
in
lds
and
std
pop
out
xor
sbb
shlb
adc
and
sti
mov
and
add
push
pop
jle
sub
xor
mulb
mov
xor
int3
add
mov
xor
fidivrl
in
and
cmp
cmc
test
fistl
xchg
dec
and
adc
add
and
iret
xor
pop
stos
and
lcall
outsb
cmp
mov
or
xor
addb
push
and
nop
popa
mov
test
adc
mov
movsb
fldcw
nop
xor
dec
mov
loopne
dec
loop
pop
test
push
dec
add
adc
and
pop
mov
jne
stc
cmp
or
sub
outsb
xor
cmpsl
push
jne
stos
adcb
clc
mov
outsb
loopne
nop
mov
or
shlb
scas
mov
cmp
mov
pop
cmp
or
loopne
ret
mov
fdivl
cli
jg
movsb
inc
xor
enter
cmpsl
pushf
inc
xchg
add
je
xor
pop
push
adc
cmpsl
leave
lret
repnz
in
daa
inc
push
fcoml
jle
xchg
inc
shlb
and
mov
jno
shll
mov
and
mov
pop
pop
push
add
mov
mov
inc
mov
push
out
shrb
dec
rcrl
dec
cwtl
xor
mov
into
inc
leave
inc
stc
dec
cmp
addr16
test
je
xor
scas
test
in
ret
lock
fisttpl
xor
push
lods
in
and
aaa
and
sbb
rclb
or
in
mov
jg
push
sub
jmp
rcll
fwait
daa
xor
xchg
fildl
xchg
pushf
lahf
xor
jl
cld
and
out
xor
pop
push
and
xor
movsl
flds
in
fwait
jae
dec
cmp
inc
sti
jle
mov
sbb
loop
in
pushf
cmp
cli
hlt
sub
push
jne
add
push
movsb
push
cli
fnstsw
push
movsl
sub
add
mov
mov
or
fmuls
cli
cmp
add
or
and
imul
stos
dec
les
pop
shl
or
adc
cmp
mov
lods
mov
call
mov
mov
dec
loope
mov
cmp
repnz
inc
sub
and
cmpsb
mov
call
cmp
imul
lock
jle
aad
es
push
pop
pop
inc
shll
dec
js
subb
pop
shrb
cmp
mov
sub
xor
xlat
or
les
pushf
cli
xchg
ffree
xchg
ja
xor
lea
jecxz
mov
daa
bound
adc
pop
push
mov
xor
mov
inc
lock
test
fdivs
inc
push
js
lret
mov
jl
xor
or
fld
outsl
lds
movsl
stc
sbb
lods
xor
xchg
out
xor
mov
roll
jbe
or
out
daa
popf
jns
inc
or
fdiv
mov
test
add
add
and
and
mov
xchg
xchg
or
xchg
mov
mov
loope
dec
sti
lods
xor
loopne
xor
daa
lret
sub
or
mov
fnsave
movsl
enter
sub
add
or
adc
jp
das
or
cli
inc
inc
and
jmp
test
adc
leave
push
xor
rcr
add
iret
arpl
mov
sub
imul
cmp
pusha
iret
loop
insl
fnstenv
jns
out
jae
xor
or
insl
xor
gs
dec
pop
int
mov
into
cmp
inc
push
fisubrs
jge
pop
sbb
sar
out
mov
lcall
push
cmp
stos
xor
jl
aam
ljmp
mov
xchg
cwtl
lods
push
and
loop
jae
and
adc
mov
xor
faddl
xor
or
mov
xor
cli
jnp
jg
adc
mov
shlb
adc
arpl
mov
test
sbb
mov
movsb
clc
mov
add
gs
adc
and
lcall
dec
push
push
rolb
dec
adc
call
rcrb
stos
lret
dec
dec
xchg
and
sbb
into
cmp
repz
insl
sub
stc
mov
addr16
mov
sbb
mov
cmpsl
cmpl
daa
xor
cmc
movsl
test
arpl
xor
xchg
xchg
in
jl
and
xor
mov
push
xor
cld
mov
sbb
cmp
pop
push
mov
jl
sti
rol
divl
jge
xchg
push
xor
mov
scas
xor
pusha
xor
fimuls
pop
dec
pop
pop
sahf
push
xor
clc
mov
lods
push
add
ljmp
push
and
cmpl
inc
gs
mov
fs
sub
jg
es
mov
push
lds
mov
xor
in
push
add
cli
inc
push
jae
push
shll
mov
test
xor
mov
push
cmp
push
push
loopne
pop
sbb
lds
mov
push
mov
mov
jne
gs
sbb
test
aaa
subb
and
bound
jb
hlt
mov
cwtl
add
adc
xor
outsl
shll
enter
leave
sub
in
pop
test
bound
sub
movsl
add
adc
cmp
pop
mov
pusha
lds
mov
xor
push
xchg
or
icebp
mov
push
rcrb
and
jae
dec
and
mov
pop
movsb
jne
sbb
add
fxch
mov
sub
out
xor
lret
xchg
aaa
faddl
inc
cmc
xor
inc
xorl
hlt
jnp
clc
jp
push
jns
lock
inc
jns
sub
out
cmp
xchg
sub
jno
xchg
adc
sarb
pushf
dec
add
xchg
in
aam
fisubrs
fisttps
int
pop
lea
roll
or
into
or
lods
fimuls
push
shl
pop
fidivrs
mov
leave
and
mov
ljmp
andb
dec
and
jnp
scas
pop
iret
popa
addl
mov
sbb
test
or
adcb
jno
cld
ss
pop
mov
fdiv
aas
mov
xlat
loop
xchg
mov
in
xor
lret
cmc
movsl
mov
jecxz
outsl
sub
rorl
push
mov
sbb
jle
out
cltd
dec
inc
cli
mov
clc
lods
and
ficompl
in
mov
rdmsr
loopne
ja
test
dec
fwait
or
fcoms
inc
lea
cmc
mov
test
ljmp
loop
adc
xor
addl
add
pop
sbb
mov
loopne
xchg
push
and
in
les
push
test
aam
aad
add
ret
sub
adc
jae
imul
test
pop
mov
and
insl
mov
xor
out
jno
pop
jmp
bound
cvtps2pi
rorl
lahf
dec
ret
stos
sub
bound
ljmp
test
push
or
arpl
cwtl
test
out
sbb
in
popa
jb
test
sbb
test
enter
xor
push
or
adc
aaa
sub
stos
ss
mov
xor
push
mov
sub
fcmovnb
rcrl
idivl
jecxz
je
stos
xor
pop
lcall
ja
xchg
add
adc
mov
fbstp
sbb
test
adc
push
add
subl
dec
mov
ret
adc
xor
cld
mov
xor
and
shlb
adc
arpl
sbb
lock
jne
dec
lods
jae
xchg
cmp
push
sahf
push
in
aad
pusha
push
sub
mov
and
xor
jmp
mov
xor
push
or
mov
jo
push
lret
xchg
mov
ds
je
mov
lcall
cmp
iret
mov
jno
repz
mov
cmp
xor
and
xor
inc
test
lahf
leave
arpl
ss
pop
or
test
push
out
xor
add
imul
xchg
pop
inc
mov
mov
xor
loop
in
out
addr16
jge
mov
xor
outsl
adc
or
pop
scas
je
add
loop
cmp
push
fidivl
shlb
xor
flds
pop
pushf
inc
sbb
js
fadd
xchg
adc
inc
xchg
ljmp
adc
lock
inc
add
mov
daa
xor
test
aam
push
movl
or
jns
incb
or
fwait
test
and
push
sub
sbb
xor
outsl
lds
fisubs
fnsave
adc
cmp
icebp
add
scas
shl
cmp
int
dec
test
sbb
and
into
lods
xor
sub
mov
mov
iret
ja
mov
xchg
shrl
xchg
fiaddl
fsubrs
lds
mov
inc
push
fs
push
xchg
jl
loop
sub
and
dec
inc
and
adc
sti
and
ds
mov
xor
mull
xor
test
divl
inc
pop
test
jge
and
lret
movsl
xchg
xor
rorb
adc
repnz
or
adc
inc
sub
sti
lock
push
aad
test
jg
sbb
enter
cmpsl
mov
sub
pop
sbb
add
out
sbb
jae
push
repnz
mov
fstpt
repnz
push
pop
push
sub
lea
xchg
fwait
aam
fldt
incb
xchg
mov
cmpsl
xchg
pop
add
loopne
jle
sub
jae
cmp
arpl
dec
test
jmp
enter
cmp
fbld
xor
int3
fcmovb
pop
or
xchg
insb
lds
xor
or
inc
mov
adc
stos
inc
add
sub
xor
xor
mov
xor
inc
rorl
sbb
xor
inc
lods
xchg
push
or
fs
inc
lds
mov
js
test
and
and
xor
cmpsl
cmp
adc
imul
xor
jl
mov
inc
pop
cmp
loop
sbb
inc
test
add
stos
rclb
movsb
jns
sti
out
aam
aad
and
push
stc
sub
loope
imul
sub
mov
adc
arpl
push
jo
dec
scas
xor
imul
out
insl
and
push
mov
test
fs
mov
xchg
mov
sti
lahf
or
out
dec
mov
ja
sarb
enter
mov
dec
repz
xor
gs
out
aam
xor
pop
aad
xor
xchg
xchg
dec
aaa
sub
mov
pop
loop
out
in
mov
mov
and
fistl
les
hlt
inc
jge
in
push
aad
lods
xor
sub
rcrb
les
xchg
jg
cmp
lret
test
cmp
movsb
inc
xor
fcomps
xor
incl
loopne
xchg
xor
xchg
mov
scas
xor
mov
jl
xchg
or
mov
lcall
xor
pop
std
add
in
enter
xor
fmuls
fs
sub
or
push
imul
mov
pop
sti
jl
hlt
jae
xchg
movb
push
or
in
lahf
jl
and
insl
mov
add
fisubrl
shlb
mov
mov
adc
and
dec
jmp
xchg
mov
adc
ja
and
sti
add
cmc
and
sti
and
pop
mov
lcall
push
js
sarb
fsubrs
leave
insl
pop
xchg
clc
lock
pop
cmp
stos
mov
aaa
rorb
loope
xchg
lods
dec
hlt
sbb
adc
mov
xor
pusha
mov
stos
shlb
inc
cmp
sub
fs
pop
les
xor
and
mov
rorl
outsb
fcompl
lds
mov
std
xor
xor
sub
lds
cmc
jg
add
fsubl
xlat
jns
mov
hlt
or
jge
or
cmc
xchg
add
cli
fmul
enter
stc
sti
sbb
add
inc
xor
clc
es
leave
repz
push
or
or
outsl
out
mov
push
push
pop
pop
arpl
dec
jbe
xor
pop
cmp
stos
mov
repz
es
mov
mov
out
mov
mov
ss
mov
xor
xorb
enter
aas
xor
adc
jge
sub
push
push
repnz
push
xchg
fidivrl
xor
out
das
and
test
ljmp
mov
xor
fildl
pop
rcrb
movsb
mov
or
pop
or
xchg
ret
mov
inc
lods
inc
push
jmp
pop
jmp
call
fstl
xchg
xor
lret
push
xor
sub
xlat
imul
add
mov
cld
out
sbb
xor
inc
xchg
and
jle
hlt
and
add
jo
adc
pop
cmp
add
lods
push
out
sahf
jp
push
out
cwtl
test
ds
xchg
mov
mov
fwait
into
repz
lret
dec
adc
push
xchg
push
xchg
scas
mov
or
mov
xchg
mov
add
fs
add
or
adc
shrb
cld
fcompl
pusha
xlat
cli
add
push
or
jecxz
xchg
mov
jnp
sbb
loope
pop
in
or
fisubl
in
lds
scas
mov
adc
ss
push
repz
cmovs
dec
inc
popf
out
ret
jl
sub
stos
in
cmpsb
dec
jb
and
lds
jp
xor
out
jb
add
cmp
pop
push
ljmp
xchg
mov
or
shr
insb
mov
sub
dec
insl
add
pusha
loop
aas
test
sbb
int
xor
sub
push
adc
shlb
js
inc
dec
popa
mov
fstps
aam
xor
jns
clc
call
arpl
jne
xor
in
inc
shlb
dec
in
mov
push
sbb
inc
xor
jmp
dec
add
orl
ljmp
jae
data16
cmp
call
xor
pop
insb
jbe
cwtl
adc
or
pop
push
out
ljmp
add
dec
mov
dec
cltd
xor
inc
mov
mov
ficoml
scas
and
orl
test
test
dec
leave
cmp
or
ss
aad
in
mov
loope
cmp
std
ss
sbb
adc
ljmp
dec
pushf
aad
lods
xor
lods
bound
push
jmp
jle
mov
or
add
xor
int
xor
sbb
and
push
out
xchg
adc
lret
pushf
insl
test
adc
outsb
and
mov
xchg
std
inc
or
jae
inc
repnz
enter
mov
xor
push
in
sbbl
mov
mov
push
adc
adc
mov
jns
xchg
cmp
pop
inc
in
pop
je,pn
or
xor
test
fildl
sbb
xor
out
cmp
out
or
add
pop
mov
std
or
clc
xor
sbb
xchg
inc
shrb
andl
xor
jb
mov
aam
fs
pop
and
jno
lahf
rol
cmp
jb
mov
sub
pop
pop
push
xor
aam
je
cwtl
scas
daa
and
jmp
push
inc
pop
xchg
jb
ficoml
out
pop
in
aaa
popf
pop
aaa
mov
xor
xchg
sbb
addl
aaa
ds
cwtl
in
mov
sbb
xor
lods
sbb
bound
jns
or
dec
and
lcall
test
push
lock
negl
add
xor
xchg
mov
fwait
mov
fldl
pop
dec
fisubrs
xor
cld
xchg
shrl
out
cmp
jge
inc
xchg
clc
add
cmpsl
jae
mov
cmp
enter
sub
xchg
adc
pop
in
or
mov
adc
mov
in
lods
in
scas
and
stos
cmp
mov
je
test
or
xor
lock
dec
shll
pop
lret
cmp
sti
adcb
mov
test
mov
pop
lret
imul
mov
int
pop
insb
xorb
inc
fisubrs
jle
out
dec
lods
inc
dec
xor
or
mov
lods
bound
out
mov
sub
addl
in
into
mov
cmpsl
adc
ret
and
gs
lcall
push
or
sar
sub
fsubl
and
clc
mov
mov
mov
stos
mov
push
loop
push
mov
dec
pop
cmp
cld
xor
das
ficoml
push
adc
outsb
adc
sbb
inc
ret
iret
mov
xchg
mov
repnz
lods
push
dec
mov
cld
xchg
xor
imul
xchg
icebp
mov
pushf
and
fmul
arpl
cmp
ret
mov
subb
ffree
xchg
add
cmp
xor
jge
fidivs
stos
sub
push
arpl
imul
push
jno
xchg
xor
mov
adc
sarl
clc
xor
add
push
adc
cmp
mov
xor
sub
out
shlb
lahf
je
push
cmp
mov
cmp
adc
push
sub
hlt
sub
or
cmpsb
in
cmp
mov
insb
into
inc
dec
xlat
subl
outsb
test
arpl
jne
clc
incb
les
scas
inc
cmpl
sbb
inc
dec
jp
int
mov
xor
xor
dec
js
mov
or
outsb
push
dec
cmpb
mulb
xorb
xor
cmp
gs
or
sub
fcmove
inc
sub
cmp
jmp
addr16
jnp
jecxz
cmp
insl
cmc
outsb
daa
and
fstps
adc
or
int3
roll
or
push
out
xor
lahf
shrb
mov
sub
inc
mov
scas
mov
xor
jns
jge
idivl
outsb
add
xor
imul
js
cmp
shlb
mov
pop
test
std
xchg
inc
add
mov
push
out
jp
rolb
sub
jnp
xor
mov
push
push
cmp
sti
sub
ss
lock
je
mov
or
in
les
add
cmc
adc
jns
adc
es
sub
xor
imul
add
sub
mov
sbb
add
stos
dec
cmp
lods
mov
add
sub
dec
and
cltd
mov
jp
nop
push
mov
sub
push
jbe
ss
jne
mov
mov
adc
adc
insl
sarb
xchg
xorps
scas
and
cmpsl
and
pop
pop
xor
insb
fs
scas
mov
mov
iret
add
mov
mov
popf
sbb
lock
mov
enter
inc
mov
divb
dec
pop
lret
push
mov
xor
mov
out
clc
push
mov
sub
pop
mov
sbb
push
jecxz
jne
or
add
xor
ljmp
mov
jne
sub
xor
mov
leave
xor
pop
jmp
jns
pop
int3
lea
aaa
jge
dec
xor
out
inc
nop
xor
mov
pushf
add
push
xlat
mov
dec
xchg
xor
dec
sub
xor
mov
insb
xor
imul
lods
je
mov
loope
xor
gs
mov
xchg
in
xor
xor
int3
outsl
add
xor
pop
jae
movsl
fdivr
xor
imul
cmp
fucomip
inc
inc
xchg
stos
sbb
xchg
adc
aaa
or
cmp
fdivp
mov
mov
ds
les
add
out
fidivl
lds
in
sub
fidivrs
add
sbb
lahf
leave
in
int3
mov
addl
roll
push
and
sbb
iret
pop
loop
mov
data16
mov
cmp
pop
adc
adc
push
rorb
stos
mov
insl
ret
push
inc
es
mov
rorb
and
sbb
jne
les
inc
dec
xor
flds
or
lcall
iret
ja
es
sub
shl
mov
sub
rcrl
jge
pop
push
xor
cmp
xchg
test
fnop
and
jae
pop
sbb
fisttpl
into
xchg
xor
mov
pusha
mov
inc
xor
push
rolb
mov
into
fimull
sub
sbb
mov
outsb
clc
mov
loop
push
jle
cmp
xchg
negb
cmp
into
addr16
sub
inc
orl
and
inc
in
addr16
call
xor
inc
sbb
lds
xor
mov
adc
mov
fcomps
mov
movsb
jbe
sub
xchg
xor
out
xchg
pushf
movb
xor
cld
in
mov
xchg
sub
push
jns
or
xchg
arpl
cmpsl
mov
add
lcall
push
mov
imul
push
outsl
inc
pop
xor
sbb
mov
and
add
jae
pop
aam
dec
jmp
daa
iret
push
jnp
dec
mov
jmp
xor
popa
int
lds
push
sbb
and
pop
jnp
push
cmpsl
enter
jne
call
lods
mov
xor
sbb
xor
pop
je
inc
sarl
shlb
xchg
xchg
fwait
push
xor
cli
lahf
inc
sbb
mov
xor
dec
sti
adc
movsb
push
ljmp
add
movl
inc
fcomps
mov
lahf
addr16
jge
adcl
xor
ffree
xchg
mov
jnp
push
addr16
mov
movl
lds
xor
xchg
ret
and
repnz
sbb
mov
je
out
adc
movsl
or
mov
addr16
cmpb
hlt
xor
sub
inc
outsl
fwait
adcl
arpl
cltd
inc
aad
mov
push
fimuls
dec
or
jbe
mov
pop
ss
test
lret
int3
lcall
mov
rcrb
hlt
repz
sub
pop
mov
mov
jle
xor
jno
inc
std
cwtl
fistps
adc
jne
cmp
jl
pop
push
dec
xchg
je
xor
cs
loop
jno
sahf
dec
scas
xor
jmp
fdivs
xor
dec
sbb
inc
xchg
pusha
arpl
out
fsub
adc
les
lea
inc
pop
mov
sub
repnz
insb
dec
imul
jp
addl
pushf
aad
jno
and
sti
adc
sub
inc
push
adc
clc
ja
dec
aad
addr16
jb
cmp
add
insb
daa
and
lret
addb
ret
out
je
and
push
push
xor
insb
fwait
dec
sub
sbb
push
cld
repnz
ljmp
mov
fcmovb
and
jmp
add
leave
push
aaa
rclb
cmp
arpl
gs
push
inc
or
shl
sub
xchg
lds
bound
std
aam
xor
xor
push
ret
adc
sti
push
rol
jns
sub
mov
mov
sub
xor
sbb
cmp
sbb
mov
lret
add
or
pop
lods
mov
dec
inc
xchg
cmpsl
and
mov
mov
aad
mov
in
push
and
push
lahf
push
xchg
xor
lods
xor
xor
lahf
and
jae
incl
stos
cmpsl
fmulp
je
sbb
dec
fildl
mov
mov
stc
sub
shll
xor
push
test
mov
jae
fiaddl
pop
ret
mov
cmp
cld
mov
adc
mov
xor
sbb
push
loop
xorl
test
pop
out
or
ds
aam
xor
push
jnp
mov
leave
cmp
outsl
fs
enter
xor
xchg
xorl
adc
les
adc
mov
fcoml
sub
ljmp
fs
mov
out
clc
fstps
ds
pop
jge
aam
jne
jb
pop
frstor
adc
mov
test
movsl
push
pop
clc
jns
mov
adc
dec
sub
xchg
test
arpl
mov
pop
mov
loope
outsb
out
shr
scas
cld
fwait
add
sti
int3
push
adc
fmull
pop
jl
shrl
fisubrl
dec
dec
dec
jno
cmp
cs
xchg
mov
cmp
mov
push
push
jno
in
int
out
clc
sbb
and
mov
shll
test
je
pop
mov
roll
leave
loop
lods
scas
bound
inc
stos
ja
insl
stc
xor
fistpll
xor
popa
leave
test
cwtl
mov
sbb
jno
idivb
xor
test
ja
imul
mov
xor
cmpb
test
in
mov
xor
adc
test
sub
cmpsb
test
mov
aad
xor
xchg
rolb
mov
xor
sub
mov
aas
or
fwait
jae
pop
mov
fiaddl
inc
or
jns
inc
xor
push
sub
fistps
lret
scas
xchg
cld
xor
fnstsw
sbb
outsb
bound
stos
std
rdtsc
test
out
jnp
jge
outsl
outsb
jle
scas
pushf
iret
mov
and
xchg
rorb
std
push
xor
dec
pop
sbb
subl
sub
pop
test
jl
cmp
popa
scas
xor
pop
xor
push
push
pop
or
rcrl
jle
iret
arpl
push
jno
out
lods
inc
xor
adc
xor
mov
aaa
mov
lret
inc
jle
daa
inc
dec
jmp
sbb
hlt
xor
loope
push
xor
mov
pop
ljmpw
repnz
push
xchg
xor
fldt
and
adc
sub
test
mov
fnsave
push
stos
inc
loope,pt
scas
shll
xchg
addr16
adc
push
inc
cmp
xor
aas
cld
pusha
push
or
jmp
les
fwait
shr
push
xor
mov
int3
xacquire
addr16
add
scas
imul
push
popa
lret
mov
pop
cltd
and
xor
leave
xlat
iret
clc
jmp
lods
or
leave
jmp
jl
stos
jge
rcrb
pop
mov
xor
not
stos
jmp
mov
sub
and
test
add
add
aam
out
test
inc
andl
sub
xor
les
push
daa
je
or
and
mov
mov
adc
inc
aaa
sub
or
cltd
fsubrl
push
xchg
add
xorb
mov
mov
or
inc
sbb
add
or
lahf
and
fwait
add
pop
and
sub
std
adc
cmc
movsb
ss
or
fmuls
push
test
or
fdivrl
aad
xchg
mov
jb
mov
push
sar
sub
xchg
js
mov
push
in
js
mov
sbb
dec
leave
xchg
scas
add
push
dec
push
pop
lret
cmp
mov
out
sbb
pop
incl
xor
data16
pop
test
dec
test
leave
into
mov
fstl
lret
mov
jmp
dec
adc
push
sbb
sarb
jns
push
fs
xchg
fsubrl
sub
mov
sbb
jmp
testb
icebp
jge
movsb
out
sub
imul
adc
shlb
or
or
mov
or
mov
aam
and
daa
sub
xor
insl
pop
xor
jne
int3
xchg
add
loope
int3
mov
cmp
in
jns
pop
lret
dec
or
cmpsb
lret
aaa
imul
cmp
inc
fnsave
stos
stos
outsb
xchg
xchg
add
push
pop
pop
and
lea
or
mov
jle
nop
in
mov
iret
fistpll
or
bound
and
xlat
not
or
ret
sti
sub
and
pop
cwtl
addr16
mov
pop
sbb
xor
mov
stc
dec
sub
in
fstpt
cmp
stos
jb
sbb
or
add
cmp
lahf
push
jb
dec
pop
in
xor
hlt
jge
repnz
rorl
xchg
jmp
xor
mov
insb
and
loope
sub
out
fadd
ret
ss
cmp
jg
adc
xchg
add
mov
cmpb
rorb
or
xor
ror
xor
mov
pop
push
add
mov
scas
inc
fisttpl
sub
insb
jb
sbb
inc
loop
popa
inc
repnz
mov
jb
scas
push
scas
push
push
and
jnp
xchg
ret
leave
fldt
adc
push
fidivl
adc
test
fiaddl
inc
int
jns
jle
ss
cmpsl
xor
idivl
lcall
fists
sti
clc
sbb
adc
mov
pop
scas
call
test
shlb
int
adc
cltd
icebp
test
out
xchg
lds
pop
aaa
loope
dec
out
pop
push
popf
xor
dec
stc
rcr
shlb
pop
ja
push
mov
mov
or
push
fildll
inc
sti
xchg
loopne
stos
inc
stos
lret
xchg
sub
push
push
lods
sub
xchg
pushf
mov
pop
inc
xor
test
jmp
cwtl
mov
jne
pushf
pop
dec
faddp
mov
in
mov
lds
fsub
ss
lea
xor
adc
lahf
outsb
fs
xor
in
and
xchg
mov
mov
aas
aad
loopne
inc
mov
aad
push
repnz
jmp
test
stos
xor
sbb
imulb
rorl
sbbl
sub
push
xor
push
jl
in
mov
cli
push
or
inc
xor
xor
adcb
shrb
xor
ret
dec
pop
jne
adc
js
mov
int
add
popf
mov
xor
aad
xor
faddp
cmp
clc
ja
xor
push
pop
lds
cmp
add
enter
arpl
add
xlat
and
jg
lahf
xor
inc
xchg
fnstsw
xchg
mov
dec
in
pop
bound
icebp
jle
or
ficomps
mov
mov
push
lods
cmpsb
daa
jle
xor
adc
mov
xchg
or
icebp
mov
push
sub
inc
inc
adc
pop
sbb
out
xchg
mov
cld
xor
push
mov
fisubrs
dec
arpl
cld
in
cmc
imul
push
cwtl
out
cmp
dec
lret
mov
mov
jge
sub
jae
and
jl
cmc
cmpsb
sub
pop
xchg
in
jae
mov
pushf
gs
out
add
jecxz
rorl
scas
test
lock
xchg
jo
add
sub
pop
pop
mov
cmpsl
je
xchg
jbe
xchg
fwait
add
mov
test
adc
xor
jbe
movsl
or
mov
insb
xchg
cmpsl
sub
mov
lahf
std
adc
outsl
out
sbb
adc
sbb
and
jb
out
sub
out
cmpl
xorl
clc
inc
jl
fs
pusha
aad
test
xchg
hlt
popf
inc
pop
adc
push
ss
test
cwtl
xor
or
lcall
and
aad
je
fcmovb
mov
les
sub
pop
fwait
add
aaa
inc
xor
inc
fbstp
jnp
loopne
lret
out
enter
dec
or
push
xor
lea
push
ss
out
add
shll
popf
leave
shrl
xor
stos
mov
sbb
in
adc
cmp
pop
js
cmp
xor
jecxz
adc
lds
out
repz
mov
scas
jo
mov
in
mov
push
xor
out
fimull
jge
mov
cmp
jecxz
xor
int3
imul
clc
xor
mov
inc
inc
ja
pusha
cmpsl
scas
outsb
xor
movsl
or
mov
int
xor
mov
and
fsubs
or
jp
push
xor
cmp
inc
xor
idivl
sbb
loope
add
cmpsb
xor
push
xchg
fdiv
movsl
dec
xlat
loop
mov
sbb
and
lea
mov
mov
outsl
dec
cmpw
sbb
sub
and
pop
cmp
outsl
mov
xor
jnp
push
jae
insl
test
sub
cld
shl
int3
dec
ljmp
loop
pop
aad
xor
push
mov
out
pop
adc
jge
push
or
repnz
xor
lahf
gs
jmp
or
ret
xor
inc
fistl
mov
in
add
xchg
mov
cmc
sub
nop
jmp
push
data16
or
clc
mov
ss
inc
sub
jae
sub
xor
cmp
inc
adc
push
jg
repz
sbb
leave
es
dec
das
lahf
mov
jno
orb
cld
and
inc
mov
and
mov
or
cmpsl
mov
fistps
xchg
mov
or
pop
lods
sub
aam
pushf
push
mov
sub
sarb
dec
int
sahf
imul
cltd
mov
xor
add
movsl
push
insb
out
cwtl
fidivrs
pop
pop
cmpsl
pop
mov
xchg
imul
loop
cmp
stc
push
jb
aam
adc
xor
push
inc
or
push
repnz
mov
xchg
xlat
xor
pop
inc
push
cmpsb
xor
sarl
lahf
push
mov
xchg
subl
xor
out
xchg
in
xchg
popf
mov
mov
ret
add
clc
and
je
mov
pop
cli
inc
xor
mov
mov
push
xchg
push
inc
iret
xchg
cmp
pop
lea
xchg
sahf
push
push
icebp
outsb
lahf
pop
push
dec
call
rcl
push
in
cli
movsl
add
adc
sbb
push
test
es
pusha
jne
stc
mov
sub
mov
cli
scas
xor
cmp
rcrl
test
cld
shl
into
insl
aad
mov
fst
imul
lock
cmp
push
out
enter
fs
fsubrs
int3
xchg
add
dec
bound
daa
cmp
lods
xor
fwait
repnz
aas
sub
icebp
mov
or
rclb
testb
pop
sub
out
lds
cs
popf
mov
scas
adc
out
sub
js
xor
adc
jno
sub
and
nop
out
in
dec
xor
aam
mov
push
adc
sbb
ret
fistpl
mov
push
mov
in
adc
sub
lahf
sub
push
lcall
xor
fdivs
repnz
out
lret
xor
pusha
stos
cmp
sbbb
sbb
pop
xor
mov
sub
xlat
aas
mov
es
inc
rorb
inc
mov
mov
dec
sub
sarb
lahf
enter
retw
xor
mov
movl
in
addr16
fsubrs
ret
inc
fcomip
xchg
aaa
cmp
and
movsl
push
xor
aaa
testb
sub
int3
addr16
cmp
or
sub
out
sbb
out
xor
dec
mov
cmp
xor
or
xor
outsb
jg
lcall
xchg
cld
sub
add
imul
xchg
sbbb
fstl
inc
xlat
rdmsr
in
push
mov
cwtl
sub
lret
imull
jnp
push
loop
ja
pop
cmp
jecxz
std
sub
xor
xchg
sysret
xor
enter
into
push
dec
jge
xor
mov
in
ret
scas
sub
or
and
inc
ljmp
insb
dec
sub
xchg
movl
mov
pop
xchg
pop
dec
mov
lds
loopne
push
and
or
test
ss
xchg
loop
ficoml
stc
push
addb
fs
jne
cmp
lcall
aaa
xchg
mov
dec
pop
add
xor
sbb
xor
mov
fistpl
add
inc
sub
dec
pusha
push
imul
repz
fisubrl
push
xor
scas
sbb
ljmp
ja
sub
mov
jne
add
ljmp
mov
fmull
movsl
sub
adc
icebp
inc
cli
mov
xor
ljmp
xor
cld
add
add
inc
inc
sbb
lods
aaa
and
inc
adcb
fs
and
hlt
jns
xor
je
cmp
hlt
cmpsl
add
jecxz
or
or
sbb
cmp
or
mov
movsl
mov
aas
xor
fildll
cmp
push
lcall
add
sbb
pop
outsb
dec
out
add
test
test
xchg
pop
cmp
popf
lock
sbb
cmp
or
or
das
xor
jno
dec
push
gs
cmpsl
dec
or
push
pop
xlat
outsl
cwtl
xor
mulb
test
cmpsl
gs
cs
and
aas
rorb
and
lods
fistps
je
pop
xchg
mov
jge
lock
sarl
subb
in
xchg
and
adc
xor
push
pop
adc
stos
pop
xor
dec
inc
add
repnz
add
inc
sbb
movsl
adc
std
pop
lock
ljmp
in
sahf
sbb
xor
psraw
inc
xor
xchg
loopne
je
mov
inc
cmp
mov
inc
inc
enter
sbb
mov
jp
xor
mov
sub
and
xchg
in
sbb
rcrl
mov
xor
sbb
iret
ja
mov
push
insb
add
sbb
dec
in
lods
out
psubb
sub
int
popa
addr16
cmp
lahf
mov
pop
or
xchg
push
out
andl
sbbb
and
mov
push
xchg
xor
inc
aaa
dec
es
and
pop
dec
mov
push
out
popl
lea
inc
aas
jl
sarb
jno
mov
aaa
cmp
mov
movsl
xor
xor
and
scas
jge
bound
mov
dec
push
and
pop
sub
inc
mov
xchg
mov
mov
gs
and
shrl
mov
xor
popa
push
push
aas
sub
scas
imul
cmp
and
mov
mov
fidivl
mov
mov
aaa
pushf
sbb
shr
leave
shll
sbb
xchg
mov
mov
mov
xor
sbb
loope
psubusb
test
xorl
mov
mov
cmpsl
call
and
add
cmpsb
or
sub
aas
cmp
cmpsl
test
ret
fwait
adc
int3
adc
dec
out
and
sbb
mov
dec
pushw
js
fbld
call
fwait
stos
mov
outsb
repz
adc
cmc
push
pop
gs
adc
mov
xor
push
add
cmp
enter
inc
push
out
mov
cli
jnp
fstpl
push
sarl
ljmp
xchg
cwtl
clc
sub
mov
inc
xor
mov
int
dec
mov
scas
cmpsl
imul
ljmp
mov
repnz
andl
sub
or
je
stos
add
inc
mov
cmp
or
movsl
cltd
and
inc
test
pop
dec
mov
or
mov
and
pop
sub
sbb
stc
add
jmp
popf
rcl
cmpb
and
lock
jecxz
dec
test
adc
test
inc
insb
js
mov
addb
xchg
lock
mov
and
arpl
xchg
mov
or
jecxz
addr16
loopne
cmp
pusha
out
cs
mov
jns
push
mov
shr
stos
sub
ret
loope
mov
test
jmp
inc
lea
jb
xlat
sbb
adc
and
and
test
outsl
mov
cwtl
inc
loopne
lds
js
inc
sti
mov
lods
pop
testl
fwait
loop
xor
lods
sbb
pusha
sar
adc
hlt
push
pop
fcompl
adc
int3
insl
add
mov
jp
es
pop
stos
test
push
cwtl
mov
pop
inc
iret
jns
test
push
xchg
inc
movsb
sub
cmp
lock
or
dec
xchg
inc
pop
push
inc
popa
shrb
mov
adc
lret
push
sub
fisttpll
lcall
call
popf
inc
xor
or
loope
or
sub
dec
mov
into
aad
cmp
movsl
pop
fldl
add
and
mov
cli
lret
adc
repnz
xchg
xchg
pusha
add
cmp
push
mov
pushf
mov
cltd
adc
ljmp
dec
ljmp
out
or
cmp
adc
nop
push
mov
cmc
dec
in
gs
movsb
mov
jb
sub
aas
mov
mov
mov
divl
inc
and
mov
mov
xor
xor
cmp
xchg
fmulp
jno
jne
sbb
or
fsubs
xor
out
xchg
jecxz
xor
xchg
mov
into
ss
dec
mov
sbbb
jae
mov
data16
fsubrs
xor
pushf
mov
xor
xor
and
pop
ret
stos
dec
insb
push
call
negl
ss
inc
loopne
adc
movsb
or
jno
xor
repnz
insb
and
pop
in
push
jl
test
xchg
xchg
je
push
mov
orl
add
and
out
fwait
hlt
and
mov
pop
and
mov
int
test
outsb
testb
cwtl
cmp
repnz
mov
stos
loop
pop
xor
popf
daa
pop
inc
or
xor
cmp
mov
dec
fsubrs
sbb
repz
sub
test
adc
lret
addb
loope
mov
lahf
stos
sbb
xchg
inc
mov
push
mov
sti
loopne
dec
addr16
xchg
and
or
mov
int
stc
mov
pop
in
es
cwtl
ficomps
das
or
mov
sub
adc
mov
je
mov
push
cmpsb
dec
sub
icebp
movsb
repnz
jmp
or
sbb
sub
lahf
jnp
in
xor
push
sbb
xchg
loopne
lret
cmp
fwait
rol
fst
sub
out
rclb
sbb
mov
push
cmp
xchg
adc
in
dec
stos
sbb
adc
int3
inc
xor
mov
push
data16
ret
test
pop
repnz
or
cmpl
cmp
mov
cmp
mov
cmp
inc
mov
mov
cltd
divb
mov
ss
push
xorb
and
and
ret
xchg
jb
rorb
ja
and
repnz
rcl
push
test
je
inc
aad
xchg
dec
rcrl
xor
cmp
xchg
js
inc
aam
jns
sub
sub
xor
cmpsb
popa
and
mov
loop
in
movsl
push
inc
cmp
leave
popa
les
cmpsb
adc
rclb
cmp
dec
mov
enter
xor
icebp
lods
aaa
push
sbb
xor
or
stos
or
and
pop
out
mov
xor
insl
popa
mov
mov
jb
add
clc
lret
cmp
push
mov
insb
cmpsb
xor
repz
mov
outsb
add
jmp
pushl
mov
lds
mov
xor
fwait
push
xor
negl
lea
jmp
pop
cmp
sbb
adc
fbld
and
insl
sub
out
or
daa
sbb
inc
pop
faddp
and
fnstenv
xor
rorb
or
icebp
mov
sub
push
ret
subl
mov
fwait
push
insb
xlat
pop
add
or
mov
ss
sti
loope
xor
inc
sub
sbb
sub
pop
dec
fdivr
lods
adc
pop
cmc
mov
gs
sbb
xchg
popf
sub
fld
xchg
fcom
imul
call
dec
mov
fidivl
test
bound
enter
mov
outsl
incb
js
adc
popa
dec
jecxz
gs
adc
dec
push
sub
test
dec
xlat
adc
or
lret
xor
mov
sub
or
pop
adc
jge
cmp
mov
fists
xor
jne
jge
iret
pop
adc
inc
roll
mov
sbb
gs
mov
cmpsb
into
pop
lds
cmp
test
adc
sub
sti
adc
push
fld
jg
out
mov
addr16
sbb
dec
and
adc
jg
cmp
or
out
sub
clc
dec
and
lds
or
call
adc
xchg
jge
fs
pusha
mov
xchg
cmp
sub
add
mov
jle
xor
clc
mov
pusha
lret
mov
push
sub
pop
or
cmpsl
jg
dec
or
insl
jnp
lcall
xchg
xchg
popf
leave
jmp
xor
xchg
or
addr16
xor
lock
aam
outsl
mov
lods
or
jae
xchg
xlat
fisubrl
aaa
call
xchg
mov
pop
loope
in
mov
push
mov
jg
mov
xor
mov
xor
mov
sbb
xor
mov
cmc
xchg
dec
cmpsl
jg
pop
xor
repnz
xchg
sbbl
adc
push
mov
mov
lods
icebp
call
negl
jg
std
shr
pushf
aas
fs
sub
mov
fmul
push
jl
out
setp
lret
and
adc
xor
mov
inc
lock
ret
fmul
xchg
fnsave
rcrb
ja
data16
xchg
mov
jmp
sbb
lods
aaa
and
push
cld
inc
testb
mov
out
lahf
pushf
adc
clc
mov
je
cltd
xor
xchg
ja
dec
jl
mov
jge
jg
xor
loope
shlb
mov
mov
xchg
mov
mov
sub
mov
dec
fdivl
out
adc
daa
fcomps
push
inc
int
aaa
pop
enter
test
pop
inc
xchg
lock
pop
cmp
pop
aas
fs
push
xor
inc
test
roll
std
mov
or
jecxz
cmc
pushf
sbb
ss
sub
xchg
outsl
adc
jno
bound
cld
cmp
lret
gs
jge
or
test
mov
scas
pop
ds
je
lret
ljmp
aaa
out
add
or
add
addl
fwait
xor
adc
xor
inc
cmc
test
bound
inc
repz
and
cmp
int
ljmp
mov
ss
or
inc
xor
subl
sarl
enter
mov
push
pop
ds
and
mov
and
sbb
cltd
dec
xor
int3
xor
fidivrl
push
jo
imul
pop
das
pop
xchg
fsubs
push
enter
gs
cltd
out
inc
mov
pushf
popf
daa
jl
cmpsb
dec
pop
mov
sub
pusha
addl
mov
fcmovnb
jns
xor
or
or
clc
xchg
aaa
sbb
xor
jecxz
jge
jnp
xor
push
jbe
xor
orb
imul
es
jg
adc
mov
outsb
out
int
pop
push
dec
enter
xor
push
mov
inc
adc
popl
dec
xchg
pop
pop
pop
outsl
or
xchg
and
sbb
mov
inc
test
push
push
cmp
add
shll
xor
jmp
outsl
xor
xor
popf
xchg
fmulp
xor
and
dec
fwait
nop
pop
xor
ja
negl
jmp
addr16
out
daa
xor
jne
inc
or
xor
adc
xchg
sbbb
faddp
sbb
sub
rcll
fcomps
lods
das
push
xor
mov
push
pop
out
mov
xor
sbb
or
jae
adc
mov
push
adc
sub
xor
and
loop
arpl
aad
js
inc
push
cmc
lahf
xor
or
sti
adc
cmp
add
enter
sbb
inc
aad
shlb
cmp
adc
inc
fcomps
adc
sub
push
call
out
add
sbb
xor
add
movsl
iret
push
dec
cmpb
sub
push
pop
lahf
mov
es
xor
push
inc
jo
jle
xor
cmpsb
pop
and
test
cmp
sbbb
push
push
mov
cmp
push
cmp
xchg
pop
lret
subb
fcmovu
aaa
dec
popa
iret
imul
pop
leave
mov
xor
and
popa
adc
stc
lods
sbb
sbb
and
sub
test
xor
or
scas
das
lahf
push
loopne
ret
hlt
xchg
cmp
fiadds
mov
inc
xlat
sub
mov
les
sbb
out
lahf
aas
adc
sbb
sub
inc
cmp
xchg
not
leave
xor
sub
add
mov
pusha
ljmp
psubsb
push
jmp
ret
mov
notb
sbb
inc
mov
or
movsl
sub
cmp
cmpxchg
ljmp
fimuls
insl
xchg
fidivrl
jb
test
cmp
sahf
dec
or
insl
mov
pop
std
mov
negl
or
add
xor
rcr
shrb
push
jb
dec
mov
jns
jg
shll
aas
xor
sbb
lcall
mov
push
xchg
lock
gs
xor
push
leave
and
rclb
xchg
mov
and
int
adc
xchg
fcomps
cmp
xor
pop
out
ljmp
inc
jg
fwait
clc
xor
mov
pop
or
fcoml
xchg
inc
mov
out
xchg
subb
push
xor
popa
loop
xchg
fisttpll
loope
movsb
push
push
daa
cmp
dec
ljmp
jg
mov
mov
xor
clc
xor
lds
and
or
dec
xor
pushl
int
mov
xor
jmp
sahf
or
stos
push
iret
and
sbb
cmpsl
push
cmpsb
sub
pop
adcb
cltd
paddw
in
call
lcall
pop
xor
fstpt
in
xchg
and
fnstsw
cli
jg
movsl
fidivrs
xor
les
mov
push
cld
movsb
xlat
fcomip
test
loope
inc
int3
and
pop
ret
push
sub
mov
sbb
pop
sub
sbb
scas
and
addb
inc
aad
xor
orb
sbb
adc
ss
mov
xor
std
pmaxub
sbb
lds
jmp
not
shl
pop
and
mov
ss
inc
inc
mov
jne
xor
lret
xor
std
add
aaa
pop
and
xchg
int
cmp
sub
inc
negb
jecxz
dec
jmp
aas
or
and
das
out
in
xor
xor
pop
stos
pop
push
arpl
xor
push
pusha
xlat
popa
roll
out
pop
shlb
test
shlb
dec
shlb
mov
xor
jge
mov
push
jo
jle
aaa
sbb
and
xor
out
sub
jmp
mov
push
dec
cmpsb
sbb
jnp
fidivs
fwait
dec
xlat
fiaddl
inc
mov
testl
xorl
cmp
js
push
pop
xor
fdiv
mov
xor
pop
fnstcw
jnp
dec
rclb
icebp
jb
call
fstl
insl
incb
cmp
daa
clc
push
mov
fisubrs
dec
bound
sub
rcrb
pop
and
inc
outsl
dec
icebp
cwtl
rolb
jb
outsl
mov
cmp
xor
movsb
push
adcb
inc
aam
mov
mov
js
xor
xchg
lock
aas
leave
cwtl
xor
into
cmpsb
popa
aad
xchg
mov
lret
repnz
adc
xchg
and
xchg
fcmovnb
jge
or
fsubrs
aad
rol
or
add
sub
aaa
xchg
jp
inc
ret
xor
inc
add
mov
les
xor
icebp
mov
out
dec
add
cld
push
hlt
test
sub
mov
aad
cltd
incb
xor
pop
fnsave
pop
bound
out
xchg
inc
or
ret
loop
jno
sub
test
lret
inc
mov
mov
nop
sbbl
rcrl
inc
out
push
lea
lahf
mov
and
stos
loopne
pop
std
aad
orl
dec
adc
xchg
lock
insl
mov
mov
inc
sahf
xor
rcrl
inc
mov
push
cmp
loop
jmp
sbb
jne
into
xor
lods
inc
adc
lahf
adc
xor
inc
fcomp
mov
push
cmp
adc
mov
call
mov
jbe
ret
in
aad
and
loope
out
mov
mov
neg
aas
mov
xor
push
mov
shl
cmp
ffreep
jae
in
movsl
js
leave
shll
dec
and
or
and
xor
push
bound
add
mov
adc
fmuls
in
xchg
mov
push
outsb
daa
push
mov
in
decb
xor
lahf
mov
addr16
adc
jl
xor
cli
push
sub
repnz
lods
sub
shl
add
or
push
lock
ficoml
adc
mov
movsb
xor
arpl
shl
shlb
test
push
or
mov
lock
xchg
and
mov
je
cmp
sbb
mov
mov
and
mov
mov
push
cmp
xor
mov
lret
mov
repz
xor
lods
pop
push
dec
mov
push
out
xor
lock
loop
pop
sub
push
loope
call
test
pop
icebp
push
out
insb
dec
dec
das
cmp
add
shll
cwtl
loop
mov
pusha
fwait
lahf
mov
pusha
adc
cmp
ret
xchg
jno
inc
push
mov
clc
orl
cmp
pop
js
adcb
lock
repnz
popa
sub
cwtl
jge
mov
add
pop
icebp
test
dec
xchg
sbb
and
fdivrl
jb
dec
ja
ret
ss
inc
repz
xor
lahf
inc
pop
inc
rcll
inc
and
jns
sub
data16
push
cwtl
icebp
cmpsl
inc
xor
mov
int3
add
pop
ss
adc
aam
hlt
pop
xor
xchg
dec
jl
and
pop
jmp
dec
push
shlb
pop
inc
xor
sahf
testb
lods
loope
ret
nop
pop
leave
inc
mov
xor
cltd
rorl
pop
int
adc
mov
aad
mov
fisubrs
mov
test
addr16
lcall
xor
clc
fwait
adc
push
mov
xchg
jo
xor
xchg
mov
scas
xor
ss
adcb
pop
stc
xchg
push
loopne
aam
push
xchg
loop
xor
mov
mov
xor
or
xor
test
xor
adc
adc
mov
pop
push
adc
jb
pop
push
pop
add
imul
sub
jge
cmpsl
cmpsl
xchg
imul
xor
fsubs
mov
inc
cld
jl
sbb
fmull
ss
inc
jge
jns
inc
pop
not
js
test
ljmp
cmp
adc
push
stc
mov
cmp
push
sbb
push
jmp
xchg
pop
push
stc
xor
fs
push
sub
xor
and
cmp
lret
mov
or
mov
adc
cs
push
sub
lret
fwait
and
int
shlb
sub
push
call
adc
popf
inc
mov
fnsave
insl
push
jl
xlat
fxch
gs
cwtl
shll
in
add
xor
inc
sarb
ret
loope
xor
cmp
sbb
imul
sub
jle
sbb
xor
cmp
mov
cmc
popf
cmp
adc
fcomps
dec
push
fidivrl
cmp
movsl
lret
inc
incb
ss
cmp
out
and
shlb
leave
sub
mov
xor
jmp
stos
int
or
lret
sbb
je
xor
enter
pusha
sbb
jp
mov
movsb
rcl
add
mov
or
pop
jl
decl
in
mov
fisubrl
jne
xor
cmp
fstl
inc
xor
cs
add
ja
xor
sbb
cmp
fsubs
test
scas
mov
xor
mov
xchg
inc
jb
fcmovbe
std
out
adc
and
stc
shll
mov
fisttps
adc
rorl
jnp
and
cmp
mov
stos
daa
cmp
mov
out
scas
push
sub
xchg
out
xor
outsl
sbb
sbb
jl
xor
shlb
gs
inc
orl
or
out
jnp
fsts
fidivl
ret
jns
dec
rcll
cli
test
ficoml
call
rolb
xor
addl
inc
or
xchg
xor
sbb
pop
in
sub
jo
inc
iret
bound
mov
xor
arpl
push
lock
mov
int3
icebp
mov
xor
sub
or
ja
or
sbb
push
and
mov
add
ljmp
pop
int3
notb
sub
mov
outsl
ds
xor
sbb
and
enter
inc
in
or
lods
mov
xchg
add
xor
dec
dec
aam
cmp
pop
jg
xor
inc
jb
inc
xchg
xorb
addr16
sbb
inc
inc
or
or
and
push
and
push
xchg
inc
xor
jno
sbb
sbb
mov
dec
daa
es
xor
xor
dec
dec
dec
ss
xchg
xorl
shrl
xor
outsb
pop
xor
cmp
jge
popf
into
cmp
pop
xor
imul
jnp
fwait
int3
cmp
xor
dec
cmp
pop
mov
cltd
lret
xor
cwtl
mov
inc
ja
xchg
xchg
inc
jbe
xchg
xchg
inc
jne
xchg
test
push
inc
je
xchg
xor
inc
jae
arpl
dec
mov
pop
mov
push
pushf
add
adc
xchg
jnp
and
cmp
and
sbb
sbb
xor
xor
xor
popa
sub
outsl
and
and
scas
lods
movsl
popa
dec
enter
mov
push
pop
divl
lods
and
cmp
sub
aas
push
cli
inc
in
shrb
faddl
popf
push
cld
push
pushf
and
lds
cmp
mov
jmp
cs
sub
mov
hlt
mov
xor
out
mov
sub
lods
pop
xor
fwait
or
xchg
or
hlt
xor
xor
dec
and
pop
sahf
push
mov
mov
mov
jae
jp
scas
mov
sub
call
xor
test
xor
stos
and
mov
mov
repnz
ret
and
insl
add
movsb
cmp
int
add
lret
iret
mov
lods
cld
rcrl
stos
ss
lcall
aad
xchg
push
imul
je
call
mov
inc
jl
xor
pop
aas
cmp
enter
addb
xor
push
in
xor
jl
jmp
adc
add
out
mov
xor
add
dec
ds
scas
lods
call
xchg
sub
in
sbb
je
subl
fwait
inc
addr16
push
hlt
cld
dec
xchg
inc
repnz
push
das
shll
ljmp
sbb
aas
popa
mov
hlt
xchg
sbb
push
movsb
xchg
jbe
call
or
sbb
test
sarl
push
in
pusha
orb
std
mov
inc
xor
push
scas
in
cld
insb
pushl
movsl
push
fdivrl
sub
bswap
fisubrl
test
rorb
lahf
loop
sti
cmc
adc
les
out
xor
and
push
adc
and
cmp
enter
lahf
sbb
dec
mov
and
cmpsb
inc
xor
aad
inc
jmp
stos
adc
out
cmp
rcll
jmp
inc
mov
jb
pushl
and
test
test
mov
pop
inc
stos
call
push
pop
xchg
xor
adc
xor
jnp
addr16
out
mov
mov
fs
sub
std
movsl
mov
sbb
or
js
jb
sti
out
and
jle
and
scas
cld
add
mov
cmp
push
fnsave
inc
stc
cwtl
mov
and
sar
add
push
lar
xor
loope
or
xor
pop
adc
jmp
cld
subl
and
scas
add
sarb
ljmp
cmpsb
push
mov
fstpt
mov
sbb
iret
movsb
stos
and
addr16
stc
mov
sub
jecxz
subl
push
adc
pop
jae
jmp
sub
cltd
adc
shrl
rcll
sbb
hlt
push
or
dec
jl
xchg
xor
sub
jmp
test
xchg
pop
repnz
cmp
call
jecxz
xor
sub
sbb
pop
pop
xor
dec
mov
xor
pop
movsb
into
jl
cs
xor
test
xor
rolb
or
mov
outsl
xor
sbb
and
xchg
cmp
in
in
dec
mov
xchg
pusha
fidivs
push
mov
stos
out
fwait
mov
adc
movsl
es
xlat
shlb
movsb
jnp
pop
push
xor
adcb
xor
out
adc
xor
aam
ret
les
xor
xor
xchg
inc
or
sti
adc
sbb
xor
lods
lds
jno
mov
pop
xor
pop
and
adc
test
and
repz
adc
pop
mov
dec
cli
push
cmpsb
add
hlt
int3
add
mov
int
sti
jnp
push
lock
push
repz
repnz
adc
adc
arpl
inc
xor
cld
aas
in
add
xchg
lock
pop
mov
mov
or
adc
add
mov
into
adc
pop
flds
xchg
mov
cmp
fsubrs
inc
cmp
mov
pop
roll
mov
fmuls
idivl
jbe
sbb
cmp
mov
jmp
aam
lret
shll
cmp
mov
jno
jmp
data16
je
fdivl
ret
inc
inc
bound
stos
jbe
test
push
mov
das
daa
dec
sub
push
js
jae
in
xor
mov
outsb
push
aad
xor
mov
iret
and
push
jbe
in
mov
push
mov
pusha
sbb
std
mov
ds
fnstenv
stos
arpl
into
rcrb
mov
mov
xchg
inc
loopne
or
mov
xchg
or
xchg
xor
lcall
inc
fidivrl
xor
xchg
sub
add
xor
cmp
xor
adc
loop
jmp
cltd
mov
or
jb
adc
aad
shl
xor
add
push
xor
cld
push
arpl
test
inc
jbe
movsl
or
ljmp
out
cmp
mov
outsl
mov
lret
mov
inc
int3
jmp
fwait
or
sbb
adc
iret
dec
mov
mov
fs
cmp
mov
cmp
xchg
lret
xor
repz
sub
lock
lret
imul
xchg
fisubl
pop
aaa
daa
xor
in
test
sahf
cmc
dec
add
jge
lcall
xor
hlt
cmp
push
xor
add
or
rclb
push
push
mov
xchg
aaa
fwait
and
sub
jno
push
clc
int
loop
jecxz
roll
xor
push
mov
cltd
imul
into
in
xor
fimull
xchg
aam
xor
dec
mov
xchg
cld
xor
inc
xchg
arpl
cmp
add
push
fsubl
jne
mov
imulb
je
fmulp
or
push
and
sti
push
and
and
lahf
inc
xor
int
push
pushw
sar
enter
xor
cli
hlt
in
push
pop
int3
adc
jns
subb
adc
lock
fidivs
or
xlat
xor
gs
or
cmpsl
push
outsb
or
into
xor
aas
lea
shll
sub
jo
cmp
rolb
test
rorb
leave
das
inc
and
xlat
adc
stos
add
lods
repz
inc
stc
inc
or
cmp
push
xor
in
mov
les
adc
xchg
jbe
sbb
xchg
inc
int3
ja
or
ljmp
inc
mov
sti
inc
lods
add
sub
call
ret
jge
xor
loopne
inc
das
fcomps
push
xor
xchg
test
and
xor
sub
cs
jns
push
dec
aas
stos
aaa
xor
rcll
xor
sahf
pop
push
nop
inc
xor
adc
and
jae
jg
or
xor
push
pop
and
jbe
loopne
incb
cmc
in
xor
in
jns
pop
push
cld
sub
ja
xchg
ja
cmp
in
jge
incl
or
add
outsl
xor
clc
shl
inc
mov
enter
push
jnp
xor
call
mov
sub
dec
cli
jns
rclb
adc
mov
xchg
int3
aaa
inc
addb
popa
fwait
pop
push
xor
in
add
xchg
mov
or
sbb
iret
pop
gs
repz
add
jp
in
mov
repz
xchg
push
mov
les
and
mov
ss
orb
xor
push
jns
in
iret
mov
xor
pop
std
or
fnstenv
jns
test
test
cmc
aaa
cmpb
jg
ret
cld
lock
imul
dec
adc
movsl
dec
fimuls
jg
std
outsb
pop
movsb
mov
mov
cmc
jge
cli
inc
mov
xor
jecxz
cmp
and
jne
stc
mov
add
xchg
push
sub
and
mov
jecxz
add
add
nop
sti
jl
std
jb
sahf
jno
sub
sarb
bnd
sbb
push
aad
imul
test
jno
dec
add
test
xor
fs
or
adc
ss
in
push
mov
gs
xor
or
loope
jg
push
jns
cmp
movsl
inc
push
push
aam
js
int3
leave
xor
and
adc
mov
push
shrl
fdivl
xor
cmp
pusha
jno
repz
shlb
repz
mov
das
mov
outsb
mov
mov
bound
inc
bound
lock
imulb
adc
scas
jo
stos
scas
cltd
sti
ljmp
jmp
dec
mov
lret
push
js
loop
sbb
mov
imul
jp
insl
lcall
push
stos
loop
pushf
push
cmp
sbb
mov
mov
sub
cmc
pop
pop
sbb
and
movsl
sbb
push
sbb
xchg
outsb
sti
jbe
insb
fdivp
sub
ficomps
sub
shlb
insb
jp
ljmp
jge
scas
cmc
pop
pop
sbb
insl
scas
fadd
push
scas
dec
lods
xchg
scas
dec
and
lret
fbstp
sub
fnsave
sahf
xchg
outsb
mov
sbb
pop
lcall
push
jns,pn
sub
mov
shlb
insb
sahf
sahf
sub
push
into
pusha
stos
add
and
insb
push
scas
loop
sub
push
stos
jo
shlb
insb
jle
xor
cltd
scas
push
dec
pop
mov
imul
jns
pop
pop
sbb
mov
lcall
push
pop
xchg
outsb
mov
xor
in
sqrtps
xchg
mov
je
iret
aaa
hlt
mov
mov
dec
xor
jne
in
mov
xchg
add
sahf
sbb
loop
sub
push
sbb
shrb
pop
insb
push
scas
mov
jge
jo
popf
dec
lods
in
push
mov
mov
xchg
outsb
mov
scas
je
icebp
or
mov
jp
sub
mov
mov
popf
fcoml
sub
push
sbb
mov
scas
and
insb
in
scas
outsl
mov
mov
stos
mov
imul
mov
pop
sbb
mov
push
int3
ds
fsts
or
shlb
insb
pop
scas
mov
jge
jo
lods
dec
outsb
scas
push
addr16
outsb
mov
jnp
je
jp
cmpsl
icebp
jl
scas
adc
mov
sub
push
pop
push
mov
jl
outsb
in
imul
popf
cmp
loop
fs
dec
jo
shlb
insb
sbb
mov
mov
out
outsb
jmp
scas
movsb
xor
jo
rol
scas
sbb
icebp
scas
test
push
dec
cmp
xchg
outsb
or
sbb
pop
stos
mov
jp
movsl
icebp
stc
lcall
je
iret
mov
imul
outsb
aaa
idivl
movsl
icebp
add
popf
daa
push
jbe
sub
adc
shl
lcall
and
ss
sub
stos
out
stos
jp
out
icebp
lcall
push
test
shll
and
insb
sub
mov
imul
jo
es
scas
mov
mov
loop
call
shlb
out
sub
movsl
icebp
std
lcall
or
out
in
jo
shlb
insb
mov
data16
sub
pushf
icebp
lods
testl
ja
jo
jo
dec
mov
sbb
ds
pop
fwait
cmpsl
scas
jns
mov
sub
push
lods
adc
cmc
popa
dec
inc
stos
sbb
shlb
dec
stos
and
das
pop
mov
cmp
cs
insb
xor
scas
sbb
and
movsl
cltd
ret
push
add
sub
outsb
jp
pop
icebp
adc
popf
push
push
lock
sbb
jo
shlb
insb
inc
scas
outsl
mov
mov
sub
jbe
icebp
movsl
lcall
pop
xchg
outsb
data16
insb
pop
icebp
rcrb
pop
cmpsl
scas
xchg
and
loopne
pop
scas
xchg
and
and
lcall
outsb
ljmp
insb
mov
repnz
mov
sub
cmc
push
pop
sbb
fsubr
scas
mov
mov
test
xlat
push
repz
fwait
push
adcl
push
jo
shlb
insb
xchg
outsb
xor
shlb
fildll
hlt
mov
and
insb
popa
scas
xor
sub
fstpl
jno
jp
pop
icebp
pop
lcall
and
cltd
adc
je
sub
jo
pop
stos
mov
popf
xor
insb
mov
shlb
insb
and
sbb
ja
or
sub
dec
lcall
xorl
imul
jne
mov
imul
push
sub
cmc
sbb
xor
mov
cli
and
ds
loop
outsb
cmp
fwait
icebp
test
popf
cmp
mov
sub
add
aaa
movsl
sbb
push
movsl
ds
sub
sub
jo
shlb
insb
adc
lret
lcall
push
mov
clc
and
loopne
movzbl
test
sub
jo
shlb
insb
push
scas
cmp
stos
xor
push
sub
js
mov
fcmovb
push
xor
sub
xchg
outsb
shlb
sub
and
stos
adc
jo
adc
sub
sub
rclb
jns
xor
shlb
insb
cwtl
scas
repnz
mov
stos
aaa
lret
ret
push
lahf
and
stos
and
lods
push
cmpsl
xchg
outsb
mov
insb
addr16
xchg
mov
in
stos
mov
aaa
mov
cmpsl
mov
sub
sbb
ret
push
mov
sub
jg
push
movsb
lcall
test
jb
sub
aad
shlb
insb
scas
mov
dec
cmpsb
mov
sub
cmc
pop
sbb
xor
jns
out
sbb
and
movsl
and
push
pop
and
mov
popf
in
xor
sub
shlb
insb
adc
ret
push
outsl
dec
mov
push
movsl
xchg
outsb
add
mov
outsb
push
clc
fcmovu
xor
sbb
nop
imul
mov
sub
sub
jne
sub
push
xor
add
scas
testl
je
iret
xor
scas
push
inc
jbe,pt
pop
xchg
outsb
adc
jae
clc
adc
ss
and
jo
shlb
insb
repz
mov
xchg
dec
jmp
insb
ret
outsb
xor
shlb
mov
mov
mov
sub
mov
ljmp
cmp
jo
shlb
insb
mov
stos
mov
scas
push
aam
jmp
lahf
xchg
outsb
subb
insb
mov
adc
stos
loop
jecxz
hlt
jo
shlb
push
pop
inc
push
ja
loop
and
jo
add
repz
xor
adc
sbb
push
adc
lods
jae
ret
sub
ds
push
imul
loope
jb
insl
adc
loop
sub
and
jo
shlb
std
fwait
sbb
movaps
scas
loop
pusha
push
push
jo
shlb
insb
mov
mov
cmc
pusha
pop
sbb
lock
loope
in
lcall
mov
mov
pop
cmpsl
scas
bound
loop
loop
mov
scas
cmc
pop
pop
sbb
adcb
lret
lahf
scas
je
scas
out
push
pop
and
in
inc
scas
sbb
sbb
imul
mov
dec
mov
sub
cmpsl
scas
mov
movsl
inc
rcll
and
and
lcall
nop
push
sub
scas
mov
cmp
insb
fsubrs
fistpll
sub
pop
and
sub
jecxz
cmp
ja
sub
lcall
adc
jle
insb
fyl2x
jo
sub
push
popf
xchg
outsb
add
jp
jecxz
clc
lcall
push
sub
sub
scas
clc
sbb
sbb
sbb
call
pop
popf
push
mov
xor
jo
hlt
xor
lcall
xchg
xor
clc
in
icebp
xchg
add
push
mov
xchg
outsb
dec
sub
rorl
iret
jno
push
mov
mov
xor
in
cmp
cld
inc
pop
ds
pop
cs
mov
stos
je
dec
inc
cs
in
test
push
adc
mov
push
adc
and
add
scas
jae
movsb
jb
repz
mov
das
and
push
andl
or
push
jns
push
out
adc
lods
push
mov
xor
fnstenv
outsb
adc
pop
xchg
insl
repz
insb
cmp
stos
insb
jecxz
in
jbe
adc
imul
sub
sub
shrl
insl
div
xchg
mov
cwtl
mov
js
push
mov
pusha
stos
pop
repz
adcl
sbb
loop
mov
ja
stos
and
push
sbb
mov
scas
ss
mov
xchg
iret
pushf
sbb
adc
lea
pop
cs
pushf
mov
lods
ljmp
jmp
repnz
jmp
push
hlt
call
clc
mov
sbb
push
jb
enter
icebp
push
je
jb
scas
insl
sbb
xor
xor
aaa
push
outsl
xor
stc
outsb
js
lcall
inc
jmp
adc
outsb
stos
hlt
mov
inc
mov
mov
mov
subl
push
mov
sbb
jge
mov
inc
jae
cmp
mov
mov
xor
push
jb
imul
pop
test
jbe
ss
pop
lahf
cs
mov
jb
jae
xor
pop
icebp
mov
pusha
jo
aaa
and
or
outsl
mov
fisubl
mov
out
sbb
test
insl
aas
mov
sbb
ja
mov
mov
scas
jne
bnd
insb
push
jmp
push
movsl
mov
sub
nop
lods
test
mov
jb
outsl
xor
movsb
out
mov
mov
pushf
mull
mov
xor
cs
mov
aaa
sbb
mov
ja
jmp
inc
daa
lcall
div
shll
lods
negl
mov
sbb
scas
push
mov
popa
test
fwait
mov
mov
xor
mov
insb
sub
jb
daa
mov
fcomi
push
and
mov
mov
xor
addr16
xchg
push
jmp
imul
cs
je
xor
outsb
cmp
jo
sbb
outsb
sbb
cwtl
mov
mov
ss
sbb
jbe
in
push
shl
xor
mov
xor
push
lods
jo
scas
mov
fldenv
stos
push
xor
mov
test
stc
push
sub
xor
aaa
scas
lcall
xor
mov
jne
push
mov
test
sub
mov
mov
push
sub
xor
aaa
push
mov
jae,pn
mov
xor
sub
test
mov
shll
xor
cmp
and
outsb
sub
mov
push
sub
out
xor
push
scas
outsb
sub
lods
push
aaa
jo
outsb
or
mov
push
sub
test
sbb
push
mov
xor
scas
scas
cmp
mov
das
inc
mov
and
pop
mov
mov
pop
test
mov
sub
mov
xor
out
and
cmp
mov
pop
hlt
das
test
xor
insl
add
add
xchg
lcall
sbb
push
divl
mov
xor
xor
cmp
jb
add
jb
rep
mov
insb
scas
dec
mov
mov
mov
ds
mov
stos
mov
mov
mov
mov
popa
dec
lods
jmp
clc
dec
lcall
and
ljmp
jl
fistpl
cwtl
dec
dec
aad
sub
adc
mov
out
xchg
xor
icebp
insb
sbb
cmp
xchg
xor
push
fcoml
lods
ret
gs
lods
jg,pt
dec
pop
imul
add
roll
outsl
xchg
dec
mov
ret
and
xor
cmp
sbb
sub
and
loop
pop
ljmp
hlt
jmp
ret
sub
inc
mov
mov
push
sub
sub
enter
pop
mov
adc
lcall
repz
sub
cmp
push
push
popf
sub
stos
out
push
pop
push
dec
sub
aaa
xchg
mov
add
fistpl
xabort
movsl
push
cmp
mov
lods
push
xor
nop
jno
mov
lods
outsb
and
test
mov
and
add
push
out
stc
xchg
pop
mov
mov
sub
mov
sub
dec
lods
ret
mov
mov
scas
and
adc
cwtl
cmp
pop
mov
sbb
adc
xlat
push
das
adc
mov
dec
jmp
sub
lods
dec
mov
and
dec
lds
lods
dec
shrl
test
stos
ss
shll
sahf
dec
cmp
pop
ja
jbe
jo
pop
out
add
push
rolb
xor
int
and
xchg
lcall
sbb
push
mov
jae
repz
cmp
hlt
adc
stc
xchg
xor
xor
mov
in
xor
pushf
xchg
das
mov
mov
xchg
mov
cmp
mov
mov
jne
lods
in
and
pop
ljmp
sbb
sbb
push
outsl
mov
mov
sahf
xchg
stc
pop
xchg
iret
jb
pop
mov
xor
aam
addl
pop
imul
jbe
and
dec
push
ss
dec
js
out
xor
call
outsl
and
and
loop
ret
mov
pop
mov
sub
cmp
or
mov
mov
dec
add
mov
inc
nop
rclb
imul
insb
cmp
or
jmp
loopne
mov
fistl
dec
jb
int
jmp
ljmp
add
testb
ret
adc
xchg
jle
movsb
inc
test
fistpll
mov
lods
mov
mov
popa
sub
icebp
sub
outsl
or
lock
fstpt
pop
lods
xor
xor
adc
outsl
lock
jo
pop
dec
nop
sub
movsb
dec
pop
cmp
mov
dec
adc
test
dec
loop
xchg
dec
mov
mov
adc
jmp
stos
mov
jno
idivl
je
push
mov
shll
jno
pop
lds
mov
sbb
test
outsb
movsl
scas
mov
mov
and
icebp
inc
sbb
mov
mov
enter
bound
mulb
testl
ss
clc
push
mov
fstpt
mov
dec
sbb
decb
insb
lcall
fiadds
inc
and
mov
out
jp
add
outsl
aad
cmc
mov
adc
jae
hlt
and
lea
jg
cmpb
xchg
addl
repz
movsl
jno
popa
and
loopne
jne
nop
pop
repnz
insl
jbe
cmp
popa
jno
shl
pop
mov
xor
mov
jle
sbb
outsl
lods
ja
mov
scas
jb
ss
cmp
sbb
jle
mov
mov
clc
jmp
fcoml
rorb
jg
insb
into
ljmp
mov
jo
adc
jecxz
jg
jmp
lret
jnp
mov
imul
stc
sub
ljmp
inc
mov
mov
in
aas
notl
inc
mov
cmp
mov
pop
insl
cs
mov
fsubrs
notb
maskmovq
negl
add
mov
arpl
icebp
mov
mov
pop
xchg
mov
mov
sarb
mov
popa
pop
dec
insl
mov
add
sbb
pop
jo
mov
mov
iret
scas
jnp
sbb
jno
sub
outsb
mov
pop
push
push
js
xchg
mov
cld
sub
pop
or
jb
mov
pop
js
fisubrs
stos
jae
repz
subl
mov
in
and
mov
add
xchg
popa
pop
xor
ljmp
pop
divps
scas
and
adc
cmp
ljmp
jb
mov
and
mov
fs
push
xchg
mov
lcall
jle
js
stos
jl
data16
fstpt
cld
mov
popa
pop
jmp
mov
shll
stos
pop
mov
or
mov
inc
mov
dec
gs
lcall
push
es
fldl
sub
mov
daa
dec
mov
shlb
push
sub
imul
test
shll
mov
add
rcll
repz
sbb
mov
mov
lods
pop
insb
pop
imul
mov
push
or
push
mov
divl
clc
sbb
into
pusha
xor
scas
decb
imul
cmp
xorb
dec
xor
cmp
outsb
lret
cs
and
lea
add
cmc
push
cmp
cmc
dec
out
nop
test
jns
insl
div
push
push
xor
jbe
pop
andb
xorl
mov
xchg
sbb
mov
and
daa
orb
fcomp
aaa
scas
mov
or
fwait
jl
sub
pop
jle
pop
mov
leave
mov
stos
mov
xor
xor
cli
dec
gs
pop
xorb
push
xchg
sub
in
test
pop
pop
mov
push
jecxz
repnz
jmp
outsb
ret
scas
shlb
mov
add
adc
cmc
js
sub
mov
mov
mov
mov
inc
xchg
push
repz
jae
pop
das
sbb
das
and
jae
hlt
jo
sub
dec
scas
jb
iret
cmp
mov
push
je
dec
mov
ds
lea
push
adc
dec
sbb
sbb
xchg
imul
test
mov
dec
add
mov
ss
sbb
jo
adc
adc
jp
mov
repz
push
lods
pop
push
sahf
pop
inc
test
pop
scas
aas
int
test
rorl
cmc
ret
sbb
mov
outsb
fcoml
mov
xor
cwtl
cmp
adc
dec
add
jbe
push
out
andl
xor
sbb
xor
add
pushf
test
sbb
shll
inc
and
add
and
add
sbb
cmpl
adc
xor
jne
out
push
cmp
shlb
stos
push
call
icebp
aad
scas
les
sbb
iret
pushf
mov
sbb
clc
and
push
jmp
push
push
xchg
push
push
pop
fbstp
xor
int3
mov
mov
stc
dec
adc
jno
sti
add
push
lods
js
push
in
fwait
xor
pop
dec
dec
fsts
jnp
cwtl
jo
lods
mov
je
mov
scas
out
sub
scas
sbb
mov
xchg
push
sub
mov
or
je
and
mov
fwait
push
je
inc
int
mov
test
ret
ss
ljmp
fimull
dec
stos
xor
dec
lret
add
addr16
lcall
cltd
les
js
pusha
adc
xor
sub
jnp
jge
rcrb
mov
cmp
sbb
int
sub
leave
mov
shll
shll
sahf
loopne
xchg
pop
cmp
push
movsb
mov
fbstp
outsl
repnz
inc
dec
sub
sub
mov
inc
sub
je
xchg
xor
imulb
mov
stos
les
xor
notb
stmxcsr
popf
dec
add
add
shlb
sbb
repz
mov
sbb
and
jp
fisubs
add
jg
das
mov
popf
cmpsl
cmc
xorb
or
lret
xor
nop
repz
sbb
push
lret
dec
cli
mov
les
dec
das
int
mov
adc
pop
enter
es
scas
jo
mov
mov
ss
fisubs
mov
repz
or
je
mov
inc
jbe
mov
mulb
mov
ficoml
add
add
sbb
xchg
mov
dec
cmp
psllq
or
xor
xor
fnstenv
mov
and
xor
sbb
stc
push
sbb
jno
out
push
ret
add
dec
shr
shll
xor
std
mov
add
sbb
xor
lcall
mov
cmp
into
sub
repnz
push
nop
xchg
fidivs
pop
dec
outsb
and
sbb
es
and
xor
push
mov
bnd
pop
sbb
lcall
sub
sub
push
push
fxch
fidivrl
fcomps
loopne
sub
andl
jl
jo
nop
and
jno
std
xor
lds
addr16
insb
mov
bound
repz
fidivrs
sbb
scas
imul
cli
out
xor
std
rcrb
add
jecxz
mov
mov
adc
or
sub
stos
jge
jno
stos
add
add
sub
add
test
fwait
sub
aaa
je
cmp
mov
pop
inc
or
outsl
aaa
xchg
int
mov
jnp
dec
in
popf
add
lods
jbe
ljmp
sbb
sbb
in
sub
push
cmp
mov
mov
mov
sub
pop
jbe
test
outsl
xchg
insb
pop
or
jns
and
and
cmp
mov
mov
test
ret
push
mov
imul
cwtl
cld
mov
into
pop
jbe
ja
ljmp
inc
xor
js
stos
repz
stos
xor
les
mov
push
add
or
pushf
jbe
lock
jmp
pop
lods
negb
fsubrl
pop
mov
int3
lods
cmp
jb
sub
int3
loope
repz
sub
dec
lods
ljmp
cltd
push
icebp
xor
ss
cmp
mov
iret
xchg
test
lods
hlt
iret
out
pop
int
adc
sub
mov
push
xor
ret
jns
pop
xchg
xchg
icebp
push
pushl
pop
mov
loopne
and
scas
cmp
adc
and
int
lods
in
dec
adc
iret
jl
push
outsb
jmp
dec
cmp
adc
mov
jne
ret
cltd
cmp
cld
cmp
lret
test
mov
lods
arpl
cmp
xor
and
roll
clc
mov
imul
lds
mov
lock
jb
aaa
cli
sub
inc
ss
mov
mov
inc
ds
push
cwtl
inc
call
push
add
lods
lret
sub
packssdw
ja
mov
insb
clc
fdivl
fbstp
lcall
jmp
insl
shll
outsb
mov
cmpsb
nop
stos
stos
fcmovnb
aad
xor
mov
inc
fstl
xor
push
movsb
xchg
mov
adc
fidivs
jnp
cwtl
sub
jno
dec
sub
pop
into
xchg
sub
xchg
adc
add
aaa
xchg
xor
mov
fiadds
mov
icebp
outsb
loopne
jno
push
jmp
mov
pop
into
int
push
or
aas
cli
or
loop
pusha
pop
xor
and
jecxz
imul
push
clc
and
lock
hlt
insl
inc
mov
inc
stos
mov
jno
push
cmp
push
popf
dec
sbb
ds
mov
jno
mov
aam
sub
stos
cmp
sub
xchg
pop
inc
xor
sbb
ss
mov
xor
aaa
cs
jns
in
jns
jno
mov
sbb
or
orl
inc
int
push
inc
rcll
in
addb
adc
in
call
shrb
mov
sub
cmpl
int
pop
in
mov
lods
pop
adc
int
push
mov
dec
test
cli
adc
and
cmc
add
clc
xor
sub
sti
int
xor
jno
loope
jmp
movsl
es
mov
adc
push
push
pop
xchg
lcall
mov
add
pop
popa
sbb
sarb
scas
call
sbb
imul
and
cmp
mov
sub
imul
adc
js
test
call
mov
pop
or
dec
arpl
movb
je
pop
mov
cmc
push
enter
jg
es
repnz
mov
movsb
out
shll
jmp
add
mov
mov
cld
or
and
sub
sub
int
sub
add
mov
movsl
cmp
cwtl
mov
dec
dec
jmp
lret
lret
xor
and
js
xchg
dec
pop
rcrb
adc
fimuls
leave
sbb
pop
ja
bound
cmc
or
test
and
xor
cmp
outsb
mov
mov
int
xor
les
push
mov
add
xorl
push
sub
and
jno
xchg
xor
rcrl
ret
divb
movsl
mov
mov
js
jge
loopne
popf
out
xchg
dec
push
pushf
ret
imull
mov
sub
int
dec
testl
ja
dec
scas
inc
or
clc
ds
and
cmp
jmp
sub
xchg
mov
mov
sbb
mov
clc
sub
ficoms
scas
stos
push
ret
sahf
xchg
push
sarb
mov
mov
and
outsb
imul
je
lods
aaa
fistpl
xchg
sub
jp
xor
ja
xlat
and
cmpsl
push
cmc
jmp
xchg
dec
dec
xchg
push
pop
idivb
cmp
cmpsb
leave
xor
sbb
sub
imul
xchg
add
xchg
jg
stos
ret
int3
jp
cmpsb
idivb
out
daa
xchg
int
xor
inc
xor
push
insb
push
xor
xchg
scas
mov
arpl
sub
sub
cmc
in
pop
push
mov
and
mov
aaa
sub
xchg
xor
sbb
adc
sub
inc
xor
stos
xor
mov
mov
mov
or
sub
or
bound
sub
and
bound
sub
or
daa
xchg
xchg
jle
xchg
popa
and
sub
bound
xorl
jp
mov
lods
sub
daa
xchg
mov
jecxz
jno
lods
adc
in
insb
sub
and
stc
and
cld
dec
sub
je
or
adc
xchg
and
adc
jo
adc
jo
adc
jo
adc
jo
adc
out
push
out
subl
popf
outsb
scas
dec
xchg
outsl
and
adc
insl
push
insl
sbbl
xor
xchg
pop
add
jo
lods
scas
pop
sub
cmc
jo
inc
clc
mov
in
jo
test
mov
mov
mov
and
xchg
dec
xor
push
xor
push
xor
push
xor
push
xor
je
shlb
lods
sarl
add
xchg
roll
outsb
xor
stos
mov
and
xor
and
movsb
je
sub
xor
scas
loop
xor
and
cld
outsb
xor
mov
aad
jle
jno
icebp
repnz
pop
outsb
repnz
repnz
outsl
pop
push
cmp
xor
ds
das
pop
das
outsl
mov
test
add
negb
scas
push
xchg
sbb
sbb
inc
icebp
jbe
icebp
outsl
jp
repnz
bnd
jg
jo
int3
jp
mov
bound
xor
pop
mov
xchg
cld
fisubrl
adc
push
adc
push
adc
push
mov
push
xor
dec
xchg
mov
pusha
ret
jecxz
and
xor
ljmp
jp
push
mov
fsubrl
movsb
loop
mov
div
xor
scas
xchg
test
xor
mov
aaa
xchg
add
daa
sub
add
xchg
add
xchg
add
sub
add
rep
repz
jbe
cli
and
mov
mov
sub
xchg
hlt
jb
insb
jb
mov
std
shlb
sti
xchg
mov
pop
sub
cmc
sub
dec
jb
stos
sub
jbe
rolb
jmp
pop
cmp
xchg
mov
test
rcrb
pop
outsb
in
int
mov
shlb
mov
mov
icebp
mov
jae
adc
jae
je
int
xor
shlb
xor
mov
pusha
mov
mov
cltd
xchg
and
andl
hlt
mov
arpl
stos
in
fidivs
shll
stc
and
nop
cld
fwait
adc
fistpl
pop
outsb
lods
int
inc
insl
je,pt
je
stos
jle
lcall
xchg
jmp
pop
lods
pop
outsb
test
imulb
fwait
outsl
xor
jp
mov
aad
xor
sbb
adc
xor
je
and
lods
sbbl
pop
call
dec
mov
orl
leave
inc
imul
test
adc
imul
push
stos
imull
imull
cmc
mov
push
mov
jb
rclb
jp
mov
push
notl
sbbl
imul
lds
or
shll
xchg
mov
fistpl
and
leave
inc
sub
clc
xchg
icebp
and
jecxz
dec
push
xchg
sub
ja
and
dec
insl
jp
pop
push
mov
cli
sbb
pushl
hlt
ret
push
sti
clc
sub
jnp
dec
stc
stos
sub
jbe
rclb
xchg
arpl
xor
and
insb
insl
mov
fistpl
loop
test
jge
mov
jae
mov
js
in
js
hlt
jbe
xchg
add
hlt
shlb
cmp
mov
sub
xchg
jp
xor
jb
mov
and
and
jno
leave
fwait
insb
ret
jg
push
hlt
jno
aad
std
or
outsb
popa
icebp
in
fstpt
insl
rorb
hlt
imul
hlt
sub
lcall
xchg
pop
sub
in
test
add
js
xchg
jnp
mov
xchg
and
or
inc
jmp
sub
imul
mov
stc
or
xchg
and
decl
sub
xor
loop
stos
bound
and
bound
and
bound
and
hlt
adc
hlt
adc
push
push
and
mov
hlt
mov
hlt
jp
stos
cld
stos
lods
hlt
imul
hlt
sub
push
jg
sub
or
add
lods
hlt
ret
push
sti
sub
clc
ss
in
stos
bound
sub
mov
jle
adc
mov
and
jae
cli
sub
hlt
and
sbb
mov
fisttpll
repnz
test
lods
hlt
and
sub
insb
hlt
xorl
adc
jge
mov
lock
mov
mov
inc
push
dec
mov
push
inc
mov
out
loope
loop
pop
pop
ret
roll
insl
rorb
test
pop
outsb
scas
shlb
lods
xchg
fsubrl
dec
mov
insl
sbb
insl
and
mov
push
pop
jp
cmp
fsubrl
push
insl
xchg
ds
daa
in
inc
rclb
xorl
jbe
and
out
mov
scas
jb
xor
jb
xor
jb
mov
dec
outsb
int3
enter
and
cs
jb
sub
cmc
lock
push
stos
fwait
xor
shl
inc
xor
lock
cs
outsb
rcrb
loope
stc
and
outsl
std
sub
mov
insl
jb
jbe
jb
jbe
jb
jbe
jb
jbe
jb
jbe
hlt
shlb
das
hlt
mov
adc
push
hlt
in
icebp
ds
jbe
jb
jbe
hlt
shlb
mov
mov
repnz
and
mov
fwait
repnz
popa
xor
and
mov
arpl
mov
dec
insl
add
xor
jmp
mov
push
pop
jmp
leave
and
movsl
bnd
data16
pop
daa
dec
or
lret
xchg
pop
jno
sub
aam
sbb
adc
fcoms
xor
inc
jno
mov
bnd
sub
add
xrelease
and
out
fistpl
pop
outsb
out
int
out
xor
fmuls
sub
stos
daa
xchg
jb
jb
and
leave
sub
xor
aas
test
lret
sbbl
jecxz
nop
lcall
xchg
ds
out
jg
jbe
mov
dec
les
call
imul
icebp
pop
scas
fistpl
pop
outsb
scas
int
scas
gs
les
jae
sub
sub
push
and
les
xor
add
insl
and
les
in
dec
jp
pop
cltd
loope
faddl
fsubp
ret
in
xor
loopne
sub
data16
and
sub
jnp
int3
xor
ret
bound
and
bound
and
bound
and
bound
and
bound
push
xor
clc
dec
and
jl
adc
xor
pop
repnz
xor
les
lock
and
les
ret
mov
or
add
push
mov
dec
divb
bound
lock
sub
push
pop
mov
adc
or
int
mov
and
mov
testl
mov
xchg
bound
mov
outsb
mov
mov
sbb
lods
push
dec
sub
xchg
xor
fsubrl
jno
cmp
les
mov
dec
divl
icebp
mov
out
mov
adc
clc
std
sub
ret
out
jno
and
jb
and
jb
and
jb
and
jb
and
jb
ds
or
jp
mov
jb
push
ja
and
xor
push
aaa
loop
dec
and
sub
inc
daa
xchg
xor
aaa
jbe
icebp
mov
inc
fcomps
xor
rolb
xchg
add
repz
and
jb
and
jb
and
jb
and
jb
and
xor
test
adc
xchg
cmp
insl
ds
push
dec
mov
gs
pop
hlt
and
repnz
ljmp
repz
fcomps
xor
mulb
mov
inc
jp
fnstenv
je
xor
add
shll
js
in
outsl
pushf
mov
cmp
cltd
test
cmp
cmp
mov
sbb
shr
outsb
call
outsb
ss
adc
fisttps
cmpb
rol
cmp
fucomip
lds
sbb
adc
jge
mov
jmp
stos
jmp
repnz
jne
xor
cmp
int3
jbe
ds
push
stos
subl
pop
cmp
dec
imul
xor
lcall
leave
adc
repz
mov
test
bound
xlat
mov
imul
or
pop
xor
mov
je
notb
por
push
mov
in
jmp
mov
push
jmp
jne
add
fcmovnb
jmp
pop
je
loope
add
cmp
xlat
fstps
xchg
mov
adc
sbb
rclb
pop
jbe
rclb
sbb
add
loop
in
clc
cmp
dec
xor
notb
stos
adc
shll
lods
out
jle
test
ficompl
imul
sbb
adc
mov
mov
test
or
mov
out
fldt
push
movsl
aad
mov
in
cmp
sbb
les
outsb
xor
push
pop
arpl
or
popa
xor
fsubs
or
out
loope
stos
xor
idivb
pop
mulb
inc
mov
mov
jmp
scas
out
je
jne
ds
inc
lea
sbb
xor
cmpsl
push
add
and
mov
in
xchg
inc
xchg
add
dec
sbb
mov
shl
sarb
mov
int3
outsb
repz
dec
xlat
lcall
xchg
jbe
gs
jmp
fwait
adc
test
cmp
adc
clc
outsl
mov
stos
les
rdmsr
jge
mov
les
repnz
movsb
addr16
loop
les
mov
cmc
push
and
test
push
push
outsl
or
add
int3
call
jb
fwait
mov
aam
mov
jg
sub
xchg
xor
pop
sub
add
xor
inc
in
inc
add
loop
scas
clc
cmp
jo
sub
loope
and
jp
outsb
mov
ret
lret
mov
sub
lahf
pop
mov
popl
pop
xor
aad
outsb
mov
add
mov
cmp
jb
adc
jb
mov
jb
cld
call
sbb
mov
leave
mov
pop
pop
cs
jb
hlt
lock
lock
dec
jp
mov
or
fisubl
cmp
xchg
outsb
push
jb
lea
add
outsl
mov
mov
and
popf
outsl
roll
push
outsl
pop
outsb
outsl
int
outsl
and
and
movsl
das
ret
jbe
and
bswap
lds
icebp
popa
and
pop
outsl
pop
outsb
mov
and
add
mov
mov
sbb
push
mov
dec
icebp
mov
mov
outsl
in
fcomps
xor
push
sub
nop
repnz
xchg
aad
xchg
fistpl
pop
outsb
das
int
das
gs
cmc
repnz
push
mov
xorl
dec
les
adc
bound
les
xorl
push
add
push
lock
int3
jp
das
bound
clc
add
clc
fcomi
dec
les
push
ret
xchg
add
ds
in
xchg
add
mov
mov
jbe
shlb
mov
mov
mov
pop
jb
and
mulb
lods
in
sub
insl
and
xor
mov
stos
sub
or
jmp
dec
mov
jno
aad
and
xchg
ret
xor
add
insl
inc
hlt
insl
ds
hlt
insl
ds
hlt
insl
lds
and
adc
aam
xor
jg
loopne
loop
xor
sti
stos
xor
lods
insl
xchg
jp
cmc
aam
dec
cmc
aam
popa
jp
mov
sbb
xchg
xor
aad
cld
xor
jae
and
insl
cld
jbe
loope
loop
adc
sti
ret
fstpt
and
leave
sbb
sbb
lods
xchg
aas
dec
sub
jns
fwait
hlt
stos
not
mov
aam
sbb
leave
xor
ret
push
aas
ds
add
jmp
es
aam
cld
pop
call
rclb
xorl
or
adc
jl
out
daa
xchg
int
jmp
and
leave
inc
jmp
mov
test
add
add
push
jge
ss
ret
shrl
pop
jbe
enter
add
lcall
adc
sub
sbb
xor
jmp
and
cld
outsb
jmp
stos
jmp
aad
xchg
push
jno
lock
rcrb
pop
outsb
lock
mov
lods
icebp
fwait
pop
mov
cli
shrb
inc
ja
lock
aaa
mov
and
pop
mov
inc
out
xchg
jb
lods
ja
sub
ja
aam
lock
sub
xor
test
rcrb
pop
outsb
scas
int
js
dec
js
sub
sub
and
lods
scas
fistpl
push
adc
pop
popa
sub
push
mov
ljmp
scas
ret
xorl
xchg
dec
imul
loope
jle
lret
scas
out
xchg
jp
out
xchg
add
add
add
aam
and
aam
jo
dec
pop
inc
sub
mov
aam
stos
jmp
lods
out
xchg
jp
stos
aam
dec
stos
aam
popa
cmp
pop
hlt
mov
or
xor
jbe
icebp
sub
out
or
out
ret
jg
sub
int3
jp
cli
and
out
call
xchg
leave
inc
scas
insl
mov
in
add
inc
and
lret
lods
roll
outsb
scas
int
imul
scas
jp
add
cld
mov
mov
cld
lods
pop
adc
sub
data16
and
sub
xchg
addb
repnz
pop
outsb
xchg
int
xchg
rolb
mov
aam
and
loop
pop
ret
ret
mov
and
and
loop
sub
cs
mov
mov
movsb
xchg
mov
and
insb
xchg
lods
push
out
jg
cmp
mov
pop
call
popf
sub
dec
xchg
stos
imul
insl
mov
imul
insl
push
push
mov
inc
dec
pushf
and
imul
stos
adc
and
add
add
out
and
imul
mov
fistl
mulb
pop
jne
or
pop
outsb
ljmp
leave
inc
ljmp
stos
sbb
pop
inc
ret
push
lock
and
pop
ljmp
fwait
jg
jp
les
pminsw
faddl
push
mov
and
ret
and
movsl
ljmp
ljmp
push
sub
icebp
sub
xchg
add
icebp
ds
icebp
aam
push
and
cmp
and
mov
aam
mov
or
jo
shlb
jo
mov
mov
cli
jno
adc
lea
orl
pop
sub
cmc
stos
mov
stos
call
stos
or
int3
fidivrl
lods
fs
dec
jno
cs
leave
inc
cs
mov
test
adc
adc
mov
mov
jno
jno
and
leave
and
movsl
xor
pop
test
sub
push
out
cwtl
cld
jb
cld
ret
aam
jno
mov
arpl
push
xchg
mov
cs
pop
je
or
int3
ljmp
xor
in
pop
outsb
in
int
in
gs
leave
inc
in
insl
jb,pt
jb
stos
pushf
shll
and
mov
in
bound
hlt
mov
xorl
mov
mov
stos
hlt
mov
jp
in
bound
sub
sub
xorl
arpl
loop
push
add
stos
int
stos
and
mov
sub
mov
lea
mov
jmp
in
cmc
mov
mov
imul
mov
mov
xor
xchg
mov
lock
cmc
pop
adc
sub
lock
aam
stos
xchg
clc
lock
notb
scas
notl
lods
rorb
test
pop
jmp
test
push
xor
cwtl
xchg
adc
and
mov
mov
js
pop
mov
mov
pop
mov
jl
orb
mov
psubsw
sub
fdivrl
clc
or
shl
ret
addr16
enter
into
add
inc
callw
ret
ret
inc
mov
lea
lea
pop
mov
enter
pop
jne
sbb
dec
clc
pop
loop
jbe
lods
lock
add
mov
inc
xor
fiadds
jg
enter
sbb
xor
icebp
pop
dec
jmp
push
xor
popf
or
ss
adc
test
jge
fs
push
cs
add
mov
xor
mov
stos
mov
test
repnz
add
pop
int3
sub
mov
aaa
std
mov
je
or
jb
sbb
or
call
loope
mov
pop
jbe
je
dec
or
pop
pop
cmp
ficoms
adc
add
inc
cmp
out
inc
and
push
pop
aaa
push
mov
pop
or
repnz
mov
jno
xor
and
mov
loope
ja
leave
sub
jmp
shrb
sbb
rolb
rolb
lret
mov
outsb
sub
inc
lock
std
loop
inc
mov
mov
dec
hlt
lods
and
inc
aaa
aam
xchg
and
push
insb
xor
lock
add
cmc
sbb
and
or
sbb
cmpb
mov
pop
lret
ret
push
ss
mov
fsubl
add
sub
aam
or
lahf
cmp
add
imul
es
mov
cmpl
mov
imul
sbb
bound
cmp
inc
aas
and
imul
gs
arpl
dec
xor
and
xchg
add
pop
jae
inc
fiaddl
push
fsubr
fmull
jnp
mov
dec
repnz
mov
je
xor
inc
addr16
cs
sbb
imul
fmuls
jae
push
aas
int3
dec
push
fildll
lcall
insb
mov
jne
xor
adc
aaa
jmp
test
fbld
jno
mov
stos
dec
adc
filds
jmp
stos
mov
dec
mov
xchg
mov
leave
push
arpl
dec
into
mov
ss
push
sbb
fcomps
pop
xor
and
mov
xchg
outsb
clc
pop
xchg
push
out
pop
sub
pushf
sbb
pop
jl
xor
sbb
lahf
loopne
mov
xchg
sbb
loope
mov
dec
lock
out
sbb
jo
mov
jnp
xor
xor
sub
jl
sbb
dec
cltd
and
jbe
les
and
mov
sbb
mov
jbe
cmp
lods
sub
pop
push
lods
cltd
std
les
divl
dec
dec
adc
rcl
mov
add
imul
add
xchg
loope
mov
mov
cmp
sub
cltd
incl
sub
cmp
pop
mov
enter
test
aad
imul
jno
xchg
dec
push
paddw
outsb
mov
lods
inc
and
jns
stos
bound
lcall
cmp
xchg
lahf
fsubp
andl
xor
xchg
js,pn
push
aas
xchg
cmpsb
shlb
pop
mov
je
push
xor
movsb
adc
mov
lahf
mov
jns
insl
pusha
inc
loopne
aaa
sbb
pop
mov
sbb
xchg
push
xchg
ret
lds
sub
cli
push
adc
push
xchg
jp
push
sub
dec
scas
sbb
jge
bound
xchg
add
stos
mov
pop
and
sbb
sbb
jmp
cmc
aaa
cli
orb
push
sub
out
push
imul
scas
cld
fbstp
les
sub
sub
jno
test
ror
sahf
js
int3
stos
mov
icebp
lods
xor
mov
inc
xor
sbb
popf
xchg
jno
sbbl
mov
stos
and
jno
js
push
in
jb
mov
out
sar
jle
mov
test
call
mov
mov
in
mov
fwait
sbb
fwait
aas
out
pushl
fstps
popf
sub
push
neg
fbstp
mov
jp
or
sub
lea
mov
sbb
cmc
int
data16
mov
sub
mov
push
dec
mov
add
andl
loope
loope
shlb
loope
ret
inc
iret
mov
xchg
test
nop
push
and
repnz
mov
rcll
movsl
mov
xchg
cld
jnp
lock
or
sbb
movsb
idivb
hlt
stos
cmp
mov
pop
and
mov
das
loop
fmuls
cli
scas
sbb
mov
pushf
lock
push
add
add
cmp
xorl
dec
mov
xchg
out
add
mov
fwait
insb
push
ja
lret
mov
push
popf
int
les
loope
mov
out
out
push
mov
push
mov
rclb
dec
cmp
push
or
insb
sbb
mov
dec
fbld
or
es
mov
outsb
sbb
xchg
bound
fdivrp
negb
pusha
mov
cmp
mov
popa
mov
push
das
es
rcrl
pop
cmp
hlt
xchg
aam
pop
fwait
repz
push
int3
mov
outsb
inc
push
jae
lret
test
jae
repz
mov
dec
gs
arpl
and
out
ret
movsb
and
cmpsl
jne
mov
stos
icebp
lret
sub
or
and
jno
add
push
xchg
or
fcoml
ret
test
pop
push
mov
notb
aad
xor
xor
jno
and
and
scas
jmp
or
adc
xor
inc
or
orb
push
xor
mov
or
or
mov
ret
mov
rolb
sti
dec
popa
dec
in
hlt
push
out
fisubrs
xor
imul
xor
daa
sub
call
xlat
sub
das
mov
enter
inc
movl
movsb
mov
dec
popa
int
cmp
aad
int
bound
jle
arpl
inc
loop
and
push
xor
and
mov
loop
xorb
lret
xor
jle
xchg
ja
xchg
sbb
fdivp
scas
sbb
repz
shrl
dec
scas
xor
lret
pop
inc
test
and
nop
mov
mov
movsb
cmp
mov
and
ss
cs
jne
and
mov
dec
test
loopne
pop
jo
aad
rolb
push
adc
repnz
or
test
jne
sub
stos
push
in
inc
loop
es
add
in
hlt
sbb
jge
insl
push
sub
pop
repz
cmpsb
imul
add
push
rcr
test
notb
jbe
push
mov
xchg
push
mov
rol
jae
inc
addr16
jne
add
sti
sub
jns
or
inc
stos
int3
sbbb
lds
negb
fcom
dec
sub
aaa
push
mov
fbstp
mov
daa
mov
dec
jb
push
mov
add
and
inc
dec
xchg
jbe
dec
xchg
mov
test
xchg
push
push
outsl
popa
sbb
and
and
lods
mov
xchg
stos
cmpl
adc
push
fstps
mov
sahf
xor
loopne
lods
aad
lret
icebp
jg
jge
pop
cwtl
subl
adc
pushf
std
lcall
mov
insl
sub
ret
sub
std
cs
dec
insl
cmpsb
stos
fbstp
dec
imulb
push
repnz
fwait
jne
mov
imul
stos
ss
add
popa
jle
les
int
rclb
cmp
pop
sti
mov
pop
mov
fsubl
or
inc
jg
subl
shll
jge
inc
dec
ljmp
push
push
jns
jnp
xor
jns
push
sub
roll
mov
mov
sarb
ficompl
and
fmuls
lods
mov
mov
jno
aaa
cmp
jbe
xor
mov
jno
aaa
inc
outsl
jbe
and
into
mov
pop
test
scas
shrl
out
aaa
sbb
roll
inc
mul
push
jmp
out
or
jae
xlat
adc
dec
xor
pop
push
imul
sti
add
mov
mov
icebp
out
dec
cmp
les
cmp
bound
sub
sahf
outsb
out
jmp
imul
dec
ret
call
insb
lock
call
xor
dec
push
lea
fsubrs
int
insb
mov
jae
push
mov
or
outsl
add
inc
push
and
mov
sub
sub
dec
ss
hlt
popa
cmpsb
int3
pop
sarl
push
loop
mov
scas
xchg
jns
xor
cmpsb
cmp
adc
mov
pop
aaa
adc
mov
pop
xor
scas
pop
mov
cwtl
push
xor
xlat
leave
dec
ljmp
xchg
xor
es
icebp
clc
jmp
add
mov
ficompl
push
or
in
loopne
icebp
sub
sbb
dec
outsb
cmpsb
test
imul
pop
out
rcl
repz
sbb
or
int3
fs
sti
sbb
test
jnp
inc
mov
or
les
out
gs
js
out
cmp
popf
or
aaa
pop
cli
xchg
mov
cs
ja
sbb
aam
lret
or
scas
push
jo
fbld
mov
mov
pusha
repnz
push
jle
iret
lret
pop
je
cmp
cmp
aaa
inc
lods
cmc
cmp
inc
cmp
mov
test
dec
rorl
or
mov
xor
ja
lock
push
mov
jno
in
ja
dec
test
mov
sub
cmpsl
mov
xorl
rolb
mov
jbe
fwait
adc
in
adc
lea
out
xor
mov
icebp
in
sbbw
data16
outsl
add
mov
push
imull
mov
repnz
mov
mov
mov
xchg
pusha
shll
mov
popf
mov
xchg
push
pop
pop
adc
movsl
jne
xor
mov
xor
jo
xchg
inc
out
mov
and
imul
dec
pop
jne
pop
scas
aam
inc
lods
jb
les
pop
push
jnp
inc
xor
dec
sbb
ret
stos
arpl
mov
sahf
stos
dec
incl
jne
leave
int3
popf
repnz
push
dec
cltd
aad
clc
pop
fcomp
or
mov
pop
stos
sarb
popf
aaa
frstor
pop
je
test
sbb
lods
repz
icebp
fcoms
imul
mov
into
push
dec
dec
scas
sbb
mov
mov
cmc
or
aam
cmp
xchg
test
aad
mov
jne
or
in
mov
orl
out
imul
ja
gs
daa
scas
sar
lret
sbb
dec
icebp
sub
clc
int
dec
sub
mov
sbb
mov
cld
jmp
push
pop
push
enter
loop
movsb
xor
jb
cmpps
xchg
subl
mov
sub
mov
cs
or
cmp
pop
jp
pop
and
jmp
nop
das
sahf
pushf
mov
mov
jne
cld
jmp
mov
and
mov
cld
jmp
and
lock
clc
pop
mov
jge
push
mov
adc
movsl
scas
bound
dec
jno
jae
dec
pop
pop
xor
xchg
mov
mov
idivl
jns
outsb
fdivr
shrb
stos
mov
mov
bound
outsl
adc
push
mov
in
xchg
and
or
scas
leave
daa
push
dec
clc
cs
test
jge
cs
out
repz
fwait
cs
outsl
ret
leave
pop
nop
hlt
mov
mov
iret
and
stos
and
fidivrl
sub
mov
hlt
jge
sbb
jmp
adc
lods
mov
iret
mov
cs
mov
jns
inc
sub
mov
pop
gs
sub
xchg
ss
int3
fisubl
leave
and
pop
cmovs
mov
xor
pop
loop
mov
inc
mov
sub
mov
dec
mov
pop
mov
adc
jmp
and
or
popa
insl
pusha
in
int
add
push
les
jl
mov
cmpsb
dec
ja
lret
push
add
sub
popa
pop
xor
jg
das
fmuls
or
xor
jp
adc
adc
jnp
mov
add
push
sbb
jmp
jp
shl
add
lea
scas
cmpsb
ror
push
popa
adc
and
insb
fs
cmp
out
neg
mov
push
cmp
xchg
lods
outsl
sub
ds
inc
scas
insl
mov
cmc
negb
loop
push
push
jecxz
sbb
ret
or
inc
push
xor
sbb
jo
push
inc
sub
popa
jmp
shll
js
imul
insb
mov
outsl
and
jno
jb
jae
and
mov
jbe
ja
js
imul
insl
mov
outsb
and
jo
stc
mulb
and
inc
add
repnz
mov
clc
xor
inc
and
mov
pop
in
ja
jno
jns
jae
adcl
xor
cmp
push
push
jmp
stos
ljmp
lret
xor
xchg
mov
js
in
outsb
push
cmpsb
xchg
out
incb
loopne
insl
sub
mov
nop
and
push
cmp
iret
sbb
notl
insl
adcb
pop
mov
xor
dec
pop
testl
fistl
dec
jb
push
loope
pop
repnz
adc
sub
mov
mov
in
fcomps
push
fildll
lcall
insl
or
xchg
push
sbb
and
outsl
inc
outsl
nop
test
sti
jb
push
adc
jne
xchg
fwait
jmp
inc
mov
sarl
mov
outsb
stos
insb
jbe
dec
imul
push
lcall
jbe
int3
imul
mov
test
fidivs
lods
dec
mov
es
add
pop
out
pop
sub
stc
aaa
sbb
call
mov
xchg
mov
jno
je
clc
pop
and
icebp
lods
jno
loope
mov
les
outsb
outsl
pop
xor
add
mov
dec
push
or
out
sub
inc
iret
cld
in
pop
mov
inc
push
jp
js
out
scas
stos
insb
insl
loope
mov
dec
cmp
pop
fsubs
aad
enter
pop
ja
xchg
std
out
xor
cmp
mov
ja
add
mov
out
pusha
cmpsb
insl
lret
lods
add
sbb
pop
add
dec
jno
mov
push
lods
aaa
sarl
push
inc
dec
pop
xor
push
popa
mov
jb
repnz
pusha
ss
mov
pusha
cs
addl
test
jo
testb
popa
mov
in
out
jbe
out
insb
push
imulb
cmp
lcall
out
mov
enter
dec
jo
xor
ss
dec
xor
add
and
ljmp
add
pop
push
fisttpl
mov
push
or
inc
inc
insl
xor
mov
adc
jo
jb
repz
adc
outsl
sub
jbe
mov
adc
sub
push
imul
divb
js
fcoms
jmp
cltd
inc
cwtl
push
mov
mov
mov
mov
mov
mov
push
aam
xchg
xlat
std
mov
lret
cmc
shll
inc
jae
jb
cli
jo
cli
jno
sbb
outsb
sbb
mov
xchg
jecxz
pop
adc
leave
das
dec
scas
dec
xlat
and
inc
int
dec
sub
cmpsl
cwtl
mov
icebp
xchg
push
data16
div
add
adc
mov
mov
lods
sub
call
xor
imul
iret
rorl
jno
in
insl
ja
mov
mov
insl
mov
lods
js
inc
popf
push
imul
lcall
daa
movsb
ljmp
imul
dec
mov
outsl
jbe
lahf
divb
pop
xor
or
xor
xchg
in
xor
jne
js
cmp
push
add
sub
aaa
mov
pushf
enter
pushf
int
cmpb
sbb
sbb
ds
imul
or
insl
dec
lret
test
pop
mov
mov
mov
ja
lods
mov
outsl
lret
in
stos
mov
sub
insb
mov
mov
cmovs
push
mov
jns
aam
jbe
das
pop
jb
pop
sahf
iret
scas
xchg
jae
shll
movsb
pop
sbb
ja
dec
pop
or
pop
jge
scas
sbb
xorb
sbb
imul
je
outsb
jno
jo
mov
mov
nop
into
and
in
mov
mov
mov
subl
add
repnz
aad
add
cmpsb
mov
push
adc
jb
rclb
outsb
repnz
test
js
inc
and
call
xchg
dec
stos
incb
push
fwait
adc
int3
pop
sbb
jns
pop
sub
sub
lods
xchg
ret
subl
and
aam
jp
lahf
mov
jg
push
cmp
lods
xchg
jg
mov
test
lcall
div
and
sub
nop
aaa
xor
xor
mov
imul
in
clc
sbb
jmp
add
mov
xchg
cli
int
pop
insl
pusha
push
lods
outsb
imul
fcompl
push
xchg
lret
push
xor
call
fldenv
cmp
adc
mov
cltd
je
repz
imul
mov
mov
rol
shrb
testb
mov
negb
aaa
leave
and
fsubs
mov
sbb
andw
and
mov
and
ds
inc
jo
imul
fcmovb
mov
popa
ret
es
rclb
cmp
add
std
xor
adc
repnz
inc
mov
mov
xchg
add
mov
into
sbb
mov
loope
xor
jge
dec
jp
add
mov
mov
adc
cmpb
pop
xchg
add
ss
mov
jmp
and
les
inc
popf
cmpsl
xor
push
ret
mov
in
mov
sti
and
cli
leave
cmp
test
xor
and
sahf
rorb
insl
jmp
out
add
push
mov
rclb
je
pop
lds
pop
jmp
leave
leave
xor
xor
fidivs
jo
or
dec
cmp
sbb
pop
mov
sbb
xchg
push
sub
addr16
roll
dec
mov
gs
fmul
jle
xchg
test
sti
fcoms
dec
mov
push
neg
cld
lods
inc
insl
sbb
popf
dec
sub
in
mov
push
mov
sti
pop
mov
addr16
ss
das
sbb
dec
xchg
ficomps
push
jne
xchg
xchg
insb
js
test
lcall
sub
je
xor
xor
xchg
and
imul
jbe
jne
jae
xchg
cltd
icebp
jno
cmp
loop
inc
mov
rorl
test
xor
cld
stos
in
out
icebp
fdivs
dec
rcll
stos
inc
xor
and
call
dec
xchg
add
jg
icebp
adc
ror
mov
add
scas
sub
xorl
scas
pop
lcall
cmpsb
xchg
jmp
and
sub
in
les
std
dec
leave
pop
push
cs
mov
imul
ss
xor
cmp
inc
dec
pop
push
cmp
xor
sub
in
dec
cmp
jmp
cmp
jno
mov
movsb
mov
subb
push
mov
pushf
add
adc
movsl
scas
sbb
pop
jo
ficompl
cli
es
pusha
cmc
mov
mov
pop
xor
das
jo
popa
add
and
mov
es
mov
jmp
pop
mov
mov
and
xchg
mov
aad
repz
sbb
imul
pop
pusha
mov
fldl2t
jmp
in
mov
mov
shlb
pop
ret
movsl
xor
push
mov
sub
fmuls
mov
or
jno
shrb
das
xchg
add
sub
pop
das
subl
inc
cs
es
mul
repz
xchg
and
and
cmp
sub
push
xor
pop
ljmp
jno
ret
and
mov
imul
js
arpl
dec
imul
xor
insb
mov
push
push
jns
fninit
testl
jns
mov
lods
lock
push
gs
mov
mov
mov
xorb
fldt
ss
sbb
inc
push
outsb
push
int3
out
fdivr
cli
dec
lods
and
and
inc
push
mov
inc
inc
jge
and
and
push
pop
push
mov
fbstp
insl
mov
dec
dec
das
mov
ljmp
ss
ror
jne
outsl
push
lock
mov
cmp
push
paddsb
xor
frstor
dec
adc
popa
dec
sbb
sub
sub
add
inc
int
mov
sbb
sub
nop
jno
pusha
xchg
bound
nop
imul
sar
aas
and
jne
out
add
push
test
jl
sub
ret
bound
jb
jmp
scas
cmp
negb
add
cmpsl
adc
outsl
inc
push
cmp
mov
push
mov
fbstp
mov
mov
daa
pop
in
call
insl
sti
je
loopne
rolb
sbb
stc
stos
or
mov
jno
cmp
push
cmpsl
js
push
fsubs
pop
mov
jecxz
rclb
jg
mov
push
push
repz
push
ljmp
xor
add
int
arpl
insb
xor
stos
aam
mov
bnd
loopne
sbb
in
das
lock
out
inc
pop
push
and
addr16
add
insl
pushf
repnz
rorl
repnz
mov
sahf
lea
inc
pop
sbb
push
aad
lahf
test
dec
dec
inc
and
push
out
popa
and
pop
push
arpl
jo
inc
mov
popa
mov
adc
mov
shlb
ja
xor
sbb
sub
andl
sub
jnp
adc
loopne
pop
jmp
dec
stc
das
xlat
mov
hlt
insb
jg
cmpsl
pop
int
xchg
movsb
xlat
jecxz
push
int
std
pusha
shll
jp
pusha
and
or
es
mov
pop
iret
fdivrs
pop
adc
inc
jno
pop
inc
adc
and
stos
inc
fsubrs
inc
sub
fs
icebp
ja
inc
lret
cld
jle
push
pop
jb
push
dec
pop
mov
pop
shl
rolb
and
cmc
fisttps
cmp
inc
push
mov
mov
je
mov
mov
out
cmp
cmp
sbb
fisttpl
mov
ret
aad
or
jbe
inc
push
mov
sub
ljmp
pop
insl
mov
and
inc
dec
cmp
inc
hlt
or
shr
imul
in
dec
pusha
pop
fdivrl
mov
jns
mov
test
and
out
and
xchg
pusha
popf
xchg
mov
mov
jns
sub
jbe
loop
fs
cmp
push
into
mov
push
xlat
loope
sub
iret
sbb
dec
add
jecxz
pusha
cmpsl
and
sarb
mov
mov
loopne
mov
mov
push
and
roll
or
outsl
and
pop
xor
push
sub
fwait
jge
repnz
dec
repnz
sti
lea
insb
inc
push
mov
inc
jp
mov
lret
cmp
sub
adc
outsl
sbb
xor
das
sti
inc
cmc
int
fistpll
rdtsc
movsb
xor
jp
daa
push
dec
imul
dec
adc
iret
mov
call
mov
repnz
and
icebp
ljmp
mov
sub
pop
mov
cwtl
insl
js,pt
test
fimuls
clc
push
mov
sbb
into
std
push
mov
sub
inc
and
dec
in
sbb
xor
and
mov
lret
sub
daa
leave
mov
jmp
lock
push
mov
ret
loopne
movsl
xor
inc
stc
push
test
jns
inc
push
dec
push
es
dec
sbb
add
data16
dec
mov
and
stos
lcall
adc
pcmpgtw
in
jmp
pop
inc
mov
xlat
or
out
jae
sub
adc
jecxz
cs
add
mov
lret
sub
push
mov
jp
cmc
pop
cwtl
or
push
movsl
pop
dec
mov
push
testl
imul
dec
xorb
and
cmp
dec
sub
and
xchg
mov
push
int
dec
out
sahf
sub
js
enter
insb
mov
or
repnz
or
fsubl
jnp
xchg
xchg
sub
pop
adc
in
rolb
dec
inc
sbb
sbb
jns
repz
pop
xchg
std
add
lret
or
bnd
mov
xchg
sub
lds
int
rcrl
dec
mov
xchg
push
gs
push
outsb
lret
out
les
mov
imul
stos
and
xor
int
push
lcall
inc
xor
sub
or
movsb
scas
adc
mov
insb
mov
mov
pop
hlt
dec
scas
ret
std
inc
xchg
add
push
xchg
mov
into
aaa
xor
sbb
les
push
inc
lds
jns
mov
pop
xchg
jmp
loope
adc
cmpsl
xor
js
test
into
ret
icebp
aam
xor
mov
pop
mov
and
mov
mov
mov
scas
iret
jno
testl
dec
into
aad
pop
std
hlt
aad
cmp
adc
push
xor
stos
stos
xchg
out
lock
test
jns
xor
jg
adc
fisubrs
sub
stos
xchg
out
lock
arpl
sbb
setge
mov
and
xchg
mov
imul
flds
dec
pop
sbb
data16
sub
roll
xor
insb
pop
cmp
clc
push
pop
lea
je
sub
in
sub
je
test
fcoml
sahf
jg
lret
adc
adc
jbe
bound
jmp
xor
xor
outsl
sahf
mov
adc
add
insl
push
cmp
pusha
xchg
jne
movsb
xor
xor
mov
xor
pop
lock
inc
imul
jp
ja
ja
xchg
or
fcompl
pop
das
mov
push
jb
js
mov
mov
mov
pop
loope
or
into
pop
jl
or
out
int
iret
popf
outsl
lret
push
dec
push
sbb
in
lds
stc
fistpll
movsl
test
sub
mov
ret
xorb
int3
dec
inc
sub
int
mov
pushl
icebp
mov
fwait
outsb
jg
jp
into
jl
mov
fdivs
das
out
mov
pushf
add
push
sub
dec
aaa
pop
xor
cs
ret
subl
and
push
arpl
in
das
xor
gs
xchg
out
imul
aaa
inc
imul
lock
adc
xor
xchg
rorb
std
mov
and
bound
push
jae
ret
pop
xchg
or
dec
push
xor
shr
cmp
push
bound
push
jmp
inc
mov
repnz
push
cmp
and
pop
popf
cmp
pop
mov
cmp
mov
cwtl
iret
xor
adc
jbe
bound
cmp
sbb
repz
dec
andl
jle,pn
pop
fldcw
lods
lret
sahf
xchg
neg
ljmp
xlat
cmp
xchg
xchg
loope
xchg
jne
out
and
sub
dec
adc
mov
mov
sbb
pop
testl
xor
pop
xor
mov
out
stos
fdivrs
jmp
push
mov
pop
ja
pop
and
jle
adc
repnz
cmpsl
jp
pop
fdivl
sahf
mov
xor
pop
pop
das
les
loop
hlt
add
scas
ret
push
in
std
jbe
sub
add
lahf
das
pop
je
cmc
icebp
sub
hlt
inc
fsubs
push
jmp
jp
or
sub
stos
and
mov
movsb
push
jle
pop
dec
fwait
out
in
mov
movsb
rcll
sti
pusha
pop
subl
mov
cmc
sub
js
ds
push
dec
test
daa
xor
ret
subl
subb
fs
or
sub
clc
mov
add
icebp
jo
xchg
xor
mov
into
pop
js
mov
push
ja
adc
dec
jb
sub
pop
stos
je
push
aad
outsb
xor
inc
js
mov
jae
pop
xlat
cmp
fstpl
xchg
fsubrs
addl
stos
clc
fisubrs
out
xor
ret
cs
sub
ret
subl
push
inc
stos
daa
psadbw
and
aam
adc
push
sub
ficoms
mov
adc
cmp
sub
in
jge
sub
cmp
hlt
jae
pop
out
rolb
xlat
pop
xchg
ffree
repnz
cmovno
add
and
cmp
jns,pn
das
sub
jno
aam
mov
insl
sub
int
test
push
dec
mul
cmc
decl
mov
int
iret
adc
pop
pop
cld
jp
repnz
loope
cmp
fnstsw
fimull
fisubrs
mov
jbe
pop
in
add
in
lods
bound
mov
imul
test
and
sub
mov
adc
dec
stos
mov
or
mov
nop
sti
xchg
and
cli
and
adcl
gs
sbb
jge
and
jae
push
adcl
add
imul
popa
and
pop
or
cmp
add
sbb
mov
dec
ss
or
sub
out
mov
xchg
cld
sub
sub
cwtl
pop
sub
xchg
sub
outsl
xor
push
inc
dec
js
mov
mov
xlat
fwait
or
cmp
sbb
fwait
sbb
loope
adc
insl
jmp
gs
pop
adc
xor
clc
mov
dec
dec
js
and
adc
jns
shr
iret
mov
xchg
in
mov
cmc
adcl
and
imul
cld
insb
xchg
aam
frstor
jmp
and
lea
js
lcall
ja
mov
or
pop
call
cmp
jmp
iret
movsl
add
dec
pop
rcll
adc
adc
mov
mov
sbb
insl
adc
rclb
jle
scas
sbb
add
jno
aad
pop
daa
mov
lcall
jecxz
and
negl
test
jne
fwait
jmp
in
add
stos
and
or
mov
pushf
cli
pop
fs
in
dec
sub
popa
cmp
adc
cs
int
and
lods
and
fisubrl
jo
jo
cmpsb
into
add
xchg
mov
xchg
push
xor
mov
and
out
nop
jne
jecxz
jmp
in
aas
leave
adc
test
pop
push
add
push
addb
sahf
sarl
outsb
inc
sbb
roll
addl
notl
push
dec
and
out
aam
cmpsl
rcrb
mov
cwtl
imul
enter
test
sub
mov
sbb
leave
push
push
repnz
lret
aaa
jge
push
mov
jp
in
mov
sahf
sti
mov
cli
mov
into
pop
dec
imul
pushf
cs
add
ss
mov
dec
add
jle
subb
popa
pop
and
into
and
mov
and
popa
inc
and
xchg
adc
lahf
add
and
adc
jge
mov
jge
std
mov
push
jle
mov
imul
jl
mov
push
xlat
jno
push
cmp
jno
dec
mov
or
jmp
sub
jno
xchg
lahf
stos
adc
rclb
mov
mov
pop
addl
lock
xor
jb
xlat
into
xchg
lahf
xchg
pushf
das
mov
push
xor
test
mov
and
aas
and
dec
das
loopne
inc
sub
xchg
das
lahf
add
pusha
lret
in
popa
roll
ss
xchg
inc
and
jmp
aas
ret
xor
leave
jno
bound
push
in
pop
sub
hlt
push
out
push
cmc
mov
popa
jo
bound
and
into
cmp
incb
mov
fidivs
xchg
xchg
aam
push
mov
je
repz
pop
dec
sub
sub
stos
mov
ja
add
rclb
mov
xor
sub
in
jecxz
xor
jns
cltd
pop
push
jmp
loop
aas
lret
inc
dec
pop
and
mov
mov
jbe
hlt
pavgw
cmp
jge
mov
int
std
ror
xchg
mulb
in
ret
mov
mov
xlat
out
and
test
test
pop
es
js
pop
addr16
jns
jae
jmp
dec
test
push
movsb
cmpsl
out
dec
add
xchg
sub
sub
popf
or
movsb
sbb
orb
xchg
mov
ss
dec
cs
push
inc
xchg
xchg
nop
cmp
cs
sbb
dec
aas
jb
pop
dec
mov
imul
adc
pop
je
jno
fwait
push
push
mov
push
out
in
pop
fbstp
add
imul
lret
rolb
loopne
dec
imul
fadds
lahf
outsb
sub
out
push
ror
addb
mov
es
mov
scas
push
push
aaa
icebp
lahf
out
jmp
mov
mov
mov
fwait
cmp
scas
lret
mov
not
xor
cmpl
test
mov
popa
call
ret
shlb
xor
mov
cmp
mov
mov
pop
push
imul
push
stos
pop
imul
maskmovq
negl
lcall
lahf
push
orl
and
cmp
ljmp
fcom
sub
dec
inc
sti
pop
frstor
add
xor
mov
cmp
jp
adc
adc
scas
sub
mov
aam
outsb
movsl
and
aad
jge
xor
stos
lods
bound
mov
sub
dec
insb
bound
in
pop
adc
xchg
jno
pop
adcb
jp
mov
lahf
js
ficoms
lods
mov
or
decb
mov
std
sub
push
sbb
loop
jae
movsb
popa
sub
cmp
dec
mov
or
xchg
mov
and
mov
test
int3
sbb
or
and
xor
pop
iret
mov
mov
sbb
mov
popa
sub
idivl
sbb
shrd
push
sub
adc
cmp
ljmp
testb
mov
clc
mov
pop
jno
mov
xchg
fnstenv
mov
aaa
mov
mov
add
out
mov
aad
lea
stos
ret
fnstsw
test
push
xor
icebp
call
rcrb
jg
cmp
test
aaa
xchg
jl
pop
mov
std
not
das
mov
addl
sbb
dec
xor
dec
jl
andl
je
leave
push
sub
fldenv
je
imul
scas
or
inc
fxch
or
cmp
in
sbbb
or
pop
scas
jns
pop
or
cld
push
gs
mov
imul
mov
bound
jnp
push
adc
movntps
in
xor
xor
scas
cmc
js
gs
imul
mov
cmp
scas
enter
scas
jmp
inc
stos
inc
xlat
cmp
and
adc
or
aaa
pop
mov
adcl
jp
out
ret
subl
inc
lods
xor
pop
mov
adc
daa
sub
mov
mov
sbb
enter
fisubrl
test
mov
fidivrs
mov
add
andl
cmpsb
rolb
clc
das
setb
mov
and
push
loop
jbe
mov
push
lods
add
pop
dec
adc
xor
test
jb
add
xchg
push
dec
daa
xor
scas
sarl
fistl
dec
pop
mov
das
pop
mov
mov
xor
call
mov
mov
out
ja
mov
push
test
popa
outsl
inc
fs
cmp
mov
mov
lock
repnz
imul
or
pop
sbb
rolb
push
jmp
sahf
sub
cmpsl
or
jo
jne
cli
aaa
mov
mov
pop
jmp
pop
jbe
icebp
xchg
push
aaa
test
jae
mov
mov
mov
mov
mov
pop
jmp
aam
dec
dec
push
add
sarl
adc
jle
xlat
jmp
mov
call
sbb
xchg
jb
in
scas
sbb
sbb
adc
cmc
mov
pop
jmp
das
adc
xor
mov
mov
jne
dec
cmpsl
xorb
xor
mov
xchg
fcoml
sub
sbb
cmp
jae
int3
fcoml
sarb
push
pop
mul
addr16
mov
pusha
jne
fs
mov
fsubl
cwtl
lds
mov
cmp
mov
mov
mov
fimuls
lret
fidivl
psubsw
cld
pop
pop
aam
cld
dec
xchg
into
stos
jmp
cmpsl
and
mov
into
inc
pop
enter
arpl
js
push
inc
lods
sub
lods
outsb
pop
jecxz
hlt
insb
xchg
mov
mov
inc
mov
mov
sbb
lds
scas
jo
lods
outsb
sbb
xchg
mov
fwait
or
dec
lods
pop
fisubl
je
sbb
in
ds
test
and
lret
lods
add
mov
push
adc
or
lods
fisubrl
sbb
iret
xorps
dec
cwtl
js
cmpb
or
cmp
loop
push
jo
outsl
jp
cld
jns
fnstsw
adc
mov
xor
push
pop
push
xlat
outsb
insl
pop
lds
lds
test
dec
adc
sub
adcl
push
sub
enter
push
push
jle
test
sti
push
outsl
loop
push
cwtl
jae
sti
jno,pt
jo
dec
in
aam
xchg
dec
cmc
cmc
mov
aas
into
xorl
mov
int
test
xor
mov
cmp
rorb
adc
test
cmc
jno
pushl
and
das
rclb
dec
enter
xchg
mov
sub
cmp
imul
jns
insb
outsl
adc
xorb
clc
push
mov
adc
loope
and
jge
imul
in
mov
jmp
xor
lahf
sub
jnp
loop
inc
popf
imul
ja
and
xchg
in
jb
subl
xor
sbb
arpl
outsl
push
add
xchg
add
xchg
mov
mov
and
imul
or
movsb
mov
sbb
in
insl
adc
mov
push
repnz
jmp
and
in
pop
sbbl
adc
in
outsb
pop
adc
xchg
aam
aam
rcll
mov
or
outsb
daa
jae
jmp
cmp
cmc
mov
xor
sti
and
pop
in
inc
rcr
jo
andl
push
fdivs
clc
test
call
cltd
push
pop
jne
movsl
dec
mov
mov
push
mov
ja
loop
in
data16
dec
mov
in
stos
outsl
sbbl
jnp
mov
xor
popf
ljmp
mov
fimuls
add
pop
inc
add
add
sub
fsubrs
clc
outsl
and
mov
ficomps
jge
jbe
adc
mov
mov
push
mov
fwait
sbb
dec
je
inc
lds
mov
mov
sub
mov
mov
pop
lcall
pop
xor
lods
popa
rorb
push
xor
and
mov
ds
aam
icebp
fidivrs
mov
pop
mov
lret
jno
inc
lret
and
ficomps
ljmp
or
mov
popf
scas
dec
aaa
in
mov
jns
subb
add
adc
mov
fsubrl
xchg
push
in
lods
adc
aam
jno
std
fsts
stc
and
scas
stos
das
pop
mov
cli
mov
xchg
ficompl
push
cmp
jmp
fnstenv
xchg
fcompl
clc
mov
movsl
aam
idiv
xorb
and
int3
push
divl
movsl
idivb
stos
mov
bound
adc
cld
popf
je
xchg
lods
mov
inc
adc
scas
fcompl
xor
divb
jb
ret
adc
sarb
push
and
inc
ds
adc
add
or
outsl
xor
and
aaa
insl
outsb
stos
andl
jp
call
sbb
mov
aam
insl
sub
xchg
jp
sub
mov
cmpsl
push
insl
test
sbb
push
movl
rclb
sub
lcall
jmp
cmpsb
in
test
ja
shrb
xchg
addr16
push
inc
test
cwtl
pop
xor
icebp
inc
inc
cmp
repnz
push
xchg
inc
dec
adcb
repnz
test
jl
arpl
mov
ret
push
out
push
mov
test
add
adc
js
push
movsb
push
add
cld
jbe
mov
jae
push
xor
icebp
mov
and
shll
out
arpl
nop
or
repnz
sar
xor
popf
dec
insl
pop
cld
jb
je
movsb
inc
xchg
or
imul
movaps
push
push
dec
jo
jnp
add
xorl
bnd
mov
push
jne
add
xchg
movsl
out
imul
add
iret
sti
mov
mov
sub
adc
in
dec
lcall
jbe
and
in
repnz
xchg
out
sti
imul
adc
stos
jg
dec
jmp
mov
pop
sub
jp
mov
mov
jp
push
clc
jg
xor
xchg
and
lret
xor
test
fists
jns
and
add
fistps
dec
pop
ds
jbe
rcll
sub
and
cwtl
aad
mov
add
or
shlb
iret
jne
fildl
fsubrs
sti
in
shlb
popa
mov
pop
lods
fcomi
mov
jb
movsb
sti
xor
ret
cmp
pushl
xchg
lcall
outsb
mov
ds
mov
jbe
inc
mov
sbb
push
scas
mov
xchg
fisttpll
lea
mov
cld
xchg
dec
in
mov
adc
insl
sbb
repz
jno
subl
je
xchg
jno
xor
adc
ss
pop
or
and
dec
and
jbe
mov
adc
add
push
int3
in
repnz
repz
push
and
or
or
insb
stos
adc
add
push
jmp
inc
sbb
es
mov
or
mov
add
iret
sbb
mov
sahf
cmpsl
movsb
jb
jle
xchg
mov
aaa
inc
movsb
clc
mov
icebp
dec
jg
mov
push
jo
stos
jb
stos
bound
dec
jge
repnz
enter
lds
jg
push
lds
rol
sub
orb
insb
aam
cmp
ss
gs
mov
inc
adc
mov
adc
cmp
mov
xor
int3
mov
xchg
mov
loope
dec
leave
and
adc
sub
mov
push
test
fsubrl
data16
iret
stos
pop
jecxz
mov
xor
in
mov
sbb
mov
mov
cmpb
sbb
das
mov
add
jns
mov
sbb
jb
les
je
inc
jno
leave
lret
pop
inc
inc
les
mov
loope
sbb
xor
pushf
push
pop
add
iret
les
cmp
jmp
sub
fmuls
and
pop
and
sbb
sub
sbb
orl
xor
cmp
push
add
cmc
jae
inc
sub
xchg
xchg
push
stc
inc
inc
push
mov
mov
stos
mov
sub
lods
mov
push
loop
xor
pop
pushf
add
xlat
sbb
mov
mov
cmc
stos
dec
and
arpl
mov
and
jecxz
jb
sub
mov
or
adc
je
and
sbb
in
xor
stos
je
mov
jns
lcall
cwtl
mov
xorb
jb
dec
xor
rorb
lret
and
cld
pop
leave
imul
movsb
xor
dec
shl
bnd
roll
mov
add
mov
mov
jmp
xor
je
std
retw
cmp
mov
xor
popa
insb
je
sub
dec
imul
and
mov
es
mov
pop
inc
and
mov
fcoml
inc
loop
out
pusha
jge
cwtl
jae
inc
inc
sbb
jge
ss
mov
sarb
mov
push
inc
cli
mov
mov
dec
arpl
std
add
sbb
dec
xor
sub
sub
fwait
and
mov
mov
fsub
xor
pop
and
enter
imul
enter
mov
add
mov
test
fstpl
test
ljmp
movsb
scas
adc
imul
push
mov
iret
aam
pop
stos
xor
rol
push
jb
neg
jae
int3
ficomps
sarb
mov
mov
mov
les
aam
adc
lcall
cmc
mov
pop
movsl
xor
dec
xor
pop
push
pushf
xchg
out
mov
push
jns
inc
scas
pop
sub
adc
stc
push
loop
into
mov
outsb
sti
mov
mov
mov
test
sub
cwtl
inc
cmp
add
test
xchg
stos
imulb
in
xchg
and
mov
lods
and
xchg
jb
push
lods
sbb
stos
int
jge
test
sub
ficompl
jecxz
xchg
cwtl
pop
mov
xchg
xor
sbb
shlb
sbb
dec
rcll
push
xchg
lcall
inc
les
inc
ret
xchg
mov
fcmove
movsl
in
in
cli
jae
jnp
scas
cli
clc
icebp
cmp
xor
std
pop
scas
xchg
ds
aad
fmull
mov
aad
jb
scas
mov
es
cld
fwait
je
test
in
je
iret
jnp
mov
adc
xchg
pop
xchg
addr16
mov
mov
je
lret
xor
aam
lds
cltd
mov
sub
and
cmpsb
and
stc
clc
test
test
shl
sbb
mov
jne
sbb
add
push
repz
jge
mov
ret
stc
mov
adc
hlt
shll
fbstp
aas
adcb
fidivs
aam
cmp
movsb
movsl
fsubs
aaa
pop
iret
jp
xor
pusha
test
repnz
ret
or
cmc
fiaddl
xor
aaa
fisubrs
repnz
cmp
orl
xor
push
cmp
xor
push
mulb
jae
jmp
lods
stos
and
mov
pop
dec
or
xchg
orl
bound
xor
or
mov
mov
sub
addr16
cli
in
es
xor
cwtl
enter
imulb
jo
add
or
mov
jo
jge
adc
pushf
adc
xchg
and
cld
adc
das
bound
sbb
mov
or
out
lcall
ret
add
int
sbb
cli
push
jbe
rcr
push
imul
lahf
add
push
or
add
outsl
shlb
jne
or
sbbb
imul
cli
inc
mov
pushl
jae
fisubrs
mov
fcmovne
add
lods
insl
xchg
and
xchg
lahf
je
xor
lea
cmpb
std
dec
nop
je
push
jp
test
stos
sbb
mov
push
push
in
outsl
and
pusha
lcall
and
mov
pop
scas
outsb
pop
mov
daa
mov
bound
hlt
or
imul
fcompl
cmp
adc
adcl
push
mov
mov
xor
mov
mov
push
cmp
sub
cmpsb
movsb
pop
dec
push
adc
push
mov
hlt
push
sub
mov
mov
repz
jnp
push
sub
ja
ja
mov
mov
cmp
adc
pop
in
xchg
mov
sbb
je
call
movsl
adc
scas
movsb
fisubl
fsubl
sbbl
mov
sbb
sahf
faddl
mov
xchg
gs
and
shlb
push
mov
mov
sbb
ljmp
pusha
and
jecxz
sub
fs
faddl
xor
mov
cmc
mov
out
scas
xchg
mov
lods
addr16
adc
fwait
leave
shrb
xor
insl
or
sub
dec
dec
iret
xor
mov
sub
jne
jge
mov
notb
jp
bound
cmp
mov
add
add
xor
sbb
and
cmp
mov
push
fidivrl
std
cmpsl
out
mov
xchg
out
jne
jmp
addb
or
add
popf
loope
sub
mov
std
inc
bound
outsb
mov
mov
jp
add
pop
pop
pushf
notb
push
mov
aad
imul
cs
stc
xor
test
add
repnz
or
pop
movntq
jp
gs
inc
push
lret
loop
stos
pop
pusha
je
cli
dec
outsl
fsubrs
dec
push
cld
movsl
lcall
mov
int
cs
mov
adc
xor
adc
xorl
mov
sub
fmuls
mov
xor
pop
aaa
repz
jo
cli
hlt
sub
mov
roll
cmp
push
filds
scas
fsubl
and
popf
mov
stos
xor
lea
scas
pop
mov
inc
aam
inc
push
push
je
cwtl
stc
pop
outsl
and
jbe
loop
mov
add
ret
jb
sub
sbb
jne
fwait
xor
call
pop
dec
adc
cs
sbb
shlb
sub
push
loope
sbb
pop
sub
add
in
push
mov
add
fidivrl
outsb
outsl
pop
pop
push
sbb
call
mov
mov
adc
adc
aaa
fimuls
pop
das
and
pop
clc
subl
and
push
sar
jnp
out
mov
sub
in
leave
test
shl
and
ret
iret
sub
sub
mov
and
int
ss
repnz
loope
loop
inc
sbb
mov
mov
mov
outsl
lods
xor
lds
mov
iret
gs
jnp
sub
das
stos
outsl
out
fdivs
mov
jp
pop
adc
repnz
xchg
xor
and
and
pop
fidivrl
daa
xchg
mov
and
jg
cmpsb
in
enter
mov
sub
sub
idivl
or
fildll
push
jmp
sbb
je
sub
push
mov
xor
xlat
adc
gs
clc
xor
sub
mov
mov
imul
dec
pop
inc
repz
push
clc
ret
stc
push
fsubr
or
mov
or
test
fwait
mov
inc
lock
je
adc
pop
stc
stc
pop
jbe
in
jae
js
loop
scas
xor
adc
inc
std
pop
sbb
and
jne
dec
test
jb
int3
inc
repnz
jne
fwait
mov
repnz
push
repz
jae
mov
ror
mov
shll
shl
inc
add
into
mov
sub
cmp
mov
into
xor
icebp
popf
outsl
mov
sub
push
das
pop
mov
adc
movsb
mov
sbb
js
xchg
ja
mov
addr16
inc
nop
fsubr
mov
sub
jne
sahf
insb
mov
and
arpl
clc
or
insb
clc
mov
nop
xchg
jmp
xor
inc
nop
lock
mov
add
popf
adcl
aad
cs
lock
xor
cmp
mov
mov
sbb
cmp
dec
push
xor
jns
xorl
mov
jb
rclb
subl
mov
stos
popa
iret
div
push
adc
adcb
mov
mov
sub
mov
and
iret
mov
add
add
jbe
icebp
ss
xor
jp
imul
shrb
or
pop
mov
pop
add
inc
hlt
jge
push
inc
repnz
adc
clc
jns
or
popf
or
or
jmp
stc
cli
repz
adc
clc
shrb
gs
test
gs
das
divl
rcrb
mov
pop
mov
out
repz
mov
mov
sbb
notb
mov
call
cmc
lods
jo
mov
imul
test
into
lods
mov
mov
popf
xor
jge
lahf
xchg
xor
sarb
mov
rclb
outsb
jb
mov
fimuls
push
add
subl
es
repnz
add
xor
je
sbb
xor
mov
scas
sbbb
cmp
push
ds
mov
cmc
push
mov
dec
in
xor
mov
xor
cmp
popa
lret
pusha
xchg
adc
pop
test
mov
adc
loope
dec
lods
iret
jno
bound
daa
xchg
push
ljmp
or
xchg
je
xor
vp4dpwssds
inc
jge,pn
fisubrl
adc
test
shrb
xor
add
inc
jge,pn
inc
sbb
mov
jnp
and
xor
jae
ret
fwait
cs
mov
sarb
xor
leave
xorb
lock
jge
adc
fwait
cs
stos
das
sar
sbb
mov
and
testl
cmp
xor
mov
gs
repz
rorb
and
div
in
pusha
xchg
repz
pop
cmpsl
add
pop
xor
sbb
or
notl
xchg
xor
fstl
mov
sbb
insb
sub
push
bound
test
sub
push
xchg
test
fs
pop
mov
xchg
and
sub
and
pop
jmp
ljmp
ret
fldcw
cmp
sub
jg
bound
stos
rcrb
addr16
mov
dec
mov
imul
inc
push
jbe
repz
sub
insb
stos
int
lock
xchg
push
icebp
or
shlb
add
rep
test
and
bound
inc
mov
push
jp
mov
push
rcl
hlt
pop
pop
sub
and
rclb
scas
jb
xor
repz
adc
arpl
in
adc
and
leave
inc
scas
mov
aad
jle
scas
xor
sbb
das
or
mov
pop
xor
test
mov
subb
push
and
mov
dec
clc
xchg
mov
add
mov
subb
inc
xchg
add
push
mov
mov
ret
sbb
or
xor
xchg
xor
mov
shll
mov
adc
call
aad
fcoms
jo
mov
pop
adc
cmp
lods
or
fmull
sbb
sahf
jnp
mov
xor
and
xchg
mov
pop
cmpsb
mov
cs
js
cmpsb
mov
add
cmp
jns
cmc
out
jo
ss
jmp
pop
iret
ljmp
enter
insb
mov
mov
test
imul
jns
lods
jb
jns
jg
push
stc
loope
lock
add
mov
int
lea
lds
mov
iret
inc
outsl
dec
cmp
pushf
add
arpl
inc
sbb
lcall
lea
sub
mov
add
or
and
mulb
popa
adc
xor
lods
inc
shrl
iret
repz
mov
add
pop
pop
sub
repnz
lahf
ret
adc
jbe
ret
icebp
jb
sub
jb
push
jb
arpl
sub
xor
shlb
xor
es
in
ret
insl
inc
xor
or
dec
adc
inc
arpl
cmp
sbb
ret
insl
lret
lods
cmc
loope
out
jle
sbb
clc
push
mov
popa
cld
sti
div
scas
iret
ret
xor
inc
push
mov
ss
lods
cmpl
mov
or
das
pusha
mov
pop
jno
shrl
jge
pop
push
movzwl
das
dec
mov
mov
ret
insb
cmp
int
leave
lret
sub
out
mov
outsl
cmp
jl
xchg
xchg
hlt
mov
call
scas
in
jns
push
sub
out
mov
in
insl
pop
cmp
les
iret
adc
lods
sub
push
sbbb
insl
or
aas
dec
dec
shll
inc
icebp
mov
aas
jge
jb
xchg
mov
adc
imul
lock
mov
shlb
loop
lds
xchg
jge
mov
pop
js
das
aad
xor
jbe
ret
scas
adc
gs
stos
addr16
divb
lods
pop
mov
ret
scas
out
cmp
sarl
sub
jle
adc
mov
popa
cmp
sub
addr16
cmpsb
insl
daa
fsubrs
test
test
or
jbe
mov
push
out
jmp
fdiv
and
and
jbe
dec
mov
pop
lahf
test
mov
adc
ret
lock
popf
enter
jno
enter
push
inc
sbb
pusha
inc
jno
sbb
adc
mov
addr16
push
pop
add
aas
xlat
push
push
and
sub
xor
adc
jle
push
xorb
int
pop
aaa
in
ss
lods
mov
out
repz
add
lock
mov
lea
and
jecxz
in
mov
stc
push
mov
and
scas
mov
jnp
pop
xor
mov
push
out
add
scas
shll
out
mov
mov
lock
mov
xor
pop
andps
add
in
inc
mov
in
xchg
push
pop
mov
test
or
enter
mov
cmc
jbe
rorb
sbb
cmc
lods
push
jb
hlt
fsubrs
inc
cld
dec
scas
inc
popa
mov
inc
cld
adc
add
loopne
adc
inc
dec
les
fldt
jae
jmp
dec
jp
addr16
push
mov
dec
mov
pop
outsb
xchg
or
fisubrl
push
xorl
add
aaa
pop
mov
cs
mov
ret
mov
add
dec
popa
jb
hlt
push
or
dec
into
mov
cmpsb
cmp
sahf
out
xor
insb
sub
aad
into
hlt
sub
mov
sub
out
imul
sub
movsb
fldl
cmp
cmp
aad
push
shlb
hlt
cmp
sub
and
jp
mov
iret
inc
mov
out
xor
inc
mov
les
xchg
mov
dec
or
xchg
adc
into
mov
pop
sub
mov
xor
adc
dec
jno
into
pop
or
shr
sub
push
mov
push
popa
insl
xor
fcom
sub
outsb
ret
pop
jns
popf
scas
ret
add
sbb
push
mov
mov
inc
jle
mov
push
dec
test
cmp
push
adc
rcll
insl
xor
cmc
jecxz
aam
ret
sbb
stos
test
insl
mov
jle
adc
repnz
inc
mov
mov
mov
and
and
inc
jecxz
cmp
adc
xor
cmpsl
cmp
lock
test
inc
mov
dec
ret
add
adc
popa
mov
jnp
shrb
sti
jns
mov
cmp
leave
inc
stos
insl
dec
lods
or
add
lock
repz
sbb
sub
or
sbbl
loopne
mov
out
pop
or
push
cmp
pop
push
jle
and
lock
cmc
pop
mov
mov
mov
jno
xor
in
shl
cmp
aad
mov
and
stos
sarb
mov
jp
mov
mov
mov
mov
mov
insb
push
icebp
call
adc
push
mov
sub
mov
scas
sub
push
pop
xchg
sub
cmpsl
cmp
adc
imul
cmpl
inc
push
dec
out
add
std
push
mov
les
mov
push
jb
push
push
jmp
lods
pop
fistps
bnd
rolb
xorl
sub
mov
sub
fisubrs
jbe
pushf
std
adc
fimuls
jg
int
jns
mov
mov
adc
mov
xor
enter
in
push
mov
xchg
sahf
jge
lahf
call
add
addr16
mov
or
jle
stos
and
lods
test
mov
inc
dec
mov
sbb
sub
sbb
sti
hlt
mov
sub
repz
xchg
xorl
sti
hlt
mov
ss
aad
mov
add
xchg
pop
stos
mov
mov
out
sub
lods
cs
pop
xchg
xchg
mov
jle
jno
push
push
lock
cmp
xchg
es
in
sub
in
push
and
dec
imul
ja
cs
sbb
push
aaa
jb
mov
mov
ljmp
xor
cs
push
sub
push
add
les
dec
insb
js
insl
fmuls
dec
jo
jno
xor
push
cmc
or
push
mov
stos
lahf
jne
lds
xor
movsl
push
and
iret
adc
in
jle
mov
mov
mov
adc
ja
fdivrl
sub
lcall
ret
movsl
sarl
pop
std
icebp
jecxz
add
jb
test
inc
das
push
mov
mov
fsubrl
inc
rclb
out
xor
xor
sub
cmp
pop
ret
scas
xor
push
push
cwtl
jnp
hlt
sahf
and
ret
lahf
pop
sbb
les
mov
ret
xchg
ds
repnz
pop
loopne
push
div
ds
cltd
gs
push
repz
and
mov
dec
xchg
push
push
sbb
repz
mov
push
gs
dec
jmp
push
test
dec
adc
and
fidivrs
mov
jmp
fidivl
jp
bound
cmpsb
push
orl
out
mov
dec
xor
add
mov
and
cmp
int
jns
push
pushf
xor
mov
addr16
cmp
fwait
test
sub
iret
or
mov
aam
dec
xchg
mov
pushf
ret
sbb
push
xor
js
and
addr16
or
ljmp
push
lock
movsl
stos
mov
sub
sbb
sub
mov
pop
popf
lods
add
mov
mov
arpl
push
xor
jecxz
add
jno
std
arpl
cmc
imul
call
leave
fstl
push
sbbl
ds
ret
sbbl
adc
movsb
pop
mov
inc
sbb
and
lcall
lret
enter
dec
aad
movsl
mov
into
aam
pop
fists
mov
out
cmpsb
sub
les
xor
data16
fidivrs
jecxz
imul
hlt
sub
insl
aad
cs
push
sub
cmp
sub
pop
outsb
fcmovu
shrb
adc
mov
out
test
add
mov
mov
push
stos
mov
sub
lret
pop
ret
jg
js
lea
nopl
mov
fsubl
sti
pop
fdivrs
mov
and
sub
push
testl
xor
daa
or
add
out
dec
jmp
push
push
push
and
fmulp
adc
jecxz
bound
and
stos
ds
sub
mov
cmp
pop
lods
add
jnp
dec
ss
mov
adc
and
sub
push
fs
pop
lcall
ret
lahf
int
pusha
xchg
clc
orb
jbe
push
je
out
inc
cmp
or
stc
sbb
js,pn
xor
push
jmp
notl
popa
jb
or
outsl
sub
jbe
xchg
enter
ficompl
and
add
xor
sub
rol
sbb
jo
jo
insl
and
pop
dec
push
dec
shll
push
addr16
clc
in
pop
adc
push
insl
mov
dec
inc
mov
es
cmp
mov
imul
jle
ret
mov
xchg
popa
fmul
pushl
lret
mov
sbb
dec
fs
adc
jno
popf
inc
or
jns
popa
mov
or
pshufw
sbb
mov
cmp
push
lret
aaa
fwait
mov
iret
dec
mov
cmpl
cmpl
cmp
pop
mov
ret
jb
shrl
push
jg
rcll
ret
pop
inc
push
adc
mov
adc
imul
mov
rclb
stos
rcll
add
mov
outsb
orl
push
push
pop
mov
pop
xchg
xor
mov
mov
inc
cmp
xchg
jp
sub
andb
outsl
mov
fcmovne
mov
mov
jno
das
scas
pop
lock
shl
neg
in
imul
jmp
je
lock
mov
pop
fisubrs
loope
fsubrl
divb
pusha
push
jg
mov
mov
cltd
out
lea
xchg
das
mov
roll
imul
mov
mov
and
mov
lea
jb
fcomip
es
mov
jecxz
xchg
mov
nop
jne
ds
clc
adc
cmp
out
xchg
call
ja
mov
jmp
ret
mov
sub
push
rol
lret
lea
lcall
insl
pxor
dec
mov
insl
pop
bound
cmp
sbb
mov
adc
jl
xchg
add
clc
push
in
pop
mov
dec
sbb
mov
cs
test
sbb
xor
xor
cmp
adc
scas
inc
inc
sbb
xor
enter
mov
jl
das
sahf
or
rorb
or
lea
mov
popf
dec
fxch
jae
out
cs
mov
jl
outsb
add
ror
mov
cmp
and
xor
divb
pop
push
js
xor
cmc
xor
icebp
imul
into
imul
or
fdivrp
adc
inc
dec
cwtl
mov
and
mov
and
mov
fisubrl
pop
cwtl
movsl
cmpsb
psubb
fcmovb
xor
xlat
aam
fldenv
sub
sbb
enter
neg
sub
adc
fdivl
sahf
cmp
mov
std
push
and
mov
daa
pop
ljmp
jge
adc
clc
mov
out
int
pop
pop
pop
and
icebp
stc
push
fdivs
fidivrl
fcmovb
lret
and
lea
insb
pop
ljmp
adcl
inc
sub
push
dec
pop
rcrl
inc
enter
fnstenv
das
mov
or
out
adc
dec
push
call
push
pushf
and
mov
mov
outsl
or
stos
xchg
stos
loop
push
mov
dec
je
fsubrs
dec
arpl
sub
xchg
stos
pop
imul
or
xchg
pop
cld
and
dec
mov
pop
data16
in
mov
sbb
sbbb
mov
jmp
into
stos
mov
mov
pushf
outsb
cltd
lods
mov
mov
mov
jg
bound
outsl
xchg
daa
or
push
push
int
and
push
test
loope
mov
jecxz
push
sbb
and
push
mull
cli
sub
push
pop
dec
cmp
inc
mov
out
xchg
pop
push
imul
adc
xchg
mov
xor
pusha
xlat
andl
jbe
leave
pop
jmp
fildl
pop
push
mov
jbe
xor
adc
std
mov
sub
bound
cmp
sub
cmp
stos
stos
sub
dec
jp
ljmp
mov
fldt
pop
jmp
jecxz
jae
insl
mov
sub
lea
push
mov
popf
loopne
pop
jo
jmp
cmc
test
sbb
xor
repz
leave
xlat
dec
in
out
sbbl
loop
ror
or
dec
sbb
cmp
add
mov
dec
js
jo
gs
cmp
test
fsubrl
shlb
pop
ret
mov
xor
loop
sub
hlt
or
sub
mov
inc
out
imul
dec
fsubrl
sahf
pop
imul
push
cmp
in
cmp
cld
xchg
lock
leavew
push
cmp
pop
push
fwait
imul
cmp
xor
mov
push
imul
lods
push
mov
jmp
sub
adc
test
cmp
jl
jbe
in
stc
mov
bound
mov
xchg
push
ret
ljmp
mov
push
out
jge
inc
je
pop
pop
divb
inc
mov
and
cmc
cli
sub
add
push
clc
rcll
mov
push
js
lret
push
cmp
mov
ljmp
aam
imul
sub
cli
fwait
inc
les
xchg
cmpsl
push
mov
push
aaa
jb
sbb
stc
mov
ffreep
incb
mov
icebp
popa
push
dec
and
sbb
mov
xor
push
lods
and
and
sub
push
int3
shr
ret
scas
ljmp
lods
outsb
pop
leave
mov
xchg
sbb
stc
ds
xchg
mov
adc
add
xor
mov
gs
push
rcll
sub
int3
repz
pop
mov
or
sub
sbb
and
mov
push
inc
inc
mov
push
xchg
xor
cmp
xchg
dec
jno
mov
xorb
pop
js
movsb
scas
cld
data16
mov
cmpsb
dec
imul
push
lahf
inc
pop
inc
pop
dec
jbe
stos
xchg
and
sub
jns
jbe
cwtl
dec
ret
mov
mov
or
add
rcrl
pop
mov
jb
xor
repz
div
pop
movntps
adc
imul
and
hlt
ret
jbe
fldcw
mov
cmp
ret
inc
dec
gs
movsl
pushf
or
hlt
mov
cmp
mov
lds
addl
popa
sub
lods
stos
or
lcall
incb
es
imul
lods
bound
mov
inc
push
jns
pop
adc
mov
es
jmp
inc
sub
addr16
mov
sub
jns
sub
mov
push
xchg
mov
mov
inc
outsl
cmpl
add
ja
negb
pushf
pop
xchg
inc
inc
cmpsb
arpl
jo
jbe
sbb
adc
jmp
addr16
nop
in
dec
das
adc
fisubs
dec
lcall
mov
in
jle
mov
adc
sbbb
push
adc
inc
mov
add
dec
scas
dec
cli
jge
jge
leave
mov
scas
xor
outsl
add
repz
ja
xchg
addb
xchg
mov
cmpsb
mov
decl
sub
jle
mov
loope
faddl
lods
test
mov
adc
jbe
loopne
lock
inc
js
psrld
xor
xchg
loopne
fucomip
test
arpl
mov
aam
ds
sub
mov
dec
stos
cmp
inc
ljmp
lods
dec
lret
into
repz
jg
dec
pop
js
xlat
lock
cmp
sbb
repz
mov
out
out
hlt
cmp
int
loopne
popa
fcomps
cmpb
mov
sbb
push
push
mov
mov
test
dec
mov
and
mov
fistps
shr
aaa
scas
jne
lea
mov
mov
cmpsb
dec
daa
mov
hlt
lods
cmp
dec
clc
aad
iret
sbbb
mov
lods
xor
pop
mov
imul
adc
push
ss
icebp
imul
pushf
cmp
int
push
mov
aad
pop
or
stos
inc
jb
hlt
orl
pop
push
jbe
lcall
mov
dec
cltd
jl
out
imul
out
aam
ret
mull
aaa
outsb
mov
jmp
mov
pop
add
and
sbb
lcall
pop
stos
pop
out
movsl
dec
dec
stos
push
test
inc
lcall
mov
jbe
dec
cmp
dec
lock
icebp
dec
mov
outsb
dec
push
insb
shlb
xor
out
add
pop
xor
and
repnz
ja
gs
mov
js
add
xchg
sub
jl
inc
xchg
shl
scas
jbe
pop
mov
test
push
mov
out
add
mov
push
pop
adc
push
shrb
mov
mov
loope
xor
push
insl
jnp
lods
test
in
jne
mov
mov
sub
test
fsubs
outsb
add
inc
dec
add
mov
jle
add
dec
add
inc
push
xor
pop
scas
mov
push
adc
add
arpl
xor
jge
insl
rolb
repnz
sub
and
loopne
js
repnz
loop
inc
adc
clc
testb
jecxz
fnstcw
in
lods
aad
ret
loopne
outsb
mov
das
shrl
repz
sub
sti
cs
pushf
pop
sub
lahf
mov
push
mov
xor
jg
push
dec
cmp
notb
sub
cld
push
test
inc
pop
jno
dec
clc
mov
xor
and
and
aam
mov
jo
icebp
mov
xor
cmp
jge
pushf
adc
xor
test
push
mov
cmp
enter
mov
mov
aaa
mov
dec
mov
xchg
mov
xlat
lahf
jne
ret
lcall
dec
test
or
jecxz
cltd
sub
sub
leave
cmc
sbb
mov
shrd
out
fldt
inc
or
push
mov
lcall
aaa
inc
mov
mov
ret
dec
and
test
sub
mov
out
fcomps
ret
sub
outsb
and
outsl
or
push
xchg
dec
xor
out
dec
outsl
clc
xor
push
dec
repnz
push
cmp
pusha
adc
push
ret
fisubs
enter
sub
push
in
call
lods
popf
sub
into
addr16
mov
push
mov
pop
imulb
lods
call
push
js
or
or
mov
nop
movsb
and
jge
sarl
jl
aaa
push
lea
scas
xor
mov
jmp
push
into
pop
flds
jno
test
pop
jno
call
fdivrs
rclb
popa
and
jnp,pn
and
push
lret
das
outsb
outsl
in
mov
mov
ja
enter
dec
mov
fists
push
mov
call
leave
das
add
dec
sbb
ja
or
lods
sbb
mov
imul
rolb
ret
pop
add
ljmp
xchg
cld
loope
xor
mov
adcl
mov
or
daa
or
sub
mov
xchg
ret
push
dec
dec
xchg
xor
stos
pop
mov
xchg
sbb
jbe
cld
mov
jecxz
sub
stc
scas
xchg
jbe
cld
mov
mov
or
scas
sar
lret
sbb
xchg
popf
adc
sub
mov
je
int
jecxz
mov
je
outsb
mov
mov
and
push
shrl
xlat
fildll
pop
or
xchg
loopne
outsb
fwait
imul
ret
rcrb
lock
push
fcomps
and
mov
std
xor
jecxz
mov
or
xorb
rorl
cmpsl
loop
shll
shlb
sti
dec
stc
push
loop
lods
lret
jmp
js
mov
test
mov
mov
shrb
insl
push
jnp
fsubr
cmc
mov
sbb
ljmp
inc
into
jae
sarb
cmp
mov
xchg
aad
xor
mov
jno
leave
iret
mov
xor
repnz
mov
pop
fnstenv
mov
andl
roll
xchg
sbb
scas
or
lret
and
dec
in
mov
and
add
xchg
mov
mov
pushf
mov
or
out
cli
mov
jge
mov
pop
xchg
dec
in
and
pop
jno
cltd
push
xchg
xor
xchg
inc
imul
jle
mov
jae
mov
mov
jne
icebp
and
mov
or
mov
xor
dec
dec
rep
ficompl
sbbb
mov
icebp
popf
js
insl
ds
lret
lahf
je
fs
mov
mov
pop
and
jge
rcrl
shrb
or
and
repz
adc
std
repnz
aas
outsb
dec
lcall
xor
xchg
sbb
jmp
repnz
push
adc
lods
jo
mov
test
neg
xor
pop
sbb
pop
cmp
lcall
aaa
iret
mov
repz
xlat
pop
pop
mov
loop
int
sub
cmc
sbb
jle
push
push
int
jle
jle
mov
pop
outsl
imul
mov
inc
dec
sub
mov
pop
loope
fsubrs
jmp
fistpl
leave
and
sbb
mov
test
and
andb
jne
jno
iret
dec
mov
insl
je
or
ret
lcall
movsb
lods
fbstp
jno
inc
in
jnp
lds
jae
hlt
push
cmpsb
in
adc
ja
in
dec
inc
mov
ficompl
jbe
movsl
aad
pop
ja
cld
or
in
ret
test
pushf
pop
mov
in
jno
bound
mov
ja
cmpsl
pop
jb
sub
loop
dec
and
mov
icebp
repz
mov
outsl
and
insb
outsb
dec
scas
mov
arpl
scas
mov
out
and
insb
mov
insb
in
dec
sub
ds
and
sbb
mov
ficoms
addr16
inc
xor
and
hlt
jnp
xorb
push
nop
sub
adc
inc
mov
add
dec
inc
pop
adc
xlat
or
testb
popa
mov
push
cmpsl
out
repz
arpl
mov
pop
out
xchg
push
cmpb
sub
mov
add
inc
insl
xchg
push
test
orb
inc
or
lods
divb
mov
loope
push
sub
lret
mov
pop
inc
int3
imul
rolb
mov
movsb
gs
pop
sbb
jo
sub
push
mov
lahf
sbb
fsubr
lods
test
lds
jno
inc
call
out
xor
sub
scas
lahf
push
out
das
mov
adc
xor
js
jae
sahf
jg
js
cmp
sub
cmp
mov
pop
mov
pop
jns
mov
out
js
out
push
push
lea
ljmp
mov
cmp
xchg
fs
aad
mov
mov
push
pop
fdivs
inc
or
xor
or
insl
sub
mov
dec
sub
pop
fisubrs
in
add
cmp
dec
jns
jbe
repnz
mov
cmp
and
jno
jne
sbb
mov
cs
shll
cmp
ffreep
insl
inc
dec
xor
mov
ret
or
sub
lahf
cmp
roll
dec
sub
rcrl
fisttpl
lea
sbb
aad
lds
cmp
lds
mov
cs
cmp
test
dec
jo
mov
fs
test
mov
cwtl
xchg
decb
sbbb
imul
mov
sbb
sub
mov
mov
add
sti
cmp
scas
inc
pop
jne
fiadds
ficoml
test
and
insb
cs
add
mov
shll
hlt
jmp
in
mov
push
dec
in
je
adc
mov
stos
dec
addr16
stos
aam
sbb
sub
rol
mov
iret
jle
dec
or
int
cs
das
daa
imulb
movsb
or
mov
int
push
in
cmpsl
dec
pop
mov
xchg
je
xor
mulb
es
sti
int3
out
cld
mov
pop
notb
and
dec
insl
std
mov
imul
push
and
clc
loop
js
ljmp
ja
mov
add
fidivl
adc
sbb
xor
ret
fcom
popa
inc
mov
aas
sbb
inc
out
sahf
pop
in
and
push
jle
cmpsb
pusha
dec
pop
aam
push
jecxz
pop
inc
mov
cmpsb
fdivp
imul
movsb
cmpb
xor
and
mov
mov
test
std
mov
mov
xor
xchg
adc
repz
xchg
push
sarl
sub
xchg
add
int
push
pop
insb
jecxz
add
je
lods
adc
jb
dec
mov
push
jno
mov
push
ja
js
mov
jae
sbb
pop
andl
adc
sbb
push
mov
mov
sub
bound
cmpb
sbb
cmp
jmp
sub
push
cltd
outsl
cmp
jo
cwtl
outsb
rcrl
mov
data16
repnz
xor
dec
cld
lret
popa
repz
fcmovnbe
cmc
and
insl
push
test
mov
nop
fcomip
mov
les
push
pop
or
sub
fdivr
adc
xchg
shll
or
sub
cmpb
lcall
add
imulb
mov
xor
and
sahf
jle
ljmp
cwtl
sbb
scas
imul
jb
mov
std
sub
lock
pop
adc
cmp
repz
fcompl
rolb
add
scas
jp
dec
push
dec
clc
dec
jmp
loop
popa
movsl
sub
mov
out
xorl
pop
mov
sub
mov
pop
jbe
pop
fldl
pop
sbbl
sub
lahf
inc
movsl
lock
push
call
inc
scas
clc
jle
dec
ss
clc
fs
sub
iret
mov
jmp
adc
scas
xor
icebp
outsb
or
iret
mov
scas
mov
scas
xor
and
and
shll
int
pushf
push
filds
cwtl
mov
push
adc
dec
and
lock
mov
mov
xor
cld
bound
and
call
inc
adc
leave
loop
popf
mov
push
xchg
mov
mov
and
gs
aaa
lcall
jmp
je
adc
lcall
inc
out
fadds
and
inc
mov
ss
dec
jbe
mov
divl
or
popf
repnz
add
jbe
out
pop
stos
stos
xor
fsubl
lods
std
mov
insb
sbb
or
xor
pop
mov
jge
fbstp
push
push
arpl
scas
mov
ret
cmp
mov
insb
and
push
ss
mov
adc
fwait
je
mov
push
sti
mov
cmc
into
js
sub
inc
sub
lret
jecxz
xchg
push
popa
mov
pop
and
repnz
iret
ret
add
es
mov
push
push
jo
mov
outsb
xchg
loopne
inc
sar
test
dec
sub
ret
xlat
push
mov
mov
lods
mov
stos
aam
mov
add
outsl
pop
test
xchg
jnp
addr16
mov
xor
cli
outsl
sub
je
sbb
dec
mulb
jg
je
mov
push
aaa
mov
popf
mov
mov
jbe
xor
test
insl
lods
hlt
jbe
inc
cmp
and
clc
cld
fisubl
clc
je
or
and
and
jno
push
leave
inc
bound
xor
out
insb
hlt
xchg
mov
push
add
mov
addr16
sub
pushf
push
xor
dec
ror
adcl
xor
jp
inc
or
adc
dec
outsl
scas
insb
xchg
sub
ret
add
arpl
jb
mov
stc
push
rcrl
mov
xchg
int
mov
popl
andb
cmpsl
loop
xor
mov
push
data16
rcrl
adc
sar
repnz
orb
xor
cltd
mov
add
sti
mov
loop
notb
dec
sub
sub
jbe
adc
mov
stc
add
fstl
aam
xorl
adc
and
jecxz
data16
in
mov
pop
sbb
test
push
hlt
mov
sbb
sub
in
repz
sub
add
adc
mov
fstl
bnd
mov
push
arpl
sbb
sarb
jbe
les
popa
jbe
adc
add
xchg
pop
out
sub
push
leave
repz
fstpl
orl
xchg
lock
outsb
mov
dec
mov
mov
test
and
cmpb
mov
repz
dec
outsl
or
mov
push
loop
fidivrl
adc
and
pop
hlt
mov
outsb
add
adc
jno
mov
lea
mov
insl
sub
add
sub
sbb
sub
jae
pop
sub
je
les
cmpsb
mov
out
add
scas
mov
in
faddl
push
in
mov
and
inc
sbb
cld
or
mov
sub
sub
add
xchg
ret
jge
inc
sti
imul
decb
outsb
je
repnz
xor
sbb
push
shlb
rorb
pop
push
int
out
jo
mov
push
les
sub
jo
fdivrp
xchg
jnp
xor
cmp
dec
mov
mov
and
rcll
sub
and
jne
movsl
and
clc
push
cli
loop
xorl
add
icebp
dec
jge
adc
lea
bound
int3
pop
movsb
popa
arpl
mov
adcl
adc
dec
movsb
loope
arpl
push
leave
mov
das
test
xchg
shr
mov
mov
mov
dec
in
cltd
xor
mov
xor
push
mov
xor
stos
icebp
inc
inc
xor
dec
ds
aas
mov
andl
jg
insb
shrl
jmp
xor
xor
adc
mov
mulb
fnsave
mov
div
aad
mov
mov
movsl
div
inc
mov
inc
scas
xor
stos
sub
hlt
add
xor
sbb
cmp
mov
and
dec
cs
sahf
inc
repnz
hlt
mov
add
hlt
mov
fsubrs
ret
pop
pushf
ret
notb
je
arpl
add
fcoml
je
xor
lret
xor
dec
mov
xor
pop
adc
add
xor
lds
push
xor
ret
popa
and
enter
xchg
out
sub
cmp
mov
cmc
cmc
lods
pop
pop
lock
inc
push
jno
cmc
jnp
arpl
and
or
xor
mov
lcall
psrlw
pop
sub
lods
jae
jp
dec
in
aam
mov
fwait
shlb
in
movsl
and
fdivp
mov
xchg
or
and
jl
xchg
int
jae
or
gs
xchg
and
les
xchg
dec
popa
arpl
mov
and
push
pushf
ja
inc
int
cmp
jmp
cmp
dec
push
das
js
xor
lods
mov
adc
rorb
or
inc
xor
ja
add
jno
aam
dec
ret
push
jge
shlb
cld
jge
push
test
scas
mov
jmp
fcoml
jne
xchg
ss
jne
mov
ud0
dec
jb
xor
xchg
and
xor
ja
jne
mov
fistl
inc
shlb
jne
xor
movsl
mov
and
les
pop
pop
test
dec
scas
push
in
test
je
pop
or
pop
push
mov
cmpsb
addr16
sarl
fidivs
push
sbb
bnd
push
and
btc
jle
aas
lds
mov
cmp
cltd
mov
jne
xchg
je
push
scas
stos
lret
mov
mov
and
sub
sti
mulb
mov
sbb
jno
mov
add
push
mov
xlat
xor
and
adc
push
loopne
andl
scas
adc
imul
add
fldt
or
push
and
cmp
adc
or
add
add
mov
jle
push
idivb
negl
xor
xchg
bnd
repz
push
mul
mov
adc
xor
imul
fdivr
xor
in
pop
aaa
inc
sub
adc
out
pop
push
sbb
dec
mov
push
adc
clc
sub
and
aad
mov
adc
int3
scas
fwait
add
and
mov
imul
or
ret
int3
xchg
xor
lret
or
mov
xchg
xor
cltd
clc
mov
ret
and
rcrb
aam
insb
mov
hlt
and
mov
cmc
xchg
mov
inc
dec
test
nop
and
cmpsl
inc
aaa
add
and
cld
bnd
ret
enter
pop
ss
je
jp
dec
sub
sub
ret
fbstp
push
pop
adc
daa
mov
xor
imul
popa
sti
xor
je
ret
popa
jne
jge
push
bound
arpl
inc
and
xor
xchg
xor
in
pop
movsb
pop
aad
gs
mov
xor
xor
xor
adc
in
cs
mov
test
mov
sbb
shll
mov
xorb
xchg
cld
clc
mov
in
pop
pop
adc
or
negb
jne
and
pop
int3
in
add
xchg
xor
mov
xor
xor
dec
push
sub
in
aad
xor
je
add
xor
adc
mov
xchg
push
or
xlat
ss
mov
jge
out
push
push
mov
out
imul
push
jae
cmp
divl
ds
ret
arpl
mov
into
fnsave
mov
and
and
jp
dec
xor
adc
xor
xor
sub
fmull
incb
lods
jl
out
and
mov
in
insl
inc
mov
imul
or
pop
xor
pop
and
and
add
lods
xor
mov
sbb
imul
btr
fsubrp
adc
jae
dec
mov
test
jb
lods
addl
out
xor
jne
or
jae
fs
adc
dec
mov
arpl
sbb
add
repz
or
or
repz
into
cld
xor
mov
xor
xor
adc
ret
mov
and
mov
and
repz
les
xor
push
xor
mov
and
bound
sbb
pop
lds
jle
add
xor
jbe
or
push
jmp
popa
std
xor
mov
and
sahf
xchg
es
fiadds
sub
insl
nop
xchg
repnz
add
xor
xor
mov
and
imul
stc
and
rclb
mov
popf
add
loopne
push
push
jne
sbb
jb
cltd
inc
dec
ss
jp
push
dec
sbb
fcmovnb
clc
shrl
pop
mov
xchg
jo
enter
mov
adc
push
mov
push
ja
repz
and
push
aam
cmp
insb
push
mov
repnz
int3
aam
ret
sub
notb
out
fsubl
xchg
jmp
cmp
cmp
dec
into
popa
mov
jno
sub
pop
sub
jmp
fsubs
out
fimuls
ja
sub
pop
mov
cmp
dec
arpl
icebp
and
jecxz
arpl
mov
es
mov
push
shlb
xor
daa
add
mov
and
stc
push
dec
jl
xchg
mov
gs
mov
sub
inc
aaa
jl
mov
cmpsl
call
and
and
inc
test
stc
das
cltd
pop
pop
hlt
clc
pop
addb
loope
sahf
adc
ja
and
int
into
ja
cmpsb
add
sub
subl
fidivrl
int3
xor
mov
mov
shlb
jge
sbb
stos
adc
jbe
add
pop
mov
outsl
mov
jecxz
fisttpl
outsl
adc
nop
lahf
pop
inc
dec
in
mov
xor
xor
cld
ljmp
int3
popa
dec
nop
gs
insl
xchg
out
fisubrl
dec
mov
or
jecxz
push
inc
out
inc
pusha
sub
inc
dec
and
int
into
and
pop
into
pop
xorl
fcomip
push
arpl
shlb
sti
pop
fstpt
loopne
out
ja
mov
ss
add
cli
pop
inc
cmp
mov
cltd
sub
xor
mov
das
negb
ljmp
add
cs
xchg
mov
xchg
inc
sub
inc
adc
add
shlb
mov
notb
sub
out
loopne
rcr
pop
pop
pop
sbb
jmp
sbb
mov
adc
out
xor
rclb
mov
roll
cmp
inc
xchg
cli
pushf
jae
shrl
js
popa
cs
mov
jp
pop
std
test
sbb
pop
imul
sti
lahf
andb
adcl
xorl
mov
xor
xchg
sub
push
lods
sub
mov
mov
adc
rcr
mov
dec
sti
nop
add
in
ret
push
jno
add
lret
dec
or
iret
cmpsb
dec
cmpl
nop
loop
mov
jb
mov
les
push
inc
or
in
pop
sub
or
movsl
repnz
inc
jo
xchg
and
jo
loope
imul
cmp
das
mov
mov
add
aaa
pop
sub
insl
push
js
add
outsl
lds
mov
roll
je
int
adc
sub
ret
movq
cs
xchg
js
imul
fcmovne
loopne
mov
or
sub
push
push
std
dec
push
sbb
iret
arpl
adc
cmpsb
mov
imulb
loop
mov
cmp
xchg
mov
popa
std
inc
ds
insl
or
cltd
nop
xor
pop
insl
shrl
pop
jbe
icebp
ljmp
pop
jns
pop
push
jno
pop
repz
fwait
xchg
dec
mov
in
mov
mov
mov
js
pop
xor
in
add
xor
fistpll
sarb
push
add
push
test
sbb
gs
pop
adc
and
fdivl
cmp
push
push
dec
pop
lcall
xor
mov
pop
dec
ds
ret
sub
stos
mov
ret
sbb
mov
adcl
jns
jne
es
ja
in
mov
mov
pop
push
push
sbb
mov
dec
sub
arpl
pusha
test
fisubrs
aaa
xchg
icebp
inc
xor
add
sbb
sub
sti
ret
test
push
dec
repz
jb
mov
push
fwait
push
or
ret
mov
stos
fldt
dec
repnz
lahf
orl
jmp
cwtl
sbb
push
insl
imul
fs
test
sbb
les
in
xchg
push
push
inc
xor
add
xchg
inc
push
sbb
inc
sub
xorl
rcll
adc
dec
decb
jbe
inc
push
adc
repz
inc
pop
div
mov
scas
mov
pop
jno
mov
xchg
push
sarb
sub
mov
jns
stc
mov
jle
fs
outsl
jp
inc
sub
and
mov
push
cmp
icebp
mov
out
mov
pop
das
lods
fwait
inc
test
sub
aam
ret
data16
cmp
call
lret
push
mov
push
ss
sub
mov
sub
ljmp
stc
and
mov
mov
mov
xchg
ss
sar
sub
sub
sub
dec
add
sbb
mov
mov
adc
fidivs
int
shrl
and
mov
mov
sahf
mov
in
das
cmp
pop
jmp
inc
dec
inc
inc
sub
mov
dec
das
data16
inc
sub
mov
enter
or
cmpsl
cmp
adc
pop
push
adc
inc
fmuls
ret
mov
scas
bound
jecxz
sub
jns
jecxz
icebp
inc
sub
sub
mov
jmp
sub
popf
jo
call
imul
xchg
rol
push
sbb
inc
cmp
mov
cmp
daa
sub
in
sub
sub
imul
add
jecxz
sbb
sbb
out
push
and
jle
inc
xor
add
insl
inc
xchg
xchg
in
sub
mov
icebp
shrb
dec
dec
pop
pop
lcallw
sub
push
leave
xchg
cmpb
jmp
xor
mov
pop
jb
lods
mov
dec
or
or
dec
mov
pop
pop
jae
inc
stos
mov
sub
mov
and
aaa
stos
jecxz
rclb
mov
mov
test
mov
mov
loop
in
push
andl
shrl
adc
adc
lcall
pop
rorl
test
push
sub
lods
pop
stos
jnp
xor
and
lcall
div
shlb
push
js
shl
lcall
insl
xor
insl
xor
hlt
mov
lods
pop
cmc
and
movb
inc
rcrl
xchg
pop
pop
clc
mov
ret
mov
movsb
jbe
add
test
or
bound
adc
in
aaa
fnstenv
fbstp
cli
lds
sbb
insl
sub
clc
out
xor
dec
pushf
fstpl
test
test
daa
mov
mov
jge
xor
sbb
xchg
sbb
mov
mov
addr16
xchg
out
add
mov
aaa
lods
call
mov
adc
mov
xchg
jle
fs
push
sub
jbe
mov
add
sub
stc
inc
shl
xor
insb
stos
rorl
push
inc
adc
jo
mov
add
push
sarl
xchg
or
and
pusha
subl
push
xor
mov
mov
dec
or
fwait
imul
sbb
add
sarb
xor
lods
lods
dec
add
outsl
sub
sbb
lret
jno
popf
jp
mov
xchg
jb
mov
xchg
xchg
test
outsl
pop
xor
fldl
iret
cmp
and
jmp
addr16
lock
fists
xchg
jle
xor
push
das
sub
ds
pop
incb
pop
sbb
mov
ret
mov
add
outsl
xor
sub
push
or
and
aaa
ds
and
pop
sub
aaa
stos
mov
xchg
cmp
inc
inc
movsl
loopne
testb
lods
cmc
and
dec
ret
loop
adc
sbb
movsb
xchg
div
inc
jge
out
fsubs
sub
sub
call
loope
push
mov
cmpsl
push
xor
mov
jbe
nop
inc
inc
repz
xor
add
hlt
ret
cmp
or
shll
jno
into
xor
imull
xchg
xor
stos
sub
push
repz
popa
xor
mov
cld
jle
inc
loop
lret
push
jno
push
lods
push
roll
ljmp
adc
mov
shll
mov
stos
and
loope
sub
dec
mov
jne
cmp
and
lds
aas
cmpsb
faddp
jno
mov
shll
add
repz
testb
es
push
lock
sub
xor
pop
sub
push
sub
inc
sti
je
adc
insl
pop
xchg
nop
xor
xchg
dec
mov
lea
add
stos
in
pop
sub
xor
jmp
xor
sub
lods
stos
adc
imul
inc
pushf
jo
xchg
jns
insb
aaa
int3
pop
mov
call
mov
dec
scas
scas
popa
lds
jb
mov
push
ljmp
lock
nop
jne
pop
mov
ret
jbe
call
sub
jle
leave
and
push
mov
or
mov
sub
sti
jo
sub
pop
xorl
mov
adc
aaa
add
stos
stos
fidivs
push
shrl
or
adc
inc
sub
aas
addl
or
sbb
test
mov
cmp
xorb
fwait
xor
adc
aaa
dec
mov
adc
add
xor
ss
mov
mov
and
in
cld
pop
imul
insb
and
shll
cld
cmp
mov
mov
cmp
jp
sbb
shlb
jb
mov
sahf
jmp
add
mov
fwait
xchg
cmp
mov
push
cs
dec
mov
sub
xor
adc
sub
pop
mov
imul
lahf
ficomps
sub
mov
aaa
and
aas
adc
jb
inc
call
cwtl
sub
xor
and
jbe
popf
adc
cpuid
and
sub
cmp
repz
dec
shrb
add
xor
mov
push
dec
in
cld
imul
mov
add
adc
mov
test
les
cld
sub
sbb
add
stc
stos
popf
jge
mov
inc
orl
cmp
xchg
scas
adc
sub
jge
pop
nop
jno
push
inc
aaa
and
shl
xchg
es
adc
adc
or
ss
aaa
sbb
daa
stos
cmp
cmp
xor
test
fmul
imul
lea
adc
sub
dec
popf
mov
inc
push
xor
fdivl
mov
scas
xor
push
test
pop
adc
xor
js
xor
nop
subl
fnsave
mov
aaa
insb
aaa
or
sbb
lods
cld
dec
fisttpl
clc
or
mov
fwait
jb
jae
xor
push
pop
aaa
sbb
add
add
push
push
pop
and
shlb
out
outsl
pusha
sti
outsb
fbstp
mov
aaa
insb
je
xorl
pop
mov
jae
sub
and
fs
pop
clc
dec
into
mov
push
xorl
pop
sbb
mov
sarl
xor
mov
insb
push
shrb
pop
popa
jb
lods
mov
or
xor
sarb
pop
jle
jne
push
lds
xor
lret
xchg
push
push
nop
xchg
push
mov
add
subl
or
pop
xchg
scas
shrl
ljmp
fisttpl
add
loopne
shlb
mov
fldt
sub
inc
sub
jp
cld
mov
inc
in
xor
and
push
add
pop
movsl
xor
fwait
mov
cmpsb
rclb
cmp
xor
push
xor
test
test
inc
sub
inc
stos
loope
and
xor
inc
pop
cmp
aaa
fsubr
xchg
mov
mov
jne
inc
aaa
mov
lahf
mov
xor
fisttpl
ss
ss
jbe
sub
aaa
sbb
ret
clc
add
xchg
dec
je,pn
cmp
and
jo
or
sub
inc
sub
push
dec
pop
xlat
movsl
lcall
sub
into
popa
xor
mov
movsl
sub
sti
mov
aaa
cmc
xor
out
mov
sbb
pop
push
xchg
test
cmp
or
xchg
and
sub
and
arpl
jb
orl
or
sub
xor
pop
or
dec
imul
add
pop
mov
and
mov
mov
push
je
push
dec
mov
les
mov
pop
in
push
mov
push
and
xor
dec
rclb
push
cmp
sbb
aas
jecxz
inc
xor
dec
imul
test
aaa
add
je
inc
rorb
xchg
scas
push
cs
stos
dec
popf
out
loopne
mov
xchg
and
inc
arpl
mov
sbb
fwait
andl
cs
pop
sub
cmp
cmp
jne
jp
ds
sub
sarl
cltd
lahf
inc
dec
dec
xor
sbb
xor
lds
xor
lock
mov
mov
adc
and
push
push
sub
imull
and
lods
aam
sub
xor
and
adcl
sub
imul
push
dec
ficoms
aaa
arpl
lods
mov
push
rcll
push
sbb
imul
push
xor
cmpsl
push
dec
icebp
jle
jne
xor
jb
sub
roll
movsl
jne
outsb
adc
jb
adc
stos
pop
xor
pop
cs
xor
inc
jbe
sub
sub
adc
jmp
jg
out
loope
add
xor
push
dec
ret
mov
xor
jo,pn
push
mov
out
push
xor
mov
ret
mov
cmp
push
sub
sbb
mov
arpl
jbe
insb
mov
sbb
mov
repnz
mov
gs
or
sub
mov
adc
jo
xor
into
and
pop
shl
sub
dec
repz
loopne
andb
add
stc
aaa
cmpsb
and
cld
mov
aaa
in
mov
push
das
add
xor
sub
adc
arpl
xor
ret
adc
sbb
inc
stos
in
daa
jge
hlt
leave
popa
and
mov
pushf
xor
dec
shrb
jno
mov
jo
or
push
push
mov
enter
popa
sub
in
adcb
adc
ret
sub
scas
fldcw
sti
test
ljmp
jo
mov
push
out
jbe
popa
xor
stos
aad
push
insl
sbb
mov
push
sub
mov
clc
fisubrl
xor
sub
test
push
fcoml
sbb
mov
sub
sahf
shrb
push
in
add
inc
stos
sub
lea
mov
inc
pusha
cld
sub
test
popa
and
push
jmp
cld
sub
dec
and
scas
std
cmpsl
divl
or
xor
mov
fisubs
dec
mov
add
shll
push
ror
sub
mov
adc
inc
xchg
sub
xor
lcall
sbb
shll
mov
jge
mov
popa
xor
mov
scas
sub
sti
and
rep
dec
dec
je
dec
fidivrs
daa
xor
mov
rcll
mov
repz
adc
sub
test
jo
sub
imul
rcl
push
loopne,pn
scas
ret
push
fmull
sub
scas
pop
xor
or
push
aaa
add
pop
adc
jb
rclb
cmp
sbb
movsl
in
ret
aaa
sbb
mov
mov
mov
sbb
mov
and
jns
adc
sub
insl
add
fidivrs
push
mov
ret
shll
mov
mov
mov
push
sub
push
mov
sub
test
and
pusha
or
aaa
xorl
jb
rcll
sbb
and
mov
push
mov
dec
scas
int3
addl
pop
loop
sub
test
sub
sub
sub
inc
jge
pop
out
push
jp
push
mov
mov
scas
mov
pop
nop
xor
xor
aaa
dec
mov
mov
pop
xor
rcll
sub
cmp
cli
subb
mov
shlb
cmp
mov
roll
mov
jge
or
adc
and
dec
inc
adc
and
push
and
mov
ret
sbb
inc
adc
das
movsb
sub
push
movhlps
das
mov
fcoms
bt
sub
inc
xchg
subl
je
int3
mov
adc
pop
pop
shlb
push
orl
int3
in
xor
cli
add
mov
int3
pop
sub
out
cmp
push
sbbl
sub
test
jg
xchg
inc
js
push
xor
sbb
xor
or
sub
dec
test
pop
adc
popa
dec
cmp
mov
pop
inc
int3
sbb
lock
out
mov
adc
xorl
nop
rcll
dec
mov
subb
inc
inc
mov
mov
cmpsb
sbb
mov
cmp
stc
push
xchg
mov
mov
subb
and
enter
xchg
dec
mov
les
sub
dec
or
scas
stos
dec
sub
jae
push
xchg
or
clc
nop
fistl
mov
enter
mov
jge
mov
popa
add
add
std
mov
test
dec
xor
lcall
add
inc
nop
cld
stos
mov
fisubs
push
lret
sub
mov
xor
sarl
mov
sbb
scas
int3
push
xor
and
mov
nop
std
and
adc
xor
mov
or
and
out
mov
fildl
cs
jbe
pop
je
int3
sub
push
or
pop
sub
mov
adc
push
aaa
lea
fsubrl
jbe
or
mov
int3
shlb
push
nop
jg
lods
pop
xor
push
push
sub
and
imul
sub
cmpsl
aaa
jle
call
dec
mov
mov
shlb
push
nop
jg
cmp
pop
int3
ss
js
fisubl
and
dec
aaa
mov
inc
jecxz
mov
lcall
sbb
lods
or
xor
fadds
jb
rcll
mov
dec
mov
sub
xchg
xor
ret
or
mov
lcall
mov
pop
xor
push
sbb
xor
stc
inc
lea
in
clc
scas
push
cmp
sub
pop
push
sub
popa
lds
fs
pop
cmp
sub
aaa
mov
insb
dec
mov
jp
cmpxchg
ds
inc
cmp
xor
shll
shrl
das
cmpl
jmp
pop
sub
mov
pop
es
dec
shll
std
shlb
push
nop
jg
clc
mov
das
ljmp
sub
sub
es
ss
mov
cltd
add
mov
loop
sub
nop
fstpt
mov
stos
inc
sbbb
xor
xor
and
in
testl
and
push
ss
xorl
pop
sbb
mov
sub
mov
ljmp
js
add
out
lods
clc
and
mov
ja
leave
mov
movsb
ret
lods
cli
fcmovu
mov
add
mov
jge
add
mov
decl
popf
mov
data16
movsb
dec
std
test
aaa
add
pop
mov
xor
jp
stc
cli
test
aaa
icebp
mov
pop
jb
jp
lock
scas
repz
xor
shrl
pop
movsl
sub
mov
hlt
sub
xor
push
or
and
shlb
xor
pop
shl
sub
insb
lock
mov
in
mov
sub
inc
cmp
xor
push
decb
and
jmp
mov
and
js
mov
xchg
jle
xor
push
adc
jp
add
insb
xor
sbb
or
lea
aaa
sbb
popf
imul
imul
sti
cwtl
ficomps
xor
js
es
bound
cmp
xor
and
adc
inc
sahf
xor
addr16
inc
jne
inc
jbe
cmp
ret
and
test
insb
jne
mov
xchg
inc
xor
xchg
scas
je
leave
mov
jns
mov
cs
sbb
and
inc
push
leave
mov
jb
mov
lock
aaa
popf
mov
cmp
mov
inc
sub
mov
ljmp
and
jmp
dec
out
inc
jp
sub
mov
jp
outsl
xorl
enter
scas
dec
xor
pop
pop
aaa
stc
stos
aaa
xchg
inc
dec
xor
push
cld
stc
pop
movsl
shlb
mov
aaa
mov
sbb
jno
fidivl
mov
stos
mov
xchg
mov
pop
inc
aaa
jbe
daa
mov
sbb
inc
shrd
push
pop
and
adc
sahf
sub
add
mov
and
sub
es
adc
cli
inc
or
ss
mov
js
lods
pushl
mov
add
mov
cmp
mov
mov
and
shlb
jp
stc
test
mov
into
inc
dec
fcomip
inc
xchg
ficomps
sub
mov
ss
out
xor
fnstenv
insb
mov
push
jge
pop
popf
jno
mov
sbb
popf
mov
sub
dec
and
jecxz
std
mov
xlat
scas
aaa
pop
jb
fs
lock
popf
scas
add
mov
dec
and
into
adc
and
fsts
jecxz
sub
fdivrs
lods
aaa
hlt
in
int3
pop
xor
jp
add
test
inc
stos
xor
test
pop
push
aaa
stc
stos
xor
jle
and
mov
les
test
inc
test
jl
inc
inc
xor
mov
mov
iret
mov
aaa
in
arpl
mov
pop
jb
iret
and
cli
mov
enter
mov
sbb
adc
and
or
mov
xchg
mov
aas
and
shlb
dec
repnz
push
sub
fisttpl
insb
mov
adc
mov
mov
enter
mov
aaa
inc
pop
mov
inc
add
sbb
jmp
mov
arpl
inc
jp
or
stos
sub
sub
inc
test
and
ret
xchg
push
pop
xor
and
flds
aaa
sbb
ljmp
aaa
in
mov
xchg
push
inc
mov
sub
data16
add
xchg
inc
ljmp
cmc
xor
mov
lods
xor
and
rclb
gs
adc
xchg
sbb
jmp
js
in
mov
mov
or
mov
jecxz
adc
lea
insb
mov
xor
inc
xchg
adc
cli
cmpsb
test
aaa
inc
mov
mov
int3
xor
jp
call
test
inc
mov
lea
xor
xchg
aaa
sbb
popf
mov
xor
push
stc
pop
movsl
sub
or
into
push
stc
add
repnz
xchg
subl
mov
add
test
aaa
inc
mov
mov
mov
andl
push
sub
mov
out
mov
add
adcl
pop
movsl
sub
mov
adc
inc
imul
shl
cmp
insb
scas
cld
xor
mov
aaa
pop
sbb
xchg
and
push
cld
xor
mov
add
dec
pop
clc
mov
int
pop
ret
fcom
sub
pop
pop
lods
cmp
add
and
mov
xor
aam
sub
cmp
lods
mov
negl
and
imul
or
adc
xor
rcrb
pop
aam
cmp
xorl
pop
inc
shl
xor
aaa
insb
ljmp
les
cs
test
or
dec
in
inc
add
call
or
adc
pop
aaa
and
shlb
and
xchg
or
das
aaa
xchg
dec
imull
push
add
mov
hlt
out
cmp
push
add
shlb
mov
or
and
mov
xor
push
icebp
std
push
xor
mov
hlt
xor
mov
xor
andl
cmp
mov
test
repz
mov
add
dec
mov
das
in
cmp
xor
lcall
adcb
lea
mov
fnstsw
xorl
pop
lahf
cli
inc
sub
inc
sub
das
fsubrs
jmp
sub
jp
aam
jb
fwait
mov
popf
and
xor
mov
jg
mov
pop
jbe
int3
mov
mov
popa
lret
sub
sub
xchg
sbb
ljmp
bound
mov
xor
cmp
insl
dec
sub
mov
push
sub
es
sub
adc
xor
xor
push
inc
sub
xorb
xor
xchg
and
add
lock
imul
mov
enter
push
rcll
aaa
clc
ss
add
sub
jo
sub
js
inc
and
dec
cmc
data16
adc
mov
stos
cmove
xor
pop
je
int3
pop
mov
cmp
bound
mov
mov
adc
cli
xor
mov
jb
jb
rclb
loopne
mov
xor
mov
pop
mov
imul
les
and
jno
es
mov
scas
xchg
xor
test
xor
stos
mov
mov
loope
les
jge
repz
aad
bound
push
adc
jb
stos
testl
xor
fistl
xor
mov
arpl
mov
jge
das
adc
mov
inc
shll
ficoms
shll
mulb
sub
popaw
jp
pop
jbe
int3
mov
jb
rcll
sbb
pop
mov
inc
adc
mov
lret
sbb
test
mov
stc
inc
jp
jae
fistl
sub
push
jb
mov
rclb
sub
xor
mov
sub
push
lods
add
cmc
push
xor
call
inc
das
loope
stos
sub
jo
ret
push
cmpsb
shrl
sub
xorl
shl
pop
xor
xor
xor
jbe
loope
and
jl
arpl
icebp
loope
and
in
dec
aaa
mov
and
pop
das
iret
dec
jb
mov
xor
subl
shlb
sub
dec
jl
sub
jmp
int3
add
jge
xor
cmc
xchg
daa
in
xor
xchg
push
test
sub
sub
xor
movsl
push
and
shll
insb
lods
push
and
sub
fstl
jno
add
inc
cmpl
rclb
dec
mov
cmp
nop
enter
adc
dec
pop
out
adc
mov
jp
pop
mov
ret
inc
lods
pushf
push
dec
adc
sbb
adc
repz
sub
jno
xor
outsb
xlat
sbbl
add
or
lods
fcompl
stc
inc
loope
mov
xor
dec
adc
popa
movsl
insb
ret
cmp
jbe
in
cmp
sub
loop
sbb
ret
shll
negb
jge,pn
push
jge
cmp
dec
aaa
and
and
lods
into
mov
daa
sbbl
data16
dec
and
and
repnz
and
xor
hlt
ss
push
outsb
dec
lods
add
fldenv
fs
ss
adc
ja
xor
scas
mov
ficomps
icebp
lar
in
sub
movsl
inc
and
mov
hlt
out
jae
repnz
addr16
test
xor
aaa
es
and
mov
pop
push
dec
push
add
ret
mov
adc
and
clc
pop
push
int3
shlb
push
loope
mov
add
sub
jb
popa
and
cmp
mov
add
mov
adc
sti
addl
pushf
jge
jb
adc
repz
mov
add
test
push
and
roll
call
std
and
pushf
ret
cmp
adc
pop
mov
mov
adc
xor
js
sub
dec
or
imul
cmpsl
aaa
lods
push
ds
and
adc
push
sub
mov
sbb
xor
in
adc
pop
mov
xor
mov
push
xor
push
jae
out
mov
mov
add
in
pushf
popa
mov
mov
jge
stos
pushf
sbbl
data16
mov
xor
fs
fs
stc
jp
les
or
pushf
adc
and
rorb
popa
movsl
mov
inc
adc
and
and
mov
adc
sub
xchg
lds
add
and
cs
adc
fmul
and
subb
adc
jb
rclb
sbb
hlt
aam
adc
stc
stos
mov
inc
mov
push
mov
xor
sub
and
and
shr
ret
mov
subb
xor
jbe
adc
cld
jle
ja
inc
ret
inc
xor
inc
out
pop
and
jno
cmp
cmp
and
jmp
add
and
repz
xor
movsb
inc
sub
and
jecxz
push
cmp
mov
and
pop
or
adc
outsb
and
push
lret
xor
or
call
adc
xor
xor
lea
and
xor
mov
xchg
inc
add
or
aaa
test
mov
out
sub
and
icebp
stos
sub
sub
mov
jle
xor
pop
adc
adc
adc
mov
cwtl
sub
inc
mov
mov
jo
adc
jno
sbb
jmp
adc
xor
xlat
add
mov
add
xchg
lods
test
loope
add
push
fsubs
enter
popf
mov
sbb
sub
jnp
in
mov
xchg
or
and
mov
dec
dec
adc
xor
dec
aaa
popf
mov
xchg
mov
mov
jp
mov
jb
mov
mov
lock
subb
xchg
mov
mov
fldt
dec
adcl
ficomps
xor
mov
cmp
add
subl
push
xor
imul
push
in
mov
mov
mov
mov
push
push
mov
xor
xor
add
es
adc
cmp
push
mov
pusha
push
mov
push
sub
dec
jnp
push
loop
lea
mov
addr16
adc
mov
add
lret
ja
adc
sti
dec
push
pop
arpl
sub
push
aam
xchg
scas
add
je
dec
inc
sbb
pop
or
inc
in
mov
jne
xor
jno
in
jg
xchg
jne
sbb
testl
lea
insb
mov
cmp
dec
out
xor
cmp
je
pop
sbb
mov
aas
pop
jne
sub
sbb
mov
mov
idivb
shlb
bound
cmp
and
shll
xor
shll
test
fucomip
add
pop
push
fucomip
inc
jno
insb
xor
xor
xor
mov
in
ret
imul
xor
pop
scas
fidivrl
ret
inc
fildl
jo
jns
jnp
xor
das
push
add
fcoml
sbb
mov
mov
sbb
lods
dec
in
mov
mov
andl
jbe
in
shll
mov
xchg
xor
adc
dec
cltd
jo
lahf
push
inc
test
adc
call
das
in
sbbl
rcll
sub
inc
iret
inc
pop
pusha
lret
xor
mov
dec
popa
inc
jmp
xor
insl
rcr
push
sahf
jno
xor
inc
push
mov
sbb
cmp
test
jne
sub
les
mov
sub
cmpl
xor
stos
mov
adc
push
sub
xor
mov
adc
pop
mov
mov
adc
mov
jbe
icebp
sub
xchg
cs
mov
and
pop
clc
xchg
sbb
dec
icebp
add
jle
jmp
jbe
clc
or
mov
dec
aas
testl
dec
pop
mov
mov
xchg
insb
add
xor
repz
pop
mov
and
aad
and
leave
adc
lods
sub
sub
sub
mov
jp
outsl
cmp
pop
inc
cmp
xchg
lcall
hlt
dec
pop
mov
xor
das
push
push
mov
out
push
sbb
and
dec
push
jle
das
sub
xor
lret
xchg
dec
iret
inc
aam
pop
fisubrs
cmp
daa
sub
cmc
ljmp
hlt
sub
xchg
loope
cmc
leave
push
das
xor
sbb
pusha
das
in
pop
sub
negb
neg
insl
cs
jge
rorl
insl
cs
push
push
pusha
jmp
xchg
dec
cmp
mov
imul
mov
inc
mov
jmp
push
aaa
shlb
and
fisubs
lds
dec
rorl
scas
and
xchg
imul
dec
lods
or
pop
inc
xchg
pushf
incb
into
inc
test
sbb
dec
stc
mov
daa
outsb
mov
adc
das
jge
scas
xchg
jb
mov
aas
cmpsb
lea
lret
and
xchg
dec
pusha
nop
jmp
sbb
repz
bound
mov
jge
dec
adc
xor
mov
sub
loopne
jo
dec
pop
dec
mov
dec
arpl
jne
jae
jne
sbb
inc
out
or
xchg
cmp
pop
mov
mov
lret
inc
fbstp
int
xchg
mov
sbb
add
adc
push
ss
jb
sarb
xchg
mov
inc
jl
lea
mov
cmp
roll
pop
je
pop
mov
ss
jle
dec
pop
jne
mov
call
adc
sub
leave
lea
pop
ss
cmp
push
sub
lods
outsl
repnz
cmp
ja
adc
xor
lods
pop
pop
out
or
sub
test
movsb
pop
xchg
inc
xchg
fnstcw
dec
and
add
sbb
jecxz
popf
in
jno
inc
jae
jbe
push
lahf
jns
adcb
jbe
mov
jb
es
mov
inc
leave
jbe
ds
xor
jp
sbb
inc
inc
xchg
push
std
jbe
mov
xlat
adc
sahf
shll
jne
divps
adc
mov
stos
cmp
div
imul
gs
jmp
cmp
and
lods
arpl
lds
dec
pop
push
push
and
ja
xor
pop
arpl
sbb
pop
xor
aaa
mov
insb
pop
inc
lcall
cmp
lods
insb
push
sub
push
sub
outsb
ds
mov
into
hlt
loopne
cmc
pop
mov
jne
call
aaa
aad
ret
arpl
ljmp
jmp
stos
xor
sub
lahf
mov
lods
insb
imul
in
rep
mov
insb
and
out
mov
insb
insl
dec
sub
mov
mov
mov
mov
mov
mov
and
ja
aaa
sub
mov
insb
js
int3
mov
insb
pop
pop
xor
xchg
cmp
scas
push
xor
pop
mov
rolb
int3
and
pop
jmp
dec
xor
pop
pushf
jo
xor
iret
and
xlat
adc
sbb
int
lods
not
xchg
push
insb
lock
sarb
out
shlb
xlat
pop
sub
mov
pop
xor
push
int
sbb
das
pop
push
fildl
push
imul
sbb
push
sub
pop
das
sbb
scas
mov
jecxz
pop
jb
sti
ret
dec
lret
frstor
aaa
jb
lahf
push
sbb
je
fucom
xchg
dec
outsb
mov
sub
cmpsb
jmp
sbb
das
xchg
hlt
lret
lea
add
sub
mov
jne
dec
xor
adc
mov
ret
cli
adc
jb
aaa
pop
js
loope
add
iret
pusha
mov
pop
cmpsb
fmulp
into
stos
loope
xor
cvtps2pd
bound
add
mov
xor
lea
mov
into
ljmp
lahf
stos
notb
pop
test
push
aaa
push
sub
mov
neg
std
and
mov
test
adc
testb
repnz
adc
add
mov
neg
mov
push
xor
jbe
pop
andb
aas
cmpsb
cmp
push
imul
pop
jbe
mov
or
mov
mov
jecxz
movsl
ret
and
out
mov
sub
outsb
into
lods
xchg
xchg
xor
ds
dec
cmp
pop
daa
add
xchg
pop
in
fcomi
movsb
das
pop
scas
in
mov
sbb
adc
insl
scas
sub
pop
mov
sub
cmc
or
and
cltd
adc
mov
dec
mov
push
sbb
rcl
fcompl
fisubrs
fsubl
xchg
js
stos
lock
xchg
addl
pop
std
xchg
loope
bound
mov
and
daa
jbe
pop
lock
dec
lock
shll
cmpsb
sub
push
cmp
push
mov
dec
jno
xor
scas
daa
stos
sub
jmp
scas
mov
popa
jb
dec
and
mov
xchg
adc
daa
inc
imul
popf
fildl
push
lret
fs
das
jno
pushf
cmp
shlb
clc
pop
mov
ja
fsubs
shll
cmp
dec
shll
subl
cmpb
test
mov
popf
loop
addr16
scas
out
and
or
cwtl
push
ret
mov
and
add
cmp
popf
mov
es
xchg
pop
xlat
adc
pop
mov
test
lds
inc
sub
xor
stos
scas
mov
ror
sar
dec
inc
sbbl
pop
int
fsts
mov
xchg
xchg
movsb
outsb
inc
clc
inc
xor
mov
mov
or
mov
lea
sti
sahf
lcall
sti
test
push
aad
adc
mov
fidivl
sub
rcll
repz
add
stc
cvtps2pi
jae
hlt
out
mov
pop
addr16
sub
mov
add
aaa
add
mov
loopne
jbe
lds
fsubrl
scas
enter
fidivrl
jle
nop
lock
push
icebp
repnz
mov
sub
add
shll
mov
fwait
pushf
mov
stos
stos
inc
mov
jg
mov
push
inc
repz
aad
andb
int3
sub
xor
jle
or
adc
pusha
outsb
test
fsubrs
fists
jne
fadds
sub
cmp
rcrl
pop
outsb
ret
sub
push
mov
adc
arpl
mov
stc
ljmp
mov
ret
bound
mov
mov
and
xchg
test
arpl
dec
js
mov
push
test
mov
add
pop
sub
popf
push
mov
shll
test
jns
iret
jp
fldl
sub
pop
mov
xchg
sub
add
sub
jae
mov
jo
dec
andb
in
lock
xchg
fimull
and
addr16
das
je
jns
or
idivl
jp
jo
mov
push
loop
push
in
insl
repnz
push
adcl
pop
inc
je
lret
js
mov
addr16
sbb
mov
inc
lahf
and
inc
aad
pop
jecxz
mov
or
sub
enter
out
jne
xor
push
outsb
inc
mov
rol
xchg
outsb
es
add
mov
fdivs
das
mov
xchg
fwait
and
and
outsb
add
dec
test
mov
sbb
jo
xchg
pop
sub
and
xor
ds
mov
and
movsb
dec
mov
sbb
shld
daa
and
cmp
or
add
inc
xor
lret
inc
in
add
dec
pusha
out
dec
aad
dec
add
es
push
in
cmpsb
imul
daa
rcrl
sub
lcall
jo
push
xchg
mov
int3
and
xor
push
stos
sub
mov
jmp
int3
mov
mov
xor
mov
xchg
ret
sub
push
nop
inc
cmp
inc
jno
push
je
add
jb
aad
out
xchg
and
xor
xor
loope
push
sbb
cmp
ss
and
sahf
fwait
mov
mov
add
jbe
lahf
bound
jmp
lea
pop
xor
lods
movsb
aam
cld
pop
lea
jmp
mov
lret
jae
pop
test
push
xor
out
jne
lods
mov
pop
scas
mov
cmp
rol
inc
popf
nop
push
jge
jg
mov
jp
es
and
cmpb
and
adc
pop
push
stos
pop
movsl
stos
pop
push
rcr
xor
mov
and
into
and
push
clc
pop
or
mov
mov
mov
scas
aad
mov
mov
add
dec
frstor
dec
and
push
imul
mov
sbb
pop
ljmp
mov
push
inc
push
aas
cmpsl
cs
push
sub
inc
pop
ret
mov
sub
xchg
lcall
fistl
mov
fnsave
inc
lcall
sbb
xor
mov
pop
pop
xchg
sbb
rcrl
adc
and
frstor
mov
lock
sub
insl
sbb
mov
push
inc
push
xchg
cmp
dec
mov
adc
pop
lea
xor
cmp
repnz
mov
nop
shll
icebp
jg
data16
jecxz
fistl
cmp
jns
jbe
xlat
push
adc
daa
jns
out
movsb
aad
push
out
fimull
mov
aaa
push
adc
cmp
jg
notl
ja
cmp
add
add
pop
mov
and
push
lea
ror
push
cmp
jnp
leave
pop
mov
int3
arpl
xchg
js
xor
pop
rol
inc
cmpxchg
iret
pop
jbe
mov
sub
test
imul
adc
test
push
rsqrtps
jmp
cmpsl
mov
adc
fldcw
push
xchg
pushf
xchg
test
lock
push
xor
jae
subb
cmp
push
movsb
stos
push
cwtl
pop
aad
xor
fdivl
push
movsl
sbbb
push
mov
xor
bound
inc
testb
scas
mov
enter
sbb
jg
and
in
push
imul
adc
push
jo
out
js
push
or
lret
cld
push
xor
movsb
cmp
stos
repnz
jnp
xchg
mov
mov
jg
imul
out
dec
add
test
adc
imul
scas
cmc
add
dec
xchg
pop
sub
or
mov
fdiv
dec
push
jge
or
inc
insb
xchg
les
in
sub
push
inc
out
sub
mov
push
ret
popa
mov
subb
inc
sub
loopne
jmp
mov
les
hlt
lock
movsb
aam
out
xchg
jle
mov
into
jnp
ret
sub
mov
ja
adc
xor
sub
in
mov
lock
int
add
pop
mov
xchg
stos
pop
hlt
loopne
and
ret
pop
stos
mov
loopne
sub
mov
xchg
dec
ror
and
cwtl
or
popf
cmp
push
pop
aaa
outsl
pop
stos
lods
ficompl
and
push
mov
repnz
mov
mov
sbb
cmpsb
cmp
fs
lcall
cld
pop
cmp
cld
inc
sbb
mov
sbb
dec
jmp
sub
scas
stos
sbb
push
ljmp
enter
push
in
mov
cmp
or
jmp
lods
mov
mov
test
push
leave
inc
adc
pop
mov
dec
arpl
movsl
adc
fistpl
cmpsl
pop
movsb
jle
mov
bound
fbld
movsb
testb
inc
subl
ret
sarl
loopne
push
in
shlb
jle
jno
mov
mov
sub
ljmp
sub
stos
outsb
lods
xor
and
jnp
cmpb
arpl
mov
lods
jmp
dec
ds
or
test
aad
ljmp
cmc
dec
sub
fmulp
jb
jo
fistps
ret
push
cmp
je
mov
add
sahf
sbb
loop
xor
push
cltd
sub
pop
mov
pop
or
push
clc
inc
or
gs
lret
push
lea
scas
mov
lods
outsb
repz
insb
sub
push
pop
aas
sbb
sbb
loope
mov
sahf
stc
outsb
filds
ret
and
cmp
outsb
or
or
adc
sahf
xor
scas
popf
pusha
jo
jg
xor
pop
fwait
pop
adc
lods
test
xchg
push
jg
out
fst
dec
sub
shrl
test
clc
push
jg
lods
das
repnz
adc
sub
adc
jge
xor
ret
or
or
or
mov
daa
xchg
fcoml
mov
or
and
push
or
cmc
inc
push
jg
ret
or
cwtl
adc
arpl
jbe
or
adc
push
jg
mov
mov
mov
jg
adc
cltd
or
or
sbb
std
sub
sub
mov
or
add
xchg
imulb
out
and
daa
add
daa
sarl
adc
jp
cmp
rcr
hlt
ds
adc
adc
add
jno
xor
mov
or
push
std
sub
fwait
adc
fcompl
and
xor
inc
mul
adc
or
popa
inc
xchg
push
and
jg
fcomp
loop
jne
inc
jnp,pt
je
xchg
xor
lret
out
mov
lahf
ss
out
and
popf
inc
adc
jns
jmp
and
mov
popa
cs
stc
mov
inc
fsub
fstpl
mov
repz
mov
sbb
and
adc
add
loope
aaa
jge
repnz
and
fdivl
cmc
xchg
ret
hlt
fdivrl
int3
daa
outsb
sub
push
imul
mov
sub
jecxz
aaa
stc
inc
lea
add
ret
in
push
fwait
push
mov
push
mov
adc
cmp
push
dec
mov
xor
imul
mov
adc
cld
mov
mov
lods
jp
ja
popa
mov
dec
mov
testl
call
rcll
lods
cmp
and
stos
mov
mov
daa
add
lods
aaa
cmc
adc
sti
mov
dec
aam
mov
imul
push
fistpll
sub
dec
jo
popa
mov
std
imul
mov
xor
mov
jae
xchg
xchg
and
dec
es
inc
ret
ret
imul
out
sbb
inc
sub
push
mov
mov
adcl
push
inc
pop
push
mov
push
aas
cmp
sub
jmp
mov
xlat
pop
lcall
push
jle
mov
jg
loope
adc
inc
xchg
jg
jmp
jg
hlt
sbb
je
xor
in
cmc
in
sbb
test
jnp
mov
dec
jnp
leave
mov
xchg
lret
xor
pop
mov
sub
mov
and
das
dec
jae
lds
push
test
xchg
inc
pop
addr16
lret
dec
loop
sub
fsubrs
int
mov
mov
shrl
icebp
int
scas
mov
stos
cmp
call
aas
xor
pop
mov
mov
bound
pop
sti
xor
data16
or
adc
push
jmp
adc
jb
xlat
or
dec
inc
fs
shrb
loopne
ljmp
inc
cs
and
fld
lock
lods
mov
dec
pushl
movsl
cmp
out
movsl
adc
in
pop
ljmp
imul
cmc
push
sub
bound
dec
mov
movsb
out
dec
pusha
popf
or
int
pusha
and
je
mov
or
sub
bound
and
sub
data16
push
sub
mov
mov
int3
cli
dec
add
aad
sub
jle
dec
jge
jbe
dec
pop
xchg
pushf
jg
repnz
lock
cmp
xor
xor
mov
inc
pop
ret
or
jp
je
xorb
sub
ret
leave
scas
aaa
adc
push
adc
jbe
test
ret
push
stos
pusha
jl
push
cmc
frstor
roll
sub
test
jnp
jo
dec
push
mov
pop
push
push
cmp
and
out
push
pop
sub
fcmovnu
and
movsb
dec
mov
sti
insl
push
leave
inc
pop
cmp
sysenter
adc
jmp
sti
inc
mov
add
push
cmpsl
dec
jg
imul
orl
mov
pop
xor
clc
pop
hlt
icebp
movsb
fisubrs
jne
pop
pushf
or
fists
out
sub
jbe
fcoms
xor
arpl
fistl
les
jp
cmp
jp
out
repnz
pusha
sbb
and
mov
sbb
adc
jb
adc
mov
xor
lods
jo
inc
jne
sbb
mov
inc
xor
bound
jb
sub
sub
mov
sbb
mov
and
jb
arpl
dec
nop
xor
jmp
imul
hlt
das
jno
push
jg
inc
pop
mov
pop
mov
and
clc
mov
test
gs
push
test
sub
sub
inc
or
test
test
cmp
jl
ljmp
in
ret
push
mov
cmp
in
mov
dec
and
inc
xor
inc
xchg
add
ja
es
push
lds
add
in
mov
jae
jo
adcb
mul
mov
lret
hlt
xchg
movsb
lods
cmc
mov
pushl
stc
cld
scas
test
sbb
icebp
iret
mov
cmc
mov
shll
sbb
and
mov
insb
stos
push
push
orl
push
or
mov
inc
adc
xchg
and
daa
dec
jb
push
mov
aam
bound
outsb
sub
cmp
adc
xor
pop
clc
outsb
outsb
repz
add
and
mov
shlb
sub
mov
pop
pop
ljmp
mov
lret
popa
sub
rcr
test
aas
pop
das
test
fsts
sub
lds
xchg
and
sbb
jno
ficompl
sbbl
push
jb
push
mov
insb
mov
popa
es
push
cmp
loope
in
dec
scas
clc
shrl
fsubrs
dec
test
dec
sbb
pop
adc
addr16
xor
adc
shll
push
sbb
scas
fldenv
in
jo
std
fidivs
and
dec
lods
push
fcmovnu
mov
clc
and
mov
pop
sub
cmp
mov
nopl
setne
add
dec
aam
cmp
mov
lcall
add
pop
mov
filds
sarl
push
in
adc
ljmp
lods
lock
jmp
enter
sub
jmp
enter
stos
ret
fsts
int3
sti
xor
fdivs
test
rcrb
add
dec
mov
pop
and
fldcw
data16
fstl
and
push
stos
xchg
ret
xor
sbb
ret
mov
rcr
stos
andl
mov
ret
mov
mov
mov
jnp
mov
mov
cmp
mov
sbb
mov
daa
imul
xorb
xchg
jl
jns
daa
or
mov
push
pushf
test
out
add
adc
and
shrl
jmp
insb
inc
lods
and
jns
cwtl
push
repz
pusha
mov
cmpsb
bound
cmp
iret
and
stos
add
jmp
xchg
or
and
fimuls
mov
jb
mov
sub
js
sub
mov
mov
jecxz
push
sbb
cmp
xor
adc
rcll
mov
mov
xchg
sbb
cmp
sub
or
sub
sti
push
repz
movb
or
iret
sub
imul
lcall
rorb
jge
jecxz
push
mov
jb
sbb
xorb
cltd
stc
mov
push
pop
jo
inc
scas
inc
mov
cmpsb
or
rcl
movsb
movsl
and
enter
inc
sub
xchg
sub
inc
fsubrl
orl
lret
cli
scas
push
repnz
inc
test
push
std
jmp
adc
inc
sub
scas
adc
popa
mov
out
dec
repnz
jmp
push
loopne,pt
pop
stc
loopne,pn
ret
clc
mov
xor
adc
xchg
push
jbe
icebp
inc
jle
jbe
lret
std
hlt
shll
cmp
sub
jbe
mov
dec
lret
push
repz
ds
clc
pop
push
mov
mov
sahf
sbb
jmp
cltd
sbb
mov
sub
mov
aaa
and
or
fs
lret
insl
xchg
icebp
xor
test
mov
mov
scas
xchg
jle
pop
or
adc
jb
mov
pop
jb
pop
mov
sahf
mov
xor
push
inc
popa
inc
mov
push
rorl
gs
into
jnp
sub
test
aad
out
pop
lcall
jno
insb
sti
fsubs
pushf
adc
or
aam
push
jbe
pop
jl
test
shl
test
jno
addl
mov
jecxz
jae
sbb
mov
pop
mov
dec
pop
data16
das
sub
scas
lea
sbb
mov
fs
addr16
into
cli
js
mov
mov
fnsave
movsl
sub
xor
cmpb
and
inc
cmp
push
xlat
shlb
lahf
mov
push
adc
xchg
mov
inc
jbe
pop
mov
inc
mov
sbb
xchg
mov
clc
jmp
cld
inc
icebp
cs
clc
sbb
out
aam
rep
push
mov
dec
mov
xor
jmp
mov
aas
xor
cmc
mov
mov
stos
inc
add
xchg
hlt
aaa
les
test
cmc
xor
negb
repz
mov
fwait
ret
adc
movsl
add
mov
push
cs
lcall
jo
pop
xor
mov
and
cmc
lret
add
push
jb
push
add
mov
xor
repz
jns
xchg
mov
xlat
bnd
add
jecxz
xor
pop
call
or
aas
jo
outsb
shll
inc
rolb
sub
insl
jno
movsb
js
movsl
sub
xchg
and
addr16
inc
mov
mov
add
cmpsb
test
and
movsb
rol
ljmp
and
cmp
sub
cwtl
sahf
fld
mov
pop
dec
fidivs
xor
pop
sbb
ljmp
stos
xor
push
jp
push
dec
dec
lock
sub
aaa
subb
and
call
sub
stos
mov
mov
test
jb
pop
pop
mov
in
and
sub
mov
outsb
popf
stos
add
pop
jecxz
lock
outsb
pop
test
and
popf
lods
test
test
insl
mov
mov
pusha
cmp
push
andl
div
sub
ljmp
rolb
sbb
xchg
push
imulb
pusha
add
andb
ja
or
pop
ljmp
dec
sub
xor
aaa
jae
mov
lods
jbe
xchg
and
fistl
sub
fistl
and
xor
or
dec
lahf
call
mov
cmc
testb
and
clc
mov
inc
in
fisubrs
jae
jbe
jg
and
scas
inc
das
mov
jnp
mov
push
push
repz
cmp
fisubrs
mov
mov
jae
jo
mov
mov
pop
push
sbb
jg
lock
jb
push
scas
popa
lods
imul
inc
shl
sub
push
xchg
aas
add
lods
sar
aam
dec
push
push
dec
push
fisttpl
dec
jnp
loope
mov
mov
aaa
shll
sub
loopne
hlt
mov
shl
ss
out
xor
mov
test
dec
mov
rcrl
cmp
mov
stos
xchg
sub
outsl
cmp
xchg
cmc
jno
lods
cmc
add
js
sub
and
flds
xchg
ja
mov
adc
cli
flds
ljmp
dec
fstpl
and
pop
push
into
shr
sub
testb
hlt
dec
and
movsb
sbb
ljmp
dec
dec
xchg
repnz
out
ja
leave
sub
in
push
cltd
loope
push
subb
mov
and
popf
ret
and
mov
aad
cmp
inc
add
pop
dec
in
fimull
xchg
or
mov
mov
std
loope
xchg
call
aaa
jb
sub
jle
sarb
out
cld
push
addr16
and
stos
ret
fiaddl
add
or
je
mov
sub
sahf
outsb
cmp
pop
mov
roll
imul
jo
scas
mov
mov
cli
aam
adc
into
imul
fxch
and
lret
int
in
aas
push
movsb
cmpsl
ffree
mov
cmpsl
lcall
je
out
mov
divl
mul
aaa
fcoms
out
lsl
in
fidivl
or
ljmp
sbb
in
xchg
mov
fxch
xchg
adc
lcall
and
jle
lcallw
jge
push
stc
pop
insl
incb
xor
or
mov
mov
pop
jp
jmp
scas
loop
or
std
loope
dec
mov
in
inc
lods
scas
int
mov
sub
adc
mov
xor
push
jb
push
add
and
ret
imul
pop
push
int3
push
sbb
fidivrl
xor
mov
push
adc
lods
out
mov
cmp
fldt
inc
add
jb
or
je
xchg
mov
jo
push
sbb
mov
or
call
jnp
and
xchg
ror
mov
dec
lahf
test
dec
xor
inc
scas
je
rep
imul
or
or
xchg
repz
sub
shr
fpatan
adc
or
and
dec
mov
lcall
fdivl
into
daa
sbb
or
jecxz
test
movsb
rorl
shlb
mov
je
stos
lds
clc
push
push
popa
xchg
sub
cmp
and
fsubrs
negl
mov
xorl
jle
push
cld
and
fsubrs
outsl
shlb
jno
repnz
cmp
jne
jge
push
dec
stos
cmpsb
inc
pop
idiv
jo
push
dec
sbb
lods
push
pop
dec
cmp
xor
adc
and
jno
addr16
movsb
pop
jo
aas
mov
bound
and
jmp
fldt
cmp
add
cmpsb
or
mov
inc
push
fmulp
mov
xor
outsl
enter
jb
fcoml
mov
push
repz
ficomps
lcall
xchg
inc
inc
xchg
adc
sete
push
stc
js
adc
inc
mov
cmp
repnz
jo
pushf
mov
adc
popf
mov
pop
test
imul
cmp
add
mov
mov
arpl
xchg
push
inc
sbb
push
inc
jb
test
out
push
movsb
lock
cld
xchg
and
push
dec
rcll
push
push
fwait
sti
shll
dec
cmp
shlb
bound
jbe
nop
je
inc
rcrl
lock
fildll
sub
loopne
jb
and
and
popf
add
insl
repnz
mov
adc
or
jb
xchg
jecxz
call
loopne
push
dec
rcll
push
pop
jge
mov
mov
and
mov
jle
leave
xor
in
or
and
or
fwait
or
xor
pop
sahf
and
xor
std
pop
push
in
mov
sub
pop
add
pop
xor
subb
jle
xchg
mov
inc
xchg
ret
fldl
aam
mov
and
xchg
movsb
add
mov
mov
xchg
stos
adc
testb
pop
xchg
sahf
fwait
inc
cwtl
add
js
ret
fwait
insl
adc
adcl
sub
adc
cmp
cld
mov
pop
sbb
dec
mov
push
daa
popa
aam
or
mov
daa
ret
push
out
lcall
clc
in
jp
cmp
lret
in
dec
or
pushf
pop
lods
aad
shrl
mov
in
int
aaa
push
inc
pop
add
inc
fs
rcll
orl
out
loope
dec
mov
in
popf
popf
jmp
ret
mov
inc
push
and
cmp
ja
push
insb
sbb
mov
popa
je
pop
or
sahf
mov
inc
pop
mov
jp
and
or
add
sub
inc
aad
decl
adc
std
mov
bnd
and
adc
ficoms
push
xchg
pop
pusha
loopne
pop
sbb
jp
out
sub
jb
lods
adc
lods
jmp
sarb
insl
mov
cmp
jl
int3
out
scas
mov
stos
push
or
movsl
and
leave
rcrb
sub
mov
out
call
xor
jb
icebp
jecxz
sub
lods
pop
outsl
jl
or
shlb
fistps
xchg
aaa
scas
ja
out
jmp
cmp
test
gs
call
add
mov
mov
add
push
repnz
insb
cld
inc
in
mov
ja
dec
sbb
insb
popl
xor
xchg
sub
add
inc
enter
repnz
lods
sbb
pop
cli
dec
mov
jae
lods
adc
mov
push
and
jle
and
or
dec
stos
jecxz
push
push
mov
push
dec
test
lods
jp
mov
subl
dec
loopne
ds
xlat
test
lret
lds
scas
jno
sub
jle
push
lock
and
mov
add
shll
loop
sub
fwait
jb
xor
and
orl
pop
into
in
jnp
out
hlt
push
lret
xchg
js
gs
xchg
hlt
repnz
iret
ret
xor
test
dec
mov
orl
or
jbe
and
mov
jecxz
pop
das
lcall
dec
jbe
loope,pn
mov
inc
add
ret
mov
jle
movsb
mov
jne
out
outsb
loop
insb
mov
js
sbb
push
popf
xor
xlat
popf
jae
mov
mov
jnp
mov
loopne
mov
insl
fistl
pop
jb
pop
lea
sub
pop
push
ret
pop
loop
aas
push
lea
loopne
adc
icebp
and
movsb
icebp
loopne
insb
ret
xor
adc
movsb
jecxz
call
ret
and
loopne
sub
ret
push
divb
js
sub
jecxz
jae
dec
ja
dec
lock
mov
jns
xchg
test
stos
rcrb
mov
push
inc
jno
loop
cmpsl
test
sbb
pop
or
mov
mov
cmp
test
xchg
dec
jmp
test
lahf
add
or
test
mov
scas
repz
lods
xorl
ret
popf
inc
jge
leave
and
aas
lahf
adc
jg
es
daa
xor
sub
aaa
scas
jecxz
mov
mov
mov
jp
idivl
enter
push
sti
stos
iret
popl
les
xlat
dec
sti
mov
pop
stc
out
dec
ljmp
and
mov
lds
jb
hlt
adc
sbb
adc
fsubl
push
jmp
mov
xchg
or
jae
add
cltd
inc
or
and
sbb
dec
aaa
push
sbb
xor
stos
pop
mov
and
inc
sbb
xchg
pop
pop
mov
sub
or
lods
push
mov
jo
lds
clc
icebp
mov
mov
pop
add
adc
les
or
outsl
cmpsl
xorb
out
popa
je
lcall
jmp
jns
jl
ret
cld
jnp
cltd
or
jnp
push
and
sbb
sub
in
in
fiaddl
hlt
stos
adc
adc
lea
pop
mov
shrl
push
in
dec
mov
xchg
mov
cltd
cmp
cmpsb
jae
shlb
fldl
in
cmc
cltd
pushf
dec
lret
dec
inc
add
xor
loop
aam
or
lds
out
das
push
lcall
adc
comiss
add
jmp
pop
push
add
cli
inc
js
cmp
xor
sub
jle
and
imul
add
mov
adc
frstor
pop
and
in
call
dec
pop
sbb
insb
inc
sub
jl
push
out
xor
cltd
out
subb
inc
add
mov
mov
fildll
sbb
scas
inc
xchg
pusha
push
lahf
pushl
std
popa
push
je
xchg
clc
sahf
dec
push
out
cmp
dec
or
mov
and
jge
pop
push
dec
js
cmp
aad
xlat
jle
fnsave
es
movsb
jb
stos
movsw
push
push
aaa
fidivrl
jecxz
cli
imul
dec
cs
pop
iret
jecxz
fisttpll
and
aaa
xchg
mov
scas
in
imul
sbbl
repnz
pusha
push
roll
or
ja
xchg
shl
xchg
dec
xchg
dec
lea
shll
lea
sub
mov
mov
lahf
lret
in
mov
xor
mov
push
cmp
hlt
nop
jnp
jnp
mov
inc
mov
adc
or
push
fisttps
inc
or
dec
cld
pushf
sbb
lret
push
and
mov
and
mov
sub
cmp
nop
push
push
ss
lods
sub
fisubl
sbb
int3
push
ret
nop
loopne
cltd
imul
lods
nop
adc
pusha
cld
es
mov
mov
jmp
adc
jg
mov
arpl
shlb
pushf
and
sarb
shlb
mov
test
addr16
and
sub
mov
andl
cmp
push
gs
or
cli
aaa
pusha
data16
aaa
mov
mov
xorl
or
push
pop
lret
push
js
leave
hlt
lods
mov
mov
jge
jb
dec
imull
movsb
and
jbe
fwait
shl
mov
out
push
sbb
push
add
add
dec
sarb
int
push
push
cmp
shrl
inc
mov
lahf
daa
jbe
xchg
sti
pusha
fimuls
inc
dec
cmp
mov
pop
ljmp
xchg
or
imulb
lcall
jge
addr16
cmpb
cmp
into
movsb
ficoms
scas
sub
ja
mov
cmp
aaa
addr16
ret
out
pop
fists
and
inc
insb
rcr
scas
jno
fbld
mov
addr16
sub
xchg
gs
xchg
mov
push
jno
jg
mov
dec
int3
lcall
ffreep
and
rclb
pop
fwait
iret
int
aad
push
inc
test
fcmovu
mov
sbb
cli
jne
jl
pop
leave
enter
ret
xlat
in
and
adc
dec
repnz
insb
inc
add
mov
xchg
test
rclb
cmp
jecxz
dec
sti
test
push
dec
imul
jge
adc
out
ds
and
sbb
movsl
clc
pop
lods
push
push
dec
in
fdivrs
cli
sbb
inc
xor
mov
mov
inc
inc
cli
xchg
ds
frndint
loopne
jne
jmp
mov
out
aas
ja
sub
mov
int
cwtl
fs
les
insb
dec
add
adc
mov
push
lret
sub
out
and
insb
shll
andl
lods
fldcw
test
adc
xchg
inc
movsb
adcl
enter
and
sub
lret
fs
push
lea
adc
inc
es
pop
js
test
push
push
lods
jge
xchg
mov
mov
push
in
jmp
jmp
push
ds
cmp
xchg
out
jns
cmp
adc
inc
cld
adc
inc
shr
shll
cmp
and
aas
push
sub
mov
jbe
or
add
aad
pusha
filds
aaa
mov
push
push
push
outsb
outsl
loop
das
and
xor
inc
aad
sbb
jb
jno
xlat
inc
fucomip
mov
adc
and
add
into
xor
sub
out
sbb
add
mov
imul
push
mov
lods
fcomip
add
xchg
push
pop
cmp
dec
ret
gs
arpl
aad
cmp
add
push
in
xchg
mov
jecxz
subl
mov
lret
outsl
xchg
adcl
push
sub
adc
push
ss
add
jmp
sbbb
sahf
adc
or
jp
xor
inc
and
xchg
jb
loop
nop
mov
jno
out
adc
shl
outsl
movsb
imul
xorl
cmp
mov
ds
fldenv
movntq
rorb
mov
cld
push
sub
lods
pop
dec
or
push
jno
sbb
and
sbb
out
push
pop
add
push
data16
jmp
loop
out
andl
dec
mov
sbb
and
test
out
xor
sarb
jle
mov
adc
adc
lea
js
push
stos
mov
jbe
aaa
dec
push
push
xchg
ja
mov
cmc
inc
loope
sub
mov
inc
and
test
jnp
sti
mov
push
inc
fdivs
push
out
sbb
mov
int
add
frstor
call
shlb
mov
pop
mov
xchg
aaa
ficoms
les
imul
mov
je
stos
icebp
cmpsb
repz
xchg
xor
outsb
scas
pop
cmpsl
sbb
dec
add
mov
rclb
imul
xor
push
lods
cmc
inc
addr16
out
insl
xlat
mov
test
jno
mov
movsl
inc
mov
jo,pn
xlat
daa
or
daa
push
dec
cmpb
ja
mov
out
cmpsl
imul
dec
pop
and
movsl
pop
das
inc
rorl
push
pop
jo
sub
sub
dec
xor
add
mov
stc
mov
int3
push
and
mov
push
jp
js
movsb
in
std
and
push
pop
repnz
xchg
or
cmp
ret
mov
xlat
push
push
xor
add
mov
push
xchg
push
cvtdq2ps
xchg
scas
in
pop
pusha
lock
stos
jle
push
and
fs
mov
inc
xchg
movsb
aad
xchg
ret
fs
xlat
adc
mov
fs
push
jnp
cmpsb
push
add
test
pop
lcall
lds
lea
ja
pop
mov
and
mov
mov
pop
cmc
mov
mov
pop
cmpsl
rorb
push
aaa
xor
xchg
sti
int
push
repnz
xchg
or
pusha
aaa
and
movsb
sub
sub
stos
outsl
ficomps
test
adc
dec
inc
les
aas
ss
mov
xor
mov
mov
pop
push
push
jg
ja
or
pop
lcall
push
jno
je
imul
push
mov
push
cld
in
je
lcall
dec
lods
push
lods
jp
sbb
push
pop
mov
lds
sti
sub
cmp
cmp
and
mov
bnd
push
and
dec
or
dec
sti
incl
loope
popf
fistpl
iret
iret
je
mov
inc
xchg
sbb
rcll
push
clc
or
or
ja
jmp
push
sub
loop
jno
xor
movsb
add
cmp
push
mov
cmc
jo
leave
call
mov
jb
mov
xor
push
addr16
outsb
repz
adc
movsl
jo
clc
cmpps
jb
mov
pop
fisttps
jmp
shll
sti
lcall
ret
cmpsl
jne
inc
cmp
jae
jns
in
dec
clc
bound
ds
cs
jb
jnp
arpl
pop
sbb
lods
nop
xor
jno
push
mov
dec
mov
xor
mov
les
repnz
fsubrs
lahf
addr16
jecxz
push
call
out
pop
jo
jecxz
cmp
punpckhdq
pop
sub
popa
and
adc
pop
iret
adc
pop
incb
push
mov
in
int
mov
out
fsubp
das
mov
leave
jge
jmp
out
push
inc
movsl
jle
imul
repnz
and
mov
or
or
insb
out
inc
xor
jecxz
add
cmp
push
ficomps
lods
sub
adc
fistpl
pop
jbe
add
push
jbe
dec
dec
lock
stos
sub
gs
jno
outsl
push
popa
scas
test
adc
dec
push
cmp
and
lret
out
sub
xchg
or
fiaddl
mov
push
xor
mov
lahf
push
cmp
ret
dec
mov
data16
inc
pop
cmpsb
cmpsl
cmp
push
ljmp
mov
bound
imul
jo
xor
movsl
and
cmp
dec
popa
cltd
mov
lds
cli
nop
jl
pop
dec
add
ja
push
pop
xchg
jg
je
pop
das
scas
movsb
dec
ficompl
fucomip
lds
gs
negl
mov
lods
add
sub
das
xchg
pop
mov
pop
inc
adc
mov
fbld
inc
jge
and
pop
or
inc
jo
div
nop
fsts
pop
xor
jne
loope
repz
enter
fwait
das
aaa
xchg
sub
repnz
in
xchg
icebp
ss
mov
repnz
ret
lods
inc
mov
xor
ss
and
ss
push
icebp
ret
jno
ss
cmpl
and
xlat
sbb
dec
std
push
push
push
jp
push
mov
jl
lds
dec
mov
adc
and
ss
xor
push
rolb
cmp
ret
sbb
dec
push
jbe
inc
mov
dec
xchg
movsb
lock
cmp
inc
push
movsl
and
repz
push
fimull
pop
out
outsb
in
dec
mov
ficompl
bound
dec
call
inc
insb
ret
sub
ss
xchg
insb
pop
pop
or
sbb
dec
fisttpll
sbb
xchg
repz
shrb
cs
xchg
push
jnp
mov
cmp
popw
mov
cltd
scas
xchg
sub
and
mov
loopne
les
mov
jne
mov
mulb
icebp
and
push
sub
stos
jge
lea
jmp
adc
pop
cltd
stos
ljmp
rorl
cs
jbe
clc
push
mov
xchg
jmp
pop
sub
cmp
jo
scas
cmpsb
jns
jmp
les
or
dec
pop
jmp
ljmp
int3
pop
sbbb
inc
movsb
shrl
pop
add
adc
mull
cmc
rolb
not
mov
mov
pop
jbe
jns
cmc
outsb
xor
icebp
push
push
clc
lahf
shrl
jbe
es
add
xchg
out
mov
jo,pn
push
sahf
push
xchg
aad
test
mov
push
fwait
ret
repz
ss
clc
sbb
nop
push
pop
mov
test
xorb
xor
aaa
inc
mov
jb
out
or
jb
pop
aaa
push
xor
mov
jmp
cwtl
imul
bound
pop
popa
mov
inc
loope
sbb
push
gs
aas
lcall
mov
mov
sbb
mov
jno
lods
leave
push
pop
lods
xchg
loope
mov
dec
jae
dec
pushaw
stos
pop
ljmp
icebp
jmp
cmp
arpl
dec
jns
int3
adc
push
jns
jb
arpl
popa
out
push
mov
jno
js
jbe
lock
rclb
rclb
psrlq
ja
jb
repz
and
scas
cwtl
test
sarl
fs
sarl
push
jb
mov
addl
int
fcoms
loop
jecxz
dec
xchg
out
into
xlat
nop
dec
bound
shlb
inc
ja
bound
mov
and
adc
int3
xchg
cmp
xorl
add
inc
jo
ljmp
xchg
sbb
mov
test
jmp
lock
bound
mov
push
push
sbb
and
push
cmc
pop
jle
jle
adc
sub
popa
data16
sub
repnz
ret
add
lods
pushf
lahf
es
scas
in
jmp
mov
sbb
mov
adc
ficoml
jo
jmp
cmpsl
jp
in
mov
or
and
xor
addr16
icebp
cmp
inc
stos
outsb
mov
clc
push
fcoms
iret
aad
fimuls
fxch
js
dec
ss
mov
sbb
insb
rcrl
loopne
mov
mov
jmp
out
pop
outsl
fiadds
dec
xor
js
stos
hlt
jl
test
xlat
popa
mov
stc
fildl
psllw
js
loopne
test
xor
jae
pop
mov
cmp
sbb
push
jmp
sub
cmp
nop
sub
loop
add
imul
mov
cmp
adc
notl
loop
jo
lock
jle
ja
fsubr
pop
cmp
mov
in
cli
cmp
pop
xor
rcr
fcompl
adc
adc
loope
push
mov
ret
mov
arpl
out
dec
mov
bound
lds
jns
mov
push
xchg
pop
mov
pop
and
fisttpll
add
jne
xor
lods
lock
mov
cmp
icebp
cwtl
push
imul
push
loope
cmp
pop
xor
push
mov
cmp
push
nop
cmpsb
adc
add
cmp
cmpsl
mov
dec
je
negb
jne
mov
dec
mull
ss
aaa
roll
mov
jae
ss
out
adc
inc
stc
xchg
adc
aam
jo
xchg
das
adc
jno
lods
jge
xchg
xchg
cld
xor
push
push
outsl
adc
sbb
mov
pop
sbb
js
cld
jge
lock
gs
xchg
popa
loopne
jp
sbb
gs
xor
mov
xor
shrb
loopne
js
imul
mov
insb
insb
sub
out
sarl
clc
insb
stc
and
and
cmp
shlb
xlat
sub
xor
sbb
push
xor
jbe
dec
mov
mov
cmp
dec
mov
pop
push
mov
ja
mull
jno
ss
jnp
scas
mov
inc
jo
mov
lcall
sub
test
mov
rcrl
jl
out
mov
pop
icebp
mov
pushf
cwtl
shlb
adc
inc
je
ljmp
fucomip
add
mov
imul
cwtl
arpl
in
pop
scas
sbb
imul
sub
push
out
js
xor
aas
push
jl
pop
jne
in
dec
in
adc
add
or
scas
repnz
nop
mov
mov
pop
jle
stos
dec
mov
fcmove
mov
sti
pop
filds
xor
imul
pop
and
sub
xor
or
push
and
xor
mov
cs
pop
mov
sbb
lds
iret
mov
pop
sahf
repz
jno
mov
add
inc
dec
test
sbb
mov
mov
movsb
fs
pusha
mov
xchg
repz
or
dec
mov
call
adc
pop
lea
stos
shrl
test
aam
mov
xor
pop
movsb
and
test
dec
mov
popa
push
pop
xchg
lock
or
xor
xchg
mov
repz
lods
mov
ds
scas
test
fisubrs
repz
rorl
cmp
cmc
leave
pop
pop
into
cmp
sarl
repz
fiaddl
pop
or
fldcw
icebp
jnp
pop
push
cmp
clc
mov
cmp
mov
jo
sub
push
mov
adc
adc
pop
push
sub
pop
insl
jns
mov
aas
jecxz
cmp
jo,pn
xchg
cmc
gs
push
popa
lods
pop
js
aas
imul
jmp
mov
mov
data16
inc
mov
xlat
sub
sbb
lret
jnp
ja
push
lcall
sbb
fadds
adc
test
scas
fstl
push
testl
mov
pop
cmp
in
incl
dec
or
sub
das
dec
stc
jbe
inc
jge
cmp
pop
jge
pusha
pop
jbe
leave
cmpsl
push
push
call
mov
dec
inc
mov
pop
jg
mov
inc
out
jne
inc
bound
pop
mov
gs
mov
pop
mov
mov
sub
out
loope
les
and
dec
pop
outsl
shr
mov
and
out
push
outsl
lret
or
and
leave
mov
jp
popa
call
adc
pop
scas
mov
lret
ret
push
jmp
xchg
jmp
icebp
es
cmpsl
stos
fs
sti
rclb
imul
push
jmp
ret
pop
push
in
ljmp
push
mov
mov
sbb
ret
mov
out
add
xchg
inc
cmpsb
push
push
fwait
test
inc
leave
jmp
cmc
lcall
xchg
mov
pop
lahf
inc
or
es
sub
mov
mov
je
int
add
mov
xor
and
cmp
push
mov
hlt
jmp
jo
les
imul
int
mov
gs
imul
outsl
cmp
and
int
cwtl
lahf
int
insl
push
pop
jno
je
inc
ret
cmp
xchg
pusha
mov
push
in
or
xchg
sahf
bswap
pop
xor
mov
and
mov
addr16
sub
mov
fsubr
add
add
lcall
mov
mov
int
jo
in
push
mov
add
or
jle
fadds
dec
sub
pushf
jecxz
repz
pop
stos
je
data16
stos
push
outsl
addr16
jmpw
jno
shll
adc
or
sahf
xchg
lds
test
cltd
cmp
sub
je
cltd
leave
into
fcomps
push
lahf
loopne
jns
mov
fcompl
lods
push
in
popa
shll
jae
cmp
sub
repz
jp
cmp
cli
sub
xchg
iret
pop
and
test
pushf
xorb
ret
xchg
inc
push
outsl
mov
das
push
repz
sbb
or
stos
dec
jae
jmp
scas
cmp
push
mov
add
xor
jo
xchg
push
push
negb
imul
push
push
mov
push
dec
cmp
xor
clc
pop
scas
push
xor
and
mov
sub
jo
xchg
stos
mov
fsubrs
cmp
je
and
testl
push
nop
mov
mov
dec
int3
jb
dec
fdivl
mov
and
push
popf
fstpt
fcmovnu
iret
cmc
shlb
jo
dec
cmc
xchg
xchg
xor
push
jnp
inc
cld
fistps
test
lods
stos
lcall
push
sbb
arpl
mov
fldt
stos
shll
lods
stos
cmp
je
fnsave
gs
test
fwait
add
jb
clc
std
push
ja
adc
dec
bound
cld
sbb
test
xchg
inc
je
push
jmp
addb
sbb
and
js
in
sub
mov
in
cmp
cmp
orl
mov
ljmp
stos
pop
filds
mov
aaa
popa
scas
mov
mov
inc
in
aaa
scas
adc
or
aaa
lods
adc
mov
lock
dec
mov
dec
xchg
lds
lcall
ja
sub
lcall
hlt
dec
imul
dec
fbld
dec
sub
stos
or
xchg
std
lcall
out
test
sub
jb
je
stos
xor
insb
or
adc
sub
sub
xchg
xlat
je
push
je
xchg
mov
dec
xor
xchg
fldt
jmp
sub
insl
cltd
xchg
dec
imul
push
push
mov
xlat
cmp
push
je
shll
xor
push
scas
popa
sub
std
push
outsb
popa
sub
mov
xor
push
cs
sub
stos
mov
lock
sub
push
mov
movsl
repnz
int
jae
lcall
xchg
and
xchg
test
insb
leave
cmpsb
lds
or
mov
xchg
mov
outsl
imul
lock
lock
push
inc
jbe
jmp
lret
jb
xor
pop
out
movsb
mov
jno
pop
xor
pop
aad
bound
push
xchg
xchg
inc
stos
cmp
adcb
sbb
loope
xor
sub
mov
lea
lret
mov
fwait
ret
lods
jno
xor
loope
mov
mulb
xor
je
outsb
mov
imul
inc
loope
idivb
andb
bound
jb
ret
mov
mov
subl
in
rcrb
xchg
out
mov
jg
pushf
adc
je
add
push
jmp
div
sbb
dec
lcall
icebp
pop
ds
pusha
jmp
fdivl
popf
stos
pusha
jbe
pop
test
mov
repnz
add
ja
pop
cwtl
in
or
and
jns
jle
sub
xor
fidivl
mov
testb
test
enter
mov
inc
add
imul
pop
out
xchg
imul
jb
cmp
push
cmp
movsb
rclb
in
fistl
add
lds
scas
stc
lods
or
xchg
in
icebp
adc
pop
jmp
and
cli
in
adc
lods
adcl
mov
jo
cmp
push
mov
ja
cmp
inc
push
movsb
add
mov
add
pop
iret
adc
leave
mov
shll
push
jge
inc
imul
or
mov
xor
sbb
dec
ret
insl
shr
jbe
repz
sbb
add
xchg
jae
popa
icebp
jae
xchg
hlt
sub
xor
jno
bound
lods
and
cld
addb
cmp
adc
pop
mov
insb
jmp
es
iret
push
es
mov
mov
fucomi
xor
pop
outsb
pop
pop
push
stc
icebp
xor
les
fcoms
jne
arpl
rol
ds
cli
stos
mov
dec
mov
push
nop
xor
add
js
jne
xor
mov
mov
adc
xchg
inc
cmp
add
mov
push
mov
cld
jne
in
rorb
ss
adc
jmp
scas
call
call
popf
pushf
mov
sub
xchg
adc
lahf
mov
and
fwait
xor
leave
ja
dec
or
js
nop
mov
xchg
pop
out
jecxz
jns
in
mov
data16
fwait
scas
cmp
lds
sbb
cmc
int
scas
jge
je
inc
je
mov
jbe
sbb
aam
je
mov
ljmp
je
cs
jecxz
sub
jb
cmc
mov
pop
mov
add
adc
jb
mov
mov
add
mov
arpl
sub
and
mov
push
sbb
in
and
push
add
or
adc
lods
mov
stc
jp
mov
and
imul
mov
mov
xchg
mov
jbe
inc
pop
lret
mov
jge
das
inc
insl
jns
sti
jo
sub
pushf
jge
xchg
test
dec
daa
outsl
push
pop
scas
jle
and
jmp
jb
adc
test
add
mov
icebp
and
das
inc
pop
lods
mov
js
enter
test
mov
outsb
mov
and
addr16
sbb
xor
sub
pop
in
test
mov
loope
xor
jl
mov
pop
mov
ret
mov
push
mov
jmp
mov
or
fwait
repnz
cmp
das
jb
jl
and
jl
sub
test
movsb
popa
pop
outsb
js
cs
cli
cmp
and
push
das
popa
sub
hlt
xor
divl
ja
mov
push
jne
mov
mov
scas
jb
sti
pop
repz
pop
dec
lret
dec
lods
sarl
jmp
shll
xor
mov
mov
bound
adc
jnp
sbb
fisubrs
je
or
adc
adc
sub
mov
pop
cmc
or
mov
inc
out
adc
sti
fiadds
testl
jle
jecxz
in
out
lret
push
add
inc
mov
call
adc
repz
mov
mov
adc
sub
push
adc
push
lds
loop
mov
push
outsl
ljmp
jno
movsb
scas
adc
pop
mov
push
mov
cmpsb
aaa
test
imul
dec
and
sti
nop
push
mov
mov
adc
sahf
xchg
sub
xchg
sbbl
dec
jne
shlb
scas
clc
or
fadds
out
or
ss
jle
and
add
mov
jp
mov
addb
mov
mov
lock
in
ds
push
sub
mov
or
aam
jno
sahf
mov
pop
cmc
xchg
push
inc
cs
push
mov
mov
mov
lds
loop
xor
or
mov
xchg
and
movl
mov
in
pop
mov
movsb
pop
inc
outsb
test
pushf
pop
inc
pusha
and
xor
mov
mov
outsb
mov
add
fdivrl
xor
push
push
lret
sub
add
pop
test
mov
mov
ret
inc
dec
sbb
mov
bound
push
mov
in
mov
stos
pop
push
shlb
aam
cmp
popa
and
in
add
sub
xor
cmp
or
add
je
and
call
and
mov
mov
mov
dec
push
mov
mov
mov
imul
mov
les
lcall
pop
inc
dec
or
inc
clc
fsubrl
pop
mov
mov
movsb
es
xorb
dec
push
mov
mov
mov
es
stc
cmpsb
xor
push
mov
sti
in
sub
xchg
push
scas
shrl
add
jne
push
fsubrl
fisubrs
mov
hlt
jo
or
push
add
push
mov
lea
sub
out
ret
xor
pop
test
xor
mov
jmp
adc
and
mov
cmpsl
add
push
rclb
mov
in
shll
fs
jb
pop
mov
je
rolb
aam
and
jge
or
add
push
add
jo
jb
test
fwait
into
dec
jae
mov
imul
pop
mov
mov
aam
xor
scas
or
call
enter
xor
xchg
mov
jae
bnd
jo,pt
bound
call
inc
add
mov
inc
jns
sub
stos
mov
adc
adc
sub
xor
dec
arpl
mov
push
xor
or
mov
jne
imul
pop
mov
or
es
mov
pop
shlb
cwtl
js
xchg
inc
pop
mov
push
xchg
push
ficoml
or
shrb
mov
jecxz
int3
xor
push
xchg
jno
xchg
jb
and
sahf
add
mov
fimuls
sub
ja
add
outsb
orl
add
jle
mov
inc
dec
push
notb
add
add
mov
xor
mov
mov
repz
cmpsb
hlt
and
jp
mov
inc
dec
pop
dec
push
push
cmc
roll
xchg
mov
call
push
jnp
mov
push
mov
jne
xchg
mov
in
sub
cmc
cld
and
icebp
xor
pusha
ja
mov
mov
jle
lcall
cmp
xchg
mov
mov
mov
dec
aaa
aam
and
and
add
or
pop
jne
clc
push
ss
jbe
out
movsb
fwait
sub
nop
lcall
xorl
test
pop
fsubl
jl
push
fcoms
repz
mov
js
push
roll
clc
mov
in
shrl
sub
sbb
ljmp
push
icebp
xor
dec
xchg
cmp
add
cmp
fld
stos
cmp
ljmp
imul
leave
sbb
int
bound
add
sti
cmp
xorb
push
imul
or
gs
inc
cs
mov
in
dec
push
call
repnz
or
imul
mov
pop
mov
inc
arpl
adc
int3
outsb
pusha
fsubl
in
es
loop
and
pop
adc
out
fnstcw
or
out
add
sbb
out
fbstp
push
rolb
in
or
dec
mov
int3
out
movsl
in
jbe
xor
mov
sub
xchg
push
out
and
push
push
dec
cmp
push
pop
pop
scas
loopew
xchg
mulb
data16
jl
sbb
lgs
js
cld
in
out
in
scas
in
sahf
jne
and
aas
scas
jne
xor
adc
cmpsb
push
std
out
daa
cmp
int
mov
lret
lret
sbb
pusha
pop
in
push
and
jne
ret
fcoml
fistl
pop
es
inc
stc
inc
mov
mov
mov
xor
pop
daa
sub
dec
lock
jne
fwait
stc
sbb
ja
test
mov
fwait
xor
les
into
scas
jne
or
push
lret
pop
jo
cmpsb
xchg
pop
rcr
dec
movsl
setnp
inc
ja
or
pop
push
jbe
xchg
mov
add
pop
test
insl
outsl
mov
and
rol
mov
adc
mov
fdivrs
daa
push
into
mov
mov
repnz
xchg
inc
fcmovu
cli
in
mov
adc
pop
mov
jl
cmpb
sbbb
sub
jmp
pop
out
sub
push
pop
data16
push
xor
repnz
jno
and
cld
adcb
jp
icebp
lock
lods
add
or
lcall
movsb
movsb
pop
shll
scas
pop
ss
out
push
xor
sti
and
mov
and
cmp
mov
ret
inc
loope
ret
sub
adc
jbe
xor
call
sbb
cmpb
test
jo
jecxz
jle
jbe
daa
addl
mov
xor
push
pop
mov
dec
mov
lods
adc
mov
inc
clc
clc
xor
loopne
xor
xchg
add
sub
jmp
pusha
lret
rorb
test
mov
or
aas
pop
test
js
ja
or
mov
mov
stc
xorb
adc
sbbl
adc
ds
sbb
push
mov
repz
xor
add
sub
imul
popf
cmp
adc
cmp
mov
and
ret
mov
jno
or
stos
and
xchg
and
popa
lods
mov
mov
and
sub
jne
inc
cld
jae
push
adc
aaa
cld
ret
pop
adcl
adc
pusha
je
xchg
cli
ja
into
cs
movsb
and
rorl
mov
pop
jle
lea
jecxz
ss
inc
add
adc
notb
mov
mov
imul
add
mov
pop
push
and
mov
sbb
push
repnz
leave
add
test
enter
mov
sbb
pop
pop
out
add
int3
call
add
pop
mov
mov
xchg
mov
xchg
ljmp
lahf
mov
inc
push
int3
incb
pop
hlt
and
pop
push
and
mov
cs
pusha
jno
jns
mov
jge
dec
cmpsb
and
rol
adc
xor
scas
mov
lods
mov
cmp
or
and
push
xor
cld
pop
push
push
sahf
popa
mov
adc
sti
sbb
inc
xchg
push
sbb
aam
stos
jnp
xor
pop
push
insb
jle
lods
jge
repnz
xchg
xor
ret
jae
clc
push
mov
sub
ljmp
lea
and
mov
mov
shll
push
in
push
inc
jbe
pop
adc
xlat
scas
cmc
rclb
mov
aas
mov
push
adc
jo
mov
cs
add
jmp
mov
jb
or
inc
cld
xchg
ds
sub
adc
clc
mov
or
push
add
xchg
mov
cmc
lock
adc
jge
add
mov
mov
es
adc
scas
shlb
insl
rorb
push
xchg
ret
loop
xor
and
or
push
cld
xchg
ds
sub
and
adc
inc
or
stos
inc
cld
xchg
ds
mov
sar
mov
les
xor
mov
push
and
and
popf
in
add
outsl
fdivl
aas
shrl
repnz
inc
aad
inc
cmc
bound
insb
lods
pop
adc
pop
sarl
iret
xor
pop
ss
pop
push
push
xchg
or
stos
xchg
cld
xchg
ds
or
mov
cmp
xchg
clc
cmp
scas
out
jbe
add
or
test
push
adc
dec
or
sub
jbe
loope
xorb
mov
sbb
jge
sub
movsl
leave
cmp
lea
outsb
mov
divl
jae
jbe
shlb
jb
rol
pusha
jne
dec
call
inc
pop
or
jnp
aas
mov
push
aaa
out
cli
xchg
cltd
insb
mov
cld
js
mov
js
jbe
scas
jbe
mov
test
xor
push
mov
sarl
and
mov
dec
xor
mov
adc
push
jne
xchg
adc
xor
sbb
test
inc
mov
lods
jno
cmpsb
imul
pop
lcall
mov
dec
xchg
add
push
jmp
mov
inc
sbb
xor
adc
xchg
mov
imul
fbstp
enter
dec
in
cld
orl
jg
sar
arpl
jl
cmp
cmpl
andl
or
fists
icebp
out
lcall
jecxz
pop
mov
cmp
or
repz
mov
or
or
sbb
mov
jbe
adc
mov
adc
cmp
je
test
mov
jns
popa
push
lea
or
inc
call
adc
pushf
ss
jge
jg
into
loop
jne
dec
xchg
scas
mov
je
push
int
add
xchg
jg
sbb
mov
addb
outsb
cmp
push
mov
push
pusha
xacquire
gs
jns
sub
inc
les
mov
adc
loopne
sub
push
into
lcall
sbb
push
sbb
inc
adc
jb
mov
fdivrs
jae
in
ljmp
push
stc
and
xchg
push
loop
or
and
ficoml
stos
out
sbbb
je
cmc
daa
push
push
pop
lds
or
or
loopne
mov
jg
inc
jo
or
adc
and
push
or
jb
add
push
inc
ret
cmp
enter
call
cmpsl
fsubs
pusha
sti
sub
sbb
cld
rcrb
lea
inc
cmpsb
and
lcall
mov
sbb
and
fiadds
pop
inc
mov
jmp
loope
stc
scas
push
scas
push
loop
jb
pop
push
into
inc
jo
fwait
mull
popa
push
pop
xor
jo
sbb
jle
push
out
add
lds
inc
test
fiadds
jne
hlt
xor
push
mov
push
jle
and
bound
insb
jnp
outsb
dec
int3
call
movsb
jbe
fimull
add
mov
outsb
testb
loopne
iret
jns
dec
loope
fwait
sub
imul
mov
lods
adc
fdivp
ficomps
ficoms
out
cmp
fidivrs
pusha
pop
sub
js
stos
mov
push
sub
jge
pop
mov
out
insb
lock
icebp
mov
push
push
sub
rorl
and
cmc
cld
mov
push
lds
imul
rorl
jmp
jmp
ja
movsl
int3
fidivrs
stos
aam
and
aaa
ficomps
jbe
in
xor
sbb
iret
adc
or
mov
push
sub
xor
stos
lahf
ljmp
fsubl
sub
inc
ljmp
push
add
stos
jbe
sub
sub
hlt
add
cltd
enter
adc
aas
mov
push
and
push
or
fs
or
nop
mov
cwtl
sub
int3
cmpl
mov
push
aam
cli
push
lcall
lods
mov
and
icebp
fistl
sahf
pop
lock
sub
outsl
lock
mov
adc
mov
testb
xchg
add
cmpsb
adc
xor
mov
sbb
sub
xlat
mov
cli
into
sbb
mov
lcall
pop
cmc
shlb
sti
pop
leave
dec
sarb
pop
lcall
or
xchg
test
dec
cwtl
call
mov
icebp
pushf
xlat
cmp
push
push
scas
rcrb
nop
mov
scas
bnd
subb
dec
pop
mov
jo
add
mov
and
jmp
outsb
cmpsl
adc
jns
sub
inc
rcr
mov
or
mov
mov
sub
les
cmp
cmp
push
aad
mov
ret
push
repz
repnz
in
hlt
xchg
push
push
jmp
sahf
mov
cltd
jo
mov
sbb
fsubrl
inc
mov
mov
pusha
fisubl
sub
pop
cmp
jl
jmp
inc
mov
jg
mov
js
xor
movsb
pop
gs
or
aam
bound
add
mov
jmp
xor
test
push
sub
insb
inc
imul
jg
int
push
mov
lret
into
sub
pop
ds
jns
jns
lahf
jmp
mov
imul
xor
mov
ds
int3
mov
sub
mov
lret
shlb
adc
xor
loope
pop
test
push
cmp
xchg
jbe
adc
fsubr
xchg
mov
cld
and
pop
dec
push
push
je
sub
popf
scas
xchg
hlt
pop
mov
out
dec
push
in
push
xchg
push
push
repnz
repz
in
shufps
popl
subl
xor
add
andl
pop
aaa
xor
adc
and
adc
js
push
pop
cmpl
mov
push
mov
jp
jge
cmc
sub
sbb
xchg
or
push
dec
in
mov
mov
mov
popa
and
push
mov
push
cmp
push
test
and
pop
sub
pop
push
or
push
dec
xchg
xor
gs
mov
sub
loope
pop
lea
inc
loop
xor
int
movsb
inc
jbe
xor
and
insb
xor
mov
inc
cmc
or
shlb
in
subl
jo
mov
repz
xor
mov
inc
repz
fnsave
iret
adc
jno
adc
push
jp
adc
adc
push
xor
mov
add
fidivl
fidivl
jp
and
pop
xor
mov
mov
rorl
add
pop
mov
out
and
sbb
sbb
add
pop
adc
jne
sbb
push
outsb
dec
clc
lds
ficompl
mov
add
fs
inc
ja
xor
and
insb
jne
mov
inc
cmc
or
pop
and
and
push
repz
xor
mov
add
mov
push
out
lods
mov
repz
out
mov
pusha
rclb
ficompl
push
mov
xchg
mov
repnz
or
push
rclb
inc
add
popa
dec
or
sbb
cld
ss
adc
aaa
pop
mov
add
xor
mov
inc
jle
stos
jmp
mov
inc
push
jb
lock
jns
jecxz
push
leave
push
jb
hlt
mov
clc
mov
sub
xor
jp
and
arpl
fwait
adc
dec
icebp
jb
jae
icebp
jb
mov
cmp
mov
fcmovne
cs
stos
and
push
adc
xchg
push
jmp
imul
xchg
push
xchg
bound
add
inc
popa
iret
sti
shll
mov
cld
add
and
fisttpl
test
cmpsb
test
lcall
movsl
sbb
mov
lea
cmpsb
sub
lcall
push
cmp
dec
das
daa
stos
mov
push
inc
sbbb
ret
bound
ljmp
jp
adc
or
popf
or
add
es
mov
mov
stos
sbb
outsb
stos
inc
fs
xor
lock
sahf
xor
inc
push
shll
xor
xor
ja
xlat
jmp
and
pop
add
popa
sarl
mov
stc
cmpsb
dec
inc
jnp
stc
inc
stos
fiaddl
out
std
test
cmp
ret
call
sub
daa
or
imul
inc
mov
call
pop
repnz
cli
stos
aas
rolb
ja
push
mov
loope
jbe
in
xor
jecxz
sub
mov
pop
mov
aam
ja
test
cld
sbb
js
cli
not
jno
ljmp
jae
lods
sbb
jae
xor
sbb
into
mov
dec
out
and
sub
movsb
sub
mov
push
mov
out
mov
or
jo
pusha
fsubrs
cmp
pop
cmp
fidivs
ja
icebp
lea
pop
pop
scas
test
arpl
mov
sbb
orps
stos
outsl
loop
push
icebp
adc
subb
add
xor
mov
sbb
roll
inc
loop
in
mov
addb
jnp
rcrl
dec
add
or
imul
push
lcall
test
jbe
push
push
adc
push
pop
mov
jle
sub
shrb
cmc
xchg
mov
mov
dec
sub
test
mov
cmp
insl
aas
dec
lods
cmp
xlat
xchg
push
pop
push
out
outsb
gs
xchg
cmp
test
sbb
lret
and
or
inc
inc
sbb
lret
cld
clc
stos
jp
aaa
fsubs
ja
jmp
lahf
push
push
pop
dec
and
cltd
lahf
pop
push
push
mul
mov
insl
xchg
add
and
or
add
lahf
popf
pop
xchg
push
leave
orl
push
pop
pop
rclb
lcall
inc
cmp
mov
sbb
fisubrs
lahf
inc
jb
add
into
push
sti
pop
je,pt
xor
lahf
and
bound
jl
fmul
mov
add
les
push
scas
rcrb
ljmp
or
enter
lahf
push
mov
push
push
add
xchg
mov
cltd
lahf
fwait
xor
push
mov
jnp
mov
xor
into
jecxz
mov
daa
lahf
test
outsl
add
mov
sbb
negb
pop
js
push
dec
je
cmp
arpl
jl
inc
push
pop
jne
imul
jmp
jb
mov
aam
cmp
ret
jmp
fld
in
mov
hlt
mov
mov
mov
sub
jne
jl
das
inc
andb
mov
xor
stos
mov
xchg
adc
push
movl
or
jb
loope
adc
mov
sub
and
mov
mov
inc
sbbl
movsb
xor
lahf
fdivl
popa
xchg
aad
sub
add
mov
jl
dec
sbb
shl
jmp
rcrb
sub
ja
cmc
sbbl
lahf
xor
and
pop
aaa
xchg
aam
inc
mov
sbb
xchg
mov
fdivl
cli
xchg
pop
mov
cmc
mov
xorb
and
ja
in
and
dec
jne
mov
hlt
fisubl
cmp
into
xor
cmp
fnstsw
orb
mov
pop
and
jbe
ror
les
daa
jo
mov
fnstsw
loop
pop
mov
repz
or
mov
shll
clc
mov
fistpll
iret
test
call
jle
mov
call
or
pop
aam
sub
test
pop
sahf
dec
lcall
inc
mov
xchg
stc
mov
mov
adc
and
xchg
add
pop
add
les
stos
jae
mov
mov
sbbl
xchg
add
pop
dec
stos
push
mov
mov
jne
inc
dec
xor
pop
sbb
adc
fdivl
shlb
sub
test
xor
or
ja
fdivl
inc
sahf
mov
sbb
mov
aas
xor
loop
jae
stos
in
jae
cmp
add
mov
mov
pop
outsl
dec
and
sarb
mov
lods
aaa
jae
ret
cli
notw
jmp
subb
mov
out
icebp
push
imul
test
in
cwtl
fisubl
cmp
sub
jb
pop
jno
pop
jle
arpl
imul
pop
push
mov
aaa
out
pushf
repnz
inc
das
cltd
scas
call
mov
fsubp
add
or
xor
test
addl
test
mov
inc
adc
data16
cmp
jl
inc
ljmp
push
mov
jl
push
or
clc
jle
xor
push
jmp
and
adc
popf
sub
xor
jbe
or
cld
lcall
jl
sbb
inc
fsubl
push
rcll
mov
out
dec
insb
repz
or
push
popf
dec
jne
test
das
lods
loopne
sarl
sub
and
push
repz
cmp
add
push
mov
xor
jecxz
fcompl
into
repnz
je
int
nop
inc
push
mov
fisubrs
jbe
fst
xchg
fstpt
ds
push
int
ljmp
cmp
mov
divl
mov
pusha
xchg
xor
jg
mov
inc
mov
xchg
mov
out
jne
clc
je
pop
rorl
jl
popf
enter
mov
outsb
popa
es
in
xchg
decb
mov
sbb
scas
jl
adc
sbb
mov
imul
sub
test
sbb
call
leave
cmp
fbstp
adc
jg
mov
out
pop
mov
adcb
adc
cmpl
sbb
jb
mov
and
xchg
pop
mov
bound
ljmp
mov
sub
push
stc
pop
daa
xor
and
sub
or
or
aaa
push
mov
and
sbbb
loopne
xchg
adc
notl
xorb
add
pop
jecxz
addr16
add
cmc
jne
jl
sbb
pop
cs
xchg
clc
stos
jns
pop
mov
or
add
push
and
sub
dec
jmp
jl
jb
mov
imul
test
es
popa
adc
mov
aad
cmpl
adc
inc
clc
cld
cmp
orl
insl
test
ret
or
jl
inc
mov
or
ret
jnp
jb
in
adc
hlt
repz
cmpsb
or
jns
jbe
int3
aaa
inc
popf
add
pop
pop
leave
out
dec
out
mov
mov
push
pop
jecxz
dec
ret
mov
and
and
jb
jmp
inc
dec
lds
jle
xor
cmp
enter
push
inc
movl
or
arpl
cmp
ds
imul
out
cmpl
fwait
ljmp
nop
adc
mov
push
subb
pop
add
push
push
inc
roll
jb
shrb
jle
rolb
in
fdivp
pop
or
sbb
pop
dec
add
or
decb
andb
inc
cltd
stc
mov
add
push
fcomps
add
cs
and
orl
inc
leave
ret
ds
pop
ljmp
daa
imul
xor
sbb
rclb
cmpl
push
inc
inc
ret
push
sub
and
mov
in
in
sub
adc
iret
fld
out
jecxz
adc
push
pop
scas
jge
ljmp
enter
mov
jno
push
bound
and
aad
and
fisttpl
movsl
movsb
pushf
sti
ret
cli
jb
jg
dec
je
add
fldenv
adc
dec
dec
andl
pop
pusha
jne
jge
push
leave
push
jae
jp
add
sub
sub
pop
subl
jle
xor
xchg
test
sarl
jg
in
mov
lcall
mov
subb
jp
insb
jecxz
pop
stos
mov
sbbl
mov
mov
out
dec
add
lods
mov
mov
push
inc
leave
sbb
insb
mov
xchg
ds
push
or
subl
sub
adc
repnz
inc
daa
and
jle
fiaddl
cmpl
and
es
mov
xchg
mov
lcall
xchg
pushf
arpl
stc
dec
hlt
loopne
lods
cli
lahf
dec
fwait
xlat
roll
icebp
xchg
mov
cmp
mov
idivb
divb
mov
shlb
insl
pop
mov
pop
out
xor
daa
lahf
fwait
hlt
add
cmc
dec
stos
aaa
popa
mov
ret
adc
cmpsl
or
push
cmp
mov
lea
out
xchg
jb
mov
rcll
ss
mov
jns
pop
orl
dec
cmc
push
or
adc
inc
mov
jnp
adc
push
add
xor
adc
adc
ja
dec
xchg
subps
xor
jno
repnz
cmp
adc
sub
or
adc
mul
or
lcall
bound
scas
mov
push
dec
jl
stos
pop
xor
push
adc
sub
dec
pop
mov
push
popl
or
repz
inc
pop
icebp
jl
dec
mov
sbb
or
pop
xor
jp
mov
cmp
outsb
and
xor
out
jl
aam
and
xor
push
mov
sub
cwtl
popa
jb
dec
push
cmp
sbb
push
andl
mov
xor
pop
int3
and
adc
ret
cld
adc
adc
push
or
enter
and
icebp
fwait
icebp
add
add
push
push
add
mov
and
lock
popa
adc
sub
loop
insb
je
stos
sub
sub
push
adc
dec
dec
jno
dec
cmpsb
xchg
and
mov
cmpb
fisubs
jecxz
push
dec
fucomip
aad
testb
cld
and
or
pop
sahf
push
aad
test
lds
inc
ds
push
and
cmp
pushl
in
dec
or
adc
jbe
or
insb
xchg
nop
xchg
lahf
mov
dec
ds
loop
sbb
ret
lahf
push
xor
mov
push
sub
pop
cmc
sub
xor
stc
cmc
sub
cld
and
stos
mov
roll
inc
jnp
push
xchg
ret
pushf
je
popa
xor
addr16
aad
sub
push
bound
add
mov
mov
inc
or
fwait
in
push
mov
lret
mov
pusha
inc
jecxz
subb
jbe
mov
fs
push
mov
pop
xor
jne
sbb
pop
js
cmpb
mov
add
jbe
divl
sbb
lods
dec
sbb
iret
scas
lret
aas
pop
lods
ficoml
pop
push
jne
sbb
lods
push
mov
and
inc
xor
cmp
stc
out
sub
fnstcw
sbb
into
mov
cmp
add
push
pop
pop
into
aaa
inc
out
and
xor
xor
sub
or
cld
mov
dec
push
test
out
jp
cmp
mov
icebp
sbbl
mov
or
mov
xrelease
adc
sub
fisubrs
dec
sbb
jnp
inc
cmc
jno
sbb
mov
pop
test
xorb
lret
cmp
cmp
and
push
subl
dec
jno
push
sub
test
insl
cmp
xor
ds
sbb
or
jns
push
rcrl
fisubl
sub
clc
scas
jmp
mov
or
mov
xor
adc
xor
push
pop
mov
and
movsl
sahf
ret
or
sbb
cmp
adcl
fidivl
sub
dec
shll
fadd
imul
gs
jp
mov
mov
and
jg
jl
pusha
xor
lods
dec
roll
sbb
movsb
rorl
jl
cmp
jp
jge
repnz
repz
xor
stos
out
in
fprem
sub
cmp
adc
jg
add
dec
loope
cmp
jecxz
sub
and
sub
pop
gs
push
jae
adc
push
xor
mov
aaa
or
xorl
pop
dec
ret
lods
sub
clc
pusha
test
add
inc
inc
int3
fnstenv
cmpsl
jle
jmp
lods
out
dec
popa
in
sub
sub
push
mov
andl
push
mov
incb
jne
fdivl
jecxz
xor
repz
dec
inc
fwait
stos
test
insl
jecxz
pop
js
loopne
loope
andl
mov
pop
jno
out
ds
dec
not
adc
pop
clc
gs
lods
cmp
mov
out
inc
pop
dec
popa
mov
pop
xchg
and
aam
test
mov
xchg
xor
pop
fmull
inc
jg
pusha
mov
das
mov
enter
add
sahf
and
cmp
or
xchg
mov
push
popa
fisubs
addl
out
push
jge
jno
hlt
fistl
cmc
push
js
push
insl
jno
lds
jle
cltd
cmp
mov
xor
push
loope
or
data16
add
push
fsts
pop
xor
mov
movsb
sbb
test
into
imul
cpuid
inc
xor
out
divb
sub
in
rcr
jb
lahf
call
repnz
xor
xlat
mov
popa
dec
into
push
push
pop
adc
adc
mov
cld
xchg
jb
adc
icebp
cmpsl
sub
cmp
pop
repz
aas
stos
cmp
insl
add
dec
push
nop
push
cmp
mov
or
inc
call
mov
insl
inc
ret
push
jno
pushf
hlt
and
stos
andl
adc
mov
sub
jge
push
dec
push
jge
adc
xchg
sub
push
jno
sub
bound
push
rolb
ret
dec
sbb
push
cltd
ja
push
xor
and
cmp
jecxz
jnp
roll
inc
push
sub
pop
xor
adc
sub
je
test
loope
data16
les
les
jl
dec
sub
rorl
cmp
shrb
add
mov
fldt
js
cmpsl
nop
jl
dec
sbb
pushf
jmp
cmpsb
cmp
or
sub
push
pop
sbb
insl
addl
xor
adc
sbb
icebp
jns
push
lea
dec
stc
and
cmc
stos
mov
icebp
jnp
sbb
cwtl
jae
ficoms
cmp
xor
test
lods
ja
jnp
daa
cmp
mov
and
mov
cmpsl
vpavgb
setae
aaa
xchg
mov
out
sbb
loope
jnp
fsin
fwait
call
sahf
cld
pop
adc
cmpb
mov
and
sbbl
scas
shrb
mov
xlat
popa
and
mov
repz
jno
movsl
and
clc
mov
dec
and
and
fisubs
inc
jp
es
mov
shll
mov
sub
and
cmp
dec
fidivs
dec
and
insl
xor
mov
pusha
push
mov
xchg
std
push
xchg
sub
outsl
mov
test
lods
xchg
popa
es
pop
push
popa
xchg
cmp
push
sub
cmpsl
outsl
jnp
push
aad
lea
shll
ljmp
dec
add
inc
xor
pop
subl
xor
out
jmp
xorb
inc
and
pusha
sub
ljmp
jns
outsl
mov
and
inc
les
inc
ficoms
mulb
cmp
dec
outsl
adc
mov
imul
pop
lods
mov
ja
call
outsl
in
or
jns
out
in
and
repnz
push
mov
mov
repz
subl
aam
pushf
ficoms
fisubs
std
andb
ret
mov
mov
test
or
push
ljmp
aad
outsl
inc
xor
rorl
and
dec
cmp
sub
aad
mov
lea
xor
push
jle
mov
fisttpl
jb
mov
inc
jno
mov
jge
aaa
mov
and
push
pop
idivb
bound
scas
dec
daa
outsl
jge
mov
mov
cmp
push
pop
in
cmpsl
outsl
mov
imul
jl
outsl
fsubl
call
jl
inc
sar
or
cmc
cmp
imulb
and
shll
xchg
jge
cmp
add
lea
jge
jno
xchg
jb
int
dec
mov
and
ljmp
mov
sub
repnz
cmp
ds
cmpsl
pop
stos
cmp
xchg
inc
roll
mov
cmp
pop
loopne
xor
and
xor
push
cli
fwait
insb
jne
stos
xchg
push
jle
push
repz
sbb
adc
and
jne
jbe
dec
lock
mov
pop
shr
xchg
push
sahf
inc
aam
shl
xchg
sub
leave
or
je
jge
sbb
mov
je
cmp
std
stos
mov
mov
jo
sub
sub
mov
testl
pop
out
outsb
lods
jne
cli
jae
mov
call
in
sub
ds
sub
pop
jne
xchg
jae
loope
pop
push
aad
push
inc
mov
xchg
jmp
fstl
jae
sub
in
cld
sahf
ja
inc
xchg
mov
movnti
add
and
int3
jmp
addr16
in
or
cli
xor
or
mov
scas
add
incb
js
stc
fiadds
leave
cmpsb
pop
fcomps
cwtl
mov
mov
cmp
arpl
xchg
sbb
lods
outsl
scas
sbb
shr
mov
xor
push
inc
lcall
mov
dec
lock
in
insl
xchg
add
jmp
ja
and
pop
inc
pusha
mov
inc
nop
add
shr
addr16
daa
mov
and
jb
aaa
mov
lret
mov
stc
fcoml
xchg
sub
xchg
dec
mov
jecxz
inc
js
test
jo
repz
and
mov
je
xor
or
jno
sbb
loope
jns
lods
dec
out
dec
stc
jnp
mov
ja
add
pusha
mov
xchg
sbb
add
lds
push
out
inc
lret
pop
in
decl
daa
cmc
mov
cld
imulb
and
cld
aaa
jae
shll
daa
add
sub
pop
ds
pop
jge
pop
adc
ret
in
adc
adc
dec
mov
pusha
mov
call
xorl
aad
push
xor
aad
pop
test
movsl
bound
test
mov
and
push
mov
add
push
xor
pusha
notb
pop
dec
or
cmc
and
adc
add
xor
repz
hlt
test
mov
ds
movl
inc
adc
test
jl
int3
jp,pn
adc
aam
in
scas
pop
ss
jb
rolb
mov
or
and
js
xchg
in
xchg
inc
pop
xor
mov
sti
clc
jnp
mov
popa
inc
movsl
xchg
ret
in
js
mov
pop
inc
movsl
xchg
adc
mov
xchg
cld
xor
jmp
lea
in
mov
jno
dec
mov
jbe
sbb
xor
xchg
jb
shlb
addb
addb
push
inc
mov
or
mov
xor
jb
rcll
stos
jb
cld
cmp
adc
fsubs
mull
mov
jmp
mov
jb
sub
loope
loopne
xlat
incb
jge
xchg
jbe
jb
push
in
sbb
adc
push
outsl
mov
jae
icebp
out
xchg
stos
test
dec
test
cmp
adc
fwait
sub
cmpsb
lcall
popf
aam
sub
dec
xor
adc
push
and
sbb
jecxz
mov
notb
pop
xchg
cmp
or
cmpsl
sub
pushf
xchg
test
push
mov
stos
sbb
mov
outsb
das
inc
inc
stos
loope
pusha
mov
mov
lret
sbb
into
out
or
mov
inc
idivl
out
mov
and
sbb
js
cmc
push
mov
out
add
repz
test
fwait
xor
mov
inc
push
ja
loop
push
movsb
sbb
adc
add
xor
fisubrs
xchg
insb
cwtl
jmp
mov
movsb
icebp
out
xchg
sbb
into
dec
int
push
outsb
cmp
adc
lods
pop
repnz
xchg
dec
push
enter
rcrb
mov
call
inc
xor
lret
stc
fsubl
push
sbb
icebp
jno
jmp
xchg
mov
decb
into
sub
pop
clc
cs
add
lret
pop
aaa
xchg
dec
add
mov
dec
sbb
or
adc
ss
ret
push
jbe
and
mov
fstpt
je
mov
add
xchg
testl
mov
lea
fwait
or
xor
push
cmp
jo
push
sti
inc
xor
sub
subl
pop
sub
mov
in
test
adcl
mov
das
orl
dec
inc
adc
sub
or
inc
sahf
fs
das
and
ret
jmp
ret
bound
mov
invd
nop
cmp
xchg
push
jmp
cmp
inc
dec
adcb
lcall
fisubrs
push
push
inc
mov
aaa
xchg
xor
sbb
cld
test
mov
pushf
negl
xorl
or
mov
cld
test
cmc
lods
jb,pt
lods
test
dec
aas
mov
add
imul
mov
mov
cmp
mov
or
movl
test
pop
mov
jge
inc
outsl
xchg
sub
scas
push
jno
mov
pop
je
lahf
adc
scas
jnp
repnz
das
add
adc
test
hlt
out
jp
ds
or
out
push
enter
scas
push
sub
mov
pop
mov
das
and
sbb
loope
adc
jge
xor
adc
fimull
inc
inc
and
loope
or
addl
inc
jle
roll
ret
pop
insl
jno
int3
dec
out
cmp
add
leave
and
or
mov
insb
mov
fisubrl
fdivp
dec
imul
mov
sbb
and
pop
and
xchg
mov
rcrl
inc
dec
mov
push
test
jecxz
xor
jns
and
movsb
xlat
push
leave
test
scas
pop
mov
lea
ds
enter
outsb
xchg
andb
ljmp
pop
pop
sahf
xchg
imul
jb
jl
jp
aaa
pop
sbb
ljmp
stos
lcall
outsb
test
jecxz
andb
jecxz
add
movsb
xchg
ret
shlb
pop
test
sub
add
mov
es
inc
pop
subb
mov
fsubr
mov
loope
mov
and
sub
scas
fidivs
mov
fisttpl
pusha
popa
sub
xor
scas
test
lea
xchg
push
cmpsl
fs
imul
lods
mov
pop
push
add
dec
pop
xor
cmp
popa
ja
cld
jo
xchg
imul
shlb
or
in
fwait
push
adc
push
mov
mov
es
xorl
ja
in
adc
and
mov
xor
sub
les
outsl
subl
mov
lods
adc
inc
jmp
adc
je
cwtl
and
movsb
lret
scas
test
pop
std
jbe
icebp
cs
aam
loop
cmp
out
xor
sub
outsl
ret
dec
lea
bound
loope
loop
jbe
rclb
cmp
mov
push
or
jb
pop
stos
lock
push
movsb
sub
mov
mov
mov
mov
and
cld
jae
leave
lods
dec
pop
mov
cmc
dec
inc
scas
rorl
sbbb
scas
adc
pop
icebp
orl
jns
xlat
cmp
rorb
imul
cmp
jo
mov
loopne
xadd
hlt
insl
daa
mov
mov
mov
cld
inc
scas
push
inc
push
pop
lods
movsb
icebp
sbb
das
pop
inc
mov
mov
mov
add
sbb
adc
and
push
adc
push
jno
inc
call
pop
and
adc
ds
in
fidivs
inc
cs
jnp
dec
fsubrl
fdivl
outsb
dec
push
inc
push
roll
pushf
int3
cmp
jb
mull
pop
sbb
cli
mov
push
sub
pop
sub
stos
jne
out
push
pop
lods
scas
arpl
mov
insl
pop
add
in
std
arpl
hlt
dec
xor
add
ficoml
jecxz
repz
hlt
inc
sub
sbb
pop
push
push
je
cmpl
push
icebp
mov
pop
outsb
jne
out
shrb
and
adc
loopne
push
lods
jne
mov
dec
xchg
mov
mov
clc
fdivs
or
jmp
inc
fdivl
xchg
and
push
pop
neg
jmp
dec
int3
stos
push
icebp
iret
mov
nop
iret
xor
push
popa
sbb
negl
push
pop
js
movsb
lret
xor
jmp
insl
add
scas
and
mov
xor
xor
dec
pop
inc
push
lahf
mov
cld
jmp
mov
inc
cmp
and
fwait
adc
test
add
stos
imul
mov
sti
add
scas
mov
xor
cmp
mov
cmp
xlat
orl
lods
xchg
sbb
popf
jae
adc
fistl
orb
sub
and
sbb
pop
call
dec
lods
imul
fcompl
das
js
mov
sub
sub
flds
sbb
mov
cmpl
rol
pop
cmc
out
sti
dec
icebp
call
arpl
mov
ficomps
xchg
movsl
sub
in
fcmovu
int3
movsl
dec
sbb
xor
pop
push
add
idivb
lods
aam
repnz
rolb
mov
in
orl
in
popa
aam
outsb
sub
cld
jmp
js
pop
and
lcall
aaa
push
je
shll
insb
clc
std
push
imul
push
mov
mov
popf
jne
hlt
in
pop
insb
in
icebp
xor
adc
lods
push
lods
xchg
mov
add
insb
popf
insb
ret
inc
mov
sub
sub
fmuls
cld
xor
jmp
or
mov
push
je
shll
insb
das
std
cmpl
push
je
shll
insb
sub
sub
outsb
shll
hlt
cs
insb
loope,pn
jg
lock
hlt
mov
insb
mov
cmp
adc
outsl
push
outsl
xchg
mov
add
das
popf
das
ret
inc
ss
sub
jmp
or
mov
pop
jl
jg
lock
adc
insb
mov
push
popa
xor
fistpl
fsubl
repnz
repnz
xor
clc
add
stos
push
js
or
add
shlb
popa
ret
pop
repnz
push
dec
repnz
mov
jmp
or
lods
lea
lds
repz
repz
mov
insb
mov
push
jb
sbb
mulb
mov
adc
push
adc
pop
mov
jmp
mov
xor
jae
mov
popf
das
ret
pop
insb
xor
fistl
shll
in
popa
sub
je
mov
popf
sub
hlt
xor
insb
xor
xlat
jg
not
mov
popf
sub
hlt
mov
insb
mov
cmp
adc
jne
mov
aaa
ret
pop
insb
xor
dec
testl
mov
xor
jne
pop
data16
cmp
movsb
sbb
cli
cmc
mov
outsl
movsb
pop
daa
test
adc
les
cmp
into
pop
test
push
andb
mov
mov
idivl
sbb
imul
stc
into
mov
push
adc
or
and
imul
mov
jno
inc
dec
arpl
push
repnz
push
jecxz
and
adc
ss
mov
adc
push
mov
adc
ljmp
push
ja
mov
and
popf
aaa
ret
and
jl
stos
jmp
testb
test
js
mov
mov
cmp
mov
popf
mov
hlt
ljmp
adc
stos
push
stos
xchg
mov
imul
sub
sub
inc
push
xor
jmp
jnp
jbe
shll
insb
aaa
or
jne
pop
mulb
fildl
fbld
ss
mov
dec
lret
or
push
pop
out
jge
lret
push
jge
push
aam
pop
xchg
into
mov
sti
cli
aaa
leave
shlb
clc
pop
test
stc
fldt
arpl
add
mov
mov
test
addr16
out
adc
shrb
adc
add
push
push
jmp
jle
and
or
lea
cmpsb
mov
push
pop
pusha
std
ret
push
push
pop
data16
sub
push
in
adc
mov
adc
pop
lods
shr
lods
insb
clc
std
push
imul
push
mov
mov
popf
jne
hlt
in
pop
insb
in
icebp
xor
adc
lods
push
lods
xchg
mov
add
insb
popf
insb
ret
inc
mov
sub
sub
fnstcw
jmp
adc
adc
popf
adc
mov
in
adc
inc
adc
sub
adc
xchg
dec
adc
adc
popf
adc
mov
in
adc
inc
adc
sub
adc
xchg
dec
adc
adc
sbb
div
xrelease
cmp
pop
mov
in
sub
mov
add
push
outsl
sbbl
lea
lds
mov
mov
jmp
or
xor
xor
mov
lea
lds
mov
mov
jmp
or
lods
lea
lds
repz
repz
mov
insb
mov
push
jb
sbb
mulb
mov
in
push
in
pop
mov
jmp
mov
sub
mov
popf
sub
hlt
xor
xor
xlat
jg
js
and
insb
sub
xorl
xchg
inc
xorl
cli
pop
jno
in
jb
add
adc
dec
jg
cmp
push
mov
jecxz
mov
jbe
in
je
ret
push
in
and
in
push
in
pop
mov
jmp
mov
clc
jg
jne
push
sbb
mov
push
xor
jne
mov
insb
xor
push
mov
sub
jbe
mov
popf
mov
hlt
ss
insb
ss
mov
xlat
clc
jmp
dec
clc
mov
push
je
shll
insb
xor
push
ja
sub
das
jg
aaa
shll
hlt
jmp
mov
and
js
insb
js
push
cmp
cmp
mov
lea
lds
stos
popf
stos
adc
adc
scas
push
cmp
inc
push
pop
xorl
stos
add
jg
push
and
cmp
jae
and
jbe
add
jnp
jmp
jmp
xchg
dec
stos
push
stos
add
in
sub
inc
sub
in
jmp
lods
push
lods
add
in
sub
inc
sub
in
jmp
lods
push
lods
add
in
sub
inc
sub
sub
jmp
scas
push
scas
add
in
sub
sub
push
out
add
pop
in
xchg
xor
lds
mov
or
jbe,pn
add
jnp
lock
mov
mov
popf
outsl
shll
roll
sub
jmp
mov
mov
popf
jo
mov
in
xor
inc
xor
bnd
mov
mov
popf
jno
mov
in
xor
dec
repz
repz
in
jb
inc
jb
mov
jl
mov
sbb
sti
jne
mov
push
mov
sbb
push
jge
jecxz
mov
sahf
sub
jp
mov
jg
loop
push
cmpsl
shrl
inc
xor
jae
ret
push
hlt
or
and
hlt
aam
mov
inc
clc
cld
sub
pop
sbb
dec
xor
jne
je
shll
insb
xor
push
mov
sub
jne
push
sbb
mov
push
xor
xchg
push
add
imul
mov
adc
mov
mov
mov
add
jbe
jbe
inc
das
cld
sub
jmp
or
mov
push
je
shll
insb
sub
push
ja
sub
sub
aaa
shll
push
jmp
push
test
int3
je
jmp
popa
sub
aaa
add
adc
xor
popf
cmp
mov
scas
jmp
fisttpl
ljmp
js
mulb
lret
cmp
notl
out
fdivrp
xchg
jb
in
adc
and
dec
mov
mov
jbe
mov
shrb
imul
aad
into
test
xor
inc
mov
mov
push
pop
jae
mov
scas
fsubrl
mov
adc
shl
push
sbb
jns
jge
push
mov
dec
sub
repz
cli
int
and
stos
jnp
imul
sub
add
in
stos
roll
sub
push
xchg
dec
sub
add
in
lods
roll
sub
imul
dec
sub
add
in
lods
roll
sub
sti
xchg
dec
sub
sub
popf
out
shll
roll
sub
insl
sti
xchg
adc
sub
mov
sti
cmp
enter
lahf
add
or
add
mov
mov
add
or
jae
add
out
inc
scas
hlt
jnp
outsb
hlt
insl
inc
outsb
hlt
arpl
jmp
cs
add
lock
mov
inc
mov
sub
outsl
sti
xchg
dec
das
push
das
add
in
mov
inc
mov
sub
jo
xchg
dec
xor
add
in
mov
inc
mov
sub
jno
xchg
in
mov
in
repz
sub
dec
jb
jb
mov
test
pop
test
sub
hlt
mov
shrb
movsb
mov
hlt
out
pop
cli
dec
dec
mov
mov
stos
or
ret
xchg
fiadds
push
imul
jl
mov
insl
dec
stos
in
sbb
sbbb
mov
mov
jg
gs
sbb
out
sbb
call
push
and
dec
les
jae
add
xor
clc
fistl
shll
in
popa
sub
je
mov
popf
xor
hlt
xor
insb
xor
cmc
fistl
notb
xchg
mov
ret
btsl
push
xor
xor
xor
hlt
negl
aaa
push
das
jg
mov
mov
popf
cs
pop
insb
jbe
sub
push
ss
mov
and
popf
clc
ret
inc
sub
sub
mov
ja
ja
inc
sub
sub
jmp
dec
fimuls
cmp
sar
sbb
out
rorl
adc
mov
lea
pop
jno
icebp
mov
fstps
rcrb
mov
mov
xchg
ja
dec
negl
subb
mov
aam
add
into
mov
loopne
fisubrl
icebp
outsl
dec
push
test
and
outsb
push
and
shll
jmp
ljmp
adc
stos
push
stos
xchg
mov
and
imul
sub
sub
imul
jmp
js
je
shll
insb
ja
push
mov
mov
or
push
iret
xchg
leave
lret
cmc
pushf
aas
stos
pop
pop
push
js
lods
mov
jno
and
pop
mov
subl
mov
mov
in
fadds
dec
imul
stos
xchg
adc
mov
add
hlt
and
insl
addb
inc
add
cmp
jne
mov
xchg
xchg
adc
popa
mov
mov
insl
pop
mov
sub
cs
movsb
rcr
push
icebp
cs
test
cli
lods
mov
cld
jmp
dec
mov
cmp
repnz
ret
fcoml
das
loop
aad
cmp
xchg
mov
push
mov
xor
lea
js
xor
outsb
popa
insl
adcl
or
lahf
mov
mov
jecxz
int
jb
pushf
gs
sar
js
mov
mov
pop
js
imul
lcall
je
jecxz
in
adc
xor
mov
and
lods
and
insb
cmp
mov
adc
fs
jecxz
jae
jecxz
mov
add
jbe
mov
sub
sbb
bound
xor
xor
adc
pop
sbb
fisttpl
pop
lods
and
push
push
icebp
mov
hlt
sbb
das
sysret
push
pop
inc
outsl
fimuls
mov
pop
pop
mov
inc
dec
das
subb
pop
push
adc
sti
and
mov
aad
add
pop
lret
or
xor
jo,pn
out
dec
sahf
divb
pop
xchg
pop
lds
add
fistps
rcrb
add
mov
bound
and
sub
xor
mov
fcmovnu
cmc
cltd
nop
repz
mov
dec
mov
ret
daa
xor
inc
jbe
stos
mov
cmp
mov
test
jecxz
sbb
imul
mov
cld
mov
nop
push
loope
stc
sub
dec
jp
jo
sub
fcomi
adc
dec
roll
and
adc
mov
out
cmp
inc
mov
lcall
pushl
sbb
scas
pusha
ds
repz
dec
jp
sub
lods
pusha
inc
mov
and
or
add
popa
movsl
fimuls
fisubl
inc
adc
xchg
jge
pushf
mov
add
mov
push
xor
loopne
subl
cwtl
and
mov
inc
jo
add
cwtl
sub
aad
and
jo
insb
pop
mov
jne
fnsave
push
shl
pushf
aaa
outsb
inc
imul
mov
jno
xchg
lcall
lods
stos
cmc
dec
ss
lret
adc
pop
arpl
cld
nop
push
cli
js
adc
jecxz
andb
stos
mov
clc
stos
push
xor
lds
push
lcall
inc
imull
xchg
xor
stos
in
jp
mov
int
lods
pcmpeqw
mov
mov
mov
jg
rolb
xor
mov
mov
pop
ret
shrb
mov
stos
shll
mov
daa
in
stc
orl
cld
icebp
jmp
and
sti
insb
hlt
jnp
lds
cmpsl
pop
outsb
scas
jo
lods
bound
inc
dec
mov
dec
jno
int
iret
pop
lods
sub
jecxz
jae
stos
or
and
repnz
or
dec
shlb
test
cmpb
out
mov
xor
xorb
dec
sub
and
pop
pop
ja
iret
das
sub
repnz
arpl
push
lret
push
jmp
xor
out
ljmp
imul
cmp
xor
hlt
xchg
jp
adc
add
arpl
es
or
xor
aas
je
iret
sub
aad
or
cwtl
mov
dec
mov
adc
xor
sub
ret
fistpll
aas
mov
and
test
xchg
lods
xchg
mov
test
repz
and
add
aas
push
dec
jecxz
subl
insl
pushf
xor
mov
dec
fwait
adc
and
repnz
icebp
dec
push
pushf
cmpsl
mov
sub
xchg
push
insl
push
outsb
jb
dec
mov
or
push
call
pop
push
rcrl
sbb
es
mov
push
sbb
sub
inc
mov
push
pop
sub
adc
and
add
test
jnp
pusha
ret
and
jo
rorl
test
adc
mov
and
adc
push
iret
popa
xor
ja
and
xchg
loop
fs
cmp
add
push
dec
ror
mov
mov
cmc
leave
mov
jae
fstl
movsl
mov
repnz
cmpsl
inc
rorl
push
fs
inc
xchg
int
xor
loope
sub
jb
mov
pop
ss
bound
or
test
fildl
cmp
sbb
or
xchg
clc
and
adc
rcl
pop
and
xchg
lcall
iret
jb
jge
and
push
repz
outsl
sub
pop
stos
aaa
sahf
xchg
mov
dec
stos
cmc
mov
je
dec
lea
push
mov
inc
push
ret
and
add
dec
cmp
fldt
popa
mov
lret
sub
clc
push
dec
pop
aam
stc
push
xchg
mov
sbb
push
mov
mov
and
sahf
pop
mov
mov
sbb
gs
push
mov
pop
and
mov
mov
xchg
and
nop
hlt
je,pt
and
test
dec
jbe
cmp
or
into
imul
sahf
push
xorl
xor
scas
fisttpll
filds
mov
push
xchg
sti
lods
jne
lods
pusha
mov
inc
cmpb
clc
lcall
outsl
movsl
sub
ret
adc
insb
stos
aam
orb
jg
xor
test
sub
push
lock
jge
adc
sub
testl
dec
call
dec
out
bound
bound
sub
cs
pop
mov
lock
repnz
jge,pn
push
pop
pop
cs
dec
outsb
jo
lods
add
ja
inc
jo
xor
adc
push
dec
xor
icebp
loope
pop
mov
repz
rcrl
loope
pop
mov
rep
repnz
lea
cs
push
ror
cs
cmpsl
lock
ret
add
sub
jmp
pop
test
cs
pop
outsb
mov
xor
add
jae
jbe,pn
ret
icebp
rolb
test
sub
and
and
mov
xor
daa
sti
rcll
xor
mov
jo
sbb
mov
cmpsb
mov
fdivl
and
lods
xchg
shlb
repnz
mov
stos
mov
das
mov
pusha
sbb
mov
jbe
dec
push
add
mov
push
cmpb
and
cld
mov
fidivl
mov
movsl
jne
sbb
xor
repnz
mov
xorb
cs
jae
xor
xor
jae
mov
mov
jne
jb
cmp
lock
lcall
push
mov
mov
mov
ss
mov
xchg
shll
cmc
xchg
cwtl
enter
inc
cmp
push
mov
mov
sahf
pop
mov
in
pushf
cs
shlb
arpl
dec
adcl
movsl
mov
add
addr16
test
repz
into
xchg
and
adc
cli
inc
pop
shrl
sbb
mov
lcall
and
das
fldt
inc
add
cmp
es
jb
mov
push
sbb
push
repz
scas
add
and
xchg
inc
mov
mov
push
lods
xor
push
div
in
mov
adc
repnz
scas
sub
insl
jae
push
mov
mov
push
cmc
shlb
popf
insl
fwait
stos
scas
sahf
cmc
imul
movsl
adc
jbe
mov
xor
test
push
mov
mov
test
mov
push
jno
fistl
jno
jecxz
outsl
stc
pop
push
es
mov
outsl
sbb
iret
pop
insb
push
out
xchg
out
orb
loop
insb
sub
scas
mov
scas
dec
out
pop
das
insb
test
je
push
lahf
push
out
dec
sub
movsb
aaa
repnz
insl
and
sbb
stos
fistpl
sbb
mov
mov
add
pop
adc
out
nop
and
incl
arpl
int
das
das
lahf
outsl
shll
mov
lock
pop
jmp
ss
cltd
ret
dec
inc
xchg
jp
pop
jmp
cwtl
push
push
sub
pop
dec
cltd
inc
fldcw
jl
sbb
push
inc
sub
xchg
data16
popa
push
dec
mov
cmp
pop
pop
dec
js
mov
mov
mov
add
mov
js
insl
fdivs
aas
pop
in
imul
clc
dec
hlt
push
and
mov
js
push
outsb
movsb
xchg
xor
lods
scas
mov
sub
hlt
xchg
pop
sub
mov
pusha
inc
dec
or
xor
ret
mov
sbb
mov
pop
mov
jae
in
das
mov
cmp
push
insb
push
mov
push
ss
negl
pop
xor
ss
push
aas
int
add
mov
add
out
inc
sub
xchg
ss
cmp
mov
xor
add
push
repz
sub
subb
jnp
mov
popa
sbb
icebp
xor
andb
dec
xchg
sti
xor
imul
push
int3
jmp
out
enter
into
aas
mov
xchg
nop
sarl
xor
popa
int
add
inc
or
sti
push
xor
sbb
sub
dec
mov
push
xor
sbb
je
int3
in
sti
mov
int
rcrb
jno
scas
roll
mov
cmp
mov
dec
or
mov
repnz
push
mov
fdivs
cmp
pop
mov
add
mov
dec
into
sub
aad
pop
sub
test
push
pcmpgtd
sub
sub
shll
pushf
sub
pop
add
jno
mov
cmp
xchg
and
insb
sub
jle
mov
ret
movsl
pop
sbb
aas
cmpsb
sub
scas
mov
mov
sub
out
mov
test
mov
inc
xlat
xor
pop
pop
ljmp
pop
or
addb
js
fildl
dec
iret
mov
repz
cmp
test
bound
mov
jnp
xor
lret
stos
jbe
sub
js
add
jle
lds
insb
adc
test
jbe
inc
inc
fsubr
add
repz
xor
jno
outsl
stos
jb
pop
outsb
je
xlat
sbb
cwtl
jp
andb
add
xor
outsb
mov
je
shll
inc
xchg
hlt
xchg
cs
jge
xchg
icebp
das
dec
mov
mov
fbstp
iret
imul
xchg
fwait
out
mov
xor
insb
push
xchg
and
imul
repz
outsl
loopne
mov
pop
mov
iret
sub
inc
inc
insl
stc
xor
mov
jbe
xor
loope
push
ficomps
mov
lret
cmp
mov
inc
adc
mov
test
out
cmp
pop
add
cwtl
inc
loopne
add
sub
or
jp
mov
pop
sub
and
mov
or
inc
push
aas
repz
inc
or
call
inc
lcall
xchg
cs
pop
out
imul
cmp
dec
shrl
shrl
and
icebp
push
adc
push
push
scas
jnp
add
jb
adc
push
inc
or
mov
insb
push
xchg
imul
and
inc
in
xor
mov
outsb
cmp
sub
orl
aam
out
cmp
notb
nop
lcall
jmp
xchg
xor
push
xor
fstpl
or
aas
movsb
ret
adc
jecxz
repnz
lods
jle
fsubrs
pop
sahf
js
adc
jnp
push
xor
inc
sbb
inc
push
scas
pop
push
jge
dec
pop
sbb
scas
stos
pop
insb
pop
xchg
and
push
lcall
sub
sbb
cmpsl
sub
out
fsubp
scas
mov
mov
add
add
jl
stos
and
mov
xor
imul
pop
and
push
clc
mov
pop
icebp
dec
mov
mov
lds
subb
iret
iret
jnp
mov
fidivs
cmp
jns
xor
shll
lcall
sub
push
scas
cmp
ss
not
shll
jo
iret
dec
jno
and
test
push
and
inc
addb
bound
push
cmpb
mov
push
cs
aas
xor
rolb
ret
and
pop
cmp
cs
fildl
lods
mov
in
dec
xchg
lods
mov
outsb
push
cs
jne
mov
cld
sbb
es
dec
imul
in
dec
bound
sub
mov
lock
pop
movd
dec
push
mov
push
lods
jae
loop
inc
xchg
daa
mov
pop
jg
mov
and
mov
loope
nop
jbe
loopne
jecxz
cwtl
inc
loope
mov
ja
jo
xor
push
outsb
adc
jmp
fbstp
dec
movzwl
jmp
and
and
scas
cmpb
inc
mov
jmp
pusha
xchg
lahf
outsb
rep
jp
stos
dec
sub
in
insl
div
roll
stos
dec
jge
jbe
adc
pop
sub
push
xchg
loope
sbb
cmp
jl
cltd
ljmp
sbb
sub
lods
push
mov
sub
mov
pop
sub
shll
fnstenv
fildll
and
pushf
shrb
mov
bound
pop
je
ret
dec
mov
popa
inc
xchg
mov
dec
enter
push
mov
add
mov
scas
mov
iret
push
sub
mov
xchg
push
push
mov
repnz
test
btr
xchg
and
xor
lods
pop
scas
rclb
lock
mov
pop
scas
out
sub
and
inc
jp
out
pop
scas
inc
sbb
fiaddl
push
js
outsb
aas
out
jo
adc
inc
int
mov
rep
lock
pusha
cltd
jb
lret
jbe
adc
inc
lret
mov
pusha
mov
mov
rcl
fldenv
xor
test
loop
jb
push
aam
imul
jecxz
adc
push
mov
jle
dec
and
pusha
xchg
or
and
sbbb
mov
pusha
lret
js
and
repnz
xor
ja
push
mov
cwtl
lds
bound
dec
mov
jmp
mov
xchg
sbb
cmp
and
and
pop
xor
sbb
xor
xchg
mov
lcall
xchg
int3
popf
sbb
fstl
aaa
call
inc
ja
and
xchg
xchg
mov
mov
mov
jo
sbb
push
outsb
dec
push
and
pusha
fucomip
sub
in
adc
push
sar
jb
mov
data16
mov
push
aas
notb
push
repz
inc
shl
dec
movsb
inc
mov
jb
lds
pop
jae
fidivs
and
ss
dec
sbb
push
sbb
icebp
int
cs
jmp
mov
push
push
dec
sbb
lods
lea
inc
clc
push
sub
dec
sbb
lcall
test
call
std
sub
and
scas
push
aas
out
adc
scas
fwait
je
xor
xchg
jbe
ss
xor
jmp
mov
xor
push
xor
sub
movsl
sub
xchg
sub
mov
mov
jno
mov
xchg
inc
mov
mov
mov
lahf
bound
mov
mov
xor
sub
aad
dec
iret
scas
lcall
jns
xor
mov
imul
pop
adc
lods
in
cmp
enter
mov
psllq
loop
pop
mov
dec
stos
push
pop
orb
mov
mov
mov
sbb
dec
lea
call
add
inc
xlat
insb
adc
sbb
hlt
jbe
push
push
mov
jmp
outsl
dec
fistpll
pusha
idivl
pop
mov
push
mov
mov
lret
imul
jo
jno
clc
repz
cmp
test
mov
fwait
pop
repz
adc
sub
dec
dec
ret
shlb
sub
in
nop
filds
pop
ret
lods
jbe
int3
data16
aaa
popf
adc
cmp
mov
negl
ja
mov
pop
cmp
lods
stos
mov
clc
aad
jae
jb
repnz
ja
mull
mov
mov
xchg
lds
and
sbb
jbe
or
aam
mov
sub
das
mov
lock
xor
repz
adc
mov
jno
xor
push
mov
dec
push
call
push
sbb
adc
xchg
xor
sub
inc
mov
int3
stc
add
pop
lock
jmp
int3
adcb
fistpll
sub
mull
inc
mov
enter
es
dec
add
mov
aas
rcr
movsl
xor
mov
mov
sbb
sti
sbb
lds
pusha
xchg
fadds
fcompl
mov
mov
push
cs
mov
xchg
mov
adc
mov
jle
movsl
insl
lret
pusha
sub
addr16
jge
fistps
inc
xlat
repz
and
orb
cs
fmull
dec
inc
sbb
lds
xlat
aad
cmp
movl
in
mov
addb
xchg
adc
movsb
je
in
hlt
xor
or
jns
sbb
or
cld
clc
cltd
dec
lea
cli
mov
mov
pusha
sub
test
mov
xchg
sti
pop
mov
cmp
enter
data16
addb
xor
icebp
pop
dec
shr
jo
mov
push
fdivl
ljmp
jge
push
je
sbb
cmp
and
or
mov
adc
cmc
xchg
and
sahf
mov
lret
mov
sub
sbbl
pop
mov
inc
lret
jecxz
xchg
out
inc
and
mov
adc
or
mov
out
push
aam
ret
pop
inc
enter
push
and
cmpsb
adc
fwait
je
sahf
push
int
xor
enter
lods
not
lds
jbe
adc
das
daa
rorb
sub
into
cmpsb
pop
fs
push
cmp
xor
imul
sub
paddusw
push
push
jg
cmp
inc
pop
push
mov
je
sub
mov
pop
sub
push
xorl
mov
sub
movsl
bound
push
mov
jno
xor
ja
lea
loope
iret
xor
add
add
cmp
mov
lods
orb
cld
jbe
inc
or
rcll
add
mov
and
mov
lods
pop
pop
add
icebp
subl
or
dec
jae
mov
es
adc
es
add
insb
and
sub
and
xor
sti
rolb
popf
hlt
inc
cli
sub
das
sub
popa
lahf
mov
out
and
mov
sub
lock
lds
jns
push
jae
mov
xchg
mov
sub
push
and
fldenv
gs
and
mov
push
lods
push
mov
jne
cs
mov
ret
dec
sub
leave
jb
pushf
call
loop
fwait
inc
lock
scas
sbb
sahf
fisttps
pop
cwtl
movsb
xor
mov
pushf
in
and
icebp
mov
xor
fnsave
data16
loopne
adc
roll
jmp
inc
mov
test
sub
jle
outsb
lea
scas
or
pop
addb
fidivrl
mov
xor
repz
fs
dec
movsb
clc
and
into
ds
dec
in
fbld
pop
sbb
xchg
or
sbb
pop
es
cmp
push
mov
cld
sbb
cmovo
mov
mov
sahf
mov
gs
or
orb
mov
lret
jb
outsb
inc
je
mov
inc
aam
fstps
sahf
test
in
and
popf
jbe
out
add
push
inc
push
add
ja
or
stos
add
push
or
outsb
ss
jbe
mov
jb
int3
call
das
int3
bound
lea
cmpsb
repz
add
dec
inc
je
xor
mov
das
pop
xor
mov
push
xlat
sub
dec
arpl
ljmp
lods
aas
popa
xchg
movsl
clc
jmp
std
sub
dec
andl
das
loopne
jno
inc
xchg
xor
mov
and
xlat
je
insb
sarl
xchg
jae
mov
sub
andl
cmp
lock
icebp
les
call
mov
lods
rcrl
arpl
neg
ljmp
pop
addr16
jge
cmpsl
bound
pop
and
pop
ljmp
xchg
add
shrb
xchg
and
sub
adcl
sbb
stc
or
hlt
mov
call
push
lcall
push
mov
dec
divb
mov
and
push
push
jb
fsubrs
adc
and
inc
stos
test
ljmp
lret
mov
adc
sti
or
mov
jo
mov
xor
and
jne
rclb
jns
fsubl
xchg
shll
cmp
fisubrl
mov
or
mov
mov
add
pop
push
pop
inc
jecxz
dec
sbb
or
addl
stos
sub
adc
repz
movsb
mov
dec
lahf
and
repz
addr16
xchg
and
dec
popf
imul
mov
jmp
loop
sub
scas
sub
add
in
push
adc
adc
rcrb
dec
inc
adc
pusha
imul
stos
js
xchg
stos
sub
nop
mov
xor
and
jno
lock
loope
jle
mov
stos
dec
es
sub
cwtl
cwtl
pop
lcall
insb
or
pop
iret
cmpsl
cmc
mov
or
lods
and
add
stc
dec
mov
out
ds
pushl
jle
lret
jno
inc
pop
orl
mov
lds
dec
mov
or
xchg
es
push
int3
pop
ljmp
sub
adc
movsb
jns
sub
out
pop
icebp
nop
mov
iret
mov
pop
stos
loope
fwait
xor
in
pop
loopne
jmp
push
xchg
outsl
mov
sti
stc
and
ss
pop
out
or
and
and
stos
popf
in
ret
and
bound
pop
iret
jmp
pop
scas
jmp
dec
out
icebp
adc
lods
aaa
insl
and
and
or
and
gs
lcall
fucomip
pop
data16
insb
push
inc
cmpsb
jmp
mov
pop
jns,pt
andl
push
and
insb
and
imulb
xchg
jns
cmc
push
adc
andl
repnz
fcoms
lcall
imul
xchg
add
sub
pop
and
dec
fimull
cs
in
adc
jp
dec
lret
mov
inc
outsl
xor
push
insb
mov
sbb
mov
je
mov
pop
and
xchg
cmc
inc
inc
lret
adc
push
repz
outsl
mov
and
test
shlb
out
ds
sub
popf
sti
cmpb
stos
mov
stos
imul
and
push
mov
dec
sub
push
lcall
pop
aas
cmpsb
push
mov
pop
push
test
sub
das
movsb
mov
add
imul
lods
outsb
in
imul
iret
adc
clc
negl
push
adc
jae
stos
movsb
sbb
or
ss
out
cmpsl
fsubrl
push
pop
push
lods
imul
xchg
std
lea
rcrb
ljmp
loop
insb
popf
mov
stc
add
sbb
sbb
mov
dec
in
jp
lods
outsl
mulb
mov
push
aaa
mov
mov
je
addb
mov
jmp
sub
push
out
aam
xor
out
jg
push
test
inc
call
xor
jmp
jl
xorb
sti
ljmp
pop
and
sbb
xor
cld
imul
pop
imul
shlb
sbb
xlat
and
dec
cmp
cmp
jo
lods
push
test
insl
pop
xchg
je
dec
mov
sub
adc
adc
int
fistpll
imulb
push
jae
mov
xchg
jp
scas
and
imul
push
jbe
adcl
test
push
test
inc
push
pop
test
cmp
jg
mov
xor
jae
fwait
or
adc
pop
fstpt
xchg
and
sbb
in
mov
rcr
push
stos
jbe
hlt
dec
adc
sbb
mov
inc
shl
mov
mov
xchg
lods
push
fistl
sub
xchg
ret
scas
pop
mov
pop
out
es
dec
cs
pop
clc
inc
insb
sti
aam
pop
arpl
push
fs
inc
insb
pop
aaa
or
push
push
push
dec
sub
shll
xchg
mov
ss
mov
jno
psraw
les
out
sub
xchg
test
mov
loope
push
insl
mov
cmp
rorb
insb
dec
xor
jne
jo
into
mov
adc
arpl
inc
dec
sub
pop
xchg
cmp
mov
and
jb
out
lods
xor
mov
clc
rclb
movsl
push
inc
pop
ret
add
je
mov
and
in
insb
push
pop
inc
popf
adc
test
rcr
xchg
stc
pusha
shlb
pop
sbb
popa
fwait
repnz
pop
adc
aas
pop
push
sahf
jbe
xchg
dec
jmp
dec
sub
fsts
sbb
push
loop
mov
movsl
mov
push
and
dec
jecxz
mov
and
jge
and
movsb
xchg
pop
sahf
mov
mov
inc
mov
jne
jns
pushf
lea
loopne
repnz
jp
dec
push
dec
clc
fisttps
pop
shl
loopne
in
popl
loop
in
mov
sbb
outsb
ss
cli
pop
xor
and
scas
add
xor
stos
pop
push
dec
add
pop
mov
mov
or
pop
push
mul
add
add
call
pop
mulb
pop
leave
subb
arpl
add
push
test
jbe
lock
into
sub
dec
push
push
bnd
jl
test
es
pushf
out
push
xor
add
rcll
jnp
cs
ds
mov
xchg
sahf
js
cmp
push
ds
inc
fcmovb
fisttps
sbb
sub
fucomp
pop
dec
adc
clc
mov
data16
lods
lods
mov
lds
push
ret
mov
mov
dec
icebp
mov
cmp
fidivrl
lahf
ss
and
xchg
cmp
sbb
mov
imul
sub
mov
sbb
lret
adc
or
push
cmp
bound
xlat
mov
sbb
dec
sbb
cmp
stos
fmuls
sub
mov
data16
test
fwait
testb
bound
lock
push
gs
push
dec
xorl
stos
out
shlb
movsl
fdivp
in
shll
aam
sub
pop
mov
dec
mov
jge
sti
mov
cld
je
mov
js
jecxz
stos
xor
stos
dec
std
dec
push
outsb
and
test
push
and
mov
mov
clc
jno
rclb
mov
jp
cwtl
cmp
adc
xchg
cs
jo
xchg
ret
push
adc
mov
adc
ja
sbb
ja
rol
jb
sbb
cltd
adc
stos
scas
push
mov
xchg
mov
shll
mov
mov
pusha
mov
and
out
arpl
lret
imul
inc
shll
dec
hlt
dec
aaa
sub
and
mov
roll
sub
mov
xchg
mov
xor
shlb
fstpt
or
dec
xchg
out
mov
jb
repz
mov
enter
into
out
lret
mov
jg,pt
pop
shl
shrb
or
xchg
insb
sub
dec
inc
jecxz
aas
jbe
push
pop
pop
xor
jae
fdivl
xchg
push
push
push
xor
rclb
jne
jbe
pop
in
push
adc
xor
pop
sbb
das
xchg
push
in
dec
fiaddl
cmp
lods
stos
das
data16
int
mov
int
mov
mov
add
cmp
pop
imul
xor
cmpsl
inc
mov
test
lods
inc
and
pop
mov
int3
pop
jns
cwtl
ss
and
push
int
pop
mov
pushf
sbb
sar
or
test
sub
repnz
adc
imul
mov
mov
add
sbb
push
mov
mov
sahf
jo
fdivs
imull
jecxz
call
or
ss
popa
cwtl
push
insl
mov
lock
inc
movsb
jmp
cmp
iret
rcrl
nop
mov
iret
jae
jns
mov
inc
push
outsl
sti
in
jmp
xor
adc
add
in
add
mov
or
mov
or
sub
imul
bound
inc
adcb
jne
adc
enter
inc
fwait
and
inc
xor
loope
mov
imul
incl
and
loop
mov
mov
push
insl
or
arpl
ds
and
movsb
lahf
xor
cwtl
mov
push
daa
xchg
cmpl
in
xor
cmp
add
xchg
push
scas
bndstx
mov
repnz
xor
mov
mov
xor
jbe
addb
push
cmpsl
mov
and
adc
jbe,pt
gs
and
jg
inc
and
xor
faddl
push
pop
push
xor
subb
cmp
aas
cmpsb
adcl
or
mov
nop
pop
push
jmp
pop
xchg
insl
ror
loop
and
cs
push
cs
dec
xchg
push
jne
jno
rcrl
outsb
mov
xchg
fwait
leave
pavgb
icebp
mov
inc
adc
popa
pop
adc
imul
jb
cwtl
mov
or
stos
adc
cmp
repz
adc
mov
pushf
add
sub
mov
outsb
pop
dec
pop
push
pop
bound
mov
insb
insl
mov
outsb
xor
andl
popa
mov
pop
out
inc
jns
filds
push
pop
pop
xlat
sbb
jmp
push
ja
popa
shll
mov
xlat
sub
or
and
sti
or
push
mov
ret
adc
sbb
lcall
and
pop
inc
mov
sub
enter
fidivl
jnp
sub
adc
pop
sub
jb
out
push
add
jne
inc
testl
repz
fwait
jbe
das
ret
into
cmpsl
dec
push
dec
lock
cs
jmp
je
inc
pop
js
add
insl
fbstp
and
mov
in
xlat
mov
out
divl
inc
fisttps
jle
adcb
mov
adc
imull
outsb
subb
insb
lock
outsl
pop
outsl
jno
mov
mov
addl
pop
nopl
pop
cs
lods
outsl
ljmp
test
loope
daa
outsb
push
dec
inc
movsl
inc
fs
push
jno
gs
sbb
add
aam
push
fsubrs
insb
mov
pop
pop
lcall
lcall
inc
arpl
sldt
std
adc
testb
push
mov
pop
cmpsl
jge
mov
and
push
push
inc
or
fadds
lahf
imul
mov
pop
imul
xchg
fisttpl
popf
test
lcall
and
xor
xor
inc
insb
mov
shrl
clc
inc
repz
stos
cmp
mov
imul
mov
push
dec
frstor
sub
dec
and
lds
cwtl
xor
sahf
jp
sub
loope
inc
xor
pop
and
loop
pop
insl
es
test
pop
movhps
daa
fisubl
sub
push
pop
loope
fisubrl
jb
mov
cmp
push
add
xlat
sbb
jne
cmp
inc
sarl
mov
push
mov
jg
bound
dec
inc
testl
mov
xchg
jbe
cmc
xor
addr16
and
adc
lods
and
adc
fbstp
movsb
subl
pusha
push
push
pop
jb
sbb
bound
add
push
mov
jnp
ret
movsb
pop
addr16
shl
xor
stos
sub
sbb
lock
cmpsl
cmp
pop
mov
mov
sahf
jae
repz
movl
shll
or
sbb
xchg
es
lock
xor
xor
outsb
call
xlat
push
enter
es
adc
jg
cwtl
imul
jb
mov
push
cmpb
repnz
sub
sub
lea
inc
xor
mov
pop
mov
lea
and
repz
in
je
ljmp
xor
in
fnstenv
iret
psubb
mov
insl
pop
in
pop
sub
rcrb
fildll
ss
outsl
out
nop
mov
sub
test
mov
sti
sub
inc
and
fstl
add
adc
adc
push
jo
mov
test
push
movl
mov
inc
mov
rclb
stos
add
aam
lods
sbb
fisubs
cmpsb
and
pop
scas
xchg
push
inc
cld
sbb
sar
scas
push
adc
aad
xchg
xor
loope
test
roll
inc
mov
add
pop
add
cld
xchg
jb
imul
repz
rol
sub
xchg
xchg
mov
scas
sbb
pop
imul
inc
adc
lock
loope
jnp
dec
lret
hlt
popf
out
icebp
push
mov
mov
ljmp
and
jg
xlat
sub
sbb
jns
add
or
inc
ja
fnstcw
lret
mov
bound
imul
pushf
adcb
ret
data16
mov
jmp
or
ljmp
inc
es
xor
rcrb
inc
xchg
fwait
pop
shlb
mov
imul
stos
sbb
mov
ljmp
sbb
push
pop
push
cmc
xchg
test
and
divps
xor
fbld
dec
pop
mov
dec
push
sub
pop
das
sbb
jns
jnp
mov
subl
cwtl
sub
dec
and
and
sbb
daa
fs
enter
ss
insl
and
pop
jp
ror
movsb
lods
test
test
clc
rcr
movsb
cmp
xor
dec
bound
pop
or
sub
cli
shl
stos
xor
dec
mov
cmp
pop
lock
jnp
mov
bound
mov
sub
jmp
pop
mov
testb
ret
add
sub
adc
mul
mov
aam
std
enter
fisubrs
sahf
jg
mov
nop
not
pop
push
adc
les
sbb
pop
jmp
xor
adc
push
bnd
insb
sub
and
rorl
mov
mov
filds
in
stc
jl
stos
into
jns
jb
aam
shll
pop
pop
jl
stos
cmp
adc
insb
mov
mov
cmp
mov
sbb
jno
jno
mulb
loop
and
ljmp
push
mov
hlt
std
ret
mov
push
dec
fisubl
fs
xchg
mov
pop
sub
pusha
clc
dec
jne
push
xor
lea
out
inc
xor
add
icebp
je
jne
fidivl
out
and
inc
ror
sti
and
mov
std
xor
xor
scas
out
push
jle
lods
pop
je
or
jp
dec
push
dec
clc
ds
das
mov
sub
sub
sub
push
icebp
mov
fwait
mov
push
popa
push
mov
push
sub
and
mov
mov
out
pop
jno
iret
mov
movsb
jnp
add
mov
sub
dec
loopne
add
insl
psubsw
pop
mov
mov
or
jecxz
fs
out
and
jo
icebp
mov
scas
stc
jae
shll
insl
or
scas
jmp
insl
mov
mov
cmp
mov
lods
imul
ds
sub
jne
icebp
sub
lock
mov
stos
js
pop
gs
xor
repnz
adc
mov
imul
loopne
jno
inc
int3
imul
and
sub
fisubl
and
and
push
cld
shr
dec
xchg
push
mov
jno
lods
jecxz
or
add
rorl
add
fsubs
xchg
push
outsb
js
sbb
inc
and
popf
jbe
adc
lcall
add
dec
sub
mov
or
std
rcr
and
out
cld
lahf
fidivrs
mov
dec
push
repz
js
into
adc
fs
outsb
imulb
xchg
loopne
push
xchg
movsl
negb
jecxz
sub
cmpsl
rcl
stos
dec
pop
push
cmp
inc
decb
das
add
imul
mov
into
mov
mov
sbb
push
cld
lahf
mov
xchg
popa
xor
dec
lret
jno
add
fs
scas
test
dec
stos
roll
jno
lret
aas
ret
lods
pop
mov
mov
jo
mov
inc
roll
jnp
jno
jae,pn
ror
xlat
mov
or
dec
xor
and
pop
mov
sub
xchg
adc
pop
sub
in
push
lea
icebp
js
push
cmpsl
mov
mov
mov
jmp
lods
push
jge
dec
push
push
add
sub
add
xchg
lcall
stos
and
add
xor
jb
jne
pusha
stos
or
or
mov
mov
ss
dec
adc
adc
pushf
mov
aad
call
call
mov
sub
decl
out
jecxz
call
scas
cmc
dec
ret
mov
push
jge
push
gs
fisubrs
cmp
add
jnp
xor
fwait
roll
or
lods
or
call
jle
mov
ret
push
out
mov
ret
add
ret
in
call
out
and
roll
cwtl
mov
aaa
jb
arpl
icebp
into
test
or
pop
jl
imul
lea
mov
and
stc
dec
mov
xor
and
fldenv
push
ljmp
mov
sbb
jmp
imul
and
mov
inc
inc
daa
jae
mov
add
dec
aad
jns
push
cmc
inc
add
pop
pop
inc
sarl
orl
test
enter
fldl
adc
incb
scas
jbe
pushf
mov
push
repnz
jg
ret
add
insb
xorl
in
in
mov
aaa
lahf
and
dec
push
lret
cmpsb
pusha
mov
mov
inc
lea
dec
cmpl
jne
into
push
xor
in
pop
jb
mov
nop
jb
call
mov
divl
icebp
jb
aam
or
cmp
divl
ljmp
mov
add
pop
jb
pop
inc
push
ror
arpl
pop
js
sti
bnd
test
pop
inc
outsb
mov
inc
mov
arpl
cmp
mov
and
adc
mov
pop
lahf
shlb
push
bnd
out
pushf
int3
test
out
cmpsb
int3
dec
cmpsb
out
shl
popa
dec
xor
pop
test
mov
dec
inc
ret
aam
js
xchg
cmp
mov
xchg
jno
leave
stos
sbb
decb
cmp
loopne
andb
lret
cmp
xlat
popl
dec
push
movsb
pop
insl
push
mov
adc
push
inc
or
inc
jbe
shll
pop
call
jle
idivb
or
pop
jns
aas
cmpsb
in
or
iret
ds
sbb
dec
jbe
data16
mov
in
xor
inc
dec
push
jmp
cmp
sub
adc
jns
mov
jo
call
lahf
mov
mov
cmp
cld
mov
leave
jp
jno
adc
ss
hlt
and
add
adc
and
hlt
and
adc
add
lock
pop
mov
fs
xor
test
or
ret
and
jecxz
and
jecxz
loopne
inc
push
test
xor
sub
lods
lods
std
test
repz
popa
test
adc
mov
pop
mov
lea
cmc
pop
ds
adc
fs
mov
jae
aad
stos
orb
xchg
and
mov
xlat
sub
pop
fsubrl
mov
mov
hlt
and
push
push
adc
jle
or
shll
sbb
jns
mov
push
out
cmp
and
pop
iret
and
sahf
sbb
push
ret
bound
pop
jb
dec
mov
cmpsl
mov
push
pop
mov
dec
notl
and
cld
cmp
and
adc
cmp
mov
movsb
sub
lods
cmp
jnp
jp
adc
jns
cmp
loop
pusha
data16
cmpsb
adc
ja
pop
mov
push
inc
iret
pop
or
jnp
or
mov
cmp
bswap
loopne
mov
mov
movsb
adc
push
nop
adc
aas
push
lahf
sub
hlt
pop
ljmp
mov
popf
outsb
clc
jo
ljmp
cmpb
into
xor
fisttpl
mov
dec
out
stc
test
movsl
clc
dec
mov
into
insl
insb
hlt
mov
cmp
fisttpl
je
loopne
xchg
arpl
push
jne
hlt
pop
or
jle
lods
pop
cs
push
mov
gs
mov
mov
sahf
les
dec
adc
leave
and
scas
mov
repnz
and
pop
mov
test
iret
mov
jo
push
loopne
test
or
push
jns
push
pop
or
dec
and
push
stc
jbe
inc
dec
jmp
dec
fisttpl
or
xor
out
std
insl
xchg
sub
pop
loopew
inc
cmc
jl
xor
imul
sub
xorl
jp
sub
xor
sti
jbe
loopne
xchg
arpl
aam
inc
in
jb
inc
mov
sbb
sbb
ret
mov
or
xchg
or
push
hlt
cli
fsts
or
adc
test
or
or
jo
inc
or
pushf
cld
adc
fisttpl
push
mov
mov
or
adc
testb
or
int3
mov
jp
push
test
pop
pop
aas
xchg
jbe
sub
push
dec
lret
xchg
cli
mov
mov
or
lods
ds
or
lcall
pop
mulps
vpsrlq
test
dec
mov
std
adc
inc
rcll
leave
mov
ret
pop
and
out
jge
jns
aam
sbb
and
mov
fimull
push
arpl
jge
sti
xor
and
cmp
and
adc
pop
push
test
cs
cmp
lret
enter
lea
out
aam
mov
incb
xlat
mov
mov
out
xor
fnstcw
mov
cld
data16
pop
push
mov
imul
mov
mov
adc
mov
and
je
or
iret
and
jp
dec
aad
jle
fucomip
call
pop
lret
dec
clc
mov
jno
cmpsb
mov
jg
ret
sub
sarl
sbb
cmp
sbb
push
pop
sti
pop
pop
subb
aad
lods
repz
cmovp
bound
push
mov
out
mov
fcmovnu
xor
jno
xor
ret
and
sbb
repz
pop
sbb
in
call
jbe
pop
mov
mov
pop
mov
mov
or
mov
mov
push
or
popf
lea
pop
mov
add
loopne
pop
outsl
sahf
orl
das
lock
loopne
mov
movsb
sbb
es
fadds
mov
xor
das
and
fisttpl
fstpl
xchg
test
out
mov
cld
fcomi
or
sub
xor
test
rcrl
sub
jns
xchg
mov
lods
repnz
sub
mov
adc
push
sub
or
insb
clc
sbb
test
mulb
and
jl
lcall
out
outsb
stos
stc
inc
pusha
fmull
and
clc
mov
addr16
add
pop
fwait
aam
adc
lret
sub
add
inc
pop
incb
repnz
jecxz
jle
pop
jmp
xlat
cmc
xchg
rorl
stos
loope
and
mov
cs
dec
cwtl
rorl
jae
lods
js
rcrl
insl
jecxz
xchg
jle
test
xor
ds
repz
icebp
sub
mov
loope
mov
lock
inc
push
jmp
sub
movsl
scas
mov
xor
sub
icebp
repnz
inc
xor
dec
sahf
cmpl
mov
ja
lods
stc
mov
add
mov
iret
cmc
sarb
cmc
pushf
jle
outsb
mov
stos
in
mov
nop
ja
lret
mov
sti
mov
pavgw
lret
adc
sub
pop
mov
mov
mov
add
pop
outsl
jno
sub
daa
data16
imull
mov
mov
imul
mov
xchg
stos
inc
xchg
dec
add
mov
mov
mov
loope
int
or
loop
push
mov
js
repnz
jb
mov
pusha
jne
into
sahf
or
in
jbe
or
clc
add
cmpsl
xor
dec
jmp
nop
jbe
jne
sbb
jmp
xor
iret
jns
xchg
lcall
aad
and
addb
popa
in
cmpsl
arpl
lret
cmp
cmpsl
stos
mov
mov
jo
clc
mov
sbb
jmp
lret
loop
and
shll
rorl
add
and
and
push
les
lret
adc
cmp
aaa
or
ret
adc
cmpsb
and
sub
pop
mov
and
mov
jp
dec
push
dec
clc
mov
and
cmc
pop
adc
hlt
jb
jp
inc
test
mov
mov
jno
pop
iret
xchg
les
mov
add
inc
add
js
in
pop
call
mov
sti
push
ss
jne
xor
cmp
in
daa
cmp
sbb
push
inc
scas
mov
scas
cmc
lcall
mov
das
cmp
mov
ret
mov
hlt
ds
push
inc
hlt
call
in
popf
ret
popa
or
add
mov
sub
popa
pop
add
dec
cmp
aas
or
imul
clc
les
mov
in
mov
and
or
mov
jecxz,pt
outsl
outsb
scas
rolb
and
add
pop
call
xchg
fdivr
push
push
and
and
cs
jle
lods
fistpl
or
xor
repz
scas
pop
jg
xor
mov
jne
stos
test
js
cmp
push
inc
into
pop
es
rolb
dec
mov
cmp
xor
xorl
stos
and
and
jno
scas
cmp
mov
add
jge
ret
mov
shlb
push
rolb
imul
test
mov
shll
dec
xchg
add
sub
xchg
mov
jno
sub
stos
jmp
in
adc
shlb
clc
ja
aaa
mov
pop
inc
es
add
lods
or
rclb
push
mov
loopne
lock
sub
pop
ss
add
dec
clc
mov
pop
jle
cmc
pop
mov
mov
stos
jp
jbe
jnp
xchg
sub
push
insl
jno
fwait
mov
push
repz
xor
sbb
push
and
sbb
aaa
daa
xchg
xchg
mov
enter
add
sbb
add
adcl
lock
push
mov
stos
and
outsb
add
and
sub
and
aaa
les
and
xor
sub
cmp
push
sahf
push
sbb
frstor
out
add
pop
call
push
or
cs
fstl
scas
add
mov
repz
and
in
pop
call
in
jb
stos
into
fnstenv
jle
cmp
adc
or
cmp
ds
and
mov
xor
cmc
sub
test
lods
jmp
movsl
sbb
popa
stos
push
mov
mov
mov
jecxz
fsts
mul
jne
mov
cmp
outsl
mov
pushf
lret
push
out
inc
loop
nop
push
jae
lcall
dec
nop
sub
xor
addr16
adc
mov
jge
das
jnp
loopne
and
mov
pushf
jno
push
jbe
idivb
inc
rcll
lds
lods
lahf
in
repnz
scas
sub
push
push
adc
mov
jo
dec
adc
mov
sti
lcall
mov
jp
dec
push
dec
clc
ds
push
sub
push
test
pop
sbb
jno
jle
lods
or
jmp
pop
test
sbb
jg
stos
lods
add
push
cmc
pop
sub
dec
mov
inc
repnz
dec
daa
pop
test
aas
adc
cmc
aad
ret
xor
aad
and
and
push
cmp
and
outsb
dec
mov
inc
jno
jle
mov
scas
test
aas
sub
jle
cmp
cmp
in
jno
jmp
sbb
ss
or
jae
adc
dec
outsb
push
dec
clc
call
clc
dec
push
push
cs
leave
sti
and
jne
cmp
jb
and
addr16
shlb
ds
or
hlt
or
jp
dec
or
cmpl
leave
push
in
sti
and
xor
push
and
test
call
push
sbbb
sbb
jae
in
adc
call
push
jb
sbb
rolb
pop
mov
mov
js
xchg
and
xor
fldenv
loope
popa
es
pop
xchg
lcall
sub
mov
pop
mov
lea
iret
jg
lahf
mov
or
leave
push
lret
cmp
lahf
inc
je
lds
xor
fisubrs
jge
mov
popa
sbb
dec
mul
pop
mov
in
adc
insl
add
in
inc
je
lds
sti
xor
loop
nop
mov
cli
adcl
aad
mul
jl
and
lea
call
shlb
or
inc
sub
mov
mov
push
xchg
arpl
push
popa
xor
mov
scas
or
nop
inc
or
jne
stos
jae
scas
push
xor
or
shll
mov
jmp
inc
and
mov
add
addb
mov
hlt
ds
and
sbb
lock
push
les
or
stos
out
hlt
ds
and
sbb
xchg
lret
adc
lret
clc
shlb
push
mov
lret
lods
addr16
jmpw
mov
push
lods
js
ds
mov
mov
gs
int3
inc
jae
jmp
adc
push
lea
aad
gs
out
cld
mov
test
stc
aas
jae
inc
lcall
jb
mov
inc
mov
notl
sahf
xor
ret
push
xchg
mov
add
jae,pt
es
out
inc
int
mov
jl
movsb
fldl
sub
mov
lods
push
push
sbb
cwtl
xchg
sbb
insl
lret
dec
xlat
add
sub
iret
xchg
jle
and
jno
repnz
sub
jbe
repz
pusha
sub
jmp
add
lcall
mov
rcrl
jno
sub
roll
aad
aas
xor
mov
adc
add
cmpsl
in
push
repz
and
sbb
mov
aaa
and
sub
sbb
dec
ret
sbb
mov
push
jb
sahf
and
sub
jnp
sub
je
xchg
fwait
inc
push
sahf
xlat
push
rorb
mov
icebp
jle
lods
inc
sub
stc
ret
hlt
sub
lea
push
int
shll
jle
inc
loope
dec
xchg
out
inc
add
and
sbb
std
subb
mov
lret
outsl
cmp
push
daa
mov
sbb
jne
or
jg
sub
pop
ja
cltd
and
mov
lds
adc
outsl
repz
jp
das
dec
jmp
inc
shrl
decb
movsb
iret
adc
dec
cmpsb
mov
inc
iret
out
cmp
and
sbb
sub
and
icebp
sub
cld
sbb
mov
jae
jbe
ss
clc
jb
xor
xor
addr16
pop
or
jb
cmp
pop
stos
stos
rolb
out
sub
lcall
pop
mov
setge
xchg
rcl
lcall
mov
test
push
push
scas
out
inc
adc
dec
loope
jbe,pt
mov
mov
pop
pop
stos
repnz
jle
and
fcoml
jns
mov
dec
lcall
inc
icebp
and
cltd
fldt
int3
inc
push
icebp
mov
xor
push
rcrl
incl
rcrl
sti
pop
and
or
push
jge
inc
mov
lret
rolb
fnstsw
fucomip
lods
std
int
mov
cmpsl
cltd
lret
or
jb
push
ss
lods
jo
push
and
scas
fldl
mov
ja
xor
imul
stc
sarl
cmpsl
jmp
add
mov
cld
shll
adc
inc
aaa
jns
mov
push
dec
jae
fisttps
repz
stc
sub
or
mov
sub
cmp
jge
data16
lock
ret
and
insb
outsl
das
mov
pop
mov
jns
lods
js
data16
add
mov
ficomps
cmp
jb
jo
xlat
cmpsb
enter
jae
sbbb
mov
std
cmp
fildl
movsl
adc
adc
cs
punpcklwd
movsl
mov
test
adc
stos
jnp
movsl
jnp
mov
cmp
clc
cltd
cmp
add
sahf
xchg
sub
xor
stos
lret
stos
pusha
movsb
add
hlt
jb
dec
pop
dec
ss
aas
filds
call
jg
std
push
mov
iret
push
test
mov
test
adc
mov
inc
mov
ret
pusha
loope
divb
cmp
and
loope
xor
dec
or
cs
dec
adc
xlat
cmp
test
clc
adc
xchg
sub
andb
imul
rep
jp
rorl
rcll
dec
repz
sarl
mov
or
es
jne
sbb
rcrl
arpl
iret
sbb
adc
and
lahf
pop
push
mov
cmp
add
xor
jb
jge
push
lods
ds
mov
sbb
into
jecxz
xchg
fwait
push
pop
sbb
mov
push
dec
loop
mov
and
pop
ljmp
adc
dec
leave
fwait
pop
sar
push
daa
mov
pop
or
stos
rcrl
dec
repz
cmp
mov
dec
ds
jno
pushl
pop
push
test
repz
sahf
adcl
daa
sbb
shrl
or
sbbb
lods
fs
outsb
cmp
mov
hlt
ret
add
test
je
in
dec
fildll
sub
inc
push
sub
pop
cltd
out
jle
pop
mov
stos
cmp
cs
add
sub
jns
stc
loope
dec
enter
out
fildl
movsb
push
outsl
cld
mov
or
jmp
adc
cmp
jo
adc
rep
xlat
jbe
icebp
insb
jmp
and
icebp
lods
jmp
jo
dec
jbe
icebp
jmp
subb
lds
jmp
rol
jne,pn
mov
outsb
xor
loope
mov
pop
xlat
das
and
push
mov
sub
inc
lahf
test
mov
push
call
mov
push
clc
insb
push
jae
mov
rorl
inc
xchg
mov
pop
mov
dec
jg
xchg
jne
xor
push
loop
or
mov
dec
in
rorl
xor
add
fnstsw
sarl
mov
sub
sub
jns
insl
dec
inc
push
scas
xor
jge
cld
ret
cmp
add
out
in
xor
int
add
jle
xchg
rcll
mov
out
push
imul
data16
out
sub
mov
mov
fbstp
test
stos
push
das
rorb
jmp
into
push
push
or
mov
mov
test
ror
and
pop
ds
inc
pushw
ss
pop
ss
adc
popf
push
divb
adc
add
out
xchg
push
or
mov
popf
lcall
xchg
pop
jno
lods
adc
lcall
jbe
jnp
jmp
sbb
and
jmp
mov
aaa
add
shlb
loopne
cmp
push
jl
sub
dec
stos
push
mov
mov
dec
movsl
outsl
dec
adc
and
sub
stos
sub
push
xchg
sub
js
shlb
xchg
scas
insb
test
cmp
js
xor
leave
and
jle
push
lods
out
add
lret
xchg
add
lea
sahf
popf
inc
call
insl
add
mov
ret
dec
popa
shrl
loope
jne
stc
mov
cltd
xor
dec
in
lret
insl
inc
sbb
outsb
sahf
ja
jg
sbb
loopne
lcall
push
and
sbb
xor
ss
add
insb
scas
mov
pop
outsb
popf
mov
jmp
into
stos
mov
enter
mov
lcall
mull
fisubrs
outsb
subb
mov
insl
dec
stos
jne
sub
mov
outsb
add
and
pop
sbb
mov
mov
dec
or
xor
fs
sbb
jmp
mov
add
add
mov
repz
pop
mov
inc
sbb
push
std
push
mov
cs
out
das
fstp
insb
jb
dec
nop
shrb
loope
andl
cmp
push
cmpsl
sbb
sub
fldenv
mov
mov
ret
jbe
cwtl
pop
xor
leave
jb
les
mov
aam
push
mov
mov
std
jmp
dec
pop
in
push
push
sbb
xchg
bound
ja
pop
jae
cltd
cmp
leave
mov
cmp
test
inc
sub
ror
ja
xor
testb
imul
add
and
ds
xor
lcall
insb
xor
jo
stc
cmp
mov
lret
adc
aam
and
test
mov
iret
mov
push
push
add
ret
push
mov
sahf
in
xchg
dec
adc
adcb
pop
outsl
in
lods
iret
xchg
cmp
mov
push
mov
das
sbb
adc
or
cmpsb
pop
mov
jg
sub
push
sbb
mov
jne
push
sbb
popa
ret
lods
mov
mov
sub
negl
ja
dec
test
cmpsb
mov
xor
sbbl
xchg
push
adc
sbb
pop
outsb
out
cs
das
lret
mov
pushf
and
sbb
push
push
fcompl
hlt
push
push
in
adc
loopne
das
sub
out
sbb
sbb
sbb
test
es
mulb
jns
and
pop
outsb
jae
jnp
mov
test
push
out
clc
sub
add
arpl
sbb
arpl
fldcw
or
arpl
ret
shll
ds
call
mov
test
xor
arpl
mov
jae
test
mov
test
push
mov
inc
push
xor
dec
or
bound
push
clc
dec
adcl
mov
push
fs
xchg
arpl
jp
or
mov
xor
adc
adc
pop
pop
arpl
mov
repnz
movsb
rclb
xchg
insl
dec
adcl
pop
outsb
loop
and
sbb
insl
jle
mov
insl
jle
mov
insl
jle
mov
insl
mov
cmpsb
adc
pusha
fbld
gs
lods
mov
jp
add
arpl
jne
int3
pop
cmpsl
arpl
fidivl
xchg
inc
insb
sahf
inc
iret
or
prefetch
or
inc
iret
lret
adc
inc
pusha
or
sbb
ret
lea
ds
and
test
sbb
sbb
in
lea
inc
and
pop
pop
add
aaa
stc
loope
cld
sbb
daa
adc
shll
shl
ret
push
pop
lock
popf
jl
mov
or
sbb
outsl
mov
addr16
pop
movsb
div
call
pop
jmp
pop
jbe
push
outsl
sbb
js
adc
stos
inc
icebp
sub
and
jnp
rol
icebp
jge
mov
stos
and
and
mov
push
movsb
aas
inc
fadd
adc
int3
mov
jmp
cmp
pushf
jnp
add
adc
out
aad
jo
ljmp
jno
jae
jns
stc
mov
adc
mov
push
push
popa
dec
fdivr
in
ljmp
ljmp
and
cmp
xchg
adc
rorb
andl
mov
push
jmp
xchg
std
xor
shrb
mov
fsubrl
cmp
ret
data16
clc
cwtl
lea
or
inc
mov
int3
push
push
xor
pop
pusha
in
cwtl
stc
inc
lea
test
xchg
outsb
ficomps
test
out
or
pusha
filds
mov
xchg
jmp
jns
xbegin
push
xor
mov
mov
mov
imul
loope
cmp
or
fistpl
push
out
mov
data16
addr16
je
mov
insb
mov
mov
cmp
sbb
out
shll
sbb
cmp
push
mov
test
adc
xor
mov
shll
dec
popl
dec
adc
adc
push
add
cld
cmc
or
sbb
push
test
xor
cmpsb
push
pop
mov
jbe
xor
xchg
movsl
jbe
imul
cli
xor
push
mov
mov
adc
mov
lret
jle
mov
test
dec
maxps
add
imul
inc
cmpsl
adc
push
sub
daa
pop
ret
fs
je
mov
addr16
cli
and
add
out
or
mov
jmp
and
inc
mov
clc
mov
xchg
and
mov
testl
adc
sbb
scas
and
adc
add
jmp
popf
push
cld
out
push
adc
rcl
insb
lock
sub
fcomps
fildll
mov
jne
sub
sub
xchg
in
sub
or
inc
pop
jmp
jecxz
mov
in
clc
sub
jae
fwait
adc
mov
dec
call
adc
inc
cmp
push
push
dec
and
daa
mov
inc
mov
test
mov
add
adc
dec
xchg
cmp
shrl
and
mov
push
hlt
js
in
pop
adc
addl
pusha
in
jle
sub
push
in
lock
shl
mov
adc
sbb
mov
ds
dec
inc
or
push
std
test
sub
mov
adc
test
nop
and
xor
jb
loopne
and
popf
call
int3
arpl
das
dec
xor
mov
ficompl
in
inc
cmc
adc
push
sbb
repz
jecxz
in
stc
sub
addr16
and
inc
mov
arpl
mov
xchg
push
mov
sahf
dec
push
push
hlt
and
cmp
inc
push
push
or
pop
sub
aad
outsl
cmp
scas
xchg
test
or
scas
lahf
out
repnz
pop
pop
xorl
insl
arpl
mov
mov
cmc
jp
cmc
or
hlt
out
nop
or
add
aas
insl
testb
ja
pop
mov
addr16
jle
inc
out
pop
pop
addr16
out
push
push
pushf
cld
pusha
xchg
imul
int
shl
fbld
push
sbb
dec
jl
mov
loope
outsl
add
pop
arpl
jmp
mov
push
sub
jmp
pushf
or
leave
scas
or
out
jg
popf
scas
pusha
insl
jecxz
push
cmpsl
cmp
pop
xchg
dec
cmp
pushl
incl
dec
leave
fisubs
pop
pop
das
lret
ja
scas
loope
push
jg
movsb
orb
pop
push
popf
aaa
add
pop
call
out
call
adc
mov
and
jmp
mov
sbb
xchg
push
repz
xorb
and
stos
pop
in
mov
stos
mov
dec
add
repz
inc
mov
and
jne
cmp
js
out
imul
js
mov
mov
dec
mov
mov
test
add
out
mov
into
mov
insb
lods
jo
inc
fcomps
add
inc
mov
sti
fisttpl
xchg
push
insl
insl
mov
push
imul
mov
and
loopne
imul
jns
imul
ficompl
arpl
inc
stos
lock
stos
ja
fists
in
lcall
mov
push
push
rcr
nop
add
mov
lahf
push
dec
adcl
mov
iret
and
sub
fistpl
mov
aaa
push
rorb
int
clc
inc
mov
cwtl
jno
sahf
clc
out
nop
or
sub
cmc
jmp
and
shrb
and
jle
daa
adc
loop
mov
and
mov
jp
dec
push
dec
clc
ds
sub
sbb
push
and
vcvtpd2dq
inc
ds
lret
or
sub
inc
cld
ja
or
int
pop
add
mov
addr16
out
xor
adc
fwait
and
mov
fisubl
mov
or
hlt
mov
pop
icebp
mov
mov
mov
add
rolb
loope
mov
inc
fwait
jo
mov
imulb
cmc
sbb
test
xchg
loope
stc
into
loopne
adc
mov
lcall
push
in
aad
xchg
push
stc
pop
xor
clc
aad
pop
test
int3
iret
sub
cmpsl
add
push
ss
mov
push
sub
mov
push
leave
mov
sub
inc
pop
popf
stos
ret
push
scas
xchg
mov
and
inc
pop
sub
xchg
int
mov
je
loope
pop
popf
mov
push
out
xchg
mov
dec
fbstp
add
push
repnz
lods
jp
jbe
scas
ljmp
repz
mov
xorl
dec
mov
sbb
mov
sub
add
mov
push
cmp
and
and
scas
or
pop
insb
push
int
mov
sub
lods
ret
push
jge
mov
and
dec
scas
mov
gs
js
mov
ljmp
or
lods
lock
pop
mov
jl
mov
icebp
mov
pop
mov
jbe
jle
iret
mov
mov
ljmp
pusha
cwtl
push
imul
inc
jb
push
push
stos
jb
mov
mov
sti
adc
aaa
dec
stos
push
sub
mov
mov
ficoms
sbb
roll
decb
cs
xorl
mov
mov
add
sub
jnp
je
mov
mov
mov
jae
popf
and
pop
in
add
jo
and
push
mov
add
pop
mov
and
inc
xlat
xor
jle
cmpsb
mulb
xor
cs
aam
inc
cmpsb
or
and
ja
cmp
iret
shlb
clc
sbb
testb
imul
mov
xchg
pop
mov
shll
scas
loope
cmp
mov
fbstp
dec
jg
lret
add
jmp
int
jo
rclb
jge
js
aaa
mov
cmpsb
jmp
popa
xor
jno
fwait
cmp
dec
pop
ljmp
lahf
mov
stc
jecxz
fldl2e
in
jecxz
jmp
or
pop
insb
ljmp
out
mov
lret
and
push
call
fdivs
cld
jecxz
jo
iret
test
mov
sbb
xor
mov
push
test
mov
test
jbe
and
lcall
shll
pop
cmp
adc
or
cmp
fldcw
incb
test
aaa
stos
cltd
cs
dec
stos
jbe
jno
and
mov
daa
cmp
stos
and
inc
int
push
je
sbb
jno
stos
cmp
mov
pop
fwait
mov
dec
inc
mov
jmp
cld
inc
xor
mov
testb
cmp
repnz
adc
xchg
push
out
ret
jo
add
mov
mov
popf
mov
fwait
xor
push
jno
cs
xor
mov
xchg
mov
cs
dec
ret
or
add
lret
xchg
shrl
call
jge
sbb
push
push
hlt
pop
fmuls
ja
testb
jno
lret
add
pop
push
cmp
xchg
pop
les
arpl
cld
loop
lcall
inc
rorl
sub
popf
and
ret
fcompl
loopne
imul
sarl
daa
mov
sub
xchg
inc
mov
pop
inc
mov
mov
daa
sub
jnp
mov
rolb
nop
mov
test
dec
mov
sub
sub
imul
sub
mov
and
lea
xor
adc
push
xor
sub
ret
lods
push
ja
daa
testl
cmp
fdivl
fistps
addr16
into
mov
adc
cltd
std
inc
mov
loopne
ds
popa
mov
int
mov
scas
and
cmpsb
stos
icebp
ds
xor
xor
xchg
scas
dec
fwait
in
lret
push
aad
mov
out
and
mov
mov
outsl
aam
mov
pop
test
xor
dec
sbb
shlb
or
inc
jp
rorl
imul
jns
pop
insl
push
insl
leave
push
rclb
cmc
push
mov
sbbl
stc
jnp
and
lahf
stos
enter
je
jmp
cmpsl
pop
dec
sub
repz
dec
cmp
xchg
cmp
mov
mov
jbe
in
ret
popa
iret
repnz
int3
rcrb
stc
gs
jbe
cmpsb
test
repnz
out
outsb
ds
jmp
add
add
cs
mov
notb
cmp
sub
and
repz
fidivrl
jl
jne
dec
cmpb
cwtl
stos
cmp
sub
stc
imul
adc
mov
lods
xchg
sub
dec
mov
outsl
and
test
inc
jg
bound
xchg
sub
mov
jmp
dec
and
and
adc
fistpl
xor
sub
repz
fcoms
cmp
cmpsb
test
mov
outsl
pop
int3
js
test
arpl
testl
xor
shll
imul
cmp
ljmp
adc
sbb
and
ret
jmp
test
push
loope
lret
mov
sbb
bnd
rcr
lret
jle
sbb
aas
and
cwtl
mov
and
mov
mov
int
and
cltd
xor
icebp
out
mov
dec
ret
xchg
and
bound
into
cmp
inc
mov
inc
push
xor
lods
jae
mov
xor
xchg
or
or
mov
outsb
repnz
sti
dec
out
xor
insl
insb
je
or
push
inc
mov
cmp
push
sbb
or
lods
pop
mov
mov
into
jno
sahf
jo
xor
inc
pop
mov
dec
pusha
lds
sahf
xor
aam
add
jp
jns
loope
dec
cmp
push
imul
pop
xchg
adc
add
pop
dec
mov
mov
mov
push
jge
jge
scas
push
ret
insl
idivb
push
jnp
imul
adc
inc
pmaxsw
dec
rcl
mov
jp
sbb
pop
scas
cli
mov
iret
sub
ds
push
jno
pop
add
mov
or
pop
lds
nop
lods
jbe
stc
outsl
sub
aad
aaa
inc
mov
cmp
or
push
cmp
es
add
rcr
xchg
or
divb
xchg
psraw
lcall
pop
mov
shlb
adc
push
and
mov
call
andb
xchg
andb
mov
mov
cltd
sub
pop
sub
js
sbb
push
push
dec
imull
insl
xor
cmp
mov
or
push
push
in
dec
adc
cmpsb
inc
dec
es
inc
jecxz
and
outsl
push
daa
mov
pop
hlt
shrd
je
insb
push
stos
out
jmp
sub
mov
mov
popa
fimull
subl
pop
sub
cmpsb
xchg
outsb
arpl
ja
mov
cwtl
lds
leave
pop
fs
rorl
call
pop
repnz
clc
lods
mov
sbb
fcompl
in
cmp
add
jb
jmp
stos
gs
cs
test
insl
xor
out
sbb
es
xchg
mov
xor
xchg
jb
push
bound
adc
xchg
xchg
shll
imul
bound
outsl
and
js
add
inc
xor
xlat
insb
dec
mov
xor
bound
or
xor
test
loop
outsb
fdivl
pop
xor
shlb
insl
adc
test
sub
in
jnp
mov
xchg
stos
xor
cltd
je
repz
jle
lock
push
sti
jg
test
dec
cvtps2pi
pop
dec
pop
out
je
adc
hlt
lock
dec
test
inc
insb
movsl
imul
push
rolb
jb
xchg
fistpl
scas
xchg
stc
lret
push
into
xor
dec
sub
or
pop
repnz
fcmovnu
fsub
cmp
cwtl
jae
stos
dec
and
outsb
fsubs
mov
and
inc
dec
gs
sbbb
pop
adc
or
cmpsl
in
inc
push
or
lods
sbbb
dec
sahf
push
push
mov
xor
imul
mov
lock
push
pop
and
pop
stos
arpl
pop
mov
jnp
in
rorl
sahf
gs
xchg
xchg
andl
xchg
fdiv
add
mov
roll
and
add
and
aad
popa
movsl
ret
adc
leave
inc
push
cld
pop
mov
adc
sub
jmp
mov
es
mov
pusha
fadd
dec
cld
and
and
shlb
out
pop
pushf
lods
jecxz
jb
lods
dec
cmpsl
shlb
insb
inc
jbe
inc
cmp
jnp
int
cmc
outsl
jne
mov
cmp
xor
cli
and
mov
call
xor
xor
mov
clc
inc
jbe
and
cltd
pop
xor
jl
cwtl
mov
cmp
lods
mov
push
scas
pusha
push
rclb
in
mov
jmp
test
insb
pushf
in
mov
jecxz
repz
inc
popa
out
inc
inc
sbb
fdivr
ja
adc
out
test
mov
dec
cs
test
add
dec
arpl
dec
ljmp
test
mov
xchg
fstpl
mov
mov
mov
fidivl
dec
push
jmp
sub
sub
rcr
incb
push
inc
inc
jo
idivl
imul
mov
popf
mov
call
add
mov
adc
je
add
lahf
xlat
out
pop
rclb
mov
adc
rcll
dec
adc
push
push
jg
and
adc
mov
inc
in
insb
adc
and
divl
sti
ds
pop
je
ffreep
rcrl
sbb
cmpsb
std
test
xor
mov
mov
roll
cmc
ret
fwait
lods
mov
push
popa
stos
rcrb
push
pop
lods
test
ljmp
cs
shl
push
xor
lcall
jo
and
xor
mov
lret
out
jne
cmpsl
das
cmpl
fdivr
outsb
ss
mov
xor
mov
mov
scas
jge
repnz
lock
pop
out
adc
in
es
push
adc
bound
or
push
lock
push
xchg
pushf
ds
fiadds
repnz
sbb
or
cmp
loopne
mov
mov
enter
lahf
bound
ljmp
xor
aam
mov
outsb
mov
mov
jbe
pop
mov
dec
push
imul
sti
jmp
mov
add
push
inc
daa
pushf
jnp
rcll
repz
mov
out
ljmp
adc
xlat
sbb
adc
stos
lock
and
icebp
sbb
xchg
dec
xor
xorl
jbe
shll
sbbl
out
dec
repnz
loop
dec
add
adc
pop
inc
adc
pop
nop
sahf
mov
test
xchg
shrl
push
lock
and
std
push
aam
stos
aad
fwait
xor
mov
dec
bound
int3
lcall
shrl
lods
adc
push
test
jno
and
lock
jne
dec
in
data16
sbb
prefetchwt1
or
mov
fidivl
sti
mov
icebp
mov
mov
dec
mov
bnd
add
jecxz
pop
std
data16
sub
push
mov
cld
jns
mov
xchg
add
pop
pop
mov
push
shll
lock
stos
cmpsb
ficomps
aaa
inc
arpl
repnz
dec
das
shrl
mov
mov
lcall
cltd
sbb
ss
push
mov
pop
insb
out
jg
push
or
pop
and
fcoms
mov
jmp
jecxz
mov
mull
sub
adc
mov
jl
pop
mov
mov
ret
iret
mov
and
pop
add
cs
stc
add
mov
jmp
mov
mov
fwait
sub
pushf
popa
pop
popf
sbb
out
dec
sub
dec
push
push
bound
and
arpl
test
push
leave
push
sbb
scas
pop
jae
jne
pop
push
pushf
fbstp
pop
pop
xor
pop
jne
add
dec
popf
jae
pop
mov
das
jb
insb
mov
mov
cmp
mov
mov
ss
mov
in
inc
aad
push
pop
pop
imul
and
inc
icebp
jne
js
mov
dec
fs
jmp
jmp
iret
lods
jne
push
insl
inc
fstpl
xchg
xlat
inc
in
push
imul
sbb
xchg
add
sub
mov
and
inc
pusha
push
imul
cltd
pusha
pop
std
sbb
pop
mov
adc
inc
bnd
movsl
adc
lock
sub
and
mov
sub
pop
jo
push
pusha
imul
mov
pop
pop
imul
mov
dec
in
xlat
dec
int3
pop
xor
sub
insl
into
int
dec
pop
lea
and
and
pusha
jmp
clc
xor
adc
pusha
dec
mov
ljmp
les
sub
cld
xchg
ret
and
or
sbb
pop
arpl
imul
or
push
and
sub
aaa
pop
pop
ficompl
mov
xor
sbb
cmc
xchg
clc
or
cmp
in
lcall
je
ja
dec
inc
sarl
cmp
dec
pushf
sub
pop
xor
or
push
xorl
das
stos
lret
jmp
in
sbb
enter
or
out
jae
cs
mov
rorl
adc
aaa
cmpsb
imull
shll
roll
inc
mov
jp
in
jno
dec
pop
stc
dec
fisubs
sub
and
mov
rolb
pop
stos
push
mov
mov
adc
stos
cmp
adc
sysenter
sbb
push
shlb
adc
movsb
mov
fwait
js
and
outsb
inc
pop
scas
pop
es
adc
dec
rcr
mov
dec
push
cmp
js
pop
jbe
lock
in
add
cmp
subb
ljmp
in
add
sbb
je
jle
mov
loopne
jnp
jp
xor
and
pop
imul
insb
imul
mov
mov
xchg
xchg
bnd
movsb
lds
int
stc
adc
cmp
imul
jmp
mov
pop
test
out
adc
mov
insb
ja
psllq
subl
push
ljmp
les
pusha
inc
repz
add
scas
pop
in
and
mov
add
pop
insb
hlt
dec
mov
cmp
push
std
fcompl
mov
stc
xor
stos
enter
lahf
lds
xor
test
loope
rol
rcll
mov
push
lds
aas
repnz
add
in
pop
adc
call
jle
xor
lcall
movsb
dec
andb
add
mov
push
mov
mov
cli
adc
call
subb
arpl
pop
mov
pop
imul
and
lods
scas
imul
and
imul
test
enter
scas
push
es
jns
es
repnz
sti
push
nop
lret
dec
jae
jmp
arpl
mov
sub
in
rcrl
pop
in
mov
loop
add
dec
fsubr
and
enter
rcrl
adc
or
jp
stc
xchg
push
sub
clc
popf
mov
mov
jecxz
add
mov
into
mov
mov
fnstsw
data16
fisubrl
jmp
mov
addr16
mov
movsb
jbe
es
lods
sub
sbb
iret
stc
or
mov
cmp
sbb
xor
mov
and
mov
movsl
jno
mov
jns
insl
enter
out
add
jge
jno
push
pop
out
les
push
xchg
jae
jno
xchg
xor
and
push
and
xor
push
push
add
adc
inc
mov
call
xchg
push
jne
jns
push
inc
push
divb
mov
rorb
in
fsubr
add
fldenv
std
inc
std
gs
out
add
cld
mov
enter
fidivs
jmp
push
fsubrl
test
and
xor
arpl
push
push
add
lcall
fldl
outsb
cmc
lock
pop
enter
dec
bound
out
mov
mov
and
out
mov
fldenv
mov
ret
mov
jo
jnp
call
adc
adc
gs
push
push
fcompl
ja
adc
ret
mov
and
test
mov
scas
ds
add
int3
ret
sbbl
sbb
ljmp
mov
sub
hlt
push
out
nop
out
outsb
cmpl
les
gs
push
jge
pop
sbb
pop
sub
jbe
mov
push
aaa
jae
mov
and
hlt
add
push
inc
imul
incb
stos
inc
mov
push
push
xchg
push
outsb
aad
outsb
out
push
pop
jae
lods
stc
mov
adc
inc
hlt
push
mov
pop
and
cwtl
les
hlt
bound
adc
test
add
outsb
test
sti
hlt
stos
push
and
add
div
imulb
stos
sub
hlt
mov
lret
adc
sub
pushf
das
mov
pop
sbb
mov
andb
inc
lods
clc
ja
jno
pop
loopne
dec
jecxz
dec
in
ret
mov
push
rsqrtps
ret
inc
xchg
xor
mov
cmc
inc
jo
mov
lds
dec
adc
dec
add
rcrl
fnstsw
es
nop
and
outsl
sub
leave
movsb
dec
cld
in
ret
ljmp
jge
loop
ds
xor
addb
jb
sbb
cmp
and
addl
nop
mov
mov
push
xor
dec
inc
sarb
mov
insb
imul
imul
fcoms
dec
imul
jmp
jp
and
fisubs
jmp
jp
js
not
jb
cli
in
test
cmp
mov
sub
clc
inc
adc
add
dec
and
jno
jne
jecxz
ljmp
mov
ljmp
movsl
shrl
lret
cltd
xchg
repnz
out
rol
pop
sub
sub
stos
sub
sub
sub
insb
sub
push
mov
ljmp
sahf
pushl
jo
mov
mov
push
lods
repz
and
ret
mov
cld
enter
cmp
cwtl
and
test
inc
mov
lcall
sub
dec
stos
cli
adc
jmp
cmp
incl
cmp
roll
imul
add
stc
lret
xchg
adc
cmpsb
iret
sub
sbb
outsl
dec
loop
fldenv
inc
in
and
int3
sub
lods
jle
stc
jb,pn
out
dec
jno
sbb
loopne
or
nop
add
insb
mov
sar
jge
mov
cmpsb
mov
adc
ljmp
addr16
hlt
cmp
mov
xor
jae
sub
add
in
fbstp
idivb
adc
ss
mov
negb
fs
sar
or
adc
ljmp
pop
dec
loopne
sbb
inc
jecxz
icebp
lcall
pop
jne
sub
bound
sbb
cmc
sub
lcall
push
pop
jne
jb
xor
cmpsl
das
cmp
popf
out
mov
push
dec
mov
sbb
dec
stos
pushl
cmp
addl
jbe
jae
nop
inc
sub
push
out
ret
pusha
es
pop
out
and
inc
push
jae
push
push
ja
jbe
out
pop
push
add
cmp
rcrb
ja
jle
sbb
sub
mov
xor
insl
push
and
push
add
dec
inc
pushf
iret
jecxz
jmp
add
mov
insl
hlt
and
orb
and
mov
mov
sbb
sub
sti
rcrb
rclb
mov
test
mov
mov
mov
pop
test
nop
subb
mov
clc
rolb
rcrl
add
out
sub
push
mov
mov
call
shrl
popf
dec
add
jg
cld
push
ficoml
and
fucomip
mov
cli
xchg
rcrl
es
gs
mov
adc
movsb
mov
cmp
push
je
xor
push
ficompl
pop
sbb
mov
pop
jecxz
xchg
push
mov
mov
sahf
or
das
rol
push
cld
iret
mov
xor
cmpsl
sbb
push
and
mov
jle
movsb
mov
jb
lods
decl
test
sub
dec
mov
arpl
js
dec
jns
mov
dec
cmpsb
push
popf
pop
sub
sub
inc
or
push
lret
sub
inc
jp
mov
iret
imul
xor
xchg
clc
outsb
and
inc
push
xlat
pop
popa
and
pop
fs
adc
jl
push
sub
popa
inc
sub
mov
pop
sarl
jns
dec
aam
push
jbe
pop
add
jne
in
lret
ljmp
adc
cmp
sti
cmp
loope
adc
push
ret
loopne
inc
fidivl
dec
xlat
mov
mov
push
pop
sarl
jns
jno
and
pop
sarl
jns
adc
out
sbb
pop
mov
mov
sbb
push
xorb
push
sub
call
xchg
out
push
mov
scas
mov
add
sbb
jne
mov
popa
in
push
movzwl
sub
dec
push
arpl
xchg
popa
out
lods
insl
mov
push
push
imul
push
and
push
test
push
push
xrelease
mov
lahf
adc
lea
fldcw
popf
test
fsubr
imul
test
test
jecxz
mov
test
fldenv
stc
ret
mov
sbb
mov
insl
adc
mov
mov
mov
mov
inc
xchg
sub
sbb
and
dec
in
in
lea
mov
dec
imul
popa
ds
mov
or
icebp
lahf
or
pop
mov
lea
mov
int3
arpl
xor
adc
xor
sti
pop
mulb
dec
push
fsubl
mov
mov
aam
out
xchg
stos
mov
jno
mov
xlat
push
sarl
xchg
inc
jbe
lock
out
xlat
test
loop
stc
pop
imul
fdiv
stc
xchg
mov
push
mov
inc
add
dec
mov
inc
dec
mov
mov
cmpsb
movsb
arpl
dec
repnz
pop
push
lds
dec
loope
mov
loope
pop
mov
popf
dec
inc
or
mov
out
mov
jmp
mov
gs
dec
pusha
jecxz
fs
dec
lret
aas
push
mov
cmp
test
jae
lods
cmp
int3
mov
mov
call
inc
inc
outsb
jno
roll
scas
pop
mov
dec
aad
leave
mov
in
mov
xchg
mov
out
pop
push
dec
decl
aaa
mov
loop
cld
mov
das
jge
dec
cmp
lock
sbb
jmp
popf
in
mov
decl
pop
clc
lret
pop
sub
stos
mov
ja
repnz
fcomps
dec
inc
sub
movsb
xchg
in
mov
pop
out
aam
and
sub
outsb
lock
out
cld
push
cmpb
out
jl
inc
push
negl
xchg
sub
stos
jp
sub
push
ret
mov
ljmp
xor
arpl
lahf
pusha
sub
mov
mov
decb
xchg
push
test
out
mov
xor
add
mov
pop
jbe
or
sbb
ret
scas
iret
mov
out
push
andb
xchg
add
je
mov
popf
daa
mov
mov
cmp
in
mov
mov
call
sbb
xchg
pusha
shrl
cmpsb
inc
push
mov
jae
movb
cmp
adc
gs
ss
sub
push
sbb
push
xor
testl
xor
jge
rorb
jge
aam
mov
xlat
mov
jns
jg
icebp
ss
sub
pop
mov
fistpll
xor
aam
and
hlt
jbe
pusha
addl
test
and
cmp
pop
xchg
inc
mov
lahf
loope
mov
loopne
jns
jecxz
mov
inc
cmp
ss
cmc
shrb
jne
sbb
jne
jne
in
mov
ret
inc
lcall
inc
ja
ss
mov
and
fcoms
jae
sub
xor
repz
jbe
sarl
mov
pop
js
in
pusha
mov
pusha
hlt
add
pusha
jne
inc
adc
push
nop
add
pusha
cmpsb
cmpl
stos
enter
sub
movsb
mov
sbb
pushf
outsl
mov
int
movsb
push
mov
mov
mov
dec
xchg
pop
scas
mull
push
mov
mov
push
rolb
mov
ficompl
movswl
and
mov
xorl
pop
divl
ret
jmp
imul
inc
sub
xor
ds
mov
adc
mov
mov
mov
out
xor
add
pop
push
jno
cmc
ja
mov
adc
mov
adc
clc
stos
jmp
inc
and
sub
cmp
clc
insl
je
adc
sub
outsb
popf
jns
sbb
ja
lea
pop
test
outsb
add
and
in
dec
cmp
pop
add
out
inc
lods
pushf
cmp
popf
xchg
mov
iret
mov
cmpsl
pop
push
roll
sarb
xor
jp
push
pushl
mov
popf
cmc
fiaddl
add
and
pop
push
out
xchg
ljmp
push
pop
mov
shlb
bound
xchg
add
pop
idiv
inc
bound
mov
sub
test
push
das
cli
notl
xchg
lret
push
iret
icebp
xlat
sbb
mov
aad
adcb
mov
mov
cs
mov
iret
test
fwait
repz
aam
call
xor
push
std
shlb
es
call
adc
aaa
sbb
outsb
xchg
mov
adc
mov
movsb
mov
call
and
sbbb
lods
jne
cmpsb
js
adc
mov
mov
frstor
cli
loope
inc
cmp
in
mov
lret
xor
ljmp
cmp
add
add
push
and
dec
out
ret
mov
movsl
insl
adc
lret
and
insb
insb
rolb
dec
adcl
jb
add
push
in
outsb
xchg
sahf
mov
mov
mov
insb
imul
xor
or
and
addl
stos
mov
mov
scas
orl
jbe
outsb
pop
int
shrl
adc
adc
subl
push
insl
mov
ss
es
and
cld
repnz
aad
mov
pop
rcr
pop
fisubrl
ret
jle
das
out
dec
mov
ljmp
bound
test
jg
es
test
insb
xor
dec
mov
ror
mov
je
repz
lods
lcall
out
rol
loope
and
repnz
push
jecxz
or
xor
test
mov
roll
mov
mov
daa
sahf
mov
sbb
bound
jb
test
add
out
sbb
sub
sub
xor
es
scas
inc
outsl
xor
xor
jp
and
mulb
dec
aaa
inc
push
fldcw
xlat
mov
sub
jns
fiadds
sub
fidivrs
outsl
arpl
and
mov
cwtd
cmp
int3
shlb
cmc
subb
aaa
nop
dec
mov
xor
int3
adc
mov
pop
bound
mov
clc
aaa
aaa
mov
dec
aaa
add
insb
sub
cmpsb
xchg
adc
sub
xor
mov
xchg
ret
ret
cmp
testb
stos
lock
push
inc
das
dec
sbb
mov
xor
and
repnz
es
mov
jo
insb
orl
ret
xchg
insl
mov
xor
rorl
push
inc
mov
sbbb
mov
lods
xor
sbb
test
mov
fiadds
sub
or
insl
test
scas
insl
adc
sti
cld
mov
lret
push
adc
lods
das
enter
mov
and
dec
xor
push
or
xor
jno
pop
cwtl
loopne
sub
lods
dec
lret
ss
mov
jg
and
dec
mov
or
dec
sub
mov
iret
sub
orl
mov
adc
inc
and
inc
ret
push
mov
sub
inc
fdivp
xchg
xchg
jp
enter
rorb
push
out
push
dec
aad
sub
int
push
data16
mov
pop
sub
mov
mov
out
mov
mov
iret
ds
out
xor
fidivrl
mov
pop
dec
xorb
fadds
shrb
dec
push
test
loop
adc
xor
or
pop
stos
lock
add
pop
xor
jmp
mov
mov
ja
ret
ret
sub
mov
rol
or
push
pop
sub
jle
inc
adc
loope
lret
sbb
and
mov
fildl
in
std
js
call
sub
cwtl
into
subl
dec
push
push
idiv
ret
iret
xor
fisubrl
mov
jmp
jp
mov
jb
lahf
pop
mov
pop
bound
mov
insb
mov
cld
jg
xor
daa
sub
ret
fld
pop
jge
mov
push
inc
cli
push
xorb
adc
cmpb
push
jb
or
pop
outsl
push
push
mov
cld
ja
fisubl
sub
xchg
jl
jecxz
arpl
sub
mov
inc
lods
mov
xor
lock
shlb
dec
xor
fisttpll
add
add
add
sbb
out
jbe,pn
pop
clc
sbb
mov
insl
sbb
jne
mov
pop
stos
mov
dec
mov
movb
xor
cmp
cmp
mov
sbbb
dec
dec
xor
mov
jmp
clc
push
ja
push
dec
imul
adc
xor
lcall
and
mov
gs
and
mov
addr16
mov
inc
hlt
int
pop
jg
cs
imul
int
in
into
jb
push
xchg
jne
pushf
pop
mov
popf
aad
pusha
or
pop
in
dec
jbe
pop
inc
repnz
out
and
in
xchg
outsb
js
cmpsb
sbb
pop
inc
pop
icebp
lcall
mov
and
pop
sub
push
lcall
add
push
add
iret
iret
nop
std
lods
inc
icebp
std
test
mov
clc
int3
pop
out
cmpsl
sbb
movsl
push
push
cmpb
int3
dec
and
data16
mov
ja
and
mov
adc
lea
sub
negl
in
mull
jb
jge
jg
addr16
add
ljmp
bound
and
outsl
or
incb
out
xor
sub
ja
sbb
xlat
xor
inc
sub
testb
jae
cmp
clc
xor
inc
mov
sbb
mov
xor
push
sub
push
mov
rcrl
mov
aas
andb
ret
jae
push
cmp
pop
loop
mov
and
cld
subl
mov
jle
dec
push
jo
cmp
or
lods
or
loope
push
jle
bound
inc
ret
daa
out
xchg
fidivs
idivl
arpl
pusha
push
ret
xor
popf
mov
pop
jb
cmpl
sbb
push
testl
call
sbb
mov
sub
mov
popa
mov
xor
add
ss
sub
sub
and
dec
or
sub
sbb
push
mov
pusha
aas
inc
lcall
nop
lds
sub
leave
sbb
sub
or
iret
cli
mov
mov
cltd
or
int
dec
cs
sbb
out
ret
sub
mov
incl
rol
xor
sbb
cmc
sbb
call
adc
push
daa
aam
imul
stos
inc
xchg
cmpsl
ljmp
jle
cmc
cmp
out
ljmp
jle
dec
cmp
iret
out
cmc
sbb
xor
lds
jl
fs
jno
fwait
inc
adcl
or
push
and
adc
xor
inc
or
push
clc
mov
xorl
or
push
int
and
push
mov
mov
testb
pushl
add
movsb
and
pop
popa
fldenv
push
or
stos
movsl
sub
and
movsl
pusha
jp
pop
bound
bnd
jb
stos
and
sub
push
pop
jp
inc
sbb
sub
roll
xlat
pop
mov
and
in
cmp
dec
and
xor
mov
jg
xchg
or
shlb
nop
stos
pop
pop
scas
cmpsl
mov
rdtsc
ss
stos
push
mov
xor
xadd
shr
xor
scas
aam
sbb
push
inc
insb
movsb
stc
cmp
dec
mov
xchg
pop
jnp
mov
fs
xchg
push
xchg
or
shll
mov
aam
dec
inc
mov
scas
dec
jno
mov
sbbl
jno
js
pop
fidivrl
lods
cmc
adc
lahf
arpl
jno
fcoml
ret
xlat
aad
stc
clc
ja
cmpsb
call
jmp
clc
dec
iret
mov
xchg
sub
xor
mov
jno
scas
enter
inc
negl
jle
cltd
fsubl
das
cmc
sbbb
aad
inc
sub
xor
lock
jno
ficoml
mov
mov
test
jecxz
testl
lcall
mov
pop
aad
cld
sub
and
mulb
xor
pop
cmp
sbb
pusha
jmp
adc
stos
fwait
cli
fidivl
jbe
test
inc
test
sub
popf
xorb
test
inc
es
sub
dec
xor
mov
push
xchg
mov
mov
mov
mov
and
inc
push
dec
fidivl
sub
cmp
sub
sti
in
int
sub
je
jne
icebp
cmp
adc
aad
mul
in
adc
jecxz
lcall
mov
cmpsl
fisubrl
cmc
mov
pop
aaa
popf
repz
xor
pusha
shrb
out
icebp
in
ret
movsb
xor
jge
test
movsl
fsubrl
imul
sahf
xor
and
or
xchg
icebp
push
subb
or
cmp
xor
or
pusha
cmp
ds
or
dec
fdivrs
xor
cmp
ss
scas
arpl
mov
mov
inc
out
test
dec
pusha
adc
lahf
mov
loopne
roll
rcr
dec
jmp
pop
mov
pop
bound
or
rcr
jns
jmp
adc
sub
frstor
out
adc
repz
push
dec
pushf
lods
shlb
fisubrl
lret
xchg
minps
fisubrl
inc
in
mov
pop
cltd
mov
ja
inc
sarl
test
push
dec
or
dec
adc
jae
or
sub
adcl
xchg
xorb
mov
add
leave
cmpsb
pop
sbb
mov
mov
push
sti
and
aas
sbb
adc
test
and
outsl
ds
mov
and
cmp
jno
jg
cmp
jb
xor
pop
sbb
mov
or
push
push
pop
je
dec
ljmp
das
add
cltd
sbb
scas
dec
mov
xor
insl
cwtl
pop
in
xchg
js
repnz
mov
cmp
fs
pop
test
and
ret
cmpsl
push
stos
in
shll
enter
in
hlt
jg
xchg
sbb
out
mov
xor
add
stc
adc
repz
jne
mov
sbb
mov
icebp
mov
cmp
cwtl
xor
pop
clc
cltd
sbb
mov
out
fcoms
or
cwtl
pop
sbb
insb
push
mov
outsb
je
jmp
pop
pusha
xor
fucom
ja
fsubl
movsl
xor
ja
mov
xor
xchg
jo
lock
or
mov
shlb
outsl
enter
loop
je
lret
push
lods
lods
jbe
out
sbb
nop
fisubrs
mov
sub
xchg
jo
sbb
shrl
adc
dec
in
out
cmp
mov
mov
stos
sub
xor
daa
xor
jb
js
mov
aas
pop
push
jo
out
xchg
xchg
sub
mov
dec
mov
in
pop
leave
or
xor
iret
dec
out
cmp
or
cmc
and
fs
cmc
mov
sub
lret
mov
push
cmc
adc
mov
dec
aas
and
cmpsb
cmp
flds
mov
sbb
pusha
dec
insl
shlb
xor
push
jo
loopne
idivb
movsb
add
xor
rorb
pop
add
and
jb
daa
movsb
or
cmp
cmp
clc
xor
and
aas
push
mov
mov
or
stos
sub
int3
jmp
and
xchg
cmp
fcmovnu
push
and
out
xchg
push
popa
add
sub
mov
mov
movsl
push
pop
test
pop
movsb
add
and
pop
and
and
imul
sub
mov
xor
xor
movaps
scas
jp
insb
sub
jbe
sub
pusha
jbe
imul
je
popf
adc
xor
addl
lcall
cmp
sbb
aaa
add
sub
mov
inc
xor
jecxz
inc
lcall
scas
ja
inc
cmp
fidivl
sub
outsb
mov
mov
adc
add
cli
ret
lea
jnp
cs
adc
scas
xor
js
push
xor
not
sub
cmp
mov
addr16
jns
movsb
cmpsb
jne
pop
fisubrl
mov
fidivs
ss
js
sub
dec
mov
pusha
loopne
imul
scas
or
adc
sarl
fcompl
adc
or
jbe
push
jne,pt
iret
shrb
push
push
loope
push
dec
call
mov
jae
pop
mov
in
repz
ror
and
loopne
enter
ret
xorb
pop
push
mov
stc
fcmovnu
movsl
pop
mov
test
xchg
pop
sub
pusha
mov
xchg
adcb
dec
orb
repz
sbb
push
lds
bound
ljmp
jne
mov
cmp
mov
sub
mov
add
mov
cmp
outsl
test
sbbb
shrl
ret
mov
sbb
mov
shll
xchg
sbb
popf
jo
push
mov
mov
loope
push
sbb
loope
xchg
push
cmpsl
ljmp
es
mov
jle
in
add
ret
stos
icebp
mov
dec
sbbb
icebp
sub
aaa
lret
bound
inc
scas
mov
pop
pop
fcoms
xchg
sub
call
scas
inc
loopne
or
pop
je
jg
push
or
and
mulb
loop
sbb
xchg
push
mov
and
mov
ja
fldl
flds
mov
dec
mov
addr16
cmp
bound
mov
outsb
mov
mov
jae
push
jmp
rclb
data16
lret
jb
mov
jge
push
xor
lret
and
mov
adc
xchg
adc
mov
inc
dec
mov
push
scas
push
cli
lahf
enter
fnstenv
adc
dec
icebp
push
cmp
sbb
ret
daa
mov
xchg
push
dec
pop
fstl
mov
inc
ljmp
int3
fmuls
cli
push
nop
mov
mov
ret
mov
hlt
lds
xchg
das
push
xor
cmc
loopne
movsl
mov
sub
mov
cmp
mov
mov
sbbb
je
adc
stc
inc
aaa
jo
aas
or
jp
cmpsl
mov
pop
aas
icebp
jp
cmp
push
ret
in
add
sub
sti
add
pusha
nop
je
xchg
out
mov
jecxz
subl
js
es
pop
sub
sbb
ret
xor
xor
and
ret
mov
push
push
data16
xor
sarl
jo
rolb
sarb
loopne
xor
cld
daa
stos
lods
push
xorl
push
jnp
mov
dec
jg
push
push
jp
adc
stos
test
jmp
rcll
imul
test
std
test
out
insl
inc
nop
push
adc
cmp
jecxz
test
adc
int
stos
and
shll
mov
mov
sbbl
dec
sbb
cmp
adc
push
loop
sahf
push
mov
les
stos
fisubrl
inc
repz
add
iret
les
js
not
xchg
pop
clc
xchg
aad
add
and
sbb
dec
imul
pop
in
sub
aas
lea
insb
mov
sbb
std
adcb
xor
push
inc
sahf
cmp
inc
or
movsl
add
mull
xor
das
loope
add
pop
scas
ja
subl
outsb
push
lods
iret
mov
cmp
sub
add
xor
test
stos
ficoml
xchg
fwait
sub
das
sbb
xchg
xor
lret
arpl
mov
and
pop
mov
pushl
andl
mov
or
hlt
xchg
ss
and
or
or
push
pop
hlt
push
js
push
lods
mov
add
aad
mov
dec
into
subl
int3
arpl
mov
divl
and
jbe
test
mov
leave
dec
mov
mov
scas
cmp
repnz
repz
xor
lods
imul
scas
sub
push
xor
negl
cmp
sub
mov
push
movsb
xchg
xor
mov
adc
mov
jecxz
push
sub
push
jb
outsb
bound
mov
and
js
dec
roll
push
and
xchg
cltd
in
pop
pusha
cld
cltd
iret
js
xor
push
or
jg
inc
or
ss
in
mov
or
divl
push
add
push
cmpsl
pop
and
push
js
cwtl
push
mov
sub
push
dec
pop
scas
jo
or
mov
js
sub
lsl
xor
push
and
dec
int
in
cs
fdivp
aam
in
mov
xchg
jmp
mov
push
mov
out
push
js
pop
cmp
and
enter
leave
dec
jl
xor
pop
addr16
shr
push
push
xor
mov
insl
pop
push
mov
in
inc
cli
pop
push
xchg
les
or
test
ret
mov
in
push
jbe
shrb
mov
dec
mov
pusha
hlt
push
fcmovnu
xorb
stos
imul
adc
das
sahf
insl
xchg
mov
or
int3
in
fldl
js
push
dec
cmp
sbb
adc
mov
jne
mov
lods
ljmp
push
jbe
sbb
jo
icebp
ljmp
lods
repnz
aaa
in
mov
aas
ficoms
inc
or
rolb
push
leave
xchg
popf
jne
cmpsl
lret
lret
fcmovu
rep
es
adc
enter
fs
cmp
lcall
pop
cmp
je
ret
fs
push
inc
jbe
fldcw
imul
fbld
xor
xor
sbbb
aad
mov
push
divl
pop
inc
call
xchg
sub
mov
prefetch
stc
cmpl
mov
push
mulb
pop
es
push
shrl
jo
stc
mov
push
bound
and
mov
adc
mov
or
jp
repz
sbb
xlat
inc
gs
sub
inc
int
lods
cmp
dec
push
jmp
jmp
mov
pop
jne
sub
fimull
mov
xor
outsb
mov
mov
jae
addb
and
mov
push
mov
fcomp
insb
and
rolb
add
pcmpeqb
push
insb
mov
xabort
push
lahf
jno
sub
inc
rcrb
cli
add
xchg
insl
mov
pop
sbb
fisubl
ds
lahf
ss
and
and
dec
pop
in
fisubs
gs
jle
int3
repz
pop
cmpsl
das
jnp
sub
sbb
addl
subl
ds
xchg
fsubrs
leave
movsb
sub
inc
cli
sbb
push
wbinvd
imul
shlb
pusha
push
vfrczsd
jnp
sbb
nop
mov
fistpl
dec
fisttpl
je
loopne
jno
arpl
xor
sbb
or
aad
dec
mov
outsb
in
jnp
lds
jge
lods
jb
mov
sub
mov
lcall
rcrl
movsb
xchg
lods
bound
imul
fcomps
daa
loope
es
dec
mov
aad
and
imul
test
inc
and
inc
push
addb
jno
cmp
inc
insl
push
xlat
sbb
jecxz
pop
xchg
jne
inc
fxch
or
mov
push
cmp
hlt
jns
nop
enter
lret
xchg
or
rolb
push
popa
mov
inc
and
cmp
pushf
push
sub
xor
daa
stos
iret
xor
push
outsb
sbb
mov
mov
dec
mov
and
jl
inc
repnz
mov
pop
shll
aaa
push
movsbl
xor
and
ljmp
jno
movsb
xchg
sbb
add
in
pushf
jmp
add
int3
in
jns
jmp
push
je
pop
lods
mov
push
cmpsb
shlb
fists
sub
mov
mov
xchg
jp
lds
sbb
dec
out
nop
mov
push
mov
and
mov
mov
jb
push
mov
jbe
in
rcrl
adc
sahf
xor
movsl
xchg
xor
inc
inc
sti
jae
bound
inc
pop
js
and
rcrb
mov
das
and
cmp
mov
xchg
rcll
daa
or
mov
dec
enter
imul
cli
dec
sub
adc
or
sbb
iret
mov
or
or
mov
out
imul
leave
shr
inc
xor
xor
popl
icebp
push
addr16
fs
push
mov
jno
imul
and
leave
imul
mov
icebp
data16
jnp
sub
ficoms
stos
in
shll
jbe
push
outsb
in
lock
iret
test
repz
aad
rolb
mov
jmp
mov
leave
insb
xchg
or
and
arpl
in
gs
adc
data16
xchg
lcall
rcl
add
jge
sub
ljmp
jne
inc
pop
jmp
insb
loopne
out
mov
cmp
add
mov
nop
stc
sar
inc
lds
imulb
inc
push
mov
sbb
shrl
mov
wbinvd
rcl
leave
xlat
xchg
dec
ja
out
insb
clc
push
dec
clc
mov
cmp
scas
out
fcompl
and
das
js
scas
aad
xchg
inc
mov
cmpb
push
lret
dec
adc
dec
adc
xchg
xchg
mov
sti
or
fisttpl
pop
cmpsb
xor
fidivrl
je
pop
arpl
out
pop
and
push
mov
mov
and
fsubs
add
pextrw
lcall
test
or
push
fistl
bound
jne
cltd
dec
rorl
rcrb
ss
sub
mov
js
leave
imul
test
dec
pop
add
sbb
cmp
mov
arpl
pop
fimull
pop
lahf
iret
ss
cs
loop
test
sbb
jb
or
aad
outsb
mov
stc
divb
inc
and
stos
out
inc
pushl
cmp
outsb
repz
and
adc
add
pop
int
mov
xorl
push
es
xor
ret
out
and
lahf
divl
pop
imul
imul
mov
pop
sub
repz
icebp
push
dec
jmp
cmp
in
dec
inc
sub
cmp
js
xor
dec
or
int3
call
decl
cmp
imul
loop
cmc
and
rcll
fnstcw
inc
xchg
mov
addl
in
add
xchg
pop
cmp
cmp
xchg
scas
test
setp
sub
xor
into
rcrl
mov
lods
xor
fs
dec
je
add
push
stc
fs
xor
dec
neg
test
sahf
out
push
or
jecxz
fiaddl
lods
mov
jnp
cmp
add
push
leave
inc
jnp
imulb
inc
push
pop
inc
xor
xchg
arpl
jge
stos
sbb
bound
xchg
cmp
push
xchg
or
jne
and
ja
out
pop
test
stc
sub
mov
das
aam
sub
js
cmp
mov
xor
inc
xor
push
cmpxchg
cwtl
out
mov
or
pop
inc
push
mov
pop
push
fcmovnbe
stc
inc
xor
xor
dec
push
mov
sub
xchg
add
push
not
inc
sub
movsb
mov
push
mov
out
imull
into
int
outsb
xorb
add
data16
test
out
stos
scas
push
in
addr16
mov
jnp
imul
mov
out
jbe
imulb
xchg
fisubrs
fisubs
push
sbb
test
mov
pusha
jbe
repnz
push
pop
mov
jae
movsb
push
ret
std
lahf
rorl
pop
pop
loop
xlat
push
mov
pop
imul
je
imul
lahf
ss
pop
mov
mov
scas
push
loopne
adc
in
hlt
fistpl
push
repnz
addr16
pop
jne
in
call
sbb
aas
push
stos
jne
ja
sbb
push
out
lret
pop
js
out
lds
mov
pop
xchg
lea
and
jo
sbb
out
sbb
dec
pop
cmpsb
adc
mov
addb
add
movsb
int3
pop
inc
aam
int3
or
inc
insl
dec
insb
paddq
or
dec
xchg
fisubrl
popf
rcrb
pop
adc
test
mov
je
jmp
fs
xor
sub
adc
test
pop
setbe
movsl
dec
add
xor
out
or
lahf
les
pop
pop
lds
inc
mov
xlat
mov
in
cmpsl
shlb
lods
in
pop
cmpl
pop
hlt
lret
add
mov
lods
mov
xor
and
or
std
push
in
out
jge
jne
ja
decb
fmulp
lea
mov
bound
jecxz
outsl
les
mov
rorl
jo
aad
icebp
push
pcmpgtd
push
pop
inc
shlb
cli
ret
or
xor
call
jmp
clc
adc
sbb
fstpt
xor
fimull
mov
mov
clc
movsl
and
mov
loopne
xchg
arpl
loope
enter
xor
fdivrl
dec
push
dec
clc
mov
inc
insb
clc
mov
inc
or
mov
std
push
sub
inc
test
rolb
je
movsl
fdivs
andb
mov
or
std
das
and
orl
push
push
jb
addb
insl
ss
mov
sahf
testb
push
dec
add
pop
xor
imul
leave
pop
cmp
add
scas
add
aas
lock
or
ret
test
pop
fwait
pusha
add
aad
jbe
push
out
shlb
scas
mov
jbe
push
outsb
shlb
jge
and
hlt
mov
bound
cmp
ret
inc
nop
inc
js
push
xchg
arpl
push
pop
and
loop
popa
jbe
loopne
xchg
arpl
push
jg
outsl
loop
outsl
bnd
xorb
pop
icebp
ret
ret
and
ja
mov
mov
sub
adcb
ret
int3
or
ret
or
ret
test
loope
in
stc
out
je
loopne
xchg
arpl
lahf
addr16
das
cmp
push
jecxz
verr
aad
and
addr16
adc
fadd
adc
stos
cmpsb
ret
fs
pop
mov
jp
dec
push
dec
push
rep
pop
sbb
jle
fistl
fidivrl
lret
jns
jo
push
sub
in
ja
fwait
mov
fs
adc
add
mov
repnz
aas
xchg
aas
xchg
mov
xchg
mov
cld
bswap
lret
aam
adc
jo
aad
cmp
adc
iret
cmc
cwtl
xor
ret
jo
es
loope
jo
test
bnd
je
jmp
jo
ror
fwait
daa
adc
jo
add
sbbb
je
pop
movsb
cmp
shl
ds
push
jns
lcall
aaa
mov
cld
repnz
push
loop
es
jb
dec
das
and
jo
push
inc
sahf
sbb
mov
and
das
and
push
into
mov
test
and
lods
mov
lods
sub
les
into
movsb
jno
mov
sub
shl
or
and
mov
sub
enter
push
js
mov
push
dec
inc
iret
hlt
mov
fnstcw
out
adc
mov
xor
pop
cmp
clc
and
xor
push
add
cmpb
dec
pop
and
push
mov
push
inc
push
es
xor
push
cmp
arpl
or
jecxz
jnp
cmp
mov
dec
and
int3
xor
jbe
loop
clc
or
lea
mov
int3
sub
jecxz
cld
std
dec
adc
pop
cmp
dec
push
enter
jecxz
in
inc
xor
push
mov
sub
fcmovb
rcll
or
fiaddl
outsb
mov
xchg
inc
mov
push
mov
or
push
aad
xchg
mov
pop
xor
call
push
out
push
xor
jge
aam
xor
push
jmp
sahf
inc
cli
cmpsb
popf
cmp
sahf
and
mov
sarl
or
lahf
jno
sbb
push
sub
sbb
icebp
int3
jnp
pop
xor
jo
fcmovu
icebp
jne
fs
sahf
or
cld
cmpsb
movsl
clc
or
pop
add
or
dec
or
cld
cmpsb
push
xchg
cli
mov
dec
test
and
test
xor
loopne
xor
sti
dec
push
jns
sbbl
in
enter
jae
add
jae
rolb
fistpl
and
xchg
mov
mov
and
xchg
test
addr16
inc
pushf
hlt
lcall
lea
icebp
jbe
ja
mov
stos
clc
inc
test
adc
ficomps
mov
mov
xor
mov
clc
pop
pop
popa
mov
xlat
js
adc
in
pusha
repz
pop
push
inc
xchg
pop
andb
add
push
leave
and
xor
cmc
push
mov
mov
add
or
and
outsl
movsb
ret
roll
adc
or
jo
rorb
sbb
or
shrb
and
repz
xor
fcmovnbe
stc
add
fcoml
sub
pop
sarb
fsts
xlat
push
mov
pop
push
pop
in
inc
mov
xor
sbb
pushf
out
sub
mov
sbb
mov
jo
mov
fsubrl
out
xor
lahf
mov
je
cwtl
sbb
inc
cmc
pushf
add
mov
frstor
fstpl
test
sbb
xor
mov
sti
ljmp
push
mov
and
add
or
stc
pusha
aad
mov
jl
in
xor
outsl
add
ja
xor
fidivl
adc
inc
out
mov
mov
call
lcall
xchg
fwait
mov
data16
enter
push
fcompl
or
divl
lcall
std
inc
into
fs
std
inc
dec
addr16
das
add
pop
outsl
jno
cltd
push
cmp
push
inc
in
inc
repnz
out
xor
es
pop
shl
aas
push
iret
mov
and
je
add
pop
xchg
inc
push
xor
inc
leave
outsb
pop
mov
stos
call
lea
push
dec
sbb
test
pop
and
xchg
leave
call
arpl
addr16
pop
push
stos
jbe
push
push
lahf
xor
push
out
add
cs
test
mov
xchg
dec
push
fnstenv
mov
jbe
insb
cli
xor
mov
and
loopne
sub
pop
js
out
icebp
insb
mov
mov
mov
lock
xor
out
and
out
sarl
fst
les
jns
sub
jo
in
pop
call
ja
sub
scas
in
hlt
xchg
cmp
sub
out
mov
sub
out
outsl
jle
lods
jp
in
daa
outsb
shl
jmp
out
mov
mov
shll
outsb
repnz
xchg
arpl
push
popa
sub
sub
add
push
lock
xorl
pop
or
iret
adc
push
jno
mov
out
push
cmc
sub
xchg
ret
inc
scas
and
scas
add
cmp
dec
push
push
aaa
outsb
ja
sbb
inc
sub
or
pop
mov
fisubl
mov
pop
and
pop
outsb
ja
cld
mov
mov
push
and
push
imul
into
dec
leave
fiadds
jg
stos
jns
or
js
pop
nop
cltd
mov
clc
rcrl
or
aas
cmc
and
mov
cmp
and
adc
sub
push
pop
aad
jns
sub
cmp
mov
jo
mov
leave
adcl
mov
cmpb
mov
fimuls
pop
pop
into
lahf
xor
shll
and
pop
stos
jb
mov
mov
sub
imul
ficoms
fidivs
inc
push
aas
xor
stos
push
stos
dec
jmp
cmp
cld
jno
fidivl
pop
jecxz
dec
jnp
cmc
and
push
and
cmpsl
push
mov
jns
mov
inc
fiadds
sub
pop
addr16
dec
sub
imul
adc
or
aam
jo
mov
xchg
add
add
push
adc
mov
jecxz
rorb
fsubl
scas
and
inc
scas
sub
fnop
fadds
jns
mov
test
add
subl
movsb
lret
addr16
add
xchg
das
lods
jns
mov
xchg
arpl
push
lock
or
pop
pusha
insl
or
jge
inc
lods
jns
mov
mov
scas
cmpsl
fstpt
adc
sub
inc
dec
or
or
inc
add
pop
or
mov
mov
jl
sahf
gs
or
mov
pop
jecxz
mov
and
ds
and
sbb
add
andb
mov
mov
insb
mov
lcall
jno
pop
ljmp
aaa
xchg
dec
scas
push
dec
clc
jle
int
and
icebp
inc
dec
insl
pop
or
clc
mov
mov
repz
xchg
jbe
je
jmp
aaa
scas
ja
jge
push
scas
jecxz
pop
cmp
adc
add
push
mov
jp
dec
push
dec
clc
dec
ja
divl
push
js
mov
inc
push
pop
mov
cmp
fsubp
cmp
loopne
xchg
arpl
push
inc
scas
push
imul
fs
jge
aam
cltd
and
and
jno
or
mov
test
insb
push
lods
mov
stc
ja
add
pop
je
mov
insb
aaa
scas
ja
mov
xor
pop
cmp
lods
std
sub
lahf
mov
je
aad
data16
enter
and
loop
fimuls
cmp
negl
and
push
and
sbb
sbb
imul
push
jg
sub
push
jg
mov
fnstenv
lret
pop
mov
xor
or
push
movsl
sbb
mov
and
add
adcl
jbe
jnp
jle
stos
mov
test
mov
and
and
ffreep
mov
push
sub
dec
pop
mov
push
jp
jnp
decl
test
or
jle
lods
jns
fwait
jbe
lahf
adc
sub
add
cmp
sbb
lret
xchg
sub
xorl
xor
stos
lods
add
or
xchg
inc
mov
imul
arpl
sub
jbe
or
imul
push
inc
pop
loop
cmp
mov
and
cltd
add
push
lock
mov
sbb
insb
pop
sub
cmp
outsb
push
cli
dec
stos
in
mov
jnp
lods
ja
out
lods
jnp
jge
insb
xorl
insb
sub
stos
push
mov
leave
mov
xor
rorl
sbb
xchg
push
mov
or
fcoml
outsl
xchg
xchg
aad
std
stos
out
mov
jbe
pusha
fsubrs
or
roll
mov
scas
dec
je
sbb
mov
int3
or
and
push
out
adc
ret
or
ret
mov
adc
mov
xlat
mov
addb
shrl
cmc
jecxz
icebp
add
outsb
xorl
and
or
cmp
leave
inc
xor
icebp
mov
ds
adc
ds
and
test
add
in
inc
mov
dec
mov
push
dec
or
mov
fdivl
int3
cwtl
in
push
ret
subl
cmp
and
add
ds
and
jno
jo
mul
out
mov
lcall
mov
jge
jo
mov
jle
mov
clc
aad
jbe
jnp
pop
and
jno
fisttpl
xchg
aad
mov
mov
popa
mov
scas
jae
jecxz
jb
and
jg
inc
add
jecxz
aas
hlt
jno,pt
and
mov
ror
fidivrl
pop
test
xlat
negl
pop
outsl
aam
repz
jbe
addr16
mov
push
dec
clc
mov
sub
and
inc
or
in
loop
jb
inc
mov
fsts
push
idiv
mov
popf
popl
push
in
inc
je
insl
shll
xor
in
xchg
fwait
in
rol
mov
or
cmpsl
jb
mov
push
and
sub
shrl
in
push
mov
roll
and
cli
adc
call
notb
xor
pop
sub
ljmp
mov
jbe
or
cmc
in
cmpsb
xchg
xor
push
subl
jbe
rolb
xchg
inc
repz
aam
je
push
xchg
arpl
push
repnz
jne
fs
xor
mov
loop
lahf
jecxz
cmpsb
pop
jecxz
lock
movsb
xor
dec
jns
stos
stc
aaa
iret
inc
cmp
addb
stos
loopne
and
in
jns
dec
aad
jbe
stos
and
mov
lcall
push
jno
fstpt
test
dec
ja
decl
shll
mov
mov
xor
jg
mov
mov
push
adc
sbb
push
jecxz
les
push
loopne
push
pop
sbb
scas
push
and
sbb
lods
xor
cmp
sub
push
cmp
cli
add
mov
jae
pop
stos
fsubp
lods
sub
pop
dec
cs
dec
iret
and
mov
xor
clc
cld
pop
push
push
sbb
adc
push
pop
cmp
sbb
inc
shr
popf
push
divl
fisubs
call
es
mov
faddl
jp
loop
lahf
cmp
scas
dec
lret
mov
imul
jge
mov
add
sbb
divb
mulb
mov
loop
jo
sarb
sti
mov
fcompl
pusha
add
mulb
xchg
jecxz
divl
leave
notb
rcll
mov
into
test
jge
pop
jge
nop
dec
fsubrp
inc
out
mov
cli
pop
sub
add
dec
fcom
es
jbe
repnz
mov
push
sbb
add
mov
scas
repz
loope
iret
sbb
lods
dec
insl
insb
push
inc
push
push
fnstenv
cmp
repz
fadd
cs
adc
mov
inc
bound
or
sub
and
xor
mov
pop
imul
jnp
stos
popf
in
add
fmulp
jnp
sahf
out
cs
std
cwtl
fmull
ficompl
stos
mov
je
dec
jno
clc
ds
bound
scas
push
cmp
dec
mov
pop
inc
inc
or
xchg
fdivr
mov
and
cmp
xlat
outsl
movl
repz
iret
mov
mov
add
jbe
shlb
in
add
test
mov
inc
lock
push
cmp
lods
mov
insb
pop
les
outsb
outsl
sub
lcall
icebp
into
push
pop
add
push
ss
mov
cmpsl
outsl
add
clc
sbb
bound
int3
push
fcompl
js
insb
or
pop
std
sbb
mov
out
imulb
mov
mov
mov
push
stc
add
imul
pop
cmp
movsb
int
jns
dec
js
cli
pop
cs
xorb
mov
sub
add
or
xor
inc
subl
sub
xor
mov
adc
lds
jae
xchg
xor
pop
sub
cmc
and
ss
cmp
out
mov
adc
fisttpl
cwtl
push
sub
inc
je
repnz
push
mov
fstpt
mov
pop
mov
scas
push
pop
add
xlat
icebp
fildll
cmp
jmp
inc
sub
lea
mov
sbb
js
adc
ret
inc
out
sub
out
jmp
cmc
and
inc
or
jne
pop
inc
mov
add
mov
mov
pop
dec
test
jb
in
mov
adc
mov
lahf
xor
jmp
ret
adc
sub
jecxz
push
xor
lea
jae
outsl
psubd
cs
mov
jbe
sbb
jno
or
xchg
jle
popf
pop
stos
lcall
xor
dec
jge
test
icebp
pop
lods
or
loop
or
jb
lret
and
sub
ret
mov
int
jl
push
out
jmp
test
outsb
jae
push
sub
jbe
jge
out
jp
dec
test
sub
cmpsl
push
mov
aaa
push
sbb
mov
cmp
out
cli
adc
or
or
idivb
into
stos
stos
pop
scas
add
stc
js
inc
sub
mov
cld
adc
inc
imul
pop
stos
dec
aad
jo
scas
scas
js
stos
push
dec
stos
scas
add
outsb
mov
mov
jne
mov
lods
ds
addr16
xor
subb
faddl
mov
fcmovu
shrl
popa
rcll
cmp
jle
xchg
or
mov
notb
enter
sub
mov
flds
leave
cs
mov
in
into
dec
imul
xchg
push
push
insl
push
or
out
in
add
adc
dec
in
add
pop
shll
arpl
pushf
sbb
movsl
pop
jb
fndisi(8087
out
js
sbb
dec
rclb
and
mov
fcoms
sbb
lcall
ja
xor
mov
fistps
push
mov
ja
mov
jns
jbe
jg
pusha
outsl
jbe
imul
movsl
pop
mov
mov
out
std
mov
cmp
inc
inc
imul
dec
outsb
repnz
lods
stos
dec
add
es
jns
dec
insb
inc
or
movsb
divb
push
movsb
xchg
call
rorl
fcom
lock
xor
jne
xor
pop
adc
push
je
insb
mov
xchg
mov
or
push
xor
adc
inc
ret
xor
mov
repz
adc
adc
mov
outsb
lock
jecxz
jb
scas
cmpb
mov
jbe
push
insb
shlb
mov
test
pop
bound
xor
sub
in
pop
flds
sbb
push
inc
outsb
cmp
mov
jbe
push
in
lcall
popf
scas
add
pop
fnstcw
adc
inc
dec
stos
cmp
sbb
mov
mov
jbe
push
out
shlb
fistpl
add
inc
sbb
adc
push
and
and
inc
outsb
xor
mov
jbe
and
std
xlat
jg
mov
add
adc
ds
mov
and
sar
adc
js
adc
dec
andl
int
mov
sbb
or
push
and
push
mulb
data16
jbe
loope
fwait
insl
ja
inc
test
ficompl
mov
jne
sbb
imulb
adc
sub
sbb
stos
loopne
movsl
call
mov
jbe
outsl
fisttpl
sub
out
mov
pushf
adc
movsb
lcall
adc
mov
test
fdivrs
gs
add
mov
div
inc
mov
aaa
cld
jnp
imulb
fs
sub
sbb
mov
sbb
push
repnz
pop
xor
pop
testb
lcall
ds
movsl
js
xlat
gs
mov
xchg
movsb
shlb
test
sub
dec
cmp
and
rcrb
into
push
stc
sub
jae
scas
sbb
sub
scas
lods
aaa
jbe
mov
inc
mov
aaa
jne
dec
jmp
add
jnp
and
into
lcall
movsb
mov
outsb
popf
xchg
and
xlat
int
ds
or
hlt
push
mov
mov
popl
ds
jmp
add
xchg
sbb
insb
xchg
aad
add
pop
jp
cmp
inc
bound
cmp
pop
fdivl
ror
jno
xchg
mov
arpl
fisubs
adc
pop
stos
mov
add
mov
sub
push
js
insl
jns
push
adc
shrb
push
xor
and
adc
out
push
dec
popf
mov
shrl
rcrb
pop
jecxz
mov
aaa
xor
js
mov
enter
sar
in
sete
mov
or
mov
mov
in
insl
mov
in
pop
mov
loopne
push
sbb
in
pop
pop
mov
lret
mov
jmp
mov
dec
jecxz
rorl
fcmovnu
cmp
push
cmp
bound
jmp
sbb
loop
out
xchg
mov
xchg
into
and
push
clc
roll
leave
sub
adc
test
call
call
mov
mov
outsl
outsl
xchg
mov
out
push
dec
add
xor
stos
mov
loope
rcrl
xor
pop
les
call
subl
adc
ljmp
or
push
syscall
imul
test
cmp
xor
push
mov
inc
mov
xchg
lret
inc
dec
xchg
repz
and
sub
pop
stos
sub
push
inc
mov
ret
inc
dec
ret
mov
leave
and
insl
fistpl
mov
sbb
out
je
cld
xchg
in
sub
divb
adc
jnp
sti
or
rcrl
sbb
cmpsb
jb
and
mov
mov
aam
add
fmul
mov
cmpsb
divl
xchg
pop
gs
punpckhbw
xchg
stos
sbb
jmp
out
xchg
and
outsb
and
ds
mov
pause
xchg
pushf
jge
pop
dec
mov
mov
push
ret
lea
jmp
js
jle
je
cli
push
dec
jle
adc
nop
stos
inc
jns
movsb
mov
inc
adc
adc
pop
pop
sarb
bound
jmp
or
sti
jo
jne
fcmovnu
adc
lock
pop
adc
jns
pop
adc
jecxz
mov
daa
loope
sbb
daa
mov
add
daa
jne
das
pushf
out
outsl
icebp
std
jae
cli
ds
mov
cmpsl
daa
test
outsb
pop
loope
push
pop
repz
fldt
fists
nop
dec
mov
adcl
dec
fsubrl
lret
decb
std
dec
scas
cli
mov
add
inc
xchg
push
lds
inc
in
daa
push
add
lahf
and
repnz
lcall
bnd
push
xchg
xor
mov
and
test
sbb
pop
bound
cmp
pop
ficoml
js
and
ja
hlt
pop
ja
ret
push
adc
jmp
bound
xchg
fwait
mov
and
dec
adc
push
rorb
loope
jg
sub
inc
mov
xlat
pop
or
fsubl
clc
lcall
xor
jecxz
cwtl
out
xchg
xchg
push
sti
popa
rolb
imul
fwait
bound
xchg
or
xchg
insb
jmp
and
in
pop
mov
dec
adc
aaa
cmp
adc
shlb
mov
and
push
dec
mov
cmp
movsb
popa
xor
in
call
mov
cwtl
scas
jns
cld
dec
shll
jns
cld
mov
loope
mov
call
fs
icebp
out
mov
mov
into
cs
ret
push
lret
sub
ds
xchg
imul
inc
fsubr
sbb
sub
push
cltd
insb
dec
jae
fistpll
push
and
lret
shrl
mov
test
and
aaa
jl
adc
cmp
jne
int3
enter
adc
enter
adc
mov
rorl
push
adcl
out
inc
mov
shr
dec
test
out
and
lods
jns
jns
xor
or
lcall
into
add
sbbl
sbb
push
pushl
js
cmpsb
sub
jae
ss
add
fwait
lock
push
in
adc
jmp
aaa
xor
mov
jo
je
mov
ds
and
data16
shrl
cmp
adc
leave
fidivrl
out
insl
sbb
add
out
and
fcmovu
and
imul
sbb
sahf
mov
ret
inc
pop
clc
enter
divl
push
push
adc
rorb
sub
aad
shll
sarb
lock
dec
lahf
jecxz
add
inc
mov
clc
mov
mov
sbbb
sti
lods
sbb
xchg
rol
xor
jbe
in
mov
cs
xor
repnz
xor
and
jbe
pop
call
cld
and
inc
enter
mov
push
mov
out
jno
ja
inc
es
dec
cmp
js
subl
mov
idivl
loope
or
mov
sbb
mov
sbbb
fs
push
xor
push
sbb
adc
push
pop
pop
adc
sbb
push
sub
adc
sub
fst
mov
mov
fnstenv
and
sub
mov
cmc
xchg
cmpsb
push
clc
push
push
imul
or
ja
jb
mov
push
mov
pop
mov
cs
iret
sub
sbb
fdivl
jbe
pop
iret
or
es
lds
mov
dec
out
xor
dec
add
fidivl
ror
xchg
xchg
mov
div
das
or
out
arpl
add
das
test
push
aaa
xor
data16
inc
xor
xor
jg
mov
xor
and
adc
mov
jns
fmul
dec
xor
inc
and
js
ret
sbb
cli
xor
pop
or
fidivl
push
in
sbb
jecxz
stos
inc
icebp
repz
push
dec
pop
and
xorb
xor
and
push
iret
and
push
cmp
int3
or
xor
mov
mov
sarl
enter
fsubr
pop
mov
mov
adc
lods
add
adc
cmp
lods
sub
jae
and
into
ljmp
cmp
fs
xchg
sti
mov
push
sbb
stos
inc
bound
outsb
and
je
cltd
ljmp
dec
popa
lods
push
or
sbb
ss
sbb
or
mov
adc
loope
enter
mov
repnz
pushf
mov
cmp
fbstp
xor
sbb
pop
pop
das
push
mov
and
in
sbb
cmp
adc
ja
or
jbe
jg
out
mov
sub
cmpsb
imul
ret
outsb
ss
jmp
push
ds
jbe
lret
jne
clc
insb
mov
and
jae
sbb
and
cltd
loopne
fs
jne
cli
ds
xor
fists
and
aad
hlt
cmp
nop
pop
lcall
int3
stos
call
int3
sub
mov
pusha
in
test
imul
mov
inc
xlat
pop
jecxz
mov
mov
and
frstor
mov
lea
movsb
inc
mov
sbb
and
inc
jecxz
aam
bound
jns
add
test
je
sbb
add
xor
outsb
mov
and
mov
pop
mov
inc
jp
outsl
push
test
sub
mov
xor
xchg
hlt
mov
mov
arpl
lods
push
xor
dec
mov
and
mov
push
and
jp
sub
push
pop
lock
mov
lahf
div
mov
and
pop
ret
outsb
jbe
mov
imul
call
mov
mov
jle
lea
xchg
lds
sub
push
inc
sbb
jbe
mov
loop
mov
test
or
test
adc
cs
sahf
insb
imul
push
aaa
aas
rolb
mov
dec
inc
xor
lret
fbld
add
cli
inc
or
inc
push
enter
bound
imul
lahf
insl
inc
mov
inc
test
mov
jnp
bound
cmpl
dec
dec
ss
in
pop
ljmp
sti
xor
das
xchg
lods
enter
push
cli
and
push
lock
out
sub
mov
pop
xor
lds
add
ljmp
es
in
sub
test
mov
test
sbb
mov
aaa
jecxz
lret
sarl
add
ret
sub
xorb
dec
sahf
inc
lea
lods
mov
test
fnsave
insl
lret
int
inc
int
lods
test
mov
and
vmptrst
cld
daa
cmp
adcl
xor
or
sub
xor
pop
in
mov
int
clc
ds
bound
into
out
loopne
push
cmp
sbb
mov
stc
addr16
jbe
jmp
lods
mov
adc
insl
dec
push
std
mov
or
fimuls
jb
and
jno
and
mov
pushf
push
cmp
in
and
jecxz
or
fwait
adc
push
movsl
nop
sbb
sub
add
int3
shl
mov
nop
stc
mov
push
out
popf
je
out
or
call
popf
js
rol
mov
in
jbe
pop
adcb
dec
test
and
mov
test
jge
aad
xor
iret
sbb
das
push
jb
bnd
xor
dec
jno
jmp
sub
add
es
dec
push
mov
gs
ljmpw
push
adc
aas
xor
xchg
lods
out
push
out
dec
lret
daa
lods
scas
inc
out
cli
adc
cli
loope
xchg
mov
jo
inc
and
or
jnp
mov
pusha
cmc
jb
lcall
push
push
push
xchg
jmp
fsubl
xchg
out
ds
movsl
mov
mov
inc
lahf
push
xchg
insl
pop
jae
sbb
in
addl
addb
lods
fcmovnu
jl
xchg
inc
mov
jp
mov
push
sbb
xchg
push
nop
rcll
lahf
jp
push
mov
mov
call
and
insb
js
je
mov
jecxz
add
adc
ljmp
sub
pusha
cmp
cwtl
loop
stos
test
das
stos
mov
mov
pop
pop
pop
sub
insl
push
aaa
inc
subl
mov
scas
sub
push
aam
push
jbe
mov
popa
push
push
testl
push
mov
adc
sub
cltd
cmpsl
xor
pop
hlt
movsb
lret
pop
xchg
xor
loope
push
ror
inc
mov
and
dec
adc
lock
add
sub
stos
add
mov
jne
loop
lods
in
lock
stos
cmpsl
sti
mov
or
insb
addr16
mov
xlat
sbb
push
sbb
jo
inc
mov
mov
stos
sub
jb
push
cld
sahf
std
popf
pusha
mov
mov
lods
ds
fwait
mov
xlat
in
je
sarb
mov
movsl
cwtl
add
jb
mov
movsb
sahf
and
mov
imul
lods
pop
cmp
pop
push
lods
je
loopne
mov
cli
or
pop
aad
in
dec
je
mov
and
add
lahf
out
adc
mov
adc
mov
enter
pusha
faddl
jae
pop
out
jns
dec
int
sub
mov
mov
int3
mov
fld
movsb
dec
xchg
addr16
lods
das
cs
cli
or
test
and
shr
shll
repz
add
jbe
enter
mov
clc
mov
clc
in
aad
add
sbb
cmp
leave
lret
lods
jae
push
daa
subl
fadds
push
pop
dec
lods
hlt
dec
fwait
outsl
add
jae
adc
and
jge
jnp
add
mov
pop
or
add
add
enter
ja
lock
loopne
jbe
or
add
dec
stos
cmp
fiadds
test
jnp
sub
sub
enter
sbb
jbe
lods
in
or
push
mov
pusha
jnp
insb
call
pop
enter
call
mov
icebp
bound
push
jge
loope
jne
push
inc
jo
out
addl
aaa
lods
in
jnp
enter
je
push
sub
dec
stos
xor
movsb
fiadds
sbb
ror
sbb
mov
jo
out
fiadds
jp
pushf
loopne
jbe
or
or
fwait
int3
mov
leave
pop
xor
mov
cmp
dec
loopne
addb
jp
ds
inc
push
xchg
cli
or
les
lods
imul
add
int3
mov
pop
mov
int3
fadd
int
out
mov
lods
jg
ds
shr
mov
js
lcall
in
inc
xor
push
lahf
jo
cltd
xor
mov
mov
repnz
movsb
xor
jno
ds
mov
adc
inc
mov
out
in
das
dec
dec
test
adc
or
cmp
insb
pop
sti
rclb
sahf
jno
cmp
or
add
adc
enter
in
dec
mov
jns
in
cmp
jmp
fistl
add
push
xor
outsb
add
sub
add
pop
jg
jge
jne
imul
sahf
fsubrl
bound
mov
and
mov
adc
out
push
imul
out
lock
and
jb
xchg
sub
jmp
mov
scas
xor
jnp
push
ja
or
add
call
in
cmp
sub
mov
or
add
lcall
faddp
mov
push
jo
jne
out
dec
ljmp
adc
into
cld
mov
mov
insb
es
leave
adc
push
xor
adc
xor
adc
scas
and
adc
jp
incb
fldt
cmpsl
cmp
aam
push
cli
fwait
push
outsb
mov
pop
insl
das
loop
lret
fsubl
inc
leave
in
mov
repnz
push
sbb
or
stos
das
sbb
mov
arpl
sub
mov
aad
test
add
sub
fimuls
jbe
mov
les
aad
xor
repz
and
sarl
out
or
sub
pop
mov
jmp
jb
sti
fadds
cwtl
outsb
mov
scas
mov
jns
in
dec
movb
stos
jbe
scas
xchg
lcall
shl
xor
outsb
imul
aaa
test
sub
mov
mov
cmpsb
push
popa
shll
js
jb
iret
cli
sti
iret
lods
jb
ds
inc
je
mov
xor
mov
lret
dec
insb
xor
cmp
pop
nop
movsb
fsubl
mov
bound
xchg
dec
xor
out
mov
jbe
mov
mov
cmpsb
fsubs
lret
cli
es
mov
fxch
jecxz
sub
iret
or
inc
shlb
adc
lea
dec
xchg
push
mov
inc
lcall
jp
in
mov
mov
inc
jge
xor
xchg
mov
xor
push
add
inc
imull
or
movsb
in
stos
or
mov
xlat
into
push
insb
mov
push
or
or
xorb
sbb
jmp
fists
and
mov
lock
imul
sbb
inc
cmc
adc
mov
jb
lods
push
sbb
sahf
jae
add
push
mov
xchg
iret
mov
shrb
push
or
jb
ja
inc
mov
jb
fnstenv
jmp
jl
and
mov
inc
in
addr16
and
hlt
adc
enter
out
rorl
imul
aam
out
jnp
sub
imul
push
mov
push
sub
lods
je
dec
push
scas
xor
popa
xchg
xor
xchg
pop
mov
int3
imulb
loop
jns
subl
push
dec
push
jecxz
push
aad
in
bound
cmp
dec
dec
dec
mov
sahf
repz
inc
and
adc
xor
mov
mov
andl
jge
and
stos
xor
add
mov
mov
imul
aam
jle
mov
push
data16
jmp
in
fsubl
mov
mov
jge
arpl
cld
ljmp
call
icebp
test
adc
dec
add
xor
dec
mov
adc
and
cmc
or
ds
fisubrl
adc
jae
hlt
in
and
insb
cmp
dec
add
jmp
mov
mov
inc
jmp
idiv
jb
mov
repz
jno
lret
gs
test
dec
lods
loop
push
lods
xor
outsb
mov
xchg
mov
fs
aas
arpl
mov
sti
ficomps
add
jp
insb
movsb
lods
xor
mov
or
lods
xor
push
nop
mov
and
dec
les
push
xchg
mull
lea
add
adc
lahf
imul
sti
pop
push
mov
test
xchg
inc
xor
push
hlt
hlt
add
mov
push
insl
enter
jp
sbb
call
cli
fdivl
mov
sbb
aam
test
cmpsb
mov
call
mov
popa
arpl
sub
pop
call
jp
or
pop
int3
test
imul
mov
cltd
adc
push
sub
or
loope
xchg
bound
out
cs
movsb
iret
pop
aam
ret
sbb
jnp
xchg
in
insl
movsb
adc
and
push
and
mov
add
and
pop
test
mov
aam
add
insl
enter
cmp
les
in
and
ss
sti
ss
test
sbb
mov
add
cmpsb
les
shlb
test
testb
push
xchg
pop
pop
je
lds
daa
imul
or
lds
sub
and
adc
dec
inc
lret
add
sbb
ds
sti
dec
push
inc
jae
shlb
test
sbb
mov
ds
adc
mov
xchg
xor
dec
aas
test
push
push
mov
push
jle
and
in
in
mov
inc
jbe
daa
test
cld
inc
imul
mov
push
repz
jbe
imul
pop
sub
mov
and
in
lock
mov
rcrl
push
lods
jge
fldl
adc
ljmp
and
stos
stos
add
push
sub
adc
loope
adc
dec
imul
arpl
aas
xchg
aas
xchg
xorl
and
mov
or
loop
int
addr16
push
dec
push
and
les
add
imul
push
les
mov
jge
scas
in
rol
dec
mov
movsb
push
lock
add
les
xor
jp
in
pop
loopne
jmp
push
loopne
sub
popf
push
jno
jno
mov
dec
out
les
in
in
xchg
xorl
and
ja
fsub
mov
sub
dec
sti
pop
dec
mov
jns
les
shr
cld
mov
sub
mov
sbb
push
jp
mov
push
inc
xor
jmp
and
mov
ret
or
ret
mov
hlt
ds
push
and
sbb
scas
push
and
clc
inc
and
repz
popa
stos
clc
and
add
sbb
xchg
out
add
add
and
mov
add
sbb
pop
ret
jns
les
add
mov
iret
clc
jne
cmpsl
les
mov
push
add
in
dec
loope
aad
jbe
stc
sub
jle
lods
cltd
mov
and
mov
and
xchg
ds
aaa
shlb
hlt
or
adc
maskmovq
divl
push
das
shlb
push
mov
cmp
mov
sbb
es
divb
or
aaa
jo
mov
add
push
mov
adc
dec
cld
dec
repnz
pop
lcall
inc
ds
cmp
xor
add
daa
sub
cli
xor
loope
lods
jb
adc
add
insl
loope
xor
and
jno
in
adc
call
inc
out
test
fwait
cmpsl
pop
mov
insb
mov
jp
in
jne
and
mov
ds
adc
call
cmc
mov
in
and
es
jecxz
mov
jb,pt
and
sbb
jle
pop
sbb
scas
xchg
fldcw
cmpsl
push
rcrl
xchg
lret
inc
hlt
jmp
inc
cmc
cmp
jno
lret
ret
mov
aas
rdtsc
or
fisttps
ljmp
data16
in
xchg
arpl
push
jg
xor
push
shrb
or
stos
cli
sbb
dec
mov
cmp
jo
ret
push
ds
push
and
test
inc
punpcklbw
hlt
lods
and
push
je
addr16
pop
sahf
ss
and
xor
push
inc
mov
mov
xor
into
mov
shlb
and
adc
out
pop
xorb
mov
mov
hlt
and
hlt
pop
cli
and
push
dec
lock
sti
popf
mov
popf
in
pop
push
rcrl
in
outsl
xor
jl
xor
sub
ficompl
popa
pushf
and
addr16
and
ds
and
test
inc
rdtsc
mov
addr16
rolb
mov
or
inc
xor
shl
xor
jp
jge
push
jle
inc
pop
xor
hlt
jp
in
pop
loopne
jmp
push
jg
mov
andl
jbe
dec
push
dec
clc
cmp
xchg
clc
jle
lods
xor
ja
jle
push
mov
mov
aas
hlt
and
hlt
pop
cli
and
push
dec
lock
sti
popf
test
pop
jno
fnsave
ficompl
mov
hlt
jmp
push
popa
pop
cmp
inc
push
jno
fldt
pop
xor
fmul
ljmp
sbb
stos
jp
xor
data16
inc
jns
mov
dec
jnp
test
mov
push
sub
mov
add
fs
ret
mov
mov
lods
daa
xorl
jbe
pop
jbe
xchg
pop
cmp
xorb
or
add
ja
dec
lods
mov
pop
out
dec
std
xchg
jns
mov
xor
adc
sub
and
lret
xor
push
out
lock
cmp
mov
out
int
lods
mov
xchg
add
push
imul
xor
push
pop
push
push
xchg
cli
sbb
add
sbb
adc
call
into
outsl
mov
and
xor
data16
xchg
inc
popa
sbb
stos
lcall
pop
pop
aas
and
xor
mov
mov
fldt
sub
fcomip
cmp
xor
or
push
jg
fsts
lock
or
add
mull
loope
adc
push
push
ljmp
insl
fildl
repnz
int
xchg
mov
pop
sub
adc
jb
mov
test
push
push
mov
jmp
stc
pop
aas
xchg
sbb
inc
pop
mov
scas
xor
leave
and
mov
dec
fwait
test
iret
stos
sarl
xchg
and
push
xor
imulb
or
pop
filds
ret
sub
pop
pop
mov
imul
out
ret
lock
sub
cmp
mov
push
jbe
pop
xlat
mov
mov
fnstcw
add
pop
xchg
nop
in
xor
pop
call
leave
mov
xor
outsl
aad
sbb
dec
mov
push
rorb
in
mov
rcll
and
pop
in
in
js
and
outsb
mov
sub
aam
in
fistps
mov
fsubr
pushf
rcll
pop
sub
sbb
scas
movsb
cmc
or
sbb
iret
add
and
hlt
inc
in
mov
cmpl
repnz
xor
and
and
fcom
xor
xor
scas
jle
mov
mov
enter
and
cmpsl
shlb
shll
leave
scas
arpl
jp
xorb
fcomi
mov
mov
test
inc
push
xor
and
divb
jb
mov
jmp
outsb
jae
imul
adc
sub
pop
jno
mov
loopne
andb
pop
cmovb
ljmp
repz
subb
test
notb
inc
push
loopne
scas
int
lods
in
nop
jge
test
xchg
inc
dec
sub
out
arpl
pop
clc
jmp
mov
scas
inc
pop
xor
ficompl
sti
sbb
ret
add
sbb
sbb
into
repz
pop
pop
das
cs
aad
lcall
sbb
stos
xor
mov
aaa
lods
dec
sbb
cs
cmpsb
rclb
fstpt
push
sub
mov
xchg
mov
xchg
sarb
mov
sbb
inc
test
pusha
jo
mov
lods
xchg
repnz
or
aas
jno
inc
lods
frstor
pop
movsb
lahf
push
push
clc
xchg
or
sbb
int
dec
mov
popa
insl
dec
push
and
add
test
xchg
push
leave
sub
int3
or
mov
push
and
cmp
repnz
push
sub
outsl
push
pop
scas
xchg
xor
and
xchg
jno
pop
and
stos
jo
or
lods
sarl
pop
xor
or
push
jo
lods
jmp
mov
ret
dec
lods
jb
test
rcll
adc
xor
es
scas
dec
mov
aad
inc
daa
insw
dec
ja
test
movb
xorb
adc
pop
mov
pop
dec
movsl
sti
sahf
and
pop
xchg
mov
sub
mov
xchg
mov
outsl
or
mov
mov
bound
into
insl
or
stc
mov
movsb
cld
pop
into
push
pop
dec
out
divl
pusha
dec
mov
and
push
mov
push
push
mov
lret
dec
dec
loop
leave
add
pop
aad
and
aaa
stc
pop
dec
pop
ss
jne
jge
loop
jb
jecxz
sbb
mov
popa
aaa
push
popf
mov
rcll
xor
push
mov
dec
adc
sub
xor
push
push
push
les
shll
imul
and
sbb
das
bound
pop
nop
lods
jne
add
adcl
xchg
jl
pop
bound
sub
mul
sub
pushf
pop
jg
js
lods
add
lock
push
fbstp
mov
cmp
dec
jge
iret
imul
roll
jp
loope
out
outsb
ficomps
pushl
sub
mov
mov
pop
lahf
clc
xor
and
das
inc
mov
inc
mov
ret
mov
insb
push
add
out
hlt
repnz
mov
cmc
arpl
sub
aas
sub
cli
repnz
stos
jmp
jo
mov
gs
lods
jmp
adc
xor
sub
add
xor
daa
sub
sub
dec
movsb
outsl
stos
scas
jne
es
xor
rclb
jb
test
cltd
cwtl
adc
jl
mov
imul
push
lock
mov
push
cmp
add
les
sbb
test
lea
repz
xchg
push
pop
lea
cld
mov
adc
mov
dec
shll
adc
mov
xchg
imulb
add
inc
popf
test
test
xchg
lcall
jge
repz
in
mulb
adc
leave
cmp
mov
scas
xor
push
sbb
inc
je
fistl
stc
mov
dec
leave
mov
inc
adc
add
fcoml
gs
mull
insl
in
adc
imul
test
in
dec
push
push
and
mov
sahf
pop
and
pop
xor
add
out
fstl
test
jmp
pop
dec
push
adc
cmc
mov
hlt
add
jl
pop
test
xchg
sub
cs
dec
pop
shrl
mov
lds
scas
jg
scas
inc
mov
iret
and
outsb
loop
nop
inc
pop
push
or
stc
movsb
das
add
cmp
stos
pop
fwait
imul
mov
cmp
xchg
mov
mov
xchg
mov
mov
sub
test
and
jg
add
jno
add
or
js
mov
in
mov
out
sub
adc
lcall
add
into
in
iret
mov
in
inc
repnz
jecxz
popa
stc
inc
add
xor
pop
dec
lcall
inc
ret
inc
and
add
popl
dec
insb
push
xor
adc
mov
sbb
sub
scas
sub
sbb
divb
xor
stos
repnz
jb
dec
sub
jecxz
mov
outsb
mulb
mov
or
sarb
out
inc
lods
xor
int3
stos
imul
mov
adc
pop
lock
pop
xor
sub
mov
sub
fisubrl
fdiv
mov
leave
mov
cmpsl
rcll
xchg
in
dec
fs
loope
ret
adc
addr16
or
mov
dec
or
test
inc
xchg
mov
add
mov
and
loope
dec
lods
subl
orb
aad
lret
mov
sbbb
ret
orl
jge
jle
push
pushf
mov
mov
pop
outsl
fmuls
shll
insb
insl
add
jmp
iret
enter
out
enter
add
push
vgetexpss
addr16
jns
push
pop
int
mov
sub
push
lea
and
ret
sub
sti
xchg
push
and
test
pop
popa
fstpt
aaa
lret
shl
and
jae
dec
jl
mov
and
jb
jmp
lock
mull
out
pop
and
int
lret
das
ficomps
xchg
pop
or
lcall
mov
arpl
adc
mov
hlt
sub
call
sub
lods
cmc
xorb
jle
inc
inc
lock
pop
mov
mov
mov
iret
cmp
insb
rcl
mov
daa
mov
mov
fcmovne
shll
aaa
lock
mov
cld
xchg
or
inc
jbe
pop
in
and
mov
push
dec
jecxz
out
or
or
sarl
movsb
lock
inc
push
pop
insb
addr16
rorl
repz
mov
lcall
sbb
inc
xchg
jae
pop
mov
jmp
lcall
push
js
inc
ja
mov
enter
loope
rcll
das
outsl
jns
pop
dec
jo
mov
sbb
cmp
pop
mov
jge
jb
lods
jae
mov
ljmp
js
dec
inc
cmp
jae
pop
lret
pop
js
inc
push
xorl
jmp
jp
xor
mov
loope
xor
fistl
mov
jmp
dec
dec
inc
das
shrl
lcall
mov
dec
adc
shlb
lds
pop
pop
in
out
cmp
mov
push
popf
add
imul
orb
shlb
repz
push
add
lahf
adc
fistpl
push
test
fisttpl
mov
test
mov
mov
push
insb
decb
jbe
adc
jo
pop
rorl
mov
xor
test
fdivr
sbb
and
and
xchg
mov
adc
xchg
imul
out
add
decb
mov
jne
repnz
lods
repnz
and
out
sbb
in
or
enter
mov
out
pop
xor
ds
inc
out
dec
mov
inc
jmp
jb
push
inc
mov
adc
data16
add
lahf
sub
and
pop
addr16
shlb
push
mov
test
sbb
jae
xor
ret
push
and
adc
into
xchg
cld
popa
testl
xchg
mov
inc
mov
les
int
lret
shl
std
push
jbe
mov
xchg
shrb
movsl
lret
xor
xchg
push
pop
and
jns
je
inc
mov
je
push
push
xlat
add
mov
aaa
sbb
push
jae
or
repnz
clc
addb
jle
sti
inc
push
dec
push
xchg
jge
mov
out
pop
idiv
aaa
adc
jg
mov
out
repnz
test
negb
cltd
fwait
inc
shll
push
aaa
lcall
and
cmpsl
mov
push
push
jbe
in
xchg
loop
push
add
inc
jge
cli
adcb
inc
sbb
movsb
fwait
mov
testb
xchg
repnz
sbb
adcb
loop
das
jne
pop
and
outsb
xor
adc
push
lret
pop
inc
dec
mov
push
imul
xorl
dec
xor
cmovge
push
sbb
and
ret
mov
stos
adc
mov
xchg
mull
add
dec
ret
xor
jge
cli
sbb
mov
pop
and
push
dec
xchg
ret
mov
aas
and
cmpsl
inc
jo
pop
xor
ja
jle
stos
or
icebp
xor
mov
stc
repz
xor
jecxz
pop
xchg
jecxz
fisubrl
lea
pop
xor
sbb
pop
std
sub
sub
aad
call
and
pop
lods
dec
xor
xchg
sbb
mov
xchg
movsb
popa
inc
aad
lods
mov
mov
inc
out
jno
repz
addr16
in
jp
pusha
and
repz
loopne
jmp
push
pop
stos
icebp
push
pop
push
fwait
dec
jb
ljmp
sub
imul
neg
push
lods
mov
inc
jge
lcall
mov
push
jmp
mov
add
inc
lds
cmp
daa
in
les
and
mov
lods
jne
sub
mov
das
mov
loope
cld
jno
jmp
cld
jne
push
ret
clc
jo
sub
jecxz
jbe
popf
sub
push
mov
in
jp
popf
addr16
mov
fwait
sub
add
lods
mov
lods
jp
pusha
push
jb
cmp
xchg
lods
or
mov
jnp
jbe
ret
popf
insb
fwait
and
xchg
daa
or
clc
jns
mov
cmp
es
jb
sub
enter
dec
shrl
mov
fs
push
shll
cmpsb
and
add
nop
mov
and
push
jmp
or
scas
dec
adc
mov
xor
lret
lea
cltd
outsb
sbb
leave
xor
dec
cmp
cmp
hlt
or
movsb
pop
out
lret
mov
or
stos
pop
pushf
shlb
clc
fistpl
imul
js
int
popf
sahf
inc
scas
inc
adc
xor
lret
int3
sbb
push
sub
pop
stos
push
pop
add
xchg
add
xchg
in
enter
scas
jo
pop
mov
enter
mov
icebp
and
mov
cltd
mov
movsb
aam
pop
ljmp
xchg
and
dec
icebp
xor
cmp
mov
pop
sub
rol
jne
mov
leave
mov
dec
clc
ds
inc
and
bound
das
out
dec
das
out
mov
out
aas
pop
pop
mulb
adc
in
mov
adc
mov
dec
enter
and
lahf
mov
scas
add
jo
cmp
inc
mov
mov
ja
sub
sbb
push
inc
mov
add
scas
scas
pop
lahf
cmp
adc
mov
lcall
and
inc
jne
frndint
stos
jmp
push
and
lret
push
ds
fistps
pop
adc
daa
lods
sub
and
in
mov
pop
or
sbb
push
repz
scas
xor
mov
sub
mov
lods
mov
test
and
jbe
rep
xor
xorl
lcall
out
fs
xchg
out
fstpt
push
mov
add
mov
imul
mov
jns
pop
ljmp
xor
sub
inc
and
pop
dec
cmpsl
and
popf
pop
and
repz
pop
lcall
mov
stos
and
daa
inc
mov
mov
insl
sub
fistps
cmpsb
pop
or
nop
sub
js
sbb
xchg
rorl
jae
rcrl
fnstcw
mov
sbb
and
mov
sbb
bound
scas
inc
fsub
push
inc
popf
cmc
pop
xchg
and
and
mov
sub
jno
fistl
mov
aam
fistpl
add
cmp
dec
out
arpl
cmp
test
push
and
call
stc
mov
scas
orb
mov
lds
cmc
and
popf
arpl
js
test
mov
mov
daa
push
mov
divl
xchg
push
out
mov
jb
movb
fsubs
ret
dec
ja
inc
jnp
jo
in
lret
mov
sub
in
sub
mov
xor
or
ss
dec
ja
cmp
push
in
or
sahf
pop
leave
jne
jg
fcompl
test
xchg
clc
push
lahf
fdivl
xchg
loop
pop
in
mov
sbb
test
adc
mov
rcrb
js
cmp
inc
mov
loope
jge
cmpb
icebp
mov
pop
imul
push
cwtl
nop
jge
fs
lods
stos
xchg
pop
mov
out
xlat
cltd
dec
sar
xor
insb
outsl
movsb
or
add
add
push
filds
enter
dec
mov
pop
addb
mov
sbb
orb
fs
insl
enter
imul
dec
rolb
adc
in
and
dec
andb
sbb
testl
inc
cmp
pop
sbb
pop
sub
loopne
je
and
sbb
add
xor
mov
mov
sub
add
sbb
repz
outsb
call
scas
sub
jecxz
lret
aaa
ja
pop
push
stc
call
mov
repz
pop
pop
xchg
fisttpl
or
leave
fwait
push
push
lcall
xchg
out
pop
xor
les
sub
push
sub
lock
xor
cmc
xorl
push
repz
dec
dec
lcall
inc
in
xlat
shll
pop
clc
pop
mov
jbe
inc
pop
aaa
dec
nop
das
xchg
push
mov
enter
mov
aas
ja
enter
rcl
dec
add
push
lods
pop
stos
out
jl
mov
scas
lods
test
hlt
dec
dec
call
or
insb
mov
je
shrb
and
sbb
popa
in
push
xor
or
jmp
and
mov
leave
iret
aam
push
push
sub
and
xchg
mov
mov
rorl
aam
addr16
add
outsb
mov
cltd
iret
cltd
mov
cs
hlt
loopne
and
ja
rorb
aas
call
inc
clc
cmp
inc
aad
stos
mov
push
sub
bswap
push
out
test
cmp
pusha
insl
jae
popf
jne
mov
xor
push
jbe
jl
push
jge
loop
sbbl
out
fistpll
and
add
daa
nop
mov
and
es
neg
out
or
shl
push
jmp
mov
int3
shll
out
adc
and
movsl
and
push
jmp
dec
mov
mov
sub
mov
fisubs
sahf
popa
jp
jge
lods
int3
pop
adc
jbe
enter
and
jp
ljmp
clc
xor
pop
push
sahf
inc
mov
mov
sahf
jl
iret
pop
stc
or
or
push
jae
mov
dec
xchg
clc
dec
jg
xchg
cmp
sbb
nop
pusha
jo
mov
jge
nop
cs
ds
fwait
add
sbb
pop
jo
pop
jmp
ret
push
cli
les
cmp
push
or
jno
push
nop
ror
and
lahf
jne
nop
lcall
iret
jb
push
push
scas
dec
mov
lods
leave
push
jge
inc
mov
mov
sub
pop
sub
mov
mov
jmp
fmul
add
movsl
jl
lret
mov
test
cmc
and
push
fstps
arpl
push
rep
movsb
int
adc
in
int3
pop
fimull
mov
shrl
jmp
stc
dec
jmp
out
addb
sub
ss
xchg
xlat
insb
jae
add
xor
in
fidivrl
shll
jb
lods
insl
inc
aad
mov
lods
addr16
cmp
jne
sbb
sub
cmp
mov
lret
sub
add
inc
aaa
jmp
xchg
xor
jle
test
jge
inc
outsl
mov
movsb
rcll
cmp
xchg
mov
jp
pop
mov
push
jmp
bound
xchg
in
shl
adc
rcr
test
push
inc
popa
push
pop
imul
mov
sub
push
mov
popa
jne
loop
jns
sbb
sub
in
cmpsb
insb
aas
std
xor
pop
xor
ja
lock
dec
push
iret
aad
cmp
out
das
loop
cmp
repz
push
pop
pusha
fcompl
out
lea
pop
bound
lret
add
sbb
lret
cmpsl
aas
cmp
or
test
aad
inc
sub
fcmovu
adc
add
int3
loop
movsb
scas
inc
add
dec
fsubl
mov
arpl
lods
push
sbb
adc
jecxz
out
insb
mov
dec
push
sarl
add
dec
sbb
xchg
das
xor
lret
pop
and
or
std
movsl
sub
dec
xchg
data16
mov
fbld
ret
xor
mov
mov
jge
cltd
dec
mov
cmp
jecxz
adc
scas
add
xchg
mov
shrl
push
or
sub
xor
add
in
stc
subl
push
dec
outsl
pop
mov
and
mov
push
cli
out
dec
outsl
add
rorl
sahf
fs
je
pop
jns
stos
sbb
or
push
pop
mov
lock
push
xor
mov
aas
adc
add
cli
test
inc
leave
xlat
push
ja
shl
push
hlt
iret
add
leave
xlat
mov
inc
iret
push
xor
pop
das
adc
jno
stos
fldt
mov
dec
mov
mov
sti
cmp
and
jmp
sar
lcall
cmp
popf
cmp
push
add
dec
adcb
pop
and
inc
cmpsb
movsl
jno
mov
add
rol
mov
cmc
jno
adc
jnp
sbb
pop
cld
mov
aaa
jno
subb
and
jbe
jecxz
mov
mov
jo
push
jns
cmp
xlat
or
int
mov
cmpsb
cwtl
ljmp
sbb
leave
fwait
cmpsb
rorb
stc
and
rcrb
cmc
mov
pop
cmp
cmp
shrl
lea
int
dec
cmpsb
out
outsl
sarb
repnz
movsl
xor
pop
ds
iret
mov
leave
add
jg
jae
jno
pop
cmp
rcll
in
je
mov
pop
xchg
lods
mov
push
jle
add
mov
sub
push
and
dec
in
dec
bound
mov
shrl
lcall
mov
cmpsl
cli
push
pop
mov
push
or
loope
cmp
pushf
xchg
jne
gs
mov
inc
shll
cmpsl
jno
pop
dec
push
xchg
cli
push
fcmovu
popf
pop
jge
sub
mov
pop
je
dec
jmp
ja
sub
imul
fnsave
pushf
jno
roll
and
mov
sbb
mov
into
mov
mov
or
loop
mov
sar
inc
push
xchg
xchg
iret
pop
xchg
int
repnz
fistpl
push
out
xchg
cmpsb
or
insl
inc
cmpsl
daa
jno
mov
dec
rolb
mov
push
fcmovnbe
lcall
cld
pop
ja
pop
popf
movsb
or
nop
pop
mov
cmp
xchg
add
mov
int
js
test
inc
xchg
jmp
adc
movsb
jle
push
push
test
rcl
add
lret
rcl
sarl
mov
test
fildll
out
bound
outsb
sbb
push
ljmp
bound
pop
js
test
mov
pop
push
and
pop
jne
out
cmpsl
out
cmpsl
or
cmp
push
lock
pop
outsl
push
add
sbb
or
adc
inc
aad
add
movsb
add
add
or
leave
repz
dec
xor
mov
inc
xchg
mov
mulb
push
xor
mov
lea
pop
sbb
jnp
mov
nop
in
cmpsb
clc
xchg
in
or
cmp
mov
mov
sbbl
mov
fcompl
ret
or
mov
insl
or
adc
cs
mov
and
roll
cwtl
psubsb
lods
ja
sub
add
daa
ret
js
icebp
pcmpeqw
cs
hlt
out
and
mov
aam
loop
jl
mov
adc
mov
xchg
push
push
cmp
cs
lods
jge
clc
inc
stos
xor
fidivs
jne
repz
iret
jle
fsubrs
cmp
dec
mov
in
sub
jp
sbb
and
add
pop
cs
jne
push
in
loopne
and
ficoms
dec
repz
or
mov
mov
bound
jnp
aaa
pop
sub
dec
jl
mov
xchg
xor
fldt
mov
hlt
cmc
add
xor
ret
arpl
shll
inc
sbb
cs
jge
sbb
ret
push
mov
lods
test
scas
jns
fstpt
je
lods
inc
arpl
cs
or
clc
dec
mov
dec
fdivl
xchg
mov
test
cld
mov
aad
clc
ja
push
inc
outsb
aaa
int3
adc
imul
sete
or
inc
mov
jle
fsubr
xor
aad
mov
mov
lods
imulb
cmpsl
mov
filds
and
push
pop
sbb
jbe
lret
lea
mov
inc
sbb
mov
jno
loopne
ds
push
scas
rorl
push
sub
push
jnp
cs
inc
push
xchg
inc
ror
and
repnz
sbb
push
out
adc
mov
ror
adc
add
cmp
dec
repnz
ret
add
xor
mov
divb
dec
sbb
ss
cmpsb
or
pop
mov
xchg
andb
das
rcrb
cmp
std
add
popf
or
dec
add
std
insl
clc
das
pop
lea
divl
xor
lahf
xor
jne
rol
bound
insl
mov
push
ret
test
push
das
mov
mov
popf
jb
add
xchg
cmpsl
cmp
mov
fbld
jno
jbe
xchg
xor
xorb
dec
lods
sub
test
xor
ds
subl
xchg
pop
popf
cltd
orb
in
pop
cmpl
pop
sub
dec
out
in
dec
popa
push
mov
ljmp
imul
cmpsb
cmpsb
push
mov
sub
cld
dec
pop
stos
je
in
jecxz
mov
int3
or
bound
mov
push
push
incb
test
xlat
inc
xchg
dec
pop
lea
sbb
sbb
and
push
xor
pop
pop
xor
lcall
jne
push
outsb
adc
idivl
sub
inc
push
and
xor
sub
aas
sbb
add
mov
pop
or
lock
test
adc
rclb
jecxz
pop
imul
mov
mov
push
pop
int
xor
mulb
push
push
xor
mov
cmp
dec
jecxz
mov
sbb
test
and
jno
popa
mov
dec
hlt
and
dec
les
adc
fimull
mov
mov
scas
popf
dec
jno
cmp
mov
lahf
mov
lcall
jb
xor
mov
jp
es
in
cmpsb
fcomip
daa
fstps
xor
mov
xchg
mov
leave
pop
jns
jmp
jecxz
or
into
mov
or
pop
sbb
inc
xor
iret
dec
fmull
call
dec
cmp
das
cmc
scas
push
int
shl
das
hlt
mov
jne
out
xchg
out
mov
jns
jmp
mov
jae
jae
or
jb
inc
mov
push
push
fs
xchg
or
lea
pop
mov
insb
jb
into
adc
push
dec
push
lea
lock
aas
clc
jmp
mov
jo
dec
jns
rcl
dec
xchg
stos
push
into
jmp
sbb
dec
mov
mov
nop
or
pop
lds
scas
jecxz
dec
pushl
testb
cmp
cmp
lret
subb
shlb
pop
pushf
xlat
popf
xor
mov
mov
xchg
mov
into
hlt
div
mov
dec
incb
push
shr
insl
lock
das
adc
lock
iret
cmpsl
stc
dec
mov
push
pop
cld
dec
sbbb
repnz
lret
dec
data16
repnz
push
pop
pop
pushf
pop
data16
ret
pop
inc
push
ret
mov
xlat
mov
ds
mov
rcrl
sbb
lcall
lods
aad
stos
fcomip
test
and
ret
and
push
mov
ja
dec
ja
jmp
andb
imul
insb
out
cmpsl
test
pusha
jecxz
scas
lret
inc
cld
sbb
and
icebp
push
mov
lods
icebp
sbb
sub
push
mov
cmp
imulb
idivl
daa
cmp
cs
sbb
js
imul
dec
rcl
xchg
ds
out
sbb
in
mov
sub
out
jge
clc
jb
sbb
lds
loop
cmpsw
pop
inc
lds
adc
outsl
mov
call
pushf
call
xor
rcll
insl
jmp
sub
enter
push
sbbb
sub
dec
inc
xlat
mov
dec
ret
sub
shll
mov
jecxz
gs
pop
pusha
lret
pop
jns
scas
push
or
enter
mov
sbb
jecxz
xor
ds
xor
repnz
inc
push
dec
push
adc
jb
adc
icebp
pop
adc
cmp
adc
dec
and
pop
push
dec
xchg
mov
ret
mov
imul
dec
sbb
sub
pop
mov
sti
adc
mov
aas
lock
sbb
cmp
inc
addl
lret
inc
aam
ss
jb
inc
xor
or
inc
pop
pop
push
mov
xorb
icebp
jb
inc
and
btr
dec
pop
outsb
outsb
scas
leave
mov
pcmpeqb
and
cmp
pop
and
clc
cmp
mov
mov
mov
mov
jmp
cmp
inc
je
pop
imul
or
loopne
aaa
xchg
clc
roll
jge
jp
mov
imul
out
out
rol
dec
repz
push
popa
sub
mov
xor
adc
or
jmp
and
movmskps
lods
data16
int
and
iret
sbb
sarl
push
arpl
test
xor
xchg
outsl
dec
repz
mov
negl
adc
mov
pop
mov
dec
push
xchg
das
add
lods
adc
stos
mull
pushf
subb
cli
mov
jo
dec
test
sub
or
sbb
xchg
jo
fs
loopne
mov
sbb
cmp
xchg
mov
fldenv
and
shll
shrl
dec
les
push
dec
xor
cwtl
cmpsb
inc
mov
pusha
stos
adc
add
out
xchg
sub
es
rclb
xchg
and
mov
pop
xor
fadds
jbe
mov
mov
js
fmuls
dec
js
fisubrl
popa
mov
inc
ret
and
inc
mov
mov
ret
fildll
imul
sub
icebp
cmc
sub
add
stos
push
pop
mov
pop
xor
mov
mov
bound
push
mov
xor
xor
push
sahf
jle
dec
xor
rorb
cmp
lods
pusha
imul
jge
xor
xor
dec
sub
xchg
bound
lock
fcmove
cmp
xor
roll
je
lcall
in
push
test
jo
adc
int3
xchg
pop
xchg
dec
lret
imul
fidivrs
push
fsubs
rcrl
push
rclb
push
cmp
mov
cmpb
pusha
outsb
mov
fmulp
iret
and
movsl
lcall
xchg
jb
lret
test
push
cmp
adc
jmp
outsb
inc
mov
test
push
mov
jno
xor
lret
lcall
addr16
push
mov
xor
aad
xchg
idivb
aas
xor
or
loope
push
jae
int
xchg
push
repz
inc
push
xchg
sub
sti
arpl
inc
aad
inc
bound
ficoml
push
pop
cltd
pop
jg
cmp
aas
push
pop
pop
jge
int3
or
outsb
scas
stc
sub
hlt
decb
test
shl
stc
push
mov
fistps
adc
jae
fwait
cmp
jne
sbb
fildll
dec
js
lods
lcall
rcrl
inc
cmpsl
scas
sbb
sub
and
sbb
xor
lcall
fsubrl
xchg
jbe
pop
mov
das
dec
mov
mov
push
mov
sbb
fidivrs
sbb
icebp
into
ret
mov
sbb
push
xchg
insb
lods
out
iret
xchg
fsubrl
cli
adc
push
notb
mov
movsb
jmp
push
xchg
pop
mov
mov
sbb
push
jb
dec
adc
jb
imul
imul
pop
inc
cmp
mov
pop
mov
mov
lods
push
adc
outsb
xorb
mov
int3
fldenv
pop
in
mov
or
roll
outsl
int3
fwait
inc
ret
mov
jl
lods
push
mov
clc
sub
in
or
stc
pop
sbb
scas
dec
inc
and
movsb
jecxz
mov
subl
mulb
jb
shrb
mov
or
leave
sti
lea
fcmovne
xor
push
mov
mov
inc
pop
clc
xchg
aaa
cwtl
mov
test
mov
add
in
and
shlb
cmp
idiv
sbb
mov
clc
push
pop
jmp
mov
mov
sub
pop
in
jno
test
int
das
xchg
aam
in
popl
test
loope
cmp
sub
int
lcall
push
sub
push
sarb
and
mov
in
jg
insb
and
mov
mov
adc
insb
sarb
hlt
push
pop
xor
sub
mov
push
add
fists
inc
fbstp
loopne
enter
insl
out
push
cli
xchg
adc
jp
imul
mov
sbb
addb
mov
jmp
xchg
icebp
push
mov
xor
ja
int
mov
jbe
das
inc
mov
insb
xchg
shll
bound
sub
es
int3
xor
outsb
sub
enter
add
into
repz
sbb
jne
and
and
aas
mov
and
push
push
pushf
lahf
in
insl
clc
mov
jb
rolb
adc
sub
scas
repz
and
out
xor
arpl
mov
pop
imul
pop
sub
xor
fisubrs
inc
shll
push
or
les
js
mov
sub
lods
insb
jmp
das
shl
loopne
push
movsl
icebp
dec
je
lods
adc
test
subl
or
movl
fdivrs
ss
out
jns
mov
dec
inc
movb
mov
push
mov
jns
xchg
movsb
inc
mov
std
ror
lret
add
xchg
ljmp
add
mov
xorb
sub
and
lods
dec
or
jae
cmpsb
pop
cmpsb
mov
and
push
int3
adc
xor
or
mov
push
adc
mov
mov
mov
dec
adc
mov
jb
mov
mov
sbb
mov
mov
and
push
xchg
push
jo
clc
mov
jmp
ljmp
push
roll
cmc
je
scas
sub
in
rclb
mov
jp
ds
or
js
jmp
push
shrl
cmp
mov
cld
mov
aaa
movnti
mov
add
sub
rolb
jns
mov
mul
xor
ret
push
not
lods
and
jb
xor
dec
jb
in
rclb
pop
aam
mov
mov
hlt
idiv
lea
xor
outsb
mov
insb
mov
mov
adcl
cmp
scas
mov
js
xchg
je
xchg
mov
mov
ss
push
push
testb
and
sub
int3
fisubs
dec
sub
fimull
and
mov
lock
push
ss
xor
xorb
insl
or
lea
pop
push
xchg
cmp
dec
scas
mov
jb
xchg
adc
dec
shlb
mov
cmpsb
fsubs
cmp
rolb
mov
es
das
cmovbe
mov
mov
jno
bound
jb
inc
stos
ljmp
push
inc
testl
rolb
into
add
cmp
repnz
mov
cmpsl
pop
out
mov
jg
insl
pusha
jno
mov
shll
es
xlat
inc
or
pop
adc
mov
add
xchg
lret
hlt
pop
fiaddl
jbe
lock
fdivl
negb
rcl
push
sub
mov
fcompl
push
mov
rol
push
out
push
jno
fsubs
and
xor
dec
sub
push
jae
push
stc
inc
push
sbbl
jb
lods
gs
jnp
mov
adc
rcrb
mov
pusha
mov
lret
into
iret
out
es
xchg
dec
aaa
mov
mov
sub
inc
push
stc
cmp
mov
sub
rep
sbb
rsm
ljmp
sub
cli
push
cmp
clc
xor
aas
ljmp
dec
cmc
lods
push
jecxz
push
push
jb
or
je
insb
jmp
clc
ja
xchg
ficompl
popf
iret
loopne
dec
add
flds
movsb
jno
out
cli
sahf
lods
mov
insb
clc
fsubrs
movsl
sahf
stos
stos
inc
add
or
sbb
stc
xor
mov
sti
lret
push
and
stos
ja
int3
mov
add
sub
hlt
jg
mov
clc
cmp
sbb
insb
ss
xchg
mov
rcll
fdivl
in
iret
xchg
sbb
cmp
cmp
lret
mov
pop
movsb
pop
and
lods
stos
mov
mov
insb
xor
jmp
ljmp
xchg
mov
mov
enter
pushl
push
sbb
add
or
psllq
ljmp
mov
push
push
jns
insb
jb
pop
jb
cmpsl
shll
mov
fidivrs
ret
adc
pop
shrl
mov
mov
imul
scas
push
fldt
xor
scas
arpl
push
ja
dec
dec
pop
pop
stos
repz
sbb
repnz
xchg
es
and
cmp
xchg
adc
sbb
movsb
dec
sub
xor
fnsave
jne
lcall
xor
loope
movsb
arpl
pop
and
lcall
inc
cmp
ret
unpcklps
inc
and
stc
subl
stc
ja
xor
out
cmpb
in
into
jmp
out
inc
or
dec
mov
and
xchg
adc
out
dec
jb
xor
scas
pop
je
mov
pop
mov
xchg
xor
jne
pop
pop
cmp
out
jo
xor
rclb
clc
mov
sub
sbbl
bound
jecxz
jecxz
xchg
jb
test
dec
out
repz
or
xchg
ds
jl
repnz
int3
jno
repnz
adc
in
insb
mov
jmp
xor
pushf
mul
jbe
into
pop
mov
mov
fwait
movsl
sub
insb
repnz
sub
mov
sub
imul
adc
movsb
cmp
xchg
cs
xor
daa
sub
pop
lcall
lods
sub
mov
in
fists
push
sub
adc
mov
sub
mov
mov
mov
lods
sub
mov
dec
xor
shll
mov
iret
pushf
pop
jno
sbb
mov
in
xor
push
aaa
push
mov
mov
push
sbb
pop
js
cmc
xchg
xchg
sbb
out
sub
lods
outsl
jae
push
xorb
mov
mov
sub
ljmp
mov
pop
pop
mov
sahf
jnp
mov
pop
sub
mov
lods
shlb
xchg
in
imul
loopne
push
ljmp
ljmp
js
jnp
sahf
test
popa
cmp
dec
insl
mov
and
push
adc
mov
and
push
or
xlat
and
fs
icebp
les
scas
ret
shll
insl
mov
insb
pop
pop
stc
nop
js
xchg
dec
sub
sbb
out
pop
sbb
mov
add
pop
sbb
inc
lods
je
in
pop
sbb
sub
and
dec
lods
xlat
nop
and
in
pop
push
dec
xor
push
cld
lock
shlb
jmp
popf
lods
xor
xor
push
aas
lock
jp
imul
je
icebp
test
lock
ljmp
and
js
pop
lods
sub
xor
imul
stos
outsb
aaa
icebp
inc
sti
xor
sub
dec
jle
mov
aaa
shlb
clc
pop
xchg
xor
push
sbb
lea
mov
dec
xor
sti
jp
jne
add
and
sub
inc
mov
sti
jp
je
inc
ja
cmp
popf
fxch
nop
mov
arpl
lea
lret
lods
dec
sub
arpl
sbb
jmp
and
cmp
xor
push
popa
lock
repnz
add
pop
xor
mov
dec
fsts
mov
jle
push
sub
icebp
pop
sbb
repnz
and
insb
pop
lods
das
ds
and
outsb
mov
fs
inc
scas
outsb
jb
or
nop
jno
dec
test
mov
fsts
hlt
jae
inc
cmp
lods
push
jae
cmp
cmp
push
ja
dec
jbe
and
mov
and
mov
into
nop
fwait
mov
lock
dec
sbb
outsl
arpl
sbb
test
ds
push
addr16
negb
xchg
inc
and
int
adc
loop
dec
xchg
xchg
aad
mov
test
sub
xlat
xor
repnz
pop
sub
jne
sub
xor
mov
xor
cltd
jp
pushf
xchg
in
sub
xor
adc
mov
sahf
inc
xchg
cli
dec
mov
pop
clc
lods
sub
xor
sbb
cmpsb
fdivl
sbb
outsb
xor
lret
xor
mov
lods
adc
into
jge
push
jno
mov
filds
xor
je
cmp
fldcw
mov
fldenv
sub
sbb
mov
mov
je
push
jmp
fcomip
ret
stc
imul
mov
xor
out
dec
fistpl
cmp
mov
outsb
nop
pop
push
inc
dec
sbb
fucom
int3
and
out
mov
out
insb
mov
icebp
pop
ret
int
js
jge
push
mov
rorl
mov
jns
cltd
cmpsb
ret
ret
sbb
xor
mov
js
inc
out
and
cmpsl
repz
lock
pop
cs
iret
out
repnz
imul
jl
negl
sbb
imul
sbb
push
setge
out
xchg
cmp
scas
repnz
mov
out
lock
test
test
outsl
cltd
adc
cs
sahf
fisttps
mov
jo
xor
pop
and
shll
jge
jg
mov
cmp
push
push
xchg
mov
inc
fistpl
lret
std
call
hlt
adc
out
sar
xor
enter
and
push
subb
in
pop
xchg
xor
das
mov
dec
mov
outsl
in
add
lock
dec
jae
inc
jmp
sub
aam
dec
test
mov
inc
add
or
or
xor
xchg
xor
sti
nop
mov
mov
aam
mov
fisttpl
popf
fucomi
jne
mov
adc
lods
scas
lret
fs
mov
xchg
int
mov
mov
push
shrl
notb
pmulhuw
cmc
xor
lods
mov
mov
mov
and
repnz
add
and
fisubl
outsb
inc
sarb
pop
mov
fldt
insl
mov
or
mov
imul
adc
mov
pop
and
push
xor
mov
in
ret
xor
or
jge
pop
xchg
repnz
mov
dec
sbb
popa
or
aam
inc
das
repz
xor
into
jmp
repnz
ss
dec
sub
fsubs
insl
arpl
push
mov
cmp
xor
xchg
xor
fisttpl
pop
inc
in
sub
xor
push
push
xor
sbb
mov
xor
push
ljmp
inc
clc
cmp
add
les
fcompl
ljmp
js
je
loopne
pslld
cmp
push
lahf
ud1
ret
sbb
jmp
sbb
popa
xorl
xchg
or
rcll
sub
shrl
js
int
cmp
mov
push
dec
xor
insl
pop
add
sbb
mov
imull
es
in
jae
add
xor
jb
adc
xor
mov
test
pop
je
cmp
inc
mov
push
jb
in
repz
iret
xor
adc
test
lret
je
xor
xor
adc
mov
shrl
jbe
adc
pop
xor
mov
adc
fsub
pop
push
xor
insb
xor
push
rorl
jo
dec
dec
push
push
add
in
test
test
repz
into
shll
sub
rorl
push
js
dec
dec
push
and
fcompl
lods
insb
lret
out
and
scas
aam
cltd
das
dec
mov
out
cmp
popa
fsubrp
fisubl
pushf
push
mov
loopne
mov
outsb
jge
mov
xchg
push
jp
push
pushf
fwait
repz
and
in
das
jno
pusha
lds
xacquire
dec
data16
xorl
xchg
mov
push
sub
jns
xor
xchg
test
outsl
leave
xor
xorb
mov
into
stc
adc
jl
mov
sbb
mov
into
adc
arpl
pop
aam
movsl
sub
repz
in
aas
cmpsl
lds
push
imul
fcoms
lret
add
mov
cmp
sub
mov
sub
lods
aam
sub
popa
sub
in
pop
into
and
aas
je
xor
inc
mov
sbb
mov
les
enter
xchg
stc
jns
test
sub
push
push
test
bound
pop
out
push
inc
xorl
push
aad
dec
bound
inc
xor
pop
jb
or
testl
das
mov
xor
movsl
and
scas
fwait
inc
movsb
gs
mov
sub
sti
and
dec
mov
cmpsb
in
sub
xchg
push
ret
xchg
push
nop
sbb
or
sub
mov
sub
outsb
mov
mov
cmp
in
into
adc
dec
xor
je
rolb
and
ss
scas
xor
mov
cwtl
insl
nop
mov
jno
mov
xlat
push
lods
movsb
adc
mov
pop
inc
aaa
add
mov
adc
pop
mov
xchg
inc
mov
lods
xor
insb
stos
je
or
loope
stos
jb
rol
outsb
mov
mov
dec
push
xchg
popa
roll
jl
inc
xchg
xor
sub
dec
lahf
loopne
jo
add
xor
jmp
ljmp
inc
sar
xor
mov
fcompl
add
jae
lods
notl
sub
rep
dec
and
aaa
in
jecxz
mov
fdivl
xor
addl
arpl
inc
sub
push
arpl
adc
shl
jns
cwtl
lret
cld
dec
cmp
in
sbb
in
scas
or
mov
cmp
inc
fldt
jb
fwait
push
sbb
outsb
and
or
ror
push
or
add
inc
dec
test
arpl
lock
mov
mov
add
pop
in
dec
dec
imul
mov
test
push
inc
mov
jno,pn
and
and
sub
lea
mov
pand
mov
cmp
mov
repnz
jle
xchg
movb
xor
jge
push
fldenv
and
mov
and
sbb
mov
pop
aad
into
push
rorb
mov
and
int
int
jno
outsb
shll
push
push
in
inc
test
cmp
iret
push
jo
lea
pop
ss
mov
xor
les
cmp
cmp
push
js
aas
xor
inc
mov
mov
out
pop
push
pop
mov
fcmove
pop
movsb
or
xchg
in
add
sbb
imul
mov
ljmp
sbb
xor
div
sbb
push
jmp
mov
js
ljmp
xchg
inc
xchg
repz
pop
jmp
adc
xchg
leave
popa
push
divl
in
xchg
sub
leave
inc
test
sbb
inc
push
xor
orb
mov
iret
clc
sbb
lea
push
xor
inc
dec
mov
xor
mov
push
pop
lods
insl
xchg
out
fisubrl
dec
iret
mov
add
pusha
sub
xor
jle
xchg
pop
jb
shlb
sti
xchg
ret
lcall
pop
jne
xchg
dec
aam
and
bound
sbb
aaa
adc
scas
pop
ljmp
es
rcr
pop
ljmp
clc
fs
lcall
inc
jmp
out
jmp
imulb
mov
add
xor
xchg
sub
mov
push
inc
je
sahf
es
adc
leave
out
mov
inc
pop
sub
pop
pop
push
jno
dec
xor
neg
pop
cmc
gs
cmpsl
push
xor
mov
notl
and
ret
push
sub
mov
ss
pop
jecxz
clc
sub
jmp
sbb
push
jb
adc
dec
mov
in
jg
push
or
add
in
push
and
imul
pusha
cmp
push
pop
daa
lock
out
adc
cwtl
mov
cmp
push
adc
cmpsb
xor
test
fistl
and
add
out
mulb
dec
mov
repnz
mov
int3
hlt
fnstenv
popf
sub
mov
imul
jne
hlt
les
movsb
jo
xor
push
loop
and
xor
lds
mov
sub
sub
add
cltd
lods
in
mov
pop
and
sub
jb
mov
cmp
mov
add
sub
ret
push
xor
sbb
mov
fldt
mov
jae
les
sub
sub
push
mov
aaa
jmp
xchg
push
xor
jo
mov
push
push
lods
mov
idiv
pop
xor
xor
dec
bound
fisttpll
in
inc
out
mov
repnz
xor
stos
sub
push
mov
lahf
push
and
jl
cmpb
push
xor
xor
mov
and
mov
jp
mov
adc
lods
mov
mov
aas
dec
sub
and
pop
xor
xor
dec
dec
push
adc
mov
fadds
mov
dec
push
sub
loope
mov
ds
ret
ret
fidivl
fwait
xor
stc
fisubl
dec
pop
xchg
xor
xor
pop
lea
lods
sub
fs
popa
push
js
mov
jbe
sbb
push
mov
scas
dec
jmp
cltd
fbstp
xchg
test
dec
lods
stos
mov
cmpsl
mov
jmp
jno
adc
dec
dec
mov
mov
cwtl
adc
mov
aad
ja
popa
js
jno
jae
stos
jbe
ss
out
mov
push
cmp
insb
ja
inc
dec
add
cmpsl
clc
dec
ficompl
xchg
jns
lcall
add
mov
jno
idivb
lods
nop
sti
pop
push
lock
imul
adc
lds
cmp
mov
js
jae
jno
enter
loope
cmc
repnz
mov
and
jns
mov
and
xchg
push
inc
rcl
jnp
push
imul
fidivs
push
test
pop
popf
mov
sbbb
ffree
xorl
fisubrs
pusha
negb
cmp
mov
scas
cmp
dec
push
push
adc
mov
in
mov
xchg
push
mov
pushf
movsl
push
iret
negl
mov
cmc
jp
scas
mov
aam
inc
cs
mov
mov
imul
push
cld
cs
push
mov
mov
cmc
xor
stos
repnz
fstps
jmp
stos
sbbb
jle
fsub
mov
xor
sti
je
mov
lds
imul
outsb
jo
out
add
mov
repz
xor
mov
xchg
pusha
lods
mov
mov
stc
es
mov
icebp
adc
jne
les
mov
mov
sbb
pop
ret
pop
inc
sahf
pop
repz
bound
outsb
add
aad
lods
and
iret
shrl
xchg
adc
xlat
add
xchg
sbb
pop
jae
xchg
xor
jl
and
mov
jl
pop
sbb
xor
jb
dec
imul
sbb
add
inc
and
stc
into
xor
mov
ret
imul
adc
mov
pop
push
clc
popa
stos
push
mov
mov
add
sbb
mov
xchg
xor
jbe
mov
fcoms
jbe
jecxz
xor
rcll
xor
mov
out
xor
mov
lret
jp
repz
pop
dec
jle
orb
mov
sbb
roll
cli
cmp
enter
mov
ret
or
sub
mov
jae
or
pop
jae
int3
into
stos
mov
mov
xchg
scas
dec
arpl
arpl
pop
push
and
iret
mov
xchg
adc
mov
mov
jb
adc
fs
or
pop
or
cmp
xchg
mov
in
lcall
xor
and
jnp
adc
jl
jbe
jb
sbb
push
inc
push
jb
xchg
xor
push
sub
xchg
mov
push
jno
add
jb
cltd
mov
repz
nop
notl
dec
fdivs
add
cltd
push
sbb
nop
testl
int3
cmc
mov
sbb
das
shrd
mov
jnp
add
mov
push
test
iret
mov
xor
dec
mov
push
repz
push
xor
and
xorl
or
dec
fldenv
cmpsb
call
inc
mov
dec
adc
xchg
xchg
mov
push
fwait
scas
mov
xor
inc
add
jb
sub
fistpll
ss
xchg
adc
ljmp
repz
and
sbb
addr16
add
lock
jo,pt
jno
jb
jae
push
je
jne
jbe
ja,pt
js
imul
push
mov
dec
jp
popf
add
add
cmpsl
andb
popa
lcall
dec
mov
flds
paddb
mov
repz
mov
arpl
loope
mov
dec
cmpb
fyl2x
sub
sub
roll
jle
lea
and
es
pop
adc
pushf
jns
xchg
sub
push
adc
iret
xor
mov
xor
ds
dec
cmp
mov
pusha
gs
stos
clc
ret
and
mov
mov
inc
sub
mov
loopne
je
outsb
ljmp
stos
push
push
fs
stos
es
and
leave
mov
xchg
jmp
iret
test
mov
jmp
xchg
push
mov
jg
jmp
lahf
je
and
jne
movsl
lods
adc
mov
andl
pop
pop
ja
xor
out
lret
mov
add
fidivs
pushf
push
rcrb
icebp
lods
jo
xchg
nop
push
fisubl
mov
push
and
dec
pop
ret
addr16
insb
sbb
push
cli
fwait
stos
test
cmp
icebp
mov
inc
jge
sub
mov
mov
mov
pusha
movsb
cmc
mov
bnd
lahf
cmp
xchg
or
ss
fnstenv
xlat
xchg
imul
and
fdiv
rolb
sahf
fwait
sub
lods
mov
pusha
cmc
cwtl
jmp
push
lods
ljmp
push
pop
shlb
clc
cmpsb
cwtl
jae
outsl
lret
dec
rolb
faddl
add
shll
adc
pop
repnz
shl
add
push
jae
js
mov
cwtl
mov
js
scas
enter
xchg
lcall
xchg
push
mov
xor
or
nop
jge
leave
lea
cld
adc
outsl
sahf
dec
push
fwait
nop
fdiv
add
lds
fidivrl
xchg
xor
mov
fdivl
and
fildl
in
jne
mov
xchg
inc
xchg
mov
fisubs
push
push
cmp
mov
xor
sbb
jbe
jle
push
sub
lret
mov
push
repz
nop
call
sub
jb
inc
sti
and
mov
mov
inc
inc
sbb
lods
cmpsb
bound
dec
dec
in
adc
scas
cli
sub
ja
xchg
or
mov
mov
jecxz
popf
push
lret
cmp
shlb
out
icebp
je
int3
xchg
xor
mov
sub
adc
dec
je
xor
ja
ror
sub
mov
outsb
xor
mov
je
xor
adcb
mov
xor
ljmp
fcompl
cmp
test
stos
xor
lahf
xchg
push
rolb
es
lcall
fstpt
icebp
jb
std
or
push
jbe
inc
xchg
pusha
xchg
jmp
sbb
ret
pop
test
fadds
subl
sub
lods
xor
inc
cmp
sub
mov
mov
stos
jb
pop
test
fldz
push
lcall
movsl
rcl
cwtl
xchg
sahf
notl
nop
ljmp
jnp
outsb
lods
xchg
xchg
pushf
adc
or
lods
add
mov
mov
leave
sub
mov
mov
bound
fwait
inc
insl
jne
clc
jb
cmpb
repz
lods
inc
mov
cmp
cmp
hlt
loop
adc
push
add
int3
mov
cmc
subb
adc
sbb
fistpll
in
mov
sahf
xor
fdivp
loope
cmpsb
xor
fbstp
divl
xor
xor
jg
ja
mov
stos
jecxz
aas
test
cmp
lea
movsl
sub
pop
mov
xchg
xor
jmp
stos
lcall
mov
out
or
or
movsb
push
pop
jp
xor
ds
jge
pop
mov
or
sbb
sub
or
int
pop
mov
and
mov
dec
xchg
mulb
aas
dec
cli
sub
ret
sub
pop
cmpsb
xor
mov
lahf
and
aam
cmp
push
xor
xchg
rcl
xorb
xchg
imul
push
cs
ret
push
negb
xor
mov
cmpsl
popa
sarb
cmpsl
xlat
cmp
fists
sub
stos
fists
mov
fmull
imul
testb
mov
rcl
cmp
movb
ret
pop
xchg
inc
xor
ljmp
in
lret
jno
push
xor
adc
dec
push
ffree
dec
mov
pop
aad
mov
jns
adc
xchg
push
mov
pop
fisubs
xorl
and
popf
call
dec
and
arpl
outsb
rolb
adc
pop
add
fidivrl
int3
lods
pop
mov
scas
and
stos
pop
push
std
pop
xor
outsl
fsubrs
test
rorl
or
inc
sub
adc
in
xchg
repz
ljmp
pop
push
and
aaa
mov
mov
adc
push
xor
insb
icebp
jno
and
shlb
cmp
sub
adc
mov
shll
sti
dec
or
insl
arpl
or
dec
xor
xor
popa
push
imul
cwtl
mov
and
in
jae
in
pop
xchg
insb
dec
pop
mov
push
xchg
scas
xchg
push
sar
bound
add
sub
lods
mov
adc
mov
das
or
stos
sub
loope
sbb
subb
xchg
and
cmp
inc
sbb
xor
ret
jae
pusha
test
rorl
adc
popa
in
sub
stc
daa
jl
shll
mov
mov
sub
mov
addr16
jno
cmc
add
push
test
mov
adc
cmp
push
mov
imul
dec
adc
push
mov
push
mov
and
xchg
cmp
jne
outsb
mov
jne
xor
jmp
and
stos
sub
sub
in
mov
ds
and
cs
negb
test
sub
int3
mov
lahf
jge
add
sub
rclb
cmp
or
testb
sub
adc
nop
sbbb
scas
ljmp
lret
mov
stos
mov
adc
lcall
sahf
add
outsb
ret
sbb
sbb
shrl
jb
cmp
repz
loop
outsl
outsb
xor
je
das
lret
out
cwtl
jns
outsl
mov
push
shll
mov
in
pop
cld
nop
lcall
pop
jmp
fnstcw
cwtl
pop
aaa
ljmp
outsb
into
push
mov
negb
xchg
mov
sub
dec
cmp
xor
pushf
cmp
sbb
out
mov
pop
jmp
push
push
mov
and
into
and
sub
pop
sub
inc
sub
sti
inc
mov
pusha
mov
jbe
inc
cltd
and
sub
push
dec
scas
rcrb
push
dec
stos
sub
bound
mov
mov
push
cmp
mov
sub
popa
aas
adc
pushf
mov
mov
pop
js
into
or
jb
movsb
fsubrl
pop
mov
std
divl
push
scas
lret
jge
pushf
pushf
mov
pusha
pop
cmpsl
mov
mov
jmp
pop
arpl
enter
cmp
cmp
mov
sti
and
rol
mov
mov
ret
jp
and
sub
outsl
jmp
scas
nop
std
jb
jbe
jb
icebp
push
in
out
psrlq
jnp
lahf
add
lods
sub
pop
pop
add
out
push
xchg
pop
dec
sub
test
dec
push
jo
sub
push
mov
in
andl
ror
and
packuswb
fnstenv
push
in
jo
iret
add
dec
or
lcall
sub
je
pop
lock
movsb
push
inc
xchg
inc
push
sub
pop
push
sub
cmpsl
cltd
pop
push
repnz
ljmp
loope
leave
mov
adc
jl
js
shrl
sub
rolb
jg
clc
inc
pop
dec
sub
subb
adcb
mov
int
aas
jge
pop
outsl
xchg
or
cmpsl
out
movsb
push
movsb
js
out
pop
ret
fucomi
cmp
sbb
cmpsl
mov
sub
cltd
int
xor
lret
adc
outsl
lret
rclb
dec
mov
popa
mov
aam
or
popa
outsl
push
ret
gs
cmp
and
ret
mov
movsb
xchg
mov
sbb
add
pusha
gs
jo
je
mov
sub
push
and
in
push
sbb
adc
in
inc
xor
push
imul
jmp
shr
sbb
mov
push
ret
push
iret
adc
jmp
dec
adcb
insb
in
mov
cmpsb
mov
aaa
test
out
movsl
jp
mov
ss
or
lcall
pop
cs
movsl
fimull
mov
js
fldpi
ds
scas
cmp
daa
fists
sbb
pushf
push
out
xor
cs
fsubrs
fdiv
imul
pop
data16
sahf
cwtl
push
sub
dec
and
push
push
test
shl
ret
add
aaa
andl
pop
mov
xor
and
mov
iret
cmpsb
repz
or
lods
mov
fbstp
mov
dec
aas
push
sbbb
pushl
push
cmp
xchg
adcl
in
or
jg
jmp
leave
push
mov
jns
jl
xchg
mov
nop
outsb
cli
xchg
sbb
aam
xorl
xor
mov
pusha
imul
mov
mov
dec
push
lods
das
mov
push
mov
add
mov
push
xor
insl
inc
mov
jno
mov
pusha
bnd
xor
fstps
push
inc
xor
cmp
iret
xchg
divb
subl
mov
cmp
jns
icebp
sub
sarb
in
and
mov
call
out
mov
mov
outsb
pop
xor
movsl
sahf
cmpsb
pop
daa
jbe
std
push
push
xchg
std
movsb
jle
mov
mov
mov
xor
das
jnp
mov
or
mov
sbb
jae
test
sbb
ljmp
dec
in
pop
cmc
xchg
mov
arpl
pop
out
pop
aaa
aad
lods
test
stos
imul
cmpsb
adc
mov
jo,pt
xor
mov
mov
dec
cmp
mov
sub
aam
mov
call
mov
sbb
pusha
das
in
push
pusha
jnp
sahf
jns
sub
or
xor
js
pop
mov
jle
xchg
cld
xchg
pop
cwtl
arpl
xchg
jecxz
stos
lcall
push
subl
mov
js
subb
add
add
outsb
add
xchg
lock
lock
or
outsl
xchg
andb
icebp
lret
orl
pop
in
push
sahf
sbb
dec
mov
pop
outsl
adc
dec
mov
daa
shrl
ljmp
push
pop
xor
mov
insl
cmp
jno
pushf
sbb
negl
push
add
xor
cmp
add
outsl
fimull
push
adc
mov
cmp
ret
push
lcall
stos
mov
sbb
aas
mov
outsb
push
mov
inc
mov
testb
ret
cld
and
mov
xchg
and
popa
pop
ds
push
sbb
repz
push
test
test
into
iret
jmp
je
fsubl
add
out
adc
and
outsb
int
mov
push
xorb
mov
push
xlat
xor
scas
enter
xor
mov
push
call
dec
mov
dec
mov
jmp
push
ror
cmc
sarl
inc
push
inc
scas
pop
and
stos
mov
pushf
xchg
out
outsl
mov
cmp
mov
jo
es
add
xor
lcall
iret
mov
mov
cmp
and
pusha
xchg
inc
jge
ljmp
imul
lea
jge
shll
push
sbb
xchg
xor
push
shrl
popa
stos
mov
xor
mov
ds
iret
jae
mov
shlb
pop
roll
inc
add
dec
sub
xchg
inc
pop
andl
mov
in
ret
sti
dec
jb
cmpl
andl
xor
sbb
cmc
mov
mul
xchg
fildll
push
out
or
push
fld
cltd
push
mov
fcomps
imul
mov
nop
xor
enter
or
and
pop
shrb
fildl
adc
mov
ficompl
sub
xor
and
int
jge
repz
mov
mov
jmp
sub
or
mul
sti
pop
mov
pop
sbb
repnz
or
fimuls
jns
xchg
mov
pop
jno
cli
mov
pop
in
jnp
fwait
and
popf
xchg
outsl
mov
dec
shl
scas
mov
icebp
adc
pmaxub
out
pushf
xorl
dec
lods
pusha
sub
dec
cmp
cltd
fisubrs
call
add
mov
push
cmc
add
mov
push
fnstcw
test
fadds
mov
fcoml
pop
xor
fdivr
push
xor
sti
jmp
dec
cmpsl
aaa
and
negl
pop
and
fcomi
mov
xchg
loope
xor
rolb
out
leave
mov
add
aaa
mov
push
mov
and
mov
ret
fsubr
mov
xchg
cli
test
fcoms
push
clc
push
mov
movsl
ret
push
mov
push
cltd
idivl
adc
dec
adc
mov
scas
pop
divl
mov
sbbb
add
xchg
int
lret
mov
mov
and
scas
mov
or
pop
outsl
imul
push
int
fisubrs
lods
rclb
inc
leave
scas
test
dec
addr16
sbb
dec
or
cmp
adc
jne
dec
add
pop
leave
jae
iret
jmp
out
dec
daa
inc
push
lret
add
dec
pop
xchg
pop
sbb
mov
addr16
fcmovu
or
mov
or
push
cmp
fistps
or
push
lods
stos
in
movsb
pop
je
test
clc
xor
mov
sub
inc
push
and
pop
mov
push
jmp
addr16
movsl
jae
xor
or
iret
push
xlat
inc
push
movsl
xor
jecxz
sahf
rclb
and
xchg
sub
bound
rol
lock
mov
xor
sbbb
pusha
imul
les
dec
test
pusha
dec
pop
dec
arpl
leave
dec
inc
into
jne
js
mov
addl
les
arpl
or
adc
loopne
xchg
rcrl
out
dec
rolb
sub
xor
pop
neg
leave
shrb
inc
or
sbb
int
into
rcll
inc
mov
ret
pop
movsl
jmp
js
popf
mov
xchg
xor
imul
lods
cmpsb
orb
jo
xlat
mov
or
push
pop
cmp
jns
call
xor
mull
jp
scas
fisubs
cmp
stos
leave
xchg
hlt
pop
repnz
add
dec
insl
xor
das
mov
pop
cmp
addr16
ret
ret
mov
lcall
mov
sub
mov
stos
xchg
pop
pop
dec
jae
mov
lahf
add
js
ffreep
fadds
push
pop
mov
and
pusha
repz
imul
fisubrl
cmp
and
repnz
adc
add
mov
scas
inc
xchg
add
bound
pop
xor
lret
imul
push
dec
lea
sbb
add
test
pop
sub
ss
mov
popf
cmp
clc
mov
mov
mov
aad
aaa
mov
and
pop
js
pop
lcall
jo
aam
lods
outsb
mov
stos
leave
dec
out
xchg
push
cmp
les
add
repz
outsb
mov
jne
xor
mov
jbe
ss
insb
mov
repz
js
cmp
imul
sub
mov
insb
lods
dec
imul
lods
and
mov
insb
outsl
dec
jo
jno
jb
in
push
rep
pop
xor
ret
xor
test
fstpt
or
nop
add
pusha
shll
pop
les
loope
inc
cmpb
mov
lret
aam
lods
ss
cwtl
push
ds
int
nop
aaa
outsl
into
cmpsl
enter
fldenv
ss
mov
test
xchg
pop
inc
push
xor
lea
pop
dec
xor
jno
mov
sbb
fdivs
cwtl
ror
mov
js
dec
inc
rcl
fistpl
lods
mulb
xchg
xchg
xor
int3
and
jo
test
xchg
les
icebp
dec
mov
push
aaa
das
push
frstor
out
movsl
lods
addr16
xor
out
push
aam
fmull
pop
pop
pop
pop
cmpl
call
cltd
cmp
fmull
pop
lea
cmp
and
sbb
sub
jg
shlb
sub
mov
mov
scas
push
mov
jo
dec
in
push
scas
push
cld
pusha
lock
popa
sub
jno
lods
shll
popf
pop
stos
adc
jb
push
and
insb
ret
xor
pop
xorb
pop
mull
out
xchg
mov
scas
rep
lods
dec
mov
rolb
int
push
repnz
sbb
pop
push
sahf
bound
xchg
cwtl
negb
inc
scas
ret
ret
cld
nop
xchg
jae
psrlw
jp
rol
or
mul
sbb
inc
ret
jecxz
mov
sub
jmp
cli
pop
dec
cmp
insb
clc
lods
mov
mov
aaa
outsl
cmp
insb
jmp
test
xor
and
sub
stos
imul
js
and
push
insb
lock
stos
push
jnp
out
pop
and
iret
adc
jo
insl
push
mov
insb
aam
inc
nop
dec
dec
sbb
sub
mov
lods
stos
in
jbe
dec
push
stos
mov
jmp
sub
and
dec
js
test
aaa
and
adc
out
cmp
jmp
ss
jbe
mov
divl
dec
jne
mov
hlt
int
mov
into
mov
jmp
jo
outsl
and
insl
dec
cs
mov
cmpb
arpl
xor
shrl
lds
adc
and
ret
cmpsl
add
add
xchg
stos
xor
scas
pop
insb
mov
in
in
pop
sub
lods
inc
in
and
stos
push
stos
dec
jmp
sub
inc
ljmp
dec
jmp
jmp
mov
stos
jbe
mov
negl
xor
mov
sub
jb
mov
or
scas
dec
outsl
jmp
outsb
inc
insl
inc
xchg
bound
push
repz
dec
filds
inc
xor
aam
adc
mov
mov
cmpb
lret
jns
decl
rcl
je
mov
leave
mov
xlat
add
mov
cs
mov
bound
clc
mov
lods
xor
xchg
pusha
mov
cmc
or
add
ss
sbb
sbb
ficompl
push
lods
dec
xchg
scas
mov
mov
scas
mov
out
push
adc
sahf
adc
mov
mov
xor
stos
or
sub
rcr
sub
inc
roll
jo
jo
aad
in
js
lret
dec
aas
das
jbe
outsb
scas
mov
test
fisubl
nop
and
repnz
mov
sub
mov
xchg
push
push
sub
lea
imul
das
and
dec
test
jne
mov
popa
aaa
adc
pop
sub
add
or
mov
clc
lret
sub
and
movsb
es
outsb
xchg
fildll
push
imull
xorb
ret
jb
inc
fwait
popa
movsb
cmp
loop
inc
ficoml
aad
ret
add
sahf
push
cmpsb
sahf
cmp
stos
hlt
lods
jo
inc
pop
cs
add
mov
stos
sbb
or
xor
loop
imulb
rcll
sub
cs
bound
pop
mov
jb
and
cmpsl
jmp
cmp
or
roll
cmp
add
fildll
mov
lods
push
sbb
mov
test
imul
setb
mov
gs
pop
addr16
iret
push
mov
mov
rcrb
mov
into
cs
dec
or
das
sub
add
stos
or
dec
lods
sub
test
pop
lods
mov
jb
jge
fisttps
xor
lock
es
outsl
mov
sbb
cmc
mov
jo
insl
jno
and
stos
call
cmp
lds
add
insb
aaa
dec
sbbl
mov
ret
out
lock
mov
inc
into
push
mov
loope
shl
push
push
cmc
sbb
daa
add
adc
cld
jb
pop
jns
sahf
gs
lods
mov
add
lods
cmp
mov
xchg
decb
stc
cmp
jmp
xchg
icebp
pusha
loopne
sahf
andb
lahf
popf
lahf
sub
scas
mov
lret
aaa
inc
xchg
cmp
test
aas
and
iret
and
jle
xor
fs
mov
ret
js
mov
push
push
rolb
adc
jmp
pop
jle
pop
subl
scas
jge
jle
pop
xor
das
out
lods
into
loopne
inc
pusha
testl
rcl
movsb
push
xchg
pop
pop
jns
icebp
imul
xor
push
outsb
repz
mov
cld
dec
repz
push
insl
inc
xor
jae
jmp
lods
pusha
fbstp
mov
mov
dec
sbb
sub
xorb
mov
sbb
imul
and
mov
jge
int
xchg
lahf
stos
jge
ss
mov
stos
test
inc
xor
pop
ss
std
adc
xlat
dec
sbb
pop
mov
dec
mov
test
jge
xor
imul
cmpsl
xor
and
out
jbe
orl
pop
testl
andl
ds
out
sbb
pop
shll
xor
inc
ljmp
add
lret
aas
int3
mov
or
dec
add
add
push
icebp
stc
and
or
sbb
xchg
cmp
mov
decl
mov
mov
jbe
mov
orb
popa
xor
andl
jge
jmp
aaa
adc
fwait
cmpsl
mov
mov
jbe
lods
outsb
stos
cmp
fdivr
faddl
sbb
roll
xorb
xchg
int
mov
insl
jnp
mov
fcomps
imul
lcall
sbbb
sub
pop
dec
xchg
ds
pop
dec
pop
sbb
push
scas
jge
pop
andb
xchg
movsl
xchg
add
movsb
xor
mov
dec
movsl
push
movsb
lcall
lcall
aaa
and
mov
dec
add
ret
cs
pusha
shlb
lock
ljmp
fisubrs
mov
sbb
dec
sbb
outsb
xor
jo
or
jg
mov
xor
cmp
fnsave
sbb
dec
mov
cmp
or
scas
add
mov
mov
jo
orb
or
mov
push
fsts
and
addl
je
add
pop
loope
xor
adc
xchg
sti
xchg
push
dec
idivb
lods
mov
mov
pop
fdivs
sbb
jae
push
mov
mov
fdivr
inc
incl
and
lds
nop
mov
out
jge
pop
pop
mov
dec
push
xor
les
lret
and
pop
inc
sbb
jge
mov
inc
lock
sub
ss
pop
add
ja
scas
pusha
pop
dec
mov
mov
mov
outsb
or
mov
icebp
mov
inc
xlat
jmp
insb
scas
or
sbb
mov
sahf
dec
mov
inc
dec
push
nop
jbe
sub
cmp
mov
and
pop
cmpsl
jne
adcl
add
sub
stos
lret
mov
xlat
ljmp
push
jno
clc
hlt
fisttpl
ja
mov
pushf
cs
xchg
cmpsb
or
loop
cmpsb
xor
ja
out
inc
ja
lcall
cmc
push
add
ss
insl
mov
mov
mov
sub
pop
jecxz
xchg
mov
sbb
sub
mov
xor
js
stos
dec
shl
in
inc
int3
inc
inc
es
jmp
pmullw
mov
iret
sub
push
movsl
mov
ss
outsb
clc
shrl
xor
bound
mov
call
xchg
cmc
negb
not
insb
cltd
testl
loope
mov
fwait
add
jge
mov
inc
jno
xchg
imul
xchg
div
xchg
mov
ds
adc
and
jo
cmpsl
add
mov
out
std
pusha
cmc
add
lret
pop
cs
push
unpcklps
xchg
gs
lea
dec
scas
ds
in
shll
or
and
inc
inc
dec
imul
dec
push
ljmp
dec
das
mov
loop
xor
push
adc
cmp
xor
add
test
mov
sbb
fisttpl
jno
jb
dec
cmp
sahf
in
outsb
push
inc
test
pop
add
fwait
push
into
pop
mov
and
cmp
xor
cs
cmpb
cmp
adc
pop
add
stos
ret
push
mov
outsb
jmp
sub
cwtl
adc
orb
mov
stos
add
and
pusha
jle
lcall
out
inc
loope
add
popa
into
mov
and
stc
test
mov
pop
lahf
lods
and
mov
cmpsl
lcall
sub
jns
lcall
rol
lods
decl
adc
push
sahf
roll
mov
cs
clc
sbb
arpl
push
adc
das
push
test
xchg
inc
adc
insl
rcll
lods
imul
mov
aad
mov
adc
cmpsb
sub
jp
mov
cmp
fmull
fcomp
sub
xor
rcrb
sub
jnp
mov
adc
pop
mov
jmp
jb
mov
sbb
pop
repz
es
xor
push
or
sub
pop
fbld
pop
inc
adc
pop
or
test
fsubr
dec
je
lods
aaa
enter
mov
ret
js
fdivp
or
repz
mov
je
unpckhps
xorl
cmc
sti
jo
bound
fadds
mov
xchg
dec
push
push
mov
rclb
fiaddl
lahf
push
add
adc
lret
and
fisubrs
mov
jb
fiaddl
adc
mov
adc
mov
lods
jmp
out
push
hlt
aaa
cli
and
push
add
lods
sbb
insl
out
orb
and
and
jge
sub
out
push
popa
ret
push
into
lods
jnp
subb
daa
lea
xor
ss
cmpsb
adc
das
mov
sub
mov
sbb
push
shrb
sub
xor
xor
icebp
mov
pop
into
ss
hlt
or
and
aaa
xchg
sbb
push
popa
add
jmp
cmp
mov
fsubrl
cmp
repz
fidivrs
push
jg
ja
push
popf
jb
sbb
and
mov
cmp
xor
int3
cmp
dec
rorl
dec
mov
pushf
sti
int3
repz
cmp
dec
std
popf
push
push
mov
sub
in
sbb
and
mov
out
pop
aaa
ja
mov
mov
cli
insb
loopne
dec
iret
push
mov
imul
xor
dec
je
clc
clc
jp
inc
xor
and
mov
xor
adc
mov
fisttpll
cltd
fbstp
and
mov
xor
lods
cmpsb
stos
mov
in
fwait
jno
push
adc
ja
cmpsb
mov
jo
iret
xchg
sbb
aam
or
xor
xchg
inc
inc
aam
icebp
iret
das
push
pop
pushf
bound
mov
dec
lock
clc
pop
inc
push
mov
insb
scas
adc
and
mov
adc
daa
pop
xor
imul
imul
ja
dec
imul
aad
es
pop
adc
icebp
iret
push
movsl
adc
pusha
enter
pop
or
in
pop
mov
jmp
jmp
scas
push
dec
mov
inc
mov
pop
ljmp
lahf
test
iret
add
dec
push
imul
pop
mov
mov
push
inc
cmp
and
lret
outsl
imul
push
inc
inc
and
iret
jbe
adc
jno
iret
push
stos
subl
cltd
dec
dec
imul
ret
adc
xchg
jecxz
sbb
mov
fidivs
push
clc
sbb
push
mov
subl
test
xor
inc
push
cmp
pop
int3
jl
xchg
cmp
cmp
xchg
sahf
lret
pop
xchg
outsl
dec
imull
xor
dec
adc
iret
clc
inc
cltd
xchg
xor
lcall
mov
mov
and
jmp
lods
jo
push
outsl
and
lret
addr16
cmp
dec
sbb
push
and
dec
enter
inc
xor
jp
mov
fwait
movsb
data16
cs
jns
push
cmp
js
mov
sub
xor
cwtl
adc
ror
je
dec
adc
sbb
insl
subl
mov
push
insb
loope
mov
push
leave
mov
jno
adc
push
fistps
imul
imul
sbb
ret
push
stc
pop
iret
dec
leave
rcrl
ret
push
xorl
ja
iret
je
adc
iret
call
imul
or
adc
mov
jp
inc
mov
push
lcall
dec
xor
gs
cmpsb
dec
lods
in
xchg
push
dec
hlt
iret
clc
xchg
pop
es
subb
xchg
jmp
cmp
fs
xchg
dec
dec
jle
push
outsb
adcl
xchg
imul
stos
add
pop
iret
je
or
xchg
in
das
push
sbb
cmpb
and
inc
push
sbb
fisubrs
jae
mov
arpl
clc
xor
pop
addl
sub
pusha
jns
pop
daa
js,pt
adc
lods
or
push
xchg
push
orl
fisubrs
push
clc
stos
scas
or
stos
adc
iretw
lea
popf
stos
shr
pop
ja
fcmovne
jnp
je
adc
dec
outsb
js
xlat
push
imul
iret
js
or
iret
push
add
adc
push
mov
jge
push
dec
jb
mov
lret
adc
lods
iret
mov
imul
repnz
mov
and
dec
mov
jae
adc
xchg
movsb
xorb
repz
scas
imul
fs
xchg
push
clc
xor
enter
jno
stc
and
dec
sub
imul
mov
ret
push
test
ljmp
js
gs
mov
and
jle
push
shrb
adc
scas
mov
inc
mov
cmc
add
lock
dec
sub
icebp
out
ljmp
mov
jne
mov
daa
pop
xchg
es
pusha
adc
mov
ror
push
leave
xorl
das
push
xchg
fists
pop
xchg
movsl
sub
adc
xchg
out
adc
adc
iret
je
adc
add
push
test
mov
xchg
outsl
dec
pop
xchg
int
inc
xor
test
and
mov
iret
dec
xor
xchg
jg
adc
cld
es
dec
mov
jnp
lods
add
mov
push
inc
pop
iret
jp
jmp
imul
mov
divb
fcmovu
mov
pop
sub
jecxz
xor
aas
add
and
bound
add
xor
orl
out
mov
iret
je
add
add
clc
mov
jge
mov
movsb
mov
lahf
mov
xchg
mov
jbe
and
mov
js
cmp
mov
es
add
inc
xor
push
adc
iret
mov
push
rorb
ds
int
pop
iret
iret
push
cltd
adc
fstl
jne
scas
mov
add
imul
lods
xor
adc
int
dec
mov
jno
imul
out
subb
ja
dec
ss
clc
arpl
aas
cmp
mov
iret
aaa
stos
jae
xor
jp
mov
cmp
mov
cmpsl
jp
jge
mov
jecxz
and
sub
mov
xchg
and
out
jb
mov
fisubl
enter
and
mov
or
sbb
cmp
or
imul
sti
sub
clc
movsl
pop
movl
das
scas
or
fcoms
dec
xchg
js
outsl
dec
lock
jmp
xor
enter
rcll
sub
ds
out
iret
jge
in
orl
mov
jae
xchg
bound
arpl
enter
push
dec
adc
jno
iret
stc
and
dec
push
xchg
add
mov
xchg
xor
add
cmp
xchg
or
push
lds
pop
ja
dec
aaa
imul
test
pop
iret
je
adc
test
js
mov
sub
and
ficoms
rorb
iret
fwait
add
mov
testb
iret
lods
pop
clc
pop
push
xor
cmc
dec
push
mov
imul
push
loope
call
inc
inc
or
pop
lret
dec
adc
push
aaa
ret
iret
fwait
push
ret
jp
mov
pop
mov
mov
push
in
bound
add
hlt
fs
mov
sbb
mov
dec
sub
jns
dec
clc
sbb
inc
push
sub
insl
pop
movsl
sbb
bound
sbb
lods
fwait
lods
and
mov
int
mov
dec
lods
xor
in
imul
push
mov
ret
mov
dec
pop
iret
fwait
mov
pop
ljmp
lock
int
mov
mov
ja
dec
cmp
leave
scas
or
fstpl
orl
and
sub
inc
call
lock
xchg
int
clc
or
add
out
add
lods
idivl
hlt
push
je
ror
xchg
jne
mov
iret
push
inc
adcl
cmp
cmc
gs
or
clc
aaa
inc
nop
add
cmp
mov
sub
mov
push
dec
in
pop
sbb
adc
insl
mov
fsub
iret
or
push
movsb
sbbl
iret
iret
push
in
clc
dec
je
inc
lret
pop
insl
ror
add
push
shll
iret
scas
insb
cmp
or
lea
sub
daa
js
mov
mov
lods
iret
jge
dec
xor
aaa
lods
ds
xlat
stos
iret
jge
jmp
push
mov
inc
ss
and
sbbl
inc
and
andl
inc
clc
sahf
fisubrl
ret
divl
sbb
sbb
icebp
push
mov
add
fistpl
pop
ss
mov
movsl
mov
xor
dec
push
rorb
rcrl
int3
int
fs
cmp
hlt
xor
es
inc
pushf
mov
jns
scas
iret
lea
pusha
xlat
mov
jge
dec
fs
pop
test
sub
jns
push
adc
mov
imul
push
cmp
mov
pop
imul
rcrl
sub
inc
es
or
adc
add
stc
daa
xor
pop
iret
je
adc
mov
inc
push
outsl
dec
sub
push
int
movsb
es
add
jmp
popf
int
mov
mov
mov
or
push
dec
mov
iret
fwait
out
imul
inc
xorl
iret
je
lea
jmp
xchg
test
pushf
sti
mov
imul
adc
mov
xorb
push
and
adc
int
mov
push
jne
add
adcl
aas
enter
hlt
enter
jmp
pop
cwtl
repz
pop
adc
cmp
sub
xor
int
ja
mov
movsb
out
sti
lea
pop
fs
imul
lods
das
push
dec
aad
inc
outsl
dec
lock
mov
inc
lea
push
out
addr16
mov
inc
jne
imul
scas
imul
adc
ret
xchg
dec
lods
iret
clc
test
push
sahf
push
addb
mov
adc
add
dec
out
hlt
mov
subl
cwtl
and
mov
out
stos
inc
loope
rcll
in
cmp
push
mov
xor
pop
adc
test
sub
and
fisubrs
mov
shlb
iret
stc
and
es
xchg
dec
xor
mov
adc
ror
iret
scas
negb
add
mov
jbe
stos
adc
and
pop
cmc
sbbl
xorb
push
push
xorl
adc
and
iret
je
shl
mov
outsb
xor
mov
out
jno
push
sbb
mov
adc
imul
mov
cltd
adc
int
lods
jb
movsb
mov
scas
push
dec
mov
sub
andb
loopne
ror
push
mov
jno
out
je
mov
in
mov
and
subb
mov
imul
cmc
sbb
sub
mov
cmpsb
sub
sub
sub
jge
aam
mov
dec
por
fwait
je
mov
dec
mov
jmpw
pop
icebp
je
clc
xorl
jbe
xchg
bound
int3
jae
iret
mov
out
sub
mov
in
mov
into
xchg
jne
stos
xchg
imul
clc
lods
rolb
and
sub
or
hlt
fisubrs
push
mov
imul
add
mov
data16
outsb
xchg
lahf
jbe,pt
js
lcall
mov
pushf
iret
push
dec
sbb
xchg
popf
dec
mov
jge
jbe
icebp
scas
je
add
inc
js
lock
xlat
mov
push
mov
mov
dec
push
xor
mov
mov
push
sbb
fiadds
and
cmpsb
ficoml
xor
addr16
lret
xchg
and
lods
adc
test
icebp
rclb
adc
clc
movsb
pop
ss
mov
lret
enter
ror
sbb
jb
pop
push
lods
sub
leave
xchg
int
imul
or
mov
imul
mov
dec
dec
iret
clc
ja
lea
mov
cmpsl
jns
mov
jno
imul
adc
sbb
je
xor
xchg
mov
mov
cmp
xor
xchg
jp
and
and
mov
xor
cmp
out
mov
push
xchg
push
pop
adc
mov
cmpsl
xor
les
and
es
jne
aaa
jmp
outsl
dec
mov
cmc
xor
and
push
add
gs
cltd
inc
in
outsb
sub
aas
std
pop
dec
rol
pop
mov
idivb
sahf
jecxz
xor
enter
adcl
ss
jge
andl
outsl
jle
jae
dec
les
adc
xlat
stos
imul
repz
pop
mov
in
dec
mov
inc
mov
dec
aaa
iret
clc
enter
ja
rcl
xchg
clc
push
mov
es
ss
bnd
sub
dec
jbe
lea
jp
imul
add
fwait
cmpsb
ret
sti
mov
in
mov
imul
xlat
inc
push
imul
jle
mov
adc
inc
ret
mov
fwait
repz
iret
push
xchg
subl
outsb
fs
dec
adc
int
push
loopne
iret
loopne
ret
imul
int3
imul
sub
outsb
iret
clc
add
rcl
and
push
mov
xchg
sahf
jb
inc
lock
pop
movsl
jae
sbb
dec
pop
lods
pop
iret
je
adc
lret
sbbl
cmp
sub
mov
dec
mov
pop
pop
out
hlt
shll
imul
addr16
ljmp
mov
sub
jb
lock
leave
iret
daa
or
fisttpll
or
pop
imul
adc
iret
clc
or
daa
notl
xor
sub
aam
jecxz
xchg
testb
fnsave
call
add
fdivs
xchg
lret
iret
jge
xlat
clc
mov
jp
repz
inc
push
ror
xor
int
out
cmpsb
test
mov
mov
imul
pop
jecxz
mov
mov
sub
test
iret
and
push
mov
insl
cmc
gs
push
cld
inc
sbb
jp
mov
push
xor
shr
in
jno
iret
stc
xor
mov
and
jmp
dec
adc
js
or
mov
imul
and
fimuls
imul
add
ror
icebp
cld
out
xor
and
xlat
daa
iret
lea
add
aad
pop
push
xor
imul
pop
in
adc
iret
cmpsb
cmpsl
loop
jb
cmp
lods
hlt
pop
movsl
cmpsb
ret
cmpsb
xor
push
mov
and
push
or
lods
mov
test
inc
jbe
js
lods
mov
and
cmp
lods
jmp
cwtl
push
gs
xchg
or
cs
sub
aas
push
ret
iret
stc
and
inc
dec
and
lods
lods
scas
push
jbe
lds
into
pop
int
push
es
add
or
sub
andl
iret
jge
ss
ja
dec
jmp
clc
out
and
mov
ss
mov
lock
mov
iret
push
stos
sub
js
cmc
movsl
pop
cmpsb
and
and
dec
out
adcl
or
adc
xor
and
adc
jae
lods
pusha
jmp
lret
xor
push
dec
mov
or
adc
cmc
iret
stc
and
lods
mull
mov
out
ret
mov
sti
les
repz
dec
addr16
sbb
inc
lds
pusha
sub
lods
iret
insl
mov
push
in
lods
jae
imul
mov
push
xchg
jns
pop
push
sarw
mov
xor
mov
adc
dec
pop
inc
cmp
xchg
jnp
xchg
loope
test
int
out
mov
inc
andb
cmpl
lock
push
clc
sub
push
shrb
fwait
jae
cmp
sub
push
or
out
mov
shrl
js,pt
sub
mov
es
lods
mov
push
dec
fs
mov
testl
inc
ret
pop
nop
sbb
fiaddl
or
cmp
adc
js
and
test
pop
xor
pop
addl
rol
adc
pop
mov
mov
shlb
xor
push
clc
xchg
xchg
outsl
dec
hlt
cmc
jae
push
push
loop
push
clc
push
mov
push
leave
orl
mov
sub
test
leave
cmp
mov
xor
xor
push
jo
imul
faddl
outsl
ror
xchg
out
sub
and
xchg
pop
outsb
pop
iret
je
adc
mov
stos
push
xor
sub
cmp
addl
and
out
icebp
iret
in
pop
mov
and
inc
es
in
adc
mov
adc
mov
mov
push
cmpsl
sub
imul
adc
subb
jbe
and
js
iret
xchg
jmp
les
xchg
dec
out
adc
daa
jmp
cltd
rcl
int3
push
jns
or
mov
xor
mov
jecxz
push
and
leave
or
inc
jmp
and
cmc
adc
ja
push
mov
outsl
dec
mov
clc
addr16
lea
jmp
jbe
test
inc
in
sub
rcll
mov
iret
jmp
pop
push
xor
push
xor
inc
je
adc
cld
cmp
mov
test
repnz
cmp
xor
push
scas
jns
insb
and
arpl
pop
lock
push
xchg
xchg
cmp
iret
clc
pop
movl
in
mov
push
jne
scas
inc
repnz
adc
inc
jbe
imul
jmp
adc
iret
clc
xor
cmp
bound
je
add
int
mov
ret
push
arpl
imul
mov
out
jb
mov
xor
clc
pop
movsl
aam
sbb
push
pop
mov
adc
fildll
shl
mov
imul
cld
lock
iret
fwait
es
xchg
cltd
in
iret
lret
ror
push
xor
add
loopne
jmp
ror
ljmp
push
jmp
pop
sub
mov
iret
fwait
jae
sub
mov
inc
push
adc
outsb
jmp
push
gs
testb
imul
pop
pusha
enter
pop
insb
ror
movsb
push
jo
aam
xchg
inc
dec
mov
jmp
test
mov
mov
enter
jmp
mov
sub
iret
imulb
lods
inc
shrl
cmp
stc
and
dec
xchg
push
pop
dec
fistl
xor
jmp
test
dec
sbb
insb
adc
push
enter
dec
jne
dec
in
push
and
dec
call
lock
je
jo
mov
adc
xor
hlt
lock
clc
imul
flds
mov
sbb
repz
iret
push
push
adcl
icebp
fsts
xchg
dec
aad
push
int
fs
and
mov
imul
outsl
dec
outsl
iret
clc
xor
mov
js
xor
jp
cs
and
add
bound
dec
inc
jo
mov
testb
add
idiv
mov
shrl
xor
je
mov
mov
mov
xor
mov
mov
ss
jno
xchg
mov
pop
popf
das
loope
ja
push
ljmp
lret
lock
sub
and
inc
xchg
jo
adc
inc
sub
xor
sbb
pushf
lock
loop
out
mov
das
jmp
lock
fwait
sub
fimull
xor
cli
push
xor
roll
imul
in
sub
push
mov
sar
fs
pop
cwtl
dec
sub
xchg
and
adcl
cmp
iret
lret
xchg
fimull
clc
leave
add
xor
jg
leave
sub
orl
jge
xor
xor
push
imul
loope
push
dec
jmp
mov
mov
out
add
jbe
and
popa
mov
lea
clc
ljmp
cmp
mov
jne
pusha
fisubl
xor
pop
sahf
inc
cmp
sti
shll
clc
imul
cmp
add
movsl
inc
add
add
lea
pop
jnp
sbb
jb
mov
jo
jmp
test
mov
mov
xorl
adc
dec
leave
loopne
and
jo
cmpsb
out
arpl
fs
pop
test
in
cld
dec
arpl
cmp
fsubr
push
pop
mov
rcl
stos
jno
cld
iret
divl
sub
jb
jno
xor
imul
adc
roll
cmpsb
inc
movsb
movsb
int
add
test
das
clc
push
add
xlat
inc
jmp
jb
outsl
aaa
mov
mov
outsl
movsl
jo
inc
fnstcw
hlt
ret
mov
pop
jg
mov
dec
or
andb
clc
movsl
jl
movsb
jmp
aaa
addr16
aam
ja
pusha
loope
arpl
mov
cmp
aas
in
push
xchg
test
cmpsb
rcr
pop
scas
xchg
and
cltd
mov
dec
cmc
mov
movsb
and
pop
xor
mov
fcomi
sar
rolb
push
fstpt
repz
xchg
sub
lock
insl
xor
mov
or
jo
repz
iret
mov
push
in
lea
sbb
arpl
push
fstpt
mov
fxch
gs
xchg
push
notb
ss
adc
mov
int
cltd
ja
mov
lcall
cmpsb
adc
outsl
dec
add
push
insb
mov
dec
fwait
or
pop
lahf
mov
notl
stos
dec
fisubs
cli
mov
leave
mov
inc
adcl
or
xorl
cmp
push
inc
dec
push
shll
jno
jge
cmc
lds
lods
nop
inc
cmpsb
mov
rcl
jge
sbb
sbb
int
mov
add
mov
dec
pop
clc
or
inc
dec
lcall
cmp
divl
mov
addr16
aad
xor
outsb
pop
dec
mov
pop
lea
dec
add
push
push
mov
pop
and
mov
adc
inc
pop
mov
xor
dec
lods
je
movsl
pop
enter
out
je,pt
cmp
cmp
push
adc
add
mov
ret
xor
rolb
lods
mov
icebp
loope
mov
mov
push
loopne
mov
ret
cmp
mov
lds
lret
and
stos
pop
ss
sbb
add
loop
cmpsl
movb
or
pop
dec
lds
jbe
js
and
add
lds
not
adc
pop
neg
out
sbb
call
hlt
and
sub
mov
push
and
fwait
push
or
rclb
dec
shr
mov
mov
xor
pushf
pop
pop
or
je
push
adc
pop
pushf
arpl
pop
cltd
sbb
xchg
out
jmp
imul
or
inc
pop
jno
loop
aad
push
out
jmp
inc
lcall
mov
iret
and
jo
pop
les
jmp
incb
lds
subb
jg
sub
jb
sahf
test
cmc
or
lret
pop
add
xchg
imul
or
add
sub
stc
mov
xchg
sahf
stos
arpl
je
pop
or
into
push
add
inc
dec
jp
arpl
fwait
xchg
stc
data16
cmpsb
je
mov
and
shll
xchg
and
push
inc
xor
rcrb
dec
and
push
add
mov
dec
mov
mov
test
mov
idivl
dec
stos
inc
pop
mov
imul
ss
jp
sbb
les
aam
out
add
inc
mov
xor
icebp
insb
testb
imul
ja
cmpl
mov
testb
fiadds
push
lret
in
dec
lock
jnp
stos
insb
jge
or
movsb
mov
cs
xchg
scas
dec
pop
sub
jge
inc
jbe
lret
int
cmpsb
mov
and
in
push
clc
pop
addr16
ljmp
cld
movl
outsl
in
and
and
fsubl
insl
cmp
inc
or
je
add
push
cmp
retw
mov
inc
divl
insl
inc
mov
test
decl
std
sbb
mov
bound
das
call
hlt
ret
mov
push
dec
or
xor
and
stc
stos
sub
add
mov
adc
xor
cmp
scas
pop
and
or
mov
jno
orl
pusha
fcmovnbe
shll
stc
dec
cli
jne
pop
sub
sbb
test
cmp
fcmovnbe
ret
lahf
and
dec
and
mov
andb
mov
imul
sbb
mov
jbe
ds
sbbb
lock
mov
and
scas
xor
mov
cmovle
jbe
add
ss
bound
dec
mov
popa
mov
xor
add
add
aaa
aas
into
jbe
out
mov
fistps
aam
adc
dec
pop
pop
mov
out
lds
ret
fucomi
xchg
sub
es
pop
adc
sti
adc
xchg
cli
out
xlat
push
imul
push
arpl
lods
mov
jmp
inc
insb
push
repnz
stos
outsb
repz
sub
rorl
mov
pop
jecxz
cmc
ret
dec
push
ss
lret
cmpsl
notb
jo
mov
pop
sub
xor
rcll
push
fwait
add
aas
cmpsb
cmp
push
orb
and
and
pop
xor
test
pop
push
lock
shl
lods
fildl
int
xor
dec
push
push
subb
bound
mov
cmp
add
jo
sub
sub
mov
stc
andl
pusha
dec
mov
mov
mov
cmp
cwtl
insl
in
scas
fwait
pop
mov
push
push
sub
and
mov
sahf
mov
dec
pop
jae
mov
ret
ds
stos
mov
sub
divb
cmp
adc
das
sub
rcrl
jne
jb
adc
cli
jno
push
iret
cli
jae
cmpsb
add
pop
pop
push
pop
xor
add
mov
xchg
es
jnp
jmp
insl
push
int
push
repnz
cli
in
push
pop
adcl
sub
cmp
add
mov
ss
imull
xchg
enter
mov
clc
pop
add
mov
in
rcrb
mov
xor
mov
jno
pop
xchg
and
sbb
push
cmc
or
repnz
ret
cltd
jo
push
mov
mov
divl
mov
or
shl
lret
mov
test
xor
jnp
dec
popf
test
test
xor
ja
sub
add
jae
cld
ljmp
pushf
stos
xchg
mov
fcoml
popf
xchg
mov
out
and
lret
out
mov
push
dec
inc
jb
cmc
outsl
decl
mov
and
mov
cmc
leave
cmp
sar
push
jg
jo
addl
insb
pop
stos
ss
popf
das
push
jmp
rorb
fistpll
lret
jl
stos
fldcw
pop
jne
inc
jecxz
mov
das
lret
jmpw
cs
repnz
mov
icebp
aad
xor
rorl
inc
jge
test
lds
fdivr
imulb
jecxz
lcall
js
inc
stos
dec
and
insb
sbb
mov
pop
mov
jmp
and
jle
adc
xchg
lock
bound
mov
test
sub
mov
sbb
jmp
cmpsl
fidivs
mov
leave
insb
jecxz
mov
add
insl
dec
inc
push
scas
cld
dec
incl
sbb
add
mov
fwait
sub
int
imul
add
cwtl
mov
lods
test
push
lods
sub
mov
sub
and
imul
and
es
jle
mov
shrl
sbb
dec
ss
mov
push
push
inc
sub
inc
data16
stos
outsb
jo
jbe
movsl
movsb
arpl
or
adc
jmp
dec
mov
mov
xchg
xor
or
rcll
sub
sub
mull
cpuid
push
lcall
cmp
xlat
nop
xchg
mov
and
cltd
aam
imul
mov
out
mov
lret
push
or
aaa
mov
pop
mov
xor
jae
lea
push
mov
mov
mov
into
dec
in
mov
pop
dec
inc
push
and
cmp
xchg
lcall
mov
sbb
das
outsb
adc
jo
scas
mov
js
push
outsb
xlat
push
lcall
jb
scas
sbb
movd
lods
lcall
insb
leave
and
mov
mov
and
mov
mov
sub
lahf
mov
mov
or
or
jmp
cmp
jne
lock
mov
mov
mov
cmc
insb
mov
out
mov
mov
mov
lret
lcall
negl
push
dec
mov
sub
mov
icebp
sbb
pushf
scas
mov
imul
imul
dec
push
mov
aad
hlt
lcall
mov
test
xchg
imul
jecxz
adc
pusha
add
xor
ljmp
xchg
jb
cmp
sub
sbbl
xchg
mov
push
mov
pop
lcall
mov
ja
in
inc
pop
hlt
xchg
adc
mov
sbb
push
loopne
push
aad
inc
mov
js
pop
mov
xchg
movsb
lods
repnz
xchg
insb
jg
inc
lcall
add
add
xchg
lea
sub
mov
fsubrs
movsb
pop
leave
sbb
xor
fwait
repz
pop
sub
mov
or
movsb
call
inc
and
jno
aaa
lcall
push
jl
xor
add
push
js
mov
xchg
cmpsl
scas
pop
cmpsb
mov
push
sahf
push
stos
arpl
xor
movsb
xchg
xor
adc
cmp
fsubrs
sti
sub
mov
es
sar
jo
pavgb
add
cmp
adc
mov
ret
xchg
out
pop
add
push
sub
stc
inc
mov
sbb
aad
sbb
leave
push
xor
add
mov
pop
jb
xor
daa
or
es
stc
mov
sub
loopne
ljmp
mov
jo
jno
adcl
mov
fcoms
pop
roll
push
test
arpl
pop
cs
jecxz
test
jo
aad
outsb
icebp
iret
repnz
pushf
or
adcl
mov
aad
sub
popf
mov
ljmp
fidivs
inc
xchg
add
scas
es
xor
cltd
xor
cs
jl
adc
jne
push
lcall
xchg
jg
stos
ret
pop
arpl
push
pusha
adc
cwtl
jno
push
or
xchg
mov
mov
mov
sub
mov
mov
dec
mov
incl
mov
addl
mov
call
rorb
cs
lret
jb
mov
mov
xchg
out
mov
jecxz
out
daa
push
insl
test
xchg
push
mov
nop
adc
push
jb
sbb
and
xchg
ret
xor
andl
adc
and
sbb
mov
pop
add
adc
adc
xchg
scas
dec
outsb
cmp
ljmp
loope
fdivrs
popf
movsb
lcall
mov
cmp
out
ss
sub
out
jo
outsl
test
gs
scas
push
loope
sahf
push
cltd
shll
lcall
mov
call
xchg
repz
lods
aaa
push
or
movsb
insb
push
sbb
mov
icebp
or
jmp
aam
mov
mov
inc
add
jns
mov
xor
pop
fistpl
movb
insb
sarb
xor
cmc
stos
jmp
dec
and
es
mov
lea
mov
xchg
jbe
cmp
adc
mov
dec
cmp
loopne
insl
sub
dec
bound
dec
movsb
sbb
lods
xor
push
adc
leave
divb
stos
cmp
mov
or
dec
pusha
dec
fildll
dec
dec
mov
and
repnz
bnd
push
cmp
jb
sbb
lret
add
xor
or
xchg
inc
dec
jo
xor
or
mov
add
das
sub
aas
fcomps
es
mov
dec
pusha
sbb
inc
jo
xchg
mov
icebp
int3
daa
push
mov
xchg
test
sub
mov
dec
mov
sub
mov
lcall
lcall
iret
and
dec
xchg
sbb
push
dec
in
icebp
lods
lret
movsb
negl
shll
mov
push
iret
push
ja
fimuls
fbld
arpl
mov
ljmp
lods
mov
sbb
xchg
sti
add
inc
cs
fdivs
xor
shrd
test
dec
push
mov
push
jb
dec
rcrl
or
cmpsl
mov
inc
xor
jb
sbb
push
mov
or
push
mov
cli
mov
inc
mov
mov
outsl
imull
subb
push
mov
adc
or
mov
xor
push
shll
lret
gs
aam
int3
sub
rep
jge
xchg
out
add
fs
call
inc
scas
lcall
lods
movsb
or
or
outsb
ljmp
xchg
shrl
stc
jge
jmp
and
jb
sub
fcoml
jge
push
aad
and
mov
dec
enter
xor
lahf
push
or
imul
pop
xchg
insl
movsb
ret
sub
pop
int
sbb
xchg
xlat
mov
icebp
in
mov
imul
sbb
mov
inc
ret
ss
xor
xlat
sub
out
sahf
stos
shll
and
lods
xor
xor
jp
stos
movsb
push
push
jno
push
scas
pop
jl,pn
loopne
lea
shlb
lret
repz
mov
int3
sbb
icebp
movsb
addr16
cmp
mov
jecxz
pop
mov
push
and
push
mov
sahf
dec
adc
xchg
sub
in
cmp
dec
shrb
nop
js
sbb
and
inc
cmp
ss
shrl
pop
xchg
push
arpl
mov
shl
lods
xchg
mov
and
repnz
push
cmovg
cmc
push
or
mov
push
test
fmuls
mov
pop
cs
imul
sub
enter
lret
cmp
fistpl
mov
pop
xchg
repnz
gs
testl
scas
jp
fildll
aaa
fildl
pop
mov
fidivs
mov
and
cmpsl
lods
sub
pusha
fwait
lcall
or
ss
fcoms
scas
lcall
jno
mov
cmp
cmpsb
popf
imul
mov
outsl
ret
mov
sbb
mov
push
push
stos
sahf
jle
cmp
and
leave
repnz
jae
and
add
inc
xor
and
lea
call
call
jb
testl
imul
lds
jb
andb
mov
ja
inc
sbb
sbb
icebp
mov
pop
or
push
call
cmc
push
sub
movsl
outsl
mov
loop
hlt
jne
fwait
sub
out
insl
or
ja
lret
or
pusha
cltd
inc
ror
fcomi
jge
movsl
cmp
xchg
lods
cmp
mov
and
cltd
mov
in
stc
mov
push
pop
ret
sub
mov
insb
inc
jp
cmc
test
pop
sbbb
jmp
outsb
adc
push
jb
icebp
loop
data16
iret
rclb
test
in
mov
mov
lret
scas
aas
loopne
xchg
sbb
scas
inc
ror
imul
mov
xchg
sbb
fs
inc
sub
mov
push
out
cmp
mov
fimuls
xor
add
pusha
mov
call
push
mov
mull
inc
imul
sbb
fisttps
shll
pop
bound
cmpsl
xor
sub
xchg
adc
jnp
cli
dec
insb
or
add
testb
call
mov
pop
sbb
inc
ror
pop
pusha
icebp
jbe
nop
sbb
outsl
push
mov
stos
insb
cmp
pop
cmp
lock
adcb
imul
push
pop
xchg
inc
fidivs
pop
jp
dec
test
test
sbb
jns
fwait
add
lret
repz
gs
cmpsb
in
repnz
pusha
bswap
shrd
mov
clc
cmc
test
push
lea
je
shrd
mov
jp
add
lea
rol
mov
cmc
pushf
add
bt
jmp
push
lock
std
std
test
xchg
data16
ret
jne
gs
into
lret
and
pushf
mov
pop
fnsave
xor
push
pop
dec
std
jge
mov
inc
push
and
aam
push
rolb
adc
test
push
or
jge
jle
je
push
fsts
in
xchg
push
mov
movsb
jl
lret
xchg
sub
sbb
inc
push
rorb
inc
ror
dec
push
or
jbe
jg
mov
rcrl
out
push
push
call
pop
jg
lahf
cmp
shrb
push
mov
cmpsb
cmp
pop
std
push
call
add
scas
dec
loope
or
jno
repz
and
lret
sahf
daa
mov
enter
or
inc
movsb
xchg
loop
rcrl
js
insb
cmpsb
dec
call
or
adc
incb
nop
sub
adc
fnsave
inc
cmp
pop
arpl
sub
dec
xor
add
test
call
push
jp
and
xchg
ret
testb
nop
ja
ds
push
iret
arpl
lcall
lret
out
dec
pop
iret
dec
ss
dec
vmaxss
sbbl
pop
repz
fistpl
push
mov
fnstenv
dec
movl
movw
movb
movl
lea
jmp
fisubs
xchg
cmpsb
and
pop
ljmp
stc
js
les
sti
add
jle
adc
loop
fiadds
fildll
fcoml
xchg
mov
shrl
lods
cmpl
les
adcl
test
clc
or
cld
imul
ljmp
sahf
fsubr
inc
test
push
push
jns
lahf
inc
ror
loope
addr16
sub
mov
xchg
sub
push
inc
inc
dec
mov
inc
ret
lahf
fiadds
fmulp
or
sub
arpl
or
mov
rorl
mov
cmp
sub
jb
sub
pop
add
dec
dec
lea
insl
idivl
mov
imul
aaa
pop
in
je
movzbw
mov
movl
movb
pushl
pushl
ret
bsf
movzbl
mov
pusha
jmp
lea
je
pushf
cmp
jmp
cmp
push
call
add
add
or
add
sbb
add
or
add
sbb
add
or
add
xor
pop
sbb
add
push
ror
lods
mov
fnstcw
xor
lods
rorb
jnp
fmull
add
dec
loopne
notb
or
mov
xchg
fbld
fsub
hlt
mov
push
lods
push
lea
loop
xchg
iret
aam
lds
sbb
fisttpll
cld
mov
stos
std
gs
shr
mov
cltd
mov
xchg
push
cmp
mov
jbe
psraw
xor
xchg
xchg
idiv
andb
ss
je
cmpsb
cmp
fs
xor
mov
adc
cli
lcall
add
negb
out
push
sahf
fiadds
mov
add
fiadds
mov
add
add
ss
xchg
mov
add
sahf
mov
outsb
imulb
add
add
ds
sub
pop
jecxz
adc
sbb
xor
idivl
loope
pop
pop
jne
scas
fstpl
repnz
and
jmp
ljmp
mov
addr16
aad
push
mov
jnp
lods
inc
fstps
mov
mov
mov
pop
xchg
jb
ds
in
decb
pop
xlat
insb
or
pop
dec
or
stos
inc
pop
mov
pushf
cmc
fimull
adc
jne
xor
cld
cmp
xor
add
xor
out
sarb
pushf
jle
xor
cmp
jecxz
ds
inc
lahf
call
ja
mov
cwtl
cs
xchg
sub
daa
fldl2e
jbe
push
mov
lea
jl
ja
jne
pusha
lea
jb
stc
test
cmpb
push
push
pusha
mov
lea
jne
movsbl
not
sar
mov
cmc
pusha
add
mov
stc
pushf
pushf
movzwl
cmc
mov
bt
add
push
cmc
test
mov
mov
jmp
xchg
mov
clc
inc
dec
mov
call
jmp
or
ror
push
jb
mov
jnp
jg
sbb
pop
int
xor
iret
cwtl
fiadds
xlat
insb
testl
popa
mov
pushf
daa
dec
mov
push
pop
xchg
nop
clc
mov
pop
mov
adc
push
js
pop
aas
xor
cs
stos
adc
scas
lea
mov
rcrl
std
andl
dec
in
scas
in
xchg
aad
sub
lea
jae
clc
call
test
cmp
lret
movsl
sub
push
lea
or
xchg
icebp
cltd
xor
ret
scas
aas
addr16
xchg
rcrb
fsts
pop
in
jle
test
in
not
mov
iret
adc
xor
movsl
inc
or
mulb
dec
insl
mov
nop
testl
cmp
lret
nop
jno
sub
rdmsr
inc
cmp
sbb
idivb
inc
mov
add
call
iret
jmp
jno
sub
leave
cmp
adc
fidivrl
scas
mov
cmp
dec
xor
cwtl
negl
mov
sbb
xlat
aas
xchg
inc
jmp
add
mov
in
hlt
std
int
mov
in
push
leave
lods
mov
adc
dec
mov
jmp
cmp
fsubs
pop
xor
xor
stc
mov
loopne
int3
iret
jne
xchg
jmp
sbb
sbb
adc
in
rcl
enter
divl
mov
mov
jl
out
dec
push
adc
popa
out
adc
push
ret
movsb
mov
into
icebp
cmp
jnp
adc
add
gs
pop
aad
sub
xchg
call
xor
cmp
lret
mov
mov
leave
push
out
xrelease
xor
or
out
fwait
movsb
or
ret
pushf
add
imul
enter
fidivrs
jg
dec
pusha
das
subb
repz
cmpsl
cmpl
xchg
dec
mov
mov
pop
fistpl
xor
dec
mov
aaa
push
and
test
aam
ror
cmc
ja
imul
push
cmp
cmpsl
xor
and
mov
push
out
adc
loope
or
out
jno
push
cmc
jae
mov
pushf
push
bswap
movzbl
mov
pushf
pusha
pushl
pushf
lea
jmp
jge
cmpb
lret
repnz
add
jb
mov
add
cmp
in
jo
sub
fiadds
xlat
insb
adc
cli
test
jl
push
inc
push
leave
or
add
push
cmp
cmp
and
in
rol
push
add
add
and
push
mov
push
jmp
jnp
fwait
das
mov
lods
xor
xchg
aad
push
in
icebp
xchg
and
pushl
lea
call
push
pushf
pushf
lea
jmp
test
test
test
cmp
mov
pushf
pushf
push
lea
jae
movsbw
lea
not
call
cmpsl
sti
xor
ror
jbe
adc
push
pop
lahf
cmp
jbe
ds
ret
xor
xor
fisubrl
test
push
out
xchg
test
test
sti
stc
push
push
je
xlat
pushw
mov
jbe
lcall
ja
pop
data16
jmp
pop
and
mov
pusha
call
xor
ss
lret
pushf
cmp
jno
xchg
sbb
insl
sbb
xor
mov
inc
fildll
gs
mov
or
mov
cmp
mov
neg
xor
stc
push
lock
dec
test
aad
stc
lea
mov
loope
or
ds
std
ja
pop
in
mov
fcomps
lea
push
out
jnp
lahf
es
and
push
test
iret
dec
xchg
and
sub
xchg
cmp
push
xor
in
lea
mov
xor
cmp
inc
jle
push
push
lods
pushf
sbb
cmp
js
and
sub
mov
sbb
orl
xor
packsswb
mov
inc
fistps
or
sbb
out
ljmp
jnp
clc
call
dec
xor
xor
rcrb
jne
test
xlat
imul
ja
mov
cmpsb
dec
cs
outsb
mov
movsb
imul
dec
mov
ret
push
pop
mov
fnstsw
xor
fucomp
mov
ret
mov
adc
lods
popf
test
sub
rclb
pop
xchg
iret
dec
pop
push
push
fwait
sub
pop
cmc
push
push
add
bt
cmc
cmc
test
pusha
pushl
mov
pushf
lea
jne
push
pusha
movw
mov
jmp
mov
aaa
ror
outsb
jns
sbbl
mov
mov
orb
dec
mov
lahf
data16
push
imul
sbbb
popa
leave
mov
xlat
je
jbe
xchg
leave
in
lcall
test
or
out
cmpsb
push
push
cmc
mov
jne
mulb
std
int3
inc
fsts
in
add
lock
jo
es
or
inc
data16
mov
rcl
jmp
or
xor
ror
jae
pop
stos
sub
add
dec
in
rolb
mov
pop
out
fiadds
aam
divl
dec
xchg
int
fisubl
cwtl
pop
scas
sbb
inc
mov
ffreep
xchg
lcall
lds
lahf
pop
sub
subl
xchg
movsl
cs
ss
mov
mov
leave
jg
nop
lahf
inc
lret
push
add
add
cmp
add
add
dec
clc
xor
add
add
dec
cmp
mov
xor
cltd
sbb
add
loopne
add
add
add
pushf
popw
stc
stc
sub
mov
clc
bt
push
pushl
sub
clc
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
jmp
xor
sub
jle
mov
ja
xchg
push
cmpsb
cs
xor
mov
inc
sbb
rcll
fidivl
sahf
aaa
cmpl
icebp
ja
lods
xor
cli
icebp
clc
dec
xchg
ret
push
ljmp
inc
xor
lret
push
icebp
jae
std
gs
mov
xor
stos
xor
push
fildll
xor
inc
push
inc
loopne
xor
inc
iret
dec
call
mov
mov
cmp
leave
xchg
pusha
jns
jp
jge
inc
fimull
jecxz
jne
mov
mov
and
rorl
les
ret
mov
inc
mov
pop
mov
mov
and
push
push
loop
repz
cwtl
or
movsb
mov
xor
xor
fnstenv
mov
pushw
sahf
sub
test
and
lea
jmp
adc
lret
js
xchg
sbb
sub
nop
lock
xchg
test
call
jle
lods
sub
and
pop
dec
pop
aam
cmp
out
mov
aad
adc
repnz
mov
jge
pop
mov
scas
fchs
jnp
stos
pushf
pusha
sbb
ja
sbb
mov
or
adc
dec
fldenv
test
jns
rcl
aad
cld
test
cmp
push
out
js
sahf
ss
push
inc
repz
mov
not
call
mov
ror
pop
cli
lea
mov
bound
mov
popl
cltd
test
mov
addb
fiadds
iret
insb
adc
jmp
sahf
or
repnz
mov
add
loopne
das
lret
in
or
xchg
mov
add
jbe
xchg
xchg
dec
xor
mov
stos
mov
pop
rep
dec
aaa
push
outsl
repz
sub
or
gs
mov
pop
in
pop
scas
aaa
mov
pop
out
push
ja
fwait
push
rep
movsbl
pop
call
loopne
insl
xor
lret
iret
push
rcll
test
mov
fisubrs
mov
popf
dec
dec
sub
mov
add
ficoms
push
mov
push
imul
push
fucompp
dec
data16
mov
mov
sub
jmp
decl
mov
out
incl
fs
je
pushf
pushf
push
mov
lea
jmp
jno
xchg
xor
lret
addr16
popf
sub
xor
push
test
stos
inc
fmull
testl
xchg
movsl
sub
push
scas
push
and
addr16
adc
dec
add
shl
das
imul
push
cmp
inc
push
mov
sbb
mov
push
mov
popa
notl
inc
aad
addr16
test
inc
nop
call
lret
adc
or
mov
cmpsb
mov
cmp
push
cmc
push
test
push
fnstsw
lods
sub
mov
pop
jns
cmp
dec
add
lret
mov
push
xor
scas
leave
push
cli
adc
xchg
sbb
aas
mov
dec
fistpl
rcr
sub
mov
popf
divb
mov
cmp
mov
mov
xor
add
xor
data16
adc
pushf
lea
jne
not
neg
bsr
js
mov
clc
jmp
pushl
movzwl
sbb
shld
inc
rcr
mov
stc
mov
push
add
stc
mov
stc
stc
cmc
test
call
pusha
mov
pushf
call
pushf
lea
jge
mov
mov
bswap
movzbw
push
mov
mov
pusha
pushf
pushl
ret
rorb
mov
shrl
nop
pop
mov
mov
lock
mov
aas
and
cmpsb
pop
jnp
stc
orl
jno
insb
neg
xchg
stc
fdiv
cmp
ficompl
lods
outsl
movsl
mov
inc
outsb
sbb
add
adc
xor
xchg
dec
lea
sub
and
jge
std
push
push
sbb
cmp
pop
loopne
add
xlat
sbb
mov
xlat
sbb
ror
hlt
adc
in
cld
xchg
push
movsl
sub
push
out
rclb
cwtl
fdivrl
iret
icebp
scas
std
dec
or
inc
fidivl
xchg
rcrb
test
pushf
stc
push
sub
xor
or
je
lcall
in
lret
out
push
dec
fsubl
cltd
mov
xchg
es
xchg
and
mov
in
enter
and
mov
xchg
cmp
orb
in
ss
jge
mov
repz
mov
push
std
mov
sub
fists
es
scas
les
cmpsb
negl
mov
and
idiv
repnz
fdivl
pushf
es
call
lret
ss
mov
add
sub
bt
xor
not
stos
setno
lea
jne
mov
call
add
xor
lret
sub
arpl
sbb
pop
pop
cmp
xlat
inc
testb
mov
fiadds
lea
push
pop
mov
int
push
pop
inc
dec
pop
fs
bound
sbb
or
mull
mov
daa
test
hlt
and
lea
inc
jmp
ja
mov
or
inc
mov
shr
xchg
jbe
adc
in
fucomi
arpl
lahf
das
mov
jmp
icebp
jge
xchg
sbb
notl
jmp
pop
icebp
mov
popf
jmp
fdivr
mov
popa
data16
pop
outsl
pop
pop
lods
rolb
push
fdivrl
dec
imul
sbb
mov
pop
cltd
cld
mov
jno
adcl
sbb
and
daa
jg
sub
jle
pop
mov
bound
repz
or
into
das
ror
adc
mov
fsubr
cmpl
jmp
daa
jg
into
sbb
jle
or
push
movsl
cs
xlat
pusha
fnstsw
mov
icebp
cmp
es
lea
cmc
popa
xor
sbb
in
mov
mov
jo
dec
mov
repz
mov
das
ror
mov
sbb
stc
scas
sbb
and
pusha
xor
sbb
inc
sbb
dec
push
dec
arpl
addl
adc
and
and
sbb
adc
stos
mov
or
fcmove
mov
enter
push
dec
dec
rcl
xor
movsl
inc
loop
mov
or
rorb
push
adc
rclb
add
es
lods
jmp
push
mov
stos
cltd
push
xorl
outsl
jbe
fisttps
push
push
in
hlt
push
into
pop
fneni(8087
xor
test
cmp
sbb
pop
push
and
adc
lock
es
ljmp
mov
ret
lret
and
mov
pushf
pushl
lea
jae
dec
add
bts
mov
add
xadd
shr
btc
mov
xor
neg
rol
mov
pusha
stc
pushf
xor
cmp
cmp
bt
test
repnz
mov
push
jmp
mov
sub
mov
ljmp
int
repz
cmp
pop
shl
push
cmp
enter
inc
mov
jmp
fisubs
in
das
dec
mov
pop
or
and
push
pop
loope
pop
pop
dec
loop
mov
inc
dec
xor
enter
aam
jmp
ret
pop
icebp
jno
mov
mov
push
jbe
jecxz
cmc
dec
addr16
scas
roll
jmp
rcrb
insl
adc
adc
incl
js
mov
repz
sub
cmp
jo
dec
push
mov
and
es
mov
std
or
sub
jp
outsl
push
push
fcmovnb
mov
stos
les
lock
push
pop
fld
jbe
sbb
jmp
repz
xor
pop
jmp
mov
repnz
andw
clc
stc
stc
cmp
pushf
mov
jmp
jmp
call
mov
lret
aas
mov
fwait
xor
inc
fldenv
sbb
negl
add
mov
inc
sbb
jecxz
call
fstpl
pop
or
push
std
adc
icebp
xor
in
arpl
sub
mov
daa
inc
daa
mov
cwtl
bound
mov
out
jno
loop
adc
insl
or
loop
shlb
test
shrb
lret
sub
fs
xchg
and
jae
stos
mov
sbb
scas
js
out
jg
dec
mov
xchg
pop
jecxz
enter
push
push
dec
pop
stos
jbe
cli
icebp
cmp
dec
nop
testl
js
es
xchg
imul
or
xor
or
add
iret
mov
mov
or
push
out
xchg
and
call
mov
fdivrs
and
scas
out
sub
lret
dec
loopne
lock
repz
les
test
scas
xchg
adc
cwtl
mov
jp
movsb
inc
lret
mov
xchg
aaa
fcomps
sub
je
and
push
xchg
jecxz
insb
push
mov
cmp
pop
lock
sbb
pushf
sub
add
xor
out
test
push
cmpsb
fildll
ror
cltd
mov
xchg
movsl
cmp
outsb
pop
mov
inc
mov
out
jne
sub
repnz
bswap
mov
push
mov
add
ds
das
mov
aaa
jecxz
pop
xor
imul
lret
adc
or
movb
jo
subl
dec
ficoms
inc
flds
mov
fldenv
mov
shll
jge
cmpsl
inc
xchg
lahf
repz
test
imul
cmp
pushf
lea
jbe
bsf
mov
bsf
bsf
add
ror
shl
sub
mov
mov
inc
xor
add
mov
ror
movl
lea
mov
bt
push
pusha
cmp
pusha
pushf
movw
pushf
lea
jbe
bswap
sub
jmp
mov
jmp
jb
andb
and
call
stos
mov
pushl
pushf
lea
jmp
xor
xor
nop
pop
mov
xchg
and
pop
or
imul
jae
pop
push
enter
repz
cmpsl
popf
or
ljmp
jb
test
icebp
stc
push
fxch
fldl
iret
push
out
add
in
jno
loope
or
ja
cmp
pop
movsb
mov
mov
push
out
push
xor
and
outsb
xchg
dec
fidivrs
jns
movsb
aas
mov
add
or
pop
jg,pn
or
addr16
push
mov
and
push
sub
daa
inc
mov
les
ret
das
pushf
test
inc
ja
add
jnp
sub
and
cmpsl
repz
or
les
pusha
out
mov
mov
outsl
sbb
cld
xchg
pop
push
cmp
ror
xor
jp
cwtl
push
faddl
pop
lods
add
jg
popa
jbe
arpl
mov
test
cmpsl
dec
rcrl
jo
mov
scas
stc
mov
out
add
pop
cmp
rorb
shl
xchg
sbbl
fwait
jb
fs
movsb
xchg
mov
pop
fisubrs
movsb
sub
pop
ljmp
add
xchg
ficoms
add
mov
add
mov
pop
add
out
out
push
sahf
fiadds
mov
add
fiadds
mov
add
add
ss
xchg
mov
add
sahf
mov
outsb
imulb
add
add
lods
roll
btc
shl
mov
test
call
lcall
sbb
clc
ja
cmpsl
cmp
out
pop
xor
decb
xchg
insb
lds
mov
jge
loope
call
xchg
push
add
jae
sbbl
jg
xchg
sbb
push
pushf
sub
and
and
rcrl
inc
stc
xchg
push
adc
in
add
and
mov
repnz
movsl
xor
push
sub
lret
add
push
out
adc
dec
out
out
imul
test
adc
icebp
fnsave
outsb
test
lods
add
sbb
test
xchg
stc
push
push
inc
pop
mov
cld
mov
mov
scas
inc
fsubs
in
mov
ja
add
lods
cmp
decl
xchg
cli
jmp
stc
or
jmp
pushf
lea
call
pushf
pusha
mov
push
adc
call
mov
ror
push
outsb
or
hlt
mov
and
cmp
pop
addr16
xlat
mov
jl
out
idivb
xchg
and
pop
ljmp
repz
addr16
mov
push
jno
sbb
lret
mov
outsb
xchg
psadbw
dec
js
xchg
and
subl
out
add
sahf
dec
popf
neg
mov
sub
xchg
je
js
test
push
imul
inc
outsb
cwtl
mov
out
inc
pop
add
aam
and
int
enter
or
int
call
pop
fnstenv
incl
lock
push
xor
nop
sub
es
push
enter
mov
outsb
add
repnz
inc
fwait
jg
adc
out
fs
ja
clc
clc
push
imul
pusha
pusha
call
cltd
in
es
loopne
test
mov
push
loopne
sbb
inc
js
or
dec
imul
sub
divl
cwtl
push
mov
in
or
adc
pop
and
dec
or
dec
imul
sub
in
and
ss
out
stos
push
jg
and
jns
or
inc
cmp
repz
mov
movsb
sub
jle
test
daa
insl
sub
and
pusha
stc
test
pushf
neg
push
jmp
not
pusha
mov
pusha
movw
jmp
call
adc
not
mov
btc
add
ror
shr
shld
btr
mov
lea
movsbl
add
pusha
lea
push
not
mov
jmp
xor
and
aaa
xor
lret
sete
ret
pop
data16
adc
xor
or
and
mov
sbb
cld
sbb
cs
jno
dec
mov
dec
in
add
sub
xor
pop
mov
adc
aad
repz
adc
fcomip
dec
sub
lret
arpl
jmp
lcall
or
out
decl
mov
add
decl
lret
clc
cltd
sbb
push
sbbb
fdiv
sahf
out
int
cmc
add
xchg
insb
shr
subl
xor
push
fwait
or
xchg
and
jge
jl
test
dec
in
or
test
sbb
mov
daa
xor
pop
jecxz
add
push
jmp
and
push
sub
jmp
add
pop
pop
jbe
popa
push
popa
jb
outsl
jo
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
frstor
mov
clc
jmp
call
pushf
lea
jb
stc
cmc
cmp
call
sub
pushf
lea
call
jmp
push
pushl
movw
lea
je
pushf
pusha
lea
jmp
pushf
test
add
jmp
add
cs
lret
sahf
xor
xor
push
mov
leave
aam
inc
mov
mov
addb
rol
aad
adc
mov
jmp
or
sub
sar
sar
pushf
sbb
xor
lea
setg
pop
lea
mov
mov
pop
push
call
jmp
cmp
jmp
test
and
lret
in
jno
xchg
and
mov
gs
dec
push
mov
lret
in
test
sbb
test
and
fnstenv
xchg
test
xchg
cld
jno
cmpsb
push
mov
test
add
push
shl
mov
push
mov
scas
loope
adc
loopne
out
mov
sbb
daa
and
test
mov
repnz
pop
dec
popa
repz
rorl
push
imul
test
mov
jmp
idivl
cmpsl
inc
rcrl
movsb
push
jae
or
cs
lret
mov
mov
jmp
mov
adc
scas
jbe
or
mov
arpl
xchg
xor
lock
xchg
sub
call
loope
mov
lahf
test
or
sub
cmp
cld
nop
adc
andl
mov
pushf
pushl
lea
jmp
lea
jae
jl
cmc
cmp
jmp
orb
ror
and
xor
or
or
ds
xor
decb
out
sti
arpl
into
xor
cmpsl
or
call
mov
adc
sti
outsl
cmpsl
leave
inc
imul
sub
dec
lret
jle
lcall
xlat
in
adc
inc
and
movsb
inc
call
test
add
pushl
mov
movl
test
jmp
lea
ja
push
clc
push
imul
pushf
stc
add
pushl
pushl
pusha
lea
jmp
pushf
not
call
push
mov
pushf
jmp
mov
movw
pushf
pushf
pushf
lea
jmp
push
call
movb
mov
pusha
jmp
xchg
pushl
bswap
movzbl
mov
push
pushf
jmp
pushf
popl
pushf
push
pushl
popl
pushf
push
lea
jmp
jmp
rcr
shl
mov
clc
add
cmc
jmp
inc
bts
sub
dec
mov
cmp
add
call
lea
jg
cmp
not
cmp
sub
clc
cwtl
pushf
stc
sub
cmc
push
bt
add
pushf
mov
pusha
pushf
lea
jmp
bt
test
add
jmp
mov
pushf
movsbw
mov
push
jmp
shrd
aam
mov
rdtsc
push
mov
jmp
call
btc
adc
mov
push
push
cmp
xor
pusha
pushl
pushf
mov
lea
jmp
pop
bswap
movsbw
not
not
dec
movsbw
dec
inc
btr
xor
rol
xor
xor
jmp
pushf
pusha
shl
pusha
jmp
inc
inc
push
inc
bts
jmp
movb
mov
pushl
mov
pushf
call
sub
and
mov
bsf
mov
jmp
pushf
clc
xor
movb
lea
jmp
push
push
pushf
xchg
mov
pusha
repz
popl
rcr
cmc
jmp
jmp
sub
mov
mov
pushf
lea
jmp
push
push
mov
jmp
jmp
sub
jmp
pushf
pushl
popl
pushf
movl
mov
lea
jmp
ror
bts
pusha
ror
rol
inc
movsbw
bswap
inc
clc
call
pushf
mov
mov
call
call
mov
pushf
mov
mov
pushl
call
pushf
movb
push
mov
pushf
push
lea
jmp
mov
cmp
add
jmp
cmc
stc
pushf
add
mov
mov
mov
push
lea
pushf
movb
lea
jmp
pushl
popl
mov
mov
push
pushl
lea
jmp
inc
rcl
movsbl
xor
pushf
inc
pop
bswap
inc
pusha
movb
shr
add
btc
movzbw
bswap
movzbl
movw
xor
movsbw
mov
test
cmp
xor
pushf
jmp
mov
jmp
repz
popl
clc
pushf
bsr
mov
pop
shld
sub
btc
mov
rcl
dec
btc
mov
lea
sub
add
pushl
popl
cmc
movl
adc
sbb
jmp
jmp
jmp
mov
call
pusha
jmp
jl
pushf
pushf
mov
pushl
movl
pushf
call
cld
call
sub
cmp
cmc
bt
and
movb
call
jmp
sub
cmp
pusha
mov
xchg
test
test
pushf
jmp
bts
mov
cmc
and
cmp
bt
cmp
push
pushl
lea
jne
push
lea
movzbw
dec
xorb
not
push
mov
push
pusha
lea
jmp
xor
shld
mov
bt
sub
jmp
pusha
push
mov
mov
pushl
ret
pushf
mov
pushf
pushl
lea
jmp
mov
pushf
lea
jmp
mov
pusha
movw
lea
jmp
add
call
jo
pushf
mov
call
sub
jmp
pusha
jmp
jmp
pushl
popl
mov
pushf
mov
movb
lea
jmp
cmc
stc
pushf
sub
pushf
bt
jmp
cwtl
test
bt
pushf
movb
sub
cmp
add
push
pushf
pushl
mov
pushl
movw
pushf
pushf
lea
jmp
mov
mov
mov
lea
jmp
jmp
bsr
ror
mov
cmp
mov
pushf
push
jmp
pushl
popl
pushf
lea
jmp
pushf
jmp
call
pushf
pusha
push
jmp
push
mov
mov
pushf
pushf
xchg
call
pushf
jmp
bt
push
call
push
mov
push
pushf
popl
pushl
movb
call
add
pushl
pushl
push
lea
jmp
cmc
jmp
call
pushf
pushf
mov
jmp
mov
pushl
popf
pushf
mov
mov
lea
jmp
jmp
call
mov
mov
push
movb
mov
pushf
movw
movb
mov
mov
lea
je
push
jmp
rep
xchg
stc
mov
shrd
sbb
clc
mov
pushf
call
call
push
movb
lea
jne
clc
call
adc
movsbw
mov
adc
dec
push
rol
mov
clc
pusha
sub
mov
bt
pusha
shl
call
pushf
popl
jmp
mov
clc
xor
clc
jmp
jmp
add
pushl
call
mov
pusha
pushf
mov
push
jmp
pusha
push
pushf
popl
pushf
call
jmp
mov
jmp
movl
call
pushf
mov
pusha
push
movb
lea
jmp
call
call
movzbw
mov
shrd
mov
dec
xor
shld
sar
pushl
popl
pop
movl
rol
stc
bsf
xor
mov
jmp
add
jmp
lahf
jo
push
pushf
pushf
movzbw
mov
mov
lea
cpuid
test
cmc
test
pushf
sub
cmc
push
stc
cmpl
pushf
jmp
sub
call
call
rol
mov
bt
mov
stc
jmp
mov
jns
sbb
mov
bsf
add
movsbw
pusha
mov
neg
shl
clc
shld
add
lea
jp
inc
dec
not
movsbw
inc
shl
xor
inc
jmp
bt
not
push
pushl
pushf
and
call
mov
call
pushf
call
shr
add
mov
stc
pushf
movb
xor
call
sub
pushf
movw
movb
mov
call
call
js
pushf
pusha
pushf
mov
pusha
pushl
push
jmp
lock
lods
js
adc
pushf
add
js
stc
lret
jae
js
imul
js
and
js
fistpll
popa
fidivrs
lods
js
sub
js
lcall
pushf
jo
js
daa
ret
js
mov
xlat
js
push
xlat
js
shrl
js
and
js
mov
js
mov
sarl
and
js
imul
js
mov
js
fisubrl
js
leave
fdivrs
mov
pushf
add
js
fisubrl
js
push
js
mov
js
addr16
push
js
jae
js
fisubrl
js
xchg
ret
mov
js
jae
js
and
js
leave
fdivrs
push
js
push
stos
js
jp
js
or
ret
xchg
ret
popa
fidivrs
jp
js
cltd
into
js
jp
js
fisubrl
js
jp
js
in
fidivrl
jg
js
push
js
push
sarl
imul
js
and
fstpt
cwtl
int
pushf
jo
js
xchg
ret
mov
js
jae
js
iret
js
pop
fidivrs
or
fidivrs
aad
js
push
sarl
mov
js
and
js
aad
js
fadd
js
lcall
pushf
mov
js
fadd
js
and
js
push
sarl
push
les
jne
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
xchg
test
js
mov
js
cwtl
int
pushf
push
lret
js
addr16
lcall
pushf
and
js
add
js
stc
lret
imul
js
push
cmpsl
js
and
fidivrs
push
js
in
fidivrl
push
stos
js
push
js
mov
pushf
mov
pushf
mov
js
jg
js
daa
ret
js
mov
js
push
fdivrs
xchg
ret
popf
sarl
int
pushf
lcall
pushf
push
xlat
js
mov
pushf
shrl
js
leave
fdivrs
and
test
pushf
push
fdivrs
cltd
into
js
and
js
jg
js
and
js
mov
sarl
js
stc
lret
and
js
jae
js
push
fdivrs
mov
sarl
fdivrs
iret
js
jg
js
push
js
adc
js
push
xlat
js
and
js
cwtl
int
pushf
push
stos
js
push
fdivrs
stc
lret
fisubrl
js
jae
js
fistpll
or
js
shrl
js
stc
lret
push
xlat
js
or
ret
iret
js
push
xlat
js
adc
pushf
or
fidivrs
fisubrl
js
aad
js
cltd
into
js
push
sarl
push
sarl
xchg
ret
jo
js
cwtl
lds
push
js
aad
js
jo
js
and
js
leave
fdivrs
cltd
into
js
or
fistpll
cwtl
lds
addr16
push
xlat
js
cwtl
lds
aad
js
cwtl
lds
sub
js
stc
fistpll
leave
fdivrs
cwtl
int
pushf
jg
js
sub
js
lock
mov
js
or
fistpll
fisubrl
js
addr16
adc
pushf
jo
js
adc
js
adc
js
and
js
or
fstpt
lods
js
imul
jmp
mov
push
push
call
mov
pushl
push
call
mov
clc
rcl
pushl
popl
xadd
shl
dec
or
movl
bswap
stc
xor
xchg
mov
rcr
xor
not
stc
dec
not
add
and
clc
shl
neg
call
xor
ror
pusha
rcr
mov
jmp
push
pushf
pusha
push
mov
pushl
push
mov
mov
movb
pushl
call
repz
popl
pushl
movsbl
test
rcl
mov
cmc
rcl
bsr
mov
sar
neg
pop
mov
btr
pushl
popl
pushf
sbb
clc
movl
xor
bsr
sub
movw
mov
pushf
bt
bt
xor
pushl
push
push
push
lea
jmp
repz
popl
bt
ror
shl
rcr
mov
sbb
mov
pushf
movzbl
shl
mov
mov
pushl
popl
rcl
bsf
movzbw
movl
inc
mov
movb
cmp
pushf
xor
pushl
pushf
mov
lea
jmp
pusha
mov
jmp
pushf
mov
lea
jae
mov
call
push
mov
pusha
jmp
jmp
jmp
pushf
push
mov
pushf
movl
movb
pushf
pushl
ret
cmc
bsr
notl
sub
dec
and
shld
mov
test
cmc
clc
sub
bt
call
call
mov
pusha
stc
xor
call
pushf
pusha
pusha
mov
movb
push
movw
call
call
neg
mov
stc
jmp
movw
lea
pushf
pushf
lea
jmp
shl
movl
or
mov
bt
jmp
pushf
pusha
not
test
cmc
cmp
sub
jmp
add
push
pushf
mov
pushf
pushf
lea
jmp
mov
pushl
jmp
movsbw
rcr
rol
push
ror
movsbw
inc
call
movb
mov
pushl
call
pushl
lea
cpuid
jmp
push
pushl
popl
pusha
pushf
pushf
pushl
lea
jmp
pusha
call
not
pop
bswap
and
shr
mov
cmc
pusha
movb
bt
sub
pushl
mov
pusha
lea
jmp
mov
pushf
movsbw
not
not
repz
popl
call
call
pusha
call
pushf
mov
mov
push
push
pushf
popl
call
pusha
pushf
jmp
call
mov
mov
movb
jmp
add
add
movb
mov
pushl
popl
movb
movb
lea
jmp
dec
mov
test
clc
push
jmp
mov
pusha
jmp
pushf
movw
lea
jge
push
push
pusha
call
push
mov
lea
jne
cmp
bt
shr
mov
pusha
and
pushl
stc
cmp
jmp
xor
aad
shld
mov
cmp
jmp
mov
pushl
movw
lea
jmp
call
add
pushf
mov
mov
push
pusha
pushf
pushf
pushl
ret
bswap
not
repz
popl
lea
mov
push
shld
sub
jmp
mov
jmp
pushf
popl
jmp
sub
pusha
push
shr
pusha
call
test
stc
pushl
pusha
stc
stc
add
jmp
shr
sub
shld
rol
inc
jmp
or
cmp
mov
neg
push
mov
bt
test
add
pusha
pusha
mov
mov
mov
lea
jmp
push
inc
or
pushf
shrd
add
pushf
sbb
adc
movzbl
pop
rcr
rcr
call
pusha
movsbw
pushf
call
pushl
mov
pushl
mov
mov
lea
jmp
push
stc
ror
cmc
not
stc
jmp
call
movsbw
pushf
seta
mov
movb
pushf
pushf
lea
jmp
call
pushf
mov
movw
mov
mov
movw
mov
movzbl
repz
popl
pusha
test
shld
shld
mov
stc
bts
mov
bt
shrd
cmc
shl
mov
stc
rcr
pushl
popl
shrd
bt
movl
push
mov
jmp
jmp
call
xchg
pushf
pushf
pushf
repz
popl
bswap
mov
shld
mov
pushf
bsf
dec
clc
mov
ror
ror
shl
btc
pushl
popl
pop
mov
bsr
xor
movl
clc
and
mov
pusha
stc
xor
mov
movb
pushl
lea
jmp
or
setbe
bts
mov
test
sbb
shl
add
pusha
sub
add
shrd
and
mov
pushf
pushl
shl
pushf
shr
test
or
jmp
bsr
mov
mov
ror
xchg
sbb
mov
rcl
rcr
setno
sbb
mov
bt
test
pusha
clc
add
pushf
pushf
movb
shrd
lea
jne
push
mov
jmp
movb
pushf
mov
pusha
mov
push
lea
jmp
cmc
cmp
xchg
movzbl
btr
call
push
pusha
mov
call
mov
jmp
pushf
push
pusha
mov
movb
mov
call
movb
mov
pushl
lea
jmp
mov
mov
pushf
lea
jmp
xor
movw
push
inc
mov
push
pushl
decl
pushl
movb
pushl
push
lea
jne
call
mov
jmp
push
pusha
mov
lea
ja
push
pusha
pushf
mov
pusha
jmp
jmp
xor
setns
movzbl
cmp
xor
stc
xor
push
sub
push
pushl
pusha
not
cmp
stc
test
xor
push
pushf
cmp
call
not
shrd
bts
jmp
pushf
mov
pushf
push
movb
call
pushl
xor
bt
bt
pushf
push
sub
stc
push
clc
not
mov
test
bt
test
xor
mov
push
sub
pushf
cmc
cbtw
stc
clc
call
push
push
pushl
popl
mov
movb
mov
mov
lea
jmp
mov
movb
push
mov
pushf
pushl
lea
jmp
cmp
aas
rcl
not
movzww
test
sub
pushf
call
lea
je
jmp
or
bsf
aas
pusha
mov
sbb
mov
jmp
mov
pushf
call
sub
cmp
cmp
cbtw
stc
pushf
cwtl
cmp
stc
movb
sub
pushf
jmp
cwtl
movw
cmc
sub
jmp
pusha
pushl
popl
mov
lea
jmp
pusha
pusha
pushf
mov
jmp
lea
jne
clc
movsbw
bsr
xorb
lea
pop
pushf
lea
jmp
pushf
mov
pushf
mov
mov
jmp
call
stc
pushl
popf
push
pushf
pushf
lea
jmp
pushf
mov
jmp
call
call
cmp
or
mov
sar
shr
mov
rcl
mov
call
repz
popl
movsbw
ror
inc
mov
not
pusha
mov
sbb
test
pop
mov
test
rol
jmp
mov
pushf
lea
jmp
push
pushf
pusha
lea
jne
rol
shl
xorb
jmp
mov
pusha
pushl
push
jmp
mov
pushf
pushf
mov
push
repz
popl
sar
pop
shrd
pop
mov
call
test
jmp
jmp
lea
lea
jnp
pushf
pushf
pusha
mov
mov
lea
jmp
call
jmp
mov
push
mov
mov
mov
movb
push
lea
jmp
mov
lea
movsbw
xchg
repz
stc
bts
push
and
push
rol
shr
push
bt
bsr
pushl
sbb
rcr
btr
shrd
push
bsr
btc
sbb
mov
bswap
xor
not
not
rcr
clc
xchg
sub
neg
add
stc
neg
mov
bswap
shl
inc
call
push
pusha
call
jmp
movb
mov
mov
pushf
popl
movb
pushl
popl
movw
lea
jmp
add
clc
shld
movzbl
sar
setno
jmp
pushf
popl
call
mov
pushf
push
movw
mov
pushl
ret
pusha
movzbw
inc
rcr
sbb
rcl
adc
add
add
cmp
add
shrd
movzbl
or
bt
jmp
jmp
lea
js
pusha
mov
jmp
mov
pushl
pushf
push
movb
pushl
ret
jmp
pushf
xchg
pusha
pusha
push
jmp
pushf
popl
mov
call
stc
not
stc
test
stc
not
jmp
mov
call
mov
pushl
jmp
pusha
movw
mov
mov
pusha
jmp
call
push
call
mov
pushf
mov
pushf
call
cmp
test
cmp
sub
call
push
movw
clc
shld
pusha
pushl
call
mov
jmp
jmp
call
pusha
clc
or
mov
cmc
xor
cmc
sub
ja
stc
xor
bt
sub
test
cmc
pusha
not
push
jmp
mov
movl
xchg
call
clc
pusha
mov
sbb
mov
test
bt
jmp
mov
pusha
pushf
popl
call
jmp
mov
movw
pushf
call
clc
sub
jmp
pushf
mov
pushf
pusha
lea
jmp
xor
pusha
movb
pushf
mov
lea
jmp
mov
mov
jmp
lea
jbe
popl
push
pusha
lea
jmp
pushl
popl
mov
mov
push
lea
jmp
jmp
push
jmp
shl
mov
neg
pushl
popl
push
bt
or
movl
pop
bsr
mov
pushf
xor
pushf
push
pushf
mov
lea
jmp
sub
jmp
not
movzbl
repz
popl
not
mov
rcl
xchg
cmp
call
dec
movzbl
cmc
sub
pushf
movb
inc
pushf
inc
pushf
cmc
bt
movb
ror
call
call
jmp
mov
shl
mov
rcr
mov
rcl
pushl
popl
sbb
test
movzbw
movl
not
add
call
movsbw
add
shl
movzbl
or
neg
not
xor
pusha
setp
rol
movzbw
setns
movzbw
movsbw
dec
shl
call
pusha
pusha
call
mov
mov
mov
pushf
lea
jmp
xor
movw
movb
pushf
lea
jmp
pushf
jmp
pusha
mov
push
pusha
call
lea
jmp
stc
mov
mov
stc
pushf
xor
bt
add
jmp
shl
dec
mov
stc
bt
pushf
sub
push
jmp
call
mov
pushf
pushl
mov
pushl
lea
jmp
shl
shl
mov
movzbw
inc
adc
mov
call
call
pushl
popl
pushl
pusha
lea
jmp
mov
push
mov
jmp
pusha
pushf
popl
movb
pushl
popl
movb
push
lea
jmp
sub
jmp
pusha
add
pushf
mov
lea
jmp
mov
cmp
pushl
popl
clc
movl
shld
stc
mov
cmp
xor
pushf
push
lea
jmp
pusha
mov
movl
movb
pushf
lea
jmp
shr
pushf
mov
stc
bswap
shl
mov
pop
lea
bsr
pushl
popl
movzbw
sbb
sbb
movl
movsbw
mov
jmp
pusha
pushf
pushf
popl
call
pushl
mov
pushf
movw
call
push
call
cmpl
movl
pushf
push
pusha
mov
pushf
mov
pushf
jmp
pushl
mov
pushf
pushf
mov
not
lea
not
repz
popl
btc
and
cmc
mov
and
rcl
sbb
rol
mov
stc
mov
xor
cmp
test
btr
pushl
popl
lea
dec
ror
movl
and
mov
stc
pushf
cmc
push
xor
movw
pushf
mov
lea
jmp
mov
shl
sar
mov
sub
shr
adc
pushl
popl
btr
bts
sar
movl
pusha
clc
mov
call
pushf
mov
pushf
lea
jae
push
push
xchg
pusha
repz
popl
inc
pop
mov
lea
pushf
mov
shr
jmp
movb
mov
call
movb
jmp
setae
pusha
shl
mov
stc
sub
movw
add
jmp
mov
pushf
call
rcl
xor
sbb
rol
xor
shl
rol
sub
stc
not
shl
xor
movzbw
movzbl
pusha
pushf
pushf
mov
inc
clc
cmp
cmp
mov
cmp
or
call
pushf
call
pushf
movb
mov
pushl
pushf
movb
pushl
ret
mov
movb
call
call
mov
call
mov
pushf
repz
popl
shl
bswap
mov
bswap
mov
shl
clc
mov
xor
pushl
popl
cmp
movl
sar
shrd
movzbw
test
mov
stc
jmp
mov
call
xchg
call
add
pushf
pushf
push
mov
jmp
pushf
lea
jne
sub
mov
push
bt
test
and
pusha
test
cmp
pusha
lea
jne
bswap
not
neg
bsr
xorb
lea
lea
pop
pusha
pushl
pusha
lea
jmp
mov
sar
cmc
jmp
jmp
mov
movw
movb
lea
jmp
mov
mov
jmp
mov
mov
lea
jns
pushf
push
pusha
mov
movb
pushl
push
pushf
mov
call
or
aas
inc
mov
clc
pushf
clc
cmp
add
pusha
call
mov
mov
mov
push
lea
jmp
pushf
pushf
jmp
call
movsbl
bsf
test
cmp
lea
cmc
push
cmp
movb
jmp
pushf
popl
not
not
pushf
not
mov
pushl
movsbw
cld
mov
pushf
cld
mov
pop
lea
call
lea
ja
test
mov
bts
lea
cmc
bsr
xor
or
sub
shld
or
dec
lea
bswap
and
or
clc
pusha
sub
movsbw
pushf
push
not
mov
lea
pusha
call
and
mov
not
rol
bts
shld
mov
test
jmp
pushf
push
mov
call
cmc
pusha
shr
push
mov
pushf
jmp
xor
pushf
pushf
pusha
pushf
lea
jmp
call
call
rol
movzbw
dec
push
inc
or
lea
and
jmp
pushl
popl
pushf
movb
mov
lea
jmp
pushl
call
sete
mov
lea
jnp
pusha
mov
call
not
movzbw
inc
movsbw
lea
jnp
not
rcr
ror
dec
pusha
jmp
lea
not
bswap
inc
btc
or
btr
xor
jmp
pusha
call
and
cmp
push
mov
shr
movsbw
add
movzbl
add
xchg
mov
bsf
movsbw
mov
cmp
sar
add
call
mov
mov
pusha
jmp
pushf
popl
movb
pushl
popl
movb
lea
jmp
clc
mov
push
or
aam
daa
mov
std
mov
pushl
pop
rcl
bt
mov
cmp
movsbl
mov
cltd
cwtl
cwtl
mov
rcl
pushl
popf
rdtsc
pop
mov
cwtl
rdtsc
bswap
mov
not
pop
mov
mov
pushf
mov
movsbw
pop
not
mov
pushf
push
pushf
pushl
ret
pushf
mov
movw
lea
jmp
jmp
pushf
mov
mov
movb
pushf
pushl
ret
stc
add
push
pushf
popl
jmp
call
pushf
cmp
xor
mov
lea
jmp
xadd
xchg
bswap
dec
mov
inc
shl
sar
add
mov
push
cmp
pushf
bt
sub
jmp
mov
mov
pushl
pushf
pushf
lea
jmp
call
mov
pushf
jmp
pushf
call
call
pushf
pushl
push
lea
jne
jmp
mov
push
pushf
pusha
mov
mov
mov
lea
jmp
pushl
popl
clc
shl
rcr
dec
movl
dec
bsr
sub
or
mov
test
clc
add
jbe
test
xor
pushf
pusha
lea
jmp
shr
jmp
xor
cmc
btc
mov
stc
pusha
jmp
mov
mov
pushf
pushf
xchg
lea
jmp
pushf
dec
not
movsbl
bswap
call
call
mov
call
pushf
lea
bsf
bsf
sub
shld
bt
btr
mov
bts
mov
xor
shl
add
bsf
rcl
not
mov
mov
not
lea
btc
add
lea
jp
not
pushf
bswap
pop
pusha
inc
stc
setle
shl
xor
bswap
mov
pop
inc
and
lea
add
dec
bsf
movzbl
jmp
call
jmp
mov
cmc
add
jle
clc
cmc
sub
jmp
not
test
bt
jmp
jmp
cld
movb
jmp
push
add
pushf
inc
cmc
pushf
mov
cmc
add
push
clc
pushf
jmp
jmp
pusha
bt
sub
stc
bt
call
rcl
movsbw
mov
shl
sar
shr
mov
pushf
cmp
cmp
sub
clc
shl
push
pusha
mov
pushf
pushf
popl
call
movsbl
xor
not
rol
mov
shl
adc
rcr
movzbw
mov
call
and
pusha
call
cmc
clc
add
jmp
pushf
mov
pushf
jmp
pushf
xor
pushl
mov
push
pushf
lea
jmp
jmp
pushl
mov
pushl
repz
popl
or
add
mov
shld
pop
mov
pop
shl
bt
xor
mov
btc
dec
pushl
popl
call
pusha
pushf
pushl
pushl
popl
movb
mov
lea
jmp
bswap
call
call
pushf
pushf
xchg
lea
repz
popl
bts
push
not
push
mov
cmc
and
push
shr
mov
pushl
shl
movsbl
push
jmp
pusha
test
xor
jmp
clc
add
pushf
jmp
call
pusha
mov
jmp
push
pushf
add
pushf
jmp
mov
call
call
pushl
call
mov
repz
bt
push
bswap
movzbw
push
add
push
and
sub
pushl
pusha
pushf
movl
bts
rcr
bts
btr
mov
push
bt
cmc
xor
mov
pushf
lea
jmp
call
sub
add
je
test
pushf
shl
mov
pushf
mov
pushf
pushf
pushf
popl
mov
jmp
pusha
and
mov
stc
neg
mov
jmp
push
mov
pushf
movb
mov
push
pushf
lea
pop
repz
popl
pop
shr
mov
jmp
mov
pushf
lea
jne
jmp
mov
push
bt
pushf
xor
pushf
pushf
pushf
lea
jmp
ror
push
stc
pushf
not
test
sub
cmc
call
not
test
mov
jmp
neg
bswap
not
btc
cmp
jmp
movzbw
pushf
call
call
stc
xor
push
push
pushl
push
lea
jmp
mov
cmc
mov
cmp
pushf
add
call
movzbw
inc
or
btr
bswap
shr
sub
call
mov
mov
stc
push
pusha
add
call
mov
cmc
mov
shr
mov
jmp
rol
pushf
pushl
movb
mov
dec
push
push
not
pushl
xor
bt
stc
movb
mov
pusha
test
jmp
bt
sub
pushf
sub
mov
mov
mov
push
lea
jmp
xchg
pushl
pusha
movl
pusha
pushf
mov
jmp
mov
pushf
mov
pushf
pushl
ret
mov
mov
lea
not
lea
call
mov
jmp
pushl
call
test
sub
mov
ror
not
clc
shl
add
mov
mov
call
mov
mov
lea
lea
repz
popl
shld
test
cmp
mov
neg
mov
bsf
bsr
sub
mov
pushf
pushl
popl
inc
stc
inc
not
movl
mov
mov
pusha
test
pushf
pushf
xor
movb
movl
pushf
pushl
lea
jmp
mov
movb
movb
lea
jmp
sar
sub
movzbl
stc
test
cmc
xor
jmp
dec
mov
cmc
rol
mov
call
call
jmp
mov
pushf
lea
movsbw
call
pusha
pushl
mov
call
call
pusha
jmp
sub
lea
jo
push
push
xchg
pushf
movl
pushf
jmp
mov
pushf
mov
pushf
mov
pushf
pushf
movw
mov
pushf
call
divl
jmp
mov
jmp
pusha
call
push
pushf
pushf
mov
pushl
pushf
movw
pusha
mov
movl
call
push
lea
mov
lea
jl
push
pushf
mov
push
pusha
lea
jmp
pushl
movb
mov
pushf
jmp
mov
push
lea
jmp
rol
mov
bts
call
pusha
mov
pusha
pushf
jmp
mov
movsbw
pushl
movsbl
movzbl
mov
mov
xchg
xchg
jmp
mov
bswap
bswap
not
pushf
xchg
pop
xchg
lea
mov
jmp
bsf
xchg
mov
add
test
not
or
mov
stc
jmp
lea
jg
pusha
pushf
pushl
popl
pushf
movb
lea
jmp
pushf
popl
mov
push
call
mov
pushl
popl
pusha
lea
jmp
push
push
mov
pusha
mov
lea
jmp
pushl
popl
push
pushf
push
lea
jmp
dec
sub
cmc
dec
mov
stc
sub
pusha
stc
pusha
sub
bt
movl
push
clc
ror
call
call
push
lea
jne
lea
rcl
mov
bt
push
and
stc
bt
cmp
test
cmp
lea
jne
jne
lea
btc
stc
lea
xorb
movzbl
pop
pushf
lea
jmp
shrd
shl
pusha
dec
mov
dec
add
call
pushf
popl
call
stc
pushf
bt
add
call
add
stc
sub
lea
jbe
mov
push
lea
jmp
bt
xor
pushf
pushf
push
pushf
lea
jmp
mov
mov
pushf
movw
jmp
mov
mov
pusha
mov
pushl
lea
jmp
push
movzbl
movzbw
call
call
cmc
add
call
repz
popl
bsf
stc
dec
bswap
mov
shld
rcr
sar
rol
mov
dec
mov
bsf
ror
and
pushl
popl
xor
pushf
rcr
movl
stc
ror
mov
test
clc
movb
xor
pushf
movb
lea
jmp
push
mov
mov
jmp
jmp
movzbw
mov
movzbw
mov
jmp
mov
xchg
push
push
xchg
movsbw
jmp
jmp
pushf
push
inc
stc
stc
cmc
sub
pushl
clc
call
