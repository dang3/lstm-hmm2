mov
ljmp
jge
xor
and
sub
mov
daa
std
jl
fs
test
loopne
dec
mov
adc
testl
inc
lahf
xor
movsl
and
rclb
jmp
mov
testb
ss
addr16
daa
push
sub
xorb
jae
call
cli
out
cwtl
mov
fimuls
repz
jle
dec
ljmp
and
mov
insb
or
stos
mov
jmp
ljmp
adc
mov
mov
lcall
inc
fisttpl
inc
xchg
sub
xchg
and
adc
lret
iret
out
cmpsl
lahf
inc
aaa
clc
pop
in
inc
inc
cmp
add
jo
icebp
inc
test
bound
call
call
mov
jmp
popf
mov
push
addr16
xor
notl
adc
fstpt
sbb
insl
enter
int
shll
push
test
add
pop
xchg
daa
mov
sti
xor
arpl
inc
fstpt
leave
addr16
nop
sbbl
adc
mov
xorl
repnz
es
bound
std
imul
sub
sar
cmpsl
adc
pushf
scas
dec
pandn
adc
xorb
sbb
sub
cmpsl
pop
int
sub
mov
popf
sub
cld
push
cmpsl
std
pop
scas
mov
arpl
add
push
mov
mov
pusha
push
xor
pop
cmp
mov
inc
mov
pop
push
loope
ja
sbb
xchg
mov
pop
fldl
xchg
popf
sub
scas
ds
enter
mov
fisttps
leave
pop
jecxz
popf
xchg
or
mov
jmp
xchg
loope
cmc
push
movl
lahf
cmp
mov
xlat
fisttpl
cmp
mov
xchg
adc
or
xchg
sbb
mov
scas
xchg
sub
adc
or
adc
mov
shll
clc
lahf
cmp
mov
cmp
mov
lahf
add
sarb
rolb
mov
jle
sub
xchg
stos
je
jecxz
cld
cli
cmp
out
dec
xor
inc
and
cmp
filds
daa
stos
pop
or
enter
aaa
gs
or
lock
js
fcomi
imul
inc
cmp
xor
ret
push
in
mov
pop
push
mov
mov
pop
cmc
mov
loope
mov
btr
pop
or
iret
sbb
fisubrs
int
cmpsl
lret
cmpsl
mov
ljmp
es
sub
bound
xlat
movsl
lret
adc
lahf
jmp
xor
pop
and
lahf
int
mov
xchg
dec
cmpsl
out
jnp
pop
add
cmp
mov
test
int
lret
adc
je
ljmp
rcl
jae
cmpsl
xchg
jmp
mov
cmp
iret
xchg
ss
mov
nop
mov
fldz
mov
in
out
sub
ret
cmp
or
mov
xor
fisubrl
out
and
sbb
push
xchg
cli
push
jns
cmp
ret
push
fistps
mov
dec
das
xlat
ja
mov
flds
cmp
adc
sub
jp
aaa
mov
adc
add
out
fadds
lret
mov
and
fnstcw
scas
sarl
pop
push
sbb
adc
xchg
adc
frstor
mov
test
out
jle
adc
xchg
out
xchg
xlat
gs
insb
arpl
cmc
mov
daa
or
mov
jmp
xor
xlat
mov
cmc
cmpsb
pop
or
fisubrl
pop
sbb
icebp
push
insl
clc
std
jae
das
mov
mov
cli
push
mov
sub
jb
pop
scas
sbb
scas
lock
mov
fiadds
stos
sub
mov
push
in
daa
data16
shll
inc
pop
push
lods
loopew
mov
dec
ja
mov
fistpll
pop
lds
mov
jno
insl
xchg
cmp
cmp
or
ja
jns
inc
sti
mov
test
ljmp
cs
adc
adc
mov
iret
ja
lret
stos
dec
xchg
iret
popa
fldt
sbb
call
pop
inc
adc
fsubl
cltd
mov
sysexit
arpl
insb
inc
fistpl
add
aas
pusha
gs
aas
lret
fiaddl
test
inc
inc
or
or
cmp
push
jg
ja
adc
cmp
adc
mov
mov
ljmp
jae
dec
xor
out
xchg
out
mov
jmp
cli
stos
shll
xchg
insb
lahf
cwtl
cmp
imul
mov
and
or
mov
repz
loopne
ret
add
lcall
or
inc
insl
pop
roll
bound
pop
sti
daa
jae
clc
cs
mov
adc
fsts
dec
ret
bound
shlb
push
fstpt
mov
pusha
idiv
dec
iret
xor
and
test
out
mov
jecxz
stos
mov
sbb
mov
hlt
xchg
pop
sub
xor
insb
je
mov
sbb
cmp
pop
dec
mov
inc
sbb
xor
xchg
jns
popf
jno
mov
cmpsl
mov
fwait
pusha
mov
pusha
mov
mov
sahf
cmpsl
leave
dec
and
xor
test
mov
mov
jmp
adc
mov
pop
lods
pop
add
lahf
inc
cmp
roll
jmp
aaa
pop
mov
xchg
dec
mov
sahf
scas
out
rclb
fsubrs
cmpsl
fstpl
pop
cmpl
push
loope
mov
ja
mov
cmp
mov
repz
sub
jnp
addr16
idivb
sub
aas
xor
inc
clc
outsl
insb
push
inc
push
sahf
mov
rcll
and
push
pop
mov
adc
pop
pop
adc
push
adc
jecxz
fs
push
or
and
push
cmp
arpl
fidivs
jg
lahf
lret
pop
add
roll
mov
mov
mov
ret
int
sub
sbb
rclb
fldt
xor
cmp
or
lods
mov
xchg
hlt
scas
jnp
mov
dec
mov
daa
xchg
test
mov
lock
xor
pop
xchg
cmp
jnp
add
aas
cmpb
aas
fld
leave
pop
cmp
lods
scas
cmp
add
iret
lock
pop
adc
mov
insl
jne
das
jmp
mov
fdivs
jae
adc
mov
loop
arpl
cmpsl
mov
pop
fldl2t
out
inc
xchg
cmp
lock
inc
pop
in
pop
shl
out
or
test
jmp
cmpsl
pop
in
dec
rol
push
fldl
ds
addr16
xor
das
pop
jp
cli
shrd
cltd
push
scas
testb
push
sbb
in
push
mov
cmpl
movsl
lahf
popf
scas
ss
xlat
sub
pop
fbstp
xchg
push
out
mov
int3
sub
pop
jmp
fnclex
fldt
das
pop
mov
arpl
dec
pop
mov
sbb
enter
mov
stc
jecxz
lahf
pop
aas
sahf
push
sub
push
aas
jge
imul
mov
lret
test
sbb
outsb
fistpll
repz
cld
jp
pop
jecxz
sti
jl
xorb
xor
popa
mov
jp
mov
dec
jg
scas
sub
xchg
sub
jns
out
mov
sti
push
js
fiaddl
xchg
ja
es
stos
outsl
iret
daa
sahf
pop
arpl
cmp
stos
fs
fisttps
mov
inc
stos
pop
loop
xor
jae
mov
cmpl
mov
stos
cmp
ljmp
xchg
ficompl
mov
push
out
mov
mov
dec
mov
push
fisttpll
mov
pop
mov
cmp
cmc
lahf
loope
out
in
iret
repnz
jnp
push
mov
adc
stc
mov
mov
inc
cli
es
xchg
iret
push
cmovno
inc
or
shlb
xchg
insb
pop
aam
dec
cltd
stc
lock
in
mov
mov
aad
dec
outsb
inc
cmpsl
pop
and
pop
shll
fnstcw
jnp
aad
bound
and
xchg
in
mov
mov
lcall
pop
mov
rorb
adc
adc
notl
mov
xor
mov
push
mov
repnz
adc
mov
cmp
lods
lds
mov
xchg
ret
lahf
jmp
pop
cs
and
outsl
cmpsb
mov
adc
mov
sbb
sub
pusha
push
cmp
int
scas
fmull
jmp
mov
std
mov
cmp
cld
pop
or
jae
fistl
std
mov
movsb
filds
enter
pop
mov
and
cld
je
xchg
jp
adc
xorb
inc
adc
push
and
xchg
test
xchg
pop
sahf
fnsave
lahf
add
fcmovne
out
cwtl
scas
dec
jg
xor
mov
mov
shl
test
stc
lret
addr16
inc
shrl
mov
xchg
test
xor
xor
icebp
cmp
push
cmp
shll
inc
jmp
jnp
sub
adc
and
loopne
jns
adc
sbb
mov
pushf
xor
inc
adc
mull
fsts
sub
sub
push
aas
add
int
adc
out
lret
mov
mov
mov
ds
sub
sti
cmpsl
pop
cmp
or
ds
in
pop
cld
iret
jne
imul
push
fildl
add
xchg
xchg
mov
adc
shlb
cmp
lods
jp
lret
inc
cmp
adc
sahf
ret
icebp
push
cmp
int
lods
outsb
stc
inc
cltd
paddb
shrl
int
mov
mov
out
push
aad
pop
jge
sbb
inc
call
xor
or
xchg
shr
or
inc
jns
lock
clc
mov
pop
sub
mov
icebp
cmpsl
xchg
and
out
je
jne
xchg
jae
cmpsb
xor
xchg
xchg
mov
inc
mov
add
fildl
dec
stos
mov
test
cs
sub
shl
jae
adc
ds
jge
in
cmp
insl
dec
insl
gs
xchg
nop
pop
add
mov
xchg
fsubr
lret
xor
out
lock
inc
and
enter
pushf
inc
xlat
add
jae
dec
out
ja
pop
push
je
out
pop
add
inc
mov
stc
ja
xchg
xorl
in
out
out
cmpsl
scas
sbb
ficoml
shr
fldl
lds
shl
mov
vpsubsw
stc
mov
mov
hlt
sub
fiaddl
stc
mov
mov
jno
cmp
push
jmp
ja
cmpsl
cmpsb
ss
in
and
adc
push
lret
fwait
andl
jecxz
dec
xlat
or
ds
decl
mov
leave
xor
mov
cmp
adc
in
lds
arpl
scas
ljmp
bound
stos
xor
cmp
adc
xlat
and
fldt
test
or
pop
dec
shll
addr16
cs
cltd
xchg
cmp
repnz
ds
shrb
add
cli
shl
cmpsl
cmp
inc
pop
jne
mov
imul
xchg
in
in
clc
sub
int
clc
or
mov
add
shll
mov
movsb
jp
fdivrl
sbb
push
sarb
mov
insl
out
inc
fstl
pop
mov
sub
lcall
add
adc
jnp
pop
test
sbb
mov
mov
adc
mov
mov
xchg
lahf
or
repnz
ret
rorb
xchg
enter
pop
push
iret
pop
fcomp
cld
xor
mov
pop
dec
aaa
mov
mov
lahf
icebp
test
cmp
pop
pop
lcall
inc
sbb
mov
sub
xor
mov
dec
fisttps
add
push
les
test
rcrb
xor
iret
jae
jle
je
jnp
adc
roll
or
sub
sarb
ret
arpl
enter
decl
fnstenv
xchg
cmp
sbb
movsb
xchg
sub
lock
jbe
lcall
dec
insl
adc
jo
shlb
outsl
push
inc
in
ror
and
cli
xlat
mov
out
cs
sub
mov
mov
or
clc
sub
mov
movl
outsl
pop
and
add
xor
xchg
cmpsl
and
iret
data16
xor
xor
in
mov
cltd
data16
dec
shrb
pop
loope
call
roll
pop
insb
movsl
sub
mov
xchg
xlat
mov
mov
xchg
jae
fucomi
inc
push
adc
negb
stos
sbb
out
push
mov
ds
sbb
or
loope
mov
sarb
pop
cmp
stos
aad
insb
jg
bound
push
mov
in
mov
ss
mov
pop
adc
inc
mov
pusha
mov
leave
test
out
popf
ss
xchg
movsl
int3
scas
into
inc
or
mov
test
sub
ret
mov
xchg
or
ret
cs
pop
dec
divb
loopne
imul
clc
fdivp
out
xchg
lret
sbb
test
ret
adc
add
mov
mov
inc
push
insl
jbe
sar
cmp
xchg
arpl
icebp
push
into
out
jnp
out
or
adc
xchg
in
in
push
push
cmp
pop
adc
setp
add
xorb
lds
mov
call
inc
daa
repnz
jg
xor
jb
sarb
imul
cmp
decb
sub
cmp
push
rorb
mov
push
mov
xor
lret
or
mov
xor
or
pop
sub
mov
xchg
mov
xchg
mov
mov
xchg
or
mov
lahf
decl
fldt
jg
outsl
dec
scas
arpl
mov
xor
test
pop
adc
pop
inc
jae
cmp
jns
movsl
xlat
push
jae
int3
sbb
in
repnz
jbe
pop
push
icebp
pop
arpl
add
xchg
add
jno
fcmovnb
call
mov
std
jmp
mov
jg
icebp
cmpsl
ret
add
sub
int
add
or
addr16
scas
pop
xchg
pop
aam
inc
sub
xlat
test
fwait
aas
mov
adc
aaa
loop
sarl
sub
pop
aas
scas
insb
fcmove
ret
leave
mov
jge
test
dec
sbb
or
ret
sbb
mov
dec
les
sbb
or
das
or
xchg
xor
jb
ljmp
mov
inc
push
mov
test
into
xor
scas
sti
push
cltd
cmp
push
cld
das
pushf
mov
pop
cmp
jle
insl
iret
lahf
dec
add
add
jno
repnz
into
cmpsl
lcall
push
outsb
jmp
mov
push
lcall
iret
call
jmp
sarl
fwait
stc
or
lahf
lea
and
out
pop
cmp
push
mov
xor
pop
ljmp
jg
inc
push
std
fistpl
ljmp
sti
jmp
xchg
jnp
outsb
jno
iret
in
ret
xor
icebp
inc
aad
cmp
cltd
xchg
pop
mov
je
adc
jecxz
pop
mov
stc
push
sti
pop
mov
push
sti
pop
add
mov
and
inc
xlat
aaa
pop
xor
lcall
cmp
pop
mov
ljmp
mov
std
call
mov
adc
cli
mov
test
cmp
mov
sub
xor
xor
ret
ja
dec
xlat
mov
popa
fisubs
pop
mov
and
cmpsl
mov
sub
sub
cmp
add
and
or
js
iret
cli
sbb
pop
jno
sahf
notl
sub
and
ficoms
xchg
stc
inc
lahf
mov
push
mov
lods
ljmp
fnsave
mov
sbb
leave
cmpsb
je
insl
mov
or
jae
fisubrl
inc
fisttpl
xor
xchg
mov
mov
adc
mov
pushf
test
add
push
push
mov
mov
imul
adc
ret
pop
inc
negl
and
dec
inc
mov
mov
bound
sub
test
movsb
dec
mov
inc
xlat
cmp
cmp
push
test
daa
or
test
push
ret
jg
sarb
stc
sbb
imul
mov
sbb
outsl
and
shr
ret
mov
fistpll
pop
cmp
lcall
das
addr16
insl
jge
stos
scas
insb
mov
arpl
mov
sub
mov
sbb
adc
lret
jo
add
and
repz
outsl
jp
cmp
aaa
add
inc
cld
adc
jo
cs
adc
jno
mov
shrl
loop
sbb
pop
insb
std
push
out
out
pop
or
call
into
arpl
mov
aad
call
jns
test
loopne
and
popf
lods
testl
ja
or
test
movsb
mov
insb
out
out
adc
out
pop
out
cs
sbb
cmp
sahf
cmp
mull
scas
inc
in
nop
loopne
dec
jnp
ja
scas
fbstp
in
xlat
pop
jg
push
dec
into
out
adc
arpl
call
fsubrl
popa
mov
xchg
add
mov
imul
mov
repz
pop
jne
add
imul
lahf
lret
mov
pop
jmp
dec
sub
xor
xor
cmpsl
and
outsb
addl
xor
fcomps
sarl
pop
push
stc
xor
cld
ficomps
inc
adc
cmp
or
jb
in
cmp
orl
mov
mov
inc
out
popf
fidivrs
das
stos
pop
dec
add
mov
loopne
pop
ficoml
dec
mov
dec
ret
dec
ret
orb
loopne
mov
ret
sub
insl
mov
bound
jnp
call
mov
mov
leave
test
dec
shl
inc
fs
or
scas
xchg
push
loope
or
xchg
sahf
sub
sub
ja
xorb
jns
pop
mov
mov
shrb
jno
lods
out
dec
int3
sbb
adc
mov
fwait
xchg
sub
jns
int3
mov
stos
cmp
adc
addr16
divl
imull
mov
adc
daa
xor
mov
cmpsb
mov
mov
xchg
loope
popf
sti
adc
lea
addr16
adc
push
push
mov
pop
mov
push
inc
mov
stc
and
adc
lret
pop
cmp
in
testb
test
out
lea
in
mov
mov
adc
daa
inc
out
lahf
lods
rcr
xor
jns
bound
adc
repnz
sti
sbb
leave
jo
push
fs
ljmp
jae
mov
popa
adc
insb
cmpsl
push
mov
xor
lock
mov
jmp
inc
push
push
cmp
fnstcw
repnz
test
rol
mov
sbb
xor
ret
cmp
cli
and
adc
ss
fsts
jl
imul
jne
leave
les
cld
scas
pop
sbb
outsb
data16
sub
cmp
or
test
mov
jg
xor
mov
or
in
insb
fxch
imul
clc
xchg
xlat
mov
decl
bts
stc
push
adc
stc
mov
inc
xor
and
mov
clc
jmp
pop
bound
or
inc
aaa
pusha
sub
popf
dec
jle
add
or
add
dec
insb
lods
cmpsl
inc
sub
inc
jne
sub
inc
imul
and
ss
addr16
xor
push
mov
mov
push
out
test
in
adc
push
arpl
lret
lea
bnd
jge
mov
pop
out
inc
decb
inc
enter
enter
pop
inc
mov
sbb
cld
push
push
or
ret
cmp
fsubs
pop
xor
sub
jge
xchg
xchg
pushf
push
sbb
jo
cmpsl
mov
iret
lock
push
dec
fmulp
mov
mov
cmp
cmp
push
sti
cmp
mov
std
sbb
fsts
or
pop
jnp
push
dec
xor
sti
es
aad
xlat
or
adc
push
jg
rclb
sbb
pushf
mov
shr
fstps
push
sbb
xor
lds
fbld
arpl
sahf
adc
jbe
movsb
sub
ja
pop
mov
fidivl
jle
jp
inc
into
pop
jg
out
rclb
outsl
jno
xor
dec
pop
int3
loopne
mov
dec
data16
add
mov
push
adc
adc
movsb
jnp
or
or
dec
inc
ret
jg
lods
imul
xchg
lret
pop
lret
cmp
mov
jb
xchg
jno
inc
jmp
sub
add
pop
in
mov
sahf
icebp
dec
push
sbb
mov
jo
stc
in
cmp
jmp
lahf
push
lods
add
add
add
xchg
shlb
mov
mov
adc
mov
inc
jp
mov
jnp
inc
insl
outsb
into
xor
popf
int
jmp
ret
les
dec
jae
mov
lods
fsubrs
pop
rorl
push
loop
mov
pop
je
or
ja
int3
movsl
or
pop
cs
mov
sbb
stos
sub
mov
fidivrs
insb
popa
xor
xlat
ljmp
lds
pop
xchg
inc
dec
aam
cmp
cmp
inc
jp
popf
push
push
dec
cmp
mov
rdpmc
push
lahf
or
das
sbb
sbb
mov
mov
sbb
push
or
in
jg
mov
lahf
and
data16
hlt
push
shll
and
xor
push
stos
push
iret
add
jle
inc
cmp
cmp
jne
outsb
shrb
insb
or
pop
nop
mov
xlat
xlat
shlb
jae
in
add
dec
push
or
popf
mov
mov
lret
dec
jecxz
jmp
fwait
insb
idivl
das
cmp
jne
mov
push
mov
stc
push
mov
scas
in
sub
push
mov
scas
dec
xchg
pop
mov
add
cltd
insb
lock
out
out
sbb
push
negl
pusha
sub
adc
jmp
and
popf
in
scas
or
pop
mov
imul
mov
pop
pop
add
sub
xchg
cld
je
insb
ss
jno
mov
cmp
ljmp
jmp
into
mov
icebp
out
das
sti
mov
adc
outsb
test
repnz
and
add
mov
in
daa
push
stos
leave
xrelease
adc
cwtl
lret
add
jp
cmp
sahf
psubusw
cmp
xor
repnz
push
pop
pop
or
pusha
adc
test
fnstenv
adcl
rcll
xchg
adc
movsl
push
cmp
pop
ja
mov
movsl
mov
mov
mov
jb
arpl
out
flds
sub
pop
xchg
mov
push
lods
adc
mov
lcall
dec
int
ss
pop
dec
pop
fcmovne
cmpsl
sbb
mov
or
lods
lret
lret
test
mov
sbb
mov
dec
pop
inc
test
xor
mov
arpl
mov
in
dec
test
adc
fucomi
lahf
mov
or
pusha
pop
mov
jecxz
mov
out
repnz
jl
or
ljmp
out
jb
ja
pushf
xchg
jno
outsl
setg
jmp
insl
jnp
push
in
and
or
out
fidivrs
jne
mov
sbb
decb
dec
mov
arpl
adc
cltd
lret
sub
lcall
pop
add
push
pop
cmp
lcall
cmp
lods
and
mov
jmp
fnstenv
mov
sub
sti
mov
jo
jae
mov
mov
and
xor
ja
and
std
lcall
dec
jb
cld
or
sub
cmp
sahf
insl
xor
ret
sahf
add
sbbb
cmp
or
mov
xchg
leave
mov
adc
jo
sbb
mov
ljmp
lahf
es
sbbb
jp
iret
add
incb
stos
outsb
add
fdivrs
lcall
adc
je
pop
scas
or
sbb
xor
xor
xchg
pop
dec
iret
or
lret
lods
mov
inc
xchg
das
cs
xor
loopne
fidivs
mov
jg
sub
dec
dec
aad
xchg
mov
enter
sub
mov
xlat
hlt
mov
inc
or
mov
iret
xchg
cmpsl
push
cwtl
jnp
fldl
jb
out
repnz
aas
ret
out
bound
mov
fs
xor
jge
andb
ret
out
cmp
orl
cmp
ret
ret
pop
sar
sbb
adc
pop
or
rol
cld
jmp
xchg
call
adc
jne
movsl
shrl
mov
sub
stos
push
sub
loope
test
mov
jg
subl
xchg
lahf
mov
sbb
lea
mov
ret
js
xchg
not
ret
rsm
leave
add
ficompl
sub
cs
aad
mov
pop
pop
les
sbb
cli
or
and
popaw
sub
pop
aad
cmc
inc
jnp
fistl
jae
cmpsb
movsb
xlat
lods
ret
mov
push
push
ss
mov
insb
scas
pushf
xchg
sbb
stc
add
iret
andb
hlt
icebp
js
mov
dec
stc
fimull
call
pop
push
mov
bswap
sbb
arpl
mov
les
fmull
insb
jb
lods
fsts
jg
xor
fcmovbe
sub
lret
popa
aam
lock
scas
fcmovne
mov
sti
xor
ja
pop
sub
lret
lcall
jbe
push
pop
dec
jns
mov
mov
xchg
icebp
mov
loopne
pop
xchg
hlt
pop
lret
or
push
ds
in
je
scas
adc
jg
ljmp
sub
and
adc
shrl
mov
xlat
pop
dec
mov
mov
jecxz
and
xlat
push
fcoms
push
icebp
xchg
imul
in
data16
cmpsb
scas
xlat
jg
inc
add
dec
movsl
jp
es
decl
add
jge
add
dec
movsl
imul
push
movsb
adc
mov
xchg
mov
dec
sbb
cltd
jnp
sar
das
shl
stos
adc
sti
xor
fisubrl
stc
or
jne
push
jae
gs
sbb
mov
jmp
sbb
arpl
inc
xchg
mov
ret
xor
push
xchg
in
jmp
mov
xor
mov
jne
and
pop
repz
or
mov
xor
inc
jl
pop
stos
iret
fs
mov
pop
lahf
xchg
out
mov
mov
dec
cmp
or
xor
lahf
adc
decb
pushf
xor
loop
jge
jnp
hlt
cltd
xchg
cmpsl
popa
sub
sbb
fbld
rol
lods
arpl
push
pop
pop
xor
pop
sahf
xor
scas
arpl
dec
pop
xor
inc
mov
lea
jle
pause
adc
mov
jae
lods
fidivrs
int3
aas
and
shr
ret
ss
cmp
movsb
xor
mov
sahf
inc
lahf
test
pop
mov
lds
cli
mov
sbb
ficoml
mov
cs
push
ret
stc
and
ss
insl
push
push
push
dec
push
mov
jmp
lcall
cwtl
loop
dec
sahf
out
xchg
pop
mov
insl
outsb
xchg
nop
jae
ret
testb
or
aaa
cmp
pop
jbe
cs
mov
push
iret
insb
rcll
out
fstpl
sub
push
cmp
insl
mov
mov
cmpsb
mov
cli
sub
dec
sub
sbb
dec
ss
sub
lods
ja
mov
cs
push
inc
xchg
and
inc
add
sub
cmp
clc
push
test
dec
sarb
or
ljmp
imul
movb
mov
hlt
sub
lret
jo
jns
insl
leave
leave
xacquire
out
xchg
inc
mov
addl
adc
jno
push
dec
lods
pop
sahf
and
mov
addr16
popf
lods
in
cmpsb
pop
ja
xor
pop
jp
add
ss
inc
jbe
and
iret
ja
insl
cmp
ja
test
sbb
lahf
das
xlat
adc
es
xor
sub
push
stos
sub
mov
and
dec
cmp
pop
int3
mov
xchg
add
int
or
dec
repz
adc
cli
pop
xor
jge
testl
pop
lods
mov
sbb
push
cmp
aad
mov
lret
sub
ja
cmp
ret
sub
mov
lahf
xor
or
ret
adc
xor
mov
icebp
add
js
mov
push
xlat
pop
xlat
adc
mov
mov
cmpsb
mov
push
push
xor
pop
and
mov
or
mov
icebp
idivl
dec
test
cmp
mov
ficompl
pop
lahf
and
aad
or
adc
add
stc
pop
cmp
pop
adc
jp
inc
cld
push
jae
jnp
or
shll
scas
dec
lret
cmp
sbb
push
mov
jmp
pop
adc
stos
push
sub
movlps
sub
test
cmc
mov
mov
push
sub
loop
rolb
mov
mov
insb
jno
xchg
sbb
mov
push
insb
xor
out
lcall
jg
ds
cmpsl
sbb
and
sbb
cmpsb
pop
mov
lea
mov
ret
inc
stos
ret
mov
je
out
ret
xchg
sub
add
es
or
imul
mov
mov
fildl
shrb
dec
or
pop
cwtl
movsb
pop
inc
adc
sbb
dec
jno
iret
ret
cli
lds
mov
fbld
call
int
xchg
xor
push
jb
xor
fnstcw
incb
jmp
cmp
rcrb
fbld
sub
out
mov
scas
xor
lcall
pushf
cmp
iret
pop
test
lcall
mov
inc
xchg
push
scas
stos
inc
push
sti
out
cmp
je
clc
aas
cld
push
jb
xor
xchg
sub
dec
dec
mov
jl
xchg
adc
xor
adc
fisubs
test
or
popa
mov
jge
fisubs
aaa
outsl
pop
cmp
push
xor
enter
fisubrs
mov
scas
jle
dec
add
xchg
mov
in
dec
out
jp
push
cmp
es
mov
pop
pop
xchg
mov
push
lcall
repz
arpl
dec
or
mov
xor
icebp
or
test
fstl
pop
add
fdivs
mov
int
mov
fistpll
fistpll
notb
mov
stc
bnd
jnp
sub
pop
bound
je
addr16
lret
xorl
cmp
cmpsl
fs
push
imul
adc
loope,pn
ret
dec
push
pop
xor
cmpsb
pop
mov
cs
aaa
out
cmp
mov
std
mov
xor
loopne
dec
shlb
adc
and
insb
xor
adc
xchg
lahf
aas
or
fdivr
sub
push
mov
xchg
ljmp
ret
jbe
stc
adc
xchg
jae
inc
fiaddl
sub
popa
pop
lds
ret
lret
ret
cmpsl
lahf
add
in
push
jmp
mov
xor
incb
pusha
out
insb
das
push
sub
adc
sub
pop
push
or
lret
pop
les
push
sub
stos
dec
movsl
mov
pop
test
cmc
test
icebp
test
std
or
push
iret
xor
pop
sub
mov
cmpsl
sarb
subl
and
pop
pop
push
cmp
ja
popf
xor
aaa
cmpsl
mov
push
repz
ficompl
xchg
inc
out
or
sub
sub
loope
and
xor
ret
cmp
scas
mov
je
fisubrl
xor
inc
push
adc
xorb
sarl
iret
into
pop
xchg
sbb
push
in
jns
xchg
ljmp
cld
mov
cmp
fsubl
lcall
nop
repnz
jl
fisubs
leave
cmp
sub
popw
cmpsb
sub
stos
sbb
jne
mov
dec
pop
out
pushf
mov
notl
xchg
jnp
dec
dec
mov
or
xor
xchg
cli
shrb
std
clc
inc
xor
inc
jnp
mov
push
jnp
enter
imul
sbb
and
inc
jb
inc
or
jb
stc
mov
repnz
mov
cltd
jle
test
call
xchg
mov
jo
jno
jns
fidivs
jae
adc
adc
sub
pop
aad
or
imul
cld
mov
pop
hlt
adc
xor
bound
pop
rcl
adc
push
ficomps
add
fnstsw
jno
ss
sbb
aaa
lock
inc
pop
fwait
daa
adc
rcr
sahf
cmp
cmpl
mov
out
sub
cmpsb
pop
or
je
pop
fstps
mov
ret
shlb
sub
icebp
add
mov
aas
out
out
mov
jns
and
lahf
scas
mov
in
into
aas
add
or
mov
xor
fisubl
jge
mov
aas
popf
cmpsl
test
fisubs
jbe
jns
xor
test
mov
mulb
cwtl
xchg
ja
ret
mov
jmp
xchg
sbb
es
push
data16
mov
in
mov
mov
out
xorb
sub
push
and
jo
push
out
mov
pop
cs
jb
arpl
sahf
cmp
outsb
pop
out
out
push
pop
xchg
mov
fs
lods
loop
mov
decl
ja
lahf
pop
test
jo
lahf
jbe
xchg
sub
jl
negb
inc
pop
jne
mov
mov
es
cmp
int3
add
pop
scas
sbb
jbe
inc
jns
popf
xchg
sub
mov
dec
movsl
pop
stc
out
mov
sbb
call
fnstsw
in
sti
mov
add
ja
mov
cmp
cmp
sub
mov
cld
pop
push
xor
das
jg
aaa
fnstsw
fistpll
jb
jo
out
cmp
adc
pop
adc
inc
mov
repnz
out
push
dec
outsb
push
push
or
and
pop
cmp
leave
std
or
ljmp
mov
push
or
lds
mov
inc
aaa
test
out
lahf
push
push
mov
push
push
pop
push
ret
push
lods
movsl
ljmp
rcrl
movsl
ret
ffree
mov
and
daa
pop
sti
push
cmpsl
push
lahf
mov
dec
js
leave
push
inc
mov
popa
inc
in
fcmovu
push
lahf
jne
lock
mov
mov
ret
push
outsb
mov
imul
negb
cltd
mov
inc
fwait
int
push
jb
adc
push
dec
imull
insb
xor
js
pop
loop
fldenv
inc
jp
pushf
push
mov
out
sub
xor
mov
std
sbb
jo
push
and
hlt
pop
es
mov
xchg
jmp
sti
pop
push
push
bound
arpl
shl
push
cmp
lahf
or
adc
add
popa
cli
jne
mov
cmpsl
mov
cltd
dec
shl
into
std
fnstcw
arpl
int3
pop
js
test
je
shrl
mov
jmp
mov
mov
fisubrs
mov
xor
ret
sub
cmc
mov
push
sub
mov
jecxz
andl
jae
scas
out
aaa
mov
int3
pop
and
shrl
lcall
xor
mov
popf
ds
pop
or
cwtl
cmpsl
mov
sarl
sub
outsl
js
mov
cmp
mov
dec
cld
inc
add
mov
ljmp
mov
iret
add
lods
insl
add
inc
popa
pop
aas
lfs
mov
ljmp
adc
stc
insl
imul
sbb
mov
adc
je
sarb
mov
cmp
xchg
push
xor
clc
jo
hlt
xor
push
mov
sahf
fstpt
fistl
mov
mov
sar
mull
test
inc
mov
stc
mov
and
ds
loopne
xchg
jns
leave
pop
das
les
lock
xor
cmpb
sbb
je
xchg
je
enter
inc
dec
adc
ret
mov
lahf
lret
inc
cmpsl
jnp
cmpsb
sahf
cmp
adc
loope
mov
ss
out
push
adc
repz
dec
clc
mov
mov
add
push
xchg
scas
imul
mov
negb
fidivs
xchg
in
scas
pop
ljmp
adc
xchg
test
mov
lahf
out
in
or
adc
pop
adc
mov
sbb
pop
or
repz
cmp
xor
push
cmp
ret
jbe
out
fwait
jne
std
stos
mov
and
or
in
testb
add
loopne
jp
sbb
arpl
xor
xchg
das
aad
xor
mov
addr16
sbb
jae
sub
jmp
repz
mov
test
loopne
push
or
adc
xchg
push
rcrb
sahf
push
std
mov
pop
adc
inc
sti
aam
fnstsw
data16
lods
jle
mov
lods
ret
push
mov
lret
adc
jae
cmp
dec
lock
and
inc
mov
ljmp
xchg
test
cltd
inc
cmp
dec
add
cmp
mov
xchg
cmpps
cmp
pusha
call
mov
adc
mov
jb
add
xchg
jmp
imul
dec
popf
mov
sti
ds
sbb
jns
jmp
dec
xchg
or
adc
ljmp
sub
lods
dec
xor
sbb
in
shrl
xchg
mull
and
shlb
lods
cmpsl
in
mov
inc
es
shll
int
aam
mov
sub
add
ds
push
cli
loope
imul
cmpsl
dec
mov
push
jmp
test
sbb
leave
xor
xchg
call
jne
jns
mov
fcoml
repz
jp
jecxz
mov
mov
fistps
mov
or
ficoms
sbb
ret
cmp
or
arpl
jae
add
lahf
cmp
mull
inc
xchg
testl
jne
sub
xchg
and
ret
lret
in
sti
cltd
sub
je
stc
emms
push
leave
xor
loop
scas
mov
shll
lahf
mov
sub
or
setp
jmp
mov
or
cmp
inc
ret
jecxz
test
xor
fidivrs
jns,pn
inc
nop
je
or
jo
dec
jno
cs
mov
rorl
popf
fistps
loope
inc
dec
lret
jge
ljmp
fcoml
adc
mov
rcr
les
test
mov
jno
out
jecxz
scas
add
push
aad
xchg
lea
lds
cmp
inc
and
das
jbe
jmp
pop
xchg
cmpb
out
imul
aaa
loopne
jo
xor
iret
insb
push
cmpsl
inc
nop
mov
mov
and
xor
stc
repnz
mov
lock
aas
dec
pusha
push
add
lret
fldt
test
and
idivl
xor
fldcw
mov
xchg
in
cmp
pusha
sarl
xchg
pop
add
popa
leave
aas
sub
mov
jb
mov
mov
pop
scas
out
cmp
add
fdivrp
jne
adc
adc
pop
mov
test
lea
fbld
daa
cmp
adc
cs
jae
cld
jl
push
arpl
jno
pop
mov
push
cmc
out
and
dec
push
sub
sti
in
cli
dec
lea
mov
mov
and
loop
push
pop
and
sbbb
mov
imul
ds
jmp
mov
decl
movsl
idivb
iret
fsub
dec
fwait
inc
out
std
aaa
and
add
pop
aaa
iret
rorl
fidivrs
nop
stos
adc
mov
sub
inc
cltd
mov
inc
push
loopne
rol
sub
or
mull
cmp
andb
add
mov
sbb
mov
dec
test
out
loopne
push
jns
imul
mov
ret
and
jmp
out
xlat
movsb
call
sub
adc
or
inc
mov
fucomip
sti
test
enter
jmp
iret
cmp
cld
sub
pop
jmp
mov
pop
sub
push
in
mov
cmp
pop
jns
dec
inc
add
std
mov
adc
lahf
cwtl
push
and
adc
xor
lds
inc
jb
idiv
adc
sahf
cmp
jle
fmuls
push
pop
je
mov
filds
push
push
out
lret
mov
cmpsl
hlt
mov
popa
lret
adc
xor
jmp
pop
ret
cmpsb
mov
adc
vpalignr
jmp
icebp
sub
insb
in
sti
cmp
and
lahf
lret
push
sub
pushf
pop
mov
mov
add
jmp
push
jne
adc
test
push
mov
xchg
imul
cmp
lret
das
fsub
dec
ret
popa
jne
adc
add
mov
mov
xor
fildll
adc
paddsw
stos
mov
popf
xadd
xchg
add
mov
or
mov
sbb
aad
push
jmp
jmp
insl
movsb
mov
fwait
enter
mov
enter
in
lret
pop
lea
out
pop
enter
std
iret
push
ret
sbb
mov
or
enter
or
xchg
push
mov
jecxz
mov
cs
in
cmc
xor
xor
rorb
js
lret
push
in
in
aas
xor
test
add
cwtl
mov
lock
sbb
int3
shrl
jmp
ror
push
test
xor
pop
aaa
push
and
jmp
pop
stc
mov
sbb
or
push
sub
jp
xor
loope
int
int3
cmpsl
mov
mull
aaa
hlt
xor
xor
sahf
inc
cli
push
aaa
pusha
pop
or
dec
fsubrp
repnz
imul
rcr
daa
cmp
mov
push
fbstp
imul
push
and
fcmove
ja
arpl
fimuls
mov
dec
cmp
cmpsl
insb
outsb
add
or
pop
loop
lret
jp
rorl
xchg
mov
cli
lcall
repnz
lahf
pop
das
mov
push
test
je
arpl
or
jecxz
sub
into
mov
scas
push
es
mov
ffree
mov
mov
je
inc
inc
mov
mov
bound
leave
mov
dec
cmpsl
mov
arpl
jbe
ljmp
sbb
pop
ret
pop
dec
mov
je
inc
pop
mov
lret
fidivrl
out
adc
int3
push
push
fsubrs
add
push
jb
adc
imul
xor
xor
pushf
sbb
xlat
mov
cmpsl
pop
bound
inc
jle
popa
fidivl
fbstp
inc
or
hlt
jb
frstpm(287
out
cmp
ficompl
lret
lret
cli
std
lods
ss
and
push
dec
mov
and
xchg
inc
rorl
insl
sar
test
pop
scas
test
jp
stos
lds
cmp
lret
adc
push
inc
mov
das
popa
jb
mov
clts
sti
add
adc
aas
mov
bnd
adc
xor
adc
mov
or
inc
into
mov
mov
mov
je
dec
je
cmpsb
arpl
in
rcrb
rolb
dec
xor
js
xor
mov
cltd
mov
sbb
outsl
test
mov
xchg
cmp
js
sbb
mov
and
data16
inc
cmp
and
pop
out
xor
pushl
imul
test
adc
adcl
jne
aaa
nop
cmp
xchg
inc
push
cmp
xor
pop
lahf
or
inc
push
sti
fdivrl
inc
jb
mov
in
mov
aam
push
mov
ja
leave
rcll
cmp
push
lods
pop
and
push
cmpsb
ds
add
clc
scas
sub
repz
test
lret
filds
js
aas
xchg
adc
aad
rorl
insb
xchg
mov
ja
shll
bound
lret
lcall
mov
ficomps
fists
repz
mov
mov
out
push
sbb
test
shll
inc
rcrl
mov
or
or
cmp
out
sub
rorl
jge
inc
mov
sbb
pop
pop
xchg
inc
mov
ds
cld
imul
test
push
dec
xchg
push
je
xor
xlat
lds
mov
addr16
push
mov
stc
and
jle
prefetch
or
enter
dec
movsb
mov
xchg
sub
repnz
dec
jg
lods
ret
inc
push
cmpsb
inc
out
shll
dec
push
jg
xor
pop
mov
mov
mov
xlat
sbb
pop
out
jae
das
mov
xchg
cs
clc
roll
lahf
sbb
repz
jnp
mov
pop
xchg
push
pop
and
in
or
mov
add
mov
mov
pop
out
cmpsb
xor
insb
and
mov
mov
insb
divl
or
mov
ret
shrl
adc
push
out
cmp
cmpsl
aad
jae
and
cld
or
outsl
xor
subl
iret
bnd
cmp
and
icebp
dec
mov
inc
pop
lahf
mov
out
sbb
push
and
into
cmp
fcomip
daa
xchg
iret
or
outsb
movsl
push
inc
or
or
mov
sbb
jl
into
and
mov
leave
negb
icebp
and
cmp
xchg
imull
push
lods
out
sbbb
stc
add
cmpsl
inc
rorb
pop
adc
cld
shlb
or
cmc
int
pop
and
pop
pop
je
lods
sbb
xor
xlat
sbbl
mov
push
xchg
xlat
pop
lret
fnsave
rol
sub
jno
popf
xor
pop
sbb
data16
data16
sbb
mov
movb
loop
mov
push
mov
test
cmc
es
fnstenv
sbb
pushf
test
or
mov
int
pop
sti
mov
pop
push
aas
sarl
clc
add
mov
sub
ret
jle
or
je
fbstp
movsb
arpl
and
mov
inc
push
orl
jb
scas
mov
mov
sbb
out
je
mov
popf
shlb
mov
push
insl
dec
push
lsl
mov
cmp
sbb
xchg
test
inc
dec
into
push
jb
call
or
in
fdivl
jne
fisubl
sub
outsb
and
arpl
sbb
cmp
lahf
fs
cli
fisubs
sub
mull
mov
jmp
cmpsl
scas
inc
mov
jmp
lret
packssdw
sar
push
inc
jbe
inc
lds
lods
sbb
or
xchg
mov
jge
sbb
sub
mov
xchg
xchg
scas
adc
add
mov
cmpsl
mov
push
into
jecxz
lock
adc
fisubs
loope
test
loop
aad
mov
pop
jne
mov
xchg
nop
mov
inc
mov
mov
mov
cli
pop
jle
fdivrl
inc
jbe
xchg
mov
out
pop
mov
mov
add
pop
hlt
ljmp
stos
aas
mov
jmp
ret
xor
pusha
stc
mov
icebp
jo
lss
aas
cmp
subb
out
push
das
fs
arpl
sub
cmp
sub
pop
lods
outsb
sub
addl
dec
ds
cli
sti
sbb
pusha
jl
movsb
out
or
pop
lock
add
hlt
pop
mov
test
insb
add
jbe
jp
roll
cmp
dec
dec
or
scas
mov
lods
in
jge
xor
cld
movsb
test
pop
add
shlb
mov
mov
into
xchg
cmp
insb
inc
mov
adc
clc
push
mov
daa
hlt
and
pop
inc
lahf
pop
pop
inc
nop
xor
imul
xor
add
inc
shrl
push
jmp
lods
ret
pop
cmp
out
push
cltd
aad
das
pop
sti
sub
mov
mov
inc
cmpsl
adc
pop
je
clc
mov
cmpsl
cmpb
rorl
imul
rcrl
fwait
insb
cmp
xlat
cs
xlat
xor
fidivrs
out
dec
insl
jle
pop
ja
mov
sbb
test
mov
or
notl
iret
call
xlat
xchg
call
cli
mov
fldt
mov
out
xlat
cld
scas
ja
rcrl
daa
mov
xchg
add
int
addr16
xchg
pop
test
lret
sub
mov
push
xchg
or
inc
popf
int3
scas
aas
mov
jg
add
addr16
and
loop
lahf
mov
xchg
lcall
mov
testl
sbb
into
arpl
roll
daa
mov
mov
das
fdivrp
inc
ret
xlat
pop
inc
shrb
pop
aam
out
cmp
inc
inc
fiaddl
scas
xor
inc
and
pop
ja
loop
mov
xchg
aam
out
loop
jg
jl
push
jns
xor
test
fwait
mov
xor
fwait
xchg
cmp
sub
mov
mov
fnstenv
jg
ljmp
mov
jge
jp
outsl
scas
dec
pop
out
cld
pop
mov
push
cmp
dec
pop
mov
out
mov
lahf
testl
arpl
stos
cmpsl
repz
daa
aaa
inc
leave
mov
inc
ds
out
pop
sbbl
das
lahf
or
xchg
iret
out
cmp
lahf
loop
xor
mov
aaa
aaa
dec
cmp
fsubs
fistpll
out
jmp
test
in
ja
iret
cmp
mov
jg
pop
aaa
daa
inc
cs
pop
cmp
filds
xchg
jg
ficompl
addr16
jb
mov
repz
cmp
cmp
xchg
lahf
xor
inc
sub
out
shrb
pop
ja
mov
repz
fimull
out
cmp
test
dec
test
aas
repz
push
mov
pop
fistpl
jnp
xor
jp
jb
mov
lret
inc
or
cmpsl
xor
mov
mov
mov
mov
jb
mov
sti
aaa
lahf
jp
fnstcw
mov
imul
repnz
mov
sub
or
dec
bound
lcall
insl
sbb
mov
femms
lods
cli
fwait
sbb
out
lahf
cld
push
jno
mov
mov
push
or
ud0
jmp
push
mov
cltd
mov
fdivr
mov
fnsave
cmpsl
in
or
popf
mov
mov
pop
xor
shl
aad
sbb
lret
jae
movl
mov
jnp
sbb
ljmp
mov
adc
mov
in
outsb
fists
mov
mov
lcall
jno
aas
jnp
sub
fsubp
fwait
cs
sub
mov
lret
xor
stc
iret
mov
jmp
icebp
mov
cld
test
mov
or
push
jmp
jo
lods
push
insl
imul
test
dec
enter
dec
in
popa
repz
cs
sub
push
shll
adc
fwait
loope
ret
insl
daa
test
adc
cld
xchg
push
sbb
push
inc
stos
aaa
lahf
cltd
loopne
xor
sahf
push
lea
mov
pop
dec
cmp
pop
arpl
jne
push
imulb
movsb
adc
arpl
js
aaa
gs
inc
addr16
cmp
and
out
popa
dec
js
mov
mov
aaa
mov
sub
testl
add
test
xor
mov
lcall
push
ljmp
mov
push
push
mov
scas
xchg
std
dec
rolb
xchg
les
cmp
arpl
jmp
jp
scas
in
push
push
cli
shrl
out
adc
test
xchg
leave
mov
lock
add
lods
lahf
mov
jb
fcomps
push
and
out
jno
sbb
lahf
test
inc
cmpsl
add
pop
xor
mov
fcom
test
mov
mov
daa
rol
push
lahf
faddl
imul
mov
leave
push
ret
popf
ret
cli
stc
pop
adc
cli
adc
stos
imul
xor
or
sti
scas
jnp
cmpsl
je
repz
or
dec
fldt
cld
cmp
mov
pop
and
jo
mov
lea
dec
dec
inc
imul
xchg
lods
inc
pop
jge
xchg
pop
mov
push
fisttpl
mov
or
rorl
mov
testl
xchg
jmp
mov
cmp
addb
inc
xchg
fistpll
hlt
out
setle
sub
add
shrl
push
imul
movsl
xor
cmp
push
adc
outsb
jne
aam
aas
xor
int3
stc
mov
lret
pop
movsl
push
xchg
out
jp
mov
push
sbb
push
pop
and
jne
jg,pn
pop
adc
adc
outsb
lahf
lea
ret
fdivl
sub
ljmp
xor
aaa
jg
imul
push
ret
fstps
sbb
rcl
dec
scas
fimuls
sub
ss
dec
aaa
dec
pushf
sarl
jo
es
punpckhdq
dec
sbb
aas
int
fsubs
jbe
aad
or
dec
inc
fnsave
shr
test
jmp
cli
xchg
fcoms
xchg
mov
and
cmpsl
enter
imul
cmpsb
or
mov
mov
or
xor
js
push
dec
adc
xchg
fdivr
pop
pop
mov
cmp
adc
loopne
mov
inc
lds
les
loopne
inc
dec
roll
mov
idivb
fcmovu
jb
in
nop
popa
add
sub
push
sbb
xor
push
mov
push
jno
shll
jbe
arpl
inc
mov
outsb
stos
shl
int
mov
or
idivb
clc
mov
shr
adc
je
push
or
lret
ret
jno
sbb
mov
incl
dec
inc
or
mov
sub
mov
pop
vhsubps
sti
cmp
xchg
mov
movsl
cmp
mov
push
lahf
in
jecxz
xlat
fisubrs
imul
sbb
arpl
cltd
fsubp
lods
les
push
cmp
hlt
pop
dec
shll
popa
mov
xchg
nop
mov
fs
sub
sbb
aam
jbe
mov
in
test
inc
push
xor
cmp
pop
xor
cmp
xchg
outsb
stos
adc
idivb
mov
fiadds
mov
pop
fwait
xlat
fxch
imul
daa
cmpsb
push
test
test
pop
sbb
jnp
aas
cli
xchg
inc
les
fistl
mov
lcall
out
mov
dec
ret
jns
rorl
stos
jns
movsl
mov
xor
mov
pop
adc
dec
lcall
push
mov
arpl
xor
push
mov
pop
and
aas
xor
pop
call
jg
or
pop
lret
or
adc
push
xor
push
mov
insl
add
jnp
push
cmpsl
or
adc
shl
outsl
inc
negb
adc
int
in
pusha
lea
addl
loopne
hlt
pop
or
inc
jl
into
movsl
mov
lods
imul
pop
jle
jo
out
jae
jns
addr16
add
xchg
sbb
inc
mov
pop
lea
mov
loopne
or
loopne
ret
das
leave
stos
arpl
cmp
pop
mov
mov
insl
fidivrl
inc
cwtl
adc
bnd
test
mov
in
test
mov
add
sub
ret
loopne
add
and
in
cmp
mov
fisubrs
lods
cld
mull
pop
fdivrs
rclb
push
dec
mov
out
pop
ror
test
lods
imul
cmpsl
pop
jno
pop
push
jp
aad
xor
push
push
sbb
rorb
sbb
data16
adc
sbb
out
jecxz
ss
push
repnz
insb
hlt
jmp
mov
cmc
idiv
jge
xchg
pop
lds
cltd
out
fstps
xor
out
jo
cmpsb
stc
rep
inc
stos
ljmp
notb
out
sahf
mov
mov
into
in
mov
insb
jno
ret
mov
pop
adc
icebp
mov
inc
adc
or
push
jnp
push
jle
vpcmpgtw
dec
call
outsb
cltd
pop
jae
adc
cmpsb
ss
cmc
cmp
mov
subl
addl
xchg
or
pusha
arpl
je
xchg
mov
push
test
mov
outsl
ljmp
xchg
or
add
jb
inc
push
das
ret
mov
paddb
shrb
adc
push
lock
inc
out
mov
push
mov
mov
negl
mov
xchg
adc
xor
sahf
push
mov
cmpsb
jnp
mov
pmaddwd
mov
xor
jb
out
sub
daa
adc
mov
fwait
mov
and
nop
xchg
leave
and
dec
rolb
mov
jp
mov
lret
ret
imul
xchg
mov
xchg
dec
popf
stc
mov
adc
jae
shll
sbb
pop
mov
adcl
inc
mov
mov
push
add
in
jae
mov
xchg
in
nop
cltd
cmpsb
lods
sbb
repz
pop
das
inc
lea
aas
mov
movsb
push
bound
add
cmp
fiadds
movsl
and
loopne
xchg
mul
loope
inc
int
cmpsl
out
mov
dec
dec
inc
pop
stos
adc
dec
push
dec
cmp
cltd
outsl
mov
jbe
inc
stos
mov
cld
mov
mov
lea
sbb
inc
mov
hlt
sub
lret
cmp
or
mov
fidivrs
mov
xchg
mov
push
mov
lahf
xchg
push
mov
mov
scas
dec
test
fistpll
icebp
jno
jp
lahf
pop
lods
cmp
movsl
push
mov
negw
push
mov
cltd
lock
lods
jo
aaa
adc
mov
pop
jg
mov
in
push
adc
fwait
mov
push
mov
and
cli
jge
jae
inc
sub
jb
mov
insl
mov
ret
sbb
xor
je
pop
out
sub
or
insb
repz
in
test
push
jl
jae
fisubrs
in
xchg
xchg
pop
sub
fcomps
stos
fisubrs
std
dec
mov
aas
jae
xchg
mov
out
push
out
push
or
lahf
mov
push
adc
js
dec
lea
test
cmp
paddusw
mov
mov
jmp
mov
pop
sub
ret
ret
std
jnp
cmpb
arpl
subb
insl
insl
int
adc
xchg
sub
push
cmp
push
cmp
lea
mov
jae,pt
mov
aas
push
mov
pop
in
mov
ljmp
loopne
lock
lahf
mov
dec
add
orl
pop
push
add
push
js
lret
negl
aaa
inc
inc
fwait
je
shl
fs
add
push
dec
or
fistl
repnz
test
imull
pop
xchg
inc
sarl
cmpsb
daa
fdivr
pop
lods
es
cmp
das
jp
cwtl
pop
out
sbb
or
jns
sbb
xlat
fmuls
retw
and
psubsb
ret
mov
inc
push
add
cltd
mov
iret
mov
out
adc
push
xchg
stos
pop
adc
iret
test
or
mov
xchg
push
and
push
jp
cwtl
inc
inc
movsb
push
repnz
lcall
pop
or
xchg
mov
sub
es
pop
mov
ja
jnp
gs
mov
outsl
enter
dec
fwait
and
lahf
sub
sub
sti
mov
fsubl
pop
push
movsb
fistpll
jmp
icebp
fbstp
sbb
bound
mov
mov
lahf
xchg
test
insl
jae
fdivrs
cli
mov
stos
push
lret
or
sub
sbb
cmp
lods
mov
mov
dec
mov
pushf
lcall
inc
cmp
loopne
jo
in
xor
dec
pushf
jns
or
insl
stc
sub
outsb
scas
ds
adc
push
xchg
pusha
lcall
shrl
jp
aam
xchg
in
jp
test
imul
das
dec
shlb
fldl
jle
mov
add
mov
mov
mov
adc
mov
popf
mov
cli
inc
repz
insl
outsb
pop
jg
sub
mov
popa
mov
xor
push
pop
fiadds
mov
cmpsl
or
into
lock
inc
pop
xchg
ret
adc
mov
imul
mov
fdivrp
adc
jmp
lret
mov
cmp
adc
cmovs
adc
inc
push
xchg
xchg
add
adc
xchg
and
outsb
cmp
and
adc
xor
or
int
subl
and
dec
outsl
cltd
data16
jns
insl
xchg
add
in
movsl
cmp
inc
popf
in
pushf
in
repnz
xchg
or
mov
sar
stc
nop
popf
sti
sub
loopne
cmpsb
xchg
jle
mov
sub
push
stos
movsb
mov
mov
mulb
and
out
push
mov
mov
into
jmp
stos
adc
and
pop
add
fcoms
fdivp
inc
sbb
sub
cmp
in
xor
cli
xor
std
in
pop
inc
mov
lret
add
xchg
in
js
testl
cld
dec
sub
cli
xor
mov
adc
inc
pop
xchg
mov
icebp
xor
add
sbb
out
cmpsl
mov
ljmp
sbb
repnz
cmpsl
pushf
add
divl
xor
inc
xchg
shr
mov
out
das
pop
add
xor
in
pop
hlt
prefetch
jp
mov
cmpsb
test
je
push
adc
mov
mov
push
bound
xchg
add
jnp
dec
sub
icebp
pushf
orl
push
or
sub
inc
and
pop
and
ds
sti
add
or
fldcw
lods
repnz
movb
testl
aas
lods
into
imul
outsb
mov
xchg
xor
out
and
xchg
pop
xchg
inc
mov
testb
xchg
push
pushl
testb
sub
jp
add
push
in
ficomps
add
and
mov
std
xor
mov
pop
mov
and
fnstsw
xchg
pop
std
xchg
das
mov
sub
out
xor
jnp
clc
push
rclb
mov
xlat
loopne
sti
in
pop
and
cmp
cmp
icebp
mov
stc
rclb
push
pop
push
movsl
je
fisttpl
sahf
cmc
mov
jo
xchg
fisubs
push
jns
push
repnz
ljmp
decb
mov
cmpsl
aad
jl
adc
daa
adc
adc
sahf
or
jb
lods
push
aas
pop
fldt
mov
mov
mov
adc
aam
pop
pop
xchg
mov
cmp
sbb
push
repz
shrl
shrl
lret
cmp
mov
std
sub
mov
adc
push
cmp
shll
pop
cmp
pop
les
fwait
sbb
push
mov
xor
sarl
dec
in
mov
adc
shr
mov
lcall
inc
xchg
mov
fidivl
out
push
cmp
pop
addr16
inc
fadd
fiaddl
push
push
xor
cmpsb
xlat
icebp
lahf
dec
test
sub
push
push
jg
in
xchg
daa
enter
inc
shlb
mov
inc
pop
jb
mov
inc
imul
and
and
jp
adc
mov
inc
jle
adc
add
fisttpll
xchg
mov
dec
pop
xchg
xchg
dec
out
pop
jg
repnz
test
add
mov
xor
ret
imul
push
cmpps
add
sbb
jp
push
aam
xlat
movsb
movsb
cmpsl
flds
addr16
rep
inc
out
aaa
mov
and
mov
mov
outsb
daa
aad
icebp
popa
push
mov
mov
movsl
data16
dec
aas
dec
add
push
leave
jmp
dec
xchg
ljmp
inc
je
dec
shl
push
rcrb
dec
test
les
outsl
in
cmp
xchg
cwtl
leave
push
pop
stc
lahf
and
imul
cmp
std
int3
xchg
jecxz
mov
pop
out
mov
mov
mov
jns
je
repz
mov
test
jbe
cmpsl
movsl
pop
jmp
shll
std
mull
mov
mov
ljmp
aaa
js
pop
stos
jo
xchg
xchg
cmp
arpl
loopne
popf
insl
pop
dec
and
addr16
into
bound
repnz
inc
lahf
stos
inc
adc
cmp
fsubrl
lcall
imul
sbb
or
daa
mov
je
pop
sbb
out
mov
xchg
loop
jae
push
mov
or
fnsave
pop
jg
addb
cwtl
daa
sti
test
movsb
inc
sbb
and
xlat
or
insb
adc
pop
in
cmp
add
lahf
push
pop
testb
dec
mov
mov
lea
mov
cmc
mov
push
sub
je
push
mov
imul
push
sbb
sti
add
inc
lock
mov
je
add
add
push
fldenv
lahf
cmp
or
jbe
add
cmp
dec
dec
cmp
jbe
scas
fcoml
lock
fmulp
jb
mov
sbb
add
iret
outsb
in
mov
cli
adc
mov
mov
test
ljmp
test
fsub
leave
xchg
les
push
sbb
enter
add
je
mov
add
xor
sti
jg
mov
add
jl
shrd
ljmp
inc
cmp
cmp
pop
sub
cmc
jne
xchg
jmp
inc
and
cmc
push
mov
xchg
dec
lcall
and
test
in
lods
push
shlb
push
rcl
insb
lahf
inc
xchg
jg
or
jle
push
dec
fyl2xp1
pop
xor
out
pop
ret
pop
adc
sub
jae
and
jno
xchg
lods
pop
clc
leave
lcall
or
mov
idivb
loope
movnti
iret
aas
popl
loope
sbbl
rcr
inc
mov
fmull
xchg
cld
push
or
push
push
dec
mov
cltd
cmc
scas
std
or
rcr
adc
adc
fwait
mov
mov
pop
cli
inc
out
mov
sti
out
adc
cmc
loope
leave
inc
lret
shl
out
inc
das
jno
lret
test
cli
aad
shlb
js
mov
in
xor
push
iret
mov
lock
shll
or
xchg
adc
out
fs
icebp
xor
inc
mov
ret
jnp
jecxz
dec
imulb
cli
cmp
sub
arpl
cmp
ds
insl
add
leave
xchg
jp
ficomps
jecxz
and
or
shll
mov
and
bound
dec
sti
and
test
pop
daa
mov
dec
mov
fwait
and
rorb
cmp
adc
scas
mov
adc
cltd
jne
xor
loop
pop
or
xor
bound
inc
stc
mov
or
mov
outsb
cli
fsubs
addr16
pop
cmp
mov
out
cli
cmpsl
fsubs
mov
je
jne
daa
jns
lea
pop
in
dec
out
stc
shrl
pop
jmp
inc
roll
inc
out
xor
lds
popf
push
insb
mov
or
jbe
test
cmpsl
ret
cmp
js
popf
sub
mov
or
xor
adc
or
cmpsl
adc
and
inc
lret
pop
fcomps
sub
xchg
fcomps
fdivrs
sbb
enter
sahf
and
mov
adc
out
shlb
dec
pop
ja
hlt
inc
mov
mov
jbe
mov
push
ret
cmp
cli
add
mov
outsb
xor
or
test
and
jnp
dec
xor
daa
les
add
imul
dec
dec
xchg
imul
popa
pop
mov
fbstp
or
test
insl
add
jle
adc
dec
leave
jg
scas
cwtl
clc
jne
push
push
in
loop
push
inc
jno
xchg
mov
mov
pop
mov
ret
cld
rclb
popa
push
add
add
cld
mov
lahf
fimuls
jb
xor
jecxz
push
ret
loopne
mov
ret
xchg
xor
add
mov
xchg
sbb
jae
out
adc
dec
mov
mov
sbb
pushf
mov
scas
pop
mov
mov
adc
rolb
add
pop
cmp
xchg
lahf
or
jmp
or
lods
mov
fstpl
inc
movsl
pop
ret
inc
test
out
out
or
pushf
fwait
bound
adc
repnz
xor
or
sbb
sbb
push
sub
cmpsl
ror
pop
out
fsubrs
jge
inc
aas
inc
cmpsl
mov
aaa
cmp
and
jmp
pop
and
scas
push
xor
or
roll
insl
in
pushf
ds
shll
js
movsb
mov
adc
mov
jne
addl
pop
scas
jo
jl
jb
mov
fdivl
icebp
or
jecxz
scas
ja
xor
test
sbb
jae
push
dec
jnp
mov
sub
or
fcomps
test
data16
sti
dec
xor
jecxz
and
xor
rcll
push
and
mov
rorl
scas
and
mov
movsl
dec
pop
mov
repz
push
mov
xchg
mov
cmp
dec
xor
mov
xchg
int3
or
jge
adc
or
pop
or
cmpsl
jnp
scas
js
cld
icebp
mov
in
fidivrs
int
dec
mov
pop
pop
jne
mov
movl
cmpb
inc
imul
enter
in
jb
fnsave
sahf
enter
jg
mov
movsl
dec
jmp
ss
mov
and
fcomp
enter
jecxz
xor
xchg
pop
mov
in
test
addb
adc
xchg
loopne
ja
std
sahf
cmp
repnz
out
sarl
scas
sbb
sahf
test
mov
pusha
js
fisubrs
push
int
icebp
insb
das
inc
cmp
jp
lret
cltd
cmp
sbb
mov
mov
fnstsw
dec
rorb
mov
mov
les
loopne
into
sti
pop
mov
xor
sub
adc
jb
in
lods
sub
iret
and
or
cmp
stc
add
xchg
aas
or
pop
cmp
xor
insb
movsl
imul
mov
xchg
jg
lods
sbb
jg
lret
icebp
imul
pop
xchg
cmpsl
and
in
jae
fildll
sbb
inc
jb
pop
pusha
test
call
loope
adc
lret
mov
xchg
xor
leave
mov
scas
sub
dec
inc
das
movsl
mov
sub
dec
cmp
mov
or
cs
mov
mov
lahf
outsb
aaa
fld
iret
js
dec
mov
mov
cmp
push
sti
xor
add
xlat
sub
js
sar
cmp
add
sbb
insl
xchg
loopne
xor
mov
loop
leave
push
cmp
and
test
push
and
mov
dec
sarl
push
adc
test
or
and
les
push
aas
inc
icebp
mov
adc
mov
or
mov
sarl
stc
enter
arpl
iret
pop
sub
pop
jae
fs
inc
inc
mov
pop
call
and
lahf
add
test
cmpsl
adc
shll
aad
dec
jno
mov
ss
shlb
xor
loopne
push
pop
movsl
jno
push
cwtl
sub
sub
stos
jmp
cli
push
outsb
cmp
xor
xchg
jg
aad
push
jle
in
repnz
xchg
rclb
in
mov
add
push
and
aas
sbb
faddp
imul
imul
add
sub
faddp
in
mov
mov
les
cmp
pop
pop
int3
ljmp
mov
insl
dec
in
ljmp
cli
std
xchg
dec
xlat
pop
js
scas
inc
pop
in
sbb
mov
push
aam
mov
iret
outsb
mov
jle
cmp
and
mov
jnp
lds
adc
xchg
bound
pop
xchg
inc
lods
mov
push
loopne
push
out
sti
rclb
prefetch
or
xchg
lahf
sbb
add
iret
es
fimull
mov
xor
fs
imul
pop
xchg
push
aas
xchg
fsubrs
xlat
pop
hlt
mov
xor
or
cltd
stc
shrl
mov
std
cwtl
loop
rol
or
bound
movsl
mov
in
pop
push
iret
fldenv
idivl
outsl
dec
aad
scas
pusha
and
jb
sub
and
cli
outsb
fdecstp
mov
repz
test
pop
rcrb
mov
cmpsl
subb
pop
lock
fwait
addr16
les
sub
push
and
xor
push
inc
cmp
fsubrl
mov
push
int
inc
sbbl
jp
fwait
jmp
outsl
xchg
out
pushf
das
or
bound
stos
insl
out
add
mov
mov
sub
pop
movsb
pop
aad
jns
aas
xor
test
mov
mov
insb
fimuls
inc
sub
mov
pop
mov
pop
dec
xor
sub
mov
push
cmp
pop
out
scas
lret
sbb
out
stos
jecxz
data16
jle
jmp
dec
repnz
sbb
lea
cmpsl
pop
pop
nop
or
orl
int
pop
fidivs
and
vmread
repnz
repnz
xchg
xchg
ljmp
mov
test
das
add
sub
jnp
pop
daa
jns
jp
mov
sbb
gs
xchg
repz
sti
pop
fistpll
pcmpgtb
mov
icebp
mov
test
mov
ljmp
sahf
mov
and
cmpsl
out
loop
xor
pusha
mov
xor
scas
lahf
pushf
push
mov
repz
cmc
push
sbb
ss
rcrl
mov
out
cmp
jg
daa
std
mov
or
rclb
mov
insb
pop
mov
mov
fwait
pushf
mov
int
cmp
or
out
mov
inc
mov
mov
stos
ret
xor
fwait
pop
pop
sahf
adc
daa
sub
outsl
cmp
mov
and
aaa
mov
movsl
lahf
call
cmp
fdivrs
jg
ficompl
and
sahf
xor
aas
out
stos
leave
xchg
lret
push
stos
fnstcw
jae
cmp
mov
jns
jns
xchg
fs
imul
xor
mov
imull
stos
adc
pop
jg
loop
xlat
sbb
fsubl
scas
mov
mov
sub
jb
mov
stos
inc
out
aaa
mov
jg
out
mov
mov
mov
jp
jb
mov
cmpsl
lahf
mov
sarb
imull
mov
mov
test
mov
jg
jg
out
sub
fbstp
arpl
cmp
scas
ja
sbb
jg
jge
aas
sbb
jecxz
jp
mov
xor
fldt
imul
sub
mov
cmp
pop
mov
mov
pop
dec
mov
push
xchg
mov
mov
pop
lods
xchg
iret
push
imul
fistl
mov
xor
push
jns
jns
jns
jg
pop
mov
ret
aaa
push
aaa
mov
jbe
pop
lods
mov
xchg
sub
pop
sarb
sbb
ja
sub
daa
mov
jnp
adc
mov
pop
ficompl
mov
in
dec
loope
lock
cmp
sub
inc
pushf
and
inc
jne
push
sbb
inc
mov
xchg
cltd
test
je
inc
push
adc
add
dec
insb
aam
mov
push
sub
movsb
inc
pop
cmp
xchg
add
mov
adc
dec
add
adc
pop
pop
xor
mov
inc
cmp
jnp
pop
inc
sub
add
mov
sub
fdiv
pop
out
pusha
or
movsb
daa
inc
cli
xchg
hlt
jecxz
or
jle
outsb
adc
cmc
cld
mov
out
shrl
cmc
lcall
sbb
lret
je
push
adc
mov
xchg
mov
addl
pop
inc
je
pop
inc
jno
xchg
std
loope
jecxz
iret
push
adc
into
add
lahf
cld
jno
in
ljmp
mov
xor
mov
rolb
test
inc
jbe
xchg
cmp
fldenv
fs
push
in
stc
jle
add
cmp
rep
mov
xor
or
iret
pop
test
aas
inc
mov
or
mov
je
cltd
aaa
sbb
xor
xchg
das
mov
xchg
ror
or
mov
popa
jns
ja
inc
lahf
inc
mov
or
repnz
cmpsb
push
mov
cmp
outsb
ja
addr16
arpl
push
pop
scas
inc
push
cmp
and
enter
jge
xor
adc
stc
ja
jno
js
and
das
mov
adc
mov
fs
leave
into
push
outsb
repz
fwait
ja
mov
cli
iret
adc
mov
stos
mov
mov
jb
or
xor
idivl
pop
and
js
jnp
fiadds
or
jbe
inc
push
cmp
cmpsl
adc
pop
add
loopne
test
fcomps
jno
sarb
mov
scas
push
pop
dec
jge
or
jne
test
sbb
outsb
add
inc
scas
fimuls
pause
fcmovnb
mov
jb
push
xor
mov
push
stos
imul
cmp
das
fistl
stc
jo
mov
mov
jo
dec
xlat
shlb
sub
insl
ss
sahf
in
out
or
pop
rorb
dec
leave
mov
hlt
adc
xchg
cmpsl
mov
addl
sub
mov
xor
es
outsb
jo
push
adc
mov
dec
gs
xor
jb
and
les
xor
push
sub
cmp
pop
mov
leave
mov
push
jns
jns
inc
pop
mov
or
fcomps
dec
nop
xchg
call
js
aas
in
outsb
dec
xor
pop
mov
dec
lds
adc
scas
shrb
pop
or
mov
add
add
aas
pop
test
xchg
push
add
outsl
lods
cmp
daa
mov
ja
mov
lret
rclb
test
pop
push
aaa
sub
lods
jge
and
and
insb
loope
arpl
adcl
sbb
lcall
pop
push
fistl
mov
adc
mov
pop
or
lods
lret
outsb
cmpsl
mov
adc
cli
adc
lcall
jnp
test
js
sbb
sahf
mov
insl
mov
cli
ret
adc
push
jnp
je
pop
popa
push
ljmp
add
xor
xor
ficomps
pop
fnstsw
mov
sbb
fsub
sbb
mov
ss
addr16
out
adc
std
inc
je
inc
dec
aad
in
lcall
je
or
xchg
dec
mov
imul
aam
or
mov
aas
pop
dec
pop
subl
and
inc
mov
push
stc
testb
adc
lret
insb
add
test
xchg
repnz
xor
lcall
push
hlt
sbb
ljmp
cmp
rorb
pop
dec
adc
xorb
jbe
in
xchg
out
fs
cld
xor
ljmp
in
lds
inc
les
mov
sub
xor
lds
xchg
dec
data16
mov
jno
repnz
pop
addb
cwtl
in
push
mov
stos
jnp
jnp
out
in
cmpsl
iret
enter
push
dec
cmp
rolb
cmpsl
jo
in
xor
sbb
pop
fcomps
test
rcll
xlat
xor
mov
sub
inc
aaa
dec
fisubrl
mov
sub
xchg
push
loopne
in
lret
jp
or
mov
and
jmp
dec
es
adc
fisttpl
shrb
data16
mov
add
test
iret
jno
push
push
sub
sbb
xchg
jecxz
into
pop
push
sbb
aad
mov
inc
jmp
aas
ss
or
imul
fdivrs
cli
xchg
fnsave
inc
xchg
sar
lahf
mov
pop
ds
fists
jbe
pop
je
stos
sbb
out
sub
pop
push
xor
arpl
fwait
es
movsb
out
push
push
clc
fnstcw
shlb
or
cwtl
insb
ss
ret
jg
xchg
cmpsl
and
add
xchg
test
daa
mov
jmp
and
bound
inc
scas
arpl
push
je
out
cld
inc
icebp
jmp
cmp
or
out
or
mov
add
fwait
loopne
stc
pop
movsb
mov
xor
cmp
out
push
mov
out
arpl
lret
mov
fadd
sti
js
add
pop
cmp
fadds
sub
pop
insl
das
ja
adc
je
cmp
dec
mov
mov
incl
push
std
test
sbb
pop
sub
mov
shlb
adc
xor
cmpsb
leave
aad
xchg
stos
push
sub
imul
std
mov
cmp
imul
lahf
cmp
call
lock
ret
lret
sbb
dec
stc
cmp
cltd
jne
aad
fistl
cltd
or
adc
leave
pop
xorb
outsb
push
mov
lods
rol
imul
or
mov
jp
mov
mov
outsb
outsl
mov
out
je
nop
add
sbbb
sbb
nop
ret
mov
stc
sub
sbb
mov
fsubrl
push
inc
pop
ds
outsb
adc
repz
mov
repnz
cmp
mov
xorb
enter
jmp
shlb
jb
imul
sbb
push
mov
xor
mov
mov
push
mov
and
mov
push
bound
mov
and
pop
or
fcmovnu
adc
or
pop
imul
dec
imul
or
adc
sahf
les
inc
out
stos
lcall
adc
std
xchg
or
sbb
in
and
mov
fucom
jnp
push
push
or
movsl
jae
clc
xor
int3
cmpsl
push
pop
fidivrs
enter
hlt
add
out
psrld
add
pop
pop
out
test
cmpxchg8b
iret
cli
add
aas
push
lds
mov
jmp
adc
pusha
inc
in
xorl
loop
mov
test
pop
sti
fldt
sub
inc
pop
xchg
movsl
push
jb
js
xor
xor
in
xchg
divl
rcrb
fs
push
mov
xor
rol
mov
movsl
arpl
ret
divb
pop
xor
adc
jmp
iret
sub
adc
add
sub
ficoms
cmp
or
push
mov
sbb
leave
std
dec
movsb
jge
out
jb
ret
movsb
cmp
mov
cli
lods
or
xchg
cmp
jge
dec
jb
mov
dec
xchg
mov
jecxz
ror
pop
test
or
imul
mov
outsl
jl
cmpsb
cmpsl
or
dec
pop
test
adc
fdivr
sbb
orl
scas
pop
mov
cmp
inc
icebp
mov
pop
xchg
xor
inc
loopne
or
fisttpll
insb
je
jmp
fistps
fdivr
mov
bound
lahf
sbb
mov
xchg
outsl
insl
test
repnz
mov
daa
push
ljmp
sbb
sbb
xchg
gs
push
cmp
sbb
jnp
pop
je
mov
push
pop
loopne
outsb
ds
mov
mov
mov
push
cltd
sbb
adc
in
or
mov
cmpb
shlb
test
stos
insl
sbb
cltd
ret
cli
jg
pop
push
mov
pop
pop
push
and
sub
push
mov
bswap
lahf
test
pop
xor
lahf
js
out
sbb
inc
icebp
test
pop
dec
pushf
mov
push
aas
pusha
imul
sbb
lods
movsl
ret
mov
pop
test
mov
aad
out
xchg
mov
or
mov
aad
subl
aad
and
cmc
cmp
pop
pop
movsl
cmpb
out
mov
inc
push
add
ja
int3
mulb
repnz
push
push
lods
inc
rcrb
sahf
and
mov
ret
lcall
stc
je
inc
clc
sarl
leave
cmp
sti
sahf
xor
out
jno
fsts
adc
mov
out
mov
sub
lret
mov
ret
dec
sub
fmull
lahf
sub
daa
cmp
jmp
ja
dec
cmp
hlt
into
pusha
and
daa
mov
loopne
pop
sbb
loopne
enter
sbb
push
pop
mov
mov
mov
test
fmuls
mov
leave
call
out
mov
mov
adc
shrb
fisubl
xchg
add
lea
inc
push
mov
and
jo
cwtl
jno
cmp
mov
mov
mov
hlt
or
cltd
addr16
lahf
into
insb
daa
imul
imul
divl
adc
or
sbb
jnp
push
cwtl
pop
cmp
or
in
insb
repnz
sti
lods
jno
jle
xor
add
movsb
pop
mov
pop
arpl
movsb
jnp
insl
push
push
jno
test
jge
arpl
inc
pop
imul
mov
jmp
test
cmp
pop
cmp
add
pop
stos
mov
mov
mov
mov
sbb
nop
pop
and
and
outsb
cmp
sti
ds
inc
insb
out
mov
mov
jae
or
jg
jae
movsb
stos
lock
repnz
xchg
pop
jmp
les
ljmp
psubusb
sbb
and
inc
sbb
push
jecxz
sahf
or
int
mov
push
arpl
lret
pop
sti
push
mov
mov
test
lret
mov
cmpsl
cli
pop
push
sbb
jbe
mov
stos
std
xchg
dec
lcall
push
jge
test
fstpt
orb
sbbb
inc
sbb
sub
xchg
es
dec
pop
cld
outsl
movsl
cmp
jle
loopne
push
jns
in
repz
lret
movhps
sbb
pop
mov
rcrl
mov
push
stos
jae
xchg
mov
sbb
sub
sti
adc
adc
pop
out
dec
and
dec
bound
mov
imul
mov
jg
fdivl
and
add
pop
pop
sarb
repnz
lea
sub
in
shl
push
adcl
inc
mov
mov
adc
and
push
add
popa
adc
and
pop
mov
jnp
loop
or
adc
subl
xchg
mov
es
jae
add
xchg
lcall
adc
dec
pop
mov
jae
fnstenv
mov
pop
lods
add
mov
in
xlat
jae
cmp
jbe
pop
or
lock
adc
es
add
and
xor
pop
or
cli
and
inc
jno
or
jne
sbb
mov
stos
jg
call
or
enter
out
lds
add
adc
pop
rorb
icebp
orl
dec
cmc
push
cmp
adc
ja
clc
mov
add
icebp
rsqrtps
mov
cli
fs
jmp
in
xor
adc
fnstenv
loop
arpl
or
sarl
jne
test
push
ficoml
cmp
in
jg
jmp
shlb
pusha
rolb
scas
mov
test
rcr
xor
inc
mov
jmp
ljmp
mov
out
ss
dec
dec
inc
jbe
xlat
dec
ljmp
jno
jl
lret
ret
jmp
xchg
cmpsl
into
and
cli
xlat
cmc
in
mov
inc
xchg
sub
mov
inc
das
jp
repz
mov
imul
outsl
inc
addl
push
std
testl
mov
mov
test
lahf
fdivrs
cmp
shr
rol
xor
pop
roll
mov
arpl
push
cmp
adc
adc
ds
add
jno
fistps
mov
dec
pop
sub
je
stos
cmp
shl
pop
mov
pop
repnz
imul
pop
adc
inc
push
loopne
jmp
mov
dec
bound
mov
dec
out
loopne
loop
pop
xchg
xchg
inc
out
int3
cs
fnstcw
fnstsw
pop
ret
loopne
stc
or
jcxz
sti
inc
and
gs
pop
lods
les
mov
and
and
push
fistpl
out
lods
add
adc
xchg
jae,pt
shrb
std
jmp
test
xor
imul
mov
xchg
mov
pop
ja
dec
sbb
xor
hlt
mov
fildll
mov
pop
add
or
lret
xlat
fsubrs
aas
sbb
out
jns
cmp
sti
imul
ljmp
imull
loopne
jg
stc
repz
mov
in
fsubrl
mov
aaa
shl
mov
mov
ljmp
in
cwtl
mov
mov
cli
cmp
or
std
dec
or
lcall
xchg
in
adc
aam
rolb
inc
xchg
pop
loop
jno
je
sbb
xlat
ret
repnz
cmpsl
ret
rolb
jo
push
or
and
adc
dec
or
jecxz
pop
lods
sti
and
loop
cmp
orl
cmp
and
jg
and
imul
js
rclb
lahf
loop
adc
add
fimuls
fldt
divb
sub
sbb
xchg
subl
and
jge
jle
xor
ljmp
mov
lods
inc
into
aam
fdivl
bnd
xorb
sbb
jnp
dec
mov
das
leave
xchg
adc
lahf
jo
mov
shlb
jnp
out
sbb
mov
je
push
xlat
jne
sbb
or
pushf
lds
lcall
sbb
lret
std
add
ret
loope
ss
sub
testb
data16
jle
hlt
leave
adc
mov
fdivl
and
stc
jp
insb
cmpsb
addl
mov
inc
mov
in
mov
pop
sbb
ret
iret
mov
and
cmp
lcall
bound
push
es
rcrb
loopne
shl
lods
movsl
gs
dec
imul
jbe
jo
inc
dec
in
jp
xor
jo
addr16
mov
fwait
rcll
mov
out
cmp
inc
dec
sub
fsts
fists
stos
outsl
bnd
xor
mov
jg
xchg
inc
lcall
test
adc
xchg
jl
adc
cmp
out
movsb
cs
lock
mov
jecxz
or
mov
add
fldcw
js
pop
das
insb
mov
mov
push
fistpll
push
jmp
lcall
mov
mov
ja
xchg
mov
sarl
dec
dec
outsl
pop
sbb
pop
xor
push
in
enter
push
dec
cs
mov
fnsave
stc
loop
jb
out
sahf
sbb
icebp
les
sub
ret
sub
push
mov
push
adc
lock
jo
xor
dec
cmp
xor
fs
loop
pop
sub
fnsave
ret
repz
inc
rcrb
mov
sub
push
outsb
push
rol
cmp
lahf
xchg
lea
leave
mov
mov
jp
sbbb
lods
pop
fisttpll
in
push
imul
lret
mov
xor
pop
pop
inc
adc
movsl
pushw
pop
in
mov
jns
jle
mov
dec
lods
jg
fnstsw
fisttpl
cmp
push
test
sbb
xor
jo
enter
cli
das
cld
test
mov
fs
mov
xchg
mov
jns
loopne
mov
inc
mov
mov
ret
ja
ljmp
sub
sub
pusha
sbb
nop
dec
dec
adc
pop
js
lods
sbb
fiadds
add
ljmp
outsb
mov
push
fidivrl
inc
faddl
scas
cmp
imul
adc
pop
aaa
mov
inc
sub
je
fbld
in
push
mov
shr
pop
pop
movsb
lahf
pushf
pop
lock
repz
xlat
mov
aam
mov
mov
mov
xor
xor
push
nop
jno
mov
lods
or
and
lods
cmp
xor
mov
test
or
mov
fcomp
add
mov
sub
movnti
mov
inc
pop
cmp
xor
fstpl
pop
and
cld
inc
mov
or
mov
mov
ret
inc
push
in
mov
or
add
adc
push
push
mov
sub
or
test
lods
pop
xlat
push
mov
testb
push
pop
xchg
pop
daa
scas
xor
lahf
stos
adc
repnz
nop
jns
sbb
push
mov
insb
mov
cmpsl
popf
fcomp
clc
faddl
aam
sahf
leave
mov
and
push
cmpsl
lds
cld
push
ds
pop
in
das
out
clc
ret
mov
xor
lods
ds
cmpsl
adc
mov
xchg
pop
loop
mov
or
push
cld
mov
pop
aaa
mov
div
sub
ja
ja
shlb
ja
push
je
mov
ret
mov
inc
ljmp
out
push
or
aam
mov
aas
add
inc
stos
and
dec
repz
nop
test
or
or
insb
lahf
cmpsb
add
cmp
push
mov
inc
sbb
push
sub
mov
sub
cmpsb
jne
and
xchg
mov
out
les
repz
movsb
aas
adc
mov
adc
mul
lods
push
clc
mov
lahf
xchg
andl
dec
xor
lahf
jmp
lret
jge
lods
stos
xor
jle
jne
cs
iret
push
pop
jmp
jbe
push
xor
pop
outsb
movl
lret
nop
xchg
xchg
bound
inc
mov
pop
mov
jecxz
arpl
cltd
std
fdivrp
jb
ret
mov
dec
add
psubsw
mov
pop
inc
addb
adc
test
bound
pop
jnp
sbb
iret
xor
loopne,pt
sub
ja
fdivs
mov
jecxz
iret
mov
imul
in
outsl
aad
inc
mov
push
and
test
mov
cmc
out
cmp
sbb
cmpsl
ret
jp
dec
loopne
call
push
jl
add
adc
paddusb
cld
das
ss
sub
jl
or
arpl
adc
or
out
leave
jno
pop
pop
mov
pop
js
fldt
mov
xorl
jne
mull
push
ss
pop
xorl
insl
lods
cmp
xchg
daa
jbe
lds
jge
jo
add
subl
push
add
sbb
shrb
inc
mov
test
add
push
filds
js
test
int
shlb
std
pop
xchg
inc
xor
pop
pop
cmp
mov
dec
ja
bound
jb
push
push
cmpsl
lock
cld
dec
sub
sti
adc
loope
js
adc
pop
cmpsl
lahf
mov
dec
jne
dec
and
aad
out
push
bound
mov
fnclex
add
push
mov
or
mov
popf
js
sbb
addr16
cmp
push
adc
movsl
pushf
push
idivb
push
imul
cmpsb
sub
mov
repnz
xchg
adc
lea
ljmp
jle
jbe
pushf
sti
lret
jo
and
pop
ret
jp
fmuls
pop
jnp
lcall
pop
push
aaa
push
ret
ret
dec
add
mov
cmp
jmp
add
or
test
mov
cltd
cmp
cmpsb
std
enter
adc
fistpl
xor
int
jo
cmp
or
jg
rorl
jg
cmp
mov
push
pop
push
sub
pop
icebp
or
rdpmc
sbb
lea
cmpsl
sub
xchg
lret
cmp
and
into
mov
clc
jle
jo
fcmove
push
test
xor
mov
mov
arpl
mov
shlb
ljmp
pop
ja
hlt
in
mov
mov
fisttps
mov
loopne
lahf
push
in
scas
mov
imul
dec
mov
test
push
xchg
je
jbe
ret
iret
sbb
xchg
and
adc
ja
data16
mov
and
mov
in
fnstcw
ret
adc
mov
cmp
push
mov
out
lea
xor
jb
call
xorb
imul
pop
out
pop
lods
out
add
pop
cmp
jnp
push
sub
jmp
pop
pop
subl
cmpsl
mov
je
push
rcrb
sub
loopne
cmp
xor
pop
idivl
rclb
fbld
mov
pop
mov
and
sub
xlat
out
movq
in
push
add
enter
mov
arpl
xchg
aas
mov
dec
jmp
sbb
pop
push
mov
dec
mul
addr16
enter
pushf
arpl
les
mov
jb
mov
lahf
sub
fcomps
ss
dec
lcall
adc
dec
mov
mov
test
mov
or
cmp
stos
aad
int
insl
push
or
xchg
shll
rol
pop
push
popf
and
push
inc
ss
cmp
lret
fsubr
orl
ret
and
push
rcl
cmp
arpl
mov
sub
cmp
cld
pop
sti
pop
sarb
jmp
aas
mov
rcll
popf
iret
js
je
hlt
ds
lahf
sbb
mov
and
inc
mov
mov
lods
pop
fs
sbb
lcall
push
sub
das
cltd
jecxz,pt
movsb
push
insb
daa
sbb
xorb
xchg
mov
lds
stos
mov
sti
cmc
ret
xor
push
icebp
neg
push
add
jmp
dec
es
push
xlat
sub
mov
mov
arpl
mov
pop
shlb
or
inc
aas
fists
xlat
dec
adc
imul
push
loop
in
pop
jecxz
push
fsubl
pop
mov
push
xor
sti
adcb
jne
aas
ds
pop
sub
repz
dec
mov
push
out
or
enter
jg
jp
inc
push
popf
inc
into
jb
mov
lahf
mov
adc
pop
decl
int
fisubl
repnz
loope
fwait
cmp
dec
inc
cmp
div
inc
mov
add
mov
fsub
sbb
push
cmp
outsb
test
xchg
or
inc
cli
insb
mov
lcall
push
adc
ja
xchg
lahf
int3
mov
jg
xchg
insl
pop
mov
or
and
lret
xchg
or
mov
mov
cli
jecxz
push
dec
ficompl
jo
mov
aaa
lcall
insl
add
jns
scas
outsl
jb
cmp
in
sub
fistl
sti
insl
test
scas
mov
out
push
adc
dec
scas
mov
adc
aas
xchg
ficompl
mov
fnstsw
dec
ret
shl
lock
mov
das
loope
roll
clc
stos
push
jb
mov
cmp
push
push
dec
out
xchg
into
lcall
mov
aaa
mov
cmp
scas
xchg
movsl
mov
ljmp
loop
imul
xchg
out
dec
inc
aaa
xlat
imul
mull
jb
insb
cmp
mov
xchg
cltd
push
stos
push
and
iret
out
jmp
jns
lcall
popa
daa
dec
lahf
mov
ret
stc
lahf
jmp
shlb
testl
xor
sub
sub
gs
in
jmp
cmp
ds
sahf
iret
scas
mov
popa
scas
jae
out
add
rcrl
fisubl
loopne
mov
mov
dec
jge
outsl
jns
leave
adc
ds
dec
fidivs
lahf
mov
push
stos
aas
ja
sti
popa
push
jle
jmp
aam
fcmovnu
testb
arpl
push
loop
jb
lret
lahf
mov
das
cmp
xchg
pop
pop
out
fwait
sti
dec
punpcklbw
or
lods
cli
adc
pop
ljmp
lahf
lods
int
pop
or
pop
cmpsl
xor
fadds
mov
adcl
and
mov
ret
pop
push
push
adc
sahf
adcl
jbe
jge
daa
arpl
test
ret
add
xchg
sbb
push
fstpl
rclb
pop
xchg
bound
in
mov
jne
test
mov
mov
mov
testl
out
cmp
pusha
dec
cld
cs
lock
enter
fsubr
adc
or
aas
imul
std
jno
xchg
vcmpsd
adc
mov
clc
pop
int3
aam
mov
inc
fcoms
and
and
rorl
pop
or
xchg
jo
push
add
xor
inc
cmpsl
ret
lds
lret
jnp
into
inc
lods
mov
test
lea
fimuls
test
push
js
ds
dec
lods
mov
insb
popa
push
gs
add
jmp
fwait
stos
mov
mov
pop
push
mov
jle
sub
add
dec
fidivrs
mov
and
les
mov
lods
sbb
lds
cmp
pop
in
jl
mov
jb
lahf
fwait
stos
mov
jle
loope
pop
je
lods
fstl
push
jmp
cmp
lock
bound
mov
sub
mov
popa
xor
ud2
stos
push
stc
outsl
push
ficoml
clc
scas
push
rcr
mov
aam
push
ss
push
cmpl
lret
cmp
sahf
movsb
or
ja
fidivs
call
push
jno
pcmpeqd
aad
adc
mov
ret
cmp
add
mov
lods
out
out
or
mov
lret
rcrl
mov
cmp
nop
cmp
arpl
mov
cmp
repz
fwait
addl
xchg
dec
out
jg
cmp
pop
xchg
adc
xor
mov
inc
mov
rcrb
ss
or
icebp
xlat
mov
xlat
push
test
add
dec
fnsave
fists
sub
fdivs
rolb
push
aad
xor
scas
mov
adc
mov
cmpsl
or
lret
adc
subl
sbb
xchg
add
movsb
repnz
adc
cmp
add
iret
ret
cmp
inc
movsb
sub
negb
cwtl
and
lahf
inc
mov
jnp
les
push
cmp
ja
out
jmp
scas
inc
mov
in
sbb
jae
lret
mov
cmp
or
fcoms
or
push
jge
je
adc
iret
decb
xchg
int
jg
ljmp
xor
fbstp
jbe
into
in
loope
mov
cmp
xchg
or
mov
scas
mov
addr16
mov
in
adc
daa
in
test
cmp
inc
mov
add
ret
cmp
dec
rcll
push
jg
mov
jg
out
mov
push
push
aaa
out
insb
test
push
in
mov
mov
insb
xor
out
mov
dec
jo
xchg
adc
cmp
or
mov
jne
sbb
xor
mov
sub
movsl
mov
push
sub
rolb
lods
subl
stc
fisttpll
lahf
das
inc
fldt
pop
ret
sbb
cld
test
pop
cmp
fadds
lock
pop
jno
push
out
and
sti
jb
or
lea
push
in
in
cmp
cmpsl
inc
dec
js
cmp
insb
jge
or
lahf
insl
xor
add
adc
in
mov
pop
test
fdivrs
pop
lcall
pushf
push
out
inc
test
sbb
rolb
fidivl
cmovnp
jb
mov
add
sbb
or
jae
out
xlat
push
stos
es
jbe
pusha
add
in
jmp
mov
adc
mov
xlat
fcomi
adc
leave
push
ret
jns
xchg
dec
ljmp
xchg
xchg
mov
bound
mov
fwait
mov
rolb
stos
pop
test
add
xor
imul
push
fwait
xor
lods
pop
sbb
iret
jp
pop
lcall
jl
inc
pop
pop
push
into
mov
adc
sti
sub
dec
jl
sub
jns
xor
imul
je
xchg
aas
fwait
test
std
mov
dec
mov
outsb
scas
mov
or
call
js
add
jno
and
mov
hlt
push
out
jmp
fdivl
mov
sarl
imul
add
nop
mov
ret
push
fiadds
sbb
sub
call
mov
adc
sti
das
pushl
pop
loope
push
cmpsl
cwtl
lcall
ss
in
xor
lahf
scas
aas
mov
femms
jnp
fidivrs
repnz
das
xchg
cld
aam
pop
mov
fistpll
arpl
pop
roll
lret
insb
push
push
mov
scas
mov
arpl
ljmp
sbb
push
out
mov
mov
cmpxchg
arpl
cmp
movsl
rcrl
mov
popf
fimull
popf
mov
stos
adc
mov
pop
das
xor
cmp
js
aas
filds
lds
clc
test
ret
inc
ret
adc
mov
loopne
or
fisubl
jns
push
sbb
cmp
shr
inc
popf
fidivrl
lods
cmp
mov
fisubrs
add
ficoms
mov
pop
clc
lcall
es
jae
lahf
and
lods
lods
shl
test
cld
add
sub
and
xchg
pop
cwtl
sti
push
imul
lahf
ljmp
shrb
mov
out
aas
pop
sbb
adc
inc
pusha
dec
sti
pushf
aam
rolb
jp
inc
rol
xchg
pop
ret
rorb
aam
lock
mov
ds
rcll
aam
push
or
adc
cmp
lods
leave
insb
pop
push
int3
fcomi
mov
xchg
cmp
jne
je
or
ja
aam
mov
push
push
inc
jb
loop
repz
cmp
sbb
stos
lds
add
xlat
movsl
adc
jae
pop
stc
pop
nop
and
out
in
inc
sar
sldt
pop
cmp
xchg
mov
in
add
push
scas
dec
jo
scas
test
fiaddl
push
cmpsl
test
repnz
imul
subb
xchg
lahf
sub
repz
in
icebp
test
mov
out
stos
jmp
adc
jg
rcr
repz
push
test
push
stos
ret
rorl
xor
fsubrs
scas
mov
cvtps2pd
sub
push
xchg
es
jo
out
add
ret
loop
stc
sbb
fstpt
js
jb
fucomp
out
int
cmpsb
les
add
in
fcmovne
jns
out
jge
lds
jbe
cld
ret
lods
dec
pop
arpl
mov
mov
rclb
cli
dec
stos
shl
pushf
ror
clc
mov
cmpsl
xorl
call
mov
incb
movsb
dec
aad
cmp
xlat
pop
insb
test
mov
out
dec
fildl
mov
ljmp
xor
cld
test
jne
push
xor
mov
jbe
sbb
clc
pop
test
push
leave
adc
or
pusha
loopne
or
in
or
mov
fwait
adc
mov
cmpsb
aaa
xor
es
clts
jecxz
imul
xchg
dec
in
clc
clc
stos
mov
or
addb
or
sbb
xchg
js,pt
jle
cld
inc
dec
jg
lret
mov
lods
adc
cmpsb
leave
fs
fsubrp
dec
or
adc
ljmp
mov
ljmp
lea
jmp
xchg
push
pusha
xor
jne
ret
iret
icebp
data16
adc
mov
pop
sub
mov
out
aas
push
cmp
jp
aad
push
shrl
popa
xor
movsl
pop
adc
mov
cmp
mov
cmpsl
in
imul
hlt
add
and
in
fcmovb
jle
mov
aaa
jno
adc
xchg
or
sti
pop
ljmp
repnz
cmp
mov
rclb
shrb
aas
mov
inc
fdivp
sub
jno
dec
jle
aad
test
cmp
jb
adc
mov
and
dec
shr
arpl
sub
insl
insb
jbe
push
fildll
stc
ds
mov
arpl
std
aas
inc
sbb
mov
jae
sub
mov
sbbl
loop
inc
outsb
fimuls
stc
xor
testw
cmc
jge
inc
outsb
mov
hlt
mov
arpl
out
movsl
mov
cmpsl
sti
out
cmp
adc
mov
inc
cmp
cld
or
mov
stos
mov
popf
in
mov
js
mov
ret
fs
lahf
in
jne
fldcw
ljmp
pop
dec
mov
mov
sbb
loopne
das
xchg
ss
aas
inc
jmp
pop
pop
ret
decl
decb
dec
sub
les
mov
in
adc
out
in
sbb
repnz
cmc
dec
addr16
negl
jp
arpl
or
dec
inc
faddp
fldt
pop
test
sub
std
stos
cmpsl
notl
in
inc
fcoms
sbb
in
in
adc
jns
arpl
mov
dec
hlt
fstl
cmp
or
mov
push
pop
scas
in
stos
inc
loopne
inc
sub
push
idiv
dec
jle
jnp
sbb
sub
cs
mov
ljmp
inc
mov
push
out
mov
insb
sbb
ret
xchg
mov
pop
cwtl
fmulp
arpl
jo
aaa
inc
dec
cmpsl
jmp
push
or
mov
lahf
out
ret
cmpsl
jecxz
fadd
mov
cmp
push
ret
sub
push
idiv
inc
push
out
and
push
loopne
add
pop
or
icebp
push
xchg
sub
mov
iret
or
mov
pop
mov
stc
movsl
or
jg
in
test
adc
mov
dec
xor
mov
dec
dec
dec
mov
sbb
aam
or
hlt
jnp
push
dec
fstl
ss
call
rcll
fists
out
mov
cmp
pop
movsb
ss
faddl
cmp
xlat
push
jne
mov
inc
push
jnp
or
imul
lahf
int
and
scas
mov
je
mov
mov
jmp
adc
mov
xor
scas
int
aaa
cmc
das
sar
imul
push
test
ret
mov
lahf
mov
fisubrl
pop
rorb
jge
xor
inc
fistl
mulps
cli
sbb
cmc
insb
mov
mov
lahf
lods
mov
ljmp
adc
sbb
in
lock
adc
pop
lea
cwtl
xlat
roll
lods
push
shl
dec
rorb
fildl
mov
out
inc
mov
test
xchg
repnz
movsb
inc
dec
repnz
pusha
xor
ds
pop
mov
icebp
arpl
cs
push
jecxz
jecxz
push
sahf
pop
rolb
ss
dec
pop
and
pop
scas
leave
int
xchg
test
aas
mov
jnp
pop
cmp
stos
cmpsl
out
std
jecxz
jmp
mov
mov
inc
shrl
lods
jo
push
mov
test
cmpsl
adc
lahf
xor
repz
rcl
imul
fwait
stc
adc
mov
fisubs
cmp
testl
das
jp
rorb
push
imul
pop
mov
pop
mov
fidivs
mov
mov
fbstp
shll
out
or
xor
pop
in
jns
jl
add
pop
pop
jmp
xchg
pusha
lret
scas
inc
lods
xor
mov
push
ja
lock
std
scas
cmp
xlat
rorb
in
mov
jnp
sub
test
fcmovbe
cmp
and
adc
mov
pop
mov
and
pop
lods
xor
ja
pop
xor
fwait
mov
push
stos
mov
jg
sarl
xchg
mov
cltd
jecxz
pop
mov
xor
jnp
std
fucomip
loope
shll
iret
mov
xchg
jb
aas
scas
and
jge
mov
cmp
xchg
hlt
aas
scas
dec
arpl
mov
mov
insl
sbb
mov
dec
xor
jae
popa
insl
inc
sub
mov
lods
cmpsl
insl
xchg
mov
dec
daa
mov
xlat
jmp
jbe
loop
mov
or
ret
sub
adc
mov
and
fldt
in
pop
jno
jno
jg
fisubl
stos
out
pop
lret
pop
mov
sbb
xchg
jmp
mov
ds
rcr
shl
xor
popl
ud0
lods
jnp
mov
jp
mov
lret
ja
jmp
push
jnp
mov
aaa
scas
jp
mov
push
xchg
xlat
jmp
leave
add
rolb
popa
js
out
pop
shrl
mov
pop
iret
pop
jae
xlat
pop
mov
pop
imul
jg
jno
notb
ficoms
lcall
ja
pusha
frstor
mov
addr16
mov
divb
mov
pop
mov
dec
jecxz
sti
out
cltd
fcmovnu
sub
scas
mov
mov
idivl
jg
jns
stos
lcall
aaa
push
sub
xchg
pop
aaa
andl
adc
stos
out
inc
aas
sub
sub
fidivl
sbb
in
popf
pop
idivl
jg
pop
sub
mov
jae
idivl
outsl
xchg
lahf
rol
cmp
testb
pop
push
popa
pop
test
shll
lods
jmp
call
inc
pop
ja
sub
incw
mov
cs
mov
jne
enter
je
mov
movsl
xchg
out
cmpsb
and
leave
inc
adc
push
idivb
test
test
adc
out
pop
iret
adc
fiadds
movsl
cld
sub
addr16
and
jp
adc
xchg
daa
bswap
or
cld
push
mov
inc
gs
ja
adc
pop
push
mov
fistps
in
arpl
repz
sbb
adc
inc
sub
mov
sbb
sub
std
add
imul
xor
fcmovu
mov
arpl
add
das
add
mov
mov
mov
adc
push
push
dec
ljmp
cmp
jmp
daa
repz
sbb
test
jmp
jnp
or
inc
insl
movsl
jo
mov
imul
scas
push
js
das
push
loop
xchg
insb
xlat
xor
fs
loopne
sub
pop
pop
jnp
lahf
mov
adc
aam
inc
clc
cmp
int3
fcomp
xor
mov
out
outsl
cmp
popf
call
push
mov
dec
lahf
mov
xor
movsl
sbb
fiaddl
iret
mov
lahf
dec
mov
arpl
test
jns
adc
add
mov
mov
icebp
cmpsl
push
int
dec
bound
adc
cld
mov
test
jb
pop
sarl
add
out
add
test
movsb
jae
inc
jmp
loop
pusha
mov
fisttps
dec
int3
jne
adc
or
outsb
xchg
mov
adc
jge
dec
and
push
cmp
xor
scas
lock
jo
bound
or
xorb
add
jmp
shrl
mov
imul
jo
lds
inc
ret
ret
or
mov
sub
or
arpl
mov
xor
btc
add
cltd
push
gs
cmpsl
scas
out
std
push
mov
mov
dec
xor
mov
add
lahf
loopne
sbb
xlat
mov
addr16
ret
mov
test
test
mov
jbe
inc
arpl
sub
cmp
add
in
cmp
mov
sub
mov
das
sarl
xor
les
iret
lahf
dec
movsb
sbb
jecxz
or
inc
pop
adcl
lods
adc
mov
adc
sub
test
mov
pop
sub
test
ret
jl
add
or
and
mov
sbb
out
fsubrp
and
out
scas
mov
imul
mov
pop
push
rcrl
scas
add
pop
mov
stc
jae
dec
mov
lcall
xchg
lahf
pop
push
inc
fs
jae
xchg
jnp
in
jg
inc
dec
dec
es
push
aas
cwtl
sub
cmpsb
inc
insb
add
notb
mov
or
pop
aaa
jbe
dec
jno
add
cwtl
insl
cmp
idivb
lods
test
imull
mov
pop
popa
jne
mov
mov
mov
adc
cltd
leave
daa
sbb
gs
imul
jp
push
addl
lahf
test
fidivl
aas
mov
fisubrs
clc
sbb
fstl
jecxz
fucomi
pusha
lea
adc
lret
push
stos
sti
mov
jno
aas
pop
push
test
or
mov
lcall
iret
or
pop
push
jnp
push
fwait
mov
mov
lahf
pop
sub
repnz
lret
xor
movsl
adc
xor
push
cs
or
lahf
mov
fdivl
stos
jp
int
js
adc
mov
pop
icebp
aad
pop
pusha
insl
mov
stos
cmp
pop
mov
sub
leave
das
jp
sarb
cli
or
push
or
ss
jbe
es
push
dec
cs
mov
sbb
inc
cmp
or
cli
adc
or
and
test
int3
jp
das
mov
mov
sub
imull
cmp
insb
sbb
imul
out
aaa
push
lods
into
adc
dec
sub
pop
lods
iret
and
test
arpl
int3
mov
xor
rcrl
lret
cli
push
mov
push
push
push
scas
lret
cmpsl
xor
ss
scas
push
mov
lret
inc
je
mov
repz
xchg
mov
add
add
popf
push
jecxz
xor
and
inc
xchg
cmp
shlb
cltd
pop
in
dec
jb
mov
xchg
dec
mov
daa
mov
ja
ret
push
std
loopne
in
ds
pop
repnz
cs
je
jbe
mov
mov
cmp
in
rcll
cmpsb
imul
jb
xlat
and
cmp
push
adc
xchg
imul
or
loopne,pn
mov
or
lds
fabs
xchg
movsb
test
setb
mov
lahf
push
jne
xchg
lea
jmp
mov
pushf
mov
aam
xlat
xchg
mov
adc
mov
sub
inc
iret
adc
inc
or
test
rolb
mov
pop
into
push
add
movntq
out
fisubrl
mov
add
jp
jmp
add
inc
pop
bnd
or
jmp
bound
out
lahf
inc
mov
xchg
pop
jno
decl
daa
scas
add
and
js
add
lahf
pop
adc
popf
out
adc
sbb
and
rol
dec
dec
sti
dec
or
and
mov
das
aad
mov
mov
cs
inc
fnstcw
mov
clc
or
jbe
fwait
enter
jge
sarl
pusha
sub
pop
pop
jle
test
mov
xchg
stos
cs
icebp
call
cmp
in
sbb
ret
data16
xor
jno
sbb
cwtl
inc
enter
inc
mov
push
pop
mov
push
lcall
sbb
adc
lods
inc
lcall
aad
call
mov
jno
or
xchg
push
ljmp
stos
xor
jae
cmp
mov
mov
adc
mov
ret
jmp
jg
and
or
sbb
inc
xor
mov
jg
xor
out
jp
fcomps
call
ljmp
js
pop
jmp
pop
mov
jne
xchg
int
xor
testl
lret
inc
inc
jne
pop
and
cli
jno
adc
push
jnp
add
movsb
cmp
test
cs
cmc
cmp
scas
jae
shl
shlb
lret
xchg
shrl
cld
movsb
dec
or
cmp
int3
mov
xor
inc
lret
jns
inc
mov
xchg
dec
add
cmp
ret
mov
add
ficoms
jo
clc
pop
add
xlat
aaa
popa
popa
jmp
lods
jp
in
jne
fstpt
out
jge
jbe
iret
xor
cmp
adc
fwait
dec
out
pop
mov
pop
xor
into
xorl
lea
rcr
pop
xchg
mov
fwait
loop
add
int3
test
mov
cmp
and
jns
or
mov
test
xchg
lods
dec
pop
inc
js
data16
sbb
lret
cs
xchg
push
and
out
cmp
rorl
nop
mov
inc
dec
andl
imul
adc
movl
pop
pusha
dec
pop
lret
adc
sbb
ret
loopne
es
add
xlat
adc
cli
std
mov
cmp
pop
cmpsl
outsb
test
hlt
popf
and
pop
aad
pop
test
mov
xor
mov
out
out
sub
mov
or
sti
push
unpcklps
divl
add
daa
adc
jp
repnz
test
cld
ja
lahf
xchg
xchg
jo
pop
in
daa
in
or
fbstp
lahf
mov
adc
ja
addb
jl
jp
mov
fistl
sbb
cmp
js
mov
push
popa
jl
dec
inc
js
cmp
push
int3
xchg
test
sub
push
jns
ljmp
inc
sub
fimull
repnz
sub
jbe
pop
repz
test
stos
ret
mov
gs
cli
mov
mov
adc
push
inc
ret
mov
sti
faddp
mov
lods
in
lahf
xchg
jo
sahf
repz
push
sub
insl
test
and
pop
out
sti
add
mov
int3
mov
ret
test
pushf
mov
lahf
cmc
jle
pop
push
fnstenv
stos
mov
push
into
idivl
daa
jne
add
adc
or
movsl
rcr
mov
int
sbb
insb
orl
xor
leave
clc
mov
out
mov
dec
sbb
stos
dec
or
clc
mov
add
filds
xchg
mov
xor
dec
jnp
jb
push
fmull
mov
daa
or
lret
mov
cmpsb
xor
sbb
insb
mov
and
dec
sbb
or
loopne
or
mov
dec
bound
jne
dec
into
and
leave
outsb
jge
mov
lods
shl
adc
mov
mov
lods
adc
insl
pop
push
ret
xchg
enter
mov
jbe
adc
jbe
out
ss
or
insl
adc
jae
cmp
pop
push
lock
pop
jne
lods
mov
push
add
jge
popf
push
add
outsl
fisttpll
xchg
cmc
adc
mov
xor
pop
adc
xor
add
test
mov
stc
aas
fisubrs
les
lret
in
lods
jns
movsl
insl
divl
jae
cmp
jnp
jo
adc
add
je
enter
ds
movsb
addr16
mov
cmp
jno
sub
decl
lret
inc
out
cmp
popf
or
sub
add
ret
xchg
cmp
shl
cmp
aaa
xor
pop
pop
iret
push
imul
sbb
pop
dec
dec
add
out
pop
sarl
adc
push
out
add
cmp
push
sub
mov
push
mov
cld
lahf
adc
xor
cs
ret
sbb
sbb
pop
cmpb
dec
ds
sub
lret
fldt
in
cltd
xlat
jbe
cmp
cmp
out
int3
push
mov
push
sub
jbe
and
push
fdivr
push
pop
fisttpll
dec
es
dec
mov
cmpsl
dec
xchg
fildl
imul
jb
and
popa
add
ja
lods
arpl
adc
inc
dec
lahf
gs
mov
or
cmp
cmc
pop
mov
fmull
pmulhw
cli
mov
add
and
add
cs
mov
test
fdivrl
std
inc
cmp
dec
xchg
jo
and
mov
mov
jecxz
gs
jecxz
sub
ret
jg
xchg
sti
pop
in
push
mov
inc
and
fisubrs
loope
cmp
pop
divl
bnd
rol
mulb
sbb
data16
adc
leave
push
mov
cli
inc
jmp
xor
subl
dec
and
mov
xchg
scas
inc
notl
loop
insb
imul
mov
dec
in
fsubrs
xor
mov
pop
xor
dec
aad
or
lds
lret
js
push
je
jne
fisubrl
sti
or
mov
pop
je
ret
data16
rcr
ror
cli
fistps
orl
inc
pushl
jge
push
jl
movsb
dec
pop
cmpsb
popa
jo
xor
adcb
sbb
out
fcom
and
sarb
aaa
mov
div
and
mov
ret
imul
mov
inc
imul
aam
pop
aaa
out
mov
cli
xchg
movsb
xor
dec
ljmp
xorb
inc
insb
addr16
pop
arpl
aad
clc
aas
mull
mov
aas
ss
lret
pop
xor
add
jnp
aas
fcmovnu
je
jge
testl
in
pop
jle
icebp
aas
test
bound
pop
mov
scas
addr16
movsb
sub
fisttpl
aas
mov
add
and
pop
inc
pop
sub
push
dec
jnp
cmp
stos
cmpsb
daa
mov
test
mov
jo
push
xor
lahf
sub
cli
lods
aas
push
sarb
stos
loopne
dec
cmp
xor
out
cmp
mov
sysenter
insl
mov
jmp
fisubs
dec
xorl
hlt
push
pop
mov
mov
fdivp
cmp
xor
jge
loope
xor
pop
cmp
lcall
push
pop
aaa
mov
dec
outsb
mov
dec
jno
movsl
in
ret
lcall
lahf
mov
lret
push
xchg
adc
rcll
loop
rcll
nop
mov
sbb
cltd
pop
adcb
in
jp
rorl
mov
push
mov
ficomps
push
jg
pop
dec
xchg
into
jecxz
ds
cmp
add
testb
mov
sub
fistpll
es
je
cmc
daa
push
add
insl
push
mov
lret
inc
es
mov
add
cmpsl
mov
inc
add
and
and
cltd
sarl
mov
jge
addl
negl
cmp
jg
xchg
sub
into
cmp
xchg
jo
inc
pushl
mov
pop
movsl
push
cmp
xor
or
rclb
insb
mov
pop
inc
dec
xchg
cltd
mov
sub
jnp
ficompl
sbb
add
add
stos
in
movsl
push
add
pop
les
xchg
sbb
xor
lahf
mov
fidivl
add
inc
pushf
outsw
filds
imul
add
sbb
insl
fsubs
orl
cmovbe
shrl
decl
xchg
je
ret
or
mov
or
mov
mov
xor
pop
push
push
sahf
mov
add
add
pop
xchg
adc
inc
out
ret
data16
mov
fcomps
and
jg
popa
addl
test
mov
in
push
adc
xor
sub
fisttps
sahf
stc
mov
popa
ljmp
int
or
rcr
jle
mov
cltd
sbb
stos
jno
xor
cwtl
mov
movntq
out
push
mov
push
inc
adcl
xlat
add
adc
filds
fildl
add
sub
or
pop
negl
lcall
push
add
out
les
add
xchg
repnz
xchg
cli
cmp
test
inc
sbb
dec
scas
pop
enter
cmp
sbb
mov
cli
inc
lret
pop
mov
add
movsl
adc
xchg
mov
mov
fsubs
imul
pop
and
sbb
push
in
pop
pop
in
mov
lahf
inc
xlat
push
test
dec
cmp
xlat
fidivs
fs
repz
je
pop
xor
mov
xor
adc
outsb
fisubrs
mov
inc
imul
and
iret
repz
js
aad
loop
cmpsl
ret
mov
cmpl
es
jns
js
add
sub
std
addb
dec
mov
fldt
add
sbb
mov
mov
dec
add
push
ret
dec
lret
aaa
mov
or
push
mov
add
sub
pop
fldl
xor
mov
inc
push
mov
loope
jne
sbb
push
icebp
enter
or
mov
or
popa
ljmp
push
add
jno
test
in
test
mov
rcrb
dec
in
sbb
bound
jae
int3
popf
push
addr16
repz
cmc
movsb
insb
mov
push
daa
lods
pop
in
jmp
cmp
rorl
ja
lock
in
aam
sub
jp
test
mov
xor
push
mov
popf
pop
dec
ret
scas
roll
adc
scas
pop
push
movsl
xor
xor
pop
inc
cmp
mov
cmpsl
lahf
out
lar
pop
daa
mov
ror
xor
aas
inc
mov
push
decb
inc
cmp
rcrb
sbb
idivb
popf
pop
stc
mov
and
movsb
mov
popf
das
rcrb
ret
in
sahf
in
lea
lods
ret
or
nop
add
ror
push
repnz
mov
int
xchg
xchg
divb
xlat
inc
scas
adc
cmpsl
std
jg
test
mov
dec
sub
lret
in
outsl
ret
popf
stos
and
call
xor
jmp
or
push
dec
outsl
sahf
cmp
enter
pop
push
jno
mov
stc
mov
jmp
lret
icebp
mov
iret
in
inc
mov
imul
js
dec
icebp
subl
add
dec
inc
mov
das
sub
sub
jne
jle
mov
dec
shll
loopne
ds
or
dec
xor
lds
lahf
inc
cli
hlt
movsl
das
xchg
int
dec
pop
je
mov
decb
and
aad
mov
or
pop
fdiv
insb
nop
jne
loopne
jmp
cld
cmp
into
sub
cmp
test
int3
push
lahf
lea
lcall
cmpsl
push
lds
sbb
xlat
aaa
fldenv
jo
push
sarl
test
subb
jg
add
test
adc
push
ss
ja
adc
test
enter
xor
std
test
fcmovb
dec
repnz
lahf
inc
sbb
push
lods
fdivs
loopne
dec
and
push
ja
sti
inc
push
je
aas
sahf
add
cmp
lods
cmpsl
repnz
or
jge
fldenv
std
sub
loope
pop
fistps
and
fnstcw
jg
movsl
outsl
dec
pop
sti
mov
mov
clc
pop
push
sbb
test
aad
mov
cmpsb
jl
or
out
lahf
test
push
lret
int3
pop
cld
ret
adc
adc
pusha
in
dec
add
dec
lea
lret
mov
mov
addr16
fdiv
sbb
loop
shrl
mov
and
lock
mov
jge
xor
jnp
sub
leave
addr16
fcoms
fidivs
imul
push
iret
xchg
sub
in
fdivp
mov
jns
jg
arpl
inc
ret
jo
mov
clc
mov
jbe
or
jmp
push
xchg
aas
inc
add
outsl
add
mov
push
stc
es
and
popa
xchg
fdivl
mov
imull
pop
xor
xor
xchg
mov
lahf
push
mov
outsb
nop
subl
rol
xor
adc
mov
cli
xchg
movsb
push
pop
inc
jle
xchg
in
pop
outsb
outsl
loop
pop
pop
repnz
lods
mov
jp
ret
inc
mov
dec
popf
mov
test
jns
push
inc
stc
fimuls
leave
mov
mov
sarl
xchg
shlb
add
sahf
cmp
leave
jne
inc
or
mov
xor
jecxz
int
aas
stos
xchg
out
jge
xor
xor
mov
jo
push
call
scas
ljmp
cltd
iret
push
test
inc
mov
adc
xor
jno
lahf
xor
pop
adc
jnp
fcmovnbe
jge
pop
jge
dec
hlt
adc
cltd
push
ja
and
in
jmp
cld
inc
out
negb
das
cmp
arpl
inc
into
push
push
leave
outsl
orl
cmp
stc
and
mov
sbb
imulb
xor
cmp
lret
es
in
mov
or
dec
dec
fidivs
outsl
fsubs
bound
push
xchg
js
and
arpl
fcmovnbe
lcall
or
lret
mov
jbe
or
stc
push
or
or
xchg
in
dec
fisubrl
lret
xchg
sbb
sahf
dec
std
addr16
scas
fwait
movzwl
pop
mov
mov
inc
and
leave
adc
out
inc
aam
cmp
loopne
mov
or
mov
inc
shl
das
ret
jne
pop
add
lahf
sub
jne
call
dec
xchg
out
testl
jg
nopl
push
xor
sbb
lds
or
mov
pop
cli
mov
mov
dec
cmp
add
cs
jge
adc
add
inc
cli
pop
or
rcrl
cmc
push
pop
pop
adc
jge
fnstsw
add
out
outsb
lds
jmp
shlb
jmp
inc
pusha
insl
aas
cmp
xchg
and
cmpsb
push
mov
or
mov
and
cltd
ja
mov
lods
pop
pop
or
xlat
jg
pop
mov
sbb
stc
xor
ljmp
and
das
mov
fsts
sbb
cs
mov
test
adc
stc
out
outsl
pop
rcr
mov
ret
push
push
cmp
fdiv
mov
xchg
push
dec
inc
sub
dec
ret
jae
imul
repnz
aas
jmp
cs
loop
imul
xor
je
inc
seto
xchg
ljmp
out
and
fdivr
ret
lahf
mov
add
insl
std
xchg
mov
mov
sbb
add
xchg
inc
sbb
fidivs
xchg
jno
outsb
sbb
inc
out
xorl
push
xchg
in
scas
jns
jne
out
ds
mov
fnstsw
imul
sub
mov
pop
movb
movsl
xchg
jns
sarb
jmp
adc
or
mov
pop
push
lock
xchg
scas
xchg
popf
adcl
in
or
jb
imul
jo
add
lret
inc
pop
dec
aad
into
lods
insl
sbb
fdivrp
ret
mov
hlt
fisttps
adc
pushl
insl
cmp
mov
sbb
sbb
pop
fmuls
or
je
imul
imul
sbb
or
es
sbb
mov
push
stos
roll
mov
fwait
cli
hlt
lahf
sbb
fsubs
xchg
jle
dec
inc
inc
das
push
mov
sub
mov
lret
cmp
xor
jl
daa
data16
insl
xchg
pusha
sarl
shr
mov
mov
lods
lret
loope
pop
mov
subl
leave
jle
insl
jo
lahf
xor
mov
xlat
ret
scas
adc
ljmp
test
pop
packssdw
imul
add
je
lock
add
notl
adc
lds
mov
cmp
inc
push
jo
loope
dec
push
mov
rorl
test
mov
imul
sbb
push
les
arpl
adc
and
add
xor
sub
test
pop
jge
jle
leave
outsb
mov
lret
rcll
lock
popf
cmp
arpl
inc
lods
add
pop
mov
fwait
je
mov
and
jbe
jo
sbb
andb
sub
dec
insl
adc
mov
adc
jbe
cli
add
push
sbb
dec
cmp
fidivrs
lea
test
daa
mov
and
xchg
fldcw
or
std
mov
imul
das
jg
test
inc
jne
add
daa
mov
inc
pop
cmp
jmp
lcall
idivl
nop
fdivp
out
pop
fmuls
dec
lahf
test
ret
xchg
aam
mov
jg
aaa
fstps
sbb
mov
or
test
lret
ds
fmull
into
xchg
jns
jecxz
mov
das
iret
scas
cmpsb
sub
scas
xorl
and
xor
pop
sbb
jle
out
inc
xlat
bound
inc
icebp
loopne
and
sbb
es
test
mov
mov
ljmp
movsb
adc
cmc
std
outsb
daa
or
fistps
leave
inc
fstl
adc
mov
cmp
out
pop
stos
popa
mov
outsl
fsubr
adc
jne
lds
sbb
fcmovb
les
stc
jbe
mov
pop
pop
xor
and
ja
insb
add
ja
ffreep
inc
pop
push
notl
cmpl
mov
and
add
ljmp
lods
inc
ja
lahf
xor
cmpl
or
xor
dec
xlat
sbb
das
rolb
popa
sbb
hlt
sub
pop
fcom
stos
popa
and
fidivs
out
fisubs
les
fimull
inc
pop
gs
jmp
int
jmp
xor
inc
pop
in
cmpsl
ret
ds
orb
jo
push
xor
or
adc
jnp
xchg
out
hlt
and
xor
or
cmp
fidivrs
dec
repnz
pop
mov
imul
jp
aad
adc
xchg
icebp
nop
pop
pop
or
lret
jne
add
push
ficoml
fwait
jle
inc
movsl
inc
mov
ret
xchg
cmp
sbbb
daa
mov
jo
andb
cmp
mov
mov
xor
sub
mov
ret
push
pop
loope
imul
pop
pop
xchg
and
aam
imul
push
hlt
test
or
or
mov
add
push
and
negl
bound
pop
mov
js
cmc
arpl
movsl
cmpsl
cmp
mov
or
cmp
push
ror
push
daa
mov
or
movsb
mov
fwait
mov
das
and
xlat
jnp
das
int3
or
push
or
pop
and
jge
add
and
and
shll
xchg
add
or
and
aad
jo
mov
adc
dec
cli
jne
call
jns
inc
adc
inc
stos
mov
fisubl
test
push
enter
dec
in
lahf
insb
cmpsl
lcall
imul
push
dec
arpl
aas
dec
fld
mov
fidivrs
cmp
pop
dec
in
mov
push
add
out
mov
mov
cmpsb
push
dec
clc
add
cmc
test
mov
das
adc
and
adc
imul
mov
aas
cltd
iret
mov
mov
fadds
ret
fnsave
stos
loopne
jne
mov
cs
out
into
pop
jb
adc
jnp
out
add
movsb
xor
sub
mov
je
xor
subl
out
push
mov
sbb
add
mov
xorl
push
jnp
and
inc
std
dec
mov
sbb
sbb
test
push
mov
call
mov
mov
mov
pop
hlt
pop
mov
cmp
aam
adc
jecxz
sti
ret
bound
fidivrs
test
cltd
rol
andl
aad
mov
push
mov
dec
or
inc
std
in
push
xor
ja
pop
mov
push
push
mov
rcl
arpl
and
fmuls
fwait
sti
xchg
movl
cmpsl
adc
sub
sbb
mov
mov
in
rorl
adc
lahf
ja
or
pop
arpl
push
pop
fiadds
nop
pop
cmp
xchg
movsb
popf
jo
add
mull
test
shrl
std
sarl
mov
xlat
mov
lds
imul
push
nop
xchg
adc
sub
addl
pop
icebp
out
das
jnp
pop
pop
loope
imul
pushf
sub
ficompl
imull
cmpsl
bt
sahf
xor
cltd
cmpsl
add
jae
lea
xchg
je
sbb
es
sub
loopne
mov
out
add
flds
pop
ret
repz
add
or
cmpsl
testl
bound
lret
cltd
out
mov
mov
dec
loop
loope
cmpsl
movsb
dec
inc
push
jmp
mov
out
mov
jnp
loop
lods
lret
dec
repz
push
push
ficomps
imul
cltd
popf
nop
inc
fldt
popf
sub
push
shlb
test
aad
mov
iret
cltd
daa
pop
ja
xchg
push
scas
neg
mov
hlt
lret
inc
xor
cmc
and
sbb
fdivs
sbb
xor
pop
test
sbb
xchg
cltd
test
xchg
pop
mov
sbb
fildl
adc
fdivp
sahf
mov
ja
add
out
stc
jae
in
inc
cwtl
and
stc
movsb
icebp
sbb
lds
hlt
test
sarl
mov
xchg
pop
sub
divb
fistps
data16
mov
jns
stc
sub
push
dec
repnz
lock
pushf
dec
aam
cli
mov
arpl
or
xor
mov
btr
jo
cmc
daa
sub
push
popf
divb
xlat
bswap
out
and
pop
mov
xor
jne
or
mov
fmuls
dec
add
nop
jb
addr16
jecxz
jmp
pop
cltd
adc
push
inc
loope
scas
adc
jnp
test
xlat
into
jecxz
adc
sub
jl
or
xor
ficomps
fldl
in
and
dec
fwait
shl
movsl
pop
ret
mov
pop
leave
mulb
iret
lahf
out
lods
or
push
aas
rep
cs
push
mov
xchg
mov
sub
lods
pop
int3
xchg
imul
cmp
or
les
lods
cmpsl
ds
imul
mov
push
mov
mov
pop
imul
aam
xchg
bound
xchg
push
je
aaa
sti
push
test
push
ljmp
sbb
ljmp
loop
inc
push
mov
lods
and
mov
and
outsl
and
out
sbb
mov
sbb
sbb
and
fld
cli
mov
ljmp
cwtl
jae
mov
sbb
mov
pop
cmp
adc
iret
les
jge
out
add
jmp
shrb
inc
push
pop
or
xchg
mov
pop
sbb
sub
mov
dec
xor
arpl
sub
iret
and
out
lahf
ljmp
daa
outsl
out
or
pop
mov
clc
sbb
int
inc
mov
and
ds
lahf
mov
insb
arpl
pushl
cmp
jmp
ds
and
or
push
lds
fwait
sub
hlt
cwtl
cmp
mov
test
dec
test
pop
pop
xchg
cmpsl
das
loopne
fmuls
lods
sbb
pop
inc
jbe
mov
repz
sbb
mov
repnz
call
adc
fcmovbe
ret
test
add
push
enter
das
jmp
lahf
test
outsb
lods
adc
lret
mov
or
fs
mov
lds
popa
cwtl
jg
pop
mov
ret
mov
fistl
std
leave
mov
lea
movl
cmp
sub
hlt
outsl
loopne
lahf
xcrypt-cfb
cmpsl
jecxz
shrl
or
fstl
aam
ds
mul
repz
stos
js
addr16
adc
int
push
jbe
dec
fwait
jae
jle
cmpsl
pop
sub
ret
xchg
cmp
dec
mov
imul
into
mov
push
mov
mov
lret
cmp
clc
push
imul
mull
pop
xchg
sbb
cmp
mov
xor
adc
leave
out
mov
xor
adc
jmp
dec
adc
ret
sub
and
lret
iret
les
cmp
jns
test
cmpsl
in
pop
or
ret
divl
imul
dec
xlat
loopne
push
mov
and
lds
pop
pop
adc
dec
push
decl
stos
rolb
cmp
cli
mov
mov
xchg
xor
jecxz
dec
pop
out
lea
and
mov
add
adc
push
out
je
and
adc
mov
fwait
aas
lods
sbb
into
jb
test
pop
daa
sbb
in
loope
lcall
mov
rcrl
xchg
stos
mov
outsb
or
mov
pop
jl
imul
push
hlt
jecxz
mov
sbb
or
jle
lahf
sbb
shll
cltd
mov
ret
push
push
or
cs
pop
loopne
rorl
insb
sbb
insl
adc
cmp
and
pop
add
ss
mov
inc
mov
xchg
popf
add
fildl
ljmp
test
push
cmc
or
push
aam
ds
sbb
test
repnz
repz
add
cmpsb
fimull
mov
adc
movsb
mov
stos
ss
movsb
fnstcw
mov
in
sti
jge
jp
arpl
and
subl
add
mov
sbb
mov
cli
dec
pop
xlat
push
ret
sub
add
mov
mov
inc
add
lds
test
xor
jnp
sub
out
jg
mov
addr16
decb
xchg
sbb
and
or
ds
fisubs
fdivrs
shlb
iret
hlt
or
push
fst
testl
dec
js,pn
movsl
lods
add
sbb
jno
fld
cli
outsl
mov
xor
roll
cltd
fwait
mov
xchg
push
adc
movsb
adc
lret
daa
mov
test
add
xchg
xor
sub
jecxz
xor
outsb
loop
popf
fnstcw
sbb
jg
imul
les
add
jns
pusha
mov
pop
fsts
dec
pop
cmp
adc
sti
test
sti
cmp
push
push
int
mov
sahf
repz
dec
das
jle
jnp
mov
push
lret
cwtl
and
test
stos
mov
pop
ret
filds
jge
cli
sbb
hlt
not
rcll
xchg
push
test
rorb
std
jmp
jge
ja
sub
sbb
arpl
mov
test
adc
sub
es
outsb
in
movsb
sub
pop
pop
sahf
es
xchg
out
dec
data16
out
push
jp
inc
inc
or
xorb
mov
js
mov
popf
xchg
add
lahf
mov
dec
adc
add
push
xchg
std
cmpb
cli
inc
les
ljmp
jb
add
gs
pop
inc
mov
dec
in
pop
sti
mov
lods
pop
push
push
cmp
mov
in
cmp
imul
scas
adc
lret
jg
xchg
stos
mov
mov
and
push
or
mov
ret
xor
dec
loopne
add
cltd
push
icebp
mov
lock
shll
arpl
mov
pop
push
dec
fistpll
repz
sub
mov
dec
sbb
dec
mov
aas
rorb
cmpsl
mov
adc
icebp
xchg
pop
fidivrs
and
mov
cmp
mov
xchg
adc
ret
maskmovq
inc
popa
mov
lahf
xchg
mov
pop
fcoms
xchg
push
push
jg
cmp
xlat
mov
lds
pop
dec
jo
out
lahf
jge
mov
mov
mov
mov
jno
outsb
popf
testl
jmp
jmp
cmpsb
mov
push
inc
add
std
or
in
mov
pop
dec
jb
cmpsl
mov
out
push
push
xchg
ss
fildll
pop
mov
xlat
mov
inc
fucomip
bound
rcr
dec
enter
sbb
repz
fisubrs
pop
fcmovu
ret
adc
arpl
pop
sti
xor
sarb
pop
xor
mov
lods
add
lds
imull
push
push
inc
push
and
andl
cs
pop
jb
pop
ljmp
hlt
pop
jecxz
ret
lea
mov
jnp
push
jbe
and
mov
mov
and
cs
lahf
fnstenv
sub
lcall
call
adc
jnp
imul
or
insb
mov
pop
stos
imul
addb
xor
mov
rol
push
cmp
movsb
fadd
add
shrl
mov
and
lahf
inc
adc
xlat
xorl
popa
dec
sbb
iret
adc
mov
outsl
sbb
dec
jg
test
xlat
movsl
popf
lods
add
insl
xor
test
inc
loope
pop
in
sub
push
cmp
add
cwtl
sbb
push
or
push
setnp
xor
jnp
in
pop
sub
adc
lret
xchg
out
mov
arpl
jp
lret
dec
pop
dec
cmpsb
or
or
cs
or
mov
cmp
andb
jp
or
movsl
cmp
and
nop
mov
mov
mov
jnp
push
insl
sub
cltd
inc
adc
or
je
sbb
nop
cmp
cmc
imul
adc
pop
mov
or
lahf
ds
cli
mov
jle
sub
jnp
popa
cmp
xor
jecxz
iret
cmpsl
nop
stos
pop
lods
pop
cmp
push
sub
aam
cwtl
jle
or
adc
sarl
popa
mov
rcrb
repnz
lods
stc
or
jb
shll
popa
add
or
lock
sti
ret
ret
jb
mov
push
movsl
mov
push
movsb
aad
in
push
fistpl
mov
jmp
adc
outsb
adc
subl
mov
pop
in
cmp
iret
std
int3
xlat
cld
cmpb
pop
xlat
imul
lahf
xchg
fwait
in
pop
adc
push
jmp
hlt
arpl
cmp
jp
adc
outsl
inc
pop
sub
mov
push
outsb
loopne
jl
mov
cmp
lea
mov
jge
pop
adc
out
pop
mov
pop
test
pop
movsl
lret
jns
xchg
insb
lahf
adc
mov
push
dec
cli
xchg
icebp
and
fistps
xchg
pop
sub
test
sbbb
mov
int3
push
lret
sbb
pop
inc
sub
push
pop
inc
mov
daa
lret
cmpsb
adc
popf
fistps
adc
js
dec
inc
jns
mov
inc
mov
sub
ret
jmp
cmp
ret
sub
cmp
sub
pop
lods
nop
push
push
jne
ret
mov
mov
lret
mov
mov
pop
jp
inc
lret
pop
mov
mov
aaa
out
cmp
or
cli
and
push
movsl
inc
mov
lret
adc
inc
stc
mov
jae
fsub
dec
sti
jae,pt
or
cmp
mov
test
mov
pop
shll
pop
xchg
ljmp
push
dec
cmp
and
sub
cmc
xchg
mov
jnp
push
xor
cmp
cmpsl
fmul
outsl
orb
fnstenv
pop
sbb
sub
xor
ret
in
pop
lock
pop
jmp
sbb
jb
cmpsl
jge
leave
mov
cmpsb
push
xor
sbb
mov
jp
xlat
inc
lds
adc
clc
imul
mov
pushf
jbe
out
and
xchg
movsb
mov
pop
mov
insb
mov
repnz
push
jne
jle
jle
dec
dec
cmp
add
dec
movsb
cmpsb
adc
cmp
and
sbb
ret
dec
mov
popf
pop
xor
or
pop
sbb
lods
fisttpl
pop
cmpsl
bound
in
insb
mov
bound
sub
test
jae
xchg
pop
clc
pop
aaa
imul
out
mov
mov
sbb
pop
je
mov
int3
inc
mov
jecxz
adc
fs
pop
outsb
test
sbb
cli
rorl
imul
inc
mov
push
cmp
test
xchg
cli
adc
rolb
mov
out
icebp
mov
mov
mov
cli
mov
arpl
or
sbb
dec
stos
push
mov
mov
cmp
pop
push
stos
or
xor
mov
icebp
ret
sbb
mov
test
pop
out
push
call
loopne
push
jb
jno
mov
out
andb
xor
jle
roll
loop
push
xchg
inc
pusha
mov
sub
push
jns
mov
jae
jg
and
mov
adc
cld
lahf
mov
fildl
es
cmp
lods
call
dec
lds
aad
cwtl
jo
ret
xor
adc
iret
das
fwait
call
call
adc
in
lahf
push
mov
xchg
jge
addr16
jecxz
arpl
addr16
inc
fisubrl
popa
shlb
cmpsl
add
enter
or
les
push
rcrl
popf
xchg
shrb
cmp
jge
lods
xor
push
mov
es
and
inc
pop
add
rcll
ss
in
xlat
out
and
push
xchg
pop
imul
es
dec
jge
into
bound
xchg
and
js
lds
movsb
pop
ds
or
dec
arpl
adc
enter
sbb
jae
cmc
mov
repnz
sub
jge
mov
push
push
fildll
ja
mov
push
pop
mov
aas
dec
popf
sub
outsb
and
push
or
push
lret
or
jb
outsl
pop
sbb
xor
xor
movsb
sti
retw
lds
cmp
aad
and
push
xor
pop
or
rcll
mov
daa
das
dec
inc
jns
out
adc
scas
jnp
outsl
jne
sbb
testb
adc
mov
sahf
pop
in
ss
test
push
mov
xchg
aaa
or
mov
bound
cmpb
mov
test
ret
in
je
pop
add
arpl
jnp
sub
shll
cmpsb
xor
sahf
xchg
pop
lahf
pusha
cmpsb
push
lret
jne
mov
test
lcall
mov
xchg
pop
popa
mov
into
cmpsb
cltd
add
lock
cld
iret
ret
rorl
scas
aaa
es
jge
shld
and
insl
pop
pop
fisttpl
push
inc
push
and
adc
outsb
lds
mov
push
mov
or
jb
sbb
ret
pop
cmp
or
or
jp
pop
icebp
std
xlat
aam
xorl
and
mov
cs
ret
xchg
in
ret
add
movsb
pop
mov
sub
nop
mov
jo
andb
sub
mov
xchg
shrl
push
rcr
addr16
cmp
adc
roll
xor
and
aad
mov
leave
jae
or
jne
loop
out
adc
fisubrs
cmpsl
push
push
and
dec
push
repnz
jo
mov
add
fidivrs
fildl
bnd
xor
mov
sbb
xchg
fadd
pushf
cltd
mov
aas
pop
std
mov
sbb
dec
inc
dec
mov
mov
mov
dec
bound
out
cs
sub
movsl
and
and
mov
insb
es
inc
jmp
ja
inc
les
cmpsl
xchg
pop
shr
in
mov
addr16
lahf
cmp
sbb
cmp
outsb
inc
jle
sbb
ja
shlb
out
mov
add
mov
mov
mov
imul
aas
iret
xchg
xor
cwtl
repz
mov
adc
or
jg
push
lods
addb
pop
out
or
mov
xchg
push
mov
adc
movsl
ret
xadd
mov
cltd
xchg
insl
mov
push
and
jbe
loope
mov
lods
ret
scas
jmp
mov
adc
outsl
pop
jmp
sbb
cmp
add
je
cli
pop
lcall
lds
data16
jo
adc
scas
cmp
imul
adc
jbe
subb
lds
mov
pop
xchg
pop
jae
cwtl
popf
add
mov
insb
aam
and
ret
ds
ds
mov
lret
mov
adc
pop
rcrb
jne
stos
test
test
push
xor
call
sub
test
adc
test
xchg
pop
imul
mov
cmc
jp
scas
lods
sub
jne
adc
or
arpl
dec
sub
out
mov
pop
fidivrl
jne
mov
and
test
mov
and
inc
jg
adc
lods
or
daa
mov
dec
outsb
mov
movsl
loop
ljmp
jp
mov
aas
stos
xor
cwtl
pop
push
ja
fwait
pop
movsl
rcll
and
sub
adc
sub
lret
movsl
mov
adc
ret
jno
mov
adc
addb
adc
pop
fsubrs
cmp
ret
cmpsl
inc
pop
cld
repz
fstp
jne
cmp
pop
test
or
or
imul
imul
sar
cmp
adc
subl
xchg
push
loopne
ljmp
jg
inc
xchg
out
vxorps
outsl
xchg
shrb
test
pop
sub
aas
mov
xchg
mov
rolb
mov
fldenv
mov
push
push
mov
stc
mov
push
jmp
icebp
dec
fldcw
push
rcr
fucomip
addr16
imul
cmpsb
imul
mov
mov
mov
insb
fidivl
sub
or
scas
pop
es
imul
ss
sub
dec
rcl
add
adc
adc
jg
mov
data16
les
repz
mov
sbbb
add
mov
mov
cmpsl
jmp
imul
mov
push
mov
scas
repz
and
mov
outsl
adc
into
jmp
lahf
add
inc
popa
push
mov
pop
or
mov
in
fisttpl
add
enter
sbb
mov
punpckhwd
xchg
dec
sub
daa
pop
subl
sub
mov
loop
lahf
fimuls
scas
adc
inc
cmp
in
xor
jecxz
pop
push
das
fidivrl
add
stos
jmp
mov
test
scas
lds
sbb
xchg
aam
ljmp
fs
test
cli
xlat
xorb
jp
js
or
test
sbb
ficoml
jmp
mov
jns
stos
push
sub
fadds
ja
jnp
sub
cwtl
pop
push
adc
inc
fcoms
sbb
lcall
ret
push
fs
add
xchg
pusha
ret
shlb
in
and
pop
or
out
outsb
dec
and
jns
cmp
fldenv
cs
push
movsl
lahf
cltd
inc
divb
sbb
lods
mov
out
xchg
imul
cltd
pusha
add
inc
in
roll
cli
shrl
and
fstpl
mov
pushf
clc
push
jmp
push
or
lods
pop
xor
xor
out
fwait
insl
ljmp
outsb
sti
mov
shl
inc
adc
mov
add
ret
ret
push
fldcw
jo
sbb
lods
scas
adc
xchg
mov
pop
sub
pop
or
sbb
rorl
ljmp
jecxz
shrl
popa
mov
pop
aas
lods
add
mov
pop
mov
cmp
int3
push
sarb
insl
subl
inc
jp
mov
mov
or
xchg
cmpsb
ret
divb
das
les
loope
loope
sbb
push
repnz
push
scas
lock
out
xor
inc
jge
xor
je
insb
xor
xor
test
xlat
mov
adc
dec
in
pop
mov
mov
fmul
push
cmp
adc
push
aad
fcompl
pop
jns
in
lahf
fnstsw
sub
sub
push
mov
mov
loop
push
xor
aad
popf
xor
or
and
mov
add
jge
out
pop
loop
ret
pop
xchg
mov
mov
jg
lods
and
imul
sbb
test
cwtl
inc
je
lahf
mov
insb
xorl
adc
mov
enter
test
inc
add
pushf
bnd
mov
fdivrp
insb
cwtl
push
inc
fldenv
push
and
sub
fadds
test
fisubrs
call
lock
outsb
pusha
cmp
punpckhbw
inc
data16
dec
popf
jbe
negl
inc
aas
aas
mov
loopne
mov
mov
lahf
out
pop
jae
fmul
mov
push
lods
test
push
jne
je
add
push
scas
dec
mov
jno
jnp
test
dec
lods
iret
rorl
repnz
stos
stos
mov
push
cmpsb
xchg
jecxz
pop
ljmp
xor
jne
lret
cmp
push
push
xorl
in
push
je
xlat
lea
insb
popa
jmp
add
adc
pop
sbbl
xor
add
loopne
pushf
arpl
sbb
ret
push
out
das
cmp
stos
in
pop
out
dec
arpl
aam
out
jg
adc
sub
mov
shlb
bound
adc
pop
mov
xchg
or
adc
push
ds
int3
pop
mov
lret
pop
outsb
jle
repz
xchg
movsl
pop
pusha
mov
cmpsl
push
ret
mov
push
push
xor
jne
xchg
insl
mov
push
jecxz
and
outsl
mov
dec
mov
xor
cmpsl
jecxz
adc
pop
dec
sub
inc
push
jle
xor
push
test
pop
adc
mov
clc
xchg
xor
xor
scas
stos
out
mov
stc
inc
mov
pop
insb
mov
xchg
inc
sbb
mov
cmpsb
cmp
aas
adc
ja
insb
cs
sti
and
push
dec
stos
xor
ljmp
fs
jne,pt
mov
ror
cld
int3
ret
sub
insb
pop
sub
cmpsl
mov
imul
adc
test
pop
and
jbe
jns
dec
cltd
nop
das
psubw
pop
jmp
sbb
pop
mov
jnp
aas
add
add
sub
fcmovnb
insb
imul
insl
sbb
aas
inc
out
sbb
mov
mov
jns
inc
shlb
popf
loop
cli
jmp
inc
mov
sti
dec
mov
push
xchg
xchg
out
adc
cld
ss
lahf
lret
xlat
or
pop
gs
aas
adc
jb
jbe
jns
lret
in
idivb
popa
nop
xor
lods
mov
das
lea
ja
lret
jg
inc
or
sbb
add
jnp
or
stos
mov
test
push
rcrb
add
daa
dec
sbb
loope
pop
lahf
xor
pop
adc
mulb
sbb
hlt
xor
push
mov
pop
inc
cmp
mov
lock
movl
and
imul
dec
or
dec
and
fcmovnbe
scas
pop
bsr
cmc
pop
in
mov
and
icebp
jbe
mov
stc
sbb
or
iret
or
fadd
xchg
or
fsubr
inc
jmp
xor
pop
ret
push
ror
stos
scas
cmp
mov
cld
xor
testl
mov
inc
adc
cmp
adc
jo
adc
mov
cmpsl
cmp
rcrb
imull
repz
adc
mov
sbb
scas
pop
push
lods
sub
sub
lods
lcall
fnstsw
dec
pop
hlt
pop
cmp
or
push
xor
sbb
adc
out
mov
pop
mov
mov
movzwl
cltd
and
shrb
cmp
inc
inc
xor
scas
jo
mov
mov
out
push
inc
sub
int3
cmp
xchg
cmc
push
aas
aam
mov
mov
mov
mov
aas
xchg
mov
imull
jns
imul
das
fistpll
aas
mov
rcrl
pushf
repz
clflush
cmp
cmp
xor
loop
imul
fbstp
mov
shlb
lahf
in
out
mov
ljmp
jg
xchg
mov
push
xor
insl
idivl
stos
iret
test
fisttps
add
mov
jns
scas
jge
xlat
arpl
sub
xlat
divl
outsl
cmp
pop
icebp
xchg
cmp
inc
mov
out
jp
pop
out
out
cmp
pop
test
daa
pop
not
mov
jg
in
jp
pop
jb
das
inc
xor
fcmovne
in
sub
lahf
jp
lahf
push
jg
aam
lret
pop
filds
sub
negb
loop
push
xchg
lret
fcmovne
jmp
fisubl
push
out
xchg
jns
xchg
out
xchg
sub
daa
sub
sub
jns
xchg
punpckhdq
dec
jnp
bound
out
cmp
xchg
jae
jmp
imul
jns
loop
scas
int
push
mov
lahf
lret
jg
clc
mov
pop
pop
mov
bound
xchg
and
jp
mov
xor
sub
popa
xchg
iret
ja
jp
lahf
xor
xor
ja
daa
jnp
popf
dec
xlat
push
aaa
bound
arpl
mov
das
loop
jb
lret
lret
pop
iret
mov
sti
inc
bound
cltd
inc
in
mov
lahf
loope
dec
cmp
pop
sbb
rcl
fcmovbe
sub
adc
add
or
mov
or
jp
in
xor
cmc
mov
mov
in
xor
shl
sub
lods
mov
adc
xchg
mov
out
xor
test
pop
aam
aas
nop
ret
cs
or
adc
inc
icebp
adc
lahf
and
test
pusha
out
lods
sbb
adc
push
pop
inc
ljmp
xchg
insb
sbb
pop
lcall
pop
dec
cld
xor
arpl
mov
orps
cmpsl
jmp
add
movsb
movsb
mov
stc
jno
inc
lret
push
fisttps
inc
push
in
mov
stc
dec
push
xchg
iret
adc
je
pop
pushf
es
mov
addr16
or
ljmp
add
and
sti
addr16
dec
dec
iret
jo
adc
xchg
fsubrl
cmp
add
out
pop
mov
test
loop
cmpsl
mov
push
mov
xor
pop
iret
lds
cmpsb
sub
xor
imul
es
pop
inc
aas
cld
add
mov
adc
add
dec
lods
pop
cwtl
fwait
push
xor
outsb
or
mov
sti
enter
cwtl
cmp
aam
insb
push
je
sbb
pop
add
popf
hlt
mov
cs
out
pushf
imul
add
dec
mov
clc
mov
nop
pop
ljmp
mov
call
pop
punpckhwd
mov
push
sub
arpl
jns
mov
cmpsl
dec
je
orb
cld
mov
sub
iret
xor
jnp
jg
cmp
pushf
mov
mov
adc
pushf
lock
daa
std
lret
incl
insl
xchg
jns
cmp
mov
in
lret
imul
cmp
lds
ret
aam
pop
add
mull
lock
incl
mov
lret
cmp
sbb
frstor
adc
inc
mov
stc
pop
ret
mov
sub
mov
jne
ret
pop
in
push
xor
dec
cmp
mov
repz
pop
xchg
arpl
sti
mov
out
iret
pop
pop
jg
inc
push
mov
mov
imul
notl
pop
dec
hlt
cmp
lcall
aam
sub
shrl
enter
xchg
lret
outsb
jmp
repz
xchg
jp
aad
mov
insb
jmp
imul
mov
pop
mov
jo
push
xchg
xor
push
inc
add
shr
xchg
jne
dec
aam
or
out
sub
pop
adc
xor
mov
lret
pushl
sub
pop
in
mov
ret
aaa
lods
push
inc
or
outsl
sub
push
fstp
and
in
jmp
ret
outsb
bnd
inc
xchg
js
popf
lock
je
insb
jge
or
inc
test
xlat
repnz
add
mov
lahf
pop
pop
das
fbstp
dec
lahf
daa
mov
xorl
adc
aas
push
mov
testb
cld
mov
and
jmp
and
sarb
mov
mov
data16
fisubrs
andb
sub
out
cmp
jne
fists
add
fldenv
fldt
ret
adc
push
inc
test
aas
push
ja
scas
cmpsb
pop
lret
fisubrs
ficomps
imul
adc
xorl
rolb
ja
lcall
dec
jg
xor
xchg
xchg
outsl
or
mov
hlt
fisubs
inc
fiadds
mov
push
adc
cmp
or
dec
jno
test
fchs
sbb
adc
dec
push
cli
rcrl
pop
lcall
mov
and
lock
jg
les
dec
or
pop
mov
push
jne
js,pt
lods
stc
mov
test
add
pop
xchg
or
xor
jne
movsl
xor
ret
cld
jg
sarb
cmp
dec
call
pop
jmp
adc
mov
lret
adc
or
lods
ror
jae
push
outsl
pop
jae
les
mov
fiadds
cmpsl
sarl
mov
ret
mov
xchg
push
jmp
cltd
or
mov
jne
ja
xor
inc
ljmp
adc
push
mov
loopne
pushf
movsl
and
push
enter
inc
pop
cmp
pop
xchg
lahf
mov
insl
adc
push
push
divb
add
pop
or
fsubp
icebp
jae
cmp
inc
xlat
mov
pop
push
inc
push
dec
pop
jg
jnp
adc
insb
inc
xchg
xchg
pop
lret
mov
adc
pop
repnz
sbb
mov
lods
adc
jmp
int3
cmp
push
popa
xchg
out
cmp
sbb
out
scas
or
pop
in
mov
das
mov
lods
shll
jg
mov
out
aad
subl
mov
idivb
idiv
lahf
fists
imul
repz
mov
xor
jb
decl
sbb
mov
loopne
loopne
jle
lcall
push
cmpsl
cmp
das
shrl
lods
arpl
test
adc
out
rorb
insl
mov
addr16
test
fcomip
xor
inc
jp
sub
and
lahf
cmpsl
jbe
iret
in
pop
and
data16
push
test
pop
adc
xlat
mov
testl
push
mov
repnz
fadds
sar
outsl
mov
ljmp
in
iret
lret
push
xchg
add
leave
mov
movsl
ret
pop
scas
push
lret
jl
mov
pop
sbb
cmp
test
mov
lahf
pop
lods
push
scas
push
adc
dec
stos
aaa
or
xor
push
std
mov
popl
jnp
lods
adc
pop
das
ss
mov
or
fisubrs
leave
loop
call
add
test
inc
pop
into
push
shll
loopne
pop
mov
inc
sub
pop
ss
mov
or
or
mov
ret
rorl
iret
sbb
jae
push
add
aam
inc
and
inc
and
mov
mov
gs
lret
pop
push
sub
or
push
bound
push
out
inc
les
cli
adc
dec
inc
jp
jge
sti
inc
test
bswap
mov
jg
lahf
hlt
lods
and
dec
in
into
xor
mov
mov
ljmp
cmp
loope
cmp
pop
add
enter
jns
test
pop
mov
push
sahf
jnp
call
adc
insl
test
add
add
xchg
sub
push
fisubrl
das
xchg
pop
mov
push
and
inc
jo
dec
add
cmp
fidivs
cld
pop
mov
scas
ljmp
jnp
jne
lods
ret
movsb
pop
decl
insl
ljmp
jecxz
xor
lods
cmpsb
lods
or
lret
sahf
aam
daa
cmp
imul
fiadds
hlt
mov
cmpsw
imul
cmpsl
ja
xlat
adc
inc
jno
pop
in
lahf
divps
sti
sub
pop
roll
and
push
shrb
sub
frstor
ret
mov
aam
push
dec
add
xchg
pop
aad
sbb
hlt
xor
cmp
shlb
adc
xchg
into
jo
loope
add
jnp
out
xchg
adc
repnz
pusha
arpl
data16
movsl
loope
in
lock
sbb
fstl
mov
data16
testb
inc
mov
cmp
push
test
das
bound
lcall
lods
mov
cli
inc
lret
jbe
or
cmp
pop
mov
mov
nopl
lods
jb
shll
jle
add
bound
nop
xlat
or
mov
bnd
adc
ljmp
mov
sbb
popa
femms
std
mov
cmp
mov
inc
ret
push
jns
cmp
dec
sub
jno
adc
call
cld
lahf
sbb
repz
mov
bound
ret
xlat
int
push
push
mov
sbb
fstp
cmpsl
xchg
loopne
out
inc
push
adc
cltd
mov
cmovns
push
sub
or
sub
in
jae
out
and
std
cmovge
in
add
xlat
in
jge
push
or
push
push
mov
jns
ret
test
inc
pop
clc
ffree
inc
in
sbb
out
pop
inc
jbe
icebp
sbb
mov
ljmp
jb
jge
out
cmp
mov
mov
das
sbb
jle
mov
popa
push
iret
mov
sub
adc
and
xor
fldcw
cmc
outsb
mov
sub
in
mov
dec
int3
loop
notb
adc
mov
mov
ret
or
nop
imul
imul
cld
in
push
pushf
cmpl
inc
fst
sub
push
int3
out
inc
push
int3
and
pop
pop
xchg
mov
nop
mov
inc
cmp
add
jle
xor
jp
jg
xchg
imul
sar
xor
jecxz
dec
pop
adc
dec
sbb
pop
mov
pop
nop
mov
test
mov
in
lea
ds
subl
das
lahf
mov
mov
push
push
lret
test
hlt
xchg
dec
loopne
stc
jo
cmp
push
sti
ds
hlt
pop
push
out
out
into
mov
cli
pop
dec
je
dec
add
dec
je
insb
fnsave
fsubrs
xchg
jns
mov
xor
roll
inc
mov
jmp
mov
sbb
les
nop
mov
jo
lahf
imul
adc
fwait
push
push
in
out
push
pop
popf
decb
cmp
lret
loopne
mov
jge
fstl
mov
cmpsl
movsl
dec
push
dec
movsl
addr16
leave
jne
pop
xor
jle
adc
jnp
xor
mov
cmpsl
jo
xor
iret
cmc
iret
enter
imul
sub
inc
sbb
scas
bound
cli
xor
enter
out
movq
xchg
test
pop
scas
inc
mov
cmp
pop
arpl
lea
xchg
fisubrs
mov
mov
pop
lret
mov
mov
xchg
lods
shr
dec
ljmp
adc
je
mov
mov
xchg
inc
jge
or
cmp
int
cltd
call
aas
shl
aaa
sbb
fadds
push
rclb
jg
out
repnz
mov
insl
pop
fucomi
and
xor
lret
stc
fdivs
cmp
push
arpl
dec
push
mov
mov
cmp
push
js
add
pop
ret
jno
dec
arpl
adcl
inc
into
jo
mov
push
sahf
mov
xor
in
daa
dec
mov
test
mov
leave
cwtl
dec
ds
sbb
fwait
push
lahf
mov
gs
cmp
jnp
loopne
insb
pop
rorb
sti
aas
push
repz
insb
lahf
insl
add
js
enter
std
and
dec
mov
xchg
fucomip
xchg
adc
cmpsl
xor
ror
js
xlat
movsl
jae
mov
movsl
fisttps
xor
nop
idivb
imul
fldcw
adc
mov
fdivr
seto
das
dec
inc
dec
cmp
stos
test
ja
repnz
loopne
ljmp
and
aaa
adc
lock
or
dec
jne
xchg
inc
cmpl
js
movsb
pop
cmpsl
jb
in
andb
add
insl
xchg
cmpsl
mov
sbb
movsb
cli
jp
sbb
fdivl
lcall
xor
test
je
push
ds
adc
mov
mov
popa
mov
fcoml
dec
jp
cmpsl
aad
mov
xorb
jno
lret
lcall
mov
clc
insb
sahf
xchg
pop
into
mov
inc
jg
in
in
or
cmc
jb
jo
lret
sub
xlat
ljmp
pop
mov
xorl
xorl
and
mov
and
mov
or
mov
aad
cmp
shr
test
repz
or
pop
mov
xor
inc
les
in
inc
push
cmp
add
pop
sbb
cld
outsl
jae
aaa
outsl
out
imul
pop
dec
mov
mov
lock
insb
xor
inc
outsb
sbb
jno
inc
sbb
or
fwait
iret
je
xor
dec
out
mov
mov
xor
add
movzbl
pop
adc
addb
leave
or
mov
in
out
jge
addr16
ret
popa
mov
jns
inc
mov
imul
and
out
iret
adc
mov
xor
pop
xchg
dec
mov
and
jecxz
mov
push
loop
fisubrl
pop
pop
xchg
sti
mov
movsl
or
test
sub
jb
test
sub
out
dec
ficoms
inc
movd
ja
or
inc
ret
std
jl
sbb
jne
stc
scas
dec
out
sub
cmc
xchg
out
out
ret
or
cwtl
inc
psubsb
add
pop
out
add
pop
imul
dec
les
push
lods
and
icebp
pop
notb
xchg
inc
les
inc
std
test
clc
lcall
ds
icebp
adc
jge
push
mov
popf
jne
ret
jae
mov
jns
daa
lods
mov
cmp
xlat
mov
sbb
xchg
in
out
loope
push
pop
testb
pop
outsl
mov
cs
jae
push
fdivs
push
negl
inc
std
and
fimuls
cmpsb
fwait
movsb
jl
hlt
adc
shll
hlt
lahf
mov
inc
sarl
cltd
cmp
jo
lods
out
pop
xor
stos
imul
lea
pop
sbb
inc
out
test
out
ja
jne
ja
mov
popf
fmull
out
loopne
sub
mov
xchg
mov
mov
adc
mov
inc
mov
jp
pinsrw
insl
jecxz
jecxz
rcrb
cmp
mov
cmp
jge
aas
pop
xchg
cmp
sbb
mov
mov
sub
cmp
cwtl
lds
das
test
sub
loopne
imul
ja
adc
push
les
and
jns
fisubs
adc
cli
jnp
repz
stos
je
loopne
out
mov
mov
dec
shlb
leave
fbld
shl
sbb
cmp
mov
sbb
mov
dec
out
mov
xor
lret
pop
lock
xor
outsb
or
fists
test
daa
out
xor
sahf
and
int
cmpsb
add
mov
ja
mov
adc
xor
jns
jle
in
mov
xor
stos
imul
xchg
ret
xchg
test
lahf
dec
cmpsl
cmpb
sbb
loope
mov
mov
mov
repz
pop
into
push
inc
scas
ret
cmp
lea
adc
jmp
iret
adc
xor
xchg
cmpsb
mov
mov
pminub
test
ss
cltd
out
lods
stos
cli
aas
icebp
push
jle
fdivs
mov
inc
pop
pop
aam
mov
outsb
scas
sbb
leave
cmc
mov
inc
repnz
in
mov
in
cmovge
xchg
pop
shl
test
jle
mov
mov
pop
adc
and
aam
mov
and
xchg
iret
das
in
dec
cld
enter
pop
les
cmp
fadds
es
and
push
addr16
dec
test
xor
inc
fisubl
sub
insl
adc
iret
mov
mov
xor
lcall
test
mov
mulps
mov
mov
fs
add
test
push
shll
leave
push
test
mov
out
pop
push
jno
adc
lahf
sbb
aaa
out
test
xor
mov
xor
and
pop
dec
cs
pushf
lods
mov
data16
daa
cs
xchg
imul
mov
mov
call
mov
pop
faddp
jo
dec
and
stos
jg
mov
movsb
sbb
mov
dec
and
sbb
sub
cmpsl
lahf
imul
ret
jno
mov
test
push
loope
imul
adc
mov
std
pop
imul
or
xor
sahf
mov
sbb
xor
xchg
pop
jae
mov
cmp
sub
lcall
push
mov
mov
pop
leave
jns
mov
push
inc
xor
mov
fdivr
rcll
ja
mov
js
mov
arpl
lahf
mov
or
xchg
jl
pop
sar
xchg
mov
mov
lcall
sbb
or
lock
scas
xchg
inc
sub
shrb
inc
mov
fstpl
mov
lods
pop
fnstcw
lods
dec
jae
sarl
or
movsl
clc
mov
xchg
add
push
es
xor
outsl
addl
or
syscall
inc
xchg
sbb
jmp
inc
inc
cli
dec
ret
dec
clc
cmp
adc
push
ds
pop
movsb
xchg
sbbl
out
fwait
mov
lahf
mov
adc
in
rorl
pop
ret
and
push
xchg
mov
cmp
jo
xchg
fisttps
insl
arpl
sbb
ror
imul
mov
lret
ucomiss
push
cmp
sbb
cmp
push
leave
stos
mov
sarl
xchg
jns
enter
inc
mov
cld
dec
and
outsl
mov
mov
negl
ljmp
mov
ds
sub
pop
xor
loopne
push
cmp
fstps
out
mov
and
mov
sti
jns
mov
inc
out
jns
rcl
stc
loop
out
cmp
lea
lea
sbb
pop
xchg
dec
lahf
jg
add
xchg
mov
dec
sbb
xor
dec
pop
mov
enter
add
popa
xor
inc
xor
adc
addl
mov
cmpsl
es
test
loope
pop
pop
outsb
or
bound
cmpsl
stc
insl
cs
pop
ja
inc
push
lods
mov
sbb
shll
mov
and
mov
or
xlat
out
jecxz
aas
mov
cmp
mov
test
and
mov
dec
jae
sbb
ror
xchg
in
movsl
cld
fcomps
mov
shrl
jg
lret
jle
push
add
lock
out
mov
pop
pushf
sbb
sbb
sti
lret
fcmovbe
mov
cmpsl
in
mov
add
xlat
xchg
adc
jns
lds
inc
sub
les
pop
dec
cmp
movsb
add
stos
movsb
pushf
add
xor
fs
mov
pop
cmp
ret
arpl
lods
shrb
dec
les
pop
mov
sahf
inc
jae
idiv
cli
pushl
je
jecxz
nop
and
cmpsl
fsubrs
ret
pushl
sub
xchg
xchg
push
mov
adc
xchg
xchg
ja
mov
insb
cmpsl
adc
cltd
push
xchg
sub
xor
xor
sub
shll
insl
fdivrs
ja
cwtl
addr16
adc
movsb
adc
sbb
xchg
shrb
adc
arpl
ret
pop
cltd
push
jne
jae
fidivrs
fstps
xchg
ja
mov
inc
loopne
rorl
mov
adc
jle
ret
out
sub
lret
das
lahf
outsb
mov
test
adc
sarl
psrlw
ja
or
xchg
pop
out
lahf
arpl
dec
dec
xchg
pop
lods
xor
jecxz
arpl
jne
pop
lret
cwtl
pop
hlt
inc
imul
push
insl
test
gs
scas
pop
cmpsl
pushf
xor
js
mov
cmp
adc
mov
adc
or
inc
cmpsb
orl
and
iret
push
imul
sbb
mov
lds
mov
push
movswl
add
arpl
lds
adc
jg
sbb
mov
fadd
fidivs
bound
cmp
dec
leave
js
lcall
push
inc
call
popa
xchg
movsb
out
cmp
leave
out
sub
arpl
fisubs
addr16
push
mov
lahf
lahf
xor
bound
nop
fwait
jp
cmpsl
push
into
sbb
push
mov
mov
rorb
inc
pop
lahf
ret
rcrl
iret
ficomps
aaa
shll
dec
rcrl
nop
pop
test
adc
inc
xor
mov
inc
push
or
fsubr
ljmp
xchg
int3
stos
mov
aad
insb
sub
mov
adc
les
pop
out
sub
pop
cld
push
mov
fimuls
adc
aaa
lods
push
mov
xor
pop
pop
outsb
rolb
mov
lahf
ror
jnp
or
push
jp
adc
sbb
test
pop
mov
or
jmp
pop
adc
cmpb
xor
out
sub
dec
adc
mov
stos
push
mov
sub
pushf
lods
adc
imul
xor
jmp
xor
jmp
cmp
sbb
ljmp
mov
push
std
pop
gs
and
scas
mov
popf
aaa
jle
out
push
sbb
mov
inc
mov
mov
insl
aad
int
pop
cmp
or
cs
loop
sbb
mov
cmp
lock
loope
sbb
fiadds
fcompl
cmpsl
jno
adc
push
inc
scas
mov
xor
push
mov
and
repnz
mov
adc
sub
repnz
out
out
ljmp
loope
dec
or
push
fists
in
es
jp
xor
jge
incb
mov
imul
adc
repnz
ljmp
jge
sub
sub
lcall
adc
aaa
test
sbb
cmp
fsub
or
xchg
push
movb
shr
mov
lock
mov
out
and
mov
data16
mov
cmp
in
stc
xorb
jle
test
std
sar
mov
mov
xor
mov
or
inc
adc
or
sbb
jo
xor
xor
addr16
les
or
and
leave
dec
ret
mov
fldt
mov
dec
cs
jmp
sbb
mov
ja
aad
lods
shrb
sub
cmpsl
mov
ret
sbb
adcb
test
xlat
xchg
mov
adc
push
dec
rcrl
aas
lock
data16
bound
add
xor
push
sti
push
xchg
xlat
mov
test
and
mov
arpl
jae
adc
sub
push
adc
test
push
outsl
iret
xor
adcl
lret
adc
push
sbb
ficomps
ret
loop
cmp
xor
and
mov
and
sbb
test
cmp
stos
xchg
hlt
mov
lret
scas
mov
mov
inc
pop
sub
jmp
sub
or
sbb
popf
cmp
adc
shl
adc
pop
push
icebp
std
mov
add
cmp
incb
lds
cmp
in
in
aad
les
jo
ljmp
mov
sub
fld
cmp
in
jbe
outsb
fstps
add
pusha
stos
push
inc
pop
enter
sbb
push
adc
add
ffreep
dec
adc
stos
icebp
rcrb
adc
or
jns
pop
jno
mov
insl
idivb
jle
shlb
insb
and
xor
mov
push
push
xchg
movsl
ja
adc
xchg
mov
sti
mov
lahf
shlb
cli
push
andb
ljmp
ficoml
pop
rcl
outsl
xor
mov
das
xchg
dec
pusha
xor
adc
daa
fisubs
pop
ss
cld
test
loope
fs
xor
daa
arpl
mov
xlat
pop
pop
imul
loopne
icebp
xchg
add
mov
pop
or
cmp
fs
cmp
lret
ret
push
cmp
mov
mov
xor
aas
stos
stc
pushf
out
pop
popa
movsb
inc
pop
or
pop
push
psubw
sbb
std
adc
adc
scas
pop
out
outsb
test
outsb
insl
mov
int3
pop
js
add
mov
xchg
loope
sbb
and
mov
pusha
dec
insl
clts
cwtl
cmpsl
sahf
pop
aas
cmp
mov
push
xchg
cwtl
aas
arpl
mov
adc
add
dec
es
cmp
xor
cli
adc
push
pop
daa
aam
ret
push
ret
cmp
and
pushl
andl
out
rcrl
ds
push
roll
clc
adc
jno
repnz
mov
adc
lods
cmp
adc
mov
into
fisubl
xor
cld
fnstsw
out
rcrl
lea
lea
test
sti
push
movsl
mov
mov
jle
pop
gs
sahf
lahf
out
mov
inc
je
dec
test
mov
push
pop
ja
loop
popl
lods
imul
aaa
and
mov
pushf
mov
push
fwait
xor
lds
loopne
rolb
mov
mov
fildll
push
testl
loopne
fcompl
loopne
and
lock
out
gs
shrd
stos
ljmp
aad
idivb
jp
push
js
cwtl
adc
push
jbe
cmp
adc
ds
mov
push
pushf
mov
mov
inc
lret
fisubs
sti
movsl
sub
inc
or
and
dec
or
or
push
ss
in
push
mov
inc
addr16
fwait
pusha
lods
dec
sbb
mov
jmp
inc
mov
cmpsl
in
cmc
aam
sbb
cli
es
sti
rclb
lcall
lods
push
enter
in
add
pop
int3
push
push
in
out
out
lods
pop
or
scas
movsb
add
ficomps
and
jnp
mov
ret
and
out
fwait
mov
xor
and
mov
scas
fsubs
insb
pop
repnz
fidivrs
mov
imul
mov
xchg
out
cltd
test
ljmp
push
imul
aas
mov
or
push
push
xchg
subl
test
jb
bnd
loope
xchg
outsb
data16
push
ret
repnz
cmc
push
arpl
inc
xor
out
xor
pop
clc
mov
dec
fcomps
jae
adc
fiadds
fidivrs
inc
ljmp
xlat
insl
fcoms
mull
mov
sar
jnp
scas
pop
je
and
mov
addr16
jno
adc
lret
mov
outsl
pop
inc
ffreep
cmpb
mov
stc
loope
cmp
mov
cmp
and
or
shll
outsb
imul
fstl
cmp
xchg
imul
or
shll
lahf
mov
or
jp
pop
ret
bound
fnstsw
jl
and
inc
shrd
or
popa
pop
loop
xchg
test
roll
cmp
pop
jbe
mov
ret
icebp
movb
ret
dec
test
mov
test
sub
pop
insb
lock
pop
jge
jne
in
adc
xlat
imul
sub
sub
ja
mov
or
popf
mov
iret
icebp
out
sti
adc
lock
iret
imul
lret
pop
mov
mov
fcomp
outsl
xor
mov
arpl
pop
xchg
andl
xchg
dec
xor
xchg
fcoml
sbb
sbb
push
fdivl
or
pop
int3
pop
mov
dec
push
clc
sti
pop
les
lret
add
and
cmp
adc
lods
lret
push
loopne
adc
xchg
aas
cmpsl
push
pop
pushf
mov
lahf
fimuls
dec
scas
fs
movsl
mov
inc
xor
ret
sbb
push
repz
mov
stos
cmp
jae
pop
test
cwtl
cmp
or
lods
mov
mov
fwait
ljmp
push
xlat
scas
adc
stc
das
out
insl
rcll
jmp
push
jbe
pop
loopne
inc
in
xor
xchg
sti
loop
pop
xor
cmpsl
lahf
std
dec
pop
jno
insl
pop
out
adc
or
pop
or
lahf
imul
mov
push
outsb
mov
es
xor
in
adc
jno
insl
imul
jae
std
mov
adc
rcrb
xor
cmp
pop
cltd
mov
and
mov
data16
dec
icebp
cmp
cmp
sti
fcompl
pop
sar
add
jns
lahf
test
jbe
cmc
sbb
fists
mov
nop
ficoml
shll
mov
jno
ret
aas
dec
xor
aaa
lcall
or
inc
xchg
daa
jns
fistl
das
xor
pop
je
mov
test
daa
inc
popa
push
fnstcw
or
cld
loopne
lahf
ret
mov
adc
add
repnz
or
xchg
sbb
mov
adc
lock
sbb
push
jge
shrl
jb,pt
pop
movsb
push
mov
movsl
loop
hlt
adc
adc
adc
ficompl
insb
arpl
cltd
outsl
sub
push
lret
push
dec
mov
pop
jecxz
cli
cmp
int3
pushl
xchg
adc
test
mov
mov
jecxz
les
daa
out
lds
xor
adc
frstor
gs
mov
sbb
adc
push
sti
push
test
sarb
je
mov
sahf
lods
ret
mov
cmpsb
mov
lock
mov
std
jmp
mov
fcoml
push
scas
ror
es
pop
aas
popa
pop
cmp
cmpsl
popf
xchg
ds
aam
lock
dec
mov
sarb
decl
xor
loop
jecxz
jl
imul
test
sub
daa
inc
insb
pop
xor
push
xor
loopne
push
nop
xlat
push
mov
and
jno
jp
add
aad
cs
mov
sbb
dec
ret
xor
adc
cmp
or
push
loope
push
fildll
mov
sbbl
femms
sbb
into
sahf
cmp
fnstenv
mov
arpl
cmp
out
dec
dec
test
ja
sub
stc
sub
xlat
or
xchg
test
sbb
ja
dec
lret
scas
cmpsl
and
flds
repz
stos
xor
and
pop
insl
mov
dec
jno
lahf
cld
inc
jmp
cmpsl
insl
pop
xor
pop
outsb
cmpsl
lock
cmpsb
jecxz
stc
sbbl
fsubs
sbb
ret
shlb
fbld
pop
adc
push
movl
lock
sub
pop
dec
inc
mov
sbbb
mov
testb
rcrb
shll
jl
mov
add
les
lahf
and
aaa
adc
imul
loop
ja
dec
push
add
pop
mov
dec
dec
ds
push
pop
inc
fstps
xor
ss
mov
stos
mov
mov
ret
gs
jmp
rcrl
mov
xchg
push
icebp
mov
mov
pop
enter
rcrl
enter
sub
mov
push
loopne
xchg
ds
xorl
cld
lods
aam
das
arpl
jo
adc
daa
in
xor
mov
xor
leave
adc
in
lahf
es
jge
bound
jecxz
cwtl
mov
fadd
cmp
insb
mov
dec
mov
shll
xchg
mov
test
jns
jne
test
jmp
stos
stos
into
and
rcll
push
in
daa
push
mov
and
cld
adc
sbb
stos
jno
insl
mov
sbb
adc
pop
sub
sti
xor
shll
pop
fstpt
ror
ud0
mov
mov
and
icebp
fstpt
pop
mov
fdivl
ss
mov
subl
mov
cmp
mov
int3
adc
ja
test
or
leave
jge,pn
into
or
sub
mov
idivb
inc
subb
mov
es
fucom
ret
push
addr16
popf
add
pop
and
lcall
jne
stos
imulb
dec
les
dec
push
mov
push
les
adc
les
xchg
lahf
mov
outsl
mov
les
lret
cmp
pop
pop
cmpl
lret
jge
lret
nop
jge
addb
dec
jae
cltd
mov
adc
and
jg
repz
movsbl
test
add
dec
add
stc
mov
jnp
push
sub
dec
pop
dec
shlb
jnp
das
and
lret
jmp
ror
sub
mov
xor
xchg
pop
mov
js
mov
lcall
outsl
call
cmp
sub
arpl
lods
mov
lods
ror
inc
aaa
xor
lahf
mov
add
pop
sbb
sar
xchg
add
mov
xchg
sbb
pop
in
stc
cs
lret
xchg
push
shl
adcb
enter
adc
movsb
nop
add
loop
pop
lahf
jne
out
out
pop
jno
pop
push
xchg
arpl
jmp
jns
std
cltd
mov
pusha
ret
je
or
iret
imul
lahf
and
aad
push
adc
addr16
adc
sahf
cmp
push
push
xor
ret
push
jnp
dec
mov
mov
cld
shrl
adc
cmpl
inc
mov
and
cmpl
lahf
jmp
xor
data16
out
push
lods
dec
in
fidivrs
ret
out
int3
mov
dec
push
mov
fdiv
jnp
xor
das
jp
fildll
inc
mov
jecxz,pn
fcomps
mov
movl
jo
xorb
daa
push
and
jmp
mov
arpl
jecxz
mov
jecxz
or
xchg
out
push
add
xchg
lods
test
adc
enter
lods
rolb
testl
lahf
xor
bound
outsl
nop
pop
push
mov
mull
mov
jo
cmpsb
cmp
push
adc
aas
insb
pusha
ljmp
xchg
rol
cmc
fldl
cmpsl
leave
jg
dec
in
lods
rorb
push
xor
ret
ss
ja
and
pop
xchg
cmp
or
sbb
jg
and
daa
arpl
fcoml
mov
lcall
mov
imul
clc
cmpsl
inc
bsr
sti
adc
sahf
xor
mov
mov
addb
cwtl
mov
inc
mov
pop
out
out
cwtl
fcomps
xor
push
adc
sub
pop
pop
mov
enter
repz
inc
es
pop
addl
lds
sbb
adc
xchg
cmp
inc
repz
jbe
and
insl
mov
jne
dec
outsl
pop
pop
in
mov
mov
push
fisttpl
in
mov
jo
push
es
add
push
es
add
repz
mov
ja
mov
stc
jae
jle
pop
jne
cmp
fdivrs
test
std
test
push
in
fucomip
sub
xor
movsb
lahf
imul
add
jg
xor
mov
sarb
and
dec
jge
push
jecxz
pushf
mov
mov
test
lods
test
cmp
gs
mov
sub
adc
mov
adc
dec
sete
call
aam
cmp
and
jl
scas
jo
inc
aas
pcmpeqw
test
cmp
mov
cmpsl
scas
xor
outsb
xor
inc
mov
pop
adc
bnd
imull
sub
cmp
icebp
fimuls
test
in
xchg
lahf
les
mov
int3
sbb
push
cmpsl
sub
arpl
sbb
push
inc
jg
lret
mov
jmp
test
fwait
iret
in
dec
lret
add
testb
jg
lret
ret
inc
loop
sbb
repz
inc
pusha
xor
add
mov
push
mov
incb
ficoms
pop
cmp
dec
arpl
jecxz
mov
adc
stc
push
fs
jae
push
dec
adc
xor
dec
rcll
lods
inc
push
lret
enter
aaa
sbb
std
jae
testb
out
rolb
xchg
addr16
scas
fdivr
vsubps
mov
push
push
ds
test
and
lds
call
ljmp
mov
inc
rorb
das
pop
shrb
sub
shl
jmp
js
sbb
mov
mov
sahf
mov
ret
adc
sub
test
repnz
sub
enter
xchg
sub
cld
fwait
in
lods
xor
xor
leave
fiadds
and
lods
cmpsl
cmp
pop
jp
xlat
clc
or
movsl
or
setg
xchg
daa
adc
aaa
mov
std
movsl
insb
in
aam
sub
rcll
mov
pop
xor
push
mov
push
push
bound
fildll
out
push
sub
test
leave
nop
pushf
daa
mov
xor
pop
push
mov
jae
dec
scas
loopne
push
mov
inc
pop
inc
jp
mov
mov
pusha
das
jg
mov
pop
xchg
cmp
lea
mov
pop
out
js
mov
jns
sbb
jne
leave
es
xchg
and
push
jl
aas
scas
sbb
or
data16
sti
add
dec
ds
aad
jmp
fidivrs
mov
sub
cmp
cltd
cmp
test
push
imul
cltd
lock
mov
jnp
pop
mov
mov
dec
outsb
push
cs
pushf
push
popf
test
divb
leave
out
mov
add
imul
push
stc
mov
jo
jnp
or
cmp
scas
jecxz
out
std
mov
xchg
cmpsb
out
dec
bound
aam
xchg
scas
test
inc
jae
iret
or
lods
add
mov
ljmp
mov
ljmp
movsl
adc
rcrl
loopne
aas
lds
std
lods
push
ss
cwtl
scas
ljmp
mov
sub
mov
rcll
lret
out
add
cmpsl
dec
sti
cs
inc
mov
stos
pop
lahf
in
ret
mov
loopne
cmpsl
imul
mov
out
sti
cltd
or
ljmp
cmc
scas
cli
vhsubps
xor
rorb
cld
std
testb
cmpsl
mov
sub
pop
pop
mov
out
adc
fidivrl
mov
test
adc
push
push
rolb
or
ljmp
push
push
push
jb
popf
mov
or
mov
outsb
mov
dec
outsb
mov
and
cmpl
aam
sbb
mov
ja
cltd
scas
xchg
int
push
push
sti
lds
sarl
je
xor
sarb
pushf
lds
jb
xlat
inc
mov
data16
mov
adc
inc
mov
ja
lahf
or
ret
xlat
mov
lret
clc
jnp
xor
cmp
popa
fwait
gs
xchg
xchg
xchg
rcr
pop
jae
mov
mov
add
mov
and
xor
insb
xorl
mov
mov
iret
aaa
lods
pop
stc
aaa
repz
jp
dec
jge
mov
repz
mov
and
mov
pop
rolb
insb
lcall
mov
mov
and
inc
push
mov
mov
in
jmp
dec
cmp
jmp
cs
jmp
ljmp
ljmp
adc
inc
pop
jb
aad
aas
push
sub
jp
mov
pop
shlb
insb
xcrypt-cbc
cmpsl
push
in
js
clc
scas
rcrl
repz
push
xor
adc
and
dec
sub
push
or
ss
inc
movsb
push
pop
sbb
and
cli
cmp
aam
rolb
repnz
es
sub
adc
inc
add
lahf
add
lret
in
jne
mov
pop
jae
inc
sub
lds
in
ljmp
stc
jo
sub
jle
xchg
enter
repz
adc
inc
imul
fs
mov
jcxz
shlb
mov
sub
fucomip
inc
xchg
scas
pop
ret
lahf
out
mov
out
mov
mov
inc
xorb
leave
and
mov
scas
sarl
inc
cwtl
jecxz
mov
jo
mov
xchg
loop
or
popa
sub
popf
scas
jns
scas
pop
out
inc
xorl
int3
xlat
jl
jbe
mov
lahf
loope
movsb
mov
sarb
mov
mov
icebp
out
aas
jecxz
sbbl
jmp
pop
push
lahf
and
out
ds
fisubrl
fiaddl
ficoml
fimull
test
xchg
xor
mul
movsl
mov
jl
int3
outsl
pop
mov
inc
rorb
mul
mov
aaa
out
sbb
ja
and
lret
mov
fidivrs
jg
jo
cltd
mov
ds
out
cmp
pop
scas
cmp
mov
jne
fucomi
mov
rcl
jg
cli
icebp
aaa
cmpsl
inc
aam
jg
jg
jg
jno
jg
ror
scas
jg
pop
js
pop
xchg
jg
fidivrl
fidivl
fiaddl
imul
mov
jnp
fwait
jmp
pop
fstpt
mov
jg
inc
pop
mov
or
jns
jg
aaa
mov
ret
imul
fildl
fninit
rolb
repz
add
cmpsl
xor
aas
icebp
filds
stos
mov
arpl
sub
cmc
pop
jmp
sub
aaa
out
out
jp
mov
jnp
bound
xchg
ds
fidivl
out
lahf
sti
loop
shlb
xchg
xchg
in
xchg
push
stos
inc
das
insl
stos
jp
loop
jnp
addb
mov
mov
xchg
out
mov
jns
jg
aaa
repz
pop
sub
mov
cmp
pop
mov
mov
test
pop
test
stos
ds
out
push
adc
xchg
mov
lret
pop
xor
xor
jp
jne
jp
mov
leave
stos
jg
xor
sub
push
pop
aam
test
aad
sub
pop
dec
dec
mov
push
push
sbb
or
cmc
ret
lahf
arpl
shrb
cmp
inc
mov
push
das
cmpsl
arpl
ds
outsl
push
inc
mov
pop
jg
push
dec
and
jb
sub
cli
popa
sbb
pop
andl
fistps
cwtl
adc
mov
leave
mov
int3
push
or
mov
inc
dec
aas
test
cmp
mov
popa
push
xchg
cmp
je
ret
sbb
pop
lds
cld
lods
icebp
xlat
std
decl
scas
ret
adc
xchg
imul
fnstenv
inc
jg
in
ljmp
data16
imul
fdivs
mov
insl
jo
cld
mov
and
icebp
cmp
mov
pop
cmpsb
dec
push
test
or
pusha
jge
pop
sbb
fists
bound
or
pushf
jo
xor
xor
ret
adc
mov
pushl
ljmp
icebp
fs
daa
cmpsl
lret
movsl
ret
mov
add
mov
add
ret
lods
adc
dec
or
adc
mov
aaa
cmpsl
cmp
repnz
loope
xchg
push
push
outsb
insb
mov
mov
push
setns
sbb
lcall
xorl
popf
inc
and
xor
dec
leave
or
pop
addr16
inc
jo
test
repz
sarb
sti
mov
maxps
pop
push
adc
mov
repz
cld
mov
int3
imul
rclb
pop
dec
insl
fxch
ret
fistps
push
mov
packsswb
mov
sbb
jae
jne
push
lods
iret
out
add
stc
daa
test
pop
jmp
fnsave
mov
jmp
mov
test
mov
inc
and
dec
test
outsl
mov
lret
adc
sarl
mov
je
mov
xchg
adc
lods
and
rcll
push
jl
cmp
addr16
mov
inc
and
in
outsb
cmp
cltd
in
dec
jmp
and
or
xor
daa
adc
aam
mov
lock
or
or
icebp
or
clc
adc
ds
mov
mov
mov
xchg
push
aas
or
jne
cs
addr16
scas
jno
push
loopne
daa
lahf
and
ret
lods
sub
push
cs
inc
stc
jecxz
arpl
push
lret
adc
es
pop
mov
push
loop
lahf
insl
out
imul
lods
cmpsb
sub
cmpsl
adcl
addl
pop
xor
hlt
xchg
insb
leave
inc
aaa
pop
cmpsl
push
aas
cltd
movsl
mov
mov
hlt
xchg
mov
ret
mov
adc
pop
or
fsubr
vpsrld
mov
lahf
xchg
sahf
pop
dec
mov
scas
pop
cwtl
imul
ret
test
leave
call
or
fistl
push
insb
inc
lods
jno
mov
add
fisubrs
lds
in
jnp
setns
ficomps
lahf
out
jg
xchg
jl
inc
arpl
lds
out
loopne
cwtl
push
mov
mov
xchg
test
js
es
sti
inc
rcrb
shrl
aas
loope
dec
sahf
add
sti
and
ret
pop
mov
sub
xchg
lock
and
jg
adc
xchg
stos
mov
jne
cmpsb
adc
push
push
js
xlat
cmp
mov
dec
loop
sbb
xchg
les
out
pop
aas
mov
xor
push
mov
negl
inc
jg
adc
sbb
lcall
xor
sbb
xor
jp
jae
repnz
ret
jl
and
sbb
and
jbe
out
in
push
pop
mov
shl
push
sbb
mov
sbb
jg
jle
in
adc
mov
cmpsb
inc
les
cmp
stc
mov
and
loop
inc
or
out
push
mov
adc
ficoml
push
pop
out
fdivrs
mov
ds
sbb
aam
adc
ljmp
mov
hlt
pop
pop
xor
pusha
test
push
adc
xor
dec
mov
pop
fdivp
xchg
and
mov
lcall
mov
dec
or
mov
dec
outsl
fldl
jmp
cltd
stos
cmpsl
adc
adc
sbb
imul
movsl
lods
mov
push
sub
xor
fldt
stc
in
icebp
inc
mov
lods
shll
or
imul
and
aam
jp
mov
push
xor
push
adc
std
xor
jmp
out
jae
lcall
sbb
inc
nop
adc
pop
test
adc
into
cli
ret
das
cld
sub
push
imul
jns
mov
mov
sarb
mov
xor
xchg
std
xchg
mov
stos
mov
inc
out
out
xchg
rclb
mov
adc
mov
mov
out
xchg
mov
inc
imul
inc
jo
outsb
imul
mov
int3
lret
mov
shl
lahf
mov
fucom
mov
cld
test
rcrl
push
scas
sahf
in
imul
xchg
jb
mov
mov
jle
jl
je
sbbb
das
mov
jae
pop
out
sbb
pop
idivl
jnp
lods
push
or
std
dec
mov
imul
adc
jns
imul
dec
idivl
mov
push
push
jg
pop
inc
xchg
out
cmp
dec
fistpll
ja
scas
mov
jecxz
jb
xchg
sbb
push
fiaddl
lahf
inc
iret
jg
mov
pop
leave
lret
sub
mov
push
jmp
outsl
cld
mov
lret
popa
jg
lcall
repz
pop
aam
fcmovnu
aam
fists
out
sbb
pop
ret
test
cltd
idivb
imul
jae
sbb
incl
arpl
fstpt
out
cmpsl
inc
jae
shl
add
push
mov
mov
inc
sub
push
jb
fisubrl
mov
fucomip
push
cmp
arpl
dec
mov
int3
subl
sbb
sbb
xor
push
test
push
cmp
dec
or
jae
jmp
push
fwait
xor
jge
out
adc
test
notl
negl
imul
push
pop
inc
mov
rorb
fisttps
jno
fnsave
dec
mov
xchg
lret
sub
popa
fcmovbe
jecxz
inc
mov
cmp
stc
adc
fs
test
pop
call
xor
outsl
xor
fimull
sahf
mov
rcll
add
jo
jle
imul
jecxz
sti
ss
mov
arpl
jb
out
lahf
xorb
aam
sbbl
push
in
test
inc
outsb
jmp
jb
xor
movsl
adc
cmp
dec
gs
mov
aam
cmp
cmp
xchg
insl
sahf
ja
pop
lods
cli
push
in
sub
and
jno
les
or
cmpxchg
and
mov
mov
mov
mov
inc
xor
nop
xchg
adc
jl
mov
loopne
je
jmp
lsl
out
loope
pop
in
xor
lea
push
je
push
mov
jns
les
xor
dec
cmp
mov
xchg
or
or
cs
xor
inc
adc
fcompl
loop
inc
imul
pop
pop
inc
jns
mov
add
je
rclb
and
ret
in
jmp
sti
fmul
outsb
fwait
adc
push
subb
jno
push
popa
cmp
pop
incl
push
mov
lret
or
pop
shrb
push
xor
sub
and
mov
mov
fsubl
xchg
xlat
ret
pop
cmc
mov
dec
adc
gs
ret
or
xchg
pop
adc
pop
xchg
aaa
mov
mov
in
or
mov
sub
stos
jns
mov
jg,pn
enter
ret
push
rolb
jg
out
sub
jns
out
scas
sub
movsb
pop
jge
mov
xlat
cwtl
mov
xlat
fidivl
sbb
xchg
addr16
and
insl
adc
in
out
ret
imul
mov
mov
sbb
mov
mov
pop
cmp
mov
iret
daa
inc
adc
mov
enter
jg
cmp
out
push
out
pop
lret
sub
mov
mov
bound
mov
fidivl
mov
popa
out
add
mov
jge
aaa
jp
mov
pop
pop
das
cmp
loop
jmp
jns
scas
cmp
sahf
mov
push
mov
popf
addr16
lahf
jge
jmp
scas
pop
dec
mov
in
jns
enter
mov
inc
xor
fucomp
dec
repz
fcmovnu
push
outsl
mov
mov
lret
cmp
loop
mov
jae
imul
aas
pop
addr16
mulb
iret
pop
shlb
fwait
sbb
xor
sub
pop
aas
jbe
mov
mov
push
inc
cmp
pop
sti
dec
inc
insl
dec
jp
mov
jns
push
mov
mov
mov
mov
leave
dec
sub
loopne
jns
loope
jo
xor
icebp
dec
aam
into
fistps
xor
mov
or
fwait
sbb
cmp
lods
mov
incl
inc
fcoml
out
sub
lret
scas
fwait
push
mov
mov
cmp
mov
leave
shll
mov
mov
xchg
adc
leave
and
fists
icebp
inc
aam
lret
cmpsl
and
lods
add
outsl
mov
dec
or
lods
adc
mov
inc
fsubrs
ljmp
pop
mov
jnp
add
mov
add
xchg
movsb
adc
dec
out
mov
push
fldcw
add
das
das
mov
stc
pushf
and
icebp
ss
mov
mov
call
sbb
mov
jmp
imul
cmpsl
mov
repz
sbb
mov
imul
xor
push
aaa
lea
xchg
pop
sar
mov
mov
cmpsb
xchg
lahf
xchg
ja
insl
aas
mov
test
cmpsl
jle
mov
pop
dec
dec
out
cmp
clc
aas
inc
and
and
je
shll
aad
scas
push
filds
setge
dec
pop
mov
push
js
arpl
adcb
pop
fdiv
or
scas
mov
ds
mov
pop
sub
inc
lock
daa
mov
mov
mov
popa
arpl
pop
cmc
add
cmpsb
xor
fwait
ja
sub
call
mov
adc
cmp
mov
mov
loope
jmp
ds
xor
or
sarl
jnp
pop
mov
pop
aam
insb
std
out
popf
or
out
mov
addr16
add
jg
cld
mov
mov
xor
iret
outsb
hlt
push
jle
add
cmp
loope
sub
gs
jbe
fwait
orb
inc
jne
ss
ljmp
cmpsl
in
dec
mov
dec
daa
js
fimull
adc
inc
mov
iret
repnz
xchg
dec
adc
cs
ljmp
adc
sub
xor
mov
pop
rolb
aaa
jo
std
repz
ds
enter
push
mov
shll
and
and
jecxz
xchg
rol
or
int
fstps
mov
sub
mov
push
pop
sbb
sti
es
cli
xor
mov
imul
nop
mov
jo
mov
push
pop
scas
mov
push
sub
test
stos
sbb
cmp
sub
push
in
fldcw
mov
jbe
and
out
popf
fucompp
inc
sub
ret
sub
in
lret
xor
hlt
pop
mov
inc
movsl
push
sub
pop
lods
jo
cli
sahf
add
jl
inc
rclb
cmp
jo
push
cmp
push
add
dec
jmp
jl
mov
sub
add
aaa
roll
fstpt
jne
int3
in
pop
jmp
pop
dec
push
stos
out
stos
xor
scas
sbb
or
jge
loope
aaa
cli
outsb
icebp
push
inc
mov
cmp
cltd
cwtl
sub
out
sub
or
cmp
inc
out
or
stos
movsl
cmp
sti
js
push
cmp
adc
and
mov
cltd
mov
stos
xor
inc
adc
mov
mov
mov
leave
cmp
test
lds
lods
jo
out
pop
jns
sbb
call
cli
lock
lock
mov
push
ret
es
or
push
aam
jne
xor
sub
lcall
in
sub
mov
or
push
movsl
pop
cmp
int
ss
test
lock
sbb
pop
ret
adc
dec
fnstcw
lods
sahf
add
xor
inc
add
adc
in
push
inc
popf
jecxz
clc
in
jg
es
shll
addr16
das
aas
sbb
or
sar
ds
jge
pop
sbb
leave
cmpsl
jo
push
icebp
push
inc
loop
and
jp
or
xchg
sub
push
fnsave
sbb
xadd
js
adc
lret
scas
ret
jb
cmp
fcoms
pop
popf
pop
mov
pop
xor
js
jae
push
hlt
jno
lcall
push
push
and
add
cmp
mov
xchg
dec
outsb
test
add
sbb
cld
mov
cmp
inc
lahf
mov
shrb
ss
add
fdivrs
ret
dec
pop
inc
js
xchg
adc
mov
jno
insb
cmp
rolb
jo
stos
cmp
ret
and
cmc
enter
out
push
sub
xor
aam
addr16
stc
xchg
je
enter
sbb
pop
mov
lahf
pop
xchg
add
test
jmp
popf
inc
les
movsb
cmp
repnz
adc
jno
addr16
aas
out
inc
push
test
ret
icebp
ds
es
hlt
cld
jae
mov
stos
add
ljmp
cmpsb
enter
fisttpl
aas
cmp
sub
add
mov
decb
sub
cmovnp
xorl
sub
into
outsl
inc
jge
sbb
fisubrl
adc
adc
jae
lret
aad
push
clc
fisubs
adc
pusha
repz
aaa
test
add
stc
sahf
or
das
bound
stc
leave
jno
and
mov
xor
and
fdivrs
pop
sub
mov
lahf
push
mov
jno
push
ret
xchg
repnz
aam
mov
rcl
inc
xchg
pop
xor
push
mov
out
sbb
xor
or
xchg
iret
testl
adc
dec
lods
movsb
or
pop
mov
test
inc
lods
xchg
imul
ds
add
mov
shll
test
mov
mov
jmp
clc
daa
mov
adc
pop
mov
or
xor
adc
lret
jmp
fs
xchg
test
rcrb
sbb
mov
lds
adc
je
adc
sbb
rolb
xchg
dec
cld
xchg
mov
xor
lahf
jne
cltd
cmp
sbb
popa
push
das
imul
lahf
sub
xor
dec
mov
repz
addl
sar
rcrb
jmp
out
ret
pop
into
xchg
movsb
out
jle
ss
jle
and
mov
cmp
pop
add
imul
pop
mov
repz
fists
fstpt
cli
lahf
inc
mov
or
adc
add
mov
test
adc
push
pusha
out
iret
adc
ret
mov
pop
pop
mov
in
inc
xchg
pop
in
roll
fcmovnb
mov
mov
cmp
cmpsb
test
nop
dec
adc
jno
inc
push
jmp
cld
mov
jno
sbb
pop
pop
lods
push
pop
pop
pop
scas
test
add
mov
inc
xchg
mov
or
jmp
mov
dec
or
stos
rcrb
hlt
lret
push
push
aad
lea
dec
icebp
aas
xchg
into
mov
dec
sbb
mov
out
lahf
popa
rcll
incl
or
ret
adc
dec
add
mov
mov
inc
lods
cmp
icebp
js
mov
sbb
scas
push
daa
xchg
loope
movsl
adc
stc
xchg
push
call
repz
arpl
or
sahf
icebp
int3
xor
aas
insl
xor
mov
dec
or
pop
insl
daa
pop
cmpsl
mov
aam
jnp
icebp
arpl
scas
xlat
adc
sub
jne
push
or
xor
mov
imul
lret
pop
lret
inc
mov
lds
es
push
arpl
dec
sub
call
push
add
loopne
or
mov
push
ja
sbb
pop
ja
or
mov
orb
outsl
pop
add
lds
cmp
lret
pop
ja
push
leave
daa
ds
cltd
fbld
sbbb
mov
in
sarl
xor
push
and
loop
cmc
mov
je
inc
lods
cmpsl
pslld
fbld
jge
aad
js
pop
push
adcl
jge
xchg
sub
in
add
cmp
aad
ret
sbb
fsubrp
or
fidivrs
daa
call
imul
sbb
sbb
pusha
and
mov
pop
adc
pop
push
sub
jmp
out
push
es
stc
cmp
imul
push
push
sub
cmp
mov
xor
lods
ljmp
add
jecxz
lcall
or
push
in
mov
sub
cmc
jmp
add
push
adc
into
cmp
push
movb
xlat
repz
movsl
or
mov
sbb
sbb
mov
fs
pop
add
or
mov
pop
loopne
push
int3
push
addr16
cmp
shlb
mov
add
aad
adc
or
dec
lret
das
stc
add
mov
cs
bound
scas
jmp
push
add
mov
mov
inc
lods
pop
cmpsl
je
inc
mov
mov
loopne
mov
loope
cld
xor
mov
iret
hlt
pop
inc
call
adc
out
pushf
iret
mov
adc
mov
mov
xor
mov
repnz
or
xor
xchg
das
inc
dec
pop
std
cmpsl
adc
stos
mov
sbb
mov
mov
sub
data16
cmp
out
mov
mov
xor
and
cltd
or
mov
lret
mov
into
addr16
in
rolb
roll
out
push
sbb
loop
mov
iret
jp
scas
and
xchg
jb
cmp
xor
notb
xor
lret
pop
fwait
push
ficompl
mov
data16
out
div
ja
popa
mov
fistps
faddl
orl
sahf
jle
inc
ljmp
stos
cs
jecxz
mov
imul
out
icebp
aaa
insb
jge
jle
jbe
push
xchg
ficompl
mov
faddl
rorl
sbb
inc
rolb
fcmovu
into
lcall
aaa
inc
pop
xor
push
mov
lret
xchg
cmp
ficoml
mov
sbb
aas
int3
sbb
xor
jge
dec
jp
loop
mov
jmp
mull
ja
and
icebp
jg
mov
xor
inc
mov
xchg
jg
sti
mov
dec
ficompl
ret
in
pop
cmp
ljmp
loop
pop
xlat
mov
sub
into
inc
fwait
adc
cmp
mov
xchg
add
jno
jb
sbb
out
fisubrl
mov
iret
ficoms
scas
mov
inc
jae
cmp
mov
inc
nop
fs
ficoml
fstpt
xchg
cmp
test
push
lods
dec
jns
xchg
scas
outsl
fcmovnb
sti
fwait
and
xor
jae
insl
lahf
lods
pop
out
shll
and
sub
mov
adc
sbb
inc
mov
sbb
mov
xor
jmp
scas
dec
jbe
inc
sub
inc
cs
aaa
std
sub
mov
adc
not
xchg
dec
adc
int3
icebp
mov
sbb
or
mov
xchg
jmp
sub
fidivrs
mov
cltd
aad
sbb
cli
mov
imul
pop
add
das
shl
in
imul
inc
out
adc
test
dec
das
orl
xlat
jo
test
jbe
fxch
pushf
mov
loop
repz
lea
mov
mov
enter
lret
jo
pop
fcompl
fisubs
and
inc
or
sbb
aad
push
icebp
lcall
addr16
lods
mov
adc
or
outsb
add
xor
cmp
adc
stos
mov
lret
rcll
idivb
subb
inc
jmp
push
pop
mov
insl
in
dec
fcoms
pop
jl
adc
pop
xchg
xchg
scas
mov
cmpsl
mov
mov
mov
xor
sub
xor
in
into
cltd
adc
pop
in
loope
inc
je
push
addr16
mov
repz
loopne
lods
stos
mov
lods
jmp
roll
push
sti
xor
cmpl
repz
test
or
arpl
hlt
jge
cmpsl
jae
jns
mov
fcomps
loopne
scas
jmp
pusha
imul
aad
sub
or
ja
mov
mov
lret
or
mov
push
xchg
adc
dec
mov
cmp
push
out
cltd
mov
and
cli
lods
cs
cmp
dec
mov
sbb
xchg
fwait
add
xlat
or
jge
js
ja
les
test
negl
test
mov
adc
mov
ja
inc
lret
cmp
adc
rcrl
mov
jo
ja
mov
nop
clc
xor
lahf
iret
or
int3
and
in
xor
xorb
mov
lret
outsb
jne
fidivrl
mov
insb
leave
cmp
aad
addr16
jnp
mov
lds
adc
int
xchg
add
push
mov
or
and
mov
in
xchg
cld
sub
imul
adc
xor
xchg
rclb
insl
and
aas
push
xchg
inc
in
aam
adc
mov
mov
imul
xlat
aad
movsb
mov
add
fs
push
in
jecxz
add
sbb
rcrl
mov
jo
and
and
mov
push
pop
pop
sbb
in
sub
loopne
adc
rcl
add
dec
pop
jp
adc
bound
cmovns
aas
push
imul
addr16
notl
push
pop
xchg
push
movsl
xor
sar
and
adc
and
push
push
cmp
lahf
pop
xor
push
xor
mov
mov
movsb
mov
mov
mov
cmp
das
scas
out
cmc
ljmp
mov
push
arpl
repnz
fwait
adc
xlat
push
imul
adc
ret
jae
push
rcll
aas
mov
lods
push
jns
add
xchg
mov
xchg
ret
js
add
ss
or
stos
push
adc
addr16
dec
jl
bound
add
mov
lret
add
flds
sub
sub
mov
ret
jg
mov
fs
call
std
lcall
adc
popf
and
mov
adc
std
lcall
lahf
xorb
adc
mov
in
aam
and
pop
xchg
xchg
push
rol
popf
sub
cld
adc
and
iret
sti
adc
cli
jg
test
cmp
dec
in
repz
xchg
lock
mov
dec
add
sub
leave
psrlw
rcrl
push
pop
je
shl
xchg
insl
mov
push
jae
out
aaa
aad
iret
jne
pop
fwait
pusha
xchg
ss
push
push
inc
and
lahf
out
loopne
pop
dec
mov
divb
xchg
jbe
push
mov
pop
mov
xchg
mov
mov
push
mov
jmp
aad
dec
mov
pop
mov
xor
push
adc
movsb
add
adc
gs
sti
xchg
rorl
jns
push
jno
mov
sahf
cmp
pop
ret
sub
or
adc
fildl
sub
aas
dec
pop
fisttpll
arpl
loop
pop
decl
adc
aam
lret
and
out
cmp
sbb
cli
in
cmpl
cmpps
pop
mov
mov
nop
pop
mov
je
or
dec
mov
lods
adcl
add
shrl
addr16
xchg
lock
push
pusha
push
negb
push
push
mov
jl
add
je
es
fmulp
les
mov
ljmp
pop
sub
pop
aam
pop
fcmovnu
arpl
pop
movsb
insb
jl
xorb
mov
adc
out
std
incl
cmp
fsubs
dec
dec
stc
adc
sbb
or
loop
mov
sbb
jb
and
mov
mov
leave
push
je
ret
and
xor
icebp
addr16
mov
and
mov
xor
xchg
out
cmp
scas
xor
push
in
cli
fsubs
cmp
cli
and
adc
adc
push
sbb
mov
mov
rorl
mov
das
stc
popa
sahf
or
leave
adc
dec
insl
lea
aad
adc
lods
sarl
std
xchg
dec
sub
pop
mov
lahf
outsl
mov
lods
inc
push
test
incl
pop
mov
out
lahf
sub
sbb
pushf
lods
xor
or
jg
mov
out
cmp
push
pop
jbe
rcr
out
out
add
cmp
cmp
in
or
pop
mov
movsb
or
xchg
jbe
sub
jns
jecxz
fstpt
addl
mov
sbb
mov
out
fists
loopne
lds
fwait
jo
or
gs
in
jno
insb
test
adc
rclb
lahf
push
push
or
adc
imul
int3
out
push
call
jo
pop
jl
xor
lret
fsubs
pop
push
jnp
jg
loope
adc
flds
dec
adc
xor
mov
fimull
ss
ret
xor
fbstp
test
cmp
jmp
lods
loopne
mov
mov
ret
ds
add
xor
call
jbe
add
enter
idivb
sbb
movsl
mov
adc
fwait
pop
sbb
push
adc
cmp
or
inc
cmp
pop
mov
fnsave
jbe
inc
mov
dec
arpl
aas
movsl
adc
add
nop
jg
lods
mov
lods
or
pushl
mov
jae
push
fucomp
lss
sti
pop
add
pop
je
ljmp
sub
imul
fwait
dec
pop
cli
fidivrl
cmc
test
out
add
ret
addr16
out
sub
adc
inc
imul
xor
mov
jle
fistps
popf
ja
jae
cli
pusha
sbb
test
jb
out
xchg
mov
add
das
fdivr
add
popf
out
test
insb
movsl
push
das
sub
xor
in
push
mov
jo
push
lods
cmp
xchg
rorl
xor
in
and
cmpsb
test
std
pop
adc
pop
push
pusha
push
lock
or
lahf
adc
movsl
out
xchg
cli
push
and
xorl
out
inc
inc
sub
mov
xor
idiv
mov
leave
out
lret
data16
jb
out
into
pop
jne
jg
mov
ret
cmp
scas
into
aaa
xchg
mov
les
cmp
ret
nop
out
add
cmp
inc
ret
push
sub
mov
dec
repz
mov
icebp
xor
sarl
or
out
mov
adc
or
push
dec
inc
mov
add
out
mov
outsb
cmpsl
imul
xchg
cltd
mov
adc
out
mov
jle
pop
sarb
fldt
loop
repnz
ret
or
dec
mov
adc
add
pusha
out
clc
out
dec
jmp
jnp
pop
xor
adc
arpl
adc
push
sbb
mov
imul
shrl
scas
mov
add
mov
sbb
mov
xchg
xchg
stos
adc
negb
in
mov
ds
mov
fcmove
negl
mov
jecxz
xor
daa
loopne
divl
mov
out
outsl
sub
sub
mov
adc
add
test
sub
outsb
mov
jg
adc
cs
testb
ret
sub
push
adc
fidivrl
cmpsl
ret
cmp
idivb
xchg
xor
jecxz
pop
fs
and
dec
data16
and
mov
loop
push
nop
mov
dec
repnz
push
clc
imul
dec
stos
test
fdivs
xor
jns
cmp
add
rclb
or
inc
cmpsl
jb
out
cmpsl
aaa
test
stos
sbb
fimuls
and
shl
adc
fwait
sub
es
add
shlb
les
in
xor
xlat
dec
sub
ret
sbb
mov
cmp
dec
cli
out
or
mov
push
in
push
add
popf
or
std
inc
sbb
enter
sub
cmpsl
das
js
or
add
imul
push
lea
pop
adc
or
push
push
and
iret
incl
pop
movsl
clc
out
jo
pop
jns
shlb
cmp
addr16
push
pop
cltd
xchg
sbb
aad
xor
rcrl
les
mov
jmp
inc
lahf
ss
repnz
lods
cmpsl
adc
movsl
filds
pop
xlat
jb
jg
and
cli
xor
mov
jmp
lods
inc
xchg
popa
ret
pop
in
mov
inc
cmc
inc
mov
jb
add
or
sbb
das
bndstx
mov
mov
pop
cmpsl
pop
cwtl
out
vmovddup
adc
mov
mov
push
ja
add
xchg
sub
lcall
add
mov
arpl
fs
nopl
add
xor
push
lods
outsl
loopne
and
in
or
out
mov
jo
mov
fisttpl
and
and
out
andl
mov
jl
pop
adc
lds
add
mov
insb
mov
cmp
jne
out
inc
xchg
pop
ret
or
int3
and
jge
es
add
jp
pushf
xchg
pop
rcrb
loope
inc
lret
push
xor
stos
dec
lahf
mov
xor
sub
cli
cmp
inc
push
cmp
aam
jp
insl
add
jne
enter
pop
mov
ljmp
lds
adc
pop
mov
mov
adc
mov
test
push
insb
push
loope
xchg
int
cmp
jnp
or
cld
sub
lods
or
jo
sub
sarl
fnstcw
or
ss
movsl
mov
fiadds
sbb
xor
pop
adc
push
inc
mov
push
sbb
xchg
mov
mov
pop
and
das
sub
push
sar
push
or
dec
cmpsl
aam
xchg
es
cmp
pop
aad
in
test
fimull
lret
out
and
mov
std
xlat
and
jbe
push
in
push
inc
mov
jp
adc
out
push
sti
mov
add
sbb
popa
pusha
outsl
outsl
mov
loopne
aaa
lret
cmp
dec
pop
fcomi
sarb
inc
cli
mov
xor
push
lahf
xchg
fstl
ret
lock
clc
cld
mov
add
push
sbb
shlb
mov
lea
xorb
lahf
cltd
mov
mov
out
pop
inc
xor
loopne
mov
sbb
mov
movsl
push
pop
sarl
movsl
outsb
adc
loope
push
sub
jne
cmpsl
xor
jae
leave
lock
pop
int3
pusha
or
inc
aaa
int3
pop
repz
rcl
fcoml
ljmp
lea
push
or
xor
adc
das
mov
dec
shll
cmc
addr16
jae
xchg
dec
scas
pop
icebp
sarb
mov
ret
add
pop
fcomi
loope
outsb
jecxz
inc
call
mov
push
xchg
or
inc
mov
mov
inc
add
aaa
movsb
adc
push
cmp
aam
shlb
aaa
je
sbb
inc
adc
mov
pop
mov
std
or
jecxz
or
adc
inc
in
je
inc
stc
mov
mov
push
hlt
push
js
ret
movsl
jge
mov
rcrl
out
mov
dec
iret
aas
je
adc
in
push
mov
inc
add
mov
jb
sbb
loopne
cmp
mov
mov
inc
loopne
ret
mov
lahf
xchg
adc
push
pop
lock
into
fldcw
mov
outsb
cmp
push
pop
loope
das
sub
add
push
jae
arpl
out
loope
or
mov
orb
mov
aas
inc
cmp
cmp
repnz
shl
call
jmp
pop
mov
xor
into
sub
rcrl
jno
sti
loop
mov
andb
lods
mov
pop
aam
je
pop
jbe
stos
and
imul
xchg
aaa
adc
cmp
negb
push
mov
push
ret
mov
fistps
clc
push
lret
ficoml
dec
pop
jno
ja
es
adc
mov
ret
test
push
insb
shl
adc
jae
fdivl
shll
lock
js
xchg
cmp
adc
movsl
mov
lcall
ret
cmpsl
pop
xchg
mov
cltd
jecxz
jmp
pop
or
fnstsw
into
mov
in
outsl
pushf
aaa
sub
add
fstpl
arpl
sbb
movsb
or
scas
jl
out
ret
nop
jne
pminub
mov
je
mov
daa
sub
jmp
pop
dec
or
push
sarb
xor
icebp
pop
sarl
outsb
pop
xchg
add
lret
negb
cmp
repnz
rolb
cmp
ficompl
shlb
fnsave
mov
jne
lret
fwait
add
jmp
test
dec
cld
test
ds
mov
das
sub
cld
adc
xchg
pop
sar
test
aam
ret
cmpsb
aam
adc
outsb
dec
fisttpl
adc
cmp
push
cmpsl
lcall
add
addr16
into
loop
mov
cli
mov
hlt
mov
mov
ds
mov
in
inc
pop
hlt
call
lods
inc
movsl
sbb
aam
adc
jp
push
pop
lahf
add
subl
mov
iret
mov
push
fwait
mov
loopne
loop
outsb
sub
rcr
adc
inc
pop
fwait
cmc
mov
mov
mov
ss
lods
in
shrl
lods
push
imul
sbb
insb
mov
aaa
mov
jae
sti
stos
call
and
jno
cltd
inc
insl
sbb
pop
push
jae
aad
pop
adc
jge,pn
inc
imul
call
mov
pop
add
psubsw
jb
out
enter
mov
mov
push
loope
add
in
cmp
inc
repnz
inc
add
pop
lahf
mov
xchg
call
sub
or
sub
jo
adc
xchg
add
push
cmpsb
xlat
pusha
orl
repnz
flds
js
mov
xor
unpckhps
aas
fadd
test
fnstsw
ds
mov
jle
add
jbe
sbb
test
out
dec
mov
mov
pop
adc
dec
repnz
lahf
or
cli
je
fisubrl
rcr
mov
ss
mov
xchg
mov
xor
sub
aam
daa
negl
pusha
push
mov
out
insl
mov
psubusb
adc
cld
push
inc
sub
ljmp
inc
dec
ret
lods
std
enter
sbb
out
ja
adc
outsl
es
and
lret
mov
dec
ja
cmp
std
jae
addr16
mov
je
aas
stos
xlat
int3
iret
or
aam
and
out
push
jp
push
and
pop
add
and
imul
out
in
xchg
adc
jp
ljmp
out
enter
mov
inc
pop
jg
lea
cmp
mov
mov
or
mov
or
mov
push
xor
es
jmp
arpl
ret
lods
adc
sbb
imul
xor
scas
icebp
fiadds
cmp
out
pop
mov
fists
cs
outsb
mov
cli
rcll
adc
je
xchg
sub
mov
loop
jne
push
stos
int3
mov
rorl
dec
pop
and
addl
vpcomd
cmpsb
aad
pop
ror
ficoms
cltd
sbb
jne
xchg
or
mov
pop
int
in
mov
fsts
jge
mov
dec
mov
lds
dec
mov
shr
push
sub
jbe
pop
cli
js
or
mov
pop
lds
mov
push
mov
cmp
scas
xchg
hlt
adc
mov
xor
push
push
mov
es
or
pop
sti
imul
push
mov
pop
inc
out
shrl
idivb
push
xor
roll
cmp
in
shl
fidivrs
out
mov
enter
jne
das
mov
cmp
add
imul
pushf
push
enter
in
ret
pop
jl
call
bound
inc
cmp
inc
adc
push
push
enter
lret
sarb
adc
cmp
pop
inc
pop
mov
xor
or
ret
das
mov
push
push
sti
sbb
fistps
sti
push
lods
pop
in
adc
xor
cmc
push
and
dec
popf
test
test
clc
add
lahf
push
cmpl
cmp
out
in
imul
add
mov
mov
sub
jmp
xchg
fbstp
jp
mov
mov
push
out
roll
cmp
repnz
sti
mov
cmpsl
dec
add
lret
or
add
mov
mov
or
fwait
das
mov
cmp
lahf
clc
jns
imul
mov
jb
dec
les
imul
ficoms
mov
pop
pusha
outsb
jno
mov
add
int
push
mov
add
lcall
sub
rolb
in
lock
lret
inc
adc
fstps
xor
mov
fidivrs
andl
in
aas
data16
mov
ret
xchg
aas
out
jae
xor
jno
leave
push
mov
fisubrs
addr16
pop
outsl
xchg
cltd
mov
mov
les
pop
dec
cli
cld
test
inc
adc
ficomps
inc
or
loopne
pop
jns
repnz
add
fcomps
mov
pop
ret
inc
cmp
xor
addr16
adc
mov
adc
mov
jle
pushl
add
stos
lock
movsb
cmc
mov
scas
mov
fsubrs
adc
gs
pusha
ds
sarl
mov
or
icebp
ficoml
sub
cmp
jne
jae
repnz
push
lea
jb
and
cmp
arpl
mov
fdivs
rcl
in
adc
pop
cmpsl
pop
repz
mov
cmpsb
imul
lret
mov
shl
lock
mull
mov
or
dec
out
cmpsl
outsb
xor
mov
loopne
fiadds
ret
dec
pop
dec
ret
or
ret
add
mov
sbb
adc
cmc
sub
dec
mov
call
push
mov
shrb
push
push
ret
ljmp
mov
rol
dec
out
cmp
add
or
dec
xor
xchg
mov
adc
mov
test
jmp
dec
enter
out
jnp
outsb
dec
mov
lcall
push
pop
inc
xchg
push
loope
lock
adc
sti
lods
mov
jae
shll
pop
pop
clc
mov
xchg
adcl
xchg
stos
push
nop
mov
sbb
out
pop
push
mov
jns
dec
sbb
sub
push
outsb
mov
adc
jmp
or
sub
pop
pop
push
insb
subl
sarb
pop
repnz
jne
cmp
sar
add
inc
je
inc
xchg
test
mov
icebp
aaa
aas
pop
and
int3
mov
mov
dec
jns
incl
enter
xor
or
or
test
dec
adc
xor
jl
xchg
cld
pop
loop
insl
fldl
lahf
push
fiaddl
sub
or
jecxz
int
push
xlat
fmull
in
mov
dec
fwait
jge
inc
cmpsl
inc
lahf
sub
sub
daa
add
pop
push
xchg
clc
cli
testb
push
pushl
stc
jnp
mov
insb
fsubrs
xor
movsl
xor
sarl
repnz
add
repz
and
loope
cli
fwait
movsb
mov
jno
pop
int3
insb
ret
adc
test
outsb
fmuls
jno
adc
mov
repz
mov
push
cltd
js
stc
jecxz
cli
push
insl
shrl
push
movsb
pop
jno
push
scas
adc
fcmovnu
out
mov
mov
movsl
imul
mov
jecxz
jne
in
stos
mov
or
jb
lods
out
xadd
scas
js
not
adc
dec
out
sub
andb
les
or
fbld
test
out
dec
je
test
into
jb
dec
or
mov
xor
fwait
inc
push
pop
mov
mov
jo
sti
inc
cli
lods
sahf
adc
cmc
add
imul
in
iret
jnp
cs
stc
jp
fadd
les
je
jno
repnz
inc
inc
lret
or
inc
adc
pushl
mov
xor
pop
lods
idivl
xor
mov
xor
pop
test
lret
adc
add
pop
out
aaa
xchg
stos
jno
mov
adc
push
stos
add
dec
loop
jecxz
or
inc
pop
aas
mov
clc
dec
movsl
and
add
dec
lahf
and
inc
test
fiaddl
test
xor
push
int3
cmp
adc
mov
mov
jp
mov
sub
mov
filds
dec
jecxz
inc
mov
jge
mov
cld
or
pusha
adc
sub
daa
mov
test
ret
and
or
shld
fsubr
aam
out
sti
cld
xchg
sub
inc
sub
inc
cmp
inc
or
repnz
negl
call
lcall
adc
dec
adc
out
arpl
mov
sbb
dec
mov
push
fdivs
and
insb
and
lahf
mov
mov
mov
popf
add
or
js
inc
and
cli
inc
xor
inc
sbb
iret
lret
sub
sub
cmc
fmuls
adc
out
insl
sub
scas
je
jecxz
lock
adc
sti
jnp
ret
icebp
inc
lahf
xor
rorl
pop
js
pop
sub
loopne
xor
mov
mov
outsl
sbb
pop
lea
rcll
push
xor
jge
jecxz
cmpsb
in
or
outsl
push
jns
pushf
aaa
lds
loopne
pop
jge
xchg
mov
cli
sbb
push
sbb
xor
mov
dec
iret
adc
sbb
int
jne
dec
fcmovu
mov
movsb
cmpsl
push
mov
repnz
out
pop
mov
sbb
add
dec
rcr
ret
xor
jl
daa
xchg
repnz
daa
sbb
fs
adc
ret
shrb
xor
pop
mov
adc
test
dec
stos
inc
lahf
mov
lds
push
fiadds
movsb
std
sahf
loopne
subb
mov
lahf
mov
push
mov
adc
cs
adc
cmp
xor
mov
mov
dec
xchg
repnz
xchg
clc
sub
leave
fistl
out
pop
sub
out
xchg
push
push
jmp
cltd
xor
mov
ljmp
cmpsl
xchg
iret
pop
cltd
cmpsl
sub
jb
insl
xchg
push
mov
imul
xchg
dec
lock
mov
and
maxps
inc
cmp
cmc
invd
std
aas
sbb
in
mov
mov
arpl
sub
mov
mov
fsubrl
loopne
stc
mov
sub
pop
rcr
test
insl
mov
vmovaps
push
or
ss
cmc
idiv
cli
imul
dec
pop
adc
arpl
cmovo
sub
enter
lods
ja
adc
scas
in
lock
cltd
flds
push
add
mov
aaa
xchg
in
adc
movsb
push
add
cmp
xor
shl
mov
hlt
xor
sub
jg
pop
or
cmp
add
jmp
dec
inc
sti
lods
out
pop
push
cs
dec
es
pop
and
cmp
fcoml
jge
mov
push
test
xlat
outsb
fwait
test
adc
mov
ss
fstpt
jo
push
icebp
ret
mov
push
scas
negb
ds
mov
rcl
cmp
and
adc
lock
xor
inc
jle
scas
xchg
aaa
fcmove
in
ret
pop
fldl
daa
mov
adc
ds
sbb
jno
pop
inc
add
imull
cli
cli
cltd
jge
adc
pop
sti
in
cld
xchg
lock
xor
mov
pusha
mov
cmpsl
lods
cs
rsqrtps
shlb
int
xlat
xchg
sub
scas
pop
into
bound
or
and
cmp
insb
sti
ds
data16
lods
stos
in
xlat
and
and
ret
sub
sbb
jmp
pop
jbe
lods
xchg
sbb
iret
shufps
mov
data16
sbb
lods
jge
sub
mov
pop
lahf
inc
and
adc
dec
and
or
pop
pop
jg
sbb
cmc
mov
or
push
fsub
sbb
cli
sbb
test
cmpsl
add
push
cmc
pop
stos
call
adc
jns
inc
ljmp
imul
pop
loopne
mov
cli
lds
lret
or
test
cld
xchg
dec
stos
scas
add
mov
or
mov
cmpsb
and
xorl
add
push
lods
pop
xor
fadds
test
mov
outsb
xchg
sub
cmp
outsb
push
dec
dec
mov
jmp
xor
in
inc
add
add
inc
stos
rcr
lods
lret
ljmp
jo
dec
mov
fcoms
leave
pop
dec
call
aaa
sub
jg
lret
pop
mov
sbb
ret
sbb
inc
and
jg
cld
or
lahf
pop
inc
mov
repz
sbb
insl
adc
js
rcll
or
cmpsl
lret
ja
insl
push
xor
jmp
enter
negl
mov
incw
imul
mov
enter
inc
push
mov
movsl
pop
imul
ss
mov
adc
push
lods
in
lret
push
stos
lods
add
push
inc
push
insl
cmp
fisttpl
call
sub
test
arpl
pop
cmp
fsubr
idiv
ds
push
mov
jo
push
lock
repz
pop
fldt
iret
xchg
jle
lret
adc
xor
cmp
xchg
arpl
sahf
ret
rorl
addl
pop
push
lret
lods
push
out
mov
loopne
lock
jns
mov
ror
jg
outsb
iret
arpl
std
popa
in
negl
xlat
aam
test
repz
push
pop
out
jmp
sub
gs
ljmp
insl
adc
pop
cmpl
cmp
sbb
enter
cmp
fsubl
sahf
mov
pop
sbb
mov
dec
add
dec
cmp
or
out
rclb
cpuid
cmp
push
stc
push
arpl
cmpsl
inc
or
clc
lods
adc
cmpsl
mov
test
xor
scas
fwait
pop
mov
cwtl
jno
test
out
lds
xor
or
add
pop
sub
cmp
pop
mov
push
mov
sahf
cmpsl
jnp
lret
xchg
cmp
add
sahf
push
call
lea
or
sbb
scas
sub
mov
xor
arpl
xchg
pusha
ds
mov
lock
push
cmpsl
flds
mov
xor
xor
cmpsl
fwait
lahf
xchg
jmp
jp
aaa
cmp
enter
out
mov
scas
xchg
dec
ja
insb
jb
loope
mov
pushl
push
mov
or
aam
lcall
addl
cmp
xchg
bound
movsb
rcll
bnd
push
mov
or
ljmp
push
mov
rclb
jb
push
add
pause
add
sti
ret
sbb
cmp
sbb
or
lahf
add
adc
dec
outsb
xchg
lods
nopl
dec
fisubs
repz
jno
fcmovbe
rcll
lds
add
pop
mov
inc
stos
iret
packsswb
sti
xchg
mov
and
dec
scas
sub
jmp
movsl
cwtl
cmp
cmpsl
jge
or
lds
movsb
or
pop
ja
out
push
adc
popa
scas
lods
jge
sbb
xchg
addl
out
adc
or
stos
fildl
in
std
mov
pop
movw
cmpsl
xor
xchg
clc
cli
dec
sub
aas
dec
outsl
ss
xor
sti
stc
ficomps
push
jmp
inc
jb
insb
test
les
icebp
inc
mov
mov
pop
cwtl
in
js
lock
xor
lea
pop
loopne
mov
pusha
pop
insl
std
sbb
or
inc
icebp
ds
push
out
daa
out
in
scas
addr16
xlat
out
adc
enter
mov
pop
cli
in
outsb
push
inc
fbstp
movsl
push
into
add
push
pop
aam
mov
pop
in
sbb
sahf
jbe
cmpsl
movb
icebp
shlb
mov
xor
jno
aam
outsl
pop
add
xor
mov
inc
dec
xlat
test
nop
adc
xchg
fwait
pop
iret
mov
jmp
cld
inc
add
or
mov
mov
mov
push
push
sub
test
fsubrl
fisttpl
stos
fmuls
push
ds
mov
adc
dec
fwait
jnp
jle
add
mov
pop
or
pop
paddq
out
cmp
cs
pop
dec
mov
adc
je
testb
xchg
ds
shrb
or
outsb
shl
sbb
push
imul
arpl
daa
lahf
mov
pushf
mov
mov
gs
jl
fsubp
cmc
ret
mov
bound
ret
jb
iret
inc
xchg
jmp
movsl
mov
mov
jmp
popf
push
roll
add
cmp
data16
hlt
cmc
cmpsl
ret
pop
and
dec
sub
hlt
out
scas
ret
repz
push
mov
cmpsl
adc
jecxz
lahf
pop
in
add
xor
data16
jnp
fnstsw
pop
push
imul
mov
push
add
xchg
mov
aam
sbb
out
mov
cmpsl
cmp
iret
sbb
stos
cmp
scas
in
dec
sahf
fstpl
jns
lahf
ds
mov
adc
jae
shrb
adc
lock
pop
mov
femms
push
and
test
push
idiv
dec
xchg
jno
lods
jno
cmp
pop
sbb
addr16
pusha
xchg
outsb
cmp
push
cs
dec
fsubrp
adc
clc
or
ss
test
xlat
xchg
push
sbb
inc
ret
and
test
sub
lds
add
sub
pop
aas
ljmp
inc
fnsave
mov
sbb
adc
or
pop
int3
fbstp
mov
cmpsl
jno
cmp
xor
jmp
test
sbb
popa
fmuls
movsl
cmpsl
out
pushf
insl
xor
or
scas
loopne
mov
jae
lods
xor
add
push
cmp
insb
arpl
sub
sti
outsb
repz
lds
jle
in
push
pop
fistpll
inc
popa
pop
mov
push
sub
rclb
insl
enter
jnp
lea
cmp
mov
lahf
jns
dec
movsl
xchg
inc
imul
call
vcvtsd2ss
scas
sbb
pop
add
lret
adc
leave
ret
cmp
in
ja
cmpsl
int
dec
aad
add
sub
enter
mov
insb
adc
sbb
mov
pop
push
mov
sahf
out
scas
mov
jo
adc
movsl
repnz
jns
add
sbb
insl
push
mov
adc
adcl
aaa
push
fcmovnb
lahf
in
inc
int
dec
pushf
push
std
dec
sub
mov
je
mov
cmpsb
xchg
push
frstor
cmp
and
add
jnp
call
cmp
pop
or
xchg
pop
insl
fcoms
test
pop
xchg
outsb
punpckhdq
movsb
push
jne
bound
inc
dec
sub
mov
out
fiadds
pop
lods
sbb
lcall
rcrl
adc
sbb
adcb
mov
ret
shr
in
cmp
int
rcrb
mov
push
movsl
repnz
and
sbb
xchg
sub
imul
jle
adc
jae
ret
insb
aas
jmp
xlat
fimuls
cmovl
pmulhw
inc
or
popf
sbb
mov
test
mov
icebp
cli
and
jmp
lret
cld
or
sbb
xor
sbb
arpl
xor
in
or
mov
mov
push
or
adc
ret
pushl
pop
imul
in
sbb
daa
scas
jmp
je
and
mov
mov
test
shr
in
cmp
sbb
mov
adc
cmp
mov
popa
loopne
int
mov
lcall
push
setns
aam
ss
sub
out
lcall
and
dec
sbb
into
aad
xor
jo
or
cmp
push
jmp
mov
outsl
mov
xor
loop
pop
xchg
in
out
adc
arpl
subl
cmp
pop
jae
out
pop
push
rorl
movsb
movsb
test
pop
xchg
fmulp
jmp
in
movsl
adc
mov
mov
inc
mov
jno
addr16
jl
test
adc
test
aaa
adc
lods
push
shll
das
cmp
xor
mov
mov
fwait
push
scas
mov
xchg
das
cwtl
jo
push
mov
cmp
xchg
repnz
lret
xor
adc
push
add
inc
sbb
mov
add
pop
sub
and
cli
or
lret
adc
and
cli
mov
xor
test
dec
ffreep
aaa
jnp
movsb
cs
or
jne
pop
and
out
movsl
lods
lods
rorb
daa
inc
mov
idiv
mov
inc
jbe
in
je
cmp
clc
fidivrl
lret
orb
xor
mov
wbinvd
fucomi
ret
pop
jnp
mov
mov
sbb
pop
iret
mov
mov
cmp
mov
out
jno
lret
roll
repnz
push
dec
ret
movups
push
adc
cwtl
call
jns
in
cmpsb
xchg
jmp
push
jae
push
xor
ds
sbb
movsb
sbb
xor
jne
jge
movsl
adc
push
push
or
popf
mov
mov
push
xchg
sbb
mov
push
add
mov
jge
loopne
sbb
inc
jmp
or
xor
and
sub
dec
mov
jge
cld
aas
cmp
mov
inc
test
mov
adc
mov
cmpsl
andl
nop
mov
inc
push
mov
inc
push
push
aaa
pop
sub
cmp
popa
cmp
pop
hlt
push
std
test
and
jnp
jae
ss
in
xor
pop
jnp
sbb
xchg
mov
sbb
cs
or
std
outsb
imul
jge
push
jne
imul
mov
xchg
or
sti
cmpsl
or
add
push
or
dec
outsb
mov
dec
mov
xor
inc
xchg
pop
push
fisubs
sub
pop
lods
movsl
inc
out
cld
jmp
cmpsl
lret
js
pushw
ds
nop
pop
in
imul
push
lahf
jns
enter
std
add
je
sub
jmp
lahf
mov
push
jg
aam
push
xor
in
scas
cmc
pop
push
test
mov
xchg
mov
daa
into
imul
pop
insb
jo
mov
inc
xchg
ficoms
fwait
pusha
mov
jle
outsb
mov
mov
jb
xor
je
rcrl
cld
jo
sub
sbb
mov
mov
cmp
cwtl
push
sub
cmp
arpl
cmpsb
xchg
mov
pop
add
mov
fdivp
cmp
adc
outsl
loope
cmc
in
cwtl
lret
mov
iret
repz
dec
insb
inc
outsb
sub
xchg
fucomi
nop
cltd
xchg
xor
push
push
jg
fwait
in
xor
enter
push
xchg
inc
lods
pop
push
int
push
xchg
test
mov
jle
jne
sbb
ret
adc
add
das
cmp
stc
scas
pop
jo
adcb
rcr
insb
sbb
add
and
out
pop
xor
mov
stos
or
ds
sbb
adc
jmp
fistpll
xchg
popf
adc
fsubs
cmpsl
lahf
inc
xor
stos
adc
pop
dec
imul
loop,pt
pop
xchg
arpl
bnd
repz
jecxz
jg
push
je
or
dec
es
pop
mov
sub
xchg
xchg
jbe
add
dec
lds
imul
jl
gs
pop
jno
fnstenv
lods
jne
cmpsl
adc
ja
and
lods
push
pop
lcall
aaa
sti
mov
out
pushf
in
arpl
lods
pushf
scas
cmp
pop
sarl
push
mov
mov
mov
mov
sti
fstpt
xchg
cltd
jecxz
xor
mov
out
out
pop
out
inc
sarb
add
rorl
and
mov
push
push
cmpl
dec
mov
fsubs
aas
mov
lods
pop
cli
and
cmp
mov
jp
ret
jns
mov
sbbb
mov
mov
lds
sbb
pop
jns
lahf
daa
addr16
xlat
cmp
or
fildll
mov
pop
inc
ja
add
in
jmp
out
scas
mov
cmpsl
cmp
xlat
fimuls
stos
outsl
mov
lret
lahf
jp
xor
jg
jge
pop
imul
jecxz
mov
jl
xor
dec
aaa
popf
aaa
push
outsl
sub
aaa
jl
lcall
push
sub
jns
outsb
ret
stos
jecxz
xchg
inc
fcmovne
push
cmpsl
outsb
inc
mov
into
iret
sahf
fcmovnu
jnp
push
sahf
jmp
inc
imul
idivl
test
cs
stos
mov
mov
je
sub
xchg
pop
aas
jnp
imul
push
jmp
cmpb
out
xor
inc
leave
sti
mov
aam
fdivl
push
das
ret
shlb
fcmovne
aam
lret
mov
jbe
pop
popa
xchg
xchg
imul
ffreep
pop
testl
push
popl
xchg
imul
mov
leave
or
pop
fcmovne
sub
ret
rcrb
loopne
pusha
ret
adc
push
or
aam
adc
aad
adc
addr16
jo
negl
je
push
mov
xlat
mov
das
or
das
pop
scas
push
fdivs
sub
ret
xorb
jns
outsb
fmuls
mov
pop
xchg
pop
clc
jne
negb
inc
jae
jne
cmp
popa
ret
data16
adc
cmp
pop
repnz
inc
repz
fsts
out
adc
pop
sbbl
adc
arpl
adc
add
ret
fs
pop
add
mov
incb
clc
pop
bound
cwtl
push
outsb
xor
lock
add
ret
sarb
popf
into
sub
lock
push
push
mov
add
xlat
mov
les
add
aad
js
jo
pop
stc
ljmp
js
ret
outsb
test
scas
cli
pop
mov
inc
ret
incl
or
movl
sub
add
cmc
sub
xor
jne
in
insb
push
insb
test
mov
cmpsb
inc
test
popa
inc
insb
inc
sub
and
push
push
pushf
bnd
movntq
inc
cmpsl
insb
mov
addb
sbb
fwait
insl
xchg
mov
cs
xor
outsb
adc
cmpl
push
cld
fcoms
pop
cmpsl
imul
push
jl
cmpb
adc
xchg
jge
inc
cwtl
pop
mov
ja
call
cs
sbb
movsb
jno
subb
aad
lods
aas
pop
sub
inc
iret
mov
mov
push
ljmp
xor
xlat
cmpsl
push
out
push
andl
pop
iret
out
pop
mov
and
mov
clc
cmp
std
daa
jp
rol
aaa
jnp
adc
mov
inc
fcoml
leave
cli
or
pop
mov
jmp
imul
lret
pusha
or
out
dec
add
mov
cli
mov
inc
repnz
inc
mov
jns
mov
sbb
add
repz
jmp
test
arpl
ds
repnz
ret
cmp
or
pop
cs
jmp
dec
cmp
and
jnp
ret
lock
adc
pop
out
cmc
xor
push
mov
xchg
and
shr
xchg
push
dec
sbb
inc
add
rorl
dec
mov
fcmovnb
cmpsl
outsb
pop
push
insl
pop
fildl
jp
in
mov
aas
jecxz
popa
cmpsl
lcall
nop
mov
xchg
pop
imul
mov
ret
mov
inc
or
xor
lods
mov
xor
mov
lret
lcall
mov
add
add
adc
pop
push
lods
ficompl
repnz
jb
das
jmp
outsb
iret
or
inc
ja
mov
mov
or
inc
inc
test
sbb
mov
push
mov
lahf
push
mov
pusha
jo
pop
xor
decl
mov
das
sub
cmp
js
loopne
in
daa
fnstenv
xor
inc
xor
adc
inc
jecxz
and
xchg
mov
lods
imul
stos
out
lcall
xor
mov
jns
in
mov
aaa
loopne
jl
fimull
aam
cli
mov
iret
clc
sar
mov
mov
lock
push
or
les
push
fimuls
lock
and
sbb
adc
push
punpckhbw
test
pop
add
mov
and
aas
sub
mov
pop
pop
das
loope
in
pop
adc
enter
sbb
xlat
xchg
fistpll
fstl
push
cmp
adc
sbb
clc
sbb
mov
and
mov
leave
nop
sbb
sahf
nop
xchg
bswap
cmp
mov
lds
popa
pusha
jo
pop
fwait
out
cmpsl
in
test
sbb
adc
lods
rcr
mov
data16
or
sub
cld
jp
xor
sbb
shrl
sti
jbe
call
lret
cmp
insb
push
xchg
hlt
iret
or
fcmovnb
jb
fsts
mov
daa
repnz
push
stc
jmp
push
inc
lea
loop,pt
fcmovnu
mov
movsb
jns
lahf
and
xor
pop
das
pop
xor
negb
ljmp
mov
xchg
ficoml
or
imul
iret
loopne
stc
inc
adc
hlt
icebp
notb
aas
and
push
ja
inc
add
aaa
lea
and
mov
adc
sti
jb
gs
cmp
das
lods
cmpps
rcll
lahf
xchg
aad
sub
mov
pop
jne
pop
mov
fcomps
xlat
xchg
cmp
pop
inc
adc
adc
mov
xlat
fstpl
cmp
and
data16
in
pop
addb
dec
xor
sbb
cmp
lahf
add
xchg
test
sub
insl
jns
test
xor
pop
push
sbb
ret
mov
mov
iret
ficomps
add
out
cmp
push
mov
pop
and
in
sbb
outsb
add
into
inc
int
lods
push
adc
mov
mov
jmp
lock
xchg
js
sbb
movl
ja
add
mov
mov
outsl
pop
aas
jnp
into
sub
lods
ds
fimull
fnstenv
jb
div
push
mov
icebp
adc
pop
xor
or
and
fwait
imul
into
jge
cmp
popa
pop
adc
jp
ljmp
jg
sarl
pop
popl
push
jl
lock
inc
lcall
xorl
push
mov
mov
pop
testl
xor
cmp
fdiv
hlt
ret
jns
push
pushf
push
movsb
push
adc
cmpsl
notl
adc
inc
out
inc
sbb
daa
fwait
shll
adc
icebp
pop
mov
fnstsw
mov
ja
pop
mov
arpl
mov
adc
int
adcl
sahf
in
jnp
cli
xchg
inc
jmp
cli
inc
fwait
dec
jmp
mov
inc
sub
jmp
jmp
sub
sti
aad
xlat
or
out
xor
mov
jo
pusha
test
stos
shr
mov
inc
add
imul
adc
lods
orb
lret
rcll
adc
clc
lods
and
ret
adc
sub
and
cli
jle
push
jae
or
push
testb
pop
cltd
fisubs
or
xlat
xor
cmp
adc
out
ret
mov
stc
mov
pushf
cmp
scas
pop
mov
mov
xor
or
sbb
push
xlat
sbb
nop
pop
sub
push
xor
sub
inc
cmpsl
andl
pop
cmp
dec
xorl
pushw
scas
cli
mov
sbb
or
ret
stos
sbb
pusha
std
lock
cmc
imul
or
inc
fisttpll
fwait
mov
loop
lcall
mov
mov
inc
add
adc
idivl
insl
aaa
jmp
sub
push
insl
ret
les
je
sti
das
lds
xor
add
and
mov
jo
pop
mov
stc
mov
cld
sub
add
mov
add
pusha
mov
or
test
dec
movsb
arpl
push
pop
lds
fxch
push
fldenv
or
or
pop
or
jge
push
jb
adc
test
cmp
lcall
pop
outsl
aad
lret
adc
idivb
mov
mov
out
es
fcompl
test
push
sbb
sub
ds
mov
mov
mov
xor
sub
xor
pushf
cmpsb
insl
xor
adc
sbb
push
inc
cmp
inc
ret
into
xchg
jle
loopne
and
icebp
in
fisubs
adc
pop
xor
jo
cmp
jmp
mov
inc
fldenv
out
lods
xlat
imul
cs
andb
lcall
mov
data16
xor
adc
dec
lods
sbb
sub
pop
fcmovnb
cli
into
sti
mov
push
push
lds
inc
cli
loopne
pop
push
dec
or
les
inc
test
in
pop
bound
aad
inc
mov
jns
xor
cmp
cld
test
repz
xchg
inc
xchg
inc
add
push
es
das
mov
outsb
xor
mov
dec
sbb
rorb
or
xor
stos
in
rcrl
ret
arpl
lods
mov
inc
jo
pushf
xor
insb
insb
lret
bound
aas
mov
movb
outsb
pop
xor
add
test
mov
cmpsb
std
hlt
je
sbb
arpl
cli
pusha
xchg
pop
sub
pop
js
rorb
fwait
sahf
bsr
push
std
xchg
sub
and
xor
rcl
adc
imul
ss
mov
call
cmpsb
pop
out
sti
sub
sbbl
mov
pop
inc
pop
xchg
sahf
mov
xchg
mov
mov
mov
sub
xchg
mov
jle
mov
imul
das
pop
adc
xor
mov
pop
mov
std
xlat
add
fs
pop
mov
es
xlat
cld
iret
or
pop
insl
inc
push
je
inc
iret
adc
push
xchg
mov
mov
pop
ret
sbb
xor
mov
fldenv
push
adc
add
arpl
mov
sarb
aam
pop
adc
lahf
mov
pop
and
scas
mov
ret
ds
in
or
nop
push
shll
cltd
stc
mov
mov
pop
in
inc
shll
push
ljmp
aaa
popf
out
inc
jg
xchg
js
loopne
adc
gs
movsb
test
sbb
push
mov
divl
mov
cmp
lds
cmpsb
xlat
jns
fdivrs
test
xchg
jo
sarb
xor
sti
jmp
ljmp
stos
addl
sub
sbb
push
in
addr16
lods
int
adc
shrl
adc
xchg
add
jo
fiaddl
ds
sbbl
and
daa
mov
mov
das
aam
stc
cli
leave
pop
adc
fmuls
jp
or
shll
mov
mov
icebp
clc
jp
lds
or
dec
lret
ret
push
pop
int
inc
fwait
mov
sbb
sbb
outsb
fwait
loop
mov
cmpsl
jns
adc
stos
adc
out
sub
testl
push
mov
adc
xor
adc
adc
xchg
mov
sar
xchg
ss
lret
add
mov
mov
std
mov
in
mov
pop
lahf
movsb
loopne,pn
in
mov
mov
add
lret
les
inc
push
jl
arpl
push
push
rcll
lcall
imul
outsb
cmp
or
test
xor
pop
fwait
and
sti
leave
cli
push
subl
mov
ret
push
sbb
cmp
iret
and
call
sahf
push
xchg
psadbw
dec
pop
stos
jecxz
cmp
jne
fsubs
je
mov
cmp
sarb
and
cmp
dec
xlat
cmp
ljmp
adc
stc
lahf
test
stos
adc
inc
repz
inc
daa
pop
cmc
jns
xor
repnz
out
mov
sub
fidivrl
adc
fiadds
jecxz
sub
fidivrl
lea
data16
outsb
sbb
pop
xchg
stc
xor
outsb
loop
cmp
aam
sbb
cmp
pop
mov
sub
test
jb
lahf
push
shl
cmp
xor
xchg
sbb
ds
adcb
cmpsl
lods
notb
xchg
sti
add
mov
pop
das
inc
jb
cltd
test
nop
cli
or
in
lret
xor
cmpsl
pop
mov
dec
shll
xchg
xorb
inc
adc
daa
shlb
cmp
pop
and
fisttpll
cmc
fdivrl
jle
push
xchg
stos
adc
imul
in
add
cmpsl
stos
push
ds
push
pop
daa
pop
jb
cmpsb
pusha
mov
andb
sub
cmpl
xlat
adc
idiv
aam
sbb
fcoms
mov
cmp
inc
push
iret
out
imul
mov
lods
dec
lret
mov
cli
lods
mov
mov
mov
mov
pop
inc
and
or
add
mov
pop
mov
pop
test
aaa
sub
ja
fiadds
aaa
mov
jge
arpl
adc
mov
mov
ret
ja
pop
inc
mov
fcmovnu
out
cmp
fs
add
mov
sub
xor
adc
jae
fisubs
jnp
mov
mov
sti
jmp
insb
lret
in
mov
mov
loopne
icebp
fstps
and
sbb
or
pop
das
sbb
movl
add
loope
adc
cmpsb
mov
shl
fwait
mov
pop
inc
adc
sub
cs
arpl
lcall
pop
inc
add
dec
pop
mov
mov
popa
jmp
push
loop
filds
adc
pop
and
aam
mov
mov
push
pop
test
mov
adc
shl
out
mov
ljmp
or
inc
push
mov
cmp
test
rorb
mov
push
dec
pop
jno
adc
hlt
call
mov
cmp
inc
jl
mov
mov
subl
mov
adc
stos
push
and
mov
fildll
xchg
xchg
cmp
lahf
jb
pop
cmp
inc
xchg
push
shlb
fwait
sub
mov
sub
inc
jp
sub
lret
dec
cltd
push
lea
sub
in
push
cmp
pop
mov
les
jne
xlat
pushf
xchg
fdivr
idivb
sub
das
pop
into
rclb
mov
test
mov
push
insl
mov
cltd
in
jb
mov
mov
mov
mov
decl
shrb
pop
pop
in
add
sbb
out
or
jp
fidivrs
adc
fnsave
out
loopne
sub
pop
rolb
mov
neg
xchg
or
mov
cmp
lods
cmp
push
mov
jae
adc
pop
sbb
xchg
inc
mov
stc
pop
shrb
mov
data16
out
push
mov
pop
outsb
test
popa
lret
in
mov
or
pop
and
xchg
mov
aam
mov
fsubrp
nop
mov
pop
inc
pushf
cmp
sbb
scas
xor
sbbl
sbb
jno
sub
dec
int
mov
mov
sarb
inc
pop
iret
inc
jl
xorb
mov
in
mov
xchg
ret
mov
das
mov
stos
xchg
inc
mov
pop
jmp
mov
push
stos
or
sarb
lcall
ds
test
mov
cmpb
aad
outsl
subl
iret
pop
xor
mov
test
out
dec
mov
xchg
int3
mov
shl
repnz
mov
test
ret
popf
jne
xlat
adc
cmpsl
push
mov
leave
mov
add
andb
out
in
cmpsl
movl
mov
lahf
movl
adc
mov
dec
ss
dec
mov
dec
xlat
test
mov
or
rcr
mov
les
xbegin
lret
xchg
sub
pop
shlb
in
mov
mov
mov
pop
fs
loopne
push
test
inc
stos
mov
pusha
roll
cmpsb
in
lcall
sbb
sbb
xchg
mov
push
test
xor
int3
icebp
adc
push
mov
cmpsb
ljmp
lods
call
mov
in
xchg
mov
out
filds
stos
inc
bound
add
add
lods
imul
mov
cmp
mov
ret
jne
dec
inc
xor
inc
dec
jns
or
or
rorl
es
dec
mov
cld
cmpsb
push
in
jp
nop
pop
daa
xlat
mov
movntq
out
cmp
sti
lods
jmp
sub
xor
mov
inc
and
in
aad
aaa
pop
shlb
mov
xchg
aaa
add
dec
leave
mov
pusha
lret
ss
mov
xor
mov
pop
mov
sbb
mov
dec
xor
das
sub
sub
scas
jno
or
shl
mov
orb
pmuludq
mov
mov
cmp
push
outsl
insl
mov
insb
out
dec
or
push
in
inc
ljmp
mov
and
and
xchg
dec
leave
push
and
inc
jl
ret
cmpl
in
pop
push
fdivrl
mov
cmp
xor
loope
and
in
inc
mov
lods
dec
pop
bound
dec
or
cli
ss
pop
ja
fistl
xchg
push
in
popf
or
dec
mov
pusha
mov
scas
jmp
xchg
cmp
repz
and
add
sbb
push
pop
mov
or
pop
add
cmp
stos
fdivs
sti
cmp
out
fsts
les
mov
sbb
jmp
or
sahf
cmp
push
das
add
xor
add
cmc
rcr
in
mov
movsb
loop
xlat
dec
or
iret
ret
icebp
sti
fistl
xchg
adc
neg
mov
or
mov
mov
or
mov
rolb
fiadds
stc
rol
inc
adc
es
cmc
out
xchg
or
test
mov
out
lods
sub
daa
fsubrs
sti
outsl
mov
mov
out
cli
xlat
add
scas
adc
mov
sbb
xor
or
lahf
mov
out
orl
add
xor
add
pop
scas
push
sbb
dec
sbb
outsb
lods
mov
out
mov
push
ljmp
rorl
jbe
dec
adc
xchg
in
pop
orb
mov
clc
xchg
movsb
inc
sub
inc
in
mov
stos
jo
push
inc
add
cmp
mov
lea
popf
lcall
iret
jecxz
mov
jecxz
inc
and
cmp
test
repnz
pushl
mov
rcl
xchg
and
mov
fnstcw
stc
gs
sub
inc
fdivrs
ret
or
sub
or
inc
repnz
xchg
inc
mov
je
mov
jbe
out
mov
sub
out
stos
ret
push
shlb
push
jns
dec
mov
xchg
lcall
adc
test
push
mov
out
int
fst
inc
pop
mov
mov
pop
sbb
out
icebp
call
sbb
and
or
pop
inc
test
pushf
inc
mov
bound
mov
rol
pop
stos
jno
mov
or
mov
das
lock
jo
lods
mov
inc
inc
stos
pushf
popf
int
fisubs
mov
xor
mov
out
push
inc
das
mov
fdivrl
pop
sub
cmp
mov
call
loope
das
int3
cmpsb
cmp
push
mov
push
movsb
imul
dec
push
xchg
push
stc
sub
pushf
repnz
ret
rol
jl
jp
mov
cmp
arpl
das
mov
mov
pushf
and
lea
daa
jne
adc
add
inc
cld
jbe
subl
shl
mov
add
xchg
jne
punpckhdq
jmp
mov
mov
pop
lock
dec
cmp
jae
mov
adcl
shr
push
pop
cmpl
or
mov
test
mov
mov
stos
mov
dec
test
mov
mov
cld
or
dec
das
ret
xchg
out
fiadds
in
loopne
mov
and
imul
or
sub
ljmp
cmp
rclb
inc
mov
xchg
ret
or
in
lret
not
dec
subb
sub
mov
cmpsb
jno
mov
xchg
mov
jbe
shlb
nop
rorl
mov
mov
mov
xchg
mov
mov
jmp
jp
jecxz
popa
ret
test
mov
iret
sahf
jae
call
or
pusha
mov
cmp
xchg
jge
cmp
add
scas
cmp
bound
popa
subl
sbb
cmc
or
or
nop
xchg
out
jmp
lcall
insb
mov
scas
inc
andb
je
scas
aas
mov
out
mov
cmc
cmpl
adc
mov
add
rolb
xchg
mov
cli
or
in
pop
out
xchg
mov
and
jno
pop
fwait
cmp
pop
in
sbbl
cmpsb
subl
imul
mov
and
inc
mov
inc
movb
push
aaa
loope
js
xchg
cld
mov
lods
jne
fldt
cmp
clc
outsl
faddl
mov
add
lcall
mov
mov
in
mov
cli
sub
movsl
in
ss
iret
mov
and
inc
ljmp
cmp
mov
or
leave
clc
out
lcall
sti
pop
ja
mov
xchg
insb
out
out
mov
mov
das
or
dec
push
xor
mov
dec
cmp
cmp
inc
xchg
dec
xor
lcall
inc
cmp
mov
mov
inc
cmp
aas
or
sbb
inc
inc
in
xchg
lcall
cld
sbbl
xchg
pop
push
fsubrp
mov
sarb
icebp
cmpb
push
mov
in
mov
jb
fisubrl
lret
and
int
mov
test
xchg
lahf
mov
andb
cmpsl
fidivrs
sub
sti
xlat
xchg
jb
aas
adc
mov
sub
lcall
push
add
stos
in
jp
out
mov
test
xor
or
sbb
jnp
sub
mov
repz
mov
push
jmp
pop
movsb
shl
cli
lods
mov
cltd
mov
fisttpl
pop
fs
jnp
sbb
mov
gs
out
pusha
orb
daa
mov
in
jp
dec
test
add
mov
in
xorb
prefetch
jae
loopne
mov
pop
in
push
lds
add
shll
daa
mov
push
push
mov
divl
or
arpl
or
and
lahf
loopne
aaa
inc
shll
or
inc
sbb
adc
shr
enter
iret
scas
in
lds
lods
jmp
jae
adc
les
mov
vmread
mov
sub
mov
add
notb
push
jge
lret
pop
mov
jb
roll
or
rolb
ret
cmc
or
mov
dec
ljmp
shl
or
inc
adc
jecxz
out
jp
push
adc
xchg
sbb
cmp
push
lds
rorl
sbb
xchg
stc
enter
xchg
xchg
mov
mov
test
mov
jp
lods
loopne
enter
in
inc
fisttpll
mov
mov
jecxz
lds
or
sti
std
mov
add
ror
rcrl
lds
adc
call
xchg
mov
xchg
mov
fstps
jg
mov
out
or
inc
jp
les
hlt
and
xchg
orl
imul
push
adc
ffree
mov
mov
shll
xchg
ret
inc
lea
in
cmpl
cmp
sub
and
lods
push
rcll
out
test
inc
mov
cmp
les
xor
rsqrtps
hlt
mov
call
sbb
stos
pop
ret
cmp
inc
dec
pop
adc
in
and
movsl
inc
ficomps
mov
cs
sub
jecxz
mov
mov
jp
or
inc
scas
das
ret
sbb
bound
cwtl
cmp
or
mov
cs
fistps
sub
iret
outsl
inc
jg
ret
mov
add
jns
sbb
ret
fcomi
pop
movl
sub
pop
mov
popf
inc
mov
shll
xor
lea
jo
sarl
enter
dec
shlb
adc
in
jg
js
mov
inc
push
mov
add
pop
mov
into
add
rcrl
nop
or
out
aad
sub
xchg
mov
ret
fwait
lahf
push
pop
leave
jb
stos
aas
inc
ret
mov
inc
ret
pop
sbb
fcmovbe
loopne
arpl
inc
inc
enter
mov
mov
inc
adc
xchg
dec
mov
and
sti
or
sarl
add
xlat
mov
mov
and
fstpt
push
insl
pop
mov
gs
mov
jp
into
inc
adc
shll
and
enter
insl
movl
sbb
mov
addr16
mov
xchg
mov
jmp
les
aaa
cmpsb
iret
mov
popf
xadd
mov
testb
cmpsl
adc
iret
lock
cltd
out
sub
imul
movl
fwait
aaa
mov
lcall
xchg
shlb
pop
xchg
sahf
outsb
fldl
cltd
insl
ret
push
sbb
movsb
jo
rorl
mov
aam
pop
and
mov
cld
int3
fisubl
ret
cmp
inc
jnp
mov
in
mov
popf
insb
mov
push
rcrl
mulps
insb
mov
add
jno
xchg
mov
push
mov
mov
jb
ja
xchg
jbe
mov
mov
in
sbb
jb
js
xor
ss
mov
outsb
sub
mov
orb
sbb
mov
into
adc
pusha
sbb
shlb
jnp
lock
cmp
mov
inc
dec
xchg
scas
in
cmp
mov
mov
mov
sahf
mov
ss
addr16
pop
pop
ljmp
mov
xor
in
adc
leave
movsl
jae
pop
cmpl
sarl
xor
ror
mov
push
test
out
mov
mov
mov
lds
jnp
popa
mov
mov
adc
mov
xor
bound
rol
pop
incl
movsb
mov
and
push
movsb
sbb
adc
ja
seta
xlat
jle
test
push
mov
or
enter
xchg
dec
mov
mov
imul
test
xor
mov
xchg
aaa
pusha
sbb
les
movsl
in
out
push
xchg
mov
jmp
daa
mov
mov
jl
mov
xor
pop
insl
jecxz
cltd
push
pop
out
xor
and
and
adc
cmp
sbb
es
xor
dec
ds
idivb
test
not
testl
cmp
pusha
mov
or
imul
sub
hlt
dec
in
jl
jns
cmpsl
loopne
mov
mov
mov
xchg
or
mov
mov
xchg
jg
stc
pop
inc
out
ret
les
mov
inc
test
sub
mov
and
inc
cli
enter
and
mov
and
in
clc
xchg
out
adc
adc
int3
dec
out
imul
and
mov
xor
and
or
dec
xor
push
mov
cmpl
into
mov
sub
ret
lcall
cmp
or
int3
push
adc
pop
jo
stos
sub
add
pop
test
xor
js
pop
das
popa
ficoms
push
mov
nop
jmp
shrl
sub
mov
clc
jge
rolb
call
pop
and
lods
dec
jbe
les
out
pop
mov
sub
add
out
clc
movaps
mul
shl
ja
mov
ljmp
cmp
and
ret
in
push
fdiv
mov
jmp
pop
xor
xchg
pop
jecxz
clts
outsl
add
pusha
in
mov
outsl
mov
fists
cmp
test
and
sub
xsha256
cmpsb
push
mov
ret
jae
adc
adc
pmaxub
or
pop
repz
mov
and
add
mov
pop
test
add
mov
jnp
mov
imul
inc
add
push
jae
or
ret
pop
cmpxchg
enter
mov
ret
mov
aad
enter
xchg
out
lds
scas
repnz
aam
mov
push
in
add
out
jp
dec
fimull
dec
dec
or
and
mov
enter
lds
out
lods
cltd
dec
ret
jne
aaa
cs
fbstp
add
dec
mov
lcall
ret
rolb
rcl
xchg
xchg
jne
inc
pop
inc
mov
mov
or
mov
xor
out
scas
mov
adc
lds
mov
adc
inc
ficomps
xor
stc
xchg
mov
mov
lods
pop
les
mov
cmp
ret
cltd
push
inc
pop
sub
fisubs
cs
dec
ret
bound
cmp
jp
or
das
repz
mov
push
cs
dec
mov
outsb
fs
inc
pop
aaa
outsl
dec
call
mov
sbb
cwtl
rclw
xchg
gs
imul
push
inc
addb
das
mov
in
packuswb
out
cmpsb
mov
sbb
mov
mov
mov
mov
cmp
rclb
insl
aas
imul
cmp
mov
ret
bound
push
jmp
les
mov
stos
mov
dec
out
lcall
out
mov
out
jo
mov
sbb
cmp
daa
mov
lods
mov
push
xchg
inc
sbb
xor
lock
lds
aam
or
mov
cmpsb
lock
daa
mov
scas
or
scas
mov
push
cmc
xchg
mov
dec
movl
out
pop
push
dec
mov
bound
xchg
les
nop
jge
test
sbb
fld
jnp
ror
add
test
mov
mov
es
mov
stos
imul
and
sub
mov
fsubp
adc
jae
lds
mov
sub
lods
out
test
push
jle
lahf
inc
mull
out
mov
out
test
mov
enter
movsb
adc
or
mov
mov
test
icebp
sbb
mov
dec
jo
adc
and
insl
cld
mov
shll
cltd
or
and
push
xchg
inc
test
mov
imul
lea
xchg
mov
lcall
sub
inc
mov
jne
and
ret
fnstsw
imul
mov
lock
repz
outsl
jle
scas
cltd
cmp
jo
cvtpi2ps
aas
pusha
inc
sti
jns
rcll
inc
jl
sub
push
push
call
push
shrb
mov
mov
aas
cmp
mov
daa
out
jb
data16
add
mov
add
mov
mov
shll
and
mov
inc
add
les
sbb
nop
sub
int3
ret
inc
aam
call
sub
insb
pop
xlat
or
adc
pop
scas
dec
repnz
movswl
mov
les
dec
filds
mov
shlb
xchg
and
ret
mov
shll
mov
mov
pop
xchg
les
xor
test
mov
and
icebp
call
lret
jl
cmp
mov
mov
cld
mov
jno
xor
push
sbb
out
fs
or
inc
mov
mov
lret
mov
push
fldt
push
pop
adc
sbb
and
inc
rcl
pop
dec
cmpsl
fiadds
cmp
mov
stc
xchg
pop
lcall
cld
push
sbb
push
scas
xchg
bound
fwait
pop
mov
daa
sub
and
test
aam
rol
mov
or
sbb
test
xchg
mov
push
sahf
push
mov
pop
inc
cmp
pop
adc
imul
xor
mov
inc
adc
inc
push
repnz
sub
ja
jmp
in
popa
jge
dec
pop
cli
fsubr
pop
jl
mov
inc
out
mov
and
mov
mov
mov
pop
push
test
das
push
jns
gs
xchg
imul
es
mov
out
add
fnstsw
addl
stc
divb
jb
les
out
sub
iret
mov
push
addb
das
mov
movl
int3
and
xchg
ficomps
or
sti
add
rcl
push
and
adc
insl
jecxz
hlt
xor
pop
sbb
lahf
enter
iret
pop
or
mov
push
inc
adc
sbb
adc
xchg
jno
jo
inc
repnz
mov
rolb
fidivs
movl
or
inc
jg
mov
push
push
lods
fstpl
mov
aas
cmpsb
inc
jmp
fldl
lahf
gs
mov
add
add
dec
dec
loope
stc
rcr
add
cmp
mov
movsb
ljmp
call
xor
fdivp
sub
mov
sub
scas
aas
cmp
dec
jle
shrl
stc
cmp
xor
mov
bnd
lahf
add
dec
push
test
shr
add
aam
sarl
adc
dec
sbb
cli
mov
in
imul
ds
pusha
push
into
mov
mov
add
mov
xchg
orb
sti
mov
sbb
mov
jmp
jle
lret
bound
sbb
out
mov
mov
jmp
js
or
cltd
stos
pop
lea
sahf
sbbl
out
cmovl
fbstp
repnz
pop
adc
mov
add
mov
push
xor
fisttpl
or
xchg
flds
push
cs
and
push
or
sbb
push
mov
jg
xchg
mov
popf
sbb
jnp
pop
out
cmp
xor
loop
lret
cmp
xchg
cmp
adc
sub
xor
mov
dec
test
gs
pusha
jne
jge
push
pop
rol
addl
mov
in
push
rcr
push
xchg
mov
fnsave
mov
hlt
lock
jbe
xor
sub
les
sbb
sub
rorb
in
insl
orb
cli
and
loope
adc
outsb
fldt
push
and
xor
adc
aad
lahf
ja
js
cld
cmpsl
in
dec
mov
fcomps
sub
jbe
inc
mov
decl
mov
aam
xor
arpl
loopne
shlb
cwtl
and
out
dec
jo
int
loop
or
mov
fisubrl
dec
xor
in
enter
cld
nop
xbegin
lock
mov
arpl
dec
pushf
and
outsb
in
mov
cmp
mov
call
lods
push
xchg
and
fmull
or
mov
pop
dec
push
jp
shlb
ljmp
push
pushf
xor
pop
mov
fmuls
lods
push
pop
cli
push
xor
ja
inc
xor
mov
cmp
mov
inc
aaa
fdivs
lods
mov
xlat
icebp
and
pop
cmp
ljmp
push
cmp
aas
cmpsl
fisttpll
das
decl
sub
repnz
iret
xor
out
xlat
jecxz
out
jecxz
xchg
dec
xchg
jb
fdivl
fs
imul
mov
loope
sarb
shll
add
sbb
inc
out
cmc
jge
mov
xlat
test
cli
adc
pop
inc
bound
cmp
push
loop
mov
movl
lods
sub
mov
cld
aad
sub
lret
nop
enter
cmp
xchg
and
pop
and
mov
in
dec
decl
insl
loop
xchg
stos
mov
ret
addr16
pop
add
rcll
sbb
sub
jle
imul
cmc
mov
xchg
stc
jbe
fistpll
movsl
or
lods
mov
cmpsb
lods
enter
dec
and
int3
mov
js
imul
jo
adc
das
popl
out
cmp
xchg
sbb
jne
in
jp
mov
outsl
xorl
mov
pop
dec
mov
fiadds
xor
push
pop
sbb
stos
repnz
xlat
loope
push
into
sbb
and
cmp
rorl
out
mov
xor
xor
push
aam
fwait
inc
push
jecxz
adc
sub
lock
mov
mov
and
jno
lret
lcall
or
add
xor
call
data16
mov
xlat
inc
shlb
scas
inc
mov
inc
pop
mov
subl
pop
xchg
outsl
xchg
aad
mov
inc
jle
dec
lods
dec
aad
pop
popf
pop
test
adc
inc
fidivrs
aas
lret
std
sub
sbb
call
adc
and
js
or
fisubrs
in
inc
mov
dec
push
mov
ffreep
push
adc
jle
adc
xor
sub
mov
imul
call
jmp
inc
jl
repz
testb
mov
test
fldt
inc
mov
sbb
out
dec
cli
icebp
inc
rolb
inc
rolb
aaa
das
cli
out
scas
stos
sbb
call
xor
mov
pop
outsl
scas
shlb
adc
adc
add
data16
int3
arpl
cmp
and
sti
test
add
pop
xor
mov
inc
dec
test
push
mov
enter
lcall
pop
test
sub
mov
aam
sbb
mov
push
popa
adc
ret
aad
out
fsub
insb
push
inc
dec
pop
iret
or
add
cmc
cmp
jb
mov
iret
jnp
pop
out
inc
and
clc
mov
cmpsb
add
aas
xor
jmp
shll
scas
in
mov
outsl
dec
mov
mov
aaa
ret
invlpg
out
test
jae
into
pop
push
fwait
adc
loope
cmc
lds
ds
xchg
in
xlat
bound
mov
bnd
cwtl
xchg
fstpt
cmpsl
das
repz
inc
stos
xor
sub
fcmovnb
push
push
and
inc
xchg
jbe
mull
add
inc
ret
cmp
cltd
js
pop
fcompl
pop
icebp
imul
movsl
mov
rcrb
dec
inc
icebp
and
ss
xlat
lcall
push
jns
pop
movsb
daa
fbstp
pop
sbbb
jbe
loopne
xchg
dec
sahf
and
mov
push
push
dec
cmpsl
jnp
fstl
arpl
mov
fistpl
add
dec
data16
stc
xchg
lcall
out
dec
inc
adc
test
xchg
hlt
mov
in
adc
rol
push
lahf
pop
in
inc
lds
lcall
sahf
aaa
outsl
fcom
test
xor
pop
ljmp
xchg
out
rcr
jb
jp
in
cmpsl
test
jo
dec
addr16
pop
mov
movl
imul
pop
add
mov
pop
pop
mov
dec
or
mov
adc
cltd
cmpsb
repz
jg
inc
ffree
lahf
mov
push
loope
sub
push
pop
cmp
mov
add
rcll
xchg
je
movl
adc
notb
dec
sub
das
ret
daa
push
mov
punpckhbw
insb
and
and
cwtl
outsl
aaa
scas
or
sahf
call
pop
ror
lahf
inc
sbb
mov
or
xor
stos
push
xchg
lock
and
in
sbb
hlt
inc
mov
pop
mov
mov
movl
rol
push
pop
mov
dec
xor
mov
fcomps
mov
xor
int3
mov
pop
cmpsb
cmp
stos
pop
adc
shll
inc
dec
lret
sbb
int
ja
push
call
dec
inc
pusha
dec
movl
jnp
lahf
call
mov
dec
xor
jb
jnp
fwait
addb
stc
xchg
outsl
repnz
xor
and
aaa
sub
pop
push
je
mov
fistpl
in
shrb
mov
testb
fcompl
arpl
in
adc
inc
aas
imul
fadds
inc
xchg
data16
out
scas
inc
pop
cld
out
jg
ja
pop
lods
ds
push
and
add
mov
notl
test
shld
mov
mov
pop
pop
xor
imul
insl
or
sub
cld
cltd
pop
cmpsl
dec
sub
and
mov
mov
sbb
lret
mov
sahf
mov
mov
xchg
hlt
mov
jnp
cmp
xlat
arpl
and
fs
mov
or
fisttps
sub
shrb
mov
sub
mov
cmp
in
ljmp
arpl
lahf
fimull
movsl
in
inc
adc
adc
test
pushf
mov
imul
push
xor
test
lahf
jge
jge
xchg
add
test
or
out
mov
andb
mov
cwtl
stos
sub
sahf
cmp
mov
lahf
mov
mov
and
rcrb
pop
lahf
aad
mov
fists
fnsave
insl
dec
mov
cld
inc
out
jno
jne
dec
aaa
xchg
scas
mov
or
xor
inc
loopne
mov
and
scas
call
cmp
add
sbb
rcl
lods
mov
mov
xlat
stc
iret
cmp
or
cmpsl
rcll
sub
adc
jbe
in
push
rol
mov
mov
dec
das
sbb
cmp
andb
cmpsb
insl
sbb
inc
inc
sahf
xlat
cli
test
pop
mov
sti
aaa
xchg
sbb
mov
push
mov
orb
xlat
lahf
jb
and
aas
insl
cmpsl
imul
out
testl
call
testl
imul
mov
lcall
xlat
mov
lret
out
jns,pt
lods
mov
sub
inc
dec
stos
sti
ficoml
cmpb
adc
hlt
push
incl
imul
jo
add
jp
pop
pand
test
cmp
xchg
jg
add
push
fnstsw
cmp
pop
cli
or
scas
outsl
pushf
aaa
push
inc
ljmp
inc
scas
jnp
jae
xlat
aad
mov
sbb
mov
loop
dec
sarl
test
pop
add
add
out
dec
or
and
push
outsb
inc
cmp
aam
in
pop
lahf
mov
jmp
mov
ror
repz
ja
sub
adc
fwait
imul
push
push
loopne
sub
mov
mov
lea
jmp
cmpsl
lahf
add
push
pusha
ja
cwtl
cmp
daa
in
pop
in
pop
jp
push
pop
les
sub
dec
mov
or
inc
jbe
lods
ja
or
movsb
lods
call
push
mov
cmp
loopne
and
js
shl
fadds
stos
decl
jl
ror
stc
xorl
jg
mov
sbb
movsl
pop
lret
sbb
or
cmp
mov
xlat
imul
outsl
jp
push
jo
outsb
fdivrs
imul
inc
mov
push
je
fdivrp
lret
ret
cmp
and
mov
iret
stc
outsl
xchg
push
lahf
cmp
inc
outsl
and
pop
add
ss
stc
lock
movsl
fdivl
add
pop
aaa
or
xor
xor
jb
push
sub
aas
pop
arpl
add
xor
roll
cmp
jne
adc
jae
fistpl
jno
mov
sbb
jg
aad
popl
ja
sti
sbb
inc
jns
mov
cmp
sti
aaa
push
pop
icebp
inc
shll
fs
jge
pop
adc
lret
lds
adc
in
shlb
adc
mov
xlat
add
push
cld
mov
lret
pop
xchg
jg
push
mov
pushf
cmpsl
cmpsl
pop
insl
adc
lahf
shrb
fdivrl
adc
push
jl
mov
scas
inc
add
mov
shlb
push
test
push
pop
push
lock
ja
add
cmpsl
lods
popf
mov
ja
mov
data16
loopne
push
scas
and
shlb
imul
lahf
inc
int3
mov
outsb
cmp
cmp
aaa
lahf
and
leave
cmp
sbb
stc
imul
sarb
mov
sbbb
xor
dec
mov
inc
sbb
in
sbb
test
inc
xlat
xchg
adc
out
mov
icebp
xlat
lret
stos
sbb
ret
aas
push
push
mov
pop
out
dec
sbb
and
scas
jle
mov
push
stos
aas
popf
fwait
enter
das
cmpsl
call
jb
jne
adc
mov
shlb
push
xchg
mov
movl
sbbb
fld
out
inc
xchg
adc
xor
loopne
adc
inc
cmpsl
sti
aas
rcrl
adc
sub
jmp
negl
pop
mov
xor
jle
movsb
sub
sub
clc
dec
jge
popw
jl
jl
xchg
cmp
out
dec
cmpsl
rolb
adc
mov
sarl
nop
scas
jnp
vmovss
shll
xchg
aas
and
cwtl
push
movsb
jnp
fwait
pop
dec
aam
sub
into
lcall
xor
stos
mov
mov
outsl
xor
movb
nop
icebp
add
mov
mov
lret
mov
mov
adc
insb
gs
outsl
xchg
xchg
adc
ret
ds
lahf
pushf
adc
fs
repz
scas
lods
pusha
repnz
dec
lret
mov
cli
mov
stc
pop
inc
sti
loop
mov
mov
mov
subb
es
outsb
jg
dec
mov
cmp
push
and
es
addr16
imull
pop
mov
outsb
ret
cmp
rcll
mov
iret
fcmovnb
inc
cmp
pop
mov
insl
mov
mov
cld
movsb
adc
jae
sbb
fsub
ds
push
aas
mov
and
cmc
mov
mov
pop
scas
pop
adcb
and
stc
and
ds
mov
pop
jg
je
add
lea
mov
mov
jb
jo
cmc
xchg
int3
es
outsl
push
stos
mov
cli
mov
xchg
mov
bound
dec
gs
and
test
in
fisttps
mov
lret
sub
call
lcall
sti
movl
jp
sub
rclb
pop
mov
repnz
sbb
jbe
mov
loope
jo
jae
sbb
call
test
shl
jmp
mov
sbb
mov
xor
jbe
inc
pop
pop
push
mov
cmpsb
xchg
jp
into
clc
rolb
das
sub
fnsave
sbb
arpl
loope
jge
inc
dec
sbb
subb
and
mov
inc
in
add
leave
sbb
adc
idivb
stos
and
sbb
mov
inc
adc
in
lret
daa
push
aad
repz
lcall
xchg
xchg
inc
push
rcrb
cs
mov
jo
adc
into
in
cmp
mov
mov
dec
adc
cmc
cmp
ja
and
movsb
push
mov
adcl
mov
xlat
cmpsl
pop
out
mov
add
test
movl
mov
addr16
mov
leave
inc
push
inc
sub
lods
loope
daa
adc
fstpl
in
sub
mov
or
fnstenv
mov
lea
mov
aaa
bound
adc
cmpsl
cmc
shl
and
dec
call
cs
lahf
adc
out
xchg
pop
mov
cmc
stc
push
xchg
enter
cmp
test
jbe
cmpsl
fistl
jecxz
movl
xor
cmpsl
jl
outsb
cmp
flds
pop
dec
out
jge
stc
sub
setno
scas
ljmp
inc
inc
notl
pushl
nop
rorl
enter
ret
sub
divb
data16
out
test
mov
xorb
push
xchg
inc
mov
repz
mov
int3
dec
mov
pop
or
shlb
xor
daa
adc
lods
pop
or
fld
les
loop
pushf
mov
dec
add
or
in
scas
shll
pop
push
rcll
sub
add
xchg
jbe
adc
sbb
lods
in
daa
sub
adc
dec
sbb
xchg
mov
test
add
xor
mov
jns
out
shrb
cs
jge
and
and
push
cmp
push
add
into
repz
in
jo
aaa
imul
out
push
push
rorb
leave
daa
mov
jbe
dec
jne
add
xlat
mov
out
jl
inc
or
decb
adc
inc
psrlw
je
insl
loopne
stos
daa
cmp
sbb
mov
xchg
out
mov
cmp
js
push
xchg
mov
push
sbb
or
aaa
push
shrl
in
imul
movsl
lahf
mov
int
out
ja
xor
or
dec
push
loopne
cmpsl
xlat
dec
pop
push
xchg
mov
dec
xor
or
std
adc
imul
test
xor
popa
hlt
jae
sub
mov
pop
mov
mov
lcall
scas
insl
xor
inc
test
je
mov
pop
movsb
je
cli
sub
dec
or
insb
inc
rol
aam
mov
inc
hlt
insb
les
mov
jg
xor
xorl
inc
sahf
sarl
xlat
ja
fidivs
stc
dec
lahf
lahf
repz
dec
cmp
push
dec
outsb
imul
shl
loop
imul
ret
jmp
cld
mov
inc
or
lret
mov
es
pop
jle
clc
add
mov
push
test
cmpsl
or
xchg
into
adc
cli
idivl
pop
jno
push
mov
lods
roll
xor
in
wbinvd
loopne
mov
jb
xchg
int
lahf
sti
shlb
jae
mov
cmp
jmp
loopne
and
cmp
mov
push
adc
sub
mov
mov
inc
push
adc
mov
cmpb
ds
xchg
lahf
fnstcw
mov
imul
call
cmovle
lds
jne
mov
adc
loopne
xlat
pushf
xor
xlat
cmp
outsb
xchg
scas
sbb
dec
or
repz
dec
adc
jle
cmp
cli
mov
js
push
gs
sbb
mov
or
subl
out
add
call
inc
das
or
lods
xchg
lcall
addr16
xchg
das
jbe
loope
adc
inc
fcompp
lcall
jb
lcall
lret
les
js
data16
jmp
jecxz
dec
jno
mov
or
les
xlat
insb
fidivrl
dec
stos
addb
ja
mov
stos
sbb
scas
pop
rolb
pop
leave
pop
sub
test
movsb
arpl
xor
adc
cmp
fisttps
data16
out
mov
lock
lock
ljmp
imul
test
cmp
imul
mov
jo
adc
loop
and
xor
mov
mov
gs
fwait
je
mov
push
pop
inc
pop
add
aam
dec
push
pop
inc
inc
sub
test
inc
aas
sbb
mov
addr16
outsl
mov
xchg
jp
out
pop
fmull
clc
pop
inc
loop
pop
bound
out
stc
dec
adc
ja
cmpsl
test
frstpm(287
pop
jmp
jne
jb
inc
mov
leave
inc
lahf
movsl
inc
jmp
inc
idivl
pop
or
scas
add
sbbl
jo
and
cld
push
out
fisubrl
adc
mov
pusha
adc
dec
or
sbb
and
loope
push
test
aad
movsb
push
xor
arpl
fildll
mov
out
pop
in
shll
mov
jo
jmp
cmp
add
inc
sti
mov
pop
push
clc
sbb
push
lock
insl
stos
psrad
orps
cmp
jp
arpl
gs
rcl
sub
jo
mov
jmp
jne
fimull
pop
bound
insl
cltd
mov
adc
cmpsb
mov
pop
inc
dec
sub
or
pop
iret
in
mov
es
stos
rorb
aaa
cmp
mov
push
inc
cmp
mov
inc
jae
lcall
pop
pop
jno
adc
nop
popl
ficoms
jmp
push
xchg
mov
or
lods
mov
cmpsb
addr16
and
xor
add
jmp
adc
push
push
or
and
push
in
das
lret
cmp
add
jns
jo
ret
add
popf
mov
xorb
sub
sbb
sbb
pop
dec
lea
mov
sub
xchg
int
dec
dec
aaa
sub
daa
lds
movl
adc
and
mov
dec
lods
mov
in
icebp
iret
scas
scas
pop
hlt
push
repnz
lret
adc
imul
mov
shll
mull
out
and
movl
sbb
call
es
vcmpsd
add
mov
out
adc
pop
add
dec
cs
cmpsl
frstor
mov
adc
pop
es
and
fisttpl
loopne
inc
hlt
push
leave
divl
in
push
mov
cmp
xrstors
out
in
lea
lret
xchg
adc
sub
mov
inc
movsb
cmpsl
pusha
and
inc
adc
or
mov
fstpt
sbb
sbb
mov
or
mov
dec
inc
fdivrs
pop
pop
cld
jns
pop
in
loop
aas
iret
andl
add
je
mov
mov
mov
in
xchg
pop
jmp
lahf
and
mov
push
push
cli
xor
out
es
sbb
in
imul
fnstenv
xlat
cmp
lock
pop
mov
fwait
test
xor
cli
shr
pop
dec
push
es
or
shrl
stos
iret
adc
mov
fisttpl
mov
mov
cmp
daa
nop
add
rcrb
mov
cmpsl
sbb
push
push
inc
dec
fcompl
xchg
xchg
rcrb
adc
lods
fucomi
pop
jg
sarb
subb
lea
inc
inc
test
push
and
fists
rcrl
ficoml
mov
mov
cld
jg
adc
adc
ja
dec
dec
int3
insb
testl
into
ja
lods
push
mov
xchg
aas
jne
loope
test
pop
andl
mov
sarb
push
and
and
dec
out
mov
xor
cmp
insb
sub
mov
jo
repz
mov
dec
and
push
or
sub
aam
cmc
mov
pop
xor
xor
bswap
inc
inc
dec
mov
add
jo
lods
out
mov
mov
cmp
jbe
push
ds
roll
mov
mov
inc
dec
iret
test
mov
jnp
sub
imul
stos
jo
mov
mov
mov
enter
fdivrl
pop
mov
loopne
jle
xor
inc
push
mov
push
xor
popa
sub
mov
loopne
inc
inc
mov
push
or
lock
or
or
outsl
mov
xchg
cltd
in
mov
cli
incb
mov
movsb
push
sub
dec
mov
out
dec
inc
sti
xchg
fisttpl
add
sub
mov
cmpsl
test
fcmovb
jle
sar
xchg
and
cmp
push
cmpb
repnz
jbe
jns
xchg
dec
mov
and
jmp
icebp
inc
xchg
int3
outsl
lret
insl
push
cmpsl
mov
insb
notb
mov
subl
or
addr16
push
lods
cmp
arpl
sti
aaa
stos
insb
inc
add
sbb
jae
sub
dec
stos
inc
sbb
sub
sbb
imul
addb
push
jae
mov
ljmp
scas
mov
sbb
addb
inc
int
cmp
jge
lock
mov
jmp
jb
jo
int
xchg
test
mov
cmp
in
aaa
push
movl
push
in
add
xchg
push
xchg
fbstp
repz
sbb
daa
jge
les
push
xchg
lods
cltd
pop
and
and
jge
je
test
push
jns
inc
cmpl
inc
les
push
test
jp
push
inc
icebp
mov
lods
leave
mov
mov
sub
jns
jecxz
movl
lods
loope
lods
addr16
int3
xor
xor
adc
lods
sub
iret
hlt
shll
test
add
push
mov
addr16
sar
or
insb
test
cmp
pushf
or
rcll
les
mov
imul
out
dec
mov
leave
and
sahf
mov
adc
test
xchg
pop
scas
push
cwtl
add
sub
out
repz
jmp
sub
fcomps
int
mov
rcrb
dec
jo
xor
imul
jnp
mov
hlt
pop
shll
mov
negl
daa
js
cmp
dec
test
mov
mov
lods
lret
mov
punpcklbw
out
pop
das
and
sbb
sub
cld
mov
jb
aaa
mov
ljmp
imul
xor
pop
int
lods
jnp
or
or
push
sbb
cld
rolb
nop
xchg
lcall
push
das
insb
rcll
pop
mov
stos
movsl
out
jle
jnp
aaa
cld
jne
mov
inc
mov
sbb
inc
or
sbb
sub
lock
aaa
jmp
arpl
ficoml
dec
insb
ljmp
inc
pop
mov
test
xchg
rcll
jne,pt
mov
mov
or
cmp
push
out
in
xor
inc
repnz
push
out
sbb
clc
das
xchg
stos
js
ja
push
xor
enter
cmp
mov
cwtl
jg
in
jae
mov
adcl
adc
inc
push
lahf
pop
repnz
push
test
dec
mov
push
jne
sub
fstpl
jo
mov
push
ljmp
sbb
fdivrl
mov
mov
sub
outsl
add
enter
mov
fcom
sbb
aas
add
cmp
push
nop
fimuls
idivb
lock
adc
rol
sarl
jp
aas
mov
push
sub
test
or
jb
mov
mov
pop
nop
pop
in
pop
mov
sti
arpl
addl
dec
shll
sti
jecxz
pop
or
loopne
push
stc
mov
popa
ja
mov
pop
shlb
mov
pop
pop
push
sbb
mov
jmp
cmp
xchg
jnp
out
pop
mov
mov
mov
push
mov
push
add
fcmovu
mov
pop
push
pusha
sub
mov
add
popa
xchg
fwait
sub
sbb
js
aas
adc
test
add
bound
adc
shll
nop
mov
aaa
adc
gs
push
sub
bswap
sbb
mov
dec
or
xor
ds
xchg
mov
sub
in
fisubrs
or
pop
dec
icebp
sub
call
mov
lods
dec
dec
mov
or
cmc
push
aaa
and
insl
ja
ljmp
decb
sbb
arpl
jne
or
das
pop
and
xchg
test
add
mov
fstpt
jge
fs
insb
sub
out
rclb
xchg
leave
push
dec
lahf
pop
ja
stos
cltd
adc
xchg
scas
sbb
hlt
loop
mov
or
movsl
ret
push
das
mov
adc
adc
cmp
push
sbb
aaa
out
mov
lahf
pop
jle
js
push
jg
dec
js
fmull
outsb
mov
iret
out
or
pop
xor
ficoms
js
mov
lahf
mov
cltd
test
jmp
fcmovnb
mov
or
dec
fistps
sbb
cmpl
shlb
cmp
mov
xchg
loop
cmp
or
add
push
or
pop
movsl
sbb
fwait
imul
idivl
orl
push
sub
je
fisubrl
dec
aam
clc
lods
les
adc
mov
lahf
cmpsb
adc
cmp
sub
adc
jecxz
mov
test
mov
movsb
in
jb
ja
fs
lock
sub
fidivrl
test
ret
neg
daa
lea
mov
lahf
mov
jnp
scas
stos
and
std
daa
adc
jmp
jae
push
mov
jge
inc
sub
jne
add
out
sti
mov
out
outsl
or
lcall
call
sub
addl
or
cli
fimull
jne
inc
pop
insl
push
mov
outsb
mov
push
sbb
es
sbb
daa
ja
dec
filds
push
push
daa
lahf
fimull
jg
xchg
inc
mov
mov
les
xorl
sbb
test
push
xchg
lods
mov
fildl
cmp
shr
dec
cmp
insl
daa
push
xchg
fnsave
std
aas
xchg
mov
ds
cmpb
push
mov
adc
pushf
popf
enter
aaa
inc
push
jmp
scas
cmpsl
insb
adc
test
fimuls
cmp
stos
inc
insb
cmpsl
pop
xor
enter
fsubrp
cmc
shrl
loop
loop
dec
cmpsl
sbbl
push
test
fwait
mov
jl
pop
into
xor
aad
xor
or
scas
mov
in
or
inc
shlb
int3
call
inc
scas
cs
out
ja
inc
fisubrl
jg
imul
sub
push
fwait
je
jo
clc
scas
inc
call
sbb
out
aam
dec
xchg
test
mov
daa
pop
or
scas
das
mov
aad
xchg
mov
mov
adc
insl
movntq
iret
mov
loop
or
or
and
movsl
dec
stc
out
adc
mov
mov
fwait
in
lcall
xchg
inc
mov
mov
mov
mov
mov
mov
stos
xchg
rcr
mov
cmp
arpl
pop
xchg
mov
cld
lcall
jp
sbb
sbb
xlat
inc
pop
mov
dec
cmp
and
mov
cmc
daa
call
mov
mov
enter
sbb
and
xor
popf
mov
mov
sub
pop
scas
mov
mov
ficomps
insl
movsl
mov
aaa
cmp
push
pop
shl
fdivr
sub
sarb
shrb
sub
repz
jns
mov
pusha
sub
call
in
sahf
jg
cmp
scas
daa
or
pop
inc
fcmovnbe
mov
scas
popf
int3
call
sub
mov
in
mov
mov
adc
out
mov
push
movl
xchg
mov
cmp
add
movsb
stos
aas
mov
mov
fstl
xchg
xchg
and
mov
ret
mov
and
pop
mov
mov
mov
insb
rclb
xlat
mov
lret
fildll
mov
mov
je
popf
repz
loopne
sub
sub
xlat
les
inc
mov
test
filds
iret
int3
xor
loop
sbb
mov
fsubrl
es
mov
loopne
pop
mov
xchg
scas
or
mov
pusha
roll
daa
xchg
inc
mov
mov
mov
std
mov
and
gs
test
jge
loope
loop
out
mov
pop
push
incl
xchg
test
inc
in
dec
out
or
adc
mov
xchg
adc
pop
btc
mov
jne
fmuls
sarb
and
jp
dec
xlat
adc
into
pop
mov
aas
jbe
fdivp
sbb
insl
iret
ja
add
xchg
mov
hlt
xchg
jp
lret
stc
cmp
aaa
mov
xor
push
inc
movsb
jbe
stos
adc
adc
daa
push
outsb
jno
loopne
sahf
jo
repz
out
and
mov
push
mov
inc
and
adc
xchg
pop
je
aam
loope
leave
cltd
or
jecxz
adcl
mov
mov
in
testl
cli
cmp
inc
pusha
movl
jl
sbb
xlat
mov
inc
sub
and
sub
test
push
loopne
mov
ffreep
pop
sub
stc
jbe
mov
mov
or
rcr
add
in
pop
xchg
rolb
dec
mov
cltd
sbb
or
xchg
mov
add
mov
cmpsb
movl
push
mov
sub
sub
cmc
lods
repz
fisttps
cmp
mov
out
pop
dec
sbb
cwtl
sbb
or
orl
dec
sahf
leave
mov
shrb
xor
push
pop
mov
xcrypt-cfb
cmpsl
daa
pop
bound
ljmp
incl
ficompl
pop
mov
fisttpll
xchg
jne
cld
aad
pop
lea
icebp
jae
ljmp
push
mov
push
addl
jg
int
cli
inc
lds
push
xchg
xchg
xor
jbe
sarb
pop
mov
pop
aas
mov
and
dec
add
pushl
mov
or
sbb
or
adc
mov
movl
xchg
ret
icebp
mov
fcmovne
and
imul
sbb
incb
in
and
dec
xchg
xor
mov
addr16
out
loope
mov
pop
inc
sti
das
mov
inc
push
xor
inc
ror
outsl
pop
fbstp
push
pop
mov
cmp
cmpsb
enter
pop
xchg
imul
mov
jno
mulps
pop
add
mov
push
sti
jmp
ss
outsb
and
mov
mov
dec
xchg
hlt
xorb
pusha
sbb
out
inc
dec
lea
mov
aad
and
pushf
xchg
adc
daa
scas
dec
aaa
cld
xor
push
lahf
sub
fisubrl
rcrb
inc
aad
xchg
adc
fmul
mov
jo
xor
movl
mov
lock
movsl
psrlw
sub
aas
mov
push
mov
mov
cltd
jnp
sub
cmp
sarb
arpl
daa
aam
add
shll
pop
sub
repnz
push
lods
pusha
adc
popa
imul
jmp
adc
stc
enter
lcall
dec
into
mov
ret
sub
lahf
mov
add
jmp
inc
aam
nop
xchg
adc
outsl
cmp
pop
fldenv
imul
pop
sbb
push
aas
mov
fwait
psubw
and
push
dec
fcompl
icebp
dec
fucomip
aaa
jb
add
imul
shll
fnstsw
xorb
rcr
xchg
jmp
cmovge
hlt
inc
jg
mov
sbb
xchg
shr
jl
xor
aaa
sub
pop
mov
jl
rclb
mov
or
jbe
sub
fwait
sbb
loopne
cmp
mov
xbegin
test
mov
sti
pop
cmpsl
jne
das
xchg
push
jb
mov
pop
mov
add
or
dec
xchg
xchg
outsl
mov
xor
mov
loop
push
cmpsb
mov
xchg
loopne
jecxz
jge
test
push
mov
xor
xchg
rcrl
ss
cmp
das
or
sbb
dec
sbb
pop
pop
sub
mov
mov
mov
insl
cmpsl
xor
ja
sbb
int3
les
mov
pop
jb
or
rcrb
fwait
cmp
out
scas
adc
es
or
adc
hlt
lea
mov
and
xchg
out
adc
daa
mov
fisubrl
aas
xor
dec
xchg
stos
fldenv
adc
loope
xor
stc
cmp
iret
adc
pop
mov
pop
add
jns
fdivs
fcompp
mov
mov
jl
xor
cmc
cwtl
out
repnz
adc
or
mov
mov
jo
inc
leave
imul
and
jno
jle
lock
xlat
cmp
ret
lea
ja
fstpl
xor
mov
xchg
pop
jmp
sbb
out
hlt
pusha
addr16
jo
push
ds
xor
adc
pop
popa
sbb
xchg
daa
fidivrl
xor
mov
test
das
movsl
sbb
inc
jp
nop
cmp
pushf
cmp
scas
xchg
sbb
repz
insl
test
sbb
fneni(8087
push
inc
out
out
das
pop
fwait
ja
cmc
xchg
pop
inc
pop
mov
popf
scas
mov
mov
movsl
mov
in
pop
movl
adc
mov
mov
jo
inc
push
xor
sbb
push
mov
inc
dec
push
xchg
cs
cmp
icebp
in
lods
mov
or
jl
mov
and
or
add
mov
ljmp
jno
inc
add
jbe
jnp
test
fs
fxch
dec
cmp
test
or
pop
sahf
ffree
fcomip
in
fistl
sbb
fcoml
or
mov
stos
stos
test
xchg
insl
rcrb
daa
rdrand
movsb
scas
out
mov
or
pushf
push
shrb
ds
mov
mov
gs
scas
lea
data16
sbb
test
sbb
xor
in
jo
leave
mov
mov
or
fdivl
inc
xchg
loopne
in
and
sub
arpl
in
and
sub
sahf
fs
idivb
push
scas
and
icebp
dec
cld
xlat
dec
push
adc
mov
cltd
sbb
sbb
jg
rcrl
lods
aam
jne
mov
mov
scas
mov
xor
popa
cmpsb
pusha
xor
push
xchg
test
outsb
inc
aas
inc
stos
push
xor
jl
dec
movl
mov
out
mov
xchg
xchg
cmp
jge
mov
sub
mov
mov
shl
pop
out
push
ja
mov
outsb
mov
stc
xor
iret
repnz
push
dec
int
pushf
xlat
mov
scas
lret
jns
movsb
mov
sub
fistpl
jno
push
ficomps
pusha
jns
outsl
repz
xor
pop
cmpl
or
or
adc
aam
into
inc
sti
pop
lcall
fadds
inc
jbe
inc
jns
mov
cld
xor
cmp
pushf
ss
cmc
push
push
les
jb
sub
mov
inc
inc
xchg
mov
sahf
dec
fs
clc
sub
pusha
mov
test
xchg
cmp
add
lahf
pop
mov
add
test
sub
lds
or
dec
imul
lret
lahf
pop
mov
mov
cmp
jge
insl
mov
mov
dec
add
cmp
and
arpl
adc
fcmovne
mov
xor
jae
ja
mov
pop
sub
mov
sub
xchg
mov
xchg
mov
out
lcall
push
repnz
pop
cmp
mov
insb
xor
inc
mov
xor
add
outsl
push
pop
mov
sub
mov
mov
stos
cmpsb
ja
lock
add
adc
mov
std
pop
scas
xor
jb
and
mov
in
inc
fildll
add
dec
loop
cwtl
loopne
frstor
movsb
sbb
arpl
int3
mov
cli
sbb
in
mov
cmpsl
dec
fs
pop
mov
je
sbb
xchg
adcb
mov
aas
adc
stc
ss
call
sbb
outsl
in
cmp
jecxz
push
cmpsb
xchg
je
and
mov
adc
xchg
mov
aaa
push
push
sub
dec
mov
int
push
mov
ss
inc
pop
adc
stos
ja
lcall
jo
in
popf
std
push
xor
in
cli
sbb
stos
fwait
lahf
and
mov
and
jno
aaa
pop
sbb
imul
pusha
hlt
cmpsl
jb
fldenv
int3
lcall
adc
and
or
andb
dec
fidivl
cmpsl
cli
xchg
pop
addr16
cmpb
aam
shlb
fmuls
or
cmp
pop
int
push
pop
inc
push
das
push
daa
jnp
push
mov
data16
mov
pop
outsl
mov
in
xor
or
stc
cmp
mov
dec
push
dec
shr
stc
xchg
sbb
mov
scas
stos
loop
es
sbb
mov
jg
cmpsl
lahf
mov
jmp
fcmovne
pop
xor
pop
add
jmp
jecxz
sti
mov
sbb
push
jmp
adc
pushf
rcr
pop
inc
push
stos
add
sarl
imul
pop
fidivrs
add
int3
imul
mov
iret
push
xchg
and
jnp
sub
dec
cld
or
sub
mov
stc
daa
repz
mov
xchg
aaa
xor
or
mull
into
push
push
lock
fadd
mov
or
mov
pop
push
and
test
mov
mov
sub
xchg
aad
inc
jmp
pop
mov
jmp
insb
stc
adc
mov
cli
sti
xchg
mov
sub
imul
mov
or
outsb
mov
add
mov
jno
test
mov
adc
testl
mov
sbb
mov
mov
out
sub
jmp
mov
icebp
pop
push
pop
pop
push
pop
pop
dec
imul
pop
mov
cs
mov
inc
cld
ljmp
cli
inc
sub
out
mov
test
xchg
mov
pop
mov
jl
repz
mov
and
dec
lea
xchg
fistpll
xor
inc
hlt
pop
shrb
jb
into
dec
enter
mov
pop
and
mov
mov
xchg
inc
inc
and
dec
lret
lahf
aam
aaa
mov
xor
std
mov
adc
sbb
psrlq
xchg
sub
push
dec
outsb
xlat
xchg
ffree
mov
sub
in
sbbb
add
fs
xor
cwtl
ds
test
jbe
ljmp
sbb
loope
dec
xchg
xchg
popl
fwait
mov
and
sti
ret
push
inc
xchg
xchg
xor
sbb
jne
push
jp
xlat
shr
add
mov
mov
sub
pop
in
rolb
adc
cli
jo
scas
dec
mov
scas
es
popf
adc
in
push
neg
aam
adc
mov
daa
sbb
ds
jae
fcmovnb
cs
adc
jnp
jmp
dec
in
aaa
jp
pop
mov
lock
loop
ss
jmp
lods
and
adc
mov
mov
icebp
imul
xchg
inc
in
movl
sbb
stos
fs
fisttpll
mov
call
and
push
adc
repnz
scas
aas
int3
aad
icebp
ret
cmp
and
movsb
or
jl
cmp
dec
cli
inc
sub
jns
repz
mov
mov
jnp
in
xchg
jae
imul
xor
pop
mov
rclb
sub
mov
dec
push
adcb
fadd
and
adc
shrb
or
testb
das
and
jg
inc
mov
in
inc
sub
adc
mov
pop
cmp
gs
sti
jge
add
xchg
or
sbb
mov
sarb
imul
jno
xchg
popa
out
outsb
fdivrl
je
mov
push
test
xchg
sbb
push
test
loop
cmp
hlt
inc
xchg
lret
lds
sbb
jg
ss
data16
mov
ja
sub
fnstenv
js
addr16
jo
push
mov
mov
das
clc
pop
inc
lock
in
or
je
xchg
xor
and
test
jo
mov
xsaves
sub
in
add
ret
movl
loope
and
arpl
ja
aad
jle
in
aaa
inc
mov
in
int3
mov
xor
pusha
shlb
bound
loopne
ja
mov
fidivrs
add
dec
repnz
mov
popf
cmp
leave
mov
shrl
inc
pop
data16
movsb
fildll
scas
ja
adc
pop
arpl
inc
adc
xor
mov
xor
sub
mov
mov
jcxz
mov
loopne
mov
lods
jecxz
mov
mov
jmp
cli
and
mov
int
daa
mov
cwtl
dec
mov
add
scas
pop
movsl
sub
shll
aam
stos
dec
test
mov
jo
sbb
fiadds
popl
xchg
loope
adc
adc
decl
shr
data16
jg
sbb
or
mov
ret
lahf
sub
and
sti
je
adc
mov
leave
inc
aam
cltd
cmp
jge
cmpsl
sbb
xor
das
cmp
mov
pop
notl
sbb
in
insb
loopne
mov
push
inc
cmpsl
pop
imul
das
rclb
lcall
mov
sbb
sub
fimull
loopne
ljmp
rol
into
pop
stos
dec
pop
push
inc
int3
fld
inc
ret
cmp
ret
bswap
outsl
sbbl
es
mov
lahf
mov
iret
adc
xchg
sub
xor
dec
jge
fwait
ja
adc
mov
mov
jno
cmp
data16
sbb
add
hlt
sub
lahf
cmp
push
cmpsb
rcrb
add
clc
rcl
data16
pop
leave
stc
divps
xor
xor
mov
sub
enter
pop
imulb
add
pop
dec
pop
sub
das
sbb
dec
sub
arpl
mov
push
push
and
aas
mov
pusha
call
test
pop
add
mov
pop
nop
js
imulb
and
in
mov
pop
into
jo
adc
jle
std
dec
inc
stos
lds
ffree
ds
movsl
and
adc
adc
es
mov
sub
fnstsw
int
movl
mov
push
aam
xchg
mov
lcall
imul
sub
push
xor
loop
call
ja
mov
movups
adc
inc
movsb
ss
add
repnz
and
pop
mov
movsl
adc
mov
fdivs
xchg
movsl
xor
mov
fisttpl
dec
xchg
popf
xchg
xor
inc
dec
scas
sbb
cli
dec
add
mov
repnz
pop
inc
jmp
mov
in
inc
cmp
push
add
repz
sbb
mov
mov
mov
test
imul
roll
pop
add
mov
lods
sbb
mov
ret
stc
mov
xchg
shrb
cli
inc
inc
dec
push
test
add
xor
and
bnd
cmpsl
roll
xor
fistps
push
jno
mov
jg
cmpsl
lahf
or
in
adc
and
jge
test
aaa
xchg
in
adc
inc
lock
inc
stc
push
adc
push
xchg
xor
aam
cmpsl
leave
jle
jl
cmp
int
clc
pop
adc
stos
mov
and
arpl
std
mov
or
addr16
pop
adc
xlat
fldcw
cmp
dec
pop
dec
cwtl
mov
mov
inc
adc
dec
test
pop
data16
inc
arpl
push
in
mov
mov
pop
stos
cmc
or
mov
je
mov
inc
bound
aaa
lods
out
jmp
sub
cmp
inc
out
jnp
imul
lock
mov
dec
jno
push
punpckhdq
aas
mov
adc
aas
jns
mov
ret
or
sbb
xor
pop
and
aam
das
insb
add
dec
testl
mov
cmc
fistpl
xchg
xor
mov
hlt
sub
cmp
insb
imul
iret
pop
movsl
cmpsl
lcall
xor
inc
mov
call
xlat
adc
mov
add
and
es
add
cmpsl
pop
icebp
jnp
arpl
mov
xchg
cmc
movl
mov
inc
mov
pop
xlat
pop
repnz
ljmp
mov
sbb
loope
xchg
cs
jae
mov
pop
sbb
push
inc
fwait
inc
dec
enter
cmc
stc
shlb
mov
pop
mov
jne
gs
call
cmc
hlt
iret
xchg
rclb
int3
movsl
mov
jnp
and
xor
lahf
dec
and
jo
mov
std
push
or
scas
xor
mov
ljmp
mov
bound
stc
pusha
js
mov
popa
divl
dec
xchg
test
outsb
mov
ss
adc
and
cmp
in
pop
jae
movl
fwait
call
mov
cmp
repnz
stc
pop
popf
pushl
sub
clc
cmp
or
ret
in
fidivl
mov
addl
mov
nop
push
dec
inc
lahf
outsb
or
mov
cmp
pop
cwtl
outsl
jecxz
loopne
lods
inc
into
inc
jl
cmc
fcmovnb
sarl
and
adc
and
sbb
jle
cmpsb
loopne
mov
and
pop
dec
cmpsl
cwtl
dec
mov
rol
push
mov
aas
lcall
fdivrl
sbb
pop
pushf
jns
jecxz
push
bound
or
xor
aaa
mov
je
orb
int
rolb
or
sub
fwait
popf
aaa
fldenv
sbb
into
inc
aam
push
dec
cli
std
pop
dec
addl
inc
adc
mov
cmp
out
xchg
jns
mov
xchg
mov
sbb
notl
or
imull
daa
lods
mov
xchg
repz
push
les
sti
pop
and
pop
dec
inc
xor
test
mov
dec
mov
iret
cmp
jle
loope
daa
xor
clc
sub
xor
dec
and
jg
das
adc
jl
mul
mov
stos
dec
push
or
inc
cmp
xchg
scas
test
in
sub
lret
sub
cmc
arpl
ds
lock
mov
repz
popa
push
sbb
out
addl
xchg
test
into
pop
xchg
sub
mov
int
mov
cmpb
fadds
addr16
sbb
sbb
in
jo
or
push
cmp
clc
mov
push
js
aad
or
add
mov
dec
fstl
testl
push
es
pause
ja
outsb
add
dec
dec
mov
iret
push
mov
test
hlt
aas
add
bound
shll
pop
les
loop
repnz
and
insl
cmp
xchg
lret
jle
out
in
mov
dec
jge
cmpl
sahf
push
outsl
push
test
fnstsw
mov
adc
fnstenv
jecxz
mov
pop
adc
addb
adc
adc
push
or
push
lahf
repz
xchg
sarb
inc
test
pop
repnz
and
in
popf
xchg
inc
mov
sub
mov
mov
addr16
pop
mov
mov
push
adcb
xor
cmc
mov
das
sbb
xlat
repz
fstps
test
jo
mov
mov
push
xchg
fidivl
sahf
jg
fildl
cmp
fwait
sub
stos
jmp
mov
cmpsl
rcrl
lds
dec
lret
out
aad
xchg
cmc
aaa
push
adc
pop
scas
mov
dec
lahf
cmp
and
jnp
lods
sub
fstps
outsl
cld
adc
cs
pop
cmovnp
insb
and
orl
pop
mov
xlat
mov
dec
lret
call
lahf
out
repz
sbb
rorl
ds
leave
jp
jmp
mov
sub
or
fisubl
xchg
ljmp
cmp
jl
push
lods
cs
pop
das
loop
inc
push
into
insb
mov
push
jb
imul
hlt
mov
pop
sub
sub
inc
dec
mov
imul
mov
loope
cmp
mov
cmpb
insb
stos
enter
sbb
mov
push
sahf
sub
cmp
daa
cmpsl
push
add
stos
out
cmp
test
dec
xchg
add
outsb
mov
movsb
fdivrs
xchg
sbb
add
jmp
mov
ret
cmpsb
nop
jmp
jb
mov
xchg
lcall
hlt
lea
int
cmp
test
data16
test
cmp
mul
or
mov
lret
inc
mov
jno
out
insb
xor
mov
sub
mov
enter
mov
jmp
dec
mov
outsl
push
call
jnp
dec
andb
mov
sbb
fildl
dec
jp
push
inc
decl
jbe
es
pop
pop
pop
adc
pop
in
fwait
outsl
and
ret
jle
jmp
add
lods
fiaddl
pusha
imul
mov
lea
inc
sbb
fists
pop
popa
mov
and
cld
adc
arpl
js
pop
in
sbb
mov
pusha
pop
imul
fcmove
add
test
xlat
and
sti
movl
xlat
test
shrl
xor
aam
xor
mov
sub
pop
dec
cli
pop
pop
scas
jo
insl
xor
mov
pushf
jge
adc
hlt
stos
fld
es
sahf
jl
shrl
in
divb
ss
xchg
mov
cli
cmp
ret
xchg
xlat
push
or
movd
xor
fs
mov
std
mov
push
sbb
in
xor
aad
loope
pop
inc
push
push
arpl
lock
sub
aaa
and
and
mov
xchg
movl
adc
idivl
pop
pop
mov
mov
pop
xor
jb
or
in
in
push
cmpl
hlt
add
cmpsl
lcall
fs
test
ja
cmpsl
lcall
add
jnp
pop
dec
adc
insl
loope
sahf
daa
xchg
dec
inc
cltd
mov
addr16
or
rolb
cmpsl
je
mov
mov
mov
xchg
dec
popa
pop
push
dec
cmp
inc
paddusw
or
mov
push
xchg
ret
dec
pop
nop
rsqrtps
push
cs
cmp
lahf
loopne
and
ret
and
jae
add
sub
xchg
mov
rorl
mov
imul
sbb
test
rclb
mov
cmpsl
mov
rcll
xchg
ljmp
popf
loopne
push
add
insl
in
movmskps
jne
scas
arpl
push
movl
sub
mov
mov
mov
lcall
jnp
mov
popa
pop
and
ficomps
jl
adc
and
movlps
push
dec
pop
sbb
mov
add
xchg
xchg
jge
cli
push
test
hlt
jae
test
out
outsl
add
dec
enter
xchg
xchg
cmp
push
lds
imul
scas
and
cmp
mov
lahf
jbe
sub
mov
jne
inc
jno
inc
call
mov
arpl
test
push
sub
test
pop
mov
imul
mov
test
push
lahf
divb
daa
xor
dec
inc
outsl
insl
lahf
mov
xor
jne
jo
call
das
or
xchg
cli
mov
adc
xor
nop
or
out
hlt
xchg
xchg
imul
inc
hlt
dec
lods
xchg
arpl
sbb
jp
mov
ss
loopne
sbb
add
mov
shl
push
mov
ja
inc
mov
ret
jl
inc
xchg
out
push
ss
xor
cmp
inc
dec
sti
mov
cmp
mov
dec
int
cwtl
mov
cmpsb
adc
inc
lahf
xor
mov
mov
lods
adc
repnz
mov
sbb
test
xor
lock
push
mov
pop
push
jmp
aas
xor
pop
mov
cmp
mov
scas
cmpsl
lcall
ljmp
pushf
inc
lea
xchg
cmp
or
gs
xchg
sbb
pop
push
pop
sub
pop
cmp
ljmp
int
push
push
lea
sub
sbb
xchg
mov
mov
lock
jne
aaa
mov
insb
inc
imul
mov
ja
les
insb
fwait
inc
mov
cmpsl
aaa
adc
enter
clc
mov
mov
mov
loope
fcoms
mov
xchg
pop
es
xchg
aaa
je
jge
andl
sbbb
or
movsl
js
daa
loop
and
pusha
test
xlat
inc
es
lahf
shlb
loopne
pop
cli
sbb
fldt
or
mov
cmp
xchg
lret
stc
xrelease
test
data16
bound
into
icebp
xor
aaa
adc
mov
xchg
push
lret
js
fistpl
mov
sbb
fsubrl
sarb
adc
sub
dec
test
mov
jge
enter
in
push
lret
mov
cld
sar
mov
call
cmp
subb
enter
xor
out
jb
push
clc
mov
mov
loopne
notl
push
mov
xor
cmpsb
cli
adc
fildll
nop
cmp
sti
mov
mov
sbb
pusha
lret
xor
push
pushf
cmp
pushl
mov
scas
xor
dec
mov
add
fcomi
sti
add
mov
xchg
sahf
or
mov
and
mov
pop
mov
mov
push
push
scas
jne
mov
shr
out
inc
sbb
mov
nop
mov
xchg
mov
sbb
out
stos
pop
mov
cld
aas
insb
pop
fwait
daa
inc
push
in
and
jo
xchg
cmpsb
dec
mov
stc
push
addr16
iret
cli
div
hlt
mov
xchg
xchg
and
mov
pop
lods
fdivr
push
rol
ret
das
jne
jg
fucomi
jmp
movsl
out
aad
xor
iret
dec
mov
ljmp
adc
out
push
sbb
mov
cmp
mov
mull
scas
and
inc
nop
inc
jno
dec
xor
dec
pop
fdiv
sti
pop
mov
mov
iret
mov
imul
xchg
mov
mov
sub
mov
movsb
out
pop
daa
jmp
jge
cmp
lcall
popf
pop
mov
ja
iret
ss
mov
imul
in
jb
cmp
fucomp
iret
dec
inc
stc
jne
mov
nop
adc
cmpsl
pop
mov
inc
test
push
mov
mov
push
sbb
and
mov
outsl
test
and
scas
pop
pop
pusha
cmp
jecxz
sub
cmp
inc
mov
stos
sub
pop
imul
xor
or
sub
inc
inc
in
jnp
shrb
stos
dec
icebp
stc
xchg
or
lds
push
aad
lret
mov
pusha
daa
xchg
mov
bound
and
fcmovnbe
jmp
stos
cmc
mov
jg
or
cmpsb
es
clc
mov
lods
ret
jl
dec
pop
or
xor
sub
aaa
imul
xchg
cmp
pop
fstpl
mov
jge
cmp
cmpsb
aam
and
mov
xor
xor
nop
jb
mov
out
sbb
jo
mov
fildll
sub
mov
mov
jno
mov
sbb
jo
leave
cmp
pop
stos
test
in
and
pop
and
jle
stos
mov
mov
sahf
mov
test
ja
std
mov
push
inc
insl
mov
mov
pop
ret
inc
fs
pop
dec
shlb
ljmp
mov
mov
pop
sub
and
mov
pop
adc
sbb
lret
ret
jbe
sub
and
jmp
mov
fs
scas
inc
add
push
jb
stos
gs
iret
xchg
cld
mov
mov
dec
mov
xor
push
ret
aas
inc
push
shlb
imul
and
add
xbegin
loopne
out
jmp
call
and
adc
imul
cmpsb
xor
js
add
filds
cmp
sub
loopne
aas
psubusb
jbe
or
gs
pushf
dec
vmwrite
lds
mov
pop
sbb
inc
lods
out
in
jno
rcr
fwait
mov
pushf
dec
push
and
sbb
dec
mov
jo
adc
cmpl
xor
push
or
cmp
outsb
pop
dec
mov
mov
shl
loope
xchg
sbb
sahf
cmp
xchg
in
int
fcoml
push
inc
xchg
dec
and
push
js
popl
jecxz
leave
icebp
sarl
push
sub
inc
cmp
xchg
stc
dec
subl
les
pop
cmc
mov
popa
hlt
lock
out
ja
mov
xchg
jp
and
ret
and
cmp
repnz
mov
push
pop
daa
outsb
adc
aas
in
push
out
stc
and
cmp
push
or
cld
dec
jbe
mov
call
or
cmp
adc
pop
inc
jge
jo
decl
fisubrs
adc
dec
add
sbb
sub
test
mov
lret
loope
jno
inc
mov
xchg
cmp
inc
adc
inc
outsl
jns
cltd
jle
pop
xchg
in
pushf
loope
xor
mov
loopne
cld
cli
mov
xor
shll
in
pop
adc
fildl
add
xchg
dec
pusha
outsb
test
or
mov
lods
sub
shrl
sbb
pop
pand
dec
bound
gs
push
and
jmp
mov
adc
out
rol
inc
or
movsl
adc
ror
push
push
push
mov
fildl
xchg
mov
cmp
sbb
pop
stos
incb
out
sbb
inc
fisubrs
test
in
pop
ret
sub
aaa
cld
in
jl
adc
insb
test
inc
divb
dec
mov
enter
je
adc
push
mov
gs
push
jp
and
mov
cmpsl
mov
sub
das
cmpsl
shlb
xor
aad
mov
fcoms
insb
pushf
out
cmc
mov
ret
jp
xor
pusha
dec
daa
mov
out
dec
lahf
mov
fwait
repnz
out
call
fstpl
sbb
mov
loope
and
mov
mov
mov
and
xchg
mov
pop
inc
sub
test
pop
lret
hlt
mov
pushf
and
shr
push
movsb
outsb
push
sub
dec
or
and
lock
push
mov
or
call
jl
cld
mov
and
sub
lock
jp
adcb
and
cld
fistpl
mov
cmp
aas
push
sbb
fnstenv
cli
mov
mov
jg
cmp
in
sub
sbb
imul
xor
iret
fs
out
xor
jae
invd
dec
gs
nop
mov
dec
mov
dec
pop
push
mov
inc
jle
in
jno
aam
and
rclb
or
adc
fiaddl
add
mov
sbb
mov
or
pop
sti
jno
mov
data16
inc
jg
lods
and
mov
cmc
pop
lcall
mov
push
xor
fbld
roll
dec
mov
cmp
pop
mov
lods
cld
sti
adc
lods
cmovno
dec
fldt
mov
filds
addr16
add
pop
out
jge
jg
mov
push
xchg
mov
cmp
test
cmp
or
push
int
ljmp
ja
out
sub
mov
sar
add
cli
sti
sbbb
nop
test
jg
int3
hlt
shrl
dec
xchg
cmp
xorb
out
jg
sti
js
mov
xlat
xchg
das
fdivl
mov
inc
mov
jle
jbe
fistps
int
and
mov
xchg
or
orl
aam
mov
mov
addr16
add
jp
fcmovnbe
and
cmc
push
loope
jg
fsub
push
lahf
lret
in
and
sbb
xchg
mov
push
inc
mov
inc
push
clc
mov
push
adc
std
sarl
pop
popa
aaa
pop
or
roll
inc
mov
xchg
mov
mov
pop
es
test
je
out
imul
xlat
cmpsl
rorl
and
mov
ret
push
inc
mov
pop
mov
addr16
sub
arpl
insb
and
and
cmp
and
daa
subb
out
js
jmp
int3
add
jp
cmp
sub
cwtl
rorb
mov
flds
sub
mov
fwait
out
add
scas
fnstenv
add
stos
mov
hlt
call
push
jle
lret
xor
mov
or
fcmovnbe
fnstsw
fadd
testb
sahf
sub
out
addr16
shl
loope
push
int3
add
adc
dec
dec
xor
pop
mov
cmp
mov
pop
pop
jecxz
cmp
not
pop
inc
push
xchg
push
fsubs
pop
xor
sub
inc
loop
xchg
inc
enter
inc
adc
mov
sub
jnp
fldt
fwait
int
xor
and
lock
aas
movsl
mov
adc
flds
mov
mov
jg
popf
cmp
adc
lods
sub
outsl
aaa
notb
jg
adc
insb
into
inc
mov
leave
int3
add
cltd
xchg
rorl
xor
jb
jae
fcmovnb
shrb
popf
call
adc
mov
std
data16
bound
popa
mov
xchg
aam
cltd
mov
mov
add
xor
mov
dec
mov
adc
lahf
fcmovb
cmc
jl
std
push
lcall
mov
mov
push
test
aam
cmp
cmpsl
sbb
out
mov
inc
pop
and
lcall
and
std
mov
add
push
sub
inc
and
test
add
aas
inc
cmp
adc
xchg
pop
adc
mov
je
jg
cmpsl
jp
or
ss
jbe
ret
cld
aas
ret
pop
imul
fs
dec
fldt
stos
out
ljmp
sahf
adc
repz
aaa
ja
xor
scas
pop
xchg
fxch
sub
pop
fcmovnb
cmc
out
jae
lock
xor
push
scas
sbb
gs
shr
fwait
mov
cld
add
mov
mov
mov
enter
mov
sub
adc
inc
push
scas
mov
mov
xlat
call
xlat
shl
or
sbb
or
mov
in
xor
rolb
andb
test
mov
cwtl
dec
pop
std
ret
loop
outsl
out
ret
xlat
and
int3
pusha
lret
dec
jl
shlb
push
push
cmp
adc
mov
xlat
xor
dec
mov
adc
mov
push
aaa
enter
mov
xchg
aas
leave
dec
cmp
call
orb
out
mov
lret
and
ret
into
sbb
loop
or
xor
xchg
mov
lret
leave
movsl
inc
mov
fxch
fdivs
cmp
rolb
cmp
sub
xchg
lret
pop
sbb
filds
incl
stos
mov
pop
mov
xchg
insb
cmp
mov
iret
sub
out
gs
orl
iret
mov
outsl
xlat
dec
loopne
xchg
lret
jecxz
int3
sbb
fcmovbe
int
out
shl
lahf
cmpb
leave
inc
jg
fcmovbe
leave
jg
int
mov
fildl
mov
mov
testl
shrb
rolb
mov
roll
xchg
sbb
ja
je
or
jae
or
push
cmpsl
test
mov
test
cli
xor
fldcw
lret
sub
shlb
xlat
xor
jmp
int3
mov
mov
cmp
jl
test
sahf
int3
pop
out
pusha
xlat
les
xchg
sbb
mov
fildl
dec
aam
div
mov
hlt
repnz
add
jecxz
into
sub
iret
and
sub
leave
inc
mov
and
push
divl
leave
nop
faddl
test
inc
sahf
leave
lretw
push
sbb
pop
mov
into
std
sub
jl
iret
sbb
xchg
mov
xor
or
sbb
mov
into
push
jg
dec
xorb
das
aaa
cmp
sub
test
in
lods
dec
fwait
add
aad
mov
cmpb
lods
into
push
repnz
cmp
int3
xchg
jnp
cmp
int3
cmpsb
icebp
jp
xor
testl
mov
fisubs
mov
ja
jp
xlat
jl
daa
ljmp
das
imul
jno
add
jb
cmp
pushl
mov
jge
scas
mov
sub
jecxz
inc
scas
int3
sub
pop
xchg
mov
xchg
jg
jg
sub
lret
mov
stos
or
call
je
mov
jg
mov
lret
mov
sar
test
addb
pop
iret
lret
jl
leave
dec
sub
addr16
sbb
subl
stos
into
in
mov
jl
and
or
mov
repnz
cs
imull
cmp
xlat
imul
testl
test
pop
sbb
aas
lods
cmpsl
mov
adc
rcrb
orl
lods
xlat
ja
lret
dec
pop
mov
xor
xorb
into
clc
aaa
jno
test
sub
sbb
jne
xor
adc
push
and
mov
xor
push
neg
xchg
pushf
xchg
test
and
push
cmc
push
rcr
mov
sub
pusha
pushf
mov
mov
mov
xor
not
xor
lea
call
add
dec
outsl
arpl
inc
jb
add
in
sbb
add
add
and
pusha
pushf
je
sbb
sbb
pop
enter
jle
into
mov
sub
cmc
movsl
xchg
adc
iret
int3
dec
xlat
mov
adc
test
add
std
push
pop
movsb
pop
lods
pop
push
cmp
or
in
out
sbb
scas
filds
sbb
cmpb
dec
sti
in
pop
pop
cmpsl
jo
es
ja
icebp
or
ret
movsb
pop
stc
push
push
mov
aaa
push
sub
arpl
sbb
xchg
mov
mov
dec
or
pop
xor
enter
mov
push
lahf
scas
inc
shrl
out
rorl
add
out
movsb
sub
cmp
gs
jecxz
and
sahf
shl
call
mov
imul
jle
rcrb
mov
out
pop
pop
and
out
jmp
call
xchg
fidivl
in
dec
movsb
aas
mov
hlt
inc
inc
psrlw
or
push
icebp
div
shll
xchg
orl
sub
in
movsl
push
and
sahf
xchg
pop
cmpsb
mov
xchg
int
push
pop
mov
dec
aaa
xlat
inc
cmp
fstpt
out
ja
adc
xchg
pop
or
sbb
xchg
ss
mov
je
sbb
inc
dec
xchg
test
xor
fsubl
push
pop
enter
pop
add
mov
pop
fcompl
add
mov
or
lret
xchg
xchg
xlat
fldcw
rcll
mov
mov
js
icebp
push
sbb
sbb
andl
call
bound
cli
jne
lods
xchg
pop
fldcw
add
add
aas
inc
fimull
pop
dec
mov
mov
xor
cli
mov
mov
lea
cmp
out
mov
lods
mov
push
mov
inc
fsub
adc
lahf
cmp
and
std
call
mov
xchg
mov
movzbw
not
xchg
mov
call
push
inc
push
adc
mov
pop
pop
movsb
iret
sub
pop
sub
movsl
push
je
popa
iret
sub
mov
jno
push
sti
pop
lock
push
cmp
je
ror
push
adc
bound
iret
sub
mov
adc
iret
sub
cmp
ficompl
mov
adc
sub
jno
aaa
or
pop
stos
clc
shrb
push
dec
jmp
addr16
mov
mov
rcr
push
cltd
or
ret
sub
xor
pop
jnp
iret
sub
lret
ss
in
push
pop
push
xchg
ret
sub
hlt
xlat
xchg
push
pop
xor
iret
sub
fcoml
jae
push
shrb
push
cmp
popa
sti
mov
sub
push
lret
jno
sub
in
testb
emms
lds
shrb
push
jge
cli
dec
push
arpl
sub
orl
lret
ret
push
cmp
arpl
push
jge
sub
andb
dec
push
sbb
call
aas
mov
push
lret
shrb
push
rcll
sbb
icebp
ret
sub
out
jmp
push
push
push
sub
pcmpgtd
inc
mov
inc
push
outsl
xchg
mov
outsl
push
daa
pop
mov
int
push
push
loopne
mov
add
jo
xor
sub
sbb
push
iret
push
jp
into
shrb
push
sub
ja
ret
push
pusha
pop
push
cwtl
push
popa
mov
mov
in
ret
iret
sub
daa
xor
outsl
dec
aam
sub
shll
inc
push
jo
sub
jmp
andb
sub
hlt
lock
sti
push
bound
iret
sub
and
and
outsb
jg
int
push
iret
rcrl
push
popa
gs
sbb
push
dec
push
lock
sub
inc
cmp
add
push
push
mov
stc
inc
or
xchg
jg
enter
sub
adc
and
cmp
in
call
loopne
fistl
enter
or
cmp
rcll
addb
das
pusha
dec
adc
pop
jb
xchg
subl
sbb
lret
cwtl
or
loope
adc
mov
inc
push
shl
add
push
inc
cmp
xor
xchg
push
pop
lea
out
ror
inc
mov
pop
call
pop
out
mov
rolb
inc
and
call
mov
mov
cmp
add
add
sbb
sbb
or
pusha
pushf
movl
pushl
movw
mov
lea
jmp
adc
lea
pushf
jmp
movw
lea
ja
pushf
push
lea
jb
cmp
cmc
stc
cmpb
jmp
sbb
pop
mov
mov
mov
cld
lcall
xor
aam
cmp
xchg
sbb
adc
pop
jne
or
adc
jno
mov
movsl
icebp
cmp
popf
fisubs
mov
add
lds
addr16
xor
imul
inc
addr16
lret
push
shr
arpl
sbb
jae
jecxz
sub
lahf
cmpsl
jnp
pop
in
popf
sbb
out
xchg
or
adcl
pop
loopne
push
and
mov
aaa
daa
xor
mov
xchg
mov
in
cwtl
jg
rol
test
jecxz
btc
pop
test
sbb
insl
inc
loopne
call
mov
repnz
aas
jmp
enter
aad
mov
dec
and
mov
jg
sbb
cmp
mov
jnp
stos
mov
push
pushf
addr16
mov
xor
mov
add
sti
iret
dec
push
icebp
rcrl
push
popa
jns
scas
imul
push
repz
rcrl
cli
insb
mov
xor
pop
mov
pop
mov
jmp
xlat
iret
call
push
inc
adc
push
dec
push
fdivl
mov
and
pop
pop
inc
dec
cs
mov
xchg
push
or
inc
pop
mov
nop
lret
icebp
mov
jg
adc
mov
sub
inc
addl
mov
sahf
clc
sti
add
jnp
mov
sub
gs
cmpsb
in
jge
push
pop
sub
mov
ret
inc
push
push
scas
push
js
test
sbb
xor
outsb
xchg
cmp
push
and
or
inc
bound
jne
mov
mov
mov
std
add
cmovge
inc
inc
xchg
pop
fcomi
sub
dec
fadd
jg
hlt
aas
cli
add
add
or
out
fwait
lahf
inc
je
or
mov
pop
test
ret
fstps
in
dec
insb
inc
cmp
pop
lds
arpl
jb
jg
pop
push
push
ds
push
xor
or
and
and
xor
movl
movw
pusha
call
xor
stc
inc
sbb
gs
dec
and
xchg
adc
daa
inc
fwait
mov
or
xchg
cld
push
xchg
jp
push
dec
inc
rclb
jge
fisubrs
sub
push
mov
mov
push
popf
xor
subl
and
mov
pushf
pusha
pushf
pushf
lea
jmp
out
sub
jae
lds
xchg
lods
push
cld
addr16
std
loop
sti
out
mov
jp
push
out
dec
das
or
lea
inc
stos
cmpsb
dec
rorb
shll
mov
dec
mov
mov
das
icebp
sub
mov
or
sbb
sub
jmp
sbb
int3
add
adc
push
mov
loope
pop
push
xchg
sahf
outsb
gs
adc
jns
dec
ja
enter
add
mov
test
fs
repnz
mov
adc
bound
repnz
loope
mov
sub
dec
sbb
hlt
and
fmulp
lret
and
mov
sbb
gs
add
in
and
repnz
loop
mov
jp
add
add
sbb
lods
out
mov
js
add
add
repnz
enter
cmp
mov
mov
jle
sarl
mov
out
pop
push
scas
or
push
daa
test
sbb
mov
sub
xor
xchg
pushf
push
adc
lea
jae
pushf
pushf
pushl
lea
jae
call
call
roll
je
stos
notl
cmovp
jl
adc
add
movsb
cmp
jae
imul
nop
inc
repnz
shlb
inc
mul
int
mov
loopne
push
and
pushf
add
push
enter
xchg
mov
mov
xchg
shrl
jl
loope
in
addr16
mov
call
in
lea
jae
push
lea
jne
pusha
stos
movb
pushf
pushf
push
lea
jmp
jmp
lea
je
pushf
lea
jmp
lea
je
pushf
pushf
pusha
lea
jmp
pushf
movl
pusha
mov
lea
jmp
inc
lods
vpunpcklqdq
mov
jle
lock
inc
jge
push
lods
sub
and
imul
sub
das
sbb
or
push
int3
cmp
pop
adc
aam
mov
and
in
popf
pop
fcmovne
xchg
jns
dec
inc
ljmp
clc
out
mov
cmp
push
push
pushl
sti
xor
sub
dec
cmp
shrb
cmp
push
cwtl
cmove
xchg
stc
xor
out
pop
ret
pop
test
dec
jnp
pop
sub
adc
push
add
lea
sbb
sahf
loopne
cmp
lret
pop
movl
pcmpgtb
jbe
push
push
add
mov
sub
fcmovb
xlat
mov
mov
out
flds
cli
out
test
or
cmpsb
xor
xlat
inc
xor
and
mov
pop
inc
mov
and
and
decb
xchg
adc
add
popf
lds
testl
xadd
mov
bsf
neg
shl
add
shl
clc
shrd
dec
mov
call
xor
inc
test
ljmp
mov
jp
jo
sbb
std
lock
icebp
xchg
sub
scas
cltd
fcmovnb
bound
push
out
enter
xchg
rorb
ja
mov
inc
stc
hlt
mov
push
pop
stos
aam
mov
andb
std
mov
or
cmovs
pop
jp
lock
testl
div
add
in
cltd
imul
xor
pop
or
aad
lcall
mov
jg
mov
imul
jae
enter
xchg
test
ss
push
or
orb
je
push
into
js
fwait
jp
into
and
mov
mov
dec
insb
cltd
mov
pop
pusha
rorb
mov
dec
dec
mov
fcoml
inc
loop
add
xor
mov
stos
insl
or
sbb
mov
inc
push
std
mov
fwait
add
or
loopne
es
sub
push
adc
inc
test
or
call
push
push
lea
ja
push
jmp
ret
adc
jge
test
movsb
lahf
pop
mov
enter
call
in
lock
sub
dec
divl
addr16
mov
icebp
xchg
jae
in
enter
xchg
aad
loop
pushf
push
decl
xchg
std
sub
frstor
sbb
mov
shll
call
call
mov
stc
bt
shl
shr
sbb
inc
sets
pop
mov
clc
or
pushf
push
pusha
push
lea
je
sub
add
and
rol
shl
sub
rcl
bsf
shr
dec
xchg
mov
shl
movsbw
add
bsf
sub
cmc
add
and
rcr
jmp
push
loopne
lds
cmpsb
out
push
cmp
popf
divb
jne
leave
inc
insl
pop
inc
scas
es
cmp
test
cmc
loop
aas
lods
sub
cmp
cltd
test
sbb
push
insb
out
fwait
mov
repnz
pop
mov
sbb
sub
jns
xorl
or
xchg
pusha
int3
sbb
cmc
out
dec
inc
sbb
xorb
xchg
fidivrs
adc
fcoml
push
loope
frstor
jbe
or
cmp
xchg
inc
sub
les
mov
data16
je
sti
ja
adc
jbe
bound
sti
lods
xchg
bound
stos
fwait
push
inc
sbb
or
mov
jae
or
pusha
aam
jbe
leave
stc
adc
cli
roll
lock
mov
out
cmp
arpl
idivl
and
aam
adc
lcall
xchg
dec
or
xor
pusha
in
mov
leave
cwtl
jns
ror
lret
ja
rolb
repz
pop
jae
pop
xchg
mov
in
and
and
jo
dec
dec
mov
pushf
pop
mov
cli
stc
xchg
xchg
xor
ss
or
out
pushf
ljmp
jl
mov
add
cmp
push
orb
cwtl
mov
jmp
lea
jae
test
cmp
call
jmp
movsl
nop
jmp
cmp
imul
sbbb
js
inc
or
and
pushf
jecxz
mov
lret
inc
jne
mov
repnz
xor
jecxz
mov
fldl
mov
les
ja
cmp
jbe
jle
bswap
or
clc
rcr
push
bt
mov
btr
rcr
shl
push
movsbw
bts
btr
mov
push
rcr
push
pushf
bsr
ror
shr
mov
pusha
mov
test
rcl
bswap
add
mov
or
mov
shr
add
rcr
mov
lea
jle
stc
cmp
clc
or
jmp
call
aaa
inc
fsubrp
sub
out
adc
xor
int3
and
mov
jbe
xchg
or
enter
dec
subb
adc
mov
jge
adc
cmp
cwtl
shll
xor
pop
mov
mov
or
enter
in
cwtl
fcmovb
push
popf
enter
push
cmc
dec
push
loop
lret
shrl
jecxz
out
enter
adc
jge
mov
cmpsl
push
cmp
in
push
pushf
xor
fimuls
lcall
jp
xorl
mov
fwait
divb
or
iret
jecxz
cmpsb
dec
mov
xchg
pusha
out
pop
test
sarb
enter
push
les
cmp
addb
pop
inc
popf
add
fsubl
fcmovnb
iret
flds
pop
mov
and
imul
sub
pop
add
mov
mov
pushf
call
ds
out
insb
pop
inc
mov
call
leave
xchg
stc
xor
xchg
cmc
in
adc
mov
fcmovnbe
jo
push
mov
dec
push
inc
arpl
es
push
mov
nop
mov
add
in
cmpl
cmp
inc
js
je
jb
arpl
jae
out
sub
jns
aad
js
push
or
and
fcom
lret
xchg
shlb
lcall
dec
dec
mov
mov
mov
and
call
stc
sbbb
cs
das
jo
not
xor
add
ds
cmp
sarb
dec
pop
out
pop
scas
jne
stos
mov
push
push
dec
imul
sti
xchg
shlb
test
mov
push
nop
sbb
dec
fcoml
dec
xor
leave
ss
imul
pop
movl
mov
pushf
pusha
movb
pushl
popl
mov
mov
pushl
ret
pushf
pushf
lea
jae
jmp
fiaddl
xchg
arpl
jno
cmpsb
inc
sbb
adc
aad
xlat
stos
and
pop
call
fisubrs
and
lahf
and
mov
mov
fldenv
lahf
imul
cmc
adc
jae
test
or
in
ljmp
adc
mov
test
and
mov
ret
enter
sub
add
popa
int
mov
xchg
and
mov
stos
insb
sub
dec
xlat
rcr
mov
test
pushf
and
cld
pusha
call
pushf
xchg
call
movl
movb
lea
jmp
pushf
lea
call
pusha
pusha
call
cmp
pushf
jmp
in
jmp
lahf
jp
lods
test
nop
pop
xor
adc
fdivrs
cmp
push
mov
jmp
lret
and
jo
sub
enter
mov
and
stos
inc
sbb
xchg
sbb
mov
ret
lock
sub
icebp
sbb
jnp
xchg
jl
or
sbb
sub
lock
mov
pushf
jmp
lea
je
jmp
push
lea
jne
jmp
lods
lock
lods
push
cmp
call
fadds
daa
outsb
cmpl
pushf
test
adc
or
cmpsb
sbb
mov
push
jnp
jp
xchg
mov
jecxz
add
jmp
addl
sub
pushf
add
ret
jns
push
sbb
insb
fldt
sub
mov
dec
mov
mov
cmpsb
mov
addr16
leave
inc
inc
aad
inc
xchg
insb
inc
and
mov
sar
loopne
lock
push
sub
loopne
scas
shl
cmpsl
inc
xor
sub
es
aad
out
imul
in
inc
out
push
xor
push
cmp
dec
jae
lock
nop
out
test
and
in
adc
mov
je
outsb
out
sub
push
int
adc
ret
imul
inc
xchg
stos
jnp
rcrl
add
addr16
imul
sub
push
arpl
leave
ficoms
test
cli
and
dec
cmpsb
ljmp
test
sbb
add
aas
push
add
cmp
dec
jecxz
xchg
inc
inc
mov
pop
ljmp
pop
or
nop
xchg
imul
lods
mov
mov
dec
push
inc
mov
push
add
cmpl
movsbw
call
cmp
pusha
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
inc
and
dec
ss
push
pusha
push
lea
jmp
push
call
movl
pushf
push
pushl
lea
jmp
push
loop
sub
insb
repnz
inc
mov
pop
pushf
push
fisttps
pop
and
xchg
pop
and
daa
lea
add
xor
mov
mov
test
aam
pop
iret
enter
xor
rcl
out
movsl
into
dec
subb
pop
outsl
insl
je
sub
jne
bound
xchg
sub
jne
nop
mov
loop
fiadds
icebp
push
and
or
mov
and
outsb
cli
inc
out
cltd
inc
or
cmpl
cmc
add
pushf
movb
pushl
movb
lea
je
cmp
add
pushf
mov
pusha
pusha
lea
jmp
imul
stos
iret
jo
insl
jle
xchg
mov
out
lods
mov
aam
mov
fwait
lcall
mov
aas
dec
ljmp
popa
loopne
mov
push
mov
lods
xor
jns
jne
and
inc
movsb
inc
mov
inc
xor
cmp
cmp
xor
cmp
mov
cmp
aaa
sub
push
setne
in
popf
xchg
dec
xor
arpl
sbb
bound
xlat
xchg
lcall
cmpsb
popf
mov
mov
dec
dec
sub
or
cmp
outsb
jne
jo
xchg
xlat
inc
cmp
dec
dec
dec
push
ljmp
das
insb
cltd
lea
aaa
arpl
dec
add
dec
push
push
aaa
fisubrl
stc
sub
add
pop
push
mov
jns
inc
mov
push
mov
pop
call
sbb
movsb
jo
xlat
lcall
cs
push
cmp
inc
mov
xchg
xchg
mov
cmp
cmp
sub
mov
cmp
cmp
mov
lds
cmp
mov
lret
std
movl
test
xor
ss
lods
add
mov
jns
pop
sub
lods
out
xchg
ficoml
push
jo
idivb
mov
lods
mov
push
lcall
dec
add
fcmovnbe
insb
sub
mov
push
lcall
sub
cmp
push
jnp
adc
stc
mov
stc
aas
test
jecxz
pop
pop
popa
cmp
xchg
cmp
mov
push
pop
cs
sbb
faddl
insb
lods
mov
xchg
push
and
jge
sbb
icebp
int
mov
lods
pop
scas
add
jmp
cmp
mov
inc
inc
ljmp
lods
out
popa
ret
sub
inc
shrl
mov
pop
push
test
lods
stos
mov
pop
imul
idivb
lds
inc
aas
les
dec
push
mov
bound
jnp
xlat
jbe
fstpt
cmp
mov
pop
push
dec
aaa
negl
sub
fistl
or
fistpl
lods
cmp
sahf
cmpsb
outsl
jnp
xchg
mov
dec
inc
aaa
loopne
pop
loop
pop
inc
mov
out
cmp
test
cmp
inc
add
pop
cmp
add
lea
cmp
add
sub
lods
inc
mov
fst
out
jg
lods
fsts
jnp
cmpsb
das
sbb
outsl
xchg
mov
push
pop
dec
lret
imulb
mov
aad
pop
jecxz
dec
dec
jnp
push
pop
std
jnp
jb
lods
jmp
xlat
pop
aad
vpand
push
aad
pop
sub
xchg
fldcw
lods
push
cmp
jnp
mov
jg
shrl
jle
fwait
mov
lods
push
or
xor
jp
lcall
lods
jae
pop
fildll
inc
mov
shll
xor
das
mov
rcl
lods
lods
aas
insl
push
mov
xchg
cmp
cmp
and
mov
outsl
not
pop
push
push
negb
cli
stos
outsl
push
out
rcll
shrb
aad
mov
jnp
mov
lret
stos
sub
shrl
xchg
mov
aad
push
lods
es
inc
fs
sub
repz
cmp
pop
cmp
pop
popf
pop
das
add
movsb
jns
outsl
cmpsl
in
jmp
jmp
gs
cmp
xchg
jo
xchg
mov
lods
lods
cltd
jo
xchg
inc
inc
mov
lods
fcmovnbe
jb
fistpll
fcmovnbe
lahf
mov
bound
add
xchg
ja
fs
add
and
jmp
xchg
pop
arpl
xchg
ds
inc
jmp
decl
push
mov
loope
push
leave
mov
mov
cmp
mov
dec
cltd
lret
push
mov
sahf
rcl
xor
das
xchg
arpl
adc
je
cmp
aaa
jno
rclb
in
jno
inc
and
lods
or
cmp
sahf
adcl
jo
bound
jo
cld
cmpsb
xchg
out
cmp
arpl
jnp
sub
jbe
pop
cmp
dec
dec
pop
xchg
stos
test
sbb
mov
sub
test
sub
popa
pop
pop
movsl
jmp
stos
faddl
stos
fidivrl
lods
aad
outsl
mov
subl
js
pop
aam
scas
jo
loope
push
xchg
jb
dec
ja
aaa
rcrl
mov
pop
pop
push
lods
xchg
mov
sub
bound
sbb
arpl
addr16
mov
cmp
stos
je
mov
jnp
dec
mov
fildll
xchg
push
shlb
je
xchg
cmp
sub
jo
pop
cmc
jle
xor
lea
cmp
xchg
out
iret
push
popf
in
xchg
sub
jns
jb
sub
outsb
mov
movsb
cmp
adc
jp
cld
push
and
cmpb
push
xor
sbbb
stos
push
sbb
fldcw
xchg
cmp
cmp
mov
xchg
jle
aaa
pop
aas
xchg
and
dec
inc
inc
fisubrs
stos
cmp
inc
mov
push
loopne
aas
mov
fisubs
xchg
xor
mov
mov
cmp
movsb
aaa
lea
fistpll
idiv
outsl
push
sub
jle
into
jns
mov
pop
dec
dec
jno
cmp
pop
aad
jnp
push
aad
addr16
loope
jnp
rcrl
xchg
repnz
dec
adc
idivb
in
fistpll
dec
inc
sub
roll
add
lea
fidivrl
xor
sub
cmp
jo
sub
fwait
test
stos
jl
in
popfw
fistpll
jne
dec
mov
fwait
jnp
mov
jle
pushf
addr16
cmp
pop
jns
push
fistpll
mov
jnp
leave
popf
sbb
cmp
repnz
aas
cmp
inc
mov
bound
lea
mov
ljmp
jp
push
bound
sarl
cmpsl
movsb
in
cltd
push
sub
sar
lods
shll
flds
popf
imul
retw
pop
lret
outsb
sub
popa
test
pop
cmp
dec
sbb
fcomp
lcall
mov
fcompl
xchg
xchg
sub
pop
push
lods
xlat
cmp
sub
js
je
jbe
and
icebp
mov
cmp
cmp
adc
jl
test
mov
and
cmp
leave
sbb
negb
sub
gs
scas
jnp
jne
sahf
sub
arpl
fs
inc
push
dec
cmp
bound
fisubs
and
push
lods
mov
lods
outsl
jo
lods
push
sarl
scas
jne
es
fs
leave
cmp
shll
jge
push
pop
popf
bound
ss
cmp
xchg
lea
and
xor
cwtl
cmp
xchg
movsb
hlt
mov
sahf
pop
xor
cwtl
cmp
fimuls
popa
movsb
cmp
pop
pop
push
or
fildll
cmp
fs
mov
cmp
inc
mov
xor
and
push
roll
xchg
inc
pop
aas
cmp
cmp
cmp
ficoms
or
fdivrs
mov
pop
mov
jnp
push
cmp
mov
lcall
lret
jmp
out
cs
jno
addr16
imul
xchg
aas
push
adc
sbb
ss
cmp
pushf
repnz
pop
jnp
push
mov
lods
mov
xor
loopne
push
push
jp
xchg
mov
nop
mov
xchg
cltd
xchg
mov
sbb
add
stos
and
xchg
jg
dec
dec
add
xor
cs
push
aad
aas
and
test
fists
repnz
cmp
in
stc
sub
cmp
xchg
pop
rclb
scas
imul
jns
in
out
pop
aaa
es
jo
dec
xchg
jb
addr16
cld
filds
pop
lods
adc
pop
lods
gs
lcall
sbb
dec
pop
mov
mov
pop
push
pop
sbb
jo
xchg
jp
pop
pop
sarl
fnstenv
jge
fnstcw
std
xchg
stc
jb
cmp
arpl
scas
mov
popa
xor
xchg
cmp
lods
call
inc
dec
mov
jg
mov
jne
sti
imul
sbb
jl
mov
fidivrl
cmp
ds
cmp
inc
inc
inc
sbb
mov
ds
xor
test
inc
inc
arpl
lea
lret
xlat
xlat
testb
sub
xchg
aas
lret
cmpsl
cmp
cmc
push
cltd
mov
sub
sarb
ds
loop
xlat
inc
pop
leave
mov
lret
es
inc
xor
daa
test
mov
dec
outsl
data16
dec
xor
movsb
mov
xchg
aaa
xchg
mov
enter
pop
mov
pop
inc
mov
call
mov
fimull
mov
xchg
mov
cwtl
mov
pushf
ljmp
sahf
adc
mov
sbb
js
inc
xchg
cwtl
fwait
sahf
aad
sbb
pop
add
adc
outsl
mov
roll
mov
test
arpl
cmpsl
pop
scas
and
test
sarl
scas
inc
movsl
imul
jge
sbb
jl
mov
mov
push
pop
ja
jle
iret
mov
dec
jbe
stos
daa
inc
mov
mov
mov
test
stos
lret
push
loopne
lcall
leave
mov
int3
mov
into
in
and
mov
fdivrl
int
aas
stos
push
subl
or
loop
mov
mov
sub
ja
mov
mov
aad
sahf
mov
dec
in
stc
mov
jns
test
jg
stos
push
mov
loopne
mov
fnstcw
jo
fcomip
pop
mov
pushf
sbb
stos
mov
mov
pop
stos
bound
jne
or
test
xor
xchg
pop
aaa
hlt
mov
sti
mov
cmp
jo
add
das
mov
lahf
bswap
aad
pop
mov
add
xchg
pop
mov
inc
aad
xchg
out
mov
imul
shrl
aam
ljmp
mov
repnz
inc
push
ss
imul
fwait
in
jnp
out
xchg
jle
or
aad
lahf
mov
xchg
stos
call
stc
mov
nop
lahf
mov
data16
fs
push
sahf
std
stos
das
repz
enter
mov
xchg
aam
mov
loop
push
enter
cmp
mov
push
stos
cmp
cld
cwtl
xor
add
in
mov
xchg
sub
mov
in
loop
ja
rcll
int
xchg
pop
mov
xor
stc
push
test
jno
leave
cmpsl
sahf
lret
mov
lcall
or
into
xchg
out
adc
jmp
int
xor
mov
stos
scas
sub
lods
adc
xchg
jge
xor
jp
ret
mov
inc
mov
out
iret
aas
cmpsl
inc
gs
lea
int
inc
mov
cmc
ret
filds
mov
xchg
xchg
jns
cld
lods
cmp
add
adc
adc
push
pop
and
mov
xor
ljmp
sub
test
xchg
out
mov
insl
xor
or
loop
fstpt
mov
cmp
jno
aaa
enter
test
aad
std
mov
sub
imul
mov
mov
test
ja
sarb
movsl
movsl
mov
pop
cmpsl
sub
sbb
aad
cmc
xor
pop
xorl
xchg
cmp
stc
outsb
xor
cmpsl
dec
ja
ds
insb
lret
push
inc
clc
lods
or
inc
pop
orb
rolb
mov
or
fistpll
insl
push
inc
ds
in
fsts
rcrl
cmp
cs
mov
push
lcall
imul
movsb
xor
or
test
push
daa
dec
aaa
test
rolb
stos
ret
lahf
loope
ds
jp
jge
int3
xor
mov
jecxz
mov
hlt
pushl
scas
mov
xchg
push
fldl
flds
imul
push
push
stc
fidivs
shlb
cltd
ja
fwait
xlat
test
les
mov
jns
pop
xor
xor
dec
dec
cmp
push
push
sub
jg
imul
xchg
jg
push
arpl
or
sbb
jbe
mov
cmpsl
add
repnz
inc
pusha
mov
dec
loope
mov
stos
cld
jb
dec
sub
pop
adc
cmp
dec
jns
jecxz
lret
cmp
testb
dec
push
shrb
xlat
xlat
xor
mov
pop
fidivrs
das
xor
aad
lret
out
add
dec
stos
imul
adc
out
mov
into
push
imul
idivl
mov
sub
scas
sub
js
xchg
andb
pop
jle
scas
ja
clc
and
pop
mov
mov
ljmp
pop
stos
pusha
int
out
jnp
aaa
fidivl
rclb
decl
jns
mov
mov
insb
xchg
roll
in
dec
push
imul
sbb
or
mov
adc
ss
fwait
call
xlat
fisttpl
jnp
sahf
divb
das
test
pop
jns
cmp
aad
aaa
in
stos
pop
ds
or
or
imul
mov
dec
jno
lods
fistpll
xor
inc
aaa
movhps
je
dec
mov
pop
andl
xor
and
xlat
cltd
pop
mov
adc
lock
insl
lahf
xchg
int3
pop
test
repz
mov
adc
lods
mov
cmp
jae
movsb
pop
fldt
ds
inc
mov
jp
sbb
mov
ss
out
or
aaa
orb
daa
invd
stos
xchg
xchg
mov
imul
sbb
cmovl
fmulp
out
xor
mov
loope
push
mov
jecxz
push
mov
lea
je
mov
aas
test
imul
ja
xor
jns
xchg
xchg
adc
cmpsb
test
mov
fcoml
mov
mov
jb
jns,pt
push
das
push
imul
jge
roll
ljmp
ss
ds
decl
imul
repz
mov
mov
lds
jnp
mov
mov
loop
pop
push
mov
shrl
dec
jae
pop
arpl
jg
out
cli
adc
mov
fwait
int3
sar
and
stc
push
and
xor
in
sti
aas
lret
shrb
lret
nop
mov
mov
push
jnp
movsl
dec
sub
sbb
daa
imul
iret
aad
popf
jmp
je
fwait
cltd
fcmovbe
mull
lcall
mov
adc
dec
fisubrl
xor
jbe
int3
negb
pop
inc
and
push
cmpsb
stc
mov
outsb
adc
jle
movzbl
mov
push
jnp
mov
movsb
pop
jo
shlb
pop
mov
imull
lcall
loope
push
jmp
flds
popa
jnp
loop
inc
fistpl
and
fisubl
push
gs
mov
sub
dec
mov
xlat
lahf
arpl
insl
pop
mov
cmpl
pop
movsl
dec
insl
mov
loopne
lahf
adc
int
jno
hlt
jae
mov
adc
inc
inc
mov
fisubl
cmp
mov
addb
insl
insb
lret
mov
inc
stos
push
scas
mov
fwait
test
inc
ficoml
nop
mov
fisubl
fidivrs
add
fstpt
popf
add
xchg
jecxz
aam
lret
push
fdivr
popf
sahf
inc
pop
notl
sub
loopne
mov
pop
xchg
mov
mov
stos
js
jb
mov
xor
mov
cmp
mov
sbb
stos
addr16
add
imull
xchg
and
flds
mov
push
sbb
jle
sti
into
cmp
mov
mov
dec
ja
jbe
sub
cmp
add
aaa
xchg
in
ret
repz
lahf
pop
std
cmp
dec
pop
mov
jnp
shlb
dec
mov
out
push
jnp
test
pop
lea
lds
cmp
xor
lock
mov
cmpsl
pop
cmp
lods
pop
and
cltd
aaa
daa
fidivrl
xor
jae
fwait
dec
outsb
in
mov
mov
mov
les
adc
jle
jbe
insl
ss
jo
les
outsb
or
or
xchg
stos
call
bound
mov
js
shlb
jle
outsl
pop
pushf
imul
out
jno
int3
adc
scas
popa
mov
push
jp
jp
pushf
imul
mov
loop
into
loopne
mull
adc
sub
outsb
pop
jg
leave
pop
lods
cmpsl
inc
out
cmp
mov
in
insb
fidivrl
or
mov
sub
push
mov
pop
mov
inc
test
jno
clc
mov
scas
scas
add
sub
inc
jecxz
xorb
cmpl
je
jl
pop
cmp
inc
cltd
mov
mov
pop
idivl
nop
fcoml
pop
push
sahf
xor
cmp
mov
xor
xor
mov
jl
sub
xor
test
stos
or
mov
xchg
jbe
test
or
or
mov
jo
loop
popf
repz
jbe
xor
sbb
push
movsb
push
push
mov
sarl
outsb
jb
cld
jmp
push
jg
mov
pop
divb
mul
sarb
test
mov
mov
pop
mov
add
nop
or
or
xor
test
mov
test
cltd
adc
adc
pop
push
mov
pop
lods
movsl
xor
xlat
jo
call
adc
out
test
negl
add
xor
ror
enter
mov
mov
hlt
inc
jge
je
scas
adc
xor
enter
adc
int
repnz
fistpll
mov
test
jnp
jne
outsl
adc
scas
fisubrl
fldenv
adc
lahf
mov
xchg
mov
xor
clc
sub
sbb
out
cld
mov
pop
ss
leave
add
lods
cmp
mov
int
jae
adc
outsb
cmp
test
rorl
in
jp
pop
inc
xchg
pusha
ja
mov
pusha
sub
ret
iret
mov
sub
outsb
xchg
pop
cmp
popf
pop
mov
dec
mov
inc
pop
push
add
mov
adc
sub
push
lds
pop
add
in
popa
mov
cld
pop
inc
shll
fisubs
jmp
lds
fisubrl
iret
ret
add
sub
mov
outsl
pop
mov
rolb
pop
les
xor
stc
cmpsb
sub
test
negb
test
cmp
loop
ljmp
jmp
cmp
mov
xor
popf
addb
rcrb
mov
test
mov
cltd
je
hlt
xchg
frstor
fcmovbe
mov
test
mov
fcoml
ds
bsr
sti
xlat
dec
adc
and
mov
rorl
das
cmpsl
xor
jl
xchg
nop
aas
out
out
cmp
enter
xor
idiv
sarl
xor
cs
inc
inc
unpcklps
mov
mov
cmp
loop
stos
mov
push
daa
imul
dec
mov
lods
fildl
mov
popa
movsl
xor
sbb
out
mov
mov
insl
ficomps
sub
dec
mov
jg
negl
xorb
out
jo
mov
cmp
out
cmpsb
in
in
lret
je
inc
pop
push
mov
cmp
push
adc
pop
mov
xchg
mov
lea
dec
cld
cmpsb
mov
mov
ja
repz
add
adc
mov
mov
cwtl
lods
insb
mov
hlt
push
aaa
cmp
jge
mov
adc
or
ja
or
lret
sub
inc
int3
jecxz
mov
sbb
int3
lock
cs
adc
xor
jecxz
add
leave
jnp
inc
inc
stc
mov
jne
fidivrs
loope
mov
push
cmpsl
sub
rcr
lods
xor
stos
xor
jmp
mov
xchg
cltd
lahf
mov
cmp
inc
ret
stos
rcll
cmp
or
aas
mov
mov
outsl
aaa
lods
test
idivb
fmuls
push
cmp
mov
pop
pop
testb
into
adc
xlat
pop
jl
enter
sub
cmp
call
cmp
roll
jge
xor
and
jp
mov
xlat
sbb
mov
xchg
arpl
xchg
test
enter
xchg
adc
insb
arpl
cs
addb
mov
sti
jecxz
popf
lods
mov
push
lds
inc
fs
movsb
ret
cs
xor
mov
fcompl
add
mov
popa
js
mov
push
and
rcrl
lods
idiv
lock
inc
out
dec
mov
neg
inc
cmp
mov
aas
shll
cmp
rol
test
mov
aad
into
ficoms
dec
aaa
xchg
cmp
ret
in
xchg
andb
subb
and
cmp
ret
mov
mov
pop
push
cmp
mov
out
and
fnstenv
std
ficomps
mov
cmp
stos
cmp
sti
push
or
inc
pop
popa
fcmovnu
lret
xlat
shll
fildll
pusha
mov
test
xor
or
cmp
xchg
sub
xchg
mov
jmp
mov
mov
stc
ficoms
inc
sahf
pop
out
and
mov
adc
push
lcall
je
icebp
xor
mov
or
mov
dec
cmp
mov
mov
xor
scas
jns
stos
stos
into
lds
xor
scas
iret
rcr
sarl
out
cltd
mov
scas
ret
xchg
out
pop
push
fistl
mov
repnz
ds
insl
fidivrs
dec
repnz
out
and
fildll
pop
cs
jecxz
js
push
mov
xchg
and
mov
je
jl
sub
mov
lods
xlat
stos
cmp
ficoml
or
jmp
xchg
sbb
sub
pop
cmpl
or
cmp
jb
xchg
jae
push
dec
jae
inc
rclb
adc
lahf
sub
ffreep
int3
scas
xlat
dec
dec
add
rcrl
daa
mov
ss
ds
mov
dec
idivl
xlat
cs
adc
ds
sti
pop
pop
lret
scas
mov
pop
je
jbe
add
sub
pop
sub
mov
jb
test
cs
jge
push
push
jge
imul
jl
das
aam
pop
add
sub
shlb
pop
icebp
jns
fidivl
movsb
pop
inc
test
pop
cmpl
das
loopne
mov
dec
xor
adc
dec
popa
lahf
pop
cmpsb
mov
mulb
jg
mov
mov
ss
push
mov
nop
mov
mov
test
lds
pop
faddl
fstpl
hlt
leave
add
cmp
dec
xchg
push
jge
rcr
and
mov
je
lcall
out
xor
cmp
cwtl
add
dec
addr16
pop
out
cmp
jb
movsl
xor
rorb
rclb
jle
mov
xchg
cmp
dec
or
stos
in
insl
lcall
loop
mov
cld
int3
fucomip
add
adc
pop
mov
shlb
stc
pop
cmp
pop
in
adc
aas
inc
jo
stc
cli
movsbl
addb
mov
ret
and
loopne
push
push
pusha
mov
jns
inc
pop
push
cmc
test
push
mov
inc
xchg
sub
dec
jp
into
adcb
xchg
jns
loope
pop
or
out
ret
lods
xor
aam
int
lock
jne
sub
mov
out
insl
add
loopne
insl
inc
xor
js
fs
lcall
xlat
dec
and
shl
ja
fcmove
jg
cltd
test
mov
cmpsl
mov
dec
xor
aam
pop
adc
jle
mov
mov
or
scas
and
stos
push
inc
lods
pop
lret
cmp
dec
cmp
pop
pop
setg
in
int3
and
adc
or
adc
jge
test
mov
mov
mov
cmp
stc
call
and
loopne
mov
mov
mov
sub
adc
out
ljmp
fidivs
mov
pop
arpl
cld
mov
ss
or
lahf
insl
test
jmp
aad
test
insb
cmp
mov
pop
out
test
mov
jg
xorb
mov
fnstcw
rolb
and
jbe
mov
sbb
mov
in
outsb
mov
rep
or
jnp
xchg
adc
lods
fidivl
sub
aas
mov
jecxz
in
test
mov
stc
stos
jecxz
inc
rcrl
out
cltd
adc
cmp
imul
jle
ror
loopw
mov
pusha
sub
rcll
inc
das
sub
mov
jge
inc
out
jae
lea
jns
cmp
xchg
imul
aam
lret
mov
in
ja
test
jp
pop
shll
ds
hlt
enter
jecxz
xor
pop
mov
dec
addr16
fmuls
jae
outsl
outsl
xchg
mov
xchg
lahf
add
movsb
mov
aad
pop
imul
cli
mov
sub
push
out
loope
mov
xchg
rcrb
mov
fcmovb
sub
ljmp
stc
out
scas
adc
loopne
inc
jnp
sub
jg
lods
popf
jg
ljmp
xchg
enter
dec
push
loop
mov
out
outsl
mov
mov
sbb
repnz
xchg
sub
aaa
in
fdivrs
add
sbb
lds
xchg
aad
test
cld
outsl
mov
push
xorb
mov
cmp
jg
jnp
adc
lods
cmp
cwtl
test
jle
cmpb
lret
push
mov
loopne
adc
xor
pushf
or
ja
aad
cmp
sub
jo
xchg
lahf
cli
sbb
pop
fnstsw
xor
add
add
into
xlat
mov
addr16
cmp
xchg
je
je
call
mov
mov
jecxz
adc
jmp
inc
inc
xchg
mov
test
mov
jecxz
mov
mov
cmp
js
xchg
adc
mov
xor
dec
outsb
mov
mov
mov
daa
xlat
jo,pt
add
mov
fisubrs
fwait
xchg
mov
pop
shlb
lret
int3
mov
sahf
mov
scas
loope
cltd
mov
sbb
pop
fwait
pop
shrl
jbe
xor
das
or
dec
and
xchg
sub
mov
mov
mov
mov
jg
mov
mov
int3
mov
sbbl
leave
jge
sub
out
mov
lods
mov
pop
in
insb
ret
jo
movsb
add
cmp
movl
adc
mov
push
cs
sub
pop
sti
ret
pop
mov
addr16
cmpsl
out
push
mov
inc
inc
xor
sub
mov
cli
sbbl
push
stos
test
cmp
daa
push
outsl
xchg
dec
sub
mov
fwait
mov
outsb
lahf
shll
test
push
lea
lahf
sub
jecxz
lcall
sub
jno
jg
sub
mov
sbb
push
and
pop
lods
subb
imul
stos
push
imul
aam
inc
outsb
inc
icebp
iret
xor
xor
xacquire
loope
pop
outsl
movb
int3
loop
xchg
stc
or
cmp
lret
mov
or
bound
dec
mov
inc
mov
mov
mov
mov
lret
add
adc
fwait
cmp
jo
scas
dec
jb
cld
pop
mov
in
ficomps
loop
int3
sbb
mov
push
enter
lea
stos
pop
test
cmpsb
imul
add
mov
cld
jae
ds
enter
adc
jbe
test
inc
mov
lods
ja
out
cmp
xor
or
repnz
cli
fwait
mov
in
fwait
jp
sbb
testl
add
push
sub
cmpsb
aaa
notb
add
js
mov
shrb
pop
ja
jns
xchg
jmp
daa
or
pop
mov
pop
negl
xchg
test
and
ss
mov
jo
loop
jnp,pt
cmp
add
mov
insb
pop
sbb
std
fs
arpl
push
das
in
xchg
mov
mov
mov
mov
inc
out
test
cmp
mov
xchg
cmc
cmp
cmp
pop
loopne
loopne
sbb
fildll
loop
mov
popf
mov
loopne
cmp
scas
mov
fnstsw
arpl
cltd
or
lcall
cld
cmp
test
and
aaa
or
xchg
test
jg,pt
xor
mov
mov
lods
pop
jns
sub
in
repnz
mov
rcll
mov
mov
out
movsl
aas
dec
or
cmp
inc
addr16
enter
mov
stos
aas
mov
aaa
jg
mov
leave
inc
and
mov
cmp
and
pusha
dec
mov
adc
pop
out
call
dec
inc
repz
imul
add
mov
cmp
decl
mov
mov
pop
inc
mov
das
jmp
or
push
fwait
scas
push
lods
dec
out
mov
xor
stos
mov
inc
pop
jo
mov
arpl
xor
pop
mov
jmp
add
ficoml
aaa
repz
fwait
test
stc
rol
outsl
imul
dec
jge
dec
ja
mov
sti
stos
inc
push
push
pop
insb
fbld
ds
cld
lods
cmp
xchg
ret
ret
jp
fdivrs
mov
mov
and
dec
fnstcw
and
xlat
mov
fldt
loope
ljmp
sub
stc
sbb
mov
loope
test
dec
cmp
scas
xor
jmp
js
add
aas
sbb
jmp
jns
push
xor
mov
mov
xor
out
outsl
nop
stos
and
mov
or
push
adc
dec
pop
lcall
loopne
rcrb
mov
gs
test
mov
cmpsl
push
sub
lea
inc
jno
hlt
lods
inc
imul
aas
adc
mov
mov
pop
fidivrs
sbb
jo
mov
xlat
mov
mov
mov
js
lcall
scas
xor
cmp
roll
xor
ret
test
cs
cs
imul
adc
fidivs
enter
mov
das
icebp
ss
mull
adc
cmp
jo
fst
ficompl
aaa
pop
sub
icebp
insl
sub
jge
inc
cmp
mov
scas
cmp
jno
xchg
push
test
xchg
mov
mov
push
rclb
addb
mov
mov
inc
iret
or
out
inc
inc
mov
mov
rolb
push
fcmove
mov
cmp
pop
pop
fidivl
xor
mov
cwtl
mov
aas
mov
dec
aas
outsl
stos
push
ja
sub
ss
cmpsb
mov
mov
stc
sub
dec
add
repnz
sar
idivl
pop
pop
dec
cmp
cmp
add
inc
cmp
shrb
pop
ljmp
pop
aas
or
mov
xchg
jae
sub
add
xor
out
vpsrld
xchg
xor
mov
sbb
jmp
lcall
push
mov
adc
loope
gs
xchg
xor
mov
mov
push
int3
mov
cmp
mov
fmulp
mov
xchg
mov
pushl
jg
pop
mov
ja
scas
shll
adc
lea
sub
imulb
testl
ja
pop
fistps
nop
test
push
cltd
push
push
scas
mov
es
pushf
cmp
outsb
aas
shrb
shll
testl
sarb
js
pop
xchg
lret
testl
stc
mov
mov
data16
pop
aam
mov
divps
addr16
and
mov
sbb
sbb
test
sahf
mov
add
lret
push
mov
mov
jge
subb
inc
push
push
jnp
mov
xor
outsb
xor
sub
in
jge
fadd
loope
rclb
movsl
jmp
insb
stos
loop
adc
xchg
stos
xchg
lods
adc
fstpl
in
loope
mov
xor
mov
sahf
out
js
test
imul
xor
popa
xchg
sti
mov
mov
test
insl
or
xor
push
stc
cwtl
add
pop
push
rcrb
jle
dec
mov
mov
scas
mov
jg
sub
mov
cmp
and
sub
repnz
shll
ss
das
insb
jecxz
pop
gs
pop
xchg
in
sub
xor
fsubrp
add
lods
cmp
ficompl
stos
mov
repz
mov
inc
imul
das
incb
mov
aas
scas
outsl
test
aaa
test
jl
inc
mov
stos
hlt
jo
jg
adc
adc
mov
xor
mov
fcoml
cmp
aad
test
xor
mov
sub
xlat
mov
jg
cmp
jle
xor
aas
je,pt
mov
lcall
stc
or
cld
cmp
mov
loope
mov
scas
mov
jmp
in
lods
dec
mov
mov
out
iret
cmp
mov
sub
mov
mov
mov
xchg
and
in
cmp
int3
mov
cmp
adc
xchg
and
xor
mov
mov
fcmove
dec
ss
or
js
and
mov
call
lcall
les
cli
xlat
stc
mov
adc
or
fdivl
aas
mov
adc
idivl
aam
std
jge
dec
sbb
sti
xor
loop
lcall
inc
adc
insl
adc
cwtl
dec
mov
xchg
mov
lods
or
lret
ds
out
adc
mov
cmp
adc
jb
iret
test
ficoml
ja
mov
sub
jnp
push
xor
es
push
rcl
scas
pop
shll
mov
cmc
testl
sub
jb
cmp
mov
xchg
or
in
push
or
inc
gs
mov
inc
outsb
mov
xchg
mov
loop
test
fistps
imul
cmp
mov
je
iret
rclb
mov
xchg
leave
mov
or
das
lods
jge
ficompl
ret
je
popf
cmp
aas
jae
subl
or
or
das
loopne
mov
jecxz
xor
cmp
xor
icebp
js
in
add
stos
out
cmp
mov
lods
push
cmp
push
mov
xor
loop
hlt
sub
jecxz
and
pop
push
mov
aad
xchg
mov
push
fcmovu
aaa
mov
sarb
loope
stos
fcompp
xchg
cmpsl
bound
pop
mov
add
jne
scas
ret
jp
arpl
repz
fists
mov
call
or
pop
lahf
and
inc
mov
aas
ja
adc
std
xchg
mov
in
xor
mov
call
inc
pop
fbstp
iret
fistpll
cli
leave
push
dec
inc
cmc
aas
pop
mov
mov
mov
subb
enter
add
mov
daa
loop
movsb
jg
pop
fiadds
insl
or
xorb
insb
cmp
xchg
insb
aaa
sub
rcll
fcmove
fildl
sub
out
shrb
xchg
stc
mov
enter
xchg
add
mov
cmp
daa
lods
ds
xchg
out
or
jp
ret
and
arpl
mov
movsb
mov
dec
ja
add
xorl
test
movsb
lret
mov
divb
jge
and
in
mov
iret
mov
sarb
jl
insl
mov
sub
inc
xor
or
into
push
jp
or
xorb
adc
std
sub
push
fnstsw
cmp
in
pop
std
push
fisttpl
xor
imul
dec
mov
arpl
test
mov
cmpsl
aad
or
loop
mov
xor
mov
imul
cwtl
mov
push
jle
aam
pusha
stos
mov
add
sbb
inc
icebp
test
cmp
ss
xor
loope
push
mov
aas
outsl
pop
and
fs
sbb
jns
mov
cmpb
std
mov
lds
mov
ficomps
jno
push
and
sub
jl
cmpsl
adc
xor
push
gs
stc
inc
jo
cltd
repnz
movq
mov
jb
mov
jbe
sub
pop
cmp
imul
dec
js
jle
xchg
add
pop
inc
lds
out
rcrb
sbb
popf
aas
xchg
pop
imulb
mov
push
test
loope
xchg
ret
adc
mov
gs
lret
cld
jno
daa
sub
shlb
dec
sbb
popf
test
sbb
loopne
data16
imul
in
pop
daa
inc
rcll
jne
mov
pop
add
push
mov
jp
add
jge
sub
jecxz
lea
xchg
mov
shlb
aad
mov
jecxz
inc
xor
xchg
adc
lcall
xor
test
sbb
jp
inc
stos
std
fimuls
dec
pushf
pop
out
adc
std
fldenv
pop
fcomip
lods
std
mov
xchg
and
inc
mov
enter
jb
shrl
push
lds
pop
mov
xor
jb
arpl
cmp
xchg
mov
xor
adc
popa
and
fldl
fisubs
negl
test
mov
cvttps2pi
scas
lods
es
rcrl
mov
mov
lret
mov
jge
stos
ror
mov
arpl
lods
mov
or
cmpsb
jno
mov
in
lahf
movsl
push
adc
mov
xor
adc
mov
fdivr
ja
rorl
or
jb
mov
jae
inc
lds
adc
rclb
mov
int
call
or
dec
lods
add
cmp
jns
mov
repnz
xor
adc
xor
leave
mov
test
jnp
outsl
mov
vmovhps
mov
mov
out
mov
nop
ljmp
fsubrl
mov
cmp
mov
ss
jns
inc
push
lret
aam
pop
adc
mov
aam
mov
lods
pop
jno
dec
xlat
lea
enter
pop
mov
push
stos
icebp
fwait
and
ror
cmp
in
scas
mov
insb
xor
stos
jl
shrb
mov
mov
mov
mov
fs
das
mov
stos
add
scas
pop
xorb
xchg
add
pop
jle,pt
out
lcall
lods
cmp
stos
mov
jo
sti
xor
stos
leave
mov
sarb
xchg
pop
imul
mov
mov
pop
and
adc
cld
dec
push
popf
sbb
jle
idivb
cs
cwtl
das
mov
inc
mov
addr16
fwait
rorb
mov
sub
add
ficompl
aaa
and
sahf
xor
lock
out
mov
adc
add
mov
call
add
ljmp
mov
jmp
adc
mov
cmp
xor
sub
xor
aam
push
scas
jg
jl
pop
insl
test
cmpl
xchg
rcrb
repnz
push
dec
push
stos
cmp
out
fcomp
mov
popf
mov
leave
enter
dec
cmp
insb
fildl
jecxz
in
pop
jnp
out
xor
and
xor
cmpsl
adc
or
push
xor
ds
imul
leave
mov
mov
xlat
push
push
mov
inc
add
xlat
imul
jge
xchg
cmp
daa
pop
cmp
fdivr
repz
sbb
ljmp
popa
scas
and
jns
stos
mov
xchg
fstps
lds
inc
inc
xchg
icebp
out
cwtl
addr16
pusha
ja
mov
or
mov
test
jb
inc
mov
mov
mov
int
mov
decl
fcomp
test
push
xchg
stos
insl
insb
lret
stos
popf
arpl
push
jle
mov
in
sar
mov
aad
cmpsb
fisubl
js
fisubrs
sahf
int3
push
mov
mov
in
adc
pop
push
cmpsb
jns
sbb
rorl
cwtl
mov
mov
pop
pop
dec
test
out
mov
dec
dec
mov
mov
mov
rcll
add
or
mov
pop
mov
lods
out
jae
adc
mov
mov
cmpsl
xor
and
sub
mov
fstpl
rolb
cmp
or
mov
jo
cmp
xor
je
ljmp
subb
adc
in
mov
xor
or
sub
stc
inc
rorb
xor
or
xor
imul
lds
mov
jl
negl
out
mov
addr16
outsb
mov
mov
mov
mov
mov
inc
cmp
mov
int
addr16
xor
dec
adc
rolb
pop
popf
cli
pop
int
add
mov
int3
sbb
rcr
mov
xor
inc
nop
dec
lret
fsub
adc
inc
clc
xor
adc
dec
mov
xchg
int
or
cli
sub
lds
xchg
push
fdivr
jb
fmul
cmpb
ss
rorl
add
push
stc
adc
jge
movsl
cmc
fdivrs
mov
shlb
fdivrs
jg
pop
jp
stos
int
ds
push
movsl
xchg
or
pop
mov
scas
xor
out
fiadds
sbb
mov
pusha
cmp
push
jp,pt
xor
pop
gs
jl
mov
adc
jg
and
pushf
sub
and
push
mov
test
rol
xchg
movsb
lods
repnz
stos
cli
sbb
xor
mov
aam
ss
orl
xchg
jnp
xor
clc
arpl
dec
test
bound
mov
loop
push
cmp
pop
aam
out
mov
mov
lcall
rolb
icebp
addr16
iret
pop
pop
enter
test
pop
ljmp
jae
xchg
mov
mov
inc
sub
loope
push
inc
adc
mov
xchg
out
jns
adcl
pop
xchg
xchg
outsl
xor
cld
mov
or
mov
jp
pop
in
lds
mov
sahf
mov
cwtl
adc
popa
mov
push
or
das
adc
test
pop
push
push
imul
inc
push
mov
into
ds
imul
inc
cmp
cwtl
addl
ljmp
jge
xor
out
shlb
fsub
pop
into
jp
out
adcl
mov
or
outsl
xor
aas
outsb
mov
ss
mov
mov
jp
xchg
testl
std
test
and
xchg
xchg
adc
xor
frstor
filds
test
fnstsw
inc
fldt
andb
jp
rol
dec
jb
mov
xchg
push
fdivr
mov
iret
popf
mov
cmp
mov
idivb
mov
arpl
out
xor
xchg
dec
push
sub
lods
dec
mov
leave
andl
fisubrl
jb,pn
aas
inc
push
scas
mov
movsl
mov
cli
pop
or
pop
leave
mov
out
sbb
ret
push
stos
cs
inc
aas
mov
adc
jb
sbb
cmp
cli
pop
mov
lret
cmp
xor
popa
push
and
adc
and
fists
sbb
mov
ss
outsb
leave
outsl
stos
adc
mov
add
dec
int3
push
pop
aas
cwtl
cltd
ret
lcall
pop
and
sub
xchg
sub
inc
mov
jmp
shll
mov
mov
fstps
sbb
cmc
push
mov
pop
imul
lods
jo
xor
mov
shrl
popf
adc
imul
lods
sub
ficompl
in
mov
icebp
sub
mov
icebp
std
inc
pop
pop
adc
jno
jb
loop
bound
loop
jb
aas
jge
aas
loopne
mov
xchg
mov
xchg
xor
adc
sahf
fldl
jg
data16
iret
mov
sub
stos
sub
sub
cmp
inc
pop
adc
pop
stos
in
je
mov
rorl
std
adc
jno
inc
xlat
popf
jnp
arpl
push
decl
test
xor
inc
aad
pop
push
inc
aaa
adc
inc
mov
fdiv
cltd
shll
iret
fmul
scas
mov
ret
aas
mov
cli
cmpsl
pop
lods
cmp
xchg
leave
adc
popa
repz
loope
sbb
aas
jmp
pop
das
jmp
lods
mov
repnz
fcmovu
and
into
mov
xchg
inc
clc
call
mov
add
sahf
ret
pushf
out
add
mov
stc
inc
icebp
cmc
inc
mov
in
add
call
adc
aas
mov
lods
xor
insl
insl
lds
xor
cmpsl
imul
lods
pop
stc
outsb
pop
jge
scas
mov
out
jne
cli
or
pusha
mov
into
popf
jo
dec
jne
cs
pop
ror
decl
mov
int
cmp
test
jecxz
xchg
mov
jo
push
in
movsl
inc
xchg
popf
xor
jg
pop
imul
shlb
xchg
divl
lods
std
ret
rorl
pop
mov
dec
and
jp
mov
pop
xor
or
mov
je
xchg
in
out
cmp
lods
sahf
into
adc
inc
mov
mov
pop
xchg
daa
jl
movsl
scas
std
fucomip
adc
divb
xchg
cli
cmp
inc
aas
jb
mov
out
xor
jae
lret
sbb
in
xor
or
push
jg
hlt
lds
popa
xor
jecxz
jne
movsb
dec
lds
lock
push
mov
gs
js
addr16
mov
enter
push
repnz
dec
pop
sub
mov
mov
mov
xorl
into
mov
test
cmovg
jmp
dec
shr
dec
movsb
push
sub
cld
mov
pop
inc
or
movb
adc
mov
out
in
cwtl
test
mov
movsl
or
shlb
sbb
xor
adc
test
iret
mov
jb
xchg
sti
push
lret
push
out
repz
data16
mov
shrb
push
jo
cwtl
int3
cli
sbb
mov
fisubrs
ljmp
mov
ja
insl
pop
add
jmp
ret
push
dec
and
jg
or
subb
stos
or
pop
and
aas
mov
addb
clc
xchg
xor
and
push
scas
es
jge
sarl
int3
xchg
sub
fxrstor
pop
sahf
cld
xor
jae
jo
push
xlat
mov
out
add
xor
call
mov
test
xchg
xor
xchg
lcall
aad
push
filds
mov
mov
add
mov
jp
push
mov
lahf
jae
shlb
xchg
xchg
popf
imul
mov
aas
ret
inc
jns
decl
pop
mov
lahf
fisttpl
das
in
ja
inc
pop
sahf
push
jge
xor
std
movsl
cld
xor
roll
loope
pop
insb
jnp
out
int
inc
xchg
xlat
aas
jp
incb
iret
sarb
mov
fmull
sbb
mov
jb
mov
mov
xorb
inc
pop
fldt
mov
in
xor
addr16
sbb
xchg
std
sahf
imul
mov
mov
test
bound
inc
lret
pop
test
test
cli
insb
xchg
fdivs
pop
and
lds
jne
or
add
ds
push
push
cltd
or
xor
insl
jo
fdiv
pop
pop
lock
sub
adc
lods
lock
adcl
scas
xchg
rcr
into
incb
lods
mov
ss
loop
out
cmp
inc
loope
dec
in
fistps
mov
push
sbb
inc
jns
jmp
cmp
clc
jge
fcomi
sarb
xchg
jbe
shll
jge
fmul
stos
fstpt
cmp
cltd
xchg
mov
rorl
jg
adc
mov
stos
and
insb
fcoms
arpl
ds
jb
aas
push
mov
dec
lcall
mov
pop
mov
mov
aas
imul
inc
xchg
lret
imul
stos
inc
flds
mov
cltd
mov
fldl
out
cmp
notl
push
mov
test
push
xchg
sub
mov
xor
loopne
pop
test
push
xchg
mov
hlt
ret
pop
lods
cmp
ja
lret
inc
lret
cmc
icebp
mov
test
mov
lahf
pop
fs
out
stc
arpl
mov
inc
cmp
aas
leave
imul
cld
fxch
inc
mov
pop
test
xchg
xchg
push
mov
das
mov
in
xor
out
aas
dec
add
sbbb
movsb
cs
cmp
jae
mov
xor
in
repz
aad
xlat
add
pop
dec
mov
xchg
pop
outsl
aad
fidivrl
mov
imul
mov
ljmp
imul
fnstcw
sub
adc
fdiv
mov
and
clc
imul
fbstp
sbb
stos
jns
mov
les
mov
push
dec
pusha
test
mov
imul
sub
sub
mov
mov
call
ss
scas
sub
gs
pop
aam
imul
push
jno
pop
jl
pop
cld
cmp
aaa
sbb
roll
jne
cli
scas
sub
andb
adc
push
sbb
xor
push
jae
fistpll
add
hlt
mov
movsl
inc
sub
lcall
ja
push
jg
stos
or
mov
notl
loop
lahf
adc
mov
mov
js
dec
ss
fnstenv
lret
fildl
fbld
test
xchg
pop
adc
adc
std
mov
pop
movsl
lahf
leave
push
push
insb
fldcw
push
mov
bnd
cmp
pop
cli
test
lret
mov
pop
fisubs
sahf
mov
inc
lods
outsl
cltd
aad
inc
arpl
imul
mov
lock
cld
cli
xor
into
add
fstps
adc
pop
imulb
jmp
or
xchg
mov
scas
stc
and
clc
sti
repz
and
fdivp
push
and
mov
out
popf
lds
loop
xor
loope
aas
stos
out
fists
dec
pop
cmp
push
cli
loopne
fbstp
rcll
stos
xchg
mov
lods
xor
daa
cmp
mov
mov
cmpsl
jg
cmpb
movsl
jbe
jns
nop
inc
xchg
leave
mov
outsb
sahf
shll
jbe
call
sub
daa
mov
pop
lods
cltd
adc
lods
adc
lahf
pop
enter
mov
test
adc
stos
js
nop
or
call
adc
xor
pushl
mov
mov
int3
pop
cmp
adc
imul
inc
push
jae
or
sbb
stos
pop
dec
mov
incl
mov
jo
jbe
mov
into
sub
mov
inc
mov
lahf
jmp
jle
add
mov
repnz
or
aam
xor
into
jo
xor
xor
addl
adc
mov
sbb
popa
cmp
sub
jl
mov
pop
arpl
hlt
jns
insb
adc
cltd
jle
ret
out
jl
stc
jl
loopne
xchg
insb
pop
aaa
add
pop
inc
movsb
lods
mov
daa
daa
fdivs
sbb
xchg
fidivl
mov
add
ja
pop
jno
lret
mov
fwait
loopne
add
inc
pop
sub
xchg
mov
jae
inc
pop
or
jge
lea
jbe
fs
pop
les
pop
outsb
mov
push
iret
aam
or
out
cmp
mov
test
and
mov
cmpl
or
push
jmp
aas
mov
loopne
jg
jge
jo
std
lods
test
push
ficomps
jo
sbb
cli
sub
and
leave
aad
mov
push
inc
out
cmp
cs
leave
jle
cwtl
stos
call
xchg
jge
or
popa
sbb
loop
or
xchg
push
pop
jle
cmpsl
jo
popa
lret
push
pop
in
mov
mov
fucom
or
mov
jge
inc
iret
fsts
pop
mov
fildll
add
aas
sti
ljmp
inc
scas
mov
rorb
nop
mov
imul
xchg
mov
movsb
fcompl
cmp
push
mov
imul
es
inc
adc
neg
leave
mov
mov
push
loopne
insl
je
dec
inc
and
fcmovne
jg
mov
dec
imull
movsb
shll
iret
mov
bnd
je
mov
je
jo
mov
inc
mov
cmp
faddp
stc
jns
das
jno
xchg
aas
out
arpl
jge
xor
dec
leave
xor
into
inc
int3
pop
add
shlb
iret
scas
mov
pop
rorb
insb
in
inc
or
mov
pop
xchg
imul
mov
cmp
mov
pop
cli
and
outsl
xchg
jae
mov
pop
push
scas
mov
mov
mov
jg
pop
fwait
popf
mov
lahf
dec
popf
sub
popl
bound
pop
popa
int3
or
addb
aad
in
jmp
les
xchg
xor
adc
scas
cltd
cmp
mov
mov
adc
jg
movups
popf
mov
test
test
icebp
loopne
add
jecxz
mov
jge
and
rclb
aam
push
cli
lahf
ja
pop
stos
mov
or
ja
and
je
jmp
ret
mul
fcmove
or
or
adc
fists
fnstcw
iret
xchg
mov
pop
cld
adc
jns
mov
cmp
jns
pop
repnz
jnp
jae
sbb
xchg
aam
pop
xor
pop
inc
jnp
imul
sub
adc
ja
clc
pop
shl
fsubr
lahf
loop
call
shlb
je
pop
mov
mov
sti
add
fnstsw
cmp
push
sub
lods
push
in
cmp
fwait
xor
mov
rorl
bnd
cwtl
mov
xchg
pop
repz
xor
addr16
sub
ror
and
jge
test
mov
leave
jns
cmp
pop
push
inc
test
cld
outsl
pop
push
insl
mov
xor
negb
jns
jge
in
insl
mov
sub
sbb
icebp
insb
and
sbb
out
xchg
and
cmp
cli
mov
mov
stc
decl
xor
xchg
dec
adc
and
fwait
les
pop
mov
repz
xor
adc
stc
fnstenv
test
enter
test
movl
mov
addr16
adc
mov
test
inc
fistl
lds
test
mov
lods
in
inc
sbb
fwait
xchg
daa
jo
mov
jge
jmp
xchg
mov
cmp
jne
sub
mov
cmp
ds
cmp
jnp
out
xchg
cmp
xor
xor
imul
pop
or
adc
push
loope
loope
xor
mov
dec
or
je
add
pop
aas
dec
inc
imul
mov
inc
mov
sbb
push
cmp
adc
adc
mov
xor
or
ljmp
push
scas
mov
ja
push
cmp
inc
enter
test
jp
add
mov
or
lods
cmp
mov
addr16
shll
mov
xor
aad
xchg
push
test
pop
arpl
outsb
mov
cmp
and
cmp
insb
ret
xor
inc
aam
cmp
sarb
sbb
aas
pop
xchg
aaa
test
mov
cmp
mov
adc
mov
or
dec
mov
fistpll
pushf
cld
test
loopne
mov
xor
lds
fidivrs
cmpsb
test
inc
daa
test
adc
enter
push
mov
mov
stos
inc
js
fisttps
mov
fadd
popa
js
ds
enter
loopne
sbb
adc
pop
ficoms
or
in
push
jbe
xor
mov
iret
test
pop
enter
scas
lods
pop
sahf
mov
fildl
jge
jmp
cmpsl
push
imul
scas
adc
sub
insb
mov
xor
insl
add
jg
lods
cmp
inc
cmp
mov
pop
in
cld
push
or
xchg
push
shrl
sarl
out
sbb
insb
cmp
jnp
push
in
mov
cli
mov
mov
jle
jno
mov
jecxz
mov
in
and
or
sub
jno
lret
dec
cltd
and
inc
lods
add
or
jno
lods
test
adc
xchg
jecxz
pop
mov
mov
mov
std
lods
mov
mov
fsts
sahf
outsb
mov
imul
in
int
inc
mov
cli
bound
test
sbb
and
idivl
leave
lods
ja
enter
test
vucomisd
xchg
cmp
test
add
fsubs
icebp
jmp
cmp
jmp
jb
jno
push
jns
cltd
shlb
test
cmp
daa
lods
dec
adc
mov
sub
lret
dec
imul
stos
mov
mov
shlb
jbe
push
xchg
cltd
or
pop
or
mov
mov
mov
mov
mov
es
scas
orl
sub
adc
mov
adc
or
xchg
dec
xor
mov
adc
mov
stos
in
mov
sub
mov
pop
addb
add
fwait
scas
lods
mov
in
xor
dec
inc
fdivr
add
mov
or
cmp
mov
daa
sub
add
xchg
inc
lods
int
lods
jnp
jb,pt
lcall
lods
mov
lahf
out
jb
lret
mov
mov
test
cltd
or
mov
inc
bound
mov
cs
scas
cmp
pop
cs
rcl
popl
cs
fstl
popa
scas
mov
cmp
pop
or
mov
pop
out
out
adc
stos
dec
mov
out
and
fsubs
pusha
jae
stc
mov
jle
mov
dec
sub
and
xor
xchg
xchg
jne
push
int
test
idivl
inc
mov
lock
cmp
mov
lcall
dec
fst
sbbl
fidivrs
sahf
divps
dec
in
xchg
jns
adcb
int
scas
cld
xor
addr16
fsub
lds
xlat
mov
dec
adc
iret
inc
jle
push
lret
mov
jp
adc
fwait
orb
cmp
stos
adc
xchg
ss
aaa
xchg
icebp
mov
int
adc
xchg
lock
test
stos
jns
fsubs
popa
or
mov
jae
mov
cmp
jbe
mov
pop
divb
ficoml
adc
fsts
mov
enter
inc
into
fwait
in
pop
jp
loop
lea
cmp
cmp
mov
xchg
mov
ret
cmp
fldt
mov
pop
fidivs
js
sbb
inc
inc
enter
xchg
inc
shlb
test
cli
mov
insb
add
dec
rcll
or
mov
pop
cmp
data16
pushf
mov
or
adc
mov
mov
mov
lods
out
test
out
jle
xor
mov
inc
lods
lds
test
sub
push
mov
addr16
decb
dec
mov
mov
pop
mov
jmp
add
cmp
push
jb
stos
mov
test
inc
cmp
push
lea
xlat
loop
sbbl
int3
enter
dec
in
imul
loope
loope
xor
xchg
add
pop
jno
and
repnz
pop
aad
shlb
subb
xchg
cmp
mov
rcll
sbb
ljmp
lret
mov
lods
inc
stos
cmp
pop
jl
cmp
xchg
mov
cs
movsl
xchg
mov
cltd
insb
push
jnp
mov
xor
das
shl
fwait
mov
jecxz
insb
std
or
imul
or
jp
imul
sub
push
xchg
pop
ja
stos
xchg
sti
mov
iret
inc
clc
cmp
and
push
or
jge
and
mov
inc
sbb
stos
fld
fldt
pop
sbb
rolb
mov
aas
mov
mov
or
xchg
movsb
movsb
dec
mov
adcl
xor
dec
insb
stc
clc
popf
jbe
inc
outsb
hlt
lea
push
dec
insl
mov
and
xchg
jo
sub
scas
dec
je
movsb
incb
lahf
shl
mov
mov
enter
adc
jne
xchg
xor
xor
pop
rcr
pop
lret
test
mov
cmpsl
in
push
jg
bound
test
iret
inc
loop
lret
mov
mov
cmp
mov
jecxz
mov
push
out
pop
dec
xchg
dec
stos
push
jg
mov
ja
pop
rcll
add
mov
mov
xor
cld
ss
mov
sbb
insl
jne
pmaxsw
mov
fists
xlat
or
sub
data16
mov
loop
cmp
popa
insb
addb
mov
cmpsb
sbb
lods
out
or
jo
sub
or
outsl
mov
mov
mov
leave
jbe
lcall
insl
aad
pop
inc
dec
rcll
movsl
xor
lock
lock
fcoml
call
adc
mov
cmp
repnz
ljmp
xchg
xchg
pop
notb
mov
mov
jbe
fbstp
in
sbb
test
test
jae
jmp
jae
sub
cli
test
mov
nop
mov
adc
cmp
mov
scas
nop
rcr
loope
cmpsl
mov
mov
mov
xor
rcrb
icebp
addr16
mov
add
sbbb
mov
les
adc
movsl
xor
insb
or
jbe
jg
cmp
lcall
jge
ret
inc
ret
mov
sub
mov
mov
stc
push
xchg
adc
or
out
sbb
loop
pop
mov
adc
mov
dec
std
test
xorl
repz
pop
sub
ja
or
subb
xchg
push
sbb
xor
pop
hlt
pop
xor
lcall
fwait
mov
jle
adc
test
xchg
int3
jnp
mov
mov
xor
in
ror
repnz
stos
test
push
out
xchg
xor
jno
mov
push
out
jbe
leave
and
lret
mov
jge
cmp
insl
pop
adc
xor
jb
aam
mov
jo
inc
aaa
scas
stc
mov
mov
jge
imul
pop
shll
cmc
adc
aam
stos
cmp
pop
jns
pop
ret
lahf
ret
nop
or
mov
sahf
ret
dec
filds
scas
pop
mov
mov
sbb
stc
adc
ja
call
movsl
or
mov
mov
and
stc
nop
push
xorl
or
xchg
cld
fmuls
in
jne
dec
nop
pop
stos
popf
cmpb
jp
mov
sbb
add
popa
cmpl
test
cmp
xchg
push
jp
lret
mov
mov
mov
in
mov
ret
divl
and
cmpl
cmp
in
stc
pop
dec
repz
ja
xchg
lds
repz
scas
add
jb
test
adc
pcmpeqb
in
pop
add
fcomps
pop
scas
movsl
sub
pop
das
mov
ja
jne
mov
cwtl
lods
inc
cmp
ret
jecxz
test
into
retw
mov
das
pop
lret
les
and
mov
cmp
lahf
iret
inc
adc
sbb
xchg
jge
adc
jnp
leave
out
jnp
fistpll
mov
ja
imul
ljmp
outsb
ja
rolb
in
cmp
bnd
rorb
mov
shll
or
xor
dec
push
aaa
in
test
mov
adc
in
mov
mov
jnp
dec
iret
jb
mov
test
adc
push
fsts
xor
mov
mov
xor
cmp
fidivrs
adc
adcb
mov
je
sub
adc
jae
xor
xchg
je
data16
dec
xchg
ljmp
ja
outsl
mov
pop
enter
inc
sbb
mov
jmp
adc
test
and
push
and
nop
jl
jbe
loopne
test
mov
roll
sub
movsl
mov
jg
mov
sbb
push
sahf
test
cmp
jnp
xor
jge
cmp
or
xor
xchg
aas
xchg
xor
idivb
xorl
adc
mov
movsb
aam
or
aas
mov
js
test
incl
aaa
jne
and
sbb
je
adc
pop
jo
xchg
pop
sbb
fsincos
cs
les
cmpl
mov
add
adc
stos
out
mov
sbb
mov
jp
lods
aam
xchg
stos
sub
out
jae
insb
movsl
adc
clc
jl
outsl
insl
mov
jp
dec
inc
mov
jb
movsl
test
and
insb
lret
scas
jo
and
dec
or
mov
jnp
dec
std
sub
fidivs
fstpt
int
push
mov
mov
jae
mov
mov
adc
scas
lods
mov
bound
sub
aas
fcoms
mov
pop
adc
add
repz
push
shlb
mov
call
out
mov
mov
imul
sub
cld
adc
cmp
inc
fnstcw
ret
push
aas
imul
test
insb
pop
push
pop
stos
push
push
xor
out
mulb
add
je
ret
stos
inc
adcb
xchg
lea
inc
test
mov
xor
pop
sahf
movsb
mov
ficompl
xchg
jge
mov
int
pop
loope
aad
cld
fadd
mov
ficomps
fidivs
sbbb
insl
or
adc
xor
repnz
pand
mov
fldenv
dec
mov
inc
rolb
cmp
mov
sarb
aaa
jle
orl
jge
and
jp
orl
cmp
sbb
notl
scas
movsb
repnz
xor
dec
jns,pn
jo
ficomps
push
cmp
aas
cli
xor
push
cwtl
jmp
xchg
data16
test
repnz
inc
cld
or
mov
and
pop
jp
fs
xchg
outsb
fisubrl
shl
add
out
imull
leave
fstpt
pop
scas
fisubrl
ss
dec
mov
xor
sbb
je
sub
pop
mov
mov
int3
inc
adc
mov
xor
stc
das
frstor
adc
cmp
adc
sbb
cmp
ss
imull
mov
imulb
xchg
test
daa
xor
cmp
mov
xchg
subb
adc
push
jb
ljmp
icebp
testb
cmp
adc
push
fs
sahf
test
mov
or
adcb
adc
xor
mov
xlat
pop
xchg
jno
pminsw
pop
cltd
lock
enter
mov
loop
lea
jp
out
mov
add
pop
sbb
mov
xor
mov
pusha
leave
insb
mov
xchg
dec
adc
push
inc
mov
into
fstpl
cmp
jo
dec
aas
pop
arpl
xor
fdivrl
daa
inc
sub
and
and
in
pop
or
pop
inc
and
clc
lock
ja
jae
xchg
mov
and
and
popl
dec
fwait
aad
nop
cltd
les
cmp
fdivl
jae
dec
mov
push
int3
ffreep
out
mov
push
insl
inc
test
fcomi
xor
add
movsb
xor
movsl
lahf
mov
out
lock
jle
adc
loope
pop
in
rcll
dec
imul
stos
cmp
jnp
pop
cmc
inc
mov
jae
inc
mov
mov
mov
imul
inc
mov
jae
jecxz
sti
push
jo
loop
loop
test
cltd
cltd
iret
dec
outsl
mov
enter
push
sahf
lods
ss
mov
fidivl
or
mov
adc
cld
dec
fiadds
mov
int
insb
pop
out
ljmp
xchg
adc
mov
test
push
filds
pop
insl
pop
mov
inc
out
push
add
mov
xchg
add
fists
fcoml
in
fwait
mov
aam
xchg
xchg
test
jno
int
push
or
and
jns
int
test
ss
loope
cmp
scas
xor
push
jae
pop
xor
xchg
jecxz
sub
fstpl
shl
fpatan
aas
or
pop
cmc
pop
and
leave
mov
shll
cmp
add
sarb
stos
mov
das
sub
mov
jae
jnp
push
pusha
idivl
jp
mov
dec
cmovg
jg
mov
xor
ficoms
test
repz
push
subb
aas
xchg
jns
add
and
mov
mov
cmp
into
mov
std
int3
pushfw
imul
pop
jbe
mov
loope
inc
mov
test
mov
xor
jecxz
cmp
ret
pop
imul
cld
aas
xchg
cmp
xor
cmp
inc
in
xchg
movsl
xchg
lahf
fs
fildl
pop
pop
cmc
aam
or
mov
shrb
mov
xlat
nop
mov
mov
fisttps
fnsetpm(287
ja
jle
push
mov
pop
mov
jne
jg
aas
jns
pop
fstps
jge
fnstcw
pop
mov
add
mov
sbb
mov
cmp
sbb
xchg
xor
sbb
dec
int
repz
jo
jle
mov
ja
xor
inc
cpuid
mov
pop
sub
xchg
xor
mov
xor
mov
push
pop
in
jnp
sbb
inc
aad
dec
lods
dec
sub
stos
inc
test
imul
xor
sbb
mov
scas
push
sbb
xor
rcrl
inc
pop
inc
jae
ja
cmp
test
jl
les
or
xchg
fldcw
jno
jb
jo
in
inc
pop
sbb
mov
aam
jb
les
mov
ja
mov
ret
adc
adc
stos
movsl
dec
clc
inc
xor
mov
test
mov
test
cmpsb
ljmp
es
xchg
rorl
push
test
mov
fistl
xor
out
je
lods
pop
outsl
mov
cwtl
sub
inc
addb
mov
fbld
or
bnd
jne
cmp
push
pop
sub
adc
add
cmp
mov
dec
rcl
in
pop
int3
mov
xchg
lods
loop,pn
repz
imul
xchg
mov
xchg
jne
jns
sbb
mov
rcrb
shlb
mov
int3
mov
cli
mull
mov
xor
ret
orl
jl
sub
ss
cmp
stos
lds
pusha
sub
fisttpll
repnz
stos
out
lea
outsb
adc
jle
sbb
cmp
mov
stc
mov
std
push
jl
jg
adc
inc
lods
scas
sub
push
mov
outsl
stos
mov
popf
loope
add
test
stos
jmp
mov
pop
jg
sbb
dec
cmp
jle
push
adc
mov
loope
inc
and
adc
xchg
leave
lods
nop
mov
hlt
jp
jo
inc
fsubrl
sbb
inc
pop
xchg
cmp
aas
mov
subl
push
fdivs
imul
inc
cli
sbb
mov
movsl
dec
ljmp
test
inc
repz
lret
jnp
cmpsb
fucomi
mov
cmp
mov
mov
xchg
js
inc
scas
jb
jo
pop
inc
lds
adc
mov
pop
adc
mov
xor
enter
jp
fsubrp
add
test
sub
dec
das
test
rep
add
fbstp
mov
xchg
jmp
imulb
cld
bound
mov
and
ficomps
ljmp
out
mov
mov
int
or
jbe
stos
jle
call
mov
test
mov
mov
mov
aam
in
aas
mov
test
pop
lods
jmp
in
ljmp
into
mov
jne
jbe
mov
jae
mov
lds
cmp
scas
mov
call
lods
mov
sbb
test
ret
fcoms
shll
jns
scas
add
cmp
ret
pop
rorl
enter
xor
xor
add
mov
adc
sub
dec
mov
xchg
mov
or
leave
stos
mov
mov
stos
fsubr
test
push
andb
mov
dec
fwait
test
movsl
aaa
repz
enter
shll
das
jnp
shll
pop
fcomi
int
lea
or
mov
sub
push
jnp
xor
scas
call
xor
mov
sub
mov
pop
mov
sub
mov
cmpxchg
ret
mov
inc
mov
xchg
cmp
fmull
ret
mov
mov
xchg
jle
jp
aaa
jb
mov
jge
jl
jle
movsb
test
ss
testl
fstpt
mov
mov
ret
or
aaa
test
xlat
mov
jmp
pop
ret
mov
inc
aaa
int3
sub
dec
fnstenv
mov
daa
sub
leave
test
loop
je
lahf
pop
fcomi
push
mov
inc
add
fbld
je
dec
sahf
adc
cmp
pop
lret
leave
mov
jae
imul
fstps
jecxz
bound
stos
mov
mov
jg
mov
xor
mov
icebp
fcomi
add
flds
pop
aaa
addr16
xor
xor
mov
aas
inc
stos
aam
xchg
test
popa
cmp
lcall
ljmp
sti
jno
das
cltd
adc
jle
jmp
pop
cmc
inc
sub
sub
xchg
imul
iret
mov
movsb
jp
lods
inc
cltd
cs
lods
je
dec
in
lahf
jns
sub
cmp
jge
ljmp
push
xchg
jnp
jo
or
mov
lahf
jns
dec
test
inc
aad
scas
sbb
lds
fldcw
sbb
subl
out
lret
pop
in
fisubl
xchg
mov
pusha
ret
inc
stos
cld
dec
mov
jne
lahf
dec
out
jp
sub
cli
push
cmc
jae
repz
in
fbstp
fildll
int
mov
std
iret
adc
js
shl
fs
lock
cmpsl
sbb
jg
aaa
iret
push
jnp
dec
xor
cmp
aam
dec
jnp
mov
xlat
jle
int
ja
fcomps
ljmp
je
mov
lods
mov
mov
je
mov
adc
xchg
mov
jo
push
scas
pop
jg
loopne
rcrb
fisttpll
lods
pop
loope
arpl
adc
mov
or
mov
test
repnz
and
mov
or
out
orb
mov
jl
add
xor
test
fdivrp
cmpl
mov
xchg
es
push
jne
mov
mov
int3
fstps
mov
push
pop
out
imul
dec
lret
pop
out
xor
sti
push
inc
popa
ss
test
outsl
aas
dec
or
push
fsubr
mov
outsb
lods
lea
xchg
mov
xor
xor
das
mov
nop
and
in
mov
subb
mov
scas
dec
cmpsb
xchg
jg
psrld
popf
inc
jb
mov
aas
loop
inc
or
mov
and
stc
adc
jo
push
aam
pop
mov
insb
jle
mov
add
fcmovnb
xor
xor
in
loope
dec
loop
rcrl
movsl
jp
pushf
or
outsb
sub
mov
inc
xchg
xchg
or
stos
inc
nop
jp,pt
or
inc
fstpl
jae
cmp
cmpsb
loope
pushf
push
pop
fmull
fcomp
pop
jbe
pop
aad
push
loop
mov
pop
xchg
mov
test
push
popf
jg
ret
scas
fimull
gs
dec
ret
mov
cli
and
push
xor
nop
or
dec
ror
cmp
jg
hlt
stos
ja
fmulp
into
jmp
push
and
test
mov
lahf
addr16
in
cmp
lea
lods
add
adc
in
movsl
mov
xor
test
add
pop
dec
icebp
mov
adc
shll
fildl
sub
in
inc
sub
adc
pop
jl
push
mov
pop
adc
popf
xchg
xchg
sub
andb
shll
sarb
or
loopne
ret
sbb
sahf
add
out
xor
test
mov
jmp
cmpsb
adc
lret
mov
das
je
hlt
add
jmp
fcomps
sbb
jle
push
add
imul
mov
hlt
out
imul
out
mov
cmp
jo
mov
dec
mov
push
insb
xchg
sub
out
mov
push
mov
sahf
jnp
imul
mov
fucomip
xlat
mov
dec
jnp
ja
lret
ss
adc
mov
mov
mov
fdivrl
pop
add
push
insb
fdiv
jb
push
sbb
test
icebp
into
outsb
insl
sti
sbb
xchg
sub
scas
push
test
mov
inc
iret
pop
or
fcmovne
jmp
xor
or
add
aas
roll
movl
jmp
pop
inc
jbe
pop
push
add
hlt
lods
daa
sbb
call
cmpsb
push
mov
adc
cmpsl
pop
mov
mov
sahf
and
fdivs
out
pusha
inc
sub
dec
cmpsl
xor
stos
mov
xchg
test
adcb
ds
dec
nop
fistpll
loopne
inc
lea
or
lret
cmpsl
inc
sub
push
mov
insl
loopne
add
and
test
jl
xchg
test
push
in
inc
mov
mov
seto
fnop
adc
jmp
shlb
xlat
insb
mov
mov
movsb
ret
scas
or
decl
imul
adc
iret
in
test
jbe
pop
pop
jne
xchg
faddp
popa
xchg
jge
mov
fisubrs
mov
push
xchg
or
fistl
pop
jae
mov
or
mov
aas
lds
lahf
mov
xchg
inc
out
je
addr16
stc
imul
test
aaa
jmp
cmpsl
cmpsb
dec
sub
fxch
mov
mov
dec
push
int
sahf
fimuls
jle
aaa
cmp
xorb
call
pop
lret
jp
mov
fwait
ja
push
jns
lret
xchg
pop
push
mov
scas
xlat
mov
pop
push
pop
pop
test
hlt
mov
mov
mov
mov
mov
imul
lock
pop
mov
lret
in
movsb
shrb
lods
and
jo
pop
repz
repnz
adc
popf
aam
mov
cmp
lods
cmp
stos
adc
adc
jmp
jp
loopne
dec
cwtl
pop
popf
ret
aad
sbb
clc
xchg
repnz
mov
pop
sub
ret
inc
mov
cld
xlat
in
int3
insb
ss
lret
xor
fldt
fs
cmc
repz
jp
or
cli
sarl
lea
sbb
das
mov
outsl
icebp
shl
mov
loop
icebp
in
adc
jae
pop
clc
dec
fisubl
mov
fsubl
mov
loope
dec
dec
shll
mov
insb
pusha
loope
test
jmp
imulb
imul
cmpsb
out
sbb
mov
cmp
sub
mov
fdivrp
les
sbb
sahf
mov
shlb
bswap
lret
in
add
in
mov
dec
and
sbb
xor
in
mov
mov
jae
mov
lret
loope
je
scas
cs
push
popa
ror
push
mov
jb
xor
cmpsl
enter
lds
adc
rolb
mov
mov
test
int
cmpsb
jno
movsb
cmpsb
and
xor
aaa
scas
aas
jbe
add
jp
inc
inc
fildl
je
jo
int
adc
loop
mov
icebp
jnp
mov
push
rcr
jb
jo
frstor
fcmovu
add
sub
dec
hlt
mov
xchg
inc
stc
mov
jmp
and
xchg
and
sub
pop
cmp
into
add
repnz
or
cli
sbb
push
add
in
ja
mov
push
mov
jp
pop
aas
pop
and
lds
pop
mov
cmova
jnp
inc
popa
cmpsl
mov
mov
test
xchg
mov
dec
lods
xchg
stos
mov
mov
fisubs
ret
pop
lods
aam
mov
push
jg
jmp
sub
dec
adc
test
test
xor
jbe
sbb
scas
xor
mov
addr16
lcall
stos
int3
enter
lret
mov
icebp
xlat
shlb
std
push
imul
add
jp
cmp
or
pop
xor
cmp
xlat
lahf
sti
jp
mov
mov
xor
mov
bound
frstor
shrl
pusha
test
adc
jne
cmp
fwait
aad
subb
adc
lea
and
and
mov
and
fildl
jl
push
inc
ret
xchg
or
std
mov
xlat
sub
mov
mov
pop
mov
out
jno
ja
ds
les
or
lods
ret
cmovge
ss
push
pop
outsl
out
xor
jns
cli
xchg
xchg
jmp
pop
rol
nop
jl
fwait
aam
cli
adc
jp
jg
cmp
adc
fdivrs
aaa
ret
mov
sbb
inc
xchg
mov
inc
pop
lods
mov
mov
hlt
xor
xor
mov
js
pusha
aaa
adc
add
lods
cmp
inc
add
add
shlb
jl
stc
ret
pop
call
jmp
mov
mov
adc
fucomp
fisubl
inc
mov
cmc
jno
xchg
push
sbb
in
aam
imul
mov
adc
icebp
call
ret
cmp
pop
jb
je
lock
call
mov
or
lods
mov
cmp
shl
mov
mov
mov
mov
test
pop
daa
cmpsb
jl
aas
ret
fstps
mov
fidivl
stos
fnstsw
call
ja
aaa
add
and
data16
mov
in
mov
push
adc
cmp
push
idivl
enter
xor
xlat
or
out
les
outsb
movsb
xchg
mov
inc
je
imul
fld
jns
inc
cmp
mov
clc
jmp
fisttpl
out
jecxz
idivb
xchg
xchg
aad
jnp
xchg
jb
ret
xor
mov
fcmovnb
mov
cmp
movlps
adc
mov
nop
cld
repz
dec
jne
je
xchg
mov
cli
lds
fdivrl
in
mov
or
dec
xchg
test
test
test
aas
cmc
xor
mov
push
cmp
push
and
and
push
add
and
mov
inc
xchg
ss
or
je
jmp
sub
and
mov
jb
jecxz
data16
or
sbb
and
cmc
mov
lods
out
inc
jo
jne
jg
fstpt
push
jbe
roll
fwait
sub
lret
mov
mov
sbb
iret
pop
jb
lods
insb
jb
cmp
inc
mov
cmc
enter
jae
fstl
nop
or
icebp
psubusb
push
lock
les
and
rolb
lock
cmpsb
cld
jg
cmp
inc
mov
mov
aad
xor
adc
jo
and
fcmovne
mov
cmp
jbe
out
fiadds
mov
cmpb
add
mov
insb
jl
test
mov
jmp
jecxz
shll
pop
jns
sub
add
inc
xorb
mov
aam
lods
outsl
cmpb
imul
cmp
out
sahf
rcrl
fdiv
mov
fsubp
test
iret
repnz
roll
mov
aam
add
test
mov
mov
jae
xor
clc
shrb
lods
iret
popa
mov
adc
out
aas
jnp
mov
mov
or
ret
adc
roll
aas
push
ljmp
mov
cltd
movsl
mov
in
ljmp
int
test
jecxz
fldcw
popa
fwait
jno
jl
mov
mov
das
frstor
imul
sti
jge
popa
int
sbb
ret
inc
addr16
adc
push
fdivl
aas
or
jnp
popf
aad
add
push
bnd
lods
mov
mov
push
stos
jbe
xlat
mov
adc
loopne
icebp
lock
jl
sbb
jne
loope
out
lahf
push
cwtl
inc
das
gs
mov
lods
push
jo
xorb
mov
int3
fdivs
out
mov
push
lret
out
or
jmp
and
enter
mov
adc
pop
or
in
pop
daa
mov
cwtl
push
mov
xchg
or
mov
xor
or
jmp
leave
mov
movl
jne,pn
or
mov
ret
aaa
xor
sar
insb
add
stos
inc
movsb
push
jl
xchg
pop
adc
mov
inc
and
sub
data16
push
xlat
push
xor
mov
aam
xlat
jb
cmp
mov
sbb
adc
mov
push
je
fnstcw
movsb
cmpsb
pushw
iret
mov
pop
xchg
pop
add
neg
dec
push
mov
lret
hlt
fidivrs
mov
fistpl
pusha
pop
mov
ss
and
dec
and
jl
xor
imul
mov
xor
jg
adc
nop
jnp
out
inc
enter
ds
int
mov
sti
shlb
je
adc
mov
mov
or
xor
cmpsb
pop
ret
rcrl
movsb
cmp
jnp
mov
repz
push
xor
idivl
xor
lock
and
je
sbb
test
aas
mov
or
add
in
aas
cltd
mov
lods
test
mov
mov
xor
push
mov
pushf
iret
add
sti
fildll
imul
xchg
ficoms
mov
sbbb
jb
pop
jl
mov
stos
jecxz
mov
mov
sbb
mov
add
jae
sub
and
movsl
aam
insb
ret
test
cmp
pop
sbb
bound
jno
lret
std
js
stc
leave
aam
push
cli
push
stos
mov
sbb
or
inc
adcb
repz
test
sub
xlat
push
push
movsb
testl
movsb
mov
jmp
push
scas
std
xchg
adc
aaa
pop
cmp
jb
mov
clc
cmpsb
jnp
push
dec
stos
std
jnp
inc
out
pop
jmp
lock
aas
cmpsl
inc
push
lahf
fldt
sbb
inc
lods
jno
or
jg
ds
push
mov
xlat
aas
orb
loopne
mul
pop
and
hlt
data16
push
inc
loopne
jno
ds
add
or
and
mov
add
outsl
fstpt
add
loopne
mov
sub
xlat
mov
icebp
mov
mov
pop
lods
sub
xorb
dec
lret
pop
ljmp
cwtl
lret
scas
inc
xor
mov
jmp
lods
jg
mov
mov
rclb
jne
test
xchg
enter
cmp
loopne
ja
mov
cmp
ss
call
rclb
inc
push
and
jle
sub
lret
aad
jp
fwait
mov
imul
adc
xor
jb
xchg
call
shlb
ret
sbb
jp
cmp
cwtl
daa
dec
scas
lods
xor
dec
ss
push
push
cld
jp
test
adc
mov
xor
push
das
call
mov
cld
xor
pop
mov
lret
imul
ret
sub
add
lds
xor
xor
cmp
and
mov
out
jbe
or
xchg
or
inc
dec
ja
cmp
cmp
outsb
sti
push
xchg
mov
adc
pop
xor
loopne
xchg
test
loopne
leave
sarb
pop
xchg
mov
cmpl
iret
mov
cmp
out
cmp
imul
outsb
loop
scas
mov
mov
xchg
mov
mov
outsl
movsl
int
mov
test
cmp
push
int3
cmpsl
and
jl
pop
ss
flds
dec
imul
dec
cmp
fistps
mov
xchg
mov
ja
pusha
out
mov
aas
push
xor
pop
xchg
mov
adc
xor
mov
jnp
adc
addr16
pop
sub
push
sub
cmp
mov
icebp
mov
movsl
pushl
out
adc
fs
mov
pop
xchg
cmp
popf
jecxz
jge
stos
ret
cmpb
popa
sub
mov
rol
mov
fsubl
std
mov
xchg
and
mov
mov
cmp
adc
add
jg
aam
fldcw
test
dec
jns
push
mov
ret
movsl
scas
xor
pop
icebp
mov
jae
adc
outsl
mov
mov
add
mov
incl
in
repz
out
mov
sbb
lock
in
loope
mov
faddl
pop
sar
mov
daa
cmp
mov
sbb
jns
scas
xchg
mov
in
ficompl
ret
sub
and
mov
cmc
jae
mov
sti
ret
std
call
sbbl
stc
ljmp
or
outsb
mov
and
outsl
fcom
cli
inc
or
orl
stc
out
test
sbb
adc
cmp
pop
xchg
mov
mov
adc
or
jb
ficoms
xchg
jno
fnstenv
scas
jle
push
movsb
fisttps
push
jo
fnsave
lods
xchg
cmp
mov
cmp
fisttpl
movsl
sbbb
stos
pop
jno
inc
fisttps
adc
insl
call
jle
pop
jp
mov
iret
loope
fistpll
xchg
jnp
insl
ss
mov
aam
jle
test
mov
movsl
pop
loopne
cwtl
ret
and
stos
iret
mov
dec
or
inc
scas
add
loope
xchg
push
inc
cmp
in
mov
bndldx
int3
or
adc
dec
lods
adc
add
and
push
mov
mov
imul
or
pop
test
ja
dec
lods
adc
mov
and
cld
shl
aam
std
fisubrl
insb
mov
idiv
negl
mov
xchg
in
xchg
lret
cmp
xor
xchg
test
jb
ljmp
loop
sahf
in
repnz
or
mov
fdivr
mov
push
jae
mov
lahf
xlat
stos
scas
movsl
pop
push
inc
mov
pop
add
and
push
mov
push
aam
ja
jo
or
loopne
mov
mov
adc
xchg
insb
cmp
cmpsb
sbb
add
test
mov
mov
pop
xchg
sbb
inc
mov
cmp
ds
mov
jecxz
sbb
enter
lods
add
lods
jge
std
pop
xchg
loopne
ret
mov
mov
jnp
pop
mov
sub
sbb
xor
pop
sub
inc
pop
dec
rcll
shrb
ds
stos
nop
test
inc
add
ret
inc
fnstenv
lahf
dec
clc
sti
pop
daa
outsl
adc
push
mov
mov
aaa
mov
lea
sahf
out
cmp
out
sarb
or
jne
adc
imulb
inc
jnp
nop
xchg
add
jmp
jge
jle
mov
sarb
fwait
add
in
mov
adc
cmpsl
aaa
test
mov
movsl
pop
dec
stos
mov
fldcw
in
outsl
lock
jg
test
inc
mov
mov
lea
jb
stos
ljmp
mov
dec
mov
stos
mov
mov
inc
icebp
xlat
lcall
fcomp
aad
inc
pop
pop
sbb
insb
jecxz
push
pop
mov
lods
push
pop
push
dec
ret
sub
in
or
lcall
jg
dec
fwait
in
push
jae
daa
pop
gs
adc
jns
dec
sbb
push
fcmovne
scas
into
jmp
push
call
xor
ret
jg
std
mov
pop
cmp
out
mov
push
scas
andb
ja
sub
insl
jo
mov
insb
sub
shrl
jbe
fnstenv
aas
aad
notl
pop
or
xchg
mov
fs
into
push
rolb
ds
push
roll
mov
cmc
mov
mov
call
adc
pop
cmpl
imul
push
adc
mov
jns
sbb
loopne
lret
fucomi
xor
cltd
cmp
in
mov
push
xchg
mov
clc
inc
lods
clc
sbb
push
andl
mov
cmp
mov
fistps
dec
int3
mov
push
jmp
mov
into
mov
jns
jp
mov
mov
or
fisttpll
push
aas
mov
ss
adc
mov
rcl
or
xor
popf
mov
pop
sbb
cmc
push
movntps
sbb
test
scas
mull
cmp
loope
mov
decl
fdiv
icebp
mov
lret
jg
xor
dec
mov
sub
in
cmp
ret
lods
negl
mov
lahf
out
rcl
add
stos
mov
call
mov
adc
fcmove
mov
and
sar
sahf
cmpsb
test
scas
fstpl
les
nop
sahf
loop
or
jmp
orl
adc
push
mov
mov
xor
call
js
mov
stos
pop
ror
pop
jg
adc
mov
push
push
fsub
out
xor
fistl
cmpsl
je
and
stos
xlat
lahf
mov
add
enter
shll
or
lods
inc
out
jl
call
pusha
call
outsl
ds
lods
ja
ds
push
insb
sbbl
add
fistpll
inc
mov
jb
call
lahf
mov
pop
sarb
push
inc
sub
pop
pop
sbb
xor
loopne
inc
out
clc
mov
xchg
inc
loopne
ret
pop
sbbb
jnp
sarb
cmp
pop
and
jl
test
pop
ficomps
xchg
fiaddl
jge
or
cld
push
mov
mov
fstpl
lret
inc
loop
xchg
jg
dec
jnp
das
push
rcrb
ds
pop
imul
lods
mov
jg
loop
sub
jle
and
mov
sti
or
sbb
fstps
add
stos
aad
pop
mov
por
fstl
jb
aaa
mov
repz
movsb
ss
out
pextrw
adc
jle
ret
outsb
in
nop
mov
mov
in
mov
pop
insb
and
xchg
mov
dec
out
and
imul
scas
xchg
cwtl
addr16
and
inc
fisubrs
mov
fwait
mov
inc
call
icebp
les
xchg
ja
arpl
mov
mov
jno
push
push
repnz
shll
call
repnz
mov
idivl
mov
push
lods
out
dec
xchg
les
loopne
je
push
add
fnstcw
fwait
inc
mov
pop
jecxz
pusha
in
sar
in
pop
xchg
rcrl
pop
mov
nop
mov
cmpsb
fcmovnb
pop
cmp
addr16
mov
mov
push
aam
xchg
cli
ret
xchg
adc
adc
add
mov
or
call
or
inc
jae
or
lea
mov
out
mov
push
xor
sbb
inc
jle
inc
cs
arpl
sbb
mov
es
mov
in
js
cld
jmp
orb
xchg
jecxz
mov
xor
mov
and
test
mov
flds
loop
mov
lea
stos
lds
notl
pop
loopne
cmp
fimull
mov
call
sub
lahf
dec
xor
rcr
sub
test
cmp
jecxz
or
leave
mov
push
sub
adc
dec
insl
inc
mov
sbb
sub
add
mov
mov
jmp
adc
out
mov
aad
lock
rcll
adc
test
cmc
xlat
xor
fadds
aas
loop
and
ljmp
push
fstpt
mov
int
aad
jp
fcoms
or
adc
data16
mov
mov
adc
mov
or
outsb
stos
cmp
movsb
lods
out
in
frndint
test
fdivrl
add
pop
pop
push
xchg
cmc
mov
shrl
popa
xor
test
xchg
mov
mov
daa
sbbb
inc
adc
repz
ficoms
mov
mov
xchg
jns
fisubl
xacquire
divl
cs
jo
mov
mov
lds
add
jp
lret
mov
dec
pop
add
cmp
sbb
mov
test
std
mov
sub
idivb
add
aam
stc
xor
push
or
inc
adcb
dec
pop
aad
dec
sbb
mov
push
jmp
mov
aam
imul
jg
mov
cmp
fildl
pop
fiaddl
mov
mov
fcompl
jp
or
jg
nop
push
shrb
adc
stc
add
sbb
mov
arpl
inc
out
xchg
inc
mov
ljmp
pop
mov
adc
jl
loopne
xchg
shld
mov
mov
mov
adc
dec
addr16
pop
loopne
es
cmc
in
xor
mov
in
mov
pop
push
pop
mov
xlat
dec
test
mov
fisubs
xchg
jne
push
jne
dec
out
ret
push
faddl
decb
inc
hlt
insb
lods
jge
repnz
das
mov
pop
sub
lahf
xor
push
fldt
mov
aas
xchg
data16
lods
xor
jecxz
jmp
pop
test
shrb
add
adc
aad
fwait
mov
xchg
cmc
fmuls
sbb
scas
cmp
ja
imul
icebp
xchg
adc
movsb
and
loopne
mov
nop
shr
ss
cmpsb
jne
pop
adc
enter
pop
fnstenv
inc
mov
dec
fisubs
aas
mov
js
dec
rolb
or
jl
nop
std
push
sti
jbe
mov
xchg
outsb
mov
adcb
fdiv
rclb
pop
jp
aas
cmpsl
out
aam
mov
std
and
dec
int3
xchg
sbb
jno
jb
insb
mov
mov
test
ds
and
mov
sub
jns
lock
jb
mov
clc
dec
lahf
mov
sbbl
jp
sbbl
das
and
bound
mov
nop
das
lods
data16
leave
jge
push
jnp
xchg
sbb
cmpsl
inc
adc
nop
mov
iret
mov
mov
xlat
adc
dec
sbb
sbb
rol
mov
pop
loope
lods
int
fcom
mov
jg
mov
pop
imul
mov
add
outsl
xor
and
fldt
cli
ret
pusha
xchg
loope
test
test
push
jns
dec
jecxz
iret
bound
xchg
lds
cmp
sbb
mov
aas
mov
popa
cmc
jl
mov
jne
adc
fidivl
lcall
jno
pop
mov
xor
push
fiaddl
jge
push
cwtl
mov
xchg
cmp
or
jno
in
add
mov
cmp
mov
mov
daa
pop
testl
jecxz
mov
xchg
mov
mov
inc
pop
loop,pn
sbb
notb
leave
rorl
adc
pop
mov
shl
popf
xchg
xchg
pop
mov
rorb
adc
imul
push
dec
lock
or
mov
in
push
popf
hlt
xchg
rorl
jb
in
lahf
mov
je
pop
fs
fildll
pop
ret
imul
out
cmc
rorb
xor
inc
in
lods
xchg
push
out
mov
aas
mov
daa
es
std
std
inc
lahf
mov
mov
fidivrs
sarb
stos
mov
inc
lds
movsb
fidivs
fnstsw
fldcw
test
fstps
rcrl
inc
js
lods
js
xchg
leave
cltd
inc
mov
hlt
shlb
xchg
mov
xchg
sbb
xor
jne
popf
data16
sbb
stos
lods
js
push
jmp
lahf
or
mov
out
test
imul
popa
aam
and
cmp
les
and
xchg
push
in
add
xchg
aas
mov
mov
aaa
lret
jg
push
xchg
mov
ss
mov
sub
std
mov
add
enter
movsl
pop
xor
mov
cmp
aam
std
mov
xchg
cmpsb
stos
stos
pusha
fcmovne
mov
pop
rclb
mov
mov
jbe
addr16
test
movsb
pop
pusha
lods
mov
rcrl
mov
sub
popa
scas
inc
lret
jg
mov
aam
ja
pop
imull
cmp
sbb
jb
cmp
mov
repnz
jl
xchg
jns
jo
jne
jmp
lods
les
mov
inc
add
movsl
mov
lods
repnz
ds
xor
mov
fstps
inc
jp
stos
mov
rolb
jl
mov
xchg
mov
rcrl
fdivrl
aam
mov
and
ja
and
xchg
cs
lods
aam
psadbw
shlb
jne
sahf
aas
jmp
cli
cmp
decb
mov
jmp
adc
jnp
outsb
aaa
mov
lcall
adc
mov
repnz
mov
pop
sub
jae
xlat
fstl
popf
cmp
mov
enter
push
mov
lock
scas
aaa
jecxz
out
xor
fistl
js
dec
sbb
daa
sub
sarl
insl
mov
xchg
jmp
xor
flds
fstpt
sete
movsb
aaa
outsb
pop
fildll
rorl
repnz
mov
aaa
fmulp
std
ja
iret
adc
leave
xchg
jae
test
lds
adc
lods
scas
fnstcw
sahf
jl
in
scas
and
mov
xchg
xor
outsb
je
adc
adc
gs
mov
std
cmpsl
repz
arpl
push
adc
pop
jb
xchg
adc
jle
xchg
stos
xlat
xorl
loope
add
cmp
lcall
scas
movsl
xlat
lcall
inc
sub
inc
xorb
push
fdivrs
in
jp
cli
mov
jl
fldcw
mov
mov
cmp
ret
lcall
aam
jge
sbb
and
dec
lds
push
xchg
or
mov
cmpsl
pusha
or
rclb
inc
dec
repnz
je
insl
popf
mov
pop
icebp
cmpsl
add
mov
in
adc
sarl
ss
cwtl
adc
xor
xor
mov
test
les
xorl
inc
sub
xchg
in
push
daa
test
inc
cltd
jb
xor
inc
mov
pop
sbb
mov
adc
loopne
aas
cmp
jae
pop
mov
out
sub
sti
or
mov
dec
aas
pushf
push
loopne
jns
or
pop
mov
push
push
or
in
shrb
inc
divb
dec
adc
insl
jo
fsubr
cmp
or
jp
test
test
cmp
movsl
adc
dec
std
adc
cs
mov
push
stos
aam
dec
fistps
insl
out
lcall
cs
in
adc
xor
inc
test
jns
in
jne
fimuls
test
inc
xchg
push
push
jecxz
clc
out
fcmovnb
scas
bound
xchg
add
xor
pop
shl
jae
add
mov
into
push
jb
mov
std
jmp
movsl
js
scas
mov
pop
cmpsl
jg
mov
cmp
inc
mov
dec
in
out
adc
inc
out
pop
or
push
inc
push
or
das
and
repnz
jo
jmp
inc
ret
mov
ja
push
mov
mov
or
xor
cmp
mov
push
mov
loop
subl
sarb
ret
xchg
enter
out
shll
mov
mov
xchg
leave
jge
vpcmpgtw
sbb
adc
leave
test
fists
ss
filds
jp
xor
add
mov
adc
sahf
jb
addl
pop
mov
iret
es
xor
mov
cmpb
sahf
stos
adc
es
aaa
pop
or
call
ret
lahf
or
inc
jmp
rdtsc
inc
data16
cltd
xor
lock
add
xor
push
push
jb
jb
cmpsl
scas
mov
mov
cmp
jno
stos
das
call
and
addr16
xlat
in
lea
push
sti
ja
xchg
pop
stos
test
adc
pusha
lods
inc
in
sub
icebp
or
cmc
xchg
jne
pop
into
arpl
inc
xor
mov
xor
loop
xor
inc
jl
jns
xor
mov
cmp
mov
nop
lods
fistpl
adc
xor
and
repz
adc
pop
pusha
flds
jmp
mov
fcmovnbe
outsl
jns
daa
or
fstl
xor
xor
pop
das
clc
xchg
out
xchg
jne
ja
xor
cmp
test
aas
incl
push
cmp
adc
cmp
mov
out
jecxz
push
fiadds
shlb
mov
sub
lods
mov
or
addb
jle
aaa
mov
add
xor
add
fnsave
je
insb
jp
xchg
jg
imul
stos
sub
mov
mov
xchg
jecxz
in
outsl
inc
cmp
call
xchg
scas
icebp
js
gs
rclb
stc
clc
pop
cmp
adc
bound
int
mov
lret
sbb
lock
lcall
push
loope
xchg
ja
mov
pop
dec
das
cmp
inc
xchg
push
shrb
ret
notl
add
sub
sbb
xor
cs
dec
push
mov
sub
xchg
in
push
and
mov
out
pop
pop
out
jb
and
pop
into
pop
loop
pop
pusha
pop
dec
adc
dec
pop
ss
ret
and
pop
cmpsb
movsb
int3
icebp
js
ljmp
add
fisubl
mov
in
scas
sub
sub
std
ss
daa
push
pop
add
add
mov
fbstp
mov
xor
ffreep
fincstp
out
imul
je
rolb
ret
sub
insl
adc
ds
scas
xor
mov
xor
nop
add
xchg
add
pop
pop
clc
cmp
mov
mov
loopne
fwait
mov
scas
jecxz,pt
ficomps
popa
add
jns
pop
push
test
out
xchg
dec
mov
jecxz
add
jns
aaa
sbb
in
lret
xchg
push
or
mov
loop
ffree
sbb
outsb
das
out
push
jp
adc
push
mov
sti
mov
bound
test
std
in
out
stos
mov
mov
pop
fwait
repz
repnz
cmp
mov
mov
test
jle
or
imul
sub
stos
enter
lods
icebp
sbb
lcall
lods
vpavgw
mov
adc
les
in
mov
pop
loope
dec
lea
mov
stos
stc
mov
cmp
stos
int
or
enter
push
mov
fists
and
sarl
xlat
gs
mov
jmp
roll
iret
jl
addl
add
jnp
das
push
mov
jae
aas
cmp
mov
outsl
sbb
cmp
fwait
pop
outsl
cmp
adcl
xchg
mov
xlat
leave
inc
stc
fiaddl
push
shrb
fwait
aas
fnstcw
jns
fidivl
mov
ljmp
jnp
leave
das
stos
out
mov
cmp
addr16
lcall
push
leave
pop
stos
push
lods
pop
shll
inc
into
mov
movsl
adc
xor
adcl
nop
repnz
div
outsb
outsl
test
cmp
jle
inc
lahf
mov
mov
or
stos
fwait
call
sbb
mov
cmp
adc
or
movsb
jle
mov
jecxz
sbb
punpckhdq
test
js
pop
mov
aas
mov
cmp
and
pop
movsb
imul
fmull
repz
inc
insl
shll
push
icebp
pop
jo
jae
mov
mov
push
mov
fdivl
enter
gs
xor
pop
mov
shll
xor
jbe
test
cmp
arpl
and
pusha
pop
pop
out
aas
test
in
imul
sahf
cmp
jb
ljmp
mov
mov
in
adc
mov
stos
dec
adc
adc
sub
xchg
fwait
out
stos
rclb
outsl
adc
mov
push
mov
shll
stc
xor
mov
push
sbb
lcall
cli
pop
mov
jp
or
aaa
aam
fistpll
and
int
or
in
ljmp
aas
aas
mov
fstpt
and
dec
xchg
and
xlat
mov
int3
adc
jnp
push
stc
jae
adc
test
shlb
movsl
jmp
xor
mov
or
fstpt
xor
and
fmuls
xor
mov
sbb
mov
cwtl
add
stos
in
inc
ss
stos
int
ficompl
xor
cli
push
mov
jb
pop
fwait
xor
push
jae
mov
test
push
insl
dec
les
mov
sar
mov
arpl
mov
push
xor
sub
imul
flds
cld
mov
inc
repnz
fisttpl
mov
insb
xor
inc
pop
mov
mov
mov
outsb
aas
pop
xor
inc
mov
mov
sub
or
daa
out
mov
adc
inc
jo
movsl
jbe
repnz
mov
mov
test
mov
jns
fstpt
orb
shrl
imul
mov
adc
xor
fildl
outsl
lods
jns
leave
fisubrl
movsl
cmpsl
shrb
mov
pushf
dec
pop
cmp
jmp
hlt
bound
or
inc
add
adc
adc
negl
call
inc
and
nop
fwait
mov
repnz
add
out
je
mov
pop
test
lea
fsubrp
pop
dec
inc
in
pop
mov
repz
jno
xchg
movsb
aad
sti
mov
and
imull
test
pop
pop
or
jbe
cli
cmp
orb
aam
dec
je
fnstsw
pop
mov
mov
ret
enter
fidivrs
outsl
xorl
std
add
jmp
scas
int3
sbb
out
mov
adc
scas
fcmovnu
xlat
and
push
jle
pop
stc
pop
sub
cmpb
sarl
adc
push
push
data16
pop
fldt
mov
dec
or
mov
fs
mov
outsl
mov
mov
mov
out
movsl
xlat
pop
aas
js
jo
test
cwtl
out
add
or
fs
mov
fsts
sub
bound
dec
cmp
cmp
outsb
inc
adc
push
mov
fbstp
cmp
mov
cwtl
push
ljmp
ss
xor
dec
xor
mov
mov
loopne
sub
adc
aaa
mov
in
aam
ljmp
dec
pop
mov
add
pushf
jl
pop
insb
adc
test
mov
adc
mov
jle
sbbl
and
test
ret
mov
jae
cltd
adc
fnop
imull
ja
mov
push
mov
loop
or
mov
dec
outsl
mov
xlat
cmc
jl
mov
jp
pop
testb
test
dec
xor
iret
cli
and
xchg
shll
and
and
cld
test
sbb
std
xchg
shll
scas
cmp
mov
mov
fdivs
sub
or
mov
mov
adc
dec
adc
cmp
test
movsb
iret
inc
jo
xchg
push
jbe
sahf
ficoml
dec
les
push
dec
std
xor
out
mov
or
xor
sbb
aam
mov
aad
insl
pop
mov
in
mov
mov
stos
fistpll
jns
leave
mov
mov
sbb
mov
or
cmp
popf
add
jl
push
sub
pusha
popf
in
adc
cmp
jne
outsb
push
push
push
inc
scas
push
sub
scas
jg
mov
sub
sub
mov
xchg
shrb
daa
mov
sti
mov
gs
dec
mov
jo
inc
xor
sahf
in
ret
scas
push
ss
fldl
lods
mov
test
int
fsubr
je
mov
insb
test
test
sub
test
scas
aad
addb
dec
sub
xlat
cmp
push
push
mov
xchg
ss
das
mov
faddl
ljmp
cmp
mov
cltd
push
jge
loopne
sbb
iret
jnp
sti
jp
fisubrl
or
push
stos
cmp
dec
loopne
shrb
aam
adc
jne
pop
cli
xor
or
and
or
sub
xorb
jno
adc
cmp
bndldx
loope
bound
inc
addl
sbb
sbb
je
loope
lods
xor
adc
ds
pop
cmc
imul
test
jno
inc
cmp
adc
out
inc
mov
scas
stos
sbb
dec
das
xor
bound
hlt
out
mov
sbb
aaa
jnp
les
pop
pushl
idivl
pop
xor
adc
sbb
mov
sub
sti
addr16
ja
loope
pop
sbb
addr16
dec
shl
out
mov
dec
add
sbb
stos
addr16
jl
int3
imul
xchg
mov
inc
test
add
out
pushf
fistl
mov
mov
insb
add
out
pop
pop
dec
dec
fstpt
aaa
movsl
mov
fwait
test
sbb
cmp
mov
pop
sub
lret
insl
cwtl
insb
inc
adc
push
mov
ffreep
arpl
xchg
rolb
dec
clc
xor
sbb
shll
inc
aas
xor
push
movsl
cmpsb
cmp
outsb
pop
imul
insb
insl
mov
adc
stos
and
fdivr
push
sbb
xlat
mov
ss
incl
fwait
neg
lcall
call
cmp
mov
cli
adc
mov
leave
ds
adc
pop
cmpsb
cmpl
mov
mov
lods
xchg
add
push
iret
daa
or
cltd
repz
mov
jo
iret
mov
movsl
ja
cmp
mov
mov
stc
leave
mov
xchg
js
sub
icebp
mov
movsl
mov
dec
push
mov
mov
ds
int3
pop
pop
dec
pushf
dec
sbb
roll
pop
repz
sbb
ret
das
xchg
lods
mov
xor
int3
mov
bt
push
aam
sti
int3
into
push
inc
lret
stos
push
cmp
mov
pop
adcb
sti
cmpsl
leave
arpl
adc
addr16
mov
stc
stos
lahf
shrl
fcmovbe
or
pop
fistps
xor
and
addb
mov
adc
int3
in
ss
or
xor
ret
loop
xchg
cmp
adc
mov
mov
test
push
out
sbbb
outsl
xlat
fbld
xchg
hlt
sbb
hlt
loop
lods
jecxz
addr16
lods
mov
outsb
ret
out
or
sbbl
arpl
adc
psrad
outsb
jbe
jnp
cmc
inc
in
cmp
inc
xchg
mov
sbb
stos
pop
adc
xor
mov
mov
jbe
sbb
icebp
out
movsl
outsb
mov
call
pop
bound
cli
add
xor
nop
in
test
loope
fldcw
fmull
out
insl
push
xor
jle
xor
or
dec
xchg
ret
xchg
jne
sbb
cli
ss
out
out
mov
mov
stc
inc
out
mov
push
mov
cmp
sbb
imul
std
mov
test
rcrl
xorl
xchg
imul
fcomip
mov
stos
sbb
jae
fmul
or
out
add
adc
cmp
push
movsb
adc
movsb
or
mov
pop
movsl
lods
sahf
jae
fwait
nop
lods
cld
adc
add
push
cmc
sbb
cmp
cmp
mov
popf
jp
xchg
add
sbb
ret
fcmovb
xchg
jb
outsb
mov
imul
jbe
pusha
popa
mov
cwtl
cwtl
jmp
or
mov
push
jb
mov
xchg
sbb
nop
test
arpl
lods
ss
mov
out
sbb
xchg
pop
adc
mov
mov
repnz
loope
inc
mov
jp
mov
or
mov
rorb
rcr
insb
inc
addb
sbb
mov
scas
cld
js
jo
cmp
out
lods
mov
mov
xor
movsb
sub
jne
lahf
mov
push
mov
pop
xchg
mov
jp
jle
ds
je
mov
int
lret
rorl
negl
jbe
dec
out
xchg
ret
mov
insl
mov
outsb
or
repz
stos
pop
mov
test
fwait
sti
imul
loopne
movsl
into
cmpsl
mov
jg
xchg
sub
dec
mov
jle
mov
add
jmp
mov
out
pop
cmp
mov
movsb
cmp
ljmp
fcomps
mov
or
jo
xchg
and
in
inc
add
adc
aad
add
sbb
mov
ss
out
and
cmp
popf
insl
loop
js
push
jae
or
repz
imul
jecxz
insb
flds
aam
sub
pop
push
mov
inc
sub
fst
aaa
mov
arpl
rcrb
pop
fmulp
fistl
frstor
pop
xchg
xchg
scas
jb
adc
sbb
test
div
mov
ret
js
daa
ss
pop
push
stos
test
xor
fisubs
mov
mov
dec
mov
fsubrl
aam
inc
fwait
mov
pop
or
and
jo
mov
xchg
ljmp
xor
loopne
sub
jl
adc
insl
popa
fwait
mov
pop
cmpsl
insl
test
icebp
movsl
aaa
cmp
jns
movsb
or
mov
fwait
jmp
mov
mov
pop
dec
mov
loopne
hlt
sub
cmp
scas
push
fwait
es
mov
sbb
and
lock
jg
jp
adc
hlt
inc
imul
or
mov
insl
pop
sub
rorb
pop
sbb
sti
mov
movsb
imul
int
mov
insb
jae
aaa
or
jnp
and
mov
ljmp
shrb
fidivrs
adc
nop
mov
enter
push
add
push
xor
mov
aas
and
pop
jnp
psubusw
fcomp
adc
mov
repz
push
jbe
cmp
sub
mov
fisttpll
cmp
cmp
and
pop
pop
dec
divb
inc
daa
jge
or
and
mov
adc
jge
sub
jno
jns
mov
jno
fdivr
mov
pop
add
fdivl
aas
mov
cwtl
loop
test
mov
jbe
hlt
sbb
repnz
fcmovu
add
dec
scas
sub
mov
xchg
xor
and
xchg
inc
ret
sahf
mov
jle
loope
xor
dec
jg
iret
xlat
add
aam
cmp
insb
xor
mov
jns
cmp
or
cmp
adc
sub
or
push
mov
rcll
pop
mov
div
pop
inc
mov
add
int3
ret
insb
inc
push
mov
add
ret
mov
imul
popa
leave
inc
sti
les
ljmp
adc
fcoms
inc
imul
xchg
push
mov
or
cmpsb
gs
sahf
lds
mov
pop
test
mov
cs
dec
nop
or
out
orl
and
sti
ret
leave
shrd
fidivrl
std
push
divl
or
mov
jmp
lea
inc
in
outsb
stos
dec
sub
push
andl
pop
shll
push
cmp
stos
cmp
pop
or
mov
mov
scas
or
fisubl
mov
cmc
adc
lock
stos
sub
jle
scas
cmp
mov
fwait
lods
stc
add
and
adc
jmp
jns
int3
and
or
cmp
xlat
ss
push
mov
jle
xorb
aad
mov
adc
lods
jge
aaa
fwait
inc
mov
xchg
dec
mov
xor
sub
pop
addl
cmpsl
addl
lds
mov
popa
ja
pop
shrl
mov
push
in
push
push
push
imul
dec
hlt
push
loopne
rol
jb
pop
not
pop
out
mov
push
jo
xor
xchg
adcb
movsb
add
ds
sbb
adc
popf
orl
jmp
xor
or
xchg
imull
ja
xor
add
jns
iret
mov
pop
pop
xor
je
pop
xchg
test
push
fsubr
sub
cwtl
adc
sub
les
aas
scas
ret
movsl
je
je
addr16
xlat
dec
sbb
mov
mov
fisttpl
movsl
pop
fldcw
push
lods
cmc
rclb
xlat
std
adc
mov
mov
dec
and
mov
iret
in
adc
push
jmp
stos
add
ds
insb
fdiv
push
out
mov
adc
test
sub
inc
mov
mov
fninit
mov
mov
adc
lods
inc
js
pand
mov
xlat
adc
loop
test
jmp
jae
test
daa
mov
jge
out
mov
addr16
pop
fs
inc
sbb
les
imul
leave
into
inc
repnz
mov
js
cmpsb
scas
aas
imul
jg
adc
das
scas
dec
sbb
cmpsb
iret
test
cld
loopne
jmp
fisubl
dec
mov
mov
mov
fld
or
push
lret
fisubrl
jns
mov
mov
xchg
arpl
xchg
cmpl
repnz
or
inc
push
je
stos
sub
jo
data16
mov
insl
mov
stos
or
sbb
lods
pop
and
popf
mov
lock
push
lea
inc
xchg
ret
mov
mov
out
or
popf
test
jecxz
and
hlt
icebp
push
pop
mov
push
imul
lret
outsl
mov
mov
inc
xlat
jg
mov
pop
mov
imul
cmpsl
cld
mov
push
incl
popa
push
cmpsb
fldenv
test
inc
shrb
adc
dec
lret
fldenv
ds
pop
call
xlat
mov
test
lods
ljmp
mov
jg
push
in
jl
test
inc
test
fwait
jb
mov
ss
inc
ret
jns
pop
and
mov
jmp
add
mov
jbe
adc
fnsave
call
aad
fcoml
pop
cmp
int
push
addl
jg
jmp
ret
jne
mov
in
jb
lret
mov
sbb
pushf
pop
stc
mov
xor
scas
test
sbb
mov
std
scas
cmpl
xor
xor
loopne
rorb
nop
xor
adc
pop
outsl
sbb
fsin
fstl
test
call
jl
icebp
or
inc
and
xchg
jns
outsb
or
lods
mov
xor
pushf
test
test
adc
jge
cmp
xchg
sbb
sbb
mov
mov
jbe
addr16
mov
xor
cld
dec
push
pop
jb
scas
mov
xor
xor
pop
cmpsl
test
out
mov
xchg
rorb
xor
add
lods
icebp
mov
inc
inc
jno
sti
testl
add
iret
mov
adc
daa
cli
and
pop
imul
ss
ret
xacquire
ljmp
jmp
jns
push
adc
js
mov
adc
shlb
cli
enter
les
pop
shlb
mov
mov
cmp
je
jg
cmp
pop
xchg
std
das
scas
pop
sub
mov
setle
xchg
inc
ret
outsb
fisubrs
and
lcall
jp
loop
sbb
xlat
loop,pn
nop
ret
add
xchg
sbb
dec
mov
pop
inc
xchg
mov
int3
or
js
aas
movsl
push
fnstsw
es
mov
in
scas
pop
test
pop
mov
and
xchg
scas
lds
xchg
and
mov
int3
fidivrl
lahf
ret
dec
dec
mov
ficompl
cld
adc
push
add
or
ja
repnz
push
lret
and
dec
xor
adc
push
shrb
ret
mov
and
jo
pop
inc
jle
and
gs
or
and
mov
xchg
pop
int3
loopne
or
loop
loope
sub
or
aam
pop
les
xor
adc
sarl
insb
jl
add
outsl
adc
pop
frstpm(287
mov
mov
pop
lret
call
call
push
ficoms
sub
mov
in
fiadds
les
mov
out
mov
mov
je
or
xchg
in
mov
xchg
mov
pop
fadd
test
sti
xchg
dec
mov
mov
add
mov
dec
scas
jno
dec
adc
or
scas
inc
mov
inc
mov
push
mov
loop
ror
mov
lds
mov
scas
xor
stos
cmpsl
sbb
xor
push
ficompl
test
lcall
mov
insl
jo
pop
adc
loop
arpl
jns
pop
test
gs
sbb
loopne
ret
imull
je
pop
mov
std
aad
fbld
add
subb
mov
sbb
jbe
mov
jge
adc
jne
mov
loop
xor
ljmp
lcall
xchg
clc
pop
jg
cmc
lea
out
cmpsl
ja
and
mov
xor
cmp
adc
jmp
fildll
sbb
pop
add
out
sub
cmp
jne
push
ljmp
insb
stos
jmp
inc
xor
pop
xor
das
pop
subl
jl
pusha
test
add
int
jae
jae
jae
imul
dec
jno
and
fld
test
roll
jns
fsubrl
outsb
int3
enter
or
mov
push
daa
aas
adc
push
add
mov
inc
test
jecxz
adc
xchg
sbb
stos
shll
fisubrl
out
shl
imul
fldenv
and
or
jecxz
scas
shrl
scas
jl
fnstenv
shl
xchg
mov
mov
inc
or
mov
xchg
aaa
push
test
inc
stc
pop
mov
call
stos
adc
mov
adc
fdivl
ret
pop
xchg
mov
int3
test
fisubrs
xchg
lahf
out
sub
cli
test
out
imul
pop
sbb
jl
mov
imulb
shll
pop
push
jg
out
and
cmp
push
jns
jbe
cmp
mov
dec
leave
lods
cmp
mov
inc
xor
jo
leave
sbb
pop
cmp
mov
loopne
cli
das
andb
push
daa
roll
sti
jecxz
pop
sbb
xorl
jne
mov
mov
cmp
mov
daa
rcl
jmp
mov
cmp
mov
call
lret
ljmp
ljmp
cmp
daa
jns
inc
scas
dec
xchg
call
xchg
clc
or
dec
pushf
cmpsl
jge
enter
loope
imul
add
ds
ds
or
xchg
mov
mov
cmp
cmp
daa
movsl
jge
dec
aam
cmp
jns
ss
xor
in
or
xchg
jno
cli
inc
mov
out
outsb
pop
adc
xor
into
aam
fnsave
stos
std
mov
and
lds
rorb
imul
stos
ljmp
add
pushl
lods
daa
ficoml
jns
mov
mov
xor
mov
mov
sbb
mov
lds
xchg
test
adc
cmpb
nop
mov
jmp
sub
pop
mov
std
push
in
jb
negl
or
jo
sub
xchg
in
and
out
shrb
adc
test
mov
int3
cs
ljmp
push
fnsave
lds
minps
sub
stos
stc
pop
jecxz
sbb
out
test
testl
aas
push
push
mov
ds
rclb
mov
push
movsb
jp
add
pop
lods
push
stos
cmp
or
arpl
imul
mov
jns
lods
xor
imul
push
jge
lods
movl
mov
pop
sti
mov
adc
imul
mov
das
mov
mov
bound
mov
xor
mov
sub
inc
dec
push
pop
pop
dec
pop
or
sub
adc
cmp
sub
mov
cmc
stos
sbb
add
inc
ss
mov
fdiv
push
std
sbb
jne
or
mov
ret
and
pop
js
inc
dec
mov
ss
sbb
daa
adc
fsubp
repnz
shrb
add
daa
cmp
xchg
and
je
outsb
cmp
mov
mov
mov
push
aad
enter
ljmp
xchg
andb
ret
fidivrl
sti
mov
cmpl
cmpsl
enter
adc
data16
or
mov
mov
cld
bnd
stos
aaa
dec
push
out
test
mov
mov
xchg
cmp
dec
ds
enter
fiaddl
sbb
cmp
mov
xor
out
mov
mov
mov
daa
mov
mov
dec
xlat
aad
jp
mov
inc
cmpsb
fadds
push
xchg
xor
inc
adcb
cmp
mov
jno
es
dec
fcomi
mov
mov
cmpl
lds
pop
aam
out
std
es
push
cld
cmc
adc
push
jl
mov
mov
test
imul
push
mov
das
filds
hlt
add
jl
inc
xor
inc
mov
pushf
scas
jns
aad
push
scas
fildll
cmp
mov
inc
jmp
fists
lret
cmp
cmpsl
xchg
aam
fnstenv
adc
adc
addl
loop
mov
cld
aas
rorb
stos
push
sub
sbb
cmpsb
push
fnstenv
in
adc
mov
fisttpll
cmp
mov
cmp
cmp
adc
dec
fldenv
xchg
xor
push
adc
out
ss
arpl
adcl
test
mov
jbe
add
loop
mov
cwtl
mov
xor
cmpl
dec
outsb
adc
inc
aad
push
xor
scas
mov
outsl
fwait
adc
test
stc
push
dec
lcall
aaa
xor
mov
addb
push
in
mov
jecxz
xor
test
jle
adc
xchg
mov
loope
iret
or
lock
push
es
sbb
roll
idivl
ret
outsl
dec
mov
enter
add
ficoml
arpl
mov
imul
in
mov
dec
ljmp
ss
pop
fimuls
pop
adc
mov
jmp
mov
out
mov
pushf
stc
out
scas
xchg
pop
jecxz
xchg
inc
fistl
xchg
xor
mov
mov
mov
push
test
and
mov
inc
add
into
and
cli
loop
sti
lods
push
sub
rcll
push
cmp
mov
imul
rclb
jns
data16
cld
mov
mov
mov
js
data16
addl
cmpsb
cmp
pop
jg
int3
xor
mov
mov
or
cmp
loopne
stos
cmp
jmp
cmp
push
test
or
push
jns
lock
mov
in
nop
mov
mov
mov
fcom
sahf
pop
mov
rep
fistpll
scas
sbbb
mov
sti
or
adc
iret
subl
cmp
mov
shll
dec
das
std
in
das
out
push
add
pop
mov
mov
pop
ds
mov
adc
shlb
loope
mov
pop
out
js
ret
ss
mov
jns
fimull
loopne
nop
ret
mov
inc
mov
movsb
addr16
das
lods
iret
add
les
std
sub
mov
pop
addr16
ds
inc
and
enter
mov
mov
jmp
sahf
cltd
cli
pop
call
xorl
sbb
outsl
xor
sbb
dec
cmc
ds
in
jns
sbb
fs
mov
outsl
mov
bound
and
jbe
ljmp
in
mov
add
sbb
stos
pop
addr16
and
rclb
mov
das
and
aaa
and
push
push
push
sbb
mov
mov
lret
inc
dec
in
adc
jecxz
xchg
mov
inc
dec
cmpsl
and
push
jns
mov
push
lea
jmp
sub
mov
mov
imul
pop
bnd
xorl
jbe
fadds
adc
popf
lcall
sub
pop
jns
std
mov
mov
cli
out
cmc
adc
fucomi
ds
or
cli
jg
fnstcw
sti
sbb
jg
sub
push
aaa
mov
xorl
adc
jbe
cmp
cli
fistl
out
sub
sub
cmp
add
jp
fdivrs
mov
jmp
leave
mov
adc
arpl
hlt
call
ret
daa
mov
aaa
inc
outsl
mov
lret
loopne
mov
lock
jge
fxch
jnp
pop
xor
pop
psubusb
insl
mov
mov
pushf
jp
jns
icebp
jge
mov
cmp
push
jb
or
jle
div
mov
in
sub
fldz
jnp
lock
test
mov
gs
jg
mov
adc
mov
out
mov
mov
mov
std
subl
fsubrs
out
mov
ja
adc
insl
mov
andb
decb
push
imul
repz
mov
xchg
cmp
mov
mov
ljmp
int3
test
call
ss
xchg
lods
push
mov
push
movsl
lea
and
mov
xlat
sarl
push
scas
aaa
dec
dec
aaa
repz
icebp
xor
and
fdivrp
adc
jae
pop
scas
mov
jbe
cmp
mov
add
jge
xor
or
add
sub
jns
and
aam
dec
je
adc
sbb
lds
push
adc
divl
fistpl
stos
cmpsb
mov
cmp
mov
xor
fbld
test
add
add
push
xor
mov
sti
mov
and
add
ja
loop
jg
aaa
mov
or
int3
or
call
add
sbb
dec
movsb
mov
lret
adc
sub
jnp
mov
lds
mov
jg
mov
mov
in
mov
mov
sbb
adc
in
mov
mov
xchg
mov
mov
or
pop
sarl
in
pop
push
rcll
pop
xchg
mov
dec
or
lods
jae
daa
add
das
sahf
rol
push
divb
or
jmp
inc
mov
test
mov
cmc
pop
fidivrl
mov
push
cmp
outsl
inc
add
les
flds
and
xor
cmpsl
enter
data16
in
cmp
test
shlb
mov
idivl
xchg
xor
adcl
sbb
movsb
stc
bound
icebp
jns
jbe
lods
mov
inc
sti
prefetch
or
fistl
dec
leave
mov
xchg
repz
loope
shlb
inc
adc
icebp
jg
clc
pop
push
fcmovne
imul
mov
scas
mov
es
jl
lea
aaa
shll
subb
mov
aas
or
add
mov
ficompl
sub
or
test
mov
xor
pop
loope
xorl
icebp
pop
aas
jecxz
push
dec
push
es
pop
out
pop
jp
rcrb
and
int3
and
sbb
sti
bswap
cmpsl
xchg
outsl
fwait
leave
or
bound
orl
dec
xchg
movsl
xchg
into
xor
fwait
mov
je
cmp
xorb
lea
pop
out
daa
sub
sub
inc
mov
lret
in
hlt
mov
mov
orb
pop
adc
dec
mov
jge
bound
lods
push
mov
jp
mov
xor
and
bound
test
lahf
mov
mov
fcompl
arpl
jbe
mov
ss
stos
dec
arpl
out
divl
mov
lods
add
dec
inc
call
jecxz
fldenv
jns
faddl
test
test
dec
pop
xchg
dec
mov
aaa
jl
dec
pop
xorb
sub
or
sub
in
stc
adc
jle
sub
xor
sub
sbb
int
ficoml
jnp
flds
stos
sbb
push
adc
jge
pop
iret
dec
pop
pop
xchg
xor
fimull
arpl
and
sbb
imul
ja
or
leave
das
mov
aam
jecxz
sahf
pop
jle
std
jns
mov
aas
xchg
mov
xor
adc
scas
sub
pop
cmp
adc
lock
scas
imull
test
lret
ljmp
mov
cmpsb
push
lret
lods
rorb
jmp
xor
xor
mov
ss
leave
adc
xchg
inc
filds
dec
int
adc
dec
int
mov
out
cmpb
pop
lods
dec
add
pop
dec
cmp
decl
xor
or
or
inc
loopne
mov
mov
xchg
divl
cmp
paddsw
sbb
cmp
test
cld
test
mov
mov
cmpl
mov
std
mov
loopne
jns
push
cli
ja
ss
xlat
cmpsl
and
lret
insb
testl
std
push
mov
and
test
xlat
ljmp
cwtl
fsubrs
add
std
fdivrs
xorl
or
mov
jnp
test
mov
mov
and
mov
mov
inc
fidivs
ja
aas
outsl
stc
std
jnp
mov
scas
pop
inc
mov
inc
xlat
mov
or
stc
sahf
xor
pop
dec
clc
outsb
mov
mov
inc
sbb
ja
mov
xor
or
hlt
mov
mov
add
mov
out
adc
arpl
xor
dec
sbb
fdiv
insl
add
sbb
lods
test
lfs
icebp
dec
outsb
js
push
imul
mov
fptan
pushf
xchg
mov
mov
mov
out
pushl
test
stc
cmp
dec
outsb
imul
mov
imul
mov
jns
cwtl
stos
pop
aas
mov
or
cmp
lds
mov
lret
pop
mov
pop
hlt
test
stos
cmpsl
aas
xchg
out
add
mov
movsl
movsb
cmp
dec
mov
lods
push
mov
test
jle
inc
or
add
and
jg
mov
xchg
pop
fldcw
xor
jno
mov
mov
mov
or
lcall
ds
push
loopne
nop
mov
lock
fiadds
lock
sarb
fcompl
mov
ret
mov
fdivrl
fstpt
inc
mov
mov
stc
mov
mov
clc
pop
add
adc
mov
sub
mov
ret
and
jmp
aaa
cli
dec
insl
filds
fsub
stos
mov
lods
jl
in
pop
push
ret
adc
sti
stc
and
pop
jmp
mov
test
lds
cmpsb
push
xchg
dec
sti
xchg
jnp
movsl
push
idivb
mov
cmp
mov
test
xchg
mov
push
add
incl
mov
fsub
scas
shll
shrb
fdiv
add
mov
pop
sbb
mov
mov
loop
jle
stos
aad
jbe
aad
js
xor
jmp
adc
and
stos
push
lods
pop
lods
jno
dec
mov
cmc
pop
cmc
or
pop
imull
jmp
lahf
lods
jmp
mov
loope
lods
sub
jns
cmc
jle
sarl
inc
cld
xchg
out
xor
cs
or
cmp
das
mov
cmp
std
and
cmp
mov
pop
mov
jnp
pop
inc
bound
inc
mov
jge
gs
push
jo
or
xor
sub
push
insl
loopne
es
dec
mov
outsl
mov
fcoms
mov
stos
in
ljmp
pop
inc
bnd
sbb
sbb
ficomps
xchg
fisttps
or
fwait
in
dec
ja
fwait
mov
adc
mov
andb
lcall
mov
cmc
pop
lds
ss
dec
in
loop
inc
and
and
lea
gs
xchg
inc
ss
push
lock
jnp
andl
jge
xchg
mov
mov
xor
repnz
jns
outsl
cmpsb
mov
stos
jns
mov
xor
stc
rol
mov
jbe
clc
ret
cmp
jmp
xor
sub
lods
insl
pop
test
inc
sbb
addr16
rclb
mov
sbb
roll
clc
pop
sbb
imul
xor
rcll
cmp
ds
cmp
fnstcw
xor
pop
insl
dec
cvtps2pd
insl
jnp
lock
in
das
or
negl
mov
jg
inc
mov
aaa
jnp
cltd
jp
inc
mov
mov
push
pop
out
jg
jecxz
cltd
movsl
pop
sbb
push
fdivrs
aad
adc
mov
adc
stos
pop
jns
hlt
cld
stos
mov
vmovdqu
aas
jg
sub
pop
daa
jns
jp
loop
mov
test
add
out
test
out
xlat
mov
sub
lahf
jnp
cmp
sub
std
sub
fldenv
jnp
mov
shrl
lahf
sub
popa
jnp
stc
xor
test
mov
mov
movsl
jnp
mov
inc
test
dec
sub
fldl2t
jnp
adc
jp
fcmovnu
lret
jg
sub
lahf
jnp
cmp
sub
icebp
sub
fsts
test
lods
or
mov
cmpl
outsl
std
shl
lret
mov
or
mov
sub
jo
pop
bnd
das
into
mov
enter
xchg
mov
jecxz
mov
iret
pop
fistpll
jle
test
iret
lods
xchg
iret
mov
xchg
mov
enter
mov
loope
xor
mov
mov
fimull
shl
iret
daa
outsl
rorb
rcl
add
sub
movnti
cmpsl
lahf
hlt
pushf
mov
mov
add
mov
jle
pushf
cwtl
out
sahf
ja
xchg
out
bound
fldt
leave
mov
sbb
cmp
cmp
cmp
inc
scas
pop
aaa
or
xchg
mov
insb
sbb
push
mov
mov
cwtl
pushf
adcl
xchg
mov
in
sahf
mov
out
mov
add
or
vmwrite
mov
out
mov
xor
cmp
aaa
in
sub
sub
mov
mov
mov
mov
mov
mov
mov
test
mov
loop
loope
jecxz
in
out
fcmovnu
fucom
rcl
rcl
aad
xlat
lret
int3
lret
into
int
iret
add
test
jp
jns
std
jge
jg
jno
jae
jne
ja
imul
mov
addr16
test
mov
xchg
xchg
xchg
xchg
cwtl
xchg
mov
add
inc
ds
inc
aad
xchg
cmp
mov
cmp
stos
scas
sbb
into
ds
mov
aas
dec
test
jo
shrb
add
aas
jl
fisttps
sbb
xchg
mov
pop
mov
fisttpl
xchg
sahf
out
bound
mov
cmp
imul
fldt
jb
addb
js
jp
jge
test
lcall
pop
cwtl
scas
inc
lahf
mov
ror
mov
call
inc
cwtl
aaa
mov
mov
push
int3
popf
cltd
and
adc
add
push
mov
jbe
inc
xchg
out
mov
inc
push
cmp
push
fstpt
fldt
and
mov
xchg
movsl
into
ja
rcrl
push
xor
push
sub
cmpsl
stos
out
inc
sbb
filds
jbe
lahf
jae
pop
sub
xchg
xchg
push
pop
leave
push
cltd
cmpb
fwait
mov
sbb
lea
jmp
inc
test
mov
xlat
sahf
fistps
mov
cltd
mov
pop
lea
aad
jb
divl
mov
push
xchg
sahf
pop
add
addr16
cmp
cwtl
popf
add
adcb
out
jg
ja
filds
mov
push
imul
lcall
lahf
int
dec
mov
sub
das
aad
das
xor
vmread
cwtl
cmc
sahf
divl
test
fcoms
lret
aas
lret
ret
jb
push
cmp
bound
lea
fdivl
cmp
negl
das
out
iret
cmp
les
shll
xor
rcrb
and
shrl
aam
iret
mov
mov
lea
cmp
imul
add
out
cmp
pmuludq
sbb
inc
cwtl
pop
sub
dec
iret
int3
lahf
xor
fwait
loope
dec
push
cmp
shr
fstl
inc
pop
lcall
insl
scas
sbb
into
rorl
xchg
test
fwait
or
push
das
jge
mov
sub
and
sbbl
xchg
sbb
test
cltd
jmp
das
xor
inc
nop
dec
or
pop
sti
sbb
dec
insl
cmp
lahf
repz
sbb
push
mov
leave
fstps
dec
ficoms
mov
into
fwait
fs
leave
mov
jl
popf
xchg
insl
insb
sbb
mov
jae
push
xchg
mov
cmpsb
aad
cli
adc
pushf
xchg
xchg
pop
jl
ja
pop
nop
or
xor
pusha
fisubrl
mov
out
mov
mov
aam
jg
mov
jns
or
aaa
mov
cmp
cltd
and
mov
pop
mov
or
or
mov
mov
pop
mov
mov
in
mov
sarb
test
fdivp
fwait
std
cmp
xor
ss
xor
sub
cs
sub
arpl
gs
pop
pop
pop
pusha
pop
push
push
push
push
push
push
pop
push
dec
dec
dec
dec
dec
dec
push
dec
add
add
push
movl
std
add
repnz
hlt
repz
clc
imul
jmp
in
lock
and
and
es
and
sbb
push
sbb
adc
push
adc
or
push
or
vucomiss
imul
pop
outsb
aam
outsb
xchg
sbb
out
pop
inc
cmpsb
arpl
adcl
shl
jbe
pop
mov
dec
mov
xabort
mov
mov
mov
mov
cmp
push
push
arpl
mov
cmp
scas
jp
mov
jno
xchg
jnp
mov
sahf
mov
xchg
xchg
cmp
mov
sahf
cltd
icebp
mov
jno
xchg
mov
ljmp
jae
out
icebp
mov
out
cmp
pushf
and
divb
jge
stos
mov
lahf
sub
mov
shll
mov
cwtl
xchg
stos
xor
xchg
aas
mov
jp
mov
sbbb
mov
nop
insb
or
outsb
mov
add
lods
jb
mov
jecxz
dec
in
push
leave
pop
inc
ja
dec
mov
lods
sbbb
and
fwait
outsb
insb
jle
int3
leave
aad
jnp
in
sub
xor
fbstp
gs
out
or
rcll
push
mov
fistl
push
leave
jnp
mov
cwtl
sub
mov
mov
mov
xchg
inc
ret
mov
cmpsl
movl
loope
enter
mov
int3
andl
lcall
jae
adc
daa
xlat
mov
mov
out
mov
mov
popf
pop
mov
loope
jns
fcmove
sahf
fwait
inc
xlat
mov
xchg
mov
pop
int
inc
mov
xlat
mov
insb
mov
mov
cwtl
mov
jbe
xchg
leave
cltd
xchg
mov
xor
jl
jne
jle
sub
pop
imul
mov
inc
mov
enter
jb
mov
inc
jmp
out
or
sub
jmp
sub
fsubrl
add
fdivl
sub
and
loop
into
mov
jecxz
inc
cltd
ds
leave
lds
dec
push
addr16
dec
sub
arpl
rclb
leave
nop
jo
dec
xchg
pop
pop
cmp
mov
mov
mov
imul
stos
xchg
mov
jno
mov
xchg
inc
push
pop
pop
xchg
idivb
fcmovnu
scas
mov
dec
or
in
xor
iret
mov
out
testl
jl
jno,pn
ret
aam
jo
not
mov
dec
sbb
dec
mul
lahf
pmullw
jecxz
xchg
mov
movsl
sbb
sub
incb
fwait
inc
dec
scas
notl
cwtl
out
sbb
xor
pop
push
out
jl
inc
dec
iret
adc
inc
scas
cmpb
pop
push
jo
out
das
pusha
in
lcall
movsl
push
orb
pop
mov
call
lahf
stos
jbe
pcmpgtd
cltd
mov
repz
ret
fcmovnbe
add
and
out
push
xchg
cmpsl
add
iret
adc
pop
ds
repnz
xchg
push
movsb
daa
cmp
call
fcomps
cmpl
out
jecxz
sub
ficoml
inc
test
push
movl
lcall
jecxz
fists
sub
jl
daa
xor
push
stos
rolb
xchg
fwait
aaa
jl
lcall
xchg
inc
movsl
mov
test
lea
jo
mov
scas
dec
inc
jno
or
sub
lods
int3
jbe
hlt
xchg
decb
popf
cmpsl
mov
xchg
dec
jl
mov
fidivrl
xchg
pop
mov
jo
sub
or
jge
jb
mov
xchg
or
mov
test
xchg
cmp
jle
lods
lods
mov
arpl
lods
jl
push
jne
sahf
insb
mov
js
push
jb
push
in
cmp
jecxz
dec
sbb
roll
mov
or
ja
mov
in
push
fstl
lock
scas
scas
mov
ljmp
sti
lret
call
and
aas
cmpb
mov
xchg
inc
xchg
fstpl
jae
mov
mov
nop
rol
repz
xchg
add
insb
push
fwait
scas
lret
mov
leave
inc
xchg
in
sub
lcall
daa
add
mov
mov
lods
sub
lea
sub
mov
ret
jbe
or
frstpm(287
out
mov
add
lret
lret
aaa
jg
jecxz
xchg
leave
jecxz
out
into
scas
or
jnp
int3
jecxz
mov
scas
bound
fidivl
lods
sahf
fists
or
popa
sub
fistps
repz
rorb
pop
icebp
mov
stos
std
jp
jno
jns
jle
aad
xor
jmp
or
xlat
loop
aaa
dec
inc
leave
lahf
push
stos
cli
leave
adc
push
fidivrs
jecxz
notl
stc
lock
cli
fidivl
jg
or
imul
mov
aam
fildl
jb
fstpt
popf
inc
sub
fsubr
leave
int
scas
push
daa
sbb
mov
mov
inc
mov
fimull
jnp
das
mov
xchg
ja
mov
mul
dec
fildll
mov
and
bound
fwait
pop
cltd
ja
popa
sub
rorl
shlb
jp
insb
sbb
shrb
jno
push
pop
jne
imul
test
aaa
add
cmp
aaa
add
mov
testb
enter
rcrl
loop
rcr
xchg
or
adcl
cmp
pop
sti
mov
idivb
scas
daa
js
mov
sahf
rcrl
leave
fistpl
stos
in
ss
shll
mov
jo
xchg
sbb
leave
jle
dec
test
je
or
fldl
mov
pop
push
adc
bound
cmp
jbe
mov
fisttpll
pop
jge
jb
lcall
xor
aaa
and
adc
cmp
mov
stos
cmpsl
in
out
mov
sub
mov
lock
cmpsb
fldcw
mov
stc
sbb
mov
std
dec
loop
jnp
push
test
pop
mov
jge
daa
mov
mov
sarb
pop
mov
jecxz
mov
lods
popa
cmpl
bound
mov
into
bound
insb
ja
shrb
sub
jo
sahf
mov
scas
xchg
test
jecxz
mov
mov
dec
cmp
cmp
cmp
insb
cmp
sub
gs
mov
pop
aaa
rcrb
sub
push
addr16
cmc
leave
out
subb
sbb
push
rcpps
dec
dec
inc
test
loope
jg
mov
jns
add
pop
outsw
std
popf
out
mov
mov
push
enter
stos
iret
es
inc
push
xor
mov
scas
mul
ret
sbb
shl
sub
mov
xorb
and
push
dec
push
pop
shl
jle
outsb
jb
mov
loopne
outsb
inc
iret
mov
mov
rcr
scas
xor
mov
cmp
daa
ret
mov
pop
mov
cli
pop
and
imulb
mov
jp
dec
jl
pop
sbb
cmp
dec
pop
stc
movsb
into
addr16
imul
pushf
mov
pop
lea
daa
in
out
and
lret
mov
sti
xor
ret
dec
in
jle
mov
mov
or
jno
scas
psrlw
lret
xchg
jp
jg
ret
pop
mov
cmpsl
shlb
stos
mov
jnp
aas
xchg
fistpll
jg
sub
pop
xchg
lods
xor
test
loop
fabs
jnp
in
or
cmp
test
push
sub
fnstcw
out
fcmovnu
jnp
fidivrs
cmpl
fildl
jg
ret
fnstcw
enter
js
fsubrp
pop
ret
mov
test
cmp
sub
scas
stos
xor
jg
dec
jnp
xchg
adc
daa
test
ljmp
sti
flds
jnp
dec
xor
push
fistl
pop
sub
addr16
sub
aas
test
xlat
xchg
fistpl
fnstenv
xchg
xor
test
mov
jnp
jae
jmp
aas
dec
aad
stos
jae
call
rorb
pop
mov
aad
mov
cmpb
xchg
fcmovu
pop
or
imul
aam
jnp
or
sti
xor
mov
stos
lds
lret
test
mov
das
out
xor
jmp
or
stos
and
mov
test
cmpl
jnp
in
xor
test
jbe
xchg
loop
das
mov
fcompl
fnstenv
into
jnp
xchg
mov
cli
scas
xor
lahf
and
mov
mov
add
arpl
ds
or
das
lods
addr16
add
or
in
lret
mov
cmc
add
in
jne
out
gs
mov
xchg
pop
mull
loope
js
adc
cmp
mov
mov
gs
cmp
add
clc
enter
popl
cwtl
std
daa
xor
movl
jp
ds
outsb
loopne
adc
es
adc
push
push
pop
sbb
or
fdivrs
cmp
dec
enter
push
andnps
sti
rorl
mov
jmp
adc
jno
cs
jle
repz
mov
push
mov
jge
pop
mov
mov
bnd
outsl
jns
pusha
sub
test
dec
dec
push
inc
insb
or
jecxz
xchg
lds
sub
pop
out
imul
lcall
out
fisubs
mov
loopne
pop
inc
inc
es
xchg
jae
fs
mov
sti
fimuls
repz
mov
xchg
mov
fwait
test
js
shlb
test
in
rcrl
mov
ljmp
cmp
pusha
adc
dec
xchg
xchg
pop
mov
adc
int3
xchg
jns
push
out
sub
or
and
lcall
sbb
fdivs
sbb
rolb
sub
test
call
mov
mov
in
clc
enter
std
sbb
ret
test
call
outsb
mov
inc
call
lock
mov
jnp
ret
pop
adcb
cmp
adc
shll
inc
push
pop
sbb
fwait
inc
jge
outsb
movl
cmp
sub
xchg
roll
jl
pop
push
sbb
xor
iret
cmp
lock
cmp
cmp
rol
bound
int3
mov
leave
adc
sbbb
pop
jo
pop
cmp
pop
dec
leave
sbb
imul
fidivs
int
js
push
cmc
xchg
or
pop
pop
and
pop
std
in
and
mov
or
fldcw
cltd
mov
pop
mov
mov
mov
out
push
cwtl
stc
inc
mov
push
das
add
jns
mov
pop
shll
scas
stos
mov
mov
aaa
scas
mov
arpl
push
jo
pop
xchg
mov
xchg
lahf
adc
dec
orl
lods
xchg
xchg
popf
pop
add
mov
xchg
jb
popf
lret
test
out
adcl
data16
jne,pt
int3
jb
mov
outsl
xchg
mov
mov
fimuls
movsb
lea
mov
call
push
loopne
jae
lea
out
in
or
inc
ret
cwtl
xchg
pop
pop
push
mov
jl
popf
lcall
data16
jle
xchg
inc
lahf
iret
push
and
in
and
imul
jp
jnp
inc
cmp
outsl
ss
mov
mov
push
xchg
xchg
mov
xlat
in
into
xor
ret
jbe
and
inc
insb
lret
push
addb
mov
stos
ljmp
cmp
das
ret
data16
mov
or
ss
out
gs
loopne
jp
int
bnd
inc
and
sbb
adc
rcl
test
cmp
inc
and
jecxz
iret
jb
inc
out
gs
push
push
xlat
addb
inc
rcrl
shl
cmp
sbb
adc
or
test
and
or
ret
fcmovnb
ffreep
rol
xlat
ret
iret
ret
xchg
jnp
jg
jae
ja
imul
ret
pop
ret
cmp
ss
arpl
pop
ret
sbb
or
orl
xchg
inc
inc
test
std
orb
insl
mov
and
sbb
int
enter
xor
xchg
lret
rcrb
lcall
cmp
lret
mov
add
pop
ljmp
mov
mov
lea
inc
add
lock
sbb
jns
cwtl
data16
adc
vgf2p8affineinvqb
in
fisubrs
call
jnp
ja
mov
push
cmp
push
pop
push
icebp
push
or
xor
and
or
cmpl
sub
pop
adc
fstpt
shr
aad
enter
push
addr16
mov
orb
jg
mov
cs
and
in
daa
sbb
push
aas
push
jae
inc
out
mov
shl
shlb
sub
cmc
jmp
adc
leave
movsb
adc
int3
les
cli
xor
dec
mov
aas
jne
cmp
rcr
sub
addr16
adcl
iret
mov
into
jnp
lret
lret
addl
cld
jg
jae
ja
jo
xchg
or
or
or
pop
in
fcompl
pushf
pop
xchg
adc
pop
push
or
psubsb
test
adcl
test
mov
inc
dec
cmp
xchg
imul
in
inc
call
adcb
scas
jecxz
data16
xchg
sub
sarl
leave
cmp
jb
or
or
or
or
or
or
or
or
pop
mov
pop
fcoml
pop
xchg
jl
js
outsb
ret
cltd
ret
xchg
push
adc
ret
pop
ret
push
ret
ljmp
jae
imul
test
and
cmp
add
cld
mov
ficomps
sar
sub
jb
xchg
ret
cmp
retw
push
ret
push
ret
sti
ret
jmp
ret
sbb
fadds
mov
gs
in
push
lret
push
mov
push
inc
push
pop
push
adc
lret
leave
adcb
push
incb
sub
mov
test
dec
je
jae
fidivrl
ret
push
ret
ror
enter
ja
outsb
sbb
or
lret
cmp
push
ret
inc
ljmp
ret
test
test
xchg
test
or
xorl
popa
test
mov
mov
mov
int
jns
shrb
repnz
push
fwait
lahf
ud2
fwait
sub
inc
lea
pop
xchg
test
stc
mov
mov
andb
mov
pusha
mov
sbb
ljmp
shld
lahf
ret
mov
inc
ret
ds
cmp
cs
fs
push
ret
int
popf
mov
movsb
nop
aam
jne
push
mov
adc
pusha
ret
add
daa
fimull
out
sub
mov
daa
dec
cltd
inc
or
in
shlb
out
mov
lods
xor
pop
clc
repz
lcall
mov
bound
mov
pop
jle
outsl
pop
xchg
or
icebp
ret
push
or
mov
int
jne
xor
sub
push
cmp
sub
pop
dec
push
lahf
adcl
dec
pop
push
or
and
repnz
pop
cmp
push
xchg
or
inc
xchg
mov
sub
jne
jge
imul
mov
pop
pusha
sti
repnz
and
repnz
ljmp
mov
or
addl
dec
test
mov
mov
mov
into
mov
clc
fdivrl
cmp
sub
dec
lock
pop
jne
sub
in
xor
loopne
lcall
mov
jb
imul
adc
xchg
xchg
sbb
pop
sbb
adc
ret
push
pop
test
adc
inc
ret
aas
fstpt
and
ret
adc
pop
add
pop
test
aas
sbb
adc
or
and
enter
jl
mov
stos
sub
pop
jecxz
outsl
fistl
fisttps
rol
jg
ja
inc
mov
mov
mov
mov
lret
dec
xor
loope
dec
aaa
xor
or
mov
into
sbb
mov
lods
pop
fidivl
jecxz
rorb
data16
popf
iret
pop
imul
fiaddl
jge
pop
push
inc
xchg
inc
lea
inc
fs
pop
inc
push
inc
dec
inc
push
inc
pop
inc
es
sbb
adc
jecxz
test
jg
test
insl
fbstp
ret
pushf
ret
xchg
dec
xlat
cmp
popa
ret
mov
lahf
out
jnp
push
or
adcl
xchg
sub
pop
das
dec
push
cld
add
sbb
jecxz
rcrl
sbbb
adc
das
xor
mov
rcr
fildl
gs
add
shlb
pinsrw
jmp
nop
sbb
pop
aaa
addb
in
subl
xor
adc
pop
add
lcall
lret
pop
ljmp
pop
xchg
adc
pop
stc
or
psrad
lret
orl
subb
sti
inc
ret
pop
mov
in
lock
mov
jle
push
das
xlat
add
mov
aas
stc
or
psubsw
test
cmp
xor
arpl
inc
std
inc
adc
lods
and
das
out
and
ja
mov
pop
cmpsb
pop
aaa
mov
mov
outsl
mov
jp
cmp
xor
add
fidivrl
sub
repnz
in
daa
dec
test
js
adc
test
pop
cmp
xlat
fwait
aaa
les
mov
xor
stc
mov
iret
jb
add
rorb
aas
jb
test
fisubrl
mov
sbb
pop
test
fiadds
ja
mov
js
idiv
fwait
test
dec
divl
jmp
mov
mov
scas
jo
pop
lea
insl
adc
ss
mov
fs
pop
push
sbb
arpl
test
gs
mov
sub
pop
push
and
jnp
xchg
mov
xlat
add
mov
and
fildl
sub
mov
pop
rcll
push
inc
mov
jge
or
pop
in
and
dec
push
les
int3
lret
loopne
addb
jg
jae
jmp
add
push
mov
mov
lret
stos
sbb
xchg
cmpsb
mov
mov
rcll
fstp
into
pop
out
out
gs
in
push
push
push
jecxz
mov
js
test
cmp
outsl
loopne
dec
and
sbb
ljmp
xchg
mov
mov
xor
ficoml
test
push
mov
mov
inc
jns
xchg
mov
inc
adc
cmp
or
xor
jne
pop
inc
pusha
cmpsb
push
dec
mov
add
or
daa
jl
mov
and
stos
lret
int
rclb
iret
mov
popa
jns
sub
lock
testb
push
aad
aaa
xchg
dec
lods
jecxz
push
out
sub
cld
xlat
aaa
in
stos
or
xor
shlb
test
jne
adc
inc
aas
ja
fcmovnbe
mov
pop
pusha
fsts
add
or
add
and
and
and
and
sbb
mov
xlat
mov
shrl
xchg
outsl
xchg
or
push
jecxz
mov
gs
test
rolb
lret
sbb
pop
xor
cmpsb
fistpll
sar
pusha
sti
add
and
sbb
jmp
adc
or
pop
ret
cmp
jecxz
out
gs
cmpsl
sub
pop
sti
aas
mov
sub
pop
lahf
dec
aas
cld
pop
in
sti
sbb
or
pop
mov
pop
jg
lods
in
sub
ja
pop
stos
cmp
inc
aaa
bswap
ret
aaa
pop
lods
lret
dec
xorb
aas
subl
loopne
mov
das
gs
call
push
sub
cmp
dec
or
or
or
xchg
add
inc
jmp
and
inc
adc
inc
ret
lods
mov
jecxz
sar
push
sbb
jae
imul
fwait
sar
adc
cmp
mov
subb
das
inc
arpl
add
pop
out
dec
cmp
dec
or
or
adc
sti
ret
repz
jmp
sti
and
cmp
or
or
or
insb
aas
out
mov
lods
dec
in
push
out
fldt
push
lret
incb
imul
mov
mov
xchg
or
mov
insl
mov
jb
jle
or
mov
mov
stos
leave
mov
xchg
sbbl
dec
testl
test
cltd
cwtl
fcom
sbb
add
test
stos
cwtl
ja
out
lret
jnp
leave
adc
test
gs
cmp
pop
mov
dec
sbb
push
pop
lea
pop
dec
or
testb
dec
cld
dec
pop
push
dec
dec
add
inc
scas
jo
cltd
out
jnp
dec
fbstp
and
les
shll
clc
push
repnz
push
imul
das
sbb
sbb
mov
daa
add
mov
sub
dec
addl
add
xor
aam
lahf
in
ret
adc
jle
xchg
xchg
inc
cwtl
and
and
outsb
rcl
add
test
cwtl
cmp
popf
paddsb
mov
jns
imul
int
aad
mov
movsl
add
inc
and
or
loopne
and
inc
mov
xchg
mov
inc
and
jae
fdivs
aaa
cmp
pushf
pop
sub
jnp
ret
mov
inc
cmp
and
xlat
faddl
jnp
loopne
lea
mov
jp
stc
sbb
nop
and
int3
cmp
mov
rclb
mov
enter
mov
mov
jl
add
pop
sbb
js
aam
scas
fists
int3
xchg
mov
xchg
jmp
mov
in
imul
or
mov
fwait
pop
xchg
jo
test
jg
jno
add
aad
subb
ret
jge
repnz
cmp
sahf
js
add
pop
xchg
test
mov
fdivl
push
jmp
popf
fstp
xchg
js
dec
jp
outsb
cmp
jecxz
cwtl
xchg
cmp
test
and
jp
xchg
stos
xor
ficoml
mov
add
add
pop
lods
lea
inc
cltd
ljmp
das
and
mov
fwait
pop
rcll
insl
jbe
loop
test
cwtl
mov
nop
scas
sbb
mov
jmp
fnstsw
sbb
arpl
mov
add
fcomp
fmul
lret
mov
lret
mov
into
adc
cmc
fadds
stos
mov
int3
int
or
int
sbb
mov
xlat
iret
mov
lcall
jle
insb
js
mov
sbb
push
lods
out
add
xor
or
mov
into
jp
icebp
lahf
fisubrl
dec
add
or
inc
out
shrl
xor
sbbb
jg
mov
fcomps
ds
ljmp
in
imul
lcall
xchg
fcmovu
push
inc
adc
test
or
pusha
xchg
inc
orl
adc
inc
mov
imul
lret
fnstenv
mov
lret
mov
scas
leave
stos
xchg
loope
lret
leave
fwait
mov
sub
out
repnz
add
adc
xchg
and
test
nop
xchg
lcall
aas
cmp
mov
testl
ret
lret
jge
mov
pop
and
mov
push
mov
sub
call
sbb
inc
inc
jecxz
iret
xchg
xchg
mov
push
jbe
cmpb
in
inc
jmp
ret
jb
pop
nop
sub
out
inc
out
stos
ja
adc
pop
dec
dec
shlb
lcall
push
push
ficoml
insl
mov
loopne
test
aad
out
fadds
rcl
pop
jbe
lea
jg
cmp
inc
in
sub
lea
sub
or
cmp
insb
pop
mov
push
leave
xchg
jge
mov
filds
jmp
dec
aas
push
jb
popf
outsl
fcomps
nopl
scas
loope
leave
or
xchg
pop
mov
das
pop
sub
lret
imul
lods
mov
and
mov
cmp
mov
sub
jnp
loope
rclb
ficoms
sub
jae
fsubrs
jb
insb
fsubrs
aaa
out
mov
aaa
pop
ds
leave
jne
scas
adc
mov
call
push
iret
sti
lahf
sbb
sbb
fcomip
fwait
dec
aaa
das
adc
ds
jp
xchg
ret
lock
xor
lahf
bndldx
mov
jp
jns
movsl
xchg
jo
sahf
sbb
fwait
imul
insb
xchg
aad
pop
xchg
jecxz
sahf
xchg
xchg
loope
lret
fstl
pop
pop
jge
lcall
mov
es
icebp
in
xor
jle
dec
xchg
aas
cmp
lahf
jmp
mov
icebp
sub
mov
lret
and
pop
in
xchg
sbb
pop
jg
xor
mov
inc
jnp
popf
jae
push
int
fsubrs
stos
out
dec
adc
bound
xor
stos
mov
fidivrl
lea
mov
jmp
jne
or
mov
int3
xchg
mov
mov
xchg
cmp
inc
jl
pop
inc
inc
roll
rcl
or
xor
loop
mov
andl
mov
cmpsl
sbb
scas
mov
insb
mov
in
pop
iret
push
xchg
scas
push
lea
mov
fldenv
outsb
xorl
leave
xchg
cmp
lock
lret
test
les
insb
sbb
daa
xchg
aad
hlt
popa
jne
fdivrs
xchg
rorl
mov
cmp
push
inc
nop
fldt
push
jno
sbb
pop
les
xlat
pushf
or
mov
cltd
jecxz
cwtl
loop,pt
adc
in
xchg
pop
loop
dec
push
sbb
dec
orl
xor
out
mov
rclb
and
mov
xor
lret
aad
stc
lret
add
pop
out
leave
cmp
sbb
push
enter
add
stos
pop
or
fldcw
shl
cld
push
sti
cmp
sub
dec
add
cmpsl
in
ds
test
xchg
jg
sbbl
loop
mov
mov
mov
lahf
out
pop
adc
pop
jmp
frstor
fisubrs
lds
push
pushf
into
subb
int3
xchg
out
lret
gs
into
mov
shrb
rclb
out
sarb
nop
pop
lret
into
sub
inc
jg
sbb
jp
or
push
cmpsb
jnp
aaa
mov
jg
mov
stos
dec
into
shll
dec
jnp
ss
mov
pop
sarb
mov
jle
xchg
xor
jg
mov
in
iret
leave
mov
mov
xor
test
scas
loopne
push
fdivp
in
inc
mov
mov
fistps
xlat
xor
enter
addl
in
mov
adc
test
ljmp
subl
cmp
div
jbe
xchg
outsb
xor
pop
xchg
mov
push
push
mov
cmp
popf
testl
mov
fwait
lods
sub
int
enter
sub
aaa
leave
pop
fwait
rorb
xchg
inc
shlb
dec
test
cwtl
mov
jp
repnz
or
push
cli
ss
iret
add
xchg
out
int3
jl
mov
mov
fists
cltd
gs
pushf
pop
and
les
in
dec
push
scas
rorl
or
jne
sub
pop
cmp
out
dec
jp
and
mov
loopne
xor
sbb
mov
xor
in
inc
stc
nop
das
dec
cmp
fisubrl
icebp
in
test
lods
mov
mov
arpl
sbb
test
fcomps
lahf
mov
subl
out
jne
insb
mov
les
out
loopne
xor
pop
push
fldl
clc
es
jns
xchg
les
imul
out
push
mov
aam
test
mov
into
fstps
cltd
cmp
iret
lock
outsb
lods
stos
ss
xor
rcll
mov
aam
inc
pop
pop
fwait
loopne
arpl
add
push
out
jg
divb
mov
outsb
insb
adc
cmp
imul
mov
mov
fsubrp
in
jg
ret
dec
rol
xchg
mov
enter
add
shlb
nop
fcmove
adc
sbb
sbb
lea
jb
out
inc
lods
cmp
xlat
mov
into
add
inc
xor
dec
sub
or
cs
sarl
inc
xchg
or
loopne
xor
fistl
or
mov
xchg
xchg
sub
stos
lret
and
or
sti
sbb
fwait
es
fwait
jo
push
xchg
mov
pop
jns
inc
jno
adc
add
aas
sahf
fmul
fstps
xor
ss
fisubrl
jle
test
jne
hlt
int3
push
pusha
xchg
push
sbb
imul
loope
ret
ljmp
or
lret
xlat
jp
add
outsl
adcb
inc
enter
xor
aam
ror
mov
sub
or
shlb
shll
adc
cmp
xlat
dec
jne
negb
lret
pushf
xor
jne
jmp
cmp
mov
xchg
sahf
mov
in
jb
xchg
and
sub
icebp
test
fimull
shl
enter
jnp
lods
in
fmuls
xchg
fiadds
jg
out
bound
out
loope
dec
add
xchg
lods
faddl
nop
jno
pop
js
cmp
dec
fiadds
mov
sarb
add
hlt
mov
jns
jmp
dec
lea
jle
push
mov
sbb
mov
lcall
sbb
sub
inc
dec
in
ss
cmp
mov
leave
sbb
fwait
mov
inc
pop
pop
add
adc
cmpsl
int
adc
xlat
or
mov
dec
lret
repnz
out
push
int3
fstpt
and
pop
pop
jne
sti
or
pop
xor
scas
into
iret
sbb
in
shlb
jnp
jmp
xchg
sbbl
shr
loopne
push
lcall
mov
flds
stos
iret
hlt
ss
imul
cmpsb
fadd
imul
rolb
pop
subb
or
mov
fldt
and
insb
mov
fisttpll
dec
popa
dec
jbe
jmp
jno
out
pop
xchg
push
jno
cs
hlt
int
shrb
or
leave
jb
imul
mov
cmp
adc
inc
bound
mov
cwtl
jp
movsb
push
rorl
adc
gs
cmpsl
dec
mov
pop
push
adc
in
push
mov
std
shlb
cmpsl
fmul
push
mov
enter
icebp
mov
fistl
inc
jno
icebp
jge
jae
sub
int3
inc
lret
jl
cwtl
shll
test
sub
inc
push
cmp
data16
push
jns
xchg
mov
stc
ljmp
push
jl
sbb
cltd
push
lret
pusha
adc
fnsave
or
jmp
push
or
rcr
adc
iret
mov
pusha
add
in
int
stos
mov
sub
xchg
dec
jmp
pop
cmpsb
dec
xor
rorb
jg
or
enter
hlt
jne
xor
aad
int
adc
xlat
into
jmp
je
fsubrs
or
dec
fcoms
scas
or
jle
add
lret
cmp
sbb
dec
call
in
shlb
dec
mov
aam
int3
sbb
push
mulb
fisttps
xchg
push
cs
pop
mov
in
push
mov
addl
xor
lret
or
jp
std
test
adc
xlat
mov
adc
and
mov
cmp
cmpsb
subw
enter
push
mov
cmp
mov
dec
cltd
insl
xor
ret
lock
push
fbstp
and
imul
fimuls
dec
jge
fists
mov
aad
mov
cmc
xchg
sar
jo
xchg
sbb
ret
dec
and
xchg
sub
dec
fcmovnbe
lock
pop
sub
xchg
push
enter
add
std
dec
in
or
sub
mov
imulb
jae
ljmp
in
repz
sub
repnz
lret
aam
into
xor
out
out
jmp
push
fistps
jl
xchg
fwait
out
dec
aaa
sub
cmp
adc
adc
fcmovnb
mov
adc
shll
pop
jns
push
push
lea
enter
mov
in
jmp
cli
enter
push
xor
repnz
xor
and
sbb
into
mov
push
mov
jmp
mull
inc
and
or
sub
inc
mov
repnz
les
dec
out
fwait
je
ficoms
mov
sbb
sub
popf
dec
mov
test
or
xor
mov
push
mov
js
movsl
xchg
mov
jne
shrb
push
push
iret
fimuls
mov
jmp
adc
mov
inc
lret
xlat
mov
ficoml
adc
or
das
and
adc
mov
fidivrs
mov
cmpl
mov
sti
fxch
into
dec
pop
rolb
jb
js
imul
fwait
xchg
in
in
mov
pop
jge
mov
lahf
pusha
dec
xor
sbb
aaa
sti
lahf
cmp
cmpsb
loopne
xor
sub
sbb
push
jns
lds
push
jl
push
cs
push
add
orl
movsl
push
xor
sbb
push
sti
sbb
or
ret
mov
push
cmovge
mov
push
sub
dec
pop
adc
inc
push
fs
data16
bound
push
in
decl
nop
push
add
sbb
test
data16
adc
jo
cwtl
and
sbbl
inc
xor
or
push
mov
jb
push
jns
iret
fdivs
fs
leave
ret
cmpb
sbbb
push
sub
ja
jmp
cmc
popa
repnz
inc
xor
push
cltd
xor
inc
test
popl
loopne
xor
inc
fcoml
rcrl
or
jbe
mov
popa
data16
pop
daa
add
jae
or
adc
popf
and
lea
fsubrp
or
cmpsl
mov
cmpsl
adc
das
lret
inc
xchg
and
jg
inc
pushf
adc
xchg
mov
or
xchg
push
jne
adcl
jmp
jns
movsl
jg
shl
inc
mov
ja
adc
popa
push
test
xor
fistpl
ret
sub
movsb
in
lods
lret
lahf
push
rol
push
into
aad
sub
pop
mov
inc
testb
push
xor
in
imul
push
mov
xor
mov
dec
and
lods
sub
add
int3
test
bnd
pop
lahf
insb
jg
into
clc
xchg
iret
xlat
lock
sub
jno
loop
xor
into
int
cmc
inc
push
jne
orl
xor
lods
rorl
sub
data16
jbe
lret
sbb
cmpsb
pop
mov
movzwl
dec
in
dec
jns
and
jb
adc
mov
adc
pop
cli
add
in
adc
faddp
data16
and
xchg
or
shrl
mov
inc
adc
out
add
into
xchg
sub
sbb
in
insl
dec
or
jl
insb
outsl
jns
fistl
mov
gs
nop
int
jmp
xor
data16
lret
mov
nop
mov
xchg
mov
sahf
lretw
inc
fucomi
and
lds
lea
mov
dec
dec
adc
dec
sahf
and
test
mov
nop
add
insl
cmpl
imul
jne
outsb
lahf
jle
or
scas
popf
nop
mov
mov
jb
jns
jo
push
lods
das
mov
pop
fisttps
mov
fwait
jno
jle
jge
sahf
repz
jp
jbe
insl
orb
pushf
jae
xchg
outsb
pusha
insb
lcall
jle
dec
inc
fsubs
jae
xchg
fwait
aam
nop
jl
aaa
imul
jns
int3
mov
push
sub
aam
into
jno
cld
xchg
nop
cmc
arpl
inc
jb
xchg
mov
adcb
iret
in
dec
mov
mov
cltd
insl
mov
lret
inc
gs
test
mov
or
mov
je
test
mov
jle
xchg
cwtl
into
xchg
pushf
insb
xlat
lcall
xchg
js
fidivl
aam
pop
int
or
mov
xchg
inc
rcrb
inc
outsl
pop
mov
inc
mov
nop
ja
inc
xchg
addr16
mov
xchg
inc
xchg
pop
arpl
jg
imul
xchg
jns
inc
insb
lahf
js
xchg
fistpl
stos
xchg
popf
jno
jbe
cwtl
rcll
jge
iret
js
insl
jecxz
lret
popf
insb
js
out
outsb
mov
jbe
adc
aaa
stos
subl
cltd
xchg
jge
pop
arpl
mov
jg
dec
dec
cmpl
fwait
xchg
jg
lcall
xchg
imul
test
xlat
sbb
xchg
add
jnp
leave
jns
outsl
mov
into
pop
mov
cmp
jl
arpl
dec
outsl
fbstp
in
into
mov
aam
jnp
jae
rclb
test
nop
add
popf
jbe
aam
lret
fidivrs
lahf
adc
mov
pop
sahf
imul
pop
outsb
xchg
jge
xlat
int
jg
mov
subb
insl
arpl
lds
jecxz
xchg
mov
pushf
mov
nop
ja
mov
andb
rclb
js
cmp
mov
pop
ja
ror
adc
xor
insb
cltd
push
sahf
adc
lahf
jo
fucomi
jg
insl
xlat
jno
int3
cld
fsubrl
ja
popf
in
inc
jo
cltd
push
lea
insb
subb
xchg
jge
mov
out
xlat
imul
jl
das
lcall
pop
outsb
xchg
lahf
je
jbe
aam
cltd
sbb
in
arpl
nop
mov
inc
fcomps
dec
mov
inc
lret
inc
imul
lcall
insb
cmc
lahf
xchg
pop
daa
jae
ja
fwait
xlat
fstl
dec
xchg
adc
mov
decl
xlat
jp
das
nop
sub
mov
std
shr
add
mov
outsl
xchg
cwtl
les
icebp
insl
jbe
stos
jo
shrb
cmpb
int
pushf
xchg
sub
out
xchg
jge
aaa
iret
stos
jne
inc
pop
adc
jb
aam
jo
pop
mov
addr16
in
ret
outsl
lods
popf
jle
movl
xorb
jae
cmc
mov
jb
xchg
xchg
jbe
iret
jae
lcall
jns
jle
mov
mov
mov
fcmovbe
xor
lret
inc
aam
lea
nop
inc
int
add
je
lret
das
movsl
das
shrb
mov
in
adc
and
pop
xor
nop
int3
jg
xor
jo
cwtl
jne
sti
or
dec
popf
lret
mov
out
pop
push
rclb
inc
lds
mov
or
lahf
mov
dec
jp
adc
cwtl
jns
jl
jnp
cmp
pushf
push
imul
xchg
adc
sarl
cmp
xor
jno
xorl
cmpsl
xchg
jnp
mov
arpl
lret
fistl
add
jecxz
lea
mov
outsl
pop
add
pushf
into
setno
cltd
inc
jl
int
jnp
fwait
inc
bound
jns
jne
jae
jnp
das
mov
outsl
addr16
mov
cltd
mov
arpl
jb
imul
xlat
jbe
outsl
inc
ficoml
shrb
cwtl
lock
jl
jne
sbb
lock
xchg
inc
sbb
aas
test
mov
jae
and
in
outsb
xchg
jno
iret
ret
dec
pop
mov
dec
inc
and
jp
outsl
sbb
jg
jae
roll
mov
mov
fs
imul
ja
xlat
push
aam
mov
jle
mov
push
mov
push
jbe
xor
add
lahf
outsb
inc
stc
jl
outsl
jne
xchg
mov
sub
lahf
inc
pop
imul
outsb
pop
jg
adc
pushf
cwtl
jge
pop
jnp
je
dec
jns
lcall
inc
test
je
imul
adc
out
adc
pushf
loope
subb
jecxz
mov
sbb
rolb
fs
lret
popf
push
cmp
std
orb
jg
mov
insb
leave
fwait
pusha
xlat
dec
inc
jae
das
add
mov
cmp
jns
push
pop
jg
lea
lds
cwtl
lret
inc
daa
jne
outsb
subb
cltd
lcall
mov
movl
sahf
jl
jbe
mov
popf
mov
mov
mov
jge
jp
mov
insb
in
popa
popf
int
faddl
jb
mov
ds
mov
int
cmp
lea
xchg
mov
inc
mov
mov
fcmovbe
lcall
push
mov
cmp
iret
lret
pushf
mov
mov
xchg
jle
movsb
inc
or
push
aaa
jge
xchg
popf
pushf
mov
jl
adc
sahf
outsb
xchg
mov
loope
jle
orb
pusha
mov
aam
jne
pop
popa
lahf
iret
subl
jae
adc
xor
mov
rolb
je
mov
jg
rcr
or
imul
into
jl
cmp
cmp
mov
jnp
cmp
jl
cltd
pop
iret
repz
cmp
outsb
mov
aam
clc
iret
leave
iret
lret
xchg
gs
outsl
pop
mov
pushf
outsb
into
xchg
push
cltd
push
mov
repz
xlat
insb
sahf
fcmovu
lret
push
xchg
jo
lods
jns
cwtl
xchg
xchg
addl
jae
mov
imul
push
lret
lods
xlat
mov
mov
lret
lcall
mov
xchg
cltd
jae
sub
sar
daa
xchg
xlat
cwtl
mov
ja
sub
mov
out
mov
mov
fwait
das
dec
lds
sahf
mov
mov
rcrl
inc
jne
sbb
pusha
push
sub
arpl
shrb
jg
mov
cwtl
xor
insb
ds
jb
mov
jnp
jp
xorb
shrl
inc
js
fidivl
cld
mov
and
jg
jo
iret
shr
inc
xchg
imul
out
std
arpl
pushf
mov
out
mov
ds
cmp
rcrb
lahf
mov
jp
js
adc
movl
nop
imul
je
lret
push
push
jb
imul
fadds
jae
mov
jle
cmp
pop
out
xchg
jne
nop
mov
mov
jle
mov
ja
xlat
jle
pop
or
mov
xchg
jl
filds
xorb
mov
outsl
imul
data16
jb
jl
test
add
adc
sahf
bnd
test
leave
mov
lea
push
imul
scas
mov
jns
je
icebp
jns
xchg
pop
les
loope
int3
sahf
cmpxchg
rcrl
pop
outsl
popf
inc
mov
fwait
mov
cwtl
xchg
aaa
push
add
add
add
xchg
mov
insl
aam
and
ret
addr16
jp
xchg
lret
fildll
addr16
jae
outsl
mov
jmp
fcomps
mov
xchg
popf
das
inc
add
lahf
into
leave
or
cmpsl
aam
mov
lret
xchg
mov
int3
xchg
jns
outsb
pop
mov
fdivs
mov
lret
inc
lcall
jnp
int
je
xchg
ja
int3
arpl
fisttpll
fstpt
subl
and
rcl
jecxz
inc
int3
lret
mov
mov
inc
aas
addr16
popf
lret
dec
cmp
xchg
fcoms
ljmp
and
mov
and
mov
js
mov
outsl
mov
mov
and
pop
cmp
xchg
nop
lret
sbb
dec
inc
lods
mov
outsb
mov
jo
and
dec
rcpps
push
cmpsl
xchg
jg
loope
inc
aam
cmp
jbe
xchg
jae
and
add
inc
in
sub
imul
nop
mov
and
sbb
insl
jno
sarl
jg
fisttpll
jne
out
iret
xchg
fld
shlb
jp
insb
sahf
add
xchg
int3
inc
xchg
push
mov
cltd
iret
int
jl
nop
jno
jb
add
je
sbb
insb
jbe
xchg
mov
jo
xchg
call
jp
les
mov
imul
sahf
popf
das
push
push
sub
xlat
insl
jmp
leave
jo
int3
js
mov
lcall
mov
xchg
lret
or
fistpl
push
jne
sbb
jle
sbb
daa
mov
xchg
xor
mov
aad
nop
mov
jge
or
xor
lret
shlb
add
imul
xchg
sub
leave
mov
js
push
mov
repnz
lcall
mov
mov
mov
insb
js
cwtl
fwait
mov
xchg
iret
pop
pop
cmpsl
mov
jg
or
subl
js
add
xorb
pop
sub
ljmp
out
subb
inc
lcall
pop
in
jns
lcall
inc
sarl
lds
cmp
mov
dec
xchg
mov
mov
jmp
sub
mov
or
pushf
mov
arpl
xlat
rcl
popf
pop
ja
int
hlt
into
push
sub
jns
mov
imul
cmp
jl
js
es
cmc
mov
lcall
add
pop
nop
js
cltd
insl
xchg
and
mov
sub
shlb
out
jne
xchg
aas
andb
inc
outsb
iret
pushf
inc
and
int3
into
or
cltd
das
cmp
fs
imul
stos
imul
mov
bound
outsb
lret
cwtl
push
cmp
inc
mov
std
pushf
fistpl
mov
js
daa
mov
jg
int
mov
lret
inc
iret
popf
lea
fidivrs
jne
lcall
nop
mov
jno
xchg
insl
lods
ja
jmp
dec
leave
jae
inc
or
jo
insb
mov
push
inc
das
adc
arpl
fwait
lods
xchg
mov
mov
pop
cmp
jo
cltd
inc
cltd
jmp
lret
jne
push
movl
xor
mov
cli
mov
mov
jg
push
call
sarb
ja
outsl
sahf
mov
setge
adc
int
cli
test
stos
pushf
mov
mov
jne
sbb
mov
xchg
adc
mov
jg
leave
mov
aam
mov
ja
xchg
lcall
and
jge
inc
ret
imul
mov
pop
inc
jl
popf
push
shr
imul
push
rol
mov
jns
jbe
into
aaa
xlat
scas
xchg
leave
sahf
dec
int
dec
imul
pop
sub
out
inc
out
xchg
jg
pusha
aad
lock
fwait
jae
xlat
sbb
pop
mov
mov
into
jne
ret
sub
in
add
jle
cltd
jb
pop
out
pushf
mov
push
jge
je
or
movaps
insb
mov
lahf
inc
add
and
xor
inc
ja
jb
jmp
lea
xchg
mov
jns
pusha
stos
mov
cltd
shlb
inc
jp
leave
imul
lcall
xchg
mov
icebp
lea
nop
or
pop
adc
jno
mov
lret
outsl
lahf
jg
je
arpl
rclb
scas
cmp
lcall
int
pop
mov
jb
cs
cltd
mov
outsl
inc
push
jae
xchg
mov
sbb
jbe
adc
outsl
adc
xor
or
xchg
cmc
push
test
rcll
jp
lcall
outsl
fdivrs
xchg
xor
jbe
adc
cmp
pop
jae
mov
push
icebp
fidivrs
mov
lea
inc
nop
jnp
int3
fadds
dec
insb
rorb
js
ficoml
mov
mulb
fildl
jnp
mov
xchg
pushf
sub
aam
dec
xchg
cwtl
outsb
xchg
adc
jp
inc
dec
in
mov
lret
jge
das
int
sahf
aaa
push
inc
pop
xchg
pop
mov
into
int
int3
inc
mov
xlat
outsl
mov
fwait
dec
lahf
xchg
lret
lcall
repnz
xchg
mov
fwait
je
cmp
stc
adc
jb
push
jle
aam
loope
cltd
imul
imul
or
mov
adc
fndisi(8087
je
mov
sub
inc
lcall
lret
pop
int
pop
jle
lret
imul
inc
jg
sahf
nop
lret
pushf
hlt
and
ja
xlat
out
lea
inc
jge
dec
xchg
push
inc
xchg
js
mov
adc
lret
or
inc
jl
imul
and
stos
pushf
add
int
jg
mov
andb
cmc
jp
mov
mov
jae
jg
cwtl
jae
inc
or
pop
mov
dec
addr16
ja
or
xchg
jl
mov
lea
cmp
mov
mov
sbb
pop
mov
fmul
sarb
lcall
push
jno
punpckldq
adc
inc
jae
xchg
test
aas
lods
inc
mov
cmovge
mov
lret
into
mov
lahf
fs
ds
sbb
rcrb
xorb
jb
fcmovnu
cwtl
jo
xor
cmpsl
jno
mov
sahf
and
xlat
sar
pop
lahf
and
outsl
movsl
mov
xchg
cltd
adc
jbe
add
xchg
pushf
inc
hlt
jg
fisttps
xchg
arpl
jae
fwait
xchg
dec
aam
sahf
cmpl
mov
stc
outsl
xchg
ja
xlat
nop
sahf
mov
jo
rorb
outsl
inc
or
lret
insl
jl
mov
xchg
addr16
adcl
jne
xor
sahf
xor
push
arpl
and
jl
cmpb
jns
mov
cmpsl
sti
push
xchg
cwtl
sarl
into
imul
cmc
fwait
adc
jns
jnp
add
fadds
xchg
leave
jp
inc
lea
mov
int
fadd
and
outsb
daa
xchg
push
jae
movsl
shrl
mov
cwtl
jge
push
mov
jne
jg
rorb
insl
mov
js
fdivs
push
xchg
sub
push
mov
jge
daa
fcmovnbe
jle
jae
or
push
into
enter
jno
mov
clc
jns
jge
lret
daa
icebp
xchg
mov
cwtl
insl
outsb
mov
nop
lcall
push
cmpsl
test
cmc
add
outsl
lahf
mov
das
call
fwait
jmp
cmpsl
lret
jae
ja
lea
out
add
xchg
int
arpl
pop
mov
hlt
add
xlat
jg
ret
xchg
les
test
xchg
mov
mov
imul
je
sub
inc
mov
mov
or
lahf
mov
jo
icebp
lcall
fisubrs
cld
pop
jno
pop
pop
fmuls
mov
test
xchg
dec
inc
das
xorb
pushf
iret
subb
mov
outsb
mov
enter
sbb
ja
nop
inc
cmp
push
rcll
pop
shll
jne
cmp
imul
mov
mov
mov
into
ret
fadds
mov
xor
xchg
mov
gs
lret
push
ljmp
jg
fdivrl
addr16
fcoms
jb
jbe
push
outsl
orb
mov
xlat
xchg
mov
ja
les
das
ja
lea
ja
mov
mov
or
nop
lcall
js
fwait
jl
int
jle
jg
jg
test
addb
int3
scas
imul
sbb
iret
mov
sbbb
xchg
je
subb
xchg
mov
iret
outsb
jne
dec
mov
lahf
mov
xlat
adc
cmp
push
jae
lea
fcomip
fistpl
js
add
cmpsl
arpl
jl
jns
fwait
add
cwtl
xchg
xchg
or
inc
jb
fdivs
mov
pop
lcall
arpl
imul
fdivs
xchg
lret
cwtl
sahf
xchg
jo
ds
jae
nop
adc
cmpsl
mov
or
lcall
lret
push
and
ja
leave
jg
sarb
fildl
dec
cmp
insl
cmp
lret
out
mov
jecxz
cmp
js
jl
adc
out
xchg
outsl
int3
jge
popl
jl
jp
sti
sbb
or
push
orl
mov
add
or
outsl
imul
jne
jne
xchg
xchg
jae
dec
fistl
test
xor
idivl
mov
pop
push
dec
sbb
out
fcomps
cltd
js
push
or
mov
aad
jne
inc
mov
mov
lret
and
jp
xchg
xlat
rcrl
enter
xchg
daa
int3
lret
divb
xchg
js
mov
movsb
cmp
inc
das
inc
push
xchg
mov
dec
xchg
jge
xchg
jo
mov
inc
pop
and
adc
hlt
out
adc
dec
imul
mov
aaa
cmpsb
call
iret
add
jbe
out
mov
mov
jne
adc
cwtl
jnp
sarb
lahf
sbbb
ja
ja
jmp
jnp
lcall
ja
mov
jge
pop
andb
mov
outsb
das
fisubl
cltd
mov
aaa
sbb
push
ja
adc
popa
pop
addr16
sub
cmp
rorb
aas
test
punpckhdq
popf
data16
int
mov
adc
or
filds
mov
test
pop
lret
repz
cmpsl
mov
dec
iret
sbb
mov
push
mov
stc
aam
mov
sti
xchg
cld
jo
push
cmp
mov
pushf
mov
fsub
cmp
mov
fidivrs
adc
test
push
mov
arpl
mov
add
mov
ret
mov
test
add
popf
mov
js
imul
int3
sahf
jbe
fwait
mov
add
jge
mov
xchg
aas
movsb
jmp
addr16
mov
nop
leave
jb
arpl
insl
xchg
xor
mov
inc
push
fmuls
cmpsb
mov
movsl
jae
test
jmp
mov
jno
test
call
mov
jo
xlat
xchg
outsl
jns
xchg
push
imul
in
sar
lods
jg
inc
cli
outsl
test
lahf
inc
adcb
mov
aaa
xchg
nop
aam
pushf
ret
out
or
mov
addr16
js
sarl
sahf
inc
das
mov
xchg
cli
lret
xchg
ja
pop
outsb
inc
jo
popf
int3
xchg
fidivrs
dec
js
ja
jmp
fnstsw
int3
out
jbe
mov
jl
xchg
sahf
cld
mov
mov
jnp
inc
lret
outsb
leave
jae
mov
xchg
iret
rol
pushf
jp
cli
jg
xchg
insb
outsl
cltd
cmpsb
fwait
push
xlat
jle
jge
jno
sbb
jb
xor
mov
mov
mov
insl
bnd
sbb
repz
mov
outsw
jo
mov
ss
rcrb
and
sub
insl
cmp
stos
jg
add
mov
sarb
hlt
arpl
push
cmp
nop
jle
jnp
mov
aam
mov
mov
aad
mov
inc
push
jle
xlat
sbb
lahf
aam
aam
fmul
out
push
cmp
jne
adc
push
ds
cmp
mov
pop
xor
mov
fdivrp
stc
inc
sbb
push
loope
pushf
shll
rcrb
enter
aam
std
insl
mov
sahf
orb
je
add
mov
xchg
mov
xchg
or
adc
cmp
cltd
lret
lcall
jl
xchg
lcall
jae
imul
sub
out
fwait
xchg
push
cmp
cld
xor
jp
lret
inc
lods
push
mov
out
sub
dec
mov
outsb
fcoms
mov
mov
fwait
arpl
mov
jo
pop
mov
cmpsl
das
mov
inc
lret
inc
mov
dec
call
outsl
xlat
jne
jge
sub
jle
jne
in
popf
in
insb
lea
fisubrl
ja
stc
int
insb
jno
sbb
xchg
xchg
jns
cmpl
bound
mov
sbb
sub
ja
fcomps
push
cmpsl
orb
pop
lods
call
fnstenv
mov
or
jle
adc
inc
jg
lcall
lret
jnp
cmpsb
arpl
mov
jb
pop
into
jge
sahf
sbbl
pop
jmp
or
xchg
lea
jp
insb
inc
into
xor
leave
mov
jno
jbe
inc
adc
popf
inc
jae
shll
cmpl
inc
aaa
jbe
fidivrs
popf
hlt
mov
hlt
xchg
jne
popf
jno
sbb
es
js
imul
lret
addr16
gs
nop
jge
lcall
cld
imul
cmp
push
or
lods
lret
jb
inc
lods
xchg
pushf
popf
jmp
insb
mov
mov
jno
xor
sbb
dec
lods
inc
stos
xor
dec
pop
pop
cwtl
sahf
lcall
mov
push
out
jne
jo
mov
jbe
jns
lcall
jle
jae
sbb
lea
sahf
mov
sahf
mov
vpmacsdql
mov
cmp
je
push
jge
mov
inc
xchg
mov
inc
subb
dec
lret
lods
jl
mov
shlb
into
xorb
hlt
arpl
mov
xchg
or
cmp
xchg
pop
jp
mov
xchg
int
into
les
lahf
xchg
jl
jo
dec
sbb
mov
mov
ja
lods
cwtl
leave
jae
in
es
xor
mov
aam
mov
andb
out
xchg
xchg
imul
cwtl
inc
adcb
in
cmp
outsl
sub
inc
fstpt
fisttpll
lcall
pop
imul
jno
xor
jns
sub
lret
adc
jl
or
int
cmp
add
outsl
mov
push
lcall
cld
scas
cltd
pop
push
xchg
dec
test
jae
aam
dec
mov
adc
ja
cmp
adc
daa
aad
je
js
jecxz
leave
pop
lods
cltd
mov
xchg
jns
mov
jne
mov
inc
imul
inc
mov
rcrb
cmpsl
dec
cltd
mov
jae
ljmp
mov
sahf
jbe
xchg
sbb
out
lret
rclb
jg
push
xchg
cmc
insb
into
lret
fists
pop
adc
or
mov
ja
imul
cmp
lods
lret
lret
xchg
lahf
bound
push
mov
mov
mov
jb
lahf
insl
jbe
xchg
jae
pop
lret
xchg
or
pushf
or
adc
sbbb
xchg
jo
outsl
addr16
jb
iret
into
mov
xchg
sahf
shlb
sbb
mov
stos
lds
lods
xchg
iret
mov
inc
fidivrs
call
inc
lcall
loop
leave
aad
idivl
push
adc
mov
int
xchg
lods
mov
add
int3
mov
xor
jbe
mov
jb
xor
ja
int3
stc
jo
pop
or
pushf
adc
in
imul
mov
xchg
aam
push
incb
xchg
pushf
jp
lahf
jnp
jno
inc
and
jge
jne
cltd
imul
inc
or
push
int3
mov
push
push
daa
into
mov
adc
dec
pop
arpl
jne
push
and
push
and
jl
sahf
stc
jb
je
imul
lea
es
andl
jge
xchg
inc
lahf
sbb
xor
xchg
cmp
imul
dec
loope
nop
xchg
push
fwait
addr16
xchg
je
dec
inc
outsl
lahf
lret
inc
stos
inc
lcall
imul
mov
cwtl
mov
notl
jbe
leave
int
imul
or
lret
xchg
addr16
xchg
std
pop
mov
inc
mov
lret
and
jns
test
lret
testl
imul
xchg
cmpsl
lods
insb
call
mov
arpl
mov
mov
jle
pushf
mov
sub
daa
jbe
inc
dec
sbbb
cmpsl
mov
in
mov
cmp
outsl
dec
add
fstpl
jne
mov
pop
mov
mov
add
xchg
int3
sbb
stc
das
clc
aaa
pusha
mov
jg
daa
mov
lds
mov
nop
pop
addb
arpl
int
insl
jnp
jno
sbb
imul
push
out
jg
push
xchg
into
test
mov
mov
xchg
movsl
mov
insb
sarl
popf
jnp
in
pop
setbe
rcrl
dec
subl
pop
mov
xchg
das
ja
std
data16
ds
cmp
mov
mov
xchg
xchg
lods
jecxz
jl
and
imul
jbe
fs
xchg
mov
push
je
insb
mov
xchg
fwait
cmc
sbb
lret
jge
or
xchg
ljmp
and
mov
leave
sbbb
sbbl
push
aad
jp
clc
inc
pop
stos
cmp
fadds
cmpl
jnp
fcoms
mov
into
push
mov
jnp
sti
xor
push
push
filds
lahf
mov
jno
rcrb
inc
test
shlb
fbstp
mov
es
out
ret
mov
xchg
jbe
jle
sub
mov
cmp
fwait
jle
lahf
mov
jnp
mov
imul
repnz
imul
pop
jg
mov
hlt
mov
inc
ljmp
dec
dec
push
sub
mov
xorb
pop
xchg
cmp
js
movb
jge
jno
fisubrl
xchg
scas
jg
mov
sahf
js
addb
je
jae
mov
mov
ljmp
jae
jl
lretw
pushf
jb
mov
dec
inc
aam
xlat
xchg
inc
jg
cltd
fistps
xchg
xchg
imul
sbb
fsubs
daa
ror
inc
cmp
push
in
aas
add
lcall
or
iret
jae
push
mov
fnstsw
test
test
jno
add
outsb
jp
pop
xchg
lret
fndisi(8087
shlb
pop
jae
lahf
int3
mov
mov
mov
sbb
ja
push
mov
jp
xchg
pop
call
jg
jg
xchg
in
popf
mov
pop
outsl
jl
jno
cmp
outsl
ja
pop
jae
xchg
es
jle
les
jbe
jns
rcrl
cwtl
cmpb
inc
xchg
mov
into
pop
mov
sahf
push
xchg
dec
mov
rolb
xchg
imul
mov
jge
int3
nop
pop
jne
adc
xchg
outsb
mov
cmp
xlat
mov
inc
int
filds
jno
pop
and
nop
sbb
cmpsl
sub
lcall
insb
cmpxchg
jge
lcall
mov
mov
aam
arpl
cltd
outsl
test
outsl
push
mov
sbb
lods
fidivl
lcall
std
sbb
cwtl
shlb
mov
fdivrs
xchg
push
lods
iret
mov
xchg
cwtl
lea
jae
scas
mov
mov
jb
mov
lahf
xchg
jne
pop
and
daa
jae
mov
sbbb
enter
insb
xchg
xchg
jno
pop
cmp
jns
stc
cltd
xchg
outsl
int
scas
xchg
mov
jne
aas
mov
xchg
leave
int
mov
jp
add
adc
xchg
xchg
xchg
cmp
sub
or
into
aaa
in
shll
xchg
jl
jo
mov
nop
pop
inc
mov
or
leave
mov
rcrb
js
lods
jns
mov
subb
sbb
call
fildll
jno
jae
cmp
add
push
jo
lret
cmp
add
mov
bnd
inc
jns
imul
test
outsl
cmpsb
cld
data16
add
jae
aas
jne
aaa
lret
inc
hlt
jno
cmp
imul
mov
mov
int
sub
add
decl
xchg
pop
test
inc
pop
nop
cltd
cwtl
push
adc
jle
int3
hlt
std
pop
xchg
push
xchg
xchg
lods
mov
xchg
xlat
loop
aaa
jg
leave
jae
mov
leave
imul
iret
xlat
jbe
cltd
iret
into
xchg
mov
push
pop
mov
nop
pop
negb
lcall
cmc
rcr
lret
lahf
jb
xchg
testl
ja
xchg
mov
xlat
sti
test
shlb
aaa
cmp
xlat
jmp
fisttps
jecxz
lcall
jns
sbb
mov
ja
jp
mov
cmp
xchg
mov
imul
mov
mov
fwait
push
jle
int
push
sbb
xchg
pop
js
lret
inc
xchg
setl
fnstenv
jp
xor
aaa
int
aas
pop
xchg
mov
and
cld
sub
inc
call
mov
lcall
jnp
jne
inc
cltd
fiaddl
xchg
fcmovu
fidivl
imul
xchg
inc
jb
push
xchg
shll
cld
xor
aaa
pop
lcall
mov
mov
ja
test
inc
lahf
xchg
adc
test
lret
add
mov
jno
mov
mov
nop
or
jae
fstl
call
popf
inc
xor
stos
xchg
pop
jg
stos
into
lcall
in
roll
ret
sahf
mov
mov
jbe
inc
adc
xchg
int3
jne
mov
mov
test
in
xchg
arpl
jge
lcall
mov
inc
das
pop
xorb
in
jge
dec
or
sub
outsb
into
sahf
pushf
aaa
sbb
fstpl
in
cwtl
mov
shlb
jmp
sub
mov
inc
outsb
mov
mov
popf
loopne
into
cmp
mov
in
addr16
mov
xchg
pusha
shrb
jp
mov
xchg
adcb
pop
mov
ja
pop
es
jp
into
or
in
pushf
insb
movsb
int3
stc
rcrb
pop
push
js
imul
out
mov
xchg
xor
mov
arpl
and
jge
jmp
lods
jnp
dec
cmp
in
jbe
jmp
mov
addr16
test
arpl
mov
inc
lods
in
xchg
pop
mov
fmuls
das
jmp
add
cwtl
aas
fucomi
mov
xlat
test
insb
inc
inc
je
jo
jno
subb
fmull
imul
lahf
push
mov
jns
cli
jne
xlat
lcall
sbb
stc
mov
mov
outsb
inc
imul
mov
jne
mov
and
mov
mov
insl
adc
pop
jb
sub
pop
add
jne
sbb
rolb
fiaddl
adc
mov
mov
push
adc
outsb
mov
xchg
lods
rorb
movsl
mov
mov
incb
bound
jns
fidivs
xchg
pop
pop
rcr
pop
inc
xchg
int3
mov
nop
insb
outsl
jmp
hlt
push
add
adc
inc
jbe
mov
insb
xor
leave
inc
adc
test
ja
nop
stc
lahf
cli
xor
jg
xor
insb
daa
push
sahf
ja
lret
mov
arpl
clc
inc
das
mov
jae
mov
jp
cltd
mov
add
add
daa
aad
int
xchg
jo
adc
out
imul
xchg
sbb
mov
sbb
popf
jp
sbb
mov
inc
lret
jae
into
inc
pop
push
mov
mov
leave
outsl
mov
mov
xchg
jno
sub
push
inc
stos
lret
fisttpl
iret
out
jge
xchg
fwait
mov
mov
cltd
popf
ret
hlt
jne
out
jp
aad
mov
test
jmp
inc
inc
iret
ja
jg
movl
cltd
gs
xchg
into
inc
leave
fwait
mov
push
jg
std
mov
jne
mov
jg
jnp
lret
insl
jno
aaa
and
jns
cwtl
mov
lock
pop
rcl
xchg
loop
jno
int
ja
mov
inc
leave
leave
jnp
add
mov
xlat
and
add
jmp
xchg
js
je
mov
cli
and
push
mov
ficomps
xor
sahf
add
xchg
xchg
arpl
jg
sub
adc
xchg
cli
ror
fbld
or
lcall
fwait
lods
mov
mov
push
mov
push
jl
fwait
mov
xchg
xchg
jns
dec
pop
addl
mov
jnp
mov
pop
add
sub
inc
aad
mov
xchg
dec
or
mov
jbe
test
popa
lret
nop
sti
mov
xor
sahf
mov
inc
outsb
xor
mov
pop
mov
xchg
sahf
xor
scas
or
cmpsl
arpl
in
lds
cwtl
xchg
sar
mov
sbb
lcall
jbe
pop
rolb
jae
jg
jle
or
add
jl
lea
rcll
insl
fcomps
repnz
mov
adc
mov
subl
dec
rcrl
scas
insb
cltd
cmpsb
pop
push
mov
push
mov
xor
ja
push
cmpsb
jae
hlt
inc
rcr
inc
cmpsb
fcomi
int3
xor
fs
arpl
jnp
xchg
ror
push
jns
push
jno
lcall
jle
popa
jne
outsl
xor
lret
xchg
insl
subb
jo
iret
nop
jo
fdivs
and
mov
mov
xchg
orb
out
rcll
ja
jns
inc
mov
jne
xor
mov
sahf
icebp
testl
hlt
lahf
push
adc
sbb
xchg
xchg
iret
mov
mov
imul
ljmp
mov
ljmp
arpl
adc
jns
xchg
mov
xchg
mov
test
add
cmpb
cmp
xchg
mov
and
push
sbb
cmp
data16
insb
lcall
jp
adc
lea
aad
leave
into
mov
push
pop
arpl
jae
jb
insb
pusha
lret
xlat
cli
mov
movsb
rolb
mov
pop
xchg
cmp
jnp
add
insb
cmpsl
mov
sbb
leave
xchg
xor
call
mov
inc
lret
cmc
push
je
fidivrl
jnp
jb
mov
outsb
inc
into
lret
inc
pop
insl
aad
fwait
scas
xchg
jns
xchg
roll
push
jecxz
inc
and
or
ret
push
mov
cmp
clc
mov
lret
je
fwait
cwtl
adc
mov
cmp
jae
ret
jno
nop
push
arpl
out
sub
inc
ja
mov
aad
mov
xor
xchg
das
add
mov
outsb
leave
jae
mov
mov
ja
dec
add
xchg
mov
inc
lods
cltd
outsb
xchg
push
jno
test
cli
mov
and
jle
sbb
inc
mov
lret
and
mov
orb
pushf
out
mov
jae
gs
ja
xchg
fcmovu
jbe
fnstsw
mov
jo
xchg
outsb
mov
int
mov
and
mov
mov
cmc
inc
leave
mov
lcall
into
lahf
pushf
pop
mov
pusha
lods
mov
fiaddl
ror
dec
lcall
incb
jo
insb
mov
fwait
outsl
xchg
xchg
ja
iret
push
test
lods
aam
daa
jg
dec
incb
xchg
xchg
in
jns
xchg
aam
or
lock
sub
fwait
jl
out
sub
out
les
lret
imul
pop
xchg
mov
mov
imulb
clc
cwtl
jge
repz
or
rcrb
lret
sbb
subl
xchg
cwtl
sahf
inc
int
jo
nop
mov
mov
mov
popf
push
mov
push
mov
or
adc
je
mov
fs
mov
push
outsl
dec
sbb
inc
lcall
in
sti
outsb
xchg
jbe
shrl
xchg
jnp
dec
in
cltd
lret
xchg
out
xorb
popf
insl
popa
xchg
arpl
pop
mov
test
add
sarl
jle
lcall
inc
ja
addr16
jno
xor
xlat
loopne
and
jge
fwait
std
or
in
pop
sub
pop
aam
fisubrs
mov
jg
aad
mov
and
clc
jg
and
orb
and
cltd
mov
inc
js
insl
mov
pop
mov
ror
inc
jmp
xchg
cltd
xorb
aaa
out
pop
cmpl
insl
mov
jne
sahf
jae
adc
fwait
jb
popf
imul
in
jae
xchg
mov
lods
sub
xor
daa
mov
lret
sbb
inc
mov
dec
jge
insl
cli
leavew
jbe
pop
cmp
adc
xchg
jp
popf
xor
ja
cmp
lret
rorb
jg
jbe
xor
in
lret
pop
mov
xlat
lret
inc
mov
jb
inc
xchg
jbe
mov
pushf
cwtl
pop
ret
mov
xor
xchg
pop
sub
fdivrs
into
divb
sub
xor
push
xor
dec
jo
js
cmp
aaa
push
push
jmp
sbb
mov
ja
inc
xchg
lea
jno
mov
jge
fwait
outsb
cmp
mov
sbbb
cmp
sti
call
pop
cwtl
jno
jp
push
push
cmpsl
mov
pop
push
or
das
sbb
stos
das
inc
call
dec
mov
dec
jge
ja
scas
adc
jns
imul
insl
outsl
imul
iret
cmpb
jno
cwtl
mov
nop
inc
lcall
test
or
jbe
push
popa
stos
jle
mov
sbb
imul
pop
pop
dec
or
mov
stc
or
in
arpl
xor
mov
lret
aam
outsl
mov
sub
sbb
fwait
std
pop
sbb
mov
inc
xchg
pop
lcall
test
pop
mov
xorl
adc
cs
std
lds
mov
or
mov
adc
xor
jge
pop
or
lods
pushf
stos
cld
leave
xchg
mov
iret
nop
outsl
xchg
mov
xchg
lds
jo
mov
inc
pushf
in
in
xchg
bound
cltd
inc
jnp
push
mov
insl
inc
lcall
rcl
lahf
xor
sbb
rcll
mov
jne
jg
jae
adcb
or
lahf
xchg
inc
cmp
cmp
xchg
sbb
andb
inc
mov
nop
int
push
xor
push
ffree
fistl
int
arpl
imul
mov
inc
mov
lahf
cltd
ja
lods
cwtl
xchg
xchg
ds
mov
jns
mov
jnp
pop
testl
mov
jbe
mov
jbe
cmp
jo
repz
cltd
xchg
imul
jp
je
iret
inc
jecxz
ret
fisubs
push
mov
inc
adc
jle
into
push
push
pop
into
cld
mov
js
cmp
mov
lea
lods
divb
mov
inc
mov
xchg
mov
xorb
js
hlt
mov
aam
testl
jp
cwtl
mov
fwait
into
mov
outsb
jae
idivb
jae
pop
xchg
mov
jae
aaa
movsb
cwtd
xchg
cmpsl
mov
aam
mov
xchg
jno
mov
imul
xchg
aad
call
cld
cmpsb
into
pop
imul
pushf
inc
nop
mov
cld
rcrb
jp
xchg
rorl
leave
je
pushf
jbe
lret
pop
fistpll
mov
mov
jo
dec
outsb
jne
ret
aad
jnp
add
lods
jae
jge
cmpl
enter
sbbl
lret
adc
xlat
popf
mov
in
mov
sbb
inc
inc
jb
jae
insb
ja
outsl
jns
stc
scas
inc
bswap
add
mov
xchg
jle
rcrb
pushf
jo
out
xchg
aaa
hlt
aaa
inc
das
jl
jno
or
jnp
js
adc
mov
mov
sub
fistl
fnstsw
andb
int
fsubrl
scas
or
aaa
fdivl
mov
inc
xchg
nop
imul
jg
cmp
jae
mov
jno
cmp
mov
and
leave
add
iret
sti
cmp
mov
jl
js
adc
sub
mov
fcmove
xlat
pop
imul
pushf
iret
ljmp
or
lea
mov
ja
rorb
xchg
lea
subb
leave
xchg
mov
dec
xchg
lcall
aam
add
jl
add
push
das
loopne
imul
rorl
mov
out
and
das
jb
jnp
cltd
in
push
jge
mov
nop
xchg
jl
fadds
mov
orb
jae
lds
mov
mov
mov
ret
xor
jl
add
iret
cmp
lea
fildl
loopne
dec
xchg
inc
out
xchg
insl
aad
jge
test
mov
jp
mov
lea
rcrb
movsl
stc
mov
fistl
mov
ud2
jns
cld
push
sbb
into
xchg
lret
popf
jp
sahf
jg
mov
nop
cs
fadd
jecxz
sbb
fistl
mov
inc
mov
imul
xchg
xchg
enter
call
enter
mov
mov
xchg
mov
leave
aam
roll
call
jno
cs
cmpw
jle
xchg
orb
xchg
push
mov
cmp
jne
add
jge
xlat
std
xchg
shll
test
mov
xchg
daa
inc
inc
fbstp
push
pop
and
mov
int
sahf
ficompl
jb
jo
popf
dec
out
out
pop
mov
xchg
mov
mov
fcom
cmp
popa
js
mov
xchg
inc
cmp
lret
and
mov
cwtl
jns
cmp
add
jge
in
lahf
adc
cmpl
sbbb
nop
jo
inc
xchg
push
jns
add
mov
popf
insb
lcall
jnp
lret
xrelease
arpl
jo
dec
jae
ja
insl
mov
in
sahf
jne
test
das
test
push
fcom
pop
pop
fs
int3
aam
and
mov
or
cltd
xchg
cmp
jb
into
lahf
xchg
nop
jge
xor
inc
mov
mov
mov
jl
xchg
adc
pop
mov
es
sarl
jle
mov
pop
lahf
shrb
jo
lret
mov
mov
lahf
fwait
jg
mov
xchg
je
jl
push
imul
lcall
mov
das
arpl
jno
in
jae
das
mov
fcomps
inc
lods
cltd
pop
int
leave
shrb
push
xlat
mov
pushl
das
arpl
lcall
lret
xchg
inc
imul
jno
in
jns
int3
in
jo
test
inc
jne
pushf
push
fstpt
imul
sub
ja
push
lahf
inc
jge
js
pushf
jl
inc
jl
repz
imul
shlb
les
js
mov
and
loope
into
jns
jp
mov
inc
test
dec
jle
jns
jae
fdivs
ja
pop
imul
jbe
fnstsw
std
xchg
js
xchg
insb
push
sub
mov
sub
xlat
xchg
jb
addr16
int
fisubrl
xchg
lret
cld
mov
mov
pushf
xor
jo
adc
shll
xchg
sbb
outsl
js
jne
jmp
fst
iret
repz
insl
dec
push
push
inc
jg
js
push
out
inc
and
jns
pop
xor
xchg
popf
adcb
je
ds
je
imul
lret
popf
outsb
cmp
into
add
in
stc
fwait
stc
leave
cli
jg
xchg
push
orb
xchg
mov
dec
mov
mov
inc
push
or
rorb
jb
jae
mov
add
out
mov
mov
imul
push
imul
ja
lcall
mov
iret
or
pushf
push
jae
mov
outsb
insl
xchg
rorb
fdivs
jecxz
mov
xchg
xchg
fnsave
mov
insl
adc
mov
mov
jo
lcall
pop
push
fwait
aam
fsubs
in
push
add
mov
xchg
pop
fistl
mov
dec
out
addr16
mov
ret
cmp
pop
cmpsb
popf
jl
mov
sub
xchg
lock
je
adc
loopne
inc
xchg
fwait
pop
mov
mov
or
inc
mov
jg
mov
jo
loope
inc
je
int
inc
gs
aam
lcall
mov
xchg
jns
insl
cmc
cmpsl
jno
int3
mov
xchg
popf
dec
not
cmp
xchg
cmp
ja
xchg
dec
ficompl
sbb
aad
jae
testl
lods
jns
sarb
fdivrs
inc
lea
rol
jb
pop
lods
rclb
sub
mov
mov
push
cwtl
dec
fstpt
incb
pop
fildll
mov
imul
mov
cltd
inc
xchg
jp
insl
or
jae
ja
inc
das
add
into
jl
fldt
jno
int
lcall
outsb
rcrb
iret
ja
dec
sub
jecxz
inc
lods
sahf
xchg
add
outsl
call
sarl
fimuls
nop
out
jb
xchg
sbb
xchg
mov
xchg
cmp
sahf
cmpsl
jmp
fisubrs
xlat
cwtl
nop
das
mov
pop
pop
ret
je
js
leave
in
pop
lret
jae
lods
insb
mov
sarb
cli
dec
xchg
jo
negl
jge
test
cmp
dec
mov
xorb
sbbl
cmp
mov
imul
fcmovb
es
push
mov
mov
xchg
repnz
into
shrl
jns
xchg
xlat
jge
leave
aam
stc
mov
into
jle
inc
iret
test
add
inc
movsl
dec
xlat
and
lret
push
int3
cwtl
incb
lods
inc
push
inc
mov
mov
adc
cmp
add
jb
nop
outsb
jns
pop
or
push
pop
jg
test
movsl
imul
xlat
testl
pushf
fwait
mov
test
mov
imul
inc
xchg
fistl
nop
or
inc
lret
lcall
xchg
test
mov
mov
pop
test
mov
xchg
or
mov
pop
jp
lea
inc
xlat
xchg
cwtl
les
stc
cltd
cltd
mov
xor
shrb
in
je
repnz
lock
int3
insb
xlat
xchg
mov
add
mov
mov
lret
xor
in
fistps
mov
inc
sub
lret
xchg
dec
test
lahf
cld
aas
in
fsubrs
not
iret
mov
xor
push
jg
js
dec
fs
mov
fldt
push
lods
jne
int3
jg
lret
cmpsl
or
int3
das
les
test
sbb
jne
sub
test
sub
popl
inc
sub
jl
inc
pop
aam
jae
jns
mov
jmp
ja
pop
xchg
push
fucom
fstpt
out
xchg
lret
test
xor
inc
mov
mov
lret
cmp
xchg
push
mov
and
fs
adc
arpl
mov
jo
jle
jnp
popf
adcb
lret
popf
xlat
jp
fisubrs
cmp
pop
stos
decb
call
shll
imul
xor
movl
outsb
add
add
inc
mov
lahf
sahf
fiaddl
imul
inc
sub
inc
aaa
cmp
mov
jp
xchg
rcl
nop
inc
imul
lcall
imul
xchg
cli
dec
xchg
or
jnp
mov
imul
jp
push
popf
int3
jae
jno
push
cmpl
gs
jl
mov
push
and
ret
dec
iret
inc
jno
ja
jl
jbe
mov
fst
iret
lret
mov
push
jg
and
mov
lea
jmp
jg
jg
outsb
cmpsl
test
addr16
jnp
inc
nop
push
cltd
outsb
das
add
mov
lcall
test
ja
fcomps
das
addb
mov
insl
jle
lcall
cltd
cmpsl
xlat
aam
jp
dec
ror
iret
xorb
in
xlat
mov
mov
jns
xchg
mov
or
sarl
insb
jl
iret
xchg
cmp
adcb
xchg
mov
xchg
sbb
xchg
cmpsl
in
jge
inc
outsl
iret
js
mov
sbb
outsb
je
adc
cltd
jg
jp
jo
loope
xchg
lahf
gs
cmp
fists
jge
xchg
arpl
out
xchg
mov
push
adc
int3
pop
sbb
fwait
pushf
xchg
mov
jbe
lret
insb
cltd
popf
shll
mov
push
fwait
xlat
int
cmp
push
jp
xor
in
or
or
xchg
leave
cltd
int
orb
mov
lcall
jb
xchg
dec
mov
aaa
xchg
adc
cmpsl
lahf
arpl
ja
das
dec
lret
mov
je
mov
mov
cmpsb
cmp
aam
cmpb
bound
scas
lret
xchg
fadds
rcll
int3
imul
popf
cwtl
mov
outsb
out
push
inc
into
aaa
mov
xchg
xchg
sbb
ja
sbb
lret
mov
in
ficoms
insl
cwtl
jno
sub
add
xor
imul
mov
inc
cltd
sbb
scas
xchg
enter
sbb
mov
cmp
rorb
mov
iret
jmp
insl
jbe
fcomps
int3
inc
inc
push
insb
cltd
fidivrl
sbb
xor
sub
imul
xor
xor
mov
cwtl
insb
popf
jns
mov
xchg
push
testl
lahf
rcrb
and
lds
nop
jnp
jbe
pop
push
xchg
outsb
int
das
xchg
push
leave
inc
js
sbb
jg
push
mov
inc
mov
nop
jns
adc
iret
jge
aad
fwait
cltd
jo
xchg
jno
or
push
stos
xchg
mov
aam
mov
imul
xchg
xlat
and
jl
jne
adcb
leave
das
add
xor
xor
cli
stc
xchg
and
jns
mov
pop
leave
int
sbbb
test
ja
aaa
nop
jae
lret
mov
xchg
js
aam
sub
ret
sub
imul
bswap
mov
jno
jbe
or
in
cmp
iret
xchg
stos
jge
or
mov
rcrb
leave
cmp
mov
pusha
cwtl
adc
int3
sbb
mov
xchg
dec
mov
int3
mov
mov
js
ds
pop
push
jp
popf
mov
pusha
jle
pop
inc
jge
je
jne
leave
jo
je
jp
sbb
int3
sbb
or
mov
jno
dec
or
insl
jg
inc
or
lcall
mov
sbb
cmp
ja
xor
fisttpl
leave
sbb
loop
jg
shrb
pop
fwait
shrb
iret
jecxz
nop
jge
or
mov
lcall
inc
pop
loopne
iret
test
mov
repnz
push
or
int
sbb
xchg
push
mov
jp
xchg
and
hlt
pop
lret
fwait
push
fbstp
cmp
call
subl
shrb
inc
adc
addr16
jnp
das
orb
outsl
mov
xchg
jne
movl
popf
lds
int3
aam
add
mov
hlt
ja
imul
imul
ficompl
lcall
jge
mov
inc
mov
outsl
popf
insl
rcrb
les
mov
xchg
insb
xchg
jae
and
xlat
mov
dec
popf
mov
jno
in
jb
xchg
pop
mov
dec
lea
lret
mov
pop
or
mov
pop
xlat
fwait
inc
xor
mov
xchg
mov
mov
pushf
sbb
inc
push
jae
cmpl
insl
enter
mov
movsl
jo
pop
xchg
imul
int
call
xlat
ficoml
mov
jp
punpckhwd
xchg
lcall
pop
xor
aaa
outsl
lret
cltd
push
in
lea
daa
jle
repnz
lea
adc
jne
push
jecxz
nop
das
mov
add
adcb
sti
mov
xchg
leave
cli
and
mov
gs
repnz
mov
cmp
mov
mov
clc
test
addb
je
inc
out
jb
cltd
inc
shlb
pop
mov
xor
shlb
xchg
jg
pop
xchg
je
pop
adc
lea
cmp
jge
out
jb
or
xchg
xor
lods
push
mov
lea
mov
mov
ja
divl
mov
insb
jns
mov
shlb
leave
cwtl
andb
dec
aaa
add
or
or
xchg
ret
push
insb
gs
mov
cltd
cmpsl
cli
mov
mov
fsubrs
call
out
lcall
inc
lret
adc
in
jae
mov
insl
mov
outsb
xchg
ljmp
cltd
negl
fstpl
lods
jl
pop
lret
arpl
repnz
mov
mov
scas
sub
mov
mov
or
es
cmp
lods
lods
jp
loop
inc
je
test
fistps
pop
jl
jl
cmp
cwtl
into
lret
xchg
cltd
lret
mov
out
push
jb
popf
out
repnz
mov
lea
fistpl
jno
mov
mov
inc
ja
push
clc
dec
cmpsl
fsubrl
dec
outsl
aaa
popf
addr16
lahf
jne
xchg
nop
pop
push
addr16
fwait
rcll
cwtl
outsl
pushf
jmp
xchg
cmp
mov
mov
test
xor
outsl
sbb
imul
jge
push
nop
push
sbbb
roll
sahf
rclb
aam
inc
into
xlat
popa
or
dec
push
mov
xor
out
sahf
xchg
lcall
mov
mov
data16
jns
dec
jne
lea
xchg
dec
jnp
dec
test
outsb
cmp
mov
jle
fldenv
mov
jge
popf
xchg
jo
ds
xchg
inc
or
mov
jne
mov
mov
insl
sahf
push
fimull
sbb
aaa
cmp
stos
aaa
comiss
jl
mov
fwait
es
in
js
xchg
lret
mov
mov
inc
lods
xchg
lahf
ret
jg
call
popa
adcl
mov
aad
xchg
lock
ja
sub
outsb
xchg
inc
sarl
xchg
jecxz
insl
into
in
in
iret
or
insb
mov
xchg
int
jmp
or
cwtl
jb
ret
mov
insb
lea
shrb
mov
leave
test
lds
jge
test
push
jns
push
imul
neg
outsl
fwait
mov
dec
inc
adc
sbb
jge
jbe
push
rolb
jno
xchg
pop
dec
adc
xchg
inc
cmp
jo
pop
jg
mov
mov
inc
stos
imul
push
pop
xchg
cltd
sbb
nop
js
adcl
or
mov
fstps
jo
lahf
imul
sahf
jno
mov
pushf
pop
shrl
xor
mov
mov
push
push
jns
push
ja
sarl
pop
int
lret
or
int3
arpl
mov
outsb
pushf
jle
jp
lahf
clc
jmp
jl
mov
imul
popf
aad
xchg
out
jbe
and
pop
fwait
das
or
inc
cmp
insl
push
dec
into
xchg
nop
mov
jne
adc
imul
insl
stc
mov
xchg
lret
push
jg
mov
mov
xchg
jns
sbb
lea
hlt
mov
xchg
aaa
mov
inc
xor
adc
sbb
jp
mov
iret
test
inc
lods
ror
int3
pand
leave
out
cmp
lret
xor
dec
sbb
jl
outsl
insb
mov
js
pushf
lahf
sbb
sbb
je
stc
lret
xchg
outsl
xchg
xchg
out
sbb
adc
ja
xlat
imul
pushf
shrl
call
inc
fmul
clc
inc
lds
sbbb
je
pop
fadds
fldt
repnz
push
jle
aam
sbb
mov
inc
and
scas
lret
pushf
mov
leave
jne
insl
stc
les
mov
jp
ds
mov
sti
jo
cmp
outsl
insb
stos
lahf
clc
mov
xchg
inc
fiaddl
xor
ja
rcrl
pusha
test
add
jnp
jb
outsl
xchg
pop
inc
mov
js
or
lahf
push
xchg
cltd
fildll
ficoms
iret
mov
stos
lcall
xchg
mov
jbe
imul
pop
jp
into
mov
outsl
pop
test
icebp
mov
insl
mov
push
pop
cmp
push
jbe
mov
or
mov
mov
iret
xorb
jbe
jle
cmp
sub
cmc
xchg
xchg
xchg
push
inc
jns
outsl
cltd
jae
inc
push
notb
outsb
push
xchg
mov
imul
fdivrs
push
out
jg
add
fdiv
fsubl
mov
push
inc
das
loopne
push
ja
lret
leave
and
mov
jne
sahf
dec
inc
in
jnp
or
insl
mov
cwtl
xor
mov
jb
andb
arpl
ja
jge
insl
jge
insl
lret
jb
stos
jecxz
cmpl
roll
je
imul
shlb
flds
cltd
out
bound
mov
cmp
repnz
jae
or
pop
shlb
mov
mov
sbb
mov
lock
test
xchg
jns
jns
cmp
aam
data16
push
mov
or
push
lret
subb
mov
je
cmp
nop
jmp
jl
movsl
sahf
xchg
jecxz
bnd
ret
out
fidivrs
jo
xorl
pop
lea
jo
jno
lcall
pop
mov
das
std
mov
cmc
push
jne
cs
loop
mov
jle
mov
iret
andl
outsl
vpshad
mov
outsl
pop
inc
jl
dec
push
aad
lea
mov
js
fimull
xchg
adc
lret
mov
cmp
stos
test
je
shrb
xchg
push
arpl
pop
cmp
int
int
ret
mov
sbb
mov
lahf
cmp
cmp
mov
scas
cmp
cltd
push
cmp
lcall
in
cmp
mov
push
mov
jg
mov
mov
or
mov
ja
jl
jne
shrl
subl
mov
mov
inc
jle
enter
or
jno
jns
imul
dec
cmp
orb
outsl
lods
rorb
mov
jg
out
mov
push
xchg
iret
movl
jno
mov
into
xchg
fmuls
je
mov
pop
mov
mov
fadd
and
xchg
mov
lods
jae
mov
sub
test
nop
pop
out
inc
int3
aaa
inc
gs
test
mov
imul
add
je
cmp
jmp
mov
jbe
xchg
dec
orb
inc
aas
xchg
xor
stos
aaa
inc
jmp
sub
xchg
jo
sbb
xchg
test
jl
xchg
imul
xchg
lcall
jnp
inc
mov
inc
mov
aaa
int
imul
jg
push
xlat
pop
xchg
mov
xchg
out
test
push
aaa
pop
test
cmp
xchg
xor
xor
mov
arpl
into
jns
or
inc
cmpb
outsb
aaa
inc
push
les
add
rcl
xchg
jnp
pop
sahf
ja
out
add
mov
adcb
adc
mov
out
push
lahf
movsb
mov
xchg
loopne
jnp
leave
jbe
sahf
pop
popa
xor
mov
int3
fcom
out
inc
lea
je
xor
jmp
cs
imul
dec
sub
les
lret
add
mov
scas
aad
test
dec
jne
jnp
jl
test
xchg
jge
lods
mov
xchg
jg
hlt
mov
popf
mov
fsts
cltd
xorb
iret
popf
pushl
lcall
mov
int3
outsl
imul
nop
xchg
adcl
xlat
shll
sahf
cltd
rorl
push
sarl
adc
xchg
sub
mov
mov
ret
lahf
outsb
xorb
inc
sbb
mov
jns
shrb
mov
and
pop
mov
nop
inc
inc
bswap
pop
cmp
cmp
jne
pop
cli
ret
mov
cltd
mov
pop
in
dec
or
repnz
imul
xchg
stos
mov
mov
es
mov
dec
out
ja
aas
xchg
or
jno
mov
insb
inc
pop
and
push
iret
test
aaa
mov
xlat
cwtl
xchg
shld
lods
je
mov
outsl
popa
arpl
ret
xchg
loope
dec
cmp
pop
call
lret
aad
or
addr16
mov
imul
adc
pop
jns,pn
lcall
outsl
xchg
mov
pop
in
andl
jg
mov
insb
je
mov
inc
icebp
imul
jae
lcall
sti
aad
and
aam
hlt
lods
dec
ds
mov
or
xchg
inc
ja
jo
adc
sahf
imul
push
ja
into
push
mov
lret
inc
mov
fwait
mov
jnp
out
jns
idiv
inc
fcmovne
popf
das
push
lods
sbbb
mov
mov
cmpsl
adc
jbe
jns
lahf
cwtl
mov
mov
int
xchg
sub
aaa
or
aaa
stc
sbb
sbb
jne
mov
nop
push
xor
jb
mov
inc
sarb
mov
dec
or
adc
inc
mov
pushf
leave
ret
sbb
or
mov
mov
into
sahf
lret
mov
lods
mov
sbbb
pop
xlat
int3
inc
orl
ret
ljmp
lcall
rcll
cmp
mov
js
jns
mov
cwtl
jb
mov
xlat
lret
ja
insl
sub
xlat
xor
add
xchg
adc
pop
pop
xchg
sbb
mov
jg
pushf
les
call
cmp
lock
jns
enter
jo
aaa
outsl
jmp
mov
js
jns
insl
mov
dec
fbld
dec
pop
fldl
stos
and
pushf
mov
iret
xchg
mov
js
out
into
ret
jo
insl
iret
xchg
dec
push
stos
jno
inc
inc
xchg
loopne
lret
cs
sbb
add
push
mov
adc
mov
jge
cwtl
js
dec
mov
or
jns
orb
xlat
inc
outsb
push
jne
aam
pushf
aaa
movsb
sub
fwait
outsl
shl
lods
imul
jl
mov
cli
fistl
std
int3
mov
cld
das
stc
jg
pop
mov
sarb
shr
out
lcall
lret
jns
nop
into
dec
fnstcw
outsl
and
xchg
cmpb
mov
stc
xchg
inc
leave
and
jge
lcall
xchg
mov
pushf
jg
xchg
jne
jge
outsl
stc
xor
jmp
mov
imul
xchg
cli
jno
sahf
aam
jp
arpl
cmpsb
cmpsl
aam
int3
rclb
dec
and
pop
inc
jo
xchg
lock
iret
mov
xchg
imul
xchg
jns
call
mov
mov
lret
fcomps
sbb
mov
push
pop
test
xchg
stos
lds
stos
xorb
dec
nop
nop
aaa
out
jae
mov
jo
decl
fisttpl
into
insl
jp
sub
mov
scas
adc
jb
sub
xchg
shlb
leave
jae
outsb
test
ja
pop
jg
xchg
sbb
ja
inc
mov
pusha
ja
xchg
mov
xchg
pushf
jp
addr16
lret
mov
jno
cmp
iret
lea
mov
sbb
lahf
dec
cmpl
xchg
cli
lea
arpl
sti
idiv
xchg
jnp
jb
cmp
jns,pt
popf
mov
imul
insb
int
lahf
mov
iret
daa
fistl
mov
sub
pushf
jae
xchg
popf
aaa
out
outsb
adcb
xchg
mov
mov
ja
outsl
inc
jmp
test
xlat
imul
jp
fsubs
aam
jns
ror
jne
xor
xchg
jp
adcl
addr16
mov
mov
insl
movswl
out
iret
mov
jno
fsubrs
test
fisttps
cmpsl
xchg
fnsave
inc
addb
insl
xlat
lret
jle
push
popa
jns
inc
cmpsb
insb
into
shlb
outsl
fmulp
ja
lock
cmp
mov
jbe
movsl
adc
outsl
aam
shl
mov
cltd
out
xlat
aaa
inc
ror
orb
imul
jle
cmp
mov
data16
jp
xchg
divb
fcmovne
adc
repnz
add
outsl
jle
fstl
jmp
add
imul
xor
lret
jne
cmp
cli
loopne
outsl
vmwrite
mov
popf
hlt
mov
mov
ror
mov
xchg
xchg
jo
mov
xchg
add
cld
sub
insl
fcomps
jns
cmpsl
xor
imul
jno
pushf
fwait
lock
out
jl
adc
ret
gs
xchg
add
cs
outsl
xchg
lock
jo
fstps
add
mov
aad
fnstcw
je
out
push
lret
jae
jbe
xlat
jp
ffree
test
mov
cli
cmc
lea
movsl
pushf
push
xchg
nop
cmc
sbb
or
stc
adc
cmp
mov
in
int3
popf
cld
mov
jae
dec
sahf
call
xchg
mov
insl
xchg
loop
arpl
jg
aam
in
imul
jae
lahf
sti
ds
jno
gs
rcl
jae
inc
pusha
jg
jbe
inc
int3
xchg
insl
cltd
nop
into
mov
mov
xchg
cwtl
rorl
lahf
push
iret
mov
inc
sbb
lret
insb
fstpl
aaa
inc
cmc
daa
out
fsubrs
int
imul
and
outsb
icebp
jae
jg
inc
lods
fadds
pop
adc
sbb
shlb
ja
adc
or
aam
dec
xor
sbb
xchg
pushf
sbb
inc
jl
bound
and
mov
xchg
mov
mov
jp
lret
lahf
test
int
lret
xchg
nop
mov
xchg
or
mov
jl
dec
insl
div
fstpt
hlt
fistpl
mov
insl
and
repz
gs
inc
jno
push
call
packuswb
jne
push
pop
push
sbb
ja
mov
loopne
or
push
pop
dec
xchg
js
inc
inc
je
add
mov
mov
mov
inc
jbe
mov
addb
aad
adc
iret
mov
iret
aad
out
push
adc
mov
jg
lahf
aad
pop
mov
dec
jae
test
shrl
or
cmpb
or
push
cmpsl
add
movsbl
jns
xorb
ja
pushf
js
mov
lea
adcl
cltd
mov
xchg
into
fwait
mov
xchg
lods
jns
push
xchg
xchg
fwait
inc
xchg
or
lret
orb
sbbb
icebp
fldl
sub
das
push
pop
push
xor
test
cmp
sub
pop
pop
cltd
cmpsl
lahf
jecxz
xchg
pushf
data16
mov
xchg
dec
adc
push
cld
xorb
pop
out
mov
mov
cmp
nop
push
fld
jo
mov
xchg
outsb
mov
cmp
jne
xchg
je
mov
push
lret
nop
icebp
cli
push
xlat
dec
stos
out
push
jl
jg
pop
or
mov
fistpll
jns
cltd
aaa
mov
cmp
stos
pushf
inc
loopne
jle
loop
test
cltd
mov
jl
jge
popf
popl
jno
int3
jae
cmp
jnp
imul
jne
in
aaa
iret
mov
xchg
xchg
rclb
xchg
aaa
mov
xchg
xchg
mov
inc
cmpsl
int3
fwait
leave
dec
icebp
cmp
push
inc
mov
pop
push
xchg
js
cmp
nop
jo
dec
jnp
ds
inc
repnz
pop
enter
daa
imul
fsubp
pushf
fwait
push
out
je
jle
add
outsl
jbe
outsl
imul
jb
inc
mov
data16
shlb
jb,pt
add
xchg
jo
or
incl
insl
ja
int
jp
jbe
xlat
mov
fisttps
lret
cmpsl
loop
pop
cmp
aad
js
lahf
lcall
adc
xchg
arpl
jbe
jl
jge
loopne
aam
fwait
insl
loop,pn
cmc
jno
into
mov
or
clc
lret
aad
mov
inc
xchg
mov
xchg
aad
xchg
cltd
mov
outsb
jmp
push
mov
pop
or
fldt
mov
mov
xlat
ficoml
std
cld
loopne
sbb
sarl
mov
sbb
daa
inc
insb
jbe
sahf
jne
mov
ja
outsb
shl
jecxz
mov
mov
mov
lea
xlat
and
sbb
jge
outsb
int
dec
push
mov
fwait
jno
push
mov
jge
les
pop
push
sbb
pop
adc
mov
add
int
repz
sbb
enter
ret
loopne
or
inc
xchg
aaa
or
xchg
outsb
add
int3
adc
jnp
mov
push
mov
pop
add
sarb
addr16
xlat
xchg
sbb
mov
fstpl
subl
lret
insb
xchg
ja
nop
iret
pushf
xchg
dec
jnp
int3
sbb
and
stos
cmp
orl
cld
inc
xchg
jno
sbb
mov
popf
mov
jle
or
jns
cmp
xchg
cmpsl
and
shll
jnp
push
insl
sbb
xor
imul
add
test
lea
push
lcall
mov
and
leave
imul
mov
jbe
outsl
jle
into
nop
iret
cmc
jl
add
ja
aam
push
testl
pop
mov
scas
out
fwait
pop
test
cli
sub
jo
call
sahf
mov
push
adc
cwtl
outsl
jbe
xchg
fcmovne
jmp
mov
imul
in
cmp
test
mov
std
jns
jns
cltd
fcom
stc
mov
aas
push
inc
inc
lahf
imull
xchg
jns
ficoml
sbb
gs
sahf
xor
sti
cmp
jb
xlat
pop
int3
dec
jno
mov
or
inc
sub
xchg
xchg
aaa
inc
cmp
shlb
cmpsl
lea
jecxz
xor
jns
cmp
pushf
cli
int3
xchg
insb
adcl
mov
or
push
push
xchg
sub
jecxz
lds
mov
inc
jno
in
jl
lods
xchg
dec
in
ret
inc
cld
push
mov
xchg
inc
ja
mov
mov
mov
int
add
pop
jnp
add
ror
xchg
xor
js
xchg
leave
fcoms
outsb
out
cmpb
stc
nop
jl
dec
iret
cld
cli
rorl
pop
in
xchg
iret
sbb
add
jle
fisttpll
push
in
lret
or
jae
mov
mov
mov
ljmp
int3
mov
jle
cltd
fisttps
lods
jg
mov
sbb
jle
iret
mov
xchg
mov
je
and
push
ror
aam
inc
outsl
daa
xchg
iret
xlat
das
orb
popf
pop
sbbb
leave
rorl
xchg
or
repz
mov
xchg
je
mov
repz
lahf
fstl
into
fnstenv
imul
popf
int3
or
nop
test
inc
imul
pushf
out
nop
rclb
lret
arpl
insb
jg
or
inc
outsb
mov
les
inc
sbbb
adcb
int3
ja
mov
leave
mov
pop
cwtl
sub
mov
cltd
sahf
mov
lcall
nop
enter
mov
ja
and
jl
push
add
push
xor
push
mov
imul
mov
test
sarl
outsl
mov
mov
mov
sti
movsl
jns
xchg
scas
xor
xchg
cmpsb
inc
push
je
cwtl
jo
ja
mov
push
ficoml
aam
ret
cmpl
out
xchg
aas
mov
add
lea
mov
jo
jp
rolb
xchg
cld
or
lret
js
mov
addr16
push
das
mov
sbb
arpl
push
xchg
jo
jne
imulb
mov
pop
jg
mov
xchg
leave
add
jl
ret
mov
jg
sbb
imul
lods
xchg
outsb
xadd
add
aad
and
cltd
cmp
dec
and
inc
das
adc
cmp
jge
xlat
test
jno
mov
int
cmpsb
xor
cmp
jmp
fistpl
mov
jae
insb
cli
mov
imul
xchg
iret
mov
shlb
lock
mov
dec
iret
xor
push
push
xchg
mov
mov
dec
mov
jge
fwait
ja
xor
outsl
cwtl
xchg
mov
iret
stc
cmp
dec
ja
sub
or
xchg
dec
daa
rcrb
jns
xchg
mov
mov
into
xor
xchg
sti
sbb
mov
lret
loop
int
mov
inc
xor
insl
cwtl
out
rorb
mov
mov
addb
aam
mov
mov
nop
cli
push
mov
sub
xchg
inc
es
insl
mov
ja
jne
inc
test
cmpsl
js
je
jno
nop
lcall
imul
fs
jl
mov
jae
xchg
roll
int3
nop
je
lret
jbe
sbb
xor
ja
das
dec
inc
mov
lahf
fisttps
pop
lret
xor
pop
scas
jg
outsb
mov
mov
mov
add
lahf
mov
test
ror
rcrb
insl
mov
pop
stc
stc
jl
fxch
adc
mov
sbb
xchg
xchg
cld
inc
enter
hlt
mov
cmp
cmp
fsubs
cmpsl
pop
mov
lret
popf
imul
jl
sbb
xor
lcall
test
jg
sti
mov
orb
sbbb
ss
jecxz
mov
inc
mov
adc
lret
sbbb
adc
inc
lret
pop
shlb
xchg
cwtl
imul
adc
mov
jnp
sbb
ja
xchg
hlt
xorb
mov
ds
cmp
mov
cmp
jl
push
cli
and
imul
nop
das
jle
jbe
jp
jb
jp
pop
cld
insl
lcall
jg
jns
inc
cld
repz
cwtl
inc
js
je
xorb
sbb
jo
cmpb
inc
mov
xchg
lret
mov
iret
cwtl
jg
into
call
rcr
mov
dec
int
aam
into
addr16
mov
xlat
lds
das
shrl
daa
pop
jno
popf
or
push
add
xor
iret
pusha
insl
or
cmp
ja
pop
jo
fs
es
and
cmp
stos
adc
or
rorb
inc
out
leave
inc
lret
fimull
lcall
jl
mov
imul
in
lahf
ret
sub
lcall
iret
jae
xor
cmpsl
imull
sbb
cld
ds
add
xchg
dec
pushf
and
mov
sbb
xchg
in
push
call
int3
jecxz
insl
insl
imul
push
ret
and
outsl
lea
cmp
inc
mov
js
mov
jns
je
xchg
lahf
ja
jno
jae
fwait
xorb
daa
lea
adc
push
dec
fidivl
imul
scas
jae
andb
imul
xchg
dec
out
repnz
cwtl
xor
inc
into
mov
sbb
fbstp
outsl
ds
lahf
xor
sti
call
xchg
jp
mov
jl
or
outsb
add
adc
leave
mov
or
xchg
mov
jo
jne
frstor
cltd
mov
imul
add
xchg
jae
cmpsl
jmp
ljmp
loope
int3
outsl
or
adc
mov
adc
jg
or
xchg
xchg
rolb
jns
imul
outsl
pop
sbb
out
cmpl
and
inc
sbb
pxor
pop
dec
imul
mov
xor
pushf
mov
xchg
cltd
xlat
mov
adc
movl
repnz
inc
and
mov
aaa
sbb
mov
fmull
int3
cwtl
stc
inc
pushf
jns
cmpsl
loopne
iret
test
lret
outsl
lahf
jle
jg
insl
mov
into
mov
mov
mov
test
xor
or
mov
pop
stos
jmp
or
mov
sar
int3
repnz
pop
jg
xchg
cltd
das
add
lods
mov
aas
nop
and
rolb
fsub
inc
arpl
push
fmuls
dec
rcrl
xor
nop
mov
out
xlat
jae
mov
mov
int3
mov
cmpsb
jg
lods
xchg
mov
mov
lret
aam
fwait
push
xchg
mov
add
imul
je
dec
xchg
mov
xchg
jns
inc
jp
insl
xlat
mov
outsl
jecxz
ret
mov
jns
stc
ficomps
outsl
lahf
sahf
subb
sbb
aam
xchg
jnp
jle
inc
ret
or
insb
repz
inc
iret
add
mov
pop
mov
xor
das
lea
repnz
out
jge
in
fistl
nop
mov
mov
imul
jno
cmp
leave
xchg
lahf
push
js
jg
mov
outsl
xchg
sarl
je
push
inc
jb
jns
mov
add
xchg
arpl
cmpsl
or
fmuls
jae
imul
sahf
mov
imul
popf
push
outsb
and
inc
imul
push
xchg
jno
xchg
ja
lcall
lret
add
or
subb
mov
cmp
sahf
jle
cmp
jl
cli
mov
lcall
cld
mov
inc
in
add
leave
outsb
jle
mov
pop
mov
ja
ja
mov
jle
lcall
jnp
adc
add
cwtl
xlat
jle
add
inc
nop
jl
into
mov
enter
aam
out
xchg
outsb
xlat
out
jg
xchg
imul
sbb
xchg
mov
inc
leave
ja
gs
jg
movsl
push
les
cmp
xchg
jno
js
insl
jp
daa
jae
jg
ror
leave
stos
js
cmp
jg
subb
lods
xchg
insb
mov
cwtl
xor
clc
and
jb
mov
loope
sbb
jbe
jg
int
js
imul
stc
mov
cld
mov
mov
jb
test
arpl
jno
popf
mov
jo
ja
mov
inc
mov
ja
test
jp
mov
out
mov
inc
jne
mov
std
aam
xlat
lcall
mov
mov
fildl
xchg
popf
mov
xlat
inc
mov
cli
iret
fwait
imul
sub
and
push
jnp
and
imul
outsl
addr16
test
outsl
dec
jle
pop
movb
mov
js
cltd
nop
ja
lcall
jns
insl
das
fmulp
mov
fwait
scas
mov
cmpsl
insb
lret
popf
pushf
jle
dec
cli
pop
jle
outsb
ret
xchg
adc
adc
test
js
repnz
icebp
fwait
arpl
inc
aad
nop
stc
fisttpll
mov
lret
imul
mov
push
dec
pop
pop
in
pushf
xchg
sub
into
sub
daa
imul
jl
xor
jg
cmpsl
fsubrs
jmp
mov
inc
nop
mov
mov
jmp
mov
jne
aad
jo
mov
fwait
lds
insb
mov
cmp
je
xor
push
subb
mov
addb
jg
popf
push
jecxz
inc
sbb
push
xchg
mov
ss
jns
sahf
xor
pop
pop
jae
outsl
lret
pop
cwtl
inc
dec
adc
std
je
mov
jae
insb
andl
sbb
shrb
inc
lea
jno
inc
aaa
in
jg
mov
mov
jnp
cltd
data16
cmc
jg
push
iret
mov
mov
outsb
lret
adc
cmpb
or
mov
aas
jae
imul
ret
jns
sbb
cmp
mov
dec
fwait
push
pop
mov
or
xchg
inc
jns
push
sahf
mov
push
int
lods
mov
xchg
mov
mov
xchg
mov
jbe
mov
mov
dec
mov
imul
sahf
outsl
cld
xchg
add
daa
mov
outsl
xchg
and
insb
outsb
lret
lahf
iret
mov
xchg
jb
rorb
jnp
popf
cmp
test
es
pop
mov
lds
xor
ret
jl
push
movsl
add
mov
js
movsl
cmp
lcall
js
jle
in
testb
inc
and
lcall
xlat
cwtl
jl
sbbb
mov
cmp
mov
and
sarl
cli
pop
xchg
popl
jbe
xchg
repnz
inc
inc
int3
arpl
dec
test
popf
xchg
lahf
insl
mov
mov
rclb
fwait
movsl
jo
adc
stos
outsb
into
mov
hlt
imul
xchg
dec
iret
cmpb
cmpl
cltd
je
push
jp
int
dec
cld
mov
sub
mov
jns
xlat
pusha
mov
pop
add
cmp
imul
stc
sbb
lahf
add
and
outsb
outsl
xor
shll
mov
data16
push
mov
js
inc
jge
rcrl
shl
jl
addr16
add
cltd
jno
sub
aaa
mov
je
enter
in
xchg
mov
pop
mov
xlat
leave
rorb
out
jb
sbb
push
mov
in
je
sbb
mov
mov
inc
sahf
mov
popf
xor
test
add
jge
mov
xchg
mov
inc
in
jl
fcmovnbe
shrl
mov
cld
xchg
test
sahf
lcall
cltd
test
adc
jno
in
and
lahf
add
imul
xchg
subb
cmc
sbb
jae
xchg
xchg
jns
iret
mov
sahf
insl
jo
cmp
push
lods
nop
repz
mov
aaa
jle
lock
jae
pop
push
add
sbb
pop
xchg
lds
mov
outsl
jl
or
or
jb
daa
orb
xchg
mov
jle
cltd
cmp
jb
or
mov
int
outsb
js
sbb
or
stos
xchg
int3
push
mov
jecxz
mov
jmp
jns
jg
pop
cmp
mov
pushf
mov
mov
jno
icebp
jmp
in
loop
leave
leave
sub
mov
mov
jl
inc
lret
xchg
lret
mov
dec
jae
ja
addb
mov
cmp
test
jp
dec
lods
cwtl
movl
aad
or
cltd
jnp
stc
ds
cmp
stc
mov
lcall
iret
sar
js
loopne
cli
cltd
xchg
adc
sub
dec
mov
cmp
shrb
dec
jnp
lcall
fwait
stos
mov
lea
xchg
xchg
rorb
push
adc
jo
sti
fidivrs
jl
xchg
mov
lods
int
inc
pop
movsl
ljmp
lcall
popf
repnz
mov
or
insl
push
xlat
mov
insl
lcall
sti
sbb
test
mov
xlat
shlb
dec
iret
adc
xor
jmp
sbb
arpl
lahf
xchg
test
fbld
es
mov
sbb
ja
mov
sti
sahf
pop
cmp
and
xchg
insb
test
mov
add
lret
inc
subl
jp
into
lcall
orb
dec
fbld
mov
into
lret
clc
jns
adc
subl
adc
xorl
push
fnstsw
mov
adcl
and
aad
int3
sti
and
icebp
sti
aam
popf
add
imul
cwtl
pop
lahf
pop
aaa
int
xchg
stos
outsl
test
add
jne
leave
mov
daa
mov
jbe
jl
add
fcmovb
inc
mov
imul
inc
mov
fsubrs
ja
or
mov
pushf
jo
mov
sbb
mov
push
cwtl
and
or
xchg
lods
mov
push
xor
in
cmp
inc
lret
fwait
jle
mov
or
arpl
je
adc
outsb
mov
push
mov
fdivrs
aam
xchg
sub
jo
ret
je
xchg
lret
sbbl
lods
jnp
cmp
jp
into
fists
sahf
andb
pop
iret
sub
xchg
mov
jle
add
sub
xchg
jo
mov
inc
mov
iret
pop
push
adc
xchg
cwtl
mov
mov
mov
mov
adc
xchg
cmp
das
outsl
fbstp
sbb
jno
scas
mov
xorb
lcall
mov
mov
lret
aam
mov
iret
xchg
imul
add
shlb
adc
lret
out
fbstp
dec
jg
insb
je
fwait
mov
inc
xor
jae
cmp
pop
xchg
inc
mov
mov
jbe
pop
sub
popf
lret
loopne
cwtl
fmuls
mov
mov
xchg
jae
lea
jmp
outsl
insl
das
cmp
enter
orb
out
je
mov
xorb
fcomip
or
negb
mov
outsl
lahf
iret
sub
cli
imul
jns
sub
mov
icebp
inc
push
imul
sbb
mov
xlat
hlt
mov
lahf
fdivrs
mov
jns
jl
lcall
pop
mov
jl
dec
rcr
nop
outsl
fistpll
lds
cli
push
popf
ret
add
and
loopne
mov
dec
je
xlat
nop
jne
imul
and
and
mov
idivb
mov
jae
int
add
fldl
dec
push
mov
cmpsl
popf
pushf
fwait
jb
xchg
cs
inc
repnz
fsubs
jle
jns
cmpsl
sub
das
push
lcall
cli
cmp
out
or
fsubrs
jg
xchg
sub
in
xor
mov
mov
je
dec
aaa
push
cmp
inc
jp
xchg
add
rol
adc
jno
aam
inc
xlat
das
mov
mov
inc
jno
inc
jg
adc
nop
xchg
popf
mov
int
hlt
dec
jl
jo
jno
int3
aad
call
outsl
cltd
ja
push
mull
inc
fadd
jo
lea
js
pop
test
fidivs
cld
xchg
int3
cmpsl
rclb
xchg
imul
or
fistpl
lret
sbb
xlat
fwait
jbe
jle
iret
dec
jnp
ret
in
xchg
lcall
es
push
inc
in
push
inc
loop
cli
xchg
movsb
sarl
clc
xchg
inc
out
into
or
sbb
orb
insl
jle
or
adc
xlat
outsl
xlat
fstpl
mov
lahf
dec
xchg
cmpsl
test
lea
mov
add
jge
push
mov
subl
stos
jb
xchg
add
lret
push
xlat
leave
fwait
rorb
lahf
lods
or
in
pop
cwtl
jp
lcall
jns
inc
pushf
jnp
or
mov
xchg
lahf
insl
lahf
xor
xor
dec
je
stos
jge
mov
sti
jae
xor
xchg
lea
add
leave
imul
int
ja
das
pop
ja
fs
jnp
inc
mov
jp
jns
fcomps
bnd
rep
iret
rclb
sbb
hlt
adcb
out
leave
inc
int3
push
mov
add
mov
cltd
jne
mov
leave
insl
xor
aad
jns
cld
xchg
popf
xchg
cmpsb
lods
pushf
lea
lcall
lret
mov
xlat
jo
inc
sahf
dec
fwait
push
sub
mov
jo
lret
iret
in
je
imul
cwtl
aam
data16
lock
xchg
daa
push
jnp
inc
lcall
and
lret
insb
xchg
sbb
iret
pushf
xor
ret
aaa
int
inc
mov
push
inc
jae
addr16
sahf
mov
xor
leave
pop
inc
push
outsl
js
mov
jmp
jl
mov
mov
xchg
das
pop
push
push
das
pop
cmpsl
popf
and
push
cmp
aam
xlat
sub
xchg
sarl
pop
jb
xor
push
idivb
push
jno
mov
xchg
daa
jo
jb
push
leave
stc
insb
stc
rol
aas
mov
adc
lea
testb
stc
scas
es
int3
mov
out
mov
jl
aad
jge
push
push
or
xchg
jle
xchg
std
fstpt
mov
subl
cli
or
mov
iret
nop
cltd
mov
xchg
lods
lahf
ror
lahf
xor
push
jl
out
movsl
mov
iret
mov
insl
clc
mov
pop
iret
cmp
ret
das
fcompl
jns
int3
sbb
sbb
cltd
jne
jg
push
test
pop
js
and
inc
adcb
cmp
test
jae
call
mov
imul
je
sbb
sbb
or
ljmp
fwait
mov
inc
stc
jns
sub
jae
mov
dec
aaa
das
data16
popa
dec
ja
pop
xor
mov
pop
int
hlt
pop
mov
jl
fwait
cli
mov
outsb
int
jns
lahf
pop
add
mull
xchg
js
jg
leave
or
push
andb
sarb
stos
cmp
xlat
pop
cmpb
pushf
cmovno
push
mov
insb
ror
push
sub
out
mov
fwait
je
jnp
ret
push
adc
mov
mov
aam
mov
mov
mov
mov
dec
jns
inc
cmpb
cmp
imul
outsl
jbe
iret
and
arpl
cmp
outsl
lea
mov
pusha
jo
and
add
push
mov
jno
orb
test
ja
inc
mov
cmp
imul
je
pop
sub
mov
lahf
popf
xchg
sbb
xlat
mov
xchg
xlat
or
sarl
lods
xchg
push
lods
add
jb
xorb
loopne
mov
outsl
push
faddp
xchg
cmp
outsl
test
jb
mov
xchg
je
out
popf
lods
mov
lret
cmp
jno
jo
popl
les
mov
orb
xchg
out
mov
and
lahf
insb
js
mov
into
dec
or
mov
mov
jnp
andb
adc
and
dec
add
scas
xchg
out
xchg
inc
adc
or
jo
lds
xchg
inc
sub
jb
enter
lret
fistps
lahf
jl
int
cmp
daa
sub
jne
je
adc
xchg
ja
jle
adc
ljmp
fwait
jnp
or
pop
cltd
je
mov
subb
leave
mov
jge
addr16
into
outsb
aad
mov
xchg
inc
pop
fmuls
xlat
mov
sarb
cmp
or
test
into
jmp
mov
xchg
hlt
cmpsl
pop
jmp
js
lret
mov
adc
jb
jne
adc
jg
je
dec
lea
xchg
ljmp
xchg
imul
aad
lds
and
jg
cltd
jae
aaa
jmp
lock
fst
jg
jo
mov
push
cmpl
outsl
imul
cmp
xchg
jg
mov
imul
jge
mov
jns
fmuls
cmp
jno
fwait
sbb
adcb
sbb
stos
mov
pop
out
insb
mov
lcall
mov
mov
mov
push
adc
push
jns
int3
mov
xchg
jno
subb
jae
adc
xchg
mov
cmc
xchg
push
add
push
bound
sbb
pop
sti
pop
lods
lret
jo
jecxz
cmp
jns
sbb
ds
js
sub
add
dec
je
xchg
ja
addr16
outsb
and
jp
mov
adc
adc
or
rcr
inc
cltd
imul
lcall
mov
lahf
outsb
jns
lcall
xor
jnp
pop
les
pop
inc
jp
outsb
adc
dec
inc
loop
lret
iret
sbb
inc
int3
push
fwait
pop
lcall
cmpb
dec
mov
pop
jne
push
xchg
push
adc
push
jne
cmp
push
iret
mov
mov
cmpsl
adc
outsl
inc
lods
loopne
mov
adc
std
aam
test
jne
jae
into
out
fwait
das
xchg
cmp
outsl
mov
inc
push
ficompl
xchg
lea
mov
fdivs
andb
cmp
xchg
jmp
cmpb
mov
jne
sub
mov
inc
xchg
mov
fwait
jae
jo
jno
mov
jle
loopne
lret
lods
lret
les
popf
imul
mov
pusha
pop
jg
mov
nop
jae
pop
cmp
lcall
mov
ja
nop
fmuls
decb
jbe
mov
outsl
js
pushf
nop
jne
orb
rcl
xchg
lea
gs
shlb
xchg
cmp
mov
xchg
xchg
jmp
pushf
fsts
cld
cmp
lret
hlt
dec
cmp
stos
or
fdivl
seta
add
mov
pushf
iret
lret
sar
mov
sbb
jno
or
lret
or
orb
addb
imul
jl
cli
mov
mov
pop
adc
aaa
iret
out
jns
in
jbe
sub
sbb
cwtl
nop
xor
push
cmpsb
xor
sbb
movsl
jae
adc
xchg
xchg
add
jno
js
loope
jg
call
mov
insb
cltd
or
scas
int
lret
mov
popl
cmpl
mov
fsubrs
xlat
ret
cltd
xchg
js
pop
sbb
adcb
inc
dec
aad
push
mov
jle
dec
outsl
mov
xchg
cmp
lcall
jg
cmp
leave
pop
bound
mov
mov
jne
xchg
dec
mov
iret
out
lods
cmp
mov
pushf
xchg
inc
push
cmp
inc
or
je
pop
mov
repnz
push
jge
sub
repz
cltd
jle
lea
xor
insl
out
test
jbe
fstpt
mov
pop
daa
aas
jns
add
dec
mov
sbb
lahf
xorb
ret
jae
dec
lea
iret
jnp
insb
jg
ror
pop
scas
cmpsl
push
jnp
nop
sbb
jg
hlt
stos
insl
jle
lahf
mov
lret
jnp
scas
fidivs
xor
jb
jne
repz
roll
gs
rcll
inc
lock
xor
xor
pop
mov
cli
ljmp
imul
mov
mov
pop
clc
lret
pop
fucomp
jp
ja
mov
out
mov
cltd
mov
dec
ljmp
lods
int3
xchg
jnp
sbbb
arpl
stos
mov
jae
in
ds
add
jae
out
inc
jge
jl
jle
lods
mov
xchg
cmpsl
mov
stos
fst
fstl
ficomps
idiv
pop
jle
sub
jle
testb
lahf
scas
ja
xchg
and
jne
mov
jp
testl
aam
jnp
mov
mov
insl
je
lds
mov
xchg
sub
xchg
xchg
fstpl
iret
dec
orl
or
cmc
lret
jno
mov
inc
inc
mov
xchg
mov
lret
ljmp
fmul
pop
ja
inc
popf
xchg
mov
mov
call
leave
mov
lret
sahf
aaa
mov
fwait
insb
jne
or
lahf
mov
fbstp
jno
fdivr
rolb
sbb
xchg
mov
outsb
add
lret
xchg
pop
inc
insl
repnz
cmp
mov
lret
fwait
jb
xchg
leave
jge
add
push
pop
mov
pop
jo
sub
lods
ret
pop
in
jne
adcl
into
fsubs
mov
mov
jp
mov
fwait
nop
int
and
mov
adc
lds
sahf
dec
cmp
mov
outsl
insl
fidivl
iret
jp
mov
lcall
in
jo
ja
lcall
jb
outsb
inc
in
cwtl
mov
jl
int
int3
or
cmp
mov
jle
push
and
xchg
mov
int3
inc
xor
out
jne
addb
pop
jp
pushf
stos
mov
cld
outsl
pop
mov
mov
lcall
arpl
lahf
push
negl
mov
xchg
xchg
mov
iret
push
cwtl
pop
and
mov
add
push
int
punpckhwd
lea
cwtl
pop
std
or
std
mov
jl
inc
mov
movsb
out
sti
adc
push
insb
xchg
movsb
imul
sahf
lcall
mov
jle
fwait
cmp
outsb
sbb
outsb
shll
mov
inc
int3
inc
ja
js
mov
fstpt
sahf
fcmovbe
ljmp
xchg
in
fnsave
stc
imul
xchg
mov
int3
movsl
xchg
pop
xchg
imul
cltd
push
mov
xchg
ljmp
into
lods
js
mov
adcb
jg
pop
pop
push
push
shll
xorb
repnz
iret
pop
iret
pop
call
mov
leave
outsl
loopne
xchg
out
cmpsb
mov
lea
int3
mov
push
out
xchg
imul
scas
jns
mov
into
mov
mov
mov
imul
cmp
outsl
cli
std
int
xor
jno
in
inc
inc
aad
data16
xchg
xchg
mov
sahf
add
test
mov
lret
xlat
notl
pop
xor
insl
jo
popf
out
mov
out
insl
lds
xchg
jb
xchg
nop
push
pop
daa
xchg
jl
lret
adc
fistpll
sub
arpl
dec
inc
inc
popf
mov
lahf
xor
jp
test
lret
popf
lds
imul
aaa
repnz
ja
cmp
mov
mov
push
jg
mov
pop
xor
mov
mov
push
jae
inc
fildl
mov
mov
pop
xlat
jno
xchg
imul
decb
jae
movsl
test
xchg
shlb
push
jg
jae
dec
cs
mov
mov
inc
iret
cmpb
push
inc
mov
sub
jno
repz
jb
hlt
pushf
mov
jl
mov
inc
jno
iret
or
into
int3
aaa
sbb
sbb
js
inc
lret
inc
pusha
mov
mov
movsl
lret
fnstenv
lcall
jbe
insb
add
ljmp
xchg
add
xor
xchg
mov
call
mov
imul
repnz
xlat
mov
mov
xchg
std
mov
outsl
mov
insl
jg
insl
sub
xchg
int3
fbld
cmp
cli
mov
xchg
in
loope
lods
jle
pop
movsl
je
sbb
lret
xchg
lcall
outsb
jns
cli
imul
mov
lcall
or
sub
add
xchg
cmp
insb
jle
push
cmp
lret
push
mov
xchg
test
inc
xchg
mov
repnz
adc
out
aaa
aad
into
jp
cwtl
push
xchg
mov
jle
jle
fbstp
imul
mov
jne
pushf
arpl
jne
sub
mov
int
or
std
jnp
or
jp
inc
mov
je
jb
jg
les
cld
outsb
addb
leave
xchg
mov
xchg
xor
jnp
fdivr
inc
cmp
outsl
insl
and
inc
xchg
sahf
jno
insb
cld
lret
lret
add
outsl
mov
mov
sar
push
cmp
lahf
jl
lcall
jns
das
int3
aas
cs
je
mov
into
out
out
lahf
test
je
lods
pop
lods
ljmp
or
xchg
inc
arpl
sti
adc
xor
mov
jl
jge
jnp
jg
jno
insl
fldt
cmpb
mov
mov
jae
movb
lahf
dec
lea
lcall
outsb
lcall
dec
dec
imul
pop
bound
mov
sub
xchg
test
ret
jge
sub
in
fwait
aad
jno
call
test
jne
adc
icebp
lods
push
add
inc
sub
lret
sbb
push
lret
stc
mov
popa
inc
xor
push
lea
xlat
sub
mov
mov
fidivrs
xchg
aaa
leave
aaa
jmp
outsl
inc
xchg
xchg
jns
xlat
cld
pop
fwait
jbe
sbb
jnp
xchg
jle
popf
cltd
popf
sub
repz
xorb
rclb
mov
in
jnp
dec
fmuls
fcoms
xlat
imul
push
sbb
dec
aam
jb
inc
lea
xchg
das
cmpsl
mov
rcl
mov
sbb
ret
cmp
jp
fs
out
lahf
data16
pop
js
push
push
adc
cld
mov
stc
inc
sbb
sbb
icebp
sbb
and
leave
inc
out
xchg
das
jmp
cmc
arpl
addb
test
jnp
mov
mov
ffree
push
pusha
not
in
das
pop
pop
lea
sub
lss
mov
jo
mov
scas
arpl
cwtl
push
mov
mov
pop
sub
mov
outsl
inc
test
arpl
gs
enter
mov
iret
jb
push
iret
jp
cwtl
cli
std
jae
aad
cmp
push
mov
sbb
inc
movsl
aam
stc
jge
mov
jb
outsb
jl
popa
into
sub
xchg
push
push
scas
leave
cltd
xorb
push
xor
dec
cwtl
inc
xchg
dec
cli
lcall
adc
stos
jbe
sbb
push
ds
into
jl
push
ret
jno
mov
stos
repnz
mov
cmp
and
pushf
into
adc
mov
jae
call
orb
adc
jecxz
inc
push
fwait
jo
xchg
mov
je
mov
xor
pop
pop
mov
jl
pop
into
jle
cmc
cli
aaa
leave
cwtl
daa
adc
jae
jae
adc
test
and
outsl
push
or
mov
andb
shrb
sbb
inc
jg
stc
test
nop
mov
mov
lahf
sahf
adcl
mov
mov
outsl
inc
cmc
sbb
xor
jg
leave
mov
insb
enter
test
jo
mov
push
mov
das
jecxz
stc
fadds
jge
js
fmulp
popl
loopne
mov
mov
fwait
adc
test
cmpsl
jl
pop
jnp
adc
js
sbb
lods
mov
lds
push
mov
jbe
cmpb
cli
stos
jge
iret
vmovdqa
sbb
ljmp
aaa
sub
xchg
and
cmp
lea
test
adc
insb
mov
push
fiaddl
insb
lcall
or
xor
push
mov
dec
sub
imul
dec
lock
xchg
mov
inc
ds
pop
shrl
jb
or
push
sahf
scas
jl
pushf
sti
cwtl
jne
sarl
jno
fcmovnb
xchg
fcmovnb
mov
les
mov
je
js
inc
jl
mov
outsb
shrb
pop
cwtl
or
push
jns
imul
mov
popf
jbe
mov
mov
sahf
sti
sti
incb
inc
std
outsb
fsubrs
mov
mov
je
paddsw
push
mov
push
subb
shll
pop
repz
insl
cmp
inc
jmp
jbe
push
pop
fmul
je
cld
mov
push
xchg
daa
popf
imul
xlat
rclb
mov
jno
ror
int
fwait
sub
inc
leavew
jns
jl
sbb
fimull
jns
int3
daa
mov
pand
jb
mov
mov
or
mov
inc
vmread
jns
iret
xchg
inc
and
stc
mov
inc
cmp
scas
mov
jl
xlat
inc
jp
cmpsl
adc
insb
rol
lahf
int3
xchg
push
mov
adc
data16
fisttps
repz
jo
outsb
mov
cwtl
dec
cmp
leave
std
scas
mov
cltd
call
loope
mov
cwtl
stc
enter
rolb
inc
jl
aam
lahf
fwait
popa
jg
mov
mov
ja
mov
cwtl
jge
add
aam
imul
pop
jl
pop
ja
jns
cmp
mov
mov
fwait
sbb
lret
lret
xchg
xchg
cmp
inc
int3
ret
lcall
fldt
out
inc
mov
jo
and
mov
mov
push
popf
jle
mov
movsl
mov
lea
xlat
aaa
cmp
pop
sub
jno
int3
xchg
lods
sub
push
aam
std
xor
dec
pushf
sbb
jne
lock
dec
arpl
cltd
mov
xor
push
cmp
xchg
cmpsl
mov
jne
jg
fsubs
shrb
push
inc
ret
lret
insl
lret
out
ja
jo
daa
call
cmc
inc
mov
jl
lea
jp
insb
mov
xlat
and
push
adc
jp
push
jge
ret
fnstsw
loopne
test
cmp
mov
outsl
nop
mov
ret
cmp
inc
lea
jns
cmp
jo
jg
sub
repnz
popf
inc
out
mov
jbe
mov
lcall
push
imul
inc
aaa
or
jne
mov
jno
es
fwait
jo
mov
mov
mov
mov
jp
xchg
lcall
lahf
enter
in
inc
mov
mov
fcmove
cmc
jmp
jp
mov
arpl
jg
rorl
jg
outsl
xchg
cmpsb
cmp
stos
and
lret
outsl
imul
add
mov
jno
andl
push
jns
lahf
das
je
xor
inc
sbb
jo
int
xchg
jle
test
jmp
cmp
pushf
jp
push
js
das
push
jle
mov
mov
fwait
and
jnp
mov
je
add
inc
les
leave
xchg
jl
jne
ret
outsl
mov
imul
jne
sbb
push
fwait
cmpsl
rcrb
and
jbe
imul
pop
push
jb
insb
mov
jecxz
jnp
jns
int3
mov
xchg
cmp
jg
inc
lds
and
jle
ljmp
pop
fstps
jmp
outsl
mov
aaa
or
fcomps
dec
daa
adc
adc
mov
mov
mov
ficoms
leave
outsl
pushf
addb
popf
inc
mov
mov
mov
dec
adc
mov
xchg
xorb
jno
outsb
sub
xchg
in
call
imul
pop
cmp
cli
ret
lret
xchg
jl
jg
sbb
mov
push
cmp
xlat
cmpb
or
xor
pop
mov
cmp
xchg
inc
lret
lcall
cli
and
lea
jb
pusha
fistpl
outsl
xchg
sti
shrl
cmp
mov
mov
xlat
jbe
mov
js
sub
sti
nop
add
punpckhdq
lret
into
fldenv
sahf
inc
jno
or
jge
pop
mov
inc
scas
popa
add
lock
pop
cltd
jo
je
movsb
push
test
inc
fsubr
sbb
jns
fidivrl
or
adc
lcall
ljmp
andb
push
test
sub
jnp
cmp
adc
mov
sub
imul
insb
add
inc
inc
shrb
mov
jae
call
xchg
js
orb
out
rolb
xchg
jle
push
movups
stos
jae
fistps
lods
mov
jns
inc
scas
cmp
add
xor
inc
cltd
sarl
jne
orb
mov
nop
xchg
push
cltd
pop
in
cmp
xchg
imul
outsl
jae
outsl
dec
outsl
jns
ljmp
sub
mov
fwait
shll
jecxz
xor
inc
cmpsb
cmp
outsl
xchg
fs
ss
rorl
jnp
ja
sub
mov
shll
iret
jae
fidivs
add
jl
add
ds
push
jno
inc
repz
sahf
subb
js
push
dec
push
leave
jb
jp
insl
int
in
fwait
outsl
mov
jno
imul
lods
ja
xchg
ljmp
mov
jbe
jb
scas
arpl
pushf
xor
cmp
fidivrs
lret
xchg
stos
outsl
add
nop
ss
xlat
mov
jae
mov
push
adc
jae
mov
or
leave
jecxz
mov
popa
ja
mov
add
jnp
aam
popa
sub
js
aam
add
sub
in
mov
shrb
int3
test
arpl
nop
inc
popf
aaa
adc
jg
cld
mov
sbb
push
cld
push
into
and
jge
jae
pop
hlt
cmp
fdivrs
jns
movsb
fldt
cmpb
mov
pop
test
sbb
jl
pop
jno
adc
mov
outsl
out
push
cmp
lcall
cmp
stc
aad
push
push
jmp
dec
mov
xchg
lahf
ror
lods
aam
push
cmpsl
das
sub
divb
iret
or
xchg
adc
adc
into
jbe
cwtl
lret
shll
fdivs
sbb
test
jnp
mov
leave
fildl
xor
sbbb
clc
jg
dec
fldl
lea
js
xlat
das
xlat
or
mov
jno
out
fadds
stos
push
inc
push
movsl
cmp
ja
in
push
jns
cmpsl
in
lret
vphsubbw
xchg
test
lods
jb
mov
jae
xor
cli
cs
or
sbb
ja
mov
imul
imul
popf
je
mov
mov
mov
xchg
shrl
mov
rolb
push
enter
fmul
popf
mov
fisttpl
jge
iret
jnp
inc
mov
jbe
xchg
mov
sbb
mov
arpl
cmp
cltd
adc
push
jbe
into
loope
jle
sbb
jg
inc
cmp
inc
ja
inc
sbb
setg
push
sbb
aaa
jl
jb
xchg
xchg
into
insl
cwtl
cli
enter
push
jmp
jp
aad
hlt
xchg
imul
in
xor
pusha
jmp
mov
sbb
or
orb
jne
insl
das
cld
dec
insb
push
inc
aaa
mov
mov
out
xchg
ret
repz
jne
push
lea
imul
ja
mov
jg
cmp
imul
mov
mov
int3
hlt
cmpsl
mov
inc
fdivrs
cmc
xchg
iret
into
cmpsl
out
aaa
bound
sarb
cmpsb
xchg
cmp
int3
orb
js
xchg
jg
mov
push
mov
repz
xorl
pop
das
aaa
mov
pop
xchg
movq
xchg
insb
jmp
sbb
jmp
push
movsl
pop
call
mov
or
jo
outsb
jl
mov
insb
in
mov
xchg
inc
aas
jb
inc
jge
jbe
popf
or
jo
pop
pop
mov
mov
cwtl
cltd
inc
adc
xlat
fcmovne
mov
adc
xchg
mov
lret
ja
stc
xor
mov
lret
pop
push
xlat
xchg
sbbb
int3
jge
mov
pop
jge
xchg
out
fwait
outsb
mov
push
stos
add
mov
jge
xchg
leave
sahf
jns
inc
push
inc
insl
mov
mov
nop
lea
scas
out
imul
jb
test
jmp
js
mov
or
jnp
sbb
mov
push
fistpll
mov
outsl
jp
jl
fmuls
mov
pop
rcll
xchg
mov
push
xchg
xor
xchg
sarl
int3
jg
pop
mov
mov
nop
das
inc
adc
aaa
out
arpl
aaa
fidivl
int
push
jbe
pop
sarl
and
push
insl
jecxz
jns
sub
lods
insb
xchg
mov
imul
jg
cmc
pushf
in
pop
ja
inc
inc
flds
mov
fstpt
call
aam
divl
js
sbb
jge
sarb
int
mov
aaa
mov
mov
jl
jnp
outsl
mov
js
aaa
cmp
and
jne
pop
aad
jbe
das
sbb
dec
inc
mov
fmuls
xor
arpl
mov
jne
add
in
xchg
jp
jge
xchg
aaa
shll
stos
lret
aaa
bswap
js
andb
mov
imul
sbb
mov
jnp
pop
push
pop
loope
push
mov
and
rcr
test
lcall
idivl
push
sbb
inc
xchg
jb
fwait
leave
mov
js
je
cmpsl
test
fcoms
jl
xchg
sub
dec
inc
jno
xchg
mov
dec
push
lods
into
lret
in
push
outsl
lock
add
mov
sarb
jns
lea
push
push
mov
jle
inc
cmp
mov
xchg
push
ficompl
mov
insl
into
lods
push
shlb
push
adc
fisttpll
jne
call
or
aam
out
rcr
inc
ja
popf
or
inc
add
fcmovnb
mov
jge
cmp
leave
mov
inc
xchg
imul
mov
test
enter
jg
mov
jl
push
mov
inc
leave
push
js
loop
int
or
jne
daa
pop
lret
mov
lret
mov
les
fidivl
std
pop
outsb
je
mov
insl
jp
icebp
lret
pop
pop
ss
jne
sub
lods
fsub
xlat
addr16
jle
or
mov
xchg
mov
lds
iret
xchg
sahf
xlat
jg
mov
lret
xor
and
cmp
je
fidivl
mov
lret
adc
ja
push
outsl
movl
leave
jns
jle
fisubs
arpl
call
mov
sbb
mov
nop
mov
xlat
test
mov
mov
daa
iret
lods
insl
xchg
xchg
test
push
mov
mov
or
xchg
xchg
push
jge
lret
pop
or
jb
jnp
adc
jp
jne
aam
and
pop
mov
iret
jno
inc
nop
adc
xchg
xchg
sub
xchg
mov
int3
inc
mov
sbb
lock
outsl
idivl
sbb
jl
mov
imul
lret
jae
xchg
outsl
fsubp
insb
sbb
cmpsb
mov
aad
inc
icebp
iret
xor
jl
cli
scas
mov
pop
outsl
pushf
sub
sub
xor
iret
push
jns
movsl
push
fistps
stos
inc
int3
lret
push
sbbb
cmp
jno
adc
loopne
stos
adc
xor
test
xlat
fs
aaa
das
mov
push
mov
xorl
mov
insl
adc
xor
xchg
mov
jae
xchg
jns
outsl
push
scas
mov
adcb
push
inc
sbb
sarl
sbb
adc
movsb
daa
or
cmp
lahf
mov
lods
insb
xchg
mov
xchg
or
lcall
jbe
jne
aam
arpl
pop
in
fcomp
mov
icebp
jecxz
pop
inc
int3
arpl
shll
test
sbb
cmp
push
inc
cltd
test
push
xchg
aam
pushf
sbb
sub
je
mov
adc
std
nop
pop
sub
addr16
inc
enter
out
push
jl
popf
int
lret
arpl
sbb
mov
xchg
lret
cmp
xchg
sbbb
jbe
stos
cwtl
addr16
lret
mov
push
rorl
shll
enter
mov
sahf
jb
jno
je
sbb
pop
mov
cmp
je
ja
jns
mov
mov
imul
in
xchg
mov
jle
addr16
xlat
dec
jp
jge
xchg
das
mov
push
cmpsl
in
mov
stc
cmpb
mov
pop
push
mov
insl
jecxz
popa
xchg
arpl
xchg
jae
xchg
jns
cwtl
jno
outsl
cwtl
lret
xchg
xor
jg
and
pop
jno
inc
fwait
outsb
lods
jb
imul
cltd
nop
xchg
lea
jnp
iret
push
outsl
stc
lods
fcom
sahf
sarb
cwtl
or
mov
and
jle
out
xchg
test
xchg
mov
inc
xchg
jne
cmp
das
inc
jg
insl
jg
fidivrs
xor
cld
push
add
jns
jp
sbb
adc
mov
je
xchg
int3
roll
int
lods
dec
mov
jb
mov
pop
imull
insb
pop
jae
mov
mov
jo
pop
push
mov
fnstsw
inc
sub
rolb
dec
cltd
xorl
jp
lods
into
pushf
mov
mov
or
lock
test
xchg
mov
and
imul
lea
in
mov
xchg
mov
cmp
bound
push
stc
movsl
ret
pop
xchg
mov
ret
cmp
je
cmpb
lcall
lcall
icebp
xor
ja
sub
ret
mov
mov
cmp
ror
cld
pop
adc
xor
call
adc
pop
cltd
jb
jnp
mov
push
push
ret
fistl
out
cmp
imul
push
push
mov
push
jl
jge
mov
push
imul
dec
mov
jge
jo
aam
jbe
aaa
shlb
pop
ljmp
xchg
mov
test
xchg
mov
xchg
fwait
lret
add
iret
nop
jge
divl
stc
jnp
jns
bnd
xchg
nop
pushf
loopne
imul
test
nop
add
push
into
inc
mov
je
sbb
lea
shlb
dec
xchg
jge
sbb
cli
xlat
xchg
xchg
and
sahf
fldt
js
js
out
mov
mov
mov
aam
ja
addl
incb
insb
fwait
jne
push
outsl
pop
fbld
test
lcall
jg
adc
push
out
nop
adc
and
aaa
imul
jp
sub
lahf
mov
mov
sahf
addb
fwait
xchg
popl
imul
mov
jp
xchg
mov
insb
ds
cld
xor
lcall
xchg
std
jg
je
fisubrl
int
jg
jae
mov
iret
imul
aad
lds
sbb
imul
xlat
lcall
cmp
mov
jb
cld
or
imul
int
mov
sub
jmp
mov
or
lcall
push
iret
xchg
outsl
fildll
xor
int
pop
imul
outsl
mov
xlat
cld
sbbl
imull
jb
add
sahf
mov
fbstp
xchg
dec
stc
mov
fdivrs
inc
mov
mov
movl
xlat
xchg
arpl
cmc
icebp
jbe
xchg
jg
jecxz
hlt
ror
mov
dec
xchg
jb
test
jg
jg
in
jbe
sbb
mov
cmc
pop
rcrl
lcall
jo
mov
mov
fwait
popf
lock
mov
or
jno
jle
lret
fld
pop
daa
mov
ja
pop
outsl
test
inc
push
iret
insl
mov
jmp
mov
cmp
xchg
lcall
mov
das
mov
outsb
mov
es
test
pop
cwtl
mov
mov
sub
pop
movsb
int
jmp
imul
int3
in
mov
cwtl
mov
test
add
inc
cld
xchg
pushf
rclb
dec
in
dec
push
lcall
mov
ja
pop
mov
xchg
lods
cmpb
outsb
lea
ss
sarl
adc
je
push
leave
mov
mov
or
sub
popf
cmp
jne
test
imul
mov
inc
fdivs
pop
lahf
mov
sahf
je
imul
cltd
xchg
lods
mov
xor
rolb
mov
and
arpl
pushf
jge
sub
imul
hlt
fcomp
cmovl
insb
call
xchg
shlb
lret
xchg
xchg
jmp
leave
enter
sub
xlat
jae,pn
mov
inc
xchg
nop
adc
out
adc
test
repz
fwait
mov
xchg
aaa
jae
insb
shrb
jl
inc
das
fmulp
insl
into
sub
mov
cmpsb
adc
loope,pt
cmp
jnp
lcall
push
ds
cld
and
sti
cld
or
jo
mov
jg
ret
mov
mov
lcall
xchg
pop
ret
pushf
mov
lret
inc
or
cmp
mov
mov
int
scas
or
inc
out
xchg
fcomp
shl
jno
or
mov
push
lret
jns
lret
mov
sbb
lods
arpl
xchg
push
lret
cltd
imul
insb
jg
dec
call
addb
ja
and
xlat
aad
mov
xchg
lods
push
push
jno
loope
ljmp
imul
cld
inc
jnp
adc
xchg
in
mov
mov
inc
out
hlt
jo
sub
and
imul
and
mov
and
and
sbb
push
mov
aaa
jno
enter
lret
cld
jae
mov
lret
push
and
jne
mov
insl
jge
push
ds
jbe
popf
arpl
sbb
xchg
out
pushf
inc
lea
mov
call
jne
shlb
lret
mov
and
outsb
jbe
mov
subb
lea
mov
scas
cmc
shlb
js
inc
mov
pop
arpl
add
out
mov
jb
addr16
mov
fmul
push
movsl
mov
movd
pusha
notb
adc
rorl
jle
nop
pop
fdivp
outsb
jge
pushf
jne
or
mov
mov
pop
outsb
xor
mov
int
mov
add
mov
insb
and
jno
mov
cmp
in
mov
adc
adc
fmulp
push
push
cmpsb
repnz
jb
fistl
mov
in
cli
out
xchg
pop
mov
dec
mov
lret
fwait
lock
outsl
add
je
push
xor
jmp
xchg
mov
arpl
sbb
rclb
orb
pusha
xchg
jge
shr
imul
out
fisttpl
mov
leave
or
cmp
mov
cmpl
pop
rcrb
lret
jb
push
mov
js
ret
sbbb
lds
mov
sahf
jno
imul
xchg
inc
mov
and
dec
lahf
jno
adc
aaa
ds
sbb
cld
inc
pop
lods
jl
adc
jp
push
out
ds
jne
pop
cmpsb
adc
jb
addl
into
js
jle
cmpsl
cmp
popa
xchg
je
or
aaa
test
sbb
xchg
clc
orb
pop
shlb
xchg
mov
xchg
aaa
push
and
jb
xor
outsl
add
mov
imul
mov
mov
aam
cmp
int
pop
ja
push
sub
aad
stc
fwait
or
or
cs
jp
into
dec
mov
xchg
fistps
jo
test
inc
jae
cwtl
jp
lahf
in
sahf
arpl
ds
xchg
orb
cmpsb
aad
insl
mov
xorl
iret
scas
jp
inc
xchg
xchg
insl
int3
or
jl
mov
mov
fwait
jp
cltd
pusha
jmp
mov
cmp
fsubrs
nop
lock
xor
js
test
imul
inc
add
ret
jg
add
mov
ror
fchs
lcall
scas
jns
lret
lcall
sarb
inc
sbb
leave
ret
inc
shl
jp
sbb
inc
add
mov
cmpsl
push
js
mov
cmp
popa
aam
pop
insl
cwtl
xchg
mov
mov
push
jae
xchg
jae
stc
or
jbe
sub
pop
andl
shr
inc
cbtw
inc
mov
or
mov
jno
adc
jbe
xor
aam
push
cli
jne
imul
test
mov
subl
inc
data16
xchg
cmp
push
int3
enter
lret
lds
dec
jnp
inc
ret
nop
out
xchg
outsl
xor
dec
call
cmp
xchg
xchg
xor
loopne
and
sahf
fisubrl
mov
outsl
shll
mull
adc
xchg
inc
insb
into
mov
fcmovnb
cmp
sbb
fidivrl
mov
fisubrs
and
lcall
xchg
arpl
rorl
fldl
mov
xchg
xchg
cs
lods
jp
xchg
subl
rolb
sti
in
imul
movsl
mov
push
arpl
in
lret
pop
into
mov
lds
pop
push
xchg
inc
movsb
lock
cmpsb
das
xchg
jae
imul
jge
lahf
push
add
jb
inc
pusha
test
stos
mov
jecxz
sbb
mov
jp
jmp
mov
inc
aam
mov
sub
xchg
cmp
arpl
cmp
mov
aad
mulb
inc
sbb
mov
fcmovb
mov
mov
dec
adc
dec
arpl
out
loope
fldenv
imul
cld
nop
shll
mov
dec
adc
in
std
sbb
jae
pop
push
mov
subb
fwait
insb
adc
popl
pop
pop
jnp
jb
out
and
jbe
pusha
imul
xchg
lahf
sti
inc
pop
xlat
cmp
vpmacswd
arpl
test
jns
rorb
das
das
out
and
clc
push
mov
int
mov
into
arpl
xchg
dec
cli
cmp
js
leave
ljmp
adc
ss
xchg
lret
pusha
adc
sub
movsb
fisttpll
fimull
inc
jne
fldl2t
int
arpl
pop
nop
mov
dec
push
imul
loop
in
outsl
xor
mov
jns
inc
dec
test
adc
cmpb
mov
cltd
cmp
pop
cltd
jmp
pop
insb
outsl
sub
mov
jbe
or
fidivrs
mov
mov
or
dec
arpl
fsubl
jp
or
or
xor
jbe
jno
cs
xchg
arpl
imul
mov
pushf
adc
mov
out
fs
jg
xorb
lahf
jp
je
sub
call
jecxz
cwtl
and
ljmp
mov
jbe
mov
fcmovne
mov
mov
fcomp
jno
fwait
rorb
adc
lahf
jle
xor
stos
push
dec
mov
insb
jnp
xchg
xchg
inc
xchg
jecxz
push
mov
ja
push
mov
mov
lcall
push
daa
cmp
jne
jns
lock
cmpb
lret
xor
pushf
xchg
emms
xchg
xor
push
push
xchg
adc
mov
nop
xchg
jge
and
imul
insl
add
xchg
sarl
inc
xchg
popf
sti
jle
xor
jge
je
add
mov
fisttpll
mov
imul
leave
ret
pop
nop
divb
xchg
ja
sbb
xchg
nop
pop
xor
fistps
sub
lret
jno
or
mov
andb
gs
pusha
cld
shlb
cmpsb
lret
js
mov
xlat
jne
sbb
xchg
int3
pop
sbb
push
test
add
popl
add
mov
cwtl
inc
pop
pop
jo
xchg
pop
aaa
pop
mov
jp
popf
and
jle
pushf
cltd
jne
mov
and
adc
push
mov
inc
lret
jns
mov
mov
mov
cld
aaa
lea
int
mov
arpl
jne
out
jbe
int
mov
xor
cmp
lea
imul
fistpl
adc
mov
cwtl
push
pop
ja
jb
xchg
leave
mov
inc
aam
outsb
push
fistl
jnp
std
repnz
mov
pop
inc
inc
lahf
adc
mov
xchg
in
lods
mov
mov
jo
cwtl
push
lds
lcall
icebp
mov
cli
pushl
xorb
xchg
mov
or
push
lea
int3
inc
sbb
adc
mov
fistps
sub
cltd
lods
and
cmp
mov
cmp
lcall
xchg
jno
inc
or
arpl
mov
lahf
lcall
std
mov
inc
test
xor
cmp
xlat
xchg
shlb
lcall
cmp
mov
femms
mov
lahf
sahf
xor
xchg
cs
mov
mov
jg
fwait
scas
rcr
sub
popf
mov
mov
leave
fwait
xor
xchg
jge
mov
into
pop
dec
stc
out
adc
movsl
jg
xchg
imul
fisubrl
cmp
stos
test
popf
insl
push
outsl
xor
cmp
sub
lds
xchg
jae
rcrb
lods
cmp
clc
insb
insl
imul
mov
xor
rorb
out
lret
int
insl
cli
mov
dec
push
mov
mov
cmp
mov
lahf
jno
mov
fidivs
pop
iret
mov
cmpsl
cld
jnp
mov
cmp
xlat
mov
dec
jg
arpl
mov
fwait
mov
movsl
xor
out
mov
orb
inc
aaa
dec
nop
xchg
pop
subb
rol
mov
xlat
das
mov
inc
xor
rcrl
sbb
sub
shr
xchg
or
xchg
jl
xlat
push
xchg
sahf
stos
inc
test
mov
int
ret
jno
mov
int3
jge
cltd
lahf
and
mov
mov
jne
mov
sub
imul
jp
xchg
lret
or
pushf
mov
fwait
add
int
and
xchg
pusha
call
fmuls
inc
pop
into
daa
lret
fidivrs
inc
ret
mov
shlb
adc
xorb
aam
adc
mov
dec
adc
jno
pop
sub
inc
imul
xchg
aam
mov
xchg
pop
push
cmpsl
rorl
push
pop
xchg
nop
mov
jmp
jo
jle
ja
push
add
test
xlat
fwait
xchg
adc
xchg
mov
mov
mov
jb
jmp
inc
mov
aam
mov
pop
cmp
jno
leave
xchg
push
cmp
jge
mov
pushf
and
jg
xchg
inc
adcb
and
mov
xchg
setp
mov
jns
mov
icebp
ja
add
xor
pop
stos
lcall
mov
pop
out
lea
mov
aam
xor
push
mov
inc
jmp
ljmp
in
mov
adc
add
cmpsl
into
fwait
mov
imul
dec
inc
add
mov
cmp
push
jge
cmp
inc
imul
mov
movl
imul
insl
mov
sbb
add
iret
mov
cmpb
outsb
lds
les
lret
mov
jae
jnp
je
inc
testb
jns
sub
and
aad
cmc
pop
and
out
inc
fbld
int3
mov
xorb
cli
incb
mov
mov
xchg
xchg
jle
sti
cmp
hlt
scas
or
jns
aaa
sarl
jae
cld
inc
cltd
adc
xor
xchg
outsb
adc
repnz
adc
cmpsb
sbb
jne
cli
movsl
cltd
mov
lds
jns
jns
inc
fmuls
cmp
repnz
jp
mov
sahf
lods
mov
sub
pop
sti
jne
mov
jnp
pop
jae
dec
jo
push
es
insl
outsl
in
scas
loop
push
xlat
xchg
fistpl
push
pop
jmp
sub
loope
data16
insl
fadds
inc
fimuls
jg
push
outsl
fcom
push
add
out
or
mov
jno
into
lods
sahf
outsl
pushf
add
repz
mov
ja
fisttps
out
xor
sbb
fdivrs
out
int3
xlat
addb
cwtl
jb
and
pop
mov
push
mov
dec
push
push
cltd
xchg
jne
mov
push
insb
jo
lret
jg
jb
mov
xlat
shl
mov
mov
hlt
clc
and
jae
dec
lods
jno
mov
jae
dec
jecxz
insl
inc
addr16
xlat
pop
shrb
popl
push
cld
dec
lcall
jno
mov
sbb
and
idiv
or
pushf
ja
push
fs
jle
mov
lret
pushf
jnp
in
fildl
stos
mov
xchg
xchg
push
pop
xor
enter
jbe
dec
lods
and
pop
mov
pushf
sbb
cltd
ds
test
or
hlt
mov
inc
int3
mov
mov
leave
popa
mov
sub
sub
mov
add
xchg
jg
hlt
test
adc
cmpsl
fwait
xchg
xchg
enter
cwtl
mov
mov
int3
pop
add
insb
xchg
mov
ja
iret
xchg
lret
cmp
lret
js
jns
stos
mov
xchg
pop
leave
xchg
imul
stc
mov
js
xor
inc
jge
jno
std
shll
xchg
mov
jle
cltd
mov
mov
std
jp
sbb
mov
pop
jp
je
test
in
mov
xor
jns
mov
arpl
in
jns
push
xchg
xchg
or
ret
imul
inc
ss
inc
test
xchg
popf
mov
pop
sahf
xchg
std
jae
js
in
arpl
mov
outsb
lcall
in
insl
ret
cmpxchg
ja
push
lret
aas
in
lcall
mov
jnp
inc
inc
fmull
adc
lret
adc
jge
mov
pop
mov
jmp
push
stc
aaa
cmp
neg
jne
fistl
mov
mov
cli
cmp
fdivr
fnstenv
jg
jb
push
jae
insb
inc
int3
adcb
jg
cmpb
notb
jo
xchg
je
nop
sahf
pushf
pop
add
inc
xlat
mov
cmp
inc
in
out
xor
jg
add
loope
xchg
mov
ja
out
iret
nop
mov
push
jbe
jae
jp
ja
push
jl
cltd
outsl
imul
push
sub
outsb
mov
clc
dec
xchg
jb
in
jnp
jae,pt
fwait
cli
lods
shlb
mov
lret
mov
lcall
jno
push
push
lods
int3
mov
cltd
inc
cltd
adc
lahf
jns
cmpsl
jne
mov
push
stc
cmp
daa
lds
ret
fcoms
or
outsb
test
pop
movd
inc
jbe
pushf
xor
loop
shrb
mov
lret
jae
pop
mov
sahf
adcb
aas
mov
mov
sarb
sub
pop
lds
jns
mov
jne
fimull
lods
push
in
push
lret
out
dec
cltd
movsl
lret
les
inc
push
mov
sbb
xchg
jo
nop
pop
inc
outsb
js
cmp
cwtl
out
negb
insb
xchg
sbb
sahf
sub
insl
jbe
js
lcall
inc
pop
push
jb
shll
mov
push
shl
mov
jbe
adc
mov
xchg
cs
mov
mov
sahf
lcall
lea
out
cld
ret
push
arpl
repnz
lcall
xchg
jnp
out
roll
jns
jbe
pushf
cltd
int
int3
test
mov
sahf
imul
xchg
mov
movl
jg
aaa
jnp
call
jb
lea
xor
outsb
mov
sbb
lret
fcomps
repz
sahf
call
sarl
lret
mov
xchg
pand
sub
pop
enter
int3
lea
addr16
jne
xlat
mov
adc
mov
xchg
mov
jg
into
jo
push
jle
lahf
int
js
mov
int3
pushf
mov
cmp
cli
test
popf
pop
pop
aad
js
ret
dec
sub
sub
nop
fiadds
mov
push
inc
jo
sbb
push
mov
hlt
xchg
ja
fcmovne
sbb
jae
mov
lahf
cmp
sti
cmp
cmp
popf
xchg
mov
iret
inc
jbe
leave
mov
mov
jae
jo,pn
xchg
leave
int
dec
leave
dec
pop
mov
cwtl
push
pop
push
fidivrl
in
dec
iret
push
mov
movsl
stos
inc
lods
lods
jge
mov
cmp
sub
jae
rorb
iret
in
lea
cmpb
orb
cli
mov
jl,pt
mov
js
mov
cmp
aam
sbb
andb
dec
lret
cmp
stos
lods
jae
push
mov
xchg
mov
sbb
jl
xor
jbe
inc
lahf
push
xor
ja
addr16
pop
mov
imul
xchg
aaa
mov
movsl
punpckhbw
outsl
mov
enter
int3
push
addr16
ja
mov
xchg
lods
inc
sbb
xor
jae
mov
js
jno
xorb
xlat
or
test
lods
jbe
adc
imul
into
cmc
inc
or
or
mov
fcmovnu
add
and
adc
ss
pop
arpl
push
pop
divb
stc
nop
lret
fistps
daa
lea
sub
lcall
cmpsl
test
mov
pop
mov
xchg
mov
imul
aam
imul
out
sub
pop
mov
mov
push
sbb
stos
lret
xchg
mov
xchg
outsl
jae
imul
jae
leave
dec
imulb
jb
shrl
je
shlb
popf
ret
adc
lahf
jecxz
into
fstpt
lods
lods
jo
push
pop
mov
mov
jne
cltd
pushf
fwait
mov
pop
cmp
cmp
jg
js,pn
xchg
xchg
pop
mov
int
lcall
dec
loop
cltd
rorl
aad
inc
adc
add
add
arpl
leave
jo
lea
cwtl
nop
xchg
dec
mov
ja
pushf
and
mov
push
adc
in
lods
jns
push
and
mov
int
jle
daa
pop
cwtl
bnd
xor
neg
pop
mov
ret
ja
push
int
or
cmp
xchg
fadds
push
mov
or
int
pushf
int3
and
sub
lods
jle
dec
push
das
xlat
jg
cmovg
loope
mov
xor
popf
loope
and
and
arpl
jmp
jne
sti
jbe
xor
mov
jge
sahf
mov
push
mov
xchg
xor
and
ja
adcb
or
out
or
iret
mov
dec
call
xor
dec
jns
cmp
jns
imul
leave
inc
xchg
mov
int
xlat
das
dec
jg
xchg
jae
iret
outsb
or
cwtl
sti
jno
sbb
pop
leave
or
adc
inc
lret
mov
outsl
enter
ja
test
ret
and
mov
aaa
fsubrs
outsl
cmc
movsl
lea
fwait
inc
into
fwait
xorb
mov
xor
pushf
es
test
sub
xchg
mov
arpl
gs
mov
jle
xchg
sub
popa
inc
jg
jae
ret
hlt
xor
addb
xlat
push
xchg
jns
lret
mov
sbb
cmpl
inc
cld
and
mov
xchg
inc
aad
insl
xchg
aaa
mov
adc
push
mov
inc
cmp
jp
xchg
mov
out
xchg
mov
insl
je
int
mov
fidivrl
in
es
add
popl
inc
outsl
lahf
ja
fwait
dec
xorps
mov
cmp
cmpb
dec
lods
jl
cmp
std
loope
ja
xor
adc
or
out
mov
stos
roll
jg
mov
dec
out
jno
popf
inc
mov
xchg
jge
inc
xor
jmp
je
repnz
icebp
jle
and
arpl
xor
bound
iret
int3
jae
cmp
test
xchg
popf
insb
mov
ret
outsl
xor
inc
fst
cltd
add
pushf
mov
outsb
jnp
sbb
cwtl
jp
inc
pop
and
xor
sbb
mov
mov
data16
popf
jno
mov
mov
sarb
adc
xchg
mov
pop
jmp
mov
sahf
imul
loopne
pusha
imul
lret
ss
jnp
jl
push
mov
insl
aas
outsl
jge
jne
mov
sarb
insb
mov
clc
ret
popa
jne
inc
mov
jo
xor
inc
int3
leave
rorb
cmpsl
lret
outsl
fwait
lret
test
mov
xchg
sti
loopne
cmc
cmpsl
lea
jae
jo
push
sub
mov
add
pop
test
dec
mov
ss
data16
das
insl
sahf
inc
mov
dec
mov
nop
mulw
lret
es
ret
int3
lods
sub
stc
pop
scas
das
repz
outsb
mov
or
sarb
xchg
addr16
or
adc
into
data16
dec
pushf
mov
inc
out
push
insb
fwait
test
lods
pop
outsl
cmpsb
sbbl
out
mov
jno
lahf
cmp
xchg
js
mov
adc
out
nop
mov
cmpsl
fisttps
sahf
push
mov
into
leave
jp
cmp
fsubl
xchg
mov
sti
xlat
sub
rclb
fcmovne
lods
lea
push
mov
inc
adc
out
lahf
cltd
aam
dec
outsl
mov
mov
lret
mov
mov
aad
adc
xchg
imul
sti
int
jge
arpl
xchg
mov
push
jle
cmp
jg
outsb
sbb
sbbb
lret
xchg
cltd
sub
xchg
das
out
ja
int
int3
jbe
je
push
jae
into
xchg
arpl
jno
ret
pushf
mov
adc
jo
sbb
pop
shrl
mov
lret
mov
cmpsl
movsl
imul
stc
or
out
push
mov
inc
sub
jbe
and
rclb
adc
je
out
outsl
outsb
cmp
jb
popf
fwait
jo
jns
mov
xchg
imul
lea
inc
jo
sbbb
jle
rcl
enter
lahf
cwtl
and
xchg
or
lods
cmp
lret
mov
int
add
push
inc
cmp
cmp
ds
cmp
into
lock
rorl
test
adcb
ja
out
lea
jmp
mov
cltd
xchg
scas
xchg
mov
outsl
divl
nop
xchg
call
dec
jge
out
push
xchg
jp
inc
lock
push
dec
je
outsl
fildll
push
jge
cmc
test
jg
jp
scas
dec
add
cltd
mov
xchg
into
xchg
scas
mov
pop
add
sar
dec
arpl
ds
xchg
in
push
pop
push
push
cmp
lea
nop
inc
insl
inc
mov
jae
js
aam
out
cltd
outsl
mov
jne
add
mov
arpl
cwtl
andb
cmpl
je
ja
ds
bound
pop
insl
jns
dec
sub
fxch
jg
push
out
insl
js
add
mov
orb
xchg
mov
into
jae
mov
push
jnp
pop
jb
test
addr16
ja
sahf
jge
mov
arpl
mov
int
jae
enter
dec
mov
and
je
lahf
outsb
jp
jns
dec
ja
pop
mov
inc
aam
mov
mov
mov
sub
shlb
cwtl
lods
mov
push
cltd
imul
mov
lahf
jle
dec
push
fisubs
sbb
add
add
xor
sti
ds
fistl
pop
xor
mov
sub
pop
sahf
imul
cmp
out
push
add
dec
xor
arpl
mov
dec
lea
xchg
scas
leave
js
test
jmp
xor
lcall
lret
arpl
sbb
rclb
cmp
xchg
gs
sub
and
popf
test
js
adc
roll
orl
shlb
or
lods
or
xchg
pop
aas
fimull
mov
and
imul
cmc
sbb
mov
cmp
or
xor
sbb
ljmp
adc
das
sub
arpl
sahf
jae
sti
stc
dec
insl
cmp
jae
nop
sar
sarb
loopne
ret
lods
addb
leave
jg
lret
adc
out
mov
mov
pushf
std
mov
xchg
lret
repnz
mov
fwait
xchg
mov
and
imul
jb
inc
stc
outsb
mov
xor
imul
jb
ss
sub
push
xor
jb
inc
adcb
imul
outsl
clc
daa
xchg
insb
jl
js
mov
push
adc
pop
cmp
nop
aam
xchg
ljmp
lea
je
inc
pop
or
mov
mov
push
rol
lods
into
addr16
dec
inc
aaa
je
and
nop
jb
ljmp
mov
mov
sahf
mov
in
fsubrs
jae
aam
jns
jns
dec
xchg
xchg
mov
in
outsl
js
jp
adc
mov
jbe
or
jo
mov
loopne
xlat
adc
jg
insl
mov
jle
nop
xchg
inc
dec
addl
mov
jecxz
mov
mov
xchg
jnp
mov
jg
xlat
cmpsl
xchg
push
imul
jno
jns
cld
mov
leave
or
ficompl
fwait
jle
js
xorb
lock
inc
jo
inc
xchg
mov
shrb
andb
inc
lret
pop
add
aaa
aaa
mov
fwait
shll
mov
outsl
daa
cmp
into
jg
and
fldcw
lea
pushf
xchg
mov
and
jo
jge
or
xchg
ja
int
fisubrs
idivl
xchg
and
call
xchg
mov
jns
cli
sbb
iret
mov
insl
pop
loopne,pn
push
inc
mov
insb
mov
popf
int3
cld
sti
jle
shlb
stos
outsl
fwait
jno
inc
das
insb
nop
xchg
loopne
jp
std
pop
inc
pusha
xchg
xchg
xchg
fimuls
std
lcall
mov
orb
sbb
inc
cmp
xchg
jne
mov
outsl
sub
aaa
daa
or
jns
iret
or
les
xchg
jge
jle
jle
xchg
mov
add
out
sbb
int3
clc
hlt
jno
leave
mov
mov
andb
ret
int3
ret
leave
mov
sbb
out
cwtl
jns
test
pushf
xchg
mov
jne
or
pop
push
and
ja,pt
xchg
xor
add
jp
xchg
in
push
cltd
pop
xchg
xchg
js
daa
inc
imul
pop
mov
mov
jg
mov
cwtl
push
ja
xchg
inc
cmpsl
daa
mov
inc
push
xchg
mov
adc
push
nop
jns
pushf
jo
pop
lahf
lahf
das
sti
nop
xchg
mov
jns
jns
insl
std
int3
ror
push
fwait
sbb
jg
sbb
leave
pop
xchg
push
adc
push
lea
in
xchg
mov
int3
jl
mov
mov
xchg
mov
xlat
cmp
arpl
mov
mov
lcall
std
mov
outsb
mov
jbe
jnp
mov
jle
shll
jo
add
jge
lret
int3
decb
xchg
iret
ffree
lods
inc
mov
push
push
mov
xchg
aad
jle
lods
fwait
loope
jns
push
int3
stos
imul
xor
dec
sbbb
mov
jge
fwait
adc
and
or
xchg
mov
cwtl
mov
mov
arpl
sub
cwtl
push
mov
and
mov
pushf
jl
js
xchg
in
inc
ja
dec
rclb
fcmovbe
pushf
leave
mov
sub
ja
ja
dec
lods
xchg
jb
loop
lahf
insb
gs
add
les
add
xor
leave
js
mov
xchg
insb
aam
into
dec
cmp
popf
add
or
insb
cli
mov
jns
imul
fldl
iret
jb
setl
xchg
pavgw
xchg
cmpsl
mov
into
iret
int3
aaa
fistl
out
nop
jbe
fwait
loopne
xor
into
std
pop
test
subb
mul
pop
xlat
mov
test
adc
push
pushf
shrb
call
pop
in
lcall
cmp
int3
out
mov
mov
imul
imul
fs
das
cmp
pushf
and
or
mov
add
orl
inc
jl
clc
in
jne
push
and
iret
je
jnp
jbe
mov
or
adc
aad
cmp
push
xchg
xchg
inc
push
xchg
in
cltd
pushf
test
cwtl
mov
mov
aaa
adc
xchg
ja
in
mov
fwait
lea
insl
add
inc
inc
jo
lds
fwait
int3
das
cltd
mov
xchg
xlat
mov
mov
rcrl
punpckhdq
sbb
mov
jns
imul
add
rcrl
inc
cltd
dec
mov
js
jns
mov
jecxz
stos
sti
movsl
adc
outsl
pop
mov
sahf
cli
mov
mov
jns
jp
sahf
lret
out
pushf
jbe
jb
cwtl
lods
mov
fisubrl
add
mov
mov
jle
mov
int
jp
xchg
inc
ja
ds
push
sub
subl
lret
jae
arpl
lcall
pop
aam
jb
sbb
addb
mov
dec
in
mov
fnstsw
lds
xlat
ss
mov
xor
jge
aad
xchg
fsubs
inc
frstor
push
mov
dec
cltd
out
mov
jge
fisubl
or
add
enter
lahf
std
dec
jg
jmp
push
mov
lea
jg
jge
iret
mov
sarl
or
cs
lahf
out
outsb
inc
fildl
inc
ja
mov
jns
imul
sub
inc
push
jae
iret
cltd
aam
mov
inc
inc
insb
push
xlat
adc
mov
adc
movsb
jg
negl
push
andb
sahf
mov
mov
sub
jae
je
out
mov
jle
xchg
jg
imul
cli
and
roll
xchg
popf
imul
xor
enter
repnz
mov
test
adc
xchg
imul
outsl
daa
mov
mov
outsl
push
xchg
aaa
pushf
jg
cmc
jnp
popf
xchg
pop
repz
xchg
mov
scas
jge
mov
insb
lds
out
or
es
jb
je
adc
mov
mov
xchg
mov
fcmovb
fiaddl
pop
aam
push
cld
fisubl
sahf
test
jae
adcb
add
mov
es
mov
xor
pop
mov
lods
clc
pop
mov
pop
add
popf
mov
ja
mov
lcall
into
jle
mov
inc
ss
jg
in
mov
sbb
mov
stc
mov
jns
pushf
xor
popa
lret
and
out
lahf
pop
jg
stc
cltd
mov
add
ja
push
dec
lods
int
sahf
mov
pushf
nop
mov
fadds
test
jnp
sarb
fists
cmp
jo
dec
mov
or
jb
rolb
inc
pop
lods
mov
jg
shrb
inc
cmpsb
lret
xchg
insl
int3
lcall
jmp
lcall
pop
inc
movsl
adc
push
mov
jae
lcall
pushf
xchg
fwait
cltd
mov
lret
mov
imul
mov
inc
mov
add
jecxz
clc
lret
mov
xorb
jp
mov
inc
sarb
movsl
mov
cmc
pop
push
jo
mov
jbe
insl
mov
mov
pushf
jae
jnp,pt
pop
add
xlat
clc
outsl
adc
cwtl
in
mov
insb
mul
imul
ja
test
aaa
scas
lods
mov
or
pushf
mov
fisubrl
jns
mov
das
push
test
xchg
mov
mov
popl
imul
mov
xchg
jo
jl
data16
sub
xchg
lcall
mov
xchg
xchg
mov
and
out
dec
arpl
jnp
sub
in
int
fdivrs
pop
das
xlat
dec
lods
nop
xchg
xchg
jmp
jmp
lahf
xor
lock
iret
popf
mov
loop
ja
add
cmp
xchg
je
mov
mov
push
cmp
into
cld
sbb
add
mov
fstps
inc
lods
mov
jo
xchg
aam
cmp
xchg
outsb
and
loope
xchg
fistpll
jl
inc
rcl
mov
dec
insl
jae
cmpsl
imul
jg
mov
jb
jbe
stos
mov
leave
xchg
outsb
into
mov
jg
fcoms
cmpl
cmp
mov
inc
arpl
cmp
push
add
nop
in
and
test
jp
fistl
out
aaa
mov
xchg
lahf
mov
xchg
push
cmp
xchg
lods
mov
and
ret
popa
int3
stc
sbb
cltd
mov
adc
sbb
inc
mov
popf
jb
les
imul
mov
inc
mov
inc
inc
jae
pop
sbb
lcall
insb
add
mov
mov
ljmp
lret
std
int
mov
into
js
mov
lods
fwait
outsl
in
push
ret
mov
mov
sbb
stc
sbb
or
gs
stos
inc
jae
or
out
jnp
adc
mov
ja
lods
js
jg
dec
jp
arpl
mov
inc
jecxz
aad
jne
mov
jno
sub
mov
into
lcall
outsb
pop
xchg
cmp
sti
sti
in
sub
xchg
jl
xchg
sahf
jbe
pushf
andb
xchg
xchg
jg
cwtl
lods
int
pop
mov
xor
hlt
push
pop
mov
call
ja
jnp
movsl
repnz
xorb
mov
sarb
dec
test
shll
iret
push
jb
pop
aam
dec
and
cmp
mov
mov
lret
jb
insl
mov
mov
mov
xchg
stos
jg
mov
mov
mov
mov
into
inc
imul
xchg
cmp
sbb
mov
cmpb
jp
inc
in
pop
ja
push
inc
push
mov
arpl
lcall
cld
in
dec
imul
addr16
lahf
mov
mov
insb
pushf
rcrb
jbe
loop
jg
mov
fistps
shrl
iret
mov
mov
xor
inc
sbb
in
cwtl
arpl
or
pop
das
cltd
jno
sbb
xchg
jp
insl
cwtl
addr16
xchg
lahf
aam
pop
faddp
pop
int3
ja
push
jp
outsl
cmp
xchg
testb
and
rclb
call
dec
xchg
jnp
popa
aad
icebp
lret
lods
jo
adc
mov
insl
xchg
push
push
mov
jge
jg
cli
xchg
aam
insb
lea
or
adc
jl
leave
xchg
pop
lret
jle
nop
rorb
xchg
daa
sbb
fnstenv
push
cwtl
ja
jp
lret
inc
dec
into
arpl
idivb
lods
dec
scas
sti
mov
das
cmpsl
or
ja
imul
pop
dec
lret
cwtl
mov
push
imul
into
cltd
xchg
jp
mov
js
xchg
xor
lods
jbe
jecxz
popf
cmpsb
fstpt
into
mov
cltd
jg
jns
insl
nop
or
push
out
andl
sub
add
jge
movsl
popa
mov
xchg
jno
nop
fisttpl
lds
xor
lcall
add
leave
adc
mov
mov
push
fcoms
pop
cs
fidivl
push
xchg
mov
mov
jno
shlb
fcmovb
out
xchg
mov
enter
cmp
xchg
pushf
jbe
dec
adc
js
lret
jae
sbb
sbb
xchg
jge
cli
shrl
add
jl
in
sub
xchg
test
scas
insb
jo
cmp
subb
jno
jbe
dec
dec
mov
sbbb
inc
ljmp
cs
popa
lcall
push
cltd
lahf
pop
and
add
insb
je
fwait
dec
dec
mov
popf
jne
out
cld
mov
jnp
cmp
nop
in
inc
nop
shll
lods
call
mov
jge
rol
bnd
dec
iret
adc
xor
xchg
ljmp
cmpsl
insb
leave
out
jo
dec
lea
dec
and
les
repnz
or
sahf
dec
cmp
shrb
fcoml
and
mov
mov
lret
aam
jo
xchg
insb
imul
into
iret
xchg
pushf
ret
cmp
cmp
mov
aad
cwtl
out
das
iret
dec
cmp
cwtl
sbb
ja
push
js
ficompl
or
jno
dec
cmp
mov
into
fwait
test
xchg
xor
insl
imul
mov
sar
adc
adc
jo
cmp
add
xlat
xlat
push
sbbb
adc
mov
jbe
xchg
sbb
jno
fwait
jae
mov
inc
ja
dec
fwait
jne
outsl
outsl
je
push
mov
int3
sub
jne
shr
popf
call
mov
sbb
inc
fidivrl
mov
jge
jae
mov
leave
iret
imul
cmp
lcall
sbb
mov
mov
jne
out
mov
sbb
mov
insb
js
xchg
mov
push
mov
cmpsl
lret
jnp
cwtl
loop
lea
xlat
and
mov
ljmp
aaa
sbb
lret
addr16
imul
jl
leave
jne
jl
push
stc
mov
jl
pop
jns
add
mov
jge
fdivs
int
nop
pop
movsl
popf
inc
mov
jp
loope
xchg
cltd
sbb
jl
push
lret
jno
cltd
orl
jge
jg
cmp
into
xchg
xchg
mov
xorb
stos
outsl
jmp
fwait
andb
fcmovnbe
jmp
mov
push
imul
xlat
popf
cmc
fidivs
stc
mov
pop
mov
std
imul
push
xchg
popl
in
sbbb
mov
hlt
mov
andb
mov
jg
lods
xor
insb
nop
popf
fcmovne
xchg
jb
fistps
or
mov
aaa
push
xchg
xlat
loop
mov
mov
int
push
je
faddl
xchg
arpl
jne
push
jp
push
jo
hlt
lods
jbe
inc
shrb
loopne
add
outsl
orl
rcll
insw
fwait
xorb
xchg
imul
ds
jp
mov
ret
faddl
adcl
pop
xchg
leave
jge
mov
outsl
out
mov
jo
js
addb
pop
movsl
rclb
lahf
push
inc
mov
pop
push
rcll
leave
cmp
or
mov
cwtl
xchg
int3
xchg
mov
fcmovne
jno
sub
jle
xchg
mov
orb
shrl
pushf
nop
fisubl
aam
in
jns
jns
out
pop
sbb
out
lods
lret
outsb
rorb
lock
scas
jnp
jae
aam
jp
jb
aas
adc
popa
jo
into
les
addr16
out
fucomip
inc
xchg
iret
jle
dec
xchg
outsb
jbe
ror
mov
and
pop
mov
in
and
leave
cmpl
mov
lcall
ja
int
or
cmp
cmpsl
pop
jl
jae
shld
iret
into
mov
cwtl
lret
pop
sub
pop
mov
orb
pushf
xchg
add
push
aam
dec
lods
arpl
testl
xor
jge
pushf
mov
lock
loopne
push
nop
jg
pop
lods
mov
imul
mov
xlat
xchg
mov
push
shr
jbe
pop
jl
mov
and
inc
cmp
movsb
std
aaa
sti
in
out
stc
js
jne
cltd
sbb
mov
gs
sub
fistpll
fistl
jno
test
mov
popf
leave
jl
outsl
pop
xchg
lahf
stos
sahf
outsl
jb
mov
jns
adc
hlt
in
std
out
in
adc
add
and
lahf
inc
xchg
pop
xchg
add
pop
mov
mov
xlat
test
push
cmp
ja
jnp
xor
outsb
xor
cmpsb
cmp
lret
or
inc
inc
das
call
fcmove
shl
mov
jle
sti
inc
into
clc
mov
and
sahf
lea
outsl
mov
lea
incl
xchg
nop
outsl
je
inc
cwtl
adcl
jle
loopne
pop
mov
pop
inc
push
outsl
shlb
push
jp
sbb
xor
insl
aad
jb
jbe
jnp
inc
into
int
jp
rcl
std
mov
xor
jns
je
adc
ja
jbe
lea
ja
cld
mov
into
ja
mov
jb
imul
sub
and
aad
mov
push
xchg
mov
sub
rcrb
je
push
xor
add
cmp
cli
jg
rorb
cmp
lea
mov
or
out
leave
cwtd
jmp
imul
fidivl
mov
jl
jecxz
mov
into
imul
lea
aaa
nop
sbb
and
pushf
adc
jle
daa
xorb
jbe
lcall
mov
inc
cltd
jge
xlat
adc
inc
leave
lret
adc
mov
add
jbe
inc
rcl
jne
imul
nop
je
dec
cs
jge
inc
stos
xchg
push
pop
ds
fcomps
jbe
fs
mov
jp
sub
mov
sahf
aad
lret
mov
fwait
cltd
and
mov
xchg
xchg
xlat
leave
jno
test
xchg
cli
popf
xlat
jecxz
aad
int
mov
lods
xor
outsb
ja
stc
mov
aaa
jmp
rcll
lock
in
adcb
jb
lock
je
leave
cmpsl
lahf
mov
mov
pop
lahf
outsl
mov
outsl
cli
out
and
js
mov
jp
jge
rclb
mov
insl
mov
loope
jne
bound
xchg
mov
adcb
and
into
sub
xlat
jns
out
jbe
orb
lret
cmpsl
or
jne
aaa
mov
daa
test
mov
jae
mov
mov
xchg
rcrl
lret
rorl
lcall
mov
xchg
mov
seta
aam
sbb
popf
fisubl
int
rorb
outsl
cmp
std
xchg
xchg
dec
hlt
ja
cltd
xor
orl
rcrl
insl
or
lcall
outsb
inc
fisubrl
pop
iret
or
stc
outsl
jg
xchg
lcall
mov
mov
xchg
stc
sti
insb
cmpsb
mov
jge
mov
mov
daa
dec
imul
into
inc
fistpll
jae
cmpsl
dec
jp
iret
mov
mulb
sti
lahf
push
xchg
adc
inc
call
int
adc
cmp
iret
dec
mov
cli
popa
mov
data16
idivl
pushf
insl
jns
scas
cltd
aad
ja
test
rcr
lods
push
and
xor
mov
push
rcll
jns
aam
arpl
add
enter
out
inc
dec
mov
lods
pop
jecxz
andb
into
dec
mov
divl
mov
xchg
scas
dec
lret
xlat
jp
inc
jbe
jae
outsb
jle
add
pop
out
inc
sbb
sub
outsl
ja
pop
xchg
das
hlt
test
js
jno
xchg
fwait
push
pushf
mov
jbe
je
in
insl
jae
pop
jnp
mov
xchg
sbb
and
movsb
pushf
psllw
inc
sahf
sbb
jl
mov
sarb
push
ja
roll
icebp
scas
ja,pn
jl
lock
inc
jne
dec
dec
movsb
inc
dec
subb
xchg
nop
fwait
ret
xchg
movsb
pushf
sub
jb
sbb
leave
jo
cli
setb
mov
insb
sahf
mov
aam
cmpsl
nop
lea
stos
mov
cmp
ds
lret
arpl
push
jne
ret
adc
jg
mov
int3
or
mull
dec
cmp
sub
repz
icebp
jne
stos
jp
arpl
and
sbb
fsubr
lods
jmp
leave
sub
xchg
push
shlb
jecxz
jo
mov
dec
adc
aam
loop
shr
data16
fdivrs
adc
push
mov
inc
test
sbb
cmovp
mov
inc
dec
int3
adcb
xchg
subl
jl
jmp
insb
loop
insl
shl
jno
lret
xchg
pop
adc
inc
dec
jbe
aam
fwait
test
xchg
cmp
mov
pop
lds
pop
dec
jnp
data16
sub
xchg
lahf
fwait
push
xor
jmp
xchg
mov
fnstsw
test
xlat
mov
sahf
rorl
mov
jne
dec
int
adc
xlat
cmp
cmpl
outsb
lret
enter
imul
into
xchg
mov
mov
xor
dec
js
enter
arpl
test
imul
pop
xor
mov
insb
fwait
lahf
lret
push
sbb
and
pop
add
adcb
int
lds
inc
push
mov
sub
mov
lods
sbb
mov
inc
and
xlat
xchg
jge
xchg
sahf
outsl
inc
jne
leave
jo
divb
pop
gs
out
adc
jg
push
jbe
lock
sbb
xchg
mov
insl
xchg
jle
data16
outsb
inc
mov
lahf
inc
cmp
jae
int
es
mov
sub
cli
sub
mov
xor
mov
fwait
xchg
jge
cltd
iret
lods
jo
out
pushf
je
xchg
daa
xor
jmp
sub
je
mov
inc
mov
add
insb
jne
sbb
rclb
inc
mov
out
int
cltd
xchg
out
fdivrl
xchg
lret
inc
ds
insl
inc
jmp
imul
inc
xchg
push
jo
mov
xchg
push
stc
jnp
push
xchg
js
popa
mov
xchg
in
mov
outsb
pop
int
aad
jne
scas
xchg
out
mov
dec
jb
mov
cwtl
decb
mov
or
xor
and
lahf
popf
xor
push
inc
sahf
mov
lcall
fwait
cld
pop
jge
xchg
insl
push
mov
or
mov
lea
xchg
mov
inc
jecxz
mov
aad
divl
mov
fdiv
cmp
mov
fcmovne
and
xlat
ja
xchg
and
xorl
lea
push
fadd
pop
xchg
lea
and
repnz
mov
jbe
jle
fwait
leave
sbb
stc
cmp
add
push
cmp
insb
inc
mov
inc
pop
mov
clc
xchg
pushf
lret
addr16
rclb
into
inc
sti
inc
mov
mov
xlat
jbe
sbb
daa
aam
aaa
stos
dec
cltd
out
fsubs
out
daa
jo
cmp
pushf
xchg
xchg
ja
jne
imul
je
test
cmp
jo
jno
add
xchg
push
icebp
and
arpl
in
mov
mov
mov
push
xor
lret
lods
lret
ja
jg
push
fstpl
mov
insb
cmp
inc
in
jns
inc
mov
sti
inc
push
mov
ret
and
test
add
lcall
jae
fadd
xchg
push
xchg
push
mov
lret
outsl
js
xchg
mov
jp
nop
imul
sub
mov
sbb
jae
xchg
ss
mov
in
inc
fisttpl
jae
repz
in
inc
test
jo
iret
popf
lods
mov
jmp
inc
enter
jns
xchg
mov
push
adc
fistpl
test
mov
rcrl
call
subb
inc
lea
pop
jb
inc
int
lahf
pop
inc
or
xchg
jo
jns
xchg
jno
add
sbb
mov
lahf
int3
xlat
push
loopne
cwtl
fstpt
iret
pop
push
mov
xchg
out
and
stc
xor
adc
mov
mov
fwait
js
lods
leave
cwtl
outsl
enter
or
cmp
xchg
cmp
lcall
test
dec
jb
xchg
je
iret
lret
mov
lret
add
stos
pop
call
je
ds
leave
xor
mov
xchg
into
shlb
vpunpcklqdq
push
lea
movsl
int3
jg
sub
jg
xchg
imul
outsl
sarl
cmp
jns
lock
int3
jo
xor
sbb
rclb
pusha
insl
js
nop
mov
cmp
cwtl
lcall
xchg
inc
cmp
jle
push
adc
push
inc
imul
jo
and
jg
jno
jns
imul
mov
xor
inc
jg
movsl
sbb
fists
aam
sti
jl
xchg
xchg
sahf
jno
iret
xchg
xchg
bound
rcrl
nop
xchg
jbe
jmp
addl
ja
pusha
pushf
xchg
int
outsb
int3
sbb
mov
fwait
jo
mov
inc
xor
int
imul
nop
xlat
jg
rcrl
add
push
mov
xchg
cmc
pop
imul
push
ret
test
loop
dec
mov
addr16
shlb
jnp
mov
mov
lcall
mov
cld
sahf
shlb
arpl
pop
mov
lea
jecxz
push
sub
xor
mov
stos
jge
roll
js
cmp
add
xchg
mov
cltd
imul
mov
je
dec
pop
mov
fcomps
jle
lods
imul
or
xchg
insb
decb
mov
je
pop
push
mov
jno
ret
lahf
stos
jno
mov
addb
inc
xchg
jp
int3
ja
adcl
lcall
arpl
jnp
or
xadd
lret
decb
out
jo
mov
ja
sarl
jbe
popa
enter
jp
mov
mov
pop
or
hlt
pop
jbe
cld
pop
cltd
inc
jno
add
push
lcall
je
cmp
dec
mov
push
cmpb
push
mov
sarb
mov
int3
lds
mov
sbb
outsl
jbe
mov
mov
xor
pop
mov
inc
xlat
adc
sahf
push
inc
jle
mov
and
mov
inc
mov
and
into
xchg
jge
imul
aam
pop
xor
rorb
insl
lret
aad
outsb
inc
in
jae
int3
mov
jns
xchg
jno
add
jo
jmp
aad
test
pop
mov
cli
je
lcall
outsb
inc
sti
jle
lods
adc
aas
int
fbstp
jb,pt
mov
je
outsl
cmp
leave
mov
pushf
jo
mov
es
orl
lcall
jbe
mov
outsb
xchg
xchg
xor
lret
sub
and
cmpsl
jb
xchg
push
jp
jle
mov
jno
aad
xchg
jnp
ds
mov
sub
aam
iret
inc
iret
lahf
mov
jnp
mov
movsl
jb
adc
sar
pop
xlat
sbb
ss
jg
jmp
sbb
lea
jno
mov
dec
lods
xchg
arpl
scas
mov
jae
test
icebp
scas
xchg
mov
repz
lret
adc
sbbb
jl
cld
xchg
jnp
add
mov
movsl
das
pusha
jle
lods
leave
mov
arpl
pop
cmpsb
addr16
xchg
mov
in
dec
cmpsl
xchg
sbb
mov
xor
dec
jo
popw
test
es
lea
xchg
iret
iret
insl
and
fwait
jae
movsb
pop
jnp
subb
fst
movsb
test
sbb
imul
lcall
xchg
mov
mov
movsl
lods
mov
mov
and
mov
into
jbe
xchg
fwait
mov
int3
sbb
mov
incl
int
add
imul
mov
sbb
jge,pn
jae
sahf
add
adc
push
test
sbb
lds
iret
jne
int
lcall
in
js
imul
insb
xorb
aad
outsl
mov
ret
jae
popa
pop
fwait
int
cltd
imul
imul
add
js
mov
stc
arpl
sti
mov
lcall
xchg
mov
and
test
xchg
inc
stc
push
mov
fidivrs
jle
data16
stc
xchg
repz
jae
jl
subb
jl
inc
mov
jg
jno
into
or
rorb
mov
add
mov
xchg
movl
mov
jne
or
mov
rclb
push
sbb
out
fcomps
jmp
xor
mov
add
and
xor
or
or
call
push
inc
out
and
mov
insl
ss
pop
xchg
add
push
push
inc
push
andl
xchg
xchg
sarb
mov
xchg
aad
stos
jg
cmpsl
arpl
jns
mov
lds
adc
cld
lea
mov
lahf
lods
jnp
xchg
pop
ja
dec
lea
fwait
sub
lcall
mov
popf
callw
add
cwtl
add
iret
cmp
sub
loopne
pushf
jp
xchg
fcompl
cmpb
lea
rcrb
mov
repnz
iret
jb
aad
mov
ja
rep
push
aad
mov
jecxz
iret
mov
imul
lret
arpl
sahf
mov
mov
lea
pop
and
xchg
jne
jg
outsl
mov
xlat
int3
mov
mov
and
je
pusha
pushf
lcall
sbb
and
outsl
lret
adc
fnstsw
sbbl
or
shlb
inc
lea
mov
ja
mov
fdivr
push
mov
orb
dec
ja
lcall
insb
mov
sarb
xchg
test
iret
fcoml
pop
icebp
stc
cmp
xlat
xchg
mov
jge
int
imul
xchg
mov
int
ret
aam
int3
jbe
lret
mov
or
sbb
inc
jne
xlat
sbbb
jns
sahf
push
popa
add
imul
xor
inc
pop
mov
mov
and
in
or
jno
out
popl
add
fucomip
aaa
add
out
lcall
stos
decb
mov
xor
insb
lret
inc
movsl
mov
jg
lahf
xchg
nop
xlat
sbb
add
adc
adc
cs
sarb
jne
push
test
addr16
push
cmp
divb
mov
fiaddl
andl
xchg
fsubrp
inc
ficoms
insl
lods
jl
push
jae
xchg
lds
outsl
mov
jo
in
add
jle
jecxz
sti
jnp
js
mov
testb
aam
lret
xor
mov
jo
mov
mov
jg
jmp
outsb
jg
cwtl
idivl
jl
es
cmp
jge
mov
outsb
arpl
inc
imul
jno
sub
add
jg
inc
icebp
xor
shlb
fwait
iret
shlb
leave
lea
mov
push
xchg
mov
jl
outsl
rclb
into
lret
xor
inc
dec
in
arpl
mov
lret
xchg
in
xor
xchg
mov
mov
jp
imul
dec
mov
xor
mov
mov
lret
adc
jg
pop
stos
cmp
mov
adc
aaa
imul
sbbb
fdivrs
cwtl
lret
pop
push
sbb
hlt
jno
mov
adc
int
les
fwait
addb
push
mov
fistl
jno
push
push
iret
shll
popa
shll
insl
int
push
xchg
mov
inc
mov
pop
push
mov
mov
cmpsl
pop
mov
jns
jbe
mov
jno
mov
int3
inc
cli
push
xchg
std
cli
jns
or
mov
xchg
lcall
pop
pop
or
xchg
pop
stos
mov
lcall
leave
lds
inc
jle
icebp
scas
jb
rorl
jae
inc
jbe
add
leavew
mov
lret
add
mov
aas
fistpll
ds
mov
cmp
inc
fldenv
repz
nop
adc
fsubrs
push
sbb
mov
jne
insl
xor
je
sbbb
mov
dec
fmuls
adc
jp
mov
loope
and
fiadds
ficomps
mov
fidivs
cmpsb
loopne
mov
mov
xchg
loopne
push
aas
mov
fistps
mov
inc
dec
mov
aaa
repnz
sub
mov
pop
xlat
ja
push
lahf
xchg
push
mov
or
lods
xor
ja
inc
xchg
aaa
lock
pop
lods
aad
xchg
mov
shrl
adc
out
mov
inc
push
jle
aad
jle
jns
outsl
js
xchg
andl
outsl
pop
je
mov
insl
xchg
sbb
push
push
mov
mov
dec
lods
add
dec
call
fisttpll
adc
mov
cwtl
ret
jle
adc
inc
clc
or
mov
cmp
inc
fwait
pop
dec
cltd
xorb
xchg
jns
orl
cmp
imul
xor
lret
divb
aas
lods
je
call
inc
iret
push
push
pop
cmp
mov
push
cmp
add
mov
orb
pushf
jp
out
jb
xchg
mov
movsb
mov
xchg
pop
jge
popl
ja
rcrl
jle
mov
js
xor
adc
sahf
lcall
xchg
mov
mov
into
sbb
push
push
clc
jp
imul
mov
cmp
out
jb
fwait
mov
insl
mov
mov
enter
jo
enter
lea
fldenv
iret
cmp
dec
push
fldcw
sarb
sbb
fstl
push
inc
adc
jns
divb
es
xchg
ret
data16
and
sahf
xchg
or
into
mov
lret
jbe
inc
fstpl
jnp
xorb
xor
insl
sahf
xchg
pop
sub
and
xchg
ret
cmp
icebp
lret
cmp
int3
fstpl
shrl
fimuls
sub
inc
jp
jae
shr
scas
ret
jmp
jecxz
mov
fnstenv
lahf
push
mov
cwtl
cmp
lcall
xchg
mov
xlat
add
nop
xchg
movsl
mov
mov
cwtl
js
in
mov
mov
mov
ljmp
or
adcb
mov
and
dec
sbb
stc
divl
rolb
into
lahf
add
cmp
jb
inc
sarb
pushf
jge
fwait
lret
fsubr
cmpsb
cltd
dec
mov
outsb
iret
jg
mov
jne
test
fsubrs
lcall
lahf
push
iret
out
jo
aaa
rcrl
sbb
mov
mov
push
pusha
pop
sub
pushf
cmp
ja
jl
lahf
push
loopne
das
jno
pop
movb
xchg
inc
decl
sub
shrl
imul
mov
adc
xlat
pop
iret
je
cmp
inc
enter
xchg
xchg
fidivrs
cld
add
inc
mov
xchg
sti
outsb
stc
jnp
mov
fcmovne
shrl
sahf
lret
push
lods
arpl
shl
nop
in
cmp
jae
mov
xor
shlb
xor
adcl
aam
outsl
xchg
out
popf
das
mov
push
mov
sbb
jbe
jl
ret
bound
xor
cld
pop
jae
cmp
dec
jle
mov
daa
lods
sbbb
and
add
int3
push
xchg
cmpsl
rcrb
into
jg
inc
mov
xchg
stos
push
mov
mov
jo
lahf
mov
lods
inc
or
iret
mov
push
out
jb
ja
aam
nop
xor
scas
cmp
inc
inc
xchg
xchg
fbstp
stc
pop
push
je
mov
dec
xchg
mov
mov
cmp
sarb
imul
cld
popf
jbe
sahf
iret
jl
ja
xchg
jle
je
add
lcall
hlt
insb
mov
inc
clc
sbb
mov
ja
inc
inc
das
sbb
or
jge
jns
xchg
rolb
ror
jnp
add
jg
add
mov
int
ret
pop
mov
jl
andl
inc
sub
pop
xchg
cltd
rcr
inc
cmp
inc
push
rcrb
negb
jns
aaa
test
outsb
sbb
xor
pop
cmc
jge
jg
jl
sarl
or
in
daa
inc
subb
mov
jle
int3
sbb
mov
xorl
lods
sahf
lods
push
sbb
sbb
jl
pop
jle
jp
test
lret
xchg
mov
inc
cli
cmpl
out
jg
shrl
cmp
sub
inc
jno
xchg
xchg
mov
vxorpd
or
pop
push
mov
stos
mov
mov
xchg
stos
jmp
cmp
fildl
je
cmc
cltd
dec
int
jecxz
jo
popf
arpl
jae
jae
leave
cwtl
daa
lock
imul
push
jle
mov
leave
xchg
xchg
cmc
jp
int
and
test
outsl
mov
dec
xor
test
into
mov
fwait
insb
mov
das
test
jno
xlat
imul
push
xchg
or
push
mov
gs
es
test
leave
mov
ja
imul
and
cmp
lcall
orb
mov
jnp
or
aas
fistl
sub
inc
nop
outsl
insb
mov
mov
insl
pop
and
pop
lods
pop
mov
xor
inc
adc
and
insl
lret
imul
mov
xor
ficoms
push
push
enter
xchg
faddp
mov
int3
test
sahf
jns
inc
sbb
jbe
cltd
dec
cmpsl
cmp
jb
and
adc
cmpsl
cltd
stc
add
test
push
out
fimuls
int3
loop
arpl
imul
pop
je
lret
or
jnp
gs
subb
loope
mov
pop
mov
fwait
jae
psubd
cs
sbb
ja
xlat
sub
lcall
jae
xchg
inc
cld
inc
dec
insl
lcall
xlat
mov
sbbb
outsl
fs
out
fsubrs
push
dec
cmp
xchg
iret
jae
addr16
xchg
das
mov
aam
sub
mov
sarb
ja
jbe
jge
testl
popf
das
out
outsb
leave
jae
test
mov
int3
cmpsl
or
xchg
ja
sub
ja
jno
popf
sub
mov
mov
int
jb
or
mov
imul
jl
test
mov
sahf
mov
or
out
inc
push
xchg
inc
mov
push
add
push
xchg
imul
cli
scas
outsl
fcmove
push
xchg
jle
out
jno
imul
int3
mov
pop
push
ja
inc
xchg
aaa
movsl
sbbl
pop
xorb
lret
sbb
mov
clc
mov
sahf
pop
pushw
cmp
adc
xchg
jbe
rcrb
jb
je
mov
cs
int
sti
cld
je
and
xchg
arpl
shl
cltd
leave
sahf
ret
repz
das
test
nop
xor
popf
mov
cmpb
jb
lret
sub
out
out
inc
xchg
jno
xchg
popf
adc
lcall
jle
in
fwait
mov
pop
popf
int3
add
ja
inc
xlat
lret
jp
lret
jp
jae
pusha
mov
ja
mov
mov
int3
addr16
mov
sbb
jb
shrd
lahf
dec
cmpsl
mov
cmpsl
in
insl
aaa
mov
mov
shll
dec
lret
inc
fwait
push
aaa
rcrb
mov
insb
aam
cltd
iret
ja
pop
lcall
into
xchg
aaa
insl
mov
pop
aaa
iret
fists
ret
xchg
inc
adc
into
es
mov
mov
inc
xchg
test
jb
push
jae
aam
jp
push
fnstsw
xchg
rep
je
mov
int3
mov
xor
leave
xlat
lret
xchg
insb
or
outsl
xchg
mov
pushf
and
xchg
push
cmpsb
xchg
imul
sbb
or
jp
mov
lret
xchg
dec
push
push
call
in
push
jge
addr16
xlat
leave
fsubs
xor
outsl
insb
mov
fisttps
cmc
jle
aaa
mov
mov
cmp
mov
int
push
cmp
nop
mov
sahf
lahf
cmpsl
lea
shrb
pop
mov
shlb
in
xchg
inc
popa
mov
test
loopne
dec
dec
jne
stc
xchg
mov
mov
mov
mov
andb
push
jo
cli
push
xchg
xchg
and
fnstcw
outsb
andb
loope
jns
and
xchg
cli
xchg
lahf
mov
push
mov
jnp
push
insb
popf
out
cmp
popf
mov
sbb
outsl
jg
mov
leave
inc
sti
outsl
jge
int3
pushf
out
loop
jg
mov
xchg
jno
cld
dec
nop
fucomp
jo
jl
aad
jae
ror
mov
xchg
jl
insl
mov
pushf
imul
mov
mov
xchg
inc
push
jnp
push
xchg
cmp
jns
xor
lcall
fldt
add
add
dec
dec
orl
xlat
inc
jge
jp
insb
mov
inc
stos
add
jg,pn
sbb
xlat
fidivrs
or
jge
mov
jl
imul
adc
mov
inc
lods
xchg
outsb
shlb
pushf
pushf
xchg
int
lahf
adc
imul
jbe
xor
mov
mov
mov
or
ja
ret
imul
notl
lods
jp
ret
and
lcall
seto
das
jae
jb
imul
je
lret
inc
imul
xchg
pushf
incb
rorb
outsb
push
cmpsl
sti
int
adc
xchg
aaa
pop
in
outsb
lahf
mov
mov
ret
mov
push
sti
fcoms
test
jge
xlat
loopne
subb
jle
push
xlat
xchg
int3
insb
shlb
inc
xchg
fidivrs
and
jb
lcall
lea
pushf
xor
mov
loopne
ror
push
fisubrl
rorb
pop
dec
cli
mov
push
into
cwtl
cmp
mov
in
int3
loope
xor
xchg
cltd
lds
pop
pushf
jecxz
xchg
addr16
jns
push
fidivrs
mov
mov
imul
push
divl
mov
lret
dec
and
mov
lea
jg
push
jbe
jle
jecxz
fdivrs
ja
data16
xchg
inc
int
pop
insb
mov
stc
insl
js
xchg
xor
jbe
pop
mov
ja
mov
cld
mov
jne
jnp
scas
call
cmp
or
inc
filds
iret
rcll
mov
add
dec
and
mov
jnp
mov
xor
sbb
xchg
cmpl
xchg
jae
or
and
imul
cs
xchg
dec
std
aas
inc
js
mov
xchg
stos
ljmp
mov
mov
outsl
mov
lret
scas
mov
mov
popa
outsl
sbb
roll
lods
int
icebp
test
and
jno
and
mov
lret
sbb
jb
sbb
cltd
outsb
cwtl
pusha
adc
je
mov
pop
inc
nop
jg
and
rcrb
outsl
adc
lret
arpl
or
outsl
mov
insb
leave
lcall
jle
fwait
cmp
mov
adc
jg
outsl
xor
test
or
jge
js
add
inc
push
lods
inc
rcrb
insb
inc
pop
arpl
stc
hlt
mov
test
pushf
mov
repz
jb
jno
mov
xchg
lret
lcall
insl
loope
xchg
inc
je
jbe
mov
xchg
sti
sti
cmp
jns
cli
insb
lret
jmp
mov
insl
mov
adc
xor
nop
loopne
pop
jg
xchg
lcall
jne
ja
aaa
pushf
push
sbbb
jg
insl
repnz
ds
xlat
mov
lea
and
ljmp
mov
cmp
sub
out
orb
pushf
dec
addl
mov
inc
jo
sbb
inc
in
xchg
xlat
push
int
push
push
inc
mov
lret
fistpl
mov
cmpb
ret
or
xchg
xchg
int3
iret
jo
imul
popf
dec
arpl
jge
not
inc
lea
aad
aam
mov
jae
popa
fbstp
fmul
mov
daa
pop
jae
jge
int
and
out
mov
movq
xchg
and
fwait
mov
sbb
jb
pop
cmpsl
cmp
orb
dec
and
jne
dec
pusha
or
dec
mov
mov
dec
and
fwait
int
xchg
jmp
xlat
aad
xchg
xchg
mov
insb
inc
test
sub
stc
gs
inc
jo
pop
push
xchg
push
insl
imul
or
shll
mov
mov
cmpb
pop
into
inc
outsl
jge
in
jae
outsb
mov
jl
xchg
icebp
daa
lcall
mov
mov
int3
mov
jge
in
enter
ret
in
ret
in
mov
orb
push
jl
popf
mov
add
mov
mov
subb
outsl
inc
sbb
mov
jns
sbbb
adcb
ror
in
fistps
jbe
popf
andb
leave
sbb
inc
pushf
pop
adc
js
push
sahf
mov
lahf
or
popa
xchg
mov
xchg
jns
lea
or
outsl
je
jg
jg
inc
rorb
inc
jo
ljmp
jae
or
cmp
push
insb
inc
xchg
int3
xchg
jnp
xchg
inc
jge
cmpsl
data16
push
mov
mov
inc
mov
insb
xchg
xchg
add
lret
insb
mov
cmp
fwait
xchg
lock
sbb
in
jmp
lcall
lea
mov
inc
mov
imul
mov
jne
xor
sbb
xchg
add
addb
fwait
pop
jnp
jns
adc
adc
fadds
ljmp
cmp
cmp
mov
jne
movsl
xor
popf
dec
cmp
cwtl
cwtl
jo
xor
jp
xor
jne
subl
cwtl
push
mov
int
in
mov
inc
leave
cltd
movsl
cmp
jp
xor
jns
jnp
cld
mov
outsb
mov
das
ja
popf
ja
ljmp
add
das
xor
push
lcall
rolb
andb
jne
mov
js
aaa
popl
jl
dec
inc
out
push
fnsave
push
test
mov
insl
sub
jbe
add
mov
jno
jg
ljmp
aaa
xchg
xchg
sahf
jb
jne
jbe
outsl
rcll
popf
insb
xchg
mov
iret
cmp
imul
je
imull
jmp
nop
jl
push
push
sti
push
lds
lea
xor
imul
roll
lods
loop
jle
mov
mov
aas
insb
xchg
jno
adc
stc
arpl
stc
cltd
mov
jns
or
mov
add
jle
jns
cmp
leave
sbb
cltd
pop
mov
imul
arpl
sbb
sbb
push
mov
jge
in
mov
xor
lret
cld
fstpt
lods
adcb
imul
xchg
push
outsl
lret
cmp
jae
sbb
or
jo
mov
shll
inc
sbb
pop
mov
mov
mov
cmpb
orb
add
andl
lret
nop
clc
cmpsl
popf
jne
lock
lahf
stos
mov
iret
add
js
popf
or
dec
jo
xchg
mov
jb
aas
outsl
fwait
nop
jg
iret
jg
jae
cmp
popf
xor
xlat
int3
xchg
aaa
xchg
mov
outsl
lahf
jnp
lds
mov
ds
mov
int3
cmp
leave
insb
or
iret
test
clc
lods
push
inc
xchg
outsb
aad
adc
mov
inc
insb
xchg
andb
fbld
shrb
imul
les
adc
inc
cmp
mov
jae
enter
mov
mov
jbe
push
push
or
add
ja
xchg
or
jo
jge
mov
mov
xor
insl
cpuid
dec
fistpll
into
test
xchg
push
mov
int
cmpsl
lahf
jns
xchg
mov
rclb
pcmpeqd
mov
das
cmpb
inc
mov
popf
xor
mov
mov
cmp
sahf
stos
jns
jle
mov
jns
sbb
cmpsl
pop
iret
leave
cs
dec
sbb
inc
mov
fwait
xorb
ja
xlat
cmp
je
jge
xchg
mov
addr16
orb
mov
mov
mov
jns
jne
les
jmp
in
push
stos
and
add
mov
push
mov
lds
lret
pop
call
xchg
jg
into
into
out
xchg
mov
jg
fsubs
sub
push
jne
cmp
cmp
stc
data16
push
pushf
push
out
je
jno
lahf
adc
push
xchg
jge
jg
inc
push
fwait
jnp
sbb
das
movsb
mov
mov
push
imul
jl
sahf
sbb
shll
xchg
xchg
jge
movsl
out
cmpsb
subb
sbbb
push
aam
inc
int
sbb
jae
cmp
dec
pop
xchg
xchg
jmp
lcall
out
outsb
add
pop
mov
or
aam
outsl
lods
ja
push
inc
fimull
fwait
cmp
lahf
mov
imul
pop
push
jl
int3
pop
mov
out
mov
int
mov
fbstp
jge
inc
subl
pushf
out
inc
jne
jae
rclb
lock
imul
jnp
nop
into
jo
lcall
sub
xchg
mov
sbb
sahf
mov
repnz
xor
xchg
out
fnsave
fdivs
je
cmpsl
push
inc
inc
mov
xchg
jecxz
arpl
imul
lods
cmp
pushf
addr16
xchg
dec
lock
fldl
cmc
mov
aam
scas
cli
out
jge
arpl
inc
imul
pushf
jnp
stc
xchg
sub
pop
adc
inc
lret
mov
imul
pop
sub
inc
lcall
push
inc
sbb
ret
xchg
cwtl
aaa
aas
xchg
mov
insb
jp
lcall
xchg
cmp
jne
daa
aad
jo
nop
lea
add
push
push
push
fnstsw
shlb
mov
lea
adc
pop
sub
mov
lcall
jb
test
lret
iret
clc
dec
push
fwait
add
mov
push
inc
imul
add
lahf
arpl
mov
orb
push
leave
jle
push
fnstsw
cltd
scas
sbb
jp
xlat
sub
arpl
fsubs
fwait
lds
fisttps
lods
lea
int3
and
fcom
lcall
stos
mov
ja
stos
jno
mov
mov
cli
mov
xchg
cs
icebp
clc
mov
cmp
and
lds
seta
dec
ret
dec
arpl
ret
sbb
pusha
xchg
leave
cs
mov
fisubrl
daa
pop
xchg
sbb
mov
insb
js
xlat
fwait
iret
sbb
in
cltd
stos
sub
cltd
dec
test
cmpsl
sahf
xchg
int3
scas
stc
xchg
ja
bound
mov
xchg
imul
mov
xchg
jae
inc
fmul
mov
call
stos
lret
inc
jnp
cltd
xchg
imul
lret
jae
ja
jmp
js
jbe
imul
rclb
jno
repz
add
ja
pop
and
sti
mov
js
jp
inc
pop
adc
lret
nop
xchg
cmpsl
mov
ja
jno
jne
cli
add
fstps
sbb
decl
into
fsubrs
subb
negl
pop
xchg
adc
jbe
jg
mov
jo
iret
cmp
xchg
mov
div
and
mov
mov
sbb
gs
fcomps
aad
imul
mov
push
ret
imul
lret
sub
outsl
ja
mov
and
inc
sbb
mov
in
add
mov
xchg
jle
sub
aaa
xchg
sarb
mov
push
imul
or
les
jae
jge
out
in
sbb
sbb
outsb
pop
nop
mov
xlat
lahf
jle
into
mov
sub
shrb
pop
jb
xor
mov
daa
sahf
icebp
arpl
fcoms
fwait
cmpsl
popf
mov
notl
add
jl
add
pop
loop
fwait
mov
add
adc
insb
je
nop
jmp
mov
push
jecxz
push
xchg
xchg
mov
sbb
outsb
mov
outsl
movsl
cwtl
cmp
xlat
lcall
cld
rolb
out
jo
jne
mov
cld
es
out
jbe
jecxz
add
mov
sbb
rcrl
push
mov
cmpsl
mov
adc
stc
pop
cld
stc
xlat
data16
iret
xchg
xchg
mov
xchg
mov
jge
xchg
ret
shl
jno
hlt
cli
cmc
mov
sbb
int
test
or
push
inc
mov
test
mov
ret
mov
lret
arpl
cwtl
xchg
jb
cwtl
mov
addr16
pushf
lods
mov
xlat
addr16
nop
rolb
fistpl
jge
loopne
mov
xchg
sub
mov
ja
dec
addb
insl
jl
insb
into
adc
testb
fwait
into
cltd
int3
iret
mov
imul
xchg
mov
lods
inc
inc
aam
jmp
jne
cli
jnp
lock
mov
cli
aaa
inc
mov
sub
cmpb
cld
inc
leave
lret
mov
jmp
jle
cld
pop
ja
xor
pop
mov
rclb
insb
xchg
paddb
jmp
mov
sub
push
adc
xor
xchg
mov
mov
psubusw
xor
xlat
jb
jae
inc
fcoms
mov
sti
shlb
mov
insb
imul
je
jg
mov
pop
mov
xchg
mov
cltd
push
cmp
cmp
lea
cmp
mov
enter
pushf
push
dec
and
mov
xor
jecxz
lcall
into
call
jg
testl
sahf
jno
jns
jle
mov
mov
lea
lcall
add
xchg
aaa
push
push
imul
jge
andb
xchg
xor
jg
andb
sub
je
xchg
addr16
xchg
pusha
mov
imul
or
jo
lea
test
dec
inc
adcl
arpl
jmp
jp
jg
outsl
xlat
lret
int
xlat
leave
insl
std
jl
cwtl
aaa
pop
rclb
mov
push
cs
mov
mov
imul
jb
icebp
mov
jmp
cmp
mov
xlat
jbe
mov
push
in
fadds
notl
lahf
popa
sbb
jbe
ja
lods
in
je
mov
sbb
jg
mov
sahf
cltd
sbb
cltd
leave
stc
sti
push
insb
test
adc
add
fidivrl
or
mov
inc
ja
and
mov
xchg
pop
adc
cmp
orb
push
sbb
lret
jae
popf
and
jb
dec
arpl
push
cmp
out
jae
test
xlat
out
xorb
aaa
push
iret
jne
mov
ja
out
jle
add
push
stos
iret
add
mov
je
ret
push
sub
arpl
cmp
push
jnp
xchg
insb
sti
imull
das
xchg
leave
loop
dec
pop
mov
lret
mov
pop
lret
xlat
imul
mov
int
pop
fwait
adc
mov
sarb
dec
mov
jns
rcl
cmpsb
repnz
xlat
ret
push
lret
cld
cmpb
jle
adcl
or
mov
or
js
mov
fabs
dec
aam
fnstcw
inc
stc
lret
lea
push
mov
dec
aam
iret
in
in
cmp
push
outsl
xchg
sti
cmpsl
fst
xlat
idivl
push
jecxz
insl
outsl
mov
jnp
lret
arpl
leave
mov
jle
mov
cmc
aam
jge
mov
leave
jle
call
rcrb
dec
jmp
call
ficoms
jmp
ds
adc
jb
adc
pop
lahf
mov
fstp
arpl
imul
pop
test
arpl
pop
jno
inc
into
arpl
pop
sub
xchg
arpl
rcrb
jmp
pop
push
insb
pop
adc
jne
sub
dec
popf
mov
mov
jge
ja
lretw
pop
insb
orb
add
xor
test
iret
sub
pop
arpl
dec
aam
xor
xchg
adc
loopne
mov
dec
aad
lret
add
int
jo
ja
dec
andb
into
nop
ss
sahf
repnz
pop
loop
push
sub
jbe
push
imul
lea
inc
movsl
push
add
and
mov
pushl
nop
push
mov
add
nop
push
adc
insl
test
inc
enter
aam
lahf
and
push
xlat
sbb
lods
adc
mov
push
jle
xchg
jp
jb
outsl
push
adc
mov
insb
jg
outsl
adc
call
into
outsb
mov
xchg
ds
sbb
fiadds
nop
aam
cltd
mov
lea
ja
mov
jp
xchg
and
xchg
outsb
mov
mov
push
shlb
subb
push
mov
imul
loop
cmpsl
lret
int3
leave
mov
push
pop
jo
mov
mov
aaa
jb
je
mov
sarb
cmp
int3
sub
mov
int3
xchg
pop
xchg
adcl
lea
ja
mov
jp
and
adc
xchg
fildll
push
in
inc
mov
outsl
mov
mov
lret
fcmovnb
and
jl
gs
ret
hlt
test
jo
je
mov
jnp
adc
lret
xchg
cmp
nop
mov
mov
xor
cmp
lahf
pop
jle
out
je
mov
add
push
shrb
stc
xchg
xchg
pushf
xchg
js
mov
idivl
sbbb
sahf
jge
nop
add
cmp
outsb
out
inc
cwtl
test
cwtl
subb
mov
fdivrs
jns
mov
sti
pop
mov
cld
mov
int3
xchg
es
adcb
pop
xchg
push
popa
mov
leave
call
rcrb
mov
and
xchg
or
pop
mov
pusha
aaa
sahf
xchg
mov
ja
pop
mov
leave
cwtl
mov
lret
insl
jbe
xchg
xchg
insb
lcall
mov
test
cmpsl
test
insb
jp
mov
jnp
inc
mov
xchg
inc
jae
mov
iret
inc
jp
adc
mov
dec
fldl
in
sahf
cli
mov
dec
ss
insl
data16
sub
or
pop
leave
loopne
aam
inc
jno
push
pop
cmpsb
insb
jle
lods
mov
test
cwtl
shlb
mov
xor
cld
sbbl
into
mov
lahf
sub
xchg
jne
push
std
mov
nop
xor
sbb
rorl
jo
jg
nop
xchg
inc
outsl
mov
lret
out
mov
mov
imul
outsb
leave
lea
pop
arpl
xor
jle
out
mov
jns
jbe
push
add
popf
leave
xlat
rolb
xchg
or
pop
adc
add
imul
xchg
inc
orb
push
mov
sbb
sbb
in
sbb
xor
adc
add
dec
fcomps
ljmp
lea
jns
aam
test
js
into
xchg
add
fcomps
int3
lret
jp
into
ret
jno
push
popf
int3
jae
aaa
ja
mov
jne
xchg
fwait
sub
pushl
lret
out
js
fmuls
mov
lahf
mov
mov
in
pop
dec
inc
iret
xchg
inc
ja
sahf
cwtl
mov
jle
push
adc
insb
stos
jae
clc
mov
jg
mov
jb
orb
hlt
adc
xchg
pop
fmull
nop
jge
xchg
mov
xchg
mul
lcall
mov
push
pushf
mov
mov
out
outsl
arpl
filds
nop
push
jbe
sahf
push
repnz
mov
dec
outsb
sbb
mov
daa
imul
leave
lcall
xorl
lcall
xlat
dec
iret
adc
shll
lea
lahf
pushf
arpl
rolb
jl
int3
xchg
pop
mov
xchg
mov
jle
cmpl
xor
jae
dec
jg
jecxz
jl
sub
inc
push
sbb
movsb
cwtl
push
sub
lahf
lds
ja
jb
jbe
insl
mov
test
cmp
xchg
mov
inc
lret
jne
insb
sti
fidivrs
cmc
nop
xor
mov
popf
xor
popf
sahf
popa
fdivr
lret
out
lock
adc
cmp
pop
xor
adc
fistpl
dec
push
out
mov
rcr
clc
mov
out
xchg
mov
jle
sahf
ret
inc
mov
outsl
mov
xchg
lea
or
jno
cmp
pushf
inc
das
dec
insb
fcmovne
mov
mov
or
arpl
js
cld
push
cwtl
jae
das
xchg
lcall
fcom
jnp
add
adc
aaa
jl
sbbb
lahf
lea
inc
xorl
inc
pushf
cwtl
jo
int3
je
mov
push
dec
adc
dec
decb
cmpsb
dec
sub
mov
mov
fdivrs
jne
inc
orb
jge
imul
inc
cmp
mov
mov
lods
imul
inc
leave
mov
lret
popf
out
adc
insb
int
sahf
nop
mov
mov
jo
clc
int
mov
jnp
divl
orl
xchg
mov
insb
inc
xor
jge
mov
jae
jg
addr16
js
inc
mov
sahf
mov
call
mov
jae
stos
into
fwait
arpl
loopne
movsb
jae
lods
mov
sbb
cwtl
push
mov
mov
fcoms
lret
in
mov
int
jb
mov
and
scas
pop
dec
cmp
js
mov
sub
xchg
scas
lcall
mov
imul
inc
lret
jne
insb
push
xchg
push
outsb
ret
cmc
xor
xor
rcrb
sbb
sbbb
xchg
jb
divl
aas
je
inc
and
and
jle
dec
movsl
dec
or
xchg
cmc
jp
pop
imul
cmp
mov
fdivrs
insb
inc
mov
pop
add
pushf
aam
jge
jg
into
mov
inc
lcall
outsl
jecxz
jle
insl
iret
sbb
js
je
imul
or
jne
mov
lahf
jo
jb
xor
mov
lea
lret
aad
mov
popa
mov
dec
pop
js
mov
sahf
dec
rorb
ja
mov
adc
jge
or
sbb
and
dec
loope
leave
jg
outsl
fsubrs
repz
mov
cmc
leave
imul
out
pusha
xchg
int3
into
xor
mov
mov
inc
mov
xchg
rdpmc
jae
mov
ja
jo
pushf
lret
xchg
xchg
and
add
sbb
xlat
mov
adc
mov
cmp
jl
movsl
into
lea
inc
push
cltd
subb
xor
xchg
sahf
test
jae
lock
mov
jae
push
hlt
arpl
sub
cwtl
dec
cmp
lods
outsb
xor
sbb
xor
push
mov
mov
pop
xchg
xlat
mov
outsb
cli
les
imul
fwait
aaa
pusha
outsl
xchg
push
aad
ja
jb
imul
ret
mov
jge
add
setg
cwtl
jg
lods
sarl
outsl
inc
mov
jl
xchg
or
jp
ja
push
mov
adc
mov
outsl
call
mov
imul
dec
rorb
mov
in
push
fcoms
out
popf
adc
xchg
out
imul
mov
pop
dec
mov
int3
lret
scas
iret
cs
mov
sbb
jge
lret
data16
dec
lods
jno
mov
stc
std
mov
cwtl
lea
arpl
les
repz
popa
mov
nop
das
pop
lret
lret
mov
mov
clc
shlb
sub
enter
int3
mov
jge
aad
lods
sbbl
insb
scas
mov
pop
add
lods
jbe
jp
jns
jno
rclb
outsb
jle
dec
stc
sahf
pop
je
mov
std
lea
and
xchg
fbld
mov
mov
ss
mov
sbbb
mov
or
clc
adc
adc
mov
fwait
mov
jns
dec
mov
inc
sahf
jae
lods
jg
mov
repnz
xchg
xlat
lret
mov
lcall
ja
pop
fadds
dec
cltd
inc
jl
lret
rcl
mov
jge
xchg
into
inc
insl
pop
jecxz
lock
outsl
popf
mov
mov
jg
mov
mov
inc
push
or
pop
push
fisttpl
popa
mov
lds
jle
add
stc
jl
cltd
mov
shr
insl
addb
lret
xchg
int
xor
loop
stos
jno
mov
sbb
ret
xchg
cmp
cli
loopne
test
jbe,pt
push
inc
xor
lea
xchg
popf
movsl
inc
lret
jb
xchg
pushf
mov
cmp
mov
enter
mov
loope
mov
xchg
jns
add
jbe
outsl
jbe
test
xchg
leave
lret
mov
inc
fwait
or
pushf
cmpb
xchg
fcomps
jge
daa
out
xchg
add
inc
inc
shrl
push
xor
je
adc
test
std
xlat
mov
sti
push
cmp
popf
push
insl
jns
push
lds
outsb
mov
addr16
push
add
sahf
xchg
pop
in
scas
js
jp
mov
int3
int
jns
inc
jp
outsl
cmp
jne
xchg
xchg
mov
popl
xchg
cwtl
mov
sbb
fdivp
sbbl
in
dec
lock
out
push
aaa
out
out
addl
dec
and
int3
dec
lock
jp
jb
out
int3
imul
lahf
lcall
xor
imul
inc
ja
hlt
in
call
lods
ret
into
stos
pop
cltd
pop
loop
mov
pop
jl
xorl
pop
mov
lea
cwtl
call
int3
enter
push
fildl
fsubs
cwtl
mov
jns
xchg
jbe
arpl
fidivrl
pop
cmpl
std
push
sbb
ja
lods
int3
adcb
jno
jae
mov
xchg
jo
mov
data16
jb
cs
sub
jmp
test
inc
push
xchg
ja
test
out
iret
pop
mov
jno
adcb
fists
inc
iret
mov
and
lahf
sbb
dec
sub
cmpsl
ds
xchg
inc
jnp
imul
mov
cltd
js
pushf
xchg
dec
rclb
jp
jo
scas
sti
je
lods
mov
lahf
leave
or
lcall
in
and
pushf
out
xchg
cltd
pushf
mov
jle
jns
mov
ret
popa
xchg
lahf
xlat
lods
mov
outsb
sahf
dec
mov
cltd
out
sbb
fstpt
xchg
addr16
jae
lret
mov
in
push
daa
aaa
rcrb
popf
jae
cwtl
lret
jo
push
mov
mov
fnstenv
lods
or
ja
int3
shl
jp
push
cmp
xchg
and
mov
into
mul
outsl
jb
mov
inc
cwtl
std
lds
or
jecxz
add
test
cmpsl
mov
out
pop
jnp
xchg
aaa
mov
inc
cmp
push
dec
or
xchg
jae
xchg
outsb
sub
mov
xchg
jg
sahf
jge
adc
mov
mov
outsb
jb
xchg
test
jne
data16
aas
and
imul
and
cmp
adcb
int3
jbe
mov
std
mov
sbb
mov
aas
movsl
add
fildll
fisubl
mov
pop
in
xor
fwait
aas
cli
push
mov
mov
fistl
mov
xchg
add
je
sbb
sbb
and
add
cltd
push
es
xor
js
jbe
into
movsb
jnp
pop
cmp
and
insb
andb
xchg
mov
jo
cwtl
sbb
xchg
mov
std
outsl
int3
mov
mov
mov
mov
hlt
jl
dec
mov
cli
pop
mov
test
ja
or
dec
cltd
imul
or
push
rclb
repnz
in
or
xlat
or
lahf
out
xchg
imul
stc
adc
leave
lea
mov
sub
outsb
jno
mov
ja
nop
jno
ret
popa
outsl
push
jno
bound
jmp
jno
push
jecxz
fwait
mov
pop
adc
iret
sbb
cltd
je
jne
jg
mov
cmp
mov
or
insb
leave
cmp
out
xchg
cmp
xchg
into
sarb
inc
pop
lahf
nop
jno
inc
fxam
xor
mov
mov
xchg
add
fsubs
cltd
inc
mov
gs
fdivs
cmpsb
mov
das
aas
push
mov
push
xchg
sti
lahf
jno
call
jo
outsl
test
xchg
lret
aaa
test
mov
inc
pop
mov
in
ret
aad
jl
aam
out
lock
je
js
add
mov
fistpll
jb
xchg
pop
mov
inc
xlat
jnp
mov
loopne
imul
arpl
push
or
or
data16
jmp
cmp
xor
jl
mov
rolb
xchg
adc
lods
jae
xchg
mov
push
shlb
xchg
jp
int3
xchg
sbb
jg
mov
shlb
mov
xchg
xor
outsl
insb
jp
push
adc
data16
xchg
xor
outsl
int3
js
sahf
xor
sar
iret
leave
sbb
jae
js
mov
mov
addr16
into
add
shll
jg
xchg
jbe
jae,pn
pop
mov
push
popa
loopne
mov
mov
lcall
rcrb
xchg
fidivrs
sub
nop
pop
inc
mov
dec
jne
jo
sahf
fdivrl
fildll
pusha
xlat
add
int
lods
push
pushf
insl
mov
pusha
xchg
sahf
xchg
push
inc
movsl
imul
mov
xchg
inc
sti
xchg
add
jo
insl
outsb
cli
jno
jl
jns
sub
mov
fiaddl
adc
bound
mov
fildl
popa
xchg
popf
mov
pop
xchg
add
inc
adc
jae
call
int3
cltd
xlat
imul
outsl
jl
jns
leave
sarl
xchg
ljmp
out
and
leave
imul
push
or
repz
mov
cltd
scas
mov
xchg
movsl
ret
into
jmp
xor
xchg
xor
shrd
movsl
std
inc
lret
inc
pushf
pop
push
pop
cmp
pop
xor
out
mov
inc
and
popf
mov
sbb
jo
mov
xlat
out
int
mov
push
inc
xchg
aaa
shlb
inc
test
in
pusha
cltd
clc
mov
imul
mulb
mov
rolb
jg
je
cmp
outsl
push
bnd
and
movsl
jae
mov
or
pop
jbe
pushf
rorb
in
jb
inc
in
bound
xchg
out
sahf
xor
xchg
mov
jl
lret
test
out
int
or
xlat
xchg
es
mov
rcrb
mov
popa
mov
inc
fs
cmp
imul
add
jbe
jae
shrb
sub
jno
loop
xchg
fstpl
addb
idivl
je
stos
adc
pop
jnp
jnp
push
jle
dec
fldt
xchg
ja
sub
aad
jl
mov
adc
inc
lret
lahf
jbe
add
imul
test
xchg
jb
jbe
and
jo
jg
out
jg
outsl
jnp
push
cmp
jbe
aam
lds
inc
outsl
dec
mov
nop
test
lods
mov
xor
call
adc
insl
bound
jno
mov
fwait
xchg
aad
jg
lcall
pop
dec
push
xchg
inc
push
jo
out
jp
jge
push
cmp
add
filds
lahf
js
xchg
push
imul
cmp
fwait
xchg
std
sbb
andb
mov
mov
xchg
jno
jecxz
jae
andb
mov
testl
push
and
or
test
ret
mov
xchg
mov
ror
ja
out
xor
aam
lea
inc
jae
cmp
das
ja
lcall
jno
js
fisttpll
ret
test
ja
insl
in
dec
aam
jb
repz
jle
outsb
adc
pop
jns
dec
pop
in
jae
xchg
pop
xchg
dec
arpl
movsl
data16
ret
fbld
fimuls
js
mov
add
jmp
arpl
cmpsl
andb
inc
movsl
mov
jecxz
in
popa
arpl
jg
and
arpl
aaa
movsl
sbb
inc
movsl
into
arpl
inc
pop
andb
movsl
mulb
inc
push
mov
xchg
arpl
jg
mov
imul
imul
movsl
arpl
cmpsb
fsubl
adc
movsl
pop
arpl
jg
mulb
rorl
jp
push
arpl
jo
movsl
into
arpl
rol
mov
test
movsl
lock
rorl
loope
arpl
roll
mov
shll
sbb
iret
push
xchg
xchg
cmp
push
pushl
jns
leave
mov
adc
aam
pop
xchg
xchg
xchg
push
pop
test
insb
xchg
sub
xchg
xchg
daa
sbb
cltd
inc
push
mov
ret
xchg
lret
xchg
jno
lods
sbb
inc
mov
fsubrs
pop
int
mov
dec
dec
dec
adcb
jnp
clc
or
mov
mov
pop
or
insb
push
add
fdivl
pushf
insl
lret
outsb
js
inc
push
call
xchg
jp
imul
ds
add
int
cmc
mov
lahf
pop
test
lret
lods
jg
jle
call
lea
lahf
iret
jbe
js
sbb
and
int3
jg
jecxz
popa
mov
clc
into
inc
movl
outsl
adc
cltd
shrl
mov
xchg
cmp
xlat
mov
outsl
int
mov
into
orl
int3
push
imul
cwtl
mov
xlat
jp
jno
sti
mov
lods
mov
mov
orb
fwait
js
aaa
fadds
popf
inc
mov
cmp
jno
xor
ret
sahf
mov
xor
pop
mov
mov
inc
pop
dec
jae
ret
xchg
into
jl
add
mov
sbbb
jmp
jno
daa
stc
ja
inc
lret
add
mov
cmc
insb
xchg
jp
inc
xorb
pop
lret
mov
jle
xor
push
xchg
mov
outsl
sbb
and
or
out
jnp
int
inc
mov
insl
mov
lcall
ficompl
les
inc
adc
enter
and
out
jnp
outsb
pusha
add
fwait
int
jb
out
mov
mov
and
sahf
xchg
mov
jle
or
jb
and
jns
xchg
xchg
nop
test
mov
leave
test
shlb
lahf
out
jbe
mov
int3
mov
push
jp
mov
push
aas
mov
mov
je
mov
sub
jae
fildl
xchg
sarl
lea
xchg
call
rcll
outsl
jp
jo
jne
xchg
add
ror
imul
test
cmpsl
jno
outsb
xchg
int
inc
jp
lret
jg
shrb
inc
jbe
sahf
jl
mov
repz
mov
jns
jle
aad
insb
mov
xchg
fwait
popa
jnp
sbb
adc
shlb
and
daa
arpl
inc
jne
insb
sbb
xchg
sbb
ja
and
xchg
jo
mov
mov
mov
inc
insl
pushf
sbb
pop
scas
leave
mov
xlat
push
repz
jno
mov
jae
das
fwait
sbb
push
test
mov
mov
stc
adc
jno
sarb
xchg
mov
popf
enter
shlb
shll
jg
test
inc
xchg
sarb
int3
jns
xchg
cltd
push
jbe
jge
xchg
stos
mov
insl
int3
mov
mov
mov
xor
cwtl
mov
insb
adc
sarb
je
int3
xlat
mov
mov
int
jbe
into
cmp
mov
inc
xor
fistpl
test
das
inc
adc
ds
jecxz
lock
dec
in
popa
cli
or
je
mov
jns
or
into
fwait
push
mov
cwtl
and
insl
rcl
mov
jo
shlb
mov
int3
push
inc
fwait
or
repz
test
lods
cwtl
mov
pop
xchg
mov
imul
lret
add
xchg
sbb
mov
xchg
inc
xlat
dec
jp
jl
xchg
iret
leave
inc
int3
mov
sbb
mov
bnd
ja
repnz
outsl
jo
push
adc
sbb
mov
cmp
lret
jg
xlat
int
jmp
sbb
mov
lret
sbb
sub
adc
cli
cmp
imul
leave
stos
inc
or
inc
cltd
mov
jecxz
cmp
cmp
cli
mov
outsl
inc
data16
or
je
stos
mov
xor
ja
test
push
xchg
cs
sbb
adcb
fcomps
xlat
stos
pushf
inc
jnp
jl
mov
xchg
mov
adc
inc
sbb
lock
lds
mov
js
into
int
jo
jmp
add
jle
mov
sbb
cmpsl
out
mov
lods
adc
sahf
pop
pop
xlat
iret
mov
xchg
xchg
nop
pop
cwtl
push
add
mov
subb
js
nop
xlat
rcrl
test
pop
jo
iret
xchg
cmpsl
jecxz
imul
out
outsl
pop
sti
xchg
or
pop
sub
add
fidivrl
aam
das
pop
sbb
rcr
xchg
es
outsl
xchg
das
insb
cltd
jne
jl
aam
mov
into
or
cmp
xor
das
push
jo
or
lcall
imul
nop
jo
mov
xchg
mov
lcall
mov
xchg
inc
insb
aaa
hlt
aaa
pop
test
fwait
dec
lret
cmp
test
jle
and
sbb
popf
imul
aaa
fiaddl
outsl
xor
sahf
sbb
xlat
pop
xlat
fists
mov
and
mov
jo
fistl
mov
xchg
cmpsl
shrb
dec
xorl
aam
sbb
inc
aaa
mov
int3
insb
mov
push
adc
aaa
mov
test
jns
shl
adc
jo
jne
jmp
out
imul
sbbb
leave
pop
fbld
lods
iret
jne
rclb
pop
in
mov
insb
out
xchg
lret
aad
je
outsl
in
xchg
shll
cwtl
mov
icebp
pusha
stos
inc
sub
jmp
or
sub
mov
cmp
inc
insb
imul
jbe
adc
mov
nop
int3
mov
js
mov
in
pushf
push
inc
inc
pop
push
aam
imul
jg
dec
add
mov
in
mov
add
pushf
inc
sbb
mov
push
nop
inc
cmp
insl
in
lods
lahf
xchg
in
push
fstpt
mov
cmp
cld
xchg
push
mov
ret
jns
cltd
and
mov
jo
dec
fadds
mov
mov
nop
jle
mov
xchg
iret
outsl
out
xor
mov
jle
adc
shr
or
jb
outsl
adc
xor
jo
inc
mov
pop
insl
inc
xor
jb
or
fildl
add
imul
mov
sbb
out
inc
mov
xorb
adc
mov
stc
mov
xlat
or
dec
scas
das
xchg
test
fsubrs
and
ja
call
cmpb
into
add
lret
sub
mov
jne
imul
bound
jb
sahf
push
mov
xchg
xorb
sbb
ja
mov
jmp
cwtl
or
fisttps
xchg
jns
cltd
jbe
jnp
push
bswap
loopne
outsl
js
mov
xchg
loop
xor
add
iret
pushf
jno
into
xchg
fdivrl
jns
lahf
popf
add
mov
sbbb
jl
jp
nop
or
call
outsl
lret
jg
inc
fisttpll
lods
stos
mov
push
cmp
icebp
iret
xor
or
insl
rcrl
xchg
jns
jnp
enter
inc
iret
subb
test
shrb
adc
es
lds
mov
jp
enter
mov
lock
outsb
jl
sub
mov
in
adc
shrl
inc
jae
cltd
cltd
mov
iret
xchg
outsb
push
add
rolb
dec
icebp
jg
fstpl
xchg
leave
sarl
rclb
cltd
mov
jae
scas
les
je
inc
shlb
iret
test
mov
jg
mov
jbe
add
xchg
mov
add
add
add
mov
dec
popf
pop
push
sbb
ds
xchg
jbe
pop
jl
cltd
outsl
mov
jae
xlat
push
orl
jp
insb
inc
out
xchg
cs
and
mov
mov
lcall
xchg
and
mov
sbb
iret
cwtl
mov
nop
sti
pop
push
sti
daa
incb
pop
mov
je
mov
aaa
mov
dec
test
jnp
je
jne
xlat
ljmp
inc
dec
loop
dec
fwait
push
mov
iret
into
cwtl
inc
dec
adc
insl
mov
mov
mov
stc
adcl
xchg
pop
jo
insl
mov
cli
lea
nop
stos
dec
adc
mov
fistpl
add
lcall
xchg
dec
shrb
jge
pop
mov
adc
lea
lcall
mov
into
inc
jp
jp
xchg
cmpsl
mov
mov
les
arpl
stos
jle
lea
out
jbe
adc
fstpt
adc
fwait
jge
test
cmp
int3
dec
outsl
jp
out
cltd
mov
js
jne
enter
mov
jae
mov
jl
cmp
mov
inc
stc
ret
stc
sbb
inc
jae
lahf
mov
sti
pop
ds
mov
loopne
cmp
mov
leave
xchg
mov
xor
fsubs
push
aam
jge
fcmovne
lods
jnp
pop
xchg
lds
push
sbb
cltd
scas
arpl
das
jp
jnp
jne
mov
imul
adc
cwtl
mov
add
jb
xchg
jl
mov
lods
cmpb
sarb
daa
mov
lret
sbb
pop
decb
aam
into
xchg
mov
jl
sbb
adc
hlt
jae
imul
mov
jns
nop
push
ror
jbe
pop
test
lret
jge
mov
sbbb
dec
mov
lods
stos
cli
mov
jnp
add
lea
xchg
lds
sub
or
cwtl
jnp
inc
pop
aam
je
jns
outsl
jne
lret
fcomps
mov
cltd
and
insb
mov
clc
outsb
je
daa
jnp
movq
adc
gs
mov
ficoms
sbb
cmp
imul
mov
stc
int3
nop
jge
jns
out
cmpsl
mov
mov
push
ja
fcomps
push
adcb
test
or
cmc
mov
jns
arpl
insl
adc
das
xor
lcall
adc
cmp
inc
xchg
lea
outsl
imul
aad
push
sub
push
cmpsb
setno
bound
push
mov
out
cwtl
cmp
ja
into
xchg
lcall
fdivrs
jl
iret
nop
xor
jo
push
inc
mov
sub
jns
outsl
mov
or
inc
sbb
or
out
test
add
sbb
int
xchg
adc
je
push
mov
sbb
inc
add
int
imul
jae
inc
pop
xchg
test
push
test
jb
fmul
shl
js
pop
clc
mov
iret
decl
sbb
shlb
jl
cmc
aad
xchg
fistps
int3
xchg
mov
inc
iret
mov
pop
test
test
gs
lds
cltd
stos
pushf
outsl
or
xchg
cmp
xchg
jnp
push
sbb
fs
lea
pop
sbb
cmp
insl
out
sbb
push
sub
imul
mov
xchg
lods
jge
adc
adc
sbb
call
pushf
jge
lods
jge
ljmp
repz
jno
aaa
cmp
jo
inc
rcrl
lret
cmp
xchg
mov
stc
jbe
adc
xchg
push
inc
inc
jge
jl
arpl
test
je
es
imul
ljmp
jp
mov
filds
mov
iret
pop
test
outsl
mov
cli
inc
xchg
mov
or
iret
sbbl
ds
mov
int
xchg
jns
cmpsl
inc
into
mov
rcrb
xchg
inc
cmpsl
rcrb
mov
out
mov
push
je
data16
imul
popf
adcb
popa
xlat
adc
jae
sub
mov
mov
sub
leave
rorl
arpl
ficoml
ss
lods
sti
mov
pushf
dec
repz
lret
iret
lret
out
int
mov
iret
jp
imul
xlat
pop
jle
cmc
stc
jp
pop
rcll
ret
mov
cld
xor
mov
cld
cli
jle
pushw
aam
inc
fimull
xchg
je
xchg
jge
mov
es
fisttps
add
jnp
ja
pop
and
dec
sbb
les
jae
mov
dec
xchg
jnp
jge
or
jle
mov
mov
pop
repz
sbb
lds
loop
pop
mov
or
loopne
shrb
cmp
out
lea
ja,pn
mov
lcall
mov
repnz
sub
mov
insl
dec
js
adc
in
push
jnp
inc
arpl
pop
inc
outsl
popf
fstl
pushf
jns
cld
aaa
jg
mov
inc
out
inc
cmp
jo
xchg
push
cltd
xchg
mov
mov
lret
xor
xlat
rcr
out
adc
mov
inc
mov
lock
inc
xor
popa
call
xchg
xor
lds
jno
fwait
mov
mov
mov
adc
imul
cmp
inc
or
jnp
and
push
xchg
sarb
sbbb
jg
lods
mov
loop
arpl
insl
pop
inc
shlb
inc
jge
loop
mov
ds
iret
adc
je
adc
inc
sahf
lret
xlat
jle
jae
jno
outsl
js
out
jne
pushf
cltd
lcall
add
fcomps
xchg
and
push
cmp
orb
outsb
shrl
adc
stos
pushf
subb
rorl
sahf
or
push
pop
ja
jmp
ss
stc
mov
push
pop
cmp
xchg
mov
push
jmp
cmp
ja
pop
jle
testb
lods
jge
lret
add
repnz
jb
xchg
jo
jne
lahf
sbb
pop
mov
jmp
lods
out
xchg
enter
xlat
mov
jl
mov
pop
jge
aad
aam
test
push
lods
mov
mov
shll
jne
insb
lea
cmc
sti
iret
stc
loopne
cli
test
mov
xlat
out
jae
adc
cltd
inc
into
xchg
or
or
mov
int3
jns
sub
lcall
vunpckhps
imul
insl
push
daa
lahf
mov
ja
push
pop
mov
aam
fwait
imul
pop
pop
push
inc
xchg
shlb
iret
cli
dec
sbb
or
test
inc
fidivrs
xchg
adc
mov
int
cltd
cmpsb
push
into
shll
xor
sbb
aaa
insb
mov
in
aam
lock
lcall
sbb
lret
jnp
add
push
cmp
inc
rcl
into
xchg
push
cmp
cmp
ja
das
insb
pop
jne
scas
mov
outsl
fadds
jb
xchg
test
out
xor
mov
insl
sub
jg
nop
inc
fwait
jae
lret
inc
jae
shrb
andb
mov
pop
inc
lret
insb
xchg
mov
clc
or
int3
mov
rorb
ret
xchg
jne
lea
andl
push
jmp
out
imul
xchg
xorps
inc
jb
ja
adc
rcl
sahf
mov
lahf
jno
xor
ds
mov
fdivrs
mov
xchg
jb
pop
rcl
outsl
inc
mov
push
ljmp
jns
movl
outsb
fmuls
pop
call
jb
cmpb
out
cmp
leave
lret
sti
insb
jge
cmp
xchg
lods
pushf
adc
or
jp
inc
lcall
fwait
add
push
mov
sbb
adc
ljmp
rcrl
gs
cmpsb
xlat
push
sbb
mov
mov
sbb
pop
mov
js
sbb
mov
jb
sti
or
aam
stos
jbe
or
movsl
cmp
cmp
mov
andb
and
jl
aad
push
jecxz
push
outsl
insb
mov
cwtl
jo
ficoms
jg
int
mov
inc
mov
lahf
aam
push
lods
xchg
mov
cmpsl
push
mov
imul
sub
jne
xor
mov
lret
loop
aam
aaa
into
shll
dec
jg
outsl
sbb
xchg
call
xchg
jns
enter
and
sbb
popl
cld
pop
cld
xchg
lds
jge
popf
inc
jbe,pt
jp
dec
jne
inc
loope
into
jnp
lcall
xchg
lds
inc
pop
pop
orb
into
pop
mov
nop
xchg
adc
mov
jl
jp
aaa
aaa
mov
xchg
lea
xchg
arpl
mov
pop
jle
jne
mov
je
mov
mov
cwtl
jno
cli
fldt
lods
jg
xchg
and
imul
sbbb
shlb
inc
add
rorb
inc
outsl
mov
int3
int
xchg
mov
cwtl
int3
mov
clc
outsl
cmpb
or
xchg
lods
bound
addb
mov
jno
pushf
xor
fwait
sbbb
icebp
daa
daa
jge
orb
addl
cmp
add
daa
jb
imul
mov
jae
sbb
fadds
push
add
mov
imul
cwtl
lret
mov
cltd
int
cmc
jl
std
in
lods
outsl
xchg
mov
and
cmpsl
or
sahf
push
xor
movsl
mov
inc
mov
aaa
dec
nop
mov
lds
in
push
sub
xchg
out
jnp
imul
lret
cmpsl
insl
jns
pushf
fcomp
xchg
cmp
mov
cltd
mov
inc
leave
jns
xchg
adc
imul
int
sbbl
mov
jae
mov
stos
lods
pop
outsl
inc
lds
stc
pop
jno
jmp
pop
into
lret
iret
mov
imul
jl
imull
jle
xchg
aaa
ss
dec
fisttpl
lahf
pop
push
mov
adc
push
pop
pop
xchg
out
jmp
cmp
jae
les
pop
out
xchg
das
ja
adc
pop
fstl
nop
jne
pop
jmp
shlb
movl
jae
jmp
xchg
aaa
test
outsl
dec
or
fldl
mov
ret
rorb
jne
jmp
push
rcl
mov
rcrl
outsl
ja
xchg
jg
jne
jp
cwtl
sahf
xchg
outsl
jnp
ja
mov
jl
lds
sbb
pop
mov
dec
mov
xchg
jge
cmp
jne
xchg
sbb
xchg
outsb
je
push
mov
imul
jae
lock
mov
mov
xchg
or
in
xchg
jmp
imulb
imul
call
jecxz
pop
ja
push
ja
das
test
lahf
jae
sbb
fnstsw
mov
mov
outsl
cmp
xchg
iret
adc
int3
fstpt
faddp
mov
arpl
insb
jp
insl
mov
lods
sarl
xlat
xchg
popf
dec
xor
lods
stc
inc
jnp
xor
mov
leave
faddp
cmp
xchg
inc
adc
inc
insb
or
fcmovu
daa
lret
jl
outsl
int
mov
mov
adc
icebp
cmp
jns
mov
mov
mov
fcomps
jns
mov
push
data16
mov
inc
int3
cwtl
outsl
lahf
push
jge
sbb
xchg
cwtl
int
and
imul
jp
mov
mov
mov
cmp
outsb
add
xchg
inc
mov
pop
fisubrs
lods
in
xor
pushf
jmp
jb
jge
inc
outsl
cmpl
jns
jmp
pop
add
outsl
jae
lret
imul
mov
js
mov
into
xchg
es
dec
mov
mov
add
andl
addb
mov
pop
jne
push
push
cltd
dec
jp
lcall
jecxz
push
pop
xor
sbb
inc
aaa
cmp
lret
pushf
lds
jns
jb
adc
testb
dec
fmul
jg
dec
cmp
mov
jnp
xchg
sti
push
lds
push
mov
xchg
jp
xchg
inc
jae
iret
cltd
xchg
sub
leave
fcmovnbe
xchg
xchg
jecxz
sub
cmp
nop
mov
shll
pop
fistl
lret
cmp
fmul
outsl
xlat
mov
mov
mov
stos
cmp
jle
loopne
or
or
adc
stos
mov
inc
dec
add
les
xchg
iret
push
xchg
daa
jp
fst
rcrb
mov
jno
pop
in
je
add
jg
jae
rolb
or
mov
mov
test
cmp
js
outsl
stc
icebp
mov
jbe
xchg
aam
outsb
push
sbb
dec
pushf
pop
sbb
push
fnsave
inc
inc
setp
xchg
dec
aas
push
xchg
aaa
addr16
jnp
outsb
dec
xchg
dec
mov
or
fdiv
fdivrp
lret
ds
popf
inc
push
into
int3
js
cli
xchg
pushf
mov
xchg
sti
rcrb
mov
mov
mov
js
adcl
push
fistpll
loopne
fdiv
gs
lret
add
sub
xchg
jne
xchg
inc
nop
push
dec
push
sub
jg
jp
jno
xchg
push
dec
mov
xchg
call
test
outsb
pop
sub
jg
mov
inc
inc
into
lods
insl
xchg
lret
mov
lret
fcmove
jmp
je
nop
jno
mov
cmpsb
stc
xchg
jns
stc
movsl
pushf
sbb
iret
lret
leave
push
add
test
jns
pop
lds
mov
subb
das
push
mov
mov
xlat
insl
leave
jns
sahf
mov
fcoms
lock
jge
cmp
mov
adc
xlat
in
jg
xlat
mov
inc
sbb
mov
jle
jb
cwtl
xchg
movsl
xchg
dec
mov
sub
outsl
lahf
add
add
jnp
fcomip
mov
stos
cltd
mov
sbb
aam
inc
jecxz
popf
jo
jle
mov
nop
fcomps
jne
insl
lods
push
dec
mov
sub
stos
sub
inc
subl
mov
mov
jb
lcall
cwtl
inc
cmp
mov
inc
xor
xor
mov
mov
jp
lock
rep
popf
stos
xlat
sbbl
std
out
mov
cmp
mov
cmc
stc
sti
lcall
pop
mov
jg
pop
or
jle
xchg
mov
inc
push
xor
mov
cltd
stc
ja
sarl
xchg
ds
arpl
sbb
into
cmpsb
xchg
je
aam
or
jno
imul
xchg
leave
mov
mov
arpl
jae
jnp
sub
test
mov
fcomps
push
xlat
jg
inc
je
bound
lahf
jnp
shlb
jno
push
cmpb
outsl
aaa
ss
mov
dec
fwait
fs
movb
mov
popf
mov
mov
mov
addl
in
popa
lea
mov
jg
jo
test
mov
mov
add
xchg
sbb
movsl
aaa
mov
jbe
mov
js
pop
jg
sahf
imul
outsl
inc
mov
imull
pop
jns
mov
mov
lcall
shll
add
jle
add
jl
push
mov
fisubrs
cmp
push
and
mov
shr
mov
mov
int
jnp
cmp
je
out
aam
xchg
xchg
arpl
sub
pushf
lds
xor
mov
int
jmp
test
mov
jnp
aad
mov
int
test
repnz
pop
mov
sbb
inc
popf
das
subl
aam
lea
mov
cwtl
jne
jg
jnp
push
mov
outsb
mov
loop
lahf
popf
xchg
mov
push
or
aam
mov
inc
cmp
mov
movsb
push
call
loop
adc
mov
lret
sbb
mov
mov
aam
or
jle
jns
cltd
mov
push
nop
xlat
iret
push
in
outsl
mov
fcoms
inc
imul
roll
xor
ja
xlat
fdivs
dec
aaa
fisubl
cwtl
nop
call
fsubp
imul
movsl
div
js
aam
mov
sbb
jnp
jns
adc
stos
aaa
sub
pushf
cmpsb
jne
rolb
xor
and
sub
xchg
xchg
int3
movb
and
xor
xor
or
jb
lcall
insl
jno
and
push
movsl
das
fcmovnbe
xchg
outsb
push
pop
ret
das
movsl
push
subl
imul
or
aam
stos
inc
pop
arpl
sbb
push
imul
pmulhw
cmp
pop
adc
xchg
sbb
mov
lahf
mov
mov
into
pop
imul
mov
mov
jb
ret
imul
sub
js
mov
jae
scas
leave
xchg
mov
xchg
mov
cwtl
jp
mov
xlat
test
outsb
leave
cmpsl
xor
mov
adc
or
dec
mov
dec
mov
arpl
mov
mov
js
jne
dec
inc
jg
inc
inc
leave
cs
adc
aaa
inc
push
dec
call
in
ja
andl
jno
ret
fs
jle
jg
sti
sub
je
mov
sbbb
xchg
inc
fwait
push
push
xchg
insl
inc
in
xchg
aad
into
mov
jb
ja
xlat
adc
movsb
pop
and
iret
popf
sub
fldl
outsl
sahf
call
mov
or
mov
das
jecxz
jns
xor
xchg
ret
fwait
mov
std
mov
aaa
cmc
jecxz
adcb
mov
sub
or
imul
fldl
cltd
mov
out
mov
fmull
repnz
push
jl
jge
inc
adc
mov
mov
sbb
lcall
jg
xlat
int
fdivs
pop
out
xchg
fwait
adc
inc
or
pop
sbbb
push
push
inc
ds
inc
xchg
lcall
mov
fwait
arpl
mov
mov
xchg
pusha
mov
aam
xor
jg
jmp
shl
std
inc
test
push
mov
adc
movsl
sbb
or
inc
push
xchg
mov
imul
cmp
lock
cmp
xchg
movsb
dec
or
and
pop
mov
popa
fwait
mov
jne
xchg
pop
gs
stc
jns
mov
insb
outsl
xchg
cltd
popf
xchg
and
xchg
sub
xchg
xchg
lods
aam
xchg
adc
fisttpl
jno
leave
lea
lods
jle
jp
inc
mov
aam
fwait
sbb
popa
test
add
and
pop
aam
outsl
leave
mov
sub
mov
jg
scas
mov
cli
je
insl
mov
sti
cmpb
lcall
jae
jg
adc
fxch
xor
jg
mov
fdivrs
jge
jns
mov
out
jl
mov
jns
jne
popa
xlat
lret
inc
les
cltd
int3
xlat
push
xchg
inc
lea
inc
iret
int
fadds
mov
out
aaa
test
mov
lret
jo
xorb
xchg
push
xchg
popa
mov
sahf
outsb
lahf
adc
fcoms
movsl
ret
into
xchg
dec
jbe
sub
shll
incb
lcall
mov
xchg
int
mov
cmp
imul
arpl
ror
arpl
andl
mov
cltd
arpl
jp
sahf
mov
leave
call
jmp
cltd
mov
inc
out
insl
aam
mov
or
and
lock
mov
js
mov
xor
addl
lahf
daa
sub
cmp
adc
fs
mov
and
xor
dec
js
pop
popf
orl
stc
jg
icebp
cmp
mov
imul
xor
xchg
and
inc
xchg
dec
iret
aaa
aas
mov
adcb
lahf
imul
add
mov
lret
lcall
ret
jg
pushf
jb
jecxz
pushf
dec
iret
jae
jb
fisubl
mov
jne
arpl
repnz
jae
dec
inc
ja
xchg
xorb
xor
cltd
push
cld
mov
fcomps
or
add
aas
sbb
jns
lock
dec
mov
sbb
jns
lret
daa
xor
mov
or
pop
std
mov
jbe
stc
sub
cmpsl
daa
xchg
pushf
lds
mov
cltd
inc
out
xlat
cmpb
mul
int
xchg
test
xchg
and
push
sbb
cmp
mov
mov
sub
push
fdivrs
subb
mov
xchg
mov
mov
jl
out
jg
pop
insb
xchg
fmuls
ret
push
cld
leave
sub
add
int3
xchg
xchg
jbe
add
outsb
jns
inc
filds
or
xchg
insl
jle
jnp
jnp
arpl
dec
mov
xchg
dec
sub
pop
and
inc
xchg
negl
mov
cmp
leave
cwtl
dec
dec
pop
mov
lahf
adcb
ds
xchg
rolb
jg
mov
mov
mov
xchg
cmpb
inc
jns
mov
mov
int3
jecxz
sub
mov
imul
xlat
sbb
in
jns
inc
xor
ja
mov
or
or
das
lea
xor
and
xor
in
inc
push
push
mov
cwtl
pushf
jno
xchg
fimuls
pop
jecxz
imul
fisttpl
jae
outsl
jl
mov
sahf
fmuls
mov
jns
pop
outsb
jg
icebp
fildl
fdivrs
cmp
outsb
cmp
pop
add
xor
cs
leave
pop
xchg
ds
jg
lret
push
jbe
out
mov
jp
pop
jo
int3
pop
iret
lret
or
jno
mov
outsb
or
mov
mov
insl
jmp
das
lret
daa
outsl
inc
js
sbb
cmpsl
sti
xlat
push
aaa
in
or
inc
jnp
inc
imul
sahf
push
xor
jmp
test
pushf
xchg
cltd
push
jl
jg
mov
cltd
xchg
mov
mov
notl
xchg
and
jne
push
adc
leave
rorb
jle
aad
nop
or
lfs
aam
mov
cmp
rorb
cmp
outsl
mov
pop
lahf
cmp
cltd
repnz
fcmovne
rolb
inc
dec
int
or
rolb
push
das
insl
je
inc
cli
call
sti
les
test
sbb
jp
jae
or
stos
fucom
pop
inc
pushl
jle
cmp
lret
push
mov
xorb
jg
jbe
mov
inc
aas
iret
mov
in
jle
xchg
imul
jne
cmp
into
jns
xchg
jbe
mov
or
insb
aad
rcrb
iret
jae
sub
mov
push
lods
jmp
in
pop
jge
jno
cmpsb
jbe
test
int
jmp
ss
pop
lret
or
test
mov
jmp
iret
jb
imul
cmp
mull
xchg
fldt
mov
lahf
adc
jno
sti
xor
xchg
jp
add
cltd
sahf
cmp
dec
xchg
lcall
pusha
mov
cmp
pop
cmp
mov
jnp
popf
dec
hlt
aad
jne
xorb
jno
jge
xlat
stc
pop
jno
jo
xor
sti
outsb
int3
adc
push
pop
leave
push
es
inc
outsl
js
popf
leave
imul
jnp
inc
push
aam
and
or
inc
fdivs
mov
rcrb
or
mov
rclb
mov
rclb
addb
ds
lea
sub
lahf
je
mov
push
mov
cmp
lret
int3
bound
and
je
cmp
sbbb
mov
outsb
inc
or
pushf
pop
lahf
mov
cld
push
inc
add
aaa
out
jge
mov
mov
lret
leave
nop
je
sahf
xchg
loopne
mov
jmp
decb
rol
mov
mov
mov
sub
outsl
pop
jne
andb
outsl
aad
xlat
or
pop
lret
imul
fstpl
call
cltd
xchg
iret
int3
cmpsl
adc
jns
jg
xor
mov
movsl
sbb
jl
mov
call
cltd
jl
and
jb
add
xlat
jl
mov
mov
push
js
lret
sahf
jg
int3
lods
into
xchg
loop
std
mov
lods
mov
inc
addr16
jae
cmc
push
xor
inc
mov
addr16
mov
int3
cmp
clc
pop
ja
mov
push
stos
mov
std
arpl
jl
leave
mov
jg
fcoms
stos
imul
inc
mov
xchg
add
jle
inc
nop
popf
fcoms
and
les
enter
cmp
lcall
adc
loope
arpl
jbe
aam
mov
outsl
outsb
xchg
jb
sbbb
push
xchg
push
mov
das
fnsave
add
jl
xlat
xchg
insb
mov
test
stc
outsb
mov
sbb
mov
lcall
mov
pop
jns
jge
popf
test
in
jl
xchg
jbe
jne
nop
mov
xchg
mov
xchg
sbb
jae
fidivrl
jne
mov
test
or
cwtl
push
add
bound
mov
into
int
std
xchg
mov
or
mov
xchg
clc
xchg
mov
jle
ja
pop
iret
adc
fbstp
cmc
jo
jg
xchg
mov
inc
mov
mov
lret
jp
addr16
insl
cwtl
mov
xchg
lcall
mov
pop
pop
jp
imul
jae
inc
aaa
pop
mov
lcall
outsl
mov
fidivl
lret
xchg
dec
hlt
lret
jnp
aas
adc
insl
xchg
aaa
in
jne
outsl
pop
push
adc
sbb
lods
insl
imul
xchg
int
jbe
inc
xor
cmp
hlt
pop
or
nop
inc
jge
js
pop
inc
mov
lcall
jbe
mov
mov
cmp
aam
cltd
pushf
sbb
cli
js
mov
adc
jle
inc
jl
mov
xchg
or
pop
fildll
jecxz
xor
mov
mov
mov
insl
int3
subb
mov
or
lods
inc
xlat
int3
lods
fstpt
popf
pop
or
cli
imul
insl
push
rolb
sti
lcall
lret
aas
inc
mov
fiadds
stc
nop
sub
mov
nop
jbe
ja
jno
and
mov
inc
jb
pop
loopne
icebp
das
imul
mov
mov
je
subb
out
andl
jle
ret
pusha
faddp
mov
aam
int
mov
fistpll
aaa
mov
ja
mov
movsl
mov
xchg
aam
push
into
pop
add
or
push
jo
push
icebp
sbb
fdiv
mov
jle
lret
xchg
sbb
sub
or
push
aam
xchg
push
mov
adc
xlat
aaa
aam
fwait
ljmp
rorb
dec
ja
das
sahf
test
xchg
mov
cmp
fwait
mov
gs
pop
lret
xchg
imul
imul
mov
mov
lret
dec
sbb
adc
je
out
mov
fwait
lahf
es
loope
out
fisttps
mov
adc
sti
ja
xor
add
shlb
outsb
mov
mov
pop
lret
jnp
xchg
push
stc
shlb
pop
add
out
jno
jg
test
outsl
mov
jne
in
xchg
gs
and
xlat
mov
int3
cmp
test
cmpb
cs
pop
xchg
aam
aaa
push
insb
cmp
mov
mov
cmpsl
jae
andb
leave
mov
xchg
insb
mov
fcoms
mov
adcb
xchg
or
cltd
addr16
insb
int
pop
fsts
out
js
rorl
cli
cmpsb
mov
dec
xchg
lret
mov
popf
cmp
mov
lds
gs
fistps
jae
xchg
jne
lret
jp
xchg
test
push
arpl
and
sahf
shlb
mov
mov
cmp
cli
ljmp
popf
fstl
lret
jnp
jle
cmp
mov
mov
cwtl
mov
aaa
rorb
xchg
pushf
sub
icebp
jbe
jp
outsb
ljmp
rorl
cmpsl
lea
push
cmpsl
mov
push
sbb
jno
outsl
jb
cli
xorl
jecxz
pop
es
je
cwtl
pushf
clc
pop
fmuls
sarb
outsl
xlat
push
aad
fmuls
mov
adc
mov
jecxz
rcl
loop
mov
sub
mov
iret
movl
pop
pop
test
je
inc
ret
pop
xchg
insl
mov
mov
stc
mov
pop
insl
mov
popl
addr16
jg
xchg
mov
mov
xchg
xor
jle
inc
leave
fstpl
out
fistl
lret
mov
mov
orb
in
test
fwait
sahf
test
popf
jbe
leave
iret
xchg
arpl
push
xchg
loop
mov
mov
push
cmp
or
add
pop
jb,pt
inc
jo
xchg
je
dec
push
jae
add
xchg
subb
int
pop
fwait
jnp
js
ja
shrl
pushf
mov
push
xchg
cmp
push
mov
movsl
lods
jl
jno
cli
push
mov
jo
imul
loope
mov
push
cltd
cmpb
fwait
mov
outsl
push
lods
lahf
insb
mov
sbb
jecxz
jo
push
fcomps
sbb
cltd
mov
rorl
jo
mov
sti
and
inc
xchg
cli
ds
cmpsl
scas
jae
mov
add
mov
sub
imul
cwtl
xchg
insb
jb
roll
sbb
mov
cmpsb
lahf
jle
push
jl
js
dec
mov
mov
xor
jge
outsl
rclb
xchg
nop
sbb
sti
add
imul
jge
push
popf
fnstcw
rcrl
lret
cmp
imul
outsb
lds
cmc
popf
mov
sub
call
add
mov
xchg
add
cwtl
mov
into
inc
cld
push
aaa
sahf
jl
pushf
dec
cmp
imul
ret
paddd
mov
mov
xor
lret
push
lcall
js
arpl
lea
sar
mov
cmpb
movsl
lcall
loope
out
movsl
jae
dec
jecxz
cwtl
adcb
push
test
push
inc
int
imul
insb
add
ror
daa
into
xchg
shll
jns
fsubs
xor
mov
push
jp
mov
cltd
mov
xchg
out
jg
jg
pushl
cmp
and
cmpsl
popa
popf
push
pusha
xlat
xor
xchg
mov
in
daa
mov
imul
adc
fnstsw
mov
inc
dec
mov
sub
pop
jg
test
jo
push
mov
pushf
jmp
stos
cli
cmpl
fidivl
addb
sbb
inc
sbb
xorb
mov
and
lea
cmpsl
or
bswap
xchg
js
mov
jns
jae
insl
inc
popl
outsb
popf
adc
mov
pusha
xchg
out
cmp
xchg
fdivrs
shlb
xor
rclb
cs
roll
sub
je
xchg
rclb
jg
rcrl
insl
insb
in
arpl
nop
ret
sbb
mov
mov
jle
mov
jnp
xchg
xchg
jg
sbb
adc
pop
mov
adc
adc
lds
mov
fidivl
pop
shlb
jno
inc
in
js
jl
andl
add
inc
shlb
cwtl
insb
popf
test
jae
xor
inc
push
loop
in
inc
pop
xchg
subb
jae
nop
jp
mov
outsb
das
sbb
mov
fcom
loop
mov
jnp
bndldx
jmp
mov
lret
aad
sbb
cmpb
xchg
jge
das
fiadds
dec
ficomps
outsl
push
nop
das
xlat
aaa
or
mov
aam
xor
popa
fwait
cmpsb
aad
inc
shl
shr
xchg
push
cwtl
inc
or
arpl
mov
jge
fstps
mov
lcall
nop
dec
pop
sbb
ja
je
sti
insb
xlat
test
jle
dec
xlat
xchg
jbe
xchg
add
xor
xchg
mov
cli
imull
pop
mov
fldt
loop
fstps
lret
int3
daa
pop
into
popa
pop
lods
iret
xchg
xchg
jecxz
sbb
and
int3
adcb
repnz
rorb
dec
jg
cltd
mov
jl
xor
mov
das
add
lock
ja
stc
cmp
cmpsl
inc
lret
inc
dec
pcmpgtd
into
imul
xchg
xlat
jbe
cltd
xor
push
lea
aam
testl
inc
call
push
mov
xor
fwait
jne
inc
inc
into
ret
cmp
mov
lods
imul
ja
mov
cmp
jne
int3
int
jmp
jnp
nop
mov
mov
je
fimuls
imul
test
je
jo
pop
bound
and
jb
jl
or
hlt
popf
or
sbb
rorb
sti
mov
test
ljmp
or
dec
outsl
xlat
hlt
pushf
jns
cmp
in
mov
test
lret
insl
lret
out
mov
mov
and
jne
inc
lea
cmp
cltd
rcrb
out
xor
lcall
int3
xor
ja
mov
aam
je
mov
jg
lahf
loope
xchg
jl
xchg
jne
jge
jg
mov
xchg
xchg
mov
jns
nop
mov
mov
cmp
ja
lods
pusha
mov
lods
fcoms
cltd
insb
imul
inc
mov
cwtl
adc
jo
leave
jns
imul
movb
pop
xor
pushf
jp
xchg
mov
mov
mov
push
jbe
inc
filds
mov
xor
cwtl
mov
pop
jo
lods
enter
or
lret
dec
jns
imul
xchg
lahf
lcall
cmc
inc
int3
dec
cltd
mov
inc
mov
fadds
sahf
iret
imul
mov
ds
jbe
imul
int
xchg
fiaddl
iret
xchg
jnp
mov
cmpsb
jp
fwait
cmp
je
call
and
cmpsl
inc
nop
xchg
pop
dec
lea
xchg
mov
mov
cld
in
cmp
lret
xchg
mov
xor
fcmovb
into
lahf
jge
daa
pop
lret
mov
lret
xchg
nop
xchg
mov
aam
jno
xchg
ret
adc
and
inc
xchg
ja
cmp
iret
pop
xchg
adc
sub
imul
pop
test
repz
lcall
inc
into
dec
push
sbb
sub
outsb
cltd
mov
int
imul
cmc
arpl
or
je
add
shlb
push
lods
outsb
jg
mov
je
repz
xchg
xchg
mov
cltd
imul
and
stc
dec
ds
push
arpl
imul
push
pop
jno
mov
mov
ss
imul
inc
push
fists
fadds
ror
frstor
test
inc
push
int3
mov
and
xchg
cmpb
pop
xchg
leave
mov
scas
aas
jnp
out
or
cld
cwtl
setb
inc
xchg
das
sbb
cmp
fcomps
mov
add
mov
pop
repnz
adc
xchg
mov
jo
jbe
add
iret
cmp
nop
sbb
lcall
jno
add
mov
inc
xchg
inc
xchg
push
insl
inc
mov
cmc
sub
mov
outsl
imul
pushf
push
mov
adc
mov
mov
cmp
mov
add
mov
cltd
push
pop
jecxz
outsb
add
lret
iret
lock
mov
xchg
mov
lret
mov
cmp
or
imul
and
mov
jmp
xchg
outsl
cwtl
js
xchg
insb
insb
jg
lret
mov
and
lahf
push
jno
jne
xor
jae
jno
repz
insb
lods
nop
xlat
outsb
ret
cmpsb
test
jb
aam
lcall
les
fwait
leave
cmp
insl
cmpsl
cwtl
add
xchg
jno
cli
xorl
add
scas
lahf
xchg
imul
cmp
ds
int3
stos
xor
xchg
insb
xchg
xlat
lahf
lret
jne
mov
ret
sahf
mov
mov
mov
and
outsb
subb
stos
sbb
dec
mov
xchg
rorl
cmpsl
iret
push
xchg
push
into
jno
lods
outsl
lea
mov
xchg
int3
xchg
jp
lret
jno
rclb
sahf
cmp
push
rcr
cmp
insl
lret
sub
addr16
sbb
inc
shrl
out
nop
xchg
jb
je
or
jns
mov
leave
std
popf
xchg
fwait
int
outsl
lds
jbe
jae
mov
mov
mov
pop
mov
jnp
je
xchg
jl
jo
mov
xorb
jg
dec
movsl
nop
cwtl
lea
aad
stc
inc
lret
daa
sbb
xchg
decl
idivl
into
xchg
add
mov
xchg
out
mov
add
outsb
xor
xor
adc
jl
xor
loopne
call
mov
and
sti
mov
cmp
je
cmp
js
inc
shlb
push
cmp
leave
sbb
mov
sbb
insl
outsl
mov
mov
aaa
fcoms
sti
mov
mov
rcrl
mov
iret
sub
test
inc
cmp
lahf
xchg
adc
cmp
mov
add
mov
inc
inc
call
xchg
mov
mov
mov
xor
cwtl
push
rcr
xchg
add
xlat
jno
mov
lret
mov
xor
mov
imul
sahf
xlat
enter
mov
sbb
jno
lods
jl
popf
adc
fisttps
insl
mov
lds
imul
pop
mov
outsl
fidivrl
and
push
fwait
push
clc
pop
adc
cltd
mov
xchg
sub
lret
mov
sahf
jge
lea
or
jecxz
and
jp
jl
out
and
aaa
mov
jmp
inc
mov
jge
sbb
inc
pop
add
pushf
out
mov
inc
cwtl
mov
xlat
sbb
mov
jg
dec
fimull
movsl
int
pop
nop
jp
jg
cli
insb
fwait
js
mov
mov
cwtl
shrb
mov
into
arpl
mov
xchg
push
mov
aam
insl
lret
mov
mov
cmpl
cmc
push
mov
inc
add
jb
pop
int3
outsl
xorb
mov
mov
add
frstor
cwtl
sbb
stos
leave
dec
in
jnp
mov
jg
mov
jae
scas
cwtl
lret
js
aaa
lret
lods
mov
mov
data16
mov
loopne
jbe
repnz
addr16
jl
loope
pop
aas
add
xlat
inc
add
in
scas
into
rorl
int3
xor
lods
lea
xchg
mov
filds
mov
jno
ja
stos
outsl
xchg
addr16
int3
test
pop
inc
jl
xorb
inc
sub
mov
fwait
inc
push
xchg
mov
fcomps
xor
pushf
jle
pop
mov
ljmp
sub
lret
inc
xchg
cwtl
jae
mov
xchg
xchg
sbb
add
insb
cmp
jne
jns
arpl
stos
xchg
ljmp
sahf
or
pop
xchg
shll
pushf
mov
jno
xchg
cli
adc
inc
cmpsl
sbb
js
test
lods
mov
lahf
cmp
into
adc
sarl
decl
xchg
adc
repz
mov
xlat
jecxz
mov
jne
jl
popa
jl
das
add
mov
movsl
mov
mov
mov
jbe
or
jge
insl
daa
fidivl
jb
sbb
and
nop
or
cli
sub
mov
sbb
xchg
into
aam
std
inc
sahf
jae
pushf
jne
popf
imul
xor
test
lret
loope
cli
xchg
imul
push
xor
leave
aaa
ljmp
test
mov
xchg
fists
mov
xchg
iret
xchg
fmulp
xchg
cld
les
sbb
xor
pop
mov
push
mov
fmuls
sbb
jge
push
jnp
stc
aam
js
fsts
mov
cli
movsl
pop
xchg
popf
lret
jl
jae
fists
add
push
cmpsl
das
jle
mov
jg
xchg
inc
rep
mov
push
jle
jecxz
adc
cmp
mov
xchg
daa
outsl
imul
mov
inc
iret
push
mov
insl
xlat
into
cld
mov
pop
scas
mov
jge
insb
push
outsb
pop
pop
fwait
jl
xchg
xor
xchg
jge
and
mov
cmpsl
adc
xchg
xchg
outsl
sub
cmpsl
mov
mov
lret
mov
sbb
jp
jae
and
jg
adc
lcall
ficomps
jnp
repnz
les
adc
jg
lods
jg
outsl
scas
sahf
jp
fildll
in
je
out
test
or
dec
xor
outsb
pop
cmpl
jb
ret
es
cmpb
mov
lods
lret
xchg
nop
pop
jne
test
inc
lahf
aad
int
sar
orb
in
out
add
das
aas
jne
ror
lods
mov
lods
test
mov
lds
das
mov
sbbb
mov
outsb
mov
xor
xlat
or
push
lea
inc
nop
mov
fcom
pushf
cld
inc
xor
sbb
push
inc
xchg
or
mov
jae
jbe
mov
jnp
cltd
lcall
or
in
outsl
pushf
or
sbb
adc
mov
outsb
stc
les
int3
orb
and
nop
pusha
addl
jg
pop
mov
lea
jnp
xor
mov
jb
jno
mov
imul
push
sbb
mov
jbe
lea
sbb
mov
jne
xchg
fistl
xorb
push
mov
test
jb
out
icebp
push
fisttpl
jg
xchg
xchg
inc
mov
int
xlat
adc
sbb
xchg
add
pop
xchg
movsl
jmp
outsl
xlat
mov
insb
mov
xor
mov
xchg
jne
popl
mov
int
movsb
test
cmp
xchg
insl
and
sub
push
cltd
or
jbe
imul
mov
mov
outsl
mov
mov
xlat
or
int3
mov
test
xlat
fstpt
mov
xchg
xor
mov
push
int3
in
fistpll
vmovlps
arpl
push
scas
sbb
out
adcl
insl
pushf
jno
push
js
lret
inc
jle
cmp
fwait
pop
inc
cwtl
outsl
lret
imul
cltd
leave
fcmovb
rolb
xlat
add
lea
lcall
jnp
mov
pushf
jmp
aas
mov
dec
lods
xchg
mov
je
into
ja
inc
imul
adcb
jb
fnsave
int3
sub
jb
adc
jne
pop
mov
mov
jne
shll
lret
outsl
adc
imul
aam
subb
jb
jmp
jle
jne
iret
stc
out
or
js
cmp
outsl
lcall
push
adcb
movsl
outsl
lds
xchg
popf
mov
xchg
cltd
lcall
dec
sbb
xchg
pushf
cmp
leave
dec
dec
push
cmp
test
popf
sbb
pop
pop
lods
cmp
rcrl
adcb
dec
mov
jae
test
test
outsl
jbe
inc
mov
mov
inc
sub
iret
mov
mov
insb
scas
hlt
add
xchg
mov
mov
mov
fwait
cmp
lods
mov
shlb
outsb
adc
mov
mov
fistpl
insl
test
or
or
aaa
mov
inc
jno
jb
stos
ja
cmp
mov
push
insb
cmp
and
data16
jle
push
cmp
xlat
adc
test
xchg
out
jno
testl
mov
push
jb
inc
arpl
xchg
xchg
inc
pop
mov
sbb
mov
fcomps
jecxz
jp
lret
cwtl
inc
shl
push
and
add
xchg
shlw
mov
xchg
xor
cmp
xchg
mov
push
mov
sahf
nop
add
cld
popf
popf
imulb
xor
pop
cmp
jge
cli
mov
loop
mov
leave
xchg
xchg
xor
mov
fcoms
outsb
xchg
lret
cmpsl
imul
loope
outsl
cmpsl
in
adc
jge
mov
stc
clc
xlat
or
push
push
arpl
mov
mov
pushf
and
mov
stos
cmp
int3
mov
cmpsl
dec
jns
mov
fucomip
rorb
addl
mov
inc
popf
push
fcmovu
fcoms
cltd
jbe
jae
or
and
cmp
mov
inc
movsb
lea
rcrb
mov
stos
dec
cwtl
jg
shr
lcall
jb
add
pop
int
jle
fistps
jae
outsl
hlt
movsl
mov
int3
popf
jmp
in
jecxz
mov
mov
nop
das
push
rorl
iret
mov
jg
imul
push
sbb
into
jb
xchg
jge
mov
jnp
outsl
or
jb
mov
pop
xchg
je
lret
and
imul
inc
fwait
jl
insl
add
outsb
xchg
lock
mov
jbe
int
mov
xchg
xchg
inc
mov
xchg
jp
lret
sub
pop
add
jne
mov
fistpl
mov
das
jno
lcall
jp
xchg
dec
add
push
inc
mov
psrad
sti
scas
mov
cld
jp
mov
aad
mov
add
ret
cmpsb
fistl
fwait
push
xchg
outsl
or
adc
sbb
das
mov
aaa
xor
fs
fistl
lret
aaa
test
push
mov
sbbl
pop
loope
lret
ljmp
mov
repnz
loop
imulb
xchg
js
xlat
ret
cmpb
xlat
into
rclb
std
adc
add
or
aas
or
pop
xchg
jb
xor
and
dec
sti
jge
int
ja
aad
mov
insb
mov
lret
inc
push
sbbl
arpl
lods
lahf
into
xchg
test
push
je
jp
xchg
ret
jl
fwait
mov
imul
and
mov
pop
lock
gs
cltd
jnp
mov
js
mov
setg
out
jb
shr
jnp
imul
jg
nop
cltd
cwtl
lret
in
jae
inc
mov
jp,pt
arpl
mov
int
lret
inc
pushf
push
sbbb
outsl
insb
jo
lahf
ret
test
mov
jno
nop
das
lock
neg
xchg
outsb
mov
sahf
push
ds
mov
cmp
sti
xchg
mov
outsl
cmp
jbe
and
cwtl
cmp
das
mov
xchg
in
mov
sti
mov
xchg
outsb
mov
cmp
nop
leave
xchg
fsubrs
testb
scas
fmuls
xor
stos
jns
fistl
jg
cli
aam
mov
jnp
adc
push
jns
jg
lods
inc
mov
mov
mov
mov
lock
imul
cmp
nop
call
jg
mov
jp
imul
js
sarb
lret
inc
lret
xchg
fwait
xchg
xchg
xchg
sub
outsb
repz
gs
inc
fs
jl
lods
cltd
xchg
jg
jmp
lahf
scas
lods
test
jb
mov
pop
jne
jnp
in
jle
addl
pop
je
addr16
jns
jl
leave
sarb
frstor
jp
jne
aaa
xchg
jb
xchg
ret
sbb
mov
lret
push
sbb
insb
jno
push
aam
jge
inc
pop
push
pop
arpl
subb
sahf
jne
les
inc
cltd
das
xchg
mov
fwait
pop
adc
jns
jno
loopne
xchg
xor
bound
arpl
lret
jbe
pop
jno
sti
loopne
test
andb
sahf
jecxz
lcall
and
mov
push
subb
fdivrs
sub
xchg
sbb
sahf
fwait
lcall
or
pop
cmp
jae
fwait
pop
xchg
sbb
xchg
sub
jb
mov
lret
and
pop
jne
lret
ds
leave
push
fs
xor
inc
dec
mov
outsl
rcrb
xchg
push
or
into
xchg
arpl
lahf
push
sahf
cwtl
jns
inc
enter
aaa
mov
inc
cmpsl
andb
pushf
imul
inc
or
inc
stos
lret
push
sarl
xchg
jg
jl
shll
mov
ja
dec
mov
outsl
jno
mov
jo
xchg
bound
jbe
dec
adc
jno
loope
xchg
cltd
xchg
mov
int
jecxz
mov
lods
js
test
lcall
fwait
and
ja
lret
mov
mov
movsl
cmc
addr16
sahf
push
sbb
cwtl
xchg
xchg
xchg
dec
inc
jbe
leave
je
fsubrs
mov
cwtl
or
jns
mov
xchg
cmpsl
incl
iret
xchg
fdivs
push
mov
mov
fcoml
lods
xor
jno
enter
mov
mov
lea
lret
mov
adcb
arpl
lcall
dec
insb
pop
cld
xlat
imul
shr
mov
sub
xchg
lods
mov
jle
mov
xchg
cltd
mov
bound
insb
lods
jnp
stos
loop
imul
imul
outsb
mov
imul
subb
stc
pushf
mov
popf
jne
in
repz
mov
jl
lea
or
pop
mov
xchg
adc
jnp
pop
lods
mov
loop
sbb
arpl
mov
jno
into
roll
jae
fsubr
adc
mov
jo
rolb
fistps
xchg
pusha
outsb
xlat
pushf
aam
xchg
mov
jl
rcr
outsl
int3
jb
mov
loopne
ja
lea
cmp
ljmp
mov
jno
movsb
inc
jnp
xor
mov
iret
pusha
lret
mov
mov
loope
xor
jb
mov
leave
mov
inc
pop
jmp
or
mov
int3
cwtl
mov
and
hlt
xchg
push
int3
adcl
sub
test
sub
push
sarl
push
xchg
lea
cmp
mov
and
jecxz
adc
rclb
jecxz
sub
inc
cld
jae
fistl
jns
inc
lods
cmp
mov
mov
arpl
inc
vpmacsdd
in
jne
test
lds
arpl
jge
imul
dec
into
cmp
xchg
mov
lea
mov
mov
mov
jbe
addr16
fstpl
sahf
rclb
mov
sub
dec
pop
in
nop
cwtl
outsl
imul
cld
lret
pop
pop
xor
inc
mov
aam
jno
xchg
pop
std
mov
jae
jl
jne
fwait
sbb
lret
mov
int3
aam
imul
cltd
xchg
inc
lahf
outsl
insb
popa
fisttpl
lahf
sub
mov
andb
xchg
ss
insl
test
inc
cmpsb
insb
popf
jae
outsl
dec
jle
cmp
sahf
imul
xchg
daa
arpl
jae
int3
pop
lcall
add
mov
xchg
lcall
push
and
aaa
ds
mov
mov
in
mov
xchg
xlat
mov
neg
or
push
arpl
arpl
int
jb
int3
lret
inc
fbstp
pusha
ret
cmp
jbe
push
subb
aas
sub
mov
gs
lcall
out
add
mov
pusha
jle
push
cmpsb
mov
sbb
fcomip
mov
xchg
ds
into
cli
cmp
imul
mov
or
mov
xchg
rcl
mov
int3
jns
daa
aaa
lea
push
in
popa
push
imul
dec
mov
xorb
inc
in
jg
sub
xchg
int
js
xchg
adc
mov
cmpl
je
xor
xor
mov
jno
adc
mov
cltd
mov
xchg
les
jge
sti
xchg
pop
jo
lret
loopne
out
lahf
adc
aam
sbb
ja
shrd
call
lret
aaa
adc
insb
push
test
int3
sti
ja,pt
jb
inc
lcall
insb
sbb
pop
int
into
outsl
insl
test
sbbb
arpl
repz
ja
jb
and
jmp
outsb
pop
pusha
pop
mov
daa
cli
jno
mov
lret
pop
insl
fisttpll
je
in
mov
int
nop
repnz
jns
pop
lcall
jl
xor
xchg
xchg
lret
xchg
imul
or
cmp
ja
in
jg
imul
jg
add
movsl
or
popf
je
imul
mov
mov
xchg
pop
je
jae
sub
jne
outsb
cli
and
jl
adc
cmpl
pop
add
lahf
int
je
sti
test
jns
and
popf
mov
stc
mov
ja
inc
xchg
xlat
scas
lea
sahf
test
add
cmp
cltd
or
lock
mov
je
outsl
mov
adcb
adcb
xchg
loopne
or
inc
xchg
cltd
lcall
jae
stos
adc
nop
lods
jge
push
pop
xorb
mov
iret
xchg
xchg
lret
inc
xchg
cmp
push
inc
movsb
pop
sub
lods
addr16
aam
das
and
outsb
lret
mov
jl
mov
lret
out
xchg
pushf
cwtl
push
imul
lcall
aam
cmp
xchg
xchg
shl
inc
dec
mov
push
mov
lahf
fldcw
adc
push
jo
lea
stc
and
aam
imul
cmp
cmp
mov
or
nop
push
mov
xchg
mov
pop
mov
in
sbb
mov
mov
ja
push
cmpsb
icebp
mov
fwait
push
adc
mov
lods
jae
gs
mov
aam
pop
pushf
imul
xchg
sbb
mov
pop
data16
jnp
lahf
je
xchg
jo
pop
pop
mov
dec
xchg
int3
or
das
sarw
mov
pop
je
push
call
faddl
pop
add
jl
xchg
sar
xor
and
decb
sbb
sub
mov
fcomps
sbb
jp
dec
xchg
mov
and
mov
inc
fistps
push
xchg
or
cmpb
mov
js
jl
iret
push
mov
je
adc
xchg
cli
mov
cmpsl
cmp
jle
imul
or
mov
xchg
jecxz
jo
mov
lret
leave
push
in
push
loopne
jae
rcrb
pop
das
jbe
inc
pop
ret
xor
mov
xchg
jne
mov
xchg
cltd
xlat
jp
lret
in
je
pop
imul
je
mov
mov
int
jmp
int3
mov
mov
xlat
lea
push
imul
js
cmp
fcmovne
mov
ja
into
xchg
mov
popf
jb
mov
jne
jle
xchg
or
jnp
jg
jg
sarl
addb
jg
jmp
push
test
jbe
lahf
ret
aas
cmpsl
jno
sub
xchg
jge
jnp
lea
jl
mov
pop
pop
dec
into
aaa
mov
movsl
hlt
call
xchg
pop
shrl
je
cmpsb
aas
outsl
inc
ja
mov
or
fisttpll
js
mov
lcall
aaa
or
mov
mov
subb
xchg
sahf
js
inc
nop
ds
int3
les
pop
insl
cmp
je
mov
jnp
push
cmp
popl
insb
jge
cmpsl
movsb
into
mov
cltd
xorb
jae
cs
lret
cmpsb
mov
sbbb
jle
scas
jo
mov
aaa
push
aaa
cmp
adcb
ds
mov
jne
nop
or
mov
imul
inc
lret
jno
cmc
sbb
xchg
cld
dec
dec
insb
cmpsl
stos
jge
inc
lahf
lods
inc
imul
cmpsl
xchg
leave
inc
ja
pop
fs
jno
andb
mov
jns
mov
js
sbb
inc
lock
cmpsb
cwtl
xchg
jp
es
pop
xchg
push
seta
imul
dec
mov
cmp
cltd
jns
jle
dec
into
jge
imul
pushf
sahf
aam
ror
xchg
push
fildll
jno
pop
rorl
mov
xchg
nop
adc
pushf
push
sahf
xchg
inc
popf
imul
loopne
xchg
mov
lret
jno
push
pop
repz
mov
jns
jo
pushf
xchg
repz
mov
test
pop
jle
xchg
iret
cwtl
int3
dec
arpl
xchg
sbb
adc
jno
inc
rcrb
cmp
cmpsl
je
mov
jmp
lret
sti
cmp
loop
jg
fisubrl
jnp
xchg
jp
mov
mov
mov
fadds
fwait
pop
xchg
int
mov
mov
das
xchg
or
lds
cmp
mov
mov
jae
cmp
imulb
lds
jns
pushf
das
std
pusha
jns
pop
fildl
sub
pusha
xor
mov
addr16
jne
int
fistps
jns
adc
xchg
aaa
jmp
or
mov
call
xchg
gs
inc
add
jmp
loop
leave
imul
lret
popf
mov
mov
mov
stc
int
imul
pop
cltd
fsubs
mov
into
jns
push
cmp
xchg
addb
xchg
outsb
gs
jp
nop
enter
inc
sub
xchg
jb
jnp
cmpb
cmpsl
and
jno
sbb
mov
imul
xchg
mov
mov
loope
cmp
lcall
mov
fnsave
lods
inc
push
cmp
jno
jl
push
jbe
rorb
pop
or
out
lahf
fisttpll
mov
mov
mov
jp
pushf
leave
xlat
movl
jno
sbb
pop
jge
jle
push
arpl
js
jge
aad
mov
mov
jo
loope
pop
int
aam
xor
ja
jbe
lcall
sub
loope
jae
jmp
jo
push
mov
push
sahf
jae
mov
xchg
xchg
dec
mov
repz
pushf
pop
call
rorb
mov
int
cwtl
xor
inc
adc
jb
test
lcall
ret
jl
jg
mov
leave
stos
cltd
dec
sahf
and
sub
movsb
int
or
adc
mov
jle
mov
addb
imul
mov
lret
jb
lcall
mov
inc
jg
xor
xchg
mov
test
mov
xor
sub
test
rclb
jge
mov
inc
testl
into
xlat
mov
cmp
insl
jge
or
je
inc
inc
outsl
imul
mov
inc
icebp
xchg
ds
adc
pop
pop
mov
xchg
inc
and
in
dec
ljmp
or
rcr
fucomi
inc
les
mov
gs
nop
lea
xchg
dec
mov
call
int3
lods
adc
sbb
outsl
xchg
mov
mov
das
inc
call
cmp
insb
lea
je
lret
gs
cli
cmp
cmp
imul
xchg
fcoms
jbe
jo
xchg
arpl
into
jg
adc
rorb
jb
outsb
pop
repnz
ret
cltd
xchg
mov
mov
and
addb
cmp
and
cmp
mov
adc
xlat
test
fcoml
xchg
xchg
inc
movsl
mov
jae
sbb
mov
aam
xchg
je
sbb
jae
icebp
pop
lods
cmp
arpl
xchg
in
mov
xchg
jo
mov
popf
sbb
cmp
lret
std
or
into
mov
add
lret
cwtl
and
xor
push
xchg
xlat
mov
std
or
add
mov
jge
cmp
mov
addl
ja
fcmovnb
mov
xor
add
jp
xchg
in
jmp
mov
daa
jae
into
jg
mov
mov
xor
jl
jns
shrb
es
push
arpl
inc
pop
or
pop
imul
xlat
xor
or
je
xor
mov
lcall
mov
pusha
lods
lret
test
jecxz
sbb
xchg
mov
mov
jmp
dec
mov
lcall
aam
mov
mov
mov
imul
xchg
je
iret
insb
xchg
test
rol
xor
js
xchg
leave
ja
das
jne
lret
shll
shrl
subl
mov
mov
mov
insl
jo
sbbb
mov
jnp
and
ljmp
cmpsl
arpl
xchg
lcall
sbb
cltd
xor
insl
insl
into
jp
mov
leave
mov
and
xor
adc
or
push
in
ja
dec
lret
aad
hlt
addr16
mov
int3
inc
ja
scas
repnz
pop
adc
arpl
jo
mov
jnp
pop
das
shl
rcrb
popf
cmp
pop
mov
lcall
int3
push
mov
mov
cmpsl
jno
in
insl
xchg
inc
xchg
mov
xchg
xchg
mov
ret
jno
daa
jg
xlat
lret
cltd
icebp
jne
int3
lock
add
jg
jecxz
leave
xor
in
frstor
js
nop
fcomps
adc
jge
mov
mov
adc
sub
out
ds
adcl
mov
nop
dec
call
jae
aam
int3
jae
cmp
and
imul
imul
insl
jae
movsl
cwtl
jmp
cli
mov
fs
xchg
xlat
daa
push
pop
repz
popa
mov
mov
sahf
insl
add
or
jne
push
rcll
fdivs
mov
jno
divl
das
clc
scas
xchg
int3
jbe
inc
imul
push
mov
xlat
popf
push
fdivrs
mov
nop
cmp
das
and
push
movsl
rol
fdivs
leave
inc
data16
xor
mov
jnp
xchg
outsl
ja
push
in
cmc
xrelease
mov
push
pop
arpl
cmp
arpl
lahf
arpl
jb
adcb
mov
jo
xchg
push
test
out
pop
aaa
fs
jne
jnp
add
xchg
mov
addr16
aam
mov
sahf
lcall
jns
lock
push
lahf
insb
inc
and
dec
rolb
je
cmp
jns
jbe
les
popl
pop
mov
mov
cmp
jl
mov
jbe
daa
jae
inc
pop
push
jp
mov
mov
jmp
cmp
int3
add
adc
nop
sub
rorl
loopne
dec
xor
popf
jbe
int3
xchg
inc
inc
rcrb
movsb
xchg
or
xlat
xchg
outsb
xlat
mov
pop
ljmp
out
pop
andl
adc
sahf
lahf
aaa
je
pushf
pop
lods
mov
and
cmp
aam
mov
and
addr16
jae
pop
lods
sahf
jno
mov
xchg
jle
jb
xchg
sub
dec
add
mov
enter
stc
insb
cltd
enter
je
mov
orb
outsb
pop
hlt
dec
xchg
push
wrmsr
xchg
mov
mov
xchg
cmp
xchg
push
insl
sarl
pop
test
xchg
xchg
lret
shrl
inc
jne
mov
pop
jmp
outsl
je
leave
xor
int
jns
repz
fmull
and
daa
sbb
addb
test
xchg
mov
cld
jmp
pop
ja
jg
mov
js
mov
mov
pop
mov
mov
lea
xlat
xchg
mov
ret
jne
test
jbe
sbb
imul
popl
xor
cmp
inc
inc
sbb
xchg
cmp
je
lret
jle
popf
xchg
cs
adc
into
lret
xchg
xlat
xchg
mov
xchg
fldt
jle
mov
lcall
insl
mov
inc
inc
je
rorb
jae
mov
xor
popa
mov
test
xlat
fisubrl
popf
fstl
insl
fwait
movq
gs
out
ja
out
imul
sti
addr16
mov
mov
adc
mov
in
jne
int
lcall
mov
mov
stc
and
jno
cmpsl
xor
cs
test
mov
mov
leave
sahf
xlat
push
xchg
int
mov
cwtl
lea
fwait
xchg
dec
cmp
dec
or
cmp
jnp
lret
push
arpl
xchg
lcall
loope
mov
iret
or
cmp
add
lret
sbb
cwtl
rolb
pushf
mov
lcall
cld
imul
mov
jp
js
testb
ja
int3
pop
outsw
lahf
addr16
mov
inc
add
lret
mov
stos
inc
adc
push
bound
outsl
xchg
push
out
pop
lods
int3
jbe
mov
dec
cli
mov
ja
jnp
loopne
je
enter
jbe
cltd
nop
add
inc
int3
sbbl
arpl
aaa
sbb
jg
xlat
fdivrs
aad
jb
xchg
loope
mov
inc
adc
shlb
xor
xchg
cmp
xchg
cltd
push
mov
jnp
push
std
cmp
cltd
adcb
sbb
fwait
inc
repnz
jns,pt
inc
scas
xchg
jbe
pop
mov
jle
pcmpgtb
ror
and
frstor
sub
test
test
cmp
out
jnp
stc
push
lcall
andb
xor
push
rol
int
out
loop
in
mov
je
push
jns
mov
mov
cmp
idivb
jae
dec
or
aam
adc
xchg
xchg
insl
push
jb
ret
cwtl
test
sbbb
js
sbbb
mov
arpl
lea
push
imul
push
mov
cli
insb
lret
js
sbb
nop
pop
push
mov
jns
cmp
outsl
popf
in
daa
imul
push
lret
inc
mov
add
xchg
fisubs
jae
pushf
arpl
es
jnp
jecxz
lcall
das
out
lods
insb
jl
stos
cmp
sarl
sarl
out
xorb
nop
js
mov
xchg
mov
fcoms
mov
xchg
test
mov
cltd
xorl
out
addl
mov
stc
sti
jne
mov
jns
mov
lret
inc
mov
jae
push
outsb
xchg
push
fidivl
inc
xlat
fmulp
call
ja
mov
lret
les
subb
jae
fwait
xchg
dec
fdivl
arpl
dec
push
orb
js
ja
ror
xchg
sub
sahf
cmp
jge
push
icebp
shlb
push
out
cltd
jo
xchg
test
mov
jg
jo
popa
cmp
loope
popl
xchg
mov
test
insl
sbbl
xchg
and
out
xchg
xchg
cwtl
dec
push
lods
mov
lods
iret
mov
jnp
push
inc
xlat
iret
mov
adc
je
add
or
add
mov
sahf
jle
arpl
lcall
cmp
push
fistl
mulps
out
jnp
enter
jo
adc
daa
sbb
popw
fldt
dec
scas
fsubr
jns
mov
mov
push
xchg
lcall
sbb
sub
jge
xlat
xchg
lret
insl
mov
repz
jp
inc
daa
inc
leave
fnstsw
stos
jno
mov
jnp
fxch
subb
jns
jp
jne
mov
fwait
jb
loop
mov
in
jle
mov
lahf
sub
int
jbe
cli
jb
mov
cmp
imul
adc
pop
stc
pop
mov
lcall
das
es
push
outsl
xchg
pushf
into
mov
js
xchg
movsb
adcb
cmc
push
xchg
xchg
mov
jo
xchg
out
testl
fdivrs
pusha
xor
inc
shlb
sarb
mov
mov
cmp
mov
inc
lcall
jo
xchg
pop
or
cmp
mov
or
push
lea
adc
xor
mov
sub
lahf
inc
repnz
int3
sbb
mov
enter
xchg
pop
popf
adc
stos
fldl
imul
xchg
stos
cs
into
std
jle
lahf
xchg
mov
inc
jae
xlat
lcall
sbb
cmp
mov
add
or
jns
stos
insl
cwtl
xchg
sahf
adc
cmpsl
jg
daa
mov
lahf
retw
inc
shl
mov
lret
jo
ja
xchg
or
fcomi
je
fs
sub
jne
jno
lods
insb
cwtl
inc
fisttpl
mov
outsb
xlat
ds
adc
mov
popf
sub
adc
mov
fldl
adc
pop
insl
jno
in
orb
sub
je
pop
cmp
sbb
xchg
andb
and
rorl
shll
fldt
push
mov
das
xchg
addr16
cltd
jae
bts
jnp
push
test
jecxz
push
imul
xchg
adc
lret
lret
mov
insl
cmc
jmp
xlat
fiadds
insb
xchg
cltd
imul
das
lods
addb
pop
test
jns
test
shlb
fadds
je
iret
imul
jg
movsl
xchg
in
addr16
out
inc
fstl
jne
cli
jmp
jp
adc
into
sbb
xchg
push
test
and
ror
outsb
push
ja
aas
sti
cmpb
add
lea
jns
jle
sbb
out
inc
insb
movsl
jbe
jge
outsl
mov
fdivrs
in
inc
sub
fwait
mov
jnp
push
inc
cmp
dec
inc
mov
loope
push
push
shlb
bound
add
mov
jg
popf
mov
sbb
stos
cltd
xchg
mov
add
jne
jno
sbb
arpl
sbb
lahf
mov
add
jp
repnz
clc
dec
cwtl
jae
xlat
fcoms
push
ljmp
mov
jl
jmp
cmp
testb
pop
jns
mov
xlat
sbb
push
mov
xor
xchg
int3
insl
xchg
aaa
nop
addr16
nop
inc
xchg
in
jne
les
jp
or
ret
insl
cmp
test
jo
push
cmpsb
sbb
jl
rolb
sarl
mov
lods
scas
mov
xchg
xchg
jae
outsl
push
int3
fldl
lret
sbb
lret
mov
addr16
sarb
jae
out
daa
adc
or
cmpsl
push
jle
ja
into
dec
mov
mov
or
pushf
loopne
arpl
or
adcb
jae
jne
rcrl
imul
ljmp
xchg
fistpl
lret
outsl
cltd
and
imul
adc
lahf
jp
xchg
or
mov
jno
arpl
popf
mov
cmp
call
pushf
mov
adc
sti
adcb
sbb
pop
subb
out
int3
out
ja
lret
rorb
and
subl
shrb
mov
mov
push
inc
not
jae
mov
and
insb
push
mov
jns
outsl
daa
jmp
lahf
jg
sub
jnp
jae
xchg
imul
mov
pushf
add
or
roll
shlb
xorb
xor
mov
mov
out
jb
iret
movsb
mov
jns
xchg
test
lods
xchg
ja
jp
imul
pop
divl
popa
mov
jp
jecxz
lahf
sbb
jo
adc
sti
push
xlat
rcl
jp
inc
sub
out
in
mov
aas
xorb
cltd
mov
jg
mov
xor
popa
lds
push
push
cmp
jae
xchg
aam
mov
leave
jg
mov
idivl
pushf
lahf
out
mov
test
int
fisttpl
mov
lret
dec
adc
pop
dec
pop
mov
mov
pushf
jge
rorb
outsb
fcmovnbe
pop
mov
daa
pop
nop
adc
xchg
push
jae
insb
leave
ficompl
xorb
xchg
xchg
in
inc
cmp
jg
outsl
jns
imul
into
mov
inc
push
loope
arpl
xlat
push
out
or
sti
inc
push
outsb
imul
stos
addb
xchg
jp
jp
jne
subl
xor
mov
jg
xlat
dec
dec
jne
push
je
dec
arpl
mov
es
insl
mov
leave
dec
arpl
arpl
mov
and
inc
js
xchg
je
iret
pop
insl
int3
xor
xor
mov
hlt
cmp
outsl
lea
mov
das
push
leave
xchg
xchg
lahf
lret
idivl
pop
mov
jbe
lcall
hlt
jp
arpl
mov
jne
mov
mov
pop
into
cwtl
movsl
nop
xchg
push
xor
jge
out
test
xchg
push
xchg
lret
arpl
mov
cwtl
js
int3
mov
cld
jne
insb
jl
fsubrs
imul
jae
in
iret
lods
sub
adc
push
push
out
xchg
lret
cltd
mov
lea
jae
pop
mov
aam
outsb
ja
out
or
xchg
cmp
mov
xchg
outsb
cltd
add
jmp
jp
mov
mov
mov
lcall
ds
test
in
jns
insb
sahf
inc
cmp
or
mov
cmc
adcb
mov
test
jb
sti
je
popf
in
mov
lahf
sarb
adc
sbb
jns
test
sti
mov
and
jl
mov
test
in
ret
js
xchg
jb
mov
mov
adc
xlat
jns
mov
popf
insb
push
jle
daa
je
cwtl
jno
xor
out
xchg
rcrl
mov
jae
mov
gs
xor
imul
test
and
mov
jl
mov
jmp
push
inc
push
xor
push
cmpsl
push
iret
repnz
jge
clc
adc
pop
ja
sbb
icebp
outsb
sbb
out
xchg
sbb
test
pop
xchg
lcall
nop
js
xchg
mov
sti
lcall
mov
imul
jns
mov
mov
jge
xchg
xchg
jo
and
mov
inc
mov
xchg
jg
repnz
outsb
jecxz
int3
insl
imul
fdivrs
aam
xchg
mov
inc
jnp
mov
jecxz
xchg
pop
mov
xlat
std
inc
pop
sahf
das
inc
push
jp
mov
jp
adc
jp
mov
cwtl
jo
mov
inc
jae
les
xchg
sahf
cmp
lret
inc
and
jno
jg
xchg
jae
outsl
mov
fwait
outsl
jmp
mov
mov
xlat
fcmovbe
lcall
cmp
or
adc
cld
mov
inc
lea
pusha
and
ror
ja
ja
push
adc
xor
int3
mov
cmp
mov
js
mov
mov
int
xchg
aas
add
data16
js
jae
je
push
mov
out
fldt
mov
jle
lret
or
pop
mov
fdiv
add
cltd
mov
dec
ret
jb
add
push
xchg
xchg
iret
mov
sbb
fwait
pushf
mov
jae
adc
pop
mov
js
in
pop
xor
into
add
push
xchg
inc
mov
arpl
jg
inc
mov
sub
cli
push
jnp
jns
xor
jle
popa
jge
sbb
sarb
push
mov
mov
jge
cmp
lcall
jae
or
nop
inc
je
dec
mov
sbb
mov
mov
sbb
dec
xchg
into
adc
lret
lret
leave
mov
xor
jns
mov
fcmove
cmp
mov
ret
inc
pop
popa
xchg
popf
push
pop
inc
imul
js
lea
mov
sbb
shrb
test
mov
xchg
jno
sarl
inc
sub
xchg
jns
xor
xorb
add
xchg
mov
cwtl
aad
lods
call
int
insb
xchg
mov
popa
mov
lret
iret
ficoml
xchg
or
xlat
xchg
cmpsl
or
jno
ja
mov
ret
cmp
mov
fs
test
pop
inc
jo
in
imul
mov
xlat
int3
inc
sub
inc
lods
call
cmp
pushf
sbb
mov
add
rcll
pop
xchg
ret
mov
push
mov
cwtl
fmul
leave
mov
xchg
mov
lcall
repnz
es
movsb
inc
dec
mov
jne
inc
sbb
into
pop
pop
js
insl
outsl
dec
stc
pop
add
call
mov
sbb
imul
shlb
dec
jg
adc
test
cld
adc
js
call
sti
inc
aaa
xchg
int
js
pop
add
mov
push
outsb
insb
int3
fldt
cs
lret
jno
mov
ja
push
mov
out
out
xchg
mov
sahf
inc
pop
stos
mov
xlat
jl
xorb
pushf
lds
outsl
fists
push
lods
jg
jle
in
dec
xorl
mov
xchg
fsubs
arpl
xchg
mov
mov
inc
orl
popf
je
out
mov
fnstenv
imul
jb
jle
mov
inc
cmp
nop
imul
imul
cmpsl
xchg
lahf
test
subb
xchg
mov
cltd
stos
or
lods
lcall
inc
arpl
ror
lcall
sbb
xchg
sub
daa
adc
inc
subb
mov
mov
xchg
imul
mov
adc
test
in
int
fwait
rdmsr
aaa
int
xchg
jo
int
cwtl
inc
cmpl
or
cmp
jae
xchg
dec
shr
jb
stos
inc
arpl
adc
outsl
mov
insl
rcr
xor
fistl
lock
push
mov
xlat
addr16
jb
lahf
jg
xchg
xchg
jno
mov
push
mov
mov
aad
xchg
sbb
shll
adc
jmp
rcll
mov
jne
inc
out
inc
adc
pop
lcall
fildl
test
mov
sbb
jle
insl
mov
imul
mov
movsb
jne
xchg
das
arpl
jge
adc
sbb
lret
cld
int3
jp
dec
cmpsl
sub
outsl
jb
leave
leave
or
lahf
sahf
sahf
pushf
lds
je
push
out
in
xchg
add
loope
pop
cltd
xchg
inc
pop
gs
or
movsb
nop
fidivrs
sbb
mov
or
and
lret
xchg
or
int3
jp
dec
subl
inc
add
lahf
pop
mov
jno
outsl
xchg
daa
popf
push
int3
mov
leave
fistpl
sub
fs
aam
gs
mov
in
jae
insb
and
xchg
jb
sub
xchg
xor
sahf
or
cs
out
push
mov
int
mov
ja
addb
sub
addr16
iret
mov
inc
xchg
mov
jle
push
xor
jl
lods
lret
jns
sbb
bswap
sarb
jne
xchg
lahf
ja
adc
cmpsl
movsl
inc
aaa
gs
test
dec
pop
cs
add
xchg
inc
outsb
mov
nop
fwait
in
dec
adc
cwtl
and
das
test
fwait
and
popa
inc
outsl
lahf
test
jno
fdivs
cltd
inc
or
rorb
mov
imul
lods
sub
jne
pushf
lea
mov
xchg
out
inc
cltd
pop
aaa
mov
insb
lods
fwait
cli
sub
cwtl
cmp
into
out
xor
nop
test
mov
int
out
mov
imul
rcrl
mov
lret
xchg
mov
cmp
and
lock
inc
xchg
jl
pop
sbb
pusha
popf
fistpl
mov
sub
ficomps
lret
pop
test
inc
xor
test
ror
daa
jo
push
imul
in
iret
sbb
stos
jbe
add
int
pusha
adc
shlb
jl
bound
mov
in
outsb
mov
out
je
fwait
mov
mov
inc
jnp
pop
cld
mov
lret
lahf
insl
mov
jg
dec
sbb
lcall
divl
jl
sub
xor
jne
popf
pop
popf
jo
cmp
xchg
out
lret
sarb
leave
xchg
inc
cltd
je
mov
imull
jge
lret
addr16
xchg
xlat
jae
cmpl
jae
xchg
mov
js
aam
clc
xchg
jge
int
xchg
push
test
dec
mov
out
arpl
cmp
sahf
nop
ljmp
jl
xor
cmp
adcb
add
int
sbb
hlt
insl
das
fwait
leave
outsl
ja
or
dec
mov
loopne
jb
cmp
imul
xchg
ja
mov
and
lods
jg
push
inc
mov
push
lahf
xor
rdpmc
hlt
jl
mov
pop
pushf
fistpll
daa
or
dec
sbbb
fsubrs
loop
ja
pop
popa
insl
cmovne
sbb
push
mov
xorb
cmc
jo
iret
or
lock
fstpl
test
mov
xorb
imul
cmp
int3
imul
sbb
fnsave
sbb
jnp
adcb
and
cmpsl
mov
mov
cwtl
insb
jle
mov
mov
push
add
mov
jmp
jp
fdivrs
mov
mov
loopne
sbb
jnp
cmp
inc
xor
xchg
negb
and
adcb
insl
add
ffree
mov
push
and
mov
icebp
mov
jae
adc
dec
fcomps
and
js
sahf
pop
xchg
jg
sub
mov
sbb
or
adc
inc
dec
and
jo
mov
sub
or
xchg
mov
nop
jne
cmp
fdivrs
xchg
dec
out
je
jnp
mov
leave
insl
or
test
mov
popf
into
loopne
js
lods
push
cmpsl
inc
mov
jae
nop
jecxz
mov
jge
mov
jl
mov
rcrb
int
cli
cmp
inc
mov
mov
sbbb
clc
jb
sahf
aas
sbb
ficomps
xchg
mov
cwtl
insb
mov
pop
leave
xlat
jge
jp
imul
sub
jb
imul
int3
jg
fcmove
xchg
and
mov
nop
je
mov
popl
mov
cmpsl
jbe
into
xchg
outsb
ja
cmp
add
imul
and
mov
xchg
vcvttps2dq
lret
xchg
adc
or
movsl
fcmovnbe
mov
repz
outsl
xchg
cwtl
call
push
mov
cmp
lods
jb
sub
rclb
mov
mov
jbe
jge
lret
lods
pop
mov
xlat
icebp
repz
mov
jno
divl
sub
xchg
fmuls
das
adc
xlat
cmpl
push
sub
mov
into
cmpsb
stc
cmpsb
mov
movsb
orb
icebp
push
adc
lea
lea
clc
or
lret
repnz
add
add
push
imul
popl
in
in
insl
and
mov
roll
jg
std
mov
addr16
add
inc
outsl
adc
arpl
leave
enter
lahf
adc
dec
pop
js
cmpb
push
out
jns
jne
test
lds
pop
sbb
sahf
aad
int
lcall
insl
sub
xchg
outsb
popf
jno
lds
sbb
fwait
ds
inc
jno
inc
mov
sub
pusha
lret
xchg
mov
mov
xlat
cltd
aad
jl
xchg
inc
mov
shrb
inc
inc
xor
jb
aad
pushf
or
sbb
xchg
or
jle
leave
mov
fwait
cltd
addb
xchg
push
mov
in
lret
inc
les
nop
lods
xlat
mov
inc
push
xchg
push
adc
rcll
loopne
sbb
nop
inc
add
orb
mov
mov
cmp
jne
mov
sahf
mov
xchg
mov
outsb
push
mov
mov
arpl
inc
pop
mov
scas
arpl
pop
hlt
aas
int3
aaa
add
cli
xor
call
je
push
leave
test
in
clc
aaa
jbe
pop
jnp
and
mov
cmp
mov
je
les
xchg
lret
sbb
into
lret
mov
imul
int
mov
sbb
push
cmp
test
jbe
mov
push
sbb
aas
adc
fnstsw
test
mov
jle
jnp
xchg
cltd
dec
inc
and
inc
scas
fadds
bswap
lods
imul
lret
add
lcall
lahf
adc
int3
fwait
jle
inc
sbb
mov
rolb
xor
loop
cwtl
jge
jnp
imul
iret
xchg
mov
jae
cld
sbbl
shlb
xchg
hlt
push
xchg
sbb
subl
and
fiaddl
cmpsb
call
jne
fcom
mov
xlat
jne
dec
jae
fcom
lcall
add
mov
pop
repnz
mov
jle
mov
imul
fcoms
fisttps
sbb
sbb
stos
cwtl
arpl
mov
sbb
sub
cltd
and
adc
jns
nop
or
xchg
sbb
pushf
xchg
lcall
and
mov
mov
int
adc
jbe
outsl
cld
outsl
fwait
pop
fdivrs
xchg
ret
xchg
outsl
aam
aad
add
xlat
scas
jo
lahf
je
inc
outsl
outsb
push
in
jns
repz
xchg
inc
leave
inc
jg
jae
jns
popf
jecxz
je
mov
int3
lahf
repz
popa
nop
dec
scas
call
mov
mov
int3
leave
repz
iret
insl
inc
cltd
cmp
in
test
sbb
pushf
cmpsl
xchg
gs
popf
dec
cltd
outsl
iret
sub
jp
shll
ja
insb
mov
mov
dec
xchg
jae
xchg
jl
aad
jno
xlat
pushf
mov
xchg
add
and
fwait
mov
clc
jnp
mov
addr16
cltd
jno
jl
int3
xchg
xorl
pushf
adc
mov
jp
int
mov
jle
nop
mov
stos
xchg
jp
sbb
mov
or
mov
into
fcomps
aam
int3
addb
or
fwait
nop
jmp
jp
out
xchg
add
fst
out
nop
mov
nop
jl
rcl
mov
inc
orb
mov
jnp
decl
mov
lret
mov
insb
inc
inc
pop
jne
jge
mov
insl
xchg
jae
jbe
cwtl
lods
test
std
mov
aam
pop
mov
pop
jle
jae
pushf
jae
js
cmp
cmp
iret
xor
stos
mov
insl
fwait
pop
arpl
jmp
shlb
dec
and
arpl
add
xchg
nop
jns
push
cmp
lret
int
xchg
shlb
lahf
jle
arpl
loopne
ja
mov
in
xchg
push
lods
cmpb
fmul
xlat
xor
mov
mov
xchg
andb
jbe
sti
jno
xor
jne
dec
sub
mov
sti
cltd
testb
in
dec
scas
bound
arpl
xchg
jp
js
movsb
stc
sbb
outsl
xchg
mov
xlat
insb
add
test
push
nop
shll
mov
arpl
fnsave
dec
mov
dec
mov
mov
inc
mov
mov
data16
push
push
cmc
sub
and
popf
sbb
adc
clc
iret
xor
pushf
mov
ret
in
shrl
imul
int3
js
sbb
jo
or
xchg
add
pop
rorl
jg
sub
xor
xor
add
lahf
pop
lea
mov
sbb
rorl
mov
negl
loop
inc
push
mov
lea
dec
sub
jge
lcall
sti
fs
addl
loop
and
mul
inc
mov
insl
in
pop
sub
je
jae
sub
mov
popf
inc
testb
inc
ja
scas
cltd
scas
xor
je
jg
jp
xchg
jg
jb
sub
sti
aaa
je
xlat
fsubrp
iret
jp
mov
pop
in
sbb
or
nop
adc
js
xchg
jae
lret
fistps
hlt
add
pushf
jne
push
rcr
dec
popf
mov
fimull
leave
mov
nop
shll
fbld
int3
lret
push
jo
pop
sti
inc
outsb
into
mov
cli
popf
xlat
iret
dec
iret
sarb
pop
cmp
test
int
cmpsl
lcall
sub
jbe
and
pop
icebp
aad
mov
cmp
cmpsl
and
cltd
inc
or
scas
ja
xor
xor
arpl
movsl
pop
xchg
xor
mov
leave
mov
inc
sub
adcb
mov
fstpl
fidivl
jg
rolb
inc
int
and
arpl
out
cmp
jb
pushf
push
mov
jnp
sub
xlat
sbb
out
int
in
fildll
mov
arpl
pop
sahf
pop
outsl
cmpl
ds
int
xchg
xchg
lea
testb
movsb
jge
movntps
push
sti
jnp
imul
or
arpl
mov
jno
test
sti
xor
jg
fsubrl
mov
outsb
jle
fmull
leave
mov
mov
imul
cltd
add
ficomps
mov
xor
pop
jnp
lds
xor
test
mov
jg
inc
cmpsb
shll
inc
adc
arpl
pop
cmp
fidivs
lods
jl
sti
outsl
mov
sarl
sub
jg
and
ror
fistl
jns
lahf
scas
pushf
add
sub
pop
jb
mov
aad
movsl
and
add
ret
jge
xchg
arpl
or
pop
jge
add
fildl
push
fcomi
arpl
inc
jmp
dec
mov
sub
arpl
pushf
insl
cltd
jl
dec
es
dec
fidivrs
add
push
cs
arpl
jno
jno
mov
mov
arpl
lock
pop
arpl
dec
mov
jae
mov
test
ds
int
lret
or
mov
insb
sbb
xchg
xlat
mov
sahf
adc
xchg
test
xchg
sbb
jae
lret
lods
mov
stos
mov
fiadds
mov
mov
adc
jl
icebp
mov
test
mov
jne
mov
aas
add
insb
mov
or
ja
adc
popf
leave
in
push
pop
adc
pop
into
sub
out
cmp
out
jecxz
fwait
xchg
outsw
mov
imul
inc
cmp
pop
mov
insl
or
fdivrs
addr16
jne
or
jmp
insb
lods
adcb
or
adc
pop
lret
das
subb
add
jl
addr16
jae
inc
sub
imul
jmp
aam
xchg
jo
orb
daa
xchg
xchg
and
std
stc
loop
lea
xor
xchg
push
adc
lahf
xchg
or
or
aam
ja
subb
jbe
cltd
mov
mov
jb
xor
mov
ret
xchg
int3
pop
sub
mov
pop
cwtl
movsl
add
add
lea
out
into
inc
lcall
insl
add
sub
pushf
aaa
jne
mov
cmp
mov
jb
sahf
jle
cwtl
lods
mov
ror
jg
daa
pushf
jge
imul
mov
xchg
jne
cmpsl
mov
mov
lret
lea
stc
jl
xchg
sub
stos
into
outsl
js
push
xor
sbbb
popf
xchg
adc
insl
or
pop
mov
mov
jne
jle
mov
pop
je
pop
mov
fstpt
mov
fcomps
pop
faddl
das
mov
sbb
lea
cwtl
daa
xchg
mov
sub
lcall
mov
bsr
ja
iret
push
dec
jg
and
iret
xorb
test
outsl
sahf
xchg
in
test
jns
enter
lret
inc
pop
mov
ja
mov
xlat
fsubrs
pop
cwtl
pop
mov
ja
pop
pop
into
pop
jns
out
sub
push
test
jae
mov
je
jp
cli
sti
outsl
xlat
notb
lock
or
jns
mov
sub
and
loope
jno
cmp
lea
cmpsl
fwait
xlat
jae
fisubrl
lods
lcall
jns
fcom
insl
imul
xchg
and
mov
xchg
mov
ljmp
call
jb
inc
mov
outsl
popf
mov
int3
insb
jle
push
mov
je
dec
mov
int
or
test
xchg
lds
leave
fwait
cltd
aaa
fcmovbe
jbe
jnp
gs
add
in
push
inc
or
ljmp
jns
cmp
jae
fwait
xchg
je
jo
lahf
cltd
xchg
mov
fisttpll
jp
mov
lahf
and
lahf
sbbb
mov
into
mov
jno
lret
ja
push
and
fs
jl
pop
dec
outsl
cltd
xchg
inc
mov
insb
mov
dec
outsb
test
pop
sub
mov
jns
inc
xlat
jg
add
sbb
xor
pusha
and
inc
sahf
jo
cli
test
insb
cwtl
jle
mov
and
mov
xchg
outsb
mov
insl
xchg
mov
sbb
mov
xor
pushf
insl
mov
dec
cmc
sbb
xchg
data16
sub
xchg
pop
add
adc
inc
adc
xor
lret
xor
mov
mov
jg
pop
jge
imul
js
jne
jl
adc
dec
outsl
jle
jb
mov
insl
testl
ret
outsb
int3
je
pop
fmuls
dec
movsb
fstl
sbb
mov
jmp
mov
lret
jg
fnstsw
loopne
xchg
ret
xor
jp
sbb
and
inc
mov
outsl
push
hlt
or
jns
add
pop
out
mov
je
pop
stos
cmpb
mov
imul
xchg
insb
jg
insl
or
int
xlat
nop
jbe
inc
dec
dec
cmpsl
push
jl
fwait
sahf
or
jno
and
je
and
mov
pusha
cltd
jnp
lds
jae
sbb
jle
jl
dec
roll
mov
mov
cmp
xchg
cwtl
popf
jg
jae
push
in
imul
in
xchg
inc
mov
adc
jg
sahf
jnp
orb
jb
add
cmp
pop
jg
lret
jle,pt
mov
sbb
xchg
mov
inc
lret
or
shlb
fimuls
lods
mov
js
adc
cltd
pushl
sbb
jo
je
mov
mull
jnp
jnp
lds
popf
fdivrs
insb
mov
inc
jo
jno
xchg
xchg
test
lea
mov
out
int
int3
mov
mov
gs
jnp
jo
mov
fcomp
mov
xlat
popf
jns
jae
add
mov
jns
mov
lahf
int3
xchg
lret
js
inc
xchg
iret
out
insl
cmp
cmp
lahf
pop
call
lret
fnsave
xlat
out
cmpsb
int3
enter
cwtl
xor
data16
push
les
into
mov
inc
js
mov
je
in
das
sub
daa
jno
mov
jp
jns
outsl
jle
xchg
xchg
cltd
jge
sbb
dec
adc
jp
iret
inc
jg
mov
mov
and
lcall
add
dec
jg
neg
into
mov
sahf
xchg
cmpb
adc
dec
outsl
sahf
sub
or
mov
ret
jge
fidivl
lods
and
jbe
ret
pop
popa
jno
sbb
cltd
cmp
cli
jmp
js
mov
xor
pop
sbb
inc
mov
je
add
loopne
mov
iret
or
jmp
pushf
inc
xchg
cmpsl
xchg
cmp
outsl
xchg
and
jp
jg
mov
into
dec
mov
dec
xchg
aaa
mov
jae
popf
rclb
mov
pop
adc
sbb
aad
addb
mov
nop
cmp
lea
jg
mov
ds
xchg
jbe
xor
xor
out
inc
mov
mov
jp
call
xchg
sub
sahf
mov
rolb
js
sbb
or
lret
sbb
xlat
scas
test
xchg
imul
jae
dec
subl
lahf
mov
mov
mov
in
add
in
adc
addl
xchg
pop
jnp
jnp
std
cmpsw
jmp
lods
shr
jbe
mov
nop
in
mov
js
push
daa
push
xchg
mov
fwait
mov
bound
xchg
jno
sub
movsb
mov
cmp
jl
mov
mov
cmp
jb
lcall
jae
xchg
aad
outsb
es
mov
repz
jecxz
je
xchg
test
ja
pop
mov
fistpll
pop
inc
lcall
inc
sbb
fwait
xchg
nop
inc
shll
mov
xchg
mov
sbb
aam
sub
and
rclb
sub
fwait
and
push
js
xor
adc
jbe
add
mov
jne
and
xchg
fsubrs
or
adc
sahf
jne
pop
push
pushf
mov
cmpsl
mov
outsl
test
cwtl
loop
out
rclb
int3
xchg
insl
jae
add
xor
push
je
jmp
rorb
and
rcrb
cmpsl
imul
xchg
jne
mov
fdivs
cld
cmpsb
mov
mov
mov
mov
pusha
ret
sti
lcall
xchg
sbb
jg
outsl
pop
and
jns
stc
enter
mov
insb
inc
mov
cmp
mov
inc
ja
popf
cmp
push
push
je
js
jge
orb
shlb
xchg
gs
imul
mov
mov
mov
jbe
jne
leave
jp
popa
lahf
mov
jb
jb
fwait
pop
cmc
outsb
jae
sub
iret
ja
xchg
ja
aam
inc
jbe
cltd
xor
mov
in
sbb
adc
mov
mov
mov
insb
pop
or
gs
int
jp
mov
add
push
mov
push
cs
enter
mov
aad
jp
mov
ss
int
pop
test
ja
gs
jp
xchg
leave
mov
fisttpl
add
jb
adc
ret
fnstsw
jle
push
lcall
nop
js
mov
mov
addr16
add
xor
nop
push
xchg
jb
out
js
or
into
mov
mov
cld
in
sub
hlt
inc
sbb
inc
mov
sbbb
pushf
xchg
shlb
leave
xchg
fbld
pop
mov
jno
cmpsl
outsl
fdivrs
mov
test
xor
negl
pushf
jg
pop
fstl
jg
jb
lea
lods
jge
jge
rcr
cmp
test
pop
mov
sbb
pop
rcrl
jecxz
xchg
data16
frstor
push
shrl
jnp
inc
mov
subl
gs
lcall
inc
mov
mov
jns
jp
jl
cmp
leave
enter
mov
adc
mov
lcall
ss
cltd
adc
test
mov
mov
jns
ja
mov
xor
cltd
mov
mov
sub
cmpsl
pop
ret
cmp
adc
push
test
cmp
fsubrs
and
test
mov
test
ds
mov
lods
adc
ret
lahf
ja
ja
cmc
xor
xchg
clc
sbb
mov
jnp
inc
and
mov
xchg
pop
fadds
iret
cmp
ffreep
rclb
leave
insl
arpl
or
mov
rclb
mov
insb
xchg
cltd
mov
xor
imul
adc
jp
mov
pushf
sbb
int
lcall
cltd
popf
imul
xchg
outsl
mov
adc
shrl
xchg
aaa
mov
clc
jmp
mov
pusha
pushf
je
and
cmpsb
mov
lret
lcall
leave
filds
add
into
js
int3
xlat
jo
movq
sbb
into
mov
iret
dec
mov
jbe
fcoml
lcall
mov
lea
add
or
xchg
rcrb
cltd
fldcw
jp
jle
jecxz
jbe
nopl
fneni(8087
xlat
fisttps
jae
out
jae
inc
push
popf
lahf
lcall
mov
adc
xchg
xchg
inc
sbb
cwtl
cmp
in
je
lods
lret
cmpsl
xchg
stc
adc
sbbb
rcrl
xchg
shl
inc
popf
jg
cwtl
int3
xorb
cwtl
into
and
lcall
lea
nop
xor
mov
pop
ror
jp
popf
or
or
xorb
sbb
jb
stc
outsl
fidivrs
xchg
cltd
enter
pushf
fcmovu
push
lcall
setbe
jb
cmp
cld
jl
arpl
jne
xchg
or
nop
es
mov
jg
cs
mov
insl
mov
xchg
loopne
sub
adc
xchg
int3
lret
add
fisubrs
sarl
ret
ja
hlt
jns
mov
add
ja
lock
xor
jbe
out
cmpsl
mov
jno
xchg
mov
fstpl
fwait
or
loop
js
test
inc
xchg
aas
lret
add
mov
arpl
or
add
adcb
push
jl
je
jle
cmp
push
adc
jge
insl
insb
lret
cwtl
xchg
and
in
js
mov
test
push
adcb
mov
imul
int3
cwtl
fstpl
int
mov
aam
jmp
lcall
inc
inc
xlat
jg
adcb
jb
sbb
popf
aaa
or
cltd
inc
insl
leave
inc
clc
jg
jge
jmp
fildl
test
lret
ret
mov
aam
lcall
arpl
push
jbe
push
clc
das
out
jae
lcall
cli
cmpsl
xchg
jnp
inc
test
mov
adcb
movsb
mov
and
dec
jp
jl
cltd
ja
fisttpl
orl
mov
ja
mov
push
cmp
into
cltd
push
xchg
int
pushf
pop
fcomps
add
push
jg
mov
jo
test
outsl
outsl
mov
inc
js
seto
lret
mov
lock
dec
fwait
ljmp
nop
ja
dec
das
out
mov
xchg
mov
pushf
adcb
fdivs
lea
sbb
sbb
dec
pop
sbb
das
xchg
jp
das
sub
mov
inc
inc
inc
ficomps
ss
cmpsb
fidivs
out
ret
lret
fists
shll
fisttpll
ret
scas
fimuls
jns
or
mov
leave
mov
jp
js
lret
adc
cmpl
lahf
aam
xor
insl
mov
js
inc
pop
arpl
into
and
push
inc
fcoms
fistl
push
cltd
jmp
in
xor
mov
jb
jno,pt
cmp
mov
stc
ror
sbb
nop
lret
pop
xchg
xchg
test
and
inc
cmp
shlb
orl
push
or
int3
test
push
xor
fsin
stc
adc
sbb
cmp
xchg
sub
test
cwtl
imul
into
cmc
xchg
popf
xor
lret
cld
xchg
jae
out
xchg
xlat
ja
xchg
ficoml
shll
mov
jge
jne
jl
int
nop
or
xor
push
mov
jno
inc
pushf
cmp
jbe
add
cmpsl
popf
xlat
test
lds
xchg
lods
fidivrl
jp
arpl
hlt
gs
mov
daa
lcall
mov
inc
int3
cmp
sti
into
leave
outsl
inc
fs
push
test
mov
mov
xchg
mov
pushf
lret
lea
jnp
imul
mov
lds
mov
xchg
xlat
cmp
lea
iret
adc
mov
paddd
push
les
push
pop
jae
sub
jge
lea
jg
push
mov
jp
mov
sbb
jno
aaa
fldenv
xor
mov
js
mov
leave
repz
pop
lock
sub
jne
push
xchg
imul
pop
stos
mov
cli
cmp
mov
jne
ds
rorb
decb
mov
mov
push
mov
jp
imul
das
lods
je
push
test
sbb
outsb
es
sub
mov
in
cwtl
shlb
sub
fidivrl
jle
cmpsl
xor
mov
out
leave
loope
jp
outsl
xchg
jge
rcrl
or
cwtl
xchg
imul
out
cs
movsl
pop
inc
adc
out
ss
jge
mov
ja
xchg
mov
jg
outsl
mov
mov
jbe
mov
dec
iret
lods
xchg
js
enter
lcall
mov
inc
cmc
aam
lret
cld
addb
mov
outsb
sbb
pop
inc
push
jae
adc
out
fwait
jns
lret
lahf
mov
outsb
std
cli
clc
jbe
mov
dec
jns
xchg
adc
aaa
inc
jge
nop
js
push
xchg
shrb
jae
subb
rorb
add
out
clc
fwait
jne
or
fiaddl
cwtl
xchg
mov
cmpb
lret
ja
mov
push
in
inc
push
xchg
jbe
inc
test
sbb
pusha
lahf
dec
mov
sbb
inc
cmp
fnstcw
int3
shr
mov
iret
push
fucom
test
jb
adcb
inc
jns
or
lret
lcall
mov
push
repnz
xlat
add
into
test
jns
add
mov
xor
push
push
lret
test
je
cmp
int
andb
aam
mov
sub
leave
fists
lds
mov
call
mov
lods
xchg
out
gs
xchg
add
mov
fisubs
ja
lcall
into
xchg
jno
xchg
cmp
les
jl
or
ficoms
add
lock
jno
repnz
imul
in
adc
out
xlat
loop
mov
dec
js
aam
subl
xorb
sbb
xchg
imul
mov
cwtl
xchg
xor
xor
pop
aas
xchg
mov
fwait
lret
mov
jae
jns
dec
inc
sbbb
jno
pushf
sahf
xor
dec
inc
sbb
lret
insl
mov
test
pushf
or
jl
mov
dec
adc
push
pop
ja
mov
cmp
jecxz
adc
insl
stc
aaa
leave
pop
cmp
xchg
daa
mov
xor
jne
test
ja
push
push
or
sti
cmp
cld
cli
and
addr16
inc
iret
popa
fnstcw
pop
jb
jge
ja
xlat
popf
mov
xchg
fnstsw
mov
mov
sub
inc
shrb
add
ljmp
or
mov
mov
pop
jg
mov
into
xchg
mov
insb
jae
jno
jnp
xlat
or
call
addb
mov
iret
into
xchg
out
fcmovb
rorb
data16
cmp
cltd
shrb
stos
aas
xorb
mov
mov
jne
into
iret
shlb
shlb
cmc
xchg
nop
and
jg
lahf
mov
jne
fnsave
mov
outsl
jb
mov
xor
pushf
fld
jp
fwait
imul
jp
or
pop
xchg
mov
outsl
js
fcmove
orb
cmpl
mov
pop
mov
or
lcall
add
imul
adc
inc
insl
push
mov
mov
mov
dec
fnstsw
pushf
xchg
leave
addl
rcr
xchg
xchg
jp
int
sub
pop
push
lods
dec
cltd
leave
or
xchg
pop
test
fcmovnu
inc
pushf
jecxz
mov
out
ja
aaa
push
push
into
sbbb
jge
ja
jmp
jno
iret
add
dec
jo
mov
int
jbe
arpl
jns
jle
push
daa
xchg
xchg
sahf
nop
outsb
add
mov
jno
jae
je
lods
xchg
jns
xor
jo
into
rcr
xlat
int3
mov
dec
inc
orb
insb
orb
lods
outsl
nop
mov
repz
fcoms
push
daa
mov
lcall
jo
xchg
add
imul
rorb
xchg
jb
jp
lea
sub
sub
sbb
push
pop
sti
xor
dec
ja
je
lret
aad
js
sub
movsl
repz
jne
mov
out
mov
inc
pop
popf
nop
lret
mov
mov
and
int3
leave
je
ret
rcr
insb
sub
mov
pop
adc
xchg
enter
stc
cmpsl
dec
lret
jae
popa
test
incb
jnp
inc
in
rep
shrl
orl
cmp
cmp
mov
insb
nop
sahf
push
addr16
sbbl
cli
lea
out
mov
mov
inc
lret
jl
cli
pop
nop
xchg
pop
xchg
mov
fwait
xlat
add
mov
push
inc
xchg
add
je
jecxz
xchg
mov
adc
into
out
subb
jl
fists
int
dec
test
out
mov
lods
aam
scas
cmp
mov
dec
mov
pushf
imul
jl
inc
lret
bound
push
out
pop
sub
sub
fcmovnu
sub
int
pop
imul
je
iret
cs
or
test
jl
test
iret
mov
in
add
insl
test
js
sub
mov
mov
cltd
mov
xor
ror
in
xchg
cmp
imul
or
mov
mov
jle
cmp
push
jo
pushf
cwtl
aaa
dec
cmp
xor
loopne
je
adc
lock
push
add
push
adc
and
mov
mov
out
mov
pop
into
push
mov
jge
insl
pop
dec
movsl
fwait
lds
mov
imul
aam
xchg
imul
mov
fists
es
sbb
push
cmpsb
ja
or
xor
mov
in
cmpsl
dec
mov
push
loopnew
jp
int
mov
or
loop
insb
cmp
outsl
rep
in
call
int3
xor
fwait
aaa
pop
push
es
lcall
mov
mov
cwtl
ret
jae
int3
js
pop
pop
jnp
add
adc
mov
mov
sbb
dec
xchg
xlat
lea
imul
xchg
leave
xchg
iret
xchg
insb
pusha
jne
cmp
cmpsl
jb
inc
lret
xchg
test
mov
lret
inc
test
lods
jb
or
xchg
int
pop
mov
push
bswap
mov
push
shll
inc
dec
jle
inc
lods
xchg
xchg
jno
jl
cltd
aam
or
lea
sbb
sbb
mov
mov
rcl
aam
rcll
mov
sub
fsts
adc
sarb
jae
mov
jo
mov
js
les
mov
xchg
xor
ja
xor
push
test
lea
jg
fstl
rcrb
lret
pushf
popf
mov
pop
dec
icebp
xlat
cld
and
loop
fwait
cltd
push
add
mov
lea
mov
adc
jbe
fldt
ds
mov
test
cmp
jne
enter
cmp
mov
cmp
jb
out
add
arpl
imul
fwait
jns
xchg
rclb
pop
mov
jg
mov
lcall
xchg
mov
pushf
fs
js
int
out
jp
lret
ja
sub
xlat
jg
fnsave
xchg
test
dec
push
jle
jnp
add
movsl
iret
insl
sbb
mov
xchg
popf
lahf
fnsave
push
jg
bnd
mov
mov
popf
aaa
imul
sbb
jecxz
je
mov
mov
mov
insb
xor
mov
nop
mov
dec
mov
xchg
imul
xchg
mov
cmp
lret
jge
xor
imul
in
jnp
xchg
popf
cmp
enter
inc
outsl
push
xchg
arpl
insl
adc
outsb
mov
std
addr16
mov
cmpsl
cmp
in
xchg
andl
jp
fisttps
aaa
rcll
loop
int
pop
mov
cwtl
jo
lods
fs
push
mov
movsb
or
sbb
mov
jnp
fisubs
push
rolw
jl
push
mov
js
mov
mov
sub
sbb
jo
jg
push
mov
sahf
mov
xor
out
mov
xlat
in
ffree
jg
inc
repnz
xchg
mov
jle
push
xchg
adc
dec
mov
xlat
outsl
ja
lea
rcr
inc
in
jg
sahf
ja
scas
jne
imul
test
bswap
out
int3
push
or
xor
mov
sub
bound
or
lcall
out
jb
mov
jns
mov
fwait
iret
jns
cltd
movsl
inc
dec
inc
lods
xorb
xor
out
je
je
cmp
pusha
mov
add
lahf
jle
js
xchg
cmp
cli
jo
pop
jae
ud1
xchg
icebp
jecxz
jb
lret
xchg
cwtl
fsubrs
and
sahf
sbb
xchg
jns
insl
fimull
addr16
lcall
iret
fwait
outsl
dec
outsl
xor
aas
pop
je
sarb
out
jns
cmp
xchg
nop
jge
inc
push
enter
insl
sar
mov
ja
adc
dec
fsubrl
jg
aam
mov
inc
lods
arpl
lods
call
push
lahf
in
dec
jno
outsl
movsb
jle
out
push
imul
lcall
push
nop
sbb
lahf
inc
jns
cli
repz
fcmove
cmc
lcall
lret
jge
jnp
mov
jne
jle
jnp
cld
mov
in
arpl
add
adc
dec
inc
lds
andb
jp
es
inc
lret
das
js
mov
leave
jb
push
jge
lods
cmp
adc
in
push
adc
or
or
je
mov
jle
mov
ret
fsubrs
mov
jle
push
mov
mov
or
imul
mov
jns
mov
sub
out
imul
cmpb
pop
mov
mov
jge
jns
movsl
or
leave
sub
js
sahf
lea
jo
mov
xor
lret
jle
in
in
jb
mov
outsl
sti
xor
push
mov
lea
ret
push
loopne
andb
xor
arpl
jp
mov
jns
mov
test
loopne
xchg
add
aaa
pop
es
jle
cmp
outsl
xchg
nop
jns
cmpsl
adc
mov
addr16
dec
es
jne
inc
adc
push
lret
mov
xchg
inc
inc
mov
jge
rcrb
jg
sbb
mov
xchg
jnp
xor
jo
cmpsl
cmp
jp
jns
adc
xchg
scas
jg
ja
cli
loope
xlat
aad
jl
cwtl
nop
jbe
jne
jnp
push
and
mov
adc
int
pop
jb
mov
mov
leave
lock
iret
nop
mov
inc
js
sarb
sarl
pop
xor
filds
test
imul
xchg
daa
push
xchg
xchg
push
movsb
mov
addr16
ja
xor
leave
push
je
or
jns
inc
inc
mov
xchg
cltd
shlb
inc
inc
pop
jp
jns
fistl
pop
mov
sahf
js
fadds
lret
mov
jae
repnz
cwtl
das
test
aam
sub
mov
int3
xchg
pop
ror
sub
jp
add
xchg
jg
mov
xchg
dec
shll
rorb
cwtl
insl
pop
cmpb
xlat
or
pop
aaa
adc
iret
xchg
pushf
jp
adc
mov
cwtl
das
add
xchg
cld
jns
mov
jne
inc
stc
arpl
int
and
lds
leave
sub
lods
fdivrs
cld
lcall
ret
test
stos
outsl
test
xchg
xchg
iret
fcmovne
jne
lret
cltd
adc
popf
imul
in
mov
adc
outsb
inc
lcall
insl
jbe
jne
dec
pop
ficomps
ds
mov
mov
xchg
xorb
jnp
mov
push
xchg
aam
jl
or
test
or
xchg
mov
lea
cmpsb
out
lret
subb
movsl
mov
mov
mov
inc
jno
dec
mov
imul
jecxz
or
es
xchg
iret
jae
cmp
mov
mov
lcall
sub
ja
add
loope
jmp
movsl
sarl
test
fistps
into
sbb
stos
pushf
movsb
mov
rolb
ja
jle
jl
and
daa
inc
sti
xchg
scas
clc
pop
jbe
lret
lret
fadd
cmp
mov
outsl
lahf
jl
jmp
arpl
inc
jb
mov
fwait
lcall
mov
stos
sahf
push
sbb
iret
in
push
sbb
dec
ret
push
dec
rcrb
xchg
xchg
pop
xchg
mov
ret
insl
sbb
movsl
rcrl
jns
mov
mov
xchg
mov
cltd
mov
dec
or
out
xorb
out
fisttpl
jl
fstl
out
pusha
jno
mov
out
lret
jp
mov
mov
lret
and
jo
lea
jne
xchg
push
mov
xchg
nop
jae
mov
jl
adc
jg
push
pop
out
inc
aad
xor
mov
clc
jle
insb
in
lahf
inc
fcomi
lods
sbb
sbb
xchg
sti
jge
call
lahf
or
mov
xchg
jge
adc
movb
ja
fcomip
add
rcrb
mov
int
mov
daa
pushf
lahf
push
xchg
cmp
fwait
mov
nop
imul
js
cld
xchg
outsb
push
and
mov
mov
inc
xlat
fistl
mov
jae
aad
mov
jo
xor
push
mov
adc
xlat
imul
int3
hlt
jl
push
add
sub
adc
mov
sahf
mov
mov
add
lcall
hlt
mov
lods
xchg
jno
mov
mov
cltd
cmp
js
sub
aam
jle
les
mov
insl
mov
rcrl
cmp
or
sarl
lahf
test
xor
mov
rorb
pop
int3
insl
outsb
test
adc
je
mov
stc
in
xor
xchg
jle
jae
cwtl
mov
int
mov
jno
or
out
xchg
sbb
push
fisttpl
lcall
jae
int
ret
mov
out
test
popf
push
cmp
dec
cmp
pushf
adc
xor
xlat
xchg
push
adc
enter
divl
int
jns
out
mov
js
xchg
mov
test
pop
xchg
mov
cpuid
rcr
sub
xor
mov
popa
mov
dec
insl
adc
imul
andb
mov
iret
mov
dec
lret
ror
jne
test
outsb
iret
cltd
jns
mov
pop
sub
inc
imul
jp
mov
lock
sub
jno
push
int3
xchg
sahf
jns
xlat
mov
jo
leave
outsl
call
insl
cmp
jl
adc
push
int3
lcall
lea
jns
mov
stc
xchg
pop
xlat
mov
fwait
aam
push
or
inc
mov
mov
scas
xchg
je
mov
inc
imul
sbb
js
jne
jmp
hlt
xchg
arpl
mov
push
cli
and
xchg
mov
push
outsl
je
lods
mov
lahf
int
iret
mov
jmp
iret
daa
inc
inc
outsl
mov
les
das
mov
add
into
das
xchg
fwait
jo
arpl
int
add
jg
xchg
fwait
aaa
imul
imul
mov
into
mov
jbe
lea
jle
sub
jb
lcall
test
pcmpeqb
mov
pop
subb
je
sahf
imul
leave
rcrb
cwtl
lcall
outsb
test
popl
jbe
jle
jnp
iret
imul
inc
jnp
out
inc
cld
test
jae
and
jne
push
jg
rcrl
xchg
sbb
ja
test
xchg
mov
sbb
pop
inc
int3
jno
dec
mov
or
test
xchg
xchg
mov
cltd
mov
xchg
fcmovbe
fwait
ja
ds
aad
cltd
subl
inc
xchg
push
jno
mov
sbb
xlat
sbb
mov
imul
pop
jnp
ljmp
sbb
das
fsts
jbe
and
cmp
push
rclb
insb
stos
mov
fistl
sbb
xchg
lea
bound
lfs
rcll
mov
xchg
ja
mov
dec
mov
cwtl
aam
sbb
push
pusha
movsl
add
push
leave
test
xchg
cmp
jl
mov
imul
xchg
jle
jp
mov
stc
xchg
inc
insl
jb
adc
adc
sti
je
cli
rorl
cmp
outsl
push
mov
hlt
dec
jmp
and
jg
sbb
fldl
and
jb
insb
jnp
jbe
sub
mov
leave
divb
cltd
js
int3
jae
sbb
sti
cwtl
lea
pop
mov
lret
or
mov
xchg
mov
add
iret
ljmp
sahf
sbbb
lret
seta
mov
xchg
jmp
mov
mov
xlat
inc
jbe
cmp
cltd
lea
fwait
leave
xchg
jg
in
xchg
popa
sarb
cs
stc
mov
inc
cmp
lret
xchg
mov
movsl
cmp
xchg
xlat
lahf
jmp
cwtl
loop
xchg
mov
aam
adc
int
js
das
jle
arpl
cmp
inc
insl
or
sarb
cltd
jle
js
loopne
mov
cmp
push
test
inc
fsubrs
stc
leave
jo
cltd
jo
insl
xor
jl
or
mov
add
outsl
lds
rcr
iret
jg
xor
pop
inc
jge
pushf
jle
mov
xchg
adc
mov
cmp
test
popl
nop
xchg
hlt
adc
js
push
add
addl
mov
movsl
adc
or
rcrb
leave
lahf
inc
outsb
push
pop
lods
jg
imul
mov
push
imul
fwait
lcall
xchg
mov
jle
pop
inc
mov
cmp
cmp
outsb
leave
xchg
xchg
cmp
daa
popf
lret
xchg
sbb
xlat
iret
pop
sbb
xchg
mov
mov
xchg
mov
lahf
xlat
inc
add
pushf
cmp
lods
dec
xchg
les
imul
xor
aad
lret
rorb
push
jo
inc
xchg
xchg
jb
jo
fsubrs
xchg
mov
mov
inc
arpl
int3
cmp
mov
das
pop
jp
cmpsl
pop
xchg
and
cwtl
in
lcall
sahf
add
mov
jnp
jecxz
mov
lret
ja
out
mov
inc
push
lea
daa
xor
js
int
inc
mov
jb
xchg
mov
insb
imul
mov
cmp
mov
nop
mov
jge
sbb
dec
insl
aam
adc
sahf
insb
lods
mov
loop
lahf
outsl
pop
daa
lret
out
cld
dec
xor
cmp
adc
xor
adc
jno
ret
jb
insl
nop
pop
xchg
call
mov
punpckhwd
xchg
int3
sub
pop
clc
add
push
xchg
sahf
jne
jno
repz
cmpsl
mov
jns
cwtl
fwait
jmpw
sub
dec
dec
lods
imul
enter
enter
push
adc
adcl
fwait
add
fists
jnp
stc
js
push
sub
ds
inc
add
arpl
sets
fists
sbb
or
jno
inc
xchg
or
fadd
leave
mov
pop
or
jne
push
and
lods
js
repz
xchg
and
jns
adc
xchg
adc
out
int
sbb
mov
or
mov
push
mov
mov
lret
add
insb
jle
leave
jbe
push
das
or
aaa
into
inc
out
jae
test
sti
js
cmc
mov
jbe
jp
imul
pop
mov
js
iret
lret
into
out
fwait
mov
xchg
jg
std
xchg
mov
lahf
das
arpl
jbe
push
test
xchg
xlat
movsl
leave
mov
mov
mov
mov
bound
das
and
jge
pushf
std
cwtl
mov
leave
xchg
jo
aas
insb
jb
mov
aam
mov
inc
xchg
cmp
lcall
rclb
inc
pushf
dec
cmpb
xchg
jl
pop
cmp
mov
jg
xlat
fcomps
das
jae
test
outsl
cli
nop
ja
jnp
jno
mov
jb
lahf
mov
jle
cmp
iret
jno
int3
jp
into
xor
xchg
nop
jecxz
push
pop
sbb
jo
je
cmpsb
cmp
lahf
mov
cwtl
add
fbld
mov
and
or
sbb
js
jb
mov
jmp
adc
jbe
fsubrs
cmp
je
xchg
imul
jl
mov
xor
ds
lret
cmp
ret
fisttpll
sahf
mov
xchg
mov
adc
push
inc
hlt
ret
sarl
ja
aas
xchg
jl
dec
aaa
fistl
pushf
adc
cwtl
pop
mov
mov
xchg
and
lock
icebp
lahf
xchg
xchg
lret
mov
lret
xchg
ret
ds
pop
call
je
inc
xchg
lea
lea
jnp
subb
int
mov
push
outsl
jno
fxch
lcall
cwtl
inc
insl
push
lea
mov
fucom
addl
sarl
aad
mov
mov
cltd
dec
mov
jle
cmpsl
mov
lahf
in
repz
cltd
mov
nop
iret
inc
mov
xor
jle
shlb
data16
test
push
mov
nop
aas
fwait
data16
daa
push
leave
dec
nop
test
enter
jb
and
ds
jg
into
cmp
xchg
iret
sarb
and
faddl
leave
jecxz
aam
dec
das
outsb
imul
lret
or
mov
jae
xor
js
call
inc
ret
fists
sub
push
cli
xor
lret
fcmovnbe
insl
adc
addb
sbbb
pop
sti
jae
xchg
filds
jae
aam
and
pop
loop
mov
or
inc
mov
lret
fwait
leave
push
inc
daa
ret
lret
js
int3
iret
outsl
inc
jmp
data16
dec
xchg
mov
into
inc
mov
sbb
push
stc
pop
pushf
aas
xor
jge,pt
rclb
mov
lahf
xor
ds
push
pop
daa
insb
int3
lcall
jno
cs
mov
iret
xchg
mov
into
shll
pushf
dec
sahf
testl
pop
shrl
xchg
mov
imul
sub
cld
adc
stc
pop
out
jbe
jnp
xchg
jo
imul
cmp
inc
lods
insb
mov
mov
xor
cmp
xor
pop
daa
xchg
xchg
jp
sahf
out
int
xor
shlb
adcb
xor
gs
vcmpsd
vphadduwd
adc
jle
js
iret
xchg
pop
lret
je
xor
cltd
int
xchg
inc
outsl
into
orb
mov
pushl
imul
int
jns
je
pop
pop
pop
xchg
jge
sti
pop
in
sahf
ja
popa
mov
outsl
xchg
sbb
in
add
outsb
leave
popa
clc
fnstsw
jns
jp
daa
xchg
mov
xchg
imul
mov
or
sbb
nop
fwait
mov
mov
push
iret
jle
lcall
adc
mov
jge
lods
insb
lret
mov
jb
cmovbe
mov
inc
inc
aaa
ds
xorb
inc
out
xor
subl
cmc
pushf
adc
inc
inc
sbb
jp
lea
insb
push
push
in
shlb
add
add
or
mov
nop
rorb
inc
sbbb
arpl
addr16
data16
test
call
jae
xor
xor
pop
xchg
lret
pop
push
sahf
aaa
and
iret
pushf
decl
add
popf
xor
pop
out
cmp
xchg
fmul
xlat
sub
dec
pushf
xchg
seto
into
dec
adc
inc
adcl
lret
sbb
add
outsb
xor
mov
dec
xchg
loope
sahf
dec
cli
or
nop
mov
iret
jne
xchg
js
xchg
lea
xlat
jae
ja
mov
jb
call
ljmp
mov
cmp
pushf
xchg
fwait
rclb
xor
popl
leave
outsb
mov
js
mov
insb
or
push
mov
rcrl
aaa
js
lahf
ficomps
int
jns
jg
fldt
ja
fcmovnu
lcall
add
jg
add
mov
jns
xchg
jb
jp
xchg
jle
mov
xchg
rcr
push
mov
orb
insl
in
sarb
jle
sub
jle
cmpsl
cmpsl
jo
in
lahf
int3
imul
jbe
or
push
int
jns
repz
jae
jmp
lods
imul
jo
int3
cltd
test
mov
arpl
leave
nop
aaa
push
fistps
push
add
add
cmpsb
mov
mov
add
xorl
roll
fwait
into
jbe
ret
inc
mov
lea
push
mov
aam
das
cwtl
and
jecxz
sahf
inc
add
out
scas
push
sbb
sahf
lock
adc
inc
inc
clc
add
xchg
xchg
imul
insb
xchg
andb
jecxz
aam
mov
hlt
mov
jns
arpl
rol
fidivl
cmp
or
xorb
inc
ja
jp
or
xor
outsb
ror
insb
imul
add
cltd
aam
mov
mov
insb
je
iret
cwtl
xlat
jb
popa
in
xchg
lcall
leave
push
fidivrs
jl
mov
fdivrs
lea
push
mov
aad
mov
mov
inc
add
or
xor
cmpsl
mov
ja
dec
lret
cmpb
lea
jne
cmpsl
sbb
push
sahf
inc
aad
sarl
sbb
jbe
mov
xchg
xor
outsb
mov
rorb
int
pushf
nop
push
jnp
cmp
mov
xchg
jb
lea
lret
pushf
cld
imul
iret
push
push
mov
sahf
dec
fwait
lods
jbe
push
push
jne
cwtl
outsl
movsl
test
jae
outsl
mov
xchg
into
jl
js
outsb
rorl
pop
mov
xchg
cmp
xor
pop
cmp
je
lcall
push
cmp
imul
xchg
jb
repz
into
xlat
rcl
jo
arpl
iret
dec
nop
or
aam
and
stos
push
mov
test
iret
jb
stos
jg
or
lahf
shl
imul
cmp
ja
jno
popa
jl
pop
iret
mov
fistpll
push
cmp
imul
xchg
cltd
xchg
shrb
inc
je
pop
mov
nop
mov
ja
mov
pop
inc
xchg
lret
scas
into
cwtl
lret
outsb
cmpsl
jb
jp
jo
mov
inc
insb
pop
pop
icebp
or
mov
or
xlat
sbbl
stc
shr
mov
imul
jp
xlat
pop
popf
mov
aaa
aas
lods
lret
push
dec
mov
jg
inc
movsb
rorb
dec
fwait
in
add
cmp
mov
in
xchg
push
cmp
or
mov
jbe
inc
test
in
je
in
jb
or
mov
lahf
jns,pt
cld
cmpsb
jns
js
test
int3
lahf
outsl
data16
jne
pop
jnp
sub
cmp
xchg
xchg
mov
xchg
leave
lret
imul
inc
pop
aaa
rclb
jae
xlat
or
mov
mov
mov
add
adc
sub
in
push
cwtl
mov
daa
jp
orb
mov
pop
lret
lahf
sbb
out
xchg
mov
mov
into
xlat
sbb
arpl
cmpsl
call
test
mov
inc
dec
or
jge
mov
push
mov
mov
push
lcall
xchg
aad
fldcw
jb
mov
leave
js
pop
packssdw
mov
lods
aam
ss
xchg
inc
sub
ja
cwtl
addr16
popf
into
mov
pop
mov
xchg
mov
in
xlat
jo
jae
insl
insb
xorb
jbe
inc
mov
xchg
mov
js
dec
inc
or
iret
popf
jno
jbe
dec
pop
ds
pop
es
jo
xchg
arpl
push
jecxz
add
lret
push
outsl
xlat
push
jle
jbe
cmp
pop
outsl
xchg
mov
fwait
mov
jbe
push
lcall
ret
lahf
sahf
jae
bound
cld
cmp
ret
fidivrl
adc
jg
mov
mov
push
xchg
imul
sbbb
xchg
cld
bound
add
mov
or
test
xchg
out
mov
iret
aaa
sub
jno
jl
jbe
jnp
push
arpl
jp
into
mov
jno
jb
jge
and
inc
in
jmp
sarb
xor
inc
cmp
cmpsb
out
sbb
lret
push
jg
mov
lahf
js
inc
sub
jmp
inc
aam
mov
pushf
xchg
fwait
mov
inc
rolb
and
mov
xchg
sahf
pushf
loopne
jmp
mov
mov
into
sbb
xchg
rorl
xchg
jp
lret
mov
mov
pop
sub
int
rcr
jb
mov
into
lods
xchg
push
cld
cmc
cwtl
lea
jae
call
mov
int
jb
fildl
rcll
xchg
lret
sub
leave
xchg
mov
and
jg
xchg
les
cmp
fldt
lods
xchg
mov
dec
xchg
jnp
dec
in
ficoml
mov
fcom
aam
lret
fmuls
inc
push
push
daa
sub
outsl
mov
jns
jns
cmp
inc
jb
dec
das
std
and
cmp
mov
push
sbb
daa
lret
lea
int3
into
mov
leave
adc
rclb
mov
into
pop
iret
in
int3
cltd
mov
aad
xlat
dec
fstl
lods
mov
repnz
mov
push
imul
or
and
nop
mov
lods
insl
pushf
mov
xlat
xor
lock
mov
imul
fstpt
mov
xchg
xlat
dec
push
mov
mov
push
in
sub
sub
std
test
into
jge
xchg
mov
mov
imul
fldl
dec
fnclex
mov
cwtl
mov
xchg
jo
xor
adcb
mov
test
mov
clc
dec
or
xchg
mov
cmp
mov
mov
dec
cmpb
cmp
inc
xchg
cltd
lret
jno
sub
dec
addb
fnstenv
inc
push
testl
mov
or
jae
jl
jno
xchg
xor
mov
jne
lods
lcall
outsl
mov
mov
xchg
xor
mov
mov
popf
mov
jb
clc
jno
pushf
xlat
cmp
movsb
rcrb
xchg
jl
outsl
iret
mov
cmpl
pop
jle
push
jns
cmp
mov
xchg
es
mov
push
cwtl
lcall
mov
lods
jns
adc
js
inc
inc
sbb
movsb
mov
fwait
sbb
inc
inc
pop
out
push
lcall
je
pop
jp
lahf
outsl
mov
or
imul
xchg
sub
mov
mov
jne
ret
scas
outsl
iret
inc
insl
jae
lret
js
fcmovnb
lods
xchg
lods
mov
xchg
insl
xchg
mov
les
sar
jns
stc
rorb
cmp
push
xor
cmp
mov
push
lock
test
fwait
pop
sbb
jnp
adc
mov
dec
xchg
push
xchg
je
stc
mov
mov
movsl
popa
push
stc
loope
lcall
cmp
jl
cmpsl
dec
orb
mov
xchg
sbb
into
insl
aaa
out
or
je
mov
in
jno
add
jb
xchg
inc
push
jle,pn
out
xor
enter
mov
lea
mov
out
int
movsb
lds
mov
dec
iret
xchg
ds
int3
jle
sti
scas
mov
cltd
xor
jg
stos
sbb
mov
jae
mov
adc
arpl
ja
mov
sbb
sub
mov
cmp
js
mov
pavgb
and
jns
jno
je
cmpsl
iret
xor
nop
aam
xchg
ja
lea
fsubrs
push
outsl
out
jne
popf
sti
inc
adc
lret
cwtl
jno
cmpsl
pop
nop
aaa
mov
xchg
into
jne
sbb
mov
pop
cwtl
out
pop
xor
mov
adc
pop
ja
addb
dec
fcomp
cld
sub
jp
jp
mov
outsb
ss
stos
sbb
jl
pop
shrl
jg
mov
mov
fmuls
sub
mov
fwait
mov
test
call
mov
test
call
setle
in
outsb
inc
add
insb
xchg
dec
jno
cltd
call
clc
les
clc
cld
sub
das
dec
push
jl
lret
xchg
leave
outsl
push
mov
insl
stos
mov
jp
jo
jns
push
das
pop
jbe
pop
mov
imul
xor
in
xchg
pop
movsb
mov
mov
popf
mov
cs
mov
mov
push
jnp
and
jne
mov
adc
es
lret
das
in
lcall
pop
test
imul
cmpsl
nop
jae
subb
xchg
into
push
daa
in
jbe
lret
imul
xlat
js
or
out
jo
test
ja
xchg
rorb
icebp
jg
rcl
cwtl
ret
mov
cmp
pushf
mov
in
xor
jo
xchg
fnstsw
cmp
xor
pop
add
int3
push
xchg
inc
js
pop
rorb
jp
in
pop
lahf
subb
ret
jne
inc
fistl
daa
mov
xchg
mov
into
xchg
mull
in
xchg
xlat
inc
or
jne
xchg
mov
in
mov
inc
sub
adc
xchg
lods
jae
jl
or
mov
mov
ja
popf
shlb
stos
or
je
jns
enter
mov
xor
inc
addr16
int
adc
xchg
lret
outsl
nop
into
push
xchg
pop
arpl
mov
xchg
or
mov
push
sub
mov
out
mov
cltd
cmpl
imul
xchg
mov
jg
pop
das
ja
jne
cltd
testb
or
shrb
insb
jg
inc
das
rolb
jae
test
andb
xchg
cld
cmpsl
mov
lcall
pop
sarb
ret
add
sbbl
sti
aam
mov
xchg
mov
imull
and
xor
iret
mov
ja
outsl
in
or
mov
fdivs
add
mov
dec
outsl
fbstp
xchg
push
cmp
mov
int
je
jnp
mov
lods
xorl
jbe
stos
xor
outsl
push
mov
sti
jno
lret
leave
mov
and
xchg
push
sub
xchg
jge
xchg
mov
or
int
fwait
pop
mov
sub
jno
pop
mov
ja
lods
jno
out
sbb
mov
jl
hlt
loop
pop
leave
adc
xchg
xlat
outsl
xor
mov
clc
dec
inc
pushf
icebp
sbb
out
mov
jmp
xchg
pushf
or
pop
lock
jnp
push
icebp
insl
popl
insl
add
je
lea
xor
jg
addl
cli
or
sar
nop
pop
in
mov
pop
push
pop
mov
out
xor
rol
popf
outsb
mov
lcall
std
fwait
loopne
jge
pop
out
mulb
insl
lret
push
mov
adc
sahf
jb
pop
test
pop
jl
aam
xchg
iret
and
cmp
cwtl
xchg
sub
jae
pop
xchg
jo
ret
inc
sbb
or
push
mov
xchg
xchg
add
cmpsl
stos
and
xchg
xchg
mov
jbe
aad
xchg
xchg
jg
mov
mov
les
insb
lcall
out
inc
js
mov
jns
cld
inc
aam
cwtl
or
sbb
jge
sbb
lret
jnp
sbb
inc
xchg
mov
imul
mov
pop
xor
or
xchg
xchg
iret
inc
cwtl
mov
mov
xchg
cmp
ja
repz
jno
jno
ds
int3
cmp
nop
jl
js
inc
mov
push
lcall
rcrl
cli
jae
xchg
nop
jl
jo
sub
jno
sbb
add
leave
into
inc
push
sarb
fmul
or
xchg
into
adc
mov
jae
jmp
imul
fildll
jns
iret
or
ljmp
mov
push
fld
add
pmovmskb
orb
pop
jns
pop
or
imul
ret
cmp
outsb
je
ja
shll
xchg
call
lret
ds
pop
jb
data16
pop
jmp
jle
daa
sbb
xchg
mov
lahf
mov
fstpt
xor
inc
orl
mov
or
mov
jbe
jns
subb
xor
jp
mov
pop
int3
jae
lods
shrb
mov
outsl
push
fnstsw
lret
jno
pop
xorl
sub
pushf
repnz
jl
je
cwtl
xchg
cmpl
aam
inc
cmp
and
mov
pushf
into
enter
mov
mov
outsb
inc
adc
movsl
imul
adc
js
into
cmpsl
sbb
lret
stos
cwtl
mov
test
leave
push
jmp
je
lcall
jo
into
addr16
mov
out
iret
sahf
xlat
jp
xchg
pop
cltd
outsb
mov
cli
add
sbb
sub
adc
jg
mov
mov
mov
inc
insl
xchg
or
lods
push
mov
mov
push
sbb
arpl
js
mov
in
cli
add
dec
gs
cwtl
or
jae
add
imul
cmp
inc
cmp
js
inc
rorb
jne
lods
into
push
mov
arpl
jb
push
into
pusha
popf
jo
xor
or
cmpb
pop
aas
fdivs
sbb
add
mov
mov
sub
scas
fistpl
inc
jg
ja
adc
xchg
pop
add
xchg
and
insl
sahf
test
mov
jae
fstpl
dec
mov
jb
mov
jl
imul
jg
lock
jp
lods
bound
stc
es
jns
and
jbe
inc
sbb
fnstsw
jnp
pushf
aas
and
iret
cmpsl
mov
mov
ja
out
jle
xlat
pop
push
xchg
jl
mov
pop
js
jae
les
repnz
mov
out
xor
imul
xchg
xchg
int3
jmp
fisubl
inc
sbb
mov
nop
mov
cmp
cwtl
add
jge
adc
jg
jge
inc
aad
ja
ror
xchg
into
xlat
push
mov
mov
xchg
lahf
cmp
or
mov
int3
fstpl
js
hlt
mov
stos
and
jb
aam
nop
gs
jbe
and
xor
push
movsb
rcrb
mov
sub
mov
xlat
cltd
dec
xor
dec
cmpl
popf
xchg
movsl
hlt
inc
jp
pop
das
ret
xlat
nop
mov
push
out
aad
mov
or
dec
fwait
out
jbe
inc
sub
imul
xchg
leave
jl
xor
jo
sbb
loopne
cmpb
jp
call
jnp
jno
imul
push
jne
outsl
mov
imul
push
mov
lcall
aam
xchg
adcb
je
and
or
and
lret
mov
loopne
inc
scas
fdivs
xor
addb
xchg
xchg
jnp
mov
mov
pop
arpl
aad
mov
jnp
sub
sub
nop
xchg
inc
outsl
jae
sub
lea
jp
test
movsl
inc
cmp
les
jnp
test
aam
pop
je
inc
fnsave
fnsave
iret
fsubs
arpl
stos
lret
jg
cmp
mov
insl
cmp
jnp
lock
push
lea
push
mov
mov
shll
stc
les
jns
cld
test
andl
add
aam
mov
js
cwtl
sbb
mov
jae
outsl
add
add
notl
jle
inc
dec
call
insl
jge
inc
jae
xchg
jo
xor
push
loop
mov
out
jge
mov
outsl
mov
jg
out
mov
jns
out
jmp
cmp
lea
lds
daa
pop
sahf
das
gs
aad
xchg
lret
leave
mov
pop
das
add
jbe
adc
xchg
insl
jns
gs
adc
roll
pop
jo
into
xchg
xchg
ror
dec
xchg
mov
ret
mov
mov
stos
mov
lods
jb
sub
inc
or
iret
xchg
pop
popa
lcall
jne
aad
adc
popf
stc
jbe
lea
jnp
inc
fadds
mov
lock
jmp
or
pop
dec
mov
cltd
aas
mov
push
loope
or
cmp
jge
and
cltd
cwtl
add
jae
push
push
les
cltd
jmp
mov
out
xchg
jo
jne
cmp
cwtl
mov
jle
lods
roll
jbe
sarl
jne
sti
add
fstl
sub
imul
int
out
dec
das
stos
lods
xchg
jo
in
mov
enter
xor
lret
or
popf
xchg
cmpb
int
outsl
imul
jae
adc
outsb
iret
mov
test
lea
ja
xchg
inc
jle
daa
lods
test
test
mov
fbstp
jno
pop
push
add
into
xor
test
adc
push
xor
ja
adc
mov
shll
xchg
setp
add
mov
je
cmpsl
in
mov
addb
inc
aaa
xchg
sahf
lcall
mov
aam
jg
inc
imul
sub
popf
mov
sbb
adcb
out
js
pop
inc
insl
inc
aam
xlat
fnsave
xor
std
sti
stc
aaa
data16
mov
lods
ja
xchg
push
push
mov
jns
test
lods
mov
push
cmp
jae
pop
lds
sahf
jl
inc
rclb
fwait
xlat
push
xchg
mov
aaa
fs
test
js
insb
sbb
ret
mov
lcall
rcrb
aad
push
sbbl
daa
pop
cmp
movsl
cmp
lret
cltd
out
int3
ja
insb
rcl
fwait
dec
in
stos
cwtl
ljmp
out
jno
sub
mov
aaa
pop
aaa
jnp
mov
xchg
mov
test
jmp
sbb
jo
pop
mov
iret
cld
xor
sarb
lea
sahf
push
out
icebp
mov
pop
cli
sub
pop
test
int
jp
cmpsb
xor
sub
cmp
xlat
ja
jecxz
iret
xchg
mov
sbb
mov
push
daa
or
xchg
jb
mov
xor
fidivrl
inc
xlat
xor
lds
sub
push
jae
adc
into
leave
setne
inc
inc
sub
jnp
sti
mov
mov
inc
lods
xchg
stos
xor
arpl
jne
ja
jns
inc
lcall
int3
les
outsl
fwait
outsb
dec
iret
mov
mov
leave
pop
mov
inc
notl
test
leave
adc
mov
fcmovnu
leave
lret
xchg
in
jp
insl
inc
inc
fildl
xlat
adc
lcall
repnz
nop
ret
adc
das
outsb
xchg
and
lret
xchg
jl
cld
mov
xchg
test
into
out
andb
sbb
fwait
cmpsl
inc
mov
and
sbb
cmpsl
loop
push
adc
xchg
dec
outsl
mov
mov
lret
xor
push
mov
and
jb
mov
test
leave
dec
fistl
jecxz
js
pushf
adc
leave
js
std
sahf
ja
mov
mov
xor
mov
inc
out
subb
pop
into
xchg
das
popa
pop
je
push
xchg
outsb
imul
test
das
outsb
je
pop
rcr
xlat
iret
xorl
into
xchg
addr16
mov
xlat
xchg
lock
out
int
mov
xor
iret
pop
xchg
add
lahf
mov
aam
push
cmpsb
xor
jnp
jecxz
mov
insl
lods
fwait
rcr
lea
imul
xor
mov
mov
mov
sti
in
cwtl
xor
ror
jo
nop
aam
int3
imul
stos
lret
xchg
je
fsubr
rcl
mov
shrb
lret
xlat
aaa
rorl
pop
pop
sbb
adc
js
pop
xchg
int
sahf
mov
fdivrs
mov
pop
mov
jnp
aam
orb
mov
pop
dec
jp
out
je
into
push
dec
lods
mov
fwait
in
inc
adc
push
mov
sbb
xor
lcall
adc
jg
iret
rclb
and
xor
fnstsw
mov
push
mov
xor
and
jae
orb
mov
nop
scas
pop
xchg
push
das
cmpsb
arpl
test
aas
add
push
push
sarb
add
into
outsl
fwait
test
fdivrs
xchg
mov
mov
mov
lcall
lods
inc
or
or
adc
fwait
sti
out
es
jbe
in
dec
pop
push
mov
popf
mov
mov
imul
xlat
jne
jl
jg
inc
test
mov
and
lock
or
and
das
xchg
fists
jp
jae
sbb
jl
int
imul
or
xchg
xchg
inc
outsb
push
and
mov
cwtl
xchg
xchg
mov
mov
outsl
ficompl
adc
mov
mov
inc
mov
mov
mov
jnp
mov
mov
xchg
into
xor
xchg
jle
mov
sub
aaa
nop
leave
orb
dec
jno
sbb
nop
stc
inc
cld
adc
and
mov
insb
in
mov
stos
mov
mov
xlat
outsb
mov
aaa
loopne
mov
arpl
insl
dec
ficomps
int
pushl
lahf
leave
into
mov
inc
mov
imull
daa
into
lea
stc
sbb
out
fisubrl
mov
sahf
arpl
fwait
jge
jno
jp
jne
add
mov
xchg
jae
jg
dec
outsl
sub
lds
imul
sets
pop
insl
jno
jp
xchg
xchg
sahf
push
sti
push
mov
add
jbe
popf
mov
mov
mov
xlat
xlat
imul
pushf
mov
cli
test
inc
and
adc
or
xchg
nop
jnp
push
in
in
sub
pop
idivb
ja
mov
jbe
mov
jae
push
andb
pusha
sbb
xchg
xchg
jb
aaa
insb
jbe
iret
jl
mov
into
inc
jle
sarl
aad
fildll
or
aam
dec
xlat
ffree
subl
pop
iret
leave
mov
pop
mov
out
mov
sbb
int3
cltd
adc
popf
cmpsl
out
mov
xchg
jl
fwait
mov
fmul
adc
into
arpl
mov
jbe
je
jge
pop
pop
xchg
mov
aam
jb
jg
cltd
lds
movb
sub
inc
pop
stos
js
lcall
fwait
aam
rcr
sbbl
in
xchg
mov
arpl
or
or
xchg
jg
pop
fldl
mov
jno
call
push
sbbb
mov
xlat
xchg
test
aam
or
ja
aad
test
jp
adc
or
fstpt
pushf
scas
seto
jno
outsl
sahf
push
fildll
mov
test
arpl
popf
insl
ficompl
jae
lret
lret
daa
or
jg
out
aaa
icebp
or
xchg
jbe
js
xchg
outsb
mov
cwtl
or
daa
outsb
mov
mov
lods
xchg
lret
add
mov
xor
mov
mov
cmp
pop
leave
cmp
outsb
jns
mov
add
push
iret
orb
xlat
xchg
dec
inc
arpl
xor
mov
rclb
dec
mov
jl
jo
inc
push
mov
mov
je
fldt
test
int3
aam
sub
leave
or
dec
or
adc
arpl
sti
xor
fiadds
insl
ljmp
cli
ja
imul
add
lods
imul
ja
in
je
jnp
dec
orl
xchg
popf
jns
jge
ljmp
xor
xchg
and
enter
aad
jb
out
cmpb
imul
rcrl
outsb
push
insb
xchg
jle
int3
sub
inc
pop
jp
mov
jbe
in
pop
out
jno
push
lcall
ficompl
pop
js
dec
mov
arpl
data16
je
xchg
jno
jecxz
cwtl
nop
pop
insb
addl
mov
mov
mov
mov
dec
jmp
lret
dec
xchg
jnp
test
shrl
lahf
mov
jne
push
lods
jns
mov
xchg
aaa
mov
xchg
jae
cltd
jb
sahf
xorb
lcall
mov
xchg
pushf
jle
jl
push
dec
ja
jns
pop
jns
lahf
mov
xchg
imul
mov
leave
aam
out
insl
push
lods
mov
iret
xchg
adc
maxps
orb
xor
lods
fwait
mov
bsf
ror
insb
out
mov
stc
jmp
cltd
ja
inc
inc
xor
movsb
cli
or
imul
xchg
lods
jb
xchg
call
or
ljmp
mov
mov
or
xlat
lea
inc
decl
insl
scas
cwtl
cmp
lcall
orl
push
lret
inc
repz
push
fdivrs
pushf
mov
cwtl
orb
jae
xchg
daa
ret
outsl
dec
ja
pop
xchg
lahf
popf
mov
das
es
loop
sarb
lret
lret
cmp
out
mov
pushf
push
aam
test
xchg
sarl
ja
mov
dec
push
jno
mov
jle
mov
xchg
movsbl
inc
xchg
imul
add
mov
mov
jnp
jne
test
lods
fwait
sbb
mov
xchg
mov
mov
xor
leave
xchg
jg
je
add
ja
mov
xchg
xchg
push
cs
addr16
leave
outsl
lea
fdivr
jns
cli
fbstp
rolb
mov
jne
test
push
leave
and
fst
jno
dec
or
js
sbbl
jg
or
aaa
daa
pop
pop
sbbl
pop
outsl
nop
stc
push
fnstenv
sahf
popf
sbb
or
lcall
aam
fstpl
or
cmp
lods
cli
or
mov
lea
addl
adc
jge
jp
lcall
pushf
pop
xchg
and
pop
popf
xchg
jns
in
sbb
cmp
xor
inc
and
out
pop
cmpsl
and
xchg
jp
xlat
pop
xchg
into
push
xor
out
outsl
rcrb
or
dec
fcmovne
mov
test
int
inc
je
mov
push
lods
or
sahf
jnp
pop
das
dec
jecxz
cwtl
into
add
jae
pop
adc
nop
insl
jmp
int3
iret
popl
jno
sub
push
imul
cwtl
fstpt
jae
mov
xchg
cmpsl
not
hlt
arpl
cmp
int3
or
repz
das
data16
ret
daa
mov
and
fildll
outsl
xchg
cli
mov
xchg
insl
lahf
jge
jbe
jecxz
popf
fwait
int
js
movsb
jle
fsubrl
pushf
mov
sub
mov
mov
pop
jge
mov
jno
jle
outsb
and
mov
jg
clc
call
stc
mov
js
scas
cltd
push
movsl
leave
mov
movsb
sbbb
sti
push
xor
rclb
push
jl
pop
fwait
sahf
lea
lahf
mov
pop
jno
lea
cwtl
das
cs
adc
imul
cmp
dec
aad
lret
inc
mov
sarb
cmp
mov
mov
stos
xorb
xchg
jbe
insb
sbb
pushf
mov
jne
sbb
sahf
fisubrs
or
jg
cmpsl
mov
iret
ja
sbb
daa
push
fcmovnb
mov
xchg
lahf
pushf
xchg
or
hlt
es
sub
leave
mov
outsb
dec
subb
daa
pop
cmpsl
inc
into
xchg
in
jg
dec
jnp
andb
xchg
add
adc
insl
fnstsw
adc
movl
jmp
jle
mov
mov
mov
movsl
cli
shlb
outsb
daa
aas
iret
adc
mov
jl
into
mov
lcall
popf
jp
fs
mov
push
into
imul
jmp
addr16
cwtl
lahf
or
jb
jmp
jge
lcall
xchg
pop
cmpsl
add
inc
jne
inc
cmp
xorb
cmc
jbe
int
jp
arpl
xchg
ja
mov
je
cwtl
push
nop
into
fldt
in
test
pop
mov
lcall
aaa
jb
loop
dec
pop
jmp
aam
jns
cltd
lahf
insl
ret
pop
into
mov
sbbb
iret
fcomps
fstpt
lcall
gs
or
stc
test
das
adc
cmp
outsl
mov
jl
popf
mov
jns
push
jnp
icebp
pop
inc
jp
mov
lea
mov
jo
aas
mov
jp
add
inc
jl
mov
imul
lods
jnp
insl
shlb
outsl
xor
mov
les
bswap
push
pushf
xchg
dec
dec
popl
xchg
fistl
mov
jl
xor
into
lret
xchg
sub
jo
add
mov
jno
leave
xchg
inc
mov
mov
mov
and
jl
push
roll
jno
sbb
mov
or
out
xchg
nop
or
cmp
add
out
xchg
xlat
xchg
call
adc
stos
shrb
pop
xor
push
pushf
sub
popf
test
push
je
mov
hlt
icebp
cltd
jp
insb
sbb
inc
data16
shlb
cltd
outsl
outsb
mov
shl
test
xchg
lret
inc
lcall
xor
jbe
jb
mov
fcoms
inc
fisttps
bsf
xchg
jne
outsl
pusha
cmp
mov
sbbb
xchg
xlat
xchg
aam
or
js
jg
fldt
jne
mov
mov
addb
sbb
lret
bswap
jno
mov
jo
push
sub
fs
xchg
aaa
out
fwait
xchg
subb
push
pop
lret
pop
inc
push
xchg
pushf
xlat
jne
jb
adc
pop
jl
mov
mov
cltd
sub
mov
xchg
adc
fnstsw
jge
inc
sahf
sub
imul
inc
test
mov
xchg
xchg
mov
mov
xor
outsl
test
inc
test
cwtl
push
je
pushf
inc
cmc
insl
into
inc
fcom
xchg
jo
jbe
mov
inc
pushf
jle
outsb
mov
xchg
repnz
popf
cmovg
dec
inc
jae
rorb
popf
cli
inc
inc
iret
and
mov
mov
lret
xor
xchg
lcall
mov
into
xor
mov
xchg
xlat
insl
jl
insl
insb
xchg
xchg
mov
pop
outsl
int3
xchg
xchg
jne
arpl
js,pt
cmp
outsb
mov
out
lret
insl
mov
push
pusha
fwait
cwtl
dec
cld
pushf
jmp
iret
enter
or
call
orb
push
mov
pop
cld
push
jp
aam
inc
aaa
addr16
jle
repnz
jge
jnp
jne
jg
in
inc
out
daa
outsl
pop
mov
jns
pop
cwtl
aaa
mov
pop
mov
xlat
xor
jl
xchg
cmpb
sbb
fcmove
fisubrl
xlat
or
leave
mov
jg
xchg
cwtl
jbe
fwait
jl
lods
addr16
aad
jg
out
mov
cwtl
mov
cmp
fmuls
xchg
cmp
jne
and
imul
jbe
sti
mov
fcomps
subl
lret
push
lcall
jg
jns
aaa
ja
mov
or
fs
dec
dec
or
gs
je
dec
ljmp
inc
mov
cwtl
adc
mov
pop
rcrb
jns
cmp
shrb
sub
or
lret
lcall
iret
popf
pop
adc
jle
test
jp
dec
std
pop
xchg
push
xorb
addb
pusha
mov
imul
jne
mov
push
mov
arpl
xchg
lods
pop
lods
sub
mov
cmp
outsl
jnp
sub
xchg
inc
mov
dec
adc
fldt
and
and
imul
test
stos
inc
ds
mov
jae
subl
mov
inc
es
inc
xlat
inc
nop
lea
imul
jge
js
dec
cwtl
xor
jg
int
nop
lcall
jae
insb
jge
sbb
push
lahf
lcall
dec
lea
mov
xchg
fistl
jp
popf
or
jns
lods
mov
mov
iret
xor
dec
push
jg
test
pop
jle
xchg
nop
jl
dec
fxam
inc
lcall
xchg
mov
pushf
out
int3
lret
cmpsb
jbe
jae
test
imul
push
jo
inc
into
xor
dec
inc
das
iret
addr16
jns
roll
jp
jge
jne
test
cs
mov
push
jl
cmpb
stc
inc
jg
mov
sarb
jo
pop
xchg
pop
addb
mov
leave
inc
jb
push
xchg
and
fidivrl
insl
ja
sbb
out
lahf
jecxz
imul
cmpb
je
jl
mov
pop
ss
iret
xor
rorl
imul
insl
cmc
jp
xlat
aaa
jle
jno
sahf
in
sarl
shrl
jns
xchg
in
xlat
jecxz
mov
cwtl
jae
out
orb
js
imul
int
insl
xlat
mov
push
push
aaa
jne
jl
out
cmp
sbb
cmp
inc
xchg
mov
mov
pushf
xor
lahf
arpl
mov
mov
adc
into
sbbb
mov
jne
outsb
jmp
ficoml
xchg
xchg
fcoms
mov
punpckhdq
mov
push
xchg
add
fadds
xchg
ret
xchg
pushf
lcall
outsl
mov
xchg
mov
jb
sub
aaa
std
imul
outsb
jne
das
sbb
mov
sbb
clc
je
push
std
mov
mov
mov
pusha
pop
stos
ja
lret
mov
outsl
cmc
arpl
jno
mov
dec
or
aaa
mov
fdivrs
add
xchg
iret
into
jnp
lea
xchg
mov
orb
fldt
mov
ds
mov
outsb
je
daa
out
jbe
int
lret
int3
outsl
jne
test
pop
jg
into
into
das
ds
add
jb
lret
cmp
shl
leave
push
cwtl
xchg
jne
sbb
xchg
cs
cs
mov
jp
jl
in
imul
fwait
xchg
sbb
fistl
adc
mov
add
cltd
inc
inc
dec
test
pushf
xchg
cmp
xchg
xchg
outsl
lahf
aaa
test
mov
xchg
outsl
jle
js
or
jae
dec
stc
shlb
mov
push
ds
jns
mov
cwtl
xchg
rcll
orb
xchg
push
sub
push
jno
lret
jl
popf
inc
es
mov
mov
cmp
sbb
imul
fs
dec
ret
dec
rclb
pop
mov
push
in
je
lea
xchg
sahf
cmp
xor
mov
push
mov
rclb
dec
pop
imul
mov
aad
jp
mov
inc
inc
inc
nop
int3
mov
sbb
aas
iret
mov
ffreep
xor
imul
jge
es
cmp
xchg
popf
sub
mov
leave
mov
cmp
js
add
int3
cmp
hlt
xorb
stc
cltd
mov
adc
aaa
dec
inc
idivb
dec
fwait
dec
aad
or
mov
jge
lcall
outsl
push
mov
je
ds
mov
jle
fcoms
jnp
mov
jp
ja
xchg
jge
mov
jae
pop
xlat
add
push
adc
mov
jnp
inc
jle
lcall
outsb
xor
pop
mov
xchg
jns
cli
fmul
and
dec
xor
dec
jne
cltd
outsb
xchg
xchg
mov
lods
fwait
ret
aas
test
mov
ret
lret
lods
xchg
call
push
mov
stc
test
repnz
push
jns
lahf
jp
outsl
inc
adc
pushf
dec
mov
psraw
outsl
push
adc
and
jae
cli
repnz
rcr
jne
mov
inc
xchg
insb
lea
pushf
into
jns
jbe
psubd
outsl
adc
imul
daa
aam
jae
das
mov
sti
scas
mov
adc
mov
lods
lods
clc
les
jmp
lret
xlat
orb
jp
fwait
cltd
jnp
outsl
int
nop
popf
adc
jbe
sti
loopne
adcb
lcall
movaps
mov
xchg
int
rorb
aad
xlat
pop
lods
imul
mov
xor
mov
addr16
mov
pop
int
dec
sahf
jns
cltd
jecxz
xchg
add
or
es
jne
sahf
outsb
je
sbb
pop
int
xchg
push
sahf
push
cmp
or
sbb
push
mov
outsb
mov
sub
fidivrs
ja
cmp
pop
pushf
pusha
push
mov
xor
push
jbe
sub
lea
mov
pop
imul
cwtl
cltd
xchg
mov
outsl
or
jp
jnp
je
ret
mov
loopne,pt
xchg
inc
stos
mov
jno
mov
rolb
sbb
pop
xor
outsb
daa
shl
xor
mov
jae
lcall
lcall
inc
std
fs
lock
mov
sbb
lcall
insb
push
loopne
mov
lea
xchg
jp
mov
inc
xlat
shl
jno
xor
jb
mov
xchg
jl
pop
jns
jp
leave
lcall
mov
xor
in
jae
fstpt
fdivp
or
iret
addb
mov
rorb
xor
xchg
mov
jp
fwait
sbb
jo
jle
jne
lret
jne
lods
jl
jno
dec
jb
mov
lds
inc
or
xchg
and
cmpl
outsb
jmp
cltd
lcall
lea
in
outsb
xor
insl
push
out
outsl
push
inc
jg
pop
mov
jae
xor
mov
iret
push
mov
adcb
ret
rcl
nop
leave
mov
sbb
xchg
mov
arpl
mov
mov
imul
test
iret
cli
cs
rcrl
sbb
jae
outsl
imul
pushf
adc
and
nop
test
mov
repnz
jmp
mov
mov
mov
in
jge
jo
arpl
cmp
jle
das
mov
lea
mov
leave
ja
cmp
jne
mov
insb
mov
lea
ja
adc
mov
push
adcb
in
das
mov
xchg
popf
lcall
arpl
scas
mov
jp
jb
sarb
out
inc
cld
jo
lds
lret
leave
je
mov
fiadds
jo
jp
jae
mov
jno
jg
addr16
jae
jo
js
push
cmpsb
xchg
push
or
mov
mov
jbe
jp
clc
test
pop
or
lds
imul
cmp
sbb
jo
js
ja
data16
dec
addb
xchg
dec
sub
into
or
or
arpl
data16
outsb
outsl
cmp
ja
xorb
sbb
cmp
imul
ja
nop
jb
mov
lcall
mov
imul
js
mov
jne
inc
mov
outsl
mov
sahf
and
xchg
cmp
leave
mov
adc
adc
movsl
or
hlt
pushl
iret
dec
in
jb
stos
je
xlat
xchg
arpl
mov
imul
into
xchg
jg
orb
mov
lret
adc
lods
pop
mov
outsb
inc
outsl
rcrb
push
lods
jno
mov
add
inc
xor
mov
das
dec
mov
orb
aad
push
loope
test
out
lods
mov
cltd
aam
push
stos
xchg
xlat
and
iret
xchg
jge
push
imul
outsb
mov
pushf
pop
icebp
jge
push
in
push
xor
mov
xchg
fstps
jno
mov
mov
xchg
test
mov
xlat
lahf
js
insl
jp
int3
xchg
out
sub
jmp
mov
sti
cmp
fmul
mov
ss
leave
pop
mov
push
pop
mov
jo
enter
dec
idiv
mov
jl
outsl
cmp
inc
jle
cmp
cld
push
out
jb
pushf
dec
adc
decl
pop
mov
jb
xchg
outsl
mov
mov
jg
xlat
aaa
jne
fwait
jno
pop
imul
mov
xchg
xchg
jno
sbb
daa
push
rcrb
test
out
outsb
inc
sbb
ds
outsl
jno
xor
subb
outsl
arpl
push
pop
push
xchg
sub
mov
cltd
xchg
into
lea
shrl
das
sub
jl
mov
pop
gs
push
mov
xchg
sarb
notl
or
cmp
ja
sub
xlat
inc
subb
mov
pop
pop
push
mov
jae
xchg
gs
mov
out
mov
lret
outsl
fwait
mov
mov
cwtl
adc
add
rcr
jge
mov
jp
mov
rclb
mov
mov
mov
ret
imul
insb
pop
xor
lds
xor
pop
jnp
cmp
adc
out
push
pushf
mov
int
in
inc
insl
fwait
sti
sub
gs
xor
je
cmpb
mov
xor
stos
ffreep
push
pop
outsl
int
outsl
jl
xchg
cs
ja
je
mov
arpl
mov
stc
call
xchg
or
xlat
pushf
nop
cltd
das
lahf
shrl
sbb
xchg
add
cltd
cmp
imul
jno
lret
cmp
or
jbe
add
pop
push
nop
insl
xorb
fcmovu
iret
mov
idivb
cwtl
push
outsl
sarl
fwait
inc
ret
into
cli
mov
out
jle
clc
xor
int3
jbe
jp
repz
in
setp
lods
insb
into
xchg
out
mov
cmpsl
inc
jbe
jnp
mov
jg
imul
jle
popf
mov
and
mov
addr16
mov
or
lea
cmp
fstpt
xchg
aam
pop
lahf
cmp
subb
dec
imul
aam
mov
pop
shrl
stc
xlat
leave
dec
cld
sbb
inc
data16
aaa
mov
jecxz
xchg
mov
jnp
jae
dec
xor
mov
jb
shlb
cltd
aam
mov
out
pop
test
cmp
sarb
xor
xor
jnp
jae
adc
add
jge
insb
lret
cmc
lcall
popf
out
imul
jbe
cmpsl
lds
push
popf
add
iret
ret
cwtl
lahf
mov
push
inc
mov
sub
test
jno
outsl
iret
mov
xchg
mov
je
dec
push
jno
xchg
js
cmp
sahf
xchg
daa
mov
cmp
jg
adc
push
xor
fadds
or
nop
ror
xchg
mov
test
fistpl
xchg
je
jns
push
mov
adc
cld
ja
push
es
sbbl
lcall
fcomp
outsb
lea
jne
je
mov
sbb
and
out
inc
push
pushf
int3
xchg
dec
sub
div
fisttpll
mov
or
cltd
sbb
or
aaa
inc
mov
outsl
jp
ds
cltd
lods
mov
pop
xor
int
jg
mov
xchg
mov
dec
setge
pop
imul
ds
icebp
push
xor
add
in
arpl
xor
push
cld
aam
pushf
xchg
int
inc
outsl
aam
sti
jge
pushf
outsb
mov
test
add
pop
aaa
mov
popf
adc
outsl
add
add
imul
xchg
imul
inc
jb
xchg
adc
lods
ja
jae
daa
add
mov
push
jns
jp
xchg
ret
xor
fisubs
int
jp
jmp
jno
pop
mov
lods
xchg
cwtl
into
loop
aad
sbb
xchg
andb
pop
xor
fadd
pop
orl
repz
imul
inc
aad
popa
add
popf
loope
js
aam
into
mov
xchg
inc
xchg
push
mov
xor
mov
int3
sbb
xchg
cmp
xchg
lret
fcoms
int3
xchg
xor
jns
mov
cltd
jp
cmp
xchg
jns
cmp
call
fstl
xlat
fsubrs
add
rcrl
adc
inc
mov
push
cmp
lahf
xchg
aad
push
mov
inc
mov
out
xchg
loopne
jne
lea
cmc
push
sbb
xchg
aam
jbe
repz
outsl
mov
mov
insl
inc
mov
mov
jne
cmc
nop
push
rolb
jb
test
data16
das
cs
xlat
cli
jbe
xchg
inc
xchg
cwtl
jo
scas
mov
xchg
in
fwait
mov
push
repz
inc
nop
das
mov
pop
push
nop
adc
dec
mov
orb
cwtl
das
xchg
subl
mov
into
cmpb
push
loope
inc
fisubs
lret
orb
sub
enter
lret
xlat
xchg
into
mov
sub
mov
jne
lds
mov
inc
jno
dec
aaa
sarb
cmp
pop
addr16
fmul
xchg
divl
insl
scas
inc
aaa
gs
push
fmuls
js
xor
loop
jno
xchg
cmp
jae
mov
mov
xchg
insb
js
ds
push
rcll
inc
or
sahf
insl
jb
nop
stc
cmp
cwtl
xor
pop
inc
and
mov
xchg
leave
popf
les
xchg
int3
je
mov
mov
xchg
cmpsl
dec
insl
hlt
pop
cmpb
jbe
push
cld
mov
adc
dec
aad
jns
xor
mov
and
mov
pop
jp
lret
cmp
mov
sbb
testb
pop
jle
sarb
cmpb
jne
jno
jbe
imul
cmp
sbb
jb
fwait
inc
jp
jnp
sub
jecxz
and
outsl
leave
mov
mov
js
sbb
test
sbb
jle
mov
mov
jge
shlb
mov
int
mov
sub
mov
sbb
incb
inc
jne
jl
jecxz
pushl
insl
fstpl
mov
or
fcom
ja
jno
xchg
addb
out
js
lret
inc
int3
filds
pop
insb
fcomps
insb
fwait
mov
mov
jnp
mov
cwtl
xchg
mov
int
pushf
mov
ret
xchg
pop
in
mov
fwait
movsl
xlat
add
jg
dec
fidivrs
lds
les
cld
mov
popf
adc
sub
jl
pop
fdivs
sbb
or
mov
cmpsl
xlat
push
lret
jo
cli
fwait
pushf
mov
movsb
call
xchg
rolb
jl
outsb
pop
xchg
ret
dec
js
jb
jnp
mov
jb
sbb
adc
fisubrs
lods
jnp
mov
cmpsl
cmc
insl
xchg
xchg
xchg
jne
mov
sahf
sub
sbb
imul
xchg
mov
mov
cli
out
nop
mov
js
inc
je
loop
inc
xchg
pop
mov
sbbb
mov
lret
fdivrs
mov
cli
cli
pop
ja
ficoml
stc
gs
xor
fdivs
xor
mov
cmc
xchg
jg
test
repz
jl
out
lock
or
sahf
pop
mov
shlb
insl
push
mov
and
in
jnp
sbbb
cmpsl
or
adc
jge
lcall
cwtl
jg
jbe
lret
popf
stc
cmp
pushf
stc
mov
xchg
pushf
sub
jns
adc
xchg
fcomp
mov
pushf
insb
pop
xchg
jae
sarb
stc
fnstsw
je
xchg
push
mov
mov
xlat
fstpl
out
inc
cmp
add
fsubs
ja
push
jg
or
jb
aaa
mov
mov
aas
cmp
fcomp
pand
in
sub
add
ret
addr16
sarb
outsl
dec
fstpt
leave
xor
lcall
in
arpl
jns
mov
mov
pop
outsl
jae
rcr
jnp
test
mov
jle
xchg
mov
jge
ret
sub
jg
mov
jecxz
in
mov
cld
rorl
mov
xor
pop
fldt
sahf
iret
ja
mov
int
scas
xchg
cwtl
mov
cwtl
clc
lds
add
cpuid
add
negl
loop,pt
mov
lahf
mov
mov
and
sub
test
in
in
lcall
testb
pop
cwtl
inc
std
jo,pt
mov
lock
mov
inc
mov
inc
imul
fld
mov
test
mov
sahf
das
mov
rorl
adc
test
xorb
jp
cli
push
xchg
sarl
pop
xchg
outsb
xor
mov
nop
ds
cmpb
idivb
out
mov
inc
jb
lret
test
jbe
jl
xlat
xchg
cmp
jp
dec
fwait
jo
xchg
bnd
mov
adcl
jmp
mov
jle
mov
add
bound
mov
cmp
push
dec
insl
dec
xor
lahf
int3
adc
mov
pand
mov
insb
mov
cmpsl
sbb
pushf
pop
cmp
inc
in
arpl
ljmp
lods
add
in
mov
outsb
stos
mov
or
nop
inc
nop
xchg
aad
cwtl
enter
xlat
mov
lea
push
ret
jae
into
outsb
xchg
jp
mov
imul
pop
inc
mov
int3
aas
and
insl
mov
mov
xchg
outsb
rolb
cmp
push
mov
nop
movb
or
pop
mov
lcall
add
xor
mov
shl
cltd
jno
sub
mov
xlat
cmpsb
cmp
sbbb
xor
mov
ret
leave
rcrb
adc
andl
inc
ljmp
inc
andb
cmp
jno
pop
mov
mov
add
mov
js
mov
inc
dec
insb
xchg
jnp
aaa
add
int3
lret
into
lret
mov
jle
mov
push
xchg
setae
addb
ja
outsl
push
pop
mov
arpl
or
into
in
sbb
frstor
mov
jno
imull
sbb
sbb
jmp
mov
cs
scas
das
rorb
lcall
incl
xlat
xchg
imul
mov
and
rep
nop
fistps
mov
push
shll
cmpsl
ja
mov
jbe
xlat
xchg
jnp
jp
lea
jns
mov
jg
movsl
lods
pop
mov
lret
lods
outsl
jb
push
cmpsl
inc
aaa
stc
cli
and
and
mov
jne
aam
imul
loope,pt
jp
xlat
jp
imul
into
cltd
insb
pop
jno
inc
mov
pushf
andb
ret
nop
xchg
add
mov
mov
cmp
dec
push
sti
stc
cmp
jae
popa
int
mov
fisttpll
in
daa
lea
mov
clc
mov
xchg
cmpsl
jae
jnp
mov
jbe
fcoms
jae
mov
jp
or
cli
mov
xchg
sbbb
outsl
outsb
push
inc
in
nop
into
aad
jbe
push
push
call
pop
add
mov
sbb
sbb
insl
sbb
outsl
aad
sahf
dec
test
popf
push
xorb
mov
lea
xor
lret
mov
mov
stos
lds
test
cltd
arpl
aam
and
push
jp
popa
inc
cmpsl
or
dec
lcall
mov
inc
push
insb
mov
xchg
xchg
inc
sti
sbb
sbb
mov
stos
cmp
imul
sarb
into
add
pushf
cs
fadd
sbb
jl
enter
das
mov
imul
jp
jbe
out
jnp
inc
push
pop
xlat
mov
inc
mov
xor
cmp
nop
adcb
jecxz
xor
push
cltd
test
or
dec
aad
sbb
sbb
movsl
test
lods
jns
pop
clc
call
mov
sbbb
lods
into
mov
xchg
sti
jp
jge
lret
sbb
xchg
xchg
orl
jns
stc
imul
xchg
stc
mov
das
imul
js
jb
mov
ret
jp
cltd
jo
fwait
jl
rcll
xlat
push
mov
aam
aas
push
test
ljmp
fnstcw
outsl
jg
jns
ja
jae
imul
pop
jp
in
popf
push
and
jl
jns
push
shr
jno
jmp
or
sahf
les
ljmp
jl
jp
jge
push
sahf
inc
stos
mov
mov
mov
mov
push
pop
shrl
fsubrs
inc
outsb
push
cmp
xchg
imul
scas
int3
dec
add
mov
inc
xchg
jg
fwait
cwtl
inc
mov
cli
outsl
jae
mov
cli
jp
jne
sub
ret
jnp
orb
mov
outsl
stos
int3
adc
fldenv
aad
mov
inc
xchg
fstpl
std
repnz
pushf
mov
cmp
gs
iret
cmpsb
lea
pushf
inc
jno
mov
inc
xchg
rcll
dec
jge
or
and
inc
leave
int
rcll
pushf
cmp
xor
outsb
mov
daa
mov
ja
xchg
dec
xlat
mov
dec
loopnew
idivl
xor
jle
add
mov
not
aad
or
jle
mov
int3
test
fdivrl
mov
ljmp
pop
call
mov
leave
mov
jae
rclb
adc
xchg
cmpsl
ret
jo
jb
lahf
mov
pop
les
mov
xchg
aam
add
pop
fldcw
mov
mov
sahf
outsl
xchg
movsb
mov
xchg
push
andb
lret
aam
cltd
and
sarb
ljmp
add
jnp
cmp
cmpsl
gs
insl
jle
jae
dec
inc
dec
cltd
les
sub
inc
adc
push
call
loop
or
pop
mov
or
lcall
xchg
addr16
mov
jp
pop
cmp
xchg
adcb
test
xchg
les
jecxz
les
fsubs
rcll
dec
jp
ja
xlat
aas
into
or
xor
mov
test
sub
out
jns
inc
inc
nop
aaa
jae,pn
std
jg
inc
inc
jo
arpl
mov
aad
jne
test
ficompl
or
frstor
mov
into
xchg
jl
jmp
mov
or
leave
ja
loope
fistpll
push
xlat
mov
cwtl
jle
xchg
ds
lahf
es
jl
iret
jns
mov
jae
sub
mov
xlat
adc
jno
cmp
xchg
imul
js
pop
shll
rorb
sub
test
mov
jmp
nop
push
sub
mov
mov
sbb
aam
outsl
scas
test
mov
lcall
cmp
cmpsl
xor
xchg
sbb
fdivs
push
inc
jae
xchg
iret
push
cltd
sub
inc
into
imul
lret
das
js
test
push
nop
push
mov
test
jb
subl
insb
jp
cltd
arpl
xchg
js
dec
imulb
notl
int3
iret
xchg
sahf
mov
xor
loopne
ja
insl
call
in
mov
cmp
pop
shlb
sub
enter
cmp
or
ror
imul
jp
jnp
mov
xchg
cltd
add
outsl
mov
je
mov
xchg
insl
je
cwtl
mov
insb
xchg
xchg
mov
mov
mov
mov
popf
xor
and
dec
xchg
leave
jmp
mov
adc
out
jae
inc
in
into
adc
mov
xlat
xchg
cli
pop
jge
sub
lret
cld
ja
cld
nop
int
mov
pushf
iret
mov
adc
leave
xchg
mov
lock
pop
cmp
xlat
jnp
jne
xchg
fnstsw
xchg
push
addb
cmp
imul
and
mov
stc
cmc
ret
add
nop
mov
lret
subl
into
pushf
xchg
jle
inc
cmpsb
xor
cwtl
push
xchg
jp
pop
fsubp
subb
ret
stc
fsubrs
sbb
pushf
mov
and
lods
or
mov
inc
inc
mov
cwtl
jnp
test
mov
inc
outsl
xchg
xorb
cmp
jecxz
jbe
mov
adcb
into
xchg
sahf
jg
scas
mov
xchg
loope
mov
sbb
in
mov
xchg
xchg
ja
mov
or
das
fnstenv
nop
mov
or
xchg
imul
subb
mov
leave
inc
xchg
jo
inc
adc
jecxz
sub
jecxz
mov
cwtl
cmp
pushf
sahf
xchg
jg
push
cltd
test
mov
lret
gs
cmpsl
mov
or
push
cmp
sbb
push
push
das
mov
imul
add
mov
es
out
pop
mov
enter
addr16
pop
mov
push
cmc
setno
cmp
iret
push
imul
or
outsl
aaa
leave
shrl
push
cmpsl
into
shlb
mov
mov
jg
xchg
cmp
popa
insb
loope
or
faddp
test
insb
jbe
mov
jns
jo
cmc
xchg
mov
ficoml
cmpsl
jne
int3
mov
or
push
imul
nop
fdivs
lahf
mov
inc
lcall
pop
cmp
je
stos
push
mov
mov
jb
mov
imulb
xchg
push
outsb
insl
jae
stos
stos
mov
jae
cld
mov
jecxz
sub
adc
lock
cmp
mov
arpl
orb
xlat
pop
add
or
xchg
xchg
inc
pusha
call
pop
pop
test
or
mov
sbbb
nop
popf
xor
test
fsubrp
xchg
sub
push
addr16
dec
sbb
jle
jmp
mov
fwait
jg
inc
sahf
inc
xchg
orl
xchg
mov
lcall
xchg
fimull
jp
outsb
iret
xchg
dec
jp
jge
xchg
mov
rorb
sahf
pop
data16
jle
and
jl
xchg
adc
mov
mov
imul
inc
lahf
jnp
mov
xchg
daa
fistpll
sarl
xchg
inc
je
jo
imul
cmp
int
mov
mov
jb
mov
addr16
jg
jge
imul
into
popa
popa
xchg
and
jb
mov
jp
jle
jns
cmp
or
js
mov
push
insl
cmpsl
jns
aaa
insl
dec
nop
sub
rclb
jp
mov
add
adc
push
into
cmp
insb
jae
aad
test
mov
int
pusha
xchg
int3
lret
cmp
jb
ss
sbbl
push
inc
dec
out
movsb
jae
add
das
out
mov
je
cld
cmp
in
inc
fbld
jno
cltd
jle
inc
ja
mov
jo
ja
inc
mov
imul
add
push
lret
addb
sbb
adc
sahf
jae
mov
mov
push
dec
push
out
mov
sbb
xchg
leave
mov
lock
xlat
mov
and
lcall
pop
mov
mov
mov
jge
xchg
jnp
dec
jg
test
inc
les
jae
mov
outsb
mov
jae
cmc
mov
sub
xor
xchg
dec
das
mov
popf
add
fwait
sahf
mov
jg
mov
insl
jae
mov
rorb
jne
arpl
cli
add
xlat
xor
inc
jae
dec
cltd
sarl
jp
fwait
adc
cs
lock
xchg
aaa
out
aad
lea
jp
loop
insl
inc
jge
lret
in
jb
je
aad
and
iret
lcall
cmp
mov
icebp
aam
mov
jbe
or
push
nop
cmpsb
jp
inc
jmp
test
fnsave
je
cltd
mov
or
xorb
cmp
outsl
cwtl
fwait
aad
stos
lods
fwait
sub
iret
push
add
imul
xchg
mov
cltd
mov
out
notb
lea
mov
loop
int
int
adc
arpl
push
jp
jne
sub
adc
jl
cs
push
pop
jns
aam
leave
fdivs
fwait
jns
xchg
mov
fisubrs
xchg
lds
inc
cmp
sbb
mov
adc
xchg
and
cmpl
das
jl
sub
rclb
mov
in
sub
into
rclb
xlat
lock
adc
outsl
push
push
or
jnp
or
xchg
insb
mov
enter
sahf
cmp
add
cwtl
enter
mov
xchg
ds
push
in
xchg
xlat
insb
aaa
xchg
sub
or
lea
rcl
mov
cmp
stc
imulb
cli
cli
test
cltd
push
xchg
jo
pushf
ss
adcb
nop
jno
pop
lods
jnp
lret
push
sbb
lods
popf
lods
mov
leave
jmp
insl
pop
shl
push
xor
cmp
cli
cli
lret
sahf
filds
outsb
lds
cmp
push
leave
imul
push
jg
leave
jae
rorl
leave
cwtl
cld
insl
push
lods
and
cld
int
jno
add
rcl
loopne
adc
ja
imul
inc
nop
jae
pushf
outsl
sub
jbe
mov
cmp
jae
jo
mov
test
mov
pop
xchg
jo
jbe
test
popa
add
sahf
jp
xchg
inc
jge
outsb
cwtl
cld
mov
mov
ds
xlat
ja
ja
sbb
xchg
lcall
mov
ret
int
lret
lea
jl
mov
shlb
stc
ja
mov
add
xor
mov
arpl
movsl
mov
jne
mov
jl
lock
insb
mov
das
dec
iret
mov
fwait
in
nop
dec
push
jnp
jg
xchg
jbe
mov
bound
mov
xchg
cwtl
jne
jg
lret
mov
out
int
arpl
ja
fistl
lahf
ficoml
movsb
rclb
lcall
daa
sbb
lea
notl
pop
rcl
je
pop
mov
icebp
mov
jnp
xchg
ja
xor
inc
jbe
lret
xlat
out
jge
into
jle
imul
jns
jne
xorb
in
aam
cmp
mov
daa
jge
lahf
sti
stos
xchg
fdivrs
jns
mov
jne
mov
lcall
pushf
lock
int3
mov
adcb
insl
lret
and
mov
iret
cmp
jbe
jo
sbb
xchg
lret
shlb
lds
fldt
mov
inc
mov
xor
lret
stos
mov
lods
jno
add
leave
push
orl
jns
int
lahf
sub
nop
outsb
mov
imul
jo
rclb
dec
sbb
lock
jnp
adc
xlat
inc
cmp
into
mov
lret
adc
test
xchg
insb
jbe
das
mov
fiaddl
mov
xlat
in
mov
mov
cs
cmp
mov
ds
jo
sti
jge
jle
subl
fistl
xchg
mov
dec
lods
add
mov
mov
jne
push
push
arpl
xchg
call
outsb
xlat
and
outsl
int3
mov
cmp
andb
imul
pop
push
mov
xchg
jge
xor
mov
insl
imul
outsl
fistpl
mov
or
xchg
sbbl
cwtl
roll
jbe
das
test
sbb
rorb
sbb
inc
pop
push
sbb
cmpsl
xchg
int
outsl
xchg
cli
mov
je
xchg
mov
sahf
inc
jo
dec
mov
mov
inc
insl
lods
cs
push
in
pop
outsl
add
leave
jne
testl
nop
js
pushf
jmp
insl
lahf
iret
aam
and
mov
cmp
cmp
lcall
mov
dec
jg
lret
stc
xor
outsl
dec
adc
jns
sbb
rcr
xchg
lahf
fwait
in
mov
lock
iret
xchg
das
addr16
jbe
fwait
mov
jo
add
sti
insb
cmp
jae
fcmove
xchg
mov
jo
mov
test
xor
xchg
and
daa
inc
addr16
es
sub
lret
jg
inc
outsl
out
push
lret
or
cmpsb
xor
or
nop
cltd
outsl
mov
andl
inc
push
fidivrs
lret
xlat
xlat
mov
pop
add
cli
dec
pushf
ja
dec
adc
nop
cmp
insl
fwait
push
push
addb
xor
xchg
mov
jmp
imul
pop
adc
cmpsl
cmp
inc
insl
jecxz
sbbb
cwtl
into
iret
outsl
insb
push
outsl
pop
js
mov
aam
lret
lcall
pushl
aaa
mov
outsl
addr16
imul
xchg
lock
add
js
imul
repz
inc
call
mov
enter
jle
jns
into
xchg
adc
clc
fiadds
jns
mov
insb
repnz
fiaddl
xchg
lret
inc
pop
mov
loope
jns
sbb
clc
dec
pop
sbb
cmpsl
pop
jbe
aam
jmp
cmpsl
pop
mov
test
test
in
sahf
adc
ja
js
adc
sahf
lret
js
aad
jl
fdivrp
add
or
inc
cmp
enter
stos
xchg
jo
inc
xchg
nop
out
xlat
cmpsl
outsb
lret
leave
sbb
loopne
mov
add
hlt
jne
xchg
inc
xor
jp
ja
mov
xchg
insb
push
shl
pop
inc
jl
xor
pop
cs
adc
jl
dec
cltd
mov
test
jle
sti
in
xor
insl
xorb
push
mov
jno
aas
les
call
mov
mov
jns
mov
mov
aam
adc
maskmovq
testl
rolb
mov
cltd
jmp
sbb
lahf
pop
jmp
xor
std
shlb
lret
cwtl
lea
pop
popa
sub
je
insb
scas
lods
pop
lods
adc
adc
xor
push
pop
cwtl
mov
aam
cmp
xlat
cwtl
outsb
addr16
iret
ja
jle
jg
icebp
pushf
ret
iret
gs
mov
test
jno
lds
fdivrs
mov
dec
mov
mov
and
aam
jge
and
xchg
add
imul
ja
outsb
dec
mov
inc
rorl
je
push
nop
xchg
int
sti
call
outsl
rcl
lret
push
lret
int3
adc
sbbb
jbe
aad
fcoms
roll
fwait
jb
or
int3
nop
inc
jg
lret
inc
andb
imul
sbb
sub
xchg
jbe
outsb
leave
aaa
cmp
nop
jnp
mov
adcb
xor
imul
or
mov
mov
jae
xor
aam
mov
mov
mov
ljmp
xchg
xlat
xchg
imul
test
int
add
or
popf
mov
mov
lods
test
lret
lea
cli
lock
and
fdivrs
add
lahf
xor
in
test
sub
int3
xchg
jae
sbbb
je
stos
adc
jl
pop
js
sub
xchg
mov
mov
mov
sbb
aam
jp
jnp
push
jg
jae
lret
pushf
sahf
pop
or
xchg
mov
push
inc
sbb
mov
xchg
cmp
shll
int
jge
push
xchg
lret
jne
push
xchg
pop
les
jns
mov
mov
sbb
imul
sub
xor
mov
push
add
fwait
in
xchg
in
bnd
inc
lock
cmp
jge
test
mov
mov
push
repz
fbstp
sbb
rolb
icebp
sbb
inc
aaa
cmp
lret
pushf
scas
lods
jne
lods
fstpt
jmp
sub
cli
add
jp
cltd
out
js
mov
cwtl
mov
lahf
add
jl
mov
jns
jp
xchg
enter
jmp
jb
xchg
pop
out
pop
sub
cltd
in
daa
aad
imul
mov
imul
das
insb
push
inc
xor
ss
mov
vpunpckhbw
lret
mov
adc
cmp
cmp
jg
cltd
arpl
push
outsb
sbb
mov
jbe
cmp
push
test
jb
fadds
jb
mov
outsb
movsl
xchg
jae
sbb
and
setb
sahf
push
mov
push
rorb
jg
insl
sbb
es
cmpsl
inc
insb
push
push
or
sub
jle
lea
imul
imul
movsb
pop
dec
xor
cli
addr16
insl
or
mov
jae
cmp
out
and
and
inc
jnp
mov
add
or
fistpll
les
lahf
xchg
inc
pop
add
push
dec
or
subl
xor
shrb
idivb
pop
insl
cmpsl
loope
mov
mov
pop
cltd
imul
ja
cmp
aam
lcall
cmp
imul
sahf
mov
dec
jbe
hlt
out
ds
mov
scas
xor
xchg
lret
mov
mov
xor
int
mov
je
lcall
mov
lcall
inc
ja
je
push
mov
jnp
xor
mov
lea
inc
insl
bswap
jae
xchg
rolb
movsb
mov
popf
jl
outsl
ja
jg
js
repz
sbb
insb
cs
xchg
cs
test
push
inc
or
jb
jl
outsl
push
jp
stc
fnstcw
mov
inc
dec
lahf
mov
fistl
xchg
in
imul
push
ret
push
lods
xchg
int
mov
sarl
jp
outsl
xchg
nop
lcall
jp
je
jb
test
or
jg
ror
insb
jl
lcall
lahf
mov
xor
in
jns
outsb
pop
fmul
pop
pusha
mov
xchg
imul
lds
mov
xchg
ja
inc
xlat
push
out
mov
outsl
outsb
xchg
outsb
cmp
loop
add
outsl
mov
xchg
leave
lret
jno
jo
push
jmp
jl
ficomps
jg
popf
daa
repnz
je
jge
stos
jae
ds
int3
mov
pusha
into
lret
add
push
cltd
rorb
cmp
nop
adc
mov
cmc
lods
mov
lret
sbb
sahf
jne
xchg
jl
addl
nop
xchg
cmp
fnstenv
mov
lret
insl
jbe
add
fstl
add
lahf
aaa
int
lret
imul
sarl
jge
jb
jnp
mov
mov
lahf
test
sbb
stc
dec
sbb
mov
xchg
jbe
bound
shlb
push
cwtl
int3
xchg
ja
mov
lret
inc
movsl
mov
xchg
push
ja
jg
xor
lcall
repz
mov
lods
js
fcoms
enter
mov
lods
cmpsl
push
stos
ret
cmovl
fbstp
aad
shrb
subl
inc
sbb
movl
mov
test
cmp
aam
mov
stc
mov
inc
xchg
xchg
rorb
xor
jnp
xchg
test
push
outsl
and
lret
mov
and
mov
ficomps
mov
inc
push
xchg
jg
jns
jbe
lcall
cmp
pop
add
das
cmp
bound
pop
mov
je
out
add
movsl
daa
rolb
xchg
jo
xlat
scas
loopne
packssdw
sarl
inc
fstl
mov
stos
jbe
test
inc
xchg
aam
sarb
lods
push
jb
andb
insb
addr16
jp
mov
or
jae
mov
mov
fwait
lret
xchg
cmpsl
mov
int
aaa
repnz
lea
loop
mov
xchg
imul
cld
das
pop
mov
iret
jp
jo
in
shlb
lea
mov
cmp
push
lret
cwtl
insl
inc
jp
cmp
sub
imul
cmp
lret
test
xchg
outsl
cwtl
decl
fwait
jnp
push
mov
into
mov
addb
mov
test
in
sahf
cmp
jp
daa
jl
out
fwait
jle
aad
mov
lahf
pop
jge
mov
jle
mov
mov
inc
mov
xchg
mov
pop
inc
ja
enter
jecxz
js
cmp
add
sahf
lcall
mov
sbb
iret
mov
insl
lahf
aas
jp
je
sbbb
leave
push
dec
cmp
xchg
into
xchg
mov
ja
insb
jmp
jge
lret
stc
sbb
out
out
je
xchg
push
lods
mov
lods
mov
xchg
das
movsl
js
mov
loopne
and
mov
fbstp
fists
jae
push
test
inc
cmp
xchg
xchg
outsl
and
outsb
aaa
add
loope
btc
and
divl
popf
call
or
jae
sub
xlat
cmp
in
fisttpll
xchg
int3
ds
fwait
jecxz
push
cmp
insb
shlb
imul
ja
xor
xlat
imul
mov
pop
inc
or
mov
xchg
pop
adc
insl
lock
push
lcall
jae
imul
jns
outsb
mov
jecxz
mov
dec
jae
outsl
scas
dec
je
cli
es
std
outsb
jns
cltd
dec
xor
mov
jb
xchg
outsl
lcall
psubd
push
mov
dec
in
add
decb
jmp
jg
inc
inc
testl
mov
popf
jp
idivl
int
jno
jb
xchg
push
xchg
jns
and
inc
fst
lods
inc
ja
idivl
in
das
repnz
jbe
jns
mov
jno
lret
pfmul
sarb
ret
xor
adc
mov
fcomps
inc
out
mov
pop
dec
jae
mov
jnp
sbb
xchg
js
dec
lds
lods
cwtl
lods
pop
mov
cltd
cltd
add
int3
lahf
or
dec
adc
mov
lods
cltd
inc
lods
or
cmpsl
sub
sub
movsb
popf
push
sbb
iret
pusha
test
mov
lret
xlat
push
aad
pop
xchg
mov
xchg
lahf
fbstp
leave
sahf
inc
push
stc
or
pop
and
cwtl
jnp
push
cmp
stc
or
or
xchg
fmuls
lcall
mov
pusha
jno
insl
setbe
mov
lret
insl
or
xlat
inc
xchg
mov
jg
add
xchg
out
lea
fadds
lret
iret
lahf
cmp
mov
int
jne
imul
mov
into
fcomps
jnp
push
lahf
inc
jb
inc
jle
nop
jbe
add
jmp
mov
in
push
mov
push
in
bound
nop
or
shlb
je
shlb
fcomps
jb
mov
fcoms
loope
jp
cmp
into
pushf
xlat
jae
loopne
jno
mov
inc
mov
data16
mov
je
or
lock
repnz
lret
dec
push
nop
int
sbb
js
outsl
aaa
addl
jp
xchg
cmpsl
in
fdivrs
xchg
adc
sub
sbb
je
and
ja
cs
stos
push
mov
iret
fcoms
fwait
inc
je
xchg
inc
mov
mov
cmp
cmp
xlat
lea
mov
dec
aas
adc
cltd
jns
xchg
push
out
mov
xchg
pop
lahf
xchg
enter
xor
nop
outsl
jge
out
sub
mov
mov
orb
insb
cmc
addr16
sti
jp
std
inc
lea
sub
shll
je
cltd
outsb
cmp
lahf
popl
jns
adc
leave
jg
scas
jp
fwait
or
and
jmp
dec
mov
xchg
dec
or
pop
pop
inc
jae
mov
or
mov
xchg
mov
rorl
mov
lret
sti
arpl
js
sahf
mov
mov
adc
sbb
das
dec
mov
jae
jne
mov
mov
and
inc
ja
loopne
jnp
xor
inc
pop
dec
jg
test
xchg
pop
inc
pop
imul
ret
mov
jle
jp
lcall
jns
push
fidivs
mov
imul
jle
ja
xlat
stos
pop
fdivs
xchg
xchg
fidivrl
loopne
jmp
sbb
mov
jo
iret
pop
pop
mov
lcall
jnp
out
pop
xchg
out
outsl
clc
cltd
xchg
or
fistpll
lods
nop
int3
mov
xchg
das
jle
lea
repz
xchg
mov
xor
lcall
ja
in
inc
cltd
out
es
out
lcall
mov
pop
jne
push
push
popa
test
stos
hlt
xchg
roll
mov
cmpsl
popl
dec
or
jl
mov
and
pop
sti
sar
das
call
jge
imul
jne
mov
jno
je
leave
mov
in
jge
lret
aaa
sbb
sahf
popf
lret
jno
pushf
jp
and
cwtl
jb
adc
rcl
cmp
jae
mov
mov
cld
stos
jne
jno
aam
inc
sahf
popa
xor
jg
sarb
imul
jbe
shlb
leave
mov
cltd
lods
ss
add
dec
mov
xchg
cli
xlat
lahf
or
pop
adc
test
fsubrs
nop
xlat
or
mov
fadds
inc
mov
or
sahf
lods
mov
sub
sbb
int
jae
jbe
pop
xchg
jno
test
dec
out
rcl
pop
add
mov
lods
cltd
jl
dec
mov
fwait
adc
nop
outsl
shlb
mov
lea
pop
cmp
sets
jg
sbb
mov
jmp
xchg
xchg
enter
adc
adc
enter
xchg
movsb
jae
std
outsl
fdivrl
dec
sahf
lods
cltd
xchg
fwait
adc
pushf
ja
jne
mov
idivl
jae
pushf
and
mov
cltd
iret
jge
stc
add
ds
push
and
bnd
out
aam
mov
add
jbe
cmpsl
jge
xchg
into
dec
xor
cmp
inc
mov
outsl
or
jp
das
inc
push
in
mov
pop
mov
mov
jne
lods
cmp
ds
adc
cmp
nop
jg
mov
inc
adc
js
jo
lret
mov
add
rorb
adc
leave
insb
stc
cld
jp
aam
pop
ror
out
fwait
lea
xlat
jae
nop
jge
mov
adc
jmp
arpl
inc
push
out
or
lcall
adc
cmp
lret
push
iret
jo
jbe
fsubrs
jmp
mov
jl
lret
pushf
jno
jnp
jae
jmp
pop
adc
mov
jl
lods
clc
pop
repz
mov
leave
jno
arpl
xor
mov
inc
cmp
inc
or
dec
mov
mov
sbb
push
mov
daa
imul
push
xchg
int
mov
fldl
mov
xor
lods
mov
arpl
pushf
jns
jp
lcall
xorb
push
cmpsl
inc
jns
pop
cmp
lcall
push
imull
cmp
cmp
xchg
test
test
mov
add
int3
insb
push
mov
lret
inc
jo
jle
mov
adcl
sahf
test
jns
mov
jo
xorl
inc
add
push
jle
je
jl
imul
push
iret
fwait
pop
xchg
stc
movsl
mov
jbe
daa
or
dec
faddl
pop
sub
mov
pop
jecxz
push
cwtl
xchg
sub
test
lcall
jns
std
jp
insb
mov
inc
xchg
jne
xorb
cmp
cmpb
repz
mov
test
mov
fistps
jno
xchg
aam
inc
js
cmp
sarb
mov
imul
mov
mov
jmp
mov
inc
and
xchg
lcall
das
ret
hlt
arpl
mov
or
inc
aam
lret
ja
imul
or
xor
cmp
mov
cmp
sti
and
aad
mov
or
or
ror
pushf
mov
jle
mov
je
leave
arpl
pop
push
cmp
or
jbe
scas
mov
ja
dec
jnp
mov
jne
lahf
mov
lret
ss
shll
push
jg
lahf
jae
fcomps
add
insb
dec
cltd
mov
cwtl
mov
sbb
mov
cwtl
mov
stos
loope
rcrb
jg
xchg
mov
int
pop
inc
mov
pushf
xlat
leave
mov
lahf
repnz
push
daa
js,pn
lds
cmpb
punpcklbw
mov
call
xchg
mov
jne
xlat
lock
out
jl
inc
lea
ds
mov
mov
adc
outsl
xchg
jns
scas
inc
jae
lds
mov
aam
mov
mov
test
insl
mov
push
int3
gs
sahf
data16
dec
mov
outsb
jg
daa
lods
xchg
subb
aad
or
xchg
add
mov
repz
outsb
and
aaa
mov
jnp
in
fdivs
add
or
adcl
insl
inc
sbb
cmp
cs
outsb
adc
stos
cmp
mov
jne
sbb
bound
cmp
mov
or
nop
lahf
inc
jae
jnp
jle
outsb
cmp
rcll
xchg
js
pop
pusha
mov
jecxz
in
rcrb
loop
jge
mov
mov
jl
inc
repz
jne
or
cmp
jge
lret
stos
jno
inc
aaa
testb
fcoms
pop
sarb
xchg
sti
loopne
pop
fwait
aam
mov
push
push
imul
and
pop
mov
aaa
aad
sbb
or
mov
xchg
push
mov
loopne
jp
mov
inc
cmpsl
xlat
mov
lcall
inc
cltd
sbb
insb
inc
arpl
mov
imul
push
add
lret
lods
inc
cwtl
jnp
inc
mov
int3
lret
jno
rorl
bt
inc
inc
nop
or
ret
into
outsb
outsl
sti
or
mov
enter
inc
jg
fcomps
aam
jns
cltd
dec
jp
pushf
out
insb
mov
xchg
push
imul
cmp
mov
ss
cmp
lahf
xchg
pop
pop
xchg
jno
fxch
cmpsl
mov
jge
push
sub
call
roll
ret
dec
cltd
fwait
cmp
jnp
les
stc
orl
lret
popf
mov
mov
cmpl
xchg
bound
in
pop
mov
into
testl
push
insl
adc
mov
scas
jno
out
mov
int
mov
push
cwtl
cmpsb
jp
jp
sbb
lea
insb
subb
fwait
lahf
xchg
loopne
mov
insl
jns
mov
add
movsl
pushf
imul
push
cwtl
add
mov
lahf
nop
jo
outsl
aam
mov
mov
xchg
cmp
jb
xchg
and
jl
push
nop
push
stos
ffreep
sbb
stc
inc
out
js
xchg
jns
xchg
leave
inc
mov
subl
pop
cwtl
mov
jae
fbstp
adc
enter
xchg
test
std
xchg
outsl
jnp
ljmp
les
cwtl
popf
jo
fwait
sbb
dec
cmp
jge
insl
mov
sbb
jb
jmp
mov
jb
and
test
mov
cltd
out
xor
ds
nop
mov
mov
add
xor
mov
in
mov
cmp
sbb
jp
lahf
jb
jecxz
in
xchg
mov
or
xchg
push
lods
into
pop
mov
nop
imul
in
insb
lret
loopne
dec
insl
addr16
mov
aam
and
jp
out
jnp
jae
add
fwait
jae
jecxz
outsl
stos
inc
jae
ja
js
insl
adc
paddusw
fstps
mov
mov
pop
cmp
cmpsl
bnd
jg
enter
dec
mov
jp
jns
mov
sar
push
in
jecxz
pop
and
mov
cmpb
jb
rcrl
lret
mov
jno
pop
daa
xchg
ja
jbe
or
mov
das
jae
push
jae
lods
xchg
xchg
lods
inc
add
cmp
mov
cli
and
and
jnp
mov
pop
or
jg
jns
cltd
xchg
ss
out
fwait
mov
int
jnp
sbb
leave
repnz
std
lcall
mov
add
sahf
mov
jg
outsl
fcmovu
js
out
cmp
cmp
push
icebp
pop
fistps
leave
push
aaa
inc
mov
insl
sbb
xlat
fwait
data16
push
je
jle
mov
mov
dec
test
inc
lods
stos
call
mov
lret
sarb
dec
sub
cli
or
nop
pop
jmp
xchg
xorb
das
mov
sbbb
movsb
cltd
imul
sbb
xchg
jae
mov
add
insl
lcall
nop
mov
pop
iret
std
call
outsl
das
mov
jnp
lcall
ja
push
or
test
jae
icebp
movsb
jle
or
jae
daa
dec
mov
xchg
mov
mov
jae
cmp
leave
imul
adc
je
decb
ds
mov
ja
faddp
and
lea
fwait
stos
sti
loope
jb
les
ret
xchg
inc
pop
int3
fdivrl
lds
mov
lret
cmpb
cmc
cltd
cltd
xor
xlat
inc
in
mov
aas
jno
fcmovnb
fstp
jecxz
pop
pop
pop
int3
iret
fisubl
fldcw
mov
fwait
shl
in
ja
js
pop
loopne
cmp
xchg
xchg
and
push
loope
mov
sahf
mov
arpl
mov
mov
jle
fwait
mov
inc
subb
mov
stc
sub
shl
outsl
test
pop
sbb
ret
insb
xchg
lcall
lea
xchg
lret
or
cmp
jae
pop
push
sbb
pushf
lds
iret
outsl
cltd
fmul
lahf
jl
int
dec
add
js
and
xchg
mov
jnp
pop
movsl
jge
push
cmpsl
stc
xchg
addr16
cltd
sbbl
adc
cwtl
cmp
xchg
je
pop
mov
jp
leave
into
push
mov
pushf
sahf
jb
es
outsl
xchg
lahf
jle
js
wrmsr
xchg
lods
xchg
mov
out
lea
insl
jl
fidivrs
jl
add
repnz
int
inc
jb
xchg
iret
jmp
pop
mov
pop
movsl
jae
nop
aaa
inc
das
xorl
pop
cmpb
fs
fwait
add
xor
gs
lods
ja
out
int3
jecxz
mov
jl
ja
push
mov
jle
gs
sub
sub
inc
iret
popf
xchg
push
inc
lea
test
aad
mov
outsb
xchg
lret
rorb
jb
into
inc
shrb
insl
aaa
inc
aaa
popa
adc
lret
fdivs
rolb
jno
jmp
jge
pop
insl
pop
je
insb
jg
sbb
cmp
push
mov
sbb
xchg
data16
mov
mov
jbe
jnp
mov
xchg
push
incb
lods
adc
cmpsb
sahf
xor
push
adc
popf
mov
jbe
outsb
sbb
into
add
popf
std
lods
aam
iret
dec
flds
dec
pusha
push
dec
and
mov
mov
adc
xchg
xchg
xchg
aaa
dec
test
cmp
jl
bound
pop
mov
and
mov
push
mov
dec
jnp
mov
mov
xchg
mov
inc
jb
insb
push
push
pushf
pop
retw
sub
mov
lea
dec
mov
pop
inc
dec
jne
into
pop
in
imul
jge
xchg
sbb
pop
jnp
int
rcll
xorb
inc
das
and
mov
jmp
mov
nop
dec
jg
adc
into
xchg
lods
mov
test
ja
aam
inc
sbb
outsl
outsb
or
cmp
js
xchg
cmp
lcall
jbe
push
mov
shrb
pop
ja
outsl
aaa
int3
repnz
shlb
xchg
cli
outsl
cwtl
int3
xchg
push
mov
mov
sarb
inc
dec
outsb
lea
das
je
cbtw
fcmovb
or
sub
mov
sbbl
sbbb
icebp
inc
cmp
mov
and
decl
cltd
push
mov
xchg
jne
jo
and
sarb
jl
rcrb
clc
mov
or
mov
inc
ss
insl
imul
dec
imul
adc
sbb
aaa
jmp
or
dec
mov
movsl
into
dec
xchg
aad
sti
lods
pushf
add
in
mov
fstl
rcr
adcb
in
xchg
xor
lea
arpl
ror
jns
mov
pushf
cmc
mov
ja
lods
push
ss
das
int
insl
ret
jg
out
inc
mov
fadds
adc
lds
cwtl
test
adc
and
push
sti
cmp
push
sahf
xlat
lcall
fisubs
out
movb
pushf
inc
subb
inc
sahf
rcll
lret
addr16
xlat
push
xchg
mov
mov
jge
inc
mov
xchg
jbe
mov
mov
dec
inc
pop
outsb
xchg
aaa
cmp
int3
aaa
push
outsl
js
fisttps
xchg
into
xor
sbbb
cltd
mov
sub
pop
divl
jnp
incl
jae
jg
mov
jle
data16
in
cltd
lds
xchg
sbbb
ja
imul
mov
mov
mov
lahf
bound
mov
lret
and
fcom
andb
lea
sbb
cmp
cwtl
push
icebp
jae
mov
les
jmp
sub
ja
enter
push
shrl
insb
repnz
imul
sar
fistpll
xor
int3
pop
mov
data16
dec
int
or
cmp
xchg
sub
mov
lods
jle
mov
push
cwtl
mov
push
mov
insb
mov
shrl
mov
inc
jle
add
imul
stos
mov
icebp
addb
adc
mov
cltd
cmp
rclb
fs
outsb
sbb
xchg
popl
jae
fistl
dec
inc
int3
xlat
aad
outsl
loopne
xchg
fstl
mov
aas
test
mov
mov
push
sbb
jg
jno
jecxz
push
sub
dec
and
mov
notb
mov
cmp
mov
push
dec
lahf
jg
sidtl
iret
cmpsl
jbe
imul
push
jl
insl
and
dec
pop
aaa
movsl
add
lods
imul
popf
ja
rclb
roll
aaa
jg
data16
lahf
outsl
sub
mov
test
cmp
outsb
or
cwtl
lahf
sbb
sahf
jp
mov
inc
ficomps
xor
pushf
fldcw
pop
popl
lock
shll
jecxz
iret
mov
das
test
cld
mov
mov
jmp
cmpsl
sub
leave
mov
jne
gs
scas
sbb
lods
pop
adcb
jbe
imul
inc
mov
lods
sbb
dec
in
dec
fldt
xor
fs
lds
push
push
mov
daa
inc
sbbb
insb
push
sub
aaa
xchg
fimuls
lret
iret
cltd
in
dec
lret
lahf
int
push
pop
cmpb
stc
inc
mov
jb
mov
ret
aam
push
loop
jmp
xchg
cwtl
xchg
loop
outsb
mov
inc
enter
insl
leave
icebp
sahf
jecxz
mov
add
aam
inc
lcall
sub
xchg
push
mov
jbe
pusha
mov
hlt
bswap
inc
jg
insl
mov
inc
stos
xchg
lea
jmp
mov
cwtl
mov
inc
dec
aam
pushf
cld
ja
insb
daa
int
outsl
push
jl
rolb
jae
xor
stc
mov
mov
mov
test
nop
cld
add
jae
inc
jb
ficomps
add
jne
jo
mov
popf
nop
lret
js
out
cli
insb
shrb
lahf
inc
or
cli
mov
jl
lret
xor
outsb
inc
imul
xlat
adc
outsl
jbe
iret
sahf
test
lret
xchg
add
stc
fmul
inc
add
xor
fwait
shlb
mov
mov
jge
xchg
pop
repnz
xchg
shll
sub
xlat
mov
mov
lods
xlat
imul
test
jae
xchg
test
int3
mov
test
jno
scas
mov
mov
and
mov
outsb
dec
daa
in
nop
jo
or
fsubrs
cmpb
into
int3
rcl
loope
mov
add
nop
mov
neg
xchg
xchg
push
sti
push
fwait
lcall
inc
sbb
lret
lock
jne
lea
xchg
cwtl
lcall
movl
es
xchg
push
cmpl
popf
mov
mov
mov
adcb
andb
lahf
mov
lcall
repz
mov
cltd
xchg
push
mov
xlat
and
int
pop
push
mov
xchg
fwait
dec
xor
mov
in
cli
jbe
jns
jge
mov
xor
and
inc
cmp
mov
mov
int3
xchg
push
sbb
lret
sub
push
fistpll
xchg
and
outsb
outsl
jg
cwtl
fdivrs
jl
sti
inc
cmpsl
jle
jns
popa
lret
sub
arpl
xchg
mov
fstp
mov
iret
outsl
jo
in
rcrl
mov
mov
xchg
mov
int
jne
xlat
into
mov
xchg
popf
xlat
outsl
jo
mov
lahf
pushf
cmp
shlb
cwtl
ret
outsl
lods
insl
mov
fnstenv
fwait
into
jns
mov
cwtl
outsl
dec
or
jp
inc
inc
xchg
mov
jb
sbb
into
outsl
outsl
jl
test
mov
int
shl
lods
outsl
jne
xor
daa
push
out
insb
popf
jae
jg
adc
daa
cmp
cmp
jne
push
mov
insl
inc
xchg
movsl
cwtl
daa
lret
or
sahf
cmp
lcall
jns
inc
inc
dec
lds
sbbb
stos
js
out
das
cmc
mov
sti
aas
sbbb
pop
leave
xchg
xchg
jns
jne
test
jnp
cld
sub
inc
nop
jae
jo
cmp
rclb
ja
lcall
rdtsc
in
mov
ja
lds
addr16
mov
jne
arpl
shll
mov
jne
mov
mov
andb
xlat
aam
and
cltd
jl
inc
dec
cwtl
xlat
dec
int
lcall
xchg
inc
or
xchg
fwait
call
jns
adc
jl
push
iret
insb
je
cmp
mov
jns
jp
jb
xchg
jne
push
pop
jg
movsl
ret
mov
xchg
int3
imul
popl
cmp
std
pop
lea
xchg
jb
jae
push
jmp
addb
fwait
jno
pop
mov
pushf
mov
fistps
test
addb
adcb
popf
ror
cmpsb
rolb
jns
mov
repnz
jae
push
inc
leave
fdivs
out
mov
nop
int3
stc
mov
jl
inc
setg
je
ret
lds
jns
mov
mov
in
fwait
rcrl
outsb
jl
iret
cmp
dec
andb
sub
mov
das
pop
lcall
mov
hlt
lods
xchg
iret
mov
push
adc
popf
cli
enter
out
leave
fisttpl
jl
les
mov
push
dec
es
mov
cmp
jbe
pop
sbb
cltd
jnp
enter
lcall
out
jne
outsl
inc
stos
jno
test
jg
test
jb
cmp
mov
cmp
jp
es
jp
and
inc
cld
inc
lret
xchg
cli
dec
lcall
cmp
stc
les
or
push
clc
jl
lret
and
jle
jg
lods
sbb
mov
int3
outsb
mov
enter
lea
push
stc
mulb
mov
test
and
imul
nop
repz
jo
mov
push
sbb
pop
icebp
insb
xchg
mov
inc
das
stos
mov
pop
pop
lods
jl
pop
mov
outsl
and
cli
negl
jb
cltd
jo
xchg
mov
pop
outsl
mov
cld
mov
xchg
mov
jp
lcall
lahf
out
mov
xchg
insl
shlb
scas
xchg
cli
push
inc
iret
inc
push
sub
fbld
xchg
lret
inc
test
push
push
mov
mov
fstps
loope
arpl
push
fidivs
lods
lret
jle
pop
push
daa
popa
insb
jo
sarb
lods
and
pusha
outsl
aad
sahf
xchg
sbb
iret
mov
cwtl
push
inc
stc
shlb
jge
loop
mov
fbstp
or
sub
imul
jb
jp
cmp
out
jne
loope
mov
jge
jg
xchg
mov
fmul
xchg
jae
testb
inc
ffreep
jbe
inc
pushf
js
xor
lret
xchg
adc
jns
jp
jne
stc
loopne
push
jno
inc
jae
xchg
mov
out
es
pop
loopne
lret
xchg
stos
xchg
nop
and
jne
fildl
lods
lret
shl
push
xchg
mov
test
int
lcall
call
sbb
nop
sub
push
mov
xchg
sub
sarb
mov
js
lock
shll
jbe
ja
mov
lds
pop
lods
xchg
lea
lret
jp
pop
mov
push
adcb
loop
and
std
leave
jg
jbe
rcl
sti
into
adc
adc
or
adc
inc
jne
xorb
inc
inc
xchg
data16
imul
imull
out
jno
lea
xor
add
leave
stc
cwtl
insb
jp
insl
fadd
shlb
fcom
jnp
arpl
rcrl
sbb
push
xor
mov
sbb
fimull
and
jnp
pushf
jl
into
jge
pushl
iret
dec
add
mov
sub
pop
in
jno
sti
mov
adc
xor
jbe
xchg
in
xor
jbe
inc
inc
sbb
cmpb
cmp
stos
mov
popf
sbbl
or
lret
sbb
jge
jl
in
cwtl
jae
add
xchg
leave
mov
jl
push
sbb
lret
mov
int
insl
pushf
popf
lea
cwtl
lods
iret
jg
scas
pusha
cmp
push
lret
sub
and
outsl
sahf
nop
pop
jp
adc
xchg
ret
jns
test
mov
js
cwtl
mov
add
rcr
mov
adc
jle
sub
addr16
fcoms
jl
rcrb
mov
adcl
leave
movsb
pop
lret
insl
inc
add
xchg
into
je
mov
sti
sti
add
jnp
cmpsl
jno
dec
rcll
mov
xchg
lea
mov
int
jmp
mov
mov
ss
dec
fsubrs
addb
addb
ret
sbb
and
jo
jl
js
mov
aam
cli
movsl
in
cwtl
jns
mov
xor
pop
jp
in
pop
aad
cltd
jns
fwait
into
inc
xchg
aam
lret
ljmp
mov
and
and
stos
lahf
xchg
add
xchg
pop
fcmovnb
fisttpll
fistpll
push
negl
jle
jb
cmpsb
jae
jg
xchg
int
mov
outsl
mov
cmp
je
push
cld
sub
in
jae
pop
subb
insl
xchg
inc
jge
mov
mov
fwait
lods
hlt
pop
jecxz
inc
xchg
mov
xchg
jae
aas
int
call
jl
add
insl
jno
xchg
cwtl
aam
pop
mov
imul
repnz
or
out
or
popl
xor
test
pop
add
jp
xchg
imul
jne
mov
mov
imul
aam
lahf
hlt
dec
pop
push
mov
lret
lcall
jne
stc
rolb
jae
jno
outsl
mov
imul
aas
pushf
lock
sub
dec
sub
rorl
out
lock
fdivrs
mov
das
cmp
cmp
jge
rcrb
jle
les
sahf
pop
jnp
mov
int3
inc
and
movsl
xlat
daa
push
mov
cmp
insb
pop
jge
jne
pushf
jle
lods
imul
adc
movsb
pop
test
push
into
cmc
ret
lea
jecxz
jmp
popf
mov
cmpb
lcall
cmp
cli
js
outsl
popf
popl
insb
mov
mov
sub
outsb
cld
jmp
mov
lea
push
jae
movsb
inc
inc
add
pop
rorb
mov
daa
adc
loop
and
xchg
inc
popf
mov
imul
xor
mov
lcall
cmp
jnp
dec
insb
mov
mov
jo
lret
mov
inc
pushl
insl
jl
aas
fsubrs
adc
sub
arpl
int
inc
xchg
stc
mov
mov
add
push
lret
jae
xor
cmpsl
arpl
aas
lds
xchg
jg
mov
imul
xchg
cmp
ret
inc
fisttpll
mov
push
add
cltd
popl
out
fwait
das
bound
je
cmp
sub
mov
int3
lahf
jbe
adc
sahf
mov
cltd
pop
cmp
xlat
outsl
lcall
out
jne
ret
mov
lahf
negb
iret
fistps
in
dec
pop
inc
cmp
jns
inc
fisubs
test
and
js
mov
mov
lcall
outsl
jge
lea
outsl
cs
sub
js
sarl
in
cwtl
inc
xlat
pop
orb
test
loopne
mov
out
mov
imul
jne
xchg
ja
rclb
lret
or
stos
orb
jne
mov
mov
mov
jo
rolb
rcl
or
je
pop
leave
jne
lret
lcall
leave
jg
cmp
mov
pop
outsl
fmul
into
jae
repz
mov
stos
movsl
xlat
pop
xchg
outsl
fistpl
pop
fmuls
scas
rcl
lea
lcall
xchg
iret
jb
inc
arpl
mov
insb
or
stc
lret
lahf
mov
mov
ret
xchg
inc
add
cmp
xchg
mov
jnp
xchg
xlat
jnp
fcomp
xchg
in
lahf
pushf
lea
nop
inc
xchg
dec
add
aaa
fidivrs
pop
nop
sbb
fstps
clc
mov
pop
pop
cmp
cld
cs
pop
jle
movsl
sbb
jecxz
cmc
xchg
mov
fiaddl
ss
jne
in
xlat
mov
lahf
subb
popf
xor
and
mov
xchg
sub
mov
dec
fisttpl
jle
lahf
cli
in
jb
pop
inc
orb
shlb
into
les
jg
sti
fcomps
fwait
lea
mov
cmp
cmpsl
cmp
mov
jnp
mov
aas
fdivp
sarl
test
push
mov
xchg
nop
pop
push
and
cmpsb
xor
cwtl
xchg
jp
fsubs
dec
lcall
mov
adc
xchg
sbb
dec
mov
cmp
popf
jbe
pop
leave
insb
orb
xlat
std
int
into
dec
sarl
dec
jnp
addr16
push
mov
imul
dec
cwtl
aas
fcompl
lds
jl
imul
mov
outsb
push
push
sub
inc
sbb
cltd
lds
xchg
and
mov
fsubs
aam
sbbl
xchg
lea
jmp
leave
ljmp
or
jno
xchg
jmp
pop
cld
mov
inc
adc
into
jbe
popf
rol
out
mov
xchg
xor
mov
iret
sub
leave
jb
stc
sub
xchg
pop
movsb
cltd
jp
push
sbb
int
subb
push
add
daa
jg
mov
mov
fnsave
test
push
xor
mov
inc
sbb
sahf
xchg
lcall
adc
cmpsl
and
mov
mov
fwait
cltd
mov
jno
into
jg
nop
cwtl
inc
mov
jae
pop
push
cli
dec
push
fstpt
jo
jb
push
call
xor
outsl
mov
je
add
xchg
jne
imul
movsb
cli
mov
je
xchg
jnp
jno
inc
rcl
lahf
jp
lret
jge
xchg
cld
int3
aas
js
popf
outsl
imul
mov
and
int3
add
loopne
cwtl
iret
outsb
aad
cmp
mov
mov
in
inc
aam
ficoml
lcall
xchg
das
lea
inc
push
push
add
mov
mov
outsl
call
aam
rcl
mov
shlb
mov
lret
xchg
imulb
pushf
in
addr16
iret
push
mov
mov
pop
jl
jb
mov
xorb
mov
rcrb
jge
mov
stc
lods
pop
mov
pushf
xchg
inc
xlat
das
sbb
lcall
xchg
test
ror
jle
iret
xor
lcall
ror
xchg
mov
fwait
mov
jecxz
lea
pop
sbb
lret
jp
cmp
pop
mov
jp
int3
loopne
cmp
fidivs
jne
int
adc
dec
lds
pop
xchg
cld
xchg
push
pop
and
dec
aam
add
pushf
cltd
xchg
mov
mov
stos
xchg
ja
xchg
add
lret
jle
jg
push
outsb
push
jns
cmp
and
nop
or
pop
mov
jle
cmp
outsl
lcall
out
add
stos
mov
jae
call
inc
cmpsl
push
jae
fs
mov
aaa
jo
pop
xlat
jmp
js
xchg
mov
and
jns
mov
jnp
pop
xchg
jle
xchg
iret
call
int
jo
add
mov
adc
inc
nop
push
imul
out
fsubs
lods
mov
lcall
mov
imul
popf
mov
shlb
push
repnz
adc
aaa
inc
aaa
or
lea
pop
mov
or
push
cltd
lcall
fwait
sub
push
outsl
xchg
mov
push
gs
outsb
inc
push
jb
xor
add
mov
or
jmp
ds
call
lods
imul
mov
jle
ja
xchg
cmc
fsubr
mov
xchg
pop
lods
mov
jnp
inc
data16
imul
inc
rep
lods
xchg
jno
lcall
out
xor
inc
push
subb
cmp
int
leave
cmp
mov
iret
jae
outsb
int3
insl
std
nop
lods
iret
mov
js
lret
jae
sub
sti
gs
cmp
pushf
leave
ss
imul
daa
mov
push
cmp
jo
push
inc
dec
jno
outsl
dec
or
cltd
loop
fcmovnu
inc
subl
cmp
jae
lret
iret
lea
clc
mov
mov
aaa
and
enter
test
jnp
dec
outsl
jg
arpl
xor
pushf
xchg
decb
cwtl
adc
fnstsw
pop
out
mov
rorb
cmp
or
pop
repnz
sbb
cltd
xchg
insb
pop
jbe
cmp
push
bound
ja
ds
leave
iret
imul
sahf
xchg
mov
or
jnp
xchg
cwtl
inc
icebp
rcll
pop
cmpl
jb
jle
sahf
pop
pop
out
pop
push
test
stos
enter
popf
addr16
mov
jl
cmpb
mov
arpl
mov
hlt
test
pushl
jae
mov
inc
fst
jae
js
or
mov
lret
in
in
jns
mov
addr16
fmuls
jae
lds
fldt
aaa
stos
or
jnp
das
lods
jno
ds
adc
xchg
in
outsl
sbb
pop
fisttpll
mov
xlat
loope
push
inc
ss
or
jnp
mov
push
pop
mov
lret
inc
xor
mov
fsub
pop
out
xchg
int3
nop
icebp
sub
insl
pop
jle
xlat
sbb
push
and
fisubrl
mov
jns
movsl
xchg
leave
outsl
andl
out
ja
ja
sub
jecxz
insl
outsb
sbb
subb
xor
mov
mov
aaa
in
lcall
sti
lods
nop
xchg
ja
std
int3
sbb
push
jmp
dec
cli
push
jne
pop
test
inc
jb
into
int3
iret
je
test
cmp
outsl
jno
rcrl
std
fsub
mov
fiadds
and
adc
xlat
xchg
push
outsb
fistpll
xor
leave
jne
xlat
xchg
jb
jnp
inc
pushf
add
outsb
jne
clc
jnp
push
inc
int3
lcall
push
jg
fdivs
out
and
aam
dec
jecxz
mov
test
jge
jl
dec
popl
xchg
jp
mov
inc
jge
lahf
inc
sahf
mov
mov
cwtl
adc
lret
lcall
into
repz
push
mov
and
cli
mov
sahf
adc
lret
fistl
out
pop
dec
sbb
pusha
or
sti
std
lds
inc
xor
popf
jb
jns
sahf
ja
ja
dec
lret
mov
lcall
jns
xchg
arpl
lea
push
insl
int3
push
cmp
nop
mov
jle
mov
stos
out
xchg
out
sahf
jo
in
mov
xor
dec
mov
je
mov
sbb
jo
out
mov
cltd
jns
cltd
inc
jl
seto
sbbb
pop
jge
jg
aam
xchg
jp
insb
pop
jbe
inc
stc
push
inc
cld
sbb
jb
pop
jp
sbbb
lcall
mov
mov
rcrb
xchg
fidivl
inc
push
stc
push
fisubrs
das
xor
pop
ja
iret
push
rcrl
xchg
sub
jge
push
jp
jg
cli
and
xchg
imul
jg
jne
test
mov
call
repz
jge
out
outsl
dec
lea
pop
fistps
inc
pop
cmp
sub
sbb
mov
mov
rcr
addl
push
xchg
arpl
leave
jecxz
clc
fwait
xchg
add
inc
lods
jo
mov
jns
jmp
aam
imul
jb
cwtl
mov
cmpsb
in
addb
push
jno
test
mov
nop
xchg
outsb
cmp
insl
jnp
rcrl
into
jl
jae
data16
jecxz
push
outsl
aad
push
mov
aam
mov
std
sbb
insl
adc
cmc
cwtl
sahf
dec
xchg
cmpsb
jbe
fdivs
sarb
fwait
cld
data16
xchg
mov
jge
xchg
pop
jp
cmp
sub
jecxz
sub
imul
lcall
int3
mov
arpl
fsubr
mov
mov
out
aad
insl
fsub
stc
lds
xchg
js
xchg
or
or
xchg
xchg
jg
adc
mov
add
mov
rol
js
xchg
nop
add
jne
test
pop
inc
sbbb
mov
xchg
das
dec
jae
dec
outsl
fmull
enter
jae
int
xchg
mov
mov
push
mov
das
int3
call
test
sahf
xchg
jnp
stc
and
pop
ljmp
arpl
mov
add
imul
mov
jl
sub
and
adcl
mov
mov
add
fidivrl
push
sbb
cmpsb
jp
cwtl
imul
rolb
mov
lcall
leave
into
popa
xchg
xchg
jne
aaa
rolb
imul
dec
arpl
jge
repz
insl
andb
lahf
adc
outsb
jl
shrb
ret
jae
pop
jne
mov
or
int
mov
popf
js
xchg
mov
pop
aam
adc
xchg
popf
enter
xchg
adc
sbb
out
test
fwait
lods
ds
data16
cltd
xor
movsl
jae
cmpsl
fnsave
out
test
jg
jecxz
lcall
mov
mov
pop
aam
in
fsts
sub
popw
leave
outsb
xchg
test
push
loop
shrb
xchg
jno
scas
imul
inc
or
mov
jb
sahf
cmp
int
add
in
mov
aam
jge
pop
loopne
leave
mov
xlat
dec
iret
test
push
popf
push
andb
shrl
mov
inc
push
inc
jg
cmp
mov
enter
sahf
pop
pop
sahf
lret
lret
aam
rcrb
neg
mov
mov
jno
imul
sub
ds
xchg
inc
xchg
jnp
pushf
adc
and
test
jns
outsb
push
jl
push
add
mov
adc
jg
mov
out
mov
sbbb
outsl
fs
cmp
jno
orb
rcll
xlat
movsl
nop
lahf
push
ja
int
arpl
scas
pushf
mov
mov
mov
xchg
into
cmp
fmuls
add
icebp
pop
mov
mov
and
lahf
mov
out
sub
call
pop
sub
xor
imul
inc
mov
jmp
jno
leave
jne
xchg
into
jno
add
pop
out
jbe
inc
sbbb
or
or
aam
push
mov
in
sub
stc
mov
enter
lcall
jb
mov
inc
fiaddl
xchg
jns
cltd
out
mov
push
mov
xchg
mov
mov
test
push
arpl
jg
xor
xchg
lea
fdivrs
push
push
adcb
mov
mov
adcb
xchg
xlat
push
cmp
mov
inc
mov
xchg
clc
fcmovnbe
jno
fwait
outsl
jle
dec
inc
dec
xorb
xchg
iret
xchg
insl
ret
sub
adc
leave
mov
cmp
dec
fwait
xchg
jb
mov
xchg
ficompl
loope
cwtl
dec
aaa
and
cmp
je
stos
lcall
popf
aaa
loopne
lret
mov
fmul
mov
call
popf
pushf
sbb
lret
adc
aam
jnp
jne
cmpsb
outsb
or
ss
cmp
jp
adc
mov
dec
push
jne
mov
cli
out
imul
in
sub
cmp
jno
dec
xor
jmp
das
aam
xchg
popl
popf
outsl
ja
call
mov
or
out
std
int3
pushf
addb
lahf
jae
mov
jecxz
jb
xchg
lods
out
lods
jae
mov
adc
out
mov
addr16
xchg
iret
jbe
dec
or
jl
jle
mov
xchg
mov
leave
sbb
daa
sbb
lret
pop
nop
mov
shlb
pop
adc
daa
add
sbb
in
lahf
fcmovnbe
outsl
and
mov
lahf
xchg
arpl
mov
mov
inc
adc
mov
pop
dec
xchg
sbb
xor
mov
out
jns
ror
xchg
sub
jge
and
int
in
andb
into
pusha
adc
sub
jg
rcrl
jp
dec
jmp
jo
pop
lods
dec
mov
jl
es
leave
mov
int
dec
fstpl
adc
in
jecxz
push
roll
mov
rcrb
mov
inc
cwtl
fadds
add
add
mov
lcall
mov
cltd
add
xlat
imul
mov
mov
je
repnz
jae
xorb
fucomip
ja
ret
jnp
aam
jg
test
arpl
stc
pop
xchg
xchg
jns
insb
sbb
mov
sub
cwtl
mov
lret
inc
xorb
rcrb
hlt
pushf
pop
pop
test
mov
lahf
fdivs
xor
jns
shlb
pop
pushf
push
stos
ds
pop
shlb
mov
nop
aam
pop
aaa
and
or
xchg
lahf
imul
in
bound
or
in
sarl
and
fcom
inc
fbld
inc
cmp
xchg
hlt
jns
push
fadd
mov
fwait
jno
aaa
dec
and
call
xor
popf
mov
imul
or
jne
mov
mov
mov
lds
lods
xlat
loop
in
and
cmp
cmp
xchg
cltd
jl
mov
int
jb
jmp
imul
push
sbb
jns
rcrb
xchg
int3
lea
cli
test
lea
pop
xchg
sub
mov
pop
push
inc
cli
arpl
sahf
das
jae
jp
mov
clc
ret
or
fwait
and
cmpsl
js
leave
aad
iret
xchg
out
sbb
inc
je
jle
xchg
jnp
lcall
or
cmp
in
xor
lret
inc
mov
mov
push
mov
mov
jne
icebp
push
cmp
pop
ja
inc
inc
scas
lret
pushf
lcall
inc
dec
sahf
aaa
jp
adc
sub
mov
xchg
outsl
or
shrl
cmp
jmp
rcrl
inc
ret
cmp
aam
lea
imul
inc
add
rolb
lret
cmp
imul
lcall
out
pushf
ficomps
mov
cmp
xchg
adc
dec
lcall
sbb
orl
imul
into
cmp
mov
cmp
jg
inc
lahf
lret
inc
cltd
mov
mov
pop
mov
pushf
aam
iret
push
xor
sahf
cmp
jp
sbb
jne
push
scas
pushf
rolb
mov
mov
push
js
pop
jnp
sarl
arpl
xchg
or
test
xor
cld
popf
addr16
ja
inc
mov
lcall
mov
sahf
jl
lahf
jnp
jno
jae
pop
stos
lea
sub
lret
cmp
inc
push
mov
lret
jle
push
ror
outsl
inc
orl
xor
xchg
mov
mov
outsb
jge
outsl
leave
inc
mov
push
jmp
xchg
adc
mov
mov
out
aam
jb
int3
popf
mov
mov
dec
add
xchg
dec
lcall
xchg
test
iret
cmpsl
pop
jne
outsb
aaa
mov
cmp
cwtl
sete
mov
out
mov
leave
dec
dec
cmp
xor
xchg
jle
xchg
fdivs
inc
xchg
cmpsl
push
jecxz
lret
jg
pop
xchg
popf
xchg
mov
xchg
mov
mov
jb
insb
adc
jge
rorb
aam
inc
inc
lods
lea
mov
test
push
insl
pusha
mov
xlat
int
cltd
adc
jp
lret
mov
xchg
into
lcall
rcl
popf
sahf
mov
xchg
imul
mov
sbb
mov
data16
adc
mov
lahf
xchg
xchg
or
mov
sbb
fsubrs
lcall
xchg
cmp
mov
in
insl
sbb
outsb
rcrb
ja
xlat
mov
imul
jno
jne
imul
ja
mov
daa
dec
lret
cmpsl
or
xchg
xchg
sahf
mov
aam
jne
outsl
lret
jg
xlat
call
nop
out
lahf
insl
jae
jb
xchg
cld
das
lret
outsb
arpl
xchg
test
testb
lcall
stos
or
push
sti
sub
adc
cli
out
add
je
cmp
sarb
icebp
fisubrl
cwtl
ficoms
inc
in
mov
lea
lds
jmp
sub
outsl
pushf
mov
xchg
jo
jae
xor
xchg
push
push
sbb
je
insl
in
jp
sub
jns
mov
enter
mov
inc
iret
rcr
mov
imul
in
xchg
lock
jbe
sub
aaa
test
cltd
rolb
adc
push
sahf
ja
xlat
or
ss
mov
stos
mov
jo
or
outsb
sub
loope
iret
push
outsl
aam
jp
aam
jne
out
mov
lret
orb
and
fnstcw
int3
imul
fwait
xorb
insb
leave
mov
sub
inc
xchg
das
test
mov
xchg
insl
pop
fcoms
jecxz
xlat
jae
sub
les
dec
bnd
ljmp
int
inc
add
movsb
sub
fwait
test
les
lret
insb
jo
rolb
mov
jns
ja
pop
pop
mov
xlat
int3
dec
lods
adcb
pop
cmp
jne
inc
jl
xchg
cmp
fwait
jnp
enter
icebp
outsl
xor
outsl
lods
inc
jg
cmp
mov
mov
xchg
into
imul
ret
jp
jle
mov
in
mov
stc
ss
xchg
orb
jle
inc
cmp
lcall
xor
jnp
jne
call
mov
jg
imul
mov
add
aas
pop
data16
jp
cmp
adc
lcall
mov
adcb
push
shrb
push
lret
and
sahf
insl
lcall
pushf
cmc
dec
adc
cwtl
or
lahf
sub
jnp
jecxz
jno
int
leave
mov
leave
xchg
xor
pop
nop
pop
push
mov
bound
xchg
arpl
pop
mov
lcall
xchg
int
aam
mov
jl
popf
xlat
in
or
dec
jmp
inc
mov
test
lahf
mov
xchg
aam
pop
neg
outsb
aam
pop
mov
sub
aam
pop
lahf
arpl
jae
insl
data16
jg
pop
cmpsb
jp
pop
das
out
adc
cmpb
jne
pop
mov
mov
jecxz
sbb
adc
pusha
adc
jge
outsb
mov
out
arpl
ror
adc
lahf
imul
int3
pop
push
jno
pop
arpl
loopne
repnz
das
cs
sbb
fwait
sub
inc
fdivrs
dec
iret
lret
xor
aad
jp
pop
popa
arpl
subl
jae
mov
jne
xchg
or
das
jbe
mov
and
pushf
xchg
int
popa
arpl
jbe
test
sub
or
arpl
ret
ficompl
push
inc
pop
push
mov
jge
and
jge
jmp
arpl
fs
xchg
push
xlat
bound
bound
dec
arpl
adc
fwait
je
icebp
daa
sub
xlat
lods
or
xchg
pop
or
arpl
inc
mull
jbe
and
xchg
mov
or
xor
sbb
arpl
sub
arpl
xchg
adc
xchg
jmp
xchg
add
jmp
pop
arpl
add
or
jmp
arpl
in
or
jmp
aam
jbe
in
pop
rorl
jg
push
pop
arpl
fnstenv
add
jbe
dec
arpl
loope
push
fists
imul
arpl
pop
arpl
cmpsb
push
jnp
jmp
jnp
xchg
arpl
adc
int
pusha
sub
jmp
outsb
xchg
pop
cmpsb
sbb
cmp
fstl
jge
les
push
mov
lea
xchg
xchg
lea
sub
mov
push
daa
adc
sub
cmp
insb
jl
outsl
data16
pusha
jb
jns
mov
pop
or
mov
in
jge
adcl
xchg
xchg
leave
mov
inc
popf
movsb
cwtl
pop
cmc
mov
je
stc
imul
lret
mov
aam
mov
imul
mov
xorb
pop
push
mull
sti
imul
inc
xchg
out
jae
inc
mov
jnp
jne
popf
xchg
or
mov
adc
scas
lahf
in
xchg
fistl
inc
stos
int3
jnp
pushf
inc
xorb
mov
insl
lea
pop
lods
inc
orb
sub
mov
dec
stos
mov
enter
sbb
pop
push
outsb
fmul
into
lahf
insl
xchg
jge
add
mov
out
inc
iret
imul
popf
pop
push
out
mov
mov
mov
iret
imul
cwtl
xchg
mov
lret
test
xchg
cmp
adc
xchg
mov
mov
lods
call
imul
int3
ret
xlat
mov
out
mov
out
xchg
xlat
repnz
mov
lret
jb
insb
filds
add
rcl
mov
mov
mov
sahf
arpl
jne
dec
outsl
push
loop
xchg
sbb
push
imul
jmp
mov
in
jno
xchg
inc
mov
lret
gs
xchg
leave
lcall
mov
cs
sahf
cmp
dec
aaa
mov
js
sti
out
lcall
inc
je
xorb
into
pop
loope
fildll
movsl
pop
jg
hlt
xchg
pop
repz
xchg
lahf
lods
lcall
push
fdivs
dec
loop
fwait
mov
insb
loop
jnp
nop
in
fistpl
push
push
jne
mov
mov
insl
jg
lahf
push
clc
mov
inc
gs
data16
je
imul
pop
xchg
xchg
jno
pop
push
inc
loope
cltd
inc
pop
cld
cltd
inc
outsl
sub
in
jl
cmpsb
and
mov
dec
push
imul
arpl
je
sbb
das
fbld
add
sahf
cs
mov
fsubl
xor
pop
ja
ja
ficompl
lods
es
js
lods
insl
dec
call
add
mov
cltd
lea
jbe
je
outsl
aam
rorl
and
mov
mov
loope
mov
xor
addr16
sar
in
dec
and
sub
adc
mov
mov
pop
arpl
jb
adc
push
jno
mov
jb
outsb
xchg
arpl
cmpsb
test
xchg
xchg
jne
cltd
xchg
mov
ret
js
jbe
out
lcall
arpl
sbb
mov
dec
mov
jle
push
aad
mov
cli
rolb
ret
into
cltd
or
inc
and
push
sahf
int3
fmul
jecxz
jnp
and
ja
mov
jbe
xlat
mov
cli
jle
insb
aad
mov
insb
int3
out
xor
cltd
jo
mov
xchg
imul
jae
push
std
sub
aaa
cwtl
pop
sbb
hlt
jmp
xchg
int3
or
xchg
xor
cwtl
cmp
jns
out
lret
sti
cmpb
int3
insb
mov
pop
mov
cltd
jne
loope
mov
clc
test
pusha
mov
out
mov
jnp
iret
imul
jae
sar
and
ja
sbbb
rcll
push
pop
mov
fwait
jg
sbb
lods
inc
jnp
jo
cmp
lcall
jb
mov
imul
testl
je
ja
and
jge
mov
xchg
clc
and
add
xorb
mov
pop
lret
test
cli
cmpsb
sahf
out
lcall
jle
mov
scas
xchg
pushf
ds
cld
fs
into
jae
mov
imul
aaa
mov
add
fcmovnu
jb
inc
sarb
gs
adc
push
sub
outsb
pushl
lret
call
jg
rclb
inc
cwtl
inc
jge
xlat
icebp
mov
sbb
lahf
call
popl
out
test
jg
test
leave
jne
cmc
lret
xchg
xor
into
mov
jno
cltd
arpl
stc
ja
jp
mov
xchg
push
rclb
jmp
stos
insl
aaa
mov
jl
mov
cwtl
dec
push
sbb
inc
mov
jnp
mov
nop
push
jb
jle
fwait
bnd
mov
mov
sub
push
cltd
mov
jnp
outsl
sbb
xchg
iret
popf
lcall
pop
push
cmp
int
mov
pushf
cltd
jg
xchg
push
les
mov
xor
rol
jecxz
inc
outsl
lea
jno
xchg
mov
add
cmpb
data16
insb
int
outsl
jl
ret
insb
in
jg
or
mov
stos
outsb
inc
imul
arpl
xchg
outsb
mov
lret
cltd
fwait
imul
cmpb
iret
lea
push
movl
insb
stos
outsl
shlb
leave
xchg
imul
mov
int3
inc
cwtl
xchg
insb
data16
in
pop
xchg
ja
add
fs
lret
insl
insb
xchg
outsl
mov
in
arpl
pushf
inc
inc
jo
into
xchg
inc
inc
pop
insb
das
movsb
outsl
mov
xchg
pop
push
in
push
aam
ja
jmp
pop
pop
jo
outsb
outsl
insl
xor
pop
sarb
out
je
mov
lahf
stos
xchg
jno
xchg
js
cwtl
popf
aam
iret
pushf
and
xor
mov
sbbb
lret
jae
pop
jp
lcall
mov
and
jns
push
push
cmp
mull
cmpsl
mov
xchg
jns
aam
add
sahf
pushf
pusha
test
fwait
cmp
outsl
sub
sbb
jge
idivl
xchg
mov
xchg
lock
aad
popa
arpl
jge
imul
xor
sbb
jl
push
mov
jne
add
push
add
ljmp
mov
xchg
fmulp
xchg
lahf
or
ror
xchg
mov
mov
subb
jle
pushf
mov
popa
jns
out
xchg
test
adc
in
pushf
loope
jne
or
mov
ljmp
in
lret
mov
xchg
enter
inc
or
stos
mov
lahf
cmpsl
js
ret
mov
mov
outsl
jno
mov
shlb
mov
into
aam
or
adcb
je
jp
out
push
outsb
stos
jle
mov
xchg
int
inc
or
pop
or
add
sbb
xchg
or
dec
mov
arpl
mov
cwtl
incl
mov
popl
mov
xchg
push
lret
fsubrs
rorb
cwtl
js
fdivrs
das
push
jg
fidivs
xor
jne
iret
imul
jb
xchg
outsl
jg
fcomp
lcall
outsb
insl
mov
xor
lahf
jp
call
popf
mov
bswap
or
xchg
or
aam
jb
mov
js
das
sbb
mov
nop
cmp
ret
lret
or
lods
mov
mov
xchg
xor
push
sbb
push
cmp
shll
sbb
pop
popa
mov
cmp
mov
lret
inc
add
xchg
lock
xlat
mov
add
jae
adc
sub
nop
js
jp
mov
daa
lcall
jne
mov
xchg
inc
stos
imul
xchg
mov
addr16
push
adc
insl
dec
int3
mov
sahf
dec
mov
push
jns
cmp
or
lcall
jge
jb
or
out
lods
jg
cmpb
add
fnstcw
xlat
aam
inc
mov
pop
rolb
sti
push
sbbb
xor
icebp
lcall
cmp
nop
pop
xlat
leave
rorb
cmpl
xorb
sbb
loope
mov
xor
mov
cltd
leave
lret
in
sub
jg
push
cmp
xchg
subb
jle
push
mov
xchg
mov
ja
dec
jns
jbe
nop
xchg
nop
mov
mov
mov
lds
insb
jbe
jle
outsl
andl
dec
sub
xchg
dec
test
iret
repnz
cld
mov
sbb
andb
mov
mov
int3
mov
sub
jl
imul
jae
lock
lret
inc
les
jl
rcl
mov
aad
int
mov
outsl
sub
inc
addr16
in
jno
xor
sarb
cmpsl
in
lret
mov
popf
test
addr16
inc
sbb
outsl
adc
jne
aam
mov
lret
jns
mov
ja
jnp
aas
jae
jae
lods
je
mov
mov
int
fwait
test
lea
cli
pop
in
cwtl
jmp
lret
xchg
int
push
mov
sbb
xlat
test
lret
cwtl
xor
cltd
mov
jg
push
movq
ror
mov
int
mov
jns
jl
mov
in
jae
mov
mov
sti
xlat
nop
lcall
mov
imul
jle
jb
cwtl
jnp
jge
fmuls
out
repz
inc
ja
imul
imul
lods
mov
cmpl
jns
cmp
int3
xchg
sahf
and
aad
mov
iret
bswap
ret
jae
xor
xchg
xchg
jne
das
pop
sbb
addr16
int
into
test
mov
scas
stos
jnp
jle
push
decl
stos
jns
iret
out
sbbl
mov
mov
xlat
lahf
insl
lahf
outsb
je
sbbb
inc
fmul
addb
inc
lods
imul
aaa
cmpsb
push
cmpsl
dec
mov
outsl
jns
or
pop
scas
adc
bswap
addr16
imul
fmul
pushf
inc
pop
mov
fwait
xchg
imul
xor
fstl
jle
daa
int
shlb
pop
xchg
fiadds
and
sti
sti
cmpsl
push
pop
out
fwait
out
imul
out
inc
jo
inc
shrb
je
aas
cmp
jnp
in
insb
jns
xor
pop
jl
lcall
add
cmp
cmp
fwait
stos
pop
adc
jb
cs
ja
xchg
js
call
push
dec
and
enter
or
out
js
divl
dec
icebp
jp
xchg
mov
xor
or
lcall
mov
pushf
cmp
adc
mov
xchg
jns
cmp
jo
jp
mov
cltd
jbe
push
jno
jns
aam
push
mov
jne
lcall
test
lea
mov
aaa
sbb
xchg
xchg
jae
lods
int
add
into
mov
rcl
pop
repz
imul
imul
mov
jmp
stos
dec
or
mov
ja
jge
jg
insb
mov
rolb
mov
popa
pop
loop
push
setb
xchg
mov
popa
add
adc
or
pop
push
mov
fisttpl
or
push
push
xlat
adc
aaa
aas
sbb
pop
sub
inc
icebp
jns
shrl
into
jb
es
mov
dec
sub
jne
adc
pop
mov
into
or
jnp
lret
es
push
fdivrs
jg
stos
sub
or
sarb
test
pop
ja
sbbb
ror
or
adc
pop
cmp
lret
sbb
aam
das
lret
pop
adc
cld
outsb
popf
notb
outsl
sub
inc
lea
and
xor
mov
push
fwait
or
cmp
sub
icebp
aam
int
xor
inc
outsb
rorb
jne
cs
pusha
out
imul
push
mov
xchg
addl
xchg
into
add
push
jp
mov
mov
icebp
lea
inc
test
mov
mov
iret
subl
insl
jne
jne
cmp
push
mov
test
lock
mov
addb
mov
xchg
lcall
ror
sbb
jbe
mull
jno
adc
lahf
cmpb
lret
xor
pop
jo
das
or
fmuls
mov
pop
push
frstor
pop
loope
dec
mov
xchg
mov
lahf
fwait
clc
xor
lret
pop
inc
scas
push
xchg
lods
rclb
arpl
cltd
fnstsw
lods
jbe
popf
bound
xchg
add
leave
jl,pt
mov
iret
out
imul
cld
xor
jb
cmp
lret
cltd
out
dec
into
js
fsubs
inc
lret
dec
aad
iret
xlat
leave
inc
jecxz
int
sub
sbbb
nop
outsb
outsb
jns
dec
inc
inc
lods
jnp
add
nop
je
sbb
sub
inc
loopne
lahf
popf
aaa
dec
test
out
inc
sahf
jo
scas
jae
pop
inc
sti
lret
aam
xchg
pop
inc
movsl
jbe
lcall
inc
cltd
int
mov
arpl
dec
push
je
stc
test
pop
or
xchg
out
lea
ret
addr16
das
outsb
iret
xchg
lret
dec
mov
adc
jae
add
push
xchg
adcb
add
sahf
pop
iret
mov
ror
fwait
mov
cltd
mov
shr
xor
ja
jle
aam
hlt
cltd
mov
or
jp
xlat
xchg
xchg
xor
or
fimull
lret
jge
push
test
inc
mov
jnp
adc
pop
xorb
cmpsl
sub
xchg
add
xchg
lea
outsl
lahf
movnti
jg
jns
sub
jae
adc
jo
push
repz
or
mov
mov
inc
aaa
hlt
pop
nop
adc
mov
jg
cmpsl
iret
push
mov
jp
jns
fstpt
mov
sarb
out
addl
outsl
imul
mov
and
out
jge
adc
aaa
sbb
pop
outsl
or
and
rolb
cmc
call
add
cmp
jbe
in
pushf
or
mov
jmp
jg
jp
lahf
iret
cwtl
outsb
das
rorb
repnz
popf
xchg
pushf
sahf
push
push
rcll
addr16
jge
lea
xor
mov
lods
jo
mov
xchg
arpl
test
fdivs
mov
aad
xchg
mov
jbe
aam
mov
lods
aas
out
lods
popf
lods
test
je
add
jne
in
mov
int
jne
jno
mov
rcl
leave
mov
mov
jno
mov
fcoms
insl
pop
inc
xor
test
adcb
das
nop
ficompl
test
xchg
mov
sbb
int3
mov
fsubs
das
rclb
jge
jg
popf
xorl
jns
ja
addr16
shrl
mov
ja
jns
leave
mov
xchg
sub
mov
nop
insl
sub
aam
ds
xchg
ja
pop
xchg
lcall
xor
xchg
jo
fnstsw
ja
xor
cmp
das
ja
lahf
call
jnp
xchg
xlat
push
loope
mov
xchg
je
push
lcall
cmpsb
sbb
or
cmp
xchg
cmp
xchg
jp
jl
pop
lods
std
push
xor
sbb
cmp
popa
dec
and
cltd
inc
cwtl
enter
arpl
loope
in
iret
push
jne
xlat
sbbl
and
mov
mov
cmpsl
mov
jae
xlat
xor
push
sub
cmp
rclb
push
cmp
xchg
adcb
outsl
outsl
dec
test
into
fmul
dec
in
mov
lahf
xchg
jg
jb
in
add
or
xor
mov
popa
and
outsl
mov
jns
lea
jp
mov
xchg
inc
out
int3
cs
outsl
das
lret
jno
mov
lods
jbe
pcmpgtd
xchg
lahf
out
lret
jge
cmp
cltd
sarl
xchg
jns
sbb
mov
jp
insb
sub
mov
shlb
jp
add
inc
jne
and
pop
sahf
jae
mov
mov
ja
jg
cmpsl
mov
lahf
inc
pop
fbld
shll
aaa
sub
mov
insl
inc
fldl
mov
cmp
imul
movsb
cmp
je
ds
lds
ss
nop
mov
jne
aas
mov
xchg
cltd
outsb
pop
lret
mov
iret
lcall
je
out
das
mov
imul
fwait
xchg
adc
pop
xor
outsl
imul
ja
mov
lret
xchg
jecxz
mov
push
test
mov
rolb
nop
fwait
insl
outsl
or
gs
out
mov
push
in
leave
and
xor
mov
xchg
aaa
ljmp
ja
nop
mov
jg
fwait
xchg
enter
pop
xor
jb
pop
test
sahf
call
push
test
pop
imul
mov
insb
mov
mov
mov
jno
sbb
insl
lds
iret
aaa
mov
jge
jbe
inc
sarl
je
xor
jns
int
ljmp
xor
xlat
inc
int3
ja
add
cmp
xlat
pop
movsl
in
cmp
jge
inc
cmp
xchg
jmp
mov
leave
das
pushf
mov
jg
or
repnz
stc
mov
push
jo
fildll
push
test
mov
lcall
or
xor
push
mov
inc
cmp
int3
xchg
and
jne
into
lds
jbe
jg
seto
jnp
lods
leave
shrb
add
iret
mov
cwtl
shlb
in
mov
jnp
arpl
mov
js
loopne
xchg
jne
and
rcrb
xor
mov
mov
adcb
add
xchg
sub
push
cltd
xor
int3
cltd
mov
jp
adc
jmp
dec
mov
push
jg
pushf
xchg
mov
mov
inc
fwait
mov
fsubrl
lcall
inc
dec
stc
ja
inc
xchg
outsl
adcl
mov
ljmp
mov
imul
sahf
lret
mov
mov
jo
or
xchg
pop
inc
xchg
xchg
adcb
imul
lcall
adc
mov
mov
jle
test
mov
in
test
xorl
fidivs
shll
iret
int
mov
xchg
mov
jno
pavgw
inc
and
leave
mov
lret
lahf
hlt
pop
fsub
das
mov
adc
inc
jae
jnp
ja
jne
cmp
sub
icebp
mov
mov
cs
sbb
dec
adcb
xor
outsb
cmpsl
sub
fistpll
push
int3
pushf
mov
ds
mov
inc
inc
mov
mov
int3
lret
push
cltd
jne
mov
jbe
jg
lret
ja
xchg
test
jo
movsl
mov
imul
insb
jg
imul
jnp
adc
imul
jbe
jle
icebp
mov
xchg
mov
insb
iret
inc
mov
push
jb
jp
and
mov
jb
dec
jl
cmp
jnp
adc
sub
jno
fildll
cmp
cwtl
inc
push
aaa
sbb
xchg
sbbl
pop
mov
lods
xchg
js
mov
into
lret
mov
cwtl
loop
xchg
inc
in
add
enter
int
xchg
dec
xchg
pop
pop
sbb
cmpsl
aam
das
xchg
sbb
mov
mov
xchg
xchg
xor
cli
sbb
jp
mov
lret
mov
xchg
mov
lods
xchg
inc
xchg
leave
or
je
js
xlat
mov
ja
dec
sahf
pop
movsl
jo
iret
xlat
lret
imul
leave
xchg
mov
push
int
cmp
jns
jl
lock
sahf
subb
cmp
sub
gs
lahf
pop
ja
jae
fwait
jl
incb
cmp
popf
cmpsb
adc
cmp
lods
aaa
xchg
int
imul
mov
mov
xchg
lods
jae
into
enter
lea
lret
aam
jg
lret
int
cli
fsts
test
int3
lods
mov
inc
dec
adc
arpl
arpl
jno
btr
das
push
mov
xchg
fcoms
leave
mov
fisttpl
cmc
fwait
xchg
jno
lret
scas
mov
xchg
mov
je
pop
imul
jg
jno
dec
in
int3
mov
xchg
pop
cmpsl
out
lcall
shlb
iret
addr16
jb
ja
or
xchg
leave
mov
test
push
in
aad
push
imul
inc
cmp
xchg
push
cli
jmp
mov
jns
outsl
jp
sahf
addl
int
cwtl
pop
stos
jae
mov
ja
nop
cltd
imul
iret
repz
push
cmp
jecxz
mov
rcr
enter
lea
das
push
jae
hlt
test
jbe
jbe
mov
les
cltd
daa
pop
jne
popa
ja
and
push
xchg
mov
insl
pop
cmp
xchg
xlat
xor
jmp
addr16
insl
mov
inc
imul
xchg
jnp
jne
inc
fucomi
sub
jns
xchg
or
lret
pop
xor
mov
mov
lahf
xchg
and
nop
lret
add
jg
cli
xlat
jne
mov
fwait
jae
stc
jnp
cli
imul
iret
aaa
pop
jae
add
xchg
gs
stos
fwait
xor
lea
outsl
int3
mov
or
xchg
out
data16
pusha
jo
jnp
lret
cwtl
xchg
into
pop
lods
outsb
dec
or
out
sahf
ja
jo
pop
addr16
jbe
mov
adcb
in
inc
and
addr16
jns
outsl
jae
jg
fistl
dec
orb
xchg
jge
mov
fstpl
lds
loope
fimull
sahf
xchg
cwtl
and
sub
jle
test
dec
pushf
cmpsl
push
rclb
insb
pop
imul
xchg
movsl
ljmp
xor
mov
outsb
dec
ret
xchg
aam
sti
inc
adc
sub
lret
or
sbb
push
jae
and
inc
jbe,pn
insl
mov
pop
jmp
out
jo
push
add
jno
popf
mov
les
clc
je
outsl
insl
cmpb
adc
mov
fsubrs
jg
addr16
popa
shll
sbb
jle
mov
mov
stc
icebp
pop
jmp
sbbl
iret
jbe
imul
mov
arpl
outsl
jns
js
pushf
hlt
mov
aam
iret
lods
jo
add
adc
stc
fwait
dec
adc
jecxz
xchg
mov
mov
fdivs
in
cmpsl
sbb
lcall
test
xchg
lret
xlat
dec
add
jne
mov
sbb
adc
pop
popf
jge
cld
mov
jbe
sub
aaa
cltd
push
xchg
jg
sbb
popf
outsl
add
loopne
pop
or
js
xchg
inc
jbe
xchg
mov
out
jl
xchg
lock
pop
mov
xchg
mov
rorb
test
popa
lahf
stc
sub
iret
inc
cltd
out
mov
xchg
lods
and
mov
jo
jns
mov
jp
mov
orb
rcll
int3
cltd
nop
jnp
adc
mov
int3
or
add
mov
mov
popf
cltd
jae
inc
pop
xorb
xchg
imul
xchg
int
cwtl
lcall
jb
xchg
insl
popa
js
pmullw
aas
dec
lahf
sbb
add
xchg
popa
arpl
imul
scas
outsb
mov
aad
xchg
test
pop
xchg
jp
je
cld
inc
inc
insb
mov
or
daa
push
pop
arpl
jnp
add
lret
nop
aaa
movsb
shrb
cmpsl
xchg
mov
leave
or
jle
out
rorb
add
and
loope
jg
xchg
fxch
xchg
push
ss
addb
dec
ljmp
push
arpl
aaa
cld
mov
int
insb
mov
arpl
sub
jns
das
fmuls
cmp
jnp
mov
sti
add
rclb
adc
jmp
out
push
jo
push
lods
mov
xchg
jge
lret
adc
adc
rcr
or
lret
into
xor
push
inc
jnp
mov
cli
mov
cmp
sbbb
std
sub
cwtl
out
ja
mov
mov
loope
jae
stos
sarb
pop
fstpt
mov
loop
int
nop
xor
mov
mov
mov
pop
push
loope
arpl
jp
lret
jmp
push
pop
dec
push
push
imul
lahf
push
pop
sbb
adcb
jge
icebp
push
aad
aam
push
mov
pushf
imul
gs
arpl
in
lret
sarl
cli
fdivs
inc
mov
iret
sbb
sub
dec
mov
int3
sub
aas
cmp
or
xchg
inc
inc
inc
jo
orb
arpl
in
enter
sbb
int3
mov
int
insb
xor
js
aam
jnp
int
dec
aaa
incb
adc
jge
push
mov
sbb
and
dec
jle
daa
lods
xchg
xchg
xlat
pop
stc
je
mov
sub
into
iret
cwtl
ljmp
fcoms
outsl
jecxz
cmp
and
mov
popf
dec
imul
jns
mov
inc
jmp
int3
popa
ja
into
xchg
sbb
add
lods
mov
jnp
enter
movb
mov
xchg
xlat
aam
jne
cmp
jno
ja
cmp
int3
mov
fcmovnu
dec
sub
xchg
mov
pop
mov
cli
sbb
fistps
insl
mov
xchg
lret
movd
mov
test
arpl
sub
or
xor
sahf
inc
xchg
leave
mov
jg
pop
andb
nop
jl
xchg
arpl
fildll
in
int
sub
jns
and
addb
jbe
or
cmp
sub
aas
out
jp
jl
adcl
mov
insb
lcall
outsb
lcall
or
jnp
cmp
jecxz
inc
notl
cltd
cs
cmp
jne
leave
jb
mov
int
mov
sbb
fmulp
imul
subb
adc
ljmp
fidivs
aaa
test
test
jge
neg
mov
mov
int3
xchg
xchg
imul
cltd
or
dec
js
push
rcl
jl
pop
xlat
mov
pop
pop
bound
and
test
jp
pop
subl
sahf
lcall
bnd
lcall
loopne
xchg
stc
imul
leave
shrb
sahf
int
mov
popf
cmpb
push
sub
mov
js
xchg
mov
shlb
int
arpl
aaa
lods
stos
mov
enter
pusha
aaa
cmpl
sbb
shlb
lret
arpl
out
int3
movsl
jns
sub
sahf
adc
push
fcmove
jnp
xchg
pop
arpl
mov
xchg
in
jge
int
loope
popa
arpl
int
xchg
mov
arpl
ljmp
data16
lea
jmp
xchg
xchg
int3
cmpb
mov
nop
inc
or
hlt
imul
jbe
rorb
mov
xchg
xor
fiadds
lods
dec
mov
add
xchg
aam
ret
imul
insl
sub
mov
lahf
iret
inc
cmp
nop
lret
popa
mov
jbe
loopne
adc
pop
arpl
inc
out
xchg
arpl
push
adc
lret
xchg
arpl
adc
arpl
arpl
jmp
or
aad
mov
leave
dec
push
in
aad
popa
xchg
pushf
lds
pushf
jg
js
fwait
inc
xchg
sub
mov
repnz
into
add
imul
jl
rcll
nop
movd
jns
sarl
stos
or
and
lret
je
out
lea
repnz
mov
or
jge
jne
jbe
jge
imulb
jnp
outsl
and
bound
movsl
push
dec
sbb
and
ss
mov
stc
test
aaa
pushf
lret
or
leave
push
mov
enter
adc
jg
aam
stos
fistl
jo
out
inc
push
outsl
jns
cltd
das
test
inc
int3
jg
xchg
and
leave
mov
rcrb
pop
jae
ljmp
dec
and
mov
test
lahf
aad
sub
inc
lcall
xchg
outsl
shlb
je
push
jge
pop
lahf
lcall
insb
cmp
add
xlat
xchg
inc
jnp
mov
jo
mov
aam
js
clc
fwait
xchg
js
popa
popf
cld
clc
fcmovbe
mov
jns
jbe
mov
inc
imul
fnstsw
je
gs
insb
sarl
call
xlat
inc
leave
aad
mov
inc
lea
out
into
inc
xchg
jnp
or
fldl
pop
stos
ja
bts
add
push
enter
dec
cld
inc
arpl
jl
mov
add
mov
mov
fmuls
int3
mov
mov
nop
xor
mov
xchg
xchg
inc
aas
insl
mov
mov
imul
push
mov
xchg
jne
sub
in
cwtl
hlt
insl
push
scas
mov
ja
aam
out
jge
mov
mov
xchg
pop
sbb
sbb
nop
nop
push
int3
cmp
daa
nop
lret
mov
js
jae
fistpll
mov
xlat
mov
pop
mov
fidivrs
cld
inc
sub
cmp
mov
jle
mov
cmp
orb
add
dec
fsubrs
inc
in
pop
mov
pop
or
inc
cmpl
aad
jl
mov
jg
fistl
adc
lcall
lretw
cmpsl
shll
in
mov
ror
mov
mov
cwtl
fwait
outsb
mov
mov
cmc
cltd
ja
daa
mov
lret
jg
loope
js
stos
cmp
xchg
je
pop
ds
cmp
mov
jne
out
insl
mov
cmp
jg
lret
xchg
pop
adc
fwait
into
sti
outsl
outsb
pop
js
jp,pn
clc
or
sbb
in
in
push
xchg
rcr
into
adc
js
jnp
sbb
pop
dec
call
mov
sub
jns
lcall
adc
or
or
arpl
sub
adc
mov
xchg
or
push
inc
adcb
adc
add
pop
mov
mov
or
pop
rorl
adcb
cltd
je
sbb
xchg
outsb
inc
outsl
mov
jno
fsubl
sti
cmp
fsubrs
add
incb
mov
pushf
mov
aam
inc
cmp
jae
lret
cltd
xlat
mov
xchg
mov
cmp
xchg
push
cmpsl
inc
jnp
add
inc
or
arpl
in
sbb
inc
imul
sahf
fildl
mov
xchg
inc
and
mov
nop
xchg
sbb
ja
adc
lcall
adc
insb
or
dec
mov
outsl
lahf
repnz
ljmp
sbb
insb
mov
mov
and
mov
roll
jae
mov
inc
jne
pop
cmp
mov
inc
insb
mov
xlat
aaa
xchg
cmp
popf
imul
xchg
stos
gs
lea
mov
inc
fistl
push
int
adc
jns
lods
xchg
xchg
mov
mov
cmp
add
xchg
sarb
cwtl
imul
lret
add
cli
int
adcb
fldl
out
fbld
mov
inc
jae
insb
jb
xchg
jns
xchg
mov
push
xchg
lret
jecxz
jl
nop
pop
mov
xor
jns
lcall
jne
outsl
je
jno
stc
fbld
cld
jle
push
inc
aam
jecxz
imul
jl
mov
xchg
add
sbb
adc
mov
js
and
dec
mov
leave
xchg
aam
out
lcall
mov
js
mov
inc
lret
sbb
xchg
test
xchg
add
sbb
cli
adc
repz
xchg
dec
xorb
and
adc
xchg
jp
inc
jns
sti
xchg
out
xchg
sub
sti
imul
xchg
cltd
insb
aam
dec
inc
jo
cmp
jecxz
xchg
cwtl
lret
ret
insb
int
sbb
movsl
adc
mov
outsb
push
cmp
ret
push
mov
jg
roll
lret
mov
mov
mov
xchg
adc
or
mov
cmpsl
jl
dec
jge
ficoml
subb
dec
jnp
jp
xor
mov
rorb
lds
insb
je
or
cmpsb
xchg
push
imul
xchg
fbld
fstl
mov
sbbl
mov
js
pop
ljmp
push
orb
mov
daa
repz
push
repnz
sub
mov
into
mov
mov
rclb
aam
inc
sub
xchg
iret
insl
lods
jne
xchg
mov
mov
pop
imul
push
pushf
inc
xchg
aaa
lods
test
mov
mov
repnz
mov
neg
arpl
js
xchg
sahf
repnz
loope
jno
addl
adc
dec
jae
xchg
fwait
mov
sbb
jns
cltd
outsb
cld
in
adc
daa
mov
jns
imul
jl
lret
jle
jno
fidivrs
andb
rorb
fwait
imul
pop
xor
dec
jp
fists
insb
je
jg
icebp
outsl
mov
push
es
aad
ficomps
mov
iret
ja
lds
xchg
mov
int
sahf
pop
xchg
subb
sbb
push
insl
je
in
stos
cwtl
or
cmp
jns
pop
sahf
fdivrs
ror
cmp
jp
jne
mov
mov
pop
stos
subb
lea
stos
jg
jno
popf
xchg
lret
inc
jg
mov
stos
cmp
mov
js
inc
ljmp
sahf
je
rcrb
mov
enter
int3
ret
inc
push
pop
add
jns
mov
cmp
dec
cltd
arpl
xlat
into
mov
mov
lea
iret
mov
lret
lods
push
lods
cmpsb
mov
fwait
bsr
lods
outsl
aam
pop
push
fdiv
std
mov
out
call
mov
mov
dec
arpl
aaa
lret
or
ret
inc
mov
add
das
dec
push
test
and
sub
xchg
add
mov
mov
add
and
int3
int3
pop
lcall
cmp
popf
sbb
push
pop
mov
stos
and
inc
shrb
cmpb
outsb
xchg
iret
xchg
xchg
or
jns
insl
mov
movsb
lea
lahf
jp
inc
push
daa
pop
mov
enter
adc
leave
lret
lcall
into
cmp
ds
int3
sti
dec
cmp
cltd
mov
les
outsb
jle
fidivrl
lret
pop
jp
jb
xchg
add
mov
int
leave
imul
mov
sub
push
outsb
push
sbb
lret
mov
xchg
nop
leave
mov
ficoml
jnp
add
out
rcr
cmp
jg
cld
mov
mov
cs
lods
xlat
mov
ficoms
xorb
lahf
aam
sahf
xchg
jg
mov
push
inc
jge
lock
mov
out
mov
das
mov
xchg
lret
inc
shll
ja
test
jg
sub
mov
xor
mov
xchg
cmpsl
mov
filds
jae
jnp
das
dec
xor
int
jge
jle
notb
lret
or
popf
lret
mov
outsl
fadds
lea
sub
cld
xor
mov
xorb
xchg
xchg
imul
dec
and
mov
dec
outsl
aas
or
sar
jns
push
loope
inc
mov
call
daa
adc
aad
loop
lahf
inc
fsubrs
sahf
popf
inc
lea
jg
iret
cli
es
sbb
jb
jnp
jecxz
popf
pushf
fimull
mov
popf
xor
ja
mov
xchg
mov
int
mov
add
jne
fdivrs
sub
and
lcall
daa
test
xor
fisubs
jge
inc
scas
dec
xchg
sub
daa
imul
mov
pop
rorb
xchg
lcall
mov
jb
xchg
hlt
bswap
aaa
sbb
xchg
pop
or
mov
xlat
popf
jge
lcall
dec
jle
cmp
dec
subb
mov
sub
stos
xlat
lret
sbb
lahf
lret
sbb
movups
in
cli
outsl
out
enter
mov
int3
outsl
lret
lcall
and
push
jg
xlat
push
lcall
arpl
mov
lret
xchg
mov
sbb
jb
mov
insl
imul
rol
xor
aaa
outsl
jno
nop
cs
icebp
jns
jns
cmp
jb
aad
jp
aam
pop
test
leave
inc
lds
dec
int3
pop
aam
lods
insl
jecxz
cmp
jno
daa
adc
jno
add
jg
mov
out
mov
xchg
imul
sahf
fisubrs
imul
mov
xchg
jg
add
mov
mov
lret
lea
mov
dec
lret
mov
negl
test
sbb
enter
test
mov
xchg
sti
lret
jl
xchg
bnd
xchg
xchg
les
jne
aam
pushf
flds
jae
mov
lods
push
pop
xchg
jo
lcall
jne
sub
xor
arpl
ja
pop
mov
js
jnp
cwtl
mov
aam
add
push
aam
jns
pusha
repnz
insb
out
mov
jne
insl
repnz
jno
pop
push
imul
bnd
lea
mov
fwait
inc
mov
out
sahf
adc
cltd
xchg
outsb
xchg
outsl
out
cld
pop
push
mov
jg
jg
in
shlb
jae
jns
jno
lahf
jae
jns
int
fstps
jl
popf
js
mov
stos
jne
and
stc
nop
xchg
nop
cld
cld
pop
leave
sahf
outsl
jo
mov
imul
mov
jge
imul
int
pop
fnstenv
ror
pop
leave
cmpb
add
xor
push
roll
filds
jg
lods
popf
mov
fs
pop
fstl
leave
lods
or
bndstx
xchg
xchg
pushf
adc
xlat
stos
orl
xor
mov
push
jge
and
mov
imul
mov
cmp
pushf
xchg
sub
xchg
push
mov
cmp
jbe
jle
mov
add
lock
in
imul
out
insl
inc
xchg
and
jle
outsl
into
jl
xchg
add
inc
xchg
push
test
fsubl
xor
lret
imul
shlb
ss
inc
push
fcmovnbe
jne
rcr
mov
aad
ja
outsl
xchg
repnz
push
ja
xlat
dec
lret
pop
sbb
lcall
insb
mov
lcall
iret
sub
xorb
imul
outsl
lcall
ret
jl
lahf
stc
ror
subb
gs
xlat
mov
in
push
jl
cmp
xorb
int
sahf
jb
int3
out
je
or
cmpsl
inc
pushf
js
outsl
cmp
shlb
inc
jg
test
mov
aaa
xchg
pop
fcoms
sarl
mov
cmp
inc
sarl
jns
mov
ret
cmp
and
insb
jmp
push
js
fmulp
int
dec
push
fwait
cli
iret
mov
ja
jo
pushf
nop
outsb
rclb
js
rcrb
cli
xlat
sbb
das
test
mov
jle
stos
sub
ja
jns,pn
xchg
sub
test
adc
jnp
or
aas
fldl
test
xor
xor
lds
ret
pop
jecxz
xchg
and
cmpsl
mov
jge
lea
jle
lret
jo
inc
pop
adc
mov
lods
je
xor
mov
dec
js
pop
or
mov
sahf
xchg
xchg
inc
jle
mov
int
sub
mov
test
cltd
loop
sbb
mov
andb
ja
xchg
int3
xchg
dec
xchg
popa
push
lods
inc
lds
pop
enter
mov
xchg
add
mov
jb
fld
xorb
xor
mov
jne
aad
nop
scas
fndisi(8087
fcoms
pop
mov
lret
xchg
push
adc
cmp
xchg
xchg
jl
and
rolb
add
inc
cmpb
jmp
mov
outsb
sbb
insb
testb
add
jp
lods
cs
divl
out
shlb
mov
xlat
arpl
aam
iret
js
movsl
add
xchg
shll
mov
popf
add
dec
call
lcall
icebp
lcall
shr
lahf
xchg
das
hlt
cltd
jp
lahf
int
aaa
ret
jle
or
push
mov
push
push
lahf
rcl
and
xchg
into
insl
mov
mov
mov
push
shlb
xchg
sub
sub
and
imul
pushf
jae
jle
lret
arpl
lcall
dec
cltd
imul
jae
and
lods
jg
sbb
sub
jnp
test
int3
mov
test
insb
xchg
je
icebp
addr16
push
icebp
aaa
btc
cmp
xchg
leave
je
outsl
inc
mov
lods
mov
jbe
leave
xor
cltd
pushf
mov
aam
cmc
mov
xor
push
push
xchg
push
iret
jmp
repz
outsl
lret
jbe
cmp
mov
cmpsl
mov
popf
jne
jl
mov
inc
xlat
int
outsb
and
imul
mov
outsb
adc
into
and
imul
mov
popf
in
daa
inc
jnp
insb
fnstsw
test
jp
jbe
leave
int
stc
push
jl
cld
arpl
jbe
mov
ja
leave
or
sbb
test
pop
or
jnp
push
mov
in
jnp
lock
dec
mov
orb
jg
cmp
xchg
jmp
sbb
addl
leave
lret
imul
mov
jae
inc
shrb
or
je
mov
and
push
arpl
or
pop
arpl
jae
ret
ja
xlat
ja
jg
test
je
subb
adc
outsl
push
mov
xchg
xchg
cmp
insl
jg
cmp
test
popa
addr16
andb
mov
mov
mov
sahf
jns
ja
xchg
xchg
mov
xchg
insl
add
lret
jo
add
rol
jnp
xchg
sahf
js
das
lahf
hlt
pop
dec
cmpb
jae
dec
add
ja
mov
imul
sbb
jg
jns
lret
fcmovbe
imul
sub
leave
inc
outsb
jp
insb
out
xchg
mov
fcom
aam
loope
mov
or
jnp
mov
mov
jno
sahf
addr16
xchg
lret
test
out
mov
mov
xchg
push
xchg
inc
inc
mov
jbe
jno
mov
xor
pop
dec
push
xchg
dec
jl
pushf
xchg
into
je
js
push
cmpb
push
test
ret
mov
jns
ds
pop
lea
sahf
je
jne
xchg
inc
adc
mov
or
xchg
mov
jg
jae
jne
jo
inc
mov
push
inc
inc
sbbb
das
inc
push
or
xchg
xchg
sbb
jg
mov
xor
mov
xchg
pop
scas
mov
sahf
mov
ja
jecxz
repz
outsl
imull
insl
jae
dec
mov
xchg
iret
mov
mov
jno
cwtl
enter
les
or
leave
jb
shlb
mov
xchg
test
clc
mov
jae
push
mov
mov
mov
jne
sbb
sbb
int3
mov
adc
test
pop
jbe
aam
jp
ja
push
jno
test
mov
jnp
mov
xchg
arpl
lds
aaa
fcomps
cmp
lcall
insl
imul
push
jo
inc
pop
cltd
ret
mov
lcall
int
shrb
fmuls
jnp
mov
inc
ficomps
xor
lods
mov
lcall
lcall
leave
ret
mov
sub
push
xchg
sahf
jb
fidivrl
movl
add
pushf
jo
sbb
adcb
xlat
jl
ja
arpl
rclb
lcall
inc
adc
xlat
fmuls
mov
dec
lcall
jnp
lea
in
fsubs
jmp
inc
mov
jge
movl
outsl
add
inc
jo
inc
repnz
or
shl
inc
andl
xchg
mov
je
sub
push
stc
xor
cmpsl
xor
or
leave
sub
sub
mov
mov
jp
sarl
insl
es
xor
out
cwtl
pop
bnd
xchg
into
rclb
push
jno
mov
arpl
leave
lret
pop
mov
xchg
test
mov
insl
rcrl
das
sub
add
mov
adc
fmul
orb
mov
shrb
mov
lret
inc
test
mov
mov
repz
js
cmp
out
fwait
dec
notl
dec
repnz
jb
mov
jae
lret
mov
inc
nop
in
outsb
xor
mov
int3
lcall
das
mov
fistps
hlt
push
or
stos
jne
xchg
mov
js
jnp
popf
inc
adc
into
dec
adc
mov
and
addb
mov
cmpsl
aam
xlat
fwait
mov
pushf
into
xchg
andb
in
dec
jp
sahf
mov
lret
xchg
leave
xchg
outsl
ja
jge
lcall
mov
xlat
xchg
in
pop
mov
jecxz
jle
imul
lcall
jno
jg
lahf
je
mov
push
jl
adc
loop
lods
and
loope
inc
icebp
add
fisttpll
rcrl
xchg
imul
ja
inc
es
in
mov
dec
jb
cmp
mov
mov
pop
jne
push
decl
mov
fwait
cmp
lret
mov
sahf
sarl
push
lods
out
sbb
sbb
mov
cli
mov
pop
sbb
es
jbe
insl
push
fbstp
iret
xor
xchg
mov
lret
xor
imul
add
jle
jns
repnz
popf
pop
xchg
cltd
push
nop
outsl
dec
inc
outsl
outsb
and
loope
xchg
lods
insl
iret
lods
into
mov
mov
aam
mov
shlb
sbbl
insl
fldenv
sbb
mov
icebp
test
mov
fnstsw
mov
mov
sub
xor
leave
jp
cltd
lret
and
cmp
mov
test
mov
xchg
inc
scas
lret
cwtl
imul
int
inc
ja
cltd
out
mov
mov
popf
xchg
and
inc
mov
and
out
mov
fwait
pop
pop
jg
jecxz
mov
rol
jmp
inc
jno
lcall
mov
mov
cmp
hlt
and
xor
ja
or
mov
pop
out
jp
lahf
jne
aad
jl
xor
dec
mov
leave
fistpll
push
jbe
xchg
imul
inc
movsl
adc
mov
or
xlat
mov
je
orl
jg
cltd
iret
jb
mov
arpl
filds
daa
or
jo
add
aad
js
fists
iret
mov
xchg
mov
inc
cmp
mov
mov
sbb
inc
imul
cli
mov
js
out
inc
mov
push
jg
outsl
sub
outsl
mov
repz
movsl
xchg
push
das
push
cwtl
and
in
dec
mov
lcall
ja
test
sub
js
push
rorl
jb
cmp
jne
pop
mov
or
es
dec
mov
jno
inc
icebp
mov
shll
push
sbb
push
mov
mov
mov
add
cmp
inc
xchg
ljmp
imul
fwait
in
jo
mov
sahf
in
movsl
add
mov
xchg
jb
xor
mov
sti
adc
ret
pop
mov
jns
cli
in
out
nop
xlat
dec
popf
jmp
lea
xchg
mov
out
mov
xchg
aaa
mov
jno
mov
push
shl
push
inc
mov
xchg
sahf
outsb
cwtl
fcoms
fsubs
call
int3
iret
inc
cs
lods
gs
orl
lea
sub
sbb
notb
lret
xchg
iret
ja,pn
adc
lcall
gs
cld
inc
jne
xchg
aaa
xchg
nop
xchg
ret
pushf
stos
jge
int
mov
outsb
xor
jno
sbb
lods
lret
xchg
iret
mov
outsl
popf
clc
lods
lret
rolb
lret
mov
scas
repnz
sahf
lahf
xchg
rol
aaa
inc
cmc
into
nop
addr16
rcrb
call
xor
jecxz
xchg
inc
nop
sarl
sar
pop
int3
lea
js
xor
mov
arpl
pop
cmp
data16
push
xor
cltd
popf
scas
xchg
lret
jl
or
fbstp
pop
or
daa
pushf
jne
mov
push
test
mov
xchg
lea
jne
xchg
arpl
xlat
iret
into
fwait
mov
ret
addb
ret
adc
in
jg
mov
jne
pop
out
in
scas
lods
pop
lods
mov
mov
mov
out
aas
pmaxsw
push
loopne
cld
push
xor
mov
and
jmp
iret
inc
dec
nop
fwait
js
aam
xchg
mov
fisttpll
add
in
int3
neg
jb
cwtl
aaa
fwait
cmp
and
aam
lret
push
fdivr
dec
or
jle
mov
in
popf
mov
cmp
xor
int
mov
leave
xchg
outsb
insb
jg
iret
mov
rcrb
popf
mov
mull
into
ret
int
stc
cmp
xor
xchg
push
repz
mov
jno
or
jno
jg
sbb
imul
jnp
cmp
xchg
pop
stos
popf
into
adc
mov
xlat
cmp
mov
ss
sti
js
mov
mov
je
mov
add
push
dec
mov
adc
xchg
pusha
js
outsl
outsl
add
fwait
imul
nop
test
jp
mov
lcall
in
inc
lods
pop
push
or
aam
xlat
cld
sub
cmp
lcall
lcall
push
imul
mov
loope
ret
ja
cli
jbe
sub
sbb
das
inc
fistpl
xchg
or
cmc
jl
cmp
and
lcall
cli
hlt
stos
je
inc
outsl
into
sti
cmp
aad
imul
mov
rolb
push
int3
orb
mov
adc
adc
popf
push
add
scas
in
mov
stos
imul
mov
pop
jb
push
mov
ja
lcall
cltd
insb
jae
mov
mov
fiaddl
bnd
fcmovnbe
ret
aam
js
sahf
arpl
xor
cld
int3
int3
mov
aam
insl
xchg
mov
les
imul
jecxz
jno
inc
sub
cmpsl
add
loopne
mov
out
jns
lret
sbb
rcrb
sub
jnp
mov
sub
mov
lcall
lret
mov
and
test
sub
jno
jbe
rolb
fwait
ja
out
adcb
into
lret
int
cmp
je
mov
sub
ja
fcoms
jg
loop
gs
fidivrl
or
insb
sti
cltd
outsl
je
pop
adc
xchg
imul
mov
jno
sarb
sahf
jo
inc
xchg
mov
lret
jg
lds
sbb
jae
lea
pushf
push
shlb
fcomps
push
enter
mov
mov
fwait
lret
mov
sahf
or
leave
jp
xchg
cmpsl
jge
dec
push
mov
jp
pop
adc
push
or
clc
mov
xorb
mov
adc
test
xchg
mov
mov
xchg
lock
into
addb
outsb
sub
test
push
adc
jnp
lret
jo
int3
jg
lahf
in
outsl
jbe
nop
cmpsl
sub
andb
mov
mov
xchg
ja
jbe
or
jle
mov
sub
dec
xchg
push
out
gs
push
clc
sub
fsubrs
xchg
cmp
mov
sbb
out
jae
test
xchg
pop
ja
inc
sahf
or
lea
mov
mov
mov
aad
mov
lret
mov
mov
mov
jmp
inc
insb
mov
int3
xchg
xchg
xchg
lods
in
shrb
imul
sub
leave
js
shll
orb
jl
iret
ja
push
mov
xchg
leave
negl
inc
das
sbb
jge
out
lcall
push
mov
xor
xor
or
aaa
je
mov
push
fistpll
xchg
xor
mov
jl
arpl
mov
mov
push
outsl
js
pushf
inc
push
cmpsl
mov
dec
ja
out
mov
orb
xchg
push
and
rorb
cs
mov
mov
imul
sbb
sarb
cmp
jne
push
imul
adc
jmp
mov
cwtl
clc
jae
sub
outsb
xor
jnp
into
leave
push
test
jne
mov
cld
xor
nop
js
lret
inc
push
adc
dec
rolb
int3
nop
inc
mov
jne
into
mov
js
inc
sbb
sti
sahf
jle
je
jbe
nop
rorb
inc
int3
push
jp
cmp
lcall
callw
xchg
test
mov
inc
mov
aad
dec
imul
jae
lea
push
jns
xchg
cltd
leave
mov
cmpsl
xchg
xchg
subb
aad
je
leave
add
inc
data16
pop
push
lret
sbb
lcall
fwait
jb
xlat
mov
test
lret
fmuls
seta
out
arpl
jo
sahf
rorb
std
jp
xchg
xorb
push
jo
cmp
outsb
insl
into
inc
movsl
jno
xchg
iret
jb
push
mov
lret
gs
xor
or
outsb
mov
or
lret
pop
mov
or
outsl
push
ja
xchg
aaa
cmp
pop
in
lcall
ret
iret
test
imul
loopne
movsl
jae
mov
outsb
les
lods
cwtl
insb
stos
mov
nop
ret
jnp
ja
inc
into
aaa
iret
nop
cltd
repnz
mov
mov
in
outsl
jne
subl
push
lea
push
sub
push
dec
push
add
js
lea
lea
nop
pop
call
push
fmull
xchg
jp
fwait
lret
jnp
cmp
or
jno
movsb
jg
jo
sahf
adc
adc
xchg
lcall
xchg
pop
gs
mov
xlat
mov
inc
xlat
xchg
lahf
mov
cmp
jb
test
mov
cmpb
es
cmp
pop
ja
jl
mov
mov
sahf
mov
in
loop
lds
or
in
data16
sbb
popf
inc
jno
mov
outsl
xor
rorb
into
mov
adc
jnp
xchg
xchg
cmpsl
rcl
ret
mov
xchg
roll
or
addl
mov
jge
mov
mov
imul
pop
cld
mov
xlat
and
mov
xchg
cmp
lret
bound
xchg
pop
jo
mov
mov
sub
imul
das
and
jae
push
push
outsb
rcrl
fildl
fstl
jo
ja
orb
outsb
sbb
imul
xchg
imul
jae
inc
jnp
jno
test
push
xor
lret
push
ror
xor
cld
cld
sub
ja
sub
cltd
mov
and
fsubrs
and
sahf
ja
in
sub
ret
jno
sbb
pop
inc
mov
xchg
mov
jmp
xchg
sub
mov
insb
lcall
outsl
cwtl
xor
xchg
mov
and
or
cltd
inc
into
int3
cli
pop
ja
cs
sahf
xchg
mov
push
xor
pop
cltd
shll
push
out
inc
lret
or
mov
nop
lret
sub
jecxz
sub
rolb
jle
xchg
gs
bound
xchg
mov
jp
jns
ljmp
sub
cmp
adc
outsl
jle
mov
inc
mov
jns
into
outsl
rolb
inc
push
or
jo
lret
xchg
jnp
js
jns
cmp
insb
movsb
add
ja
mov
arpl
inc
and
cwtl
lret
or
mov
insb
xchg
jp
sbb
mov
lea
mov
cmp
jns
dec
les
enter
xor
imul
lret
mov
int3
jbe
sbb
jl
lret
add
inc
je
dec
arpl
in
push
test
fstpl
mov
into
pop
mov
je
push
pop
ret
popf
fcmovne
insb
pop
mov
mov
iret
not
in
inc
pop
jecxz
aam
mov
sub
xor
arpl
addr16
jb
iret
push
jl
xor
leave
fmuls
jg
cmpsb
movsb
adc
xorb
jg
cld
es
cmpsb
sub
jno
xchg
mov
cwtl
daa
jne
jg
xchg
int3
out
add
mov
aam
sahf
mov
sub
fildll
stos
fwait
outsb
xlat
aas
mov
outsl
nop
add
adc
je
dec
fs
jb
pushf
cmp
int3
jne
add
shlb
sahf
outsl
jp
sbb
jle
jp
imul
lret
insl
jg
lahf
mov
fwait
icebp
rolb
xor
das
jg
xchg
fcoms
mov
fucomi
sbbb
mov
add
lea
sbb
int
iret
mov
ja
xor
dec
mov
jp
jae
loop
lcall
jg
inc
mov
jle
mov
int3
mov
mov
cmp
js
cli
adc
jp
aam
cmpsl
rol
jle
or
jg
mov
orb
leave
jne
into
iret
test
add
fwait
inc
push
outsb
arpl
jnp
movl
cmp
mov
mov
mov
sbb
int3
popl
lahf
xchg
lret
hlt
jae
lcall
outsb
imul
iret
mov
cltd
xchg
xor
mov
jecxz
jnp
push
mov
arpl
insl
sahf
aaa
js
aam
shll
mov
outsl
mov
dec
and
cmp
aam
jb
mov
loopne
jbe
lahf
pop
inc
fcomps
jno
mov
jnp
pop
jge
xchg
mov
ficomps
cmpsb
xchg
jle
scas
nop
jl
out
jnp
shlb
mov
outsl
cmpb
push
in
push
ret
movsl
mov
shlb
xor
fidivrs
outsb
jg
std
mov
lcall
inc
mov
out
out
mov
jnp
insl
pushf
dec
or
xchg
idivb
mov
xchg
mov
out
jno
or
xor
cmp
fsubs
fwait
imul
mov
rclb
sbb
into
fcmovb
jnp
cli
pusha
je
push
dec
xchg
dec
mov
cmp
outsl
mov
mov
adc
xor
mov
dec
roll
jo
push
ja
lret
or
outsl
lahf
mov
popf
lods
inc
pop
js
jb
test
xor
in
ja
cs
cwtl
loop
leave
xchg
arpl
aaa
fstpl
outsl
push
or
jg
imul
xchg
je
dec
sub
fsubl
test
pop
sarl
ficomps
mov
pop
mov
outsl
adc
dec
leave
mov
xchg
lcall
cmp
andb
push
shll
shlb
jo
rorb
fstpl
test
mov
nop
into
nop
aam
jp
xchg
push
mov
mov
cld
inc
jne
cmp
mov
mov
mov
mov
mov
popf
lret
xlat
insb
jge
push
cmpsl
mov
push
mov
jbe
imull
outsb
rclb
jl
fstpl
rcr
ret
shrb
and
iret
mov
in
aad
mov
rorb
mov
mov
subb
jb
mov
lcall
outsb
lret
cmpsl
dec
outsl
shll
dec
pop
mov
lds
xchg
cmpsl
int
bound
mov
push
jnp
out
in
xchg
jae
jno
insb
inc
imul
inc
imulw
lea
xchg
mov
jle
pushf
cwtl
jno
sbb
sti
enter
out
test
out
jle
lcall
jl
ja
mov
jne
inc
jmp
ljmp
xchg
jnp
xchg
int
jle
pop
lds
mov
fnsave
jb
or
mov
int
ret
movsl
sbbb
pop
out
xchg
das
mov
testl
xor
adc
lds
stc
in
xchg
fiadds
xor
insl
inc
mov
jl
sub
xchg
cmpsl
push
fdivs
pop
mov
es
add
jg
mov
xchg
xlat
outsl
lcall
jmp
xor
fstpt
sar
orl
pusha
bnd
mov
mov
cmpl
inc
shrl
insb
mov
mov
xchg
lahf
daa
xchg
mov
into
jge
inc
jecxz
outsl
mov
or
mov
lea
pushf
adc
pop
aad
vmovhpd
pop
cmp
sub
mov
pushf
mov
cmpsb
lret
mov
xchg
and
imul
xchg
mov
test
int
loopne
mul
out
in
arpl
aam
mov
subb
adc
jg
pushf
das
mov
mov
inc
mov
fdiv
and
int
or
fstpt
xchg
fbstp
cltd
xchg
imul
arpl
loop
inc
pushf
mov
mov
outsl
pop
fwait
lea
fadd
pusha
lret
lcall
imul
adc
mov
xchg
pop
jnp
xchg
dec
repz
hlt
adc
jecxz
or
jo
into
pushf
push
jl
lret
stos
add
aaa
xor
mov
or
jae
jb
push
mov
mov
stc
lods
lcall
jns
lcall
xchg
xlat
popf
jecxz
add
cmp
xor
or
in
fadds
xchg
popw
test
ds
lret
fdivs
ja
mov
jne
loopne
mov
xchg
in
jbe
jno
dec
jno
cmp
mov
mov
lods
jecxz
cmp
imul
cmp
addb
out
and
lret
cld
sub
xlat
mov
lea
cmp
xchg
jnp
cld
and
xlat
xchg
insl
mov
das
mov
lret
add
rorb
int3
xchg
into
insb
mov
jle
jne
push
aaa
xchg
inc
xchg
int
ja
mov
movsl
into
add
clc
leave
ja
inc
sahf
jno
push
bound
inc
inc
sarl
lcall
fidivrs
leave
or
cmc
mov
das
cltd
cwtl
sahf
test
arpl
popf
mov
lods
fwait
jne
push
cmp
cwtl
stc
incb
filds
fwait
xlat
mov
loop
iret
xchg
aam
cltd
mov
sbb
aaa
movsl
or
outsl
mov
add
lcall
sbb
in
push
jns
sub
mov
enter
call
jae
enter
adc
mov
repnz
dec
xchg
cli
sub
push
jle
mov
into
pop
mov
lret
mov
scas
ret
and
adc
adc
mov
pop
adc
movsb
mov
pushl
fwait
inc
jle
push
adc
mov
xchg
into
xchg
push
je
test
mov
jb
inc
dec
mov
jmp
cwtl
xchg
jae
xchg
daa
imul
cmp
cltd
jg
pop
xchg
mov
xchg
xchg
and
push
dec
lods
xchg
sti
cld
scas
sub
iret
xchg
shll
sbb
inc
out
mov
dec
popf
or
sbb
js
mov
push
cmp
or
divl
imul
out
inc
mov
fwait
xchg
jnp
fmuls
jl
insl
inc
pop
jb
lret
xchg
mov
fidivrl
xchg
jno
jp
cmpb
inc
fistps
adc
jb
je
sbb
cli
lcall
push
addr16
jo
int
test
mov
inc
mov
xlat
mov
mov
sbb
fwait
mov
jae
ds
jnp
out
mov
das
mov
pop
mov
sbb
lea
in
xchg
push
ret
jl
lods
and
mov
in
out
rorb
mov
fistpll
jl
jle
xchg
daa
mov
inc
lcall
aam
loopne
setae
mov
adc
aaa
jne
subb
mov
jbe
mov
lock
mov
cld
cmpsb
pushf
jae
sbb
in
sub
mov
cltd
popl
mov
cwtl
std
lds
std
mov
call
push
leave
insl
ja
nop
mov
jbe
subl
cwtl
sbb
mov
sbbb
js
cmp
outsb
push
or
cmpsb
cld
mov
loopne
add
mov
fadds
xlat
cwtl
jp
popf
jno
dec
pop
jle
pushf
aam
loopne
or
cltd
push
xor
and
arpl
dec
pop
push
icebp
fmul
lret
mov
inc
sahf
int
cld
and
pop
xchg
lret
xor
jae
aas
add
fstpt
insl
and
jae
cmpb
pop
cwtl
sub
mov
jp
aam
je
stc
lret
xchg
in
fnstsw
add
or
mov
lods
and
xchg
mov
or
jge
mov
jo
lea
movsb
ja
sub
lods
popf
call
mov
xchg
es
lods
fwait
jb
leave
mov
orb
jb
sbb
lcall
adc
xlat
cltd
cmpl
jbe
icebp
jb
inc
test
imul
int
imul
xlat
outsl
jg
mov
jge
fcmovnu
cltd
push
lds
rorl
xor
outsb
loope
ja
in
xchg
lcall
mov
js
pop
loopne
into
in
iret
divl
mov
jp
mov
add
call
cwtl
jae
mov
mov
in
mov
leave
addr16
or
add
jno
xorl
jle
pop
stc
nop
jge
inc
js
push
jp
mov
icebp
lods
cmp
sub
add
jecxz
lret
insb
xlat
idivl
mov
mov
sahf
test
or
lret
sar
mov
mov
lock
int
mov
cld
test
mov
or
aaa
add
jnp
lahf
iret
xor
outsl
jp
int3
jnp
dec
xchg
jae
jns
jle
push
jb
or
pop
aad
xchg
daa
cmp
lahf
sub
in
pop
je
ret
pusha
lods
xchg
mov
and
xor
daa
int3
jb
adc
lret
add
sbb
jnp
jb
popf
inc
pushf
cmpsb
fwait
out
ja
lret
adc
add
insb
popa
aas
sub
jecxz
push
push
jo
jecxz
xchg
inc
and
xchg
push
aad
outsb
cmp
jg
lods
fisttpll
rcr
cmp
mov
ds
inc
dec
aad
pop
movsb
mov
jnp
jmp
je
ret
ret
imul
inc
adc
shll
int3
xchg
xchg
imul
push
push
aaa
rcr
sahf
xchg
pop
fucomi
leave
and
jns
inc
pusha
lcall
int3
mov
jl
imul
xchg
jnp
push
dec
in
jae
repz
bound
divb
enter
inc
jg
stc
or
scas
lods
adcb
out
lahf
cld
add
aas
jne
mov
js
test
mov
pushf
xchg
iret
fistpll
stc
in
arpl
dec
fistpll
push
sub
pop
jae,pn
xlat
xchg
lret
adc
cld
aas
mov
pop
je
mov
dec
mov
repz
icebp
add
jns
mov
leave
inc
sbb
xchg
arpl
test
pusha
dec
sub
push
popl
sahf
arpl
adc
xor
ret
xchg
popf
lds
ret
aaa
jne
imul
mov
xchg
adcb
aam
push
add
cltd
jb
push
pop
cwtl
mov
mov
cmp
xchg
xlat
out
addr16
lods
pushf
mov
pop
addb
aaa
jae,pn
jecxz
push
test
ret
fwait
ret
fwait
push
rclb
xchg
insb
mov
dec
xchg
ja
fsubs
int
or
mov
je
mov
adc
mov
xchg
mov
and
or
je
jp
add
pop
testb
jns
jnp
aam
and
insb
das
ret
mov
aam
cltd
lods
inc
sbb
mov
cmp
ret
imul
jns
test
mov
add
mov
add
lea
popf
jg
push
jae
or
into
stos
jmp
jae
subl
int
cltd
xchg
mov
test
cmc
jl
in
or
pop
jge
aaa
clc
inc
mov
jg
outsb
mov
xchg
xor
mov
mov
neg
inc
mov
jle
test
jnp
xlat
mov
push
lock
test
and
and
adc
pushf
addr16
nop
subl
loope
in
cmp
cwtl
sbb
mov
xchg
xchg
lods
mov
add
cmp
inc
int3
jp
pop
jl
pop
fcmovbe
rcrl
jg
popf
cmp
outsb
insl
fwait
or
fwait
lcall
jmp
dec
test
aas
sbb
out
ret
add
mov
sbb
outsl
ja
mov
imul
bnd
jle
mov
add
xchg
inc
addb
js
insl
mov
popf
cmpb
scas
cmp
xchg
mov
add
jo
jns
sbb
outsl
shll
mov
jo
mov
lret
imul
imul
jo
mov
xchg
push
test
jg
int3
inc
stos
popf
imul
je
xor
xchg
xor
push
jmp
lods
sarb
lret
cmp
mov
sbb
cltd
dec
sbb
lahf
adc
inc
lcall
out
mov
mov
jns
xchg
mov
pop
jno
test
nop
push
gs
cltd
lcall
xchg
ret
imul
pushf
mov
jg
jae
dec
xor
lds
lcall
das
fidivrs
xchg
ret
imul
outsl
ror
inc
dec
jno
jbe
xor
or
ret
js
inc
or
testl
sbb
jg
rorb
aam
jnp
roll
in
jg
inc
into
test
arpl
mov
mov
aam
imul
fistl
cmpl
insl
lret
je
mov
aaa
pusha
push
pushf
fwait
cli
jg
push
xchg
xchg
setle
pop
push
mov
adc
xchg
lds
jb
inc
arpl
leave
push
and
fcoms
js
fisttpl
xlat
mov
xchg
jns
stc
addr16
push
lret
mov
std
jne
xchg
aaa
mov
ds
ds
jecxz
cmp
leave
outsl
mov
inc
jb
mov
mov
addb
aaa
cli
repnz
cs
push
rcrb
cmp
dec
lock
jp
outsl
into
js
jbe
sahf
iret
xlat
adc
cmp
push
cmp
mov
test
push
loop
into
mov
int3
nop
pushf
ss
push
mov
ds
pop
sahf
push
shlb
lret
xchg
pushf
mov
add
in
int3
lcall
je
jecxz
icebp
pushf
jbe
data16
scas
sub
stos
cmp
xchg
int3
adc
push
nop
jo
popf
pushf
roll
ja
xchg
out
ror
cwtl
insb
loop
jne
pop
jns
mov
xchg
xor
adc
rcl
fwait
jb
mov
imul
inc
stc
jo
repnz
mov
ret
ficoml
pushl
jg
into
shlb
leave
mov
cltd
mov
insb
and
mov
or
jb
popl
mov
sub
shrl
ret
lea
inc
test
sahf
jle
mov
cwtl
cmp
mov
jo
mov
mov
and
cwtl
into
add
fmuls
xchg
je
cmp
mov
lret
pop
cmp
leave
mov
popf
into
hlt
movsl
xor
jmp
lods
mov
pop
cltd
ja
sbb
adc
mov
test
fimuls
and
mov
add
push
lods
xchg
mov
leave
inc
dec
fnsave
outsb
outsl
shll
jnp
xchg
ret
xchg
and
lock
cld
fwait
lret
or
mov
das
out
jne
addr16
aam
lea
jo
lods
jae
imul
icebp
cli
nop
xchg
les
mov
sahf
and
cmc
fnstcw
mov
rcrb
pushf
cmpsl
out
into
fwait
add
jnp
cltd
xchg
inc
stc
iret
xor
mov
cmp
jg
jg
movsl
lods
leave
dec
icebp
jae
fstps
jl
mov
lods
out
nop
fisttpl
xchg
int
xchg
sub
mov
or
std
mov
cwtl
rcr
cmp
jae
rolb
pop
xchg
jg
imul
push
jns
lcall
shl
loope
orb
pop
lcall
out
popf
push
or
sbb
or
dec
lahf
jg
mov
insl
rcr
sti
out
leave
xor
xor
push
jae
add
sar
addl
jp
jl
sbb
imul
xor
cmp
aad
fdivl
int
xchg
aad
leave
lock
sarb
xchg
outsb
insl
pop
cmc
xchg
daa
inc
imul
cmpb
mov
pop
jl
or
cmp
popa
push
cmpl
inc
sub
jmp
dec
arpl
add
jae
dec
xchg
push
addb
dec
and
mov
mov
aam
jg
ja
cmp
insb
and
nop
dec
mov
lods
outsb
pop
iret
lahf
je
stos
fidivl
xchg
cmp
xchg
push
ljmp
jg
enter
sar
sbb
int
repz
xchg
mov
cwtl
push
mov
adc
loopne
andb
jno
cwtl
sbb
mov
fisubl
adc
into
outsb
add
outsl
je
pushf
inc
mov
push
int3
leave
test
clc
xchg
sbb
jecxz
sub
push
notb
sub
sub
sbb
pop
jg
jne
adc
cltd
cmp
lret
jne
jge
cmpsl
xchg
ja
pop
jae
icebp
mov
cs
cmp
addr16
fcmovnu
jns
mov
lret
push
fdiv
popl
pop
or
imul
subl
xchg
xchg
xchg
jge
jmp
shlb
repnz
xchg
insb
hlt
pop
adc
jns
jge
jl
arpl
outsl
add
xor
mov
outsb
lret
ja
ret
fdivs
cmp
dec
mov
into
mov
test
xchg
lea
cltd
xchg
jae
jae
jg
mov
cwtl
xor
mov
jb
jae
and
dec
mov
xchg
movsl
iret
rorl
loope
roll
in
jns
rorl
fisubl
mov
xor
mov
lock
sbbl
xchg
jne
rclb
out
je
inc
xlat
and
or
xchg
test
imul
inc
jmp
dec
lods
mov
lret
rcrb
fwait
push
xchg
pushf
fmulp
mov
insl
in
mov
mov
jo
orl
mov
push
sbb
sbb
nop
mov
jns
jg
shrb
aad
cltd
jne
insb
daa
lods
jge
outsl
lcall
jb
mov
mov
push
mul
xchg
fcoms
pop
inc
jb
sar
or
imul
inc
or
leave
xor
jns
xchg
jg
ja
rorl
mov
add
sub
inc
jg
in
jp
aam
stc
fiaddl
sbb
insl
out
divl
push
shlb
es
xchg
mov
test
leave
lret
xchg
mov
in
jp
lret
mov
je
int3
cltd
inc
inc
adc
call
add
leave
xchg
lahf
lea
or
arpl
insb
aam
cmpb
cli
dec
lcall
xchg
test
xchg
jne
test
inc
aad
imul
inc
outsl
sub
nop
movsl
mov
jns
ja
jae
jp
lret
and
js
pop
iret
push
dec
or
fistps
outsl
sarb
into
jae
push
stos
out
outsb
loopne
sub
iret
and
xchg
nop
xchg
sbb
fwait
push
gs
addr16
iret
and
mov
mov
mov
adc
mov
lret
cltd
mov
lods
mov
int3
insb
jmp
mov
jl
or
jg
mov
xor
fwait
jg
mov
je
mov
pusha
orb
sbb
mov
mov
push
dec
js
sahf
sub
stc
movsb
jns
cltd
shr
clc
rorl
movsl
insl
scas
outsl
inc
jae
xorl
ja
jl
xlat
xchg
cs
mov
push
gs
mov
dec
sti
lret
inc
repz
mov
daa
adc
or
mov
jae
lods
test
xchg
or
int
push
jge
dec
mov
es
sbb
lret
xchg
js
insb
jno
test
outsb
push
sbb
cmp
in
rcrb
paddusb
test
lret
xchg
cwtl
fwait
lea
ja
jno
mov
jae
adc
lea
jae
cmpl
outsl
lret
jae
mov
mov
shl
je
outsl
push
dec
pop
insb
sahf
sbbb
push
sub
jb
mov
mov
mov
imul
mov
inc
cmp
sbb
pop
and
lret
sahf
jae
sbb
mov
fdivrs
jne
xor
jl
mov
cwtl
mov
mov
sbb
out
leave
lock
sahf
jg
mov
jge
adc
gs
pop
jb
addr16
or
fwait
sbb
cmpsl
mov
mov
idivb
icebp
sarb
mov
jns
cmp
test
clc
lahf
jne
add
add
cmp
into
push
sub
xlat
out
outsb
mov
push
inc
push
jne
out
jb
jo
fwait
andb
sarl
rcrl
movsl
jae
mov
adcb
cmpl
lahf
jo
outsb
mov
arpl
mov
out
mov
mov
leave
mov
jp
nop
bswap
pushf
jo
jle
lret
sahf
pop
xchg
sbb
cltd
mov
push
negb
cltd
inc
cmp
lods
outsb
test
int3
adcb
sub
test
mov
jae
shlb
mov
into
inc
iret
inc
jl
ja
std
stc
xlat
in
int3
cwtl
xchg
addb
daa
jb
insb
das
test
lcall
adc
jge
inc
imul
insl
push
jle
mov
jne
xor
iret
ljmp
lret
jp
push
js
shrb
outsb
jo
fistpl
mov
xchg
push
mov
icebp
inc
pop
lods
mov
mov
shlb
fcomps
mov
mov
cmp
xor
add
stos
xchg
pmulhw
adc
inc
jg
and
lea
inc
mov
jo
mov
repz
pushf
out
sbb
xchg
or
lcall
and
roll
int3
push
push
jne
decb
mov
in
sub
dec
imul
jb
cmp
xor
or
xchg
xor
cmpsb
mov
stc
mov
push
jno
xchg
jne
jo
sbb
das
push
outsl
or
loopne
xchg
xor
jp
jp
cltd
mov
xchg
outsl
lret
xchg
sahf
popf
mov
and
cltd
xchg
xchg
insl
xlat
into
jne
and
insb
js
push
fmuls
xor
pop
popa
xchg
lea
jg
inc
mov
push
cs
dec
xlat
sbb
test
adc
or
and
rcrb
and
nop
dec
push
das
cld
or
pop
int
add
outsl
xor
outsl
push
ja
lcall
movsl
lret
popa
push
je
fbld
cmp
pop
int3
out
fistpll
jnp
mov
cmp
xchg
std
jp
mov
xorl
int
ja
lods
arpl
inc
ja
mov
push
sahf
out
movsb
jb
inc
jne
jnp
ja
addr16
in
mov
push
ret
xchg
lcall
dec
inc
pop
fwait
inc
js
xchg
bound
jmp
hlt
inc
sahf
fidivs
mov
ret
sub
ja
mov
leave
mov
out
in
add
and
cmp
jns
cmp
jns
iret
xor
xchg
xchg
lcall
daa
mov
xorb
jle
data16
mov
inc
imul
cmpb
lea
fistl
lods
and
mov
int3
inc
xchg
push
mov
out
int
jmp
mov
mov
push
cmp
jns
add
nop
inc
push
aam
lea
fistpl
test
xlat
fistpl
ss
jmp
xlat
hlt
mov
add
cmp
ja
jl
sbb
inc
xchg
push
test
cmp
popf
pop
lea
test
jg
test
popf
cmp
cld
jae
push
sarl
xchg
push
xlat
lret
push
jns
pop
test
int3
jo
aam
sti
fstl
movsb
sbb
mov
out
add
xor
js
jmp
mov
mov
jp
insb
mov
add
leave
cwtl
push
adc
cmpsl
cli
outsl
inc
cmpb
mov
fmuls
adcb
adc
repz
test
add
cmp
jb
pushf
lcall
fwait
xchg
xchg
xchg
imul
mov
mov
dec
data16
sbb
jg
mov
mov
push
imul
mov
pop
inc
out
mov
sbb
cmp
add
jno,pn
jno
pop
fdivrs
xchg
popf
aam
les
push
cmp
inc
imul
inc
mov
adc
in
sub
pop
pop
jb
jp
cwtl
jg
cltd
xchg
pop
jne
jl
outsb
or
jo
jp
imul
or
mov
insb
mov
das
push
lods
xorb
lods
packuswb
xchg
jo
mov
mov
loope
inc
cmp
pushf
mov
cmpsb
inc
movsb
xchg
call
inc
add
mov
mov
inc
pusha
rolb
xchg
jns
lcall
hlt
daa
mov
push
mov
cwtl
and
sbbb
and
xor
dec
cmp
fldcw
xchg
je
vmwrite
mov
mov
push
mov
mov
imul
mov
or
mov
add
xchg
popa
outsl
and
cli
movsl
xchg
pushf
mov
es
mov
roll
lahf
ret
xlat
cwtl
popf
jae
xchg
inc
mov
lea
inc
ret
stos
xorb
imul
inc
jns
mov
dec
xchg
nop
aam
addb
sbb
mov
pop
ss
sbb
cmp
test
adc
sar
leave
fldt
dec
mov
std
lcall
xchg
inc
cwtl
fstp
mov
jmp
fdivrs
repz
jge
test
dec
mov
outsl
mov
icebp
leave
cmpsl
xor
std
ret
xchg
imul
ja
push
lret
dec
jle
int3
inc
outsb
or
iret
lcall
jne
jno
fcmovnu
test
jle
mov
repnz
rcrl
nop
fidivrs
outsl
outsl
push
loopne
punpckhwd
xchg
push
into
cmpsb
test
lds
jecxz
mov
and
ja
jo
lret
jle
pushf
je
pop
hlt
inc
sbbl
jg
or
es
lret
fwait
idivl
shlb
add
inc
outsl
outsb
stos
xchg
sub
iret
imul
ljmp
imul
rcrl
mov
insb
cmp
mov
aam
or
pusha
int3
ret
pop
or
pop
jbe
jle
cmp
dec
jns
sahf
adc
aam
in
mov
sbb
jp
adc
jmp
call
mov
iret
cltd
int
sahf
popa
orl
mov
sbb
jae
mov
stos
push
sarb
xchg
dec
rcl
xchg
fcoms
cwtl
pushf
je
lea
fstl
inc
or
inc
xorb
mov
inc
mov
or
xor
xchg
pop
cs
sarl
cli
popf
jae
push
adc
arpl
pusha
pop
mov
mov
popa
lea
xor
call
int
cmovle
dec
lret
sub
inc
adc
daa
cltd
add
fwait
aam
mov
ror
cmp
ja
aaa
xchg
jmp
loop
stos
push
adcb
sbb
xchg
cmpb
sarl
insl
ret
ret
pop
test
mov
jg
fwait
mov
lcall
rol
add
cmp
daa
and
mov
test
mov
jae
mov
dec
sbb
into
mov
cmpb
xchg
popf
mov
leave
xchg
test
jns
lods
iret
jo
adc
insl
pushf
in
in
outsl
mov
test
je
jge
jg
mov
data16
jg
mov
test
je
int3
mov
daa
jne
loope
mov
aas
lret
push
inc
inc
mov
dec
insl
or
test
mov
inc
aad
sub
fimuls
add
push
mov
js
inc
inc
addr16
push
jnp
inc
jp
push
sti
aad
mov
inc
inc
aas
and
mov
mov
xchg
jns
dec
sbb
pop
scas
add
sahf
push
pop
rorl
call
ds
mov
in
movsb
mov
xchg
data16
dec
xchg
orb
mov
jno
rolb
xchg
add
into
add
popf
rclb
inc
push
outsl
sub
aam
fwait
in
push
lret
cmp
jge
in
fxch
mov
hlt
mov
pushf
outsl
dec
sahf
mov
lcall
das
xchg
sbb
push
cmpsl
in
sbb
lahf
cs
add
xor
mov
dec
cmp
lods
or
lods
in
or
mov
fisttpll
je
and
jecxz
insb
xchg
in
imul
xchg
lahf
pop
or
cmp
pop
mov
sahf
lea
loop
lcall
imul
mov
in
ljmp
inc
xor
xchg
mov
fstl
lahf
fucom
jle
cmp
add
movsl
adc
mov
xor
fisubl
jnp
sti
xchg
jae
andb
pop
add
inc
mov
imul
sbb
aas
inc
mov
mov
rcrb
test
xlat
std
jne
int
adc
cltd
fisubrs
mov
cmp
xchg
sbb
jae
insl
jmp
je
pop
mov
leave
aad
sub
jge
mov
adc
outsl
dec
sub
aam
insl
dec
stos
jp
aad
dec
sbbb
loope
stos
jp
fmul
hlt
dec
shll
xlat
adc
lahf
cmp
mov
adc
push
dec
insb
das
outsb
lods
sbbb
out
insl
fsubrs
inc
leave
loopne
mov
xchg
mov
jb
mov
mov
in
mov
jg
sahf
adc
hlt
mov
pushf
popf
mov
repz
pop
cmpsb
fidivl
dec
pushf
sub
les
push
jbe
aam
popa
mov
lret
icebp
clc
fdivr
sarl
pop
insb
jbe
orb
jle
add
xchg
cmp
popf
ds
lret
dec
inc
xor
leave
fwait
cmpsb
adc
inc
popf
mov
add
mov
lea
nop
xchg
aad
loop
arpl
mov
cltd
filds
xchg
inc
mov
das
mov
jbe
mov
int3
loopne
out
push
push
xchg
add
mov
mov
lret
fisubrs
cmp
aam
imul
pop
outsl
mov
cmp
imul
ror
cmc
sbb
lret
jo
outsl
outsl
mov
mov
inc
mov
cwtl
pop
pushf
je
fnstsw
push
dec
mov
adc
lret
mov
movsb
mov
dec
xor
jge
inc
cmp
mov
daa
pop
iret
popf
or
mov
mov
subb
js
daa
push
shrb
sbb
mov
notb
orb
test
repz
outsl
mov
sbb
lahf
loop
mov
jp
daa
xor
inc
add
sbb
pop
mov
jp
mov
cltd
sub
adc
mov
cltd
or
push
int
arpl
fsubl
sbb
popa
arpl
dec
fsubl
add
ret
xchg
imul
mulb
sti
pop
inc
mov
jg
movsb
jg
push
popa
arpl
and
cltd
fadds
in
xchg
int
arpl
xchg
sbb
jmp
sahf
lds
pushf
xchg
fwait
xchg
insl
popl
cmp
outsb
jo
in
out
int
pop
jnp
jne
je
xchg
loop
imul
addb
imul
jo
lret
xchg
aam
lret
xchg
xchg
xchg
jns
cwtl
into
jecxz
jle
clc
imul
int
xor
popf
jnp
mov
jae
push
xchg
cltd
mov
push
ret
mov
pop
subl
iret
xchg
jo
xchg
clc
fidivl
push
lods
add
mov
insb
mov
cli
iret
mov
xchg
aam
insb
dec
sub
ds
pop
xor
popa
arpl
adc
mov
jge
test
insl
jnp
and
outsl
insb
mov
mov
lret
hlt
mov
jb
jnp
into
out
aam
test
popl
and
shlb
fs
cmp
fsubs
mov
inc
adc
je
xchg
xlat
js
lds
iret
test
mov
mov
shr
rcl
cwtl
scas
push
out
mov
daa
jo
cmp
cltd
xchg
cmc
fistpl
xchg
cld
jae
imul
pop
jmp
lret
pushf
cmp
xchg
mov
jnp
movsl
cwtl
cli
mov
ss
xchg
xchg
lods
ret
pop
shlb
lock
xlat
je
xchg
rcrb
pushf
xchg
jge
mov
test
ja
mov
mov
mov
sub
mov
js
push
mov
enter
cltd
jp
shll
in
push
scas
push
xorl
xchg
lea
jl
andb
jno
lahf
data16
andb
jo
subb
cmpsl
je
push
sbb
int
pop
jne
cmpl
dec
dec
jg
scas
stos
xor
aam
loope
mov
adcb
lret
es
xchg
dec
je
orl
int
fistpl
repnz
jae
jp
push
mov
sub
dec
pop
dec
inc
inc
mov
adc
mov
insl
xchg
popf
mov
mov
sbb
inc
imul
loopne
into
mov
imul
xorl
mov
xchg
jno
cmpb
in
test
push
adc
jle
pop
jae
repnz
js
fldcw
je
inc
sub
popf
jg
jnp
lea
je
jge
leave
lret
in
push
sub
jns
inc
lcall
cmp
mov
mov
call
pushf
shl
movsl
insb
dec
out
xchg
or
xchg
xchg
or
inc
pushf
movsl
xchg
add
jmp
js
pop
inc
mov
xchg
insb
les
mov
into
insl
nop
add
mov
add
lea
arpl
cs
xchg
sub
int
xor
int3
addb
sahf
lret
xchg
xchg
aam
jne
sub
inc
imul
scas
andb
sahf
or
in
pop
fistpl
jo
mov
sbbl
lods
rcrl
and
cli
sbb
outsl
pushf
mov
pop
fnstcw
das
sbb
imul
ss
mov
push
imul
ret
insb
mov
decl
negl
or
sub
daa
call
sub
jl
ja
jno
jns
jne
cld
gs
mov
sahf
xchg
insl
mov
popf
fstp
arpl
daa
xor
mov
adc
and
cmpsl
xchg
int3
xorb
mov
mov
outsl
mov
mov
xchg
jns
mov
xlat
push
inc
mov
insl
xchg
insb
xchg
push
mov
jns
ja
pop
je
in
insl
mov
int3
imul
nop
cmpsl
xchg
push
in
das
lahf
fwait
inc
mov
je
adc
push
cmovs
out
xchg
pushf
movsl
jns
daa
mov
cwtl
xchg
mov
pop
or
jnp
ret
kmovb
mov
ja
adc
insb
push
ja
push
lahf
movsl
jb
inc
push
mov
mov
mov
jmp
cmp
das
shrl
or
jle
leave
punpckhdq
pop
aam
subl
pop
and
xchg
xlat
sbb
insl
daa
test
xchg
out
cmp
adc
insb
movsl
out
rol
fstl
test
mov
jae
pushf
push
cld
adc
jp
clc
sbb
mov
shl
testb
cltd
cmp
popf
mov
iret
xchg
roll
cmpsl
inc
inc
ja
pop
jbe
xchg
lret
imul
jno
mov
popf
jle
enter
outsb
or
jnp
inc
pushf
sahf
int3
xchg
movl
arpl
or
in
outsb
cmpsl
js
insb
ret
lcall
mov
mov
es
daa
sub
push
inc
jg
push
rorl
xor
mov
or
cld
test
cmp
arpl
out
xchg
nop
lret
aaa
imul
pop
int
into
pop
mov
das
xchg
repz
mov
add
xor
fwait
cmp
pop
or
mov
xchg
or
aam
mov
inc
jg
pop
xchg
arpl
and
jmp
dec
call
aam
outsl
iret
jb
or
sar
xorb
shlb
push
testl
aam
mov
cmp
dec
lret
mov
lods
push
mov
iret
int3
or
lahf
repz
pop
rclb
ja
fnsave
lods
sahf
or
xchg
insl
das
jb
mov
dec
jp
outsl
fistpll
fisubrs
or
lods
pushf
shrb
push
int
or
sub
jno
or
or
jbe
jb
jg
mov
inc
inc
iret
xor
fmulp
cmp
adc
xchg
stc
inc
push
mov
inc
out
js
insb
std
shll
inc
xor
aad
mov
inc
pop
into
jle
jecxz
je
insb
jae
or
mov
enter
mov
mov
bound
sub
out
cwtl
dec
cs
cmp
mov
xchg
adc
xchg
insb
pop
mov
cmpsl
int3
imul
jae
mov
leave
lods
sub
push
jns
shlb
das
lahf
mov
jg
inc
cli
push
xorb
sub
xchg
arpl
cmp
mov
xchg
popf
fwait
leave
dec
imul
mov
insl
push
outsl
into
lock
jns
xchg
xor
xor
mov
cwtl
inc
mov
js
push
xchg
or
push
repnz
cwtl
push
ret
and
lods
xchg
fmul
push
aam
pop
pop
jmp
in
lds
cltd
subb
xor
insl
xchg
adcb
rclb
cltd
push
stc
sbbb
lahf
mov
xchg
cld
mov
imul
jb
add
jbe
lret
iret
test
cmp
jo
fistpl
or
mov
fstpt
cmp
insl
sti
inc
mov
cld
std
fbstp
stos
sahf
jno
shrb
pop
push
subb
jb
pop
jle
test
pop
mov
cmovns
dec
pop
sti
lret
jb
xchg
jae
pop
xchg
jno
mov
test
pop
into
leave
fwait
out
into
jno
jbe
test
xor
lret
push
mov
aam
je
and
adc
leave
fists
cmp
mov
in
out
push
aaa
cltd
mull
in
sti
ret
mov
jno
lea
jae
xor
or
popf
clc
orb
xlat
pop
xor
jne
mov
mov
idivl
clc
jno
add
jnp
insb
xchg
mov
imul
cwtl
sub
int3
insl
mov
sar
xchg
inc
sbb
pushf
mov
inc
sahf
fiaddl
aaa
cmp
int3
jno
imul
movsl
enter
cwtl
inc
jns
pop
dec
lret
ficoms
data16
divb
sub
lret
ds
insl
sti
loope
out
pushf
sbb
mov
jb
push
pop
ret
push
es
mov
shrl
mov
jnp
mov
es
push
inc
or
mov
jne
cmpsl
cmp
sbb
push
xchg
inc
jne
int
xchg
ja
cwtl
jle
data16
inc
cmp
ret
jae
xor
lock
mov
mov
lret
inc
jge
add
mov
mov
pop
pop
das
push
or
jns
ss
cwtl
insb
jae
fdivrs
int3
jne
dec
fistl
mov
fstpl
loope
jne
cmp
adc
lea
jae
mov
ror
add
shlb
mov
mov
push
pushf
xchg
jne
int3
xchg
jae
xchg
jns
xchg
imul
mov
mov
das
out
jbe
subl
sbb
mov
shlb
xor
pop
fisubrs
scas
dec
xorl
ret
shl
loop
cmpsl
lret
int
fldl
lods
lcall
adc
fwait
mov
lret
jg
das
cli
das
push
mov
lcall
arpl
push
fistps
les
mov
vpunpcklqdq
jo
mov
int3
leave
jg
data16
xchg
aam
in
repz
cltd
imul
ja
xchg
dec
lret
leave
int3
lret
jl
jg
call
scas
mov
je
jnp
nop
cmpsl
dec
cltd
sahf
in
xchg
jle
jl
mov
sbb
jne
push
mov
xlat
test
jbe
mov
jnp
loope
xchg
jge
xor
in
xchg
push
pusha
loope
cmp
dec
out
lret
call
arpl
les
dec
jb
cmp
hlt
outsl
aad
cwtl
jo
js
leave
lret
jne
loop
dec
fcomps
jl
mov
shrl
mov
lret
jge
jo
adc
sarb
pop
jp
mov
jae
push
fnsave
fst
rcrb
xor
popf
cmp
adc
daa
mov
cltd
lea
fstpl
pop
pushl
std
sahf
push
int
arpl
lods
insl
inc
pop
pop
add
loope
cmc
addr16
xchg
js
xchg
addr16
add
orb
fstps
inc
aam
xchg
iret
imul
test
lret
cwtl
lahf
fsubs
fistpll
daa
push
cld
out
mov
ret
cmpl
iret
lds
outsl
into
pop
push
sti
out
mov
adc
roll
fisubs
jb
inc
sbb
mov
and
xor
addr16
popf
mov
jle
jl
sarb
int3
pop
and
add
jp
xchg
subb
push
push
add
je
lret
cwtl
outsb
mov
arpl
pop
inc
cmp
mov
outsl
mov
mov
out
mov
mov
sbbb
xchg
imul
shll
shll
jne
cmpb
xlat
popl
jg
cwtl
sbb
sbb
sti
mov
aaa
jmp
cmp
inc
testb
stc
or
mov
mov
cmp
jb
inc
data16
iret
lret
mov
rorb
inc
clc
mov
adcb
mov
cmpsb
jecxz
dec
add
or
popf
fcomi
call
xor
in
mov
mov
lret
jns
das
push
xlat
imul
out
mov
sbb
enter
xchg
pushf
mov
test
mov
leave
cwtl
sbb
movsl
ja
out
outsl
cmp
mov
mov
lcall
sbb
push
shrl
sahf
jne
mov
pop
cmpsl
ret
jno
push
jae
fisttpl
mov
adc
lcall
int3
inc
out
rorl
and
inc
dec
cltd
popf
xchg
int
jbe
mov
imul
or
inc
leave
mov
lock
add
sub
fisttps
push
sub
jae
loope
xchg
inc
cmp
xchg
repz
jecxz
sbb
cs
and
pop
arpl
mov
loope
cld
int
lea
aam
cmpb
xchg
pop
cli
popa
leave
lret
mov
dec
jno
fwait
int
cmp
pop
les
jecxz
out
mov
inc
aaa
insb
dec
outsl
mov
mov
andl
outsl
in
les
divb
adc
lahf
sbb
aad
sub
mov
bound
push
test
loope
mov
jnp
js
in
insb
dec
ficompl
xchg
ret
je
hlt
popf
cltd
jo
repnz
cwtl
enter
cltd
js
imul
mov
lea
dec
fistpl
xchg
int
pop
pop
pop
fwait
stc
int
popf
mov
repz
jecxz
mov
pop
xchg
jge
insl
fwait
jne
push
lods
lea
adc
inc
dec
push
xchg
mov
jne
shrl
mov
stos
inc
mov
mov
mov
out
cmp
xchg
leave
insb
cmpl
ret
aas
loopne
ret
adc
pop
cmc
test
out
jae
mov
rcrb
aad
jnp
mov
xchg
fistps
push
mov
dec
lcall
mov
jg
xchg
cmp
inc
imul
mov
xchg
mov
dec
xor
lret
movsl
andb
addr16
iret
ret
xchg
xchg
cmp
insl
jns
js
nop
xlat
je
or
insb
outsb
lahf
jle
sbb
mov
push
jl
sbb
outsl
popf
ja
fcmovb
pushf
jge
xlat
jg
outsb
mov
in
lahf
inc
jno
xchg
cli
mov
enter
mov
cmp
insb
xlat
out
mov
pushf
leave
mov
pop
mov
lahf
cwtl
jno
mov
jl
cmp
xchg
mov
hlt
jb
js
jnp
xchg
mov
mov
jns
outsl
nop
arpl
inc
xchg
repnz
iret
push
jb
popf
inc
fwait
enter
adcb
enter
jecxz
cmp
lahf
mov
outsl
insl
jnp
sbb
insb
stos
inc
lea
int3
bswap
jbe
lcall
mov
pushf
aam
jecxz
xchg
mov
inc
iret
in
lea
mov
xchg
nop
jae
out
test
movsl
imul
lahf
xchg
jo
sub
mov
js
pop
into
adc
ljmp
cmp
and
std
aas
dec
or
loop
outsb
jne
xchg
sbb
fimuls
test
ja
insb
pop
dec
aam
pushf
xchg
lret
xchg
jb
ror
jp
jg
cld
jb
push
test
inc
mov
dec
cltd
push
cmpsb
movb
jae
adc
pop
dec
mov
mov
outsb
lret
insl
nop
int
nop
cmpb
jns
into
xchg
jp
or
jno
cltd
push
cltd
jbe
sbb
and
aam
mov
popa
mov
mov
sbb
imul
enter
call
outsl
mov
insl
enter
push
dec
shrb
lret
insb
lcall
mov
inc
les
xlat
jge
push
int
js
xchg
cli
mov
ljmp
mov
test
stc
mov
mov
cmp
xor
out
add
shrb
mov
pop
pop
mov
aaa
test
js
shlb
int3
mov
push
mov
mov
lret
or
rcrb
and
or
xor
xor
pop
fldt
mov
pop
pop
imul
popf
shlb
mov
outsl
leave
or
into
xor
cmp
sahf
ja
and
aad
pop
sbb
sbb
dec
lret
mov
inc
mov
lret
sbb
xor
out
jge
mov
aas
scas
mov
jno
mov
push
inc
fists
aaa
mov
pop
pop
jno
outsb
mov
jae
fldl
mov
repz
out
mov
in
aad
xor
mov
and
shl
xchg
jmp
push
cmpsl
xchg
lea
mov
ljmp
repnz
sbb
adc
cmp
lcall
ficoml
or
mov
jge
lret
mov
leave
jno
dec
xchg
xchg
fldt
xchg
fsubrs
in
gs
sarl
xchg
xchg
push
lea
je
xchg
xor
aam
inc
insl
adc
lcall
push
cltd
cmpsb
cmp
cmp
jbe
jl
inc
jg
stc
inc
emms
sbb
iret
jae
insl
mov
push
into
push
call
add
das
testb
jl
out
inc
lods
cmpb
push
aam
xchg
jnp
mov
cwtl
das
adc
enter
push
jne
sti
jmp
pop
jg
mov
imul
cmp
aaa
xchg
into
lcall
jge
inc
js
cmp
inc
insl
jno
mov
inc
mov
ficoms
ret
cwtl
lcall
iret
lret
xchg
jnp
mov
lahf
into
xor
out
mov
jmp
js
outsl
push
mov
cmp
add
insl
inc
sub
push
rcl
stos
fisubrl
push
mov
fwait
xchg
nop
xor
inc
cmpsb
rolb
xchg
mov
sti
mov
daa
lret
imul
xchg
insb
cwtl
cltd
mov
hlt
clc
imul
js
cld
mov
mov
jno
push
push
icebp
fcmovnb
mov
notb
fbstp
cmp
mov
fldenv
cmp
pop
shr
push
inc
mov
push
aaa
mov
pop
pop
shll
xor
dec
sti
mov
sub
push
rcrb
jge
xchg
insb
orb
daa
mov
ret
cmp
xor
jns
mov
adc
mov
or
bnd
or
mov
or
xchg
aaa
push
lods
imul
mov
jnp
xchg
pop
jg
es
mov
cmpsl
inc
leave
jns
pop
outsl
int
mov
iret
outsl
imul
lret
out
fstpl
cs
insl
lea
jo
ret
pop
mov
lds
in
xchg
jb
mov
jne
cmp
rclb
inc
mov
mov
push
cltd
xor
mov
xlat
jg
inc
outsl
jno
je
subb
sbb
mov
jne
outsl
jns
jp
jle
mov
mov
icebp
fnstsw
mov
jb
repz
addr16
xchg
jnp
mov
nop
aam
inc
xchg
and
jne
sub
mov
push
ss
arpl
lcall
insl
mov
call
fnstsw
call
outsb
clc
rcrl
inc
or
fidivl
data16
outsl
add
imul
adc
out
outsl
pop
cltd
lahf
push
fwait
mov
sbbl
push
insb
push
mov
and
jge
cwtl
setg
repz
outsl
popa
je
jbe
sbbb
iret
int
fldt
add
or
mov
imul
mov
jnp
test
outsl
arpl
xchg
lcall
leave
add
scas
mov
fwait
cmpsl
lret
xchg
jne
lods
xlat
mov
xorb
xor
jo
push
addr16
mov
jns
out
jp
push
subb
cmc
insl
mov
jl
arpl
flds
out
jo
jnp
fwait
iret
lcall
mov
mov
in
insb
mov
in
push
in
gs
js
lcall
mov
mov
out
push
out
addr16
xor
lahf
subb
push
fwait
mov
jg
jp
mov
sahf
je
js
imul
jl
das
push
mov
int
aam
outsl
jmp
lret
or
jae
pop
xchg
lahf
inc
xchg
pop
in
fsubrs
mov
adc
pop
sub
out
fwait
mov
dec
cmpsw
insl
aam
cmpb
lret
mov
sbb
adc
xchg
xchg
lahf
jno
fisubrs
push
jle
and
jl
mov
insl
outsl
cmp
fcoms
nop
mov
jl
ss
jb
rclb
push
sti
fwait
int
sub
lds
outsl
or
jns
mov
lds
popa
dec
jo
sbb
rcrl
mov
push
xchg
jg
xlat
insb
leave
xchg
jae
fnstsw
sub
mov
rol
jns
adc
and
or
je
mov
nop
jecxz
push
lock
imul
jp
js
fnstcw
das
nop
fidivrl
ds
popf
cmp
inc
js
mov
lea
lahf
lret
inc
imul
dec
addr16
xchg
js
sub
int
jne
imul
xchg
pop
mov
ret
xorb
cmp
cld
ss
js
lret
aam
dec
enter
test
iret
and
js
mov
shlb
mov
jl
fdivrs
push
cmp
out
popf
das
add
iret
ret
pop
xchg
adcb
xchg
mov
inc
ret
les
mov
aaa
cmp
mov
or
adc
jns
dec
cmpsl
and
add
mov
imul
ja
add
sbb
clc
xchg
pop
add
lcall
mov
push
inc
xchg
sbb
into
jae
ret
xorl
mov
shlb
dec
jae
mov
mov
pop
scas
es
add
leave
arpl
cwtl
orb
fwait
sub
leave
mov
mov
jle
aaa
int3
andb
das
lods
popf
mov
jae
lea
jbe
mov
mov
jp
xlat
addr16
dec
jnp
outsl
clc
jae
sbb
xchg
mov
xchg
mov
push
xchg
jge
pushf
fwait
and
repnz
lcall
add
mov
jbe
lret
mov
mov
mov
mov
lcall
in
mov
mov
arpl
sbb
cltd
ja
xchg
leave
fwait
or
sub
aaa
xlat
push
jmp
ja
jg
dec
orl
lods
xor
stos
loop
jae
mov
push
test
leave
into
mov
pop
imul
pop
aam
jb
jae
int
movsb
mov
cmpb
std
test
and
cmp
int
sbb
mov
mov
int3
mov
jo
mov
movsl
es
xlat
add
aad
inc
les
fistl
jmp
aaa
popa
jae
das
inc
lds
jle
outsl
dec
mov
xlat
inc
adc
push
lret
das
in
call
push
pushf
das
jg
lahf
xchg
pop
mov
mov
lcall
mov
lret
jne
xor
ja
cmp
mov
into
iret
cwtl
jecxz
sahf
xchg
add
mov
push
setb
jp
xor
xchg
or
lret
xchg
jbe
mov
lret
lret
push
je
xor
xchg
fiadds
shll
add
imul
jecxz
sub
ret
jo
pop
out
nop
jg
add
mov
cwtl
out
cmp
mov
xchg
lret
rolb
mov
xchg
inc
repz
mov
dec
xchg
mov
jge
fdivs
xchg
xor
leave
mov
mov
cmp
je
jne
imul
xchg
test
sub
loope
cltd
add
or
outsl
lods
jne
out
xchg
mov
jg
lret
cltd
in
ds
inc
imul
sbb
adc
mov
cs
adc
fwait
jg
jne
xorb
jns
push
std
fsubr
aaa
ret
test
nop
inc
xchg
mov
pushf
jg
ljmp
cld
jmp
ja
mov
xor
lcall
xlat
call
adc
sub
xchg
sub
xor
xchg
xor
hlt
cmp
js
xchg
imul
mov
sahf
insl
imul
jo
ret
sub
mov
jp
cmp
popf
jge
xchg
outsl
imul
mov
jp
pop
xchg
cmp
sarb
aas
xor
call
xchg
jns
push
fnstsw
inc
mov
std
dec
dec
stos
jg
outsl
imul
lret
ja
inc
xchg
outsl
mov
arpl
mov
into
fcoms
or
jae
pushf
cmp
imul
mov
ja
xchg
lcall
cmpb
jno
outsl
lcall
push
fistpl
mov
lret
fwait
lea
test
mov
mov
inc
mov
jns
cmpb
test
inc
stos
int
adc
xchg
xchg
xlat
mov
mov
sbb
xor
jae
mov
lret
cltd
mov
lret
iret
test
add
adc
sub
imul
adc
mov
push
sub
jno
xchg
jne
jo
lods
xchg
mov
test
inc
jge
lret
dec
jecxz
inc
jg
jle
xchg
xlat
cmp
mov
inc
sub
jae
leave
inc
push
xor
push
ja
jg
push
scas
jp
out
jbe
mov
jo
imul
mov
mov
xchg
mov
aam
enter
in
insl
mov
sbb
fwait
cmpsl
dec
jne
inc
or
enter
dec
out
lahf
pop
sub
cld
mov
insl
jl
lock
out
ror
andb
je
xor
mov
outsl
jbe
push
or
push
add
xchg
jg
dec
mov
imul
test
inc
ss
jge
rcrb
adc
xchg
xlat
aaa
addb
jo
xchg
mov
xor
movsl
cmpb
dec
int
jno
dec
cmp
xchg
jl
xchg
xchg
ror
mov
clc
iret
cli
push
jge
out
push
int3
xchg
insb
test
sub
mov
jg
ja
arpl
aaa
pop
aad
mov
inc
jl
jae
popa
xchg
insl
ja
loopne
test
jae
ss
jnp
push
inc
loop
int3
mov
loop
leave
sbb
sbb
xor
xchg
lret
jns
sti
jnp
insl
mov
fwait
shlb
ret
outsb
lret
sahf
in
jne
mov
fisubrs
cli
mov
inc
out
repnz
aaa
out
adc
fcmovne
test
mov
sbb
dec
imul
xchg
stc
in
daa
out
fwait
int
mul
mov
inc
orl
cltd
ret
mov
in
scas
sahf
mov
jnp
test
leave
ret
mov
popf
mov
in
pushf
rcll
loopne
pop
loope
loope
fcomip
shufps
dec
aaa
mov
xchg
mov
mov
js
pop
jo
mov
xchg
mov
stc
int
mov
jecxz
mov
inc
xlat
negl
add
outsb
xor
add
inc
xchg
and
push
fstpt
xlat
outsl
call
mov
adcb
adc
add
ja
cmp
bound
fbstp
jbe
sub
jb
imul
lahf
pushf
ret
jnp
imul
cli
xor
shlb
inc
in
popf
aaa
inc
sti
stos
lcall
call
cld
mov
incb
mov
push
ds
ljmp
faddp
jnp
lods
js
mov
shlb
xchg
cmp
mov
cli
dec
mov
jae
lea
push
xor
pop
mov
sarb
fldt
std
jecxz
or
jns
xchg
dec
xor
test
popf
test
aaa
xchg
leave
jno
xchg
adc
shrl
stc
popa
jns
shlb
orb
xchg
fwait
jp
xchg
jl
outsl
iret
inc
mov
inc
jl
sbb
mov
idivl
inc
jp,pn
popf
and
add
cli
addl
fwait
sub
ja
jnp
jbe
iret
nop
push
addb
jl
imul
dec
adcb
sbb
je
mov
jne
fdivrs
jbe
pmulhw
mov
imul
pop
iret
mov
xchg
dec
mov
data16
rorb
outsl
jns
aas
mov
cwtl
jb
adc
inc
mov
xchg
int
sbbb
mov
jns
cmpsb
lsl
lret
mov
in
mov
iret
fists
jns
fcmovnu
mov
jb
mov
outsl
mov
outsl
aaa
iret
lahf
lcall
rorb
popf
pushfw
jp
je
xchg
cltd
aaa
dec
fadds
xchg
mov
mov
mov
dec
jae
jle
inc
push
jns
pop
bound
cmpsl
sbb
mov
arpl
fwait
in
fwait
int
imul
in
roll
cmp
jnp
icebp
insl
mov
inc
jae
mov
mov
pushf
jle
insl
cltd
cmp
mov
inc
jns
call
mov
nop
mov
ret
roll
insl
fdivs
out
adcb
xchg
fwait
rcrb
jge
mov
jle
jecxz
sarb
mov
lcall
arpl
push
and
movsb
pop
mov
mov
nop
into
jg
pop
lea
xor
push
jle
in
insb
xchg
or
dec
or
mov
sbbb
repnz
rcrb
xchg
inc
jg
cmp
mov
lret
into
int
cwtl
in
jp
jb
pop
out
popl
insl
push
das
pop
arpl
fcomps
cltd
xchg
jb
xor
mov
mov
int
lahf
test
push
or
jbe
push
fildl
fmull
aad
les
fbstp
push
jg
call
push
mov
jnp
add
stc
pushf
add
movsl
jb
mov
aaa
sti
lods
sahf
aam
or
push
mov
imul
push
jp
jo
std
adc
addr16
mov
inc
subl
cwtl
ja
addr16
fadds
dec
cmp
imul
lods
das
pop
adc
jae
jns
pushf
jle
popf
mov
xchg
mov
xor
xor
jle
adcb
push
push
cmp
push
add
xchg
dec
mov
fwait
jne
popf
mov
pop
mov
jno
cmp
mov
mov
mov
popf
jae
cltd
sbb
jge
pop
sahf
xor
adcl
orb
push
fisubl
pushf
insl
jg
jmp
int
fistpl
lahf
arpl
cwtl
pop
mov
movsb
es
icebp
mov
rolb
cmp
jle
xchg
sub
push
mov
jp
xchg
mov
hlt
mov
pop
inc
jl
push
lods
push
out
les
jg
jns
pop
jge
sub
iret
sbb
jo
outsl
adc
into
xlat
jnp
lret
insb
leave
ja
cmpb
rcl
jae
mov
mov
fwait
mov
outsb
aam
dec
sbbb
mov
je
out
stos
xchg
dec
xchg
jne
xchg
mov
aam
jae
inc
lahf
lret
aaa
cmp
xor
push
int
popf
orb
cltd
insl
jg
int3
cmpl
sbb
les
int
leave
jnp
js
cli
nop
cltd
jae
push
xchg
mov
inc
xchg
insb
xchg
je
cmpsb
fwait
sub
cmp
repnz
pop
dec
lret
int
or
sbb
mov
inc
lods
imul
std
je
cs
fwait
sbb
cwtl
jbe
xchg
or
ja
fdivs
mov
imul
lcall
push
xor
popa
aaa
or
lret
mov
int3
mov
in
decl
sti
je
fdivrs
adc
cmp
mov
das
inc
aad
insb
dec
out
jp
leave
lahf
mov
inc
jbe
cltd
jns
iret
mov
hlt
rcll
xor
xchg
mov
fisttpl
clc
fldt
call
push
imul
lcall
test
jge
jl
mov
xchg
lret
mov
adc
xchg
fldl
loope
scas
mov
mov
repnz
mov
jle
mov
mov
xor
mov
jnp
jbe
pop
mov
data16
sarb
insl
jmp
sti
jl
adc
jb
or
pushf
imul
jo
jp
ja
leave
clc
ja
or
imul
mov
ja
pushf
sahf
outsl
inc
xlat
aaa
jns
lret
sbb
jp
fmul
push
cmpsl
jg
or
adc
pop
xchg
mov
and
lea
out
mov
xor
addb
mov
mov
aam
jbe
fldcw
xor
shr
or
add
shll
lods
je
cmc
mov
ror
ljmp
add
loope
leave
adcb
push
sar
call
jbe
mov
jg
push
cmp
sub
arpl
pop
adc
je
test
adc
cmp
sbb
subl
pushf
cli
iret
lea
adc
mov
das
andb
das
jl
stc
outsb
sti
jae
add
and
cmp
jo
or
rclb
fcmovnbe
fcomip
adc
xor
lods
lea
jge
fwait
jne
jo
divb
mov
mov
jg
cmp
mov
jnp
mov
jbe
js
xchg
jmp
xchg
rclb
inc
iret
pop
xchg
jne
pop
mov
push
sbb
mov
fisubs
pop
mov
inc
push
nop
fwait
lea
dec
test
cmp
rorl
mov
jg
dec
js
xchg
inc
nop
jae
xor
and
aaa
imulb
inc
fldl
shll
inc
lods
jp
mov
adc
icebp
sahf
into
sbb
adc
cltd
stos
inc
out
ror
outsb
insb
xlat
adc
or
int
ja
mov
arpl
sahf
pop
xchg
lahf
push
xchg
jmp
sarb
jae
pusha
lds
push
subb
mov
mov
dec
adc
jl
mov
mov
orb
je
mov
mov
rclb
lret
int3
push
rcll
mov
push
mov
xchg
mov
mov
push
sbb
popf
xchg
into
ja
push
je
mov
loopne
imul
dec
outsl
jg
and
sbb
jmp
pop
dec
aam
cmpsl
fcmove
mov
adc
adcb
sub
cld
jge
sbb
jge
std
imul
push
orl
xorl
mov
leave
push
out
inc
test
or
xchg
mov
ret
inc
fcmovnbe
mov
pop
mov
xchg
cwtl
shll
mov
jp
lcall
or
lahf
pushf
mov
int
pop
mov
adc
daa
fwait
xchg
sbb
outsl
insb
xchg
jg
inc
jg
pop
xchg
std
xor
mov
mov
aam
xor
imul
imul
jbe
xlat
fstpt
mov
xor
jae
call
les
ret
xchg
in
jo
mov
fwait
mov
xchg
cmp
mov
fidivrl
inc
cwtl
push
jnp
jb
lcall
int3
inc
popf
jae
js
out
jg
aas
jnp
shrb
dec
mov
sbb
adc
xchg
xchg
mov
inc
setg
xlat
cltd
je
cwtl
mov
test
jb
popf
sub
xchg
jle
jae
sub
lcall
jnp
cmp
lret
push
adc
sahf
add
cwtl
pusha
jns
lds
adcb
mov
imul
vmread
testl
lods
test
call
xchg
pop
jb
jg
fsubrl
je
xchg
mov
push
cmp
fwait
orb
in
mov
adc
into
push
and
mov
mov
mov
call
mov
insb
into
mov
mov
jo
inc
jecxz
cwtl
lcall
sub
add
cltd
sub
rorb
pop
mov
lcall
int3
jae
push
lret
fwait
imul
movsb
xchg
in
add
arpl
mov
nop
mov
xchg
aaa
jne
movsl
lds
iret
xchg
pop
popw
dec
fwait
jo
xchg
mov
xlat
iret
jae
pushf
mov
xor
popf
mov
lods
jge
mov
sbb
loopne
inc
dec
or
notl
mov
pop
stos
and
mov
xchg
jnp
gs
cmp
xor
aas
imul
ja
pop
adc
cmp
xor
sarb
ret
push
inc
or
adc
xchg
mov
lods
js
lea
cmp
mov
jecxz
cmp
aam
jmp
jecxz
test
jbe
xlat
mov
aad
jne
mov
sbb
fwait
dec
mov
inc
data16
leave
cwtl
mov
arpl
inc
mov
jns
stc
add
fldenv
mov
ja
cmpsl
sub
je
arpl
mov
das
rcrb
mov
movsl
iret
nop
mov
imul
shrb
lahf
sahf
mov
loope
pushf
lret
xchg
jl
xor
mov
fstpt
stos
orb
int3
inc
sub
shlb
addl
cwtl
jo
stc
jns
bswap
mov
insb
xor
mov
dec
push
cmp
jp
into
lds
mov
xchg
insl
dec
popa
aaa
adc
jnp
lahf
jae
fwait
xchg
leave
dec
mov
mov
jnp
insb
je
jp
mov
lret
test
js
jg
push
inc
das
das
mov
aam
pop
jne
aam
mov
mov
insb
aaa
arpl
das
test
xchg
xor
jge
aad
fdivrl
arpl
jo
push
push
adc
or
xchg
sahf
fbld
add
fbstp
push
lret
xor
mov
cltd
rolb
jnp
stc
jmp
cmp
jle
aaa
out
push
sbb
daa
mov
repnz
xchg
jl
sub
mov
and
mov
fldt
mov
int
inc
ja
hlt
pop
je
jns
movb
jnp
insb
aam
int
mov
ret
cmpl
jnp
mov
insl
into
lods
pop
mov
int
enter
decb
inc
add
jae
lods
sarb
mov
cmp
imul
xchg
mov
out
inc
or
cwtl
sbb
lret
outsb
push
pop
ficoml
orb
jo
insl
nop
xchg
and
imul
jge
mov
rorb
arpl
pushf
cwtl
jg
and
jo
pop
lret
sbbb
xor
js
int3
adc
sahf
out
add
js
jns
fdivs
xchg
jnp
mov
rolb
arpl
fs
aaa
out
leave
jmp
insl
adcb
lods
aas
rolb
call
clc
cld
mov
rolb
int
shll
add
fnstcw
sbb
inc
out
mov
pushf
lahf
leave
xchg
jo
fdivs
movsl
pop
arpl
lds
mov
mov
int3
mov
nop
jns
inc
xchg
xchg
fwait
inc
popf
outsb
outsl
imul
xchg
jno
shrb
xchg
xchg
sarl
adc
lret
adc
or
lods
mov
jp
pop
imul
xor
xor
xchg
outsl
jns
mov
jle
cld
ja
fstl
rcr
outsl
outsl
or
inc
mov
push
test
pushf
ja
adc
adc
jae
jge
inc
leave
inc
aaa
push
pop
fisttpl
aas
test
lret
insb
cs
popf
sbb
sbb
xchg
xor
sbb
jp
outsl
jns
aad
pop
test
jo
int3
pop
xchg
sbb
into
int
mov
and
pop
nop
push
jecxz
clc
lret
js
mov
or
pop
push
ss
lods
je
inc
stos
jp
xchg
jo
add
cmp
int3
inc
pop
jl
lret
pop
pop
insb
and
subb
lea
loopne
jp
imul
push
jbe
jo
sbb
sahf
push
int3
insl
xchg
mov
push
sub
leave
nop
sbbb
pop
mov
xlat
stc
jg
nop
lret
jge
xchg
pop
sub
dec
cmp
lret
xchg
jne
sbb
push
jne
mov
adc
jp
jne
lret
pop
add
fldcw
jns
xchg
dec
faddl
outsl
mov
mov
xorl
and
imul
sti
lods
lahf
aam
xchg
xchg
mov
aad
cltd
jnp
cmp
push
addr16
adc
fmul
jns
lret
xchg
push
inc
dec
jnp
outsl
int3
int
xchg
fcomps
stc
xorb
or
popf
js
loope
jae
outsl
push
push
out
cpuid
dec
ja
sbb
pushf
int3
lods
outsl
xchg
insb
pop
add
mov
dec
mov
pop
xchg
rcrl
jp
test
mov
inc
inc
or
je
xchg
test
adc
or
jp
xlat
mov
idiv
lret
stc
testl
mov
push
inc
sahf
das
push
sbb
jge
ret
xchg
int
mov
arpl
push
das
insl
mov
mov
push
jno
pop
sarl
addr16
fistps
jbe
daa
jle
fisttpl
mov
rcrb
int
jge
into
lcall
dec
dec
xlat
cmp
jb
sti
daa
mov
jne
call
mov
jge
pushl
inc
out
sti
mov
or
fisttps
test
mov
cmp
jns
ds
adc
and
das
js
jnp
dec
xor
jns
ds
ds
pop
jb
mov
orb
pop
mov
cmpsl
xchg
andl
fwait
mov
jo
or
xchg
xor
jno
cmp
jne
push
xchg
mov
jo
aad
xchg
daa
sub
insb
test
xor
cmpsl
lahf
popf
jl
aam
pop
in
imul
shrb
sbb
fcmovb
jp
xchg
imul
popa
fistps
addr16
jp
sbbb
leave
fwait
jne
aam
cwtl
daa
adc
adc
push
add
pop
ljmp
fwait
sub
adc
and
push
mov
fcomip
jge
and
sbb
aam
jp
and
or
nop
jecxz
leave
mov
jae
mov
cwtl
mov
fwait
ret
fidivl
lcall
push
fidivrs
aas
jbe
sbb
cmp
sarb
mov
lea
or
inc
iret
je
ja
xchg
ret
mov
test
daa
test
movsb
rol
icebp
mov
mov
js
jg
inc
enter
fimuls
shlb
xchg
jns
cwtl
lcall
adc
mov
mov
jg
inc
cltd
and
jl
cmp
jge
outsb
cwtl
js
lea
int3
pushf
sahf
int
out
mov
xchg
fwait
test
mov
int3
leave
or
cmc
mov
jns
fwait
ret
mov
mov
cmp
jbe
xor
mov
jnp
pop
das
cltd
mov
xchg
mov
jmp
jp
cmp
jp
rol
popf
xlat
add
inc
or
sbb
jns
sbb
js
cmp
lahf
in
popf
insb
das
mov
mov
sub
ffreep
shlb
xorb
sub
shlb
bnd
cwtl
inc
out
xchg
mov
pop
jecxz
lea
mov
jb
sub
popf
mov
lahf
sbb
popf
shrb
leave
int
xchg
jae
lret
mov
inc
xor
movsb
out
push
cmp
ret
sar
sub
mov
popf
sub
jmp
imul
lahf
cltd
lea
xchg
jl
jb
lcall
xlat
mov
ror
pop
loop
xchg
push
in
xchg
mov
fcmovu
subb
jns
lret
stc
push
popf
xor
xchg
or
cmpsb
outsb
lahf
test
test
jle
aad
jl
fistl
cltd
mov
jnp
imul
mov
jecxz
pop
xlat
insl
and
pop
shrd
sub
jge
je
push
jl
mov
jp
xchg
pop
cmp
xchg
pop
sti
lea
outsl
js
mov
outsb
and
test
nop
mov
lods
fildll
dec
ss
jge
mov
xchg
leave
into
jbe
dec
push
push
jg
sbb
jae
sahf
inc
mov
pop
cs
addl
inc
xchg
aad
jle
xchg
jge
out
addb
pushf
adc
in
mov
add
stc
lret
cmp
inc
nop
insl
lcall
shrb
jne
xchg
pushl
rcrl
inc
jge
js
je
dec
stc
lods
getsec
push
out
or
ds
ja
addr16
roll
adcl
iret
nop
lods
xchg
lret
jno
mov
xchg
pop
xor
or
nop
mov
and
xchg
stos
jle
mov
sbb
arpl
jns
out
outsb
jb
fsubrs
in
xchg
insl
fbld
push
mov
jne
xchg
xchg
push
lea
jae
aam
sahf
cmp
jbe
mov
push
jge
adc
pop
sbb
and
lahf
mov
leave
add
int3
xchg
mov
mov
inc
push
pop
rcrb
jo
repz
in
mov
mov
ss
scas
fstpl
rcl
int
lahf
push
xchg
adc
push
or
in
bnd
inc
or
dec
xchg
mov
dec
jmp
push
cmp
insb
lahf
mov
pusha
sbb
jnp
lret
adc
xor
xchg
lret
xchg
and
sub
xor
jg
aam
pop
movsl
xchg
mov
push
xchg
gs
mov
mov
mov
popa
xchg
push
jg
cmc
mov
push
xor
lahf
mov
rolb
xchg
xchg
aaa
call
jnp
jne
jns
cld
adc
jg
or
jbe
mov
inc
mov
int
lahf
push
outsl
cmp
outsb
movsb
sahf
add
mov
cltd
adc
cltd
and
repz
push
cmp
dec
pop
mov
idivb
pop
add
jg
cmpb
sbb
mov
xlat
xor
imul
ret
jae
rorl
out
mov
mov
sbb
arpl
lock
repz
cltd
jo
mov
pushf
fisttpl
outsb
adcb
fwait
aam
stos
add
sarb
insl
jg
into
or
mov
mov
xor
dec
dec
movl
in
mov
fcomps
mov
mov
lret
subl
xor
xchg
xchg
lahf
xchg
jb
xor
mov
idivb
out
fcoms
jp
push
mov
xchg
nop
xchg
mov
int3
fldt
xlat
js
jo
inc
inc
jae
sahf
shlb
mov
popf
jl
neg
xor
mov
hlt
mov
cmp
stc
jmp
ret
mov
addb
lahf
or
cmp
test
pop
outsb
outsw
into
js
mov
fistpl
jle
clc
dec
arpl
and
clc
pop
lods
jge
sahf
outsl
lea
mov
js
sbb
cmp
daa
xor
fwait
enter
addr16
xchg
lea
mov
insl
je
test
loopne
sbb
sti
push
mov
aam
imul
arpl
inc
push
mov
lret
xchg
cmp
mov
jae
or
mov
mov
rcll
ja
inc
jae
jno
cmp
xchg
stos
aaa
add
mov
das
scas
gs
mov
jbe
xlat
jp
add
lret
outsb
mov
jb
int
out
mov
xchg
fcoms
call
add
xchg
lret
int3
xlat
add
lcall
aad
aam
mov
sbb
je
mov
fsts
lea
out
jne
mov
xlat
data16
jg
sbb
fsubrs
cmpsl
pop
outsl
aaa
mov
mov
pop
call
xchg
adc
jnp
nop
orb
cwtl
shlb
popf
xchg
fsubl
xchg
mov
cmpb
mov
lds
lret
jns
mov
aam
mov
fcompl
jge
cwtl
fisubl
sbbb
clc
xchg
cmpsl
sbb
mov
mov
iret
or
es
fbld
imul
sub
mov
jg
inc
enter
mov
or
xlat
jae
jo
mov
les
lods
js
sub
pushf
dec
jge
mov
cltd
enter
xlat
mov
lret
inc
adc
dec
xchg
cmpsl
jl
lret
jne
fisubrs
xor
mov
inc
ss
stos
xchg
inc
xor
lea
stos
xorb
dec
repz
lret
xorb
mov
add
xchg
clc
insb
sti
lcall
or
lds
add
orb
mov
cltd
cwtl
jno
jl
insl
dec
mov
inc
mov
cmp
fsubs
and
popf
jbe
mov
cltd
aam
xchg
dec
dec
cltd
imul
icebp
mov
orb
jb
jge
mov
pop
cmpb
lret
call
push
insb
inc
mov
nop
mov
dec
js
ljmp
mov
sbb
ja
mov
jb
xor
imul
mov
xchg
sarb
xchg
adc
fsubrs
insl
mov
push
sbb
jne
imul
inc
and
jmp
js
lds
xchg
aam
in
push
xor
push
xchg
xchg
es
mov
fwait
cmpb
decb
jbe
xlat
pop
aaa
je
jb
dec
and
pushf
mov
push
mov
jg
cs
inc
jecxz
mov
lahf
std
hlt
gs
lret
popa
jp
xchg
jb
test
xchg
lret
sbb
jnp
fmul
lret
ja
add
xchg
imul
loopne
ja
adc
xchg
lods
push
dec
fisubl
pop
mov
out
cmp
mov
push
ret
aaa
in
fwait
mov
rcrl
xor
mov
cmc
mov
imul
rorl
push
in
into
jnp
jg
jns
fs
repnz
mov
mov
test
jecxz
push
cmp
push
aam
xlat
push
cmp
jb
ja
lods
lods
fwait
mov
or
jg
push
adc
push
mov
imul
mov
add
xchg
test
into
jnp
fwait
popf
in
adc
cmp
insb
je
rcrl
xchg
stc
popf
insl
in
sub
in
pop
mov
enter
xchg
inc
cltd
jae
mov
shl
movsl
jl
sub
lods
fisttpl
push
jae
jl
jp
js
in
xchg
inc
jo
lret
jnp
imul
mov
filds
jp
pop
ret
mov
mov
jb
xchg
iret
cmp
mov
cli
cmp
mov
xchg
jg
mov
inc
fwait
xchg
or
push
fstpl
mov
jle
push
js
cwtl
nop
daa
push
popf
mov
int3
pop
xor
arpl
outsb
jae
inc
inc
dec
xchg
push
sbb
loop
jecxz
push
jnp
test
sub
xchg
es
jo
je
jg
outsl
xorb
jae
mov
cltd
inc
xchg
js
mov
outsl
pop
inc
lds
outsl
cltd
imul
jb
mov
pushf
iret
mov
xchg
mov
sub
lahf
xlat
std
jp
outsl
out
jo
jb
xchg
inc
hlt
aam
out
xorb
out
shlb
xor
jg
fisubrs
or
jg
daa
inc
xchg
int3
inc
insb
mov
mov
xchg
xchg
outsb
rcrb
dec
mov
and
lret
cmp
je
ja
inc
mov
and
cmc
mov
aam
pop
sbb
xchg
ds
mov
sbb
inc
xor
sarl
repnz
ljmp
ja
adc
adcl
mov
jno
cmc
fcoms
cltd
mov
addb
aas
popf
xchg
aaa
pop
jmp
testb
lea
and
xchg
xchg
push
dec
mov
in
mov
cmp
lea
xor
cwtl
repnz
jp
pop
jge
test
in
ja
mov
push
stc
and
ja
xor
jb
cmp
jg,pn
jno
or
js
jb
jl
mov
jle
mov
mov
xchg
mov
arpl
mov
adc
add
jo
xchg
lea
ss
lret
ljmp
jmp
dec
sbb
mov
lret
push
fwait
sbb
sbb
xchg
inc
lahf
xchg
aam
inc
dec
imul
mov
lahf
sbb
jmp
ja
xchg
jg
cmp
leave
inc
insl
xlat
hlt
cmp
inc
xchg
mov
jae
lods
int3
mov
data16
xchg
dec
ja
mov
jne
stos
xor
cmpsb
lcall
push
pop
push
sbb
arpl
xchg
je
mov
jo
jl
adcl
lods
js
lods
mov
xor
addb
cmp
insl
test
mov
xchg
aam
jo
mov
cmp
pushf
orb
push
adc
movsl
out
lods
mov
imul
orb
adc
mov
xchg
mov
test
int3
push
ds
inc
xchg
cmp
mov
outsl
leave
addr16
lahf
xchg
fimuls
inc
orl
out
jp
jbe
js
pushf
jmp
jl
aam
rolb
cmp
cmc
mov
mov
in
std
mov
mov
insb
jbe
mov
imul
insl
jne
outsl
push
das
xor
xorb
mov
insl
and
add
aas
xor
lods
sbb
inc
jns
jnp
cmp
xor
jl,pt
repnz
add
push
mov
jno
sub
rcll
jle
mov
ret
inc
je
cld
dec
orb
lea
daa
jp
xchg
xchg
jl
int3
jae
jecxz
inc
add
mov
int
jge
xchg
out
js
imul
jp
sahf
xlat
lcall
lea
adc
lcall
push
jp
jl
jl
outsl
arpl
call
rclb
mov
mov
mov
xlat
pushf
out
cltd
sbbb
lret
imul
jae
int
adc
mov
jne
nop
adcb
push
das
jae
pop
ja
push
jl
arpl
jg
xchg
ret
iret
dec
js
mov
cli
sarb
lret
out
xor
mov
jns
mov
mov
cld
mov
inc
enter
cwtl
cmp
adc
mov
push
cmp
outsb
lea
loop
fisubrl
mov
lret
sti
xchg
xchg
sbb
sahf
outsb
fcmovnbe
push
lods
inc
mov
je
stos
mov
mov
stc
repz
and
jl
jo
jbe
cltd
call
into
mov
shlb
push
cmp
mov
aam
xchg
add
inc
jge
mov
mov
daa
rol
push
lds
mov
icebp
js
jae
jb
xchg
lret
fmuls
lods
mov
testl
pop
fdivr
or
cmp
jl
neg
mov
inc
lahf
das
add
jp
into
push
mov
xchg
mov
iret
xchg
repz
ja
daa
sub
insl
lahf
test
out
mov
jg
mov
cmpsl
fs
mov
xchg
adc
xchg
xlat
mov
shrb
jns
lahf
jg
in
arpl
das
shrb
outsl
shlb
mov
mov
add
out
lea
jge
inc
cmp
xchg
outsb
lret
lods
popf
imul
test
enter
jp
fisubrl
xchg
or
adc
jns,pt
adc
xchg
mov
or
cmp
ljmp
ret
stc
insl
mov
cmp
cwtl
adc
jns
mov
cltd
xlat
or
mov
mov
adc
test
lahf
call
in
jg
lods
mov
int3
pushf
add
out
ds
push
add
enter
int3
push
stc
adc
fsubr
xor
rclb
lret
jp
xor
mov
mov
jae
mov
inc
push
sub
push
lods
fists
insb
mov
mov
mov
xchg
jecxz
sbb
xchg
outsb
fcomps
add
fiadds
je
int
lock
loop
lahf
adc
inc
xchg
nop
jns
outsl
fmul
js
insl
dec
sbb
inc
push
push
aam
sbb
xor
inc
adc
js
jo
push
push
leave
mov
jbe
fs
jg
jbe
imul
mov
cltd
mov
ja
xchg
cmp
sarb
test
xchg
jg
jle
dec
jns
add
nop
mov
lahf
jmp
pushf
ret
xor
jae
inc
lods
inc
jns
or
jns
pop
out
xlat
lahf
jb
mov
aaa
das
jle
jbe
outsl
out
das
and
xchg
popf
andl
in
add
mov
inc
mov
outsb
popf
xor
jb
add
lock
lahf
sbbb
lcall
xchg
fmul
stos
divb
aad
push
sbb
mov
and
inc
mov
push
jns
outsb
cltd
mov
ret
repz
xchg
cltd
in
adc
push
xlat
xchg
inc
int3
mov
jns
mov
inc
nop
push
mov
cld
push
xchg
aas
jnp
int3
sbb
pushf
andb
insl
js
xchg
push
outsl
jl
and
jge
jno
push
andl
sbb
mov
inc
adc
iret
xchg
inc
leave
sbb
inc
cmpsb
jg
xlat
sub
xchg
jno
insl
and
pop
leave
jnp
xchg
test
xchg
mov
add
pushf
jl
add
rolb
lret
lret
mov
jo
mov
jg
js
pop
jo
mov
adc
xchg
leave
rorl
sahf
or
pop
jb
ds
jg
mov
fs
mov
fwait
sarb
leave
popf
push
fistpll
cld
pop
ds
xchg
fisttpl
int
in
pop
fistpll
cs
mov
push
aam
pop
lret
mov
add
and
dec
mov
test
cmp
jno
mov
rorb
xor
cmp
jbe
outsb
movsl
stos
in
in
jmp
orb
xor
ljmp
push
movsb
xor
xor
mov
out
lret
into
mov
popf
jp
idivl
insb
jge
js
mov
sti
or
push
in
outsb
orb
mov
add
decb
fisubl
push
lods
mov
xchg
mov
mov
jge
mov
mov
mov
xor
xchg
nop
insb
jbe
lds
and
aam
int
int3
mov
mov
aam
cmp
mov
mov
daa
ret
pop
dec
xor
xchg
shll
fwait
stos
fcompl
mov
dec
mov
xchg
and
xchg
and
lret
mov
stos
jbe
jne
inc
mov
add
nop
dec
pop
leave
pop
jecxz
xor
inc
notl
jg
xchg
arpl
imul
dec
dec
pop
push
stc
lret
outsl
adc
mov
jae
inc
push
xchg
aaa
pop
fdivs
mov
inc
les
cmp
test
imul
popf
mov
ror
jp
je
sbb
mov
pushf
cmp
jb
data16
xchg
inc
imul
jnp
cltd
ja
pop
or
jns
adc
mov
sarl
jle
cmpsb
cmp
sahf
jp
push
icebp
sbb
outsl
cmp
xchg
sbb
movb
popf
mov
cld
pop
and
and
clc
dec
push
mov
xchg
dec
gs
data16
xchg
jne
fwait
cwtl
xchg
ja
jae
pop
xor
xor
call
shll
lret
xchg
xlat
cmpsl
imul
aaa
jb
jae
sbb
lcall
pop
imul
mov
jg
jae
int3
add
fwait
jecxz
aam
into
out
mov
movb
inc
pop
jl
insl
push
mov
sarl
and
jae
xchg
dec
lods
sbb
jge
jle
inc
mov
push
insb
jmp
jae
jae
mov
xlat
jl
mov
xchg
xchg
mov
cli
jo
jbe
sbb
push
jle
add
jb
fmuls
fimuls
dec
into
fdivr
movsb
cwtl
icebp
xchg
xchg
imul
jo
xchg
js
pop
xchg
jp
sub
and
or
pop
cmp
inc
mov
jb
jp
fmuls
adc
int3
test
mov
cli
xlat
jg
insb
outsb
inc
dec
mov
jbe
je
shll
fistps
insb
daa
jle
cltd
cmc
cmp
inc
mov
jo
je
lea
lods
int3
inc
shrl
jg
mov
punpckhdq
repnz
sbb
xchg
lahf
xchg
fcmovu
and
mov
mov
mov
mov
xchg
loope
arpl
mov
jo
adc
loopne
out
mov
das
jns
in
lahf
je
ja
cwtl
cmp
daa
mov
jp
jg
lcall
or
mov
push
mov
or
pop
shlb
jg
ret
xlat
and
mov
stos
jp
lcall
lea
ror
aaa
fdivrl
popf
sub
insl
jnp
jnp
xchg
xlat
add
inc
push
std
fwait
nop
mov
rcl
ja
cmpb
cmp
iret
jns
stc
cwtl
pushf
neg
pop
or
into
rolb
xlat
sbb
js
imul
mov
int3
fdivl
pop
dec
xchg
add
outsl
jne
mov
xor
mov
fstps
xlat
jl
mov
lcall
test
iret
xchg
imul
fs
dec
and
and
adc
pop
nop
mov
in
xorb
mov
int
mov
mov
lcall
jp
popl
cmp
outsl
xchg
imul
outsl
inc
jl
iret
mov
xchg
subl
jno
xchg
mov
mov
imul
and
jne
ds
sbb
jno
lret
imul
lcall
cmp
jecxz
mov
lcall
call
mov
das
stos
lcall
xchg
movsb
lea
pop
jp
pop
mov
jb
mov
jle
mov
lcall
cwtl
jo
push
jb
dec
pop
jbe
jl
xlat
bound
cmp
lret
fisttpll
ja
cmp
jo
pop
pop
push
lods
fmuls
std
cltd
imul
push
dec
cmp
pop
mov
cltd
fstl
sub
mov
mov
jno
into
lcall
jne
je
inc
popf
mov
add
jnp
icebp
fcoms
jcxz
mov
sahf
int
dec
popf
push
lret
outsb
js
mov
pop
or
cmc
lret
push
imul
xchg
jno
scas
int3
arpl
add
jle
stos
push
popf
in
mov
cmc
shll
dec
and
push
shrl
lcall
mov
push
jg
lea
jae
xlat
jns
arpl
je
inc
dec
add
sbbl
and
jg
jge
adc
inc
outsl
ja
lods
jne
mov
xchg
mov
push
xchg
into
sahf
insb
pop
push
jo
adc
or
cmpsl
test
add
sub
sahf
aam
jl
pop
js
nop
lods
iret
xchg
jge
mov
and
das
aam
mov
jp
mov
gs
nop
pop
ret
sbb
aad
jae
clc
jg
aad
ja
dec
mov
mov
fwait
cmp
mov
jnp
mov
inc
jl
arpl
outsl
popa
mov
mov
not
roll
aaa
jge
jle
loope
xchg
xor
cld
push
fwait
mov
pushf
mov
imul
hlt
dec
xlat
mov
xchg
bound
in
jb
adc
xchg
repnz
popf
jae
aad
lret
lods
lret
test
mov
outsl
iret
jl
cltd
xchg
jb
xor
add
iret
mov
jno
rorb
lret
push
inc
mov
lcall
fwait
rcl
xchg
xlat
jae
xchg
jbe
imul
jns
cwtl
mov
mov
xchg
xor
sbb
jne
push
mov
jl
sub
imul
cmp
lea
xchg
int3
mov
ja
sbb
test
cmp
popa
arpl
popf
jo
popl
mov
mov
jl
cwtl
js
insb
jecxz
add
cmp
lcall
sbb
into
outsb
repnz
cmpsl
jne
mov
lea
push
push
adc
aad
fnstsw
jg
jae
pushf
test
int3
cmp
lahf
outsl
cli
pop
jo
sets
adc
lcall
stos
xor
stos
cmp
push
mov
adcb
jecxz
inc
and
outsl
nop
sbb
xchg
jge
mov
cmp
mov
mov
dec
insb
jmp
pop
insl
add
pushf
sbb
cwtl
or
mov
sbbb
insl
cld
and
lea
xchg
hlt
dec
arpl
dec
mov
test
mov
jno
jno
in
mov
test
push
mov
repnz
mov
xlat
adcl
iret
outsb
call
fstpt
mov
lcall
stc
jnp
arpl
sub
mov
insb
pop
dec
aaa
lea
int
out
mov
movl
imul
pop
mov
aad
inc
mov
jns
jl
sahf
xchg
xchg
jo
jnp
aaa
test
jg
push
int
fdiv
fsts
mov
sahf
lcall
js
pop
aam
loopne
xchg
mov
aaa
xchg
stc
insl
cltd
and
inc
xor
and
xchg
xchg
shlb
dec
rcr
stos
icebp
xchg
inc
cmc
xor
xor
jp
aas
pop
inc
int3
imul
xchg
std
sti
xchg
pop
mov
jg
dec
psubusb
inc
ret
stos
lret
jge
xchg
das
sbb
mov
enter
pop
shl
nop
fnstenv
ss
push
xchg
xchg
jno
lret
sti
mov
sahf
add
and
lds
lods
arpl
movsl
mov
pop
fmuls
pop
ds
iret
cmp
sahf
pusha
test
out
mov
mov
iret
jns
lret
sbb
push
push
cmp
mov
jnp
outsl
jp
lcall
adc
add
xchg
cltd
sub
mov
jle
loopne
xchg
inc
popf
enter
fadds
lret
jg
popf
fnsave
mov
jae
test
xchg
mov
adcb
xchg
sahf
pop
xor
inc
xchg
sti
dec
ret
jmp
jp
cli
inc
mov
xchg
lods
popl
mov
cmpsl
and
mov
jnp
cs
cltd
mov
fisubrl
pop
xchg
dec
xor
lret
js
outsb
pushf
orb
jae
in
shlb
out
mov
popa
add
call
adc
xchg
jge
ret
push
lods
dec
test
je
cld
data16
mov
lret
inc
mov
jl
ja
inc
sahf
dec
push
pop
in
mov
test
mov
jmp
and
sbb
adc
push
int
mov
xor
cmpb
int3
push
xchg
aaa
lea
flds
imul
fmuls
cltd
into
cmp
jg
inc
cmpsl
mov
cmp
out
sub
pop
jp
inc
xchg
ds
add
xlat
fdivrs
adc
push
cwtl
imul
pushf
mov
inc
jbe
jp
mov
cmp
cli
arpl
js
jnp
mov
outsb
jno
mov
jl
enter
arpl
outsb
ret
iret
into
das
cmp
leave
jbe
lods
inc
lods
loopne
sbb
push
imul
sub
jno
leave
inc
daa
in
jns
inc
jno
xlat
and
jg
popa
ret
lret
jecxz
xchg
jne
decl
scas
jg
arpl
mov
sub
xor
lret
loopne
xchg
jp
shlb
inc
xchg
dec
jae
outsb
adc
inc
jl
movsl
int3
stc
jno
xorb
pushf
hlt
pop
insb
mov
cmp
xchg
iret
rcr
sbb
jecxz
pop
jno
jbe
mov
lahf
mov
lret
rolb
leave
and
mov
mov
jl
jb
lret
lret
mov
jge
mov
push
jne
icebp
test
jg
xorb
add
jno
movsb
cmp
pushf
xchg
jg
mov
imul
mov
js
jl
or
push
fwait
imul
jae
dec
shlb
xchg
adc
nop
adc
mov
pushf
cli
ljmp
xchg
test
adcl
xchg
punpckhdq
cmpl
mov
mov
mov
jae
bound
xchg
cwtl
test
lret
repz
iret
mov
imul
inc
xchg
enter
js
in
aam
in
imul
addr16
insl
fwait
into
push
pusha
mov
jns
cmpsl
lret
xchg
imul
daa
mov
aas
lret
iret
mov
test
lret
lcall
je
lret
aam
shll
mov
sub
add
push
cmp
mov
rcrb
lods
mov
jb
mov
movsl
mov
sbbl
mov
xchg
xlat
pushf
stc
subb
adc
adc
mov
andb
jnp
inc
add
loope
outsl
add
jns
mov
mov
mov
cli
jns
cmpsl
cmp
cmp
fwait
sti
arpl
pop
sbb
sub
aam
ja
out
ja
dec
out
mov
jge
adc
xchg
in
inc
xchg
or
ds
jl
je
test
movsbl
lahf
add
xchg
jbe
mov
push
loope
jnp
cmp
jg
jp
fistpll
into
fisttpl
popf
aas
mov
or
outsl
jns
js
imul
sahf
mov
sahf
lret
sub
sti
sbb
test
jg
das
xchg
pop
test
mov
js
mov
lds
out
insl
mov
jae
mov
das
int
jl
lret
stos
jge
mov
cld
add
cmp
daa
inc
pushf
int
fcoms
cld
cmpsl
jg
push
sbb
rdmsr
fistps
mov
das
inc
lods
xchg
xchg
mov
sarb
or
out
popf
test
jno
mov
inc
clc
nop
lea
inc
insl
es
mov
adc
xchg
aam
aaa
je
movq
xlat
xor
outsl
outsb
roll
and
stc
ja
cltd
sbb
fwait
sub
into
inc
cmp
lock
pop
daa
mov
mov
outsb
or
mov
insl
js
vxorpd
xchg
adcb
xlat
sahf
outsb
jo
jecxz
inc
xor
xchg
mov
inc
inc
enter
lcall
addr16
dec
mov
or
jge
xor
inc
into
sbb
inc
xor
lret
mov
cltd
ja
jp
incb
xchg
inc
out
jb
iret
jne
jae
jle
movq
jp
je
dec
cmp
insb
movsl
gs
inc
inc
push
xchg
xchg
leave
lcall
mov
xor
jg
sti
imul
outsl
call
add
inc
lret
jp
clc
mov
or
pop
sbb
sbb
lcall
rorb
test
mov
cmpb
mov
lret
xor
js
mov
setl
jb
mov
jg
mov
inc
mov
enter
int
sahf
repz
jbe
outsl
xchg
out
lock
sbb
ficoml
cwtl
les
shrb
bnd
jg
mov
lcall
cmp
sub
js
jae
jg
outsl
cld
icebp
jnp
mov
jo
fistpl
in
lahf
testl
nop
inc
pop
xchg
outsl
int
jae
mov
loop
arpl
clc
mov
fwait
ja
pop
or
mov
mov
iret
pop
cmpb
int
adc
xor
mov
mov
or
adc
mov
leave
imul
jno
nop
jae
imul
scas
ja
mov
mov
pushf
cmp
lahf
mov
mov
pop
xchg
xlat
orl
pop
mov
out
movsl
fwait
mov
cltd
ja
cs
shlb
mov
int
or
inc
jp
mov
fcoms
je
and
lahf
xchg
cmp
lea
adc
insl
aad
in
push
xchg
mov
xchg
outsl
and
mov
jno
mov
jge
xor
mov
inc
icebp
cwtl
fisubrs
mov
bnd
mov
in
xchg
gs
mov
addl
jnp
sbb
inc
sbb
mov
dec
cltd
je
daa
mov
lods
push
rol
rcll
and
imul
dec
leave
xchg
jl
outsl
arpl
push
xchg
es
jbe
mov
mov
and
sar
xchg
lret
aam
into
push
mov
jl
cmp
cltd
pop
xchg
mov
push
xor
loopne
mov
rclb
je
inc
push
sbb
pushf
adc
lcall
rclb
mov
jge
into
mov
push
fisubrl
nop
xlat
lcall
fisttpll
cmp
push
mov
leave
push
xchg
not
mov
jns
outsl
lahf
push
xchg
mov
out
add
push
outsl
dec
int
xor
test
mov
pushf
or
cmp
jbe
add
loop
in
mov
in
xchg
stc
stos
jns
mov
in
and
sti
cmp
mov
inc
pushf
jge
mov
aad
inc
ret
lea
test
sbb
mov
bound
mov
add
xchg
mov
iret
jmp
xchg
cwtl
lods
aam
outsb
mov
or
mov
outsb
xchg
xchg
cmp
mov
jge
mov
mov
lret
mov
stc
xlat
shr
repz
out
jmp
loop
inc
add
jge
popf
fstl
mov
add
mov
leave
inc
sbb
cmpsl
clc
cltd
shlb
fmul
and
jle
mov
test
std
js
push
adc
aam
leave
mov
mov
aaa
ja
xchg
lods
nop
daa
insl
aam
orl
lret
je
mov
dec
jae
cmp
sahf
jg
flds
dec
jp
lea
pushf
jb
mov
lcall
mov
addr16
popf
cltd
inc
leave
int3
inc
lods
push
mov
fnsave
mov
gs
iret
jg
xor
jbe
inc
subb
pushf
nop
mov
int
scas
xchg
xlat
aaa
push
cmp
dec
jg
dec
mov
xchg
imul
lods
mov
je
mov
mov
push
into
cmpsl
mov
shll
shrb
xchg
outsb
fcomps
sub
hlt
jns
xor
mov
outsl
push
je
push
mov
aam
adc
or
sbb
xor
imul
jns
cmp
sbb
fs
int3
xchg
outsl
leave
pop
lea
jecxz
inc
jo
sbb
push
mov
daa
into
imul
popf
test
nop
cmpb
sti
sub
xchg
jno
mov
adc
outsl
arpl
mov
rol
leave
adc
jbe,pt
ds
push
mov
or
insb
adc
fmull
and
ret
pop
aad
mov
outsl
sbb
pushf
sbb
sbb
xlat
inc
xchg
fldl
shrb
shrb
inc
gs
mov
xor
cld
jmp
jp
cmp
xor
scas
inc
pop
pop
cmpsl
ss
xor
insb
xlat
mov
imul
fists
jns
jno
sub
insl
xchg
data16
pop
sub
mov
lret
stc
pop
xor
mov
setae
jge
xorb
in
jo
jle
lcall
nop
outsl
fwait
lahf
mov
aam
mov
xchg
mov
iret
lods
xchg
push
push
pop
jg
mov
inc
adc
arpl
sbb
sbb
and
daa
mov
in
pop
jae
mov
insb
int
dec
jns
jnp
stc
xor
out
insl
leave
jb
dec
repnz
mov
jne
ja
arpl
jb
insb
cmp
mov
adcb
sti
repnz
test
iret
leave
andb
inc
lods
jl
push
or
jp
mov
jbe
sbb
cmpsl
int3
jns
ret
movsb
lret
and
mov
jmp
jbe
lcall
sbb
sahf
xlat
sbb
xchg
je
fwait
subb
xor
outsl
mov
aaa
cmpsl
or
mov
cwtl
xor
jl
je
push
or
cltd
jecxz
lock
mov
mov
lret
dec
push
mov
xor
push
mov
dec
cltd
movsl
mov
shll
cltd
cmp
lcall
pop
std
jl
inc
jne
push
cmp
daa
insb
insl
and
arpl
sahf
out
inc
je
mov
sahf
sub
mov
add
jno
adc
fdivrp
inc
mov
mov
enter
pop
xlat
shrl
ja
repnz
jp
rorl
cld
fwait
insb
sub
clc
cwtl
xchg
push
mov
int
mov
in
lahf
pop
arpl
aam
ja
cmp
xchg
pop
sbb
lods
mov
leave
inc
lcall
jb
sbbl
jne
dec
ja
xor
pop
outsb
mov
outsl
and
shl
push
imul
mov
xor
movsl
and
fildll
dec
xchg
mov
pop
sub
ret
xchg
in
or
out
xor
outsb
cmp
js
subl
jne
data16
lahf
ja
popl
jp
je
into
lcall
jb
push
xchg
jae
mov
push
stos
rep
mov
ljmp
push
cmpsl
movsl
jl
jae
outsl
fwait
push
es
cli
loope
mov
and
mov
call
sbb
mov
jb
jno
jnp
outsl
xchg
inc
das
xor
xchg
mov
jb
xchg
js
jecxz
xchg
movntq
out
into
loop
mov
add
outsl
xchg
add
add
mov
jo
loope
rorl
notl
outsb
dec
fwait
push
iret
push
xchg
test
xor
ljmp
push
popw
xchg
push
mov
pop
js
lret
xchg
xchg
pop
insl
or
fldl
sarb
emms
push
adc
fnstsw
loop
dec
nop
aad
insl
mov
mov
xchg
andb
fwait
or
out
lcall
sahf
repnz
cmpsl
mov
test
iret
xchg
aam
sbb
push
outsb
lret
xlat
fwait
ret
jp
lret
sbb
test
jmp
ja
psubusb
xchg
js
pusha
outsl
jns
lcall
inc
inc
cmc
sbb
dec
adc
addb
pushf
cmp
jbe
ret
mov
lret
xor
ret
lds
outsl
jl
jne
sub
in
xchg
das
aas
lods
jle
xchg
ret
sbb
ljmp
cmovne
lret
mov
push
mov
js
mov
and
mov
nop
mov
inc
mov
imul
jnp
inc
jns
lods
inc
mov
les
test
lds
call
push
lret
cmp
je
inc
push
mov
out
xchg
jge
mov
inc
dec
mov
xchg
ds
je
or
cld
xlat
ja
inc
outsl
imul
xchg
inc
outsl
imul
out
lret
insb
iret
inc
jo
xchg
inc
js
jne
cltd
xchg
xor
loopne
lret
mov
push
scas
mov
and
push
nop
lret
jmp
push
fisttpl
jmp
xchg
pop
pop
iret
lea
into
int3
mov
incb
cmpsl
ja
xchg
insl
das
mov
mov
mov
mov
jo
mov
js
xchg
mov
mov
xor
mov
insb
subl
cmp
je
mov
imul
rclb
imul
fwait
jne
inc
rcrl
lea
push
cmp
pop
xchg
rorl
mov
gs
stc
lret
insb
leave
hlt
lea
rsm
pushf
mov
lret
jae
cltd
jle
into
pop
pop
imul
jns
int3
jo
jl
mov
aad
xor
adc
iret
cwtl
push
and
in
inc
rcrl
int
subb
jg
xlat
mov
outsb
inc
jne
lret
lahf
mov
inc
outsl
aam
outsl
dec
test
js
fisubl
movsl
mov
pop
int
arpl
jmp
push
xlat
xchg
and
int3
mov
ljmp
inc
jae
fcmovnb
je
imul
xchg
rol
jne
ja
xlat
xchg
push
adcb
cli
xor
imul
sahf
cltd
lret
data16
dec
jl
and
mov
outsl
cmpsl
push
inc
cltd
ret
lret
adc
inc
imul
in
sahf
inc
rorb
jb
aaa
ljmp
mov
jp
sbb
mov
adc
outsl
dec
mov
pop
mov
je
push
jne
icebp
lret
outsb
cmpsl
fmuls
punpcklwd
nop
xorb
lock
push
stos
jmp
lods
xchg
loope
xchg
fdivrs
aas
jg
out
shlb
mov
mov
ja
mov
int3
xchg
push
ret
pushl
cmpsl
xchg
jnp
orb
push
mov
add
mov
xchg
sbbl
jl
dec
mov
das
dec
or
int
lds
jb
xchg
aad
fdivr
jno
mov
xlat
sbbb
das
scas
push
xchg
stos
nop
or
decl
jg
mov
cmp
lcall
jl
adc
mov
and
push
xchg
inc
fidivrs
fwait
adc
rcll
sbb
into
outsb
js
lcall
jae
mull
lahf
pop
test
inc
fcmovnbe
or
or
loope
loopne
adc
aas
mov
or
cld
addr16
js
push
xchg
iret
aaa
lods
insb
mov
mov
cwtl
add
les
mov
daa
mov
je
inc
mov
xchg
jnp
fwait
inc
pop
jae
jns
mov
das
int3
mov
leave
pushfw
daa
repnz
jns
arpl
fbld
fwait
das
in
lcall
xchg
testl
xchg
sahf
mov
into
cmpsl
ss
addr16
mov
mov
jl
jg
xor
stos
xor
xor
fst
jns
mov
adc
sub
fsubrs
rcll
lahf
lods
xchg
mov
and
jbe
fmulp
jns
xor
mov
in
jge
jl
insl
cltd
nop
pop
cwtl
imul
mov
jo
stos
jbe
sbb
mov
stc
aad
stos
test
dec
fwait
into
xchg
adc
cmp
xor
inc
mov
inc
out
xchg
mov
jmp
cwtl
lret
mov
popf
shlb
sarb
jo
in
shlb
pop
xlat
ret
sahf
mov
mov
mov
je
loope
sbbb
push
ficompl
sbb
aaa
mov
xor
shlb
add
stos
adcb
lret
xchg
mov
pop
pop
stc
and
insl
inc
xor
int
ja
ss
ret
cmpsl
arpl
mov
gs
mov
mov
pop
xchg
lahf
push
cmp
mov
mov
mov
nop
lea
adc
outsl
xchg
sbb
mov
cwtl
jg
sbbb
and
arpl
push
ja
mov
shl
dec
sub
cmp
repnz
lret
mov
pushf
and
xchg
dec
cmp
mov
popa
int
ret
add
ja
xor
ror
jns
add
mov
lds
cmp
test
mov
mov
ja
popf
repnz
jns
aaa
sahf
mov
jle
jo
imul
insl
jg
jb
push
js
or
sahf
lea
in
insb
test
shlb
xchg
das
addr16
jae
das
mov
sbb
stos
adc
jg
mov
inc
adc
or
lds
jae
push
loopne
imul
jle
pushf
cmp
mov
out
add
shr
mov
in
arpl
sub
jns
insl
fcmovnbe
push
mov
xchg
mov
xchg
jbe
jecxz
insb
outsl
add
jns
jb
pushf
int3
adc
push
cld
push
aaa
outsl
jnp
inc
mov
pop
pop
lret
push
or
jp
xchg
jmp
mov
mov
mov
outsb
dec
aaa
fbld
pop
pop
push
out
ja
nop
lea
jl
out
jae
jle
imul
mov
repz
insb
xlat
pop
jge
inc
shlb
out
lret
inc
jg
jae
push
shll
lret
inc
pop
and
test
sbb
aaa
jg
test
out
jl
aam
jg
xchg
xor
call
add
fwait
test
orb
jo
iret
and
xchg
outsb
jne
adc
mov
jae
inc
mov
cltd
mov
jno
jge
mov
jb
inc
fnsave
fsubrs
cltd
push
lea
push
lcall
mov
cmpsl
xor
jg
push
js
xor
fsubs
sbb
adc
mov
je
adc
mov
cmp
jne
pop
das
aad
push
daa
mov
mov
ficoms
mov
jg
mov
lea
push
out
aaa
xchg
and
frstor
iret
movsl
lods
insb
push
jge
jl
adc
xchg
xchg
lret
orb
outsb
adc
push
jecxz
cltd
mov
jno
inc
int
enter
mov
scas
jmp
cmp
fwait
mov
test
repz
xchg
mov
xchg
cwtl
and
js
cld
aaa
jbe
sti
xchg
out
add
outsl
iret
out
xchg
lret
outsl
cwtl
xor
test
xchg
push
xchg
ja
cwtl
lret
jns
stos
aam
xchg
iret
je
push
inc
xlat
je
inc
fwait
add
sahf
pushf
inc
std
push
cltd
lea
mov
xchg
jne
test
push
fwait
jne
mov
mov
adc
imul
mov
popf
fdivr
mov
push
lcall
into
jno
jb
push
jbe
mov
outsl
mov
mov
cwtl
addb
inc
lcall
mov
pop
xchg
lahf
int
push
ja
push
xor
jo
xor
adc
imul
lahf
or
jae
into
inc
lret
or
jo
xor
jge
ja
jbe
ret
mov
mov
orb
fsub
lea
jbe
cmp
cwtl
or
out
fwait
jbe
inc
lods
popf
lods
push
mov
jae
dec
cmp
jbe
notl
addr16
int
mov
das
lret
add
arpl
subb
mov
xor
fbld
jnp
pushf
mov
repz
outsb
sbb
out
mov
leave
mov
aam
xchg
into
imul
lret
inc
mov
jae
xchg
xchg
int3
xchg
jp
lea
mov
mov
lret
dec
add
mov
cwtl
imul
jae
sbb
stc
mov
in
jecxz
int
in
xchg
lods
xchg
mov
add
mov
jo
dec
cmp
nop
outsl
arpl
cld
mov
cld
cmp
popf
lcall
aam
leave
mov
cli
xor
inc
mov
mov
sahf
lods
std
insl
leave
adc
ret
push
jge
mov
jl
mov
mov
fs
sbb
out
arpl
jb
sarl
fdivs
dec
test
shlb
pushf
push
mov
testw
jne
sahf
jne
outsl
sbb
loope
mov
call
mov
xchg
jge
lods
outsl
lea
add
or
inc
inc
adc
fisubrl
loope
cmp
xchg
jge
imul
popa
jne
outsl
jp
jl
fcom
adc
loopne
jg
mov
jne
xchg
ja
popa
xchg
insl
fistl
mov
add
lahf
xor
iret
je
leave
jp
adc
inc
or
outsl
sbb
stos
loope
fcmovne
xlat
mov
into
dec
mov
cmpb
xchg
lahf
mov
jg
add
and
daa
rcrl
mov
pop
das
xchg
and
mov
add
fwait
push
sbb
je
outsb
aaa
adc
popf
jg
pop
rorb
xchg
lret
in
sbb
add
mov
iret
cltd
xchg
stc
jb
or
jge
imul
js
sub
jb
xchg
jp
lcall
mov
outsb
call
jnp
mov
imul
lea
jae
xchg
cmp
jae
pop
ja
push
jle
adc
jns
and
call
jp
sbb
popf
xor
sub
or
cmp
addr16
outsl
jp
xor
jp
jno
stc
lret
inc
lret
mov
sbbb
icebp
fimuls
outsl
dec
inc
insl
pop
xor
jb
push
mov
lahf
mov
data16
cmpsl
rcl
mov
mov
mov
mov
leave
xorb
xlat
jns
xchg
jb
jle
lret
mov
xor
test
aaa
push
adc
mov
cmp
or
sar
orl
out
inc
fwait
ret
ss
xchg
ret
sahf
ja
imul
pop
mov
or
sbb
cs
test
inc
pop
xchg
cmpsl
dec
xchg
mov
mov
js
popf
jb
lock
das
dec
push
xchg
mov
iret
jno
nop
lahf
cwtl
bndstx
in
lcall
jns
enter
cmp
xchg
sbb
dec
lcall
sarb
adc
inc
stos
lret
xchg
mov
ja
gs
enter
or
push
js
lea
push
sub
nop
inc
aaa
jae
int
hlt
jae
lea
or
dec
mov
jb
push
sbbb
das
in
lcall
in
jns
cwtl
sahf
adcb
cmp
xor
adc
pop
pop
js
dec
cltd
ja
adc
out
xchg
popl
das
jle
push
fisttpl
test
push
xor
jo
out
hlt
cltd
jne
in
andl
cltd
adc
ja
lods
jne
jle
mov
pop
imull
lcall
mov
mov
mov
adcl
shr
test
adc
pop
pushf
xchg
orb
cltd
mov
xlat
inc
lcall
mov
pop
mov
mov
imul
adcb
dec
nop
xor
sarl
jne
leave
xchg
fcoms
lret
cmp
push
js
jg
sbb
ret
xchg
pop
and
aam
gs
mov
rcr
daa
mov
xchg
jb
xchg
lret
ret
jo
jg
fimull
jno
leave
out
loop
xor
jne
jae
push
cld
xlat
push
inc
dec
push
inc
jnp
cwtl
popf
sbb
fadd
jae
aad
fwait
mov
into
fadds
jnp
mov
mov
sbb
lcall
lcall
fwait
lahf
addb
mov
add
cmp
mov
sub
add
repz
icebp
call
int
xchg
das
mov
jbe
lock
ds
imul
std
jns
jle
dec
push
shrl
je
xor
push
mov
jne
inc
lea
ja
mov
aam
in
jae
dec
ja
std
fnsave
test
cli
jg
lods
outsl
xchg
xor
in
adcb
xchg
ret
pop
nop
stc
xchg
mov
call
xchg
mov
fcomps
mov
xor
push
ficompl
mov
xchg
mov
call
imul
and
jp
jo
mov
insb
mov
movsb
inc
lods
imul
outsl
xchg
leave
aas
lret
xlat
xchg
aaa
pop
addr16
mov
xchg
iret
int3
das
outsl
mov
aaa
push
call
aas
into
mov
nop
ret
jmp
mov
sub
cwtl
pop
lcall
insb
xchg
mov
insl
imul
outsl
bnd
outsb
aaa
inc
inc
jbe
pop
sbb
cmpsl
aam
int3
adc
sti
int
iret
nop
cmp
mov
loope
jmp
shrb
das
inc
fsubrs
cmpsl
fidivs
shl
ret
lahf
xchg
jmp
mov
mov
sbbl
mov
mov
mov
mov
xchg
lock
mov
sti
jg
adc
inc
sub
fdivrs
jns
dec
xor
popf
int3
mov
sahf
arpl
mov
jns
mov
xchg
mov
mov
mov
jl
cli
jg
std
and
test
outsl
xchg
mov
mov
jne
sarb
jb
mov
adc
es
inc
mov
out
jb
out
cmpsl
mov
push
xor
testb
pop
lret
outsl
mov
ja
shrb
push
inc
aam
mov
int3
fwait
xor
sub
fwait
insb
mov
push
xchg
jg
pop
jb
mov
jo
sub
pop
aad
inc
sbb
int3
jae
ja
mov
int
push
jnp
jb
pop
lds
xchg
test
mov
ret
fiaddl
sahf
jb
mov
leave
cmp
pop
sub
fisttps
mov
js
mov
inc
xchg
xchg
jo
inc
mov
addb
mov
jnp
add
js
add
jbe
xchg
mov
xchg
jp
mov
sbb
enter
mov
lret
into
imul
stc
lods
mov
xchg
xor
xor
xor
pusha
xchg
cmp
pushf
andb
fmulp
je
int3
pop
fcompl
xchg
lret
lea
out
mov
sahf
lret
pop
mov
dec
test
shlb
xor
mov
mov
lret
mov
jge
dec
mov
jne
push
or
or
ja
sbb
add
mov
js
jne
fwait
jmp
fmulp
das
or
push
jg
jae
mov
mov
jge
call
dec
aam
pop
dec
insb
outsb
xorb
aaa
aaa
das
mov
addb
cmpb
xchg
xchg
jnp
mov
xchg
data16
mov
mov
inc
adc
jne
ljmp
or
lahf
xlat
mov
loopne
fwait
aaa
fisttpl
mov
sbb
lds
aaa
push
je
repnz
pushf
popf
cmp
xchg
add
jbe
lods
cmpb
fcomps
inc
inc
mov
cltd
not
int
mov
jge
std
inc
jge
lcall
xchg
add
xchg
fmul
or
xchg
cli
sahf
xchg
jle
daa
or
fisttpl
push
jg
fistps
lcall
mov
push
cmp
xchg
pushf
sahf
push
movlps
iret
adc
popa
aad
xor
cmp
cli
ficomps
outsl
mov
nop
cmp
fsubrs
mov
mov
sahf
mov
mov
daa
imul
xlat
cld
iret
mov
stos
addl
cmp
cli
mov
jb
xchg
add
jno
add
pushf
cli
mov
dec
xchg
jp
ret
aam
jle
mov
mov
mov
jae
mov
fidivs
mov
into
or
jno
adc
mov
lret
jbe
data16
lahf
sti
lret
adc
mov
int
aam
inc
ret
pusha
dec
scas
fdivrs
cwtl
pushf
push
les
and
push
cmc
stc
pop
xchg
jns
cli
icebp
je
xchg
out
jmp
jno
jo
jne
jbe
mov
lret
orb
out
jno
mov
sbb
or
arpl
rolb
pop
xor
mov
mov
sub
mov
xchg
ret
jne
jmp
fistps
cs
lcall
mov
int3
mov
js
mov
jl
mov
xchg
cmp
jnp
lds
aad
lcall
daa
imul
jns
mov
jl
jg
icebp
mov
or
movsb
iret
mov
leave
xchg
xchg
test
int3
lcall
ficoms
cmp
mov
pushf
pushf
xchg
or
jnp
lcall
hlt
arpl
xchg
imul
jnp
aaa
mov
fwait
jb
scas
pop
jmp
fistpll
mov
mov
add
insl
xchg
xchg
jbe
nop
lea
cltd
lret
gs
fs
lret
push
cmp
xchg
fimull
rclb
mov
pop
insl
pop
int3
das
fdivs
cli
mov
rol
pop
adc
cwtl
in
jnp
and
imul
jg
mov
add
loopne
push
xchg
or
das
in
push
lcall
imul
cwtl
mov
pushf
jns
sti
imul
pop
insl
inc
daa
jae
cltd
daa
pop
aad
xchg
or
adc
cmp
mov
jmp
pop
mov
mov
push
outsl
sbb
or
push
jg
pop
mov
xchg
arpl
push
das
sub
sub
ja
jne
push
xor
outsl
jg
lret
shrl
sarl
daa
jno
mov
cwtl
outsb
pop
inc
push
sbb
imul
in
inc
sahf
popf
int3
aam
aad
jg
cmp
jb
jbe
dec
cmp
insl
mov
fwait
xchg
xchg
adc
scas
and
loope
inc
mov
pop
notl
repz
call
outsl
cli
iret
jg
mov
ja
push
jae
arpl
xchg
stc
jl
outsl
inc
jns
sub
adc
push
mov
inc
cli
pop
mov
sub
jnp
adcb
in
shlb
and
fincstp
mov
int3
arpl
jno
out
jge
negl
push
push
fisubrl
rcr
test
xchg
lahf
cmp
dec
add
out
push
cli
lds
arpl
in
inc
jl
xchg
mov
push
cmp
enter
jp
iret
in
push
mov
imul
xchg
pushf
lret
ja
adc
xor
adc
push
dec
lret
rclb
ja
jb
clc
or
addb
xchg
jns
mov
jp
cltd
enter
cltd
and
sub
fnsave
scas
ja
pushl
lcall
pusha
lea
imul
mov
push
pushf
test
mov
in
adc
cltd
ds
jb
in
mov
jae
mov
push
xor
lods
adc
cmp
inc
leave
cwtl
pusha
or
xchg
push
xor
xor
jns
xchg
xchg
outsb
pop
xchg
js
inc
mov
sti
out
mov
fistpll
push
fdivrs
sub
nop
mov
cmpsl
mov
sarb
sahf
or
mov
or
push
fdivs
cmp
shll
ret
add
xchg
fiadds
jnp
adc
or
fnsave
push
leave
insb
pushf
rcll
popf
je
cmp
imul
outsb
fwait
cli
in
cltd
jno
lods
jle
lods
call
push
test
inc
xchg
or
cmp
mov
mov
jg
mov
into
out
imul
pop
sahf
addl
mov
add
andb
mov
xlat
mov
lret
pop
ljmp
jge
outsb
call
outsb
jnp
add
leave
sahf
push
ja
lods
inc
jle
mov
inc
push
test
leave
ror
imul
aam
js
nop
lods
lcall
pop
repz
xchg
mov
outsl
insb
jnp
mov
aaa
dec
push
in
ja
cld
xchg
mov
xchg
mov
popf
nop
pop
cmp
mov
rcl
jmp
push
or
paddb
or
pop
repnz
lahf
jmp
insl
jb
sbb
mov
xchg
jae
or
cltd
outsb
int3
das
cli
push
stos
mov
stc
inc
mov
jmp
daa
sub
mov
test
mov
mov
push
mov
outsl
repz
jno
jnp
fildl
nop
jb
cwtl
and
adc
jne
sbb
push
js
pop
cmpsl
push
aaa
popf
sahf
xchg
leave
xchg
lods
fcomps
int3
lods
imul
mov
cmpsl
fldcw
mov
xchg
je
inc
pop
lcall
jne
popl
sarl
push
int3
jo
enter
mov
push
xchg
xchg
imul
iret
push
nop
stos
push
pushf
aad
sub
jns
xchg
inc
xor
mov
sbb
and
arpl
push
xor
inc
insl
mov
je
mov
mov
in
pop
cmp
xchg
sbb
cltd
and
adc
xchg
nop
imul
je
xlat
xchg
repz
fwait
icebp
leave
jae
sub
fbstp
das
inc
ss
mov
jge
pop
jl
inc
jne
js
mov
xchg
shrb
xchg
push
mov
xlat
push
cltd
lcall
nop
jae
jecxz
rep
jg
iret
mov
rcrb
jae
jg
pusha
inc
scas
int
mov
lret
aas
fildl
imul
leave
mov
sbb
xchg
lods
pusha
loope
adc
mov
push
cmp
cwtl
cmp
jne
xchg
mov
test
jo
jl
insl
mov
push
mov
xchg
cltd
adc
mov
mov
das
inc
push
cmp
cmpsl
subl
jge
cmpsb
leave
jnp
lret
inc
jg
dec
fnstsw
mov
xchg
cmp
sbbb
xchg
cmp
and
or
ja
xchg
xchg
mov
xchg
pop
mov
mov
imul
arpl
add
imul
leave
mov
lcall
fwait
pop
or
and
shlb
mov
ljmp
jg
cwtl
mov
xlat
jne
cmp
dec
out
cmp
aam
stc
repnz
pushf
xor
mov
dec
fisubl
sahf
es
pop
stc
mov
fcoms
jl
mov
insb
jl
enter
push
fildll
dec
xchg
fildll
sbb
adc
fmull
pop
and
enter
outsb
and
cmp
xchg
adc
mov
xchg
jg
movsb
nop
gs
mov
je
aaa
xchg
mov
xor
dec
jg
loopne
int
adc
aam
cmpsl
cmp
sbbl
jns
cmc
mov
mov
stc
repz
inc
fs
nop
xchg
int3
xor
mov
inc
pop
xor
inc
outsl
leave
out
into
jg
ljmp
aam
mov
lods
iret
call
jle
mov
jns
lcall
cmpsl
dec
xlat
push
fs
fisttpll
pop
outsl
mov
pushf
sub
mov
loop
fwait
mov
outsl
jne
jp
out
xchg
ja
jp,pt
iret
xchg
xchg
xchg
cwtl
nop
mov
in
jnp
jle
insl
pop
push
ja
xlat
mov
fidivl
outsl
jnp
add
lahf
lods
dec
inc
aas
cmpsl
lahf
mov
pop
iret
mov
push
cmp
lret
mov
fsts
mov
nop
lock
jge
andl
xorb
sti
lea
bound
int3
fwait
push
daa
lahf
xchg
and
inc
cwtl
das
dec
pop
scas
out
add
add
or
in
lcall
push
lcall
adcb
jae
xchg
jae
mov
aaa
mov
jb
inc
cmp
ja
push
mov
jecxz
add
xchg
nop
outsl
popf
jae
lret
mov
xor
lret
jle
arpl
pop
lret
xchg
xlat
jae
push
adc
mov
into
jge
xchg
imul
pushf
dec
fcomps
lcall
xchg
adc
mov
push
adc
jne
jg
sub
int3
xchg
jno
dec
fcmovnbe
mov
push
aam
xchg
xchg
nop
mov
insl
mov
ror
mov
stos
mov
sbbb
mov
mov
cmp
inc
sbb
inc
das
mov
pop
sbbb
leave
fcoms
jg
outsb
sbb
sti
sbb
lcall
jo
mov
fwait
jb
lea
outsb
jae
xchg
lock
sub
lods
xchg
nop
mov
aam
imul
cmp
xchg
sbb
xchg
out
mov
pop
out
xchg
lods
jno
jae
shlb
cmp
lods
jge
push
xor
mov
pop
mov
push
js
cltd
add
loopne
out
jg
into
mov
cmp
pop
mov
cmp
insl
mov
adcb
jnp
fidivl
xchg
mov
jg
outsl
jno
lret
outsb
cwtl
cmc
pop
mov
xchg
mov
xchg
lret
jno
jne
and
out
fcoms
jp
xchg
hlt
and
dec
jg
sbb
les
dec
les
jle
inc
mov
jg
cli
mov
xchg
jno
mov
leave
lcall
mov
clc
cmp
jo
pop
xlat
lock
cwtl
jns
fwait
jp
adc
mov
js
stc
push
mov
mov
xchg
jge
mov
adcb
daa
mov
aam
outsl
jg
loope
arpl
push
cmpsb
mov
jge
lods
mov
lret
int
cmp
iret
insb
lea
lea
call
lret
mov
inc
pop
xchg
int
mov
dec
lret
in
jle
fcmovne
mov
inc
jnp
jne
nop
cmp
mov
test
pop
jg
pop
insb
jmp
cld
cmc
pop
xchg
jns
ja
dec
jb
jns
cli
scas
mov
add
xor
mov
sub
lcall
jae
gs
out
xchg
aaa
popf
shlb
lret
sahf
pop
arpl
aam
xor
out
cmp
cwtl
imul
pop
imul
pop
mov
popf
push
pop
cmp
aaa
mov
ja
push
mov
mov
iret
ret
ret
add
outsl
popf
pop
dec
aaa
inc
pop
push
jae
div
cwtl
movsl
mov
outsb
xchg
inc
push
mov
lahf
jo
icebp
inc
xchg
or
jne
cs
js
int
mov
imul
cs
imul
outsb
adc
pop
pushf
mov
xchg
mov
jp
arpl
shll
lea
rcrl
sub
movsl
fistl
fimuls
jp
leave
inc
lret
imul
popl
jle
xchg
pop
out
mov
ja
popf
mov
jnp
into
xlat
fwait
sarb
jge
or
loope
repz
xchg
icebp
daa
pop
lea
insb
lret
outsl
xchg
push
xchg
jle
jne
or
mov
jne
cmovnp
mov
xlat
mov
sub
lret
out
inc
je
cmp
andb
ss
push
ja
adc
mov
bound
cwtl
in
jmp
dec
shll
out
test
fstpt
subb
or
outsb
push
add
cltd
insl
movsl
pop
sbb
dec
pop
dec
out
je
leave
out
cmpb
rolb
push
scas
call
sarl
pop
fwait
lea
lods
adcb
insl
mov
aam
cmp
adc
dec
outsl
jbe
inc
xlat
or
xchg
jns
dec
jae
inc
popf
ret
insb
std
pop
and
rcl
lds
cmp
jo
cld
leave
cmpsl
xchg
imul
lcall
cltd
mov
imul
mov
subb
jo
mov
add
jmp
mov
jns
es
fwait
xchg
cmp
sbb
lods
jp
inc
mov
dec
ds
stc
test
dec
jne
cwtl
cmp
jge
push
out
xchg
fmuls
fwait
pushf
push
cltd
xor
insb
outsb
fst
arpl
outsl
insl
nop
pusha
pop
cld
inc
and
jae
test
imul
adc
cmpl
xchg
xlat
xacquire
inc
mov
pop
leave
xchg
jl
adc
jo
xchg
jnp
jg
pop
xchg
outsb
imul
jmp
ja
cmp
lret
cmp
insl
xorb
cs
mov
jp
xchg
or
jne
std
mov
dec
cmp
inc
cmp
inc
jae
lret
subl
inc
sub
ja
sbb
sete
xchg
adc
cmp
mov
int3
gs
jns
xchg
insl
ds
add
jae
lds
lock
xchg
out
ret
filds
jne
int
leave
ret
rclb
mov
aam
xor
out
into
xchg
inc
lcall
add
fcomps
jbe
mov
loop
sbb
in
dec
setle
xchg
push
mov
xchg
lea
shlb
mov
aam
or
jg
cld
jne
mov
xchg
movsl
sbb
cwtl
out
push
cs
mov
int
bnd
fcmovne
xlat
fcmovne
and
daa
test
fisubs
repz
sub
lret
ja
outsl
js
lds
jg
test
inc
mov
outsl
test
add
out
inc
sub
lea
clc
fstpt
int3
popf
jle
sarl
cld
or
jg
pop
xor
aam
mov
pop
mov
jns
jo
dec
inc
xchg
cltd
test
sub
rcr
jb
jns
jmp
mov
push
mov
das
lds
mov
sbb
xchg
cmpsl
cmp
xorb
mov
lret
pop
lcall
and
inc
pop
xchg
js
sbb
lret
mov
ja
int3
iret
dec
pop
or
mov
cmpsl
xchg
cld
jl
pop
test
lret
testl
in
ret
xchg
fucomi
dec
repz
push
inc
fmul
inc
adcb
in
outsb
xchg
pusha
mov
mov
jno
xchg
sub
rcrl
js
fwait
imul
outsb
daa
sbb
loopne
xchg
xchg
inc
push
lret
outsb
jae
sbb
mov
cmp
xor
cmp
sbb
push
or
xchg
xchg
ja
das
mov
fstpl
mov
jne
xor
ss
sahf
jbe
mov
xchg
pushf
cmp
lds
out
cmp
pop
sbbb
push
mov
outsb
jl
add
outsl
xchg
jne
arpl
addr16
movsb
jbe
sarb
and
fwait
test
inc
cwtl
jnp
rorb
mov
imul
sahf
shlb
inc
xchg
sbb
jae
sbb
lret
mov
xchg
mov
fistpl
aam
xchg
gs
jne
jno
lcall
sti
mov
jae
stos
pop
xchg
lods
sahf
mov
insl
xchg
in
mov
gs
sbb
js,pn
ror
mov
mov
icebp
pop
mov
lret
arpl
popf
jns
popf
lcall
movsl
mov
imul
cmp
lret
xlat
cltd
rol
pop
jbe
sahf
int3
adc
sbb
and
repz
fcmovnu
lods
lahf
jno
mov
outsb
or
push
fwait
jnp
add
dec
jns
push
xchg
jl
jl
test
scas
inc
jmp
outsl
or
loop
aad
cmp
cs
cmp
xchg
xor
xchg
xchg
nop
jnp
lea
ja
xchg
das
jb
fstpl
sti
cmc
push
inc
scas
int3
xlat
lea
push
mov
into
js
fiadds
add
inc
movl
dec
ror
cwtl
lcall
push
loopne
jb
sub
in
or
push
insb
lds
sahf
push
cltd
mov
lret
cmpsl
loopne
push
aam
dec
scas
push
lret
ja
push
mov
jae
mov
loope
dec
cmp
sahf
adc
xchg
jb
pusha
cltd
pop
cltd
out
cmp
iret
inc
inc
mov
dec
gs
test
jnp
adc
xchg
mov
insb
xor
leave
mov
lea
pop
push
into
jns
icebp
bnd
mov
sub
pop
stos
cmp
adc
fnstenv
test
jle
fcoms
lcall
xchg
std
push
insb
mov
fmulp
pop
adc
or
nop
inc
xlat
aad
jge
mov
adc
sub
fsubrs
inc
mov
ja
mov
aam
shrb
pop
jno
jnp
lcall
shlb
test
int
add
xchg
cltd
lret
jne
call
rcll
iret
jae
scas
lods
mov
mov
cmpsl
mov
cmp
leave
mov
js
mov
jns
in
sub
add
mov
inc
jp
xchg
les
lods
jns
jne
mov
mov
fsubrs
fidivrl
loopne
test
xchg
lret
lods
outsb
imul
xchg
inc
inc
jle
lahf
shrb
jns
cmpsb
pop
aad
jo
aam
mov
aaa
sbb
xchg
push
imul
mov
mov
cwtd
mov
insl
rclb
adc
or
sbb
aaa
lods
and
cmp
inc
sbb
arpl
js
call
insb
loope
jne
shl
xor
cmp
nop
popf
int3
mov
in
bswap
inc
js
shl
xchg
outsb
jge
adc
je
jp
add
adc
xchg
into
mov
imul
mov
insb
imul
add
push
call
mov
je
xchg
sbb
lcall
mov
push
lcall
shrl
js
aam
popf
mov
outsl
mov
sbb
fwait
mov
mov
sahf
sub
cltd
fst
lea
mov
pushf
int3
daa
dec
xchg
jo
outsl
lahf
mov
pusha
lret
mov
leave
cmp
xchg
sahf
xchg
cmp
jge
js
mov
mov
mov
xchg
mov
js
sbb
and
mov
cmc
xchg
insb
outsl
out
jp
pushl
xchg
sarl
je
lods
cwtl
outsl
dec
cmpsl
push
lret
ja
jecxz
je
mov
int
and
inc
loopne
outsb
sbb
fstl
imul
das
popa
jae
ds
fwait
call
cmp
outsb
aam
jo
push
les
int3
mov
into
hlt
mov
pop
jle
je
pop
ja
push
arpl
int
ret
dec
fadds
test
repnz
and
aaa
inc
cltd
aaa
ljmp
int3
jg
int3
jecxz
lret
fwait
hlt
mov
cwtl
inc
loop
rcl
mov
xlat
rorb
test
cltd
out
push
push
mov
insb
jo
pop
shlb
dec
xchg
dec
out
jnp
sbb
lods
xchg
mov
sbb
cwtl
setb
std
arpl
fistpl
jae
dec
fistps
cmp
mov
addr16
aam
je
nop
icebp
jbe
repnz
xchg
sahf
xchg
ret
jb
cmp
outsl
imul
jnp
mov
nop
loope,pt
adc
lea
xchg
inc
bound
andb
mov
mov
cwtl
pop
sti
lret
gs
lret
jecxz
popf
pop
out
jl
lea
pushf
jae
clc
jae
call
enter
cmc
cmp
xorb
ja
xchg
or
lcall
lret
jns
jge
jle
clc
movsl
pop
std
outsl
jnp
and
daa
jo
jns
sbb
dec
and
inc
out
push
testl
imul
aas
dec
pusha
mov
rolb
pushf
mov
mov
inc
addr16
jmp
mov
mov
xor
ret
shrl
fdivrs
inc
enter
mov
ja
xchg
jbe
cld
lret
nop
mov
sahf
xchg
iret
insl
xor
fdivl
fwait
cwtl
out
xchg
shlb
int
jbe
xchg
or
lea
xchg
enter
jg
popf
jno
cmp
scas
aad
jno
test
ja
lock
jbe
and
cmpsl
mov
mov
push
iret
lcall
lea
or
rcrb
inc
mov
fwait
insl
in
out
fistps
sbb
lret
bound
lcall
mov
insl
outsb
js
test
xchg
mov
cs
test
jo
leave
imul
rcl
dec
or
std
jg
arpl
lds
into
jge
inc
mov
rorl
imul
xchg
lcall
ja
push
imul
je
jae
lcall
mov
xchg
outsb
cmpsl
push
mov
adc
mov
mov
outsb
lcall
test
call
jge
add
xlat
xchg
mov
pop
test
cmp
fwait
dec
cmp
movsl
xchg
dec
jnp
ja
mov
in
push
lret
fstpt
gs
ds
sarb
mov
xchg
lret
std
adc
sbb
fcomps
lret
test
pushf
test
add
stos
ret
imul
mov
mov
insl
mov
mov
ss
out
sbb
push
rcr
imul
fildll
mov
mov
mov
jge
mov
mov
xchg
insl
out
dec
arpl
mov
lods
mov
mov
ja
mov
lcall
cltd
jbe
xlat
out
js
lret
es
outsb
mov
popf
inc
sbbb
lods
fsub
popl
int3
das
mov
mov
popf
or
mov
lahf
leave
outsb
jnp
ret
xor
inc
lcall
xchg
jne
lahf
lods
lret
test
jb
cmp
mov
fmuls
daa
insb
jne
int
stc
adc
jp
or
insl
xchg
adc
or
dec
imull
lds
mov
lods
js
andb
imul
les
int3
jns,pt
mov
outsl
xorl
mov
fwait
outsl
jmp
in
aaa
decb
jns
out
mov
cwtl
dec
mov
outsb
ja
mov
inc
inc
loopne
lahf
mov
pop
xchg
xchg
jae
imul
les
insb
nop
pop
mov
adc
jmp
mov
mov
mov
imul
push
fisttpll
into
mov
jo
and
xor
mov
sub
movsb
pop
gs
mov
rolb
dec
insl
imul
fidivrs
fwait
lret
repz
pop
mov
xlat
pop
or
cmpsl
push
insb
fnsave
iret
xor
xchg
cmp
jnp
jmp
aad
mov
stos
sarl
xchg
xchg
jo
push
fwait
jmp
nop
mov
fdivs
cltd
cmp
xor
lcall
cld
lods
insl
and
mov
pushf
xor
dec
pusha
sub
test
mov
push
xchg
pop
sub
punpckhwd
rolb
outsl
rcrb
add
cltd
ret
cmp
vmulps
cmp
mov
les
int
lds
mov
fldl
outsl
lahf
xor
imul
imul
aam
enter
into
fucomip
aad
es
test
jp
xchg
int3
or
and
push
out
jle
pop
cmp
shll
nop
mov
xor
cmp
jnp
pop
rdpmc
push
sbb
xlat
mov
imul
lret
jl
int
jl
mov
outsl
lret
popa
lods
js
mov
leave
dec
pop
mov
sbb
xchg
add
int
leave
xchg
pop
roll
mov
jle
push
jb
jnp
xchg
aaa
dec
fstl
adc
mov
leave
int3
pop
adc
bnd
xor
xor
mov
mov
sahf
cmp
xchg
imul
cmp
popf
cwtl
or
sbb
pop
shrb
cmp
lea
arpl
lds
jb
call
pushf
ret
push
sbb
das
and
xor
jg
outsb
movsl
cmp
js
mov
xor
jecxz
lds
cmp
into
jno
je
mov
add
iret
xor
lea
dec
mov
adc
inc
or
pop
inc
subb
test
mov
mov
ja
cltd
jge
cwtl
jnp
xchg
jbe
push
out
in
leave
push
push
fmuls
cmpsl
xor
jle
mov
addb
ds
js
push
imul
lods
xchg
sahf
lcall
xchg
jge
fmuls
jbe
cmp
pop
fmulp
aam
repnz
jg
jno
into
imul
mov
fbstp
lahf
push
ss
pushf
jae
stc
or
sbb
sbb
arpl
imul
push
sbb
cltd
leave
lcall
jp
aam
jae
xchg
ja
inc
lcall
dec
pop
mov
xchg
cwtl
ja
dec
sub
mov
ds
int
mov
jl
es
mov
ret
cmp
insb
mov
int3
insl
outsb
cld
jecxz
push
cmp
jge
addr16
lock
jo
xchg
lods
add
mov
imul
lea
addr16
jno
inc
sahf
jg
les
mov
inc
out
xlat
arpl
mov
cld
lock
xchg
orb
aam
jno
int
mov
xchg
jae
adc
pop
les
lds
mov
test
jp
iret
lcall
jle
insl
add
add
test
test
xchg
enter
cmpsl
add
into
lret
leave
cmpsl
mov
lcall
pop
or
jl
xchg
mov
test
pop
js
iret
adc
jb
jns
mov
into
pushf
xchg
cmpb
dec
popf
xchg
arpl
ss
and
jns
fwait
aam
jns
mov
cmp
dec
inc
sbb
mov
mov
jle
sub
mov
std
sbbb
fwait
inc
js
xchg
mov
mov
loop
popf
imul
inc
int
ret
insb
mov
xchg
pop
xlat
subb
jns
cltd
fsts
lcall
push
and
jnp
mov
xor
xchg
jge
mov
jl
ret
daa
cmpb
nop
fwait
sub
sub
lods
cltd
lods
pop
pop
mov
dec
gs
lock
dec
mov
insb
fdivrl
jno
inc
pop
rcr
je
cltd
fdivrs
cltd
out
enter
xor
ja
in
mov
xchg
sbbl
jno
aam
jae
pop
cwtl
or
mov
jp
imul
inc
icebp
inc
jo
push
aas
sub
jl
out
das
stos
mov
je
loopne
inc
sbb
iret
repz
lret
inc
into
cwtl
lret
sbb
xchg
shl
aam
jecxz
cltd
arpl
jmp
loopne
lret
jns
outsb
fdivl
sbb
adc
jl
shll
xor
mov
lea
jb
in
xchg
pop
add
fwait
sub
jbe
movsl
jb
nop
adc
popf
or
jbe
out
daa
icebp
xor
jp
hlt
lods
arpl
in
aas
xor
lds
jp
cmpb
movsl
mov
bound
andb
sbb
mov
sti
mov
xchg
xchg
xor
dec
mov
std
sbb
addr16
lret
push
test
pushf
cmp
outsl
add
xlat
inc
xor
imul
push
xchg
sbb
jnp
adcl
mov
outsl
jo
mov
outsb
mov
mov
lcall
xlat
xor
cltd
xchg
jbe
jne
jg
into
nop
sahf
cs
add
shrb
and
repnz
jnp
xor
and
cmp
xlat
push
movsl
pushl
aad
icebp
push
int
enter
lahf
mov
fcmovnu
add
outsl
mov
jno
xor
in
mov
cltd
fdivrs
orb
shr
lods
and
sub
mov
add
adc
test
inc
stos
inc
pop
mov
outsl
ja
adc
aam
shlb
enter
push
jns
arpl
xor
jae
xlat
xchg
inc
fmul
outsl
xchg
inc
mov
lret
fwait
jne
pushf
cmpsl
icebp
nop
and
mov
cmp
push
jl
xor
insb
ret
repz
test
mov
ja
arpl
pushf
mov
adc
outsl
sbb
insb
push
lahf
insl
es
cwtl
and
or
test
inc
pop
insl
repnz
mov
lret
pop
sahf
push
and
mull
jecxz
je
jg
xorb
xlat
pushf
adc
pop
or
leave
test
xchg
shrl
icebp
in
lahf
jl
pop
frstor
mov
jmp
arpl
addr16
outsl
and
xchg
mov
mov
jg
xchg
inc
jno
xchg
push
xlat
into
mov
js
or
arpl
inc
aam
mov
mov
out
jl
nop
inc
loope
jnp
cmpsl
pop
fmuls
cltd
mov
sahf
mov
mov
aas
lods
or
xlat
out
cmp
lds
int3
cltd
mov
cmp
jb
fwait
aam
lahf
jle
mov
rorb
out
lcall
movsl
sub
inc
add
xchg
fmull
mov
xchg
xchg
imul
jge
sbb
jp
mov
inc
jns
jl
out
sar
lret
into
into
flds
push
movsb
ja
and
ror
lcall
fwait
lcall
jns
mov
rorb
jb
cmp
mov
cmp
jge
jp
lcall
dec
mov
adc
iret
adc
xor
jo
mov
fwait
dec
inc
mov
ja
loopne
outsl
pop
mov
ja
call
int3
inc
jae
pop
iret
inc
aas
mov
outsb
jns
xchg
lret
insl
lea
fadds
iret
jne
jnp
mov
push
xor
or
nop
fs
jo
ret
repz
xchg
push
es
push
add
sub
fwait
into
dec
mov
cltd
js
pop
pop
jno
mov
int
mov
inc
adcb
stc
push
cmpsl
in
lcall
push
or
pop
cmp
xlat
scas
xchg
pop
xorb
mov
int
cld
push
xor
cs
xchg
push
lcall
lcall
xchg
repz
imul
xchg
lcall
mov
and
pmaddwd
lahf
push
mov
jg
test
mov
mov
mov
and
jg
jns
aam
lds
or
inc
mov
jne
shrl
jae
inc
xchg
cmp
xlat
enter
pushf
mov
dec
pop
arpl
popl
out
jb
xchg
jge
shlb
stos
pushf
add
stos
jp
leave
sbb
popf
ja
xor
xor
ja
ror
mov
decl
fnsave
imul
jb
outsb
sbbb
push
adc
iret
lret
lret
jae
das
notl
repnz
jmp
mov
leave
mov
xchg
pop
jl
mov
mov
mov
test
iret
jno
jae
and
lea
arpl
ja
push
imul
rcll
insb
mov
fmull
popa
int
mov
fs
adc
int
xlat
out
stc
xor
fwait
out
lret
or
out
sti
xchg
xchg
pop
inc
sub
scas
adc
cwtl
mov
sbb
adc
movsl
pop
mov
popf
push
sbb
jno
lahf
jecxz
int3
xlat
les
dec
out
inc
hlt
add
je
icebp
jp
out
mov
jae
xchg
arpl
cmpsl
cmp
jge
aam
adc
jne
sbb
push
mov
and
sub
inc
enter
push
xchg
push
in
daa
stos
mov
fwait
mov
dec
lcall
cmpsl
pop
iret
xlat
lods
subb
jnp
mov
imul
jne
inc
lods
int
jo
lret
cmp
inc
jae
lahf
xchg
mov
call
push
in
call
and
jg
cmpb
adc
pushl
mov
mov
inc
ret
jl
push
mov
inc
xor
cwtl
je
lret
cli
jb
jb
stc
cmp
xor
inc
shr
test
push
inc
push
fcmovnu
out
inc
xchg
shrl
jl
inc
je
pushf
xchg
test
xchg
aad
cltd
sub
jns
dec
jp
inc
std
into
ja
bswap
das
or
cmp
pushf
int
cli
vpshlb
jge
sbb
insl
sub
xlat
cmp
subb
mov
add
mov
cltd
pop
fdivs
jns
jl
sub
out
pop
lea
mov
add
jns
inc
outsl
push
daa
mov
lret
cs
mov
aaa
xchg
jo
in
dec
cmpsl
call
setne
lret
lret
mov
iret
nop
rolb
mov
lahf
xchg
mov
repnz
lods
push
call
int
adc
jns
xchg
lods
mov
mov
or
ljmp
lret
add
mov
xchg
or
mov
and
xchg
nop
cmp
arpl
cltd
dec
lea
mov
outsl
lods
inc
mov
sbb
add
jg
nop
or
enter
dec
adc
xchg
push
mov
mov
adc
mov
sub
inc
pop
xchg
popf
pop
jl
insb
push
aad
sahf
fldcw
arpl
xchg
xchg
inc
int3
jg
insb
jne
mov
sarb
push
pop
out
lahf
mov
xchg
lahf
dec
sahf
ret
outsl
cmpl
iret
mov
mov
fcoms
iret
leave
jno
jp
test
addr16
adcb
sahf
insb
jo
jle
outsl
inc
pop
push
mov
cmp
lahf
xchg
jle
outsb
mov
mov
cmp
push
pushf
add
je
push
mov
outsl
xlat
iret
xchg
jg
xor
jo
ror
lret
pop
rcll
xchg
sbb
or
jb
inc
and
repnz
pop
inc
lahf
cmp
sahf
inc
xor
je
mov
into
pushf
rorb
outsl
or
push
sbb
arpl
pushf
rolb
cwtl
lret
jb
jge
push
add
pop
cmc
xchg
outsb
jp
mov
sbbb
insb
addl
jne
cltd
fs
lods
jno
aam
sub
outsl
xchg
xchg
and
gs
mov
test
int3
loop
xlat
lea
lahf
jno
pop
js
das
les
mov
into
ja
inc
xchg
outsl
jl
lcall
js
addb
jbe
cli
jmp
sub
mov
push
adc
jge
cli
mov
cmp
or
in
repz
hlt
cltd
pop
mov
adc
jge
nop
mov
mov
nop
das
jnp
insb
dec
jnp
and
jge
arpl
pop
insl
aaa
sti
nop
outsb
jl
mov
mov
nop
xor
test
sarl
ljmp
sub
jns
je
cmp
add
and
xchg
cmp
arpl
stc
inc
mov
and
push
fimull
rolb
add
sub
lcall
loope
jb
sub
ja
mov
je
cmp
pushf
sti
fidivrl
cwtl
mov
inc
mov
lret
cmp
lcall
sbb
popf
aam
push
xchg
cmp
loope,pt
daa
jl
int
dec
xlat
addr16
cmpb
mov
inc
lret
int
mov
jns
leave
lcall
aas
mov
int
xor
ja
divl
sbb
cld
jg
idivl
jle
adcb
leave
push
aam
mov
pop
jle
adc
aaa
popa
xchg
iret
jo
aam
rol
pop
je
jno
xchg
les
int
stc
call
mov
add
mov
xor
mov
stos
sbb
aad
imul
gs
jne
push
je
or
test
lock
pop
fldcw
inc
cltd
sarb
sbb
xor
lret
xchg
adc
add
sar
xchg
int3
test
jmp
inc
add
mov
lret
inc
push
xchg
jg
xchg
push
lret
les
pop
xchg
outsb
jbe
xchg
pop
in
cmp
subb
enter
jne
add
into
aaa
and
aaa
sarb
cltd
push
aam
imul
arpl
jne
pavgb
mov
cmp
std
jns
aas
xlat
sub
pop
cli
lret
int
and
push
and
rorl
add
sbb
rol
pusha
push
out
xchg
mov
mov
jno
xchg
adc
xor
mov
movsl
jo
mov
mov
outsb
mov
in
xchg
mov
mov
mov
lahf
and
jae
insl
ja
adc
aaa
sbb
mov
mov
aaa
jb
xor
cmp
sbb
mov
jbe
aad
xchg
inc
std
mov
out
int
mov
js
ss
cmp
jo
arpl
lea
int
cmp
push
ja
or
fwait
jge
lret
clc
stc
insb
mov
xchg
xchg
jnp
fwait
mov
scas
fbstp
fcmovnbe
fwait
outsb
call
sahf
inc
jae
inc
ja
adc
xor
xchg
jge
popf
test
jae
mov
xchg
cwtl
inc
mov
int3
outsl
inc
popa
or
pushf
insl
sbbb
jno
out
adc
ja
rclb
pushf
xlat
filds
out
je
sbb
lock
push
sahf
popa
mov
mov
mov
inc
sub
cmp
cltd
jae
cmp
jg
outsl
popf
mov
jne
outsl
pop
inc
mov
outsl
mov
and
jbe
adc
insb
test
jnp
cmp
xchg
cld
xchg
xor
jae
cmp
lods
int3
je
pop
push
icebp
mov
mov
xchg
jns
jle
pop
dec
mov
jno
insb
subb
xchg
pop
lcall
mov
leave
outsb
jb
mov
subl
je
xor
lcall
out
cli
movsb
outsb
xchg
cwtl
mov
jle
mov
fcomps
push
adc
shll
cltd
mov
outsb
lret
xor
movsl
jle
rorb
imulb
sbb
pop
mov
xor
push
rcll
add
dec
test
iret
xlat
sub
insl
xchg
into
add
sub
outsl
xchg
sti
inc
fcmovne
fwait
test
mov
adc
mov
int
jnp
cmp
cmp
xchg
inc
int
cmp
push
mov
sub
addr16
outsl
adc
xchg
xchg
lcall
lods
lea
lfs
ret
in
mov
sbb
pop
lcall
pop
cmp
and
cltd
adc
xlat
mov
dec
mov
lcall
sub
pop
pushf
pop
lea
jno
lcall
leave
ret
sbb
xchg
jle
inc
aas
je
outsb
dec
xlat
or
frstor
insl
pushf
lcall
aaa
mov
ljmp
jg
cmp
jle
cltd
jp,pt
icebp
inc
mov
jecxz
jnp
shlb
xchg
add
jno
cltd
jmp
and
mov
xchg
sarl
mov
fdivrs
cmc
xchg
mov
adc
and
mov
imul
jae
cwtl
xchg
stos
lret
mov
xchg
jns
jge
adc
scas
test
bswap
jo
outsl
mov
jp
nop
shrb
lcall
rcll
push
jge
outsb
sub
into
xchg
cmp
mov
mov
mov
xchg
nop
xchg
jg
mov
jbe
jecxz
movsl
push
mov
cwtl
cmpsl
and
jne
je
int3
cmp
sbb
inc
cltd
mov
das
in
sahf
push
shrl
ds
xor
out
push
push
test
and
jnp
sbb
sbb
inc
mov
push
jo
adc
pop
mov
outsb
pushf
fs
and
inc
nop
test
outsl
jb
sbbb
iret
lret
aam
dec
je
inc
xchg
sbb
imul
arpl
jecxz
sahf
pop
push
cmp
cmp
outsl
lahf
xchg
dec
sahf
lcall
lret
popa
outsl
outsl
cmpb
jle
mov
xchg
add
rorb
int3
xor
xchg
mov
xchg
int
daa
dec
jae
popa
xchg
push
cmp
outsb
jne
js
mov
mov
lret
mov
mov
add
push
push
not
in
inc
sahf
iret
inc
icebp
xchg
sbb
xchg
inc
ss
pop
and
mov
jae
arpl
sbb
jae
jecxz
inc
ds
lcall
jmp
outsl
mov
imul
call
insl
xchg
out
inc
mov
cs
fisubrs
cltd
addb
lahf
enter
lea
iret
sarb
xchg
mov
xchg
ret
insb
jmp
ficomps
pop
jo
sbb
fmuls
hlt
test
jnp
ret
cwtl
xchg
cmp
popf
jb
loopne
sahf
sub
adc
mov
xchg
inc
cmp
inc
into
inc
popa
pop
dec
test
sbb
add
adc
and
nop
push
cmpsl
lea
push
lret
arpl
sub
lret
fistpll
mov
sub
jp
iret
cmp
into
insb
cltd
js
orl
sbbb
aam
push
mov
lretw
das
sbbb
inc
mov
idivl
hlt
xchg
cmp
pop
lret
jbe
jns
mov
inc
inc
or
mov
and
ja
aam
iret
push
dec
sub
add
jmp
push
lret
iret
xchg
mov
mov
adc
arpl
sbb
mov
jge
push
mov
ret
inc
lds
jmp
pminub
xorl
mov
int
xor
pop
mov
aaa
fiaddl
xchg
ja
sahf
inc
dec
in
mov
jno
push
xlat
js
push
push
movsb
pop
scas
rcrl
mov
jae
and
outsb
insl
popf
mov
fwait
xchg
inc
mov
sbb
xchg
add
mov
inc
xor
jbe
mov
dec
or
mov
cmc
xor
xor
mov
adc
arpl
mov
popf
popf
sahf
mov
loopne
jb
dec
scas
int
inc
fcom
imul
inc
xchg
mov
insb
fwait
inc
call
fwait
mov
iret
xor
sti
hlt
js
lret
pop
lods
orb
xchg
mov
push
js
outsl
mov
mov
ja
or
add
dec
into
jle
mov
jne
push
and
outsb
xchg
dec
popf
imul
sar
movb
jbe
stc
xchg
psubq
pop
xchg
jae
adc
mov
gs
dec
cmpsl
mov
fdivrs
xchg
jg
outsl
pushf
shlb
dec
subb
subb
nop
jo
jno
cltd
mov
jl
dec
ret
or
fcomps
or
inc
jl
daa
push
mov
adc
cli
sbb
xlat
xchg
jg
inc
jmp
jl
addr16
fadds
aam
jge
lcall
mov
cmpsl
mov
jae
lods
push
add
cmp
inc
dec
aam
cwtl
lret
dec
jle
fdivrl
je
dec
and
jns
cltd
jnp
xchg
lret
xchg
mov
push
lods
adc
xor
xchg
test
insl
sahf
sub
fabs
je
ja
dec
aaa
filds
xchg
inc
jo
imul
or
ja
int3
xlat
dec
mov
lahf
out
cmp
lret
mov
inc
arpl
add
lcall
shll
in
mov
mov
mov
iret
sub
pop
imul
imul
cwtl
sub
outsb
xchg
fistl
insl
imul
xchg
mov
jns
jb
insl
dec
push
fisttps
lret
test
lcall
adc
stos
and
cltd
daa
int3
mov
jne
mov
ja
outsl
or
leave
into
out
cltd
mov
mov
dec
lods
stc
add
cwtl
inc
test
lods
lea
test
xor
rorb
popf
into
xchg
cli
or
push
jne,pt
jns
sub
dec
test
cwtl
popf
jle
jmp
xchg
pop
popa
fsubrs
push
sbb
jne
jb
insb
cmpb
test
mov
mov
xchg
mov
testb
mov
leave
xchg
ja
inc
pushf
xlat
imul
xchg
jne
lret
int
mov
or
stc
loopne
pop
push
imul
jge
mov
lahf
jne
je
jecxz
orb
nop
adc
lods
pushf
pop
sbb
test
and
outsl
xchg
pusha
out
xlat
test
cmc
xchg
jbe
jno
jecxz
in
leave
dec
orl
xchg
xchg
insb
iret
insl
xchg
push
sbb
mov
sahf
int3
leave
je
jne
cwtl
jbe
loopne
jp
and
sahf
mov
push
insl
dec
mov
cwtl
nop
and
fmul
add
jbe
ja
sbb
xchg
jg
jo
inc
inc
mov
jp
lods
mov
cmp
xor
xchg
iret
lcall
cli
ret
mov
add
out
cwtl
jae
into
adc
fcmovnbe
pushf
ret
jno
dec
inc
mov
adc
pop
call
stos
outsb
outsl
insb
fwait
loopne
imul
jo
fsubrp
add
mov
push
movl
add
jae
movsb
test
into
je
popl
aad
mov
ja
cmp
cltd
jle
into
push
sbb
pushf
std
adc
sbb
cmp
jns
inc
inc
daa
js
lcall
lods
or
or
arpl
fdivs
jg
loopne
fistps
xor
lods
outsb
xchg
lahf
cli
pop
jnp
jne
inc
imul
call
or
push
push
jp
fidivl
adc
popf
aaa
and
leave
or
inc
jle
ja
call
loope
fldt
mov
adc
ja
fisttpll
nop
mov
test
jae
jne
xchg
gs
insl
in
popa
sahf
xchg
mov
mov
lahf
lcall
jbe
fsubrs
push
jae
clc
test
fistl
pop
repz
fisttpll
mov
cld
repnz
sub
xchg
pop
xchg
mov
sti
shrb
leave
test
cmp
mov
repz
inc
adc
or
std
aad
nop
out
into
jge
adc
mov
nop
daa
lods
xchg
mov
pushf
push
js
jno
and
rep
insl
pop
and
jge
cmc
sbb
insb
add
ja
xchg
nop
imul
mov
mov
jne
imul
mov
jl
popf
andnps
repnz
out
jne
dec
out
dec
lahf
or
mov
aaa
cmp
dec
or
icebp
mov
addl
outsb
cli
or
rcrl
jb
lods
jle
adc
cltd
mov
insb
xor
and
jnp
pop
out
cwtl
inc
mov
push
shlb
nop
mov
inc
stos
jbe
js
das
push
outsb
sub
cs
lret
lea
lods
cmp
mov
lea
ret
fcomi
xchg
neg
imul
inc
jge
fists
nop
mov
subb
cltd
add
mov
js
sti
inc
ds
inc
xchg
jo
xlat
xchg
cmp
cmp
je
jnp
jg
mov
push
cmp
ror
cli
push
insl
and
aam
paddq
lea
dec
cmc
mov
jg
lods
aam
shlb
rcll
inc
outsl
imul
shlb
pop
arpl
add
inc
test
mov
stc
leave
jl
ja
outsl
lret
cmpsl
pop
and
int
popf
dec
lods
adc
sub
rclb
imul
je
jae
lcall
xchg
insl
push
lret
jae
pusha
inc
mov
nop
xlat
push
loope
fistpl
fwait
stc
xchg
sub
cwtl
outsb
fwait
xchg
aaa
push
js
sti
lret
cmp
scas
ds
stc
xchg
xlat
cmpsl
mov
lea
xor
lret
push
loope
arpl
push
ljmp
push
add
mov
shr
lds
xchg
or
aas
cld
xor
jnp
popf
mov
sahf
xchg
jle
ror
insl
xchg
mov
jo
mov
fdivrs
fidivs
pop
jge
sarl
jae
adc
mov
fcmove
aad
dec
xchg
lahf
imul
lock
jbe
jne
js
stos
movsl
xchg
adc
outsb
popf
jl
jne
cmpb
xchg
cmp
outsl
and
sbb
and
ja
outsl
xchg
or
sub
cmp
mov
dec
pushf
mov
cmp
nop
adc
daa
sahf
cltd
into
mov
imul
mov
outsb
ss
movsl
test
pushf
inc
jmp
insl
xchg
mov
lds
xor
cltd
lds
pop
cmp
out
popf
lcall
out
jnp
pop
or
cmp
xor
aam
xor
cmpb
leave
popl
lret
cltd
mov
pushf
xchg
fwait
int3
scas
popf
int
cmp
lret
xlat
sahf
mov
les
jl
jge
pop
js
es
jno
xchg
lock
dec
js
and
movsb
xchg
int
adc
imul
inc
xor
adc
jecxz
lea
ret
insb
imul
lret
rorl
pop
pop
sbb
and
or
nop
jge
outsb
jmp
push
mov
jns
cmp
xchg
jg
test
lcall
lret
xchg
fwait
shlb
jp
or
mov
mov
xor
cmp
mov
iret
mov
mov
incb
popf
jns
xlat
nop
push
cmp
fsubs
sub
jl
imul
nop
rcrb
insb
and
sahf
cmpsl
pop
jno
mov
xchg
popf
insl
xchg
mov
lret
jl
push
arpl
insl
pop
sbb
and
inc
ret
lea
jbe
in
push
mov
leave
mov
xchg
shll
imul
push
js
lret
sahf
push
push
mov
xchg
jno
nop
mov
pop
fistpl
cwtl
sbb
mov
sahf
leave
nop
fwait
mov
into
loopne
mov
lret
out
stos
adcb
inc
pop
jmp
ja
fistps
sbb
imul
push
cli
xor
cwtl
daa
and
in
push
xchg
dec
jmp
cmp
pop
cmp
xchg
mov
int3
nop
pop
inc
mov
iret
lea
ja
xchg
int3
fmulp
daa
jb
xchg
dec
mov
sbb
jmp
lret
out
xchg
push
out
pop
aad
xchg
subl
jl
jle
jnp
lahf
fcoms
xchg
jge
lea
mov
mov
int3
test
xchg
fcoms
stc
subb
lea
jae
lret
mov
xchg
fistpll
into
pop
pushf
jge
inc
xchg
pop
fsubrs
rolb
pop
xor
jo
mov
outsb
jecxz
jmp
cmp
aam
scas
adc
int
jg
decl
jo
jb
xlat
outsb
jge
mov
arpl
out
into
push
stc
outsl
jg
shlb
addr16
push
sarb
outsl
jge
imul
ret
add
rcrb
pop
and
test
fcomi
sub
jno
add
dec
pandn
aad
clc
lods
jnp
xchg
insb
inc
xchg
jns
push
cli
push
imul
mov
sahf
lret
inc
lds
cli
into
jns
popl
sti
outsl
xchg
xchg
inc
xor
shlb
mov
sbb
jge
dec
mov
sub
xchg
lods
and
jnp
mull
xorl
inc
or
in
push
push
mov
sub
jnp
outsb
mov
and
sub
jns
add
popl
lea
jns
cmp
cltd
fwait
outsb
jge
and
jno
sbb
sbb
ficompl
lret
cltd
test
pop
scas
mov
xor
repnz
dec
cmp
pop
mov
cmp
jbe
hlt
cmp
int
cwtl
inc
test
xchg
lea
jno
inc
ja
das
and
int
adc
mov
fs
jb
mov
rolb
in
jo
mov
jmp
xor
js
gs
jbe
ret
scas
push
fsubrs
jge
xchg
pop
adc
into
xchg
nop
orb
subb
imul
sbb
xor
xchg
sbb
nop
push
or
jle
xchg
mov
imull
xlat
mov
cmp
lea
push
lcall
leave
xor
inc
mov
pop
aaa
fists
lret
cltd
xchg
jmp
inc
adc
lcall
lea
add
xchg
int3
int
in
into
fisttpl
sbb
push
fwait
mov
add
lcall
xchg
insb
mov
sahf
cwtl
jle
mov
jbe
hlt
add
lahf
xchg
mov
xchg
pop
dec
jl
stos
jecxz
cmpsl
and
enter
xor
push
and
xchg
or
push
lods
mov
mov
add
stos
nop
in
scas
jbe
xchg
into
insl
aad
mov
push
mov
pop
fidivrs
inc
or
xchg
int
xchg
jg
cmp
mov
xchg
adc
or
adc
stos
xor
jbe
ja
inc
es
adc
je
insl
sbb
pop
leave
mov
subl
ja
dec
mov
pop
lea
jg
cmp
jns
xchg
xchg
out
outsl
int3
mov
pop
jo
pop
cli
test
push
rorb
xlat
jnp
adc
cltd
mov
adc
outsl
insb
in
popf
jns
xlat
imul
and
xchg
pop
pushf
aad
ret
in
jnp
pushf
nop
dec
pop
inc
sahf
fstpt
out
mov
mov
data16
adc
dec
or
shlb
mov
mov
jns
xchg
pop
lcall
jmp
das
rclb
fildll
mov
aaa
outsb
sub
pop
sub
jb
lock
dec
lea
jg
push
xchg
pushf
dec
adc
xchg
int
mov
cmpsl
dec
xchg
jae
js
jne
xchg
icebp
lock
or
adc
ss
ja
sarb
cmp
fwait
dec
cwtl
outsb
out
mov
lahf
add
or
jg
jl
outsl
push
add
jmp
push
mov
pop
add
inc
decb
lock
xchg
jle
jno
das
xchg
mov
int
mov
jl
js
xchg
xchg
pushf
les
mov
push
mov
mov
jmp
mov
jno
cwtl
mov
ret
shl
std
and
ror
dec
lock
lret
movsl
jge
outsb
lret
cmpb
int
inc
insb
dec
cli
enter
mov
jg
xlat
mov
nop
push
test
mov
imul
iret
add
or
jns
push
das
repz
into
jnp
popf
daa
mov
pop
rclb
out
mov
jle
mov
mov
cmp
mov
xor
inc
xchg
aaa
mov
and
dec
cmp
jb
adc
mov
lea
xor
lock
xor
mov
pop
fstpt
popf
fcomps
stos
jg
movsb
jns
lret
jge
fistpll
jo
sti
push
inc
dec
pop
leave
mov
mov
sbb
jnp
mov
adc
fwait
lahf
lahf
xor
push
mov
cmp
cmp
outsl
xchg
xchg
dec
mov
mov
ja
cs
test
and
ret
xchg
xlat
sahf
lcall
int3
push
jo
subb
repnz
bound
lret
fdivs
stc
and
in
pop
xchg
pop
sub
aam
cmpsl
or
mov
jp
ja
jns
sbb
mov
mov
test
and
loopne
imul
pop
jmp
pop
sahf
inc
xchg
popl
and
int3
fmul
insb
stc
jns,pn
cmpsb
stos
xor
rclb
shrl
jecxz
lock
ret
sub
jne
jne
jmp
mov
xlat
cmp
cmp
pop
rclb
mov
jp
fwait
in
movl
nop
xchg
jo
outsl
cmp
or
fisubs
sahf
xchg
xor
lret
movsl
sbb
inc
pop
int3
mov
cmpsb
or
pop
jo
repnz
iret
mov
cltd
ret
inc
loop
pushf
adc
dec
repz
mov
push
xor
mov
mov
mov
adc
lret
in
lods
jno
rclb
into
mov
jo
js
test
or
ficomps
ljmp
rcll
cmpsl
in
int
sahf
cmp
imul
aas
ds
test
jae
adc
lcall
add
push
ds
push
or
shlb
xlat
and
dec
inc
mov
ja
and
roll
lcall
push
sub
dec
xchg
sahf
jge
pushf
int
mov
fisttpl
mov
aam
lea
les
stos
cmp
test
outsb
sub
xor
mov
outsl
sbb
push
mov
xchg
inc
xor
mov
ror
outsl
test
pop
mov
nop
mov
shrl
jno
test
int3
or
lret
test
nop
inc
push
push
inc
xchg
roll
lret
mov
or
fcoms
mov
leave
jbe
jae
lahf
mov
inc
mov
lret
cmp
int
xor
in
out
imul
jae
test
dec
nop
mov
stc
jae
repnz
inc
pop
pop
jg
pop
aaa
mov
dec
add
imul
sbbb
mov
insb
jle
mov
fistpl
xchg
das
pop
subl
aaa
arpl
adc
pop
inc
or
lods
and
xchg
jl
xlat
inc
adc
xchg
jp
das
mov
mov
pushf
jmp
mov
ds
inc
rcrl
and
imul
arpl
add
mov
mov
jno
addb
int3
jnp
sahf
inc
or
js
xchg
cwtl
xchg
jns
mov
out
je
xchg
jne
loopw
outsl
xchg
and
jno
fcoml
daa
mov
jae
jmp
outsb
cltd
jle
dec
xchg
mov
mov
cmp
shrl
test
sbb
test
int
mov
jnp
fsubrs
shrb
imul
xchg
int
adcb
cltd
iret
into
lcall
xchg
jmp
lret
lret
cli
mov
jg
das
jns
ja
jbe
mov
pop
mov
int3
sti
shl
mov
bswap
mov
je
push
xchg
pop
mov
or
xchg
outsb
or
xchg
lods
cmpb
add
xchg
mov
mov
sahf
iret
cmpsb
cmpsl
outsl
mov
in
stos
ret
jnp
lahf
mov
push
and
lahf
sahf
mov
xor
xchg
dec
inc
fmul
insl
imull
aam
into
pop
jb
jne
sti
adc
data16
lock
hlt
cmp
je
xchg
xchg
mov
mov
lahf
insb
mov
mov
mov
jo
jns
dec
jbe
inc
jmp
cwtl
loopne
xchg
inc
jo
inc
orl
in
lcall
xlat
rclb
jp
xchg
inc
xlat
inc
dec
js
inc
test
dec
dec
inc
jg
jg
orl
mov
mov
fcmovbe
jp
jge
push
insl
and
call
add
jp
insl
adc
jno
adc
jp
les
popa
imul
int
lods
int3
enter
ret
dec
fldl
ja
cmp
mov
inc
outsb
into
mov
lahf
jnp
sti
jb
ja
ja
or
outsb
setge
cmp
mov
add
xchg
add
xor
or
fstpt
inc
adcb
jo
inc
mov
imul
mov
mov
xchg
pop
xor
ja,pn
fldl
popf
xchg
int3
insb
lret
xlat
push
aaa
or
mov
cltd
xor
setge
leave
arpl
xchg
imul
or
ja
lods
sarb
xchg
int3
jne
enter
jge
mov
mov
dec
jp
inc
test
jno
mov
inc
cmp
rorb
jns
mov
mov
jae
enter
lahf
fwait
data16
shl
or
into
xlat
out
jl
mov
iret
rclb
nop
xchg
daa
cltd
mov
loop
xchg
insl
repz
pop
jmp
loopne
or
mov
divb
xlat
mov
pop
ja
mov
mov
out
mov
mov
add
jge
mov
imul
sarl
in
jp
cmpsl
add
das
dec
pop
jp
mov
ds
lret
cli
jp
mov
ds
mov
fcmovnb
andl
adc
loope
cmp
jae
lock
stc
cmpb
or
mov
push
stc
ds
hlt
jle
nop
jne
push
imul
add
lock
pop
pushf
cmp
insl
xor
adc
inc
int3
lret
inc
fsts
or
xchg
push
mov
jp
and
lea
jl
imul
xchg
inc
dec
jns
jno
mov
or
roll
fcom
jo
je
xchg
mov
repnz
xchg
jae
outsl
into
xor
mov
mov
rorl
xchg
jo
jecxz
xchg
sarb
popl
sbb
jne
xlat
inc
xchg
xlat
test
push
mov
or
je
inc
mov
sahf
or
sub
fwait
xchg
jle
arpl
lret
pushf
aam
sbb
push
arpl
mov
iret
sbb
out
leave
lret
lret
inc
daa
nop
xchg
and
int3
je
fwait
cltd
insb
test
pshufw
mov
aas
repz
xchg
insb
jno
mov
pop
imul
dec
mov
add
jge
push
jns
stc
jnp
loopne
mov
stos
jmp
jmp
into
outsl
jo
enter
mov
cmp
xor
mov
lea
insb
lcall
mov
cwtl
adc
jge
push
pushf
dec
out
mov
xchg
iret
outsl
mov
jmp
out
or
addr16
daa
xlat
jne
jp
lret
leave
js
cmp
addr16
jae
lret
mov
call
mov
pop
mov
jg
adc
shrb
jae
mov
xchg
jns
sbb
imul
popf
cltd
imul
insl
pop
and
mov
shlb
in
idivb
mov
cmp
out
mov
mov
cmp
arpl
jb
sbb
sahf
xlat
jge
sti
sub
mov
ja
into
fcom
ret
addr16
nop
jg
sbb
push
out
pop
jo
insb
iret
push
aam
aaa
cmp
jg
mov
add
in
insl
popf
sub
loope
loopne
jmp
addr16
lret
xchg
pop
jl
mov
push
mov
ja
mov
xchg
lds
divl
fdivs
jbe
jg
push
and
ds
mov
orb
addr16
aam
lahf
jno
mov
mov
mov
into
xor
inc
xchg
sahf
jl
shrl
int3
lea
add
mov
iret
adc
lret
and
fwait
sbb
cltd
xchg
xchg
inc
stc
xlat
imul
lcall
fistps
add
test
mov
pop
jne
xchg
xchg
jae
xlat
lea
inc
or
lret
jbe
and
shll
dec
mov
mov
std
inc
jae
rcrb
xlat
xchg
fnstenv
mov
inc
xchg
je
ds
cmp
mov
xchg
add
fsubrs
fisttps
sbb
xchg
cli
mov
push
fistl
call
lret
sbb
aad
fucomip
mov
jo
jg
mov
sbb
popa
insl
je
nop
mov
sbb
fldt
push
inc
adc
aaa
push
mov
into
cmpb
push
mov
mov
push
sahf
jns
fldt
jbe
sub
push
cmp
incb
out
pop
cmp
mov
nop
add
lcall
enter
aam
jb
ja
test
mov
out
rcrb
adc
jg
pop
scas
popf
insl
mov
rcll
lods
jp
jae
xchg
imul
mov
mov
inc
aam
mov
out
jbe
xchg
jb
pop
xchg
mov
push
xchg
inc
jns
int3
ja
shlb
aam
adc
xorl
mov
dec
push
mov
inc
ja
in
ret
rcl
jne
push
sub
icebp
cltd
sbb
add
jo
mov
mov
inc
jne
jns
inc
call
stc
testl
mov
xchg
js
xchg
lahf
outsb
mov
pop
ja
ja
sahf
jne
dec
lds
and
sub
into
cli
int3
add
jno
jge
jb
shrb
dec
xor
jg
mov
push
dec
aaa
data16
adc
mov
aaa
sub
jp
movsb
lods
lret
push
dec
jno
inc
rorb
mov
sub
jns
xchg
xchg
fwait
sar
jb
push
fdivrs
mov
cmpb
add
lahf
ja
aam
cmpl
sub
jg
test
mov
pop
pop
jno
jo
nop
push
out
popa
fisubrs
mov
lret
arpl
cwtl
xchg
cltd
xchg
fdivs
sbbl
cmp
push
add
test
pop
sbb
mov
mov
insl
xlat
mov
jnp
mov
mov
popa
push
sbb
rorl
frstpm(287
out
in
jg
mov
adc
mov
nop
sarb
sub
je
mov
adc
mov
mov
test
inc
call
ret
xor
lret
jge
mov
lds
hlt
fwait
sarb
adc
mov
imull
mov
das
add
jg
push
jne
xlat
jg
fimull
int3
insl
mov
cmc
jne
cmpsl
into
jnp
lea
stc
push
sub
outsb
imul
loope
fwait
jg
xor
int
dec
mov
mov
mov
test
sbb
lea
aam
mov
call
adc
adc
pusha
negl
jae
xchg
test
xchg
xorb
mov
cmpsl
in
jne
xchg
adc
pop
push
insl
dec
jo
adc
rorl
inc
mov
int
nop
test
leave
pop
in
sbb
mov
mov
fdivs
test
mov
iret
sub
jno
divps
outsb
mov
mov
dec
cmp
cli
jg
mov
jne
jecxz
into
mov
adc
mov
jge
pop
jnp
call
mov
lahf
xchg
mov
mov
inc
xchg
mov
mov
lret
push
mov
and
mov
nop
mov
adc
dec
mov
push
xchg
leave
mov
and
je
out
adc
mov
bound
mov
imul
xchg
aad
sbb
xchg
jne
cltd
jl
leave
xor
insl
inc
inc
inc
and
mov
lcall
icebp
cltd
xor
mov
lea
add
stc
and
or
loopne
mov
out
xchg
lcall
jns
cmp
iret
mov
cmp
rcrb
cmpsl
ss
nop
xchg
add
insb
mov
aaa
addb
jge
xlat
mov
out
push
lahf
fdivrp
test
fcoms
adc
shl
xchg
js
and
xchg
add
push
sahf
push
sti
xchg
mov
mov
leave
mov
mov
jmp
jne
or
mov
lret
mov
lods
push
cmp
push
jl
mov
into
icebp
push
push
mov
sbb
fimuls
dec
shrl
jecxz
mov
adc
icebp
jae
mov
mov
cmp
outsb
jp
jo
cmpsb
sarb
fdivrs
mov
arpl
daa
mov
pop
mov
push
notb
orb
xchg
jle
mov
js
aam
push
stc
loope
stc
pop
xchg
lcall
pushf
insl
sbb
mov
jne
mov
out
sahf
or
mov
pop
ret
jns
imul
ja
lcall
adc
out
leave
jae
add
add
jp
ja
jg
sbb
pop
xchg
movsl
sarl
iret
ja
inc
lea
mov
fwait
imul
aam
jge
mov
ja
xlat
fbstp
lea
jne
adc
mov
nop
and
rcrl
imul
insl
jno
push
xchg
jae
push
or
insb
pop
ja,pn
xchg
outsb
adc
jo
jp
or
push
rolb
cli
mov
add
jp
or
jle
aaa
cmp
mov
jl
insl
mov
mov
popa
popf
nop
in
sub
leave
fwait
cwtl
outsl
lock
enter
or
dec
cs
jo
dec
lahf
sbb
inc
adc
push
xor
ja
mov
cwtl
dec
mov
insl
jb
dec
stc
push
xchg
outsl
jns
movsb
xchg
sbb
mov
lock
mov
mov
lret
js
adc
cwtl
jb
mov
stos
lods
xchg
inc
imul
pushf
test
shll
xchg
leave
or
cmp
nop
orb
lret
or
cmpsl
in
inc
pushf
leave
jg
and
pop
cmp
std
adc
dec
test
aam
imul
ret
vprotw
cmp
jb
das
inc
cwtl
xorb
loopne
and
lret
loopne
ja
pop
lock
push
insb
xlat
jno
daa
and
mov
jb
arpl
in
jg
jl
jne
leave
mov
xchg
mov
jae
jmp
jno
out
mov
and
out
insl
mov
jp
jo
xchg
xchg
pop
xchg
mov
cwtl
mov
cmp
jg
rclb
lds
dec
int
jecxz
mov
mov
lret
ja
or
push
xchg
nop
fcmovu
les
lcall
jmp
loope
sub
jl
push
lock
jnp
bound
leave
shll
xlat
jp
imul
dec
outsl
pop
xchg
mov
add
inc
dec
js
xchg
mov
xor
cmpsb
jo
daa
stos
shlb
outsl
jnp
jmp
xchg
push
mov
mov
pushf
add
mov
ds
push
aam
aaa
popf
cmp
jnp
mov
aas
fisubrs
daa
aam
jl
xchg
add
mov
mov
xchg
pop
scas
mov
mov
mov
iret
fidivl
or
lea
mov
int
imul
xchg
pop
es
popf
push
addr16
mov
xchg
paddq
cmpsl
fmuls
jbe
js
jb
pop
dec
test
imul
inc
mov
daa
das
xor
leave
mov
and
outsl
das
std
cmp
mov
into
popf
lds
inc
jg
cmp
jbe
fstpl
leave
lahf
xchg
mov
hlt
movsl
pop
mov
jl
sbbl
jge
adc
int
ret
ja
cmc
xchg
jg
sbb
lods
nop
mov
jle
je
inc
adc
call
mov
push
inc
punpckhwd
inc
push
xchg
jnp
jle
fwait
xchg
addr16
sahf
jp
aam
rclb
ror
cmp
cmp
cmpsb
mov
mov
mov
push
mov
aam
inc
lods
int3
mov
mov
insb
imul
xchg
jge
add
fs
repnz
sarb
jae
cwtl
dec
add
bound
xchg
jg
imul
sbb
xchg
xlat
fwait
out
ss
ja
adc
push
ss
leave
jecxz
sbb
fistl
frstor
or
xor
icebp
mov
cmpsl
fisttps
xchg
addr16
jno
mov
mov
jbe
jp
adc
xchg
jecxz
dec
notl
adc
pop
mov
jg
dec
lret
adc
pushf
bound
js
push
ja
aad
lret
jl
arpl
mov
jb
icebp
add
jae
xlat
aam
jl
sbb
cmp
fs
or
loop
arpl
ror
xchg
arpl
jbe
jne
or
pop
fmuls
ja
inc
aam
leave
fwait
mov
jo
jnp
jl
xchg
shrl
lret
mov
add
xchg
rolb
sbb
jp
add
mov
loopne
xchg
mov
mov
and
insb
push
mov
sahf
arpl
push
mov
popf
mov
das
sahf
mov
or
rorb
xor
inc
mov
out
jle
jnp
cs
jge
jns
dec
mov
pop
lods
pusha
pop
addl
lcall
std
xor
jbe
jg
xlat
mov
lea
das
mov
xchg
cmp
xchg
jns
test
mov
stos
outsb
lea
lea
je
or
xchg
imul
ja
add
jae
mov
jge
mov
in
mov
jnp
jmp
cmp
sahf
xchg
outsl
sets
jp
outsl
push
adc
fwait
cmpsl
into
jp
mov
iret
mov
lcall
dec
mov
inc
ror
xchg
nop
mov
cltd
imul
mov
push
arpl
cmp
pop
cmp
lcall
cmp
xlat
inc
push
inc
sub
mov
insb
adc
fwait
jne
int
mov
popf
lea
daa
cmpsl
and
imul
jno
pop
inc
xlat
mov
jge
leave
jnp
jg
inc
aas
inc
lret
sbb
lcall
in
push
xor
cmp
sarb
int3
jl
jno
lcall
jo
xor
jo
nop
mov
int3
mov
mov
inc
mov
es
xchg
sbb
arpl
in
mov
inc
test
hlt
mov
lahf
xchg
mov
and
jge
addb
aam
jno
inc
mov
ja
mov
in
pop
and
test
imul
outsl
mov
nop
jo
mov
cmpl
cwtl
jbe
test
mov
lcall
adc
outsl
out
fwait
mov
mov
mov
aas
cmp
sarl
sarb
adc
nop
mov
ljmp
cmp
add
je
lahf
add
mov
jne
xchg
outsl
or
mov
xchg
xlat
ja
jne
or
xchg
jb
sbbb
lret
lods
popf
mov
insl
xlat
jo
in
or
lds
outsl
aam
scas
push
popf
aas
lahf
mov
jbe
leave
aad
outsb
insb
fsubrp
sub
ja
insl
aad
int3
push
rcrb
into
imul
sbb
jl
hlt
iret
add
hlt
xchg
xor
movsl
jmp
add
push
cmpsl
mov
fwait
aam
xor
jecxz
dec
sub
jns
pop
or
mov
fiaddl
outsb
mov
mov
lea
jae
or
xchg
int3
into
jbe
xchg
iret
mov
adc
xchg
sbbb
arpl
add
fistpl
fwait
cmp
jne
jnp
cltd
shlb
lret
sbb
repz
data16
mov
cld
mov
jb
or
outsb
cmp
insl
xchg
dec
mov
mov
jg
mov
inc
xchg
mov
or
imul
lahf
mov
jge
ja
dec
leave
sbb
sub
sbb
ds
jnp
fs
movsb
push
mov
gs
jp
jns
add
into
enter
push
mov
insb
add
call
cltd
xchg
jb
pushf
aaa
lds
shlb
popl
jnp
cwtl
dec
cmpsl
xchg
xchg
jg
jl
aaa
pushl
mov
mov
leave
mov
xchg
push
and
push
xchg
mov
shll
xchg
dec
adc
xor
movsl
arpl
sahf
test
popf
or
orb
jb
mov
cltd
outsb
cmpsl
pop
pushf
imul
cltd
add
cmpsl
loopne
inc
data16
ret
pusha
out
packssdw
jne
sahf
lds
lret
sbb
inc
lods
testl
sti
mov
cmpsl
jb
mov
popf
outsl
insl
sub
repz
pop
mov
xlat
iret
dec
push
pop
jg
xchg
mov
jne
jnp
sub
stos
jb
jo
jae
addl
lret
xor
repz
push
dec
mov
rclb
aaa
insb
inc
int
lahf
jg
call
jae
shrb
inc
mov
fwait
nop
ja
push
out
imul
jbe
push
test
jle
imul
into
jne
fcomip
test
lods
arpl
inc
mov
xchg
repnz
imul
jae
out
fdivs
mov
cltd
lcall
push
sahf
cmpsl
iret
cwtl
xchg
int3
jmp
pop
mov
xchg
inc
je
dec
xor
outsl
sahf
add
fdivrs
jmp
inc
test
loope
ds
int
fimull
jmp
pop
lea
xlat
out
push
fisttpl
lcall
jae
xchg
mov
mov
ja
mov
mov
test
and
adc
and
popa
imul
int
adc
cmpsl
leave
fisttps
or
lods
mov
and
mov
xor
mov
xchg
or
repz
jle
cltd
cmpsl
jb
push
shrl
mov
das
fwait
sub
cwtl
lahf
je
aas
lods
xchg
adcb
insb
cmp
inc
lds
jnp
xlat
shlb
cld
xchg
sahf
outsl
mov
jb
jg
loope
iret
sbb
bnd
popf
iret
orb
or
add
sti
arpl
inc
loopne
jle
mov
pop
or
into
inc
ja
int
jle
insl
das
xchg
enter
mov
jne
addr16
stc
add
cltd
inc
adcb
jp
int3
jle
jb
fisubs
mov
mov
testb
mov
push
cwtl
mov
je
and
ret
pushf
adc
and
xchg
mov
shrl
cmp
jae
push
and
cltd
pop
xchg
insl
call
jno
jns
sbb
lret
xlat
inc
lret
jo
sbb
ret
shlb
fstpt
int
loope
outsb
mov
jp
fcoms
jns
lcall
xchg
test
xchg
inc
into
add
and
andb
jno
jge
jle
mov
repnz
cmpsl
imul
lahf
inc
into
lods
mov
jp
push
dec
jns
js
lahf
adc
adc
xchg
sbb
adc
xlat
lahf
outsl
jge
mov
xchg
mov
cmp
jo
leave
xlat
jl
das
pop
mov
jno
pop
lods
lret
pop
lret
fisubrs
and
sahf
xchg
lret
or
mov
push
mov
mov
jb
jae
subl
jns
pushf
mov
mov
jnp
mov
cmp
iret
xor
mov
mov
orb
shl
xchg
add
imul
mov
out
mov
jg
icebp
inc
push
iret
loope
aaa
mov
sahf
mov
out
xchg
lret
aaa
mov
jbe
int
js
sbb
dec
psubusw
mov
sbb
jl
arpl
scas
push
cmp
and
or
lcall
mov
leave
out
jmp
rorb
cmc
jp
lahf
xchg
sub
call
jns
loope
aas
jns
mov
sbbb
lret
fsts
aaa
inc
shlb
xchg
mov
jno
int
outsb
push
push
lcall
lcall
xor
mov
xchg
add
mov
jge
dec
adc
aam
mov
je
frstor
lahf
movsl
or
outsl
jge
mov
jbe
push
sbb
sub
rcrb
mov
dec
mov
xchg
mov
iret
jns
les
and
ret
mov
fwait
adc
mov
mov
mov
ja
inc
adc
pushf
sbb
stc
enter
ficompl
pop
test
push
je
popf
or
aaa
fstpl
fdivs
out
or
adc
cltd
mov
and
jns
aaa
es
jg
xlat
pop
cltd
ret
lret
jg
insb
cmp
mov
lods
mov
fs
das
mov
stos
inc
adc
push
jg
add
jbe
into
js
mov
enter
lret
jo
jae
xchg
dec
mov
orb
lcall
out
lret
dec
imul
imul
stos
cmp
jp
cwtl
test
jnp
outsl
xchg
pop
push
lret
jle
jge
addb
int
aam
shlb
int3
dec
mov
sarb
sbb
xchg
aam
push
test
js
and
add
iret
js
lea
sbb
mov
les
inc
aad
jp
mov
aam
ljmp
nop
insb
or
ret
xchg
xlat
xlat
ja
sbb
push
inc
aas
xchg
repnz
push
cmp
xchg
int3
mov
lock
mov
rcll
out
xchg
outsl
mov
popf
push
mov
iret
mov
inc
pop
mov
xlat
call
lret
imul
inc
jb
leave
imul
adc
nop
xchg
pop
sbbb
aad
cltd
jo
js
pop
cmpsl
lret
sarb
xchg
fucomp
xlat
sbb
push
adc
aas
adcb
aaa
jbe
ja
pushf
mov
xchg
shl
inc
add
push
jae
outsl
out
lcall
push
es
test
lahf
or
les
mov
shlb
cwtl
mov
sarb
pop
lea
pushf
jle
test
aad
jae
mov
data16
pop
jecxz
and
pop
int3
jnp
jae
outsb
xchg
mov
in
xchg
nop
rorl
iret
jne
xor
subb
sti
iret
mov
dec
outsl
lcall
scas
popf
jns
dec
mov
jae
mov
aam
jae
movsb
add
stos
jne
push
mov
mov
lcall
jg
icebp
inc
mov
insb
xchg
add
int3
cmp
int
js
adc
xorb
scas
lods
js
stos
into
insl
jle
test
jp
clc
pop
ja
ret
jg
sub
mov
xchg
iret
adc
jge
adc
in
xchg
popf
mov
loop
std
cmp
inc
addr16
mov
leave
out
dec
dec
outsb
sti
jae
sahf
lret
xchg
or
mov
clc
hlt
jp
add
push
mov
int3
outsl
mov
mov
jnp
int
or
pop
pop
sub
xchg
push
xchg
jo
xchg
jb
lcall
rorb
push
rorb
jbe
ljmp
mov
cmp
outsl
lock
pop
nop
mov
mov
ja
mov
push
imul
jns
jg
sub
arpl
hlt
outsb
inc
das
mov
data16
ja
xchg
xchg
iretw
stc
std
inc
ret
xchg
xchg
mov
rcr
and
aaa
sub
stc
push
bswap
adc
bnd
insl
push
ja
sahf
cwtl
lea
inc
fsub
rclb
pop
lret
lods
outsb
loop
lahf
fsubs
xor
mov
jle
xchg
nop
je
push
jnp
cmp
cmp
adc
aaa
call
lret
cmpsl
xchg
jae
cmp
add
jg
mov
outsl
jne
int
pop
cli
adc
cltd
iret
xlat
push
inc
shlb
mov
dec
int
jge
rcl
xchg
cld
in
and
lods
lock
enter
jl
xor
jp
sbb
out
jns
ljmp
sbbl
cmpsl
push
xchg
jl
mov
xchg
mov
je
into
xchg
lahf
jne
sbb
insl
sub
xchg
pop
pushf
addr16
js
lret
orb
mov
jp
out
mov
mov
sub
int3
mov
lret
in
cltd
out
imul
mov
inc
push
test
popf
mov
mov
fistpl
ret
test
jmp
outsl
inc
stc
aas
mov
nop
xchg
mov
xchg
jbe
dec
mov
adc
out
xchg
mov
lods
mov
mov
ja
pop
stos
jle
jne
add
pop
mov
xchg
in
mov
aad
jns
fstpl
scas
xchg
mov
jo
pusha
mov
mov
jl
cmpsl
cmc
xchg
pop
arpl
js
xchg
iret
mov
push
jmp
or
hlt
jecxz
imul
into
mov
mov
cmp
mov
nop
xlat
adc
scas
popf
xchg
fnstsw
pop
pushf
test
shll
aam
rcrl
arpl
sarb
jns
mov
ss
das
mov
movsl
shll
das
rolb
fwait
call
cltd
mov
jp
nop
pop
les
mov
lea
mov
mov
xchg
mov
fwait
es
push
push
jnp
adc
xchg
arpl
movb
lock
loopne
xor
out
xlat
jae
mov
aam
push
mov
nop
adc
xchg
je
sub
and
inc
add
push
test
out
jno
xlat
inc
arpl
xchg
lods
mov
clc
mov
imul
loopne
mov
xor
mov
ja
das
xchg
clc
rcrl
and
pop
sahf
mov
jo
arpl
cmp
clc
or
push
mov
mov
into
int
xchg
je
mov
mov
cmpsb
int3
cmpsl
inc
ja
shlb
lahf
stc
mov
xchg
nop
jno
mov
cmp
push
add
shlb
iret
lret
int3
lret
mov
aam
outsl
add
rclb
xor
arpl
dec
jp
out
leave
push
out
lret
fbld
inc
cmp
jbe
mov
outsl
leave
cmp
popf
xchg
fsubs
shrb
add
jae
fnstcw
xor
sti
loopne
jg
mov
mov
or
in
ds
call
js
fcmove
add
dec
inc
cmc
lahf
xchg
out
sub
pop
sub
xchg
push
xchg
iret
pop
cwtl
dec
pop
insl
jge
repnz
xchg
sbb
js
aas
js
and
add
outsb
cmp
int
jge
daa
sarb
xlat
inc
nop
mov
orb
or
mov
mov
mov
adc
addl
outsl
mov
es
movsb
sub
aaa
outsb
iret
jge
imul
ret
out
into
xchg
fimuls
lcall
lret
mov
lea
mov
int3
jnp
aaa
mov
aam
sbb
xchg
jo
fistpl
lcall
call
jg
xlat
lret
mov
mov
mov
fcompl
mov
pop
or
ja
imul
popf
mov
pop
mov
mov
adcb
insb
push
int3
mov
pop
insl
xchg
xchg
int
mov
cmp
insb
daa
mov
fistpll
sub
fwait
addr16
jle
jne
xchg
outsb
jbe
fadd
aaa
lods
jnp
mov
mov
jo
jns
repz
jle
sbb
test
mov
xlat
ja
mov
mov
jl
jns
pop
out
or
iret
push
ret
lea
int
jg
lret
fwait
pop
cltd
xorl
jb
arpl
xor
xor
cmpsl
push
sbbb
insl
mov
inc
pop
je
orb
xchg
jno
lcall
insb
fwait
ja
jge
sahf
xchg
push
insl
jnp
nop
jb
insb
mov
jns
fs
jne
rclb
xlat
popf
adc
repz
jns
movsl
mov
lcall
into
mov
cltd
push
jle
push
popa
or
fistpll
dec
scas
ja
outsl
orl
mov
pushf
je
mov
lcall
jae
aaa
fwait
push
out
outsl
jo
inc
adcl
xchg
mov
insb
out
fimuls
mov
js
add
bswap
mov
jae
inc
cmp
mov
js
stos
jle
rorb
xchg
dec
pop
adc
cwtl
xlat
popf
lret
imul
sahf
lcall
leave
push
jae
adc
je
add
dec
test
inc
xchg
imul
push
xlat
mov
xor
cmpsb
mov
jg
lahf
into
cwtl
jno
inc
and
test
outsl
enter
icebp
jg
imul
test
mov
out
mov
xchg
pop
out
jae
push
mov
lcall
mov
sbbb
cmp
jb
pop
add
jnp
sbb
jl
ret
in
jne
inc
mov
ror
xor
xchg
cltd
inc
and
dec
leave
lahf
jne
imul
xchg
mov
jle
xchg
and
leave
sbb
sahf
xor
js
xchg
iret
call
lret
mov
into
aad
xor
lea
push
push
and
lcall
fldt
jno
mov
scas
mov
xorb
cwtl
popf
pop
outsb
xor
push
cli
rcll
add
nop
ja
arpl
je
addb
mov
jo
dec
adc
fsts
xor
xchg
imul
movsl
inc
push
dec
adcl
xchg
aaa
adc
mov
int3
leave
sbb
mov
in
dec
push
mov
ror
mov
inc
stos
mov
subl
xlat
jl
lea
mov
jg
inc
je
ljmp
nop
rcrl
ljmp
adc
mov
jns
inc
xchg
pop
int3
fistps
sub
notb
out
shlb
arpl
mov
into
shr
test
ret
xchg
jae
je
xchg
cmpb
jno
push
lea
das
loop
imul
sahf
jge
dec
mov
adc
inc
jl
lret
sub
stc
outsb
jmp
mov
ja
adc
fwait
das
divb
mov
pop
test
add
ret
xlat
aaa
cmpsb
push
aaa
movsl
je
xchg
mov
or
out
aad
push
fldt
popf
nop
push
xor
shrb
into
mov
xchg
mov
nop
sub
cmp
popf
add
adc
and
mov
push
in
jnp
xchg
jge
mov
outsl
int3
mov
outsb
insb
add
inc
inc
lcall
pushf
rol
xchg
jae
adc
or
jns
outsl
enter
xorb
mov
je
xchg
lea
sbb
sub
xchg
test
xlat
xchg
cmp
and
daa
arpl
out
cwtl
das
sbb
divb
outsl
jp
imul
inc
xor
fwait
jae
mov
mov
mov
xchg
lret
jo
mov
ret
inc
lock
cwtl
ja
pop
movb
mov
inc
mov
mov
lcall
rorb
and
leave
fisubrl
jno
jns
jecxz
cmp
shlb
imul
into
out
aam
jmp
pop
sarl
subl
mov
js
ret
xchg
mov
mov
je
and
enter
adcb
aad
jno
inc
cwtl
into
and
in
sar
push
mov
inc
lcall
ror
mov
nop
adc
jae
jg
push
push
push
mov
cmpsl
orb
mov
xor
xchg
mov
push
lret
in
lock
mov
fs
mov
iret
mov
ja
je
push
bound
int3
outsb
arpl
mov
rcrb
push
or
sar
movl
sahf
push
cmpb
cmp
stc
cmp
sub
push
lcall
sbb
insb
push
jp
push
scas
int
jns
cld
jns
inc
mov
arpl
mov
sub
jo
mov
xchg
sbb
dec
lahf
push
lret
outsl
je
fistl
ja
cwtl
push
fwait
pop
mov
int
jae
insl
push
cmp
xchg
xchg
mov
in
jnp
data16
jnp
xchg
mov
sahf
xchg
js
mov
scas
adc
pop
xchg
subb
insl
xchg
sahf
insb
dec
in
ja
repz
jg
mov
lret
orb
jmp
fcom
test
shrb
cmp
jp
sub
jae
jo
popf
sbb
sub
mov
jl
mov
pop
imul
and
lea
jns
jns
mov
add
cli
sahf
scas
xchg
push
push
js
xchg
gs
mov
leave
cmc
aaa
in
jne
test
orb
lret
shll
mov
adc
pop
inc
jo
xor
mov
or
clc
lods
mov
lods
stos
scas
iret
jp
xlat
int3
push
cmpsl
or
insb
out
jne
arpl
xchg
jo
mov
popf
imul
push
rclb
outsb
jp
xchg
js
mov
ja
sti
popl
je
lock
addb
mov
jnp
mov
rorb
nop
mov
sahf
mov
and
out
jbe
ror
int
out
ret
insl
jae
xchg
dec
lods
mov
add
fnstenv
sbb
sub
jae
nop
pushf
frstor
frstor
xchg
lock
and
mov
mov
aam
fcmovb
leave
xchg
int3
jbe
push
jbe
jnp
inc
inc
xchg
mov
push
mov
xor
push
lods
int
outsl
dec
call
mov
aam
pop
inc
ret
mov
push
into
fwait
popf
inc
imull
jae
jbe
inc
call
aam
jae
lds
lods
js
scas
out
jg
dec
out
fistps
pop
leave
sub
nop
push
subb
cmpsb
in
test
and
js
mov
mov
adc
sub
lcall
jno
fwait
xlat
addr16
and
roll
clc
in
pop
cs
mov
inc
gs
scas
lahf
in
lea
ja
rcl
ja
test
test
pop
gs
xchg
xchg
pop
push
xor
daa
lods
outsl
mov
lea
xchg
daa
pusha
cltd
jno
lea
add
lret
mov
push
mov
jno
gs
ret
mov
test
enter
mov
ja
int3
fdivs
mov
dec
bound
lret
arpl
arpl
ds
fistpll
jo
aaa
inc
jnp
mov
jmp
push
xchg
out
xorb
rorb
sahf
push
push
mov
outsl
push
imul
arpl
popf
adc
pusha
cmpsl
cltd
xlat
jns
cli
imul
sti
adc
mov
insb
lcall
sarl
jp
inc
dec
fisubrl
in
repz
stos
xchg
add
xchg
lds
sbb
lods
sahf
mov
xchg
jg
jne
loop
repz
and
inc
mov
jge
in
mov
jne
lea
loop
outsb
mov
push
jbe
je
testl
jmp
jns
int
aas
pop
in
iret
leave
pop
inc
xor
cltd
aaa
shrb
jp
jns
jb
jns
int
sahf
insl
xchg
arpl
push
xchg
test
mov
adcl
xchg
push
stos
ret
int3
les
jb
jp
push
loope
jae
je
mov
popf
iret
mov
lcall
lret
jno
icebp
jl
aaa
insl
pop
lret
jb
andb
jp
xchg
insb
push
ss
stos
mov
jle
iret
jp
mov
aaa
lahf
arpl
ret
jb
xor
or
mov
cmp
jmp
sub
jb
inc
mov
into
xchg
andb
xchg
arpl
jg
xchg
div
jge
aaa
insl
dec
shll
jp
ret
cmp
mov
adc
pop
insl
lods
andb
icebp
dec
xchg
insl
js
insl
adc
sub
aaa
pop
arpl
jp
lret
les
mov
push
mov
sub
xchg
dec
push
aad
fnstsw
in
fs
andl
ret
cs
cmpl
jno
jo
imul
sbb
xchg
addb
xchg
xrelease
aad
subl
pusha
sub
mov
xchg
lods
mov
outsb
cwtl
iret
cltd
lret
mov
mov
adc
fcoms
lret
jmp
xchg
xchg
ss
jo
adc
fiadds
xchg
mov
aam
push
jno
das
andb
cwtl
neg
xchg
ja
js
or
pushf
pop
lret
sub
js
ret
test
xchg
push
sbb
pushw
cwtl
cmc
insl
imul
outsl
inc
inc
jne
lret
mov
leave
push
adc
xor
sub
jns
cmp
into
aam
sbb
jge
iret
and
pushf
stos
jnp
mov
xor
mov
pop
xchg
jns
inc
shr
pop
lds
cmp
mov
mov
cwtl
pusha
into
xchg
mov
lahf
lret
enter
xlat
out
mov
inc
xchg
sahf
mov
jne
or
adcb
fmuls
lret
sahf
lds
jb
lcall
push
addr16
setb
jb
xchg
outsl
jge
jnp
mov
rcll
outsb
cmp
jp
imul
xchg
iret
lcall
lret
fmuls
xchg
mov
ret
imul
lcall
or
cmp
xchg
add
inc
mov
inc
into
jb
cmp
mov
mov
mov
xchg
mov
fidivrs
adc
mov
int3
jge
enter
mov
jae
jo
imull
mov
in
fistps
mov
sub
mov
mov
jo
jl
stos
fidivs
or
mov
aaa
inc
xchg
jae
outsb
stos
mov
jns
add
mov
cmp
jne
pop
imul
xchg
sbb
mov
cmp
xchg
pop
in
imul
jb
cltd
jnp
mov
pop
xor
lret
or
rcl
jl
jne
jno
gs
jb
pop
nop
jl
push
into
lea
outsl
je
push
xchg
jg
jns
sahf
lea
pop
mov
shlb
mov
mov
addb
je
dec
out
adcb
xor
imul
lods
mov
jo
cltd
aam
aaa
outsb
xchg
dec
nop
nop
lret
insb
jb
inc
je
mov
mov
xchg
jp
adc
stc
sub
cltd
test
lret
jns
jno
lret
lret
pop
insb
cltd
or
and
cli
xchg
jnp
mov
orb
mov
jne
ds
enter
mov
ja
je
inc
jg
xchg
fildl
rcrb
cmp
cmp
inc
out
nop
pushf
cmc
push
insb
bound
lcall
xlat
cmp
mov
mov
rcrb
das
int3
xchg
mov
pop
mov
pop
rol
push
leave
shlb
cmpsl
pop
xchg
xchg
pop
adc
jbe
iret
and
lea
sahf
lcall
jno
imul
lret
jne
cltd
cmpsb
ds
mov
add
jl
or
nop
fisubl
repnz
cmp
xchg
mov
daa
mov
dec
cli
mov
and
xchg
push
lds
jns
pushf
jp
pop
cmpsl
jge
adc
jl
fdivs
mov
cli
fs
and
cwtl
cmp
xchg
mov
lcall
inc
iret
jnp
mov
jmp
ud0
jb
nop
das
mov
jl
push
adc
xchg
movsl
lods
xorb
lahf
cltd
lahf
jns
xor
cmpsb
cmp
xlat
mov
inc
xchg
mov
fstl
lock
dec
add
xlat
push
push
jl
sbb
pop
xlat
jp
outsb
jle
inc
xor
lret
test
jnp
add
jb
pop
mov
jg
ss
aam
aaa
jg
nop
lret
shrb
push
xorb
shlb
adc
xchg
mov
nop
fwait
sub
lock
lret
js
jmp
outsl
jle
mov
jl
jbe
jg
mov
inc
jp
fnstsw
lods
lds
cs
jle
xor
jbe
jmp
sbb
test
mov
pop
mov
cmp
xchg
jno
adc
ds
ja
stc
icebp
xchg
xchg
das
pop
fldl
fcomps
mov
je
cmp
das
lea
jg
fcmovne
mov
shlb
mov
push
inc
jg
arpl
psubb
out
iret
xchg
ja
jo
les
outsb
in
sub
movq
mov
xchg
imul
jno
jle
jo
xor
xchg
fisubl
pop
mov
test
je
sub
jle
cmp
jo
jl
lahf
mov
test
xor
clc
mov
sti
cli
test
xchg
lret
sbb
scas
mov
fwait
ja
jle
call
xchg
lret
xor
inc
lahf
repz
jae
js
icebp
loopne
adcl
into
fnstenv
cmp
jge
idivb
sub
add
shlb
pop
gs
cmpsl
sub
test
popl
jns
outsb
add
jne
inc
orb
out
loope
js
lcall
orb
jae
ret
sahf
jle
sbb
imul
aam
push
fmul
test
inc
xchg
mov
or
mov
add
mov
mov
mov
pop
imul
fisttps
cmp
inc
cmp
aam
or
adc
iret
sbbb
insb
xor
rol
and
sti
jle
add
push
push
cltd
xor
jle
scas
jp
xchg
shll
jg
inc
pop
jbe
or
outsl
add
mov
lcall
cmp
mov
sti
iret
cmp
sbb
sub
push
pop
lods
js
sbb
lret
and
xchg
sti
mov
lods
pusha
mov
jle
mov
jae
mov
pushl
shr
push
jo
test
fcmovne
jbe
stc
repz
mov
jns
xchg
jg
aaa
inc
fimuls
lcall
mov
into
outsb
mov
cld
fistpll
mov
je
jnp
nop
mov
jo
daa
mov
or
mov
movsb
pop
fists
inc
iret
scas
test
push
out
loop
insl
jg
aad
daa
xchg
xchg
sti
lods
stc
adc
push
push
or
shrl
lahf
outsl
jno
or
jge
inc
lcall
xchg
mov
add
mov
or
call
mov
jo
lcall
inc
insl
outsl
adc
pop
or
jae
movsl
mov
int3
and
jl
loop
push
icebp
mov
mov
js
cli
or
push
mov
fisttpll
adc
lea
mov
popf
xchg
cltd
repnz
outsl
js
xor
mov
cmp
pop
es
lret
mov
int3
pop
xor
sbb
xchg
mov
jo
xchg
jbe
test
push
mov
shll
js
subb
push
iret
mov
imul
lret
out
mov
pusha
xchg
clc
imul
lahf
out
incl
hlt
into
xor
add
scas
adc
push
jns
lret
aam
shll
jmp
push
mov
xchg
inc
adc
daa
fcmovu
sbb
xchg
and
mov
mov
mov
das
xchg
cmp
idivb
adc
subb
cmp
mov
mov
jge
ljmp
lret
int3
rorl
adc
mov
nop
mov
jae
pop
mov
lea
lods
mov
mov
adc
nop
xchg
and
or
xchg
mov
xchg
jbe
inc
mov
jge
ror
pop
shr
lods
lea
mov
mov
ja
psubusb
jb
xchg
fsubs
mov
lahf
push
add
mov
mov
xchg
mov
int
fwait
pop
int3
pop
xchg
insb
jp
pop
stos
xchg
popf
xchg
outsl
ja
lcall
lret
push
hlt
jge
mov
jo
mov
cmpsl
mov
mov
push
lods
inc
mov
push
mov
popf
jo
dec
fisttpl
xchg
add
sti
mov
popf
jl
int3
push
ret
xchg
into
inc
rorb
inc
or
leave
rorl
adc
lea
push
xchg
jno
insl
pop
mov
popf
inc
jnp
xchg
and
xchg
push
sbb
fldt
out
push
lahf
xchg
jp
cli
dec
mov
insl
mov
lret
cmp
mov
mov
lsl
sarl
shlb
cwtl
imul
ds
lods
nop
mov
ja
or
mov
pop
int3
cmp
xlat
repnz
lea
jns
inc
out
mov
fldcw
ja
dec
or
mov
lcall
push
aad
or
mov
add
inc
inc
jno
mov
scas
jnp
sbb
add
lds
mov
xorb
stc
xlat
xchg
andb
jle
ja
jge
push
jb
push
mov
insl
lods
mov
push
jbe
je
jno
inc
lods
inc
jb
mov
xchg
frstor
daa
jae
subb
je
fcoms
add
add
aam
leave
mov
inc
xchg
adcb
xor
cmp
mov
mov
rcrb
lea
jo
cltd
mov
mov
pop
imul
jnp
mov
add
into
in
rolb
xchg
xlat
dec
mov
aaa
popa
js
daa
inc
jg
or
cli
rcrl
dec
test
xchg
ds
mov
push
sahf
mov
inc
imul
jne
pop
jo
imul
inc
inc
jbe
cmpb
sahf
xchg
movl
jb
jno
js
arpl
pop
fwait
popf
and
xchg
mov
movsl
xchg
sbb
jns
jne
mov
mov
cmp
adc
mov
jge
or
loop
jl
inc
mov
mov
pop
mov
data16
stos
pushf
pop
pop
imul
lcall
negl
mov
fstpl
mov
ficomps
repnz
nop
mov
xchg
rcrb
jge
push
out
insl
rclb
mov
ja
sahf
aaa
ja
call
iret
in
bound
cmp
xlat
and
jbe
mov
mov
ds
mov
je
adc
inc
jae
jae
xlat
popf
jmp
jbe
inc
fmuls
je
jb
push
fdivs
xchg
jle
sub
mov
sbb
jp
cwtl
pop
arpl
mov
daa
test
fwait
pop
add
cmc
pop
das
jp
pushf
or
xchg
lret
sbb
cmp
insl
sarb
xchg
sbb
je
fwait
insb
call
jg
jp
lret
cmp
mov
mov
sbb
stos
popf
lcall
jb
sarb
jp
pop
sbb
stos
imul
adc
add
scas
xchg
mov
pop
iret
outsb
xchg
mov
cmpsl
inc
xorb
addr16
loope
lret
adc
mov
xchg
mov
adc
loopne
jle
out
push
xor
cmp
daa
mov
xchg
or
xchg
jae
rorb
xor
push
adcb
push
lods
cmc
push
cmc
imul
xchg
fdivrl
sbb
cltd
mov
jp
push
mov
inc
pop
stc
inc
cmp
lcall
mov
rcll
jbe
ficompl
push
leave
sti
subb
ror
imul
lds
xchg
hlt
mov
sahf
xchg
cltd
cwtl
dec
jp
inc
inc
xlat
lahf
pushf
jg
stos
cmpb
jae
mov
fwait
popf
lret
lahf
inc
jbe
into
lret
outsb
cmp
xchg
cwtl
xchg
fstpl
mov
insb
sti
push
scas
out
mov
inc
shll
outsl
mov
xchg
insb
jo
dec
xor
mov
jle
stc
fwait
js
test
xchg
xlat
outsb
mov
cmp
mov
mov
jb
ret
xor
nop
jne
outsl
lods
and
je
mov
arpl
cmpsl
in
outsl
adc
xchg
add
inc
das
add
and
jbe
jge
cmpsl
push
out
adc
into
insl
dec
xchg
cltd
cltd
pushf
add
call
mov
dec
test
adc
sahf
xlat
fs
mov
cmp
insb
jmp
cmp
xchg
push
je
sbb
xchg
mov
fmuls
jmp
xor
out
cwtl
adc
mov
outsl
xorb
pop
mov
fs
inc
mov
jno
xor
fwait
sahf
cmp
imul
out
dec
outsb
jge
fistl
movb
popf
sahf
std
call
dec
js
loop
imul
pusha
mov
outsb
mov
das
and
pop
inc
addb
es
outsl
jg
lods
jbe
imul
jns
sahf
pop
arpl
jle
jmp
ljmp
jo
mov
add
movsl
mov
xchg
xchg
lea
fisubl
xor
pushf
mov
sub
add
iret
xchg
jnp
imul
sub
jne
orl
mov
push
testl
adc
clc
dec
test
int
mov
loopne
mov
sbb
outsl
out
cltd
fwait
fcoml
andb
inc
mov
jno
and
rolb
movsb
sti
adc
cltd
push
cmp
jbe
lods
xchg
jecxz
jnp
mov
jns
inc
jecxz
sub
xchg
fiaddl
jno
call
lea
shlb
ss
arpl
call
aas
fstpt
mov
mov
hlt
cltd
pushf
push
fcomps
sahf
int
cld
jg
mov
xchg
xchg
mov
sbb
or
jb
xchg
mov
inc
cmp
pop
mov
arpl
loopne
mov
or
popa
xchg
outsl
cmpsb
sbb
pushf
mull
fmul
into
pop
lret
jmp
outsb
fisttpl
jp
sti
inc
enter
into
mov
inc
mov
insl
sbb
imul
jns
das
sub
xchg
mov
inc
mov
cltd
jl
cmpl
jne
push
stc
pusha
mov
jg
iret
shrb
xor
or
jnp
jae
into
pop
popf
in
popf
mov
sbb
push
jmp
leave
lahf
dec
aad
xor
je
jmp
pop
loopne
out
mov
jnp
inc
mov
sahf
jl
mov
je
dec
fwait
mov
sub
lcall
int
mov
rcll
lea
insl
lahf
andb
imul
pop
jg
jno
pop
jge
mov
jae
mov
frstor
mov
xchg
mov
stos
int
sbbb
jo
and
inc
cmpsb
mov
sahf
push
ja
xchg
or
iret
aam
out
sub
mov
adc
nop
mov
xlat
sbb
xchg
addr16
inc
das
movsl
hlt
dec
mov
inc
sti
jne
loop
add
inc
jne
xor
xor
iret
mov
repnz
sub
jno
pop
aaa
inc
mov
fwait
addb
xor
lcall
adc
mov
sti
jno
cmc
stc
jp
neg
pushf
and
xlat
jp
xchg
or
xchg
ds
call
adc
mov
pop
loop
lahf
nop
addr16
xchg
lret
mov
jae
je
daa
mov
shrl
lods
subb
cltd
lods
mov
add
xchg
fcoms
iret
out
mov
pushf
imul
cmpsb
inc
daa
inc
les
xchg
jns
imul
xchg
mov
fwait
mov
xlat
outsb
cwtl
and
jecxz
mov
add
mov
cltd
sub
fnsave
mov
addr16
cmpb
adc
jnp
add
pop
cwtl
jp
fwait
pushf
jg
int
inc
imul
loopne
jmp
inc
out
nop
out
mov
xchg
mov
xlat
cmc
js
int3
jg
imul
xchg
cmp
inc
inc
pop
int3
jp
aaa
jb
jae
lods
imul
xchg
pavgw
jg
add
test
jae
mov
lahf
mov
jo
and
icebp
fwait
xor
jl
jae
mov
insb
jae
mov
rorb
jno
outsl
mov
xchg
sbb
in
outsl
sahf
cmp
sbb
rolb
push
ds
leave
ret
mov
aad
push
stos
fwait
movsl
ror
fcoms
outsl
addr16
adc
push
fucom
out
ret
lcall
adc
xchg
ja
imul
popf
test
mov
lea
sahf
dec
mov
pusha
jae
dec
inc
shlb
xchg
je
lahf
mov
sti
test
lcall
aam
imul
or
into
das
or
daa
cmpsb
mov
push
mov
dec
cwtl
xlat
xchg
sti
mov
xchg
jno
je
mov
mov
add
mov
fmuls
ss
dec
sbbl
mov
pop
jge
xor
into
ja
pop
xor
pop
dec
push
imul
inc
xchg
out
in
insl
int
jg
or
mov
iret
jg,pt
pop
and
imul
dec
pop
lahf
das
xor
je
adc
insb
xorb
jnp
frstor
or
lcall
sarb
push
int3
js
lods
jge
lods
sbb
jnp
mov
gs
test
cmp
pushf
xchg
call
adc
jp
push
dec
mov
into
cltd
mov
jg
inc
cwtl
ret
lds
je
cltd
inc
or
popf
cmp
nop
je
icebp
lods
mov
mov
xchg
mov
sub
mov
or
inc
into
jne
js
inc
xlat
cmc
jno
sbb
dec
aaa
addr16
loopne
adc
mov
sbb
ja
mov
call
jmp
leave
into
jp
ja
xor
mov
ds
sbb
iret
aas
loope
outsb
stos
jp
outsl
lret
xor
out
iret
lret
insb
mov
cmp
shr
xchg
call
jae
es
ja
mov
insb
js
mov
inc
lret
lcall
push
loope
test
xchg
cmp
inc
xchg
mov
mov
xchg
inc
mov
xchg
xchg
insl
xchg
test
mov
mov
jae
cwtl
lret
das
xchg
inc
mov
jne
mov
xchg
fsubrs
pop
test
add
lods
mov
adc
dec
jmp
add
out
nop
inc
xor
mov
leave
mov
js
mov
add
daa
pushf
xchg
sbb
mov
nop
xchg
adc
pop
and
lock
jno
daa
inc
mov
ss
lcall
jns
in
mov
inc
mov
fistl
call
arpl
fistl
mov
lret
fisttps
jae
inc
cltd
jp
jnp
repnz
xchg
ficompl
xchg
xor
xchg
lods
cltd
insb
sub
adc
jmp
cmp
lea
jne
jl
imul
js
cwtl
insl
imul
test
adc
xchg
adc
or
sarl
jno
or
and
pop
popl
mov
icebp
xchg
sbb
pop
cmp
ja
ja
out
xchg
lahf
sahf
jnp
cli
add
mov
repz
mov
jge
mov
mov
lret
jae
push
xchg
enter
mov
cmpsl
mov
adc
pop
mov
or
xor
mov
mov
mov
mov
adc
mov
sub
xchg
lea
jp
xchg
lret
scas
jnp
es
out
jno
xor
outsl
mov
aad
fidivrs
pop
cwtl
incb
js
lea
push
ljmp
push
pusha
aad
push
test
fadds
mov
jno
jg
in
sub
push
jmp
jns
jnp
cmp
cmpb
sete
sub
ja
clc
mov
jne
mov
cltd
mov
sbb
pop
in
sar
xchg
inc
mov
outsl
add
outsb
push
lods
mov
mov
jne
inc
imul
es
leave
jae
xchg
mov
aaa
xor
add
xchg
or
adc
jb
or
das
jb
mov
cmp
mov
adc
int
dec
adc
addr16
cmpb
pop
adc
xor
xchg
insl
jl
inc
cltd
dec
jb
mov
jae
test
iret
inc
pop
into
outsl
shld
xchg
das
or
loop
xchg
int3
sub
jo
cmpb
mov
test
inc
shll
lcall
sbbl
popf
repz
fcomp
sub
fadds
iret
mov
cmpsl
sub
cwtl
lcall
jne
aam
sub
xor
fadds
out
jp
jl
ret
inc
into
or
jne
and
cs
imull
adc
xchg
or
cld
leave
pushf
inc
pop
lcall
cmp
xlat
sub
cmp
insl
fmuls
mov
movsb
daa
xchg
mov
mov
jno
cli
and
fcmovb
sub
fwait
xchg
jmp
pop
popf
or
mov
xlat
pop
mov
adc
rolb
lahf
int
stc
jle
cmp
or
jle
mov
ret
aad
or
fisttpl
fiaddl
mov
cwtl
jb
mov
mov
adc
sub
push
cld
dec
sahf
data16
pusha
xchg
arpl
cmp
lods
pushf
rcrb
insl
cwtl
insl
dec
nop
pop
xor
imul
xor
jp
xchg
pop
mov
push
adc
dec
das
dec
xorl
imul
xchg
ds
mov
test
mov
mov
xchg
dec
scas
push
test
or
and
mov
push
fidivrl
lods
shll
pop
mov
lret
ret
xorb
adc
sub
into
stc
movsl
mov
movl
xlat
pop
out
test
lcall
sub
jg
pop
mov
or
sbb
sbb
cli
push
mov
aam
add
rclb
lds
jns
aaa
jb
rcrb
mulb
lcall
jmp
mov
leave
mov
daa
enter
fsubrl
jge
lcall
cli
imul
dec
sub
imul
lret
mov
leave
xchg
push
jp
int3
stos
mov
stc
test
push
arpl
cmp
xchg
int3
lret
sar
fwait
cltd
push
mov
mov
xchg
or
dec
inc
xor
in
mov
test
xorb
push
mov
je
pushw
xchg
test
shrb
loopne
leave
xchg
cld
js
cli
int3
push
xlat
pop
pushf
sub
pmovmskb
cmp
mov
fisttps
add
and
mov
jae
fdivrs
inc
insb
daa
push
jno
cltd
push
arpl
lcall
cwtl
jp
cld
push
into
pop
aam
ja
lret
movsl
or
dec
mov
leave
pop
jae
dec
stos
das
fistl
adc
lock
mov
mov
xor
mov
adc
fbstp
xchg
jl
cmpsl
jp
inc
push
pusha
je
cli
mov
xor
mov
pop
insb
adc
mov
test
imul
out
fnsave
out
sbbb
mov
les
xchg
dec
fwait
xchg
inc
xchg
daa
xor
push
stc
adc
mov
insb
lcall
sbb
subl
rcr
cwtl
and
das
jae
mov
mov
lahf
js
leave
addr16
sub
iret
hlt
inc
outsb
or
jnp
jne
pop
jbe
pop
xchg
mov
jp
dec
mov
inc
jl
inc
sub
int3
mov
and
jmp
filds
outsb
xor
jbe
hlt
lcall
pop
xlat
ret
adc
push
inc
sub
lods
mov
or
push
and
and
mov
aam
ror
push
pop
push
xchg
inc
lahf
lds
lods
jp
cmc
shl
jo
mov
jl
ja
mov
mulb
sbb
lds
lret
into
jg
jns
cmpsl
pop
or
ret
jecxz
pushf
cmp
mov
icebp
ds
lahf
cmp
xlat
push
jnp
jne
loope
movsl
push
fcmovnbe
fcmovnbe
iret
icebp
inc
stos
aad
mov
cmp
adcb
inc
inc
pop
lahf
pushf
ret
jnp
and
sti
mov
outsb
aam
jo
pop
ja
mov
dec
mov
mov
or
aas
xlat
mov
pop
ret
test
pop
pop
mov
mov
shlb
icebp
adc
xor
xchg
inc
test
orb
jg
imul
push
jne
fistpl
xchg
lea
lea
and
dec
mov
inc
xchg
xchg
mov
push
leave
lret
mov
add
mov
add
jbe
mov
lret
ja
sbb
mov
cmp
je
sar
jno
cpuid
push
outsl
jnp
pop
jl
xor
xchg
cmpsl
arpl
subb
aad
rorb
addr16
xchg
fldt
jmp
mov
out
push
jbe
in
inc
test
dec
hlt
mov
in
or
mov
jne
or
imul
inc
fistps
subl
outsl
dec
je
cmp
mov
lret
or
call
push
and
mov
jo
mov
jl
lahf
and
xor
jecxz
pushf
push
mov
sahf
cmpl
inc
xor
jne
out
lea
xor
sub
jmp
outsl
cwtl
je
nop
adc
xchg
and
daa
mov
xchg
push
push
mov
test
jo
pop
out
imul
cmp
out
mov
jb
sbb
xchg
sahf
jl
mov
inc
leave
jns
ds
daa
xlat
cltd
push
jge
ja
push
jecxz
jne
lret
push
jge
mov
sahf
decl
nop
mov
xchg
xchg
lods
xor
mov
dec
mov
xchg
jne
sub
mov
inc
cmp
arpl
pop
adc
cmp
adc
call
out
lcall
imul
loope
jl
cmp
inc
lcall
xchg
jp
imul
stc
jne
jp
lret
negl
xchg
insb
jo
popa
jge
add
push
out
xchg
jbe
insb
popf
mov
xchg
xchg
fstpt
dec
cld
and
movsl
clc
mov
insl
xchg
js
lcall
jmp
adcb
sub
mov
les
jl
insl
nop
mov
js
dec
mov
cltd
jns
jb
cmc
nop
xlat
pop
xchg
loopne
int3
cmp
cmp
fnstsw
sub
xlat
sahf
jp
xchg
xchg
addb
jae
jno
mov
dec
lods
jnp
sbbl
test
mov
leave
imul
mov
mov
test
stos
pop
hlt
jae
mov
cwtl
mov
outsl
js
mov
xchg
cmp
inc
in
xchg
jbe
mov
push
xchg
mov
jnp
fwait
push
inc
je
das
mov
cwtl
fstl
inc
pop
leave
pop
push
adc
loop
lahf
mov
inc
mov
js
mov
jo
inc
inc
jg
loop
in
mov
popf
pop
int
cltd
mov
jno
lea
mov
mov
adc
cli
mov
mov
push
sahf
je
and
lret
jb
fsubs
mov
pop
inc
je
or
and
test
push
arpl
aas
jnp
aaa
jne
push
jo
ret
lret
push
dec
push
sarb
push
mov
mov
xchg
nop
mov
nop
aaa
fidivrl
clc
lcall
addr16
ljmp
insb
mov
jae
xchg
mov
xchg
pop
cmpl
adc
adc
lahf
xchg
mov
xchg
pushf
testl
jne
jo
cmp
lea
add
mov
imul
jp
and
xchg
iret
inc
imul
mov
leave
mov
jne
inc
jnp
inc
lret
jp
and
cmpb
inc
insl
mov
aas
test
mov
jns
cmp
pop
outsl
jns
pushf
jnp
cltd
jno
dec
test
mov
mov
jg
jle
mov
sbb
jns
sbb
jbe
xorl
dec
xor
push
cmp
je
sub
insl
jno
lcall
add
push
mov
fwait
jnp
inc
jl
xorb
cwtl
cmp
xchg
mov
pop
mov
adc
mov
jo
repnz
imul
push
int3
xchg
xchg
inc
add
sbb
dec
lods
leave
lret
lods
mov
add
lret
mov
cmp
dec
jno
lcall
xlat
pushf
cld
or
jae
sarb
fwait
and
cld
jecxz
or
jmp
inc
aad
out
mov
add
cmpsl
cmp
cmp
mov
jle
mov
insl
mov
cltd
fisubs
xor
mov
xchg
jbe
mov
rcrl
inc
mov
je
mov
jbe
mov
fdivrs
lahf
into
cwtl
lcall
cmc
pop
jge
mov
xlat
xor
rolb
into
dec
lret
xchg
arpl
fwait
lcall
lret
sahf
jo
jp
mov
imul
cmpb
mov
lahf
jmp
leave
adc
jns
jg
jbe
adc
pushf
push
lahf
lock
sbb
add
jp
mov
insl
jbe
fsts
ficompl
push
mov
mov
jb
fadds
aam
sbb
mov
mov
mov
inc
int3
xorb
jae
and
or
jnp
jmp
imul
js
jnp
mov
cmpl
xchg
jge
cltd
xchg
js
mov
jp
iret
push
int3
push
lahf
repz
adc
out
jb
addr16
jae
lods
jg
test
lea
inc
push
inc
dec
sar
mov
outsb
adc
prefetchwt1
js
imul
imul
xor
leave
push
lods
inc
xchg
aaa
adc
jnp
subl
jg
jge
aaa
mov
cltd
lret
cli
pop
jg
roll
mov
jns
in
std
sub
imull
mov
aaa
push
nop
int3
fcmovnbe
lret
fiaddl
leave
das
xlat
mov
mov
lahf
mov
jle
repnz
jge
ss
push
aam
arpl
xchg
lods
sti
lods
in
sbb
cmpsl
dec
fdivs
outsb
shrl
test
xor
es
and
and
mov
mov
xor
ja
pop
dec
dec
cmp
imul
std
icebp
pop
cli
imul
and
ds
add
test
test
inc
mov
pushf
fldt
repz
inc
fnstenv
popl
lods
les
xorb
mov
lret
pop
in
jne
pop
xlat
hlt
arpl
mov
inc
rcl
lcall
jge
pop
xchg
mov
lret
fidivl
lcall
out
mov
add
daa
insl
adc
scas
ja
push
or
fwait
lock
inc
int3
mov
shlb
int
xor
nop
inc
mov
adcb
mov
fbstp
adc
cmp
cmp
cli
and
or
leave
mov
lahf
jge
pushf
inc
xchg
jl
push
aam
fwait
sarb
lods
jbe
mov
data16
enter
adc
sarl
cmp
cld
mov
adc
jecxz
fsubs
sbb
sahf
inc
movsl
popa
mov
adc
lock
mov
mov
js
in
mov
roll
stc
adc
stc
push
and
fwait
ja
add
cmpsb
imul
lahf
lods
iret
int
mov
inc
sti
jg
rolb
xchg
push
sbb
stc
jae
enter
xchg
ja
sbbb
int3
out
cmp
xchg
mov
ficompl
xchg
outsb
enter
cmp
sbb
jl
adc
dec
push
mov
push
outsl
pushf
testl
sbb
inc
jg
pushf
daa
lahf
insl
js
imul
fwait
xchg
mov
cmp
lret
mov
xchg
dec
data16
cmp
jo
in
jmp
xchg
mov
push
imul
jns
les
xor
lds
xchg
je
jae
jne
push
and
cmp
xchg
cld
xchg
xchg
pop
lret
xchg
je
cwtl
iret
mov
cli
push
jo
xchg
js
push
cmp
and
mov
mov
inc
lcall
dec
xchg
fisttpl
xchg
xchg
pushf
sbb
jns
outsb
xor
inc
push
mov
lahf
dec
iret
insb
int
xchg
lcall
mov
leave
jno
inc
inc
sahf
or
ja
lcall
and
movb
loope
mov
ret
insl
js
pop
jl
xchg
inc
xchg
subb
idivl
in
mov
aad
xlat
int3
xchg
inc
pop
xchg
jl
cmpl
inc
insl
mov
jne
ret
test
xchg
lret
jae
sahf
mov
mov
cmp
jns
aas
add
mov
inc
test
lods
jb
jl
adc
sahf
fisubl
and
cmp
iret
pop
rclb
fmulp
push
and
push
les
sub
sahf
xlat
call
cwtl
loope
fwait
out
fildl
jp
lret
rorb
cmpb
into
mov
mov
fwait
daa
jb
nop
mov
mov
jns
jo
push
mov
stc
mov
lahf
cmpsl
push
je
xchg
mov
mov
adcb
xlat
outsl
movsb
das
jl
js
dec
loope
cmpb
lods
dec
popf
fadds
pop
jp
jp
std
cld
and
xchg
idivb
or
mov
push
mov
nop
fwait
pusha
ret
push
sbb
iret
add
aaa
adc
xlat
mov
add
ret
in
pop
push
outsl
push
and
cmp
sub
push
push
lahf
test
aad
ja
mov
mov
dec
xchg
aas
xchg
mov
push
sub
dec
jle
dec
xchg
jecxz
jne
dec
mov
ja
int3
movsl
jnp
mov
cmpsl
mov
mov
into
inc
jbe
jnp
jns
mov
xor
cmp
mov
sahf
mov
pop
mov
cmovns
rcrb
jbe
jb
xor
stc
outsb
mov
inc
mov
adcb
stc
xchg
fsubs
roll
outsb
mov
mov
or
xchg
sahf
mov
pop
mov
in
shll
fistps
aaa
pop
jae
inc
dec
in
mov
aam
jbe
in
lahf
cmpsl
mov
mov
aaa
mov
jecxz
insl
outsb
dec
sub
pop
xlat
add
les
push
xor
add
int3
pushf
aaa
xchg
mov
lcall
clc
inc
xchg
inc
push
pop
pop
dec
jne
cmp
xorb
xchg
push
cli
and
inc
xor
movsl
sarb
test
iret
jns
ret
popa
mov
jne
jo
cmp
mov
aad
lcall
jl
lret
xor
rcl
mov
popl
dec
adc
xchg
adc
jnp
int3
lcall
push
mov
insl
push
and
push
xchg
arpl
mov
jno
xor
sbb
outsl
ja
add
mov
lcall
cmp
jecxz
shll
mov
stos
into
fs
shr
sub
int3
mov
sbb
xchg
aam
insb
shrl
cmp
jbe
jmp
aad
iret
insl
mov
inc
das
xchg
ja
and
mov
outsl
pop
jne
jae
mov
into
cmp
jl
arpl
imul
xchg
mov
leave
jo
lea
jne
xlat
mov
insb
jge
out
sub
jne
dec
in
jl
xchg
push
cld
ss
cmp
clc
pop
lods
lcall
push
shlb
cltd
clc
or
push
jle
scas
xchg
sbbb
and
pop
scas
xchg
fistpll
sbb
xchg
mov
aam
mov
jb
xchg
jl
lahf
test
jnp
nop
sub
mov
iret
mov
jae
daa
jo
pop
in
fimuls
xchg
mov
xchg
in
popf
mov
or
lcall
lea
ja
lret
mov
and
add
fs
inc
jne
fsubrs
mov
mov
leave
in
sbb
jge
outsb
imul
or
leave
jl
orb
cltd
xor
xchg
lret
lds
xchg
outsb
aam
mov
jmp
mov
popf
fwait
cmp
inc
pushf
adc
adc
inc
push
push
ja
inc
inc
fistl
jno
jae
jg
mov
js
dec
orb
lcall
mov
roll
lea
push
lcall
pop
add
sti
pop
pop
xlat
push
push
jl
mov
lcall
outsl
adc
jae
pop
inc
inc
je
iret
xchg
xchg
xchg
shrb
pop
cs
and
pop
xchg
lds
bound
cmp
stc
xchg
inc
cltd
xchg
jo
popa
fldenv
imul
sub
daa
mov
sahf
xchg
inc
push
ficoms
call
jns
cmp
jp
push
jns
xchg
xchg
loopne,pt
xor
mov
sbbb
cmp
nop
jae
mov
lcall
lahf
or
lahf
popl
jbe
jp
aad
or
mov
push
adc
xchg
lahf
jne
mov
xchg
ja
pop
mov
lahf
jl
push
jns
xchg
pushf
or
xchg
fmulp
or
leave
cltd
mov
adc
add
sub
pop
sbb
js
sub
mov
xor
mov
sbb
imul
mov
ss
cmp
mov
lahf
pushf
xchg
pop
repz
xchg
lea
push
mov
mov
pop
leave
lret
aad
jbe
test
aad
mov
adc
cmp
cld
sahf
icebp
jno
pop
rcll
scas
lahf
fnstsw
test
add
mov
push
mov
and
andb
xchg
mov
inc
mov
aas
cmpsl
push
lods
jb
addr16
orl
dec
or
sti
pop
dec
daa
inc
dec
jmp
mov
and
lea
xchg
lods
jl
xor
nop
fbstp
inc
mov
addb
xchg
xlat
xor
jnp
pop
pop
lea
pop
jb
jbe
mov
es
push
jno
pop
ret
cmp
fwait
mov
mov
addr16
mov
xorb
inc
xchg
into
jecxz
xlat
jae
mov
push
fmuls
js
enter
xchg
lahf
jg
push
fstp
pushf
fwait
adc
push
sbb
inc
imul
aam
lea
into
pop
mov
or
push
leave
mov
and
iret
or
mov
leave
mov
stc
push
xor
dec
inc
mov
and
cmp
sahf
jns
cltd
mov
sarb
ja
fwait
push
inc
and
int3
cmc
adcl
outsl
pop
add
jne
or
pop
mov
cmp
xor
fnstsw
sarl
fwait
mov
imul
stos
xchg
push
out
xlat
repz
fistl
mov
inc
roll
jne
out
xlat
jno
out
jo
add
ss
jp
xchg
int3
leave
imul
shll
jmp
cmp
mov
andnps
dec
push
stos
jae
xor
adc
pop
xchg
cltd
dec
je
imul
stc
xor
push
inc
sbbl
cmpsb
jne
mov
mov
xchg
mov
shrl
xor
loopne
aam
push
aaa
push
enter
mov
and
inc
imul
lods
adc
mov
dec
xchg
nop
jge
lret
inc
xchg
fsubp
jg
and
inc
jl
inc
outsl
push
out
mov
lea
mov
xor
jp
mov
test
mov
cmp
push
out
fwait
sbb
imul
and
jg
adc
lahf
pop
shrb
xchg
lcall
jmp
lea
cmp
jns
enter
xchg
cmp
lods
aad
adc
or
jmp
mov
out
mov
jle
outsb
mov
jbe
lret
lds
ja
subb
xchg
xchg
test
mov
popl
jle
outsb
daa
sub
xor
xchg
sahf
ja
in
rclb
das
in
mov
jo
lea
clc
into
xchg
lds
lret
jg
ja
inc
das
xchg
nop
jg
cltd
push
pop
jmp
int3
ja
sti
xchg
pop
iret
clc
je
pop
popf
leave
xchg
ret
cmp
inc
mov
jnp
dec
adc
adc
into
inc
imul
adc
orb
lret
push
fidivrl
xchg
xlat
pop
mov
push
cmp
cmp
inc
mov
xchg
fwait
sub
push
daa
lahf
jp
nop
js
test
push
fldl
mov
xchg
xlat
test
xlat
rclb
pop
push
arpl
lret
loop
iret
jae
mov
jge
mov
nop
push
pop
cmp
add
jle
sbb
push
cmp
and
jle
dec
xchg
imul
push
icebp
cs
pop
das
push
lea
inc
mov
lret
xchg
nop
mov
xorb
imul
scas
push
xchg
or
xlat
push
jge
cltd
adc
pop
in
aaa
fcmovne
mov
mov
mov
lahf
adc
arpl
insb
outsl
nop
imul
jp
jecxz
xchg
lcall
in
int3
rolb
xor
scas
mov
insb
jb
js
cmp
jle
dec
lods
push
ja
mov
pop
sbbb
lea
das
pop
int3
lret
jle
dec
cltd
lea
outsl
jns
nop
jl
pop
js
jb
pop
pop
popa
and
xchg
xchg
jle
into
jp
jae
jae
or
nop
into
ja
insl
jae
lcall
mov
mov
cmp
pusha
inc
int3
jno
mov
adc
dec
fdivrs
mov
or
jl
je
lock
inc
sbb
pop
into
pop
push
ja
pop
jp
icebp
outsl
ret
xchg
fucomip
insb
xchg
xchg
mov
int3
xchg
ret
addr16
mov
cltd
push
xchg
lret
mov
lcall
stc
or
aam
pop
mov
pop
ret
jl
imul
push
mov
outsb
outsl
inc
outsl
mov
aaa
or
xchg
fisubrs
lock
pop
pop
add
mov
int3
jle
cmp
mov
xchg
jns
lret
lcall
sub
je
inc
es
jb
jge
jbe
jg
jns
lcall
jae
test
mov
xchg
inc
ret
cmpb
movb
sbb
cmpsl
cmp
xchg
xlat
mov
lcall
mov
cmp
popf
jae
xor
jmp
xor
jo
iret
sarb
xchg
fidivrs
cli
sub
add
outsl
scas
mov
test
xlat
fcomps
stos
add
lret
jne
adc
xor
jecxz
sub
insl
jns
icebp
hlt
mov
xlat
fwait
lret
fists
push
testb
inc
mov
into
imul
leave
adc
inc
rcll
in
push
inc
xor
lcall
mov
aas
or
fucom
fbld
popf
test
jno
jne
mov
jnp
data16
adc
mov
xchg
mov
in
jl
xchg
mov
jg
stc
loop
dec
jle
cs
cmp
jg
icebp
sahf
js
imul
clc
xchg
andl
aaa
jae
cltd
orb
push
mov
jmp
aam
inc
testw
push
vmwrite
mov
mov
rcrl
pop
arpl
leave
xchg
add
inc
mov
arpl
cmp
jp
into
xor
mov
jne
sub
and
enter
cltd
sar
out
fsubs
push
mov
and
jne
dec
fldcw
mov
or
insl
jg
or
cmp
mov
rorl
js
xchg
cmp
lcall
aam
xchg
cmp
aad
inc
push
incl
mov
imul
andb
mov
pop
stc
mov
pop
inc
xchg
lcall
cmp
push
xor
cmpsl
cwtl
xchg
mov
inc
das
nop
sub
aam
mov
insl
ja
stc
test
movsb
repz
xchg
push
std
inc
hlt
les
and
jg
sbb
pop
arpl
pop
push
pusha
pop
into
and
sahf
xchg
mov
ds
lret
mov
sub
pusha
das
mov
jge
leave
cmp
aam
sahf
jo
mov
shr
je
outsl
xor
test
push
lds
pop
inc
fistpl
dec
pop
mov
lahf
fildll
ljmp
mov
dec
test
clc
subl
cwtl
rorl
mov
jo
iret
jb
das
imul
ds
inc
cwtl
xchg
pop
push
push
out
jp
data16
fwait
insb
imul
fiadds
jne
iret
inc
adc
leave
js
jle
xor
jge
jo
in
sahf
cltd
std
sbb
outsl
jns
mov
pop
inc
imul
lea
xchg
xchg
mov
insb
popf
call
lcall
daa
in
insl
jecxz
push
jl
xlat
lahf
jne
imul
aaa
xchg
aaa
je
jnp
mov
std
adc
outsl
int3
mov
rcl
adcb
insl
fwait
je
xchg
call
inc
mov
imul
push
xchg
xchg
sbb
adc
jae
mov
dec
int
mov
lcall
jl
pop
arpl
sub
fisttpll
dec
pop
movsb
jne
popf
test
pushf
int
pop
sahf
orb
in
adc
aas
lret
aas
sbb
in
in
jo
call
je
xor
gs
cmp
jge
movsl
adc
add
jb
sbb
dec
mov
mov
mov
gs
sahf
mov
xor
mov
stc
and
setae
mov
into
jb
xlat
or
xchg
mov
shrb
mov
cli
ret
int3
xlat
xchg
mov
and
popf
cmp
pop
scas
loop
mov
lret
aad
aam
pop
hlt
mov
mov
ficoms
out
mov
jne
lea
lcall
sarl
out
jo
jmp
xchg
mov
mov
pop
xchg
cltd
jecxz
xchg
aam
daa
in
jnp
xchg
add
sub
cmpsb
adc
test
insl
jge
sarl
test
pop
jns
aad
adc
ror
shrb
jne
mov
les
mov
xlat
mov
jo
mov
shl
push
iret
inc
daa
nop
mov
aad
insl
xchg
out
xchg
test
cmp
outsl
push
nop
mov
sti
cwtl
sub
xchg
shrb
pushf
aam
lahf
xchg
push
daa
scas
jl
fsubs
outsl
test
xlat
outsb
jnp
pushf
jno
mov
fisttpl
into
mov
leave
xchg
outsl
and
test
jno
cmp
jae
daa
pop
int3
jb
mov
or
sbb
sub
mov
inc
repnz
jae
push
cld
mov
nop
inc
mov
lret
jb
or
nop
fnsave
xchg
sub
add
xchg
int3
mov
addb
scas
xchg
cmp
jo
xchg
cmpsl
add
lea
test
nop
pop
out
mov
test
fists
outsl
mov
fisttpl
jae
sbb
test
cwtl
xlat
shlb
lahf
push
mov
lods
mov
xorb
gs
and
or
adc
mov
aad
into
ja
mov
hlt
xchg
xchg
xchg
fwait
xchg
push
test
pop
jg
lods
lret
lea
out
fistpll
shrl
int
cmp
popf
jnp
and
sub
mov
add
out
xor
nop
inc
and
iret
mov
jnp
les
mov
std
and
cmp
jo
sti
jae
cmp
imul
iret
cwtl
push
ds
sub
fldl
xorl
cmp
push
test
mov
cmp
int3
dec
stos
push
inc
mov
inc
jg
mov
jo
jle
jns
insl
out
jge
outsl
sub
rclb
lret
adc
sti
xchg
mov
xchg
lods
cmpb
lcall
jae
test
insb
sbbb
and
or
jnp
mov
sub
je
adc
arpl
pop
jg
jno
xchg
push
xchg
or
jns
jle
mov
outsb
ja
mov
jmp
int
cltd
jecxz
jnp
fwait
push
fst
mov
out
insb
outsb
call
pusha
sbb
imul
mov
xchg
out
outsb
jo
xchg
push
test
jp
add
mov
push
jae
inc
mov
mov
jb
hlt
shl
mov
adcb
ret
in
ja
sbb
daa
das
lret
mov
into
xlat
inc
inc
mov
lahf
jle
lcall
jo
lcall
inc
sbb
nop
lret
outsl
jp
outsl
adc
js
xlat
outsl
aam
jge
out
lods
jns
xorb
popf
leave
mulb
xchg
jle
inc
sahf
outsl
subb
pop
xchg
jecxz
scas
xlat
arpl
jg
mov
cwtl
lcall
je
cmp
cmpl
sahf
push
mov
push
jns
jb
rcrl
fstpt
addl
pop
jl
xlat
movsl
addb
jns
mov
sahf
mov
cmpsl
lds
jne
inc
xchg
push
rcll
push
out
fwait
jns
dec
arpl
push
arpl
jns
mulb
jnp
jns
nop
jnp
subb
inc
rcrb
out
jae
cltd
sbb
jb
or
mov
add
mov
add
pop
jae
xchg
mov
mov
movsl
jne
jb
enter
push
iret
jl
jo
add
out
xchg
or
ror
je
lods
imul
or
fdivs
enter
ja
mov
jge
or
inc
dec
outsl
jl
xchg
stc
xchg
xchg
imul
insl
lcall
fsubrs
popa
mov
jae
inc
mov
cwtl
insl
cltd
jnp
push
sbb
or
jno
jp
pushf
loope
pop
xchg
icebp
lret
filds
leave
movsb
das
ficoml
xchg
mov
stos
xchg
in
mov
or
call
loopne
jp
in
mov
leave
xlat
xor
test
or
dec
xor
push
pushf
xchg
xor
sbb
outsl
mov
lret
arpl
outsl
shr
aad
addr16
fwait
mov
mov
sub
ror
test
cmp
cmpb
cmp
call
cltd
lahf
sbb
and
les
sahf
imul
mov
inc
cmpsb
sbb
cs
psubd
inc
nop
cmc
daa
jo
lret
xchg
mov
fisubrs
outsl
inc
lock
jb
xor
lahf
inc
out
jns
ljmp
imul
fwait
push
xchg
sti
sahf
inc
jg
arpl
jno
mov
and
jb
mov
icebp
test
jnp
xchg
lcall
cmc
js
repz
push
lret
mov
jmp
jecxz
inc
jl
js
xchg
int
out
push
sbb
divl
lahf
push
mov
fildl
mov
jno
cmp
inc
push
xchg
int3
push
cmp
mov
mov
repnz
sub
push
imul
enter
push
iret
into
fsts
pop
aam
mov
int
test
les
adc
jmp
arpl
push
push
push
arpl
cmpl
pushf
lret
add
ret
add
xlat
mov
inc
ret
imul
inc
lret
rorb
ret
shlb
call
les
or
imul
out
testl
or
sbb
aad
xchg
jne
dec
jo
xchg
push
lods
cmp
fistpll
xlat
outsb
xchg
imul
dec
pop
iret
mov
dec
arpl
or
add
pop
mov
popa
arpl
mull
push
in
sbb
rorl
arpl
inc
aaa
rcll
arpl
jmp
or
push
arpl
jb
pop
push
jl
hlt
mov
jno
arpl
inc
jl
dec
seta
insl
jae
imul
lret
dec
cwtl
and
jl
dec
xchg
push
js
pop
sbb
pop
mov
test
movsb
and
stc
outsl
inc
jbe
push
scas
xchg
jg
cmp
shll
nop
cmpb
push
shl
rcll
jmp
sbb
jnp
les
pop
push
mov
jo
push
mov
outsl
out
mov
or
mov
xchg
or
int3
fidivs
mov
jbe
arpl
js
xor
xchg
rcl
xchg
subb
pop
aaa
popf
cwtl
xchg
movsl
xchg
push
sahf
mov
test
jecxz
lds
dec
mov
xchg
inc
push
xor
popa
mov
sbb
mov
add
lcall
mov
adc
mov
leave
push
fists
jnp
lret
sarb
push
jge
cmp
sub
mov
daa
aaa
jp
mov
js
jns
fwait
test
push
cmc
sub
jne
insl
sbbb
sar
lret
test
dec
cwtl
xchg
outsl
add
cltd
jns
jo
out
test
outsl
xchg
lret
inc
lahf
iret
rolb
xchg
cmp
mov
lea
orb
mov
mov
xchg
inc
inc
dec
jl
cwtl
lcall
inc
xor
and
fimull
outsl
imul
lea
xchg
dec
jno
ljmp
xchg
ja
fwait
pop
xchg
mov
nop
mov
add
cwtl
jo
ret
loop
ficoml
hlt
jne
stos
xchg
sahf
nop
push
jp
rep
cltd
out
pushf
jae
inc
mov
mov
jmp
mov
negl
push
push
xchg
jo
arpl
mov
arpl
or
aam
sub
frstor
arpl
xchg
sub
jns
pop
sbb
xchg
pop
fisubrs
loopne
arpl
sbb
adc
xchg
jbe
stc
in
pop
arpl
stos
int
push
jnp
pop
add
sbb
lahf
aaa
lds
leave
add
jecxz
popf
cmpsl
fidivs
mov
dec
xorl
cmpb
sub
xchg
das
lahf
sarb
jb
mov
pushf
pop
pop
push
adc
pusha
lods
arpl
add
lcall
jge
mov
cwtl
in
je
inc
sub
jecxz
xlat
lcall
je
push
jle
xchg
jge
pushf
into
iret
adc
xchg
push
aam
lods
popf
jnp
mov
mov
or
fucomi
lods
xlat
add
jo
mov
xor
jns
out
pop
ss
loopne
stos
xchg
jge
jg
lcall
cltd
movsl
imul
push
adc
xor
mov
cmp
lock
xchg
js
mov
pop
and
mov
loopne
xchg
mov
sahf
cli
int3
inc
pop
mov
push
bound
jl
mov
sti
xlat
lods
add
dec
ss
fdivr
inc
outsl
cli
sub
pop
adc
mov
mov
nop
lds
fidivrs
pop
jp
arpl
inc
fbstp
jb
add
jne
jae
sub
lret
outsl
jb
fldl
push
or
pop
or
pop
adc
out
mov
mov
in
cs
pop
mov
jle
xor
sarb
pop
cwtl
imul
lret
and
lods
jg
movsb
xor
clc
repnz
xor
and
mov
insl
pop
mov
cwtl
cltd
leave
xchg
leave
jmp
jp
xchg
in
adc
push
mov
mov
mov
std
jp
xchg
lcall
mov
icebp
data16
nop
sahf
outsl
aaa
nop
das
and
lret
int3
jge
fst
pusha
repnz
mov
pop
outsl
ret
mov
jg
mov
mov
out
lahf
icebp
xchg
xchg
adc
outsb
mov
cltd
jl
js
adc
dec
inc
mov
jnp
lahf
push
mov
mov
lret
jle
int3
inc
out
mov
outsb
jg
or
movl
lahf
jl
insl
xor
mov
outsb
jae
leave
outsl
test
aas
icebp
jns
sbb
cltd
xor
inc
lcall
xchg
dec
or
xchg
add
inc
inc
lcall
inc
nop
jg
mov
je
negl
mov
je
and
aad
jno
lret
arpl
sahf
int3
lcall
xchg
iret
jo
push
cltd
dec
mov
jp
push
iret
inc
inc
rcl
jnp
insl
lcall
push
rclb
das
mov
outsb
xchg
imul
xchg
mov
int3
int
stos
imul
andb
iret
cs
xchg
xchg
inc
jmp
imull
call
sbb
xchg
aaa
out
enter
sub
imul
negl
mov
lret
inc
mov
add
insl
jmp
push
dec
subb
mov
sbbl
inc
movsb
jnp
lea
xor
sub
jle
push
outsb
rorl
lea
outsl
movsb
jno
pop
inc
inc
leave
shll
cltd
fsubrs
cmp
xchg
xchg
sti
pop
push
lods
imul
adc
mov
push
sbb
mov
jbe
lret
mov
iret
aam
mov
xchg
ret
int3
lret
jae
clc
mov
inc
xchg
jne
insl
inc
mov
mov
pop
mov
cltd
into
mov
mov
pop
mov
shll
jl
aam
xchg
dec
mov
mov
mov
jnp
pop
out
add
pop
and
push
fistpll
aaa
test
lret
xor
jae
outsl
mov
mov
outsb
outsl
insl
jmp
xchg
insb
jl
xor
xor
xor
in
test
cmp
insb
xlat
pop
adcb
pop
jnp
dec
nop
lods
jg
lods
fcoml
xchg
xorb
imul
imul
mov
xorb
js
xor
xchg
or
fwait
xchg
nop
int3
mov
insb
jg
add
cmpsb
loop
iret
insl
jae
fmulp
xor
cmpb
lock
mov
test
fstl
ja
lcall
mov
pop
repz
mov
jno
jns
jl
push
jae
mov
outsl
pop
aad
jne
jbe
xlat
jge
push
mov
mov
daa
push
js
mov
rol
add
dec
imul
shrl
out
gs
je
insb
ds
lea
cmp
iret
xchg
outsb
into
dec
inc
lds
ret
mov
in
daa
xchg
inc
nop
mov
inc
xchg
mov
add
je
shll
sub
sahf
xchg
push
les
sub
mov
or
pop
or
in
insb
call
mov
jo
je
xchg
insl
out
lea
mov
xchg
rorl
mov
jns
jns
xor
inc
inc
mov
inc
inc
xchg
fwait
cmpsl
pushf
lret
aam
xchg
inc
leave
orb
push
cwtl
lea
shll
iret
mov
jbe
pop
push
pop
xchg
cltd
adc
jno
mov
inc
jg
xchg
push
mov
lcall
scas
mov
xchg
cli
mov
fwait
mov
adc
xchg
mov
adc
xor
pop
xchg
leave
xchg
inc
jo
scas
jbe
xchg
xchg
jge
lret
rcll
inc
jle
cli
xchg
xlat
ljmp
mov
cmp
pop
adcl
or
xor
addb
jle
int3
dec
aad
imul
nop
cmp
jae
push
cmpsl
pop
jp
sti
adcl
imul
or
sbb
test
mov
lods
imul
das
mov
jb
or
push
mov
cltd
add
or
mov
fwait
xor
jge
std
sbb
out
nop
mov
rolb
xor
mov
lods
sub
xchg
cmp
jge
cmp
ja
cmp
subb
insl
jno
in
xchg
sbbb
sub
add
jge
nop
pushf
arpl
lods
pop
pop
mov
loopne
inc
imul
jo
jne
mov
mov
adc
jge
imul
out
dec
imul
jns
pop
push
popa
imul
xlat
cmp
xchg
jne
mov
sub
mov
mov
stos
jns
int3
jno
adc
decb
add
jb
rolb
out
ret
in
mov
xchg
stc
int3
mov
xchg
lahf
lea
add
mov
mov
cltd
outsl
dec
mov
mov
jbe
mov
ret
mov
and
imul
stc
mov
iret
jno
les
ds
mov
xchg
sti
sbb
popf
inc
xchg
aas
orb
and
mov
sbb
pushf
enter
fwait
jns
lods
mov
jb
outsb
cltd
push
fnstenv
loope
sbbb
sub
adc
das
push
aaa
pusha
das
rorb
in
jns
outsl
sbb
inc
mov
and
xchg
inc
mov
lds
lods
imul
sbb
les
pusha
cmp
dec
cli
stc
pushf
cwtl
ret
push
cmp
mov
dec
out
fstpt
mov
mov
jbe
lods
out
ret
fistpl
int
xchg
lret
xchg
xchg
stc
aaa
mov
xchg
outsl
data16
nop
mov
cwtl
jo
lret
xor
lret
jns
movsl
loopne
je
in
cmc
jl
or
out
outsb
lahf
daa
rcr
imul
in
leave
jne
jns
cmp
lcall
adcb
jno
sub
out
das
imul
hlt
xchg
fcmovu
fisubrl
pop
vmwrite
iret
out
jbe
int3
inc
aaa
jl
push
xlat
rorb
out
xchg
ret
adc
lret
jae
hlt
call
lahf
lret
jb
shrb
jne
cltd
mov
lret
in
and
mov
cmp
xchg
jo
fsubs
iret
leave
ja
cmp
jb
xchg
lcall
fldt
inc
push
lds
das
cmp
out
rcrb
dec
mov
mov
xchg
mov
or
xchg
ja
push
lods
inc
lods
aaa
or
jae
mov
rcr
adc
jns
in
daa
mov
push
push
inc
popf
xchg
repz
jne
mov
int3
out
jbe
jb
int
sub
jae
inc
mov
je
add
iret
jge
mov
xchg
mov
mov
inc
jecxz,pt
ret
in
leave
mov
lods
ja
je
xchg
inc
dec
in
jg
lods
jns
mov
mov
jp
mov
fwait
mov
jl
mov
jmp
mov
fwait
pop
enter
xlat
lret
jmp
mov
push
into
cmp
test
fisttpl
sub
add
inc
fwait
mov
jecxz
add
mov
mov
enter
push
dec
mov
lods
lret
leave
jg
jae
mov
aad
mov
ljmp
mov
xchg
lock
and
jge
lds
test
int3
lret
inc
test
mov
scas
or
icebp
mov
fistpll
fistpl
mov
mov
rcrb
jge
xchg
ds
jae
icebp
int
mov
pop
jns
inc
adc
dec
and
lahf
adc
adc
cli
add
call
loopne
cmp
shlb
fwait
xchg
push
and
mov
jbe
mov
inc
subl
pop
cmp
push
pop
mov
mov
js
add
fidivl
jbe
iret
jo
ds
add
lret
cwtl
or
lahf
imul
fidivs
dec
inc
sbb
xchg
enter
xchg
andb
mov
xchg
int
aaa
addr16
mov
negl
mov
jne
cld
out
xchg
push
lret
shlb
js
xor
ja
sar
insl
jp
jns
lods
add
cmp
divl
adc
push
jo
sub
lahf
mov
rcrb
jnp
gs
test
cwtl
mov
shlb
mov
lea
pushf
imul
cmp
xchg
jp
push
jnp
adc
xchg
mov
int3
outsl
jecxz
jp
xchg
stc
xchg
xchg
js
adc
xchg
das
pop
push
jno
inc
fisubrl
adc
data16
inc
stos
pushf
mov
xchg
inc
xchg
mov
pushf
xor
add
std
and
gs
leave
hlt
in
fwait
lcall
fstl
mov
add
xchg
inc
jns
je
xor
xorl
inc
sub
je
fisttpll
xor
sbb
int
jne
mov
mov
xchg
mov
insl
cmp
mov
add
or
or
les
and
sbb
out
xchg
xchg
xchg
lea
dec
subl
ds
inc
sti
rolb
bound
nop
daa
mov
add
cli
loopne
inc
mov
shll
inc
jecxz
jmp
lea
mov
xchg
adc
test
jno
inc
add
mov
fisubrs
mov
sbb
sbb
sbb
xor
mov
lcall
outsb
add
das
jne
mov
adc
stos
and
dec
mov
imul
push
pop
mov
ja
jl
and
mov
lret
xchg
jp
push
xchg
inc
mov
mov
dec
inc
jmp
int3
jg
sbb
imul
xchg
aam
jnp
pop
cltd
sbb
mov
sbb
dec
aam
int3
cmpsb
sbb
subb
fadds
call
sub
xchg
and
jl
rol
into
addb
jne
mov
add
dec
xchg
adc
in
into
jl
jbe
jecxz
jnp
iret
and
ds
cmp
dec
xchg
lea
lret
jl
and
mov
or
mov
test
sbb
xchg
sub
in
push
jne
jge
sahf
insl
ret
dec
mov
test
jbe
jl
jne
nop
daa
fstpl
or
shrl
pop
xchg
mov
mov
jbe
cmp
inc
xchg
js
imul
sub
jle
mov
lret
outsl
and
jnp
iret
dec
pop
xor
test
clc
or
xlat
addr16
cld
adc
aam
shrb
js
jnp
imul
xchg
jns
push
inc
dec
je
rorb
fisubrs
aam
sbb
mov
shlb
mov
mov
jl
cmpsl
xchg
xchg
lds
jnp
mov
push
sub
fsubs
ja
adc
ja
jbe
stc
pop
xor
aam
pop
lret
fimuls
mov
inc
xor
jge
cltd
das
lcall
jns
fdiv
pushf
mov
jg
xchg
rcl
and
outsb
cld
push
mov
int
subl
inc
mov
jb
inc
xchg
jg
sahf
mov
pushf
mov
and
and
insb
mov
inc
push
mov
mov
sbb
into
lcall
imul
mov
fwait
outsl
scas
enter
dec
bndstx
inc
jno
mov
mov
mov
cmp
outsl
xchg
xlat
and
add
arpl
jae
pushf
les
lahf
xlat
outsb
jnp
std
dec
dec
das
pop
mov
jp
jno
jl
xchg
push
pop
stos
pop
cwtl
pushf
and
xchg
jne
lock
jp
adcb
dec
jg
fadds
sarl
inc
stc
aas
imul
mov
mov
cli
rorb
out
push
push
add
jb
je
cld
jecxz
rcrl
dec
jle
mov
jge
cmc
jne
dec
xor
xchg
jnp
std
sbb
jmp
popf
nop
xor
inc
fcmovbe
lcall
jle
lods
ret
outsl
aad
aam
mov
iret
mov
test
cli
add
lahf
jb
push
sbb
cmp
sets
push
xchg
jle
jb
dec
roll
mov
sub
popf
sbb
xlat
out
inc
aaa
adc
xlat
int3
mov
cmovno
js
lahf
push
cmp
push
jns
mov
pop
mov
or
push
fdivrs
or
adc
pop
lret
fst
push
inc
loopne
mov
inc
jb
aas
jp
int3
shlb
sub
fwait
cwtl
jge
rol
xchg
outsb
mov
js
hlt
sahf
mov
dec
je
jne
add
pop
aad
mov
in
push
mov
and
loopne
mov
xlat
mov
pushf
xchg
mov
dec
xchg
jl
jmp
sbbb
dec
bound
xchg
out
jg
outsl
pop
jns
jno
imul
push
mov
das
cmpsw
in
je
lahf
xchg
aad
mov
mov
ja
ja
dec
iret
arpl
sub
ficoms
aam
insl
jl
jle
xchg
outsl
jae
scas
sbb
mov
jb
mov
cli
mov
xchg
cmp
mov
aad
mov
jae
xchg
and
jne
lea
mov
jbe
jg
inc
pushf
jno
jnp
shrl
mov
mov
mov
icebp
out
cmpsl
adc
into
dec
fiaddl
je
outsb
mov
je
push
push
mov
stos
cld
nop
mov
xchg
mov
sub
push
inc
pop
or
insl
mov
repz
cmpsl
adc
or
shlb
jno
cmc
and
or
out
mov
inc
addr16
sbb
inc
aaa
xor
xchg
push
int3
cmp
sar
sbb
jns
inc
mov
outsb
mov
arpl
sti
mov
adc
jnp
movsl
mov
cld
enter
mov
cmpb
xor
lea
adc
outsl
jle
inc
or
push
inc
lret
aad
mov
jo
shrb
adc
fucom
mov
mov
push
mov
arpl
int
mov
mov
mov
ja
and
mov
inc
inc
imul
jns
push
xchg
ja
rcrl
mov
mov
leave
cld
ret
xchg
jge
adcb
ds
mov
leave
fmuls
xor
adc
int3
out
mov
insb
inc
push
lods
xchg
mov
aam
ja
rcl
jo
jl
int
pusha
lods
sahf
adc
mov
mov
shrl
loopne
jge
outsb
in
mov
mov
lahf
mov
inc
call
inc
jle
pop
jae
xchg
sub
push
ds
and
inc
or
or
insb
sub
xor
ret
cmpb
mov
cmp
lret
js
inc
dec
outsl
addr16
insl
insb
push
gs
out
or
ret
xchg
cmpsl
shlb
cmc
loopne
cwtl
lock
add
shrl
inc
insl
dec
mov
mov
xor
adc
fs
jg
cmp
push
into
fdivrs
lcall
popf
or
or
leave
adcb
inc
fistpll
int3
mov
insb
xor
arpl
les
imul
cltd
jbe
int3
cltd
fidivrl
xchg
cwtl
mov
fisubrs
mov
aas
jge
stc
fisttpll
out
lds
xchg
dec
xchg
out
mov
jp
or
imul
mov
mov
mov
jne
leave
cmp
jle
shll
mov
jp
int
jg
stc
push
jo
insl
outsb
xor
adc
fwait
lcall
inc
and
push
in
test
dec
jge
jo
jg
scas
imul
sub
aam
leave
xchg
call
ds
mov
mov
arpl
shrl
sub
xchg
inc
jno
sbb
repz
mov
or
nop
rcrb
pushf
jl
adcl
data16
and
lcall
jo
push
mov
ja
int3
xor
xor
pushf
cltd
jge
jo
mov
mov
iret
jle
mov
xlat
iret
out
popa
ret
mov
xchg
or
in
xchg
test
aaa
lahf
or
xchg
or
lea
cmp
push
adc
sub
pop
mov
xchg
adcb
out
mov
xor
pop
leave
adc
or
in
out
jmp
jns
pop
jg
scas
xchg
aam
movsl
and
rcll
es
cs
movsl
movsl
jp
iret
jg
jbe
or
sbb
lods
imul
or
orb
imul
out
shlb
or
pop
mov
sahf
arpl
xchg
pop
inc
jo
jp
push
jo
jp
jo
arpl
mov
sub
mov
int
out
xor
cmp
sbb
cmc
or
test
mov
jge
dec
fcmovnbe
jl
test
fsubr
jne
lds
in
es
sahf
sub
sbb
mov
shr
add
loopne
xchg
mov
mov
adc
outsl
jecxz
insl
lahf
pop
inc
imul
rcl
shrl
xchg
jg
add
and
lret
fcmove
js
pop
ret
inc
aad
pushf
sub
mov
fwait
cwtl
xchg
inc
cmpsb
repnz
lret
adc
pushf
cmp
les
lcall
jb
mov
cmp
xchg
jno
jae
mov
lea
jno
pushf
stos
lret
out
popa
arpl
mov
cltd
out
mov
out
mov
in
in
je
pop
mov
xchg
xorb
push
xchg
fwait
jp
xchg
test
inc
test
ja
fsubrs
push
fcomps
cltd
lea
rolb
cli
jp
daa
pushf
iret
or
jp
mov
cltd
insb
jae
std
fidivs
cmpsl
xchg
ret
imul
mov
mov
ds
dec
inc
imul
iret
js
xlat
cmp
in
jbe
jo
int3
pop
sub
clc
sbb
jge
aam
add
leave
jg
jne
scas
pop
arpl
xor
dec
mov
rclb
mov
sub
xor
dec
mov
xchg
push
mov
xchg
ja
jnp
lahf
mov
and
push
aas
frstor
adc
int
cmp
aam
and
lods
rolb
jb
pop
aaa
push
mov
pop
iret
mov
cmp
xchg
xchg
fcomps
repz
push
mov
xchg
push
lahf
jno
mov
lods
pop
mov
iret
insl
mov
jecxz
addb
imul
push
xchg
pushf
lcall
mov
js
cld
shrb
or
popf
cmp
mov
int3
test
leave
cmp
aam
cmp
dec
int
jp
mov
sbb
stc
mov
push
pop
rcrb
pop
movsl
addr16
fidivs
icebp
xor
js
test
cli
cmpl
xchg
imul
mov
lds
lods
jae
cltd
mov
cwtl
jge
lods
add
mov
jbe
xor
mov
lret
lods
xor
jne
sbb
push
xlat
fisttps
sahf
mov
xchg
iret
iret
sub
outsb
loope
push
cmpsb
mov
into
sbb
xlat
inc
jae
arpl
imul
arpl
mov
outsl
jae
pushf
rorl
push
mov
sub
jmp
jge
lock
jb
iret
inc
mov
jae
pop
push
mov
or
lret
dec
shlb
add
popf
xchg
pop
sub
fwait
ds
lods
movsb
rol
jg
fildl
mov
shrl
mov
cmp
in
in
push
sub
jmp
adc
adc
je
mov
ret
adc
outsb
pushf
js
lret
iret
jns
inc
les
insl
mov
mov
fdivrl
cmp
push
imul
js
ds
inc
xor
ljmp
jne
nop
inc
xchg
mov
adc
sahf
sbb
arpl
das
popf
mov
xchg
lcall
stos
int3
jno
insl
fidivrs
mov
insl
das
test
add
dec
lds
jle
sub
sub
cltd
cmp
mov
xor
jb
leave
aad
add
inc
stos
xchg
xchg
in
je
out
int3
jo
out
add
lahf
push
pop
insb
mov
jecxz
js
xchg
addr16
jne
iret
dec
mov
rcrb
push
sahf
cmp
fcmove
sbb
xchg
sbb
sbb
pushf
pop
arpl
icebp
js
insb
mov
lcall
imul
inc
mov
xchg
pop
xchg
insl
outsb
rcrl
aaa
mov
cmp
mov
mov
mov
int
push
jnp
lea
jne
xor
mov
sub
xchg
call
xchg
push
je
in
imul
mov
mov
mov
inc
ja
test
xchg
into
out
sbb
aam
loop
mov
loopne
xchg
jle
push
cmp
jne
test
sarb
mov
imul
cltd
int
mov
mov
orb
ljmp
lret
jbe
mov
xchg
xlat
cmpsb
inc
pop
sub
xor
push
cmp
popf
call
sbb
sbb
sub
cmpsb
mov
jge
inc
jecxz
lock
lods
lds
mov
xchg
test
jnp
jbe
pushf
rcr
adc
jo
cmp
fwait
inc
xlat
xchg
jg
add
jno
xchg
jbe
mov
inc
je
mov
iret
push
xchg
mov
or
mov
lret
js
pop
test
sub
push
ret
xchg
xor
ja
pushf
sbbb
jb
fsubl
cmp
dec
js
mov
arpl
jl
inc
lcall
sbb
lret
test
lods
inc
in
lods
imul
shlb
pop
jo
xchg
jp
jnp
int3
fisubl
fwait
or
daa
imul
adc
mov
push
add
loopne
jl
or
sbb
incb
stos
mov
mov
popf
decb
xor
insl
in
jnp
jns
xor
aad
test
das
mov
mov
jns
popf
pop
inc
addr16
fistpl
fmul
jo
xchg
ss
pushf
orb
int3
lcall
insl
cltd
inc
js
popl
mov
das
lea
xchg
test
inc
xlat
cwtl
inc
enter
outsb
lea
inc
insb
scas
push
jge
push
insb
pop
cltd
push
jl
push
adc
mov
sbb
push
push
pop
outsl
xchg
or
jbe
jmp
mov
xchg
mov
push
mov
jno
mov
in
jns
int
das
test
or
inc
int3
jbe
aam
jae
into
xchg
xchg
mov
jae
and
jo
lss
test
mov
dec
imul
mov
out
inc
push
or
xchg
mov
add
cld
or
test
cli
jns
stos
int3
popf
js
inc
fstl
test
jbe
push
ljmp
sbb
inc
aad
xchg
xor
pop
inc
into
adc
sbb
lods
js
insl
cmp
xchg
mov
jle
mov
xor
test
xchg
popf
lahf
mov
adc
es
mov
mov
dec
arpl
push
lods
popf
jne
loope
outsl
mov
addl
push
jl
mov
jno
jbe
jecxz
sub
jo
repnz
inc
shrb
push
dec
notb
jg
dec
test
fwait
into
sbb
andb
out
inc
mov
pusha
push
pushf
xchg
and
imul
mov
leave
addb
mov
pop
sbb
cli
jmp
xchg
ljmp
fsts
imul
xchg
lahf
lea
adc
pop
mov
loop
or
jp
jnp
mov
sti
cltd
xchg
addr16
mov
xchg
mov
aas
mov
mov
je
aaa
mov
mov
ljmp
sbb
das
sbbl
test
xlat
xor
push
fxch
adc
sbbl
rcl
nop
fmul
push
mov
imul
xchg
js
fwait
xlat
leave
lret
cmovno
in
jg
fwait
lock
xorl
into
jnp
cwtl
movsl
xchg
subb
ja
inc
test
pop
movsl
ret
outsl
xchg
mov
out
lods
xlat
jge
sahf
xor
jne
nop
inc
leave
aam
imul
jge
mov
jae
icebp
cwtl
add
rolb
outsl
outsb
xlat
dec
dec
xchg
fdivs
push
xor
cli
daa
je
pushfw
outsl
jae
rorl
mov
or
jbe
cmpsl
cmc
jle
mov
xchg
rcrb
adc
inc
adc
inc
popa
cmpb
mov
insb
mov
lret
lret
and
fidivrs
out
popf
outsb
test
test
xchg
int
mov
mov
inc
mov
xchg
sub
cmp
dec
mov
xlat
cmp
mov
fwait
lret
push
xchg
mov
sahf
aas
cld
cmp
insl
lret
cwtl
mov
xchg
mov
lret
mov
mov
mov
int3
jg
aaa
ret
sbb
jne
arpl
mov
cli
in
pushf
int
iret
inc
sbb
jo
enter
push
lods
sbb
push
xchg
xlat
outsb
into
and
jg
mov
pop
mov
stos
push
outsb
mov
mov
cmp
sbb
jl
pop
jae
lods
mov
mov
outsl
mov
mov
cltd
cmpsb
pushf
ja
rcll
xchg
mov
inc
popf
mov
jns
fildll
mov
xchg
pop
int3
cltd
insl
cwtl
rolb
jo
test
mov
popf
je
jp
xor
outsb
cmp
incb
mov
adcl
mov
xchg
insl
stc
adcb
outsl
iret
push
xchg
xorl
or
mov
jns
enter
cmp
pop
sub
mov
jno
dec
into
xchg
arpl
nop
loopne
std
aas
shrb
repnz
mov
adc
inc
mov
lods
pop
pop
call
popa
std
and
or
stc
fadds
nop
iret
outsl
lcall
pushf
push
jb
cmp
push
sarl
mov
int3
fistpll
jg
cmp
inc
xorb
call
mov
xchg
sub
arpl
jae
repz
mov
and
shll
dec
js
sbbl
mov
sbb
cld
lcall
sbb
mov
orb
mov
adc
sbb
xor
inc
je
das
addr16
es
mov
cmpsl
aam
iret
jb
jns
mov
mov
inc
cmp
mov
fwait
push
xchg
test
mov
mov
je
xchg
mov
xchg
cwtl
pop
imul
mov
lods
in
add
jne
cld
and
push
fnstsw
xchg
mov
jl
iret
mov
pop
inc
jno
mov
jbe
cmpsl
nop
cmc
mov
lret
ja
jle
pop
adc
push
inc
out
je
lret
inc
jne
xchg
rclb
mov
xchg
xorl
jg
outsl
or
xchg
xchg
fdivrl
mov
mov
pop
mov
sbb
or
js,pt
stos
push
mov
leave
mov
xchg
insl
cltd
mov
push
inc
js
mov
outsl
push
cs
fists
cltd
xlat
icebp
imul
inc
add
xor
dec
loop
inc
leave
and
add
repnz
pusha
fstl
fisubs
mov
out
inc
test
loopne
js
mov
int3
xlat
ret
jg
ljmp
jbe
iret
xlat
jae
sbb
cmpsl
outsb
xchg
xchg
fcoms
popf
iret
inc
and
int3
inc
xchg
inc
fstl
mov
jns
outsl
xchg
mov
cwtl
lods
or
lods
mov
cmp
fcoms
and
cmp
xor
pop
lods
daa
adc
xchg
iret
jbe
iret
adc
cmp
das
inc
inc
stc
and
cmpsl
cmpb
sarl
pop
mov
mov
dec
mov
jb
ror
jne
xchg
fwait
mov
push
int
lcall
mov
addr16
js
push
mov
mov
mov
dec
nop
popf
imul
pushf
sahf
mov
pop
jne
jo
int3
xchg
insb
test
enter
outsb
sbb
std
fwait
aaa
outsl
push
or
sub
lods
insb
int3
imul
sbb
mov
testl
jge
ja
ja
jnp
cmp
into
pop
cli
lcall
popl
subb
sbbl
outsb
js
sbb
aaa
jmp
fwait
xlat
into
movb
xchg
mov
inc
iret
mov
sahf
jg
mov
rorl
xchg
cmpsl
xchg
xchg
icebp
movb
cmp
and
mov
pop
jne
cltd
dec
stc
xor
mov
je
mov
jp
mov
xchg
addr16
nop
push
mov
jne
lods
inc
mov
stc
arpl
xlat
jp
push
inc
shll
aam
lods
mov
mov
iret
mov
imul
rorl
xchg
in
cmp
jae
stos
push
lds
mov
fwait
sahf
outsl
xlat
inc
hlt
mov
lea
cltd
jbe
sti
mov
mov
outsb
les
jae
cwtl
ja
mov
xor
mov
sbb
stc
jb
jp
imul
jae
mov
mov
inc
jnp
jg
inc
or
je
ds
lcall
imul
popf
cltd
pushf
leave
adcb
jle
test
xor
insl
cmc
jp
jp
lret
fs
jae
movsl
call
jge
jo
add
mov
nop
mov
adc
rolb
in
xchg
jnp
aas
jne
mov
mov
mov
jecxz
sbbb
pop
shll
hlt
pop
pop
jb
insl
adcb
pop
fucom
iret
repz
mov
mov
imul
js
inc
jp
lret
nop
xchg
lahf
enter
fdivs
ret
in
jnp
in
fneni(8087
fdivs
fdivrs
lret
aam
xchg
insb
fdivs
incl
addr16
sahf
jg
sub
dec
lret
jmp
mov
int
jns
nop
xchg
sbb
sahf
xchg
outsl
xchg
fidivrl
sub
mov
and
lea
jl
leave
cmp
lods
sbb
jg
or
out
jle
dec
shll
xchg
xlat
out
adc
dec
imul
mov
rcrb
int
adc
jns
cmpsl
adc
jle
add
jg
jl
cltd
jp
pop
rolb
mov
xchg
mov
pop
jno
inc
fwait
arpl
sbb
jns
nop
mov
push
pop
jae
jns
mov
nop
imul
fdivs
lret
rcr
mov
cmp
mov
mov
inc
mov
test
sub
inc
lods
pop
lods
sbb
add
adc
jne
mov
std
jae
lret
cld
adc
fcoms
jb
ja
inc
xchg
mov
pop
mov
push
inc
jae
je
pusha
cltd
dec
jno
je
push
lods
jb
add
ret
imul
push
gs
ja
xchg
xchg
popf
xchg
xlat
fmull
sub
push
jns
jnp
pop
ja
lret
dec
cltd
fdivs
in
mov
jnp
mov
cltd
pop
decl
les
jl
mov
adc
stc
xor
cltd
jmp
int3
and
mov
mov
lods
mov
mov
inc
pushf
cs
mov
inc
ficomps
arpl
cmp
cmp
rcrb
adc
out
xchg
insl
adc
xorb
cltd
push
lret
js
imul
call
pop
inc
leave
mov
mov
repnz
cmp
cwtl
xlat
add
or
pop
jp
xchg
mov
mov
mov
inc
pop
cmp
inc
jle
adc
pop
push
xchg
xchg
push
xor
shll
movl
jns
loopne
xchg
xor
lods
sahf
and
or
subb
lret
xchg
cmp
xchg
imul
pushf
dec
push
out
subb
popf
mov
arpl
div
sub
sarl
add
mov
jle
cli
cmp
lods
xchg
jbe
mov
inc
sarb
xchg
test
movsb
lret
test
mov
outsb
jae
and
iret
inc
jg
xchg
jl
insl
fcoms
out
dec
cld
lods
insl
subb
lret
mov
mov
jl
mov
adc
out
ret
dec
mov
jnp
bound
jnp
sahf
cmp
xchg
cld
int3
jmp
aad
xor
nop
inc
inc
inc
jae
popl
pop
push
mov
jp
fwait
pusha
lods
jl
mov
popf
addb
popl
sarb
inc
pop
lret
daa
jl
insb
mov
and
adc
in
sub
shl
mov
xchg
mov
xor
ret
add
pop
mov
mov
adc
imul
mov
shrb
cltd
add
int3
xchg
pushf
push
push
stc
jg
lcall
into
xor
faddl
mov
push
int3
jns
orb
mov
fmull
stos
imull
insl
rol
xchg
lcall
into
xor
sbb
sbb
push
dec
jl
adc
jb
adc
enter
jbe
pop
inc
das
test
mov
xchg
icebp
mov
pop
push
or
orb
cwtl
imul
rcll
fistps
jne
add
pusha
mov
push
arpl
add
insb
sahf
xchg
mov
test
push
mov
mov
aas
jns
mov
aam
rol
jb
je
xor
insl
outsl
cmp
int3
mov
mov
iret
int
arpl
xchg
adc
rcrb
push
in
dec
xor
mov
mov
fwait
cltd
xlat
fsubrs
sahf
pop
sbb
jmp
push
adc
das
xorb
lahf
add
call
je
daa
lods
lret
test
mov
mov
mov
insl
jo
pop
popf
cmp
je
lret
leave
push
push
mov
jl
in
xor
inc
xchg
insl
sahf
fildl
insb
in
sub
or
jns
xchg
or
mov
aam
push
jae
jl
and
xchg
add
loope
jp
xor
pushf
js
fimull
scas
lods
lods
in
test
fisubs
ret
in
js
push
in
sahf
cmp
inc
outsl
test
and
xchg
cltd
inc
aaa
aad
mov
je
aam
into
mov
rclb
xchg
mov
fwait
cmp
adc
verw
lods
lods
lods
xor
cld
daa
cld
lahf
stc
jnp
in
mov
mov
jae
push
dec
sbb
adc
jbe
fiaddl
jno
xchg
imul
jle
arpl
out
nop
mov
iret
xchg
xchg
popf
mov
jne
jo
lret
xchg
je
lret
stc
pop
lcall
mov
jl
add
stos
xchg
js
ret
insl
pusha
lods
mov
adcl
lret
fwait
cli
aam
js
data16
adc
sub
pop
das
shll
rcl
or
sbb
imul
pusha
fwait
jg
outsl
add
jae
and
into
mov
adc
popf
mov
je
inc
cmc
jb
xchg
xchg
das
pop
fsubrs
mov
inc
push
fwait
or
lret
ja
push
mov
or
stos
and
mov
xchg
xlat
xor
inc
jb
mov
mov
xchg
jnp
mov
jbe
outsl
xchg
lcall
jae
test
mov
aaa
cmpl
andb
push
push
fsincos
dec
push
pop
xchg
and
jno
mov
je
xchg
popf
aaa
lods
das
lock
lret
nop
movsl
pop
rorl
mov
sbb
js
pop
mov
mov
jl
inc
jb
rol
insb
mov
icebp
pop
jnp
lea
ds
enter
xor
push
hlt
test
adc
rcrb
xlat
add
xlat
int3
mov
jbe
mov
mov
ror
jae
mov
cltd
aaa
test
cmp
cmp
imul
pushf
cmpb
xor
lods
outsb
popf
pop
stc
ja
lret
inc
rcr
cwtl
mov
and
mul
jg
xchg
mov
imul
aam
or
insb
int
mov
ja
stc
nop
push
fucompp
add
cmp
sarb
mov
ds
jg
add
mov
cltd
test
daa
lea
jle
sbb
jp
mov
jmp
stc
jnp
inc
fnsave
pop
call
jns
pop
ja
add
and
jbe
jae
lret
pop
std
pop
hlt
xor
clc
push
addr16
pop
pop
lcall
jge
imul
negl
or
adc
out
stos
push
push
test
mov
iret
add
das
div
or
push
inc
outsl
mov
in
jae
fdivrl
jl
jo
lret
outsb
mov
mov
ret
sbb
subl
outsb
dec
push
outsb
test
cmp
xchg
out
popf
adc
push
cmp
jge
jle
ds
add
lret
fdivs
push
mov
iret
push
jns
subps
jbe
arpl
ficoml
out
gs
jae
add
jle
xchg
out
popf
xchg
lahf
cmc
adc
mov
mov
adc
test
dec
sub
lret
rolb
xchg
xchg
xchg
adc
lahf
push
sbb
mov
or
incl
sarb
jp
xorb
sti
imul
mov
push
mov
aam
xchg
xchg
xor
rcl
fcomps
jg
xlat
xchg
mov
jp
sbb
test
ret
jns
mov
divl
jo
adcb
js
in
stos
add
lcall
xchg
hlt
cli
insl
iret
bswap
jl
xchg
push
pop
clc
mov
jbe
jb
orb
xchg
mov
mov
mov
sbb
mov
imul
je
xchg
xchg
sbb
ja
fadd
in
add
test
mov
in
lods
iret
xor
outsl
adc
jno
cmpsl
add
adc
pushf
sbb
xor
sbb
cld
jnp
scas
add
jg
add
xchg
arpl
inc
push
mov
rorb
stos
dec
shl
xchg
lds
lods
mov
push
leave
int3
or
sti
leave
push
loop
roll
jle
outsl
popl
mov
nop
lea
ret
int3
mov
xorb
sahf
ja
test
ljmp
inc
xor
mov
nop
nop
jbe
jl
out
sbb
mov
leave
shll
ds
mov
into
cmpsb
mov
push
add
repz
mov
lcall
cltd
push
push
addl
ds
mov
cltd
inc
sahf
mov
lret
lret
jl
xlat
mov
cmc
dec
jle
int3
xor
stos
pop
les
mov
inc
xor
ret
iret
cltd
adc
jns
icebp
into
inc
or
outsl
xchg
std
test
nop
lock
call
xlat
sub
adc
js
fimull
out
pushf
int
scas
add
sahf
pop
rorl
add
cwtl
push
into
push
cs
hlt
mov
lea
cltd
fwait
lcall
lea
ja
shrb
stc
push
or
fcmovne
arpl
int3
pop
test
dec
mov
pushf
out
mov
orb
loop
outsb
push
int3
jp
leave
out
cltd
push
sti
mov
imul
negl
insl
mov
test
xlat
into
fs
testb
xchg
aam
lcall
mov
cltd
inc
cmp
cwtl
cwtl
ret
jp
addr16
jno
jp
xchg
repnz
push
adc
lods
jns
mov
lea
ja
xchg
pop
rcrl
mov
mov
test
mov
mov
leave
xor
fsubl
fwait
mov
popf
mov
ret
pop
fidivs
je
jmp
leave
nop
jno
mov
pop
mov
xchg
subb
xchg
daa
xchg
mov
dec
call
stos
jne
mov
test
dec
fnstcw
or
xchg
xor
imul
or
mov
sbb
cmp
sti
xchg
pop
and
or
inc
aam
adc
xchg
sbb
int3
xchg
iret
into
lahf
ficomps
jle
xor
and
mov
data16
insl
xor
int
jmp
outsl
rcr
cwtl
xchg
es
push
cmpsl
js
mov
sub
cwtl
outsb
outsl
jno
xchg
pushf
dec
xchg
xchg
jae
xchg
call
leave
lret
jo
dec
out
out
lret
insb
sub
inc
jge
movsb
pop
xchg
sahf
outsl
xor
sub
lea
jns
jp
mov
std
int3
nop
cmpsb
inc
add
push
sbb
inc
mov
clc
test
or
dec
ret
ret
xchg
dec
shrb
dec
iret
int3
lcall
popf
int
lret
push
imul
push
loopne
mov
shlb
inc
jbe
fnstcw
and
fisubl
inc
outsl
mov
mov
sub
mull
or
in
in
jecxz
inc
cmp
jno
mov
pop
pop
testb
mov
sarb
push
jo
jmp
call
stos
cltd
js
outsl
inc
mov
int3
push
ds
lods
stc
call
mov
jae
xchg
xchg
or
adcb
xor
cmp
nop
ja
mov
cmpb
xchg
mov
test
jl
jb
iret
js
adc
jbe
cmp
pop
and
aas
push
pop
arpl
or
ret
lea
mov
aas
cwtl
or
lea
test
cmp
dec
test
jge
and
or
fldt
test
inc
dec
std
movsb
in
arpl
xlat
js
xchg
rcr
mov
int3
aaa
pop
adc
iret
push
jne
xchg
and
cmp
xor
std
adc
jo
push
mov
fwait
mov
lea
nop
or
mov
fwait
je
arpl
loop
fdivs
cmp
sbb
pushf
xor
mov
imul
inc
mov
push
aaa
pop
fistl
inc
push
imul
in
dec
icebp
add
imul
fucomp
cltd
xchg
mov
cmp
insl
pop
test
popf
lea
jae
adcb
mov
push
cmp
xchg
ja
ljmp
cltd
fwait
enter
or
leave
lcall
lret
jns
mov
or
imul
iret
mov
js
or
ret
lds
jl
popf
jbe
push
sub
mov
idivl
mov
rorb
leave
call
xlat
or
es
test
xchg
jbe
or
clc
jg
lods
xlat
fwait
push
test
ficoms
xchg
cmp
lcall
push
fcmove
js
rorb
mov
dec
sahf
outsl
or
lea
imul
popf
in
imul
je
mov
outsb
lds
lods
jg
mov
pushf
mov
sar
loopne
xchg
sub
jno
pop
cmp
adc
mov
mov
inc
jnp
sbb
jge
insl
sbb
jmp
rclb
xchg
daa
sub
lcall
mov
std
rorb
lods
int3
popf
out
pop
loopne
imul
mov
jb
cltd
fwait
int
adc
inc
inc
lea
shll
jb
jl
mov
lret
aam
subb
mov
jnp
cwtl
mov
mov
dec
cmp
jg
test
dec
in
sbb
jl
dec
outsb
and
fidivrl
in
pusha
jecxz
lds
xchg
pop
mov
adc
jno
idivl
ja
enter
and
inc
ja
inc
jnp
mov
mov
rcrb
cwtl
xchg
hlt
movsl
add
dec
jae
jnp
lcall
jg
lcall
jns
aam
jno
adc
pop
sub
mov
inc
add
call
or
xchg
and
insl
int3
aaa
scas
cs
jno
fsubs
lock
cmp
jl
sub
arpl
jno
jnp
ljmp
mov
les
push
aad
jb
aad
pop
aam
xchg
dec
lcall
ror
lds
jle
cmpsl
push
into
lahf
aaa
pop
fldl
xchg
inc
pop
lea
xchg
mov
addb
data16
lea
into
mov
jle
cmpsl
push
sahf
jp
xor
sbb
std
das
jb
mov
jb
mov
js
mov
inc
mov
mov
enter
jmp
lcall
insl
out
xchg
inc
or
mov
leave
daa
xchg
jno
sub
mov
push
ss
or
fwait
int
mov
dec
mov
outsb
cmpb
aas
mov
aad
jmp
jle
inc
xchg
jo
sbb
arpl
push
test
xor
pop
push
xlat
int
iret
into
lret
test
sbbb
fstpl
jbe
movsl
xlat
mov
inc
adc
insl
jns
jmp
xor
mov
outsb
imul
cli
int3
outsl
orb
xor
mov
jne
pop
sahf
fwait
jl
jge
jp
xorb
or
jne
inc
mov
cltd
mov
cli
icebp
lcall
jne
sti
or
imull
das
test
loope
mov
pop
jns
mov
cwtl
or
lds
cli
loop
fisubrl
push
mov
dec
push
fidivrl
orb
fnsave
inc
mov
jbe
push
sub
mov
push
cs
mov
xchg
adc
int3
cwtl
lcall
adc
lea
lahf
popf
inc
sub
push
jp
imul
jb
xlat
sbb
nop
rorl
jae
adc
es
rolb
lcall
mov
inc
jno
or
xor
das
ja
repnz
fwait
or
imul
shrl
xor
into
pop
inc
lahf
xchg
push
push
adc
movsl
popf
cli
mov
outsl
ret
jno
aaa
loopne
inc
jo
sbbl
or
mov
imul
subb
fistpl
int
pop
mov
js
sahf
lret
mov
and
and
mov
xchg
or
imul
out
call
xchg
lret
xor
push
mov
subb
push
je
mov
jmp
lahf
jl
mov
mov
mov
aam
fwait
jne
pop
lret
cwtl
push
insl
jg
xchg
fcmovne
xchg
test
adc
cmp
lea
int
lahf
mov
insb
je
mov
xchg
pushf
das
lock
jns
sarb
sub
mov
inc
jmp
mov
sbb
dec
mov
or
mov
mov
enter
lea
jg
sti
push
imul
pushf
jl
lret
mov
lea
mov
and
cmp
inc
cmp
mov
adc
sub
cltd
add
cmpl
stc
or
mov
adc
mov
cli
or
jg
xchg
push
dec
addr16
jle
cmpsl
pushf
rolb
imul
cmpps
xchg
xchg
rcrl
incb
insl
cmpsl
lret
data16
adc
cmpsl
adc
das
roll
pop
lods
int3
call
insl
jecxz
imul
fdiv
mov
mov
mov
mov
scas
jg
mov
insb
sarb
mov
lods
pushl
in
add
jg
outsl
sbb
fxch
dec
addb
jae
movzwl
mov
mov
ror
jle
adc
repz
lods
pop
stos
cmp
add
lods
je
mov
mov
iret
xchg
insl
orb
leave
lock
cmp
add
icebp
cltd
jnp
sti
das
sti
cmovp
ds
mov
cwtl
in
jge
into
xchg
jmp
fwait
add
fidivl
pop
lcall
xor
sarl
add
imul
shrl
mov
dec
mov
cmp
mov
js
je
xor
mov
xor
das
adc
mov
xor
cmpsl
dec
leave
imul
test
mov
mov
cltd
mov
xchg
sbb
lcall
fwait
popa
jg
add
mov
mov
cmc
jge
nop
mov
jl
in
popa
iret
mov
mov
test
jae
scas
inc
xor
sub
lcall
int
mov
mov
loop
lahf
cltd
imul
adc
int3
mov
js
cmp
lea
jbe
add
mov
int3
push
push
cmp
mov
cmp
jge
call
adc
mov
mov
xchg
adc
mov
mov
insb
jg
cmpsl
ret
leave
fwait
jg
lds
jne
sbb
push
insb
lret
out
imul
push
leave
aam
cmpb
ja
push
mov
lds
push
jbe
lahf
aam
lret
jmp
pushf
addr16
lods
sahf
inc
imul
les
jle
jo
push
inc
js
add
sub
leave
push
insb
mov
push
lret
dec
jp
jne
mov
out
daa
jle
mov
int3
imul
out
imul
xlat
xchg
mov
fsubs
mov
or
pop
insl
je
mov
loopne
dec
xorb
mov
pusha
and
push
nop
lea
push
jo
jmp
jno
add
xlat
xor
mov
movsl
or
out
insb
in
jb
dec
push
push
mov
pop
or
scas
mov
ja
fwait
sub
lret
xlat
sti
iret
cmp
cmp
jb
xlat
out
cwtl
sbb
push
ffreep
test
jge
dec
push
fists
nop
out
inc
movsl
pop
mov
popa
nop
aaa
dec
or
arpl
mov
cmp
inc
jo
fistl
push
xchg
shlb
mov
cmc
lds
mov
jmp
lret
jns
push
mov
shrb
sbb
lret
push
sub
sub
jg
pop
fldl
lcall
jnp
push
cmc
jp
xchg
jb
pop
nop
fimuls
pop
inc
lret
movsl
iret
pop
mov
adc
jno
push
call
fwait
insl
xchg
jecxz
jb
dec
mov
lret
or
adc
add
lock
cmp
jnp
mov
dec
clc
mov
iret
xchg
int3
mov
cmp
dec
mov
xchg
xchg
xor
push
mov
arpl
in
jnp
inc
outsl
cmp
nop
xor
and
stos
imul
mov
js
cmc
mov
mov
mov
mov
jp
jne
test
mov
leave
xchg
das
mov
jl
enter
seta
lret
arpl
je
lea
mov
outsl
ds
das
into
daa
push
mov
fcmovnbe
orb
das
xor
jno
jp
or
jg
js
stos
xorl
fstpt
mov
lods
stos
lods
fnstcw
dec
cltd
lcall
repnz
lahf
lret
and
aaa
jb
in
jo
mov
mov
xchg
lret
mov
cwtl
jns
or
mov
ja
leave
nop
ja
es
lcall
xchg
push
cld
ljmp
mov
mov
lcall
jae
clc
outsl
fimuls
fists
xor
mov
ret
iret
lods
jge
jno
sbb
xlat
or
lcall
in
mov
shrb
xchg
je
je
mov
mov
jp
sub
jae
lcall
lret
cmp
adc
subb
fdivs
mov
mov
inc
outsb
sahf
mov
dec
cwtl
lahf
xchg
inc
iret
aaa
sbb
insb
imul
shll
out
dec
arpl
pop
inc
lret
xchg
cmpsl
out
icebp
setg
fnstsw
xchg
mov
mov
sti
and
or
ds
ds
cmp
lea
ror
pushf
pop
out
fmuls
inc
movhpd
mov
js
pop
fcomps
jo
inc
arpl
xchg
inc
pushf
fstpt
das
cmpb
and
cli
sub
and
cltd
mov
jo
inc
lock
push
pusha
fildll
jecxz
mov
fnstsw
lods
inc
fdivl
popf
nop
xchg
mov
sar
jnp
cwtl
or
into
arpl
test
mov
xchg
cli
dec
mov
lea
jg
ja
mov
inc
pop
lods
mov
mov
mov
sbb
mov
xchg
ds
cmp
xchg
lcall
aam
xorb
je
cld
jae
data16
mov
mov
popl
ja
pushf
leave
test
lods
jp
xchg
mov
aam
dec
mov
repnz
cmp
rclb
mov
xor
lahf
dec
xor
mov
sahf
sbb
aad
xchg
push
mov
mov
movsb
imul
aad
cltd
nop
in
repnz
xchg
test
out
mov
jns
cltd
or
xor
cli
pusha
lahf
mov
push
stc
addb
je
push
xchg
jnp
arpl
sarl
cld
lret
test
enter
sub
cmpb
iret
add
mov
mov
lret
iret
js
cmpl
outsl
pop
insl
neg
mov
in
jnp
push
mov
outsl
add
sub
lahf
ret
dec
out
xchg
xor
mov
negl
addb
outsl
aam
mov
leave
pushf
cmc
mov
nop
cmp
into
lcall
jg
rorb
bound
ja
xchg
xchg
out
nop
test
imul
mov
fcoms
movsb
lahf
xor
imul
mov
jo
dec
pop
jl
inc
icebp
rclb
stos
in
das
dec
xchg
jae
ja
adcb
dec
cmc
mov
mov
xchg
jbe
adc
cmpsb
iret
adc
pop
mov
cltd
mov
cmp
aad
jns
popa
lock
pushf
cltd
scas
ds
ja
dec
mov
aad
jae
add
mov
cltd
mov
cmpb
iret
sbb
pop
flds
cmp
stos
jbe
jecxz
xchg
sahf
cmpsl
push
insl
ja
xchg
jl
fwait
iret
rcr
add
jb
popf
ja
mov
pop
mov
imul
mov
cli
mov
cli
inc
xchg
andb
orl
cli
lods
aam
xchg
call
int
fdiv
jl
sub
rclb
jb
xchg
das
dec
mov
call
push
inc
into
jbe
cltd
pushf
lea
repnz
stc
or
aas
pop
dec
cltd
pop
jl
xor
sti
mov
lcall
inc
cmc
mov
lea
mov
xchg
jbe
mov
xlat
bswap
mov
mov
xor
cmp
sub
lret
int3
js
xchg
insb
push
push
sbb
adc
xchg
jo
add
imul
fistps
xorb
add
mov
mov
adc
mov
jl
ja
cmpsb
outsb
rolb
inc
xchg
int3
arpl
outsl
cmpsl
adc
das
xchg
pop
push
jle
mov
jbe
insb
je
je
insl
pop
mov
clc
popf
xlat
mov
or
test
add
repz
mov
mov
in
daa
stos
jbe
sbb
inc
mov
iret
lret
jae
pusha
sub
jno
lea
jne
push
xor
jnp
jle
cmp
push
nop
xchg
jp
xor
jnp
pushf
sbb
adc
sbb
leave
cmpsb
jnp
xchg
ljmp
jg
jg
aam
fdivp
cmp
mov
inc
ja
lods
outsl
jb
mov
xchg
inc
mov
fs
je
leave
fcomps
push
adcl
lret
push
aam
xchg
imul
cmp
jb
lods
das
orb
cmpsb
adc
mov
jns
loope
aad
pop
xlat
arpl
jnp
inc
inc
mov
int3
adc
mov
push
jmp
xor
pop
fistpl
mov
xchg
jns
iret
push
jns
xchg
ja
sbb
leave
inc
cmp
pop
or
lret
movsb
jl
nop
arpl
ficompl
fsubs
imul
mov
lcall
sub
mov
lret
jae
ret
lea
jge
ljmp
imul
dec
mov
mov
mov
insb
das
shrl
jb
mov
xchg
stos
int3
lcall
or
push
mov
pushf
push
lahf
rcrb
aas
repz
lods
jg
lock
cmp
jb
cwtl
fwait
paddusw
and
clc
insl
in
hlt
insl
nop
mov
mov
popf
mov
xchg
fsubrs
jge
outsl
cmp
int3
shlb
mov
pop
or
xchg
aaa
xchg
aaa
and
xchg
leave
mov
push
jns
mov
je
cltd
xchg
jmp
outsb
int3
jae
add
xchg
sub
int
fildl
xlat
cmp
fst
ret
lods
lahf
mov
and
inc
leave
jno
je
cltd
or
pusha
mov
push
cmp
shrb
jge
js
push
lahf
sbb
or
mov
xchg
into
test
out
inc
das
int3
sbb
cmpsl
lock
mov
or
and
out
test
mov
mov
mov
mov
lods
iret
mov
into
testl
mov
jno
loopne
xchg
jno
addr16
jp
lahf
fwait
lret
push
jno
cltd
inc
mov
test
cmp
jg
mov
stc
inc
shlb
xlat
fistpl
sbb
jmp
leave
adcb
mov
jg
xor
mov
pop
aam
outsl
mov
lret
aaa
jmp
lods
jo
and
sarb
mov
sub
mov
adc
add
dec
cs
adc
stc
cwtl
data16
out
push
es
push
ret
enter
jae
jb
push
mov
jl
neg
xor
inc
jge
jb
cmp
jp
mov
imul
xchg
cmpsb
shrb
nop
aaa
cmpb
sti
mov
stos
sahf
xchg
adc
jl
int
push
pop
fldcw
inc
das
push
cmp
in
jg
scas
mov
mov
fistpl
sbb
jo
testb
mov
mov
xchg
mov
mov
inc
pop
push
or
cmp
mov
jle
arpl
sti
outsl
imul
jb
out
fninit
xor
addr16
cld
jp
adcb
push
cmp
sbb
add
xor
xor
negb
arpl
faddl
jl
inc
add
inc
popa
arpl
inc
incl
out
arpl
arpl
imul
pop
arpl
arpl
lahf
add
xchg
arpl
jl
inc
aas
int
imul
arpl
inc
ror
or
arpl
lahf
arpl
faddl
jl
inc
add
inc
popa
arpl
mov
mov
jns
sbb
mov
lret
arpl
lahf
adc
inc
pop
arpl
arpl
lahf
add
lahf
arpl
jne
fsubrs
mov
aad
fsubrl
fists
lret
jo
repnz
loop
adc
mov
xchg
iret
leave
jp
daa
outsl
jg
sbbb
jns
arpl
xor
mov
xchg
outsl
xchg
lret
fwait
sahf
jne
je
jg
mov
sbb
rclb
imul
sahf
xchg
js
test
ljmp
mov
stos
xchg
orb
add
adc
mov
jle
or
inc
lret
cmpsl
lcall
lea
sahf
pop
test
ret
or
jge
push
xchg
sarl
lds
test
orb
jg
mov
pop
or
sub
jb
and
test
inc
jne
jl
mov
xchg
jnp
inc
sti
int3
pop
push
mov
int3
lahf
cwtl
jb
push
out
adc
out
arpl
mov
xchg
push
incl
popf
leave
jb
aaa
add
lret
fwait
mov
iret
cwtl
jnp
cwtl
lock
xor
and
mov
mov
aam
mulb
scas
ja
mov
sub
cmpl
rorl
fstpl
sti
jnp
mov
sbb
mov
notl
int
arpl
aam
jnp
jp
jns
sub
mov
push
dec
fcompl
mov
jp
xor
cli
mov
leave
add
aam
fdiv
int3
jl
int
addr16
xchg
and
adc
add
cmp
out
test
gs
mov
je
ror
mov
mov
push
xchg
mov
insl
popf
into
addr16
sub
jmp
shlb
xchg
and
sbb
mov
mov
cwtl
jle
pop
cmp
pop
imul
and
shlb
stos
nop
fildl
fisttps
adc
dec
cmp
push
jp
cmp
icebp
mov
iret
sbb
adc
sbb
fsubs
pop
push
jbe
pop
arpl
or
sbb
and
lret
sbb
sbb
movsw
fcompl
popa
sbb
movsl
pop
cwtl
movsl
pop
sbb
mov
fildll
jmp
xchg
push
pop
sbb
xchg
movsl
add
popf
and
sbb
fsubrs
pop
xor
in
dec
sub
mov
xor
arpl
dec
in
lock
jnp
mov
test
arpl
jnp
frstor
inc
inc
sahf
je
jno
xlat
js
ja
pop
or
jmp
jb
inc
and
lret
call
xchg
pop
mov
add
dec
or
jle
iret
test
outsl
ds
popf
sbbb
adcl
scas
insb
jl
mov
lds
cs
nop
pop
mov
mov
mov
sub
out
call
in
mov
rcrl
int
xchg
mov
adc
js
xchg
popa
fdivr
xor
jle
lahf
mov
xchg
mov
iret
and
or
mov
int3
jnp
lret
mov
sub
or
cmp
int
sub
ret
push
sbb
test
mov
adc
push
sbb
ljmp
lcall
push
rcrb
adc
popf
dec
stos
lret
pop
jge
pop
leave
aad
adcb
lret
push
into
mov
or
cs
popf
ret
xorb
lret
mov
flds
dec
mov
jae
mov
iret
js
xchg
iret
jg
cwtl
mov
lahf
cmp
cmp
iret
scas
cmpsb
iret
mov
cmpsl
jnp
lcall
xchg
leave
mov
int3
insl
jns
dec
into
scas
aaa
int
sarb
fwait
iret
aam
sbbb
dec
subb
leave
aad
or
mov
lret
add
pop
ja
int
stos
fcmovbe
inc
iret
mov
xorb
lret
ja
int3
ds
jmp
aas
int
imul
stos
sub
fdivs
lret
leave
movsl
push
mov
lret
movsl
jns
or
mov
rolb
iret
sbb
stos
insl
jns
or
mov
int3
push
icebp
mov
into
add
ds
fcomp
iret
inc
sbbb
aaa
lret
ds
fcomp
lret
inc
sub
fcmove
inc
iret
mov
xorb
sub
stos
push
leave
ds
fcomp
lret
inc
into
mov
pop
inc
shlb
xlat
stos
push
lret
leave
fcomp
int3
inc
lret
mov
into
movsl
jns
adc
movsl
inc
dec
jnp
pop
cmpsl
sbb
cs
pop
push
jbe
sub
lret
cmp
int
rcrb
sbbl
pop
dec
test
lret
mov
sarl
lret
ds
lret
dec
jnp
lret
jmp
jns
push
inc
mov
mov
imul
xlat
sub
jnp
xchg
fiaddl
shlb
popf
jnp
dec
lahf
pusha
lahf
test
testl
or
dec
xchg
pop
lret
mov
mov
lahf
mov
fwait
mov
cmpsl
mov
pop
mov
leave
js
ljmp
data16
into
push
fbstp
fistpll
int3
add
xchg
stos
cltd
outsl
loope
cltd
lods
pop
xor
mov
cltd
mov
rol
jae
push
leave
cvtdq2ps
or
adc
aad
jae
add
jmp
hlt
repz
sti
jae
add
add
hlt
dec
sub
dec
jae
add
dec
sbb
push
sub
iret
xchg
fcomps
or
mov
xlat
add
das
pop
dec
push
dec
shlb
lret
lret
jle
sbb
sbb
push
pop
stc
adc
or
std
enter
jne
add
xchg
mov
xchg
sub
inc
lret
push
jb
or
aaa
nop
mov
push
jmp
iret
jge
cltd
mov
icebp
scas
or
in
iret
fcomp
iret
inc
iret
mov
iret
lea
jecxz
shrl
xlat
movsl
adc
leave
and
fmulp
data16
test
iret
mov
push
in
movsl
lret
outsl
xlat
les
sti
mov
pop
add
sbb
fcmovbe
inc
xlat
mov
xlat
test
lret
lret
lret
mov
lret
adc
lret
scas
mov
orl
insl
pop
shll
xchg
xor
cmp
icebp
sub
lret
mov
cmp
jge
aad
js
into
jle
or
mov
into
movsl
jns
adc
jns
or
mov
leave
fyl2xp1
or
insl
xchg
or
icebp
dec
dec
lret
jae
fsubl
pop
dec
fwait
push
dec
ja
test
push
xchg
push
lahf
movsl
push
fnsave
dec
popa
pop
push
jns
push
cmp
push
adc
leave
cmpsl
movsl
jae
cltd
add
add
pop
fdivr
into
movsl
jl
dec
into
mov
xchg
in
insb
dec
pop
pop
push
aas
dec
sahf
dec
xor
inc
imul
ss
inc
imul
jae
mov
mov
mov
mov
dec
xlat
add
aad
lock
imul
sti
lea
aad
sub
pop
lret
push
mov
movsl
pop
lret
cmpsb
test
flds
out
lea
stos
mov
pop
inc
stos
fcoms
lret
cwtl
cmp
inc
cmpsb
fisubrs
mov
jmp
adc
mov
push
inc
sub
mov
lahf
lahf
fwait
outsb
jnp
pop
dec
sbb
mov
cmp
movsl
insl
mov
nop
inc
roll
fsubl
bound
xor
aad
popf
scas
rcr
xchg
shrb
sbb
jne
daa
test
mov
mov
iret
jg
arpl
mov
repnz
inc
inc
loope
fisubrs
fiaddl
out
jne
add
cmp
fidivrs
jo
test
movsl
jnp
int
or
rcrl
inc
and
fbstp
andl
insb
cmp
jne
mov
lea
insl
push
push
cmc
lret
mov
out
mov
jo
iret
jb
mov
pop
pop
in
push
sahf
mov
repz
mov
dec
ja
sbb
addb
icebp
fcmove
iret
outsl
inc
inc
mov
mov
jns
stos
xchg
cmp
int3
imul
xor
cli
rclb
xor
iret
lret
inc
mov
xor
inc
fidivs
inc
jg
cmp
shlb
mov
cmp
xlat
bound
imul
sub
mov
in
xchg
mov
mov
cltd
aad
imul
sarl
iret
mov
adc
xchg
jo
imul
inc
icebp
lret
xor
addr16
popf
cli
xchg
and
xchg
mov
movsl
inc
and
fdivrs
out
push
and
mov
fbld
subb
ror
int
out
mov
lret
mov
mov
sub
iret
setne
mov
push
adc
fildl
insl
add
lret
fnsave
inc
lea
mov
cld
ror
dec
cwtl
xchg
cmpsl
jae
xchg
popa
into
arpl
jge
int
scas
mov
sarb
imul
js
and
ds
aam
mov
cmp
add
das
pop
aaa
xchg
sub
adc
scas
or
leave
test
dec
xor
sahf
loop
xchg
jg
mov
rol
ror
iret
sub
lds
popa
in
js
sub
leave
shl
fcmove
sub
sarb
scas
test
inc
sahf
scas
fisttpl
pop
negl
iret
lret
pop
test
loope
jae
jne
dec
xchg
incl
push
jnp
loope
push
cmp
fisttpl
sub
fistps
inc
jae
int3
add
add
sub
leave
scas
mov
cs
sub
lret
divb
xlat
mov
outsl
and
out
mov
jle
lahf
sbb
cmpsb
mov
insl
int
ja
out
dec
inc
seta
push
shrl
sub
cmc
push
ror
push
pop
xchg
jb
pop
das
aad
xchg
test
adc
iret
push
repz
jg
cmp
fidivrl
insb
mov
mov
into
leave
addr16
jne
sub
test
or
popf
fwait
dec
mov
aaa
lret
xchg
aam
sub
mov
fst
jne
lret
inc
in
push
loop
iret
aaa
lret
sbb
imull
sbb
adc
pop
fdivl
ror
sbb
pop
push
adc
xchg
sahf
mov
insb
mov
ja
and
aam
or
sbb
pop
gs
xor
int
pusha
nop
mov
das
sahf
jns
aaa
out
lret
jge
adc
rclb
inc
repnz
inc
sub
mov
imul
leave
imull
out
mov
jne
sbb
adc
jb
iret
jmp
dec
adcb
mov
mov
ss
add
mov
int
xor
and
jge
mov
sbb
fildl
cs
andl
mov
loope
ret
pop
xchg
jle
andl
fnstenv
push
cmpsl
or
mov
cmp
cs
iret
jg
xor
je
sbb
mov
xor
pop
movsb
jmp
sarl
sub
stos
mov
xchg
insb
inc
stos
int3
iret
out
aad
fwait
jg
mov
in
icebp
fimuls
std
int3
jae
leave
push
pop
outsb
lret
push
dec
pushf
push
push
mov
adc
lds
repz
lret
arpl
iret
dec
xor
pusha
dec
stos
stos
and
out
mov
lahf
aaa
xchg
stos
jno
sahf
cltd
daa
push
ror
add
int
mov
xor
sbb
sahf
adcl
shll
loope
lret
pop
mov
sbb
loope
xchg
inc
sbbb
loope
jmp
mov
imul
xchg
test
xchg
push
jbe
movsb
lea
jecxz
cli
jne
test
or
popf
inc
push
fstl
imul
mov
xchg
adc
pop
sub
sbb
xchg
cli
jl
stos
inc
call
ljmp
sub
mov
lea
jnp,pt
shll
and
repz
mov
push
fiaddl
insl
repnz
mov
push
mov
mov
faddl
mov
sbb
in
pop
movsb
out
fnstcw
mov
lret
jbe
sbb
inc
imul
push
sbb
fmul
xlat
movlps
insb
sarl
mov
mov
fnstenv
iret
lea
int
leave
jp
ss
sbb
inc
mov
lret
jns
mov
ds
xorl
sbb
sbb
subl
imul
sub
mov
jmp
outsb
cmp
or
mov
sub
clc
pop
dec
outsb
xor
mov
int3
int
push
push
in
sbb
pop
dec
fcmove
repz
mov
popa
negb
pop
jno
scas
lahf
iret
jle
cmp
jns
mov
or
adc
jns
mov
stos
sub
xorl
mov
fwait
rcrl
test
jg
lret
scas
jecxz
xorl
or
lret
rcll
adc
lret
mov
sbb
push
mov
xchg
cltd
lods
push
and
jb
mov
fcomip
aaa
iret
or
and
mov
adc
int
push
cmp
jne
stos
lahf
call
pop
xchg
decb
jecxz
shl
or
shll
push
mov
andl
lret
fcom
jecxz
movsb
sbbb
sub
cmp
out
lea
movsl
add
xchg
dec
sub
fstpt
cmp
add
jle
xor
aam
inc
pop
in
cltd
testl
inc
int3
xchg
mov
loopne
push
lret
sarl
push
mov
pop
pop
mov
arpl
xor
mov
or
sub
push
lds
xor
add
jecxz
popf
leave
inc
xchg
mov
or
lea
xlat
das
xor
add
jge
dec
add
jecxz
xor
dec
mov
dec
jl
mov
xor
lds
add
btc
stos
dec
inc
xchg
mov
or
and
dec
adc
inc
lods
iret
and
sbb
scas
mov
push
mov
ss
aam
testb
pop
jge
hlt
out
into
fwait
insb
cmp
loopne
movsl
cwtl
inc
add
xor
pop
rorl
repnz
adc
inc
shlb
xchg
repnz
movsb
mov
push
leave
mov
dec
repnz
leave
dec
pop
insb
xor
test
js
mov
int
dec
addr16
push
scas
sahf
add
movsb
aas
pushl
pop
add
decl
mov
mov
add
cmp
dec
or
ret
pop
pop
adc
pop
add
and
rcll
into
test
icebp
iret
adc
movsl
cmpsb
xchg
stos
pop
dec
mov
sti
push
pop
mov
leave
int
push
adc
iret
lods
shlb
sub
xor
pop
xchg
jge
jl
mov
ror
cmpsl
int
fstps
push
arpl
cmp
sbb
push
gs
fisubrs
pop
dec
iret
push
lret
pop
sbb
test
xchg
pop
mov
cwtl
sbb
gs
xlat
jle
mov
lea
aas
jp
in
xor
iret
movsl
lock
int
jns
rcl
iret
sbb
aas
or
xchg
dec
adc
es
push
lahf
and
and
or
sti
lret
cmp
mov
xor
test
mov
sub
rclb
inc
jg
ja
das
aaa
sub
mov
xlat
outsl
int
jbe
outsl
aad
filds
sub
insb
sbb
mov
mov
mov
cs
jg
push
inc
inc
rol
test
sub
repnz
add
into
mov
push
lret
out
test
xorl
out
in
sbb
lahf
outsb
mov
jne
imul
sub
mov
inc
fcom
aad
ret
xorl
fadds
add
lahf
push
sbb
jne
mov
call
lahf
test
daa
loope
sbb
xlat
mov
js
insb
push
je
jno
stos
test
and
xchg
fmul
jae
sub
fistl
orl
xchg
cwtl
inc
or
adc
mov
mov
daa
sahf
inc
imul
mov
cmp
outsl
dec
filds
ss
mov
pop
dec
test
xchg
and
adc
cmp
movsl
adc
xchg
in
jg
or
push
sbb
cltd
or
xorl
loope
fwait
les
pop
cmp
pop
xorl
and
andb
loopne
xchg
ret
push
fnstenv
dec
shlb
movsl
or
add
test
rcrb
lahf
iret
imull
pop
les
sbb
lahf
xor
aaa
in
mov
sub
adc
fs
sub
lods
icebp
shll
add
xchg
mov
sub
dec
rolb
push
into
cwtl
fwait
inc
xor
add
sbb
add
mov
in
dec
inc
or
inc
rep
mov
test
xchg
xchg
pop
aam
iret
rol
pop
shrl
outsl
mov
in
call
lret
leave
std
movsl
dec
lods
lret
sub
cmc
out
fsubrs
andl
mov
fnstenv
or
inc
xorl
push
rorl
sub
arpl
andb
push
inc
test
arpl
sub
jmp
or
mov
or
and
push
dec
or
xor
add
jp
popf
dec
pop
xorl
lahf
repz
dec
sub
jg
pop
push
or
adc
jg
dec
ret
mov
pop
xchg
insl
sarb
xchg
fcomp
cs
jne
cltd
xchg
sub
fcmovne
mov
mov
cmp
movsb
ret
leave
pop
popa
pop
fiadds
leave
sub
jne
rcl
fildll
fisubs
dec
xchg
clc
ja
inc
jecxz
dec
lods
int
xor
shll
or
mov
fwait
iret
or
mov
mov
fbstp
sub
mov
mov
jmp
sub
jno
xor
cmpsl
pop
leave
dec
cmp
xor
xchg
cs
mov
cltd
or
sub
fdivrs
inc
stos
push
push
xor
dec
int3
data16
test
out
clc
insl
push
std
dec
addr16
add
rclb
ret
test
adc
pop
push
sub
negl
push
xor
pop
sub
movsl
mov
push
sbb
mov
push
ficoml
in
cmpsl
insl
jl
fmul
add
cli
mov
xchg
dec
out
shrb
je
out
test
mov
cmp
dec
test
xlat
xorl
xlat
mov
pop
insb
mov
ljmp
and
es
xchg
xlat
fadds
push
cmp
jae
and
push
sahf
leave
adc
icebp
adcb
cmp
push
adc
xchg
int
int
adc
or
xchg
push
gs
mov
inc
mov
push
imul
je
cmc
dec
lds
sbbb
mov
mov
test
lds
int
ljmp
subl
verr
das
jle
fildll
or
sub
inc
adc
insb
popf
arpl
sub
repnz
pop
scas
imul
push
cmc
addl
imul
insb
repnz
mov
sub
xor
ret
mov
mov
pusha
scas
ljmp
pop
xchg
sub
mov
popf
in
mov
adc
subl
mov
xchg
fisttps
mov
lods
int3
pop
insl
sub
subl
xchg
cltd
and
mov
or
outsb
insb
mov
pop
orl
testl
inc
outsb
lcall
sub
popa
push
cmp
pop
mov
jmp
imul
inc
xor
mov
cmp
into
shr
stos
daa
pop
pop
sub
xorl
fildll
dec
push
pop
mov
inc
cmp
pop
ja
pop
lahf
pop
sbb
sbb
sub
repz
xchg
cmp
in
rcl
loope
sub
mov
fwait
iret
shlb
ss
and
pop
mov
jg
xlat
inc
std
mov
inc
sahf
jno
fnstsw
pop
jnp
imul
xchg
pop
mov
push
dec
inc
xchg
iret
adc
dec
ljmp
sbb
iret
stos
rclb
mov
sub
inc
mov
int3
loope
sbb
mov
inc
js
das
pop
shll
mov
dec
lahf
imul
lret
xchg
in
lds
jno
lret
jae
push
stos
add
lods
insl
inc
push
add
sbb
push
dec
jmp
cmpsl
adcl
pop
xlat
jecxz,pn
sub
cs
mov
sti
pushf
lret
mov
aad
int3
jne
sub
push
fldt
xor
inc
bound
xor
dec
lret
add
pop
mov
and
dec
pop
outsl
cwtl
ljmp
int3
aam
shll
shlb
mov
xchg
mov
lea
inc
push
lods
ljmp
xor
mov
das
insb
test
jge
cmp
mov
xchg
sub
xchg
loop
ret
faddl
test
xlat
fmul
jecxz
ret
sbb
stc
ja
mov
ljmp
fprem1
push
sti
adc
shlb
mov
dec
xchg
dec
shll
dec
insl
in
and
insb
pop
xor
cmp
xor
into
fsubs
and
faddl
xchg
or
sbb
push
int
mov
ret
adcb
fs
sbb
test
movsb
push
inc
push
out
in
mov
jo
fs
into
incb
das
push
sub
jns
andb
data16
jle
push
sub
push
je
imull
fildl
sarl
pop
pop
inc
and
cmp
mov
mov
dec
out
sbb
pop
mov
xchg
lret
movsl
jmp
jecxz
xchg
sbb
and
fs
lahf
mov
shll
gs
es
xor
hlt
add
mov
sub
cmc
mov
mov
cmp
mov
jle
sub
dec
mov
push
cmc
push
mov
xor
iret
lret
add
imul
ss
mov
xor
bound
insl
sbb
push
sahf
out
lret
pop
arpl
jle
pop
test
data16
cmp
jne
mov
or
xorl
imul
int
arpl
jno
clc
loope
fs
movsb
or
adc
sub
dec
sti
pop
sti
mov
adc
push
mov
push
pop
sub
push
fcoms
mov
inc
shlb
jne
or
lret
dec
fildll
xchg
into
arpl
mov
xchg
jge
out
popf
cmp
imul
inc
lahf
mov
arpl
dec
lods
xchg
repnz
mov
mov
adc
push
ret
mov
jg
ljmp
rclb
fistpll
iret
loop
mov
and
sub
pusha
call
jae
push
dec
dec
inc
sbbb
dec
loop
lock
pushl
sub
imul
or
psadbw
xlat
jg
lret
out
adc
and
pop
add
xchg
jno
sbb
and
pop
ret
in
fsubs
stc
enter
sub
mov
fisttps
fidivs
mov
or
cmp
out
mov
dec
pop
sbb
mov
mov
imul
push
mov
repnz
mov
ss
xlat
movsb
lods
arpl
fwait
test
xchg
dec
fs
jbe
das
in
bound
loop
idivl
cmp
shrl
fisubl
out
pop
repz
add
aaa
mov
pop
subb
add
fnstenv
cmp
jnp
icebp
cmp
addr16
bound
fsubrl
dec
add
jl
dec
push
fwait
inc
aam
movsl
lret
daa
xorb
adc
neg
add
or
iret
adc
cmp
sub
ljmp
lock
das
sub
push
push
mov
cmpsb
sub
push
out
repnz
or
xchg
hlt
cmc
out
leave
ljmp
cmp
mov
pop
mov
adc
dec
and
mull
insb
sub
ret
mov
pop
cmp
xor
adc
jecxz
lea
call
pop
enter
hlt
pop
mov
pop
iret
add
adc
in
xchg
rcrl
mov
outsl
mov
rcrb
cmp
aam
sub
popa
pop
pop
push
int3
xchg
cld
imul
addl
ret
ror
dec
fidivl
cmp
adc
test
jb
rcrl
fistl
push
adc
or
pop
loope
std
rcrb
xor
inc
outsl
fnstsw
and
cmpsb
sbb
fsubl
cmp
aad
mov
pop
mov
dec
push
adc
in
inc
dec
aad
out
scas
fildll
mov
jno
jp
add
sub
or
xor
scas
mov
mov
push
pop
adc
push
jge
cvtps2pd
shlb
call
pushf
movl
push
lea
jmp
lea
ja
push
pusha
add
lea
jmp
rol
fistpll
inc
fsts
jno
repz
rcrl
inc
mov
scas
mov
shl
mov
jmp
sbb
xchg
lcall
pushf
lret
inc
scas
sbb
pop
jbe
push
enter
jecxz
xor
xchg
mov
adc
repz
movsb
pop
pop
aad
dec
fidivrs
pop
pop
mov
pop
ret
sahf
sub
inc
aad
mov
or
mov
or
mov
pushf
cmpsb
adc
inc
rcr
enter
or
imull
pushf
lea
jmp
outsb
sbb
add
int3
dec
adc
mov
or
popf
mov
or
pop
xor
jge
arpl
bound
jle
notb
pop
icebp
sub
xchg
pop
mov
fidivl
inc
mov
aaa
jbe
mov
push
sti
sub
mov
push
jbe
inc
cmp
push
xchg
addb
repnz
int
sbb
lods
mov
into
xlat
inc
xchg
popa
add
dec
les
mov
mov
subl
mov
rorl
or
ds
addl
cmp
add
cmp
mov
out
addr16
inc
jb
cli
mov
pop
mov
stc
jnp
cmp
cmp
xchg
xor
push
push
adc
jl
push
leave
sub
cmpsl
repnz
mov
xchg
mov
inc
bt
mov
jmp
lea
je
pushf
push
lea
jmp
cli
add
enter
mov
dec
and
in
push
orb
fstl
fstps
cmpb
scas
daa
pop
pop
add
out
and
xchg
rclb
cli
jp
xor
stos
sbb
mov
xchg
popf
and
sub
lods
cmpsb
clc
push
pop
jno
cmpsl
rcrl
or
int
cmp
andl
jecxz,pn
loopne
jmp
ds
adc
push
lods
pop
and
sti
outsb
cltd
pop
pop
imul
jbe
into
push
and
jae
fists
out
sbb
das
dec
inc
sarl
lods
daa
and
mov
push
mov
test
sub
aam
jo
pushf
data16
sbb
gs
pop
mov
jo
fbld
or
icebp
push
test
ficomps
lods
inc
std
cmp
mov
cs
in
mov
lods
pop
dec
test
sti
icebp
pop
je
inc
pop
rcr
pop
adc
jmp
inc
sarl
loop
jb
and
ret
mov
arpl
aas
out
jo
mov
icebp
imul
push
aaa
cmp
mov
pop
cs
scas
pop
cmc
negl
mov
lea
dec
loop
mov
outsl
sub
cli
test
and
cmp
sbb
and
out
sbb
test
push
das
mov
push
adc
sub
shr
ror
push
cmp
bswap
push
test
mov
bswap
push
add
pusha
mov
bsf
shld
or
pushf
mov
pusha
clc
stc
pushf
test
jmp
inc
call
lea
je
inc
sbb
adc
shr
mov
pusha
inc
add
shl
bsr
mov
push
test
jmp
push
mov
movl
pusha
jmp
jmp
cmc
clc
sub
pushf
pushl
lea
call
pushf
jmp
clc
push
cmp
pusha
movb
pushf
lea
jb
bt
jmp
mov
call
jmp
lea
call
jmp
sub
adc
mov
adc
mov
mov
adc
mov
ss
mov
mov
adc
adc
mov
mov
ss
mov
ss
cmp
mov
ficomps
push
outsl
ljmp
mov
test
add
xor
icebp
ss
jecxz
fstpt
dec
mov
icebp
cmp
push
mov
mov
ljmp
mov
mov
add
adc
xchg
lock
call
jns
loopne
sbb
fildl
test
mov
lahf
mov
es
outsl
nop
mov
fadd
adc
das
pushl
push
sbb
int3
mov
mov
jae
lahf
mov
mov
pop
adc
std
xchg
push
and
inc
into
xchg
pop
rclb
ja
test
popf
mov
and
push
mov
pop
call
pop
daa
xchg
mov
lods
pop
sbb
loope
loope
in
and
cmc
sahf
test
ss
pop
es
int
dec
adc
cmp
scas
movl
xchg
jp
adc
movsb
leave
jae
sub
adc
ror
inc
jb
push
idiv
mov
xor
adc
add
fldenv
lods
stos
jl
fwait
call
out
adc
outsb
xchg
cltd
mov
in
xorb
mov
add
sub
loopne
sarl
pop
xor
xchg
push
add
sbb
stos
jae
xor
jecxz
fwait
subl
loopne
loope
into
jle
stc
add
cmp
in
mov
jo
sbb
lahf
imul
push
mov
xlat
push
xor
into
xchg
sub
sarb
lock
xchg
push
out
es
add
pushl
neg
mov
jmp
call
imul
gs
xor
cs
insb
add
lcall
push
xchg
xor
mov
dec
mov
mov
mov
pop
cmp
jecxz
inc
mov
sbb
lock
rolb
pop
shlb
sbb
scas
sbb
lahf
pop
fbld
dec
cwtl
fisubl
outsb
out
aam
cmp
sbb
in
and
adc
mov
mov
dec
popa
jl
mov
push
mov
jo
mov
popf
sbb
aam
cli
ja
xchg
sub
in
push
jle
jae
cmp
scas
outsl
movsl
sahf
push
pop
dec
cmc
sbb
and
adc
and
and
dec
xchg
mov
and
out
pushf
push
jmp
lea
jae
jmp
test
out
mov
jbe
in
inc
mov
cmpsl
mov
inc
cmp
push
cmp
push
xchg
hlt
out
mov
mov
mov
call
sub
cmp
out
xchg
ret
dec
inc
lock
daa
mov
push
std
scas
push
and
adc
pushl
push
movl
lea
je
pushf
pushl
mov
call
mov
mov
gs
clc
adc
mov
xchg
loope
inc
or
imul
xor
push
jnp
lret
xchg
iret
cmp
stos
xchg
adc
mov
scas
in
push
xor
jecxz
mov
sbb
xchg
call
rclb
in
js
fstps
mov
jae
or
cmc
loope
xchg
dec
push
sub
pop
in
lret
call
push
inc
cld
mov
cmc
pusha
popa
in
ja
jl
dec
jp
lods
rorl
mov
and
push
fldl
fwait
push
jae
jmp
mov
sbb
sarb
sarl
inc
pop
mov
mov
bound
cmp
in
dec
mov
in
push
jl
jo
fldenv
nop
mov
iret
stc
cmp
jne
je
sub
pushf
ret
not
call
iret
pop
ss
loope
or
nop
mov
push
push
push
mov
pop
jl
fidivrs
sub
jl
in
push
dec
xchg
xchg
jl
push
fmulp
pop
lret
inc
cmp
mov
sarb
adc
rclb
xchg
test
loope
cmpsl
jo
pop
insl
fstpt
testl
xor
mov
test
jbe
jl
mov
mov
imul
xor
pushf
and
enter
adc
mulb
in
jecxz
dec
mov
push
fisubrs
je
xchg
enter
js
adc
fwait
dec
inc
pop
adc
cmp
and
push
lea
je
jne
test
pusha
clc
cmp
pushl
lea
je
pushf
lea
jmp
push
pusha
mov
movl
jmp
call
sarb
jecxz
or
icebp
sub
inc
mov
ret
jno
ljmp
xchg
lods
popa
dec
pop
sub
cltd
adcl
sub
dec
stos
add
pop
push
dec
sub
sti
dec
pushf
ficoml
mov
dec
arpl
dec
jg
add
cld
jl
push
add
repz
frstor
clc
xchg
cld
mov
cmp
sbb
sbb
xchg
aas
into
xlat
arpl
xor
sub
out
dec
gs
sti
adc
dec
add
stos
push
and
push
aaa
xchg
loop
inc
lcall
mov
mov
pop
icebp
push
cwtl
inc
insl
push
adc
mov
mov
inc
pushl
push
cmc
add
test
mov
stos
lahf
in
dec
lcall
mov
mov
or
sbb
fs
movb
xchg
sub
lret
push
in
jmp
cmp
add
jo
mov
mov
repnz
and
jbe
movl
pushl
pushf
movl
pushl
push
pusha
pushf
lea
jmp
cmpsb
repnz
aad
sbb
sbb
adc
push
sahf
sti
mov
test
ds
lret
xlat
loopne
popa
push
adc
inc
aad
or
or
jp
fistps
add
fld
scas
jb
xchg
inc
mov
test
in
sar
bts
cmc
mov
bt
stc
or
call
lea
jl
je
stc
cmp
call
push
stc
mov
and
out
push
cmc
lods
or
inc
mov
mov
repz
jno
push
mov
jecxz
iret
stc
sub
mov
int
enter
ret
mov
and
jno
out
sub
jmp
rorb
enter
jl
lret
jp
mov
or
shll
inc
jnp,pt
int
in
mov
xchg
jmp
test
movsl
adc
jns
cmc
test
sub
pop
mov
scas
mov
int
sub
inc
add
xor
xor
adc
cmp
cmp
cmp
cmp
xchg
mov
mov
mov
mov
adc
mov
ss
mov
mov
adc
adc
mov
mov
ss
mov
ss
cmp
mov
cmp
not
mov
call
cmc
cmp
call
lods
lock
out
fidivs
or
cmp
push
shlb
nop
cmp
and
jb
pop
into
movsb
sbb
sbb
push
test
jg
push
insb
add
xchg
mov
call
scas
and
push
repz
orl
lods
movsb
cwtl
pushf
js
or
mov
outsl
jmp
adc
std
dec
scas
cmpsl
scas
in
jmp
inc
inc
aad
xchg
inc
inc
rorb
mov
sbb
stc
call
cmc
fwait
pop
call
fdivrl
inc
xor
and
sub
mov
adc
sbb
sub
lea
scas
sbb
push
inc
and
testl
xchg
sahf
es
fnstsw
xchg
jmp
add
cltd
adc
andl
xchg
xor
sbb
dec
sbb
das
sub
push
arpl
int3
ficoms
js
push
movb
pusha
mov
call
cmp
jmp
mov
rol
stc
sar
push
sub
pusha
lea
jmp
test
cmp
jmp
add
movb
jmp
pusha
mov
bt
movw
bt
jmp
aad
mov
aad
iret
daa
jle
adc
push
pop
rorl
xor
cs
insl
fucom
clc
mov
aaa
xchg
sub
icebp
push
sarl
push
pop
call
in
rol
leave
cmp
ss
enter
rolb
mov
dec
lcall
and
js
cltd
inc
aad
ss
aad
or
repnz
in
add
cltd
orb
inc
push
test
or
jo
movzbw
movzbw
pop
push
pushf
mov
pushf
pushl
ret
pop
sub
add
push
add
pop
add
pop
add
pop
add
hlt
sbb
and
push
push
cmp
call
pusha
lea
je
seto
mov
mov
lahf
bswap
lea
jmp
add
add
dec
jne
or
mov
into
cmpsl
loop
cmpsb
xor
adcl
mov
js
push
xchg
and
cltd
inc
pop
test
cltd
orb
in
xor
mov
cmp
lea
js
lock
insl
mov
movhps
out
cmp
mov
push
xchg
insb
push
mov
loop
or
push
cld
repnz
jnp
adc
xlat
popa
rorb
mov
xchg
cmp
pop
in
xor
push
inc
out
mov
stc
les
jnp
add
dec
in
mov
sub
sub
cmp
add
adc
lret
loop
sti
add
cmp
ljmp
inc
fnsave
fs
call
pushf
call
jmp
and
insl
dec
inc
call
aaa
xlat
in
jge
add
jae
and
lret
dec
movsb
mov
inc
adc
mov
cmp
mov
adc
adc
int
rorl
or
jg
fnstcw
lret
cmpb
shl
mov
fcompl
ss
sub
ss
xor
push
fs
jne
or
mov
push
bt
add
clc
call
push
cli
mov
loope
xor
adc
cmpsb
loope
je
sub
mov
sbb
push
fidivs
aam
inc
ret
xor
jbe
sub
hlt
fmul
jmp
xor
jo
push
xchg
cs
adc
sarl
stos
pop
inc
push
fldl
test
aad
adc
das
in
inc
notb
mov
insl
mov
adc
pop
mov
mov
pop
inc
jb
xor
insl
mov
sahf
sbb
inc
rcrl
clc
xchg
lret
inc
movb
mov
imul
pop
js
or
test
aam
jnp
les
into
sbb
sub
setp
iret
fs
popf
xor
frstor
sub
mov
adc
insb
xchg
add
fdivl
popa
sbb
adc
fwait
cmc
adc
push
jl
out
popf
xor
sub
bound
aas
pop
stos
movsl
mov
call
imul
ret
iret
js
int3
xchg
and
xchg
pop
mov
ss
sub
xor
or
call
xchg
mov
mov
lahf
xlat
mov
js
sub
bound
shrl
pop
icebp
mov
decb
insl
dec
push
cld
int
sub
lret
jbe
sub
pushl
push
mov
mov
adc
push
aaa
push
add
sti
sub
mulb
sar
inc
fcoml
cmp
or
lock
xchg
sbb
pop
inc
mov
pop
adc
faddp
inc
aad
or
pushl
xchg
and
adc
test
push
lahf
dec
repz
call
and
fidivrl
enter
dec
and
call
pusha
pushfw
popw
neg
sub
and
and
mov
bt
stc
test
sub
bt
pushf
test
xor
jmp
jmp
dec
pop
mov
orl
das
push
sub
mov
mov
pop
push
cmp
lahf
mov
cmp
pop
add
mov
mov
loope
xchg
mov
repz
icebp
sahf
mov
xor
jp
push
jl
or
lods
lret
pushf
xor
pop
shrl
mov
mov
mov
mov
push
push
fcoms
jmp
cmpsl
sub
cmpsb
popf
sbbl
test
pusha
push
cwtl
fistps
rorl
lock
dec
mov
sarl
fs
add
pop
aas
inc
push
in
and
out
cltd
lock
int
bound
loop
inc
aad
loop
push
aas
lods
or
andl
loopne
adc
dec
push
jle
adc
and
push
cmp
test
or
pushf
lea
je
test
clc
pushf
or
pusha
call
repz
call
lea
jb
pusha
mov
pushf
pushl
ret
call
adc
pop
imul
pop
pop
aam
sub
sti
test
sub
jge
js
sbb
bound
jp
mov
inc
lret
fnstsw
jnp
mov
xor
push
and
adc
mov
xchg
aaa
jbe
jmp
ret
popf
testb
adc
fwait
nop
or
inc
sub
inc
popf
daa
dec
icebp
jecxz
jno
and
xchg
fmul
pop
shll
cli
stc
cmp
fsubl
jns
mov
and
xchg
jmp
pusha
stc
call
movzbl
not
pusha
mov
jmp
and
bt
add
add
cmc
add
push
dec
call
movsl
shr
aaa
cli
and
pushf
jae
and
fstl
sbb
sub
test
pop
sbb
fwait
jnp
lcall
cmpsl
repz
push
enter
adc
sub
fcmove
mov
lret
ret
jp
stc
mov
jne,pn
pop
cmp
imull
fstpl
dec
clc
add
test
jge
addr16
mov
sub
adc
fs
push
rorb
js
cmpsb
pop
dec
jae
out
rcl
jl
cmp
add
popa
out
sub
out
sti
jle
pop
cld
jmp
movsl
dec
add
jno
adc
cli
push
add
jl
insl
jo
pop
lds
pop
mov
call
pop
push
test
movsl
dec
xchg
sbb
subl
mov
sbb
pushf
mov
sub
test
pop
jno
fs
je
jmp
push
pushl
lea
jb
pusha
pushl
ret
sarb
mov
jnp
xchg
xchg
adc
out
leave
cmpl
cmp
xchg
mov
dec
mov
push
shll
pop
enter
sti
inc
enter
jae
xor
in
pop
sahf
stos
lret
adc
xchg
out
cmp
mov
jle
xchg
aaa
xor
pushf
pop
cld
push
inc
fnstcw
jns
lods
or
xchg
into
sub
fldl
jne
pop
enter
dec
pop
push
or
addr16
push
sub
dec
or
js
int
mov
xlat
je
push
mov
enter
repz
or
int3
lock
in
sub
stc
call
mov
imul
add
fistpll
push
clc
mov
insb
jne
test
insb
shr
inc
pusha
push
sbb
inc
mov
mov
test
xchg
lds
fcmovnu
and
mov
mov
fcompl
cmp
fcompl
xor
add
cmp
add
xchg
mov
mov
and
nop
lods
test
pushf
aaa
xor
call
adc
fsubl
xchg
inc
outsl
mov
into
jns
aam
inc
pusha
imul
lea
jbe
mov
inc
mov
pop
and
in
pushf
movl
mov
call
mov
cltd
sbb
pusha
inc
pop
cli
xor
mov
in
mov
test
adc
jns
xchg
or
sbb
dec
cmc
loope
icebp
les
loope
aad
lock
cld
jmp
lahf
addr16
inc
adc
jae
js
aas
inc
nop
ficompl
outsb
xchg
sbb
cmpsb
push
lret
mov
fsub
loope
ds
cmpsb
lret
lret
call
lcall
mov
push
in
cs
mov
mov
push
add
aad
lods
test
in
xchg
sub
rol
inc
hlt
out
clc
loope
pop
add
inc
sub
mov
push
pushl
xlat
and
fiaddl
les
push
outsb
leave
sbbb
mov
rorl
xchg
dec
xchg
xor
cli
hlt
fsts
mov
jle
mov
push
xor
out
enter
ret
test
das
call
sbb
sarl
sarl
or
mov
mov
mov
loop
xchg
call
jle
popf
mov
lret
push
outsb
inc
adc
cmp
add
leave
xchg
inc
dec
clc
orb
and
dec
movl
push
push
pushf
lea
jmp
subb
xchg
je
mov
or
fidivrl
xor
jecxz
ljmp
dec
cltd
cmp
push
mov
add
cmp
fwait
lods
lds
add
cmp
adc
add
push
addb
mov
inc
cwtl
test
scas
loopne
adc
outsl
and
out
xchg
add
add
xchg
or
push
nop
inc
mov
xchg
ret
add
cld
add
in
movl
jmp
lea
je
push
call
jmp
mulb
sti
out
movsb
test
lods
out
js,pt
lods
push
pusha
cmp
cmp
dec
or
fstl
xor
jo
jno
ja
fldenv
sub
aam
push
jmp
pusha
in
or
and
and
into
in
icebp
jmp
xchg
cmp
dec
cmp
jnp
dec
xchg
mov
shrb
or
add
push
mov
fimuls
clc
daa
es
cs
cmp
and
fwait
jecxz
mov
cmp
outsl
pop
aaa
cmpsb
mov
dec
dec
ss
pop
stos
lods
xor
lret
inc
bound
dec
inc
enter
in
cmpsb
and
or
es
rcr
aam
jmp
cmpsl
shr
cltd
into
dec
mov
nop
mov
arpl
jns
into
cmpl
enter
call
ljmp
subl
in
push
fadd
pop
pop
mov
push
stos
je
and
test
push
jle
imul
add
les
popa
xchg
dec
cmc
xor
shrb
lcall
and
outsb
repnz
ror
add
aas
mov
mov
mov
jl
xor
pop
inc
mov
push
mov
les
xchg
sbb
dec
sbb
fcmove
push
inc
jnp
icebp
dec
daa
and
jmp
ret
and
inc
aad
outsb
imul
or
fwait
mov
and
lahf
mov
popf
push
mov
test
pushf
cmc
cmc
or
jmp
dec
aaa
xchg
pop
pop
jmp
scas
test
jne
call
sub
inc
mov
lods
rcrl
popa
leave
std
pop
jg
inc
mov
scas
imul
xorl
mov
xor
data16
pushf
xchg
push
lods
dec
mov
add
sbb
or
dec
xchg
movsl
imul
xor
pop
mov
pop
pop
adc
mov
jb
xchg
pop
daa
adc
sub
jge
jb
out
and
cld
jo
fsubs
andnps
mov
sub
xchg
inc
enter
mov
je
lahf
pop
jae
cmpsb
sbb
mov
mov
dec
adc
add
int3
stos
mov
push
and
add
aad
out
xor
mov
pop
test
or
ret
mov
push
es
or
sbb
movsb
outsb
lcall
into
mov
cmpb
outsb
repz
fs
pusha
jns
out
cmp
mov
enter
push
mov
les
xchg
xor
push
scas
test
fildl
rcr
push
pop
sarl
mov
mov
push
out
fs
les
cmc
in
inc
mov
fs
and
ret
and
jns
push
pusha
pusha
lea
jmp
rep
movsbw
lea
mov
pushf
pusha
pushf
pushf
lea
jmp
pusha
movb
pushl
pushl
popl
pushl
pushl
ret
cmpsb
shrb
add
pop
fistpl
jle
ror
enter
les
xor
xchg
in
inc
add
dec
ljmp
sarl
adc
dec
xchg
sbb
icebp
int3
leave
dec
inc
jns
stos
ffreep
int
add
xor
xor
xorb
out
aam
in
or
out
out
test
and
jg
nop
notb
ljmp
xor
ret
cmp
dec
ljmp
push
rolb
mov
hlt
dec
andl
aas
cwtl
xchg
dec
stos
cmpl
fadd
in
ds
lods
mov
pop
xor
adc
sbb
clc
in
xlat
inc
scas
clc
jl
xchg
sub
mov
jecxz
js
outsb
dec
les
mov
inc
xor
jae
out
sub
sub
mov
dec
or
scas
xchg
lcall
es
addl
enter
mov
xor
into
pop
test
jae
mov
dec
cmp
jns,pn
in
mov
int
jp
xchg
add
je
outsl
fs
gs
imul
add
and
movl
push
mov
movb
pushf
lea
jmp
mov
pusha
movb
pushf
pushl
ret
pushf
add
jmp
bound
jno
test
fistpl
jmp
xchg
xchg
adc
sbb
xchg
lahf
cmp
sahf
fsub
xor
ss
mov
lds
sbb
add
mov
mov
mov
aad
das
loop
mov
ss
fstpt
test
xor
mov
lods
pop
lahf
data16
pop
stos
arpl
cmp
dec
enter
adc
inc
dec
sub
xchg
pop
sbb
pop
cmpsl
push
mov
push
xor
out
ja
xchg
mov
mov
lods
mov
leave
cmpsl
cmp
and
add
fdivl
sar
fldt
mov
jae
rcll
xor
pop
cld
dec
cmc
fsubrl
adc
sar
sbb
dec
and
outsb
stc
sub
cmp
icebp
add
mov
ljmp
sbb
mov
push
xlat
mov
and
stc
xchg
push
sti
mov
jae
cmp
enter
mov
xor
jg
or
aas
fs
loop
imul
mov
and
addl
jg
pushf
imul
sbb
loop
ja
aaa
adc
dec
fisttpl
xor
push
call
stos
dec
aaa
xchg
bound
pop
pop
xlat
daa
cmp
jl
fadds
int3
es
mov
xchg
pop
xor
xchg
lcall
test
pushf
jne
int3
xchg
andb
fsubrl
fs
lods
sbb
sbb
jmp
pop
arpl
and
cmpsl
inc
clc
int3
inc
hlt
mov
and
leave
nop
test
push
clc
mov
mov
push
mov
iret
mov
repz
out
jge
cmp
dec
mov
mov
imull
jp
add
scas
mov
insl
jns
ficoml
call
lahf
mov
aad
xchg
lret
stos
fcmovnbe
push
and
mov
in
lret
mov
push
mov
pop
imul
lcall
fiaddl
cmp
sarb
inc
in
iret
aaa
mov
outsl
push
xchg
sub
mov
pop
fists
jno
mov
loop
out
add
aaa
nop
repz
sub
sub
pop
icebp
mov
inc
out
test
cltd
out
cmc
mov
cmp
stos
lahf
sub
or
popf
mov
adc
pop
std
inc
movsb
pushf
jg
inc
jge
daa
mov
mov
shrl
aam
and
mov
and
loop
stos
scas
aaa
fcmovnbe
mov
mov
negl
scas
adc
ud2
sti
mov
sub
xlat
jnp
outsl
xor
test
out
lahf
popf
push
loop
mov
incl
xor
test
cvtpi2ps
scas
mov
cmp
jns
inc
mov
mov
jg
sub
mov
jg
sbb
mov
repz
cltd
jecxz
mov
jnp
scas
mov
stos
mov
and
pop
and
es
iret
fidivs
jnp
mov
das
and
imul
inc
push
lds
dec
mov
xchg
popf
or
cwtl
out
icebp
add
add
stos
mov
repz
mov
xor
stos
das
in
popa
iret
stos
inc
iret
mov
mov
sahf
iret
xchg
iret
test
jl
xor
dec
add
lea
xchg
fdivl
fisubrl
jae
fs
mov
ljmp
mov
stos
pop
in
lret
mov
add
jmp
or
xor
fistpl
sti
lcall
int
rcrb
pop
shl
mov
jnp
out
icebp
push
jae
mov
popf
xor
jg
arpl
das
scas
pop
dec
sub
adc
bound
cmp
mov
stos
mov
out
mov
pop
loope
stc
out
lods
ret
mov
repz
mov
lret
jecxz
mov
lods
cmc
jnp
ja
add
loop
cmp
dec
loop
shrb
sub
sbb
test
repz
and
pop
sub
pop
notl
jecxz
dec
decb
mov
jg
stos
pop
cmp
stos
xchg
jecxz
cmpsl
push
subl
inc
ja
shlb
cli
repz
stos
stos
repz
pop
pop
xchg
sti
sub
jb
or
mov
adc
mov
jnp
xchg
pop
pop
outsl
inc
mov
sti
jae
mov
scas
mov
mov
mov
lret
fstps
ficoms
aaa
stos
imul
shl
stos
das
outsl
aaa
sbb
shl
fsubr
mov
fisttps
icebp
stos
jle
jae
aaa
mov
out
jp
mov
xor
jecxz
cmpl
adc
jecxz
pop
inc
sub
ret
mov
cmp
out
fwait
jae
mov
fnstenv
jnp
jmp
lahf
mov
pop
scas
dec
stos
aaa
arpl
cmpsl
ret
mov
xlat
jo
pop
js
pop
pushf
dec
adc
iret
pop
mov
fstps
cli
mov
sti
loop
mov
stos
mov
scas
cmc
pop
jg
pop
xlat
shrb
and
adc
pushf
xchg
fwait
xorl
jnp
cmpsl
add
lret
pusha
sti
in
xchg
jb
jg
repz
idivl
addr16
das
xchg
cmp
and
mov
fistl
pushl
add
cmp
sbb
sub
stos
dec
mov
jae
mov
sub
jb
out
inc
leave
mov
mov
mov
or
jns
sbb
mov
mov
aaa
fchs
out
loope
jecxz
arpl
ret
mov
inc
mov
xor
xor
mov
and
and
mov
imul
movsl
jb
in
popf
and
arpl
fwait
sar
sbb
or
jmp
ficoml
jg
dec
int3
pop
stos
sti
sbb
pop
mov
mov
orb
sti
mov
iret
mov
shll
mov
out
divb
mov
sbb
aaa
mov
xor
in
mov
repz
cmpb
mov
sbb
or
lahf
stc
mov
mov
aas
cmc
cltd
aaa
inc
fwait
daa
jg
jnp
xor
mov
in
mov
lret
out
mov
adc
cmp
mov
test
imul
sub
xchg
jmp
ds
and
ficoml
cwtl
xor
int
fcmove
mov
adc
fldt
test
add
inc
mov
test
jnp
xchg
push
imul
mov
sti
xchg
mov
cltd
push
icebp
xlat
dec
sub
inc
fisubrs
out
cmp
jg
sub
jg
mov
inc
test
inc
repz
mov
jb
and
iret
lcall
push
aas
aaa
fdivs
jecxz
out
out
das
test
out
inc
aas
xchg
test
jp
scas
mov
inc
jae
fwait
jb
cmp
xchg
sub
inc
fdivs
pop
jecxz
fucomp
out
das
test
xchg
out
ds
mov
test
addl
arpl
mov
add
jae
mov
call
inc
jmp
aas
mov
fnstsw
loopne
arpl
mov
aas
sti
psubq
shll
mov
stos
adc
aam
mov
mov
test
mov
inc
sub
cmpsl
inc
imul
fnstenv
xor
mov
pop
sbb
stos
jnp
adc
fidivs
lret
fists
xchg
dec
icebp
sbb
hlt
pop
fistpl
mov
daa
mov
mov
outsl
pop
iret
cltd
fwait
sub
inc
ljmp
pop
arpl
cmp
inc
pop
mov
ficompl
lods
stc
jmp
jecxz
xor
dec
popa
ds
push
clc
neg
pop
div
js
fisubrl
mov
arpl
fidivrl
pop
cmp
testl
iret
sub
mov
jnp
push
mov
adc
jno
out
aas
inc
mov
sub
xlat
lcall
xchg
and
jg
aas
imul
loop
lcall
fldt
xchg
fwait
mov
xchg
mov
inc
jg
inc
adc
ja
pop
ja
mov
repz
leave
xor
fnstsw
sbb
mov
fdivl
and
add
jnp
sbb
adc
imul
test
pop
ja
mov
pop
add
jl
mov
sar
stos
jg
pop
stos
sbb
scas
mov
shlb
cmp
insb
pop
mov
ja
fisttpl
xchg
das
sub
fwait
and
jmp
adc
sti
ret
push
cltd
push
xorb
xor
xchg
fnstcw
mov
es
iret
ret
and
fsub
out
mov
mov
ret
in
xor
jecxz
jmp
jecxz
jge
fcoml
outsl
pushl
inc
jecxz
xor
das
pushl
or
lret
xchg
xor
idivb
inc
sbb
mov
repz
xor
hlt
aas
pop
aas
or
xor
jecxz
cmpsl
mov
pushf
js
mov
scas
shrl
fbld
jno
call
mov
mov
bound
out
arpl
int3
rcll
into
lahf
fstl
push
cmpsb
mov
lret
inc
popa
mov
mov
add
jne
andl
out
loopne
out
inc
fldt
mov
fstpl
test
xchg
aaa
daa
arpl
jnp
arpl
movsb
pop
lret
mov
stos
push
inc
inc
aas
imul
bound
add
jl
fwait
loopne
jecxz
dec
xor
fstp
mov
fiadds
jge
xor
sub
insb
scas
fwait
adc
sub
es
lahf
fadd
xlat
scas
pop
jmp
int
add
fwait
cmpsl
je
das
xchg
ret
jae
aaa
and
mov
sti
xchg
imul
jmp
mov
mov
aas
jg
xor
adc
bound
sbb
jo
sti
arpl
mov
out
iret
jle
rorl
loop
jp
popa
mov
jle
fnstsw
inc
lret
cli
les
push
sub
mov
add
and
lret
inc
das
xor
fildll
adc
mov
cli
scas
scas
punpcklwd
fbstp
mov
scas
cmpl
popa
dec
mov
lods
ret
mov
sbb
mov
das
mov
cmp
mov
xor
ljmp
mov
push
mov
inc
std
sbb
mov
repnz
loop
dec
cltd
mov
mov
mov
aas
mov
xchg
xor
loop
mov
xor
movl
jg
test
jnp
iret
out
pop
cmpsl
hlt
icebp
push
in
cmp
loop
out
jecxz
ret
pop
aas
in
sti
push
repz
jbe
ficoms
jmp
repz
mov
aam
sub
sbb
repz
notl
das
xchg
repz
cmpb
call
rep
cmp
repz
aam
sub
xor
ret
jnp
mov
and
jnp
das
pop
adc
adc
int3
imul
lahf
mov
iret
mull
ret
pop
lret
sub
imul
cwtl
ret
aas
xchg
ljmp
popa
insb
mov
sti
out
cmp
cmp
sti
fwait
in
pop
jecxz
mov
dec
das
ror
daa
outsl
mov
adc
push
cmp
xchg
fwait
mov
lods
mov
sbb
mov
mov
daa
dec
jns
sti
daa
outsl
iret
fstpt
imul
push
jl
cmp
fdivrl
mov
lods
iret
sub
pop
jg
or
out
ret
add
stos
aas
stos
xchg
pop
sti
jge
mov
mov
cmp
xchg
lods
repz
mov
push
lret
inc
shll
ja
jg
adc
sti
mov
aad
cmpsl
jno
jg
mov
out
adc
inc
lret
dec
bound
cmpsl
pop
mov
popf
mov
stos
fwait
xor
out
jae
xor
stos
imul
jae
inc
push
xchg
mov
mov
int3
jmp
outsl
scas
ja
mov
sub
fwait
jg
fwait
jg
sub
jae
pop
dec
leave
loop
mov
fnstcw
fnclex
fwait
jnp
fwait
insl
pusha
das
int3
cmp
pop
fnstenv
pop
sub
out
mov
pop
iret
stos
xchg
jne
cmpsl
lods
sbb
leave
inc
mov
rorb
jnp
dec
stos
pushl
mov
fbld
and
lret
pop
dec
aas
in
mov
adc
lret
div
ja
daa
call
std
mov
pushf
mov
adcl
pushf
sub
outsl
cld
cld
shrb
out
je
fistpl
lahf
and
subb
inc
lret
add
scas
pop
icebp
mov
addr16
ljmp
imul
imul
add
pop
push
xlat
testl
mov
fistps
insb
rol
iret
jmp
ret
mov
and
cmp
push
pushf
jnp
imul
mov
sti
lahf
shrl
ds
mov
jg,pt
sub
mov
je
mov
adcl
sub
xorb
adc
cld
imul
xchg
mov
mov
pop
ja
xchg
and
xlat
jne
xor
sub
inc
push
stos
inc
mov
cmp
mov
lret
imul
loop
jb
mov
jno
mov
mov
insl
fnsave
fiadds
cmpsl
test
and
rclb
inc
jge
xchg
sub
fcmovu
test
mov
adc
arpl
and
ffree
xchg
daa
stos
testl
or
mov
scas
aaa
inc
ret
enter
xchg
mov
xchg
sub
adc
dec
bound
cwtl
pop
stos
shlb
and
xchg
ja
add
add
movsl
mov
outsl
inc
scas
stos
loope
inc
mov
stos
dec
shlb
repz
insl
push
xor
inc
sub
xor
call
jnp
rolb
in
addr16
mov
out
add
sub
sbb
stc
mov
cltd
mov
mov
stos
cli
pop
leave
or
iret
inc
pop
mov
aas
xor
mov
mov
scas
loopne
dec
jge
ret
scas
loop
mov
jnp
scas
sahf
pop
repnz
mov
insl
mov
das
add
mov
addr16
mov
dec
jb
call
adcl
mul
scas
fidivs
filds
mov
push
xchg
mov
xor
lret
repnz
mov
mov
lret
lret
fisttpl
jb
xchg
test
fistps
cmpsl
mov
cltd
push
pop
sub
sub
mov
into
out
cmpsb
mov
sbb
idivl
fildl
adc
sub
fcoms
pop
mov
push
cmp
push
pop
and
stos
add
dec
ja
data16
mov
cmc
ja
or
fcmovne
adcb
fstpt
jae
lahf
add
lret
mov
iret
mov
jnp
mov
fistpl
dec
aas
mov
stos
inc
fnstenv
jnp
push
xor
test
fstpt
fsts
out
mov
jg
outsl
fistpl
fldcw
jnp
dec
xor
stos
push
aaa
int3
jmp
sbb
cmpl
xor
insb
or
shlb
fnstenv
test
adc
cltd
fnstsw
jae
fimull
mov
test
jnp
mov
scas
mov
mov
jecxz
das
out
mov
stos
int3
das
mov
and
cmp
mov
inc
mov
add
out
leave
pop
loopne
fnstcw
jp
sti
ss
sub
ja
mov
in
add
ret
xchg
scas
fldl
out
mov
je
mov
mov
fcmovu
stc
ret
test
stc
jnp
jecxz
das
int
pop
scas
jecxz
arpl
stc
idivl
add
xchg
stos
mov
xchg
outsl
mov
xchg
ret
mov
and
sbb
jecxz
mov
mov
jecxz
mov
inc
sbb
xlat
stc
pop
loopne
fisubrl
fyl2xp1
mov
jecxz
add
sti
ss
sub
inc
mov
lahf
inc
fcomip
add
mov
mov
test
inc
adc
mov
mov
and
iret
adc
data16
cltd
iret
mov
dec
cmpsl
fucomi
xor
das
cmpsl
sti
push
shlb
stos
inc
xchg
repz
jp
or
roll
out
sti
ficompl
push
pop
sti
mov
xchg
push
xor
adc
pusha
jne
cltd
push
stos
lds
scas
out
ret
test
pop
adc
mov
jbe
mov
pop
pop
pop
jg
test
add
lret
jb
enter
add
mov
pop
loop
je
xor
xchg
jge
rcrb
ja
stos
mov
popf
mov
loop
lss
xlat
das
ror
mov
ror
pop
push
lahf
test
push
aam
xchg
js
xor
jno
jae
repz
cmpsl
xor
jecxz
cmpsl
popf
dec
fisubl
jnp
out
aas
pop
test
lahf
bound
mov
push
stos
jnp
jecxz
push
out
rcrl
jnp
aad
rol
daa
cs
pop
or
sarb
cs
jae
push
loop
repnz
mov
push
bound
test
jmp
das
push
stos
xlat
mov
jb
xchg
leave
orb
mull
out
inc
pop
sbb
pop
or
sbb
lods
scas
pushl
mov
or
iret
mov
ret
xchg
fs
push
add
mov
insb
outsl
adc
or
sub
fisubrl
mov
jno
jp
mov
test
jl
push
xorb
cmp
jg
sub
mov
xchg
cmpsl
adc
mov
adc
aaa
in
and
fidivs
cmpsl
in
das
fiaddl
loopne
jnp
xor
out
addr16
out
pop
das
sti
daa
jb
imull
pop
insl
sbb
ret
out
jne
fistpl
lret
lret
popf
lahf
jbe
jae
dec
xor
adcl
out
add
jne
pop
jecxz
stos
shrl
ret
ret
push
in
das
mov
cli
mov
jmp
xlat
int3
pop
js
sub
je
pop
lahf
sarl
cltd
arpl
lock
popa
daa
lret
add
mov
cmc
adc
mov
xlat
xor
and
dec
imul
bound
jnp
sub
leave
pop
dec
loop
test
dec
jnp
inc
xchg
xchg
xlat
frstor
mov
push
jge
scas
lock
lea
mov
mov
xor
pop
scas
inc
aaa
mov
movsl
inc
dec
sti
xchg
jg
mov
out
push
xor
pushf
dec
mov
lret
fidivl
cs
ljmp
xor
xor
repz
xlat
cmovl
imul
mov
xor
mov
pop
call
mov
mov
add
fiaddl
jecxz
ja
stc
movsl
jecxz
adc
scas
mov
xor
mov
mov
mov
sbb
loop
mov
xchg
dec
mov
mov
lret
aas
jnp
xchg
pop
cs
mov
ljmp
lcall
xor
pop
inc
mov
cmp
cmovl
jl
dec
arpl
add
pop
sbb
cmp
jge
dec
imul
pop
inc
les
sbb
lahf
lret
imul
jmp
fcomi
lods
lahf
clc
pushf
pop
fwait
adc
aas
sub
cmp
xor
xor
je
xlat
xor
rorb
aas
lret
mov
or
out
ret
dec
rcrb
and
imul
push
outsl
ficoms
scas
xchg
mov
adc
jb
jecxz
lret
test
jnp
outsl
xor
pop
insb
mov
ret
adc
fwait
rclb
aas
sub
addr16
sti
sub
in
jnp
mov
mov
out
sarl
sub
mov
inc
test
add
neg
daa
jnp
mov
lret
test
cmpsl
sub
das
xor
dec
jg
sub
fsts
jnp
mov
shrl
jnp
ja
cmpsl
fsts
addr16
repz
outsl
xchg
mov
xor
aad
xchg
xor
jnp
xchg
daa
imul
jg
xor
jg
sub
push
jnp
divl
daa
test
push
adc
or
lret
xchg
out
loop
lahf
xchg
and
fwait
mov
mov
ret
xchg
daa
fwait
rcl
mov
lret
mov
mov
xchg
xchg
loop
jp
pop
xor
sti
mov
pop
mov
push
mov
je
jecxz
mov
xchg
lret
mov
mov
dec
sti
mov
pushf
repnz
inc
fcmovnu
std
out
mov
mov
jle
or
inc
cmp
fwait
iret
imul
jns
cmp
iret
ret
jl
cmp
ror
imul
jb
out
lret
aas
dec
mov
inc
xchg
add
mov
mov
jg
pop
sbbb
stc
ja
jecxz
into
test
push
jecxz
pop
iret
dec
jecxz
xchg
cmp
xchg
iret
jg
sbb
mov
mov
xchg
cmp
xlat
pushf
xchg
ret
xchg
inc
shll
inc
cmp
rol
mov
jecxz
inc
pop
mov
mov
ss
std
mov
add
ret
mov
mov
mov
jecxz
jecxz
mov
push
inc
mov
or
fistpl
stos
jmp
mull
arpl
xor
jge
leave
mov
dec
mov
notl
jae
inc
sahf
inc
pop
mov
inc
imul
xor
xor
inc
outsb
std
push
arpl
xchg
pop
int
pop
das
dec
popa
mov
mov
and
imul
ret
fistps
dec
ja
jns
icebp
sub
mov
mov
and
mov
mov
inc
aas
xchg
cmp
lret
scas
push
pop
fnstcw
daa
sub
fildll
aaa
pop
xor
inc
pop
and
repnz
push
pop
mov
test
or
mov
mov
or
int3
sub
or
mov
jno
mov
sbb
in
icebp
roll
push
imul
jo
fiaddl
out
jb
cmp
imul
repz
enter
dec
jnp
dec
out
pop
sub
stos
stc
mov
mov
mov
mov
lds
sti
cli
mov
or
cmc
mov
jae
ds
arpl
cmp
je
xlat
sti
pushf
rcl
stos
shlb
xchg
jge
mov
inc
cmp
jg
jp
fdiv
fwait
leave
stos
xchg
mov
aam
stos
popf
inc
and
mov
ja
jle
mov
jno
lret
fwait
and
lods
push
clc
adc
sti
ljmp
lods
mov
div
jae
ja
or
testl
enter
aas
fildll
mov
adc
loop
cmp
push
jbe
cltd
dec
ds
and
cmpsb
mov
iret
and
inc
incl
std
imull
das
xchg
mov
cmp
rorl
cltd
adc
ja
aaa
mov
mov
sti
mov
test
call
xchg
mov
cmp
ja
mov
fsubl
test
popf
js
in
jnp
jl
jo
xchg
fisttpl
sub
pusha
flds
sarb
sbb
or
incb
inc
pop
cmpsl
fwait
xor
addr16
push
movsl
sbb
mov
adc
jae
sub
dec
rorl
or
rol
in
lods
mov
cmpsl
push
addr16
push
ds
ja
das
fcmovnbe
jnp
shll
stos
aaa
outsl
pop
sub
jecxz
jae
roll
stos
aaa
ja
sub
cltd
stos
mov
dec
fwait
stos
dec
and
and
outsb
sub
fistl
add
inc
cmp
dec
ja
lret
sub
sbb
pop
jae
pushl
das
dec
xchg
imull
loop
jne
sub
repz
mov
aas
mov
clc
stos
fldt
and
mov
fwait
lcall
lea
add
cmp
aaa
test
push
ja
lret
jnp
push
jae
and
loop
pop
jae
mov
loop
repz
mov
loop
mov
add
sahf
mov
jae
jnp
adc
ja
outsl
int3
mov
jp
fwait
jnp
cmp
mov
shl
iret
dec
inc
mov
into
fimull
push
sbb
push
lcall
scas
shll
iret
jmp
std
imul
sti
test
dec
push
jmp
fildll
add
lahf
test
pop
sub
mov
scas
fst
mov
test
mov
cmp
das
jnp
pop
xor
test
imull
jae
cmpsl
test
arpl
push
fsincos
jnp
adc
pushf
jg
mov
xor
mov
inc
jg
sub
dec
jnp
and
pop
stos
mov
rcr
jg
fwait
sub
aaa
jnp
dec
xor
test
jecxz
mov
outsl
mov
sub
pop
dec
int
push
jnp
jnp
cmpsl
test
pop
sub
fstps
jnp
mov
lods
push
lret
xor
rcrb
loop
mov
jg
sub
fcos
jnp
pop
xor
stos
mov
jecxz
fildll
sbb
jnp
lahf
xor
aaa
push
sub
fincstp
jnp
imul
addr16
das
psrad
jnp
iret
xor
mov
sub
fstps
dec
repz
test
mov
mov
jnp
outsl
lahf
xor
aas
fldt
jg
sub
sti
jnp
pop
xor
stos
mov
out
shrl
xchg
imul
xor
xor
addr16
sub
repz
sbb
rsm
mov
sbb
sub
fnstenv
xor
adc
mov
mov
jg
mov
jmp
std
mov
xor
mov
mov
pop
mov
loop
xlat
jp
and
mov
inc
xchg
rep
aam
fistpl
lret
scas
mov
xor
mov
into
mov
iret
fcmove
xor
lahf
adc
push
jl
cmp
xor
aaa
jl
cmp
mov
scas
loop
xlat
jp
jle
out
stos
decb
mov
xorb
dec
mov
sub
sbb
mov
lods
pop
hlt
inc
je
pop
mov
add
inc
mov
jo
push
xlat
inc
push
adc
inc
mov
fcompl
mov
and
mov
dec
inc
movq
xor
sti
push
mov
out
lret
pop
jmp
lds
cmp
lcall
lret
jnp
mov
xorl
imul
icebp
mov
js
dec
lahf
fxch
out
stos
jne
cmp
ret
fisttps
xchg
popf
xchg
xchg
xor
mov
lahf
sub
rdmsr
xor
ret
mov
imul
or
xor
sahf
adc
fimuls
cmpsl
mov
and
inc
aas
roll
inc
out
mov
xchg
aas
mov
stos
stos
das
mov
scas
xchg
xor
mov
je
jo
ret
dec
out
push
bound
xchg
pop
lock
mov
push
scas
neg
faddl
push
add
mov
mov
fistpll
mov
jmp
hlt
aas
sarb
aaa
mov
and
lret
xchg
ja
cmpsl
sub
fcomip
iret
outsl
iret
insb
mov
rorb
andb
scas
mov
mov
fbstp
sub
mov
jecxz
sarb
scas
fcomp
out
mov
sbb
leave
fisubl
mov
fnstcw
shrb
je
test
mov
ds
sub
jecxz
lahf
or
aaa
mov
xlat
sbb
stos
repz
outsl
iret
cmpl
xlat
mov
xchg
sahf
inc
aam
shl
imul
add
push
jecxz
mov
push
xor
repz
std
xchg
cmp
jge
jae
jns
pusha
pop
jg
imul
out
mov
xorl
lcall
xorl
xor
aam
pop
adc
lcall
mov
mov
or
imul
mov
dec
dec
pop
sbb
cmp
sar
mov
jecxz
push
sbb
mov
sbb
decl
jmp
sti
cltd
or
cmpsb
scas
adc
xor
popf
pop
mov
ficoml
mov
std
stos
jae
xchg
scas
fcmovu
fnstenv
xor
cmpsl
fistl
test
test
cmpsl
aaa
bnd
inc
out
xchg
arpl
xor
lahf
fcompp
dec
rorl
pop
das
push
mov
jl
inc
jmp
pop
loop
jmp
stos
iret
jnp
ljmp
faddl
fwait
or
sbb
mov
pop
repz
mov
mov
scas
sbb
je
dec
inc
jmp
ficomps
test
xchg
mov
xchg
mov
jle
fmulp
pop
mov
cmp
popa
add
cmp
or
pop
push
cltd
xchg
iret
test
incl
adc
sbb
das
mov
pop
pop
iret
fwait
mov
imul
andl
or
ret
shll
ret
cmp
add
mov
sub
out
mov
lcall
jno
outsl
cli
fiadds
fsubs
push
sub
mov
shrl
mov
arpl
dec
pusha
cmp
xchg
cmpb
call
inc
add
mov
lret
lods
mov
cltd
mov
xchg
out
inc
mov
sbb
cmpsl
test
or
std
mov
mov
mov
psrlw
negl
movsb
test
or
cmp
mov
sub
cld
jnp
test
lods
adc
fcmove
mov
leave
loop
mov
push
jnp
sbb
mov
aam
mov
sub
stc
cmc
mov
sub
sub
aam
sbb
iret
in
sbb
mov
xchg
popf
pop
pop
jno
pop
stos
adc
pop
stos
sbb
mov
adc
mov
fisubrl
loop
pop
sbb
ds
scas
adc
mov
insl
cmp
sbb
repnz
repnz
shll
stos
sub
cmp
aas
pop
mov
mov
lods
out
fcmovu
inc
outsl
loope
stos
adcb
loop
mov
jae
je
pop
ljmp
xchg
push
int
jno,pn
dec
jb
push
out
rcl
insb
divl
sub
in
mov
mov
and
pop
mov
fidivrl
mov
xor
mov
mov
movsl
mov
cmp
mov
jle
outsl
push
jb
push
add
js
sbb
and
popf
rcl
movsl
hlt
ds
xlat
fmulp
add
subb
push
mov
mov
mov
daa
in
adc
cmp
cmp
mov
pop
mov
xor
fistpl
pop
sub
mov
jg
sub
test
inc
mov
int3
cli
int
inc
leave
cmc
mov
mov
mov
loop
mov
mov
lret
jnp
stos
jns
fmulp
scas
xlat
pop
mov
outsb
cmpsb
lret
xor
jp
jbe
jl
js
imul
cwtl
mov
cld
xchg
cltd
aad
mov
sahf
nop
aam
fs
pop
ja
pop
cmpsl
insb
shlb
fdivrl
mov
jg
cld
sub
push
out
inc
das
clc
jecxz
xor
push
shr
mov
call
mov
mov
jg
mov
mov
push
in
bound
pop
mov
enter
sbb
ret
inc
aaa
in
in
jns
add
montmul
cmpsb
pop
pusha
daa
dec
or
das
outsb
lods
cmp
inc
outsl
mov
mov
mov
jle
fdivrl
loopw
repz
jb
jle
scas
jns
jnp
imul
lret
inc
sub
sub
stos
int
imul
mov
mov
sbbb
mov
jne
imul
call
outsb
mov
cltd
inc
xchg
aaa
cmpsb
adc
scas
mov
cmp
stos
scas
fwait
outsl
mov
imul
mov
mov
mov
push
lods
push
imulb
mov
xorps
mov
rorl
sub
addr16
inc
shr
cwtl
xchg
je
pop
mov
jmp
or
add
push
lahf
jae
jo
pushl
shl
inc
xchg
mov
fisttpl
inc
jae
mov
rcl
js
mov
xor
shr
pushf
xchg
xor
sub
addl
fnstenv
pop
roll
int
pop
mov
iret
cmpsl
dec
out
mov
mov
scas
enter
incl
out
inc
inc
mov
xchg
scas
jecxz
sub
jb
out
lcall
pop
arpl
loop
mov
cli
jle
xor
sbb
out
fists
xchg
leave
xchg
int3
push
cltd
inc
and
pushf
pop
mov
jp
rcrl
xchg
insb
test
lahf
dec
mov
scas
bound
mov
shr
cmpl
mov
repnz
les
mov
stc
adc
or
stos
mov
lock
imul
cwtl
cltd
xchg
adc
mov
jo
sbb
cmpsb
or
pop
jo
outsb
sahf
lahf
xchg
add
pop
push
stc
mov
enter
xchg
hlt
mov
jl
imul
push
insb
cmc
jl
lret
inc
je
dec
xlat
cli
dec
loop
sbb
imulb
std
mov
stos
pop
xlat
sahf
xorb
iret
sub
sub
int3
jge
int
xorb
jae
lods
iret
adcb
add
xchg
lcall
or
jle
cmp
pop
outsb
push
fistps
cmp
divb
aas
je
sbb
cmp
stos
xor
stos
mov
mov
iret
pop
and
aaa
inc
ja
adc
mov
ljmp
loopne
mov
inc
sti
xchg
sub
mov
adc
add
sti
add
add
std
inc
xchg
sbb
in
pop
pop
or
pop
mov
daa
loop
and
mov
jnp
and
lock
dec
dec
daa
lea
or
mov
out
and
jb
addr16
rcrl
jmp
ret
stos
add
fwait
repz
push
repz
subb
mov
jp
jb
sub
int3
jle
jns
mov
push
pop
push
xchg
cmp
mov
ret
xlat
out
cli
xlat
mov
sbb
sub
mov
xchg
pop
xor
push
add
daa
sub
pop
fidivs
xchg
mov
in
pop
arpl
sub
repz
aas
imul
addb
leave
sub
repz
outsl
xchg
cmp
stos
iret
and
shrl
imul
pop
mov
xor
dec
repnz
cltd
jecxz
mov
daa
cmc
mov
fcomip
or
cltd
sub
mov
bndldx
xchg
in
mov
adc
xor
sub
sub
scas
jmp
lods
stos
lcall
lret
sub
test
lret
mov
mov
xlat
daa
ret
stos
mov
dec
sbb
fldcw
loopne
repnz
sub
sti
out
or
scas
and
fcmovb
mov
xchg
je
test
mov
inc
fldenv
xchg
jg
je
pop
adc
jnp
outsl
pop
shrl
ret
aas
dec
sbb
xchg
cmpsw
mov
mov
mov
xchg
inc
inc
sti
mov
pop
cmpsl
and
xchg
sar
out
enter
fwait
es
pop
daa
adc
bndstx
in
imul
dec
daa
jle
inc
imul
dec
cmpsl
and
lods
jge
stos
pop
dec
insl
call
dec
fwait
stos
sub
jns
jns
out
insl
shrb
mulb
xchg
cltd
pop
push
dec
lods
mov
xor
mov
enter
arpl
stos
ret
sub
inc
stos
lods
inc
mov
fwait
stos
iret
mov
jge
subl
aas
xchg
mov
pop
sti
push
adc
jecxz
loope
mov
mov
xchg
pop
gs
mov
lods
jg
xchg
movsl
sbb
aaa
sub
mov
in
cmpsl
out
clc
jb
xor
mov
pop
fisttpll
xchg
scas
loop
andb
das
mov
stos
xchg
call
mov
lea
daa
orl
mov
das
jge
in
es
fidivl
sub
out
iret
mov
mov
repz
jle
aaa
mov
mov
loopne
or
sbb
fwait
stc
fists
orl
inc
jle,pt
lods
push
das
or
mov
mov
jl
aas
mov
in
addr16
sti
mov
mov
cmpsl
in
add
movsb
mov
mov
push
ret
lahf
jle
push
inc
pop
sbb
mov
aas
mov
inc
stos
sarb
test
mov
shrl
adc
insl
lahf
xchg
adc
pusha
das
inc
jg
enter
data16
mov
jecxz
jne
dec
daa
sub
jo
mov
sub
outsl
xchg
push
cmpsl
repnz
cs
ret
add
xchg
cwtl
roll
fsub
enter
mov
out
jae
lods
inc
fadds
popa
sub
inc
arpl
sub
imul
mov
adc
stos
ja
clc
push
addl
jle
jns
mov
andl
pop
dec
mov
mov
inc
mov
mov
loop
xlat
inc
jne
dec
stos
mov
out
scas
scas
jge
stos
mov
xor
movsb
mov
movl
scas
popl
fwait
add
and
push
inc
in
scas
aaa
jmp
pusha
mov
stos
or
xorl
scas
dec
jg
aam
mov
pop
or
shrb
mov
fildl
insl
arpl
jge
stos
shrl
repz
scas
xchg
lret
and
dec
stos
or
fsubs
out
int3
shl
lret
stos
sbb
inc
out
inc
xor
lret
pop
aas
iret
or
idiv
sub
dec
dec
jnp
dec
jae
out
or
jb
sub
mov
xor
pushf
repnz
lods
cmpl
out
xor
mov
jecxz
iret
movsl
sbb
mov
sub
pop
mov
insb
inc
ja
mov
ja
adc
inc
cld
cmp
mov
inc
pop
test
mov
adc
mov
xchg
jecxz
jae
jl
sti
cmpsl
cmp
mov
aad
sarl
das
repnz
mov
jle
stos
scas
ret
movsb
aad
stos
sti
cmp
jg
shlb
ja
das
stos
rolb
cmp
shl
xor
cmp
mov
movsl
and
out
addr16
loop
mov
stos
das
das
dec
sti
sti
mov
sub
mov
pop
inc
mov
jge
lods
mov
push
sahf
sti
stc
xlat
orl
repz
mov
xor
bound
in
jg
bound
mov
push
aaa
sbb
jecxz
mov
cwtl
xor
jae
mov
xor
and
sarb
mov
adc
xchg
or
aaa
sub
and
jl
sbb
mov
repz
inc
or
dec
dec
adc
jnp
insl
jg
xchg
xchg
testl
dec
xor
or
pop
push
stos
arpl
stos
mov
pop
imul
fwait
das
fbstp
imul
inc
ror
icebp
je
sub
cmpl
dec
mov
imul
stos
sbb
stos
jle
lahf
sti
pop
push
stos
aaa
jno
jnp
out
aas
movsb
xchg
cmpsl
sti
fistl
stos
mov
add
or
mov
mov
sti
mov
xor
jge
mov
inc
fisubs
adc
pop
mov
mov
mov
enter
out
xchg
pop
hlt
or
inc
scas
mov
push
stos
das
jns
aad
jae
add
jmp
xlat
lock
pop
fsubrp
imul
dec
pop
pushf
adc
sbb
scas
sbb
int3
outsl
outsl
js
dec
imul
pushl
jecxz
jnp
push
aas
shrl
and
loop
test
xchg
mov
lods
dec
out
add
fwait
mov
js
scas
int3
inc
mov
flds
pop
jg
das
mov
cmpsl
sub
push
pop
sub
cmp
lret
inc
jg
or
mov
repz
shr
or
bound
mov
sbb
sub
sbb
adc
jae
mov
ret
rcrl
mov
jg
sub
popa
sbbl
cmp
cld
jb
das
pop
mov
sarb
xor
mov
add
dec
mov
xchg
mov
mov
das
xchg
rolb
xor
fisttpl
outsl
xor
call
lahf
stos
cmp
pmaddwd
jl
sti
jnp
lcall
test
push
movsl
roll
mov
repz
jne
jnp
inc
movsb
call
das
xor
call
mov
sub
mov
xchg
jnp
test
mov
mov
out
mov
or
scas
flds
stos
jg
ds
repnz
out
push
cmp
scas
mov
adc
jl
sti
mov
iret
mov
xchg
stos
movsl
cmp
cmp
sti
mov
dec
aas
xor
aaa
lcall
cmp
repnz
sub
mov
fnstenv
je
push
fistps
test
lret
jg
sub
sarl
mov
lahf
das
jecxz
inc
aas
aaa
sub
icebp
icebp
scas
jl
sub
mov
rclb
mov
popf
lods
mov
test
push
xchg
sub
imul
mov
dec
div
sahf
ret
test
ljmp
adc
jae
fwait
mov
xchg
repnz
subb
jno
incl
push
sti
mov
adc
cmpsl
outsl
stos
xor
nop
fdivrl
fcmovne
cmpsl
push
fwait
test
add
xor
fisttpl
lds
adc
das
mov
push
shlb
mov
mov
cmp
xor
dec
add
enter
push
mov
pop
cwtl
sti
icebp
out
pop
lods
lcall
xchg
shll
sbb
xorb
cmp
mov
mov
imul
xchg
cmpsb
jns
push
fdivrs
jb
sub
or
mov
stos
mov
mov
fistpll
cmp
add
pop
test
pushl
jecxz
mov
mov
daa
cmp
sub
fdivl
or
push
aas
sti
pop
jg
sbb
popa
mov
inc
inc
push
xor
push
sub
mov
xchg
lcall
divl
push
fisttpl
test
add
pop
xor
into
pop
adc
iret
outsl
fbstp
fwait
test
or
sbb
mull
fidivs
inc
out
hlt
in
iret
imul
push
orl
lods
jo
movsb
mov
pop
xchg
lods
pop
adc
aas
lret
test
mov
stos
mov
mov
jecxz
repnz
shll
out
mov
jl
jmp
mov
mov
lret
cwtl
mov
stos
mov
push
mov
mov
outsl
fdivrs
mov
mov
arpl
push
mov
mov
lret
int3
pop
pop
sbbl
fidivs
push
xchg
sbb
popa
ret
add
xchg
sbb
sub
xor
lods
mov
xchg
fs
mov
stos
mull
sti
sub
ret
mov
ficoml
fs
mov
xchg
mov
stos
arpl
repz
mov
or
sti
loope
inc
movsl
arpl
xchg
loope
xchg
call
daa
arpl
jb
mov
orl
mov
xchg
sub
movsl
data16
fisubrs
or
bound
test
sbb
scas
jecxz
cwtl
xchg
mov
or
or
push
rcr
mov
xor
jno
aas
pop
fbstp
fs
int3
pop
push
or
push
jnp
pop
pop
sub
shll
pop
cmpsl
push
pop
filds
push
nop
mov
fiadds
xlat
stc
punpckhbw
mov
add
sarb
stos
xlat
xor
stos
data16
inc
pop
mov
addr16
aaa
mov
jmp
and
sub
fsubrl
aaa
scas
adc
pop
cltd
fcmovnu
scas
leave
fildll
and
fdivl
cs
aam
sub
scas
out
pop
xor
mov
pop
fdiv
fwait
cmp
pop
rcr
mov
incl
fistl
out
sub
leave
jecxz
out
decl
lods
mov
imull
fidivrl
mov
jnp
or
in
test
mov
rcr
je
test
xor
fistpl
cld
dec
je
jmp
sub
icebp
jmp
insl
test
pop
jl
ret
jecxz
outsl
pop
gs
cmpsb
cltd
fldt
inc
mov
jae
insl
jo
daa
rorb
pop
mov
mov
pusha
sub
repz
cmp
adc
aaa
pop
call
pop
sub
dec
leave
xchg
subl
sub
cmpsl
insl
fcompl
mov
xor
out
dec
cs
sub
ja
and
insl
adc
mov
shll
sub
orl
inc
inc
je
push
pop
sbb
xchg
repz
add
jecxz
xor
jecxz
pop
jae
ds
dec
repnz
mov
push
sub
in
insb
add
enter
mov
test
sbb
in
dec
push
jmp
stos
faddl
stos
ret
mov
cmpsb
push
jae
aaa
rcll
fisttps
loopne
mov
icebp
adc
jmp
add
scas
jne
or
dec
sbb
stos
xchg
ds
cwtl
inc
pop
outsl
fldt
arpl
inc
scas
ja
jns
nop
fistpll
outsl
stos
push
je
icebp
ret
sti
mov
pop
sti
push
or
sbb
arpl
inc
mov
xor
mov
dec
pusha
cmp
sbb
dec
mov
cltd
aas
sub
mov
pop
mov
scas
xor
loopne
je
out
ret
xlat
xchg
jge
mov
arpl
out
data16
dec
pop
cmc
outsl
data16
sti
ret
sbb
push
int3
adc
push
shr
sbb
lahf
sahf
jnp
fildl
push
mov
jb
pop
repnz
xchg
sbb
mov
mov
bound
pop
xor
pop
jo
arpl
push
rclb
jmp
lret
adc
add
dec
repnz
mov
mov
push
or
sub
push
outsl
sti
mov
sti
fisubs
enter
push
cs
xchg
mov
pop
int
sbb
jp
jge
jg
ret
imul
test
jae
outsl
test
mov
push
iret
sub
xchg
ljmp
mov
fldenv
push
sub
sbb
out
and
adc
mov
ficompl
loop
das
mov
xchg
jg
insl
push
fs
mov
bound
popf
cmp
mov
adc
push
mov
xor
pusha
jne
fidivrs
mov
pusha
jne
ret
add
repz
fisttps
or
test
push
cmp
fnstenv
outsb
sub
cs
or
out
mov
xlat
jg,pt
out
lret
inc
int3
aas
mov
and
or
xchg
mov
jge
sarl
outsb
xorb
stos
jb
lret
jecxz
fwait
aam
xchg
mov
pop
test
scas
das
sub
sub
jecxz
fmuls
xchg
aas
push
ds
or
fwait
mov
mov
scas
or
in
xchg
pop
xchg
pop
scas
xchg
ja
data16
jecxz
fmuls
dec
shrl
lea
jecxz
stos
aaa
lret
push
scas
mov
jmp
sti
mov
mov
mov
arpl
xor
mov
scas
mov
icebp
cmp
mov
aas
mov
fldt
mov
ret
iret
dec
mov
fdivs
xor
dec
cltd
subl
aad
sub
xchg
sbb
fldcw
jne
sub
push
iret
mov
repnz
inc
stos
sbb
sarl
mov
mov
out
xlat
aaa
scas
or
test
jnp
sub
sub
pop
imul
sbb
dec
inc
mov
mov
stc
ret
and
cmc
sbb
sub
or
pushl
cmp
sti
dec
addr16
mov
arpl
pop
loopne
mov
scas
dec
push
pop
mov
stos
test
jecxz
daa
test
testl
push
or
dec
aam
cmp
mov
call
jnp
call
clc
jae
pop
dec
imul
jcxz
inc
aas
mov
fiaddl
inc
aas
inc
push
stc
pop
daa
jecxz
mov
add
fisttpll
push
test
sbb
fcmovu
sub
jnp
mov
testl
arpl
mov
push
mov
stos
icebp
dec
fistps
add
fldt
aas
in
fwait
add
loopne
daa
cmc
jmp
inc
addb
mov
adc
push
leave
in
daa
jo
addr16
aaa
lods
or
addl
repz
dec
jae
mov
inc
divl
dec
pop
fldcw
jnp
mov
aaa
mov
jmp
and
decl
add
lods
and
scas
sub
fisubl
add
sub
adc
mov
jnp
int3
xor
jg
sub
fsts
in
xor
test
mov
je
dec
xchg
xchg
icebp
xchg
xchg
dec
aaa
xor
jle
cwtl
sti
repnz
pop
daa
mov
mov
jnp
lahf
xlat
push
sub
jo
outsl
fwait
push
movb
loop
jno
pushl
push
pop
test
and
push
mov
data16
je
icebp
inc
push
sbb
push
neg
and
out
mov
mov
data16
scas
add
mov
das
fmuls
repz
mov
pop
cs
sub
jecxz,pn
dec
pop
add
mov
fsubs
xor
mov
bswap
push
cmp
cmpsl
fwait
push
addr16
and
jnp
push
js
adc
pop
cmpsl
and
mov
ljmp
push
add
ja
pusha
iret
push
aam
mov
sar
jae
aaa
pop
add
scas
push
test
mov
push
push
push
stos
lahf
jecxz
mov
push
xor
xchg
dec
push
bound
stos
daa
cmpsl
push
dec
sub
jo
mov
ficomps
icebp
js
adc
setns
lods
insl
aaa
stos
jne
or
mov
mov
fsubrl
ficoml
jae
and
dec
scas
mov
jmp
mov
inc
cmp
jns
jmp
ret
push
hlt
pop
cmp
rclb
movzwl
movsb
cmpsl
xor
sti
fwait
outsb
rolb
inc
stos
test
cmp
icebp
sti
fistps
xchg
push
xor
sti
mov
rcl
js
leave
add
sbb
sub
or
push
and
ljmp
mov
mov
nop
mov
sub
lds
sbb
push
xchg
mov
call
jecxz
daa
pop
iret
mov
jne
mov
stos
test
sub
xlat
pop
pop
incb
cld
lret
cmp
popa
inc
jns
mov
sub
inc
pop
sbb
repz
aas
sub
and
add
fwait
jmp
mov
mov
mov
xlat
pop
mov
out
mov
and
sbbl
lods
lcall
fstps
jns
or
mov
ret
std
mov
mov
lcall
out
mov
jg,pn
or
mov
sti
push
aam
out
jg
notl
jnp
stos
sbb
in
or
pop
xlat
fsubrl
sub
stos
add
xor
mov
loopne
andl
lahf
mov
fwait
repz
stos
lcall
lret
mov
repz
lcall
dec
adc
jmp
bound
fcmovnu
stos
mov
mov
or
mov
xlat
cmpsl
mov
outsl
mov
mov
mov
icebp
pop
pop
sbb
jg
movsl
fcoml
jnp
ret
or
in
or
sub
or
sub
andl
mov
mov
in
dec
dec
outsl
xlat
xor
lcall
scas
mov
aas
outsl
inc
faddl
or
getsec
scas
sub
stc
repz
fwait
cli
popf
xchg
mov
lcall
mov
cmpsl
fwait
xchg
mov
ret
lods
xor
loop
add
xor
std
jecxz
imul
cmpsl
fwait
out
inc
outsl
jge
scas
fwait
or
pop
aas
test
xlat
mov
sti
fistpll
and
out
inc
mov
push
outsb
sub
jmp
in
test
out
mov
jnp
push
aas
pop
inc
stc
xchg
or
jle
decb
jno
xchg
xchg
std
scas
xor
pop
stc
lahf
stos
cwtl
mov
add
sti
pop
clc
idiv
push
in
outsl
add
xchg
jmp
mov
call
daa
mov
pusha
inc
add
xor
mov
xchg
lahf
xor
inc
mov
xor
ret
jae
mov
xchg
cmp
jbe
lods
jge
jb
cwtl
ja
jp
xchg
inc
jbe
pop
mov
subl
aaa
jnp
stc
jge
xchg
scas
jl
jl
ja
aaa
out
subl
pop
mov
mov
xchg
inc
jg
insl
loope
push
popf
ficomps
mov
sahf
inc
outsl
mov
jl
imul
je
xchg
mov
mov
ja
pushl
jb
push
add
push
push
in
cmp
xchg
lcall
xlat
orl
jae
jo
cwtl
pop
mov
pushf
fsts
sbbb
sbb
mov
lea
sahf
lods
adc
cltd
xchg
inc
lea
mov
iret
nop
outsl
mov
inc
rorl
xor
stos
ljmp
arpl
shlb
fimuls
les
cmp
and
add
jne
into
mov
fiadds
dec
cli
push
mov
incb
imul
js
int3
rcrb
push
cli
xor
sub
adc
aad
mov
mov
iret
jo
fwait
int3
mov
mov
mov
lcall
rorb
jbe
jb
sbb
popf
mov
mov
nop
inc
insb
adc
scas
jns
iret
mov
aad
js
cwtl
sub
mov
aam
jnp
mov
ficompl
jno
pop
gs
mov
jne
leave
iret
mov
pop
mov
cltd
fisubrs
in
jg
rcll
xor
xor
sahf
pop
rcll
scas
lret
jp
xchg
out
and
adc
sub
lret
out
ds
adc
jne
das
and
nop
fistpl
jl
mov
js
insb
cmp
inc
rorb
cmpsb
sub
mov
cmp
mov
int3
sti
ficompl
clc
or
imul
inc
std
inc
rcrb
jge
push
mov
add
scas
cmp
leave
addr16
test
pop
daa
xlat
imul
popf
fisubl
sti
jl
inc
movsb
adcl
mov
xchg
jae
mov
scas
mov
sahf
loop
or
xlat
xchg
aaa
fstps
push
das
loop
jmp
jg
jae
jnp
and
sub
iret
sahf
xchg
xchg
jb
repz
test
pusha
lret
mov
les
cmc
fcmovu
mov
test
or
jae
mov
inc
mov
xlat
pop
sbb
mov
mov
out
sbb
mov
cmpl
aad
ja
jo
daa
cltd
and
pushf
scas
xchg
imul
jnp
sbb
cmp
inc
push
nop
iret
icebp
sbb
notb
int3
mov
ss
xchg
or
scas
mov
inc
sub
xchg
das
imul
arpl
mov
fsubs
adc
cmp
mov
jge
mov
stc
imul
ds
ds
cs
in
mov
xchg
test
xchg
pop
jnp
jl
hlt
into
cmp
leave
ja
mov
in
mov
daa
lahf
pop
cmp
mov
mull
jecxz
mov
mov
mov
jl
aas
adc
mov
mov
xchg
imul
or
dec
inc
mov
aaa
or
mov
movsl
lret
pop
fldcw
lret
jl
jnp,pt
aad
xchg
mov
jo
enter
push
ds
inc
jg
sti
ljmp
jbe
xor
push
mov
push
xor
das
cmp
mov
jmp
divl
mov
sbb
test
cmpb
imul
pushf
sub
jb
push
mov
lahf
sbb
iret
testb
ja
loopne
jbe
fwait
sub
mov
aas
inc
sarl
sahf
jg
and
and
dec
mov
lret
jl
aas
sti
ret
lahf
out
test
jmp
pusha
adc
test
xchg
xchg
inc
rol
stos
inc
mov
cmpsl
sub
mov
dec
mov
cmc
aas
lods
cmp
xchg
sti
ficoml
pop
jae
mov
stos
mov
insb
pop
xchg
stc
sub
mov
sbb
jnp
jle
xchg
mov
add
jnp
iret
or
dec
lea
xor
outsl
test
cwtl
mov
xchg
popf
inc
jno
sahf
mov
cmp
xlat
iret
mov
clc
or
aaa
mov
aas
jg
sbbl
insb
ds
mov
jl
arpl
jns
fwait
xchg
sbb
add
jl
lds
imul
inc
mov
mull
jge
aas
mov
or
or
bound
loope
lahf
sti
inc
inc
mov
lods
lcall
mov
xchg
aas
mov
jb
push
cmp
or
pop
mov
stos
mov
sbb
fsubr
sub
cmp
xor
das
out
dec
add
bound
jp
or
cltd
ja
imul
js
sub
jo
jp
lcall
sbb
pop
inc
stos
or
fs
jne
xchg
mov
ss
sbb
sub
pop
push
shr
sbb
jg
dec
ljmp
je
pop
lods
sar
jnp
add
pop
ljmp
hlt
mov
mov
popf
mov
jmp
mov
repz
jl
cmp
in
xor
sub
xchg
xor
mov
imul
mov
aas
adc
dec
xchg
or
aam
stos
pop
jnp
fdivrl
iret
ret
cmp
mov
cltd
lcall
jo
jmp
lret
jmp
ret
in
rcll
jnp
sti
stos
imul
rorb
mov
sti
aaa
inc
mov
cmpsl
pop
mov
jecxz
jno
jg
decl
aas
out
ret
cmpb
pushf
imull
jg
mov
cltd
out
jl
cmp
out
fbld
push
movsl
mov
jb
cmpsl
cmp
popf
jecxz
mov
lahf
adc
ret
dec
pop
sbb
push
mov
pop
xchg
cli
mov
mov
fdivl
mov
mov
shl
xchg
out
dec
scas
mov
fldenv
repz
cmp
mov
mov
mov
push
xor
and
lret
xchg
push
mov
mov
mov
xchg
mov
mov
jne
jecxz
xchg
jge
icebp
mov
mov
test
ja
dec
int
out
mov
xor
mov
mov
mov
outsb
xlat
icebp
in
mov
inc
inc
fildl
jo
pop
addb
lahf
cs
mov
mov
inc
dec
pop
dec
xchg
pop
stos
push
mov
lea
mov
push
xor
cmpsl
or
aad
outsb
pop
push
insl
rcrb
and
ja
sbb
inc
dec
jecxz
jp
xor
cmp
push
jmp
pushf
add
pop
in
lahf
pop
xchg
sbb
out
sbb
and
popa
cld
jl
les
fiadds
clc
xchg
sub
sub
or
cmp
inc
insl
mov
mov
cltd
jg
and
or
mov
mov
xchg
fisttpl
int
cmp
inc
cmc
scas
iret
mov
int3
sub
popf
iret
inc
scas
jae
mov
fprem1
addr16
loop
mov
pop
fisubs
fiaddl
sub
aaa
in
fwait
sarl
jb
jle
mov
daa
out
cmp
mov
or
push
andl
mov
cmp
dec
dec
xchg
cmp
or
pop
pop
cmpsl
jmp
xchg
ja
out
push
mov
ja
aam
mov
xchg
adc
stos
mov
inc
mov
add
sahf
movsl
sub
out
xlat
jp
sub
inc
outsl
lahf
shlb
mov
aas
das
movsl
incl
stos
push
arpl
int3
inc
pop
addl
adcb
stos
pop
sub
addr16
push
sub
mov
inc
sub
shll
sub
scas
adc
xchg
mov
adc
mov
cwtl
cmpsl
test
das
mov
mov
jbe
cmp
xlat
push
negl
xor
jne
xchg
shrb
push
inc
jge
adc
or
mov
lahf
insl
add
jecxz
inc
lea
xor
push
add
xor
inc
loope
mov
mov
jo
movsl
xchg
rolb
ja
outsl
out
push
jne
mov
imul
sahf
mov
aas
mov
mov
jp
leave
xchg
add
std
dec
movsl
xchg
lcall
sub
inc
sub
or
ljmp
push
ja
jp
outsl
bound
loop
lret
sbb
xchg
jge
mov
xchg
in
dec
lret
scas
and
stos
xor
insb
xorl
pop
imul
cs
inc
data16
mov
fbstp
fldcw
inc
cmp
pushl
adc
mov
ja
xor
lcall
pop
aaa
sub
xchg
outsl
sub
insb
fcomip
mov
lods
cltd
roll
cld
ljmp
in
sub
ret
lret
mov
loope
popa
mov
fdiv
loope
scas
in
bound
aam
jae
mov
mov
shrl
lret
cmp
pop
or
mov
sub
mov
stos
imul
mov
fistpl
iret
lret
insb
aas
xchg
xor
outsb
fwait
mov
jmp
jns
mov
adc
xlat
cmc
mov
cli
fdivrs
and
lods
push
ds
call
jns
cmp
push
sbb
fnsave
ficomps
bound
ja
adc
and
lret
jecxz
ret
and
mov
dec
inc
stos
es
jg
xchg
jae
lret
xor
jge
aas
jae
inc
call
icebp
adc
dec
inc
pushl
outsl
mov
cmp
scas
mov
cmp
push
cmpsl
imul
mov
insb
cli
jns
iret
jecxz
int3
aad
fwait
inc
out
rcrb
fbstp
aaa
xchg
popf
xor
mov
loope
and
dec
and
lret
ss
pushl
rep
sub
fidivrl
xor
xchg
and
lret
or
lods
imul
in
xchg
popa
mov
mov
popf
mov
mov
mov
push
leave
mov
or
das
shl
cvtpi2ps
movl
jp
mov
push
leave
mov
jns
adc
mov
jle
xor
cmp
and
subb
aas
scas
cmc
push
inc
sbb
lods
push
mov
stos
int3
aam
fistps
mov
jl
xchg
iret
dec
loop
lret
fnstsw
adc
nop
pop
cmp
pop
stos
cwtl
jb
mov
inc
inc
dec
lods
mov
mov
jg
and
mov
insb
lcall
sub
sbb
mov
fwait
lea
mov
int3
xlat
enter
xchg
lds
push
mov
sub
lret
dec
iret
mov
mov
scas
insb
push
sub
test
fcmovnbe
xorb
sub
mov
rolb
xor
test
mov
xchg
push
out
pop
lds
xchg
mov
pop
fwait
sbb
fidivl
mov
xchg
mov
daa
mov
push
xor
loop
mov
xor
jg
mov
loop
negb
pop
leave
jg
sarl
cmp
fwait
xchg
mov
inc
das
inc
subl
sub
out
xchg
movsb
std
cmc
repnz
jb
jae
mov
xchg
out
or
mov
int
and
xchg
addr16
ss
insb
mov
ss
in
data16
mov
xor
dec
jae
sub
add
pop
jg
fwait
inc
sahf
shll
sbb
mov
sbb
inc
mov
imul
andl
cmp
aas
xchg
pushf
xchg
or
pop
stos
out
insb
arpl
fldl
cmc
out
cs
outsb
mov
xor
aad
pop
mov
shrl
jne
jnp
ss
push
testb
pushf
fstpt
or
je
or
movsb
fisttpll
xchg
mov
xchg
mov
mov
jnp
insb
lret
ja
jae
add
shr
sub
sub
ss
mov
imul
shrl
cmpsl
fwait
dec
fisubrs
iret
jg
aaa
mov
mov
ja
xchg
lods
cmp
inc
out
or
fisttps
fwait
mov
sbb
push
mov
cmp
cmp
jnp
push
mov
fidivl
push
out
sub
mov
insb
lahf
mov
jns
mov
mov
iret
aam
jns
sub
mov
pop
ja
je
jbe
repz
fsubs
popa
or
xlat
stos
stos
orl
mov
jecxz
jecxz
fildl
stos
out
cwtl
jnp
jne
inc
sub
scas
leave
xlat
or
jnp
fsts
mov
jb
mov
iret
mov
mov
mov
arpl
popf
aam
pop
mov
inc
out
test
mov
mov
movl
xchg
mov
mov
xor
inc
adc
ja
jge
daa
cmc
jo
ret
loopne
leave
fisubl
loop
xchg
xchg
pushf
xchg
iret
movsl
xchg
jne
insb
mov
into
jmp
ja
mov
inc
or
jae
ds
cmp
sarl
dec
pop
mov
imul
mov
sub
loope
int3
jnp
cmp
fwait
push
sbb
ds
shl
aam
pop
daa
mov
xor
jne
cltd
cwtl
sbb
push
data16
pop
stos
inc
insl
cmp
jp
jns
or
cmp
push
lret
pop
mov
adc
pushl
jl
mov
cmp
es
lea
lock
insl
jns
outsb
jne
inc
nopl
jg
xchg
shl
mov
js
ficomps
inc
jb
sub
xchg
sbb
jbe
test
imul
ja
xchg
movsl
inc
out
scas
jne
pushf
sub
flds
in
jecxz
out
jg
jmp
lods
insb
rorb
fucomp
repz
stos
lahf
push
mov
pop
aad
mov
xchg
scas
fdivrs
repz
ja
adc
inc
mov
in
lods
inc
lea
imul
imul
inc
fsubl
jbe
jp
jecxz
xchg
fstl
mov
mov
fisubrl
jnp
cmp
cld
mov
pusha
sub
pop
imul
int
ret
xchg
lahf
lret
mov
xor
xchg
dec
fstpt
addr16
xlat
jne
xchg
lret
mov
aam
lahf
mov
mov
cmp
mov
mov
rcrb
cltd
pushf
shl
iret
mov
pusha
jmp
xor
inc
jno
jne
insb
rorl
ficoml
push
fisubl
sub
cli
xlat
xchg
sti
addr16
insl
xchg
mov
shll
xlat
stc
mov
or
mov
and
shl
imul
jmp
lods
cltd
imul
fwait
lret
imul
sbbb
ljmp
jle
dec
stos
or
mov
outsl
stos
ror
and
les
dec
out
mov
jns
xor
mov
jne
mov
imul
outsb
push
aad
ss
mov
add
idivl
ja
xorl
nop
add
inc
sub
mov
mov
leave
out
cmpsl
pop
cmc
aas
inc
lret
push
mov
dec
movsb
mov
ja
insb
fwait
pop
mov
insb
jge
jmp
sarl
jg
mov
xorl
pop
imul
sbb
outsb
insb
jbe
aaa
mov
fisubrl
cmp
fcomi
jne
and
sub
outsb
mov
cs
sub
xchg
lret
fdivs
pop
jno
addr16
test
adc
mov
loope
movsb
inc
lret
cltd
por
pop
adc
xchg
adc
bound
pop
pusha
pmaxub
movsl
imul
and
fldt
imul
lea
das
ljmp
adc
cli
ljmp
scas
mov
mov
jl
mov
fsubl
inc
xchg
or
stos
fdivrl
jae
xor
mov
jae
test
lahf
inc
inc
mov
add
or
lahf
aas
inc
mov
push
insl
outsl
insl
lcall
notl
push
lret
fisubrl
sti
jae
mov
xchg
mov
xor
scas
scas
pop
sub
in
mov
data16
or
and
loop
inc
sub
das
ss
sbb
jg
aas
push
loope
xor
mov
les
pop
daa
xor
ja
pop
lahf
push
inc
stos
ret
or
jbe
cs
dec
jg
adc
dec
xchg
jnp
push
xor
pop
jge
jnp
inc
incl
ljmp
push
mov
or
bound
loope
idiv
jmp
stos
aas
jo
jae
out
insb
pop
push
jmp
jae
mov
aas
jmp
and
add
jg
jp
jnp
jecxz
ss
sbb
xor
arpl
jnp
lret
jl
aas
pop
sarl
push
rcl
mov
pop
cmp
fwait
ja
sahf
cwtl
mov
adc
les
jno
rcrb
xchg
sti
mov
mov
xchg
movsb
inc
out
dec
icebp
ud1
jecxz
and
mov
adc
aaa
push
dec
inc
mov
cwtl
pop
dec
imul
mov
ja
xor
arpl
fdivs
fcomip
iret
stos
lahf
adc
aaa
push
or
pop
sarl
fimuls
aad
pop
inc
pop
inc
sub
push
call
cmpsl
lcall
xor
loope
lahf
or
test
call
sub
xlat
gs
xchg
rol
adc
shlb
js
xchg
roll
mov
repz
in
add
lret
out
xchg
adc
daa
rol
jb
gs
mov
cmpsl
inc
daa
test
xchg
repz
mov
insb
push
dec
xchg
mov
movl
cwtl
idivl
xorb
popf
mov
ficompl
mov
xor
xchg
movsl
xchg
lret
mov
insb
pop
je
imul
movsb
mov
popa
das
movsb
fdiv
jge
fidivrs
lahf
xchg
dec
jnp
adc
movl
sub
mov
imul
add
jo
mov
jae
addr16
dec
cmp
push
adc
stc
add
xchg
jns
aas
inc
mov
jl
je
fildll
cmc
loop
or
sub
inc
pop
mov
jg
adc
repz
cwtl
mov
and
mov
dec
aam
xchg
push
and
iret
push
pop
jg
mov
and
cmp
mov
jl,pt
sbb
subb
dec
in
mov
sub
pusha
cmp
xlat
add
push
or
and
pop
sti
sahf
repnz
mov
addr16
ret
andl
or
out
jae
popf
xor
jo
movl
addr16
jne
mov
mov
add
jecxz
jns
xor
mov
dec
hlt
in
ja
cmp
mov
aad
mov
sbb
mov
push
aaa
ds
stos
je
sbb
pushf
mov
jmp
jno
add
rorb
pop
and
pop
pop
shl
mov
jns
xchg
addr16
decb
add
mov
dec
pop
shrl
mov
nop
jl
lods
mov
fwait
sti
adc
xor
stos
mov
push
icebp
lock
mull
fidivrs
jle
adc
xchg
mov
sub
jle
jb
sti
adc
sahf
fcomps
ljmp
mov
add
xchg
dec
sahf
mov
mov
jb
movsl
mov
mov
pop
inc
dec
dec
pop
jl
pop
lret
stos
arpl
mov
push
cmp
jmp
jae
lods
add
shrb
and
jmp
pop
adc
cmp
js
mov
inc
icebp
ja
xor
xchg
dec
imul
pop
scas
mov
jo
insl
insb
iret
sub
jmp
jge
xor
or
dec
popf
outsl
push
ret
and
cs
mov
lods
pushf
in
insb
mov
fisttps
jg
sub
inc
aas
movsb
enter
fcomps
add
cmpsl
mov
mov
mov
lahf
aas
jne
cmpsb
mov
ficompl
jmp
fsts
push
ds
test
sti
out
aaa
daa
aad
test
dec
xlat
lret
cli
iret
mov
addr16
mov
cmpsb
xchg
sub
stc
inc
push
mov
ja
dec
fisubrl
cmp
mov
stc
jle
jecxz
sarl
mov
fcmove
sbb
adc
aaa
lret
or
in
leave
dec
inc
orb
jle
xchg
pop
jns,pn
out
cltd
lahf
xchg
aad
mov
lods
popf
mov
inc
clc
inc
mov
in
popa
stos
mov
xchg
dec
aaa
mov
imul
push
cltd
leave
mov
testl
ds
mov
xchg
xchg
sub
ljmp
jns
lret
mov
add
fs
out
cmpsl
test
mov
cmp
cmp
xor
mov
inc
test
jne
arpl
insb
lcall
mov
daa
and
jp
mov
xor
lods
push
test
movsl
inc
fs
inc
lods
insb
xchg
mov
shrb
xlat
aas
mov
cmpsl
emms
jmp
jl
outsb
jns
stc
mov
lods
negl
imul
sahf
andl
sbb
mov
cmpsl
ja
sbbl
decb
fcmovnbe
sbb
lds
mov
test
fldl
andb
mov
sbb
aaa
pop
inc
mov
scas
lahf
insl
iret
testb
jecxz
xchg
nop
imul
xor
sti
das
jae
call
jns
mov
lea
mov
xchg
bound
jnp
push
mov
jecxz
push
xor
or
mov
ja
rcrb
xchg
inc
cld
cmp
jmp
mov
jg
lds
aas
push
inc
jbe
mov
mov
leave
sbb
dec
int3
push
jne
push
stos
dec
cwtl
or
sbb
pop
mov
sbb
jg
fidivrs
out
mov
jae
out
mov
fwait
mov
lret
add
inc
mov
subb
push
lret
sbb
imul
adc
mov
call
sub
pop
cmp
mov
lds
mov
push
out
dec
mov
lods
mov
mov
in
out
xlat
scas
out
aas
mov
mov
fwait
xorl
popf
mov
xorl
inc
jg
sub
sub
sti
mov
popf
sti
pop
push
add
cli
inc
iret
andl
cltd
inc
jp
js
jbe
xlat
pop
scas
test
shrb
sub
popf
scas
mov
call
imul
xchg
daa
xchg
and
cli
mov
outsl
xor
adc
cmp
jnp
xor
orb
mov
movsl
adc
jae
jne
es
push
imul
andl
hlt
lret
in
cmp
pop
rcrb
jle
sbb
aaa
scas
pop
lods
jo
stos
xor
in
gs
sbb
pop
stos
mov
cli
xor
test
jnp
push
rorl
xor
je
sbb
push
imul
imul
and
push
cmpl
iret
jne
xor
xchg
sbb
fmul
pushl
stos
jecxz
cld
push
into
push
insb
out
mov
cltd
lret
aas
ss
incl
imul
ficompl
jecxz
jecxz
push
push
xchg
aas
mov
shrb
inc
xchg
mov
xchg
cmpsl
movsl
inc
out
xchg
mov
mov
leave
jne
movsb
scas
rcrl
xor
xchg
sbb
fwait
sub
pop
scas
pop
jg
push
jmp
mov
push
stos
sbb
aas
pusha
iret
negl
jg
mov
sti
mov
cs
lea
sub
test
and
jecxz
push
jae
imul
mov
scas
in
ljmp
jns
aaa
fistpl
aas
movsl
fcomi
cmp
and
xchg
insb
jno
idivl
repz
scas
pop
insl
imul
xor
popf
lds
arpl
mov
jge
and
scas
ds
jae
jg
rolb
pop
xchg
mov
ss
stos
lret
gs
push
shlb
iret
mov
xorl
jl
out
and
and
movsb
jecxz
dec
clc
push
lret
cmp
jg
sbb
rcrb
stos
sub
aas
ret
int3
inc
jnp
push
mov
iret
dec
int
imul
or
stos
sarl
and
cwtl
shrl
arpl
and
adc
or
scas
cs
xlat
add
sub
and
fstps
scas
aaa
mov
test
cmp
dec
mov
popf
jns
pop
lahf
xlat
sarb
mov
jns
fwait
jl
cs
leave
mov
imul
int3
in
shrl
jae
jge
and
rcl
lahf
rcrl
inc
divl
ds
jl
in
imul
iret
push
mov
mov
jge
cmpsl
dec
lea
dec
fstp
xor
cmpsl
je
and
jmp
jle
into
bound
leave
repz
lret
in
xchg
pop
fstpt
fs
push
mov
add
and
pop
stc
or
shrl
test
movsb
data16
lea
mov
inc
mov
xorl
mov
lahf
push
aas
stc
fwait
adc
icebp
fucom
mov
push
mov
pop
xor
into
lods
jecxz
adc
mov
fwait
dec
pop
fidivs
cmc
push
mov
mov
cmpsl
scas
jne
cltd
mov
jnp
jb
cli
jno
inc
xor
ja
cmp
mov
ficomps
fidivrs
mov
popf
mov
lret
jno
adc
cmp
sub
mov
scas
fs
mov
xchg
xlat
leave
push
cmp
js
test
xlat
lret
lods
out
xchg
pop
jecxz
loope
subl
add
fstpt
inc
mov
sbb
fwait
aam
imul
dec
pmulhw
cmpsl
cmp
jae
mov
mov
sahf
flds
xor
mov
xchg
push
test
xchg
jle
mov
mov
jb
popf
pop
packsswb
xchg
int3
mov
mov
xor
shlb
popa
mov
repz
sub
rcrl
mov
stos
iret
xchg
jne
fcmovbe
fistps
jno
sbb
sub
mov
pop
dec
sub
movsl
xchg
outsb
fbstp
xchg
je
fildl
mov
cmpsl
jg
js
rcll
xorl
xor
jne
pushf
inc
push
aas
jge
mov
loope
add
cwtl
push
sahf
dec
xchg
jnp
push
test
add
jge
xchg
insb
aad
cs
out
mov
adc
xor
jg
jnp
jp
fists
test
stc
clc
ja
jp
mov
scas
outsb
xchg
mov
fnstenv
or
fiaddl
sti
cmp
scas
push
mov
xchg
mov
fsubs
ss
sbb
dec
cmp
icebp
test
mov
push
fimuls
fisttps
imul
into
pop
cltd
lahf
jl
stos
sub
xchg
insb
xor
stos
jge
aam
frstor
imull
mov
fildll
jnp
xor
sahf
pop
gs
fistpll
jne
lret
fnstcw
pop
sbb
mov
cmc
stc
dec
xor
jo
loopw
add
scas
insb
sbb
xchg
jle
jbe
adc
pop
fcmovne
outsl
aad
subb
mov
push
mov
pop
sub
aam
inc
dec
pop
movsl
mov
mov
mov
sbb
icebp
cmpsl
fs
stos
mov
or
popf
aam
fstpt
sub
pop
lahf
or
mov
jne
mov
outsl
pusha
jne
aad
cli
xchg
pop
iret
jns
inc
ret
pop
pop
jne
pop
cmp
and
ljmp
ja
mov
lret
push
in
je
popl
iret
push
outsl
sbb
xlat
ds
mov
movsb
cmp
fcoms
rclb
subb
xlat
pop
pop
jae
and
mov
js
push
inc
movsl
xchg
push
ja
cmp
cmpsl
out
mov
jmp
cmp
mov
xchg
ds
inc
sbb
jae
je
fs
aas
pop
iret
or
mov
mov
mov
mov
cltd
loopne
hlt
lret
mov
pop
and
xor
js
jne
imul
sahf
cltd
xchg
mov
repz
outsl
stc
fldcw
inc
xlat
pop
scas
lods
xchg
push
xor
pop
mov
scas
loop
mov
lret
pop
out
jge
cli
movsl
imul
fwait
xchg
lahf
add
push
icebp
add
fnstsw
ss
xlat
push
icebp
insl
mov
inc
xlat
iret
jns
xchg
adc
mov
aas
out
out
mov
push
iret
adcb
push
jg
and
jne
mov
stos
fwait
stos
xchg
push
mov
cwtl
cmp
outsl
xor
sbb
push
inc
jns
rcr
fbstp
mov
rclb
bound
scas
imul
jecxz
mov
nop
mov
arpl
fcmovnbe
fsubrl
lret
sbb
cmpl
xor
fwait
ss
fwait
mov
ljmp
mov
add
ds
inc
stos
add
jb
dec
pop
lds
jecxz
jl
xchg
mov
insl
lock
fldl
mov
mov
cmc
das
out
fists
sahf
push
out
fistps
mov
jne
or
js
mov
mov
inc
push
dec
pop
lret
rcrl
movsl
push
inc
lret
ds
sub
mov
cmpsl
mov
cs
xchg
jle
dec
fildll
ja
addl
ret
sbb
inc
pop
jecxz
cmpsb
jo
mov
mov
mov
sti
mov
push
jg
fwait
xchg
stos
sbbl
outsl
inc
cmp
mov
pop
jae
push
jno
gs
pop
xlat
mov
xchg
push
in
fidivl
movsl
sbb
aaa
outsl
mov
fists
mov
sbb
icebp
jne
leave
stc
subl
aaa
xchg
cs
xchg
jns
aas
xor
sbbb
out
stos
shlb
mov
fmull
xor
xor
mull
lret
sahf
jg
mov
sti
outsl
xlat
or
or
cmp
xor
xor
sti
cmpsb
lret
push
ja
pop
addr16
mov
jge
gs
test
je
outsl
cmpsl
mov
fildll
mov
push
pop
xchg
sbb
xchg
or
lret
xor
cs
out
ja
aam
movsb
jg
lret
repnz
lret
ja
lret
jae
jecxz
cmp
push
mov
sbb
xchg
mov
lahf
aaa
xchg
jmp
stos
imul
sub
pop
pop
jae
std
rcr
outsl
push
pop
js
sub
lret
jae
pushf
mov
movsl
out
pop
push
lods
cmp
outsb
inc
ret
fcos
cmpsl
inc
aaa
sub
xor
or
lahf
int
ja
jmp
jg
pop
mov
stos
mov
inc
push
cmp
fbld
lahf
inc
ja
jae
fists
imul
inc
iret
popf
clc
lea
mov
arpl
cmp
sahf
xorl
mov
inc
repz
lahf
loopne
ds
gs
sbb
sub
dec
in
and
or
mov
sarl
xchg
dec
stos
mov
dec
cmp
dec
mov
mov
push
pop
pop
ret
leave
sub
push
imul
jne
icebp
ds
and
inc
jne
fildll
cltd
mov
imul
jg
stc
stos
imul
lods
xor
ss
gs
ds
aas
out
push
jne
mov
das
jnp
cmp
test
dec
jnp
xchg
into
sub
xor
stos
jb
or
xchg
mov
cltd
iret
iret
jnp
jg
sbb
fildl
xor
mov
xchg
scas
imul
lcall
jle
xlat
adc
imul
fcoml
mov
imul
dec
mov
push
jns
ds
cmp
lds
jnp
rcr
lahf
push
test
maxps
in
cmp
pop
out
shlb
loop
mov
daa
sbb
dec
dec
out
sub
sub
mov
pop
mov
test
mov
aaa
and
fwait
das
inc
fsubrl
mov
in
and
outsb
lcall
adc
mov
mov
push
inc
faddl
jge
pushf
out
inc
lret
bswap
pop
xchg
sbbb
mov
icebp
jno
cmp
jp
push
mov
fisubs
je
aaa
dec
cmp
xor
push
mov
push
loop
js
xor
sub
pop
sarl
aaa
loope
mov
mull
add
int
inc
mov
lods
outsb
mov
sub
movsl
imul
jge
ja
jne
stos
ja
aaa
test
mov
movsb
mov
shll
ljmp
sbb
xchg
cmpsl
sbb
ffree
mov
mov
mov
jecxz
les
sbb
jp
add
add
stos
loope
mov
aad
mov
inc
outsl
shll
daa
inc
aas
push
mov
lret
cmc
mov
vpperm
aaa
mov
sahf
sti
adc
or
sahf
mov
jl
fcmovbe
inc
fistpl
cmpsl
ret
mov
arpl
lret
in
aaa
push
pop
lods
mov
jecxz
sub
mov
xor
lret
xchg
fcmovbe
jne
inc
scas
mov
sbb
xchg
dec
or
sete
xchg
inc
faddp
inc
lea
scas
js
push
jmp
mov
mov
xchg
loope
push
addr16
adc
imul
test
lcall
test
fwait
mov
test
dec
xor
mov
leave
addr16
push
stos
sbb
sub
aaa
lret
jp
xchg
into
add
addr16
inc
lahf
ds
xchg
sub
cmp
mov
sub
jae
loopne
sub
stos
sub
lret
push
imul
sub
arpl
sub
addr16
inc
xor
loopne
mov
xchg
jecxz
dec
repz
sub
mov
nop
sub
ror
mov
jne
decb
xchg
cmpsb
icebp
out
sub
xchg
xchg
popa
movsb
jg
and
jns
inc
addr16
rcl
cltd
jg
mov
scas
or
repz
mov
xor
jnp
fcmovnbe
loope
addr16
repz
lods
jne
mov
out
mov
xor
insb
dec
xor
fdivrs
sub
pop
ret
mov
mov
or
inc
pop
ljmp
imul
mov
xchg
pop
lahf
xlat
jae
jae
arpl
insl
dec
lods
testl
pop
mov
jge
or
dec
sbb
jecxz
lods
cmpsl
mov
ljmp
daa
outsb
cli
jb
sbb
lahf
imul
mov
mov
add
cmp
insb
xor
or
rolb
lds
pop
cmpsl
les
nop
insl
inc
inc
push
scas
and
sub
jl
das
adc
and
shll
xor
test
aas
mov
cmp
push
bnd
add
mov
and
ds
lret
jnp
xor
out
mov
mov
push
repnz
cwtl
jmp
ficompl
lea
mov
aam
jg
sti
out
insb
out
fisttps
inc
in
xlat
push
dec
sub
cmp
ds
push
xchg
dec
js
push
sbb
leave
out
pop
xlat
mov
jp
mov
xor
cmpsb
xchg
fiadds
adc
xor
inc
cmpsb
icebp
mov
into
stos
fstpt
pusha
jg
mov
pop
std
inc
imul
sahf
dec
mov
mov
aaa
sti
shrl
mov
dec
xor
cmp
imul
aas
jne
mov
scas
xor
xorl
subl
pop
mov
inc
call
daa
xor
inc
loope
ret
lods
jb
sbb
sti
repz
sti
mov
pop
nop
bound
addb
or
lock
cmp
cmp
mov
cmp
cmpl
aam
frstor
pop
mov
jo
popf
insl
xchg
roll
in
pop
stos
mov
mov
jo
inc
pop
jnp
lea
cwtl
jl
xchg
mov
gs
bnd
jmp
js
gs
out
clc
sbbb
subb
cmpsl
outsl
scas
inc
lea
dec
data16
fwait
outsl
cli
lret
out
mov
xor
inc
imul
sbb
mov
cmp
ja
ljmp
loopne
mov
jns
aaa
cltd
stc
sub
adc
mov
scas
xor
movsb
xor
and
adc
inc
jecxz
sahf
and
scas
pop
getsec
scas
mov
mov
data16
iret
loope
test
jg
imul
inc
mov
insl
sub
dec
scas
in
ret
push
ficoms
push
movsl
clc
fcmovnu
jg
fimuls
mov
jae
fisubrl
or
addr16
adcb
mov
mov
fimuls
out
cltd
jmp
lea
xchg
cwtl
mov
mov
jb
out
inc
pusha
out
std
mov
arpl
aad
jae
rcll
mov
xlat
ret
jg
xchg
mov
pop
mov
xchg
mov
adc
xchg
mov
popf
mov
fwait
sub
in
ss
jmp
adc
inc
or
mov
xchg
or
int
push
jne
dec
shrl
push
lret
and
int
sahf
aad
inc
lret
jae
jae
jae
notrack
jb
jl
das
jge
xor
xchg
test
cmpb
lds
int3
mov
jne
or
rorb
out
leave
push
mov
jae
or
adc
xchg
pop
addr16
sub
mov
icebp
mov
add
mov
mov
movsb
cmpsl
sub
out
mov
popa
movsb
lahf
fldenv
and
fcmovbe
jg
icebp
pop
mov
and
cmp
nop
movsl
sub
sub
cwtl
test
add
xchg
jnp
jl
mov
loop
test
lret
dec
fwait
arpl
push
mov
fbstp
arpl
mov
lds
lret
scas
pop
xchg
jg
icebp
addl
fwait
push
nop
testb
dec
scas
iret
sub
xchg
mov
movsl
cmpb
xor
xchg
inc
push
sbb
xlat
xor
arpl
mov
dec
fbld
cltd
int3
mov
rcll
mov
notb
in
cltd
lods
mov
inc
ljmp
or
fidivrl
fdivrs
jmp
mov
rcr
pop
subl
xchg
mov
mov
loop
fisubrs
aam
mov
xchg
fimuls
or
fildll
test
aam
pop
mov
test
push
mov
int3
push
cld
hlt
fs
xchg
push
aam
xchg
aaa
loop
mov
scas
shl
mov
jg
jbe
stos
dec
pop
mov
lahf
xor
stos
iret
xchg
pushf
js
outsl
push
cmp
xor
aas
stos
call
add
sbbb
sub
std
xchg
xchg
mov
pop
scas
shl
push
fcmovb
and
push
xor
mov
lret
jle
movsb
aad
shrb
pop
pop
sarb
std
addr16
xchg
jmp
pushf
inc
pmaxub
or
xor
pop
mov
popf
fdivrs
xchg
jg
jp
pop
lods
inc
mov
fdivrs
lcall
mov
les
add
inc
xchg
out
shll
lret
pop
into
mov
insl
aaa
and
rcrl
push
call
iret
or
xchg
lock
leave
jae
daa
lcall
fstl
pop
mov
sub
fidivs
and
shl
xor
fistl
insb
ja
das
pushf
ja
push
jns
ljmp
cmpl
xor
lret
pop
sbbl
daa
fmull
test
jae
push
mov
push
jb
mov
movq
jae
inc
cltd
cld
aas
jb
cmp
lods
iret
sti
out
xlat
shlb
xor
pushf
inc
pop
lods
movsb
stos
xlat
subl
mov
cmp
mov
mov
addr16
stc
sti
mov
loope
mov
ja
push
mov
fldl
mov
fdivs
pusha
stos
push
dec
lahf
xor
int3
sub
aaa
dec
pushf
or
scas
mov
pop
aas
out
cmpsl
xor
mov
xchg
cmp
call
out
pop
int3
pushf
add
insb
clc
loop
aas
push
pop
arpl
xlat
jns
pop
stos
test
xchg
pop
sub
iret
cmp
mov
mov
fisttpl
insb
xchg
mov
and
jne
xlat
shrb
inc
jno
cmp
sub
sahf
dec
lahf
aad
ds
dec
addr16
mov
das
cmp
cmp
aas
in
mov
pop
shll
stos
test
xchg
out
fbstp
fcoml
mov
rcll
pop
mov
das
mov
out
int
daa
lahf
inc
sbb
call
outsl
in
out
fwait
mov
mov
andb
cmp
xchg
mov
mov
das
aas
xchg
cmpsl
rcr
cmpsl
lret
dec
out
xchg
stos
out
pop
sbb
xchg
mov
loopnew
test
inc
jp
in
cmp
lret
jae
mov
pop
mov
xchg
shrl
and
test
inc
inc
rcl
imul
out
cmp
das
scas
ja
pop
mov
jo
ja
add
outsl
pop
mov
push
mov
out
loope
mov
xlat
scas
cltd
cmp
test
mov
mov
pop
imull
pop
and
outsl
xchg
mov
aaa
loop
cmpsl
into
out
lret
aas
mov
cmp
xchg
fisttps
aaa
lods
jnp
inc
stos
addb
mov
push
test
je
mov
sub
not
sarb
push
xor
mov
mov
jecxz
out
lahf
xor
mov
fsubl
pushf
push
cmpsl
leave
push
loopne
lods
mov
movsl
sub
mov
mov
push
and
adc
lea
cs
dec
mov
rclb
mov
cli
dec
xlat
ret
push
mov
mov
mov
dec
movl
add
dec
popa
leave
push
sub
jmp
stos
xor
rcrb
xlat
mov
pop
jmp
jno
test
nop
add
sub
push
mov
xchg
dec
xchg
pop
cmp
sbb
loop
loopne
pop
jns
xor
mov
lahf
xor
cmp
in
dec
ss
sti
sbb
bound
add
sub
stc
jmp
mov
inc
and
sarl
sbb
and
xchg
test
ret
inc
pop
out
les
inc
ja
movsl
outsb
inc
int
stc
lret
inc
in
rcrb
hlt
inc
push
xchg
les
in
xchg
inc
sbb
mov
sub
dec
sub
sbb
lods
dec
cwtl
les
movsb
lock
out
cmpsb
scas
into
inc
or
callw
cmp
adc
mov
adc
inc
ret
adc
push
fnstenv
rolb
testb
cltd
sub
pop
in
cld
xlat
js
add
bound
sahf
fbld
pop
pop
test
jmp
sub
jecxz
pop
push
xor
popf
frstor
jecxz
xchg
orb
stos
push
lret
dec
iret
sbb
inc
aaa
sbb
mov
cmp
popf
call
hlt
adc
mov
jb
test
push
xchg
daa
push
sub
mov
xlat
cmp
pushf
popf
js
dec
mov
pushw
pop
pop
jo
fimuls
scas
mov
pop
mov
xlat
fldl
sub
xchg
cmpb
shrb
popa
or
repnz
jbe
mov
adc
mov
xchg
rorb
pop
out
mov
orb
pop
push
mov
out
aaa
push
inc
xchg
aam
fsubr
add
scas
test
int3
push
mov
stos
gs
out
cmp
outsl
icebp
shll
mov
push
insb
fcmovb
jle
jmp
jg
pop
push
pop
stos
lods
std
and
cli
insb
movsl
imul
cwtl
cmpsb
and
jnp
xchg
jg
daa
xchg
frstor
push
ja
call
jb
lods
jg
mov
dec
and
out
insl
insb
int
pop
ljmp
push
addb
inc
mov
xchg
decb
xor
addb
mov
cmp
pop
xor
pop
testl
or
mov
nop
xor
sbb
mov
int3
ret
test
dec
xor
jb
or
insl
sbb
pop
mov
das
ljmp
test
jecxz
xchg
scas
push
push
mov
mov
shl
mov
rol
lret
daa
push
fnstenvs
jo
mov
mov
ret
in
stos
mov
scas
lods
mov
dec
hlt
dec
pop
mov
inc
mov
mov
test
out
mov
js
mov
in
add
or
in
or
es
stos
mov
jecxz
dec
stos
pop
icebp
into
mov
fxch
adc
stos
scas
test
cltd
add
dec
out
add
mov
cmp
add
stos
push
jae
mov
ljmp
xlat
div
dec
or
xchg
cwtl
rol
push
push
lds
xchg
xchg
pop
mov
mov
mov
mov
add
ror
dec
mov
mov
mov
mov
jecxz
pop
and
aaa
dec
stos
mov
adc
test
cs
add
pop
call
mov
std
mov
push
pop
out
adc
cltd
rcr
mov
mov
fdivr
mov
pop
jge
and
adc
jne
dec
jecxz
xor
mov
fbld
pop
jle
test
repz
icebp
dec
cld
dec
dec
mov
jecxz
lock
jg
push
outsl
subl
mov
imul
orl
or
or
lahf
mov
xorb
push
mov
clc
push
lret
mov
lret
fdivrl
out
pop
sbb
xchg
cmp
sbb
cmpb
hlt
cmovge
adc
and
cld
fcmovb
aaa
andl
scas
jle
jmp
lds
jp
ret
jmp
notl
sti
add
and
mov
pop
cld
loop
rolb
ss
and
push
inc
push
xchg
xor
ficoms
mov
fidivl
mov
adc
cld
jno
rcrb
icebp
popa
mov
mov
xor
xchg
in
call
mov
scas
mov
adc
loop
xor
mov
js
sub
pop
cld
add
inc
pop
mov
pop
lahf
mov
pop
sub
sarb
mov
mov
test
stc
fcoml
mov
in
mov
pop
loopne
mov
pop
inc
stc
int
test
xchg
mov
add
ret
rorl
xchg
mov
pop
pop
add
daa
mov
jecxz
xor
jg
shl
mov
add
mov
xor
movb
jmp
out
jg
mov
sarb
out
loop
mov
dec
aas
inc
dec
mov
icebp
xlat
inc
inc
test
lds
sub
mov
dec
dec
add
out
testb
xorl
sarl
push
lret
jecxz
cmc
push
mov
fisubl
movhps
mov
ja
fstpt
jbe
mov
sti
jg
mov
les
fmull
pop
dec
bound
rol
mov
out
lods
outsl
and
out
shrl
fisubrl
fsts
fsubrl
leave
in
jge
push
out
mov
mov
nop
jbe
test
fistl
dec
xor
scas
mov
aas
mov
mov
add
or
pop
add
pop
push
xchg
sub
sbb
mov
notb
dec
repnz
out
roll
flds
mov
out
dec
add
mov
mov
stos
pop
mov
mov
cmpl
or
mov
out
mov
test
sub
in
jae
push
in
ds
mov
test
fnstenv
insb
imul
stos
adc
fldt
pop
lret
fsubrl
sbb
call
jecxz
repnz
cmpsl
sbb
lods
mov
mov
add
hlt
idivb
xlat
scas
add
mov
lds
vmwrite
mov
mov
jnp
aam
jne
mov
lret
fcompl
fcomps
fdivl
push
cltd
daa
cli
adc
pop
add
adc
push
sti
jns
test
iret
sti
jg
jg
jnp
aad
push
pop
in
ret
mov
mov
pop
lahf
notb
lahf
mov
xor
pop
dec
xlat
mov
mov
mov
sarb
mov
or
jg
aaa
rorb
data16
push
jno
fidivrl
pop
addr16
out
test
mov
aaa
mov
mov
or
jmp
pop
add
dec
push
jns
test
cld
fdivs
xlat
pop
pop
fisttpll
stc
loop
mov
mov
push
cmp
mov
dec
jnp
lahf
mov
xlat
push
in
adc
inc
dec
lcall
cmp
dec
xchg
rcrl
mov
stc
dec
pop
ja
ffree
daa
dec
cmp
aam
mov
push
jmp
or
icebp
add
pop
pop
mov
and
mov
push
rcrl
mov
add
sub
dec
stos
xadd
and
xchg
das
sbb
push
test
pop
addr16
or
imul
bnd
jo
or
aad
cmp
fnsave
shlb
fisubrs
xchg
mov
scas
clc
mov
outsl
sbb
es
adc
sbb
out
ficoms
pop
stc
lods
jne
ss
or
in
mov
loop
mov
mov
push
lahf
jae
cmpsl
cmpsb
in
sarl
sub
mov
or
mov
adc
or
pop
stos
mov
jns
xlat
cmpsl
test
jl
mov
jecxz
out
fninit
sbb
dec
mov
jg
dec
or
jecxz
adc
mov
push
mov
add
imul
stos
pushw
cmp
je
push
jne
jno
in
jns
cmpsb
xchg
fists
test
mov
mov
into
ror
faddp
test
aaa
ljmp
jge
xchg
data16
mov
fstpt
lahf
lods
test
loop
pop
mov
dec
rolb
jo
mov
xchg
out
or
leave
mov
aaa
adc
lret
xchg
jne
inc
es
pop
cltd
addr16
push
lret
inc
mov
sbb
pop
lock
popl
fidivl
add
jns
fldenv
outsl
stos
enter
jl
jno
jb
sbb
mov
mov
mov
mov
mov
mov
shlb
test
xchg
stos
sbb
scas
mov
scas
gs
push
test
mov
mov
bound
mov
stos
mov
inc
mov
jno
out
sbb
mov
mov
mov
dec
mov
mov
jns
popf
xchg
sbb
stos
pop
fcmovb
lret
lods
push
rcr
mov
mov
cli
scas
imul
cltd
mov
inc
lods
addr16
loope
loopne
rcl
lret
into
int
iret
addb
cmpb
inc
in
outsb
insl
jo
outsl
mov
popf
mov
push
mov
inc
cmp
ds
xor
sub
cs
popa
pop
pop
pop
pop
pop
pusha
pop
push
push
dec
dec
dec
dec
dec
push
dec
add
stc
cld
sti
inc
std
add
repnz
jmp
in
lock
and
sbb
sbb
push
sbb
or
or
push
or
shr
clc
cmp
jge
and
out
or
sbb
lods
nop
stos
jnp
lock
rcrb
stos
jns
and
mov
int3
imul
in
fcmovne
sbb
fimuls
and
and
inc
insl
cmp
push
mov
jl
sub
push
jp
cli
mov
sbb
std
addb
push
lcall
movl
xchg
xor
int3
cmc
xchg
daa
js
mov
icebp
lds
dec
rolb
fsub
pop
xlat
or
ss
xorb
shll
inc
aam
das
sub
bound
mov
loopne
pop
cmp
out
or
jp
repz
xchg
scas
mov
aam
in
into
in
mov
xor
dec
shlb
add
neg
dec
mov
sub
push
xor
jno
ds
ficoml
mov
jecxz
movsl
mov
add
dec
jmp
jmp
repnz
pop
add
xchg
mov
dec
jg
push
mov
or
push
popf
pop
repnz
mov
inc
jbe
mull
pop
in
pop
in
loopne
inc
sbb
inc
dec
mov
cmpsl
daa
cmp
inc
jb
jg
movb
repz
pop
mov
hlt
mov
scas
addr16
testl
fucomp
push
mov
inc
mov
sbb
inc
stc
mov
ja
pop
pop
popa
mov
sahf
sub
mov
cmp
and
testb
testl
xchg
cmpsb
jns
movsb
ss
jge
lret
js
add
push
and
pop
dec
cmp
stos
bound
mov
test
je
test
fisttpll
mov
pop
adc
adc
push
and
mov
cld
xor
ss
pop
xchg
into
jns
dec
int
es
cltd
cmp
fstps
push
xchg
into
rolb
test
std
push
sarb
jbe
movsl
or
pop
ds
push
inc
inc
mov
test
leave
xchg
mov
bound
mov
es
pop
fdivl
jmp
nop
pop
subl
cli
testl
stos
xor
in
fistl
ret
or
inc
test
push
scas
movl
repz
lods
mov
std
and
cmc
fistl
stc
mov
mov
adc
sbb
dec
fs
mov
call
cmovae
sub
cmpsb
fists
imul
jg
and
test
mov
mov
sti
mov
push
data16
xchg
adc
cltd
dec
sub
and
add
aas
push
loop
xor
lahf
dec
push
iret
pop
inc
inc
cmp
jmp
push
out
sbb
montmul
cmpsb
xchg
mov
push
add
dec
cwtl
push
movsb
mov
rcrb
sbb
loop
mov
stos
add
xchg
les
int3
ja
or
mov
jne
daa
call
push
rcll
popf
push
jb
mov
push
adc
and
jp
out
lret
ficoml
das
mov
movsb
mov
aaa
jae
setnp
inc
in
xchg
sbb
cmp
popa
xor
mov
dec
test
je
jg
lret
cltd
movl
outsl
xor
lret
mov
dec
sbb
pop
inc
loope
cld
clc
out
mov
sti
inc
call
inc
mov
mov
aas
push
dec
in
xchg
testb
stc
fistl
cmp
loop
pop
mov
inc
pushf
jmp
sbb
and
and
decl
cwtl
addr16
inc
pop
pop
or
add
shll
ljmp
mov
fisubrl
int3
mov
inc
pushf
fs
ret
mov
mov
outsl
int
mov
add
xchg
inc
mov
and
mov
mov
sbb
rclb
scas
jecxz
inc
repz
push
ljmp
shlb
fdivl
ds
in
or
clc
sbb
cmp
xor
cmpsl
loopne
xbegin
sahf
sbb
xchg
mov
add
aad
ret
aam
pop
mov
movsb
sahf
inc
inc
mov
mov
xchg
lock
into
sbb
xchg
cmp
adc
inc
or
dec
jmp
cmp
push
test
pop
idiv
ds
push
pop
jecxz
jecxz
inc
ja
loop
popa
jg
pop
mov
mov
ret
pop
mov
cld
js
lds
daa
xchg
jb
test
je
xchg
push
push
dec
pusha
inc
adc
rcrl
popa
inc
pop
cmp
pop
mov
mov
leave
insb
mov
mov
leave
sbbb
push
sti
pop
aas
movsl
pop
inc
test
pop
lods
sub
and
js
sbb
nop
iret
mov
jp
pop
dec
jle
ret
push
mov
sub
addr16
and
dec
rol
scas
sbb
inc
outsl
fisubs
mov
sti
cmp
push
test
jne
inc
mov
pop
xchg
sub
stos
outsl
mov
jo
push
popa
call
mov
cmpxchg
dec
lock
sub
int
add
xchg
push
lods
sub
push
mov
data16
pop
nop
dec
je
inc
jge
jae
stc
es
mov
mov
mov
pusha
js
xchg
xor
adc
adc
aam
mov
ja
sbb
push
adc
ds
test
mov
in
repnz
cli
movsb
std
xchg
fadd
push
imulb
add
inc
test
mov
mov
rcrl
in
sarl
out
xchg
cmpsl
sub
xchg
sub
mov
loop
jmp
stos
mov
test
inc
mov
fwait
stc
push
sub
mov
push
push
jmp
jge
and
cmpsl
mov
dec
push
mov
stos
mov
aaa
movswl
stc
jno
dec
xor
or
or
xchg
inc
lods
cmp
fs
and
cmp
jle
movl
cli
outsb
push
aam
xor
mov
arpl
inc
adcl
scas
mov
ret
lret
dec
mov
repz
call
testl
sti
movsl
jbe
adc
jecxz
rcrl
test
repnz
xlat
js
sub
leave
ret
sbb
mov
dec
sub
xlat
push
mov
sti
lods
dec
dec
or
jge
aad
sbb
outsb
cmc
shl
push
mov
mov
cmc
leave
ljmp
and
jo
jns
aam
mov
and
mov
addr16
fistpl
fisttps
bound
cmp
push
xchg
mov
pop
inc
pushf
adc
mov
stc
and
movl
dec
sub
pushf
inc
int3
roll
xchg
sarb
xchg
mov
inc
repnz
mov
iret
pop
xor
cmpsl
out
out
icebp
test
enter
mov
jecxz
xchg
or
pop
mov
dec
mov
fimuls
mov
xor
cltd
sbb
ret
mov
jne
inc
adc
aaa
jecxz
mov
cld
sbb
push
iret
mov
ja
shl
lds
sbb
xor
out
call
fidivrl
imul
cmc
mov
xchg
movsb
xchg
fnstsw
and
enter
adc
mov
mov
mov
mov
mov
mov
or
or
imul
mov
or
xor
jge
sub
ffree
inc
jle
fdivrl
mov
rclb
insl
jg
jl
mov
or
adcl
in
cmp
lods
xlat
jl
aas
fnstcw
shlb
fsubr
push
cmp
leave
int3
fdivrl
cltd
stos
mov
loopne
mov
aam
lret
mov
pop
jns
mov
mov
mov
mov
pop
mov
fistpll
mov
in
cmp
aas
mov
pop
leave
aam
jge
sub
cltd
rcrb
mov
ds
mov
mov
ss
test
mov
stos
mov
pop
jns
mov
fnsave
cmp
sarl
out
or
mov
pushf
fistpll
in
jp
xchg
lods
jne
cmpsl
lods
fsubp
icebp
add
in
cld
mov
in
cltd
jl
jnp
stos
sbb
test
jbe
test
lods
aas
jbe
lods
ficoml
mov
jecxz
mov
mov
jnp
mov
or
addl
ljmp
xor
jmp
jns
shl
mov
in
in
pop
mov
jecxz
jns
mov
mov
mov
test
in
in
ja
cmp
inc
jns
lahf
mov
repnz
mov
in
push
cmc
sbb
add
pop
sarb
mov
bnd
push
loope
ds
mov
push
je
and
dec
inc
pushl
mov
scas
loopne
mov
xchg
xor
test
inc
scas
pop
mov
push
sbb
xchg
pop
cmp
mov
jne
rol
add
nop
mov
jmp
shl
mov
mov
sub
out
cmp
dec
mov
pop
fwait
mov
mov
add
into
or
jnp
xorb
pop
popf
add
sar
shr
sbb
or
fisubl
jb
jae
add
call
xchg
adc
ret
xchg
mov
sbbl
test
add
jg
cmp
mov
push
in
cmp
inc
fisttps
mov
xchg
inc
pop
out
add
pop
mov
rorl
into
or
pop
jnp
mov
cmp
iret
add
movl
ret
loope
popa
mov
pop
js
fadd
sbb
call
pop
adc
mov
test
jg
mov
fucomp
out
mov
jb
stos
bound
or
sti
mov
inc
stos
sahf
mov
call
rclb
sbb
jge
and
cmp
outsb
notl
pop
movl
dec
mov
les
out
dec
aam
xor
mov
push
orl
push
imul
dec
movl
fdivrs
jmp
sbb
mov
movl
mov
pop
push
das
sahf
out
xor
mov
call
adc
pop
fcoml
push
jmp
ret
inc
inc
jo
gs
xor
push
sub
inc
testb
inc
dec
pop
fbld
jg
push
mov
pop
or
sub
pop
std
in
clc
jp
cmp
mov
sub
aaa
movsb
aas
mov
inc
jmp
cmpsl
mov
mov
mov
sub
cmp
sub
mov
addr16
mov
mov
daa
sbb
out
stos
fmull
xchg
nop
stos
cmp
sbb
movsb
mov
add
push
ret
stc
roll
leave
mov
push
push
loope
xlat
sub
or
or
jb
loop
lds
aad
cltd
cwtl
mov
mov
pop
gs
inc
mov
test
loopne
xadd
mov
xor
cmp
cs
je
mov
push
imul
push
lret
xchg
das
ret
mov
sahf
or
mov
push
mov
xadd
shrb
sarb
dec
mov
fistpll
inc
stc
or
mov
mov
push
fists
add
mov
sarb
adc
push
push
daa
aad
mov
xor
jne
sub
jno
jg
fadd
pop
mov
fidivs
rcr
cmp
int
loop
fbld
mov
or
lret
or
loope
rcl
rsm
fsubl
ret
cltd
outsb
stos
fnstenv
mov
xor
sub
push
jecxz
dec
jle
rcl
mov
je
stos
push
mov
loopne
mov
cmp
jl
mov
xchg
stc
hlt
add
test
rcrb
insb
mov
outsl
xchg
in
jnp
pusha
adc
rcr
mov
out
xchg
lahf
lods
sbb
mov
mov
dec
mov
ret
dec
jno
cmpsl
pop
mov
rorb
sub
out
mov
mov
test
mov
sarb
mov
cmp
lock
cmp
mov
cmp
xlat
mov
fldt
mov
iret
mov
or
pop
mov
dec
test
mov
jmp
cmp
sbb
adc
fidivrl
and
mov
cmpsb
fcomps
mov
add
mov
jl
adc
nop
popa
mov
sbb
push
ljmp
fcmovnb
ds
test
movsb
mov
sarb
pop
inc
jmp
decb
pop
add
mov
mov
jnp
cmp
loopne
push
cld
adc
imul
ds
outsl
ja
jo
jle
mov
and
dec
mov
scas
push
leave
jle
aad
mov
aas
leave
xor
stos
fsubp
or
xchg
pop
and
arpl
xlat
out
mov
fwait
sbb
fcmovb
and
inc
pusha
sbb
clc
sub
out
dec
out
aam
sbb
pop
iret
mov
lahf
shrb
insl
or
or
popa
and
xchg
out
pop
inc
loope
or
sub
xchg
jns
dec
cmp
arpl
xlat
sbb
cmpsl
leave
xlat
stos
jecxz
mov
sarl
fldenv
pop
dec
pop
repz
les
cli
rcl
scas
jbe
scas
jmp
jb
mov
js
loopne
add
xchg
pop
cmpb
push
leave
arpl
cs
subb
ljmp
lods
push
lahf
fldenv
mov
push
mov
out
mov
fisubrl
inc
cld
sbb
test
add
daa
mov
pop
subl
in
jl
sbb
daa
sub
insl
adc
and
mov
into
icebp
xchg
sub
leave
gs
les
lahf
nop
xchg
jnp
ja
gs
jb
addr16
aas
into
mov
ret
mov
cwtl
or
mov
fcmovbe
mov
xchg
xlat
pushl
je
dec
add
mov
ja
pop
mov
push
jmp
xor
or
test
dec
mov
iret
imul
mov
shrb
ret
pushf
subb
xchg
andl
mov
mov
dec
dec
cwtl
mov
int3
mov
aas
mov
stos
int3
stos
mov
lock
dec
dec
sti
lods
testb
lret
adcl
loopne
inc
push
jns
fiaddl
pop
in
cld
data16
mov
push
cltd
or
fists
mov
mov
pusha
ret
or
js
loopne
lret
mov
cmpb
or
nop
jns
xchg
xchg
xor
sub
test
and
sbb
aaa
mov
imul
adcl
mov
test
push
push
mov
jmp
mov
pushf
jle
and
add
fwait
int
mov
pop
mov
or
clc
dec
leave
leave
test
mov
and
xchg
hlt
cld
sub
pop
xchg
fcmovbe
js
push
pop
jbe
test
or
ljmp
lods
push
pusha
pop
insb
xchg
pop
or
daa
pop
fisubrl
fisttps
push
shr
jae
xor
xchg
stos
loopne
js
or
mov
push
push
insw
mov
js
or
mov
lret
fidivrl
mov
lret
mov
dec
mov
repz
movsb
sbb
mov
insl
imul
mov
fwait
aaa
incl
sub
pop
lahf
sub
ret
mov
mov
insl
adc
xor
mov
cmp
mov
mov
insb
and
mov
test
sub
adc
dec
mov
ja
stc
dec
mov
jne
push
push
jns
dec
xor
scas
dec
mov
dec
loop
addr16
mov
mov
push
loopne
mov
push
push
inc
icebp
xchg
popa
push
out
lret
xchg
pop
cwtl
stos
mov
lock
repz
push
add
sti
and
addl
data16
pusha
or
clc
repnz
ud1
jmp
mov
dec
mov
in
xor
repnz
adc
push
jo
pop
enter
push
lcall
lret
leave
sub
fxch
jnp
int
shrb
leave
mov
into
out
jp
xor
sbb
leave
mov
push
xchg
push
pop
clc
pop
push
mov
jns
pop
adc
out
cmpsl
push
lock
sbb
scas
imul
mov
dec
icebp
or
lock
mov
fiadds
mov
std
out
imulb
xchg
cmpsl
mov
and
je
lock
push
dec
lret
aas
mov
push
push
sbb
mov
fcmovu
mov
icebp
insl
scas
mov
mov
sarb
mov
mov
xchg
repnz
mov
stc
mov
jle
jae
jg
mov
into
je
imul
mov
dec
pop
adc
repnz
push
jmp
jo
mov
mov
in
add
pop
jle
adc
mov
imul
ds
mov
sub
mov
adc
inc
test
test
lods
test
sub
out
jcxz
mov
and
out
dec
mov
in
adc
cmp
pop
js
or
and
imul
push
sub
mov
sub
sbb
add
cltd
mov
jl
aas
mov
cmp
es
call
push
lock
in
xlat
mov
clc
push
mov
sub
xlat
outsb
pop
clc
arpl
adc
cs
imul
fcmovbe
and
test
and
fisubl
mov
add
adcb
mov
cltd
gs
loopne
lods
xchg
add
mov
pop
add
push
inc
xchg
mov
mov
inc
and
jge
add
xor
popf
dec
push
pop
adcl
pop
sti
fisttpll
jmp
lret
das
fwait
jb
xor
rorl
pop
lahf
xchg
data16
mov
xchg
or
and
pop
fildl
inc
cwtl
inc
mov
xor
sti
subl
push
mov
addr16
rol
repnz
nop
js
cltd
loopne
pop
out
sbb
pop
call
xchg
inc
or
jecxz
jno
cmp
jmp
add
push
into
and
insl
add
add
mov
xchg
sub
stc
pop
and
decl
lods
pop
fcomip
mov
adc
mov
test
xor
and
sbb
insl
push
aam
adc
shrb
int3
test
hlt
jecxz
sbb
sbb
movl
cmpsb
cmc
or
mov
or
into
inc
jl
dec
sar
nop
jbe
xchg
adc
scas
sbb
out
fwait
les
test
arpl
ss
fldcw
pushf
and
in
cmc
dec
mov
loopne
sbb
loope
cmp
pop
sub
mov
int3
dec
add
push
test
mov
movl
push
sub
addr16
mov
add
stos
movsl
ret
es
mov
mov
xor
nop
mov
jp
call
xchg
xchg
aas
jns
sbb
xchg
sbb
es
xlat
fs
shrb
dec
daa
ret
dec
mov
cmpb
std
add
clc
bswap
cwtl
mov
sub
mov
sub
imul
xor
sbb
mov
data16
inc
sub
movsl
adc
pop
mov
mov
rcrb
sbb
aam
jge
jns
lds
int3
push
test
mov
sarb
sar
cmp
cmp
je
sub
inc
xorl
out
movsb
testl
adc
cmp
call
and
xlat
dec
loopne
jp
adc
cmp
or
repz
mov
sbb
dec
gs
lds
or
inc
cli
jg
jae
cmp
or
sbb
sahf
push
cmovb
je
or
repz
push
mov
das
inc
lods
daa
push
stos
mov
or
xor
xlat
and
xor
jp
adcl
xchg
popl
cmc
imul
cmc
fisttpl
fs
push
mov
pop
xchg
cmp
sahf
insl
imul
stos
xchg
mov
psubusb
popa
and
cwtl
test
test
ja
ljmp
xor
fstl
xor
cwtl
adc
adc
push
lret
inc
je
test
pop
add
and
xchg
fidivrl
dec
inc
sbb
cli
std
inc
aam
xchg
inc
mov
scas
movl
cwtl
push
dec
xchg
push
clc
xchg
aaa
sub
mov
addr16
popf
in
cltd
cmp
add
sti
test
fstpt
mov
cmp
adc
mov
in
rcl
mov
push
sbb
jle
sahf
xchg
jnp
cld
mov
das
fmull
daa
in
aas
lret
pop
nop
jg
xchg
pop
cmp
push
mov
daa
add
adc
aas
imul
sub
mov
xchg
xor
jmp
push
pop
xchg
stc
xor
mov
arpl
cmp
mov
mov
mov
insl
out
loope
idivl
inc
dec
fcomps
push
sbb
fistpll
lods
jne
inc
sar
int
mov
inc
xor
or
mov
xlat
sbb
mov
xor
adc
cmpsb
stc
xchg
sub
rclb
fbld
sub
push
xchg
pushl
sti
xchg
shrl
fadds
and
call
xor
push
adc
adc
mov
test
fdivrl
aaa
fwait
cmp
lcall
lods
pop
xor
test
xor
outsl
stos
add
test
dec
mov
je
or
dec
add
lock
jg
sarb
sbb
fs
ficoml
rorb
in
cli
and
add
testl
dec
xor
mov
sbb
adc
fidivrl
sbb
imul
xchg
lret
sbb
mov
test
xor
incl
ficompl
xlat
push
ret
push
fcmovbe
mov
jecxz
fadds
mov
xchg
mov
in
adc
addr16
cmp
ret
xor
lock
mov
cmpsb
sbbl
ret
popl
fwait
cmp
dec
jae
cs
movb
stos
cmp
cmp
dec
daa
into
out
push
mov
add
mov
mov
fwait
push
out
mov
popa
dec
das
push
mov
iret
cmp
call
cltd
adc
mov
outsb
jns
push
push
sbb
mov
stos
mov
lock
out
sbb
push
mov
or
dec
mov
mov
call
test
movsl
cmc
scas
mov
test
ret
pop
mov
xchg
mov
xchg
mov
out
into
test
aaa
xchg
leave
cmp
dec
xor
sub
sbb
mov
cltd
dec
mov
push
in
int3
cmp
xchg
and
xchg
into
push
popa
add
xor
mov
jmp
lcall
loope
adc
mov
mov
js
out
cmp
dec
movsl
hlt
sahf
out
test
bound
jp
stos
adcb
cmp
add
xchg
cli
cmp
dec
sub
enter
and
push
stos
jb
mov
inc
movsl
mov
out
sbb
add
insb
incb
cmp
out
mov
shll
fisttpl
fidivrl
dec
pop
mov
xor
leave
std
adc
push
insl
test
cmp
clc
loope
jg
push
into
cmpsb
test
cmovne
cmp
repnz
xchg
xor
push
lret
push
popa
iret
mov
faddl
outsl
es
sbb
int3
jle
pop
dec
xor
mov
js
jo
mov
loope
aaa
jge
adc
aam
jb
movsl
or
aaa
fsub
pop
sti
cmpsb
ss
mov
mov
or
inc
xor
scas
jno
loope
mulb
test
rep
stc
subb
adc
or
inc
inc
sub
add
icebp
inc
ljmp
and
jo
decb
and
fcompl
mov
lods
pusha
pop
movl
in
mov
inc
jl
add
push
mov
fs
xor
popa
add
sub
adc
in
and
sbb
dec
inc
in
lds
push
rclb
ret
sub
into
js
push
mov
jno
aas
pop
sbb
lret
inc
inc
loope
jb
shlb
lods
mov
fisubrs
jl
lods
jle
sub
les
mov
or
and
sbb
jb
xchg
inc
cmc
aaa
ljmp
cwtl
inc
or
jg
dec
xchg
sub
in
mov
adc
or
pop
or
sti
sbb
int
mov
push
int3
jl
add
add
shlb
cs
and
mov
mov
lret
in
aas
cmp
aaa
push
ljmp
movl
adc
in
mov
outsb
cmp
or
cmp
jmp
xor
jmp
dec
add
and
or
lods
xchg
int
aad
ljmp
pop
and
jb
popa
dec
xor
pop
scas
or
cwtl
xchg
sbb
sahf
xchg
bnd
xor
inc
pushl
pushf
jmp
mov
inc
xchg
insl
mov
mov
out
clc
ja
jle
popf
pop
sbb
testb
in
mov
repnz
xor
daa
insl
divb
mov
mov
inc
incb
sti
mov
mov
lcall
sub
sub
pop
jb
repz
and
sbb
fistl
repnz
sub
inc
orb
adc
cmp
mov
rol
lret
xchg
jae
inc
call
and
test
test
cltd
lcall
fs
test
mov
call
ds
mov
lods
les
dec
sub
pop
xchg
lret
adc
mov
and
das
imul
push
pop
xor
xchg
and
movsl
xor
dec
sub
mov
vmwrite
sbb
xchg
xor
lods
mov
mov
xorb
sub
mov
xchg
jb
popa
lds
cs
inc
addr16
lcall
jbe
inc
testb
test
pop
shl
sbb
int
push
setge
loop
pop
inc
adcb
xchg
mov
and
movsb
shrb
cmp
test
orl
inc
in
gs
in
or
mov
hlt
fld
dec
xchg
adc
or
cmpsl
nop
cmp
cmp
sub
sub
scas
daa
out
loope
xchg
mov
mov
mov
fwait
lahf
adcb
mov
jmp
popa
fcom
js
sbb
pop
cltd
xchg
or
rcrb
sbb
adc
int
pop
ret
nop
pop
mov
pop
push
jmp
sbb
popf
out
dec
fs
and
mov
nop
fxch
push
cmp
roll
popf
les
pop
mov
add
inc
out
sbb
mov
mov
loope
loopne
pop
inc
test
adc
xchg
in
cwtl
dec
xchg
mov
mov
xor
xor
jnp
mov
push
pushf
sbb
in
lahf
jmp
ffree
or
shll
das
xor
stos
sbb
inc
addb
xor
sub
dec
es
insb
add
adc
lret
loope
movl
add
mov
jge
lods
icebp
aam
imul
decl
xor
and
jmp
pop
popl
test
xchg
mov
or
push
clc
sub
sbb
pushf
mov
test
mov
push
sub
xchg
lods
pop
or
lds
pusha
pop
or
push
mov
sbb
pushf
jbe
xor
lret
call
incb
cwtl
mov
xchg
mov
jle
jecxz
dec
movsb
hlt
xchg
call
lds
popa
mov
mov
mov
inc
jmp
or
push
xchg
aaa
mov
movsb
out
cmp
and
out
addr16
add
jae
mov
xor
dec
fildl
dec
test
fcmovb
xor
movsb
lahf
and
mov
xchg
xor
adc
push
addr16
scas
add
iret
ds
add
xor
outsb
sbb
imul
jge
mov
adc
in
test
scas
lret
pop
out
popa
or
mov
mov
std
mov
push
cltd
pop
jae
add
xlat
add
mov
test
push
push
clc
cmp
loope
xor
sahf
mov
inc
xchg
fwait
adc
jnp
xchg
pop
negl
cld
fldt
fisubrl
inc
cmp
ret
shrb
cs
pop
sbbb
scas
out
stos
mov
mov
jns
js
sbb
jmp
push
jnp
addb
inc
test
push
ficoms
cwtl
test
jge
movsl
inc
cmpsb
and
mov
sti
out
sti
sbb
lret
roll
pop
cltd
sbb
test
sbb
call
mov
shlb
push
mov
mov
jne
add
loopne
jo
into
test
and
push
loopne
test
push
push
sub
dec
push
fwait
xor
jnp
cmp
xchg
sub
adcl
xchg
xor
lret
aam
push
pop
lods
push
adc
in
jmp
inc
inc
push
js
into
push
icebp
mov
mov
mov
xchg
fwait
xchg
daa
movsl
cmpsb
clc
xchg
movl
scas
sbb
jnp
push
pop
pop
xor
mov
and
inc
mov
in
jne
xor
push
call
rorl
sbb
sub
and
adc
or
dec
inc
loopne
or
sub
aam
lods
sarb
stc
and
incl
push
mov
clc
in
icebp
pushl
pop
ss
and
cmp
lods
or
xchg
jl
pusha
int3
mov
mov
aam
daa
sbb
movl
add
jbe
stos
xor
or
out
sti
mov
add
data16
mov
movsl
daa
pop
jge
jmp
jbe
rol
or
pop
lods
push
cmp
test
mov
lahf
int3
je
adcb
mov
fdivrl
nop
scas
mov
es
add
dec
ljmp
stc
xor
test
cmp
rorb
cwtl
mov
pop
insl
mov
mov
adc
bound
adc
outsb
mov
mov
push
xchg
ljmp
adc
xchg
jmp
jl
cwtl
in
inc
js
stc
call
jb
push
xchg
add
nop
mov
xchg
ljmp
pusha
sahf
or
je
out
sbb
mov
mov
and
pop
inc
pop
gs
es
gs
adc
insl
add
hlt
inc
lahf
xchg
stos
sbb
sahf
push
cmp
push
mov
mov
add
sub
push
add
movl
mov
into
push
mov
push
leave
int
pusha
mov
loope
fpatan
rcll
and
inc
fwait
cs
mov
sbb
cmova
pop
add
add
lods
sbb
int
stc
mov
loope
subb
sti
in
lods
fcoml
test
jp
cli
fiadds
ljmp
jb
ret
pop
stc
sti
sub
hlt
cld
push
sarb
pop
pop
xor
pop
adc
movl
lock
mov
push
fcoml
jmp
in
test
fildl
pop
std
adc
push
movl
in
jecxz
push
add
loope
out
jo
mov
push
push
aas
notb
andl
sub
mov
mov
dec
mov
sub
into
sbb
mov
pop
mov
mov
cmpsl
lret
in
and
pop
mov
dec
dec
iret
sub
xor
or
ret
dec
repnz
out
mov
pop
testb
pop
jl
push
push
push
leave
shr
mov
dec
ja
sbb
push
mov
inc
lods
imul
mov
repz
rorb
sub
and
jno
sar
mov
movsl
ficomps
mov
pop
add
jmp
push
insl
fsub
rcr
dec
inc
add
cltd
sub
dec
jb
mov
subl
cmc
repnz
xchg
or
test
xor
pop
cmp
pop
dec
mov
push
jl
into
sub
pop
jmp
inc
xor
subl
test
and
mov
pop
popa
mov
decl
imul
cmpl
cmp
test
mov
sbb
pop
cmp
jno
ficomps
outsb
mov
jne
jae
test
or
nopl
pop
xchg
std
inc
rcrl
stc
in
mov
ja
and
and
cwtl
mov
mov
shlb
aas
adc
push
sbb
or
movl
aaa
cltd
xor
cmp
lea
xchg
arpl
cmpl
sbb
lods
mov
sarl
adc
jle
jnp
mov
push
call
jmp
mov
aas
fcompl
in
ret
mov
out
cmpsb
xchg
rorb
pop
cmpb
leave
jl
push
inc
lret
lock
cltd
adc
xchg
mov
insl
rcl
sti
sbb
loopne
out
test
mov
std
stos
loope
cmp
aam
mov
add
insb
int
pop
mov
fsubs
dec
repnz
add
outsl
pop
sub
mov
fsubs
insb
sbb
pop
rorl
xor
fwait
push
push
popa
xor
sarl
cmc
ds
mov
adc
mov
mov
inc
fisttpll
xorl
lcall
pop
push
mov
sbb
xchg
xor
jns
jnp
sti
sub
movsl
mov
sbb
xchg
sub
hlt
push
mov
adc
mov
xchg
cmp
cmp
pop
xor
pop
js
fisttpl
lea
xchg
movsb
mull
aas
and
out
inc
cld
and
fdivrl
push
icebp
stos
pusha
inc
daa
mov
sarb
pop
mov
not
push
push
out
idivl
inc
or
cmpsb
jb
xchg
fstpt
je
mov
mov
mov
or
pop
and
test
out
dec
mov
dec
ljmp
jbe
dec
pop
mov
dec
xchg
imul
repnz
stos
xor
out
push
fldt
int
fiadds
sbb
inc
idivl
mov
xchg
xlat
out
adc
mov
mov
adc
nop
das
lret
push
fdiv
cmp
ror
jae
out
push
inc
mov
imull
mov
mov
xlat
mov
outsl
fsubrl
aaa
xor
test
mov
call
daa
dec
cmp
arpl
je
cmc
adc
mov
ss
cs
xchg
mov
push
stc
mov
int3
jg
fxch
sub
inc
pop
mov
sbb
push
mov
adc
or
mov
dec
or
adc
int
scas
ss
jecxz
je
pop
outsl
es
leave
pop
les
repz
or
dec
and
lock
ret
in
cwtl
sbb
adc
inc
sbb
inc
jmp
xor
mov
jmp
lock
pop
sub
add
dec
shll
and
ds
cld
jno
sti
mov
mov
mov
adc
mull
jge
loop
sbb
pop
adc
mov
xor
fidivrl
lret
or
adc
popa
adc
lods
ja
add
stos
pop
adc
mov
subl
dec
and
xchg
loope
lock
xchg
fcomps
inc
cmp
ja
cld
mov
fsubl
sti
addl
sub
stos
sbb
or
cmp
movl
jmp
fmuls
ljmp
cmp
mov
mov
roll
sub
inc
scas
xor
js
push
dec
ret
gs
cltd
aad
arpl
cld
mov
mov
mov
xchg
xor
and
popa
out
scas
orl
sub
adc
out
in
jno
loope
push
ss
push
adc
popl
call
add
in
mov
xchg
sbb
pop
je
cmpsl
stos
rclb
mov
daa
stc
jg
dec
addr16
cmp
movsb
orb
dec
jecxz
xchg
or
test
ds
xchg
sbb
mov
sub
add
fstl
insl
and
mul
xor
fs
sbb
inc
mov
shlb
pushf
or
ja
mov
pop
fiadds
mov
mov
add
je
shll
pop
sbb
mov
aam
adc
dec
lahf
lods
or
inc
or
dec
and
push
jb
sbb
loope
pop
push
jl
test
cmp
inc
testb
daa
cmp
dec
xor
mov
stos
ss
xchg
mov
addr16
adc
dec
xchg
xor
mov
or
or
add
inc
add
ljmp
int3
adc
mov
and
jne
fwait
rcll
shrl
cmp
inc
push
nop
std
or
dec
test
push
and
mov
adc
bnd
outsb
jp
push
shr
test
jecxz
stos
gs
mov
jb
aas
push
and
loop
mov
inc
outsb
or
pop
pop
pop
enter
pop
dec
mov
xchg
inc
push
xorl
mov
orb
scas
out
js
sbb
add
push
push
push
int
in
scas
movb
xchg
in
pop
adc
loop
ljmp
push
call
push
push
sub
popa
scas
les
mov
cli
pop
push
jecxz
pop
movmskps
les
mov
cmc
jne
or
sub
aad
xchg
sbbb
outsl
push
sub
or
mov
inc
ja
dec
clc
es
ja,pt
mov
cmp
mov
dec
ljmp
jmp
je
and
pop
jmp
xchg
push
add
dec
xchg
pop
mov
rol
pusha
xlat
push
mov
cld
insb
in
add
aaa
adc
dec
inc
sarl
jg
fdivr
mov
cmp
inc
fs
insb
mov
jl
movsb
in
and
pop
dec
lea
jg
fimull
aad
jbe
inc
rcrb
and
xchg
cmovle
mov
cmpsl
or
xchg
dec
dec
in
ljmp
jnp
inc
and
jb
test
inc
clc
stos
push
aas
dec
and
lea
in
add
gs
dec
sub
push
pop
rorb
xor
cmp
mov
xchg
call
int
cli
das
testl
cld
shll
jmp
movl
mov
mov
test
pop
push
loope
pusha
fstpt
pop
jle
outsl
mov
push
xor
jae
movsb
sti
je
movnti
scas
scas
les
push
stc
sahf
xlat
and
leave
fdivl
shlb
xor
xchg
shl
mov
faddl
sbb
int3
sub
es
pop
test
mov
and
ret
into
xchg
jnp
cmp
subb
pop
push
test
jo
xor
lods
mov
jg
loope
inc
ljmp
test
jne
ficompl
fcmovnb
stos
xor
sbb
aam
jmp
add
sahf
test
sub
cwtl
push
inc
lods
cs
into
mov
test
fstpt
pop
cld
xchg
cmpsb
jle
cltd
shl
mov
out
xchg
loope
jne
mov
lahf
loopne
test
or
push
clc
sub
loope
dec
ljmp
jnp
jmp
adc
test
movb
push
int
mov
dec
je
jae
fdivl
adc
stos
push
lcall
movsb
adc
mov
mov
shrd
fidivrs
sub
ret
outsl
adcl
ja
stos
pop
jnp
mov
stos
sarl
mov
mov
in
mov
jl
fidivrs
stos
pusha
cmpb
aaa
pushf
mov
je
adc
jecxz
cmp
sub
mov
cmp
in
dec
mov
inc
mov
sub
push
sbb
inc
jnp
addr16
scas
scas
fisttps
sub
insl
xchg
cwtl
dec
daa
cld
adc
test
int
int
mov
cmp
rcll
mov
outsb
jge
lods
inc
cs
mov
xchg
ret
hlt
sub
xor
cld
lods
xlat
adc
or
mov
mov
test
adc
cs
sbb
loop
mov
out
sub
or
cmp
jmp
addl
mov
or
sbb
fnstsw
fildll
enter
sub
add
iret
shlb
test
icebp
shrl
mov
xchg
stc
in
rolb
enter
mov
mov
push
add
mov
push
stc
push
cmp
xlat
push
adc
sub
mov
movsb
push
adc
mov
fidivrl
mov
stos
jge
cmc
call
sbb
mov
inc
cmpsl
fwait
jecxz
fdivl
mov
push
mov
inc
add
cmp
cwtl
adc
divl
movsb
sbb
iret
imul
cmp
loope
push
fistpl
mov
adc
aas
mov
dec
add
mov
psadbw
push
out
and
je
iret
mov
or
iret
mov
dec
add
in
dec
or
clc
xor
fildll
addr16
in
or
stos
mov
loope
rcrb
andl
pop
xchg
push
aaa
inc
lods
or
add
or
add
test
and
stos
mov
pop
mov
ljmp
mov
jb
inc
sahf
movsb
stos
mov
lods
xchg
enter
lods
test
xor
pop
test
mov
loopne
jl
icebp
fcmovnbe
push
inc
aam
fidivl
or
insl
sbb
sbb
lock
out
movsl
in
dec
push
outsl
mov
fsts
lea
ret
test
test
ja
iret
add
sbb
push
lret
xchg
aas
xlat
lods
js
or
mov
scas
ret
inc
cmp
sarb
add
or
fidivrl
call
sub
jecxz
fidivrl
pop
rcrb
aaa
mov
rclb
dec
push
fsubl
adc
stc
orl
mov
mov
push
xchg
xlat
sbb
push
mov
ds
push
aaa
mov
mov
jl
fidivl
sbb
pop
js
xor
subl
in
rolb
popa
pop
lods
imul
mov
jle
stos
rcrb
stc
imul
mov
mov
xchg
cmp
mov
mov
mov
push
dec
fcoms
jns
aas
mov
mov
jbe
mov
add
xchg
jae
inc
xchg
outsb
arpl
pop
add
add
cmp
inc
sti
stos
push
pop
mov
mov
sub
aas
mov
jno
or
imul
mov
ret
mov
sti
mov
cmp
jg
mov
add
adc
sub
testl
add
movsl
add
or
add
test
loopne
shrl
idivl
dec
cli
decl
mov
out
add
dec
test
aas
mov
ss
mov
push
movsl
cld
adc
ret
add
mov
or
sti
test
pop
inc
mov
arpl
pushf
ljmp
ficompl
dec
cmc
add
push
push
and
add
push
jmp
push
in
push
stos
dec
jne
shl
js
clc
adc
daa
mov
and
cltd
fwait
jne
out
js
add
sbb
pop
add
negl
mull
xchg
out
js
and
mov
jl
fisubl
movl
shl
cld
mov
out
xlat
sbb
add
les
jmp
mov
add
cmp
loope
push
xchg
xor
cmpsl
movsb
jnp
inc
fcmovbe
mov
popa
outsb
movl
mov
push
repnz
mov
lea
outsb
aas
out
out
xlat
mov
imul
cmpsl
shrl
sub
pop
mov
mov
pop
mov
insl
movsl
mov
stos
jecxz
jg
mov
push
fdivp
add
mov
add
mov
scas
nop
sbb
dec
fisttpl
mov
lods
divb
jecxz
test
jmp
cwtl
jl
fisubl
inc
mov
xchg
cmp
mov
cmp
push
cltd
mov
inc
popf
dec
fistps
stos
out
or
jp
lock
stos
inc
and
add
cmp
cltd
rcll
lods
cltd
or
stos
rol
xchg
je
lds
nop
repz
decl
shlb
stc
out
adc
mov
dec
out
sbb
lods
stos
das
mov
jne
mov
cmpsb
mov
int3
mov
mov
lods
test
int3
adc
xchg
outsl
outsb
test
pop
jno
sbb
mov
test
inc
mov
movl
insb
outsb
mov
pop
out
call
pop
in
or
add
adc
xor
and
in
lret
xchg
in
imul
mov
fsubrs
mov
or
dec
das
movsl
out
xor
ljmp
shll
jbe
mov
arpl
jb
inc
cwtl
pop
pop
mov
push
bound
mov
pop
into
jmp
or
adc
dec
mov
cmpsb
outsl
and
mov
ja
add
xor
in
and
mov
out
fisttpl
adc
sub
mov
in
jecxz
cli
dec
inc
push
pop
jo
push
and
dec
push
mov
pop
sub
ficompl
movsl
mov
mov
lcall
loop
dec
jo
inc
sub
dec
sbb
mov
or
pop
xchg
popl
popa
sbb
push
push
repnz
cmp
inc
mov
in
pop
or
add
bound
fdivs
dec
xor
push
push
pop
cmpsb
subb
stos
mov
sub
cmp
mov
sahf
push
test
mov
xor
in
orb
add
xor
or
mov
popf
sbb
pushf
xor
int
sbb
sahf
pop
cmp
pop
jb
loop
ljmp
cmp
idivl
mov
fistps
call
adc
leave
push
fisttpl
mov
mov
mov
aaa
test
out
pop
outsb
ficoms
jmp
cmpsl
movsb
pop
xor
xchg
mov
sbb
in
aad
mov
xchg
sbb
das
mov
jl
jl
lcall
repz
add
cli
push
cld
hlt
dec
rolb
sbbb
jbe
mov
add
sub
repz
mov
jl
mov
mov
push
adc
fdivl
in
mov
test
out
ret
arpl
mov
cltd
ret
es
test
outsl
mov
shl
jmp
out
add
push
lahf
jp
mov
sbb
iret
sbb
mov
sub
or
mov
out
dec
roll
stos
cmp
call
add
call
dec
adc
fbld
fnsave
ret
int3
adc
jne
aam
mov
sub
mov
xchg
lcall
stos
scas
mov
mov
lock
sub
jg
sub
lret
mov
jle
fnstenv
jae
pushf
xchg
xor
sbb
js
pop
xor
je
dec
fisubrs
inc
stos
ljmp
xor
insl
jmp
daa
sub
loopne
test
jg
sbb
fldt
clc
add
cmp
test
push
sahf
std
les
sbb
jae
pop
xchg
outsb
sti
jmp
mov
lds
sbb
or
repnz
mov
xlat
jns
sbb
test
sbb
arpl
mov
cmp
pushf
pop
fadds
in
outsb
push
mov
xlat
mov
stos
mov
pop
mov
fs
push
pop
in
push
lret
mov
rcrl
hlt
inc
mov
inc
pop
add
int3
inc
cmp
lock
in
scas
lret
ds
push
imul
cmpsl
lock
mov
rorl
jnp
xchg
xlat
mov
iret
inc
cwtl
imul
mov
lret
lahf
in
out
fdivl
ljmp
test
jae
mov
icebp
out
lret
imul
out
mov
aad
mov
mov
xor
inc
mov
jl
or
lcall
mov
movsb
fwait
and
mov
ja
xchg
jnp
inc
dec
mov
test
lahf
dec
mov
jmp
mov
sar
sbb
test
pusha
bound
int3
lret
jecxz
scas
or
or
imul
test
pop
and
movsl
fsubrl
fisttpl
cmp
cwtl
mov
push
mov
aam
or
imul
inc
ljmp
push
loopne
add
into
je
dec
jmp
adc
dec
lock
hlt
mov
sarb
test
xchg
aaa
pop
cli
sahf
popa
mov
filds
repnz
push
rcrb
cmc
mov
mov
insl
bndldx
xchg
lods
gs
js
lock
jge
mov
popa
mov
lds
adc
loope
mov
bound
leave
ds
lock
aas
into
dec
pusha
out
push
jnp
xchg
inc
orb
xchg
fcom
dec
sub
test
or
inc
out
push
fcompl
out
add
mov
movl
es
add
lock
inc
inc
shl
lret
mov
enter
cmp
xchg
call
ret
loop
setl
mov
test
imul
cld
push
sahf
dec
inc
jecxz
push
mov
nop
add
cld
push
xor
jae
imul
sbb
xchg
pop
adc
aam
jne
insl
push
rol
cmpsb
push
hlt
xlat
dec
xchg
sub
cmp
movq
push
mov
insb
call
arpl
and
cwtl
jecxz
xor
lcall
mov
int
jp
pop
and
or
mov
fisubl
sub
xchg
sahf
aas
or
xchg
sahf
scas
outsl
sbb
fistpl
movd
mov
jae
out
fcomps
sbb
aad
je
repnz
sbb
popa
push
adc
lret
dec
pop
fisubrl
jnp
mov
idivl
pusha
sbb
xchg
mov
and
inc
aam
adc
adc
mov
lods
jl
sbb
dec
movsb
imul
std
aas
inc
cmp
cmp
out
cmc
xchg
pop
mov
or
daa
push
imul
mov
fs
in
aad
lock
call
sbb
je
pop
mov
jne
lret
out
fucomi
push
insb
iret
ja
inc
dec
add
xchg
pop
xchg
xchg
cmp
and
iret
clc
test
test
ret
sahf
add
sbb
push
xorb
fwait
cmpsl
mov
cwtl
leave
and
sub
add
pop
mulb
movsl
mov
cmova
cmpsb
movsb
and
mov
cmc
cmp
stos
lcall
shll
mov
out
jl
mov
lcall
cmp
xor
xchg
push
mov
mov
insl
push
pop
pop
cmpl
in
in
cmp
iret
mov
and
ja
cltd
outsl
inc
arpl
dec
pop
mov
or
adc
push
jmp
sub
mov
insl
push
sub
add
xor
pop
jnp
or
adc
lret
mov
jp
pop
imul
pop
mov
mov
adc
mov
pop
and
push
jmp
les
test
inc
bound
out
dec
add
dec
push
int
nop
cmp
fldcw
inc
mov
xchg
mov
leave
or
and
hlt
sbb
lcall
fcmovb
add
xchg
mov
cmp
sbb
mov
xchg
imul
sti
cmpsl
dec
int
xor
stos
loope
sbb
mov
fcmovnbe
adc
lahf
xchg
inc
dec
jbe
stc
or
lea
jp
cli
test
insl
dec
dec
push
xor
cwtl
sbb
adc
nop
cmpsl
in
or
ret
scas
pop
add
aad
jl
pop
xchg
lods
add
push
pop
shl
pop
inc
xchg
mov
insl
cld
jbe
add
imul
sahf
dec
push
add
add
std
and
out
lcall
cmp
aad
ljmp
push
es
push
out
movl
lock
popa
mov
mov
aaa
fdivrp
xchg
adc
push
jae
sbb
xor
mov
cmp
inc
lds
movsl
mov
sbb
or
push
inc
xor
jle
out
mov
xchg
push
adc
loop
jmp
dec
sub
sub
scas
cmpsl
rcr
cmpsl
add
cwtl
push
push
jmp
mov
sar
mov
sbb
dec
fwait
and
cmp
pop
shld
jle
in
out
dec
pop
dec
xor
arpl
lods
fldenv
mov
ret
inc
or
dec
pop
inc
add
dec
stc
addb
push
xor
mov
pusha
push
xchg
dec
sub
fs
fldt
ljmp
xor
sbb
mov
and
add
push
movl
in
ds
jns
sub
sbb
xchg
mov
movsb
pop
cmp
pushf
into
sbb
aas
pop
dec
push
pusha
xor
rorb
push
call
inc
xchg
aam
or
or
dec
add
dec
push
fs
inc
inc
les
jp
xchg
pop
test
test
jne
pop
dec
pop
out
mov
in
pop
inc
cld
aam
add
jg
push
inc
mov
or
nop
outsl
push
sub
sbb
faddl
push
cltd
dec
movsb
pusha
mov
jmp
ffree
add
sub
pop
or
cld
adc
cwtl
stc
les
add
dec
pop
mov
cmpsb
add
in
daa
mov
testb
jb
or
sti
cmp
pushf
mov
test
popa
aad
sbb
sti
inc
je
cld
insb
and
lods
mov
loopne
loope
aas
mov
addr16
cmp
push
in
addr16
call
jns
cmpsb
xchg
subl
pop
cld
fwait
and
add
cwtl
pusha
mov
fcmovb
jo
add
jle
in
sub
sarb
daa
pop
inc
add
in
add
mov
adc
es
add
daa
adc
and
push
movsl
cmpsb
test
jecxz
int3
jbe
out
sub
push
std
loopne
dec
pop
jp
nop
aas
movl
aad
push
adc
out
xor
fimuls
push
jbe
outsb
lock
fnstcw
jge
in
loopne
xchg
xchg
movsb
jg
dec
add
fcmovnb
mov
and
imul
lock
sarl
lret
mov
mov
mov
mov
sub
imul
lcall
leave
aas
push
repz
mov
add
or
jg
dec
scas
ljmp
call
dec
dec
push
dec
push
mov
dec
ss
push
pushf
mov
lcall
lods
or
sub
xor
in
push
ds
jg
sbb
out
and
rcl
push
xchg
adc
inc
jbe
push
pusha
dec
movsb
fistpl
loope
fsubl
mov
in
xchg
out
push
jno
lahf
movsl
call
es
test
or
scas
sub
jl
push
cmp
jecxz
jg
mov
hlt
lea
pop
push
ljmp
xchg
fistps
repnz
sbb
scas
xor
subl
lods
int
and
jmp
adc
mov
lods
into
gs
mov
cltd
jno
fcmovne
jnp
mov
fcompl
cmp
ret
out
ljmp
dec
test
loop
jp
xchg
add
and
xchg
pop
lock
sbb
rdmsr
lret
push
lahf
mov
imul
rcr
mov
sub
mov
mov
sbb
or
jns
sbb
jo
push
mov
jecxz
stos
daa
xor
mov
and
neg
inc
loopne
stos
je
xchg
fs
adc
push
or
cli
mov
test
test
addr16
nop
adc
sbbb
push
in
inc
and
dec
loopne
out
or
pop
sbb
push
pop
out
push
jge
push
pop
jb
mov
pop
ds
ficoms
mov
fcmovne
jnp
mov
pop
stos
jge
sub
cmp
pushf
cwtl
in
push
xor
fsubrs
das
mov
je
stc
mov
fstl
call
cli
adc
rolb
mov
int3
xchg
aad
adc
sti
push
pop
fst
divl
cmc
lds
dec
repz
xlat
shl
mov
lock
xchg
cmc
lock
pop
mov
loop
rorl
mov
mov
daa
in
je
adc
sub
clc
stc
inc
xor
and
cmpsl
ljmp
imul
aad
stos
in
pop
sbb
aas
mov
fwait
pop
iret
cmp
cld
pop
int
jne
aam
pusha
xor
cmp
add
mov
aam
push
pop
mov
sarb
cmp
pushf
cmpsl
cmc
sbb
pop
cmp
shlb
sahf
pop
or
js
les
popf
mov
cs
ffree
jns
loopne
arpl
enter
mov
xor
fs
mov
mov
jge
fucom
popa
cmpsb
scas
mov
arpl
inc
bound
or
fisubrl
lods
or
jo
lret
jo
shll
cltd
lcall
mov
in
aad
mov
jno
jp
dec
pop
cmc
sbb
lret
ror
mov
mov
inc
aas
stos
mov
ss
add
xchg
mov
stos
mov
aad
xor
in
add
mov
repnz
sub
jns
jnp
push
sbb
push
push
or
mov
cmp
mov
shlb
inc
lock
daa
jmp
je
mov
in
lret
jno
inc
add
cltd
xor
xchg
outsb
xchg
sub
xor
or
sub
add
cld
xor
sub
ret
mov
fsubrp
rcrb
outsb
cmp
jle
push
in
aad
scas
addr16
cmp
aaa
cmp
es
fnstcw
cmp
sahf
xor
inc
inc
push
sbb
inc
or
cmpsb
nop
js
dec
xor
loope
and
sbb
dec
ror
fimuls
adc
sub
mov
icebp
lea
mov
sub
jbe
shrl
jp
xchg
in
mov
dec
stc
stos
inc
pop
and
sysenter
pop
xchg
jo
loop
mov
test
mov
fsubrs
mov
aam
mov
xchg
dec
das
js
adc
jg
mov
popl
xchg
pop
mov
in
push
movsb
cmp
je
xor
shlb
loope
inc
cs
test
popf
xchg
or
dec
clc
stc
push
pop
pop
cmp
movl
xchg
push
jp
jb
xchg
add
decb
push
dec
leave
lret
lahf
daa
int3
pop
in
jnp
mov
rorb
daa
fisttpll
fsubrl
cmp
movsl
jecxz
je
cltd
xor
adc
outsl
push
push
fldt
jmp
sub
sbb
add
mov
leave
sti
push
aad
cmp
bound
lds
mov
add
mov
cmpsb
movl
popf
movl
xchg
mov
pop
popa
rorb
gs
jo
cmp
lods
mov
ficoml
jmp
pop
push
push
rol
or
popa
gs
sub
cmpsb
cmovne
cwtl
lcall
fnsave
adc
data16
and
aas
testb
mov
fildl
int
outsb
and
dec
movl
push
sbb
push
out
aad
mov
adcb
xor
mov
or
xlat
fmull
mov
pop
adc
cmp
mov
push
cwtl
daa
pop
inc
add
mov
shll
dec
dec
mov
jge
cmc
mov
add
inc
loop
aad
cltd
ds
or
sub
popa
pop
pusha
pop
xchg
cli
pop
and
mov
xchg
xor
mov
out
punpcklbw
jg
stc
in
add
movsl
fwait
lea
nop
mov
inc
xor
ds
cmp
jmp
cwtl
mov
jecxz
movsb
xchg
mov
pop
pop
add
fwait
cmp
test
fs
ficoms
pop
adc
xor
mov
iret
lcall
mov
sbb
fisttps
clc
ss
cmovbe
adc
in
dec
aam
pop
fimuls
ja
movsb
xchg
mov
mov
cwtl
roll
les
dec
or
outsl
adc
mov
sar
mov
movsl
lahf
add
pop
add
cld
mov
add
movl
sub
cli
movsb
mov
xor
mov
fs
scas
ret
into
daa
mov
sbb
js
addl
pop
lret
jmp
dec
jns
or
movsl
mov
aam
and
minps
cmpsl
pop
add
or
rorb
mov
adc
shlb
dec
ljmp
pop
and
cltd
cmp
sbb
xchg
mov
jno
mov
mov
test
push
xlat
dec
adc
pop
pop
in
lods
ret
mov
out
or
jae
cltd
jle
sub
gs
mov
sbb
repz
or
or
cmp
stos
adc
cmp
xchg
gs
or
or
mov
stos
mov
dec
and
sub
or
hlt
or
pop
in
xchg
mov
cmpsl
pop
repz
mov
or
mov
sub
ret
rol
xchg
unpcklps
sarb
push
jecxz
aam
sarb
daa
adcl
jo
ror
adc
pop
push
sub
insl
inc
xchg
pop
sbb
inc
loope
aad
fs
lock
cs
pop
ret
orl
cwtl
push
outsb
inc
ss
pop
add
cmpsb
faddl
imul
inc
lea
push
pop
jnp
xchg
cmp
aas
adc
pop
pop
pop
js
xor
sbb
fldt
mov
mov
xchg
call
cltd
sbb
sub
and
push
aam
xchg
lds
cmp
es
mulb
lcall
or
dec
lcall
cmp
es
mov
jl
cmpsb
cli
mov
add
out
jle
mov
cmp
sbb
dec
stos
cmp
inc
jnp
mov
adc
mov
popf
or
lock
fsubrs
pop
adc
lret
mov
dec
pop
fisttpll
mov
popf
push
scas
push
je
or
hlt
arpl
sub
stos
pop
call
mov
sti
cwtl
cmp
inc
out
pop
in
pop
sbb
sbb
push
loope
iret
je
decl
std
fisubs
rolb
fwait
clc
leave
xchg
jae
dec
stc
mov
pushf
imul
scas
repz
movsb
mov
loop
int
mov
shlb
mov
mov
cwtl
pop
loope
mov
jmp
stc
lret
or
mov
lods
rorb
popl
mov
outsl
adc
loope
inc
aas
leave
cltd
dec
sbb
dec
adc
dec
cmp
mov
pop
inc
push
mov
pop
aaa
cld
iret
or
leave
xor
in
test
pop
clc
or
sub
adc
jne
in
dec
sub
or
push
jmp
jge
inc
mull
xor
inc
jg
jle
arpl
mov
inc
xor
fildll
jns
clc
cld
jecxz
dec
sti
jge
dec
or
jle
pop
mov
or
jns
jb
in
aaa
jo
add
jge
fcomip
pop
cld
lret
hlt
dec
das
push
div
out
daa
int
adc
jo
lahf
push
inc
sahf
mov
push
dec
mov
jg
in
sub
les
mov
mov
xor
les
mov
stos
in
push
fidivl
dec
mov
lret
and
jge
xchg
push
xor
pop
mov
int
mov
ds
aad
pop
je
inc
insl
dec
cwtl
in
lock
mov
shl
inc
cmp
aam
push
stos
fcompl
dec
push
in
pop
faddl
rclb
pusha
xchg
pop
add
sti
jae
in
mov
add
frstor
hlt
sbb
push
push
in
icebp
mov
adc
rcll
fcoms
dec
cmp
lcall
test
xchg
mov
orl
ss
fisubrl
or
pop
or
inc
mov
mov
xor
add
iret
rcr
mov
shrb
lret
add
sub
mov
stos
rorb
leave
jmp
mov
sarb
movsl
xor
int
cmc
and
out
push
push
movsl
aad
leave
arpl
fdivrs
push
repz
xchg
fadds
mov
lret
cmpsl
add
in
std
xor
movsl
mov
jecxz
int3
jmp
test
xchg
pop
movsl
add
dec
ror
pop
mov
lahf
mov
test
mov
rcl
leave
shlb
jle
cmp
mov
mov
cmp
mov
ficoml
rcrl
dec
test
jecxz
xchg
lcall
js
enter
fsubrs
push
inc
cmp
cwtl
cmp
stos
sub
and
imul
out
mov
mov
jp
test
add
and
jno
jb
mov
dec
scas
jecxz
jbe
or
movsl
mov
mov
test
dec
lods
pop
dec
in
aaa
ss
imul
imul
movsb
xor
fbstp
cmp
test
fisubrs
and
pop
cmp
stc
jo
stos
out
pop
mov
loop
mov
mov
or
lods
sub
test
xor
aaa
mov
push
fwait
jp
fstpl
mov
js
fidivrl
cmc
mov
ds
mov
fistpll
data16
aaa
sub
and
and
cwtl
sub
push
adc
lret
mov
insb
mov
and
je
loopne
mov
jno
inc
cvtpi2ps
sti
shll
fsubrl
mov
ret
mov
jo
ret
lahf
mov
in
cmp
dec
std
lahf
je
hlt
push
fsubrs
mov
out
and
icebp
and
jge
mov
fwait
or
jnp
sbb
mov
adc
fisubs
imul
or
inc
adc
sahf
out
jbe
cwtl
ret
pop
incl
mov
int
mov
arpl
jnp
lods
jb
test
out
jle
cmp
stos
and
fimuls
fsub
jb
lahf
and
andb
cwtl
into
mov
jecxz
or
pop
fimuls
mov
in
mov
dec
incl
sub
test
mov
shrb
or
dec
outsl
push
push
inc
push
loopne
pop
push
movsl
test
sub
dec
das
inc
jecxz
mov
push
fwait
inc
xor
xor
or
vmwrite
mov
gs
cwtl
in
fcompl
cld
sbb
jb
or
fcmovnbe
test
and
sub
fsubrl
jb
popl
pop
roll
push
nop
cltd
fsub
int
mov
cltd
dec
lea
std
xchg
xor
mov
xor
push
xor
push
fbstp
mov
scas
aaa
shlb
fwait
jns
dec
mov
jmp
mov
pop
insl
gs
inc
jge
pop
js
jb,pn
fdivl
mov
fwait
mov
test
hlt
mov
les
arpl
scas
mov
add
add
ja
xlat
push
data16
mov
fdivrl
ljmp
dec
icebp
xchg
xlat
push
jno
inc
push
sbb
xor
xlat
cmc
jl
rcrl
inc
sub
arpl
call
inc
mov
and
in
add
xor
arpl
mov
xchg
mov
cmp
and
jmp
loop
xor
sbb
mov
mov
mov
ds
sbb
dec
cmp
mov
aas
insb
repz
lds
repz
mov
jecxz
insb
rorb
xor
lods
movb
pand
adcb
adc
loopne
xchg
mov
mov
insb
mov
leave
mov
sub
sbb
cmp
xchg
inc
mov
nop
lahf
inc
shrb
pop
add
out
imul
insb
mov
push
aas
mov
mov
dec
push
aam
dec
dec
xlat
out
jmp
jge
test
call
repz
in
arpl
cmpsl
nop
mov
stos
out
orl
xor
insl
cs
adc
movsb
js
outsl
or
clc
mov
mov
pop
jns
mov
xchg
or
sarl
mov
xchg
or
lock
insl
jl
pushl
mov
jge
sarl
sub
sarb
jecxz
dec
insb
clc
pop
mov
push
stos
mov
mov
xlat
mov
jns
mov
or
fstpt
lea
mov
andb
and
orb
sahf
je
sbb
or
movsl
push
mov
imul
outsl
cmp
xchg
mov
jmp
lods
mov
js
mov
arpl
mov
push
mov
outsl
sbb
cwtl
mov
dec
push
dec
fisubrl
mov
mov
or
jl
aam
fmull
xchg
test
arpl
icebp
mov
jne
fdivl
mov
mov
pop
mov
inc
stos
or
lods
mov
fcoml
int
mov
cmpb
shll
aas
stos
and
fidivl
mov
ds
scas
push
pop
jns
mov
test
jge
mov
stos
int3
add
aam
sbb
jmp
ss
or
sub
repz
xchg
outsb
and
mov
sbb
dec
mov
xchg
mov
mov
rdmsr
mov
ficoml
mov
xchg
mov
fwait
setnp
rcr
loop
mov
mov
loope
jnp
mov
adc
cmp
icebp
loop
mov
jecxz
jecxz
lret
jl
ficompl
out
mov
in
mov
in
arpl
call
arpl
je
aas
out
mov
fcmovu
and
mov
mov
jmp
cmp
mov
mov
fsubl
lods
jo
rcr
shrb
cmpsb
pop
jo
fistl
pop
push
imul
fstpt
mov
mov
aaa
fisubs
lahf
mov
stos
mov
call
mov
inc
faddl
mov
sbb
mov
dec
add
mov
pop
leave
mov
test
mov
mov
mov
mov
jge
xchg
jge
sbb
lods
sarb
sbb
testl
aas
mov
ror
dec
cmp
popl
ss
sbb
mov
inc
lods
xchg
adc
jge
jns
cs
xchg
aas
mov
inc
mov
rcll
sub
mov
aam
fadd
cwtl
imull
mov
rcrb
mov
xchg
inc
dec
out
out
mov
dec
cld
enter
adc
ret
jmp
pushl
je
mov
repnz
or
enter
sub
adc
jle
xchg
jae
push
pushf
xor
outsl
pop
jmp
push
int
shlb
jno
ror
sub
fdivs
mov
testl
dec
add
fidivs
fists
add
shll
sbb
lahf
icebp
nop
in
xchg
popf
adc
aam
shlb
mov
hlt
idivl
sbb
imul
jns
xchg
mov
insb
sbb
mov
pop
cmp
jecxz
jge
sub
das
push
add
sbb
add
test
in
cmp
scas
mov
mov
jge
sbb
pop
aas
mov
push
push
mov
cmp
mov
pop
and
fwait
lods
fbstp
fmull
adc
popf
mov
or
mov
dec
sbb
fs
mov
sti
adc
ud1
clc
and
mov
mov
cmc
mov
mov
jg
int
mov
and
adc
dec
fwait
adc
mov
fdivl
sbb
out
sbb
stc
jnp
das
ds
sarb
bound
push
pop
inc
mov
lret
xchg
push
andb
jns
mov
in
mov
mov
pop
jge
dec
pop
mov
mov
outsl
stc
add
sbbb
mov
jns
test
jge
mov
sub
add
sbbb
xchg
ds
ja
jno
sbb
push
add
pushl
lds
jl
repnz
jp
dec
pop
jp
cltd
into
xor
cmp
and
xchg
std
sbb
xchg
jo
movsl
jnp
pop
mov
sahf
leave
lods
cmp
pop
dec
out
sarb
repnz
ds
inc
fiaddl
stos
stos
push
in
cmc
in
jnp
cli
mov
ljmp
test
adc
ret
jg
scas
out
repnz
push
and
stos
scas
fwait
jl
loopne
xchg
inc
ja
lret
jne
sub
rcr
adc
icebp
loopne
jecxz
sub
shl
pusha
iret
movsl
mov
push
les
xchg
fidivl
mov
cwtl
push
jg
mov
sub
xchg
xchg
movsl
sub
dec
bound
inc
xchg
dec
jnp
adc
add
ret
xor
jl
data16
mov
jb
mov
cwtl
jge
xor
adc
pusha
fnstsw
inc
ljmp
fisubrl
xor
mov
fcmovne
adc
jnp
cmp
das
dec
enter
jmp
mov
mov
lret
imul
loope
imul
stos
stos
mov
test
imul
push
pop
lods
mov
pop
aas
stos
scas
fucom
scas
in
in
gs
test
mov
loope
out
fdivrs
loop
int
out
adc
in
lods
cs
cmpsb
fdivr
mov
push
shl
pop
loope
call
jns
mov
fdivl
mov
scas
jno
push
stos
mov
jb
dec
pop
xor
rcrl
cmp
sub
pop
loopne
lcall
mov
add
cmp
rcl
daa
dec
bound
icebp
pop
shrl
push
lret
lods
dec
mov
stos
shrl
sub
lea
aam
imul
lods
rcll
adc
pop
outsb
add
daa
scas
stos
mov
in
call
dec
mov
fsubl
lods
test
dec
jb
mov
mov
push
mov
out
push
rol
push
mov
aad
clc
push
push
aam
std
sub
es
push
sarl
roll
call
insl
shrb
outsb
out
inc
test
fnsave
inc
lcall
pop
insl
sub
push
stos
mov
out
fsubl
xchg
fsubp
sub
mov
cmpb
stos
mov
out
inc
and
sub
jmp
insl
shr
shl
enter
fnstcw
push
pop
call
dec
ficoml
shrl
mov
jnp
mov
mov
insb
out
lcall
xchg
popf
jnp
mov
out
mov
mov
jg
mov
xor
pop
inc
nop
sub
xchg
cld
repnz
std
rcl
daa
mov
ds
addb
daa
insl
cmp
aas
rolb
ret
inc
mov
adc
or
fidivrl
pop
leave
mov
jl
sub
cmp
addb
leave
mov
push
mov
mov
insl
aaa
mov
xchg
jl
arpl
adc
outsl
inc
cmc
mov
xlat
iret
lods
mov
cmp
jo
jne
leave
sbb
loope
mov
lret
push
stc
imul
or
mov
mov
roll
inc
lods
movsl
pop
jns
or
jmp
sbb
rcrb
test
dec
jmp
lods
fucomp
aas
dec
lea
cmp
int3
out
dec
mov
stos
idivl
call
test
rclb
jns
cmpl
mov
and
jle
fisubrl
xorl
dec
jno
mov
fwait
mov
js
jecxz
jns
cmp
push
lret
dec
inc
and
mov
xor
out
jl
xchg
iret
fidivl
iret
mov
push
in
adc
or
xchg
xor
lahf
pop
jnp
mov
jns
fdivrl
sbb
iret
jl
fdivs
lds
dec
and
pop
mov
in
add
dec
xchg
ds
and
rolb
pop
movsb
jmp
cmc
inc
rorb
push
jge
mov
ffree
mov
sti
lahf
shrl
ds
mov
lea
test
std
inc
repz
cmp
mov
cli
es
scas
and
xor
mov
pop
cmp
xchg
fiadds
adc
imul
sbb
lahf
mov
mov
jecxz
loope
pop
insb
sahf
xchg
fisubrl
xor
mov
sbb
rorl
ds
mov
xchg
or
enter
sbb
cmp
sub
jg
js
rorl
cmpl
mov
cmp
mov
out
jnp
sarb
mov
loopne
iret
dec
mov
pop
push
lcall
bound
adc
aas
pop
in
mov
aas
out
ret
out
das
cmp
mov
imul
mov
push
mov
fstpt
mov
mov
fistpll
js
xchg
movsb
mov
stos
or
fldl
push
mov
mov
popf
aas
mov
mov
mov
mov
sbb
or
cmp
and
pop
cs
mov
stos
mov
mov
xor
data16
xor
outsl
sub
sub
pop
loope
mov
xorb
mov
clc
aas
es
adc
xor
cmp
cwtl
ret
stos
adcl
lock
or
aam
mov
push
imul
rol
popf
xchg
shll
fwait
adc
hlt
or
sbb
sbb
int3
inc
je
add
mov
dec
mov
popa
mov
jbe
xchg
aad
mov
cmpsl
sub
add
loop
ret
clc
jl
pop
dec
rorb
out
push
push
pop
in
pusha
xchg
xchg
adc
sbb
xlat
adc
test
xchg
sbb
jge
mov
xchg
ret
loopne
cmp
test
xchg
movsl
out
jno
movsb
jmp
inc
mov
pop
or
pop
sub
xchg
std
ss
sarb
clc
mov
pop
dec
cmp
in
out
in
mov
pop
ss
sub
movsl
fsts
sbb
mov
popa
lods
pop
mov
xor
dec
nop
dec
inc
jno
xchg
outsb
sbb
push
std
imul
shlb
mov
bound
cld
or
scas
dec
ffreep
lahf
movsl
fisttps
adcl
jecxz
insb
js
pop
lds
xchg
scas
repz
sarl
inc
sub
push
test
repz
inc
mov
cmp
popa
mov
dec
sti
lds
push
sub
stc
adc
mov
mov
sti
xchg
std
mov
jb
jnp
mov
cwtl
inc
call
es
xor
js
mov
inc
dec
stos
add
xchg
enter
push
in
push
outsb
push
fwait
movsb
mov
sub
lret
aaa
cwtl
mov
test
insl
mov
test
int3
ret
xchg
out
jmp
add
fwait
stc
shlb
mov
mov
cmpsl
popf
gs
inc
fcmovb
mov
xlat
out
scas
test
add
stc
mov
repnz
add
popf
scas
and
mov
ret
mov
push
pop
andl
fadd
movsb
outsl
sbb
std
ljmp
xor
aad
sahf
and
dec
or
loopne
ss
pusha
jne
inc
sub
jns
or
rol
cmp
push
xchg
or
and
subl
dec
imull
mov
lods
fisubl
cmpsl
lret
cmc
orl
pop
mov
jg
or
xchg
add
fnstsw
setl
nop
push
mov
add
out
cmp
cli
daa
leave
scas
sti
inc
pop
es
sub
cmp
roll
push
lea
jg
xor
xchg
mov
pop
movsb
incb
and
lods
mov
popf
jo
sbb
mov
jecxz
pop
jae
lahf
push
adc
mov
int3
or
cli
or
push
call
dec
and
notl
inc
jns
adc
cs
lods
cmpsb
pop
fdivrl
dec
pop
xor
mov
push
jo
lret
stos
push
xchg
mov
or
in
enter
out
mov
sarl
adc
dec
or
inc
pop
out
cwtl
dec
sub
sbb
clc
xor
into
test
dec
dec
sahf
aas
adc
out
cld
jb
push
loop
mov
cmpsl
adc
sbb
xor
shll
jb
lret
pop
pop
mov
cmp
mov
dec
push
or
shll
sub
add
nop
adc
dec
leave
lcall
lds
xor
sbbb
insb
push
jmp
in
mov
add
in
add
add
cltd
sub
xor
mov
mov
or
clc
cmp
dec
or
mov
cmp
xor
jne
jo
cmpsb
push
add
call
movsb
jb
jno
jge
add
push
addr16
cmp
mov
in
stc
xchg
push
adc
int
addl
add
and
insb
outsb
pop
mov
ljmp
adc
inc
or
cmp
sub
or
xor
iret
aad
push
fimull
inc
test
ss
mov
int3
stc
inc
xchg
data16
movsl
in
in
or
sub
nop
mov
pop
or
dec
or
es
or
xchg
dec
dec
add
sbb
mov
mov
pusha
mov
add
pop
cmp
test
clc
or
daa
push
or
mov
sahf
imul
xor
mov
mov
pop
sbb
mov
das
and
aas
dec
shlb
movsl
adc
mov
cmp
push
icebp
mov
jb
push
arpl
std
sub
ret
and
ret
mov
nop
ljmp
ja
dec
push
adc
push
dec
pusha
and
imul
in
adc
fisttpl
mov
test
cwtl
dec
mov
mov
mov
xchg
aad
sbb
outsb
test
xlat
mov
std
and
inc
inc
push
clc
dec
or
sbb
pop
mov
mov
rcrb
mov
dec
adc
popa
ja
jecxz
add
lds
pop
orb
out
in
loopne
pop
loope
sbb
std
in
xchg
hlt
inc
mov
cmp
mov
pop
pop
sti
mov
fidivl
repz
in
add
xchg
mov
test
or
shll
fwait
sbb
subl
xchg
repnz
jbe
fdivrl
or
in
dec
call
pusha
aas
sbb
mov
xor
subb
sub
rorb
pop
adc
movsb
das
sbb
imul
bound
xor
xchg
ret
add
test
in
stos
cld
ret
sub
mov
mov
adc
lcall
mov
fistps
addr16
iret
outsb
ret
add
test
jl
mov
cmp
lods
push
mov
pop
sbb
or
test
sbb
rol
shr
iret
leave
fcmove
in
stc
repz
push
lock
repz
sbb
cmp
in
lret
out
cmp
ss
jge
pop
int3
daa
leave
inc
inc
scas
cli
imul
sti
inc
call
lret
and
sbb
out
lea
movsb
ss
mov
imul
enter
ja
mov
cmp
mov
dec
jo
mov
sbb
leave
cmpsb
mov
cli
jnp
lea
jno
push
fbstp
xor
or
cmp
out
ret
mov
scas
mov
ret
mov
rol
outsl
stos
in
mov
push
mov
mov
push
clc
aad
cmp
mov
inc
ds
push
dec
sbb
addr16
sarl
jnp
js
lea
adc
lods
lcall
pop
insb
nop
jecxz
pop
shlb
pop
sarb
stos
push
mov
ljmp
mov
ljmp
aad
mov
les
mov
imul
push
sbbl
jo
xchg
in
test
jnp
lahf
mov
mov
push
add
mov
add
out
xchg
push
jbe
mov
lahf
pushf
add
out
dec
out
in
cmc
clc
push
out
inc
jno
adcl
sub
mov
pusha
lret
cli
dec
and
jmp
cmpsl
repnz
or
in
xor
std
paddd
repz
icebp
add
xor
scas
xor
mov
testb
stos
enter
adc
jecxz
outsw
and
xchg
lods
jns
rcll
out
addr16
mov
cld
out
sbb
lret
cli
xor
aam
test
dec
push
shl
rcll
pop
or
cli
jge
and
or
and
cmpsl
adc
mull
sbb
push
hlt
aam
mov
ss
test
jne
jno
inc
mov
mov
int
shll
out
pop
add
jp
xchg
mov
jg
pop
mov
loop
mov
push
jmp
add
fisttps
sub
stos
out
sbb
or
icebp
out
into
mov
cld
shr
mov
repnz
leave
in
cld
test
lods
jg
mov
stos
in
jge
sub
out
outsl
mov
mov
mov
or
pop
mov
mov
dec
push
cwtl
jmp
addl
mov
xchg
mov
fdivrl
cmp
jnp
mov
pop
fdivl
addr16
jbe
add
mov
and
inc
inc
mov
jnp
lds
xchg
movsbl
mov
in
pop
outsb
iret
add
mov
fcompl
jmp
cmp
fdivrl
inc
pop
jge
jg
les
adc
dec
mov
dec
outsb
icebp
push
lds
popa
fldenv
push
sub
scas
stos
mov
lret
pop
mov
dec
add
pop
idivb
outsb
adc
mov
out
and
mov
add
mov
dec
out
adc
xchg
sbb
je
fmulp
mov
int
mov
repz
mov
lods
xchg
aas
fs
loopne
mov
add
arpl
iret
mov
icebp
dec
add
xchg
arpl
nop
lea
mov
movsl
in
outsl
adc
add
xlat
mov
ja
jmp
mov
stc
push
mov
pop
insb
mov
push
in
lock
dec
dec
sti
testb
sbb
push
fldcw
loope
lret
addr16
aam
int3
or
sbb
push
pop
lret
jg
xorb
lret
js
sbb
jecxz
ret
add
or
pop
fcmove
stos
pop
lahf
andl
sbb
xchg
shrl
test
mov
push
fnstenv
adc
pop
es
sbb
fndisi(8087
scas
xchg
sarl
mov
cwtl
add
or
seta
addr16
sub
or
mov
mov
icebp
dec
cmp
adc
jae
stc
fmull
cmp
push
mov
test
pop
fisubrs
jo
or
dec
inc
push
movb
push
in
mov
inc
out
add
ja
mov
mov
dec
pop
lock
mov
jb
jge
xor
adc
or
gs
cmp
dec
vmulpd
and
sub
sbb
xor
je
shll
mov
or
test
lds
jo
mov
scas
dec
mov
and
inc
cmp
lea
push
stc
sub
fdivl
mov
adc
cmpsl
pusha
pop
int3
imul
rcrl
fidivrl
adc
addr16
or
mov
mov
call
mov
in
scas
imul
adc
je
aad
jb
xchg
mov
cld
les
sbb
mov
fwait
jno
or
mov
cmpsl
sub
jmp
mov
dec
adc
mov
lahf
mov
sub
fidivrl
lret
movsl
jno
or
insb
sub
jg
jns
mov
cmp
sub
add
aaa
outsl
dec
bound
cmp
lds
mov
or
push
and
loopne
and
and
dec
inc
pop
mov
out
cld
imul
ret
push
aas
or
rclb
dec
lods
mov
push
inc
aam
adc
mov
inc
jp
mov
jo
test
jb
cmp
das
xchg
pop
call
pop
mov
mov
mov
test
aas
mov
in
or
add
jg
out
jge
test
sbb
mov
mov
inc
cmp
shrl
cli
test
in
add
test
mov
call
add
or
or
pop
leave
push
out
lock
pop
pop
inc
gs
dec
jnp
arpl
cmp
js
mov
and
mov
lret
int3
sbb
adcl
pop
add
adc
aam
xor
dec
leave
movsl
fsubrp
pop
std
les
inc
fcmovb
mov
jae
cli
mov
or
jp
test
inc
sub
fxtract
push
pop
or
push
cld
xchg
adc
mov
inc
dec
leave
and
xchg
lret
and
ja,pn
cld
idiv
std
mov
fmuls
fldpi
rolb
pop
xchg
xchg
in
out
inc
dec
mov
jge
xor
fldl
pop
push
out
cli
mov
imul
stos
inc
jo
scas
mov
cmpl
jb
mov
push
add
daa
imul
or
pshufw
mov
cmp
jns
sub
sub
dec
pop
sbb
mov
add
and
xor
dec
xchg
dec
mov
xchg
ss
arpl
cmpsl
aaa
in
adc
sbb
sbbl
lret
jle
or
insl
push
xchg
test
xchg
mov
fs
add
dec
movsb
es
stc
or
and
mov
in
fwait
shl
pop
insb
fadds
orl
sarb
lcall
rcrb
insl
popa
gs
mov
je
push
xchg
push
sarb
pusha
jg
and
hlt
jbe
stc
testb
std
loope
icebp
je
shrb
in
into
inc
mov
sti
and
lret
mov
data16
xor
test
sbb
leave
cmpsl
test
pop
lret
outsb
push
leave
je
and
jb
aam
lods
loope,pt
sbb
jnp
pop
and
mov
mov
push
and
roll
daa
mov
fwait
jns
js
mov
mov
fisubrl
lret
in
inc
adc
mov
shrl
xchg
adc
in
fwait
arpl
call
push
jb
in
inc
shrd
jne
xchg
push
in
or
adc
push
fmul
push
enter
mov
sbb
xor
ret
cmc
inc
stos
jns
push
ret
and
push
add
mov
pop
and
pop
push
or
js
add
std
push
scas
pop
pop
fldt
lret
push
push
and
mov
hlt
popf
daa
outsl
out
pop
stc
mov
popa
or
cmp
lret
loope
adc
dec
lds
cwtl
mov
adc
sub
dec
je
sbb
adc
jo
movsb
pop
icebp
cmp
lods
sarb
sub
inc
shll
jo
push
test
add
adcl
mov
int3
xchg
xor
cld
inc
mov
movl
outsl
clc
pop
movl
lock
pop
mov
leave
inc
addl
inc
seto
int3
mov
sti
popa
ja
pop
sub
adc
or
insl
adc
adc
f2xm1
pop
sub
mov
hlt
icebp
xchg
xchg
cmp
es
int
xchg
and
inc
pushf
sbb
and
jo
inc
movl
aam
mov
mov
hlt
push
pop
in
push
jns
xchg
xchg
push
fwait
add
lret
scas
dec
hlt
leave
test
cmc
aam
dec
xchg
movl
xchg
jp
adc
loopne
cmp
ret
mul
mov
lret
popf
jb
shlb
test
movsl
insl
jnp
xchg
cwtl
lret
xchg
add
sbb
mov
push
and
cmpsl
xchg
mov
pop
jge
and
stos
std
dec
outsl
cld
pusha
jb
and
clc
xor
sbb
iret
sbb
xchg
dec
dec
adc
or
addl
push
lock
js
push
xchg
sbb
mov
shl
movsb
xorl
or
dec
rolb
sahf
or
pop
ja
pusha
push
inc
into
movsbl
sbb
xchg
dec
stos
xchg
dec
mov
call
jg
xchg
test
sub
cmp
cmc
daa
mov
xchg
push
mov
push
int
fmul
cmp
shr
mov
xchg
sbb
stos
xor
daa
dec
out
lret
push
out
popa
pop
cmovo
mov
push
pop
test
push
adc
lret
icebp
fstpt
jg
push
neg
orl
mov
test
icebp
mov
movsl
test
ss
mov
mov
inc
and
fsub
pop
sbb
pop
mov
leave
fnstsw
mov
jne
fidivrs
lods
adc
inc
adc
sub
adc
sbb
aaa
test
fs
cmp
test
inc
jecxz
inc
cmp
les
lds
loope
ds
add
and
jg
js
aad
dec
aas
jmp
out
sub
or
clc
xor
adcl
or
dec
sahf
sub
outsb
aaa
mov
jl
movswl
clc
movl
imul
sbb
cld
add
fisttpll
sbb
push
es
repz
dec
dec
int
mov
cs
xchg
push
in
mov
maskmovq
testl
adc
loope
or
push
aam
jmp
mov
mov
les
rol
or
dec
in
and
sub
ret
adcl
xor
xlat
or
aaa
mov
clc
pop
mov
cwtl
mov
cmpsl
inc
cmp
push
xchg
push
movsb
xchg
in
and
xchg
in
sub
xor
mov
gs
jle
insl
js
dec
and
mov
pop
xor
je
lret
mov
rcll
mov
loop
mov
ret
jnp
inc
adc
les
daa
sbb
mov
addl
aas
adc
inc
sbb
and
and
orl
jp
inc
mov
jge
or
xchg
stc
loope
push
std
bound
shrl
dec
xchg
xchg
ret
aas
and
pop
pop
adc
xor
mul
ja
mov
out
lds
sbbl
pop
movsl
sbb
ss
call
cli
int
andl
in
lret
mov
lcall
int3
rcll
jbe
in
into
mov
mov
add
ret
call
or
in
add
inc
push
sbb
xchg
xchg
pushf
imul
jmp
addr16
or
mov
int
mov
jle
gs
mov
pop
in
xchg
or
mov
xchg
in
insl
or
and
inc
es
add
dec
lahf
notl
repnz
xorb
pushf
shll
aad
mov
mov
lds
stc
pop
push
adc
ret
fdivl
and
pop
cs
fimuls
dec
sbb
mov
lods
repz
ds
pop
xor
and
movsl
mov
call
sbb
and
mov
movsb
sbb
jmp
inc
inc
mov
out
aad
inc
cmc
cmpsb
test
adc
ffreep
adc
mov
xchg
mov
out
xchg
rcrb
daa
inc
sbb
add
cwtl
into
loop
repz
shrb
add
xor
sub
push
sbb
das
pushl
xchg
iret
xlat
imul
cmp
daa
xchg
jo
cltd
lcall
lea
and
xchg
xor
idivb
adc
fsubl
xor
loopne
cmpsl
inc
jl
rorb
adc
and
inc
dec
pop
push
fstpt
dec
test
dec
xchg
and
movsl
mov
inc
sbb
in
cmc
cmp
pop
mov
dec
jbe
pop
ds
mov
in
mov
repz
adc
mov
sbb
sbb
jge
mov
pop
out
es
and
fs
sti
sub
in
sbb
movsl
sahf
test
mov
insb
pop
and
es
mov
push
cld
and
inc
outsb
and
movsb
lock
fidivrs
pop
call
leave
pushf
inc
xchg
sub
inc
push
scas
mov
sbb
or
shr
mov
add
cmp
shlb
xchg
inc
call
dec
mov
mov
fs
out
mov
cs
addr16
loopne
push
xor
sbb
add
movsb
jne
mov
lods
sbb
cmpsl
sbbb
stc
sub
xchg
call
dec
enter
xor
mov
negl
stos
add
cmp
sti
nop
add
iret
adc
mov
sbb
jmp
push
scas
fmuls
add
adc
xor
movl
cmp
je
cmp
push
aam
mov
adc
mov
ja
mov
stos
out
vmwrite
loop
mov
adc
fs
rol
xchg
pop
sti
popa
push
mov
pop
leave
add
mov
push
cmpsb
xchg
in
push
aad
inc
loope
icebp
dec
inc
mov
insl
imul
rcrl
loop
mov
jmp
add
loopne
add
movl
test
pop
inc
in
cmp
dec
push
rcrb
or
lret
push
mov
jb
dec
arpl
je
cli
xor
mov
xchg
bndstx
sub
mov
mov
decl
add
dec
popa
in
push
mov
dec
in
xchg
sbb
mov
daa
xchg
popf
es
sub
jnp
push
sub
dec
and
or
mov
out
xchg
insl
xlat
and
subl
inc
mov
es
mov
xor
loop
icebp
std
push
or
xor
dec
sarb
or
pop
mov
mov
stos
or
pushw
push
movsb
sti
popf
jmp
push
pop
es
push
mov
dec
add
or
mov
inc
mov
mov
negb
daa
jns
jmp
and
js
and
and
pop
movsb
fucomi
popf
sub
mov
push
jo
lea
imul
pop
mov
scas
repz
mov
inc
push
mov
in
cmp
mov
adc
lret
lock
je
pop
imul
add
push
adc
rolb
subb
add
sub
mov
fldl2t
mov
sub
gs
xchg
cli
xor
mov
inc
mov
pop
test
out
movsl
scas
push
dec
add
mov
ret
cmp
sub
and
into
pop
push
jnp
push
sbb
rolb
repnz
xchg
mov
test
jge
jmp
daa
add
mov
sbbb
mov
nop
mov
leave
jmp
mov
inc
movsb
push
pushf
cmp
jg
loopne
clc
stos
cwtl
jecxz
leave
iret
rolb
mov
rcll
or
cmp
test
clc
sti
xor
mov
dec
xchg
gs
cwtl
mov
dec
rol
addl
jl
cmpsb
dec
rol
jge
and
addl
and
test
cltd
inc
daa
pop
in
pop
push
and
inc
push
ret
leave
push
test
pop
dec
pop
mov
sub
rorl
das
aas
in
nop
mov
push
xor
add
movsb
pushl
outsb
pop
loope
dec
stos
add
add
js
xor
ss
push
aaa
subb
aam
test
shlb
fists
fmul
dec
mov
decb
aad
daa
add
bound
mov
pop
push
mov
gs
adcl
fcmovnb
sub
mov
cmp
stc
mov
mov
mov
add
gs
jmp
fsts
loope
test
pop
dec
ljmp
or
xor
cmp
inc
cmp
push
jmp
sahf
pop
mov
cmpsb
adc
xchg
je
push
pop
hlt
cs
jmp
mov
addb
test
adc
std
dec
mov
mov
fmul
mov
fstpt
je
lcall
push
stos
pop
hlt
xchg
lret
in
pushf
stc
pop
mov
xor
int3
inc
js
or
xor
pop
xor
test
out
push
inc
pop
movsl
lret
dec
adc
mov
xchg
inc
push
mov
push
imul
cmpsb
ss
xor
jp
push
std
sub
cwtl
mov
push
cmpsb
mov
cmpsl
xor
and
mov
lds
push
push
nop
mov
mov
mov
push
repnz
test
xor
mov
ds
sahf
mov
push
sub
js
daa
pop
test
jp
jnp
stos
cmp
cltd
jge
ror
add
aas
nop
push
in
push
psubb
sbb
push
inc
int
adc
cwtl
scas
testb
xchg
inc
dec
sub
daa
mov
jne
inc
loop
mov
testb
cmovl
lods
add
shlb
test
stc
or
lcall
xchg
cltd
push
sub
or
or
mov
es
pop
dec
adc
into
ret
mov
pop
rep
and
xor
int
in
insl
sub
push
movsb
leave
pop
in
mov
popa
xchg
adc
test
fcompl
mov
pop
dec
fbld
or
fcoms
xor
stc
adc
and
lcall
xchg
mov
ss
add
xchg
int
xor
insb
outsl
push
pop
add
loop
xor
add
xlat
inc
adc
sub
ret
or
mov
push
scas
mov
dec
ss
mov
pop
mov
cmp
fsubs
cmp
sub
fwait
xor
or
sbb
add
insl
dec
shl
js
xchg
cmp
sbb
movsb
call
pusha
and
inc
xchg
leave
and
xchg
mov
mov
push
xchg
insb
pushl
sbb
aad
fistpll
lock
imul
gs
cmpsb
out
nop
fucomip
sub
fisttpll
dec
dec
jmp
rcr
call
adc
stc
sub
and
push
xor
rorb
mov
js
xlat
push
gs
dec
les
fwait
in
dec
cmpsb
clc
incb
add
shl
xchg
mov
stos
cli
pop
xchg
cld
dec
or
jecxz
xor
dec
add
mov
mov
push
and
add
push
pusha
xor
popf
ljmp
pop
addl
lret
mov
insl
xor
outsl
jp
sbbl
inc
push
push
jg
outsb
shl
in
or
pop
mov
xchg
pusha
fsubl
mov
sub
repz
das
jbe
dec
call
rcrb
inc
popa
sub
mov
push
cmp
cltd
out
sbb
lds
push
and
pop
mov
lods
or
decl
pop
jb
repz
icebp
push
xchg
sub
mov
ret
pop
loope
dec
push
hlt
cmp
or
pop
cld
loope
xor
or
out
push
clc
mov
add
or
xor
and
mov
mov
xchg
and
test
adc
loope
mov
push
cmp
dec
xor
inc
clc
stos
mov
and
add
dec
idiv
shll
mov
lret
mov
push
jae
icebp
or
aas
pop
xchg
rol
sub
in
sti
dec
stos
add
pop
dec
nop
inc
jecxz
or
mov
sbb
lock
movsb
and
push
dec
adc
rcrl
mov
push
xchg
xchg
and
outsl
mov
or
xlat
mov
sbb
scas
ret
mov
leave
adc
repnz
push
jno
movl
lret
ss
cli
and
lgs
mov
pop
mov
addr16
lock
jg
ret
sahf
inc
pop
sub
cs
cmp
pop
mov
addr16
frstor
cmp
repnz
shll
shlb
or
icebp
int
aas
xchg
rol
pusha
fsubrs
les
pop
lods
out
lret
aam
fdivr
nop
xor
or
cmpsb
jl
pop
push
ror
movl
jo
lahf
mov
push
mov
dec
fisubl
inc
out
cmp
pushf
pusha
movsl
out
dec
dec
movl
js
mov
cli
sub
pop
dec
cmpsl
ljmp
sbb
test
mov
cmp
mov
shlb
vpsubsw
fidivl
or
insb
add
mov
rorl
lahf
jnp
test
pop
nop
xbegin
mov
lcall
mov
add
mov
jecxz
pop
sahf
xchg
push
mov
outsb
push
mov
loop
popa
or
mov
leave
push
cmpsl
cmpl
imul
daa
dec
mov
insb
sbb
lret
push
mov
nop
in
adc
or
clc
add
dec
lret
mov
repz
jle
mov
mov
or
jns
sbb
inc
mov
inc
mov
sbb
lds
es
and
dec
sti
orl
cmpsb
js
sub
aad
xor
pop
ds
movl
mov
std
addr16
sub
dec
xor
in
loopne
flds
stos
xlat
pop
aad
out
inc
leave
dec
dec
loope
je
fmul
jbe
mov
xor
pop
call
nop
sbb
movl
fstl
ftst
clc
dec
push
js
fadds
or
inc
iret
inc
push
add
rolb
ds
inc
sbb
sbb
int
push
out
xchg
xchg
mov
adc
fisttps
jns
lret
sbb
mov
outsl
test
or
pop
sbb
out
pop
sub
sbb
call
jb
fisubrs
or
dec
ret
outsb
pop
jno
cmc
jle
ljmp
inc
psllq
push
cmpl
call
addr16
cmpsl
movd
cmp
dec
lcall
push
aad
push
cmpl
cmp
mov
xor
xchg
ja
xchg
or
mov
pmaxub
and
pop
inc
ret
lcall
addb
and
xchg
mov
cmpsl
add
bound
sub
stc
jg
mov
sti
xchg
mov
mov
mov
inc
xor
rol
loope
cmp
or
ffreep
pop
xor
movsb
sub
ficomps
stos
out
mov
mov
add
or
cmp
subl
sub
jle
inc
cmpsl
out
jge
inc
shll
add
lret
sbb
jb
mov
adc
jbe
mov
mov
mov
shl
sbb
cmpsb
adc
push
pushf
mov
add
outsl
sub
imul
sbbb
testl
mov
cltd
mov
insl
dec
pushf
addb
mov
inc
jle
pop
adc
lcall
sahf
mov
add
ljmp
aaa
int
imul
outsb
jbe
xchg
sarb
xchg
mov
fs
test
mov
mov
sarl
ret
fdivs
imul
out
popa
mov
pop
aam
jecxz
dec
push
movsl
orb
mov
out
ffreep
dec
in
dec
add
sbb
es
sarb
jmp
in
roll
fisubrl
mov
pushf
mov
dec
dec
cmp
sbb
add
mov
push
pop
mov
adc
sbb
inc
sahf
sbb
int
ds
in
ljmp
xlat
clc
pop
dec
and
aam
roll
pop
inc
fistpl
inc
cli
jmp
dec
aaa
jne
mov
push
jp
jle
gs
mov
mov
dec
jge
inc
fiaddl
out
mov
leave
inc
sahf
in
mov
movl
push
mov
std
mov
adc
addr16
inc
stos
xchg
mov
jae
mov
sub
outsb
fdiv
test
cmp
xchg
adc
int3
jbe
testl
in
sub
xchg
inc
sbb
pop
loop
insl
iret
cmpsl
ss
sarl
addr16
outsb
mov
pop
adc
mov
stos
out
pop
pop
mov
xor
mov
mov
sub
fadds
cmp
adc
orl
test
push
hlt
xchg
jmp
dec
repz
or
dec
pop
lret
push
call
mov
jno
pop
test
loopne
jne
addb
pop
hlt
idiv
mov
lea
fisubl
mov
sbbl
fsts
jnp
jecxz
js
lock
arpl
orb
popf
lea
insb
and
mov
mov
mov
loopne
filds
add
mov
xor
mov
xchg
sarl
adc
lret
mov
lcall
cli
dec
or
sub
sbb
fcmove
rorl
or
out
adc
cmp
inc
mov
repz
out
icebp
add
sbb
pop
mov
test
cmp
and
adc
sbb
imull
cmc
lds
scas
push
rcll
inc
cwtl
mov
test
dec
mov
mov
scas
add
pushl
ret
pushf
in
inc
mov
call
lock
pop
or
ds
test
mov
cwtl
pop
pop
mov
sbb
and
je
lret
out
frstor
in
adc
repnz
jns
cmpsb
pop
dec
xor
mov
sbb
pop
and
push
fcmovne
mov
gs
push
lahf
add
adc
out
imul
and
call
sarb
pop
mov
mov
pop
push
daa
mov
jp
cmp
mov
ja
mov
call
or
xor
decl
ljmp
repz
mov
ja
cld
daa
or
pop
in
cmc
or
dec
mov
fsubrl
pop
sub
lret
mov
bound
sub
mov
test
add
xchg
dec
inc
pop
hlt
les
push
sbb
add
pop
in
punpckhdq
popa
push
cmp
daa
push
fsts
loope
mov
and
sti
imul
add
ffree
cmp
fists
js
jbe
add
cvtps2pi
inc
repnz
mov
dec
inc
loop
mov
inc
pop
jmp
push
cld
insb
cmc
int
orl
jns
cmp
jae
test
jle
and
mov
sbb
jne
inc
aas
in
push
leave
ljmp
add
mov
lds
aad
mov
adc
stc
rolb
fdivrs
mov
shlb
push
in
xchg
scas
ffree
dec
dec
pop
xor
sbb
lahf
jnp
xchg
sahf
sub
shrb
insb
movl
js
fnsave
call
add
sub
stos
and
andl
xchg
das
in
sub
cltd
cmp
jle
xor
shrb
daa
sub
movsl
pop
or
mov
push
ret
ficoml
and
mov
or
jl
push
orl
pop
xor
xchg
fisubrs
loopne
jno
mov
dec
pop
lds
clc
adc
les
lods
push
jne
aad
sti
lahf
nop
mov
sbb
or
mov
test
jno
add
dec
pop
and
gs
xchg
xchg
fs
sub
popf
xor
add
sbbl
adc
push
lock
out
cmp
inc
mov
ss
ds
lret
sbb
inc
mov
push
xor
movl
std
cmpsb
jns
cmpsl
xchg
cltd
subb
in
call
fcomi
in
aam
shrb
xchg
adc
or
cli
push
adc
push
mov
jbe
inc
mov
sahf
push
mul
ficomps
mov
cli
fistl
stos
popa
ss
fldenv
fistpll
scas
pop
fstl
add
mov
pop
in
jl
gs
adc
mov
dec
cli
pop
xchg
fmuls
and
inc
dec
dec
es
jle
jg
sbb
jnp
mov
pop
xlat
xchg
out
pop
mov
ret
pop
and
xchg
subl
jns
jbe
icebp
aam
mov
cmp
insl
xchg
fadd
jl
pop
aad
hlt
sahf
lea
rcll
scas
aad
or
pop
cmp
int
leave
pop
pop
xchg
imul
je
leave
adc
inc
aas
into
icebp
add
incb
in
mov
jmp
sbb
mov
pop
push
cmp
fdivrs
rolb
xchg
add
pop
das
or
ss
xchg
cmpsl
dec
xor
jbe
xchg
into
mov
mov
loope
cmpl
pop
dec
addb
movsl
pop
notl
hlt
mov
jge
adc
jne
popf
in
aad
dec
sbb
mov
jecxz
rorb
fcmovnbe
int
mov
xchg
jns
xlat
sub
mov
scas
pop
push
sbb
mov
or
mov
out
imul
push
jmp
popa
fisubrs
adcb
mov
xor
xchg
jge
daa
punpcklbw
jbe
fcompl
add
or
out
mov
pop
sti
pusha
popa
jp
adc
loop
fisttpll
out
lcall
cltd
push
ljmp
and
inc
push
push
loopne
rorb
sbb
ffree
lock
gs
faddl
mov
cmp
jno
mov
jg
arpl
loop
adc
xchg
dec
dec
cmp
addl
or
mov
push
mov
aas
adc
vshufpd
in
mov
loop
cmpsl
stos
mov
iret
or
and
pop
or
lock
cli
clc
fucomip
testl
sub
out
or
cmc
and
negl
mov
sar
bound
mov
stos
gs
mov
lods
inc
mov
sub
out
inc
cmp
xchg
inc
and
mov
sbb
sbb
shl
clc
pop
cmp
jl
addl
fimull
push
pop
jbe
lret
das
xchg
call
push
cmc
push
dec
add
ror
mov
fucomip
pop
dec
cmc
out
jp
sbb
mov
ror
mov
jg
dec
add
push
ficoms
inc
inc
scas
dec
cld
out
xchg
pop
mov
aaa
mov
mov
ljmp
into
sbb
mov
jmp
inc
imul
jg
xchg
mov
xorb
aad
scas
pop
sbb
imul
dec
jmp
add
sti
rorl
out
hlt
cmp
push
dec
repnz
mov
cli
stc
add
repnz
pop
aad
test
or
les
roll
pop
cld
sbb
repnz
rorl
add
pop
pop
adc
push
sbb
and
data16
mov
push
mov
mov
outsb
in
outsl
and
iret
js
jno
and
or
mov
js
cmpsl
test
leave
mov
lret
push
aas
xchg
out
mov
int3
out
inc
jl
cwtl
and
fwait
jno
les
and
mov
and
xchg
or
push
gs
fdiv
lods
mov
pop
adc
int3
xchg
or
aas
fstl
testb
aas
je
add
inc
xor
cmp
in
pop
xlat
mov
or
fstps
or
pop
or
pop
or
sbb
mov
out
and
aad
int
sub
clc
mov
popa
sahf
je
dec
shll
insl
jg
js
ret
jle
pusha
addl
push
sbb
mov
das
sbb
mov
fnstenv
xchg
add
sbb
outsl
cmp
mov
and
test
mov
add
dec
or
mov
or
lret
sub
nopl
roll
inc
adc
mov
push
xsavec
pop
adc
sbb
scas
daa
call
cmp
pushf
cmpl
movsb
jge
cmp
mov
sbb
stc
jl
cmpsb
and
les
inc
test
and
test
jg
cld
sbb
mov
stos
jle
sbb
cli
in
dec
in
pop
mov
daa
or
pop
xchg
mov
adc
or
in
sub
jae
dec
adc
fs
and
ficoml
inc
mov
xchg
popa
mov
sbb
jae
insb
mov
ror
out
sub
sbb
cltd
mov
sarl
sbb
sbb
std
sbb
test
adc
jmp
push
xchg
hlt
sub
mov
stos
and
sti
mov
xchg
jns
push
ljmp
push
inc
and
xchg
dec
int
js
movsl
int3
or
sbb
sbb
mov
jnp
inc
sub
aad
and
xchg
mov
leave
mov
push
push
lea
or
aad
aam
and
push
cmp
aam
aad
sbb
scas
mov
sbb
mov
inc
cmp
dec
add
lret
add
mov
sbb
inc
sbb
push
cmp
cwtl
notl
repz
aas
aas
mov
or
mov
test
mov
cmp
mov
test
fdivrl
popf
mov
inc
jl
sub
or
mov
fwait
xor
loopne
jg
loop
xchg
mov
mov
jne
es
jns
or
pop
inc
mov
jnp
jo
adc
mov
ud1
shrb
push
mov
movsb
sub
in
cmp
lret
rcrb
mov
pop
push
in
and
or
mov
test
cli
inc
andl
lock
lret
pop
dec
jge
rorb
mov
or
dec
dec
inc
dec
push
outsb
jge
xlat
pop
cmp
mov
pushf
cmpsb
test
stos
xchg
into
adc
pop
sub
xor
call
dec
movsb
dec
leave
fsincos
out
mov
int
push
inc
mov
call
pop
gs
sbb
mov
pop
and
outsl
into
jmp
dec
push
movsl
stos
mov
cli
jg
lds
movsb
lahf
pop
rcl
sub
inc
aaa
std
fldcw
sbb
pop
jno
mov
clc
mov
inc
pop
or
outsl
sbb
dec
dec
ljmp
xorl
push
lds
mov
ds
clc
dec
test
xor
pop
push
sbb
xlat
inc
cmp
or
jecxz
mov
mov
jb
movsl
mov
outsl
push
mov
xlat
mov
and
xchg
fidivs
loope
sub
test
xchg
bound
js
dec
aas
or
adcb
lock
mov
mov
stos
and
and
or
shlb
lret
mov
insb
shlb
sub
add
xorl
xor
cmpsl
int3
xchg
loope
xor
push
push
scas
or
shlb
je
movsb
das
sbb
sub
and
xor
add
and
mov
addr16
pop
dec
mov
fcmovne
mov
aad
inc
xchg
fistps
add
push
shlb
repnz
popa
test
add
cmpsb
or
adc
or
addr16
clc
xchg
pop
xor
in
ds
and
pop
mov
sbb
dec
mov
or
fadds
lret
daa
jmp
and
or
push
inc
popa
dec
inc
mull
push
xchg
fidivrs
push
inc
popa
mov
aas
mov
ja
iret
adc
lret
mov
pop
add
dec
rcll
ret
pop
out
and
in
dec
or
lahf
mov
pushf
xor
mov
sbb
dec
adc
mov
add
push
out
mov
nop
jmp
jle
xchg
cmp
add
sub
pop
sbb
mov
xchg
enter
xorb
mov
mov
add
into
arpl
add
test
out
loop
mov
add
mov
rcrl
lods
aam
pop
mov
mov
fidivl
es
fdivrl
out
sub
fldenv
cltd
test
loope
test
inc
scas
ret
mov
imull
inc
lret
mov
xchg
mov
pop
cmp
add
xor
mov
outsb
dec
jle
outsb
mov
sub
adc
ja
pop
dec
mov
outsb
sub
inc
add
std
dec
roll
xchg
pop
cmp
sub
mov
mov
sbb
aam
aas
jne
shlb
mov
and
test
cmpsl
ficomps
call
add
hlt
cmc
repz
bound
sbb
inc
jns
inc
ss
push
add
cmpb
jg
stos
test
popa
sbb
sub
cmpsl
mov
aas
mov
jmp
out
scas
hlt
cmc
mov
pop
and
pop
push
jnp
shrb
and
loope
jl
xor
and
idivl
mov
movsl
roll
or
sub
das
fdivp
lahf
mov
lret
jo
pop
aad
or
sahf
jge
or
das
sbb
lock
mov
and
stos
mov
mov
fucomi
rol
dec
stos
daa
call
daa
xchg
leave
adc
mov
jno
add
dec
pop
add
jle
out
push
mov
addr16
pushw
xchg
dec
or
nop
mov
hlt
addr16
add
sbb
xchg
jns
sub
roll
xchg
and
lret
xchg
addr16
mov
mov
mov
mov
mov
sbb
sti
mov
pop
inc
push
daa
xor
jae
xchg
mov
lahf
mov
ficompl
pop
repnz
ret
adc
pop
out
lahf
cli
dec
or
pop
in
dec
faddl
lds
iret
jmp
andl
repnz
sti
pop
rcr
sbb
div
adc
sub
cwtl
notl
cli
ds
stos
push
pop
mov
mov
inc
les
pop
xor
ror
xchg
mov
mov
inc
or
inc
data16
sbb
shlb
cmp
mov
cs
in
pop
mov
movsl
mov
sub
dec
jecxz
jmp
call
je
cmc
cld
lock
test
jnp
scas
je
xor
and
mov
mov
inc
stos
mov
stos
inc
les
jne
lock
jns
call
jnp
xchg
shll
pop
jnp
loopne
lock
imul
pop
mov
filds
jl
fimull
adcl
jno
mov
mov
push
ret
dec
adc
push
jne
icebp
in
ffree
jb
dec
stos
scas
xorb
push
dec
mov
or
fwait
mov
rol
mov
mov
iret
insb
mov
add
inc
cltd
movsb
push
xchg
mov
nop
insl
ljmp
mov
ret
mov
ljmp
aas
loope
adc
push
xchg
out
out
loope
sub
mov
fdivl
sub
dec
shl
addr16
sbb
es
insb
mov
pop
jg
xor
xor
sbb
testl
pop
dec
lods
fcomps
add
cmp
filds
jae
xor
ficompl
aaa
push
sbb
rcrb
aas
sahf
xor
xorb
divl
cmp
into
xor
loop
cmp
dec
inc
inc
cs
fcmovbe
stos
inc
pop
stc
fstp
test
add
mov
pop
jmp
sbb
xor
cmc
adc
jge
cmp
nop
loop
mov
and
js
mov
push
imul
push
imul
push
dec
cmc
jb
cmp
cmp
cmp
sub
dec
ja
mov
push
pop
sbb
shl
adc
out
pop
mov
mov
pushl
fdivr
mov
xorl
mov
mov
cmp
mov
sub
and
mov
cli
test
sbb
fsubrl
lods
popf
test
and
inc
pop
shr
cmpxchg
cld
and
sub
lock
pushf
or
leave
mov
add
faddl
mov
icebp
add
or
int
fwait
inc
mov
mov
jg
jnp
lahf
scas
or
cwtl
ffreep
aaa
sub
ljmp
std
dec
lahf
aaa
lea
and
test
iret
mov
cmp
ret
cwtl
aas
cmp
jecxz
add
sti
test
mov
pop
push
in
sub
test
mov
inc
inc
xadd
dec
mov
adc
mov
fiadds
fidivl
xor
lret
xchg
xor
movl
mov
add
dec
fmul
cwtl
jmp
lods
jmp
fmul
or
mov
hlt
dec
jne
jge
sub
scas
pusha
test
xchg
push
leave
out
out
scas
pusha
jecxz
ret
lea
dec
cmp
mov
shrb
dec
fidivl
loopne
and
shll
dec
push
les
jo
rolb
mov
dec
cwtl
icebp
sub
mov
mov
mov
or
pop
mov
pop
je
in
rcrl
sub
adc
mov
xchg
push
inc
dec
std
cmp
dec
fwait
xchg
mov
aas
cmp
xchg
in
aas
jns
ficoml
fists
stc
hlt
loop
cmc
sbb
mov
add
fcompl
pusha
sti
outsl
std
push
les
lahf
cmpsb
sbb
mov
mov
inc
push
jl
push
jp
cld
pop
shrb
xor
in
sbb
mov
insb
sbb
lds
mov
push
dec
test
in
xchg
fidivs
mov
call
cmp
mov
sub
sub
pushf
and
dec
xchg
fidivrs
mov
lods
outsl
loopne
cmp
mov
mov
lds
in
das
shlb
mov
xchg
fneni(8087
mov
leave
cli
mov
adc
add
sbb
xor
outsl
mov
aaa
jno
mov
ffreep
loopne
jae
outsl
fidivs
cmp
add
aas
std
ljmp
cmpsb
inc
pop
daa
div
shl
ljmp
hlt
stos
jmp
fisttpl
push
jbe
mov
decb
lret
outsl
mov
daa
arpl
in
cltd
jns
aas
sti
or
pop
ljmp
mov
mov
pop
dec
pop
out
pop
xchg
inc
fdivl
stos
stc
pop
push
add
clc
repnz
jmp
fsubrs
cmp
loop
dec
fidivl
cli
stc
dec
pop
inc
sbb
mov
mov
das
sub
stos
pop
pop
cmp
mov
ja
ds
push
filds
mov
inc
filds
inc
ds
add
sbb
jns
mov
lods
fistpll
dec
lock
mov
mov
mov
jmp
mov
aas
mov
stc
adc
stos
in
fldcw
subb
aaa
cmp
add
pusha
add
inc
ret
mov
sti
cli
clc
mov
das
fwait
lds
test
cwtl
ljmp
popf
pop
rcll
roll
ljmp
cwtl
lods
mov
shlb
jnp
lahf
lods
cld
or
push
push
pop
movsl
in
cmp
fldenv
inc
sub
push
mov
decl
fdivl
mov
mov
mov
shlb
rcr
or
xor
mov
idivl
stc
sti
push
mov
pop
loop
push
jnp
inc
lds
mov
push
rdpmc
push
or
lods
mov
push
or
jo
sub
mov
rdpmc
push
jmp
xchg
mov
dec
mov
popf
imull
repnz
or
fwait
xchg
inc
fmuls
jne
xchg
cmp
ficomps
mov
aaa
inc
pusha
scas
and
pmullw
mov
das
fdivl
mov
mov
sbb
xchg
sarl
mov
cwtl
jmp
aaa
fdivr
gs
in
addr16
stc
mov
aam
or
leave
fsubl
jge
sub
cmp
shlb
fnstsw
push
gs
js
inc
add
or
imul
mov
pusha
mov
movsb
mov
mov
mov
ret
mov
pop
sti
mov
pop
stos
mov
xor
push
mov
icebp
push
dec
in
or
cmp
jo
jmp
add
hlt
and
xlat
pop
out
mov
mov
or
sub
or
pop
add
xor
call
pop
jle
stos
jecxz
adc
mov
testl
sub
leave
adc
fidivrl
sbb
mov
test
das
jne
dec
dec
fbld
or
sbb
data16
popa
mov
push
enter
ret
xorl
mov
in
inc
aaa
cmp
insb
imul
or
das
mov
mov
rcr
leave
ret
xor
imul
mov
imul
mov
and
pop
fwait
fwait
mov
jo
cs
data16
or
aad
in
cli
xor
dec
sub
in
nop
cmp
mov
ret
mov
and
shl
shrl
and
icebp
xchg
adc
sbb
mov
adc
mov
jns
aas
lret
and
mov
pop
sub
cwtl
divl
enter
in
insb
sti
stos
xchg
sarl
mov
ljmp
xchg
cwtl
divl
mov
push
mov
mov
rol
xchg
movsl
cs
test
sbb
idivl
push
mov
out
cmp
cmp
add
das
xor
mov
leave
mov
gs
addr16
incl
mov
fdivrp
and
imul
stos
dec
mov
mov
and
cmpsb
cmp
cld
lock
and
mov
repnz
ret
testb
push
pop
cmp
adc
dec
cmpsb
mov
dec
lock
jns
movsl
ljmp
incl
dec
clc
and
stos
in
and
mov
cmp
mov
jl
fidivl
lcall
cmp
dec
mov
pop
mov
inc
mov
add
cmp
mov
data16
out
nop
pop
mov
mov
pop
jecxz
push
test
insb
xor
mov
sbb
mov
xchg
adc
stos
clc
cmp
icebp
out
cmp
add
mov
in
pop
push
mov
mov
iret
int
mov
cmp
cmc
push
in
pop
sub
mov
mov
xchg
stos
jno
sbb
push
in
pop
fimuls
pop
mov
int
mov
ds
mov
fs
or
push
test
fldt
fmull
mov
bound
int
cmpb
leave
das
stos
jge
sub
fdivl
xor
int
jp
jecxz
mov
add
shlb
pop
aas
inc
cs
push
adc
jecxz
pop
push
sub
nop
fdivl
or
or
mov
imull
test
sub
fimull
mov
sub
or
xlat
pushl
mov
stos
stos
mov
mov
mov
cmp
mov
shrb
aam
sarl
lods
xor
mov
cmp
divl
fnstcw
ret
leave
xchg
xchg
jne
jmp
jnp
leave
lret
gs
jg
jne
mov
xor
xchg
dec
adc
lds
pop
mov
mov
lcall
sbb
xor
sarb
mov
push
ret
sub
lock
enter
xor
jns
pop
mov
rclb
mov
mov
fiaddl
out
imul
xor
inc
imul
push
adc
in
fsubrl
sub
int
leave
lret
aaa
cltd
push
mov
cmp
mov
push
ja
fsub
int3
push
cmpsl
mov
push
ds
bswap
cmp
movsl
out
mov
ds
bswap
cmp
mov
push
xor
jbe
jecxz
fimuls
into
xor
mov
out
adc
mov
xchg
pop
shll
stos
jae
xchg
aaa
xorl
iret
sub
pushl
xchg
out
mov
dec
xchg
pusha
sub
je
or
mov
and
subl
push
fcoms
fdivrp
adc
out
and
sub
jno
lea
xlat
mov
pop
dec
sub
test
mov
xor
es
shll
pop
fistpl
inc
sub
jnp
in
jmp
jg
scas
je
pop
movsl
mov
cmpl
data16
and
jne
cmpsl
subl
xor
fistpll
jge
arpl
fisubrs
xchg
mov
xor
sahf
aas
adc
mov
xorl
jge
jp
sbbl
test
mov
lret
popl
sbb
das
sub
mov
xchg
sarl
popa
mov
inc
stc
and
inc
cmp
inc
mov
inc
pop
in
mov
jb
inc
sub
jge
sub
cmp
stos
shlb
cmp
jge
sub
dec
mov
jo
and
and
cld
and
in
sbb
jb
and
testb
lcall
loope
cmpsb
push
inc
movsl
pop
xor
cmp
jp
xlat
mov
sub
mov
repnz
jns
adc
xchg
das
xor
scas
aad
cmp
inc
rol
sarb
fidivrl
mov
cmp
outsb
aas
push
aad
jnp
cmp
jg
cmp
jno
cmp
out
add
mov
cmp
mov
mov
mov
inc
mov
out
andl
mov
hlt
in
test
mov
dec
in
sub
fwait
imul
or
xor
adc
test
jnp
mov
jp
add
fisubrl
sub
pop
mov
or
mov
movsb
loopne
int
aam
mov
divl
lret
cld
dec
fstps
sub
mov
mov
or
jge
aas
outsl
cltd
jnp
mov
and
mov
dec
adc
pushf
stos
xchg
jo
fabs
out
bound
mov
ja
jp
push
imul
sbb
mov
inc
or
push
and
adc
adc
das
rorb
jnp
pushl
dec
jg
testb
or
stc
movsl
mov
pop
and
dec
add
repz
xor
shrb
lock
dec
leave
orb
outsb
cli
mov
cwtl
add
mov
test
pop
cmp
dec
mov
and
and
adc
mov
daa
repz
rol
cmp
leave
roll
sbb
orl
push
ds
dec
lahf
adc
jns
or
xor
add
shrb
xchg
fisttpl
push
push
inc
flds
adc
mov
xchg
popa
and
xchg
sarb
addr16
jnp
sub
outsl
jg
mov
adc
pop
cmp
rcrl
bound
sahf
icebp
in
mov
lea
cld
idivl
adc
mov
loope
dec
in
cltd
test
js
xchg
nop
hlt
lret
xlat
cmp
stos
and
inc
movl
scas
clc
push
inc
cwtl
or
hlt
stc
loope
sbb
adc
sub
jle
xchg
and
xchg
or
repz
cltd
and
mov
mov
mov
jl
xchg
in
je
pop
jmp
loope
pop
dec
popa
outsl
cld
sahf
lret
push
into
test
xlat
dec
sub
jnp
dec
mov
cmp
ret
insl
imul
jmp
rorl
or
inc
out
jecxz
pop
jbe
shlb
mov
pusha
insl
cmp
lret
xor
mov
imul
cmpl
push
mov
sti
push
call
es
pusha
into
addr16
daa
mov
and
adc
push
jmp
bound
xor
repz
test
in
adc
cmp
mov
adc
xor
mov
hlt
outsl
cmp
lret
orl
fstps
das
add
adc
in
jle
cltd
sub
mov
push
sbb
daa
fcmovnb
loope
push
push
jmp
push
fsubrl
pop
test
xchg
push
jmp
push
pop
mov
or
cmpsl
xor
dec
into
or
xchg
orl
jb
push
push
movq
jp
inc
sub
fildll
mov
int
movl
insl
ja
arpl
fmull
hlt
or
out
mov
mov
inc
push
loope
mov
sarl
into
bound
movsl
lock
int
xlat
cmp
cmovp
xchg
and
lahf
sbb
jb
mov
push
sub
leave
push
test
mov
sub
leave
mov
fcompl
movsb
mov
out
mov
in
sbb
mov
lar
and
or
enter
mov
fcmovbe
ja
mov
and
fsubrl
not
jnp
fisubs
cmp
scas
mov
and
jg
cmp
scas
scas
dec
push
stos
mov
adcl
mov
pop
repnz
out
push
dec
xchg
in
and
cmp
inc
in
sub
pop
mov
pop
or
ret
fwait
lahf
push
mov
mov
push
cmp
call
shlb
xchg
push
mov
ret
mov
sub
mov
lds
jecxz
xchg
xchg
ffree
mov
lods
inc
dec
ss
and
inc
dec
and
ss
clc
fadd
insb
pop
sub
jecxz
out
out
test
sarl
pop
lds
outsl
xor
cli
out
add
shl
cli
jle
shlb
sbb
decb
clc
stc
mov
mov
xor
fs
mov
jns
lock
inc
xchg
addl
xor
rol
loop
xchg
jmp
fbld
cmp
lret
in
add
jno
outsb
iret
inc
xor
or
imul
clc
repnz
ud0
loope
sahf
icebp
fistl
or
mov
mov
mov
and
loop
sarl
mov
les
pop
jno
jns
fdivs
mov
insb
mov
neg
sub
loopne
push
mov
test
pop
outsb
fidivs
bound
mov
ret
sub
sub
ja
leave
shll
and
js
insl
aaa
lret
aas
push
or
enter
mov
lret
sub
fsub
pop
add
out
add
xor
lret
and
push
add
jg
and
mov
js
sbb
in
mov
scas
rcrl
xor
mov
mov
pop
fistpl
mov
stos
fdivl
ljmp
iret
jl
ficompl
mov
inc
mov
sub
dec
jg
sti
adc
stos
mov
mov
cwtl
jno
movsl
or
loopne
fisubs
loopne
fstpt
dec
mov
lea
icebp
lock
or
jmp
xchg
lods
mov
insl
mov
xchg
inc
adc
push
sti
loope
leave
mov
lock
test
int
mov
mov
mov
cmp
sub
fdivp
movsb
push
mov
int3
divb
mov
fimuls
mov
test
fsubrl
idivl
scas
imul
outsb
sub
pop
add
xor
movsl
iret
cmp
add
mov
pop
repnz
imul
push
loop
mov
stos
jns
pop
xor
jle
dec
std
out
sub
mov
pusha
push
fdivl
lret
lret
cltd
aaa
rcrb
std
int
jp
loope
mov
push
jg
mov
pop
jecxz
fisubrl
cmpsl
pop
push
dec
js
loopne
jnp
dec
push
icebp
dec
jp
xchg
dec
fmuls
aaa
and
and
nop
xchg
jnp
aas
jae
inc
dec
mov
dec
push
repz
jnp
add
mov
or
xchg
lmsw
fbstp
leave
xlat
clc
outsl
inc
sti
mov
add
or
lods
dec
add
pop
adc
enter
mov
shlb
sbb
cld
adc
out
mov
pop
fiadds
dec
lahf
or
lock
iret
shl
aam
xlat
out
cmc
and
push
mov
lahf
aam
jns
or
cmpsl
or
insb
aas
rorl
test
ja
aad
cs
dec
xchg
mov
pop
stos
jle
xor
pop
mov
xchg
cmpsb
loop
jnp
xor
arpl
aad
rcrl
mov
push
inc
xchg
mov
mov
aad
in
lcall
jmp
out
cmp
int3
icebp
mov
jmp
push
leave
dec
sub
xlat
jne
or
loop
adc
fidivl
imul
test
into
out
lret
mov
mov
mov
mov
jge
sub
clc
pop
jae
sbb
sahf
rcl
xor
mov
shrl
inc
push
xor
dec
dec
hlt
fwait
clc
mov
and
dec
mov
mov
mov
mov
in
cmp
clc
mov
cmp
fisubl
stos
outsl
and
mov
pop
push
mov
lret
lds
mov
xor
hlt
cmp
and
mov
ret
fcmovb
mov
push
andb
lahf
test
lret
sarl
pop
cmpb
loope
es
mov
pop
or
and
lret
mov
mov
xor
loop
rclb
and
fiaddl
sub
fwait
jg
fs
inc
lds
mov
xlat
mov
pushl
lret
jnp
int
shrb
mov
lret
mov
sar
lret
stos
dec
in
inc
mov
mov
pop
jge
lods
xchg
sbb
sbbl
or
jecxz
mov
outsb
stos
shlb
jg
fimull
sbb
cmp
jns
or
popf
mov
mov
mov
push
sahf
mov
dec
fdivl
mov
mov
sbb
or
and
mov
gs
mov
test
ficoml
mov
mov
xchg
and
dec
pop
icebp
dec
push
dec
add
stos
xlat
lret
movl
notb
sahf
xor
mov
je
fsubrl
sbb
lods
or
mov
and
add
mov
mov
test
fdivrp
jne
push
mov
xor
int
lret
adc
mov
mov
jnp
dec
pop
jge
sub
adc
inc
leave
inc
pop
sbb
iret
add
fmuls
lods
in
cmp
aas
fldenv
ds
sub
or
iret
push
sbb
dec
inc
scas
in
cmp
pop
mov
and
fisttpl
xor
mov
sarl
sarb
xor
fisubl
loopne
mov
sarb
mov
xchg
jnp
cmpb
push
sub
mov
and
mov
jp
jle
push
mov
xlat
sub
lahf
and
out
mov
mov
mov
mov
cld
mov
in
cmp
cs
jle
iret
jge
fcmovbe
test
xchg
xchg
mov
jmp
pop
mov
stos
jmp
cmp
mov
gs
fsubp
lds
pushf
jmp
pop
or
into
xchg
gs
jmp
fucomi
fcompl
jl
sbb
lods
jnp
outsb
xlat
ds
add
cmp
cmp
inc
jns
lahf
outsl
outsb
cs
aas
mov
jns
mov
mov
mov
jns
mov
mov
mov
fwait
push
rolb
fldt
pop
push
mov
mov
js,pn
aas
mov
push
test
mov
cmp
shlb
and
cld
fidivs
xlat
sbb
mov
push
add
mov
je
cmp
std
in
xlat
stos
popa
mov
push
imul
stos
fidivrl
cs
xor
mov
mov
lods
jnp
call
lds
aad
fdivrl
mov
mov
adc
mov
push
dec
mov
dec
ljmp
rcl
and
mov
cmp
jge
fisttps
out
or
mov
mov
scas
fisttpll
mov
pop
ficoms
sub
fistpl
lret
inc
fsubl
jle
sahf
fsts
aad
orl
mov
cmp
shl
movsb
sub
sbb
xor
ljmp
mov
mov
mov
outsl
dec
jle
sbbl
sub
incl
jbe
test
mov
filds
inc
clc
mov
outsl
fldt
rclb
push
mov
test
call
push
mov
test
mov
mov
cmc
or
outsb
fidivl
lret
dec
outsb
mov
pushl
int3
fildll
xor
jne
orb
mov
lret
int
pop
mov
mov
xor
mov
cld
iret
scas
sbb
xchg
addb
cmp
dec
inc
and
mov
pusha
out
mov
sbb
inc
cmp
aas
mov
cmp
scas
xor
ljmp
out
fnstsw
pop
xchg
push
std
mov
jecxz
popa
xor
nop
cs
or
xor
inc
sti
fcmovu
out
xor
mov
loop
adc
ja
adc
pop
jle
jae
mov
or
mov
mov
cmpsl
inc
inc
ja
jge
xor
inc
cmp
gs
fidivrl
mov
sarb
xor
repz
repnz
mov
stos
jle
mov
add
mov
jecxz
fsubp
test
mov
mov
loop
mov
mov
subl
sub
out
lcall
in
rol
lahf
lods
ljmp
movsl
ds
aam
outsl
lods
call
mov
loop
xchg
shrb
and
adc
lea
mov
aam
sahf
add
cli
incl
push
sbb
jg
xor
dec
sbb
rep
sahf
push
stc
and
or
btc
xchg
shl
cmpsl
lret
rol
iret
inc
jmp
ret
inc
sbb
call
fimuls
les
cmp
adc
stc
sbb
mov
add
popf
adc
push
jmp
jge
repnz
test
fisubl
xchg
sahf
mov
icebp
pop
xlat
pop
fdivrs
sbb
pop
test
sbb
push
test
ja
pushf
mov
pop
or
fildl
lahf
xor
jle
or
mov
sbb
cmp
xchg
popf
cmc
stos
jbe
lods
sarl
xor
ja
xor
dec
dec
xchg
inc
cmp
xchg
fstpt
int3
in
mov
leave
pop
mov
jl
inc
xchg
cmp
mov
shlb
jp
cwtl
cltd
sahf
out
lahf
adc
xchg
cmpb
xchg
xchg
push
leave
xlat
lret
das
ror
and
mov
mov
mov
and
insl
mov
jo
xchg
fldt
or
nop
pop
push
in
shl
or
ja
aad
mov
sub
ljmp
enter
jmp
test
jbe
popa
xchg
adc
push
inc
pusha
leave
and
cmp
mov
clc
pusha
sub
scas
mov
scas
lods
ret
or
mov
mov
mov
in
fs
inc
mov
cmp
push
jno
sbb
leave
inc
jle
addl
imul
mov
sti
js
mov
and
test
shlb
outsl
loopne
adc
mov
repz
lret
push
lods
stos
adc
scas
imul
mov
ljmp
pop
sbb
pushf
mov
lods
pop
dec
cmp
jnp
imul
jle
pop
mov
mov
outsb
sbb
in
mov
loopne
pop
xchg
adc
sti
jmp
or
out
push
push
insl
popf
lea
std
in
sbb
mov
push
add
loope
adc
fildll
cmp
cmp
lret
cmp
mov
jg
cli
push
fistps
mov
scas
ret
lret
or
imul
ds
mov
inc
outsb
int
sahf
imul
loopne
cmp
and
pushf
negb
andl
dec
jmp
bound
adc
dec
pop
out
inc
aas
daa
sbb
xchg
dec
lock
jp
add
call
dec
cmp
mov
shl
std
dec
divl
jp
xbegin
lods
js
mov
int
mov
xchg
jmp
xchg
push
cwtl
scas
cld
cmpsl
cmp
aaa
pusha
js
pop
stc
or
into
sub
orb
push
cmpl
sbb
fiaddl
int3
mov
lret
fstpt
pop
cwtl
ret
inc
pop
mov
adc
daa
js
dec
popf
add
sbb
shr
jge
sub
andb
or
insl
adc
push
sbb
test
pop
or
lods
inc
mov
movl
insb
mov
xchg
jnp
inc
dec
je
inc
testb
cmp
test
hlt
shlb
daa
inc
sub
inc
xchg
xchg
cmc
loop
addr16
mov
cmc
sarb
xchg
mov
fmull
xor
mov
dec
stc
mov
mov
or
xor
xchg
in
fs
aas
mov
outsb
rolb
xchg
insb
adc
mov
sub
xor
das
orl
arpl
mov
sbb
add
xor
xchg
mov
push
dec
sbb
fistps
mov
shr
xor
mov
andb
dec
adc
cmp
mov
jecxz
mov
outsl
insl
fs
into
out
mov
lret
rcll
push
les
inc
mov
out
jbe
jnp
fildll
add
mov
xor
cmpl
mov
dec
ja
in
cs
jp
xchg
dec
call
lret
or
adc
pusha
inc
adc
rcr
mov
xchg
add
push
test
push
and
adcb
jbe
adc
pop
scas
test
mov
out
insl
in
push
push
mov
addr16
call
inc
dec
in
or
dec
cmp
movsb
bound
insb
xchg
inc
hlt
inc
mov
adc
repnz
add
sub
inc
mov
js
ret
xchg
inc
jge
mov
push
jne
imul
fists
hlt
xor
dec
jecxz
clc
movl
int
sub
sbb
sbb
movl
dec
repz
push
add
xchg
movl
aad
push
fistpl
roll
or
mov
sbb
xchg
add
mov
lcall
jmp
push
cwtl
mov
or
packssdw
mov
sub
aad
shlb
dec
pop
in
inc
test
xor
aam
sub
mov
out
add
call
sahf
inc
cs
lock
dec
pusha
jae
xchg
mov
fistpl
inc
mov
or
inc
in
xor
bound
dec
lret
and
mov
in
pop
shrl
fs
adc
cmc
ss
mov
push
cmpsb
jle
call
pop
cld
mov
cmp
push
mov
cmpsb
dec
les
in
xorl
mov
call
gs
sahf
lret
dec
push
mov
lock
xchg
or
cmpsl
mov
stos
or
sub
inc
je
dec
dec
sbb
das
mov
mov
mov
xchg
push
int
pop
sbb
mov
pop
in
jmp
cmp
stos
mov
mov
cmpsb
in
push
and
pop
add
and
lods
mov
pop
xchg
adc
into
mov
xor
fldl
mov
sbb
mov
scas
es
and
shrb
push
cmp
loope
fwait
lods
ss
jo
ds
xchg
lea
and
add
cld
in
ljmp
in
adc
into
rol
addl
inc
mov
leave
xchg
push
lds
data16
shrb
iret
mov
and
addr16
lds
xchg
ret
add
mov
dec
pop
popf
stc
rolb
or
jecxz
dec
int
sub
xchg
xchg
out
mov
or
mov
xor
pop
daa
into
repz
mov
rol
mov
lock
adcl
pop
js
jp
test
mov
mov
daa
rorl
adc
add
sub
outsl
jecxz
xor
or
test
inc
out
fildl
mov
xchg
lds
push
adc
mov
sub
xchg
outsl
testl
or
jb
rorb
xchg
ja
dec
in
movl
cmpl
jno
or
sub
adc
mov
loopne
mov
push
rorl
xchg
ror
daa
dec
icebp
outsl
je
jmp
es
push
movl
xchg
dec
sbb
loopne
notb
and
dec
hlt
sahf
or
jnp
add
popa
cmc
pop
out
xor
fs
inc
sub
mov
outsl
push
mov
mov
dec
mov
in
mov
inc
call
push
jno
nop
inc
mov
in
sub
out
stos
cmp
mov
sti
int3
xchg
jge
lods
xchg
adc
mov
std
out
je
and
xchg
lcall
inc
adc
in
ljmp
rol
movsl
imulb
jb
mov
add
test
or
orb
loope
sahf
xor
mov
das
in
icebp
cmpsb
movsl
ret
push
rcrl
push
mov
xadd
ja
fwait
orl
xchg
call
jno
sub
xchg
adc
mov
jmp
mov
push
xchg
ss
adc
aas
mov
scas
mov
inc
call
or
cmpsl
mov
adc
xor
mov
jae
pop
pop
and
mov
sub
mov
lds
cld
inc
outsl
neg
add
aas
add
movsb
cmp
in
adc
mov
push
mov
sbb
xor
push
adc
cwtl
push
mov
leave
inc
pop
jp
adc
xor
lea
sbb
jo
fisubrs
out
add
stc
jecxz
bound
inc
sub
push
xchg
xchg
inc
fst
out
in
fadds
mov
or
lret
cli
add
std
aad
adc
cmp
dec
inc
fdivl
nop
aas
xchg
and
jg
data16
popf
clc
pop
cmpps
mov
pusha
inc
idiv
in
data16
cmp
rorb
inc
sub
gs
push
cli
das
push
rol
mov
pop
jmp
push
inc
xchg
pop
leave
adc
pop
add
cwtl
inc
lahf
cmp
dec
lret
xchg
lcall
outsb
cs
pop
mov
push
dec
cmp
add
ret
dec
addr16
cmpsb
fildl
loopne
cwtl
ret
fs
sub
es
push
and
inc
dec
jg
ja
or
push
les
out
mov
inc
movsl
orb
movl
xchg
pusha
ljmp
outsb
loop
lock
sub
inc
or
ffreep
sub
push
call
sbb
popa
mov
jl
mov
fs
pushf
push
dec
or
ret
flds
shll
xor
or
add
push
sbb
mov
dec
repz
jp
rol
inc
sbb
lods
mov
dec
pusha
sbb
fs
mov
pop
adc
cli
movsb
out
sbb
ret
movsl
push
imul
xchg
mov
mov
daa
mov
mov
push
fists
push
in
dec
pop
jmp
movsb
xchg
andb
mov
mov
inc
and
and
outsl
data16
movl
ljmp
lods
push
push
insb
pusha
pop
and
int3
inc
mov
leave
cli
inc
jp
outsl
outsl
daa
shl
orb
jmp
leave
dec
cwtl
mov
mov
je
addr16
jmp
push
dec
ffree
mov
icebp
aad
cwtl
fbstp
cmp
inc
mov
and
dec
mov
loopne
mov
addr16
popf
sahf
rorl
pop
lock
scas
mov
icebp
add
shl
mov
cmp
ret
mov
jecxz
aam
ja
cmp
rcl
mov
xor
dec
mov
fstl
jne
lds
mov
rol
mov
bound
test
push
or
fcomps
mov
rol
fmull
and
mov
nop
cltd
push
inc
jle
pop
push
lods
mov
jg
lock
dec
push
dec
or
xor
test
mov
xor
les
int
push
das
popf
movl
inc
mov
sahf
pop
push
incl
and
or
out
mov
in
inc
jp
add
dec
xor
inc
mov
jne
mov
push
test
mov
mov
adcb
cli
mov
pop
sub
mov
jge
imul
push
imul
clc
out
dec
ret
and
pop
xchg
imul
es
jl
in
mov
in
mov
xor
mov
not
lret
insl
cltd
xchg
lret
incl
mov
dec
rcll
jbe
adc
cwtl
psubsb
and
lock
mov
xchg
stos
out
addr16
dec
in
dec
shlb
in
sahf
mov
les
arpl
iret
out
dec
xor
adc
inc
rclb
jbe
js
out
push
inc
cld
hlt
pop
add
shlb
xchg
jbe
sub
outsl
sub
xchg
mov
push
popa
sub
and
stos
and
sahf
cmp
xchg
jmp
test
sbb
push
ja
test
sahf
loope
mov
mov
jl
or
mov
dec
dec
add
inc
sub
pop
push
pop
push
jno
inc
dec
dec
cmpsl
push
test
xchg
ss
jmp
scas
add
cmpsb
dec
xchg
daa
hlt
loop
inc
jle
push
cli
ficoms
sbb
xchg
lahf
adcl
ficoms
scas
and
arpl
push
pop
sub
dec
js
movsb
mov
xlat
adc
sbb
test
dec
in
xchg
xchg
inc
movl
and
outsb
lods
xchg
adc
add
adc
inc
leave
and
ljmp
lds
mov
fucomp
movsl
jp
push
ss
loop
daa
les
pop
or
push
push
mov
push
jo
das
leave
hlt
xchg
dec
in
ret
pop
mov
lds
xchg
lock
mov
sbb
rclb
sbb
cmp
icebp
adc
gs
push
subb
pop
sub
pop
mov
int3
scas
popf
sub
cwtl
jmp
dec
out
dec
data16
sbb
pop
and
jecxz
cltd
mov
clc
mov
movsl
pop
xor
xlat
das
cwtl
pop
popa
add
dec
int
push
jecxz
or
retw
sbb
clc
roll
cs
cmp
push
movsl
xchg
shlb
fwait
push
mov
jae
xchg
test
out
cltd
or
push
dec
test
mov
outsl
lcall
inc
out
mov
adc
and
push
adc
mov
mov
movl
push
mov
push
xchg
mov
jl
aad
cmp
jg
addb
or
inc
pop
adc
adc
cmpsb
call
xchg
mov
mov
jbe
lods
dec
jb
out
sub
out
sbb
cmp
leave
mov
mov
mov
and
call
inc
dec
xlat
mov
mov
stos
cmpsw
and
push
sbb
test
out
xor
sahf
jb
add
clc
test
jbe
sbb
mov
testb
push
cmpsl
insb
das
and
mov
leave
popa
mull
or
and
inc
pop
lahf
or
sub
test
mov
mov
ss
pop
adc
bound
nop
adc
icebp
inc
cmc
add
sub
sub
xchg
mov
cmpsl
push
call
mov
and
or
sbbb
mov
mov
es
insl
lahf
aas
sbb
into
cmpb
xchg
fcomps
add
xor
cmp
jmp
dec
and
add
adc
add
mov
inc
fwait
mov
jmp
clc
push
xor
scas
mov
bound
lahf
pop
hlt
dec
test
mov
insl
push
pop
push
xor
bound
push
and
rclb
rcll
in
add
ret
push
cwtl
ret
and
out
and
push
push
mov
dec
cmp
dec
xchg
mov
out
add
adc
push
jl
mov
addr16
xchg
mov
lods
loope
lock
cwtl
enter
xchg
push
mov
or
mov
rorl
sub
mov
in
jl
cmc
outsl
mov
xor
and
mov
insl
cld
adc
adc
pop
pop
sarb
sbb
add
xchg
ret
and
mov
orb
movl
inc
popa
or
pop
mov
adc
sub
pop
or
mov
dec
in
push
dec
ror
sbb
out
adc
rolb
ret
add
je
repnz
pop
xchg
push
mov
xchg
daa
xor
shrl
movsb
dec
mov
roll
adc
push
mov
jo
imul
add
loopne
and
mov
mov
arpl
cli
xabort
std
ljmp
xor
xor
sbb
cmpsl
es
repz
in
push
aaa
sbb
mov
xchg
dec
stc
out
add
jl
adc
ficoms
cld
ret
jmp
lcall
pop
pusha
in
std
in
mov
test
shr
es
xor
dec
push
mov
movb
das
repz
xchg
arpl
repnz
dec
pop
ret
cmp
dec
mov
mov
add
fs
or
inc
mov
dec
roll
dec
scas
rcr
mov
movsb
inc
jecxz
pushf
call
mov
and
movl
call
addr16
mov
or
inc
add
mov
xchg
add
cwtl
adc
dec
push
or
mov
or
pop
fidivl
lods
stc
push
clc
inc
aad
out
std
mov
rclb
jnp
pop
jg
jne
inc
mov
sarb
jmp
dec
push
cmp
mov
es
ds
int
cmp
shl
add
std
dec
pop
adcb
pop
inc
and
mov
cmp
xchg
movl
mov
aam
dec
ret
loopne
test
sbb
test
imul
or
mov
jmp
leave
xor
jg
inc
roll
mov
cld
in
or
mov
ljmp
and
cld
int
sub
jle
lret
inc
dec
loope
repnz
and
shll
sub
scas
psubusb
js
push
cmp
cli
ret
add
dec
xchg
in
jmp
dec
xchg
add
and
outsl
movsl
pop
insl
aad
cmp
lods
mov
ret
sub
stc
adc
fistpl
or
in
mov
ret
call
jb
dec
pop
xchg
inc
mov
lds
hlt
push
pushf
mov
mov
rorl
pop
subb
pop
mov
pushf
sbbb
jge
lea
xchg
xor
push
movl
aaa
mov
mov
lds
shlb
and
hlt
or
lock
xorl
jecxz
sub
inc
and
js
cmpsl
and
mov
cli
push
mov
fldl
cmc
pop
data16
jecxz
insb
in
mov
addr16
and
or
adc
pop
cmp
loopne
inc
mov
push
jo
adc
mov
incb
fwait
jnp
jle
inc
xor
cs
pop
gs
icebp
pop
adc
lret
int
insl
mov
rorb
pop
add
sub
pushf
lods
push
add
ja
add
jmp
out
mov
inc
insl
mov
lds
xadd
call
lret
sbb
insl
mov
sbb
hlt
mov
mov
push
mov
push
cmpsl
dec
and
fs
dec
jg
mov
loopne
aaa
jo
dec
xlat
cmp
push
ja
sbb
and
inc
movsl
fs
iret
lcall
mov
mov
pop
xor
and
lret
push
and
outsl
jmp
scas
add
jmp
ds
movsl
and
or
xor
xor
call
pusha
xlat
dec
or
dec
lods
sub
daa
andb
push
lds
ret
loope
movsl
repz
adc
shll
outsl
sub
xlat
in
sahf
mov
in
and
or
dec
xbegin
ss
adc
fnsave
stos
mov
inc
sbb
mov
pusha
and
push
or
rorb
push
inc
popa
sub
mov
cmpsl
ds
dec
jge
xor
xchg
sarl
movsb
adc
and
and
adc
push
das
jmp
addr16
in
or
pop
fisubl
mov
cmpsb
sahf
inc
outsb
adc
repnz
adc
and
xchg
test
adc
cwtl
and
lcall
or
ret
push
outsb
mov
movsb
test
in
out
add
push
imul
jns
gs
rolb
addr16
jne
test
pop
sti
jno
push
pop
add
xor
je
adc
test
jmp
cmpsb
jmp
outsl
xchg
xchg
mov
loope
xchg
inc
xor
push
outsl
notb
mov
dec
push
out
mov
lcall
mov
jo
mov
add
add
push
mov
and
imul
jb
and
imul
sub
sub
loop
test
leave
mov
inc
pop
and
in
clc
xor
out
outsb
leave
decb
inc
rclb
pop
mov
outsl
ss
lods
in
jo
pop
jbe
add
pop
je
pop
xchg
lea
add
lods
leave
jno
je
int3
or
jle
push
inc
sbb
mov
cmp
mov
cmpsl
mov
pop
outsl
jmp
lahf
pop
sbb
dec
sarl
aas
or
cmp
sbb
mov
mov
sti
stc
rcll
mov
int
hlt
xor
inc
cmp
dec
add
xor
popl
sbb
cmp
mov
je
lret
int3
js
testl
shll
loope
inc
inc
test
scas
push
push
pop
push
scas
or
and
popf
filds
lds
add
call
icebp
mov
fdivp
mov
push
jl
out
testb
cmpsl
push
in
or
mov
and
inc
inc
mov
pusha
inc
les
inc
ljmp
lcall
cmp
add
pop
adc
mov
roll
loope
daa
push
adc
and
or
mov
sbb
sahf
pop
fistpl
inc
sub
inc
xchg
aam
sbb
int3
call
add
xchg
jmp
repnz
and
leave
jge
adc
ret
dec
out
clc
daa
pop
fwait
add
ss
in
add
cmp
sub
loop
mov
sbb
ret
mov
sub
xchg
arpl
fwait
rcll
cmpsb
dec
inc
mov
fcoml
add
inc
std
adc
jmp
mov
or
push
out
add
xchg
dec
push
mov
mov
testb
jle
sbb
push
mov
stos
or
adc
es
push
mov
sti
sbb
cmp
sti
sbb
jbe
sub
sbb
nop
mov
jmp
and
push
or
subl
pop
into
test
cwtl
mov
cmpsl
dec
inc
dec
dec
repnz
adcb
jb
cld
lea
adc
out
es
and
cwtl
mov
fsubrp
adc
ret
push
leave
ret
mov
jecxz
pusha
mov
pop
les
add
rorl
adc
and
and
cmp
aad
das
popf
movl
pop
push
or
cs
mov
push
call
mov
decb
int
mov
andb
in
cmp
push
or
pop
lock
testl
dec
clc
adc
outsb
adc
jecxz
movl
mov
xchg
jecxz
dec
or
add
pusha
pop
loop
or
test
xor
sub
cmpsl
sub
daa
rol
pusha
mov
test
cs
and
in
pop
lods
push
int3
aad
daa
iret
sarb
mov
mov
pop
jecxz
mov
repnz
mov
aaa
mov
mov
int
jl
nop
icebp
mov
mov
loop
mov
iret
imul
aaa
xchg
fisttps
push
arpl
fcomps
mov
int
test
lods
imul
mov
mov
inc
fldcw
psubusb
ss
add
lahf
pop
xor
fwait
in
int
mov
loope
mov
mov
stos
sar
cmp
mov
fidivrs
xchg
ret
add
mov
xchg
xchg
ljmp
imul
jns
mov
fwait
push
xchg
rcrb
lret
jbe
sahf
adcl
mov
mov
adcb
lahf
out
cmp
sahf
push
insl
dec
jae
jno
lahf
inc
mov
test
imul
stos
xchg
lods
or
add
stc
xlat
xchg
out
jle
pop
into
js
stos
fisubrl
rolb
out
fwait
add
fwait
mov
mov
loope
jb
mov
mov
imul
inc
inc
loope
mov
xchg
mov
add
mov
add
addr16
mov
mov
jbe
push
mov
jns
mov
mov
inc
jp
test
xor
mov
loopne
add
iret
neg
fisttpl
dec
insl
jns
fcoms
cltd
mov
js
fsubrl
pop
inc
xorb
mov
mov
fcoml
or
call
lods
push
mov
out
sbb
scas
sbb
bound
aaa
les
pop
mov
push
mov
add
sub
cmp
mov
mov
mov
mov
sbb
xchg
leave
sub
loop
mov
iret
mov
iret
jp
fwait
iret
cwtl
iret
cltd
iret
sahf
iret
out
ja
lahf
loop
shll
xor
in
fistpll
push
aas
aaa
mov
cltd
inc
enter
lahf
mov
jns
mov
lcall
xchg
xchg
adc
dec
jecxz
adc
pushf
xchg
sahf
into
mov
lret
adc
xchg
sbb
pusha
clc
rcrl
jbe
cmp
jl
lahf
pop
jg
mov
insb
pop
jne
imul
mov
and
lcall
jecxz
cmpsb
add
loop
loope
aas
fcomp
jae
leave
outsl
test
clts
cmp
xchg
icebp
int3
cli
pop
leave
iret
rcrl
popf
mov
nop
lea
int
and
subl
out
orb
mov
ja
dec
andb
js
leave
jecxz
push
jle
mov
gs
or
xchg
dec
in
adc
popa
xlat
in
mov
imul
jnp
sahf
mov
dec
jo
cmp
jns
lcall
lahf
rorl
inc
iret
mov
adc
pop
in
lock
sahf
rorb
and
dec
iret
out
ror
xlat
ret
popf
lret
loopne
aaa
mov
sahf
or
fimull
sti
out
mov
jb
mov
test
leave
cmp
es
ds
sbb
jecxz
xlat
ja
and
xchg
outsl
jnp
jl
jnp
push
test
int3
into
xlat
mov
jnp
iret
lret
leave
jnp
xchg
push
leave
mov
fimull
out
int3
imul
and
test
cmp
dec
pop
stos
sbb
stos
mov
push
fisubrl
inc
cmp
into
xchg
pop
mov
mov
push
xor
pop
fildl
mov
outsl
call
mov
stos
pop
outsb
xor
mov
push
test
adc
insl
adcb
mov
test
xchg
mov
subl
or
adc
and
xchg
ja
sbb
xchg
or
pop
xchg
shll
fwait
push
fldcw
push
mov
jge
jmp
fiadds
cmp
push
xchg
cmp
push
xor
pushf
mov
push
mov
test
in
adc
lea
jg
fdivl
pop
lock
fwait
pushf
sub
mov
pop
cwtl
fistps
mov
or
sbbl
mov
xchg
push
jnp
shrb
sub
int3
divb
ss
push
sub
in
xchg
daa
std
nop
push
mov
mov
lea
push
mov
mov
sarb
das
mov
shl
pop
daa
mov
daa
sarb
mov
sub
inc
test
mov
mov
mov
mov
mov
les
mov
test
fcmovb
and
stos
jp
fadd
scas
mov
jns
lcall
cmp
jl
dec
pop
mov
into
loopne
insb
int
cmp
sub
imul
ffreep
inc
fsub
dec
stc
jmp
mov
sahf
pop
dec
cld
in
sbb
iret
mov
addb
je
adc
inc
jp
and
xchg
adc
shl
adc
adc
imul
mov
push
mov
add
leave
lcall
fsubrl
scas
imul
dec
fildl
jl
pop
mov
sbb
lret
pop
xchg
scas
pushf
jnp
pop
dec
ffree
into
loop
int
fwait
loopne
mov
mov
push
outsb
sahf
mov
dec
cmpsl
or
loope
pop
dec
inc
adc
filds
sub
jg
lahf
aas
das
pop
dec
out
pop
jb
inc
xor
add
and
ret
jno
xchg
movl
and
or
sbb
aaa
movl
mov
pop
pop
pusha
mov
xchg
mov
clc
dec
jp
sbb
packuswb
insb
xchg
int
repnz
jmp
or
sbb
push
push
xor
outsl
jecxz
add
lods
pop
push
push
or
rcrb
testb
xchg
bound
scas
inc
subl
test
push
push
movl
jbe
movsb
cmpsl
cltd
adc
adcb
dec
mov
out
xor
sub
inc
lret
sub
js
test
stc
mov
jge
mov
hlt
les
fs
xchg
lods
imul
pop
push
aas
mov
roll
mov
insl
or
push
cld
jp
add
or
out
adc
frstor
jle
hlt
imul
jecxz
mov
push
adc
outsb
ffree
cltd
shrl
in
inc
ss
filds
xlat
jl
lods
pusha
mov
cli
dec
shlb
movl
movsl
sbb
cmp
push
pop
divl
mov
sbb
pop
push
mov
shll
pop
mov
shr
mov
jo
mov
sbb
or
aas
mov
incb
push
pop
lods
rcr
xchg
out
sbb
push
jp
add
mov
addr16
cli
ret
mov
pop
mov
daa
inc
cld
or
ss
in
es
insb
pop
mov
xchg
std
jmp
mov
sub
xor
rorb
fisttpl
add
mov
js
push
movsb
add
mov
fbstp
xlat
or
std
xchg
in
lock
into
scas
scas
push
mov
rolb
test
cmp
lods
mov
add
repnz
xor
inc
pop
dec
mov
mov
mov
and
adc
movsb
adc
cs
stos
test
xchg
mov
pop
fs
lret
pop
cli
pop
inc
xor
jmp
fucom
loope
shrl
inc
std
push
bound
fcomps
mov
addl
sub
je
xor
adc
shlb
push
leave
loopne
ja
lret
sub
or
test
pop
fmuls
mov
and
and
or
aas
pop
or
pop
test
pop
sub
popf
aas
fcmove
mov
or
jge
mov
pop
push
repz
mov
pop
mov
push
sbb
stos
mov
repz
xchg
sbb
pop
jmp
cmp
jns
adcb
es
in
lods
fmull
jg
out
repnz
jp
mov
sbb
jae
out
icebp
xor
leave
in
or
mov
sub
jecxz
add
lcall
mov
push
aas
add
rol
ds
add
cmp
sbb
add
je
sahf
arpl
movsl
fidivrl
sbb
pop
out
cmp
add
cmp
or
je
jg
ret
mov
cs
dec
pop
scas
dec
jno
push
mov
call
jae
push
test
push
mov
jp
das
test
insb
mov
in
mov
mov
test
mov
nop
imul
cltd
fdivrl
arpl
negb
jecxz
sub
pop
sub
xchg
fdivrl
dec
daa
mov
movsl
outsb
gs
repz
fdivrl
test
data16
repz
fs
xchg
int
sbb
movl
cmpsb
dec
xor
push
push
out
sub
andl
dec
pop
push
cmpsl
push
aas
rclb
sub
aad
imul
mov
push
push
lcall
lock
and
loopne
rolb
xor
pop
repz
data16
ja,pn
jns
das
or
adc
jmp
mov
mov
pop
jp
xchg
xchg
test
clc
push
mov
cmp
push
outsb
lea
mov
mov
push
cld
jbe
sub
cli
popa
into
sbb
inc
stc
lds
mov
in
mov
iret
push
xchg
dec
mov
call
inc
cld
test
dec
in
and
test
arpl
and
lock
out
xrstors
mov
lahf
in
out
xchg
jmp
nop
dec
jle
sub
dec
pop
xchg
push
mov
outsb
push
cmc
push
inc
sub
vpshuflw
inc
mov
inc
mov
and
xchg
aad
gs
mov
jl
push
scas
daa
repnz
insb
test
adc
push
sub
xchg
adc
sbb
int
lods
or
pop
sarl
dec
add
sbb
movsb
testb
mov
stos
mov
ret
jl
push
add
pop
xchg
sar
test
adc
dec
inc
jo
add
lcall
push
add
pop
xchg
pop
jl
xchg
mov
in
pop
cmp
xor
repnz
mov
dec
dec
mov
sub
shl
sub
add
out
dec
pop
jns
daa
in
ja
or
push
mov
sbb
xor
ret
shll
jl
xor
mov
test
cmp
fiadds
cmp
into
call
sbb
lds
test
push
dec
cmp
movsb
adc
and
mov
sbb
aaa
mov
je
dec
push
xchg
loop
xchg
mov
repnz
xor
adc
xor
push
inc
clc
sarl
ja
in
orb
sbb
jbe
mov
icebp
sti
aam
inc
mov
ss
rorb
out
cmp
dec
xchg
and
sbb
lahf
sahf
mov
inc
push
mov
je
mov
andl
or
push
mov
cli
add
out
push
and
xor
mov
fmul
push
rorb
cltd
fwait
lods
lsl
add
sub
add
sbb
aad
push
jmp
and
faddp
inc
sub
inc
in
lcall
mov
inc
fiaddl
xchg
insb
inc
adc
adc
sti
adc
faddp
fucomp
pop
push
add
test
mov
and
pop
mov
outsb
xchg
scas
in
pop
das
jne
and
mov
sub
push
rcrb
rep
cwtl
lcall
lret
sub
addr16
sub
or
and
adcl
or
add
push
push
test
leave
sbb
jge
adc
shlb
cmpsl
movsb
fistl
push
dec
mov
repz
fs
cltd
push
pop
dec
or
call
clc
and
inc
xchg
movsb
inc
xor
adc
lret
stos
sar
cmp
in
dec
inc
push
mov
shrb
xor
inc
movl
mov
filds
cmc
jmp
rcl
dec
aam
push
jne
scas
fwait
ret
xchg
in
xchg
shlb
mov
xchg
sub
xchg
mov
adc
popf
loope
fcompl
jecxz
jle
insb
sbb
out
rorb
test
in
push
jns
out
movl
pushf
cmpsl
or
xchg
mov
xchg
mov
aad
jmp
popa
data16
roll
dec
sub
add
int
mov
imul
xor
negb
and
int
scas
mov
pop
stos
mov
out
jmp
add
xchg
xor
jge
dec
adc
not
push
mov
in
mov
xchg
loope
jp
lcall
out
repz
or
mov
or
out
fisubrl
insb
push
mov
mov
jnp
hlt
es
aas
int3
or
mov
lea
push
pop
jo
mov
scas
add
xchg
insl
inc
lea
dec
fidivrs
in
jb
mov
pop
push
popf
sub
cmc
push
repz
mov
in
testb
jmp
cmpsl
pop
cwtl
lods
or
xor
mov
jg
repnz
rcr
fs
adc
incb
fisubs
outsb
movl
mov
xchg
jp
jl
lods
movsl
or
lea
push
mov
int
cld
xchg
sub
xor
hlt
cmpsl
movsb
fadd
mov
ret
mov
add
aas
mov
movl
mov
insl
jo
test
lcall
test
in
xor
push
or
mov
repz
jbe
leave
xchg
jg
movsl
jnp
pop
jge
push
aam
fucomip
fdivl
fwait
test
cmpl
adc
rcll
push
ret
out
movl
push
mov
push
icebp
dec
sbb
lret
xor
mov
add
jne
insb
js
and
lahf
cmp
add
push
scas
mov
inc
mov
mov
fcmovnb
test
and
cwtl
add
cmpsb
mov
sahf
xor
scas
mov
inc
shrb
mov
pop
add
lds
push
in
sbb
push
ljmp
jne
test
and
insl
sub
push
cld
cmpsl
cmpsb
mov
imul
sar
sti
adc
and
pusha
inc
mov
shll
mov
pop
pop
mov
pop
adc
push
and
lock
adc
lret
bound
pop
mov
mov
popf
mov
pop
xlat
ljmp
sub
push
and
push
or
pushl
hlt
jo
mov
pop
push
test
call
fldt
mov
ja
pop
call
push
dec
movsb
sbb
mov
inc
fdivs
mov
inc
xor
loopne
mov
adc
and
cmp
sub
dec
adc
test
jb
add
cli
jl
xchg
hlt
stos
sbb
mov
push
jge
xlat
push
repnz
sub
out
push
ss
and
xchg
mov
loope
cmp
fidivrl
and
sbb
dec
jg
fwait
pop
xor
insl
mov
push
ds
incl
sbbb
fcmovnb
mov
shrb
xchg
inc
data16
popf
clc
push
sbb
outsb
imul
insl
insb
aam
pop
std
fwait
popf
test
mov
xchg
repz
rcl
sti
xor
add
add
sub
dec
arpl
cmp
mov
xchg
inc
imul
lock
inc
popa
inc
mov
repnz
sub
sbb
shll
sahf
xchg
call
out
sbb
pop
aaa
cmp
xchg
mov
mov
aam
ret
leave
mov
inc
je
into
ja
shlb
adc
mov
mov
jmp
and
dec
sub
ja
xchg
jbe
fadds
xchg
nop
cmc
imul
popa
jmp
in
shll
iret
cvtpi2ps
movl
data16
mov
cs
inc
fsubl
into
rcll
loopne
jle
sbb
mov
bnd
sub
aaa
fcoml
mov
and
orl
mov
xchg
sarb
jle
push
mov
inc
add
xchg
adc
mov
inc
lds
out
pop
pop
push
push
cmc
jmp
inc
into
dec
pop
sub
loope
inc
pop
movl
iret
aad
inc
xor
es
jbe
mov
lods
idivl
fnstsw
sti
addr16
testb
ljmp
push
daa
paddq
test
subl
repnz
dec
popf
out
push
and
cmpl
lods
adc
sbb
xor
fidivl
mov
addl
fbld
pusha
gs
pushf
in
sahf
push
add
aam
sbb
js
out
mov
out
mov
lret
in
push
decl
xchg
inc
xor
fstpt
mov
push
sbb
jg
or
xor
or
sbb
addl
pop
jmp
mov
repz
loope
pop
in
stos
outsb
inc
inc
sbb
jnp
adc
and
add
in
movsb
jno
sti
or
mov
clc
in
inc
mulb
mov
ss
push
push
andl
push
repz
das
outsb
mov
fnstsw
call
lock
cmp
and
jmp
or
imul
dec
sahf
xchg
cltd
pop
insb
or
mov
lahf
pop
pop
add
or
sbb
stos
adc
mov
jno
mov
fidivl
and
sti
or
sub
stos
js
xchg
jmp
dec
mov
fcoml
add
sarl
ja
mov
popf
cmpsb
mov
outsl
mov
add
ret
and
ret
xchg
out
dec
mov
push
push
jne
fnstenv
xchg
xchg
cli
adc
push
and
dec
outsl
xchg
fs
lea
xor
fidivl
or
pop
movb
test
mov
sbb
lods
repz
push
rorb
mov
scas
adc
imul
in
xchg
into
call
push
lock
mov
xchg
mov
ja
and
push
in
mov
push
push
cmp
and
jp
sbb
xchg
adc
scas
cmp
fcompl
sub
movsb
aaa
mov
sbb
sub
inc
shrb
add
aam
outsb
mov
add
jecxz
xchg
insl
jmp
mov
or
notb
iret
dec
pop
mov
jb
add
pop
sbb
sti
jns
pop
xor
ss
or
rolb
faddp
dec
out
movsl
fsubr
push
pop
adc
jns
ret
jl
out
std
add
mov
lea
jge
inc
mov
cli
mov
pop
das
xchg
leave
xlat
iret
lock
jae
xor
ret
cmpsb
dec
enter
divb
imul
data16
cmpsb
mov
sbb
push
fmuls
int
mov
lret
sbb
fisubrl
inc
cmp
xor
adc
in
xchg
jne
test
mov
rcrb
adc
and
cs
add
adc
sub
dec
daa
jp
fidivrs
addr16
xchg
faddl
mov
sbb
ja
and
push
popa
fs
outsb
ret
mov
and
lea
xchg
rcrl
sbb
ret
cmpsl
and
test
dec
lock
es
popf
mov
in
lcall
and
cmp
inc
push
xchg
push
push
jo
mov
mov
les
out
out
cmpb
inc
in
test
mov
sbb
movsl
sarb
outsb
ret
or
insb
jle
stos
push
call
movsl
pop
jg
xchg
insl
cmp
mov
inc
cmpsb
mov
ret
mov
cmp
add
loopne
mov
or
inc
or
xlat
not
cmp
stos
test
dec
test
sahf
pop
addb
cwtl
repz
xchg
stos
mov
jno,pn
xchg
addl
out
mov
lcall
loopne
in
dec
sub
mov
fsubrs
or
nop
mov
call
sub
les
sbb
sub
push
cmc
adc
sub
out
dec
jp
xchg
ficomps
cmp
aam
push
push
pushf
rcrl
pop
repnz
fisttps
fucom
pop
ror
push
push
xlat
jmp
push
mov
icebp
inc
test
cld
testl
mov
mov
and
xchg
les
std
sbb
test
addr16
aam
push
xor
rclb
leave
mov
mov
xchg
aad
push
adcb
subl
xor
jecxz
cmpsl
mov
in
aaa
mov
ja
xlat
test
pop
push
inc
xchg
test
push
add
and
cmpl
fbstp
das
iret
lret
dec
push
cmp
imul
jo
psllw
cwtl
popa
mov
or
or
mov
ss
xor
jg
mov
repz
lret
sub
cmp
loope
fsts
subl
push
lret
pop
adc
dec
push
mov
xchg
movl
pop
pop
sub
jmp
xchg
jae
mov
daa
dec
lods
and
dec
pop
cmc
lock
xor
mov
test
xor
call
fwait
sbb
insl
es
popa
pop
xor
std
hlt
cs
inc
adc
mov
sti
dec
xchg
jmp
rclb
mov
es
dec
mov
cld
xchg
inc
lahf
sub
mov
add
dec
sub
sbb
in
mov
pushf
cmp
jp
addl
cmc
sub
outsl
mov
in
imul
pop
jnp
ret
fimull
sub
xchg
dec
pop
sub
sbb
inc
or
and
push
mov
push
inc
dec
lret
sahf
lahf
dec
jno
shll
pusha
lods
ret
mov
repz
push
cmpsl
sbb
ss
sub
addb
xchg
pop
in
inc
jmp
adc
mov
and
add
sub
push
jmp
fildl
mov
aad
add
or
addl
scas
inc
inc
add
ljmp
sarb
dec
dec
adc
cmpsb
pushf
mov
iret
and
add
xchg
and
js
in
fiaddl
inc
inc
mov
addb
jge
rcrb
in
sti
push
pusha
inc
fidivrl
mov
or
mov
sahf
aam
mov
jbe
push
shl
push
dec
inc
xchg
call
sbb
rcrl
mov
push
aaa
dec
call
mov
or
loop
adc
in
les
rep
fsub
push
sbb
pop
ret
pop
popa
push
dec
lock
ss
cmp
mov
and
jecxz
xchg
jbe
jl
inc
movsl
mov
pop
mov
call
aas
adc
loopne
int
idivb
fsubl
daa
mov
mov
xchg
dec
mov
mov
testb
ljmp
mov
shlb
or
or
test
repnz
inc
cmp
loop
mov
mov
dec
shlb
cs
sub
dec
add
pushf
mov
mov
cmpsb
pop
adc
and
xchg
sbb
ficoml
ret
mov
add
int
insb
mov
out
mov
xor
mov
outsl
push
push
jl
out
dec
mov
and
xor
icebp
mov
jbe
jecxz
testl
and
aad
dec
lock
mov
cmp
idivl
mov
sbb
fistps
push
mov
jmp
stc
adc
mov
add
cmpsb
pop
out
test
or
repnz
das
xor
cltd
fcompl
or
in
mov
movsl
lods
in
pop
and
movb
jo
jp
and
jmp
imul
and
add
scas
incl
cmp
pop
cld
xchg
test
cli
shr
fstps
cmpsl
dec
dec
mov
sub
jp
andb
aaa
adc
xchg
sbb
jnp
loope
dec
jne
mov
out
stos
push
cmp
jg
scas
imul
push
pop
mov
test
mov
iret
rorl
pop
push
subb
mov
xchg
ja
ret
fiaddl
out
sbb
dec
pop
mov
push
xchg
call
mov
dec
cmp
jle
ret
mov
aad
and
rcll
rcrb
cmp
pop
stc
popf
mov
mov
inc
fcomip
jb
leave
or
pop
cld
jg
mov
aaa
lret
mov
hlt
mov
dec
pop
outsl
mov
iret
adc
lds
inc
and
shl
and
sbb
adc
int3
xchg
test
or
lods
movl
outsb
xchg
ja
mov
ret
or
pop
sbb
or
xchg
sbb
test
fsubr
je
push
jbe
xor
sub
fcmovnb
or
das
cmpsl
stos
outsb
xchg
and
pushf
mov
rcll
insl
adc
sbb
rclb
int3
shrl
pop
and
out
add
jo
sbb
lea
inc
pop
iret
aaa
out
movl
sub
outsl
and
and
ret
pop
adc
out
cmp
cmp
rcrb
xchg
adc
movl
in
das
and
es
daa
mov
cltd
call
cmp
test
jne
inc
mov
xchg
fnstenv
mov
lods
repnz
adc
mov
jb
insb
imul
paddusw
addr16
std
inc
add
dec
cwtl
fs
mov
psubb
adc
adc
sti
jmp
rcrb
xor
or
aad
xor
mov
xchg
pop
sub
pop
cwtl
jbe
xchg
xchg
subl
push
inc
jnp
or
ja
ds
fwait
xchg
imul
mov
test
cmp
fcmovb
dec
jg
mov
inc
jbe
jae
shr
or
stc
lret
cmp
aad
adc
ljmp
mov
dec
and
jmp
je
xchg
sub
ljmp
add
insb
fisubl
lds
or
add
and
mov
clc
xchg
sahf
push
cmp
std
out
mov
push
jle
jns
dec
lcall
jg
out
imul
fwait
inc
cmp
jbe
xchg
lods
out
push
aaa
fisubrl
sbb
add
push
cmpsl
mov
fbld
cld
sub
int
fildl
pop
xlat
mov
push
inc
dec
pop
mov
push
test
xor
pop
adc
jp
cmpsb
or
sub
lea
and
in
inc
fwait
mov
daa
xor
rol
mov
ja
jecxz
xchg
in
push
jbe
xchg
pand
cmpsl
mov
mov
inc
ficoms
xor
mov
jno
lahf
cmp
js
mov
push
jg
pop
jo
dec
fcomip
push
fcmovb
idivb
push
ret
into
sub
subl
adc
popa
lock
es
jmp
inc
pop
dec
icebp
adc
xchg
adc
data16
repnz
mov
mov
mov
jg
sbb
push
add
pop
cltd
ror
fucomi
lds
shll
imul
test
test
sahf
aam
out
mov
pop
jb
out
push
shrb
rcll
rclb
fistpl
jbe
xchg
inc
ds
xor
or
scas
movl
repz
addr16
fstl
jl
pop
daa
mov
sbbb
mov
xchg
orl
xor
mov
mov
mov
je
mov
shl
xchg
pop
jge
out
inc
loopne
testb
fidivrs
pop
mov
mov
cs
mov
or
jp
sub
mov
cmpsl
inc
adc
fwait
imulb
sti
inc
out
fcmovb
test
into
int
fnstcw
movl
insl
xchg
sar
and
mov
add
cmp
or
shrb
into
dec
das
lea
test
add
hlt
xor
xchg
jp
xorl
scas
pop
or
mov
mov
xchg
shll
fsubs
sahf
sbb
jb
pop
dec
dec
clc
lods
jnp
imul
ljmp
out
rcrl
adc
add
mov
nop
push
xor
popf
cmp
roll
push
add
cltd
movl
pop
mov
inc
rcrb
cmpsb
pop
movl
roll
pop
jecxz
mov
and
jg
mov
ficoml
cmp
addr16
daa
add
ret
js
hlt
in
push
popa
jb
lahf
nop
pop
inc
scas
cmpsb
orl
frstor
and
lret
mov
mov
leave
jmp
insb
subl
in
xor
popa
xor
gs
jo
test
sbb
nop
adc
dec
mov
in
inc
in
pop
dec
call
mov
lret
xchg
jecxz
mov
mov
incl
sti
dec
sbb
or
cmc
outsl
or
mov
mov
sbb
mov
dec
and
lret
mov
fidivrs
pop
subb
push
out
sti
or
jnp
clc
roll
pop
xchg
dec
nop
cmpsb
xadd
iret
pop
and
in
mov
pop
push
jge
pop
xchg
mov
daa
xchg
dec
mov
sub
pop
xchg
mov
push
jl
cmp
dec
es
out
imul
xchg
pop
mov
lods
fbstp
add
sub
iret
xchg
aam
xchg
mov
loop
xchg
pushf
pusha
divl
or
stos
out
add
sbb
ret
ss
mov
dec
dec
xchg
nop
adc
mov
cmp
add
cmp
js
cmp
pop
mov
outsl
sub
arpl
int
std
daa
mov
mov
mov
jmp
scas
mov
jg
xlat
cli
mov
cmpsb
xchg
scas
pop
repz
mov
pop
and
mov
int
mov
mov
jp
insl
movl
pop
adc
sbb
and
add
cld
dec
int3
dec
xor
add
fidivl
sub
call
shl
push
stos
or
fistps
inc
rcrb
aam
andb
out
inc
sbb
movsl
lea
cmpsb
lret
rcl
mov
arpl
ret
mov
adc
cs
movb
mov
xlat
dec
js
int3
mov
das
inc
mov
aaa
mov
or
inc
jno
ret
in
adc
movsb
pop
cmp
and
out
cmp
push
out
sub
popa
jno
mov
les
jae
mov
pop
dec
in
cld
dec
out
popa
sarb
jbe
cmpsl
add
movsb
pop
into
pop
cs
popa
jmp
je
testl
and
push
fisttpl
jmp
jb
mov
push
loope
mov
call
test
dec
clc
mov
mov
xlat
fcoml
cmp
sub
mov
pushf
fsts
adc
sbb
or
lahf
popa
fwait
push
mov
aad
jns
mov
rcrl
lcall
adc
adc
mov
and
xchg
lds
mov
enter
pop
gs
jbe
loope
sub
or
movsb
dec
cmp
outsb
shrl
jns
cltd
xor
std
push
rolb
aaa
mov
or
inc
ljmp
add
nop
outsb
inc
jnp
cs
rol
fadd
into
lds
pushf
or
in
mov
push
jmp
stos
jae
decl
jle
push
pop
aad
dec
lret
es
xor
mov
cs
daa
mov
and
insb
fiaddl
daa
cmp
mov
aam
dec
lret
imul
popa
cmp
mov
push
rorb
ret
call
xor
arpl
jne
sarb
sub
push
sbb
cmpsb
dec
xchg
and
pop
popf
arpl
inc
add
out
and
pop
jno
mov
pop
and
mov
or
lods
mov
data16
stos
inc
cmp
sub
add
mov
push
sbb
inc
mov
mov
stos
jne
push
inc
cmc
pusha
xor
xor
dec
pushf
clc
jmp
mov
xchg
lcall
cmp
loopne
cmp
inc
mov
test
push
mov
pushf
lock
mov
dec
mov
push
fstpl
mov
insl
sub
or
and
jmp
push
xchg
ja
jo
fdivl
mov
imul
mov
cmp
jp
add
sbb
sbb
rclb
and
sub
jle
xchg
in
adc
je
jne
in
mov
sarl
and
add
cmpsb
out
push
and
xchg
daa
inc
mov
mov
xor
pop
add
sbb
xchg
int
pushf
add
aaa
add
outsb
xorl
dec
in
lock
xchg
xor
adc
dec
and
jmp
outsl
xor
fwait
loop
rorl
scas
subl
popa
mov
and
sub
and
or
push
inc
push
shl
nop
jo
addr16
and
rol
aam
add
xchg
pop
jb
jecxz
jge
shlb
push
mov
dec
add
sub
movsb
test
cs
cmova
cmp
jbe
cmp
mov
dec
mov
insb
add
mov
lods
jl
roll
pop
mov
bound
xchg
call
and
pop
jecxz
inc
sbb
aad
dec
mov
push
paddsb
fs
movsb
jae
cli
sahf
insb
sub
subl
andb
test
add
call
icebp
sub
fs
in
movl
xchg
push
dec
mov
sbbb
out
adc
fdivrp
inc
push
inc
fcomp
inc
xlat
stc
or
or
icebp
xchg
mov
add
cmpsl
in
lods
into
in
xchg
mov
or
aas
fisubs
adc
jne
inc
pop
sbb
xchg
bound
jge
test
rcrl
cs
mov
daa
notb
xor
sub
and
stos
out
add
push
daa
out
int
inc
test
out
stos
xchg
stos
mov
fadd
clc
pop
add
dec
ret
dec
loopne
sub
scas
lret
aam
dec
push
xchg
fadd
adc
xchg
inc
out
jmp
nop
loop
pushf
loope
push
cmp
jns
test
fwait
and
rol
jb
jmp
daa
movb
movl
bound
out
push
js
adc
dec
inc
cmp
lahf
push
dec
sbb
or
pusha
cs
bound
rcrl
mov
mov
aaa
out
inc
xchg
cmp
shlb
push
jg
leave
test
mov
cld
or
xchg
repz
xbegin
jns
cmpsl
mov
call
gs
cmp
push
cmp
pop
pop
xchg
hlt
and
out
mov
das
out
sbb
movl
outsl
popf
das
sub
xchg
aas
or
mov
jmp
shrl
push
or
les
aam
popf
mov
adc
dec
imul
pop
lock
inc
lret
pop
gs
sbb
push
idivb
cmpsl
fisubrs
mov
dec
mov
lds
jbe
adc
push
add
lcall
add
pop
in
cmc
inc
sub
or
lods
adc
mov
ss
mov
cltd
insb
outsl
les
xchg
or
inc
fidivl
mov
jmp
testl
xchg
dec
test
inc
pusha
or
jle
mov
dec
scas
in
jg
xor
stos
xbegin
fadd
or
inc
subb
lret
lock
mov
cmp
cmpsl
loop
outsb
rorb
inc
addb
push
push
ss
push
mov
mov
xchg
adc
clc
ljmp
into
mov
mov
jo
subb
mov
sbb
cmp
lcall
pop
inc
loopne
ret
out
pfrcpit2
inc
xchg
lock
sub
call
cli
or
jb
dec
nop
lods
lods
mov
jp
inc
dec
aas
repz
xchg
aaa
stc
jmp
mov
ja
cmp
out
mov
arpl
lahf
pop
inc
jmp
inc
dec
hlt
push
sbb
push
lcall
add
xchg
sarl
push
into
jecxz
mov
mov
aad
hlt
ret
test
and
insb
mov
push
fsubrs
xchg
jbe
xor
sahf
aam
or
clts
rcrb
sbb
xchg
cltd
adc
mov
dec
jo
add
mov
xor
pop
stc
out
lret
jmp
out
fiaddl
and
cwtl
mov
sub
rcrl
jmp
in
test
lahf
mov
cld
push
andl
clc
pause
adc
sub
addr16
outsb
xor
inc
pop
jle
inc
mov
movsl
cmp
ud2
and
and
sbb
cmpsb
dec
ds
jbe
dec
int
insl
rcrb
andl
aad
pop
mov
nop
or
into
rorl
test
jns
faddp
ss
xchg
adc
mov
lods
ljmp
cmc
jle
movsb
mov
ror
push
lahf
std
cmp
gs
xor
add
inc
lret
lods
sahf
movl
sbbl
mov
adc
mov
or
jne
stc
cwtl
push
push
pop
les
push
adc
push
repz
es
inc
pop
mov
inc
jbe
mov
cmp
cmp
es
outsl
sbb
jmp
dec
jecxz
test
mov
mov
dec
xor
outsb
movl
cltd
xlat
jge
xchg
fdivrl
addl
ss
in
std
mov
cmp
scas
shlb
mov
jmp
fnstcw
out
loope
out
mov
add
fiaddl
xchg
xchg
add
stc
inc
cmp
and
xchg
das
cmp
daa
push
inc
aam
xorl
dec
dec
sub
adc
ss
or
pusha
scas
ret
ljmp
sbb
ds
sub
xchg
movsl
push
dec
add
xchg
mov
mov
jg
adc
jne
out
loopne
xchg
add
mov
lea
push
cmpsb
nop
ffree
jle
mov
test
xor
xchg
xchg
insl
sub
or
adc
and
arpl
mov
or
sbb
insl
std
pushf
les
cmp
mov
mov
ret
xchg
sarl
lock
icebp
ljmp
or
out
dec
xchg
sbb
jb
aad
xor
mov
ret
mov
jbe
rol
dec
les
std
incb
je
xor
cld
lret
inc
adc
fwait
ss
lock
ficompl
push
in
in
fs
les
dec
pop
push
push
mov
xchg
adc
fst
rol
rolb
push
add
nop
pop
mov
insb
and
add
ja
and
add
sub
inc
ss
leave
pusha
xor
inc
jbe
movsl
dec
adc
xorl
jge
insl
addr16
pop
mov
xor
mov
jmp
ret
repnz
repz
mov
gs
mov
xchg
and
mov
jbe
sbb
jle
sbbb
mov
pop
add
mov
push
jecxz
subl
push
pushf
lret
daa
ret
ficoms
out
lea
out
or
add
mov
xchg
adc
and
negl
xchg
or
clc
out
je
or
xchg
mov
scas
xorb
outsl
push
repz
out
sti
dec
pop
pop
cwtl
mov
dec
pop
jb
pushf
fildll
stos
jp
and
dec
push
pop
add
data16
jecxz
xchg
add
mov
icebp
scas
lret
xlat
lcall
sbb
rorb
test
jp
aaa
rol
mov
or
insl
and
andb
push
stc
push
push
ljmp
xor
aad
xchg
sti
call
pop
mov
mov
cltd
inc
dec
inc
cmp
cwtl
add
and
xor
sbb
cmpsl
lods
imul
push
shl
test
push
push
es
int
xchg
pop
sbb
fiaddl
sub
mov
push
test
ret
adc
faddp
or
insl
negl
sub
lock
in
aad
jb
inc
fldenv
int
xor
mov
sbb
xor
cs
outsl
adc
pop
rcrb
sub
jne
clc
cmpsl
lea
adc
int
sub
dec
push
jge
mov
fisubs
jmp
imul
es
or
mov
xlat
out
inc
add
lock
je
test
into
pop
mov
sbb
adc
js
lods
add
ret
mov
jbe
in
cs
mov
jg
sarb
movsb
dec
mov
pop
pop
mov
adc
mov
push
repz
add
stos
xor
shrb
xor
xchg
mov
mov
mov
fcompl
push
pop
push
or
xor
jno
push
jl
xor
push
and
adc
mov
clc
mov
loope
sub
adc
into
jb
or
in
mov
mov
leave
xlat
pop
sbb
or
mov
test
test
xor
inc
cmp
push
or
cmp
movsl
mov
sub
fistpll
push
adc
inc
repz
and
or
pusha
push
std
xlat
adc
mov
pop
loop
or
lahf
and
fadd
dec
inc
push
out
outsb
dec
xchg
mov
test
fcmovb
push
xor
and
adc
xchg
mov
outsb
jle
in
adcb
popa
sub
push
adc
les
xchg
test
and
pop
fsubrp
daa
pop
into
loop
jge
xchg
out
stc
inc
inc
scas
mov
aad
adc
in
mov
lods
xor
ja
add
push
jge
pop
xchg
cmpsb
lret
iret
ret
loopne
push
pop
addr16
push
sub
adc
sub
mov
in
lret
adcl
outsb
inc
adc
inc
mov
je
das
ret
test
jo
pop
movsb
adc
data16
in
clc
cmp
mov
xor
leave
lret
mov
cli
aas
sbb
push
dec
xchg
mov
fists
pop
cltd
loope
lea
pop
sbbl
cmp
jno
cmpb
js
stos
in
inc
aad
pop
es
fbld
mov
pop
inc
inc
xchg
adc
mov
mov
cmp
int
cmpsl
xchg
leave
fcoml
insb
jno
push
push
daa
and
push
test
push
les
mov
into
iret
push
xor
adc
cmp
icebp
and
cmpsb
insl
xchg
out
test
rcr
outsl
mov
push
pushf
mov
mov
insl
movsb
cmpsb
lock
jecxz
or
xchg
xchg
pop
adc
adc
lods
sbb
dec
inc
pusha
xchg
add
mov
pop
imul
cmp
xchg
outsl
dec
scas
mov
arpl
mov
test
dec
add
in
xchg
mov
in
and
mov
loop
dec
out
mov
aad
cli
fcmovnu
xor
xchg
push
lcall
jb
push
pop
sbb
cmp
sbb
jb
mov
in
icebp
es
push
mov
outsb
xchg
nop
movl
push
jbe
sub
lea
xlat
rol
movl
orl
loop
or
int
push
addr16
lock
xor
inc
xchg
ss
test
push
and
adc
cli
mov
adc
jg
pop
pop
mov
inc
andl
or
dec
fiadds
fiaddl
xbegin
adc
faddp
mov
or
mov
in
jle
push
add
adc
mov
mov
lret
std
iret
gs
xor
pop
sti
push
mov
sub
loope
ja
sub
outsl
jmp
xchg
call
fcmovnu
das
mov
in
adc
jbe
xchg
movl
mov
movsb
mov
and
enter
or
inc
insb
outsb
xor
push
fldenv
popf
mov
jbe
outsl
jno
hlt
push
or
sub
xor
fmuls
adc
mov
fstl
push
sub
lods
inc
xchg
ja
arpl
mov
cmp
js
pusha
ret
in
dec
add
mov
into
xor
and
imul
mov
inc
sahf
push
mov
mov
rcrb
pop
stos
cmp
or
or
adc
frstor
iret
popa
jecxz
and
js
inc
hlt
rcrb
add
dec
jno
dec
pushl
and
inc
mov
mov
xchg
aam
pop
repz
sbb
jns
or
int
push
dec
loopne
adc
iret
sub
pop
pop
mov
dec
mov
push
faddp
push
in
inc
jle
and
and
stos
pop
call
in
cmp
repz
popf
rorb
add
shll
mov
sub
push
push
push
movl
xchg
and
cmpsl
push
and
or
cmp
lock
mov
add
shlb
pop
fdivl
inc
ljmp
inc
cmp
push
dec
das
decl
mov
push
aam
div
or
leave
iret
fisttpl
dec
lods
and
pushw
xchg
mov
dec
push
jecxz
icebp
ret
cli
dec
mov
mov
push
sub
push
data16
cmpsl
lahf
dec
popf
inc
xorl
jae
repnz
shlb
rcrl
leave
bound
jne
pop
mov
push
aam
bound
inc
jbe
rcrb
pusha
sub
adc
fisttps
inc
mov
imul
inc
data16
and
xchg
push
push
xchg
leave
cld
push
loope
jnp
or
mov
and
call
push
shll
and
adc
addr16
inc
std
daa
jo
sbb
inc
rorb
nop
cwtl
aaa
cmpsl
push
arpl
popa
dec
fwait
test
sbb
mov
into
cmpsb
fdivr
jne
pop
std
je
dec
loopne
mull
jge
inc
mov
insb
pop
sub
mov
sub
jecxz
jnp
xchg
js
and
xorl
push
add
mov
pushf
sahf
call
stos
xor
sub
in
lcall
lea
les
jns
notl
jp
imul
stos
sbb
adc
or
cltd
pop
pushl
js
loope
inc
push
cwtl
aad
adc
daa
push
shld
pusha
xor
xor
xor
int
lock
add
jle
xchg
push
push
jg
or
subl
and
movl
imul
dec
or
bound
mov
dec
idivb
cwtl
jecxz
test
lahf
pop
mov
cmc
dec
sbb
pop
push
and
xor
add
adc
js
movl
dec
inc
push
push
push
aam
jecxz
push
scas
jge
popf
clc
xchg
bnd
or
daa
add
add
or
imull
mov
pop
xor
jp
in
fnstsw
sarl
inc
inc
outsl
adc
leave
push
jne
adc
xor
inc
nop
lret
std
pop
jl
das
clc
sub
or
mov
sub
xlat
icebp
push
mov
jg
cmp
pop
outsl
and
sub
and
mov
xchg
sbb
pop
cs
sub
sbb
jno
js,pt
aas
std
jl
mov
repz
ljmp
jnp
sti
dec
addl
test
pop
inc
dec
mov
pusha
xlat
jmp
lea
sbb
and
aad
sub
cmp
add
das
sbb
movsl
popa
push
mov
pop
sti
mov
or
and
jne
jg
out
xor
outsl
sarl
movsb
or
adc
sub
rorb
shlb
pop
cmp
inc
js
mov
xchg
in
push
mov
xchg
bound
jp
mov
daa
or
cmpb
adc
jecxz
movb
inc
aaa
idivl
push
xchg
repnz
inc
mov
push
dec
aad
add
mov
cmp
daa
aad
sarb
ffreep
cmp
push
ret
dec
push
int
cmpsb
sarl
jle
mov
mulb
xor
adc
repnz
or
pop
xchg
pusha
push
outsl
or
imul
sub
mov
mov
jne
push
mov
stos
dec
push
add
sub
mov
jbe
and
and
and
xlat
and
mov
cmp
jge
icebp
sbb
xchg
pop
inc
pop
popa
mov
sbb
dec
pop
lret
push
loopne
out
mov
or
testb
arpl
pusha
push
xlat
test
ljmp
gs
push
in
sbb
ja
imul
xchg
loopne
ret
out
and
mov
or
or
int
mov
leave
popf
cmp
hlt
div
jmp
sbb
in
sbb
and
adc
lret
mov
adc
add
push
inc
inc
push
sbb
test
inc
lea
cltd
inc
or
dec
or
insl
jecxz
ret
add
in
mov
xor
and
in
call
push
fdivrl
iret
xchg
dec
add
xor
negb
data16
pop
leave
outsb
mov
std
push
sbb
add
and
divl
and
fstpt
hlt
mov
xchg
push
inc
cwtl
icebp
gs
lcall
adcb
mov
jg
and
cmp
mov
lret
or
in
arpl
mov
mov
inc
les
in
xchg
mov
nop
mov
cmp
int3
dec
mov
in
shlb
pop
add
psubb
fnsave
cmpb
gs
popa
mov
mov
push
xchg
inc
ret
cmc
mov
add
inc
xchg
stc
mov
sub
mov
and
mov
inc
cmp
inc
mov
sti
and
ds
ljmp
pop
sahf
lahf
out
add
jmp
xrstors
pop
clc
insl
rolb
push
add
mov
add
push
movsb
pop
or
ljmp
jl
dec
rcl
push
pop
incl
aaa
loopne
insb
dec
adc
or
sub
cmp
decl
mov
push
sub
js
cmpl
add
mov
jecxz
movsb
mov
cld
or
ficomps
jl
das
dec
inc
insl
hlt
out
mov
xchg
pop
jno
nop
jecxz
lods
mov
inc
or
mov
dec
xchg
in
int
imul
pop
adc
push
or
push
add
fiadds
jge
xchg
pop
rcrl
mov
lahf
and
andb
xchg
and
inc
push
mov
stos
imul
pop
out
cmp
or
cmp
clc
dec
ret
cli
mov
adc
dec
mov
nop
adc
cmpsl
xchg
sub
test
pop
das
mov
mov
repz
push
scas
mov
clc
push
fistps
in
js
mov
push
inc
add
cmp
insl
xchg
ss
cmp
repnz
xor
fwait
or
xor
pop
loopne
mov
scas
cmp
mov
sbb
sbb
adc
repnz
stos
push
jae
jo
addb
push
or
pop
and
sar
jge
jmp
stc
aad
sbb
and
mov
pop
jbe
adc
push
rol
jecxz
jo
mov
sbb
push
pushf
or
test
or
inc
adc
icebp
adc
sub
or
movnti
test
inc
xlat
arpl
repz
jle
into
lret
outsl
lock
cmp
data16
sti
xor
mov
jge
test
mov
pop
aaa
shll
add
cmpsb
sub
data16
push
lea
lret
and
mov
xchg
leave
pop
mov
mov
je
fsub
xor
scas
add
outsb
dec
sub
cmp
lods
loopne
or
jae
cwtl
rol
cmp
pop
gs
inc
inc
lret
mov
dec
inc
fcmovne
push
fwait
aam
xchg
addr16
inc
xor
cmc
adc
jmp
out
jecxz
mov
mov
xorb
fcoms
push
cmp
xchg
mov
or
mov
sub
std
dec
pop
cld
adc
dec
arpl
and
mov
dec
lea
and
fucomip
imul
push
das
jnp
pop
addr16
jne
xor
insl
pusha
popa
xchg
movl
imul
in
mov
xor
orb
inc
jecxz
inc
mov
or
test
adc
dec
popf
in
outsb
imul
lret
xor
loopne
dec
xor
push
sub
in
and
sahf
adc
mov
jno
and
incb
push
adc
lcall
jge
out
xor
sub
push
push
stos
fisubrl
and
sub
add
lahf
jle
jg
ds
sbb
mov
jmp
xchg
adc
push
cmp
ja
daa
andb
mov
lds
cmpsl
hlt
inc
mov
or
cmp
andb
mov
lret
sub
xchg
aam
pop
out
mov
mov
scas
push
or
aam
fsubs
jecxz
cmc
xchg
mov
and
cmp
push
lahf
imul
aam
mov
dec
pop
mov
insl
jmp
mov
push
jnp
rol
inc
push
sti
and
jg
cld
sbb
mov
xchg
hlt
mov
out
mov
mov
sahf
or
popa
gs
jbe
aad
mov
xchg
mov
hlt
jecxz
jno
sbb
sub
mov
cmp
mov
call
add
xchg
inc
aam
mov
mov
cld
movsl
icebp
insb
shrb
xchg
out
push
adc
ds
push
mov
mov
pop
lds
movsl
push
adc
mov
out
cmp
pushf
repz
mov
cmp
lret
cmp
mov
mov
push
jno
push
dec
mov
xor
dec
test
or
dec
mov
out
ret
pop
xchg
xchg
rolb
add
adc
addr16
rol
hlt
ja
sbb
insb
cltd
and
dec
dec
push
add
pop
sub
dec
adc
xchg
repnz
mov
in
jle
inc
cltd
bound
xchg
xchg
and
cmpsb
mov
or
out
push
out
pop
xchg
dec
cmpsl
fldl
scas
daa
push
adc
pusha
aas
ret
sub
inc
in
and
pop
mov
pop
jmp
loope
addr16
out
leave
mov
or
popf
call
pop
pop
repz
rorb
std
inc
roll
jle
shll
add
and
loop
jg
mov
aad
sti
lahf
mov
push
mov
cmpsl
xor
inc
cs
sbb
push
push
repz
dec
jno
adc
faddp
movsl
test
inc
cli
cmp
int
dec
xchg
and
call
fistl
lahf
push
jcxz
inc
mov
mov
mov
inc
data16
fs
lds
insb
pop
add
loopne
mov
jl
je
pop
inc
add
iret
or
adc
out
inc
pop
arpl
lods
dec
stos
lds
popa
inc
cli
out
in
mov
sbb
in
push
xchg
sbb
aaa
dec
jno
push
clc
xchg
lds
cmpb
pop
pusha
sti
cmp
fwait
cltd
repnz
out
int3
mov
decb
daa
lods
xchg
int
and
jmp
sarl
mov
mull
or
add
sub
stc
push
scas
cmp
mov
lock
pop
mov
test
jecxz
arpl
mov
xlat
xor
pop
xor
pusha
cmp
or
dec
sbb
mov
mov
movsb
adc
sub
and
or
outsl
ficoms
mov
cmp
jl
lods
jecxz
adc
sti
lds
mov
jns
mov
cmp
xchg
push
or
int3
push
inc
jl
mov
jmp
mov
sbb
outsl
mov
rorl
in
clc
into
and
pop
inc
push
cmpl
inc
lret
loope
iret
addl
and
test
xlat
and
scas
clc
cmp
mov
insl
add
and
rorl
xchg
sbb
mov
sbb
cmp
cmpsl
ja
cli
rclb
in
pop
insl
jbe
and
lcall
or
xlat
aaa
loop
jne
xchg
int
insb
fstl
xchg
jp
lcall
lock
popf
dec
inc
push
mov
add
mov
out
xchg
aam
pop
loope
mov
dec
or
test
in
mov
xor
fstl
pop
cmp
jmp
stos
iret
pushf
mov
cmpsb
push
or
sub
jo
add
aaa
ret
in
push
dec
xchg
xchg
stos
subl
inc
scas
pop
and
xor
mov
push
lcall
xlat
in
subb
ds
push
fidivrs
mov
je
inc
lock
push
mov
or
mov
lret
cmp
stc
std
gs
mov
fldl
ret
xchg
cwtl
add
inc
xchg
jecxz
shrl
jae
sahf
push
mov
inc
jecxz
adc
in
mov
cs
or
repnz
mov
dec
mov
movsl
cmp
and
rclb
shll
dec
rcr
jns
popa
cmp
sub
sub
movsb
pop
inc
adc
aam
lcall
stos
or
loopne
push
xor
mov
pop
hlt
mov
mov
dec
sbb
mov
sbb
adcb
xchg
rol
sub
jp
loopne
in
out
mov
and
dec
pop
inc
pushf
adc
data16
fldl
popa
sub
lahf
xchg
lret
push
pop
push
sarl
sbb
push
dec
int3
cmp
pop
pop
jl
mov
into
imul
cmpsl
insl
fsub
test
sub
fbstp
sbb
and
adc
in
jo
mov
add
jl
pop
and
pop
jb
add
dec
ss
jecxz
test
pop
xor
or
sbb
fdivl
aad
inc
fld
lahf
shl
aaa
jg
jns
adc
loop
lds
push
rcl
xchg
int
mov
cwtl
divl
mov
dec
orl
repz
sbb
out
in
jbe
dec
repnz
sar
cmp
sti
push
push
cmp
test
movsl
sub
xchg
seta
out
loop
cmp
or
cmpsl
push
add
adc
shrl
inc
fwait
jg
inc
stos
mov
pop
mov
scas
add
mov
mov
mov
mov
in
ss
in
pop
adc
or
push
jne
and
int
adc
outsb
and
andb
jecxz
aam
pop
lds
in
dec
inc
test
or
sbb
sbb
xchg
mov
pusha
or
pushf
xchg
daa
and
clc
js
outsl
cmp
pushl
mov
adc
or
cli
or
cmpsl
xchg
mov
out
jnp
mov
inc
popa
jecxz
xlat
loop
jg
cmpsl
mov
add
push
xchg
xchg
repz
fwait
das
inc
jnp
cli
mov
int3
movl
xor
into
outsb
shlb
inc
loopne
sti
push
popf
pop
pop
pop
nop
fildl
out
scas
mov
das
jno
pushf
inc
repnz
cltd
mov
push
mov
in
lcall
mov
push
xlat
sub
cwtl
sbb
sti
popa
insb
push
das
sbb
les
mov
push
pop
xchg
shll
dec
pusha
dec
cmp
sub
mov
dec
nop
mov
or
push
in
and
and
andl
cli
cmpsl
sbb
mov
sbb
xchg
jge
insb
cmp
mov
call
lret
xorl
ss
gs
je
mov
cld
in
daa
sub
lahf
iret
push
jle
inc
xchg
aas
movsb
movb
cmp
lea
out
sbb
repz
push
test
pop
outsl
mov
sbb
mov
rol
ret
inc
push
out
push
loope
pop
add
adc
popa
jl
scas
testb
adc
jb
movsl
in
pop
xor
lock
pop
rorl
sub
xchg
push
xor
mov
pop
sbb
movl
loopne
xchg
mov
inc
cmc
cs
xor
push
adc
or
lret
fildll
or
sub
cmp
pop
xor
ljmp
rclb
popf
jle
cmpsl
jmp
les
and
dec
ret
xor
add
push
jmp
cmc
pushf
xor
adc
mov
in
movsl
sbb
ljmp
inc
inc
mov
out
push
adc
loopne
jae
fistpl
lods
fcomps
pop
int3
sub
inc
js
lds
dec
and
or
mov
test
push
js
sub
out
arpl
xlat
in
mov
or
insb
pop
sub
mov
imul
cmpsb
xor
push
pop
inc
mov
pusha
insb
push
shrb
xor
jb
mov
push
xor
ss
push
sar
jno
in
mov
sarb
adc
mov
add
push
std
sbb
mov
cmc
loopne
dec
sub
xchg
call
jecxz
sub
cmpsl
adc
lea
dec
rcrb
adc
push
dec
add
mov
orps
sarb
mov
xchg
ja
or
insl
pushf
int
mov
imul
jne
iret
repnz
adc
xchg
add
sbb
mov
cmp
scas
lcall
jecxz
loope
inc
pushf
addl
xchg
mov
lods
mov
repz
shlb
lret
jno
cmp
pusha
mov
cld
daa
mov
or
dec
test
call
xchg
push
or
inc
mov
pop
cld
cmp
push
add
sbb
pusha
fsubrs
out
mov
or
or
xor
jmp
and
adcb
adc
mov
xor
mov
cmc
add
sub
pushf
scas
in
fwait
mov
xchg
fadd
cs
out
iret
into
loope
add
sbb
roll
or
hlt
jmp
and
cltd
pop
push
or
push
repnz
mov
shlb
in
sub
hlt
fidivrs
ljmp
adc
adc
sub
loope
mov
mov
mov
inc
cmp
mov
pusha
pop
cld
or
call
ret
sub
test
dec
int
mov
ret
add
cmpsb
and
sbb
arpl
frstor
paddd
push
or
jo
idivb
sbb
in
pop
pop
dec
stos
mov
shr
xchg
hlt
dec
loopne
mov
pop
lea
movl
sbb
rolb
xchg
aaa
mov
aam
mov
sub
pop
and
loope
xchg
xor
xchg
inc
mov
jge
sbb
pop
data16
xor
inc
xchg
pop
adc
inc
cmp
lds
pop
hlt
xchg
mov
or
xchg
push
mov
mov
shl
outsl
fucomi
sbb
cmpsb
push
sbb
and
popa
mov
pusha
rcl
and
pop
mov
cmp
lea
ljmp
movsb
push
mov
into
mov
jl
test
xchg
cmp
mov
lock
nop
mov
into
int
mov
adc
adc
or
insl
sub
in
je
sub
repz
fcmovnb
lcall
push
jb
stos
bound
jle
cmp
aad
out
rol
inc
sbb
faddl
in
jnp
int
mov
push
shr
lret
lds
les
ret
sbb
jecxz
lods
dec
inc
scas
or
xchg
push
mov
iret
outsb
and
not
nop
xchg
andl
and
dec
pop
in
cmp
rclb
mov
jbe
push
sarb
pop
pop
jge
fs
out
jecxz
push
xchg
inc
mov
ffreep
cmovo
inc
mov
xor
ret
scas
adc
inc
xor
insb
pop
inc
adcl
sbb
insl
stc
xchg
push
add
mov
and
ret
lcall
mov
and
loop
mov
mov
mov
xor
into
jb
arpl
cli
xchg
adc
and
fdivl
xchg
pop
adc
sbbl
inc
inc
and
jb
loop
cmpb
adc
mov
add
nop
cwtl
insb
test
mov
xor
cmpsl
dec
stos
and
pop
mov
daa
data16
or
stos
pop
jns
lret
jmp
sub
rorl
sti
jecxz
pop
xor
in
mov
xchg
jecxz
adc
out
cmpsb
arpl
mov
jb
add
inc
out
ret
mov
dec
rsm
out
imul
xor
jmp
sub
xchg
sub
mov
mov
xchg
pop
mov
fwait
mov
mov
jle
call
arpl
sarl
mov
cld
dec
or
ror
cmp
dec
negb
jne
test
aad
mov
adc
jnp
xchg
test
out
sub
lods
pusha
loope
movsl
push
sub
sbb
out
fldt
jge
insb
incb
mov
mov
in
out
cmp
cmp
repnz
sbb
and
adc
lret
pop
aaa
ret
jno
or
sub
adc
pop
jb
mov
ds
mov
and
movl
sub
dec
jne
aad
das
xchg
aaa
mov
dec
dec
push
xchg
repz
dec
pop
mov
and
pop
adc
push
dec
rcll
mov
dec
into
cmpsb
pop
adc
push
cltd
push
je
mov
dec
add
adc
daa
fcom
adc
fsubrl
imul
mov
ljmp
rclb
pop
xor
cmpsl
inc
and
jl
out
mov
cmc
and
fiadds
inc
xchg
xorb
inc
xchg
mov
stos
dec
stos
fsubrs
mov
out
fdivrp
imul
xchg
lds
mov
dec
fisubs
int
jge
sbb
mov
jl
mov
out
nop
scas
mov
cmpsl
jne
in
xchg
mov
pop
das
ret
popa
cld
xchg
add
jns
aas
out
push
sub
cmpl
fbld
in
repz
cmpsb
in
leave
xchg
mov
xorb
xchg
jmp
stc
outsb
and
inc
cmp
aas
sbb
or
movl
and
xchg
dec
jne
jle
stos
xchg
jmp
or
mov
shr
dec
sbb
mov
loopne
pop
lahf
jo
fadds
jno
cmp
ss
add
inc
adcl
fwait
daa
lret
pop
orl
ljmp
push
and
repz
adc
xchg
sbb
nop
test
xor
out
sbb
jle
mov
sbb
jo
mov
addr16
sub
ja
dec
pop
inc
or
lea
or
xchg
call
mov
dec
sub
mov
inc
jge
push
frndint
mov
adcb
fs
mov
or
lret
int3
jns
mov
inc
pop
pop
inc
jne
shll
dec
or
hlt
mov
xchg
lret
mov
jge
loop
mov
mov
aam
js
push
mov
mov
in
aam
mov
stc
test
xor
cmp
pushf
mov
mov
cmp
divb
nop
pusha
xor
cmc
stc
iret
and
cmp
sub
dec
xchg
test
insl
mov
inc
cmp
add
mov
push
mov
cmc
cmp
daa
xchg
jb
and
insl
rorl
add
xor
sbb
mov
mov
pop
enter
inc
rorb
pop
outsb
xchg
loope
sbb
hlt
add
pop
push
sbb
adc
out
lret
inc
out
test
jmp
jno
shrb
or
js
out
leave
pop
or
fmuls
dec
push
inc
movl
and
xchg
mov
ret
add
add
roll
movsb
mov
sbb
addr16
or
ss
daa
scas
inc
or
sub
test
rcll
stos
mov
loop
sbb
cld
pop
jle
dec
push
in
push
sbb
mov
push
outsl
sub
mov
outsb
pushf
pushf
push
aaa
mov
fadd
out
or
fildl
test
jne
repz
pop
lock
pop
add
data16
icebp
movl
loope
lret
cmp
hlt
outsb
xor
mov
xchg
xchg
pop
sbb
ja
filds
pop
divb
jb
jp
dec
and
mov
cmp
inc
addr16
lds
sub
and
or
jno
ss
or
pop
inc
popf
ret
and
icebp
lods
mov
xchg
xor
rol
push
mov
jp
in
shll
cmp
xchg
add
jns
rclb
add
inc
push
push
xchg
lea
mov
sub
xor
add
dec
pop
f2xm1
inc
mov
jne
repnz
push
xchg
mov
mov
stos
cli
fcomi
or
sub
pop
pop
ss
test
push
xchg
lahf
stos
das
adc
mov
movl
pop
in
mov
add
inc
sti
xchg
arpl
push
int
divb
mov
jns
movl
loope
fiadds
sbb
es
rcrb
bound
lock
lcall
mov
sbb
push
cmp
daa
je
imul
imul
outsb
movsl
icebp
test
push
in
add
clc
add
push
idivb
imul
mov
pop
fisubl
xchg
pop
repz
inc
inc
sbb
fsts
sbb
stc
inc
push
and
lret
jp
pusha
outsl
lods
adc
sbb
test
loopne
pop
aas
data16
pop
mov
inc
xchg
movsb
lret
jno
or
out
test
mov
mov
movsb
sub
add
pop
int
mov
sti
or
lds
lods
ret
inc
xlat
inc
lret
test
imul
ret
jecxz
pushf
add
xchg
cmp
and
mov
dec
div
push
jp
pop
mov
push
or
push
add
add
push
test
push
xor
mov
lcall
push
les
daa
lods
cmp
outsl
fs
adc
repz
mov
mov
and
sub
daa
pop
loop
sub
std
cmp
add
movl
sbb
test
cmp
push
lock
jne
or
adc
inc
addr16
popa
pop
pop
push
mov
mov
imul
and
adc
pusha
out
jg
mov
icebp
mov
in
and
mov
mov
mov
pop
dec
mov
test
in
sub
addl
dec
mov
jmp
je
imul
or
orb
mov
orl
add
shrb
push
dec
adc
call
in
mov
loop
and
cltd
mov
mov
inc
xchg
jbe
and
xchg
ss
movl
daa
push
loopne
cmp
test
fists
sub
scas
out
jg
sub
pushf
xor
cli
jl
jno
cmp
data16
adc
xor
dec
xchg
std
push
test
pop
mov
push
jp
sub
jecxz
mov
mov
inc
sbb
in
test
dec
daa
sbb
notl
das
xchg
push
sbb
pop
adc
sbb
mov
push
mov
cltd
sub
sub
cmp
out
mov
out
push
lea
imul
adcb
cld
addr16
cmp
or
or
ja
hlt
push
add
aam
push
das
test
sbb
mov
scas
outsb
out
mov
sbb
mov
cmc
push
mov
inc
fisttpll
xlat
daa
xor
inc
movsl
inc
dec
ljmp
fnstsw
jge
jg
mov
inc
mov
fistpll
and
test
bound
test
iret
sbb
ds
lock
xchg
dec
xchg
leave
sbbb
push
dec
stos
pusha
mov
inc
add
sub
mov
sbb
gs
mov
cmp
sbb
inc
std
or
lea
cwtl
fwait
xchg
jae
cmpsb
mov
mov
and
data16
jae
xor
scas
fcoml
js
add
sub
lods
ficoml
xor
mov
xchg
and
jae
cmp
lret
adcb
inc
ss
pop
mov
shr
test
out
xlat
aaa
and
cld
cmc
dec
xor
lcall
andl
insl
sbb
cwtl
jmp
pop
xlat
movb
xchg
mov
cmc
mov
shl
push
sub
jp
shlb
mov
adc
test
lret
adc
mov
push
mov
mov
jo
inc
sub
cmpsl
sahf
arpl
dec
mov
push
jbe
sahf
inc
mov
adc
push
iret
pop
dec
ds
jo
or
rcl
add
fwait
xchg
xchg
xchg
cld
cmp
mov
dec
pop
xchg
dec
imul
mov
push
test
jmp
pop
faddl
out
adc
clc
inc
xlat
adc
repnz
xchg
adc
and
hlt
pop
xor
and
xchg
push
jecxz
jecxz
xchg
mov
nop
jne
hlt
inc
dec
loopne
mov
add
add
sub
sub
xor
cmp
mov
pop
jae
sub
cld
cmpsb
movsb
jbe
jae
xor
cltd
scas
inc
push
and
das
out
mov
icebp
ror
mov
mov
fbld
loop
cmp
shrl
adc
dec
sbb
into
ret
cmp
in
jmp
push
mov
xor
inc
aaa
adc
lret
popa
sti
sbb
sbb
movl
mov
iret
in
insb
inc
jl
fs
add
mov
add
push
pop
stos
sub
add
rolb
push
test
stos
push
leave
mov
lods
call
repnz
orb
insl
je
das
mov
dec
pop
mov
mov
push
mov
insl
mov
stos
pop
out
ds
xor
dec
lret
mov
cmpl
jns
or
or
imul
and
js
ja
mov
dec
mov
sbb
mov
mov
stc
jno
divl
imul
or
mov
outsl
or
dec
mov
sbb
push
or
adcb
idiv
dec
sub
dec
je
sbb
stc
mov
lcall
push
add
mov
push
test
add
les
scas
add
and
idivb
and
scas
push
push
pop
lahf
or
popa
mov
insb
push
pop
xor
leave
pushf
imul
dec
jnp
mov
out
inc
xor
cmp
sbb
pushf
cmp
jns
mov
aaa
push
dec
sarl
aam
test
mov
inc
lock
imul
iret
push
pop
cwtl
pop
les
rol
and
cmp
cvtps2pd
out
jecxz
pop
xchg
ret
mov
fs
mov
sbb
dec
pop
jb
xchg
cli
outsb
mov
jge
xchg
xchg
in
mov
sbb
movl
outsl
fcmovu
lret
pop
sbb
dec
movl
sti
fs
cmc
es
mov
adc
bound
pop
inc
inc
mov
popf
cmpsb
loopne
mov
outsb
pop
jns
pushaw
and
movsb
out
or
adc
shrb
out
into
loopne
jno
push
int
adc
cmpsb
and
mov
xchg
adcl
xchg
jmp
outsb
out
sbb
pop
mov
and
loop
pop
pop
nop
inc
push
jb
leave
jg
pop
mov
push
mov
push
pop
mov
data16
ljmp
jno
ds
addr16
jecxz
in
inc
into
xor
inc
xor
bound
or
xor
jp
xchg
mov
jmp
mov
jecxz
in
out
movw
loopne
mov
insl
xor
dec
or
lret
pop
aas
ljmp
mov
mov
les
cwtl
add
cmp
daa
rcrl
xor
jmp
mov
dec
cli
loop
adc
dec
sbb
in
daa
shll
scas
shlb
xchg
cmp
test
fdivrs
adc
pop
inc
mov
jp
pop
shrb
scas
sbb
pusha
ss
xchg
mov
push
cwtl
dec
movl
add
or
pop
xor
shlb
adc
test
sbb
test
push
jb
cmp
mov
inc
sub
xor
ja
sahf
cwtl
add
push
fisubrl
repnz
add
mov
sbb
xchg
cltd
cwtl
add
das
nop
or
xchg
lahf
push
adc
or
jecxz
stos
inc
pop
xchg
test
jecxz
rolb
and
push
movsb
jmp
cmp
pop
or
jae
movsb
push
mov
clc
and
into
int3
mov
push
mov
mov
outsb
je
mov
fsub
jae
lods
jne
int
lds
xor
mov
ret
sbb
adcb
jecxz
or
cmp
rclb
out
xsaves
pop
mov
inc
cwtl
jns
addr16
cmp
mov
fsincos
filds
ljmp
imul
inc
popf
dec
lahf
cltd
aam
add
call
aaa
jmp
sahf
pusha
sub
scas
ficomps
mov
dec
add
fstl
es
xchg
add
scas
xbegin
out
jbe
and
pop
add
lods
lahf
xchg
mov
or
inc
mov
movl
xorb
jmp
scas
test
jecxz
and
pop
fsubrl
cmp
dec
test
push
pop
cmp
jg
fldl
pop
mov
ror
nop
lahf
daa
pop
and
leave
xlat
in
jo
insl
lods
adcl
xchg
push
push
into
mov
out
int
sub
out
adc
push
out
push
inc
cmpsb
and
sbb
testl
outsb
pop
subl
shlb
mov
loope
cmp
inc
mov
ja
ret
nop
or
mov
inc
mov
test
aam
insb
aad
cmp
adc
mov
outsb
and
add
xlat
lods
pop
stos
xchg
mov
subl
mov
mov
prefetch
or
mov
xchg
shlb
inc
dec
mov
mov
push
stos
movsb
gs
push
push
es
add
std
adc
mov
fnstenv
pop
lret
jp
insb
aas
xchg
sbb
sbb
test
xchg
dec
push
out
insb
es
push
jne
cmp
cmpl
xchg
cmp
daa
dec
das
mov
pop
shrb
aaa
rcrb
mov
lods
xor
xchg
arpl
out
in
cwtl
xchg
adc
jb
fstp
jae
mov
std
mov
and
inc
jmp
test
fists
ja
inc
adc
add
jecxz
in
aas
movl
or
gs
out
adc
mov
orb
or
mov
pop
sar
fadds
jle
jns
stos
negl
pop
divb
js
jmp
dec
ret
jp
daa
inc
sub
out
jle
jecxz
add
jne
out
jp
inc
fst
outsl
dec
insb
clc
fcomps
in
scas
or
rol
imul
xor
add
dec
pop
mov
adc
mov
add
push
mov
and
cld
jmp
or
mov
jo
xchg
in
popf
pop
out
inc
cwtl
inc
push
movsb
push
xchg
fwait
xchg
xchg
in
mov
into
inc
repnz
fstps
aaa
mov
jb
ret
xor
mov
test
lcall
inc
jg
jecxz
dec
sub
iret
dec
jge
sub
mov
and
lds
and
in
inc
adc
push
pusha
jle
mov
test
xor
repnz
xchg
daa
cmpsl
jmp
or
insb
addr16
std
xchg
mov
outsl
adc
xor
jg
xchg
aad
ret
pop
lret
and
mov
subl
fnstenv
test
xchg
push
sub
or
push
movsb
mov
cwtl
mov
xrelease
mov
test
fs
cmp
pusha
jl
cltd
and
mov
inc
ret
push
das
fistl
lret
bound
sar
repz
je
or
popf
mov
push
fcompl
mov
data16
jb
add
or
cmp
push
sub
inc
mov
mov
mov
cmp
imul
adc
xor
mov
andb
cli
adc
outsl
dec
lcall
dec
mov
pusha
rorb
out
push
cmp
xchg
imul
jmp
sub
rorb
push
arpl
in
cmpsb
jp
in
lret
mov
test
loop
daa
or
adc
add
outsl
les
cs
mov
test
inc
cmp
cs
stos
lret
jecxz
call
mov
test
push
mov
int3
movl
adc
sbbb
sub
add
xchg
fs
mov
xor
mov
mov
movsb
push
fdivrl
xchg
iret
icebp
popf
mov
mov
and
mov
cmpsl
dec
or
mov
or
push
filds
in
xchg
repnz
xor
jb
cmp
pop
shrl
xchg
or
jo
mov
and
shll
hlt
xchg
pop
pop
mov
adc
loope
dec
scas
lds
mov
or
frstor
jp
jecxz
jne
xchg
add
and
xlat
pop
adc
imul
inc
popf
sbb
dec
jno
xchg
call
cmp
fidivl
jb
insb
sbb
popa
jae
pop
dec
sahf
push
in
xchg
in
dec
adcl
xor
mov
lods
push
dec
mov
pop
clc
pop
out
mov
or
data16
jecxz
and
push
xlat
pop
mov
pop
or
mov
es
sub
subl
mov
mov
ret
js
mulb
jmp
ds
cmp
ss
sbb
xchg
sbbl
ja
push
xorb
add
pop
out
mov
pop
in
rclb
and
test
mov
mov
add
mov
sbb
push
lds
mov
and
repz
push
push
sbbl
mull
xor
movsl
mov
fidivrs
pop
pop
mov
in
push
cmc
dec
sahf
mov
aaa
xchg
and
rclb
mov
je
aad
popa
frstor
jmp
orb
inc
add
imul
lods
fistps
fdivrs
dec
sbb
mov
lcall
jl
stos
jmp
xlat
and
mov
imulb
mov
cs
inc
stos
jp
sub
push
filds
push
mov
mov
pop
loop
xor
push
sub
push
imul
out
adc
dec
inc
in
push
cmp
sbb
cmp
rcll
adc
rclb
add
fmull
test
loope
pop
data16
mov
jecxz
testb
stos
outsb
jnp
cmp
mov
xor
sbb
nop
cmp
mov
mov
jge
pop
ret
dec
sti
jbe
pop
xchg
clc
or
dec
movl
mov
js
mov
movsl
lods
fwait
and
jnp
pop
or
fiadds
stos
xchg
pop
addb
add
push
sbb
jecxz
or
inc
push
subl
aad
jb
aam
in
popa
sbb
and
mov
mov
mov
daa
inc
mov
add
adc
or
dec
adc
icebp
and
cwtl
sub
out
dec
leave
test
rol
inc
inc
cmp
les
push
outsl
adc
inc
movsl
test
mov
loop
sub
push
in
xor
popf
jns
push
fcomps
out
daa
sub
push
repnz
fisttpll
pop
sub
dec
xor
jg
aaa
mov
xchg
pop
push
mov
adc
sub
mov
mov
pop
or
es
aam
mov
xor
das
or
mov
xor
adc
lahf
inc
cltd
mov
repnz
in
inc
inc
or
mov
inc
ja
push
mov
adc
sbb
and
shrb
lcall
lds
mov
dec
es
mov
sbb
add
push
push
mov
ret
add
mov
push
cmp
xchg
pop
inc
sub
lahf
fwait
add
mov
cmp
loope
pop
push
sub
xor
inc
aam
dec
mov
pop
cmpsb
cmpsl
push
pop
mov
ret
jo
hlt
dec
and
pop
cmp
addr16
test
push
mov
test
aam
nop
or
int
sub
push
out
dec
adc
movl
or
fnsave
add
test
mull
jle
inc
hlt
popf
int3
js
jb
inc
cld
not
out
outsb
xchg
sbb
push
xlat
inc
push
and
and
cmp
pop
inc
mov
mov
out
xchg
sub
out
scas
xchg
lret
or
mov
mov
aaa
roll
jmp
inc
adc
xor
call
ret
xchg
fdiv
mov
dec
pop
adcb
je
push
dec
rclb
pusha
xchg
cld
ja
fnsave
gs
push
push
pop
outsl
jno
xor
aas
neg
outsb
mov
inc
mov
aad
cmpsl
repz
mov
loop
mov
xlat
add
adc
ret
fdivl
mov
addr16
mov
xchg
lret
movsl
or
mov
push
sbb
cmp
push
std
ja
icebp
inc
ret
dec
test
call
in
jmp
jnp
lret
mov
andb
mov
das
push
add
dec
cli
mov
into
insb
push
cld
jg
adc
sti
dec
xchg
cmpsl
aam
sub
push
adc
push
cmp
mov
sub
rorb
dec
jae
mov
clc
test
xchg
mov
orb
add
orb
mov
xchg
mov
push
push
movnti
adc
inc
das
rcr
int3
cmpsl
sbb
rol
fildl
push
test
jo
pop
adc
push
mov
ljmp
clc
xor
out
sub
ss
sbb
mov
adc
in
lock
pop
loopne
sub
hlt
jecxz
repnz
jg
mov
mov
in
add
cmpsb
pop
insl
loopne
mov
inc
push
add
iret
je
inc
xchg
jge
in
push
push
sti
mov
out
repnz
pop
sub
js
or
fld
fcoms
add
mov
xchg
push
adc
mov
mov
xor
into
jle
mov
test
push
cld
out
js
dec
and
xor
cld
stos
mov
out
data16
xchg
sbb
adc
or
fdiv
mov
mov
std
in
daa
das
lahf
pop
mov
xchg
cli
jl
adc
lds
dec
sub
xor
insl
hlt
push
mov
sbb
and
cmp
test
adc
pop
out
fstpt
inc
xchg
dec
mov
out
arpl
push
jnp
lods
jo
test
in
sbbl
push
pop
sub
in
movsl
cmp
push
pop
and
test
dec
adc
cmpl
or
pop
insb
push
sti
add
xchg
push
inc
xor
xchg
dec
mov
xor
xlat
dec
or
sti
dec
mov
cmp
mov
adc
mov
push
push
clc
pop
les
fidivrs
ss
out
mov
mov
stc
lahf
out
sub
mov
stos
jg
fwait
mov
xchg
cmp
inc
nop
lcall
ds
gs
jae
dec
xchg
xlat
das
decl
sub
inc
push
pop
pop
lods
inc
rorl
inc
dec
shr
lahf
cmpsl
sub
into
mov
and
ss
inc
mov
sbb
xchg
daa
push
xchg
pop
sub
popa
jp
sub
jns
inc
mov
cmp
ss
in
cmp
fisubrs
mov
sahf
test
jmp
stos
xchg
addr16
mov
fdivs
sbb
mov
dec
or
xchg
dec
xchg
movl
jmp
mov
out
add
lods
adc
dec
dec
mov
push
icebp
aaa
xor
mov
fs
sbb
xchg
and
iret
pop
repnz
jbe
jge
rcrb
sbb
xor
push
les
fs
inc
call
shlb
in
or
xor
ficoms
xor
lahf
sub
sahf
das
js
aas
bound
adc
rol
or
jns
rolb
adc
dec
les
push
mov
and
cmp
jbe
xor
and
jo
sbb
idivb
push
cmp
fsubs
aaa
jo
test
adc
pushf
rclb
ss
fldcw
pop
or
adc
mov
ljmp
cwtl
js
mov
daa
cmp
mov
loope
inc
or
mov
fldt
xchg
lods
push
int
hlt
movsl
in
adc
clc
into
add
push
ja
xchg
and
movsb
xchg
dec
xor
hlt
push
iret
data16
repnz
jp
mov
leave
stos
movsl
notl
dec
cli
mov
dec
add
xchg
xor
fisubrl
mov
loopne
pop
jbe
fdivrs
adc
sti
mov
cmp
cld
nop
insl
add
inc
jo
push
dec
out
sub
mov
inc
push
or
inc
jecxz
mov
mov
adc
or
imul
cltd
fs
jnp
sarl
pop
cmc
xchg
out
ret
push
testb
dec
and
mov
popf
fidivrs
mov
ljmp
out
test
mov
pop
inc
dec
cmp
out
lock
cmpb
jle
sbb
scas
lcall
or
popf
xlat
hlt
out
dec
cs
jno
cltd
mov
sbb
adc
sub
mov
xchg
mov
call
push
das
les
sub
push
ljmp
in
xorb
sub
jnp
sbb
mov
outsl
aaa
mov
fidivl
xor
es
lcall
popf
leave
mov
adc
sahf
dec
aad
scas
vmptrld
jo
mov
fs
and
push
xchg
shrl
jmp
mov
enter
add
lahf
xchg
dec
sahf
pop
mov
jb
dec
pop
xor
sbb
aas
icebp
mov
dec
or
daa
sub
pop
sarl
push
mov
push
xchg
jle
test
mov
sbb
iret
fists
fbld
pop
mov
sarl
pop
xchg
lds
filds
dec
pop
imul
fdivs
mov
sub
les
js
pop
ror
decb
imul
dec
pop
pushf
cwtl
lods
cltd
out
xchg
out
pusha
ucomiss
adc
xor
clc
faddl
std
push
sub
jne
push
ret
call
test
daa
add
mov
cmp
mov
pop
push
adc
or
roll
cmp
aas
shll
sbb
mov
add
cltd
test
fiadds
inc
aam
mov
mov
dec
out
cmp
and
sbb
xchg
sbb
and
movl
jle
jb,pt
insb
mov
lcall
add
mov
pop
mov
rorl
sti
dec
dec
daa
loop
mov
lds
testb
cld
mov
sub
adc
pop
sub
jmp
test
mov
or
xor
adc
das
mov
addl
cld
stc
xchg
jb
test
leave
test
and
andb
lock
cltd
push
jns
daa
fistpll
or
inc
xor
in
pop
cwtl
sahf
sbb
push
out
or
push
rcll
fs
xor
lret
cmp
xchg
and
repz
and
jno
leave
mov
xorb
dec
mov
in
xchg
shl
xchg
push
mov
add
mov
or
mov
xchg
addr16
cmp
jecxz
fidivs
xor
repz
cmp
les
jle
xchg
insl
inc
ret
mov
call
rcrl
mov
in
ret
jmp
es
rcrb
dec
jb
and
addr16
addr16
sbb
fadd
xor
jmp
ret
jmp
es
adc
push
movsl
and
cmp
into
hlt
xchg
unpckhps
mov
xor
testl
jns
cltd
xchg
mov
cmpsb
jmp
push
add
jge
dec
mov
fld
mov
cmp
mov
sub
test
mov
outsb
ds
mov
incb
adc
xchg
dec
cmp
or
sahf
fidivs
fwait
push
adc
adc
out
mov
or
mov
mov
fdivrl
adc
in
sbbb
xchg
not
pop
push
call
xor
mov
and
jno
ljmp
push
movl
clc
shlb
xchg
xor
test
cmp
inc
stc
adc
movl
or
out
xchg
xchg
xchg
clc
les
dec
je
pop
sti
dec
ljmp
cmp
xchg
push
sub
mov
dec
ror
movsl
pusha
jnp
push
test
mov
jb
push
addr16
incl
js
adc
lock
mov
jle
mov
shll
imul
test
mov
xchg
mov
repz
pop
cwtl
dec
repnz
test
adc
jecxz
push
jp
mov
hlt
push
jbe
jmp
sahf
mov
gs
cmpsl
adc
aaa
in
mov
mov
out
cmp
fstps
popa
aas
mov
dec
mov
sub
imul
int
cmpsb
cmc
pop
mov
cmp
mov
aad
lahf
xor
out
adc
ljmp
int
shlb
clc
adc
adcb
inc
and
imul
mov
jg
inc
mov
dec
adc
mov
aaa
mov
pusha
push
cmpsl
je
jecxz
xor
mov
adc
inc
repz
mov
dec
adc
cmp
into
sti
inc
cmp
xchg
fisubrs
xchg
push
or
pop
or
and
sub
mov
icebp
test
inc
or
push
cmp
jmp
and
sbb
push
mov
rolb
popf
rcr
xchg
sbb
aaa
ss
lahf
sbb
js
in
insb
jle
and
dec
iret
push
lahf
inc
pop
call
repz
orb
dec
adc
pop
mov
inc
mov
ret
cmpsl
push
mov
fs
cmc
jg
jns
out
outsl
cli
jecxz
push
sub
mov
and
fcmovbe
ljmp
sub
aam
rorl
sahf
adc
xchg
adc
push
stos
out
gs
outsl
das
imul
dec
jnp
or
xchg
lahf
jb
leave
mov
loope
pop
sub
xorb
arpl
cmpsb
jge
stc
mov
jae
sar
pop
push
mov
adc
sahf
mov
mov
or
dec
push
push
pop
lcall
jl
data16
push
inc
loop
dec
jmp
shr
out
xchg
xchg
addr16
mov
iret
hlt
out
mov
roll
push
es
std
in
push
in
test
cltd
js
outsb
insb
pop
ret
ds
lret
sarb
lods
testl
pop
cmp
lds
sbb
push
enter
and
sbb
push
sub
mov
hlt
adc
stc
lock
dec
call
sub
inc
movl
dec
bound
icebp
push
sbb
or
repz
addr16
push
mov
ror
or
xchg
call
xsaves
and
and
mov
and
daa
push
xor
les
stos
popl
pop
ss
add
leave
sarb
call
subb
stos
aaa
jb
ror
iret
ja
mov
arpl
push
mov
or
sub
ljmp
mov
mov
adc
add
pop
adc
pop
pop
and
ja
push
shl
andb
das
dec
bound
jle
pop
inc
outsb
jmp
sti
loop
push
xchg
mov
ss
mov
sub
insb
andb
xor
leave
ljmp
les
popa
cltd
xor
inc
ret
rolb
and
xchg
sbb
lods
nop
push
loope
rol
iret
mov
or
orl
fldt
ret
test
loope
adc
loopne
push
sub
ss
mov
push
cmpb
inc
mov
xchg
xchg
mov
mov
int3
lods
sbb
xor
mov
inc
les
mov
mov
pushf
sbb
cld
ljmp
and
int
cmp
adc
add
popa
iret
jl
xor
icebp
xchg
sub
in
jmp
push
inc
jg
jae
inc
jle
xchg
jmp
mov
sub
outsb
mov
sbb
rolb
xor
repnz
pushf
add
lahf
in
or
jno
add
adc
pusha
pop
pop
push
push
rol
fnstcw
addr16
in
inc
adc
movsl
jp
test
and
mov
mov
fistpl
ja
das
imul
testl
inc
xchg
and
mov
sbb
xchg
lods
push
adc
out
outsb
gs
push
lock
insb
mov
mov
inc
icebp
push
sub
jnp
imul
faddl
jp
and
or
pop
loopne
pop
int3
pop
inc
outsl
jno
mov
xor
mov
in
push
xchg
xor
dec
inc
dec
dec
shll
xlat
das
push
cmpsb
xchg
ljmp
cwtl
icebp
inc
jae
je
sub
adc
repz
pop
cli
jbe
hlt
call
outsl
cltd
out
daa
scas
movl
rcrl
pop
adc
push
dec
xchg
mov
aaa
mov
jne
ret
jae
cmpsb
dec
sub
stc
push
in
lods
mov
stos
and
ret
lret
call
pop
mov
xchg
rorl
out
mov
add
add
roll
xchg
push
add
fldenv
add
js
cmp
cmp
imul
mov
dec
in
jo
or
mov
rep
and
arpl
mov
pusha
mov
pop
cmpb
ficompl
cmpsl
call
sbb
cmpsl
jns
outsb
into
loop
ret
fninit
mov
rorb
ret
insb
loopne
out
orb
bound
insb
lea
sbb
addb
push
dec
sub
es
jle
insb
dec
mov
lods
jg
insl
inc
jmp
ja
jl
mov
push
and
pop
dec
mov
cmp
rol
pushf
adc
jnp
mov
xor
lods
mov
sbbl
inc
or
sahf
inc
movl
jge
pop
mov
jg
test
push
mov
dec
mov
int
fdiv
sbb
mov
sub
gs
das
stc
lret
int3
imul
push
cmc
sub
push
addl
sahf
or
xchg
or
mov
sub
push
das
dec
repnz
ja
je
adc
rclb
rorl
aam
lock
push
xchg
jmp
push
mov
cwtl
outsb
fs
push
notl
call
push
fmulp
aad
sti
data16
mov
lods
je
jne
cmpsb
mov
inc
cwtl
and
sbb
sub
movl
leave
mov
je
and
mov
insl
fsts
jae
pop
xchg
or
pop
movsb
hlt
mov
in
push
les
dec
mov
jp
mov
adc
dec
inc
ja
xor
jmp
movsb
push
pop
push
lcall
sub
fs
in
shrb
mov
or
xchg
loop
adcl
fisubrl
ficoml
mov
rcrl
mov
subl
mov
xlat
out
movsl
jmp
jno
lock
add
mov
or
lea
dec
lret
sahf
daa
jo
icebp
cmp
adc
les
clc
jae
arpl
and
mov
mov
out
je
pop
mov
fisubl
leave
aaa
xchg
pop
inc
in
test
js
xchg
push
mov
xchg
jb
mov
aaa
scas
mov
pop
sbb
adc
popa
cmp
in
out
test
ret
mov
data16
mov
out
test
mov
pmovmskb
dec
mov
push
sbb
xchg
push
rcrb
jnp
mov
adc
push
aaa
inc
movl
add
and
decb
data16
clc
pop
add
shl
sbb
sbb
mov
push
or
add
adc
rol
mov
jge
out
sub
cmp
mov
insl
aas
testb
dec
movl
inc
iret
cs
mov
test
aam
push
lahf
push
out
mov
cld
xor
rorl
bnd
movsl
arpl
mov
test
push
lods
jne
xor
das
inc
insl
mov
adcl
pop
loopne
imul
aad
sbb
cs
daa
out
mov
push
pop
push
adc
dec
pop
mov
cltd
lds
mov
cs
mov
test
jno
out
pop
popf
call
sbb
and
test
lds
pusha
xchg
stos
add
jbe
adc
pop
inc
sub
push
pop
sub
mov
in
pusha
mov
adc
call
sub
adc
mov
repnz
mov
jle
sbb
add
ret
and
call
push
xorb
jp
push
push
sarb
mov
pop
fwait
cmp
mov
call
popf
and
add
in
dec
subb
shrl
addr16
mov
in
jb
sbb
push
ret
into
adc
sbb
pop
dec
sbb
pop
mov
loop
je
mov
mov
pop
cmp
jmp
xor
out
adc
outsl
sbb
jle
xchg
insl
movb
pop
mov
adc
lods
subb
xchg
lcall
sub
mov
das
filds
test
mov
daa
arpl
adc
pop
cltd
mov
mov
mov
stos
inc
in
push
into
call
inc
xchg
lret
shl
or
les
test
insb
jb
cs
nop
cmpsb
xchg
js
xchg
add
fpatan
jp
or
xchg
std
cld
jmp
divb
pop
aas
mov
or
sbb
lds
loopne
sarb
mov
out
inc
fldl
sbb
les
std
jl
clc
dec
pop
shll
and
push
mov
jecxz
mov
jno
and
cld
insb
stc
iret
fistps
inc
xor
ds
jmp
dec
mov
sub
xchg
mov
cmc
sbb
add
mov
aam
push
lcall
push
mov
xchg
xor
test
rorb
mull
inc
adc
in
int
xchg
dec
sbb
xor
incb
sbb
cmp
jp
push
add
orl
and
jno
addr16
adcb
insb
lds
ret
inc
or
sbb
in
push
pusha
xor
mov
stc
leave
inc
sbb
push
aaa
scas
and
fwait
mov
daa
xor
push
or
pop
dec
add
or
dec
push
add
bound
cmc
data16
orb
imul
jo
mov
sub
das
inc
xor
popa
jmp
pop
in
and
out
pop
mov
push
popf
pop
outsl
dec
add
push
sarl
push
jmp
movl
xchg
popa
movsl
cmc
push
sbb
mov
inc
mov
jecxz
xchg
xchg
loope
sbb
pop
gs
scas
clc
orl
push
fcmovnbe
jmp
icebp
pop
dec
push
xor
push
add
stc
mov
xor
cmc
adc
sbb
pop
int
sub
mov
aad
push
movl
or
mov
insb
sbb
push
push
mov
pop
lret
fwait
rcl
jne
push
cmp
mov
in
stos
pop
pop
pop
movsl
movsb
sti
inc
sub
sarl
jecxz
jns
das
or
mov
notl
inc
xchg
les
mov
repz
lret
das
sbb
bswap
outsb
inc
adc
or
xor
icebp
adc
lock
sbb
pop
and
lret
mov
popf
sbb
pushf
push
sti
addr16
sub
mov
icebp
push
inc
aam
bound
inc
popa
inc
push
leave
xchg
arpl
push
fstpt
pushf
jb
mov
jns
dec
imul
jecxz
mov
xchg
repnz
in
mov
jb
pop
and
fisubrl
mov
mov
mov
dec
mov
mov
ljmp
xchg
mov
ljmp
sub
test
data16
mov
mov
inc
or
leave
aas
push
xorb
sbb
je
inc
mov
xchg
mov
ret
push
ja
mov
and
adc
addr16
jecxz
rcl
pop
push
or
mov
jbe
xorl
sub
sbb
test
cmp
xor
cmp
mov
imul
mov
call
stc
dec
jmp
jno
pop
jo
mov
pop
xor
daa
int
popf
push
dec
and
sub
stos
mov
test
sarl
sub
dec
xlat
popl
fimull
test
pop
xchg
inc
les
mov
repnz
pop
mov
pop
mov
out
adcb
mov
clc
xlat
add
dec
in
sbb
in
movsl
in
stos
jmp
rol
pop
and
and
stos
lea
sbb
ret
outsl
push
mov
adc
pop
ret
adc
pusha
nop
fdivr
shlb
xor
out
stos
inc
sub
or
test
je
aaa
cmp
add
pusha
divb
inc
adc
cmp
shll
fimuls
cmp
iret
and
and
jnp
rcr
add
das
ja
shlb
inc
xor
ficoml
rol
dec
scas
pop
jg
cmp
inc
mov
xchg
mov
lds
adc
push
mov
clc
sbb
lock
test
push
cmpsl
lret
and
clc
mov
xchg
das
pop
mov
and
pop
sbb
shlb
jo
out
mov
ret
les
mov
and
adc
xchg
fs
cli
outsb
cld
lods
test
xrelease
dec
nop
pop
sub
inc
mov
fbld
iret
setle
cs
lods
push
lret
jo
aas
stc
ja
mov
fsubl
rclb
jle
sbb
rorl
jae
leave
add
mov
jecxz
mov
sbb
add
fdivp
loope
sbb
jle
test
jbe
mov
xchg
xchg
mov
ds
aas
mov
aaa
ljmp
jg
ficoms
mov
mov
movl
aad
shl
pop
rorl
cmp
decb
cltd
call
cmpsl
dec
pop
xor
mov
hlt
shlb
and
repnz
inc
sub
mov
ja
mov
aas
fwait
js
add
mov
popa
cmp
and
das
and
mov
arpl
movsb
jns
xchg
and
mov
cli
pusha
xchg
mov
std
pop
scas
stos
xor
jae
pop
insb
push
sbbl
sbb
jmp
mov
pop
cli
or
jae
mov
filds
test
rclb
mov
cld
xchg
pushf
push
fnstenv
jo
pop
adc
and
sbb
mov
popa
and
mov
push
adc
insl
and
lcall
fwait
roll
and
cmp
ljmp
sbb
sbbb
jp
mov
dec
xchg
shr
cmp
in
daa
fstl
mov
daa
inc
sbbl
in
pop
rcll
nop
mov
mov
sub
sbb
mov
sti
lods
repz
pop
jecxz
cli
sub
or
jmp
push
cmp
ja
mov
adc
mov
xor
mov
add
lods
rol
shrb
mov
daa
sub
test
fcmovnb
fs
xorb
sarl
jae
sbb
adc
in
dec
mov
lret
lds
es
mov
ss
or
aad
pop
cmc
jnp
aam
in
push
xor
cmp
mov
or
es
loopne
jnp
cmp
jge
push
sub
pop
sub
push
push
push
imul
dec
cmpsb
pop
icebp
movsl
jg
iret
insb
push
repnz
cmp
test
xor
dec
sbb
mov
fsubs
mov
fisubl
push
cwtl
mov
or
fdivrp
xchg
push
cmpsl
aaa
insl
shr
outsl
scas
pop
movsl
lahf
push
scas
jno
movsb
imul
add
fnstcw
jo
mov
pop
sbb
inc
scas
push
push
loope
mov
into
int3
push
ret
adc
and
ljmp
sub
imulb
add
mov
daa
popa
jp
ja
push
gs
adc
loopne
cmp
out
pop
dec
daa
push
push
ja
pop
sub
vphaddubw
pop
xchg
popf
jge
loop
or
mov
repnz
bound
and
inc
jb
jg
cltd
push
sbb
cmp
mov
pop
rcrl
xchg
add
mov
sbbb
rol
jo
or
jb
add
add
and
adc
cmpsb
push
xchg
stos
ss
push
mov
movsl
push
pop
lret
iret
xor
rolb
sbb
cmp
pushl
inc
aas
or
adc
sbb
lret
xchg
ret
out
xor
test
rol
inc
ud2
lods
adc
adc
dec
std
jecxz
sti
mov
mov
call
push
inc
push
cmp
pushf
or
cmp
out
cltd
call
mov
jae
jp
xchg
jmp
jmp
pop
mov
scas
xchg
popa
inc
xor
xchg
gs
xchg
lret
lock
jp
cltd
mov
into
add
push
sbb
outsl
out
sub
int3
out
test
stos
ja
or
ds
ret
out
mov
gs
xchg
loopne
call
mov
movsb
mov
clc
push
aaa
sarl
pusha
or
dec
in
adc
rorl
xchg
fistl
mov
pop
cmp
mov
sbb
int
mov
movsb
xchg
jg
nop
mov
scas
popf
pop
xchg
mov
addr16
or
push
hlt
ret
jge
jmp
adc
dec
int
out
push
fs
inc
ljmp
inc
mov
cmp
icebp
into
mov
dec
cltd
stc
in
ret
inc
mov
push
mov
sub
aas
outsb
inc
scas
repz
pcmpgtw
mov
jmp
daa
rcl
sub
inc
pop
xchg
nop
mov
sub
mov
pop
dec
clc
aas
pop
pop
jnp
jbe
test
push
pop
pop
enter
push
xchg
adc
out
add
mov
addr16
data16
jge
mov
dec
and
testb
mov
cmpl
push
daa
testl
push
inc
inc
cmpsb
shll
cmp
add
daa
mov
xchg
out
mov
int3
ret
idivl
jno
xchg
sub
push
btr
mov
mov
cmpsl
xor
lahf
jb
mov
mov
adc
push
pusha
ss
insl
cs
mov
movsb
das
icebp
in
mov
mov
push
test
sub
mov
fbld
imul
int3
sti
movl
xorl
inc
dec
sub
test
dec
xchg
movl
movsb
hlt
inc
sub
cmpsb
cmc
and
call
fcoms
jg
mov
fwait
dec
and
clc
pop
pop
sbb
add
or
adc
mov
ja
sti
ret
rorb
jno
testl
pop
stc
mov
inc
aaa
fcmovnb
js,pt
xlat
mov
popf
adc
movsl
pushf
shll
ljmp
fcoml
and
jnp
push
out
jno
xchg
inc
fwait
sub
pop
sub
xor
addl
push
ljmp
push
fucomp
push
call
push
xchg
push
xorb
xorl
leave
xchg
repnz
sbb
aad
pop
mov
stos
xor
aad
cmpb
in
pushf
js
in
pop
mov
clc
lods
std
popa
subb
pop
dec
ret
mov
xchg
push
sbb
fwait
jno
int
ret
mov
test
movl
or
sbb
lods
aaa
dec
push
rcrb
stos
clc
insb
push
jns
cld
adc
jle
ds
and
cmp
outsl
xor
dec
push
lds
mov
testb
and
rcr
rcrl
jp
sbb
sbb
mov
cmpsb
lret
gs
mov
add
add
int3
mov
iret
loopne
inc
or
mov
mov
gs
sub
dec
xchg
sti
jnp
in
mov
das
sub
jbe
mov
and
insl
loope
inc
scas
or
outsb
xlat
mov
mov
addr16
push
dec
cmp
xor
jecxz
push
inc
cmpsb
mov
push
and
pop
divb
sbb
cmc
push
cmp
sub
jmp
jns
push
xchg
or
lock
and
stc
shl
leave
pop
push
in
data16
lea
rorb
adc
std
inc
dec
xor
cmpsb
push
lock
cmp
add
sbb
mov
and
es
stc
insb
xchg
inc
ss
mov
cmpb
inc
inc
dec
fwait
mov
add
jne
push
jle
inc
rcrb
dec
mov
pop
cmp
stos
lret
sub
inc
imul
aam
jne
les
cld
dec
pop
ret
cmc
push
mov
xchg
aam
jbe
adc
xor
add
sarb
mov
xchg
jmp
cld
push
adc
ret
xchg
mov
jl
sub
sbb
out
mov
movl
fimull
sti
or
or
mov
dec
int
push
dec
popa
out
jecxz
addr16
adc
cmp
pusha
mov
inc
iret
sbb
mov
mov
pop
pop
inc
lcall
sbb
or
xchg
nop
xor
jmp
add
jecxz
inc
jns
mov
arpl
jne
push
mov
in
cltd
jnp
inc
xchg
pop
js
jb
imull
mov
lret
xor
dec
pop
call
fadd
jae
mov
inc
cmp
mov
jns
scas
not
orb
mov
sbb
bound
test
push
and
inc
dec
mov
adc
sub
das
les
xchg
loopne
jns
pusha
insb
arpl
loop
mov
sarl
popa
xlat
push
dec
xchg
sub
fmuls
jb
test
mov
in
mov
scas
adc
mov
inc
jbe
dec
xor
pop
xor
in
test
arpl
and
cmp
mov
sub
and
cwtl
push
rclb
pop
pop
insl
add
shll
mov
mov
cmc
or
sbb
cmp
mov
sub
in
pop
repnz
push
movl
adc
push
mov
loop
ret
jnp
scas
cmpsl
mov
inc
jle
jl
aas
or
stos
ja
out
je
fwait
sarb
mov
dec
es
pop
add
rol
mov
push
test
xchg
fadd
sub
dec
out
loopne
push
es
xchg
das
and
into
out
test
icebp
nop
pop
in
inc
iret
mov
adc
sub
insb
aad
in
dec
mov
xchg
mov
jmp
outsl
or
mov
mov
mov
or
ret
jae
jb
nop
push
stc
hlt
xchg
xor
cmp
and
pop
xor
sbb
div
das
test
and
jp
repnz
mov
cltd
push
iret
ficoms
inc
in
sub
sbb
call
cmp
adc
mov
cmp
out
push
add
fldt
int
push
out
sub
rdpmc
mov
or
mov
or
adcb
dec
nop
and
add
push
notl
jo
xbegin
out
cmp
lcall
xor
xchg
dec
ucomiss
jbe
inc
mov
lock
mov
dec
cld
je
push
mov
cmpsb
fisttpl
sbbl
pop
jg
ret
dec
imul
sub
daa
ds
aas
push
dec
pop
mov
push
movsb
or
sbb
mov
jmp
das
sarb
and
mov
ds
xchg
mov
mov
cli
fwait
xchg
cltd
addr16
pop
daa
dec
int3
xchg
rol
xchg
ffree
leave
popa
xchg
pop
jmp
and
mov
es
xor
cmpsl
loope
into
scas
or
jb
fistl
rol
sbb
adc
mov
jne
add
and
xor
xor
mov
clc
cmpps
sub
dec
sbb
and
cwtl
negl
push
rorb
xor
cmp
aas
insb
insl
neg
add
inc
movl
adc
pop
iret
sbb
add
and
data16
mov
addr16
mov
add
sbb
outsb
pop
out
pop
pop
sub
push
in
or
mov
mov
test
or
pusha
add
adc
xchg
movsl
xchg
inc
mull
rcr
jge
pusha
xchg
cwtl
mov
mov
jno
into
stos
jae
adc
lock
out
jb
lret
cmp
push
xlat
mov
or
add
cwtl
in
dec
fs
and
out
inc
sarl
fisttps
popf
ljmp
fsubs
push
pop
lret
adc
lods
or
mov
adc
fwait
hlt
push
inc
adc
sbb
movsl
packssdw
mov
xor
and
movsl
dec
xchg
mov
sub
mov
cltd
mov
into
je
adc
fs
int
lcall
or
jp
idivl
mov
mov
repz
mov
scas
mov
jecxz
sub
int
sub
imul
test
fadds
pop
mov
dec
popf
nop
sub
std
cmpsl
aam
addr16
sub
or
repnz
je
xchg
jecxz
and
shrb
cs
and
jae
inc
sahf
into
adc
jne
xchg
adc
jg
dec
addr16
cmpsl
and
cmp
sbb
and
popa
add
incl
mov
push
cmc
addr16
mov
ljmp
repz
inc
dec
imul
cmp
and
out
clc
stos
mov
mov
decl
add
jne
in
sahf
push
add
mov
lock
push
test
jl
sbb
add
insl
jbe
lret
jle
mov
inc
jo
sbb
mov
lret
iret
ret
popf
mov
cmc
and
push
mov
aad
or
add
test
push
mov
xchg
pop
add
fldl
and
jg
daa
xchg
fsubp
repnz
out
inc
inc
lds
movl
rcll
add
pop
dec
mov
mov
mov
jl
ret
pop
push
into
pushf
inc
call
mov
jbe
lret
xor
fwait
push
lea
adc
aad
and
out
roll
push
insl
nop
imul
adc
cmpsb
xchg
add
iret
or
lods
insl
into
cmc
mov
in
push
pop
pushf
and
push
clc
adc
fidivl
cmc
ljmp
push
xor
xchg
inc
mov
adc
outsl
aam
aad
loopne
in
faddp
cmc
pop
hlt
jp
push
xor
lahf
mov
iret
add
rol
push
xor
mov
aas
jbe
mov
or
mov
out
pop
adc
movsl
sbb
test
add
cmp
xor
loopne
xchg
jb
adc
inc
inc
call
push
cmpsb
mov
mov
jmp
mov
push
aas
xor
mov
jle
adc
insl
unpcklps
jg
in
jno
push
add
push
fadds
or
inc
dec
pop
xchg
sub
movsb
test
aas
add
mov
imul
lods
sbb
ljmp
repnz
jmp
xlat
andb
mov
jo
mov
addr16
cmp
cmp
cmp
mov
rorb
shl
mov
cmpsl
pop
out
imul
add
addr16
rol
push
inc
push
adc
xchg
mov
sub
push
and
or
add
clc
mov
cmpsl
sub
pushf
pusha
push
cwtl
test
add
outsb
mov
mov
dec
cmp
adc
out
icebp
pushf
fisttps
stos
and
cmp
push
es
daa
adc
push
xchg
dec
je
mov
cs
mov
mov
dec
out
daa
pusha
mov
jbe
jl
dec
rcrl
mov
std
je
cmpsl
push
ror
negl
divl
repz
inc
adc
pop
pop
push
pop
pop
xor
daa
dec
mov
inc
xchg
jmp
outsb
jl
mov
out
int3
rclb
xchg
push
inc
pop
cmp
movsb
push
sub
notb
mov
clc
sub
cmc
mov
or
adcl
dec
adc
sub
inc
adcb
inc
sub
xchg
mov
push
or
pop
xchg
out
xlat
pushf
jnp
repnz
cltd
push
dec
fs
xchg
cmpsl
pop
ret
push
or
add
cmpsb
pop
and
cmp
mov
mov
mov
ljmp
push
scas
out
cwtl
mov
addr16
push
fcompl
ret
sysenter
or
pop
sub
lret
sub
out
adc
lret
movsb
push
sbb
out
sbb
popf
push
ret
sub
dec
scas
and
or
mov
daa
loop
and
mov
add
jne
sbb
testl
fdivrl
out
dec
xchg
pop
shr
adc
stc
lods
adc
jmp
cld
sbbb
or
ret
loope
clc
pop
fmull
adc
dec
test
cld
fldenv
inc
xchg
aad
and
xor
mov
call
testl
xchg
cli
das
pop
es
test
out
je
dec
std
push
jo
cmp
cmp
or
loopne
jecxz
hlt
movsb
insl
sti
push
jo
or
out
subl
cmp
pushf
xor
into
iret
mov
adc
xchg
pop
add
mov
jmp
sub
test
jecxz
stos
jl
push
icebp
push
dec
pop
rcr
das
cld
int3
xchg
idiv
movsl
xor
and
mov
stos
cmp
dec
push
popa
mov
shll
pop
int
xchg
test
mov
jg
and
sbb
iret
lret
sbb
push
decl
cs
mov
mov
sarb
daa
sub
add
mov
inc
push
popa
ja
mov
gs
mov
mov
and
aam
adc
das
pop
xor
rclb
sub
dec
cmp
push
daa
mov
out
bound
shll
test
jne
fsub
addr16
rorl
mov
in
ljmp
gs
mov
jmp
leave
mov
pop
adc
and
add
out
sbb
ja
daa
fmull
jge
sub
sub
insl
addr16
jb
mov
dec
call
pusha
adc
or
inc
inc
mov
push
dec
js
push
inc
push
adc
cmp
mov
adc
cli
jmp
add
xchg
je
mov
mov
adc
call
sbbl
scas
adc
push
mov
lds
jecxz
push
add
aam
fs
adc
movl
fimull
and
popa
fwait
mov
jne
cmpsb
sbb
inc
test
mov
dec
sub
jne
jge
movsl
dec
call
pushf
mov
xchg
call
loopne
arpl
lret
mov
movsb
push
cmp
sub
addr16
and
fcomi
imul
pusha
inc
xor
jp
mov
sbb
pop
fs
cwtl
in
mov
mov
shr
aas
pop
or
jle
or
testl
cmpsl
fcoms
fsubs
imul
jl
adc
xchg
or
and
push
jno
test
adc
xchg
mov
sub
jg
or
in
inc
in
inc
jns
mov
leave
adc
add
mov
or
dec
iret
scas
adc
adc
dec
pusha
dec
leave
inc
push
mov
out
cld
cmpsl
filds
les
movsl
mov
mov
jle
xchg
sarb
adc
invd
sbb
jg
cmp
or
dec
test
cmp
in
frstor
mov
inc
mov
repnz
cmpsb
pop
push
xor
dec
jle
mov
or
cmpsl
stos
mov
fwait
sbb
pushf
xchg
aam
mov
fsqrt
jb
rep
ficomps
or
ret
std
xchg
pop
or
je
dec
mov
into
repz
xor
mov
daa
pop
fwait
cmpsl
cmc
jmp
shl
pop
pop
sahf
pop
fst
loop
test
bound
pop
pop
shrl
fs
test
jnp
lods
lcall
adc
loopne
mov
or
cld
ret
out
adc
add
jecxz
or
xlat
cmp
aam
sbb
mul
test
out
ret
das
add
loope
push
and
cwtl
test
pop
fildll
lcall
jmp
cmp
decb
push
lds
addr16
insb
push
lret
arpl
mov
push
xor
xchg
test
dec
mov
push
cmpsb
dec
adc
mov
inc
cld
aas
pop
sub
or
lock
int
dec
cltd
cwtl
movsl
adc
mov
in
cmp
stc
xchg
outsl
imul
jo
shl
out
andl
or
scas
jp
sub
sar
hlt
ret
cld
cmp
dec
dec
jb
rorb
jle
popl
sbb
push
movsb
lods
inc
ret
push
xor
mulb
pusha
repz
ds
inc
mov
sahf
fiadds
mov
sub
in
jl
js
mov
std
and
mov
inc
cmp
ljmp
sub
or
test
in
insl
dec
lods
mov
daa
xchg
jmp
jns
push
adc
insl
in
add
das
push
mov
loop
cmpb
mov
int3
and
lds
addr16
getsec
jmp
pusha
mov
inc
rclb
out
mov
push
push
aas
mov
jno
in
jb
mov
push
std
mov
fistps
call
in
jp
jmp
daa
cmp
mov
frstor
add
push
cld
pop
mov
imul
push
add
cwtl
pushf
lea
cmpsl
jmp
in
inc
mov
jo
je
pop
lds
pop
and
psrlq
add
mov
or
push
out
sbbl
adc
scas
sbb
mov
hlt
inc
adc
lock
add
fucom
mov
xor
and
push
or
jae
rep
adcl
insb
test
or
mov
mov
jno
mov
or
shll
inc
and
inc
push
mov
ret
inc
mov
dec
fucomi
and
push
lods
icebp
jg
sub
dec
push
out
mov
cli
outsb
cmp
sub
mov
out
or
cmc
mov
sbb
inc
jg
in
jo
push
scas
shll
mov
stc
inc
inc
fsubp
xchg
outsl
int3
add
mov
xchg
mov
fnsave
sbb
daa
subb
shll
aam
loope
add
jae
xor
xlat
inc
aad
aas
in
pop
inc
inc
call
aam
daa
adc
repz
int3
lea
test
out
daa
push
out
jne
or
fs
push
les
cltd
or
inc
ret
add
scas
jo
and
sbb
cli
jecxz
and
xchg
and
push
dec
jnp
dec
add
fistps
push
xor
push
xchg
xorb
sbb
testl
inc
push
mov
pusha
fdivrl
pop
push
lret
jb
lods
sbb
pop
sub
dec
adc
mov
js
test
ret
shrl
push
pop
aad
xor
xchg
cmp
stos
and
pop
cmp
push
loopne
inc
sub
push
test
mov
or
adc
sbb
cmp
popa
cmp
shlb
stc
imul
pop
xchg
outsb
mov
xor
ja
mov
jg
shlb
pop
jbe
shlb
sub
sbb
cmp
cs
pop
sbb
mov
and
xchg
addr16
hlt
mov
daa
dec
lea
sbb
sub
stos
xor
xchg
cmpsb
push
outsl
jns
ror
xor
push
sbb
aaa
cmp
shr
das
adc
mov
sub
movsb
push
ljmp
push
dec
mov
daa
das
mov
inc
xchg
pop
mov
sar
ret
lcall
lds
xchg
in
add
roll
xchg
fildll
and
add
fcoms
add
mov
or
rcrl
movsb
cmpb
mov
xchg
adc
or
sub
out
xchg
xlat
movsb
mov
pop
adc
iret
or
pop
mov
mov
sbb
daa
repnz
dec
into
pop
insl
cmp
or
adc
fwait
push
movsl
pop
and
jne
repz
mov
jmp
fidivrs
cmc
imul
adc
lds
arpl
xchg
out
mov
push
pushl
aam
mov
icebp
movsb
and
cmc
mov
mov
cld
cmp
inc
jns
pop
adc
inc
push
push
in
jle
cwtl
in
decb
and
mov
iret
or
out
ficomps
js
sub
xorl
shlb
test
and
sbb
and
sub
xchg
mov
rcll
rolb
mov
push
xchg
add
sub
adc
adc
out
xor
int3
jmp
jae
ljmp
aam
notb
jle
push
stos
iret
mov
mov
shrb
test
xchg
daa
or
repz
add
mov
std
mov
scas
iret
xchg
pop
or
out
and
js
sbb
subl
pushf
mov
mov
jge
into
cmp
mov
adc
addr16
shll
ja
jmp
leave
push
loope
mov
sti
ja
xlat
repnz
add
and
movsb
sub
xor
mov
mov
orb
inc
mov
and
out
shlb
clc
aaa
pop
imul
push
test
cwtl
mov
jp
xlat
das
xchg
and
mov
out
push
das
stos
xchg
sub
mov
std
cmp
and
out
mov
filds
or
cmp
inc
mov
call
mov
sub
mov
cmpsl
mov
inc
add
mov
out
lds
mov
rol
cmp
cmp
sub
mov
mov
adc
push
loope
pop
push
sahf
arpl
adc
add
xor
dec
aas
negl
sub
loopne
jmp
inc
out
pop
xorb
push
and
sub
jo
out
mov
sarb
dec
in
les
add
mov
mov
fsubp
mov
movsl
negb
ss
cmpsb
jno
mov
dec
cmovno
mov
test
inc
scas
jp
pop
sbb
pop
mov
adc
xor
sbb
add
pop
out
dec
or
sbb
push
sar
jbe
jle
seto
mov
sub
mov
sbb
pop
mov
push
dec
jp
xchg
rcr
movsl
stos
fsubp
push
inc
test
enter
aam
das
adc
mov
push
mov
cmp
cmp
addl
mov
mov
mov
add
aas
dec
sub
lea
cmp
push
sbb
movl
mov
pop
scas
ret
or
or
jmp
jp
pop
out
nop
in
insb
aas
and
clc
dec
add
sbb
ds
jge
cmp
lods
mov
and
mov
insl
les
pop
xchg
aas
adc
inc
sbb
xor
aam
scas
int3
pushf
imul
gs
pop
mov
test
out
xor
push
imul
out
shll
std
movl
movl
das
stos
mov
call
add
rclb
pop
ret
xlat
mov
outsb
mov
imul
xlat
shr
incl
dec
pop
jg
adc
inc
out
scas
mov
add
and
sub
pop
push
pop
sbb
lret
fcomi
dec
cmpsl
outsb
in
dec
and
jmp
or
push
dec
leave
mov
js
out
sbb
fwait
in
sbb
push
and
out
mov
dec
sub
ror
push
popl
mov
dec
jge
sub
lcall
addr16
imul
push
xchg
movb
lea
sbb
and
mov
push
decb
cld
out
add
mov
outsl
adc
sbb
loopne
mov
mov
mov
push
gs
mov
and
xchg
pop
into
mov
mov
pop
pop
lods
imul
mov
addr16
clc
or
or
inc
icebp
push
push
ret
or
sbb
cmpsl
xor
adc
inc
push
or
sbb
or
outsl
push
inc
insb
push
xchg
mov
push
lods
cmp
imul
xor
aaa
outsb
cld
mov
jbe
mov
fwait
sbb
mov
adc
pop
mov
mov
repnz
cmp
aaa
add
dec
shlb
sti
jmp
daa
cmpsb
leave
fsubl
cmc
or
sbb
mov
or
mov
int3
adc
jbe
mov
movsb
mov
pop
jl
dec
lret
movl
add
mov
flds
pop
sbb
in
mov
xor
xchg
inc
lcall
cltd
inc
arpl
mov
pop
rcrl
jb
and
cmp
xchg
rcrl
sub
mov
les
into
or
dec
jp
push
test
mov
mov
push
pop
sbb
ja
jmp
jge
inc
fcmovnb
outsl
test
mov
or
xlat
lahf
sbb
mov
xchg
insl
mov
jbe
std
fwait
add
push
adc
push
and
adc
loopne
dec
sbbl
shll
push
jge
push
mov
lea
mov
out
xlat
sbb
add
mov
xchg
insb
shll
les
mov
dec
adc
inc
shrb
inc
adc
test
decb
add
popa
lahf
daa
and
add
dec
cwtl
pop
dec
dec
lods
push
pop
xchg
cmp
xor
mov
adc
sbb
movb
and
mov
outsl
popl
sarb
mov
pop
cld
rclb
cmpsl
aaa
arpl
adc
jp
and
dec
push
mov
out
mov
loopne
adc
clc
mov
lods
xchg
xchg
nop
into
aad
and
iret
push
dec
or
xor
mov
sahf
dec
xchg
push
cltd
out
add
mov
je
insb
jbe
adc
aas
aaa
or
sbb
test
daa
inc
push
push
and
add
shll
inc
cltd
push
push
sbb
add
scas
or
sti
stc
fcmovnb
or
xor
add
mov
push
out
dec
adcl
repnz
xchg
adc
out
xchg
mov
fsubrp
adc
clc
push
jb
fisttpl
cltd
mov
dec
testl
aaa
pavgb
xlat
sbb
sbb
cmc
nop
lock
idiv
xchg
fucomp
adc
push
push
pop
movl
cmpsb
and
sub
pop
push
adc
lods
in
dec
mov
cmp
xchg
sbb
dec
clc
cmpb
out
push
int3
cmpsl
fldt
sub
mov
add
std
clc
xchg
aad
mov
roll
sub
xor
jmp
in
pop
aas
cmc
fidivrl
pushf
sub
loop
cmp
mov
lea
xor
pop
and
pop
sub
lcall
pop
test
xor
fucomp
inc
rol
xchg
jp
mov
in
outsb
dec
push
insb
mov
movl
push
xor
or
mov
mov
push
cld
mov
daa
insl
in
dec
dec
scas
pop
jnp
mov
dec
mov
and
pop
cltd
adc
pop
dec
inc
fistps
cwtl
shrl
hlt
push
mov
test
dec
repz
fcmovnb
and
push
and
adc
xor
fists
fnsave
sub
jl
mov
jb
mov
sub
mov
push
jecxz
lock
jg
jno
cmc
addl
push
js
mov
cwtl
add
rcll
mov
xor
das
iret
jmp
jecxz
xchg
push
add
xchg
ret
inc
dec
adc
mov
cwtl
movsl
sahf
test
mov
cmc
ret
xor
inc
xchg
xchg
inc
push
leave
cltd
sarl
fldl
and
jg
ret
lods
add
mov
adcb
test
push
or
mov
mov
fsubl
or
loope
sar
xchg
xlat
sbb
jb
lds
gs
pushw
ss
ffree
inc
mov
mov
sbb
or
dec
xor
outsl
xchg
jae
repz
sti
fcompl
fbld
push
movl
lods
adc
or
lret
or
rcrb
fmulp
sbb
add
leave
loop
push
psrld
das
popa
pop
icebp
xchg
jecxz
js
inc
in
ja
hlt
fildl
cmp
push
cwtl
dec
push
loopne
cmpsb
pop
jl
ret
rol
add
insb
das
fwait
dec
mov
stc
mov
sbb
ss
mov
shlb
sub
sbb
dec
and
add
jnp
xlat
fisubrs
int
mov
jo
leave
adc
xchg
mov
xor
ror
cmpsw
jg
in
mov
pop
ret
mov
mov
imul
jmp
cltd
mov
and
icebp
mov
xchg
dec
pop
outsl
repz
scas
in
test
clc
lcall
js
out
repnz
push
or
addr16
xor
mov
mov
pushf
cli
imul
xchg
adc
cld
cwtl
popf
je
xorb
or
ret
orl
repz
insl
sbb
repnz
mov
pop
jecxz
out
movl
inc
or
shrl
dec
jecxz
das
fidivrs
aaa
cmpsl
sbb
mov
adc
add
push
sti
xor
xor
clc
sub
cli
pusha
mov
mov
ret
inc
xchg
mov
scas
je
mov
stos
mov
dec
and
jge
pop
fildll
jne
out
push
sbb
outsl
shll
loopne
or
dec
bound
pop
pop
out
inc
out
int
mov
xchg
stos
lock
popf
cmp
test
rorb
dec
je
adc
or
adc
orl
lock
push
lds
or
in
scas
outsl
and
adc
loope
mov
stc
push
loopw
test
test
lea
adc
push
adc
outsl
adc
dec
imul
cld
xchg
das
mov
inc
scas
fstl
jbe
mov
in
push
test
sub
sbb
jl
in
pop
mov
sub
repz
or
in
add
daa
hlt
jns
sub
push
mov
mov
jg
mov
inc
push
leave
mov
imulb
cmp
dec
test
sbb
xchg
mov
aas
pop
adc
add
cmp
dec
int
loopne
inc
pop
add
jge
pop
mov
fsubr
das
and
mov
insb
or
jne
shrb
cmp
addr16
or
or
dec
nop
stos
dec
and
cmc
sbb
cli
lods
hlt
sahf
cmpsb
call
fldenv
pop
stos
sub
dec
lods
xchg
jno
mov
push
xchg
lock
xchg
xor
jne
js
mov
pop
xchg
and
cmp
mov
je
inc
ret
xor
mov
test
pop
xor
outsl
leave
jmp
fnstsw
cmp
in
xchg
xchg
movsb
mov
adc
das
fucomi
adc
push
pop
cmp
xor
ja
lds
push
sub
mov
out
sub
dec
mov
add
divl
subl
and
les
push
jo
dec
mov
lea
pop
push
xor
xor
push
shlb
loope
mov
and
jmp
mov
in
mov
nop
mov
cmp
adc
daa
popf
inc
pushf
mov
inc
fistl
jg
flds
repnz
push
mov
adc
icebp
cli
or
and
xbegin
fistpll
sub
mov
mov
cmpsb
mov
inc
mov
jecxz
push
out
das
popa
mov
or
mov
cltd
aaa
stos
test
xlat
lahf
add
xor
in
sbb
jo
push
sahf
sub
inc
push
call
cwtl
xchg
xor
scas
cltd
pop
mov
mov
inc
cmp
mov
sbb
xchg
sub
pop
xchg
xor
gs
dec
pop
fmull
insb
jmp
test
jnp
sub
movl
in
ret
outsl
rcl
loop
addr16
test
sahf
mov
cmp
call
jne
mov
insl
sub
out
orl
xchg
mov
dec
or
mov
pop
mov
lcall
xor
xchg
xchg
xlat
and
mov
mov
inc
mov
mov
mov
and
test
mov
sbb
pop
outsb
sbb
sub
adc
loopne
xor
inc
jecxz
pop
rorl
adc
clc
cltd
test
mov
std
repz
ss
and
jle,pt
and
mov
sub
push
add
outsl
push
push
mov
xchg
xchg
lods
push
sub
ds
push
aaa
mov
repnz
lcall
push
add
push
rorb
jns
add
addb
adc
add
or
aaa
imul
out
push
inc
mov
out
jno
ret
xchg
fwait
add
divb
ljmp
test
cmp
stc
adc
cmpl
pop
pop
leave
icebp
rcrb
out
data16
jno
mov
mov
rcrb
xchg
cmc
test
clc
xor
mov
pop
into
dec
xchg
stc
pop
pop
sbb
push
and
scas
pusha
insb
fwait
mov
or
pop
data16
clc
xlat
lahf
and
mov
cmc
xchg
sbb
cmp
ljmp
adc
int3
inc
pop
pop
push
jp
or
jmp
pop
xchg
fldt
ds
push
imul
test
shlb
insb
jle
repnz
inc
dec
test
jns
or
push
inc
xorb
mov
pop
lcall
mov
daa
mov
shlb
fwait
push
imull
fs
add
dec
les
push
mov
mov
push
test
js
shrb
push
notl
mov
add
xor
push
cmp
push
test
popf
aaa
frstor
aam
push
les
mov
mov
mov
in
push
cld
stos
push
pop
inc
xor
mov
inc
or
sti
add
add
lds
mov
jcxz
cmpsb
andl
mov
dec
mov
inc
add
or
insl
mov
test
dec
pop
cmpsb
xor
pop
inc
lods
sti
ficoml
mov
and
mov
and
push
dec
bound
pop
test
scas
inc
arpl
test
xor
movsb
cmp
or
jle
fwait
sbb
hlt
aas
inc
mov
aaa
pop
xor
mov
push
push
dec
or
xchg
mov
mov
arpl
sti
cltd
cmpsl
pop
addr16
insb
dec
clc
and
in
push
mov
std
cmp
cwtl
lcall
sbb
push
addr16
fnstcw
shll
mov
add
test
or
addr16
dec
sbb
cmpl
test
jmp
and
jp
scas
stos
insl
mov
add
xchg
add
lods
bound
shl
stc
mov
insl
daa
loopne
jbe
add
das
mov
add
pop
xor
jmp
inc
insl
lods
mov
js
dec
movb
in
sbb
je
sbb
sti
pop
mov
pop
jg
pushf
les
testb
rcll
dec
aaa
mov
imul
out
ret
loopne
or
jo
mov
pop
and
add
sahf
jmp
push
mov
inc
lcall
push
inc
cmp
jecxz
push
inc
xchg
iret
inc
in
inc
and
add
dec
mov
int3
cmp
fcoms
cmc
insl
sarb
mov
loopne
test
orb
and
ljmp
test
js
insb
mov
lock
push
adc
mov
outsb
dec
insb
out
imul
pusha
ja
push
and
jmp
push
fisttps
loope
mov
and
insb
inc
mov
cld
js
das
push
mov
mov
lea
es
jae
pop
frstor
repz
xor
or
loop
movl
add
aam
pop
scas
imul
cmpsl
or
inc
mov
lahf
sub
mov
push
addl
pop
lods
mov
pop
cmp
pop
aaa
mov
sbb
lahf
jge
adc
pop
sbb
push
shlb
push
xchg
data16
stc
adc
or
ret
in
and
rol
vpaddd
or
adc
fldenv
push
out
push
inc
xchg
xchg
inc
push
shrl
jae
lret
int3
xchg
and
dec
pop
icebp
fsubrp
pushf
xlat
ljmp
adcl
and
push
add
ficomps
push
cmp
pop
mov
das
add
mov
mov
addr16
cmp
mov
pop
or
das
adc
dec
sti
sbb
and
dec
xchg
fists
and
je
daa
leave
sbb
movsb
dec
or
add
in
adc
ja
mov
push
movl
and
adc
sbb
idivl
sahf
loope
adc
dec
mov
and
stos
add
shlb
pop
adc
pop
fadds
mov
push
and
sbbb
mov
mov
pop
xor
ja
xor
iret
or
shrb
mov
pop
dec
cmp
or
pop
pop
xchg
fcompl
idivl
repnz
cmpsl
add
jb
xchg
dec
inc
push
dec
stc
inc
rol
psadbw
data16
mov
inc
pusha
sbb
in
ret
xchg
add
dec
addr16
clc
push
mov
out
test
mov
aaa
pop
out
in
cmpsl
int3
ja
aad
mov
imul
dec
sbb
or
outsl
fistl
ret
add
push
xor
aaa
cwtl
push
in
xor
pop
aad
int3
daa
and
adc
ds
pushf
popf
fildll
test
daa
jns
jl
xchg
stc
aad
cmp
ss
dec
sbb
mov
popl
pusha
hlt
cmp
inc
jo
dec
stc
and
sbb
dec
push
lret
inc
adc
daa
pop
adc
push
mov
in
scas
fadds
fistl
test
addr16
pop
out
sahf
inc
push
test
mov
pop
lods
adc
cmpsb
les
repnz
cli
and
scas
fmuls
add
ds
sbb
xor
push
and
je
into
test
fisttps
xchg
mov
jo
inc
popa
lahf
sbb
test
out
xchg
fimuls
cmp
cmp
fiaddl
scas
sbb
fstpt
adc
inc
mov
movl
hlt
inc
adc
scas
daa
les
adc
dec
mov
xchg
xchg
arpl
outsb
inc
add
sti
jb
loop
sub
pop
pop
cmp
fwait
lods
sub
iret
popa
or
cltd
jmp
jg
adc
jnp
into
rcll
pop
fwait
sub
mov
sbb
int
movsb
sti
in
movsl
or
int3
add
cmp
and
cmp
je
mov
cmp
hlt
cld
sbb
or
rcrb
aaa
sub
push
pop
push
notb
push
push
dec
int3
rol
aad
sub
add
lret
sti
xor
dec
add
bound
fisubl
pop
outsb
sarl
jp
rolb
inc
testl
sbb
add
mov
mov
mov
fildl
dec
inc
shlb
sarb
jl
mov
xchg
and
and
addb
and
in
dec
ret
add
jmp
les
aad
adc
fnstenv
aaa
roll
inc
xchg
das
mov
push
dec
dec
mov
adc
pop
jne
push
adc
mov
notl
sahf
sbb
inc
mov
adc
imul
jne
mov
ds
test
sub
pop
sub
adc
push
mov
mov
pop
push
cmc
inc
dec
sbb
out
cwtl
xlat
mov
xchg
aam
pop
and
add
mov
sub
push
pop
nop
inc
xor
data16
es
test
jno
stos
loop
ffreep
mul
adc
or
add
fcoms
add
movsb
fs
out
jmp
ljmp
ja
xor
sub
pop
dec
out
nop
icebp
push
push
or
inc
flds
pop
xchg
cwtl
mov
mov
add
popf
or
xor
lods
inc
dec
sub
push
rcl
movsl
sahf
adc
je
sub
add
pop
subl
les
jp
xor
mov
jo
in
xor
ljmp
ja
rol
adc
push
pop
pop
jle
jae
xchg
mov
mov
sbb
xlat
mov
fwait
and
push
sub
inc
xor
and
cltd
mov
loopne
pop
pop
add
fildll
cld
mov
xchg
cmp
pop
sub
add
add
rclb
rcll
fsubs
iret
push
xchg
xchg
and
das
xchg
add
jo
idivb
push
jb
out
insl
xor
clc
imul
dec
mov
cwtl
jmp
sub
xchg
push
lahf
sbb
mov
shlb
out
pop
or
out
sub
rol
mov
jg
xchg
sub
jmp
mov
lds
jmp
dec
inc
rclb
jns
push
popf
rcl
xchg
mov
popa
shrl
pop
ljmp
sti
inc
bound
mov
imul
je
xor
lock
cmp
mov
lods
push
pop
and
xchg
sar
inc
xchg
pop
cmp
aam
and
fstpt
mov
pop
mov
jl
sub
pop
push
add
mov
sahf
mov
pop
fidivrs
sbb
test
mov
mov
mov
mov
and
or
mov
pop
lods
out
rcl
mov
iret
pop
hlt
jmp
mov
mov
jne
jbe
les
inc
sbb
sub
push
sbb
lahf
cwtl
in
add
rclb
xchg
pop
jecxz
adc
je
cmp
in
jmp
sub
movl
cmp
testb
inc
sub
test
pop
repz
and
inc
mov
and
repnz
xchg
mov
push
repz
push
fsts
test
add
and
inc
lods
jecxz
mov
jp
adc
fs
pushf
adc
sub
mov
jecxz
loop
bound
mov
repz
test
push
xchg
and
test
xchg
or
fs
add
popf
leave
push
shlb
gs
and
mov
pop
adc
ror
scas
ror
imul
pop
push
roll
loop
pop
dec
and
sub
shlb
sbb
and
lods
or
jbe
loopne
push
add
je
mov
push
sub
js
lahf
aas
jns
inc
add
push
inc
add
adc
pop
cmp
mov
out
sub
pop
in
adc
test
call
lea
and
leave
push
arpl
rclb
adc
mov
jl
xchg
mov
xor
jmp
jmp
mov
das
push
push
push
lret
or
test
test
mov
pushf
push
xchg
and
push
pushf
arpl
xchg
dec
dec
or
cmp
sbb
cmp
mov
in
data16
jl
rolb
mov
test
or
mov
mov
test
jae
sub
into
xor
popl
jle
ss
adc
shrl
ja
adc
mov
insb
xor
daa
das
push
mov
cmpsl
jb
clc
jge
cltd
ret
inc
and
xchg
jne
push
pop
sub
jle
shr
sti
loop
cmp
fnstenv
pop
jge
add
sub
outsl
pop
test
mov
pop
jo
test
or
loopne
mov
sbb
imul
in
test
or
movsl
jg
or
sahf
addb
jecxz
jecxz
cmpsl
mov
inc
xor
ljmp
cmp
inc
cmp
out
loop
repz
mov
dec
sbb
in
icebp
and
adcb
fcmovb
or
lret
adc
dec
mov
icebp
aam
testl
loope
jge
or
negb
out
test
dec
xchg
addr16
fisttpl
sub
jmp
xchg
inc
jno
cmp
push
push
out
inc
mov
pop
gs
jo
and
and
test
sbb
dec
stos
mov
movsl
das
loop
pop
mov
test
pop
mov
clc
pop
mov
hlt
sub
add
lret
popa
into
fcmovnb
jns
arpl
lcall
pop
xchg
and
dec
cld
ret
clc
aad
push
sbb
bound
ja
imul
dec
sahf
lahf
and
dec
movl
inc
push
out
xchg
iret
lcall
push
mov
inc
fdivrs
pop
cmpsl
pop
sbbb
repz
fildl
sti
outsl
call
in
js
dec
push
mov
pop
pop
add
adc
xor
jl
xchg
fistps
out
adc
xchg
fs
ljmp
sub
outsb
test
mov
sub
outsl
sbb
or
sbb
mov
xorl
lret
xchg
inc
push
jecxz
xchg
jmp
mov
out
pop
push
lahf
adc
fldt
xchg
jl
xor
mov
or
mov
jb
and
cld
add
jmp
cmp
insl
jge
mov
or
push
mov
or
test
insb
sbb
mov
pop
xchg
xchg
push
xchg
adc
sub
xchg
push
adc
add
sbb
cmpsl
pushf
popf
adc
push
cli
cmpsl
mov
add
pop
mov
sub
push
ret
push
cmpsl
inc
stos
xchg
pop
push
mov
xchg
xchg
scas
lret
mov
rcrl
inc
std
pop
out
pushf
insl
mov
mov
fdivrs
ret
pop
dec
data16
xchg
xor
cli
aaa
xchg
dec
sahf
or
dec
pop
adc
hlt
movsb
dec
xlat
push
insb
js
test
call
lret
or
pop
jle
dec
flds
lods
inc
mov
ret
enter
sahf
xchg
addb
inc
cmp
es
rol
inc
adcb
sub
lods
sub
pop
test
and
xor
push
movsl
push
push
sbb
loopne
and
movsl
rcrb
mov
fcompl
in
and
pause
jmp
ret
dec
stos
dec
mov
roll
inc
inc
dec
out
and
dec
dec
and
sti
add
push
xorb
adc
sbb
hlt
mov
jle
cmpsl
cmc
iret
xchg
insl
sub
mov
jns
mov
icebp
stc
pop
sbb
scas
xor
in
push
inc
and
rclb
mov
sub
arpl
xor
lods
adc
and
xor
xor
cmp
movsl
test
mov
mov
inc
in
arpl
fists
xor
imul
call
insl
sarl
test
jno
sub
or
addl
pop
nop
jne
pop
and
inc
pop
inc
cltd
dec
ret
sti
inc
cwtl
mov
dec
aaa
pushf
jmp
dec
xchg
xlat
mov
adc
call
movl
push
rol
mov
clc
cmp
pop
sbb
into
adcb
in
inc
sub
rep
and
les
xor
sub
add
fisubrl
pop
imul
xchg
cmp
iret
sbb
cwtl
sbb
mov
push
bound
aad
jbe
cmp
inc
div
push
movlhps
mov
and
and
mov
xchg
pusha
sub
fldt
les
mov
cltd
sahf
repnz
out
stos
pop
cmpsb
xor
pop
xchg
fiadds
xchg
dec
jmp
jbe
outsl
inc
mov
xchg
mov
fists
jns
jg
icebp
aad
dec
mov
pop
xor
pusha
jp
dec
sub
pop
mov
aas
pop
into
jo
mov
out
xorl
in
repnz
mov
add
fstps
or
pop
clc
ljmp
shrl
mov
and
cmp
xchg
jbe
testl
nop
cwtl
mov
jb
shlb
jle
and
in
sahf
out
pop
movl
or
sbb
ret
push
cmp
orb
outsb
mov
stc
pop
lahf
mov
mov
add
sbb
inc
and
cmpb
jbe
mov
lahf
pop
mov
lret
std
jo
or
mov
js
lgs
data16
push
dec
pop
or
nop
lcall
loop
gs
test
pop
stc
ljmp
repnz
scas
repz
dec
inc
sbb
icebp
cltd
xchg
pop
pop
movsb
faddl
stc
xchg
cmp
cmp
mov
cmp
lock
loop
clc
mov
mov
jne
es
push
pop
imul
inc
sbb
das
ret
adcl
stc
fwait
mov
loope
test
iret
push
gs
mov
int3
scas
mov
or
mov
into
aas
out
call
inc
je
js
ficoms
ja
fistps
add
or
clc
pop
mov
das
adc
mov
scas
ret
rcl
mov
insb
popf
xlat
movsb
sub
pop
fld
pop
repz
ljmp
add
xchg
ficoml
push
sahf
imul
fsubr
pop
adc
bound
mov
cmpb
add
dec
repnz
stc
cmpl
cwtl
or
test
push
add
movsb
lods
pop
ljmp
add
inc
ja
jecxz
pop
fcmovb
sbb
mov
push
xchg
call
popa
sbb
push
int
add
insb
les
loope
leave
gs
lds
movsb
std
mov
insl
add
adc
xlat
outsl
sub
and
sahf
sti
aaa
add
notb
mov
push
mov
jno
pop
pop
ret
mov
pop
pop
sub
cmpsl
inc
xchg
adc
push
jg
mov
inc
mov
popf
mov
or
pop
bound
sbbb
addr16
push
adc
adc
mov
adc
push
pop
dec
icebp
adc
inc
xor
les
xchg
call
lret
add
xchg
lret
and
pop
mov
mov
xchg
lahf
dec
mov
adc
xchg
sub
aad
stos
in
insb
jl
mov
shrb
push
movsl
pop
push
lea
addl
insb
push
jae
rorl
je
and
xchg
pop
inc
push
pusha
es
or
ret
fcom
out
jo
inc
pushf
mov
fimull
pop
mov
mov
xchg
push
insb
xor
mov
pop
scas
cmp
and
mov
xchg
mov
jb
daa
add
popf
test
pop
xchg
subl
jmp
mov
xchg
adc
sbb
aad
push
popa
dec
xor
mov
in
in
and
and
xor
xchg
rclb
xchg
ret
in
mov
in
popf
ja
daa
pushf
pusha
popa
push
movl
scas
and
add
or
sbb
and
rcll
sahf
inc
push
xor
xchg
cmpsb
add
xchg
in
push
fldl
stc
mov
jbe
fbstp
xor
xor
fwait
jle
sarb
jp
or
lcall
or
aad
dec
lahf
push
jbe
xor
mov
inc
cmpsl
jae
out
cmp
aaa
push
loope
hlt
mov
sbb
ror
dec
cmp
test
inc
add
jno
pop
and
xor
scas
je
sahf
mov
mov
or
in
cld
adc
mov
jp
hlt
daa
test
inc
out
xchg
push
mov
or
xor
dec
rolb
adc
sbb
jnp
outsb
pop
daa
or
mov
cmp
in
cmpsl
and
fists
cmp
push
jl
scas
mov
inc
ja
mov
xchg
xchg
sahf
out
and
lods
addb
sbb
pop
sbb
adc
and
je
test
jg
insl
movl
rol
or
push
fcoms
pop
and
rcl
lods
and
cmpsl
jecxz
cmpsb
push
movsl
in
lret
or
pop
pusha
lahf
or
push
and
out
in
fst
pop
sub
lcall
push
cmp
movsl
out
ret
xor
jnp
xor
es
pop
lods
repnz
loop
sub
inc
mov
aam
scas
clc
movsb
ret
movzbl
mov
push
pop
xor
call
mov
sub
mov
sti
add
fcomip
pop
push
movl
cmp
jno
orb
fbstp
pop
xor
sub
xor
mov
scas
sbb
mov
mov
dec
mov
insb
add
and
push
lret
cmp
daa
mov
push
subl
andb
xchg
ficompl
add
sbb
or
movsb
cmp
into
es
ljmp
mov
enter
fnstcw
mov
or
popf
cmp
pop
and
xchg
sub
sbb
inc
jle
out
jno
leave
int
lds
mov
inc
rol
cmp
gs
xor
sub
int3
jmp
loope
mov
or
xchg
sarl
daa
push
int3
repz
test
xchg
dec
xchg
adc
in
xchg
nop
fistpl
outsl
cmpsl
insb
or
push
daa
pop
js
outsl
mov
add
repz
out
mov
sub
push
iret
pop
sbb
mov
adc
in
out
in
cwtl
andl
push
inc
mov
push
lods
and
add
xchg
xchg
inc
jge
imul
mov
or
frstor
and
insl
lcall
push
adc
and
jmp
or
jno
shl
mov
push
push
in
sbb
xor
pushf
cltd
mov
cmp
inc
mov
mulb
cmp
pop
les
ljmp
mov
in
pop
mov
sub
or
movsb
hlt
xchg
cwtl
pop
dec
mov
xor
adc
rcl
ds
or
pop
enter
inc
jb
mov
cmc
dec
cli
fcomp
sbb
cmpsl
mov
insl
daa
out
and
mov
mov
xchg
out
adc
call
imul
fwait
cmp
jns
shll
scas
fcmovb
stos
bound
jbe
and
fmul
xor
nop
movsb
xchg
xor
push
sbb
cmpsl
lret
xchg
fwait
imul
fnstcw
cmp
mov
sbb
fcmovnbe
sahf
fdivrp
gs
aad
pop
shlb
push
mov
push
out
outsl
jge
mov
in
xchg
xchg
hlt
movl
push
shl
test
sub
insl
xchg
push
sbbl
lds
addr16
out
movl
inc
cmp
imul
sbb
cmp
daa
jbe
jns
aam
cmp
loope
mov
jecxz
sti
and
clc
dec
or
jg
and
aaa
and
lret
sti
mov
push
sbb
mov
inc
mov
mov
cmpsb
shlb
popf
push
push
adc
cs
push
sub
lcall
test
pop
cmp
pop
scas
jne
aaa
adc
test
ret
push
and
ret
loopne
mov
pop
mov
lea
jmp
ljmp
adc
shl
xor
rcll
clc
push
mov
dec
fists
inc
xor
sbb
adc
inc
leave
pop
adc
call
push
lock
xor
sub
sti
and
rclb
icebp
aam
int3
dec
xchg
daa
lahf
shl
dec
movsb
add
inc
xor
and
and
cwtl
cmp
in
push
subl
push
pusha
or
outsl
jle
lahf
dec
dec
push
sub
repnz
call
sti
jecxz
cmc
pop
addr16
mov
push
inc
lds
xlat
mov
and
loopne
cmp
mov
sbb
push
add
jmp
pop
mov
ret
out
xchg
mov
xlat
imul
adc
movl
orb
sarb
out
test
xchg
shll
icebp
test
cltd
inc
xchg
cmpsl
mov
adc
pop
add
push
push
xchg
jo
mov
cmpsl
inc
and
movsl
mov
sub
cmp
lods
fcompl
push
jp
fcmovnbe
ja
or
aad
and
stos
pop
jmp
sub
sbbl
dec
inc
outsb
dec
add
mov
dec
xchg
mov
jae
ffree
and
ret
dec
ds
sbb
clc
xchg
push
mov
pop
aaa
test
test
dec
mov
pop
ss
adc
les
je
loope
fnstsw
lret
mov
mov
lods
ds
sub
mov
repz
jge
add
cwtl
sub
mov
lods
std
sbb
lret
push
xor
sbb
repnz
jae
pop
in
mov
adc
xchg
dec
pusha
xor
ja
fildl
pop
or
stos
push
in
pushf
or
imul
shll
mov
int3
out
subb
xor
or
cmpsl
cwtl
imul
sub
cld
lahf
repz
fldt
nop
mov
mov
int
or
sub
and
xor
cmpb
mov
pushf
leave
xchg
imul
notb
inc
movl
clc
add
inc
aas
xchg
insl
in
sbb
jl
jne
lret
cmp
incl
mov
xorb
aaa
sbb
outsl
pop
and
lea
out
fiadds
and
mov
mov
loope
xchg
outsl
xor
mov
jo
push
xchg
push
lock
or
add
outsb
fcmovnb
aad
mov
call
cmp
inc
add
call
jge
mov
pop
stc
and
hlt
sbb
fistps
push
cmpsl
mov
xor
mov
ret
lea
insl
loope
pop
pop
sbb
mov
mov
cmp
adc
aad
cmpsl
xchg
sbb
cmc
in
nop
sbb
sahf
data16
mov
sbb
mov
into
roll
sbb
add
shl
clc
ret
push
xchg
push
fimull
xor
scas
mov
mov
xchg
adc
imul
inc
clc
lds
ret
push
inc
and
jne
push
daa
fucom
jbe
pop
dec
inc
xor
mov
mov
imull
test
xchg
xor
int
inc
push
rorl
cmpl
push
sahf
lahf
cmp
mov
pusha
inc
sbb
in
sbb
dec
mov
jp
lods
adc
lcall
xlat
lret
out
cli
imul
add
mov
into
sbb
test
inc
push
sub
aas
mov
fistl
test
in
clc
push
jbe
mov
and
addr16
cli
push
out
add
push
mov
dec
leave
into
add
inc
arpl
xor
add
adc
daa
insl
stos
hlt
test
outsb
xor
cmp
adc
fisubrs
push
sbb
pop
dec
or
push
out
sub
adc
xor
jge
dec
or
aas
mov
movl
sbb
and
inc
inc
push
push
pop
lret
add
xchg
fwait
insl
xor
pop
mov
push
mov
sti
xchg
cmpsb
call
ret
movsb
mov
aad
pop
stos
mov
cmpsl
jae
test
lcall
ljmp
addr16
popa
xchg
cs
or
test
inc
inc
inc
push
mov
push
cmp
rcr
jle
sahf
out
loope
cmp
andb
xlat
ficoms
and
xor
aam
out
jl
hlt
shrl
mov
cmp
cmpsl
das
and
mov
out
sub
addr16
nop
sbb
mov
and
push
jmp
pop
jg
adc
xchg
add
repz
dec
ss
popa
cmp
jecxz
jae
insl
stos
out
push
or
sbb
mov
mov
or
flds
and
sbb
das
decb
xor
inc
sbb
mov
movsb
cwtl
mov
add
mov
lods
mov
loope
loop
jb
xor
stos
jge
addr16
jmp
sub
add
xor
xor
push
push
je
shrl
mov
clc
mov
popf
jl
movsl
cs
jb
pop
outsl
jae
lds
stos
jmp
dec
daa
mov
mov
inc
xchg
jmp
cmp
and
leave
xchg
inc
imul
loope
xorb
jmp
push
icebp
call
popl
outsb
in
jns
ret
lcall
mov
out
call
jp
mov
mov
cmp
rolb
notl
push
dec
push
mov
pushf
pop
adc
sbb
jg
push
xchg
cwtl
push
rclb
bts
add
cld
jno
subl
push
xchg
loop
pop
leave
mov
sbb
lret
push
in
mov
mov
push
cmpsb
or
popf
add
cltd
outsl
scas
roll
gs
jge
dec
mov
push
or
jmp
imul
jecxz
fiaddl
stc
jnp
jp
cmp
push
sub
xor
movsb
and
lods
push
mov
pop
add
sbb
les
arpl
mov
cld
aas
pop
inc
xchg
insl
jno
lret
xor
jmp
hlt
movsb
jle
mov
outsl
imul
mov
int3
dec
cmp
inc
sbb
loop
pop
dec
aas
jae
lea
xor
inc
repnz
out
sahf
lds
setno
pop
push
or
lret
ss
leave
push
add
jns
sbb
cmp
mov
test
mov
cs
mov
mov
in
cltd
test
jp
out
pop
arpl
gs
pop
cmpsb
pop
es
cmp
add
mov
or
pop
aas
jns
mov
sub
and
insb
mov
gs
lods
iret
push
jecxz
inc
cmc
cwtl
xor
mov
xchg
negl
mov
std
pop
je
pop
fcompl
cmpb
jb
test
stos
add
mov
cmc
xchg
and
test
mov
cmovno
cmp
mov
fmuls
das
pop
mov
sbb
fcomps
jae
push
hlt
movl
jl,pt
sti
inc
stos
addr16
push
mov
sbb
daa
ficomps
movsl
add
vmread
push
add
gs
or
pop
push
aaa
aas
xbegin
std
cltd
dec
flds
dec
mov
pop
push
or
sbb
iret
sub
lret
dec
cmp
std
add
in
je
xchg
xor
xor
mov
mov
xlat
mov
inc
icebp
sbb
dec
push
xor
push
test
jg
sbb
aas
aaa
mov
out
push
cmp
shrb
push
add
mov
shll
push
jecxz
add
cmp
pop
push
push
leave
arpl
test
jle
jne
mov
sub
push
out
mov
add
popl
imul
push
or
sbb
fdivl
push
jge
xsaves
mov
xchg
xchg
test
mov
push
ffree
mov
cs
pusha
and
andb
outsb
cmp
mov
xor
cltd
or
fbld
jns
std
or
in
push
mov
call
test
out
ja
mov
fcmovu
push
jp
adc
gs
lea
add
jnp
pop
fstps
aas
lea
scas
lret
push
andb
in
ret
loope
inc
fucomi
mov
repnz
push
and
in
lahf
test
mov
lods
call
mov
notl
mov
xlat
xchg
sub
adc
int3
sub
dec
and
addr16
je
push
jg
ror
or
pop
jae
or
dec
and
out
mov
cmc
cmp
dec
daa
mov
hlt
cmpsl
loopne
inc
sbb
scas
xlat
popa
fistpl
push
movl
pop
push
pop
rcrb
jo
mov
dec
call
outsl
gs
xlat
mov
inc
insl
stos
inc
bound
shlb
mov
repz
push
popf
icebp
sbb
cwtl
cli
andb
clc
cltd
data16
push
push
or
ret
pop
movl
sqrtps
lds
mov
adc
pop
sub
repz
stc
xchg
jnp
out
xor
movl
xchg
ror
inc
mov
xor
int3
lahf
test
out
rcll
data16
test
movsl
jecxz
mov
and
jl
fs
scas
mov
sbbb
in
xchg
pop
addr16
inc
xchg
and
mov
mov
jno
sub
aad
xor
push
xor
daa
mov
or
sub
adc
cmpsl
push
int
pop
xchg
adc
adc
sbb
pop
push
je
xor
push
add
movsb
data16
dec
jl
mov
out
xor
mov
push
jbe
fdivl
push
nop
xchg
adc
sub
shl
and
xchg
loop
arpl
or
pop
pop
inc
mov
mov
push
dec
scas
xor
pop
subb
xchg
xor
out
cltd
jle
sti
push
lahf
pop
jne
dec
fadd
ljmp
push
in
ret
cmp
je
stos
mov
lods
fdivr
push
dec
jb
insl
fwait
lds
push
sub
push
fdivp
xlat
adc
ret
sub
jns
or
aad
inc
xor
jecxz
in
repnz
jle
pusha
xorb
and
and
jecxz
adc
lods
push
mov
shlb
lahf
dec
ficoml
leave
call
xor
cmc
aad
fisubrs
cld
dec
mov
pop
pop
pop
insb
cmp
ret
sbb
xchg
dec
faddp
cli
gs
and
inc
sub
jmp
cmp
lret
xchg
sbb
push
adc
sti
out
imul
push
cwtl
sbb
adc
daa
es
and
aas
push
test
inc
mov
pop
push
add
or
sar
int
xchg
rcrb
jp
jg
call
sub
pop
fwait
imull
mov
ljmp
cli
cltd
adc
shll
mov
push
adc
adc
cltd
xchg
cmp
in
jo
das
push
push
les
xchg
sbb
stos
sub
inc
mov
or
repz
ss
mov
sbb
scas
lods
sub
addr16
jmp
repz
hlt
out
mov
lret
cmc
dec
xor
jle
mov
mov
mov
mov
rcrb
fstl
comiss
mov
insb
out
les
sarb
sbb
and
inc
dec
mov
mov
lret
dec
or
jle
fwait
lahf
xor
movl
sub
xchg
sti
scas
sbb
movsl
push
mov
mov
xor
movl
lea
push
mov
rcr
mov
mov
adc
inc
mov
xchg
orl
in
or
pop
dec
sub
inc
icebp
pusha
out
lea
insb
and
mov
adc
and
shlb
in
aam
in
and
out
cmp
lcall
popf
add
mov
out
sub
jb
push
pop
loopne,pt
mov
fwait
imul
xlat
sub
and
pop
xchg
ret
mov
mov
mov
loopne
mov
jns
push
addr16
test
inc
mov
adc
arpl
pop
notl
in
dec
lea
xchg
push
inc
sbb
lods
cld
inc
sub
xor
sti
dec
movsl
mov
icebp
mov
push
outsl
or
rol
shll
push
aad
mov
fs
stos
imul
cmp
sub
xchg
lds
inc
jbe
xchg
cltd
dec
xlat
mov
test
jp
mov
and
cmp
ds
push
testb
test
daa
daa
push
add
hlt
call
in
mov
pop
mov
loopne
lret
mov
loop
add
mov
adc
mov
dec
sbb
adc
xor
adc
jmp
sti
push
adc
movsb
cmpb
sbb
dec
loope
xor
in
imul
and
in
sbb
arpl
rol
lods
cs
mov
jmp
pop
push
pop
dec
mov
sub
sub
roll
xchg
in
mov
pop
pushl
in
test
pop
push
in
inc
ret
pop
pop
movsl
xor
in
mov
push
inc
mov
push
gs
and
out
pop
inc
sub
sub
shl
fmull
idiv
out
int3
mov
ss
push
sahf
pusha
mov
cmp
sbb
xchg
icebp
movsl
in
mov
leave
js
pop
xchg
ficomps
dec
dec
mov
cmpsb
movsl
jg
rcl
and
cmp
push
xchg
out
xor
sub
repnz
addr16
mov
sub
push
rol
lods
push
cmpsl
sar
gs
cmp
mov
add
fldt
push
pusha
adc
jae
jle
mov
mov
sub
div
inc
xchg
mov
push
movl
adc
and
fldz
mov
addr16
push
inc
cmp
insb
sarb
cmpsl
insb
fadd
std
jmp
push
mov
sbbl
inc
add
int
call
add
sbb
repnz
cld
adc
rcrb
xor
dec
push
pop
pop
shll
loop
sub
in
lods
jnp
inc
inc
pop
cmpsb
jbe
faddp
push
movsl
and
in
adc
jle
push
in
enter
push
lods
pop
inc
iret
subl
push
sbb
cmpsl
mov
out
stos
in
int3
jmp
daa
cmp
mov
inc
pop
shll
xchg
shr
mov
mov
fadd
adc
or
adc
xchg
jns
leave
xchg
inc
xchg
add
push
xor
lock
xor
cmp
in
movsb
stos
es
cltd
pop
xchg
add
pop
notb
loop
mov
roll
push
xchg
or
aaa
mov
rol
fiadds
xor
mov
cmp
fwait
icebp
push
sysexit
xor
cmovnp
inc
sarb
movl
roll
sbb
xchg
shlb
and
dec
rcrb
sub
inc
and
mov
ret
stos
ds
lcall
rolb
mov
rol
jb
jl
pusha
mov
iret
jmp
push
sbb
jg
jnp
popa
jge
push
js
or
pop
mov
xchg
and
lea
sarb
sbb
sub
mov
or
nop
mov
and
xchg
push
and
or
loop
pop
xorl
int
xor
mov
push
inc
rcrb
call
sbb
adc
mov
nop
loop
movsb
fcompl
je
dec
cmc
in
in
jne
mov
add
push
xchg
xchg
fwait
cmp
sbb
jmp
clc
test
cmp
adc
int
or
call
inc
inc
arpl
lds
in
and
jge
lods
sub
sbb
sti
imul
cwtl
add
dec
aas
xchg
inc
adc
pusha
or
repz
adc
jecxz
add
inc
pop
es
sarb
mov
leave
lret
bnd
xor
jbe
adc
mov
je
xlat
pushf
push
adc
jle
daa
push
xchg
pop
movsb
das
es
scas
aas
lret
sub
or
fs
cmp
gs
dec
jno
push
popf
outsb
xor
mov
and
shr
push
movsl
ja
and
dec
scas
xchg
push
popa
addr16
inc
pushf
sub
pop
adc
in
xor
mov
mov
sub
out
ret
mov
sbb
mov
shll
pusha
dec
pop
xor
loop
push
mov
scas
rorl
cmpsl
jp
mov
inc
pop
xor
push
gs
or
adcl
sbb
mov
xorb
or
jne
mov
loop
mov
mov
jecxz
and
xchg
or
lods
aaa
sub
popf
mov
cmpsb
mov
jmp
inc
sub
xchg
sti
mov
and
rclb
dec
dec
add
inc
cld
sahf
mov
push
mov
cmc
pop
push
addr16
fcomip
jae
xchg
mov
pop
cld
add
xor
sbb
std
push
rol
add
mov
xchg
adc
cmc
lock
movsb
or
dec
int
lds
jb
pop
and
sbb
lds
aam
sub
add
dec
cmp
jbe
cs
mov
movb
shlb
xchg
xchg
sub
dec
dec
xchg
and
jge
inc
leave
cs
mov
in
inc
dec
mov
hlt
movsb
xchg
test
mul
clc
mov
rol
jnp
pop
mov
movsb
pop
movl
sahf
sub
imul
xlat
inc
mov
dec
dec
xchg
data16
add
test
or
test
cmp
adc
mov
leave
imul
or
inc
sub
insb
sbb
stos
inc
mov
sahf
xchg
and
mov
xor
pop
add
cmp
xchg
aas
lea
inc
mov
sti
mov
mov
mov
pop
lahf
cld
fstpt
mov
lods
call
movsb
fs
das
or
xchg
lret
jmp
push
in
shlb
mov
les
xchg
sti
mov
call
cwtl
imul
mov
adc
mov
push
insl
hlt
add
cmp
pusha
and
rclb
repnz
sub
popa
mov
jmp
xchg
mov
mov
mov
pop
xor
sub
jecxz
mov
lahf
aad
movsb
push
repnz
fs
sti
pop
imulb
pop
int3
outsl
push
mov
xchg
adc
jae
mov
je
cwtl
dec
and
push
push
frstor
sub
pop
dec
xchg
mov
lret
mov
stos
lcall
xchg
ret
inc
sbb
movsb
out
push
inc
and
push
and
sub
xlat
lret
mov
cmpsb
sbb
inc
jae
xchg
xchg
inc
call
add
repz
xor
jecxz
xchg
loop
aam
pop
dec
into
xorl
inc
mov
and
sbb
add
sbbb
movl
pop
leave
mov
rcrl
test
xor
inc
push
jle
aam
sar
jne
dec
dec
mov
fwait
ja
jmp
aam
bound
sbb
outsb
stos
push
popa
jle
or
loope
call
in
sub
mov
and
dec
andl
adc
and
inc
fs
jl
nop
cwtl
test
cmpsl
sub
xor
arpl
mov
push
add
push
dec
cmp
ja
cmp
daa
nop
add
push
sub
popf
dec
inc
and
call
push
dec
inc
push
xchg
add
sub
imul
adc
cmp
xchg
inc
lods
sbb
cld
negb
sarl
push
gs
jge
xchg
sub
jmp
mov
stos
adc
mov
push
fcomp
fs
aad
movsb
jle
js
sbbb
lret
loope
aam
pushf
aad
mov
jmp
or
shll
cmp
mov
cmp
add
push
cwtl
cmc
or
lock
rol
mov
mov
stc
data16
adc
mov
mov
add
pushf
outsl
sbb
mov
lods
cltd
sbb
jecxz
xor
inc
sbb
or
je
int
lea
mov
push
cli
or
fs
ja
test
lods
jnp
hlt
mov
mov
das
adcl
inc
jl
xor
adc
int
xchg
fcomps
jmp
loop
mov
test
mov
push
xchg
sar
daa
xor
shll
rol
cmp
test
jbe
addr16
fcmovnb
nop
inc
mov
iret
xchg
pop
sub
inc
pop
inc
push
popf
mov
and
inc
bound
mov
and
out
je
push
dec
rorb
imul
dec
int3
mov
stos
stos
and
clc
daa
pop
fwait
ljmp
test
in
out
adc
sahf
sbb
rclb
pop
dec
lcall
addr16
scas
mov
jl
addr16
out
cmp
push
and
repz
inc
push
icebp
and
mov
int
cmp
insb
iret
push
ljmp
mov
sahf
cltd
pop
outsl
aaa
jns
das
imul
lds
mov
filds
push
cmp
outsl
movl
push
or
jge
test
je
orb
std
imulb
pop
icebp
jmp
pop
mov
loope
je
or
int
push
jl
mov
and
push
add
xchg
cmp
cmp
aas
sbb
loopne
je
adc
outsb
movsl
ficomps
sbb
xor
imul
add
hlt
push
adc
icebp
pop
scas
into
test
jp
pop
mov
xor
pop
inc
mov
sbb
xchg
fldcw
in
jo
pushf
xchg
loopne
adc
xor
jb
std
in
subl
clc
outsb
xorb
and
xchg
mov
mov
ja
outsb
jecxz
jns
call
inc
movl
push
adc
clc
and
repnz
ss
fsubl
in
shll
out
inc
mov
mov
xchg
out
cmp
rol
mov
push
pop
gs
dec
popf
dec
mov
push
rorl
lock
fmuls
aam
jae
mov
into
mov
jae
push
push
adc
rcrl
popa
loop
pop
test
inc
fdivrl
mov
and
sbb
adc
dec
push
xor
imul
pop
pop
mov
test
sti
inc
shll
cmpsb
je
and
sbb
push
sbb
scas
push
sbb
loopne
pop
mov
je
dec
cltd
cs
mov
dec
lock
in
xchg
out
jo
fwait
add
movsb
movsl
cmp
insb
xor
jl
mov
fiadds
aam
mov
pop
push
pop
dec
bound
jo,pn
outsb
out
imul
xchg
test
mov
scas
xchg
mov
pop
lahf
leave
out
bound
daa
dec
test
lds
dec
xor
add
adc
hlt
mov
js
mov
test
or
andl
js
xchg
inc
and
cmpsb
cmp
pop
xchg
addb
fisubs
mov
fistl
hlt
mov
pop
mov
stos
mov
addr16
imul
or
inc
lcall
mov
data16
das
add
cwtl
out
cmp
xchg
daa
mov
cmp
xchg
add
dec
out
into
sbb
pushf
insl
jmp
push
pop
leave
lds
movsl
dec
dec
lret
arpl
call
or
jmp
mov
mov
jb
pop
pop
jle
lds
je
cmpsl
fldt
or
out
out
mov
jno
pop
fsts
push
mov
shlb
cmp
std
in
stos
divb
pop
push
dec
push
mov
pushf
mov
mov
sbb
lods
inc
ss
sub
mov
or
or
shlb
add
outsb
jmp
push
sbb
aad
pop
roll
iret
xchg
xchg
stos
mov
xlat
pop
out
sub
test
xor
xchg
aaa
and
ret
roll
mov
xlat
hlt
push
add
sbb
les
jge
mov
mov
in
inc
sub
mov
roll
out
or
xchg
inc
mov
sub
add
leave
iret
daa
jecxz
jbe
sar
gs
and
cmpsb
mov
bnd
xchg
int3
push
into
xchg
pop
jno
fwait
mov
pop
hlt
xchg
or
mov
insb
mov
mov
clc
lretw
sub
or
jg
imul
test
add
mov
js
xchg
fmull
push
push
sub
cmpsb
pop
mov
sub
push
mov
and
daa
push
jnp
inc
loope
or
xchg
arpl
adc
in
sbb
adc
and
cmc
jecxz
dec
adc
push
mov
shll
outsl
inc
negl
dec
sbb
subl
add
jg
and
xchg
cmc
pop
roll
mov
movsl
out
or
sbb
mov
ljmp
gs
sub
mov
ljmp
lods
call
lcall
add
pop
adc
lret
xor
ret
repnz
xchg
mov
inc
adc
lods
sbb
ds
jge
movl
xor
mov
mov
xchg
xchg
call
jecxz
add
cmp
lea
adc
xchg
cmpsb
dec
lock
mov
jbe
popf
cwtl
or
inc
inc
or
dec
cmc
push
or
sbb
xor
outsb
leave
mov
data16
dec
roll
add
popa
out
sub
sub
xchg
adc
stos
int
outsb
add
cs
mov
rcrl
pop
les
mov
in
xchg
sbb
pop
push
xor
mov
mov
movsl
out
jno
pop
pop
test
cmp
loope
xchg
int
jne
adc
movsl
pop
lods
jecxz
pop
dec
testb
push
mov
jp
and
aam
jmp
adc
sub
aaa
xlat
clc
addr16
inc
in
les
add
data16
sub
mov
stc
sbb
dec
les
add
cs
sub
push
stos
out
jbe
sbb
shlb
xlat
imul
stc
mov
pusha
sub
push
rcr
loopne
xchg
add
in
decl
ds
jge
push
into
dec
mov
mov
addr16
lea
adc
xchg
out
out
lods
push
repz
push
rorb
adc
xor
pop
fmul
mov
sbb
push
clc
adc
dec
cld
adc
mov
neg
ss
out
lahf
inc
lods
dec
dec
mov
movl
adc
xchg
sbb
xor
lds
pop
jge
cmp
inc
daa
gs
mov
out
in
repnz
icebp
cwtl
pop
mov
loop
mov
idiv
lret
ss
fcoml
mov
push
inc
aaa
dec
jmp
ret
out
nop
cmp
sub
mov
sbb
repnz
pop
ret
lock
sub
adcl
mov
insl
xor
xor
inc
add
scas
outsb
sub
ljmp
adc
jle
jne
dec
test
cmpsl
inc
add
sbb
jae
add
cmp
cmpsb
mov
outsl
jg
shlb
xchg
push
lds
clc
sti
out
or
mov
sbb
sub
in
out
dec
inc
arpl
inc
hlt
jmp
ss
rcr
fwait
daa
add
outsb
cld
mov
mov
jle
scas
jns
imull
pop
js
add
xor
or
hlt
out
xchg
xchg
jmp
fldl
nop
jg
inc
scas
push
nop
hlt
rolb
ret
call
les
xor
shlb
inc
mov
rorl
mov
fwait
sbb
stos
mov
clc
push
jle
jno
mov
cmp
out
bound
mov
and
popf
and
sub
add
jbe
jl
and
cmp
jns
insl
cmp
ret
outsl
cld
movsb
pop
adc
outsb
hlt
and
je
pop
xor
and
mov
push
inc
rorb
jmp
sbb
lock
adc
ficomps
pop
les
jl
xchg
sub
inc
mov
and
repnz
add
dec
loopne
mov
mov
mov
sub
stos
test
fdivp
jl
cmp
fadd
aaa
aam
push
mov
add
out
xlat
stos
negl
ja
dec
or
pop
fists
inc
add
lea
inc
adc
mov
inc
or
adc
push
scas
lret
aad
xchg
sbb
jp
jmp
lods
fs
inc
inc
out
test
ja
or
sbb
aad
xchg
pop
lea
rolb
adc
jno
test
push
cli
jmp
sub
mov
xor
mov
imul
mov
sarl
rolb
in
adc
ja
push
and
push
or
sub
sub
flds
adc
std
push
insl
dec
xchg
mov
test
add
mov
outsb
and
sub
xchg
pop
cmp
sub
mov
jge
cmpsl
ss
fcmove
hlt
mov
mov
cmpsl
aam
mov
lret
add
inc
jp
sub
push
pop
ja
dec
xor
in
mov
cmp
rclb
lea
and
pop
data16
inc
lods
outsl
sub
data16
inc
sbb
cmp
mov
push
sbb
jb
into
lods
ljmp
pop
and
sub
mov
scas
pop
sub
call
lcall
test
mov
mov
pop
mov
hlt
push
or
jecxz
xor
loopne
sti
aaa
mov
inc
js
push
or
movsl
shrb
imul
adc
mov
inc
and
mov
sbb
xchg
inc
lods
nop
loopne
gs
or
ret
mov
mov
movl
and
mov
fwait
push
add
ja
cli
push
xchg
lcall
mov
test
and
cmc
or
mov
fisubrs
dec
inc
sbb
push
jo
jnp
std
jecxz
mov
mov
adc
bound
jmp
push
cmp
stc
xor
mov
movsb
or
mov
xor
cmpsl
das
mov
mov
dec
inc
or
push
push
mov
xor
repz
movl
jmp
dec
arpl
cmpsl
xchg
hlt
sbb
movsl
jae
cmc
mov
or
aaa
push
adc
mov
jecxz
aaa
push
mov
out
out
ja
addl
in
or
frstor
sub
fs
mov
loopne
stos
jle
mov
ds
in
ja
sub
adc
sub
lds
dec
movsb
mov
inc
sbb
and
scas
cs
mov
es
inc
xchg
inc
scas
jo,pt
sbb
and
jle
popf
add
fisttpll
inc
out
cmpsl
push
andb
xor
inc
sub
repnz
mov
cmpsb
lahf
mov
rol
lret
mov
int
inc
adc
push
fsts
dec
push
mov
fisubrs
xorb
mov
pop
push
dec
adc
cmp
rolb
jecxz
test
xchg
lret
add
lock
mov
adc
xchg
mov
popf
sbb
popw
xor
mov
jmp
orl
mov
or
dec
sbb
outsl
xchg
inc
lods
in
rcr
jno
in
cwtl
xchg
push
xchg
test
out
dec
test
and
xchg
xchg
push
dec
and
sbb
andl
push
outsb
mov
cmc
pop
fsubp
cmpsb
mov
push
out
inc
lock
or
cmc
and
xor
adc
outsl
cmpsb
push
shll
sbbl
pop
arpl
xor
sbb
and
test
adc
lcall
jne
jecxz
leave
out
ljmp
pop
sbb
pop
cmpsl
dec
mov
mov
arpl
xchg
sbb
scas
les
movl
and
mov
adc
mov
pop
dec
sbb
mov
xor
add
lea
faddl
pop
xchg
sbb
ret
mov
or
mov
push
aad
out
shll
movsb
je
loop
into
mov
jne
inc
loopne
pusha
insb
dec
cli
mov
xchg
jbe
in
dec
add
dec
je
pop
out
dec
sub
jle
leave
add
fcomi
frstor
push
or
cmovb
mov
lcall
movsb
cmp
inc
push
inc
or
adc
xchg
xor
xchg
pop
sbb
push
cmpsb
mov
loope
dec
dec
outsb
imul
adc
push
pusha
or
cwtl
sbb
mov
push
sub
sbb
pop
dec
xor
cmp
repnz
mov
mov
jl
push
imul
sbb
adc
out
adc
and
adc
mov
addr16
dec
inc
lods
sbb
push
and
xchg
dec
jp
fprem1
repz
add
jae
mov
lahf
jg
pusha
pop
pop
sbb
or
mov
out
mov
pusha
decl
nop
js
int3
scas
andl
rcrb
add
push
cmpsl
adc
pop
incl
dec
daa
int
jmp
outsb
adc
ret
xor
pop
pop
mov
adc
movsb
xchg
and
jo
xor
aaa
dec
dec
movsb
cld
stos
mov
test
testb
jmp
int
pop
mov
adc
in
mov
cmp
bound
inc
add
jge
sub
jle
lods
mov
or
or
ret
mov
xor
fstpl
lcall
nop
mov
xorb
int
push
out
jno
inc
das
or
shr
mov
data16
in
ljmp
fwait
pusha
mov
fmuls
pop
loope
inc
mov
std
or
scas
dec
aas
sahf
jg
add
int3
mov
lcall
push
xor
in
mov
mov
imul
popf
sub
fwait
add
std
push
mov
stc
mov
mov
push
out
ret
adc
je
fs
or
sub
xchg
and
ljmp
jmp
dec
rorl
or
xchg
pop
jae
sub
insl
fsub
cmc
ja
ljmp
push
inc
push
xchg
xchg
sbb
mov
dec
and
aad
lret
adc
pop
outsl
and
mov
push
push
mov
into
or
xor
pop
aad
sbb
xchg
pushf
mov
int3
ljmp
ss
fdivr
sbb
andl
or
mov
cli
xchg
mov
and
shrb
mov
daa
pop
xchg
icebp
mov
insb
out
shlb
aas
dec
pusha
mov
cmp
and
es
mov
sub
xchg
xchg
inc
ds
fidivl
cmp
mov
cmp
add
jbe
incb
or
out
inc
bound
add
mov
cmp
mov
daa
ret
sub
xor
mov
and
stos
dec
divb
movl
imul
leave
sub
cld
add
adc
or
mov
push
pop
aas
xor
daa
jle
jge
add
pop
test
dec
or
inc
arpl
mov
cmp
scas
pop
mov
cld
outsb
xchg
fwait
pop
bnd
pop
out
push
pop
scas
inc
xor
cwtl
sahf
and
cmp
push
pop
push
dec
push
lods
fldt
idivl
fwait
mov
jno
push
loopne
jae
pop
and
cmp
adc
into
mov
pop
pop
pusha
clc
jnp
or
out
bound
push
and
and
mov
cltd
leave
movsb
cmc
pop
cmp
or
cmp
inc
into
mov
pusha
push
dec
and
or
pop
push
aad
popa
dec
mov
pushw
push
push
aaa
inc
fwait
shlb
mov
xchg
inc
sub
shl
out
mov
and
out
push
daa
cmpsb
imul
filds
outsl
call
pop
pushf
sbb
inc
or
sbb
mov
cli
and
adc
cmp
shlb
sub
jmp
sbb
scas
loope
movsl
xchg
dec
fadds
dec
mov
out
mov
fists
pop
add
std
push
add
inc
sti
inc
cmp
pop
xor
push
leave
jle
and
inc
mov
stos
push
pop
movsl
femms
mov
loop
shll
inc
pop
add
je
fwait
mov
jecxz
xor
xchg
imulb
aaa
ffreep
push
imul
mov
mov
push
add
adc
out
jle
shll
push
adc
aam
pop
out
dec
das
ss
cmpsb
lret
sub
out
cmp
cmp
push
push
aas
xchg
lds
add
xchg
sbb
addr16
fstpt
jnp
xchg
out
push
push
inc
cmp
popa
mov
lds
inc
fsubs
shl
lods
dec
in
add
lock
jnp
arpl
jg
dec
sti
mov
sbb
adc
imul
stc
xchg
xor
test
push
adc
mov
and
clc
movsb
test
shl
loope
push
cltd
mov
sub
sbb
mov
jnp
adc
xor
jge
mov
and
sub
dec
test
movl
rol
pop
mov
test
jmp
inc
mov
push
sbb
and
cld
inc
aaa
jecxz
mov
lods
cmp
data16
nop
pop
pop
xor
fs
sbb
xchg
inc
ja
xchg
dec
mov
pop
cld
push
test
inc
movl
xchg
mov
and
jecxz
dec
aam
sub
dec
lds
aaa
adc
or
cmp
popf
push
movsb
adcb
loope
jge
dec
cld
mov
aas
xchg
lret
adc
mov
push
int3
es
ss
jae
and
subl
test
and
sbb
test
movb
mov
popf
mov
dec
outsl
or
add
cmp
shlb
mov
xchg
pusha
aas
sti
daa
loope
cwtl
dec
fs
sbb
into
pop
and
out
or
mov
gs
pop
imul
daa
adc
push
fbld
ds
dec
popl
mov
sbb
inc
pop
push
les
lods
or
mov
jbe
std
shrb
mov
lock
mov
lods
cmp
push
call
xor
add
sbb
lock
sbb
inc
insl
sbb
sub
push
das
loope
push
inc
rorb
or
mov
fidivrs
out
push
push
pop
jg
xor
dec
and
push
push
jbe
outsl
lds
dec
sub
xchg
xchg
dec
or
pop
stc
xchg
or
mov
adc
push
sbb
xor
fs
xor
sub
stos
mov
out
mov
mov
jo
push
repz
std
movsb
int3
mov
sbb
jmp
out
leave
jmp
aaa
add
inc
repnz
xchg
ss
movswl
pandn
cltd
pop
dec
xorl
les
lds
xchg
test
xrelease
insb
sbb
es
adc
call
jl
add
jno
out
xor
dec
inc
and
jb
ja
pusha
xor
das
shlb
outsl
pop
pop
leave
scas
cmp
aam
cmp
jmp
sub
ja
xor
mov
adc
in
repz
nop
shll
inc
xchg
push
jecxz
outsb
imul
mov
add
sbb
jo
sarb
and
push
push
icebp
ljmp
mov
push
pop
jae
pop
push
lret
test
call
cmp
daa
or
mov
aam
pop
stos
jmp
inc
ret
cmp
inc
dec
mov
dec
imul
pop
cmpsb
ds
mov
ja
cmpsl
pop
repz
ret
push
scas
sahf
mov
cmc
cmpsl
mov
inc
dec
pop
insb
popf
dec
mov
pop
cld
sub
movsb
jno
cmp
mov
jge
push
xor
or
jnp
cmpsl
mov
inc
repnz
rcr
mov
inc
jbe
mov
cmp
and
out
pushf
dec
adc
test
push
sub
inc
adc
xchg
dec
mov
xchg
idivb
fldt
push
lcall
imul
call
sbb
aad
sbb
jecxz
cmp
in
stc
push
cmp
pushf
jbe
add
int3
jae
cmp
mov
ror
xchg
cmc
cli
repnz
mov
mov
lret
ljmp
pop
cmpsb
shl
push
addl
ffreep
outsl
adc
cld
int
xchg
sbb
stos
add
out
std
in
ja
xorl
mov
aam
cwtl
mov
mov
fwait
or
js
push
lcall
jno
jo
mov
lods
pop
cltd
mov
lret
cld
mov
loope
pop
addr16
pop
icebp
xlat
loopne
ja
sub
cmp
dec
xor
test
aas
xor
sti
pop
sbb
push
fcmovnb
subl
rol
adc
sahf
jae
or
xchg
adc
out
std
sub
inc
test
xchg
dec
jns
mov
sbbl
jecxz
cmp
pusha
xor
es
xor
outsl
cltd
nop
mov
jb
into
and
loopne
xchg
jg
mov
xchg
inc
dec
int3
xchg
dec
in
clc
lahf
or
or
mov
xchg
mov
popa
inc
mov
xchg
inc
nop
push
dec
and
or
push
mov
sub
add
loope
mov
sub
and
adc
dec
sub
imul
add
jb
rolb
cli
test
js
xor
pop
loop
mov
mov
lock
faddl
lret
and
andl
ljmp
sbb
adc
mov
xchg
push
test
clc
mov
mov
adc
add
decl
dec
cmc
int
push
pop
imul
sbbb
sub
jnp
sahf
xchg
cmp
sbb
adc
adc
and
dec
inc
icebp
aas
add
add
cltd
adc
mov
scas
rcrb
or
dec
pop
sub
sbb
loopne
lods
push
xchg
mov
mov
mov
add
xchg
rcrb
mov
dec
jp
xchg
pop
scas
stos
lods
dec
push
adc
jle
xor
mov
outsb
rcrb
add
adc
dec
fwait
aad
ja
repz
jb
into
mov
mov
add
push
sti
out
in
cmpsb
push
jb
sbb
ss
notb
outsb
fists
add
movl
dec
and
aam
subb
pop
pop
jae
into
inc
mov
scas
inc
xor
fsubrl
adc
jle
jne
inc
in
outsb
clc
push
mov
push
jg
lret
ficomps
dec
out
jne
lds
je
inc
iret
jbe
sub
and
les
scas
jge
adc
loop
push
pop
outsl
mov
cmpsl
lcall
rclb
lods
in
and
lea
dec
mov
jmp
cmpsb
test
hlt
rolb
inc
mov
sysret
test
add
xor
push
adc
insl
loope
cmp
daa
pop
sub
mov
pop
lock
push
ret
ret
jmp
xchg
xchg
arpl
movsb
pop
mov
mov
stos
jg
scas
cmp
icebp
imul
sbb
sub
mov
mov
js
jmp
push
ljmp
fcoms
sahf
dec
stos
test
xchg
sub
and
push
xor
ret
mov
insb
add
ds
xchg
movl
dec
push
dec
push
sub
pop
push
pop
pop
xchg
imul
mov
xchg
popf
fwait
test
mov
mov
repnz
stc
sbb
mov
push
jo
cmpsl
pusha
and
ret
sub
sbb
cmpb
sub
pushf
sti
lds
xchg
xchg
out
fs
and
les
in
lea
mov
in
rcl
pop
pop
int3
rorb
jno
ret
nop
mov
push
or
adcl
orb
inc
cmpsl
mov
ss
adc
inc
mov
pop
mov
dec
out
sbbb
push
test
call
mov
imul
sbb
push
jp
mov
add
xchg
mov
outsb
rorl
mov
jmp
mov
fcoml
shlb
push
xchg
cld
mov
shl
lods
lahf
dec
mov
mov
ret
fidivrs
mov
inc
dec
cmpsb
cmp
int3
add
xchg
lea
jo
xor
mov
pop
cld
inc
add
leave
into
mov
rdmsr
and
dec
ffree
mov
ja
addr16
mov
fildl
hlt
inc
aad
nop
insl
sub
pop
stos
dec
pop
mov
jo
adc
fldl
mov
mov
mov
bound
jge
and
xchg
jb
sbb
push
and
jl
mov
or
xchg
shll
outsl
ja
sub
cwtl
mov
ljmp
or
ficoms
jnp
jae
test
inc
mov
push
mov
test
inc
daa
push
add
adc
sub
fldenv
xchg
adc
pop
mov
daa
sbb
iret
out
lods
sbb
bnd
adc
loopne
push
mov
in
or
cmp
in
pop
out
push
pop
or
pusha
xchg
loope
cmp
xchg
adc
daa
in
out
je
push
pop
mov
test
pop
adc
mov
mov
ljmp
decl
mov
aaa
jp
testb
in
loopne
adc
icebp
push
ret
xor
or
xchg
mov
lods
and
pop
push
insl
mov
rorl
popf
loopne
mov
mov
mov
adc
lock
push
pushf
sahf
mov
sbb
dec
sbb
movsb
add
lcall
ret
inc
add
xchg
push
inc
cmp
pop
out
mov
jb
cmp
push
cld
ret
push
movl
dec
jae
movl
or
clc
mov
dec
push
pop
std
xchg
push
sbb
out
adcb
dec
push
push
pop
sub
adc
jb
in
and
adc
adc
adc
push
rolb
adc
les
pushf
in
fistps
cmp
int
dec
mov
sbb
into
test
addr16
push
outsb
sub
mov
sbb
lahf
shlb
dec
xchg
dec
jbe
mov
inc
popf
aam
cli
pop
lret
add
imul
nop
jecxz
pop
bound
imulb
add
dec
dec
lcall
rcll
lahf
ljmp
add
and
ss
xor
xor
aaa
mov
ljmp
adc
lods
xchg
jecxz
lcall
xor
pusha
je
aas
cli
mov
fwait
idiv
jbe
xchg
addl
ret
sbb
and
cltd
xchg
xor
lahf
sub
push
lret
idivl
xchg
jae
stc
cmp
cmpsl
outsl
data16
jnp
or
sbb
inc
rolb
or
aaa
jg
out
imul
mov
jl
pop
stc
fdivrl
xchg
mov
push
daa
stos
push
cmpsl
test
add
sbb
inc
lds
and
sti
aas
jl
xor
sarl
cwtl
or
jecxz
inc
jle
cmpsb
xchg
fs
orl
cmp
mov
cmp
shlb
pop
clts
pop
dec
cmp
adc
xor
ret
movl
push
jecxz
lds
pop
lock
fcoml
cmp
xchg
mov
jbe
add
xchg
add
test
push
mov
ja
leave
pop
dec
sbb
lret
xlat
add
xor
imulb
and
xchg
add
adc
fnsave
outsl
push
jl
rcrb
jmp
jne
iret
insb
addl
lock
adc
add
sbb
and
cs
rolb
imul
pop
shll
call
push
das
divl
outsb
ljmp
dec
fadd
push
mov
fcomp
jae
iret
push
insb
int
rcrb
inc
jge
faddp
push
popaw
jbe
iret
sbb
inc
daa
xor
int
or
adc
or
loopne
adc
pusha
pop
pop
movl
pop
mov
fcmovb
mov
add
adc
lea
loop
and
mov
push
add
subl
test
lret
inc
insb
push
fwait
addr16
cmpsb
jl
jmp
cmp
loop
mov
jnp
inc
lea
mov
cmc
jmp
sti
int3
lock
sbb
xchg
xor
pop
jne
mov
jae
jmp
add
push
lea
repz
cwtl
stos
scas
xor
test
xor
outsl
push
out
xchg
mov
test
movsb
mov
dec
inc
jmp
or
adcl
xchg
cltd
mov
jae
rcrl
jo
shrl
out
js
cwtl
xor
or
movl
mov
jne
push
inc
movsb
mov
mov
sbb
push
lcall
inc
pop
mov
adc
inc
rcrl
je
stos
and
les
cwtl
lahf
ret
aad
mov
inc
xchg
or
xor
sub
test
inc
or
insb
xor
punpckhdq
mov
pop
sbb
lret
and
inc
insl
fisttpl
adc
jmp
and
cwtl
cmp
mov
fidivl
inc
xchg
ljmp
dec
cwtl
std
push
push
adc
add
mov
or
outsb
sarb
cltd
fdivr
push
out
mov
push
movsb
out
inc
pop
or
jbe
test
add
and
ret
orl
aad
das
push
jne
sub
inc
xchg
test
test
les
cmc
and
jle
dec
adc
xorb
sarb
mov
mov
jmp
inc
rorb
dec
fcoms
dec
mov
out
push
test
movl
jbe
int
clc
mov
inc
jl
ja
mov
loop
cmpsb
out
pop
xlat
test
xchg
sub
cmc
movsb
lock
pushf
xor
mov
dec
ret
ror
mov
dec
dec
mov
loopne
es
dec
movsb
aas
into
fbstp
mov
inc
xor
out
xchg
maxps
jne
dec
js
push
jmp
int3
fimuls
shl
popa
in
scas
es
push
insb
cltd
leave
add
xchg
mov
mov
outsb
scas
outsl
out
fldt
les
xchg
ficoms
inc
inc
and
daa
repnz
xchg
mov
sub
cmp
idivl
ret
push
or
cmp
dec
mov
mov
fsubl
jns
xlat
mov
aas
sub
or
pusha
mov
arpl
jae
mov
xlat
sbb
fcoml
or
jmp
ret
push
adc
mov
std
xor
xchg
adc
sbb
xlat
sti
daa
je
test
clc
das
push
adc
adc
mov
pop
mov
push
out
cmpsl
and
std
fnsave
test
fcmovnb
mov
in
cs
movb
jne
or
das
inc
pop
xchg
negl
movl
mov
jns
inc
xchg
mov
xchg
cmpsb
cmpsl
movsb
out
push
ret
jo
daa
cltd
adc
and
stc
and
and
add
nop
test
push
rcl
movsb
mov
or
or
mov
movl
xor
push
or
inc
and
lea
rolb
pop
int3
cmp
xchg
stc
leave
inc
aam
mov
xchg
mov
shrl
hlt
std
sub
repnz
or
rcr
inc
jnp
fmuls
les
xchg
jmp
adc
rolb
nop
loope
outsb
push
dec
dec
stos
into
dec
inc
aaa
outsb
fisubrl
prefetchnta
pop
inc
sub
mov
xorl
sbb
mov
xor
mov
dec
mov
pop
in
idivb
inc
and
xor
out
test
cmp
testb
and
xchg
add
pop
gs
dec
scas
test
test
imul
call
cmp
movl
decb
and
sbb
jns
aaa
std
inc
int
push
sub
xlat
insl
xchg
stos
pop
loopne
outsb
dec
or
ret
sbb
lcall
shl
dec
pusha
fsub
cmp
movsb
mov
add
pop
xor
xorb
xchg
test
and
pop
iret
icebp
mov
imul
in
les
adc
ss
sbb
stos
dec
repnz
out
push
mov
scas
fiadds
xlat
leave
xchg
popf
out
adc
or
and
faddl
rcl
popf
cs
and
fwait
pushf
sbb
cmp
out
jbe
std
fbld
ljmp
push
adc
mov
adc
or
mov
ljmp
adc
or
arpl
mov
bound
cmp
jle
fcmovnb
jg
dec
push
idivl
lret
and
movsb
cwtl
out
in
cli
dec
dec
fbstp
xchg
jecxz
jae
movsl
sbb
push
outsb
pop
mov
push
pop
xorl
iret
fisubrl
pushf
gs
sbb
divl
inc
stos
jp
cmp
and
mov
scas
jg
adc
int3
sbb
add
or
push
ja
fstps
pop
xor
push
jb
stos
cmpsb
out
jge
cmp
mov
insl
aam
movl
sub
test
movsb
and
cmpsl
divl
scas
lret
xor
leave
mov
pop
popa
filds
jp
push
pop
int
add
and
pop
mov
mov
shr
pop
mov
sahf
mov
rcrl
mov
sahf
mov
sub
add
aam
dec
loopne
imul
popf
repnz
roll
test
dec
mov
cmp
pop
xor
shrb
pop
inc
clc
or
lret
subl
dec
inc
pusha
adc
test
rorl
sbb
cmpsb
cli
cltd
xchg
shr
jmp
movsb
and
xchg
shlb
jl
push
mov
push
inc
daa
imul
into
mov
insl
cmp
sub
nop
shlb
inc
and
mov
xchg
nop
mov
pop
stos
in
pop
rcl
mov
aad
out
nop
dec
movsl
pop
dec
stc
lds
popf
shll
pushf
pop
addb
adc
pop
jno
fs
cmp
movb
jo
dec
lds
push
icebp
push
push
pop
xor
cmp
mov
sbb
xchg
mov
cmp
mov
std
dec
pop
insl
test
cld
scas
mov
add
sbb
lahf
loopne
rorb
cmp
adc
in
mov
sbb
aad
jmp
xchg
pusha
or
add
pop
jae
aam
jno
inc
mov
sub
hlt
or
fmuls
mov
pusha
dec
mov
push
sbb
jle
and
dec
clc
and
sbb
mov
dec
cltd
add
loope
fs
in
stc
push
call
data16
movsl
xor
fnstsw
stc
in
xor
jmp
fidivrs
ror
mov
jecxz
add
cmpsl
inc
fsubrs
ret
sbb
cs
flds
or
in
test
xchg
or
fadds
push
push
push
scas
imul
imul
rorl
sbb
sahf
test
int
and
mov
addr16
negl
mov
jne
cwtl
or
dec
daa
push
and
xlat
push
in
pusha
add
aam
rcrb
adc
imull
es
aad
stos
sub
loopne
mov
call
push
gs
mov
lods
adc
mov
jecxz
and
mov
adc
mov
scas
pop
xor
and
mov
nop
add
add
mov
adc
jns
popa
mov
push
adc
jmp
mov
ss
jns
cmp
idiv
mov
insl
popf
test
das
hlt
sbb
in
daa
lahf
or
ljmp
or
ss
out
mov
sahf
rcr
sub
movsb
icebp
adc
inc
pop
mov
fstpl
and
loopne
jle
inc
push
jp
movl
cmpsl
sub
nop
inc
mov
sbb
gs
dec
in
rol
xor
xchg
and
adc
sbb
adc
jb
icebp
sub
aam
daa
xchg
push
adc
mov
out
mov
outsb
jnp
popa
js
scas
mov
adc
push
lret
int
imul
test
jecxz
push
stos
sbb
jne
mov
jbe
fisubs
or
or
rclb
cmp
pop
xchg
lods
adc
out
sbb
pop
mov
or
dec
sbb
pop
cltd
fisttps
scas
push
outsb
divl
push
fisubl
outsl
inc
or
mov
sbb
push
push
cmp
dec
inc
pushl
and
xlat
jb
loope
test
jnp
mov
ss
adc
icebp
cmpsl
pop
dec
insb
mov
dec
xor
pop
cwtl
aas
sbb
mov
das
cmp
stos
mov
push
imul
mov
and
adc
adc
clc
jo
inc
daa
sbb
sbb
and
in
hlt
aam
cmp
fisttpl
pop
mov
fldl
pop
cmp
xor
jbe
ss
push
js
mov
xchg
addr16
daa
es
int
push
popa
or
pop
imul
jle
cli
mov
sub
int3
scas
lcall
lret
notl
add
sub
cld
lods
add
jo
xchg
nop
shll
aas
and
or
dec
pop
in
pop
inc
add
gs
sub
xchg
add
test
fld
rolb
test
mov
or
movl
pop
sbb
fwait
lret
lds
push
xchg
frstor
push
pop
sub
dec
jae
sbb
les
sub
add
xor
mov
mov
inc
mov
xor
in
jbe
push
fnstsw
pop
hlt
xchg
loop
jp
dec
fmull
jle
cmc
push
adc
cmp
mov
pop
sub
lock
cmp
lahf
sahf
mov
or
cmp
inc
idiv
sbb
lods
movsl
xchg
cmp
xor
dec
loope
sub
or
xchg
mov
jae
cmp
inc
or
xchg
pop
pop
sbbb
sahf
sub
mov
xchg
imul
mov
inc
jo
iret
rorl
jb
push
inc
add
add
test
inc
mov
out
adc
xchg
cmpsl
dec
cmpsb
push
and
pop
inc
push
sbb
fcmovb
in
mov
or
jbe
push
ret
adc
mov
push
in
inc
sahf
or
mov
int3
jne
loope
lock
pop
mov
ljmp
jb
repnz
jecxz
aaa
mov
jne
mov
lock
iret
push
dec
jecxz
outsl
cmp
mov
jge
mov
test
add
int3
jo
xlat
adc
sbb
mov
shlb
xchg
aam
pop
test
sub
daa
mov
lock
decb
out
pop
sub
sbb
mov
adc
hlt
and
pop
pop
push
and
mov
jp
mov
sub
in
xchg
push
sbb
js
fildll
inc
lret
out
dec
push
xchg
xchg
sub
bound
insb
out
mov
jge
and
mov
in
push
dec
inc
daa
out
das
jbe
and
ffreep
add
mov
lret
dec
add
add
dec
movlps
ret
adc
sbb
mov
addr16
push
mov
popf
jg
and
and
xor
push
dec
movl
cmp
dec
out
mov
cmp
inc
xor
cmp
mov
xor
scas
cmova
xor
mov
sub
out
shlb
add
push
pop
jg
adc
cmp
jmp
dec
dec
jecxz
fucomp
pop
dec
xlat
inc
loope
push
pop
gs
or
ds
mov
lret
xchg
push
xorl
or
icebp
pop
cmovp
xor
cmp
ja
popa
rcll
incb
dec
xor
ror
xor
cmp
push
dec
vpcmpgtd
test
pop
in
sub
jo
push
dec
loop
int3
and
and
mov
mov
add
xchg
push
fiadds
jno
hlt
jb
lcall
ljmp
dec
add
es
sti
idiv
push
inc
mov
cld
ficoms
iret
test
lods
ljmp
imul
movsl
scas
push
ret
cmp
add
mov
ja
xchg
mov
mov
cmpsl
xlat
pop
push
out
jne
mov
in
jl
jbe
das
cmpb
push
xlat
into
inc
movl
inc
icebp
jbe
imul
add
push
cwtl
dec
jecxz
rcrb
aam
xchg
mov
jnp
dec
fs
pop
movsb
or
shll
aam
pop
xchg
test
push
pop
add
out
leave
fcomp
mov
xchg
lods
loopne
aaa
out
xchg
pop
arpl
push
push
pop
inc
test
dec
xor
sbb
ret
movl
cmpb
push
dec
add
ret
lgs
inc
pop
mov
stos
dec
push
xorl
push
daa
test
jo
xor
dec
decb
add
out
jbe
outsb
mov
and
inc
or
call
mov
inc
faddp
lret
or
xchg
vpmuludq
pusha
push
mov
ss
icebp
insw
sbb
pop
das
xchg
and
subb
jo
lret
mov
push
movl
push
repnz
inc
idivl
mov
je
push
push
fildll
cmpsl
roll
xchg
inc
lds
repz
sub
xchg
xor
rorl
xchg
add
in
jo
dec
inc
and
mov
pop
pop
or
pusha
xor
and
sbb
sbb
nop
mov
jae
fs
add
mov
xor
aas
push
repz
call
lods
test
fld
mov
pushf
mov
dec
xor
mov
adc
cwtl
jg
mov
xchg
cmp
sub
inc
ljmp
push
repz
adc
test
faddl
jno
mov
dec
adc
dec
outsl
ret
out
adc
or
jl
dec
add
mov
push
adc
push
push
sub
pop
push
in
sub
aaa
jno
push
xchg
push
arpl
jecxz
lcall
das
repnz
mov
or
push
and
sub
pop
or
adc
pop
and
mov
jnp
mov
mov
dec
cmp
inc
xchg
mov
sbb
or
jge
andl
ret
or
mov
jle
cmp
loope
add
pushl
jmp
lock
sbb
push
in
test
cmpsl
popf
les
mov
jns
and
mov
xchg
push
loopne
daa
in
inc
cli
add
push
add
sbb
enter
mov
addr16
stos
adc
aaa
jge
jg
pop
mov
jne
fs
push
fsubr
and
daa
leave
push
mov
push
orl
mov
inc
mov
sbb
mov
mov
jg
dec
sbb
daa
movsb
mov
cmc
mov
xchg
ret
fmuls
adc
mov
mov
push
in
outsb
jb
cmp
xchg
add
scas
xchg
jbe
xor
dec
mov
xchg
add
or
or
or
ljmp
stos
sbb
aaa
and
push
add
pop
mov
filds
bound
sbb
push
pop
std
in
stc
jmp
add
cmp
cmp
mov
sbb
mov
jo
aaa
inc
nop
in
push
add
arpl
hlt
or
mov
jb
lock
sbb
add
or
stc
movsb
aad
push
out
dec
icebp
sbb
dec
fnstcw
mov
mov
add
pop
mov
jecxz
inc
in
and
jae
call
mov
js
cmpsb
inc
add
push
and
mov
hlt
and
inc
or
outsb
cmp
xchg
adc
mov
jmp
lahf
movsb
mov
or
cld
les
inc
sbb
rep
jmp
jmp
mov
dec
push
fimuls
pop
loope
out
cmp
aam
lock
sub
mov
or
and
movsb
dec
dec
mov
push
jb
add
adc
movl
outsl
mov
cli
mov
cmp
movl
mov
adc
cs
insl
add
insb
in
fildll
rorl
dec
aam
inc
jmp
or
ret
or
mov
daa
rorl
out
sbb
pop
sub
xlat
or
je
movsl
add
inc
aaa
mov
mov
pop
or
les
dec
sarl
xor
rcll
adc
fwait
loop
das
scas
test
pop
xchg
cld
mov
push
popa
mov
xor
out
icebp
mov
insb
outsb
jbe
int3
jmp
out
adc
sub
lret
stos
addr16
mov
test
jno
sub
test
stos
pop
in
scas
outsb
jecxz
cli
in
icebp
test
push
test
sbb
in
ret
pop
sub
lods
xchg
hlt
sahf
jmp
in
aam
xor
outsb
dec
imul
pop
add
mov
ss
and
sub
subl
jg
rep
jmp
xor
sub
jg
and
shlb
jb
and
and
xchg
add
cmpsl
push
inc
movl
mov
nop
ss
adc
imul
inc
pop
mov
add
xor
mov
mov
mov
dec
add
sti
push
jg
in
mov
cmpsb
xchg
mov
sar
mov
cmpsl
or
push
inc
lock
daa
mov
push
mov
in
in
out
fsubrs
cmp
jbe
mov
xchg
incl
inc
jecxz
add
xchg
pop
and
sahf
jp
inc
icebp
xchg
fs
aaa
adc
clc
bound
xor
jbe
pusha
out
add
sub
xlat
xchg
sarl
call
cmc
dec
and
and
inc
adc
mov
mov
xbegin
cli
fwait
add
imul
jle
sub
ljmp
sbb
xchg
inc
test
js
in
xor
ljmp
ss
xor
sub
rcr
mov
lahf
sbb
fdivrl
ljmp
inc
and
cmpsb
jbe
sarl
mov
test
sub
mov
ret
and
repnz
pop
xchg
cs
sbb
or
fildl
xor
aam
sbb
push
ljmp
add
pusha
bnd
dec
int
sbb
jne
xor
push
es
sti
mov
out
pop
mov
adc
insl
mov
dec
fists
pop
les
int3
aaa
pop
jp
lcall
cmp
scas
mov
pop
and
outsl
jle
cmp
fldl
xchg
insb
pop
in
movl
inc
lcall
xchg
aas
mov
nop
fildl
mov
xchg
push
out
fwait
jo
scas
push
mov
outsl
lds
in
add
mov
and
jbe
data16
sub
insb
stos
adc
movl
fistps
cli
outsb
jnp
movsb
jg
cmpsb
mov
in
xchg
daa
bound
push
nop
mov
mov
adc
and
decb
out
pop
mov
xchg
jmp
or
push
push
inc
push
pop
outsb
aas
iret
into
push
mov
shlb
xor
or
into
repz
sub
pushf
sub
inc
imul
xchg
sbb
das
adc
dec
or
xor
mov
cmp
mov
das
fldcw
lock
out
js
or
bound
cmp
imul
cmp
pop
movl
inc
pop
ss
inc
xor
fisttpl
mov
mov
cmpsb
nop
call
push
cmp
rclb
mov
dec
mov
sti
insb
aaa
jle,pt
test
pop
lahf
push
clc
pusha
push
outsl
es
imul
or
int
sti
pop
dec
pop
hlt
push
adc
jae
xlat
jo
push
loop
adc
mov
mov
aam
inc
pushf
andl
cltd
mov
inc
jecxz
sub
das
add
jl
fadd
adc
and
jo
add
xchg
loop
je
mov
adc
mov
push
jno
stc
ss
mov
mov
das
das
adc
pop
push
jbe
addb
fs
dec
ret
adc
xor
int
push
push
sbb
inc
rcll
scas
out
outsl
sarl
push
sahf
and
push
je
inc
repz
and
push
fmull
test
pop
imul
fwait
mov
add
imul
movsl
cmp
pop
sbb
mov
jp
fnstsw
dec
stos
fdivp
lea
xchg
push
test
adc
mov
cmp
add
movl
cmp
hlt
fs
inc
cld
and
aaa
mov
psadbw
xor
outsb
inc
int3
push
jb
imul
xchg
movl
and
loope
xchg
adc
mov
inc
fwait
mov
lret
sub
and
test
mov
aam
sarb
mov
dec
adc
xchg
adc
add
call
int
leave
dec
mov
adc
icebp
je
repz
cmp
xor
adc
ret
mov
xlat
cmp
and
cmp
mov
or
cmp
jns
sbb
movsb
jne
mov
jmp
sub
rcrl
mov
pop
cmp
dec
dec
mov
add
pextrw
add
test
mov
addr16
jecxz
mov
lods
xor
push
mov
or
ret
fsubr
mov
out
jl
add
daa
in
ljmp
into
push
sbb
je
sbb
push
adc
cmp
insb
mov
cltd
inc
mov
gs
mov
inc
daa
cmp
mov
into
cmc
in
leave
xchg
pop
or
nop
lods
movl
in
mov
sub
data16
movl
or
out
movl
or
popa
in
jp
mov
hlt
mov
sub
out
aam
loope
cmp
pop
dec
cmp
adc
ds
sarl
xlat
rcrb
mov
loope
daa
mov
lds
sbb
shll
xor
jo
push
clc
push
and
incl
xor
jecxz
or
push
mov
push
xchg
ljmp
lods
cmp
lods
push
jbe
fsts
mov
mov
adc
movsb
das
jnp
fwait
test
inc
orl
clc
pop
push
out
sub
jmp
or
fnsave
cmpsb
cmp
xlat
dec
cs
xchg
in
incb
jecxz
push
pop
pop
cs
sbb
mov
inc
sub
ss
xlat
xchg
fs
and
cmp
sbb
jle
dec
push
or
xchg
inc
daa
adc
aaa
push
jecxz
xor
cmp
fstl
daa
cmp
and
dec
movl
mov
jb
push
sbb
sbb
inc
cmp
fnsave
push
cmp
or
xbegin
adc
mov
mov
pop
jl
inc
lahf
clc
test
rolb
or
push
and
sbb
adc
jecxz
cli
jns
xlat
aad
pop
jle
dec
dec
mov
or
mov
xchg
xor
dec
sbb
lahf
jl
push
or
dec
stos
pop
cli
daa
xchg
mov
mov
fnstcw
jecxz
lret
neg
ss
jp
jle
lock
add
mov
int
test
notl
sub
xchg
adc
mov
mov
push
or
mov
inc
outsl
and
or
xchg
jo
rclb
rolb
shll
inc
dec
sarl
sub
push
jg
fstpt
rcll
adc
rolb
vaddsubps
cli
aaa
cmc
jl
cmp
xor
shlb
pop
pop
mov
leave
or
test
push
cwtl
add
and
fiaddl
push
pop
fisttpll
scas
dec
shl
xor
jb
shlw
pop
cmp
jecxz
movl
arpl
dec
xor
cltd
push
aam
je
jecxz,pn
push
roll
daa
jne
mov
mov
add
sahf
mov
fcomi
clc
dec
test
push
jg
mov
enter
mov
adc
lds
adc
imul
inc
arpl
popa
cmp
xor
pop
and
mov
sub
cli
daa
fs
test
jo
mov
hlt
mov
ret
xchg
inc
sub
add
xchg
mov
out
sbbb
or
push
jg
cld
stos
movl
mov
out
hlt
or
jg
test
lret
add
dec
xchg
mov
jno
push
mov
imul
add
cmp
jbe
inc
add
xchg
imul
dec
loope
sbb
cwtl
rcr
mov
or
xor
mov
fadd
jb
push
bound
lock
sub
inc
jno
xchg
sbb
xchg
push
mov
stos
dec
aas
cld
cmp
daa
mov
mov
idivb
mov
and
les
push
popa
bnd
rcr
add
jbe
pop
push
stc
sbb
pop
pop
lcall
stos
push
lods
imul
pop
mov
adc
cmp
jp
aam
xor
pop
ja
mov
jb
inc
jbe
adc
xlat
movsb
dec
cmp
mov
xchg
mov
push
outsb
pop
or
dec
xchg
shrb
pop
addb
push
movsb
pop
jnp
dec
ja
jno
sbb
mov
jg
addr16
ds
mov
cli
les
hlt
fldenv
lods
push
push
or
add
pop
clc
and
out
sbb
movl
repz
mov
das
jle
aaa
cmpsb
jne
inc
out
mov
fidivs
jge
insl
or
mov
mov
mov
lret
jmp
shll
insb
inc
add
jmp
aam
arpl
mov
movl
xor
and
inc
add
xchg
outsb
push
loopne
jae
mov
inc
mov
out
push
or
mov
xor
lahf
out
mov
jmp
dec
lds
sbb
fsubl
inc
movsb
test
out
pop
test
lods
pop
mov
daa
stos
pop
lahf
addr16
cmpl
and
test
add
xlat
in
insb
xchg
dec
cmp
stos
jo
mov
mov
inc
psraw
mov
jecxz
stc
or
add
inc
mov
inc
test
mov
orl
out
and
push
in
test
es
mov
push
xor
hlt
ja
adc
inc
jmp
aaa
jnp
pop
jl
and
pop
and
cmp
clc
inc
xor
xchg
or
daa
outsl
das
sbb
mov
insb
notb
push
fistl
das
jb
inc
mov
iret
lret
out
xor
icebp
fnsave
sub
repnz
sarb
xchg
rcll
xchg
repz
mov
mov
adc
ret
push
mov
mov
stos
fldenv
jno
leave
icebp
jle
js
rolb
dec
xchg
movl
inc
sahf
mov
cmpsl
ljmp
add
add
lahf
push
shrl
in
xor
fisubs
pushf
adc
and
cli
and
jb
lcall
fcmovnb
inc
mov
add
pop
loope
inc
dec
adc
cmp
xchg
out
jmp
cmpb
mov
mov
hlt
jl
andl
ret
test
loope
js
je
rcll
ljmp
or
inc
adc
ror
sti
pop
inc
push
fldl
cmp
sbb
pop
pop
cmp
imul
adc
dec
fwait
stos
pop
mov
flds
pop
movsb
push
lds
jne
cwtl
xchg
in
hlt
cltd
fistl
jmp
dec
pop
xchg
lahf
xchg
mov
xor
pop
dec
xor
sub
push
adc
shrb
xchg
int3
into
sbbl
cmpsl
ret
sbbb
mov
jg
xor
test
sub
and
std
mov
daa
daa
pop
jp
add
outsl
mov
insl
data16
dec
push
scas
test
xchg
and
add
and
and
jb
pop
sahf
mov
imul
mov
jg
aas
push
lods
mov
inc
mov
and
xlat
hlt
pushf
nop
sbb
mov
int3
out
in
xchg
pop
inc
cmp
ret
shrl
sbb
ja
out
cmp
push
jge
out
inc
jl
add
fistl
ja
jnp
cmp
in
pop
dec
out
sub
icebp
dec
adc
jp
mov
imul
imul
mov
lret
xor
push
pusha
insb
ret
mov
cmp
insl
mov
mov
in
das
nop
inc
or
punpcklbw
cmp
sbb
imul
call
rcl
fistpl
pop
add
inc
imul
int3
mov
pop
in
out
cmpsb
hlt
cmp
xchg
xchg
sbb
or
xchg
pop
dec
jge
sub
jg
std
push
lods
ljmp
sbb
mov
shlb
sbb
testl
shlb
lret
gs
scas
fisubrs
xchg
sub
cli
je
adc
jle
popf
push
sub
and
add
cld
xchg
aad
hlt
test
mov
mov
jg
pop
ljmp
movsb
outsb
inc
bound
sarb
inc
jno
mov
clc
jbe
loop
add
add
cmpsb
and
mov
cwtl
jbe
pusha
sbb
inc
sub
add
cmp
imul
dec
sbb
xchg
mov
arpl
idivb
or
mov
popa
scas
mov
shlb
push
sub
sar
mulb
xchg
in
into
xor
jp
addr16
stos
sub
and
add
jmp
repz
in
xor
and
inc
mov
inc
insb
cmpsb
cli
pop
adc
sbb
inc
jmp
dec
mov
cmp
mov
sub
push
mov
sbb
mov
fists
pop
xlat
cwtl
xchg
fbld
mov
ret
addr16
inc
cld
repnz
and
dec
in
cli
testl
or
lcall
loope
pop
jns
sar
gs
pop
scas
aas
push
rol
mov
sub
push
jmp
hlt
rorb
movsb
cmp
mov
xchg
jle
xchg
mov
inc
push
mov
cmpb
faddl
cmpsl
pop
repz
and
push
mov
or
or
sbb
test
sbb
scas
xor
leave
add
push
add
ficoml
xchg
out
or
push
mov
std
shll
stos
add
js
mov
or
jecxz
fldt
clc
jno
ret
push
divl
ret
or
add
jbe
ljmp
xchg
sbb
pop
add
shlb
addr16
or
inc
mov
pop
inc
mov
xchg
mov
stos
pop
out
mov
icebp
dec
popl
js
push
aas
sbb
inc
inc
adc
adc
lret
in
sbb
insb
outsl
push
push
cmpl
std
mov
add
ja
dec
addl
inc
hlt
sub
xchg
sbb
jae
push
lods
movl
and
fwait
jge
in
jb
mov
inc
loope
pop
xor
jecxz
in
pop
adc
mov
adc
sub
mov
std
mov
mov
popa
cmp
sub
into
adc
inc
xor
xor
movsl
inc
sbb
gs
xor
and
dec
test
mov
sbb
cmpsl
xlat
sbb
adc
out
iret
push
out
xor
mov
xchg
sbb
fdiv
push
xor
inc
fwait
or
popf
lret
pop
mov
add
xchg
push
jo
in
cwtl
mov
jecxz
std
inc
imul
push
and
stos
jb
mov
mov
add
jo
xchg
je
daa
test
push
cmc
sub
ret
iret
add
cmp
xor
std
add
lahf
sti
sub
je
xchg
in
cs
mov
insl
sub
testl
cmc
mov
loop
mov
shl
pop
xchg
mov
jle
int3
push
jmp
bound
fiaddl
mov
outsl
ret
cs
cltd
mov
shrl
jmp
dec
pop
not
and
or
dec
fnstenv
jmp
lds
adc
out
imul
out
aam
or
pop
mov
add
lea
out
push
incl
aad
iret
fldcw
push
sbb
imul
dec
mov
pop
push
call
sti
adc
or
mov
clc
inc
push
stc
push
mov
into
and
xchg
jmp
push
push
push
in
lds
sbb
jge
mov
je
out
testw
mov
das
push
mov
ss
pop
out
outsl
mov
mov
jo
sbb
orl
les
add
sub
sti
dec
inc
lret
pop
sbb
mov
insl
into
xchg
ja
scas
add
sub
push
movsb
and
pop
test
mov
jne
and
xchg
sbb
or
insb
sbb
rcl
mov
mov
mov
xchg
js
pop
outsl
loop
xor
sbb
jbe
lea
lcall
shl
sbb
mov
xchg
jp
mov
cmp
sti
or
mov
cli
add
xchg
fldcw
dec
cmp
sub
and
sub
stos
mov
notl
mov
cmp
dec
sub
call
in
lea
xor
pop
das
xchg
stc
and
out
sti
fdivrs
mov
imulb
add
mov
pop
shll
aas
mov
mov
pop
xor
jecxz
or
out
pop
stos
jmp
aas
xchg
pop
mov
cwtl
rolb
sarb
divb
pop
test
addr16
out
sub
mov
divl
aas
scas
test
ret
adc
and
sub
call
sbb
cmp
mov
dec
dec
into
in
insl
jmp
in
ja
push
addr16
pop
push
jb
xchg
push
sub
mov
cmp
outsl
les
push
dec
cwtl
movsl
rcrb
dec
cmp
mov
fstpt
xor
jo
mul
jmp
test
xchg
push
or
mov
jecxz
ja
jg
in
sbb
cld
fsubrl
inc
jns
mov
mov
data16
xchg
xchg
mov
inc
xor
sbb
cmpsl
and
fcom
jp
aam
insb
mov
mov
jecxz
jle
jl
movsl
cmp
sub
icebp
xchg
js
or
cmp
adc
pushf
jge
lret
icebp
repz
xor
pop
jle
push
mov
cld
sbb
jne
push
jo
xchg
ljmp
pop
jmp
cmpb
sub
mov
dec
inc
and
fistpl
stos
fidivs
jae
cmp
push
test
inc
in
shll
pop
sbb
cmp
addr16
cmpl
jp
add
call
or
xlat
inc
sub
adc
xor
subl
mov
add
mov
ret
call
sbb
insb
pop
sub
dec
sbb
mov
in
rolb
xor
nop
rol
sahf
push
push
add
movsb
lret
mov
pusha
psubd
sahf
pop
std
fwait
cltd
lock
loop
lahf
mov
addr16
pop
fs
sub
mov
in
lret
cmp
jnp
dec
jge
xchg
and
arpl
ret
out
or
pop
push
test
xchg
inc
mov
add
dec
and
fsubr
or
add
dec
xor
cmp
adc
cltd
aas
out
in
out
or
xor
ret
lcall
jae
push
ja
push
lret
out
jmp
sbb
movl
cmp
push
xor
jp
push
push
push
or
mov
jmp
add
lahf
outsl
movl
shlb
xor
nop
and
clc
adc
xchg
fsubrs
popa
out
gs
iret
sbb
mov
cwtl
aas
rcll
mov
or
call
pop
ret
bound
out
insb
xchg
xchg
test
imul
ss
jmp
mov
mov
and
lock
repz
jbe
adc
mov
cld
pusha
and
imul
popa
lock
fildll
clc
dec
xchg
and
mov
insb
adc
test
inc
pop
hlt
test
and
lret
dec
sub
aad
iret
pusha
mov
or
fsubr
in
call
out
gs
mov
fcmovnu
cwtl
fcoms
xchg
and
mov
fidivs
cli
inc
fbld
mov
mov
cmp
mov
jmp
adcl
and
scas
and
cmp
add
dec
mov
xchg
std
pop
cmp
sub
mov
and
nop
mov
pop
sub
in
rolb
into
cld
arpl
es
movsl
out
repz
adc
cmpsl
mov
ljmp
cltd
mov
lret
stc
push
fistpll
jmp
jno
loope
add
ret
les
add
mov
sahf
xor
gs
sub
test
mov
ss
imul
adc
jbe
int
clc
push
xor
or
add
repz
out
cmp
loop
lods
daa
cmp
cmpb
ret
pop
stos
add
test
mov
jb
out
and
ret
inc
push
lret
mov
and
sti
push
jno
xchg
inc
mov
pop
xbegin
sbb
sub
gs
scas
mov
jae
ljmp
leave
inc
mov
jg
cwtl
cmp
loopne
movl
sbb
add
imul
push
leave
adc
inc
loop
pusha
mov
pop
ja
push
xor
das
cmp
add
jg
jecxz
sbb
subl
and
mov
cmp
pop
inc
iret
push
xor
sbb
mov
jmp
cmp
fisubrl
jae
addr16
outsb
xorl
mov
in
and
loopne
dec
or
inc
jecxz
pop
dec
cmp
cld
lods
dec
lcall
and
adc
cmp
xlat
in
out
fisttpll
cmp
push
jbe
xchg
pop
pushf
add
jmp
cld
js
stos
xchg
in
in
outsb
sahf
and
inc
xchg
arpl
leave
and
and
mov
je
add
popl
movl
and
push
pop
outsl
ja
dec
mov
dec
push
sbb
cs
stc
test
adc
cmp
inc
lods
stos
jmp
jno
cltd
sarl
outsl
and
insb
inc
call
mov
in
fadd
adc
scas
adc
mov
pushf
sbb
ror
add
loopne
pusha
and
xchg
ret
xor
outsb
in
mov
repz
bound
mov
fwait
push
cmpsl
and
aaa
and
out
inc
xchg
popa
inc
cs
and
mov
mov
xlat
mov
js
push
test
mov
adc
pop
les
test
andb
mov
mov
sbb
cli
xchg
adc
scas
enter
es
and
add
ljmp
jbe
mov
fsubrl
cmp
xor
jle
xor
or
jp
lods
xor
movl
rol
add
xor
fimuls
jb
and
xchg
call
rolb
scas
push
mov
cmpl
jle
js
test
inc
sbb
sbb
push
push
fadd
data16
add
xor
sub
dec
dec
dec
outsb
inc
nop
loopne
nop
lods
jbe
fs
sub
sbb
push
mov
imul
or
push
stos
mov
add
test
adc
aad
dec
pop
movl
test
push
push
in
fisttpll
testb
adc
mov
dec
mov
lods
jmp
pushf
aaa
xor
popf
test
add
int3
ljmp
pusha
lret
xchg
es
push
and
insl
ret
mov
add
andl
and
pop
push
and
das
pop
pop
les
idivl
fiaddl
scas
or
call
or
aam
or
dec
mov
into
sahf
in
pop
scas
aas
aam
xchg
mov
rolb
cli
mov
sbb
mov
and
sbb
jb
or
test
icebp
mov
adc
in
outsl
cli
aad
dec
xchg
xchg
mov
cltd
mov
sub
sysexit
and
mov
jne
iret
test
dec
add
mov
push
dec
es
xor
dec
cltd
inc
stc
cmp
and
fisubrs
or
sbb
fs
push
push
mov
adc
and
sbb
jno
push
adc
test
push
pop
pop
outsb
sub
push
jmp
fwait
test
sbb
ljmp
jne
push
and
jp
dec
out
sti
cmp
pop
adc
mov
sbb
les
adc
fstps
cwtl
dec
test
jle
das
mov
mov
lods
into
mov
sub
lods
sahf
mov
movsb
cwtl
das
lret
inc
add
loope
sbb
pop
pop
mov
call
pop
insl
addr16
push
pop
dec
int3
push
add
adc
stc
in
dec
xchg
mov
and
mov
shlb
sbb
into
or
imul
repnz
icebp
or
cmp
mov
inc
stc
pop
xchg
mov
or
push
jl
xor
inc
and
jns
add
xor
dec
notb
cs
psllw
popa
mov
jo
xchg
adc
leave
and
adcl
pop
mov
sbb
jne
ret
mov
fisubrl
dec
inc
xor
lret
daa
shrb
inc
inc
fdivrs
cld
test
pop
insl
and
and
sub
pushf
call
cmpsb
push
cmp
adcl
jne
adcb
repnz
dec
mov
xor
cmp
fs
push
jo
mov
loope
and
pop
movsb
test
dec
cmp
aas
scas
mov
dec
stos
or
mov
scas
and
mov
jecxz
xor
jecxz
and
in
stos
push
dec
fdivp
cltd
pusha
sub
jecxz
dec
adc
test
data16
cmp
push
add
mov
aam
push
out
jl
mov
xchg
cs
cmp
insl
mov
xor
stos
or
lods
xchg
mov
jae
in
scas
lock
xor
je
pusha
pop
xchg
mov
mov
test
mov
inc
into
leave
lret
int3
mov
cmp
addr16
fwait
or
lret
pop
jne
fisttpl
mov
and
popf
mov
dec
cmp
mov
repz
int
fcmovnb
xchg
das
stc
push
cwtl
shl
cli
inc
inc
mov
push
or
mov
int
pop
out
outsl
fildl
jmp
out
cmp
lds
mov
int3
and
or
and
imul
dec
aaa
mov
or
push
in
ret
add
dec
jo
dec
sarb
movsb
scas
adc
outsb
aad
test
xchg
call
popa
push
and
mov
jl
repnz
outsl
push
fwait
cmpsl
fsub
jmp
fildll
shll
adc
push
lds
inc
ret
add
and
inc
push
inc
das
jmp
loop
xor
rcrl
das
js
fisubs
xor
testb
add
add
push
movsl
dec
out
cmpsb
sub
outsb
jmp
jmp
lods
hlt
add
dec
xchg
mov
jbe
leave
jle
aaa
xchg
shll
xor
les
cmpsl
gs
add
push
dec
pop
dec
arpl
icebp
pop
shrb
cmp
or
add
lock
daa
xchg
das
sbb
and
mov
dec
jae
add
pop
cmp
push
xchg
arpl
out
dec
movsb
inc
shlb
out
and
jecxz
jge
inc
fidivl
movl
in
inc
js
ljmp
pop
lods
jno
mov
pushf
mov
or
aad
fmuls
push
push
dec
pushl
cmpb
mov
ljmp
lcall
std
mov
jp
fcmovb
ss
cld
call
dec
push
dec
add
loope
push
mov
leave
xchg
mov
sub
xchg
mov
mov
pop
pop
and
std
add
inc
adc
cmp
rol
cmpsl
leave
ljmp
mov
push
mov
dec
mov
leave
lock
lds
adc
mov
and
mov
or
cmp
push
mov
adc
movl
add
int
fs
sub
out
ficomps
out
mov
cmpsb
mov
or
ss
cmpsl
pop
xor
aam
mov
aaa
add
scas
or
cld
add
mov
xchg
adc
stos
jg
data16
xchg
les
shll
jmp
test
aad
pop
scas
rclb
xlat
scas
test
or
in
dec
lods
inc
xor
and
fimull
hlt
mov
sbb
je
add
cmp
lret
push
cmp
xor
lret
jmp
test
outsl
lcall
lret
dec
cs
jmp
dec
or
jb
mov
hlt
and
es
or
movsb
shl
dec
outsl
bound
cltd
rep
rol
sub
adc
mov
push
rol
lock
imul
push
orl
mov
dec
imul
cmp
mov
sarb
pop
jp
aad
imul
mov
add
fimull
and
clc
cli
xor
add
adc
fldt
popa
inc
aaa
scas
sbb
cmp
aas
dec
or
icebp
es
and
das
or
ds
xor
imul
mov
sbb
pop
xchg
sub
add
fs
scas
push
nop
jge
and
or
std
aaa
subb
mov
pushf
push
fldcw
rclb
inc
movsl
mov
mov
mov
mov
ja
inc
xor
xchg
or
dec
mov
sub
cld
add
test
imul
out
scas
pop
scas
out
and
or
and
pushf
fwait
stos
push
out
pop
das
dec
shrb
xchg
sub
mov
or
ffreep
dec
mov
pop
decl
mov
inc
sbb
in
int3
dec
test
cmpsl
in
pusha
mov
mov
cmp
pop
push
mov
mov
mov
stos
inc
sti
and
xor
clc
movl
movsl
xchg
jns
lcall
fs
pop
sti
icebp
or
inc
jo
push
pop
cmp
jmp
inc
inc
and
cmp
mov
les
cmp
jno
nop
mov
xchg
jl
xchg
xchg
insl
mov
enter
mov
mov
pushf
test
sarb
enter
jge
mov
mov
mov
mov
out
daa
frstor
out
lret
mov
xor
aad
mov
jge
mov
mov
int3
lods
pop
lahf
mov
enter
rol
out
cmp
jl
push
mov
cwtl
pop
aas
pop
in
jns
pop
flds
or
push
in
sub
test
pop
div
xorl
add
mov
mov
call
mov
pop
sbb
mov
mov
lds
dec
fistpl
or
adc
mov
mov
shrb
jnp
loop
lds
mulb
rcl
push
sbb
mov
daa
jae
lcall
outsb
mov
xor
push
cld
stos
mov
mov
test
call
mov
mov
cmc
repz
in
mov
mov
pop
mov
bound
jecxz
lret
lods
xchg
xor
sahf
or
jl
xchg
adc
add
pushf
push
adc
mov
rcl
jns
mov
jl
test
mov
push
jg
add
bnd
cmpsl
das
xorl
addl
cltd
lret
stc
mov
mov
cmp
xchg
mov
mov
stos
jnp
xchg
mov
pop
pop
mov
mov
mov
iret
es
nop
xchg
jns
shll
mov
mov
inc
out
stos
outsb
test
mov
mov
cmp
stos
data16
push
pop
je
stos
push
mov
mov
jge
mov
lcall
cld
lret
ror
cli
mov
mov
in
cmpl
cltd
lret
pop
xchg
aaa
xor
jbe
mov
rcrb
mov
leave
test
movsl
sbbb
aas
push
mov
cmpl
shlb
xchg
add
add
add
aam
aad
mov
lahf
mov
test
add
jae
jl
jge
xchg
clc
scas
mov
mov
stc
adc
loope
mov
mov
mov
lret
mov
inc
enter
stos
lcall
mov
or
outsl
scas
mov
mov
loopne
mov
pop
push
imul
mov
jg
cwtl
xchg
fyl2xp1
push
and
leave
ja
les
jne
mov
rcrl
mov
clc
and
aad
out
mov
mov
loopne
fistpll
lcall
hlt
scas
mov
lods
or
pop
xchg
cmp
mov
pushf
test
fdivrl
outsl
mov
inc
xchg
mov
adc
lods
stos
or
pop
mov
mov
mov
mov
inc
orps
inc
pusha
call
pop
cltd
mov
dec
mov
cmp
fadds
stos
aas
dec
dec
jge
mov
xchg
leave
sbb
push
syscall
sahf
add
aam
mov
xchg
loopne
loope
pop
inc
mov
pop
xchg
or
mov
movsb
mov
inc
mov
dec
jg
mov
imul
sar
scas
pop
mov
mov
rol
ret
mov
xor
add
jp
iret
leave
mov
or
nop
iret
mov
add
mov
mov
and
dec
lock
push
dec
sbb
cmp
mov
stos
movsl
mov
adc
cmp
inc
cmpsl
sub
cltd
pop
mov
mov
pop
mov
pop
jo
mov
insb
pop
iret
sub
stc
jns
fidivl
mov
cld
push
addl
imul
push
int
inc
stos
fnsave
and
enter
subb
repnz
cmp
mov
inc
mov
aas
mov
sbb
xchg
gs
pop
in
icebp
push
fnstsw
es
or
mov
and
in
lahf
gs
mov
or
iret
rorl
fisubl
into
fsubrl
fistl
mov
jp
push
or
pop
jp
mov
lods
aas
lret
sub
lahf
sub
insl
gs
mov
iret
int3
test
push
fidivrl
fistpll
fistpll
fcmove
mov
xor
fbstp
xlat
sbb
stos
mov
inc
cmp
jge
mov
pop
movsl
jg
push
or
fildl
fiadds
push
idiv
jnp
das
sub
jle
idivl
test
mov
iret
mov
pop
mov
aad
test
fisttpll
mov
dec
aad
mov
fwait
icebp
mov
and
lcall
cmp
out
sbb
out
mov
rcrb
int
dec
lds
sbb
sahf
mov
and
dec
mov
in
dec
arpl
mov
mov
inc
add
jmp
loopne
mov
fcmovnb
inc
add
test
fcmovu
stc
sbb
subb
mov
mov
stos
mov
shrb
sub
inc
jp
add
fcompl
decl
and
lcall
shrl
mov
iret
std
lods
add
stos
rcrl
add
mov
shlb
jns
dec
or
xchg
shlb
push
aas
lret
pop
dec
sbb
ret
fidivrl
add
mov
mov
filds
imul
xor
mov
sub
jnp
loop
jo
mov
mov
xchg
push
cmp
lods
sbb
xchg
cmp
fnstenv
je
xchg
cmp
lods
enter
lods
inc
add
mov
fidivl
mov
push
dec
mov
aas
push
mov
bound
mov
mov
mov
lods
jge
fsub
jnp
xchg
fidivrl
mov
std
adcb
push
iret
inc
out
jae
cmp
lods
cmp
nop
js
les
push
push
out
imul
iret
jns
push
sarl
dec
mov
xor
dec
inc
cmp
insl
into
dec
mov
mov
mov
fsubrs
mov
sub
inc
mov
mov
mov
mov
sbb
mov
push
mov
push
cli
test
push
stos
nop
lods
gs
stos
scas
sarb
andl
push
test
sarb
mov
cmpsl
pusha
mov
jno
lods
out
dec
adc
or
test
inc
push
fidivs
rorl
mov
out
cmp
xchg
cld
or
mov
sub
fdivrl
cli
scas
imul
leave
mov
inc
lods
inc
or
loope
ffree
loopne
rcl
lret
into
int
iret
addb
jg
jno
imul
mov
fwait
sahf
popf
fadds
mov
lea
and
mov
pop
pop
inc
and
and
and
scas
cmp
sbb
or
in
out
jg
ficoms
sahf
xchg
and
rol
out
leave
lods
nop
cmp
lock
rcrb
stos
jns
and
lock
int3
imul
in
and
and
and
and
out
sbb
dec
and
hlt
sbb
mov
fmuls
punpcklbw
adc
push
xchg
out
aad
insl
std
outsl
sbb
hlt
push
inc
lods
stos
xor
and
jno
stos
jb
lods
movsl
jp
jecxz
or
mov
mov
and
movl
fwait
xchg
dec
scas
fs
arpl
fimull
les
jmp
jge
xchg
and
push
cli
mov
xor
inc
or
xor
jno
and
jmp
fsts
out
mov
mov
imul
and
add
and
add
fadd
dec
adc
sbb
outsl
add
das
xchg
sbb
jno
mov
sub
xchg
shll
sbb
sahf
in
loope
and
xor
sbb
test
push
lahf
shl
out
cmp
lock
mov
push
adc
inc
call
mov
jb
sti
xchg
out
and
inc
pop
xchg
fistpl
fnstenv
in
sub
add
mov
add
cld
jg
adc
sub
adc
mov
xchg
and
and
jl
outsb
jg,pn
add
jo
add
fistl
in
or
scas
negb
cli
sub
aam
pop
in
mov
mov
out
lcall
mov
bound
push
psubsw
sti
insb
rorl
sbb
pop
addl
mov
xchg
mov
sbbl
or
scas
jg
negb
xchg
jne
xor
into
jecxz
imull
push
xchg
aad
and
stos
and
shll
mov
jae
push
adc
cmp
leave
sbb
add
or
faddl
cmpsl
sub
dec
popf
inc
mov
cwtl
loopne
call
ret
adcl
push
jbe
pop
dec
btcl
xor
push
xchg
movsl
adc
mov
cmpsl
aaa
pcmpeqb
or
cld
cmpsb
ret
xchg
adc
pop
in
test
cmp
or
lds
xchg
in
loope
cmp
jbe
cli
sub
push
gs
xchg
faddp
movsl
fcmovnb
imul
or
inc
arpl
mov
clc
fidivrs
inc
adc
test
and
loopne
pop
sub
dec
adc
mov
or
cwtl
fs
jno
add
push
mov
jno
push
pop
int
rcrl
sub
mov
fcomi
lods
loope
daa
shrb
imul
mov
outsb
cmc
dec
mov
sahf
incb
lds
xrstors
add
insl
dec
add
mov
pushf
mov
xchg
push
clc
or
push
mov
mov
adc
add
aaa
fdivl
and
mov
shr
adc
xchg
ret
lret
dec
ljmp
mov
fldlg2
insb
add
ret
repz
cmc
leave
sbb
stos
aas
and
mov
fisttps
dec
inc
mov
out
dec
jl
pop
pop
dec
xchg
sub
or
pop
scas
cmpsb
pop
sub
in
adc
push
mov
inc
and
movsl
push
fistps
xchg
call
jns
lods
lock
push
dec
js
pop
fwait
cmpsl
call
out
mov
jns
ret
cmp
mov
jmp
and
inc
jne
dec
push
mov
cs
adc
and
inc
pop
je
cmp
adc
int
sub
adc
gs
sbb
in
or
fidivrs
popa
add
mov
jecxz
imul
cmpb
outsb
mov
pop
je
mov
sti
pop
and
xchg
out
mov
loopne
or
mov
push
mov
jo
cmc
cmpsb
mov
xor
add
push
cld
adc
mov
sub
lods
jecxz
pop
xchg
mov
mov
mov
jae
xchg
xor
leave
outsl
aaa
mov
fistpll
loope
mov
sahf
xor
sub
jl
fstpt
leave
loop
mov
gs
cmp
jecxz
pop
lret
jecxz
mov
lods
push
fisubrl
mov
out
in
fdivr
jb
mov
stos
fstp
aam
jg
sti
scas
inc
fwait
shll
stos
faddl
mov
adc
sarl
xchg
sbb
mov
adc
jne
icebp
mov
pop
xchg
sti
imul
lahf
mov
xchg
les
stos
cs
out
dec
mov
imul
mov
mov
jecxz
or
lds
lahf
xchg
and
loope
lods
mov
mov
mov
jg
pop
insb
mov
pop
or
xchg
mov
mov
fmul
fcompl
jns
mov
mov
mov
fcmovu
jmp
mov
leave
ljmp
xorl
or
cmp
pop
mov
aad
and
lret
daa
sti
cmpsb
mov
mov
cmp
jno
fadd
xor
ret
mov
or
adc
mov
inc
stos
mov
adc
inc
aas
stos
jno
mov
sub
pop
ret
lahf
inc
aas
outsl
out
mov
xchg
mov
jae
insb
cmp
xchg
mov
shrl
xor
jns
daa
das
les
fwait
xchg
xchg
scas
mov
aas
pop
lds
adc
xchg
xlat
ret
fisubl
subb
mov
or
lret
xor
sub
xchg
ss
sbb
subl
inc
fnsave
sbb
mov
jl
enter
inc
repz
stos
mov
mov
jmp
movsl
sbb
in
xchg
rcrb
scas
jnp,pn
mov
cli
push
cltd
add
push
loop
mov
xchg
stos
jns
ret
push
pop
xchg
pop
loop
into
sub
rorb
and
gs
fdivrs
mov
mov
xchg
cwtl
push
xchg
mov
xchg
into
cmpsb
jmp
scas
test
push
mov
mov
cmpsl
test
subl
jns
pmulhuw
mov
bnd
sub
rcll
out
nop
imul
sbbb
aaa
out
nop
aaa
in
aaa
add
in
jg
aaa
mov
aam
or
scas
test
cmp
incl
scas
inc
jg
sahf
and
iret
jl
std
jecxz
mov
mov
xchg
inc
mov
mov
mov
jecxz
cmpsb
pop
and
mov
mov
push
pop
mov
shlb
js
push
jns
jle
pushf
mov
aas
cmpsl
mov
call
jae
mov
imul
push
pop
mov
aam
in
xor
dec
fdivrs
mov
das
stc
mov
gs
aad
movsl
fmuls
sti
xchg
xchg
mov
aaa
sbb
sub
xor
adc
jmp
cltd
arpl
or
vcvtsi2ssl
mov
mov
rcl
enter
xor
sub
shl
adc
lods
mov
or
xchg
dec
bound
fnstcw
mov
outsl
aad
test
frstor
xor
jecxz
lods
stos
rcll
ss
pop
imul
lret
mov
addr16
sub
jb
mov
outsl
out
mov
or
sub
fistpl
shll
mov
fcmovu
pop
scas
sti
add
mul
loope
mov
hlt
icebp
mov
ficompl
andb
sbb
sbb
out
adc
testl
fwait
enter
stc
js
jbe
loope
xchg
and
push
out
xlat
mov
add
push
dec
mov
or
shlb
jnp
xor
fnstcw
test
mov
mov
sub
lods
rcl
imul
rcr
xchg
pop
mov
sub
jns
ret
mov
pop
sub
lcall
shll
roll
mov
adcl
sti
jp
mov
into
sub
out
icebp
mov
inc
in
xchg
mov
cmpsb
mov
mov
cmp
fmull
cld
fcoms
cmc
je
fisttpl
jno
add
ret
inc
mov
xchg
stos
in
cmpsl
dec
repz
jl
push
mov
filds
ja
lret
sbb
mov
or
add
xchg
mov
aam
rcrl
shl
pop
pop
ljmp
cmpsl
cmc
stos
adc
push
rorb
xor
stc
xlat
lods
jl
std
stos
mov
lret
dec
mov
mov
sub
out
sub
jmp
lods
out
fwait
sbb
out
sbb
xlat
fwait
stos
cmp
xchg
lods
jae
les
int3
scas
jecxz
ret
or
xlat
mov
out
jnp
cli
mov
scas
lods
int3
sbb
stos
mov
mov
enter
mov
movsl
mov
mov
fstpt
jbe
adc
imul
scas
shll
xor
fisttps
addb
enter
pushf
xchg
and
xchg
jecxz
lahf
xor
ret
aaa
adc
out
shl
inc
clc
dec
push
xchg
mov
js
cmc
jg
mov
lahf
push
imul
pop
fwait
and
pop
outsl
sbb
mov
mov
jecxz
ss
mov
add
in
popa
rcl
mov
imul
iret
lahf
in
icebp
mov
dec
fldcw
mov
rcrb
jnp
xchg
mov
lahf
stos
mov
mov
xchg
lods
aas
add
fidivl
push
mov
inc
aad
ss
mov
js
stos
dec
jl
mov
jmp
dec
jmp
fidivrs
cli
sub
movsl
cltd
pop
mov
fisubs
jecxz
mov
and
jno
or
out
std
push
in
sbb
loope
push
test
leave
mov
mov
stc
repz
dec
ror
imul
lcall
lods
stos
add
aaa
mov
gs
pop
lret
fxch
int
lods
jle
mov
mov
jge
add
jo
leave
aaa
mov
call
push
xchg
daa
fistpll
sbb
test
sub
fsubr
in
mov
pop
jg
cmpsb
pusha
lock
fistps
inc
ret
fnsetpm(287
inc
mov
lret
dec
mov
jg
pop
push
xlat
xor
jge
push
or
mov
out
stos
js
loop
sbb
add
ss
lods
stos
add
in
out
mov
mov
jo
push
push
aam
jnp
cmp
rcrl
and
jle
push
inc
jl
add
enter
in
mov
mov
imul
bound
mov
mov
jg
in
pop
fadds
mov
xchg
mov
inc
and
mov
mov
arpl
outsl
outsb
sar
fdivr
add
popf
add
add
and
inc
stos
adc
xchg
lret
fisttps
mov
pushl
sahf
mov
xor
das
icebp
int
jg
xor
test
cmp
sbb
sti
xchg
sahf
xor
mov
es
iret
in
outsl
xchg
xor
push
dec
int
xor
cmp
and
xchg
ret
or
scas
cltd
mov
jecxz
xchg
aaa
out
pop
push
ljmp
cltd
std
lret
ret
lds
stc
sub
xlat
mov
jecxz
mov
mov
cltd
sarb
cs
dec
fistpll
test
cmp
cltd
push
dec
fstp
das
scas
xchg
in
sub
fbld
jge
fisubrl
sbbl
cs
jbe
enter
outsl
pop
sbb
insb
push
inc
in
cmpl
sub
pop
cld
fists
outsl
dec
stos
cmpsl
jb
int
xchg
shl
jg
mull
imul
push
fldcw
iret
fistpll
mov
fsub
jo
dec
int
ds
xor
leave
cld
pusha
cltd
jb
xchg
mov
sub
jnp
add
push
imul
outsl
mov
lret
xchg
subb
lods
xchg
pop
xchg
push
fwait
leave
lods
jnp
fwait
and
pop
aaa
aad
fcmove
pop
sbbl
adc
repnz
lods
daa
sbb
pop
adc
sub
stos
sub
in
fsubrs
das
and
jnp
movsb
xchg
jg
stos
addl
jg
jns
and
movsl
jns
or
pop
out
mov
orl
inc
daa
mov
negl
adc
xchg
mov
jp
mov
mov
add
cmp
dec
imul
neg
sub
jns
xchg
test
aas
jns
movb
movsb
stos
push
loope
xchg
or
stos
pusha
lahf
lock
inc
lds
add
pop
arpl
mov
fistpl
xchg
fstpt
add
xor
mov
mov
add
mov
repnz
mov
jnp
push
lcall
movsl
mov
insb
into
sti
jge
fwait
into
repz
inc
dec
inc
xchg
xor
iret
jnp
jae
scas
es
out
fbstp
movsl
sahf
push
add
popf
xor
data16
dec
xchg
dec
shrl
lods
jae
jp
enter
dec
loop
sahf
lret
daa
popa
jbe
fildl
jecxz
into
in
incl
sub
in
sarb
test
fbld
inc
das
insl
cmp
inc
fwait
bound
cwtl
orl
sbb
aaa
xchg
rolb
dec
aas
lahf
xor
cmp
cmpsl
aad
lods
ret
jg
mov
fidivl
loop
mov
cli
jne
mov
mov
xchg
adc
out
and
mov
cld
fs
xchg
pop
iret
stos
sub
mov
jnp
pusha
gs
aaa
popf
scas
dec
mov
fiadds
xchg
inc
and
mov
stos
ret
lahf
xorb
sbbl
out
sbb
dec
or
aad
mov
mov
mov
in
ret
push
fisubs
jl
aas
rcrb
mov
cmpsb
loop
lods
xchg
outsl
inc
imul
inc
les
rcrl
push
setg
mov
shrb
mov
pop
ret
lcall
cmp
jmp
xor
aad
sbb
xchg
mov
cmp
leave
das
mov
xlat
or
push
xchg
neg
lahf
mov
fdivl
mov
loope
mov
jnp
es
xchg
mov
mov
sub
bound
popa
das
or
and
pop
dec
lods
pop
or
push
adc
mov
fistpll
mov
dec
jecxz
xchg
into
cwtl
cwtl
scas
fdivl
pop
jbe
in
mov
jae
pop
sahf
xor
xlat
into
mov
mov
pop
aas
cmc
das
xlat
mov
jle
or
iret
shrl
lods
jbe
clc
adcl
lods
sbb
test
jb
xor
gs
jae
test
aaa
xchg
jecxz
insb
ret
je,pn
in
std
imul
jecxz
insl
mov
jg
scas
jecxz
leave
stos
mov
shll
mov
jb
movsb
mov
scas
adc
mov
sub
xchg
push
sbb
stos
jns
je
push
add
movsb
arpl
aas
out
xchg
xchg
sti
in
mov
mov
xchg
and
fwait
jae
scas
mov
mov
jne
mov
xchg
push
test
xchg
js
cmp
push
mov
inc
jbe
pop
dec
bswap
outsl
lret
mov
sub
jl
fs
mov
jp
aaa
jp
dec
icebp
and
mov
mov
xchg
lcall
dec
insl
mov
jae
pop
push
outsl
ljmp
ret
hlt
sbb
repnz
outsb
inc
shlb
movsb
loope
jp
lods
in
mov
jle
jno
popf
dec
mov
in
jle
fwait
loop
dec
jmp
xor
sbb
enter
xor
jno
loopne
mov
mov
fistpl
lret
int
pusha
mov
popa
and
lods
in
or
dec
cmp
cli
imul
pop
mov
mov
push
fwait
sub
mov
fs
add
lds
iret
mov
xorb
pusha
lret
cmp
push
imul
lods
in
addr16
mov
push
in
add
mov
xchg
sbb
mov
jmp
mov
aas
or
pop
push
call
jg
mov
or
mul
mov
pop
mov
mov
pop
fstl
jnp
test
lretw
push
xor
pop
inc
pop
ret
mov
fbstp
out
pop
inc
subl
jecxz
inc
xchg
mov
mov
call
xor
jecxz
cmc
mov
mov
and
or
mov
cmp
jecxz
leave
dec
mov
add
hlt
and
test
lret
mov
scas
idiv
dec
stos
imul
jnp
ja
adc
outsl
fimuls
push
pusha
sbb
pop
aad
adc
lea
dec
popa
pop
in
mov
mov
pop
sub
pop
pop
adc
movsb
xchg
cmpsl
xor
inc
dec
imul
loopne
inc
jne
jnp
imul
jge
mov
sub
lea
mov
lods
cs
jmp
inc
aaa
fucomi
add
or
out
ds
push
adcb
jecxz
pop
xchg
or
bound
popa
andl
jmp
fiaddl
push
loope
push
lahf
jle
lfs
mov
cmc
cmpsl
insl
mov
ret
mov
sub
scas
jecxz
stos
jns
or
inc
pop
sbb
mov
fwait
pop
outsb
faddp
mov
sti
aas
push
insb
cmp
pop
mov
and
pushf
mov
dec
lods
add
jg
out
repz
pusha
fwait
cmpsb
add
stos
adc
jg
insb
mov
xor
lahf
loop
add
cli
sub
pop
jmp
cmpsb
xchg
scas
lods
mov
push
push
xlat
jnp
stos
repz
fwait
gs
sahf
imul
cmp
jg
shll
popa
loope
ret
xor
mov
outsb
lret
adc
xor
jmp
mov
fldenv
popa
adc
or
fdivl
std
jnp
lcall
mov
das
scas
cmp
das
jno
add
lahf
iret
and
mov
in
cltd
adc
outsl
sti
mov
mov
aas
mov
in
jno
into
imul
fisubs
pop
into
std
aam
dec
xchg
pop
notb
mov
xchg
jne
or
out
ret
pop
in
inc
mov
fbstp
or
mov
mov
jg
sbb
mov
adc
sbb
cmpsl
subb
aad
adc
outsl
and
push
mov
fsubp
dec
cs
fwait
mov
mov
pop
jno
push
aam
push
jp
mov
mov
sbb
sub
push
add
adc
cmp
imul
push
sahf
in
daa
mov
je
in
sti
jecxz
movnti
inc
imul
iret
jnp
cmpb
cmp
jecxz
push
pop
jle
push
jmp
jno
or
xor
fwait
movsb
aad
lods
mov
or
testl
push
adc
in
jecxz
pextrw
enter
pop
jne
dec
xchg
scas
popf
xorl
fndisi(8087
jne
int
sti
iret
dec
imul
xchg
cmp
test
xor
jae
xchg
scas
mov
sub
stos
js
mov
stc
rcl
loop
xchg
gs
cli
cltd
in
mulb
out
aaa
xor
push
in
mov
mov
fbstp
dec
pop
mov
lahf
mov
xchg
andb
andps
inc
jne
inc
data16
inc
cld
je
jnp
mov
jnp
in
jbe
jp
subl
adc
stos
xor
push
mov
stos
add
sub
je
repz
inc
push
dec
les
scas
fcoml
sbb
jbe
pop
out
sahf
or
fsubrl
dec
in
rcrb
inc
mov
jb
sub
stos
pop
inc
fcmovbe
jns
iret
insl
xlat
fwait
adc
xorl
jecxz
mov
mov
mov
mov
sub
cltd
popa
mov
xor
into
mov
roll
jge
stos
fidivrl
xchg
mov
imul
push
and
stos
jae
xorl
add
pop
aad
add
mov
push
daa
mov
push
pop
sbb
fnstenv
pop
push
orl
fxam
xor
int3
hlt
movsb
int
push
cmp
xchg
pop
test
les
xchg
dec
sti
addb
xchg
add
or
test
aas
pop
xchg
lahf
shlb
sbb
push
mov
fmull
add
lods
and
cmpsl
pop
std
or
out
mov
mov
xor
arpl
repnz
inc
pop
imul
push
xor
fcomip
shrb
ja
add
push
ja
lods
sbb
mov
test
mov
xchg
adc
js
mov
stos
loopne
add
inc
imul
loope
jno
jecxz
mov
jecxz
out
mov
jmp
jecxz
xlat
jo
mov
jae
mov
mov
jge
movb
sub
test
in
incl
scas
in
cmp
mov
mov
cmp
jecxz
popf
ljmp
ljmp
pushf
mov
ja
out
lahf
repz
mov
jecxz
jns
mov
mov
mov
add
mov
cmp
aaa
fwait
mov
aaa
jle
inc
mov
dec
into
repnz
lods
push
jg
mov
mov
lret
push
lret
fcmovbe
or
and
xchg
adcl
sbb
scas
xor
push
add
test
jp
out
mov
xchg
xor
sub
pop
mov
inc
add
mov
ret
cmp
pop
ficoms
mov
fwait
dec
mov
in
cmp
shlb
push
mov
ljmp
xchg
push
jecxz
fucomip
jns
fisubrl
ljmp
mov
xchg
bound
mov
ss
dec
adc
dec
pop
ss
test
adc
cmpsl
xchg
jg
ja
insb
mov
dec
inc
xor
les
add
cmp
mov
ret
jle
cmp
shll
fistpll
and
out
jecxz
cltd
xlat
push
mov
ljmp
or
adc
hlt
xchg
inc
movsb
add
lret
idivl
fbstp
add
dec
repnz
sahf
loope
lea
fiadds
push
pushf
mov
jge
ret
movsl
ss
fidivs
mov
adc
fbld
jns
cmpsb
pop
mov
xchg
inc
roll
lret
imul
lret
test
fsubp
insl
iret
jne
out
fiadds
push
or
sti
jle
fiadds
xor
jb
jnp
ror
sbb
shl
cmp
adc
ljmp
lods
cmpsb
add
aaa
mov
jmp
push
pop
xor
ds
pop
cmp
pop
cs
or
movsb
icebp
xor
jecxz
lds
and
cli
sub
mov
cmp
outsl
jle
out
inc
iret
adc
jnp
fcmovbe
std
mov
lret
mov
xchg
outsl
xor
inc
in
cmpsl
dec
mov
xchg
shrb
mov
fdivs
pop
movsl
adc
dec
mov
pop
loope
push
mov
xchg
mov
mov
outsb
std
add
out
repnz
outsl
insl
mov
mov
ret
sbb
fistps
jns
enter
in
pop
loope
es
mov
adc
lret
xchg
ret
cmp
lods
pop
inc
adc
mov
test
test
arpl
sub
lods
rol
mov
mov
aad
insl
push
cwtl
neg
in
in
in
xor
outsl
xchg
jne
pop
xchg
loopne
loop
jecxz
sub
push
dec
jno
mov
test
call
dec
imul
jecxz
outsl
in
aam
xchg
mov
ss
arpl
sub
shlb
mov
sub
mov
xor
push
hlt
sub
aaa
jg
jae
xor
mov
int3
lods
loop
mov
push
stos
or
aas
xchg
fdivp
iret
jg
das
testl
adc
js
sub
push
movsl
mov
lea
data16
icebp
sub
dec
xlat
inc
xchg
mov
ss
in
sarb
addr16
cmp
jns
je
pop
into
stos
fidivs
clc
push
imul
or
push
dec
int3
insb
shlb
sarb
jmp
sahf
cmp
fmuls
push
std
mov
jbe
pop
xor
push
mov
outsb
lret
rorl
or
xchg
rep
daa
sub
xorb
test
mov
jns
movsl
inc
pop
xchg
xor
scas
jns
jnp
pop
rclb
pop
mov
jmp
fsubs
ljmp
fistpll
mov
mov
outsb
shrl
insb
push
pop
or
sub
daa
jle
or
jg
stos
ja
lods
rclb
xchg
subb
cmpb
js
pushf
mov
pop
ror
fwait
popf
and
mov
fwait
add
hlt
fmuls
xchg
or
cmpsl
mov
pop
in
jae
mull
mov
push
pop
lret
mov
int3
loop
subl
hlt
stos
push
test
mov
aam
adc
push
ds
xlat
jns
or
aad
jg
cmpsl
xlat
or
unpcklps
fidivl
mov
pop
dec
testl
jae
xor
andl
inc
aas
sti
xchg
fcomi
into
jmp
xor
je
insb
in
jnp
scas
sub
xchg
jg
je
pop
in
jae
scas
mov
jmp
mov
jg
push
jp
movsb
addr16
and
mov
dec
dec
jnp
out
shl
stos
mov
pop
cmp
cmp
dec
dec
data16
pusha
movsb
ret
pusha
and
sub
jg
jnp
dec
pop
bnd
mov
imul
fdivl
stos
loopne
mov
ja
push
jmp
pusha
sub
mov
popa
leave
mov
lret
jne
xor
shrb
pop
mov
and
pop
lods
or
data16
pop
fstps
pop
add
xchg
mov
inc
pop
cmp
or
fs
pop
dec
jecxz
call
mov
mov
jecxz
loop
scas
cmp
jns
testl
xor
in
mov
sbb
out
jecxz
jns
in
ljmp
lods
mov
xlat
je
add
jno
out
sbb
fstpt
jnp
rcr
fwait
jae
iret
xor
mov
icebp
lahf
in
push
ficoms
pop
ljmp
mov
mov
sti
pushf
push
jae
cmp
pop
mov
ja
pop
js
mov
pusha
stc
iret
iret
ffreep
loope
ret
cmpsl
or
mov
cltd
into
mov
stos
mov
iret
test
adc
loopne
sub
mov
pop
lods
stos
fdiv
scas
mov
xchg
mov
pop
iret
test
shll
jno
jne
cltd
mov
mov
daa
stos
pop
mov
aad
andl
sbb
ds
aam
psrlq
xor
xchg
lret
movsl
jb
jbe
mov
in
sub
cmp
cmp
mov
jae
movsb
jg
mov
jp
loop
int
popa
ljmp
fsubrp
dec
dec
je
xor
or
mov
mov
xchg
dec
pop
lods
fbstp
xor
jle
repnz
pop
push
jle
lahf
fidivl
mov
leave
xchg
stos
dec
fmuls
sbb
fisttpll
test
xchg
loope
enter
popf
or
in
cmpl
stos
je
jge
mov
sti
ja
out
jne
dec
jno
xchg
je
jecxz
lods
push
push
lcall
mov
aas
push
dec
aaa
iret
hlt
mov
fldt
orb
mov
add
loope
jecxz
pop
mov
pop
mov
fidivrl
pop
xor
xchg
mov
inc
sub
fs
jecxz
cs
aam
leave
push
movsb
jmp
scas
test
xlat
pop
scas
mov
xchg
mov
ret
fistps
pop
outsl
mov
shrb
pop
jae
cmp
push
enter
nop
repnz
outsb
scas
push
in
sbb
cmp
and
push
sub
add
bound
mov
into
int3
lods
jecxz
loopne
jle
mov
cmp
cmpsl
movb
sti
xchg
std
fsubrs
aad
or
imul
cmp
adc
shr
lret
jbe
lods
jne
js
jl
ja
fcomp
xchg
lret
rorb
push
test
rcr
leave
mov
je
and
cmp
subb
xchg
ss
outsl
lahf
scas
daa
sti
jb
notl
out
sbb
xchg
lahf
stc
fnstsw
jae
fldt
les
dec
outsb
into
mov
icebp
cmp
mov
popa
fistpll
test
cmc
pop
dec
xchg
cmp
repnz
stos
repz
aaa
cmp
scas
push
lods
cs
fidivs
mov
dec
cmp
loop
push
xorb
imul
pop
dec
ret
lahf
mov
add
cmp
lds
mov
xchg
push
dec
or
insb
and
mov
repz
mov
clc
jmp
sub
jae
xchg
fs
int
xchg
xchg
fdivs
jecxz
loopne
mov
aam
lahf
sbb
in
test
push
pop
iret
test
jp
test
add
cmpsl
ja
sarl
iret
xchg
mov
or
pop
adc
adc
and
in
imul
jno
sub
or
popf
aaa
pop
or
xchg
rclb
les
adc
leave
arpl
punpcklwd
mov
push
pop
sti
bound
xchg
mov
lods
bound
or
adc
sbb
jp
rcr
dec
sbb
fisubs
add
dec
pop
aas
mov
test
sub
cmpsl
setne
imul
shll
fiadds
xchg
push
pusha
insb
fwait
cmp
aam
ficoms
lds
jb
aad
adc
pop
dec
or
fucomi
add
arpl
lcall
inc
mov
insl
cltd
shrl
je
adc
adc
add
inc
lahf
inc
inc
sbb
or
and
push
addr16
jg
fsubrl
xchg
mov
lds
adc
fisttpll
fsts
stos
mov
jne
inc
lea
loope
fisubrl
pop
push
fldt
imul
mov
loope
or
addr16
cmpl
jp
bound
testl
arpl
test
xchg
dec
push
sub
gs
scas
or
in
das
rolb
add
pop
inc
clc
and
cmp
ljmp
int3
adc
pushf
push
orb
sbb
in
add
sar
test
pop
imul
les
aad
pop
pop
lods
mov
pop
push
xor
sti
rolb
xor
sub
pop
dec
ljmp
lods
add
ss
fistpll
stc
orb
pop
fnstenv
test
stos
mov
fisubrl
insl
inc
and
jecxz
movsb
adcl
sahf
fwait
xor
push
cmc
cmp
jecxz
insl
out
mov
in
mov
arpl
rdmsr
mov
mov
rcr
pop
in
xor
loop
lret
mov
pop
lret
lret
xchg
mov
fwait
xor
mov
incb
rcll
lret
scas
inc
jno
test
or
sbb
or
js
inc
xchg
mov
std
sub
ja
pop
icebp
lea
ja
lods
push
idivb
xor
arpl
aam
xor
and
mov
test
dec
fcomi
sub
shr
push
call
fsubs
dec
ret
in
shll
adc
fdivs
mov
out
imul
sti
movsl
leave
mov
ds
fidivrl
mov
lahf
mov
xchg
inc
icebp
loope
fdivl
mov
mov
lahf
push
loopne
xchg
repz
pop
xor
add
fwait
out
sbb
push
push
shrl
mov
fisubl
mov
cmpl
aaa
mov
or
loop
mov
out
jl
pushl
les
iret
jge
mov
adc
or
add
mov
push
aam
jnp
js
ret
call
mov
loop
mov
in
jecxz
iret
xor
or
xor
imul
xor
mov
cmpsl
mov
jb
inc
movsl
cmp
mov
jno
dec
or
pop
and
jg
fimuls
stos
cmpsl
lret
outsb
inc
stos
mov
fistps
lahf
dec
inc
push
jae
movsl
xchg
jnp
jecxz
jns
out
and
ds
mov
leave
shl
pop
and
imul
stos
orl
stos
mov
dec
jne
arpl
inc
jg
dec
sti
test
pop
stos
bound
in
std
inc
jecxz
sbb
dec
insb
inc
jnp
in
push
cltd
cmpsb
or
sbb
push
outsb
and
addr16
aam
test
xlat
pop
loopne
mov
dec
mov
call
mov
movsl
in
data16
dec
imul
or
std
hlt
mov
idivl
aam
vmwrite
ss
dec
sahf
loop
hlt
inc
mov
shlb
xchg
cmp
leave
sub
dec
inc
movsb
fildl
mov
mov
fcmovnb
insl
insb
cmp
nop
mov
test
insl
mov
xchg
arpl
jg
inc
out
mov
testb
in
pop
add
enter
add
pop
sub
mov
xchg
test
xchg
mov
aas
jae
rcr
jecxz
jnp
cmp
push
pop
loope
in
leave
lcall
mov
dec
scas
call
fwait
push
xlat
jle
mov
mov
cmp
adc
sub
inc
dec
xor
jge
lahf
and
push
popf
movsl
mov
fisubrs
sbb
dec
or
cmp
jne
daa
push
inc
cs
outsl
push
pop
ja
mov
jle
push
mov
and
or
mov
dec
repz
mov
dec
mov
loope
sahf
mov
jne
sub
mov
movsl
addr16
push
jne
das
and
mov
jecxz
dec
jb
xchg
mov
loopne
push
sub
fsubrs
jb
loop
pop
push
movsl
pop
mov
cmp
in
mov
and
mov
push
cmp
fsts
inc
sub
in
and
loopne
sti
fcmovnb
shll
fistpll
cmpsl
loop
test
xchg
push
pop
adc
fimuls
stc
inc
jno
jge
test
pushf
jns
xor
ret
into
lods
jecxz
sbb
sub
mov
cltd
xchg
mov
movsb
scas
js
fsubr
jo
nop
jecxz
fmulp
or
add
orl
xchg
scas
je
cmp
push
and
outsl
mov
or
sti
pop
mov
lods
add
push
unpckhps
mov
pop
ret
fcompl
imul
xor
mov
pop
mov
shrb
sahf
and
jmp
xchg
jecxz
jge
sbb
mov
sarl
mov
mov
or
stos
aad
test
pop
mov
or
adc
jle
lret
mov
mov
mov
jecxz
mov
stos
pop
in
jl
fisubs
subps
mov
pop
push
xchg
into
mov
jnp
xchg
xchg
subb
cmp
les
loopne
jne
jns
fiaddl
shld
mov
mov
orl
jg
add
inc
or
fstps
push
sub
fwait
arpl
loopne
xor
xchg
xchg
movsl
mov
mov
add
xor
sub
pop
aam
shll
cmp
ja
es
in
mov
test
cmp
jnp
mov
mov
xor
loopne
xchg
ret
movsb
or
ja
add
jne
loopne
adc
push
test
mov
fstps
sbb
je
stc
xchg
xor
dec
mov
iret
arpl
push
stos
xor
xor
xchg
sahf
xlat
dec
lods
test
xchg
xchg
xchg
mov
xchg
sub
jbe
lahf
sbb
lods
stos
jns
fxch
bound
mov
sub
cwtl
mov
movsb
mov
xchg
mov
cmp
push
cmovs
fld
mov
jno
xchg
inc
dec
mov
das
mov
lds
lret
cmp
rcrb
cmpb
fadds
data16
out
cmp
stc
xchg
stos
mov
aam
lret
jmp
jg
fldt
fcmovnbe
mov
xchg
loop
js
cld
cs
and
hlt
shlb
leave
icebp
xlat
fimuls
xor
std
add
fsubrl
and
jbe
push
shl
scas
push
add
pop
dec
shlb
xchg
mov
jecxz
and
sub
hlt
aaa
mov
in
icebp
mov
push
pusha
fwait
jns
sarl
test
iret
stos
loopne
inc
arpl
jns
outsb
jmp
add
sbb
mov
in
and
jecxz
scas
scas
fwait
mov
xchg
mov
jge
sub
xchg
ss
mov
nop
pusha
ret
rcrb
mov
jae
ror
in
mov
loop
mul
rorl
movsb
jle
test
rorl
jmp
cmp
or
xchg
jge
xor
dec
jl
outsb
sub
xchg
mov
enter
jnp
mov
repz
push
dec
out
xchg
push
lods
cmp
lcall
mov
loope
fxch
js
push
pusha
fimull
scas
pop
mov
jno
push
clc
in
adc
cltd
lods
scas
jecxz
mov
inc
pop
push
lret
cmp
icebp
xor
call
imul
aad
loopne
ja
fisttpl
out
inc
or
rep
jb
xlat
int3
push
ret
hlt
jnp
push
das
imul
sarb
or
mov
xchg
dec
xchg
sbb
dec
sub
mov
xor
xchg
or
xchg
out
out
cld
loope
jecxz
movsl
xchg
jg
mov
roll
loope
lea
pop
scas
fdivrs
mov
cmp
jno
sbb
imul
aad
mov
jp
in
xlat
outsl
shl
mov
mov
mov
shrl
jg
stos
push
ret
and
mov
mov
xlat
adc
iret
jge
mov
pop
jecxz
jecxz
cmp
sbb
cmp
call
mov
mov
outsb
cs
sarl
cli
mov
jmp
divb
jnp
fsts
fisubrl
mov
mov
mov
or
jnp
les
ljmp
idivb
outsl
loopne
ja
test
inc
sub
mov
dec
add
lret
mov
or
fwait
sub
fisubrs
push
jg
scas
mov
lds
ret
jmp
mov
aad
test
mov
es
dec
scas
fs
cmp
mov
scas
leave
repz
xchg
mov
mov
mov
addr16
lods
sub
jne
or
inc
lods
test
or
push
push
ja
shlb
dec
sti
cmp
fwait
cli
jmp
dec
iret
jae,pn
cs
adc
inc
inc
xchg
pop
ljmp
mov
daa
xchg
jl
icebp
leave
scas
mov
int3
sub
mov
pop
scas
sub
into
scas
sahf
mov
scas
mov
shrb
mov
pop
scas
aaa
mov
or
loopne
dec
out
movsb
and
sub
pop
cmpsl
aas
sub
fwait
lds
mov
cltd
mov
loopne
fisttps
andl
lret
rcll
add
ret
xchg
and
mov
mov
cmp
rcl
lods
lret
mov
loope
mov
dec
mov
test
push
inc
jnp
jecxz
lret
imul
ja
out
mov
fsubs
repz
pop
shl
jl
fidivrs
xchg
jae
mov
mov
jb
pop
test
ss
out
test
outsl
mov
adc
jae
jmp
divl
pushf
xor
rorb
out
jp
and
pop
jl
or
xchg
fsubrl
jge
cmp
fisubrl
xchg
cwtl
rol
xchg
out
scas
pusha
cmpsl
inc
pusha
xchg
or
das
cmp
inc
or
xchg
adc
ljmp
sti
mov
sbb
aas
push
and
lods
sti
je
ficomps
in
mov
repz
push
leave
sbb
sbb
jecxz
data16
popa
xchg
sbb
sbb
clc
xchg
out
in
mov
leave
aaa
aas
and
outsl
mov
negb
out
jnp
es
movsl
mov
mov
mov
xchg
imul
outsl
mov
fnstenv
test
subl
mov
and
mov
mov
mov
les
int
je
pop
cmp
sub
sbb
subb
mov
fidivrl
imul
repnz
mov
pop
aad
sti
test
push
or
adc
xor
mov
stos
js
ret
into
imul
addr16
xor
fndisi(8087
pop
arpl
daa
and
sbb
cmpsl
loope
loope
mov
adc
jnp
fcomp
fwait
in
or
or
fnstcw
mov
fbstp
or
push
mov
lcall
neg
das
arpl
cmp
xor
addr16
sbbl
ficomps
ret
pushf
clc
out
loop
pop
fdivrl
adc
jmp
sti
test
imul
movzbl
jns
pop
pop
js
sbb
ljmp
jnp
sbb
lret
and
test
and
xor
js
mov
ficomps
pop
add
mov
pusha
pushf
in
cli
push
movb
ja
dec
shlb
jbe
loop
inc
fcomp
and
mov
push
or
jns
ret
add
xlat
and
xlat
push
xlat
dec
sbb
xlat
or
mov
sbb
pop
push
das
ftst
les
ret
aas
sbb
ljmp
xchg
mov
int
mov
xchg
pop
xchg
ds
sbb
xchg
lods
xor
sbb
ret
ficoml
lret
jb
mov
fwait
mov
pop
stos
stos
addl
in
test
adc
xchg
and
clc
inc
fnstsw
jbe
lea
or
sub
add
cli
mov
int3
popf
loopne
insb
mov
and
dec
scas
inc
popa
sbb
lret
test
jno
mov
and
bound
leave
in
ds
lret
scas
add
sub
lds
add
pop
jmp
ret
jne
and
add
test
jne
adc
jle
fsubrp
outsb
subb
xchg
imul
leave
add
cmp
repnz
xor
pop
sbb
sub
sub
lods
repz
xchg
cmpsl
xor
mov
pop
sahf
pop
lcall
mov
cmp
xchg
out
lds
and
int
lret
in
fldcw
scas
out
mov
pop
ret
movsb
lahf
gs
or
xchg
js
mov
rcl
lods
mov
xchg
out
sahf
sti
xchg
outsl
arpl
sti
xlat
fxch
ljmp
dec
rcr
xlat
adc
xchg
js
mov
dec
fisttpll
dec
outsb
mov
sub
mov
lret
std
arpl
fldenv
call
daa
pop
ret
test
cmpsl
push
and
xor
leave
dec
push
mov
jg
fbld
mov
pop
xchg
in
cmp
xor
lea
xor
mov
movsl
push
adc
adc
movsb
pop
dec
cmp
cld
jp
push
fstl
scas
pop
mov
sbb
ljmp
jno
daa
loop
mov
fldt
shr
in
jne
cmp
dec
jb
cmp
inc
pop
jb
test
xchg
sti
xchg
mov
imul
inc
aas
jecxz
pop
lret
aas
shlb
jecxz,pt
mov
in
lahf
add
inc
push
seta
jnp
ja
inc
addr16
out
push
add
sbb
or
jle
aaa
cmc
pop
mov
push
into
fstl
loope
aas
comiss
lcall
lods
jle
xchg
cwtl
jae
jno
jno
mov
lret
aad
imul
ds
ljmp
test
movsb
xchg
ret
mov
or
xchg
xchg
xchg
es
test
jb
pop
jecxz
xor
loope
mov
test
insb
insl
pop
mov
xlat
push
dec
dec
jecxz
aam
popa
fidivs
ficomps
sti
aaa
mov
imul
inc
mov
out
xor
mov
lret
fnstenv
and
movsb
fwait
rcl
in
add
nop
test
arpl
int
shlb
lods
adc
pop
sub
jno
ret
in
icebp
pop
je
xchg
and
sub
dec
mov
and
pop
and
jecxz
xor
cmp
or
mov
rcr
leave
cmc
jg
mov
out
call
sub
cmp
or
aad
lds
push
std
push
cwtl
cmp
shl
sub
push
mov
xchg
adc
testl
cs
adc
outsb
mov
jle
fsubs
sub
dec
mov
ret
sti
fwait
sub
rclb
daa
adc
ret
mov
paddsw
and
aam
fldenv
sbb
enter
fwait
aas
mov
enter
addr16
jnp
lods
aad
stos
out
aad
push
mov
mov
sub
ret
jmp
xor
jmp
fdivrl
cwtl
sub
sub
loope
add
test
mov
cmpsl
mov
insl
jp
ljmp
jo
pop
jbe
inc
imul
xchg
jecxz
xor
sub
or
lahf
subl
outsb
out
fnsave
pop
cs
jmp
shll
sti
jb
lret
sbbl
sub
jmp
xor
in
cmp
jae
jae
stos
jecxz
xor
xchg
iret
test
mov
pop
jo
retw
jecxz
and
int
add
mov
ja
out
arpl
xchg
mov
lods
mull
mov
push
dec
adc
dec
adc
push
subl
fwait
push
jne
nop
sub
jno
pop
cmp
or
mov
mov
lods
mov
sub
xlat
mov
mov
mov
mov
xchg
sbb
pop
lret
insb
push
scas
iret
shrl
shrb
mov
mov
adcb
inc
jg
and
mov
add
test
lods
mov
fidivl
mov
jl
aas
fwait
jecxz
aam
push
mov
lods
xchg
push
push
add
movsl
pop
jns
inc
adc
mov
mov
in
lds
aam
push
sub
cltd
iret
cmpsl
xor
movsl
rol
add
push
iret
cmp
in
mov
fidivrs
jp
fadd
xor
sub
xchg
fwait
rorl
rorb
rcr
jns
pop
sahf
cmpsl
shl
xor
int
jp
jb
fwait
in
xchg
stos
xchg
dec
dec
repz
aad
loopne
bound
imul
fsubs
sub
das
or
mov
cmpsl
imul
mov
jne
push
andl
rcrl
out
or
add
movsb
jne
ret
int3
cmc
fldenv
mov
lahf
and
xchg
dec
jnp
cwtl
out
jl
out
jge
incl
xchg
mov
in
scas
lea
mov
dec
jne
imul
add
popa
mov
sarb
cmp
inc
push
sub
test
mov
jno
dec
scas
bound
inc
add
scas
inc
mov
adc
in
fsubrs
stos
adc
jnp
xor
daa
add
ss
jecxz
sub
scas
sar
mov
jae
jge
or
arpl
in
ja
fisttpl
mov
adc
jmp
inc
pop
dec
ja
cmp
insb
stos
imul
das
jnp
rorl
mov
ss
sti
sar
addr16
mov
ds
xchg
mov
ja
fcomps
add
sti
jecxz
movsl
mov
movsl
sbb
sub
adc
jle
ret
loope
aas
loopne
std
out
fwait
data16
orl
cmp
movsl
clc
fwait
mov
pop
outsl
inc
push
sti
mov
mov
jnp
shl
cli
jl
jge
or
mov
subb
popf
inc
js
aad
cmp
sub
in
stos
xor
pop
fldenv
add
inc
xor
in
adc
inc
sarl
sbb
outsb
repz
jmp
mov
push
xlat
jb
sbb
jmp
imul
ffree
push
loopne
or
mov
scas
inc
insl
jl
xor
mov
shl
nop
push
daa
mov
mov
xor
filds
jae
and
ljmp
inc
push
test
push
mov
outsl
movsb
add
add
lds
fnstcw
test
pop
mul
loopne
loope
mov
sub
pop
or
js
in
and
mov
push
pop
popf
insl
out
push
cmp
repz
fwait
lahf
or
lods
mov
call
xchg
ljmp
repz
insl
push
lock
cmpsb
scas
mov
xor
pop
cmp
pop
add
cltd
lea
bnd
xor
pusha
fimuls
jg
cmpsl
stos
js
movsb
cld
imul
iret
out
das
or
repz
icebp
aaa
jb
das
int
cwtl
sahf
mov
jne
jno
pop
fsubs
jmp
imul
xchg
and
xchg
adc
fwait
jle
hlt
and
xchg
mov
jmp
ljmp
dec
pop
repz
add
sti
xor
xor
jg
pop
movsl
addl
int
xor
popf
mov
jae
mov
ljmp
jne
ja
mov
mov
xor
mov
stos
aam
dec
das
jecxz
dec
fldt
jnp
mov
out
insl
rolb
pusha
mov
push
jg
sysenter
iret
cmpsb
bound
or
xor
pop
leave
mov
cmp
jns
in
jmp
add
or
lret
cmp
add
icebp
sub
mov
dec
sbb
lods
mov
sub
adc
xchg
adcb
ljmp
jno
sbb
rcrb
lods
stc
push
popa
mov
jg
mov
sub
lret
mov
pushf
jb
dec
clc
add
cmp
or
lret
pop
std
aad
js
inc
xor
push
jecxz
mov
xchg
outsl
jnp
lret
fwait
pop
lahf
mov
ret
sarl
in
jl
pop
mov
shr
jnp
xor
cmc
pop
mov
scas
pop
lahf
and
gs
imul
push
adc
fidivrl
aaa
in
mov
mov
pop
or
xchg
repnz
jp
cmc
sbb
cmp
mov
leave
ja
adc
mov
push
ja
mov
push
loop
ret
sbb
shrb
fptan
xor
std
arpl
dec
xlat
jge
hlt
and
add
dec
fcoml
mov
sbb
or
test
fbstp
pushf
outsl
scas
fdivs
push
push
cmp
push
gs
fisubs
int3
and
fwait
cmp
fdivs
push
test
cmp
test
loop
push
lds
or
inc
ret
mov
pop
loope
cmp
addr16
sub
dec
rcll
std
xlat
aad
cltd
stc
insl
lds
int3
ljmp
adc
sahf
mov
pop
jns
sub
fs
jns
sbb
lea
or
stc
test
subl
bound
xchg
pop
cltd
ror
mov
xchg
lds
xchg
aas
xor
cltd
xchg
insl
or
enter
pop
pop
xchg
icebp
mov
inc
js
mov
icebp
mov
push
hlt
jns
stos
shll
fdivl
ljmp
jnp
xchg
lret
adc
ror
out
jecxz
sub
loope
jns
push
cmp
in
and
fcomi
daa
aad
es
insl
pop
imul
fwait
xlat
ljmp
push
jns
or
jmp
sbb
jecxz
test
scas
data16
jmp
shll
mov
xor
mov
or
imul
cmp
jecxz
in
mov
popa
lods
mov
or
sub
into
in
movsb
sub
jae
stc
int
sub
scas
xor
inc
shl
jae
das
xor
popa
lret
xchg
cwtl
jne
pop
sub
popl
fsubr
shrl
sar
mov
dec
mov
test
mov
pop
int3
movsl
repnz
pop
aaa
xchg
movsb
imul
mov
lret
sbb
xchg
mov
arpl
mov
insb
andl
cmp
insl
cmc
xchg
xchg
test
ja
push
jb
pop
fstps
adc
sahf
js
loope,pt
dec
fstpt
pop
push
jmp
xchg
data16
xor
outsb
mulb
int3
hlt
cmp
pop
fld
pop
divl
lods
pop
sub
test
jb
adc
repz
js
and
int
mov
fstpt
pop
mov
mov
lcall
outsb
in
les
in
sbb
movb
mov
addr16
iret
sti
cmp
add
imul
outsb
push
or
jecxz
aaa
hlt
inc
adc
jmp
inc
pop
pop
inc
sub
adc
inc
dec
xchg
dec
repz
shl
add
popf
in
fld
cli
lret
jp
aam
sub
test
fistps
movsl
stc
subb
jnp
xor
push
imul
imul
lods
xchg
fistl
aas
iret
mov
add
mov
int3
loope
int
jb
mov
push
jg
mov
popf
jecxz
mov
fld
mov
les
idiv
mov
xor
lods
shrl
scas
les
jns
fldt
or
xor
cltd
imul
ja
dec
pop
imul
imul
sub
jns
mov
daa
mov
test
cmp
mov
jg
pop
dec
mov
and
mov
xchg
pop
ss
lea
stos
dec
dec
nop
stos
dec
mov
repz
fiaddl
sbb
push
fwait
inc
mov
mov
lods
sbb
fstpt
xchg
gs
jge
mov
fdivs
ret
ret
mov
outsl
pop
pop
xchg
inc
pop
mov
in
sbb
sub
pop
movsb
test
mov
pop
movsb
sbb
cmp
inc
adc
sbb
mov
jecxz
into
aam
rorl
mov
mov
mov
fidivrl
or
fiaddl
aas
mov
fidivl
xor
fidivrl
idivl
stos
enter
adc
adc
push
mov
push
mov
fstps
fwait
jns
fisubrl
imul
out
inc
dec
subb
xchg
orb
popf
call
cmp
imul
cs
lds
jecxz
jne
xchg
add
dec
cmp
mov
sub
mov
push
mov
pop
out
fwait
repnz
dec
and
jae
xlat
adc
adc
fidivrs
jg
lret
rolb
in
jl
mov
es
jns
fbld
stos
in
jle
mov
aad
ja
add
shlb
lods
test
lret
mov
sub
inc
or
icebp
mov
push
sti
jg
and
outsl
fsubrs
inc
lods
jnp
push
pop
in
xchg
adc
loopne
xchg
jg
adc
sahf
lret
pop
insb
dec
jg
and
sbb
mov
adc
sbb
lret
cltd
xlat
xorb
gs
and
xor
lret
imul
fbld
mov
shl
sbb
sbb
add
push
fistps
stos
das
das
imul
into
xchg
xchg
mov
push
add
and
mov
mov
pop
pop
sbb
fwait
mov
fwait
lret
push
or
es
stos
ret
mov
mov
dec
jle
cltd
fnstenv
aas
xchg
mov
fisttpl
mov
imulb
cltd
aad
out
xchg
mov
and
cmc
lret
insl
in
pop
mov
jae
mov
jo
mov
ljmp
xchg
loopne
mov
xchg
movsb
cmp
cmpsb
fimuls
inc
xchg
xchg
sbb
xchg
test
in
cmp
and
jno
add
aas
jl
mov
loopne
push
scas
nop
loop
fdivl
aam
adc
pushf
mov
shl
test
mov
stos
retw
mov
sbb
in
sub
mov
push
pop
aaa
mov
pop
sbb
xor
inc
fsubp
and
pop
imulb
dec
xchg
add
cwtl
xor
daa
jg
mov
dec
decl
jo
outsl
sub
adc
aad
nop
mov
daa
aaa
inc
xchg
pop
add
pop
in
jnp
arpl
xchg
jnp
sub
dec
fdivrs
xchg
movsb
jnp
insl
in
movsl
fcoms
jb
and
out
push
ja
fisubs
cwtl
and
lea
ja
lahf
pop
ja
fnclex
lds
andb
out
dec
xorl
mov
xchg
sub
mov
pop
dec
fdivrp
fwait
mov
xchg
test
push
mov
mov
iret
or
pop
sti
jg
and
adc
mov
dec
loopne
in
xor
loopne
mov
stos
mov
mov
pusha
and
adc
mov
mov
mov
loop
inc
xorl
mov
add
mov
ljmp
ja
and
inc
popa
jmp
cld
pop
sbb
adc
jns,pt
jae
mov
or
sti
test
shll
sbb
sbb
stc
outsb
jg
xchg
cmp
aad
dec
sti
sti
mov
hlt
fwait
and
ret
lds
test
orl
mov
shrl
mov
repz
adc
test
push
push
sub
push
mov
jp
fdivp
aaa
mov
cmp
stos
in
mov
mov
jl
or
gs
inc
xchg
adc
xor
aam
mov
in
outsl
inc
testl
lret
mov
push
and
mov
das
adc
arpl
or
fwait
cmpsl
test
fidivrl
pusha
mov
jnp
cmpsl
mov
sub
and
push
pop
iret
movsl
into
adc
in
mov
popa
inc
mov
jg
cmp
jecxz
xchg
xor
cmp
jae
mov
or
je
lea
jnp
and
movswl
dec
arpl
movsl
gs
ja
ja
in
mov
push
cwtl
insl
mov
popa
xor
mov
xor
lcall
lahf
push
push
sub
adc
imul
movsb
out
jbe
push
imul
sti
sub
mov
shl
pop
sbb
inc
mov
daa
loop
cmp
outsl
add
cmp
mov
sub
mov
enter
or
lea
xor
jecxz
loop
sbb
sbb
or
js
lret
sti
cltd
fcmovnb
stos
xor
xor
adc
add
push
or
subl
inc
inc
jno
adc
orb
loope
xor
and
add
jnp
ficoms
xor
inc
jp
stos
cmp
adc
out
xchg
fbld
push
ret
stos
dec
mov
mov
mov
push
push
push
test
test
xor
shll
lods
lods
push
or
jns
inc
xorl
lret
xchg
loope
pop
inc
pop
xchg
rorb
aaa
out
push
mov
jae
xor
push
js
xor
inc
cmp
iret
sub
movsb
jne
pusha
popf
cs
mov
enter
js
and
fcoms
shl
aad
xlat
xlat
imul
or
add
jo
mov
sub
mov
mov
mov
mov
es
scas
fwait
xor
mov
mov
inc
mov
fnstsw
dec
mov
ss
mov
das
fstl
mov
mov
jns
outsl
iret
loop
mov
xchg
imul
in
dec
mov
inc
sub
inc
sti
push
imul
test
ja
jne
orb
jb
sub
adc
in
int3
repnz
mov
hlt
lds
lret
adc
adc
jo
mov
repnz
cmp
shlb
icebp
cmp
and
shlb
insb
push
subl
orb
push
popa
mov
lret
mov
iret
sarb
jae
popf
pop
ljmp
sub
stos
vmovntpd
mov
and
adc
mov
lret
int3
push
sub
stos
adc
imul
lret
mov
jno
ret
icebp
cmp
and
je
and
mov
stos
pop
shl
or
and
add
ljmp
push
std
in
add
popf
xor
setnp
adc
andl
ljmp
sbb
and
mov
mov
push
lret
stos
push
std
iret
sub
mov
push
xchg
xor
std
popf
leave
mov
stos
fstps
aaa
lret
iret
pop
out
jge
fdivrp
ss
lahf
xor
sarb
xor
mov
xor
adc
ret
aam
xchg
cmp
xor
pop
iret
push
aad
ss
mov
rcrb
mov
jns
lods
pushf
push
iret
gs
fidivs
fwait
stos
loop
ja
jg
push
xchg
ret
sbb
adc
iret
lret
xor
sti
je
push
jl
mov
cmp
push
xor
adc
sbb
mov
xorl
std
mov
jle
aaa
mov
addl
clc
lea
fs
lds
sub
mov
mov
in
mov
insb
ljmp
pop
adc
mov
inc
lds
shrl
jge
pop
lock
adc
push
push
pop
mov
mov
jg
fisttpl
cmc
lahf
jp
xorl
lods
mov
sub
lods
xchg
popf
mov
jg
in
dec
mov
aam
fiaddl
jl
shll
lret
jns
ret
or
aad
gs
jnp
fdivs
xchg
in
mov
push
ret
test
das
fcoms
push
movsl
add
dec
jg
iret
stos
and
jecxz
pop
out
lods
mul
jecxz
mov
ror
out
jno
push
mov
jmp
jg
jo
mov
cltd
les
inc
rclb
xor
inc
dec
jmp
xor
cmp
outsl
xor
outsb
ret
xchg
mov
insl
hlt
fldcw
loopne
mov
shlb
push
cmp
fcom
xchg
pop
or
sbbl
dec
test
enter
icebp
cmp
mov
mov
pop
dec
push
aad
call
add
ret
sbb
push
lods
jmp
shll
pushf
jb
nop
and
sub
mov
pop
pop
ljmp
leave
cmpsl
mov
mov
out
pop
jl
dec
icebp
shlb
jg
pop
call
into
xchg
in
insl
mov
leave
push
lods
je
xchg
mov
cli
aam
sub
mov
call
inc
lret
test
mov
cmpsl
ret
cld
dec
push
repz
add
jno
fdivl
and
lahf
imul
test
iret
jge
mov
and
add
sbb
jb
mov
das
popf
bound
dec
call
lcall
jle
jae
fdivrs
rol
je
lahf
pop
js
cmp
stos
mov
cmc
lahf
mov
lds
jo
inc
jmp
sub
sti
xchg
xchg
ljmp
aas
mov
cltd
rcr
mov
inc
pop
mov
jns
pop
mov
pusha
mov
stos
fwait
add
out
pop
stos
cmp
loop
or
push
mov
jnp,pt
leave
jg
mov
ljmp
lea
mov
jnp,pt
sar
mov
jmp
push
movsl
pop
or
fsubl
fisttps
clc
mov
jb
mov
cmpsb
jae
pusha
dec
imul
cltd
cmp
pusha
inc
ss
mov
mov
cs
in
bound
inc
in
jo
fs
stos
rcrb
cmp
lds
sub
aad
pop
rcl
jnp
test
shl
or
mov
pop
jl
add
inc
lret
fmul
cwtl
mov
pusha
sub
aas
or
push
xor
jecxz
orb
cmp
cmp
mov
dec
xchg
cmp
inc
fcmovbe
push
cmpsb
popa
push
out
test
cmpsl
fisttpl
jbe
jge,pn
jge
js
ret
sub
daa
xchg
leave
dec
ret
cmp
loope
pop
popa
jg
jecxz
push
stos
cmp
pop
out
ja
fxch
or
mov
mov
jp
shlb
xchg
ret
out
xchg
lcall
insl
xor
push
pusha
out
mov
jecxz
xor
mov
in
imul
add
sbb
mov
mov
mov
xchg
push
in
fadds
fdivs
cwtl
jecxz
data16
pushl
imul
data16
ljmp
mov
scas
scas
aam
sbb
and
mov
iret
cmc
inc
loop
rorl
imul
pop
bound
mov
or
pop
popa
popa
mov
mov
aam
inc
lret
sarl
popa
fists
cld
xchg
hlt
cltd
loop
mov
xor
and
pop
leave
push
sub
mov
in
orl
jnp
push
push
scas
mov
and
mov
mov
das
je
mov
dec
xchg
test
mov
xchg
mov
mov
ljmp
pushf
jno
adc
mov
je
pop
or
push
push
mov
sub
rclb
aaa
repz
loopne
jno
sub
cmpsb
sub
ds
clc
xchg
mov
sub
fsubrl
jae
ja
fwait
lahf
pop
idiv
lods
jb
mov
loope
mov
rcrl
cmpb
mov
fwait
push
sub
mov
out
jns
pop
lahf
scas
loopne
and
mov
fsubrs
jg
jnp
add
mov
add
imul
insl
xor
inc
repz
mov
xor
jae
fwait
adc
sub
dec
addl
add
dec
xor
adcl
ficompl
test
cli
gs
mov
fstpl
fprem1
mov
mov
je
cmp
mov
xchg
rclb
pop
xor
add
fmul
into
fstl
or
cmpsb
dec
jp
jecxz
cmp
jae
xor
cmpsb
sbbb
lret
das
in
xchg
fcmovnu
daa
mov
mov
inc
lret
and
inc
in
repz
xchg
iret
clc
mov
mov
lods
add
add
dec
adc
stos
inc
aaa
add
jnp
loope
leave
fwait
xchg
and
mov
pop
loopne
xor
imul
xor
in
mov
xchg
jae
lods
outsl
mov
outsl
lds
arpl
out
sbb
mov
inc
cwtd
fs
push
jno
inc
sti
push
mov
or
pop
aas
xchg
jns
jmp
lahf
iret
fldt
fsubrs
mov
mov
mov
popa
push
mov
test
mov
repz
xor
xchg
inc
gs
mov
dec
out
sti
outsl
enter
das
into
pop
xor
xchg
jnp
outsb
and
scas
mov
or
push
addr16
push
jle
leave
out
popa
fisubl
jg
jae
xor
jae
scas
xchg
cld
push
jnp
insb
arpl
call
ficoml
fcmovb
test
ja
fidivl
jae
jg
int3
pop
fwait
push
fstpt
mov
fisttpl
clc
ja
jae
and
add
push
pop
das
xor
shl
xchg
jmp
sub
pop
push
rorl
lcall
dec
inc
cmpsl
or
lods
fwait
or
dec
icebp
add
ja
jae
fxch
push
sub
mov
and
jg
cld
adc
xlat
jg
mov
push
jno
xchg
popf
ljmp
rcr
loop
sub
fwait
sub
fsts
mov
xchg
loop
repnz
mov
jae
addr16
sbb
inc
sbb
jno
jg
or
cmpb
mov
sarb
loop
mov
inc
imul
jo
mov
call
cs
scas
nop
jae
xchg
outsb
lds
lock
aaa
ja
dec
sub
sub
loop
jecxz
xor
add
xlat
sahf
pop
lret
and
pop
das
scas
fwait
daa
cmp
daa
dec
jmp
push
aas
xchg
sbb
jecxz
dec
aas
loop
and
loop
test
mov
pushf
gs
xchg
mov
xchg
adc
mov
dec
sahf
adc
pop
mov
lds
lcall
cmpl
mov
rclb
xchg
out
sub
cltd
adc
mov
or
stos
add
jle
push
out
xchg
lcall
mov
mov
inc
mov
lcall
fstps
xchg
test
enter
scas
push
fadds
lods
jecxz
mov
repnz
stos
arpl
cmpsb
lods
loope
fisubrs
push
mov
scas
fstpt
in
test
xchg
sbb
call
jg
lods
cmp
and
mov
dec
mov
in
and
push
test
das
insl
mov
aas
stos
in
and
mov
je
jae
mov
dec
sub
pushf
fdivrs
xchg
fisubl
jnp
repz
jge
sti
push
push
mov
fisubrl
xchg
push
in
and
and
stos
mov
pop
and
cs
imul
hlt
mov
inc
and
neg
cltd
dec
test
mov
fsubp
xchg
mov
adc
fwait
mov
out
je
push
fistps
insl
fsubrs
mov
or
nop
aaa
push
jnp,pn
push
xchg
fists
out
int
scas
sub
outsl
nop
xchg
rcl
rorb
mov
mov
mov
xchg
scas
push
xchg
cmc
jnp
scas
sub
cvtpi2ps
aas
fwait
sub
push
scas
lahf
dec
jbe
lock
int3
mov
and
pop
in
rcrl
dec
lahf
insb
fwait
xlat
xor
xchg
sti
and
stos
pop
xchg
xchg
xchg
pop
lret
loop
mov
lret
orb
mov
push
out
sbb
test
cwtl
sub
cmp
aad
sub
sbb
mov
jno
mov
cmpsb
dec
arpl
jnp
iret
test
xchg
or
imul
cmp
dec
test
stc
les
inc
std
repnz
out
push
fimuls
pop
sbb
jo
stc
jbe
push
fbld
loop
je
sub
fldenv
fwait
or
mov
iret
insb
mov
das
clc
les
lds
scas
sar
inc
scas
or
inc
test
test
cmp
mov
add
add
js
js
xor
dec
repz
xchg
mov
pop
pop
or
sbb
cltd
xchg
dec
lcall
call
imul
hlt
cmpsl
jl
pushf
ljmp
in
repz
fldl
cltd
adc
sbb
jg
mov
push
mov
push
pop
lret
fnsave
les
out
mov
fbstp
out
mov
shll
fwait
xor
xchg
pop
aad
mov
jae
adc
jne
dec
rcrl
push
add
push
leave
sub
pop
push
out
ret
das
mov
xor
mov
mov
add
mov
pop
push
fsubrs
arpl
push
cmp
mov
inc
jbe
mov
mov
aam
shlb
mov
out
mov
jo
fldenv
fwait
mov
push
popf
incl
andl
adc
ret
lds
and
dec
cltd
repnz
nop
std
pop
in
mov
push
aas
mov
mov
outsl
rorl
push
sub
int
jbe
test
sti
loope
popf
popf
xchg
jae
and
aam
subl
movsl
or
fwait
add
into
aad
pop
xchg
mov
mov
rclb
outsl
xchg
stos
les
jp
icebp
sub
daa
jno
pop
pop
fmuls
fsubp
fldenv
lea
icebp
dec
lods
pop
enter
dec
cmpl
retw
cmpsl
jb
sub
addr16
fwait
mov
out
es
stos
mov
je
rcl
jno
sbb
stos
lods
imul
fwait
lret
push
jb
jmp
push
inc
sub
pop
iret
xchg
mov
in
mov
sti
push
or
cmp
stos
roll
mov
pop
enter
lret
int
andl
jnp
notl
sub
shrb
aam
out
lcall
ja
dec
inc
mov
mov
xor
dec
mov
insb
push
cmp
jnp
emms
jmp
cmp
das
mov
test
mov
notl
xlat
insl
xchg
fstsw
push
test
sub
mov
mov
call
mov
bound
adc
inc
rcrb
aas
mov
xor
pop
pop
aas
imul
dec
clc
sbb
inc
sub
enter
call
scas
loopne
mov
push
in
lds
lods
stos
fidivs
popf
mov
cltd
mov
jge
dec
jo
push
xor
clc
jns
xor
inc
loop
les
sub
outsl
mov
test
cmp
ret
mov
es
int
mov
inc
testb
repz
mov
xor
pop
xlat
push
bound
mov
scas
push
mov
xor
mov
mov
clc
push
inc
enter
push
dec
cs
aad
push
and
and
mov
iret
scas
fwait
iret
shr
fstps
and
mov
push
xchg
movsb
mov
dec
mov
je
push
inc
sahf
jle
xchg
and
jecxz
or
adc
leave
cmp
ja
test
fldcw
jb
inc
cmc
je
movsb
adc
test
xchg
loopne
in
push
xchg
repnz
mov
fiadds
jle
inc
cld
rorl
sbb
and
fnstenv
fsubs
fidivrl
fisttps
or
dec
sbb
fdivrl
test
mov
mov
mov
leave
out
push
sub
fists
xor
sub
push
sbb
pop
cmp
fwait
loopne
movsl
fisttpll
push
jp
jns
jp
jne
leave
adc
fucomi
fisubl
jmp
movsl
adc
jge
pop
xchg
call
js
mov
sub
dec
js
jnp
xor
out
out
movsl
dec
xchg
imul
stos
fistpll
mov
xor
ja
mov
cmpsl
ds
iret
pop
lahf
jl
ret
and
sub
xchg
pop
outsl
inc
stos
aaa
mov
lret
movsl
xchg
jp
into
iret
psrlq
sarl
xchg
scas
mov
xor
push
pop
jle
pop
movsl
inc
faddp
lahf
jns
jns
jecxz
popa
push
ds
mov
mov
aas
pop
scas
jno
je
insl
sbb
lcall
fldcw
sub
mov
int
lret
cmp
imulb
sub
mov
or
ja
or
push
ret
pop
setae
lret
jbe
xlat
lahf
adc
loopne
fstl
int
loopne
jne
mov
jne
cld
rcl
pop
mov
xlat
sub
adc
sarb
rcr
cs
inc
push
jne
fcmovbe
sarb
pop
ljmp
fcmovbe
mov
fdivrl
mov
mov
mov
fildll
push
mov
fsub
sbbl
test
insb
lock
xlat
jno,pn
insl
fidivl
in
iret
mov
lods
test
push
mov
pop
mov
sub
outsl
mov
dec
inc
cmp
pop
rorl
sub
pop
pop
jne
in
xor
insb
lret
cltd
lcall
in
xchg
ret
jno
movsl
xor
xchg
ss
xchg
cli
pop
mov
sbb
test
loop
lods
xchg
pop
pushf
stc
push
inc
sbb
fcom
pop
sub
lods
fsubrs
sar
ja
jae
and
out
out
jnp
iret
scas
cmp
mov
pop
mov
mov
ljmp
mov
adc
and
mov
lods
jo
add
mov
mov
imul
mov
ret
das
ljmp
xchg
fmul
sbb
es
in
and
jl
aam
mov
rcrl
stos
jns
aas
push
mov
fdivrs
ds
pop
xor
pop
xchg
nop
xor
pop
mov
fidivs
xor
mov
or
test
sti
pusha
aam
jns
out
jl
ret
inc
lock
jae
vpmuludq
int3
sub
jl
jns
xchg
cmpb
mov
cmc
dec
rorb
cmp
in
out
ljmp
cltd
jle
int3
ret
aam
hlt
mov
es
mov
jbe
mov
ror
and
js
push
loopne
add
mov
mov
in
jg
imul
mov
sub
mov
inc
std
cmp
pop
mov
subl
or
mov
into
mov
adc
jb
xor
lea
jmp
sti
fwait
jecxz
sub
lds
lods
ss
stc
and
push
jb
insl
fisubl
ja
pop
xchg
movb
addr16
push
or
movsl
inc
sar
and
aam
and
stos
and
mov
mov
dec
lods
mov
mov
jge
and
mov
mov
jns
fnstcw
out
dec
pushl
mov
mov
adc
into
call
adc
add
in
cmp
aad
aam
dec
aas
sub
in
scas
loop
sub
addr16
add
push
jle
push
push
shlb
pop
out
leave
mov
xor
dec
mov
ja
add
cmpsl
mov
aaa
imul
push
jne
fisttpll
jge
je
or
lock
pop
stos
lods
cmpsl
mov
jno
or
xchg
int3
aas
shlb
xor
and
stos
mov
int
stos
sbb
mov
lea
mov
ror
out
inc
adc
push
or
fnstenv
fs
mov
cltd
cwtl
ljmp
sahf
jge
loope
mul
and
mov
xchg
push
mov
mov
movswl
mov
jae
ja
mov
test
inc
jp
rorl
mov
in
sahf
pop
or
ds
mov
adc
sarb
mov
stos
cmpsl
or
mov
mov
fcmovu
aam
fnstcw
cmpl
mov
mulb
lea
sub
adc
inc
sbb
sbb
xchg
add
mov
xchg
cld
fucom
ja
jge
or
jl
or
jge
gs
in
jg
sub
popa
mov
outsb
fsubrl
mov
fisubrs
mov
inc
int
lcall
jg
pop
fisttps
mov
mov
pop
mov
cwtl
xchg
cs
lods
enterw
std
mov
mov
jne
adc
frstor
dec
pop
pop
pusha
cmp
shrl
leave
mov
ret
aas
xchg
jg
push
xchg
cs
rorl
roll
mov
andb
cltd
fldenv
imul
add
outsb
sub
insl
adc
sahf
fwait
cmpsl
loope
insl
icebp
stos
outsl
dec
cmc
aam
xlat
sahf
scas
or
fs
fldenv
adc
fdiv
iret
sub
into
lock
jmp
dec
insb
ja
push
mov
jl
test
std
out
cmc
lods
mov
xchg
hlt
xor
lcall
into
ficoms
mov
jo
into
cmp
mov
sti
push
call
hlt
out
dec
neg
fnstenv
push
sti
mov
fildl
mov
lcall
ss
adc
jnp
xor
mov
pusha
fcomi
shr
leave
iret
fildll
in
cmp
jne
add
les
ja
add
push
xor
cld
js
fdivs
xor
loop
loopne
fsubrs
jp
jge
sbb
add
jecxz
fbld
xor
cwtl
jbe
lods
sub
xchg
mov
xchg
mov
pand
ret
inc
in
push
imul
popa
mov
movsl
out
push
js
fdivs
xchg
movsl
fsubrp
xorl
loopne
fidivs
or
add
cmpl
jg
mov
pop
mov
xlat
movsl
mov
mov
lds
mov
jmp
jl
xchg
mov
js
and
scas
in
fistps
leave
aad
fnstcw
lret
inc
xchg
xchg
fcmovb
fistpll
loope
xor
stos
fyl2x
out
jno
loopne
pop
jp
clc
cmp
xchg
dec
push
and
fidivl
mov
mov
jecxz
js
mov
push
mov
leave
arpl
add
test
cmpsb
inc
arpl
outsl
mov
mov
pop
and
mov
xor
xor
out
cltd
pop
adc
add
xchg
pop
outsl
fildl
inc
imul
adc
or
movsb
and
iret
mov
xchg
xor
jmp
cli
in
add
icebp
cltd
mov
mov
mov
leave
ja
pushw
xchg
sbb
bnd
out
dec
dec
inc
xlat
pop
inc
jnp
loope
jmp
mov
and
in
or
ljmp
jae
in
outsl
mov
lret
inc
adc
xchg
insb
stos
lret
stos
test
dec
mov
ja
add
test
mov
popf
loopne
fidivrs
cmpsl
mov
call
scas
cmc
subb
sbb
cld
je
sti
dec
popf
jno
inc
cmpsl
fldcw
divl
ja
pop
mov
inc
stos
jns
mov
or
xchg
mov
mov
fnstcw
ja
mov
incl
dec
xor
jnp
fcmovnbe
test
sti
jo
cmc
sub
test
cs
jnp
fnsave
andl
loopne
mov
test
push
pop
aam
ror
test
jnp
fdivr
fnstsw
test
test
lcall
repz
adc
xcrypt-ofb
cmpsl
jmp
pop
inc
ret
cld
lds
mov
stos
bound
cld
jecxz
mov
test
shl
in
ret
mov
inc
push
push
mov
dec
pop
push
jae
sbb
loop
movsb
mov
ss
lret
pop
rcrl
movsb
and
and
cltd
aaa
xchg
icebp
jge
out
arpl
shll
adc
pop
ljmp
movsb
popf
push
fwait
dec
lahf
inc
iret
cwtl
mov
je
or
ret
dec
mov
jae
imul
mov
call
xchg
xchg
stc
dec
mov
fidivrl
lret
fildll
mov
mov
js
xor
popa
std
mov
shl
mov
pextrw
adc
and
jecxz
lds
xor
cmp
repnz
stos
shlb
and
pop
push
sbb
in
push
jg
popa
stos
xor
mov
push
repnz
ljmp
and
loopne
sti
movl
and
insb
fwait
aaa
jnp
popa
pushf
mov
add
in
pop
add
imul
push
jne
popa
add
sbb
lea
lds
mov
cltd
inc
mov
pop
popl
out
in
loopne
sbb
scas
lods
mov
mov
outsl
inc
imul
ja
repz
cmp
sahf
mov
mov
mov
inc
aaa
mov
lods
in
stos
jmp
inc
add
or
mov
mov
xor
mov
pop
shl
or
shlb
movsl
outsb
mov
mov
mov
mov
out
imul
mov
stos
jno
dec
add
sar
or
fwait
test
test
addr16
cmp
shl
mov
rcl
jno
aad
mov
out
fcos
jbe
dec
loope
adc
incl
cmp
shll
out
xor
push
add
or
jno
cmpsl
fimuls
cltd
cmpsl
fnstcw
int3
sarb
outsl
lods
cmp
cs
jns
es
jbe
mov
int
mov
lcall
lea
sub
lret
test
adc
xchg
mov
push
pop
mov
add
inc
inc
pop
inc
sbb
xor
jb
filds
inc
jg
shl
xchg
xchg
shll
sub
xchg
xchg
lret
bound
call
frndint
jp
add
push
jns
jns
jns
fstps
mov
mov
and
cmp
add
pop
xlat
jl
jns
mov
xor
iret
in
test
add
int
fsubs
xor
xchg
adc
add
jno
adc
fists
mov
xchg
sarl
sarl
mov
push
orl
shrb
xor
daa
ftst
int
loopne
xor
das
xchg
mov
andl
inc
fdivs
pop
popl
lods
or
add
xchg
or
xor
notl
arpl
in
push
std
filds
outsb
inc
aas
call
mov
and
add
jno
nop
imul
fnstcw
repz
mov
jno
outsl
mov
je
xchg
stos
push
mov
lods
roll
out
xchg
inc
test
fnstcw
test
xchg
cli
inc
push
xor
cmp
fs
ljmp
jecxz
mov
xor
cltd
sub
int3
cmpsl
test
or
call
addr16
sarb
mov
lds
sarl
dec
mov
lock
iret
mov
scas
cmp
jo
movsl
ror
jg
outsb
mov
cwtl
mov
shr
add
pop
sub
fsts
adc
andl
mov
fsubs
dec
xchg
fldcw
mov
sbb
mov
jns
subl
mov
inc
divl
insl
inc
mov
fyl2xp1
sub
cmp
js
mov
iret
xchg
in
rclb
push
scas
mov
mov
sahf
jnp
aad
cmp
pop
mov
pop
test
int3
test
pop
test
jo
cmc
xchg
fcos
stos
xor
outsb
ret
pop
call
push
jge
aaa
stc
mov
outsb
sti
push
mov
mov
mov
jp
xchg
dec
pop
mov
stos
popf
jecxz
mov
mov
and
jnp
imul
dec
lods
sbb
add
dec
push
and
cmp
fisttpll
in
scas
stc
xchg
xor
add
push
mov
sbb
sbb
repnz
jecxz
xchg
in
mov
sti
xchg
mov
pop
aaa
mov
push
loop
mov
cmp
push
cmp
imul
sti
mov
mov
cmp
je
jnp
nop
mov
mov
out
mov
mov
jns
mov
insl
movsb
push
mov
popf
enter
xchg
pop
dec
shlb
lock
and
jg
inc
jg
add
frstor
imul
cld
cmpsl
sub
sub
mov
jge
ss
inc
and
gs
imul
cmp
adc
or
jns
mov
fwait
mov
fldt
dec
es
fidivrl
mov
sar
test
adc
xchg
adc
test
lock
add
mov
jo
or
sti
jecxz
dec
out
mov
xor
out
lods
sub
addr16
lock
sub
imull
xor
pop
pop
cmpsb
lods
xchg
mov
mov
sub
aam
mov
arpl
out
pop
dec
hlt
xor
cmp
in
jae
rcr
xorl
dec
xor
xorb
sub
mov
dec
adc
add
aas
fimuls
movsl
insl
pop
mov
rol
cmp
mov
out
cmc
inc
out
lahf
call
jecxz
in
stos
dec
and
icebp
sub
mov
xor
jl
neg
jnp
jecxz
mov
int
lock
fwait
sti
mov
cmp
xchg
sbb
mov
jmp
add
arpl
lea
dec
mov
jo
sub
je
pop
shl
mov
add
inc
mov
lock
mov
out
jns
in
jae
jle
in
dec
adc
lret
cmp
enter
sbb
cmp
int3
pop
je
jge
fnstenv
mov
mov
mov
mov
mov
ror
cmp
imul
jecxz
inc
into
pop
xchg
mov
fidivrl
mov
mov
pusha
adc
push
mov
mov
bound
mov
test
xchg
push
lea
sub
insl
sub
pop
shr
add
jl
mov
xor
outsb
xor
cmpsb
aaa
inc
test
scas
dec
fwait
enter
in
pop
xchg
jg
cwtl
jnp
pop
add
fwait
push
push
ficompl
pop
push
js
and
push
sti
mov
xchg
or
imul
sbb
mov
mov
add
fidivrl
cmp
loop
mov
mov
pusha
rcr
mov
add
out
pop
mov
mov
mov
push
mov
jnp,pt
leave
jg
mov
ljmp
lea
mov
jnp,pt
leave
pop
scas
mov
incl
jl
fucompp
push
mov
jnp,pt
sarb
mov
xor
in
rcrl
iret
leave
jle
mov
jmp
mov
mov
jnp,pt
leave
pop
scas
mov
decl
jl
push
mov
lods
xor
aas
aaa
movsl
jne
xor
or
sub
cmp
mov
aaa
lret
imul
test
add
sub
mov
or
mov
jge
aas
mov
add
push
lds
pusha
jle
xchg
or
pop
mov
stos
loope,pn
mov
sub
sub
xor
mov
push
xchg
scas
fsubl
mov
jnp
push
or
repnz
mov
pusha
fcmovb
fidivrl
js
mov
test
stc
out
adc
cmpsb
adc
sbb
clc
adcb
pop
nop
adc
test
inc
lret
xor
loop
mov
mov
jnp
test
mov
stos
ret
push
mov
rcl
aaa
add
fisttps
add
inc
shrl
lcall
or
loopne
mov
fcmovbe
fsubr
sub
pop
fdivrl
roll
imul
mov
shll
mov
jg
cmpl
js
dec
pop
push
pushf
lods
call
add
imul
cmpsb
ljmp
fists
xchg
xchg
and
inc
mov
add
mov
andl
int
mov
cwtl
insb
fcoml
adc
xlat
push
cli
pop
in
loop
lahf
inc
ret
mov
mov
jns
mov
pusha
repz
cmc
fildll
mov
pop
xor
mov
fstps
aam
fdivs
bound
fisubl
or
fidivrs
shufps
mov
data16
lods
test
and
fstps
out
mov
nop
scas
loopne
xchg
fcmovbe
sub
out
jecxz
loope
add
sarl
mov
push
fmulp
es
jl
lea
dec
inc
or
in
fldl
ljmp
je
ficomps
cmpsb
sbb
lock
cltd
jle
or
aas
dec
inc
jg
inc
loope
scas
shrb
xor
jecxz
mov
push
fcmovbe
idivb
mov
dec
scas
jp
cli
pop
xchg
mov
aam
pop
mov
jns
sub
mov
mov
dec
imul
inc
aas
rcll
call
out
stos
xor
mov
pop
fsubs
fnstsw
or
fisttpll
stos
cmp
fcomps
jno
sbbl
jnp
ljmp
and
sahf
pop
add
xorl
stos
es
push
adc
fldt
test
adc
xchg
push
jnp
negb
pop
subl
int3
aam
dec
mov
mov
mov
mov
jg
adcb
cld
ficomps
nop
xor
mov
fnstsw
sub
loopne
into
jo
fisttpll
loop
call
ret
mov
gs
sbb
outsb
leave
cltd
sbb
cmp
in
bound
xor
mov
and
ret
jno
inc
lods
adc
fisttpl
insl
xchg
adc
rep
push
pop
jg
inc
addr16
or
dec
es
arpl
dec
cmp
xchg
test
clc
mov
daa
and
and
mov
add
jl
inc
lret
cmp
nop
stos
jmp
mov
outsl
daa
jecxz
cld
xor
jmp
jle
mov
fidivrs
xlat
mov
mov
lods
in
les
adc
lods
and
xor
cmp
mov
outsl
aam
pop
int3
aas
lods
jmp
ljmp
les
mov
mov
and
mov
pop
lods
fdivs
cwtl
rcll
adc
xchg
mov
mov
sti
jae
cmc
out
xor
lds
iret
adc
push
fildl
lcall
dec
or
arpl
cli
inc
dec
mov
insl
pop
mov
jb
xor
movsb
xor
adc
jge
xchg
mov
inc
xchg
xchg
mov
dec
scas
or
adc
in
repz
in
mov
dec
lret
inc
mov
sbb
sbb
inc
fidivl
cmp
loop
call
mov
sbb
adc
cmpl
mov
cmp
fcmovne
aas
ret
inc
mov
xor
fsts
dec
outsl
out
and
sub
mov
in
jp
pop
mov
stos
xchg
lods
js
ljmp
cltd
inc
jecxz
jae
daa
xchg
ja
mov
cmp
push
jns
imul
and
jnp
mov
mov
mov
mov
sarb
jecxz
mov
dec
and
mov
mov
sti
scas
mov
xchg
mov
mov
hlt
inc
mov
cmpsl
ljmp
push
in
lds
ljmp
mov
fwait
cmpsl
nop
aaa
mov
push
in
mov
add
pushf
jne
dec
mov
fwait
stos
aad
mov
and
popf
mov
mov
nop
aaa
mov
shll
aam
test
mov
xchg
leave
mov
dec
pop
xor
out
push
mov
mov
stc
mov
cltd
test
sub
icebp
into
lcall
call
mov
cltd
out
add
js
sbb
scas
sub
adc
sbbb
add
push
cwtl
shlb
inc
in
push
popf
test
mov
test
mov
mov
fmulp
mov
adc
push
sub
cmp
jne
pop
fxch
push
leave
pop
inc
jbe
fiadds
lcall
lret
push
outsb
or
jecxz
mov
adcl
out
fmul
loopne
psrld
or
mov
xor
outsb
and
sahf
and
aam
mov
push
test
mov
cwtl
sub
lods
mov
aaa
lcall
imull
pop
roll
lahf
sub
cmp
dec
jmp
loopne
mov
loopne
mov
jp
iret
cmpsb
xchg
lret
jno
xchg
adc
lods
lock
aaa
call
aas
stos
mov
pop
cltd
ss
pushf
xlat
loop
mov
scas
loopne
add
and
in
int
push
push
test
sbb
cmp
mov
bnd
popf
scas
out
addr16
stos
in
mov
pop
shl
mov
sbb
mov
je
and
jae
mov
inc
in
push
aaa
jno
xor
js
add
adc
add
mov
mov
cld
sti
filds
gs
faddl
aaa
stos
add
adc
aas
pushw
fcompl
fstpt
mov
rcrb
js
movsl
mov
movsb
lds
mov
loopne
inc
cld
sbb
addr16
iret
cmpsb
rclb
mov
xchg
jnp
sbb
je
arpl
data16
repz
roll
repz
test
sub
cmp
inc
mov
fcompl
mov
sti
cs
dec
repz
or
add
subb
repz
sub
call
mov
mov
in
mov
push
xor
repz
mov
add
pop
hlt
xchg
sub
mov
cmpsl
sub
xor
fcoms
loope
scas
jo
jns
out
pop
push
inc
add
jg
orl
sbb
jno
jne
lds
cmpsl
mov
pop
xchg
iret
icebp
out
lock
mov
sub
inc
lcall
push
lahf
mov
fnstenv
mov
rorl
mov
lahf
inc
jl
fdivrl
scas
fnstcw
xchg
movlhps
push
mov
clc
pusha
lds
xor
mov
cmp
int
enter
das
in
cmc
jp
sub
sti
pop
xchg
and
add
jecxz
ficomps
jnp
rcrb
mov
je
or
mov
push
jne
in
fidivrs
aad
jno
imul
insl
js
imul
stos
daa
aaa
fidivrl
fstp
mov
daa
xchg
sbb
fidivrl
out
lods
mov
mov
mov
mov
into
rclb
call
jnp
push
ret
aaa
mov
xlat
pop
fwait
cmp
xchg
imul
test
jecxz
imul
inc
mov
jecxz
mov
xorl
sub
xchg
inc
jae
and
mov
shrb
outsb
test
adc
sbb
or
std
pushl
vphaddudq
fildll
mov
sub
or
push
out
sbb
sbb
mov
dec
test
fmull
mov
push
mov
adc
add
jbe
fists
movsl
or
les
mov
pop
mov
push
push
es
push
out
xchg
popa
leave
and
loop
scas
xchg
pop
in
idivl
xchg
cmp
js
enter
jle
xlat
push
negb
jg
scas
testl
sub
jge
push
push
loope
lcall
push
jp
jmp
mov
mov
loop
mov
dec
imul
lods
movsb
dec
xchg
xchg
xchg
popf
fwait
dec
cmpsl
imul
sbb
dec
stos
xor
aas
movsl
sub
arpl
xchg
push
notb
adc
idiv
loop
mov
add
ljmp
ret
push
mov
cmpsl
faddp
or
jle
push
das
fwait
fwait
push
insl
das
mov
pop
dec
in
rolb
push
jnp
sbb
lret
sti
sub
sub
pop
sub
jecxz
push
loopne
mov
jecxz
jg
ja
sbb
lods
push
scas
enter
mov
mov
or
jge
pop
das
in
jae
jecxz
jno
or
loopne
xchg
push
sahf
aas
loopne
jne
pminsw
sub
mov
sahf
fnstcw
fistl
mov
rorl
shl
aas
mov
div
or
fbstp
stos
aas
imul
inc
mov
pop
fwait
incl
in
adc
fisubrl
mov
out
and
out
movsb
movsl
mov
pop
or
loope
mov
mov
push
mov
subl
xchg
xchg
fwait
cs
adc
jnp
inc
shrb
inc
std
jnp
push
sbb
push
loope
jns
xlat
test
add
mov
cs
jmp
test
scas
adc
mov
mov
mov
movsb
jo
repz
int3
jmp
inc
stos
xorl
push
stos
sub
divb
inc
cmp
fisubs
stos
inc
pop
ret
iret
cmpsl
lods
sarl
mov
mov
xlat
and
test
inc
nop
mov
pop
nop
adc
fmuls
lcall
xor
flds
mov
and
or
dec
mov
add
inc
fstpl
xchg
lods
rorl
test
xchg
or
lcall
repz
adc
jp
loope
into
imul
negb
out
std
dec
cmp
pop
xor
jbe
movsl
xchg
xlat
sbb
jle
mov
test
xlat
lret
subb
sbb
stos
jecxz
jno
dec
jae
sbb
cmp
out
adc
lahf
push
push
and
jecxz
movsl
addb
mov
stc
fbld
fisttpl
mov
inc
jb
xchg
cwtl
cs
adc
test
pop
mull
adc
jp
rorl
ffreep
or
rcl
mov
jne
jb
xchg
mov
faddl
push
lcall
loope
xchg
arpl
dec
fistpl
push
fxch
mull
pop
out
popa
cwtl
push
pop
repnz
fsubrl
sbb
dec
ljmp
mov
dec
jmp
ret
dec
or
sub
cmp
mov
mov
test
aaa
stos
xlat
fidivs
loop
fbld
or
inc
xlat
xchg
add
pusha
mov
dec
sahf
and
pop
push
or
hlt
hlt
repnz
mov
jae
insl
hlt
les
rorb
mov
ja
icebp
mov
pop
pop
pusha
pop
shlb
mov
xchg
or
add
dec
push
mov
cs
pop
sbb
lods
aad
or
test
leave
mov
sahf
lahf
fsubr
jl
inc
inc
insb
add
lahf
out
stos
sarb
ss
pusha
pop
or
jne
add
dec
xlat
addb
movsl
xor
pop
fwait
jnp
insb
cmpsl
orl
mov
mov
cwtl
lods
push
pop
scas
dec
lods
or
pop
aas
js
enter
into
fstl
sti
jb
xchg
sub
mov
jo
imul
cmc
sub
rclb
mov
mov
ret
add
inc
jbe
jns
inc
cmc
aaa
xorl
cmpl
sbb
adc
lock
mov
lret
out
cwtl
out
mov
addr16
sbb
or
pop
push
cwtl
repnz
mov
pop
sbb
in
fchs
loopne
repz
test
sbb
or
notb
arpl
and
pop
in
push
mov
fldcw
xchg
mov
jecxz
xchg
mov
lcall
iret
sbb
setae
jo
add
outsl
cmp
nop
push
dec
inc
shr
mov
shr
mov
iret
int3
cmp
pop
fbld
cmp
jmp
jnp
rolb
xchg
fwait
and
mov
and
mov
inc
mov
mov
cmc
mov
mov
decb
psubsw
cmpsl
ret
mov
jb
push
mov
mov
sub
ret
mov
repz
jae
ret
jae
jae
jle
cmpb
ret
call
adc
sub
ret
fadds
sub
pop
addr16
enter
fadds
jns
inc
push
mov
sub
insb
aam
int3
fsubrp
hlt
mov
mov
push
mov
movsb
test
arpl
std
in
mov
pop
das
mov
lahf
dec
add
xchg
loope
push
fwait
xchg
aad
adc
xor
mov
nop
jns
sbbl
add
cmp
mov
out
mov
popf
mov
and
mov
into
repnz
ror
add
aaa
test
int
shrb
jecxz
ss
xor
fndisi(8087
in
pop
imul
and
sub
bound
bound
cmp
cmp
in
pop
mov
push
mov
dec
xchg
std
mov
xchg
jp
arpl
inc
sti
mov
add
sub
add
outsl
mov
popa
gs
fwait
outsl
das
cmp
jo
repz
sbb
sahf
inc
push
mov
enter
scas
ficoms
ljmp
fs
jecxz
mov
xchg
rep
cmpl
sti
leave
jecxz
imul
xchg
jnp
scas
ja
jmp
test
push
imul
mov
push
push
scas
mov
dec
cmpl
lcall
cmp
cld
cmp
and
xchg
mov
push
and
loope
stos
push
add
leave
sarb
inc
push
jo
lahf
leave
fwait
xor
test
pop
and
lock
leave
fwait
inc
cmp
mov
sbb
jb
dec
lea
push
rorl
int
popf
mov
xchg
xchg
cmp
mov
push
leave
scas
adc
sub
aaa
xchg
jmp
mov
sbb
mov
pop
data16
sub
fwait
cwtl
leave
mov
mov
ds
cmp
aas
xchg
cmpsl
int3
mov
and
mov
cmpsl
mov
xchg
xor
jp
or
xor
sbb
sbbb
aaa
add
xchg
push
mov
int3
mov
movsb
loop
mov
xchg
and
sub
subl
scas
in
cmc
test
movsl
xor
and
aas
fidivrs
and
fists
sbb
gs
repz
js
and
fistpll
cmpsl
xor
pop
mov
insl
imul
jecxz
jnp
lods
mov
mov
shll
dec
jmp
mov
mov
xor
das
loopne
movsb
cmp
popa
addl
shr
sbb
ffree
lds
inc
add
dec
int3
jbe
push
or
loopne
adc
pop
roll
lret
aaa
jae
mov
ret
lret
addr16
and
jmp
push
jns
rcrl
ror
xchg
mov
cmp
incl
cmpsb
ret
mov
std
lods
das
fiaddl
and
and
xor
inc
pop
xchg
test
and
jmp
mov
jnp,pt
xchg
mov
into
dec
aaa
into
or
testl
cwtl
data16
xchg
imul
and
pop
test
fdivl
inc
jnp
dec
lea
mov
mov
mov
fwait
imul
jle
mov
subb
std
ja
xor
aas
shlb
adc
jle
stos
shll
aaa
jne
add
mov
enter
popa
add
jae
sbb
and
jle
bound
xchg
test
shrl
xchg
popa
jl
push
and
sub
push
clc
out
fldcw
outsw
data16
out
das
add
imul
adc
push
jae
scas
jmp
fwait
jecxz
aad
repnz
imul
push
xchg
dec
jne
add
je
or
cmp
imul
xlat
jno
adc
adc
cmp
jg
lods
mov
sub
nop
aas
sbbb
fsubl
fisttpll
out
popa
xchg
aad
mov
xor
cltd
jecxz
push
les
and
fldenv
sbb
jae
je
or
mov
test
push
out
cwtl
mov
fnstsw
push
fwait
mov
add
xorb
les
enter
jmp
xchg
mov
mov
or
mov
fwait
lcall
lahf
or
or
addr16
mov
sub
mov
jle
add
sub
push
jg
jg
gs
jno
mov
clc
jl
testl
loope
xchg
movsl
movsl
push
loopne
repnz
and
hlt
add
stos
sbb
dec
push
stos
scas
js
mov
dec
lds
fninit
jns
adc
insl
mov
mov
das
scas
pop
add
and
xor
dec
inc
and
jmp
lods
and
mov
fmull
rclb
mov
int
or
push
sti
or
mov
rcll
outsb
les
or
lods
mov
cmp
jns
and
jno
mov
mov
push
xorb
push
pop
jae
add
push
sbb
ret
mov
js
cmp
mov
jmp
xchg
add
clc
xchg
sbb
add
sbb
fwait
pop
jl,pt
aad
or
scas
xchg
sbb
cmp
rcrb
pop
out
in
jno
mov
cmp
in
movsb
mov
out
in
mov
adc
adc
fcompl
je
test
fdivrl
and
add
mov
sub
or
cltd
iret
in
pop
fwait
out
stos
les
sbb
or
jge
fimull
adc
add
in
clc
jl
jl
mov
mov
mov
lods
fxam
pop
iret
rolb
test
stc
adc
insb
mov
sbb
pusha
scas
inc
mov
js
jle
mov
sub
iret
mov
add
mov
iret
and
mov
jle
fstpt
lods
mov
push
xor
hlt
adc
pop
sahf
fwait
pop
addr16
mov
xor
das
scas
xor
icebp
push
xor
scas
xchg
xor
out
dec
mov
mov
push
arpl
sbb
lods
mov
sbb
fstpl
ss
cli
or
cmpsb
mov
adc
pop
test
fucomp
jae
fsubrl
test
data16
mov
in
sbb
dec
jns
in
fwait
lret
stc
push
mov
or
and
jo
leave
xchg
cmpsl
and
test
jnp
hlt
xchg
ffreep
fchs
inc
mov
push
xorb
push
aas
and
lds
adc
loopne
or
lahf
movsb
adc
jnp
movsb
pop
imul
inc
ljmp
lock
xchg
sub
xchg
lea
xor
cli
jns
inc
add
push
dec
rcrb
lahf
xchg
outsl
fisttpl
xor
push
daa
sti
mov
mov
mov
aam
inc
lods
lea
popa
sti
adcb
add
or
jl
in
lahf
xor
insb
aas
sbb
into
sbb
sbb
repz
and
jmp
lea
sub
and
shll
jno
icebp
jnp
push
mov
and
add
mov
fwait
jo
jecxz
xchg
dec
out
jmp
mov
cld
cmp
mov
jg
mov
addr16
jne
jne
out
cmp
mov
fdivrl
mov
sbb
loope
adc
or
add
mov
cmp
test
jno
xchg
mov
popa
cmp
and
mov
pop
fidivl
sarl
mov
mov
mov
mov
stc
movsl
jo
mov
jbe
xchg
push
loopne
test
daa
fmuls
popf
outsl
movsl
inc
add
aas
push
stc
cmp
into
or
test
push
test
sub
fimull
in
hlt
cmpsl
in
shll
aas
xchg
mov
fildl
xchg
dec
dec
notb
mov
mov
ja
adc
negb
lods
jno
fimuls
jl
sub
push
out
jl
movsl
adc
lods
testl
inc
or
dec
pop
std
sbb
mov
inc
and
fmull
mov
mov
test
cltd
push
mov
test
add
fmul
mov
pusha
sub
lret
xorb
xchg
inc
mov
jge
in
iret
scas
sbb
pop
dec
mov
and
xchg
jae
ja
mov
pusha
movsb
repz
cld
leave
mov
sbb
leave
mov
pop
or
fimuls
sti
and
pop
inc
push
addr16
xor
push
sub
mov
dec
cltd
into
push
push
pop
ret
lahf
push
mov
dec
fwait
stos
iret
rclb
add
cs
fidivl
mov
fwait
mov
jns
adc
stos
mov
out
fmul
mov
mov
xchg
sbb
adc
jo
jbe
cmp
out
fimull
ljmp
mov
pop
ds
inc
xchg
aaa
cwtl
ret
mov
xchg
or
decl
mov
and
movsb
outsl
xchg
jg
pusha
dec
test
xchg
push
loopne
stos
test
add
pop
jae
xor
mov
or
pop
fisttps
xchg
mov
sahf
in
jl
mov
stos
dec
sahf
lret
cltd
mov
jo
cmp
es
mov
add
test
faddl
ja
mov
test
add
inc
jno
sub
adc
enter
cmpsb
pop
xlat
popf
test
add
add
stc
fbld
mov
ret
into
push
stos
sbb
imul
aas
dec
inc
cmp
stos
negl
fs
xchg
outsl
mov
fldcw
hlt
cmp
fxch
mov
xor
imul
cmp
pop
jns
pop
mov
out
xchg
mov
adc
or
cltd
lods
in
rol
out
flds
sahf
push
mov
add
adc
je
push
adc
mov
scas
testb
adc
in
adc
std
sahf
gs
std
jno
mov
jecxz
cltd
sar
mov
adc
mov
lods
in
xchg
sub
clc
das
mov
pop
or
ljmp
daa
test
cmc
movsl
adc
in
mov
in
dec
push
pop
clc
jae
pushf
ds
int
mov
jae
xchg
mov
push
add
cmp
fwait
in
rorl
in
jo
inc
xchg
mov
jl
pop
ret
fdivrs
stos
imul
clc
test
lret
jl
xor
xor
pop
data16
sub
and
fwait
ja
pop
arpl
pop
bound
call
adc
in
adc
fistpll
in
add
sub
out
in
lea
leave
xchg
nop
dec
out
jge
test
scas
pop
ja
mov
mov
mov
js
aad
pop
fidivs
dec
popf
sti
xor
sbb
xor
adc
xchg
repz
lret
mov
mov
mov
fcmovu
out
mov
lcall
fidivs
push
iret
cltd
dec
mov
in
outsl
stc
mov
mov
or
jbe
mov
xlat
and
cwtl
les
sub
mov
mov
test
push
sub
out
adc
push
sti
call
jp
mov
mov
cltd
ja
sub
pop
enter
imul
fidivrs
push
ja
ljmp
fnsave
xchg
ja
imul
fadd
mov
xchg
add
outsb
push
scas
repz
pusha
test
in
mov
push
xchg
dec
jnp
movsb
push
sbb
cmp
test
fmuls
sbb
and
je
icebp
inc
xchg
test
adc
jg
sub
mov
stos
pop
fwait
pusha
pminub
xchg
dec
mov
mov
xchg
jl
xchg
and
jae
test
leave
ror
dec
jnp
jg
ret
dec
push
outsl
ljmp
adc
in
mov
xchg
lea
xchg
daa
push
mov
mov
adc
mov
mov
pop
push
pop
jmp
movq
sti
in
add
cmp
shlb
test
jns
cmpsb
or
jecxz
stos
mov
mov
push
loope
sub
test
lods
subb
rorl
pop
popa
fisttps
out
mov
and
hlt
test
mov
mov
mov
ret
adc
dec
pop
mov
cmp
xor
mov
xchg
rcl
mov
rorl
icebp
xor
jecxz
pop
test
dec
adc
inc
mov
and
js
fcmovbe
int
sar
sbb
pop
fwait
jge
popf
pop
ja
ss
lock
sub
mov
jns
sbb
jns
out
mov
icebp
xor
lds
mov
dec
inc
repz
mov
or
mov
call
sbb
lods
hlt
rcr
add
pop
pop
fnsave
outsb
sub
sbb
add
sub
cltd
loope
adc
sbb
fistpll
in
or
lea
call
mov
mov
push
pop
lahf
in
push
lret
in
add
dec
mov
lcall
pop
sub
pop
subb
enter
ds
mov
in
inc
loopne
add
mov
xchg
fimuls
mov
out
sub
push
lret
or
ds
hlt
mov
push
sarl
mov
fidivrs
test
adc
mov
mov
mov
loopne
sti
aam
cmpsw
jns
push
xor
pop
add
mov
aad
fidivrl
inc
aam
arpl
xchg
movsl
pop
loope
inc
js
data16
mov
add
sbb
int
add
push
stc
lods
and
mov
pop
dec
movsl
lahf
sub
inc
ss
stos
adc
dec
xor
mov
stos
jno
sar
mov
arpl
sahf
sti
fildll
iret
stos
jno
push
mov
cmpsb
in
arpl
test
mov
xchg
xor
test
call
mov
adc
jns
jnp
scas
lret
push
imul
push
sahf
jo
ret
mov
cmpsb
leave
fsubrs
xchg
fmull
jnp
cmp
test
mov
subb
jnp
mov
add
jns
pusha
jns
sti
fidivrl
mov
mov
cwtl
movsl
jns
sbb
stos
insl
and
das
cmp
jge
dec
roll
jp
test
insb
jbe
mov
mov
ret
js
sbb
xor
inc
cwtl
call
push
test
movsl
dec
cmp
sar
loop
arpl
lret
dec
imul
lea
nop
sbb
xlat
xchg
sbb
and
mov
jns
les
jns
inc
adc
ds
inc
dec
stos
jno
nop
lret
daa
dec
add
sarb
fdivl
pop
xlat
mov
pop
dec
fimuls
test
ljmp
cmp
loop
inc
ret
stos
push
adc
xchg
cmpsb
movsb
in
sti
jbe
loopne
push
xor
cmpsl
aas
pop
imul
fsts
ja
js
xchg
rcr
lahf
adc
dec
mov
mov
fistpl
mov
pushl
lret
test
pop
adc
mov
jecxz
adc
ret
xchg
inc
inc
scas
push
stos
shll
xlat
pop
xchg
js
pop
push
mov
xchg
or
xor
imul
lea
fnstcw
push
push
sbb
add
fmull
fstps
aaa
fistpll
mov
inc
inc
jg
jbe
out
sbb
fsubr
orl
leave
rcl
cwtl
imul
loopne,pn
or
cmpl
push
in
ffree
cmp
or
mov
js
fcmovnbe
movsb
sub
out
xchg
cmp
add
xchg
xor
jnp
push
test
pop
mov
aas
pop
push
xchg
pop
not
adcl
jg
cmc
leave
lods
pop
popa
and
push
xchg
sub
dec
cmp
xchg
iret
ret
fildll
mov
and
arpl
sub
dec
xchg
cmp
mov
and
adcb
fists
test
jle
out
xchg
or
imul
ret
fstpt
cmp
mov
repnz
mov
cwtl
xlat
fwait
cmp
iret
movhps
lcall
repz
xchg
enter
jne
mov
mov
mov
xor
jmp
neg
mov
jnp
dec
xor
push
fistpl
pop
sub
arpl
adc
mov
jo
or
fcmovbe
sti
lods
lret
pop
sti
push
adc
lods
mov
push
xchg
lods
mov
xor
jb
ja
test
lock
cs
lods
mov
mov
push
aam
test
jns
or
fdivs
jle
sbb
add
xorl
mov
ljmp
subl
andl
test
in
mov
cltd
dec
aad
cmc
add
mov
push
mov
mov
aam
stos
pop
aaa
loop
fiaddl
test
loope
ret
pop
mov
enter
in
or
dec
adc
jp
add
into
mov
fcmovnbe
cld
inc
into
or
cld
inc
aam
mov
push
fidivrl
sar
mov
outsl
imul
mov
jle
lret
loopne
jle
dec
jns
incb
mov
rcl
pop
inc
insl
pop
mov
enter
or
outsl
mov
loop
cwtl
mov
int3
or
xor
jecxz
ss
cmpsb
cmp
cltd
fwait
inc
fldl
push
jne
fidivl
loopne
and
dec
mov
sti
jge
xor
add
xor
ja
adc
sbb
sti
jg
mov
test
or
mov
xchg
pop
xchg
xchg
icebp
lret
xchg
adc
jnp
pop
xor
sub
lahf
jae
pop
out
cmpsl
mov
cmp
fcomps
cmpsl
add
fiaddl
shrb
repnz
lahf
cltd
pop
cld
xchg
imul
sti
mov
in
leave
xchg
orl
call
sub
leave
mov
add
jbe
mov
fisubrs
das
fnstcw
jns
jmp
or
repz
mov
pushf
out
or
mov
push
mulb
repz
add
out
les
jae
or
mov
scas
pop
jmp
mov
add
push
jmp
jb
scas
divl
mov
fidivrs
sub
dec
jecxz
dec
sbb
xlat
push
xchg
aad
or
sbb
lret
add
fwait
mov
xor
mov
decl
stos
lea
pushl
in
aas
fdivrs
jns
or
out
cmp
mul
repnz
loop
outsl
inc
mov
cmp
clc
repz
stos
xor
mov
decl
ret
pop
jp
ljmp
mov
iret
ss
in
sbb
loopne
lret
mov
sbb
das
jne
jg
shrb
jb
out
iret
pop
or
outsl
push
cld
cmp
xchg
xchg
adc
xor
mov
shl
mov
mov
push
push
jg
out
xor
fwait
cld
test
push
jg
mov
push
test
sbb
lret
lret
aam
shr
mov
mov
ret
ja
add
mov
ret
jo
xchg
dec
cltd
xchg
rclb
cli
out
ret
push
mov
lret
cli
les
lea
sahf
cltd
fisubrs
add
or
mov
pop
das
test
fwait
sub
in
daa
mov
push
inc
adc
loopne
mov
outsl
cmp
push
mov
fdivrs
sub
push
fdivr
scas
mov
in
pop
mov
cmpl
js
sub
stos
in
jge
xrelease
mov
mov
mov
lods
jmp
jecxz
aas
lret
jge
pop
xrelease
gs
aas
sub
in
inc
dec
bound
jo
xchg
imul
scas
and
jnp
iret
pop
mov
loop
sub
stos
mov
lret
or
fidivs
push
aas
xlat
inc
or
aas
out
add
xchg
call
stos
push
rorl
lahf
out
pop
jmp
aad
inc
inc
cmp
ret
mov
outsl
cltd
xchg
mov
dec
cmpsl
mov
insb
aam
xchg
out
fidivl
mov
jns
popa
int
lea
loopne
pop
jae
jecxz
adc
mov
cmpsl
ret
adc
xorl
in
stos
pop
push
adc
jb
lret
shl
push
sbb
cmp
mov
loope
mov
add
jno
cmpsb
fldenv
mov
xchg
insl
imul
xchg
fstpt
dec
hlt
pop
sub
test
ss
scas
jno
sar
mov
jae
mov
and
lret
push
mov
jne
fmuls
lds
stos
divl
adc
push
je
daa
repnz
mov
testl
rclb
pop
sti
stos
insl
movsl
or
pop
push
dec
cltd
jle
fcmovbe
xchg
cs
sub
sbb
fst
divl
lods
scas
fidivl
addr16
stos
jecxz
shrl
and
frstor
pop
insl
outsb
stos
shll
xlat
imul
insb
jg
jb
add
xor
xor
out
cmpsb
pop
jae
xchg
addr16
mov
xchg
ret
or
mov
shrl
shl
test
xlat
fsts
in
push
mov
in
aaa
mov
loope
jecxz
jns
lcall
ds
jns
stos
into
aaa
in
and
inc
sbb
add
ficompl
hlt
or
test
add
mov
mov
enter
mov
test
mov
pop
mov
xor
jne,pn
pop
sbb
lods
cmp
imul
repz
mov
xor
hlt
mov
dec
sub
lahf
mov
sub
imul
pusha
fildll
ja
sub
push
and
fdivp
adc
xchg
das
mov
mov
or
int
stos
fistps
clc
imul
push
cli
mov
sub
mov
shr
out
fiaddl
subl
xchg
or
inc
ret
inc
call
jne
adc
outsb
aas
lahf
add
jbe
dec
ds
xchg
xlat
mov
mov
vpsubsw
adc
push
bnd
imul
push
lahf
call
mov
pop
sub
fnstenv
scas
adc
movsl
or
dec
aam
sbb
aaa
mov
xchg
mov
mov
dec
inc
mov
scas
repnz
pop
jl
dec
je
and
push
lahf
xor
dec
inc
dec
add
lea
es
mov
andl
int
movsb
or
js
jp
lock
add
jl
jae
jecxz
fwait
jg
xchg
jno
in
and
and
xor
lods
jbe
push
cwtl
or
es
mov
cmpb
dec
adcl
or
jo
adc
ret
sbb
jnp
clc
jno
sti
push
flds
je
pop
mov
les
fwait
or
ret
inc
jnp
aad
push
xchg
mov
xchg
fdivs
push
xchg
int3
ss
ret
jge
mov
dec
stos
scas
rorl
pop
in
push
lcall
loope
push
xchg
mov
and
test
aaa
mov
inc
lret
jmp
clc
push
inc
xor
stc
fcom
movsl
xchg
fsub
xchg
pop
sub
jge
xor
pop
inc
xchg
rclb
inc
cmpsl
and
dec
dec
inc
jg
mov
fmull
cld
test
mov
inc
mov
aad
lds
or
sub
les
mov
dec
jae
or
ficomps
testb
sbb
fcompl
popf
adc
shll
jb
jne
xor
outsb
push
sub
ljmp
test
movsl
out
fcoml
out
mov
jge
flds
xor
test
pop
jg
scas
pop
aas
jne
lahf
loopne
movsl
mov
popa
jno
mov
js
pop
jae
inc
ds
lret
loopne
das
mov
xchg
jno
aaa
filds
mov
das
mov
out
mov
or
mov
ret
repz
lcall
sar
mov
xor
dec
imul
mov
call
fwait
xchg
xchg
and
loopne
movsl
mov
mov
mov
std
lret
pop
lahf
mov
sub
aas
adcb
out
dec
jae
inc
mov
sub
mov
dec
mov
jmp
cmc
fsubr
fwait
sbb
mov
push
aas
daa
and
lret
loopne
test
mov
fidivs
dec
sahf
cmp
mov
xor
imul
xorb
jno
and
xchg
push
hlt
das
sub
push
pop
xchg
add
pop
jno
xlat
lret
lea
aad
mov
xor
filds
xlat
fidivl
mov
fistl
stos
aaa
out
fisubrl
fadd
jmp
fdivrl
xor
repnz
enter
ret
in
sarb
adcl
das
mov
xchg
pop
lret
lcall
js
imul
xor
iret
jecxz
sbb
pop
mov
lcall
mov
jnp
test
dec
add
xor
out
ja
dec
xchg
aaa
push
mov
decl
test
inc
sbb
rorl
pop
push
sub
push
lds
data16
fnstcw
fisttps
imul
fbstp
shrb
xchg
dec
add
pop
or
push
jno
lcall
mov
imul
outsl
divl
iret
enter
push
mov
dec
push
in
and
sub
or
jne
add
xchg
inc
mov
adc
push
js
inc
jp
mov
fnstenv
xchg
jae
adc
xor
je
push
stos
in
fsubp
cmp
iret
icebp
ja
jne
xchg
rolb
aas
pusha
mov
sbb
add
inc
cmp
jno
fidivrl
fwait
pop
popa
xor
out
jmp
mov
and
mov
lret
mov
dec
or
in
outsb
out
jl
ljmp
cmpl
fisubrl
cltd
fisubl
mov
notl
add
add
push
push
sbb
in
fnsave
fsubp
push
fildll
jno
mov
xor
in
mov
or
sbb
movsl
mov
fidivrl
fdivl
fisubl
mov
outsl
jecxz
jns
mov
int3
clc
add
mov
mov
xchg
cmp
ficompl
sbb
sbbl
aaa
mov
mov
sti
mov
ds
lods
fisttpll
into
mov
out
jl
aas
xchg
jae
or
je
rcrb
in
jns
mov
mov
jl
or
jecxz
je
xchg
xchg
cmp
xchg
mov
fidivrl
cwtl
xchg
mov
fimull
jnp
mov
data16
jae
jno
pop
decl
push
leave
mov
mov
mov
xchg
push
inc
aaa
mov
or
push
or
xor
imul
jae
shlb
rorb
or
outsb
mov
adc
mov
arpl
mov
mov
mov
sub
imul
out
ljmp
xor
xor
lock
xchg
mov
xchg
xchg
subl
pop
inc
add
movsl
int3
dec
push
rcll
mov
mov
mov
loope
adcl
loope
mov
shll
push
call
in
mov
jbe
mov
pop
test
sahf
xor
mov
mov
mov
aam
std
fcmovnb
or
das
fxch
rcrb
mov
xchg
fsubrs
imul
loope
cwtl
stos
icebp
mov
xor
in
in
sti
inc
sub
icebp
mov
ror
lahf
aas
outsl
sbb
aas
mov
ret
and
jnp
pop
adc
test
jmp
mov
fwait
aas
imul
out
sbb
les
mov
and
cwtl
adc
popf
sti
test
jae
pop
xlat
stos
frstor
sarb
shrl
outsl
jg
stos
incl
push
xorl
adc
jecxz
enter
leave
xor
cmp
rcll
mov
cmp
xlat
lahf
imul
test
shll
sbb
mov
dec
jp
mov
jp
dec
and
repz
xor
movsl
test
mov
adc
sbb
bnd
mov
jp
mov
jp
mov
add
lds
xchg
sbb
fnstenv
rcll
fst
dec
adc
mov
ja
cmp
stos
jae
stos
jb
jno
pop
and
loope
mov
mov
cmp
jecxz
imul
jae
mov
iret
out
and
lcall
xchg
out
cmp
xor
adc
out
xchg
dec
push
pop
scas
arpl
out
xlat
pop
loope
loopne
push
mov
arpl
jnp
xchg
mov
xor
aas
fnstcw
jnp
shll
xor
mov
jmp
sti
pop
xor
jg
sub
adc
pop
jnp
xor
test
jnp
lret
insl
aas
jno
xor
jno
adc
dec
in
fmull
mov
cmpb
mov
inc
lds
dec
mov
out
fadds
out
jae
mov
and
stos
xchg
push
inc
adc
mov
mov
mov
fsub
sahf
lahf
jge
xor
adc
pop
sbb
xchg
int
clc
xlat
adc
push
mov
loope
mov
cmp
out
pushf
cwtl
push
sub
adcl
imul
lea
xchg
out
ffreep
cmp
mov
mov
xor
cwtl
es
mov
mov
outsl
in
jecxz
jp
push
and
or
dec
aaa
mov
ss
mov
mov
cmp
push
bound
xchg
lock
jg
imul
push
mov
loope
mov
fwait
jecxz
fisubrl
pop
mov
lahf
mov
jecxz
ret
push
push
cmp
adc
cmpsl
jmp
cs
into
test
xor
mov
xor
mov
sbb
pusha
xor
cwtl
filds
push
loopne
fcmovu
imul
int
out
das
mov
jmp
jno
mov
push
out
fwait
and
push
scas
dec
inc
dec
fists
sbb
cwtl
xorl
fbstp
fldt
subl
out
cmc
test
cmc
mov
ss
sbb
jecxz
ja
inc
test
test
gs
jmp
mov
in
mov
adc
xor
aad
ret
jl
imul
mov
outsl
dec
insl
imul
imul
mov
jb
xchg
rol
cli
and
sbb
jno
loope
xor
mov
outsb
fbstp
imul
pop
jae
jns
adc
mov
cmpsb
push
adc
js
shl
addr16
imul
mov
push
pop
dec
test
outsl
add
scas
sti
mov
xchg
mov
push
loope
mov
mov
imul
add
inc
lahf
cwtl
xlat
popa
mov
ret
imul
jnp
inc
pop
mov
lea
cmp
aaa
mov
or
insl
push
out
jb
push
fsubrp
stos
mov
sbb
xchg
adc
jno
and
stos
pop
xchg
mov
inc
inc
out
sub
sub
ret
mov
imul
mov
mov
int3
jmp
jb
aad
pop
bound
lock
jp
sbb
pop
mov
insl
or
or
nop
mov
fwait
mov
xor
test
cmp
ret
jmp
insl
mov
es
imul
aaa
test
cmpsl
mov
insl
lahf
xchg
shrl
pop
xchg
das
lahf
push
sub
jb
lea
and
xchg
or
fwait
mov
jecxz
pushf
mov
xchg
jb
jns
mov
push
cmpsb
cltd
insl
in
inc
test
mov
jno
icebp
or
mov
push
testb
stc
cmp
mov
sub
pusha
push
hlt
dec
sub
aam
lcall
test
jp
xor
jno
rol
mov
insl
mov
ja
mov
push
icebp
test
push
hlt
icebp
mov
fisubs
adc
xor
or
fnstenv
xchg
push
jae
jg
imul
dec
sub
xchg
jno
inc
fidivl
adc
loopne
fisttps
dec
jmp
cmp
cmpb
repz
rol
lcall
add
pop
xchg
pop
movsb
nop
jno
outsb
or
lea
fucom
in
jae
xchg
mov
adc
pop
jb
inc
lock
inc
jp
pextrw
jbe
in
xchg
test
mov
mov
mov
xchg
adc
xlat
loopne
xchg
testb
mov
mov
outsl
mov
and
imul
mov
push
scas
inc
ja
xchg
mov
push
pop
call
xchg
pop
iret
lcall
mov
pop
rol
jg
jo
jl
mulb
sub
xchg
push
das
jbe
cmp
ficomps
scas
mov
cli
mov
pushf
loop
enter
jmp
aas
xor
mov
push
fldl
into
jge
insb
dec
jl
dec
mov
int3
clc
jecxz
xchg
aad
fldt
jnp
out
jo
xchg
daa
lahf
data16
mov
sarb
shll
jno
fsub
imul
clc
ja
jo
push
xchg
test
or
inc
xchg
daa
lds
mov
test
test
mov
out
cwtl
mov
mov
xlat
xchg
ret
inc
or
lds
lret
fnstcw
xlat
mov
inc
rorb
xor
mov
jle
mov
xor
sub
and
out
enter
stos
push
out
stos
sti
loop
ror
into
lret
dec
mov
mov
mov
dec
xchg
pop
sti
pop
scas
push
inc
sub
fisttpll
pop
xchg
xor
xchg
lahf
mov
jge
xchg
fwait
insl
lret
ret
xchg
ljmp
or
mov
mov
jo
shlb
sub
xchg
dec
xchg
mov
pop
roll
je
call
movsb
jmp
fcmovbe
adc
push
mov
sbb
mov
mov
insb
sbb
cmp
fcoms
jle
enter
xor
mov
or
xor
xor
iret
mov
cmp
sbb
outsl
mov
sarl
andb
sbb
out
mov
sub
pop
fwait
cli
adc
popf
push
sub
xor
mov
or
stos
or
mov
arpl
cmp
cmp
xchg
movb
repnz
stos
pop
mov
sbb
xchg
pminsw
pop
pop
pop
clc
xchg
popa
addl
mov
test
xchg
fcmovne
sbb
lret
into
mov
clts
xor
mov
jle
enter
mul
xchg
inc
pop
mov
jae
mov
rorl
les
ret
mov
shll
in
inc
fsubrl
aaa
mov
daa
imul
pusha
fstl
xchg
outsb
xchg
xchg
fxch
aaa
xor
shlb
mov
mov
pop
imul
mov
mov
vcvtsi2ssl
cmp
inc
adc
fcomi
mov
push
mov
filds
leave
pushl
repnz
sub
pop
jge
sbb
sbb
pop
es
mov
mov
aam
aas
mov
push
aad
test
aad
loop
sub
stc
test
add
xchg
arpl
lea
jg
testb
pop
shll
cmpsl
mov
lea
and
cmpsl
pop
pop
mov
in
and
dec
pop
xchg
adc
xchg
cli
adc
jecxz
xchg
jge
cwtl
jae
jmp
push
insb
jbe
mov
jae
sarb
mov
out
ficomps
nop
lahf
pop
fisttps
mov
mov
pop
lds
loop
or
lret
and
sbb
adc
xchg
mov
shrl
out
inc
jge
pop
mov
loopne
ret
popf
int
add
jge
push
jns
xchg
test
push
std
mov
jbe
sbb
jns
jp
mov
clc
lret
add
or
mov
lahf
mov
sbb
add
sub
xchg
ja
ret
xor
cmp
jnp
out
stos
cmovae
xchg
mov
jne
jae
cltd
pop
push
insb
push
ljmp
adcb
stos
loopne
xlat
stos
push
aam
mov
cmp
ja
mov
push
dec
mov
outsl
inc
mov
jl
jmp
aas
xor
lock
pop
fwait
pop
jb
outsb
arpl
mov
je
es
inc
pop
push
sub
aas
mov
sti
fsts
push
cmp
lret
test
cmp
shlb
outsb
sub
add
sahf
loope
xorl
mov
mov
daa
test
leave
jge
jmp
daa
jle
test
popf
scas
into
iret
cwtl
fists
or
leave
jecxz
pop
add
aas
push
mov
push
jb
cli
lahf
lret
jne
jno
lock
mov
add
jmp
jmp
pusha
sbb
adc
xlat
cwtl
push
mov
mov
lret
in
push
fisttps
loopne
mov
mov
movsl
stos
shll
xchg
pop
mov
imul
addr16
mov
jo
sbb
mov
mov
or
test
and
mov
pushf
push
test
xlat
fcompl
stos
cli
stos
mov
fldt
jne
leave
mov
push
movsw
lret
sub
xchg
mov
jne
loopne
lds
jge
lods
sbb
jne
add
xchg
xchg
xor
int
jo
push
leave
dec
pop
loopne
mov
aas
cmp
lods
jns
and
adc
ret
ja
cwtl
jns
mov
leave
mov
fstpt
fidivrs
xchg
scas
aaa
and
xchg
ljmp
ficomps
push
jno
das
jae
and
subb
scas
sbb
scas
iret
mov
lods
ds
inc
stos
jge
jae
mov
rclb
jno
in
add
sub
push
fildl
jecxz
das
test
js
dec
addr16
call
in
scas
dec
jecxz
cmp
ret
loopne
imul
test
inc
or
scas
ds
jg
xchg
fucomip
mov
add
ds
jo
pop
xorb
mov
shlb
pop
mov
pop
clc
add
ds
mov
pop
sbb
cmp
lock
daa
xor
jne
repz
mov
inc
and
xchg
sbb
call
sub
out
je
dec
jnp
or
and
dec
adcb
push
xor
jb
movsb
lds
fidivs
push
in
mov
sub
fnstenv
lahf
out
and
sub
imul
cmpsl
jecxz
int3
mov
pop
push
aaa
in
aas
std
fists
fisubrl
dec
pop
mov
lcall
cmp
imul
aas
jae
push
or
xchg
imul
jmp
fidivs
xchg
push
insl
jg
or
mov
lret
iret
fwait
lret
je
fistl
jecxz
mov
xchg
in
or
xchg
stc
mov
sahf
inc
mov
xchg
sbb
dec
cltd
xchg
aaa
loop
mov
xchg
mov
pop
mov
ror
shrl
mov
lods
mov
mov
mov
mov
dec
sti
pop
jecxz
sub
arpl
stc
stos
mov
dec
repz
xchg
addr16
iret
ljmp
mov
clc
sub
push
pop
push
fisubrl
pusha
mov
mov
mov
or
sub
lret
xchg
out
cmp
mov
fcom
jle
aam
je
lret
xchg
dec
nop
sub
add
jl
xchg
cs
stos
icebp
mov
iret
cmp
pop
xor
addr16
or
into
scas
mov
fidivrl
jg
lahf
xchg
enter
fmull
movsb
adc
add
mov
scas
dec
mov
xor
shl
loopne
loope
jnp
cmpl
jecxz
sarb
xorl
fimuls
jl
xor
pop
sbb
jecxz
and
iret
add
jg
push
out
pushf
push
in
sub
dec
cmp
inc
repz
pop
daa
pop
jne
rcll
mov
xchg
ljmp
mov
data16
aas
stos
repz
imul
jne
ror
mov
mov
rcrl
jmp
pop
lret
sub
sbb
je
mov
mov
shl
jecxz
loop
rorl
test
add
int
mov
sbb
xchg
inc
in
pusha
pop
ljmp
sti
or
pop
xor
and
aaa
lret
jp
enter
lds
out
jmp
mov
jle
lock
push
cmp
mov
jae
jecxz
inc
fcmovnb
sahf
cld
lods
dec
xor
sub
jmp
lcall
xor
push
fcmovnb
bound
sbb
bswap
push
pop
loopne
mov
or
mov
cmp
jecxz
sbb
scas
push
mov
or
mov
jge
stos
gs
mov
cwtl
mov
in
or
xchg
pop
inc
lahf
outsl
sbb
stos
test
jnp
xchg
push
cmp
sub
stos
mov
imul
push
call
mov
or
mov
cmp
inc
adc
cwtl
lds
push
or
sub
push
stos
and
jnp
and
jnp
gs
stos
in
ss
stos
mov
sbbl
lret
jge
gs
and
test
and
in
mov
and
mov
mov
pop
call
add
inc
movsb
lock
jns
lcall
mov
punpckldq
or
mov
ljmp
jge
movsl
or
mov
movsb
jle
mov
dec
loopne
inc
jl
cmpsl
out
sub
pop
fs
bound
mov
fnstcw
dec
dec
test
stos
sti
movsb
jge
jo
jns
sbb
stos
add
or
test
adc
ficomps
sbb
and
mov
xchg
or
mov
jge
call
test
and
lods
sti
cmp
and
jno
stos
lahf
cmp
xor
mov
addr16
les
mov
test
pusha
mov
jge
adc
mov
test
in
mov
jmp
mov
inc
xor
insl
aaa
outsl
mov
jne
or
dec
push
aad
xchg
pushf
sub
push
push
int
daa
inc
mov
popf
adc
lret
les
sub
aad
loopne
and
data16
in
jno
shll
sbb
lods
jne
xor
pop
ja
fnstcw
jns
push
iret
lds
sub
cltd
into
inc
jnp
test
jnp
pop
into
lock
out
ja
test
and
loopne
aad
jb
xor
or
or
fnstsw
jae
loopne
lahf
nop
popf
mov
ja
pop
repnz
and
lret
pop
mov
ja
add
mov
lahf
or
fisttps
mov
pop
repz
jns
or
fwait
mov
mov
in
mov
mov
ss
add
mov
out
mov
xchg
sbb
mov
xchg
stos
jns
adc
loope
mov
xor
mov
pop
and
and
pop
fistpll
adc
sarl
and
and
mov
out
ret
xchg
xor
scas
negl
lock
pop
mov
xchg
ja
adc
lahf
shl
enter
mov
and
in
loop
movb
roll
mov
insb
mov
pop
xor
out
push
mov
mov
add
push
or
shrl
inc
fwait
mov
jnp
or
icebp
pop
jno
bound
pop
jmp
dec
loop
shlb
mov
lods
jecxz
mov
cmp
imul
jnp
shll
mov
std
fidivrs
or
adc
sub
js
icebp
and
dec
jno
adc
xor
lcall
fisttpl
aad
test
sub
cltd
push
lcall
ja,pt
mov
loopne
shrl
mov
fisttps
scas
inc
out
shrl
test
enter
fwait
xchg
push
push
aam
inc
lahf
adc
int
jne
add
loope
mov
fistpll
ds
or
dec
cmc
adc
mov
loope
xor
test
jp
xor
sbb
adc
sub
mov
stos
stos
sbb
in
ret
add
sarb
js
in
jae
mov
mov
xchg
arpl
cs
inc
jno
pop
jge
xchg
sub
js
hlt
mov
sub
sub
mov
and
push
pushf
jns
xchg
in
test
jecxz
lock
or
fldcw
aam
xchg
xor
mov
in
mov
mov
rclb
mov
ret
mov
fidivl
dec
mov
add
imul
aad
inc
pop
xchg
aas
lret
mov
mov
xchg
sbb
dec
aaa
call
mov
dec
push
sti
xchg
xchg
rorl
ja
xchg
fstps
test
push
add
cmp
add
mov
mov
jecxz
inc
sub
cli
aaa
mov
add
pop
mov
pop
notb
mov
pop
sub
push
stos
cltd
mov
into
xor
pop
test
cltd
mov
fidivrl
add
add
mov
mov
test
fsubl
add
mov
sbb
mov
lea
stc
lcall
stc
mov
pop
or
jl
shll
xchg
aas
aad
dec
stos
pop
push
fwait
cmp
lret
sub
outsl
ljmp
fisubl
mov
mov
bound
or
dec
scas
inc
or
cltd
sarb
push
adc
shl
or
test
mov
test
out
sarb
ror
cmpsl
push
sub
movsl
psrlw
mov
inc
push
pop
xchg
mov
pushf
test
fdivrs
imulb
pop
jo
pop
mov
or
jmp
ja
lock
jbe
mov
js
jge
mov
or
jnp
shl
and
insb
jp
pop
lds
repnz
inc
ret
fucomip
mov
mov
xchg
repz
loopne
sti
repz
lods
adcl
adc
xor
arpl
inc
mov
sbb
xchg
sbb
mov
push
aad
and
lahf
xchg
fsincos
push
mov
fistpl
jmp
out
pop
lds
pop
dec
ss
aam
loop
enter
add
xchg
mov
xchg
sarl
xchg
mov
inc
or
mov
in
jge
clc
inc
mov
cmpsb
lret
mov
lret
jecxz
or
sub
cmp
out
sub
cmp
arpl
mov
or
mov
xchg
sub
neg
jb
xor
movsl
leave
fwait
xlat
shrl
mov
sbb
stos
in
mov
imul
into
push
inc
std
jnp
fwait
sahf
fistl
std
stc
jge
ja
lock
adc
fildl
test
imul
xor
cmp
jge
sahf
pop
sub
neg
and
insl
fs
mov
adc
push
push
insb
or
or
aaa
mov
or
bound
int3
mov
push
sbb
movsb
addr16
fcomp
mov
lret
jno
ja
enter
mov
inc
pop
push
and
mov
jnp
ljmp
add
adc
ret
mov
inc
and
lea
je
pop
xor
sbb
push
mov
es
push
in
push
mov
pop
mov
sbb
mov
aas
mov
into
scas
adc
into
push
int
sbb
std
or
pop
jp
push
mov
loope
xor
sub
pop
fiadds
imul
and
sub
loopne
rolb
and
stos
das
stos
cld
sarb
cmp
daa
ficoms
in
xor
xor
lret
sbb
xor
ja
pop
add
dec
je
mov
pop
push
test
stos
in
out
sbb
adc
xchg
movb
cmp
jne
push
clc
and
mov
cmp
xchg
mov
ret
stc
ljmp
jg
lods
test
sarb
jno
lcall
popl
jns
fcmovu
push
stc
jae
int3
ds
fwait
mov
push
pop
mov
cmpl
mov
mov
inc
mov
jne
test
inc
inc
leave
mov
out
mov
jo
jl
pushf
sbb
mov
cmp
push
movsb
shl
sub
mov
std
jecxz
aam
xor
mov
rcrb
xchg
cltd
sti
rorb
or
lret
dec
cmp
andl
push
xlat
cmp
jecxz
mov
or
lods
jae
dec
push
shrl
in
push
fmul
sbb
push
fs
or
ljmp
stos
or
cmp
ds
ds
cltd
sub
adc
mov
insb
daa
mov
cmp
stos
test
call
insb
fstl
push
sub
lahf
mov
pop
mov
push
hlt
fsubrs
popl
rcll
lahf
push
jecxz
add
fildl
dec
loope
xchg
mov
ret
insl
mov
mov
rorl
mov
pop
insb
rorl
add
and
shll
sti
xor
and
nop
pop
aam
dec
jae
pushl
sbb
into
add
sub
lock
in
jecxz
fcoml
xchg
stos
aad
int
inc
push
cld
loopne
into
mov
fsub
fdivl
dec
and
js
jae
in
test
ret
mov
mov
les
fldcw
inc
nop
ja
mov
xor
ret
sbb
or
push
dec
lods
or
aam
and
mov
lods
jl
adc
in
jns
add
les
stos
mov
test
call
mov
fwait
inc
lock
rolb
dec
sub
mov
mov
fwait
pop
jae
ds
fnstenv
outsl
outsb
loop
xchg
in
nop
mov
fwait
nop
stos
xchg
out
jns
gs
jns
xorl
mov
jae
sbbl
sbb
aas
fs
outsl
ljmp
test
mov
sub
fcmovnb
into
mov
jl
xchg
jge
ljmp
jno
xchg
mov
loope
fists
xor
xor
call
ret
ds
mov
fsubrl
cmp
pop
xchg
push
adc
cmp
mov
cmp
sahf
jb
jg
bound
push
jnp
jecxz
cmpb
mov
lret
dec
dec
sti
nop
movsl
mov
out
push
lds
pop
lods
pop
jb
cmp
mov
lock
psubb
xor
sti
mov
mov
iret
and
loope
loope
or
ror
dec
inc
cmp
test
sbb
sbb
jg
inc
cmpsb
cmp
cltd
ret
aam
jmp
fdivs
inc
jae
jge
mov
mov
dec
jecxz
or
fistpll
loope
pop
and
cmp
rorl
mov
pop
sbb
sub
push
jb
fistl
jge
jno
xor
jnp
in
cmc
add
in
movsb
xor
lcall
cmp
xlat
inc
sbb
ret
xor
xor
xor
inc
decl
stos
and
arpl
xor
mov
inc
pop
rorl
jmp
icebp
enter
into
leave
jle
xchg
jmp
cs
pop
jcxz
pop
enter
mov
and
hlt
je
jns
test
push
stos
sbb
sub
lods
jecxz
pop
mov
push
jl
sbb
movsb
rcrb
cmpsl
in
jns
push
push
sbb
pop
data16
mov
fxch
xchg
in
add
xchg
in
leave
push
adc
add
orl
imul
jnp
or
push
pushl
aam
push
mov
push
cmp
jmp
stos
imul
aam
fisubrl
xchg
sahf
outsl
imul
or
fdivrs
filds
push
fs
addl
lahf
popa
xchg
mov
mov
bound
jb
fstpl
fsub
lods
mov
dec
xorb
pop
je
mov
xor
mov
dec
lds
add
fisubrs
add
nop
jnp
scas
pextrw
mov
mov
cs
data16
sub
jns
push
outsb
jae
adc
addr16
cmp
pop
sub
pop
push
mov
dec
jg
mov
pop
test
mov
ja
inc
repnz
inc
std
and
lea
lcall
outsl
mov
ds
test
into
or
loope
pop
dec
int
jecxz
cli
cmpsb
leave
xchg
dec
movsb
jo
fs
and
cltd
aad
dec
mov
fwait
out
and
or
kmovb
dec
push
mov
xor
mov
or
jp
xor
fisubrl
jecxz
jo
push
sub
sbb
pop
mov
sarb
mov
jl
call
call
xor
mov
jae
pop
subl
or
pop
push
in
icebp
and
mov
xor
jne
xor
aas
xchg
stos
cmp
jmp
cmp
fdivrl
shl
out
adc
jecxz
aas
in
sbb
pop
ds
mov
rcr
hlt
jp
int
mov
rorb
mov
leave
adc
fstps
arpl
loopne
and
jecxz
xchg
sbb
les
mov
add
jge
shlb
adc
mov
leave
int
out
jae
cmp
and
out
mov
or
mov
fcmovnbe
push
sub
xor
jmp
or
cmp
pop
fisttpl
inc
mov
mov
popa
mov
xchg
int
jnp
test
jge
cmpsl
jl
jns
in
sbb
sub
stos
dec
push
lods
loopne
sub
xchg
fcmovnb
xlat
into
pop
out
mov
fwait
clc
sbb
xchg
xchg
pusha
mov
es
out
sti
inc
aaa
mov
xchg
and
outsl
inc
pusha
jmp
mov
sahf
jb
or
iret
dec
mov
mov
adc
dec
aaa
pop
sbb
fsubp
insl
or
je
movsb
mov
mov
fiadds
mov
jle
ret
insl
out
rorl
jmp
into
in
lods
lahf
lea
mov
xchg
mov
push
stc
adc
imul
jge
mov
leave
outsl
pop
outsl
mov
les
ss
punpckldq
lods
cmp
jno
stos
es
jns
sub
xchg
jg
xchg
sub
cmp
jg
cmc
sti
stos
jns
ljmp
cmp
leave
add
fwait
aam
pop
insl
cmp
imul
stos
cmp
xlat
inc
jge
lea
sbb
sbb
cmpsl
push
mov
inc
pop
out
jg
and
dec
daa
jecxz
or
lds
xor
mov
in
sub
fistl
scas
adcl
stos
movsb
std
push
jecxz
and
mov
xchg
xorb
ja
fistl
jp
cmp
xor
fiadds
inc
orl
push
popf
dec
cmp
inc
sti
xor
pop
rorb
shrb
and
cmp
out
loopne
add
cmp
fmuls
fucomi
aas
or
divb
and
fcmovne
jecxz
lcall
xchg
arpl
lea
es
jno
int3
or
cmp
addr16
imul
test
imul
cmp
xchg
jbe
or
aad
shr
add
xchg
sub
stos
test
int
xchg
sub
or
stos
lds
sbb
xchg
cld
push
fdivs
xchg
dec
into
mov
sub
das
jp
mov
mov
repz
push
fcoml
or
imul
or
clc
jp
addr16
stos
jge
push
sub
out
test
orl
repnz
insl
int
cmp
jns
imul
lds
sbb
cmpsl
fs
mov
iret
pop
stos
test
test
lds
jns
xchg
and
lods
stos
std
lods
out
pop
push
pop
mov
mov
pop
jle
or
lods
jnp
andb
pop
insb
outsl
add
mov
pop
mov
or
out
jno
sub
sbb
mov
data16
fists
negl
add
lcall
jg
adc
mov
jae
movsb
enter
stc
movsl
mov
in
out
push
and
push
cmpsb
mov
iret
sti
movsl
das
test
push
xchg
add
pop
test
cld
cmp
in
or
fwait
jno
or
mov
mov
imul
mov
sti
js
pop
aad
pop
rcrl
pop
cmp
mov
and
jo
shrb
and
aas
xor
mov
pusha
mov
lods
cld
aas
cmp
int3
dec
cltd
inc
mov
dec
sub
sarl
mov
sub
jnp
iret
cltd
sahf
stos
jo
cs
mov
test
fdivrl
sub
mov
mov
xor
and
xor
imul
mov
adc
pop
ret
aas
mov
jnp
lret
sub
and
inc
pop
and
add
pop
mov
stos
scas
adc
jns
adc
iret
xor
cmpsb
mov
mov
jns
fisttpll
dec
dec
lahf
inc
mov
roll
in
std
jo
out
scas
sti
mov
xor
outsl
pop
hlt
aam
xchg
sti
mov
dec
stc
mov
outsb
ret
mov
dec
jnp
popa
mov
imul
sbb
or
sbb
lods
dec
mov
ret
push
movsl
ret
sbb
dec
mov
cmpsl
push
lea
xchg
es
arpl
int
sbb
fldt
nop
sbb
jbe
xchg
fnstenv
int3
add
lods
mov
jno
cmp
mov
xchg
mov
mov
pushl
fldcw
cmc
in
loope
xchg
mov
imul
mov
mov
sub
loope
pop
lds
ljmp
ljmp
ljmp
stos
mov
out
out
jnp
dec
cmp
mov
fidivrl
jnp
jg
stos
outsl
and
hlt
xchg
lea
fnstcw
cltd
outsl
jge
jae
inc
scas
fstpt
and
imul
mov
ljmp
dec
bound
sub
movsl
or
test
jae
and
jae
push
add
mov
xchg
stos
mov
xor
dec
mov
lds
mov
push
push
xchg
out
lds
popf
fnstcw
in
sarl
out
clc
or
nop
xchg
mov
mov
and
jnp
xchg
imul
outsb
ljmp
inc
into
jno
movsb
stos
stos
in
mov
and
jns
jno
js
xchg
popl
xchg
lods
ss
dec
jmp
mov
xchg
jo
jno
hlt
sbb
das
fidivrl
jnp
sarl
jge
lret
pop
mov
imul
fdivr
push
mov
push
and
rorl
jl
jge
cli
pop
filds
iret
pusha
mov
jg
and
dec
add
arpl
test
int3
mov
fwait
mov
iret
scas
lea
data16
dec
mov
es
daa
mov
addr16
data16
pcmpeqw
js
jns
iret
xchg
push
jns
fadds
lods
hlt
mov
stc
jo
push
xchg
stos
inc
pop
mov
sub
push
mov
loope
add
xchg
dec
ret
mov
iret
dec
cmp
fnstenv
aas
sub
fisttpll
mov
lds
push
mov
mov
popf
mov
jno
push
icebp
repnz
jmp
mov
pusha
mov
fldt
test
mov
pop
sarb
inc
sti
add
xor
loop
je
push
mov
outsl
fnstsw
sahf
mov
ja
dec
fldt
add
in
inc
lods
add
mov
pop
frstor
lods
outsb
add
or
lods
outsl
sub
dec
clc
imul
push
or
adc
mov
jmp
sub
insl
les
enter
jecxz
xchg
mov
mov
xorl
mov
dec
cmc
fidivl
mov
mov
es
jno
push
dec
sbb
jno
imull
insb
mov
test
loopne
dec
jno
fildll
cli
dec
cmp
fbstp
cmpl
lods
push
add
dec
xor
dec
or
into
repz
mov
or
sar
clc
or
add
int
iret
test
mov
mov
in
xchg
outsb
cs
mov
lea
lods
mov
mov
push
pop
mov
mov
popf
js
iret
pop
xor
dec
stos
xor
add
push
xor
fdivl
lds
adc
arpl
sbb
mov
sbb
jo
lds
fidivrs
dec
shrb
jmp
aad
or
pop
ljmp
hlt
cmp
ficoms
int3
dec
out
outsb
stos
lret
repnz
pusha
js
bound
jbe
sbb
xlat
xor
jae
hlt
dec
mov
adc
ja
xor
push
loope
stos
mov
cmpl
fdivp
mov
jecxz
pop
lods
jl
add
repz
aam
sarb
dec
in
inc
xor
enter
aam
mov
out
mov
lret
push
btc
iret
jmp
and
sub
mov
push
in
jbe
lret
fs
push
leave
lret
mov
xor
add
add
mov
add
fwait
lret
mov
mov
rcll
aad
lret
int3
lret
fs
stc
ja,pn
aas
xchg
jb
in
scas
xchg
xlat
xchg
je
movsl
pop
out
inc
insl
sti
repnz
inc
xor
fucomi
pop
mov
xlat
add
mov
in
jnp
mov
jnp
mov
push
pop
xchg
mov
push
cmc
xchg
je
bound
adc
xlat
inc
and
xor
cs
aam
and
jge
push
pop
not
jnp
scas
popf
xchg
inc
xor
and
rcrl
xlat
orb
push
cmp
in
jle
mov
mov
mov
in
cwtl
ficompl
xchg
mov
sbb
mov
je
repnz
repnz
pop
scas
sbb
and
stos
dec
test
test
sbb
std
into
lret
rcll
mov
lds
push
xchg
fidivl
lcall
mov
xchg
int3
das
outsb
sub
repz
and
leave
cmp
mov
adc
jne
ss
dec
xlat
fninit
push
xchg
iret
test
dec
mov
xlat
cmpsb
ret
mov
popa
cmp
int3
or
push
fisttpl
stos
out
nop
je
mov
or
mov
stc
outsl
insl
mov
adc
pop
inc
mov
adc
add
lret
fdivs
loop
mov
lock
push
aas
mov
xor
lods
mov
stc
gs
shl
pop
ds
loop
mov
iret
sbb
fldl
cmp
out
xchg
pop
cmp
adc
add
gs
pushf
lods
mov
loopne
lods
stc
jno
xor
xlat
cs
mul
xlat
mov
mov
bound
data16
xchg
inc
push
scas
push
xchg
movsl
mov
dec
mov
iret
icebp
mov
xor
inc
mov
ficoml
out
xchg
dec
cltd
jg
mov
mov
add
mov
mov
add
sub
popa
repz
jle
mov
sub
pop
mov
or
aaa
dec
xchg
jge
pop
add
xlat
jnp
xchg
lahf
cmc
test
fwait
jne
adc
sub
popa
in
xor
roll
pusha
inc
call
mov
cs
scas
xchg
adc
sub
mov
mov
ret
jb
push
adc
cwtl
mov
out
xchg
lock
daa
jae
daa
in
mov
pop
ud0
insl
jg
inc
jecxz
mov
clc
mov
orl
adc
jae
stos
cmpb
or
ss
xorb
jnp
mov
xor
stos
sbb
fidivrs
mov
sub
fstp
dec
lods
fdivl
loopne
sahf
lea
mov
insb
cmp
mov
stos
jmp
sbb
addb
imul
mov
jecxz
or
out
lret
jns
pusha
jns
sti
mov
mov
or
je
imul
leave
jecxz
jne
les
stos
test
test
push
adc
pop
jecxz
mov
sbb
adc
repz
mov
sub
dec
fildll
xchg
jne
test
mov
sub
insb
cmp
cwtl
loopne
sub
in
jo
inc
mov
add
or
sbb
mov
int3
int
sbb
or
flds
xorb
jno
fdivrl
xchg
xor
int
cmpl
stos
das
xchg
cmp
and
adc
aad
lahf
shlb
cmp
jno
in
jp
cmp
loope
xlat
and
jns
lcall
mov
fsubl
adc
cmp
jg
mov
movsb
jb
add
test
cmp
push
sahf
jae
sub
push
xchg
cmp
stos
idivb
fisttps
cmpsl
lea
xchg
fidivrs
xchg
scas
push
sub
outsb
cli
cmp
pop
lods
hlt
jecxz
or
cltd
add
les
sub
es
and
inc
xor
inc
mov
mov
pop
sub
pop
fidivl
xorb
fwait
mov
sarb
pop
repz
sbb
or
cmp
cmp
and
push
stos
dec
insb
mov
sahf
ljmp
loopne
orl
xlat
inc
jecxz
jae
pushf
or
and
jne
cs
mov
scas
rorb
mov
xchg
pop
xor
jge
inc
ja
xlat
lock
xor
xchg
push
lods
in
mov
enter
sub
mov
fistps
jge
in
mov
dec
pop
pusha
mov
loope
scas
lods
rcll
xchg
mov
ret
push
test
jg
mov
std
xchg
movsb
imul
sub
jg
scas
or
jp
mov
enter
fcomp
insl
xlat
lcall
xor
mov
jp
mov
mov
mov
test
jb
push
xchg
daa
or
push
push
lret
aam
mov
addr16
dec
mov
jne
lods
data16
js
scas
std
mov
add
ljmp
loop
fcmovne
in
lcall
xor
lds
inc
pop
jae
mov
xor
sarb
fs
and
inc
out
and
xor
sbb
jae
mov
and
cmc
dec
cmp
imul
cmp
pop
pop
push
fwait
stos
aad
cmpsl
inc
inc
sti
aad
mov
mov
test
insl
or
mov
pop
roll
push
loopne
push
mov
add
mov
dec
add
mov
sbb
jp
and
mov
mov
jge
sti
adc
or
ja
mov
popa
repz
cmpsb
inc
xor
jecxz
dec
mov
jo
pop
andl
idivb
imul
je
enter
or
mov
lea
mov
inc
dec
adc
jecxz
cmpb
sub
adc
push
rolb
pusha
test
ds
jl
dec
adc
mov
stc
mov
pushl
scas
out
xchg
pop
or
jmp
in
mov
mov
ss
test
pop
inc
xchg
shlb
or
loop
outsl
xchg
push
out
jae
mov
adc
repz
dec
and
push
enter
or
loopne
repz
dec
mov
mov
popa
jne
cmp
aas
mov
fisubrs
jecxz
cmp
jge
nop
lds
fwait
addl
cltd
loop
mov
loopne
dec
negl
stos
rol
int3
adc
xor
scas
and
mov
addl
in
jb
outsl
and
insb
xchg
cmp
adcb
xlat
loop
mov
enter
xlat
xorl
enter
test
xchg
lret
xor
mov
jp
fdivs
jb
sub
imul
inc
in
dec
out
jecxz
repnz
mov
jge
loopne
mov
arpl
inc
aad
jnp
sbb
mov
stos
and
or
fnstenv
fwait
in
fwait
enter
loopne
mov
jnp
jmp
fiaddl
sub
int3
loop
aad
mov
push
mov
in
adc
and
ds
mov
stos
pop
sub
test
cmp
mov
cmp
pop
ja
mov
inc
mov
testb
cwtl
fldcw
out
mov
out
popa
testb
mov
sub
mov
adc
rcl
test
sarl
mov
stc
jo
es
mov
jmp
hlt
int3
sbb
jae
int3
dec
aad
ds
loop
mov
rclb
mov
pushf
mov
jns
pop
lds
mov
lahf
lods
loope
mov
or
movsl
aam
sub
mov
out
xchg
xchg
xchg
scas
aaa
out
iret
sbbl
pop
push
aad
rcrb
js
xlat
fcmovnu
nop
aas
imul
sbb
arpl
add
fdivrl
mov
js
fiaddl
ret
xchg
repz
insb
mov
mov
and
xchg
mov
mov
jnp
lcall
adc
repnz
xchg
dec
cwtl
fwait
cmp
cmp
mov
stos
mov
mov
fiadds
sbb
aad
push
fsubrs
enter
mov
sarb
mov
fbstp
sti
xchg
rolb
lods
mov
int3
test
arpl
arpl
push
add
sbb
test
and
mov
sahf
jnp
orl
mov
mov
movsl
cmp
sbbl
gs
inc
push
pop
add
les
fistl
or
repnz
test
aas
cmpl
jle
sbb
stos
vmwrite
fdivrl
jnp
cmp
sbb
pop
mov
sbb
iret
divl
fdivrl
out
insb
cwtl
aaa
iret
stos
in
rol
push
arpl
in
mov
aaa
mov
fwait
mov
push
pop
aas
mov
xor
in
jmp
jns
jmp
lahf
jmp
sub
or
mov
mov
dec
add
mov
adc
sub
adc
dec
sbb
jecxz
sbb
scas
xchg
push
jo
sbb
jbe
xor
bound
enter
mov
mov
sbb
sub
mov
fstpt
mov
cli
mov
mov
inc
test
movsl
or
jp
pop
loope
xor
cmp
imul
test
lds
movsl
mov
mov
iret
fwait
das
add
pop
repnz
mov
insl
repnz
jo
test
insl
cld
jb
push
jae
mov
jecxz
lret
data16
int3
mov
stos
mov
ja
jecxz
jecxz
or
sbb
clc
sbb
adc
inc
push
dec
sbb
dec
mov
mov
rorb
test
mov
ds
mov
aaa
lods
aas
ljmp
mov
scas
aas
add
mov
lods
jnp
fidivl
mov
cltd
jp
mov
mov
call
mov
scas
aas
jp
imul
cmpsl
push
fidivs
mov
push
mov
mov
aas
push
hlt
stos
fwait
mov
shll
lcall
aaa
jecxz
fdivl
mov
fldcw
out
test
sbb
call
out
mov
mov
pusha
call
loope
mov
ljmp
mov
pop
mov
lret
sarb
fnstsw
loope
fwait
loopne
sbb
jp
pop
inc
fbld
push
pop
sub
js
shrl
sbb
lods
rorl
add
aam
lods
mov
aas
lret
pushl
movsl
rcrb
insb
rorb
xorb
aas
inc
inc
lock
mov
pop
push
xchg
dec
xor
mov
jnp
lahf
push
hlt
xchg
jl
xor
adc
sub
arpl
jg
fbld
arpl
fwait
mov
mov
dec
mov
add
mov
mov
fninit
inc
inc
or
lret
push
xchg
sbb
mov
ret
repz
jns
sarb
xchg
test
mov
inc
jmp
imul
in
les
out
enter
push
fcoms
sub
sbb
icebp
incb
lahf
mov
icebp
xor
cli
mov
inc
dec
fwait
and
cmp
aaa
clc
inc
mov
mov
mov
stos
mov
stos
fdivr
or
lods
xchg
and
dec
mov
nop
jmp
cwtl
mov
inc
repnz
into
mov
inc
je
xchg
stc
xor
sarl
lds
js
mov
push
mov
and
push
mov
into
aad
xor
dec
daa
xchg
ss
pop
aad
fisubl
push
aaa
jno
adc
jmp
cmp
cs
sub
and
dec
mov
or
lods
mov
jnp
ror
out
fcmovu
dec
fisubl
jns
mov
je,pn
insl
pop
mov
xor
sti
jo
xchg
stos
xor
movsb
pop
aas
pop
pop
adc
ret
pusha
pop
xor
arpl
xchg
insl
je
das
jnp
xchg
mov
xlat
mov
sbb
lods
fnstcw
mov
stos
in
ret
push
mov
lea
cmp
sti
call
mov
aad
xor
cmp
je
dec
lret
popa
leave
int3
in
bound
jb
pop
jns
and
aaa
rcll
rolb
and
loop
mov
pop
adc
dec
fisttpl
push
decl
in
jns
sbb
lods
sbbl
add
xor
adc
cmpsl
push
sbb
mov
pop
test
fistpll
sub
adc
in
push
ljmp
mov
xchg
fadd
mov
mov
xchg
icebp
iret
stos
pushf
lret
lea
or
adc
xor
stos
pop
sarb
sarb
or
pop
dec
cli
inc
jecxz
repnz
pop
xchg
stos
adc
jns
dec
scas
mov
scas
push
scas
inc
sarl
sbb
dec
pop
add
xchg
sarb
sbb
or
test
jge
sub
jne
inc
ds
lock
aam
icebp
mov
mov
xchg
aaa
and
mov
nop
xchg
add
aas
fnstenv
mov
jge
out
fsubl
imul
mov
ficoml
cwtl
xchg
andl
lods
into
jne
aas
leave
jbe
xor
xchg
cmp
pop
popf
pop
leave
movb
pop
mov
push
inc
dec
aad
ret
push
lret
push
cli
mov
or
jno
sbb
xchg
test
lock
mov
mov
sbb
pop
sbb
loopne
aas
mov
lea
je,pn
jnp
sbb
xor
fdivrs
mov
inc
xchg
or
xlat
mov
adc
movsl
fisttpll
das
sahf
imul
mov
pop
cmp
lret
insl
fstpl
aam
mov
cmp
sbb
in
sub
outsb
jmp
hlt
mov
into
dec
lods
xchg
int3
mov
in
shl
in
leave
push
lea
pop
fdivr
pop
sti
and
insl
fstpt
rorb
sub
pop
cmp
push
sub
xlat
daa
push
je
shll
push
xorl
push
and
sub
mov
sahf
sub
ret
in
push
xchg
mov
xor
call
jo
cmpl
mov
jge
ds
mov
js
std
push
cmp
mov
pop
dec
sub
add
mov
scas
push
stc
add
dec
xchg
iret
ljmp
mov
and
jecxz
mov
adc
sbb
lret
inc
sbb
fidivrl
or
aas
inc
add
mov
inc
in
push
fwait
mov
jbe
call
stos
hlt
jmp
mov
cmpl
mov
mov
xor
jl
jmp
lret
jge
jl
mov
dec
and
push
adc
fwait
shl
pusha
and
jl
sub
insl
mov
pop
test
filds
mov
addr16
lret
jge
dec
push
arpl
mov
cmp
orl
jg
sahf
test
test
fucom
xor
pop
push
fldcw
lds
ret
pop
mov
out
pop
popf
and
and
sbb
sarl
mov
jmp
xchg
xchg
ja
repz
pop
loop
add
push
jmp
test
dec
cwtl
dec
mov
jno
mov
dec
icebp
vmaxpd
pop
and
in
xor
inc
out
cmp
xchg
pop
subl
pop
hlt
sub
ret
push
stos
into
xchg
fistps
pop
sti
repnz
push
test
out
lret
mov
leave
cmp
idivl
repnz
out
inc
aaa
into
fistl
sbb
dec
lcall
dec
into
xchg
adc
test
fisubrl
enter
or
jl
or
movhps
cmovnp
out
mov
pop
or
insb
fdivr
fldcw
adc
sbb
fnstcw
fisttpl
aad
lods
cmp
jae
loop
mov
xchg
sbbb
enter
fisttps
mov
xchg
add
fcom
mov
in
cld
cli
pop
mov
dec
sbb
mov
cmp
aaa
testl
push
in
inc
jns
fidivrl
mov
ljmp
adc
push
pusha
mul
mov
dec
mov
mull
ds
fldt
rorl
stos
imul
inc
ds
cmc
jae
add
pop
scas
shlb
std
dec
dec
push
cltd
jo
dec
sbb
fdivs
mov
mov
inc
mov
jns
jns
call
test
ss
push
outsl
inc
mov
mov
ss
inc
lds
adcl
popf
mov
fwait
cmp
xor
cs
sub
enter
mov
ret
jnp
sub
imul
in
push
adc
cmp
xchg
ret
jne
xchg
shrl
dec
mov
fbstp
movsb
dec
xor
mov
out
or
xchg
mov
cwtl
lods
mov
dec
xchg
je
insl
fisubrl
out
insb
add
dec
xchg
jns
dec
sbb
mov
push
adc
test
mov
dec
divb
or
push
fucomi
mov
mov
popa
fcomps
notl
inc
sub
mov
cmp
mov
lock
fisubrs
add
lds
lret
inc
ds
inc
add
imull
or
cmpsb
loope
out
mov
test
inc
into
mov
mov
in
mov
bound
jb
cwtl
pusha
shr
aam
mov
pop
push
jmp
nop
leave
mov
nop
fcompl
jp
test
xchg
fsubrl
movsl
dec
movsl
cs
jbe
xchg
adc
cld
jnp
bound
mov
pop
mov
incl
adcl
js
dec
lock
ret
mulb
sub
push
loopne
xor
sub
inc
icebp
lods
imulb
sti
jecxz
mov
bnd
cmp
cltd
aam
or
sarl
loop
call
xor
stos
xor
mov
call
jae
cmp
movsb
add
inc
dec
test
adc
push
inc
dec
stos
xchg
push
inc
and
and
xchg
fnstcw
sub
fdivr
push
jno
add
lods
lods
xchg
xorl
jne
xchg
jmp
dec
push
lds
push
loop
mov
dec
pop
sarl
push
add
dec
mov
add
int3
ret
push
fidivl
orl
xchg
stos
add
sahf
sti
lods
lea
and
mov
movsb
in
out
lret
dec
xchg
shlb
adc
sub
mov
daa
hlt
nop
jle
lods
dec
or
rclb
mov
filds
dec
pusha
lea
fwait
xor
int
imul
rorb
push
mov
lods
dec
sti
iret
mov
mov
daa
xor
jecxz
lret
adc
inc
adc
lds
testb
dec
mov
bound
push
jmp
int
bound
jne
stos
iret
outsl
loopne
push
outsl
lods
fwait
les
add
mov
mov
ret
jnp
mov
mov
cmc
lret
scas
lret
mov
xor
cs
out
inc
out
movsb
lahf
clc
aas
mov
jecxz
cmp
insb
mov
mov
inc
lea
mov
fisttpll
mov
mov
mov
jecxz
add
outsb
and
mov
scas
ja
iret
sbb
aas
push
pop
repz
mov
loop
add
pop
sbb
dec
mov
insl
and
stos
movsl
jns
aas
lret
decl
xorb
mov
mov
xchg
mov
mov
leave
test
pop
mov
mov
fcoml
mov
out
push
or
lret
aad
sbb
test
nop
mov
orps
add
inc
test
mov
pop
xor
jae
scas
outsb
mov
mov
mov
xor
push
pop
xor
dec
dec
or
jecxz
cmp
das
fmuls
jo
sete
adc
ja
aas
sbb
xor
mov
xchg
and
sub
lods
jnp
aad
into
stc
pop
lret
mov
adc
or
pop
fimuls
sarl
cmc
testl
repz
jle
push
cmpsl
jns
ret
cmp
sbb
add
imul
xor
insb
stos
cmp
cmp
fldcw
sarl
dec
ds
stos
mov
cmp
jbe
rcll
leave
addr16
push
push
inc
loopne
mov
fadds
pop
inc
ljmpw
rol
xor
test
xchg
mov
loope
sbb
pop
sbb
leave
sub
mov
int
pop
mov
les
das
inc
or
push
shrb
xchg
lea
in
int3
ljmp
add
dec
jno
sub
mov
imul
sbbl
jmp
push
ja
mov
xchg
int
sub
sub
fistpll
das
repnz
pop
push
outsb
int3
ds
loope
cwtl
cmp
stos
cmp
in
subl
push
lods
xchg
and
addb
aad
icebp
jb
push
loope
decl
pop
mov
fnstsw
aad
jmp
cmpsb
stos
sub
sbb
lfs
aas
lods
arpl
cmp
ret
cmc
test
mov
stos
mov
pop
imul
jo
mov
sarl
add
dec
xor
in
jge
aad
arpl
sbbl
xchg
shrb
shlb
mov
sahf
lock
popa
xlat
iret
add
and
push
push
mov
test
rcrl
add
inc
push
es
push
jno
ret
in
or
xchg
or
mov
stos
je
pusha
add
inc
lea
xchg
fwait
inc
inc
sahf
sbb
sub
dec
fcoml
daa
rcrb
cmp
outsb
aas
incl
loop
mov
inc
sub
rol
xorl
jno
icebp
out
jns
and
je
cmp
pop
scas
sbb
fmuls
out
jns
scas
into
jmp
cmp
loopne
mov
jecxz
out
cld
jns
mov
push
inc
daa
aam
xor
push
sbb
test
mov
lahf
dec
scas
stc
je
add
jl
fcmovb
or
cmp
mov
pop
jmp
int
jecxz
icebp
fildl
jne
dec
daa
cmp
outsb
xor
scas
sub
aam
je
push
je
arpl
mov
mov
movsb
loopne
xchg
lea
mov
fidivrl
and
dec
jmp
ja
mov
popl
mov
mov
aam
shll
rorl
icebp
push
lcall
xchg
fbstp
test
xor
and
aad
push
out
neg
pop
mov
mov
pop
movsl
pop
jne
mov
cmpsl
stos
push
fmull
jge
or
cltd
mov
mov
dec
popf
lock
iret
mov
jecxz,pt
scas
cmp
jb
mov
and
fisubrs
icebp
sub
add
mov
stos
nop
js
push
fstp
popa
js
mov
scas
cmp
movsb
mov
test
mov
shr
lret
mov
mov
xor
stos
add
pop
dec
outsl
sti
jecxz
mov
push
jo
test
mov
sbb
mov
out
mov
mov
scas
jmp
stos
lcall
imul
pop
fildl
aaa
inc
fistl
mov
inc
fndisi(8087
push
mov
mov
mov
sbb
gs
push
ret
jge
jns
add
sbb
sub
mov
cmp
xchg
xchg
xor
movsb
out
fistl
mov
in
mov
jns
aas
mov
arpl
mov
xlat
loope
jbe
cs
mov
int
aam
movsl
mov
adc
insb
call
out
sub
push
lret
aas
pop
iret
fstpt
insb
mov
xchg
mov
ret
lds
or
inc
ljmp
inc
jmp
push
and
cmp
mov
xor
cmp
ljmp
mov
fucom
dec
ffreep
movsl
mov
push
cmc
fidivs
jmp
orl
test
std
sbb
jnp
mov
movsb
sub
int
jno
fwait
xchg
sub
xor
call
repnz
mov
sbb
ror
test
shl
stc
rorb
fnstenv
and
pop
mov
pop
pop
push
mov
mov
nop
addb
sbb
rcrl
mov
das
xchg
rcrb
jg
inc
jmp
dec
test
shlb
loop
movsl
mov
dec
filds
in
icebp
test
mov
jecxz
mov
insl
pop
sbb
and
inc
jmp
mov
rcrl
insb
add
add
mov
insl
jecxz
mov
jo
sar
fists
xchg
lret
mov
rcrb
fsubr
xor
ss
test
xor
jno
mov
lds
mov
push
enter
fbstp
xor
add
jecxz
lret
cmp
push
jno
fwait
in
adc
les
mov
mov
sahf
lds
ror
addr16
mov
fidivrl
and
pop
xor
xchg
jo
mov
jmp
js
sarb
aad
jle
jmp
pop
adc
xor
xor
mov
insl
sbb
sbb
pop
aam
adc
cmp
jl
jae
out
mov
jbe
aad
cwtl
sub
aas
mov
mov
pop
clc
roll
add
jmp
sahf
pop
mov
cmp
mov
leave
loope
push
out
pop
inc
jmp
fnstenv
mov
imul
sub
stc
xlat
xchg
pop
ret
int3
pop
dec
push
push
cmp
cmp
mov
jmp
sbb
sti
icebp
pop
xor
push
nop
push
jp
mov
je
iret
shrb
loopne
pop
dec
jecxz
outsl
add
loopne
fcmovu
repnz
adc
pop
sbb
push
je
iret
mov
jno
cmpl
mov
shlb
add
fs
cs
jno
icebp
jo
jmp
jmp
ljmp
cs
mov
data16
lods
fmuls
inc
addr16
out
leave
or
int3
dec
hlt
push
dec
cmp
stos
imul
and
jle
xor
in
mov
shlb
mov
pop
in
mov
movsl
pop
xchg
hlt
sti
or
fisubrs
dec
aas
stos
outsl
scas
dec
sbb
rdmsr
adc
pop
enter
lock
mov
fincstp
push
mov
fdivs
out
movsl
mov
pop
jnp
in
fld
jecxz
inc
pop
mov
movsb
jecxz
pop
fsubp
inc
jnp,pn
insl
mov
roll
mov
mov
arpl
fidivrl
int
add
xor
insb
data16
fidivrs
cltd
fwait
adc
int
mov
lods
mov
mov
loop
jns
or
int
loopne
loopne
pop
xchg
loopne
fnstsw
adc
mov
adc
xchg
jecxz
jne
imul
fcmovu
scas
test
xchg
out
jp
xchg
arpl
aam
xor
lahf
adc
mov
mov
fdivp
clc
mul
xor
test
aad
cmp
xor
outsl
jmp
and
outsl
aam
xor
test
test
xor
sub
mov
pop
nop
dec
ficompl
mov
cmpsb
jns
jae
xor
int3
mov
mov
and
lods
sub
adc
push
fiadds
pop
xor
es
inc
arpl
sahf
fiadds
pop
jg
cltd
in
sub
or
jmp
insb
mov
mov
xlat
mov
pop
mov
or
cmc
mov
lahf
jb
pop
inc
pop
incb
jo
test
mov
sub
sub
dec
or
pop
xor
jmp
jecxz
pop
pop
sarl
rorl
xchg
scas
cltd
sub
mov
test
pop
jmp
xchg
dec
aam
pop
out
fnstenv
imul
pop
jnp
xchg
les
add
fidivrl
mov
or
cmp
cmp
or
sbb
sbb
push
jnp
and
les
imul
mov
mov
jo
jl
outsb
mov
pop
lods
dec
rolb
xor
mov
inc
inc
call
fidivl
faddl
xor
vpsubsw
lods
and
adc
xchg
cmp
mov
jp
shrl
lds
icebp
inc
dec
rcr
bound
pop
jp
mov
pop
divb
inc
jl
mov
mov
aas
mov
incb
pop
test
xchg
shll
dec
movsl
push
pop
dec
sub
cmp
or
add
dec
jecxz
imul
movsb
xchg
pop
mov
dec
xchg
pop
pop
mov
jnp
fwait
enter
jl
movsl
xchg
sub
mov
xchg
xlat
arpl
xchg
das
xchg
std
sub
test
adc
mov
or
stos
mov
enter
cs
scas
mov
fs
sbb
ljmp
jecxz
and
xchg
push
mov
stos
stc
and
mov
in
pop
pop
je
push
mov
fwait
mov
out
add
add
xchg
dec
call
xchg
je
loope
and
les
mov
cmp
cmp
inc
fidivrl
loop
stc
xchg
add
rcr
xchg
fbstp
imul
jmp
movsb
pushl
out
clc
mov
inc
or
pop
icebp
pop
fimuls
jl
fdivrl
or
out
inc
shl
in
cmpsb
adc
lahf
lods
mov
cltd
lods
sub
repz
xchg
fdivl
jne
push
hlt
xor
in
in
orl
mov
mov
aad
mov
je
shlb
arpl
mov
jne
mov
xchg
sarb
aas
pop
jge
aaa
push
mov
sbb
imul
jecxz
jo
mov
jne
mov
outsb
popf
fsub
loope
mov
or
leave
sahf
mov
jno
push
mov
fneni(8087
test
fisubrl
lcall
loopne
int3
repnz
incl
mov
data16
test
xor
mov
mov
mov
iret
mov
popf
mov
xor
lock
repz
mov
stos
ljmp
xorb
sub
outsb
pop
fildl
mov
mov
or
cmpsb
mov
add
cltd
call
add
adc
mov
mov
fnstcw
out
cmp
sub
sub
jle
sub
gs
pop
inc
fadds
push
stos
in
rorb
adc
cmc
mov
out
mov
cmp
or
xchg
push
pop
lret
mov
lods
mov
mov
dec
stos
inc
leave
sub
iret
and
mov
dec
lret
jl
test
add
and
adc
sbb
popf
in
adc
lods
test
inc
push
jb
in
cs
pop
and
imul
test
mov
notb
fwait
imul
jnp
dec
addr16
adc
in
sub
fimuls
add
leave
les
jnp
fs
js
movsl
ja
or
cltd
mov
mov
dec
xchg
sti
xchg
jg
cmpb
loop
in
push
lret
mov
dec
stos
sub
lahf
xchg
dec
cwtl
sbb
scas
dec
cmp
pop
stos
stc
jnp
leave
test
adc
mov
dec
cmp
aas
je
jecxz
xchg
clc
mov
or
xlat
sbb
sub
inc
mov
jl
gs
into
sub
sti
jge
sbb
or
xor
xor
out
in
xor
sbb
push
ret
daa
lret
out
enter
sub
fbstp
xor
adc
fwait
inc
lret
sub
mov
push
sbb
aaa
sub
scas
into
sbb
adc
mov
mov
dec
stc
cmp
mov
jg
shrl
push
mov
stc
pop
pushf
fld
cwtl
sub
scas
fldln2
xor
xchg
out
sub
ja
cmc
dec
push
movsl
ss
out
sbb
out
jne
adc
stos
fwait
cmp
sub
adc
arpl
jnp
fst
repnz
stc
lods
mov
lds
pop
repnz
mov
lret
in
scas
rorb
jecxz
aam
and
jecxz
inc
pop
imul
jo
orl
in
mov
es
int
dec
cmp
cmpsb
arpl
mov
divl
jge
xchg
ja
in
and
mov
rolb
sti
mov
xor
ret
popf
xor
xor
icebp
rclb
lahf
mov
or
imul
sbb
rolb
ficompl
dec
lret
push
cmp
insl
add
sub
pop
stc
gs
sbb
lret
mov
jo
pop
bnd
adc
adc
in
and
jns
fisubrl
cmp
mov
or
or
adc
stos
cmc
add
mov
and
lods
rcll
cmp
inc
inc
mov
and
je
or
inc
cmp
adc
pop
je
xor
notb
stc
sbb
mov
mov
jl
test
adc
mov
stc
shll
mov
pop
aas
xchg
mov
in
cltd
cmp
cmp
dec
jne
or
jbe
fisttpll
or
imul
mov
notl
xchg
jl
mov
cmpsl
inc
orl
fistpll
or
psubd
cmp
addr16
xor
cltd
mov
pop
or
inc
ljmp
pop
stos
pop
dec
xor
in
mov
das
cmpl
push
ljmp
fiaddl
data16
xor
jno
mov
sbbl
inc
mov
cmp
into
lret
cmp
idivl
push
aaa
cmp
jno
es
sub
inc
cmp
add
cld
xor
cmp
sub
jge
sub
jnp
xchg
sub
fwait
add
cmp
cmpsl
dec
sbb
cs
mov
jns
out
jl
shrb
xor
cmp
sub
sub
ljmp
cmp
xor
das
addl
cmp
adc
mov
leave
jge
push
in
popa
loop
mov
mov
inc
mov
ljmp
popf
mov
call
mov
xchg
sti
cltd
cld
mov
cmp
sub
data16
mov
stc
flds
ficompl
sbb
gs
sub
imul
push
ss
addr16
xor
fdivs
test
pop
cmp
aas
shr
adc
sbb
jns
in
mov
pop
hlt
adc
je
mov
ljmp
fistl
mov
jg
or
arpl
jnp
mov
mov
and
or
or
orl
sbb
popf
push
jl
decl
pop
mov
sahf
int3
mov
push
push
pop
pusha
push
jne
dec
dec
pusha
mov
mov
popf
mov
icebp
mov
dec
xchg
pop
cmp
outsl
cli
cmp
stos
daa
ret
cmp
subl
das
mov
mov
add
dec
iret
orl
jecxz
xchg
outsl
push
popf
sub
jge
call
out
sarb
fimull
iret
lods
inc
stos
stos
mov
dec
and
bound
sbb
jl
mov
testb
mov
inc
cmp
ja
xor
xor
cmp
ja
adcb
and
sarl
decl
push
mov
cld
cmp
and
or
insl
add
ja
sti
stos
jecxz
mov
add
mov
and
sar
and
addr16
sar
dec
int3
addr16
sti
lahf
addr16
inc
sarl
mull
lods
push
pop
pusha
fnstenv
jp
cmc
adcb
jecxz
shll
out
insb
ljmp
stos
repnz
or
xor
mov
xor
divl
out
lods
push
std
sbbb
lcall
xchg
cmp
cmp
nop
fsubrs
mov
jg
lahf
mov
inc
lahf
fistps
stos
insl
xchg
out
dec
mov
or
mov
add
mov
mov
stos
mov
inc
fdivrl
out
in
aam
fwait
mov
mov
rorb
mov
shrb
stos
loopne
sub
sbbl
cmp
jg
xor
scas
push
insl
ret
ret
or
stc
paddusb
ficoms
cmc
call
int
std
mov
xchg
mov
fadds
sub
mov
aaa
movsl
ficoms
lods
repz
mov
lahf
adc
mov
das
mov
lods
stos
inc
fwait
mov
test
loopne
ror
push
imul
ret
outsl
fmuls
in
shrl
pop
loope
in
mov
into
mov
test
xchg
mov
pop
jno
inc
gs
cmpsb
mov
rorl
mov
xor
mov
scas
fdivl
outsl
addr16
mov
pop
cwtl
cmpsb
popf
lds
mov
lret
mov
mov
gs
hlt
sahf
test
daa
js
mov
fldenv
xchg
gs
push
les
push
mov
adc
xchg
pop
inc
mov
insb
adc
mov
negl
mov
jnp
stos
pop
sub
leave
xchg
dec
xorl
fwait
mov
pop
aaa
sub
or
push
lods
push
and
jecxz
lods
sub
stos
mov
lret
stos
ljmp
push
scas
in
ret
fmul
daa
add
push
push
shl
cli
and
fistpll
cmc
out
cmp
in
inc
sbb
test
or
jns
mov
fimull
mov
pop
push
lods
int
sub
sbb
mov
xchg
scas
push
movsb
and
das
out
pop
test
insl
jg
ret
inc
shrl
pop
add
jle
sti
idivl
sub
bnd
cli
test
jge
mov
mulb
mov
aad
arpl
mov
jne
or
pop
ret
cmp
sarl
sarl
or
cwtl
mov
aad
faddl
cltd
pop
or
xchg
cmp
nop
mov
incl
cmp
pop
in
imul
push
mov
jns
sbb
popf
xchg
int
lea
adcl
mov
mov
gs
outsl
mov
xor
mov
cmpsb
sbb
lock
pushf
lret
fnsave
out
mov
fcoms
loopne
ljmp
mov
mov
mov
xlat
fistpl
push
mov
in
mov
and
orl
xor
test
sbb
mov
jg
lcall
dec
fwait
xchg
xor
aas
jb
gs
loopne
jno
sub
lock
mov
mov
cmp
je
xor
push
mov
je
xor
jne
xchg
icebp
cmpsb
pusha
insl
rol
pop
mov
add
sti
fbstp
mov
and
mov
mov
pop
mov
iret
dec
call
mov
in
xchg
fmulp
jecxz
jnp
pop
xchg
ret
dec
repz
je
adc
adc
inc
arpl
xchg
xchg
push
das
and
jbe
jecxz
mov
jecxz
mov
outsb
mov
lahf
mov
aaa
xchg
out
jp
sub
rcll
daa
pop
xchg
popf
cs
push
out
xlat
fninit
das
sub
out
mov
insl
lods
mov
sbb
xor
into
jnp
fnsave
out
jnp
mov
inc
fdivl
and
jbe
push
rorl
pop
push
shl
inc
mov
movsb
nop
sub
sbb
dec
inc
lret
popf
jns
dec
jmp
mov
lea
fistpll
jl
cmc
mov
fistps
jecxz
hlt
in
xor
cmc
leave
lock
push
mov
xchg
xor
lods
aaa
mov
out
xchg
movsl
xchg
stos
je
mov
and
xchg
and
mov
leave
sbb
in
fisubs
lret
decb
sarl
mov
xorb
mov
stos
fcmove
jnp
shll
lea
push
sti
mov
push
rolb
add
gs
lahf
loope
and
lahf
push
aam
and
lret
adc
aad
pop
push
jns
addb
dec
repnz
pop
xchg
aam
cvtpi2ps
push
stc
lods
js
iret
lret
leave
ds
jg
repnz
mov
mov
jns
dec
cld
je
mov
cmp
pop
ret
xlat
sbb
test
fists
and
inc
aaa
sub
lret
adc
add
sub
fcoml
movsl
mov
pushf
mov
mov
mov
xchg
das
xchg
fxch
xor
aam
xor
sahf
lods
inc
in
shll
ljmp
jb
xchg
mov
out
jae
dec
sbb
daa
lods
mov
cwtl
adc
in
fists
inc
in
cwtl
mov
mov
adc
insb
mov
inc
lret
imul
fstpt
mov
leave
shrl
add
mov
mov
push
xchg
mov
je
lcall
jmp
sub
imul
test
sub
outsb
pop
mov
scas
jno
insb
xchg
jecxz
sahf
mov
fs
mov
dec
cltd
mov
sub
in
adc
and
mov
les
jns
cld
ljmp
sub
and
scas
sub
push
cmp
xchg
mov
fnstenv
int
aaa
rolb
xchg
ds
in
xchg
cwtl
jbe
mov
mov
xchg
shll
test
push
jecxz
mov
aam
adc
inc
sbb
jae
repnz
mov
mov
movsb
ret
pop
sbb
cmpsb
mov
xor
jle
pop
mov
mov
xor
jmp
lahf
jno
jle
cwtl
push
mov
in
xor
mov
sbb
shrl
or
fmuls
outsl
ds
ficomps
andb
cmpsb
rcrl
sbb
pop
mov
mov
loope
mov
out
inc
inc
daa
sarl
pop
xor
xlat
mov
lahf
sub
dec
dec
imul
out
or
int3
mov
jnp
sbb
stos
xor
out
mov
imul
clc
xor
lods
dec
insb
aad
mov
jnp
lea
mov
cli
sub
ror
sbb
int3
ret
out
mov
pop
mov
mov
cltd
xlat
call
fsubs
jp
lods
stos
adc
fnstsw
in
xor
movsl
scas
fmull
inc
ret
loop
mov
faddl
mov
push
mov
outsl
clc
lods
jp
pop
jle
xchg
mov
mov
cld
fildll
fcoms
push
mov
push
aaa
sbb
loopne
fcmove
inc
aad
mov
and
aam
or
cmpsb
cmc
flds
in
ret
lock
filds
psllw
data16
mov
je
out
lahf
jp
cmc
xorb
negb
shlb
lahf
inc
add
mov
jecxz
jmp
leave
add
je
aam
mov
fxch
pop
sbb
xor
aad
mov
dec
cmp
lods
and
sub
in
sub
fcmovnbe
inc
mov
jmp
adc
sub
sti
push
push
xlat
ds
sub
dec
roll
loop
das
shl
xor
rolb
mov
mov
mov
adc
lahf
add
pop
jge
fwait
push
in
jns
push
fiadds
rclb
scas
lock
loop
loop
pop
sbb
fdivrl
and
xchg
fstps
pop
cmp
mov
fbstp
loope
dec
jl
sti
aas
movsb
lods
mov
rclb
lods
mov
loope
insb
fisttpll
movsl
cli
sti
cmp
lahf
sub
mov
push
pusha
mov
and
jb
dec
jne
subl
test
or
addr16
sub
sbb
mov
jbe
xchg
xor
scas
mov
adc
repz
repnz
enter
test
sahf
mov
pop
filds
cwtl
or
stos
add
fistl
xor
cs
test
mov
mov
jecxz
int3
mov
bnd
pop
scas
test
out
xchg
jns
cmp
in
add
fs
jp
pop
add
icebp
cld
jge
or
cmp
mov
mov
ror
pop
test
dec
pop
and
pop
fisubrl
inc
or
and
pop
adc
loope
inc
inc
hlt
jae
cltd
das
lret
mov
and
jnp
into
shll
xchg
push
add
ds
ja
iret
fisubrs
xor
ffreep
dec
jae
adc
jg
mov
xchg
lds
xchg
push
sti
cli
or
fnsave
cli
push
js
and
stos
aas
aaa
repz
add
cmp
mov
sbb
xchg
mov
aas
aaa
jae
lret
and
cmp
mov
xor
mov
inc
fimull
xlat
add
fists
xchg
cmp
mov
sbb
xchg
mov
aas
aaa
jae
mov
shrl
jecxz
xor
std
int3
jle
or
out
rcr
xchg
cmp
mov
sbb
xor
aas
aaa
xchg
fidivrl
and
cmp
mov
sbb
mov
shlb
out
sbb
cmp
jbe
lcall
stos
fbstp
add
aas
arpl
stos
out
jns
faddl
jnp
cmp
test
addl
jecxz
stos
out
jns
stos
ret
shll
cmp
lcall
stos
fistps
push
mov
aas
arpl
stos
out
jns
faddl
jnp
cmp
test
addl
jecxz
stos
out
jns
stos
ret
ret
fsubs
push
jo
lcall
stos
fildll
add
aas
arpl
stos
out
jns
faddl
jnp
cmp
test
addl
jecxz
stos
out
jns
outsl
je
addr16
xor
push
jnp
or
add
jg
arpl
aas
inc
sbb
fsubl
fdivrs
sarl
sti
jg
mov
cmp
adc
push
lcall
lahf
mov
push
mov
sti
jg
mov
aas
inc
sbb
fsubl
int
xorl
lret
enter
xor
jno
roll
inc
push
adc
ds
js
push
jle
stos
fcomp
push
jle
stos
mov
or
mov
jp
mov
jp
mov
and
lock
cmp
cmp
cmp
push
cmp
bound
xor
xor
inc
cmp
nop
cmp
cmp
jb
cmpb
cmp
cmp
cmp
cmp
cmp
inc
aad
jp
mov
lret
rcr
shr
shrl
fisttpll
fstpl
fstpl
fucomp
mov
insb
ja
pop
lods
pop
lods
push
lods
cmp
mov
mov
add
shrl
rol
jecxz
mov
ret
add
andl
xchg
ret
outsl
adc
outsl
and
outsl
repnz
js
adc
mov
out
stos
or
mov
lds
mov
loop
inc
jg
aam
push
repz
push
xchg
mov
out
lods
dec
push
xor
imul
push
mov
mov
jne
adc
inc
and
mov
ret
aaa
and
pop
add
or
adc
test
test
loopne
dec
std
iret
daa
outsb
push
js
mov
push
outsb
adc
or
mov
dec
aaa
lock
popa
test
jmp
push
jnp
subl
mov
xchg
das
leave
pop
jg
adc
loope
xchg
jg
sahf
clc
test
xlat
mov
jnp
daa
int
loopne
fwait
push
cltd
cmpsl
cmp
test
push
cs
shrl
mov
negl
shrl
xor
mov
cmp
int
dec
stos
cmpsl
xchg
cs
daa
aaa
notb
out
arpl
pop
jae
cmp
test
mov
sti
mov
xchg
out
or
imul
jl
dec
sub
adc
mov
mov
pop
mov
sbb
jae
and
mov
jnp
push
push
mov
scas
mov
jg
pop
pop
sarb
jg
jle
fsubrs
inc
xor
test
ret
add
inc
xor
test
sbb
outsl
add
or
sbb
add
inc
xor
test
jle
jmp
sbb
add
inc
xor
test
ret
sub
mov
test
ret
add
inc
xor
test
ret
add
cmpsb
mov
add
inc
xor
test
ret
add
inc
xor
mov
add
fsubrs
inc
xor
test
ret
add
inc
xor
test
jle
jmp
sbb
add
inc
xor
mov
test
mov
enter
dec
add
mov
or
push
dec
movsb
fcompl
add
xor
dec
mov
sbb
sub
push
pushf
stos
cmp
sbb
mov
loopne
loope
and
stos
jnp
flds
fisttpl
cwtl
cmp
jbe
sbb
fcompl
add
add
sti
sti
nop
aas
aaa
dec
fiaddl
flds
cmp
stos
fwait
out
fldt
outsb
jnp
nop
aas
xor
das
in
js
out
sbb
mov
fcompl
sti
popf
mov
addr16
push
sti
and
cmp
mov
sbb
mov
aas
aaa
imul
stos
jnp
flds
fisttpl
lods
adc
cwtl
sbb
call
flds
pop
xor
mov
sbb
mov
aas
aaa
imul
stos
jnp
flds
fisttpl
lods
adc
std
and
fists
test
jg
mov
aas
pop
sbb
fdivrl
add
cmp
fwait
xor
jnp
outsl
sbb
lret
jns
add
cmp
or
ret
clc
sbb
fists
xor
xor
pop
sbb
cmp
sbb
mov
aas
aaa
imul
stos
jnp
flds
fisttpl
lods
adc
mov
lret
mov
fists
xor
rcr
pop
test
jg
mov
aas
cmp
stos
out
jns
fcompl
ja
jnp
or
cmp
jbe
sbb
enter
lret
mov
filds
xor
into
fstps
sti
jg
mov
aas
cmp
stos
fmuls
xchg
and
jp
push
jle
stos
push
jle
mov
enter
sbb
mov
jp
mov
jp
mov
xchg
sbb
push
fisubl
fidivl
fidivl
fiaddl
inc
ficoml
fisubl
fiaddl
fcmovbe
fidivl
jle
stos
adc
push
jle
mov
cmp
dec
stos
push
mov
das
or
sbb
sbb
sub
ljmp
das
dec
das
pop
das
pop
das
push
das
cmp
dec
das
mov
cwtl
das
lcall
das
jp
mov
or
jp
lret
push
mov
and
and
lock
add
push
ds
cmp
jnp
add
cmc
xchg
sbb
lahf
xchg
adc
mov
mov
mov
rcrb
xor
inc
lret
push
xlat
dec
cmp
rorl
mov
fstl
lds
imul
mov
ret
adc
mov
fwait
jnp
fcomp
pushw
lret
inc
stos
popa
xor
xchg
sarb
inc
sbb
adc
shlb
push
jne
scas
push
inc
sar
mov
jne
pop
leave
push
cmp
daa
stos
pop
push
dec
addr16
cmp
push
das
test
lret
pop
rcrl
mov
in
jge
ss
stos
or
xor
push
mov
jmp
leave
jb
jne
push
fistpll
push
test
daa
ja
cmp
lea
outsb
cltd
sbb
inc
adc
cmp
and
mov
dec
xor
xchg
jne
jnp
lret
xor
shll
fidivs
pop
insl
js
jecxz
out
aad
aas
out
frstor
fistps
sbb
daa
aam
loopne
sub
xor
fnstcw
les
imul
or
xchg
test
out
insl
xor
cmp
cmp
shll
xchg
test
mov
and
xor
mov
xlat
and
imul
pop
or
mov
out
int
fwait
jmp
sti
jg
sub
sub
mov
fwait
test
lret
sub
fldcw
add
jle
fsubrs
inc
xor
test
ret
add
inc
xor
test
ret
aad
xor
test
ret
add
inc
xor
test
ret
add
movsl
fld
mov
add
inc
xor
test
ret
add
fld
adc
fsubrs
inc
xor
test
ret
add
inc
xor
jg
add
fsubrs
inc
xor
test
ret
add
inc
xor
test
ret
aad
xor
test
ret
add
sub
lds
lods
mov
sarb
push
xor
fisubrl
jns
dec
iret
mov
mov
lret
jecxz
mov
mov
add
repnz
outsb
ret
lods
loopne
cs
sub
dec
sahf
xorb
popf
xchg
jge
gs
mov
scas
lret
push
push
add
fistps
jbe
adc
dec
icebp
push
sub
xchg
xlat
inc
xchg
cmp
jl
fmull
xchg
rorl
das
dec
imul
mov
pop
pushl
jg
ja
pop
scas
pop
xor
jmp
and
jb
aaa
mov
gs
fstps
jecxz
fwait
into
lret
xchg
lds
add
mov
bound
loop
cs
jl
sub
rclb
and
stos
scas
jecxz
fisttpl
scas
cld
int
jp
shll
xor
mov
test
jmp
btcl
outsl
aas
push
sub
aam
adc
push
pushf
adcl
js
scas
pop
aad
push
ljmp
mov
call
mov
imul
mov
add
in
sti
jecxz
insb
test
add
enter
int
sbb
fnstenv
out
lods
sub
inc
in
repz
cli
jecxz
xlat
ds
rcr
xchg
push
in
inc
mov
pop
jnp
shll
and
mov
and
cmp
scas
out
and
cmp
ja
push
jmp
dec
frstor
adc
sti
sub
aas
repz
bound
sbb
fdiv
gs
fldcw
fstpt
mov
and
test
mov
sub
sbb
movsl
pop
ret
jge
pop
pop
rcl
loopne
dec
ss
inc
addr16
mov
add
arpl
jns
ror
or
movsb
mov
sub
outsl
jecxz
in
addl
xchg
aas
leave
std
sub
rorb
jmp
enter
cmpsb
jl
fsub
xchg
mov
jae
pop
lret
rclb
gs
outsl
push
and
fcmovne
jl
lret
pop
aas
pusha
shlb
jno
mov
ds
outsb
aaa
sbb
scas
jg
ss
fidivs
call
je
jecxz,pt
jecxz
or
aam
std
push
or
fwait
ljmp
pop
dec
iret
cmp
inc
adc
cmp
aam
mov
jae
push
mov
mov
mov
inc
inc
mov
jle
jnp
leave
int
xchg
sarl
jecxz
mov
cltd
mov
sbb
test
js
stos
jle
ret
mov
aaa
orb
inc
mov
sub
clc
jns
xchg
xchg
rcrl
mov
fs
mov
aas
in
sti
pop
nop
and
adc
and
lock
in
subb
push
jb
orl
add
leave
fistpl
jg
repz
fs
cs
pop
in
lcall
in
test
enter
sub
fwait
dec
in
push
ret
dec
aaa
repz
ret
or
pop
push
jecxz
sbb
mov
test
mov
push
lock
dec
lahf
mov
scas
adc
outsl
pop
cmp
cmpsl
jg
sti
outsl
mov
daa
stos
ja
jae
jge
push
shll
leave
andb
inc
xchg
dec
xchg
cmpsl
insl
and
adc
lds
ds
pop
out
enter
cmpsl
loope
mov
popa
mov
test
lods
mov
jmp
push
inc
adc
mov
mov
ja
ja
mov
lock
pop
scas
loope
adc
sub
mov
xchg
mov
cmp
popa
fisttps
ret
repnz
inc
rsm
lahf
leave
fwait
mov
fnstenv
jae
and
xor
xchg
in
iret
loopne
call
jo
cmp
mov
lods
aam
add
ficoms
jecxz
fisubrl
push
lea
pushf
mov
out
cmp
pop
xchg
mov
jle
xchg
sub
jns
mov
or
sti
jle
ret
add
mov
jg
adc
mov
jecxz
lods
dec
xor
or
push
out
xchg
fwait
xor
xchg
popf
repz
mov
cltd
jb
mov
incl
cld
fwait
arpl
xchg
or
adc
and
or
xchg
dec
jmp
add
and
orl
stos
xchg
fcomi
lods
aaa
xor
mov
mov
xor
inc
pop
xchg
aas
clc
psrld
inc
dec
mov
mov
mov
mov
sbbl
jbe
jecxz
pop
shlb
jp
lds
cmp
aas
scas
or
mov
lea
push
fidivl
shrl
call
mov
incl
fsts
out
aas
scas
rorl
imul
jae
in
xchg
int
xchg
mov
cmp
lcall
push
loopne
or
adc
cwtl
out
fdivl
outsl
mov
cmp
inc
nop
ljmp
jecxz
ror
jb
cmc
xor
push
ds
into
ja
push
push
mov
mov
scas
cmp
sbb
cmp
push
xor
iret
in
in
jno
sbb
sub
xchg
jns
xchg
or
mov
fnstsw
xor
add
inc
dec
cmp
and
outsb
loopne
xchg
dec
fldcw
lea
sub
je
sub
shl
out
push
rcr
inc
push
or
fld1
xchg
fiaddl
inc
sbb
lods
movsl
frndint
inc
push
out
inc
fcmovnb
pop
mov
incb
pop
fwait
jge
mov
mov
ret
ja
aas
fisubs
ret
cmp
add
stos
loopne
xchg
mov
inc
mov
mov
addr16
fistps
fnsave
shr
leave
aam
shlb
data16
aaa
out
jbe
jns
jl
in
sbb
cmp
pop
rcrb
mov
jns
or
mov
inc
dec
mov
xchg
hlt
mov
loope
mov
test
mov
mov
mov
sbb
call
cmp
loopne
cmp
xchg
pushf
negl
xchg
test
jae
or
dec
cmp
push
or
adc
sub
mov
or
xor
jmp
mov
jns
xchg
and
test
cmp
cmpb
cmpl
fisttps
xchg
ficomps
es
inc
mov
int3
shlb
lods
xor
jno
stos
xor
sub
mov
pushf
fwait
dec
mov
push
mov
pusha
lcall
sbb
inc
mov
fldt
cmp
mov
leave
lods
dec
fwait
xchg
xorl
mov
or
push
aaa
das
adc
fistpll
xchg
sub
dec
in
push
out
dec
cwtl
fsubrs
mov
pop
mov
imul
enter
lret
jmp
inc
inc
xor
pop
and
xorl
jmp
shll
mov
xor
pushf
dec
lahf
fisubrs
rorb
mov
xchg
mov
fwait
jbe
repz
notl
lods
aam
fdivs
xchg
jmp
jecxz
sub
xchg
sbb
and
sub
xchg
into
add
out
mov
repnz
mov
adc
cld
xchg
inc
adc
testl
lret
sub
iret
dec
aam
mov
bound
fmul
or
rcl
mov
cmp
jp
ret
in
fidivs
ds
jnp
ret
xchg
jne
push
mov
or
aad
outsb
jne
jmp
or
xor
inc
leave
out
rol
sti
push
xor
into
push
push
sbb
loop
adc
push
jge
fcmove
jns
mov
mov
aas
pop
leave
int3
mov
cs
nop
xchg
test
jg
push
lret
xchg
jmp
mov
sbb
mov
fidivl
out
aas
mov
add
mov
fcmovb
cmp
add
test
mov
push
fnstsw
ljmp
aas
jmp
pop
cltd
idivl
sbb
fcompl
mov
pop
bnd
and
jl
cmpsb
outsl
dec
mov
lock
mov
jb
loop
sti
adc
inc
xchg
and
or
std
aad
je
pop
sahf
or
and
fwait
mov
pushf
fldcw
and
adc
pop
nop
cwtl
add
test
dec
push
push
inc
ds
pop
stos
sub
fiaddl
hlt
outsb
jne
xchg
sbb
cmp
mov
nop
int3
enter
scas
lahf
cmp
movsl
orb
and
inc
sbb
les
loopne
fistl
fstp
inc
jmp
jecxz
jbe
sbb
les
adc
fnstenv
jmp
mov
rcrl
scas
test
icebp
sbb
jg
scas
shrb
xor
jge
cmp
lcall
lea
mov
int3
mov
andl
popf
sub
fdiv
loopne
and
cmp
jne
ds
movsl
sub
xor
lahf
xchg
push
and
mov
sub
or
insl
dec
jne
sahf
mov
movsl
orb
jb
scas
test
lahf
test
aas
imul
fisttps
jecxz
mov
mov
or
jmp
dec
mov
jg
jecxz
dec
and
popf
xchg
or
stos
xchg
mov
adc
out
fbstp
jge
fisttpll
je
aaa
mov
iret
je
fs
add
mov
mov
rorl
repnz
inc
cmovo
ret
adc
jno
jae
and
sbb
push
sbb
mov
inc
mov
arpl
dec
xchg
dec
jns
sub
enter
gs
sub
dec
jns
or
out
repnz
aam
aam
loope
mov
lea
jo
lea
sti
inc
stos
jecxz
mov
mov
dec
mov
or
shrb
aaa
xchg
dec
jbe
xlat
mov
push
je
pop
out
xor
enter
sub
xchg
push
mov
aad
iret
push
aas
popa
cmpsl
data16
or
iret
icebp
mul
mov
adc
mov
mov
mov
loop
push
stos
into
jle
jecxz
mov
mov
outsl
flds
jl
mov
or
mov
mov
idivl
jns
sbb
fiadds
lods
outsb
and
lret
dec
fldl
fidivrl
insl
pop
scas
pushl
stos
xor
mov
mov
cltd
mov
inc
bound
lods
in
fmul
sub
xlat
add
dec
sub
pop
pavgw
insb
mov
dec
dec
mov
fnstcw
push
cltd
mov
cmp
cmpb
pusha
mov
jp
fstpt
cmp
stc
inc
fdivs
jnp
addr16
imul
mov
imul
mov
into
frndint
xor
adc
adc
jl
loopne
jl
scas
pop
iret
loopne
jo
push
in
imul
aam
mov
stos
pop
stos
cmp
mov
pop
push
add
xchg
idivb
lock
mov
iret
mov
orb
cli
mov
mov
mov
psllw
icebp
mov
cmp
icebp
jp
sbb
cmp
mov
mov
scas
stos
jns
aas
mov
arpl
rcrb
xor
loope
mov
out
jno
mov
xor
push
and
lods
inc
int3
mov
mov
aad
sti
call
dec
add
inc
scas
mov
cmp
out
mov
sub
mov
sbb
mov
lahf
sti
mov
sbbl
adcl
loop
sbb
aad
imul
push
sti
mov
pop
xchg
lret
xor
xchg
xchg
xchg
xorl
jle
loope
dec
mov
ss
lahf
jo
push
mov
xor
fwait
mov
mov
cmp
push
aaa
add
idivl
in
sbbb
inc
inc
jns
jecxz
jns
mov
int
test
add
mov
mov
cli
add
inc
cmpsb
es
sti
or
in
sub
mov
mov
or
pushf
xor
aas
jp
sub
or
mov
sub
cltd
mov
outsb
or
outsl
xchg
enter
add
aam
das
sbb
aas
adcl
imul
je
sbb
adc
fbld
mov
mov
fcmovu
jo
push
fistpll
and
mov
and
jecxz
pop
cwtl
mov
fisubrl
jnp
cwtl
fidivrl
mov
sti
jl
or
mov
and
inc
in
mov
stc
sbb
mov
or
mov
mov
pop
inc
mov
in
lahf
jl
xor
jp
xchg
in
jno
sbb
sub
xchg
pop
shl
insl
push
mov
in
fninit
jmp
sub
push
pop
dec
mov
jge
call
xor
inc
mov
inc
fiadds
lea
ljmp
filds
jecxz
stc
adc
mov
jmp
sarb
in
mov
cmp
aam
faddl
pop
dec
neg
mov
xor
out
lea
mov
sarl
adc
mov
data16
aaa
rclb
inc
je
dec
out
jns
sbb
loop
mov
sub
movsb
or
cmp
dec
mov
call
xchg
jecxz
dec
mov
fsubs
loope
xor
mov
rcrl
lea
decb
adc
ret
dec
fists
or
mov
test
dec
scas
cmc
xchg
nop
inc
push
leave
sti
inc
sarl
inc
or
xchg
inc
aaa
fwait
data16
test
push
jb
jne
pop
fimull
ja
mov
pop
inc
cmp
shlb
jecxz
jecxz
fdivp
xchg
inc
cmp
pop
push
mov
aas
pop
movsl
xchg
dec
xchg
push
inc
mov
ss
in
shlb
lods
sbb
fsts
add
dec
mov
mov
mov
push
mov
ja
lea
pushf
mov
cmp
aam
mov
push
stos
mov
mov
neg
mov
pop
xchg
inc
rorb
test
xor
gs
lea
sbb
mov
scas
sub
dec
inc
dec
pusha
loope
aas
fs
mov
xor
jns
sbb
mov
sbb
lds
jnp
fldcw
loopne
call
mov
pop
jne
mov
pop
mov
out
mov
fnstsw
xorb
mov
mov
jmp
shl
push
lods
sbb
cmp
iret
aaa
cmp
inc
fisubrl
mov
ljmp
mov
sahf
fisttpll
sub
sahf
xor
xchg
sub
aam
mov
mov
mov
fcmovb
sti
fcmovnu
push
int
mov
lea
xchg
sub
aam
mov
mov
lea
mov
xchg
loopne
lea
sub
ficoml
mov
ljmp
jecxz
xor
das
fnsave
jns
mov
aam
stos
mov
xchg
mov
mov
mov
mov
mov
rcrb
testl
stos
lea
or
fs
lock
jge
dec
mov
rcl
stos
dec
rcrb
sub
sub
mov
rclb
mov
mov
mov
pop
pop
mov
rorb
gs
leave
cmpsb
fnstsw
mov
mov
inc
mov
cmp
mov
shl
icebp
inc
mov
mov
lods
push
or
add
aas
addr16
mov
xor
cltd
xchg
fnsave
arpl
popf
loopne
arpl
pusha
jae
pop
cmp
popa
fcmovu
fidivs
lahf
cmc
ljmp
mov
ficompl
xchg
mov
mov
mov
mov
imul
add
jnp,pt
fsqrt
loope
xchg
fiaddl
inc
in
and
push
add
jns
mov
rolb
fcmovu
mov
ja
je
mov
mov
mov
pushf
jnp
aad
sub
sub
mov
jno
aas
jmp
jns
scas
jnp
pushf
decl
mov
cld
loopne
mov
mov
sbb
test
fimull
call
mov
fisubl
mov
push
fld
loop
mov
sbb
aas
push
jle
outsb
arpl
pop
ret
pushf
or
fists
es
lods
mov
fidivrl
out
sbb
cmpsb
or
movsl
js
xor
outsl
mov
jecxz
or
test
cmp
repz
mov
xor
int3
or
loope
stos
fnstcw
mov
paddq
icebp
jmp
mov
xchg
mov
mov
jne
or
rcll
mov
or
fwait
mov
fidivrl
mov
out
dec
mov
mov
inc
stos
jp
in
es
jecxz
mov
dec
out
adc
cltd
push
loop
enter
shrb
mov
push
shrb
dec
xchg
pop
arpl
lods
mov
push
mov
cmp
cmp
fsub
cmp
jecxz
mov
or
lock
gs
outsl
data16
xchg
adc
dec
cltd
movsb
pushl
mov
xor
fisubrl
repz
ficomps
test
adc
sti
sarb
popa
xlat
cs
jle
inc
fmul
enter
ret
mov
jg
out
scas
inc
test
movsb
leave
mov
sarb
inc
sbb
ds
sub
mov
fidivl
mov
das
aam
ja
mov
push
fadds
outsb
loope
xchg
mov
jmp
push
push
test
loope
iret
fldcw
test
adc
push
fsubrs
mov
ret
lds
push
mov
inc
cmp
pop
mov
test
and
daa
movsl
arpl
repz
shrl
pop
and
mov
sub
lret
icebp
xor
arpl
jno
addr16
andb
arpl
jp
cmc
orb
xorl
adc
test
loopne
mov
cld
lret
ret
jl
pop
cltd
imul
pop
xchg
iret
push
mov
ljmp
and
sbb
fildl
leave
jnp
pop
fstps
test
jp
mov
arpl
dec
jbe
xor
int
div
mov
cmpsl
dec
mov
ret
mov
mov
or
or
mov
fsubrl
cmp
jp
adc
popf
sahf
mov
shlb
hlt
jnp
in
mov
jb
mov
add
call
jg
sti
shl
icebp
mov
push
movsl
mov
enter
xor
pop
jbe
sub
and
pop
mov
and
sbb
fiaddl
ret
jns
add
sahf
adc
inc
adc
outsl
int
sub
xor
popf
std
cmpsb
inc
jbe
pop
jge
cs
out
sarl
out
in
add
test
fisubrs
jecxz
mov
mov
sti
loope
mov
mov
jge
dec
adc
jmp
sbb
xor
stos
ljmp
push
pop
mov
dec
bound
pop
push
subb
enter
in
loope
in
outsb
mov
fisubrl
enter
call
out
cmpl
bound
daa
cli
shll
pop
fisubl
dec
es
jne
lock
or
xchg
fcoml
dec
mov
mov
rol
jecxz
movsl
aam
stc
push
mov
xchg
mov
jns
insl
adc
shll
cmpsb
mov
fdivrl
or
cli
pop
adc
jae
scas
sbb
mov
push
rcll
pop
dec
out
and
jecxz
push
mov
pop
das
popf
je
test
loop
mov
int
test
inc
ror
aad
mov
iret
mov
xor
aaa
scas
xchg
test
xchg
sbb
mov
push
mov
pop
jae
add
or
sti
fistpll
inc
dec
ljmp
pushl
xchg
jno
push
xor
push
insb
mov
mov
popf
js,pt
adc
adc
leave
push
jle
out
fdivl
aaa
mov
push
mov
into
cmpsl
pop
call
clc
mov
dec
mov
test
loopne
testb
fistpll
adc
mov
movsl
xchg
xchg
lods
out
mov
pop
adc
je
test
cmp
outsl
xchg
mov
popa
pop
pop
outsl
stc
pop
mov
cmp
push
add
stc
stos
jnp
pushf
ljmp
imul
imul
arpl
inc
jmp
imul
fidivl
sbb
push
arpl
call
test
lods
sub
cmp
fisubrl
add
sbb
mov
das
aad
movsl
mov
or
xchg
cmp
stos
jecxz
test
clc
xchg
add
fcomps
jecxz
mov
lods
inc
stos
mov
jg
aas
das
fwait
mov
sbbb
mov
sub
lret
scas
imul
shlb
adc
adc
loop
jnp,pt
rcrb
aaa
inc
or
mov
aaa
inc
inc
jl
or
aaa
sub
aaa
sbb
aaa
lock
jmp
add
sbb
mov
xor
and
xor
ret
sbb
scas
mov
adc
mov
mov
mov
jl
lea
sti
aas
fdivr
aas
jo
jecxz
aas
add
inc
jl
or
aas
sub
jl
aas
in
pop
fdivrs
data16
fmuls
cmp
dec
inc
fidivrl
inc
jl
inc
inc
jl
or
cmp
pop
outsl
lds
out
pop
fdivs
aam
push
arpl
jnp
imul
enter
das
test
bound
data16
psllq
andl
es
dec
pop
mov
popa
addr16
xor
dec
mov
test
iret
mov
aas
ja
lods
jecxz
cmp
xchg
mov
flds
loopne
outsl
nop
jle
xlat
fsubrs
imul
pop
adc
xor
test
daa
cmp
push
sbb
fisubl
mov
add
das
leave
loopne
mov
cs
sub
rol
or
mov
inc
lea
test
add
mov
fsts
in
cmc
sub
mov
jl
adc
jns
fdivrl
mov
mov
jle
jmp
loopne
inc
sbb
aam
inc
xor
lret
jnp
mov
aam
mov
shll
leave
jnp
addb
jg
xor
jmp
out
sti
cmp
outsl
iret
xchg
mov
lcall
or
std
adc
imul
mov
mov
jecxz
lock
testl
repnz
jge
dec
sahf
stos
outsl
jne
add
push
mov
mov
mov
mov
ja
scas
iret
ds
mov
jae
add
flds
mov
mov
jnp
sub
scas
stc
cs
testb
dec
and
mov
subb
xchg
out
mov
loopne
sahf
in
mov
mov
testl
aaa
mov
mov
in
imul
jp
movsb
xchg
or
lods
cwtl
adc
lahf
sub
test
jl
jne
out
add
mov
mov
add
cmp
rorb
push
push
mov
orb
ja
pop
mov
cmp
mov
mov
in
lahf
push
jns
mov
inc
mov
daa
pop
mov
jle
mov
jno
ret
mov
xor
dec
xchg
iret
pop
fstpt
mov
stos
insb
leave
ficompl
sbb
mov
mov
pop
aas
fsub
in
leave
test
pusha
lods
mov
fbld
cmp
mov
jmp
outsb
xchg
es
or
mov
aad
adc
push
cli
test
jno
xchg
test
orb
pop
ret
dec
loop
xor
stos
movsl
jecxz
repz
out
sbb
lock
imul
scas
pop
imul
pusha
mov
lahf
loopne
mov
outsb
sub
outsb
aaa
lock
scas
out
in
sub
add
sbbb
inc
adc
add
lods
jnp
fimuls
loop,pn
stos
mov
aas
mov
adcl
aam
xchg
frstor
jmp
imul
flds
xlat
fwait
inc
mov
test
jo
xchg
in
test
insl
scas
fwait
std
dec
mov
or
jecxz
mov
add
push
mov
add
psubusb
aas
repz
push
fidivrs
arpl
pop
and
jnp
fucomip
adcl
insl
jmp
pop
movsl
mov
stc
xlat
lods
fninit
fistl
jmp
push
fldt
dec
mov
in
mov
xchg
inc
mov
jns
xchg
sbb
sarl
stos
jo
loop
mov
sbb
dec
pop
fnsave
push
lea
mov
mov
loop
in
jecxz
push
scas
xchg
fidivl
mov
mov
push
push
loop
mov
fucom
jle
and
mov
sbb
rcrb
out
fidivl
es
sbb
das
aaa
fwait
das
sarb
mov
mov
mov
jg
push
dec
test
lods
sti
ficomps
negl
inc
jne
rclb
pop
jecxz
pop
shrl
cmc
pop
jecxz
inc
out
insl
mov
loope
sahf
incb
cltd
mov
call
dec
test
in
pop
mov
inc
imul
cwtl
dec
fdivp
jge
xchg
mov
push
mov
popf
and
insb
mov
cmpl
mov
xor
pop
iret
jno
aaa
xchg
adc
lahf
stc
in
jns
jno
fwait
mov
mov
rcrb
stos
inc
out
inc
repz
int3
lods
in
sbb
inc
jns
repnz
jecxz
jns
pop
stos
cmp
jecxz
mov
jg
mov
push
jecxz
in
mov
mov
pop
divb
push
push
sbb
cmp
addl
pop
lds
jbe
dec
pop
test
mov
cld
mov
sbb
inc
mov
push
and
in
mov
sub
ret
xchg
addr16
in
shl
mov
jp
les
pushf
stc
rolb
dec
aaa
mov
xchg
sti
jmp
mov
mov
aas
in
ja
imul
pop
jne
lds
fwait
xor
jecxz
movsb
mov
fbstp
cmp
rcr
jecxz
mov
popl
adc
mov
sub
mov
lcall
sub
addb
cli
out
jns
adc
dec
sti
jbe
and
shll
das
pop
or
arpl
jle
idiv
or
dec
ds
aaa
xor
xchg
or
clc
fstp
daa
ja
mov
and
add
cwtl
pop
adcl
bound
cmp
xchg
dec
lds
movsb
xor
idivl
push
sbb
fidivrl
xchg
jecxz
imul
adc
roll
clc
pop
stos
sub
movsb
mov
popf
out
dec
dec
sub
inc
mov
loop
les
pop
sti
mov
popf
mov
lahf
nop
aas
loopne
jle
push
and
mov
sbb
mov
push
rorl
imul
scas
ja
frstor
and
push
bound
in
inc
inc
adc
mov
stc
adc
jmp
push
xchg
cwtl
add
xlat
subl
dec
les
test
cmc
mov
jno
aaa
adc
insb
hlt
je
cmc
xor
sahf
out
xor
adc
cli
mov
dec
out
mov
push
mov
std
push
hlt
or
shrb
adc
sbb
fwait
add
leave
mov
dec
jg
insl
xchg
ss
outsl
mov
in
out
adc
shlb
dec
lcall
push
dec
sbb
hlt
dec
jle
fisubrl
mov
lret
arpl
ja
js
mov
arpl
cmp
cmc
sbb
mov
outsl
xor
jecxz
jge
or
lea
leave
mov
mov
lods
xlat
add
pop
mov
xor
or
jnp
mov
movsl
les
lcall
mov
scas
jecxz
xchg
mov
mov
mov
jecxz
mov
insb
adc
mov
dec
mov
mov
sbb
lods
ja
push
subl
jg
in
daa
or
mov
out
pop
push
push
xchg
orl
push
lret
jmp
stos
fidivrl
into
push
jb
jp
sbb
je
out
xorl
arpl
or
jle
push
cmc
jb
pop
mov
in
sub
mov
mov
mov
iret
lock
outsb
jo
cmp
jecxz
mov
andb
sbb
mov
mov
jo
sub
icebp
jl
pop
jmp
sbb
imul
mov
bsr
pop
inc
xchg
adc
daa
lds
add
or
sbb
adc
push
pop
mov
adc
lret
lock
xor
xor
sarl
jnp
push
xchg
bswap
mov
lcall
and
cmp
loope
sub
jno
xor
jmp
jg
out
and
jmp
sti
shrl
scas
sub
das
aad
xchg
xor
pop
mov
or
jnp
pop
cmp
shrl
xchg
loop
push
cltd
push
or
pop
or
inc
xor
sub
mov
mov
sbb
aas
sbb
sti
test
adc
inc
imul
cmp
adc
daa
or
pop
mov
adc
xchg
xchg
jne
enter
dec
jecxz
mov
mov
sub
iret
aaa
test
outsl
jg
mov
mov
sub
out
and
xchg
cmc
xor
jmp
sbb
and
scas
iret
jecxz
arpl
sbb
inc
mov
fadds
fidivrl
enter
pop
dec
pop
mov
jle
ficoms
lahf
js
mov
rcl
leave
fsts
add
mov
mov
cs
and
sarl
loop
cmpsl
aaa
in
xor
pop
sarl
mov
sbb
mov
inc
dec
pusha
test
cmpsl
outsl
mov
or
push
push
push
and
inc
addr16
mov
cs
jecxz
mov
xchg
pop
fisubrs
imul
lock
sarb
xchg
pusha
lcall
sub
inc
inc
lahf
bound
out
mov
fwait
loope
jecxz
lods
movb
cmpsb
daa
cmp
mov
mov
js
add
jmp
push
scas
xchg
movsl
pop
mov
lcall
or
jg
jg
mov
lock
mov
jnp
outsb
cmc
stos
ja
xchg
cmp
scas
in
pushf
xor
xor
push
cltd
arpl
jle
cmp
jecxz
sti
repnz
into
imul
cmp
lock
sub
shll
addr16
mov
test
xchg
jmp
mov
jb
push
push
fdivrl
jmp
and
dec
and
lea
jp
loope
dec
stos
js
push
mov
pop
mov
cmovno
call
xor
scas
mov
jmp
lods
or
jb
loope
loope
test
jecxz
arpl
out
push
mov
push
mov
push
fisttps
jno
out
jns
sbb
scas
js
sub
dec
aam
ret
rcl
popf
fstpt
or
lods
sahf
incl
xor
ss
pop
inc
test
sti
dec
mov
cmp
mov
imul
jmp
inc
mov
or
and
inc
test
popa
test
jb
sbb
pop
imul
ds
or
or
pop
xlat
mov
mov
movsb
cmp
fwait
loopne
mov
and
push
xor
mov
fimuls
inc
jle
fwait
push
jb
jo
das
jno
add
xor
leave
out
jecxz
scas
imul
loop
mov
dec
jnp
mov
jg
fistpll
jnp
dec
ret
pop
mov
mov
and
test
lcall
gs
call
mov
sbb
mov
negb
fcomp
out
movsb
push
mov
xor
pop
push
pop
shll
hlt
lods
testl
mov
daa
aaa
mov
sbb
mov
cmpsl
add
dec
loopne
data16
mov
data16
add
lcall
fmuls
cmc
mov
jmp
fsubp
mov
lahf
inc
cmp
push
sub
pop
mov
cmp
ds
stos
dec
ljmp
adc
mov
aam
inc
mov
out
in
int
jbe
mov
push
mov
xor
and
pop
xchg
ds
cltd
or
rolb
xchg
ret
fiaddl
mov
cwtl
mov
and
jnp
gs
cmp
mov
ljmp
mov
add
pop
mov
or
mov
pop
stc
clc
cmpsb
xchg
sbb
push
or
leave
loopne
cli
sbb
mov
add
mov
nop
loopne
cli
out
cwtl
mov
inc
xor
mov
mov
scas
sbb
mov
stos
push
jo
mov
push
test
jg
mov
push
mov
mov
ret
xchg
enter
enter
stos
push
cmp
hlt
dec
jns
add
sub
mov
push
jbe
int3
aam
andb
cmp
mov
je
mov
icebp
mov
fwait
mov
push
mov
pop
mov
movsl
mov
pop
cmpsl
in
cs
mov
movsb
add
int
mov
mov
pop
dec
fdivrl
stos
ret
orl
or
add
inc
mov
pop
aam
push
push
loop
jnp
pushf
cwtl
xor
jno
mov
stc
fnstenv
dec
aaa
lahf
jge
jecxz
mov
mov
aaa
mov
cmp
insl
sahf
or
aaa
xor
cmp
mov
xlat
push
shl
jge
jp
adc
cmp
stos
mov
mov
sbb
fldcw
cmp
test
mov
push
fnstenv
add
loopne
mov
inc
insl
or
cmpsb
aam
stos
mov
imul
cmp
inc
sbb
mov
icebp
dec
into
inc
stc
lods
lods
mov
test
imul
sbb
jmp
fildl
cmp
push
das
pop
add
addr16
fldt
imull
push
jle
cmp
lcall
leave
mov
sub
cmp
xor
aaa
jno
sub
iret
sbb
mov
sub
lahf
nop
out
stos
mov
cmpsl
mov
out
jns
loope
xor
imul
xchg
xchg
fbld
movsl
lods
sti
mov
test
gs
sub
out
and
sub
jp
mov
adc
xchg
pop
and
mov
cmp
push
bound
dec
mov
push
mov
movsl
sub
adc
cmc
out
lcall
xor
scas
xor
sub
or
jecxz
aaa
stos
fidivrl
mov
sub
movsl
out
outsl
mov
sub
dec
or
add
stos
or
leave
jecxz
aam
rorl
in
icebp
int
fistps
aad
leave
jl
sbb
fwait
sti
test
sbb
cmp
xchg
sbb
fdivs
in
or
push
cmp
pop
mov
insb
mov
out
daa
and
pop
out
mov
mov
pop
sub
jecxz
jmp
fs
js
cmpsl
jge
pop
mov
cmp
cmp
shrl
pop
sub
lret
or
jno
mov
adc
out
loopne
fsubp
adc
int3
subl
adc
add
pop
popa
sbb
enter
jnp
push
fsubrl
adc
adc
jecxz
hlt
mov
add
or
int3
jo
xor
cs
scas
and
jnp
adc
jecxz
outsl
test
jp
add
mov
sbb
scas
xchg
jge
fwait
arpl
shl
sub
in
dec
sbb
mov
jne
ss
cmp
xchg
mov
das
stos
fwait
test
scas
lahf
cmp
lret
mov
jecxz
push
dec
mov
cmpsb
cltd
mov
jae
jae
and
ljmp
daa
outsb
test
mov
jp
nop
fstpl
xchg
les
sub
cltd
jns
mov
add
stos
jmp
xor
fidivs
xor
adc
into
mov
cmpsb
jecxz
inc
enter
cmpsb
loope
sub
cltd
sub
adc
in
and
out
cmp
inc
mov
frstor
push
sbb
push
mov
push
rorl
xor
pop
stos
pop
loop
fbstp
xchg
mov
jns
movsb
loopne
push
rolb
dec
cmp
mov
mov
xchg
sub
mov
xchg
jmp
xchg
xor
roll
mov
in
adc
pop
loope
ret
shrb
cmp
ds
aaa
sub
ss
mov
lods
dec
shl
push
fnstsw
fisttpl
push
pop
xchg
add
clc
imul
pop
dec
ret
ret
lds
mov
int
xlat
sub
aad
bound
inc
cmpsb
je
ljmp
push
jo
lahf
sahf
sarb
lahf
and
lods
push
fldt
sbb
pop
pop
ljmp
dec
jns
dec
cmc
inc
push
fucomp
mov
jne
hlt
mov
mov
in
mov
mov
scas
push
fcmovbe
lods
add
lcall
jbe
je
cli
fcomp
mov
mov
repz
fisubs
fdivrs
and
gs
push
lods
ret
xor
cmp
ds
lods
in
leave
idiv
mov
dec
int3
ds
aam
add
stos
or
lods
test
addr16
ficompl
sbb
mov
rorl
xchg
jno
ljmp
dec
jle
sbb
test
addr16
add
outsl
repnz
jnp
xlat
dec
imul
sbb
addr16
inc
outsb
loop
fistl
cli
jecxz
stos
dec
mov
shlb
ret
out
dec
stos
insl
dec
cmp
scas
ss
mov
out
test
fwait
jae
mov
jecxz
dec
aas
dec
mov
mov
pop
ljmp
ja
add
mov
mov
inc
xchg
ds
roll
xchg
dec
cmp
dec
aas
subb
mov
lods
push
add
push
lods
mov
pop
fcompl
jne
fwait
add
stc
xchg
mov
ljmp
out
insb
sti
lods
mull
stos
lods
or
lods
rorb
pop
pushl
aaa
xlat
mov
pop
shll
bound
jmp
jl
leave
movsb
shl
int
xor
sub
icebp
dec
int3
xor
shl
lahf
xor
and
enter
scas
loope
mov
dec
sub
jge
fstpl
xor
or
outsl
in
jae
or
mov
mov
mov
add
add
xchg
push
mov
jl
fdivl
cs
push
test
inc
push
fsub
xchg
mov
imul
sarb
data16
xor
inc
bound
movsl
or
sbb
mov
adc
repz
lret
push
add
int
repnz
ss
xorl
fsubl
xorl
adc
mov
aad
int
inc
rcrb
cmp
jg
sbb
jl
mov
leave
or
jbe
mov
inc
cwtl
pop
cli
sbb
inc
push
mov
ret
gs
or
xor
repnz
jl
aas
cmp
sbb
cmp
outsb
movsb
xchg
and
and
aam
add
sub
popa
mov
jno
cmp
andl
in
fdivrs
cmpsb
loope
test
mov
fnstcw
jecxz
mov
cmpsb
push
loop
xor
push
cmc
call
mov
aaa
lret
stos
inc
inc
into
aaa
and
test
bound
out
outsb
push
aam
rorb
movsl
repz
xchg
xor
add
mov
je
cmp
out
mov
cmc
mov
stos
rclb
pop
jne
adc
loopne
jo
cmpsl
dec
xchg
outsb
xor
jg
divl
mov
stos
jecxz
adc
xchg
adc
pop
inc
gs
mov
jp
push
and
sub
mov
sti
mov
add
or
sub
jns
fisubrl
and
outsb
in
xor
mov
mov
imul
faddl
mov
jnp
leave
sub
stc
or
movsl
in
add
loop
jmp
mov
cmp
sub
dec
pop
push
sahf
jns
fidivrl
in
push
jo
pop
fwait
mov
cltd
hlt
movsl
and
xor
dec
arpl
shlb
shl
mov
out
cs
fildll
movsl
and
xor
fdivrs
xor
inc
call
jecxz
mov
and
aas
orb
push
inc
jns
test
xchg
or
xchg
mov
out
cs
pop
pop
jl
shrb
xor
leave
or
xchg
mov
nop
arpl
jne
lock
into
pop
aaa
fstpt
mov
stc
sub
jb
icebp
repnz
cltd
jl
sub
rcrl
jne
lcall
xor
mov
sbb
mov
sbb
jns
jg
cmp
roll
jb
cmp
inc
test
test
cmc
in
mov
in
iret
fnstenv
scas
stos
dec
inc
add
test
jb
iret
sbb
dec
bound
mov
inc
push
movsl
mov
push
xor
xor
popf
mov
dec
fidivs
pop
out
cs
pushf
stos
mov
xor
pop
fmul
and
pushf
adc
fnstsw
xchg
fidivs
pushf
jnp
xchg
xor
test
pop
dec
lods
mov
nop
fcompl
cmp
mov
mov
sub
mov
mov
in
cmp
in
add
inc
int3
fs
inc
lret
imulb
divb
out
cmp
mov
mov
and
fmull
cmp
mov
xor
adc
mov
mov
sbb
cmp
cmp
stc
mov
push
clc
stos
fidivrl
jo
dec
imul
cmp
mov
flds
push
pop
pop
scas
ss
mov
or
es
jge
mov
dec
xor
inc
sub
out
mov
fbstp
out
cs
push
loope
ds
addr16
mov
add
jecxz
pushf
cmp
add
pop
mov
rcr
out
mov
mov
std
bound
mov
inc
pushf
fsub
sahf
cld
jg
xor
test
pop
xchg
fcmove
cs
xchg
adc
test
mov
cmp
mov
outsb
and
icebp
cwtl
xorl
cmpsb
clc
adc
xchg
push
mov
lds
cmp
orb
int3
adc
stos
jecxz
dec
xchg
fidivrl
fimull
mov
and
arpl
push
es
test
xor
push
jae
push
call
into
scas
mov
xor
adc
aaa
mov
sbb
jb
xchg
cmp
mov
int3
pop
clc
push
or
mov
test
jl
jecxz
jns
sbb
xor
mov
lret
stos
dec
sub
pop
in
nop/reserved
mov
mov
lods
or
xchg
test
mov
cli
jae
add
fwait
shl
cmpsl
enter
mov
pop
imul
and
mov
repnz
lret
aas
cmpsl
jge
xlat
rcll
ljmp
inc
mov
add
pushl
test
cmp
xchg
dec
fdivr
mov
sti
shrb
mov
stos
sti
pextrw
popf
mov
fistps
es
xchg
stos
fsubr
add
cmp
test
das
test
jg
sbb
ficoml
cmpb
add
xor
add
int3
jle
addr16
push
xchg
cmp
cmp
sahf
sar
sbb
das
test
jg
mov
aas
sbb
fsubrl
jnp
cmp
lods
fistps
xchg
test
mov
jge
lahf
mov
add
stos
add
cmp
pop
mov
and
cmp
mov
sbb
jg
lret
jbe
sbb
ja
test
cmpsb
daa
jns
xchg
std
lahf
mov
add
faddl
jle
fists
out
jns
fsubrl
add
cmp
nop
aas
add
faddl
jle
fistps
out
jns
fsubrl
fisttps
shll
mov
inc
fimull
pushf
add
stos
dec
out
fistpl
sahf
jnp
nop
aas
push
shrb
outsl
sbb
fmul
add
cmp
mov
dec
cs
sbb
add
das
lret
dec
pop
stos
or
das
test
jg
fildl
sub
jnp
nop
aas
aaa
jg
xchg
or
jbe
sbb
pop
fiaddl
mov
addr16
fiaddl
das
repz
pop
stos
or
out
fstpt
mov
aas
push
outsl
stos
and
out
orb
scas
and
cmpsl
adc
xchg
nop
aas
dec
fistpll
dec
sbb
fsubrl
add
cmp
pop
jbe
sbb
lahf
call
flds
iret
xor
jae
scas
xor
cmpsl
lret
mov
add
inc
dec
inc
movsl
mov
pop
pop
fildll
sub
cmp
fisttps
mov
cwtl
lcall
jp
mov
xor
fcmovu
call
mov
mov
cmp
mov
fnsave
fistl
fistl
fcomi
fcomi
fildl
fildl
fistl
push
fildl
inc
fistl
fildl
loop
daa
mov
lcall
jp
mov
ficompl
mov
lret
sbb
sbb
sub
sti
clc
sti
cli
sti
or
dec
sti
pop
sti
pop
cld
push
scas
push
pop
dec
pop
or
fdivrp
mov
aas
repnz
jmp
mov
pop
repz
loopne
ja
inc
mov
out
out
gs
in
push
ret
lret
cltd
or
adc
data16
cmp
mov
and
jecxz
outsl
xchg
mov
jge
inc
or
stc
ffree
das
or
xchg
xchg
push
leave
jae
rcl
and
loopne
fildll
jbe
mov
cmp
iret
xor
fwait
lahf
and
mov
rorl
aaa
in
in
outsb
mov
or
pop
or
mov
cmp
aam
jmp
insb
jp
mov
fldt
or
sub
adc
fildl
xor
cltd
shll
jo
or
push
icebp
mov
adc
cltd
out
inc
mov
xchg
cmp
jg
fsubl
mov
mov
pavgw
aam
pop
push
icebp
out
dec
jno
call
test
jns
aas
ja
test
fldt
mov
xor
sbb
cli
and
add
sbb
cmc
pop
push
inc
mov
or
ret
jle
loope
pop
xchg
cmp
les
adc
adc
hlt
sub
fstp
neg
xor
jae
push
xchg
outsl
adc
sub
push
cltd
mov
cmp
dec
into
lods
and
lods
adc
dec
rcrb
pop
mov
jg
mov
add
fucomi
ret
adc
negl
push
int3
xchg
mov
dec
jae
sbb
cmpsb
pop
dec
mov
cld
add
jo
lds
inc
lret
jno
fsts
mov
jno
inc
cmp
jb
bswap
test
xlat
int
push
sbbl
xchg
lahf
das
cmc
jp
popa
inc
cmp
dec
nop
jnp
repnz
dec
cmpsb
mov
xchg
or
in
fucomip
xchg
imul
mov
in
cmp
sti
lahf
fnstcw
mov
popf
ret
and
idivb
mov
jle
dec
test
jno
xchg
and
xchg
in
inc
into
fsub
clc
mov
leave
stc
jnp
and
pop
pop
ljmp
mov
mov
sub
xchg
dec
mov
stos
aad
jl
pop
in
lahf
test
iret
fcmovne
push
stos
sahf
cmp
cli
and
push
addr16
mov
xchg
mov
sbb
and
jne
iret
call
push
xchg
mov
inc
mov
fcmovnbe
subl
mov
repz
jae
or
adc
dec
les
push
adc
push
jg
mov
mov
lea
mov
test
pop
aas
sub
cmp
subl
add
add
lret
pop
inc
xchg
popf
outsl
mov
sub
testl
test
mov
mov
sub
push
sbb
add
lahf
rorl
inc
enter
imul
cmpsl
lock
imul
outsb
jle
loopne
xchg
pop
mov
fidivs
jnp
aas
xor
outsl
inc
pop
mov
push
push
xor
and
pop
mov
xor
test
das
sub
jg
iret
fcmovnu
jg
sub
pop
movsl
fld
mov
add
inc
xor
test
ret
add
fld
adc
fsubrs
inc
xor
test
ret
add
inc
xor
jg
add
fsubrs
inc
xor
test
ret
add
inc
xor
test
ret
aad
xor
test
ret
add
inc
xor
test
ret
add
inc
xor
test
ret
add
inc
xor
test
ret
add
movsl
fld
mov
add
inc
xor
test
ret
add
dec
jno
les
das
lret
cmc
jle
mov
mov
ud2
jno
shlb
mov
test
mov
ss
ret
shrl
int
jecxz
out
stos
aad
out
and
out
xchg
mov
ret
lds
add
and
lods
loopne
pop
xor
dec
and
xchg
negb
dec
movsl
hlt
jae
lds
data16
dec
pop
sub
lcall
test
xchg
pop
inc
push
xchg
pusha
mov
lret
mov
mov
adc
stos
dec
sub
lcall
mov
sub
addl
fs
outsl
adc
sub
pop
and
jo
rclb
inc
mov
and
pop
fdivs
imul
test
and
xchg
and
notb
addr16
pop
shlb
mov
jecxz
mov
inc
stos
loope
mov
inc
test
inc
lods
loope
iret
mov
aas
sarb
icebp
pop
rcr
fidivl
in
sbb
shlb
jb
mov
scas
scas
mov
lods
dec
jnp
bound
mov
leave
push
push
mov
lret
or
mov
mov
inc
idivb
xchg
cmp
xor
pop
pop
sub
jbe
cmp
imul
mov
fwait
mov
outsl
pop
fidivrl
mov
or
cmp
jnp
jecxz
xor
inc
and
sub
mov
sbb
jns
add
packssdw
add
inc
test
out
iret
mov
mov
in
push
call
into
adc
stos
in
mov
stc
mov
iret
aaa
mov
push
xor
sbb
arpl
sub
jbe
stc
jecxz
mov
idivl
idiv
fistpl
sbb
xchg
outsl
and
jecxz
fnstcw
test
loope
ficoml
pop
push
mov
out
push
lahf
cmpl
jbe
mov
fistps
cmp
outsl
sub
jo
das
inc
inc
or
call
mov
inc
mov
sbb
xchg
pop
mov
mov
sarl
cltd
or
jo
faddl
push
mov
leave
hlt
or
cmpsb
jecxz
mov
aad
pop
ljmp
stos
movb
imul
jg
jl
adc
cwtl
push
add
jo
stos
pop
pushl
out
push
xor
cmc
jb
mov
dec
in
int
pusha
and
in
enter
mov
cmp
jecxz
ss
fsubrl
jne
mov
cwtl
mov
mov
xor
decl
add
or
insl
mov
xor
shl
mov
mov
push
jmp
pop
jl
aas
mov
testl
mov
inc
or
inc
enter
mov
and
pop
sub
into
pop
stos
aam
mov
and
repnz
cmc
cmpsb
mov
cmp
mov
sbb
or
jnp
add
lds
fidivl
outsl
mov
call
ret
xchg
iret
adc
aad
mov
inc
cmp
inc
adc
push
lods
lods
lret
xor
sti
dec
lods
aad
cmp
pushl
dec
jge
add
subb
sbb
push
xchg
sub
fidivl
pop
mov
rorl
outsl
jecxz
jae
jecxz
pop
and
xchg
inc
pop
cmpsl
leave
out
sti
cmpsb
ret
cmp
push
mov
lahf
rcrl
fwait
arpl
gs
cli
mov
icebp
shlb
fildll
jns
fdivrl
and
call
fnstcw
mov
sti
mov
jg
or
jg
or
call
fdivl
or
jg
ret
mov
inc
bound
stos
push
lods
add
mov
mov
scas
test
pop
mov
jp
push
scas
mov
mov
aaa
push
loope
mov
call
mov
out
jp
push
in
jb
pop
out
mov
mov
repz
jbe
lods
fnsave
add
jbe
lods
fldl
inc
int3
jbe
lods
and
jbe
lret
int3
jbe
lods
xor
push
int3
jbe
lods
xor
or
jbe
lods
xor
jae
jbe
mov
xor
jbe
lods
cmp
jbe
lods
jmp
dec
sub
lods
jmp
dec
test
dec
test
dec
test
daa
mov
mov
mov
mov
jecxz
pop
push
out
jp
push
in
scas
xchg
mov
push
lds
mov
mov
enter
int3
jle
scas
adc
out
push
testb
add
cmp
mov
mov
leave
mov
add
fbstp
push
cmpsb
sub
dec
fmulp
jb
xchg
arpl
jnp
adc
mov
aaa
cli
shll
and
mov
add
or
les
roll
or
fldt
fistpll
pop
xchg
lock
jg
cld
fwait
xchg
xchg
out
inc
dec
ss
mov
dec
adc
jmp
and
mov
add
xor
pop
jno
mov
out
jg
lahf
xor
loope
aas
mov
push
pop
jl
rclb
sbb
jno
push
loope
pop
mov
adc
inc
addb
loope
lods
jge
pop
mov
aas
jge,pn
inc
sub
inc
xchg
fdivl
jnp
or
movsb
enter
mov
mov
inc
sub
aaa
xchg
fdivl
movb
loope
xor
dec
mov
dec
jb
fwait
mov
in
jg
insl
mov
xchg
mov
movsl
fnsave
scas
fistps
or
xchg
mov
jb
scas
fbstp
stos
xchg
insl
cmp
fists
mov
xchg
mov
cmp
sbb
lahf
jmp
inc
in
and
mov
sbb
fdivl
sar
or
mov
jl
adc
mov
loope
mov
dec
mov
sbb
call
and
mov
mov
jae
ss
pop
jns
fld
enter
test
or
dec
test
lcall
test
iret
fstps
jg
fists
sub
dec
cmp
add
dec
xchg
mov
test
shr
cmpsl
je
or
xchg
mov
or
std
inc
mov
cmp
adc
xlat
sbb
inc
sub
aas
mov
xor
jmp
or
bound
sbb
cmovae
inc
and
push
sti
mov
jnp
rorb
aaa
mov
imul
mov
lods
insl
out
mov
fstpt
addb
fldcw
ret
jg
fists
fs
movsb
sahf
call
mov
test
mov
mov
inc
sub
cmp
fdivrl
pop
cwtl
or
sbb
mov
lahf
pop
inc
sub
mov
xchg
inc
insb
adc
mov
cmp
sbb
jmp
add
lock
mov
sub
stos
ror
fstps
inc
mov
pop
and
dec
repz
scas
in
call
scas
lret
call
xchg
cwtl
or
stos
or
mov
mov
ret
scas
lods
std
mov
jnp
mov
notl
out
cld
push
outsl
mov
dec
jnp
leave
mov
mov
sbb
jecxz
sbbl
stos
sbb
and
loopne
andb
cmp
sbb
sub
inc
mov
enter
std
xchg
pop
or
mov
ljmp
pop
mov
outsb
arpl
pop
mov
lahf
stc
mov
jl
cmpl
daa
loopne
xchg
fcmovnb
dec
leave
insb
jecxz
and
arpl
popf
shl
rcr
cmpsb
js
mov
mov
mov
pusha
fdivrl
push
fadd
pushf
pop
pusha
icebp
pop
mov
iret
fisttpl
xor
xor
cwtl
lods
js
stc
shl
mov
xor
mov
fists
addr16
loop
test
fstpt
push
mov
fs
push
and
jae
gs
cmpsb
int3
adc
and
ja
test
jg
in
and
pop
cmpsb
mov
clc
mov
stos
cltd
sbb
shlb
orb
cli
mov
enter
inc
push
call
add
mov
jnp
xlat
inc
mov
xchg
leave
adc
ret
cmpsl
push
dec
lret
jle
fcompp
push
xor
mov
push
inc
mov
addr16
std
sub
js
aas
into
adc
stos
push
push
xor
addr16
xchg
push
mov
fdivl
lret
roll
push
fwait
loop
mov
mov
xlat
xor
shlb
lods
dec
pop
lds
mov
cmpsl
cltd
stos
mov
fsubrs
xchg
test
in
leave
leave
add
orl
or
xor
sti
dec
xchg
stos
pop
pop
pop
repz
stc
fs
cltd
fcompl
mov
lods
lods
mov
push
mov
loopne
in
inc
jl
and
loop
adc
push
mov
icebp
jns
push
mov
jecxz
xlat
out
mov
jecxz
mov
mov
inc
dec
fnstenv
mov
aas
iret
mov
ret
insl
inc
xchg
into
scas
adc
stc
call
push
adc
stos
push
mov
dec
and
cmp
cmpb
mov
sbb
daa
jae
fsubl
dec
push
clc
call
call
cmpsb
dec
jl
movsl
out
sbb
jno
and
mov
shll
mov
dec
adc
pop
push
jp
mov
pushf
jns,pn
lret
lahf
xlat
lret
jae
jge
and
xchg
sti
lret
push
ja
xor
xor
fnstcw
sbb
pop
inc
hlt
adc
add
sub
in
in
cmp
jle
movsl
js
jg
mov
aam
lods
or
xlat
rclb
jge
sbb
xor
push
pop
out
sbb
mov
call
fbstp
xchg
cmp
mov
mov
sub
and
out
fwait
imulb
pop
mov
lret
mov
push
mov
out
incl
je
xchg
sbb
add
lods
ret
push
icebp
mov
sub
push
pop
rolb
pop
test
push
fsub
stos
jmp
rcrb
mov
jno
lock
stos
jge
and
xor
mov
enter
subps
int
sahf
mov
outsb
pop
mov
push
pop
cmpsl
adc
inc
int
stos
pop
inc
loope
mov
in
mov
out
daa
cmp
lea
sbbb
push
ffreep
in
mov
fbstp
adc
mov
stc
test
pop
lods
insl
dec
mov
or
fs
call
inc
jnp
pop
pushf
lret
jecxz
cmp
scas
mov
cmp
cmp
jecxz
xchg
jno
pop
stos
cli
add
comiss
pushf
mov
cltd
sbb
dec
adcb
aas
adc
fcmove
insl
call
mov
jno
repz
dec
mov
xchg
or
mov
aam
in
dec
int3
add
cmpxchg
mov
mov
adc
inc
adc
stos
adc
push
dec
lcall
dec
divb
shl
les
imul
out
fcmovne
xor
fidivrl
insb
mov
add
mov
mov
pop
mov
call
cmp
dec
call
dec
mov
mov
fsts
mov
dec
fwait
outsb
mov
sub
inc
shrl
in
rcr
shrl
mov
push
sub
loopne
inc
mov
mov
jae
popf
jno
cmp
jns
fnstcw
repz
aam
mov
or
andl
mov
pop
nop
jnp
ljmp
cmc
in
xchg
daa
out
or
adcl
in
and
clc
imul
into
and
sub
test
lret
xchg
pop
adc
out
call
sub
stos
iret
and
xchg
xchg
sti
cmpsl
mov
mov
test
aaa
mov
cmp
mov
xchg
and
inc
aas
dec
mov
int3
movsl
mov
push
pusha
dec
cli
add
push
in
stos
xchg
mov
push
je
and
cs
out
xor
stos
xchg
xchg
sbb
jecxz
movsb
stc
sbb
lods
test
adc
inc
push
test
pop
movsb
lds
xor
scas
pop
mov
dec
cmpsb
mov
stos
mov
lods
mov
push
xchg
sbb
leave
stos
pop
fldt
daa
test
lods
inc
sti
lods
xchg
fwait
mov
lock
call
xor
cmp
cs
adc
push
je
shrl
jae
push
fidivl
test
sti
dec
scas
fistpl
or
jne
xor
aas
pop
dec
pusha
jbe
push
call
pop
in
sub
xchg
test
mov
mov
dec
rclb
ss
loope
mov
adc
inc
push
jle
lret
aad
lods
lret
dec
and
jmp
ljmp
int
dec
mov
iret
in
mov
int3
jge
lahf
idivl
or
xchg
fists
and
pop
divb
xchg
push
js
inc
je
mov
pop
mov
fists
aaa
das
into
cli
lret
aas
sub
sbb
fwait
sbbl
mov
push
lds
jge
add
loope
sti
mov
loop
shlb
ljmp
imul
mov
sub
xchg
cmp
fidivrs
cmp
lods
ret
mov
sub
jb
fildl
scas
dec
fisttpll
pop
cs
insb
jb
loop
fstp
and
pop
xchg
jg
aas
cmp
movsb
sub
or
or
add
pop
lock
int
iret
sahf
addr16
loop
pusha
jl
rdmsr
jns
dec
or
lea
rolb
daa
jecxz
mov
shlb
arpl
mov
xorl
stc
xchg
cmp
mov
jecxz
mov
pusha
imul
push
cltd
pop
xlat
subl
imul
jnp
push
and
loope
mov
loop
scas
aas
ret
cmp
adcl
mov
inc
notl
das
daa
xchg
xor
scas
pop
sub
mov
dec
inc
cltd
mov
loop
jecxz
lret
fiadds
or
pop
sti
mov
pop
mov
sbb
jecxz
int3
mov
sarl
leave
int
scas
test
jp
pop
je
outsb
push
jae
in
iret
movb
mov
enter
cmp
adcb
stos
iret
lds
popf
jnp
mov
lret
test
mov
movsl
subb
pop
std
jecxz
cltd
jns
add
ds
ja
xor
jecxz
mov
insl
sub
adc
mov
jne
xchg
xlat
jnp,pt
push
scas
jnp
test
test
scas
xor
mov
stos
mov
push
fnsave
lods
enter
rcrl
jb
xchg
push
in
daa
das
fstpl
or
je
add
fsubr
xor
dec
jg
mov
pop
inc
jp
dec
imul
xorb
xlat
shl
cmpl
rcr
push
xchg
xchg
pop
in
xchg
inc
mov
out
xchg
sahf
xor
mov
mov
jmp
sti
pushf
mov
mov
shl
dec
fidivrs
sub
mov
leave
push
mov
pop
mov
sbb
mov
mov
in
scas
pushl
outsl
mov
out
and
cltd
or
mov
mov
mov
add
out
fidivl
xchg
or
sbb
imul
mov
cs
add
pop
adc
js
or
pop
leave
mov
sahf
push
jp
lods
mov
cmp
mov
sub
aad
sti
mov
cltd
mov
sbb
int
stos
call
jns
gs
sbb
cs
mov
push
adcb
cld
xchg
cmpsb
lret
sub
dec
push
push
sub
jae
sub
fisubrl
dec
test
xlat
xchg
ret
test
std
scas
mov
arpl
stos
into
xchg
xor
and
sarb
mov
jns
fnstsw
imul
sub
jmp
nop
mov
mov
dec
sti
mov
inc
mov
mov
sti
push
popf
and
fcomps
and
inc
dec
mov
mov
lods
and
jnp
out
adc
and
xchg
gs
popa
stc
fs
std
jno
adc
xchg
cmp
fcmovbe
add
adc
iret
sbb
xor
inc
jbe
mov
xchg
cli
jecxz
mov
sahf
jecxz
pop
add
mov
int3
jecxz
lret
mov
loope
ret
pop
aas
dec
aas
js
fbld
mov
xor
movb
xchg
lahf
pop
pushf
enter
xchg
inc
jne
jg
lea
mov
pop
push
xor
dec
add
daa
push
jnp
dec
cs
shll
jo
sarl
outsb
sbb
cmp
cltd
push
stos
ret
je
fidivrs
imul
and
js
add
les
pop
scas
out
mov
fstpt
add
add
dec
jl
nop
xchg
jae
fwait
jnp
push
loopne
outsl
and
jl
push
sbb
lods
inc
inc
mov
and
in
xor
xchg
xor
sub
movsl
adc
push
ja
fsubrl
fldenv
testb
les
dec
add
jecxz
aaa
mov
push
jecxz
sti
lahf
dec
in
repz
call
cmp
jne
call
push
cmp
fs
cs
pop
fidivrl
ret
test
aas
ja
aaa
fldcw
inc
and
mov
test
mov
in
outsl
mov
test
icebp
cld
mov
mov
cmpb
mov
xor
test
mov
xchg
loopne
stos
jg
cmp
out
cwtl
test
mov
inc
mov
stos
sub
in
cwtl
mov
mov
orb
jo
jge
dec
inc
ds
in
mov
int3
ja
js
sbb
pop
xlat
scas
fldt
jecxz
cmp
jl
aas
mov
aaa
jae
mov
repnz
sbb
int3
jns
push
je
out
jp
aas
stos
and
inc
jp
lods
jne
fcompl
mov
pop
mov
popf
repnz
sbb
jae
jb
jge
inc
fcompl
sti
hlt
loopne
push
repz
das
divb
sub
out
push
jne
and
call
mov
jmp
pop
sub
xor
lret
mov
cmp
mov
movsb
fbstp
pop
lds
xor
fwait
das
mov
adc
movsl
jp
leave
mov
pushf
mov
das
sub
mov
lods
xchg
adc
clc
pop
nop
cmc
gs
add
cltd
adc
cmpsb
stos
sarb
cli
mov
ret
xchg
incb
xor
xor
fcmovnu
fs
rolb
xchg
or
xlat
pop
shl
sbb
jge
dec
cmpsb
flds
aas
bnd
or
dec
dec
fisttps
aas
jecxz
and
rol
mov
ja
jnp
movsb
xchg
sub
test
sar
js
xor
aaa
cmc
pop
jae
push
and
cmc
xor
fistl
mov
pop
cmc
fdivs
popa
int
movsl
icebp
sub
sti
shll
scas
hlt
loop
mov
pop
adc
loopne
outsl
mov
addr16
fildll
loopw
aam
mov
arpl
sti
fldt
sub
les
loopne
mov
leave
pushf
mov
jnp
aam
pop
cmp
xor
test
or
mov
sub
jmp
aaa
rcrl
sbb
outsl
dec
mov
ss
call
sbb
ds
les
mov
fidivrl
cmp
in
and
sub
mov
add
push
xor
xchg
pop
dec
sbb
mov
mov
stos
mov
scas
push
mov
fs
cmpsl
pop
test
pop
jg
jae
out
lds
dec
fbld
das
test
or
cmp
lds
fsubs
inc
xchg
or
rcll
xchg
and
pop
add
scas
movsb
out
in
movsb
imul
mov
insb
mov
loopne
and
lret
lds
fmull
cmpsl
lret
into
cltd
mov
in
inc
jnp
lds
push
out
jle
xlat
lods
cmp
fdivr
mov
movaps
shrl
sbb
fisttpll
mov
fdivrs
movsl
neg
loope
cmpsl
lcall
outsb
stos
outsl
hlt
jl
jle
sti
cmp
rcrb
das
mov
lret
push
sbb
aaa
sahf
scas
out
lods
adc
mov
imul
ret
in
aas
insl
lea
mov
mov
jmp
lea
in
subl
xlat
push
idivl
jecxz
lods
inc
mov
outsl
dec
mov
sahf
mov
stos
loop
ds
mov
loopne
inc
mov
loop
sub
pop
add
push
mov
mov
cmp
lods
fdivr
pop
iret
ss
jne
mov
dec
jmp
inc
fistps
push
sbbl
cli
int3
jg
jecxz
std
ja
loopne
nop
push
pusha
aam
pop
add
sub
in
pop
sti
sti
mov
xor
xlat
ror
pop
iret
into
mov
mov
rorb
in
fnstcw
ret
pop
lahf
lret
repz
or
test
shll
test
and
sbbl
cwtl
loope
mov
inc
out
jl
pop
test
xor
mov
stos
adcl
and
rolb
lahf
pop
add
xchg
mov
or
test
iret
mov
mov
dec
sahf
imul
jns
xor
test
inc
or
xor
mov
or
idivl
cmpsl
lret
push
sub
jg
mov
push
mov
pop
inc
pop
push
sbb
fwait
jnp
jg
out
rcl
rclb
mov
sbb
mov
test
faddl
cmp
mov
popa
xchg
push
in
jg
or
sbb
jbe
push
out
jg
cmp
lret
jl
sbb
fdivl
cmp
cmp
dec
cmp
mov
inc
aaa
mov
mov
inc
sti
jne
dec
bound
outsl
mov
jl
pop
push
cmp
mov
jmp
mov
xchg
inc
imul
out
jg
movsl
jl
sbb
or
push
dec
jmp
outsl
pop
adc
mov
outsl
mov
pop
mov
int
dec
fldt
insl
inc
xchg
les
je
jmp
pushf
pop
fs
shlb
jb
mov
jecxz
mov
insl
mov
je
orb
nop
mov
stos
lods
loope
mov
push
iret
mov
fildll
loope
mov
in
jp
sbb
push
fsub
jnp
in
call
inc
mov
add
mov
dec
xchg
dec
aaa
int3
je
xchg
fisttps
js
jnp
rorl
sbb
pop
push
fistl
adcl
mov
pop
iret
adc
lahf
fwait
push
and
sbb
cmp
data16
aad
ljmp
arpl
jmp
or
orb
sbb
adc
out
fstpl
push
add
out
test
out
mov
movsl
test
pop
adc
mov
shlb
mov
mov
aaa
mov
sub
test
into
pop
jbe
sbb
ja
mov
rorl
pop
inc
lret
filds
push
mov
inc
mov
aam
mov
pop
adc
call
mov
dec
aaa
and
mov
fcmove
insl
sbb
test
aam
dec
ret
jge
sub
mov
test
fistpl
mov
pop
sti
jo
dec
jae
aas
xlat
addb
scas
inc
aaa
int3
push
xchg
js
outsl
push
inc
cmp
xchg
xor
lcall
test
shrl
cmp
jecxz
rcll
out
jnp
repz
jbe
movsl
loope
out
xchg
mov
div
push
das
iret
sub
xchg
bound
daa
mov
aad
lock
pop
pop
stos
cmpsb
pusha
xchg
dec
jg
repnz
daa
mov
jecxz
loopne
mov
xchg
call
rcrl
push
aaa
jnp
or
inc
sub
xchg
mov
int
cwtl
xchg
pop
testl
imul
xchg
cmpsl
pop
imul
cltd
pop
test
sbb
lret
dec
mov
sbb
call
aaa
sarl
leave
jne
loop
jnp
ret
pop
ret
in
dec
dec
mov
xchg
filds
les
setnp
xchg
mov
mov
or
add
sarl
pusha
das
inc
mov
imul
les
loop
pop
cmp
rol
arpl
mov
inc
jge
add
or
les
les
mov
loope
cltd
mov
loope
inc
sti
cmpsl
xchg
sti
mov
mov
mov
cmp
loop
pusha
mov
enter
xor
data16
cli
jecxz
aas
lcall
je
and
pusha
cmp
pop
in
or
mov
and
cmp
mov
and
aad
stos
scas
push
lea
xor
loop
dec
mov
mov
mov
mov
push
xchg
xor
lds
fbld
stos
mov
test
hlt
lret
or
cmp
fwait
mov
fsubp
nop
sbb
and
xor
je
jmp
mov
mull
and
add
xor
xchg
fcoms
and
cmpsl
sbb
xchg
out
jnp
xor
xchg
stos
stos
and
je
or
and
negl
pop
nop
aas
sub
sbb
sub
flds
jnp
xor
xlat
jecxz
xor
shrb
dec
add
aas
divb
pushf
in
nop
aas
add
faddl
jle
push
xchg
cmp
sub
sti
js
sub
sti
jno
ja
out
aas
sub
fs
cmp
nop
sbb
xor
jecxz
xor
addr16
mov
sti
jg
xor
xchg
stos
xchg
sbb
xlat
mov
aas
sub
jnp
jb
pop
cmp
stos
popa
mov
addr16
xor
stos
cwtl
stos
test
daa
sub
add
fists
sub
and
leave
icebp
cmpsl
test
jg
sbb
icebp
out
cwtl
stos
test
add
dec
out
orb
or
cwtl
sub
xchg
inc
xor
lcall
push
mov
pop
push
xchg
fisttps
lods
cmp
lret
sbb
jle
or
sbb
faddl
jle
dec
and
stos
sbb
xchg
repnz
sbb
mov
faddl
jle
cmc
out
out
fsubrs
sub
add
fimull
mov
orb
or
cwtl
sub
mov
test
test
push
leave
cwtl
sub
xchg
or
mov
sub
dec
int
call
les
call
mov
stos
addb
loopne
push
jle
mov
ret
mov
jp
mov
jp
mov
or
sbb
sbb
sub
ljmp
test
pop
test
cmp
mov
test
push
js
jae
jg
jg
jg
jg
leave
addr16
sbb
cld
addb
shlb
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
fstl
pusha
frstor
xor
xor
inc
scas
inc
daa
enter
out
push
daa
repnz
pop
and
cmp
aaa
sbb
or
inc
xchg
inc
out
mov
mov
mov
lea
push
inc
addr16
enter
sbb
sub
mov
lcall
mov
sub
mov
jns
or
sbb
mov
ret
xchg
sbb
mov
or
or
mov
lret
xchg
and
jp
mov
xor
xchg
inc
cmp
into
mov
fnstenv
mov
mov
aam
faddl
rclb
jecxz
out
stos
aam
xchg
rclb
jo
push
test
aaa
ja
xchg
out
mov
inc
js
inc
dec
stos
stos
adc
and
dec
mov
mov
mov
sti
mov
or
fdivrl
in
fwait
shlb
cld
std
push
or
lods
movzwl
mov
cwtl
outsb
xchg
popf
cwtl
gs
add
xchg
xor
aaa
and
mov
ret
xchg
lods
mov
sub
xchg
adcl
outsl
addr16
in
adc
fsubp
adc
test
mov
aas
mov
xchg
lds
mov
test
adc
xor
nop
in
in
jecxz
int
leave
dec
xchg
mov
aam
lret
jg
add
adc
mov
mov
push
cmp
sarw
cld
testb
push
fmulp
loopne
push
xor
jae
and
sahf
repz
jno
jge
mov
cmpb
mov
xor
leave
in
scas
fmul
in
outsl
int3
pushf
push
pop
add
cmpsb
rol
and
mov
lret
mov
xchg
and
push
dec
add
scas
addb
das
movsl
outsb
xchg
inc
jns
addl
xchg
div
sbb
inc
mov
inc
prefetch
popf
xor
outsl
sahf
xchg
fldenv
cmp
lods
mov
lods
pushf
cmp
jecxz
mov
out
pop
insb
testl
cmpsb
insb
jge
repnz
call
mov
inc
cmp
loope
insb
jmp
add
mov
sub
icebp
lods
or
hlt
int3
popl
mov
mov
je
lods
push
or
and
imul
clc
iret
fwait
xchg
scas
pop
or
mov
mov
lret
and
mov
mov
jp
pushf
mov
xchg
adc
sbb
int3
fdivr
adc
push
bound
lock
out
jnp
sub
shlb
and
or
or
test
jns
adc
sbb
jnp
or
sub
pop
sub
sbb
or
jg
pop
fistl
lret
fdivs
lods
mov
ss
mov
je
lcall
hlt
fstl
loope
jb
mov
imul
addb
mov
add
mov
push
jge
xor
lahf
push
cmp
mov
or
and
lahf
mov
inc
out
shl
scas
cli
test
daa
aaa
test
out
daa
mov
fnsetpm(287
lcall
jmp
fwait
stos
add
jl
popf
mov
lods
in
adc
jnp
cld
shll
cmp
mov
daa
jge
jns
sub
daa
call
lods
push
mov
lahf
mov
mov
or
push
gs
or
jae
repnz
lock
push
lods
jle
xor
sarl
ja
sub
loop
mov
fbld
add
clc
mov
loopne
xchg
push
test
flds
mov
aaa
lock
xchg
fldenv
mov
sub
fnstenv
add
jle
fsubrs
inc
xor
test
ret
add
inc
xor
test
ret
aad
xor
test
ret
add
inc
xor
test
ret
add
movsl
fld
mov
add
inc
xor
test
ret
add
fld
adc
fsubrs
inc
xor
test
ret
add
inc
xor
jg
add
fsubrs
inc
xor
test
ret
add
inc
xor
test
ret
aad
xor
test
ret
add
inc
xor
test
ret
add
movsl
fld
mov
add
inc
xor
test
ret
mov
out
mov
mov
and
jne
push
jo
adc
jg
mov
std
fucom
jp
shlb
jmp
cmp
jo
push
test
mov
rcr
lahf
sarl
fidivrl
xchg
loopne
icebp
xorl
aam
sbb
xlat
jns
cmpsb
xchg
insl
lods
in
adc
mov
xor
leave
xorl
int
jae
mov
cmp
or
dec
dec
ljmp
aad
daa
mov
cmc
dec
shll
xchg
aam
adc
jg
f2xm1
int3
ds
jns
popa
and
and
inc
xchg
mov
roll
mov
loope
pop
inc
add
pop
addr16
outsb
pop
lahf
lret
imul
sti
push
mov
adc
filds
pop
js
push
cmp
xchg
call
jo
push
fdivrs
push
jmp
jp
dec
cmpsl
ds
iret
mov
aas
add
mov
jl
incl
and
roll
jnp
int
mov
addr16
pop
mov
enter
imul
push
fildl
mov
sti
adc
lahf
mov
mov
lahf
out
sti
xchg
inc
jg
sub
sbb
xor
imul
inc
xor
jl
pop
jp
sbb
lret
inc
xor
imul
inc
xor
push
jns
inc
pushl
xchg
loopne
enter
mov
sahf
lret
out
xchg
addl
pushf
jecxz
lret
jne
sub
lds
shrl
mov
mov
nop
sub
fldt
pop
sti
cmp
rcrb
inc
jl
or
test
dec
ret
pop
out
test
ret
inc
jle
aam
jae
sbb
jb
stos
fnstsw
inc
jns
mov
xchg
mov
xor
jns
pop
dec
mov
scas
test
aas
jbe
aaa
mov
aam
mov
pop
mov
push
mov
jnp
mov
mov
jno
inc
aaa
push
jo
roll
imul
subb
inc
adc
and
in
bound
sub
mov
cmp
outsl
push
cli
imul
outsb
inc
adc
les
push
and
xlat
js
add
mov
andl
xchg
aaa
mov
aas
jnp
out
cmp
insl
push
pop
dec
jecxz
imul
and
mov
hlt
inc
imul
or
lcall
mov
xchg
lret
inc
xchg
mov
xor
loope
pop
loop
mov
sub
sbb
mov
mov
loope
jge
push
loope
out
loope
stos
or
call
loope
stos
mov
int3
mov
out
and
repnz
sar
in
ljmp
stos
and
imul
test
dec
out
mov
sbb
mov
cmp
inc
sub
insl
insb
mov
test
clc
cmp
in
stc
and
fldl
jecxz
push
mov
cld
mov
inc
mov
jmp
iret
and
rcl
mov
imul
mov
imul
sub
stc
movsb
or
testl
push
dec
and
daa
and
xchg
les
dec
push
xor
sarb
push
mov
mov
sub
xor
or
xor
inc
icebp
cmpsl
mov
jge
push
or
notb
add
aaa
jecxz
jecxz
fsubrs
jg
lock
jae
inc
jg
inc
push
ret
sbb
mov
outsb
fwait
xlat
movsl
dec
mov
xor
repz
mov
mov
clc
sbb
push
add
fcmovnu
in
cld
cmp
mov
scas
xorb
jecxz
movsl
sbb
shll
jae
mov
adc
sbb
and
in
dec
out
in
and
jl
fstpt
jae
popa
push
test
stos
out
sbb
gs
cltd
xor
lcall
arpl
add
jp
cmc
addb
push
jecxz
das
cmc
subb
negl
aaa
mov
sti
mov
js
loop
in
loopne
fisubrl
int
fcmovnbe
scas
sbb
xor
inc
add
adc
adc
mov
js
bound
or
imul
enter
cmp
or
outsb
fidivl
ror
jno
movb
mov
jno
int
inc
cmc
addb
jecxz
outsl
cmc
subb
cmp
imul
fldt
and
jnp
lret
mov
pop
mov
cmp
or
in
sbb
pushl
shufps
outsb
adc
adc
fldenv
xor
mov
sub
stos
stos
scas
fdivl
cmp
mov
arpl
dec
arpl
xor
inc
inc
mov
into
mov
lcall
call
shlb
outsb
ljmp
ror
xchg
lret
sub
rcrl
inc
push
mov
imul
into
or
arpl
xchg
into
mov
outsl
or
sahf
into
insl
xor
pop
jno
into
outsb
lahf
jno
cs
mov
test
sahf
adc
loop
into
fidivrl
clc
mov
loop
pop
pop
lahf
and
leave
into
adc
mov
stos
cmpsl
add
or
jb
cs
dec
enter
call
sti
pop
js
sub
enter
or
sbb
or
push
mov
jae
dec
loope
pop
call
lods
shrb
mov
mov
rcll
rcl
mov
aas
shrl
out
fwait
ja
xor
aas
jg
xor
pushf
add
std
cmp
mull
repnz
sub
push
sub
flds
test
push
ror
inc
xor
add
mov
mov
jecxz
jnp
mov
jno
adc
inc
add
lcall
mov
inc
inc
sub
or
cmp
jae
fucomi
pop
dec
mov
mov
push
and
std
gs
dec
mov
lea
mov
subl
imul
bound
mov
nop
mov
aas
xor
stos
xor
lods
arpl
fisubl
push
stos
outsl
jg
bound
mov
test
lods
sub
leave
or
jg
sub
xor
sahf
mov
popf
lahf
xor
jg
sub
insb
std
mov
imul
inc
clc
push
cmpsl
fnsave
test
sti
jecxz
jge
fcmovnu
js
ss
mov
or
cmpsl
sbb
inc
mov
cli
mov
ja
jns
xchg
mov
shr
xor
rorb
pop
mov
call
mov
call
imul
xchg
sub
outsl
add
lods
jle
adc
mov
daa
cmpsl
arpl
mov
mov
xchg
and
push
and
cmpsl
add
mov
sub
add
dec
sbb
les
sti
cmp
sub
js
test
cmp
stc
or
call
imul
pop
sahf
mov
js
mov
loope
pop
xchg
pop
push
enter
aaa
inc
sti
xchg
sub
pop
inc
mov
pop
leave
inc
dec
dec
call
arpl
jae
and
imulb
xlat
test
or
pop
mov
jmp
cmpsl
data16
and
divps
mov
lods
mov
mov
sarl
js
or
or
dec
int
mov
mov
rol
repz
sub
into
jmp
scas
cmpsl
ret
out
cwtl
lds
in
cs
mov
jecxz
ret
and
xchg
cli
cmp
fninit
movsl
xchg
inc
push
inc
push
out
xor
cmp
out
jp
xor
ficoml
jp
loop
jmp
mov
push
pushf
call
push
bound
cmpsl
sub
inc
sahf
cmp
inc
xchg
js
pop
mov
das
cmc
pop
ret
stos
xor
in
sahf
mov
dec
lcall
mov
xor
and
fstpt
sbb
lock
js
push
stos
cwtl
xor
iret
adc
out
mov
shlb
movzbl
lea
pushl
push
movl
mov
push
mov
pushl
pushf
pushl
ret
popf
cpuid
nop
push
movl
push
movl
pushf
push
movb
lea
jmp
push
add
jne
repz
mov
lcall
xchg
or
mov
ret
jecxz
mov
mov
cmp
arpl
xchg
mov
leave
jnp
addl
or
loope
cmp
divb
and
stos
lcall
insl
inc
cld
mov
imul
orl
and
xchg
aaa
xchg
in
loop
add
cmp
leave
push
cmp
in
in
xor
inc
cmc
test
add
push
push
inc
jmp
add
mov
movsb
rol
add
cmpsl
ja
icebp
mov
inc
mov
call
xchg
loop
clc
mov
bound
movsb
mov
fnstsw
xchg
dec
imul
xor
xchg
mov
rcrb
cmc
mov
push
sbb
mov
fisubl
dec
or
cmp
and
sti
mov
xchg
adc
mov
jmp
and
aaa
repz
mov
rolb
mov
mov
cmp
aad
loope
mov
int3
lahf
and
ljmp
cmpl
adc
sub
popa
xchg
dec
rcrl
fsts
std
cltd
pop
jmp
cmc
shl
or
stc
inc
outsb
mov
inc
fldenv
ret
xor
cltd
and
pop
jmp
pop
movsb
in
cwtl
jecxz
mov
sub
and
fists
cmpsb
imull
nop
push
xchg
mov
xor
imul
cmp
mov
push
imul
cmp
test
std
enter
dec
jo
jo
out
jge
sbb
lock
arpl
test
cwtl
and
pop
imul
xor
shl
jnp
xor
push
dec
ret
mov
test
aaa
dec
jnp
mov
pop
mov
pop
or
out
pop
imul
mov
std
scas
jb
push
or
push
pop
adcl
inc
lock
inc
cmp
insl
std
sbb
cmp
mov
push
int
les
out
and
pushf
lea
jg
push
lea
call
push
push
pusha
pushf
lea
jne
lea
movsbw
lahf
lea
mov
pusha
pushf
lea
jmp
insb
cmp
lahf
cld
outsb
shlb
aad
or
test
push
and
out
xchg
and
xor
xorl
push
sbb
mov
scas
pop
int3
repz
cli
int
incl
xchg
jb
sub
fimuls
pop
xchg
imul
imul
mov
pop
push
mov
sbb
jbe
or
mov
sbb
cmp
and
dec
sbb
outsl
outsl
sti
sbb
jns
jb
dec
inc
fldenv
add
cltd
and
sub
jae
pop
xchg
lcall
frstor
in
pushl
lea
call
test
pusha
call
js
add
mov
add
add
cmp
add
pop
add
pop
add
jecxz
add
or
add
add
add
add
push
pushl
lea
je
clc
pushf
cmc
push
sub
jmp
movw
mov
pusha
jmp
repz
cmp
std
mov
add
xlat
shrl
ljmp
jns
pop
mov
call
sbb
mov
sub
jo
add
mov
out
xor
sarb
stc
ja
addr16
mov
cmpsb
in
jge
addr16
pop
mov
js
daa
or
nop
xor
lahf
dec
sub
mov
test
int
out
in
lods
jmp
cltd
pop
daa
stos
out
cld
cmpsb
nop
roll
je
stc
adcl
lock
jecxz,pt
push
adc
sub
xchg
inc
jb
arpl
cwtl
mov
loopne
ret
gs
sbb
repz
adc
in
lods
add
rorb
stos
add
inc
dec
addl
cmc
lds
cld
sti
out
push
cmpsl
daa
pop
sub
pop
sbb
inc
mov
mov
jp
or
inc
sbb
inc
jle
outsb
ret
adc
fnstcw
jg
inc
js
lcall
sub
aad
jp
sbb
push
icebp
push
pop
nop
addl
jae
push
and
sub
ret
out
fimuls
jne
dec
icebp
dec
dec
lcall
cmc
or
lahf
fmull
negb
ljmp
xchg
loopne
sub
mov
add
add
sbb
sbb
mov
shr
addr16
adc
aas
fwait
jne
cmpsl
push
and
enter
xor
xchg
xor
sub
cmpsb
repnz
int3
jnp
daa
fisubs
scas
enter
mov
jo
test
movsl
ja
push
sarb
outsl
adc
mov
mov
push
scas
add
cmp
or
icebp
mov
xchg
cmpsl
mov
inc
das
mov
out
push
mov
add
add
push
add
push
add
and
lcall
incl
add
add
add
pop
cmc
popf
sub
mov
pop
arpl
mov
insl
inc
and
add
imul
inc
xchg
pop
push
cld
lds
pop
inc
inc
fsubl
rorl
rol
repnz
lcall
and
sbb
mov
int
mov
enter
xchg
aam
or
cmp
xor
dec
insb
sti
mov
inc
testl
lret
pop
adc
mov
pop
and
pop
mov
leave
xor
repz
and
pop
ror
cltd
sbb
inc
xlat
sbb
and
inc
enter
jns
enter
stos
sbb
outsb
hlt
js,pn
dec
enter
pop
push
test
add
or
test
mov
and
cwtl
pop
xchg
cmp
arpl
pop
test
pop
push
jl
push
fiadds
push
fwait
cmpsb
adc
and
imul
fisubrl
pushf
sub
push
jmp
call
lea
ja
call
test
btr
xor
btr
mov
sub
add
shl
mov
cmc
test
jmp
mov
add
lahf
mov
movzbw
inc
rcl
shr
lea
neg
call
jmp
mov
test
call
fistpll
mov
out
fsts
in
and
or
push
mov
jl
lcall
xchg
inc
xchg
jle
adc
inc
mov
pushf
adc
mov
adc
pop
mov
ljmp
inc
add
imul
cli
dec
add
push
addl
adc
daa
cld
and
ret
xchg
pusha
xchg
out
and
call
mov
jo
push
inc
xchg
jle
adc
xchg
ret
mov
out
push
pop
stos
inc
test
jge
xor
lret
xchg
push
mov
and
lods
aaa
andl
ja
push
mov
sbb
inc
sbb
std
fld
mov
mov
mov
xor
adc
inc
inc
jb
scas
jmp
lock
fsub
rorl
aaa
cmpsb
cli
ret
out
xchg
leave
xchg
adc
dec
ja
mov
movsb
ja
out
pushf
lock
mov
int
push
dec
lret
decb
or
or
mov
test
xchg
or
adc
push
inc
out
pop
or
jb
cmp
int
mov
and
dec
stos
test
mov
cmpsl
push
xchg
flds
andl
fdiv
jmp
sbb
dec
fs
jge
aas
popf
ja
movsb
shl
aad
iret
cmp
jo
cli
xchg
xchg
lahf
dec
aam
cmp
and
movsb
lcall
mov
out
jp
outsb
sbb
mov
mov
mov
movw
pushf
pushl
ret
or
mov
sub
icebp
or
jae
enterw
dec
inc
ror
push
mov
dec
enter
sti
in
sbb
mov
lods
stos
aaa
and
movsl
lds
gs
popf
dec
jle
jae
xor
stc
int3
pop
jb
fldt
int3
cli
mov
lcall
push
fimuls
aad
and
xchg
pushl
rorb
ret
call
inc
xor
pushf
dec
ret
cld
outsl
fcmovnb
push
lcall
adc
lods
fsubs
nop
jbe
xchg
and
push
sbb
or
cmp
fisubs
cmp
out
fmuls
sub
and
subb
pop
and
dec
pushf
xchg
xlat
ret
cmpsl
test
and
fisttps
dec
fimuls
shrl
insl
dec
fcmovne
cmp
sub
test
cmpsl
mov
xchg
cmpsb
or
fldcw
add
test
push
in
mov
add
jp
xor
and
push
movl
push
pushf
pusha
pushf
lea
jmp
cltd
test
sub
dec
lods
loop
aaa
repnz
inc
mov
aas
in
xor
mov
cmp
adc
add
sbb
fistps
inc
int
push
cmp
xor
js
popa
mov
sbb
xor
push
out
shl
mov
repz
movsl
lret
and
test
add
adc
sub
pop
scas
mov
fisttps
xchg
mov
xor
call
sbb
repnz
test
lea
xchg
jg
repz
test
mov
xchg
adc
lds
or
sbb
mov
adc
jae
sbb
mov
xor
in
xor
pop
sbb
dec
aam
pop
addb
mov
mov
repz
mov
xchg
add
in
aad
mov
fwait
cmpsb
mov
pop
mov
push
pop
fld
cmp
pop
outsb
inc
mov
inc
fnstenv
data16
lea
aad
cltd
dec
xor
cwtl
leave
test
push
subl
jp
mov
push
cmp
add
stos
xor
lds
andl
das
sub
mov
fnsave
jle
xorl
stc
movsl
mov
std
es
movsl
or
jae
pusha
sbb
movsb
lock
mov
sti
sub
fistl
mov
rorl
sbb
or
or
flds
outsb
lods
clc
lret
out
xor
aas
sub
and
stos
xchg
jg
mov
lods
call
cwtl
lcall
repz
xchg
jo
xor
test
jb
and
xchg
push
sbb
xchg
pop
fmulp
hlt
sbb
jecxz
lods
arpl
dec
xchg
das
mov
dec
ret
outsb
out
fmuls
pop
mov
sbb
mov
inc
cmp
mov
lods
push
dec
and
fdivrs
jnp
pop
shll
int3
dec
push
loopne
mov
imul
orb
popf
popf
mov
mov
cmp
orl
xchg
cltd
jmp
mov
cwtl
push
lret
fistps
push
dec
sub
test
int
cmp
fldcw
sbb
pop
mov
sti
lcall
roll
outsb
pop
loope
inc
dec
add
pop
cmpsb
pusha
fcomps
xchg
pusha
adc
sub
aad
mov
loop
mov
and
dec
and
enter
out
scas
jmp
ficompl
imul
in
cltd
jle
and
sub
xor
mov
mov
cmp
dec
push
ds
mull
jae
lock
std
std
mov
into
ret
je
call
int
xor
pop
mov
push
pop
lahf
pushf
sub
xchg
cmp
push
and
aam
pop
iret
add
call
fwait
xchg
test
cmpl
mov
jbe
sub
push
es
xchg
inc
leave
pushf
mov
xchg
loopne
enter
roll
nop
cmp
add
jne
not
push
mov
not
jmp
call
bt
neg
mov
mov
pushf
pushw
popfw
jmp
jb
pop
and
push
into
sub
cld
pop
xor
test
cmp
xor
outsb
dec
inc
cltd
outsl
notb
xchg
jo
or
fs
pop
mov
les
mov
push
xchg
pop
out
outsb
mov
sub
aad
cmp
ja
or
cmp
sbb
stos
fldenv
add
shll
outsl
ss
adc
mov
pusha
inc
repnz
and
out
mov
sub
daa
imul
popfw
or
pop
jge
dec
test
fisttpl
sub
repz
fwait
sub
rcrb
loope
mov
scas
dec
pop
pop
loop
xor
and
mov
xor
int
add
mov
and
mov
mov
pusha
pusha
lea
jmp
pop
add
or
jmp
sub
pop
mov
pop
jg
mulb
fiadds
xchg
ljmp
inc
aam
mov
in
jecxz
push
jge
test
sub
inc
shrl
orl
jne
aas
pop
lea
fadds
and
jmp
dec
incl
cmp
jecxz
mov
pop
inc
insl
inc
fnstenv
adc
faddl
or
roll
fmull
jmp
std
call
mov
or
xchg
bound
sub
rorb
cmp
jb
fiadds
lahf
xchg
or
xchg
jg
mov
out
mov
fmulp
rorl
sub
adc
adc
shlb
mov
ds
std
dec
xor
add
inc
push
inc
and
mov
cmp
imul
mov
out
out
int
dec
lods
sti
dec
or
xor
lahf
popa
mov
mov
test
sub
add
ret
adc
adc
fisttps
negb
mov
or
xor
pushf
lea
je
pushf
jmp
lea
call
push
pushf
movb
pusha
lea
jmp
pusha
pusha
pushf
call
out
outsb
xlat
pop
jecxz
imull
movsl
movsl
ds
adc
scas
sbb
cmp
mov
in
and
out
mov
mov
xchg
fiadds
mov
mov
popf
popa
or
mov
sub
add
push
and
inc
arpl
lret
mov
jmp
insl
inc
and
ret
jns
insb
enter
outsl
push
mov
pop
xchg
faddl
cmp
inc
adc
sbb
inc
mov
das
test
jmp
aas
xchg
test
jne
clc
fadd
mov
sub
pushf
cwtl
or
add
mov
jne
or
or
icebp
nop
cmp
inc
inc
mov
into
cmp
xor
mov
and
mov
lea
pop
std
mov
stc
add
bt
pushf
mov
cmc
test
test
jmp
cmc
clc
cmp
cmp
pusha
jmp
jge
inc
sub
ret
lcall
shr
test
iret
mov
cmp
inc
fwait
push
add
jecxz
movsl
sbb
adc
lods
fldenv
xchg
fstsw
icebp
xchg
pop
insl
loopne
mov
in
xchg
and
adc
jmp
orl
orl
bswap
mov
pop
adc
leave
lret
xlat
mov
imul
inc
and
mov
cs
inc
into
movsl
mov
xor
mov
cmp
lock
lods
mov
lahf
xchg
inc
lahf
jecxz
mov
inc
sbb
enter
insb
fisttpll
cmovb
sbb
sti
cmp
addr16
insl
xchg
or
mov
lods
out
cmpsb
add
mov
push
insl
ljmp
adc
sub
out
and
sbb
cmp
pusha
lea
je
movsbw
movzbl
movzbw
movsbl
lea
movzbw
movzbw
movzwl
movzbw
bswap
lea
pusha
mov
call
jmp
push
push
pusha
pushl
pushl
lea
jmp
push
pusha
movzbl
bswap
lea
pushf
call
cmpsb
jno
sbb
shll
xchg
jno
mov
pop
jno
enter
mov
mov
add
ret
mov
popf
lret
inc
sbb
pop
out
jecxz
push
cli
sub
loopne
inc
cwtl
jl
push
push
nop
pop
mov
mov
push
lods
shrl
inc
or
jbe
ret
or
callw
test
hlt
mov
mov
lods
dec
sarl
mov
je
xor
addr16
adc
jl
mov
mov
cmp
mov
dec
cld
xchg
gs
cltd
pop
and
das
xchg
and
les
cmpsb
repz
jae
lods
pop
jecxz
pop
adc
cmpsl
fwait
mov
cs
xor
cli
xchg
pop
sub
xchg
pop
cmpsb
jecxz
cmp
arpl
mov
aas
lcall
test
enter
repnz
out
pop
cmpsl
and
pop
pop
add
bts
test
lea
stc
movl
rcl
pusha
sbb
bt
mov
add
test
pushf
cmc
cmp
call
pop
xchg
cmp
stc
xchg
insl
daa
add
mov
shlb
lret
repz
movsl
adc
scas
fsts
xchg
and
sar
imul
pop
pop
je
add
mov
pop
into
xor
sbb
sahf
or
add
mov
cmp
pop
mov
cmp
cwtl
inc
mov
outsb
mov
mov
nop
mov
add
shll
pop
insl
dec
sbb
push
jmp
mov
add
mov
imul
mov
jne
js
stos
jle
mov
movsl
xchg
aas
cltd
fsubrl
sarl
sti
jle
sub
movsb
enter
cmc
ds
or
test
aas
idiv
outsb
pop
cmp
jl
or
or
push
les
and
jecxz
dec
and
jmp
ret
or
test
jmp
sub
repnz
xchg
lods
cmp
in
cli
adc
in
cltd
hlt
out
mov
xorb
adc
flds
and
addb
pop
mov
add
adc
ret
les
mov
fidivl
sar
call
and
push
cwtl
mov
test
int
fwait
and
fisttps
cli
inc
or
into
mov
cld
lcall
sti
add
clc
inc
rsqrtps
inc
shr
cmp
clc
cmp
cmp
push
jmp
call
cmc
cmp
push
jmp
test
pushf
jmp
lea
jo
jne
movzbw
shl
shld
xor
aam
sbb
setl
push
mov
add
shl
add
rcr
not
sbb
pushf
mov
jmp
pusha
pusha
jmp
pushf
pusha
movl
mov
pusha
mov
pushf
lea
jmp
call
push
lea
jae
pushf
test
cmp
cmp
lea
ja
pusha
pushf
lea
ja
mov
inc
pushf
mov
not
not
inc
add
add
ror
bt
xchg
shr
rcl
mov
pusha
pushf
shl
and
mov
add
stc
call
pop
xchg
mov
or
int
add
push
push
stos
out
pop
pop
inc
lea
mov
cmp
cmp
adc
xchg
insl
in
repz
pop
mov
cmc
mov
dec
testb
push
dec
mov
test
cmpsl
in
mov
xor
lea
sbb
rorl
add
dec
adc
xchg
mov
dec
sbb
mov
and
or
lds
or
add
fimuls
je
and
sub
popf
rdtsc
nop
call
loop
cmpsl
rcll
fs
mov
and
add
mov
sahf
push
push
or
xor
push
fistpl
push
and
loop
fwait
mov
outsl
das
pop
ja
lds
and
and
sbb
cmp
imul
loop
into
mov
sbb
loop
and
inc
cs
repz
dec
out
mov
int3
jmp
sbb
das
or
aad
lret
jg
pusha
cmp
out
femms
pop
fwait
or
out
push
cmp
cmp
adc
imul
mov
jg
mov
cs
jmp
ret
xchg
ficoml
fidivrl
cmc
add
mov
mov
nop
and
mov
in
sbb
lret
sub
or
out
jns
xchg
sub
mov
cmp
xchg
popf
or
rolb
cs
je
inc
pushf
mov
xlat
push
add
clc
aad
sti
loop
sub
in
push
lret
xchg
pusha
loope
add
push
icebp
idivl
push
fbld
lret
sub
inc
sbb
push
adcl
push
xchg
push
cmp
sbb
test
cmp
cmp
movsb
dec
and
or
mov
seto
mov
bswap
lahf
movsbl
lea
pushf
jmp
adc
inc
jge
xor
cmp
mov
ret
adc
push
xchg
fs
ret
call
fwait
dec
jb
int
push
pop
jmp
pop
mov
mov
mov
sub
push
inc
test
out
imulb
push
fisubl
jnp
cmpsl
insl
jmp
pop
push
pop
je
or
push
xchg
rorl
mov
inc
adc
gs
int
popf
inc
cmp
mov
sub
scas
mov
cld
push
or
clc
mov
int
rcl
and
fs
and
mov
sbb
cmc
mov
frstor
sub
cmpb
mov
sahf
sahf
or
and
mov
popa
mov
mov
xor
adc
movsl
dec
shr
mov
lcall
fistl
fstpt
lret
jp
or
push
jp
jno
stos
mov
test
sahf
pop
ret
mov
outsb
fisubl
fbld
js
mov
jnp
cmp
shll
les
jns
mov
jo
pop
out
cmp
jg
push
add
fidivrl
add
sbb
inc
shrl
or
xlat
test
stos
lahf
push
les
into
mov
dec
enter
arpl
ja
sub
and
and
inc
loop
xorb
repnz
in
push
and
add
test
add
cmc
cmp
push
pusha
pushl
call
push
pushl
lea
jno
pushf
movl
jmp
xor
imul
insl
mov
jp
out
dec
add
cli
jne
imul
mov
mov
fisubrs
scas
push
mov
dec
stos
frndint
inc
xor
mov
cmp
adc
mov
push
mov
std
pusha
call
lea
jae
push
lea
jmp
push
add
movsl
jmp
push
pushf
mov
or
jmp
jg
mov
daa
pop
mov
and
lock
aad
ficompl
stos
jno
inc
push
rolb
mov
jge
lock
push
arpl
scas
rcrb
cmpl
pop
mov
arpl
push
adc
jns
and
out
repnz
cwtl
enter
sbb
mov
jmp
jmp
inc
flds
jp
or
pop
lcall
and
jns
dec
pop
mov
cwtl
fs
es
dec
jb
lock
and
lcall
push
ss
dec
mov
inc
mov
ljmp
lahf
lcall
nop
mov
jb
jo
push
pop
xchg
loop
fs
add
popf
pop
fisttps
out
je
sahf
shrl
imul
fs
jb
push
push
lods
pushf
push
cld
clc
xorb
out
leave
sbb
push
dec
movsb
push
lods
adc
loop
jg
int3
pop
or
lret
jae
aam
push
rclb
test
sbb
popa
sub
sub
dec
in
pop
or
ljmp
jl
imul
scas
out
cmp
call
cltd
dec
insb
add
into
lcall
imulb
sub
jg
in
jp
in
mov
push
add
arpl
popf
mov
lret
dec
cmp
fs
xchg
mov
std
hlt
and
into
jns
sub
fmull
xchg
xchg
sbb
imul
fisubrl
mov
mov
inc
or
gs
cli
jecxz
jo
pop
push
jp
cmpsb
push
aas
mov
pushf
jbe
and
mov
and
mov
mov
cmp
xchg
sbb
sbb
dec
push
pop
and
xor
or
repz
iret
rcll
enter
nop
int
cmp
push
cld
cmp
js
jb
ja
cli
test
lods
xchg
aad
sbb
xchg
into
es
enter
add
into
push
mov
lods
pop
popa
dec
cmp
mov
ljmp
pop
sbb
lahf
stos
out
in
mov
lahf
fdivs
mov
bound
mov
mov
jle
dec
in
rsm
mov
add
into
ss
dec
subl
outsb
test
sub
es
insb
jge
enter
jb
fldcw
in
fists
lahf
and
mov
adc
sbbb
inc
jbe
xor
push
mov
jo
mov
jg
in
pop
mov
lods
sub
push
test
pop
pop
sar
insl
out
cwtl
ret
inc
push
xor
cwtl
insl
pushf
pop
out
cld
in
arpl
adc
cmp
dec
dec
sar
je
orb
fcomps
and
loope
or
shlb
jmp
inc
insb
and
dec
or
sbb
dec
and
push
dec
inc
sub
mov
jmp
jb
sahf
test
jmp
stc
punpcklbw
aaa
ds
xor
xor
mov
mov
cltd
pop
es
pop
icebp
dec
add
ljmp
push
mov
sub
mov
iret
inc
mov
adc
sbb
or
lock
subb
sarb
cmp
arpl
pcmpgtb
cli
addr16
fsub
fidivs
ret
jg
mov
imulb
hlt
push
lahf
pop
stc
loop
jnp
out
cld
jle
sub
xor
outsl
cli
jle
ud1
test
push
add
push
ficoml
or
lock
pop
xchg
dec
inc
lret
jp
push
cmp
jp,pn
test
and
adc
repz
outsb
cltd
xor
jns
pop
or
inc
mov
popa
and
and
pop
and
jbe
mov
inc
pusha
cmp
jge
and
fs
mov
cmpsl
jne
std
in
popa
rorb
or
ffree
in
xor
sub
loopne
xchg
and
jo
mov
movsl
sbb
and
sub
in
stc
subb
and
adc
pushl
cld
mov
dec
push
xor
jns
dec
enter
add
aaa
jge
cmp
lods
sub
sub
inc
in
or
dec
mov
cmp
sarl
daa
sub
out
lcall
and
fistpl
mov
mov
movl
pushl
call
stc
rol
push
push
mov
jmp
jmp
fcmovnb
adc
arpl
sarl
aas
xor
mov
sbb
mov
and
in
jae
inc
pop
jns
aad
xlat
outsl
mov
cmp
push
out
pop
dec
sti
out
ss
fmul
mov
mov
cmpsl
mov
imul
les
das
or
push
mov
sub
subl
pushf
in
out
loope
jmp
pop
mov
dec
mov
call
lcall
inc
inc
rcll
adc
xchg
cmp
sub
cmp
jno
sbb
enter
orb
into
push
stos
loopne
mov
sbb
popf
push
aad
ret
loope
gs
ret
cmp
or
in
je
lods
imul
rcrb
inc
ljmp
add
push
pushl
stos
clc
mov
mov
insl
cmp
add
add
mov
push
cltd
shlb
mull
jbe
pop
clc
ja
mov
push
xor
sbb
sbb
cmp
mov
test
pop
dec
cltd
shlb
push
orl
lcall
xor
imul
in
and
sahf
int
dec
and
push
test
mov
int
cli
icebp
mov
push
inc
cmp
xor
cmpsb
in
cmp
pop
jecxz
mov
sahf
mov
ja
lcall
mov
lret
or
lret
xorl
mov
mov
dec
cmp
pop
mov
xchg
enter
dec
rol
enter
lds
or
or
pusha
lahf
imul
xor
sbb
lock
test
sbb
and
fisubrl
mov
mov
jle
hlt
mov
cmpl
xor
mov
call
dec
xchg
xor
pop
nop
negl
and
cmp
jae
dec
hlt
pusha
pop
mov
outsl
dec
repz
dec
adc
call
push
jge
cmp
add
fstps
out
xchg
loop
xchg
ret
out
cwtl
aas
xor
jge
ficoms
push
mov
cmp
or
orl
das
pop
push
pushl
jmp
mov
mov
leave
mov
pop
fnstenv
lods
push
mov
xlat
test
mov
lods
cltd
sub
ret
inc
outsl
mov
cmp
pop
aam
add
lods
ss
inc
lods
in
jb
jns
sti
lods
xchg
xchg
or
fadds
imul
into
cli
inc
xor
int
mov
adc
mov
inc
js
je
xor
addr16
push
and
add
fmulp
mov
outsl
dec
jecxz
cmp
mov
divl
jmp
dec
jg
repz
xchg
imul
or
fsub
mov
les
fucomp
push
rcrb
xlat
adc
and
mov
sbb
das
sti
std
lock
in
and
mov
xchg
lcall
dec
xor
stos
xchg
stos
idivb
push
jge
mov
and
ret
push
pop
cli
arpl
xor
xchg
into
sub
sti
xchg
rorb
sar
or
adc
cs
and
cli
xacquire
int3
pop
push
cmp
cmc
mov
xchg
hlt
push
jg
enter
test
popf
test
sbb
and
outsl
rorb
jge
cld
std
movsl
gs
pop
mov
dec
test
mov
cld
icebp
push
mov
xor
xchg
xchg
fiaddl
ficomps
and
aas
hlt
fcmovu
and
adc
and
pop
pop
jp
mov
cmp
push
movsb
inc
push
test
push
dec
mov
pop
pop
jle
ss
popa
dec
mov
stos
enter
test
pop
inc
jns,pn
jo
rcrl
and
stc
xchg
outsb
aaa
cmp
and
mov
loopne
jae
js
pop
scas
and
xchg
and
ret
adc
cmc
insl
jae
iret
dec
pop
jg
adc
movsb
push
fidivl
fistps
cmp
mov
mov
or
push
pusha
mov
les
mov
clc
jp
fdiv
daa
adc
mov
sbb
shrb
inc
jno
ret
ljmp
stos
xor
xlat
pop
repz
addr16
lahf
sub
xchg
shlb
pop
xchg
fsubrl
inc
sub
repnz
lret
imul
sub
sbb
in
out
xor
inc
cwtl
mov
repz
daa
faddp
inc
sub
repnz
fchs
or
ja
lea
add
add
mov
pop
push
xchg
jno
xor
jns
pop
pextrw
inc
sub
movsl
adc
inc
idivl
inc
push
clc
and
enter
movsb
test
cmpsb
repz
xor
dec
or
clc
shr
cmpsb
bound
lds
loop
jmp
cs
dec
cmc
lcall
cmpsl
pushf
and
cmp
arpl
dec
loope
and
shl
pop
lahf
mov
sbb
jno
jmp
push
cmpsl
xor
and
lock
jmp
add
add
aas
cmp
push
xor
sbb
dec
mov
mov
movsbl
cmc
cwtl
sub
daa
cmp
inc
btr
push
bsf
stc
aaa
pushf
mov
cwtl
sar
test
call
out
in
pop
fsubrl
dec
xchg
xchg
pop
push
rcrl
les
bound
aad
pop
ret
ljmp
jb
cmp
js
or
and
out
dec
arpl
sbb
fisttpl
in
or
cmp
lret
push
je
jle
sahf
push
dec
ja
cmp
fdivrp
adc
test
vorpd
xchg
daa
push
jl
adc
and
and
fs
je
pushf
pusha
or
jmp
push
pusha
jmp
mov
fsub
in
cmp
rorb
sbb
jae
and
mov
enter
ljmp
mov
jne
xor
mov
movhlps
jo
movsb
popa
xchg
clc
inc
xor
or
push
jl
call
jmp
ret
int
shll
rcrb
mov
sbb
inc
xor
arpl
add
mov
xchg
xor
push
les
sarl
out
sti
mov
out
cld
vaddsubps
and
pop
lahf
sarb
pop
daa
repnz
and
dec
call
pusha
call
not
movsbl
mov
mov
pushl
jmp
movl
pusha
movl
pushf
pusha
push
push
lea
jmp
call
jne
cmp
cmp
dec
dec
cmpsb
and
ja
stos
inc
jecxz
ja
pop
inc
cmp
dec
cmp
push
lods
inc
outsl
fwait
jecxz
mov
cmovne
or
jbe
enter
pop
mov
cli
and
sti
js
stc
and
jnp
jl
jo
ret
dec
jns
and
aaa
jmp
lods
clc
sub
rol
sub
neg
xor
cmc
add
shl
call
add
dec
outsl
popa
fs
imul
add
iret
mov
loopne
ss
jmp
adc
movsl
cwtl
push
cmc
push
mov
add
xor
adc
sub
mov
inc
scas
mull
ja
or
mov
sbb
testb
outsl
ss
pushf
push
sbb
test
dec
push
enter
mov
je
das
stc
rolb
ror
add
mov
add
mov
push
pop
mov
das
fsubl
mov
je
sbb
rep
aad
sub
rcrb
mov
sbb
movsb
std
into
stc
sbb
xor
dec
jl
fisubl
iret
aad
ljmp
loop
imul
adc
dec
push
xchg
mov
cltd
add
into
bound
inc
sti
xchg
aas
enter
push
data16
pop
xchg
sbb
ljmp
add
lods
fdivrl
or
push
fcmovu
dec
call
mov
mov
mov
add
js
sti
sbb
pop
aam
ja
dec
inc
xchg
mov
add
cmp
jecxz
xor
loopne
repz
imul
repz
add
mov
sbb
inc
xorb
mov
push
xor
sbb
andb
test
mov
push
repnz
xchg
inc
inc
imul
cmp
les
je
sbb
mov
ljmp
sub
insl
fadds
inc
pop
xchg
adc
movsb
and
push
and
pop
push
push
push
loope
sahf
xlat
adc
jae
sub
pop
pop
enter
lods
sbb
inc
lods
popa
lret
leave
std
mov
je
xchg
and
outsl
gs
rcrl
inc
mov
fs
and
push
cmp
mov
mov
leave
aas
test
jle
nop
in
jge
cs
insl
jb
xor
daa
pop
sar
mov
mulb
bound
adc
fnstcw
push
repnz
mov
add
xor
clc
mov
jbe
in
mov
lahf
cltd
aam
jmp
pop
cmp
mov
jg
add
imul
cmc
std
cs
mov
xchg
rcl
lret
into
enter
mov
ljmp
inc
sub
jp
fsts
inc
push
or
pusha
outsl
fcoml
dec
dec
lret
pop
es
push
sbb
cmpsl
mov
mov
pusha
movb
movl
jmp
sbb
ja
ret
pop
xor
aad
ljmp
test
cmpsl
data16
adc
or
in
test
imul
icebp
rclb
enter
sbb
dec
xchg
xchg
call
xorb
cmpsl
xor
out
fadd
push
mov
jmp
jp
jge
cmp
jle
cmp
adc
and
insl
pusha
cmp
pushf
call
push
loopne
inc
xchg
cld
lcall
push
adc
push
into
int3
xor
cmp
mov
cmp
sbb
add
push
push
or
fsubl
cmp
in
mov
sub
dec
repz
andb
loop
xchg
bound
and
jp
mov
movsl
add
pushf
movl
push
call
movl
jmp
lea
jae
call
inc
mov
pushl
push
inc
shr
setg
clc
xchg
sar
shl
shl
stc
mov
clc
movb
cmp
mov
push
xchg
cmc
test
mov
and
mov
mov
cmp
sub
mov
push
jmp
sub
xor
popa
sub
shlb
test
dec
or
jnp
xchg
or
mov
or
imul
movl
xchg
movsl
test
lock
shll
popa
ljmp
or
out
inc
sub
cmp
loope
push
std
xlat
inc
daa
adcb
ss
mov
nop
push
repnz
fmuls
add
mov
ljmp
xchg
and
mov
xor
or
mov
arpl
imul
xchg
push
jo
fs
adc
push
sbb
jns
scas
testl
or
stc
int3
sbbb
pop
mov
test
mov
gs
fcmovnb
and
imul
push
and
add
test
push
add
aas
xor
xadd
stc
daa
call
lea
jb
cmp
call
mov
pop
cmpsb
xchg
mov
xchg
outsb
test
or
mov
pop
mov
out
jnp
mov
pop
sti
lods
enter
mov
mov
mov
or
adc
inc
mov
cmc
mov
push
std
adc
adc
outsb
inc
fsts
and
test
cltd
dec
ret
push
enter
pushf
xchg
or
ret
mov
fsts
push
mov
rolb
mov
push
out
push
mov
das
add
jge
xor
sbb
je
adc
imul
mov
loope
movsl
ret
pop
in
scas
push
clc
mov
mov
mov
sub
cmp
jne
lret
ljmp
insl
and
test
mov
mov
repz
mov
dec
bound
sbb
fistl
subb
lahf
std
sbb
in
jne
movsb
sarl
out
mov
scas
push
fcoms
push
cwtl
jecxz
pop
xchg
icebp
lcall
es
xorb
testl
and
cltd
sbb
ficoml
les
hlt
jnp,pt
cmpb
jae
sub
sub
inc
fsts
lock
rorb
cltd
dec
jne
filds
lret
inc
lock
dec
js
test
sub
decl
pop
fsincos
call
bt
or
call
push
inc
cwtl
xor
ljmp
adc
sub
addb
adc
jecxz
mov
arpl
dec
mov
inc
mov
repz
inc
push
mov
nop
sbb
lods
push
mov
xchg
stc
xor
sub
xchg
adc
xchg
stc
inc
out
js
adc
push
outsb
cmp
pop
in
in
arpl
int3
addr16
xchg
dec
push
lret
pushf
pop
adc
xchg
insb
cltd
loope
or
and
bound
dec
cld
sbb
sub
neg
rol
xor
not
shr
shld
bsf
ror
bt
mov
neg
sub
adc
neg
add
inc
add
rcl
mov
test
cmc
clc
shr
pushf
cmp
movb
lea
je
call
movl
mov
mov
mov
pushf
lea
jmp
not
pushl
mov
call
mov
ds
imul
iret
push
and
push
mov
xchg
or
aas
mov
enter
fisubl
repnz
mov
cmp
icebp
popf
bound
cli
and
test
inc
fstpl
test
ret
sub
xor
insl
out
test
mov
dec
inc
out
out
lcall
xchg
push
addr16
inc
cwtl
dec
or
arpl
jmp
jmp
ds
rorl
mov
xchg
bound
pop
adc
inc
jb
pop
icebp
mov
mov
cmc
jo
adc
shll
or
arpl
mov
or
and
push
orb
repz
sti
xchg
pusha
push
inc
leave
adc
push
mov
pop
mov
outsl
addr16
and
sbb
ret
sub
mov
add
mov
jl
inc
mov
mov
int3
sbb
pop
ror
mov
lds
cltd
rorb
testl
mov
sub
add
or
push
fwait
xchg
pushf
or
scas
xchg
xchg
pop
pushf
pusha
mov
jmp
js
add
mov
add
add
cmp
add
pop
add
pop
add
jecxz
add
or
add
add
add
leave
lea
pusha
inc
lea
pushf
pushf
lea
call
pushf
lea
jle
pusha
pushl
adc
jmp
mov
clc
or
add
imul
xchg
rorb
test
xorb
inc
mov
fucomi
lahf
les
and
push
aam
stos
push
das
pop
test
fists
aaa
fwait
leave
lock
xchg
push
mov
out
jmp
fwait
stc
cli
je
fs
mov
out
sbb
xchg
xor
and
js
stc
int3
mov
scas
pop
mov
adc
cwtl
ret
out
cltd
ret
inc
mov
sbb
je
mov
and
mov
mov
sbb
adc
gs
lods
mov
xor
fisubs
xor
mov
mov
cmc
mov
mov
imul
pop
sti
and
sahf
sbb
nop
sbb
daa
adc
flds
pop
adc
pop
ss
adc
leave
mov
xchg
jnp
mov
pop
arpl
xlat
nop
fisubl
mov
out
aad
inc
mov
push
sbbb
pop
push
frstor
sbb
int
imul
sub
inc
test
and
jne
adc
pop
mov
push
sbb
mov
cmp
imul
lret
jne
pop
loope
adc
xchg
mov
cmp
mov
mov
int
mov
pop
leave
sub
push
aam
pop
data16
jecxz
and
pop
push
cmp
pushf
lea
ja
sete
not
xchg
pop
setae
xchg
not
pusha
mov
pop
pop
lea
mov
not
lea
jb
pushf
mov
mov
mov
call
jbe
sbb
push
xchg
pop
push
repnz
mov
data16
aaa
xor
or
mov
mov
xchg
pop
inc
mov
adc
enter
and
cmp
je
stos
pop
mov
mov
and
inc
jno
add
dec
jne
mov
and
cmc
aaa
movsb
stos
xor
add
xchg
movsl
or
ret
or
mov
sub
jb
les
inc
in
stos
mov
sbb
mov
pushf
movl
call
jmp
cmp
mov
push
add
pusha
lea
jmp
sub
sbb
pop
ror
sbb
dec
test
fstl
cmp
xor
orl
jp
int3
sti
std
xor
loope
subl
stos
aaa
inc
inc
and
mov
mov
push
push
lock
jbe
imul
les
enter
inc
mov
cmp
jle
xor
cli
mov
push
fbld
mov
lcall
scas
push
cmc
or
lds
sar
cwtl
icebp
or
mov
loop
lods
mov
fwait
lea
cmp
inc
repz
jmp
aam
dec
sarl
xchg
imull
cmc
xor
dec
cmp
arpl
inc
pop
or
aam
inc
xor
in
mov
inc
test
mov
mov
pop
mov
sbb
scas
jno
mov
cs
push
push
pop
aas
sbbb
jmp
loop
fs
add
shrl
inc
fwait
xchg
aas
xor
shl
lods
push
sbb
mov
or
int
orb
xlat
roll
add
cwtl
popa
fsubs
pop
dec
xorb
insl
repz
std
dec
das
adc
cmp
in
fmuls
push
rorl
mov
daa
push
adc
mov
mov
insl
jecxz
cmp
mov
std
dec
loopne
std
icebp
mov
push
mov
es
mov
test
data16
mov
push
loope
sub
gs
ss
dec
fwait
test
or
and
mov
push
push
orb
sbb
or
dec
dec
cmp
jo
add
fwait
out
stc
jo
jnp
or
inc
cld
xor
cmpsl
push
pop
push
in
std
arpl
mov
leave
and
test
inc
test
shlb
stos
or
dec
mov
push
pop
test
dec
jp
cmpsb
movsb
sahf
sbb
xor
mov
ret
jns
jge
push
cltd
or
mov
fs
enter
lcall
ja
in
cltd
adc
fmulp
adc
shll
jb
sub
pop
sti
xchg
cmp
push
fildl
xchg
push
or
add
dec
xor
cmp
scas
fsubl
insb
push
pop
push
mov
adc
mov
jno
lds
notl
lret
inc
rcr
iret
cmp
push
push
xchg
sub
test
test
aam
pop
arpl
lcall
pop
lock
adc
cmpsb
fwait
cmp
or
xchg
fisubl
dec
cmp
pop
jge
aaa
mov
insl
jns
inc
idiv
lds
fsubl
cmp
and
out
push
neg
push
cmp
bswap
bswap
not
lea
bswap
lahf
lahf
mov
jmp
jns
jg
mov
and
mov
aad
in
mov
inc
loopne
push
and
ss
std
sub
mov
pop
cwtl
loop
and
mov
cmp
cltd
adc
add
fstl
stos
cmp
je
jns
idivb
aad
dec
cmp
icebp
pushf
movl
push
lea
jmp
adc
cmpsb
repz
push
dec
in
stc
cmc
icebp
sub
das
jns
inc
aaa
fdivrl
cs
jecxz
sbb
pushf
push
cmc
adc
cmp
stc
cmc
ret
stc
sbb
adc
inc
lret
testb
xchg
mov
adc
lds
test
fdivp
andl
jno
pop
ja
stc
test
jno
and
mov
test
es
fmull
lock
aam
idiv
pop
imul
jmp
popa
arpl
enter
dec
or
pop
mov
sbb
and
xchg
and
inc
mov
mov
loope
mov
and
xchg
pop
inc
lods
pop
loop
push
push
and
leave
call
cmp
inc
lods
mov
cs
jle
xor
test
jmp
pop
sub
and
jne
pusha
xchg
mov
jge
cmpb
cmp
sahf
dec
adc
out
xchg
and
subb
jmp
sahf
or
push
insl
add
lahf
add
pushf
cwtl
push
int
inc
push
int3
addr16
cmp
pop
push
add
pop
mov
shrb
lock
rcrl
mov
out
std
cmc
das
xor
leave
push
addl
subl
insl
jnp
or
in
adc
inc
les
icebp
xchg
push
dec
cmp
aas
lods
mov
add
sbb
pushf
fidivrl
jecxz
push
mov
mulb
mov
lahf
mov
mov
pushl
mov
rcl
call
mull
enter
aaa
mov
sub
shrl
push
jl
xchg
sub
inc
jae
and
sub
pop
and
xchg
or
insl
imulb
repz
push
je
lea
sbb
push
mov
faddp
popf
data16
push
popf
pop
in
xchg
les
push
movl
xor
cmpsl
repnz
dec
inc
enter
jnp
push
aam
ds
inc
int
cld
sub
push
out
cltd
cmpsb
dec
sti
les
mov
cmp
lea
jne
call
inc
push
mov
mov
lea
jmp
lret
pop
sahf
es
or
mov
mov
push
lods
shl
mov
punpckhdq
adc
pop
daa
push
mov
dec
pop
mov
jbe
mov
aam
mov
jge
rcrl
imul
mov
push
loope
rclb
in
test
cld
fimull
pop
je
in
jae
and
xchg
pop
stos
dec
jno
cmp
frstor
mov
cmpb
mov
or
cmp
jmp
dec
xchg
push
enter
cmp
jo
pop
ret
dec
cmp
fwait
inc
outsb
clc
ret
mov
or
xchg
rolb
or
mov
rclb
inc
shrl
or
inc
xchg
mov
and
push
cmp
pusha
call
push
add
js
nop
lock
mov
arpl
mov
inc
popf
pop
arpl
sbb
mov
mov
incb
xchg
add
xchg
in
loopne
mov
ret
mov
jecxz
dec
enter
inc
jo
cli
sbb
adc
div
sbb
pop
shrl
insl
push
aaa
movsl
jns
leave
adc
stos
push
sub
out
int
icebp
subl
add
mov
mov
mov
nop
jmp
fistps
sub
or
jne
add
cli
push
xchg
xor
ljmp
dec
push
mov
mov
out
sti
sub
lea
enter
fwait
xorl
or
dec
or
mov
cwtl
cs
out
xor
rep
pop
add
leave
cmp
mov
cmp
mull
sti
rcl
push
push
mov
das
xor
adc
repz
mov
xor
movl
pusha
jmp
jmp
mov
dec
sub
pop
aad
adc
stos
scas
mov
and
pop
push
iret
loop
add
pop
fistpll
enter
cmpsb
orl
stc
and
jecxz
and
mov
dec
and
push
dec
dec
daa
popa
jp
pminsw
cmp
push
mov
cmp
fadd
mov
bound
fs
enter
loopne
mov
insl
les
movsl
movsl
insb
outsb
popf
addr16
sbb
ret
sbb
aad
dec
xor
inc
insb
push
out
sti
stos
sub
xor
jecxz
lock
shrb
repz
lds
ret
pop
lcall
movsl
mov
pop
out
pop
daa
in
into
dec
out
sub
pop
test
outsl
scas
int3
ret
adc
xor
out
jbe
aas
sbb
or
imul
inc
je
out
mov
int
push
mov
xor
vmovshdup
and
pop
in
bound
push
shl
inc
fldenv
out
out
clc
out
or
ja
ja
out
aaa
subl
outsb
sbb
xchg
lcall
push
lcall
movntq
in
xchg
mov
jle
repz
xor
jmp
sti
sub
fwait
and
cwtl
push
aad
xchg
adc
icebp
push
ljmp
and
sub
and
lods
cmp
iret
clc
in
fadds
out
and
test
arpl
inc
insb
insb
outsl
arpl
popf
or
nop
cmp
mov
or
cwtl
rorb
jno
pop
rcr
jb
jg
stos
scas
xchg
mov
fidivs
mov
rol
xor
aaa
inc
in
jmp
mov
xor
enterw
jp
lret
mov
nop
cwtl
icebp
test
and
xor
popf
push
and
mov
mov
leave
xchg
shll
mov
jne
leave
int
mov
xor
insb
iret
repz
and
jne
jnp
sub
adc
in
mov
pop
dec
test
xor
or
jp
xor
jns
mov
imul
rorb
lods
pop
mov
movsl
and
data16
loop
sbb
fnstcw
bound
jge
sub
je
out
sbb
xor
fisubrs
cs
das
pushl
add
add
lds
clc
push
add
movl
pusha
pushl
lea
jmp
call
cmc
pushf
bt
or
pushl
pusha
movb
lea
je
cmc
jmp
lea
je
bt
push
sub
pushf
call
pusha
jmp
sub
stc
xor
clc
movl
add
cmc
test
neg
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
push
add
lea
jae
mov
mov
mov
pusha
not
dec
inc
pushf
not
mov
lea
call
jmp
lea
jne
jmp
dec
cmp
add
jl
or
rorl
sarl
lea
mov
lret
enter
sahf
or
inc
test
lock
rorb
adc
pusha
jbe
mov
enter
mov
mov
xchg
xchg
jb
popf
testb
fcomp
add
xchg
inc
jae
in
push
repz
fldcw
jge
or
pusha
loope
or
cmp
and
inc
dec
xor
pushf
jmp
in
sbb
leave
fisttps
cltd
sbb
pop
out
stos
mov
test
and
jbe
nop
xor
in
or
mov
mov
cmpsb
out
stc
popf
sub
push
cmc
inc
js
xchg
jb
call
inc
stos
mov
pop
sbb
in
js
insb
lock
mov
or
mov
mov
popa
jecxz
inc
mov
adc
mov
add
in
das
jne
dec
pop
adc
roll
sub
pcmpeqb
ljmp
or
test
xor
loope
sub
mov
ret
xlat
bound
ret
mov
inc
lcall
cmp
orb
jge
inc
xchg
push
cmp
sbb
f2xm1
push
mov
js
out
pop
inc
in
das
and
and
dec
mov
cmp
jmp
imul
xchg
mov
push
das
xchg
add
inc
fiadds
jecxz
gs
add
rolb
cmp
jl
xchg
sbb
or
mov
mov
sahf
jno
sbb
std
movsl
pop
dec
mov
jbe
in
in
jb
xor
movsb
cs
out
xchg
test
mov
es
or
inc
test
push
push
data16
mov
insb
or
je
jo
lret
pop
jl
cmp
iret
flds
mov
jns
movsl
and
mov
mov
mov
sti
shrb
out
pop
xchg
push
scas
out
enter
outsl
in
fsubl
cs
xchg
push
pop
push
sub
mov
gs
xchg
loopne
cmp
into
add
and
sub
add
int3
lds
shrb
mov
mov
xchg
popa
mov
mov
adc
repnz
and
jle
cmc
jo
lock
xchg
sbb
gs
mov
scas
out
xor
je
loope
sbb
sub
hlt
dec
stc
imul
jp
enter
push
cli
enter
dec
sub
mov
inc
mov
dec
mov
and
cltd
popa
in
in
or
mov
lods
or
jae
cmpsl
xchg
and
sbb
xchg
lods
bound
sbb
mov
sbbl
or
dec
mov
mov
jo
xorb
sti
and
sahf
sub
adc
sbb
enter
shlb
inc
fists
enter
pop
repnz
adc
inc
nop
sbb
mov
add
inc
movzwl
add
shl
jmp
lea
je
bswap
mov
sete
cwtl
pusha
movzbw
mov
pushf
lea
lea
mov
movl
pushl
pusha
pushl
popl
movl
pushl
ret
lods
cmp
bt
call
mov
call
pushl
mov
lea
jbe
not
sub
bt
movsbw
pushf
mov
sub
bsr
lea
mov
rcr
rol
or
add
shr
rol
shr
test
mov
xor
sub
add
not
lea
mov
call
jmp
jmp
sub
mov
clc
pusha
call
bt
push
cmp
pusha
movb
lea
jb
pusha
stc
pushf
cmp
pushf
pushf
movb
lea
ja
xor
stc
rcl
add
or
neg
call
pushl
call
mov
not
movsbl
bswap
mov
bswap
bswap
mov
movb
movw
movw
mov
pushl
ret
pusha
movl
pushf
mov
lea
jmp
test
xchg
xlat
cmpsb
repz
lcall
mov
outsb
xchg
popa
ss
mov
jns,pn
mov
xlat
or
pop
rolb
das
stos
jo
xchg
into
push
xor
arpl
icebp
add
pusha
mov
ljmp
aas
sub
and
test
push
sbb
movsb
fdivrl
push
lods
js
shl
outsb
fsubrs
jmp
inc
loop
hlt
mov
loopne
lods
nop
loop
adc
cmpb
imul
into
ret
shll
mov
addr16
jg
pause
inc
adc
or
aad
push
cmp
xor
icebp
std
cmpsl
jl
mov
dec
or
cmp
cwtl
loope
mov
scas
mov
mov
push
and
mov
fs
je
shld
xchg
shr
aam
sub
stc
call
arpl
jmp
std
mov
mov
imul
xor
push
sub
rcrb
dec
jmp
pop
or
pop
add
dec
mov
or
fidivrl
add
jb
dec
push
popa
in
cwtl
adc
jbe
imul
mov
test
sbb
inc
xlat
xor
in
sbb
and
mov
mov
ret
push
dec
call
int3
jmp
sub
xchg
jle
pop
ffree
gs
xchg
sub
repz
daa
arpl
popa
in
je
sub
movsb
push
lods
pusha
out
pop
rcll
mov
bound
in
movsb
xor
addr16
add
fldl
xor
mov
fildll
movl
pusha
pushf
movw
call
subb
adc
cmpsb
pause
sbbb
add
divl
inc
negb
cmp
stos
pop
nop
fistps
inc
sub
xchg
jmp
int3
arpl
testb
stc
jge
test
aad
sbb
les
xchg
loop
js
and
xchg
fiaddl
mov
ja
scas
pop
mov
out
or
enter
or
sub
and
mov
inc
ret
incb
shlb
push
inc
mov
inc
enter
dec
test
cltd
fcoml
mov
pop
loope
pop
rcrb
lea
ret
scas
in
cmp
xor
and
pop
dec
xor
fldcw
lret
or
add
pop
mov
sub
mov
and
js
cmp
mov
pusha
push
lea
ja
clc
imul
stc
pushf
add
push
pushf
pusha
push
lea
jmp
lea
jne
pushf
pusha
jmp
jmp
movl
jmp
mov
movsbw
pop
push
pushl
ret
scas
sbb
sbb
cwtl
push
mov
and
mov
cmp
jbe
ljmp
mov
push
ss
sub
pop
pop
sahf
mov
js
xchg
test
add
mov
and
aas
pusha
rep
mov
mov
pushf
pushf
lea
jmp
sbb
lret
enter
psrad
mov
add
mov
push
push
pop
xchg
scas
subl
clc
loopne
leave
and
mov
sbb
xchg
sbb
sub
addl
dec
rol
lea
sub
in
out
fucomp
push
dec
std
out
jno
ret
in
xchg
jg
mov
dec
inc
jbe
mov
frstpm(287
ficompl
les
push
dec
cld
out
cmpsb
inc
ljmpw
scas
mov
mov
inc
mov
imul
and
cmp
and
adc
hlt
adc
pop
or
enter
inc
dec
js
or
pop
and
test
stos
xchg
cmpsb
repz
or
inc
jnp
xor
lahf
js
insb
dec
rcrl
cmp
ja
cltd
sub
cli
aad
andnps
jae
idivb
cmp
arpl
imul
mov
push
mov
fwait
sub
subl
or
xor
mov
push
or
rcrb
fildl
cmpsb
repz
out
fidivrs
popf
xchg
iret
in
es
sbb
mov
loop
sti
push
cmp
nop
fidivrl
xchg
or
sbb
insl
mov
test
adc
push
mov
mov
and
outsb
pusha
jmp
jmp
into
fistl
mov
dec
leave
and
lret
inc
pop
pop
mov
ljmp
popf
int3
rcrb
rolb
xchg
mov
cli
les
arpl
inc
cmp
xchg
push
xchg
mov
pop
jecxz
mov
jmp
shrb
mov
cmp
pusha
or
push
jmp
pushf
jmp
jmp
movl
pushf
lea
jmp
int3
popf
push
movl
jmp
and
rcl
stc
rcl
mov
push
pushf
jmp
movl
movw
pushf
movl
movb
lea
jmp
sahf
stos
ret
mov
inc
cmc
aaa
negl
and
fdivl
xchg
pop
push
lret
enter
rolb
jle
les
in
or
sbb
dec
jmp
pop
sbb
push
enter
sub
or
pop
mov
xor
or
dec
test
adc
stc
add
mov
mov
loopne
adc
pop
iret
mov
inc
push
scas
xchg
div
sbb
imull
iret
adc
xchg
loope
pop
inc
iret
test
aas
rcrl
adc
aas
fmuls
push
es
adc
repz
fdivrs
or
stos
sub
lock
sahf
stos
adc
or
xor
jne
jno
jg
jp
mov
imul
xchg
adc
je
enter
mov
jge
mov
sbb
stos
divl
int3
aad
push
popa
push
cmp
xor
mov
mov
or
xchg
call
add
xchg
sub
mov
adc
mov
jo
dec
cmc
jg
cmp
int3
addl
mov
or
repnz
mov
cld
std
stos
xchg
mov
test
btrl
xchg
xchg
aad
pushf
fmulp
testb
mov
sti
mov
ret
adc
call
xor
fwait
push
pop
rorl
cltd
imul
xchg
aas
in
fld
lods
fsubs
fldenv
mov
dec
adc
cmp
push
push
push
scas
ljmp
add
sbb
ds
cmp
imul
cli
enter
xchg
push
shlb
enter
mov
add
xchg
push
ljmp
pop
enter
repnz
inc
adc
sarw
and
js
pop
cmp
add
dec
imul
packssdw
leave
fs
lcall
js
in
inc
push
lds
adc
rep
inc
and
mov
mov
jge
stc
bound
repnz
jb
mov
mulps
jae
cltd
dec
and
mov
sbb
mov
sub
sub
cmpsb
cmp
inc
mov
mov
out
mov
fmull
sbb
cmp
jo
fsubl
imul
add
pushf
movl
push
movl
mov
mov
pusha
lea
jmp
jmp
jmp
call
push
jmp
pop
add
shl
in
pop
lcall
mov
mov
ficoms
mov
outsl
jp
mov
jne
fsubp
pop
or
icebp
mov
outsb
ljmp
sbb
sub
int3
daa
mov
stos
sub
loopne
and
mov
inc
rorb
mov
std
and
xchg
aam
and
fs
xchg
cmc
sahf
popa
mov
adc
or
aam
push
inc
fnstenv
mov
insl
mov
add
mov
add
mov
and
jge
push
and
xchg
pusha
movsbl
movl
push
lea
jmp
jl
jecxz
jo
cmpsb
cld
mov
out
pop
ret
jle
mov
add
cs
cmp
fld
sub
add
sbb
jns
loopne
loopne
cltd
cmp
or
xor
test
lods
fs
cwtl
mov
sub
fwait
xchg
es
xor
andb
rep
jle
cmp
out
movl
loopne
dec
andl
scas
xchg
jecxz
in
adc
shlb
fsubrl
push
inc
xchg
decb
sahf
std
jp
int
orl
mov
repz
xor
cs
insb
add
push
fsubs
xchg
int
les
adc
loope
aaa
mov
icebp
enter
iret
mov
andb
cmp
sub
and
cmc
xor
fcomi
inc
dec
mov
lret
and
ja
ljmp
test
stos
sti
pop
lds
cltd
dec
xor
outsb
push
jl
jo
iret
mov
inc
hlt
push
push
movl
cltd
test
pop
and
and
pop
mov
bt
neg
push
not
mov
movw
pushf
mov
inc
pusha
bt
ror
stc
mov
stc
add
cmp
test
push
movb
push
push
lea
jne
pushf
mov
push
mov
pushf
mov
mov
lea
call
jmp
jmp
mov
call
adc
pushf
lea
call
call
movsbw
mov
not
movzbl
push
push
movsbw
lea
call
pushf
push
call
mov
pushl
mov
pushl
ret
lea
ret
rol
neg
not
setbe
stos
sete
setns
push
mov
lea
pusha
call
jmp
push
pushf
movl
pushf
pushf
mov
mov
lea
jmp
shl
pushl
setne
pushf
lods
cmc
push
mov
sub
pushf
clc
cmp
call
pusha
movl
push
movb
lea
jmp
mov
pusha
movl
push
jmp
in
jmp
sbb
cmpsb
repz
and
mov
test
insl
xchg
mov
jge
cs
cli
inc
int
jecxz
or
mov
add
sub
arpl
jno
mov
popf
mov
mov
ja
in
push
mov
sarl
gs
in
cmp
imul
jo
add
sbb
lretw
lret
mov
pop
mov
mov
push
outsb
xor
cmp
arpl
orl
adc
sbb
pop
mov
stc
cli
and
push
mov
push
mov
jle
xchg
into
out
sbb
jo
test
hlt
enter
mov
xor
sahf
ret
inc
mov
pop
add
enter
cmp
jb
dec
cmp
add
insl
popl
mov
pushf
add
fwait
orl
insb
mov
dec
dec
and
imul
std
std
mov
mov
dec
movntq
out
aas
dec
sub
mov
mov
pop
stos
ss
cmp
int
jge
in
test
inc
dec
and
aam
pop
movb
fsubrl
adc
test
pop
cmp
das
add
sbb
inc
inc
sub
in
xchg
push
push
scas
xchg
inc
sub
mov
aam
mov
jmp
adc
inc
not
dec
cmp
mov
test
cmp
cmp
push
and
call
pushf
pushl
popl
pushf
pushl
ret
xchg
mov
pushf
pop
pushf
mov
not
not
mov
movzbl
movzbw
mov
call
str
pushf
movl
call
jns
cmpsl
bound
push
dec
movb
clc
inc
or
pop
xor
movsl
dec
fiaddl
push
mov
xchg
mov
xor
aaa
fsubl
icebp
pop
repz
lret
test
aad
mov
jl
lret
hlt
jno
inc
jae
stc
xor
sub
test
cli
movsb
fildl
pop
xchg
sbb
dec
out
cld
pop
enter
mov
add
pop
test
add
aaa
add
xor
test
mov
or
jmp
xor
push
pop
outsl
hlt
ficomps
dec
cmp
sarb
mov
xchg
in
call
decl
loopne
xchg
adc
icebp
imul
jbe
enter
mov
enter
mov
mov
ljmp
pushf
addr16
pop
fnstenv
into
cmp
push
jne
jle
enter
in
xchg
ficompl
dec
mov
lods
fidivrl
inc
cs
pop
gs
int
xor
mov
xchg
out
pop
out
pop
sbb
movsl
pop
add
std
bndstx
mov
xchg
sbb
and
gs
cli
mov
out
sbb
cmp
mov
xlat
dec
hlt
movl
push
movl
push
lea
jmp
push
movl
pusha
movl
push
lea
jmp
xchg
and
inc
dec
cmpsb
cld
sub
fwait
jbe
sub
cmpl
mov
loopne
lock
xchg
in
aas
mov
jmp
pop
icebp
bswap
cmp
push
incl
sbb
sub
inc
sub
je
dec
jb
gs
sbb
sbb
or
pop
mov
sbb
xor
push
imul
mov
inc
popf
sub
test
cmp
fdivs
sti
ss
jb
xlat
inc
lcall
test
arpl
cmp
mov
jecxz,pt
inc
xor
in
sbb
mov
mov
pop
mov
jmp
mov
call
cmp
mov
imul
mov
mov
ret
pop
enter
mov
xchg
jecxz
in
dec
je
nop
xchg
inc
jns
xchg
fidivl
enter
lods
push
testb
push
int
mov
adc
or
call
data16
fldt
cmc
rcrb
fucomip
cmpsb
repz
mov
dec
inc
sbb
xor
sbbl
pop
fmull
cmp
xchg
push
in
and
jecxz
cli
icebp
cmp
mov
cmp
arpl
add
pop
fmull
lea
xchg
test
sbb
xchg
popf
inc
or
ret
jmp
and
jb
pop
movsb
push
push
movb
pushf
lea
jmp
cmp
inc
xor
fwait
jnp
out
sub
fcompl
int
movsl
imul
or
push
mov
jo
mov
lahf
cmp
pop
sbb
test
or
imul
mov
ss
repz
es
xlat
push
mov
jge
add
in
enter
mov
sbb
and
out
int
pop
daa
cmp
shl
fwait
push
pop
push
les
or
or
int3
jmp
add
push
push
mov
lods
test
jns
lret
inc
xchg
or
ret
cld
mov
fldenv
dec
es
dec
jbe
sub
dec
aam
in
roll
push
jge
push
js
ja
jne
and
sti
and
add
and
jo
cmc
jbe
inc
lret
mov
push
int
ja
jne
push
into
mov
ja
in
inc
popa
fwait
xor
test
enter
call
sarb
sarb
push
pushf
test
push
xchg
lds
enter
arpl
and
xchg
call
pushl
popl
push
pushf
pushl
ret
outsl
sbb
je
xchg
js
sub
popa
jnp
rorb
push
sti
subb
out
jle
sahf
jecxz
jmp
add
faddl
xchg
arpl
push
mov
les
jmp
pop
lret
or
sahf
dec
repnz
and
mov
jne
btr
setb
adc
mov
sbb
bt
shr
btr
sub
bt
shl
mov
stc
push
pusha
sub
jmp
jmp
lea
jne
jmp
call
jg
test
bound
mov
or
shr
and
adcb
push
xlat
and
cmpsl
int
mov
mov
push
aas
add
es
push
push
mov
lea
jo
xchg
iret
flds
dec
mov
loopne
or
mov
clc
loop
push
iret
inc
jne
xchg
rolb
or
pop
lret
test
fldl
das
cs
push
or
xchg
sbb
mov
inc
jno
repz
inc
lock
jle
mov
sar
sub
mov
ss
mov
mov
aaa
adc
adc
inc
and
lahf
movl
sete
movsbw
bswap
mov
lea
mov
movb
movl
movl
lea
js
push
push
pushl
popl
movb
pusha
pushf
pushl
pushl
ret
mov
jmp
addr16
outsb
aaa
cli
cmpsb
repz
stos
imul
add
push
dec
mov
inc
cmp
nop
jb
mov
jecxz
out
push
push
rcrb
mov
enter
cmpsb
jl
add
mov
mov
cs
test
inc
push
pop
push
cwtl
jmp
lea
jae
adc
xor
mov
sub
inc
rol
mov
shl
mov
cmc
clc
xor
push
bt
repnz
jmp
inc
scas
dec
repnz
mov
jecxz
pop
adc
ret
push
push
rep
ja
adc
icebp
fdivrs
cs
xor
arpl
sarb
bound
aaa
mov
fstl
je
outsb
and
dec
adc
jmp
pop
sub
jmp
sub
frstor
fwait
cmp
sbb
pop
jge
xor
push
pop
inc
nop
or
inc
jl
dec
mov
mov
andb
loopne
mov
jae
xlat
pusha
movsb
and
sbb
push
insb
inc
outsl
cmp
test
adc
jg
je
repnz
pop
and
mov
and
mov
test
inc
mov
test
inc
mov
imul
rorl
or
inc
pop
ucomiss
scas
jo
push
or
stos
test
jge
xor
insb
out
or
into
bound
sub
fs
xor
movzwl
dec
outsb
sti
lods
lock
dec
or
sub
in
insb
lret
jns
mov
mov
daa
jmp
call
aad
or
mov
out
lcall
cmp
push
movl
cs
notb
jp
cmc
aaa
pop
es
xchg
xchg
sub
cmc
push
stc
test
sarb
jns
mov
inc
pushf
inc
sbb
sbb
out
cmp
xor
fsubp
push
popf
mov
xchg
sti
jbe
loop
push
push
incb
cmp
xchg
lds
fcomps
xchg
adcl
fwait
mov
out
pop
dec
or
out
popa
xchg
mov
lcall
in
repnz
ss
xor
nop
adc
xlat
nop
xchg
mov
xlat
adcb
cmpsb
outsl
jge
adc
mov
sub
fwait
inc
cmp
mov
jbe
xor
repz
pop
sbb
inc
fcomip
and
popf
das
xor
fldl
data16
mov
daa
push
cmpsl
push
xchg
mov
jb
mov
pop
clc
cmp
iret
pop
mov
jns
lock
outsb
insb
adc
int3
inc
je
sti
loope
mov
nop
pop
inc
push
sti
popf
hlt
icebp
mov
pop
add
inc
incb
scas
cld
cmp
and
dec
xchg
adc
mov
jb
in
fisubl
rcrb
ret
adc
int3
into
cwtl
sti
in
add
movmskps
pop
cmp
mov
jb
call
daa
mov
mov
fwait
push
sbb
push
aam
stos
mov
sub
fildl
mov
call
inc
mov
jbe
pop
xchg
out
jne
mov
stc
cmp
leave
jnp
das
jmp
sar
and
pushf
loop
push
and
daa
arpl
mov
pop
add
lret
outsb
push
pop
addb
cld
int
or
pop
jecxz
cmp
xlat
xor
mov
mov
int
sti
std
sub
filds
add
xor
push
cmpsb
rorl
test
in
into
inc
jbe
or
rcrl
jle
loope
or
fadds
mov
mov
iret
sti
push
aam
addr16
dec
dec
jne
outsl
mov
mov
lds
mov
jae
mov
inc
hlt
or
rorb
stc
xchg
xchg
add
and
inc
mov
nop
dec
mov
sub
lock
push
add
sbb
les
push
pop
test
mov
lcall
add
push
int
inc
or
or
fstps
inc
fdivrs
jl
ljmp
cli
add
loopne
lock
popf
sbb
and
in
push
pop
push
iret
pop
movsb
test
jle
sarb
push
popf
rorb
pop
push
push
add
push
inc
outsl
into
cwtl
addb
jp
jae
popf
flds
xchg
ret
frstor
hlt
scas
xor
mov
imul
decb
js
inc
dec
pop
cmp
inc
insl
or
push
cld
movsl
push
dec
mov
cmc
cmp
jne
sarl
push
call
mov
sbb
enter
fldt
pop
mov
call
adc
loopne
mov
sarb
cli
subl
dec
mov
arpl
add
inc
xor
jno
lret
push
inc
jge
rcl
cmpsl
sbb
data16
dec
jbe
pop
pop
insl
mov
fiadds
loopne
in
xor
jno
fdivr
add
mov
je
outsl
dec
jae
js
jb
fnstcw
add
push
popa
cmc
jb
jge
xchg
dec
and
icebp
xchg
shll
fwait
mov
std
jae
int
pop
push
cmp
bound
jge
xchg
and
push
ja
pop
sbb
pop
inc
adc
dec
repz
aad
leave
or
push
sub
rsqrtps
inc
or
and
lds
push
push
sub
jnp
adc
pop
mov
daa
shrl
fisubrs
orb
adc
mov
mov
in
bound
fcomp
and
mov
lea
aaa
and
jg
add
scas
pop
pushf
repnz
mov
push
fisubl
cmp
cmc
dec
xchg
ds
icebp
sbb
test
scas
inc
in
jns
dec
dec
sub
sub
and
fsts
sbb
movsb
mov
adcb
xchg
dec
jmp
dec
jl
sarl
inc
aam
and
pop
xor
or
or
sub
mov
push
xor
sub
cmp
div
je
push
mov
sti
inc
dec
shrb
ret
xlat
inc
jns
inc
imul
adc
push
cmp
lret
ret
adc
cld
cmc
adc
jo
cmp
iret
dec
sbb
gs
mov
push
addb
call
mov
testb
stos
jecxz
mov
sbb
inc
mov
adc
loopne
and
dec
push
fmuls
pop
mov
mov
inc
xor
cmp
leave
lret
ss
mov
popf
imul
dec
hlt
pushf
push
ficomps
pop
pushf
call
sub
in
fxrstor
sarl
or
sbb
pusha
aaa
inc
inc
gs
out
add
cmp
rolb
sub
mov
mov
pop
in
inc
jge
shlb
aad
cltd
cmp
and
sub
and
xchg
mov
outsl
push
les
mov
inc
ds
call
pop
push
dec
ss
dec
fucomip
repz
or
xor
jno
js
pop
and
fs
pop
adc
js
cld
jnp
sbb
mov
sbb
pop
xchg
and
js
imul
in
and
orb
mov
mov
inc
mov
and
inc
ret
mov
in
cltd
ret
adc
and
xchg
test
shlb
jge
scas
inc
inc
mov
jg
aad
dec
clc
aas
stos
pop
enter
push
jge
mov
fldl
mov
jge
repz
es
scas
repnz
push
and
nop
enter
and
ficoms
pop
loop
pop
outsb
sub
int
lea
dec
jb
scas
push
mov
jle
ret
fimuls
inc
push
cvtdq2ps
adc
mov
aad
inc
cmp
and
and
cmpsb
iret
xchg
out
sbb
movsb
scas
bound
jmp
and
pop
sti
push
sbb
in
mov
insb
mov
and
call
jmp
pusha
lea
jne
shr
pusha
mov
mov
movb
jmp
pushf
lea
ja
ror
pusha
or
xor
sub
movsbw
movsbw
btc
neg
add
add
rcl
btc
sbb
mov
not
rol
or
mov
cmp
pusha
movw
stc
repnz
mov
mov
call
in
clc
aam
and
pop
mov
lret
sbb
out
test
enter
cmp
call
jecxz
inc
gs
adc
mov
xchg
cmp
and
popa
cmc
pop
mov
cmp
pop
push
pop
dec
mov
jmp
pop
sub
push
mov
xchg
rcrl
add
mov
pop
mov
stos
test
fnstenv
out
popf
xchg
ljmp
and
test
aaa
mov
into
adc
push
ret
and
popf
jb
mov
lods
gs
or
sbb
test
dec
in
push
fsub
mov
dec
jbe
cmpsb
lock
sub
stc
inc
inc
sub
add
lock
das
icebp
jmp
mov
mov
fisttpll
ljmp
leave
xchg
add
and
dec
adc
stc
test
cmpsb
xchg
mov
bound
mov
pusha
mov
push
add
ret
into
jnp
scas
mov
sarl
and
cmp
dec
xlat
cmp
mov
insb
lds
clc
jne
push
sbb
in
in
mov
and
adc
adc
jne
in
mov
shlb
inc
add
scas
imul
cmpsb
das
sbb
in
push
jecxz
jo
mov
popa
mov
btc
mov
bt
xor
pusha
mov
sub
rcr
mov
jmp
call
cmp
clc
mov
pushf
pushf
cmpb
pushf
movb
jmp
add
dec
gs
popa
addr16
outsl
js
add
pushf
cmc
sub
jmp
lea
sarl
mov
in
push
int3
xchg
mov
add
orl
jle
mov
sbb
idivl
cli
push
les
aam
imul
divl
shlb
mov
enter
divb
sarl
in
mov
mov
push
cmp
pop
pop
push
push
sbb
push
lret
ljmp
jnp
adc
loop
push
rcrl
fsubs
pop
mov
enter
push
inc
xlat
inc
cmp
cwtl
lret
sbb
pop
pop
adc
test
enter
push
je
lahf
mov
adc
lcall
mov
arpl
xchg
add
mov
jl
xor
out
xor
stos
lea
je
movzbw
and
add
sbb
mov
mov
stc
cmc
pusha
add
pusha
mov
btc
stc
bsf
bswap
mov
clc
clc
cmp
jmp
push
lea
call
push
lea
jne
setae
pushf
mov
mov
pusha
mov
lea
jmp
push
cmp
and
adc
adc
es
es
movsl
mov
in
test
pushf
dec
in
lret
ret
sub
cmp
add
das
imul
and
divb
test
or
ror
pop
leave
push
mov
xor
cmpsb
fwait
insb
mov
sti
xchg
lcall
and
add
sbb
call
pushf
pusha
pushf
movl
movb
pusha
movb
lea
jmp
call
adc
pusha
lea
jmp
dec
push
fcompl
and
inc
mov
fnstsw
fidivrs
lahf
push
fld
imul
mov
loop
fdivr
cmp
ja
and
int3
aad
mov
dec
je
jmp
and
add
add
pop
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
pop
add
loopne
or
pop
es
add
sbb
cmp
es
adc
push
sbb
loope
lds
js
pop
into
adc
inc
jae
out
inc
dec
add
mov
std
sbb
xlat
movsb
insb
push
shll
jae
inc
enter
add
pop
js
iret
pop
and
test
mov
out
inc
inc
or
xchg
popf
add
xchg
pop
aaa
inc
xchg
ja
jo
clc
mov
pusha
aam
movsb
sub
push
lcall
xchg
add
stos
in
ss
aas
xlat
fidivl
test
fisubl
and
pop
sbb
sub
sbb
adc
jnp
adc
pop
out
insl
lcall
loop
pop
xlat
and
push
hlt
sahf
mov
lock
mov
sahf
sahf
and
jmp
add
cmp
aad
int3
sti
inc
inc
icebp
out
cltd
cmpsb
fists
xchg
ret
imul
mov
xor
push
sbb
or
jae
sbb
push
ret
jge
stc
inc
mov
cmp
mov
ficomps
lret
scas
inc
out
stos
orb
stos
sbb
inc
lret
adc
xchg
mov
push
testl
mov
js
push
pop
pop
jge
sub
push
push
int3
stc
insl
outsb
int3
ljmp
mov
dec
fdivl
cmp
and
aaa
icebp
mov
and
and
xlat
sahf
repnz
sub
sub
dec
cmp
xchg
adc
and
out
mov
mov
fs
jbe
cmp
adc
scas
pop
filds
into
sbb
pusha
cmp
in
or
cli
sub
sarl
out
xchg
ds
or
push
xchg
pop
xchg
mov
iret
mov
ficompl
nop
mov
lea
dec
mov
lahf
sti
or
cmp
xchg
daa
call
xchg
dec
xchg
mov
push
push
mov
test
dec
xchg
push
inc
mov
test
stc
mov
jmp
add
clc
jo
xor
xor
cltd
fsubs
inc
hlt
es
or
adc
pop
pop
adc
dec
or
push
and
pop
in
call
out
push
xchg
pop
inc
scas
lea
mov
ret
repz
cs
jp
daa
jno
add
daa
ljmp
push
test
push
mov
push
andl
aad
in
add
xchg
or
jnp
jno
lods
sbb
push
mov
inc
pushf
out
stos
les
xchg
and
pop
leave
popf
inc
imul
aas
outsl
xchg
push
stos
iret
lea
and
mov
sub
or
inc
and
dec
dec
and
adc
xchg
fmull
ffree
add
xchg
imul
lea
scas
cmpsb
imul
pusha
sbb
add
pop
or
dec
xchg
or
xchg
mov
mov
cmp
pop
cmp
sub
insb
push
jae
xchg
inc
pop
cmp
cmp
lock
fildll
cs
mov
and
pop
aaa
push
call
aas
or
dec
fwait
movsb
bound
fwait
or
jg
insb
and
lds
pop
cmpsl
iret
loope
jecxz
mov
gs
in
aam
fldl
sahf
lahf
addr16
stos
cmp
andb
jnp
daa
push
push
lock
fiaddl
movsl
push
cmp
cmp
cs
and
pop
cmp
mov
xchg
sub
push
jg
or
les
xor
icebp
stos
out
imul
sbb
mov
scas
sbb
inc
xchg
cld
fwait
lret
cmpsl
mov
sbb
stos
and
shll
test
and
sar
jge
mov
gs
cld
int
lcall
aad
jne
popf
icebp
xor
jo
test
cs
rolb
or
push
daa
cmc
or
xchg
add
push
popa
jne
adc
das
push
fidivrl
dec
xchg
mov
cmp
jge
cwtl
loope
popf
bound
xchg
jne
add
dec
pop
lret
test
aaa
addr16
mov
add
andb
push
or
xchg
sbb
push
fst
mov
or
pop
int3
insb
daa
loope
and
jmp
call
mov
xor
cwtl
testl
sbb
sbb
fdivrl
xor
andl
not
jnp
imul
jl
scas
int
cmp
pop
cmc
leave
aaa
fsubrs
popa
cmpb
popf
xchg
or
in
mov
std
sysenter
cli
add
das
mov
mov
xlat
jo
dec
jno
cmpsl
or
cmp
xchg
ljmp
popa
movl
repz
jno,pn
xlat
add
aad
out
stos
mov
fdivrl
test
jo
ficomps
les
in
scas
lahf
adc
scas
addr16
std
in
jno
pop
cwtl
xor
in
fnstsw
sub
cli
cld
push
or
lahf
lock
sub
pop
xchg
jbe
divb
cmpsb
mov
and
cmp
cli
aaa
adc
jno
mov
ret
lds
inc
stc
dec
test
pop
repnz
or
imul
std
mov
inc
mov
mov
cmp
push
mov
inc
repz
push
fiaddl
xlat
or
sbb
pop
push
bound
xorl
add
mov
and
xchg
adc
fpatan
cs
mov
pop
and
cmp
in
je
xchg
xor
filds
in
jb
aad
push
test
mov
cmp
stos
test
push
push
aad
sbb
cwtl
pop
jle
fbstp
mov
rcll
out
mov
in
cmp
pcmpeqd
cmpsb
push
out
cmp
ds
xchg
push
in
xchg
xchg
std
jg
mov
add
mov
fnsave
jl
imul
push
and
lods
jae
into
das
lcall
notb
push
fwait
xlat
mov
nop
leave
lds
jp
fisubl
push
or
inc
arpl
aam
inc
in
push
shll
sbb
fdivrl
lea
mov
inc
push
cmp
inc
addr16
sub
lds
in
inc
cmp
mov
xlat
ror
lea
jp
fsubl
stc
into
sbb
adc
pop
and
dec
sbb
stc
xor
sahf
mov
jl
and
xor
in
adc
cmp
xchg
aas
xor
inc
push
mov
sbb
pop
das
adc
cmpsb
mov
gs
loop
lock
daa
jle
sub
in
mov
outsb
or
push
mov
int
lret
and
int3
ds
pop
movntps
adc
push
or
cli
lret
sbb
inc
scas
pop
fimuls
or
mov
pop
inc
fs
clc
jg
dec
frstpm(287
push
mov
jmp
int
xor
stc
inc
xlat
add
jle
jp
fsqrt
int3
cli
out
xchg
pop
or
pop
mov
and
ret
jno
nop
gs
shrb
mov
jns
stc
in
ljmp
sub
into
mov
jle
leave
mov
sbbb
fldcw
shrb
dec
push
xorb
cmp
scas
xor
movsl
push
mov
cmc
mov
mov
adc
sub
xor
inc
shrl
mov
mov
pop
push
loope
adc
fsubrs
lock
push
in
dec
mov
in
movsl
xor
or
scas
xlat
mov
mov
and
in
mov
fsubl
cmovns
pop
sti
outsb
sar
imul
fmuls
and
mov
dec
jecxz
or
fwait
mov
and
fdivl
jmp
inc
mov
out
in
inc
rorl
imul
pop
xor
mov
mov
cmp
enter
sbb
lods
dec
in
cmp
push
aaa
lret
add
je
mov
mov
aaa
pushf
sbb
cmp
lea
cmp
lock
ljmp
add
push
les
mov
rcr
dec
mov
lret
hlt
adc
loop
xchg
loopne
mov
or
sbb
ljmp
repnz
es
inc
ja
pop
dec
mov
xor
or
and
mov
pop
repnz
out
push
and
dec
push
js
jne
enter
push
xchg
testb
mov
loope
or
push
xor
popa
inc
mov
jae
mov
jo
or
push
rcll
cmp
pop
jo
sbb
or
inc
jle
rcrl
test
mov
das
jp
sahf
adc
pop
mov
jb
and
and
test
inc
ficoml
mov
test
sbb
sub
pushf
and
pop
jl
lret
addb
scas
adc
pusha
dec
lods
movsl
pushf
pop
scas
hlt
clc
cs
jb
or
dec
fmulp
adc
xor
pop
dec
out
js
orb
ja
xchg
pop
push
mov
ret
adc
aam
lcall
aas
push
add
or
test
ja
add
fmuls
rcrb
cmpsl
mov
push
pop
rcl
mov
xor
push
cs
push
test
aad
stc
pop
pop
aas
mov
or
pop
inc
rcrb
jb
stos
mov
stos
and
push
das
and
stos
and
out
bnd
push
mov
dec
sti
in
out
adc
aas
xchg
in
shlb
jnp
ja
nop
lahf
xchg
js
fmull
or
lods
adc
int
fmull
je
add
int3
nop
rolb
sbb
js
repnz
movsb
sub
fcmovne
test
mov
bound
enter
push
inc
rcl
and
mov
je
mov
cmpsb
inc
mov
fmul
enter
push
inc
loopne
mov
lret
mov
inc
mov
mov
cmp
jo
pushf
insb
rcll
hlt
mov
or
xor
bound
xchg
incb
or
cmp
mov
cli
jbe
out
jbe
adcl
jg
jnp
lock
mov
das
jle
dec
imul
iret
roll
push
fsubs
dec
mov
dec
es
mov
decl
and
loope
inc
mov
fwait
xor
or
pusha
xlat
mov
in
push
ja
or
dec
jecxz
out
adc
in
sbb
ret
push
fs
aam
cmpsl
loopne
push
loope
sbb
lods
fnstsw
je
mov
stos
imul
test
iret
imul
cld
dec
and
aas
push
test
xchg
filds
insl
daa
and
rclb
mov
jl
out
jmp
rcl
jmp
jnp
xchg
xchg
jl
jnp
add
add
mov
jmp
lret
bsf
bt
mov
cmc
and
clc
add
pushf
movb
lea
jmp
pop
xchg
mov
sti
or
and
cmpl
cli
ja
mov
jno
mov
fsubrs
and
xchg
lcall
fdivrl
out
cmp
aam
mov
sbb
rcll
and
pop
mov
aad
push
or
cmp
mov
xchg
les
sub
jae,pn
mov
mov
mov
insb
add
rcrb
mov
in
daa
mov
mov
xchg
ret
adc
push
ror
lret
dec
es
pop
and
push
setp
mov
inc
out
pop
xor
xor
xor
or
mov
jl
fwait
mov
loope
add
lods
scas
push
mov
ret
pop
cltd
xor
enter
daa
fisubrs
mov
lea
dec
mov
and
push
push
and
leave
xchg
ret
test
jl
mov
aad
ss
pusha
movl
pusha
lea
ja
push
movl
pushf
lea
jmp
pusha
mov
movw
movb
movb
pushl
ret
cmc
pushf
add
pusha
mov
pushf
pushl
pushf
lea
jmp
mov
call
mov
jmp
clc
or
push
lea
je
cmp
test
cmp
pusha
push
pusha
lea
jne
pusha
push
call
call
daa
enter
movsl
jmp
pop
cmp
jp
sahf
dec
or
xor
fisubrs
mov
sarb
fndisi(8087
lret
fadds
lea
mov
insl
lods
mov
cmc
dec
enter
out
jne
and
mov
mov
nop
xor
and
scas
push
mov
dec
xor
push
popa
scas
aad
push
push
pusha
pop
subl
xor
je
daa
xchg
dec
inc
fstps
or
xchg
push
out
cltd
ret
and
popa
jmp
pop
arpl
hlt
lea
push
lea
jmp
shl
bts
bsf
ror
mov
pusha
cmc
lea
jns
pusha
add
push
pusha
lea
jmp
shl
sub
call
das
das
stc
mov
push
add
pushf
pusha
pushl
pushf
mov
lea
jno
pushf
mov
pushf
push
lea
jmp
rcr
movl
shr
jmp
not
pusha
jmp
ror
ror
add
xor
not
neg
movsbw
and
bts
inc
push
mov
stc
stc
jmp
mov
pusha
dec
clc
jmp
mov
pushf
mov
lea
jne
bsr
sbb
xorb
pusha
not
lea
pusha
mov
pushl
movw
push
pushf
lea
jmp
dec
clc
clc
ror
clc
push
bt
jmp
stc
add
pushl
pusha
cmc
mov
rol
call
mov
dec
sub
pushf
mov
push
bt
add
movb
mov
pushf
movw
lea
jmp
neg
mov
rcl
rcr
clc
mov
test
call
movsbw
cwtl
mov
pushf
mov
pushf
push
pushf
mov
push
pushf
pushl
lea
jmp
sub
jmp
repz
popl
inc
pushl
popl
sub
stc
movl
not
mov
bsf
inc
cmp
sar
add
add
sbb
not
xor
bt
add
call
movw
add
movb
pusha
pushf
lea
jmp
mov
shl
push
add
xor
pusha
xor
lea
add
xor
pop
lea
lea
sub
mov
call
inc
adc
mov
inc
push
mov
pushf
bt
add
push
pushf
movl
push
mov
push
pushf
push
lea
jmp
bt
xchg
bt
add
movb
bt
bt
lea
clc
mov
pusha
pushf
rol
stc
pushf
stc
add
pushf
pushl
pushf
mov
xor
pushf
add
push
call
ror
movl
pusha
dec
pushf
cmp
jmp
push
mov
push
lea
jmp
call
pushf
sub
pusha
mov
xchg
jmp
pushf
mov
pushf
repz
popl
sub
pushl
popl
cmc
test
movsbw
clc
movl
pop
jmp
btc
rcl
add
xor
mov
cmp
sub
pusha
pushf
mov
lea
jbe
mov
push
mov
movl
movb
lea
jmp
movsbl
mov
jmp
lea
jne
pusha
cmp
jmp
push
xchg
pushf
push
mov
xchg
pushf
mov
not
mov
jbe
movsbw
push
mov
mov
call
pusha
mov
push
jmp
push
dec
pushf
cmp
add
call
or
shrd
xadd
bts
mov
neg
sar
push
add
jmp
movzbw
rdtsc
pusha
pushf
bt
cmp
sub
pushf
mov
push
mov
push
mov
mov
movb
lea
jmp
jmp
call
mov
pushf
pushf
movb
push
pushl
ret
pusha
pushf
pushf
mov
pushf
not
bswap
not
mov
bswap
xchg
mov
pusha
mov
bswap
not
mov
jmp
ror
mov
bsf
mov
jp
bt
add
jmp
bt
bt
shl
jmp
jmp
movb
push
pusha
mov
pushf
mov
mov
pushl
call
pushl
pushl
popl
pushf
movb
mov
lea
jmp
sub
cmc
jmp
mov
push
mov
mov
pushf
pushf
pushf
lea
jmp
add
jmp
pushl
popl
pushl
pushf
movb
lea
jmp
add
add
mov
jmp
jmp
pushl
call
pusha
rep
cmp
rcr
mov
cld
neg
mov
stc
stc
bt
pushl
popf
pushf
mov
pushl
push
lea
jmp
push
mov
lea
mov
pusha
bswap
mov
movsbw
jmp
cmc
clc
not
bt
pushf
sub
test
lea
pushf
test
clc
sub
pushf
mov
pushf
push
pushf
lea
jmp
or
pushl
popl
neg
add
bswap
lea
movl
or
shld
push
xchg
mov
rol
neg
add
shr
shl
shrd
xor
bsf
rol
add
bsf
lea
shr
stc
mov
sub
jmp
jmp
movw
call
daa
movzbl
mov
bsr
add
cmp
sar
mov
pushf
bt
clc
add
pusha
pushl
push
push
mov
push
movl
lea
jmp
pushf
clc
sub
movzbl
clc
cmp
sub
mov
xor
push
bt
pusha
stc
sub
clc
bt
movw
not
call
lea
je
cmc
cmc
stc
xor
clc
xchg
stc
push
pushf
sub
pusha
jmp
pusha
pushf
xchg
not
pushl
movzbl
pushf
mov
not
pop
mov
movl
push
mov
push
mov
call
mov
pushl
pop
mov
bswap
xchg
push
jmp
bswap
dec
test
notl
rcl
sar
neg
aad
mov
call
pusha
lea
xchg
xchg
jmp
movb
mov
pushf
movb
call
mov
mov
jmp
call
btr
ror
mov
bsf
xor
neg
adc
pusha
inc
and
add
mov
pushl
add
pushf
jmp
xchg
movsbw
not
jmp
ror
movzbw
not
neg
mov
pusha
clc
stc
add
pushf
movl
pushf
pushf
lea
jmp
jmp
pushl
pushl
mov
push
pushf
lea
jmp
lea
movsbw
push
movsbw
mov
jmp
bt
sub
call
movsbw
mov
mov
not
mov
push
jmp
not
bt
mov
bsf
and
add
or
xor
pushf
shr
add
movzbw
lea
bswap
bts
sub
pusha
lea
push
push
mov
movb
lea
jmp
jmp
jmp
push
mov
movsbw
mov
pushf
jmp
dec
movzbl
bsf
stc
sub
clc
jmp
mov
push
lea
jmp
push
pushf
pusha
mov
push
lea
jmp
bswap
movsbw
mov
lea
jae
pusha
movsbw
pop
mov
lea
movsbw
xchg
pushf
lea
mov
call
sub
call
call
xchg
movw
not
xchg
lea
push
bswap
movzbw
jl
lea
push
jmp
pushf
popl
movb
push
pushf
push
pushl
popl
push
pushl
lea
jmp
movb
pushf
popl
call
stc
cmp
sub
jmp
mov
cmc
stc
add
xadd
xor
shrd
add
movzbw
bswap
pushl
lea
bsr
pop
stc
bts
sub
mov
bswap
pusha
lea
mov
pushf
push
pushf
lea
jmp
jmp
call
xchg
movsbw
repz
popl
cmc
mov
pushl
popl
bt
rol
movl
and
rcl
movsbw
cmc
mov
ror
add
sar
xor
and
movzbw
bts
test
add
neg
bsr
lea
sar
sub
or
test
xadd
mov
shrd
btr
mov
sub
add
ror
mov
movzbw
shr
add
dec
neg
push
call
pushf
cmp
test
sub
mov
mov
movl
lea
jmp
push
jmp
adc
stc
mov
bsr
adc
mov
and
mov
bt
cmc
add
push
mov
movw
shrd
movb
jmp
push
movzbl
lea
movzbw
lea
push
movzbw
mov
bswap
lea
push
call
pusha
ror
movb
call
rcr
bts
xor
mov
pusha
clc
add
pushf
movw
pushf
lea
jmp
jmp
bts
rcr
neg
jmp
call
mov
pushl
push
movw
lea
jmp
call
pusha
shr
pushf
push
jmp
mov
call
inc
xor
shld
add
shl
adc
lea
push
clc
sub
pusha
lea
pushl
mov
push
lea
jmp
pusha
mov
mov
movb
mov
lea
jmp
mov
pushf
pusha
pushf
pushf
lea
jmp
shr
call
pushf
pusha
mov
movsbw
xchg
call
shld
inc
sub
rol
mov
mov
cmc
cmc
add
pushf
jmp
pushf
mov
call
shr
pushl
mov
push
pusha
mov
jmp
mov
mov
mov
call
xor
cmc
add
jmp
seta
call
jmp
pushf
popl
pushf
pusha
push
pushl
popl
pushf
lea
jmp
call
call
pushl
popl
movb
push
pushf
lea
jmp
dec
bt
bt
add
movb
mov
mov
movb
movb
pushl
ret
push
mov
mov
lea
jmp
xchg
not
pushf
bswap
pusha
mov
bswap
mov
pop
mov
not
movw
lea
mov
mov
lea
xchg
movzbw
mov
pop
xchg
movsbw
call
pusha
pushl
mov
mov
jmp
push
daa
mov
or
xor
mov
sbb
dec
not
mov
test
add
clc
pusha
bt
call
cmc
stc
add
pushf
mov
push
movb
mov
lea
jmp
push
pusha
pushf
mov
jmp
movl
add
pop
mov
shl
and
add
mov
mov
ror
xor
movzbw
bts
test
shr
add
rcr
rol
lea
bts
rcl
jmp
xor
sar
test
bt
mov
cmp
sar
mov
clc
test
sub
call
pusha
pushf
popl
call
setle
ror
and
and
sub
call
call
movzbw
push
movw
xchg
jmp
jmp
mov
mov
mov
pushf
movl
lea
jmp
test
rcl
mov
shl
stc
xadd
add
test
xor
shl
add
call
xchg
pop
movzbl
push
call
jmp
xchg
mov
lea
js
repz
ror
shld
movsbw
pushl
add
adc
push
or
jmp
dec
pushf
mov
lea
jmp
xadd
sub
mov
shl
bsr
bsf
add
not
movsbw
sub
clc
mov
stc
call
mov
pusha
push
push
lea
jmp
pushf
lea
cpuid
stc
sub
pushf
cmpl
pushf
jmp
pushf
xchg
pushf
jmp
push
mov
mov
pushf
xchg
jmp
jmp
or
shr
mov
cmc
sub
pushf
pushf
pushf
div
call
rcl
sub
and
inc
mov
bt
jmp
pusha
jmp
pusha
pushf
mov
mov
pushf
lea
jmp
repz
popl
mov
pushl
popl
shl
rol
and
shld
movl
movl
mov
movzbl
pop
btc
add
cmc
shrd
xor
mov
bts
ror
cmc
add
xchg
mov
shr
not
lea
sbb
stc
sar
neg
sub
mov
mov
pusha
pushf
pushf
pushl
lea
jmp
shl
mov
call
pushf
clc
push
mul
pushf
pushl
pushf
lea
js
mov
call
rol
rol
and
sar
mov
pushf
call
lea
pushf
mov
lea
jmp
clc
cmp
sub
push
stc
add
pushf
pusha
pushl
pushf
pushf
popl
movb
pushl
popl
pushf
movb
lea
jmp
mov
call
sub
call
test
pushl
pusha
stc
cmc
jmp
mov
pushf
mov
lea
mov
bswap
pop
movsbw
movsbw
mov
xchg
call
or
cmc
mov
call
movb
call
mov
pusha
mov
pushf
mov
lea
xchg
repz
popl
cmc
xchg
clc
pushl
popl
bsf
ror
bt
movl
cmc
mov
btc
jmp
cmp
pushf
pushf
call
pushf
pushl
mov
mov
pushf
pusha
mov
movb
lea
jmp
mov
jmp
lea
neg
sub
push
lea
pushl
pusha
pushf
pushl
lea
jmp
movzbw
mov
bts
or
adc
shr
mov
pusha
jmp
push
mov
pushf
mov
mov
mov
mov
pushf
pushf
lea
jmp
inc
rol
mov
call
call
lea
jne
jmp
xor
mov
and
bsr
clc
mov
bt
jmp
pusha
push
jmp
push
call
jmp
pusha
jmp
movzww
cmp
test
call
pushl
popl
movw
pushl
pushf
lea
jmp
mov
mov
pusha
lea
jmp
push
cld
pushf
jmp
movw
cmc
add
mov
pushf
lea
jmp
sub
ja
bt
stc
sub
jmp
jmp
not
mov
call
pushf
mov
push
pushl
ret
pushf
pushf
popl
push
call
pusha
cmc
movb
add
pushl
lea
jmp
mov
not
mov
pusha
pop
pushf
mov
bswap
pushl
mov
movsbw
lea
mov
movsbl
jmp
mov
pushf
movb
pusha
lea
jmp
push
pushf
jmp
xchg
lea
mov
mov
lea
mov
mov
mov
not
repz
popl
xchg
pushl
popl
and
movl
pushf
mov
xchg
bsr
shr
dec
add
bsf
rol
xchg
xor
shld
ror
neg
stc
add
lea
lea
rcr
inc
sub
pusha
movsbw
lea
mov
pusha
lea
jmp
pushf
popl
push
lea
jbe
popl
pusha
movl
lea
jmp
call
pushl
popl
push
pushf
pushf
push
lea
jmp
btc
mov
aas
mov
call
pusha
rol
dec
inc
bsf
add
ja
sar
add
jnp
stc
btc
movzbl
movzbl
call
cwtl
test
clc
sub
pushf
pushf
push
push
mov
test
cmc
movb
sub
push
pushf
pushf
movb
lea
jmp
push
pushl
repz
popl
clc
clc
shld
pushl
popl
inc
jmp
repz
popl
shrd
pop
jmp
mov
sete
lahf
mov
pusha
jmp
pushf
call
mov
push
lea
pushf
call
pushf
mov
push
pushf
pusha
push
mov
movzbl
jmp
decl
pushf
pushf
movw
call
jmp
pusha
mov
pusha
pushf
popl
pushf
mov
mov
pushl
popl
mov
pushl
pushf
lea
jmp
mov
push
lea
jmp
not
mov
jmp
bt
bts
clc
movzbl
pusha
cmc
btc
call
bt
pushf
push
movw
sub
jmp
pusha
bswap
call
pusha
mov
pop
movsbw
mov
repz
popl
lea
pushl
popl
add
cmc
movl
bsf
bt
rcr
mov
shl
add
bt
xor
stc
add
shrd
pusha
sar
lea
rcr
btc
bswap
adc
sub
movsbw
movzbl
call
bt
clc
add
mov
push
lea
jmp
pushf
popl
jmp
movzbw
movsbw
mov
movzbw
lea
pushf
not
mov
push
pushf
mov
mov
pushl
ret
mov
jmp
pushl
popl
movb
pushf
pushf
lea
jmp
std
cld
cld
call
pushl
pushl
mov
movb
movb
jmp
pushf
mov
pushf
lea
jmp
jmp
push
pushl
xchg
pop
push
not
mov
bswap
pushf
mov
movsbw
pushf
pushf
bswap
mov
pushf
jmp
cmc
add
pushf
pushf
add
push
call
pushl
mov
movzbl
mov
not
pusha
mov
not
movsbl
mov
movsbw
push
movsbw
repz
popl
sar
pushl
popl
pushf
bt
call
rcl
sar
pushf
shld
mov
pusha
clc
add
movl
push
pushf
movl
lea
jmp
pushl
popl
cmp
sub
movl
neg
stc
mov
bswap
and
add
neg
dec
movw
mov
xor
movsbw
jmp
pusha
add
push
pusha
pushf
mov
lea
jmp
pushf
movb
call
and
xor
push
call
mov
jmp
cmc
rol
not
inc
ror
sub
add
movzbw
movzbl
btr
bts
cmc
mov
cmc
ror
jmp
not
bt
clc
pusha
not
movb
bt
push
and
jmp
pusha
shl
cmc
movb
stc
push
shr
movb
or
test
test
stc
clc
xor
call
mov
bswap
mov
movsbw
pusha
pushl
bswap
mov
not
pop
movzbw
mov
xchg
xchg
mov
pushf
lea
movzbw
mov
mov
jmp
cmp
push
mov
bt
add
pushl
push
lea
jmp
lea
push
pushl
pushf
mov
lea
jmp
pushl
popl
pushl
mov
movb
push
lea
jmp
pushf
popl
pushf
call
mov
call
dec
pushl
bt
call
stc
add
push
jmp
mov
xchg
lea
not
movzbw
push
movzbw
not
push
call
jmp
call
shl
setb
add
and
shrd
stc
sub
bts
pop
and
rcr
xor
bt
not
bswap
ror
jmp
mov
shl
dec
add
btr
xor
xor
lea
bt
add
xadd
adc
bt
bsr
mov
bsr
sub
not
pusha
lea
pusha
push
lea
jmp
add
shr
push
pushf
shrd
xor
sbb
btr
rcl
bsr
add
rcr
pop
or
lea
bt
shl
call
lea
jl
push
pushl
popl
mov
push
lea
jmp
pushf
popl
push
pushl
popl
pushf
movw
lea
jmp
xchg
mov
mov
pusha
mov
pop
bswap
mov
lea
jl
push
pusha
jmp
call
pusha
call
mov
push
pushf
popl
jmp
pushf
call
shl
call
mov
pushf
pusha
pushl
ret
mov
lea
mov
pusha
lea
jmp
clc
pushf
cmp
xchg
jmp
mov
pop
jmp
bt
neg
xor
mov
setns
neg
mov
pusha
pushf
sub
bt
cmc
bt
shl
call
test
sbb
shl
cmc
mov
pusha
stc
movb
add
pushf
pushf
pushf
lea
jmp
pushf
xchg
lea
lea
jne
not
bswap
push
not
push
pushf
pushf
mov
pop
jge
mov
push
jmp
mov
mov
jmp
rol
mov
test
pushf
add
lea
jl
push
mov
jmp
mov
pusha
bswap
repz
popl
xchg
xchg
movzbl
pushl
popl
shl
movl
jmp
lea
cld
std
push
cld
mov
bswap
bswap
lea
mov
push
movw
call
inc
sub
inc
cld
mov
inc
pop
adc
pop
cwtl
and
rcr
popf
jmp
movzww
jmp
inc
bt
neg
or
mov
test
bt
add
mov
test
test
pusha
not
cmc
not
cmp
sub
cmp
cmp
and
movw
mov
jmp
call
push
repz
popl
shr
movzbw
pushl
cmc
movzbl
xadd
btr
push
call
shl
rcl
shr
add
btr
lea
movzbl
cmc
mov
clc
cmc
pushf
ror
pushf
jmp
pusha
shld
jmp
push
pushf
xor
bswap
not
dec
ror
add
or
mov
neg
mov
call
pusha
mov
xchg
call
jmp
call
mov
call
mov
pushf
lea
jmp
push
movb
lea
pusha
mov
pushf
mov
push
pushf
pushl
lea
jmp
clc
sub
jmp
pushf
pusha
xchg
pusha
xchg
jmp
pusha
xchg
jmp
mov
call
neg
movzbw
sbb
call
mov
jmp
push
mov
pusha
mov
movb
movb
pushf
popl
call
mov
push
pushf
lea
pushl
repz
popl
movw
sub
neg
shl
pushl
popl
test
movl
jmp
push
mov
mov
jmp
setg
call
movzbw
call
call
sbb
inc
movzbl
movb
mov
cmp
call
mov
call
cmc
add
shr
bt
xor
test
ror
bsr
add
shld
shl
shld
lea
inc
bt
sub
jmp
pushl
mov
jmp
call
add
pushf
movw
pushl
popf
mov
lea
jmp
lea
pop
pushf
mov
call
das
mov
cmp
mov
cmp
mov
stc
sub
stc
call
mov
call
movsbw
lea
pushf
pushf
push
pushf
lea
jmp
mov
not
not
bswap
lea
repz
popl
bt
sar
shl
test
pushl
popl
neg
movl
bsr
shl
mov
cmp
add
clc
add
clc
xor
not
test
bsf
add
bts
lea
inc
btc
sub
pusha
pushl
jmp
dec
xchg
shr
xchg
mov
bts
pusha
mov
cmc
jmp
mov
movzbl
mov
movsbw
bswap
pop
repz
popl
lea
push
bsr
xchg
pushl
popl
shr
bswap
shr
push
movl
btr
mov
btc
rcl
rol
movzbw
add
btr
call
sbb
or
dec
out
or
or
or
inc
repz
sub
pusha
cld
out
or
pop
repz
pop
repz
pusha
out
or
psllq
add
repnz
jg
or
repnz
or
fdiv
or
pop
lock
pushf
lock
out
or
sub
or
mov
or
repz
cmp
or
out
or
fcomi
or
out
or
xor
or
icebp
or
mov
repz
hlt
or
repz
or
or
repz
and
repz
pop
repz
mov
or
das
out
or
xchg
out
or
and
icebp
or
and
or
imul
or
pusha
out
or
movsb
repz
and
or
cmp
or
cmp
or
inc
out
or
or
or
add
or
popf
repnz
icebp
or
lcall
mov
outsl
icebp
or
or
or
hlt
or
popa
hlt
or
pop
repz
pushf
lock
icebp
or
sub
or
out
or
in
out
or
repnz
or
sub
or
movsb
repz
into
out
or
int3
out
or
cmp
or
cmp
or
popf
repnz
lock
out
or
js
or
repz
and
or
das
out
or
lahf
icebp
or
pop
lock
iret
repnz
hlt
or
pop
repz
pop
repz
lahf
out
or
mov
or
out
or
xor
or
hlt
or
or
or
repnz
outsb
out
or
mov
or
out
or
icebp
or
into
out
or
cmp
or
cmp
or
iret
repnz
out
or
out
or
or
or
sub
pusha
lcall
loopne
repnz
icebp
or
sub
out
or
pop
repz
pop
repz
lahf
icebp
or
in
out
or
sub
or
popa
hlt
or
in
out
or
sub
or
in
out
or
pusha
out
or
sub
icebp
or
sub
or
cmp
or
and
icebp
or
cli
repnz
sub
pusha
fdiv
or
sub
or
or
or
add
or
popa
hlt
or
fdiv
or
aad
or
sub
or
repz
pop
repz
inc
repz
popf
repnz
lock
imul
or
repnz
icebp
or
add
or
and
or
psllq
add
icebp
or
cmp
or
cmp
or
mov
or
hlt
or
lock
dec
lock
lahf
out
or
sub
or
repz
popa
hlt
or
pushf
lock
out
or
sub
icebp
or
pop
repz
pop
repz
push
hlt
or
lock
dec
out
or
inc
repz
fcomi
or
cli
repnz
sub
or
mov
or
icebp
or
sbb
or
cmp
or
cmp
or
sub
pusha
mov
or
sub
or
das
out
or
xchg
out
or
dec
out
or
int3
out
or
mov
or
lock
sub
or
clc
repnz
pop
repz
pop
repz
imul
or
lret
pusha
aad
or
lret
pusha
mov
or
lock
icebp
or
repz
repz
movsb
repz
lcall
mov
cmp
or
cmp
or
or
or
icebp
or
out
or
movzbl
test
pushf
bt
call
inc
movsbw
dec
inc
mov
pushf
mov
jmp
pusha
pusha
mov
not
not
bswap
lea
pushf
cld
push
xchg
lea
mov
movsbw
call
push
pusha
rep
ror
bts
adc
mov
push
mov
cmp
movw
pushl
popf
pushf
mov
lea
jmp
push
mov
pushf
push
pushf
mov
lea
jmp
call
mov
inc
pushf
mov
jmp
push
mov
push
mov
xchg
jmp
push
mov
movb
jmp
clc
jmp
jmp
bt
movb
sub
call
mov
bswap
call
movsbw
mov
lea
ja
push
movzbw
call
push
call
mov
stc
add
btc
mov
or
cmc
btc
add
call
rep
bt
mov
test
mov
cmc
pushl
popf
pushf
pushf
pushl
lea
jmp
not
pusha
lea
pushf
mov
lea
jmp
push
pushf
pushf
popl
jmp
not
pushf
lea
push
pushf
lea
jmp
jmp
mov
jmp
mov
pusha
mov
lea
mov
repz
popl
rol
lea
pushl
popl
rcr
call
pushl
popl
pushf
mov
pushl
pushf
lea
jmp
xchg
jmp
cmc
sub
push
not
mov
pusha
lea
pusha
push
mov
lea
jmp
call
shld
pushf
mov
pushf
pushf
push
pushf
popl
call
dec
jmp
mov
push
not
lea
pushf
mov
push
xchg
pusha
mov
movsbl
repz
popl
test
rcl
cmc
pushl
popl
bsf
sub
inc
sar
movl
shl
xchg
sar
mov
cmp
call
push
pushf
popl
mov
push
jmp
mov
pushl
pushl
pushl
ret
bswap
pushf
mov
jmp
cmc
daa
dec
jmp
or
call
and
bt
or
sar
mov
bt
bt
add
pushf
pushf
ror
cmp
push
push
xor
pusha
dec
test
cmc
cmp
add
call
jmp
pusha
add
pusha
push
mov
mov
movb
movb
lea
jmp
sub
bt
mov
test
cmp
sub
push
call
shrd
dec
xor
pusha
mov
shl
clc
mov
cmp
clc
sub
stc
pushf
test
shl
pushf
jmp
bts
pushf
pushf
setbe
mov
stc
bswap
movb
call
cmp
clc
add
lea
movzbl
btr
mov
call
shrd
test
movzbw
lea
adc
sub
mov
movsbw
jmp
jmp
pushl
popl
movb
lea
jmp
jmp
mov
call
and
neg
mov
test
cmc
sub
clc
call
call
pusha
call
rol
bswap
not
dec
setb
inc
jmp
push
mov
pushf
sub
call
clc
add
stc
test
stc
jmp
pusha
mov
xchg
pushf
xchg
jmp
adc
bts
neg
mov
clc
stc
push
test
add
pushl
pusha
movw
pushf
lea
jmp
pusha
jmp
ror
pushl
clc
pushf
call
lea
repz
popl
not
call
mov
not
call
push
call
jmp
mov
pushf
pushf
pusha
movb
lea
jmp
sbb
rcl
sar
cmp
xor
pushf
jmp
pusha
pushf
mov
bswap
movsbw
not
xchg
pushl
pop
mov
lea
mov
call
shr
xchg
bswap
mov
and
call
jmp
push
sub
jmp
divl
pushf
pushf
jmp
xchg
rdtsc
pop
bswap
call
xchg
pushf
not
pushl
mov
bswap
movzbw
movsbw
mov
mov
bswap
lea
repz
xchg
pushl
xadd
push
xor
mov
shr
or
add
bt
not
bsf
xor
xor
btc
xchg
add
push
pop
bsr
mov
pushf
shl
sub
mov
pusha
pop
jmp
sar
xor
pushf
movl
xor
rcr
setae
jmp
jmp
lea
jne
xchg
repz
neg
pushl
ror
btr
rcl
push
neg
mov
btr
add
movsbw
xor
pushf
add
rcl
lea
bsr
btr
test
sub
not
pushf
bswap
push
lea
movb
pusha
mov
push
lea
jmp
mov
mov
mov
movl
push
lea
jmp
mov
push
movw
lea
mov
movsbl
push
movsbw
bswap
pusha
mov
pusha
xchg
pushf
bswap
mov
movl
mov
xchg
repz
popl
mov
xadd
btr
sar
pushl
popl
pop
btc
push
movl
pushf
ror
mov
mov
btr
rcl
add
inc
dec
bswap
xor
pushl
add
or
bsr
lea
inc
btc
shld
jmp
pushl
popl
pushf
push
mov
mov
lea
jmp
mov
mov
xchg
jmp
jmp
add
adc
lea
xadd
lea
jmp
sub
jmp
clc
sub
pusha
pushf
test
cbtw
clc
clc
bt
cwtl
cmc
call
mov
jmp
push
mov
mov
pushf
push
jmp
cmp
cmp
sub
push
pushf
stc
push
and
pushf
pushf
mov
pushf
popl
jmp
stc
dec
mov
jmp
jmp
push
movl
push
mov
mov
pushf
movw
pushl
ret
lea
xchg
jmp
bsf
or
mov
ror
add
shr
rol
not
xor
xor
shl
btc
add
bswap
rcl
inc
movsbl
lea
clc
adc
sub
jmp
push
jmp
add
pushf
pusha
pushl
movb
mov
pushl
pushf
push
lea
jmp
aaa
dec
dec
movsbl
mov
add
mov
bt
neg
mov
clc
stc
test
call
pushf
rdtsc
mov
pushf
cwtl
mov
mov
jmp
add
jmp
test
pushl
xor
movb
movw
pusha
inc
mov
pushl
jmp
jmp
call
jmp
pushf
pusha
movb
mov
push
push
pushf
lea
jmp
jmp
push
call
push
mov
pushf
lea
jmp
pushl
popl
pushf
mov
lea
jmp
push
pushf
add
jmp
mov
xchg
daa
mov
btr
mov
jmp
btc
mov
call
mov
stc
cmc
pushf
ror
movb
jmp
push
shl
btr
dec
movzbl
bswap
test
cmc
and
add
bswap
ror
xor
jmp
mov
movsbw
mov
pop
movsbw
pushf
movsbw
mov
movsbw
pop
not
pop
mov
mov
xchg
call
bt
mov
cmc
bt
jmp
call
mov
pushf
lea
repz
popl
cmp
xor
pushl
movsbw
stc
not
push
xadd
test
lea
neg
mov
test
and
shr
shl
add
pushf
cmp
sub
cmc
xor
shr
rcl
mov
add
push
shrd
sbb
shld
lea
and
sub
push
lea
mov
pusha
pusha
lea
jmp
pusha
jmp
neg
add
bswap
xor
lea
inc
sub
stc
adc
clc
shr
mov
clc
bswap
mov
sbb
bsf
shl
clc
add
bt
mov
shr
inc
setb
add
clc
bsr
btr
neg
bt
call
mov
jmp
xchg
movsbw
push
lea
push
xchg
movzbw
push
mov
push
push
repz
popl
bsf
sub
shrd
pushl
rcr
shl
inc
push
xchg
mov
shld
btr
sar
add
call
shl
xor
bswap
pusha
inc
clc
jmp
movsbl
push
rcr
movsbw
clc
shl
mov
shld
add
neg
xor
shld
adc
pusha
pusha
add
or
sar
lea
cmc
shrd
bt
sub
push
lea
lea
pusha
pushf
mov
lea
jmp
jmp
xchg
movsbw
call
sub
bswap
neg
mov
bt
cmp
add
pushf
pusha
jmp
pusha
pushf
add
jmp
pushf
popl
pusha
pushl
popl
pushl
lea
jmp
movzbw
sub
lea
pushf
not
movsbw
lea
mov
movb
movw
lea
jmp
not
repz
popl
bt
shl
pushl
popl
shl
shr
movl
shld
pop
shl
mov
pop
xchg
sbb
add
shld
xor
rcl
add
shrd
lea
sar
cmc
add
sub
movsbw
bswap
mov
mov
pushf
lea
jmp
movsbw
pushf
mov
xchg
not
movsbl
mov
call
setno
not
mov
push
movzbw
mov
movsbw
push
mov
pushf
pushl
xchg
lea
pushf
call
mov
shl
cmp
shl
dec
add
not
call
add
mov
call
cmc
xor
cmc
stc
pushf
not
pushf
bt
ror
jmp
cmc
test
mov
pushf
sub
push
pushl
pushf
mov
jmp
mov
jmp
sub
adc
rol
clc
sub
mov
btr
jmp
or
mov
or
stc
mov
js
rcl
mov
pushf
cmp
sub
movw
pushf
div
pushf
jmp
pushf
mov
mov
pusha
lea
jmp
pusha
mov
push
movl
lea
jmp
aam
pusha
rcl
aaa
lea
cmp
call
pusha
pop
xchg
pusha
pushf
xchg
mov
xchg
mov
call
pusha
lea
pusha
pushl
lea
jmp
push
jmp
movzbw
jmp
pushf
push
xchg
mov
call
mov
mov
movsbw
mov
push
movzbl
bswap
call
sub
movb
pushf
pushf
add
pushf
movb
pushf
popl
pusha
push
pushl
popl
movb
push
lea
jmp
push
pushf
mov
lea
jnp
pusha
cld
pushf
call
stc
sub
pusha
pusha
push
jmp
mov
movsbl
movsbw
movsbw
movsbw
push
not
bswap
mov
not
push
pushf
not
movsbw
xchg
mov
pusha
push
mov
movsbw
mov
bswap
mov
bswap
pushf
mov
pushf
repz
popl
cmc
sub
pushl
popl
xadd
and
movl
bsr
push
test
movzbw
mov
or
add
pusha
movsbw
cmc
dec
xor
inc
inc
add
sub
lea
pop
lea
rol
cmc
sub
bswap
push
lea
pusha
pusha
lea
jmp
pushf
pushl
popl
push
lea
jmp
mov
lea
ja
sbb
mov
mov
ror
or
lea
bsr
xadd
shr
cwtl
sub
bt
xor
aad
lea
rol
bts
and
mov
shrd
bt
sub
movzbw
jae
mov
push
pushf
popl
mov
push
movsbw
lea
mov
lea
lea
jmp
xchg
lea
pusha
pop
not
mov
mov
mov
pusha
lea
pop
repz
popl
movsbl
and
sar
pushl
popl
bt
test
dec
stc
movl
btr
dec
shl
mov
xor
shrd
add
xchg
xor
movzbw
btc
sbb
add
bts
neg
lea
stc
lea
movzbw
sub
sub
pusha
pushf
pushf
lea
movw
lea
jmp
mov
pushf
pushl
lea
jne
rol
cmp
mov
cmp
pushf
and
test
cmp
call
