fwait
add
in
add
mov
adc
cmp
add
cmp
sub
inc
adc
pop
sub
imul
add
sub
sbb
rorl
sti
mov
mulb
sub
adc
add
sbb
rolb
mov
jnp
inc
cld
dec
es
cmp
rclb
outsl
fucomip
leave
mov
or
xor
mov
imul
add
add
mov
cmp
or
mov
or
in
mov
cmp
sub
insb
add
mov
mov
outsl
fisttpl
jnp
rorb
fiadds
push
sub
or
addl
pop
jae
mov
stc
or
or
imul
sbb
sbb
cmpsb
ljmp
and
ret
clc
sbb
jle
jns
mov
mov
xor
fistps
inc
add
sub
mov
inc
adc
jg
leave
cmp
movzbl
dec
sbb
fistps
das
jmp
pop
mov
mov
rolb
clc
sbb
jle
sbb
push
sub
test
je
sbb
cmp
pop
mov
cmp
add
ret
out
repnz
cmp
imul
jge
sbb
jnp
mov
ret
aad
sbb
scas
insl
fcomip
jnp
pop
mov
add
lret
mov
mov
mov
pop
in
mov
dec
add
push
mov
push
inc
lock
pop
repnz
mov
jnp
outsl
adc
push
cmc
add
out
cld
add
add
or
mov
stc
or
mov
jbe
xchg
imulb
idiv
push
mov
fmulp
mov
pop
cli
jge
add
xor
in
sbb
fnstcw
jle
adc
mov
add
mov
shll
out
insw
push
mull
shr
or
andl
jmp
jmp
xor
rcrb
shlb
outsb
pop
cs
pop
sbb
aas
lods
push
adc
out
mov
pop
mov
fbld
sarb
outsl
mov
pop
sbb
ss
mov
or
cmpsb
pop
cli
mov
or
adc
lock
shr
inc
sbb
sbb
leave
mov
scas
ret
pop
mov
sbb
add
int3
lcall
xor
movzwl
sub
mov
ret
stc
mov
xlat
outsb
or
adc
into
out
pop
jb
add
inc
mov
mov
cltd
pop
popa
add
fistpl
sbb
fbld
mov
mov
adc
cli
push
int3
test
pop
xor
push
aas
mov
fstps
jno
push
aaa
mov
mov
outsb
ja
fmul
mov
fwait
jmp
sahf
insb
dec
daa
ret
jmp
adc
mov
jne
ret
xor
add
pop
pop
popa
and
cli
xor
sahf
mov
sbb
mov
ret
push
cmp
push
add
push
xchg
xchg
xchg
sub
repnz
or
push
dec
push
sub
lcall
andb
jns
push
inc
ss
out
pop
es
mov
cli
sbb
aaa
ficompl
inc
clc
cmpl
sub
sbb
mov
arpl
out
jge
insb
ret
mov
std
lock
mov
mov
and
xchg
cmp
sarb
add
ja
adc
pop
jmp
repnz
mov
pop
or
cld
inc
cltd
and
sub
das
push
lods
inc
imul
imul
pop
js
icebp
xchg
fdiv
outsb
daa
lock
ret
call
movsl
rcrl
js
adc
push
mov
mov
out
mov
adc
xchg
stc
or
ficomps
stc
adc
pop
mov
pop
mov
out
cmpsb
push
jle
add
mov
loopne
rorl
push
push
fcmovu
out
or
cmp
imul
adc
xor
lcall
sub
pop
popa
push
jl
adc
fcmovnu
ret
ror
cli
mov
mov
adc
punpckldq
fistpl
cmp
push
pop
add
cli
pop
push
pop
jnp
pushf
mov
xchg
pop
and
ret
mov
sub
fdivs
bound
test
cmpsl
mov
fcmovnb
fistps
add
adc
test
fwait
lea
rorb
dec
dec
ljmp
mov
add
push
and
test
or
xor
fdivs
adc
sub
sub
pop
push
aam
call
mov
lods
mov
and
adc
fistpl
fsubs
pop
push
pop
and
jle
das
jbe
push
fsubs
mov
imul
jne
sbb
jbe
fdivr
stc
sbb
jmp
in
mov
mov
mov
in
push
insb
ret
cmp
mov
dec
jecxz
dec
fstl
add
pop
fs
xor
sbb
pop
jmp
jnp
lret
icebp
jbe
adc
rorb
jle
sbb
mov
popf
or
inc
loop
add
lods
call
adc
clc
push
rorl
cmp
and
inc
ret
testb
fsubrs
jecxz
or
sbb
sbb
xor
xor
clc
sub
adc
aam
popa
jo
mul
mulb
cmp
aad
adc
out
loope
ljmp
jbe
and
mov
pop
adc
or
lock
in
adc
lock
adc
pop
inc
sti
testb
or
shlb
pop
push
mov
jae
mov
lock
mov
outsl
orl
sahf
push
pop
mov
sbb
push
hlt
push
enter
sbb
fs
sbb
ficompl
mov
add
les
mov
pop
and
movsb
sbb
jle
aad
bound
std
cmp
icebp
je
pop
adc
cmp
pop
fs
in
adc
push
sub
xor
and
mov
or
rolb
push
sbb
mov
fcmovu
or
stc
sbb
and
and
sub
jo
xchg
adc
cmp
jecxz
sarl
mov
test
push
adc
jmp
pop
pop
sub
xor
ret
aad
xchg
cmp
adc
mov
mov
dec
push
cmp
aam
out
shl
lock
cs
and
mov
ret
imul
mov
and
div
jne
mov
es
sbb
mov
cltd
dec
xchg
mov
adc
rcl
and
rcrl
sbb
xchg
bound
pop
add
mov
mov
insl
int3
out
push
mov
fsubr
movsl
mov
mov
imul
loopne
push
les
mov
shrb
cmp
xor
push
ret
imul
sub
sbb
fstpl
lods
add
sbb
mov
cmp
adc
pop
sbb
cmp
cmpsb
adc
push
das
mov
pop
cmp
mov
adc
xor
lret
jae
sbb
or
sub
cmp
inc
push
jae
in
popf
flds
mov
loope
rclb
movsb
pop
cmp
sbb
cld
xchg
jo
js
mov
scas
mov
pop
push
sbb
inc
inc
cli
sbb
roll
jne
inc
in
add
sbb
enter
insb
gs
pop
push
sbb
cmp
mov
jl
dec
adc
cmp
xchg
sbb
pop
addl
scas
sbb
mov
and
jp
lock
jl
rclb
mov
ret
sbb
xlat
add
cmp
ret
test
js
lods
pop
fildl
sbb
icebp
pop
sbb
pop
xchg
or
mov
shrl
int
xor
test
pop
jg
sbb
push
xorl
scas
mov
repnz
mov
push
inc
rclb
inc
popa
pop
jle
jmp
into
pop
pop
inc
lea
lret
pop
ret
shl
jmp
loope
jg
sbb
push
mov
scas
add
in
pop
cs
cli
test
je
outsb
lret
sbb
test
leave
cwtl
cmp
rorl
in
shl
push
dec
lahf
and
pushf
mov
push
lds
les
into
fmulp
mov
push
pop
adc
inc
cmpsb
rolb
shr
pop
in
std
int
push
js
arpl
push
jae
add
or
sbb
insl
scas
rorb
jo
fsubrl
das
repnz
sub
test
mov
fstpt
out
rolb
xchg
shlb
mov
mov
call
mov
add
daa
mov
shrb
stos
mov
leave
js
sub
addl
mov
mov
orb
push
cmp
mov
insl
xor
mov
aam
jmp
add
mov
fildl
xchg
popa
icebp
mov
imul
leave
jne
aam
xchg
or
loope
add
cs
aad
inc
enter
mov
adc
or
loopne
stc
push
pop
jne
xor
jmp
int
mov
ljmp
sub
rcr
jmp
sub
daa
imul
subb
push
test
call
or
mov
adc
cmp
push
adc
and
mov
or
incl
mov
push
and
int
jmp
or
sbb
sub
lods
add
lret
mov
stos
movsb
shll
mov
jae
orl
push
mov
int
loop
xor
push
or
lods
mov
or
mov
add
mov
push
test
dec
cmpb
dec
adc
jmp
adc
or
shr
mov
add
xor
xor
mov
push
jmp
fnsave
out
mov
ret
mull
mov
rcrl
ss
into
pop
cmp
insl
mov
sub
adc
add
jecxz
adc
sbb
mov
sub
add
push
cmp
add
jge
push
dec
loop
mov
jb
push
pop
loop
test
mov
push
xor
stc
aam
sbb
test
jg
enter
jp
arpl
sbb
inc
insl
add
cmp
out
push
aas
rol
mov
sbb
cs
insb
shl
test
pop
pushw
push
jo
xor
sbb
xor
add
or
mov
jns
shlb
jg
pop
pop
daa
xor
in
fstl
xor
sub
and
aam
xor
xor
sbb
mov
sbb
mov
cmp
or
push
adc
add
push
pop
mov
cmp
popa
into
mov
xchg
lea
imul
cs
mov
xchg
push
clc
dec
icebp
or
jmp
or
sbb
popl
mov
xchg
ljmp
cmc
and
popf
adc
mov
add
and
lcall
ja
dec
lret
push
xchg
mov
clc
bound
or
pop
push
mov
sbb
mov
in
jo
push
mov
lret
fs
dec
add
add
sbb
or
mov
or
ficoms
rcl
mov
inc
and
ret
push
clc
xchg
repnz
popa
xchg
stos
mov
movsl
sub
lret
sbb
pushf
cs
jne
cmp
pop
xor
jb
mov
adc
rolb
aam
push
or
pushf
push
int3
push
rcrb
ja
inc
aam
nop
outsb
and
lods
cli
stc
dec
cmp
jecxz
or
pop
cmp
xorb
dec
sbb
inc
sub
inc
push
pop
aaa
inc
lcall
enter
repnz
shll
mov
out
or
mov
sbb
sbb
jl
or
adc
out
cwtl
mov
pop
daa
xor
add
sub
loope
and
or
mov
nop
pop
cmc
out
clc
adc
pop
das
addb
push
and
jge
shrl
jbe
push
and
cli
adc
loope
add
push
out
push
outsb
push
lock
mov
inc
cli
adc
pop
push
dec
jbe,pt
jle
pop
lea
pop
sbb
sti
add
daa
cli
fdivl
aam
adc
test
sub
lods
push
dec
inc
inc
xchg
leave
shlb
push
mov
testb
es
outsb
inc
and
sarb
enter
ds
jne
rolb
cs
adc
mov
daa
push
loopne
bound
cltd
int
addr16
push
push
fcompl
pop
outsb
push
dec
xor
mov
test
sbb
inc
mov
leave
jle
add
push
mov
sbb
cmp
pop
test
pop
dec
dec
mov
inc
mov
adc
movb
add
sbb
xchg
hlt
sub
push
jo
add
leave
push
test
sub
icebp
mov
mov
xchg
adc
xor
enter
cmpsl
jge
sbb
mov
testb
test
sub
and
mov
adc
arpl
ljmp
inc
ret
inc
inc
daa
enter
subb
cmp
std
stos
adc
into
aaa
ret
add
dec
les
inc
inc
call
xchg
push
xchg
mov
push
mov
add
out
cmc
sbb
je
push
jne
or
popf
or
pop
add
cmp
into
xor
sbb
imul
adc
mov
sub
lret
arpl
mov
pop
in
xchg
pop
mov
bound
pop
mov
or
fwait
gs
dec
lods
orl
and
imul
add
add
mov
sub
movsl
xchg
ljmp
stc
mov
push
add
cmp
icebp
or
test
lcall
adc
jg
xor
pop
out
mov
insl
stos
leave
fistpll
getsec
inc
push
sub
cs
es
push
sub
push
out
scas
mov
mov
pop
fidivrs
mov
adc
movsb
sbb
or
fsubs
pop
push
into
aad
adc
cmp
sbb
xor
mov
pop
sub
loopne
fs
and
loope
push
sbb
repz
pop
mov
pop
sub
daa
insl
add
negb
add
sub
mov
add
fsub
rcrb
repnz
shl
jmp
xor
bswap
xchg
lods
adc
cmp
call
test
jg
pop
dec
adc
sarl
add
fistl
push
popa
xlat
daa
pop
test
testl
int
add
orb
call
aam
ljmp
fsubp
loop
cmpsl
pop
mov
or
repnz
pusha
jo
push
sbb
sbb
mov
mov
lock
and
and
sbb
dec
in
loope
pop
jmp
pop
sub
sbb
fs
imul
insl
or
mov
daa
add
xor
xor
add
push
push
lret
pusha
outsb
sub
insb
out
in
cmp
ljmp
jns
sbb
lret
pop
out
adc
sbb
mov
cmp
cmp
pop
dec
lods
sbb
push
lret
out
ss
jne
lret
lret
cmp
punpckhbw
push
dec
frstor
shrb
loopne
push
cli
stos
lods
pop
fistpl
fcomps
push
add
mov
ds
add
call
cmp
sbb
lock
stc
jmp
xor
xor
mov
cmp
or
cs
add
js
rol
test
or
mov
inc
inc
in
mov
hlt
mov
cmp
shr
adc
loope
push
cmp
dec
dec
xchg
xor
ds
test
sub
add
push
jae
push
mov
sub
lahf
add
xorb
sbb
pop
lock
or
scas
or
mov
dec
xor
shrl
adc
es
jmp
or
sub
pop
sbb
arpl
or
inc
lods
or
mov
loope
push
fidivrl
mov
enter
dec
xchg
test
lea
fs
and
or
jp
adc
xchg
cmpsb
movsl
mov
sub
sbb
ds
enter
orl
leave
les
ljmp
sbb
push
xchg
or
lock
add
mov
ret
lock
jl
movb
jne
stos
and
mov
push
xchg
mov
lods
or
pop
pop
popf
xchg
sarb
pop
shlb
add
insl
lods
jmp
movsb
lock
jne
xor
dec
outsb
lock
sarb
push
lea
rclb
dec
mov
add
pop
lea
and
jmp
stos
xchg
push
or
push
add
push
ret
mov
xchg
fcmovbe
shlb
insb
mov
sbb
fidivl
nop
or
add
jb
pop
or
xor
add
ret
pop
cmp
sarb
dec
xchg
push
pop
and
lods
rclb
test
pop
jmp
adc
and
loope
ljmp
inc
jo
fimull
pusha
test
stos
sub
out
addr16
mov
push
scas
loope
jmp
loopne
cmpsl
xchg
loope
aad
mov
cmp
mov
sbb
gs
cmp
push
ret
add
add
xchg
fistpl
ljmpw
or
inc
pop
add
xchg
fsubp
sub
push
push
stc
pop
movl
adc
push
xchg
loopne
loope
pop
inc
xor
cli
dec
or
orl
dec
xchg
mov
dec
cmp
xlat
push
lcall
inc
sbb
std
jecxz
dec
pop
sub
dec
imul
mov
push
jo
adc
add
test
int3
push
cld
enter
xchg
mov
sbb
movsl
or
imul
sbb
xor
add
shl
dec
insl
inc
movsb
pop
mov
push
cli
pop
push
mov
movsl
cwtl
jle
outsb
sbb
or
stc
adc
xchg
mov
std
push
ffreep
push
ss
lret
into
cmp
or
pop
add
gs
push
pop
cmpsl
dec
pop
or
sbb
fisubs
push
popa
hlt
mov
rorl
mov
xor
cmp
ret
inc
fldcw
dec
push
cltd
cmp
in
mov
adc
ror
push
mov
cmp
dec
pop
pop
adc
jecxz
xor
mov
push
and
inc
and
jp
pop
pushf
stos
add
outsl
push
push
jge
cmp
adc
movsl
cli
sub
lds
roll
fmuls
push
lret
inc
pop
std
shlb
out
push
push
popa
xchg
repz
and
loopne
xor
jbe
inc
push
into
icebp
inc
repz
pop
cmp
inc
and
mov
push
or
addl
pop
cmc
mov
mov
inc
pop
les
mov
push
mov
push
out
xlat
or
pop
mov
adc
xchg
adc
mov
aad
pop
leave
push
cli
push
fwait
push
negb
cld
inc
adc
dec
xor
lock
jmp
ljmp
jb
out
mul
stc
rcrl
sbb
sbbl
sbb
push
rcrb
xchg
rorl
mov
icebp
imul
lds
and
jle
mov
push
lock
cmpsb
or
ret
sub
sbb
cmpsb
fstl
enter
in
mov
xlat
sub
push
jge
rcrl
movsl
stos
aad
dec
cmpsl
pusha
pop
mov
and
dec
add
push
loope
stos
and
subb
push
scas
cmp
adc
stos
jb
inc
or
push
pop
inc
mov
xor
addb
adc
sbbb
fdivrl
mov
push
and
cs
int
lock
imul
adc
dec
leave
stos
mov
push
pop
sub
sbb
jecxz
cmp
push
mov
pop
add
mov
sub
pop
cld
sub
jb
jecxz
and
addb
or
pop
jne
insb
mov
or
push
dec
adc
pop
inc
xor
mov
out
cmp
add
loop
imul
nop
and
pop
jns
push
add
add
add
dec
popf
rcll
inc
lret
inc
push
jp
rorb
movsl
cli
imul
dec
enter
imul
sbb
or
testb
cmp
add
incl
or
bnd
ret
dec
mov
push
and
jp
sbb
stos
jnp
mulb
jae
cmpsl
aad
xchg
mov
pop
cmpl
inc
or
pusha
jp
sbb
push
cmp
adc
pop
adc
inc
mov
int3
cmp
mov
clc
lcall
pop
fcoml
cmp
lods
lods
mov
imul
rcr
scas
bound
cltd
sub
loope
xor
push
mov
enter
add
add
mov
popf
stos
cmp
mov
and
fucomi
fs
test
mov
rorb
cmp
in
lods
cmp
outsb
push
and
or
leave
adc
fidivl
insb
popa
push
jmp
in
test
mov
mov
push
scas
push
fisttpll
xor
call
pop
mov
adc
ljmp
subb
pop
dec
js
pusha
push
orb
mov
or
sbb
cmp
push
and
rcl
out
into
or
pop
push
xlat
aas
test
mov
lret
add
mov
data16
or
pop
xor
mov
or
lods
pop
jp
mov
adc
mov
lcall
imul
sub
pop
and
mov
testb
mov
je
dec
ret
sub
sub
sub
xor
into
imul
sbb
dec
sbb
out
scas
cmp
addb
mov
xchg
adc
cmp
subb
or
mov
mov
cs
or
sbb
and
push
stos
shll
ljmp
pop
lock
pop
scas
push
inc
cwtl
lret
outsb
mov
xchg
or
into
scas
aad
test
test
lahf
push
push
sbb
xor
or
push
inc
adc
sub
loope
or
gs
aaa
inc
mov
pop
adc
rclb
out
adc
add
jecxz
push
jl
ret
mov
jb
clc
sub
xorl
sbbl
inc
xchg
and
mov
test
add
mov
movsl
dec
iret
call
lods
clc
shrb
sub
mov
out
inc
cmp
leave
add
dec
notb
jge
jb
arpl
fldenv
int
sbb
and
stc
sbb
call
ret
lcall
mov
adc
addb
leave
test
jne
rclb
or
mov
aaa
fcoms
rolb
into
pop
cmp
test
jp
cli
stos
sbb
stos
add
testl
and
sbb
push
push
mov
and
lahf
rorb
in
pop
ja
push
arpl
pusha
pop
imulb
jge
jb
and
mov
sub
or
push
adc
loopne
sbb
adc
pop
insl
idivb
push
inc
imul
mov
pop
mov
push
cmp
loop
stos
mov
pop
mov
jo
lahf
imulb
mov
or
jnp
mov
lret
lods
fisubrl
adc
sbb
push
lds
adc
sbb
inc
in
stos
xor
test
sahf
push
or
rclb
inc
lret
add
mov
mov
or
stc
add
lret
ret
adc
scas
push
pop
insl
or
out
fldt
subb
mov
gs
out
jl
into
inc
push
mov
dec
mov
mov
rolb
sub
jno
icebp
inc
and
inc
repnz
inc
test
push
or
and
stos
mov
push
rcrl
mov
das
xchg
or
cmp
testl
xor
repnz
fcom
adc
imul
movb
push
jnp
mov
out
push
jecxz
loop
sbb
and
repnz
rorb
rcl
out
inc
xchg
adc
pop
in
dec
insl
orb
adc
pop
sbb
icebp
ljmp
roll
scas
arpl
inc
sar
add
call
mov
sbb
and
jne
push
sbbl
rcrb
push
cwtl
rcrb
enter
adc
stc
mov
mov
mov
scas
push
pushf
dec
shr
sub
jl
lret
push
scas
push
je
in
cmp
add
out
scas
dec
mov
xchg
mov
cmp
pop
sar
pop
pop
push
add
mov
mov
fwait
inc
sub
pop
jmp
repz
int3
mov
movsl
push
jno
sbb
lods
xor
push
in
stos
or
xor
or
push
or
or
sub
jo
sub
mov
test
pop
cmp
test
loop
jnp
ret
shrl
mov
mov
pop
movsb
test
sbb
mov
test
enter
pop
rorl
mov
push
or
mov
mov
es
or
scas
mov
mov
mov
out
mov
loopne
clc
shrl
sbbl
dec
cmp
repnz
inc
aas
pop
pop
sub
xor
ret
cmc
mov
jae
mov
cs
push
aas
sub
or
es
inc
xchg
adcb
pop
das
jp
mov
icebp
gs
sbb
addr16
adc
sub
lahf
dec
push
jb
sbb
jp
and
inc
adcl
into
shll
insb
test
cmpsb
das
mov
add
or
add
cld
mov
sub
jmp
mov
dec
dec
mov
dec
sub
std
mov
dec
and
add
or
xchg
mov
ss
bound
cmp
shl
stos
push
pusha
aaa
xchg
mov
stc
xchg
adc
xor
ret
sub
add
fwait
adc
adc
add
jb
inc
scas
mov
aam
adc
pop
gs
adc
add
push
cmp
dec
ds
lahf
push
pop
lcall
sbb
mov
into
or
push
pop
lcall
xchg
rclb
mov
jmp
es
adc
gs
xchg
into
inc
adc
imul
mov
mov
je
call
push
sub
add
or
arpl
pop
hlt
rclb
and
adc
je
mov
fsts
fwait
rcll
shlb
lock
dec
insl
es
adc
inc
adc
push
add
xor
es
adc
cltd
call
xor
sahf
iret
sbb
negb
loop
and
and
rclb
dec
in
inc
pop
ljmp
data16
inc
imul
cmp
adc
or
loopne
call
mov
add
mov
sub
mov
sbb
or
loopne
pusha
cmp
push
or
out
test
sub
loopne
or
push
push
mov
es
xor
mov
add
sbb
mov
cmp
fbstp
xlat
pop
in
add
mov
add
stc
or
testb
scas
leave
and
xchg
jno
test
push
jp
add
mov
mov
add
in
test
push
mov
pop
jl
or
rcl
ja
push
andb
in
sbb
jbe
les
xor
add
les
imulb
jae
or
xchg
sbb
push
pop
iret
into
shlb
mov
sbb
imul
pop
cmp
sbb
gs
shll
add
add
add
pop
fsub
jb
sbb
and
mov
pusha
aad
les
mov
push
in
test
incb
outsl
dec
or
mov
dec
or
or
rclb
sbb
cs
ret
inc
sub
jg
orl
and
xor
fsubl
push
mov
or
xor
lahf
jg
inc
btc
mov
clc
sbb
iret
scas
ret
shll
rclb
gs
shll
sub
adcb
sub
test
pop
in
and
add
hlt
cwtl
in
bound
sub
and
and
jo
push
enter
rcrb
dec
div
pop
xchg
mov
cli
mov
and
repz
lret
pop
jle
adc
sub
rolb
insl
jg
mov
imul
or
ret
xchg
mov
cmp
push
pusha
std
sub
adc
mov
js
adc
call
sub
or
adc
or
adcl
leave
sar
icebp
ljmp
inc
out
cmpsl
xchg
pop
mov
adc
mov
bound
mov
movsl
add
cmp
xlat
jge
movsb
movsl
ret
mov
testb
or
testl
lea
stos
xchg
and
jb
mov
jp
icebp
outsb
enter
push
loope
cmp
clc
dec
xchg
jo
push
jl
mov
dec
lock
inc
ret
in
jge
fidivrl
jge
mov
je
movsl
call
sub
sub
scas
imul
sbb
fiaddl
mov
lods
push
lret
and
loope
push
shll
jle
pop
xlat
rcrb
pop
or
js
jg
mov
mov
aam
xlat
inc
lock
ljmp
cwtl
push
idiv
adc
into
pop
loopne
push
mov
mov
ss
and
mov
sbb
dec
inc
stos
mov
inc
sub
scas
push
lods
or
jle
push
xor
mov
pop
jp
pop
leave
push
sbb
push
iret
test
ret
pop
or
push
push
orl
inc
mov
stc
aam
nop
mov
xorl
add
je
pop
shlb
sub
cmp
clc
mov
dec
xchg
push
icebp
mov
incb
insb
fildll
pushf
mov
adc
xchg
mov
rorl
push
sub
dec
mov
aad
push
lret
inc
push
and
leave
sbb
push
add
rolb
adc
mov
and
xor
movsb
xchg
add
push
dec
sbb
add
or
pop
mov
stos
stos
jmp
inc
pop
mov
adc
shlb
or
dec
add
add
xchg
sbb
jne
fisubrl
xchg
push
daa
and
sahf
xor
push
pop
and
mov
mov
fnstenv
cld
pop
push
xor
pop
add
xchg
add
stc
cmpsl
shlb
mov
test
jb
daa
or
incb
loopne
push
xor
ja
inc
pusha
lret
in
sti
or
or
dec
leave
push
sbb
lret
dec
cs
enter
movb
push
push
inc
push
je
push
mov
ret
pusha
push
xor
mov
mov
push
sbb
cmp
das
jbe
lods
ljmp
or
in
das
pop
sub
bound
rcrb
fwait
xor
out
inc
sbb
out
add
lods
fwait
das
pushf
adc
push
push
pop
je
mov
aad
mov
xchg
mov
xor
punpckhwd
inc
xor
sbb
es
pop
sub
pop
lds
inc
sub
push
leave
adc
mov
rcrl
daa
pushf
adc
ljmp
fistpll
mov
mov
pop
cmp
test
loop
add
test
shll
mov
mov
or
sub
nop
xchg
push
aaa
cmpb
push
xchg
mov
dec
std
mov
or
out
add
xor
test
shll
sbb
out
outsl
and
push
dec
inc
test
ss
sub
xor
cmpsb
mov
es
fdivrl
in
in
cmp
js
rorl
fstps
cli
pop
sub
xor
pusha
rolb
repz
fld
test
cltd
mov
dec
and
movsb
icebp
mov
aam
imul
and
scas
inc
daa
inc
fists
adc
mov
or
adc
shlb
xor
inc
push
dec
orb
push
sbb
or
or
push
ret
mov
push
ljmp
pop
adc
mov
movhps
rcl
repnz
sub
or
push
sub
pop
clc
jo
lret
mov
cmp
rolb
sub
hlt
and
mov
xchg
add
mov
or
inc
mov
push
in
sub
sarb
jl
rol
icebp
testb
lods
cltd
mov
add
push
inc
push
aad
or
jno
pop
add
or
stos
mov
cltd
dec
adc
sbb
sbb
cmc
test
test
sbb
push
addb
ret
push
orl
xor
push
andb
jo
push
pop
fsubs
shl
push
aas
test
and
adc
pop
fs
stos
sbb
inc
leave
cltd
xchg
mov
push
cwtl
sbb
adc
jmp
mov
push
xchg
fists
es
and
stos
int3
jne
mov
outsb
push
push
sub
push
frstor
pop
roll
in
cwtl
pop
push
and
ret
jo
jo
sarl
inc
pop
jb
sub
gs
in
imul
in
mov
push
scas
push
pop
mov
mov
push
add
add
lea
jmp
lcall
inc
mov
cmp
push
sbb
and
inc
leave
inc
shl
xor
cmp
pop
fs
sbb
mov
sbb
ds
cmp
add
mov
inc
or
fwait
xchg
inc
xor
adc
mov
out
shl
test
xor
jp
xor
rcll
lea
lcall
push
test
roll
mov
push
into
inc
or
test
push
pop
scas
xor
roll
mov
xchg
lcall
testb
scas
xchg
adc
bound
pop
paddusb
push
push
xchg
dec
inc
test
fxam
mov
mov
jns
punpckhbw
push
adc
xchg
dec
mov
loope
xor
lds
pop
sbb
push
subb
ret
xchg
pop
lds
push
push
jo
ret
cmp
enter
bound
xlat
lock
sarb
repnz
cmpsl
notb
dec
inc
imul
cld
jns
and
rolb
int3
sub
into
xchg
adc
fs
leave
icebp
mov
add
adc
adc
lret
mov
push
dec
scas
fcom
mov
add
loope
xor
data16
roll
rcl
or
mov
shr
enter
cmc
xchg
stc
sti
and
and
into
shl
in
aad
std
mov
ret
add
lret
pop
shll
es
in
lret
jbe
sbb
inc
das
iret
loope
mov
dec
pop
xor
in
xor
js
inc
mov
das
push
xchg
cmp
mov
dec
int
push
mov
jb
rclb
cmp
jne
adc
jb
push
mov
test
bnd
add
mov
sub
sub
adc
shl
sahf
xchg
jl
pop
nop
stc
fadd
and
push
ret
sahf
push
or
add
xlat
push
xor
adc
cmp
add
adc
push
rorl
test
xor
cmp
sti
movsl
ja
mov
das
cmpsb
rorb
rcll
mov
pop
in
adc
push
pop
cmp
push
mov
cwtl
pop
cmp
add
sub
xchg
in
sub
mov
jmp
hlt
push
je
rcrl
sti
outsb
dec
adc
aad
in
add
xor
xor
push
and
or
push
push
xor
js
and
mov
ja
lea
sbb
cmp
push
loope
sub
xor
cmc
andb
and
mov
sbb
ss
rorl
or
mov
mov
addb
jo
cmp
ljmp
pop
mov
lods
jne
add
orb
sub
dec
shrl
bound
pop
pop
or
inc
cmp
ret
cwtl
sub
adc
lcall
adc
aad
dec
mov
or
das
jo
or
mov
xchg
inc
jg
out
cmp
push
pop
sub
call
lret
mov
sub
and
je
je
loope
inc
mov
cmpsb
shl
inc
add
inc
ficompl
mov
sbb
lea
call
pop
push
aam
leave
sbb
mov
dec
lcall
inc
stos
sbb
pop
sub
xchg
add
in
je
ja
sahf
rclb
in
mov
xor
jno
sbb
stos
sbb
cmp
cmp
or
sbb
pop
sbb
or
push
cmp
mov
inc
cmpsl
xlat
sub
push
mov
imul
xchg
mov
aad
testl
in
movb
rcl
sbb
enter
mov
or
mov
pop
sbb
imul
scas
ds
pop
mov
and
jmp
ljmp
push
pop
in
sbb
cli
or
test
loope,pt
cmpl
pop
push
sub
inc
test
dec
jp
cld
or
lea
mov
and
adc
pop
loope
sbb
cmpsl
add
adc
psubsw
ror
inc
pop
data16
push
add
and
mov
fs
push
lret
cmp
lods
popf
jg
adc
mov
xor
push
sbb
inc
out
sahf
push
xor
movsb
adc
aaa
enter
xchg
inc
push
cmp
lcall
loope
push
push
xor
insb
pop
and
push
int
add
sbb
rcrb
mov
add
jmp
test
negb
add
in
lock
push
lcall
mov
js
push
cmp
mov
xor
ret
push
jo
cmpsb
mov
arpl
sbb
pop
scas
rcrb
iret
pop
ret
mov
fisubl
xlat
repnz
cmpsb
inc
mov
cmp
mov
add
pop
ret
mov
sbb
hlt
loopne
ror
cmc
sbb
lds
or
adc
sti
sbb
out
xchg
push
and
adc
push
sbb
mov
orb
test
pusha
test
or
inc
mov
lret
in
sub
or
jbe
rorl
mov
scas
gs
insb
push
ror
add
mov
lahf
mov
add
and
jo
lea
fstl
std
push
lret
jle
mov
inc
aaa
pop
movsl
pop
push
lds
test
subb
in
pop
rcll
push
mov
ret
xlat
cmp
push
adc
xchg
sbb
cwtl
sub
add
loop
je
jno
add
loop
cld
add
rclb
sahf
ret
test
imul
into
stc
push
int3
and
bound
mov
pop
inc
push
push
aas
cli
sti
add
stos
add
mov
fs
push
xchg
ror
pop
sbb
test
sbbl
mov
add
dec
test
and
inc
mov
call
jo
in
push
jne
pop
sub
rolb
cmovge
dec
mov
adc
stos
pop
subb
loope
jb
push
lcall
add
sbb
aad
xor
mov
cltd
pop
jmp
loopne
pop
sub
call
xor
jo
mov
lret
jae
mov
divb
mov
mov
in
push
out
pop
xor
jo
and
cmp
adc
stos
pop
or
leave
jp
sbb
add
inc
add
push
dec
stc
and
int3
imul
stos
popa
adc
dec
aam
dec
testb
xor
jne
add
xlat
xchg
subb
cmovo
cli
insl
push
aam
xor
fcomps
jnp
or
sub
mov
pop
mov
cmp
mov
rorb
imul
call
dec
or
push
test
insl
cwtl
and
js
lcall
and
shrb
fisubrl
out
ret
add
stos
push
xor
outsb
adc
xchg
dec
pop
jmp
or
push
push
in
inc
cs
ficompl
sbb
cld
adc
cmp
sub
mov
dec
rol
fdivl
mov
mov
loopne
shr
push
sbb
and
mov
xchg
ret
add
mov
push
sub
xchg
sbb
push
dec
ljmp
out
dec
rcl
adc
cwtl
pop
pop
push
adc
add
aad
fcmovnbe
rcrl
daa
mov
rcrl
adc
cmc
mov
ljmp
stos
data16
push
shl
out
xorl
aad
adc
pop
cs
cmpsl
js
add
sbb
add
cltd
xchg
andl
mov
arpl
stos
pop
mov
mov
mov
jl
icebp
das
adc
stc
push
push
xchg
scas
sub
xor
pop
jge
aad
pop
fwait
sarl
icebp
testb
aas
leave
dec
in
add
stos
push
pop
and
push
or
push
sub
in
cmpb
push
adc
or
sbb
cmp
scas
sti
int3
push
adc
add
rolb
xor
outsl
imull
cwtl
jo
dec
ret
cli
inc
mov
mov
xchg
push
test
inc
sarl
mov
scas
adc
cld
mov
add
and
outsb
jge
inc
lods
leave
add
bound
jne
les
sub
push
or
and
test
ret
test
sbb
daa
or
push
lods
and
cwtl
ja
sbb
scas
cli
fidivs
xchg
mov
or
sbb
pop
add
inc
shrl
push
sub
xchg
movsl
ret
add
adc
push
sbb
into
adc
push
add
mov
and
push
inc
pop
sbb
push
lock
add
push
pop
sarl
or
sbbl
sub
sub
pop
out
hlt
inc
adc
push
sub
sub
ljmp
cmp
push
subps
push
cltd
cmp
and
or
shl
inc
mov
shlb
and
enter
inc
jecxz
cmp
and
loopne
push
and
add
cmpl
cltd
xor
jbe
or
dec
jmp
sbb
mov
andb
dec
mov
aam
xchg
fcmovb
adc
add
mov
stos
push
or
add
adc
scas
inc
or
add
sbb
xchg
push
add
push
mov
stc
push
adc
nop
pop
jne
sbb
adc
adc
sahf
adc
lods
lea
icebp
push
and
subb
test
push
mov
insb
dec
sub
rcrb
xchg
gs
mov
xchg
mov
aad
push
inc
adc
lret
inc
sbbl
add
int
jp
fidivrl
rorb
into
push
push
add
push
xorl
icebp
push
cmp
jne
mov
fisubl
in
sarb
pop
sub
adc
je
push
mov
out
call
shrb
and
or
dec
adc
cmp
inc
lods
mov
jge
cbtw
stos
cs
dec
popf
loopne
cmp
push
loop
mov
insb
add
cmp
push
cmpsl
adc
jmp
je
cmp
dec
mov
jno
ret
int3
inc
mov
sti
movsl
into
pop
cs
hlt
lcall
xchg
fmull
jmp
pop
push
adc
out
aam
movsl
add
inc
lock
in
cmp
lea
adc
xor
and
pop
mov
loopne
subb
out
mov
inc
mov
jne
test
inc
and
cs
loop
sub
add
orb
or
jne
push
xlat
xor
fidivs
cmp
push
mov
adc
fs
cltd
inc
ret
ret
or
scas
dec
cmpsb
mov
lock
push
and
in
loope
cmp
pop
mov
pop
cli
xor
adc
adc
push
xor
shr
stos
lea
test
mov
jbe
push
sub
mov
mov
sub
mov
cltd
mov
ljmp
jg
ja
add
or
or
adc
adc
mov
into
push
sub
cmp
or
push
js
cltd
mov
es
and
pop
push
repnz
mov
ja
sub
cwtl
jne
adc
loop
mov
icebp
ret
mov
cmp
or
push
cmpsl
stos
push
scas
push
aad
cmp
clc
xor
shrb
pusha
rcrl
xor
or
dec
or
ror
insb
sbb
inc
stos
pop
push
sbb
scas
xor
stos
cmc
lock
mov
push
lahf
stos
stc
sbb
es
push
or
xchg
test
es
icebp
push
pop
xorl
pop
cmp
adc
std
xor
pop
mov
sub
pop
ljmp
in
jmp
cmp
mov
mull
mov
pop
addb
adc
sbb
mov
xchg
or
sbb
sub
inc
xor
dec
cltd
fstpl
jns
or
sub
sub
xchg
xchg
or
cmc
mov
rcl
jnp
inc
push
push
xchg
jle
add
jle
nop
sub
data16
pop
lods
sarl
pop
mov
mov
xor
in
sub
or
xchg
sbb
loop
shlb
rcll
fs
test
dec
push
jle
jmp
lock
sub
adc
int
push
jp
rol
mov
dec
adc
adc
dec
sbb
adc
xchg
stos
mov
pusha
jb
popa
lret
sti
test
inc
cmp
sbb
gs
dec
sbb
mov
add
ja
shll
rol
test
mov
loop
lods
insb
or
jae
jecxz
add
add
jge
or
mov
adc
sub
loope
sub
or
push
mov
lock
sbb
pusha
rol
or
push
adc
mov
jns
lea
mov
pop
aam
adc
lcall
mov
and
jge
aad
hlt
pop
mov
out
lret
or
and
push
repnz
fcmovnbe
rclb
add
scas
or
stc
fdivrl
aam
xlat
rclb
or
xor
mov
sbb
mov
inc
add
jo
sbb
pop
daa
push
cmp
rorb
mov
jne
es
loopne
sub
daa
scas
repz
mov
or
mov
lock
daa
pop
add
mov
cwtl
or
pushf
mov
mov
xor
push
test
sbb
add
sbb
rcll
push
push
adc
cwtl
xlat
add
sub
mov
or
sahf
push
pop
aad
inc
enter
out
mov
popa
jecxz
pop
sbb
xor
push
or
fdiv
jg
sub
xor
push
add
test
jnp
jae
jne
adc
push
subl
sbb
dec
outsb
sti
daa
dec
pop
aam
inc
jl
arpl
rolb
jo
push
xor
test
adc
lock
popa
addb
add
adc
push
cmp
inc
sbb
fwait
ret
mov
negb
mov
mov
push
cmp
mov
and
xchg
rol
push
mov
das
and
in
sub
mov
jp
arpl
mov
inc
daa
mov
ljmp
scas
jp
add
scas
dec
mov
jmp
push
and
cmp
pop
xchg
mov
push
stos
pusha
xor
nopl
sbb
pop
mov
jecxz
mov
ret
dec
imul
rcr
push
sub
jb
dec
add
dec
shrb
mov
ja
xchg
push
dec
sub
movl
dec
mov
adc
xchg
stos
inc
dec
repnz
into
mov
and
mov
mov
adc
xor
add
pusha
lods
leave
dec
ret
rorl
jbe
sbbl
sbb
js
cmp
sbb
lods
mov
xor
mov
push
push
cli
inc
push
add
sbbb
adc
add
add
mov
cmp
adc
cwtl
cs
cmp
jnp
scas
sub
mov
test
jmp
or
sbb
inc
mov
cwtl
les
cmc
or
dec
shr
and
dec
out
cmp
mov
mov
mov
jmp
cwtl
sbb
pop
mov
adc
stos
mov
jno
lret
lcall
cwtl
int
or
or
adc
adc
sbb
lock
pop
lods
xor
add
out
adc
or
jb
or
or
mov
push
and
or
cmp
xchg
add
loopne
aam
sbb
xlat
loop
cltd
xchg
repz
rclb
pop
push
jb
and
mov
xchg
stc
dec
cs
lock
in
push
out
pop
test
or
and
cmp
and
leave
xor
mov
xchg
cld
inc
sarl
pop
sbbb
add
hlt
or
or
insb
mov
adc
sti
stos
adc
call
stos
xchg
add
subb
xchg
mov
pop
fiaddl
push
cmp
add
inc
xchg
push
sub
jecxz
lea
insl
xchg
mov
stos
and
push
jb
dec
imul
gs
cwtl
adc
or
inc
inc
mov
lahf
scas
push
pop
or
adc
lcall
loopne
aaa
xchg
mov
test
pop
popa
ss
cwtl
or
push
lcall
addb
insb
cmc
mov
xchg
mov
mov
jno
add
les
add
sub
out
push
ljmp
std
xchg
mov
cmp
push
repz
fistl
push
loopne
ds
rcll
cmp
mov
and
stos
pop
stc
sub
pop
pop
push
jbe
push
sbb
fwait
lea
add
push
push
xchg
inc
je
and
out
rclb
daa
dec
push
mov
out
push
cmp
push
inc
mov
pop
push
outsb
dec
xor
or
xchg
adc
test
jo
aam
jns
outsl
add
int3
add
adc
add
pop
inc
mov
or
aad
sbb
xchg
aaa
and
cmp
xchg
sub
mov
add
add
ret
sbb
sbb
adc
sub
adc
jbe
adc
or
outsb
icebp
loope
cmp
scas
or
add
dec
xor
enter
xchg
inc
xchg
cmc
inc
icebp
fs
or
shrb
subb
adc
ss
repnz
mov
sbb
sbb
test
add
and
fwait
ret
xchg
js
inc
and
or
dec
in
pushl
stos
add
and
push
push
nop
or
xchg
sub
xor
lret
add
insb
adc
xchg
pop
in
clc
push
push
imul
pop
jno
loop
scas
pop
test
fwait
push
adc
adc
nop
icebp
in
pop
rorl
push
and
outsb
arpl
xchg
ds
loope
loopne,pn
adc
fcoms
mov
imul
add
mov
cmp
cmpsb
sub
cltd
push
push
xchg
push
sbb
aam
adc
lods
add
and
into
fstpl
test
mov
lds
push
push
adc
pop
mov
add
mov
jmp
cmpsl
adc
out
push
cpuid
sub
rorl
sbb
mov
inc
jmp
xchg
stos
mov
adc
sub
add
pop
push
push
lcall
push
inc
sbb
xchg
gs
inc
icebp
xchg
sbb
lret
popa
or
pop
sbb
cmpsb
mov
pop
mov
clc
aaa
push
cltd
stos
insb
int
jle
jo
adc
pop
xor
mov
loopne
jecxz
jmp
xchg
loop
stc
adc
xor
mov
addl
sbb
hlt
push
xor
lock
rolb
push
into
shll
subb
and
shl
cli
popa
sbb
ret
or
mov
mov
dec
push
call
arpl
call
orb
cmp
xchg
dec
sbb
icebp
mov
out
sbb
mov
pop
das
push
mov
pusha
call
add
mov
addl
push
lret
mov
or
mov
mov
sbb
jb
or
sbb
mov
pusha
lods
enter
icebp
xor
inc
jmp
adc
sahf
cltd
pop
inc
xchg
cmpsl
adc
shlb
enter
test
sbb
inc
scas
orl
push
jno
sbb
mov
jmp
shll
adc
fistl
mov
xchg
push
dec
rcl
xor
xor
jne
and
jg
ret
adc
test
add
sub
inc
sbb
aam
popa
aad
sbb
adc
loop
lea
mov
leave
sti
shll
adc
push
mov
mov
add
xchg
push
popa
leave
lds
sub
ja
lea
mov
push
incb
mov
push
lods
mov
lock
das
push
xor
test
or
jb
add
mov
stc
pop
mov
jbe
sub
pusha
pop
jbe
mov
mov
xlat
push
mov
addb
adc
ret
repnz
push
add
sbbb
psubb
push
in
push
lcall
xadd
adc
andb
inc
cmp
mov
adc
mov
loopne
clc
enter
test
cmp
jg
push
mov
push
mov
int3
andb
adc
scas
andb
sti
xchg
test
movsb
push
push
inc
ljmp
sbbl
ret
loopne
mov
test
lcall
std
pop
cmovo
push
leave
push
adc
mov
push
insl
sbb
sbb
pop
xlat
iret
rdpmc
sub
loope
fldl
ljmp
lock
inc
lcall
inc
shrl
or
mov
dec
test
jp
and
sbb
adc
mov
lret
inc
xchg
or
mov
sub
push
add
ret
pop
inc
js
add
mov
es
popa
push
dec
push
push
sub
inc
js
xchg
into
pop
es
mov
jb
push
adc
adc
sbb
dec
rclb
idiv
sbb
and
or
rolb
pop
leave
test
sbb
aam
test
ret
xor
dec
fists
mov
dec
push
inc
mov
adc
add
mov
add
mov
add
pop
cmp
lods
add
pop
test
aaa
push
mov
bound
ret
pop
fs
jge
cli
int
adc
shr
stc
mov
sbb
dec
adc
aaa
test
dec
mov
xor
add
push
or
sbb
loop
test
sub
mov
test
push
push
les
arpl
lds
inc
bound
bound
data16
adc
and
loopne
xchg
data16
xor
sbb
sbb
and
cmp
add
pop
adc
ret
push
add
mov
inc
inc
sub
int3
rolb
out
andl
cmc
cmp
mov
rorl
xchg
fwait
aam
or
push
inc
sub
cmp
or
addl
ret
jo
addr16
jb
lock
inc
loopne
ror
ret
mov
cmp
inc
and
xchg
stos
outsb
sti
inc
test
subl
loopne
mov
push
mov
xor
or
sub
or
bound
rclb
or
inc
pop
push
jo
stos
lock
in
shrb
xchg
aam
fdivs
ret
aam
or
rclb
out
sbb
cmp
pop
insb
bound
push
jmp
mov
or
jbe
idiv
sbb
add
mov
cmp
popa
jb
sub
push
sbb
leave
decb
rolb
enter
pusha
lret
fstp
and
orl
fwait
or
add
inc
shl
andb
sbb
shl
jo
pop
mov
loopne
repz
xor
loope
xchg
mov
add
daa
dec
push
xchg
push
add
lock
insb
xchg
ror
cli
or
shll
adc
lods
add
leave
out
mov
lods
push
mov
push
fists
sbb
neg
call
lea
mov
add
fcoml
cmp
sbb
xchg
testl
out
addl
jp
or
addr16
or
call
push
loopne
push
jne
add
dec
shlb
ret
push
iret
xor
movb
cmp
or
adc
mov
push
loope
mov
adc
add
push
inc
xchg
dec
and
push
xor
ret
inc
cmpl
add
xchg
xor
jo
push
inc
cmp
insb
dec
or
mov
repnz
cs
and
rclb
xor
dec
in
and
add
xor
adc
jnp
call
adc
pop
call
cmpsb
call
pop
aam
sub
dec
test
push
adc
sub
xor
das
mov
loopne
or
add
dec
shl
jl
aad
add
ret
jl
add
enter
mov
xchg
loopne
call
out
lods
lds
cmc
adcb
shll
ret
push
sbb
test
roll
shll
or
pop
adc
sbb
inc
sarb
pusha
cmp
ficompl
and
add
or
int3
push
nop
icebp
pop
xchg
test
mov
stc
pop
lea
mov
jno
pop
sbb
and
lcall
add
or
int3
movsl
inc
ret
in
and
dec
aas
rolb
je
or
adc
into
test
lds
addl
add
das
stos
xor
mov
adc
mov
in
xor
dec
fiaddl
dec
inc
push
xor
nop
jmp
out
inc
lret
ficoml
or
mov
sbb
adc
test
test
xchg
add
sub
push
sbb
movsl
lahf
cmp
lcall
cltd
dec
sbb
adc
mov
xor
lret
xlat
cs
push
mov
cmp
push
push
inc
lods
adc
cmpsb
mov
push
lcall
lret
cmpb
ss
sarl
arpl
or
adc
push
dec
jno
mov
inc
rol
sbb
scas
push
inc
push
popa
push
push
dec
xchg
cmp
sub
mov
and
sysenter
test
adc
inc
rcrb
fcmovnbe
mov
xchg
test
mov
in
in
fidivs
ret
insb
fiaddl
dec
repnz
push
jp
stos
int
out
test
xchg
and
mov
inc
scas
orl
sub
sbbb
mov
bound
mov
add
popa
inc
xor
pop
cs
sar
lcall
test
and
stos
inc
mov
and
roll
enter
push
xchg
arpl
or
adc
mov
sbb
dec
or
pop
pop
adc
mov
push
flds
mov
divb
pop
cld
mov
nop
pop
xchg
sub
jbe
imul
imulb
xchg
add
mov
adc
sbb
les
cmp
mov
sbb
mov
xchg
add
ret
push
mov
or
in
xor
data16
inc
sub
lea
push
orb
add
add
push
in
pop
cmp
mov
inc
lods
adc
inc
adc
bound
getsec
and
inc
loope
pop
mov
xor
sbb
and
or
add
add
shrl
mov
dec
inc
je
ret
out
adc
pop
sub
xchg
mov
popa
jnp
daa
mov
repnz
add
call
scas
mov
sbb
mov
out
fs
dec
and
sahf
or
xor
es
cs
fistpl
xor
add
and
call
movsl
push
xchg
pop
push
dec
ret
inc
xchg
add
out
or
jg
mov
cwtl
shlb
add
add
adc
jmp
jb
and
push
mov
push
inc
xchg
mov
ret
add
iret
add
stc
loop
xor
add
jb
ss
add
inc
push
mov
sub
int3
rolb
push
rorb
mov
mov
dec
loopne
sbb
adc
out
outsl
imul
inc
ljmp
sti
mov
or
jnp
add
push
jle
stos
loope
push
mov
pop
dec
sub
add
int3
and
or
and
or
inc
sbb
loop
add
aaa
sub
adc
test
cmp
into
jle
or
je
mov
jp
add
dec
adc
sbb
insb
and
pop
stos
pop
fisubrl
push
addr16
adc
ss
aad
gs
cmp
add
fcoml
popf
cmp
les
iret
loop
pextrw
lcall
pop
mov
inc
test
sub
inc
and
push
adc
mov
mov
cwtl
and
out
call
rorb
add
sbb
cmp
add
popf
enter
push
or
stos
push
leave
push
adc
jb
je
ret
jne
aad
add
sbb
sbb
daa
je
hlt
test
sub
push
ret
clc
adc
mov
pop
pop
adc
mov
dec
incl
sbb
mov
inc
jno
negb
fmull
in
das
adc
mov
sbb
pop
ljmp
faddl
add
mov
fimull
and
pop
xor
je
ret
call
arpl
das
lahf
or
stos
cld
arpl
xor
cmp
sarl
dec
or
das
adc
add
inc
push
and
or
and
sub
dec
xor
sub
dec
shrb
popf
rcrl
rorb
cmp
push
pushf
sub
mov
push
scas
jo
xchg
lods
stos
stos
push
xchg
pop
pusha
cmp
xchg
imul
xor
add
cmpl
cmp
sub
push
push
popf
adc
mov
nop
sbb
int
adc
add
jb
lret
sbb
fidivl
test
add
add
in
inc
movsb
sbb
test
and
or
enter
mov
test
push
pop
xor
jbe
into
dec
xchg
inc
xor
fcompl
inc
pop
xchg
stos
xchg
test
popa
fcomps
mov
adc
or
push
xchg
cmp
add
scas
and
sbb
pop
lods
clc
sbb
pop
xchg
fcoms
jo
sbb
inc
stos
or
daa
jno
mov
mov
push
push
pop
cs
add
cmpsb
int
gs
lret
icebp
inc
xor
or
lret
sub
shr
jno
push
xor
mov
adc
cmp
sub
pop
sub
dec
push
sub
cmpsl
sub
repnz
shrl
mov
push
mov
and
sub
out
movsb
xor
dec
mov
cli
or
cmp
rol
inc
and
adc
adc
mov
inc
add
add
test
pop
hlt
mov
sub
je
ljmp
clc
xchg
mov
lea
dec
fbld
stos
sbb
aad
push
mov
les
aam
daa
sbb
mov
add
inc
mov
je
or
hlt
mov
or
mov
mov
and
jecxz
and
pushf
sbb
mov
add
out
xchg
mov
add
adc
loopne
loope
mov
shll
xor
mov
andb
rcll
fimull
push
repnz
into
rclb
xor
shll
pop
andb
call
inc
leave
mov
lods
push
mov
adcl
sbb
sarl
ja
fldl
sub
or
mov
add
inc
jno
and
jp,pn
js
xchg
cmp
mov
fcmovne
inc
adc
mov
in
add
lds
cld
or
mov
jno
push
or
inc
and
pusha
ljmp
and
pop
rolb
mov
cs
cmpsb
inc
adc
inc
daa
push
push
adc
push
enter
fcoml
inc
mov
cs
loope
jne
sub
xchg
jmp
jmp
lret
inc
mov
cmpsb
adc
mov
enter
shll
cmp
add
lret
pop
cmp
scas
pop
jle
fiaddl
xchg
icebp
gs
sbb
rolb
cltd
dec
scas
adc
pop
loopne
mov
adc
pop
rorl
add
xchg
inc
sbb
cmp
adc
jecxz
xchg
mov
push
xor
or
adc
leave
xor
insl
xor
sbb
rcl
push
cmpsl
inc
in
sub
addr16
push
mov
push
mov
push
out
or
shll
sub
and
push
sets
loopne
push
mov
insb
imul
test
mov
mov
jmp
testl
les
sbb
push
shl
leave
adc
xor
jmp
test
test
or
outsl
sbb
rcrl
insl
int3
mov
lea
in
in
cwtl
ds
or
adc
and
xorl
push
sbb
pop
out
mov
pop
xor
push
aad
push
out
pop
insb
push
aam
roll
cmp
call
lea
push
jecxz
dec
adcb
or
dec
outsl
lret
cmp
int
mov
in
adc
adc
and
flds
xor
push
jecxz
mov
jmp
mov
out
shl
push
pop
cmp
jns
repz
and
mov
mov
or
and
push
cwtl
movsl
bound
nop
cmp
sub
add
sbb
or
mov
sti
add
sbb
in
add
adc
pop
loope
test
add
push
enter
push
out
adc
inc
dec
add
mov
es
subb
pop
lods
cs
push
rorb
ret
adcl
gs
xor
into
sub
cmp
jo
inc
dec
cmpl
jmp
ljmp
inc
add
sub
or
xchg
mov
pop
mov
aaa
jne
add
or
into
std
mov
iret
xor
push
sbb
adc
push
inc
lods
rcrb
xor
and
push
stos
mov
and
insl
add
test
push
jecxz
pop
popf
lock
adc
inc
mov
loopne
push
xchg
subl
andb
int
sub
xchg
sub
xchg
or
xor
pop
mov
sbb
movsl
aam
icebp
and
or
mov
or
insb
shlb
or
stc
push
jecxz
push
dec
lds
addr16
and
mov
sti
pop
lods
or
adc
insl
int3
add
xor
orl
xchg
adc
mov
and
push
adc
and
aas
add
pop
adcb
xchg
lock
repnz
inc
les
imul
loopne
add
ret
sbb
movsb
stos
nop
mov
and
adc
mov
sbb
cmp
loop
scas
push
rclb
addl
add
lock
sub
inc
inc
and
imul
cmpsb
imul
mov
sbb
aas
idivb
int3
inc
xchg
pop
mov
xchg
sub
sub
and
popa
adc
pop
dec
mov
loopne
leave
add
test
inc
push
pop
sbb
cmp
xchg
inc
bndldx
loopne
sbbl
push
and
xchg
clc
or
sub
pop
jo
movl
enter
mov
mov
sti
push
inc
mov
adc
xor
fidivrs
add
push
adc
movsl
je
sub
or
push
push
das
sub
xor
out
leave
sbb
rol
mov
adc
or
cs
mov
fbstp
xorl
inc
mov
jmp
scas
xor
mov
push
pop
cli
ret
pop
test
dec
cmpsb
loope
sub
add
cmp
cmp
xlat
cmp
inc
andb
mov
mov
xchg
into
pop
xor
push
mov
xchg
clc
andl
push
les
push
or
scas
lock
mov
mov
pop
popa
ljmp
adc
dec
sbb
pop
push
mov
and
sbb
inc
stos
and
cmp
sbb
mov
cmp
gs
adc
push
inc
cmpb
ja
xor
add
adc
mov
shr
push
addl
mov
mov
push
cmp
mov
xchg
aaa
mov
test
or
cwtl
mov
xor
inc
call
sbb
pop
stc
push
sbb
cmp
pop
mov
jp
cmc
pop
stos
insl
or
sbb
cmp
or
or
jl
push
mov
cmp
sub
outsb
add
xchg
inc
inc
inc
push
sbb
push
xor
add
sbb
rorb
test
jo
pusha
mov
sarb
incl
jb
mov
data16
inc
rol
mov
cli
in
and
pop
mov
enter
xor
cs
repz
aam
shl
or
adc
faddl
mov
sarl
and
divb
ljmp
hlt
push
push
scas
enter
lahf
pop
inc
pop
sub
aas
loopne
pop
push
xchg
sub
je
jno
adc
ret
scas
jb
push
mov
test
stos
mov
test
insl
push
and
xchg
rcll
adc
add
addr16
add
popf
movsl
pop
inc
pop
fwait
ret
and
adc
rcrb
push
mov
flds
xchg
pop
push
cs
and
sub
mov
inc
or
mov
cmpb
pop
sub
lods
mov
mov
sub
xchg
ret
inc
adc
mov
mov
mov
dec
es
xor
xchg
add
lods
adc
rolb
or
mov
sbbb
enter
xchg
cmp
adc
les
sbb
push
or
in
dec
inc
mov
mov
movswl
cltd
stos
lcall
inc
mov
mov
pusha
pop
adc
mov
roll
fmuls
cmp
pop
sbb
jbe
ret
shlb
aaa
dec
out
adc
pop
fsubl
push
add
scas
and
or
inc
out
add
aaa
inc
mov
xor
inc
adc
xor
or
xor
bound
cmc
ds
pop
outsb
inc
cmc
pusha
cmpsl
in
jo
sub
xchg
fsubrs
xor
push
mov
lret
xchg
add
pop
xchg
jecxz
shr
mov
jns
adc
cli
test
pop
xor
cmpsl
push
out
pop
sub
mov
inc
adc
and
sub
dec
daa
adc
dec
call
incl
ja
jo
add
cmp
push
push
cmp
push
test
push
cmp
pop
add
inc
mov
stos
in
or
shll
movsb
movb
inc
dec
mov
lcall
out
push
inc
scas
or
test
xor
xor
add
fsubrl
mov
push
loop
push
or
inc
mov
testb
pop
mov
lret
sub
or
js
scas
movsl
lret
mov
push
adc
ss
jno
push
arpl
jne
roll
loopne
push
shl
inc
stos
mov
adc
jb
mov
aad
icebp
and
jb
fs
xchg
cmp
jo,pt
inc
adc
sarb
push
movsb
dec
dec
mov
mov
lods
push
cmp
les
sbb
push
ret
pop
push
cs
mov
repnz
push
xchg
add
icebp
mov
movsb
mov
push
lahf
add
hlt
shll
push
cmp
cli
xchg
add
add
in
inc
xchg
les
lcall
sbb
scas
pop
push
sbb
add
or
add
inc
inc
ret
inc
sub
bound
icebp
cld
lea
je
lea
xchg
inc
ret
cmp
cs
mov
jb
mov
push
cld
sbbl
cwtl
adc
inc
adc
add
outsb
adc
add
mov
test
adcb
cmp
shl
jmp
ret
pop
cmpl
push
jecxz
bound
add
scas
shlb
mov
mov
hlt
bound
and
or
mov
or
adc
mov
push
lea
xchg
inc
and
push
lcall
sbb
push
je
pushaw
push
andb
gs
xchg
add
rol
push
hlt
shrl
pop
adc
push
dec
dec
sahf
jo
lods
xor
adc
sbb
dec
into
sub
adc
add
test
jae
gs
cmpsl
xor
sbb
sub
push
mov
cmp
nop
test
movsb
repnz
sbb
test
dec
xchg
jo
adc
or
sub
adc
pop
push
push
fstl
push
fdivr
cmp
mov
mov
mov
or
pop
xlat
popf
nop
or
jae
push
pushf
dec
xchg
pop
ret
aad
or
test
bound
enter
pop
jle
stos
mov
jb
push
mov
jecxz
lods
or
imul
loopne
test
add
inc
gs
pop
lods
push
cmc
xchg
repnz
add
mov
jo
jae
push
fld
push
mov
popa
push
add
loope
add
leave
sub
add
pushf
test
mov
pop
cmc
mov
cmp
fs
sub
mov
mov
adc
cmc
imul
out
repz
cmpsb
mov
ds
es
mov
add
cmpsl
cmp
or
cwtl
sub
cmpb
or
sar
xor
push
shlb
adc
push
adc
ret
adc
xor
add
aad
cmp
sbb
test
adc
sbb
out
push
pusha
idivl
aam
sbb
pop
push
mov
mov
xchg
or
sub
cld
push
sbb
scas
or
mov
cmp
or
push
inc
mov
add
cwtl
add
lea
test
clc
aad
push
shll
lock
stos
dec
jo
xor
test
and
mov
adc
push
pop
jne
jb
mov
loop
scas
add
xlat
movsb
stos
test
icebp
lods
pop
test
lds
aam
and
subl
pop
inc
sub
jnp
push
or
in
pop
rclb
imul
cmp
mov
pusha
ljmp
mov
xchg
testl
test
push
xor
xlat
xor
inc
add
lods
mov
lret
shr
inc
imul
mov
xchg
mov
sbb
cmp
mov
mov
add
lods
mov
bound
enter
xchg
adc
xchg
mov
scas
das
call
rcll
cmp
sti
arpl
push
mov
add
inc
mov
sub
push
push
pop
test
and
or
mov
dec
orb
push
adc
add
dec
mov
dec
clc
sbb
shll
test
push
out
icebp
pop
jge
ljmp
iret
clc
cmp
add
or
test
lahf
mov
adc
inc
fmuls
fisubs
or
cmp
adc
mov
push
adc
add
jge
sahf
adc
pusha
nop
stos
test
and
mov
lock
enter
out
adc
push
jmp
stos
pushl
xchg
jno
sub
les
out
pop
xchg
lds
jo
xchg
sub
mov
inc
ljmp
cwtl
add
je
add
cmpsl
dec
adc
jmp
orb
push
cmc
orb
addb
jo
mov
dec
push
pop
data16
sub
mov
lahf
adc
mov
add
stos
push
xor
push
mov
add
and
popf
mov
dec
daa
push
mov
jb
pop
push
enter
jae
push
and
inc
xchg
inc
test
sub
mov
cmpsl
push
loopne
xchg
mov
jo
in
pop
hlt
mov
pop
subb
enter
mov
jne
lret
ret
xchg
arpl
fwait
xchg
pop
imul
sbb
rcrb
in
mov
push
push
mov
or
add
adc
mov
aad
xchg
arpl
ret
mov
push
mov
das
into
lods
xchg
push
push
movsl
push
jecxz
sbbl
inc
pop
clc
and
add
ret
mov
or
mov
cwtl
rolb
sbb
xor
rolb
or
sbb
inc
clc
rolb
sar
lret
cmpsl
call
xorl
lret
pop
fidivrl
pop
inc
inc
sbb
adc
mov
pop
mov
scas
mov
adc
aam
xlat
mov
std
das
adc
mov
pop
insb
or
sub
stos
or
cmp
pop
pop
arpl
sbb
push
xor
icebp
aam
mov
add
mov
or
and
or
mov
mov
and
cmpsl
push
sbb
add
sbb
mov
xor
icebp
loop
lds
lea
mov
sbb
gs
and
push
adc
scas
fadds
dec
or
je
cmpsl
or
clc
fwait
xor
sbb
mov
orb
adc
pusha
add
dec
xchg
out
stc
dec
stos
test
mov
pop
leave
mov
lcall
add
subb
enter
inc
add
daa
and
dec
xor
and
gs
mov
inc
add
add
lea
ret
add
push
arpl
lock
cmp
lods
sbb
les
push
xor
inc
test
es
mov
fbld
mov
push
mov
scas
rcrb
add
dec
mov
xlat
add
dec
addr16
sbb
mov
loopne
mov
hlt
mov
mov
inc
jb
push
cmp
stos
or
mov
ret
and
mov
fs
stc
pop
sbb
orb
adc
int
mov
and
add
nop
imul
fsts
cmp
push
sbb
in
sub
or
inc
js
adc
cmp
cwtl
or
push
addb
mov
or
xor
jl
or
cmp
movsb
adc
push
cmp
mov
shrl
mov
xor
add
rclb
inc
mov
xchg
rolb
adc
popf
loope
test
push
aam
mov
adc
inc
or
adc
aaa
das
dec
leave
lret
push
mov
ss
fimuls
sahf
push
sub
movsb
fldl
dec
adc
out
shrb
xchg
dec
xor
test
in
pop
sbbb
xchg
adc
mov
sbb
add
jo
mov
pop
cwtl
add
bound
sub
stos
jb
and
mov
mov
sbb
mov
and
push
loopne
pop
popf
jo
mov
adc
movsb
pop
and
xchg
in
sub
cwtl
inc
out
loopne
jmp
jne
shll
adc
andl
adc
sub
sbb
sbb
or
inc
or
shll
lret
out
lods
mov
mov
push
adc
aad
pop
out
xor
push
push
js
sbb
in
inc
leave
add
sbb
not
movsb
sbb
imul
orb
push
or
push
nop
aaa
dec
mov
jmp
dec
pop
and
jge
cmp
movsb
push
hlt
rcll
push
mov
inc
stos
jo
loope
dec
sub
pop
pusha
test
inc
or
xor
mov
rol
mov
push
sub
xor
test
cmc
cmp
lds
fiadds
data16
xchg
lret
inc
sbb
lret
add
add
pop
sbb
shrl
clc
push
pusha
xchg
mov
cmp
pop
pop
add
inc
rcrl
pushf
mov
jne
and
enter
insb
inc
lods
add
or
in
sbb
mov
shlb
mov
nop
leave
add
test
popa
mov
add
roll
add
inc
sbb
push
push
add
push
pop
xchg
mov
test
shlb
or
jbe
mov
sub
cmpsb
and
repnz
inc
sbb
push
scas
into
xor
pop
je
adc
enter
add
or
cmp
mov
js
aad
test
testb
push
int
setbe
stos
aas
vpmuludq
ud1
adc
mov
inc
int3
push
or
xor
inc
cmpsl
adc
mov
or
cmp
les
push
and
xlat
and
test
pop
dec
xchg
test
addb
cltd
fists
xchg
mov
call
stos
jp
sbb
adc
add
pop
and
or
inc
roll
ret
lds
jo
push
pop
and
ss
cmp
mov
mov
jne
mov
sbb
jg
or
adc
mov
dec
sub
push
addl
jl
inc
roll
push
mov
dec
lods
pop
sbb
pop
fwait
pop
outsb
mov
dec
dec
cmc
imul
adc
inc
outsl
add
push
rcll
les
and
add
sub
xor
fcom
xlat
push
flds
jl
icebp
push
jbe
test
cmovnp
adcl
addl
pop
sbb
xor
inc
xor
in
sbb
add
add
mov
sbb
sbb
icebp
mov
sub
in
lret
sub
rcrb
push
add
addb
sub
out
mov
xorl
inc
insb
ret
cmc
add
push
aas
mov
scas
sbb
dec
into
imul
lods
add
call
sbb
mov
sub
fcmovu
push
or
push
or
lods
jecxz
or
mov
cmp
cwtl
pop
repnz
imul
push
aad
xchg
or
loop
mov
xor
sbb
inc
sbb
rcrl
in
push
movsl
aas
pop
lds
ret
shrb
into
loope
add
dec
fs
pop
lds
or
and
add
addr16
sbb
or
inc
cwtl
and
push
or
and
sub
insl
xor
sahf
gs
pop
xchg
sub
push
adcb
mov
loopne
or
call
stos
add
es
or
in
sub
cmp
sbb
fstpt
push
pop
clc
or
test
sbb
xchg
xchg
jno
jnp
push
mov
xor
and
out
mov
adc
bound
in
adc
aad
inc
xor
fidivrs
pop
adc
into
and
mov
adc
pop
icebp
addl
push
push
xchg
negl
adc
jnp
sbb
sbb
cmp
adc
push
insb
pop
adc
lea
xor
movsb
mov
adc
mov
push
into
add
sbb
addl
jno
sbb
add
dec
popa
mov
jmp
stos
popa
dec
or
cmp
jnp
loopne
jo
xor
xchg
ret
xor
sub
push
cmc
inc
in
loop
call
push
mov
aam
jo
pop
ja
push
imul
dec
pop
mov
push
xor
dec
mov
adc
adc
and
mov
pop
enter
xor
inc
ljmp
mov
xor
cmc
inc
cmpsb
sbb
sbb
mov
inc
adc
add
stos
sbb
push
mov
mov
sub
and
in
movsl
fistpll
call
mov
inc
sbb
fidivrl
into
jmp
cmp
mov
pop
jge
sbb
in
xchg
aad
loop
add
or
aas
out
xchg
sbb
es
into
sbb
add
mov
jecxz
and
sbb
dec
jl
mov
sbb
test
xor
add
mov
add
mov
or
inc
mov
xchg
sbb
or
mov
add
cmp
inc
sbb
icebp
aad
and
mov
test
popf
es
add
mov
aas
and
packsswb
push
rclb
add
aaa
xchg
adc
enter
in
xor
add
pop
inc
xchg
or
push
dec
or
push
pop
psllw
repz
dec
and
loop
jle
push
popa
push
xor
dec
aam
shrl
sarb
mov
adc
loopne
adc
pop
cmp
sbb
inc
add
clc
inc
mov
aas
or
inc
mov
mov
es
daa
lret
adc
shll
sbb
sbb
add
call
sbb
mov
xor
xor
cmp
xchg
jp
mov
imul
fcomps
into
sbb
pop
and
mov
mov
stos
outsl
add
andl
clc
lds
mov
cmpsb
push
dec
and
inc
inc
lods
and
stos
sbb
and
addr16
sbb
popf
adc
or
ljmp
or
out
arpl
dec
test
and
inc
mov
jne
or
clc
xchg
push
test
inc
or
and
inc
sbb
mov
inc
jae
sbb
xor
call
lahf
cmp
push
jno
add
sbb
popa
mov
addl
and
int
mov
pop
xchg
add
push
pushf
sub
and
jp
cmp
jae
mov
jbe
sub
shrl
mov
xlat
xlat
jge
adc
or
icebp
or
lock
aam
fists
add
rclb
pop
mov
cmp
mov
sbb
push
stos
and
mov
les
in
nop
jne
inc
mov
ret
add
mov
adc
push
sbb
mov
scas
ljmp
or
cwtl
mov
inc
or
fs
hlt
inc
jnp
cwtl
scas
je
aam
xor
rcrb
movl
xchg
sbb
push
add
xor
xchg
in
xor
dec
inc
push
jae
insb
jae
sbb
ss
shrl
and
aam
dec
sarl
shlb
pusha
ss
dec
adc
jnp
pusha
push
insl
movsb
mov
add
push
in
mov
cmp
and
or
xor
sbb
ret
int3
shrb
loope
sbb
cwtl
addb
adc
shrl
sbb
jp
cmp
push
mov
loopne
addr16
pop
push
xchg
sub
das
popa
adc
adc
inc
adc
push
add
and
push
mov
stos
mov
imul
adc
sbb
iret
lods
cmp
sbb
adc
movsb
sbb
stos
in
add
int3
ljmp
sbbl
push
jecxz
push
push
and
popf
and
sbb
scas
pop
adc
pop
and
addb
inc
cmp
leave
pop
fwait
push
inc
mov
add
and
or
ja
cmc
orb
jl
nop
js
mov
and
fbstp
sub
out
repnz
sbb
pop
sbb
cwtl
and
rorl
add
mov
or
lret
dec
push
cmp
sbb
add
adc
subl
sbb
jp
push
push
add
mov
jl
notb
or
orl
pop
popf
sarb
add
pop
xchg
inc
push
sbbb
shr
xor
icebp
sub
adc
and
push
push
gs
fld
rclb
xchg
xchg
and
jns
xor
push
or
dec
adc
stos
aam
mov
scas
add
sub
add
and
fadd
cmp
and
and
sub
adc
jo
sbb
ret
sbb
sbb
push
mov
lahf
fdiv
lcall
into
mov
mov
or
ret
movsb
sbb
xor
inc
push
lret
cmp
dec
pop
mov
jecxz
ret
bndmk
cmp
lods
dec
sub
and
int
add
ret
inc
pop
xlat
lods
dec
adc
mov
jo
xor
inc
cmp
ds
inc
mov
mov
bound
cwtl
sahf
mov
shrl
mov
xor
and
fldenv
xchg
leave
ljmp
lea
sub
enter
cmp
push
mov
inc
pop
outsb
loope
daa
or
inc
inc
in
mov
rorl
call
or
mov
es
dec
sub
sbb
sbbb
testb
or
pop
mov
add
test
inc
in
add
push
pop
mulb
xchg
orl
filds
push
pop
mov
add
or
jp
pop
test
sbb
inc
or
or
js
adc
sahf
add
mov
add
push
xor
push
and
jne
add
je
push
and
xchg
adc
data16
stos
inc
aad
inc
mov
pop
jecxz
fdivs
and
sbb
add
inc
sbb
fnstcw
sbb
xchg
rcrb
push
xchg
mov
cld
mov
in
push
ljmp
clc
ficoml
mov
xchg
xchg
popa
add
movsb
or
clc
mov
mov
push
sub
adc
push
adc
or
nop
add
mov
dec
inc
fistpl
rol
orl
xchg
xor
mov
push
cmp
sbb
push
mov
sbb
add
cmp
jne
cmp
sbb
inc
inc
movsb
pushf
pop
push
mov
sub
pop
aam
orb
icebp
adc
pop
enter
in
xchg
inc
xlat
mov
notb
out
icebp
imul
mov
push
mov
inc
pusha
mov
push
or
sub
xor
lea
ffreep
imul
insb
mov
lret
mov
fisubs
push
jae
or
xor
or
xor
adc
int
jp
xchg
push
sbb
sbb
jb
or
cmp
stos
dec
punpckhdq
xor
rorb
add
or
mov
dec
jl
dec
movsb
testb
mov
pop
lods
inc
movsl
dec
pop
inc
cmpsb
das
out
push
data16
add
push
xor
push
xchg
xor
and
sbb
push
pop
mov
sbb
fcomps
inc
inc
mov
dec
and
pusha
arpl
and
sbb
sbb
add
xchg
mov
cmp
into
sbb
popf
xchg
out
mov
clc
cmpb
push
mov
or
sub
inc
pop
andb
adc
ss
jae
or
sar
scas
jp
ret
sub
orb
jae
enter
xor
sbb
push
int
ret
cli
adc
ja
js
loopne
out
mov
call
mov
les
scas
sbb
test
test
mov
clc
sbb
test
addb
popf
scas
jo
ret
adcl
pusha
mov
scas
aaa
mov
push
aad
push
xor
jo
js
xorb
test
pop
sbbl
add
or
xchg
mov
and
xor
sub
cmp
sarb
clc
add
and
stos
push
ljmp
in
insb
sub
jle
stc
psubb
inc
mov
icebp
jmp
clc
mov
or
mov
or
or
pop
push
push
roll
push
jno
jle
adc
mov
adc
jne
pop
cmpsl
jne
or
in
fsubl
and
push
mov
outsb
les
rorb
aam
mov
or
add
sbb
xchg
and
add
push
sbb
adc
lcall
cmp
or
xchg
dec
mov
adc
ljmp
incb
ret
bound
in
fsubl
into
fisttpll
sbb
sbb
mov
adc
sbb
stos
pop
imul
lock
mov
add
lcall
rcl
or
roll
cmp
push
filds
push
ret
sbb
rcll
movsl
pusha
sbb
iret
adc
add
adc
in
ret
add
xor
movsl
add
jecxz
jp
adc
enter
in
sub
lds
ret
pop
or
push
in
mov
movsl
push
dec
shl
push
aad
out
and
mov
iret
nop
orb
icebp
addr16
pop
inc
sub
xchg
inc
addr16
aad
pop
pusha
xor
addr16
inc
movsl
lret
cmc
xchg
mov
lcall
add
or
bound
dec
inc
lcall
rcrb
pop
mov
mov
push
cmp
xor
les
out
pop
jb
pusha
cli
lcall
cmc
stos
sub
popa
adc
mov
xchg
cmp
aas
sti
clc
pusha
add
mov
or
cli
sbb
mov
pop
test
sbb
pop
add
lds
sub
outsl
shrl
ret
bswap
cld
inc
pop
jne
add
aaa
lret
adc
push
add
cli
and
push
loopne
inc
push
jb
lods
pop
rorb
mov
add
into
pop
cmp
jns
mov
xor
cmc
push
push
jnp
or
or
scas
pop
icebp
mov
gs
add
and
pop
icebp
add
mov
push
mov
push
sbb
lds
xchg
popf
jmp
in
movsb
sahf
jo
sbb
lahf
movsl
push
push
cmpsb
and
push
push
sub
sub
scas
pop
or
repz
outsb
mov
sbb
sbb
xor
les
and
or
fists
das
adc
push
jecxz
ret
adc
mov
push
test
xchg
cmp
push
dec
inc
adc
scas
call
sub
sub
aad
lret
push
and
push
push
xchg
sbb
in
add
sub
test
jp
imul
inc
cmp
in
enter
mov
stos
mov
sbb
sbb
lds
clc
ror
sub
xorl
xor
fsubs
pop
and
push
jmp
dec
push
mov
mov
in
shll
aam
mov
cmp
inc
ret
into
jno
movsl
and
addb
ret
push
push
cltd
and
jp
jge
adc
aam
mov
add
inc
mov
mov
rolb
pusha
xorl
fucomp
adc
pop
adc
pop
adc
dec
loopne
add
mov
or
push
or
sbb
add
cmpsl
out
adc
ret
shlb
sbb
push
mov
cmpsl
jl
inc
lods
pusha
ret
sbbb
dec
shrb
fbld
leave
adc
out
pop
adc
xor
dec
push
add
enter
icebp
imul
ret
xor
adc
mov
jmp
inc
sti
popa
xor
pop
shll
lret
mov
adc
pushf
test
adc
sub
cld
add
jmp
sbb
gs
add
negb
sub
add
loop
add
add
mov
int3
shl
dec
mov
dec
adc
push
shll
and
arpl
jb
add
add
push
lods
jo
jb
pusha
in
dec
loopne
or
jg
or
mov
or
xchg
dec
lea
sahf
mov
sub
cmp
leave
subl
data16
jnp
scas
cmpsb
ret
add
inc
push
hlt
lea
and
fldenv
loop
adc
xchg
cmp
icebp
inc
shrl
sub
push
aam
iret
leave
pusha
adc
call
popf
sub
adcb
lods
sbb
inc
sbb
push
sbb
loope
sarb
ljmp
shll
mov
dec
pop
or
imul
lds
push
rorb
or
push
pop
add
scas
cmp
hlt
fmuls
clc
add
jae
push
adc
jnp
adc
dec
adc
adc
adc
stos
icebp
mov
shll
sbb
add
add
mov
ss
add
and
nop
sub
fstl
shl
gs
pop
xchg
aad
or
lods
rol
mov
and
or
push
xor
mov
sub
leave
adc
inc
test
cwtl
cmp
inc
add
mov
aam
xor
jns
jne
pop
inc
sar
push
stc
test
cs
fdivrp
cmp
add
sub
sbbb
mov
test
add
push
xchg
sbb
inc
jo
cmp
outsl
inc
push
sub
shl
es
or
push
push
or
les
leave
xor
aad
or
mov
js
sbb
stos
bnd
cmp
xchg
pop
cmp
jo
insl
jle
add
add
dec
rolb
or
add
mov
adc
jmp
cmc
aad
adc
fadds
das
inc
loope
sbb
call
mov
mov
and
push
loop
sbb
push
jns
das
adc
or
aam
adc
pop
sbb
dec
ja
jo
lret
mov
andb
add
loopne
andl
push
adc
cmp
rolb
ret
das
xchg
pop
cmp
repnz
pop
or
inc
or
inc
shl
inc
div
lret
repnz
push
loopne
mov
add
loopne
cld
sbb
push
mov
cli
adc
fsqrt
rorb
lret
xchg
xor
add
loop
lods
std
push
into
inc
xor
pop
lods
addl
leave
jns
or
cmp
push
add
push
fmull
mov
ss
cs
lret
and
xchg
adc
into
mov
mov
adc
rol
push
cmp
sbb
inc
sub
jne
roll
inc
mov
cmpb
test
lods
push
mov
mov
sub
in
ljmp
mov
jnp
xchg
sbb
movsb
dec
jno
jb
mov
inc
les
xorb
popa
or
adc
sbb
add
add
fistpll
rolb
push
rcll
leave
popa
ficoml
jmp
aaa
cmp
push
cwtl
out
ficompl
push
add
sub
push
xor
push
pop
or
fiadds
lret
xor
jnp
cwtl
fcoml
subl
mov
sbb
sub
xchg
add
push
sbb
outsb
push
ljmp
in
mov
xchg
ficoml
mov
rolb
or
stos
dec
les
xchg
insb
pop
sbb
jp
inc
xor
inc
mov
addr16
push
or
stos
mov
repnz
movb
push
cltd
mov
fs
or
mov
push
sarl
sbb
and
xchg
push
pushf
or
and
shrl
add
sahf
icebp
add
pop
loope
mov
pop
subl
push
gs
push
sbb
mov
lods
add
out
sub
fidivl
and
dec
adc
or
or
pop
rcll
js
pushf
imul
pop
xchg
cmp
jnp
lock
xchg
dec
stc
push
ljmp
ds
inc
lods
pop
mov
push
or
jmp
je
inc
insb
scas
into
mov
test
dec
popa
inc
lock
sub
or
subl
and
pop
jo
cltd
and
push
cmp
outsb
jb
shl
pusha
push
add
adc
mov
or
jo
lret
inc
nop
add
lock
mov
aam
xchg
mov
sub
div
in
xchg
dec
clc
sub
scas
xor
sbb
cltd
in
cmp
decl
jno
xor
sar
adc
roll
xor
sbbb
push
lcall
outsb
xor
mov
scas
mov
push
dec
mov
lds
mov
add
push
loop
negb
push
insb
dec
je
mov
movl
pop
add
ss
mov
push
mov
lds
in
sbb
push
int
xor
inc
mov
sub
out
imul
les
xor
scas
push
xchg
sub
orl
addl
xlat
sbb
gs
out
push
push
stos
bound
pop
adc
pop
mov
mov
and
aam
xlat
test
mov
dec
add
call
mov
cwtl
fucomip
icebp
addr16
lods
rclb
mov
mov
pop
sub
jne
mov
pop
push
movsb
mov
jp
push
orl
insl
subb
or
rolb
or
jno
rclb
rorb
and
pop
xchg
push
stc
push
sub
add
test
aas
sub
cli
add
jb
mov
cltd
jns
dec
pop
rcrl
fistps
gs
sti
cmp
xchg
addb
es
sti
dec
xchg
sbb
adc
xsha256
cmpsb
xchg
dec
aam
test
inc
jl
sbb
sbb
js
adc
add
rorl
push
pop
jge
xchg
pop
inc
pop
adc
ja
sub
cmpsb
xchg
rorl
sbb
stos
add
pop
inc
cmpsb
scas
inc
test
pushf
or
adc
xor
loopne
add
fldl
test
inc
xor
or
pop
mov
mov
clc
push
mov
xchg
mov
lock
lret
mull
test
mov
xor
and
in
sbb
and
push
aad
or
push
subl
inc
adc
js
adc
fldt
xchg
jae
sbb
xchg
and
jnp
cmp
rol
add
cmc
test
xchg
mov
cs
add
int
add
pop
push
sub
scas
mov
push
cmp
mov
cs
jne
out
xor
adc
jbe
ret
jo
gs
mov
inc
scas
fisttpll
inc
lods
xor
dec
push
or
mov
adc
mov
add
sbb
push
push
add
adc
add
or
add
les
loope
jecxz
insl
push
cs
mov
push
imul
pop
push
dec
shlb
movsb
sub
inc
push
fldenv
scas
fcomps
cs
adc
mov
push
out
add
into
sbb
xchg
mov
add
or
push
mov
push
lds
cmp
test
push
scas
mov
neg
push
and
into
movb
popa
pop
push
sbbl
sub
jge
pusha
mov
sbbb
mov
add
stc
js
pop
shlb
add
cmp
mov
nop
mov
add
push
jp
dec
rcl
sub
mov
scas
pop
je
lock
and
push
xchg
add
add
mov
mov
sbb
ret
or
inc
stos
cmp
dec
pop
inc
mov
pop
sbb
push
mov
sbb
mov
pusha
dec
add
cmp
sbb
xor
inc
xchg
push
icebp
jl
push
xchg
loop
sub
ret
inc
cmc
and
dec
or
pop
adc
lods
call
mov
dec
jne
mov
sbb
pop
push
sub
loop
cmp
add
rclb
xchg
sub
push
roll
or
bound
xor
or
sbb
into
lret
cmp
mov
or
mov
ret
sub
loop
push
or
xchg
mov
dec
dec
sub
fwait
mov
addr16
jp
push
xor
and
or
push
mov
pop
mov
adc
inc
test
dec
inc
cld
ss
inc
loopne
enter
push
cmpl
data16
adc
and
push
roll
test
cmpsb
imul
add
push
push
mov
or
xchg
lret
and
dec
out
xchg
shll
loopnew
icebp
pop
mov
push
add
sub
and
mov
sub
add
loope
daa
push
sub
pop
jo
push
lds
adc
jbe
xor
inc
cs
nop
jge
add
fcoms
cmp
in
jo
fidivrs
push
fld
cmp
icebp
or
push
inc
loopne
rol
and
sub
push
dec
sub
xchg
daa
adcl
fsubl
jb
or
or
lret
add
out
push
and
mov
mov
xchg
outsl
std
mov
ss
icebp
sbb
dec
aaa
aam
or
test
ja
xchg
push
mov
or
xchg
fnsave
push
inc
adc
in
adc
xchg
dec
jp
mov
or
xor
cmpb
out
jp
scas
lret
sub
jns
pop
pop
push
popa
rcr
or
mov
cmpsl
jmp
mov
sub
rcrl
xor
or
or
in
dec
sbb
inc
inc
pusha
mov
cmp
ss
ss
call
cmpsb
negb
in
fsubl
push
icebp
or
mov
cwtl
rclb
cmp
sbb
mov
cmp
sbb
ljmp
push
pop
inc
add
je
mov
jbe
push
xchg
xchg
mov
inc
cmp
sarb
sub
cmp
inc
mov
sbb
and
loope
test
cmp
push
xor
std
adc
shll
popf
inc
cmp
lret
pushf
cmc
iret
lret
mov
sbb
and
dec
pop
cmpsb
push
call
test
fistps
mov
push
inc
arpl
push
and
sbb
adc
xchg
sub
mov
and
add
in
sub
cwtl
push
jne
ret
sbb
scas
push
shlb
add
jne
push
adc
test
mov
mov
add
and
mov
xchg
adc
cmpsl
xchg
ret
sbb
outsb
sub
cmp
push
jl
shr
movsl
shrb
inc
andl
lret
fisubrs
adc
push
cld
mov
xor
push
mov
pop
lods
lock
test
testb
addl
rcl
mov
dec
or
mov
xor
jne
sub
pop
rol
je
sbb
inc
mov
shl
and
and
mov
fildll
push
clc
mov
mov
inc
cmc
sub
hlt
enter
sub
cwtl
add
loope
rcll
jecxz
mov
into
rdpmc
inc
movsb
lea
dec
inc
shrb
movsb
sbb
jecxz
out
addl
out
pop
adc
jmp
test
rcr
or
pop
lods
inc
cld
jb
or
adc
dec
push
je
push
aaa
sbb
add
jo
shl
orb
sbb
stos
adc
jo
add
loope
sbb
inc
xchg
pusha
sti
bound
jbe
cmp
push
roll
or
rolb
xor
stos
push
sbb
mov
inc
xchg
mov
mov
xor
xor
sub
add
gs
rcl
add
ret
je
add
imul
sub
cmp
call
or
mov
mov
pop
sub
pop
pop
in
jp
xchg
push
or
sub
scas
mov
sbb
int
cli
or
paddw
insl
xchg
pop
rclb
pop
adc
sub
or
jno
sub
scas
mov
hlt
lock
sub
dec
stos
cmp
movsb
je
in
adc
pop
orb
cmc
test
add
mov
icebp
mov
mov
or
mov
data16
push
sbb
mov
pop
cmp
mov
push
pop
push
xchg
or
pop
test
int
add
sahf
push
xchg
push
sub
inc
xchg
daa
push
push
inc
inc
in
lret
pop
inc
push
cmpsb
fidivl
pusha
add
mov
aam
popf
or
mov
inc
pop
add
stos
add
inc
xor
mov
and
lret
or
in
or
popf
lret
loopne
mov
sbb
sbb
test
je
jp
pop
cs
mov
dec
push
push
je
mov
mov
xchg
inc
push
sbb
lds
cmp
leave
cmpsb
in
cli
xchg
jp,pt
and
adc
mov
sub
push
test
mov
sbb
mov
pop
jb
or
dec
adc
in
push
sbbl
xor
add
roll
add
adc
mov
add
fstps
aad
loopne
inc
or
int
aad
jmp
jp
mov
test
inc
scas
mov
xor
and
cmp
lods
cmp
or
jb
fstps
popf
adc
or
mov
xchg
or
xchg
cmp
xor
mov
inc
lods
push
es
bound
and
sbb
lret
repz
xchg
aam
mov
add
mov
rclb
daa
add
aam
push
call
lods
roll
out
sbb
sbb
lcall
sbb
flds
jp
jg
call
loop
sbb
push
add
dec
cs
and
pushf
jnp
push
mov
or
mov
or
insl
rcll
jmp
call
push
lds
jp
test
jp
pop
in
and
push
mov
inc
mov
sbb
push
call
mov
inc
mov
das
pusha
ficomps
inc
sub
stos
or
push
xchg
or
pop
add
sub
ret
js
adc
adc
mov
xchg
and
sbb
push
add
sbb
xor
mov
or
sbb
mov
sub
sbb
xlat
push
push
out
shr
xor
xor
xchg
fcoml
rolb
shll
xor
mov
add
ret
add
xchg
push
push
sub
sbb
test
add
shl
mov
sbb
sub
pusha
inc
lods
stos
inc
sbb
test
or
xchg
and
bound
pop
mov
js
daa
sbb
sub
xor
sub
adc
shll
lock
pop
push
mov
pop
mov
sbb
mov
cltd
mov
add
shr
dec
add
push
adc
xor
in
lock
xchg
push
rcl
push
add
sbb
xor
jp
mov
inc
adc
xchg
lods
push
push
int
nop
insb
push
mov
and
push
pop
mov
in
inc
push
push
mov
add
jecxz
jne
roll
inc
jnp
push
xor
inc
sbb
mov
mov
lret
sarb
or
sti
stc
or
xor
xor
test
inc
inc
hlt
sub
pop
subl
push
ret
lds
outsl
std
xchg
mov
add
jno
or
popa
and
xor
lret
sub
pop
rolb
xchg
rolb
mov
sub
repnz
pop
lods
push
push
ret
mov
mov
inc
add
mov
js
sbb
clc
adc
sbbw
cmpw
and
xchg
into
pop
adc
dec
in
inc
movsl
add
mov
adc
in
ficoms
js
loop
inc
or
jle
ja
adc
fsubrs
out
icebp
xorb
lods
aam
and
ret
into
es
stos
dec
add
pop
pop
in
fld1
pusha
push
mov
push
mov
adc
xor
hlt
xor
mov
sub
sub
loope
ret
loopne
test
dec
hlt
test
jnp
add
add
mov
mov
push
add
cmp
mov
cwtl
or
sbb
inc
cli
cwtl
repnz
push
cltd
into
lret
fwait
hlt
je
rclb
mov
sbb
scas
inc
in
pusha
mov
push
sbb
das
or
iret
test
rol
test
lea
xor
adc
mov
push
fwait
push
pop
pop
push
xor
xchg
pop
sbb
rclb
push
adc
jbe
adc
or
xchg
fwait
mov
push
push
mov
mov
pop
rcrb
enter
xlat
mov
jbe
data16
inc
and
mov
jge
int3
jae
stos
pop
adc
xor
sub
pusha
ret
xchg
or
cmp
sarb
adc
sub
cmp
sub
or
push
aas
jb
movsl
incb
sub
or
das
icebp
push
popf
add
adcb
clc
jbe
and
push
mov
bound
jo
mov
mov
in
test
into
leave
pop
mov
xor
inc
leave
and
xchg
repnz
cld
xlat
sub
and
sub
mov
fdiv
add
shlb
or
pop
push
jo
in
mov
push
enter
xchg
adc
or
add
jnp
into
add
rorl
data16
shll
out
adc
inc
xlat
jae
mov
jbe
loopne
loopne
mov
xor
lret
mov
jge
add
outsb
adc
adc
and
stc
push
xchg
mov
loopne
std
adc
cltd
add
imul
xor
xor
cmp
shll
fimull
cmp
or
bound
adc
inc
and
lret
aas
add
mov
sub
adc
push
add
and
leave
arpl
pop
loopne
shl
sub
xor
adc
stos
mov
xor
movsb
stos
dec
int3
xor
leave
or
xchg
xchg
shll
or
js
dec
cmp
ljmp
fldl
enter
test
jae
push
rol
jp
mov
std
mov
add
inc
jo
dec
mov
imul
or
nop
movsb
subb
adc
pop
sbb
stos
mov
adc
mov
js
scas
add
mov
fists
pop
add
mov
pop
cs
inc
or
shll
pusha
xchg
loop
and
cli
lret
pop
int3
icebp
add
inc
stos
popf
enter
add
popa
push
dec
mov
into
adc
or
push
clc
add
add
xchg
add
adc
jo
pop
xchg
insb
repnz
inc
or
push
popa
dec
add
mov
fadds
sbb
xchg
mov
popf
int3
or
push
mov
icebp
xchg
pushf
cmp
adc
mov
es
adc
pop
dec
inc
or
push
and
add
mov
cmp
mov
sti
call
testb
int3
sbb
push
push
sahf
sbbl
rcll
inc
pop
pop
add
sarb
nop
or
ss
enter
or
mov
or
pop
inc
add
mov
jb
je
push
sbb
or
sbb
int
add
or
pop
sbb
in
fs
inc
sbb
and
dec
and
inc
in
inc
mov
push
push
pop
hlt
clc
xchg
push
pop
je
push
mov
popa
and
sbb
rorl
jb
xor
pop
aad
push
pop
popf
loopne
mov
mov
ret
add
jb
popa
mov
inc
lea
pop
sahf
adc
mov
sti
es
lock
dec
mov
or
lret
dec
push
lods
inc
adc
adc
xchg
sub
xchg
adc
rorb
add
xchg
sbb
cld
movsl
inc
cs
xor
jne
push
mov
add
lods
add
add
push
adc
mov
ret
hlt
sti
add
cs
sub
add
stos
xlat
imul
rcrb
cli
out
push
bound
mov
jo
test
mov
xchg
int3
loopw
inc
subl
into
sub
xor
popf
test
sbb
rclb
enter
divb
jle
aaa
push
lcall
pop
inc
setp
out
pop
sahf
inc
sbb
lea
and
push
xchg
inc
or
xor
paddsw
add
xor
and
push
lock
les
mov
pop
push
ffree
add
sbb
repnz
adc
add
outsl
into
jns
rolb
in
sbb
shl
sub
xchg
mov
mov
add
pop
push
dec
aad
pushf
mov
push
add
mov
bound
or
push
pop
in
popa
aam
insb
push
sahf
jno
mov
xchg
and
adc
mov
js
aad
cld
out
xchg
lods
rcll
xor
adc
push
ljmp
cmpsl
popf
and
fidivrl
push
aad
xchg
test
int3
test
bound
or
cmp
shll
push
adc
and
mov
sbb
je
sub
add
mov
add
adc
and
pop
adc
push
daa
jb
xchg
iret
ret
add
or
sub
imul
push
push
sbb
inc
test
imul
and
mov
adc
rcrb
or
inc
pop
enter
loop
inc
lds
or
dec
add
das
pop
dec
mov
sbb
out
mov
sbbb
mov
add
pusha
mov
dec
imul
jo
cmpsb
or
xor
xchg
cmpl
or
sbb
mov
add
mov
and
sbb
cmp
out
cmp
icebp
adcl
cltd
clc
pusha
std
xlat
sub
lock
mov
mov
adc
repnz
xchg
cmp
mov
test
lret
dec
xor
enter
push
call
or
dec
cmp
les
shlb
pop
fdivl
cmp
lcall
cmp
ds
sar
test
rcrl
pop
rcrl
push
cltd
push
rolb
or
mov
mov
sub
adc
inc
jl
rorl
cmp
add
or
mov
and
rcll
dec
les
add
jns
mov
enter
pop
inc
xor
jg
inc
pop
popf
jb
loopne
add
xor
test
push
or
push
loopne,pn
notl
stos
add
mov
cmc
ret
cli
or
inc
mov
sbb
sarb
adc
or
pop
sub
insl
xchg
jecxz
xchg
cmp
mov
adc
les
add
pop
lock
sbb
jnp
pop
les
pusha
lods
test
push
stos
or
push
or
loop
add
ret
jo
hlt
rcrl
addr16
lea
and
xor
mov
xor
adc
add
sub
adc
inc
cmpsb
ss
cmp
push
jg
adc
andb
xor
dec
or
add
sbb
outsl
aam
es
das
push
pop
mov
popa
insl
ja
int3
cmp
pop
inc
test
wrmsr
fcompl
xchg
mov
ret
adc
jecxz
pop
xchg
pop
sub
cltd
mov
ljmp
sbb
push
es
loope
mov
pop
ret
mov
cmp
dec
sbb
push
sbb
lock
add
lahf
sub
fwait
mov
mov
movsb
add
dec
or
or
sbb
clc
je
xor
and
stos
loope
mov
dec
xchg
jo
dec
inc
mov
mov
pop
cmp
push
dec
sub
mov
or
jecxz
xor
jecxz
negb
mov
or
dec
add
mov
push
lock
dec
sub
inc
in
andb
shl
leave
sub
push
dec
xchg
aas
push
scas
or
xchg
test
ret
xchg
jmp
sbb
cmpps
in
mov
lods
or
and
orb
mov
mov
and
ret
adc
dec
rolb
arpl
bound
test
adc
movsb
scas
scas
add
fldcw
and
push
repz
or
dec
inc
fs
sarl
bound
adc
test
push
jp
adc
xchg
jo
xchg
push
mov
fs
shlb
stos
aad
xchg
or
push
xor
jmp
sub
and
push
xor
push
rcrb
sub
xchg
shrl
dec
xchg
stos
xchg
and
je
add
adc
xchg
xor
jge
cmp
outsb
imul
mov
jbe
push
and
jne
dec
adc
addb
sbb
sbb
jl
inc
add
idiv
andl
int
adc
int
push
sub
sbb
add
inc
mov
imul
and
mov
push
inc
cmpsl
push
stos
sbb
sbb
mov
or
adc
xchg
push
lret
pop
jb
es
enter
mov
stos
mov
faddl
adc
sbb
add
iret
les
jb,pn
insb
xchg
xlat
shlb
ret
sbb
cwtl
incl
cmpsb
orb
mov
adc
mov
mov
pop
adc
inc
inc
rcrl
xchg
rcll
jge
adc
fs
and
shlb
popa
and
mov
addb
or
jno
xorb
push
dec
shlb
push
sbb
test
ds
and
call
jb
sub
mov
gs
inc
pop
scas
push
cmp
mov
cmp
xor
aam
push
call
inc
add
inc
rcll
nop
loop
xchg
push
mov
pop
push
or
push
hlt
enter
scas
lret
and
sub
imul
jne
cmp
pop
test
ljmp
ss
or
sbb
stos
push
push
sub
lcall
in
or
in
jmp
movl
sti
and
stc
add
pop
and
shl
pop
dec
enter
out
mov
ss
and
add
addl
xor
mov
adc
jge
ret
cmp
lahf
aas
jg
xor
out
bnd
push
lock
stc
repz
push
mov
popf
xor
aam
aas
jg
mov
jle
mov
mov
xchg
xor
push
inc
mov
jg
cld
or
sbb
jno
call
repz
lahf
pushf
jmp
push
aad
xchg
xlat
addb
cld
stc
jbe
ljmp
cmp
je
aad
add
iret
lahf
aas
push
pushf
cwtl
loop
loopne
pop
sub
stc
repz
mov
stos
cmp
mov
cmpsl
stc
iret
lahf
aas
jg
pop
insl
sub
cltd
popa
sbb
inc
lods
cld
stc
repz
ss
jb
call
ja
mov
aas
jg
pop
cli
imul
and
mov
xchg
bound
mov
mov
sub
sti
cmpsb
and
push
stos
imul
out
sub
xchg
sbb
jl
cld
stc
scas
pusha
addl
push
sbb
mov
call
xor
repz
lahf
sbb
clc
mov
jg
cld
stc
xor
add
ljmp
into
sub
out
lahf
aas
repz
stc
push
mov
icebp
mov
jmp
jge
sub
mov
jns
ljmp
aas
jg
mov
add
mov
out
push
fwait
xor
stc
repz
sub
inc
ja
add
mov
aas
jg
sub
adc
fwait
and
popf
fdivrl
out
in
sub
dec
mov
pop
dec
cmp
jg
cld
daa
stos
adc
push
les
add
fcomip
out
lahf
push
ror
inc
cld
pcmpeqw
jg
cld
stc
data16
fdivs
es
dec
xchg
xchg
and
enter
clc
cmc
aas
jg
cld
stc
movsl
mov
pop
or
and
pop
pop
xchg
jno
test
lods
lock
push
sahf
je
add
enter
stc
repz
pop
xor
jl
cmpsb
cwtl
fdivs
jecxz
iret
lahf
aas
jg
jle
dec
push
push
repz
data16
add
stc
repz
and
add
push
outsb
roll
lahf
aas
jg
inc
shlb
popa
mov
repz
push
or
scas
test
dec
sub
pop
aas
jg
cld
das
rcl
jns
push
movsb
add
sti
test
out
lahf
mov
cs
inc
aaa
add
mov
mov
sub
push
rorl
aas
jg
cld
jp
inc
mov
push
cltd
xor
mov
xchg
jge
dec
leave
or
lcall
push
aas
jg
cld
stc
dec
jb
out
or
in
lcall
mov
sarl
push
test
push
mov
ds
cld
stc
repz
pop
and
addr16
and
push
das
sub
testb
lahf
aas
jg
xlat
adc
jecxz
cmp
idivb
call
jle
dec
in
mov
xchg
scas
nop
inc
xor
lahf
cld
pusha
icebp
ror
cmp
cmp
lahf
aas
jg
outsl
push
or
push
sub
repz
fsubr
outsl
mov
jge
arpl
stos
aas
jg
cld
push
fildl
xor
jb,pn
xor
repz
lahf
inc
xor
and
movsb
and
fnstsw
cld
stc
cltd
test
cmc
adc
add
js
iret
lahf
aas
sahf
mov
xor
dec
add
cld
stc
repz
or
sbb
notb
jnp
ret
icebp
cltd
cld
stc
add
std
ret
orl
aas
jg
loopne
push
add
xchg
lds
iret
xor
pop
popl
hlt
sbb
arpl
fstps
jg
cld
sub
dec
les
mov
push
xchg
and
div
dec
push
mov
jge
inc
lahf
aas
jg
lea
adc
dec
shlb
inc
arpl
repz
lret
lods
lcall
out
mov
cld
sub
dec
cmp
outsl
fs
xchg
or
dec
sbb
repz
lahf
mov
ror
insb
mov
mov
fs
cld
stc
je
dec
daa
int3
pop
sub
notl
mov
leave
iret
lahf
aas
int3
xchg
addl
inc
aas
jg
icebp
test
mov
test
xor
out
lahf
data16
sbb
test
and
jg
cld
stc
push
xchg
mov
les
js
or
jp
fnsave
stos
inc
movsb
sti
jae
push
or
adc
stc
repz
mov
mov
ss
jg
mov
rcrb
outsl
loopne
imul
stc
jbe
repz
push
scas
sbb
loope,pn
repnz
jg
cld
dec
dec
xchg
mov
sub
inc
hlt
jo
stc
shll
sub
mov
fidivs
lods
push
push
jge
out
dec
mov
lahf
and
fs
sub
repz
fldl
lret
repz
mov
sbb
repnz
fbld
lods
dec
sbb
stc
cmp
add
cld
stc
repz
pop
loope
ret
or
js
pop
lahf
aas
jg
daa
adc
dec
xor
sub
cmpsl
stc
repz
ds
sub
cmp
popf
dec
aas
jg
cld
sub
data16
and
std
xor
stc
rol
repz
lahf
stc
jecxz
sub
mov
cld
add
stc
xchg
mov
push
icebp
stc
repz
pop
addr16
in
out
cmc
lds
cld
xor
insl
mov
or
out
lahf
or
sub
sub
cld
stc
in
aam
loope
fs
sub
icebp
xchg
push
push
out
lahf
aas
movsl
pop
cmpsl
dec
push
jge
in
pop
sbb
cld
stc
repz
mov
in
nop
jne
cmp
jg
mov
je
mov
mov
icebp
lea
add
jmp
cld
stc
repz
jmp
xchg
push
rcrb
cs
insl
adc
iret
lahf
aas
jg
and
dec
sarl
inc
das
pop
daa
cld
stc
repz
es
jp
divb
int
push
je
lret
jg
pop
inc
pop
mov
mov
xchg
test
xchg
stc
repz
sub
icebp
push
and
jge
aas
jg
cld
mov
insb
fmull
xor
out
lahf
scas
shll
loopne
lds
dec
adc
cld
stc
cli
push
shlb
dec
test
cmc
mov
mov
mov
xchg
mov
cld
lcall
iret
mov
mov
add
je
xchg
cld
stc
repz
enter
std
js
je
mov
mov
push
lahf
aas
jg
or
test
jp
lret
and
out
popa
fnsave
call
ret
mov
cld
pop
jns
mov
in
inc
push
mov
pusha
in
cld
stc
inc
and
mov
test
movsb
test
aas
jg
scas
sbb
leave
cmpsb
pop
mov
or
add
out
test
imul
std
ss
aas
jg
cld
lcall
push
mov
jb
cld
stc
ret
xchg
pop
test
outsl
negl
xlat
loopne
fsubrs
lahf
aas
jg
enter
loope
fidivrl
mov
stc
repz
daa
out
push
cmp
mov
out
xchg
aas
jg
cld
test
inc
cmpsb
movl
lahf
cmp
pop
mov
mov
mov
cld
stc
jle
mov
in
sbb
pop
addr16
lahf
aas
jge
sub
xor
cmp
cld
stc
repz
xor
add
push
aas
jge
xor
push
clc
add
and
inc
jo
stc
repz
ret
mov
scas
mov
aas
jg
aas
inc
std
pop
add
insl
ja
mov
repz
add
mov
sbb
jg
cld
gs
push
dec
int3
push
pushf
in
adc
mov
repz
lahf
aas
sahf
mov
or
jg
cld
mov
jo
fnstenv
out
lahf
aas
adc
inc
mov
lcall
repz
repz
or
lds
iret
lahf
aas
jg
mov
lahf
test
ret
lret
cld
stc
repz
shrb
fcomi
shl
daa
xchg
aas
stc
adc
popa
sti
jne
push
jl
cld
sbb
imul
hlt
cwtl
xchg
jg
mov
gs
daa
fcomip
lock
mov
iret
lahf
aas
ret
add
mov
call
pushf
addr16
and
xor
loop
jnp
cli
xchg
lahf
aas
jg
cmp
mov
ss
fsubrp
sbbb
shlb
add
dec
sub
and
repz
fucomp
lahf
inc
sub
add
pop
outsl
jns
cld
test
mov
mov
and
jmp
sub
xlat
xor
aas
das
ljmp
cmc
add
dec
cld
stc
repz
lock
rolb
test
push
fistpl
iret
lahf
aas
jg
mov
ss
ficoms
call
int3
scas
ja
test
push
outsl
mov
andb
sbb
mov
xchg
mov
xorb
loope
lock
arpl
xchg
out
cld
ret
inc
popa
leave
insb
push
scas
in
repz
pop
sbb
lock
jae
jg
cld
stc
add
or
mov
fucom
iret
lahf
aas
daa
and
fcomps
in
cld
stc
repz
in
adc
or
dec
xor
test
dec
shl
int3
sub
jl
mov
test
js
shll
lcall
jg
testb
aaa
enter
pop
jo
jnp
clc
in
jae
sbb
inc
mov
push
sbb
out
cmc
andl
cld
lds
movsl
jne
jg
cld
mov
lahf
rep
jmp
lea
lahf
aas
pop
sub
adc
stc
repz
mov
pop
and
jno
stos
and
iret
lahf
aas
jg
sbb
push
xchg
and
enter
repz
bound
jne
leave
lret
in
inc
and
rorb
pop
jp
mov
dec
cld
stc
repz
iret
jne
xchg
pop
push
push
fldcw
lahf
aas
jg
xor
shll
scas
int3
call
lcall
arpl
gs
cs
xchg
imul
aas
jg
cld
xchg
inc
jl
mov
loop
rcrb
aam
push
repz
lahf
cmc
or
dec
mov
jle
cld
stc
shrl
mov
scas
mov
and
iret
lahf
aas
mov
or
fwait
pop
dec
repz
aas
jg
lock
xor
sub
mov
repz
lahf
popf
dec
jg
dec
sub
mov
stc
and
cmp
insb
adc
out
cmp
iret
lahf
aas
sub
adc
jg
scas
cld
stc
repz
repz
das
sti
ret
xorb
pop
imul
inc
int
out
mov
repz
push
add
inc
ficompl
lock
aaa
rclb
aas
jmp
pop
push
stc
mov
jns
out
or
and
sarl
addb
and
sbb
xor
jmp
pop
stc
repz
cli
lret
sub
adc
pushf
cmpsb
push
aas
jg
cld
cmpsl
jns
push
clc
stos
pop
cmp
test
jge
mov
js
fildll
cld
jns
iret
and
cmpsl
pushf
mov
push
lahf
aas
jg
in
adc
cwtl
test
arpl
repnz
jle
pop
pop
inc
jmp
js
mov
mov
fistl
repz
cld
stc
repz
sbb
out
cmp
test
mov
iret
lahf
aas
jg
movsl
mov
dec
imul
adc
cld
stc
repz
sub
add
sbb
insl
sbb
jg
cld
push
loop
cmp
push
in
cmpb
out
fs
cmpsb
xchg
pop
inc
mov
adc
aas
jg
cld
pop
cmpsl
jmp
ja
and
jns
jb
out
lahf
insb
insl
xor
mov
push
inc
jno
ss
jg
cld
stc
pushf
test
push
mov
sub
out
out
lahf
aas
es
test
pop
repz
jp
cld
stc
repz
call
outsl
xchg
cli
int3
clc
movsl
cmp
jg
jo
andl
lods
shll
cmpsb
clc
in
fisubl
adc
stos
mov
lods
mov
mov
repnz
inc
vpxor
fbld
cmpsl
int
aaa
outsl
dec
loopne
dec
jp
dec
adc
loope
jns
out
jb
loopne
xchg
jo
adc
jnp
aaa
outsl
fdivp
dec
iret
sub
out
dec
iret
shrl
repz
bound
mov
add
mov
sub
pushl
mov
inc
arpl
cld
stc
pop
cld
jno
ja
mov
fildll
iret
lahf
aas
mov
mov
adc
into
inc
cld
stc
repz
into
jns
fcmovu
mov
fwait
pop
daa
repz
fnstsw
jns
inc
pop
sbb
fwait
push
shl
iret
lahf
pushf
pop
mov
xor
lea
aaa
clc
push
test
sub
xor
xchg
fbld
es
mov
ret
out
lahf
aas
fucomp
push
and
xchg
fsts
cld
stc
repz
mov
jnp
repz
add
add
in
sub
mov
xor
stc
repz
mov
jmp
into
inc
xor
lahf
aas
jg
jb
cmpsl
cli
sbb
fisubs
push
sub
repz
ja
imul
sub
addb
stos
push
inc
sbb
out
mov
mov
jmp
mov
xchg
insb
xor
aad
or
cld
stc
cmp
adc
ljmp
pop
xchg
sbb
iret
lahf
aas
js
ljmp
add
stc
repz
add
aaa
add
xchg
outsb
iret
lahf
aas
jg
mov
jle
out
call
jecxz
repnz
jecxz
or
loopne
loopne
mov
std
jo
mov
mov
mov
mov
stos
fs
hlt
test
lret
xchg
xchg
repz
pop
lock
jno
add
sub
and
cld
stc
out
fwait
fs
les
pop
fdivrs
sbb
jb
dec
enter
mov
stc
notl
lcall
jg
cld
call
aam
cvttps2pi
or
out
lahf
mov
mov
repz
lcall
jns
test
push
and
test
sbb
cmp
iret
lahf
aas
pop
xchg
mov
and
stos
aas
mov
inc
cld
stc
repz
push
push
stc
fsubrs
insb
loope
mov
inc
jle
aam
je
es
cld
stc
repz
cs
inc
jno
jno
mov
es
iret
lahf
aas
jg
sti
cmpsb
and
inc
push
loope
jecxz
adc
cld
stc
repz
cli
arpl
inc
mov
aas
jg
sti
in
aad
aam
es
faddl
popf
adc
jp
js
daa
outsl
fidivrs
mov
mov
fwait
aaa
pop
daa
push
pop
mov
mov
pop
jge
scas
fidivrs
fldl
daa
call
fwait
lahf
aaa
outsl
in
nop
mov
loope,pn
mov
jns
out
bound
xor
mov
pop
lahf
pop
add
outsl
fidivrs
test
jae
sbb
mov
fwait
jae
push
out
bound
jl
icebp
loopne
fidivrs
jb
movsb
mov
mov
int
aaa
sbb
jo
je
out
cwtl
and
mov
scas
scas
push
dec
dec
adc
adc
aas
dec
adc
or
cmp
mov
jns
out
xchg
mov
test
cmc
push
out
and
jnp
and
outsl
fidivrs
ret
xor
lea
inc
jge
int3
mov
xorl
lahf
xchg
je
pop
mov
xchg
jo
cmp
cmpsb
jb
cld
jns
sub
and
jno
std
lea
jbe
iret
lahf
aas
jg
mov
xadd
arpl
pusha
and
out
faddp
fwait
popf
in
test
repz
cmp
mov
inc
lret
mov
jno
fidivrs
loopne
pop
mov
inc
data16
int
aaa
sbb
dec
pop
inc
jb
mov
fnstcw
pop
xor
jle
imul
pop
ja
adc
outsb
sbb
cld
stc
out
jns
leave
std
mov
mov
add
iret
lahf
aas
loopne
outsl
addl
leave
push
sbb
mov
cld
in
inc
jo
add
inc
xlat
pop
fadd
xchg
outsl
fidivrs
mov
dec
push
jo
pushf
dec
xor
iret
fwait
aaa
add
add
gs
out
sbb
sbbl
jmp
repnz
loop
add
xor
mov
jb
in
sahf
lahf
sahf
xor
repz
out
fwait
aaa
and
scas
dec
icebp
rcrb
push
mov
mov
repz
mov
cmpb
push
push
push
std
add
jmp
test
scas
add
stc
int
inc
jae
popf
cmpl
jmp
mov
aas
call
cmpsl
xchg
jbe
cld
stc
repz
cmpsl
pop
fbld
popa
sahf
ret
sahf
data16
aas
jg
addr16
andb
loope
pushf
rorl
jae
cli
enter
mov
out
out
setg
fisubl
iret
push
fcmovb
lret
pshufw
pop
jl
outsl
mov
add
ss
and
outsl
ficomps
jecxz
lods
dec
mov
int
aaa
aam
xchg
ret
or
adc
nop
scas
js
out
push
cmp
cmp
mov
jns
xchg
cmpsb
mov
aaa
xor
mov
sarb
int
aaa
outsl
iret
jecxz
sub
push
fstpt
rcr
cld
jle
jns
aas
arpl
outsl
and
jecxz
ljmp
mov
loop
push
xlat
hlt
jg
cld
sti
iret
out
and
pop
popf
loope
aaa
notb
or
lahf
jg
sarl
dec
pushf
daa
pop
lock
push
jg
cld
stc
dec
lods
push
dec
leave
sub
cmpsb
or
dec
jle
out
lahf
aas
push
and
ds
sub
push
ja
cld
stc
repz
lret
and
orb
cmp
lahf
aas
jg
cmp
cmp
cmp
pop
jl
aas
dec
cld
stc
repz
mov
dec
push
or
cmp
repz
xchg
loop
mov
inc
inc
ds
test
test
xchg
iret
lahf
aas
jg
jae
loopne
iret
mov
inc
mov
ror
mov
test
mov
enter
cmp
jp
mov
adc
push
jg
push
mov
mov
mov
movsl
mov
dec
stos
dec
pop
inc
aaa
sub
cld
stc
repz
js
test
xchg
imul
leave
xor
decl
lock
xchg
movsl
mov
out
lahf
sub
and
pushf
jg
jmp
in
pop
push
cmpsb
push
aaa
mov
js
jge
push
and
mul
xor
pop
int
aaa
outsl
sahf
out
or
xchg
leave
inc
cmpsl
xchg
dec
push
pushf
out
or
test
add
out
mov
sub
adc
add
cld
stc
and
push
and
mov
or
aam
ds
fidivrl
adc
xchg
lahf
aas
jg
jp
pop
mov
stos
testl
mov
shll
arpl
or
jne
mov
inc
negb
inc
pop
jecxz
mov
jg
cld
pushf
sbb
push
cld
sbb
adc
out
lahf
push
cli
loopne
push
and
cmp
inc
movsl
mov
stc
lea
dec
mov
or
imul
enter
adc
mov
cld
stc
pop
jns
pop
sub
cmpb
jle
lds
pop
dec
test
cmpsl
mov
es
dec
sbb
enter
jns
jecxz
push
rolb
mov
mov
sarl
shlb
push
cmp
int
sub
movsl
repz
cmp
and
frstors
adc
and
mov
lret
dec
xor
getsec
outsl
fidivrs
outsb
pop
push
lods
rclb
lods
mov
out
fwait
sbb
push
std
xor
in
fidivrs
lcall
cmp
test
fwait
aaa
inc
pop
inc
cmp
pop
mov
sbb
xchg
jg
fcmovu
adc
mov
jns
dec
scas
ret
scas
and
outsl
fidivrs
outsl
pop
mov
sbb
cld
stc
ret
inc
jae
sub
cmp
or
pop
dec
mov
push
mov
fisttps
jbe
cld
stc
repz
stos
dec
mov
xor
lea
lahf
aas
jg
popf
jl
push
dec
push
shl
cld
stc
repz
xchg
pop
and
pop
sbb
ret
daa
adc
dec
aaa
pushf
stos
adc
pop
lcall
repz
int
je
pop
das
rcl
repnz
push
cmp
xchg
sub
push
unpckhps
out
fidivl
adc
addb
sub
mov
aaa
outsl
fidivrs
xor
mov
mov
xchg
push
movsl
repz
fwait
enter
ret
ret
mov
outsl
fidivrs
pop
inc
rorb
add
and
out
fwait
aaa
test
mov
xchg
xchg
aas
jg
enter
sub
mov
scas
aam
enter
sbb
fsub
pop
rorl
into
xchg
out
fidivrs
dec
les
lds
inc
xor
fwait
aaa
outsl
outsl
dec
int
sbb
xor
push
adc
jns
out
inc
rcrl
cmpsl
and
outsl
xor
fidivrs
adc
mov
aaa
outsl
sub
cmp
scas
repz
icebp
jo
out
lock
lock
fistl
push
mov
repz
stc
fisubrl
cs
mov
fwait
aaa
out
add
int3
rcrb
into
sub
cmp
out
ds
shl
ds
mov
inc
mov
xor
imul
aaa
outsl
ficoms
adc
xor
xor
out
sub
xlat
jl
or
cmp
or
sub
mov
fwait
aaa
adc
mov
fadds
jns
out
in
std
sbb
movsl
insl
andl
inc
outsl
imul
repz
aaa
jno
xor
call
mov
jg
lds
lock
mov
iret
adc
jne
imul
push
jns
xchg
into
mov
pop
fstpl
cmp
ffree
lcall
repz
jmp
fdivrl
outsb
mov
pop
fnstcw
mov
popf
pushf
push
aaa
adc
sarb
shlb
sbb
out
fwait
imul
mov
jns
lods
dec
push
bound
mov
dec
out
fwait
aaa
pusha
loop
xchg
sub
fidivrs
mov
jl
mov
mov
les
xor
jecxz
into
inc
xor
out
les
fbld
sub
mov
repz
cmp
hlt
cmp
xor
outsl
fidivrs
xchg
mov
cwtl
mov
repz
fwait
hlt
jns
shlb
push
test
dec
xor
das
jb
ds
adc
fwait
aaa
cmp
jle
sti
cli
cmp
dec
cmp
fidivrs
push
mov
cmpsb
fisubl
and
std
mov
fwait
aaa
outsl
insl
xor
fs
in
mov
cmp
repz
add
outsb
dec
lods
icebp
mov
lods
push
mov
mov
les
pop
cmpsl
xchg
xor
int
inc
mov
mov
mov
test
push
mov
sti
xor
sbb
ss
movsb
mov
jo
out
fwait
aaa
call
or
pop
jnp
clc
incb
jns
mov
lea
jae
cmp
arpl
outsl
fisubrs
lods
mov
out
inc
mov
xchg
lds
push
rcr
mov
cmp
shll
int
aaa
outsl
cmp
out
icebp
or
xchg
mov
ficomps
lahf
push
jno
jmp
das
stc
repz
cli
add
int
mov
out
push
stc
cltd
xchg
orl
in
jp
jl
mov
aas
cli
mov
dec
shlb
fdivrs
aas
movb
cmc
cld
stc
xrelease
sub
adc
mov
xchg
iret
lahf
aas
jg
pushl
enter
ds
cmpb
mul
out
mov
aas
mov
repz
lahf
jg
shl
cwtl
lds
lret
mov
pop
inc
cld
in
pop
mov
and
shl
jle
fwait
aaa
outsl
faddp
or
xchg
data16
enter
out
pop
sub
pop
xchg
push
je
push
mov
mov
outsl
fidivrs
or
hlt
jbe
jmp
repz
fwait
lret
xchg
mov
out
or
xchg
mov
inc
fdivrl
push
orw
push
push
testl
jg
jmp
aas
mov
shl
scas
iret
xchg
movsl
aad
adc
stc
repz
out
dec
imul
or
pop
ficompl
or
in
loopne
mov
or
push
out
sub
mov
xchg
mov
in
fwait
aaa
adc
xchg
inc
enter
mov
iret
lahf
jg
xchg
push
cmp
lods
fmul
or
stc
repz
in
cwtl
jge
mov
dec
xor
xchg
jb
in
pusha
adc
mov
hlt
in
pop
xchg
andb
mov
add
mov
mov
iret
lahf
aas
dec
cmp
dec
insb
sbb
jb
addl
push
sbbb
add
clc
mov
aas
jg
inc
sbb
and
pop
imul
test
mov
loop
lahf
aas
lahf
lea
push
xchg
mov
push
mov
lahf
aas
incl
fs
mov
pop
icebp
jns
push
loop
adc
lahf
xchg
and
fcmovnb
jg
aaa
outsl
fidivrs
jmp
push
jmp
aaa
mov
out
fwait
je
adc
dec
adc
lret
xor
outsl
fidivrs
outsl
loop
shl
push
xchg
out
fwait
aaa
push
sahf
push
dec
push
aad
xor
mov
mov
cmpsl
lret
jge
femms
movsl
xchg
in
int
aaa
outsl
shrb
mov
xchg
cmp
sub
repnz
pop
insb
dec
imulb
iret
pop
ds
test
pop
repnz
adcb
repz
stos
sub
mull
cld
stc
shl
xchg
bnd
sbb
aaa
inc
sbb
stc
push
aas
dec
and
scas
mov
add
lahf
aas
jg
inc
sbb
pusha
cltd
dec
dec
test
sub
pop
hlt
repz
mov
out
sub
xor
scas
jg
cld
stc
cld
mov
jb
xor
movsl
daa
fbstp
test
pop
fstps
xchg
cld
stc
repz
addr16
inc
ds
pop
repnz
aam
mov
inc
ffree
cmpsb
aaa
sub
aas
cmpsb
out
mov
movups
fidivrs
jecxz
cmp
xchg
adc
pop
imul
sbb
mov
lahf
jae
int
ja
repnz
dec
push
xchg
scas
push
mov
mov
popf
push
stos
dec
push
fwait
scas
push
scas
faddl
mov
dec
dec
aas
mov
movsl
test
lret
jns
out
xor
pop
lods
js
js
lds
adc
ja
and
insl
mov
stos
xlat
repz
fwait
mov
pop
ror
out
daa
dec
dec
test
mov
test
cltd
lahf
cltd
js
loope
scas
shll
das
cld
mov
xor
jne
movsb
jo
jg
dec
jle
js
insl
in
jg
and
fwait
data16
jnp
pop
sub
cs
xchg
jnp
pop
xor
in
inc
cmp
fisubl
and
out
lahf
aas
popa
addr16
jp
pop
push
daa
adc
adc
stc
repz
repz
jbe
outsl
subb
fildll
stos
ficoml
lahf
adc
es
pop
faddp
and
repz
xor
ret
cmp
or
xor
dec
push
dec
cltd
mov
test
lods
and
cmp
call
aas
jg
in
lods
lea
lds
outsl
pop
pop
mov
repz
lahf
push
inc
jb,pn
and
pop
jg
cld
stc
popf
mov
sub
or
mov
cmp
ret
cmp
inc
pop
xor
cld
stc
repz
mov
loop
mov
xor
cmp
and
pop
pop
jp
adc
out
test
cld
repnz
repz
inc
mov
or
xchg
pop
bound
jo
divb
jnp
aaa
outsl
fidivrs
repnz
adc
mov
sbb
and
scas
call
ljmp
insb
fidivrs
and
inc
sub
fs
lods
mov
pop
ljmp
arpl
test
sbb
loop
test
add
aas
jg
mov
pop
cld
mov
std
in
out
sbb
loopne
ret
mov
fidivrs
push
in
mov
je
aaa
out
or
push
pop
aaa
cli
sbb
int
cmp
aaa
call
lret
sub
imul
outsl
fidivrs
cmc
ret
cmc
stos
mov
int
aaa
test
nop
outsb
and
mov
test
xchg
hlt
movsl
mov
cmpsb
stc
push
inc
fimuls
jecxz
push
movb
push
loop
stc
push
incl
push
mov
mov
aaa
fcoml
popa
add
dec
inc
das
adc
sbb
jg
cld
or
cmp
lahf
inc
add
les
sub
stc
ja
lahf
lods
nop
cltd
lods
int3
jo
xlat
cmp
jg
cld
fs
outsl
jmp
stc
add
mov
xchg
mov
xor
jg
shlb
outsb
int3
das
out
push
cmpsl
test
leave
lahf
aas
bound
aas
aaa
mov
xor
jns
push
daa
sbb
fnsave
jl
pop
popf
inc
xchg
nop
scas
adc
sub
repz
shlb
outsl
fidivrs
xlat
pop
filds
pushf
fidivl
dec
push
loop
int
cmp
jb
arpl
mov
add
rolb
dec
arpl
cld
fwait
aaa
outsl
fimuls
ds
popl
insl
mov
je
out
bound
shrd
imul
push
lea
lret
out
out
mov
dec
jnp
jnp
pop
mov
jl
sbb
js
loop
and
sbb
outsl
in
lcall
fisubrl
dec
jae
scas
inc
in
sub
fsts
addr16
cld
stc
repz
mov
loopne
fwait
sahf
hlt
jmp
out
push
bound
mov
cld
pop
inc
sbb
repz
mov
clc
popa
imull
mov
jp
and
aaa
in
adc
xor
out
fwait
aaa
pop
add
in
test
jns
pop
lret
dec
dec
int
adc
cmp
aaa
outsl
aas
jle
aam
cmp
divb
sbb
dec
clc
sub
dec
xchg
aas
jg
push
add
shl
fs
in
xor
out
lahf
inc
das
in
std
shll
mov
cld
stc
xchg
cs
jmp
insl
test
or
repz
jg
dec
addr16
mov
dec
cld
jmp
out
add
mov
ficoms
jne
push
jmp
cmp
in
rolb
pop
push
int3
scas
loop
jge
daa
jg
jno
push
iret
into
pop
pop
add
out
mov
inc
push
or
and
ds
repz
notb
dec
ss
imul
stc
repz
mov
jp
wrmsr
or
daa
aas
jg
imul
mov
pop
add
dec
xchg
aaa
rol
push
negl
and
mov
mov
loope
and
sarl
inc
mov
mov
out
xchg
lahf
jg
fmul
add
push
out
mov
adc
adc
repz
fwait
add
push
and
fistpl
push
insb
fidivrs
loop
inc
pop
aad
inc
fnstsw
in
mov
mov
jb
jmp
imul
cmpsl
ljmp
sub
iret
lahf
aas
xor
int
lea
jbe
stc
cld
stc
repz
rcl
das
jle
or
inc
push
out
aas
sbb
add
and
pop
sbb
jg
cld
stc
popf
mov
xchg
jge
mov
and
xchg
lahf
aas
push
push
inc
push
lret
push
enter
in
orb
dec
xchg
fwait
aaa
out
cmpsl
sub
sbb
in
inc
mov
sbb
cld
loope
mull
iret
jo
test
loope
outsl
out
lahf
aas
dec
inc
xchg
ret
mov
in
cld
stc
repz
fwait
shrb
mov
and
jg
andb
xchg
nop
rcr
push
int
ja
incl
mov
bound
mov
push
mov
int
je
dec
xchg
popa
fdivl
shll
add
mov
xor
dec
loopne
sbb
xor
fidivrs
lret
std
jecxz
sbb
je
test
mov
mov
hlt
jg,pt
lock
mov
adc
ja
jg
aad
or
out
repz
push
insb
sub
jne
ss
or
test
outsl
inc
cld
cld
fdivl
pop
mov
stc
repz
pusha
xchg
movsb
rorl
pushf
inc
sub
adc
cld
cld
stc
push
pop
stc
add
pop
cmp
add
clc
inc
repz
lahf
shrl
lds
jg
cld
stc
sbb
lret
sbb
out
outsb
pminsw
lahf
aas
lret
int3
rcr
mov
inc
paddd
stc
repz
cmp
jno
cltd
push
cmp
jnp
lahf
aas
jg
jmpw
out
js
test
sar
stc
repz
js
adc
dec
xchg
aas
jg
into
mov
or
out
test
dec
mov
xchg
aas
mov
inc
into
pop
mov
pop
popf
push
lahf
cld
cld
js
cwtl
leave
adcb
iret
lahf
mov
mov
insb
push
call
repz
lcall
sbb
mov
out
aas
jg
xor
pop
aad
mov
test
mov
pop
inc
push
mov
xor
sbb
xchg
push
cmp
push
xor
fwait
aaa
outsl
ficomps
sub
aad
ret
sti
aas
ljmp
jno
idivb
out
lahf
mov
fnstsw
rclb
adc
jg
cld
stc
std
mov
inc
aad
mov
lret
aad
push
jp
repz
paddq
test
jl
repz
sahf
add
notl
out
lahf
jecxz
rcrb
lods
sub
loopne
push
stc
stc
iret
dec
lret
xor
mov
xlat
pop
jnp
test
cli
movsl
mov
aaa
outsl
ficomps
aaa
es
or
jns
out
mov
sti
test
notb
ss
out
jns
sbb
int3
pop
nop
gs
out
jp
inc
outsb
fcompp
movsl
mov
push
pop
push
icebp
jge
mov
xchg
jmp
cmp
adc
je
mov
iret
lahf
aas
jg
fptan
push
lret
add
lahf
sbb
repz
dec
push
loop
and
enter
aas
jg
add
inc
mov
dec
stc
repz
or
les
mov
arpl
je
xchg
mov
jmp
aas
stos
jmp
outsl
fiadds
popf
xor
push
jbe
lock
repz
fwait
xchg
mov
adc
sbb
loope
outsw
fidivrs
int3
mov
scas
repnz
pop
ss
cld
mov
push
out
xchg
inc
ja
cmp
mov
and
test
mov
stc
repz
push
dec
cmp
add
pop
repz
mov
bound
adc
fwait
sbb
and
xchg
jne
push
cmpsl
repz
lahf
mov
and
sub
stc
inc
inc
sbb
gs
adc
push
and
inc
mov
xchg
hlt
push
daa
dec
inc
popa
in
sub
mov
ret
repz
in
int3
fildll
pop
sbb
jno
fwait
aaa
outsl
dec
mov
adc
pop
sbb
jb
out
sub
mov
jmp
syscall
mov
repz
jp
nop
scas
push
mov
push
aaa
outsl
fidivrs
pushl
sbb
ffree
push
cld
rcll
sub
in
pop
lahf
nop
sbb
pushl
aas
mov
call
dec
xchg
pop
inc
outsb
fidivrs
gs
jmp
int
addb
add
mov
fidivrs
inc
add
inc
and
mov
fwait
aaa
outsl
ljmp
cmp
pop
pop
jecxz
cmp
repz
cli
aaa
add
out
cmp
cld
sbb
jge
mov
cmp
pushf
xor
loop
dec
repz
fwait
xchg
test
popf
out
adc
es
outsl
fidivrs
mov
and
push
push
stos
out
fwait
aaa
xor
enter
dec
xchg
fdivrl
push
dec
inc
imul
outsl
mov
rclb
add
out
fwait
scas
push
mov
fcoml
fildll
mov
xchg
pop
movsb
gs
lret
mov
imul
enter
int
aaa
call
sbb
ds
stos
push
jmp
fs
stos
pushf
imul
inc
inc
pop
mov
jnp
jg
mov
dec
mov
xlat
xor
cmpsb
jb
jns
iret
lahf
jae
movsl
pop
mov
inc
and
insb
aam
sbb
xchg
shl
add
cld
sti
leave
xchg
jae
sbb
gs
xor
or
lahf
aas
sub
jb
cmp
popa
ss
loopne
bound
xchg
xor
or
dec
mov
push
incl
dec
xor
outsl
fisubrs
popf
daa
xor
pop
repnz
cld
stc
ret
add
xor
pop
cli
cli
es
lahf
aas
jg
pop
ljmp
pop
sbb
repz
fbstp
jae
ficoml
pusha
addr16
dec
sub
adc
mov
push
cld
stc
repz
pop
or
sbb
pop
movsb
mov
mov
lahf
outsl
filds
mov
test
out
or
or
dec
lods
xor
mov
pop
lahf
pop
sub
daa
dec
shlb
inc
ret
pop
jb
scas
mov
aaa
xchg
pop
xchg
sub
repz
fnstenv
subl
iret
mov
xor
fsubr
arpl
loop
inc
cld
stc
cmp
xor
leave
push
adc
int
pop
rclb
ffreep
sbb
cmpsb
mov
je
ret
mov
scas
and
mov
push
dec
xchg
aam
dec
out
out
sbb
sahf
rcll
push
leave
fdivrl
mov
xchg
shl
mov
pop
shrl
add
div
pop
inc
dec
faddl
xor
mov
adc
pop
jg
cld
stc
ret
lahf
cmpl
pop
std
in
test
push
ljmp
icebp
in
std
xlat
fidivrs
xor
dec
in
call
fcmovne
sbb
insb
mulb
xor
pushf
mov
aaa
out
mov
rolb
addr16
jecxz
dec
ret
imul
fwait
dec
sub
adc
das
sub
aaa
outsl
test
push
jns
mull
aam
ds
std
jno
out
fldt
xor
inc
lahf
mov
mov
or
xchg
inc
std
inc
pop
mov
add
jl
subl
mov
add
ljmp
inc
jp
mov
aaa
outsl
fidivrs
jge
mov
xchg
fwait
cwtl
inc
xchg
and
pop
mov
ret
mov
cwtl
xor
rcl
das
mov
mov
int
aaa
and
push
out
xchg
mov
push
fs
daa
mov
inc
pop
fldenv
les
mov
imul
mov
icebp
test
lret
fwait
aaa
dec
cmp
mov
testb
cmp
xlat
dec
jo
dec
outsl
stc
xchg
jns
out
ss
jp
loope
xor
fistpl
outsl
fimuls
mov
lahf
jg
pop
cmp
and
decb
mov
pop
cs
dec
pop
jl
enter
cmp
dec
jp
fcomi
jnp
les
cmp
repz
movsl
adc
hlt
icebp
sti
out
pushf
push
andb
cld
sbb
or
push
inc
sbb
cld
cmpb
sbb
rol
pop
es
lods
sbb
pop
ja
in
repz
fwait
testl
aaa
push
xor
mov
test
sub
pop
jo
daa
pop
push
jge
cld
addl
mov
call
mov
add
in
rclb
vmwrite
out
jmp
and
ss
jb
enter
xor
mov
xchg
sbb
mov
fs
mov
repz
xchg
fwait
stos
xor
sub
xor
xchg
mov
mov
xor
fidivrs
mov
sbb
fwait
aaa
arpl
pop
lahf
pop
cmpl
repz
cs
mov
mov
sub
outsl
jo
aaa
push
jno
fsubrl
mov
mov
xchg
adc
out
and
lcall
adc
jg
xchg
arpl
aaa
arpl
cld
stc
push
orl
dec
mov
mov
aas
jg
cli
cmp
popa
mov
pop
in
pop
aaa
xchg
pop
enter
sub
mov
out
pop
xchg
sbb
push
nop
pop
push
jno
adc
bound
jl
cld
jl
jnp
insb
xchg
psubsb
push
fwait
aaa
out
mov
mov
or
repz
inc
hlt
popf
or
sarl
jl
aaa
outsl
fidivrs
jmp
xchg
xchg
mov
mov
xchg
fwait
jmp
mov
fidivrs
mov
icebp
std
mov
cmpsb
lock
insb
pop
cld
andl
cld
out
loopne
popf
push
push
pop
lahf
jg
jb
mov
iret
inc
sub
dec
nop
loopne
repz
addr16
je
insl
jnp,pt
out
mov
add
push
mov
js
pop
iret
or
xchg
lahf
fcmove
cmp
dec
mov
pop
adc
xchg
lahf
aas
sbb
in
lret
rcr
fstl
mov
in
icebp
shr
fbld
cmp
stc
repz
mov
cli
insl
movsl
dec
sahf
and
jg
aas
jg
cld
ret
js
lods
repz
mov
mov
jle
repz
lahf
call
dec
cmp
sub
jg
cld
stc
pop
inc
add
mov
shll
out
jmp
lahf
aas
cli
mov
push
dec
fs
repz
or
jle
jbe
cmp
or
lahf
aas
jg
xlat
jl
add
add
stos
aaa
cld
stc
repz
dec
adc
call
call
and
jg
xlat
aam
adc
sub
cld
scas
lcall
push
seta
cmp
imul
repz
mov
repz
xchg
movsl
in
std
enter
pushf
dec
loopne
outsb
mov
shl
out
fwait
inc
push
mov
sti
sub
cmc
pop
inc
fidivrs
add
movsb
jmp
aam
sub
mov
outsl
fiadds
cmpsl
xchg
stc
fs
dec
mov
aas
cmp
mov
mov
or
pop
fiaddl
push
in
add
data16
mov
enter
lock
xchg
mov
mov
or
cmp
push
jns
out
mov
test
iret
mov
jo
xor
outsl
fidivrs
imul
loope
into
jmp
or
dec
push
enter
fidivrs
daa
clc
icebp
pop
shrl
jbe
popf
fbld
fwait
aaa
outsl
imul
push
pop
mov
repz
xorl
cmp
outsl
fidivrs
cmp
scas
jae
xchg
adc
shll
jae
addr16
cli
cltd
fidivrs
mov
outsl
das
and
arpl
pushf
fwait
rcll
xor
push
repnz
add
jg
cld
stc
sbb
sbb
inc
and
aad
cmpb
iret
lahf
aas
mov
xchg
je
pop
fists
push
lock
lea
lds
inc
fucom
repz
aaa
and
fwait
aaa
inc
outsl
cmpsl
push
das
stos
push
mov
enter
call
movb
stc
repz
xor
lock
jle
mov
xchg
or
jg
cld
adc
fnstsw
out
mov
sub
lahf
mov
testb
jmp
mov
out
lahf
popf
lds
scas
push
push
sbb
stc
negb
mov
push
rolb
fmuls
iret
lahf
aas
sbb
pushf
sahf
sarb
cltd
adc
jge
loop
and
outsl
fiadds
push
repz
lock
iret
aad
repz
fistps
outsb
out
inc
arpl
into
in
int3
xchg
repz
ds
lahf
sub
pop
jl
mov
mov
sub
stc
stc
cmp
jbe
iret
mov
out
xlat
or
pushw
inc
xor
sbb
test
cmc
insb
mov
jg
outsb
fidivrs
ret
jno
mov
cld
stc
inc
fistpll
jmp
test
iret
lahf
aas
jg
pop
push
sub
adc
jp
dec
mov
stc
repz
jae
xor
js
ljmp
jg
fistps
sbb
inc
sub
mul
iret
inc
test
hlt
filds
jg
cld
pop
insb
xor
in
mov
fnsave
lahf
pop
es
lahf
push
push
dec
nop
or
push
sub
stc
inc
call
inc
pop
mov
adc
xor
iret
lahf
aas
fstpl
nop
nop
xor
mov
enter
adc
fistps
out
std
hlt
clc
fdivp
repz
out
add
out
dec
push
outsl
fidivrs
mov
enter
popf
mov
int
aaa
jno
test
add
das
xor
out
mov
fisubs
inc
cmc
inc
or
decb
inc
add
lret
jbe
inc
cmp
repz
inc
push
gs
mov
jg
cld
stc
repnz
add
push
xor
rcrb
and
iret
lahf
aas
std
push
fsub
outsl
jge
mov
fucomi
pop
add
into
add
cwtl
out
mov
jp
jmp
mov
loop
adc
aas
ret
mov
mov
mov
inc
outsl
mov
adc
pushl
cld
stc
and
sub
int3
negl
enter
pop
outsb
inc
insl
inc
cmpsl
xlat
mov
dec
cld
stc
repz
inc
out
cmp
scas
stos
fildl
pop
cmpsb
jo
lahf
aas
jg
inc
jns
ret
sar
and
push
xchg
rol
enter
jl
add
mov
xor
out
roll
jns
out
add
and
cmpsl
jae
mov
inc
int3
jne
dec
aaa
outsl
fidivrs
test
fmul
shrl
ja
inc
push
testb
hlt
sub
mov
push
out
stos
and
movsl
rol
ljmp
mov
jle
cld
sbb
cld
scas
or
ljmp
jp
adc
in
lahf
mov
or
mov
sub
repz
push
aaa
test
ds
jb
outsl
fidivrs
or
mov
outsl
inc
add
shlb
shlb
aaa
lcall
dec
fs
xchg
int
ret
cmp
sahf
rol
fidivrs
sbb
das
in
and
pop
int
aaa
outsl
jle
fisubs
push
test
mov
out
sub
aam
dec
or
insb
xchg
leave
jbe
mov
pop
movl
out
mov
cmp
jns
sbbl
sub
sbb
xchg
xchg
cmc
xchg
mov
lds
lcall
repz
data16
mov
and
enter
mov
xor
decl
sbb
jns
out
ret
or
orb
dec
inc
aaa
outsl
fidivrs
push
mov
movb
pop
jae
repz
fwait
pop
mov
into
cmp
in
jo
push
imul
stos
rcrb
mov
cmpsb
or
iret
lret
clc
add
and
insl
and
fbstp
outsl
fidivrs
and
in
jb
in
adc
and
push
adc
xor
mov
push
call
push
aas
stc
mov
in
daa
push
es
dec
lods
xchg
fcoms
popa
push
data16
aas
cmp
lea
fisttps
hlt
shlb
out
jo
cwtl
cmp
aas
inc
iret
sbb
lds
or
pop
add
jns
out
xlat
insb
add
ljmp
ret
fidivrs
call
jmp
hlt
xchg
int
bound
xor
xor
gs
call
pop
inc
push
cmp
jne
push
fwait
mov
push
int
aaa
outsl
ficompl
lds
mul
fldenv
out
inc
sub
mov
pop
inc
enter
aaa
outsl
fdivp
fdivrs
pop
or
push
js
repz
xchg
dec
ljmp
mov
decl
dec
push
movsb
inc
cmp
fcomi
out
lahf
sbb
in
mov
mov
fbld
cmp
inc
mov
ds
push
pop
inc
xchg
lahf
aas
and
adc
insb
out
pop
dec
das
sbb
lahf
in
jns
out
xor
addr16
aad
ss
cmp
aaa
outsl
fidivrs
out
cli
ds
add
or
sub
scas
mov
ja
xchg
stos
cmp
pop
or
aaa
outsl
fdivrp
xchg
xor
sbb
inc
mov
push
scas
push
mov
jns
out
rorb
xor
out
cmp
add
fdivrp
mov
shrl
fisttps
fdiv
sbb
aaa
xor
sbb
push
fidivrs
shll
dec
inc
fadd
inc
loopne
fwait
aaa
outsl
inc
jmp
jecxz
call
push
xchg
rcll
mov
jp
into
add
push
pop
ja
push
pop
xor
aaa
outsl
faddp
mov
mov
nop
shrl
jns
out
shlb
pop
xchg
mov
mov
fidivrs
adcl
xlat
cld
stc
repz
scas
and
mov
ret
mov
aaa
inc
aas
stc
lahf
cmp
in
and
jg
add
int
jmp
daa
aaa
out
mov
push
xor
inc
push
addr16
fwait
in
inc
xor
jl
inc
dec
cmp
mov
outsl
fidivrs
outsl
mov
inc
sub
int
aaa
and
adc
les
jp
mov
pop
dec
hlt
fwait
aaa
outsl
add
lret
add
insl
cmpsl
fwait
arpl
out
fstps
pushf
aas
and
ficomps
fdivrl
and
int
in
add
fcmovnu
testl
fidivrs
adc
lret
and
enter
aad
dec
outsl
roll
dec
out
sbb
into
shrb
clc
mov
pop
pop
inc
xor
jno
iret
leave
loop
cld
jmp
ret
jle
pop
orl
les
out
test
pop
das
xlat
pop
jae
arpl
sbb
daa
out
shll
ret
mov
sbbl
cld
in
popa
mov
cld
out
aaa
lret
es
aaa
aas
outsl
outsb
sub
push
pop
push
insb
or
cmp
out
jnp
push
dec
int3
xor
jl
mov
dec
insl
insb
outsl
fidivrs
ss
clc
jbe
repz
inc
sbb
fs
lock
adc
repnz
cmp
dec
jg
aaa
outsl
fisubrs
mov
inc
popa
scas
das
jnp
fisubl
mov
movsb
popa
stos
shlb
out
pop
aaa
outsl
fidivrs
clc
push
mov
jnp
sub
lds
dec
and
pop
mov
xchg
in
out
lahf
aas
int
subb
mov
cld
stc
repz
xorb
inc
xor
mov
adc
lahf
aas
jg
imul
xchg
bound
add
popf
jl
mov
into
xor
xchg
inc
jle
out
movsb
and
add
aad
jge
popa
aaa
cli
mov
jmp
outsl
fidivrs
int
dec
cmp
fidivrs
ja
and
icebp
cmp
stos
sbb
out
rcr
fld
push
mov
jl
cmp
cmp
ficoml
jg
js
repz
xchg
iret
lahf
aas
mov
push
sub
shlb
inc
pop
cld
stc
repz
mov
add
xor
pop
mov
jg
cmp
xchg
sbb
in
aad
hlt
lahf
gs
in
mov
push
lods
hlt
push
xchg
xor
sbbb
add
push
lods
sbbb
lret
cwtl
int
aaa
outsl
aaa
test
icebp
in
mov
addr16
jp
cli
enter
lods
gs
xchg
xchg
outsl
lret
xchg
leave
mov
push
andb
fidivrs
dec
sbb
mov
pop
mov
inc
mov
adc
add
and
pop
out
xchg
cmp
fadds
sahf
ljmp
fidivrs
pop
adc
cmpsb
push
and
lods
inc
cld
jmp
loope
jge
pop
das
pop
xor
rcrl
and
dec
dec
test
dec
xor
xchg
stos
popa
addb
push
stc
movsb
fadds
arpl
aas
scas
add
mov
jg
xchg
and
imul
icebp
pop
stos
mov
out
add
push
fwait
inc
or
mov
movsb
jns
xchg
lea
inc
and
jne
jle
popf
adc
mov
icebp
hlt
sbb
cmp
inc
bound
scas
aad
cmp
out
inc
sub
sbb
shlb
aam
ret
mov
dec
scas
dec
push
in
push
dec
dec
cld
cmp
push
cmp
aas
icebp
enter
mov
popf
jle
fsubr
xor
lahf
adc
int
addr16
cld
stc
jo
fisttpll
in
loopne
push
lods
dec
fucom
out
aam
out
lahf
aas
je
and
movsl
stc
movsb
pop
int
scas
in
repz
fldcw
stos
xchg
out
shrl
push
inc
mov
repz
icebp
pop
aam
pop
dec
pushf
pusha
jl
or
fwait
aaa
outsl
jbe
lret
adc
outsb
movsl
fprem
mov
repz
test
jne
aas
popa
test
test
ficoms
scas
roll
ret
je
jge
sti
inc
adc
repz
xchg
pop
pop
mov
push
aad
sbb
mov
cwtl
lea
scas
pop
imul
aaa
sub
adc
mov
lods
push
pop
cmpsl
stc
jnp
push
jae
repz
fwait
stos
in
packuswb
addr16
mov
sub
adc
inc
pushf
cltd
xor
aam
and
inc
jne
fwait
aaa
outsl
lret
aaa
mov
pop
in
fnstsw
mov
pop
inc
mov
add
ja
aaa
outsl
fisubs
jbe
xchg
mov
mov
jne
jns
out
sti
jbe
inc
jae
jmp
lock
cmp
add
aas
outsl
fidivrs
ljmp
inc
jecxz
out
fwait
aaa
popaw
adc
jmp
les
repz
lret
int3
xchg
enter
aaa
push
or
outsl
andb
out
jae
adc
add
mov
loopne
ds
popf
test
movsb
pop
scas
adc
dec
insl
flds
fisttpll
cmp
arpl
jae
jmp
int
push
leave
sub
je
outsb
push
mov
outsl
fidivrs
and
lahf
push
test
repz
fwait
dec
mov
cmpsb
jno
in
stc
sbb
outsl
fidivrs
lods
cs
mov
arpl
int
aaa
jno
mov
xchg
leave
mov
mov
cs
in
call
mov
int
aaa
outsl
ret
std
out
into
ljmp
jg
out
insb
iret
push
jnp
bound
ds
stc
repz
in
add
dec
adc
adc
iret
cmpsl
push
fildll
push
dec
add
sub
or
or
xor
sub
sub
lahf
aas
cs
push
mov
fmul
jb
pop
pop
sbb
lea
pop
mov
mov
or
and
jg
pop
adc
jae
lahf
mov
enter
mov
fwait
inc
sbb
repz
cmp
loope
sti
cltd
gs
popa
xchg
int
aaa
outsl
xchg
call
fidivl
mov
pop
ss
cmp
out
jg
pop
xchg
nop
mov
and
repz
iret
push
and
xchg
hlt
and
inc
aas
jg
cld
outsl
or
in
and
jno
in
pop
iret
lahf
pop
sahf
jnp
out
pop
fs
cld
stc
repz
jbe
pop
adc
mov
aas
jg
adc
and
roll
stc
movsl
stc
repz
fnstsw
fimull
push
loope
mov
xor
push
sub
jg
cld
in
imul
pop
test
outsl
adc
daa
add
repz
lahf
hlt
enter
stc
cmc
cmc
lcall
xor
sbb
outsb
add
and
imul
mov
jg
xchg
sahf
xchg
pop
push
pusha
addr16
mov
repz
ljmp
cmc
cld
jmp
inc
fidivrs
repnz
jns
jl
push
xlat
loope
testb
fstpl
or
mov
sub
push
daa
ds
jns
out
mov
call
int3
fmulp
push
mov
mov
movsl
out
popf
leave
sbb
ja
sti
movsb
inc
repz
fwait
xchg
cld
and
les
icebp
loopne
inc
cmp
pop
movsl
outsl
movsb
xlat
cmc
js
xchg
aaa
outsl
fidivrs
mov
mov
inc
mov
rclb
fwait
imul
dec
mov
or
pop
xchg
dec
and
daa
mov
lea
negb
jne
out
sbb
dec
or
sbb
cltd
fidivrs
mov
mov
mov
movsl
jbe
ror
aaa
outsl
jg
xor
cs
ja
iret
mov
adc
and
push
clc
test
outsl
ficoms
jp
cmp
adc
add
repz
js
mov
or
xor
outsl
fidivrs
loope
pop
shrb
inc
mov
lcall
cmp
cld
sub
push
mov
enter
inc
repz
mov
xlat
loopne
push
jb
add
mov
pop
icebp
subl
add
pop
out
fwait
aaa
in
test
or
xchg
ja
and
mov
enter
call
das
stc
repz
ds
bound
insl
daa
inc
inc
dec
xchg
adc
fcoml
cmp
lcall
sbb
cld
stc
push
nop
idivb
test
mov
repz
lret
es
jp
out
xchg
pusha
dec
cmp
mov
jns
scas
aaa
push
mov
leave
sarl
outsl
ficoms
test
sub
jmp
cmp
outsb
mov
int
mov
pop
mov
outsl
jl
outsl
fidivrs
mov
pushf
mov
jmp
int
xor
mov
es
insb
xchg
jmp
loop
out
outsb
inc
xchg
aaa
outsl
fiadds
mov
aas
pop
xor
lcall
je
and
mov
xchg
dec
daa
aaa
outsl
fidivrs
out
stc
sarb
filds
stos
adc
sbb
sbb
leave
pushf
movl
xchg
incb
cli
fs
and
fidivrs
adc
loop
clc
push
imul
test
ret
jae
push
pushf
xor
repz
mov
stc
movsl
mov
lcall
outsl
fidivrs
xor
lods
fistpll
xor
sbb
cmc
enter
cli
jle
pop
fld
sub
or
and
xchg
push
iret
int
aaa
outsl
aaa
mov
in
shlb
mov
repnz
imul
xchg
mov
jo
add
sub
pop
and
clc
push
add
out
add
repnz
jo
add
ret
add
jo
adcb
push
jo
adc
bound
jo
mov
rcr
mov
push
fs
mov
pop
add
pop
in
xchg
and
xchg
cmp
inc
sub
add
mov
jg
cmpsl
je
add
iret
adc
dec
adc
add
jo
scas
push
jo
add
and
sbb
push
sahf
dec
add
divl
add
ja
aas
adc
jge
xor
add
or
xor
jo
jo
xchg
fwait
or
jns
or
adc
jo
jo
or
xchg
lahf
jo
inc
decb
add
scas
addr16
cmp
add
addb
sub
cmp
repnz
shl
xor
jg
add
stc
push
xchg
aaa
inc
sbb
jo
jo
rorb
xlat
add
jo
adcb
test
ror
pop
sub
or
add
jo
addb
jo
push
and
repnz
sbbb
add
mov
aas
add
stc
jmp
xchg
lcall
stc
stc
push
jo
mov
addr16
inc
cmp
inc
push
add
aam
movsb
add
and
add
adc
jecxz
cmp
stc
mov
imul
ret
pop
push
jo
lahf
aas
jae
rcrl
add
jo
xchg
cmp
mov
dec
stos
dec
fists
inc
add
jo
and
push
dec
dec
aas
inc
or
adc
jo
jo
or
xchg
outsl
jo
add
ret
jo
adc
add
and
mov
xlat
cli
and
push
jo
mov
pop
ror
add
add
repnz
jo
test
cltd
cltd
test
outsl
jo
adc
repnz
add
jne
movsb
jo
and
adc
daa
add
stos
add
add
scas
jo
pop
sub
cli
jo
stc
stc
push
cmpsl
fwait
mov
pop
cmp
add
jo
xchg
fwait
aaa
pop
in
popa
addr16
jp
aas
decl
jo
lock
add
or
jo
xchg
inc
jle
jo
fildll
sub
mov
cwtl
jo
add
sub
jo
inc
cld
mov
fnstcw
ret
cmp
or
jo
stos
add
mov
sbb
mov
xor
add
xchg
or
jo
adcb
jnp
sub
outsl
mov
xchg
push
add
jb,pn
cmpsb
jo
add
xchg
sbb
enter
or
add
outsl
xchg
aas
adc
int3
inc
pop
iret
lahf
or
jo
hlt
pop
in
dec
addb
in
xor
jo
repz
jg
pop
pop
jp
add
out
int
aaa
adc
mov
add
in
mov
jl
lds
sbbl
aaa
dec
dec
mov
fwait
aaa
outsl
fisubrs
daa
cmp
addr16
jnp
ljmp
cltd
pushw
cmc
or
rcll
out
cld
mov
mov
subl
mov
test
lahf
aas
jg
iret
mov
mov
or
mov
sub
repnz
nop
adc
jno
xor
add
sbb
clc
or
mov
mov
xor
cld
jnp
enter
cli
xchg
mov
cmp
inc
jle
mov
clc
cmp
push
cld
imul
das
push
test
insl
das
sub
pop
push
pop
aaa
outsl
fiadds
jnp
push
mov
cmp
repz
fwait
std
xor
pop
outsl
mov
add
ficoms
fs
pop
xor
scas
aas
push
scas
rolb
rolb
mov
push
ficoms
pop
xchg
and
addr16
pop
dec
xchg
fwait
aaa
outsl
lret
mov
sub
sbb
xchg
aaa
rclb
sub
leave
fcmovnb
aam
and
mov
or
das
rsqrtps
out
mov
mov
jne
lods
insb
push
clc
lahf
aas
jg
jne
movsb
inc
mov
pop
adc
cmp
mov
adc
repz
sbb
sub
test
divl
lret
mov
test
push
sarl
jg
std
jo
iret
loopne
mov
nop
aaa
out
mov
jge
and
mov
out
fcmovu
jb
or
mov
flds
lock
add
fildll
adc
stc
ret
xor
divl
add
xchg
mov
insb
cmp
lahf
aas
jg
int
int
fsubrl
jne
std
fwait
orl
push
out
jns
push
or
icebp
sub
lahf
jg
mov
icebp
lcall
pop
inc
and
out
or
jnp
xchg
mov
push
in
icebp
jle
cld
stos
jns
das
xchg
push
test
inc
insb
out
call
iret
inc
ljmp
jge
gs
ja
push
jg
or
lods
add
xchg
inc
dec
adc
jg
mov
insb
in
push
push
rcll
pop
shlb
mov
sti
enter
out
or
mov
ficoms
addr16
push
lods
inc
sbb
sti
pop
jg
push
lahf
outsl
movl
mov
dec
loop
lahf
aas
lret
scas
push
shlb
mov
mov
jl
aad
mov
setg
jge
pop
xorl
jmp
cld
stc
inc
outsl
and
jg
fcomps
repnz
dec
iret
lahf
aas
jl
mov
cmc
and
les
cmpsl
ds
ror
addr16
jge
mov
les
aas
cld
movsb
repnz
lahf
mov
popa
cmpsl
popa
jecxz
add
push
repnz
and
insl
push
out
gs
mov
sbb
add
add
ficoms
subl
sub
out
and
mov
adc
fwait
jmp
jg
int3
cmc
and
jbe
jns
xchg
inc
cmpsl
sub
adc
les
inc
outsl
lret
inc
outsb
fidivrs
add
mov
adc
repz
mov
jo
and
test
xchg
pusha
dec
jmp
jns
ja,pn
ret
sbb
dec
test
outsl
fimuls
mov
testl
dec
lock
xlat
jne
inc
aaa
add
ss
fidivrs
xchg
mov
pop
repnz
ja
cwtl
in
jl
sbb
test
loopw
push
jmp
lcall
xchg
leave
push
xor
aad
repz
stos
or
clc
movsb
leave
or
and
out
arpl
sub
iret
lcall
mov
outsl
fnsave
int
aaa
outsl
cmp
pushf
mov
lahf
movsb
jns
out
stc
daa
pop
xchg
pop
in
shrl
divw
out
sub
cwtl
and
outsl
jbe
cld
repnz
and
hlt
xchg
int
dec
and
int3
sahf
adc
pop
aaa
jnp
imul
movsb
mov
adc
aaa
outsl
fidivrs
xor
lretw
repnz
repz
fwait
xchg
aad
in
lcall
nop
outsl
fidivrs
jmp
push
and
cltd
hlt
adc
int
aaa
add
iret
and
add
inc
sub
mov
push
or
mov
inc
mov
fwait
aaa
outsl
sti
popw
orl
pop
push
push
fidivrs
xlat
xchg
add
roll
das
popa
xlat
int
addb
inc
inc
ja
lcall
out
add
xor
rolb
rcl
adc
jnp
iret
sbb
fs
pop
mov
popf
jge
imul
jle
cmpl
pop
mov
push
repz
insb
pop
in
daa
in
xchg
sbb
cli
sub
stc
in
cmc
push
fmull
fstp
jmp
repz
cltd
pop
faddl
cli
push
cmp
and
mov
jle
push
inc
sbb
movsb
xlat
inc
ja
and
inc
adc
xchg
insb
inc
outsl
mov
int
sbb
and
in
mov
push
inc
lods
and
inc
mov
movsb
es
les
stc
sbb
rcrl
xor
xchg
jb
in
out
and
sub
push
nop
jnp
iret
lahf
jg
imul
mov
adc
aaa
push
pop
inc
cmp
repz
push
mov
inc
cmpsl
mov
jo
outsl
ficoms
pop
fidivrl
or
in
ljmp
popa
or
daa
movsb
mov
fsubp
sbb
stc
rcll
in
sti
test
mov
adc
rcl
push
loop
int
aaa
out
mov
inc
icebp
movb
and
inc
out
xor
inc
lcall
push
add
lahf
aas
jg
push
fdivrl
sarl
or
div
lcall
inc
push
ja
test
sub
jg
cld
stos
lcall
sub
mov
rorl
sbb
sbb
pop
hlt
inc
add
fdivrl
mov
fstl
mov
fimuls
pop
adc
scas
add
repz
mov
mov
mov
stos
insl
std
sbb
fwait
aaa
outsl
dec
sbb
xchg
xor
mov
add
jns
out
rolb
jne
or
inc
xor
ficomps
jbe
add
mov
ret
out
xchg
leave
inc
xor
insl
fcmovne
pop
leave
sbb
ljmp
hlt
inc
divps
jmp
out
lahf
aas
xor
pop
cltd
pop
or
lret
pop
cld
stc
repz
das
pop
jnp
lret
xchg
push
mov
adc
or
and
lahf
aas
jg
sbb
cwtl
cmc
mov
f2xm1
into
cld
stc
repz
stc
mov
into
push
enter
and
mov
cmc
inc
mov
dec
sbb
and
iret
mov
jge
push
pop
repz
pushf
add
add
jnp
mov
jmp
aaa
outsl
fisubrs
lret
add
or
rol
mov
cmp
dec
jns
out
or
cmp
lret
sti
dec
pop
bound
outsl
fidivrs
dec
inc
cmpsl
fistpl
ds
add
fwait
iret
in
adc
fidivrs
shll
inc
jne
clc
xor
pop
push
das
mov
fwait
aaa
outsl
xchg
and
xchg
lock
ja
loop
insb
iret
dec
pusha
loope
mov
imul
dec
pop
inc
pop
inc
or
push
and
stos
cltd
mov
fidivrs
cmpsb
test
sub
int3
out
mov
stc
daa
mov
cli
push
mov
repz
fisubl
and
adc
lret
mov
mov
inc
jle
imul
cld
stos
aad
push
lea
stc
xchg
pushf
iret
lahf
aas
jg
cmpsl
lods
test
sub
out
incb
lock
push
push
inc
pop
in
sub
jg
sub
adc
cltd
mov
lcall
out
std
fldz
xor
lock
mov
cld
inc
enter
jecxz
fcmovnb
lds
into
mov
lahf
adc
jnp
dec
imul
or
xor
sbb
ja
enter
mov
xchg
int
mov
push
mov
and
loop
jne
mov
xchg
lret
inc
sub
out
insb
xor
cmpsl
inc
sbb
int
aaa
outsl
sti
xchg
loope
add
jp
ficoms
enter
xchg
ss
movsb
aam
enter
fisttpll
xor
pop
lahf
and
dec
fcoml
dec
jmp
mov
jns
imul
adc
imul
push
outsl
sti
loopne
xchg
out
xchg
into
mov
push
fdivrl
movsb
pop
stc
sbb
cmpsw
shlb
shll
aaa
outsl
ficomps
dec
push
or
enter
int
call
inc
out
xor
jns
out
xor
dec
jns
jle
bound
int
xchg
lret
sbb
out
jge
stc
xchg
xchg
jo
leave
out
cmp
xchg
mov
mov
mov
and
aam
mov
dec
insl
test
nop
fistpl
xchg
xchg
lret
adc
loopne
mov
stc
repz
ja
pusha
and
cmp
sub
or
popf
js
cwtl
dec
fstl
xchg
aaa
shlb
or
fs
addr16
cwtl
std
xchg
sbb
fwait
aaa
out
mov
jmp
inc
pop
mov
mov
xchg
clc
inc
bsf
mov
fwait
aaa
outsl
fsubp
rcl
cmc
cwtl
xchg
cmpl
nop
in
xlat
in
repnz
movsb
mov
and
adc
and
or
js
inc
adc
arpl
aaa
outsl
fsubp
mov
pop
lea
xchg
lahf
stos
mov
sub
mov
call
pop
jnp
in
xchg
cmp
mov
push
xor
dec
lahf
xchg
daa
stos
xchg
pop
inc
ja
repz
call
call
stos
xor
pop
lcall
xor
cs
or
mov
sti
dec
xchg
mov
shl
repnz
mov
adc
fistl
out
push
pop
and
in
imulb
mov
fmuls
mov
dec
cmp
les
jl
fdivs
ret
push
or
cmc
jnp
sbb
jns
scas
pop
jle
negl
xor
push
out
dec
cmpsl
arpl
mov
rcll
nop
and
or
sub
das
lahf
insb
fidivrs
lea
jbe
xchg
add
clc
leave
out
outsl
std
inc
push
jge
mov
mov
repz
ja
add
cmp
xor
fwait
ja
jge
jp
imul
mov
jns
out
inc
mov
jmp
xchg
jbe
cmp
movsb
shld
inc
cmp
dec
xor
icebp
leave
scas
mov
pop
jl
fdivrl
or
addr16
test
lea
int
sub
cwtl
pop
fs
flds
icebp
leave
out
dec
xchg
lahf
aas
ds
or
dec
clc
dec
xchg
iret
sub
stc
repz
mov
add
or
je
push
jp
xchg
icebp
add
push
sbb
cs
aas
xor
scas
add
or
inc
test
popa
in
in
mov
into
fidivrs
scas
fucom
sub
int
aaa
outsl
dec
cmp
test
fldl2t
mov
repz
cld
push
int3
xor
push
add
nop
outsl
ficoms
pop
iret
jae
loop
xchg
pop
and
int
aaa
push
das
mov
mov
sbbb
push
mov
jb
lret
cmpsl
mov
stos
outsl
fidivrs
pop
dec
mov
xchg
inc
mov
fwait
aaa
ret
sub
ret
paddb
pop
aas
jg
sarb
out
test
loop
mov
xchg
and
leave
iret
lahf
xor
insl
xor
lret
ljmp
cld
stc
jbe
fsubs
xchg
pop
sub
sarb
fistl
repz
test
lock
fidivrs
js
add
testl
lcall
xor
imul
ficoms
daa
xchg
rol
push
add
dec
sub
lods
jmp
int
loopne
aaa
pop
push
sub
repz
pushl
or
jmp
fwait
aaa
outsl
fmulp
mov
mov
dec
dec
or
int
and
loope
aad
inc
pop
mov
dec
stos
aaa
outsl
fidivrs
lret
mov
cmpsl
cs
jmp
repz
fwait
xchg
mov
mov
loopne
jb
cmpsl
and
jns
dec
rcrb
fcomip
test
mov
sub
fwait
aaa
in
jp
js
xchg
add
rorb
inc
sub
inc
loop
pop
add
sbb
lahf
aas
lcall
js
shlb
cmpsl
into
mov
cld
stc
repz
push
xor
subl
jg
outsb
sub
lret
lahf
sub
out
test
testl
repnz
stc
mov
dec
and
repz
call
adc
idivl
mov
outsl
fidivrs
jg
stos
mov
dec
xor
mov
mov
fidivrs
ds
jg
jge
push
xor
outsl
lret
repnz
lret
push
or
jns
and
jns
imull
push
aaa
outsl
fidivrs
or
ljmp
adc
jnp
daa
xchg
jb
cmpsb
sbb
jns
out
pop
stos
rclb
sbb
aad
sbb
ss
stos
out
outsl
fidivrs
cmp
ljmp
lea
scas
cwtl
jge
in
fwait
jecxz
pop
jb
fidivrs
sub
jne
inc
adc
jg
sub
dec
add
adc
cmp
xchg
cmp
mov
mov
dec
shll
fidivrs
imul
rcrb
fwait
aaa
outsl
mov
jae
cltd
and
xorl
insl
xor
data16
xchg
aam
push
es
push
iret
aas
push
jmp
mov
jnp
test
push
in
jle
inc
dec
out
fwait
aaa
cmpps
inc
adc
or
mov
xchg
popf
fidivrs
adc
pusha
pop
lcall
aaa
outsl
fcmovne
mov
mov
mov
enter
sti
pop
mov
aas
add
mov
jmp
push
and
fidivrs
ljmp
jno
aaa
out
andb
loopne
loope
dec
fdivrs
int
out
and
cmp
loope
jns
out
lahf
and
mov
jb
inc
mov
sbb
aaa
outsl
fidivrs
dec
and
stos
inc
xlat
mov
out
fwait
push
push
out
cli
data16
shll
sbb
push
inc
fs
std
jbe
cld
test
and
sub
stc
iret
lahf
aas
jg
jnp
xchg
pop
stc
xchg
stc
repz
or
dec
cmpsl
jns,pn
mov
xchg
pop
lahf
aas
jg
sbb
xchg
or
xor
stc
repz
dec
int3
dec
adc
loope
mov
cmp
jl
mov
lods
cmp
ljmp
in
nop
imulb
jns
cmc
xchg
mov
negl
mov
adc
fnstcw
dec
outsl
out
sbb
fwait
aaa
cmpsl
xchg
or
push
cmp
enter
popa
mov
insl
lds
dec
icebp
mov
xlat
repz
aad
insl
stc
jns
out
mov
fnstenv
out
cmp
inc
sti
fdivrl
test
push
and
sbb
sub
pop
xchg
xor
sub
mov
repz
lahf
push
roll
subb
repz
ljmp
stc
inc
jmp
jbe
jle
sti
cli
xor
jns
adc
lahf
ret
insl
inc
or
fidivrs
pushl
test
fwait
aaa
outsl
push
cmc
sbb
mov
out
inc
mov
mov
pushf
loope
mov
aad
enter
inc
sub
aaa
outsl
fidivs
jg
mov
dec
xchg
in
cmp
popa
ljmp
loope
cmp
fidivrs
in
add
mov
mov
fwait
mov
pop
dec
jmp
mov
outsl
fidivrs
out
mov
loop
jae
enter
and
and
aas
sub
add
aaa
scas
cmp
stc
fs
cmc
lahf
loopne
dec
mov
pop
cmc
jbe
sbb
mov
shll
sub
shlb
popa
or
fadds
push
and
int
and
mov
repz
imul
adc
sub
xor
mov
push
cmp
int
cmpb
dec
mov
mov
mov
sbb
mov
fists
ficoms
xchg
aaa
outsl
pushf
fs
push
and
sahf
and
or
inc
ret
dec
push
or
repz
pusha
inc
into
cli
xor
xor
xor
jg
cld
xor
pop
repnz
lock
iret
lahf
pusha
jp
mov
ss
fisubrs
cld
cmpsl
les
pop
adc
pop
lret
pusha
cmp
fwait
aaa
outsl
fimuls
popa
push
aam
sub
push
jae
insb
loope
out
jp
out
lcall
adc
fistpll
rcrl
das
push
nop
outsl
fidivrs
xor
ljmp
out
fwait
aaa
stos
imul
push
ror
aaa
inc
pop
dec
dec
adc
mov
xchg
out
loopne
rcrl
lahf
push
add
ds
outsl
std
push
mov
and
jae
icebp
mov
call
scas
and
repz
aas
pop
mov
add
or
imul
popf
xchg
ret
dec
push
push
sub
arpl
inc
aas
pusha
xlat
pop
inc
mov
mov
or
jbe
xchg
addr16
test
repz
mov
insl
insb
xchg
inc
mov
ret
fidivrs
testl
cmp
adc
das
xor
mov
cmpsb
test
pop
pop
sub
mov
ds
mov
rol
adc
mov
out
fwait
or
mov
mov
fcomps
fidivrs
jmp
cmpb
jns
cmp
cmp
scas
fisubs
das
xchg
insb
jae
dec
out
sbb
pop
and
pop
dec
lcall
inc
jl
repz
cmpsl
repnz
xor
ja
push
pop
and
ret
fdivl
jns
mov
stc
push
and
test
out
lock
dec
xor
ja
or
or
fwait
or
enter
movsl
movsb
nop
dec
int3
adc
sbb
cmc
test
loopne
or
cmc
leave
pop
cld
xchg
cmp
cld
stc
testl
ret
cmp
jg
ret
insl
sbb
repnz
lods
inc
sub
pminsw
jge
movswl
jecxz
fnstcw
cmp
repnz
inc
pop
stc
xrelease
rorb
ljmp
sarb
jg
cld
mov
test
ljmp
outsb
outsl
mov
imul
cld
ja
mov
into
or
xor
xor
imul
sbbl
ror
add
push
divl
test
outsl
aam
stc
repz
sbb
stos
fildl
jl
stos
idivl
lods
cld
cld
inc
nop
in
in
repnz
xchg
jg
jg
jne
cltd
loopne
xchg
lds
mov
adc
out
lahf
inc
jb
ret
push
ret
iret
aas
ds
stc
dec
xchg
inc
enter
roll
push
jp
in
iret
mull
scas
mov
idivl
movsb
push
scas
movsl
cwtl
sub
scas
inc
scas
sub
mov
push
outsl
inc
push
out
lret
xor
outsl
fidivrs
pop
sub
push
ljmp
mov
ds
adc
out
fwait
pop
mov
out
insl
lods
lcall
xor
aaa
cmp
scas
push
outsl
mov
enter
and
inc
in
and
dec
aas
mov
out
rcll
inc
pop
xor
xor
in
int3
inc
in
int3
int
sub
xor
repnz
sub
adc
repz
mov
call
push
xlat
testb
repnz
or
outsl
fiadds
jge
mov
fs
pushf
jmp
fwait
aaa
or
int
xchg
dec
xchg
jb
pop
add
mov
js
rorl
stc
push
pop
flds
or
ja
adc
mov
sub
dec
cwtl
scas
jl
stc
jl
cmpl
lahf
mov
aam
dec
out
dec
xchg
mov
mov
dec
pop
xchg
mov
mov
pop
add
shll
test
aam
aas
sbb
xchg
aas
mov
or
outsl
mov
push
loop
adc
daa
cmp
jb
out
mov
in
stc
or
pop
xchg
and
in
movsl
mov
lds
push
hlt
repz
lahf
fcoms
or
fldenv
out
push
stc
stc
cli
dec
pop
sbb
push
mov
and
ds
cmp
repz
repz
lahf
gs
repz
lret
xchg
inc
outsb
dec
lea
cld
stc
xchg
inc
pop
test
xor
inc
gs
jp
enter
dec
call
aas
push
test
push
mov
jns
mov
mov
xor
nop
stos
add
mov
xor
rorb
inc
jle
roll
inc
into
adc
scas
jns
adc
or
popa
pop
out
fwait
push
adc
cltd
or
jnp
dec
outsl
fidivrs
dec
push
push
mov
data16
sub
popf
jle
out
fwait
aaa
fldt
mov
out
test
jns
andb
xchg
das
hlt
sahf
rcrl
stos
adc
data16
aaa
outsl
xor
adcb
mov
fstpt
mov
pop
gs
insb
fisubs
ret
xorb
movsl
repz
sbb
xchg
xor
inc
out
fists
fidivrs
fwait
push
loopne
dec
sub
test
out
fwait
aaa
ja
js
sub
pop
add
repz
insl
jb
loop
inc
add
int
orl
insb
mov
outsl
mov
repz
adc
cmp
sbb
clc
xchg
out
or
push
pop
daa
in
cmp
xchg
fcomi
out
fwait
mov
fcmovnbe
aad
xchg
sub
pop
fs
jns
jns
fisttpll
movsb
int
cltd
nop
idivl
xchg
fwait
aaa
div
adc
inc
imul
add
cmpl
add
int
aaa
testb
mov
sti
sub
jns
rclb
inc
push
aad
in
je
jbe
fwait
lahf
aaa
outsl
dec
sti
push
std
jecxz
push
jae
jns
out
dec
mov
or
sti
cmp
outsl
fidivrs
xor
push
mov
int
jae
cmpsl
mov
inc
cs
clc
or
stc
pop
mov
mov
mov
iret
aas
aas
xlat
sbb
xchg
sarb
lahf
pop
filds
jle
je
sub
xor
repz
mov
movsb
stc
movsl
xchg
and
fs
mov
sbb
jns
out
movl
ret
fcmove
jmp
movsb
je
inc
inc
daa
sub
cld
stc
repz
inc
sbb
pop
mov
mov
inc
daa
jp
jb
lods
test
aas
inc
push
push
gs
mov
mov
dec
movb
fwait
aaa
outsl
fimuls
out
cmc
ret
cmc
and
fistps
in
int
inc
pusha
cmp
outsb
daa
out
mov
push
sub
rclb
in
inc
cmp
repz
adc
add
out
add
fincstp
mov
hlt
aad
mov
jge
xor
cmp
aaa
cld
pop
xlat
movsl
mov
stc
repz
pop
inc
mov
es
lock
jg
ret
popa
lret
mov
loopne
adc
and
aad
int3
sub
out
fwait
aaa
push
fwait
push
lods
dec
cmp
cli
sbb
xchg
sub
dec
repz
xchg
leave
and
outsl
fidivrs
jl
cmpsl
sbb
mov
sbb
loop
inc
xchg
mov
arpl
mov
sub
mov
pop
mov
fisttps
push
jb
aaa
outsl
fisubrs
scas
outsb
jno
mov
adc
xchg
push
jno
out
jno
jbe
push
or
les
fidivl
xchg
in
and
call
mov
int
jno
pop
rorl
inc
sbb
or
sub
dec
lret
aad
repz
cmpsl
daa
mov
mov
lcall
addr16
lahf
push
arpl
inc
outsl
push
push
mov
repz
jo
inc
sub
adc
cld
mov
lea
test
ljmp
inc
inc
cmp
mov
fnstcw
adc
jg
in
jmp
xor
pop
xor
repz
mov
aam
fcomp
test
ljmp
adc
adc
aas
imul
adc
int
aaa
outsl
sub
stos
out
sub
sbb
xchg
mov
loopne
repz
mov
cli
cs
icebp
lods
pop
mov
sub
jle
call
dec
repz
sbb
mov
dec
jl
jns
js
push
inc
mov
pushf
mov
push
dec
lahf
dec
stos
dec
xor
aaa
outsl
and
inc
inc
mov
lret
lahf
jg
nop
adc
das
cmpsl
pop
xchg
outsb
out
add
out
test
or
fisubs
and
nop
push
sbb
xchg
cmp
outsl
push
or
inc
sarl
repz
and
out
int
out
hlt
mov
sbb
outsb
fidivrs
add
xor
int
xorb
out
cmp
test
repnz
in
pop
pop
cmc
adc
xchg
insl
scas
jg
cld
stc
mov
test
xchg
adc
jp
out
lahf
aas
mov
stos
fldenv
repnz
jle
stc
stc
repz
insl
add
insb
add
jns
push
sub
lahf
data16
xor
dec
adc
aaa
outsl
ficoms
loopne
mov
inc
mov
out
repnz
fwait
cmp
and
sbb
pop
insb
xor
adc
cmp
cmpsb
cmp
push
push
push
dec
hlt
dec
iret
lahf
aas
decl
xorb
je
mov
out
insb
jbe
shl
shrl
fwait
aaa
outsl
fiadds
mov
jecxz
ficoml
sti
mov
int
lock
pop
mov
mov
pop
add
mov
out
lods
fnstenv
inc
int
fnstcw
mov
lds
lret
or
sbb
adc
scas
aas
jl
aad
pop
dec
push
sti
ja
addr16
out
lahf
stc
add
adc
leave
shll
mov
mov
stc
xchg
jecxz
cli
cld
xor
xor
jo
shl
fsubr
outsl
sbb
aaa
outsl
ficoms
xchg
out
sbb
das
sbb
test
jmp
xor
fisubs
cld
cmc
xchg
int
shl
dec
test
pop
ret
add
mov
fwait
aaa
inc
pop
pop
mov
ja
pop
push
int
xchg
pop
sti
xchg
jne
les
sbb
jne
jo
andl
mov
cmp
stos
sahf
cwtl
sbb
addb
pop
mov
mov
mov
frstor
je
pusha
nop
and
inc
sbb
aas
out
push
popa
cmpsl
jg
jns
out
popf
mov
mov
testl
mul
sbb
popl
cltd
out
lds
push
shll
repz
sub
inc
sti
mov
push
int
aaa
outsl
mov
pop
fwait
test
mov
dec
mov
pop
mov
sub
mov
int3
fwait
aaa
outsl
fmulp
es
mov
xchg
jae
cmp
sbb
dec
jns
out
fcomps
pop
mov
subl
outsb
inc
outsb
fidivrs
leave
or
in
mov
aaa
adc
jl
nop
cmpsb
daa
push
rsqrtps
out
jae
sbb
adc
xchg
out
out
fiadds
cmp
das
int3
movsl
push
inc
xor
int
aaa
pop
mov
dec
jns
sbb
lock
cmpsl
inc
out
addr16
push
nop
xchg
ljmp
mov
fmull
aas
wrmsr
shll
out
mov
fld
push
out
inc
fidivrs
jnp
repz
ja
lahf
xchg
push
jns
out
ja
pop
aam
pop
mov
call
fnstcw
cmp
sub
mov
jne
inc
inc
cmpsb
shrl
xchg
outsb
fidivrs
pushf
andl
jge
loopne
pop
add
inc
inc
scas
bound
fidivrs
lea
add
push
inc
lahf
pop
popl
and
fnstsw
lock
arpl
sbb
lret
call
enter
or
or
jae
ja
mov
lock
fdivrl
sbb
addr16
xor
fimuls
and
xor
fsubs
shr
sbb
negb
xor
paddq
add
negl
fnstcw
scas
mov
lahf
sbb
pop
lahf
or
call
repz
lahf
gs
push
add
cmc
sbb
jle
les
ds
repz
sub
aam
xor
pop
clc
add
inc
xor
mov
int
aaa
out
xlat
imul
jge
or
jp
mov
repz
mov
cmc
dec
scas
mov
divb
fidivrs
mov
not
jecxz
jo
mov
add
or
pop
dec
push
inc
cmp
mov
mov
dec
testl
sbb
dec
decl
nop
stos
add
push
fs
xchg
and
sbb
pop
inc
lret
dec
push
scas
jb
cmovs
dec
inc
jb
or
dec
pop
lcall
cltd
inc
scas
bound
push
xchg
sbb
lods
push
out
aas
jnp
outsl
pop
vandnps
dec
adc
dec
testl
dec
dec
jo
lret
push
dec
xlat
dec
aad
pop
inc
scas
dec
ja
jb
lret
dec
lahf
dec
pop
rcll
dec
ja
outsl
mov
jo
dec
addr16
ret
scas
push
xchg
dec
sub
xlat
pop
scas
pop
in
jg
iret
daa
push
int3
push
nop
stos
dec
filds
adc
mov
dec
xchg
dec
pop
pop
dec
pop
dec
cmc
or
mov
lds
dec
pop
jb
rcl
pop
dec
push
and
xor
push
int3
dec
mov
lds
dec
outsl
ret
push
dec
out
dec
xor
inc
out
std
lret
int
xlat
lret
push
and
dec
mov
xlat
pop
inc
jo
dec
pop
dec
inc
ret
pop
dec
push
rclb
dec
pop
dec
push
movsb
pop
lds
fwait
enter
fiadds
and
dec
dec
aad
pop
dec
dec
dec
push
lods
pop
inc
pop
dec
pop
vandnps
dec
das
dec
cmpsl
rclb
dec
xlat
dec
aad
pop
lds
cmp
inc
scas
dec
mov
ja
or
paddsb
dec
mov
dec
inc
dec
aas
or
dec
daa
loopne
xchg
pop
mov
dec
pop
mov
idivl
aas
dec
stos
dec
mov
dec
sub
sub
scas
dec
stos
pop
das
dec
punpckldq
in
xor
mov
stos
cwtl
stos
dec
pop
dec
inc
dec
add
mov
loope
das
dec
das
dec
stos
or
dec
mov
addr16
add
pop
inc
lret
dec
enter
dec
scas
dec
push
adc
dec
jg
add
add
aaa
daa
jo
mov
dec
scas
jo
and
out
dec
push
xor
dec
addr16
mov
jne
dec
pop
xor
movl
inc
out
scas
js
push
dec
addr16
vandnps
dec
push
ret
jg
pop
sub
dec
das
add
dec
iret
scas
sub
dec
sub
ljmp
mov
dec
jg
pop
mov
lahf
dec
stos
cwtl
stos
or
mov
jmp
sub
ljmp
sbb
dec
scas
loope
xchg
push
scas
and
mov
dec
mov
subb
scas
bound
xchg
insl
dec
cmovs
xchg
stos
pop
pop
dec
aas
add
dec
pop
mov
out
sub
scas
bound
dec
jg
mov
dec
scas
xchg
dec
aaa
mov
lahf
dec
mov
xchg
dec
xchg
mov
pop
dec
sub
scas
xlat
dec
pop
mov
dec
pop
mov
dec
stos
dec
scas
and
xchg
or
sub
mov
pop
dec
mov
fists
and
sub
ljmp
mov
dec
sub
xchg
mov
sub
dec
cmovs
subl
mov
dec
pop
dec
sub
pop
loopne
out
pop
dec
xchg
ja
scas
dec
out
adc
stos
or
mov
loope
jl
push
mov
jecxz
dec
stos
or
dec
and
sub
sub
dec
mov
ljmp
add
dec
scas
push
in
dec
xlat
dec
sub
sub
dec
xchg
bound
dec
pop
push
scas
bound
scas
and
sub
dec
mov
sub
dec
das
xchg
dec
pop
mov
dec
dec
mov
lahf
bound
dec
dec
xchg
stos
sbb
mov
pop
dec
jo
flds
mov
lds
dec
inc
xor
dec
jg
aas
pop
scas
push
lahf
dec
pop
in
xchg
stos
dec
cmpsl
dec
add
push
aam
mov
push
dec
daa
dec
mov
pop
or
dec
iret
mov
lahf
dec
scas
bound
dec
mov
sub
dec
pop
xchg
stos
adc
pop
scas
push
cmpsl
dec
mov
push
xchg
sbb
dec
adc
dec
scas
lds
dec
push
dec
add
pop
dec
pop
dec
outsl
pop
lds
dec
push
dec
cmp
dec
pop
sub
adc
dec
xlat
shrb
bound
dec
inc
in
add
lret
dec
test
sub
pop
dec
ja
cmpsl
push
xchg
dec
out
dec
adc
dec
jo
inc
dec
loopne
and
sub
and
push
loopne
jg
xlat
xchg
stos
or
adc
mov
xchg
bound
dec
fnstsw
sub
scas
dec
out
dec
mov
dec
aas
dec
scas
and
dec
sub
sub
das
dec
daa
inc
scas
in
outsl
dec
scas
dec
loopne
daa
dec
sub
cmovs
loopne
inc
scas
dec
pop
dec
ljmp
dec
scas
and
dec
inc
dec
cmpsl
loope
xchg
stos
dec
cmpsl
dec
and
mov
dec
push
scas
and
push
pop
dec
pop
loope
push
sub
scas
dec
dec
dec
stos
dec
scas
push
mov
mov
test
dec
ja
scas
and
or
lcall
xchg
stos
dec
daa
dec
scas
and
dec
inc
in
inc
xchg
dec
sbb
dec
aaa
xchg
dec
xchg
stos
dec
push
int3
push
sub
dec
pop
dec
subps
push
dec
scas
dec
scas
sbb
xchg
daa
xor
push
decl
stos
addl
mov
fists
pop
dec
xchg
aaa
dec
sub
mov
dec
pop
dec
pop
mov
out
stos
sbb
dec
mov
sub
scas
and
fs
in
dec
pop
jo
jb
ret
aad
outsl
dec
xor
aas
adc
lahf
dec
lahf
int
lds
inc
dec
lahf
lret
pop
dec
dec
dec
push
mov
lds
dec
decl
rclb
dec
scas
enter
dec
dec
dec
and
dec
aas
sbb
dec
jg
push
xchg
pop
dec
inc
dec
pop
jb
add
pop
dec
push
xor
pop
dec
cmpsl
dec
vandnps
dec
mov
pop
lds
dec
inc
jo
ret
aad
jg
push
mov
dec
pop
daa
jo
rorl
cmpsl
rcll
dec
decl
push
xchg
jb
dec
inc
dec
adc
dec
xchg
out
pop
jo
xor
aaa
movsb
or
jg
stc
stc
repz
or
nop
and
cmp
sub
enter
mov
popf
test
subb
add
add
ljmp
add
add
je
icebp
lds
adc
inc
adc
inc
fs
jp
addb
pop
sbb
mov
or
or
inc
pshufw
or
fldl
add
inc
ljmp
imul
add
mov
jbe
rcrb
or
sub
jl
orl
repnz
rclb
push
mov
and
into
add
insl
inc
ljmp
inc
sbb
and
adc
push
sarb
inc
add
sub
fdivs
sbb
out
and
push
inc
add
push
sbb
loopne
notb
insl
add
sbb
push
lock
add
jg
repnz
repnz
xchg
sub
testl
adc
add
or
out
mov
out
pop
inc
pop
mov
leave
sub
jo
inc
insb
mov
or
test
jno
stos
mov
mov
xor
dec
inc
je
push
mov
sub
inc
jg
leave
push
mov
or
mov
and
inc
adc
jge
adc
mov
test
push
cmp
mov
jl
inc
pop
inc
int3
rcrl
movb
shrl
ret
inc
push
xchg
movsb
punpckhdq
and
jae
push
lock
mov
call
lret
cmp
xor
sub
add
pop
push
add
push
xchg
mov
addb
inc
adc
jge
shll
in
mov
and
or
mov
adc
pop
add
repnz
sbb
cmp
add
add
add
insb
sarl
aas
rclb
ret
sub
adc
ret
inc
sbb
sarl
bnd
add
adc
push
inc
cmp
add
add
lds
sti
lock
dec
and
adc
mov
jbe
cmp
and
push
dec
dec
out
adc
or
cmp
call
mov
push
adc
out
push
sub
fildl
pop
sbb
mov
or
push
inc
cs
add
adc
and
js
xchg
mov
into
push
cmp
push
call
jne
jbe
imul
or
mov
fdivrs
stc
push
jnp
and
movb
inc
adc
leave
test
push
adc
adc
jecxz
repnz
adc
fldcw
mov
add
xor
add
adc
add
sahf
cmpb
push
int3
js
or
inc
adc
mov
test
lret
sbb
mov
sub
or
xlat
push
xchg
mov
fcmovb
imul
dec
xor
dec
pop
add
pop
in
adc
sub
cltd
movsl
push
roll
jno
sub
into
sahf
adc
push
jbe
in
negb
aaa
call
sub
and
shlb
stc
push
roll
or
xchg
dec
push
rorb
cmp
andb
push
push
ljmp
clc
xchg
enter
repz
adc
aad
mov
or
push
cld
icebp
or
insl
sbb
orl
sbb
filds
ljmp
cmp
add
ret
in
mov
push
stc
data16
scas
add
clc
imul
mov
add
sub
mov
add
mov
inc
or
roll
inc
mov
mov
lods
xchg
pop
call
push
sub
cs
push
dec
scas
dec
fistl
and
or
mov
js
insl
push
subl
mov
adc
inc
sbb
push
mov
jmp
jl
add
push
inc
pop
push
addr16
ljmp
mov
inc
inc
imul
or
xor
hlt
ljmp
sub
mov
xchg
pop
jne
pop
cs
leave
addl
push
sub
add
mov
data16
xor
add
leave
xchg
ret
mov
sbb
and
add
mov
rcrb
sahf
sub
lret
mov
add
orb
pop
xlat
imul
jge
xor
pop
push
mov
dec
xchg
sbb
rcl
pushaw
cld
xchg
andb
mov
push
mov
cmp
lods
inc
leave
adc
inc
ret
inc
xor
decb
popf
mov
or
or
xchg
push
or
mov
sub
inc
jl
bound
adc
ret
or
data16
adc
xchg
idivb
or
mov
xchg
jle
mov
or
fwait
adc
sbb
ret
pusha
enter
cwtl
add
loope
mov
mov
stos
sbb
jns
mov
and
sbb
mov
cmpb
push
push
out
enter
adc
sub
sbb
rclb
jecxz
test
mov
or
ja
push
test
dec
mov
loope
pop
push
sub
test
push
mov
in
jo
insb
dec
ret
or
push
adc
add
or
mov
jns
sub
xor
inc
jge
push
popf
bound
xchg
bound
jecxz
clc
lret
ljmp
mov
inc
mov
mulb
sub
and
lret
mov
adc
or
sti
mov
or
pusha
fmuls
push
or
test
scas
add
mov
or
outsb
testb
notl
jmp
sbb
sbb
mov
mov
push
sub
mov
or
xchg
mov
jne
mov
add
or
lods
les
mov
stos
push
jp
xor
test
mov
sub
popl
or
mov
dec
or
cmp
test
sbb
aas
push
or
rcll
add
xchg
leave
fdivs
add
pop
andb
and
or
cmp
lret
int3
sbb
popa
test
inc
push
xchg
jb
jecxz
xchg
lea
xor
into
lret
add
mov
mov
mov
inc
test
and
cmp
add
dec
out
test
push
scas
xor
cmp
jne
push
cli
jne
mov
mov
pop
push
xchg
jne
mov
adc
add
int
mov
pushf
enter
xor
or
movsl
lret
lods
mov
or
push
sbb
mov
sahf
pop
cwtl
inc
fimull
loopne
aam
sbb
ss
loopne
sbb
rclb
cmp
pusha
aaa
and
imulb
adc
popf
and
iret
dec
lmsw
je
jle
jmp
fiadds
shlb
mov
xor
mov
inc
inc
add
shl
mov
or
jo
xchg
xchg
aas
andb
push
push
leave
sub
jne
or
and
push
lods
jle
fsubs
lahf
mov
lcall
and
mov
pop
push
sub
push
jmp
data16
imul
test
fildl
and
rorl
pop
cmpb
fnstcw
sbb
rcrb
or
adc
das
mov
push
add
pop
fidivrl
sbb
je,pn
adc
leave
inc
xchg
leave
dec
stos
xchg
push
es
inc
nop
jae
movsl
dec
es
cmc
into
jle
aam
sbb
lock
out
and
fimull
clc
or
or
rcrb
cmp
jmp
sbb
not
and
sbb
in
sbb
stos
inc
lret
ljmp
fmull
scas
sarb
inc
lcall
add
mov
push
sahf
fwait
lcall
call
pop
orb
aam
mov
adc
je
adc
add
sub
push
mov
dec
cmovno
or
fmull
xchg
cmp
insl
lods
pop
and
add
dec
add
insb
xor
xor
sbb
mov
mov
sbb
insl
adc
xor
ret
push
adc
clc
adcb
sub
inc
pop
das
sahf
pop
into
add
mov
jecxz
and
jnp
lahf
orl
mov
and
inc
add
or
loop
add
pop
das
adc
enter
pop
out
test
cmc
cmpsl
shrb
dec
adc
mov
inc
fisttpll
test
inc
inc
rclb
mov
jno
out
scas
das
or
iret
leave
pusha
clc
pop
addr16
mov
adc
lahf
or
mov
mov
add
sub
addl
call
and
js
or
push
dec
out
stos
scas
sbb
inc
or
mov
inc
jnp
out
lahf
or
in
jbe
mov
and
mov
or
js
mov
adc
negl
rcll
cmp
int
inc
pop
or
pop
push
div
or
and
inc
and
cmc
xchg
or
sub
xlat
mov
loopne
int
push
pushf
rclb
sub
das
movsb
or
rcr
xchg
cmp
popa
inc
shrb
ja
xchg
cmc
adc
test
insl
scas
es
jne
adc
add
jb
push
mov
leave
inc
sub
inc
sbb
lea
inc
clc
add
mov
pop
enter
cmp
add
stos
or
roll
inc
cmp
rclb
push
mov
dec
jle
mov
or
xchg
mov
rcrl
inc
call
sbbl
fadd
ret
cwtl
xlat
movb
loope
repz
enter
mov
or
push
add
pop
xor
add
mov
scas
or
mulb
add
push
imul
xorb
ret
sub
xchg
push
adc
xor
cmp
repz
mov
add
leave
aas
adc
push
and
cmp
jne
into
pusha
test
test
mov
inc
aam
mov
or
sub
insl
dec
adc
enter
add
in
pusha
mov
sub
mov
leave
push
jno
mov
fsub
push
add
or
inc
add
daa
xchg
xchg
cmp
rorb
push
jae
rorl
jmp
push
fmul
push
es
cmp
xchg
lods
xorb
adcb
mov
clc
and
adc
jbe
push
sbbb
add
cld
into
divb
add
mov
mov
or
mov
xchg
mov
sub
outsb
pop
jnp
ret
mov
jecxz
daa
mov
push
xor
lcall
dec
pop
add
es
test
sbb
push
shll
test
xchg
sub
push
or
mov
test
adc
and
lret
push
mov
cmp
xchg
hlt
push
cmp
gs
in
inc
subb
dec
pop
sbb
add
push
adc
cmp
push
movsl
xchg
orb
xor
inc
mov
test
insl
sbb
xchg
icebp
es
test
mov
sub
pop
call
push
push
js
sbb
int
pop
jge
inc
push
test
cmp
out
roll
sub
add
adc
adc
and
fwait
stc
adc
jb
dec
mov
push
arpl
push
push
int3
xor
pop
es
adc
imull
sbb
test
stos
sub
or
push
xlat
xor
inc
add
or
ds
int
mov
mov
ss
push
sarl
repz
or
lds
loopne
mov
loop
popa
addb
add
xor
adcb
imul
stc
add
sub
or
or
orl
imul
xchg
into
cli
sub
ds
je
adc
mov
sub
icebp
dec
pop
dec
cmpsb
mov
push
inc
jo
and
cmp
mov
out
sub
jno
mov
ljmp
mov
rcrb
or
push
pslld
test
and
cmp
add
leave
sbb
push
xchg
roll
mov
xchg
adc
inc
add
packuswb
add
push
sub
mov
mov
add
enter
push
rorb
push
mov
imul
adc
into
andb
lea
inc
cmp
mov
loopne
xchg
pop
loope
adc
jl
ss
adc
jb
mov
inc
test
rcll
pop
ja
jl
push
jmp
sub
push
adc
add
imul
xor
scas
ds
xchg
or
and
push
adc
fs
lock
or
xor
mov
insb
and
pop
cltd
add
adc
inc
addl
add
add
hlt
out
repz
adc
push
push
push
push
data16
jo
add
out
add
xchg
cmp
sahf
sub
test
add
jne
fistpl
xor
cmp
dec
mov
stos
add
add
and
daa
dec
inc
push
push
in
icebp
mov
stos
mov
adc
and
push
pop
loope
mov
fstps
xchg
jge
mov
or
mulb
inc
das
jo
enter
mov
push
dec
xchg
push
pop
notb
sbb
out
rol
inc
int3
mov
mov
and
xor
cmp
ret
addr16
sbb
or
rorl
xlat
pop
and
add
add
adc
inc
ss
orl
mov
and
mov
fmuls
lea
cwtl
rcl
sbb
leave
rorl
mov
mov
xchg
or
sbb
xchg
adc
sub
cmp
shl
adc
cmp
sbb
push
cwtl
or
inc
out
sbb
mov
loopne
rcl
outsb
pusha
add
mov
test
xchg
cmpsb
ljmp
push
cs
push
jmp
push
ret
pop
push
sub
mul
xchg
mov
dec
rolb
adc
out
maskmovq
xchg
mov
add
sbb
xor
pop
adc
adc
mov
int
das
push
or
and
data16
inc
les
mov
pusha
js
sub
sub
sub
lock
and
and
rcll
sub
sbb
mov
test
int3
push
addr16
roll
pop
mov
gs
mov
inc
sbb
mov
dec
xor
and
xchg
testb
mov
scas
ljmp
pop
mov
psubsb
jl
push
sbb
xor
and
add
sbb
clc
or
fwait
mov
add
mov
add
adc
fcoms
es
adc
loop
leave
add
and
repz
fisubl
stos
pop
fdivl
push
add
jge
xchg
push
inc
dec
mov
or
or
in
adc
push
or
rolb
mov
sub
jno
rcl
sub
inc
stos
inc
bound
ljmp
aad
test
push
pop
lock
movb
add
cltd
lcall
inc
imul
inc
mov
sub
jo
jae
mov
cli
adc
inc
sbb
sub
inc
push
pop
push
mov
or
push
and
pop
or
mov
ret
mov
je
jns
or
gs
adc
xor
jne
dec
sbb
mov
push
xor
mov
xor
mov
shlb
lock
and
or
adc
mov
jp
orb
mov
cmc
pusha
jae
sub
jmp
mov
sbb
rolb
bound
rcll
mov
nop
push
cmp
das
mov
sahf
daa
adc
push
dec
scas
test
adc
es
sub
mov
aas
mov
add
push
cmp
mov
notl
or
shrl
divb
push
loopne
cmp
adc
push
and
or
ret
adc
mov
xor
adc
sbb
adc
sub
mov
or
xchg
mov
inc
adc
adc
je
mov
rol
add
scas
push
and
sbbl
sub
lcall
cmp
push
rolb
push
cwtl
or
inc
push
cmp
leave
push
add
sub
rorb
mov
rorb
js
add
push
push
insb
and
iret
lret
sub
sbb
fmull
cmp
sbb
or
mov
jno
mov
aad
lods
lods
push
xor
add
add
mov
cwtl
add
xchg
jl
push
xchg
pop
icebp
sub
xchg
mov
sbb
mov
push
lcall
cmpsb
lcall
inc
cmp
popl
push
popa
sbb
insl
pop
les
mov
sub
loope
cltd
mov
jmp
mov
sub
mov
xor
outsb
jecxz
dec
aas
test
mov
jo
out
sbb
out
leave
pop
and
popa
sbb
sbb
push
or
pushf
and
or
pop
add
push
scas
scas
popa
pop
mov
sbb
inc
xor
je
cmp
in
add
inc
push
lock
rcrb
sub
mov
push
ja
shll
xor
mov
jmp
mov
jb
bound
pop
mov
aaa
jnp
xchg
push
push
add
ud2
push
sub
cwtl
shl
inc
cld
and
cmp
loop
das
xor
pop
cmp
dec
inc
je
add
lock
ds
out
sub
inc
movsb
or
and
lods
inc
adc
jmp
sbb
fwait
dec
shlb
add
aam
and
jge
leave
jl
lcall
sbb
xchg
dec
xchg
dec
pop
hlt
adc
or
addl
fnsave
je
imul
shrl
rcl
pusha
add
xor
loop
or
sbb
lds
pushf
adc
or
push
mov
cwtl
pop
adc
mov
mov
aad
add
mov
xor
push
enter
push
cmpsl
andb
add
sub
addr16
sub
stos
add
and
add
push
mov
inc
mov
push
push
mov
stos
pop
push
xor
dec
push
mov
sub
js
je
lret
mov
cmpsl
push
rcl
add
jo
adc
pop
adc
sub
mov
repz
cld
push
ja
cmp
jne
adc
sbb
test
shrb
dec
das
sbb
pop
sub
push
mov
push
xchg
test
stos
fisttpll
shrb
loop
jg
scas
sub
inc
mov
inc
pop
push
sub
and
das
mov
insb
roll
sub
xchg
sbbb
sarl
sbb
scas
or
or
push
xor
mov
add
sahf
mov
ret
inc
adc
xlat
std
push
push
inc
mov
pavgb
or
xchg
int
adc
xchg
into
adc
mov
psrad
adc
cmp
push
mov
adc
test
loopne
mov
addr16
lret
call
rorb
jo
jge
into
scas
add
push
mov
test
lret
and
inc
dec
mov
xor
scas
clc
aam
mov
adc
inc
adc
mov
cmp
xor
aam
and
sbb
stc
jae
xchg
andl
cli
cmp
adc
orl
push
push
jecxz
or
js
dec
imul
push
pop
mov
addb
sub
cwtl
inc
sahf
ret
xor
lcall
push
mov
xor
jmp
test
or
mov
sbb
mov
sbb
lret
push
jo
sbb
ljmp
xlat
gs
pusha
ret
push
inc
push
roll
cmp
leave
mov
jmp
les
int3
nop
push
fcomp
mov
mov
decb
test
push
lret
pop
mov
loopne
adc
push
xor
out
call
mov
xor
les
push
cmp
cmp
add
imul
xchg
cmp
push
mov
mov
and
adc
ret
scas
mov
push
xor
ljmp
shrb
scas
xor
pusha
cmova
aam
pop
dec
sbb
add
and
xorl
inc
daa
sub
add
je
lcall
pop
mov
negb
pop
and
sarb
adc
icebp
inc
jge
jae
std
and
mov
repnz
inc
cmp
sbb
or
mov
or
cltd
loope
cs
or
pop
sbb
sbb
pop
and
test
into
mov
bound
pop
push
xchg
arpl
cli
and
mov
daa
jl
fsubl
stos
test
cmc
stos
push
shrl
jb
clc
mov
cmpsl
jmp
inc
push
cmp
and
in
dec
xor
mov
subb
popa
shl
pop
sub
push
mov
push
cmp
lret
jmp
stos
push
adc
and
or
roll
sbb
std
push
push
pop
mov
and
les
cmp
lods
mov
push
pop
ror
icebp
push
or
js
or
jb
out
dec
aas
jmp
lock
mulb
jecxz
sbb
mov
or
adc
xor
dec
icebp
gs
pushf
jno
scas
sub
xor
lahf
push
sub
das
push
dec
or
adc
clc
pop
lock
add
test
xor
cs
stc
inc
mov
sbb
mov
mov
xor
add
add
pusha
adc
es
xchg
push
inc
xor
inc
push
jl
push
mov
out
adc
dec
lea
pop
pop
xlat
popa
pop
inc
xor
jl
rcrb
pop
in
cmp
test
ljmp
rclb
push
xor
or
mov
push
sbb
decl
outsb
cmc
push
or
fidivrl
pop
push
arpl
adc
xchg
cltd
test
aad
je
sbbb
stos
jle,pt
mov
adc
out
mov
shlb
rclb
arpl
cld
shl
inc
shlb
mov
call
inc
mov
push
or
cwtl
jecxz
mov
jecxz
nop
sbb
xchg
sub
inc
mov
ret
int
xchg
xchg
mov
mov
pop
push
fs
and
xor
jg
pop
mov
xor
mov
dec
mov
aam
flds
sub
push
arpl
pop
or
adc
push
push
mov
add
sub
jmp
rcll
mov
push
jno
mov
inc
int
and
out
clc
bound
and
pop
pop
jecxz
inc
cs
mov
test
cwtl
adc
out
cmp
xor
ss
inc
push
daa
push
lahf
pop
cltd
clc
and
xorl
add
push
add
fidivs
je
icebp
aas
sbbl
sbb
fldcw
sub
xchg
jns
sarb
leave
les
push
addr16
sub
scas
test
stc
and
aad
or
test
outsb
test
cmp
mov
test
jecxz
push
ret
sub
movsb
imul
sub
inc
popa
test
in
sub
stc
push
jo
mov
inc
fsts
jle
test
jo
adc
add
push
aas
fcomi
sub
loope
rol
mov
aaa
int
sub
ret
mov
mov
add
jecxz
lds
loopne
orb
add
push
push
lcall
sbbl
sbb
inc
cmp
adc
mov
cltd
notb
jmp
inc
xchg
mov
add
pop
or
sub
adc
lret
test
push
or
mov
inc
sbb
add
lods
cmpsb
rolb
pop
adc
ljmp
sbb
test
test
int
popa
hlt
jge
call
jmp
pop
ss
pop
dec
rclb
and
cmpl
ss
inc
sbb
out
or
inc
pushf
stos
cmp
pop
push
andb
fdivl
lods
or
adc
xchg
rcl
push
arpl
imull
mov
sbb
push
pop
cmpb
stos
dec
pop
inc
shl
pop
ficomps
mov
cltd
inc
sbb
dec
in
loope
inc
popa
sub
mov
into
aad
das
cmp
push
push
dec
rol
ljmp
push
sub
mov
add
popa
sbb
out
out
push
push
inc
out
stos
sbb
dec
or
adc
mov
and
sub
lock
push
loope
add
push
in
andb
sub
push
push
rorb
jmp
push
ret
push
popf
mov
pop
pop
roll
je
cmpsb
mov
pop
sbb
and
mov
clc
or
js
loopne
push
cmp
sahf
mov
or
sbb
adc
pop
inc
sbb
push
aas
pop
or
imul
add
push
dec
in
test
sub
dec
sbb
sub
or
cmp
inc
iret
add
jmp
xchg
adc
adc
in
stos
test
inc
repnz
or
loopne
or
es
pop
mov
inc
or
add
call
or
mov
and
hlt
test
adc
sub
jbe
and
je
sbb
aam
fisttps
xorb
mov
dec
or
add
into
sarl
mov
push
sub
or
pop
loope
mov
sub
rorb
addb
inc
roll
mov
mov
jne
mov
mov
and
jno
or
or
pop
cmpsl
adc
pop
adc
orl
pop
mov
xor
or
xor
testb
sub
add
cmpsl
sbb
ljmp
roll
popf
jp
jo
dec
lcall
mov
rol
adc
pop
fistps
ret
shrl
lea
mov
mov
adc
xchg
mov
jne
leave
sub
or
pop
repnz
xchg
rcrl
in
rorl
addl
pop
xchg
dec
adc
stos
or
sub
mov
scas
rorb
in
addr16
enter
or
or
mov
stc
dec
rcrl
roll
pop
dec
les
xchg
mov
jp
or
cmpsb
mov
add
mov
add
sub
add
imulb
pop
mov
xchg
xor
adc
or
stos
pop
add
fisttps
mov
fildll
add
sbb
iret
add
fdivp
add
test
inc
imul
push
inc
mov
sbb
test
ret
lcall
dec
inc
cmp
sarb
lahf
adc
aad
mov
ffree
popa
adc
into
in
add
or
gs
add
scas
push
lock
nop
or
cmpsb
lret
mov
std
xchg
mov
mov
mov
sub
xchg
imul
stc
add
add
mov
dec
jno
aam
push
roll
ror
pop
push
cmp
jo
pop
cmpsl
sahf
sub
aas
mov
mov
lods
mov
adc
dec
push
xor
jecxz
push
sbb
int3
rorl
xchg
xchg
clc
pop
push
pop
push
pop
and
push
inc
jae
testb
lret
nop
or
mov
lods
call
sbb
pop
adc
xchg
inc
inc
insb
and
test
loopne
cmp
cmp
dec
test
popa
mov
sub
push
cltd
in
movsl
shll
jne
stos
gs
sub
jae
add
dec
push
fisttpll
sbb
pop
mov
sbb
pop
stos
dec
jge
push
and
test
sbb
mov
jge
rcrl
push
cwtl
sbb
xchg
icebp
andl
leave
aam
push
inc
sbb
leave
inc
mov
test
sub
mov
or
mov
pop
sub
gs
or
test
xchg
mov
jge
dec
or
stc
push
or
icebp
push
inc
rcrb
call
dec
inc
aam
clc
or
cmp
add
lock
inc
sbb
inc
push
icebp
sarl
lret
jmp
daa
pusha
test
inc
or
or
out
mov
and
mov
andl
mov
jne
lods
push
test
or
xor
movsb
addb
xchg
test
fwait
xchg
pop
clc
stos
sbb
push
or
lret
sti
fnstcw
ret
xor
fcom
lds
sarb
inc
lret
pop
adc
add
adc
sbb
xchg
cmpsb
stos
data16
push
dec
aam
mov
imul
mov
faddl
xchg
and
cmpsl
sub
test
rcrb
cli
pop
mov
inc
ret
adc
xchg
pop
inc
imul
sub
aam
fistl
addb
js
repnz
jp
push
cwtl
add
push
xchg
data16
or
inc
subb
ret
push
sub
arpl
cli
push
cmp
inc
add
and
xor
sbb
stc
out
rcll
enter
adc
sbb
add
lock
out
mov
add
out
adc
rcrb
inc
mov
mov
add
into
imul
or
inc
sbb
dec
mov
imulb
add
sub
or
push
and
mov
es
decb
out
pusha
rorb
es
cmpl
jo
insb
sbb
or
insb
add
sti
sbb
cwtl
adc
xchg
mov
test
cmp
xor
and
push
insl
inc
push
jo
sbb
shrb
shlb
sub
icebp
ds
sub
adc
inc
mov
das
ljmp
insb
enter
ret
push
inc
adc
adc
or
mov
xor
movsb
fcoms
and
mov
pusha
sub
test
inc
test
push
sub
xchg
xadd
shlb
push
jb
test
jp
xchg
dec
sbb
push
shll
mov
sbb
pop
testb
sbb
jb
jb
sub
cmp
sarb
push
aam
jo
push
inc
mov
mov
fs
call
sbb
adc
out
push
rorl
or
sub
subb
cmpsl
lret
add
adc
cmp
add
and
lret
sub
push
sbb
sub
push
ficoml
jne
sbb
cmp
add
push
fbld
push
mov
enter
out
stos
xor
pushf
clc
sbb
loop
add
cli
sbb
call
lds
add
mov
xor
inc
cmp
mov
stos
int
adc
movsb
xchg
stos
push
ret
stos
add
icebp
test
sbb
and
sbbb
add
add
mov
add
sbb
xor
lret
sub
adc
push
xchg
sarl
adc
or
movsl
notb
xor
popf
sub
dec
adc
call
int3
jb
adc
pop
and
add
notb
lock
or
hlt
rolb
xchg
sbb
jmp
mov
lret
add
add
pusha
shr
add
inc
jmp
sbb
or
or
mov
fildl
mov
sub
lahf
push
ret
cmp
adc
mov
and
or
aam
or
cmp
push
sbb
adc
repz
xchg
stc
cltd
sbb
popf
loopne
mov
sbb
frstor
lods
sub
add
or
loop
mov
lods
inc
out
and
adc
stc
push
inc
test
stos
cmpsb
xor
aas
nop
mov
mov
dec
cmpb
xchg
mov
cmp
jl
popf
pop
js
pushw
dec
xlat
jmp
jo
les
dec
loopne
and
rcl
mov
ljmp
mov
add
shll
sbb
sbbl
pop
rorb
xchg
ss
sub
ljmp
dec
cmp
sub
jl
push
xchg
add
adc
xor
sub
popf
xor
adcb
adc
pop
push
nop
pop
push
adc
or
add
out
shrb
push
and
adc
test
xchg
mov
xchg
cmpsb
push
inc
mov
pop
push
mov
push
or
inc
mov
or
jge
clts
orl
int
jae
shlb
jmp
push
mov
or
sbb
cmp
mov
rcll
subl
addb
cmpsl
add
adc
mov
mov
sub
jnp
inc
cmpsl
stos
push
sub
xchg
or
or
addr16
in
pop
jp
push
test
xchg
rol
adc
sbb
or
jns
push
ds
les
maskmovq
testl
ja
and
jb
xchg
sub
adcl
leave
sbbl
out
or
add
cs
sbb
testl
cwtl
notb
les
negb
xor
shl
or
ret
outsb
ret
pop
add
add
aaa
xor
lods
xor
bt
xor
sub
or
pop
pop
xchg
add
lock
adc
add
inc
lock
or
mov
xlat
ret
push
aad
stc
lret
lock
adc
push
pop
arpl
leave
and
push
mov
push
mov
rclb
mov
push
rolb
ret
lcall
or
rol
pushf
subb
push
jne
adc
sbb
ficoms
sarl
enter
in
dec
inc
les
pop
adc
lea
xor
or
int3
mov
cltd
or
jae
insl
test
inc
xor
or
adcl
repnz
imul
xchg
jo
orb
mov
fwait
or
inc
mov
xchg
sbbb
mov
xor
icebp
dec
mov
test
lods
and
out
or
call
adc
cmpsl
mov
shll
push
stos
pop
inc
jp
or
test
std
mov
andl
mov
call
dec
sub
mov
sbb
xor
mov
add
popf
add
mov
pop
movsl
mov
add
mov
dec
add
push
rorb
in
mov
adc
mov
pop
push
negl
pop
cmp
or
xor
dec
sbb
movsb
or
push
xor
ljmp
push
push
lret
sbb
or
xchg
cmp
mov
mov
inc
verr
push
sub
add
sar
add
dec
add
stos
popa
add
scas
jnp
inc
lods
push
fnsave
sbb
add
js
mov
pusha
pop
push
push
or
dec
adc
inc
lods
xor
and
push
in
lcall
call
sub
mov
int
push
xor
mov
and
rolb
xor
cmp
adc
stos
stos
push
cmp
and
mov
push
push
adc
mov
popa
stc
test
cld
stos
push
and
cmp
cmp
mov
mov
leave
jge
push
mov
ss
popa
add
loopne
jge
xchg
shlb
rcll
or
les
dec
faddp
inc
cltd
sar
loop
jl
jb
pop
aam
jmp
add
ret
or
mov
shrb
mov
daa
loopne
pop
in
clc
pop
dec
pusha
sbbb
push
push
xchg
dec
aam
lock
ljmp
inc
sar
enter
ror
jnp
rcr
sub
add
adc
in
mov
or
lcall
or
es
lock
xchg
pop
dec
sbb
mov
cmp
data16
push
inc
shrb
mov
push
getsec
push
xlat
shlb
lahf
movsb
add
inc
add
orb
loope
and
sub
in
ljmp
push
js
stos
and
push
cmpsb
call
mov
rcll
cmp
enter
ljmp
or
subb
lods
fcmovbe
pop
lds
gs
fsubrl
adc
add
lcall
and
cli
call
es
and
mov
add
add
es
test
stos
test
lds
add
shll
sbb
stos
mov
gs
orb
sub
scas
pop
sbb
data16
dec
cmp
sbb
dec
gs
in
dec
inc
orl
push
xchg
dec
in
push
mov
add
push
aam
sbb
cwtl
mull
adc
inc
or
test
sub
scas
clc
shl
cmp
jb
push
sub
inc
xchg
test
clc
dec
xchg
push
mov
sub
xchg
shll
inc
push
sbb
xor
das
mov
mov
jecxz
les
test
dec
cmp
inc
xchg
in
xchg
push
pop
adc
jmp
ficomps
pop
xchg
jnp
sbb
cmp
jo
dec
inc
int
dec
test
or
xchg
and
fldl
cwtl
or
mov
or
ret
sub
loope
sahf
and
bswap
orl
add
stos
push
cmpsb
or
mov
inc
inc
add
pop
rolb
fs
mov
addb
or
xchg
or
or
loop
push
and
dec
dec
cmp
or
pusha
sub
std
lahf
leave
push
jno
outsb
and
adc
adc
and
mov
dec
adc
inc
lock
xor
lock
adc
call
adc
add
mov
push
mov
shll
roll
movsb
pop
into
imul
sub
leave
cmpsl
push
xchg
or
mov
or
stos
sbb
pop
scas
jo
pop
xchg
sbbl
mov
pop
xor
aad
push
lods
enter
jnp
call
mov
lds
add
loop
orl
dec
and
pop
mov
add
push
bswap
jbe
inc
cvtps2pd
mov
push
ret
rcll
mov
int
mov
rorl
inc
jmp
push
push
add
jo
and
mov
ficomps
push
push
mov
call
insl
push
js
pop
xor
mov
sub
jnp
fadd
push
mov
shrb
jecxz
or
dec
mov
push
roll
cmp
rolb
in
push
inc
cmp
inc
in
enter
pushf
imul
mov
cmp
pop
stc
add
push
sub
mov
adc
lds
add
jb
idivb
out
mov
or
je
pop
xchg
movsl
pop
lock
push
pop
and
adc
ljmp
mov
incl
mov
data16
add
imul
sbb
ret
roll
cmpsb
lcall
inc
add
or
mov
push
dec
scas
movb
pop
repnz
push
sub
inc
ret
mov
fsts
rolb
repz
shrl
push
cmpsl
rolb
jb
fucomi
push
push
cltd
rolb
sbb
sub
aam
std
and
inc
lock
push
push
push
push
leave
scas
sbb
inc
add
hlt
jl
push
cli
mov
adc
lret
sbb
add
inc
mov
or
push
dec
push
pop
add
xor
push
dec
inc
movsl
test
cmp
xor
loop
jo
and
adc
shrb
mov
icebp
dec
push
jo
ret
lret
push
in
sarb
call
loopne
in
rolb
jbe
or
fisttpll
xchg
or
andl
enter
fcom
pop
sub
popl
sub
xor
or
add
psubsb
push
and
sub
adc
testb
push
inc
mov
sub
outsb
add
shlb
sub
adc
in
fwait
add
in
add
mov
adc
cmp
add
cmp
sub
inc
adc
pop
sub
imul
add
sub
sbb
rorl
sti
mov
mulb
sub
adc
add
sbb
rolb
mov
jnp
inc
cld
dec
es
cmp
rclb
outsl
fucomip
leave
mov
or
xor
mov
imul
add
add
mov
cmp
or
mov
or
in
mov
cmp
sub
insb
add
mov
mov
outsl
fisttpl
jnp
rorb
fiadds
push
sub
or
addl
pop
jae
mov
stc
or
or
imul
sbb
sbb
cmpsb
ljmp
and
ret
clc
sbb
jle
jns
mov
mov
xor
fistps
inc
add
sub
mov
inc
adc
jg
leave
cmp
movzbl
dec
sbb
fistps
das
jmp
pop
mov
mov
rolb
clc
sbb
jle
sbb
push
sub
test
je
sbb
cmp
pop
mov
cmp
add
ret
out
repnz
cmp
imul
jge
sbb
jnp
mov
ret
aad
sbb
scas
insl
fcomip
jnp
pop
mov
add
lret
mov
mov
mov
pop
in
mov
dec
add
push
mov
push
inc
lock
pop
repnz
mov
jnp
outsl
adc
push
cmc
add
out
cld
add
add
or
mov
stc
or
mov
jbe
xchg
imulb
idiv
push
mov
fmulp
mov
pop
cli
jge
add
xor
in
sbb
fnstcw
jle
adc
mov
add
mov
shll
out
insw
push
mull
shr
or
andl
jmp
jmp
xor
rcrb
shlb
outsb
pop
cs
pop
sbb
aas
lods
push
adc
out
mov
pop
mov
fbld
sarb
outsl
mov
pop
sbb
ss
mov
or
cmpsb
pop
cli
mov
or
adc
lock
shr
inc
sbb
sbb
leave
mov
scas
ret
pop
mov
sbb
add
int3
lcall
xor
movzwl
sub
mov
ret
stc
mov
xlat
outsb
or
adc
into
out
pop
jb
add
inc
mov
mov
cltd
pop
popa
add
fistpl
sbb
fbld
mov
mov
adc
cli
push
int3
test
pop
xor
push
aas
mov
fstps
jno
push
aaa
mov
mov
outsb
ja
fmul
mov
fwait
jmp
sahf
insb
dec
daa
ret
jmp
adc
mov
jne
ret
xor
add
pop
pop
popa
and
cli
xor
sahf
mov
sbb
mov
ret
push
cmp
push
add
push
xchg
xchg
xchg
sub
repnz
or
push
dec
push
sub
lcall
andb
jns
push
inc
ss
out
pop
es
mov
cli
sbb
aaa
ficompl
inc
clc
cmpl
sub
sbb
mov
arpl
out
jge
insb
ret
mov
std
lock
mov
mov
and
xchg
cmp
sarb
add
ja
adc
pop
jmp
repnz
mov
pop
or
cld
inc
cltd
and
sub
das
push
lods
inc
imul
imul
pop
js
icebp
xchg
fdiv
outsb
daa
lock
ret
call
movsl
rcrl
js
adc
push
mov
mov
out
mov
adc
xchg
stc
or
ficomps
stc
adc
pop
mov
pop
mov
out
cmpsb
push
jle
add
mov
loopne
rorl
push
push
fcmovu
out
or
cmp
imul
adc
xor
lcall
sub
pop
popa
push
jl
adc
fcmovnu
ret
ror
cli
mov
mov
adc
punpckldq
fistpl
cmp
push
pop
add
cli
pop
push
pop
jnp
pushf
mov
xchg
pop
and
ret
mov
sub
fdivs
bound
test
cmpsl
mov
fcmovnb
fistps
add
adc
test
fwait
lea
rorb
dec
dec
ljmp
mov
add
push
and
test
or
xor
fdivs
adc
sub
sub
pop
push
aam
call
mov
lods
mov
and
adc
fistpl
fsubs
pop
push
pop
and
jle
das
jbe
push
fsubs
mov
imul
jne
sbb
jbe
fdivr
stc
sbb
jmp
in
mov
mov
mov
in
push
insb
ret
cmp
mov
dec
jecxz
dec
fstl
add
pop
fs
xor
sbb
pop
jmp
jnp
lret
icebp
jbe
adc
rorb
jle
sbb
mov
popf
or
inc
loop
add
lods
call
adc
clc
push
rorl
cmp
and
inc
ret
testb
fsubrs
jecxz
or
sbb
sbb
xor
xor
clc
sub
adc
aam
popa
jo
mul
mulb
cmp
aad
adc
out
loope
ljmp
jbe
and
mov
pop
adc
or
lock
in
adc
lock
adc
pop
inc
sti
testb
or
shlb
pop
push
mov
jae
mov
lock
mov
outsl
orl
sahf
push
pop
mov
sbb
push
hlt
push
enter
sbb
fs
sbb
ficompl
mov
add
les
mov
pop
and
movsb
sbb
jle
aad
bound
std
cmp
icebp
je
pop
adc
cmp
pop
fs
in
adc
push
sub
xor
and
mov
or
rolb
push
sbb
mov
fcmovu
or
stc
sbb
and
and
sub
jo
xchg
adc
cmp
jecxz
sarl
mov
test
push
adc
jmp
pop
pop
sub
xor
ret
aad
xchg
cmp
adc
mov
mov
dec
push
cmp
aam
out
shl
lock
cs
and
mov
ret
imul
mov
and
div
jne
mov
es
sbb
mov
cltd
dec
xchg
mov
adc
rcl
and
rcrl
sbb
xchg
bound
pop
add
mov
mov
insl
int3
out
push
mov
fsubr
movsl
mov
mov
imul
loopne
push
les
mov
shrb
cmp
xor
push
ret
imul
sub
sbb
fstpl
lods
add
sbb
mov
cmp
adc
pop
sbb
cmp
cmpsb
adc
push
das
mov
pop
cmp
mov
adc
xor
lret
jae
sbb
or
sub
cmp
inc
push
jae
in
popf
flds
mov
loope
rclb
movsb
pop
cmp
sbb
cld
xchg
jo
js
mov
scas
mov
pop
push
sbb
inc
inc
cli
sbb
roll
jne
inc
in
add
sbb
enter
insb
gs
pop
push
sbb
cmp
mov
jl
dec
adc
cmp
xchg
sbb
pop
addl
scas
sbb
mov
and
jp
lock
jl
rclb
mov
ret
sbb
xlat
add
cmp
ret
test
js
lods
pop
fildl
sbb
icebp
pop
sbb
pop
xchg
or
mov
shrl
int
xor
test
pop
jg
sbb
push
xorl
scas
mov
repnz
mov
push
inc
rclb
inc
popa
pop
jle
jmp
into
pop
pop
inc
lea
lret
pop
ret
shl
jmp
loope
jg
sbb
push
mov
scas
add
in
pop
cs
cli
test
je
outsb
lret
sbb
test
leave
cwtl
cmp
rorl
in
shl
push
dec
lahf
and
pushf
mov
push
lds
les
into
fmulp
mov
push
pop
adc
inc
cmpsb
rolb
shr
pop
in
std
int
push
js
arpl
push
jae
add
or
sbb
insl
scas
rorb
jo
fsubrl
das
repnz
sub
test
mov
fstpt
out
rolb
xchg
shlb
mov
mov
call
mov
add
daa
mov
shrb
stos
mov
leave
js
sub
addl
mov
mov
orb
push
cmp
mov
insl
xor
mov
aam
jmp
add
mov
fildl
xchg
popa
icebp
mov
imul
leave
jne
aam
xchg
or
loope
add
cs
aad
inc
enter
mov
adc
or
loopne
stc
push
pop
jne
xor
jmp
int
mov
ljmp
sub
rcr
jmp
sub
daa
imul
subb
push
test
call
or
mov
adc
cmp
push
adc
and
mov
or
incl
mov
push
and
int
jmp
or
sbb
sub
lods
add
lret
mov
stos
movsb
shll
mov
jae
orl
push
mov
int
loop
xor
push
or
lods
mov
or
mov
add
mov
push
test
dec
cmpb
dec
adc
jmp
adc
or
shr
mov
add
xor
xor
mov
push
jmp
fnsave
out
mov
ret
mull
mov
rcrl
ss
into
pop
cmp
insl
mov
sub
adc
add
jecxz
adc
sbb
mov
sub
add
push
cmp
add
jge
push
dec
loop
mov
jb
push
pop
loop
test
mov
push
xor
stc
aam
sbb
test
jg
enter
jp
arpl
sbb
inc
insl
add
cmp
out
push
aas
rol
mov
sbb
cs
insb
shl
test
pop
pushw
push
jo
xor
sbb
xor
add
or
mov
jns
shlb
jg
pop
pop
daa
xor
in
fstl
xor
sub
and
aam
xor
xor
sbb
mov
sbb
mov
cmp
or
push
adc
add
push
pop
mov
cmp
popa
into
mov
xchg
lea
imul
cs
mov
xchg
push
clc
dec
icebp
or
jmp
or
sbb
popl
mov
xchg
ljmp
cmc
and
popf
adc
mov
add
and
lcall
ja
dec
lret
push
xchg
mov
clc
bound
or
pop
push
mov
sbb
mov
in
jo
push
mov
lret
fs
dec
add
add
sbb
or
mov
or
ficoms
rcl
mov
inc
and
ret
push
clc
xchg
repnz
popa
xchg
stos
mov
movsl
sub
lret
sbb
pushf
cs
jne
cmp
pop
xor
jb
mov
adc
rolb
aam
push
or
pushf
push
int3
push
rcrb
ja
inc
aam
nop
outsb
and
lods
cli
stc
dec
cmp
jecxz
or
pop
cmp
xorb
dec
sbb
inc
sub
inc
push
pop
aaa
inc
lcall
enter
repnz
shll
mov
out
or
mov
sbb
sbb
jl
or
adc
out
cwtl
mov
pop
daa
xor
add
sub
loope
and
or
mov
nop
pop
cmc
out
clc
adc
pop
das
addb
push
and
jge
shrl
jbe
push
and
cli
adc
loope
add
push
out
push
outsb
push
lock
mov
inc
cli
adc
pop
push
dec
jbe,pt
jle
pop
lea
pop
sbb
sti
add
daa
cli
fdivl
aam
adc
test
sub
lods
push
dec
inc
inc
xchg
leave
shlb
push
mov
testb
es
outsb
inc
and
sarb
enter
ds
jne
rolb
cs
adc
mov
daa
push
loopne
bound
cltd
int
addr16
push
push
fcompl
pop
outsb
push
dec
xor
mov
test
sbb
inc
mov
leave
jle
add
push
mov
sbb
cmp
pop
test
pop
dec
dec
mov
inc
mov
adc
movb
add
sbb
xchg
hlt
sub
push
jo
add
leave
push
test
sub
icebp
mov
mov
xchg
adc
xor
enter
cmpsl
jge
sbb
mov
testb
test
sub
and
mov
adc
arpl
ljmp
inc
ret
inc
inc
daa
enter
subb
cmp
std
stos
adc
into
aaa
ret
add
dec
les
inc
inc
call
xchg
push
xchg
mov
push
mov
add
out
cmc
sbb
je
push
jne
or
popf
or
pop
add
cmp
into
xor
sbb
imul
adc
mov
sub
lret
arpl
mov
pop
in
xchg
pop
mov
bound
pop
mov
or
fwait
gs
dec
lods
orl
and
imul
add
add
mov
sub
movsl
xchg
ljmp
stc
mov
push
add
cmp
icebp
or
test
lcall
adc
jg
xor
pop
out
mov
insl
stos
leave
fistpll
getsec
inc
push
sub
cs
es
push
sub
push
out
scas
mov
mov
pop
fidivrs
mov
adc
movsb
sbb
or
fsubs
pop
push
into
aad
adc
cmp
sbb
xor
mov
pop
sub
loopne
fs
and
loope
push
sbb
repz
pop
mov
pop
sub
daa
insl
add
negb
add
sub
mov
add
fsub
rcrb
repnz
shl
jmp
xor
bswap
xchg
lods
adc
cmp
call
test
jg
pop
dec
adc
sarl
add
fistl
push
popa
xlat
daa
pop
test
testl
int
add
orb
call
aam
ljmp
fsubp
loop
cmpsl
pop
mov
or
repnz
pusha
jo
push
sbb
sbb
mov
mov
lock
and
and
sbb
dec
in
loope
pop
jmp
pop
sub
sbb
fs
imul
insl
or
mov
daa
add
xor
xor
add
push
push
lret
pusha
outsb
sub
insb
out
in
cmp
ljmp
jns
sbb
lret
pop
out
adc
sbb
mov
cmp
cmp
pop
dec
lods
sbb
push
lret
out
ss
jne
lret
lret
cmp
punpckhbw
push
dec
frstor
shrb
loopne
push
cli
stos
lods
pop
fistpl
fcomps
push
add
mov
ds
add
call
cmp
sbb
lock
stc
jmp
xor
xor
mov
cmp
or
cs
add
js
rol
test
or
mov
inc
inc
in
mov
hlt
mov
cmp
shr
adc
loope
push
cmp
dec
dec
xchg
xor
ds
test
sub
add
push
jae
push
mov
sub
lahf
add
xorb
sbb
pop
lock
or
scas
or
mov
dec
xor
shrl
adc
es
jmp
or
sub
pop
sbb
arpl
or
inc
lods
or
mov
loope
push
fidivrl
mov
enter
dec
xchg
test
lea
fs
and
or
jp
adc
xchg
cmpsb
movsl
mov
sub
sbb
ds
enter
orl
leave
les
ljmp
sbb
push
xchg
or
lock
add
mov
ret
lock
jl
movb
jne
stos
and
mov
push
xchg
mov
lods
or
pop
pop
popf
xchg
sarb
pop
shlb
add
insl
lods
jmp
movsb
lock
jne
xor
dec
outsb
lock
sarb
push
lea
rclb
dec
mov
add
pop
lea
and
jmp
stos
xchg
push
or
push
add
push
ret
mov
xchg
fcmovbe
shlb
insb
mov
sbb
fidivl
nop
or
add
jb
pop
or
xor
add
ret
pop
cmp
sarb
dec
xchg
push
pop
and
lods
rclb
test
pop
jmp
adc
and
loope
ljmp
inc
jo
fimull
pusha
test
stos
sub
out
addr16
mov
push
scas
loope
jmp
loopne
cmpsl
xchg
loope
aad
mov
cmp
mov
sbb
gs
cmp
push
ret
add
add
xchg
fistpl
ljmpw
or
inc
pop
add
xchg
fsubp
sub
push
push
stc
pop
movl
adc
push
xchg
loopne
loope
pop
inc
xor
cli
dec
or
orl
dec
xchg
mov
dec
cmp
xlat
push
lcall
inc
sbb
std
jecxz
dec
pop
sub
dec
imul
mov
push
jo
adc
add
test
int3
push
cld
enter
xchg
mov
sbb
movsl
or
imul
sbb
xor
add
shl
dec
insl
inc
movsb
pop
mov
push
cli
pop
push
mov
movsl
cwtl
jle
outsb
sbb
or
stc
adc
xchg
mov
std
push
ffreep
push
ss
lret
into
cmp
or
pop
add
gs
push
pop
cmpsl
dec
pop
or
sbb
fisubs
push
popa
hlt
mov
rorl
mov
xor
cmp
ret
inc
fldcw
dec
push
cltd
cmp
in
mov
adc
ror
push
mov
cmp
dec
pop
pop
adc
jecxz
xor
mov
push
and
inc
and
jp
pop
pushf
stos
add
outsl
push
push
jge
cmp
adc
movsl
cli
sub
lds
roll
fmuls
push
lret
inc
pop
std
shlb
out
push
push
popa
xchg
repz
and
loopne
xor
jbe
inc
push
into
icebp
inc
repz
pop
cmp
inc
and
mov
push
or
addl
pop
cmc
mov
mov
inc
pop
les
mov
push
mov
push
out
xlat
or
pop
mov
adc
xchg
adc
mov
aad
pop
leave
push
cli
push
fwait
push
negb
cld
inc
adc
dec
xor
lock
jmp
ljmp
jb
out
mul
stc
rcrl
sbb
sbbl
sbb
push
rcrb
xchg
rorl
mov
icebp
imul
lds
and
jle
mov
push
lock
cmpsb
or
ret
sub
sbb
cmpsb
fstl
enter
in
mov
xlat
sub
push
jge
rcrl
movsl
stos
aad
dec
cmpsl
pusha
pop
mov
and
dec
add
push
loope
stos
and
subb
push
scas
cmp
adc
stos
jb
inc
or
push
pop
inc
mov
xor
addb
adc
sbbb
fdivrl
mov
push
and
cs
int
lock
imul
adc
dec
leave
stos
mov
push
pop
sub
sbb
jecxz
cmp
push
mov
pop
add
mov
sub
pop
cld
sub
jb
jecxz
and
addb
or
pop
jne
insb
mov
or
push
dec
adc
pop
inc
xor
mov
out
cmp
add
loop
imul
nop
and
pop
jns
push
add
add
add
dec
popf
rcll
inc
lret
inc
push
jp
rorb
movsl
cli
imul
dec
enter
imul
sbb
or
testb
cmp
add
incl
or
bnd
ret
dec
mov
push
and
jp
sbb
stos
jnp
mulb
jae
cmpsl
aad
xchg
mov
pop
cmpl
inc
or
pusha
jp
sbb
push
cmp
adc
pop
adc
inc
mov
int3
cmp
mov
clc
lcall
pop
fcoml
cmp
lods
lods
mov
imul
rcr
scas
bound
cltd
sub
loope
xor
push
mov
enter
add
add
mov
popf
stos
cmp
mov
and
fucomi
fs
test
mov
rorb
cmp
in
lods
cmp
outsb
push
and
or
leave
adc
fidivl
insb
popa
push
jmp
in
test
mov
mov
push
scas
push
fisttpll
xor
call
pop
mov
adc
ljmp
subb
pop
dec
js
pusha
push
orb
mov
or
sbb
cmp
push
and
rcl
out
into
or
pop
push
xlat
aas
test
mov
lret
add
mov
data16
or
pop
xor
mov
or
lods
pop
jp
mov
adc
mov
lcall
imul
sub
pop
and
mov
testb
mov
je
dec
ret
sub
sub
sub
xor
into
imul
sbb
dec
sbb
out
scas
cmp
addb
mov
xchg
adc
cmp
subb
or
mov
mov
cs
or
sbb
and
push
stos
shll
ljmp
pop
lock
pop
scas
push
inc
cwtl
lret
outsb
mov
xchg
or
into
scas
aad
test
test
lahf
push
push
sbb
xor
or
push
inc
adc
sub
loope
or
gs
aaa
inc
mov
pop
adc
rclb
out
adc
add
jecxz
push
jl
ret
mov
jb
clc
sub
xorl
sbbl
inc
xchg
and
mov
test
add
mov
movsl
dec
iret
call
lods
clc
shrb
sub
mov
out
inc
cmp
leave
add
dec
notb
jge
jb
arpl
fldenv
int
sbb
and
stc
sbb
call
ret
lcall
mov
adc
addb
leave
test
jne
rclb
or
mov
aaa
fcoms
rolb
into
pop
cmp
test
jp
cli
stos
sbb
stos
add
testl
and
sbb
push
push
mov
and
lahf
rorb
in
pop
ja
push
arpl
pusha
pop
imulb
jge
jb
and
mov
sub
or
push
adc
loopne
sbb
adc
pop
insl
idivb
push
inc
imul
mov
pop
mov
push
cmp
loop
stos
mov
pop
mov
jo
lahf
imulb
mov
or
jnp
mov
lret
lods
fisubrl
adc
sbb
push
lds
adc
sbb
inc
in
stos
xor
test
sahf
push
or
rclb
inc
lret
add
mov
mov
or
stc
add
lret
ret
adc
scas
push
pop
insl
or
out
fldt
subb
mov
gs
out
jl
into
inc
push
mov
dec
mov
mov
rolb
sub
jno
icebp
inc
and
inc
repnz
inc
test
push
or
and
stos
mov
push
rcrl
mov
das
xchg
or
cmp
testl
xor
repnz
fcom
adc
imul
movb
push
jnp
mov
out
push
jecxz
loop
sbb
and
repnz
rorb
rcl
out
inc
xchg
adc
pop
in
dec
insl
orb
adc
pop
sbb
icebp
ljmp
roll
scas
arpl
inc
sar
add
call
mov
sbb
and
jne
push
sbbl
rcrb
push
cwtl
rcrb
enter
adc
stc
mov
mov
mov
scas
push
pushf
dec
shr
sub
jl
lret
push
scas
push
je
in
cmp
add
out
scas
dec
mov
xchg
mov
cmp
pop
sar
pop
pop
push
add
mov
mov
fwait
inc
sub
pop
jmp
repz
int3
mov
movsl
push
jno
sbb
lods
xor
push
in
stos
or
xor
or
push
or
or
sub
jo
sub
mov
test
pop
cmp
test
loop
jnp
ret
shrl
mov
mov
pop
movsb
test
sbb
mov
test
enter
pop
rorl
mov
push
or
mov
mov
es
or
scas
mov
mov
mov
out
mov
loopne
clc
shrl
sbbl
dec
cmp
repnz
inc
aas
pop
pop
sub
xor
ret
cmc
mov
jae
mov
cs
push
aas
sub
or
es
inc
xchg
adcb
pop
das
jp
mov
icebp
gs
sbb
addr16
adc
sub
lahf
dec
push
jb
sbb
jp
and
inc
adcl
into
shll
insb
test
cmpsb
das
mov
add
or
add
cld
mov
sub
jmp
mov
dec
dec
mov
dec
sub
std
mov
dec
and
add
or
xchg
mov
ss
bound
cmp
shl
stos
push
pusha
aaa
xchg
mov
stc
xchg
adc
xor
ret
sub
add
fwait
adc
adc
add
jb
inc
scas
mov
aam
adc
pop
gs
adc
add
push
cmp
dec
ds
lahf
push
pop
lcall
sbb
mov
into
or
push
pop
lcall
xchg
rclb
mov
jmp
es
adc
gs
xchg
into
inc
adc
imul
mov
mov
je
call
push
sub
add
or
arpl
pop
hlt
rclb
and
adc
je
mov
fsts
fwait
rcll
shlb
lock
dec
insl
es
adc
inc
adc
push
add
xor
es
adc
cltd
call
xor
sahf
iret
sbb
negb
loop
and
and
rclb
dec
in
inc
pop
ljmp
data16
inc
imul
cmp
adc
or
loopne
call
mov
add
mov
sub
mov
sbb
or
loopne
pusha
cmp
push
or
out
test
sub
loopne
or
push
push
mov
es
xor
mov
add
sbb
mov
cmp
fbstp
xlat
pop
in
add
mov
add
stc
or
testb
scas
leave
and
xchg
jno
test
push
jp
add
mov
mov
add
in
test
push
mov
pop
jl
or
rcl
ja
push
andb
in
sbb
jbe
les
xor
add
les
imulb
jae
or
xchg
sbb
push
pop
iret
into
shlb
mov
sbb
imul
pop
cmp
sbb
gs
shll
add
add
add
pop
fsub
jb
sbb
and
mov
pusha
aad
les
mov
push
in
test
incb
outsl
dec
or
mov
dec
or
or
rclb
sbb
cs
ret
inc
sub
jg
orl
and
xor
fsubl
push
mov
or
xor
lahf
jg
inc
btc
mov
clc
sbb
iret
scas
ret
shll
rclb
gs
shll
sub
adcb
sub
test
pop
in
and
add
hlt
cwtl
in
bound
sub
and
and
jo
push
enter
rcrb
dec
div
pop
xchg
mov
cli
mov
and
repz
lret
pop
jle
adc
sub
rolb
insl
jg
mov
imul
or
ret
xchg
mov
cmp
push
pusha
std
sub
adc
mov
js
adc
call
sub
or
adc
or
adcl
leave
sar
icebp
ljmp
inc
out
cmpsl
xchg
pop
mov
adc
mov
bound
mov
movsl
add
cmp
xlat
jge
movsb
movsl
ret
mov
testb
or
testl
lea
stos
xchg
and
jb
mov
jp
icebp
outsb
enter
push
loope
cmp
clc
dec
xchg
jo
push
jl
mov
dec
lock
inc
ret
in
jge
fidivrl
jge
mov
je
movsl
call
sub
sub
scas
imul
sbb
fiaddl
mov
lods
push
lret
and
loope
push
shll
jle
pop
xlat
rcrb
pop
or
js
jg
mov
mov
aam
xlat
inc
lock
ljmp
cwtl
push
idiv
adc
into
pop
loopne
push
mov
mov
ss
and
mov
sbb
dec
inc
stos
mov
inc
sub
scas
push
lods
or
jle
push
xor
mov
pop
jp
pop
leave
push
sbb
push
iret
test
ret
pop
or
push
push
orl
inc
mov
stc
aam
nop
mov
xorl
add
je
pop
shlb
sub
cmp
clc
mov
dec
xchg
push
icebp
mov
incb
insb
fildll
pushf
mov
adc
xchg
mov
rorl
push
sub
dec
mov
aad
push
lret
inc
push
and
leave
sbb
push
add
rolb
adc
mov
and
xor
movsb
xchg
add
push
dec
sbb
add
or
pop
mov
stos
stos
jmp
inc
pop
mov
adc
shlb
or
dec
add
add
xchg
sbb
jne
fisubrl
xchg
push
daa
and
sahf
xor
push
pop
and
mov
mov
fnstenv
cld
pop
push
xor
pop
add
xchg
add
stc
cmpsl
shlb
mov
test
jb
daa
or
incb
loopne
push
xor
ja
inc
pusha
lret
in
sti
or
or
dec
leave
push
sbb
lret
dec
cs
enter
movb
push
push
inc
push
je
push
mov
ret
pusha
push
xor
mov
mov
push
sbb
cmp
das
jbe
lods
ljmp
or
in
das
pop
sub
bound
rcrb
fwait
xor
out
inc
sbb
out
add
lods
fwait
das
pushf
adc
push
push
pop
je
mov
aad
mov
xchg
mov
xor
punpckhwd
inc
xor
sbb
es
pop
sub
pop
lds
inc
sub
push
leave
adc
mov
rcrl
daa
pushf
adc
ljmp
fistpll
mov
mov
pop
cmp
test
loop
add
test
shll
mov
mov
or
sub
nop
xchg
push
aaa
cmpb
push
xchg
mov
dec
std
mov
or
out
add
xor
test
shll
sbb
out
outsl
and
push
dec
inc
test
ss
sub
xor
cmpsb
mov
es
fdivrl
in
in
cmp
js
rorl
fstps
cli
pop
sub
xor
pusha
rolb
repz
fld
test
cltd
mov
dec
and
movsb
icebp
mov
aam
imul
and
scas
inc
daa
inc
fists
adc
mov
or
adc
shlb
xor
inc
push
dec
orb
push
sbb
or
or
push
ret
mov
push
ljmp
pop
adc
mov
movhps
rcl
repnz
sub
or
push
sub
pop
clc
jo
lret
mov
cmp
rolb
sub
hlt
and
mov
xchg
add
mov
or
inc
mov
push
in
sub
sarb
jl
rol
icebp
testb
lods
cltd
mov
add
push
inc
push
aad
or
jno
pop
add
or
stos
mov
cltd
dec
adc
sbb
sbb
cmc
test
test
sbb
push
addb
ret
push
orl
xor
push
andb
jo
push
pop
fsubs
shl
push
aas
test
and
adc
pop
fs
stos
sbb
inc
leave
cltd
xchg
mov
push
cwtl
sbb
adc
jmp
mov
push
xchg
fists
es
and
stos
int3
jne
mov
outsb
push
push
sub
push
frstor
pop
roll
in
cwtl
pop
push
and
ret
jo
jo
sarl
inc
pop
jb
sub
gs
in
imul
in
mov
push
scas
push
pop
mov
mov
push
add
add
lea
jmp
lcall
inc
mov
cmp
push
sbb
and
inc
leave
inc
shl
xor
cmp
pop
fs
sbb
mov
sbb
ds
cmp
add
mov
inc
or
fwait
xchg
inc
xor
adc
mov
out
shl
test
xor
jp
xor
rcll
lea
lcall
push
test
roll
mov
push
into
inc
or
test
push
pop
scas
xor
roll
mov
xchg
lcall
testb
scas
xchg
adc
bound
pop
paddusb
push
push
xchg
dec
inc
test
fxam
mov
mov
jns
punpckhbw
push
adc
xchg
dec
mov
loope
xor
lds
pop
sbb
push
subb
ret
xchg
pop
lds
push
push
jo
ret
cmp
enter
bound
xlat
lock
sarb
repnz
cmpsl
notb
dec
inc
imul
cld
jns
and
rolb
int3
sub
into
xchg
adc
fs
leave
icebp
mov
add
adc
adc
lret
mov
push
dec
scas
fcom
mov
add
loope
xor
data16
roll
rcl
or
mov
shr
enter
cmc
xchg
stc
sti
and
and
into
shl
in
aad
std
mov
ret
add
lret
pop
shll
es
in
lret
jbe
sbb
inc
das
iret
loope
mov
dec
pop
xor
in
xor
js
inc
mov
das
push
xchg
cmp
mov
dec
int
push
mov
jb
rclb
cmp
jne
adc
jb
push
mov
test
bnd
add
mov
sub
sub
adc
shl
sahf
xchg
jl
pop
nop
stc
fadd
and
push
ret
sahf
push
or
add
xlat
push
xor
adc
cmp
add
adc
push
rorl
test
xor
cmp
sti
movsl
ja
mov
das
cmpsb
rorb
rcll
mov
pop
in
adc
push
pop
cmp
push
mov
cwtl
pop
cmp
add
sub
xchg
in
sub
mov
jmp
hlt
push
je
rcrl
sti
outsb
dec
adc
aad
in
add
xor
xor
push
and
or
push
push
xor
js
and
mov
ja
lea
sbb
cmp
push
loope
sub
xor
cmc
andb
and
mov
sbb
ss
rorl
or
mov
mov
addb
jo
cmp
ljmp
pop
mov
lods
jne
add
orb
sub
dec
shrl
bound
pop
pop
or
inc
cmp
ret
cwtl
sub
adc
lcall
adc
aad
dec
mov
or
das
jo
or
mov
xchg
inc
jg
out
cmp
push
pop
sub
call
lret
mov
sub
and
je
je
loope
inc
mov
cmpsb
shl
inc
add
inc
ficompl
mov
sbb
lea
call
pop
push
aam
leave
sbb
mov
dec
lcall
inc
stos
sbb
pop
sub
xchg
add
in
je
ja
sahf
rclb
in
mov
xor
jno
sbb
stos
sbb
cmp
cmp
or
sbb
pop
sbb
or
push
cmp
mov
inc
cmpsl
xlat
sub
push
mov
imul
xchg
mov
aad
testl
in
movb
rcl
sbb
enter
mov
or
mov
pop
sbb
imul
scas
ds
pop
mov
and
jmp
ljmp
push
pop
in
sbb
cli
or
test
loope,pt
cmpl
pop
push
sub
inc
test
dec
jp
cld
or
lea
mov
and
adc
pop
loope
sbb
cmpsl
add
adc
psubsw
ror
inc
pop
data16
push
add
and
mov
fs
push
lret
cmp
lods
popf
jg
adc
mov
xor
push
sbb
inc
out
sahf
push
xor
movsb
adc
aaa
enter
xchg
inc
push
cmp
lcall
loope
push
push
xor
insb
pop
and
push
int
add
sbb
rcrb
mov
add
jmp
test
negb
add
in
lock
push
lcall
mov
js
push
cmp
mov
xor
ret
push
jo
cmpsb
mov
arpl
sbb
pop
scas
rcrb
iret
pop
ret
mov
fisubl
xlat
repnz
cmpsb
inc
mov
cmp
mov
add
pop
ret
mov
sbb
hlt
loopne
ror
cmc
sbb
lds
or
adc
sti
sbb
out
xchg
push
and
adc
push
sbb
mov
orb
test
pusha
test
or
inc
mov
lret
in
sub
or
jbe
rorl
mov
scas
gs
insb
push
ror
add
mov
lahf
mov
add
and
jo
lea
fstl
std
push
lret
jle
mov
inc
aaa
pop
movsl
pop
push
lds
test
subb
in
pop
rcll
push
mov
ret
xlat
cmp
push
adc
xchg
sbb
cwtl
sub
add
loop
je
jno
add
loop
cld
add
rclb
sahf
ret
test
imul
into
stc
push
int3
and
bound
mov
pop
inc
push
push
aas
cli
sti
add
stos
add
mov
fs
push
xchg
ror
pop
sbb
test
sbbl
mov
add
dec
test
and
inc
mov
call
jo
in
push
jne
pop
sub
rolb
cmovge
dec
mov
adc
stos
pop
subb
loope
jb
push
lcall
add
sbb
aad
xor
mov
cltd
pop
jmp
loopne
pop
sub
call
xor
jo
mov
lret
jae
mov
divb
mov
mov
in
push
out
pop
xor
jo
and
cmp
adc
stos
pop
or
leave
jp
sbb
add
inc
add
push
dec
stc
and
int3
imul
stos
popa
adc
dec
aam
dec
testb
xor
jne
add
xlat
xchg
subb
cmovo
cli
insl
push
aam
xor
fcomps
jnp
or
sub
mov
pop
mov
cmp
mov
rorb
imul
call
dec
or
push
test
insl
cwtl
and
js
lcall
and
shrb
fisubrl
out
ret
add
stos
push
xor
outsb
adc
xchg
dec
pop
jmp
or
push
push
in
inc
cs
ficompl
sbb
cld
adc
cmp
sub
mov
dec
rol
fdivl
mov
mov
loopne
shr
push
sbb
and
mov
xchg
ret
add
mov
push
sub
xchg
sbb
push
dec
ljmp
out
dec
rcl
adc
cwtl
pop
pop
push
adc
add
aad
fcmovnbe
rcrl
daa
mov
rcrl
adc
cmc
mov
ljmp
stos
data16
push
shl
out
xorl
aad
adc
pop
cs
cmpsl
js
add
sbb
add
cltd
xchg
andl
mov
arpl
stos
pop
mov
mov
mov
jl
icebp
das
adc
stc
push
push
xchg
scas
sub
xor
pop
jge
aad
pop
fwait
sarl
icebp
testb
aas
leave
dec
in
add
stos
push
pop
and
push
or
push
sub
in
cmpb
push
adc
or
sbb
cmp
scas
sti
int3
push
adc
add
rolb
xor
outsl
imull
cwtl
jo
dec
ret
cli
inc
mov
mov
xchg
push
test
inc
sarl
mov
scas
adc
cld
mov
add
and
outsb
jge
inc
lods
leave
add
bound
jne
les
sub
push
or
and
test
ret
test
sbb
daa
or
push
lods
and
cwtl
ja
sbb
scas
cli
fidivs
xchg
mov
or
sbb
pop
add
inc
shrl
push
sub
xchg
movsl
ret
add
adc
push
sbb
into
adc
push
add
mov
and
push
inc
pop
sbb
push
lock
add
push
pop
sarl
or
sbbl
sub
sub
pop
out
hlt
inc
adc
push
sub
sub
ljmp
cmp
push
subps
push
cltd
cmp
and
or
shl
inc
mov
shlb
and
enter
inc
jecxz
cmp
and
loopne
push
and
add
cmpl
cltd
xor
jbe
or
dec
jmp
sbb
mov
andb
dec
mov
aam
xchg
fcmovb
adc
add
mov
stos
push
or
add
adc
scas
inc
or
add
sbb
xchg
push
add
push
mov
stc
push
adc
nop
pop
jne
sbb
adc
adc
sahf
adc
lods
lea
icebp
push
and
subb
test
push
mov
insb
dec
sub
rcrb
xchg
gs
mov
xchg
mov
aad
push
inc
adc
lret
inc
sbbl
add
int
jp
fidivrl
rorb
into
push
push
add
push
xorl
icebp
push
cmp
jne
mov
fisubl
in
sarb
pop
sub
adc
je
push
mov
out
call
shrb
and
or
dec
adc
cmp
inc
lods
mov
jge
cbtw
stos
cs
dec
popf
loopne
cmp
push
loop
mov
insb
add
cmp
push
cmpsl
adc
jmp
je
cmp
dec
mov
jno
ret
int3
inc
mov
sti
movsl
into
pop
cs
hlt
lcall
xchg
fmull
jmp
pop
push
adc
out
aam
movsl
add
inc
lock
in
cmp
lea
adc
xor
and
pop
mov
loopne
subb
out
mov
inc
mov
jne
test
inc
and
cs
loop
sub
add
orb
or
jne
push
xlat
xor
fidivs
cmp
push
mov
adc
fs
cltd
inc
ret
ret
or
scas
dec
cmpsb
mov
lock
push
and
in
loope
cmp
pop
mov
pop
cli
xor
adc
adc
push
xor
shr
stos
lea
test
mov
jbe
push
sub
mov
mov
sub
mov
cltd
mov
ljmp
jg
ja
add
or
or
adc
adc
mov
into
push
sub
cmp
or
push
js
cltd
mov
es
and
pop
push
repnz
mov
ja
sub
cwtl
jne
adc
loop
mov
icebp
ret
mov
cmp
or
push
cmpsl
stos
push
scas
push
aad
cmp
clc
xor
shrb
pusha
rcrl
xor
or
dec
or
ror
insb
sbb
inc
stos
pop
push
sbb
scas
xor
stos
cmc
lock
mov
push
lahf
stos
stc
sbb
es
push
or
xchg
test
es
icebp
push
pop
xorl
pop
cmp
adc
std
xor
pop
mov
sub
pop
ljmp
in
jmp
cmp
mov
mull
mov
pop
addb
adc
sbb
mov
xchg
or
sbb
sub
inc
xor
dec
cltd
fstpl
jns
or
sub
sub
xchg
xchg
or
cmc
mov
rcl
jnp
inc
push
push
xchg
jle
add
jle
nop
sub
data16
pop
lods
sarl
pop
mov
mov
xor
in
sub
or
xchg
sbb
loop
shlb
rcll
fs
test
dec
push
jle
jmp
lock
sub
adc
int
push
jp
rol
mov
dec
adc
adc
dec
sbb
adc
xchg
stos
mov
pusha
jb
popa
lret
sti
test
inc
cmp
sbb
gs
dec
sbb
mov
add
ja
shll
rol
test
mov
loop
lods
insb
or
jae
jecxz
add
add
jge
or
mov
adc
sub
loope
sub
or
push
mov
lock
sbb
pusha
rol
or
push
adc
mov
jns
lea
mov
pop
aam
adc
lcall
mov
and
jge
aad
hlt
pop
mov
out
lret
or
and
push
repnz
fcmovnbe
rclb
add
scas
or
stc
fdivrl
aam
xlat
rclb
or
xor
mov
sbb
mov
inc
add
jo
sbb
pop
daa
push
cmp
rorb
mov
jne
es
loopne
sub
daa
scas
repz
mov
or
mov
lock
daa
pop
add
mov
cwtl
or
pushf
mov
mov
xor
push
test
sbb
add
sbb
rcll
push
push
adc
cwtl
xlat
add
sub
mov
or
sahf
push
pop
aad
inc
enter
out
mov
popa
jecxz
pop
sbb
xor
push
or
fdiv
jg
sub
xor
push
add
test
jnp
jae
jne
adc
push
subl
sbb
dec
outsb
sti
daa
dec
pop
aam
inc
jl
arpl
rolb
jo
push
xor
test
adc
lock
popa
addb
add
adc
push
cmp
inc
sbb
fwait
ret
mov
negb
mov
mov
push
cmp
mov
and
xchg
rol
push
mov
das
and
in
sub
mov
jp
arpl
mov
inc
daa
mov
ljmp
scas
jp
add
scas
dec
mov
jmp
push
and
cmp
pop
xchg
mov
push
stos
pusha
xor
nopl
sbb
pop
mov
jecxz
mov
ret
dec
imul
rcr
push
sub
jb
dec
add
dec
shrb
mov
ja
xchg
push
dec
sub
movl
dec
mov
adc
xchg
stos
inc
dec
repnz
into
mov
and
mov
mov
adc
xor
add
pusha
lods
leave
dec
ret
rorl
jbe
sbbl
sbb
js
cmp
sbb
lods
mov
xor
mov
push
push
cli
inc
push
add
sbbb
adc
add
add
mov
cmp
adc
cwtl
cs
cmp
jnp
scas
sub
mov
test
jmp
or
sbb
inc
mov
cwtl
les
cmc
or
dec
shr
and
dec
out
cmp
mov
mov
mov
jmp
cwtl
sbb
pop
mov
adc
stos
mov
jno
lret
lcall
cwtl
int
or
or
adc
adc
sbb
lock
pop
lods
xor
add
out
adc
or
jb
or
or
mov
push
and
or
cmp
xchg
add
loopne
aam
sbb
xlat
loop
cltd
xchg
repz
rclb
pop
push
jb
and
mov
xchg
stc
dec
cs
lock
in
push
out
pop
test
or
and
cmp
and
leave
xor
mov
xchg
cld
inc
sarl
pop
sbbb
add
hlt
or
or
insb
mov
adc
sti
stos
adc
call
stos
xchg
add
subb
xchg
mov
pop
fiaddl
push
cmp
add
inc
xchg
push
sub
jecxz
lea
insl
xchg
mov
stos
and
push
jb
dec
imul
gs
cwtl
adc
or
inc
inc
mov
lahf
scas
push
pop
or
adc
lcall
loopne
aaa
xchg
mov
test
pop
popa
ss
cwtl
or
push
lcall
addb
insb
cmc
mov
xchg
mov
mov
jno
add
les
add
sub
out
push
ljmp
std
xchg
mov
cmp
push
repz
fistl
push
loopne
ds
rcll
cmp
mov
and
stos
pop
stc
sub
pop
pop
push
jbe
push
sbb
fwait
lea
add
push
push
xchg
inc
je
and
out
rclb
daa
dec
push
mov
out
push
cmp
push
inc
mov
pop
push
outsb
dec
xor
or
xchg
adc
test
jo
aam
jns
outsl
add
int3
add
adc
add
pop
inc
mov
or
aad
sbb
xchg
aaa
and
cmp
xchg
sub
mov
add
add
ret
sbb
sbb
adc
sub
adc
jbe
adc
or
outsb
icebp
loope
cmp
scas
or
add
dec
xor
enter
xchg
inc
xchg
cmc
inc
icebp
fs
or
shrb
subb
adc
ss
repnz
mov
sbb
sbb
test
add
and
fwait
ret
xchg
js
inc
and
or
dec
in
pushl
stos
add
and
push
push
nop
or
xchg
sub
xor
lret
add
insb
adc
xchg
pop
in
clc
push
push
imul
pop
jno
loop
scas
pop
test
fwait
push
adc
adc
nop
icebp
in
pop
rorl
push
and
outsb
arpl
xchg
ds
loope
loopne,pn
adc
fcoms
mov
imul
add
mov
cmp
cmpsb
sub
cltd
push
push
xchg
push
sbb
aam
adc
lods
add
and
into
fstpl
test
mov
lds
push
push
adc
pop
mov
add
mov
jmp
cmpsl
adc
out
push
cpuid
sub
rorl
sbb
mov
inc
jmp
xchg
stos
mov
adc
sub
add
pop
push
push
lcall
push
inc
sbb
xchg
gs
inc
icebp
xchg
sbb
lret
popa
or
pop
sbb
cmpsb
mov
pop
mov
clc
aaa
push
cltd
stos
insb
int
jle
jo
adc
pop
xor
mov
loopne
jecxz
jmp
xchg
loop
stc
adc
xor
mov
addl
sbb
hlt
push
xor
lock
rolb
push
into
shll
subb
and
shl
cli
popa
sbb
ret
or
mov
mov
dec
push
call
arpl
call
orb
cmp
xchg
dec
sbb
icebp
mov
out
sbb
mov
pop
das
push
mov
pusha
call
add
mov
addl
push
lret
mov
or
mov
mov
sbb
jb
or
sbb
mov
pusha
lods
enter
icebp
xor
inc
jmp
adc
sahf
cltd
pop
inc
xchg
cmpsl
adc
shlb
enter
test
sbb
inc
scas
orl
push
jno
sbb
mov
jmp
shll
adc
fistl
mov
xchg
push
dec
rcl
xor
xor
jne
and
jg
ret
adc
test
add
sub
inc
sbb
aam
popa
aad
sbb
adc
loop
lea
mov
leave
sti
shll
adc
push
mov
mov
add
xchg
push
popa
leave
lds
sub
ja
lea
mov
push
incb
mov
push
lods
mov
lock
das
push
xor
test
or
jb
add
mov
stc
pop
mov
jbe
sub
pusha
pop
jbe
mov
mov
xlat
push
mov
addb
adc
ret
repnz
push
add
sbbb
psubb
push
in
push
lcall
xadd
adc
andb
inc
cmp
mov
adc
mov
loopne
clc
enter
test
cmp
jg
push
mov
push
mov
int3
andb
adc
scas
andb
sti
xchg
test
movsb
push
push
inc
ljmp
sbbl
ret
loopne
mov
test
lcall
std
pop
cmovo
push
leave
push
adc
mov
push
insl
sbb
sbb
pop
xlat
iret
rdpmc
sub
loope
fldl
ljmp
lock
inc
lcall
inc
shrl
or
mov
dec
test
jp
and
sbb
adc
mov
lret
inc
xchg
or
mov
sub
push
add
ret
pop
inc
js
add
mov
es
popa
push
dec
push
push
sub
inc
js
xchg
into
pop
es
mov
jb
push
adc
adc
sbb
dec
rclb
idiv
sbb
and
or
rolb
pop
leave
test
sbb
aam
test
ret
xor
dec
fists
mov
dec
push
inc
mov
adc
add
mov
add
mov
add
pop
cmp
lods
add
pop
test
aaa
push
mov
bound
ret
pop
fs
jge
cli
int
adc
shr
stc
mov
sbb
dec
adc
aaa
test
dec
mov
xor
add
push
or
sbb
loop
test
sub
mov
test
push
push
les
arpl
lds
inc
bound
bound
data16
adc
and
loopne
xchg
data16
xor
sbb
sbb
and
cmp
add
pop
adc
ret
push
add
mov
inc
inc
sub
int3
rolb
out
andl
cmc
cmp
mov
rorl
xchg
fwait
aam
or
push
inc
sub
cmp
or
addl
ret
jo
addr16
jb
lock
inc
loopne
ror
ret
mov
cmp
inc
and
xchg
stos
outsb
sti
inc
test
subl
loopne
mov
push
mov
xor
or
sub
or
bound
rclb
or
inc
pop
push
jo
stos
lock
in
shrb
xchg
aam
fdivs
ret
aam
or
rclb
out
sbb
cmp
pop
insb
bound
push
jmp
mov
or
jbe
idiv
sbb
add
mov
cmp
popa
jb
sub
push
sbb
leave
decb
rolb
enter
pusha
lret
fstp
and
orl
fwait
or
add
inc
shl
andb
sbb
shl
jo
pop
mov
loopne
repz
xor
loope
xchg
mov
add
daa
dec
push
xchg
push
add
lock
insb
xchg
ror
cli
or
shll
adc
lods
add
leave
out
mov
lods
push
mov
push
fists
sbb
neg
call
lea
mov
add
fcoml
cmp
sbb
xchg
testl
out
addl
jp
or
addr16
or
call
push
loopne
push
jne
add
dec
shlb
ret
push
iret
xor
movb
cmp
or
adc
mov
push
loope
mov
adc
add
push
inc
xchg
dec
and
push
xor
ret
inc
cmpl
add
xchg
xor
jo
push
inc
cmp
insb
dec
or
mov
repnz
cs
and
rclb
xor
dec
in
and
add
xor
adc
jnp
call
adc
pop
call
cmpsb
call
pop
aam
sub
dec
test
push
adc
sub
xor
das
mov
loopne
or
add
dec
shl
jl
aad
add
ret
jl
add
enter
mov
xchg
loopne
call
out
lods
lds
cmc
adcb
shll
ret
push
sbb
test
roll
shll
or
pop
adc
sbb
inc
sarb
pusha
cmp
ficompl
and
add
or
int3
push
nop
icebp
pop
xchg
test
mov
stc
pop
lea
mov
jno
pop
sbb
and
lcall
add
or
int3
movsl
inc
ret
in
and
dec
aas
rolb
je
or
adc
into
test
lds
addl
add
das
stos
xor
mov
adc
mov
in
xor
dec
fiaddl
dec
inc
push
xor
nop
jmp
out
inc
lret
ficoml
or
mov
sbb
adc
test
test
xchg
add
sub
push
sbb
movsl
lahf
cmp
lcall
cltd
dec
sbb
adc
mov
xor
lret
xlat
cs
push
mov
cmp
push
push
inc
lods
adc
cmpsb
mov
push
lcall
lret
cmpb
ss
sarl
arpl
or
adc
push
dec
jno
mov
inc
rol
sbb
scas
push
inc
push
popa
push
push
dec
xchg
cmp
sub
mov
and
sysenter
test
adc
inc
rcrb
fcmovnbe
mov
xchg
test
mov
in
in
fidivs
ret
insb
fiaddl
dec
repnz
push
jp
stos
int
out
test
xchg
and
mov
inc
scas
orl
sub
sbbb
mov
bound
mov
add
popa
inc
xor
pop
cs
sar
lcall
test
and
stos
inc
mov
and
roll
enter
push
xchg
arpl
or
adc
mov
sbb
dec
or
pop
pop
adc
mov
push
flds
mov
divb
pop
cld
mov
nop
pop
xchg
sub
jbe
imul
imulb
xchg
add
mov
adc
sbb
les
cmp
mov
sbb
mov
xchg
add
ret
push
mov
or
in
xor
data16
inc
sub
lea
push
orb
add
add
push
in
pop
cmp
mov
inc
lods
adc
inc
adc
bound
getsec
and
inc
loope
pop
mov
xor
sbb
and
or
add
add
shrl
mov
dec
inc
je
ret
out
adc
pop
sub
xchg
mov
popa
jnp
daa
mov
repnz
add
call
scas
mov
sbb
mov
out
fs
dec
and
sahf
or
xor
es
cs
fistpl
xor
add
and
call
movsl
push
xchg
pop
push
dec
ret
inc
xchg
add
out
or
jg
mov
cwtl
shlb
add
add
adc
jmp
jb
and
push
mov
push
inc
xchg
mov
ret
add
iret
add
stc
loop
xor
add
jb
ss
add
inc
push
mov
sub
int3
rolb
push
rorb
mov
mov
dec
loopne
sbb
adc
out
outsl
imul
inc
ljmp
sti
mov
or
jnp
add
push
jle
stos
loope
push
mov
pop
dec
sub
add
int3
and
or
and
or
inc
sbb
loop
add
aaa
sub
adc
test
cmp
into
jle
or
je
mov
jp
add
dec
adc
sbb
insb
and
pop
stos
pop
fisubrl
push
addr16
adc
ss
aad
gs
cmp
add
fcoml
popf
cmp
les
iret
loop
pextrw
lcall
pop
mov
inc
test
sub
inc
and
push
adc
mov
mov
cwtl
and
out
call
rorb
add
sbb
cmp
add
popf
enter
push
or
stos
push
leave
push
adc
jb
je
ret
jne
aad
add
sbb
sbb
daa
je
hlt
test
sub
push
ret
clc
adc
mov
pop
pop
adc
mov
dec
incl
sbb
mov
inc
jno
negb
fmull
in
das
adc
mov
sbb
pop
ljmp
faddl
add
mov
fimull
and
pop
xor
je
ret
call
arpl
das
lahf
or
stos
cld
arpl
xor
cmp
sarl
dec
or
das
adc
add
inc
push
and
or
and
sub
dec
xor
sub
dec
shrb
popf
rcrl
rorb
cmp
push
pushf
sub
mov
push
scas
jo
xchg
lods
stos
stos
push
xchg
pop
pusha
cmp
xchg
imul
xor
add
cmpl
cmp
sub
push
push
popf
adc
mov
nop
sbb
int
adc
add
jb
lret
sbb
fidivl
test
add
add
in
inc
movsb
sbb
test
and
or
enter
mov
test
push
pop
xor
jbe
into
dec
xchg
inc
xor
fcompl
inc
pop
xchg
stos
xchg
test
popa
fcomps
mov
adc
or
push
xchg
cmp
add
scas
and
sbb
pop
lods
clc
sbb
pop
xchg
fcoms
jo
sbb
inc
stos
or
daa
jno
mov
mov
push
push
pop
cs
add
cmpsb
int
gs
lret
icebp
inc
xor
or
lret
sub
shr
jno
push
xor
mov
adc
cmp
sub
pop
sub
dec
push
sub
cmpsl
sub
repnz
shrl
mov
push
mov
and
sub
out
movsb
xor
dec
mov
cli
or
cmp
rol
inc
and
adc
adc
mov
inc
add
add
test
pop
hlt
mov
sub
je
ljmp
clc
xchg
mov
lea
dec
fbld
stos
sbb
aad
push
mov
les
aam
daa
sbb
mov
add
inc
mov
je
or
hlt
mov
or
mov
mov
and
jecxz
and
pushf
sbb
mov
add
out
xchg
mov
add
adc
loopne
loope
mov
shll
xor
mov
andb
rcll
fimull
push
repnz
into
rclb
xor
shll
pop
andb
call
inc
leave
mov
lods
push
mov
adcl
sbb
sarl
ja
fldl
sub
or
mov
add
inc
jno
and
jp,pn
js
xchg
cmp
mov
fcmovne
inc
adc
mov
in
add
lds
cld
or
mov
jno
push
or
inc
and
pusha
ljmp
and
pop
rolb
mov
cs
cmpsb
inc
adc
inc
daa
push
push
adc
push
enter
fcoml
inc
mov
cs
loope
jne
sub
xchg
jmp
jmp
lret
inc
mov
cmpsb
adc
mov
enter
shll
cmp
add
lret
pop
cmp
scas
pop
jle
fiaddl
xchg
icebp
gs
sbb
rolb
cltd
dec
scas
adc
pop
loopne
mov
adc
pop
rorl
add
xchg
inc
sbb
cmp
adc
jecxz
xchg
mov
push
xor
or
adc
leave
xor
insl
xor
sbb
rcl
push
cmpsl
inc
in
sub
addr16
push
mov
push
mov
push
out
or
shll
sub
and
push
sets
loopne
push
mov
insb
imul
test
mov
mov
jmp
testl
les
sbb
push
shl
leave
adc
xor
jmp
test
test
or
outsl
sbb
rcrl
insl
int3
mov
lea
in
in
cwtl
ds
or
adc
and
xorl
push
sbb
pop
out
mov
pop
xor
push
aad
push
out
pop
insb
push
aam
roll
cmp
call
lea
push
jecxz
dec
adcb
or
dec
outsl
lret
cmp
int
mov
in
adc
adc
and
flds
xor
push
jecxz
mov
jmp
mov
out
shl
push
pop
cmp
jns
repz
and
mov
mov
or
and
push
cwtl
movsl
bound
nop
cmp
sub
add
sbb
or
mov
sti
add
sbb
in
add
adc
pop
loope
test
add
push
enter
push
out
adc
inc
dec
add
mov
es
subb
pop
lods
cs
push
rorb
ret
adcl
gs
xor
into
sub
cmp
jo
inc
dec
cmpl
jmp
ljmp
inc
add
sub
or
xchg
mov
pop
mov
aaa
jne
add
or
into
std
mov
iret
xor
push
sbb
adc
push
inc
lods
rcrb
xor
and
push
stos
mov
and
insl
add
test
push
jecxz
pop
popf
lock
adc
inc
mov
loopne
push
xchg
subl
andb
int
sub
xchg
sub
xchg
or
xor
pop
mov
sbb
movsl
aam
icebp
and
or
mov
or
insb
shlb
or
stc
push
jecxz
push
dec
lds
addr16
and
mov
sti
pop
lods
or
adc
insl
int3
add
xor
orl
xchg
adc
mov
and
push
adc
and
aas
add
pop
adcb
xchg
lock
repnz
inc
les
imul
loopne
add
ret
sbb
movsb
stos
nop
mov
and
adc
mov
sbb
cmp
loop
scas
push
rclb
addl
add
lock
sub
inc
inc
and
imul
cmpsb
imul
mov
sbb
aas
idivb
int3
inc
xchg
pop
mov
xchg
sub
sub
and
popa
adc
pop
dec
mov
loopne
leave
add
test
inc
push
pop
sbb
cmp
xchg
inc
bndldx
loopne
sbbl
push
and
xchg
clc
or
sub
pop
jo
movl
enter
mov
mov
sti
push
inc
mov
adc
xor
fidivrs
add
push
adc
movsl
je
sub
or
push
push
das
sub
xor
out
leave
sbb
rol
mov
adc
or
cs
mov
fbstp
xorl
inc
mov
jmp
scas
xor
mov
push
pop
cli
ret
pop
test
dec
cmpsb
loope
sub
add
cmp
cmp
xlat
cmp
inc
andb
mov
mov
xchg
into
pop
xor
push
mov
xchg
clc
andl
push
les
push
or
scas
lock
mov
mov
pop
popa
ljmp
adc
dec
sbb
pop
push
mov
and
sbb
inc
stos
and
cmp
sbb
mov
cmp
gs
adc
push
inc
cmpb
ja
xor
add
adc
mov
shr
push
addl
mov
mov
push
cmp
mov
xchg
aaa
mov
test
or
cwtl
mov
xor
inc
call
sbb
pop
stc
push
sbb
cmp
pop
mov
jp
cmc
pop
stos
insl
or
sbb
cmp
or
or
jl
push
mov
cmp
sub
outsb
add
xchg
inc
inc
inc
push
sbb
push
xor
add
sbb
rorb
test
jo
pusha
mov
sarb
incl
jb
mov
data16
inc
rol
mov
cli
in
and
pop
mov
enter
xor
cs
repz
aam
shl
or
adc
faddl
mov
sarl
and
divb
ljmp
hlt
push
push
scas
enter
lahf
pop
inc
pop
sub
aas
loopne
pop
push
xchg
sub
je
jno
adc
ret
scas
jb
push
mov
test
stos
mov
test
insl
push
and
xchg
rcll
adc
add
addr16
add
popf
movsl
pop
inc
pop
fwait
ret
and
adc
rcrb
push
mov
flds
xchg
pop
push
cs
and
sub
mov
inc
or
mov
cmpb
pop
sub
lods
mov
mov
sub
xchg
ret
inc
adc
mov
mov
mov
dec
es
xor
xchg
add
lods
adc
rolb
or
mov
sbbb
enter
xchg
cmp
adc
les
sbb
push
or
in
dec
inc
mov
mov
movswl
cltd
stos
lcall
inc
mov
mov
pusha
pop
adc
mov
roll
fmuls
cmp
pop
sbb
jbe
ret
shlb
aaa
dec
out
adc
pop
fsubl
push
add
scas
and
or
inc
out
add
aaa
inc
mov
xor
inc
adc
xor
or
xor
bound
cmc
ds
pop
outsb
inc
cmc
pusha
cmpsl
in
jo
sub
xchg
fsubrs
xor
push
mov
lret
xchg
add
pop
xchg
jecxz
shr
mov
jns
adc
cli
test
pop
xor
cmpsl
push
out
pop
sub
mov
inc
adc
and
sub
dec
daa
adc
dec
call
incl
ja
jo
add
cmp
push
push
cmp
push
test
push
cmp
pop
add
inc
mov
stos
in
or
shll
movsb
movb
inc
dec
mov
lcall
out
push
inc
scas
or
test
xor
xor
add
fsubrl
mov
push
loop
push
or
inc
mov
testb
pop
mov
lret
sub
or
js
scas
movsl
lret
mov
push
adc
ss
jno
push
arpl
jne
roll
loopne
push
shl
inc
stos
mov
adc
jb
mov
aad
icebp
and
jb
fs
xchg
cmp
jo,pt
inc
adc
sarb
push
movsb
dec
dec
mov
mov
lods
push
cmp
les
sbb
push
ret
pop
push
cs
mov
repnz
push
xchg
add
icebp
mov
movsb
mov
push
lahf
add
hlt
shll
push
cmp
cli
xchg
add
add
in
inc
xchg
les
lcall
sbb
scas
pop
push
sbb
add
or
add
inc
inc
ret
inc
sub
bound
icebp
cld
lea
je
lea
xchg
inc
ret
cmp
cs
mov
jb
mov
push
cld
sbbl
cwtl
adc
inc
adc
add
outsb
adc
add
mov
test
adcb
cmp
shl
jmp
ret
pop
cmpl
push
jecxz
bound
add
scas
shlb
mov
mov
hlt
bound
and
or
mov
or
adc
mov
push
lea
xchg
inc
and
push
lcall
sbb
push
je
pushaw
push
andb
gs
xchg
add
rol
push
hlt
shrl
pop
adc
push
dec
dec
sahf
jo
lods
xor
adc
sbb
dec
into
sub
adc
add
test
jae
gs
cmpsl
xor
sbb
sub
push
mov
cmp
nop
test
movsb
repnz
sbb
test
dec
xchg
jo
adc
or
sub
adc
pop
push
push
fstl
push
fdivr
cmp
mov
mov
mov
or
pop
xlat
popf
nop
or
jae
push
pushf
dec
xchg
pop
ret
aad
or
test
bound
enter
pop
jle
stos
mov
jb
push
mov
jecxz
lods
or
imul
loopne
test
add
inc
gs
pop
lods
push
cmc
xchg
repnz
add
mov
jo
jae
push
fld
push
mov
popa
push
add
loope
add
leave
sub
add
pushf
test
mov
pop
cmc
mov
cmp
fs
sub
mov
mov
adc
cmc
imul
out
repz
cmpsb
mov
ds
es
mov
add
cmpsl
cmp
or
cwtl
sub
cmpb
or
sar
xor
push
shlb
adc
push
adc
ret
adc
xor
add
aad
cmp
sbb
test
adc
sbb
out
push
pusha
idivl
aam
sbb
pop
push
mov
mov
xchg
or
sub
cld
push
sbb
scas
or
mov
cmp
or
push
inc
mov
add
cwtl
add
lea
test
clc
aad
push
shll
lock
stos
dec
jo
xor
test
and
mov
adc
push
pop
jne
jb
mov
loop
scas
add
xlat
movsb
stos
test
icebp
lods
pop
test
lds
aam
and
subl
pop
inc
sub
jnp
push
or
in
pop
rclb
imul
cmp
mov
pusha
ljmp
mov
xchg
testl
test
push
xor
xlat
xor
inc
add
lods
mov
lret
shr
inc
imul
mov
xchg
mov
sbb
cmp
mov
mov
add
lods
mov
bound
enter
xchg
adc
xchg
mov
scas
das
call
rcll
cmp
sti
arpl
push
mov
add
inc
mov
sub
push
push
pop
test
and
or
mov
dec
orb
push
adc
add
dec
mov
dec
clc
sbb
shll
test
push
out
icebp
pop
jge
ljmp
iret
clc
cmp
add
or
test
lahf
mov
adc
inc
fmuls
fisubs
or
cmp
adc
mov
push
adc
add
jge
sahf
adc
pusha
nop
stos
test
and
mov
lock
enter
out
adc
push
jmp
stos
pushl
xchg
jno
sub
les
out
pop
xchg
lds
jo
xchg
sub
mov
inc
ljmp
cwtl
add
je
add
cmpsl
dec
adc
jmp
orb
push
cmc
orb
addb
jo
mov
dec
push
pop
data16
sub
mov
lahf
adc
mov
add
stos
push
xor
push
mov
add
and
popf
mov
dec
daa
push
mov
jb
pop
push
enter
jae
push
and
inc
xchg
inc
test
sub
mov
cmpsl
push
loopne
xchg
mov
jo
in
pop
hlt
mov
pop
subb
enter
mov
jne
lret
ret
xchg
arpl
fwait
xchg
pop
imul
sbb
rcrb
in
mov
push
push
mov
or
add
adc
mov
aad
xchg
arpl
ret
mov
push
mov
das
into
lods
xchg
push
push
movsl
push
jecxz
sbbl
inc
pop
clc
and
add
ret
mov
or
mov
cwtl
rolb
sbb
xor
rolb
or
sbb
inc
clc
rolb
sar
lret
cmpsl
call
xorl
lret
pop
fidivrl
pop
inc
inc
sbb
adc
mov
pop
mov
scas
mov
adc
aam
xlat
mov
std
das
adc
mov
pop
insb
or
sub
stos
or
cmp
pop
pop
arpl
sbb
push
xor
icebp
aam
mov
add
mov
or
and
or
mov
mov
and
cmpsl
push
sbb
add
sbb
mov
xor
icebp
loop
lds
lea
mov
sbb
gs
and
push
adc
scas
fadds
dec
or
je
cmpsl
or
clc
fwait
xor
sbb
mov
orb
adc
pusha
add
dec
xchg
out
stc
dec
stos
test
mov
pop
leave
mov
lcall
add
subb
enter
inc
add
daa
and
dec
xor
and
gs
mov
inc
add
add
lea
ret
add
push
arpl
lock
cmp
lods
sbb
les
push
xor
inc
test
es
mov
fbld
mov
push
mov
scas
rcrb
add
dec
mov
xlat
add
dec
addr16
sbb
mov
loopne
mov
hlt
mov
mov
inc
jb
push
cmp
stos
or
mov
ret
and
mov
fs
stc
pop
sbb
orb
adc
int
mov
and
add
nop
imul
fsts
cmp
push
sbb
in
sub
or
inc
js
adc
cmp
cwtl
or
push
addb
mov
or
xor
jl
or
cmp
movsb
adc
push
cmp
mov
shrl
mov
xor
add
rclb
inc
mov
xchg
rolb
adc
popf
loope
test
push
aam
mov
adc
inc
or
adc
aaa
das
dec
leave
lret
push
mov
ss
fimuls
sahf
push
sub
movsb
fldl
dec
adc
out
shrb
xchg
dec
xor
test
in
pop
sbbb
xchg
adc
mov
sbb
add
jo
mov
pop
cwtl
add
bound
sub
stos
jb
and
mov
mov
sbb
mov
and
push
loopne
pop
popf
jo
mov
adc
movsb
pop
and
xchg
in
sub
cwtl
inc
out
loopne
jmp
jne
shll
adc
andl
adc
sub
sbb
sbb
or
inc
or
shll
lret
out
lods
mov
mov
push
adc
aad
pop
out
xor
push
push
js
sbb
in
inc
leave
add
sbb
not
movsb
sbb
imul
orb
push
or
push
nop
aaa
dec
mov
jmp
dec
pop
and
jge
cmp
movsb
push
hlt
rcll
push
mov
inc
stos
jo
loope
dec
sub
pop
pusha
test
inc
or
xor
mov
rol
mov
push
sub
xor
test
cmc
cmp
lds
fiadds
data16
xchg
lret
inc
sbb
lret
add
add
pop
sbb
shrl
clc
push
pusha
xchg
mov
cmp
pop
pop
add
inc
rcrl
pushf
mov
jne
and
enter
insb
inc
lods
add
or
in
sbb
mov
shlb
mov
nop
leave
add
test
popa
mov
add
roll
add
inc
sbb
push
push
add
push
pop
xchg
mov
test
shlb
or
jbe
mov
sub
cmpsb
and
repnz
inc
sbb
push
scas
into
xor
pop
je
adc
enter
add
or
cmp
mov
js
aad
test
testb
push
int
setbe
stos
aas
vpmuludq
ud1
adc
mov
inc
int3
push
or
xor
inc
cmpsl
adc
mov
or
cmp
les
push
and
xlat
and
test
pop
dec
xchg
test
addb
cltd
fists
xchg
mov
call
stos
jp
sbb
adc
add
pop
and
or
inc
roll
ret
lds
jo
push
pop
and
ss
cmp
mov
mov
jne
mov
sbb
jg
or
adc
mov
dec
sub
push
addl
jl
inc
roll
push
mov
dec
lods
pop
sbb
pop
fwait
pop
outsb
mov
dec
dec
cmc
imul
adc
inc
outsl
add
push
rcll
les
and
add
sub
xor
fcom
xlat
push
flds
jl
icebp
push
jbe
test
cmovnp
adcl
addl
pop
sbb
xor
inc
xor
in
sbb
add
add
mov
sbb
sbb
icebp
mov
sub
in
lret
sub
rcrb
push
add
addb
sub
out
mov
xorl
inc
insb
ret
cmc
add
push
aas
mov
scas
sbb
dec
into
imul
lods
add
call
sbb
mov
sub
fcmovu
push
or
push
or
lods
jecxz
or
mov
cmp
cwtl
pop
repnz
imul
push
aad
xchg
or
loop
mov
xor
sbb
inc
sbb
rcrl
in
push
movsl
aas
pop
lds
ret
shrb
into
loope
add
dec
fs
pop
lds
or
and
add
addr16
sbb
or
inc
cwtl
and
push
or
and
sub
insl
xor
sahf
gs
pop
xchg
sub
push
adcb
mov
loopne
or
call
stos
add
es
or
in
sub
cmp
sbb
fstpt
push
pop
clc
or
test
sbb
xchg
xchg
jno
jnp
push
mov
xor
and
out
mov
adc
bound
in
adc
aad
inc
xor
fidivrs
pop
adc
into
and
mov
adc
pop
icebp
addl
push
push
xchg
negl
adc
jnp
sbb
sbb
cmp
adc
push
insb
pop
adc
lea
xor
movsb
mov
adc
mov
push
into
add
sbb
addl
jno
sbb
add
dec
popa
mov
jmp
stos
popa
dec
or
cmp
jnp
loopne
jo
xor
xchg
ret
xor
sub
push
cmc
inc
in
loop
call
push
mov
aam
jo
pop
ja
push
imul
dec
pop
mov
push
xor
dec
mov
adc
adc
and
mov
pop
enter
xor
inc
ljmp
mov
xor
cmc
inc
cmpsb
sbb
sbb
mov
inc
adc
add
stos
sbb
push
mov
mov
sub
and
in
movsl
fistpll
call
mov
inc
sbb
fidivrl
into
jmp
cmp
mov
pop
jge
sbb
in
xchg
aad
loop
add
or
aas
out
xchg
sbb
es
into
sbb
add
mov
jecxz
and
sbb
dec
jl
mov
sbb
test
xor
add
mov
add
mov
or
inc
mov
xchg
sbb
or
mov
add
cmp
inc
sbb
icebp
aad
and
mov
test
popf
es
add
mov
aas
and
packsswb
push
rclb
add
aaa
xchg
adc
enter
in
xor
add
pop
inc
xchg
or
push
dec
or
push
pop
psllw
repz
dec
and
loop
jle
push
popa
push
xor
dec
aam
shrl
sarb
mov
adc
loopne
adc
pop
cmp
sbb
inc
add
clc
inc
mov
aas
or
inc
mov
mov
es
daa
lret
adc
shll
sbb
sbb
add
call
sbb
mov
xor
xor
cmp
xchg
jp
mov
imul
fcomps
into
sbb
pop
and
mov
mov
stos
outsl
add
andl
clc
lds
mov
cmpsb
push
dec
and
inc
inc
lods
and
stos
sbb
and
addr16
sbb
popf
adc
or
ljmp
or
out
arpl
dec
test
and
inc
mov
jne
or
clc
xchg
push
test
inc
or
and
inc
sbb
mov
inc
jae
sbb
xor
call
lahf
cmp
push
jno
add
sbb
popa
mov
addl
and
int
mov
pop
xchg
add
push
pushf
sub
and
jp
cmp
jae
mov
jbe
sub
shrl
mov
xlat
xlat
jge
adc
or
icebp
or
lock
aam
fists
add
rclb
pop
mov
cmp
mov
sbb
push
stos
and
mov
les
in
nop
jne
inc
mov
ret
add
mov
adc
push
sbb
mov
scas
ljmp
or
cwtl
mov
inc
or
fs
hlt
inc
jnp
cwtl
scas
je
aam
xor
rcrb
movl
xchg
sbb
push
add
xor
xchg
in
xor
dec
inc
push
jae
insb
jae
sbb
ss
shrl
and
aam
dec
sarl
shlb
pusha
ss
dec
adc
jnp
pusha
push
insl
movsb
mov
add
push
in
mov
cmp
and
or
xor
sbb
ret
int3
shrb
loope
sbb
cwtl
addb
adc
shrl
sbb
jp
cmp
push
mov
loopne
addr16
pop
push
xchg
sub
das
popa
adc
adc
inc
adc
push
add
and
push
mov
stos
mov
imul
adc
sbb
iret
lods
cmp
sbb
adc
movsb
sbb
stos
in
add
int3
ljmp
sbbl
push
jecxz
push
push
and
popf
and
sbb
scas
pop
adc
pop
and
addb
inc
cmp
leave
pop
fwait
push
inc
mov
add
and
or
ja
cmc
orb
jl
nop
js
mov
and
fbstp
sub
out
repnz
sbb
pop
sbb
cwtl
and
rorl
add
mov
or
lret
dec
push
cmp
sbb
add
adc
subl
sbb
jp
push
push
add
mov
jl
notb
or
orl
pop
popf
sarb
add
pop
xchg
inc
push
sbbb
shr
xor
icebp
sub
adc
and
push
push
gs
fld
rclb
xchg
xchg
and
jns
xor
push
or
dec
adc
stos
aam
mov
scas
add
sub
add
and
fadd
cmp
and
and
sub
adc
jo
sbb
ret
sbb
sbb
push
mov
lahf
fdiv
lcall
into
mov
mov
or
ret
movsb
sbb
xor
inc
push
lret
cmp
dec
pop
mov
jecxz
ret
bndmk
cmp
lods
dec
sub
and
int
add
ret
inc
pop
xlat
lods
dec
adc
mov
jo
xor
inc
cmp
ds
inc
mov
mov
bound
cwtl
sahf
mov
shrl
mov
xor
and
fldenv
xchg
leave
ljmp
lea
sub
enter
cmp
push
mov
inc
pop
outsb
loope
daa
or
inc
inc
in
mov
rorl
call
or
mov
es
dec
sub
sbb
sbbb
testb
or
pop
mov
add
test
inc
in
add
push
pop
mulb
xchg
orl
filds
push
pop
mov
add
or
jp
pop
test
sbb
inc
or
or
js
adc
sahf
add
mov
add
push
xor
push
and
jne
add
je
push
and
xchg
adc
data16
stos
inc
aad
inc
mov
pop
jecxz
fdivs
and
sbb
add
inc
sbb
fnstcw
sbb
xchg
rcrb
push
xchg
mov
cld
mov
in
push
ljmp
clc
ficoml
mov
xchg
xchg
popa
add
movsb
or
clc
mov
mov
push
sub
adc
push
adc
or
nop
add
mov
dec
inc
fistpl
rol
orl
xchg
xor
mov
push
cmp
sbb
push
mov
sbb
add
cmp
jne
cmp
sbb
inc
inc
movsb
pushf
pop
push
mov
sub
pop
aam
orb
icebp
adc
pop
enter
in
xchg
inc
xlat
mov
notb
out
icebp
imul
mov
push
mov
inc
pusha
mov
push
or
sub
xor
lea
ffreep
imul
insb
mov
lret
mov
fisubs
push
jae
or
xor
or
xor
adc
int
jp
xchg
push
sbb
sbb
jb
or
cmp
stos
dec
punpckhdq
xor
rorb
add
or
mov
dec
jl
dec
movsb
testb
mov
pop
lods
inc
movsl
dec
pop
inc
cmpsb
das
out
push
data16
add
push
xor
push
xchg
xor
and
sbb
push
pop
mov
sbb
fcomps
inc
inc
mov
dec
and
pusha
arpl
and
sbb
sbb
add
xchg
mov
cmp
into
sbb
popf
xchg
out
mov
clc
cmpb
push
mov
or
sub
inc
pop
andb
adc
ss
jae
or
sar
scas
jp
ret
sub
orb
jae
enter
xor
sbb
push
int
ret
cli
adc
ja
js
loopne
out
mov
call
mov
les
scas
sbb
test
test
mov
clc
sbb
test
addb
popf
scas
jo
ret
adcl
pusha
mov
scas
aaa
mov
push
aad
push
xor
jo
js
xorb
test
pop
sbbl
add
or
xchg
mov
and
xor
sub
cmp
sarb
clc
add
and
stos
push
ljmp
in
insb
sub
jle
stc
psubb
inc
mov
icebp
jmp
clc
mov
or
mov
or
or
pop
push
push
roll
push
jno
jle
adc
mov
adc
jne
pop
cmpsl
jne
or
in
fsubl
and
push
mov
outsb
les
rorb
aam
mov
or
add
sbb
xchg
and
add
push
sbb
adc
lcall
cmp
or
xchg
dec
mov
adc
ljmp
incb
ret
bound
in
fsubl
into
fisttpll
sbb
sbb
mov
adc
sbb
stos
pop
imul
lock
mov
add
lcall
rcl
or
roll
cmp
push
filds
push
ret
sbb
rcll
movsl
pusha
sbb
iret
adc
add
adc
in
ret
add
xor
movsl
add
jecxz
jp
adc
enter
in
sub
lds
ret
pop
or
push
in
mov
movsl
push
dec
shl
push
aad
out
and
mov
iret
nop
orb
icebp
addr16
pop
inc
sub
xchg
inc
addr16
aad
pop
pusha
xor
addr16
inc
movsl
lret
cmc
xchg
mov
lcall
add
or
bound
dec
inc
lcall
rcrb
pop
mov
mov
push
cmp
xor
les
out
pop
jb
pusha
cli
lcall
cmc
stos
sub
popa
adc
mov
xchg
cmp
aas
sti
clc
pusha
add
mov
or
cli
sbb
mov
pop
test
sbb
pop
add
lds
sub
outsl
shrl
ret
bswap
cld
inc
pop
jne
add
aaa
lret
adc
push
add
cli
and
push
loopne
inc
push
jb
lods
pop
rorb
mov
add
into
pop
cmp
jns
mov
xor
cmc
push
push
jnp
or
or
scas
pop
icebp
mov
gs
add
and
pop
icebp
add
mov
push
mov
push
sbb
lds
xchg
popf
jmp
in
movsb
sahf
jo
sbb
lahf
movsl
push
push
cmpsb
and
push
push
sub
sub
scas
pop
or
repz
outsb
mov
sbb
sbb
xor
les
and
or
fists
das
adc
push
jecxz
ret
adc
mov
push
test
xchg
cmp
push
dec
inc
adc
scas
call
sub
sub
aad
lret
push
and
push
push
xchg
sbb
in
add
sub
test
jp
imul
inc
cmp
in
enter
mov
stos
mov
sbb
sbb
lds
clc
ror
sub
xorl
xor
fsubs
pop
and
push
jmp
dec
push
mov
mov
in
shll
aam
mov
cmp
inc
ret
into
jno
movsl
and
addb
ret
push
push
cltd
and
jp
jge
adc
aam
mov
add
inc
mov
mov
rolb
pusha
xorl
fucomp
adc
pop
adc
pop
adc
dec
loopne
add
mov
or
push
or
sbb
add
cmpsl
out
adc
ret
shlb
sbb
push
mov
cmpsl
jl
inc
lods
pusha
ret
sbbb
dec
shrb
fbld
leave
adc
out
pop
adc
xor
dec
push
add
enter
icebp
imul
ret
xor
adc
mov
jmp
inc
sti
popa
xor
pop
shll
lret
mov
adc
pushf
test
adc
sub
cld
add
jmp
sbb
gs
add
negb
sub
add
loop
add
add
mov
int3
shl
dec
mov
dec
adc
push
shll
and
arpl
jb
add
add
push
lods
jo
jb
pusha
in
dec
loopne
or
jg
or
mov
or
xchg
dec
lea
sahf
mov
sub
cmp
leave
subl
data16
jnp
scas
cmpsb
ret
add
inc
push
hlt
lea
and
fldenv
loop
adc
xchg
cmp
icebp
inc
shrl
sub
push
aam
iret
leave
pusha
adc
call
popf
sub
adcb
lods
sbb
inc
sbb
push
sbb
loope
sarb
ljmp
shll
mov
dec
pop
or
imul
lds
push
rorb
or
push
pop
add
scas
cmp
hlt
fmuls
clc
add
jae
push
adc
jnp
adc
dec
adc
adc
adc
stos
icebp
mov
shll
sbb
add
add
mov
ss
add
and
nop
sub
fstl
shl
gs
pop
xchg
aad
or
lods
rol
mov
and
or
push
xor
mov
sub
leave
adc
inc
test
cwtl
cmp
inc
add
mov
aam
xor
jns
jne
pop
inc
sar
push
stc
test
cs
fdivrp
cmp
add
sub
sbbb
mov
test
add
push
xchg
sbb
inc
jo
cmp
outsl
inc
push
sub
shl
es
or
push
push
or
les
leave
xor
aad
or
mov
js
sbb
stos
bnd
cmp
xchg
pop
cmp
jo
insl
jle
add
add
dec
rolb
or
add
mov
adc
jmp
cmc
aad
adc
fadds
das
inc
loope
sbb
call
mov
mov
and
push
loop
sbb
push
jns
das
adc
or
aam
adc
pop
sbb
dec
ja
jo
lret
mov
andb
add
loopne
andl
push
adc
cmp
rolb
ret
das
xchg
pop
cmp
repnz
pop
or
inc
or
inc
shl
inc
div
lret
repnz
push
loopne
mov
add
loopne
cld
sbb
push
mov
cli
adc
fsqrt
rorb
lret
xchg
xor
add
loop
lods
std
push
into
inc
xor
pop
lods
addl
leave
jns
or
cmp
push
add
push
fmull
mov
ss
cs
lret
and
xchg
adc
into
mov
mov
adc
rol
push
cmp
sbb
inc
sub
jne
roll
inc
mov
cmpb
test
lods
push
mov
mov
sub
in
ljmp
mov
jnp
xchg
sbb
movsb
dec
jno
jb
mov
inc
les
xorb
popa
or
adc
sbb
add
add
fistpll
rolb
push
rcll
leave
popa
ficoml
jmp
aaa
cmp
push
cwtl
out
ficompl
push
add
sub
push
xor
push
pop
or
fiadds
lret
xor
jnp
cwtl
fcoml
subl
mov
sbb
sub
xchg
add
push
sbb
outsb
push
ljmp
in
mov
xchg
ficoml
mov
rolb
or
stos
dec
les
xchg
insb
pop
sbb
jp
inc
xor
inc
mov
addr16
push
or
stos
mov
repnz
movb
push
cltd
mov
fs
or
mov
push
sarl
sbb
and
xchg
push
pushf
or
and
shrl
add
sahf
icebp
add
pop
loope
mov
pop
subl
push
gs
push
sbb
mov
lods
add
out
sub
fidivl
and
dec
adc
or
or
pop
rcll
js
pushf
imul
pop
xchg
cmp
jnp
lock
xchg
dec
stc
push
ljmp
ds
inc
lods
pop
mov
push
or
jmp
je
inc
insb
scas
into
mov
test
dec
popa
inc
lock
sub
or
subl
and
pop
jo
cltd
and
push
cmp
outsb
jb
shl
pusha
push
add
adc
mov
or
jo
lret
inc
nop
add
lock
mov
aam
xchg
mov
sub
div
in
xchg
dec
clc
sub
scas
xor
sbb
cltd
in
cmp
decl
jno
xor
sar
adc
roll
xor
sbbb
push
lcall
outsb
xor
mov
scas
mov
push
dec
mov
lds
mov
add
push
loop
negb
push
insb
dec
je
mov
movl
pop
add
ss
mov
push
mov
lds
in
sbb
push
int
xor
inc
mov
sub
out
imul
les
xor
scas
push
xchg
sub
orl
addl
xlat
sbb
gs
out
push
push
stos
bound
pop
adc
pop
mov
mov
and
aam
xlat
test
mov
dec
add
call
mov
cwtl
fucomip
icebp
addr16
lods
rclb
mov
mov
pop
sub
jne
mov
pop
push
movsb
mov
jp
push
orl
insl
subb
or
rolb
or
jno
rclb
rorb
and
pop
xchg
push
stc
push
sub
add
test
aas
sub
cli
add
jb
mov
cltd
jns
dec
pop
rcrl
fistps
gs
sti
cmp
xchg
addb
es
sti
dec
xchg
sbb
adc
xsha256
cmpsb
xchg
dec
aam
test
inc
jl
sbb
sbb
js
adc
add
rorl
push
pop
jge
xchg
pop
inc
pop
adc
ja
sub
cmpsb
xchg
rorl
sbb
stos
add
pop
inc
cmpsb
scas
inc
test
pushf
or
adc
xor
loopne
add
fldl
test
inc
xor
or
pop
mov
mov
clc
push
mov
xchg
mov
lock
lret
mull
test
mov
xor
and
in
sbb
and
push
aad
or
push
subl
inc
adc
js
adc
fldt
xchg
jae
sbb
xchg
and
jnp
cmp
rol
add
cmc
test
xchg
mov
cs
add
int
add
pop
push
sub
scas
mov
push
cmp
mov
cs
jne
out
xor
adc
jbe
ret
jo
gs
mov
inc
scas
fisttpll
inc
lods
xor
dec
push
or
mov
adc
mov
add
sbb
push
push
add
adc
add
or
add
les
loope
jecxz
insl
push
cs
mov
push
imul
pop
push
dec
shlb
movsb
sub
inc
push
fldenv
scas
fcomps
cs
adc
mov
push
out
add
into
sbb
xchg
mov
add
or
push
mov
push
lds
cmp
test
push
scas
mov
neg
push
and
into
movb
popa
pop
push
sbbl
sub
jge
pusha
mov
sbbb
mov
add
stc
js
pop
shlb
add
cmp
mov
nop
mov
add
push
jp
dec
rcl
sub
mov
scas
pop
je
lock
and
push
xchg
add
add
mov
mov
sbb
ret
or
inc
stos
cmp
dec
pop
inc
mov
pop
sbb
push
mov
sbb
mov
pusha
dec
add
cmp
sbb
xor
inc
xchg
push
icebp
jl
push
xchg
loop
sub
ret
inc
cmc
and
dec
or
pop
adc
lods
call
mov
dec
jne
mov
sbb
pop
push
sub
loop
cmp
add
rclb
xchg
sub
push
roll
or
bound
xor
or
sbb
into
lret
cmp
mov
or
mov
ret
sub
loop
push
or
xchg
mov
dec
dec
sub
fwait
mov
addr16
jp
push
xor
and
or
push
mov
pop
mov
adc
inc
test
dec
inc
cld
ss
inc
loopne
enter
push
cmpl
data16
adc
and
push
roll
test
cmpsb
imul
add
push
push
mov
or
xchg
lret
and
dec
out
xchg
shll
loopnew
icebp
pop
mov
push
add
sub
and
mov
sub
add
loope
daa
push
sub
pop
jo
push
lds
adc
jbe
xor
inc
cs
nop
jge
add
fcoms
cmp
in
jo
fidivrs
push
fld
cmp
icebp
or
push
inc
loopne
rol
and
sub
push
dec
sub
xchg
daa
adcl
fsubl
jb
or
or
lret
add
out
push
and
mov
mov
xchg
outsl
std
mov
ss
icebp
sbb
dec
aaa
aam
or
test
ja
xchg
push
mov
or
xchg
fnsave
push
inc
adc
in
adc
xchg
dec
jp
mov
or
xor
cmpb
out
jp
scas
lret
sub
jns
pop
pop
push
popa
rcr
or
mov
cmpsl
jmp
mov
sub
rcrl
xor
or
or
in
dec
sbb
inc
inc
pusha
mov
cmp
ss
ss
call
cmpsb
negb
in
fsubl
push
icebp
or
mov
cwtl
rclb
cmp
sbb
mov
cmp
sbb
ljmp
push
pop
inc
add
je
mov
jbe
push
xchg
xchg
mov
inc
cmp
sarb
sub
cmp
inc
mov
sbb
and
loope
test
cmp
push
xor
std
adc
shll
popf
inc
cmp
lret
pushf
cmc
iret
lret
mov
sbb
and
dec
pop
cmpsb
push
call
test
fistps
mov
push
inc
arpl
push
and
sbb
adc
xchg
sub
mov
and
add
in
sub
cwtl
push
jne
ret
sbb
scas
push
shlb
add
jne
push
adc
test
mov
mov
add
and
mov
xchg
adc
cmpsl
xchg
ret
sbb
outsb
sub
cmp
push
jl
shr
movsl
shrb
inc
andl
lret
fisubrs
adc
push
cld
mov
xor
push
mov
pop
lods
lock
test
testb
addl
rcl
mov
dec
or
mov
xor
jne
sub
pop
rol
je
sbb
inc
mov
shl
and
and
mov
fildll
push
clc
mov
mov
inc
cmc
sub
hlt
enter
sub
cwtl
add
loope
rcll
jecxz
mov
into
rdpmc
inc
movsb
lea
dec
inc
shrb
movsb
sbb
jecxz
out
addl
out
pop
adc
jmp
test
rcr
or
pop
lods
inc
cld
jb
or
adc
dec
push
je
push
aaa
sbb
add
jo
shl
orb
sbb
stos
adc
jo
add
loope
sbb
inc
xchg
pusha
sti
bound
jbe
cmp
push
roll
or
rolb
xor
stos
push
sbb
mov
inc
xchg
mov
mov
xor
xor
sub
add
gs
rcl
add
ret
je
add
imul
sub
cmp
call
or
mov
mov
pop
sub
pop
pop
in
jp
xchg
push
or
sub
scas
mov
sbb
int
cli
or
paddw
insl
xchg
pop
rclb
pop
adc
sub
or
jno
sub
scas
mov
hlt
lock
sub
dec
stos
cmp
movsb
je
in
adc
pop
orb
cmc
test
add
mov
icebp
mov
mov
or
mov
data16
push
sbb
mov
pop
cmp
mov
push
pop
push
xchg
or
pop
test
int
add
sahf
push
xchg
push
sub
inc
xchg
daa
push
push
inc
inc
in
lret
pop
inc
push
cmpsb
fidivl
pusha
add
mov
aam
popf
or
mov
inc
pop
add
stos
add
inc
xor
mov
and
lret
or
in
or
popf
lret
loopne
mov
sbb
sbb
test
je
jp
pop
cs
mov
dec
push
push
je
mov
mov
xchg
inc
push
sbb
lds
cmp
leave
cmpsb
in
cli
xchg
jp,pt
and
adc
mov
sub
push
test
mov
sbb
mov
pop
jb
or
dec
adc
in
push
sbbl
xor
add
roll
add
adc
mov
add
fstps
aad
loopne
inc
or
int
aad
jmp
jp
mov
test
inc
scas
mov
xor
and
cmp
lods
cmp
or
jb
fstps
popf
adc
or
mov
xchg
or
xchg
cmp
xor
mov
inc
lods
push
es
bound
and
sbb
lret
repz
xchg
aam
mov
add
mov
rclb
daa
add
aam
push
call
lods
roll
out
sbb
sbb
lcall
sbb
flds
jp
jg
call
loop
sbb
push
add
dec
cs
and
pushf
jnp
push
mov
or
mov
or
insl
rcll
jmp
call
push
lds
jp
test
jp
pop
in
and
push
mov
inc
mov
sbb
push
call
mov
inc
mov
das
pusha
ficomps
inc
sub
stos
or
push
xchg
or
pop
add
sub
ret
js
adc
adc
mov
xchg
and
sbb
push
add
sbb
xor
mov
or
sbb
mov
sub
sbb
xlat
push
push
out
shr
xor
xor
xchg
fcoml
rolb
shll
xor
mov
add
ret
add
xchg
push
push
sub
sbb
test
add
shl
mov
sbb
sub
pusha
inc
lods
stos
inc
sbb
test
or
xchg
and
bound
pop
mov
js
daa
sbb
sub
xor
sub
adc
shll
lock
pop
push
mov
pop
mov
sbb
mov
cltd
mov
add
shr
dec
add
push
adc
xor
in
lock
xchg
push
rcl
push
add
sbb
xor
jp
mov
inc
adc
xchg
lods
push
push
int
nop
insb
push
mov
and
push
pop
mov
in
inc
push
push
mov
add
jecxz
jne
roll
inc
jnp
push
xor
inc
sbb
mov
mov
lret
sarb
or
sti
stc
or
xor
xor
test
inc
inc
hlt
sub
pop
subl
push
ret
lds
outsl
std
xchg
mov
add
jno
or
popa
and
xor
lret
sub
pop
rolb
xchg
rolb
mov
sub
repnz
pop
lods
push
push
ret
mov
mov
inc
add
mov
js
sbb
clc
adc
sbbw
cmpw
and
xchg
into
pop
adc
dec
in
inc
movsl
add
mov
adc
in
ficoms
js
loop
inc
or
jle
ja
adc
fsubrs
out
icebp
xorb
lods
aam
and
ret
into
es
stos
dec
add
pop
pop
in
fld1
pusha
push
mov
push
mov
adc
xor
hlt
xor
mov
sub
sub
loope
ret
loopne
test
dec
hlt
test
jnp
add
add
mov
mov
push
add
cmp
mov
cwtl
or
sbb
inc
cli
cwtl
repnz
push
cltd
into
lret
fwait
hlt
je
rclb
mov
sbb
scas
inc
in
pusha
mov
push
sbb
das
or
iret
test
rol
test
lea
xor
adc
mov
push
fwait
push
pop
pop
push
xor
xchg
pop
sbb
rclb
push
adc
jbe
adc
or
xchg
fwait
mov
push
push
mov
mov
pop
rcrb
enter
xlat
mov
jbe
data16
inc
and
mov
jge
int3
jae
stos
pop
adc
xor
sub
pusha
ret
xchg
or
cmp
sarb
adc
sub
cmp
sub
or
push
aas
jb
movsl
incb
sub
or
das
icebp
push
popf
add
adcb
clc
jbe
and
push
mov
bound
jo
mov
mov
in
test
into
leave
pop
mov
xor
inc
leave
and
xchg
repnz
cld
xlat
sub
and
sub
mov
fdiv
add
shlb
or
pop
push
jo
in
mov
push
enter
xchg
adc
or
add
jnp
into
add
rorl
data16
shll
out
adc
inc
xlat
jae
mov
jbe
loopne
loopne
mov
xor
lret
mov
jge
add
outsb
adc
adc
and
stc
push
xchg
mov
loopne
std
adc
cltd
add
imul
xor
xor
cmp
shll
fimull
cmp
or
bound
adc
inc
and
lret
aas
add
mov
sub
adc
push
add
and
leave
arpl
pop
loopne
shl
sub
xor
adc
stos
mov
xor
movsb
stos
dec
int3
xor
leave
or
xchg
xchg
shll
or
js
dec
cmp
ljmp
fldl
enter
test
jae
push
rol
jp
mov
std
mov
add
inc
jo
dec
mov
imul
or
nop
movsb
subb
adc
pop
sbb
stos
mov
adc
mov
js
scas
add
mov
fists
pop
add
mov
pop
cs
inc
or
shll
pusha
xchg
loop
and
cli
lret
pop
int3
icebp
add
inc
stos
popf
enter
add
popa
push
dec
mov
into
adc
or
push
clc
add
add
xchg
add
adc
jo
pop
xchg
insb
repnz
inc
or
push
popa
dec
add
mov
fadds
sbb
xchg
mov
popf
int3
or
push
mov
icebp
xchg
pushf
cmp
adc
mov
es
adc
pop
dec
inc
or
push
and
add
mov
cmp
mov
sti
call
testb
int3
sbb
push
push
sahf
sbbl
rcll
inc
pop
pop
add
sarb
nop
or
ss
enter
or
mov
or
pop
inc
add
mov
jb
je
push
sbb
or
sbb
int
add
or
pop
sbb
in
fs
inc
sbb
and
dec
and
inc
in
inc
mov
push
push
pop
hlt
clc
xchg
push
pop
je
push
mov
popa
and
sbb
rorl
jb
xor
pop
aad
push
pop
popf
loopne
mov
mov
ret
add
jb
popa
mov
inc
lea
pop
sahf
adc
mov
sti
es
lock
dec
mov
or
lret
dec
push
lods
inc
adc
adc
xchg
sub
xchg
adc
rorb
add
xchg
sbb
cld
movsl
inc
cs
xor
jne
push
mov
add
lods
add
add
push
adc
mov
ret
hlt
sti
add
cs
sub
add
stos
xlat
imul
rcrb
cli
out
push
bound
mov
jo
test
mov
xchg
int3
loopw
inc
subl
into
sub
xor
popf
test
sbb
rclb
enter
divb
jle
aaa
push
lcall
pop
inc
setp
out
pop
sahf
inc
sbb
lea
and
push
xchg
inc
or
xor
paddsw
add
xor
and
push
lock
les
mov
pop
push
ffree
add
sbb
repnz
adc
add
outsl
into
jns
rolb
in
sbb
shl
sub
xchg
mov
mov
add
pop
push
dec
aad
pushf
mov
push
add
mov
bound
or
push
pop
in
popa
aam
insb
push
sahf
jno
mov
xchg
and
adc
mov
js
aad
cld
out
xchg
lods
rcll
xor
adc
push
ljmp
cmpsl
popf
and
fidivrl
push
aad
xchg
test
int3
test
bound
or
cmp
shll
push
adc
and
mov
sbb
je
sub
add
mov
add
adc
and
pop
adc
push
daa
jb
xchg
iret
ret
add
or
sub
imul
push
push
sbb
inc
test
imul
and
mov
adc
rcrb
or
inc
pop
enter
loop
inc
lds
or
dec
add
das
pop
dec
mov
sbb
out
mov
sbbb
mov
add
pusha
mov
dec
imul
jo
cmpsb
or
xor
xchg
cmpl
or
sbb
mov
add
mov
and
sbb
cmp
out
cmp
icebp
adcl
cltd
clc
pusha
std
xlat
sub
lock
mov
mov
adc
repnz
xchg
cmp
mov
test
lret
dec
xor
enter
push
call
or
dec
cmp
les
shlb
pop
fdivl
cmp
lcall
cmp
ds
sar
test
rcrl
pop
rcrl
push
cltd
push
rolb
or
mov
mov
sub
adc
inc
jl
rorl
cmp
add
or
mov
and
rcll
dec
les
add
jns
mov
enter
pop
inc
xor
jg
inc
pop
popf
jb
loopne
add
xor
test
push
or
push
loopne,pn
notl
stos
add
mov
cmc
ret
cli
or
inc
mov
sbb
sarb
adc
or
pop
sub
insl
xchg
jecxz
xchg
cmp
mov
adc
les
add
pop
lock
sbb
jnp
pop
les
pusha
lods
test
push
stos
or
push
or
loop
add
ret
jo
hlt
rcrl
addr16
lea
and
xor
mov
xor
adc
add
sub
adc
inc
cmpsb
ss
cmp
push
jg
adc
andb
xor
dec
or
add
sbb
outsl
aam
es
das
push
pop
mov
popa
insl
ja
int3
cmp
pop
inc
test
wrmsr
fcompl
xchg
mov
ret
adc
jecxz
pop
xchg
pop
sub
cltd
mov
ljmp
sbb
push
es
loope
mov
pop
ret
mov
cmp
dec
sbb
push
sbb
lock
add
lahf
sub
fwait
mov
mov
movsb
add
dec
or
or
sbb
clc
je
xor
and
stos
loope
mov
dec
xchg
jo
dec
inc
mov
mov
pop
cmp
push
dec
sub
mov
or
jecxz
xor
jecxz
negb
mov
or
dec
add
mov
push
lock
dec
sub
inc
in
andb
shl
leave
sub
push
dec
xchg
aas
push
scas
or
xchg
test
ret
xchg
jmp
sbb
cmpps
in
mov
lods
or
and
orb
mov
mov
and
ret
adc
dec
rolb
arpl
bound
test
adc
movsb
scas
scas
add
fldcw
and
push
repz
or
dec
inc
fs
sarl
bound
adc
test
push
jp
adc
xchg
jo
xchg
push
mov
fs
shlb
stos
aad
xchg
or
push
xor
jmp
sub
and
push
xor
push
rcrb
sub
xchg
shrl
dec
xchg
stos
xchg
and
je
add
adc
xchg
xor
jge
cmp
outsb
imul
mov
jbe
push
and
jne
dec
adc
addb
sbb
sbb
jl
inc
add
idiv
andl
int
adc
int
push
sub
sbb
add
inc
mov
imul
and
mov
push
inc
cmpsl
push
stos
sbb
sbb
mov
or
adc
xchg
push
lret
pop
jb
es
enter
mov
stos
mov
faddl
adc
sbb
add
iret
les
jb,pn
insb
xchg
xlat
shlb
ret
sbb
cwtl
incl
cmpsb
orb
mov
adc
mov
mov
pop
adc
inc
inc
rcrl
xchg
rcll
jge
adc
fs
and
shlb
popa
and
mov
addb
or
jno
xorb
push
dec
shlb
push
sbb
test
ds
and
call
jb
sub
mov
gs
inc
pop
scas
push
cmp
mov
cmp
xor
aam
push
call
inc
add
inc
rcll
nop
loop
xchg
push
mov
pop
push
or
push
hlt
enter
scas
lret
and
sub
imul
jne
cmp
pop
test
ljmp
ss
or
sbb
stos
push
push
sub
lcall
in
or
in
jmp
movl
sti
and
stc
add
pop
and
shl
pop
dec
enter
out
mov
ss
and
add
addl
xor
mov
adc
jge
ret
cmp
lahf
aas
jg
xor
out
bnd
push
lock
stc
repz
push
mov
popf
xor
aam
aas
jg
mov
jle
mov
mov
xchg
xor
push
inc
mov
jg
cld
or
sbb
jno
call
repz
lahf
pushf
jmp
push
aad
xchg
xlat
addb
cld
stc
jbe
ljmp
cmp
je
aad
add
iret
lahf
aas
push
pushf
cwtl
loop
loopne
pop
sub
stc
repz
mov
stos
cmp
mov
cmpsl
stc
iret
lahf
aas
jg
pop
insl
sub
cltd
popa
sbb
inc
lods
cld
stc
repz
ss
jb
call
ja
mov
aas
jg
pop
cli
imul
and
mov
xchg
bound
mov
mov
sub
sti
cmpsb
and
push
stos
imul
out
sub
xchg
sbb
jl
cld
stc
scas
pusha
addl
push
sbb
mov
call
xor
repz
lahf
sbb
clc
mov
jg
cld
stc
xor
add
ljmp
into
sub
out
lahf
aas
repz
stc
push
mov
icebp
mov
jmp
jge
sub
mov
jns
ljmp
aas
jg
mov
add
mov
out
push
fwait
xor
stc
repz
sub
inc
ja
add
mov
aas
jg
sub
adc
fwait
and
popf
fdivrl
out
in
sub
dec
mov
pop
dec
cmp
jg
cld
daa
stos
adc
push
les
add
fcomip
out
lahf
push
ror
inc
cld
pcmpeqw
jg
cld
stc
data16
fdivs
es
dec
xchg
xchg
and
enter
clc
cmc
aas
jg
cld
stc
movsl
mov
pop
or
and
pop
pop
xchg
jno
test
lods
lock
push
sahf
je
add
enter
stc
repz
pop
xor
jl
cmpsb
cwtl
fdivs
jecxz
iret
lahf
aas
jg
jle
dec
push
push
repz
data16
add
stc
repz
and
add
push
outsb
roll
lahf
aas
jg
inc
shlb
popa
mov
repz
push
or
scas
test
dec
sub
pop
aas
jg
cld
das
rcl
jns
push
movsb
add
sti
test
out
lahf
mov
cs
inc
aaa
add
mov
mov
sub
push
rorl
aas
jg
cld
jp
inc
mov
push
cltd
xor
mov
xchg
jge
dec
leave
or
lcall
push
aas
jg
cld
stc
dec
jb
out
or
in
lcall
mov
sarl
push
test
push
mov
ds
cld
stc
repz
pop
and
addr16
and
push
das
sub
testb
lahf
aas
jg
xlat
adc
jecxz
cmp
idivb
call
jle
dec
in
mov
xchg
scas
nop
inc
xor
lahf
cld
pusha
icebp
ror
cmp
cmp
lahf
aas
jg
outsl
push
or
push
sub
repz
fsubr
outsl
mov
jge
arpl
stos
aas
jg
cld
push
fildl
xor
jb,pn
xor
repz
lahf
inc
xor
and
movsb
and
fnstsw
cld
stc
cltd
test
cmc
adc
add
js
iret
lahf
aas
sahf
mov
xor
dec
add
cld
stc
repz
or
sbb
notb
jnp
ret
icebp
cltd
cld
stc
add
std
ret
orl
aas
jg
loopne
push
add
xchg
lds
iret
xor
pop
popl
hlt
sbb
arpl
fstps
jg
cld
sub
dec
les
mov
push
xchg
and
div
dec
push
mov
jge
inc
lahf
aas
jg
lea
adc
dec
shlb
inc
arpl
repz
lret
lods
lcall
out
mov
cld
sub
dec
cmp
outsl
fs
xchg
or
dec
sbb
repz
lahf
mov
ror
insb
mov
mov
fs
cld
stc
je
dec
daa
int3
pop
sub
notl
mov
leave
iret
lahf
aas
int3
xchg
addl
inc
aas
jg
icebp
test
mov
test
xor
out
lahf
data16
sbb
test
and
jg
cld
stc
push
xchg
mov
les
js
or
jp
fnsave
stos
inc
movsb
sti
jae
push
or
adc
stc
repz
mov
mov
ss
jg
mov
rcrb
outsl
loopne
imul
stc
jbe
repz
push
scas
sbb
loope,pn
repnz
jg
cld
dec
dec
xchg
mov
sub
inc
hlt
jo
stc
shll
sub
mov
fidivs
lods
push
push
jge
out
dec
mov
lahf
and
fs
sub
repz
fldl
lret
repz
mov
sbb
repnz
fbld
lods
dec
sbb
stc
cmp
add
cld
stc
repz
pop
loope
ret
or
js
pop
lahf
aas
jg
daa
adc
dec
xor
sub
cmpsl
stc
repz
ds
sub
cmp
popf
dec
aas
jg
cld
sub
data16
and
std
xor
stc
rol
repz
lahf
stc
jecxz
sub
mov
cld
add
stc
xchg
mov
push
icebp
stc
repz
pop
addr16
in
out
cmc
lds
cld
xor
insl
mov
or
out
lahf
or
sub
sub
cld
stc
in
aam
loope
fs
sub
icebp
xchg
push
push
out
lahf
aas
movsl
pop
cmpsl
dec
push
jge
in
pop
sbb
cld
stc
repz
mov
in
nop
jne
cmp
jg
mov
je
mov
mov
icebp
lea
add
jmp
cld
stc
repz
jmp
xchg
push
rcrb
cs
insl
adc
iret
lahf
aas
jg
and
dec
sarl
inc
das
pop
daa
cld
stc
repz
es
jp
divb
int
push
je
lret
jg
pop
inc
pop
mov
mov
xchg
test
xchg
stc
repz
sub
icebp
push
and
jge
aas
jg
cld
mov
insb
fmull
xor
out
lahf
scas
shll
loopne
lds
dec
adc
cld
stc
cli
push
shlb
dec
test
cmc
mov
mov
mov
xchg
mov
cld
lcall
iret
mov
mov
add
je
xchg
cld
stc
repz
enter
std
js
je
mov
mov
push
lahf
aas
jg
or
test
jp
lret
and
out
popa
fnsave
call
ret
mov
cld
pop
jns
mov
in
inc
push
mov
pusha
in
cld
stc
inc
and
mov
test
movsb
test
aas
jg
scas
sbb
leave
cmpsb
pop
mov
or
add
out
test
imul
std
ss
aas
jg
cld
lcall
push
mov
jb
cld
stc
ret
xchg
pop
test
outsl
negl
xlat
loopne
fsubrs
lahf
aas
jg
enter
loope
fidivrl
mov
stc
repz
daa
out
push
cmp
mov
out
xchg
aas
jg
cld
test
inc
cmpsb
movl
lahf
cmp
pop
mov
mov
mov
cld
stc
jle
mov
in
sbb
pop
addr16
lahf
aas
jge
sub
xor
cmp
cld
stc
repz
xor
add
push
aas
jge
xor
push
clc
add
and
inc
jo
stc
repz
ret
mov
scas
mov
aas
jg
aas
inc
std
pop
add
insl
ja
mov
repz
add
mov
sbb
jg
cld
gs
push
dec
int3
push
pushf
in
adc
mov
repz
lahf
aas
sahf
mov
or
jg
cld
mov
jo
fnstenv
out
lahf
aas
adc
inc
mov
lcall
repz
repz
or
lds
iret
lahf
aas
jg
mov
lahf
test
ret
lret
cld
stc
repz
shrb
fcomi
shl
daa
xchg
aas
stc
adc
popa
sti
jne
push
jl
cld
sbb
imul
hlt
cwtl
xchg
jg
mov
gs
daa
fcomip
lock
mov
iret
lahf
aas
ret
add
mov
call
pushf
addr16
and
xor
loop
jnp
cli
xchg
lahf
aas
jg
cmp
mov
ss
fsubrp
sbbb
shlb
add
dec
sub
and
repz
fucomp
lahf
inc
sub
add
pop
outsl
jns
cld
test
mov
mov
and
jmp
sub
xlat
xor
aas
das
ljmp
cmc
add
dec
cld
stc
repz
lock
rolb
test
push
fistpl
iret
lahf
aas
jg
mov
ss
ficoms
call
int3
scas
ja
test
push
outsl
mov
andb
sbb
mov
xchg
mov
xorb
loope
lock
arpl
xchg
out
cld
ret
inc
popa
leave
insb
push
scas
in
repz
pop
sbb
lock
jae
jg
cld
stc
add
or
mov
fucom
iret
lahf
aas
daa
and
fcomps
in
cld
stc
repz
in
adc
or
dec
xor
test
dec
shl
int3
sub
jl
mov
test
js
shll
lcall
jg
testb
aaa
enter
pop
jo
jnp
clc
in
jae
sbb
inc
mov
push
sbb
out
cmc
andl
cld
lds
movsl
jne
jg
cld
mov
lahf
rep
jmp
lea
lahf
aas
pop
sub
adc
stc
repz
mov
pop
and
jno
stos
and
iret
lahf
aas
jg
sbb
push
xchg
and
enter
repz
bound
jne
leave
lret
in
inc
and
rorb
pop
jp
mov
dec
cld
stc
repz
iret
jne
xchg
pop
push
push
fldcw
lahf
aas
jg
xor
shll
scas
int3
call
lcall
arpl
gs
cs
xchg
imul
aas
jg
cld
xchg
inc
jl
mov
loop
rcrb
aam
push
repz
lahf
cmc
or
dec
mov
jle
cld
stc
shrl
mov
scas
mov
and
iret
lahf
aas
mov
or
fwait
pop
dec
repz
aas
jg
lock
xor
sub
mov
repz
lahf
popf
dec
jg
dec
sub
mov
stc
and
cmp
insb
adc
out
cmp
iret
lahf
aas
sub
adc
jg
scas
cld
stc
repz
repz
das
sti
ret
xorb
pop
imul
inc
int
out
mov
repz
push
add
inc
ficompl
lock
aaa
rclb
aas
jmp
pop
push
stc
mov
jns
out
or
and
sarl
addb
and
sbb
xor
jmp
pop
stc
repz
cli
lret
sub
adc
pushf
cmpsb
push
aas
jg
cld
cmpsl
jns
push
clc
stos
pop
cmp
test
jge
mov
js
fildll
cld
jns
iret
and
cmpsl
pushf
mov
push
lahf
aas
jg
in
adc
cwtl
test
arpl
repnz
jle
pop
pop
inc
jmp
js
mov
mov
fistl
repz
cld
stc
repz
sbb
out
cmp
test
mov
iret
lahf
aas
jg
movsl
mov
dec
imul
adc
cld
stc
repz
sub
add
sbb
insl
sbb
jg
cld
push
loop
cmp
push
in
cmpb
out
fs
cmpsb
xchg
pop
inc
mov
adc
aas
jg
cld
pop
cmpsl
jmp
ja
and
jns
jb
out
lahf
insb
insl
xor
mov
push
inc
jno
ss
jg
cld
stc
pushf
test
push
mov
sub
out
out
lahf
aas
es
test
pop
repz
jp
cld
stc
repz
call
outsl
xchg
cli
int3
clc
movsl
cmp
jg
jo
andl
lods
shll
cmpsb
clc
in
fisubl
adc
stos
mov
lods
mov
mov
repnz
inc
vpxor
fbld
cmpsl
int
aaa
outsl
dec
loopne
dec
jp
dec
adc
loope
jns
out
jb
loopne
xchg
jo
adc
jnp
aaa
outsl
fdivp
dec
iret
sub
out
dec
iret
shrl
repz
bound
mov
add
mov
sub
pushl
mov
inc
arpl
cld
stc
pop
cld
jno
ja
mov
fildll
iret
lahf
aas
mov
mov
adc
into
inc
cld
stc
repz
into
jns
fcmovu
mov
fwait
pop
daa
repz
fnstsw
jns
inc
pop
sbb
fwait
push
shl
iret
lahf
pushf
pop
mov
xor
lea
aaa
clc
push
test
sub
xor
xchg
fbld
es
mov
ret
out
lahf
aas
fucomp
push
and
xchg
fsts
cld
stc
repz
mov
jnp
repz
add
add
in
sub
mov
xor
stc
repz
mov
jmp
into
inc
xor
lahf
aas
jg
jb
cmpsl
cli
sbb
fisubs
push
sub
repz
ja
imul
sub
addb
stos
push
inc
sbb
out
mov
mov
jmp
mov
xchg
insb
xor
aad
or
cld
stc
cmp
adc
ljmp
pop
xchg
sbb
iret
lahf
aas
js
ljmp
add
stc
repz
add
aaa
add
xchg
outsb
iret
lahf
aas
jg
mov
jle
out
call
jecxz
repnz
jecxz
or
loopne
loopne
mov
std
jo
mov
mov
mov
mov
stos
fs
hlt
test
lret
xchg
xchg
repz
pop
lock
jno
add
sub
and
cld
stc
out
fwait
fs
les
pop
fdivrs
sbb
jb
dec
enter
mov
stc
notl
lcall
jg
cld
call
aam
cvttps2pi
or
out
lahf
mov
mov
repz
lcall
jns
test
push
and
test
sbb
cmp
iret
lahf
aas
pop
xchg
mov
and
stos
aas
mov
inc
cld
stc
repz
push
push
stc
fsubrs
insb
loope
mov
inc
jle
aam
je
es
cld
stc
repz
cs
inc
jno
jno
mov
es
iret
lahf
aas
jg
sti
cmpsb
and
inc
push
loope
jecxz
adc
cld
stc
repz
cli
arpl
inc
mov
aas
jg
sti
in
aad
aam
es
faddl
popf
adc
jp
js
daa
outsl
fidivrs
mov
mov
fwait
aaa
pop
daa
push
pop
mov
mov
pop
jge
scas
fidivrs
fldl
daa
call
fwait
lahf
aaa
outsl
in
nop
mov
loope,pn
mov
jns
out
bound
xor
mov
pop
lahf
pop
add
outsl
fidivrs
test
jae
sbb
mov
fwait
jae
push
out
bound
jl
icebp
loopne
fidivrs
jb
movsb
mov
mov
int
aaa
sbb
jo
je
out
cwtl
and
mov
scas
scas
push
dec
dec
adc
adc
aas
dec
adc
or
cmp
mov
jns
out
xchg
mov
test
cmc
push
out
and
jnp
and
outsl
fidivrs
ret
xor
lea
inc
jge
int3
mov
xorl
lahf
xchg
je
pop
mov
xchg
jo
cmp
cmpsb
jb
cld
jns
sub
and
jno
std
lea
jbe
iret
lahf
aas
jg
mov
xadd
arpl
pusha
and
out
faddp
fwait
popf
in
test
repz
cmp
mov
inc
lret
mov
jno
fidivrs
loopne
pop
mov
inc
data16
int
aaa
sbb
dec
pop
inc
jb
mov
fnstcw
pop
xor
jle
imul
pop
ja
adc
outsb
sbb
cld
stc
out
jns
leave
std
mov
mov
add
iret
lahf
aas
loopne
outsl
addl
leave
push
sbb
mov
cld
in
inc
jo
add
inc
xlat
pop
fadd
xchg
outsl
fidivrs
mov
dec
push
jo
pushf
dec
xor
iret
fwait
aaa
add
add
gs
out
sbb
sbbl
jmp
repnz
loop
add
xor
mov
jb
in
sahf
lahf
sahf
xor
repz
out
fwait
aaa
and
scas
dec
icebp
rcrb
push
mov
mov
repz
mov
cmpb
push
push
push
std
add
jmp
test
scas
add
stc
int
inc
jae
popf
cmpl
jmp
mov
aas
call
cmpsl
xchg
jbe
cld
stc
repz
cmpsl
pop
fbld
popa
sahf
ret
sahf
data16
aas
jg
addr16
andb
loope
pushf
rorl
jae
cli
enter
mov
out
out
setg
fisubl
iret
push
fcmovb
lret
pshufw
pop
jl
outsl
mov
add
ss
and
outsl
ficomps
jecxz
lods
dec
mov
int
aaa
aam
xchg
ret
or
adc
nop
scas
js
out
push
cmp
cmp
mov
jns
xchg
cmpsb
mov
aaa
xor
mov
sarb
int
aaa
outsl
iret
jecxz
sub
push
fstpt
rcr
cld
jle
jns
aas
arpl
outsl
and
jecxz
ljmp
mov
loop
push
xlat
hlt
jg
cld
sti
iret
out
and
pop
popf
loope
aaa
notb
or
lahf
jg
sarl
dec
pushf
daa
pop
lock
push
jg
cld
stc
dec
lods
push
dec
leave
sub
cmpsb
or
dec
jle
out
lahf
aas
push
and
ds
sub
push
ja
cld
stc
repz
lret
and
orb
cmp
lahf
aas
jg
cmp
cmp
cmp
pop
jl
aas
dec
cld
stc
repz
mov
dec
push
or
cmp
repz
xchg
loop
mov
inc
inc
ds
test
test
xchg
iret
lahf
aas
jg
jae
loopne
iret
mov
inc
mov
ror
mov
test
mov
enter
cmp
jp
mov
adc
push
jg
push
mov
mov
mov
movsl
mov
dec
stos
dec
pop
inc
aaa
sub
cld
stc
repz
js
test
xchg
imul
leave
xor
decl
lock
xchg
movsl
mov
out
lahf
sub
and
pushf
jg
jmp
in
pop
push
cmpsb
push
aaa
mov
js
jge
push
and
mul
xor
pop
int
aaa
outsl
sahf
out
or
xchg
leave
inc
cmpsl
xchg
dec
push
pushf
out
or
test
add
out
mov
sub
adc
add
cld
stc
and
push
and
mov
or
aam
ds
fidivrl
adc
xchg
lahf
aas
jg
jp
pop
mov
stos
testl
mov
shll
arpl
or
jne
mov
inc
negb
inc
pop
jecxz
mov
jg
cld
pushf
sbb
push
cld
sbb
adc
out
lahf
push
cli
loopne
push
and
cmp
inc
movsl
mov
stc
lea
dec
mov
or
imul
enter
adc
mov
cld
stc
pop
jns
pop
sub
cmpb
jle
lds
pop
dec
test
cmpsl
mov
es
dec
sbb
enter
jns
jecxz
push
rolb
mov
mov
sarl
shlb
push
cmp
int
sub
movsl
repz
cmp
and
frstors
adc
and
mov
lret
dec
xor
getsec
outsl
fidivrs
outsb
pop
push
lods
rclb
lods
mov
out
fwait
sbb
push
std
xor
in
fidivrs
lcall
cmp
test
fwait
aaa
inc
pop
inc
cmp
pop
mov
sbb
xchg
jg
fcmovu
adc
mov
jns
dec
scas
ret
scas
and
outsl
fidivrs
outsl
pop
mov
sbb
cld
stc
ret
inc
jae
sub
cmp
or
pop
dec
mov
push
mov
fisttps
jbe
cld
stc
repz
stos
dec
mov
xor
lea
lahf
aas
jg
popf
jl
push
dec
push
shl
cld
stc
repz
xchg
pop
and
pop
sbb
ret
daa
adc
dec
aaa
pushf
stos
adc
pop
lcall
repz
int
je
pop
das
rcl
repnz
push
cmp
xchg
sub
push
unpckhps
out
fidivl
adc
addb
sub
mov
aaa
outsl
fidivrs
xor
mov
mov
xchg
push
movsl
repz
fwait
enter
ret
ret
mov
outsl
fidivrs
pop
inc
rorb
add
and
out
fwait
aaa
test
mov
xchg
xchg
aas
jg
enter
sub
mov
scas
aam
enter
sbb
fsub
pop
rorl
into
xchg
out
fidivrs
dec
les
lds
inc
xor
fwait
aaa
outsl
outsl
dec
int
sbb
xor
push
adc
jns
out
inc
rcrl
cmpsl
and
outsl
xor
fidivrs
adc
mov
aaa
outsl
sub
cmp
scas
repz
icebp
jo
out
lock
lock
fistl
push
mov
repz
stc
fisubrl
cs
mov
fwait
aaa
out
add
int3
rcrb
into
sub
cmp
out
ds
shl
ds
mov
inc
mov
xor
imul
aaa
outsl
ficoms
adc
xor
xor
out
sub
xlat
jl
or
cmp
or
sub
mov
fwait
aaa
adc
mov
fadds
jns
out
in
std
sbb
movsl
insl
andl
inc
outsl
imul
repz
aaa
jno
xor
call
mov
jg
lds
lock
mov
iret
adc
jne
imul
push
jns
xchg
into
mov
pop
fstpl
cmp
ffree
lcall
repz
jmp
fdivrl
outsb
mov
pop
fnstcw
mov
popf
pushf
push
aaa
adc
sarb
shlb
sbb
out
fwait
imul
mov
jns
lods
dec
push
bound
mov
dec
out
fwait
aaa
pusha
loop
xchg
sub
fidivrs
mov
jl
mov
mov
les
xor
jecxz
into
inc
xor
out
les
fbld
sub
mov
repz
cmp
hlt
cmp
xor
outsl
fidivrs
xchg
mov
cwtl
mov
repz
fwait
hlt
jns
shlb
push
test
dec
xor
das
jb
ds
adc
fwait
aaa
cmp
jle
sti
cli
cmp
dec
cmp
fidivrs
push
mov
cmpsb
fisubl
and
std
mov
fwait
aaa
outsl
insl
xor
fs
in
mov
cmp
repz
add
outsb
dec
lods
icebp
mov
lods
push
mov
mov
les
pop
cmpsl
xchg
xor
int
inc
mov
mov
mov
test
push
mov
sti
xor
sbb
ss
movsb
mov
jo
out
fwait
aaa
call
or
pop
jnp
clc
incb
jns
mov
lea
jae
cmp
arpl
outsl
fisubrs
lods
mov
out
inc
mov
xchg
lds
push
rcr
mov
cmp
shll
int
aaa
outsl
cmp
out
icebp
or
xchg
mov
ficomps
lahf
push
jno
jmp
das
stc
repz
cli
add
int
mov
out
push
stc
cltd
xchg
orl
in
jp
jl
mov
aas
cli
mov
dec
shlb
fdivrs
aas
movb
cmc
cld
stc
xrelease
sub
adc
mov
xchg
iret
lahf
aas
jg
pushl
enter
ds
cmpb
mul
out
mov
aas
mov
repz
lahf
jg
shl
cwtl
lds
lret
mov
pop
inc
cld
in
pop
mov
and
shl
jle
fwait
aaa
outsl
faddp
or
xchg
data16
enter
out
pop
sub
pop
xchg
push
je
push
mov
mov
outsl
fidivrs
or
hlt
jbe
jmp
repz
fwait
lret
xchg
mov
out
or
xchg
mov
inc
fdivrl
push
orw
push
push
testl
jg
jmp
aas
mov
shl
scas
iret
xchg
movsl
aad
adc
stc
repz
out
dec
imul
or
pop
ficompl
or
in
loopne
mov
or
push
out
sub
mov
xchg
mov
in
fwait
aaa
adc
xchg
inc
enter
mov
iret
lahf
jg
xchg
push
cmp
lods
fmul
or
stc
repz
in
cwtl
jge
mov
dec
xor
xchg
jb
in
pusha
adc
mov
hlt
in
pop
xchg
andb
mov
add
mov
mov
iret
lahf
aas
dec
cmp
dec
insb
sbb
jb
addl
push
sbbb
add
clc
mov
aas
jg
inc
sbb
and
pop
imul
test
mov
loop
lahf
aas
lahf
lea
push
xchg
mov
push
mov
lahf
aas
incl
fs
mov
pop
icebp
jns
push
loop
adc
lahf
xchg
and
fcmovnb
jg
aaa
outsl
fidivrs
jmp
push
jmp
aaa
mov
out
fwait
je
adc
dec
adc
lret
xor
outsl
fidivrs
outsl
loop
shl
push
xchg
out
fwait
aaa
push
sahf
push
dec
push
aad
xor
mov
mov
cmpsl
lret
jge
femms
movsl
xchg
in
int
aaa
outsl
shrb
mov
xchg
cmp
sub
repnz
pop
insb
dec
imulb
iret
pop
ds
test
pop
repnz
adcb
repz
stos
sub
mull
cld
stc
shl
xchg
bnd
sbb
aaa
inc
sbb
stc
push
aas
dec
and
scas
mov
add
lahf
aas
jg
inc
sbb
pusha
cltd
dec
dec
test
sub
pop
hlt
repz
mov
out
sub
xor
scas
jg
cld
stc
cld
mov
jb
xor
movsl
daa
fbstp
test
pop
fstps
xchg
cld
stc
repz
addr16
inc
ds
pop
repnz
aam
mov
inc
ffree
cmpsb
aaa
sub
aas
cmpsb
out
mov
movups
fidivrs
jecxz
cmp
xchg
adc
pop
imul
sbb
mov
lahf
jae
int
ja
repnz
dec
push
xchg
scas
push
mov
mov
popf
push
stos
dec
push
fwait
scas
push
scas
faddl
mov
dec
dec
aas
mov
movsl
test
lret
jns
out
xor
pop
lods
js
js
lds
adc
ja
and
insl
mov
stos
xlat
repz
fwait
mov
pop
ror
out
daa
dec
dec
test
mov
test
cltd
lahf
cltd
js
loope
scas
shll
das
cld
mov
xor
jne
movsb
jo
jg
dec
jle
js
insl
in
jg
and
fwait
data16
jnp
pop
sub
cs
xchg
jnp
pop
xor
in
inc
cmp
fisubl
and
out
lahf
aas
popa
addr16
jp
pop
push
daa
adc
adc
stc
repz
repz
jbe
outsl
subb
fildll
stos
ficoml
lahf
adc
es
pop
faddp
and
repz
xor
ret
cmp
or
xor
dec
push
dec
cltd
mov
test
lods
and
cmp
call
aas
jg
in
lods
lea
lds
outsl
pop
pop
mov
repz
lahf
push
inc
jb,pn
and
pop
jg
cld
stc
popf
mov
sub
or
mov
cmp
ret
cmp
inc
pop
xor
cld
stc
repz
mov
loop
mov
xor
cmp
and
pop
pop
jp
adc
out
test
cld
repnz
repz
inc
mov
or
xchg
pop
bound
jo
divb
jnp
aaa
outsl
fidivrs
repnz
adc
mov
sbb
and
scas
call
ljmp
insb
fidivrs
and
inc
sub
fs
lods
mov
pop
ljmp
arpl
test
sbb
loop
test
add
aas
jg
mov
pop
cld
mov
std
in
out
sbb
loopne
ret
mov
fidivrs
push
in
mov
je
aaa
out
or
push
pop
aaa
cli
sbb
int
cmp
aaa
call
lret
sub
imul
outsl
fidivrs
cmc
ret
cmc
stos
mov
int
aaa
test
nop
outsb
and
mov
test
xchg
hlt
movsl
mov
cmpsb
stc
push
inc
fimuls
jecxz
push
movb
push
loop
stc
push
incl
push
mov
mov
aaa
fcoml
popa
add
dec
inc
das
adc
sbb
jg
cld
or
cmp
lahf
inc
add
les
sub
stc
ja
lahf
lods
nop
cltd
lods
int3
jo
xlat
cmp
jg
cld
fs
outsl
jmp
stc
add
mov
xchg
mov
xor
jg
shlb
outsb
int3
das
out
push
cmpsl
test
leave
lahf
aas
bound
aas
aaa
mov
xor
jns
push
daa
sbb
fnsave
jl
pop
popf
inc
xchg
nop
scas
adc
sub
repz
shlb
outsl
fidivrs
xlat
pop
filds
pushf
fidivl
dec
push
loop
int
cmp
jb
arpl
mov
add
rolb
dec
arpl
cld
fwait
aaa
outsl
fimuls
ds
popl
insl
mov
je
out
bound
shrd
imul
push
lea
lret
out
out
mov
dec
jnp
jnp
pop
mov
jl
sbb
js
loop
and
sbb
outsl
in
lcall
fisubrl
dec
jae
scas
inc
in
sub
fsts
addr16
cld
stc
repz
mov
loopne
fwait
sahf
hlt
jmp
out
push
bound
mov
cld
pop
inc
sbb
repz
mov
clc
popa
imull
mov
jp
and
aaa
in
adc
xor
out
fwait
aaa
pop
add
in
test
jns
pop
lret
dec
dec
int
adc
cmp
aaa
outsl
aas
jle
aam
cmp
divb
sbb
dec
clc
sub
dec
xchg
aas
jg
push
add
shl
fs
in
xor
out
lahf
inc
das
in
std
shll
mov
cld
stc
xchg
cs
jmp
insl
test
or
repz
jg
dec
addr16
mov
dec
cld
jmp
out
add
mov
ficoms
jne
push
jmp
cmp
in
rolb
pop
push
int3
scas
loop
jge
daa
jg
jno
push
iret
into
pop
pop
add
out
mov
inc
push
or
and
ds
repz
notb
dec
ss
imul
stc
repz
mov
jp
wrmsr
or
daa
aas
jg
imul
mov
pop
add
dec
xchg
aaa
rol
push
negl
and
mov
mov
loope
and
sarl
inc
mov
mov
out
xchg
lahf
jg
fmul
add
push
out
mov
adc
adc
repz
fwait
add
push
and
fistpl
push
insb
fidivrs
loop
inc
pop
aad
inc
fnstsw
in
mov
mov
jb
jmp
imul
cmpsl
ljmp
sub
iret
lahf
aas
xor
int
lea
jbe
stc
cld
stc
repz
rcl
das
jle
or
inc
push
out
aas
sbb
add
and
pop
sbb
jg
cld
stc
popf
mov
xchg
jge
mov
and
xchg
lahf
aas
push
push
inc
push
lret
push
enter
in
orb
dec
xchg
fwait
aaa
out
cmpsl
sub
sbb
in
inc
mov
sbb
cld
loope
mull
iret
jo
test
loope
outsl
out
lahf
aas
dec
inc
xchg
ret
mov
in
cld
stc
repz
fwait
shrb
mov
and
jg
andb
xchg
nop
rcr
push
int
ja
incl
mov
bound
mov
push
mov
int
je
dec
xchg
popa
fdivl
shll
add
mov
xor
dec
loopne
sbb
xor
fidivrs
lret
std
jecxz
sbb
je
test
mov
mov
hlt
jg,pt
lock
mov
adc
ja
jg
aad
or
out
repz
push
insb
sub
jne
ss
or
test
outsl
inc
cld
cld
fdivl
pop
mov
stc
repz
pusha
xchg
movsb
rorl
pushf
inc
sub
adc
cld
cld
stc
push
pop
stc
add
pop
cmp
add
clc
inc
repz
lahf
shrl
lds
jg
cld
stc
sbb
lret
sbb
out
outsb
pminsw
lahf
aas
lret
int3
rcr
mov
inc
paddd
stc
repz
cmp
jno
cltd
push
cmp
jnp
lahf
aas
jg
jmpw
out
js
test
sar
stc
repz
js
adc
dec
xchg
aas
jg
into
mov
or
out
test
dec
mov
xchg
aas
mov
inc
into
pop
mov
pop
popf
push
lahf
cld
cld
js
cwtl
leave
adcb
iret
lahf
mov
mov
insb
push
call
repz
lcall
sbb
mov
out
aas
jg
xor
pop
aad
mov
test
mov
pop
inc
push
mov
xor
sbb
xchg
push
cmp
push
xor
fwait
aaa
outsl
ficomps
sub
aad
ret
sti
aas
ljmp
jno
idivb
out
lahf
mov
fnstsw
rclb
adc
jg
cld
stc
std
mov
inc
aad
mov
lret
aad
push
jp
repz
paddq
test
jl
repz
sahf
add
notl
out
lahf
jecxz
rcrb
lods
sub
loopne
push
stc
stc
iret
dec
lret
xor
mov
xlat
pop
jnp
test
cli
movsl
mov
aaa
outsl
ficomps
aaa
es
or
jns
out
mov
sti
test
notb
ss
out
jns
sbb
int3
pop
nop
gs
out
jp
inc
outsb
fcompp
movsl
mov
push
pop
push
icebp
jge
mov
xchg
jmp
cmp
adc
je
mov
iret
lahf
aas
jg
fptan
push
lret
add
lahf
sbb
repz
dec
push
loop
and
enter
aas
jg
add
inc
mov
dec
stc
repz
or
les
mov
arpl
je
xchg
mov
jmp
aas
stos
jmp
outsl
fiadds
popf
xor
push
jbe
lock
repz
fwait
xchg
mov
adc
sbb
loope
outsw
fidivrs
int3
mov
scas
repnz
pop
ss
cld
mov
push
out
xchg
inc
ja
cmp
mov
and
test
mov
stc
repz
push
dec
cmp
add
pop
repz
mov
bound
adc
fwait
sbb
and
xchg
jne
push
cmpsl
repz
lahf
mov
and
sub
stc
inc
inc
sbb
gs
adc
push
and
inc
mov
xchg
hlt
push
daa
dec
inc
popa
in
sub
mov
ret
repz
in
int3
fildll
pop
sbb
jno
fwait
aaa
outsl
dec
mov
adc
pop
sbb
jb
out
sub
mov
jmp
syscall
mov
repz
jp
nop
scas
push
mov
push
aaa
outsl
fidivrs
pushl
sbb
ffree
push
cld
rcll
sub
in
pop
lahf
nop
sbb
pushl
aas
mov
call
dec
xchg
pop
inc
outsb
fidivrs
gs
jmp
int
addb
add
mov
fidivrs
inc
add
inc
and
mov
fwait
aaa
outsl
ljmp
cmp
pop
pop
jecxz
cmp
repz
cli
aaa
add
out
cmp
cld
sbb
jge
mov
cmp
pushf
xor
loop
dec
repz
fwait
xchg
test
popf
out
adc
es
outsl
fidivrs
mov
and
push
push
stos
out
fwait
aaa
xor
enter
dec
xchg
fdivrl
push
dec
inc
imul
outsl
mov
rclb
add
out
fwait
scas
push
mov
fcoml
fildll
mov
xchg
pop
movsb
gs
lret
mov
imul
enter
int
aaa
call
sbb
ds
stos
push
jmp
fs
stos
pushf
imul
inc
inc
pop
mov
jnp
jg
mov
dec
mov
xlat
xor
cmpsb
jb
jns
iret
lahf
jae
movsl
pop
mov
inc
and
insb
aam
sbb
xchg
shl
add
cld
sti
leave
xchg
jae
sbb
gs
xor
or
lahf
aas
sub
jb
cmp
popa
ss
loopne
bound
xchg
xor
or
dec
mov
push
incl
dec
xor
outsl
fisubrs
popf
daa
xor
pop
repnz
cld
stc
ret
add
xor
pop
cli
cli
es
lahf
aas
jg
pop
ljmp
pop
sbb
repz
fbstp
jae
ficoml
pusha
addr16
dec
sub
adc
mov
push
cld
stc
repz
pop
or
sbb
pop
movsb
mov
mov
lahf
outsl
filds
mov
test
out
or
or
dec
lods
xor
mov
pop
lahf
pop
sub
daa
dec
shlb
inc
ret
pop
jb
scas
mov
aaa
xchg
pop
xchg
sub
repz
fnstenv
subl
iret
mov
xor
fsubr
arpl
loop
inc
cld
stc
cmp
xor
leave
push
adc
int
pop
rclb
ffreep
sbb
cmpsb
mov
je
ret
mov
scas
and
mov
push
dec
xchg
aam
dec
out
out
sbb
sahf
rcll
push
leave
fdivrl
mov
xchg
shl
mov
pop
shrl
add
div
pop
inc
dec
faddl
xor
mov
adc
pop
jg
cld
stc
ret
lahf
cmpl
pop
std
in
test
push
ljmp
icebp
in
std
xlat
fidivrs
xor
dec
in
call
fcmovne
sbb
insb
mulb
xor
pushf
mov
aaa
out
mov
rolb
addr16
jecxz
dec
ret
imul
fwait
dec
sub
adc
das
sub
aaa
outsl
test
push
jns
mull
aam
ds
std
jno
out
fldt
xor
inc
lahf
mov
mov
or
xchg
inc
std
inc
pop
mov
add
jl
subl
mov
add
ljmp
inc
jp
mov
aaa
outsl
fidivrs
jge
mov
xchg
fwait
cwtl
inc
xchg
and
pop
mov
ret
mov
cwtl
xor
rcl
das
mov
mov
int
aaa
and
push
out
xchg
mov
push
fs
daa
mov
inc
pop
fldenv
les
mov
imul
mov
icebp
test
lret
fwait
aaa
dec
cmp
mov
testb
cmp
xlat
dec
jo
dec
outsl
stc
xchg
jns
out
ss
jp
loope
xor
fistpl
outsl
fimuls
mov
lahf
jg
pop
cmp
and
decb
mov
pop
cs
dec
pop
jl
enter
cmp
dec
jp
fcomi
jnp
les
cmp
repz
movsl
adc
hlt
icebp
sti
out
pushf
push
andb
cld
sbb
or
push
inc
sbb
cld
cmpb
sbb
rol
pop
es
lods
sbb
pop
ja
in
repz
fwait
testl
aaa
push
xor
mov
test
sub
pop
jo
daa
pop
push
jge
cld
addl
mov
call
mov
add
in
rclb
vmwrite
out
jmp
and
ss
jb
enter
xor
mov
xchg
sbb
mov
fs
mov
repz
xchg
fwait
stos
xor
sub
xor
xchg
mov
mov
xor
fidivrs
mov
sbb
fwait
aaa
arpl
pop
lahf
pop
cmpl
repz
cs
mov
mov
sub
outsl
jo
aaa
push
jno
fsubrl
mov
mov
xchg
adc
out
and
lcall
adc
jg
xchg
arpl
aaa
arpl
cld
stc
push
orl
dec
mov
mov
aas
jg
cli
cmp
popa
mov
pop
in
pop
aaa
xchg
pop
enter
sub
mov
out
pop
xchg
sbb
push
nop
pop
push
jno
adc
bound
jl
cld
jl
jnp
insb
xchg
psubsb
push
fwait
aaa
out
mov
mov
or
repz
inc
hlt
popf
or
sarl
jl
aaa
outsl
fidivrs
jmp
xchg
xchg
mov
mov
xchg
fwait
jmp
mov
fidivrs
mov
icebp
std
mov
cmpsb
lock
insb
pop
cld
andl
cld
out
loopne
popf
push
push
pop
lahf
jg
jb
mov
iret
inc
sub
dec
nop
loopne
repz
addr16
je
insl
jnp,pt
out
mov
add
push
mov
js
pop
iret
or
xchg
lahf
fcmove
cmp
dec
mov
pop
adc
xchg
lahf
aas
sbb
in
lret
rcr
fstl
mov
in
icebp
shr
fbld
cmp
stc
repz
mov
cli
insl
movsl
dec
sahf
and
jg
aas
jg
cld
ret
js
lods
repz
mov
mov
jle
repz
lahf
call
dec
cmp
sub
jg
cld
stc
pop
inc
add
mov
shll
out
jmp
lahf
aas
cli
mov
push
dec
fs
repz
or
jle
jbe
cmp
or
lahf
aas
jg
xlat
jl
add
add
stos
aaa
cld
stc
repz
dec
adc
call
call
and
jg
xlat
aam
adc
sub
cld
scas
lcall
push
seta
cmp
imul
repz
mov
repz
xchg
movsl
in
std
enter
pushf
dec
loopne
outsb
mov
shl
out
fwait
inc
push
mov
sti
sub
cmc
pop
inc
fidivrs
add
movsb
jmp
aam
sub
mov
outsl
fiadds
cmpsl
xchg
stc
fs
dec
mov
aas
cmp
mov
mov
or
pop
fiaddl
push
in
add
data16
mov
enter
lock
xchg
mov
mov
or
cmp
push
jns
out
mov
test
iret
mov
jo
xor
outsl
fidivrs
imul
loope
into
jmp
or
dec
push
enter
fidivrs
daa
clc
icebp
pop
shrl
jbe
popf
fbld
fwait
aaa
outsl
imul
push
pop
mov
repz
xorl
cmp
outsl
fidivrs
cmp
scas
jae
xchg
adc
shll
jae
addr16
cli
cltd
fidivrs
mov
outsl
das
and
arpl
pushf
fwait
rcll
xor
push
repnz
add
jg
cld
stc
sbb
sbb
inc
and
aad
cmpb
iret
lahf
aas
mov
xchg
je
pop
fists
push
lock
lea
lds
inc
fucom
repz
aaa
and
fwait
aaa
inc
outsl
cmpsl
push
das
stos
push
mov
enter
call
movb
stc
repz
xor
lock
jle
mov
xchg
or
jg
cld
adc
fnstsw
out
mov
sub
lahf
mov
testb
jmp
mov
out
lahf
popf
lds
scas
push
push
sbb
stc
negb
mov
push
rolb
fmuls
iret
lahf
aas
sbb
pushf
sahf
sarb
cltd
adc
jge
loop
and
outsl
fiadds
push
repz
lock
iret
aad
repz
fistps
outsb
out
inc
arpl
into
in
int3
xchg
repz
ds
lahf
sub
pop
jl
mov
mov
sub
stc
stc
cmp
jbe
iret
mov
out
xlat
or
pushw
inc
xor
sbb
test
cmc
insb
mov
jg
outsb
fidivrs
ret
jno
mov
cld
stc
inc
fistpll
jmp
test
iret
lahf
aas
jg
pop
push
sub
adc
jp
dec
mov
stc
repz
jae
xor
js
ljmp
jg
fistps
sbb
inc
sub
mul
iret
inc
test
hlt
filds
jg
cld
pop
insb
xor
in
mov
fnsave
lahf
pop
es
lahf
push
push
dec
nop
or
push
sub
stc
inc
call
inc
pop
mov
adc
xor
iret
lahf
aas
fstpl
nop
nop
xor
mov
enter
adc
fistps
out
std
hlt
clc
fdivp
repz
out
add
out
dec
push
outsl
fidivrs
mov
enter
popf
mov
int
aaa
jno
test
add
das
xor
out
mov
fisubs
inc
cmc
inc
or
decb
inc
add
lret
jbe
inc
cmp
repz
inc
push
gs
mov
jg
cld
stc
repnz
add
push
xor
rcrb
and
iret
lahf
aas
std
push
fsub
outsl
jge
mov
fucomi
pop
add
into
add
cwtl
out
mov
jp
jmp
mov
loop
adc
aas
ret
mov
mov
mov
inc
outsl
mov
adc
pushl
cld
stc
and
sub
int3
negl
enter
pop
outsb
inc
insl
inc
cmpsl
xlat
mov
dec
cld
stc
repz
inc
out
cmp
scas
stos
fildl
pop
cmpsb
jo
lahf
aas
jg
inc
jns
ret
sar
and
push
xchg
rol
enter
jl
add
mov
xor
out
roll
jns
out
add
and
cmpsl
jae
mov
inc
int3
jne
dec
aaa
outsl
fidivrs
test
fmul
shrl
ja
inc
push
testb
hlt
sub
mov
push
out
stos
and
movsl
rol
ljmp
mov
jle
cld
sbb
cld
scas
or
ljmp
jp
adc
in
lahf
mov
or
mov
sub
repz
push
aaa
test
ds
jb
outsl
fidivrs
or
mov
outsl
inc
add
shlb
shlb
aaa
lcall
dec
fs
xchg
int
ret
cmp
sahf
rol
fidivrs
sbb
das
in
and
pop
int
aaa
outsl
jle
fisubs
push
test
mov
out
sub
aam
dec
or
insb
xchg
leave
jbe
mov
pop
movl
out
mov
cmp
jns
sbbl
sub
sbb
xchg
xchg
cmc
xchg
mov
lds
lcall
repz
data16
mov
and
enter
mov
xor
decl
sbb
jns
out
ret
or
orb
dec
inc
aaa
outsl
fidivrs
push
mov
movb
pop
jae
repz
fwait
pop
mov
into
cmp
in
jo
push
imul
stos
rcrb
mov
cmpsb
or
iret
lret
clc
add
and
insl
and
fbstp
outsl
fidivrs
and
in
jb
in
adc
and
push
adc
xor
mov
push
call
push
aas
stc
mov
in
daa
push
es
dec
lods
xchg
fcoms
popa
push
data16
aas
cmp
lea
fisttps
hlt
shlb
out
jo
cwtl
cmp
aas
inc
iret
sbb
lds
or
pop
add
jns
out
xlat
insb
add
ljmp
ret
fidivrs
call
jmp
hlt
xchg
int
bound
xor
xor
gs
call
pop
inc
push
cmp
jne
push
fwait
mov
push
int
aaa
outsl
ficompl
lds
mul
fldenv
out
inc
sub
mov
pop
inc
enter
aaa
outsl
fdivp
fdivrs
pop
or
push
js
repz
xchg
dec
ljmp
mov
decl
dec
push
movsb
inc
cmp
fcomi
out
lahf
sbb
in
mov
mov
fbld
cmp
inc
mov
ds
push
pop
inc
xchg
lahf
aas
and
adc
insb
out
pop
dec
das
sbb
lahf
in
jns
out
xor
addr16
aad
ss
cmp
aaa
outsl
fidivrs
out
cli
ds
add
or
sub
scas
mov
ja
xchg
stos
cmp
pop
or
aaa
outsl
fdivrp
xchg
xor
sbb
inc
mov
push
scas
push
mov
jns
out
rorb
xor
out
cmp
add
fdivrp
mov
shrl
fisttps
fdiv
sbb
aaa
xor
sbb
push
fidivrs
shll
dec
inc
fadd
inc
loopne
fwait
aaa
outsl
inc
jmp
jecxz
call
push
xchg
rcll
mov
jp
into
add
push
pop
ja
push
pop
xor
aaa
outsl
faddp
mov
mov
nop
shrl
jns
out
shlb
pop
xchg
mov
mov
fidivrs
adcl
xlat
cld
stc
repz
scas
and
mov
ret
mov
aaa
inc
aas
stc
lahf
cmp
in
and
jg
add
int
jmp
daa
aaa
out
mov
push
xor
inc
push
addr16
fwait
in
inc
xor
jl
inc
dec
cmp
mov
outsl
fidivrs
outsl
mov
inc
sub
int
aaa
and
adc
les
jp
mov
pop
dec
hlt
fwait
aaa
outsl
add
lret
add
insl
cmpsl
fwait
arpl
out
fstps
pushf
aas
and
ficomps
fdivrl
and
int
in
add
fcmovnu
testl
fidivrs
adc
lret
and
enter
aad
dec
outsl
roll
dec
out
sbb
into
shrb
clc
mov
pop
pop
inc
xor
jno
iret
leave
loop
cld
jmp
ret
jle
pop
orl
les
out
test
pop
das
xlat
pop
jae
arpl
sbb
daa
out
shll
ret
mov
sbbl
cld
in
popa
mov
cld
out
aaa
lret
es
aaa
aas
outsl
outsb
sub
push
pop
push
insb
or
cmp
out
jnp
push
dec
int3
xor
jl
mov
dec
insl
insb
outsl
fidivrs
ss
clc
jbe
repz
inc
sbb
fs
lock
adc
repnz
cmp
dec
jg
aaa
outsl
fisubrs
mov
inc
popa
scas
das
jnp
fisubl
mov
movsb
popa
stos
shlb
out
pop
aaa
outsl
fidivrs
clc
push
mov
jnp
sub
lds
dec
and
pop
mov
xchg
in
out
lahf
aas
int
subb
mov
cld
stc
repz
xorb
inc
xor
mov
adc
lahf
aas
jg
imul
xchg
bound
add
popf
jl
mov
into
xor
xchg
inc
jle
out
movsb
and
add
aad
jge
popa
aaa
cli
mov
jmp
outsl
fidivrs
int
dec
cmp
fidivrs
ja
and
icebp
cmp
stos
sbb
out
rcr
fld
push
mov
jl
cmp
cmp
ficoml
jg
js
repz
xchg
iret
lahf
aas
mov
push
sub
shlb
inc
pop
cld
stc
repz
mov
add
xor
pop
mov
jg
cmp
xchg
sbb
in
aad
hlt
lahf
gs
in
mov
push
lods
hlt
push
xchg
xor
sbbb
add
push
lods
sbbb
lret
cwtl
int
aaa
outsl
aaa
test
icebp
in
mov
addr16
jp
cli
enter
lods
gs
xchg
xchg
outsl
lret
xchg
leave
mov
push
andb
fidivrs
dec
sbb
mov
pop
mov
inc
mov
adc
add
and
pop
out
xchg
cmp
fadds
sahf
ljmp
fidivrs
pop
adc
cmpsb
push
and
lods
inc
cld
jmp
loope
jge
pop
das
pop
xor
rcrl
and
dec
dec
test
dec
xor
xchg
stos
popa
addb
push
stc
movsb
fadds
arpl
aas
scas
add
mov
jg
xchg
and
imul
icebp
pop
stos
mov
out
add
push
fwait
inc
or
mov
movsb
jns
xchg
lea
inc
and
jne
jle
popf
adc
mov
icebp
hlt
sbb
cmp
inc
bound
scas
aad
cmp
out
inc
sub
sbb
shlb
aam
ret
mov
dec
scas
dec
push
in
push
dec
dec
cld
cmp
push
cmp
aas
icebp
enter
mov
popf
jle
fsubr
xor
lahf
adc
int
addr16
cld
stc
jo
fisttpll
in
loopne
push
lods
dec
fucom
out
aam
out
lahf
aas
je
and
movsl
stc
movsb
pop
int
scas
in
repz
fldcw
stos
xchg
out
shrl
push
inc
mov
repz
icebp
pop
aam
pop
dec
pushf
pusha
jl
or
fwait
aaa
outsl
jbe
lret
adc
outsb
movsl
fprem
mov
repz
test
jne
aas
popa
test
test
ficoms
scas
roll
ret
je
jge
sti
inc
adc
repz
xchg
pop
pop
mov
push
aad
sbb
mov
cwtl
lea
scas
pop
imul
aaa
sub
adc
mov
lods
push
pop
cmpsl
stc
jnp
push
jae
repz
fwait
stos
in
packuswb
addr16
mov
sub
adc
inc
pushf
cltd
xor
aam
and
inc
jne
fwait
aaa
outsl
lret
aaa
mov
pop
in
fnstsw
mov
pop
inc
mov
add
ja
aaa
outsl
fisubs
jbe
xchg
mov
mov
jne
jns
out
sti
jbe
inc
jae
jmp
lock
cmp
add
aas
outsl
fidivrs
ljmp
inc
jecxz
out
fwait
aaa
popaw
adc
jmp
les
repz
lret
int3
xchg
enter
aaa
push
or
outsl
andb
out
jae
adc
add
mov
loopne
ds
popf
test
movsb
pop
scas
adc
dec
insl
flds
fisttpll
cmp
arpl
jae
jmp
int
push
leave
sub
je
outsb
push
mov
outsl
fidivrs
and
lahf
push
test
repz
fwait
dec
mov
cmpsb
jno
in
stc
sbb
outsl
fidivrs
lods
cs
mov
arpl
int
aaa
jno
mov
xchg
leave
mov
mov
cs
in
call
mov
int
aaa
outsl
ret
std
out
into
ljmp
jg
out
insb
iret
push
jnp
bound
ds
stc
repz
in
add
dec
adc
adc
iret
cmpsl
push
fildll
push
dec
add
sub
or
or
xor
sub
sub
lahf
aas
cs
push
mov
fmul
jb
pop
pop
sbb
lea
pop
mov
mov
or
and
jg
pop
adc
jae
lahf
mov
enter
mov
fwait
inc
sbb
repz
cmp
loope
sti
cltd
gs
popa
xchg
int
aaa
outsl
xchg
call
fidivl
mov
pop
ss
cmp
out
jg
pop
xchg
nop
mov
and
repz
iret
push
and
xchg
hlt
and
inc
aas
jg
cld
outsl
or
in
and
jno
in
pop
iret
lahf
pop
sahf
jnp
out
pop
fs
cld
stc
repz
jbe
pop
adc
mov
aas
jg
adc
and
roll
stc
movsl
stc
repz
fnstsw
fimull
push
loope
mov
xor
push
sub
jg
cld
in
imul
pop
test
outsl
adc
daa
add
repz
lahf
hlt
enter
stc
cmc
cmc
lcall
xor
sbb
outsb
add
and
imul
mov
jg
xchg
sahf
xchg
pop
push
pusha
addr16
mov
repz
ljmp
cmc
cld
jmp
inc
fidivrs
repnz
jns
jl
push
xlat
loope
testb
fstpl
or
mov
sub
push
daa
ds
jns
out
mov
call
int3
fmulp
push
mov
mov
movsl
out
popf
leave
sbb
ja
sti
movsb
inc
repz
fwait
xchg
cld
and
les
icebp
loopne
inc
cmp
pop
movsl
outsl
movsb
xlat
cmc
js
xchg
aaa
outsl
fidivrs
mov
mov
inc
mov
rclb
fwait
imul
dec
mov
or
pop
xchg
dec
and
daa
mov
lea
negb
jne
out
sbb
dec
or
sbb
cltd
fidivrs
mov
mov
mov
movsl
jbe
ror
aaa
outsl
jg
xor
cs
ja
iret
mov
adc
and
push
clc
test
outsl
ficoms
jp
cmp
adc
add
repz
js
mov
or
xor
outsl
fidivrs
loope
pop
shrb
inc
mov
lcall
cmp
cld
sub
push
mov
enter
inc
repz
mov
xlat
loopne
push
jb
add
mov
pop
icebp
subl
add
pop
out
fwait
aaa
in
test
or
xchg
ja
and
mov
enter
call
das
stc
repz
ds
bound
insl
daa
inc
inc
dec
xchg
adc
fcoml
cmp
lcall
sbb
cld
stc
push
nop
idivb
test
mov
repz
lret
es
jp
out
xchg
pusha
dec
cmp
mov
jns
scas
aaa
push
mov
leave
sarl
outsl
ficoms
test
sub
jmp
cmp
outsb
mov
int
mov
pop
mov
outsl
jl
outsl
fidivrs
mov
pushf
mov
jmp
int
xor
mov
es
insb
xchg
jmp
loop
out
outsb
inc
xchg
aaa
outsl
fiadds
mov
aas
pop
xor
lcall
je
and
mov
xchg
dec
daa
aaa
outsl
fidivrs
out
stc
sarb
filds
stos
adc
sbb
sbb
leave
pushf
movl
xchg
incb
cli
fs
and
fidivrs
adc
loop
clc
push
imul
test
ret
jae
push
pushf
xor
repz
mov
stc
movsl
mov
lcall
outsl
fidivrs
xor
lods
fistpll
xor
sbb
cmc
enter
cli
jle
pop
fld
sub
or
and
xchg
push
iret
int
aaa
outsl
aaa
mov
in
shlb
mov
repnz
imul
xchg
mov
jo
add
sub
pop
and
clc
push
add
out
add
repnz
jo
add
ret
add
jo
adcb
push
jo
adc
bound
jo
mov
rcr
mov
push
fs
mov
pop
add
pop
in
xchg
and
xchg
cmp
inc
sub
add
mov
jg
cmpsl
je
add
iret
adc
dec
adc
add
jo
scas
push
jo
add
and
sbb
push
sahf
dec
add
divl
add
ja
aas
adc
jge
xor
add
or
xor
jo
jo
xchg
fwait
or
jns
or
adc
jo
jo
or
xchg
lahf
jo
inc
decb
add
scas
addr16
cmp
add
addb
sub
cmp
repnz
shl
xor
jg
add
stc
push
xchg
aaa
inc
sbb
jo
jo
rorb
xlat
add
jo
adcb
test
ror
pop
sub
or
add
jo
addb
jo
push
and
repnz
sbbb
add
mov
aas
add
stc
jmp
xchg
lcall
stc
stc
push
jo
mov
addr16
inc
cmp
inc
push
add
aam
movsb
add
and
add
adc
jecxz
cmp
stc
mov
imul
ret
pop
push
jo
lahf
aas
jae
rcrl
add
jo
xchg
cmp
mov
dec
stos
dec
fists
inc
add
jo
and
push
dec
dec
aas
inc
or
adc
jo
jo
or
xchg
outsl
jo
add
ret
jo
adc
add
and
mov
xlat
cli
and
push
jo
mov
pop
ror
add
add
repnz
jo
test
cltd
cltd
test
outsl
jo
adc
repnz
add
jne
movsb
jo
and
adc
daa
add
stos
add
add
scas
jo
pop
sub
cli
jo
stc
stc
push
cmpsl
fwait
mov
pop
cmp
add
jo
xchg
fwait
aaa
pop
in
popa
addr16
jp
aas
decl
jo
lock
add
or
jo
xchg
inc
jle
jo
fildll
sub
mov
cwtl
jo
add
sub
jo
inc
cld
mov
fnstcw
ret
cmp
or
jo
stos
add
mov
sbb
mov
xor
add
xchg
or
jo
adcb
jnp
sub
outsl
mov
xchg
push
add
jb,pn
cmpsb
jo
add
xchg
sbb
enter
or
add
outsl
xchg
aas
adc
int3
inc
pop
iret
lahf
or
jo
hlt
pop
in
dec
addb
in
xor
jo
repz
jg
pop
pop
jp
add
out
int
aaa
adc
mov
add
in
mov
jl
lds
sbbl
aaa
dec
dec
mov
fwait
aaa
outsl
fisubrs
daa
cmp
addr16
jnp
ljmp
cltd
pushw
cmc
or
rcll
out
cld
mov
mov
subl
mov
test
lahf
aas
jg
iret
mov
mov
or
mov
sub
repnz
nop
adc
jno
xor
add
sbb
clc
or
mov
mov
xor
cld
jnp
enter
cli
xchg
mov
cmp
inc
jle
mov
clc
cmp
push
cld
imul
das
push
test
insl
das
sub
pop
push
pop
aaa
outsl
fiadds
jnp
push
mov
cmp
repz
fwait
std
xor
pop
outsl
mov
add
ficoms
fs
pop
xor
scas
aas
push
scas
rolb
rolb
mov
push
ficoms
pop
xchg
and
addr16
pop
dec
xchg
fwait
aaa
outsl
lret
mov
sub
sbb
xchg
aaa
rclb
sub
leave
fcmovnb
aam
and
mov
or
das
rsqrtps
out
mov
mov
jne
lods
insb
push
clc
lahf
aas
jg
jne
movsb
inc
mov
pop
adc
cmp
mov
adc
repz
sbb
sub
test
divl
lret
mov
test
push
sarl
jg
std
jo
iret
loopne
mov
nop
aaa
out
mov
jge
and
mov
out
fcmovu
jb
or
mov
flds
lock
add
fildll
adc
stc
ret
xor
divl
add
xchg
mov
insb
cmp
lahf
aas
jg
int
int
fsubrl
jne
std
fwait
orl
push
out
jns
push
or
icebp
sub
lahf
jg
mov
icebp
lcall
pop
inc
and
out
or
jnp
xchg
mov
push
in
icebp
jle
cld
stos
jns
das
xchg
push
test
inc
insb
out
call
iret
inc
ljmp
jge
gs
ja
push
jg
or
lods
add
xchg
inc
dec
adc
jg
mov
insb
in
push
push
rcll
pop
shlb
mov
sti
enter
out
or
mov
ficoms
addr16
push
lods
inc
sbb
sti
pop
jg
push
lahf
outsl
movl
mov
dec
loop
lahf
aas
lret
scas
push
shlb
mov
mov
jl
aad
mov
setg
jge
pop
xorl
jmp
cld
stc
inc
outsl
and
jg
fcomps
repnz
dec
iret
lahf
aas
jl
mov
cmc
and
les
cmpsl
ds
ror
addr16
jge
mov
les
aas
cld
movsb
repnz
lahf
mov
popa
cmpsl
popa
jecxz
add
push
repnz
and
insl
push
out
gs
mov
sbb
add
add
ficoms
subl
sub
out
and
mov
adc
fwait
jmp
jg
int3
cmc
and
jbe
jns
xchg
inc
cmpsl
sub
adc
les
inc
outsl
lret
inc
outsb
fidivrs
add
mov
adc
repz
mov
jo
and
test
xchg
pusha
dec
jmp
jns
ja,pn
ret
sbb
dec
test
outsl
fimuls
mov
testl
dec
lock
xlat
jne
inc
aaa
add
ss
fidivrs
xchg
mov
pop
repnz
ja
cwtl
in
jl
sbb
test
loopw
push
jmp
lcall
xchg
leave
push
xor
aad
repz
stos
or
clc
movsb
leave
or
and
out
arpl
sub
iret
lcall
mov
outsl
fnsave
int
aaa
outsl
cmp
pushf
mov
lahf
movsb
jns
out
stc
daa
pop
xchg
pop
in
shrl
divw
out
sub
cwtl
and
outsl
jbe
cld
repnz
and
hlt
xchg
int
dec
and
int3
sahf
adc
pop
aaa
jnp
imul
movsb
mov
adc
aaa
outsl
fidivrs
xor
lretw
repnz
repz
fwait
xchg
aad
in
lcall
nop
outsl
fidivrs
jmp
push
and
cltd
hlt
adc
int
aaa
add
iret
and
add
inc
sub
mov
push
or
mov
inc
mov
fwait
aaa
outsl
sti
popw
orl
pop
push
push
fidivrs
xlat
xchg
add
roll
das
popa
xlat
int
addb
inc
inc
ja
lcall
out
add
xor
rolb
rcl
adc
jnp
iret
sbb
fs
pop
mov
popf
jge
imul
jle
cmpl
pop
mov
push
repz
insb
pop
in
daa
in
xchg
sbb
cli
sub
stc
in
cmc
push
fmull
fstp
jmp
repz
cltd
pop
faddl
cli
push
cmp
and
mov
jle
push
inc
sbb
movsb
xlat
inc
ja
and
inc
adc
xchg
insb
inc
outsl
mov
int
sbb
and
in
mov
push
inc
lods
and
inc
mov
movsb
es
les
stc
sbb
rcrl
xor
xchg
jb
in
out
and
sub
push
nop
jnp
iret
lahf
jg
imul
mov
adc
aaa
push
pop
inc
cmp
repz
push
mov
inc
cmpsl
mov
jo
outsl
ficoms
pop
fidivrl
or
in
ljmp
popa
or
daa
movsb
mov
fsubp
sbb
stc
rcll
in
sti
test
mov
adc
rcl
push
loop
int
aaa
out
mov
inc
icebp
movb
and
inc
out
xor
inc
lcall
push
add
lahf
aas
jg
push
fdivrl
sarl
or
div
lcall
inc
push
ja
test
sub
jg
cld
stos
lcall
sub
mov
rorl
sbb
sbb
pop
hlt
inc
add
fdivrl
mov
fstl
mov
fimuls
pop
adc
scas
add
repz
mov
mov
mov
stos
insl
std
sbb
fwait
aaa
outsl
dec
sbb
xchg
xor
mov
add
jns
out
rolb
jne
or
inc
xor
ficomps
jbe
add
mov
ret
out
xchg
leave
inc
xor
insl
fcmovne
pop
leave
sbb
ljmp
hlt
inc
divps
jmp
out
lahf
aas
xor
pop
cltd
pop
or
lret
pop
cld
stc
repz
das
pop
jnp
lret
xchg
push
mov
adc
or
and
lahf
aas
jg
sbb
cwtl
cmc
mov
f2xm1
into
cld
stc
repz
stc
mov
into
push
enter
and
mov
cmc
inc
mov
dec
sbb
and
iret
mov
jge
push
pop
repz
pushf
add
add
jnp
mov
jmp
aaa
outsl
fisubrs
lret
add
or
rol
mov
cmp
dec
jns
out
or
cmp
lret
sti
dec
pop
bound
outsl
fidivrs
dec
inc
cmpsl
fistpl
ds
add
fwait
iret
in
adc
fidivrs
shll
inc
jne
clc
xor
pop
push
das
mov
fwait
aaa
outsl
xchg
and
xchg
lock
ja
loop
insb
iret
dec
pusha
loope
mov
imul
dec
pop
inc
pop
inc
or
push
and
stos
cltd
mov
fidivrs
cmpsb
test
sub
int3
out
mov
stc
daa
mov
cli
push
mov
repz
fisubl
and
adc
lret
mov
mov
inc
jle
imul
cld
stos
aad
push
lea
stc
xchg
pushf
iret
lahf
aas
jg
cmpsl
lods
test
sub
out
incb
lock
push
push
inc
pop
in
sub
jg
sub
adc
cltd
mov
lcall
out
std
fldz
xor
lock
mov
cld
inc
enter
jecxz
fcmovnb
lds
into
mov
lahf
adc
jnp
dec
imul
or
xor
sbb
ja
enter
mov
xchg
int
mov
push
mov
and
loop
jne
mov
xchg
lret
inc
sub
out
insb
xor
cmpsl
inc
sbb
int
aaa
outsl
sti
xchg
loope
add
jp
ficoms
enter
xchg
ss
movsb
aam
enter
fisttpll
xor
pop
lahf
and
dec
fcoml
dec
jmp
mov
jns
imul
adc
imul
push
outsl
sti
loopne
xchg
out
xchg
into
mov
push
fdivrl
movsb
pop
stc
sbb
cmpsw
shlb
shll
aaa
outsl
ficomps
dec
push
or
enter
int
call
inc
out
xor
jns
out
xor
dec
jns
jle
bound
int
xchg
lret
sbb
out
jge
stc
xchg
xchg
jo
leave
out
cmp
xchg
mov
mov
mov
and
aam
mov
dec
insl
test
nop
fistpl
xchg
xchg
lret
adc
loopne
mov
stc
repz
ja
pusha
and
cmp
sub
or
popf
js
cwtl
dec
fstl
xchg
aaa
shlb
or
fs
addr16
cwtl
std
xchg
sbb
fwait
aaa
out
mov
jmp
inc
pop
mov
mov
xchg
clc
inc
bsf
mov
fwait
aaa
outsl
fsubp
rcl
cmc
cwtl
xchg
cmpl
nop
in
xlat
in
repnz
movsb
mov
and
adc
and
or
js
inc
adc
arpl
aaa
outsl
fsubp
mov
pop
lea
xchg
lahf
stos
mov
sub
mov
call
pop
jnp
in
xchg
cmp
mov
push
xor
dec
lahf
xchg
daa
stos
xchg
pop
inc
ja
repz
call
call
stos
xor
pop
lcall
xor
cs
or
mov
sti
dec
xchg
mov
shl
repnz
mov
adc
fistl
out
push
pop
and
in
imulb
mov
fmuls
mov
dec
cmp
les
jl
fdivs
ret
push
or
cmc
jnp
sbb
jns
scas
pop
jle
negl
xor
push
out
dec
cmpsl
arpl
mov
rcll
nop
and
or
sub
das
lahf
insb
fidivrs
lea
jbe
xchg
add
clc
leave
out
outsl
std
inc
push
jge
mov
mov
repz
ja
add
cmp
xor
fwait
ja
jge
jp
imul
mov
jns
out
inc
mov
jmp
xchg
jbe
cmp
movsb
shld
inc
cmp
dec
xor
icebp
leave
scas
mov
pop
jl
fdivrl
or
addr16
test
lea
int
sub
cwtl
pop
fs
flds
icebp
leave
out
dec
xchg
lahf
aas
ds
or
dec
clc
dec
xchg
iret
sub
stc
repz
mov
add
or
je
push
jp
xchg
icebp
add
push
sbb
cs
aas
xor
scas
add
or
inc
test
popa
in
in
mov
into
fidivrs
scas
fucom
sub
int
aaa
outsl
dec
cmp
test
fldl2t
mov
repz
cld
push
int3
xor
push
add
nop
outsl
ficoms
pop
iret
jae
loop
xchg
pop
and
int
aaa
push
das
mov
mov
sbbb
push
mov
jb
lret
cmpsl
mov
stos
outsl
fidivrs
pop
dec
mov
xchg
inc
mov
fwait
aaa
ret
sub
ret
paddb
pop
aas
jg
sarb
out
test
loop
mov
xchg
and
leave
iret
lahf
xor
insl
xor
lret
ljmp
cld
stc
jbe
fsubs
xchg
pop
sub
sarb
fistl
repz
test
lock
fidivrs
js
add
testl
lcall
xor
imul
ficoms
daa
xchg
rol
push
add
dec
sub
lods
jmp
int
loopne
aaa
pop
push
sub
repz
pushl
or
jmp
fwait
aaa
outsl
fmulp
mov
mov
dec
dec
or
int
and
loope
aad
inc
pop
mov
dec
stos
aaa
outsl
fidivrs
lret
mov
cmpsl
cs
jmp
repz
fwait
xchg
mov
mov
loopne
jb
cmpsl
and
jns
dec
rcrb
fcomip
test
mov
sub
fwait
aaa
in
jp
js
xchg
add
rorb
inc
sub
inc
loop
pop
add
sbb
lahf
aas
lcall
js
shlb
cmpsl
into
mov
cld
stc
repz
push
xor
subl
jg
outsb
sub
lret
lahf
sub
out
test
testl
repnz
stc
mov
dec
and
repz
call
adc
idivl
mov
outsl
fidivrs
jg
stos
mov
dec
xor
mov
mov
fidivrs
ds
jg
jge
push
xor
outsl
lret
repnz
lret
push
or
jns
and
jns
imull
push
aaa
outsl
fidivrs
or
ljmp
adc
jnp
daa
xchg
jb
cmpsb
sbb
jns
out
pop
stos
rclb
sbb
aad
sbb
ss
stos
out
outsl
fidivrs
cmp
ljmp
lea
scas
cwtl
jge
in
fwait
jecxz
pop
jb
fidivrs
sub
jne
inc
adc
jg
sub
dec
add
adc
cmp
xchg
cmp
mov
mov
dec
shll
fidivrs
imul
rcrb
fwait
aaa
outsl
mov
jae
cltd
and
xorl
insl
xor
data16
xchg
aam
push
es
push
iret
aas
push
jmp
mov
jnp
test
push
in
jle
inc
dec
out
fwait
aaa
cmpps
inc
adc
or
mov
xchg
popf
fidivrs
adc
pusha
pop
lcall
aaa
outsl
fcmovne
mov
mov
mov
enter
sti
pop
mov
aas
add
mov
jmp
push
and
fidivrs
ljmp
jno
aaa
out
andb
loopne
loope
dec
fdivrs
int
out
and
cmp
loope
jns
out
lahf
and
mov
jb
inc
mov
sbb
aaa
outsl
fidivrs
dec
and
stos
inc
xlat
mov
out
fwait
push
push
out
cli
data16
shll
sbb
push
inc
fs
std
jbe
cld
test
and
sub
stc
iret
lahf
aas
jg
jnp
xchg
pop
stc
xchg
stc
repz
or
dec
cmpsl
jns,pn
mov
xchg
pop
lahf
aas
jg
sbb
xchg
or
xor
stc
repz
dec
int3
dec
adc
loope
mov
cmp
jl
mov
lods
cmp
ljmp
in
nop
imulb
jns
cmc
xchg
mov
negl
mov
adc
fnstcw
dec
outsl
out
sbb
fwait
aaa
cmpsl
xchg
or
push
cmp
enter
popa
mov
insl
lds
dec
icebp
mov
xlat
repz
aad
insl
stc
jns
out
mov
fnstenv
out
cmp
inc
sti
fdivrl
test
push
and
sbb
sub
pop
xchg
xor
sub
mov
repz
lahf
push
roll
subb
repz
ljmp
stc
inc
jmp
jbe
jle
sti
cli
xor
jns
adc
lahf
ret
insl
inc
or
fidivrs
pushl
test
fwait
aaa
outsl
push
cmc
sbb
mov
out
inc
mov
mov
pushf
loope
mov
aad
enter
inc
sub
aaa
outsl
fidivs
jg
mov
dec
xchg
in
cmp
popa
ljmp
loope
cmp
fidivrs
in
add
mov
mov
fwait
mov
pop
dec
jmp
mov
outsl
fidivrs
out
mov
loop
jae
enter
and
and
aas
sub
add
aaa
scas
cmp
stc
fs
cmc
lahf
loopne
dec
mov
pop
cmc
jbe
sbb
mov
shll
sub
shlb
popa
or
fadds
push
and
int
and
mov
repz
imul
adc
sub
xor
mov
push
cmp
int
cmpb
dec
mov
mov
mov
sbb
mov
fists
ficoms
xchg
aaa
outsl
pushf
fs
push
and
sahf
and
or
inc
ret
dec
push
or
repz
pusha
inc
into
cli
xor
xor
xor
jg
cld
xor
pop
repnz
lock
iret
lahf
pusha
jp
mov
ss
fisubrs
cld
cmpsl
les
pop
adc
pop
lret
pusha
cmp
fwait
aaa
outsl
fimuls
popa
push
aam
sub
push
jae
insb
loope
out
jp
out
lcall
adc
fistpll
rcrl
das
push
nop
outsl
fidivrs
xor
ljmp
out
fwait
aaa
stos
imul
push
ror
aaa
inc
pop
dec
dec
adc
mov
xchg
out
loopne
rcrl
lahf
push
add
ds
outsl
std
push
mov
and
jae
icebp
mov
call
scas
and
repz
aas
pop
mov
add
or
imul
popf
xchg
ret
dec
push
push
sub
arpl
inc
aas
pusha
xlat
pop
inc
mov
mov
or
jbe
xchg
addr16
test
repz
mov
insl
insb
xchg
inc
mov
ret
fidivrs
testl
cmp
adc
das
xor
mov
cmpsb
test
pop
pop
sub
mov
ds
mov
rol
adc
mov
out
fwait
or
mov
mov
fcomps
fidivrs
jmp
cmpb
jns
cmp
cmp
scas
fisubs
das
xchg
insb
jae
dec
out
sbb
pop
and
pop
dec
lcall
inc
jl
repz
cmpsl
repnz
xor
ja
push
pop
and
ret
fdivl
jns
mov
stc
push
and
test
out
lock
dec
xor
ja
or
or
fwait
or
enter
movsl
movsb
nop
dec
int3
adc
sbb
cmc
test
loopne
or
cmc
leave
pop
cld
xchg
cmp
cld
stc
testl
ret
cmp
jg
ret
insl
sbb
repnz
lods
inc
sub
pminsw
jge
movswl
jecxz
fnstcw
cmp
repnz
inc
pop
stc
xrelease
rorb
ljmp
sarb
jg
cld
mov
test
ljmp
outsb
outsl
mov
imul
cld
ja
mov
into
or
xor
xor
imul
sbbl
ror
add
push
divl
test
outsl
aam
stc
repz
sbb
stos
fildl
jl
stos
idivl
lods
cld
cld
inc
nop
in
in
repnz
xchg
jg
jg
jne
cltd
loopne
xchg
lds
mov
adc
out
lahf
inc
jb
ret
push
ret
iret
aas
ds
stc
dec
xchg
inc
enter
roll
push
jp
in
iret
mull
scas
mov
idivl
movsb
push
scas
movsl
cwtl
sub
scas
inc
scas
sub
mov
push
outsl
inc
push
out
lret
xor
outsl
fidivrs
pop
sub
push
ljmp
mov
ds
adc
out
fwait
pop
mov
out
insl
lods
lcall
xor
aaa
cmp
scas
push
outsl
mov
enter
and
inc
in
and
dec
aas
mov
out
rcll
inc
pop
xor
xor
in
int3
inc
in
int3
int
sub
xor
repnz
sub
adc
repz
mov
call
push
xlat
testb
repnz
or
outsl
fiadds
jge
mov
fs
pushf
jmp
fwait
aaa
or
int
xchg
dec
xchg
jb
pop
add
mov
js
rorl
stc
push
pop
flds
or
ja
adc
mov
sub
dec
cwtl
scas
jl
stc
jl
cmpl
lahf
mov
aam
dec
out
dec
xchg
mov
mov
dec
pop
xchg
mov
mov
pop
add
shll
test
aam
aas
sbb
xchg
aas
mov
or
outsl
mov
push
loop
adc
daa
cmp
jb
out
mov
in
stc
or
pop
xchg
and
in
movsl
mov
lds
push
hlt
repz
lahf
fcoms
or
fldenv
out
push
stc
stc
cli
dec
pop
sbb
push
mov
and
ds
cmp
repz
repz
lahf
gs
repz
lret
xchg
inc
outsb
dec
lea
cld
stc
xchg
inc
pop
test
xor
inc
gs
jp
enter
dec
call
aas
push
test
push
mov
jns
mov
mov
xor
nop
stos
add
mov
xor
rorb
inc
jle
roll
inc
into
adc
scas
jns
adc
or
popa
pop
out
fwait
push
adc
cltd
or
jnp
dec
outsl
fidivrs
dec
push
push
mov
data16
sub
popf
jle
out
fwait
aaa
fldt
mov
out
test
jns
andb
xchg
das
hlt
sahf
rcrl
stos
adc
data16
aaa
outsl
xor
adcb
mov
fstpt
mov
pop
gs
insb
fisubs
ret
xorb
movsl
repz
sbb
xchg
xor
inc
out
fists
fidivrs
fwait
push
loopne
dec
sub
test
out
fwait
aaa
ja
js
sub
pop
add
repz
insl
jb
loop
inc
add
int
orl
insb
mov
outsl
mov
repz
adc
cmp
sbb
clc
xchg
out
or
push
pop
daa
in
cmp
xchg
fcomi
out
fwait
mov
fcmovnbe
aad
xchg
sub
pop
fs
jns
jns
fisttpll
movsb
int
cltd
nop
idivl
xchg
fwait
aaa
div
adc
inc
imul
add
cmpl
add
int
aaa
testb
mov
sti
sub
jns
rclb
inc
push
aad
in
je
jbe
fwait
lahf
aaa
outsl
dec
sti
push
std
jecxz
push
jae
jns
out
dec
mov
or
sti
cmp
outsl
fidivrs
xor
push
mov
int
jae
cmpsl
mov
inc
cs
clc
or
stc
pop
mov
mov
mov
iret
aas
aas
xlat
sbb
xchg
sarb
lahf
pop
filds
jle
je
sub
xor
repz
mov
movsb
stc
movsl
xchg
and
fs
mov
sbb
jns
out
movl
ret
fcmove
jmp
movsb
je
inc
inc
daa
sub
cld
stc
repz
inc
sbb
pop
mov
mov
inc
daa
jp
jb
lods
test
aas
inc
push
push
gs
mov
mov
dec
movb
fwait
aaa
outsl
fimuls
out
cmc
ret
cmc
and
fistps
in
int
inc
pusha
cmp
outsb
daa
out
mov
push
sub
rclb
in
inc
cmp
repz
adc
add
out
add
fincstp
mov
hlt
aad
mov
jge
xor
cmp
aaa
cld
pop
xlat
movsl
mov
stc
repz
pop
inc
mov
es
lock
jg
ret
popa
lret
mov
loopne
adc
and
aad
int3
sub
out
fwait
aaa
push
fwait
push
lods
dec
cmp
cli
sbb
xchg
sub
dec
repz
xchg
leave
and
outsl
fidivrs
jl
cmpsl
sbb
mov
sbb
loop
inc
xchg
mov
arpl
mov
sub
mov
pop
mov
fisttps
push
jb
aaa
outsl
fisubrs
scas
outsb
jno
mov
adc
xchg
push
jno
out
jno
jbe
push
or
les
fidivl
xchg
in
and
call
mov
int
jno
pop
rorl
inc
sbb
or
sub
dec
lret
aad
repz
cmpsl
daa
mov
mov
lcall
addr16
lahf
push
arpl
inc
outsl
push
push
mov
repz
jo
inc
sub
adc
cld
mov
lea
test
ljmp
inc
inc
cmp
mov
fnstcw
adc
jg
in
jmp
xor
pop
xor
repz
mov
aam
fcomp
test
ljmp
adc
adc
aas
imul
adc
int
aaa
outsl
sub
stos
out
sub
sbb
xchg
mov
loopne
repz
mov
cli
cs
icebp
lods
pop
mov
sub
jle
call
dec
repz
sbb
mov
dec
jl
jns
js
push
inc
mov
pushf
mov
push
dec
lahf
dec
stos
dec
xor
aaa
outsl
and
inc
inc
mov
lret
lahf
jg
nop
adc
das
cmpsl
pop
xchg
outsb
out
add
out
test
or
fisubs
and
nop
push
sbb
xchg
cmp
outsl
push
or
inc
sarl
repz
and
out
int
out
hlt
mov
sbb
outsb
fidivrs
add
xor
int
xorb
out
cmp
test
repnz
in
pop
pop
cmc
adc
xchg
insl
scas
jg
cld
stc
mov
test
xchg
adc
jp
out
lahf
aas
mov
stos
fldenv
repnz
jle
stc
stc
repz
insl
add
insb
add
jns
push
sub
lahf
data16
xor
dec
adc
aaa
outsl
ficoms
loopne
mov
inc
mov
out
repnz
fwait
cmp
and
sbb
pop
insb
xor
adc
cmp
cmpsb
cmp
push
push
push
dec
hlt
dec
iret
lahf
aas
decl
xorb
je
mov
out
insb
jbe
shl
shrl
fwait
aaa
outsl
fiadds
mov
jecxz
ficoml
sti
mov
int
lock
pop
mov
mov
pop
add
mov
out
lods
fnstenv
inc
int
fnstcw
mov
lds
lret
or
sbb
adc
scas
aas
jl
aad
pop
dec
push
sti
ja
addr16
out
lahf
stc
add
adc
leave
shll
mov
mov
stc
xchg
jecxz
cli
cld
xor
xor
jo
shl
fsubr
outsl
sbb
aaa
outsl
ficoms
xchg
out
sbb
das
sbb
test
jmp
xor
fisubs
cld
cmc
xchg
int
shl
dec
test
pop
ret
add
mov
fwait
aaa
inc
pop
pop
mov
ja
pop
push
int
xchg
pop
sti
xchg
jne
les
sbb
jne
jo
andl
mov
cmp
stos
sahf
cwtl
sbb
addb
pop
mov
mov
mov
frstor
je
pusha
nop
and
inc
sbb
aas
out
push
popa
cmpsl
jg
jns
out
popf
mov
mov
testl
mul
sbb
popl
cltd
out
lds
push
shll
repz
sub
inc
sti
mov
push
int
aaa
outsl
mov
pop
fwait
test
mov
dec
mov
pop
mov
sub
mov
int3
fwait
aaa
outsl
fmulp
es
mov
xchg
jae
cmp
sbb
dec
jns
out
fcomps
pop
mov
subl
outsb
inc
outsb
fidivrs
leave
or
in
mov
aaa
adc
jl
nop
cmpsb
daa
push
rsqrtps
out
jae
sbb
adc
xchg
out
out
fiadds
cmp
das
int3
movsl
push
inc
xor
int
aaa
pop
mov
dec
jns
sbb
lock
cmpsl
inc
out
addr16
push
nop
xchg
ljmp
mov
fmull
aas
wrmsr
shll
out
mov
fld
push
out
inc
fidivrs
jnp
repz
ja
lahf
xchg
push
jns
out
ja
pop
aam
pop
mov
call
fnstcw
cmp
sub
mov
jne
inc
inc
cmpsb
shrl
xchg
outsb
fidivrs
pushf
andl
jge
loopne
pop
add
inc
inc
scas
bound
fidivrs
lea
add
push
inc
lahf
pop
popl
and
fnstsw
lock
arpl
sbb
lret
call
enter
or
or
jae
ja
mov
lock
fdivrl
sbb
addr16
xor
fimuls
and
xor
fsubs
shr
sbb
negb
xor
paddq
add
negl
fnstcw
scas
mov
lahf
sbb
pop
lahf
or
call
repz
lahf
gs
push
add
cmc
sbb
jle
les
ds
repz
sub
aam
xor
pop
clc
add
inc
xor
mov
int
aaa
out
xlat
imul
jge
or
jp
mov
repz
mov
cmc
dec
scas
mov
divb
fidivrs
mov
not
jecxz
jo
mov
add
or
pop
dec
push
inc
cmp
mov
mov
dec
testl
sbb
dec
decl
nop
stos
add
push
fs
xchg
and
sbb
pop
inc
lret
dec
push
scas
jb
cmovs
dec
inc
jb
or
dec
pop
lcall
cltd
inc
scas
bound
push
xchg
sbb
lods
push
out
aas
jnp
outsl
pop
vandnps
dec
adc
dec
testl
dec
dec
jo
lret
push
dec
xlat
dec
aad
pop
inc
scas
dec
ja
jb
lret
dec
lahf
dec
pop
rcll
dec
ja
outsl
mov
jo
dec
addr16
ret
scas
push
xchg
dec
sub
xlat
pop
scas
pop
in
jg
iret
daa
push
int3
push
nop
stos
dec
filds
adc
mov
dec
xchg
dec
pop
pop
dec
pop
dec
cmc
or
mov
lds
dec
pop
jb
rcl
pop
dec
push
and
xor
push
int3
dec
mov
lds
dec
outsl
ret
push
dec
out
dec
xor
inc
out
std
lret
int
xlat
lret
push
and
dec
mov
xlat
pop
inc
jo
dec
pop
dec
inc
ret
pop
dec
push
rclb
dec
pop
dec
push
movsb
pop
lds
fwait
enter
fiadds
and
dec
dec
aad
pop
dec
dec
dec
push
lods
pop
inc
pop
dec
pop
vandnps
dec
das
dec
cmpsl
rclb
dec
xlat
dec
aad
pop
lds
cmp
inc
scas
dec
mov
ja
or
paddsb
dec
mov
dec
inc
dec
aas
or
dec
daa
loopne
xchg
pop
mov
dec
pop
mov
idivl
aas
dec
stos
dec
mov
dec
sub
sub
scas
dec
stos
pop
das
dec
punpckldq
in
xor
mov
stos
cwtl
stos
dec
pop
dec
inc
dec
add
mov
loope
das
dec
das
dec
stos
or
dec
mov
addr16
add
pop
inc
lret
dec
enter
dec
scas
dec
push
adc
dec
jg
add
add
aaa
daa
jo
mov
dec
scas
jo
and
out
dec
push
xor
dec
addr16
mov
jne
dec
pop
xor
movl
inc
out
scas
js
push
dec
addr16
vandnps
dec
push
ret
jg
pop
sub
dec
das
add
dec
iret
scas
sub
dec
sub
ljmp
mov
dec
jg
pop
mov
lahf
dec
stos
cwtl
stos
or
mov
jmp
sub
ljmp
sbb
dec
scas
loope
xchg
push
scas
and
mov
dec
mov
subb
scas
bound
xchg
insl
dec
cmovs
xchg
stos
pop
pop
dec
aas
add
dec
pop
mov
out
sub
scas
bound
dec
jg
mov
dec
scas
xchg
dec
aaa
mov
lahf
dec
mov
xchg
dec
xchg
mov
pop
dec
sub
scas
xlat
dec
pop
mov
dec
pop
mov
dec
stos
dec
scas
and
xchg
or
sub
mov
pop
dec
mov
fists
and
sub
ljmp
mov
dec
sub
xchg
mov
sub
dec
cmovs
subl
mov
dec
pop
dec
sub
pop
loopne
out
pop
dec
xchg
ja
scas
dec
out
adc
stos
or
mov
loope
jl
push
mov
jecxz
dec
stos
or
dec
and
sub
sub
dec
mov
ljmp
add
dec
scas
push
in
dec
xlat
dec
sub
sub
dec
xchg
bound
dec
pop
push
scas
bound
scas
and
sub
dec
mov
sub
dec
das
xchg
dec
pop
mov
dec
dec
mov
lahf
bound
dec
dec
xchg
stos
sbb
mov
pop
dec
jo
flds
mov
lds
dec
inc
xor
dec
jg
aas
pop
scas
push
lahf
dec
pop
in
xchg
stos
dec
cmpsl
dec
add
push
aam
mov
push
dec
daa
dec
mov
pop
or
dec
iret
mov
lahf
dec
scas
bound
dec
mov
sub
dec
pop
xchg
stos
adc
pop
scas
push
cmpsl
dec
mov
push
xchg
sbb
dec
adc
dec
scas
lds
dec
push
dec
add
pop
dec
pop
dec
outsl
pop
lds
dec
push
dec
cmp
dec
pop
sub
adc
dec
xlat
shrb
bound
dec
inc
in
add
lret
dec
test
sub
pop
dec
ja
cmpsl
push
xchg
dec
out
dec
adc
dec
jo
inc
dec
loopne
and
sub
and
push
loopne
jg
xlat
xchg
stos
or
adc
mov
xchg
bound
dec
fnstsw
sub
scas
dec
out
dec
mov
dec
aas
dec
scas
and
dec
sub
sub
das
dec
daa
inc
scas
in
outsl
dec
scas
dec
loopne
daa
dec
sub
cmovs
loopne
inc
scas
dec
pop
dec
ljmp
dec
scas
and
dec
inc
dec
cmpsl
loope
xchg
stos
dec
cmpsl
dec
and
mov
dec
push
scas
and
push
pop
dec
pop
loope
push
sub
scas
dec
dec
dec
stos
dec
scas
push
mov
mov
test
dec
ja
scas
and
or
lcall
xchg
stos
dec
daa
dec
scas
and
dec
inc
in
inc
xchg
dec
sbb
dec
aaa
xchg
dec
xchg
stos
dec
push
int3
push
sub
dec
pop
dec
subps
push
dec
scas
dec
scas
sbb
xchg
daa
xor
push
decl
stos
addl
mov
fists
pop
dec
xchg
aaa
dec
sub
mov
dec
pop
dec
pop
mov
out
stos
sbb
dec
mov
sub
scas
and
fs
in
dec
pop
jo
jb
ret
aad
outsl
dec
xor
aas
adc
lahf
dec
lahf
int
lds
inc
dec
lahf
lret
pop
dec
dec
dec
push
mov
lds
dec
decl
rclb
dec
scas
enter
dec
dec
dec
and
dec
aas
sbb
dec
jg
push
xchg
pop
dec
inc
dec
pop
jb
add
pop
dec
push
xor
pop
dec
cmpsl
dec
vandnps
dec
mov
pop
lds
dec
inc
jo
ret
aad
jg
push
mov
dec
pop
daa
jo
rorl
cmpsl
rcll
dec
decl
push
xchg
jb
dec
inc
dec
adc
dec
xchg
out
pop
jo
xor
aaa
movsb
or
jg
stc
stc
repz
or
nop
and
cmp
sub
enter
mov
popf
test
subb
add
add
ljmp
add
add
je
icebp
lds
adc
inc
adc
inc
fs
jp
addb
pop
sbb
mov
or
or
inc
pshufw
or
fldl
add
inc
ljmp
imul
add
mov
jbe
rcrb
or
sub
jl
orl
repnz
rclb
push
mov
and
into
add
insl
inc
ljmp
inc
sbb
and
adc
push
sarb
inc
add
sub
fdivs
sbb
out
and
push
inc
add
push
sbb
loopne
notb
insl
add
sbb
push
lock
add
jg
repnz
repnz
xchg
sub
testl
adc
add
or
out
mov
out
pop
inc
pop
mov
leave
sub
jo
inc
insb
mov
or
test
jno
stos
mov
mov
xor
dec
inc
je
push
mov
sub
inc
jg
leave
push
mov
or
mov
and
inc
adc
jge
adc
mov
test
push
cmp
mov
jl
inc
pop
inc
int3
rcrl
movb
shrl
ret
inc
push
xchg
movsb
punpckhdq
and
jae
push
lock
mov
call
lret
cmp
xor
sub
add
pop
push
add
push
xchg
mov
addb
inc
adc
jge
shll
in
mov
and
or
mov
adc
pop
add
repnz
sbb
cmp
add
add
add
insb
sarl
aas
rclb
ret
sub
adc
ret
inc
sbb
sarl
bnd
add
adc
push
inc
cmp
add
add
lds
sti
lock
dec
and
adc
mov
jbe
cmp
and
push
dec
dec
out
adc
or
cmp
call
mov
push
adc
out
push
sub
fildl
pop
sbb
mov
or
push
inc
cs
add
adc
and
js
xchg
mov
into
push
cmp
push
call
jne
jbe
imul
or
mov
fdivrs
stc
push
jnp
and
movb
inc
adc
leave
test
push
adc
adc
jecxz
repnz
adc
fldcw
mov
add
xor
add
adc
add
sahf
cmpb
push
int3
js
or
inc
adc
mov
test
lret
sbb
mov
sub
or
xlat
push
xchg
mov
fcmovb
imul
dec
xor
dec
pop
add
pop
in
adc
sub
cltd
movsl
push
roll
jno
sub
into
sahf
adc
push
jbe
in
negb
aaa
call
sub
and
shlb
stc
push
roll
or
xchg
dec
push
rorb
cmp
andb
push
push
ljmp
clc
xchg
enter
repz
adc
aad
mov
or
push
cld
icebp
or
insl
sbb
orl
sbb
filds
ljmp
cmp
add
ret
in
mov
push
stc
data16
scas
add
clc
imul
mov
add
sub
mov
add
mov
inc
or
roll
inc
mov
mov
lods
xchg
pop
call
push
sub
cs
push
dec
scas
dec
fistl
and
or
mov
js
insl
push
subl
mov
adc
inc
sbb
push
mov
jmp
jl
add
push
inc
pop
push
addr16
ljmp
mov
inc
inc
imul
or
xor
hlt
ljmp
sub
mov
xchg
pop
jne
pop
cs
leave
addl
push
sub
add
mov
data16
xor
add
leave
xchg
ret
mov
sbb
and
add
mov
rcrb
sahf
sub
lret
mov
add
orb
pop
xlat
imul
jge
xor
pop
push
mov
dec
xchg
sbb
rcl
pushaw
cld
xchg
andb
mov
push
mov
cmp
lods
inc
leave
adc
inc
ret
inc
xor
decb
popf
mov
or
or
xchg
push
or
mov
sub
inc
jl
bound
adc
ret
or
data16
adc
xchg
idivb
or
mov
xchg
jle
mov
or
fwait
adc
sbb
ret
pusha
enter
cwtl
add
loope
mov
mov
stos
sbb
jns
mov
and
sbb
mov
cmpb
push
push
out
enter
adc
sub
sbb
rclb
jecxz
test
mov
or
ja
push
test
dec
mov
loope
pop
push
sub
test
push
mov
in
jo
insb
dec
ret
or
push
adc
add
or
mov
jns
sub
xor
inc
jge
push
popf
bound
xchg
bound
jecxz
clc
lret
ljmp
mov
inc
mov
mulb
sub
and
lret
mov
adc
or
sti
mov
or
pusha
fmuls
push
or
test
scas
add
mov
or
outsb
testb
notl
jmp
sbb
sbb
mov
mov
push
sub
mov
or
xchg
mov
jne
mov
add
or
lods
les
mov
stos
push
jp
xor
test
mov
sub
popl
or
mov
dec
or
cmp
test
sbb
aas
push
or
rcll
add
xchg
leave
fdivs
add
pop
andb
and
or
cmp
lret
int3
sbb
popa
test
inc
push
xchg
jb
jecxz
xchg
lea
xor
into
lret
add
mov
mov
mov
inc
test
and
cmp
add
dec
out
test
push
scas
xor
cmp
jne
push
cli
jne
mov
mov
pop
push
xchg
jne
mov
adc
add
int
mov
pushf
enter
xor
or
movsl
lret
lods
mov
or
push
sbb
mov
sahf
pop
cwtl
inc
fimull
loopne
aam
sbb
ss
loopne
sbb
rclb
cmp
pusha
aaa
and
imulb
adc
popf
and
iret
dec
lmsw
je
jle
jmp
fiadds
shlb
mov
xor
mov
inc
inc
add
shl
mov
or
jo
xchg
xchg
aas
andb
push
push
leave
sub
jne
or
and
push
lods
jle
fsubs
lahf
mov
lcall
and
mov
pop
push
sub
push
jmp
data16
imul
test
fildl
and
rorl
pop
cmpb
fnstcw
sbb
rcrb
or
adc
das
mov
push
add
pop
fidivrl
sbb
je,pn
adc
leave
inc
xchg
leave
dec
stos
xchg
push
es
inc
nop
jae
movsl
dec
es
cmc
into
jle
aam
sbb
lock
out
and
fimull
clc
or
or
rcrb
cmp
jmp
sbb
not
and
sbb
in
sbb
stos
inc
lret
ljmp
fmull
scas
sarb
inc
lcall
add
mov
push
sahf
fwait
lcall
call
pop
orb
aam
mov
adc
je
adc
add
sub
push
mov
dec
cmovno
or
fmull
xchg
cmp
insl
lods
pop
and
add
dec
add
insb
xor
xor
sbb
mov
mov
sbb
insl
adc
xor
ret
push
adc
clc
adcb
sub
inc
pop
das
sahf
pop
into
add
mov
jecxz
and
jnp
lahf
orl
mov
and
inc
add
or
loop
add
pop
das
adc
enter
pop
out
test
cmc
cmpsl
shrb
dec
adc
mov
inc
fisttpll
test
inc
inc
rclb
mov
jno
out
scas
das
or
iret
leave
pusha
clc
pop
addr16
mov
adc
lahf
or
mov
mov
add
sub
addl
call
and
js
or
push
dec
out
stos
scas
sbb
inc
or
mov
inc
jnp
out
lahf
or
in
jbe
mov
and
mov
or
js
mov
adc
negl
rcll
cmp
int
inc
pop
or
pop
push
div
or
and
inc
and
cmc
xchg
or
sub
xlat
mov
loopne
int
push
pushf
rclb
sub
das
movsb
or
rcr
xchg
cmp
popa
inc
shrb
ja
xchg
cmc
adc
test
insl
scas
es
jne
adc
add
jb
push
mov
leave
inc
sub
inc
sbb
lea
inc
clc
add
mov
pop
enter
cmp
add
stos
or
roll
inc
cmp
rclb
push
mov
dec
jle
mov
or
xchg
mov
rcrl
inc
call
sbbl
fadd
ret
cwtl
xlat
movb
loope
repz
enter
mov
or
push
add
pop
xor
add
mov
scas
or
mulb
add
push
imul
xorb
ret
sub
xchg
push
adc
xor
cmp
repz
mov
add
leave
aas
adc
push
and
cmp
jne
into
pusha
test
test
mov
inc
aam
mov
or
sub
insl
dec
adc
enter
add
in
pusha
mov
sub
mov
leave
push
jno
mov
fsub
push
add
or
inc
add
daa
xchg
xchg
cmp
rorb
push
jae
rorl
jmp
push
fmul
push
es
cmp
xchg
lods
xorb
adcb
mov
clc
and
adc
jbe
push
sbbb
add
cld
into
divb
add
mov
mov
or
mov
xchg
mov
sub
outsb
pop
jnp
ret
mov
jecxz
daa
mov
push
xor
lcall
dec
pop
add
es
test
sbb
push
shll
test
xchg
sub
push
or
mov
test
adc
and
lret
push
mov
cmp
xchg
hlt
push
cmp
gs
in
inc
subb
dec
pop
sbb
add
push
adc
cmp
push
movsl
xchg
orb
xor
inc
mov
test
insl
sbb
xchg
icebp
es
test
mov
sub
pop
call
push
push
js
sbb
int
pop
jge
inc
push
test
cmp
out
roll
sub
add
adc
adc
and
fwait
stc
adc
jb
dec
mov
push
arpl
push
push
int3
xor
pop
es
adc
imull
sbb
test
stos
sub
or
push
xlat
xor
inc
add
or
ds
int
mov
mov
ss
push
sarl
repz
or
lds
loopne
mov
loop
popa
addb
add
xor
adcb
imul
stc
add
sub
or
or
orl
imul
xchg
into
cli
sub
ds
je
adc
mov
sub
icebp
dec
pop
dec
cmpsb
mov
push
inc
jo
and
cmp
mov
out
sub
jno
mov
ljmp
mov
rcrb
or
push
pslld
test
and
cmp
add
leave
sbb
push
xchg
roll
mov
xchg
adc
inc
add
packuswb
add
push
sub
mov
mov
add
enter
push
rorb
push
mov
imul
adc
into
andb
lea
inc
cmp
mov
loopne
xchg
pop
loope
adc
jl
ss
adc
jb
mov
inc
test
rcll
pop
ja
jl
push
jmp
sub
push
adc
add
imul
xor
scas
ds
xchg
or
and
push
adc
fs
lock
or
xor
mov
insb
and
pop
cltd
add
adc
inc
addl
add
add
hlt
out
repz
adc
push
push
push
push
data16
jo
add
out
add
xchg
cmp
sahf
sub
test
add
jne
fistpl
xor
cmp
dec
mov
stos
add
add
and
daa
dec
inc
push
push
in
icebp
mov
stos
mov
adc
and
push
pop
loope
mov
fstps
xchg
jge
mov
or
mulb
inc
das
jo
enter
mov
push
dec
xchg
push
pop
notb
sbb
out
rol
inc
int3
mov
mov
and
xor
cmp
ret
addr16
sbb
or
rorl
xlat
pop
and
add
add
adc
inc
ss
orl
mov
and
mov
fmuls
lea
cwtl
rcl
sbb
leave
rorl
mov
mov
xchg
or
sbb
xchg
adc
sub
cmp
shl
adc
cmp
sbb
push
cwtl
or
inc
out
sbb
mov
loopne
rcl
outsb
pusha
add
mov
test
xchg
cmpsb
ljmp
push
cs
push
jmp
push
ret
pop
push
sub
mul
xchg
mov
dec
rolb
adc
out
maskmovq
xchg
mov
add
sbb
xor
pop
adc
adc
mov
int
das
push
or
and
data16
inc
les
mov
pusha
js
sub
sub
sub
lock
and
and
rcll
sub
sbb
mov
test
int3
push
addr16
roll
pop
mov
gs
mov
inc
sbb
mov
dec
xor
and
xchg
testb
mov
scas
ljmp
pop
mov
psubsb
jl
push
sbb
xor
and
add
sbb
clc
or
fwait
mov
add
mov
add
adc
fcoms
es
adc
loop
leave
add
and
repz
fisubl
stos
pop
fdivl
push
add
jge
xchg
push
inc
dec
mov
or
or
in
adc
push
or
rolb
mov
sub
jno
rcl
sub
inc
stos
inc
bound
ljmp
aad
test
push
pop
lock
movb
add
cltd
lcall
inc
imul
inc
mov
sub
jo
jae
mov
cli
adc
inc
sbb
sub
inc
push
pop
push
mov
or
push
and
pop
or
mov
ret
mov
je
jns
or
gs
adc
xor
jne
dec
sbb
mov
push
xor
mov
xor
mov
shlb
lock
and
or
adc
mov
jp
orb
mov
cmc
pusha
jae
sub
jmp
mov
sbb
rolb
bound
rcll
mov
nop
push
cmp
das
mov
sahf
daa
adc
push
dec
scas
test
adc
es
sub
mov
aas
mov
add
push
cmp
mov
notl
or
shrl
divb
push
loopne
cmp
adc
push
and
or
ret
adc
mov
xor
adc
sbb
adc
sub
mov
or
xchg
mov
inc
adc
adc
je
mov
rol
add
scas
push
and
sbbl
sub
lcall
cmp
push
rolb
push
cwtl
or
inc
push
cmp
leave
push
add
sub
rorb
mov
rorb
js
add
push
push
insb
and
iret
lret
sub
sbb
fmull
cmp
sbb
or
mov
jno
mov
aad
lods
lods
push
xor
add
add
mov
cwtl
add
xchg
jl
push
xchg
pop
icebp
sub
xchg
mov
sbb
mov
push
lcall
cmpsb
lcall
inc
cmp
popl
push
popa
sbb
insl
pop
les
mov
sub
loope
cltd
mov
jmp
mov
sub
mov
xor
outsb
jecxz
dec
aas
test
mov
jo
out
sbb
out
leave
pop
and
popa
sbb
sbb
push
or
pushf
and
or
pop
add
push
scas
scas
popa
pop
mov
sbb
inc
xor
je
cmp
in
add
inc
push
lock
rcrb
sub
mov
push
ja
shll
xor
mov
jmp
mov
jb
bound
pop
mov
aaa
jnp
xchg
push
push
add
ud2
push
sub
cwtl
shl
inc
cld
and
cmp
loop
das
xor
pop
cmp
dec
inc
je
add
lock
ds
out
sub
inc
movsb
or
and
lods
inc
adc
jmp
sbb
fwait
dec
shlb
add
aam
and
jge
leave
jl
lcall
sbb
xchg
dec
xchg
dec
pop
hlt
adc
or
addl
fnsave
je
imul
shrl
rcl
pusha
add
xor
loop
or
sbb
lds
pushf
adc
or
push
mov
cwtl
pop
adc
mov
mov
aad
add
mov
xor
push
enter
push
cmpsl
andb
add
sub
addr16
sub
stos
add
and
add
push
mov
inc
mov
push
push
mov
stos
pop
push
xor
dec
push
mov
sub
js
je
lret
mov
cmpsl
push
rcl
add
jo
adc
pop
adc
sub
mov
repz
cld
push
ja
cmp
jne
adc
sbb
test
shrb
dec
das
sbb
pop
sub
push
mov
push
xchg
test
stos
fisttpll
shrb
loop
jg
scas
sub
inc
mov
inc
pop
push
sub
and
das
mov
insb
roll
sub
xchg
sbbb
sarl
sbb
scas
or
or
push
xor
mov
add
sahf
mov
ret
inc
adc
xlat
std
push
push
inc
mov
pavgb
or
xchg
int
adc
xchg
into
adc
mov
psrad
adc
cmp
push
mov
adc
test
loopne
mov
addr16
lret
call
rorb
jo
jge
into
scas
add
push
mov
test
lret
and
inc
dec
mov
xor
scas
clc
aam
mov
adc
inc
adc
mov
cmp
xor
aam
and
sbb
stc
jae
xchg
andl
cli
cmp
adc
orl
push
push
jecxz
or
js
dec
imul
push
pop
mov
addb
sub
cwtl
inc
sahf
ret
xor
lcall
push
mov
xor
jmp
test
or
mov
sbb
mov
sbb
lret
push
jo
sbb
ljmp
xlat
gs
pusha
ret
push
inc
push
roll
cmp
leave
mov
jmp
les
int3
nop
push
fcomp
mov
mov
decb
test
push
lret
pop
mov
loopne
adc
push
xor
out
call
mov
xor
les
push
cmp
cmp
add
imul
xchg
cmp
push
mov
mov
and
adc
ret
scas
mov
push
xor
ljmp
shrb
scas
xor
pusha
cmova
aam
pop
dec
sbb
add
and
xorl
inc
daa
sub
add
je
lcall
pop
mov
negb
pop
and
sarb
adc
icebp
inc
jge
jae
std
and
mov
repnz
inc
cmp
sbb
or
mov
or
cltd
loope
cs
or
pop
sbb
sbb
pop
and
test
into
mov
bound
pop
push
xchg
arpl
cli
and
mov
daa
jl
fsubl
stos
test
cmc
stos
push
shrl
jb
clc
mov
cmpsl
jmp
inc
push
cmp
and
in
dec
xor
mov
subb
popa
shl
pop
sub
push
mov
push
cmp
lret
jmp
stos
push
adc
and
or
roll
sbb
std
push
push
pop
mov
and
les
cmp
lods
mov
push
pop
ror
icebp
push
or
js
or
jb
out
dec
aas
jmp
lock
mulb
jecxz
sbb
mov
or
adc
xor
dec
icebp
gs
pushf
jno
scas
sub
xor
lahf
push
sub
das
push
dec
or
adc
clc
pop
lock
add
test
xor
cs
stc
inc
mov
sbb
mov
mov
xor
add
add
pusha
adc
es
xchg
push
inc
xor
inc
push
jl
push
mov
out
adc
dec
lea
pop
pop
xlat
popa
pop
inc
xor
jl
rcrb
pop
in
cmp
test
ljmp
rclb
push
xor
or
mov
push
sbb
decl
outsb
cmc
push
or
fidivrl
pop
push
arpl
adc
xchg
cltd
test
aad
je
sbbb
stos
jle,pt
mov
adc
out
mov
shlb
rclb
arpl
cld
shl
inc
shlb
mov
call
inc
mov
push
or
cwtl
jecxz
mov
jecxz
nop
sbb
xchg
sub
inc
mov
ret
int
xchg
xchg
mov
mov
pop
push
fs
and
xor
jg
pop
mov
xor
mov
dec
mov
aam
flds
sub
push
arpl
pop
or
adc
push
push
mov
add
sub
jmp
rcll
mov
push
jno
mov
inc
int
and
out
clc
bound
and
pop
pop
jecxz
inc
cs
mov
test
cwtl
adc
out
cmp
xor
ss
inc
push
daa
push
lahf
pop
cltd
clc
and
xorl
add
push
add
fidivs
je
icebp
aas
sbbl
sbb
fldcw
sub
xchg
jns
sarb
leave
les
push
addr16
sub
scas
test
stc
and
aad
or
test
outsb
test
cmp
mov
test
jecxz
push
ret
sub
movsb
imul
sub
inc
popa
test
in
sub
stc
push
jo
mov
inc
fsts
jle
test
jo
adc
add
push
aas
fcomi
sub
loope
rol
mov
aaa
int
sub
ret
mov
mov
add
jecxz
lds
loopne
orb
add
push
push
lcall
sbbl
sbb
inc
cmp
adc
mov
cltd
notb
jmp
inc
xchg
mov
add
pop
or
sub
adc
lret
test
push
or
mov
inc
sbb
add
lods
cmpsb
rolb
pop
adc
ljmp
sbb
test
test
int
popa
hlt
jge
call
jmp
pop
ss
pop
dec
rclb
and
cmpl
ss
inc
sbb
out
or
inc
pushf
stos
cmp
pop
push
andb
fdivl
lods
or
adc
xchg
rcl
push
arpl
imull
mov
sbb
push
pop
cmpb
stos
dec
pop
inc
shl
pop
ficomps
mov
cltd
inc
sbb
dec
in
loope
inc
popa
sub
mov
into
aad
das
cmp
push
push
dec
rol
ljmp
push
sub
mov
add
popa
sbb
out
out
push
push
inc
out
stos
sbb
dec
or
adc
mov
and
sub
lock
push
loope
add
push
in
andb
sub
push
push
rorb
jmp
push
ret
push
popf
mov
pop
pop
roll
je
cmpsb
mov
pop
sbb
and
mov
clc
or
js
loopne
push
cmp
sahf
mov
or
sbb
adc
pop
inc
sbb
push
aas
pop
or
imul
add
push
dec
in
test
sub
dec
sbb
sub
or
cmp
inc
iret
add
jmp
xchg
adc
adc
in
stos
test
inc
repnz
or
loopne
or
es
pop
mov
inc
or
add
call
or
mov
and
hlt
test
adc
sub
jbe
and
je
sbb
aam
fisttps
xorb
mov
dec
or
add
into
sarl
mov
push
sub
or
pop
loope
mov
sub
rorb
addb
inc
roll
mov
mov
jne
mov
mov
and
jno
or
or
pop
cmpsl
adc
pop
adc
orl
pop
mov
xor
or
xor
testb
sub
add
cmpsl
sbb
ljmp
roll
popf
jp
jo
dec
lcall
mov
rol
adc
pop
fistps
ret
shrl
lea
mov
mov
adc
xchg
mov
jne
leave
sub
or
pop
repnz
xchg
rcrl
in
rorl
addl
pop
xchg
dec
adc
stos
or
sub
mov
scas
rorb
in
addr16
enter
or
or
mov
stc
dec
rcrl
roll
pop
dec
les
xchg
mov
jp
or
cmpsb
mov
add
mov
add
sub
add
imulb
pop
mov
xchg
xor
adc
or
stos
pop
add
fisttps
mov
fildll
add
sbb
iret
add
fdivp
add
test
inc
imul
push
inc
mov
sbb
test
ret
lcall
dec
inc
cmp
sarb
lahf
adc
aad
mov
ffree
popa
adc
into
in
add
or
gs
add
scas
push
lock
nop
or
cmpsb
lret
mov
std
xchg
mov
mov
mov
sub
xchg
imul
stc
add
add
mov
dec
jno
aam
push
roll
ror
pop
push
cmp
jo
pop
cmpsl
sahf
sub
aas
mov
mov
lods
mov
adc
dec
push
xor
jecxz
push
sbb
int3
rorl
xchg
xchg
clc
pop
push
pop
push
pop
and
push
inc
jae
testb
lret
nop
or
mov
lods
call
sbb
pop
adc
xchg
inc
inc
insb
and
test
loopne
cmp
cmp
dec
test
popa
mov
sub
push
cltd
in
movsl
shll
jne
stos
gs
sub
jae
add
dec
push
fisttpll
sbb
pop
mov
sbb
pop
stos
dec
jge
push
and
test
sbb
mov
jge
rcrl
push
cwtl
sbb
xchg
icebp
andl
leave
aam
push
inc
sbb
leave
inc
mov
test
sub
mov
or
mov
pop
sub
gs
or
test
xchg
mov
jge
dec
or
stc
push
or
icebp
push
inc
rcrb
call
dec
inc
aam
clc
or
cmp
add
lock
inc
sbb
inc
push
icebp
sarl
lret
jmp
daa
pusha
test
inc
or
or
out
mov
and
mov
andl
mov
jne
lods
push
test
or
xor
movsb
addb
xchg
test
fwait
xchg
pop
clc
stos
sbb
push
or
lret
sti
fnstcw
ret
xor
fcom
lds
sarb
inc
lret
pop
adc
add
adc
sbb
xchg
cmpsb
stos
data16
push
dec
aam
mov
imul
mov
faddl
xchg
and
cmpsl
sub
test
rcrb
cli
pop
mov
inc
ret
adc
xchg
pop
inc
imul
sub
aam
fistl
addb
js
repnz
jp
push
cwtl
add
push
xchg
data16
or
inc
subb
ret
push
sub
arpl
cli
push
cmp
inc
add
and
xor
sbb
stc
out
rcll
enter
adc
sbb
add
lock
out
mov
add
out
adc
rcrb
inc
mov
mov
add
into
imul
or
inc
sbb
dec
mov
imulb
add
sub
or
push
and
mov
es
decb
out
pusha
rorb
es
cmpl
jo
insb
sbb
or
insb
add
sti
sbb
cwtl
adc
xchg
mov
test
cmp
xor
and
push
insl
inc
push
jo
sbb
shrb
shlb
sub
icebp
ds
sub
adc
inc
mov
das
ljmp
insb
enter
ret
push
inc
adc
adc
or
mov
xor
movsb
fcoms
and
mov
pusha
sub
test
inc
test
push
sub
xchg
xadd
shlb
push
jb
test
jp
xchg
dec
sbb
push
shll
mov
sbb
pop
testb
sbb
jb
jb
sub
cmp
sarb
push
aam
jo
push
inc
mov
mov
fs
call
sbb
adc
out
push
rorl
or
sub
subb
cmpsl
lret
add
adc
cmp
add
and
lret
sub
push
sbb
sub
push
ficoml
jne
sbb
cmp
add
push
fbld
push
mov
enter
out
stos
xor
pushf
clc
sbb
loop
add
cli
sbb
call
lds
add
mov
xor
inc
cmp
mov
stos
int
adc
movsb
xchg
stos
push
ret
stos
add
icebp
test
sbb
and
sbbb
add
add
mov
add
sbb
xor
lret
sub
adc
push
xchg
sarl
adc
or
movsl
notb
xor
popf
sub
dec
adc
call
int3
jb
adc
pop
and
add
notb
lock
or
hlt
rolb
xchg
sbb
jmp
mov
lret
add
add
pusha
shr
add
inc
jmp
sbb
or
or
mov
fildl
mov
sub
lahf
push
ret
cmp
adc
mov
and
or
aam
or
cmp
push
sbb
adc
repz
xchg
stc
cltd
sbb
popf
loopne
mov
sbb
frstor
lods
sub
add
or
loop
mov
lods
inc
out
and
adc
stc
push
inc
test
stos
cmpsb
xor
aas
nop
mov
mov
dec
cmpb
xchg
mov
cmp
jl
popf
pop
js
pushw
dec
xlat
jmp
jo
les
dec
loopne
and
rcl
mov
ljmp
mov
add
shll
sbb
sbbl
pop
rorb
xchg
ss
sub
ljmp
dec
cmp
sub
jl
push
xchg
add
adc
xor
sub
popf
xor
adcb
adc
pop
push
nop
pop
push
adc
or
add
out
shrb
push
and
adc
test
xchg
mov
xchg
cmpsb
push
inc
mov
pop
push
mov
push
or
inc
mov
or
jge
clts
orl
int
jae
shlb
jmp
push
mov
or
sbb
cmp
mov
rcll
subl
addb
cmpsl
add
adc
mov
mov
sub
jnp
inc
cmpsl
stos
push
sub
xchg
or
or
addr16
in
pop
jp
push
test
xchg
rol
adc
sbb
or
jns
push
ds
les
maskmovq
testl
ja
and
jb
xchg
sub
adcl
leave
sbbl
out
or
add
cs
sbb
testl
cwtl
notb
les
negb
xor
shl
or
ret
outsb
ret
pop
add
add
aaa
xor
lods
xor
bt
xor
sub
or
pop
pop
xchg
add
lock
adc
add
inc
lock
or
mov
xlat
ret
push
aad
stc
lret
lock
adc
push
pop
arpl
leave
and
push
mov
push
mov
rclb
mov
push
rolb
ret
lcall
or
rol
pushf
subb
push
jne
adc
sbb
ficoms
sarl
enter
in
dec
inc
les
pop
adc
lea
xor
or
int3
mov
cltd
or
jae
insl
test
inc
xor
or
adcl
repnz
imul
xchg
jo
orb
mov
fwait
or
inc
mov
xchg
sbbb
mov
xor
icebp
dec
mov
test
lods
and
out
or
call
adc
cmpsl
mov
shll
push
stos
pop
inc
jp
or
test
std
mov
andl
mov
call
dec
sub
mov
sbb
xor
mov
add
popf
add
mov
pop
movsl
mov
add
mov
dec
add
push
rorb
in
mov
adc
mov
pop
push
negl
pop
cmp
or
xor
dec
sbb
movsb
or
push
xor
ljmp
push
push
lret
sbb
or
xchg
cmp
mov
mov
inc
verr
push
sub
add
sar
add
dec
add
stos
popa
add
scas
jnp
inc
lods
push
fnsave
sbb
add
js
mov
pusha
pop
push
push
or
dec
adc
inc
lods
xor
and
push
in
lcall
call
sub
mov
int
push
xor
mov
and
rolb
xor
cmp
adc
stos
stos
push
cmp
and
mov
push
push
adc
mov
popa
stc
test
cld
stos
push
and
cmp
cmp
mov
mov
leave
jge
push
mov
ss
popa
add
loopne
jge
xchg
shlb
rcll
or
les
dec
faddp
inc
cltd
sar
loop
jl
jb
pop
aam
jmp
add
ret
or
mov
shrb
mov
daa
loopne
pop
in
clc
pop
dec
pusha
sbbb
push
push
xchg
dec
aam
lock
ljmp
inc
sar
enter
ror
jnp
rcr
sub
add
adc
in
mov
or
lcall
or
es
lock
xchg
pop
dec
sbb
mov
cmp
data16
push
inc
shrb
mov
push
getsec
push
xlat
shlb
lahf
movsb
add
inc
add
orb
loope
and
sub
in
ljmp
push
js
stos
and
push
cmpsb
call
mov
rcll
cmp
enter
ljmp
or
subb
lods
fcmovbe
pop
lds
gs
fsubrl
adc
add
lcall
and
cli
call
es
and
mov
add
add
es
test
stos
test
lds
add
shll
sbb
stos
mov
gs
orb
sub
scas
pop
sbb
data16
dec
cmp
sbb
dec
gs
in
dec
inc
orl
push
xchg
dec
in
push
mov
add
push
aam
sbb
cwtl
mull
adc
inc
or
test
sub
scas
clc
shl
cmp
jb
push
sub
inc
xchg
test
clc
dec
xchg
push
mov
sub
xchg
shll
inc
push
sbb
xor
das
mov
mov
jecxz
les
test
dec
cmp
inc
xchg
in
xchg
push
pop
adc
jmp
ficomps
pop
xchg
jnp
sbb
cmp
jo
dec
inc
int
dec
test
or
xchg
and
fldl
cwtl
or
mov
or
ret
sub
loope
sahf
and
bswap
orl
add
stos
push
cmpsb
or
mov
inc
inc
add
pop
rolb
fs
mov
addb
or
xchg
or
or
loop
push
and
dec
dec
cmp
or
pusha
sub
std
lahf
leave
push
jno
outsb
and
adc
adc
and
mov
dec
adc
inc
lock
xor
lock
adc
call
adc
add
mov
push
mov
shll
roll
movsb
pop
into
imul
sub
leave
cmpsl
push
xchg
or
mov
or
stos
sbb
pop
scas
jo
pop
xchg
sbbl
mov
pop
xor
aad
push
lods
enter
jnp
call
mov
lds
add
loop
orl
dec
and
pop
mov
add
push
bswap
jbe
inc
cvtps2pd
mov
push
ret
rcll
mov
int
mov
rorl
inc
jmp
push
push
add
jo
and
mov
ficomps
push
push
mov
call
insl
push
js
pop
xor
mov
sub
jnp
fadd
push
mov
shrb
jecxz
or
dec
mov
push
roll
cmp
rolb
in
push
inc
cmp
inc
in
enter
pushf
imul
mov
cmp
pop
stc
add
push
sub
mov
adc
lds
add
jb
idivb
out
mov
or
je
pop
xchg
movsl
pop
lock
push
pop
and
adc
ljmp
mov
incl
mov
data16
add
imul
sbb
ret
roll
cmpsb
lcall
inc
add
or
mov
push
dec
scas
movb
pop
repnz
push
sub
inc
ret
mov
fsts
rolb
repz
shrl
push
cmpsl
rolb
jb
fucomi
push
push
cltd
rolb
sbb
sub
aam
std
and
inc
lock
push
push
push
push
leave
scas
sbb
inc
add
hlt
jl
push
cli
mov
adc
lret
sbb
add
inc
mov
or
push
dec
push
pop
add
xor
push
dec
inc
movsl
test
cmp
xor
loop
jo
and
adc
shrb
mov
icebp
dec
push
jo
ret
lret
push
in
sarb
call
loopne
in
rolb
jbe
or
fisttpll
xchg
or
andl
enter
fcom
pop
sub
popl
sub
xor
or
add
psubsb
push
and
sub
adc
testb
push
inc
mov
sub
outsb
add
shlb
sub
adc
in
rcl
push
xor
and
andl
mov
insl
pop
sbb
and
mov
mov
inc
push
les
mov
mov
xor
loopne
push
lods
bnd
dec
or
or
lret
pop
lods
ret
popf
dec
inc
bound
sarl
popl
and
nop
repnz
enter
push
jmp
sbb
into
sbb
lods
mov
sub
add
lock
outsl
xchg
and
push
pop
sbb
and
or
jae
dec
and
es
lds
or
inc
mov
addr16
adc
push
xor
adc
rclb
jle
push
enter
push
push
mov
xchg
neg
loopne
aam
dec
pushf
inc
cmp
push
lds
lods
movb
lods
fs
dec
rcll
icebp
cwtl
add
push
es
pop
add
fiadds
sub
push
add
xchg
and
fucomip
sbb
push
loope
sub
test
or
push
ret
mov
mov
mov
push
mov
test
xor
sub
sub
ret
cmp
sbb
popa
icebp
xchg
mov
jbe
loop
cwtl
mov
in
mov
adc
pop
mov
call
pop
loopne
mov
and
add
outsl
pop
pop
xor
mov
cwtl
mov
repnz
ljmp
add
push
or
push
cltd
or
js
cmpb
or
les
scas
adc
in
lahf
js
push
in
inc
push
adc
jp,pt
les
or
orl
jb
push
sub
xchg
dec
sbb
xchg
jp
popa
lret
lcall
and
cmp
sub
push
shrb
add
mov
lock
xchg
and
mov
push
test
sub
push
xor
inc
ja
hlt
mov
and
rclb
jnp
cmp
dec
adc
out
inc
dec
xor
pop
popa
mov
es
and
cwtl
lods
push
fnstcw
mov
daa
push
and
add
or
lea
and
xchg
jb
mov
adc
dec
fisubrl
je
jb
adc
dec
add
shrl
call
mov
stos
adc
mov
enter
and
dec
les
dec
mov
je
mov
add
cltd
add
xchg
add
fcom
ljmp
push
jp
lret
dec
push
and
inc
push
push
inc
movb
xlat
xlat
shrl
pop
or
je
pop
push
sbb
push
sbb
imul
add
and
adc
loopne
sbb
mov
or
rclb
jmp
or
adc
dec
rcll
pushf
cmp
ljmp
ja
or
aad
or
rorl
pop
stos
pusha
je
loopne
dec
movsl
je
arpl
inc
or
inc
pop
jns
push
adc
shl
enter
inc
push
mov
loop
push
adc
rcrb
je
cmp
inc
or
stc
enter
adcl
jb
les
shrb
sub
push
cs
add
fs
add
mov
push
sbb
mov
rclb
jno
lods
sbb
fcmovb
inc
push
cmp
push
and
or
or
sbb
mov
dec
mov
mov
pop
mov
sbb
push
pop
xchg
push
jmp
add
or
pop
and
pop
shrb
test
cmpl
mov
xorb
incl
pop
mov
xor
test
dec
xor
fidivl
add
xor
jo
xlat
dec
xor
mov
jne
cmp
insb
pusha
bound
lea
push
rcrl
outsl
sbb
outsl
adc
jg
push
test
adc
xchg
add
xchg
shrl
fsub
int3
jecxz
adc
push
shrl
jge
or
mov
call
fadds
clc
inc
mov
loopne
push
cs
movsb
pop
and
nop
stos
or
shrl
jecxz
pop
inc
xor
jecxz
cmp
sbb
mov
test
xchg
push
push
lret
mov
add
iret
ror
idivl
inc
stos
nop
fs
clc
or
or
cmp
sub
xorb
and
sbb
mov
pmaxub
xor
mov
into
add
ret
add
and
xor
ljmp
stos
es
pop
dec
add
adc
dec
xlat
inc
les
inc
jae
lcall
jnp
mov
push
cmp
rcrb
xor
xor
popf
mov
fdivs
shr
inc
sbb
mov
fbstp
dec
es
xor
adc
mull
inc
mov
enter
test
sub
and
add
push
pop
or
xchg
cli
jo
mov
aam
jmp
inc
cs
mov
loope
or
ljmp
fcoml
fwait
mov
mov
xor
jp
repnz
inc
dec
rcrl
push
sbb
and
or
push
pop
adc
loop
inc
and
push
dec
xchg
sti
cmp
test
pop
adc
add
add
or
mov
maxps
sub
xor
push
mov
ds
push
add
sbb
push
add
ret
je
pop
jne
enter
adc
mov
cmp
mov
mov
push
or
push
dec
dec
pop
popf
shrl
ret
xchg
pusha
mov
adc
sarb
add
dec
sahf
stos
pop
push
mov
shrl
pusha
sbb
dec
or
adc
mov
sbb
xchg
push
push
mov
in
and
orb
in
fdivrs
aas
lock
dec
add
negb
adc
pop
inc
fisubl
inc
pusha
stos
pop
jp
inc
test
ljmp
test
mov
mov
bound
sbb
mov
or
adc
pop
sbb
dec
mov
pop
cmp
push
insb
xchg
xor
jp
imul
in
sbb
or
lock
test
insl
mov
stos
loop
lcall
mov
fsubrl
ljmp
inc
sbb
je
les
into
xor
adcb
scas
call
in
mov
leave
in
mov
sub
popa
fwait
shll
lds
in
add
lcall
out
lret
add
sbb
ja
xorl
in
repz
loopne
out
sub
mov
push
inc
outsb
mov
xchg
stos
jp
adc
aas
push
push
mov
dec
lds
bound
loopne
inc
mov
add
xor
pop
mov
movb
cmp
mov
xchg
sub
or
mov
js
out
mov
fwait
sub
data16
add
push
sub
adc
mov
es
xchg
adc
rcrb
pop
lods
and
test
sub
and
cmp
imul
sbb
mov
das
and
loop
lods
add
xor
inc
pop
mov
es
loope
subl
rcll
dec
inc
rcl
inc
fbld
add
mov
test
stos
mov
and
jae
rcrb
dec
adc
mov
xor
aaa
sub
les
ljmp
ljmp
sub
cmc
push
es
lea
push
mov
insb
int
rol
rolb
sbb
sub
sbb
cli
push
adc
stc
ljmp
and
or
and
adc
and
call
pop
inc
mov
jne
sub
ljmp
or
hlt
subb
andb
mov
mov
test
fcompl
leave
push
es
sbb
mov
and
adc
lret
icebp
inc
adcb
pop
adcb
mov
cmp
xor
or
inc
and
testb
add
push
cmp
test
inc
lods
out
dec
sbb
sub
mov
push
jo
and
dec
mov
add
push
inc
lret
inc
movsb
mov
push
notl
push
mov
or
pop
or
test
inc
and
in
mov
mov
daa
mov
test
shll
mov
adc
movl
leave
cmp
dec
pop
mov
cmp
nop
mov
scas
insb
das
mov
add
lret
insl
or
xchg
dec
sub
mov
lock
push
rcll
mov
ss
xchg
mov
roll
mov
subb
js
fs
sbb
push
xor
sbb
dec
push
adc
xchg
or
push
dec
sub
mov
push
mov
mov
aad
loope
dec
daa
cmp
jne
lret
mov
pop
mov
ljmp
push
cmp
mov
rorl
bnd
into
push
or
pop
je
mov
push
dec
fidivrs
xchg
sub
push
adc
add
mov
rsqrtps
pop
or
rolb
dec
cmp
mov
loope
or
rcll
ljmp
sahf
xchg
leave
sub
stos
loop
sub
je
popa
push
adcl
mov
mov
jp
test
pop
xor
dec
xchg
je
jp
pop
mov
dec
or
adc
pushf
push
scas
insb
sub
stos
mov
push
pop
sbb
jl
sub
clc
inc
pop
stc
pop
pop
adc
adc
sbb
cmp
sub
push
sbb
jecxz
sar
add
mov
sbb
enter
aaa
xor
mov
test
push
scas
js
add
cmp
negb
mov
xor
adc
add
rcll
lcall
loope
inc
jae
fcoms
push
inc
negb
inc
adc
addl
scas
xor
mov
jbe
sbb
or
mov
xor
call
push
sbb
sbb
mov
mov
mov
mov
xchg
pop
fadds
pop
or
inc
xor
mov
popa
lds
jb
or
cmpb
fcmovb
and
rclb
add
push
stos
push
movb
aad
xchg
mov
dec
mov
sub
xchg
add
or
push
push
jb
int
rcll
and
inc
lods
jo
inc
adc
and
adc
loope
scas
and
je
add
cs
fmulp
dec
add
rcll
adc
out
adc
sarb
mov
push
sbb
and
mov
je
jp
dec
xor
popa
mov
scas
mov
and
jbe
pop
mov
fnsave
mov
add
xchg
sbb
rcrl
push
dec
inc
lock
rorb
shll
lods
mov
mov
xchg
sub
jne
xchg
or
add
adc
add
je
pop
jne
or
sbb
stos
enter
cmp
test
test
outsb
lock
loopne
enter
dec
or
xchg
jp
xchg
mov
lret
dec
das
jge
loopne
mov
mov
fdivr
and
and
enter
or
ja
and
pop
incl
pop
cmpsb
ljmp
or
rol
jg
jo
pop
ret
nop
stos
nop
outsl
pushf
test
push
adc
push
scas
push
pushf
push
jno
adcb
add
je
xchg
push
jp
inc
loopne
mov
sbb
shll
es
or
ja
inc
mov
and
inc
inc
icebp
bound
add
and
movsb
addb
or
xor
popf
or
mov
or
and
cmp
test
push
pop
clc
add
ja
lds
inc
and
push
mov
xchg
jmp
sbb
xor
insb
addl
sbb
xlat
mov
push
ja
inc
xor
push
scas
loope
les
add
add
jg
or
inc
test
out
mov
cmpsl
sti
push
cmp
out
pop
shrb
nop
sub
loop
push
mov
rcr
sub
pop
sbb
vpaddw
add
lea
ret
sub
and
sub
cmp
jge
call
jl
rolb
mov
mov
sbb
mov
addl
test
push
fisttps
les
jo
and
jp
pop
rcrb
cmp
or
cmp
popf
shlb
jo
outsl
jle
hlt
fs
call
leave
ret
mov
stos
fsubrl
test
adc
inc
aaa
mov
add
mov
sub
mov
call
rorb
jo
or
fildl
or
mov
or
mov
jmp
pop
test
jne
push
or
adc
sbb
adc
sub
outsb
insb
ja
cld
or
pop
pop
sbb
pop
sbb
pand
in
mov
or
add
cs
sub
ljmp
testb
or
mov
testb
je
movzwl
jmp
sbb
or
jne
push
push
and
and
wbinvd
fnsave
ds
mov
mov
dec
cwtl
push
push
adc
jo
mov
push
pop
pop
ret
mov
jne
push
jne
cmp
pop
mov
dec
es
pushl
or
jae
dec
push
dec
das
and
and
inc
and
mov
add
xor
or
push
add
jge
jmp
ret
push
inc
or
xchg
dec
enter
add
sub
mov
out
pop
cmp
jne
sbb
mov
cmpl
mov
mov
call
jne
out
outsb
mov
mov
jno
pop
mov
outsl
push
pushf
cmp
sti
jae
pop
cltd
sbb
adc
jle
out
sbb
fistpl
pop
or
ret
add
testb
xchg
addr16
jl
lods
pop
or
push
push
mov
insb
or
enter
fs
ret
fdivr
push
or
outsl
jbe
mov
sub
xchg
pop
je
fldt
pop
or
pop
or
mov
ret
movsl
jne
pusha
or
pop
jmp
mov
fcomp
daa
loop
dec
push
int
mov
mov
mov
fisubrs
mov
das
insl
cld
cmc
push
aam
push
cli
jge
lea
movsb
fldz
stos
clc
add
cmp
and
sbb
sub
jno
pop
jle
cmp
fbld
dec
jmp
cmp
cld
sbb
dec
cmp
xchg
test
iret
and
cs
pop
int
jae
push
cmp
jbe
sti
test
push
rcrl
js
pop
jmp
call
lcall
lods
cld
mov
or
jmp
addr16
pop
popa
jecxz
pop
leave
mov
push
popa
cmp
xor
je
lea
add
mov
jae
cmp
jne
out
adc
jmp
pop
sub
mov
enter
cmp
push
cmp
jne
mov
jmp
pop
je
test
dec
movzbl
das
pop
and
outsl
fcmovnu
mov
jmp
cmpb
or
jbe
inc
or
shll
and
xor
add
jmp
cmc
jle
xor
cmp
ud0
movsl
mov
ret
je
cmp
je
inc
out
sbb
sub
lea
add
mov
mov
cmp
mov
int3
sbb
or
test
mov
cmp
cmp
cmp
aas
dec
pop
mov
in
and
cmp
das
push
cs
pushl
fdivs
pop
bound
std
aaa
jne
pop
incl
pop
sub
movl
mov
imul
ja
dec
pop
pop
jle
sbb
sbb
clc
mov
ss
mov
add
push
push
push
lahf
or
cld
scas
sub
aam
sbb
mov
or
daa
and
push
push
aad
outsb
xchg
pop
les
shl
dec
sbb
or
add
jne
jecxz
or
dec
movsl
push
jnp
adc
jle
aaa
test
testb
cmp
inc
cmp
outsl
jl
stc
sub
addb
add
xor
sbb
or
adc
aad
into
mov
fimuls
add
sbb
inc
push
add
add
inc
sbbl
lods
mov
inc
and
or
jne
push
add
dec
jmpw
fimull
lcall
filds
pop
enter
testb
push
adc
add
rcl
test
mov
inc
inc
jmp
xchg
sub
ret
add
ret
insl
or
jecxz
jmp
jecxz
or
sti
fistpl
xor
mov
dec
test
push
inc
mov
push
pop
inc
mov
jne
andb
cmpl
or
popa
sarb
sbb
push
pop
aaa
and
adc
add
push
xor
push
xor
fs
mov
mov
sti
pop
ret
dec
and
push
call
dec
loopne
fstpl
test
add
loop
arpl
dec
jnp
hlt
jmp
pop
inc
xor
pop
adc
sti
pop
ljmp
pop
adc
aad
sbb
insl
inc
or
daa
ret
or
inc
or
jne
mov
repnz
das
or
clc
hlt
mov
fisttpl
mov
call
fcmovnu
xchg
mov
xor
adc
je
sbb
lcall
and
mov
ljmp
add
cmp
ret
jmp
divl
movsl
in
das
popf
int3
test
je
inc
cmp
dec
fstpt
movl
dec
movsl
pop
sti
jmp
mov
ss
lds
cmp
imul
mov
pop
dec
push
ret
addr16
outsl
repz
pop
sbb
and
jecxz
ret
jae
outsl
add
andl
out
pop
into
movb
mov
pop
jmp
mov
enter
lock
jns
cmp
in
or
cmp
pop
add
cmp
push
clc
jl
divl
rcrb
jge
mov
imul
sbbl
mov
shll
pusha
or
fisubrs
and
roll
xchg
mov
adc
or
xor
cmp
lds
or
add
test
jle
or
push
stos
push
and
ja
or
pop
or
shll
fidivl
pop
mov
mov
push
in
add
inc
cmp
jl
pusha
xchg
clc
cmp
cmp
decl
ss
push
sub
das
enter
jmp
ret
dec
neg
sbb
dec
pop
add
cmc
or
xor
mov
or
ret
ds
sub
in
orb
or
jne
pop
pop
bound
jmp
add
jl
dec
pop
push
sbb
ret
pop
test
push
test
jne
arpl
pusha
xor
mov
je
inc
cmp
and
sub
lcall
sbb
ficoml
jbe
pop
adc
pushl
fcomps
or
adc
mov
mov
movsb
ficompl
adc
lods
int
fisubl
insb
inc
mov
push
push
and
insb
pop
dec
mov
es
sbb
pop
outsl
pop
add
push
cmp
pop
sub
pop
push
incl
xlat
lcall
and
pcmpeqd
call
ret
int3
je
ret
roll
enter
outsb
clc
sub
xor
inc
shlb
cli
pop
sub
js
fmuls
add
pop
mov
ljmp
into
std
fidivrs
push
push
inc
dec
add
or
sbb
adc
inc
mov
sub
fcompl
jp
jbe
mov
dec
mov
jl
sti
mov
outsl
jbe
adc
sub
cmp
sti
insl
push
or
ret
popl
mov
or
push
mov
add
push
xchg
sbb
sbb
jnp
pop
pusha
add
imul
ret
sbb
mov
xor
xor
rorb
sahf
fmuls
cltd
testl
ss
push
adc
cli
sub
and
or
popa
cwtl
outsb
in
pop
mov
mov
je
push
push
lea
test
pop
pop
in
jmp
call
js
and
sbbb
add
push
or
or
jo
mov
mov
mov
push
or
or
cmp
sti
popf
sbb
mov
jmp
pop
adc
pop
push
mov
rolb
sub
sbb
cmpsl
mov
jecxz
lock
inc
add
sub
push
push
inc
je
and
out
jmp
adc
roll
or
leave
mov
and
jo
pop
jp
xchg
inc
inc
push
mov
icebp
jne
shl
cmp
test
sbb
insb
cltd
call
jo
adc
test
or
incb
dec
push
cltd
sub
mov
push
push
pop
adc
jb
pop
inc
inc
pop
popf
mov
sbb
clc
or
andl
add
clc
inc
call
cmp
dec
adc
or
sbb
lods
jge
jmp
and
adc
and
mov
sub
es
mov
insb
movsb
pop
mov
hlt
test
and
enter
push
inc
push
sbb
sbb
pop
in
inc
mov
mov
subl
cmp
imul
push
outsl
shrb
pop
clc
call
pop
pop
stos
jne
mov
add
out
outsb
es
mov
pop
pusha
lods
jge
sbb
mov
fwait
or
push
adc
or
add
pop
xor
loop
stos
cmp
test
mov
push
movzwl
mov
dec
cwtl
stc
add
int
inc
sbb
xchg
cmp
sbb
mov
inc
xchg
push
mov
sub
sub
jmp
ss
or
dec
out
cmp
js
sbb
inc
push
push
push
call
pop
cmp
pop
jmp
mov
and
andl
adc
sti
ja
loopne
jne
rep
stos
mov
xchg
cmpb
mov
cmp
inc
jg
or
jbe
inc
decl
jne
jnp
xor
xchg
and
or
cld
push
dec
lea
sbb
outsl
add
lea
lret
lods
mov
cli
je
mov
popl
add
xchg
shlb
adc
mov
inc
inc
adc
stos
sar
cmc
inc
inc
cmpb
enter
or
fcomps
icebp
pop
pxor
push
int3
lods
push
mov
push
imul
mov
movsl
movsl
pop
mov
inc
jns
jno
lods
andb
inc
cmp
xchg
jb
push
cmp
dec
jmp
jbe
push
jmp
or
add
sbb
je
push
jo
pusha
xchg
popl
sub
mov
daa
xchg
mull
push
in
or
mov
mov
test
dec
leave
mov
call
xchg
pop
insl
mov
cmp
add
movsb
cld
rol
inc
push
sbb
mov
push
push
mov
cmp
adc
xor
adc
rcrb
jne
das
add
in
pop
xchg
movsl
mov
clc
mov
adc
mov
dec
mov
jb
mov
movb
and
aaa
lea
inc
insb
push
pop
mov
mov
lea
mov
shr
jle
mov
loope
rep
inc
inc
mov
xor
rcrb
push
jnp
fwait
lock
cli
mov
pop
lods
test
scas
sub
mov
push
push
xor
dec
inc
jbe
sub
dec
mov
gs
push
daa
jb
lret
lahf
mov
jg
mov
test
push
add
mov
mov
je
fildl
ja
and
mov
icebp
add
add
imul
jb
add
mov
enter
ss
mov
jb
jp
push
sbb
jae
jmp
icebp
and
adc
and
cli
inc
gs
jmp
inc
push
adc
push
cmp
pop
repz
mov
imul
jecxz
xlat
sbb
fisubl
cmp
pop
push
imul
sbb
add
lock
jmp
lea
js
dec
add
add
aas
imul
push
jne
mov
mov
cmpsb
clc
jbe
jp
pushl
add
cmc
add
out
xchg
pop
cld
and
mov
dec
out
jb
fiadds
jmp
lea
add
jmp
jmp
xchg
or
jmp
cld
pusha
or
sbb
fcomps
mov
inc
out
jmp
mov
rcrl
in
outsb
imul
imul
xor
add
aam
test
cmp
cmp
cmp
inc
icebp
or
or
sbb
mov
scas
lcall
loopne
and
add
dec
jne
cmp
notl
loop,pn
lock
mov
bound
and
add
jp
lea
xor
je
cmp
enter
add
ret
test
ret
test
pop
xchg
cmp
test
inc
lcall
and
test
adc
sub
ret
or
cltd
fs
std
cld
sbb
jp,pt
adcl
scas
push
inc
or
shlb
dec
mov
mov
jbe
clc
jb
rcr
test
loop
sub
push
mov
jmp
dec
mov
test
jmp
enter
fsts
test
push
lea
lods
fbstp
pop
push
mov
jo
rorl
les
add
xor
pop
int3
lea
pop
xchg
mov
sub
cmp
inc
and
je
aaa
nop
mov
out
add
pop
aam
xor
ror
les
in
xor
xrelease
call
shll
clc
clc
test
ret
mov
cmp
push
jbe
xor
add
sbb
lea
int
notb
stc
xchg
or
lea
jl
cld
jg
lret
mov
and
ja
nop
idivl
add
test
and
stc
jmp
cmp
and
mov
lock
add
outsl
add
mov
nop
scas
dec
push
mov
pop
in
pop
inc
mov
sub
daa
and
add
scas
insb
sub
lea
inc
add
xor
rcrl
je
shll
sbb
adc
shll
or
sbb
xor
add
shlb
add
xlat
xchg
mov
pusha
or
adc
push
pop
or
imul
shl
mov
ja
ljmp
mov
daa
fnstcw
orb
sub
or
mov
and
mov
push
jle
jmp
push
addb
das
or
pop
cmpsb
movsl
inc
xchg
jmp
inc
cmpsb
pop
ret
pop
adcb
scas
inc
arpl
je
add
mov
pop
fcmovne
sbb
test
mov
rolb
addb
mov
addr16
pop
push
or
and
mov
mov
imul
fiaddl
inc
pop
ficoml
mov
or
pop
add
loop
stos
loop
shr
jp
imul
outsb
imul
inc
cltd
test
in
xchg
xchg
inc
dec
dec
or
test
or
jne
shrl
mov
pop
or
iret
jbe
into
dec
adc
inc
mov
push
lods
dec
xchg
add
rcrl
xor
mov
dec
add
test
and
decb
sub
cmp
lds
pop
insb
loopne
sub
adc
push
jns
push
adc
adc
add
add
or
mov
jecxz
incl
aas
jnp
pop
das
mov
loope
in
fisubs
xor
push
clc
dec
pop
cmp
cmpsb
jbe
lods
jne
xchg
repz
sti
inc
push
mov
cli
jbe
cli
mov
xor
pusha
fistl
push
mov
xchg
cmp
and
adc
popa
mov
push
pop
into
mov
mov
add
outsb
insl
aam
adc
cmp
mov
lock
aaa
in
or
or
mov
push
push
lret
push
mov
or
std
push
in
pop
add
xchg
inc
mov
jae
in
fstl
mov
jmp
or
sti
fdivs
mov
sbb
sub
lea
sbb
pop
add
popf
test
add
mov
sbb
or
dec
cli
dec
lods
scas
call
or
and
je
loope
add
push
sbbb
notb
call
pop
xor
push
or
sbb
bound
cmp
andl
push
paddd
or
jns
cmp
xchg
andl
adc
rclb
imul
pushl
pop
adc
adc
push
mov
pop
sub
repnz
xchg
lret
enter
std
ja
dec
adc
push
lea
push
push
push
sti
imul
mov
add
mov
add
dec
mov
stc
lods
mov
movsl
andb
sbb
xor
jb
sbb
jbe
pop
ret
call
push
xor
out
sub
inc
cmp
decl
shll
shr
push
add
sub
cmp
shll
sbb
sub
decb
iret
jne
imul
cmp
fwait
or
jle
jns
fidivrl
fsubs
adc
push
ljmp
push
jnp
cmp
fnstcw
in
es
fldcw
out
arpl
or
cmpsl
push
pop
test
mov
rcrb
or
sti
sub
arpl
jmp
adc
sub
dec
sub
push
cld
mov
nop
inc
mov
mov
pop
fxch
adc
push
fstl
pop
push
or
mov
jne
xchg
pop
scas
add
stos
inc
sarl
and
or
je
mov
sbb
dec
push
into
jne
out
out
pusha
pushw
fs
test
jl
shl
inc
jmp
mov
lock
scas
fistl
or
jg
jnp
incb
sbb
jle
pop
aam
or
add
and
adc
dec
add
cmp
mov
cmc
out
mov
decb
jne
jmp
lds
shr
xor
sub
push
xor
sbb
ss
sub
into
push
or
pop
fwait
pop
xchg
add
add
mov
dec
rolb
or
mov
and
out
movsl
ror
decb
jge
les
leave
lea
mov
cmp
test
or
das
sub
dec
mov
jnp
mov
lods
pop
jo
rclb
mov
cmp
or
mov
mov
jne
ret
outsl
sub
and
adc
cld
lahf
mov
and
xorb
sbb
rorb
cmp
imul
in
inc
add
insb
shll
sub
and
lods
sbb
xor
push
jb
cmovs
pop
mov
xchg
mov
xchg
lds
pushf
sarb
push
inc
xor
xor
mov
adc
push
jne
pop
pop
and
push
sbb
mov
js
pop
xor
jl
and
mov
incl
bound
shlb
lret
push
fucomi
pop
jno
sbb
or
fcmovnb
dec
loopne
ret
sbb
aaa
aaa
imul
adcb
subb
add
fldt
sti
test
out
jns
mov
jb
inc
addb
fbld
sub
or
ja
lea
ja
repnz
out
lea
cld
lock
push
out
jmp
dec
add
sub
adc
push
sub
pop
jne
lock
jbe
adc
add
sub
jecxz
mov
mov
fs
inc
inc
mov
sbb
inc
mov
or
mov
or
mov
push
rolb
fsubrs
rcll
inc
xor
pcmpeqw
test
dec
negl
fbld
fs
adc
pop
add
adc
or
insb
mov
or
push
call
cmp
add
pop
sbb
ret
mov
rcrl
add
push
xchg
jp
lods
ss
push
push
mov
jne
imull
push
movsl
ficoms
and
jno
jne
jmp
inc
flds
jl
inc
inc
inc
dec
je
adc
pop
fucomp
jg
jne
sub
add
sbb
push
loopne
pop
lds
cmp
adc
xchg
dec
testl
add
fldt
cli
sub
xchg
orl
push
pushf
sub
leave
add
sub
or
or
mov
cmp
sbb
mov
and
add
rclb
mov
out
mov
or
pop
pop
jne
mov
test
arpl
push
in
out
das
nop
jne
shll
push
push
or
xor
xchg
test
mov
push
sbb
lea
mov
sub
add
nop
pop
or
jle
cmp
js
push
arpl
nop
add
out
sbb
pop
lods
loope
sub
push
rol
ds
inc
and
mov
cmp
jae
andb
insb
lcall
or
aaa
and
xchg
stos
push
sbb
jp
js
ss
flds
and
adc
lods
fimuls
xlat
adc
adc
mov
es
lods
lea
mov
fdivl
push
dec
fsubl
jmp
mov
push
hlt
dec
in
sbb
mov
lret
movsl
mov
jbe
dec
divl
shlb
je
ds
mov
imul
fst
jg
fidivl
dec
rcrb
mov
gs
jmp
or
lret
add
repnz
mov
pop
imull
jge
je
push
fs
je
mov
in
out
mov
add
jmp
mov
push
or
aad
mov
loope
mov
fsubrs
rclb
dec
or
xor
es
dec
xchg
insb
outsb
mov
sub
add
adc
gs
pusha
sbb
push
rcrb
mov
lods
cmpl
push
pop
push
push
movsl
mov
add
push
mov
sub
mov
jl
and
sbb
add
cmp
push
xor
rclb
sbb
add
xor
sbb
loopne
mov
mov
cs
pop
sub
int3
psraw
inc
sub
or
add
notb
loopne
pop
divb
ficompl
push
test
int3
lret
adc
mov
push
loopne
inc
lahf
add
and
ret
loopne
rolb
scas
in
je
sbb
or
sub
sub
addr16
adcb
dec
add
ja
in
test
stos
cmp
and
fisubs
xchg
mov
mov
mov
sar
xlat
adc
nop
pop
arpl
loopne
pop
adcb
or
xor
pop
inc
xor
pop
push
scas
add
dec
test
mov
or
lock
add
rcr
lock
xor
add
pop
and
dec
xlat
cmp
add
test
pop
pop
or
or
dec
shll
sbb
sub
and
roll
pop
inc
shll
pusha
add
mov
movsb
add
mov
add
jb
sub
fildll
jae
xchg
or
mov
add
push
and
push
lcall
and
jl
and
and
clc
hlt
in
and
and
call
and
and
fadds
add
scas
sub
add
or
add
jb
test
call
insl
and
jb
jb
or
mov
push
adc
add
dec
inc
sti
lret
fimull
add
inc
adc
push
xor
cmp
bnd
and
bound
and
imul
jl
outsl
or
aaa
daa
aaa
outsb
outsl
je
insl
ljmp
push
arpl
data16
outsl
ja
jb
insl
sarb
push
outsl
outsb
aaa
ss
inc
repnz
je
xor
sub
jb
jne
xor
mov
and
insb
sub
in
mov
ss
sub
pop
das
pop
push
fdivrl
daa
jnp
pop
xor
imull
shlb
outsl
pcmpgtb
arpl
loope
fisubl
and
gs
adcl
insl
jne
lods
je
mov
arpl
pop
and
lcall
and
add
imulb
popa
insl
and
ss
or
das
xor
dec
adc
sub
xor
loope
adc
sub
popa
jb
jne
jae
fldt
shrw
subb
mov
je
adc
dec
lock
or
push
imul
inc
sub
and
dec
imul
ret
popa
out
or
adc
fstps
addr16
ret
add
loopne
sub
insb
ja
sbb
gs
popa
xor
jbe
push
scas
mov
fdivs
adc
push
xchg
fs
jae
popa
addr16
outsl
js
add
and
sub
sub
add
sub
add
or
xchg
add
test
sbb
orps
xor
add
jp
jns
add
jns
add
daa
add
jns
push
imul
or
inc
lea
mov
fs
push
nop
xchg
inc
push
fs
xchg
xchg
nop
scas
lcall
or
cmpsb
xchg
loopne
sti
adc
and
ja
add
add
or
xchg
inc
sahf
and
inc
cld
adc
adc
repnz
adc
sbb
sbb
xchg
daa
popl
sbb
jns
in
js
jns
jp
cld
enter
and
adc
push
rclb
xor
dec
out
adc
add
das
dec
push
repnz
movsb
add
jns
and
repz
sbbl
in
adc
mov
cmp
add
mov
inc
mov
inc
out
pop
iret
mov
in
call
and
add
pop
pop
fisubrl
xor
fcomp
loopne
cmp
jle
clc
cltd
jecxz
xchg
add
add
add
xchg
dec
sub
dec
or
adc
add
test
orl
mov
or
addb
push
sbb
add
and
dec
add
add
dec
add
inc
add
add
popa
jo
dec
push
stc
inc
insb
insb
outsl
arpl
dec
outsl
fs
gs
popa
outsb
or
add
popa
sub
aas
sti
jo
outsb
outsw
adc
insl
insl
pop
dec
imul
push
gs
aaa
or
mov
push
adc
jbe
rcl
or
push
gs
lret
decb
jne
jb
outsb
and
outsb
push
insl
cmp
jo
inc
inc
imul
add
gs
popa
insl
imul
inc
fnsave
jb
addr16
std
xor
fs
bound
outsl
dec
push
imul
cmp
pop
pop
sub
pop
ret
inc
push
pop
push
mov
jne
adc
mov
adc
gs
loope
rclb
pop
insb
jae
addb
push
popa
insb
jne
or
push
test
inc
add
mov
test
out
inc
xor
inc
add
or
push
mov
lock
out
sbb
push
je
dec
ja
inc
ja
pop
lock
xor
push
jbe
or
jae
xor
arpl
dec
push
jbe
rcll
in
cmp
or
dec
inc
dec
or
rcll
xor
pop
out
fs
dec
shll
mov
jbe
sub
mov
test
or
btr
imul
or
repz
nopl
scas
jb
addl
xchg
sti
add
dec
add
inc
mov
fisubrl
faddp
icebp
add
push
pop
stos
jb
push
mov
lcall
inc
add
inc
inc
xlat
in
dec
jae
xchg
mov
test
push
jb
dec
xlat
push
mov
push
loopne
push
movsb
dec
mov
mov
pop
inc
and
push
decb
inc
insb
imul
negb
arpl
jns
sbb
pop
lock
lock
add
add
dec
mov
aaa
add
into
add
cwtl
add
xor
jb
xor
jo
inc
add
add
jle
xor
add
mov
mov
mov
add
cmp
lar
insb
adc
mov
fistps
shrl
push
and
dec
lock
ja
push
add
xor
lock
add
add
add
outsl
mov
aad
dec
add
add
ret
add
idivb
lock
outsl
shl
jo
adc
in
mov
push
add
jbe
xchg
push
ret
jne
fistpll
adc
cmp
jns
pop
or
lock
mov
mov
mul
ret
lock
mov
repz
fcomi
cld
add
imul
lock
jbe
add
ds
bound
add
add
jo
fildll
add
inc
cmp
xor
add
adc
mov
cmc
xor
shll
lock
neg
imul
aas
cmp
negb
cmp
cwtl
mov
je
mov
lock
scas
rolb
lock
add
push
mov
out
xor
mov
lock
xchg
out
cltd
imull
fists
dec
add
jo
and
inc
in
cmp
and
in
outsb
jnp
sub
adcl
add
add
dec
lods
jg
insl
daa
inc
mov
add
xor
ljmp
lock
jbe
outsl
into
das
inc
add
add
mov
or
mov
in
add
adc
cmpsb
or
mov
add
cmp
fistpl
int
push
mov
push
add
inc
lock
add
dec
pop
ret
outsl
jo
inc
andb
jecxz
popa
movl
dec
aaa
lock
je
or
mov
add
add
add
roll
or
push
jb
inc
imul
mov
je
ss
adc
scas
jno
cmp
mov
xchg
add
lret
mov
xor
ds
lock
push
ljmp
inc
mov
push
lock
out
icebp
inc
arpl
sti
add
cmp
add
inc
loope
lcall
sbb
jns
xor
jle
jnp
test
cmp
add
lcall
jge
add
stc
add
or
xor
xor
or
idiv
in
sbb
cmp
adc
pop
or
or
push
push
push
test
mov
cmovl
xor
inc
or
or
std
decl
jecxz
xor
aas
push
adc
xor
pop
adc
and
push
xor
adc
fbstp
inc
or
adc
sbb
adc
sbb
sbb
lock
sti
mov
adc
or
inc
adc
or
adc
ljmp
add
or
xor
xor
mov
and
mov
pop
adc
or
sub
cli
fistpll
outsl
mov
adc
or
push
movups
sahf
std
fldt
inc
cmp
ret
sbb
scas
add
sub
sbb
add
dec
push
aas
and
add
or
pop
push
sbb
push
or
mov
lods
insl
jecxz
xor
or
mov
fdivr
push
adc
adc
or
fimuls
inc
jnp
in
mulb
adc
test
sbb
fistps
adc
or
sbb
sbb
jg
or
mov
sbb
xor
in
pop
fistpl
sbb
pop
adc
rcrl
push
add
les
sti
cmp
add
add
inc
fmuls
add
adc
xor
mov
nop
add
orl
lods
dec
aam
mov
add
outsb
sub
insb
mov
or
push
add
or
int3
xchg
adc
push
push
xchg
sub
sub
pop
push
xchg
outsl
incb
mov
js
add
enter
nop
mov
pop
cmpsl
adc
adc
sub
nop
fnsave
xor
add
and
push
pusha
jb,pn
popa
xor
xchg
pop
sti
or
int
cmpsl
cmp
inc
cs
sbb
pusha
push
inc
rorl
jb
jb
jmp
dec
or
or
scas
dec
push
jns
ja
adcb
cld
outsl
inc
sbb
push
add
mov
add
add
add
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
