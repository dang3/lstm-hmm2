push
sub
cld
pop
into
sub
subps
add
out
lea
mov
in
pop
test
enter
jb
and
aaa
popf
and
sub
sub
loope
mov
pop
sahf
pushf
jae
cmp
stos
andb
add
out
add
jbe
in
scas
and
pop
incl
push
xchg
sbb
pop
inc
pop
pop
fadd
test
adc
aas
cltd
imul
rol
mov
xor
xor
popf
lods
jae
cmc
cmp
pop
push
pop
mov
in
or
lods
pushf
pop
mov
jns
mov
cmp
xchg
cmp
data16
ss
cmp
jg
adc
rcrb
xor
cmpsb
sahf
in
addl
notl
gs
bound
push
or
ss
int3
mov
sbb
loop
aad
jnp
inc
testb
add
mov
mov
repnz
jmp
lock
clc
mov
inc
dec
hlt
dec
shlb
cmc
jecxz
and
xchg
dec
inc
std
mov
jg
jb
sub
lret
rorl
test
es
lock
mov
jbe
mov
push
dec
sub
sbb
mov
pop
lods
sbb
test
cmpsl
push
call
push
popa
movsl
lea
push
sbb
mov
daa
mov
out
hlt
mov
adc
hlt
insl
cwtl
sti
sti
scas
and
jecxz
jecxz
fs
daa
cs
das
daa
shlb
arpl
subl
notb
add
mov
jae
inc
jmp
loop
mov
aaa
int
mov
dec
fistpll
xor
mov
jp
mov
pop
shr
jo
fsubs
dec
dec
mov
aas
sbb
std
loopne
or
imulb
pop
testb
xchg
or
push
pop
dec
icebp
and
add
cmp
push
fwait
mov
sbb
das
sbbl
mov
fisttps
sti
jmp
cwtl
push
lcall
mov
add
lods
or
enter
negb
inc
ficoml
jg
mov
inc
adc
into
and
cs
xor
dec
shll
lods
out
add
cmp
fisttpll
or
lret
mov
pop
cmc
pop
add
push
and
lock
je
aas
enter
mov
pop
popa
fdivl
out
imul
pop
inc
pusha
push
sub
imul
pusha
adc
jmp
aad
dec
jb
sub
repz
in
addl
xchg
clc
shlb
cltd
shl
hlt
xchg
nop
cmp
jmp
jmp
shll
out
in
lods
jmp
cmp
fidivl
rorb
mov
scas
fs
addr16
jo
test
cmp
outsl
stc
pop
stos
aam
dec
mov
mov
cmpsb
cmc
pushf
push
out
xor
iret
push
pop
mov
mov
cmpsl
pop
xor
nop
test
jne
lcall
stos
arpl
fmul
in
pop
or
shll
push
enter
mov
xchg
mov
scas
xor
icebp
push
mov
ss
and
inc
outsl
daa
mov
out
in
dec
rorb
xchg
frstor
pusha
or
arpl
imul
stos
sub
arpl
dec
inc
out
sbb
cwtl
cmc
jb
mov
xchg
hlt
or
xor
je
popa
out
pop
xchg
xor
divb
in
icebp
mov
lods
pop
pop
mov
xlat
xchg
dec
or
popa
pop
lods
aaa
jge
ret
cli
ss
cmp
add
xchg
xchg
int3
sbb
dec
jecxz
or
enter
rorb
fs
jae
leave
popf
inc
cs
sub
test
push
mov
push
sbb
mov
push
int3
adc
sti
stos
das
rol
hlt
xchg
call
or
ja
aaa
outsb
call
xchg
lea
out
jno
mov
bound
jnp
dec
fisubl
gs
or
jge
hlt
pop
outsb
addr16
pop
cmp
and
jne
les
enter
xchg
sub
movsb
ss
push
loopne
inc
scas
es
sbb
xorl
test
cmp
adc
adc
push
loop
jmp
xor
sub
cmc
push
cmp
mov
mov
sbb
imul
test
xchg
repz
jge
or
pop
cmc
xor
nop
lds
cmp
mov
addr16
mov
xchg
pop
mov
testl
mov
dec
xchg
jno
int
and
lods
js
test
shlb
sub
mov
jecxz
jp
and
mov
test
xor
insb
test
out
dec
mov
add
push
add
jle
xchg
xor
aad
sbb
movsb
or
shll
cmpsl
cmpsb
imul
sbbb
es
sbb
es
mov
sbb
pop
dec
add
and
les
insl
xchg
inc
push
das
pop
inc
or
icebp
push
stos
adcl
stos
jmp
sub
outsb
mov
lods
scas
push
and
ss
in
das
pop
add
or
or
sub
jp
and
enter
add
push
mov
iret
cmc
mov
xchg
negb
mov
mov
xchg
add
enter
pop
pushf
je
and
cmp
push
add
in
inc
cmpsb
and
bound
jp
sbb
daa
mov
pop
sbb
push
mov
push
popa
mov
sub
and
popf
cmpsl
into
sub
xor
pop
jno
jae
jecxz
cltd
ds
jns
mov
lea
and
shll
in
sub
adc
icebp
sbb
sti
cld
inc
lret
jno
fwait
jecxz
mov
cld
test
sub
mull
push
aaa
jl
std
jmp
mov
ficompl
into
into
sub
add
in
mov
sti
and
out
std
stc
in
mov
cmp
fcmovnu
mov
cmp
and
dec
js
jl
fmuls
inc
fcoml
cmp
push
imulb
jae
xchg
insb
add
adc
outsl
lahf
adc
loop
ja
adc
aaa
fiaddl
dec
loope
repz
out
add
aad
pop
jl
es
fsubrs
lret
sarb
lea
sub
mov
xchg
test
scas
jge
addr16
jbe
or
iretw
inc
cmpsb
stc
mov
dec
loope
js
push
or
jo
xchg
test
shlb
adc
inc
jl
mov
adc
mov
cwtl
xchg
lret
in
outsl
movsb
sahf
imul
mov
mov
pop
xchg
hlt
aaa
fs
mov
cmp
inc
adc
jp
mov
fisubl
out
inc
pop
call
rcl
or
rep
mov
mov
jae
addr16
inc
dec
in
dec
movsl
iret
loopne
jle
pop
inc
add
int3
sti
lahf
and
lods
inc
mov
test
mov
jg
cmpsb
push
cwtl
cmpsb
sub
aad
xchg
fs
xor
movl
in
add
lahf
and
sbb
loope
adc
ljmp
pop
aas
add
fwait
mov
add
pushf
test
aaa
jo
ret
ret
rcrb
stos
addr16
pop
pop
bound
orb
rolb
scas
mov
cmp
ret
mov
dec
movsb
lock
repz
jl
int3
mov
lret
adc
rcrl
inc
inc
aam
pushf
lods
clc
mov
sub
jmp
pop
lea
jp
push
pop
inc
cmc
mov
xor
lret
push
mov
ret
call
aad
push
rol
cltd
add
mov
sbb
fs
pop
std
jl
sahf
or
shrb
data16
fimull
mov
out
stos
add
icebp
jge
xor
in
loopne
out
cmpb
push
in
ror
clc
cmpsb
xchg
xlat
test
call
mov
call
out
push
jecxz
fwait
sub
scas
sub
jle
mov
sarl
call
add
sti
sti
inc
es
out
scas
add
push
cwtl
pop
adc
subl
sbb
xor
imul
adc
mov
scas
sub
sbb
aas
sub
rolb
push
push
imul
call
rol
pop
cs
arpl
inc
push
jle
or
adc
and
cwtl
test
lcall
mov
push
scas
clc
les
cltd
xchg
sbb
stos
cmp
mov
adc
lods
sti
mov
and
adc
rcrl
mov
cmp
cmc
mov
cwtl
pusha
mov
imul
or
ficoms
in
mov
and
les
xchg
fsubs
mov
ds
pop
jo
inc
je
shl
push
mov
xchg
inc
and
leave
lods
sbb
pop
sbb
mov
ljmp
pop
mov
pop
xor
or
lcall
in
scas
imul
adc
lahf
push
mov
inc
mov
jns
push
je
sbb
push
lds
jle
cmp
mov
or
lcall
outsb
aam
add
or
fmuls
aam
aas
or
out
shll
adc
jbe
or
js
mov
imul
sub
cld
out
adc
enter
sbb
jno
adc
push
jp
test
pop
cmpsl
mov
scas
sbb
mov
mov
imul
dec
aam
jne
cmpsb
es
lock
or
mov
xchg
xchg
mov
in
pop
je
pushf
and
push
xchg
or
pop
pop
xchg
xchg
inc
jl
ljmp
jbe
xor
ffree
lcall
jg
insl
jb
jb
and
mov
jecxz
jo
ss
cmp
stos
fs
int3
mov
mov
jp
sbb
movsb
rorl
cli
add
push
push
mov
in
and
mov
xchg
inc
lahf
loop
inc
addr16
mov
repnz
and
xchg
cmp
add
pop
fisubrl
mov
clc
mov
pusha
adc
das
mov
test
or
out
mov
add
ljmp
mov
lret
inc
adcl
sbbb
outsb
sub
movl
repz
adc
mov
and
adc
lcall
jp
add
sbb
push
cmp
pop
push
sets
in
cmp
dec
outsl
dec
sub
pop
insb
xchg
mov
adcb
mov
incb
aas
sub
loopne
ror
xor
movsl
mov
push
ja
add
cld
out
xchg
sbb
aaa
inc
fwait
and
fildll
cmp
decl
mov
inc
cmp
add
or
stos
stos
dec
xor
hlt
push
dec
mov
adc
sbb
shrl
fs
xorl
cmp
imul
xchg
xchg
cmpsb
insl
scas
stos
std
xor
lahf
sbb
fsubl
lds
fcomi
hlt
add
jg
pushf
xor
xchg
nop
dec
jmp
xchg
js
addr16
xor
or
out
loop
into
leave
aam
sbb
mov
inc
hlt
shlb
pushf
test
mov
mov
outsl
dec
stc
sub
scas
xchg
loope
ja
pop
jo
stos
scas
lods
xor
dec
seta
dec
pop
xlat
inc
cmp
jne
cmp
popf
leave
hlt
aaa
cli
aam
mov
push
in
pop
ret
or
mov
fistps
push
mov
pop
and
inc
cmpsl
dec
xor
stc
push
push
mov
xchg
aaa
or
repnz
aad
std
aaa
lds
and
cwtl
add
xor
std
cmpsl
jp
mov
push
push
inc
out
sbb
inc
mov
inc
nop
repz
pop
push
adc
out
push
or
aam
sbb
pushf
add
adc
mov
mov
sbb
sub
add
lods
fadd
add
movsb
subl
sub
mov
test
fnstsw
nopl
ss
push
ret
aad
push
mov
pop
lcall
in
mov
cltd
inc
icebp
jne
push
pop
in
mov
scas
sub
mov
mov
jb
and
test
mov
lcall
lock
dec
mov
or
popa
movsl
movsb
push
das
or
adc
inc
xor
inc
dec
ret
or
push
push
or
sbb
adc
je
pusha
sub
addb
fucomi
arpl
in
popf
mov
lods
push
cs
push
decb
jp
cmp
aam
aad
clc
addl
push
mov
sub
sti
outsl
push
mov
dec
xchg
mov
stos
cmp
fwait
dec
jmp
push
imul
mov
mov
and
xchg
push
push
xor
es
loope
stos
je
test
mov
pop
divl
xchg
xlat
sub
mov
adc
mov
push
cs
stc
hlt
sbb
add
mov
dec
mov
jne
or
dec
aas
mov
jle
cmp
add
cmp
bound
jl
jecxz
xchg
stc
sbb
add
in
push
arpl
sbb
mov
sahf
mov
iret
mov
js
cmp
cmp
xor
fmuls
jb
xchg
cmp
dec
adc
mov
xchg
mov
xchg
sub
out
shlb
mov
mov
cmp
cld
adc
push
jecxz
mov
push
xchg
addr16
les
mov
mov
ret
jns
inc
repz
imul
idivl
test
shlb
fimull
mov
mov
lret
stos
push
fstpt
fsubrp
push
cmp
sub
stos
mov
push
xchg
fidivl
lret
sti
js
ds
test
add
push
fidivl
xchg
inc
ljmp
mov
flds
add
gs
xchg
pop
add
pop
sbb
stc
mov
mov
cmp
cmp
jge
out
mov
and
cmpsl
mov
mov
push
inc
jle
scas
xchg
xor
test
imul
dec
cmp
pop
rcrb
sbb
or
cmpb
push
mov
adc
dec
mov
or
pop
sub
es
mov
mov
push
test
aaa
mov
xor
out
inc
inc
add
out
fldln2
pop
mov
jno
pusha
mov
adcl
pop
je
loopne
jmp
lret
icebp
pop
sbb
inc
dec
test
lahf
jb
test
adc
rep
push
js
push
test
mov
sbb
loopne
mov
test
cmp
xor
cmp
arpl
fs
ljmp
into
jns
mov
mov
push
pop
inc
fidivrl
mov
mov
lds
sahf
out
mov
scas
inc
js
out
ret
insl
xor
lea
xorb
mov
mov
mov
xchg
sbb
push
out
dec
enter
cld
or
mov
jle
mov
add
dec
jb
xchg
push
jno
add
mov
cmp
mov
mov
and
xorl
data16
cmp
or
add
add
arpl
call
out
xchg
insb
lods
aad
daa
dec
lret
and
movsl
pop
mov
int3
jae
sarl
pop
adc
lea
xchg
lcall
push
pushf
xchg
sub
sbb
mov
je
leave
sbb
pminsw
xor
mov
cmp
fldl2e
aam
xchg
stos
add
nop
bound
inc
cld
sbb
xchg
jecxz
jnp
xor
push
sbb
and
ja
mov
cld
roll
xlat
push
test
xor
scas
loop
data16
call
sub
lods
fldl
ds
cwtl
clc
mov
clc
divl
aaa
lcall
std
add
mov
into
adc
cwtl
sub
test
push
dec
push
call
mov
shll
shrl
and
ret
scas
or
add
add
ja
xor
repnz
dec
mov
lock
pop
pop
je
aam
int
add
jmp
pop
sub
push
pop
loop
add
cmpsl
lock
hlt
out
std
jge
sarb
cwtl
lret
leave
adc
outsl
fcoml
sbb
fwait
xchg
sbb
addr16
enter
push
add
sub
rcll
stc
leave
adc
stos
xchg
sub
push
mov
push
movsb
or
jl
add
mov
add
add
pop
std
mov
fsubrs
cmpl
xor
cltd
stos
cmc
dec
inc
xchg
pop
pop
cltd
stos
cmc
dec
inc
xchg
pop
lahf
nop
daa
shrb
ja
leave
cmc
inc
push
pop
fistpll
pushf
pushl
out
mov
test
sti
les
inc
nop
fwait
jb
pop
ror
jle
mov
lcall
sbbb
rclb
mov
clc
stc
mov
gs
fcomp
ds
xor
cmp
mov
lods
fs
imul
cmc
jbe
test
mov
outsl
lods
cmc
sub
and
cmpsl
dec
mov
adc
rolb
ss
das
test
and
and
cmp
adcb
xchg
out
mov
std
scas
movsl
jno
lcall
fdivrs
fbstp
and
and
jo
fdivrl
popa
inc
adc
add
pop
xor
pop
inc
and
cmpsb
das
xor
fcmovnu
sbb
add
mov
xchg
add
cltd
jp
cmpsl
sbb
nop
inc
insl
sub
cmp
dec
mov
out
ret
lock
push
sbb
pop
out
sbb
or
push
jmp
stos
sub
jle
addr16
xchg
mov
jb
push
mov
and
sub
lret
call
adc
mov
ret
dec
inc
mov
and
jg
pusha
nop
lcall
dec
add
call
xor
jle
xor
mov
pop
jecxz
push
ds
iret
xchg
loop
dec
mov
test
test
pop
shl
sub
cmp
jl
cmpsb
repz
push
addb
lahf
cs
imul
cltd
mov
cli
jno
cld
xor
sbbb
int3
push
and
insl
test
and
adc
xchg
orl
test
aam
adc
lahf
pop
out
ja
lcall
lock
rcrl
sbb
nop
push
inc
xor
rcrl
movsb
cmp
xchg
sbb
mov
mov
mov
inc
shlb
outsb
mov
dec
add
mov
mov
push
cmp
clc
sub
loope
mov
cmp
mov
pop
or
cmp
sbb
jbe
sbb
jmp
dec
movsb
in
aam
test
lret
sti
sbb
ror
adc
sbb
mov
scas
addr16
mov
push
dec
push
into
push
pop
adc
cld
outsl
pop
fcmovnu
sub
lock
movsb
jmp
sub
iret
mov
sti
insb
pop
imul
scas
test
sub
mov
loope
and
mov
fcmovnu
enter
cmp
sbb
mov
xor
bound
cmp
daa
xchg
addr16
push
enter
fisubl
or
cwtl
test
addr16
pop
inc
scas
pop
sbb
clc
jae
xchg
mov
mov
sub
or
sbb
push
adc
fwait
xchg
fisubrs
enter
dec
pop
incb
jmp
xor
imul
das
outsl
xchg
fistpl
dec
hlt
sahf
cltd
enter
aas
daa
sahf
cmc
sbb
in
push
mov
add
xchg
arpl
and
adc
sub
ljmp
out
hlt
jge
cwtl
cli
test
adc
fs
and
fldcw
sub
dec
xor
aad
pop
sarb
jecxz
jecxz
scas
mov
ljmp
push
cmp
sti
xor
xor
or
pop
out
stos
cltd
rorl
inc
aam
adc
pushw
pop
and
in
mov
inc
insl
mov
andl
xor
pop
lock
movsl
cld
test
aad
xchg
add
or
pop
jl
bound
inc
mov
or
mov
bound
add
mov
jg
cmp
mov
inc
mov
or
pop
mov
aaa
sbbb
pop
jmp
add
mov
jo
shr
leave
fists
sub
sbb
aam
xchg
jg
pop
mov
sti
daa
bound
aaa
lds
outsb
test
pushf
adc
popa
mov
and
jmp
int
and
ljmp
out
test
fs
ds
add
sbb
sbb
mov
jo
cltd
adc
movsb
in
popf
outsb
lret
pop
out
incl
loop
push
aad
sahf
xor
imull
pop
mov
inc
in
insb
xchg
mov
add
fmuls
movsb
imul
or
xchg
hlt
mov
xor
int
add
or
inc
push
loopne
xchg
push
sub
test
repz
bound
or
shr
cltd
mov
xchg
subl
es
xchg
xchg
out
mov
cmpsb
push
cmp
ljmp
jns
or
xor
inc
js
sbb
inc
out
and
or
adc
add
inc
in
outsb
mov
cmpsb
mov
lret
push
scas
shrl
inc
dec
dec
sbb
push
cli
fimuls
cmp
xchg
adc
out
aas
lcall
in
pop
mov
inc
mov
int3
add
adc
add
xchg
pop
mov
pop
adc
and
cli
mov
mov
call
fists
xlat
adcl
dec
notl
arpl
add
lret
dec
pop
scas
sahf
ret
pushf
mov
clc
loope
ficoms
add
adcb
mov
or
inc
xor
push
push
xor
push
in
inc
pop
loop
gs
add
adc
aam
jmp
push
test
and
pop
insb
add
mov
into
fsub
sbb
mov
popf
sahf
and
inc
dec
jne
inc
xor
xor
xor
notl
jmp
mov
popa
sbb
mov
mov
cmp
xchg
mov
popf
jne
imulb
stos
pushf
push
jmp
push
cltd
cs
outsl
jmp
mov
sbb
sbb
push
and
stc
adc
mov
add
jbe
stc
adc
pminub
mov
jl
mov
roll
adc
mov
in
sahf
enter
pushf
test
xor
add
in
xchg
pusha
movl
ret
mov
push
mov
ret
cmp
lock
frstor
sbb
fchs
repnz
ret
cbtw
jne
lret
mov
pop
push
fstps
lret
decl
jecxz
or
clc
js
pop
daa
imul
fwait
push
or
insb
or
roll
insb
jno
test
mov
scas
mov
into
xor
std
jp
jno
dec
push
enter
mov
jge
cs
in
or
mov
fs
popf
jmp
push
cmp
push
sbb
or
push
aam
jecxz
dec
ss
mov
call
clc
call
iret
cmpl
iret
lock
je
pop
enter
stc
mov
mov
in
jecxz
xchg
inc
sub
xchg
xchg
add
test
inc
push
enter
test
pusha
xchg
cmpb
push
add
xchg
mov
xor
adcb
test
insl
adc
bound
loope
mov
sub
mov
cmp
add
repz
xor
jnp
mov
aaa
pop
pop
enter
xor
push
push
add
imul
push
rorb
push
xchg
mov
push
out
and
jns
je
and
lahf
and
or
mov
fisttpll
and
xor
subl
jp
shr
inc
arpl
imul
into
in
mov
xchg
push
mov
cld
mov
mov
and
jnp
pop
dec
jg
mov
push
pop
pusha
dec
div
popf
das
mov
push
cmpsl
sub
ds
in
jg
push
test
and
ljmp
ljmp
mov
push
sub
add
dec
dec
aas
orl
in
jb
cmp
outsb
sub
sbb
in
mov
lea
rorl
xor
pop
das
cmp
sahf
pop
sbb
ret
dec
add
dec
imul
mov
adc
adc
push
test
movsl
pop
int3
mov
push
hlt
pop
jge
mov
jl
mov
lcall
insb
lret
lods
sysexit
lcall
int3
notl
push
out
sti
movb
test
loop
int3
pop
xor
ret
out
insb
ror
sub
arpl
dec
dec
notb
jmp
or
pop
les
pop
js
and
cltd
enter
dec
push
adc
or
lods
sub
ret
inc
pop
rorl
jno
jecxz
aas
sbb
add
pop
dec
cltd
cmp
xchg
pop
int
mov
into
cs
or
popf
sbb
inc
mov
ret
ficompl
cmc
jo
sub
push
or
cmp
in
inc
cld
mov
sbb
jnp
repz
iret
out
mov
fnstenv
cwtl
hlt
mov
sti
adc
add
test
mov
mov
popa
fimull
mov
xor
leave
or
or
pop
fdivp
movsb
ljmp
cmpsl
xchg
mov
mov
mov
aad
pusha
ds
dec
adc
inc
push
scas
jae
das
les
enter
pop
cmp
outsb
fwait
jnp
cltd
int
and
out
inc
enter
mov
mull
fidivrs
movsb
pop
push
ret
or
jnp
fsubrl
jecxz
mov
popf
jle
in
aam
xchg
and
mov
loopne
cmp
insb
iret
pop
xor
xor
shlb
xor
insb
push
in
idivb
xor
sahf
in
sub
push
pop
inc
adc
sub
out
in
adc
test
popf
into
xchg
sub
mov
jg
mov
pop
xorl
sub
gs
mov
push
xchg
out
pop
inc
stos
cmpsl
jecxz
loop
pop
in
je
aam
inc
or
pop
movsl
daa
mov
pop
sbb
scas
xchg
lds
or
mov
shrb
mov
dec
iret
mov
sub
sub
jl
out
addr16
add
mov
cmp
lcall
loop
enter
or
mov
xchg
inc
jp
iret
push
lds
ss
mov
xchg
and
out
mov
sbb
xchg
or
pop
inc
pop
outsl
xor
data16
add
mov
sub
mov
ret
push
cmp
icebp
pusha
into
in
cs
mov
shll
inc
push
pop
xor
les
inc
add
movsl
xchg
test
xchg
and
mov
arpl
sbb
popf
sbb
outsl
add
outsb
xor
push
inc
popa
push
stc
lds
ljmp
push
pop
cmp
sti
or
pop
mov
ja
fistpll
pop
dec
or
mov
imul
pop
xor
push
fidivrl
leave
adc
sbb
jbe
adc
xor
test
mov
push
push
or
inc
xchg
pop
shrb
jmp
arpl
jle
loope
mov
jnp
int3
xchg
inc
aam
shll
add
pop
daa
jecxz
jbe,pn
pop
fisttpl
int
dec
mov
popa
push
or
or
inc
mulb
es
sub
sub
mov
push
imul
fucom
cmp
xor
xor
mov
sbb
out
mov
cltd
pop
mov
adc
dec
lret
xor
pop
xor
popf
movsl
aam
push
clc
call
clc
adc
outsb
movb
push
and
lret
add
xlat
clc
sbb
push
cmpsl
jmp
cmc
and
gs
adc
jnp
decl
popf
popf
pop
xchg
sbb
in
push
push
xor
mov
jge
pop
icebp
cmp
mov
dec
daa
outsb
mov
jecxz
pop
call
test
je
push
fnsave
ja
pusha
pusha
js
in
movsb
and
cwtl
lods
fisttpl
mov
mov
andl
into
inc
mov
pop
xchg
cmpsb
dec
pop
out
mov
leave
ljmp
and
ret
push
xor
aam
pop
out
adc
call
ror
addr16
outsl
call
dec
inc
mov
mov
mov
les
pushf
cmp
les
mov
pop
lret
sbb
dec
or
pop
fbstp
stc
mov
sub
fdivs
test
inc
jmp
inc
shll
lods
xlat
sbb
dec
push
mov
and
jbe
andb
mov
or
dec
shlb
lods
jnp
dec
repz
repnz
mov
ja
fcomi
jge
fwait
test
aam
ljmp
push
mov
lcall
aas
and
dec
pop
push
mov
cmp
aam
addr16
movups
push
mov
jp
push
jp
out
inc
push
or
pusha
mov
sar
mov
inc
lret
cld
inc
aad
xchg
insl
cmpsb
adc
add
pop
and
sbb
pushf
mov
fdivrs
scas
mov
xchg
lcall
or
pop
test
pop
repz
cmpsl
shll
je
push
aaa
jno
pushf
stos
movsb
mov
xor
add
sbb
or
xchg
decl
push
jmp
or
imul
out
ret
je
inc
and
out
sbb
mov
inc
ja
sarl
sub
fcom
fbstp
jbe
rcl
dec
testb
inc
cli
mov
loope
ds
push
add
ss
aam
add
add
xchg
mov
ss
arpl
test
lods
push
cmp
adc
enter
adc
cmp
pop
mov
fiaddl
addr16
mov
inc
ja
or
int3
mov
pusha
adc
inc
push
xor
loop
les
xchg
xor
shll
mov
ret
out
jb
andb
test
mov
test
jle
int3
out
mov
repnz
add
pop
aad
scas
mov
xchg
decb
push
repnz
dec
xor
arpl
scas
scas
add
or
test
decb
mov
imul
fcomps
xor
cli
mov
or
cmpsl
lahf
push
jno
fidivrs
and
in
mov
mov
sbb
or
pop
lds
jne
sti
stos
negb
outsb
cmp
mov
imul
sub
adc
pop
add
jae
out
cld
mov
xchg
add
roll
cmp
fmull
xchg
cwtl
mov
adc
inc
adc
xchg
inc
jle
pop
enter
push
mov
cltd
les
fs
outsb
lret
and
push
inc
dec
cmp
add
scas
sub
pop
pushf
lds
loopne
sub
test
sahf
add
fmul
push
xchg
sub
fcoml
jle
mov
inc
int
nop
stos
mov
xchg
inc
push
adc
pop
cmpsb
jmp
sub
and
mov
add
cmp
test
add
enter
in
enter
mov
ret
push
mov
lahf
adc
lods
pop
stc
mov
pop
dec
sbb
dec
iret
mov
das
data16
inc
inc
jmp
inc
and
sub
rorb
outsb
mov
scas
xchg
insb
lahf
bound
xor
pop
sub
xor
xchg
outsb
inc
xlat
popf
movsb
in
xor
inc
mov
and
shlb
insl
mov
push
mov
js
pop
pop
outsb
aam
sub
xor
test
mov
push
xorl
mov
inc
inc
mov
ss
repnz
push
cmp
jbe
xchg
cli
push
sub
sub
in
xchg
sbb
ret
push
sbb
mov
mov
mov
scas
pop
fidivs
xor
cmpsl
jp
cs
or
jbe
insb
pop
cmc
test
push
jle
jg
sbb
pop
call
mov
in
icebp
pop
jecxz
xchg
adc
stc
leave
cmp
or
dec
inc
and
lods
xchg
and
sub
ds
xchg
xchg
popf
jle
cmp
scas
ljmp
test
subb
fisttps
leave
mov
inc
mov
push
gs
stos
outsb
shlb
pop
xor
pop
pop
fistpl
jbe
cmp
int3
rcrb
arpl
xchg
test
inc
and
inc
or
jl
cmpsl
repz
mov
les
push
gs
jb
lods
pop
pop
lea
and
call
pop
popa
fwait
xlat
sti
dec
jbe
jbe
ror
ret
jnp
jle
imul
mov
push
and
cmp
or
stos
fstl
rorl
inc
inc
nop
xor
addr16
sub
cld
loop
mov
mov
cwtl
in
sahf
mov
cld
xchg
test
ljmp
jbe
pushl
cwtl
pop
xchg
je
jne
mov
mul
outsb
mov
lcall
dec
xchg
jo
mov
sub
pop
data16
pusha
jmp
push
mov
jae
mov
jp
pop
mov
dec
pop
aad
mov
jb
mov
leave
out
es
hlt
outsl
mov
mov
mov
cli
ds
inc
xor
pop
js
ljmp
mov
arpl
enter
and
inc
push
pushf
repz
lods
fadds
mov
mov
adc
popa
push
clc
jle
inc
leave
mov
dec
jo
add
scas
movsl
fs
or
xchg
xor
sub
mov
pop
push
lock
xchg
cmp
jl
and
verr
xchg
mov
js
jno
adc
ja
xor
xor
dec
inc
cmp
inc
mov
fiadds
xor
cmp
cs
nop
movsb
mov
cmp
repnz
mov
rcrb
add
dec
gs
add
std
mov
add
xchg
jmp
shl
add
jbe
dec
popa
or
mov
jo
js
cmp
add
mov
add
adc
rcrl
hlt
lahf
stos
sbb
bound
jnp
gs
ret
dec
sahf
fbld
jns
add
cli
and
inc
insb
rcr
arpl
aad
push
push
scas
mov
aas
scas
je
add
adc
xor
int
push
jae
pop
inc
icebp
sbbb
ret
mov
sub
filds
insb
fwait
jns
push
enter
fidivs
cmc
ja
mov
mov
cmp
adc
rclb
jp
adc
or
add
mov
xor
inc
pop
sub
mov
adcl
popa
cmpsl
rcrl
jb
pop
adc
xor
inc
pusha
ficomps
ret
fidivrl
push
ret
dec
xor
sub
dec
pop
sub
mov
bound
ja
leave
xchg
cld
jnp
scas
hlt
pop
mov
jbe
cmpsl
repz
sbb
xchg
mov
pop
icebp
bound
and
adc
xor
cltd
lahf
jl
stos
arpl
nop
cmpsl
push
jl
scas
into
mov
mov
test
sub
cmpsl
mov
cmpsb
cli
js
pop
and
jl
xchg
inc
data16
adcl
xchg
dec
cld
inc
rcll
pushf
cs
adc
push
fdivr
lahf
dec
rolb
insl
repnz
sub
lret
lods
vmwrite
fwait
sti
shlb
or
push
and
mov
jp
xchg
imul
inc
cltd
cmp
stos
test
push
push
test
mov
ret
pop
add
mov
and
pop
jg
fs
adc
not
es
incl
jmp
shr
sbb
std
lcall
scas
cmpsl
pop
push
sbb
insl
and
pop
cld
sbb
mov
imul
aas
roll
lds
enter
mov
ds
scas
push
sub
adc
pop
rol
sub
sub
pop
movsl
out
loopne
movsl
pop
pusha
jno
loopne
adcb
sub
repz
jle
mov
ret
lret
add
xchg
icebp
enter
add
ds
aaa
inc
test
push
movsl
or
dec
ljmp
pop
cmpsl
movsl
imul
hlt
add
push
jmp
and
in
loope
cmc
jbe
jecxz
arpl
iret
movsb
mov
out
cmp
push
lea
and
mov
sbb
dec
mov
xchg
add
in
test
jbe
loope
push
sub
dec
scas
cltd
addr16
push
inc
test
pushf
add
jge
insl
add
mov
lods
and
adc
inc
push
mov
push
push
inc
jo
in
jg
out
mov
lahf
mov
mov
xlat
jne
inc
data16
mov
inc
cmpsl
xchg
mov
jg
outsb
imul
and
repz
add
aaa
das
adc
pop
je
inc
xchg
test
mov
test
dec
pop
sahf
mov
mov
cld
ja
mov
push
push
lods
sbb
sbb
nop
call
stos
fisubrl
clc
cmp
xchg
subb
mov
xorb
sbb
or
fimull
jne
push
nop
jo
adc
push
mov
jae
in
pop
add
fbstp
out
add
cmc
repnz
jmp
jge
icebp
dec
xlat
iret
test
pop
test
repnz
iret
or
mov
int
add
notb
sbb
pushf
daa
out
sub
and
ss
testb
add
adc
push
inc
in
mov
mov
push
and
test
pop
nop
and
roll
adc
dec
xor
push
dec
idivl
sbb
ds
mov
pop
inc
jg
mov
test
stc
outsb
cmp
test
push
mov
mov
mov
add
das
mov
call
into
adc
insl
mov
jmp
push
sbb
repz
mov
push
adc
sti
in
jae
mov
sbb
pop
ret
out
std
dec
test
cld
in
ficoms
inc
lret
lods
jno
lcall
mov
xchg
mov
mov
dec
pop
loop
ret
out
sub
push
mov
xor
jl
and
repz
dec
test
jmp
sub
mov
dec
jl
movsb
pminub
xchg
push
out
sbb
out
cli
in
in
cwtl
fs
mov
inc
int
pop
inc
push
ds
in
pop
pop
loopne
repnz
fcmovne
cltd
es
jno
mov
cmp
daa
mov
inc
jne
push
push
mov
mov
xor
jp
repz
mov
cmp
jl
imul
or
adc
lret
adc
or
sub
xchg
rolb
xor
ja
icebp
dec
dec
push
push
and
sub
imul
aam
sub
outsl
jl
out
mov
aad
sub
loope
push
mov
lock
mov
and
add
add
push
mov
mov
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
sub
pusha
push
mov
add
add
xor
add
add
pop
popa
leave
ret
add
add
int3
xrelease
xor
pop
in
xchg
mov
add
mov
mov
cmp
in
xchg
out
test
push
fsubr
sub
mov
mov
sbb
cmpsl
loopne
hlt
jno
pop
dec
xor
clc
mov
hlt
stos
sbb
cs
dec
lods
cmp
fcmovbe
out
sarl
nop
test
lds
pop
cmc
adcl
imul
enter
out
ret
push
mov
jg
add
call
in
sbb
repz
test
inc
pop
dec
and
push
sarl
push
dec
fdivr
sbb
cmpsb
pop
mov
xchg
sbb
repz
mov
xor
inc
jnp
outsb
add
cmc
sub
fcoml
loop
rcr
fs
push
or
ret
gs
fidivl
add
xor
sbb
outsl
das
stos
scas
lahf
mov
inc
pop
adcl
rclb
ja
push
inc
pop
jb
jno
or
jno
mov
push
scas
das
pop
clc
add
cmp
xchg
rorl
push
imul
inc
inc
mov
xchg
mov
pcmpeqd
sar
sbb
push
adc
xor
daa
movsl
mov
push
jmp
outsb
dec
dec
add
sub
movsb
outsb
dec
dec
add
sub
movsb
outsb
dec
dec
add
sub
movsb
addr16
cmp
sbb
push
jg
inc
mov
jmp
nop
adc
and
xchg
cli
out
mov
fs
in
popf
pop
jae
jns
jnp
mov
sbb
pop
xchg
or
sarb
out
mov
and
xchg
insl
dec
or
xchg
push
jge
scas
dec
incb
xor
dec
lods
mov
add
jg
xchg
jnp
add
add
mov
addr16
pop
mov
sub
sub
pop
cmpsb
inc
inc
sub
adc
jnp
pop
sti
stos
pop
in
in
fwait
push
pop
inc
push
cmp
std
sbb
imul
pusha
out
lahf
nop
jne
popa
mov
aam
mov
js
jae
fsubrl
add
sbb
data16
out
imul
fimull
adc
push
ja
or
xchg
adc
pop
or
movsl
aad
mov
int
and
outsl
push
std
jae
out
movsb
movsl
sbb
and
loop
test
test
adc
mov
lock
aaa
push
pop
mov
inc
dec
jns
lods
mov
mov
sbb
mov
gs
xchg
lds
and
pop
push
pop
dec
stos
mov
js
mov
fdiv
sbb
jmp
mov
push
loop
ja
sahf
sbb
stos
adc
xchg
movsl
or
popf
sahf
xor
loope
cmp
aam
aam
pop
xor
stos
pushf
pop
sbb
rolb
adc
rcl
aam
sbb
ss
aam
xlat
rolb
adc
rcl
aam
sbb
ss
aam
out
inc
push
adc
rcl
aam
sbb
aam
xlat
rolb
sbb
lods
mov
or
push
sub
xchg
ljmp
das
dec
cmpsl
sub
push
les
cltd
movsl
push
and
fistl
fadd
mov
cld
test
iret
imul
xchg
hlt
jge
jge
inc
scas
and
adc
push
add
mov
insl
std
xor
inc
mov
adc
xchg
push
loope
dec
ficoms
sbb
mov
hlt
ds
inc
pop
loopne
sbb
adc
lds
pop
aas
mov
fwait
aaa
or
ret
subl
mov
sti
cld
std
movsl
pop
mov
mov
sub
movsb
imul
popa
flds
mov
cmp
shl
aas
inc
inc
inc
xor
out
xor
test
outsb
lock
hlt
pop
mov
dec
mov
jns
lret
pop
fisubl
lds
jns
add
or
push
sub
sub
jo
pop
add
mov
iret
gs
lods
jo
adc
sbb
ret
out
xchg
pop
jbe
insb
pop
scas
in
outsb
mov
icebp
cmp
jl
inc
mov
or
push
push
and
xchg
xor
adc
inc
push
adc
popa
shrl
push
int
xchg
xor
adc
add
add
mov
ret
gs
out
ret
pop
jns
into
out
push
mov
and
jne
test
out
lods
or
rcrl
mov
jmp
je
ja
sbb
bound
push
mov
cmp
cs
repnz
jo
push
in
insl
movsb
mov
leave
ja
ss
adc
outsb
stos
pop
mov
cmp
or
and
sbb
cmp
aam
inc
cmp
mov
mov
fstpl
ja
or
cli
icebp
outsl
fisttpl
jmp
clc
mov
sub
cwtl
mov
mov
test
enter
cmp
push
repz
cltd
les
adcl
push
arpl
iret
adc
jp
or
lcall
xchg
je
movsb
insb
cmovg
adc
les
int
xchg
push
and
pop
adc
in
xor
cmp
lret
inc
lret
and
fcomps
movsl
pop
addb
shl
pusha
rcrl
mov
adc
mov
or
mov
repz
jmp
scas
cmp
xchg
mov
jg
mov
pusha
lret
dec
pop
andb
mov
aaa
jae
ficomps
mov
inc
push
lods
pop
sbb
nop
add
lret
sbb
push
loope
jbe
mov
int
jmp
rcrb
test
jo
jg
in
sub
adc
mov
xchg
les
jecxz
dec
xchg
mov
adc
jo
idivl
inc
xchg
xorl
push
add
fadds
push
stc
xchg
fucomip
fidivrs
mov
test
mov
fsubrl
adc
adc
lods
dec
aam
and
int
pushf
fs
xor
cltd
push
cmp
inc
frstor
and
and
fbstp
rorl
dec
and
pusha
mov
sbb
mov
je
call
nop
xchg
dec
fwait
int
daa
xor
stos
jg
jns
push
xchg
adcl
add
push
pusha
lock
xchg
ss
xchg
mov
xchg
add
mov
xor
sti
adc
dec
mov
fdiv
movsl
xor
inc
lahf
sbb
sbb
or
test
cmp
sub
ds
lret
jmp
pop
inc
addl
mov
cmp
iret
cltd
shll
pop
xchg
iret
xchg
fiadds
out
stos
jmp
jge
aaa
nop
cmp
dec
pop
cmp
insl
pop
les
xor
cmc
sub
mov
enter
cltd
fiaddl
cmp
inc
pushf
call
jae
les
xchg
inc
loope
test
ss
inc
sahf
xor
sbbl
arpl
out
sub
pop
mov
adc
int3
lret
aaa
cmp
insl
test
xchg
popf
push
jg
pusha
jge
lock
stos
cwtl
push
or
push
es
cmp
data16
sbbl
daa
frstor
aaa
in
outsb
movswl
push
stos
mov
arpl
adc
xchg
test
sub
repz
ds
adc
imul
push
xchg
or
xor
adc
dec
pop
dec
addr16
clc
cmpsl
mov
cwtl
dec
or
mov
cmp
xchg
sub
cmpsl
jp
inc
xor
loope
jp
rolb
mov
pop
xor
xchg
loope
jne
adc
imul
inc
inc
mov
mov
mov
dec
jne
dec
pop
pushf
mov
call
jo
movsl
or
aas
fs
mov
jge
mov
sub
and
sbb
mov
jno
cmpsb
aad
pop
pusha
jmp
sbb
ljmp
add
cmp
or
call
pop
test
and
push
cmp
cs
int3
inc
xor
mov
movsl
dec
xor
add
jno
cmp
aam
outsl
jnp
enter
mov
push
mov
pandn
jl
mov
jns
and
mov
jecxz
es
sbb
sahf
add
lret
rcl
scas
cmp
jae
movlps
nop
inc
push
test
xchg
pop
popa
jecxz
cmpl
jns
xchg
data16
nop
sbbl
rcl
xor
xchg
xchg
pop
pop
xor
mov
xor
dec
mov
pop
dec
enter
gs
xor
in
out
pop
fs
and
fsubrl
loopne
stc
js
into
lea
mov
nop
adc
fldpi
sub
xor
xor
and
pop
scas
jbe
and
push
fdivs
stos
jge
jle
rcrb
sahf
repnz
jl
dec
mov
lock
sbb
sub
das
fdivr
pushf
in
and
xor
mov
lahf
cmp
bnd
ljmp
or
inc
inc
add
or
xorb
ljmp
gs
data16
sbb
idivb
sub
and
sbbl
mov
jb
cmp
lock
or
loop
xchg
mov
adc
sbb
ljmp
xchg
sub
jge
and
mov
ss
jne
add
mov
dec
incl
mov
sub
fstpt
jnp
jmp
je
jmp
idivb
add
stos
and
clc
stos
add
fsubrs
cmp
jmp
lret
fidivrs
ret
push
cmp
sarb
adc
add
scas
jg
dec
inc
adcl
cltd
xchg
and
inc
jbe
jl
mov
icebp
mov
mov
adc
fldt
mov
call
loopne
sub
out
adc
mov
dec
xlat
subb
mov
mov
xchg
jnp
sub
pop
arpl
jecxz
sahf
adc
pop
fisubrs
imul
jnp
mov
sub
jb
jl
orl
cmpsl
mov
cmpsb
and
sti
enter
jnp
dec
xor
adc
test
jo
rclb
mov
mov
lret
sbb
xchg
repz
push
mov
clc
push
data16
pop
mov
je
cmp
stos
fdiv
lock
push
popa
aam
lds
mov
dec
lock
and
enter
sbb
hlt
mov
sti
push
and
sub
bound
mov
imul
and
xor
stc
sub
dec
pop
mov
and
stc
pop
or
sub
nop
pop
lahf
fidivl
divb
jb
mov
mov
sti
scas
stos
jg
out
add
lret
fisubl
dec
aas
push
sahf
jg
sub
rcll
sub
add
insl
and
popa
or
pushf
dec
sbb
sub
out
pop
js
push
sub
push
scas
sar
pop
movsl
xchg
out
adc
sub
shrb
inc
es
int3
gs
js
xlat
rcll
and
push
inc
lea
ss
inc
stos
arpl
push
xchg
into
xchg
fisubrl
test
into
push
mov
adc
pop
cmpsl
stos
jns
mov
dec
rclb
cmp
daa
fnsave
mov
rcrb
pop
insl
jae
mov
rcll
ret
cmp
icebp
lea
adc
xchg
repz
popf
cmp
adc
sub
shrb
cmc
adc
and
mov
pop
aad
out
sar
and
fwait
in
push
sub
lds
mov
push
push
in
rclb
insl
movsl
push
imul
iret
je
fdivrl
pop
daa
imul
aam
lock
iret
int
sbb
rol
movsl
and
mov
lret
and
add
clc
pusha
paddw
push
jne
push
pop
data16
in
in
cmpsl
dec
xor
mov
enter
sbb
xchg
mov
mov
push
adc
in
inc
push
data16
and
inc
loope
push
out
xor
mov
aad
sbb
in
rcll
lcall
bound
push
test
leave
push
cli
pop
xor
scas
jg
je
push
ja
inc
fnsave
cmp
adc
sbb
sub
push
loop
adc
xchg
mov
cmp
inc
jbe
push
imul
xor
xor
mov
mov
bound
fnstcw
loop
inc
je
int
push
aas
add
sti
cwtl
loopne
jo
call
sbb
cs
aaa
dec
lods
lds
mov
push
xchg
imul
jno
dec
cmp
push
mov
jg
xchg
push
jo
in
inc
xchg
jmp
repnz
or
dec
cmp
and
call
push
pop
aad
js
das
scas
push
gs
out
lret
mov
out
inc
inc
adc
mov
jo
jge
xchg
and
in
test
and
loop
mov
dec
out
repz
xor
aaa
jmp
inc
mov
dec
or
jg
gs
xor
pop
push
out
xchg
mov
mov
mov
clc
jno
or
cwtl
int3
loop,pt
cmovo
aaa
mov
xchg
and
cmp
mov
cld
add
xchg
lea
lods
adc
arpl
add
pop
lahf
popa
pop
mov
imul
mov
mov
cmp
stos
jbe
test
aas
push
adc
add
pop
xor
or
push
stos
hlt
fisubl
or
loop
shll
and
adc
xchg
imul
stc
sbb
cmp
lahf
dec
jns
repz
xchg
sti
add
push
decb
xor
cmc
sub
jo
rcl
std
cmc
movsb
inc
mov
call
mov
jb
add
enter
pop
jp
inc
in
sbb
mov
stc
pop
or
icebp
addr16
xlat
adc
ret
shrl
cmp
repnz
ret
fdivs
andl
xor
fisttpll
lods
repz
adc
ds
mov
hlt
ljmp
cltd
add
movsl
out
arpl
mov
ljmp
in
arpl
add
inc
leave
add
call
les
xor
in
es
scas
enter
dec
popa
xor
sub
sub
cmp
in
mov
cmpsl
dec
ror
lea
mov
in
xor
out
repz
jns
bound
mov
fimull
dec
and
movsl
sbb
or
shrl
test
cmovae
ljmp
cmpsb
push
add
jge
and
fwait
call
mov
dec
dec
cs
dec
adc
cmp
or
test
cltd
flds
sub
out
pop
xchg
adc
mov
andl
ja
pop
pop
mov
sahf
push
sbb
cmp
inc
mov
adc
inc
add
cltd
repz
mov
stos
gs
out
nop
push
rorl
xor
xor
cs
sub
enterw
adc
shr
lods
cmpsl
outsl
mov
push
ljmp
rclb
inc
lds
test
xchg
push
push
cmpsl
jge
mov
hlt
imul
lods
mov
dec
pop
cmp
sub
xor
xor
xchg
dec
dec
jns
add
push
test
jb
int
push
push
jnp
in
stos
test
sbb
fnsave
outsl
push
jo
cwtl
push
and
loopne
daa
adc
push
mov
xchg
adc
or
cwtl
jp
divb
pop
bound
sbb
inc
or
mov
mov
vcvtss2usi
loope
sarb
int
scas
sbb
mov
pop
and
or
adc
in
pop
sbb
test
pop
or
cs
mov
loope
mov
pop
add
xchg
mov
jno
enter
or
in
cmpsl
cld
xchg
in
dec
inc
in
dec
jbe
test
xchg
pop
jne
in
mov
push
loop
fwait
outsl
into
jmp
movsl
icebp
ds
fcmovbe
push
pop
in
push
sbb
stc
mov
push
mov
inc
jnp,pn
jo
test
lahf
stc
xchg
pop
pop
mov
dec
or
fwait
bnd
fnsave
lods
dec
mov
sahf
loop
jge
lret
imul
jecxz
jle
add
call
add
je
cmpsb
out
or
mov
sti
mov
xlat
test
out
aad
adc
push
jns
pop
xchg
popa
imulb
push
cmp
add
and
icebp
popa
cmp
dec
test
cmpsl
sahf
fcoml
mov
adc
push
dec
iret
aam
mov
sub
nop
and
adc
aaa
es
out
std
fdivl
inc
fisubrs
mov
jnp
mov
jg
pop
dec
nop
mov
jbe
mov
xchg
insl
dec
ret
xchg
mov
cmc
jno
and
adc
pop
mov
in
pop
repnz
jg
lods
loope
popa
add
rolb
aaa
std
adc
mov
mov
mov
aas
rcll
mov
dec
or
out
mov
scas
les
xor
add
mov
popa
jge
lods
jl
hlt
inc
mov
lgdtl
sub
adc
ds
es
dec
dec
cmpsb
cs
sbb
in
ja
pushf
ds
push
lcall
adc
sub
ret
pop
stc
xorl
mulb
fisubl
and
fdiv
jle,pn
imul
mov
push
inc
jl
xor
cmc
mov
fsubrl
mov
mov
cmpsb
fcom
popf
aas
jle
lods
or
movsl
adc
jmp
xchg
xor
dec
rcrb
mov
push
lahf
inc
mov
call
push
mov
lods
or
push
cmp
loopne
fisttpl
push
out
hlt
xchg
jne,pn
int
adc
and
jno
xchg
sbb
jecxz
int
cmp
pop
cli
lea
enter
inc
jmp
data16
push
mov
cli
lret
mov
movsl
ja
and
lock
xor
dec
stos
mov
mov
gs
rcrl
and
outsb
jle
std
jmp
fimull
popf
das
call
xchg
push
jle
xor
jae
out
xor
outsb
cmp
jo
aas
and
and
add
mov
lods
mov
wbinvd
mov
pop
iret
jle
icebp
xchg
fbstp
fwait
gs
jl
xor
inc
lret
mov
rclb
mov
or
pop
insl
mov
loope
xlat
mov
add
xor
jmp
ljmp
mov
xorb
idivb
ja
insl
or
rorl
dec
cmp
out
and
addr16
jb
ja
push
lcall
mov
es
ficomps
aam
popa
push
jnp
in
roll
lahf
adc
fistpl
cmp
shl
pop
movsl
jecxz
or
mov
sbb
imul
mov
sub
push
cli
in
adc
and
mov
mov
cmpsb
push
mov
repz
mov
fisttpl
cs
push
je
mov
pop
dec
xchg
pop
subb
mov
iret
out
fsubrl
inc
sbb
xor
inc
sub
sub
cmp
mov
jbe
stos
movsl
nop
out
lock
fmuls
push
bound
dec
and
fimull
imul
fistl
add
jb
mov
cmp
adc
jns
insl
jb
test
out
fwait
pop
cmp
mov
cmpsb
mov
jle
jmp
insl
es
fwait
punpckhwd
movsl
aam
mov
adc
cmp
iret
push
dec
and
sbb
and
lds
xchg
lea
cmovs
or
adc
inc
mov
sub
xlat
movsb
xlat
lock
lods
lods
dec
int3
fisttpll
mov
push
les
push
cmp
jbe
push
repnz
filds
push
sbb
test
clc
push
and
sti
or
jno
rorl
cmpsl
pop
cmp
add
clc
inc
fldenv
sub
leave
jb
decb
sti
push
fdivl
mov
push
sub
push
das
and
std
and
movsb
cmp
arpl
push
push
rcl
stos
push
sub
vsqrtss
cmp
fidivs
cmpsl
lock
dec
mov
jmp
cwtl
jp
push
cmp
int
orps
rorb
xor
mov
lret
dec
subb
pop
sbb
inc
ljmp
loop
mov
push
scas
lock
jne
push
xor
js
enter
scas
movsl
jmp
lock
loope
and
mov
stc
popa
js
xchg
push
jle
mov
sbb
jae,pn
mov
repz
mov
in
lds
push
xchg
fcomp
lret
loopne
std
scas
sbb
mov
jmp
jge
push
sahf
xor
mov
hlt
mov
test
xchg
jle
out
cs
inc
out
or
cmpb
movsb
fsubs
imul
pop
cmpsb
inc
das
psubusw
ljmp
dec
adc
aad
out
pop
xor
jl
jp
lahf
sub
cmpsl
add
mov
xor
cmpsb
dec
es
movsb
mov
pop
mov
dec
push
hlt
mov
adc
and
push
pop
lret
and
sbb
fistl
int
aad
ret
arpl
sbb
mov
in
arpl
and
mov
ds
sub
clc
add
fucomp
testl
jae
mov
addr16
mov
in
jmp
inc
pop
gs
scas
dec
pop
test
cltd
pop
mov
repz
push
pop
aaa
pop
aas
add
jo
icebp
dec
mov
popa
dec
mov
pop
sbb
sbb
test
pop
movsb
sbb
adc
xchg
movl
add
adc
fmuls
sbb
lea
je
push
stos
xchg
sbb
cmp
mov
sbb
cmp
inc
cmp
insl
dec
dec
mov
lahf
mov
hlt
add
push
push
cmpl
test
and
cmp
rolb
test
sbb
pop
adc
sub
push
pop
arpl
jge
sbb
jmp
dec
std
cltd
std
stc
pop
mull
pop
push
dec
fs
inc
loope
pop
mov
sub
inc
mov
loopne
push
and
jp
add
xchg
shr
into
xor
in
jb
mov
pop
dec
lcall
push
cmp
into
xor
add
arpl
and
push
mov
jo
mov
orl
sbb
jne
cld
mov
loopne
or
xchg
xchg
mov
sbb
cmc
testl
les
and
xor
inc
sbb
popf
xor
push
pop
popa
stos
sub
push
frstor
inc
inc
dec
outsl
add
and
lds
lods
add
scas
fdivrl
sbb
xchg
flds
mov
aaa
add
lret
xor
daa
push
inc
jg
idiv
and
and
xchg
pop
sub
gs
sbb
pop
cli
lds
jg
outsl
cwtl
ffree
cs
mov
mov
cltd
jno
stos
fldcw
fwait
pop
push
jnp
jp
rorb
clc
and
push
mov
sbb
into
cmpsb
out
shll
std
int3
adc
push
cmp
xor
ds
outsb
and
push
mov
push
dec
pop
dec
jae
outsb
push
or
sbb
sbb
fidivs
jb
inc
sbb
xlat
fisttpl
decl
jl
xor
pop
enter
sub
and
or
loop
add
xchg
sbb
aad
shrl
xchg
call
ficomps
mov
jle
ss
xchg
shl
aaa
mov
add
repnz
sub
mov
push
push
aam
ror
cs
gs
pop
or
lret
add
inc
push
or
je
lods
xor
jae
cltd
mov
pop
push
aad
fnclex
rorb
rorb
xor
mov
dec
fcomp
dec
out
add
push
stos
push
xlat
pop
repnz
insl
cmpsb
sbb
addl
inc
pop
icebp
in
cmp
fsubrl
xchg
lds
in
cwtl
arpl
dec
inc
sahf
inc
add
sahf
push
xor
xor
mov
std
lcall
mov
mov
std
and
mov
stos
adc
add
cli
sbb
std
shlb
xchg
cmp
jecxz
cmc
enter
out
sub
outsb
mov
xor
jle
popa
mov
add
lock
test
or
jg
xor
push
int
movb
sub
jmp
ficompl
in
jge
xchg
ljmp
xchg
insb
adc
mov
mov
mov
movsl
jg
dec
sub
sbb
cmp
insl
daa
repz
jb
and
pushf
sbb
xor
adc
xchg
out
pushf
adc
pop
sbb
jno
cmc
jg
fcomps
pushf
repz
inc
cmpsl
jne
mov
loopne
and
cmp
fsts
cwtl
rcrl
out
orl
loope
pop
adc
dec
sbb
xchg
inc
pop
cltd
mov
cltd
lret
jmp
mov
jge
fdivr
out
pop
xchg
mov
cmpl
mov
jo
pop
jbe
sub
push
xor
sbb
clc
xor
adc
pop
repz
ja
push
mov
fcoms
xchg
and
lods
pop
xchg
jge
mov
in
xor
xor
fsubrs
lods
mov
jbe
stos
jae
push
rclb
fmull
adc
outsb
mov
pop
and
mov
mov
and
inc
xor
mov
ja
xor
and
pop
cmpsl
xchg
mov
movsb
mov
jl
in
dec
inc
push
aam
imul
stos
repz
into
arpl
mov
icebp
clc
daa
lea
ss
mov
movl
mov
leave
mov
cltd
sub
test
add
inc
adc
out
loope
inc
in
or
fdivrl
testb
out
mov
inc
aaa
mov
js
pop
insb
and
dec
lods
mov
test
pop
movsb
leave
jecxz
adc
pusha
repnz
or
and
outsl
stos
mov
leave
mov
inc
mov
jl
test
pop
xor
out
cmpsl
les
inc
addb
in
outsl
out
xchg
jae
imul
lret
cmp
imul
shlb
loop
dec
jl
and
mov
add
in
push
adc
pop
sar
jnp
frstor
jae
fistl
jne
and
mov
je
lods
pusha
lret
pop
mov
clc
roll
cmp
scas
out
adc
data16
mov
inc
iret
mov
hlt
stc
mov
dec
push
lret
andl
loopne
ja
hlt
push
xchg
out
mov
shlb
or
push
inc
mov
add
cmp
sti
add
imul
push
sub
adcl
cld
cwtl
shlb
pushf
cmpsb
daa
mov
inc
add
fs
jae
xor
xchg
fbld
repnz
repnz
mov
bound
push
mov
xchg
lret
outsb
lret
mov
insl
dec
lods
mov
call
cwtl
fdivp
inc
ficoms
lea
push
xchg
jae
push
add
dec
stc
nop
ret
sti
aad
jg
mov
inc
add
push
mov
ret
cmc
jmp
sub
cltd
xchg
cmpb
sbb
mov
mov
hlt
shll
mov
mov
mov
mov
or
mov
stc
jge
cmp
cltd
sarb
push
sbb
cmp
rorl
and
ds
jae
pop
and
jge
mov
mov
mov
fldenv
leave
jmp
test
movsl
or
hlt
loope
add
cmp
insl
dec
sti
or
mov
sahf
hlt
and
cmp
pop
xchg
adc
jo
std
jl
pushf
aaa
add
outsl
insb
xchg
xchg
and
mov
mov
mov
adc
xchg
aam
das
xchg
jo,pt
adc
inc
dec
jbe
dec
sub
rcrb
mov
or
xchg
xchg
mov
mov
jne
mov
cwtl
insb
cmp
ljmp
je
pop
fmuls
add
adc
jne
sarb
ror
xor
pop
and
out
cld
and
push
push
movsl
jmp
int
pop
mov
in
test
pop
xor
dec
add
rorb
dec
mov
jno
xor
movsl
mov
and
clc
or
adc
sbbl
daa
lahf
rcll
xor
dec
imul
add
in
rcrl
sbb
hlt
jo
cmpsl
je
sbb
fldenv
dec
movsb
jge
ljmp
xchg
cmp
aam
mov
jg
out
cwtl
cltd
icebp
mov
push
mov
cmpsl
add
gs
gs
push
insb
xor
xchg
inc
inc
punpcklwd
inc
add
imul
add
push
imul
adc
int
ds
testl
inc
xchg
icebp
jns
int
imul
aaa
data16
jl
pop
jne
sub
xchg
pop
loop
jno
mov
mov
insb
int3
mov
sbb
ret
cltd
ja
fs
loope
mov
or
mov
xor
cmp
dec
jae
ja
jns
mov
in
sub
outsl
and
mov
push
xchg
pop
add
cltd
and
popf
lcall
lods
and
mov
mov
pop
xor
sub
out
rcrb
cmp
cwtl
jb
and
cltd
or
imul
push
enter
mov
mov
aad
cmpsb
into
push
or
movsb
icebp
clc
add
mov
fnsave
lahf
push
mov
mov
enter
jmp
and
aam
orb
out
loop
inc
into
sub
lds
notb
mov
mov
fistpl
sahf
outsb
outsl
iret
pushf
mov
xchg
call
xor
mov
add
movswl
fcmovnbe
dec
cmp
fistps
pop
add
popa
cs
stos
mov
lcall
cmp
shlb
in
pop
cltd
pop
sbbl
in
stc
int3
pop
aaa
aaa
test
push
pusha
sbb
add
inc
jecxz
sub
inc
jg
or
in
loope
movsl
pop
ret
in
xchg
lock
mov
mov
mov
loopne
stc
mov
xor
lret
rcrl
nop
js
mov
pop
dec
pop
and
fdivrl
fldcw
and
cmp
bnd
push
pop
mov
pop
mov
jg
mov
mov
sub
shlb
ror
pop
aas
adc
push
mov
jb
or
push
mov
es
pusha
mov
clc
inc
jp
testl
mov
mov
pop
fs
mov
push
or
add
jge
xchg
push
jl
ds
and
clc
push
pop
int3
dec
das
shrl
rcrb
mov
and
in
jb
push
outsl
cmp
fdivs
xchg
nop
xchg
in
inc
movsb
add
bndstx
xor
test
ljmp
loopne
inc
inc
mov
pop
outsb
lock
ret
std
lcall
mov
jge
fcmovnbe
jle
add
push
cmp
mov
in
adc
mov
out
out
call
arpl
lahf
push
mov
mov
mov
mov
pop
rcrl
jbe
cltd
sub
push
cmp
mov
loopne
inc
lret
dec
mov
adc
mov
sbb
sub
xor
scas
dec
and
pop
rcrb
int3
ss
cmpsb
pusha
fwait
lret
xor
sbb
les
dec
push
xlat
adc
pop
scas
adc
ds
push
pop
jno
xchg
or
int
mov
xor
je
dec
sub
pop
fistps
push
push
pop
inc
mov
mov
fildl
xchg
jp
pusha
es
sbb
aas
mov
mov
loopne
cmc
xor
pop
xor
sti
loopne
and
add
sbb
out
lds
cmp
cltd
mov
inc
cmpsb
pop
inc
adc
addr16
and
test
inc
int3
test
loopne
testl
xor
push
pop
scas
push
aaa
or
sub
gs
xor
add
scas
mov
lea
in
int
or
sub
aas
and
dec
jnp
fldl
xchg
xchg
sub
xor
fimull
lock
fwait
sbb
cltd
imul
fidivrl
inc
movl
jge
lahf
xlat
out
mov
inc
lret
xchg
fdivs
cmp
mov
arpl
adc
or
inc
rol
sbb
cmp
xchg
jnp
sub
push
imul
test
pop
fsubl
dec
faddp
repnz
jl
outsb
ret
repnz
lds
ret
jle
in
push
add
add
add
fs
sbb
mov
fcomps
adc
test
xor
das
stos
inc
dec
mov
dec
or
and
cld
sbb
xchg
or
or
sub
insl
fsts
subb
cmp
mov
hlt
sbb
jl
adc
imul
insl
test
je
jmp
jno
xlat
ja
out
or
mov
popf
jae
in
call
dec
mov
xchg
pop
sub
cmc
mov
xor
lock
and
mov
or
stc
push
aam
and
dec
nop
fisubrl
mov
push
adc
aaa
cmpl
lods
test
dec
add
ss
call
cmp
decb
cld
stos
push
mov
out
sub
lods
sets
mov
sub
and
push
out
adc
cmpsl
js
test
sbb
add
jnp
inc
stos
fcmovnbe
push
out
ljmp
int
cmp
inc
xchg
push
loope
into
sbb
xchg
lahf
pop
incb
add
jne
inc
fidivl
pop
fstps
mov
inc
or
in
xchg
mov
mov
mov
scas
in
fisttpll
pop
xchg
repz
leave
cld
fnstsw
into
int
push
imul
mov
popa
pop
enter
hlt
fdivrl
arpl
les
xchg
mov
mov
mov
pusha
hlt
adc
push
mov
pusha
lahf
or
das
xchg
pop
fwait
in
xchg
jns
sarb
and
stc
push
pop
orb
xor
test
jbe
repz
mov
inc
insb
mov
xor
addr16
ss
pop
and
ljmp
sti
mov
inc
loop
dec
in
xchg
sbb
dec
adcb
testl
mov
lock
outsl
and
or
sbb
mov
daa
lret
pop
jne
push
lock
jns
sbb
sbb
dec
xchg
and
adc
and
xchg
jl
add
test
int
fwait
imul
pop
addb
xor
inc
mov
jg
sarb
mov
out
cld
loop
jge
xlat
adcb
adc
mov
xor
ret
xor
insb
push
jne
pop
mov
lock
push
cli
push
mov
dec
enter
lds
sti
mov
cmpb
and
cld
lret
stc
iret
mov
arpl
sarl
sub
inc
and
xorb
cwtl
lods
inc
orb
xchg
lcall
dec
dec
mov
mov
inc
in
mov
inc
in
jge
add
cmpsb
orb
sbb
out
mov
and
sbb
cmp
mov
shll
mov
test
out
cmp
adc
add
addr16
sahf
add
dec
fs
or
add
add
mov
mov
shl
fildl
daa
dec
pop
dec
push
fimull
sarl
cltd
popf
pop
xchg
in
adc
jnp
add
cltd
stos
insb
pop
xor
les
std
imul
cmp
fstpl
popf
inc
clc
mov
pusha
or
ss
sahf
push
dec
faddl
idivl
xchg
mov
fisttpl
pextrw
lahf
push
in
daa
scas
adc
pop
mov
pop
sldt
imul
inc
pop
out
and
jns
dec
xchg
mov
test
mov
sbb
or
push
shlb
and
outsb
xchg
mov
xor
rorl
inc
fiaddl
push
sub
mov
inc
out
mov
push
xchg
inc
add
add
rcrl
add
mov
js
add
cmpsl
ret
and
add
jnp
inc
add
cmp
mov
rolb
dec
add
add
jnp
add
add
or
add
mov
add
sub
add
iret
or
cwtl
add
add
cli
inc
add
add
add
sub
cmp
add
aas
insb
inc
add
mov
add
sub
inc
add
add
add
add
add
add
add
sub
add
hlt
sub
mov
ret
sbb
sbb
imul
pop
mov
mov
inc
stos
cmpsb
int
sti
sahf
lret
pop
cmp
mov
movsl
scas
mov
out
cmp
mov
adc
sub
xor
pop
scas
push
aad
sub
jle
icebp
loopne
stos
ja
loopne
lea
jp
fcmove
pop
pop
sub
imul
cmc
adc
dec
cmc
sub
sub
movb
push
jnp
or
and
outsl
adc
mov
adc
lret
mov
cmp
pop
push
adc
lret
xchg
cmp
mov
scas
xchg
push
jl
shll
jecxz
les
adcb
push
repnz
bound
cmp
pushf
scas
xchg
sub
lea
div
push
push
mov
jmp
inc
shll
jnp
push
mov
in
aam
jecxz
mov
cmovno
push
loope
adc
in
arpl
add
popf
stos
sbb
insb
stos
ret
jnp
lods
inc
ljmp
sbb
push
sti
imul
in
push
and
jbe
gs
cmp
cmpsb
mov
test
aas
cmpsb
mov
sti
pop
rorb
insb
xor
bound
or
adc
cmp
sbb
mov
enter
mov
stc
mov
dec
xchg
aam
jns
ret
test
daa
outsl
jne
and
lock
pop
dec
mov
jl
lds
fldcw
xchg
js
fst
test
movsl
sbb
ret
flds
testl
lea
les
inc
scas
aam
lea
mov
mov
and
rcr
test
adc
sub
invd
les
rcll
xchg
inc
mov
push
jne
cmp
cltd
and
and
adc
xchg
and
or
cmp
das
mov
mov
ss
loopne
xor
push
push
inc
fwait
clc
and
aam
cltd
adc
push
fcmovbe
inc
adc
mov
lcall
adcl
and
ja
xchg
testb
dec
data16
adc
push
sub
pop
mov
mov
ja
popa
pop
ficompl
fcomip
xor
inc
add
xlat
xchg
jns
sub
add
add
mov
test
idivl
into
sbb
ret
call
mov
mov
popf
leave
out
adc
add
add
and
out
mov
or
xchg
jecxz
jbe
cli
push
dec
inc
mov
into
imul
popf
mov
pop
dec
clc
daa
inc
jae
out
mov
jb
push
jno
fldcw
lcall
dec
fwait
mov
jg
imul
popf
push
fs
jns
jmp
jge
addr16
je
sub
out
fstpl
push
mov
mov
xlat
and
dec
pop
pop
mov
pop
jne
ja
sbb
or
bound
ret
cmpsb
pop
push
xchg
arpl
out
fs
orb
dec
shrb
mov
icebp
movb
push
add
sub
lods
cmp
xor
cld
mov
mov
pop
xchg
adc
cltd
adc
aaa
mov
cmp
pop
fisubrs
je
lret
or
fiadds
loop
repnz
testb
mov
push
and
movsb
iret
popf
insb
mov
jg
sahf
ret
adc
sub
movsl
icebp
call
cmpsl
shrl
sbb
mov
stos
dec
insl
cmp
add
push
es
pushw
jb
inc
mov
test
or
and
pop
add
in
pop
lret
repnz
lret
fcomps
insl
pop
ja
inc
call
mov
pop
sbb
cmpb
sub
leave
jb
jle
addl
jo
fstpl
lods
jo
sub
test
sbb
jae
push
sub
aaa
in
and
mov
pop
jl
sahf
scas
fistpll
mov
out
push
es
fcomip
cli
jle
insl
jno
int
xchg
mov
cmp
arpl
outsb
xchg
pop
orl
push
xor
imul
jge
sbbb
ljmp
jne
daa
leave
jge
test
addb
adc
sub
push
js
dec
outsb
stos
push
ljmp
fcmovu
or
inc
insb
xor
sub
mov
cmp
enter
test
cmp
xor
add
repz
xor
dec
lock
sbb
enter
js
lds
in
out
dec
pop
inc
and
rolb
lods
int
or
dec
sarl
lods
mov
or
cli
scas
inc
mov
and
pop
lahf
negl
and
shlb
hlt
cmp
cltd
mov
jg
xor
xchg
sbb
jno
mov
jl
hlt
adcl
and
xor
fsubrl
pop
xchg
stc
testl
fcompl
prefetchw
dec
out
ret
xchg
xchg
enter
lcall
inc
add
fmul
jge
sub
enter
pop
rorb
sub
sbb
outsb
arpl
cs
mov
push
je
dec
cmp
dec
mov
pop
mov
mov
sub
jo
je
jno
ficomps
std
jbe
out
test
inc
jp
fld
shr
and
jno
xchg
subb
mov
mov
pop
fcompl
cmp
lods
jecxz
das
insb
fcmovne
or
inc
in
repz
mov
imull
jecxz
adc
adc
mov
stc
dec
cmp
mov
mov
xor
sub
pushf
push
xor
ss
pop
xor
movsl
stc
std
jne
cld
in
xchg
shll
push
ljmp
jmp
inc
xor
xor
ss
pusha
adc
arpl
test
das
aas
nop
dec
or
jae
cs
rol
mov
shl
ficompl
test
cmp
mov
jmp
ret
adc
sahf
fildll
cmp
into
pop
std
xor
testb
nop
adc
hlt
add
push
je
imul
out
or
es
adc
scas
inc
add
dec
push
ret
les
jp
mov
js
scas
mov
adc
aas
aas
fs
test
ljmp
sbb
adc
cmp
mov
mov
add
push
insl
fildll
cmp
inc
inc
add
jns
in
inc
call
fnstsw
insl
ss
pop
lea
push
sub
or
mov
in
and
jle
jno
xchg
ret
mov
or
or
mul
cmp
jle
and
insl
mov
imul
leave
mov
cs
sub
imul
push
xor
jo
push
lods
ljmp
dec
insb
pop
call
and
or
adc
jb
sahf
dec
aam
jge
mov
xchg
fwait
xchg
je
dec
or
cmp
add
add
adc
dec
inc
jae
in
imul
lret
jmp
imul
cmc
sub
imul
rcll
xor
lahf
pop
dec
dec
lea
loop
jnp
push
inc
and
xor
mov
cmc
inc
sub
mov
icebp
shl
shl
sbb
add
scas
ds
mov
or
ja
pusha
push
push
mov
push
inc
adc
xchg
data16
fs
into
jns
xor
fwait
jg
stos
push
adc
dec
outsl
jbe
xor
pop
cltd
xor
test
cmp
rorb
xor
mov
adc
lahf
int
add
mov
jl
mov
push
xchg
push
and
mov
dec
and
dec
push
xor
daa
jecxz
push
cmpb
fcom
and
sbb
rorb
incl
pusha
mov
sbb
insb
sbbl
imul
mov
arpl
popf
pop
push
lret
shlb
xlat
outsb
pop
push
clc
adc
fisttpl
das
adc
ret
nop
cmp
cmp
add
call
add
sub
mov
in
xor
inc
cli
and
ret
into
fistpll
lods
xor
scas
push
lea
cli
mov
int
ljmp
add
dec
into
dec
mov
add
xchg
addl
clc
lcall
cmp
push
adc
sbb
and
mov
jae
mov
cmpsl
pop
pusha
cmpsb
adc
pop
into
test
outsb
sbb
jno
popa
sbb
inc
mov
ja
inc
fisttps
mov
dec
mov
dec
es
push
mov
mov
inc
lahf
pushf
push
loopne
mov
and
or
out
addr16
jmp
mov
lea
mov
out
xor
cmp
jecxz
push
addr16
insl
lret
dec
sub
xchg
sbb
ljmp
ror
nop
cmp
insb
lret
les
jno
jg
mov
out
add
daa
sti
ja
xor
popa
das
jp
push
pop
dec
shl
mov
jp
inc
lods
inc
shll
ds
push
mov
inc
negb
test
cmp
push
fsubrs
pop
jl
dec
mov
dec
test
mov
das
jne
aaa
jb
dec
in
mov
xchg
ficomps
mov
cmp
pop
xchg
fldt
in
std
push
cmc
pop
bound
gs
imul
sbb
mov
add
adcb
mov
xchg
lahf
lahf
and
dec
jg
push
mov
fprem1
loopne
mov
lret
inc
enter
daa
js
inc
scas
in
test
aam
push
cld
cli
daa
push
add
jns
hlt
cmp
daa
mov
sti
jl
inc
fistpl
aad
mov
dec
jae
lods
dec
shll
mov
pop
jne
int
cmp
mov
mov
rol
shlb
jmp
ret
int
inc
sub
int
jle
jmp
insb
hlt
in
mov
pop
push
mov
aaa
xchg
xchg
leave
popa
xor
dec
mov
xor
ss
loope
nop
xor
xor
add
int3
loopne
test
out
daa
jecxz
xchg
enter
lods
inc
andb
mov
add
push
jno
cmc
dec
xor
sub
movsb
cmp
jnp
sub
iret
fsubrp
mov
cmp
insb
jae
ret
ret
xor
clc
ret
ret
lcall
and
or
movsl
test
repnz
pop
mov
loopne
pop
pop
mov
cltd
clc
stos
jnp
ljmp
dec
inc
xor
adc
and
adc
loope
arpl
sbb
jg
mov
cmp
or
leave
int3
out
inc
jb
inc
daa
and
fnstcw
scas
and
inc
andl
pop
push
mov
test
fbstp
pop
in
mov
dec
aad
or
xor
mov
notl
sbb
xor
xchg
and
sbb
dec
cmpsl
mov
outsb
xchg
push
stc
dec
adc
push
loop
cwtl
dec
cmp
push
jb
popa
cmp
mov
add
pop
add
rcrl
jbe
mov
out
dec
lds
fisubs
addr16
iret
test
adc
and
or
adc
andnps
add
insb
jle
daa
pop
add
inc
push
mov
sub
cmpsb
jmp
jae
pop
icebp
mov
imul
sub
mov
add
sub
dec
hlt
mov
cld
pop
xchg
dec
ret
xor
or
into
int3
push
mov
mov
mov
pop
icebp
inc
xor
jcxz
ficoms
adc
jp
fcomi
dec
mov
xor
ficomps
fdivl
ja
fadd
scas
jb
push
pop
mov
adc
jb
jmp
jg
lods
arpl
pop
push
dec
inc
jmp
xor
inc
xor
cmc
scas
lock
adcb
dec
shll
dec
pop
sub
mov
adc
lods
fwait
adc
sub
loop
mov
ja
adc
push
adc
scas
out
xchg
sbb
inc
in
jg
insl
mov
in
pop
adc
add
in
andl
scas
xchg
cld
fcmovbe
push
sub
mov
fsts
adc
jbe
call
cmp
jmp
or
bnd
add
xchg
jecxz
scas
xchg
lods
stos
and
rcl
xchg
out
mov
inc
lret
repz
sbb
push
lods
xchg
xchg
orl
cmp
mov
mov
into
jp
stos
push
ret
pop
stos
es
cwtl
adc
in
jnp
ret
or
scas
fimuls
movsl
ret
push
mov
jecxz
icebp
dec
aad
xor
inc
sub
insl
mov
push
sbb
pop
data16
or
push
or
cmp
aam
outsb
mov
jp
mov
adc
jno
mov
xorl
call
and
cmpsb
xchg
lahf
pop
lods
dec
into
dec
mov
push
in
adc
mov
cmpsl
enter
jns
jg
stos
cs
ror
xor
dec
mov
frstor
push
jmp
or
jmp
mov
mov
inc
or
test
ljmp
nop
in
mov
jae
jg
sbb
iret
mov
addr16
inc
push
push
loop
jmp
cmp
lods
jb
in
mov
dec
call
and
fimull
adc
dec
pop
mov
pop
in
add
push
repnz
xor
push
push
sub
inc
andb
dec
push
bound
mov
fucom
sbb
aas
mov
fstpt
loope
mov
iret
lret
fwait
js
sti
pop
inc
ss
aas
loope
and
or
mov
fnsave
sub
xor
repz
jo
leave
and
jne
int
inc
jmp
mov
clc
xchg
int
push
imul
std
repnz
into
insb
mov
xor
dec
pop
fisubrl
aad
jb
mov
out
push
cmp
into
and
mov
or
cmp
hlt
mov
movsl
insb
and
shlb
xor
fcompl
inc
jne
popf
or
xor
push
mov
xor
lods
cmp
lds
int
cltd
lods
jg
sub
subb
out
notl
xchg
xor
aaa
pusha
cmp
in
data16
test
jae
aas
ljmp
call
js
add
notb
mov
inc
mov
cmpsl
inc
xchg
cmp
mov
in
aas
pop
inc
in
mov
andl
and
jmp
out
fnstcw
jns
inc
fdivrl
mov
call
sbb
xchg
in
jecxz
mov
inc
or
jle
jg
int
and
jbe
adcb
sbb
inc
stc
xor
leave
adc
cmp
js
mov
push
jmp
jecxz
or
out
sahf
sbb
mov
pop
cmp
lods
lds
add
pop
inc
nop
add
jno
jo
gs
mov
hlt
loop
dec
movsl
xchg
in
jb
insb
loop
cmp
int3
xchg
ds
mov
mov
sarl
sub
fwait
cli
xchg
pop
ret
outsb
cmp
jle
and
mov
push
xchg
fistpl
mov
xchg
ret
pop
pop
mov
int3
movsl
jne
fldcw
jns
les
push
mov
out
xchg
or
jnp
outsb
mov
pop
loope
aaa
push
pop
xchg
pop
xchg
jg
adc
jae
fs
jmp
jae
fs
jmp
jae
fs
jmp
jae
fs
jmp
xchg
and
nopl
pop
repnz
mov
sub
iret
pop
std
and
cmp
loopne
and
push
popa
cli
mov
jb
fs
jb
cld
xlat
xchg
fbstp
movsb
or
cltd
sbb
sub
sbb
cmp
xchg
lds
jae
sahf
jnp
mov
mov
sbb
ficoms
mov
je
or
mov
dec
ret
mov
das
enter
jne
cmp
mov
clc
loope
cs
lods
imul
mov
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
xchg
mov
xlat
sbb
jmp
sbb
xor
aam
mov
sahf
dec
fldcw
cmc
sub
data16
jnp
xchg
xlat
hlt
cmp
sub
cmc
xlat
pop
push
int
lods
addr16
lods
bound
push
outsb
and
dec
rol
cmp
in
lock
outsl
sahf
push
dec
mov
imul
mov
pop
mov
lock
dec
add
push
es
test
pop
jg
lahf
ret
add
dec
repz
cmp
push
js
mov
push
adc
mov
inc
mov
xchg
jg
lahf
adc
or
hlt
pop
lahf
je
jmp
repz
orb
aam
mov
lds
xchg
add
jl
mov
mov
sub
xor
ds
out
add
aam
data16
shlb
sahf
mov
subb
mov
iret
xchg
aam
cmc
cmpb
or
mov
pop
cmpsb
popa
not
out
fcompl
xlat
std
loopne
xchg
and
cmpsb
xchg
test
or
jo
and
sub
jl
mov
xor
xchg
inc
push
mov
insl
pushf
inc
or
adc
pop
dec
dec
leave
movsb
lret
pop
rolb
jnp
sub
in
mov
daa
jno
mov
xchg
xchg
dec
jl
xchg
dec
jmp
test
ret
outsb
sarl
xchg
in
or
sahf
jmp
jb
jne
js
push
push
std
out
pmulhw
xchg
and
mov
movsb
jb
jmp
aam
orb
pop
pusha
adc
inc
inc
lret
push
push
inc
pop
icebp
push
fists
js
add
cmp
jo
jnp
adc
mov
popf
mov
dec
push
scas
add
icebp
xor
mov
insl
and
xchg
xchg
mov
arpl
mov
aaa
daa
lret
test
dec
aas
stc
or
sub
imul
push
sub
and
aaa
out
add
or
adc
leave
dec
push
add
jne
push
inc
or
xchg
add
je
imul
jmp
mov
popf
test
jno
xchg
testb
push
lahf
push
lods
adc
fldcw
jnp
jp
jbe
mov
xchg
xor
in
sbb
mov
add
mov
cmp
mov
or
xor
dec
out
lcall
mov
pop
out
dec
push
out
adc
mov
popf
mov
add
cmpsl
ret
test
add
push
dec
shlb
test
aaa
add
push
in
and
cltd
sub
mov
bts
outsb
sub
enter
mov
roll
or
dec
clc
add
sbb
fwait
or
and
in
mov
dec
sarl
pop
adc
sti
lret
ja
adc
icebp
das
fildl
adc
cmc
push
lock
test
inc
cmp
dec
mov
add
mov
adc
popa
aad
or
ds
fwait
mov
out
adc
jecxz
sbb
xchg
les
fsubs
inc
mov
clc
push
mov
out
lret
mov
pop
push
shlb
push
jp
fs
cmpsb
cs
sbb
inc
mov
clc
push
and
stos
inc
push
cs
mov
sub
pop
in
pop
add
add
lcall
ljmp
xchg
jae
add
shll
lds
loop
mov
mov
out
es
xchg
pop
gs
mov
das
pop
adc
sbb
sub
cmpsl
into
jns
mov
push
cwtl
xor
lods
fmull
es
and
inc
mov
dec
rol
xchg
push
sbb
test
mov
fnsave
sbb
pop
adc
dec
fdivs
pusha
ret
cmp
mov
sub
xchg
es
les
cmp
xor
pop
stc
mov
test
lds
cwtl
mov
fwait
jg
inc
cmc
dec
into
js
mov
xchg
out
jl
push
cwtl
pop
pushf
jno
out
insb
ret
out
in
mov
in
pop
mov
pop
mov
xchg
push
mov
mov
lds
rorb
push
dec
push
mov
jg
repnz
pushf
mov
les
or
lods
rorb
xchg
jns
loope
xor
popa
xchg
fdivrl
lock
test
je
les
xor
jbe
add
add
in
mov
mov
movzbl
xor
mov
inc
dec
test
jne
popa
leave
ret
add
add
add
add
xchg
xchg
xchg
scas
cmp
scas
sbb
mov
mov
pop
aad
and
scas
not
dec
cmp
adc
sti
test
and
stos
mov
outsb
xchg
pop
mov
sarl
std
adc
or
jecxz
jp
mov
push
mov
pmaxsw
cmp
or
push
jmp
out
lea
jns
std
lds
ljmp
enter
xchg
pushf
jecxz
jne
fldt
jmp
cltd
cmp
loope
std
fldt
ds
add
fs
lds
sub
fisttpll
lock
ja
lcall
xlat
jb
jle
jno
outsl
popf
adc
popa
test
loop
xchg
cltd
scas
xchg
mov
or
push
imull
mov
movsb
inc
cmpl
pop
outsl
cmpsb
gs
fadd
cmp
fdivs
sbb
mov
cmp
xor
fcoms
sbb
mov
insb
add
ss
inc
push
fcoml
pop
js
shl
insb
and
push
mov
jg
cwtl
call
jg
in
pusha
cmpsb
and
lods
xchg
stos
jl
dec
loope
loopne
sbb
rclb
insl
cwtl
pop
nop
and
jmp
cmp
in
xor
fdivrl
push
mov
pusha
sbb
cvttps2pi
adc
roll
jno
jle
and
fwait
out
cwtl
jne
fnstenv
das
call
pop
xchg
loope
mov
sub
sbb
or
pusha
cmp
ljmp
std
loope
shll
sbb
xor
jnp
repnz
out
push
dec
daa
mov
pop
adc
aaa
mov
movsb
add
xchg
mov
out
push
call
inc
cmpb
aam
or
push
imul
cwtl
repz
jb
and
out
lret
scas
sbb
orl
and
ret
push
aaa
scas
pusha
add
sarl
cmp
adc
dec
pop
orb
pop
jnp
cld
adc
stos
aas
sub
sar
mov
out
xchg
enter
add
mov
jo
adc
test
pop
ss
mov
inc
js
xor
loop
sbb
and
sub
nop
fistl
push
inc
notb
mov
movsb
lea
ret
mov
push
jl
test
sub
gs
cmpsl
mov
xchg
mov
or
sahf
mov
stos
sbb
imul
mov
pop
sub
pop
cmp
add
scas
mov
hlt
test
jmp
iret
icebp
cmp
pop
out
push
jp
push
sbb
mov
stos
add
sbb
inc
pop
cmpsb
xor
xchg
call
ljmp
inc
mov
mov
push
loope
jp
test
jl
mov
iret
cltd
pop
fs
mov
rcr
out
fisubrs
dec
stos
adc
push
mov
ljmp
pop
nop
cmp
sub
inc
nop
icebp
js
jmp
add
adc
cmp
es
adc
hlt
push
xchg
dec
mov
stos
fwait
push
fsub
cmp
js
and
sub
call
mov
push
or
inc
inc
sti
inc
fs
lcall
push
inc
ret
mov
fs
cmp
movsl
ds
lds
out
out
xlat
adc
stos
mov
mov
cmp
mov
arpl
mov
jnp
inc
fsts
iret
cmp
lea
orb
mov
mov
mov
cmp
mov
add
repnz
and
je
leave
xor
push
mov
push
add
mov
fisubrs
pop
jmp
push
push
push
fiadds
pop
ficoms
fs
stos
stos
and
mov
inc
fs
ficoms
sbb
ficomps
or
push
sbb
stos
push
and
add
push
ficomps
push
fcompl
adc
push
ficoms
push
xor
xchg
pop
push
push
push
push
push
xor
and
or
lods
inc
movsl
sbb
push
sbb
add
je
lock
pop
call
dec
push
lret
into
pop
pop
push
jle
lods
outsl
orb
add
mov
subl
adc
xor
mov
sub
int
jle
imul
shl
dec
cmpsb
and
pop
jmp
pop
jnp
sub
adc
xchg
and
push
pop
insb
push
repz
mov
mov
inc
int3
lret
fwait
lock
punpckhdq
repz
or
mov
pusha
mov
mov
sbb
rorl
ljmp
mov
sbb
cmp
arpl
xchg
lret
ficompl
fcoms
xor
push
cmp
pushf
popf
xor
xor
or
jb
xor
shl
adc
cmp
cmp
adc
jecxz
push
pop
int
mov
mov
push
or
push
push
es
mov
lods
dec
add
stc
inc
out
lods
ljmp
addr16
cs
jns
dec
adc
hlt
xchg
fsubrl
inc
gs
in
mov
jnp
imul
push
test
and
adc
sahf
daa
push
jle
aam
adc
into
xchg
xor
xor
sbb
dec
jns
mov
ret
dec
jl
pop
xor
outsl
adc
add
add
pusha
push
mov
mov
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
jmp
addr16
lds
and
jmp
mov
nop
inc
and
jl
arpl
adc
cmpsb
jle
popf
andl
mov
push
insl
outsl
rcll
in
add
and
add
pusha
das
insb
lock
ds
sbb
std
jns
pop
xchg
add
jp
dec
es
iret
push
inc
sub
mov
test
dec
mov
xor
xor
test
int3
jmp
inc
and
add
in
inc
mov
add
push
bnd
insb
fwait
mov
inc
repnz
out
jle
mov
add
loopne
and
mov
push
sbb
jb
dec
test
mov
sahf
test
cld
adc
adc
mulb
sbb
adc
out
int
shl
pop
subb
jecxz
ljmp
fwait
enter
bnd
imul
mov
in
repnz
dec
cmp
mov
cwtl
dec
fwait
xchg
or
hlt
outsb
push
cmc
sbbb
aam
out
daa
jp
mul
ret
je
mov
mov
rcr
mov
lahf
lcall
push
and
cmpsb
dec
ret
pop
inc
sbb
adc
and
in
lds
hlt
push
aaa
xor
stos
aad
pop
and
adc
mov
negb
mov
jns
adc
lods
push
lret
cmp
lcall
std
or
adc
mov
bound
mov
cltd
or
cmp
das
out
enter
aas
dec
sbbb
and
shll
dec
popf
loopne
mov
call
inc
jns
lcall
mov
out
outsl
lret
adc
cmp
push
push
rol
dec
mov
lea
xchg
aad
dec
push
push
dec
sbb
dec
mov
nop
pop
mov
cmp
sub
repz
mov
jae
jmp
subb
inc
mull
push
out
xlat
sbb
adc
sti
inc
rcrl
arpl
push
loope
mul
mov
insl
jmp
cmpsl
cltd
insb
sub
ret
pop
test
aaa
test
mov
mov
cmpsl
cmp
add
mov
pop
enter
clc
mov
xchg
hlt
mov
mov
sbb
loop
sub
shr
jae
inc
xchg
xchg
fcomps
add
jno
rorl
mov
jp
xchg
mov
enter
int3
out
xor
push
loop
rclb
sbb
jl
ljmp
add
xor
lahf
repnz
lcall
dec
push
mov
std
cmp
and
cmp
inc
inc
inc
push
pop
or
mov
and
cmp
outsb
pop
add
hlt
movsl
push
roll
mov
out
imul
dec
test
and
stos
jae
repnz
mov
int
call
dec
adc
mov
xor
cmp
pop
gs
push
and
cmp
push
mov
push
inc
in
lea
test
jb
mov
inc
popa
fsubs
mov
push
adc
add
or
insl
mov
push
xchg
xchg
adc
jmp
jp
in
mov
xchg
fwait
jmp
pop
lds
jl
and
cwtl
cs
and
imul
pop
shll
sub
stos
ja
sbb
mov
mov
inc
int3
cmc
adcb
cmp
ffreep
xor
push
jns
or
mov
jne
jns
and
cmc
mov
inc
jmp
mov
lods
add
cmp
inc
or
xor
mov
inc
js
pusha
stc
jle
popa
push
insb
cmpsb
add
loop
pop
mov
and
jae
rorl
lcall
pop
mov
jne
inc
testb
out
cmp
mov
jns
pop
xchg
mov
lret
fistpl
ljmp
jle
test
jo
mov
bound
mov
idivl
add
stos
repnz
xor
add
pusha
shlb
scas
push
lcall
fcomi
sub
scas
sbb
mov
mov
out
pop
add
negl
xchg
pop
push
mov
pop
lcall
mov
mov
xchg
inc
lea
clc
sti
cmp
push
xchg
cli
pop
test
out
jg
mov
jne
mov
inc
js
sahf
pop
mov
inc
xchg
icebp
aas
pop
add
fisubl
add
sbb
and
push
std
cmp
imul
mov
ds
pushf
push
lds
or
and
jp
popf
insb
jmp
and
fwait
pop
dec
mov
mov
or
add
insb
icebp
inc
shlb
je
iret
je
gs
inc
fcomps
fldenv
mov
fsts
divl
cmp
cmp
loopne
jle
scas
add
push
mov
mov
arpl
xchg
sub
gs
cmp
mov
out
mov
mov
cmc
and
cltd
jp
and
pop
mov
jo
cli
das
cmpsl
add
inc
fsubl
sahf
dec
repnz
out
push
push
fldenv
scas
and
outsb
jmp
push
xchg
jbe
cmp
mov
arpl
add
ret
fcoml
cmp
dec
arpl
sahf
movsl
push
lods
in
sarl
faddp
push
jno
or
lcall
mov
subb
push
addr16
jae
and
adc
js
mov
outsb
in
sti
dec
pop
fwait
xchg
out
xlat
push
pop
test
lcall
jmp
dec
adc
push
lock
mov
sbb
or
in
aam
hlt
pop
mov
or
push
aad
rolb
mov
jmp
js
daa
mov
inc
test
cwtl
dec
and
fstpl
repnz
xorb
shrb
push
jg
out
inc
call
aas
ret
xchg
mov
fisubrl
fsubs
leave
xor
fisubs
xchg
dec
mov
pop
stc
enter
push
sbb
jg
lret
cmp
and
cmp
dec
add
sti
jecxz
and
sbb
pop
xor
mov
inc
xchg
cmpsl
inc
xchg
int3
inc
sub
cli
aas
jle
movsl
shr
cltd
mov
push
shll
dec
sti
or
xchg
enter
cmp
xor
sbbb
dec
cmpsb
movsl
pop
js
dec
or
or
outsl
in
iret
cmp
push
or
xor
sub
scas
jmp
pop
mov
mov
sub
dec
push
test
cmovle
lahf
sub
push
mov
xchg
test
push
mov
pop
pop
loope
sbb
js
into
and
inc
adc
rorl
imul
insl
mov
push
inc
sarb
mov
xchg
mov
jecxz
lods
mov
xchg
enter
popa
push
in
sti
mov
iret
mov
mov
or
push
andl
popf
xor
xchg
rcll
out
xchg
enter
jp
jno
mov
loopne
adc
cmp
inc
push
cmpsl
ror
xchg
ret
mov
jnp
fildll
mov
ds
jns
dec
push
and
xchg
pushf
sbb
cmp
add
push
test
xchg
shrl
dec
sub
fdivrp
rcl
addr16
mov
and
divl
fsts
and
inc
int3
dec
pop
cmp
pop
movsb
cmp
mov
dec
xchg
mov
loop
pusha
add
add
mov
je
xchg
mov
or
xchg
mov
cmp
out
add
add
xchg
in
sub
mov
adc
out
fdivs
adc
lea
or
xchg
cmp
or
xor
movups
dec
stos
pusha
aam
cmp
ss
pop
mov
ficomps
jge
ror
cmpsb
sbb
rcl
mov
aas
lahf
lea
cmp
pop
mov
imul
add
leave
outsl
pop
inc
rorl
out
ret
cwtl
mov
jge
lods
and
cmpb
xchg
stc
fcomps
or
out
aaa
int3
push
loop
test
mov
in
nop
cmpsb
push
xchg
cmpsb
fildll
jne
movsb
vpinsrw
adc
cmpsl
stos
aad
mov
fcmovnu
xchg
sbb
ret
cli
lcall
insb
sarb
sbb
pusha
pusha
out
cwtl
nop
push
cmp
dec
pop
xor
stos
cmp
add
daa
call
and
pop
stos
test
mov
sub
push
lcall
icebp
sarl
or
nop
xchg
fsubs
scas
or
loope
outsl
rcrl
adcb
addl
lea
push
hlt
xor
arpl
inc
mov
faddp
and
cld
or
ss
add
inc
scas
imul
test
cmp
and
enter
out
adcb
and
push
imul
sub
push
in
cli
jo
test
mov
jno
sarb
subb
nop
cltd
pop
adc
xor
inc
push
ret
inc
mov
ljmp
mov
add
test
inc
scas
xchg
cli
add
imul
sar
out
pusha
xor
je
mov
or
xor
xor
and
arpl
add
stos
xchg
fsubrp
mov
lods
loope
in
out
mov
xor
rcrb
xlat
add
pop
fmulp
inc
sbb
xchg
cltd
adc
icebp
pop
mov
mov
scas
imul
jns
rol
and
sbb
sti
int
std
ret
push
loope
xor
scas
cmpb
jg
inc
gs
sub
es
add
mov
repz
pop
lods
and
aam
es
sbb
ror
sar
add
push
out
into
hlt
popa
inc
addr16
xor
into
jmp
push
int3
decb
mov
pop
cmp
adc
rorb
cmp
nop
inc
popf
mov
xor
and
aaa
or
or
pop
cli
dec
into
jmp
inc
repz
inc
mov
sub
push
cmpsb
fists
or
jecxz
out
jb
fstpl
sarb
xor
mov
dec
sbb
stos
add
or
pop
nop
cmp
std
fstpl
popa
lret
mov
test
repnz
adc
push
jae
push
adc
repnz
jno
fstps
mov
mov
mov
adc
adc
imul
sbb
arpl
enter
cli
lea
out
inc
mov
mov
push
xor
dec
mov
xor
jb
xor
sbb
out
stos
xor
xchg
xchg
rcl
and
shlb
fstps
bound
push
fucom
add
popf
add
cmp
ljmp
xchg
jbe
enter
mov
jle
and
insl
movsb
jle
mov
scas
sub
int3
pop
lret
push
js
mov
mov
std
mov
sar
push
daa
xchg
push
dec
ret
leave
jmp
ss
gs
cmp
push
enter
in
mov
int3
aaa
add
mov
adc
fbstp
clc
rorl
lret
xchg
stos
inc
sub
pushf
or
cwtl
sub
mov
hlt
mov
and
flds
and
sub
pop
lods
push
push
rorb
adc
and
mov
call
lods
push
fisubrl
sub
mov
roll
test
repz
leave
mov
enter
addb
mov
shl
out
adc
dec
into
scas
xor
in
iret
and
not
lock
and
and
fs
inc
inc
in
xchg
mov
in
pop
lcall
stos
cmpsl
xlat
mov
mov
cmpsb
mov
mov
and
fdivrs
call
inc
adc
testb
int3
aaa
adc
aam
stos
jbe
xchg
adc
xchg
int3
ret
mov
fidivrs
in
jmp
filds
scas
sahf
popf
xchg
orl
jl
mov
mov
inc
xchg
pop
dec
pop
pop
jae
leave
loop
push
mov
aam
jecxz
ret
jecxz
push
shr
xchg
xchg
stc
fucomip
mov
stos
call
stc
mov
adc
xlat
popw
sub
stos
xchg
sbb
inc
mov
outsl
mov
sub
adc
fists
sar
scas
dec
mov
mov
push
lock
jecxz
pusha
ljmp
movsb
fs
pop
inc
jecxz
lcall
fwait
cld
adc
sti
and
sbb
lods
xchg
adc
shll
and
aas
in
in
mov
dec
pop
daa
mov
es
inc
mov
and
jns
mov
mov
and
and
cmpl
test
test
sub
inc
mov
push
popf
sbb
jne
sub
pop
inc
or
xchg
dec
addl
fsubr
aam
ret
and
jle
push
push
lret
mov
std
cmp
jb
and
cmpsb
shll
in
xchg
push
cmp
sbb
js
sub
mov
pop
fistpl
xor
mov
xchg
mov
pop
inc
xor
mov
cmpsl
and
outsl
sti
xchg
xor
aaa
jbe
sub
add
les
mov
sbb
adc
push
jg
in
xchg
xor
fcmovnu
lds
mov
sbb
fs
ss
ja
cli
fmuls
lahf
aam
jbe
fisttpl
dec
rcl
out
lret
mov
xchg
outsb
rcr
ds
mov
or
pop
out
xchg
lds
test
sti
xchg
xor
fists
mov
loopne
fimull
imul
shrb
popf
dec
or
xor
aaa
les
loop
push
hlt
push
pop
add
fdivr
int3
imul
dec
add
adc
mov
xchg
movsb
dec
xchg
xchg
pop
push
xchg
adc
pop
mov
mov
int3
xchg
repz
stos
daa
jb
and
loop
mov
mov
push
ds
add
xor
inc
pusha
cmp
push
mov
or
lock
sbb
test
mov
push
mov
test
cmp
in
std
popf
pop
adc
std
mov
sbb
add
clc
out
imulb
data16
xor
mov
sub
ret
jecxz
hlt
adc
stos
in
lret
out
gs
fnstenv
jae
fnstsw
ror
mov
sbb
xor
cmc
sbb
sub
xchg
adc
jne
sbb
and
xchg
adc
push
adc
lods
xor
mov
inc
xchg
push
shll
gs
xlat
lret
aas
xor
rol
pop
in
sub
push
leave
mov
adc
jle
fdivp
xchg
sub
ds
xchg
jp
jb
leave
mov
lret
jnp
sahf
insl
out
js
stc
dec
fildl
pop
xchg
aam
xchg
sbb
jb
xchg
push
xchg
or
or
mov
es
pop
into
dec
jne
or
cli
popa
movsb
daa
mov
adc
stc
imul
add
and
jg
in
add
repnz
dec
add
mov
dec
cmp
mov
test
push
lret
jecxz
mov
insb
xchg
sub
dec
ds
add
dec
hlt
push
icebp
ret
mov
cli
inc
jb
es
xchg
hlt
inc
jge
jnp
inc
out
addr16
ret
scas
dec
or
sbb
mov
lea
xchg
mov
es
xchg
mov
sub
sub
shlb
mov
or
mov
sbb
jae
ljmp
clc
or
lods
out
mov
sbb
lfs
xor
pop
xor
pop
ror
gs
daa
dec
and
push
jecxz
pop
and
and
bound
xchg
dec
pop
and
popa
inc
loopne
sbb
fldt
subl
int3
aam
inc
pop
lea
repnz
jmp
lahf
test
cmc
pusha
jns
pusha
and
push
sbb
in
sub
mov
mov
jecxz
push
inc
ja
pop
push
add
popa
popf
aas
test
loope
loop
jl
jae
or
add
xchg
outsb
sub
pop
jp
iret
in
xor
jns
pop
call
aam
add
ja
pop
mov
mov
scas
adc
mov
sbb
test
mov
testb
or
fcmovbe
cmp
sbb
outsb
xchg
pop
orl
jle
sub
cwtl
int3
or
les
xchg
push
inc
jae
mov
pop
push
scas
test
add
and
and
sub
test
mov
pop
sub
outsb
test
adc
and
add
addr16
xchg
mov
stos
pop
sub
push
add
call
lret
pusha
test
scas
mov
and
adc
cwtl
xchg
push
push
lret
shrb
and
and
lret
xor
cwtl
sbb
and
shrb
adc
stos
pop
sub
loopne
sub
sub
bound
jl
push
and
cli
pusha
mov
stos
pop
sub
icebp
test
xchg
addr16
push
in
stos
pop
sub
fldcw
fnsave
fnstenv
push
sub
adc
stos
fldcw
fbstp
push
cld
stos
pop
sub
call
jno
fnstenv
push
sub
and
js
fldcw
fsubs
and
and
mov
and
fbld
jecxz
and
fiadds
outsl
outsl
hlt
gs
dec
fimull
xor
mov
xor
push
push
test
insb
mov
dec
aam
mov
sahf
into
add
cmp
out
xor
dec
pop
jb
xor
push
sbb
rcrl
mov
popf
mov
rcll
fcomip
pop
popl
sbb
cmp
orl
cmp
or
repnz
push
fisttpll
cld
add
adc
gs
add
adc
hlt
and
cltd
fwait
pop
or
xchg
imul
aad
inc
pusha
sub
pushf
mov
scas
ljmp
xor
loopne
dec
push
cmpsb
or
imul
lods
fwait
push
cwtl
mov
dec
lock
pop
imul
xor
pushf
stos
xchg
ljmp
pop
and
ja
push
adc
sbb
faddl
fsubl
adc
and
xchg
ja
mov
cli
jns
out
lea
cs
mov
dec
notl
jg
cmp
pushf
fs
aas
lock
jo
push
lret
and
loope
inc
mov
popf
pop
dec
pop
and
repz
into
out
sub
jnp
inc
sub
shrl
lock
add
imulb
inc
inc
cmp
dec
loopne
addr16
dec
iret
imul
or
push
mov
xlat
sti
popf
adc
rcr
pop
inc
pop
std
sbbl
jo
outsb
das
sub
fnstenv
dec
insl
lock
in
cwtl
push
mov
scas
cmc
add
hlt
mov
std
xchg
push
xor
popa
test
pop
mov
push
adcl
mov
xchg
rorl
iret
sbbb
scas
stos
insb
xchg
xlat
mov
push
xor
sub
mov
loop
mov
cmc
outsb
nop
xor
mov
add
adc
and
add
sbb
rcll
cmpsl
adc
test
sub
pshufw
in
mov
mov
orl
rol
xor
or
mov
cmpsb
fimuls
popa
and
cmpsb
sti
xchg
rcll
das
test
fistpl
test
push
fwait
inc
adc
push
leave
test
popf
jo
fcompl
adc
add
lret
faddl
adc
ds
sahf
or
adc
mov
into
pusha
push
fistpl
adc
jo
lock
add
xor
into
mov
mov
push
cltd
sbb
or
dec
mov
dec
test
sub
bound
jno
fwait
adcb
xor
and
bound
dec
stos
or
cmovg
test
or
pushf
pop
rcll
ss
dec
popf
cmpsl
popa
addb
aad
mov
rcrb
xchg
pop
cmc
or
mov
push
loop
push
out
xor
jmp
mov
aaa
or
dec
pop
adc
mov
inc
mov
cmp
jge
shr
shr
mov
or
roll
cmp
inc
sahf
out
in
adc
push
lds
pusha
xor
fldcw
jo
push
daa
inc
pop
cmp
std
xchg
ljmp
add
push
mov
xchg
pop
sbb
std
mov
dec
jle
push
ret
cmp
das
jmp
test
xchg
lods
pop
fwait
sbb
pop
push
stos
jl
sub
cmpsb
jo
cmp
inc
in
std
xor
and
push
fs
sub
clc
mov
cmpsb
push
push
push
icebp
gs
js
adc
xor
xchg
or
adc
cmpsb
push
mov
icebp
mov
xor
stc
xor
xor
mov
pop
pop
mov
adc
test
in
outsl
loopne
popa
stos
xchg
loope
les
add
inc
mov
pusha
adc
loop
cmp
dec
adc
ficoml
xor
mov
add
lods
dec
push
clc
push
xor
stos
loopne
and
sub
xchg
mov
bound
out
mov
dec
testl
dec
pop
add
xor
inc
ret
packsswb
jno
xchg
or
ret
loop
imull
mov
and
outsl
lea
into
jecxz
pop
insl
and
popa
mov
popa
sbb
mov
sahf
stos
mov
sub
jecxz
hlt
addr16
leave
sub
mov
push
mov
test
int
in
test
push
mov
fidivrs
push
shll
jg
aad
cld
dec
inc
call
ror
pop
lods
fisttpll
inc
mov
inc
sbb
xchg
jg
clc
pop
mov
inc
lods
adc
rorl
aad
push
icebp
or
add
imul
jne
push
or
jno
add
lods
pop
ret
and
sahf
cmp
xchg
add
sub
cmp
scas
lds
dec
jl
popf
dec
xchg
xchg
es
xorl
lret
push
mov
mov
call
jb
clc
push
adc
inc
push
jnp
int3
dec
or
mov
hlt
ss
test
xor
fdivl
adc
ficompl
xchg
adc
sarl
xchg
test
inc
xor
push
test
fstl
js
repnz
pop
pop
fsub
and
icebp
inc
int
dec
xchg
adc
mov
leave
cmpl
fs
adc
outsl
sub
or
push
js
inc
out
lcall
fisubl
mov
cld
insb
xchg
sarb
in
shr
imul
xlat
stos
pop
xchg
jl
push
fimull
adc
fisubs
inc
push
push
mov
sbb
xchg
test
fmuls
xchg
or
sbbb
nop
pusha
outsl
shr
aam
dec
dec
pop
and
out
subb
xchg
sbb
gs
xor
dec
add
xchg
cli
xchg
fstpl
sub
aad
push
repz
adcl
xchg
mov
fidivrs
ret
shr
or
xor
rcll
fdivr
enter
inc
shll
ret
adc
clc
dec
push
mov
pop
sar
lods
roll
mov
push
push
aad
jb
xchg
mov
and
mov
cli
add
jp
in
data16
dec
outsb
add
jne
and
mov
rcrb
cmpsl
jg
sti
xor
mov
fadds
add
jg
xchg
xor
push
sub
jg
jno
adc
sbb
outsl
out
push
dec
in
lods
and
pusha
inc
push
pusha
sub
dec
popf
sar
mov
js
mov
or
aaa
shll
jno
mov
xorl
das
dec
fidivrs
aad
adcb
mov
inc
lock
mov
jp
test
mov
sub
mov
xchg
je
push
inc
xor
xor
add
dec
jl
inc
xor
push
pop
aam
adc
xor
out
pusha
mov
mov
inc
out
lret
pop
jmp
testl
dec
fstpt
mov
and
xor
mov
sbb
dec
dec
popf
sub
jb
into
or
imul
mov
js
sbb
mov
lock
add
loope
and
jl
js
xchg
mov
popf
int3
inc
mov
cmp
sbb
gs
jno
rcll
xchg
jmp
cmp
xor
jge
fndisi(8087
cmp
ds
add
nop
es
add
sbb
dec
rcll
fwait
sub
jle
or
das
mov
ss
pop
and
dec
push
jae
iret
dec
fnstsw
out
push
test
fcoms
dec
int3
fistpl
insb
lret
push
clc
xchg
pusha
xchg
and
cmp
lahf
dec
xchg
rol
outsl
inc
cmp
cmp
mov
xor
pop
mov
inc
pop
cs
push
mov
cwtl
mov
cmpsl
enter
mov
cmpsl
fadd
rorl
mov
or
aas
fimull
lea
leave
in
arpl
mov
mov
and
and
dec
mov
inc
cwtl
mov
and
jo
ljmp
loopne
popf
cmp
lahf
cmp
out
or
je
xorl
sti
nop
in
inc
test
lea
rolb
mov
insl
in
and
outsl
jmp
outsb
lret
xchg
addb
jl
icebp
popa
js
outsb
inc
mov
mov
ljmp
pop
fimuls
jbe
out
inc
es
lods
fidivrs
mov
cmp
aaa
pop
in
cmc
test
xchg
mov
xchg
mov
and
or
or
rorl
stos
pop
and
push
cli
xor
repnz
adc
mov
scas
cltd
mov
sbb
or
push
popf
adc
mov
sar
inc
cld
mov
push
cmp
rcll
scas
lods
pop
lret
test
jae
or
jnp
popa
pop
jo
lldt
mov
jmp
push
pop
jne
mov
push
push
mov
xchg
test
dec
shl
roll
and
mov
in
fisubl
sub
imul
mov
xor
fildl
cmp
icebp
mov
ret
fdivrp
inc
out
inc
pusha
outsb
hlt
or
lcall
sbb
daa
in
mov
and
sub
xor
mov
outsl
dec
sbb
mov
push
pop
push
add
dec
cmp
repz
inc
daa
pop
call
and
stos
rcll
je
mov
and
mov
jl
jb
pop
scas
mov
xchg
jge
pop
ret
adc
mov
repz
jb
and
push
mov
shr
cmp
mov
xchg
sub
cli
sbb
push
inc
out
in
xchg
pop
cltd
xor
popl
pop
lods
mov
fsubrs
add
call
mov
bound
push
mov
jg
pop
inc
xlat
pop
mov
lcall
pop
faddp
dec
decl
outsl
cmp
enter
cld
daa
mov
pop
push
hlt
lcall
sbbb
xor
xor
lock
in
push
js
pop
lret
mov
imul
je
or
mov
cmp
imul
rdpmc
gs
in
dec
out
push
out
aad
jnp
add
push
dec
js
xlat
das
xchg
jnp
sub
mov
insb
in
inc
fs
mov
mov
jp
sbb
xchg
xor
daa
add
adc
push
and
pusha
hlt
sbb
xchg
mov
or
xor
push
cmpsb
movsb
xor
lock
hlt
rol
mov
push
jg
inc
xchg
daa
jne
xchg
mov
or
sub
inc
in
pop
lea
rcrl
lret
dec
adc
imul
cmp
ljmp
stos
clc
pop
in
mov
repnz
push
dec
mov
xchg
cmpl
add
mov
cmp
add
nop
bound
in
xchg
pusha
xchg
and
inc
lahf
ljmp
call
loop,pt
lds
xchg
fxch
xor
out
pop
or
test
imul
mov
clc
xchg
pop
fs
outsl
cmp
pop
xchg
insl
stos
xor
lahf
push
or
mov
iret
dec
push
adc
adc
pushf
scas
dec
and
out
mov
add
cmp
stc
add
fmulp
adcl
loopne
aam
cmp
loope
add
inc
call
int3
and
arpl
dec
jl
jecxz
cld
cwtl
inc
inc
loopne
add
and
cmp
inc
es
or
jge
dec
loopne
or
les
add
pop
xchg
jnp
and
and
sbb
jae
push
inc
dec
cmp
cltd
ds
push
cmp
xor
loopne
adc
push
pop
cmp
leavew
add
or
sarl
push
push
mov
push
mov
push
mov
inc
jnp
into
stc
pop
sub
aam
dec
and
fdivs
or
pop
or
or
sarl
or
shlb
imul
stos
addr16
cmpsb
inc
fcmovne
push
test
ds
icebp
lds
sub
mov
test
std
pop
repnz
lcall
pop
xor
in
cmp
addb
out
aas
daa
das
xchg
jae
mov
dec
lahf
mov
add
ret
push
push
mov
cmc
testb
push
or
rorb
fdivp
pop
loop
ja
mov
lods
push
popf
inc
ja
and
mov
test
arpl
and
mov
call
les
add
mov
gs
mov
aam
loope
das
jo
dec
cmpsl
mov
mov
shrb
or
sbb
dec
mov
popf
push
mov
adc
xchg
cmpb
pop
aad
sub
pop
add
int3
fstps
in
mov
sti
jb
faddp
andl
or
xchg
or
mov
xor
add
pop
out
in
cwtl
mov
mov
incl
push
pop
test
mov
fsqrt
leave
adc
xor
fldl
gs
pop
mov
jno
loope
sahf
fstl
lods
mov
jno
scas
je
mov
lret
push
jecxz
int3
push
cmp
jge
jg
inc
stos
loopne
push
test
repz
mov
adc
fdivp
mov
scas
adc
lock
and
call
mov
and
xchg
je
ljmp
pop
dec
sbb
mov
or
mov
sti
cmp
push
sbb
add
data16
add
fmul
or
loop
xchg
jne
sub
push
mov
out
or
in
shl
stc
mov
xlat
fsubrs
in
stos
outsl
mov
dec
xor
daa
es
flds
shrb
add
mov
mov
dec
lods
lahf
xor
sbb
mov
lock
test
push
jmp
out
inc
or
inc
push
cmpps
or
add
int
xchg
add
popf
fwait
jecxz
in
cmc
je
sub
push
stos
push
xor
lret
loop
lods
cli
mov
filds
daa
mov
dec
fisttps
repz
mov
mov
ret
mov
xorl
adc
lahf
and
jns
adc
bound
ds
sub
sbb
ret
fnstenv
outsl
jno
dec
and
das
push
xchg
mov
ret
and
fistpll
mov
outsb
push
add
pushf
or
in
xchg
and
pop
in
mov
rolb
arpl
sti
pop
sbb
repnz
stos
mov
xor
insl
sub
mov
push
jnp
pop
fdiv
dec
mov
add
xchg
sub
icebp
mov
fs
adc
lahf
inc
jne
iret
inc
mov
icebp
and
and
mov
das
mov
imul
repz
mov
mov
jbe
out
xchg
jbe
sub
mov
cmp
xor
insl
inc
push
lds
mov
adc
lds
and
outsl
repz
les
jmp
jecxz
aas
jg
ret
filds
mov
negb
dec
jmp
push
int
stos
xor
jmp
mov
inc
imul
xchg
in
imul
vcvtpd2psx
inc
imul
stc
roll
inc
jmp
pop
lret
xchg
mov
ds
lods
add
jno
lea
xchg
dec
jbe
push
test
mov
fs
cmp
adc
sub
sub
stos
mov
sahf
test
outsl
mov
push
add
mov
roll
stos
hlt
xor
jae
jl
push
push
dec
pusha
daa
clc
in
jne
sarb
jmp
and
cmc
mov
mov
fistl
faddp
rorl
xchg
inc
jns
jb
push
scas
mov
std
inc
jge
mov
mov
insb
mov
stos
shr
out
add
jg
fsubrl
inc
mov
mov
je
lcall
int3
pop
je
sti
imul
divl
pop
xchg
adc
xor
rolb
pop
lret
test
sub
scas
es
mov
das
and
pusha
xor
and
mov
js
fucomp
adc
cltd
sarl
into
push
sti
mov
add
cmpsb
lea
ret
mov
cmp
or
les
es
xlat
iret
int
popf
jl
iret
jle
int3
scas
and
call
in
add
cmp
push
push
std
adc
scas
daa
je
or
or
jp
pop
popa
cs
add
punpckhdq
cmpsw
sbb
mov
vmaxpd
insb
in
lea
imul
lcall
testl
imul
cmpsb
mov
out
mov
and
js
fsub
push
fs
jle
push
pop
sub
jo
jnp
and
pop
mov
inc
stos
and
mov
mov
mov
push
stc
cli
in
mov
test
lcall
jae
xchg
pop
xor
loopne
and
dec
dec
pop
sbbb
sub
iret
in
pinsrw
push
inc
add
rolb
jp
hlt
imul
jge
push
dec
cs
xchg
call
adc
popf
out
es
or
and
jns
test
sub
mov
lock
pop
pop
fcmovu
pop
fwait
xchg
gs
mov
xlat
jmp
xchg
cmp
stos
popa
out
popf
push
imul
xor
push
mov
sbb
jmp
pop
js
mov
inc
adc
fwait
shlb
mov
add
xchg
enter
mov
mov
fwait
pop
je
inc
cmp
fists
popa
sub
xchg
xlat
cwtl
movsb
inc
sahf
out
jp
xor
outsl
ja
adc
dec
lcall
and
pop
pop
pop
jne
in
push
jnp
sub
push
mov
push
sarl
dec
sbb
pop
rolw
sbb
aaa
jb
jge
mov
sahf
cmp
pusha
aas
das
adc
add
mov
mov
dec
mov
insb
rcrb
xchg
lret
ficomps
mov
lahf
pop
add
or
dec
sub
je
repz
call
push
push
imul
jle
aad
xchg
or
test
iret
cmp
xchg
sti
jnp
mov
rclb
cld
aaa
leave
xor
cmp
mov
cmc
dec
lds
and
out
lds
shll
xchg
fisttpll
loopne
xchg
lcall
mov
fimuls
jo
outsb
in
xor
push
aas
xchg
mov
push
add
and
sub
test
jbe
jo
pop
lea
and
xor
loop
decb
inc
mov
sahf
adc
iret
or
rcr
in
adc
lds
or
icebp
and
sub
dec
cmpsl
dec
mov
push
pop
dec
in
and
mov
imul
lret
mov
pop
into
stos
fnsave
in
jns
lret
mov
xchg
jmp
mov
shrl
push
mov
sub
fistl
cwtl
ljmp
sub
mov
insl
add
test
loope
out
sbb
xor
mov
push
pop
ljmp
dec
mov
jb
jmp
mov
dec
jno
stc
jne
jno
lret
cmp
adc
aaa
push
jnp
test
lret
fsubrs
or
movsl
outsl
das
sbb
inc
int3
dec
pop
jne
pop
xchg
lcall
cld
movl
xor
jmp
pop
fdivl
jbe
into
fbstp
mov
xor
movsb
aaa
cmp
push
fsubl
lea
cmpsl
mov
sbb
repnz
mov
jmp
lds
and
out
scas
mov
aam
lds
push
or
outsb
jl
pop
movsl
or
aad
jne
mov
xor
sub
push
mov
clc
mov
js
addr16
xor
fs
rol
out
and
fwait
js
inc
sbb
xchg
or
sub
hlt
jg
mov
sub
cwtl
jb
push
movsl
addl
outsb
adc
bound
into
rolb
icebp
fstl
add
pop
pop
or
mov
data16
ss
out
outsl
pop
stos
scas
cmp
xor
cwtl
cli
mov
aad
xor
pushf
gs
and
mov
pushf
popl
aam
das
leave
rdtsc
jbe
ficompl
lock
cmpsb
lea
jge
add
or
out
inc
stos
jge
shrb
daa
push
sbb
lahf
das
lahf
mov
cmp
inc
rolb
icebp
fcmovb
xchg
pop
pushf
mov
cmp
sbb
xchg
pop
pop
aad
sbb
xchg
scas
movsb
ja
addr16
out
jp
xor
and
ret
test
hlt
dec
stos
and
aas
div
pop
rcl
dec
outsl
ljmp
in
in
push
sub
adc
das
mov
sahf
scas
pop
sti
imul
sti
cmpsl
stos
and
push
gs
fs
stos
out
mov
std
lahf
ret
mov
add
adc
jecxz
mov
int3
rcr
lds
xchg
out
add
cmp
sub
out
aad
movsl
daa
xor
mov
fsubrs
and
xor
or
mov
andb
dec
pop
mov
imul
cmc
cltd
sar
incl
and
and
push
out
and
idivl
scas
test
mov
and
leave
xlat
shlb
adc
jnp
pushf
std
cmpsb
inc
int
cmp
add
call
mov
out
popf
in
loopne
dec
mov
popf
pop
push
fldcw
outsb
sub
pop
mov
gs
fnstcw
lods
xor
pop
adc
lods
icebp
mov
dec
iret
int3
mov
xchg
lret
stos
test
mov
movsl
test
lahf
dec
adc
add
or
mov
iret
cmp
lahf
pusha
jmp
add
test
ss
shl
loopne
mov
and
jp
sbb
outsl
shll
jbe
mov
jl
out
cmp
push
nop
fsubrs
bound
andnps
arpl
inc
mov
or
xor
in
hlt
mov
jb
rcl
sub
pop
sub
push
cmc
negl
inc
nop
or
test
sub
push
jecxz
jo
xor
outsb
mov
and
insb
jl
mov
inc
sub
push
gs
adc
adc
pop
and
test
ds
cmp
pushf
fdivrp
ja
pop
iret
pop
adc
sub
addr16
and
jno
repz
fwait
push
stc
imul
cmp
pop
popa
jg
inc
or
inc
lahf
inc
cld
sub
inc
sahf
mov
fstps
jge
push
mov
xchg
pop
sti
into
mov
cmp
in
out
and
mov
jne
and
mov
testb
enter
jl
add
ret
mov
loop
lret
cmp
mov
fstpl
repz
packssdw
adc
add
sub
cmp
inc
and
push
test
add
gs
lock
xor
mov
in
sub
sbb
pop
push
cmpsb
and
cmp
call
and
sti
cld
jmp
pop
mulb
lds
cmp
push
and
inc
aas
push
inc
aaa
leave
es
testl
int
je
decl
jne
add
ss
sub
jmp
hlt
fdivr
nop
aas
shll
mov
push
adc
mov
pop
adcb
aas
pop
xchg
or
sub
leave
push
pushl
out
imul
les
test
das
push
movsl
adcb
inc
imul
xchg
fs
mov
cmpsl
mov
adc
fistpll
mov
sub
pop
sahf
test
sbb
mov
pop
in
in
push
sub
lods
jne
lods
xor
inc
push
pop
cli
pop
jbe
xor
mov
stos
xchg
jl
xchg
adc
add
pop
int3
lcall
push
sbb
fisubrs
lock
and
jg
lea
divb
iret
xor
mov
jle
outsl
jle
es
push
lods
outsb
sub
mov
in
pop
sti
xchg
cs
stc
mov
mov
flds
pop
fcompl
sarb
push
cmpsl
sbb
and
in
xchg
shll
popa
xor
xor
jae
popa
mov
and
ret
mov
sbb
pop
outsb
ljmp
push
aas
cli
cmpsl
outsb
sub
iret
jl
mov
xchg
movsb
pusha
dec
push
fwait
sub
std
lock
enter
mov
call
sub
fnstsw
addb
imul
imul
sub
shrb
pop
outsb
cwtl
cld
and
mov
rcll
push
into
in
scas
mov
mov
xchg
cmp
inc
in
pop
inc
push
in
mov
rcrl
mov
scas
pusha
xchg
stos
mov
and
stc
loop
enter
sub
scas
pushf
push
pop
cmp
mov
int3
xchg
ss
scas
scas
ja
mov
xchg
and
pusha
out
out
mov
scas
pop
fimuls
xchg
idivb
ret
loope
into
lahf
or
push
xchg
or
xchg
jnp
push
rolb
rcrl
cmpsl
sbb
xor
lret
gs
repz
or
adc
in
jge
test
hlt
stos
cmp
push
mov
pop
in
mov
or
and
pop
bound
rorl
notb
sbb
cmpsl
cmc
pop
popa
lds
inc
or
xor
dec
fwait
jl
test
jno
test
inc
repz
je
fstps
gs
sub
outsb
jecxz
sub
popa
dec
or
movsl
lret
repnz
addr16
cmp
and
lea
in
repz
enter
cmp
jge
int3
push
ss
repz
fsubr
cmp
dec
mov
dec
jp
sti
outsl
lea
push
hlt
mov
or
and
mov
jae
cmp
push
pop
dec
pop
adc
repnz
push
mov
shlb
adc
dec
jo
out
inc
dec
inc
cmp
rcrl
icebp
js
xchg
push
jecxz
mov
pop
add
fcmovbe
dec
jnp
add
pop
das
jns
pop
mov
dec
cmp
jge
dec
cmp
icebp
sbb
xchg
and
dec
and
add
inc
xchg
mov
gs
ret
or
testl
out
add
mov
out
pop
dec
sub
xchg
add
outsb
mov
pop
mov
icebp
mov
cwtl
cli
xor
cmp
adc
aam
sar
xchg
leave
jnp
xchg
dec
repnz
jecxz
ret
push
jb
fsubs
dec
je
xchg
mov
mov
pop
xchg
stc
in
scas
mov
cmp
jo
out
push
cmp
pop
xchg
cmp
push
stos
push
add
xchg
adc
clc
fdivrs
ret
pop
adc
out
mov
sub
fcompl
xor
es
and
roll
addb
lcall
push
pop
ret
sbb
rcll
push
mov
ljmp
adc
pop
jg
sbb
mov
xchg
jns
jmp
lea
push
xchg
add
orb
xor
xor
cmp
dec
dec
and
adcl
xor
adc
icebp
pusha
push
adc
imul
xor
xchg
cmp
add
sub
shlb
cwtl
repnz
xchg
and
mov
xchg
lods
ret
push
fwait
call
inc
and
or
inc
xchg
int
adc
lds
std
jbe
in
dec
mov
and
push
xlat
movsl
sub
dec
or
add
xorb
xchg
xlat
sbb
sub
icebp
mov
xor
xchg
and
insl
and
xor
aaa
push
xor
std
or
mov
std
fists
pushf
dec
inc
cmp
jbe
push
add
and
and
or
stos
jle
mov
jge
rolb
jnp
adc
or
push
les
rcr
lods
fnstsw
push
lcall
insl
and
loope
or
dec
roll
mov
in
aad
push
lcall
push
pop
add
jae
dec
clc
out
mov
mov
sahf
push
mov
mov
push
mov
sbb
sbb
jl
cmpsl
mov
aas
push
mov
aam
lods
cmpsb
cmp
add
mov
into
adc
cmpsl
sub
push
adc
insb
adc
stos
cmpsl
cmp
int3
adc
ftst
cmp
scas
lods
add
imul
cld
sbb
daa
adc
sub
stc
jmp
and
mov
xor
push
out
cwtl
jo
push
aaa
push
and
mov
dec
into
add
ja
adc
stc
push
adcl
dec
aad
add
enter
ret
sti
or
push
movsb
rorb
add
mov
and
and
negb
adc
in
cmc
rolb
and
add
cli
push
and
jg
pop
loope
add
pushf
mov
cmp
mov
nop
jne
push
adc
insl
cwtl
pop
je
lods
dec
and
js
add
add
lods
mov
popf
lods
mov
fbstp
daa
leave
sub
pusha
ret
subl
fmuls
dec
movntq
jle
add
inc
jbe
shl
out
xor
fistl
shrb
jecxz
mov
arpl
shrb
mov
inc
and
xchg
jbe
and
push
and
push
cld
mov
outsb
inc
jno
repnz
dec
xor
test
je
and
mov
data16
aad
sub
loop
outsb
pop
aad
cmp
jo
ss
xchg
jle
lds
inc
xor
pop
fldenv
jnp
sarl
cmp
sarb
add
cmpsb
testl
test
pop
mov
in
xchg
into
adc
sbb
leave
in
mov
dec
mov
rolb
cwtl
fwait
push
daa
adc
mov
enter
decl
mov
mov
jo
cmpsb
xchg
push
push
mov
push
stos
dec
dec
cmp
ds
hlt
adc
push
lods
sub
loope
mov
aad
divl
aad
cmc
lods
jmp
mov
and
or
xor
pop
iret
fs
movsb
add
cmp
pop
jnp
out
insb
daa
insl
aas
outsb
inc
push
sbb
mov
jnp
cltd
cmc
pop
adc
adc
inc
push
outsl
movsb
jae
repz
andl
pop
pop
adc
cli
lods
xchg
orb
insl
imul
loopne
loopne
xor
pop
pop
mov
call
pop
rcrl
mov
xchg
lock
loopne
cmp
adc
jge
jge
xchg
push
shll
je
pop
nop
fwait
pushf
push
roll
dec
mov
es
lret
push
add
lahf
lret
lods
call
adc
cwtl
ficoml
xor
dec
mov
cmp
xchg
scas
mov
ficoml
popa
fwait
adc
mov
cld
int
cmp
pop
daa
xchg
aaa
sbbb
cmpb
rclb
cmp
cmp
and
out
shrl
sbb
mov
push
mov
push
call
mov
lret
inc
rclb
dec
xor
shrb
pop
fs
aas
and
fadds
mov
add
mov
outsb
inc
inc
ds
scas
adc
adc
scas
out
sbb
fucomip
pusha
xor
testb
cli
or
and
loop
in
lods
icebp
mov
sub
fsubrl
fdivrl
std
outsb
pop
add
icebp
call
fcmovb
push
enter
xchg
adc
mov
lahf
clc
test
xchg
mov
fistl
leave
insl
cmp
sbb
vpsubsw
in
push
xchg
cld
and
mov
inc
xchg
adc
mov
adc
mov
push
inc
jae
incl
popa
mov
mov
or
dec
push
es
fbld
inc
sbb
push
jo
xchg
cli
add
rcrl
rorl
and
out
fnstcw
stos
sub
aas
test
enter
fnsave
sub
lea
xor
das
fwait
jg
jg
lock
enter
subl
mov
das
jg
lods
cmpsl
shrl
maskmovq
negl
lret
loope
cmpsb
jb
cwtl
daa
adc
pop
icebp
cmp
sub
xor
adcl
imul
loop
add
lock
sbb
aaa
add
pop
arpl
and
push
and
adc
xchg
mov
jbe
mov
mov
fists
mov
cmp
sbb
filds
jle
sub
xchg
ficoml
out
sarb
ljmp
arpl
jnp
jns
sti
or
push
cwtl
ja
sub
lds
cmp
scas
xchg
gs
aam
jl
stc
jbe
xor
inc
sbb
imul
adc
enter
fdivl
lahf
loopne
out
in
mov
mov
mov
int3
mov
ja
jmp
lea
call
pop
ss
das
sbb
por
hlt
jo
cmpsl
jbe
out
mov
jo
aas
jmp
pop
out
xor
push
sbb
mov
out
cmp
and
jb
mov
andl
andl
rcll
adc
test
mov
cmp
loop
into
ja
stos
subl
lods
xchg
clc
xor
sbb
cmp
popf
out
sub
dec
fmuls
and
mov
das
sahf
aad
push
or
insb
subl
shll
imul
cmp
jmp
fcmovbe
rcrl
xchg
mov
lds
fidivrs
dec
orl
mov
lcall
mov
xor
xor
lret
mov
jmp
xchg
mov
cmpb
stos
jbe
rorb
push
fisttpl
loop
fsubp
push
sub
cmpsb
xchg
or
lret
stos
outsb
cmp
sti
xchg
fadds
cwtl
xlat
cmp
mov
cmp
in
or
enter
ds
loop
stos
sbbb
sub
xor
pop
ljmp
jbe
sub
shl
sub
or
test
mov
popf
dec
mov
popf
jbe
daa
xchg
xchg
addr16
fsubs
stc
test
fdivrs
into
sbb
in
xchg
pop
in
cmp
fmuls
mov
shrl
lds
das
pop
rcrb
dec
aaa
jns
xor
sbb
lock
loop
jbe
cmpsl
dec
mov
adc
push
jb
pusha
mov
push
rorl
std
popa
fadds
mov
or
mov
cmp
dec
dec
stos
mov
stc
mov
push
jno
fwait
mul
jl
lods
dec
adc
shl
jo
xchg
or
sbb
xor
push
cmpsb
insl
inc
cld
adc
jno
mov
add
add
add
inc
add
add
subl
mov
das
adc
ret
pop
pop
out
sbb
jmp
mov
int3
and
clc
pop
popf
push
xchg
out
mov
mov
out
add
or
add
add
add
add
add
add
or
inc
test
out
pop
lcall
jle
mov
lahf
mov
jg
fistpl
push
mov
pop
mov
xor
daa
pop
cmp
cli
mov
test
mov
call
mov
cmpl
mov
jns
data16
xchg
outsb
push
push
pop
xor
shr
cmp
into
sbb
jg
mov
push
mov
mov
lcall
xor
jmp
inc
pushf
or
mov
movsb
push
cmp
sarb
out
pop
xchg
pushl
push
push
lods
add
mov
add
mov
mov
xchg
ja,pn
mov
js
ret
test
incb
sbb
sub
dec
dec
mov
mov
sahf
sbb
or
sub
jbe
ret
daa
cld
sahf
jge
fildll
jns
mov
fimull
mov
push
popf
mov
movsb
dec
imul
mov
cs
sarb
pop
movsb
je
mov
sub
repnz
jge
repnz
cmpsl
inc
inc
mov
mov
popf
mov
jle
mov
or
dec
leave
fisttps
jne
arpl
daa
pop
adc
add
ljmp
xchg
jne
pop
imul
jb
xchg
jo
neg
lcall
nop
sbb
cld
sbb
iret
cmp
push
fsub
testb
jp
fs
jb
ss
sahf
test
ljmp
mov
pop
scas
in
repz
pop
xchg
mov
aaa
mov
out
bound
xor
dec
sbb
cmp
cmpl
mov
jno
inc
dec
pop
popf
loope
push
insb
inc
cmp
cmp
dec
rcll
cs
adc
idivb
jle
add
mov
dec
add
mov
cmpb
push
out
ja
xor
adc
movsl
pop
movb
aaa
adc
jp
icebp
add
orb
rep
iret
pusha
hlt
adc
outsb
in
dec
push
or
xchg
pop
xchg
sbb
outsl
mov
aad
mov
outsl
mov
and
das
daa
cltd
push
adcb
bound
xchg
gs
andps
xchg
xlat
push
es
clc
bound
mov
or
and
sbb
xchg
cmc
xchg
mov
lods
push
dec
inc
mov
rcrb
pop
jne
and
add
jo
cmp
push
in
fnstsw
shlb
mov
mov
mov
push
adc
adc
test
jp
inc
push
loop
movq
cmpsb
outsl
add
mov
in
xor
and
insb
xor
or
push
outsl
dec
ljmp
call
out
and
fsts
rolb
insb
cmp
sbb
and
jnp
sub
cmc
nop
and
and
add
adc
and
lret
pop
xor
sti
int3
into
push
out
repz
dec
loop
inc
addl
jb
xchg
lret
es
jae
sbb
xchg
push
mov
loope
mov
test
stc
sub
popf
shrb
call
cltd
mov
ret
inc
pop
movsl
out
insl
push
push
jne
sbb
jne
fisttpll
out
xchg
mov
xor
add
pop
aad
lds
lock
xlat
mov
jne
push
sbb
dec
pop
or
push
out
aam
stc
lcall
popf
cmp
loopne
insl
les
je
pop
test
test
mov
push
ljmp
outsl
insl
sub
mov
add
or
cmp
push
cmc
mov
in
shlb
mov
stos
cmp
insb
aad
mov
movsb
testl
adc
cmp
mov
xchg
pop
int3
mov
xchg
into
leave
das
addl
mov
add
push
xor
shrb
jmp
in
inc
sahf
pop
pop
dec
or
push
pop
lods
aaa
adc
mov
dec
shl
mov
pop
ret
out
lds
arpl
movsb
dec
mov
in
jecxz
hlt
in
cmpsb
popf
dec
call
and
test
push
test
es
xchg
orb
push
adc
mov
int3
sub
ss
sub
imul
xchg
loope
mov
xchg
mov
mov
mov
dec
xchg
mov
cmp
inc
fldcw
add
add
mov
mov
adcl
dec
int
push
and
sbb
pop
das
iret
lahf
lahf
fcompl
and
data16
repnz
push
jbe
cmp
or
movb
stos
clc
add
pop
outsb
inc
pop
stc
lock
out
ljmp
mov
xchg
ret
mov
leave
sbb
xor
cmp
ss
pop
shll
out
fnsave
jae
pop
xor
mov
jnp
lahf
push
test
jl
les
xor
pop
out
ljmp
orb
inc
out
jnp
push
daa
fs
inc
jmp
fdiv
xor
cmp
icebp
jl
add
in
mov
jge
testl
push
into
add
dec
mov
je
fbstp
subb
movsl
daa
mov
add
add
inc
push
add
push
sub
or
jnp
xchg
xchg
test
cmpsl
repnz
mov
in
call
mov
ret
popf
sti
mov
sbb
lcall
push
sbb
push
mov
sahf
jae
fmul
out
outsb
add
cld
movsb
push
dec
adc
sbb
xchg
les
out
aad
mov
cmp
stc
mov
cmc
jns
in
mov
jl
add
cmpb
in
popa
add
popf
popf
sub
dec
xchg
pop
mov
int
add
push
xor
arpl
mov
aam
mov
pop
test
lret
int3
shl
fldenv
and
out
sub
imul
cltd
jp
adc
mov
dec
mov
cmc
movsl
pop
xlat
cwtl
cmp
outsb
push
mov
popf
and
movsl
push
xor
decb
sub
fstl
xor
jl
lahf
adc
test
cmp
inc
dec
out
pop
sbb
sbb
inc
and
inc
jae
xchg
lcall
sbb
dec
aam
mov
shlb
adcb
imul
jg
incb
aad
int3
lret
fbstp
jg
in
out
jp
xchg
pop
and
es
add
pop
xchg
rorl
xchg
xchg
sbb
fldl
pop
inc
cmpl
stos
lea
cmp
loopne
xlat
leave
jae
cmp
push
sbb
fistpl
lods
push
ror
jno
gs
xchg
add
fldcw
dec
pop
popw
adc
mov
mov
incl
psubsb
mov
and
js
je
xor
sbb
adc
enter
xchg
sbb
iret
cmp
repz
sub
push
pop
lds
xor
or
xchg
in
push
lret
pop
push
sub
and
fdivrp
test
add
pop
adc
xor
es
cmpsl
leave
sarl
icebp
cmp
and
outsl
push
into
mov
add
inc
sahf
push
add
mov
data16
and
icebp
or
call
xchg
sbb
inc
gs
shlb
sbb
adc
jmp
pop
lock
out
inc
add
jl
dec
idivl
in
mov
xchg
xchg
inc
push
das
rcrl
push
lcall
mov
push
fldt
jecxz
int
xchg
int
mov
pop
shrl
lock
out
addr16
adcl
shll
std
mov
mov
lods
ss
loopne
sbb
icebp
ja
cmp
or
cltd
push
mov
ja
sbb
mov
pop
ror
rcrb
jo
push
dec
pop
sbb
aas
add
sbb
dec
mov
inc
popa
push
sarl
or
loop
shrd
and
mov
dec
aaa
or
mov
daa
inc
in
and
lcall
bound
sub
mov
inc
pushl
mov
cmpb
pop
push
jg
fimull
into
cmp
jmp
movsl
push
ss
inc
sub
js
inc
ss
add
dec
and
or
xchg
lods
jns
mov
aad
sub
lock
lock
dec
sub
mov
das
jmp
mov
and
arpl
ret
or
and
jno
mov
aam
imul
inc
or
cmovo
repnz
dec
sbb
xchg
mov
aas
sub
lret
das
lods
mov
es
mov
cltd
xor
insl
stc
pop
mov
testb
sarl
and
pop
cli
mov
fcompl
xchg
ss
in
mov
xchg
fisubs
out
cld
stos
pop
jne
pop
and
lcall
pop
adc
sbb
push
mov
inc
into
push
fists
xchg
mov
in
pop
mov
sbb
pop
aad
rcll
jecxz
stos
adc
add
add
or
ss
mov
lds
sahf
pop
ror
pop
lcall
sti
pop
dec
xchg
rorl
push
iret
jmp
cs
pop
stos
test
add
mov
cmp
call
inc
lods
jae
repnz
mov
aad
add
add
stos
jbe
imull
pop
inc
ficomps
cli
std
negb
xchg
add
loop
jne
or
test
sti
in
lret
mov
cmpl
mov
cs
and
mov
pop
dec
in
rorl
inc
mov
loopne
xor
test
or
shrl
stc
push
pop
cmc
clc
xor
mov
loop
push
adc
sub
jb
movsb
mov
mov
mov
ret
sub
add
or
jnp
ljmp
or
jg
and
mov
and
or
jg
outsl
add
imulb
dec
outsl
xchg
jl
frstor
jbe
or
enter
xorl
in
fcompl
idivl
gs
cmpsb
dec
stos
scas
pop
xor
add
movsb
stos
dec
jle
jnp
mov
sbb
insb
xchg
lret
int3
into
fcompl
popf
pop
add
jo
aaa
inc
inc
lods
push
mov
mov
cltd
add
add
les
ret
inc
ret
mov
push
add
lock
xor
xchg
icebp
inc
ret
jno
pop
jge
jns,pt
outsl
push
inc
mov
xchg
jnp,pt
dec
or
dec
fwait
pusha
cmp
sbb
inc
push
cmc
lret
or
adc
add
sbb
xchg
xchg
scas
bswap
lea
bound
mov
in
lods
popa
mov
outsl
pop
xor
sub
push
lock
pop
inc
pop
jns
int
mov
and
xor
outsb
cs
rcll
push
xchg
lret
into
test
sbb
mov
or
sbb
loop
sbb
pop
stos
fiaddl
mov
push
inc
xchg
push
or
and
inc
fsts
imul
jmp
pop
das
add
xor
sbb
pop
scas
cld
xchg
daa
nop
xchg
adc
sbbb
lret
or
pop
mov
add
sub
arpl
or
pop
mov
imul
mov
rorl
jl
pushf
dec
das
repnz
cld
and
pop
imull
inc
cltd
mov
neg
xchg
enter
pop
cmp
in
sbb
cmp
outsb
ljmp
adc
shll
cmp
lods
mov
scas
lret
mov
dec
pop
dec
mov
int3
stos
test
int
lret
add
cmpsb
mov
jne
mov
roll
fwait
scas
sti
mov
mov
stos
movsb
push
push
jbe
ja
hlt
leave
pop
rolb
adc
out
rol
or
test
inc
cmpsb
ficoml
xchg
lock
inc
add
mov
add
psubusw
sub
jge
inc
pop
sbb
jl
add
ds
dec
dec
jl
xchg
sub
xchg
mov
paddusb
pushf
and
roll
xor
and
push
pop
xchg
sbb
cmpsb
xor
cmpsb
pop
arpl
cmp
aas
jo
outsb
repz
outsl
or
xor
inc
sbb
mov
mov
test
outsb
jg
jg
iret
outsb
adc
mov
test
xor
out
jbe
fsubs
xchg
add
movsl
sahf
in
mov
enter
loop
mov
mov
jecxz
shll
inc
inc
mull
outsl
push
pop
mov
repnz
jae
cmpsb
pop
mov
in
push
mov
xchg
mov
loop
sub
ret
dec
xor
adc
jbe
xchg
mov
test
scas
pop
int3
ficoms
test
mov
aaa
dec
and
fwait
clc
mov
xor
stc
mov
mov
jno
ja
push
mov
test
xor
pop
lods
cmp
mov
dec
jne
loop
cmpsl
std
es
push
les
push
push
sub
rorl
loop
ret
pop
and
fldenv
sub
leave
or
xchg
sub
pop
push
sub
xchg
pop
dec
mov
push
pop
out
jl
movsb
leave
testb
mov
or
pop
inc
push
sub
xchg
sub
stos
iret
insb
mov
mov
lds
adc
add
ds
lods
leave
mov
mov
jo
jo
ja
jmp
test
movsb
xor
jg
cmp
mov
data16
int3
mov
ret
pop
cmp
dec
aaa
xor
int3
lods
sub
scas
add
and
xor
arpl
leave
mov
add
cmp
test
jg
mov
cmp
outsb
adc
and
cld
lods
cwtl
pop
pop
sub
movsl
xor
and
lods
sub
mov
xor
in
jo
push
fmuls
aam
clc
lods
in
repnz
cmpsb
mov
data16
pop
sbb
idiv
lock
inc
out
lret
pop
mov
scas
add
sub
jge
mov
js
das
xor
sahf
int3
xor
mov
repnz
ljmp
ds
mov
sahf
push
sbb
adc
loop
cli
outsb
int3
sub
pop
rcl
and
or
or
out
outsl
dec
cmp
mov
icebp
mov
iret
xchg
ljmp
stc
aas
ficompl
sub
xchg
in
xchg
mov
lcall
xor
mov
ficoml
je
enter
inc
fisttpl
in
jns
daa
jae
mov
fwait
mov
mov
cwtl
mov
inc
adc
push
add
pop
adc
data16
les
adc
sbb
das
test
mov
xchg
push
pop
cmpsb
aad
adc
mov
push
push
bound
inc
popa
scas
xchg
mov
fsubrs
pushf
inc
test
outsb
cwtl
sbb
sbb
mov
call
xor
push
data16
xchg
in
leave
mov
test
dec
daa
sub
dec
roll
mov
lret
add
xor
rcr
icebp
enter
outsb
dec
subb
aam
and
fcmovne
push
test
push
outsb
lret
or
out
stos
xchg
data16
xchg
lahf
mov
mov
les
cs
aas
shll
jg
cs
shr
xchg
popa
jge
pop
pop
push
jl
xlat
cmp
mov
add
and
fsub
jo
in
dec
sbb
pop
or
add
mov
es
mov
push
test
sub
cmpb
xchg
ret
mov
sbb
pop
ja
xchg
lods
sbb
xor
inc
adc
cmp
jg
dec
test
or
jecxz
xchg
sub
aad
mov
xchg
cmp
mov
mov
sbbb
xchg
or
roll
int3
aaa
jp
scas
mov
ljmp
sub
or
test
insl
cmpsl
imul
and
scas
inc
or
test
js
push
mov
out
mov
push
rclb
lock
jbe
fsubrs
iret
xor
mov
sub
mov
fwait
cmpsb
inc
aam
fdivrp
pop
jo
and
sbb
insb
out
push
xchg
out
pop
scas
mov
lock
fcompp
es
jl
gs
addb
je
push
mov
push
pop
jmp
rorl
dec
mov
or
add
call
scas
pop
aaa
div
in
imul
inc
pop
dec
daa
fisttpl
adc
xchg
cmp
cmp
xor
xchg
pop
enter
pop
or
dec
mov
dec
cmc
jnp
sahf
icebp
ja
ljmp
loopne
fistl
xchg
fs
jle
jae
ss
mov
fs
flds
mov
adc
xchg
pop
inc
push
sub
push
pop
sbb
icebp
mov
add
dec
mov
adc
dec
xchg
andl
es
xor
cmpsb
cli
sbb
sub
xchg
mov
xor
inc
fidivrs
mov
loope
ss
inc
mov
xchg
jecxz
scas
sub
and
aaa
jae
ret
sbb
push
lcall
dec
sub
mov
xor
and
lods
mov
arpl
jno
push
push
pop
mov
dec
mov
mov
jmp
push
fstpt
stos
out
inc
es
fisubrl
xchg
es
xor
repnz
pop
push
push
pop
pop
clc
fstpt
mov
mov
lea
jp
sbb
lock
dec
pop
dec
mov
imul
adc
push
jle
cmpsl
or
mov
ret
xchg
mov
xchg
dec
jmp
ret
stos
mov
fstps
mov
xchg
xchg
cmp
es
dec
sub
aas
nop
mov
jns
cmp
outsb
lock
nop
sarl
mov
adc
in
scas
push
pop
jnp
xor
inc
pop
dec
inc
sbb
lahf
mov
and
sbb
sbb
adc
adc
jo
rcrl
or
clc
mov
and
shlb
sbb
mov
adcb
inc
xor
insl
out
idivb
subl
mov
push
nop
inc
sub
ds
clc
inc
sbb
sub
xor
icebp
movsl
cmc
imul
je
mov
pop
jecxz
mov
sahf
mov
add
popa
xchg
push
sbb
stos
subl
mov
add
jp
dec
std
lret
jne
push
xorb
decl
std
xchg
add
popa
sub
mov
add
test
dec
xchg
dec
add
icebp
add
jge
push
test
add
adc
sub
add
jmp
add
and
jmp
add
test
incl
jmp
add
sub
incl
sub
call
xor
push
push
push
push
call
mov
movzbl
push
pushl
pushl
call
add
cmp
jb
mov
pushl
pushl
call
nop
pushl
pushl
xor
pushl
pushl
call
xor
call
add
cmp
jb
call
call
leave
popa
ret
add
add
add
cltd
jecxz
psllq
add
pop
sub
dec
repnz
inc
inc
cmp
mov
jl
lahf
shll
sbb
fisubs
lfence
lock
xchg
insb
adc
inc
xor
ljmp
jb
ret
jnp
imul
jno
xchg
pop
test
popa
push
mov
cmp
clc
xchg
push
dec
ret
push
jmp
pop
lods
loop
test
push
gs
cld
pop
scas
icebp
cmp
popf
push
ljmp
add
loope
add
cmp
scas
fnstsw
lods
sub
cmp
dec
sarb
lea
xchg
out
insb
dec
sbb
mov
mov
jbe
cmpsl
pushf
sahf
fnstcw
movl
or
add
jmp
psubd
jg
movsl
lahf
inc
mov
arpl
adc
push
js
xor
mov
cli
dec
sub
js
lds
inc
aad
pop
test
xor
jnp
movb
mov
shrl
call
inc
add
xchg
inc
dec
cmp
out
push
movsl
jnp
push
jecxz
xor
xor
jne
jbe
mov
cmp
push
out
movsb
imul
out
int3
dec
cli
les
cld
mov
mov
clc
jnp
sub
mov
imul
out
inc
lss
add
cltd
mov
frstor
push
dec
scas
push
es
pop
scas
lods
movups
cwtl
nop
inc
movsb
aas
sbb
mull
call
shrl
jmp
push
sub
sbb
out
xchg
fisttps
loope
xchg
es
aas
push
mov
shrb
cmp
in
lahf
dec
pop
cmp
mov
and
add
aas
mov
adc
cmp
or
call
repnz
xor
sarl
pushf
mov
adc
and
aad
xchg
mov
jo
enter
cmp
sub
ljmp
das
ja
dec
or
in
mov
lcall
xor
and
jne
pop
das
adc
dec
aas
mov
mov
mov
sti
xchg
lret
cmpsl
jbe
sahf
inc
pop
test
push
insl
jnp
mov
add
adc
cmp
mov
jmp
das
loope
scas
cmp
mov
or
aam
scas
mov
inc
mov
jno
mov
push
xchg
fs
adc
rcrb
adc
dec
mov
shlb
xor
data16
das
mov
mov
mov
mov
mov
sbb
inc
clc
sub
hlt
adc
pop
xor
inc
loope
lods
lods
inc
pop
aas
inc
mov
ret
out
in
sbb
jmp
scas
aaa
jo
cmc
jl
push
outsb
mov
out
inc
cmpsl
in
inc
shlb
cmp
add
aad
loop
adc
test
sbb
iret
jmp
fistl
je
fwait
aam
insb
das
out
mov
adc
pop
sbb
mov
popa
aas
aad
push
ds
cmp
jns
ret
inc
mov
fs
sbb
das
push
pop
cltd
mov
sub
jge
in
arpl
adc
loop
xor
test
inc
cmp
repz
cld
data16
rorl
cmp
movsb
cmp
dec
cli
mov
lea
mov
stc
js
lods
mov
ljmp
xor
add
add
push
int3
aam
mov
xchg
test
sbb
fs
xlat
xchg
ja
add
pop
int3
cmc
rolb
push
xorb
jge
sbb
inc
jge
mov
dec
push
sub
in
jg
aas
stos
or
pushf
das
std
mov
pop
inc
ret
mov
gs
out
push
jbe
stos
repz
movsl
and
in
xcrypt-ctr
cmpsl
push
inc
xchg
xchg
mov
dec
inc
xor
cs
incb
imul
pop
cmp
in
push
dec
mov
mov
jge
xchg
fimuls
addr16
loope
movsl
pop
pop
dec
mov
mov
stos
add
mov
mov
push
push
add
sbb
sub
push
adc
pop
loopne
fstps
dec
movsl
cs
push
inc
fwait
or
cmp
cmp
rorl
push
sub
cwtl
jne
mov
ljmp
scas
into
test
les
jbe
js
sub
mov
jno
data16
inc
inc
subb
and
loop
mov
inc
jl
jmp
leave
and
push
fnstsw
lds
aad
clc
xor
pop
push
dec
and
sbb
les
daa
cmpsl
hlt
cmp
sbb
mov
pushf
in
lahf
push
xlat
and
or
divb
scas
fcom
shll
sbb
mov
clc
adc
dec
pop
sbb
or
jnp
scas
xchg
mov
int3
mov
stc
mov
mov
cs
push
scas
mov
lret
xor
push
jmp
in
adc
inc
fucom
inc
and
sbb
ret
cmp
icebp
stos
loop
mov
and
or
cmp
xchg
push
sbbl
ljmp
rcr
jmp
js
sub
stc
arpl
mov
sub
adc
and
adc
int3
fidivl
ret
nop
inc
dec
mov
cmp
fadds
add
sub
loop
sbb
icebp
push
or
adc
iret
xchg
pop
adc
in
cwtl
iret
push
repnz
loop
mov
pop
sbb
sbb
loop
xchg
push
dec
sahf
ficompl
dec
nop
cwtl
movsl
repnz
dec
cmc
mov
loop
sahf
ficompl
sahf
repz
jl
fists
sahf
jbe
fildll
adc
into
push
push
cmpsl
inc
dec
push
adc
andl
cmpsb
out
add
sub
mov
ljmp
enter
arpl
outsb
and
int
sbb
out
mov
dec
lock
xor
in
sub
adc
nop
cmp
insb
xorb
std
pop
cmp
pop
repz
pop
pcmpeqb
enter
mov
mov
mov
pop
rolb
incl
jo
push
out
mov
jae
stos
loopne
adc
jmp
jecxz
outsb
ret
mov
pop
lock
scas
lahf
cld
sbb
mov
xor
push
cld
mov
push
add
sahf
sub
sti
clc
add
pop
lods
lods
fldl
in
push
lea
pusha
pop
popf
lock
cwtl
push
imul
iret
les
xchg
push
frstor
jno
and
and
das
ss
ljmp
cwtl
jmp
and
jmp
mov
lret
nop
mov
pop
js
inc
jno
ja
jbe
and
mov
mov
adc
mov
pop
or
lods
repnz
sti
xor
or
mov
sub
je
test
aam
mov
jno
cltd
aam
wrmsr
mov
std
push
jae
inc
in
stos
adc
inc
ret
enter
sbb
add
das
add
adc
and
dec
cmp
or
mov
add
jmp
stos
test
roll
cmp
int3
pop
loopne
lcall
jl
xor
dec
xchg
sub
gs
ret
pop
mov
divb
cs
push
mov
cmpsb
fbld
shll
inc
adc
imul
rclb
jl
sbb
cwtl
adc
je
test
cmp
negb
push
push
lahf
push
outsl
sbb
mov
pop
jl
pop
xor
cmp
jle
lods
xchg
sub
add
mov
mov
xlat
and
inc
pop
mov
cltd
jp
jo
dec
sub
repnz
sub
jb
cmpsl
addb
in
sbb
jmp
inc
mov
pop
frstor
mov
mov
loope
insl
je
lods
adc
arpl
mov
add
add
out
loop
add
std
insl
aad
loop
adc
jmp
insb
jne
mov
pusha
sub
jnp
mov
lret
popa
test
testb
sahf
inc
insb
and
jp
mov
or
pushf
sub
and
clc
add
loopne
fldcw
inc
fnstenv
test
dec
inc
pusha
aad
mov
mov
cmp
stos
test
xor
mov
in
dec
and
lea
jno
push
dec
xor
in
xchg
inc
cmp
jp
mov
lcall
and
movsb
dec
cmp
inc
lods
mov
leave
push
inc
clc
test
ss
mov
bound
iret
and
sub
iret
mov
mov
movsl
inc
mov
fbld
mov
add
leave
cli
fistpl
data16
lods
and
and
xchg
jb
bound
mov
jne
iret
aaa
inc
mov
xor
int3
ret
mov
popa
cmp
cmp
dec
adc
ds
aas
cs
mov
cld
mov
enter
and
or
cltd
mov
int3
add
in
pop
into
movsl
cmpsb
dec
je
lods
mov
sti
cltd
bound
or
daa
cli
and
xor
movsl
adc
inc
jmp
cmp
rolb
mov
lds
sti
xor
int3
cmp
lds
or
and
test
sarl
push
andb
sbb
inc
leave
add
out
cmp
and
shlb
fmull
mov
fldt
call
push
jne
dec
ret
inc
xchg
and
or
fmulp
xchg
es
arpl
add
aad
insl
out
sahf
jno
bound
shlb
rcrl
and
mov
push
mov
inc
popf
lods
cmp
push
xchg
lret
imul
xchg
inc
or
out
pushf
sub
sti
xor
xor
imul
jo
mov
mov
lods
fwait
movsl
xor
push
es
fimull
popf
stos
and
sub
cli
shlb
dec
xlat
aam
ret
outsb
and
test
dec
bound
icebp
ret
xchg
pop
sti
cltd
popa
fimull
nop
lret
in
mov
mov
test
sbb
fisttps
jecxz
adc
ja
dec
test
aaa
xor
std
jb
ja
faddl
fstpt
in
xlat
xchg
jne
inc
in
sbb
dec
mov
push
mov
xor
movsb
outsl
nop
jae
testl
xlat
push
xchg
mov
push
sbb
mov
mov
test
repnz
fdivl
movsl
fcomp
jae
mov
inc
ss
iret
cmc
mov
push
movsb
mov
hlt
dec
mov
shrb
aaa
push
xlat
push
add
shlb
sahf
push
rol
leave
shlb
xchg
sti
loop
pusha
mov
cmc
add
push
out
fs
repnz
inc
pushf
fisubrl
or
jno
bound
cltd
xchg
fistpl
pusha
enter
xor
sti
xor
pusha
add
cltd
mov
push
sub
out
sub
push
xacquire
es
repnz
in
int
movsb
dec
rcl
cmpsl
xchg
stos
xor
jecxz
bound
and
mov
or
jb
xchg
int
sbb
aam
aas
pop
loopne
ljmp
push
ret
mov
xchg
dec
sub
idiv
inc
sahf
or
jae
mov
daa
repz
dec
mov
loope
cwtl
test
enter
cmpsb
adc
xchg
xor
pop
sbb
dec
jo
mov
iret
int
push
fsubr
sub
jge
mov
mov
mov
push
adcb
adc
xor
fisttps
fisttpl
cwtl
and
int3
cmp
ds
xor
rclb
xchg
into
inc
fs
lret
jns
loop
ljmp
pmuludq
mov
rorb
xor
jbe
daa
push
in
push
movsb
pop
in
add
mov
repnz
out
jecxz
push
xor
or
test
or
and
lods
inc
mov
cmp
cmpsb
jae
into
ret
pop
jl
push
jo
ja
daa
add
cmc
fmuls
clc
popa
push
bound
add
out
sbb
fs
scas
out
jnp
mov
gs
sbb
sbb
cltd
mov
pop
or
inc
pop
jns
nop
enter
xchg
bound
or
fnstenv
fistpll
dec
dec
dec
sbb
mov
mov
dec
dec
xchg
es
std
int3
mov
jge
inc
call
mov
push
cmp
ljmp
mov
rol
sahf
jle
loopne
out
movsb
inc
in
jmp
jl
shll
mov
fsubs
out
xor
sub
inc
push
fmull
cltd
pushf
cmp
mov
adc
and
jge
mov
inc
pop
xchg
push
or
or
jo
push
fmuls
sub
fwait
or
inc
mov
lods
inc
ja
iret
fmul
in
imul
xor
cmp
mov
mov
loope
push
mov
movsb
mov
data16
sti
sub
mov
das
xchg
jmp
sbb
das
int
cmc
jle
or
fadd
xchg
ror
imul
mov
cmc
xlat
push
scas
add
push
pop
mov
sarb
push
add
cmp
mov
jae
icebp
pop
add
out
ja
scas
dec
or
xor
jo
add
sub
or
js
lods
loope
inc
inc
or
clc
or
dec
push
mov
pmaddwd
mov
ljmp
ror
fnstenv
or
hlt
adc
push
dec
pop
inc
in
popa
xor
xor
dec
ja
adc
insb
cmpsl
or
cmpsl
lahf
and
cmp
or
aam
es
mov
mov
pop
fisttps
cld
sbb
sub
aam
mov
stos
add
adc
sub
dec
arpl
insb
add
lret
dec
pusha
cmpsl
scas
sub
aam
movsl
sbb
jecxz
dec
add
dec
push
or
loope
es
adc
lock
es
mov
jo
addl
fldcw
lds
loopnew
fists
stos
push
add
ljmp
in
repnz
dec
fldt
mov
addr16
mov
sbb
into
and
scas
xchg
out
in
xor
jns
dec
mov
dec
out
inc
fs
loope
lahf
jno
adc
dec
jg
lea
xchg
jb
push
mov
insb
hlt
pop
fwait
jp
cmpsb
add
shlb
fdivr
sub
cs
and
jecxz
fstpt
dec
sub
aas
arpl
and
icebp
fisubs
xchg
xchg
xlat
or
repnz
mov
stc
subb
repnz
pop
xchg
xchg
leave
mov
call
nop
stc
and
lret
decb
je
jns
das
xor
and
popa
ret
inc
pop
adc
in
mov
cmpsl
frstor
push
jns
lret
push
mov
pop
and
jnp
mov
sti
idivl
aas
movsb
daa
jle
sbb
add
fwait
lock
mov
add
adc
push
xor
xlat
add
cmp
lret
dec
fs
lcall
add
mov
mov
inc
push
xchg
stos
ljmp
fisubl
inc
mov
add
sbb
ret
loopne
xchg
shlb
inc
mov
arpl
push
mov
test
insb
sub
pop
and
jle
sub
rol
xchg
dec
inc
pop
jmp
xchg
cs
and
sbb
clc
inc
dec
xchg
sahf
test
enter
rcll
push
mov
jae
in
movsl
cwtl
cmp
das
mov
outsb
dec
pop
bound
aas
push
out
jl
lcall
pop
imul
mov
xor
fdivrp
out
in
int
xor
movsb
inc
mov
xorl
in
stos
xchg
outsl
pop
es
mov
jns
in
or
jo
inc
scas
je
inc
out
aad
shl
sub
fs
sub
out
es
imul
cmp
cmp
nop
push
in
stos
dec
insb
cmp
ja
jge
test
jmp
jb
and
push
and
sbb
imulb
add
movsb
add
xor
les
pop
fdivrs
insb
jecxz
mov
or
xor
lcall
js
out
mov
ret
pop
adc
add
pushf
cli
decb
push
dec
sarb
imul
sub
lret
test
repnz
pop
leave
mov
into
and
mov
push
lcall
mov
shll
inc
and
fdivrs
xchg
cmpsb
add
jne
or
pop
ljmp
das
jae
cmpsl
mov
sti
add
fucomi
sub
mov
and
test
ret
mov
mov
sub
jae
dec
imul
enter
int3
out
repz
pushf
cltd
mov
sbbl
insb
cmp
imul
xchg
sahf
gs
mov
inc
mov
movsl
xchg
sub
les
insb
scas
leave
or
sub
adc
jl
lock
jmp
mov
xchg
sbb
push
push
hlt
out
pop
xlat
ja
xor
call
inc
or
orl
loopne
fnstcw
ljmp
jmp
xchg
jmp
and
xlat
and
xchg
in
cmp
mov
jle
jg
jns
fstl
testb
push
movsb
and
out
lcall
dec
inc
or
pop
aas
pop
push
addl
add
inc
cmc
popf
sar
sbb
sub
out
int3
imul
lods
jge
cwtl
sbb
scas
in
and
mov
xor
shlb
cmp
fdivrs
inc
aad
mov
popf
stos
jge
cltd
mov
fdivl
jns
gs
popf
lds
inc
loopne
pop
add
inc
shlb
aam
push
sub
pop
xlat
pop
jo
add
fnstenv
add
movsb
push
ret
sub
push
shl
dec
fiadds
ret
jecxz
cmpsb
pop
decl
adc
cwtl
loope
xor
or
ja
dec
jbe
mov
push
repnz
inc
idivb
pop
mov
sarl
outsb
dec
icebp
ret
inc
add
sbb
mov
imul
icebp
pop
test
int3
test
dec
push
inc
lret
mov
and
sahf
cmpsl
pushf
fcompl
div
lret
sub
dec
mov
cld
pop
add
stc
push
xlat
xor
sbb
and
cmp
xchg
in
mov
sbb
adc
jmp
pop
call
mov
xorb
cmc
ja
popa
jmp
cs
pop
push
lea
mov
lret
ds
test
push
lret
ficoml
js
sti
and
mov
mov
fiaddl
out
xor
mov
fsubs
inc
fistpl
fbstp
dec
adc
into
mov
outsb
mov
dec
test
jecxz
les
sahf
mov
aaa
mov
add
jg
shll
pusha
mov
mov
test
dec
movsb
jns
jmp
add
test
mov
les
inc
fldenv
lds
fs
out
xchg
stos
je
into
fwait
repnz
jns
cmp
jp
and
pop
int
mov
add
das
jo
mov
inc
int
into
dec
push
inc
jle
mov
jmp
lds
in
or
sar
xor
aas
sbb
ja
pop
fs
cli
inc
mov
cmp
test
lock
cmp
mov
aaa
aam
inc
add
lea
lods
adc
andb
xlat
repnz
pushf
mov
jl
add
cmp
xorl
mov
and
and
inc
outsl
cmp
test
pop
and
sub
xchg
loope
jbe
inc
aaa
daa
lds
dec
add
lods
push
sub
pop
mov
lods
hlt
xchg
icebp
sahf
xchg
add
inc
cmpsl
fwait
push
mov
dec
movl
subl
subl
sarl
rcll
push
clc
test
pop
fbld
mov
mov
jo
push
lcall
inc
sti
out
mov
fcoml
cmpsb
add
pop
fstpl
xchg
fucom
dec
and
fcmovbe
lcall
jmp
inc
int
sub
add
push
fisubl
xchg
dec
es
mov
jmp
in
out
adc
dec
adc
clc
push
ja
mov
loop
add
popa
jmp
scas
daa
orb
jge
inc
add
jecxz
aam
fucomp
fdivs
mov
or
in
bswap
les
test
scas
push
repnz
dec
pop
cltd
mov
in
fs
fs
jb
leave
repz
lret
test
je
call
add
xchg
xor
sbb
sar
or
mov
sbb
sub
cmpl
push
cmp
ret
idivl
insb
xorb
jg
out
adc
int
jnp
es
sub
fwait
inc
in
xchg
in
add
pop
mov
jp
adc
test
jp
in
mov
xchg
cmp
and
mov
fsts
push
pop
cmpb
mov
jns
fs
push
out
and
out
repnz
dec
scas
stc
int
cwtl
adc
scas
test
cmc
cmpsl
jp
mov
and
push
jecxz
scas
or
mov
popf
xor
fcmovb
cltd
jp
aam
cmp
jecxz
cli
xorb
mov
ss
rorl
stc
dec
js
insb
sub
pop
pop
jmp
push
lcall
roll
inc
sub
sbb
pop
outsb
dec
xchg
mov
dec
mov
pop
fwait
adc
jmp
adc
mov
rolb
mov
or
inc
call
pusha
mov
mov
cmovns
xor
in
sub
ja
xchg
or
and
sub
mov
and
ret
mov
fs
ds
imul
jb
mov
cs
mov
add
push
xchg
mov
or
mov
pop
xchg
mov
sub
inc
jg
fcomps
pop
mov
sbb
pop
fstl
aad
jae
sub
jbe
lods
loope
shl
lret
xor
sub
xchg
and
aaa
into
push
jmp
pop
jbe
cvtpi2ps
daa
dec
mov
ljmp
push
imulb
jg
insb
and
jns
dec
cmp
jb
pop
test
pop
push
enter
lods
xor
test
in
scas
mov
das
fdivrl
sbbb
test
sub
xor
ror
out
mov
xor
ljmp
addr16
xchg
outsb
add
jecxz
pop
xchg
out
lcall
xor
mov
cmp
imul
leave
or
mov
add
andl
cmp
icebp
dec
sub
or
xchg
mov
ror
cmp
sub
cli
fwait
jle
jns
lcall
jmp
sarl
adc
jns
xchg
inc
clc
das
cld
cli
nopl
xchg
xchg
cld
cmp
jg
cwtl
mov
loope
add
int3
lret
test
daa
xlat
clc
je
popf
jg
pop
or
sbb
xchg
and
jnp
mov
push
pop
inc
cwtl
xor
sub
adc
xor
ss
call
out
enter
fucomp
repz
std
and
mov
cmp
out
repz
jne
push
xchg
movsb
lcall
aad
js
stos
push
pushf
pop
push
mov
adc
xchg
push
stos
sub
xor
out
cli
mov
in
andl
jge
xchg
fwait
mov
notl
adc
mov
enter
sbb
cwtl
xor
std
jno
lods
ret
scas
cmp
cli
popf
cld
push
mov
lret
push
xchg
lret
add
jle
cltd
mov
jo
dec
xchg
int
dec
test
adc
jne
fwait
in
jnp
imull
xchg
mov
jns
xor
mov
rep
xorl
dec
out
pop
mov
mov
cs
fwait
or
adc
fcmovnu
mov
out
and
jno
push
cmpsb
inc
pop
mov
adc
pop
sub
push
mov
loope
cli
lds
xchg
scas
dec
xor
or
test
outsl
xorl
aam
jg
cmova
inc
cltd
test
js
lahf
fnsave
fstpl
leave
jmp
jnp
push
test
fst
dec
and
jge
xchg
mov
xchg
push
xor
arpl
repnz
and
pop
push
jp
cmp
icebp
jne
test
icebp
jg
pop
lahf
pop
xchg
lahf
push
add
sbb
pop
add
add
inc
add
outsl
filds
and
add
add
pusha
add
add
pusha
add
add
add
inc
dec
push
int3
or
repz
add
jnp
adcb
inc
rcrl
out
inc
xchg
ljmp
cmp
jg
test
icebp
adc
pop
mov
cmp
aam
mov
mov
mov
add
ja
fisubrl
inc
or
out
outsl
push
cltd
stos
jle
insb
sbb
inc
push
insb
sbb
dec
fnsave
pop
pushf
add
dec
pop
cmp
pop
push
xor
testb
fwait
aam
shrl
mov
imul
neg
pop
insl
xchg
cltd
cmp
scas
lret
lds
sti
xchg
mov
fistps
cltd
loopne
xlat
and
adc
push
loopne
stc
push
cmp
inc
cmp
sar
stos
mov
jecxz
lods
sbb
addb
cmp
les
cli
push
aas
int3
test
dec
mov
or
jmp
mov
dec
fisttpll
cli
insl
aas
cmp
fcoms
push
pusha
and
lock
push
push
jne
addl
inc
push
jecxz
cli
xchg
cmpsb
cltd
imul
popf
adc
xor
rol
push
movsb
cmp
mov
adc
xor
mov
les
pop
lahf
adc
xchg
mov
inc
aaa
mov
sub
loope
xor
sbb
pop
gs
mov
mov
mov
mov
push
cmp
lahf
dec
sti
clc
loopne
pop
mov
inc
jle
cwtl
mov
loope
sub
xchg
fisubl
mov
sti
jp
mov
and
cmp
stos
sbb
pop
jge
or
mov
push
mov
push
clc
fwait
ret
inc
insb
icebp
out
ret
aam
and
inc
jne
jno
adc
and
popl
insl
cmp
pushf
xchg
cmpsb
test
push
in
fstpt
ja
sbb
push
pop
sahf
sub
lahf
pop
mov
inc
fnsave
cmp
or
pushf
push
call
pusha
xor
aaa
xchg
inc
mov
push
push
sarb
jo
insl
adc
lods
inc
xchg
and
xorl
cwtl
or
pop
add
mov
inc
pop
adc
loope
iret
push
xchg
fst
fbstp
shrb
and
xor
push
stos
cld
repz
outsl
aas
fnstcw
sub
gs
stos
pop
sti
cmpb
outsl
xlat
pushf
sar
aaa
sbb
or
dec
movsl
mov
jg
sub
xor
mov
dec
lret
push
inc
xor
punpckhbw
xchg
popa
add
aaa
jne
push
dec
adc
sbb
js
movsl
mov
cli
testb
mov
mov
insl
mov
fildll
cld
inc
and
pushf
cmp
inc
pop
push
mov
in
out
pop
fstpt
repz
stos
std
jno
mov
push
sarb
cmp
cmp
sti
adc
cmp
subl
fcmovnb
xor
in
pop
pcmpgtd
mov
stos
push
aas
push
aad
outsl
pop
mov
fbstp
cmp
aas
cmp
xor
push
shl
cs
stos
cmp
enter
lret
adc
andb
push
out
ljmp
mov
or
dec
push
leave
dec
and
lods
push
or
outsl
xchg
lret
inc
jge
inc
stc
mov
je
out
shlb
sti
inc
mov
and
mov
jnp
push
int
xor
sbb
ss
aad
andb
push
jbe
mov
fdiv
stc
ret
sub
mov
cwtl
pop
dec
jmp
mov
imull
cs
cmpsl
and
inc
in
popa
cmp
fidivrs
mov
stc
loope
cltd
xchg
out
out
xchg
mov
into
adc
add
push
xor
xchg
fdivs
mov
cmpsl
mov
ss
adc
push
sbb
or
fstpl
sbb
mov
repnz
ds
sbb
jecxz
add
btr
or
in
xchg
sarb
imul
jmp
mov
shll
jmp
push
inc
aam
xchg
cwtl
add
lea
test
pop
ret
stc
mov
push
push
stos
dec
in
ss
call
and
adc
loop
imul
adc
pop
lock
mov
xor
out
xlat
mov
aam
dec
xchg
xchg
cwtl
mov
add
mov
add
test
dec
and
out
iret
call
mov
mov
mov
cmp
das
bsf
sbb
int3
sti
jmp
sbb
mov
shll
sbb
mov
lods
add
into
mov
mov
cpuid
int3
pop
cli
imul
das
lret
add
mov
scas
cltd
das
es
xchg
xchg
lods
outsb
outsb
adc
mov
test
adc
in
xchg
push
loop
test
pop
out
sub
inc
jno
in
gs
inc
jo
scas
pop
dec
cmpsl
nop
dec
xor
idivb
xchg
cwtl
sub
mov
fs
push
es
xchg
loop
mov
xlat
sti
inc
mov
leave
test
jle
mov
inc
or
fst
push
ja
ficompl
enter
test
cmp
cs
sbb
cltd
xchg
jle
xchg
fistpl
xchg
addr16
pusha
test
ret
mov
out
cli
xchg
lret
addl
test
cmc
push
xor
cmpsb
stos
imul
stc
test
adc
dec
pop
fs
push
pop
jns
lea
test
or
popa
jmp
jns
jp
dec
int
cmp
pop
mov
lock
ficomps
inc
inc
jns
push
ficompl
jmp
in
iret
mov
or
inc
cld
iret
rcr
jmp
cmp
roll
fidivrl
inc
sub
fisubrl
orb
leave
insb
insb
jge
cld
sahf
and
shlb
shll
lods
add
mov
mov
movsl
ljmp
stc
lret
cltd
dec
push
stc
out
mov
fwait
mov
stos
cwtl
inc
out
mov
and
rcrb
xor
orl
adc
loop
push
adc
adc
cwtl
push
sbb
xor
outsb
out
stos
mov
lcall
clc
sub
loopne
fnstsw
sbb
sbb
jmp
dec
xchg
loope
dec
inc
lock
insb
in
xlat
push
fistl
sub
jp
loop
xor
lcall
lods
jg
sbb
aas
pop
stos
jge
add
insb
mov
xor
icebp
inc
pop
stc
dec
sbb
int
cmp
mov
jns
xchg
jnp
push
mov
xor
jo
or
loop
iret
loope
call
or
imul
lea
ss
sub
mov
mov
or
jle
addr16
shufps
vsqrtsd
fs
pavgb
mov
inc
out
imul
and
arpl
adc
sbb
adc
push
sbb
repz
push
xchg
dec
jp
cmpsb
sub
and
arpl
dec
sub
xchg
jo
or
in
pop
push
xor
fsubrl
ret
or
movsb
pop
jns
push
jle
cmp
and
mov
adc
mov
fs
jge
push
sahf
nop
dec
lcall
xor
cltd
cwtl
andb
mov
mov
gs
outsb
mov
sbb
jg
dec
dec
sbb
jnp
adcb
mov
call
stc
cmpb
lods
dec
lahf
xchg
xchg
clc
and
add
pop
mov
xor
out
dec
iret
sub
jnp
mov
pop
or
add
pop
popa
xchg
xor
call
pop
lods
xchg
mov
cmpsb
pushf
jp
mov
aam
in
adc
test
dec
pushf
imul
and
dec
mov
adc
push
orb
jnp
add
mov
ret
in
imul
repnz
sbbb
mov
icebp
out
adc
push
add
jnp
aas
cltd
inc
int
js
ljmp
pop
or
lods
dec
pop
xor
out
or
cld
inc
jbe
mov
jno
sahf
xor
inc
and
outsl
stos
pop
popf
pop
sbbb
sbb
sbb
pop
xchg
mov
enter
ds
jmp
push
push
cli
and
outsl
and
loopne
dec
and
ret
add
and
inc
xchg
jl
add
arpl
adc
add
addr16
xor
pop
dec
js
rorb
fcoms
sbb
gs
rorl
inc
dec
out
jmp
pusha
sbb
adc
js
sbb
scas
pop
clc
popa
mov
push
adc
je
dec
stc
nop
jmp
inc
ret
arpl
or
std
mov
fldenv
cmp
je
je
mov
pop
xor
add
or
into
push
aad
lcall
add
xchg
add
mov
pop
inc
pusha
inc
mov
arpl
lea
xor
lcall
mov
xchg
cmp
ret
sbb
lock
movsb
mov
pushf
xchg
jno
mov
adc
pop
andb
je
sub
dec
mov
xor
mov
jg
push
jnp
xor
cmp
aam
movsb
lahf
jo
pop
cmp
xor
sub
jb
mov
mov
push
addr16
stc
rcll
and
inc
mov
push
push
xchg
push
neg
lea
jno
pop
lahf
or
idivb
mov
pop
loope
arpl
popa
or
add
test
push
push
mov
mov
enter
sub
rcll
mov
lcall
scas
mov
aas
and
cmp
aaa
cmpl
fmull
inc
andb
test
sbb
pop
push
pop
lods
and
rcll
sbb
lea
in
pop
jg
dec
or
scas
and
pop
or
mov
jno
ljmp
dec
lret
ljmp
fldcw
hlt
pusha
mov
jbe
add
and
push
bound
ret
lcall
das
in
fxch
add
cmp
sub
movsb
std
bnd
imul
test
sti
push
mov
push
gs
mov
add
dec
nop
sub
fucomip
mov
paddsb
mov
inc
mov
inc
cli
cmp
push
push
and
cmp
ja
faddl
add
and
and
fwait
test
or
pop
stc
ja
mov
aas
cmp
leave
jecxz
mov
sub
or
jae
test
fcoms
arpl
test
cmpsb
pushf
lds
nop
inc
stos
stc
aaa
inc
fidivrl
enter
xchg
mov
xor
jp
cmc
decl
sub
js
mov
sbb
jno
mov
add
sbb
inc
ds
sahf
shl
outsb
mov
or
mov
sub
mov
jg
or
sub
cmpsl
and
push
cmpsl
outsb
lcall
mov
inc
sub
sbb
dec
add
stc
jb
arpl
call
in
sub
mov
inc
sbb
xor
push
dec
cltd
add
xor
iret
das
cld
push
adc
test
bound
sbb
xchg
xchg
push
adcl
cmpb
cmp
loop
jmp
xchg
out
gs
mov
jb
push
cmp
cmpsb
adc
xor
fnsave
mov
add
xor
and
in
and
push
repz
fcoms
cld
mov
mov
jl
push
lahf
sbb
mov
push
popa
adc
mov
or
adc
out
cmp
sub
mov
mov
into
int
dec
inc
arpl
mov
or
les
or
cmp
push
push
inc
pusha
adc
mov
cli
aaa
adc
dec
mov
mov
shrb
aam
adc
push
pop
lock
pop
add
sarb
loopne
push
loopne
fstpl
in
jb
and
sub
outsl
repnz
in
fdivl
lcall
mov
pop
popf
dec
mov
out
mov
shrl
jnp
test
push
lret
xchg
adc
or
pop
add
mov
sahf
test
mov
in
out
add
ret
cwtl
test
pushf
stc
sbb
mov
dec
cmp
cmpsl
mov
jo
adc
sbb
push
xlat
pop
fsubl
cwtl
add
mov
int3
mov
incl
out
cmpl
shrl
pop
fwait
mov
lods
or
inc
mov
pop
mov
call
bound
xchg
sti
aam
dec
xor
aaa
dec
push
adc
cmpsb
and
jns
inc
test
xchg
inc
sub
ljmp
ljmp
sub
in
mov
rcrb
lea
add
icebp
fdivr
sub
lahf
aam
dec
xchg
mov
adc
pop
push
push
sbb
test
out
ficoml
aad
xchg
pop
rcr
lret
outsl
push
inc
mov
pop
daa
mov
leave
imul
push
inc
adc
repnz
jmp
mov
out
fsubrs
xor
push
xchg
adc
shll
jmp
sbb
pop
mov
mov
xor
and
push
pop
pusha
and
pop
outsb
pop
or
outsl
push
in
adc
jae
mov
or
sbb
jae
fwait
mov
jmp
jmp
pusha
mov
dec
mov
mov
into
xor
dec
mov
mov
into
xor
dec
mov
mov
into
xor
dec
mov
mov
into
xor
dec
mov
mov
into
xor
xchg
push
movb
inc
sarl
cmp
jae
cwtl
sub
push
std
lea
and
out
insl
ret
fs
cltd
je
mov
rolb
fwait
aad
push
jns
and
xchg
es
fsubl
xor
out
mov
add
add
inc
ds
lds
mov
cli
dec
xlat
aas
aad
das
inc
iret
arpl
ret
in
sub
scas
cs
lcall
xor
cltd
jle
insb
push
or
aad
sbb
test
out
popf
adc
jecxz
inc
rorb
xchg
leave
std
xchg
ret
xchg
clc
repnz
pop
fwait
sbb
sti
lock
mov
xor
das
pop
out
clc
addr16
mov
sbb
loop
stos
jne
cs
fcoms
xchg
int
daa
popf
jmp
jg
sub
cmpsb
stc
push
loop
mov
push
outsl
push
xchg
sub
mov
mov
xor
cmc
or
fildll
inc
mov
dec
idiv
push
popf
repz
pop
jl
xchg
fildl
dec
push
in
shlb
aaa
sub
jmp
lods
and
lret
xor
in
das
in
or
dec
add
cld
pop
mov
jle
and
mov
dec
push
and
pop
in
push
out
xor
repz
cmp
inc
push
movsl
pusha
cmp
aas
imul
aad
cmp
adc
mov
sbb
jle
leave
jo
fwait
das
fxch
ja
stc
xchg
mov
xor
test
dec
add
push
jg
sub
jmp
xchg
cmp
push
mov
jne
push
sbbl
rclb
ds
or
out
ficomps
out
add
mov
push
fildll
mov
aam
bound
iret
fcmovnbe
jle
ret
test
mov
loopne
in
cmp
adc
pop
popf
cmpl
or
bnd
dec
mov
sub
mov
sahf
push
imulb
mov
roll
push
push
add
js
add
loop
jg
inc
or
mov
ja
inc
inc
fidivl
pop
sbb
inc
add
push
rcl
xchg
cmp
movsl
cmp
fdivp
testb
mov
push
pop
sub
loopne
into
sbb
inc
dec
shll
loope
push
out
aam
cmc
mov
and
sti
pop
movsl
addl
lahf
xor
in
push
or
insl
loopne
aad
cmp
sub
lock
push
stos
or
scas
xchg
inc
or
mov
test
dec
jmp
or
cmpsb
pop
or
pusha
pop
call
jne
call
sti
fwait
cld
out
ss
xchg
and
sub
cltd
outsb
xchg
jg
ds
pop
pop
add
inc
daa
and
movsb
adc
dec
mov
lock
push
add
pop
loope
in
pop
mov
jb
aaa
scas
adcb
jmp
and
stc
inc
mov
xchg
and
cmp
lds
insl
lods
inc
sub
sub
mov
popf
jle
mov
cwtl
in
paddsw
lds
pop
insl
xchg
icebp
les
dec
sub
cmc
lcall
test
pop
sbb
scas
sbb
mov
mov
imul
dec
aam
jne
flds
ljmp
test
cltd
stos
fdivrl
dec
add
jnp
or
jne
rclb
pusha
sub
adc
inc
cmp
mov
iret
cld
inc
movsb
movsb
adc
negb
in
xchg
xchg
push
int
fldenv
int
push
cmp
push
inc
xor
jl
sbb
fisttps
fmul
push
cmp
or
mov
test
or
xor
add
fstpt
xchg
inc
divb
mov
sub
inc
jl
xor
jle
fbstp
fstps
jns
cld
std
xor
cmpsl
mov
add
sarl
inc
mov
fisttpl
mov
scas
arpl
push
or
sub
pushf
ss
xchg
into
scas
and
incb
lods
loop
pop
cmpb
pop
push
stos
mov
ret
je
outsl
xchg
pop
pushl
out
scas
int3
out
push
out
lret
add
in
inc
iret
bound
mov
cli
in
out
dec
pop
dec
push
fs
rclb
dec
xchg
bnd
out
div
bound
pop
jae
inc
adc
jno
sbb
shll
andl
aaa
iret
pop
lods
loopne
dec
cmpsb
scas
jns
mov
push
mov
mov
loope
pop
or
rorl
jae
jg
cld
and
cmp
dec
jbe
aam
fwait
data16
mov
mov
ret
pop
js
jnp
xor
push
sbb
les
and
mov
mov
shrl
mov
jle
lret
int
xchg
xlat
mov
test
in
xor
js
das
pop
push
add
lea
cmp
repnz
or
popf
aam
pushf
andb
sbb
shrb
test
push
movsl
jbe
adc
push
dec
js
repnz
ds
imul
or
test
mov
enter
jmp
inc
push
inc
aas
gs
push
push
lds
mov
jnp
jo
sub
ret
pop
iret
lret
sbb
xor
mov
dec
shlb
push
out
mull
inc
cmp
push
addr16
dec
lcall
wbinvd
cmp
dec
lods
insl
xchg
pop
imul
inc
sti
adc
cltd
repnz
sbb
inc
sub
popf
cmpsl
test
fimuls
adc
mov
in
pushf
xor
pop
outsl
inc
scas
nop
movsl
push
mov
jl
in
je
pop
and
and
cs
popf
loope
inc
xchg
cmp
dec
sbb
jecxz
test
mov
repz
mov
inc
dec
pop
pop
mov
dec
mov
shl
xchg
mov
jnp
sbb
leave
push
pop
pushf
insb
aam
lea
fidivrl
rolb
dec
pop
dec
mov
adcb
inc
sbb
xor
xchg
sub
je
lcall
out
sbb
enter
push
nop
mov
dec
lcall
mov
push
and
orl
cwtl
subl
orl
sub
rol
cmp
data16
cs
dec
and
jg
in
pop
je
loope
movsl
pushf
adc
mov
mov
push
arpl
lods
mov
repz
js
cmp
mov
inc
jae
pop
leave
xorl
lods
out
mov
ljmp
inc
mov
and
pop
dec
scas
mov
fnstenv
int
leave
xchg
in
xor
sti
jle
add
aad
push
dec
rol
push
and
add
subl
xor
xorl
pop
push
pushf
loope
push
dec
jns
push
dec
sbb
pop
add
sar
mov
mov
cltd
adc
add
mov
pop
scas
into
sar
dec
test
jns
push
sbb
aad
mov
mov
cmp
mov
adc
int
xor
decl
sub
repnz
lret
mov
sahf
dec
into
cmpsb
aam
jno
cmpsb
data16
and
ss
mov
jl
sbb
jo
stc
add
dec
es
fmuls
int3
lds
push
push
mov
iret
stos
cltd
pop
and
inc
popa
adc
xchg
jne
loopne
push
mov
pop
andl
lret
in
cmp
cmpsb
mov
xlat
sbb
xchg
pop
xchg
jbe
jne
stc
pop
mov
lahf
and
mov
inc
mov
push
or
xchg
mov
mov
scas
add
push
jb
add
scas
and
jns
sub
out
dec
scas
addr16
ror
movsl
negb
mov
and
leave
and
cmp
xor
jne
cmp
insl
or
mov
stc
push
out
outsl
adc
adc
xor
cmpsb
jae
loope
and
xchg
add
test
and
insl
popa
lcall
iret
cli
sbb
leave
loope
sub
adc
adc
xor
les
nop
enter
test
mov
xor
inc
mov
pop
fisttpll
icebp
push
sbb
xlat
mov
mov
sub
das
test
push
add
push
lret
and
add
fidivrs
data16
out
pushl
fiadds
in
xor
cmp
jb
push
inc
leave
jmp
addb
stos
push
and
ljmp
xor
scas
pop
cmp
or
inc
cmp
mov
push
ret
sbb
dec
shl
ret
test
inc
mov
mov
adc
stos
cmpsb
cli
push
cltd
dec
dec
test
mov
adc
fnsave
je
adc
adc
repz
mov
aam
cmpsl
xor
pusha
je
adc
adcl
cmpl
stc
movsb
jno
ja,pn
push
sub
stos
xlat
std
into
orl
movsb
sub
std
outsb
cld
movsb
or
test
or
mov
cmp
repnz
je
lea
outsl
mov
mov
cwtl
sbb
push
iret
adc
mov
int3
das
insl
xor
pop
aam
push
seta
pop
into
jp
jge
xor
adc
das
lret
out
push
mov
in
push
mov
notl
adc
shll
popf
xchg
je
mov
pop
and
aad
sub
out
jl
and
push
je
movsb
pop
add
add
ficoml
outsb
mov
addb
sbb
pop
jnp
pushf
inc
sub
daa
gs
fstps
pop
int3
out
iret
fsubl
dec
ja
mov
or
shrb
dec
pop
test
pop
shlb
das
pop
push
pop
add
adc
jmp
gs
pop
push
out
sti
adcb
icebp
xchg
mov
jae
adc
gs
cmp
cltd
dec
add
xor
mov
xchg
dec
popa
ficomps
les
sbb
shll
in
jp
push
fs
adc
pop
sub
arpl
aaa
fidivl
push
lret
pop
push
sti
scas
int
and
data16
in
insl
ret
test
les
out
addl
test
cwtl
out
jle
ret
or
jp
pop
out
mov
arpl
add
ss
push
rorl
fwait
scas
xlat
adc
fwait
cmp
mov
mov
repz
sbb
cmp
jo
and
sahf
fsubrs
xor
mov
sub
lods
mov
xor
push
mov
cmp
or
xor
popa
call
outsb
sub
pop
ljmp
inc
inc
cmp
in
ljmp
shrb
cmpsl
sbb
mov
mov
inc
lock
push
cmp
mov
adc
push
sbb
test
cmp
stos
ljmp
into
fildl
fdivr
adc
call
pop
inc
mov
inc
std
push
dec
push
stos
sbb
jge
sar
inc
mov
cmc
lahf
lret
and
je
jne
ret
sub
dec
push
xor
mov
pop
stos
gs
jle
or
sarb
fcmove
mov
jns
xor
pop
icebp
dec
adc
or
stos
shll
mov
cmp
push
data16
into
pop
test
bound
mov
xchg
in
mov
test
xchg
cltd
pop
dec
out
mov
pop
and
pop
ret
add
add
jle
adc
adc
add
neg
add
pop
cmc
test
jae
repz
xchg
je
jg
pop
call
adc
xchg
xlat
stc
push
sub
outsb
lcall
call
mov
and
add
mov
mov
fidivrl
push
repz
jnp
cmp
fdiv
rcl
push
jge
test
outsl
mov
or
fcomp
add
cmp
xchg
mov
pop
xchg
mov
in
jnp
lahf
fwait
cmp
xor
les
iret
scas
mov
mov
movsb
ss
inc
jecxz
scas
or
cmp
ds
shr
inc
sbb
movq
jbe
test
sub
call
inc
dec
xchg
nop
mov
dec
and
mov
shr
dec
dec
and
or
push
cld
mov
dec
sarl
dec
mov
inc
lock
pop
lods
lret
test
mov
add
cmp
xor
daa
jnp
mov
imul
mov
dec
sub
xchg
jbe
repz
cmpsb
mov
mov
outsl
cli
mov
je
in
xor
and
mov
pusha
mov
mov
icebp
test
std
aam
mov
xor
inc
movsl
mov
jge
lret
shlb
ja
sub
sbb
ss
nop
out
hlt
setbe
lea
pop
gs
jp
mov
adc
xor
repnz
jnp
rclb
or
push
ret
repnz
add
mov
and
lea
fcoml
or
add
cwtl
sub
test
pop
cmpl
inc
addr16
das
xor
imul
and
test
xor
popf
cmp
das
mov
jns,pn
cwtl
sub
cltd
gs
es
mov
pop
mov
sbb
mov
mov
not
add
aas
jne
mov
jne
sub
cmp
arpl
jmp
scas
sahf
lods
xchg
aas
fsubrs
aad
pusha
insl
adc
mov
enter
popa
imul
cmpsl
icebp
mov
in
jne
cmpsl
jmp
push
dec
push
repz
mov
add
jbe
dec
push
and
popf
pop
mov
cmpsb
int3
lea
xchg
dec
add
pop
push
in
mov
lock
push
jle
fwait
popf
fildll
cmpsb
pop
subl
mov
cs
cmp
cmc
fildll
rorl
xchg
inc
pop
cmpl
testb
daa
adc
cmp
movsb
into
lea
in
mov
pop
xchg
popf
push
add
mov
mov
int3
sub
outsb
or
hlt
sub
mov
jbe
ficoml
fists
pop
je
clc
mov
sub
dec
adc
popa
test
dec
repz
repz
sbb
inc
or
divl
je
dec
cltd
aad
movsl
flds
xchg
or
jp
cmpsb
stos
dec
in
jle
mov
and
clc
lods
pop
mov
mov
cmp
dec
or
jmp
xchg
outsb
xchg
out
les
mov
pop
or
out
pusha
dec
div
mov
mov
int3
sbb
sbb
and
aaa
lock
dec
daa
inc
lock
stos
pop
sub
mov
lods
enter
adc
mov
inc
ja
sub
cli
ds
add
jge
in
loop
leave
in
pop
push
cwtl
sbb
add
loop
les
shl
sbb
and
mov
cwtl
cmp
lods
sti
sbb
cltd
or
aad
dec
out
subl
test
jle
popf
inc
aas
movsl
sub
mov
sbb
xor
mov
scas
shll
nop
insb
imulb
lea
aam
push
pop
mov
push
je
mov
dec
sbb
dec
in
inc
out
pop
in
mov
cwtl
add
inc
cld
dec
dec
adc
lds
int
sub
test
jae
mov
and
adc
cmpsl
xlat
jae
xchg
xchg
orl
add
push
cmpsb
jg
mov
fldcw
shrl
shr
mov
mov
gs
out
int3
sahf
stos
imul
mov
mov
loop
in
pop
jmp
dec
pop
jb
mov
je
fidivl
sbb
adc
push
xor
cmp
add
xchg
roll
push
inc
mov
popa
cwtl
mov
pop
lds
mov
sbb
jmp
push
xor
or
and
cmp
fs
jecxz
addl
cli
xchg
xchg
cmp
lea
dec
mov
jbe
jmp
inc
jbe
mov
addr16
inc
mov
imul
sar
xor
xor
imull
icebp
stos
xchg
inc
push
push
nop
loop
sbb
xchg
ret
imul
sti
xor
jp
das
cltd
js
inc
add
pop
insl
test
insl
xor
mov
push
mov
or
jmp
test
nopl
dec
mov
les
add
lahf
out
push
mov
jmp
mov
das
in
in
jle
jecxz
iret
mov
pushf
jg
int3
push
and
test
scas
or
adc
mov
or
jne
adc
addl
stos
lds
xor
stc
sub
jno
xor
ljmp
xchg
sbb
sbb
push
adc
xchg
loopne
xchg
test
pushl
pop
push
and
push
adc
lret
out
sub
sti
das
repnz
mov
in
dec
xor
mov
outsb
cmc
pop
adc
test
dec
push
jmp
lret
mov
add
cmp
pop
inc
jge
and
mov
sub
les
jle
and
cmp
cltd
mov
push
or
imul
sub
sub
inc
fistpl
loopne
push
ljmp
das
call
cmc
push
mov
outsb
jecxz
adc
jo
aad
mov
lahf
adc
dec
dec
sti
les
jg
out
dec
nop
daa
cmp
xchg
cmp
popa
cmp
or
inc
xor
adc
call
adc
outsl
inc
daa
push
imul
add
dec
mov
hlt
mov
test
ja
orl
enter
movsl
insb
mov
pop
pop
daa
sbb
mov
sub
shlb
vminss
mov
aam
ret
lret
sbb
xchg
fwait
jno
or
xor
je
sub
push
xor
xchg
pushl
push
xor
test
or
xor
xchg
mov
pop
rclb
adc
mov
xchg
xchg
test
add
mov
in
and
cmpsl
aad
add
cmp
mov
push
xor
push
pop
fisubl
add
jne
and
outsl
into
mov
jns
shll
push
mov
dec
mov
dec
dec
ret
cmp
or
sahf
inc
cmp
out
int3
mov
pop
jmp
rorb
inc
fcoml
pop
in
test
ss
jle
imul
scas
mov
xchg
jg
mov
int
lea
inc
js
test
jl
test
xchg
test
adc
adc
jg
jae
cmpsb
out
cmp
dec
or
lret
stos
mov
xor
push
or
push
pop
mov
aam
ja
and
sub
push
sbb
sti
xchg
or
pop
iret
and
xchg
add
push
dec
dec
mov
sti
leave
rorl
aas
pop
mov
out
push
pop
push
in
mov
out
cmp
test
inc
je
mov
lock
jnp
fwait
pop
or
in
sub
push
sbb
gs
xor
daa
or
push
pop
and
lcall
cmpsb
imull
insl
or
stos
mov
jae
aam
adc
push
negl
test
sbb
aam
xlat
xchg
shlb
mov
sbb
testb
jo
jp
inc
sub
add
loopne
aam
sbb
aam
xchg
pop
pop
nop
ds
fmul
notl
push
sbb
mov
or
push
insb
dec
out
divb
test
jb
cmpl
or
xchg
lret
cld
bound
or
sub
test
call
mov
jb
lret
add
push
dec
xchg
test
sub
dec
mov
push
notl
mov
pop
iret
daa
fdivr
cmp
int
aam
push
scas
push
push
cmp
fisubl
fistpll
fidivl
dec
and
push
int
jae
push
nop
xchg
jno
push
xor
icebp
jmp
ret
and
pop
cmp
mov
mov
dec
mov
mov
sub
xchg
notl
push
aaa
cmp
mov
push
jecxz
add
push
mov
dec
xor
mov
add
into
add
lcall
inc
repz
loopne
int
mull
pop
cmpsb
imul
lods
mov
ljmp
clc
mov
inc
sub
lds
push
mov
mov
aam
xor
push
ja
lods
scas
pop
xlat
cmp
inc
sub
inc
movsl
popa
aam
sub
or
les
sbb
fdivrp
pusha
cld
lret
dec
mov
xor
inc
xchg
stc
sub
stos
mov
push
mov
imulb
cld
cmc
hlt
les
bound
xor
mov
std
aad
popa
dec
and
sub
mov
pop
fwait
add
cmp
sub
fbld
leave
mov
mov
adc
hlt
jecxz
mov
lods
mov
push
rcrl
enter
lret
cwtl
cmpsb
mov
push
mov
sub
jns
dec
or
subl
add
jp
dec
and
jne
stos
lahf
add
pop
fcmovu
mov
or
pushl
and
mov
or
mov
pop
mov
cmp
or
pop
xchg
aaa
adc
lcall
sbb
mov
fcomps
add
stc
jl
dec
adc
push
aam
sbb
push
or
jge
outsb
xor
popa
movb
in
mov
lcall
mov
push
idivb
decl
fwait
outsl
xchg
sbb
jo
aad
jecxz
dec
and
pusha
or
jno
xor
xchg
jmp
cmp
push
dec
cs
inc
dec
pushf
sti
mov
adc
dec
in
mov
add
cmpl
loopne
xchg
fucomp
mov
inc
test
lahf
loopne
stos
and
out
mov
or
mov
adc
rcl
add
lcall
mov
aaa
les
mov
mov
jne
dec
ja
mov
or
int3
loope
or
mov
cmp
sbb
shr
mov
lret
cmpsb
out
in
and
lret
dec
test
jmp
dec
cld
xor
mov
fstpl
add
push
cmpsb
loope
fucom
sti
and
lcall
fwait
push
aam
mov
sbb
pop
add
out
ss
mov
push
and
orl
je
or
std
movsb
and
jb
scas
lds
repnz
aaa
mov
stc
or
iret
cmp
lahf
mov
rcrl
or
pop
cmp
lcall
icebp
std
out
jb
mov
adc
js
dec
and
sbb
inc
daa
call
test
dec
dec
cmp
pop
push
pusha
fcomps
jnp
cmpsb
cwtl
xor
or
ret
push
mov
mov
sbb
mov
movsb
adc
fs
scas
lock
mov
dec
and
jl
out
test
in
pop
cmp
add
daa
sahf
dec
and
xchg
and
ljmp
xchg
mov
and
jnp
negb
pop
jmp
push
cltd
cmp
in
sti
and
stos
dec
lcall
ret
pop
cld
cmp
sbb
scas
sub
popf
shrl
dec
dec
xchg
pushf
sub
mov
add
fisubrs
mov
adc
sub
or
aam
pop
dec
jnp
pop
xchg
repz
pop
dec
push
pushf
clc
pop
dec
adcb
lds
and
or
push
or
pop
shr
test
or
shlb
sub
in
test
push
cli
gs
cmp
pop
push
rcl
push
push
adc
shl
in
or
pop
xor
imul
test
dec
inc
cmpsb
mov
xor
hlt
cwtl
sbb
aaa
sub
dec
xor
shlb
dec
jnp
rol
xchg
aad
aaa
push
mov
jmp
inc
repz
cld
stc
leave
push
jo
push
shlb
decb
wrmsr
jle
enter
cld
in
ror
pop
mov
popf
sahf
mov
in
pop
pop
les
js
mov
cld
push
dec
dec
xor
mov
sub
hlt
mov
mull
ljmp
int3
mov
mov
xchg
aam
or
mov
or
repz
push
clc
ljmp
and
aaa
and
adc
mov
call
sbb
imul
cmpb
sub
outsl
mov
and
psubsw
outsb
sar
sbb
sub
loopne
inc
mov
mov
jle
xchg
jb
cltd
fadds
jecxz
dec
sti
xor
shlb
sbb
and
mov
ret
test
adc
nop
cltd
lods
dec
sub
add
pop
aas
add
ss
cwtl
mov
mov
inc
scas
cmpsb
mov
inc
inc
sbb
js
in
mov
jne
push
mov
push
sub
fcoms
push
sub
fcmovbe
adc
mov
subl
movsl
xchg
dec
adc
push
popf
sbb
xchg
push
jl
ds
mov
inc
jns
sub
mov
negl
inc
imull
pop
icebp
adc
cmp
pop
jp
cmp
gs
sbb
arpl
jns
cmp
cmpsb
ror
xchg
mov
repnz
lret
movsb
or
cmp
mov
in
add
dec
test
push
repz
push
or
loopne
arpl
cmp
inc
int3
push
adc
xchg
mov
pop
jb
fcompl
sar
fiaddl
scas
ret
cwtl
sub
shll
mov
xchg
hlt
xor
ljmp
dec
mov
xchg
shrl
push
mov
jno
mov
pop
xlat
jl
scas
xor
out
or
mov
xchg
cmp
clc
add
fidivs
in
or
jecxz
loopne
and
xchg
ds
in
stc
fidivl
lods
ffree
insb
loop
xchg
sbb
arpl
outsl
jbe
adc
in
mov
leave
mov
jbe
cmp
jo
jno
mov
or
movsb
jmp
push
cmp
out
lds
cmpsl
fimull
movsl
ficoml
ret
fwait
mov
sub
mov
cmpsb
test
shrl
ss
aad
push
cmc
ret
hlt
ret
dec
xor
sti
mov
scas
mov
shrb
push
fistps
out
adc
lods
mov
xlat
iret
cltd
icebp
insl
popf
dec
sti
xchg
inc
cs
jge
add
insl
mov
mov
aam
lock
jecxz
cmp
ret
or
je
push
jl
repz
dec
mov
mov
jo
mov
mov
es
out
pop
leave
or
fbld
mov
cli
push
pop
insb
add
mov
aam
inc
dec
hlt
leave
push
adcb
xchg
sbb
and
enter
in
push
fistl
insb
mov
mov
mov
xor
fcomip
sbb
ret
test
test
jg
paddsb
movsb
adc
xor
pop
jne
sub
xor
mov
add
push
sbb
jecxz
mov
mov
std
js
mov
mov
pop
lret
cmpsl
je
ret
popa
jne
pop
mov
dec
pusha
push
jge
in
outsl
mov
addr16
mov
sub
aam
dec
pusha
stos
ljmp
ficomps
sbb
enter
jbe
xchg
ljmp
mov
lods
lock
testl
gs
inc
push
xchg
jle
pop
rclb
adc
lahf
xor
nop
push
cmpsl
jle
mov
sbb
mov
les
shr
fnstsw
fs
mov
stos
insl
int3
add
pop
pusha
xchg
fsubrs
stc
jno
pop
mov
in
ljmp
insb
mov
cs
call
test
mov
xor
test
test
mov
and
and
repz
sub
add
mov
xor
fbld
adc
xchg
jnp
xor
push
dec
sar
or
or
xor
rorl
ljmp
cmp
lcall
stc
lea
data16
clc
cld
sub
inc
sbb
jae
out
imul
das
mov
into
push
cltd
mov
rorl
sti
adcl
cmp
call
out
mov
lods
sub
jnp
xor
sahf
pop
out
iret
dec
repz
lahf
sti
lahf
ret
js
pop
icebp
popf
sub
inc
cwtl
dec
mov
jmp
les
movsl
or
xor
mov
or
mov
sub
pop
mov
mov
iret
shll
leave
fcompl
loopne
scas
adc
daa
test
jns
das
incl
push
and
push
jmp
jecxz
mov
mov
cmc
inc
addb
pushf
push
mov
data16
jno
xchg
cmp
pop
xor
cmp
jl
sub
mov
cmp
xor
sub
dec
pop
popa
in
pop
aas
ret
stos
leave
jmp
lea
add
notb
cmp
arpl
pop
aas
into
xor
push
loope
divb
ret
xor
es
pop
out
cmp
jle
repnz
sti
mov
sbb
insl
pushf
das
adc
sub
xchg
in
insl
stos
stos
inc
in
pop
popf
ss
sbb
pushf
add
mov
sar
dec
mov
cmp
pop
std
fwait
xor
sbb
lods
jno
sbb
sub
leave
pop
rcrl
lahf
into
jmp
jbe
outsl
jo
jle
push
nop
std
dec
push
xor
mov
mov
sbb
fwait
mov
jnp
popa
and
inc
sub
and
out
jmp
jmp
mov
and
pop
adc
xor
mov
ret
sub
out
jle
dec
mov
inc
xchg
push
jnp
js
xchg
mov
js
outsb
lock
dec
push
mov
inc
sbb
adc
mov
bound
and
pop
cwtl
dec
xchg
fcomi
outsb
fisubs
std
jge
xlat
repnz
jne
mov
fists
iret
jge
out
es
call
jno
or
dec
test
mov
xchg
xchg
and
test
scas
in
inc
dec
rclb
stos
repnz
mov
sbb
push
inc
jae
cmp
sti
add
mov
js
adc
mov
mov
jecxz
mov
xchg
lret
push
rclb
pop
add
fisttpll
fcomps
ret
pop
bound
data16
in
mov
mov
fs
fidivs
mov
mov
cmp
lods
mov
pop
pop
cmp
imul
lods
movsl
add
lods
test
clc
add
ss
fs
inc
movsl
mov
cwtl
lahf
adc
jne
mov
int3
in
and
mov
mov
mov
push
adc
mov
in
mov
leave
lcall
repz
lds
add
mov
loop
inc
cld
cmp
shll
test
jg
adc
fxam
pop
fstpt
mov
je
hlt
jge
push
cltd
mov
mov
cmp
pusha
in
fwait
pusha
lods
rolb
movsl
xchg
sub
push
sbb
sub
sti
mov
sub
jle
sbb
fs
mov
pop
adc
cs
pusha
clc
movsb
mov
add
add
mov
sbb
inc
outsb
or
mov
aam
fwait
mov
ljmp
and
sbb
jg
xchg
xor
sub
je
dec
loope
pusha
sbb
dec
cs
dec
out
cmp
icebp
sub
aas
cmp
cmc
mov
daa
aas
stc
lods
out
and
std
push
clc
sub
lea
xor
test
jmp
mov
mov
not
push
inc
pusha
loope
nop
push
pop
clc
divl
ret
pop
add
xor
xchg
lahf
stos
shlb
jecxz
inc
jp
jl
dec
sbb
scas
frstor
cs
daa
int3
repnz
je
pop
xchg
cmp
mov
mov
sbb
jne
fisttpl
lret
jnp
mov
cltd
fistps
inc
ljmp
test
fldt
sahf
mov
clc
movsb
jnp
push
lahf
clc
mov
in
xor
fdivl
test
pusha
idivl
push
outsb
aam
mov
daa
jmp
push
xchg
sahf
cmp
add
push
jo
pop
mov
ja
into
ljmp
aam
xchg
xchg
lods
jmp
add
pushf
in
call
test
xchg
sbb
in
push
adc
insl
in
int3
leave
hlt
lds
jae
int
icebp
aas
stc
jbe
arpl
pop
cltd
xchg
aas
mov
push
cmpsl
and
ret
pop
enter
gs
xor
xor
cmp
movsb
mov
das
xchg
fnstcw
cltd
dec
xor
mov
sbb
lds
add
adc
jnp
lods
dec
jp
pop
adc
mov
js
pop
dec
in
mov
stc
mov
mov
lock
ret
push
outsb
imul
aaa
sarb
push
push
or
push
leave
mov
mov
jp
and
jae
pop
mov
test
test
jmp
sti
and
inc
push
stos
mov
adc
adc
pop
inc
pop
ret
aam
stos
in
fdivr
enter
mov
jae
and
xor
outsb
adc
push
push
sbb
push
xor
mov
lea
xchg
add
mov
pop
inc
fcmovb
cmc
adc
cmp
iret
fisubrl
mov
lds
lahf
mov
divl
inc
push
pop
push
lret
stos
cmpsb
add
scas
jo
enter
das
call
fwait
testb
gs
dec
mov
stos
mov
sbb
fcmovnb
add
jnp
add
mov
jge
and
sbb
jns
mov
pop
aam
xchg
and
mov
cmp
adc
fadds
dec
pop
lcall
fimull
add
std
daa
add
mov
in
insl
push
movsb
adc
stos
and
pop
aaa
add
pop
icebp
cltd
jae
inc
add
in
xor
mov
xchg
pop
dec
mov
cmp
in
and
mov
loope
sti
in
cmp
adc
or
mov
mov
jae
ja
push
mov
lcall
xor
xchg
lods
sub
cmc
jge
out
daa
out
jne
fldl
push
jp
int3
ret
fisubs
xchg
subb
dec
bnd
mov
imul
sahf
stos
bound
int
jbe
push
mov
lahf
in
cmp
in
in
insb
pop
add
or
xor
jmp
int3
out
mov
ret
cmp
call
or
das
mov
and
mov
stos
mov
stos
xchg
sahf
inc
cltd
mov
xchg
and
rcrb
push
hlt
jge
fwait
out
add
push
sarl
es
push
add
pop
test
aam
and
sub
push
or
int3
repz
xor
mov
mov
ja
dec
sbb
jb
das
sti
push
inc
jmp
in
dec
or
push
pop
mov
in
jecxz
mov
adc
lods
inc
fstl
xor
xorl
dec
mov
ljmp
ret
cli
or
aas
xor
fmull
jecxz
dec
lret
xor
fmuls
cmpsb
scas
test
sbb
in
fadds
in
aaa
dec
mov
jne
inc
cmp
shl
push
sub
xchg
push
xor
pop
jle
movsb
stos
mov
repnz
push
dec
or
fiaddl
mov
int3
scas
xor
sahf
pop
pop
std
shll
and
xlat
xchg
and
add
mov
scas
bound
push
test
xchg
mov
xchg
lods
pushf
pop
jp
inc
dec
dec
jge
mov
stos
xchg
mov
shll
xchg
aas
test
or
je
imul
add
or
loop
lahf
mov
push
sbb
icebp
iret
loope
ss
in
inc
popf
pop
cmp
xchg
mov
jg
mov
adc
cwtl
int
jne
arpl
xlat
mov
andl
imul
mov
test
inc
push
nop
lcall
dec
ret
push
sub
lea
and
cli
mov
fs
stos
pop
push
cltd
inc
sbb
fs
jo
shl
cld
repnz
int
jb
hlt
add
js
in
fwait
sub
mov
mov
add
xor
aad
push
jmp
mov
push
push
stos
faddl
stc
ds
outsb
push
adc
xor
jge
lahf
push
pop
dec
dec
test
cmp
xchg
scas
jp
sub
inc
mov
push
sbb
and
faddp
das
and
pop
scas
fcomip
out
jne
push
cmp
xor
xor
pusha
loopne
push
lcallw
subl
adc
push
rolb
in
xor
imul
rcl
idivb
out
aad
xor
sub
mov
lahf
push
mov
lds
scas
out
call
and
fldlg2
jl
or
add
shrl
mov
inc
adcb
sahf
test
inc
adcl
mov
scas
xchg
mov
xlat
xor
inc
popl
leave
shr
pushf
scas
rclb
ja
fldcw
mov
mov
adc
mov
decb
push
add
clc
addr16
mov
pop
loopne
pop
add
mul
push
lock
das
cltd
sbb
dec
sub
adc
jp
in
push
rol
sbb
inc
test
jnp
insl
or
neg
fidivrs
imul
adc
adc
je
inc
dec
xchg
jbe
push
pushf
addr16
mov
sbb
push
stos
out
test
add
mov
or
dec
imul
outsl
ret
jne
pop
imul
and
mov
ljmp
pop
cmp
cmp
cmp
xchg
push
scas
test
js
decl
pop
or
push
test
enter
test
call
or
in
cwtl
rcrl
lcall
test
shlb
mov
movsb
adc
mov
in
jp
negb
jne
push
loopne
pop
pop
notb
dec
and
clc
cmp
pop
ja
je
dec
rolb
jnp
pop
lcall
dec
xor
push
adc
mov
movsl
xlat
lock
outsl
mov
jg
pop
out
and
mov
in
faddp
insl
sahf
repnz
ljmp
jae
outsb
sbb
test
stos
inc
mov
dec
pop
test
pop
cmpsb
repz
inc
sub
xchg
push
sub
stos
xchg
movsb
pop
xchg
pop
shrl
pop
sub
sub
sub
jmp
das
cmpsl
loopne
pop
mov
jae
shrl
mov
das
test
loope
xchg
movsb
sub
outsl
fs
cmpsb
cmpsb
cmpsb
cmpsb
adcb
sub
out
fistps
sub
xor
push
shrl
push
and
fidivrs
jmp
in
dec
xchg
mov
call
clc
pop
lods
xchg
sbb
add
scas
in
xchg
aaa
lods
and
addr16
subb
and
hlt
cmp
mov
insw
mov
sub
clc
add
faddl
imul
dec
add
pop
mov
sbb
and
pop
ljmp
repz
lret
push
subl
hlt
and
and
xchg
push
das
inc
js
jbe
call
xchg
les
and
fwait
fwait
fisubrl
jge
push
cmp
xorb
mov
mov
push
scas
jns
in
dec
std
cmp
xor
rcl
mov
push
cmpsl
push
and
fst
data16
pop
cmp
add
push
cltd
and
sahf
xor
outsl
mov
out
daa
fabs
xchg
mov
ret
out
repz
xchg
outsb
mov
cmpsb
jbe
bound
imul
pop
rclb
inc
xchg
loop
sub
fcmove
jnp
popa
xchg
les
jnp
push
mov
cmp
mov
pusha
je
decb
lock
rolb
xchg
sarb
jns
lret
pushf
mov
dec
adc
pop
jle
rcr
aam
jne
fdivs
rorb
add
je
repnz
and
int3
pushf
mov
incb
scas
arpl
xchg
and
aad
subl
addr16
jo
push
sbb
inc
xorb
bound
mov
adc
jg
fwait
cli
cmp
and
push
jecxz
outsl
daa
push
pop
cmp
sbb
cmp
sub
lea
outsb
and
and
jp
negl
jp
and
hlt
bound
out
fadds
and
inc
dec
push
push
xor
out
pushf
data16
jbe
adc
and
sbb
jo
out
sub
sbb
daa
sti
add
movsb
push
cmc
cli
adc
xor
dec
jl
aad
pop
fwait
and
xor
aad
jno
stos
push
jecxz
ret
mov
outsb
es
outsb
cmp
xchg
jne
and
cwtl
lahf
lea
lods
sub
sub
xchg
inc
xchg
pop
fildll
jno
iret
jle
sub
or
jl
add
or
jae
mov
arpl
pop
or
daa
add
stos
and
or
test
push
dec
ds
mov
sbb
xor
aaa
orb
or
jno
fs
loopne
pop
enter
std
jno
pop
and
movsl
push
mov
fs
into
jo
push
test
mov
in
not
ljmp
and
mov
es
movsl
lods
hlt
aaa
and
mov
out
scas
xchg
cwtl
stos
adc
ja
movsl
add
mov
movsl
mov
daa
fistpl
sarl
iret
sub
add
mov
sub
dec
or
xchg
xchg
idivb
pop
jge
inc
mov
sbb
call
xor
ficompl
adc
std
jno
pop
cltd
dec
loop
fidivrs
pushl
aaa
pop
add
adc
inc
sbb
xor
dec
mov
ret
lret
rolb
mov
into
mov
test
cld
pop
mov
jne
pop
pushf
mul
mov
ja
mov
push
stc
inc
stos
stc
mov
call
jp
test
or
xchg
mov
out
cli
xlat
sbb
js
jno
in
push
adc
jecxz
push
leave
pop
ss
jg
icebp
ret
pop
mov
mov
mov
fwait
mov
popa
jge
add
jnp
aas
movups
mov
mov
jl
lock
xchg
lret
sbb
loop
xor
push
into
jmp
or
inc
addr16
outsb
cmp
sbb
into
or
mov
and
pop
push
cmpsl
inc
arpl
add
jp
adc
push
lcall
mov
lcall
in
mull
mov
pop
cmp
mov
xchg
shrl
sub
addr16
cmpsl
lret
xor
push
mov
icebp
jge
fs
mov
push
and
fwait
iret
les
ds
repnz
test
cld
and
stc
mov
sub
push
iret
adc
insl
jg
fs
push
mov
pop
repz
fwait
xchg
mov
shlb
push
pop
xchg
cmpsb
insl
mov
adc
and
lret
ja
data16
fidivl
imul
and
jmp
mov
stc
pop
dec
mov
iret
add
and
aaa
adc
leave
je
loop
sbb
pop
dec
fimull
fbstp
mov
insl
lea
nop
bound
rclb
outsb
mov
push
cmp
pop
mov
or
mov
lret
bnd
shrl
mull
shrl
aam
dec
mov
push
out
fldenv
out
add
mov
mov
iret
in
push
cmp
loope
sub
xchg
jge
ret
xchg
aas
or
lods
cmova
fnstenv
stos
and
dec
xchg
add
hlt
cmp
xchg
mov
movsl
ds
out
cld
fisubrl
xor
sbb
xor
push
jae
hlt
out
push
cmc
ficoms
fdivs
lods
cmp
or
cmc
lret
sbb
pop
sub
lock
popa
dec
push
pop
dec
nop
or
cmpsl
in
xchg
ret
dec
xor
fwait
and
xchg
mov
push
loope
sbb
and
cltd
cltd
adc
adc
test
jo
mov
push
sub
jge
xor
sbb
std
inc
dec
popf
ret
mov
jmp
jae
cltd
or
inc
scas
vmread
inc
lock
jno
imul
xchg
pop
lods
aam
push
cmc
inc
inc
cmpsb
or
nop
add
arpl
decl
stos
and
add
sbb
shll
scas
xorl
inc
dec
and
lahf
adc
cltd
dec
imul
mov
and
adcl
fcomp
rorl
fisubs
dec
lods
push
ds
xchg
add
jge
ffree
loop
push
xchg
cmp
negb
adc
stos
cmp
mov
daa
add
out
cli
lret
and
fsubl
mov
mov
test
loop
and
inc
or
pop
add
jo
adc
imul
jl
add
pop
dec
sbb
mov
cltd
pushf
adc
xchg
xchg
xchg
mov
pop
lss
pop
xor
bound
arpl
jecxz
mov
xor
adc
insb
push
imulb
xchg
aas
or
mulb
pop
xchg
scas
sub
shrb
out
lret
mov
jae
adc
pop
mov
inc
inc
lock
test
aaa
pop
outsb
sub
or
outsb
data16
arpl
repz
push
cmpsb
xchg
add
arpl
subl
ficompl
out
cmp
jmp
mov
les
dec
xchg
cmp
outsb
outsb
fstp
sbb
loope
sbb
hlt
jle
stos
xor
add
xchg
xor
xchg
lods
ja
xor
fs
push
notb
xor
mov
ror
cmp
jae
cld
clc
mov
push
outsl
fnsetpm(287
addr16
hlt
mov
adc
dec
fwait
pop
push
mov
or
sbb
sbb
xchg
out
call
jecxz
cmp
hlt
and
sub
lods
test
mov
into
out
dec
push
ljmp
cmpsl
mov
mov
xchg
jb
pop
or
xchg
push
aad
xchg
andl
push
adc
xchg
mov
jo
push
jns
fiadds
shlb
lds
pop
fwait
jge
rol
and
loope
lret
lret
dec
pop
in
addb
sbb
outsl
adc
pop
outsb
push
psrld
dec
push
lret
push
pop
push
sahf
les
inc
xchg
xchg
pop
mov
frstor
int3
adc
inc
movsl
mov
xchg
cmp
stc
shrb
mov
movsl
inc
pop
test
cmp
and
lds
mov
mov
push
sti
jecxz
aam
mov
mov
push
scas
enter
das
jb
mov
out
movsb
adc
mov
add
or
pop
cmp
and
jp
push
dec
lcall
stos
sbb
pusha
loop
aaa
subb
xor
cmp
mov
sub
movsl
pop
cmpsb
aaa
mov
jle
and
xor
jb
fcomps
push
cmpl
inc
jp
idivb
aaa
shlb
and
out
in
outsb
mov
mov
stc
rorb
orb
cltd
das
mov
nop
out
add
inc
add
movsb
jl
dec
int
in
mov
pop
es
pusha
pushf
sub
imul
movsl
pop
jg
pusha
shl
lock
mov
sbb
popf
cwtl
into
mov
adc
cmpb
ljmp
into
push
sti
jnp
test
add
jg
jo
sarb
pop
fwait
cld
scas
or
xchg
and
pusha
outsl
cmp
test
inc
adc
xor
mov
insb
mull
data16
lods
imul
mov
cwtl
push
jp
pop
repz
and
push
jle
lahf
imul
loopne
adc
xor
jae
xchg
jns
bound
jl
jge
inc
lods
lods
in
in
das
inc
cmp
sub
enter
or
call
mov
sbb
shr
mov
xchg
outsl
fstl
mov
pop
fidivrl
lock
ljmp
inc
call
and
test
insb
push
or
mov
ljmp
mov
push
adc
pop
mov
pop
bswap
fldl
sub
scas
dec
xor
pop
sbb
push
xor
adc
or
test
add
inc
cli
repz
mov
ret
inc
sbb
sub
sbb
das
and
nop
sbb
out
adc
dec
lahf
xor
xor
fisubs
mov
add
lds
clc
xor
fsubrs
in
sub
sbb
push
mov
adc
cltd
adc
mov
sub
inc
mov
movsb
mov
sbb
pop
fistpl
mov
int
xchg
dec
jp
scas
data16
ja
xor
pop
add
icebp
outsl
xchg
xchg
je
and
es
mov
and
adc
dec
sti
inc
dec
outsb
mov
push
pusha
inc
test
mov
add
jae
adcb
push
mov
push
sub
hlt
push
cwtl
shrb
enter
dec
push
nop
mov
sbb
inc
fisubl
clc
xchg
cmpsb
sub
add
js
mov
sahf
dec
cmp
dec
fcompl
outsl
push
sbb
pop
pop
pop
jmp
or
cs
push
jl
push
in
pop
fidivl
call
mov
jnp
push
inc
mov
fisubrs
inc
pushf
adc
push
jge
js
cmc
ret
pop
daa
inc
adc
inc
xchg
mov
add
pop
or
inc
iret
mov
inc
cmp
mov
ret
inc
jg
ja
jmp
push
adc
sarb
xor
jbe
or
add
mov
in
add
cmp
out
std
jb
sub
ret
add
enter
cmp
add
ret
xchg
mov
mov
popl
nop
in
incl
lea
lea
sahf
daa
mov
leave
sysret
data16
xchg
jo
lods
rclb
arpl
icebp
xlat
sub
adc
int
cmp
mov
sbb
mov
mov
cmp
or
mov
adc
nop
mov
add
xor
jns
test
xor
xor
sti
int
mov
test
fsubl
push
sbb
fs
mov
pop
pop
mov
mov
in
sub
test
pop
stos
pop
and
push
loopne
mov
xchg
scas
lret
arpl
cmp
pop
lcall
or
mov
.byte
