int3
xchg
xchg
or
aas
mov
aam
mov
mov
ja
iret
dec
adc
sub
jg
push
inc
imul
movsl
shlb
and
aas
or
xor
mov
pop
mov
mov
ljmp
int
add
dec
xchg
cs
fs
loopne
mov
loope
movsl
cld
dec
inc
xor
inc
or
push
cmp
adc
outsb
xor
dec
pop
sti
movsb
mov
sbb
sub
mov
mov
rclb
and
or
jns
ljmp
cltd
les
push
push
int3
and
outsb
or
cmpb
ja
and
xchg
jmp
mov
adc
add
fiaddl
push
inc
inc
inc
adc
dec
mov
cs
ret
call
and
in
out
into
mov
lock
xchg
jmp
pop
div
imul
adc
xor
test
push
pushf
call
lea
jb
jg
cmc
clc
cmpb
jmp
call
stc
or
pusha
pusha
push
pushl
lea
jne
mov
or
mov
stc
call
push
pusha
lea
jb
push
pushl
ret
pushf
jmp
add
dec
outsl
popa
fs
imul
add
and
sbb
ret
mov
stc
sbb
gs
lods
sarb
leave
jnp
and
add
das
out
xor
mov
cmp
add
pop
jg
cltd
jle
fmul
subb
push
repz
je
add
sbb
mov
int
adc
xlat
cld
mov
adc
insl
gs
jle
subb
push
clc
push
cmp
push
xor
daa
push
jae
das
and
sbb
mov
clc
cltd
mov
adc
repz
sbb
and
cmpsb
cmp
lcall
movsb
sub
add
cmp
and
and
scas
sar
jmp
xlat
inc
test
pop
jb
cmp
rcl
stc
xor
int3
mov
sub
jne
lcall
adc
xchg
in
adc
lods
orb
in
sarb
mov
fildll
lret
aas
sub
lea
jne
neg
mov
inc
sub
bts
shl
sbb
stc
mov
cmc
rcl
clc
add
rcl
adc
dec
add
mov
push
cmc
call
bsf
sbb
bswap
mov
pushf
cmc
movb
cmpb
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lea
je
call
clc
mov
stc
test
bt
add
movb
call
cltd
arpl
mov
std
lahf
inc
outsl
xchg
aaa
pop
add
mov
pop
dec
aaa
mov
out
jo
adc
xor
xchg
and
cli
cmpsb
mov
mov
mov
dec
pop
jg
ds
fwait
mov
or
sbb
in
pop
pop
xorb
cmp
mov
aas
xor
cmp
into
stos
dec
push
gs
scas
jbe
mov
or
xchg
jle
xchg
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
rorb
pushf
pushl
ret
add
pushl
lea
jmp
jmp
movb
lea
je
shr
call
rol
lret
sbb
jmp
aaa
fdivr
movsl
lret
scas
push
sub
shlb
sar
lcall
pop
sbb
ja
nop
xor
sbb
mov
popf
shll
les
xchg
fsubs
or
inc
mov
fdivrs
lcall
jge
test
aas
pusha
inc
stos
jbe
mov
xor
add
mov
mov
pushl
popl
mov
pushf
pushl
ret
cmp
btc
btc
mov
not
jl
ror
add
and
mov
test
call
pusha
clc
cmp
pusha
push
lea
jae
pusha
movb
mov
lea
jmp
cmp
jmp
xor
jmp
jmp
fmul
sbb
out
xchg
cmp
lahf
out
test
push
and
bound
dec
shl
or
out
les
xor
stc
fsubrs
sub
mov
cmp
and
pop
jg
mov
pushf
adc
adc
addr16
lods
xchg
stc
loopne
es
pop
mov
and
test
jae
insl
sbb
mov
faddl
mov
stos
movsl
pop
out
scas
cltd
mov
nop
inc
mov
mov
cmp
jge
pop
cmpsb
mov
mov
ja
lret
xor
add
mov
adc
outsl
loopne
outsb
xchg
and
jno
dec
pop
add
push
aad
js
sub
out
pop
andb
xchg
pop
push
dec
insl
push
inc
gs
mov
mov
or
push
loopne
cld
fwait
and
mov
popa
hlt
adc
or
mov
outsb
adc
ljmp
clc
lcall
push
jl
int
aam
jecxz
jns
outsl
leave
enter
mov
aaa
ret
add
js
push
scas
xor
pop
andb
pop
adc
push
adc
loope
ret
xor
push
idivb
lods
adc
mov
lret
outsb
fldl
bound
xor
js
mov
mov
or
mov
inc
out
imul
jbe
or
sub
dec
out
cltd
add
lods
cmc
data16
inc
aaa
icebp
and
nop
sbb
sti
mov
lods
pop
imul
mov
aaa
lcall
xlat
jns
dec
leave
or
jge
lcall
fisubrs
sub
mov
jl
push
cmc
mov
stc
fwait
mov
cld
loopne
andl
outsb
adc
jmp
shl
andl
in
aas
movsb
clc
push
hlt
sub
xlat
repnz
adc
cld
mov
inc
mov
add
xlat
je
and
fcmovnb
imul
dec
jmp
stos
je
outsl
movsl
push
push
insl
aaa
imull
fs
imul
test
xchg
mov
les
sbb
insb
shlb
sub
adc
dec
je
xorb
hlt
adc
add
xchg
adc
enter
je
jmp
xor
adc
aaa
cltd
arpl
arpl
nop
ret
push
dec
lea
xchg
fimull
xchg
jnp
int3
add
sub
mov
js
orb
jb
js
cmp
cmp
test
cmpsl
sbb
movsl
mov
xchg
add
dec
xor
insb
dec
adc
xchg
cmp
sub
push
jle
pop
cli
jl
into
cmp
add
inc
cmp
pop
mov
addl
dec
add
jmp
mov
fisubs
arpl
sub
push
shlb
lret
loopne
negb
cli
in
loope
into
xor
ret
insl
rcll
adc
xor
gs
mov
dec
mov
push
lock
dec
lock
mov
ret
nop
mov
fwait
mov
pop
enter
imul
jp
and
out
aad
sub
js
mov
dec
mov
sahf
mov
inc
mov
lret
outsl
xchg
jne
mov
pop
cld
cmpsb
and
test
stos
jne
adc
adc
sahf
aaa
inc
into
scas
sarl
pop
loopne
lahf
inc
lods
dec
inc
sbb
inc
add
or
das
xchg
pop
inc
fs
cld
clc
sbb
dec
repnz
test
mov
jne
js
movsb
add
xlat
cmpsl
pop
adc
imul
add
sub
out
rcrb
ds
mov
movsl
mov
jl
jg
fwait
aaa
fcoml
scas
sub
orl
mov
adc
mov
sub
pop
dec
lds
gs
jmp
mov
or
dec
xchg
data16
dec
nop
jecxz
or
or
mov
insb
ss
test
adc
ret
cmp
jl,pn
xorb
movsl
insb
aam
sbb
iret
jo
jnp
cmpsb
int
fiadds
test
dec
mov
out
out
push
je
jnp
shlb
xchg
mov
fildl
mov
aad
call
inc
jmp
mov
mov
push
ljmp
sti
out
and
cmp
xchg
fdivp
or
mov
lods
mov
cs
adc
js
movsb
into
xor
inc
fs
test
popa
xchg
cmp
stc
inc
mov
push
stc
lret
jnp
shll
jp
cmpsb
movl
pusha
int3
jo
popa
sub
sub
push
inc
out
xchg
cmp
xor
or
adc
and
bound
lods
sub
pusha
pop
push
adc
adcl
rcrb
xor
sti
mov
push
outsl
stc
sbb
and
nop
imul
push
aam
jle
orl
xchg
push
call
xchg
int3
mov
xor
jg
cli
sbb
add
mov
cmp
mov
fidivrl
aaa
sbb
pop
inc
mov
add
pop
out
push
cmc
pusha
add
lea
int
shll
gs
clc
xor
inc
stos
and
jge
xchg
dec
adc
outsl
adc
pop
pop
lock
rcr
add
repz
mov
sbb
sbb
and
xor
ss
sbb
push
fs
andb
lahf
pop
cmp
lret
jne
push
aam
out
fsubs
lahf
mov
scas
mov
xchg
testl
push
ss
jns
jmp
repnz
xchg
test
fnstsw
adc
push
jns
movsb
xor
ds
repz
lret
int3
jp
xor
inc
lock
jge
or
sbb
xor
inc
push
scas
mov
push
cmc
cmp
insl
mov
xor
daa
push
lcall
sub
xchg
xchg
pop
sahf
jmp
sbb
test
fnsetpm(287
adc
jnp
jl
mov
inc
sub
mov
insb
mov
xorb
sbb
add
jge
jbe
sub
pop
outsl
mov
rcrb
je
mov
or
add
fadds
pop
std
push
mov
lea
imul
outsb
mov
mov
pop
or
push
add
inc
test
std
inc
dec
push
lahf
ds
out
push
js
add
push
je
or
je
repnz
xchg
std
ja
sbb
sbb
insl
pusha
mov
ret
and
and
inc
imull
insb
aad
mov
repz
add
andb
inc
mov
jno
push
loope
adc
jg
push
icebp
insb
mov
negl
lods
sbb
add
sub
lock
dec
lret
dec
jo
mov
pop
xor
sub
adc
and
push
adc
jbe
xchg
stc
sub
mov
xchg
je
inc
stos
sbb
lea
push
shrb
enter
add
sbb
fiadds
cmp
jb
pop
outsl
mov
push
cmc
push
mov
jp
test
mov
lods
addr16
add
sarl
jl
popf
push
and
lret
inc
repz
cmp
lret
sbb
sbb
adc
push
jo
fadd
mov
jno
push
loopne
das
shlb
inc
cs
or
sbb
lret
cs
adcl
xor
cltd
cmp
fwait
movsb
movsb
inc
sub
jge
jns
mov
loop
mul
push
sub
rorb
mov
stos
xchg
cmp
mov
lahf
inc
push
cmp
loop
lock
cmp
das
or
les
xor
fists
stos
sbb
mov
xchg
xchg
ficompl
inc
mov
rcrb
mov
pop
out
mov
sbb
lock
pop
dec
imul
jbe
push
ret
mov
push
into
loopne
cli
push
filds
push
jmp
aam
mov
aas
mov
mov
in
mov
jl
xorl
xchg
subl
cmp
loopne
xor
jmp
rorb
scas
pop
lret
cld
les
add
sbb
std
lret
mov
add
das
jne
xor
icebp
in
iret
lcall
stc
in
mov
hlt
pop
xor
popa
fldt
xchg
mov
repnz
cmp
leave
lahf
push
xorb
das
push
jno
pop
repnz
mov
sti
and
mov
pushf
aas
jmp
scas
add
bound
and
mov
xchg
lahf
jmp
push
mov
xor
repz
repnz
mov
lds
and
sbb
adc
and
xor
clc
enter
mov
cltd
or
cmp
ss
in
cmc
inc
aas
mov
xor
or
inc
idivl
pop
imul
mov
ret
ljmp
arpl
mov
mov
or
cltd
inc
stos
and
mov
mov
into
inc
push
js
movsb
mov
mov
xchg
xchg
mov
movsb
xchg
mov
lods
push
into
xchg
lods
dec
movsl
dec
sub
inc
in
mov
es
mov
cmp
aas
mov
cltd
mov
mov
inc
subb
pop
icebp
pop
icebp
xchg
ss
fcoml
lret
pop
mov
pop
cmpsb
dec
adc
jl
pop
inc
imul
mov
push
mov
xlat
shll
shll
insl
insb
xor
pop
fwait
lods
aam
in
iret
cmp
xchg
mov
stc
sub
shlb
lods
jae
xor
js
adc
lods
mov
mov
mov
leave
jae
inc
out
lds
dec
mov
fst
incl
inc
icebp
dec
scas
pop
inc
in
shl
xlat
lret
cltd
xchg
mov
jl
mov
sbb
cmp
inc
insb
and
mov
das
cmp
pop
pop
and
add
repz
push
mov
or
mov
sbb
mov
lods
pop
cli
pop
test
mov
cli
jbe
or
iret
shl
idivl
loope
jns
insl
dec
pop
out
stos
push
lock
xchg
push
jnp
cmpsb
jbe
mov
mov
arpl
fwait
mov
out
jge
or
enter
sub
dec
in
push
or
sub
dec
out
mov
les
fcoml
xchg
jp
aas
and
sbb
xchg
insb
mov
mov
push
bt
push
sub
pusha
neg
clc
pusha
mov
clc
add
stc
cmp
call
pop
mov
mov
jmp
lods
je
push
mov
mov
aam
sahf
jmp
call
mov
icebp
bound
arpl
xchg
pop
mov
jne
pusha
cltd
aam
es
adc
pop
sub
sbb
fimull
add
test
jge
dec
jb
mov
sbb
negb
aas
daa
mov
cmp
subl
sub
xorb
movw
inc
mov
lea
jmp
lea
je
pusha
movsbl
lea
mov
movzbw
sete
push
call
call
shrd
lea
mov
cmc
cmp
mov
test
xor
pushl
repnz
movl
lea
jne
sbb
bts
sbb
mov
inc
adc
sub
bsr
mov
push
jmp
movsbl
mov
xchg
lea
pushf
mov
pop
mov
pusha
mov
jo
lea
push
pop
pop
pusha
pusha
pushl
ret
xchg
bswap
cwtl
mov
pop
movl
cwtl
pushf
lea
mov
movl
movl
call
mov
xchg
movzbw
xchg
movzbw
mov
call
test
add
pushf
test
pushf
mov
pushl
call
xchg
push
pushf
movl
movzbw
push
lea
call
call
stc
cmc
call
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
in
sbb
fs
je
clc
or
jmp
add
jae
push
sub
test
cmc
mov
neg
call
jmp
pushl
popl
pushl
pushl
ret
xorb
mov
adc
jbe
mov
xor
fwait
add
cwtl
jne
push
ja
sub
into
inc
repz
mov
push
jp
add
cmp
mov
mov
mov
mov
jg
leave
xchg
dec
cmp
cmp
fs
je
call
cltd
lret
rorb
mov
push
cmp
jg
dec
repnz
mov
jno,pt
addb
aam
and
inc
dec
arpl
sub
mov
cmc
and
or
adc
mov
inc
sub
mov
inc
or
jo
pop
dec
insb
int3
xchg
popf
imul
mov
sub
iret
jmp
orl
test
sub
adc
insb
loope
cld
jb
in
hlt
sbb
je
sbb
or
and
jnp
push
push
jp
mov
ss
pushl
popl
movb
mov
pushl
ret
lock
or
test
dec
dec
jb
fs
es
cltd
popa
ds
sbb
inc
out
mov
pop
inc
push
xor
or
inc
minps
xor
leave
xor
sub
fnstsw
pop
sahf
fwait
int
jns
mov
inc
fs
ret
mov
loopne
hlt
popa
dec
pusha
cltd
fwait
shll
into
out
xchg
fwait
add
lret
sti
pop
dec
dec
int3
jo
push
mov
xchg
in
stc
mov
sub
jmp
movb
xchg
cwtl
movzbw
push
lahf
movl
lahf
lea
push
jmp
pushf
jmp
inc
pushf
pushf
inc
mov
movb
pushf
mov
lea
jmp
pushf
xchg
pusha
lahf
pushl
mov
pop
lea
pushf
pushf
pushl
pushf
xchg
bswap
bswap
pushf
movl
push
movzbw
pop
lahf
lea
pushf
movl
jmp
test
ror
cmp
mov
add
sar
mov
shld
inc
mov
pusha
clc
test
test
jmp
mov
mov
jmp
pushl
popl
mov
mov
pushl
ret
jnp
jne
mov
pop
adc
dec
gs
cmp
push
clc
fcmove
outsl
xor
push
lds
subb
jbe
mov
jp
push
xor
inc
leave
in
out
test
fadds
repz
jmp
enter
mov
xchg
adc
pop
push
dec
sbb
jb
pop
jg
dec
inc
or
xchg
cmp
xlat
decb
out
das
xor
xchg
or
mov
mov
mov
xchg
lea
je
bswap
xchg
push
not
lea
lea
push
jmp
call
cmc
push
stc
add
mov
call
jmp
mov
inc
inc
jmp
mov
pushf
push
movzbw
pushl
popl
lahf
pusha
not
jmp
mov
cmp
movsb
int3
jno
mov
jmp
icebp
pop
test
ja
push
add
sub
mov
ret
jnp
inc
pop
aas
mov
push
shl
add
popa
sbb
rcr
ja
cmp
es
stc
pop
cltd
push
mov
push
std
and
sbb
leave
xor
push
data16
or
pop
jle
mov
sbb
pop
ds
inc
daa
filds
aaa
movsb
ljmp
clc
imul
jne
or
iret
ss
push
push
dec
mov
loop
stos
jb
push
movsl
xchg
sub
push
call
movw
mov
lea
jb
push
stc
cmp
pushl
pusha
lea
jae
shl
sub
ror
mov
not
shrd
mov
btr
mov
cmp
xor
pushf
repnz
jmp
mov
push
pushf
pushl
ret
mov
push
mov
mov
lea
lea
pusha
mov
movb
pusha
movb
pushf
pushl
ret
jmp
sub
bt
clc
cmp
movw
xor
call
stc
add
pusha
bt
cmc
neg
pushl
add
call
sbb
xor
int
lcall
adc
scas
in
adc
and
enter
pop
fidivrl
and
mov
iret
ret
ljmp
pop
xor
outsl
iret
mov
fs
add
mov
inc
movsb
test
shlb
pop
or
aaa
test
xor
mov
decl
add
bt
cmp
lea
je
add
pushf
pushf
pusha
lea
jmp
call
xorl
xchg
xor
add
mov
push
or
out
sub
div
popf
nop
sti
in
pop
int3
cmp
ss
or
mov
jl
jp
aam
lcall
hlt
xlat
mov
xlat
nop
stc
jle
or
in
or
call
call
mov
add
push
cli
sbb
in
xor
std
and
int
mov
add
lret
push
push
int3
jbe
pop
xor
popf
shrl
data16
mov
xchg
and
pop
fdivrp
sbb
shlw
mov
push
mov
mov
and
icebp
fdivrs
mov
mov
stos
cmpsl
stc
bsr
xor
mov
pushf
pushf
shl
pushf
jmp
not
lea
pushf
pushf
pusha
lea
jmp
mov
movl
call
shrd
sub
or
stc
xchg
add
mov
bswap
movsbw
mov
push
mov
shrd
add
clc
shr
ror
bsr
not
mov
lea
add
jmp
test
mov
ja
inc
fs
lods
shl
xchg
mov
mull
lret
cmpsl
int
test
mov
mov
dec
xchg
fisubl
sbb
fisubrs
insb
mov
imul
mov
sbbb
adc
addb
pop
jne
cmp
cmpl
rol
in
mov
cmc
jbe
xchg
cmp
daa
mov
mov
das
stc
notl
sub
movaps
add
xor
test
movsl
int3
add
imul
inc
inc
popa
jno
subl
push
cmc
sbb
xchg
mov
mov
mov
pop
enter
clc
sbb
sbb
and
sub
aaa
sub
or
data16
pop
cli
ds
sub
xchg
aaa
fwait
add
lret
negb
and
add
mov
nop
cmc
icebp
pusha
jmp
pusha
jmp
mov
xor
insl
cmp
mov
push
sbb
addl
lds
repz
and
sbb
leave
mov
repz
cmp
dec
fs
adc
mov
enter
pop
jo
int3
mov
and
push
jmp
jg
movsb
sub
jecxz
push
andl
or
sbb
sub
xor
fwait
ja
lcall
dec
insb
push
inc
and
and
sub
negl
popf
test
xor
or
cmp
and
adc
cmc
sub
bswap
cmp
btc
lea
push
test
push
cmc
sub
lea
jno
push
clc
test
pushl
popl
test
pusha
cmp
movb
call
cmp
add
push
clc
pop
jmp
lods
push
jne
shlb
mov
addr16
mov
and
daa
xchg
pusha
insb
lahf
fwait
mov
aas
and
fdivr
xor
daa
in
fdivrs
aam
lods
lods
outsb
lea
pusha
mov
sbb
dec
sbb
daa
jne
icebp
test
mov
mov
rcr
or
mov
adc
mov
xchg
js
aas
daa
mov
jo
jnp
or
adc
push
pusha
movl
movl
pusha
movw
movb
lea
jmp
or
fldl
mov
hlt
sbb
arpl
jmp
mov
ljmp
jecxz
sub
repnz
dec
or
into
jno
mov
insb
mov
add
call
pop
cmp
push
push
mov
dec
insl
dec
fs
arpl
fwait
adc
xor
sub
push
js
xchg
jl
out
adc
pop
aas
sbb
cwtl
add
cmp
xchg
in
and
cmp
dec
xor
adc
ss
es
sub
cltd
sahf
movl
push
lea
jne
push
movb
movl
push
pusha
lea
jmp
movzbl
sub
shld
mov
cmp
call
and
sbb
mov
outsb
fnstcw
push
sbb
pusha
addl
cli
bound
filds
or
popa
push
daa
int
cltd
shlb
add
pop
cmp
cmpl
int3
ret
push
test
repnz
stos
adc
or
add
sbb
xor
jecxz
xor
insb
loope
negb
add
fidivs
mov
xchg
push
inc
or
fldt
or
add
adc
mov
rorb
xchg
jg
xor
cld
pop
cmp
sub
clc
xor
mov
shl
scas
push
ja
lds
or
aam
pop
andb
xor
push
or
xchg
mov
lea
ja
push
pushl
jmp
cmc
repnz
movb
call
sub
stc
movb
movw
xor
test
cmp
cwtl
lea
setno
call
or
decb
pop
stc
decl
xor
or
scas
and
mov
push
aas
daa
pop
cmp
sbb
inc
out
cs
xchg
cmp
subb
dec
adc
xchg
add
inc
jmp
fdivr
mov
inc
js
xor
mov
ret
cs
out
push
bound
fmulp
ja
nop
sti
lahf
shl
adc
add
mov
pop
mov
je
or
xchg
hlt
pop
mov
pop
sub
add
stc
stc
or
pushl
mov
pushl
lea
je
jmp
mov
jmp
push
stc
or
movb
call
rol
lret
mov
arpl
lods
shl
sbb
or
aad
sahf
sbb
int3
xchg
ds
mov
and
dec
and
mov
imul
aas
bound
push
pop
dec
xorb
and
clc
ja
adc
push
jbe
add
sub
mov
mov
cmp
shrl
push
sbb
sbb
cs
push
subl
inc
lods
mov
ds
in
and
mov
pop
pop
dec
cmp
mov
add
int3
out
xchg
mov
out
aad
and
or
test
mov
fmull
imul
test
dec
mov
jb
test
mov
cmpsl
leave
jae
and
add
fdivs
and
insl
dec
xchg
or
jge
pusha
jnp
xor
inc
mov
pop
jne
popf
ret
dec
xor
scas
adc
inc
adc
push
xorb
pusha
jmp
rorb
fdivrl
inc
out
push
mov
jg
lret
sub
push
cmpsb
enter
orl
and
pop
adc
sub
repz
inc
sbb
push
into
rep
dec
in
aad
pop
add
shlb
inc
aaa
xor
add
inc
push
cmp
test
pusha
mov
lea
je
cmc
bt
clc
pusha
sub
call
jmp
call
mov
jo
mov
or
fdivr
loopne
cmp
xchg
push
add
mov
inc
imul
gs
stos
and
xor
fdivrs
popa
push
adc
leave
inc
je
dec
mov
movsl
and
into
call
adc
scas
lahf
das
sbb
stos
int3
xor
std
pusha
fidivrs
daa
mov
shlb
add
mov
std
stc
add
mov
push
movzwl
bt
bt
mov
test
add
call
cmc
cmc
push
cmp
pushf
pushf
push
push
lea
jb
clc
call
pusha
imul
pusha
add
push
pushf
pushl
lea
jmp
lea
jne
pusha
lea
jbe
jmp
lea
jae
stc
adc
rcl
bt
mov
shrd
test
test
btc
mov
jmp
jmp
call
adc
shl
sub
pushf
mov
pop
call
lea
jne
inc
push
pushf
xor
mov
cmp
call
stc
in
repz
mov
sub
sub
mov
pop
stos
jnp
add
fnstsw
adc
insl
sysexit
fdivrs
jge
pusha
ret
and
push
push
stc
notl
mov
jns
pushf
pushf
lea
je
call
and
push
cld
mov
mov
scas
push
sbb
je
es
shr
jb
push
or
jno
cmp
sub
xchg
push
test
into
shrl
mov
jecxz
std
int
jae
fwait
pop
pop
repnz
test
push
dec
outsb
stos
fistps
in
stos
xchg
cmp
adc
lret
mov
xor
mov
inc
or
test
dec
cmp
ss
aad
inc
mov
mov
std
dec
inc
cmp
sti
mov
adc
and
xchg
mov
mov
cwtl
mov
mov
jne
dec
rorb
ljmp
outsb
sub
and
pop
mov
or
cmpsb
xor
fwait
mov
inc
add
lcall
push
adc
xchg
lcall
xor
dec
mov
pop
and
jle
cs
ret
insl
pusha
pop
mov
lret
outsb
fistl
push
sbbb
test
inc
xor
ret
adc
cmp
mov
adc
movsl
cwtl
in
cltd
cmp
adc
jecxz
and
sub
popf
imul
mov
and
stos
in
ljmp
sub
pop
movsb
xchg
xchg
inc
cmp
pop
leave
xchg
ficoms
mov
adc
ds
push
aam
push
xchg
lds
sub
test
notb
add
repnz
movsb
repnz
sbb
jmp
push
adc
xor
clc
filds
or
into
ss
or
and
mov
push
lods
bt
test
movw
sub
pusha
xor
pushf
bt
pushf
pushf
sub
cmc
stc
pushf
call
cmp
xor
inc
outsb
adc
jmp
out
ss
lds
pop
add
dec
ds
cmc
movl
into
sti
mov
ljmp
add
rcll
das
imull
jns
out
xchg
imul
ja
scas
ret
in
inc
jmp
les
cltd
mov
push
mov
and
inc
add
mov
fs
jmp
jmp
push
lea
jb
cmc
cmp
push
movb
pusha
push
lea
ja
dec
rol
stc
add
sbb
and
sub
or
mov
pusha
cmp
cmp
pushl
pusha
pushf
push
lea
jb
jmp
pusha
lea
jb
push
call
inc
je
stc
mov
sbb
pop
stos
iret
jb
mov
jmp
jle
xchg
mov
adc
jb
push
add
popa
jge
push
xor
pop
jne
mov
jecxz
fstps
add
or
xchg
scas
add
mov
pop
int
in
sub
loop
cmpsl
lea
aad
sub
dec
mul
xchg
into
movsl
rcrl
push
ja
mov
cmp
adc
dec
mov
call
pusha
jp
inc
jmp
mov
lock
sbb
je
ja
fcompl
insb
sub
push
cmpsl
inc
bound
pop
rorb
icebp
ljmp
aaa
push
jb
jl
add
mov
mov
xor
xor
gs
in
inc
imul
mov
push
mov
loop
roll
ss
lds
cmp
into
cmc
sbb
jne
mov
and
jae
sarl
mov
in
mov
jle
clc
mov
sbb
mov
insl
adc
add
mov
push
out
xchg
adc
dec
sahf
rorl
cmp
jo
pop
js
push
cli
fldt
stc
cmpsb
in
divl
jecxz
repnz
cwtl
icebp
lods
sarb
lods
dec
jle
in
popf
scas
push
cli
in
inc
push
adc
repnz
mov
add
popf
or
lods
lods
dec
icebp
sahf
sub
loop
aam
jge
lds
cmp
test
xor
mov
adcl
add
dec
in
stc
in
repz
mov
negb
shlb
push
in
xor
ds
xlat
inc
jne
dec
fildl
pushf
push
pminsw
lds
pcmpgtw
sbb
jno
inc
or
push
dec
xor
stos
lcall
cld
icebp
in
jle
or
pusha
aam
lods
dec
repz
fnstsw
sub
jne
out
mov
sahf
test
mov
dec
xchg
mov
mov
mov
or
cmpl
lods
push
jnp
jmp
and
in
stos
xchg
subl
adc
leave
xchg
arpl
insb
and
mov
mov
sarb
les
sbb
xchg
mov
jo
or
stos
ljmp
sahf
add
pushf
push
movsb
cmp
sub
or
and
cmp
dec
cwtl
cmp
filds
sbb
xchg
mov
xchg
adc
dec
add
in
cs
fadd
mov
xchg
xchg
and
call
jne
shl
test
not
sar
mov
jmp
push
lds
cmp
ret
add
pop
mov
scas
sbb
int
in
test
push
fdivrl
loop
lods
pop
dec
pop
es
pop
lret
pop
test
lahf
jne
add
dec
cmp
pop
adc
cmp
inc
adc
pop
dec
and
iret
in
cmp
fwait
rorl
loopne
mov
add
cmp
cmp
mov
jns
hlt
or
mov
push
sbb
and
adc
xchg
push
inc
sti
out
pop
jae
adc
out
out
xchg
pop
int
ret
imul
mov
mov
adc
testb
iret
dec
jle
mov
mov
dec
les
shlb
scas
mov
aaa
inc
inc
decb
mov
push
jge
adc
jecxz
dec
sub
pop
adc
cwtl
push
sbb
rorb
inc
push
add
ljmp
in
push
jae
cmpsl
test
mov
js
mov
mov
xchg
andl
sub
mov
lds
mov
xchg
cmova
inc
cmp
int3
out
fcmovnb
js
xor
iret
sbb
shlb
jno
test
mov
insb
sti
decl
ret
pop
btc
adc
sub
push
sub
add
pushf
fidivrs
push
xor
push
jp
mov
xchg
sahf
hlt
daa
mov
shr
xorl
sbb
cli
push
frstor
ret
mov
lret
xor
pop
je
pop
ljmp
pop
pop
push
es
jmp
out
inc
mov
or
cmc
pop
xchg
jl
cmc
mov
sbb
out
xchg
inc
stc
test
cmc
pop
mov
or
loope
pop
xor
fnsave
mov
push
lahf
push
jmp
adc
rolb
push
orb
leave
stos
shlb
cmpsl
imul
rorb
lret
mov
mov
sbb
mov
or
xor
add
adc
and
add
movsb
out
sarb
cmc
xchg
inc
or
aam
mov
adc
sub
dec
cmpsl
arpl
test
mov
int3
or
insb
nop
nop
rcll
test
mov
cmpsb
popl
jle
mov
scas
les
arpl
pushf
xor
lods
mov
push
out
subl
ret
inc
and
test
repz
inc
inc
jg
leave
xchg
data16
mov
jne
sbb
int
aas
dec
fcoml
inc
push
and
pop
and
cli
into
loop
push
push
sbb
enter
into
repnz
xchg
and
sub
iret
ds
es
pusha
push
inc
mov
pop
loop
add
lret
or
xchg
jp
ror
aas
mov
sub
leave
imul
ret
dec
icebp
xlat
pusha
scas
shl
into
dec
jne
add
add
out
and
jbe
sub
push
sub
ret
mov
in
cli
rol
dec
pop
jle
lret
or
mov
insl
xchg
and
bt
mov
aas
cmpsl
xchg
mov
cli
xchg
and
adc
addb
ds
ret
aam
push
mov
adc
out
add
pop
mov
stos
adc
retw
shrl
dec
call
fs
mov
into
int
cmp
push
jb
lahf
mov
je
nop
and
out
or
es
repnz
cmpb
mov
mov
fists
push
jbe
dec
scas
push
outsl
xchg
cmp
cmp
or
push
lret
push
popfw
mulb
out
cmpsb
mov
jae
cmpsl
pop
push
or
xchg
mov
in
ret
adc
jle
cmovbe
cli
data16
cmpsl
out
push
lret
or
push
push
or
mov
pop
int3
mov
shlb
stos
mov
xchg
pop
pop
iret
lret
sbbb
xchg
mov
and
pop
outsl
call
fcom
aam
mov
xlat
jg
lds
jg
cmpsb
inc
sbb
addr16
cmp
aaa
xor
jne
xchg
cmpsl
fistps
adc
nop
jns
js
mov
xchg
mov
mov
movl
and
clc
sbb
rol
sbb
repz
mov
adc
test
popf
inc
jp
xchg
loop
mov
roll
repz
lret
cmpsb
loopne
and
ds
aaa
dec
push
adc
imul
neg
insb
jmp
mov
add
nop
jae
push
aam
mov
xor
dec
mov
jmp
es
push
out
push
test
cmc
sbbb
cmpsl
shrl
clc
outsb
jle
sahf
clc
out
cmpsb
int
dec
add
leave
pop
aad
lea
and
addr16
add
cmp
clc
int
fnstsw
es
nop
mov
mov
aas
push
out
cmp
shrb
xor
int3
in
mov
test
icebp
pop
mov
xor
icebp
adc
cmp
out
adc
enter
mov
push
add
cs
sbb
fidivs
ds
jl
inc
dec
mov
or
push
adc
and
or
jo
ficoms
cli
jle
pop
cmpsb
scas
add
stos
fs
nop
inc
fmuls
dec
adc
sbb
es
xlat
into
adc
dec
repnz
jb
popl
push
rol
sbbb
aam
adc
and
pop
inc
loopne
pusha
or
jbe
cmp
push
popa
std
out
lcall
jle
les
es
rolb
int3
sub
ds
push
cmpsl
test
or
or
add
js
leave
testb
outsb
sbb
mov
in
fcomi
dec
in
pop
push
adc
imul
pop
mov
pop
xchg
mov
aas
xchg
jle
les
mov
out
dec
inc
out
pop
mov
pushf
adc
or
popf
jnp
stos
lea
cmpsb
pop
sbb
inc
add
inc
int
jle
mov
test
mov
xchg
mov
sub
dec
push
mov
sarl
enter
inc
shlb
cmpsl
push
xchg
dec
int3
into
dec
jb
jns
mov
scas
xor
inc
push
les
sahf
fcmovnb
into
and
mov
inc
add
int
int3
sbb
out
and
sub
jecxz
mov
outsb
mov
enter
rolb
sti
loope
sbb
jl
iret
xchg
out
push
out
out
pop
or
loope
or
sahf
inc
clc
xchg
nop
ret
int3
iret
sbb
dec
push
divb
hlt
jbe
adc
out
ljmp
adc
and
stos
out
cltd
cmpsl
lahf
push
in
xor
jbe
mov
cmpsl
inc
adc
ds
mov
push
ficoms
testb
cmpsl
in
mov
push
sahf
jp
lcall
in
fnstsw
rclb
fcomps
out
lret
push
jmp
popf
pushf
inc
les
fcoms
xchg
dec
in
adc
mov
mov
loop
push
push
push
mov
pusha
sub
out
cmp
mov
std
mov
jae
scas
xlat
xchg
sbb
pop
pop
movsb
jns
leave
pop
cmp
push
and
fs
fcmovu
mov
pop
mov
es
test
push
mov
icebp
scas
sbb
mov
push
call
outsb
popf
dec
les
inc
mov
mov
inc
btr
xchg
jns,pn
inc
addr16
fs
out
push
lret
mov
shrl
leave
ds
mov
stos
mov
cli
or
adc
add
sub
pop
pusha
mov
dec
out
add
je
cmp
dec
push
push
xor
push
cli
call
dec
mov
dec
stc
scas
pusha
sub
inc
lcall
pushf
fdivl
into
jmp
xor
sub
and
mov
adc
dec
add
sub
dec
test
popf
push
mov
dec
repnz
mov
xor
jge
in
rcrl
cmpsb
fsubr
ret
pop
jmp
adc
fwait
mov
je
adc
mov
dec
in
frstor
add
inc
and
wbinvd
jp
push
gs
les
inc
and
ret
int
mov
pop
and
mov
mov
jle
mov
sub
mov
int
add
in
xor
push
sub
or
lods
cs
inc
fimull
xchg
mov
daa
cmpsb
pop
push
dec
mull
rcrb
adc
push
push
add
pop
mov
cmpsb
inc
out
add
leave
call
inc
into
push
int
pop
adc
pop
mov
mov
add
mov
hlt
andl
outsb
lret
cmp
push
aaa
imul
push
aas
adc
scas
sbb
pop
leave
jle
rorl
outsl
mov
ljmp
sub
add
repz
divl
fs
call
call
pusha
lea
jne
call
and
xor
mov
jl
ret
out
add
xor
mov
pop
andl
das
mov
mov
rorb
cmp
adc
pop
adc
jne
aas
xorl
inc
stos
bound
imul
fnsave
inc
popf
add
dec
cmc
inc
pop
jg
sub
add
data16
push
lahf
push
jnp
mov
insb
les
fldenv
cmp
lods
shl
push
mov
jg
dec
das
push
cld
arpl
pop
push
call
mov
std
lock
mov
cltd
subl
push
ret
bound
roll
imulb
lcall
cwtl
mov
xchg
mov
in
cltd
jno
iret
fwait
adc
dec
scas
adc
ljmp
movsl
xchg
jno
leave
inc
fs
dec
loopne
imul
in
lea
push
stc
movsb
cmpxchg
lds
and
cmpsl
inc
repnz
rorb
lea
mov
sub
jbe
cmp
jae
jbe
sub
jns
jmp
lea
jb
cmp
push
cmp
call
inc
jae
jmp
xor
cmp
add
orb
adc
loop
add
push
inc
out
stos
jl
fcoml
test
inc
sub
jnp
mov
loope
in
jle
adcl
xchg
out
adc
cmp
sub
xor
jge
in
mov
arpl
mov
subb
add
daa
pop
cwtl
xchg
jnp
popf
aas
mov
xchg
imul
dec
lahf
sub
push
add
leave
test
sub
jmp
xor
movsl
xchg
pop
mov
insb
shlb
jge
andl
stos
cmp
iret
adc
push
shrl
sbb
cs
cmpb
dec
adc
lea
mov
test
je
mov
mov
sti
loop
mov
movsl
mov
dec
xor
add
cmc
push
add
push
pushf
lea
jmp
movsbw
pop
pushf
pushl
ret
movb
lea
call
call
add
inc
add
addb
add
push
and
add
add
shll
add
xchg
add
sub
add
add
adc
add
add
add
push
lea
jae
push
pusha
pusha
pushl
pushf
movl
push
push
pushl
movw
lea
jmp
lea
jae
rcr
mov
bsr
mov
sbb
shl
mov
test
push
cmc
xor
cmp
cmc
pushf
bt
repnz
jmp
mov
movb
pusha
lea
ja
pusha
pusha
inc
lea
not
not
dec
not
inc
not
sete
sbb
xchg
shl
not
mov
setns
push
jmp
call
scas
mov
pop
jnp
dec
jmp
mov
insb
xor
jmp
shrl
rolb
fiaddl
int
jl
mov
ds
cmp
jl
rorb
fidivrl
inc
out
outsl
push
aaa
fwait
jl
movb
jmp
pusha
adc
pushf
lea
jae
jmp
enter
mov
mov
push
sti
and
lea
pop
fs
bound
mov
fmull
out
loop
int3
aaa
popf
inc
mov
mov
insb
enter
dec
mov
xchg
cmp
mov
mov
mov
sbb
leave
mov
push
je
fstpl
mov
jnp
push
pop
jne
shlb
ja
inc
movsl
or
push
xor
negl
xchg
push
sub
push
cmp
jmp
je
aas
pushf
sub
neg
daa
mov
aas
movzbw
call
sbb
out
xor
xchg
cmp
jo
hlt
xchg
decl
sbb
fistpll
cmp
movsl
lret
jo
mov
push
add
testb
push
pop
test
xchg
dec
mov
dec
sub
lods
mov
iret
ret
mov
loope
sub
lock
mov
cli
cmp
mov
aas
mov
dec
aam
pop
pop
lret
push
daa
in
adc
jns
adc
xor
cwtl
in
ss
lods
or
sar
movsl
outsl
jbe
inc
jmp
pop
mov
sub
xchg
xor
sub
pop
subb
dec
ret
imul
dec
jmp
jecxz
ret
cmp
outsl
push
sarl
and
fldenv
inc
push
mov
xor
out
xor
xchg
aaa
pop
add
push
jns
shlb
lods
add
das
aam
cs
movsb
xor
repz
subb
ror
jmp
shl
or
mov
call
push
jnp
push
int3
and
mov
push
add
xlat
stc
sahf
add
xchg
stc
pop
shlb
pop
push
enter
adc
xchg
sahf
out
xor
sbb
lods
sbb
xor
cwtl
xor
lods
push
or
push
jbe
lds
clc
sahf
inc
ror
add
lret
test
inc
addr16
mov
sub
ja
outsb
push
and
fdivl
int3
outsl
adc
mov
and
mov
or
push
stc
sub
mov
in
shll
mov
cltd
push
mov
push
cmpsb
sbb
loopne
negl
shlb
cli
loop
inc
stos
mov
dec
lock
cs
mov
mov
xor
bt
sub
cmc
cmp
pushf
cmc
xor
cmc
cmp
call
xchg
pop
fs
xor
out
add
sbbl
dec
mov
negb
in
das
push
jg
cs
mov
jmp
fldln2
fdivr
pop
addr16
test
mov
movsb
jae,pn
push
repz
push
neg
aas
and
dec
mov
std
loop
push
cmp
in
xor
xor
mov
lea
je
push
js
cwtl
dec
jb
std
mov
shlb
loopne
test
pop
inc
insb
or
ret
int
mov
inc
in
stos
bound
test
movsb
sbb
outsl
shll
insl
adc
stc
fwait
mov
aas
or
sub
pusha
scas
pop
les
push
xchg
mov
cmpsb
bound
daa
lret
xchg
jecxz
mov
pop
cmp
movl
mov
stos
dec
icebp
xchg
cmc
sbb
in
mov
jecxz
hlt
xchg
jnp
dec
mov
movsb
dec
imul
mov
cwtl
cli
popa
inc
jns
dec
jbe
sbb
jno
inc
in
xor
xchg
dec
jae
cmp
sub
mov
lods
imul
mov
push
repz
inc
jnp
mov
pushf
pop
sub
jp
mov
loopne
int3
std
mov
les
sub
jb
mov
mov
loop
pop
cmp
cld
clc
test
call
test
add
pusha
pushl
push
bt
movzwl
and
test
rcl
ror
mov
pushl
mov
add
add
jl
clc
mov
pushf
stc
pushf
pusha
test
push
jmp
pushf
jmp
jmp
lea
je
setae
add
mov
mov
call
adc
pusha
pushf
pushf
mov
pushl
ret
bt
jmp
mov
jmp
cwtl
xchg
mov
mov
movzbl
not
pop
pusha
pop
mov
pusha
mov
jmp
push
movl
pushf
movl
push
lea
jmp
clc
add
mov
pushf
mov
pushl
lea
jmp
xor
add
mov
cltd
ds
cmp
push
jnp
fdivs
or
out
jg
sbb
call
and
out
inc
mov
sbb
and
mov
dec
das
adc
je
xor
fdivrs
push
jl
cli
mov
out
dec
lock
ja
ret
lea
sbb
and
mov
cmpsb
dec
sbb
cmp
leave
insl
pusha
ds
andl
push
jbe
mov
stos
dec
lret
or
dec
push
in
les
clc
aam
inc
push
iretw
pop
inc
icebp
xchg
jnp
movsl
pop
add
adc
popf
pop
xchg
pop
jg
xchg
mov
pop
lock
inc
in
fiaddl
lea
xchg
mov
mov
xor
xor
data16
or
sub
popa
nop
out
scas
in
fdivl
xchg
push
cmp
push
cmp
negl
xor
out
xchg
xor
xlat
mov
repz
jecxz
test
jge
jp
sar
inc
arpl
xlat
jns
test
sbb
jbe
dec
dec
dec
adc
jbe
add
pusha
neg
rcl
bsf
mov
call
lods
lock
popf
pop
mov
jne
in
add
into
push
xchg
roll
movaps
jbe
adc
jb
push
into
mov
subl
push
jecxz
js
add
mov
aad
xchg
add
lret
add
jmp
mov
jmp
xchg
xchg
pop
and
sub
adc
mov
outsl
lret
xchg
adc
testb
mov
lahf
ret
aad
ret
inc
lock
fimuls
stc
in
icebp
repz
sbb
out
lds
xor
pushf
pop
and
cmp
rolb
inc
pusha
addb
cwtl
leave
push
inc
out
rcrl
mov
ds
xor
imull
mov
pop
inc
or
jg
sahf
add
mov
or
sub
push
les
sti
add
jnp
mov
mov
imul
arpl
sub
pop
dec
push
loope
xor
adc
clc
sbb
out
xor
push
in
or
ja
jbe
arpl
lcall
ja
or
sub
xlat
mov
xchg
and
jae
dec
xchg
mov
loopne
and
jl
adc
lret
jae
sbb
lret
mov
stos
fnstcw
add
clc
ljmp
popa
sub
loopne
xor
icebp
xchg
cmp
test
dec
jne
ds
lret
inc
fcoms
inc
jae
dec
pop
add
xor
lods
cld
dec
lods
iret
mov
xor
ror
mov
gs
push
mov
mov
sarl
bound
xchg
mov
pop
adc
stos
sbb
lods
xchg
clc
cld
cs
cltd
daa
js
lods
inc
cli
lahf
push
clc
popf
add
int3
adc
dec
movl
aas
cmp
pushf
lea
call
pushf
lea
jae
call
lea
je
ja
pushf
call
push
push
push
fistpll
cmp
add
fdivrl
inc
jns
insl
cmp
xchg
push
mov
idivl
daa
repnz
icebp
mov
mov
inc
add
mov
xchg
xchg
mov
push
mov
adc
fdivrl
cmpsl
or
ss
cmp
sub
add
push
mov
movsbw
bswap
mov
call
xor
add
mov
pop
les
test
inc
or
and
in
cld
test
adc
out
mov
js
mov
scas
jmp
fidivrl
xor
shll
flds
sbb
lock
xor
or
inc
sub
dec
lret
sbb
aas
loope
das
dec
adcl
out
push
mov
test
jno
in
lods
adc
test
fidivrl
dec
outsl
xchg
mov
je
cmp
jl
sub
mov
jg
adcl
xlat
int
or
outsb
and
scas
imul
lea
pop
pop
sysenter
lock
cs
clc
std
popf
ds
sbb
sahf
pop
jl
jae
lods
arpl
pop
mov
push
cmp
xchg
push
pop
xor
xor
loop
mov
hlt
int3
mov
xor
pop
inc
es
je
insb
lea
xor
cmp
ret
arpl
xchg
bound
les
movsb
leave
xchg
dec
outsb
inc
arpl
add
insl
dec
xchg
pop
cld
mov
leave
inc
cmp
daa
dec
ds
in
dec
xor
mov
add
sub
cmpsb
or
dec
movsl
enter
enter
mov
mov
push
add
dec
mov
stc
xchg
mov
dec
push
stc
fwait
inc
data16
push
aaa
jae
xchg
pop
insb
xchg
mov
push
pop
inc
addr16
mov
dec
xor
mov
push
cmpb
shll
pop
inc
jmp
lcall
or
in
in
movsl
in
add
and
push
ret
cld
repnz
negl
xchg
mov
adc
push
or
pop
iret
jno
sbb
mov
sbb
inc
jmp
xchg
adc
ret
sbb
mov
dec
push
aaa
shrl
mov
out
int
xchg
jb
mov
outsl
bound
fwait
fs
adc
roll
cmc
xchg
gs
mov
scas
push
or
jl
pusha
out
jg
mov
pop
xor
daa
sarb
fldcw
xor
add
int3
out
jbe
jmp
mov
pop
xlat
in
test
dec
outsb
aam
mov
xchg
dec
xor
push
mov
jo
in
rcll
daa
lods
mov
add
in
and
mov
in
iret
jbe
jge
push
ds
imul
or
outsl
daa
iret
lea
add
lds
xor
mov
mov
cmp
test
je
add
sub
aas
loope
cli
mov
sub
mov
pop
jae
test
scas
roll
psrld
push
xchg
sarl
pop
pop
dec
stc
dec
add
out
repz
into
lahf
sarb
inc
aas
adc
xchg
or
cmp
pop
dec
out
jne
adc
outsl
push
mov
fimuls
xor
sbb
lea
lea
push
jl
inc
call
sbb
sub
pop
int3
out
xchg
mov
cmp
xor
cmc
fstpl
loopne
mov
or
addr16
addr16
cli
dec
or
and
mov
xchg
jnp
inc
and
push
into
mov
test
pop
add
ret
je
mov
aad
push
insl
jns
mov
not
inc
mov
mov
lea
call
cmpb
movw
pusha
pusha
call
jne
gs
xor
fs
insb
add
or
add
call
mov
pushl
popl
pushf
pushl
movb
mov
pushl
ret
pusha
push
mov
push
lea
jmp
pushf
call
outsb
popa
push
cmp
test
jmp
ss
add
cmp
inc
cmp
test
add
lret
mov
adc
aam
mov
xchg
jo
push
clc
out
fbld
cld
xor
leave
subl
adc
mov
xchg
ja
testb
mov
test
insl
loop
jl
adc
jb
jecxz
xor
aaa
or
lock
push
jmp
test
pop
dec
outsl
push
mov
jmp
dec
cmp
fidivrl
mov
aad
mov
lea
add
xchg
mov
and
xor
fwait
mov
int
mov
daa
rol
clc
xchg
gs
sti
movsl
cwtl
dec
mov
sti
sahf
insb
jle
dec
aas
dec
pop
stos
dec
xor
nop
xor
mov
sub
jp
int3
in
mov
xchg
pusha
ss
mov
dec
mov
push
shr
mov
adc
dec
sub
xchg
add
dec
mov
std
pop
mov
lcall
mov
add
jb
gs
xor
cs
insb
add
or
fnstcw
xchg
sbb
add
xor
ljmp
ja
and
jge
dec
outsb
nop
mov
mov
mov
jae
add
shll
mov
fnstcw
jecxz
es
outsl
xchg
aas
or
xchg
adc
cmp
je
imull
popa
sub
repz
sarb
mov
xchg
pop
sbb
mov
ficompl
mov
gs
scas
pcmpeqd
mov
fcoms
mov
les
xor
push
cld
popf
shrl
out
add
sbb
lcall
in
inc
call
movsl
dec
sub
lahf
push
push
lods
cwtl
cmp
aad
lcall
add
sub
daa
dec
mov
jno
rorb
or
pop
andl
rclb
fildl
or
pop
pop
mov
fadd
push
add
and
or
mov
inc
in
mov
jmp
mov
cmpsl
dec
sbb
inc
push
idivl
cmp
jl
aaa
fdivr
mov
pop
shll
out
xlat
ret
std
mov
popa
sbb
dec
es
dec
out
adc
iret
ljmp
ret
add
leave
jno
je
fidivl
insl
leave
fldl
fsubrp
mov
add
dec
repz
call
xchg
stc
add
gs
add
loopne
test
and
in
scas
push
cmp
movsb
stos
fdivrs
jne
mov
clc
jmp
cs
add
ret
cmpsl
lcall
lock
mov
andb
lret
xor
shll
inc
inc
iret
push
sub
mov
out
fnstcw
sbb
movsl
pop
jle
xor
andl
lcall
std
pushf
push
xor
add
sahf
add
popa
mov
scas
in
ret
pop
inc
lea
adc
xchg
mov
sub
in
dec
stos
into
ror
mov
jns
dec
push
andl
inc
fs
mov
ds
sbb
pusha
xchg
addr16
rcl
and
adcb
xchg
outsb
sub
cmp
cmp
sbb
mov
sbb
cmpsl
lods
xchg
xor
or
mov
lret
jecxz
pop
push
xchg
andb
mov
aas
ja
xchg
and
mov
cmp
sbb
cltd
cli
pop
inc
and
sbb
addr16
adc
jecxz
sub
and
xlat
mov
shlb
shll
inc
push
hlt
dec
push
lahf
inc
gs
popf
popa
push
jne
idivl
add
mov
ret
popa
push
push
pop
cld
jp
imul
push
jge
lcall
adc
pop
inc
movsb
or
rclb
mov
jne
call
add
push
jmp
or
movw
push
jmp
mov
call
xor
add
mov
cmp
or
call
aaa
push
jbe
test
outsb
xchg
test
ja
lock
add
push
xor
pushf
mov
xor
cmc
filds
and
imul
pop
aaa
push
push
clc
ret
mov
pop
ret
outsl
in
ret
out
jb
mov
mov
jns
movsb
mov
dec
je
sarb
and
cmc
dec
mov
lea
jmp
pusha
pushf
movl
pushf
movb
pushf
mov
pushf
push
pushf
pushl
ret
pusha
mov
pushf
lods
jmp
jmp
pusha
cmpb
push
pushl
lea
jne
jmp
into
ror
mov
pop
mov
pop
push
or
xor
xor
dec
outsl
jb
mov
jg
inc
imul
fiaddl
mov
dec
add
sbb
xchg
loop
cmp
dec
outsl
pop
add
pusha
inc
and
popf
hlt
int
loop
jo
sbb
repz
xor
cmp
adc
ret
jmp
xchg
ja
sbb
mov
and
jae
pusha
pushl
push
pushl
lea
jmp
lea
jno
pusha
inc
pusha
pushf
mov
lea
jmp
pushf
push
jmp
add
stc
pusha
test
mov
clc
push
clc
bt
test
jmp
mov
push
lea
jb
cmp
cmc
pushf
call
in
mov
jbe
negb
or
inc
mov
test
sbb
xchg
cmp
jb
mov
jns
cmp
add
leave
jae
xchg
stos
fidivrl
fiaddl
imul
jmp
jg
adc
dec
sub
and
jg
cmpsl
fisttpll
pop
cltd
cmp
je
movsb
in
or
dec
sub
mov
insl
cld
xchg
andb
hlt
lock
daa
cs
xor
lock
mov
icebp
cltd
cmp
or
xchg
mov
lret
jg
bound
sub
mov
mov
stos
mov
mov
push
pop
scas
dec
stos
push
icebp
cmp
cli
js
in
testl
xchg
fbld
and
xchg
js
jg
adc
xchg
aaa
mov
push
pop
dec
insl
pop
push
stos
lahf
mov
cmp
out
fsubs
std
cld
gs
jbe
ljmp
shrb
and
or
out
jg
repz
filds
repz
cmpl
xor
cli
scas
call
jns
inc
and
sub
pop
cmp
out
aam
sbb
fistps
fistps
and
cmpsb
push
into
xchg
adc
mov
add
mov
add
bswap
int3
les
mov
hlt
mov
lods
aam
sub
nop
cmp
and
sbb
ljmp
data16
cmp
or
and
jnp
mov
loopne
popa
data16
lods
aam
ljmp
jb
mov
je
ret
es
mov
xchg
lods
pusha
cmc
call
push
pusha
jmp
loope
fcmovnbe
mov
clc
sbb
jae
cmp
mov
loop
mov
outsl
bound
arpl
xchg
leave
xor
lods
cld
testb
andl
or
mov
cmc
add
mul
xchg
pop
and
lea
mov
mov
xor
std
ret
jg
xchg
xchg
mov
pop
mov
mov
jl
lods
push
fcom
jno
jecxz
pop
sub
mov
test
add
mov
push
movl
lea
jmp
bt
cmp
pusha
pushf
push
jmp
xor
sub
mov
ljmp
ljmp
push
sub
cmp
xchg
scas
jg
mov
pushf
test
arpl
leave
sti
inc
inc
sbb
repz
mov
jne
loopne
jnp
jecxz
mov
xor
or
add
or
pusha
lret
xlat
cmp
lcall
lods
adc
data16
lds
mov
adc
cltd
gs
sub
in
aam
sbb
scas
cmpsb
mov
pop
add
in
clc
pop
add
sub
cli
sarl
pop
test
filds
pop
insl
pop
jns
cli
mov
aad
mov
push
mov
aaa
popf
cwtl
aam
ljmp
jnp
loop
mov
and
lock
or
das
pop
add
lods
shlb
push
push
add
push
adc
jnp
lds
andl
pop
pop
sbb
idiv
movsl
and
sarl
mov
clc
sbb
fiaddl
pop
adc
aam
jb
dec
jmp
xchg
cmp
out
cld
sbb
mov
mov
adc
lds
movsb
inc
rcrl
dec
mov
or
jo
cmp
lcall
push
loope
pop
sub
jb
mov
mov
loope
jle
mov
jne
cmp
xchg
dec
hlt
lcall
outsl
push
cmp
inc
out
jno
cli
pop
ss
movl
pushl
pushl
push
movl
pushf
pushf
movb
pusha
lea
jmp
imul
pop
mov
int3
xchg
mov
das
popa
ds
sub
addl
negl
mull
andb
cmp
push
fidivrs
es
ret
shl
repz
adc
arpl
sub
mov
xchg
pusha
cltd
insb
lea
inc
adc
adc
sarb
scas
adc
pop
xlat
mov
inc
mov
mov
incl
pushl
pushl
push
pusha
lea
jne
cmc
pusha
mov
stc
clc
add
movb
movb
movw
movzwl
bsr
stc
bswap
shl
mov
stc
pushf
cmp
add
cmp
bt
mov
jmp
cmp
pusha
pushf
call
add
add
pop
sti
lds
add
add
add
add
add
add
add
add
filds
add
filds
add
filds
add
insb
add
movsb
insb
add
js
add
add
add
add
neg
add
push
loopne
add
loopne
add
loopne
add
loopne
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
nop
mov
rorl
repz
sub
push
mov
lock
mov
in
jne
cmpsl
lahf
jp
cmp
shlb
je
in
std
inc
sub
cwtl
out
adc
jp
mov
subl
sarb
sbb
pop
adc
scas
mov
movsb
xor
mov
sbb
xlat
jle
shll
stc
sbb
mov
inc
imul
test
test
subb
ffree
dec
xchg
cmp
cmp
ror
sub
push
sbb
out
roll
or
adc
into
dec
add
push
and
jle
push
je
pusha
jbe
inc
jg
cmp
pop
cwtl
and
scas
stos
nop
nop
popa
mov
sbb
popf
cltd
mov
push
push
sub
shrb
rcrl
ret
adc
fwait
ljmp
sub
xchg
scas
jae
cmp
repz
insl
pop
into
sub
xchg
push
stc
movsb
ror
xor
xchg
push
cmpb
sbb
negl
rcl
test
jbe
cld
sub
test
das
aas
xchg
jno
push
sahf
dec
xor
push
mov
sahf
jns
stos
xchg
and
mov
rorl
mov
jo
fisubrs
sub
subl
mov
adc
ret
mov
out
mov
stos
push
mov
mov
xor
mov
js
add
cmc
out
clc
or
ret
rorb
fdivl
jnp
xor
add
jae
mov
in
push
clc
pop
add
mov
sbb
sbb
stos
cld
jmp
mov
sbb
bound
xlat
scas
faddl
pop
lret
jnp
mov
xchg
dec
popa
and
dec
test
scas
adc
mov
popf
dec
movsb
jbe
xchg
adcl
jnp
fistpll
inc
mov
call
mov
jg
mov
pop
dec
out
mov
daa
inc
stos
sti
aad
es
imul
les
in
xchg
fwait
xor
inc
fcmovnu
call
jo
movsl
add
cmp
mul
popf
scas
rcrb
pmuludq
add
scas
test
movsl
push
dec
mov
adc
add
andl
shlb
push
aam
nopl
insb
mov
mov
and
int
cmpsl
jne
push
push
ret
inc
and
ss
sub
inc
dec
ret
dec
cmp
mov
xchg
repz
aad
pop
popa
insb
adc
or
test
adc
or
dec
loope
mov
pusha
jo
mov
pop
mov
xor
adc
int3
rcll
sub
mov
xchg
cltd
add
pop
xor
or
mov
stos
or
out
mov
inc
add
inc
mov
aaa
popa
sbb
jbe
fidivs
repz
dec
mov
testb
inc
loope
xchg
das
shll
jecxz
ljmp
fcoms
fs
xchg
mov
xor
add
shlb
jle
insl
adc
repz
jns
pop
fwait
nop
cltd
mov
mov
jp
ret
sub
jg
bound
orl
mov
add
int
inc
ja
shlb
arpl
jecxz
mov
xchg
out
int3
or
addb
scas
sbb
push
js
lret
xor
add
mov
mov
jae,pt
push
xlat
int
int3
int3
movsb
or
mov
test
mov
add
adc
lret
scas
adc
pop
sahf
sub
jmp
cmp
mov
loop
mov
loop
mov
jp
sub
xor
and
cmp
mov
pop
dec
std
inc
dec
adc
adc
xchg
pop
lods
mov
loope
sbb
sbb
fldl
add
and
add
mov
push
sub
ret
push
test
cmp
jnp
rclb
xchg
add
lea
xchg
adc
aaa
xorl
pushf
push
add
push
in
inc
and
lret
call
pop
loope
adc
mov
sbb
sub
in
mov
jp
loopne
or
aaa
imul
adc
sub
js
jmp
xchg
jle
mov
sarb
push
adc
loopne
mov
imul
jae
dec
pop
or
popa
push
mov
mov
popa
add
gs
stc
aad
mov
xchg
cltd
mov
xchg
cmp
rorb
dec
inc
push
inc
cmp
push
decl
mov
out
xchg
popa
pop
or
push
rcll
mov
les
fdivrp
jne
mov
in
or
mov
bound
fdivrs
mov
decl
popa
jne
pop
push
iret
shll
mov
cmpsl
lods
or
jle
ds
cmp
popa
out
cltd
add
and
jno
outsb
scas
cli
das
add
xchg
loope
mov
and
or
aas
mov
rorb
add
push
mov
mov
mov
mov
inc
add
cmc
sbbb
mov
aam
or
js
sub
aaa
dec
fnstcw
xor
mov
pop
call
lods
jne
push
and
sbb
daa
push
fistl
ret
int3
pop
xchg
cltd
push
stos
lods
push
mov
insb
xchg
cmpsb
cmp
hlt
gs
in
add
adc
jge
int3
outsb
pmaxub
mov
jno
repnz
out
aaa
and
mov
bound
nop
cs
enter
pop
popf
cs
es
mov
popf
push
test
sbbl
mov
adc
mov
stos
imul
inc
dec
cmp
adc
insl
xchg
stos
bound
lahf
cmpsl
add
andl
cmp
rorl
push
adc
push
int3
shl
adc
js
add
roll
addr16
iret
jns
or
jle
ss
cli
adc
xor
sahf
xchg
dec
mov
sti
add
das
std
xchg
dec
and
dec
jbe
push
shll
jge
clc
inc
fsubs
movsl
dec
dec
mov
jne
ss
shlb
mov
and
sub
push
mov
mov
push
aad
aaa
divl
das
shrb
mov
clc
je
xor
xchg
imul
pop
jg
imul
and
pop
insb
pop
bound
inc
cmpl
mov
or
xchg
sti
daa
jae
mov
mov
jno
stos
imul
test
fsubs
fimull
pop
pop
aam
ja
lret
push
ljmp
outsl
pop
cmp
ljmp
mov
mov
or
mov
pop
mov
scas
std
inc
testl
mov
mov
daa
push
dec
sahf
xor
mov
or
inc
push
pmullw
loop
dec
cltd
call
call
cli
cmp
movb
stc
and
mov
cmc
sbbl
push
test
aam
push
in
sbb
sbb
push
bound
stos
adc
fwait
push
xchg
dec
cmc
sbb
std
icebp
xlat
xchg
sahf
cmp
inc
daa
mov
mov
lods
xor
in
inc
mov
addr16
icebp
mov
nop
add
or
loope
or
adcb
jl
arpl
jle
in
faddl
and
pop
mov
test
repnz
sbb
sub
mov
jo
stc
pop
loope
pusha
hlt
imul
sub
xor
testb
test
or
mov
ret
jg
fistl
test
xlat
repnz
mov
ret
mov
ret
icebp
adc
or
or
mov
inc
fdivs
xor
add
mov
jp
rclb
mov
addl
jo
mov
pop
sbb
cs
xlat
test
in
mov
xchg
test
stos
sbb
sbb
sti
or
insb
or
mov
xchg
pop
xor
into
dec
pop
dec
mov
adc
mov
jecxz
aad
ret
sub
in
loopne
push
dec
push
ja
push
mov
or
repz
adc
jnp
sub
imul
sti
sahf
int3
push
or
shl
rol
and
movsl
xchg
sub
mov
fsubp
push
sub
cmp
mov
lcall
in
xor
xchg
iret
mov
cwtl
mov
dec
stos
or
dec
and
adc
mov
inc
fcompl
in
js
loope
nop
jo
mov
loop
rorl
dec
push
push
loope
jbe
dec
popa
out
sarb
data16
or
ja
popa
fldl2t
inc
test
clc
fdivrl
mov
push
push
shl
ret
sahf
stos
pop
inc
xchg
sub
je
jle
popa
shll
mov
test
mov
cld
stos
adc
xadd
and
insb
sub
loop
push
cwtl
dec
int3
push
cmp
lea
push
add
sub
repnz
testb
sahf
lcall
add
pushl
add
xor
mov
out
daa
add
ds
or
add
stos
xlat
mov
xorl
icebp
loop
cld
mov
dec
and
dec
inc
or
jne
dec
sub
push
addl
jp
cmpb
mov
xor
fdivs
aam
mov
mov
fldt
mov
jnp
pop
inc
iret
push
into
shlb
adcb
lea
sbb
jp
je
and
push
jle
sti
dec
mov
cmp
push
cmp
ds
cwtl
ds
popf
mov
je
fdiv
mov
aam
stos
pop
or
adcl
stos
or
dec
cmp
xchg
loop
jo
sbb
jp
mov
imull
or
pusha
movsb
ret
subl
fdivr
into
outsl
mov
test
or
cmpsb
popf
mov
xchg
and
aas
add
out
fmull
xor
cmp
pop
fmuls
int
sbb
xchg
js
xchg
pop
cmp
jne
or
negb
cmp
sbb
popa
fsubp
inc
popf
lret
aas
push
mov
outsl
push
adc
adc
aam
cmc
fcoms
iret
xchg
lret
lock
pop
or
imul
pushf
mov
scas
repz
push
inc
popf
jg
ja
jl
sbb
xor
pushf
xor
adc
inc
lret
lcall
adc
test
cmpb
pop
rcrl
pop
test
xchg
out
into
xorb
ds
aam
sbb
cmpsl
test
lahf
fdiv
or
fisttpll
insl
outsl
outsb
cs
insb
add
add
xor
xor
repz
mov
insb
adc
push
sbb
js
add
aam
neg
xchg
pop
mov
mov
mov
add
mov
jp
push
add
or
mov
in
movsl
int
fstpt
xor
cwtl
jge
mov
in
in
dec
and
mov
ret
xor
jge
vmovddup
idivb
sub
fnstenv
mov
mov
or
enter
mov
sub
aas
adc
std
movsb
mov
dec
pop
sbbb
adc
jns
push
ljmp
adc
fcompl
cmpsl
mov
lret
jns
in
sbb
pusha
aaa
pusha
imul
jmp
call
call
pusha
movl
pusha
call
inc
xor
sarl
sbb
mov
ja
ret
cmp
cli
imul
imul
shrl
xchg
push
mov
jecxz
sarb
iret
sub
pop
push
stc
pop
xor
int
das
stos
stc
jge
mov
pushf
pop
add
test
xchg
dec
insl
aaa
lods
sbb
shll
sub
cmp
xchg
lret
sti
jns
inc
stos
out
rol
ret
imulb
out
push
pop
rorl
pop
add
enter
xor
adc
xor
xor
setae
xchg
mov
jg
dec
out
adc
faddp
daa
in
cli
and
aad
testb
lahf
jmp
fildll
icebp
aam
and
jo
lea
subb
cmp
js
cmp
in
xor
cld
push
inc
in
dec
lods
push
pop
sarb
or
mov
or
mov
das
or
inc
inc
imul
mov
xchg
fildll
xchg
xor
pushf
mov
jae
push
js
orb
mov
jnp
dec
in
rol
push
sub
adc
or
lea
es
xlat
das
mov
adc
push
push
leave
out
push
cmp
mov
sbb
fists
iret
jno
cmp
push
shrb
cli
mov
aas
dec
pop
mov
cmp
insb
popl
aas
loope
push
or
notl
fcompl
lea
dec
pushf
or
xor
faddp
test
repnz
aas
mov
mov
arpl
xchg
mov
lea
sub
shr
mov
rol
mov
stc
bt
mov
jmp
add
pushl
pushf
push
lea
jmp
inc
cmp
mov
js
les
xor
and
enter
mov
xchg
les
sbb
push
je
mov
jno
add
test
or
push
cli
fstl
shl
pop
ret
xchg
push
cli
mov
jecxz
and
mov
mov
test
pop
dec
jo
add
cmp
pop
xlat
mov
out
dec
or
add
mov
and
jo
mov
mov
leave
lock
inc
nop
mov
incb
movb
call
sub
neg
mov
cmp
dec
or
cmc
add
pushf
mov
bt
pusha
pusha
cmp
test
pushf
push
lea
je
clc
pusha
bt
sub
add
js
bt
stc
cmp
jb
pushf
push
pusha
lea
ja
push
call
cmp
mov
mov
jle
dec
push
cmp
loopne
cmp
push
mov
in
adc
dec
push
or
inc
imul
inc
fiadds
notb
test
cmp
add
jg
xor
mov
and
lcall
rol
jmp
das
push
xor
cmp
jno
dec
aas
mov
sub
mov
mov
add
cmc
jae
cmp
xchg
mov
inc
pop
les
and
repz
filds
xor
mov
sub
push
aaa
movsb
dec
icebp
stos
inc
adc
pop
aas
out
jae
clc
push
aad
xlat
scas
push
test
cli
xor
scas
xchg
jbe
adc
jecxz
test
push
fisttps
dec
fdivrl
das
fcmovu
test
push
mov
negb
mov
sbb
xor
loop
inc
out
negl
sub
fwait
jge
mov
fmuls
push
mov
lea
je
cmp
cmc
add
pushf
pusha
push
push
lea
jmp
shr
bts
clc
mov
stc
bt
cmc
pushf
cmpb
call
push
dec
dec
mov
lret
jae
aas
lea
aad
sbb
loope
out
arpl
mov
push
jae
jb
popa
dec
ljmp
jbe
lds
inc
icebp
in
mov
push
aam
out
cmp
cmp
cmp
push
inc
dec
jb
pushf
dec
mov
pop
repnz
rorb
xchg
push
xor
jmp
jge
dec
xor
xchg
xchg
sub
cli
std
mov
jbe
mov
mov
mov
aam
push
cmp
mov
shl
and
jo
cmp
stos
int3
mov
adc
out
sbb
inc
mov
test
icebp
mov
subl
sub
xchg
cli
jp
dec
adc
cld
mov
xor
ds
out
insb
push
ss
andb
and
enter
outsb
cmp
jmp
jmp
push
movl
movb
mov
mov
pushl
lea
jmp
call
sar
add
sbb
mov
call
bt
push
shr
mov
cmc
cmpb
jmp
mov
pusha
push
mov
lea
call
pushf
call
mov
push
lea
je
jmp
addr16
popa
mov
push
jne
inc
out
mov
jle
lds
leave
andl
add
insb
xchg
dec
push
das
push
or
inc
ljmp
adcb
and
aas
push
ret
out
movsl
rep
into
dec
xchg
adc
and
push
xchg
push
inc
std
cld
in
jnp
xchg
mov
adc
jl
mov
jle
xchg
mov
repz
mov
repz
mov
scas
push
jge
xchg
xchg
mov
mov
inc
cmpsb
mov
das
xchg
pusha
lea
movsbw
stc
sub
bsf
neg
push
add
rcr
bts
push
inc
bsr
aaa
push
cwtl
push
test
pusha
sub
cmp
mov
movb
stc
test
pushf
test
lea
jbe
pusha
lea
je
cmc
mov
bsr
add
movzbw
ror
mov
pusha
cmc
test
call
setg
shr
mov
bt
pushf
jmp
pushl
cmc
mov
pushl
jmp
mov
lea
jbe
shr
sub
movsbw
shl
mov
mov
neg
stc
sub
btr
mov
bsf
movzbw
add
ror
dec
shr
adc
pushf
mov
btr
sbb
pop
call
bsr
mov
push
cmp
rcl
mov
ror
push
pusha
inc
bsr
mov
movl
mov
inc
test
clc
sub
mov
shr
mov
xchg
dec
mov
rol
mov
pusha
movsbw
mov
jmp
cmc
sub
mov
and
out
adc
lret
mov
in
xlat
sti
cmc
cmp
adc
lods
sbb
xor
xor
inc
bound
pop
sahf
jnp
fsubrl
pop
enter
xlat
xor
hlt
mov
popa
ret
sbb
jb
mov
scas
outsl
xor
push
inc
aad
in
shl
mov
jmp
xor
or
iret
push
mov
in
xlat
jl
mov
or
add
push
lea
ja
push
stc
bt
imul
jmp
cmc
call
rol
lret
mov
cmp
outsb
in
xchg
pushl
add
cmc
lock
mov
push
jnp
lahf
cli
mov
mov
in
pop
pushf
nop
xchg
cmp
mov
or
jno
cmp
push
cmp
cwtl
mov
xor
or
sbb
cmc
lcall
in
mov
mov
mov
dec
mov
mov
push
mov
jno
ds
add
arpl
cmp
cmpsl
jne
clc
shll
das
pop
std
pop
ret
out
shll
movzbl
movsbw
pop
jmp
test
cmpb
pushf
mov
jmp
cmp
pushl
call
push
pushf
movl
pusha
jmp
jecxz
mov
mov
dec
jo
mov
out
xchg
mov
add
dec
arpl
xor
lcall
sbb
adc
test
xchg
out
lret
ss
stos
fistps
xchg
mov
sti
sbb
andl
jb
test
loope
jbe
cli
ret
outsl
dec
mov
nop
cmp
jl
cmp
ficoms
mov
jae
into
call
fadds
or
mov
in
sbb
jmp
xor
test
add
clc
cmc
pusha
mov
cmc
pushf
add
jne
clc
test
push
lea
je
pushf
cmc
test
add
sub
bt
cmp
jmp
push
adc
mov
xor
push
sti
popf
mov
aad
sarl
enter
mov
in
mov
aas
in
lret
push
mov
mov
sub
inc
lret
sbb
repnz
mov
xchg
mov
sbb
addr16
xor
dec
filds
out
andl
push
imul
mov
ja
mov
xchg
mov
rcrb
jge
cmp
out
jns
dec
out
xor
ret
ljmp
movsb
dec
sbb
hlt
out
loop
jmp
jle
mov
cmp
add
into
dec
xor
pop
les
lret
ret
mov
jne
or
xor
shl
add
aam
rol
mov
add
not
add
shr
mov
bt
pushf
jmp
push
push
mov
lea
ja
jmp
pushf
jmp
mov
lea
jb
jmp
jmp
lea
jbe
bsf
mov
movsbl
add
stc
mov
dec
sar
bsf
add
inc
and
movl
bswap
bsr
ror
mov
clc
cmp
pushf
lea
jbe
pusha
bsr
sub
ror
shr
mov
lea
pusha
ror
mov
pusha
test
not
bswap
add
xadd
and
shr
xor
lea
jae
rcr
mov
dec
add
movzbl
push
push
not
mov
lea
call
lea
jae
pushf
movl
pushf
lea
jmp
scas
mov
shlb
inc
imul
fsqrt
sahf
inc
gs
sub
out
jmp
xor
mov
fimull
pop
dec
jmp
ss
aad
data16
lret
jne
jbe
add
pop
or
in
mov
jl
push
orl
sti
sti
pop
cmpsb
cmpsl
rorb
lods
loopne
adc
aad
orl
jae
cmp
add
push
sbb
pop
pop
gs
in
lea
cs
jbe
mov
xor
faddl
push
test
push
mov
and
mov
jbe
cmp
cmpsl
int
sbb
sub
popf
shl
insl
adcb
mov
xchg
pcmpeqb
mov
push
add
inc
shrl
adc
popf
cmpb
add
push
pusha
mov
lea
jmp
pusha
push
mov
pushf
mov
lea
call
call
test
xor
cwtl
mov
je
mov
jnp
shlb
out
adc
stc
mov
sbb
fldl
and
subb
lds
stc
mov
adc
mov
shlb
cmc
fdivrl
aaa
mov
fwait
xchg
push
inc
dec
mov
xor
pop
lods
dec
jb
mov
scas
adc
xor
push
outsb
scas
addr16
es
mov
divb
cltd
mov
dec
xchg
add
push
lahf
fsubrl
iret
push
cwtl
dec
in
mov
sbb
mov
ljmp
jbe
fistpl
pop
mov
ficompl
push
mov
sarb
sub
outsb
shlb
das
adc
out
mov
jno
mov
ljmp
inc
mov
xor
mov
into
jbe
or
xlat
jge
inc
push
mov
jns
add
xchg
add
pop
jae
cld
mov
and
loope
cmc
inc
mov
pop
std
lret
ss
dec
icebp
in
mov
jnp
loopne
shrb
aaa
adc
out
lret
popf
jmp
negb
cmp
jp
repnz
mov
stos
dec
push
sub
xor
mov
cmp
sbb
loop
push
scas
mov
mov
lods
mov
mov
js
dec
dec
scas
dec
js
inc
outsb
sbb
xor
or
shll
adc
cmp
mov
inc
push
or
mov
add
fiadds
in
stos
dec
pop
inc
imul
out
inc
and
sub
int3
out
lea
inc
or
fwait
jmp
test
cmp
add
dec
xor
les
cmp
mov
jmp
add
push
mov
sub
jmp
mov
mov
xor
jmp
mov
jge
inc
jmp
lret
outsl
andl
adc
popa
dec
push
cld
les
imul
xor
insb
ror
push
push
imul
aas
xor
xor
xchg
test
aad
fadd
out
lret
jo
cwtl
mov
xchg
dec
aas
xor
sub
xchg
sbbb
xchg
and
jae
shlb
ss
js
inc
test
and
inc
in
inc
dec
add
shll
dec
lock
pop
add
sarb
ds
lods
adc
mov
sarl
mov
imul
push
rcr
or
movsb
les
pop
push
adc
int3
in
stc
sahf
dec
adc
mov
adc
push
mov
gs
js
stos
into
xor
add
cmp
add
scas
xchg
je
push
aas
cmpsb
or
inc
inc
jl
jmp
pushf
push
call
add
mov
xor
shlb
pop
test
inc
or
stc
add
adc
in
das
push
ja
inc
jmp
or
inc
pop
lea
iret
fcoms
xchg
arpl
mov
sub
repnz
rcrl
jl
int
adc
aad
xor
imulb
jbe
fisubs
lret
xchg
rcl
mov
dec
out
daa
xchg
pop
scas
push
sbb
jno
lds
out
ds
push
movsb
mov
arpl
mov
out
in
mov
shrb
test
jmp
jecxz
imul
std
jb
cmp
test
mov
std
in
scas
push
sti
out
in
out
in
xchg
mov
xchg
pushf
mov
cmc
cmp
pusha
movl
repnz
pushf
jmp
bt
jmp
test
call
cmp
call
pop
loope
mov
xor
movsl
dec
outsl
xchg
mov
icebp
fnstcw
and
push
aaa
pop
sub
lock
xchg
mov
je
lods
inc
gs
pop
jb
ja
ret
pop
cwtl
mov
sarl
mov
adc
add
inc
jns
xchg
and
mov
lds
sub
daa
mov
sub
mov
cmp
adcl
cmp
sar
mov
sbb
push
push
mov
in
clc
push
in
lcall
cltd
ds
mov
shrb
adcb
subb
push
jns
sbb
fmul
orb
shll
inc
test
pusha
and
push
out
add
or
cmpsb
lret
in
int
lahf
sbb
scas
pop
cmp
test
hlt
cltd
mov
jne
in
cmp
xchg
jmp
xor
test
pop
enter
mov
add
icebp
dec
popa
shlb
mov
mov
cs
push
adc
ljmp
cmp
repz
stos
repz
mov
mov
int3
mov
rcrb
mov
xor
jge
mov
sbb
xor
lock
add
rorb
and
cld
sbb
xchg
cmc
fadds
push
imul
xchg
int
mov
cmp
mov
les
cmp
sub
sar
lea
jmp
pushf
lea
jne
not
bswap
movb
lahf
push
cwtl
call
add
pusha
jmp
ja
shl
cmc
sub
or
dec
sbb
add
shl
mov
shl
mov
push
stc
repnz
pusha
lea
jne
movsbl
pushf
movzbw
movb
movsbw
mov
jmp
mov
bswap
lea
pusha
movl
mov
pusha
call
loopne
fisubrl
iret
jbe
inc
out
xor
pop
inc
arpl
or
flds
test
aaa
stos
cmc
stc
adc
popf
out
mov
mov
mov
imul
mov
fadd
movsb
push
out
xor
add
lret
and
cmpsl
aaa
mov
pop
testb
jp
ret
imul
dec
xor
shll
or
dec
xor
sbb
and
lods
push
dec
push
cli
cltd
mov
push
psubd
les
gs
push
lea
push
shr
ja
out
push
add
push
cld
inc
in
add
es
cld
lcall
lods
daa
jmp
pop
jno
ret
sub
mov
xor
jl
aas
stos
bound
insl
insb
daa
lods
push
sbb
js
aam
push
jg
jecxz
lods
adc
fnstcw
sbb
hlt
stc
movb
pusha
lods
test
call
test
cmp
jmp
dec
inc
inc
lods
mov
in
lods
lea
dec
inc
roll
sub
adc
daa
lret
mov
out
popl
fs
xlat
ret
insl
test
clc
mov
sbb
insl
fiaddl
and
jb
fs
or
pop
add
leave
mov
mov
jo
dec
movb
cmp
inc
and
bound
ss
lds
mulps
loop
ret
pop
adc
rcrl
or
push
js
add
rol
dec
jp
jp
imull
pop
xor
add
loop
inc
jecxz
pop
jb
push
pop
fisubrs
lods
lds
mov
jp
adc
xor
adc
subl
cmp
sti
dec
mov
xchg
dec
in
adc
lods
and
pusha
mov
dec
cmc
pop
lods
ljmp
cmp
pop
sub
jge
fmul
in
mov
int
imul
sub
mov
mov
mov
push
adc
inc
mov
aas
mov
adc
jnp
cmp
rcrb
add
hlt
add
popl
dec
in
xchg
jp
fwait
imul
sub
push
leave
xchg
test
mov
mov
ss
add
mov
mov
adc
fcmovbe
movl
pushf
pusha
pushf
pushl
popl
movb
push
pushl
ret
jmp
pop
stos
mov
subl
repz
cwtl
mov
scas
cmc
lods
push
imul
out
xor
push
iret
into
ret
or
cs
jns
ret
int
cli
dec
bound
bound
mov
scas
fiadds
add
ds
in
adc
mov
or
or
dec
xor
adc
gs
bound
pop
aas
xor
push
or
dec
jbe
mov
hlt
andb
sbb
sahf
inc
stc
popf
imul
stos
scas
or
inc
inc
loopew
inc
mov
or
xor
xorb
mov
shrl
je
nop
dec
imul
lea
pushf
cmp
out
rorb
mov
and
xlat
jnp
add
stc
ja
inc
sbb
mov
adc
es
test
fs
movzbl
pop
pushf
bswap
mov
mov
pushf
pusha
mov
pushf
pushl
ret
xor
stos
mov
shl
push
ret
xor
pop
inc
mov
mov
loopne
jl
and
sbb
shll
andl
addl
xor
lods
and
ljmp
dec
fs
ret
movsl
dec
jge
dec
out
or
cld
loop
sub
mov
dec
add
jecxz
mov
out
or
add
ja
cmp
or
in
sub
jbe
out
sub
in
add
pop
insb
adc
dec
xchg
sti
inc
insl
sbb
movsb
bound
stos
cld
notb
inc
jns
dec
lods
hlt
push
rolb
adc
cmp
lahf
add
push
out
cmc
adc
popf
inc
arpl
adc
filds
mov
mov
add
xor
xor
lahf
inc
call
pushf
inc
addr16
mov
addr16
test
inc
jecxz
loop
popa
dec
fsubs
scas
or
xlat
out
or
jg
loope
sbb
push
xchg
test
push
add
push
fwait
jg
adc
pop
ss
xor
mov
loope
int3
inc
outsb
clc
push
ljmp
adc
mov
ret
sub
push
inc
inc
sbb
jbe
inc
dec
or
add
pop
cmp
test
cs
stos
push
xor
leave
add
sbb
rcrl
mov
popa
or
aaa
inc
dec
hlt
int3
xchg
in
dec
push
cmp
xlat
std
data16
inc
lcall
popa
scas
adc
or
mov
mov
int3
adc
clc
ficoml
pop
push
ja
das
lcall
shlb
test
subl
mov
xor
jecxz
jnp
sub
cs
jne
ds
cli
clc
loop
adc
cmpsl
lret
sbb
scas
movb
lea
jne
mov
sar
rcl
sbb
mov
dec
sub
bswap
shl
bsf
shl
mov
jmp
xor
add
hlt
sbb
sbb
add
sub
test
mov
int
sbb
in
fwait
lods
dec
imul
inc
ret
lock
rcrl
cmp
movsl
mov
in
fistps
sub
xor
xchg
xchg
gs
stc
adc
push
pusha
movsl
cs
in
sbb
jl
xchg
xchg
daa
xlat
lods
cmp
mov
or
shrl
mov
adc
fsts
lahf
xchg
into
ss
arpl
fisttpl
scas
xchg
jns
xchg
popa
push
push
jge
les
sahf
push
icebp
pop
mov
mov
jnp
sbb
jne
shl
xor
jp
inc
call
das
push
dec
insb
xor
aam
mov
outsl
pop
fldt
loope
sub
imul
jmp
shll
cltd
pusha
sbbb
jecxz
sbb
xor
jp
test
and
pop
push
pop
lods
test
in
mov
cwtl
aas
mov
psllq
shlb
jne
cmp
psllw
btr
jmp
pushf
mov
bt
bt
xor
lea
cmc
clc
jmp
bound
cmpsb
mov
sahf
shl
sub
jno
mov
shrb
lret
lret
mov
mov
es
sbb
cmc
sub
nop
mov
sub
mov
pop
dec
xor
fimull
and
iret
xchg
or
jle
out
jge
adc
aad
and
repz
inc
test
push
push
stc
fistps
in
add
pop
jmp
pop
push
push
cmpsb
mov
jne
cmp
sub
hlt
sbb
fs
mov
ljmp
xchg
or
dec
inc
dec
mov
mov
gs
repnz
imul
push
mov
gs
aas
jmp
push
push
mov
cld
sbb
dec
mov
rol
cmp
mov
mov
ljmp
xor
not
mov
push
or
and
fs
js
dec
mov
scas
mov
js
scas
inc
lods
mov
scas
scas
inc
js
mov
lods
scas
mov
js
scas
js
mov
js
inc
scas
mov
lods
mov
mov
lods
mov
dec
mov
dec
sbb
push
movsl
mov
push
jbe
mov
loope
xchg
pop
inc
inc
in
rol
pop
out
adc
pusha
test
adc
inc
mov
shl
xorl
in
jp
jns
jg
nop
xor
pop
js
inc
movsb
jb
das
mov
adc
call
sbb
imul
pop
repnz
xor
lock
pop
out
mov
filds
repz
pop
sub
idiv
sahf
inc
aaa
frstor
insb
adc
sub
std
dec
sub
push
adc
jno
subl
inc
mov
jle
dec
pop
gs
aam
stc
mov
jmp
lds
mov
cwtl
xchg
negl
in
add
icebp
insl
mov
fists
movl
stc
popf
ret
pusha
or
das
gs
adc
jmp
dec
ljmp
cld
loop
scas
jbe
imul
dec
repz
mov
movsb
mov
and
imul
icebp
nop
dec
stos
ret
imul
jae
pop
repnz
and
insl
sbb
jmp
ficompl
pop
sarb
out
fdivr
test
mov
pop
outsb
pop
add
negb
inc
call
jnp
sub
add
sahf
jg
dec
cs
cmp
pusha
pusha
call
mov
mov
pushf
pushl
ret
pushf
pushf
pusha
mov
pushf
pushl
ret
shr
movb
jmp
adc
movl
push
lea
jmp
call
pop
and
mov
aas
loop
sub
in
adc
scas
loop
sub
aaa
enter
xchg
popf
mov
dec
adc
stos
cld
lcall
cld
test
in
push
mov
pop
fadds
test
mov
pop
test
leave
xchg
pop
pop
inc
rcl
jl
push
jecxz
jns
into
je
sar
faddl
push
call
out
push
cmp
sub
dec
jno
mov
rcl
mov
dec
push
ret
fwait
mov
xchg
push
rcrb
test
xchg
in
scas
aam
lcall
jmp
ret
je
shlb
out
push
icebp
cmp
cmc
cmp
cmp
cltd
push
cli
mov
jmp
pop
or
daa
lods
sbbb
in
pushf
ds
mov
adc
icebp
out
movsb
cmp
aad
jno
cmpsl
arpl
pop
jns
cltd
cwtl
cmpl
sahf
cltd
mov
pop
mov
xor
jmp
cmpsl
or
popf
dec
sub
mov
push
mov
cld
push
cwtl
ds
aad
inc
nop
cmp
mov
outsl
std
cld
mov
jne
push
cmpsl
adc
loop
sti
sahf
xchg
sbb
mov
pop
sti
out
imul
xchg
mov
into
je
sti
loop
sub
push
xor
add
pop
push
sbb
jbe
popa
in
push
and
sbb
pop
andb
cmp
hlt
push
dec
aaa
mov
sbbl
add
jp
push
and
mov
into
mov
lcall
pushl
xor
push
scas
pop
hlt
lds
repz
clc
and
xor
arpl
mov
jbe
ljmp
inc
loopne
cld
jmp
popa
dec
sub
cld
lret
sbb
out
not
bswap
lea
lea
movsbw
jmp
lret
add
mov
cld
fdiv
sbb
inc
mov
mov
lahf
addr16
xchg
inc
call
sbb
clc
mov
pop
push
mov
ficoms
xor
cmp
pusha
or
xchg
mov
jl
jmp
pushf
ret
addr16
mov
jl
dec
lods
mov
aaa
std
xchg
nop
stc
sub
scas
adc
jmp
gs
mov
das
push
clc
cltd
inc
test
jmp
mov
xor
clc
mov
lret
repz
dec
insl
xchg
xor
xchg
lret
jno
mov
iret
jl
push
mov
push
ss
fnstenv
dec
lea
cli
jbe
mov
xor
and
insl
aad
pop
int
insl
adc
push
and
lea
jne
not
movb
lahf
push
lea
push
pushl
lea
push
movl
call
mov
xor
jb
aas
loop
daa
dec
jb
aas
std
lods
fcomi
push
loop
xchg
mov
add
xor
rolb
mov
inc
lods
mov
cmpsl
dec
add
dec
xor
js
inc
daa
or
cltd
mov
sahf
inc
daa
or
lea
je
clc
sub
pushf
stc
stc
cmc
cmp
pushf
lea
jmp
jmp
cmp
cmp
push
movb
mov
call
mov
xor
push
cmp
subl
push
in
push
cld
divb
mov
mov
dec
mov
adc
fsubs
inc
push
stc
pop
dec
mov
in
mov
adc
add
hlt
xor
mov
call
ds
mov
lods
int
jns
jbe
sti
popf
nop
push
stos
sub
cmp
sub
aaa
mov
test
sarb
imul
call
call
pushf
push
mov
jmp
jmp
mov
jmp
movsbw
bswap
mov
pushl
pushf
lea
jmp
lea
je
pushf
pushf
lea
je
clc
cmc
test
stc
cmp
pusha
lea
je
pusha
movb
push
pushf
lea
jmp
pushf
pushf
pushf
movl
movb
pusha
movl
push
movb
lea
jmp
cmp
call
neg
pusha
stc
stc
add
push
stc
call
push
mov
jmp
lea
ja
cmp
add
push
pusha
mov
cmp
or
lea
jl
pushf
lea
je
call
push
pushf
movl
pusha
lea
jmp
mov
jmp
neg
not
mov
test
stc
cmc
cmp
pusha
push
jmp
push
movb
movl
jmp
jmp
cmpb
jmp
jmp
clc
add
sub
bt
bt
add
jns
pusha
push
pusha
dec
call
lea
ja
rcl
sub
shl
add
add
movzbw
sub
mov
push
not
clc
xor
mov
call
pop
lea
jmp
cmc
test
test
push
lea
je
test
jmp
lea
ret
add
add
call
mov
pusha
pushf
lea
jmp
repnz
pusha
pushf
lea
jne
btc
not
movzbl
sar
mov
rol
shld
sub
call
movb
call
clc
add
cmc
cmp
mov
not
bts
mov
call
add
rcrl
dec
jmp
mov
cld
and
adc
push
cmp
cmp
push
adc
cmpsl
jno
shlb
lahf
imul
sarl
outsb
movsb
in
jp
dec
cmp
or
test
cld
addr16
js
cmp
xchg
and
xor
or
sbb
cmc
fld
and
jae
fs
inc
adc
jbe
add
add
clc
inc
lea
jne
neg
xor
bsr
mov
sar
rol
add
cmp
shl
not
mov
jmp
call
bt
stc
cmp
pushl
jmp
enter
mov
out
mov
or
cmpl
mov
imul
loopne
cmpsl
dec
stos
out
sbb
mov
dec
bound
pop
hlt
dec
pop
mov
sbb
das
pop
ret
lahf
cs
mov
xchg
mov
mov
incb
pop
xchg
jl
jecxz
scas
dec
xchg
jae
xchg
mov
dec
repz
mov
mulb
xchg
lods
daa
mov
and
xchg
or
push
aaa
pop
add
mov
js
and
xor
test
xor
fidivrs
dec
insb
xchg
xor
or
push
shl
call
cmc
cmp
fs
and
cli
jp
outsb
dec
inc
test
mov
data16
dec
xor
add
dec
lret
scas
xchg
notb
sub
cmp
loop
inc
dec
fwait
mov
fiadds
and
outsl
pop
mov
mov
pop
cmpl
ret
fcmovu
dec
mov
ss
aam
inc
push
ja
adc
adc
test
jg
or
insl
mov
ja
out
pop
xlat
cld
cmp
fiaddl
mov
mov
dec
repz
mov
popf
test
dec
mov
dec
inc
mov
mov
mov
fwait
mov
je
mov
aad
in
pop
mov
subl
sbb
aam
sbb
pusha
test
popa
out
in
testb
fldl
je
inc
jg
and
inc
stc
lret
test
imul
cmc
jecxz
loop
outsl
mov
mov
bound
inc
out
sti
insb
and
enter
imulb
sub
mov
xchg
shll
mov
xor
loope
cmp
pop
mov
adc
lcall
fstpt
insl
adc
mov
and
lahf
fbld
xorl
andl
hlt
out
fildl
pop
sbb
pusha
ret
jb
jle
shrl
mov
mov
andb
xchg
push
js
insl
pop
iret
jb
int
xchg
mov
cmp
in
ficomps
aad
mov
mov
pop
sahf
mov
addb
jns
insl
mov
ficoml
dec
in
adc
xchg
fwait
mov
test
cmpsl
cmpsb
jb
or
add
xchg
idiv
lahf
sbb
jno
mov
jo
xchg
cmp
nop
cmp
cmpsl
lea
cwtl
iret
mov
cmpl
imul
mov
jns
mov
popf
mov
popf
jns
pop
push
rcrb
subb
add
out
cmpsl
enter
movsb
pop
jmp
mov
jle
enter
in
lcall
cmp
xor
js
cmpb
out
test
in
mov
xchg
cli
lret
dec
ret
das
push
hlt
fwait
ret
test
out
cmc
sbb
jno
int
sub
in
dec
stos
scas
push
int3
add
cmp
mov
push
ja
mov
and
pusha
lahf
xchg
adc
dec
out
sub
in
nop
test
adc
filds
inc
pop
loopne
jecxz
sbb
sub
aaa
pop
pop
add
xchg
jns
inc
sub
cltd
inc
or
xchg
jge
lea
jbe
bsf
neg
pusha
mov
or
call
call
movw
lea
je
jmp
movzwl
test
stc
mov
cmc
clc
jmp
add
push
bt
jmp
mov
bt
test
pushl
lea
jne
call
jmp
pusha
test
test
add
call
lea
je
test
cmc
push
test
add
stc
pusha
cmp
pusha
lea
jb
test
pushf
bt
cmp
cmp
mov
movb
pushf
call
lea
je
push
pushf
mov
pushf
lea
jmp
jmp
lea
jne
setns
inc
bsf
bt
mov
clc
test
pusha
pusha
cmp
pushl
lea
ja
pushf
mov
movsbw
mov
movzbw
lea
bswap
pusha
mov
pushf
movzbl
bswap
bswap
mov
call
pusha
pushf
pusha
xchg
pushl
push
pushf
dec
clc
shl
not
lods
mov
jmp
js
push
call
xor
sub
fwait
cmp
test
subb
sub
mov
inc
mov
test
pop
ljmp
movsl
aaa
cli
xor
add
test
and
jno
inc
push
adc
pop
scas
cmp
add
cmovae
sbb
test
outsl
adc
ljmp
cmp
and
sub
subl
adc
scas
test
call
stos
sahf
movsl
xchg
mov
pop
test
push
movsl
enter
mov
popf
mov
or
cmpsb
dec
inc
scas
movsb
push
mov
into
mov
cmp
sbb
push
lock
mov
jnp
movl
pop
stos
xor
in
xchg
stc
fucom
push
pusha
push
movb
movl
jmp
call
mov
xor
sub
setge
not
lea
pushf
mov
pusha
pusha
pushf
xchg
movb
pushf
pushf
pop
mov
pushf
pushf
not
lea
call
test
clc
test
sub
cmc
call
lea
jb
pusha
cmpb
pusha
mov
pushf
movb
lea
jne
add
sbb
dec
mov
push
clc
cmc
call
pusha
movl
jmp
mov
xor
push
xchg
int3
aaa
push
jae
sub
sub
data16
add
loop
movsl
out
rorb
aad
push
aaa
pop
cmp
loope
sbb
mov
icebp
or
loopne
popa
mov
push
xor
imul
test
popa
inc
ss
sub
iret
repnz
aas
and
jmp
mov
and
les
pop
jmp
inc
mov
jmp
cmp
pushf
jmp
scas
mov
cli
and
imul
fdivr
and
fdivrs
subb
loope
jns
leave
popa
dec
xor
outsb
mov
cld
sub
cwtl
movsl
lret
pop
dec
push
leave
xchg
sti
dec
and
leave
mov
das
push
mov
clc
jbe
cmp
jnp
jnp
pushf
push
jp
jecxz
xchg
into
mov
cld
mov
jge
cwtl
fwait
mov
icebp
push
mov
ss
mov
popa
jmpw
add
stos
fsub
xchg
mov
sbb
cmp
adc
out
fisubrl
loopne
cmpsb
dec
outsl
adc
pop
test
dec
jae
jg
test
xor
push
sub
out
stos
loopne
jp
iret
mov
cli
sbb
scas
and
filds
xchg
xchg
mov
mov
mov
std
and
mov
push
pop
shll
ror
call
sarb
mov
xor
sti
popf
inc
xchg
jo
enter
mov
in
pop
mov
faddl
lret
insb
or
push
cmp
xchg
cmp
shrb
out
jo
repz
xor
fwait
jg
inc
sub
pop
xlat
mov
dec
cwtl
mov
mov
xchg
mov
pop
ret
xchg
mov
inc
mov
in
loopne
sbb
ds
jmp
sub
cmc
push
mov
pop
ficoml
pop
xorl
test
inc
mov
jle
daa
adc
lret
fdivs
lods
lods
lret
gs
add
or
sub
sbb
or
std
and
dec
and
xor
sbb
or
aam
mov
je
mov
lcall
mov
lock
movl
pushf
push
pushl
pushf
lea
jmp
push
lock
std
std
mov
pop
ret
jle
fadd
leave
lahf
int
outsl
icebp
pushf
mov
pop
mov
mov
cmpb
in
sub
lds
aam
pop
lret
add
out
and
test
or
add
outsl
adc
es
adc
xchg
push
push
lods
and
ror
sti
les
nop
enter
xlat
dec
lea
je
pushf
lea
mov
pop
xchg
movzwl
bswap
lea
bswap
jmp
clc
test
cmp
pushf
mov
jmp
test
movl
pushl
pushf
lea
je
rcl
bsr
add
shr
shld
btc
bts
mov
test
pusha
test
pusha
add
clc
mov
bsr
bswap
clc
rol
mov
pushf
cmp
push
push
call
pusha
pushf
mov
cmp
mov
pushf
movl
movw
lea
jmp
pushl
pusha
lea
je
pushf
bt
push
cmc
cmp
pushf
pusha
lea
jne
pusha
jmp
add
pushf
pushw
popfw
lea
jne
pusha
pushf
inc
call
pop
or
xchg
mov
mov
xorb
adc
ror
iret
mov
pop
adc
imul
fiadds
outsl
add
pop
add
fidivrs
in
mov
outsl
ss
ret
mov
std
mov
add
stos
sub
out
push
mov
xlat
mov
test
jmp
sub
and
xchg
aaa
pop
add
dec
jo
cmp
jmp
sub
lods
popa
jg
inc
cmp
pop
mov
loop
iret
out
stc
mov
in
mov
lret
insl
sbb
insb
or
cmp
adc
mov
jg
or
shlb
pop
mov
sbb
cmc
push
or
in
mov
cwtl
inc
sub
outsb
cld
bound
popl
mov
mov
sbb
out
xor
std
mov
aam
fdivrs
xchg
pop
arpl
pop
andb
andl
xchg
into
out
loop
fstp
dec
roll
fs
dec
xor
dec
ds
popa
mov
int
mov
add
jno
in
imul
adc
js
rcrb
inc
dec
in
emms
pop
ret
jmp
repz
dec
dec
push
and
xchg
clc
fneni(8087
movb
push
lea
je
movsbw
pushf
mov
pusha
pushf
lea
mov
not
bswap
not
lea
lea
push
push
movb
push
movl
movl
pushl
popl
push
movb
movb
pushl
ret
int3
popf
call
test
cmp
pushf
lea
ja
shl
add
sub
bsf
add
cmc
inc
mov
call
jnp
mov
add
lock
mov
in
adc
pop
pop
test
cmp
pop
in
stos
test
or
shll
sub
mov
and
loopne
jmp
xor
test
jae
mov
add
or
pop
aad
jmp
jmp
cmc
add
stc
clc
jmp
xchg
mov
movsl
outsl
adc
leave
ljmp
andl
adc
lret
or
mov
mov
popf
add
mov
jp
cmpsl
psubusw
cli
mov
cmp
cwtl
cmp
add
lret
das
xchg
jnp
aas
daa
or
pop
mov
mov
icebp
movl
pusha
push
call
cmc
test
movl
add
pushf
pusha
lea
jmp
add
test
cmp
call
add
iret
mov
pop
sub
out
xchg
xor
std
push
lds
pop
sbbl
or
mov
jg
loopne
rcll
sub
fcomps
hlt
stc
mov
add
xor
cmpsl
mov
into
xor
stc
xchg
mov
mov
adc
inc
jmp
mov
sahf
inc
movsl
mov
je
arpl
insl
pusha
icebp
jno
xor
jg
insb
adc
adc
xchg
dec
cmp
jl
jae
mov
stc
lret
bound
int
mov
inc
loopne
iret
inc
push
aam
inc
mov
push
xor
aam
lcall
lahf
sbb
push
cmpsl
enter
pop
jg
es
mov
out
xchg
mov
inc
mov
lret
in
loop
lods
ss
inc
sbb
out
pop
xor
insl
mov
dec
sbb
lock
jb
neg
mov
leave
outsb
cmp
sbb
pop
rcrl
out
icebp
adc
mov
push
xchg
push
mov
and
lea
arpl
mov
xor
pop
cmpsl
dec
inc
or
mov
push
xor
fdivrs
push
mov
sbb
cmc
push
cmp
mov
stos
in
cs
jecxz
push
dec
jmp
and
jns
stos
fisttps
repz
push
mov
in
stos
lea
dec
pop
pop
or
loopne
cltd
inc
sub
jnp
stos
stc
mov
xchg
xchg
cmp
cltd
adc
push
mov
mov
shll
push
jo
sub
mov
pushf
std
pop
push
mov
mov
jp
cmp
je
arpl
icebp
cltd
cmp
out
mov
pop
or
imul
xchg
dec
imul
fwait
jmp
popa
ret
movsb
leave
xchg
int
into
cmp
icebp
mov
loopne
inc
popa
les
or
add
gs
mov
mov
icebp
push
xor
gs
popa
addr16
outsl
js
add
add
bound
lret
sbb
fs
jmp
cwtl
push
cwtl
jmp
sahf
push
mov
insb
or
test
hlt
jmp
filds
mov
mov
imul
xor
jge
push
push
xchg
pop
imul
push
ja
scas
and
mov
pop
mov
es
into
push
push
lret
out
pop
xchg
ds
inc
and
data16
xor
mov
xchg
sub
mov
sub
pop
jp
jle
inc
pop
inc
in
into
jae
jnp
push
pop
jne
or
leave
movsb
dec
in
mov
sub
pop
scas
pop
and
pop
or
cmp
dec
jmp
inc
add
cmp
xchg
jo
fists
dec
lcall
mov
inc
stos
js
fwait
inc
xor
addl
inc
mov
sub
pop
cmp
scas
adc
fcmove
lret
imul
inc
inc
call
lea
jb
pushf
cmc
call
xchg
jmp
not
rol
mov
test
lea
pushf
add
bswap
mov
mov
mov
mov
push
pushf
lods
cmp
stc
clc
sub
test
stc
cmc
bt
xor
pushl
cmp
push
test
sub
cmp
pusha
xor
call
add
add
addb
adc
add
sbb
add
popa
pop
add
add
add
movl
pusha
lea
jmp
test
mov
cmp
call
lea
jbe
shld
mov
pusha
add
xchg
btc
mov
adc
sbb
bts
bts
add
movzbw
or
shr
movzbw
movl
add
cmp
mov
clc
test
stc
pusha
cmp
call
mov
mov
bswap
pop
push
pushl
ret
pushl
test
jmp
dec
iret
mov
mov
sub
mov
ds
inc
paddsb
sub
dec
mov
jae
cmp
es
insb
aad
cmpsb
mov
mov
xchg
mov
push
fidivrs
mov
cld
mov
mov
enter
mov
sbb
mov
int
pusha
cltd
out
rcrl
popl
inc
cmpsl
repnz
mov
xor
pop
mov
mov
push
sub
test
bt
pushl
popl
stc
cmp
jmp
add
inc
gs
outsl
fs
gs
imul
add
add
push
and
add
add
shll
add
xchg
add
sub
add
add
adc
add
add
add
add
jmp
add
sbb
add
cmpl
add
add
in
incl
cs
jle
out
xchg
mov
cli
sahf
out
out
insl
out
notb
adc
lcall
popa
dec
xchg
inc
jae
sub
fcmovnb
jmp
jno
sarl
cwtl
inc
xor
aas
pop
sub
cmp
aas
push
sbb
mov
shll
das
nop
outsl
inc
mov
push
jbe,pt
push
sti
out
fs
add
xor
xchg
lea
sti
mov
sub
push
xor
add
fadds
sti
out
cmc
mov
cmp
andb
add
push
out
xchg
outsl
popa
push
ss
cmc
imul
in
movsl
sarb
iret
push
xchg
aam
cli
mov
repz
in
divb
movsl
or
push
cmp
aaa
mov
pop
push
lea
sub
bt
sub
clc
pushl
stc
bt
bt
cmc
cmp
pusha
call
jg
jns
mov
adc
push
xor
pop
fstps
inc
push
icebp
xchg
mov
fsts
mov
lret
popa
dec
jle
loopne
sub
mov
pop
lods
lahf
lods
push
and
clc
jecxz
cmc
xor
loope
push
dec
push
cmp
inc
pop
jge
or
cmp
xor
in
jg
mov
pmuludq
and
arpl
out
mov
mov
call
or
rol
add
dec
test
push
mov
lea
je
pusha
add
jmp
fsubs
cli
mov
fcos
and
push
mov
cmp
aad
jno
sub
or
out
mov
aam
ljmp
jp
xchg
mov
ss
mov
scas
push
or
gs
lods
xchg
je
mov
aaa
mov
mov
mov
push
cwtl
lea
lea
pushf
setg
mov
pushf
lea
ja
pusha
push
pusha
lea
jb
pusha
clc
cmpb
pushf
mov
push
lea
jne
and
xor
shrd
sar
mov
bt
pusha
stc
add
pushl
pushf
call
adc
loop
mov
jge
inc
push
pop
inc
out
push
into
adc
cmp
inc
stos
push
orl
enter
sti
daa
rclb
sti
and
out
xor
xchg
or
pop
movl
addr16
scas
pushf
mov
pushf
scas
shr
adc
ds
arpl
jle
add
pop
and
pusha
mov
repnz
movsb
xchg
shlb
mov
clc
pusha
inc
xor
sub
mov
push
adc
or
subb
ljmp
xor
push
scas
sbb
ja
into
xchg
push
mov
push
push
lahf
adc
xorl
dec
cltd
cmp
sbb
xor
test
push
mov
pop
push
sbb
enter
add
lds
pushl
or
aaa
push
hlt
out
pop
mov
pop
lock
dec
cmpsb
sub
inc
in
repz
mov
jle
dec
adc
xchg
leave
adc
insb
xor
test
js
dec
mov
xchg
std
pop
aas
jno
push
popa
mov
push
push
or
push
je
aas
out
xor
divb
mov
jbe
hlt
pop
aam
popf
pop
pop
cmp
mov
jl
mov
mov
movsl
fwait
mov
es
sub
rcll
popf
jg
stos
jne
btc
shrd
mov
stc
pusha
jmp
movl
call
mov
dec
add
test
jbe
dec
and
test
inc
fimull
pop
dec
add
es
lahf
cmpsb
cmpsl
aaa
ds
roll
int
add
icebp
rclb
aad
xchg
js,pt
aas
inc
aas
cmp
testb
jns
cmc
push
in
and
pop
mov
push
pop
jmp
loopne
cmpsl
leave
les
mov
test
gs
or
cmpsl
jmp
ret
jle
out
jle
mov
testb
les
notb
push
inc
rcr
cmpsl
cltd
adc
pop
xchg
int
jno
pop
mov
out
imulb
pusha
cmpsb
fnstenv
add
cli
int3
xor
insl
sub
fisubs
nop
stos
and
nop
jo
fcmovb
mov
dec
jmp
dec
mov
mov
mov
adc
pusha
ds
mov
mov
je
or
dec
incb
sub
sbb
mov
es
rcrl
pop
enter
mov
out
int
std
push
repnz
push
shufps
adc
ljmp
or
mov
inc
jle
or
int
test
mov
jb
sbb
out
cmpsl
adc
mov
mov
mov
pop
jecxz
incb
pop
inc
into
sbb
push
cltd
out
sarb
fsub
add
jmp
testl
inc
test
jbe
add
cmp
jae
js
pop
xchg
cmpsb
pop
or
and
inc
adc
inc
rcll
test
xor
pop
inc
cmp
pop
int
test
arpl
nop
subl
shl
mov
add
mov
and
cmpsl
pusha
rorb
call
or
push
adcl
negl
enter
push
dec
nop
jle
add
testl
push
nop
aas
les
pop
mov
es
pop
mov
sbb
push
je
or
cmpsb
imull
rcl
repz
ret
xchg
push
ds
mov
xchg
mov
movsb
shr
call
int
pop
mov
test
test
je
lret
xchg
ret
xor
movsl
and
and
push
scas
adc
mov
lret
mov
sbb
add
cltd
mov
jb
fldl
mov
pop
scas
mov
sbb
pop
negb
call
lock
ss
cwtl
dec
outsb
fisubrs
ret
mov
mov
stos
ds
into
mov
cmpsl
fisubrs
inc
adc
int3
ret
inc
incb
jg
lds
xor
push
fnsave
out
out
shll
xchg
and
lcall
lock
out
mov
std
cmpsb
mov
mov
jo
push
push
subb
mov
mov
or
lret
repnz
int3
pop
mov
js
int3
inc
sarl
lret
push
add
mov
enter
cmp
ret
cmpsl
mov
inc
into
fwait
jae
push
dec
push
adc
inc
mulb
incb
test
mov
xchg
pop
fdivp
idiv
sarb
ficomps
fnstsw
shll
lds
or
loop
enter
sub
push
and
mov
xchg
dec
jge
cmpsl
imul
lock
jg
out
rolb
popf
mov
sub
dec
ja
mov
sarb
roll
int
mov
inc
mov
sahf
xchg
mov
nop
test
mov
arpl
lods
mov
call
jmp
inc
cmpsl
lcall
mov
xchg
mov
rcll
std
fiadds
adc
jecxz
push
or
fisubs
loop
inc
or
mov
and
into
sarl
shll
jle
int
pushf
dec
add
dec
ljmp
sarb
popa
nop
xchg
mov
fld
sub
push
lock
mov
cmp
loope
popf
jg
fisubl
push
or
add
lds
adc
js
ror
jle
loop
sub
out
movsl
int
fldcw
jge
je
adc
sbb
enter
pop
push
xchg
fimuls
push
xchg
push
lods
loopne
std
mov
mov
inc
js
int3
jbe
jo
push
mov
or
jb
push
mov
jbe
mov
pop
daa
out
movsb
stos
push
fisubs
inc
clc
push
outsb
into
inc
mov
pop
cmpsl
fsubrs
bound
hlt
and
jbe
xlat
cmpsl
add
or
pop
fidivrs
xchg
movb
aad
shlb
cwtl
clc
jbe
out
testb
pop
int
mov
nop
mov
imul
into
mov
mov
fs
rep
mov
es
bound
mov
outsb
or
sbb
push
mov
faddl
out
push
push
in
aad
add
shlb
addb
ljmp
pop
mov
dec
mov
cmpsl
cmpsb
cli
dec
orl
sbb
inc
out
dec
mov
mov
jns
ret
mov
mov
add
pop
bound
xchg
add
jg
popf
hlt
rclb
adc
or
test
pop
jno
push
cmpsl
ljmp
ret
lret
repnz
xchg
mov
loope
sbb
fld
push
sub
fisubs
fistl
pop
aad
rorl
push
mov
mul
lods
cmpsl
fisttps
jle
mov
push
addl
and
lahf
out
xchg
inc
fidivl
cmpsb
lea
xchg
nop
xchg
stos
sub
or
inc
movsl
jp
mov
xchg
push
in
outsl
inc
inc
stos
mov
pusha
dec
les
imul
jb
pop
outsl
or
fisubl
cmp
and
shll
lock
push
sub
mov
dec
xchg
cmp
inc
ret
cwtl
or
push
dec
push
mov
mov
cmp
int3
out
cmpsl
pop
pop
ljmp
in
dec
cmc
lds
sub
adc
add
mov
cmpsb
aam
jecxz
xchg
les
push
ljmp
sbb
and
push
sub
lret
test
divl
pop
push
dec
sbb
call
and
and
inc
push
and
or
cmpsl
mov
xchg
jecxz
lock
push
xor
dec
mov
es
stc
insl
pop
stos
pop
and
sub
cmpsb
pop
and
popa
jo
iret
leave
and
into
xor
push
fcomps
test
jbe
cmpsl
loop
popa
enter
sarb
shl
adc
psllq
aas
popf
dec
mov
adc
sbb
pop
lock
fucomp
or
popl
shl
int3
add
push
frndint
jp
stos
inc
out
rclb
jg
or
cmp
or
inc
cmp
mov
fsubs
test
xchg
sahf
fdivrs
push
shlb
daa
test
xchg
out
add
jmp
jl
mov
mov
adcb
inc
sbb
inc
ss
mov
lods
push
ret
ds
xor
jne
push
imul
testb
jg
mov
loopne
sbbl
ret
inc
push
inc
movsb
lret
cmpsb
xchg
pop
mov
les
or
pushl
outsl
in
and
into
add
mov
mov
aam
add
in
imul
add
pusha
lea
push
jno
adc
call
cmp
push
adc
mov
xorl
and
nop
adc
int3
lods
inc
sar
jo
push
mov
rcll
lret
add
ljmp
sarl
push
cltd
ror
cmpsl
pop
adc
and
iret
sbb
mov
fisttps
xchg
push
in
xor
je
add
insl
lret
fsubs
std
jne
sub
rcl
mov
lock
cmc
int
xchg
ret
loope
shrb
stos
mov
sbb
loope
sahf
sbb
push
push
push
mov
mov
nop
lea
push
sti
ficoms
pop
push
sbb
or
pop
rorb
in
cmpsb
jno
lret
addr16
and
add
pop
stos
test
xchg
shrb
int
test
and
jbe
adc
les
mov
or
incl
mov
ret
nop
cpuid
mov
mov
mov
adc
ret
mov
xchg
fisttpll
out
dec
dec
pusha
fwait
push
ds
push
insl
movb
scas
movsl
cmpsl
inc
loopne
fxch
mov
std
repnz
cmpsl
mov
mov
adc
shlb
shufps
or
push
sbb
pop
pop
scas
shll
das
inc
dec
pop
sti
push
in
mov
add
sbb
mov
les
or
decb
and
out
test
xchg
js
loop
bound
icebp
adc
mov
out
loopne
mov
inc
out
les
mov
dec
dec
leave
jno
sbb
out
push
cld
sub
adc
mov
test
push
dec
inc
les
inc
inc
je
stos
lahf
aad
mov
or
or
inc
filds
sbb
es
into
insl
push
pop
sub
sub
push
mov
xchg
cmp
loopne
adc
mov
xchg
aam
in
inc
lds
scas
int
push
sti
rorb
cmpsl
lahf
or
adc
test
stc
mov
inc
into
rorb
roll
nop
adc
dec
mov
test
stos
iret
cmp
into
inc
imul
cmp
xchg
call
adc
insl
je
and
mov
xchg
mov
nop
fsubs
leave
and
shl
scas
jl
push
mov
mov
andl
daa
leave
into
or
pop
std
xchg
xchg
lock
pop
adc
cmp
sahf
add
ret
mov
push
xchg
leave
movsl
lds
rol
loope
mov
push
into
movsb
aad
mov
pop
mov
call
rolb
cmp
es
shll
adc
cltd
cmpsb
cmp
bound
mov
sbb
aas
testb
fstl
sbb
lret
and
pushf
mov
cmp
inc
mov
sub
xor
cmp
les
call
roll
adc
cs
dec
pusha
or
adc
adc
pop
inc
add
push
push
xorl
xchg
testb
or
into
lret
cmpsb
sahf
mov
ret
mov
out
mov
push
aaa
out
dec
shufps
add
push
test
enter
mov
lret
hlt
and
jmp
pop
pushf
pop
out
aad
loopne
cltd
push
pop
cmpsl
or
jl
cs
xbegin
cmpsl
ret
mov
negb
and
mov
mov
mov
fiadds
mov
outsl
sti
adc
ljmp
lret
ret
es
fdivrl
push
sbb
divb
repnz
lret
cmp
test
mov
mov
jle
cmpsb
or
pop
sarb
xchg
add
loop
mov
loop
push
push
mov
ror
add
shlb
mov
addr16
inc
and
sbbl
popa
pop
aas
mov
and
testl
jg
iret
mov
pop
push
dec
xor
xchg
orb
out
lahf
je
jmp
push
add
or
jl
lret
and
xor
or
fldl
or
rcr
mov
xchg
outsb
sbb
dec
adc
dec
xchg
push
dec
test
and
aam
inc
lea
into
jbe
outsb
stos
sarb
ret
xchg
fldl
mov
inc
lcall
jle
mov
mov
roll
push
enter
aas
es
sub
insl
inc
cmpsl
sahf
fwait
hlt
push
adc
aam
xchg
aas
adc
dec
jg
es
jne
xchg
aad
pop
enter
and
dec
dec
xchg
ljmp
mov
pop
dec
mov
add
sub
aam
sahf
cmp
call
ds
pushf
pop
js
push
test
int
test
movb
jecxz
mov
adc
sub
pop
adc
inc
ror
aaa
push
jne
adc
fiadds
fs
xchg
movsl
cmpsl
and
int
xchg
ficomps
push
mov
pop
cmpl
cs
or
imulb
clc
and
cmp
pop
leave
jecxz
fisttps
and
pop
adc
and
icebp
inc
mov
aad
rcr
mov
data16
mov
mul
rcl
xchg
cmc
mov
lahf
jo
shlb
adc
mov
mov
adc
jno
mov
rolb
push
imul
sbbl
addb
lods
rorb
adc
adc
add
int
imul
test
cmpsb
push
adc
dec
push
cs
mov
push
dec
jecxz
xchg
inc
cmp
adc
jns
dec
xacquire
in
nop
rol
adc
je
mov
popl
in
pop
pop
dec
pop
xchg
inc
jmp
push
xchg
mov
fmull
mov
iret
outsb
je
add
aaa
cmp
adc
ljmp
imul
inc
pop
fidivs
stos
jbe
jb
arpl
test
add
in
imul
rcl
pop
lcallw
cmpb
clc
inc
or
add
mov
mov
or
xchg
loop
push
mov
push
testb
dec
pop
test
fsts
lret
shlb
mov
or
push
xor
mov
and
adc
sbbl
fimuls
inc
push
fisttps
adcb
test
jle
outsb
cmpsl
call
out
aas
imul
sbb
sbbb
add
adc
jo
mov
aam
into
jp
and
stos
push
and
mov
dec
adc
jg,pt
enter
xorl
lods
nop
cwtl
jle
dec
push
sbb
inc
add
sbb
ja
out
cmpsb
mov
jno
jp
stos
subb
dec
ret
jle
dec
fst
imul
leave
mov
int
ds
enter
mov
dec
rolb
pslld
pop
jl
movsl
sbb
adc
xchg
lret
cmpsb
imul
pop
adc
inc
addb
dec
or
mov
and
mov
lret
loopne
mov
and
or
rcrl
mov
jecxz
mov
in
je
mov
mov
pushf
pop
movsl
jnp
dec
inc
push
ds
fwait
stc
mov
imul
fisubrs
cli
es
push
dec
das
add
out
push
adc
data16
jecxz
cmpsl
ljmp
mov
jmp
xor
ds
push
xlat
int
push
mov
xchg
inc
dec
inc
mov
mov
nop
repnz
add
or
lock
cmp
es
das
aam
inc
dec
jns
mov
ds
out
mov
rolb
dec
mov
pop
aam
mov
xchg
xorb
fidivrs
leave
pop
aas
out
add
notb
das
icebp
inc
sahf
push
out
testb
aam
cmpsl
push
adc
xchg
cmc
mov
iret
or
cmc
leave
bound
or
mov
incb
push
aad
mov
inc
add
repnz
test
pop
xlat
int
adc
es
sbb
rolb
push
mov
loop
shll
ds
pop
ja
into
push
inc
or
out
aaa
mov
adc
push
mov
data16
or
jp
int
jle
mov
enter
call
ljmp
jbe
mov
push
rcll
dec
jmp
in
andl
push
and
mov
inc
mov
jns
add
jne
ret
cmp
ret
in
into
adc
les
rolb
jmp
out
inc
mov
mov
dec
out
lret
dec
lret
les
out
fs
dec
add
bnd
pusha
pop
fsubr
inc
pushf
pop
lret
push
bnd
cmp
es
inc
push
nop
cmp
pop
xchg
or
adc
and
call
dec
and
xchg
out
mov
lea
mov
sbb
cmpsl
sub
push
mov
stos
mov
imul
jae
out
orl
addr16
mov
pop
sarb
mov
das
cli
bound
sub
dec
adc
inc
ficoml
inc
shll
add
dec
jo
pop
dec
in
iret
lea
jns
lret
mov
and
je
mov
xchg
fidivrs
sbb
pop
addl
in
cltd
int
insb
mov
nop
xchg
rol
scas
push
ds
mov
dec
rcll
les
aas
xchg
xchg
pushf
sahf
in
lret
fiaddl
ret
mov
aad
pop
fnstcw
cwtl
lcall
xlat
xor
test
xchg
dec
dec
lret
das
jo
mov
pop
jg
fdivrs
ret
mov
adc
adc
leave
xchg
aas
adcb
popa
dec
ret
add
or
jp
inc
cmpsb
outsl
or
push
ret
icebp
mov
movsl
xchg
mov
sub
add
int3
add
mov
xchg
loopne
nop
test
adc
ds
aas
adc
pop
int
subl
or
scas
outsl
and
push
sbb
cmpsl
and
leave
mov
dec
clc
clc
push
mov
push
jge
andl
call
sub
mov
adc
pop
scas
ffreep
lock
xchg
jecxz
xchg
jg
inc
sbbb
or
shrb
xlat
pop
push
ds
loope
dec
imul
test
sbb
mov
mov
rcll
shlb
inc
mov
mov
mov
outsl
adc
push
jecxz
pop
pop
mov
ja
push
shr
or
scas
jmp
sar
xchg
dec
inc
inc
mov
sahf
cmpsb
lock
jmp
mov
pusha
adc
mov
fbstp
cltd
mov
sub
imul
pop
in
ror
clc
push
arpl
adc
push
mov
pop
loope
dec
push
lahf
test
out
dec
ljmp
sahf
adc
xchg
cmpsb
mov
rorb
jecxz
rolb
mov
imul
inc
mov
jne
ds
mov
push
dec
jns
mov
filds
addl
aam
mov
jecxz
ljmp
enter
jmp
dec
ds
clc
int
pop
jle
mov
lds
ret
popf
idivl
sbb
enter
loope
adc
push
or
inc
arpl
fdivs
cli
sahf
es
lds
push
xor
xchg
aam
add
mov
test
mov
cmpsb
mov
add
shrl
dec
loopne
push
inc
pop
push
inc
cmpsl
cli
out
call
mov
xchg
cmpb
leave
leave
cmp
aas
mov
icebp
push
jmp
mov
lds
sub
or
mov
cmpsl
popa
jle
pop
mov
popf
sbb
aam
in
push
popa
insb
jle
sbb
xchg
pop
push
dec
push
xor
sub
jl
push
dec
adc
inc
popa
ja
into
insb
ficoms
cmp
subb
cmpb
in
cmpsl
orl
lcall
push
mov
movl
icebp
add
inc
out
cmpsl
test
sti
push
mov
or
out
and
or
and
mov
mov
mov
cmpsb
insb
jne
mov
movsl
les
mov
sahf
or
pop
testb
mov
test
sub
adc
sbbl
leave
adc
shr
in
test
aam
or
inc
xchg
mov
jo
xchg
cmpsl
xchg
mul
xor
dec
add
mov
jmp
inc
xchg
int
cmpsb
mov
test
add
sub
xor
aas
mov
nop
outsb
data16
iret
pop
rcrb
mov
cmpsb
xchg
sbb
dec
cli
scas
fldcw
and
push
pop
jge
scas
loop
xchg
pop
fldt
leave
xchg
mov
std
scas
jb
fst
cmpsl
cmp
shlb
xchg
pop
lds
inc
imul
rcl
testl
test
lcall
push
mov
xchg
mov
mov
nop
jg,pt
mov
insb
mov
in
adc
rclb
testb
push
xor
pop
data16
jmp
ret
inc
popf
or
jbe
push
cmp
int3
arpl
xchg
push
mov
jecxz
jmp
xor
aad
outsb
inc
mov
mov
jg
lds
cwtl
mov
int3
push
cmp
dec
and
divb
jge
jp
jmp
mov
dec
cmp
mov
imul
add
mov
cmp
dec
in
fnstenv
mov
cmp
stc
adc
pop
add
fs
xor
inc
cmpsl
sub
test
fwait
dec
les
aaa
push
mov
dec
xor
cmpsl
ret
sbb
mov
rcrb
in
cmpsb
test
es
pop
pop
in
cmp
test
pop
inc
mov
inc
ljmp
rol
mov
push
inc
cmpsl
loopne
push
jmp
mov
ret
in
loope
adc
adc
or
add
jg
les
mov
test
mov
push
pop
pop
adc
jnp
push
sbb
stos
push
mov
in
sbb
adc
push
dec
mov
push
stos
jl
rcl
mov
fistl
sbb
push
jle
adc
jbe
dec
mov
mulb
lock
movsb
enter
sub
push
jnp
movsl
dec
jno
xchg
jle
scas
mov
nop
mov
nop
faddp
es
xchg
xchg
mov
inc
nop
mov
xchg
out
sbbl
cmpsb
mov
mov
mov
mov
inc
stos
xor
or
outsl
clc
cmc
pop
fstl
jno
push
xchg
adc
pop
xchg
dec
shrb
mov
les
jle
ficomps
xchg
rol
into
add
ja
out
cmc
out
hlt
pop
add
xchg
fisubrs
mov
movsl
inc
repnz
ret
cmp
dec
movl
int3
inc
cmpsb
leave
and
mov
rcrb
mov
push
xchg
loop
xchg
aad
lahf
arpl
mov
push
inc
xchg
ljmp
push
pushf
xchg
cwtl
nop
adc
sbb
dec
xor
ds
mov
or
sub
into
outsl
adc
cld
es
inc
imul
push
mov
xor
pop
inc
pop
mov
cmpb
es
loopne
mov
in
mov
aas
adc
jle
inc
xchg
cltd
lretw
mov
xor
out
std
jecxz
push
into
cmpsb
notb
fidivs
pop
stc
mov
xchg
test
fwait
or
add
push
inc
into
fsubrs
mov
push
ret
aaa
mull
fbstp
in
das
arpl
insl
push
int3
jo
fnsave
pop
pop
aaa
adc
shll
lret
rcrl
mov
nop
push
imul
mov
xor
jo
mov
push
sti
cmp
xor
popa
jle
fidivrl
mov
mov
das
nop
pop
mov
cmp
scas
push
pop
divl
cli
cmc
fisubl
add
ds
and
jecxz
pop
push
cmpsb
seta
push
or
dec
in
call
pop
mov
int
movsl
lods
ret
aas
jmp
mov
les
gs
sub
or
push
and
sarl
mov
out
dec
ret
cmpsb
out
dec
xchg
ds
js
scas
or
add
jo
scas
lods
aad
mov
nop
mov
outsb
adc
js
in
cmpsb
incl
and
insb
in
add
add
inc
xor
dec
mov
out
mov
imul
cmpsl
in
pop
daa
xor
stc
push
arpl
add
xchg
adc
xchg
outsb
dec
cmpb
jbe
pop
mov
jae
repnz
or
sbb
mov
stos
icebp
in
iret
mov
and
sbb
add
push
adc
rclb
xor
mov
shl
stos
leave
inc
sahf
mov
jo
shlb
in
cmpsb
sbb
and
cmpsl
scas
ds
es
sarl
sbb
mov
test
jmp
rcr
cmpsb
in
lds
inc
mov
loop
pop
cmc
call
imul
ret
xorl
das
fs
pop
and
fmulp
bound
cltd
jb
add
mov
mov
fsubl
jg
cwtl
out
in
sub
aas
mov
sti
jl
mov
out
cmc
dec
inc
repz
push
mov
and
pushf
int3
bound
push
ficoml
sbb
mov
or
lods
repnz
int
or
imul
mov
sub
dec
leave
or
movsl
mov
pop
es
xlat
push
adc
mov
and
pop
xchg
cmpsb
mov
cmpsl
push
mov
adc
ret
int
dec
xor
repnz
imul
mov
outsb
mov
out
mov
je
or
sbb
or
and
leave
mov
sub
testl
dec
es
in
lods
sbb
mov
inc
and
cmp
push
and
adc
test
pop
fwait
jns
sbb
push
sub
mov
cmpsb
icebp
ds
aas
mov
sbb
mov
adc
cmpsb
adc
out
and
jl
dec
into
rcr
pop
out
bound
push
movsl
inc
pop
cmp
mov
ror
out
in
dec
mov
mov
mov
stos
sub
ljmp
pop
or
rcrl
inc
out
xchg
aam
add
aad
maskmovq
divl
call
rolb
or
ds
adc
out
inc
dec
es
xchg
int3
fimull
push
jge
and
shl
int
jle
xchg
add
inc
mov
fstpt
and
scas
mov
out
fimull
scas
pop
push
and
gs
push
cmpsl
movsl
sub
push
stos
call
aas
jg
lret
out
ffreep
outsl
ds
mov
mov
cmpsl
sbb
and
fs
or
adc
fildl
add
sub
dec
cli
dec
movl
jle
popf
mov
lahf
pusha
sub
mov
es
adc
inc
or
mov
ror
cmpsl
xlat
xchg
xor
adc
fs
arpl
dec
adc
imul
cmpsl
icebp
stos
sbb
push
negl
in
add
stc
aad
shl
in
sahf
sbb
push
sbb
inc
add
rcr
adc
sub
sub
je
out
dec
sar
mov
out
popf
call
adc
stos
ds
shrb
push
gs
ret
pop
add
mov
jb
mov
cmp
mov
cmpsb
xchg
test
push
or
pusha
fcompl
jle
inc
mov
out
test
and
movsb
push
mov
fxch
push
cmpb
mov
lret
dec
add
xchg
mov
shll
inc
or
or
push
sti
addr16
pop
push
dec
shl
push
outsb
test
fwait
pop
mov
and
sahf
adc
popa
adc
bnd
dec
mov
and
push
xchg
push
data16
xor
incb
adc
mov
ss
mov
jbe
lock
or
pusha
ret
int
mov
test
test
pop
inc
mov
mov
inc
fcoms
push
or
call
and
scas
mov
push
fwait
cmp
pop
test
cmp
jecxz
xor
ds
adc
out
bound
xchg
sub
cmpsl
cmpsb
cli
push
fnsave
shl
push
mov
add
add
cmpsb
pop
rolb
and
push
sbb
outsb
es
push
aam
ret
push
mov
xlat
das
test
push
xchg
ljmp
pop
jae
je
lea
mov
jno
rorb
cmp
mov
adc
fcomi
out
in
and
pop
gs
mov
mov
mov
insw
or
fimull
adc
out
mov
and
ss
push
pop
out
mulb
divb
adc
ret
decl
mov
cmpsb
notb
mov
inc
in
push
lods
jnp
leave
in
mov
pop
mov
int
dec
cmp
dec
add
push
mov
inc
psubb
jle
mov
jno
addr16
sub
inc
iret
cwtl
mov
mov
or
mov
ds
ljmp
adc
cmp
mov
clc
filds
dec
lods
mov
push
es
dec
in
lods
sbb
pop
pop
call
shlb
push
test
xor
hlt
cmpsl
cmp
insl
push
test
push
mov
and
stc
cmp
repnz
and
mov
jb
add
int
push
xchg
inc
popa
cmpsl
ret
ret
out
lods
pop
mov
sbb
daa
pushf
int
outsl
mov
call
pop
fs
mov
inc
push
test
and
shrl
pop
mov
inc
sahf
mov
fisubrs
push
add
mov
pushf
out
fsubrs
repnz
or
loope
arpl
dec
cli
mov
scas
fildll
sub
leave
mov
sbb
shrb
aam
clc
mov
mov
mov
xor
lea
mov
loope
clc
dec
lcall
stc
cmpsl
inc
mov
fdivl
mov
pop
dec
push
cmc
xlat
out
les
int
cmp
jmp
or
decl
xorl
fstpt
outsb
or
pop
out
adc
mov
pop
cmpsb
or
in
cmpsl
and
js
jg
xchg
xchg
ret
notl
push
ror
push
repnz
pusha
clc
call
mov
test
pop
xchg
aad
sbb
sti
lds
lock
push
sbb
mov
inc
push
enter
lret
scas
sti
popa
les
or
rorb
int3
xlat
mov
sbb
sub
ds
inc
fsubrp
add
pushf
lds
pusha
push
mov
aas
scas
xchg
xor
test
push
rol
dec
mov
iret
cmp
cmp
cmpsb
lods
sbb
int3
xor
lods
shlb
out
jecxz
dec
cmpsb
dec
mov
inc
sti
mov
push
inc
mov
ret
sti
dec
cs
sbb
and
xchg
adcb
xlat
xchg
mov
out
mov
dec
out
mov
ds
xchg
cmp
push
mov
jge
pop
mov
sbb
imul
out
sbbl
movb
push
ret
mov
mov
mov
push
ret
aam
repnz
inc
jecxz
lret
xor
or
push
ret
in
std
mov
dec
les
or
mov
shll
and
lods
rcl
cmpsl
lods
xchg
push
add
and
mov
xor
xor
adc
mov
mov
ret
adc
push
xor
or
xchg
pop
push
into
xor
xchg
sti
adc
ds
out
sar
fistps
xchg
inc
stos
jg
outsl
push
jbe
in
testb
mov
mov
shrl
mov
divl
inc
cmpsb
mov
add
adc
popa
nop
mov
mov
jecxz
xchg
in
inc
into
outsl
cmpl
in
mov
inc
ud1
enter
into
push
adc
popa
inc
ja
mov
aas
bound
out
xchg
mov
shl
imulb
clc
pop
iret
or
das
clc
push
dec
xchg
pop
inc
lret
insb
add
addr16
out
push
add
inc
les
loopne
iret
sbb
push
cmp
test
sub
dec
rorb
push
push
jo
leave
inc
pop
mov
sub
cmpsl
adc
push
int3
test
rol
inc
stos
push
lds
pop
xlat
outsb
sub
test
mov
out
fsts
les
pop
loop
iret
icebp
xor
fstpt
sbb
pop
adcb
clc
mov
or
mov
cmpsl
mov
clc
dec
inc
xor
in
xchg
add
inc
or
sbb
mov
test
loopne
andb
mov
add
data16
lods
push
data16
cmpsl
inc
dec
addl
push
movb
jp
push
mov
or
fwait
sbb
mov
mov
push
movsl
loop
mov
ljmp
mov
sub
cmpsl
stos
pop
dec
mov
andb
movl
in
into
in
sbb
in
andb
gs
lock
jecxz
dec
stos
call
sbb
xchg
movl
lods
mov
cmpsb
mov
in
adcb
es
pop
adc
orl
mov
sahf
mov
mov
mov
mov
sub
lods
fldenv
mov
push
repz
xchg
nop
mov
out
inc
push
out
es
jecxz
push
outsb
mov
subb
std
mov
jge
xchg
cli
rcrb
mov
mov
sbb
fidivs
inc
insl
sub
ss
shll
cltd
lods
ljmp
push
or
sub
push
out
insl
in
jecxz
adc
push
sarl
hlt
cmp
fiadds
dec
cmpsl
inc
stos
cmp
jl
inc
dec
and
in
mov
add
sarl
mov
ret
insb
pop
xor
int3
pop
cltd
push
inc
sub
es
push
xor
mov
scas
inc
std
push
jge
dec
adcb
inc
sbb
sbbb
sbbl
leave
sahf
dec
into
hlt
lahf
fisubs
sbb
pop
cmp
or
imul
push
add
rolb
cmpsb
mov
vmread
xchg
or
mov
xchg
mov
push
or
push
mov
mov
dec
xor
rcrl
jge
loop
mov
inc
ret
es
jbe
inc
loope
xorl
mov
nop
repnz
int3
jl
mov
stos
cli
shl
adc
mov
fldcw
shlb
mov
out
mov
adc
js
mov
out
jle
nop
inc
pop
aaa
push
xor
inc
fdivrp
es
mov
push
fimull
adc
stc
jle
mov
cmpsb
push
or
and
je
cmpsl
or
mov
pop
testl
jb
loopne
cmp
pop
shrl
fs
cmpl
xchg
mov
es
stos
sbb
into
adc
cmp
lock
daa
jne
gs
sbb
jno
mov
or
sub
inc
cmpsl
in
adc
add
or
movsb
mov
push
pcmpeqb
out
mov
imul
adc
test
sub
in
xchg
and
scas
inc
xchg
add
or
dec
lret
xor
in
mov
fucompp
xchg
nop
push
mov
mov
popa
mov
mov
sti
mov
adc
int3
clc
mov
rcll
inc
lock
out
movsl
or
int
outsb
pop
movsb
stos
ficoms
push
mov
rcr
imull
imul
adc
add
jne
dec
xchg
nop
mov
mov
cmpsb
sbbl
pop
pop
adc
and
jge
xchg
hlt
mov
and
push
testl
mov
push
ret
push
mov
stos
testb
adc
dec
inc
pop
xor
mov
cmpsl
cmc
mov
add
js
es
sbb
push
fsubp
fstl
enter
inc
out
sbb
shrl
ficoms
ds
inc
pop
lret
cli
aaa
out
mov
pop
sub
out
je
fimuls
dec
fdivrs
hlt
mov
data16
into
pop
xlat
xchg
call
faddp
sub
push
arpl
loop
aas
mov
out
adc
jmp
rol
push
ss
xchg
push
ds
fiadds
jb
add
add
mov
xlat
fcmovnb
pop
add
and
loop
into
mov
fimuls
dec
xor
inc
sub
mov
jl
sahf
pop
ret
mov
fidivs
fisubrs
push
les
es
lret
faddp
and
pop
jecxz
loopne
jns
fcmove
push
xor
nop
inc
xor
neg
pop
push
ljmp
mov
es
ficoml
pop
rcrb
shrb
mov
push
inc
ret
enter
loop
ljmp
inc
xchg
mov
mov
neg
cmpsb
push
xchg
adc
stos
add
out
inc
inc
inc
push
out
sbb
frstor
and
ss
or
pop
jle
ret
fistpll
fidivrs
dec
movsb
xchg
movl
fdivrp
ss
mov
push
imull
ret
jle
ret
outsb
lock
out
add
inc
mov
filds
inc
fidivs
inc
jb
ljmp
ret
inc
xchg
outsb
inc
fcmovnbe
pop
mov
pop
dec
into
sub
dec
push
insl
ret
repnz
loopne
adc
dec
push
repnz
adc
push
into
ret
stos
into
push
into
ljmp
or
add
loopne
movsl
jle
gs
pusha
ret
enter
push
xor
cs
pop
in
push
push
lret
out
fisttps
sbb
or
push
jns
arpl
into
daa
es
adc
dec
movl
pop
loop
jbe
in
dec
jnp
loope
mov
cmpsl
push
xchg
movsl
insl
repz
jbe
push
mov
je
ret
es
mov
pop
jnp
or
mov
cmpsl
adc
in
repnz
jge
jecxz
cmpsl
push
dec
into
jp
sbb
add
adc
cmpsb
cmpsb
fists
in
enter
jecxz
inc
mov
mov
mov
add
arpl
test
ja
into
dec
loope
stc
jg
sahf
cmc
aas
mov
sub
rolb
int
scas
inc
movsb
sbb
call
adc
and
ficomps
iret
loope
add
mov
jo
pop
xchg
mov
pusha
push
xor
enter
imul
push
lods
pop
or
xchg
js
inc
roll
rcrl
sbb
add
adc
dec
fiadds
xor
sub
sahf
mov
arpl
cmpsl
or
mov
push
call
jbe
mov
cld
aam
pop
es
into
ljmp
and
push
add
xchg
adc
adc
scas
mov
cmp
jmp
data16
cmpsl
jge
aam
jb
imul
push
shr
mov
adc
jmp
add
in
inc
js,pn
jle
inc
cmp
push
es
roll
or
push
in
xor
cmpsl
pushf
test
xlat
jle
xchg
cmp
fcompl
mov
and
mov
pop
aas
and
out
loop
adc
mov
sbb
jae
in
loop
mov
cmp
iret
push
push
jmp
in
push
fsubrl
pop
jge
test
addb
push
repnz
push
dec
sbb
or
mov
outsb
dec
shll
adc
es
cmpsl
push
mov
pop
inc
cld
test
movsb
mov
push
mov
call
out
xchg
enter
xor
pop
out
dec
cmp
and
shlb
cmc
lret
imul
out
stc
iret
mov
xor
mov
push
xchg
sarb
push
inc
mov
jae
scas
aad
clc
jno
scas
out
mov
jg
lret
mov
mov
jmp
lods
stos
aas
test
push
jge
xchg
adc
cmp
cmp
cmp
cmc
inc
mov
pop
aad
cmpsl
pop
rclb
mov
xchg
jmp
lea
jns
imul
loop
adc
mov
inc
gs
ss
cmp
sbb
mov
into
ljmp
pushf
dec
xor
sub
enter
ja
daa
int3
into
mov
pop
xchg
xor
sbb
push
jge
out
pop
scas
inc
rcrb
mov
xlat
std
aaa
and
in
adc
cmp
xor
imul
push
sahf
ljmp
scas
fwait
or
lret
mov
dec
shll
out
es
lcall
mov
popf
jl
repnz
pop
jb
rol
xor
mov
ret
lret
les
dec
leave
inc
mov
xchg
xor
rclb
fiaddl
xchg
jecxz
iret
cli
dec
inc
mov
mov
cmp
add
dec
cmpl
into
cmc
mov
or
adc
pop
adc
shufps
movl
inc
push
inc
mov
into
shrl
cmpsb
mov
cmpsl
sbb
add
inc
into
into
push
jle
out
loop
xchg
dec
xchg
add
or
lahf
dec
mull
push
mov
cmp
lret
out
dec
bound
inc
pop
icebp
stos
add
mov
popf
and
push
cmpsb
nop
xlat
stc
mov
inc
cmp
or
and
scas
push
sub
jle
adc
jle
dec
jp
cs
and
dec
push
mov
pop
dec
jo
push
js
cli
pusha
mov
testb
or
jmp
pop
stos
jno
adc
mov
mov
push
out
out
loopne
dec
into
stos
jo
xor
jb
or
jo
pop
sarl
and
icebp
pop
add
mov
sub
fcmovb
dec
push
inc
or
sub
cmp
mov
lock
shrb
lock
out
icebp
mov
xchg
hlt
lcall
ss
cmpsb
mov
push
and
sbb
mov
mov
jge
xchg
mov
or
mov
adc
icebp
out
sbb
shll
jl
cs
push
int3
add
sub
cmpsl
jle
clc
filds
cmpsl
ror
and
mov
filds
aam
cmpsl
sbb
xchg
ljmp
push
test
mov
shlb
andb
test
es
cmpsb
jbe
ret
in
adc
nop
dec
stos
pop
jg
into
int
pop
mov
andl
or
xor
mov
cli
ret
into
cmpsl
push
jg
popf
sbb
out
and
sarb
xlat
adc
cmp
mov
scas
outsb
gs
dec
xlat
sub
lahf
test
stos
add
movsl
lock
push
popf
push
repz
sbb
sbbb
jo
cmpsb
jb
sbb
dec
lds
mov
in
pop
or
jns
in
inc
icebp
les
mov
jle
sub
jne
roll
inc
adc
cmp
out
rclb
cmpsb
xor
bound
lods
fdivl
push
push
bound
popa
stos
xchg
sbb
in
adc
mov
push
add
inc
jnp,pt
gs
push
sbb
ror
push
fidivl
pusha
cmpb
mov
nop
sbb
add
stos
int
mov
add
push
out
int
xor
jmp
into
cmpsl
lcall
scas
rcrb
dec
jb
and
mov
sti
mov
jbe
adc
pushl
jl
das
ficomps
inc
inc
jns
sub
fwait
or
xchg
pop
loopne
int
addr16
dec
sarl
lds
test
mov
pop
pop
xchg
push
sub
mov
jg
lahf
ds
push
jecxz
test
adc
out
push
imul
cmpsl
push
cltd
ficoml
testl
aam
es
add
je
and
lret
into
mov
sub
flds
jge
aas
sti
jmp
sbb
dec
cmpsl
cmp
push
fiadds
inc
stos
sub
pop
ljmp
and
pop
jno
adc
xor
nop
sub
mov
adc
and
add
dec
xchg
mov
aaa
push
mov
rclb
enter
jle
stos
lcall
mov
stos
je
ret
nop
xchg
adc
into
rorb
dec
dec
test
test
xor
arpl
mov
mov
push
cmc
or
push
mov
lods
jae
cmpsb
in
xchg
pop
and
js
iret
stos
inc
pop
adc
lock
mov
imul
in
cmpsl
sub
cmp
adc
xchg
fndisi(8087
or
subl
adc
sbb
cmp
call
inc
cmp
js
sarb
stos
aad
cltd
imull
lock
lock
xchg
ds
xchg
mov
ret
xchg
sub
insl
popa
stos
inc
inc
lahf
int3
pop
jp
ret
es
lret
mov
aad
and
mov
sahf
roll
ret
xchg
add
pop
cmp
adc
leave
test
out
inc
aam
mov
jo
and
add
ja
leave
cmpsl
sub
sti
fcoms
scas
fdivl
dec
push
push
jecxz
cmpsl
sub
outsl
in
das
cmpsb
push
in
and
cwtl
jae
movsl
dec
scas
jp
into
xchg
stos
mov
mov
mov
pushf
jg
inc
cmpsb
and
cmp
sub
push
mov
mov
jbe
popf
push
aaa
sub
stos
mov
popa
pop
push
mov
push
mov
test
loop
dec
push
testb
jge
inc
mov
inc
aas
mov
in
and
dec
add
pop
inc
cmpsb
fnstcw
mov
jae
scas
push
movsb
jae
pop
imul
xchg
aad
push
dec
jle
dec
cmp
pop
int
cmc
mov
cmp
ret
push
inc
pusha
jns
pop
adc
or
jno
imul
inc
repnz
lock
mov
jle
cmpsb
mov
jnp
push
aaa
ds
jmp
mov
fwait
mov
mov
mov
in
sbbb
and
push
les
lock
aad
mov
add
loope
dec
mov
inc
jecxz
adc
sbb
xor
fisttps
loopne
nop
mov
inc
lods
mov
push
adc
repz
push
aaa
ja
fcompl
lods
mov
insl
push
test
xchg
lret
mov
dec
je
mov
mov
icebp
scas
cmp
lea
lcall
sub
mov
add
push
push
add
xchg
aam
mov
sub
inc
xor
inc
shr
test
sbb
adc
enter
in
add
sub
test
mov
pop
push
ds
inc
jg
leave
pop
inc
divb
imul
or
or
fcompl
pusha
cwtl
in
pop
shrl
cs
and
fildll
and
cmpb
ficomps
in
mov
xchg
out
popf
mov
mov
aad
sub
rcrb
out
xchg
cmp
mov
mov
cmc
mov
pop
inc
lds
mov
mov
call
mov
cmp
adc
push
fwait
sbb
jnp
loop
mov
or
out
nop
xchg
sub
sub
dec
dec
ret
xchg
sub
push
dec
in
sub
aas
sahf
sub
or
or
and
mov
xchg
jmp
jb
pop
cmpl
xor
stos
es
inc
jge
aas
mov
mov
into
in
cmp
lds
int3
mov
xchg
ror
mov
add
jns
cmpsl
mov
pop
jns
mov
outsl
dec
int
jo
scas
xor
lock
pop
inc
ret
lahf
out
outsb
sbb
cmpsb
fisttpl
ds
repnz
fmul
loop
adcb
jg
mov
ja
push
loopne
mov
stos
shll
add
scas
movsb
adc
jecxz
orb
sub
lds
pop
dec
sub
add
dec
ja
pop
dec
lcall
dec
jbe
pop
popf
das
push
jmp
or
jo
xchg
filds
ljmp
push
jo
lret
sarl
into
dec
rcl
jns
popf
cli
ret
movsb
rcl
test
mov
mov
std
testl
add
cmpsb
sbb
xor
cmc
notl
rcrl
nop
jbe
push
pop
outsb
arpl
mov
mov
jge
push
loope
in
ret
test
lods
inc
stos
jp
imul
add
inc
dec
push
mov
out
inc
or
test
jne
mov
mov
pop
je
jle
dec
bnd
fwait
or
or
adc
mov
mov
cmpb
sbb
or
mull
add
add
dec
jae
sub
bound
cmpsb
sub
mov
call
and
cmpsb
jmp
push
ret
dec
dec
std
mov
out
mov
in
xchg
push
lock
leave
dec
adc
in
cmpsb
arpl
cmp
orb
pop
add
fdivl
xchg
xor
sarb
adc
push
icebp
loop
mov
dec
rorb
lret
sbb
adc
jmp
int
repnz
cmpsb
mov
arpl
jle
mov
cld
jg
fldenv
and
pop
incb
bound
mov
jmp
gs
movb
sbb
repnz
insl
sbb
mov
int
push
mov
cwtl
ds
pop
in
movsl
movsl
aaa
pop
fmuls
idivb
xchg
sbb
cmp
andb
fdivrs
mov
pop
jle
mov
nop
jnp
aad
sbb
stos
imul
lahf
sbb
mov
jg
pop
mov
iret
jae,pt
push
cmpsb
pop
push
call
lea
into
mov
ss
mov
jle
ds
pop
xchg
xchg
and
xlat
popf
ror
mov
xchg
cwtl
shlb
add
addb
dec
out
es
popa
inc
imul
ret
mov
lret
pop
xlat
imul
dec
xor
leave
inc
mov
push
ret
xor
subb
push
jge
cmp
lahf
popa
mov
in
xchg
cmp
daa
xchg
pop
dec
aas
es
das
out
inc
in
int
jle
stos
pop
sbb
aas
rorl
mov
stos
gs
or
or
jne
or
jg
fmull
lea
je
outsb
pop
jbe
mov
mov
cmpsb
jae
push
adc
and
or
popf
add
xchg
loop
adc
mov
fisubs
jle
jecxz
in
inc
sarl
nop
rorb
push
scas
pop
push
push
xor
adc
ds
jno
xchg
adc
popa
or
push
sahf
jbe
inc
addr16
jne
pusha
test
push
inc
jmp
cmpsb
cli
stos
pop
rorb
imul
add
cmp
sbb
mov
or
adc
loope
loop
xchg
xchg
or
xchg
shrd
pop
out
stc
push
rclb
out
sbb
outsb
or
mov
xchg
aam
mov
push
pop
divl
loopne
mov
xchg
cmp
in
rclb
bswap
inc
mov
cmpsl
scas
lcall
arpl
push
clc
pop
ja
lods
dec
pop
stos
adc
inc
mov
stc
shr
repnz
das
les
fadds
mov
or
mov
lahf
xchg
inc
or
ficoms
imul
pop
repz
verr
jl
negb
mov
sahf
andb
cmp
into
cmpsl
dec
xchg
lds
mov
popa
aas
push
js
pop
test
mov
imul
aas
into
xchg
pop
imul
adc
xor
jmp
les
in
push
pop
inc
cmpsb
scas
outsl
sub
sub
push
pop
sub
pop
push
sahf
arpl
pop
and
sbb
ja
cmp
pop
adc
and
xchg
cwtl
fnstsw
mov
jle
cmp
xchg
dec
or
mov
inc
sub
inc
sub
sbb
les
mov
int
pop
mov
es
adc
and
ficompl
notl
mov
push
add
push
sbb
shll
xchg
addr16
mov
jg
or
mov
inc
mov
cmp
cmpsb
xor
and
xchg
dec
push
lock
out
cmpsl
lea
mov
sbbb
movsb
pop
call
and
push
or
adc
in
pop
jne
movsl
dec
jb
cmp
bound
cmpsb
mov
cmp
or
sahf
push
adc
int3
pusha
shrb
or
fbstp
call
xlat
sbb
js
mov
sarb
mov
jno
loop
jne
jae
mov
shl
xorl
cmpsb
loope
jg
jl
mov
mov
ljmp
sar
push
xchg
in
or
push
jnp
cmp
imul
insl
pop
ljmp
xchg
and
sub
inc
add
inc
xchg
xchg
shll
repz
mov
and
push
out
push
addb
xchg
and
adc
inc
ja
cmpsl
ds
sbb
movsb
adc
sbb
mov
std
inc
cmp
mov
das
test
mov
xchg
lock
addr16
jmp
stos
in
scas
out
in
lods
aas
mov
or
adc
outsb
add
enter
push
or
xchg
or
iret
ror
cmp
xchg
sbb
fisubrl
andl
and
rcr
outsb
xor
jnp
mov
mov
ret
push
jnp
mov
mov
pushf
test
dec
imulb
jp
int3
jg
push
test
mov
mov
testb
orl
xchg
cmp
es
ret
or
arpl
test
push
loope
movl
lds
mov
les
int3
out
push
shl
push
sub
fadds
add
fs
jge
call
aas
push
out
or
fadd
popa
test
cmpsl
xor
sub
mov
mov
cltd
push
mov
cmc
adc
pop
ds
adc
push
jg
or
gs
fcompl
loopne
std
movsb
and
fst
adc
filds
push
mov
jle
and
shrb
es
push
push
js
inc
mov
xor
xchg
pop
outsl
frstor
aam
inc
rcr
pop
and
fisubrl
xlat
test
stc
inc
mov
shll
pop
and
sbbb
lahf
jno
bound
adc
popl
shlb
test
push
xchg
in
int3
or
icebp
fwait
ss
dec
aad
stos
push
ljmp
test
inc
sbbl
ret
mov
push
add
pop
adc
adc
and
jge
add
push
pop
mov
pop
ret
mov
cmp
or
mov
mov
cmpsb
jmp
daa
arpl
fcompl
in
inc
rolw
arpl
inc
pop
mov
shrb
loopne
mov
cmp
add
jne
mov
movsb
cmpsl
mov
push
bound
mov
lds
sbb
xchg
mov
aam
push
inc
jge
jmp
repnz
jne
outsb
pop
insl
sarb
lahf
mov
cmpsl
mov
mov
nop
insb
fists
cmpl
testl
mov
dec
push
nop
sti
jne
or
incb
cmpsl
lahf
out
push
test
loopne
or
out
and
mov
pop
mov
push
dec
cmpsb
orl
iret
push
cli
repnz
shll
and
inc
adc
rolb
mov
test
mov
in
xlat
adc
mov
cli
ljmp
pusha
bound
orb
mov
xchg
sahf
aaa
lea
repnz
inc
testl
mov
imul
cli
push
sbb
outsb
sbb
sahf
lock
or
stos
into
and
mov
or
fstps
xor
mov
mov
movsb
sarb
fwait
test
mov
cwtl
ds
push
dec
mov
ficomps
loop
jge
into
scas
mov
sbbl
dec
jg
int3
arpl
pop
ss
bound
into
nop
dec
cmp
test
dec
push
shlb
test
or
dec
push
inc
mov
jge
adc
push
out
in
test
mov
jbe
int3
mov
ds
pushf
pop
sub
test
push
sahf
shll
pop
mov
aad
push
push
mov
mov
fistpll
xorb
xchg
pop
ret
jg
int3
inc
out
movsb
or
stos
xor
popf
xchg
cmpsb
lock
mov
push
mov
inc
test
ror
lret
insl
lock
pop
nop
push
sub
push
pop
push
ret
movsb
jle
test
mov
dec
hlt
lods
std
js
loop
sub
aas
es
add
mov
adc
notb
sub
pop
lret
dec
popa
mull
leavew
shll
or
imul
mov
xchg
fmuls
sbb
cmp
sbb
negb
fldz
je
or
sbb
nop
xchg
cmp
out
in
pusha
fadd
mov
push
je
hlt
out
adc
ror
add
push
xor
mov
ja
mov
xor
lods
ljmp
out
aaa
repnz
cli
pop
jle
xor
jmp
inc
movsl
xchg
aam
das
ficoml
std
leave
in
mov
mov
push
cmp
int
in
push
lahf
sbb
cltd
stc
pop
int
xorb
cwtl
shlb
sahf
es
dec
and
adc
cwtl
divb
dec
xorl
push
cmpsl
and
shrb
xchg
fcmovne
roll
push
sub
lahf
stos
sar
mov
inc
ret
adc
sahf
xchg
jle
ffree
mov
lods
std
frstor
adc
loop
push
out
je
add
adc
pop
add
mov
inc
inc
mov
cld
push
out
mov
xchg
mov
dec
scas
fcomip
in
imul
cmpsb
sub
or
mov
dec
xchg
jmp
out
dec
mov
insb
ljmp
andl
hlt
mov
push
xchg
mov
fsubs
sbb
jge
pop
sub
mov
or
pop
mov
or
stos
loop
add
arpl
or
or
cmp
jno
or
inc
inc
call
in
aas
jge
insl
adc
or
push
or
pop
xchg
enter
push
test
xchg
pop
pop
xchg
mov
mov
inc
mov
es
shll
mov
psllq
retw
data16
cmp
test
loop
cmp
adc
mov
or
xor
imul
fwait
mov
mov
cmpsl
iret
jnp
jb
lcall
ds
fs
adc
jbe
sub
mov
lds
and
add
ljmp
adc
jbe
pusha
adc
in
test
pop
daa
andl
cli
dec
adc
jb
cli
mov
lods
push
mov
or
sub
xchg
ror
cmpsb
push
inc
call
pop
jnp
scas
in
jae
mov
jnp
sub
arpl
mov
and
pop
push
fnstsw
shlb
ds
dec
shrb
push
stos
mov
es
cmpsl
fildl
lcall
push
leave
sarl
mov
pop
and
dec
add
enter
ret
jbe
push
cmpsl
push
inc
cltd
and
movsb
mov
dec
push
mov
adc
lret
mov
pop
lods
cmp
push
jo
cmpsl
test
sub
fcmovb
call
or
int3
addr16
xor
es
lods
jecxz
outsl
xchg
xchg
pop
fwait
sbb
pushf
js
fimull
cmpsb
repnz
imull
fisttpl
hlt
and
call
cmc
xorl
and
add
and
pop
pop
je
fadds
sbb
rclb
out
imul
cmpsl
shr
mov
mov
mov
inc
lret
into
cmp
nop
mov
xor
cld
dec
popa
inc
out
test
cmpsl
sub
adc
imul
aad
and
fs
cmpsb
push
push
sbb
cmc
mov
stc
in
cmpsl
rcr
arpl
cmpsb
push
jno
into
cmp
xor
stc
jg
cmp
xor
xlat
lock
mov
out
xchg
mov
fstps
fldt
fwait
jg
test
lret
adc
dec
ror
mov
rclb
mov
add
ljmp
jecxz
daa
or
out
addr16
in
lock
es
lahf
push
int3
ret
cmpsb
mov
dec
mov
jae
into
xor
lods
dec
jae
xor
mov
repnz
ljmp
mov
add
icebp
int3
movsb
cmpsb
cmpsl
fists
aas
mov
mov
out
dec
mov
icebp
mov
out
loop
repz
mov
dec
dec
rcrl
pushf
mov
mov
dec
pop
dec
xor
push
popf
push
add
adc
mov
lock
aas
cmp
or
leave
pop
mov
out
cmpsb
rcll
or
jae
cmpsl
ljmp
jns
mov
in
sbbl
inc
cmpsb
pop
jl
stos
dec
push
or
add
push
ret
push
adc
addr16
shl
fwait
lods
loope
push
dec
nop
cmpsb
out
int3
xchg
data16
xchg
rcll
pop
mov
pop
or
out
cmpsl
hlt
out
insl
push
cmpsb
jle
shll
lods
mov
imul
test
popf
insb
ret
pop
fcompl
fidivrs
outsb
clc
inc
ficoms
jmp
cltd
mov
mov
fcmovu
pop
fimuls
into
jns
sar
xchg
add
int
fs
pop
lahf
cs
lock
sbb
aam
dec
fbld
pushf
fimull
and
shlb
cli
dec
loop
sub
sarb
ficomps
fdivp
xchg
fiadds
jmp
cs
rol
xchg
and
ds
mov
fiadds
mov
fmuls
xor
es
rcl
sahf
xchg
mov
adc
dec
fmulp
loope
inc
popf
movsb
pop
mov
test
es
divb
xchg
das
fsubl
push
in
loop
out
xchg
loop
loope
out
enter
add
enter
loope
mov
fcomip
out
clc
loope
fidivl
out
dec
jbe
into
adc
test
ret
jp
adc
sub
cmp
push
and
rorl
sbb
mov
or
xlat
data16
xlat
pop
push
fildll
push
inc
push
rcll
add
stos
out
cmp
insw
mov
xor
mov
add
pcmpgtd
inc
push
into
add
movd
push
mov
mov
pop
xor
push
xchg
or
xchg
jle
push
incb
es
push
or
ds
stos
and
push
dec
mov
inc
pop
scas
and
inc
push
pop
push
jp
pusha
push
shr
add
and
pop
orb
ljmp
mulb
ret
adc
data16
inc
icebp
into
add
out
fidivrs
inc
lret
ds
lcall
es
ret
out
push
cmpsb
xor
clc
push
inc
gs
jne
ror
or
xchg
jp
ljmp
ljmp
aad
inc
out
test
xchg
mov
test
mov
mov
push
inc
inc
adc
jge
xchg
push
idivb
insb
ds
jnp
test
mov
lock
mov
pop
scas
jle
mov
repnz
sbbb
xchg
pop
push
cmpb
or
clc
jno
cli
pusha
sbb
push
mov
call
cli
sbb
insl
cmpsl
xchg
push
adc
and
out
mov
jae
adc
shll
scas
popa
adc
stos
xchg
andb
aas
aas
jb
lds
mov
pop
aam
insl
adc
mov
arpl
insb
jge
mov
and
es
lret
or
cmp
pop
mov
cli
add
sbb
xor
jg
ss
pop
fdivl
jg
jns
les
fdivrs
mov
rcll
ja
outsb
push
sub
and
pop
mov
out
dec
xchg
int3
jo
adc
jle
mov
ja
pop
mov
sub
jae
lods
lea
ds
jle
in
pop
nop
push
rorl
pop
or
int
pop
sbb
or
inc
pushf
loop
out
mov
xchg
jle
jge
out
scas
cmp
dec
shlb
xor
fisttpl
mov
cmp
addr16
das
sbb
lock
es
movsb
jmp
or
push
jecxz
dec
xorb
mov
std
cmpsl
popf
insl
and
fwait
push
xlat
addr16
ret
mulb
jle
sar
roll
mov
xor
xor
leave
sbb
dec
xchg
jle
out
es
cmp
data16
mov
dec
jo
ljmp
mov
push
pop
ret
jle
push
ret
xor
rcll
int
out
mov
sbb
xchg
and
sub
cmp
jp
xor
jmp
mov
ret
jo
popa
jmp
push
call
add
mov
or
push
pop
lahf
mov
inc
add
fimuls
js
xor
and
and
addb
negb
dec
fistps
mov
loopne
xlat
cmpsl
mov
adc
cmp
lock
lahf
jl
xchg
cli
add
sub
cmpsl
pop
or
ret
or
fadds
and
hlt
pushf
inc
jae
adc
sbb
test
pop
cwtl
adc
sbb
push
test
dec
push
mov
or
aam
je
mov
fidivs
pusha
mov
lret
aad
in
push
mov
mov
pop
xchg
call
lret
mov
pop
push
cli
cmpsb
frstor
movaps
sbb
jp
add
push
push
dec
adc
pop
andb
pusha
ret
push
add
idivb
sbb
mov
mov
inc
je
or
into
cmpsl
cmp
xor
ficoml
cmp
sub
outsb
mov
jl
jns
push
mov
aas
push
ret
jno
in
mov
lret
in
push
cmpsb
icebp
pop
insl
das
xchg
mov
into
inc
data16
movsb
pop
out
push
popa
cmpsb
adc
fidivrs
lret
lods
ficoms
pop
dec
dec
cmp
out
je
out
mov
adc
cmc
push
pop
clc
dec
cmp
dec
mov
js
cli
lods
add
jg
mov
aad
andb
repnz
aas
push
dec
cmp
nop
es
clc
call
push
leave
dec
shrl
sbb
inc
out
es
rcr
mov
dec
fdivr
pop
cmc
or
add
mov
sub
jmp
daa
mov
cs
mov
add
ljmp
out
test
jecxz
sbb
pop
add
repnz
ret
sub
dec
roll
test
out
mov
call
jmp
fadd
shll
jnp
icebp
ret
push
int
mov
fwait
sahf
inc
ljmp
dec
pop
and
sbbl
dec
xor
or
adc
fnstcw
sarb
mov
inc
push
jecxz
inc
nop
add
and
push
dec
and
aam
insl
jl
es
fisubs
and
stos
rorb
out
mov
jge
rorb
cmp
cld
mov
fistpll
jne
and
xchg
cmpsb
jmp
jg
xchg
incb
inc
leave
adc
das
mov
push
pusha
push
test
pop
dec
and
fcmovnb
pop
cmp
mov
std
jg
mov
es
test
lods
shlb
lock
sbb
push
cmpsl
sbb
cmp
adc
dec
in
scas
jmp
cmp
mov
pop
inc
xchg
or
lret
bound
fdivrp
cmpsl
mov
je
sti
ljmp
loope
rolb
xchg
mov
ljmp
iret
out
cmp
aad
pop
jo
popa
es
rcll
rcrb
rcr
add
bound
sub
cmpsl
cmc
icebp
mov
cmp
push
xor
inc
jo
inc
iret
mov
fsubl
ds
test
pop
and
mov
int
orb
out
adc
push
int3
mov
adc
pop
jne
mov
imul
mov
cmp
lret
inc
push
incb
push
push
sbb
jae
out
lods
xchg
add
aas
or
inc
sti
xchg
test
inc
dec
xor
cwtl
ss
int
jo
push
daa
lds
mov
lock
mov
adc
fcmovbe
inc
push
dec
ds
jb
popa
movsb
int
fs
aad
ds
nop
jo
pop
mov
arpl
push
jae
aad
shl
cmpsb
repnz
aad
sub
divb
adc
or
cmp
mov
test
push
popf
cld
loopne
cmpsl
xchg
pop
xchg
dec
je
std
aad
mov
push
lret
or
nop
mov
adc
push
lret
jo
outsl
jl
cli
sbb
mov
in
or
add
cwtl
icebp
push
stos
enter
push
in
loopne
rcrb
rorb
cmp
bound
call
in
or
pop
pop
ljmp
sarb
andb
in
inc
rorb
jmp
dec
mov
aad
int
sub
mov
outsl
or
es
add
orb
push
push
clc
xchg
mov
jno
pusha
jmp
pop
cmpsb
shr
xchg
inc
mov
and
sbbl
jp
pop
in
aam
data16
mov
les
nop
pop
pop
xchg
js
pop
or
data16
cmpb
sbb
ret
sarb
faddl
aaa
out
sbb
inc
rcrb
push
xor
dec
outsb
aad
call
inc
popf
sarl
out
daa
pop
lret
int3
add
dec
cmpsb
repnz
into
das
xor
inc
pop
adc
cltd
sub
pop
sub
cmpsb
jp
ja
cltd
inc
and
mov
push
xchg
ret
aad
cmpsb
out
cs
cmp
enter
and
pop
inc
rorl
inc
insl
fisubs
push
mov
sbb
loopne
out
ljmp
cwtl
jns
cmp
xor
pop
sbb
call
adc
push
cmp
pop
repnz
testl
enter
inc
sbb
aam
mov
xchg
adc
push
pop
test
data16
add
inc
ljmp
dec
push
cmc
inc
cmp
jo
lret
inc
xchg
sub
pusha
inc
cmp
test
shr
adc
loopne
pusha
pop
inc
cmp
scas
jl
or
insb
aad
jns
jne
inc
mov
push
call
pop
dec
shll
push
pop
inc
mov
jg
dec
divl
mov
fmulp
loop
popf
xchg
push
jle
loope
sbb
and
xor
jl
cltd
add
inc
repnz
pop
xchg
in
ss
inc
cmpsb
push
xchg
int
pop
adcb
mov
ficoms
pop
loop
test
jno
out
lock
jbe
or
fnsave
inc
dec
lcall
roll
mov
adc
rcrb
repnz
mov
jbe
loope
mov
int
and
lods
fisubs
inc
mov
lds
in
or
xlat
push
ret
mov
fisubrs
cmpsb
or
lret
lds
call
mov
mov
or
aas
lret
push
jl
insl
or
jl
aas
loop
adc
add
add
mov
cmp
add
sti
sub
popf
mov
push
cmpsb
into
in
loopne
xor
daa
xor
setnp
adc
lahf
in
into
leave
add
cmp
jno
repnz
sbb
testb
loope
jbe
dec
mov
ja
adc
push
mov
sub
dec
cmpsb
sbb
mov
cld
jae
push
ret
fisubl
cs
aad
dec
dec
in
push
sbb
dec
das
dec
imul
idiv
out
dec
dec
xor
jo
adc
lock
aaa
pop
mov
pop
cmp
out
mov
jp
push
sub
repnz
jg
rcrl
loop
xor
dec
xchg
mov
inc
mov
iret
aam
cmp
push
mov
out
pop
mov
int
mov
lret
cltd
call
imul
aam
inc
outsb
xor
leave
xchg
cmpsl
xor
fcompl
cmpsb
mov
push
aas
inc
push
fdivr
dec
jp
add
enter
sbb
pushf
hlt
daa
shll
cmpsl
sbb
pop
mov
rcl
inc
ljmp
mov
xor
lcall
adc
mov
dec
mov
repnz
cmpsb
pop
shl
lds
test
mov
jno
inc
jle
outsb
inc
cmpsl
pop
ljmp
clc
aad
dec
loopne
mov
bound
pop
lret
cli
sbb
aaa
in
jne
pop
iret
or
inc
jecxz
jl
cmp
push
mov
cld
aad
jle
sti
inc
roll
iret
sarl
popf
inc
repz
imul
rcrb
jg
pushf
push
cmpsb
in
icebp
lods
push
add
mov
cwtl
aad
cmpsl
out
ret
push
stc
in
cmpsb
and
loope
cmp
push
push
sbb
jmp
ss
add
push
movsb
push
jg
dec
imul
and
lods
sbb
cmp
imul
dec
outsl
cmp
hlt
xlat
into
jl
sub
bound
ds
out
xchg
clc
aas
cmpsl
pop
push
or
rcll
idivb
adc
xor
pop
loop
mov
dec
adc
dec
cltd
adc
mov
push
jg
arpl
mov
xlat
cmp
push
inc
cmpsl
popa
jns
dec
into
push
test
jmp
ljmp
std
adc
push
mov
dec
seto
jmp
test
sbb
adc
les
stos
mov
dec
sub
and
out
rorb
pop
mov
test
inc
sbb
lcall
mov
in
lods
repz
dec
xor
pop
cltd
or
ljmp
es
cmc
test
push
or
shlb
push
jbe
mov
idivb
sub
lahf
in
int
sub
and
pusha
rclb
pop
pop
out
jne
cmpsl
out
adc
mov
inc
ljmp
fsub
sahf
bsr
out
or
jbe
adc
fidivs
inc
inc
xchg
adc
inc
fnstcw
out
ljmp
cld
push
mov
popf
cmp
pop
pop
push
mov
mov
cmpsb
xchg
sahf
push
es
addr16
dec
push
mov
and
jl
decl
int3
dec
js
es
icebp
and
add
lret
in
aam
pop
xchg
fs
mov
add
lcall
ret
hlt
in
stos
jnp
mov
test
pop
mov
xchg
rclb
ss
mov
cli
fwait
shr
pop
xchg
jge
cmp
es
mov
in
jne
xor
rcll
push
inc
mov
inc
mov
sbb
fstpl
jmp
jecxz
inc
dec
xor
xchg
pop
fiaddl
cmpsb
pop
outsb
or
lret
mov
jns
xchg
and
push
rcrb
sbb
ffreep
in
push
adc
or
xchg
in
cmpsb
sbb
inc
cmpsl
ljmp
dec
ds
test
loop
adc
iret
jmp
js
cs
lods
push
cmpsl
dec
push
or
loope
ret
sub
xchg
jl
pop
daa
sti
fcomp
add
push
mov
popf
pop
add
dec
xchg
out
nop
fimull
pop
push
mov
dec
ja
std
cmp
mov
mov
cmpsl
bound
mov
or
inc
in
pushf
test
in
adc
in
std
adc
repz
sub
push
out
jae
in
loopne
pop
out
or
jg
cmp
mov
scas
mov
mov
cmpsb
mov
and
mov
ja
jb
pop
ds
div
fwait
idivb
xor
fcom
enter
or
out
adc
lods
lock
jmp
inc
ja
push
and
cmpsb
ret
cmpsl
ljmp
pushf
mov
mov
and
clc
inc
es
mov
jge
aaa
mov
mov
inc
and
cmpsb
inc
jle
rolb
and
shll
push
mov
or
dec
pop
lahf
cs
shlb
jno
dec
and
push
arpl
mov
dec
add
push
dec
xchg
stos
fsts
cmpsb
ja
add
cmp
aas
push
testb
mov
pop
or
repnz
dec
sbb
adc
adc
inc
je
mov
jp
jne
ret
dec
mov
lahf
inc
outsb
cmpsl
arpl
mov
stos
xchg
push
jecxz
into
and
xchg
test
mov
mov
jnp
dec
sub
fisubl
or
test
adc
mov
add
insl
sbb
movsb
pop
popf
movsl
mov
inc
fsubrp
mov
mov
sbb
mov
jle
pop
ret
dec
cmpsb
out
and
sbb
xor
pop
icebp
aas
push
in
push
inc
pop
into
dec
xor
leave
push
push
mov
aad
out
push
fsin
es
jecxz
fcoms
push
xor
mov
out
loopne
push
nop
cmpsl
jecxz
jge
jo
lret
insb
aaa
and
mov
sbb
inc
pop
add
loope
xchg
and
imulb
pop
shlb
cmp
outsl
inc
out
and
push
sbb
mov
leave
cmp
inc
mov
push
pusha
dec
pusha
int
xchg
gs
jecxz
outsl
aaa
inc
ret
js
rorl
pop
scas
les
aaa
fnstenv
push
out
xorl
mov
aam
lcall
mov
rclb
inc
push
jl
inc
adc
dec
xchg
jns
and
imul
xchg
lods
sub
adcl
push
ret
pusha
jne
sbb
incb
mov
pop
mov
jmp
push
mov
dec
call
cmp
leave
jns
jmp
nop
xchg
or
andl
icebp
mov
call
iret
and
pop
data16
ja
xchg
rcll
jmp
or
push
adc
ret
xchg
pop
adc
fcom
dec
cld
mov
leave
jbe
pop
loopne
pop
movsb
in
test
add
out
xchg
out
aam
inc
mov
aam
cmpb
xchg
lahf
sbb
arpl
or
movsl
adc
ss
shll
orl
inc
sbb
inc
jecxz
jo
xor
lcall
mov
dec
mov
ljmp
clc
testl
cmpsl
add
je
mov
pop
andb
loop
pop
pop
inc
inc
jne
pop
out
lea
dec
jae
cmpsl
outsb
or
inc
dec
stos
hlt
or
or
rcr
ljmp
push
aad
push
aam
js
inc
adc
push
pop
or
dec
sti
sub
rcrl
pop
add
dec
ss
pop
and
str
dec
xorl
je
inc
pop
push
xchg
xsavec
je
push
xchg
imul
xor
cmp
inc
into
scas
inc
leave
xor
inc
ret
in
nop
data16
jbe
xchg
cmpsb
cmp
mov
push
fimuls
outsb
inc
in
jmp
iret
cmp
sub
xlat
mov
rcr
sub
jbe
dec
nop
das
lds
cli
fstl
aas
insb
mov
es
xor
sub
cmp
pusha
pop
xchg
dec
xchg
dec
and
mov
pop
xor
xchg
shl
test
sub
inc
push
cmpsb
cmp
nop
mov
in
stos
stc
imul
cltd
out
sarb
in
jb
orb
ret
push
test
sub
adc
movsl
int
pop
xorl
jne
pop
adc
add
cli
inc
mov
or
sub
ja
sub
cwtl
and
lret
pop
jl
icebp
pop
stos
jne
and
popa
addr16
std
sbb
jle
cmpb
cmpsb
pushf
xor
jae
jge
adc
add
pushf
in
je
push
adc
mov
cmpsb
xchg
pop
sbb
adc
enter
inc
fwait
ret
or
xchg
jnp
ror
mov
push
mov
sub
lock
pop
call
adc
inc
xor
out
out
mov
sbb
mov
loopne
sbb
jns
nop
sub
cmc
nop
inc
inc
cmpsl
stos
loope
pop
mov
sub
cmpsb
pop
xorl
xor
daa
push
sbb
and
repz
push
ret
mov
adc
into
cltd
addb
cli
cltd
jns
cmpb
mov
dec
or
cwtl
mov
fisttpl
jge
xlat
repnz
add
scas
pusha
xor
adc
daa
out
ljmp
in
xchg
leave
jmp
leave
or
mov
sbb
push
inc
cmpsl
inc
inc
push
int
jnp
push
decb
std
xchg
sbb
fildl
jae
mov
stc
push
cmpsl
push
add
jnp
inc
dec
mov
xor
mov
scas
push
es
or
xor
stc
jb
mov
xchg
aas
xchg
aam
inc
xor
popa
pop
repz
data16
or
push
pop
call
fsubrl
fiadds
inc
or
jmp
sub
xchg
nop
add
stos
in
mov
pop
adc
push
mov
dec
gs
adc
add
into
js
dec
ret
andl
mov
add
push
mov
mov
dec
dec
pop
push
xchg
and
js
pop
pop
fldenv
inc
mov
mov
cld
fwait
popf
nop
mov
xor
aas
in
hlt
imul
fld
or
aas
and
test
mov
stos
loopne
adc
mov
push
xchg
ja
rcrl
or
inc
dec
inc
mov
ret
outsb
mov
xchg
pop
pushl
hlt
jmp
and
inc
cmp
imul
std
pop
cmp
in
cwtl
jmp
out
pop
cmp
leave
addr16
mov
dec
push
xchg
sarb
outsb
cmp
cmpsl
pop
xorl
and
or
or
aas
cmpsb
icebp
jecxz
mov
jmp
out
mov
sbbl
in
repnz
jo
adc
lods
je
push
loopne
mov
lds
mov
add
pop
insl
cmpsb
jecxz
mov
sub
sbb
pop
xlat
jp
ss
push
lea
outsl
outsb
inc
scas
inc
test
repnz
fucomp
loop
ret
adc
dec
adc
and
xchg
pop
pop
dec
rcll
xchg
outsb
xchg
or
inc
mov
outsb
dec
ljmp
stos
ficoms
sub
or
jl
mov
push
add
pop
ds
mov
and
int3
pop
pusha
mov
incl
push
pop
sbb
inc
dec
push
mov
lahf
out
out
xchg
leave
sbb
daa
scas
inc
xchg
lret
cmpsb
mov
dec
jae
mov
adc
loop
data16
imul
jae
lods
mov
jnp
sub
add
or
call
sub
lahf
leave
xchg
and
enter
cmc
sub
xchg
dec
mov
sub
test
xchg
inc
ljmp
sarb
es
mov
pop
sub
ret
push
pop
cmpsl
mov
jb
sub
in
shll
push
mov
adc
jl
add
std
in
cld
cmpsb
arpl
sbb
mov
cmp
add
lea
mov
fnclex
xchg
push
or
fsubs
dec
mov
push
adc
push
jbe
jne
aad
sarl
xchg
out
jbe
and
sbb
rol
jle
es
jb
inc
pop
dec
das
sbb
sbb
cli
jnp
pop
addl
push
push
xor
ja
xor
imul
out
lds
and
iret
sbb
xchg
jo
shrb
inc
stc
adc
scas
jge
nop
inc
loope
sub
shlb
decb
aaa
loopne
imul
push
jns
jo
push
popa
leave
cmpsb
sarb
call
inc
push
faddl
cltd
aas
paddd
into
popf
gs
adc
and
aad
loopne
push
dec
jo
jmp
push
test
sbb
movsb
mov
loopne
jl
add
sarb
cmpsl
xor
out
movl
ljmp
dec
mov
pop
fidivrs
jne
or
or
into
push
push
sahf
xor
or
out
mov
std
push
lock
leave
jg
mov
sbb
pop
sti
adc
test
cmpsb
enter
xlat
cmpsl
je
pop
push
pop
mov
jbe
shlb
adcb
lcall
nop
jecxz
cmpsl
mov
outsb
mov
imul
add
call
add
cli
repnz
push
inc
mov
push
xchg
adc
outsl
add
arpl
push
inc
inc
outsb
pop
or
jbe
inc
je
jae
add
call
xor
fistpll
mov
cmpsl
inc
cmp
push
cmc
pop
pushf
shlb
aad
mov
mov
push
pop
into
lret
addl
cli
xor
adc
jp
xchg
mov
cmpsl
das
push
ror
dec
jge
nop
or
push
inc
adc
lock
ljmp
xor
addl
loop
push
cmpsb
dec
jle
mov
dec
dec
push
mov
sbb
scas
stos
mulb
push
cs
nop
inc
jmp
push
out
adc
repz
mulb
cld
jmp
and
lret
es
aaa
ljmp
repz
mov
bound
iret
inc
imul
insb
lret
cmp
sbb
push
rcll
mov
cmpsl
or
xchg
scas
xlat
in
insl
aad
cli
std
dec
repnz
add
cmp
sub
xor
pop
adc
imul
loopne
adc
test
pop
into
inc
mov
mov
and
cmp
add
loopne
pop
dec
in
cmc
jbe
mov
bswap
push
push
sbb
adc
test
jecxz
adc
aas
es
daa
idivb
xor
and
dec
add
daa
lret
jo
pusha
mov
sbb
mov
iret
mov
aam
int
mov
mov
cmpsb
xchg
movsl
shll
xchg
cmc
subl
dec
xchg
pop
icebp
into
ret
jae
sbb
cmpsl
mov
sbb
int
inc
hlt
testl
loopne
nop
dec
cmpsl
imul
xchg
add
stos
ficoms
dec
pop
mov
fldenv
outsl
cmp
ret
lcall
fsubs
mov
das
in
ljmp
push
jb
imul
push
aaa
aam
lret
clc
push
fisubs
fs
mov
rol
xor
mov
call
les
cmpsb
pop
and
add
inc
push
cmp
outsl
adc
lea
bnd
jae
popa
xchg
lret
aas
jns
imul
inc
movb
mov
in
addb
inc
xchg
dec
inc
xchg
jle
and
inc
inc
xlat
int
jbe
adc
adc
or
nop
mov
adc
int
ficoms
cwtl
inc
mov
sbb
lods
mov
dec
xlat
repnz
lods
jp
sbb
outsl
in
mov
ret
cmp
adc
sbb
loop
in
inc
add
mov
push
shrl
cmp
test
pushf
or
sbb
test
push
mov
push
cld
loop
mov
scas
jl
or
shl
lods
and
inc
aad
mov
jbe
sbb
jp
movsl
stos
cmp
inc
movsb
dec
ret
in
out
enter
int3
xor
aas
addr16
fdivrs
push
cmp
add
in
es
jg
push
sarb
push
ljmp
jmp
loope
sahf
repnz
push
inc
addl
mov
jb
adc
inc
jno
xor
addb
stos
faddl
or
fdivr
add
push
sub
mov
pop
dec
ja
jo
outsb
cmpsb
pop
shll
imul
adc
or
pop
and
adc
outsb
mov
sbb
dec
rolb
dec
ljmp
lahf
push
inc
or
cmpsb
or
rolb
xchg
dec
sbb
pop
in
lock
adc
cmpsl
sbb
push
or
lods
imul
ret
ds
test
push
xchg
popa
push
push
stc
nop
inc
cmp
fwait
ds
push
mov
and
inc
xor
cmp
adc
int3
push
jbe
jge
jno
cs
aam
cmpsl
jbe
or
push
mov
andb
pop
or
out
mov
js
jp
dec
ffree
cmpsb
pop
or
pop
out
push
mov
jno
jns
sub
add
xchg
fcoml
mov
push
mov
and
js
je
mov
insb
cld
mov
in
daa
or
adc
jle
es
xchg
push
ret
push
fwait
pop
fiaddl
cld
inc
mov
pop
push
mov
dec
mov
add
test
shlb
adc
add
mov
push
jbe
fcoms
cmpsb
jnp
inc
jno
rol
jno
shl
sar
jp
xor
mov
hlt
mov
popa
lods
mov
daa
mov
sbb
cmpsb
add
xchg
pushf
push
dec
mov
xor
add
cmpsb
and
leave
cli
sti
mov
or
adc
out
clc
jno
addb
push
andl
pop
sbb
test
add
bound
and
aad
subl
jecxz
dec
push
xor
pop
das
xchg
loop
stos
mov
adc
pusha
sbb
nop
lea
aas
sbb
cmpsl
add
push
cmc
loop
adc
adc
mov
cmpsb
in
and
adc
adc
leave
sub
or
jl
leave
pop
jg
je
push
ljmp
xchg
call
rolb
ret
xchg
dec
nop
bound
add
mov
lcall
shrb
push
je
outsl
iret
in
cmpsl
imull
pusha
mov
incl
aas
pop
mov
adc
lcall
ret
xor
pushf
add
pop
les
cmpsb
add
bound
add
xor
sbb
std
mov
jmp
xlat
iret
andl
xchg
and
and
pop
sbb
cmpsl
or
add
push
xchg
imul
mov
jg
dec
jnp
sub
je
mov
cmp
lea
sbb
daa
sbb
adc
pushf
pop
movsl
incb
mov
sbb
in
and
add
dec
les
inc
add
push
mov
daa
shrl
pop
dec
xor
cmp
cwtl
pop
insb
mov
mov
pop
adc
add
rcrb
in
addr16
mov
mov
sub
jnp
and
sub
add
clc
int
lahf
sbb
push
push
and
inc
aad
dec
or
push
fisubs
dec
dec
pop
mov
test
sbb
mov
dec
pushf
outsb
lahf
sbb
dec
adc
bound
push
sbb
cld
leave
jbe
out
pusha
xchg
cwtl
imul
arpl
jge
xchg
inc
pop
sub
dec
movsb
sub
aas
frstor
loop
fwait
push
rorl
movsl
stos
or
movb
cld
pop
shll
jns
fsubl
xchg
daa
or
dec
loope
movb
aam
jae
jno
ret
dec
leave
jb
ljmp
outsb
das
into
outsl
leave
inc
mov
add
mov
nop
js
push
aas
inc
pop
into
cwtl
cmpsl
faddl
aaa
loop
lods
dec
fwait
and
cmpsl
gs
mov
sbb
jecxz
lods
inc
out
mov
cmp
aaa
test
adc
loopne,pt
insb
sub
inc
inc
repz
lret
shlb
jg
out
add
mov
mov
idivb
cli
sbb
or
je
adc
push
cld
stos
mov
xchg
jb
jbe
in
pop
jp
dec
dec
testb
cs
and
test
nop
push
fistl
leave
rorb
js
cwtl
shr
sbb
iret
pop
ficomps
push
push
or
roll
jo
aaa
ret
roll
xor
mov
out
sbb
pushf
ror
mov
push
sub
stos
lds
rorb
inc
out
jge
adc
push
push
sbb
jmp
pop
clc
fisubrs
jns
push
mov
into
js
pusha
and
or
or
inc
add
mov
shll
mov
cmpsl
rcrl
ret
es
jbe
sub
inc
daa
ja
xor
notb
or
shl
sbb
leave
xlat
std
xor
data16
lea
negb
adc
mov
and
mov
sti
rorl
out
mov
loope
mov
scas
std
jnp
aam
cmp
sbb
push
inc
into
dec
inc
xor
push
mov
out
cmpsl
fimuls
push
jns
mov
mov
out
add
outsb
lret
cmpsb
or
jg
jecxz
xor
add
mov
cmpsb
pop
call
and
sbbb
sbb
dec
les
push
add
fs
std
adc
jmp
jbe
pop
ja
iret
mov
shl
call
leave
ja
adc
in
and
mov
testb
jmp
or
mov
sub
outsl
lods
cmp
movsl
xchg
lret
stos
fcoms
mov
gs
mov
push
xchg
mov
addr16
jl
jns
xor
or
popf
sahf
mov
dec
jp
or
push
or
cld
js
lods
shrb
cld
lods
and
xchg
aad
ds
mov
stos
sbb
je
shr
jmp
cmpsl
cmp
push
sub
ja
jecxz
stc
sbb
and
repnz
je
adcl
sbbb
lock
mov
push
cmpsl
ds
xchg
ds
dec
mov
adc
rdpmc
sbb
mov
xchg
dec
ja
inc
cmpsl
adc
adcl
outsb
add
push
pop
adc
dec
adc
pop
push
int3
xor
jmp
test
adc
nopl
adc
arpl
sub
cmpsl
adc
mov
nop
xchg
inc
bound
jmp
pop
test
xchg
lods
add
xchg
dec
sub
jbe
mov
xchg
mov
cmpsb
aad
outsl
pop
push
or
jg
adc
iret
enter
leave
shlb
add
push
add
mov
scas
incl
ljmp
shlb
jge
and
in
mov
lret
pop
adc
cld
push
cmpsb
ljmp
inc
cltd
aam
mov
pop
fildll
testl
mov
cld
push
add
dec
xchg
xor
in
or
dec
sbb
pop
adc
js
ret
mov
cmpsl
mov
mov
aas
mulb
lcall
in
out
es
scas
adc
inc
xchg
sti
or
ret
mov
xor
shll
mov
sub
popa
inc
jge
inc
and
ds
inc
mov
jle
push
jns
dec
push
add
enter
rcrb
insl
andb
pop
lock
xchg
paddq
mov
call
repz
ss
cmpsl
sti
inc
pop
pusha
icebp
mov
push
mov
int
inc
arpl
dec
imul
pop
outsl
cmc
daa
cmp
add
or
inc
ss
push
mov
jp
int3
cmpsb
in
jp
dec
jo
add
cmpsb
inc
push
xchg
or
cli
jmp
push
mov
cmpb
jbe
cmp
lods
adc
cmp
leave
int
cmp
mov
stos
pop
mov
xor
cld
or
push
les
cmp
xchg
or
loope
sbb
mov
int
test
dec
inc
mov
mov
adc
xchg
in
adc
ljmp
cmpsb
cmp
cld
xor
mov
mov
rorb
fwait
mov
adc
inc
push
mov
or
inc
pop
cmp
adc
mov
ret
clc
add
cmpsb
aaa
push
add
bound
adc
xor
pop
cmp
mov
pusha
outsl
sub
or
adc
insb
mov
cld
xchg
add
jmp
push
cmp
outsb
loope
jnp
cmc
mov
bound
es
lock
repnz
jnp
mov
in
add
pusha
insb
rclb
popa
pop
xor
movsb
mov
and
decb
mov
andb
mov
adcb
add
or
adc
lock
pop
stc
imul
cmpsl
andl
xchg
mov
inc
inc
pop
popw
movsb
rcr
inc
rolb
aas
decb
and
mov
in
push
in
xor
leave
cwtl
jmp
push
mov
cmpsl
in
mov
int
mov
scas
pop
mov
sti
fistpl
adc
push
pusha
pop
sbb
push
sbb
inc
pop
sbb
jp
and
jle
or
int3
or
push
mov
fwait
push
and
shlb
jle
data16
xor
jl
cmpsl
xchg
dec
push
daa
scas
test
and
inc
cld
xchg
pop
je
fsts
insb
adc
mov
push
sbb
fstpl
add
ds
in
push
cli
push
xchg
jbe
pop
ror
fmull
fcoml
mov
dec
stc
andnps
pop
or
mov
and
mov
scas
mov
idiv
xchg
cmp
mov
or
arpl
subl
pusha
jae
mov
and
jns
lds
mov
sbb
push
out
es
xchg
cmp
mov
lret
inc
stos
inc
inc
out
popf
push
hlt
xchg
in
push
xchg
icebp
xchg
ret
cmpsb
mov
nop
js
outsl
arpl
aad
pop
loop
push
insl
pop
dec
in
mov
sarb
mov
or
flds
push
daa
decb
pop
scas
or
ja
dec
pop
jg
mov
inc
or
push
inc
adc
fisubs
int3
jl
cld
adc
mov
cmp
pop
pop
sub
mov
addr16
into
or
cli
jnp
outsb
mov
cmpsl
outsb
push
imul
ret
xchg
mov
scas
insl
stc
xchg
movsb
shrl
jl
fsub
imul
inc
mov
lahf
xor
pop
cld
leave
aam
and
ja
push
push
cmpl
push
into
into
insl
jbe
ja
pop
xchg
ror
out
dec
and
mov
jb
sbb
mov
lods
popa
call
cmpsl
movl
aas
mov
adc
xor
sbb
sti
jl
dec
jnp
sahf
je
fistpll
adc
rclb
adc
pop
cmc
ds
in
dec
cwtl
mov
dec
add
mov
ja
adc
cmpsl
dec
cmp
cmp
cmp
mov
mov
aam
outsb
lret
aas
push
out
stc
repz
movl
stos
pop
or
inc
dec
jecxz
imul
mov
test
scas
push
test
lahf
pop
movsl
je
aad
aad
mov
dec
sahf
push
push
push
pop
out
jle
mov
add
pop
mov
sbb
in
push
sub
into
incb
mov
movl
sub
loop
push
push
cmpsb
or
and
ret
ljmp
ja
cmp
and
inc
jge
repnz
ficompl
mov
repz
pop
push
ljmp
jg
jg
imul
outsl
aam
xchg
push
pop
sbb
fstl
repnz
inc
and
dec
pop
addr16
pop
shll
push
bound
adc
in
dec
inc
xor
mov
cmp
aaa
rorb
dec
push
jae
shll
xchg
xor
pop
sub
decl
cli
cmp
dec
in
es
ss
out
repz
fwait
jmp
out
push
int
inc
out
pop
push
push
jae
fwait
adc
jae
dec
mov
jge
call
xchg
xor
pop
jno
ja
xchg
cmpsl
out
imul
mov
fisubs
int
dec
mov
pop
ret
stc
out
out
pop
inc
bound
pop
inc
out
lds
ja
xchg
cmpsl
jb
and
pop
jg
cli
cli
nop
fs
dec
jmp
or
sti
addb
cld
mov
cmpsl
call
es
push
in
xchg
leave
cli
iret
mov
sub
pop
ret
dec
pop
inc
xchg
lahf
rol
cmpsl
push
adc
xchg
lahf
mov
jmp
add
jnp
loopne
or
dec
xor
outsl
add
cmpsl
add
clc
mov
dec
pop
pop
rol
mov
or
shll
shlb
in
pop
mov
push
jge
popa
sbb
pop
out
rolb
sub
cmpsl
jns
push
sbb
int3
xlat
outsl
or
in
rcl
stos
push
sbb
int3
dec
jnp
or
mov
xchg
jbe
inc
mov
or
scas
xchg
mov
mov
pmaxub
loop
mov
arpl
test
call
cli
sbb
add
ljmp
pop
sbb
jo
ljmp
aas
mov
sbb
inc
inc
mov
sarb
loop
adc
and
add
mov
insb
es
mov
pop
jbe
rcr
mov
mov
adc
leave
jl
sub
das
hlt
dec
xor
stos
ret
push
push
aam
jbe
or
push
cmpsb
sbb
xor
push
mov
mov
out
pop
push
sbb
test
repnz
pushf
inc
cmpsl
mov
imul
and
mov
ljmp
int
ficoml
icebp
shlb
cmp
add
mov
mov
push
push
lcall
enter
sbb
test
adc
sub
mov
cmp
add
lock
cmp
bound
jb
add
test
sarl
cmpsb
xchg
jbe
xchg
sub
sub
stos
ja
cmp
arpl
fidivrs
fldl
fadd
shll
lds
sbb
pop
jge
mov
popf
test
jo
test
xchg
mov
adc
cmpsl
rorb
fisubs
cmpsb
into
insb
or
adc
xchg
sub
mov
jno
cmpsb
push
lahf
test
dec
cmp
andl
add
xor
test
xchg
movsl
jge
cmpsl
into
test
xor
insb
addr16
sub
and
and
ja
adc
sbb
addl
sahf
dec
mov
sbb
mov
test
xchg
jge
fwait
adc
js
push
js
mov
push
or
and
push
jo
ret
adc
xor
out
out
je
adc
xor
adc
sbb
adc
movsl
push
outsl
ljmp
push
in
rcr
in
mov
bound
clc
stc
ret
and
aad
ds
mov
cld
rcrl
push
ret
outsl
mov
pop
data16
rcl
aad
lcall
cmp
daa
aad
dec
cmpsl
mov
out
fstp
adc
orb
out
dec
mov
movsb
xchg
pop
movsl
sbb
addr16
dec
jne
vpaddd
add
jge
je
push
mov
dec
mov
sbb
nop
adc
daa
xchg
and
xor
adc
dec
sub
pop
jne
in
pusha
dec
ss
push
fistps
or
push
and
add
push
adc
out
pop
lea
stos
aam
jo
mov
sub
ficoms
cmpsb
lock
adc
fwait
imul
sarl
in
inc
mov
push
fidivrs
loop
insl
push
rclb
add
mov
pop
mov
aas
xor
pop
mov
into
cmpsl
mov
cmp
outsl
jg
mov
sbb
leave
leave
mov
pusha
das
rol
inc
sbb
call
mov
cmpsl
adc
cmp
xor
jge
into
mov
inc
ret
mov
pop
int
cmc
push
imul
xor
movsb
push
lods
cmp
imul
popw
es
into
jmp
mov
xor
xchg
xchg
ror
dec
les
dec
mov
outsl
cwtl
push
cmp
test
xchg
and
inc
sbb
lods
sub
imul
stos
inc
jge
imul
outsl
cs
add
push
cmpsb
mov
adc
pusha
hlt
aam
xor
arpl
mov
xchg
loope
outsl
or
push
jp
sbb
push
pushf
cwtl
outsb
adc
inc
jae
in
cmpsb
mov
call
jo
das
cmpsl
in
sbb
mov
in
sti
jae
bound
je
sbb
jg
vandps
scas
push
mov
fsin
pop
jl
push
jo
fimuls
pop
lock
bound
outsb
mov
push
mov
push
adc
xor
push
sahf
test
mov
inc
xchg
es
xchg
ljmp
sbb
jnp
lods
push
mov
inc
jae
pop
shlb
cli
sbb
xchg
pop
sahf
dec
or
imul
je
xchg
xor
ljmp
sbb
cmp
push
test
pop
inc
cmpsb
cmp
jb
idivb
test
inc
imul
pop
idivl
push
sbb
jg
sub
xchg
pop
fisubl
dec
sahf
call
push
push
xchg
pop
subb
jbe
in
sbb
push
es
bound
out
shlb
and
ljmp
lds
inc
push
movb
rorl
stos
inc
fidivs
fcompl
shl
clc
push
repz
aam
and
mov
andb
push
or
jg
fidivl
mov
stos
dec
push
push
shlb
push
pop
lods
outsb
jp
inc
mov
mov
inc
dec
arpl
mov
cmpsb
pop
cltd
lcall
leave
or
xor
ds
sbb
jns
and
out
mov
cmpsb
xchg
or
mov
jl
mov
sbb
int3
jle
sbb
prefetch
or
mov
loopne
stos
adc
jmp
lock
popf
addr16
dec
and
lret
or
mov
pop
pop
push
out
aas
sub
bound
ud1
jnp
push
xchg
xchg
scas
sahf
les
push
xchg
aas
mov
sti
mov
mov
push
rol
loope
clc
adc
push
add
mov
mov
and
lock
xlat
mov
mov
in
mov
or
int
insb
aas
add
lock
aam
inc
rcrb
sub
lcall
push
repnz
add
sub
lret
adc
xchg
and
in
inc
add
adc
xor
mov
lcall
xor
filds
jecxz
mov
andb
test
xchg
les
xchg
inc
lods
pop
nop
pushl
out
xorl
stos
cmpsb
sbb
pushf
add
in
fsubrs
mov
pop
outsb
push
ficoml
aas
jmp
dec
sbb
test
push
test
cmpb
loopne
into
dec
inc
insl
sti
je
xchg
xor
sbb
es
mov
jbe
out
je
or
cmpsl
fidivrs
push
jmp
xchg
das
and
xorl
push
jb
jbe
xor
cmpsl
sub
jge
xor
add
out
repz
mov
inc
cmpsb
push
jne
adc
push
loopne
jae
cmp
scas
popa
jl
mov
push
dec
movsl
in
mov
scas
out
std
mov
inc
cmp
push
mov
cli
mov
pop
xorl
in
addr16
daa
xor
fs
or
fwait
cmpsl
adc
aam
fisttpl
inc
mov
int
pop
add
jo
add
mov
pop
lret
fidivrs
hlt
xchg
mov
mov
pop
lret
ret
lock
sbb
ja
fldcw
push
lock
jns
aad
lret
fnstsw
ja
fildll
pop
xorl
out
mov
out
dec
jb
adc
mov
jmp
dec
aad
sarb
repz
inc
out
repz
pushf
push
rcll
mov
data16
push
clc
or
test
in
mov
adc
cvtps2pd
mov
in
dec
incb
sub
mov
xchg
mov
outsl
shll
adc
or
inc
jmp
iret
push
mov
inc
enter
ret
xchg
and
enter
pushf
jns
push
add
mov
adc
ror
into
or
leave
mov
ret
cwtl
inc
cmp
push
or
jnp
ret
and
jbe
jae
mov
xlat
mov
mov
xacquire
mov
pushf
add
imul
xchg
jg
cmpsb
or
fadds
movb
aaa
dec
dec
cmpsl
test
out
mov
mov
cmp
sub
shlb
bound
leave
xor
xchg
jmp
dec
out
rclb
and
or
jge
js
add
adc
dec
scas
sti
cs
inc
adc
add
inc
sub
out
cmp
mov
test
push
and
and
fidivrs
add
jbe
dec
xchg
sub
dec
test
pushf
sti
insb
and
inc
sbbb
aas
stc
pop
xor
fidivrs
jg
out
dec
cs
dec
cmpsb
push
nop
xchg
into
sub
adc
dec
pop
and
and
cltd
data16
mov
sub
push
fwait
shl
xchg
in
cltd
ds
cmpsb
pop
cmp
push
jae
int3
test
pushf
gs
adc
popf
lds
scas
inc
out
cli
cmp
cmpsl
out
imul
mov
adc
inc
add
or
mov
mov
xchg
scas
aam
push
lods
test
push
add
jnp
push
inc
ljmp
fcmovbe
cmpsb
jecxz
mov
adc
xchg
and
aad
inc
mov
push
cmpsl
jmp
rcrb
dec
addr16
enter
into
add
addl
movsl
dec
mov
rcl
xchg
mov
popa
push
cmc
push
pop
push
inc
cmpsb
or
and
test
cmpsb
insl
pushf
xchg
cmpsb
outsl
sbb
pop
dec
adc
imul
cmp
push
out
xchg
daa
sub
pop
bound
add
js
adc
xor
dec
push
repnz
jge
or
sbb
push
pop
arpl
push
sub
mov
shlb
pop
stc
push
or
jecxz
mov
je
mov
mov
xchg
add
jno
mov
and
jbe
xchg
jnp
push
or
lahf
inc
call
dec
je
mov
cmpsb
mull
cmpsb
sahf
or
mov
mov
add
addr16
ja
push
test
fwait
mov
mulb
add
adc
mov
sti
add
je
adc
sbb
aaa
enter
inc
sarl
xor
pop
ret
push
fs
mov
repz
push
out
jns
mov
lods
inc
xchg
jne
adc
es
push
pop
pop
imul
es
aad
fldt
cmpsl
scas
sub
in
out
insb
xor
push
les
mov
lods
dec
rol
sub
mov
leave
popf
inc
or
xchg
dec
daa
addr16
cmpsb
mov
inc
inc
arpl
inc
cld
das
mov
push
xlat
lock
arpl
arpl
ljmp
jge
pop
push
orb
push
frstor
rcrb
test
in
push
dec
add
lret
daa
push
dec
inc
pop
adc
dec
cmpsb
shrb
or
flds
or
mov
cmp
lock
ret
imul
or
mov
jne
insb
andb
icebp
jge
dec
or
pop
inc
fnsetpm(287
push
movsl
in
fldl
adc
dec
push
leave
dec
test
xchg
mov
shr
xchg
mov
push
jnp
pop
mov
add
ret
mov
cmpsb
dec
divl
bnd
mov
mov
cmpsb
jo
sub
pop
lcall
push
push
dec
or
jae
in
inc
cmp
es
or
cmpsl
scas
stc
mov
push
add
inc
cmpsl
inc
jg
cmpsb
xor
xor
dec
movsb
nop
roll
inc
cmp
inc
cmc
push
inc
cmp
jne
fs
repnz
pop
jecxz
outsl
outsl
pop
xor
adc
or
aad
inc
ret
xor
sbb
je
mov
leave
int
inc
push
inc
push
push
out
sahf
imul
ds
adcb
inc
add
fistpll
jno
inc
inc
andl
dec
je
jns
cltd
jl
or
xchg
or
jbe
cmpsb
pop
mov
int
inc
push
out
mov
loop
xchg
sarl
es
arpl
gs
test
fnstsw
push
testl
inc
adc
inc
or
sti
jecxz
mov
pushf
push
dec
outsl
dec
into
test
ja
rorl
or
inc
fnstcw
xchg
loop
lret
dec
jnp
scas
push
and
jge
push
add
mov
and
push
rcr
and
lock
cmpb
rcrb
xchg
daa
std
mov
inc
mov
dec
dec
push
js
idiv
jg
lock
aam
test
in
and
ss
dec
cmpsl
pop
outsl
sub
repz
clc
rorl
add
cmpsl
xor
pop
dec
adc
aad
xor
jnp
jb
sarl
loope
daa
bound
mov
xchg
addr16
std
in
cmpsl
sbb
jne
and
add
pop
adc
or
jecxz
lods
ret
das
sbb
nop
adc
loope
xchg
loope
insb
or
mov
cmpsb
add
insl
imul
outsb
xlat
mov
jp
dec
pop
push
dec
ljmp
sbb
dec
cmpsl
mov
xor
xchg
xchg
inc
call
lret
jecxz
push
push
mov
andb
adc
loop
outsl
loope
mov
filds
pop
add
pop
arpl
shlb
rorl
jns
jnp
sarl
scas
dec
shll
pop
lods
repz
test
daa
jg
aam
jmp
sub
dec
adc
pop
add
pop
sub
scas
mov
out
xor
ret
negb
push
push
jns
rcrl
cmpsb
out
add
cmp
cmp
rcrl
jecxz
and
inc
jbe
lret
sub
pop
lahf
cmpsl
test
clc
dec
and
lahf
jae
sbb
daa
xchg
lods
rol
adc
into
or
mov
sub
ror
rolb
pop
mov
push
mov
adc
push
push
pop
xor
popa
js
xchg
add
jecxz
cmpsl
sbb
adc
fiadds
es
mov
jae
sbb
cmp
mov
push
cwtl
jmp
movsb
xchg
add
mov
push
pop
loop
adc
adc
pop
in
out
jo
cwtl
push
jp
xchg
push
mov
lahf
dec
mov
jl
push
or
push
cmpsb
jnp
std
mov
push
xchg
aam
repnz
lock
inc
mov
nop
pop
sub
pop
pop
cld
push
loope
inc
and
pop
lret
jg
and
push
fwait
das
ljmp
fimull
adc
movb
lds
out
ljmp
add
out
shll
rclb
sahf
adc
popf
push
mov
mov
call
outsl
rorb
cmpsl
cmp
dec
dec
xchg
mov
adc
es
sub
add
or
shrb
shl
shll
rcl
cltd
cmpsb
or
test
shl
sbb
mov
mov
bound
or
cmpsb
mov
cmp
xor
jmp
mov
or
cmp
test
gs
scas
sbb
je
xchg
push
adc
adc
icebp
jbe
or
dec
cltd
or
shr
inc
loop
imulb
lcall
lods
and
shlb
test
int
jl
addr16
sbb
aaa
add
dec
xor
ljmp
add
xchg
mov
and
mov
mov
ljmp
xchg
mov
repnz
or
mov
std
add
rcll
ds
mov
cwtl
shlb
mov
lds
lcall
jl
jge
sub
outsb
int
or
bound
jbe
or
pop
int
cwtl
jb
std
pusha
nop
or
jno
lea
mov
in
das
cmp
mov
in
and
dec
sbb
inc
adc
and
shlb
lock
mov
mov
ljmp
mov
pop
fcoms
scas
in
jo
cmp
mov
mov
xor
shlb
jb
pop
sub
push
inc
cmpsl
mov
jb
add
out
push
arpl
jecxz
push
pop
rcl
xchg
mov
cmc
xchg
jmp
leave
out
cmpsl
je
dec
inc
insl
mov
mov
aaa
sub
cmpsb
jmp
shll
mov
xchg
jo
mov
adcb
xor
cmp
sbb
adc
daa
sub
insl
cld
ds
mov
jl
mov
fwait
push
addl
push
cmp
fildl
xor
mov
cmpsl
sub
push
xchg
jae
aad
cwtl
add
sub
adc
movsb
jnp
ljmp
dec
push
mov
rolb
gs
pop
xchg
pop
loop
or
pop
rolb
inc
es
dec
shll
cmp
shll
ret
push
lds
mov
lret
cmpsb
pop
sarb
bnd
enter
jl
cmp
push
or
xchg
jmp
out
push
fadds
je
pusha
andb
add
call
addr16
adc
in
cwtl
daa
xor
jnp
test
add
mov
cltd
lds
push
push
negb
xlat
repnz
out
sbb
and
and
xlat
andb
mov
nop
or
push
pop
loopne
jg
fiadds
push
jnp
add
sbb
sbb
fstpl
cmpsb
loopne
push
je
sti
push
movsb
push
aam
in
aam
movl
lcall
mov
push
dec
mov
shlb
jge
lds
xchg
in
cmp
repz
push
xchg
ljmp
outsb
inc
dec
and
push
push
ret
mov
and
movsl
ljmp
int3
out
sub
push
testb
or
pusha
nop
pusha
dec
ret
mov
jbe
inc
push
push
xor
jno
stos
int
cmpsl
in
or
push
addl
mov
lahf
or
lods
sbb
fildl
cmpsb
jnp
das
jmp
pop
mov
sub
or
cmp
sub
add
pop
imul
fidivs
jge
push
out
test
adc
dec
fisubs
and
aad
pop
je
mov
mov
cmpsb
bound
movsl
outsl
pop
clc
dec
movsb
push
dec
mov
inc
mov
add
mov
sbb
cmp
in
test
adc
adc
movb
or
sub
cmp
imul
sbb
psraw
into
int
daa
jo
ret
es
enter
pop
mov
pop
inc
push
xchg
sub
ljmp
mov
push
jb
sti
mov
sub
out
jb,pt
dec
getsec
arpl
cs
cli
inc
rolb
pop
imul
push
adc
in
jns
push
jp
or
sarl
inc
lods
cmpsb
mov
es
xlat
jne
lea
in
xchg
push
roll
mov
jmp
xor
xchg
shll
mov
jns
sbb
andb
and
pop
dec
ja
daa
cmp
push
pop
dec
pop
adc
inc
cmpsl
and
out
mov
lret
insl
jg
sbb
jecxz
call
cwtl
pop
ljmp
rol
adc
lret
push
lock
iret
jle
data16
cmpsb
adc
imul
push
cmp
sbb
cmp
jge
and
cmp
mov
orl
or
out
adc
arpl
jmp
shll
or
pop
setno
fs
push
daa
and
or
into
in
or
adc
rcrb
repnz
bound
push
xchg
aaa
inc
cmpsl
fldl
rolw
pop
pop
pop
jb
insl
ret
mov
ret
mov
pop
lds
adc
sbb
push
inc
and
inc
or
dec
sub
jp
jg
lahf
sbb
push
jnp
ficomps
es
and
inc
bound
shlb
cmpsl
inc
mov
add
sbb
cmpsb
dec
push
xchg
lcall
inc
into
adc
int
and
or
and
sbb
dec
iret
dec
into
daa
pop
mov
jecxz
mov
jo
in
or
push
mov
loope
test
adc
leave
xchg
ds
and
jnp
aad
je
stos
push
aaa
insb
and
sahf
fld
dec
fcomps
mov
inc
push
lods
mov
xchg
es
dec
nop
in
xchg
and
popf
gs
aaa
mov
dec
out
adc
mov
or
and
clc
gs
cwtl
arpl
pusha
mov
sub
inc
in
out
leave
push
ljmp
add
adc
leave
pop
cmpsl
mov
xor
pop
mov
and
xor
daa
shrl
nop
jns
scas
mov
cmp
pop
fisubs
or
out
push
push
jecxz
loope
cmpsb
cmp
repz
push
js
shr
pop
fdivrs
and
movsb
push
pushf
sti
push
ljmp
loope
stos
xchg
mov
jnp
xor
cmp
ja
rcll
jne
clc
xchg
rcrb
nop
dec
popf
push
jp
push
or
mov
jns
cwtl
cmpsb
jecxz
pop
xlat
mov
xchg
dec
cmpsb
sbb
dec
cltd
mov
iret
dec
mov
add
push
add
out
getsec
lret
loop
in
push
repnz
adc
jmp
sbb
shll
and
shl
into
xchg
loopne
sbb
jp
int
popa
cmp
jnp
es
pop
push
pop
xchg
addr16
xor
inc
andb
notl
rorb
mov
popf
push
insl
out
cmpsl
pop
ficoms
push
shll
aad
popl
jge
sbb
popa
cli
fisttpll
xchg
es
sub
les
inc
rorb
cmp
lods
xchg
std
fcmovnbe
jg
loopne
cmpsl
sbb
pusha
rorb
push
fidivrs
ret
jbe
add
jg
jnp,pn
stos
rcll
sarb
sub
dec
or
js
push
sbb
mov
pop
dec
adc
fucomi
lods
addr16
mov
pusha
sbb
cmpsl
es
lahf
add
movsb
je
push
daa
inc
mov
aad
push
xlat
out
sbb
mov
mov
adc
adc
cmpl
daa
mov
pop
push
in
flds
leave
inc
test
adc
cmpsb
xchg
sbb
sbb
xchg
dec
mov
push
inc
push
stos
nop
sbb
loop
insb
ljmp
jb
xor
fld
mov
pop
inc
inc
imul
in
movb
pop
mov
es
dec
dec
test
cmp
js
cmc
push
adc
outsl
lods
mov
arpl
add
ret
popf
jl
lret
sbb
jo
ss
cld
cmpsl
sbb
daa
rorb
jbe
jle
fsubrl
ja
push
push
js
adc
sub
popf
jl
pop
mov
mov
cmpsl
arpl
ds
movsb
mov
enter
outsl
inc
cli
out
sti
mov
leave
int
dec
push
loop
fisubrl
cli
dec
or
jno
push
jg
jmp
xchg
xchg
cmpsb
mov
in
mov
jge
lret
push
inc
sbb
ficoms
jg
jbe
xchg
aaa
into
add
cmp
push
cmpsb
xor
and
cmp
in
xchg
test
call
push
inc
lods
lock
adc
and
sub
xchg
stos
daa
xchg
mov
lods
sub
rcrb
rcrl
cmpsb
lret
cmc
pop
push
or
in
sbb
imul
std
mov
dec
cmpsb
cmp
jmp
xor
scas
mov
ds
nop
arpl
aam
cmpsb
inc
dec
push
mov
cmpsl
pop
idiv
pop
jp
call
leave
ljmp
push
ficoms
jecxz
fistl
xchg
in
jecxz
or
movsl
sub
inc
push
dec
ret
push
adc
xor
insb
fildll
aad
ret
cmpsb
lock
dec
cmpsl
cmpsb
jl,pn
cld
dec
pop
lds
xor
cmc
pop
inc
and
adc
push
adc
sbb
or
pusha
rorb
stc
cmpsl
pop
pushf
mov
adc
and
fimuls
mov
inc
cmpsb
xor
scas
xchg
addr16
test
out
and
mov
xchg
movsl
add
sahf
push
jecxz
push
dec
push
mov
int
test
push
jne
ret
dec
cmpsb
movsb
push
or
push
dec
popf
into
loop
les
cmp
sub
dec
or
js
imul
mov
sbb
outsb
cmp
xchg
jno
insl
jb
sbbl
call
lcall
mov
notb
lock
andl
lret
dec
adc
add
dec
xor
xchg
sbb
shlb
xchg
in
pop
dec
cmpsl
scas
xor
lcall
out
xchg
xlat
das
ret
adc
inc
cmp
subl
push
shlb
in
push
and
jle
jno
lea
adc
or
and
sbb
fisubrs
icebp
outsb
pop
rclb
inc
inc
insb
add
dec
jle
cli
dec
imul
cmpsl
lods
sbb
arpl
in
jo
repnz
sbb
pop
inc
adc
xchg
push
xor
in
inc
mov
icebp
cli
xchg
lret
dec
push
arpl
mov
aas
add
hlt
scas
inc
mov
dec
mov
push
adc
xchg
push
push
and
sahf
cmpsb
xor
xchg
jg
es
pop
jl
es
mov
cmc
out
push
mov
nop
mov
xchg
outsb
in
or
int3
fsubs
mov
stos
and
addps
or
sbb
xor
aas
push
mov
adc
mov
cs
cmp
pop
jo
rcrl
int
ret
add
or
ss
ds
jae
out
movsl
adc
jge
imul
pop
dec
jbe
pop
mov
jb
inc
add
xchg
jecxz
and
push
rcrl
push
outsl
sbb
sub
add
xor
test
jae
mov
push
sub
and
inc
aam
scas
xchg
jl
scas
adc
push
xor
add
lcall
test
xor
nop
in
jmp
out
adc
icebp
rorl
fnstcw
cmpsl
mov
jmp
cmpsb
ret
fldl
cld
andl
jl
add
mov
and
xchg
repnz
push
out
add
enter
mov
clc
and
sbb
or
insl
int3
jge
mov
jp
cltd
pop
enter
es
xchg
lea
mov
sub
jle
jge
cli
sbb
ret
push
sbbb
lcall
sbb
cmp
xchg
test
pop
xchg
push
shl
imul
addl
scas
mov
mov
pop
add
into
ret
stos
xchg
sbb
jp
andl
inc
aas
adc
push
es
ds
push
cmp
add
lcall
xchg
and
jecxz
test
test
sahf
lahf
shr
mov
ss
bound
mov
int3
adc
pop
mov
nop
ja
mov
pop
outsl
add
stos
push
push
repnz
in
out
or
ret
es
int3
or
leave
adc
jno
je
jg
sub
fdivr
xchg
inc
xchg
inc
jno
jecxz
setle
cmpsl
into
mov
add
inc
mov
sub
dec
or
enter
inc
or
jb
and
xor
pop
test
into
cmpsb
negl
push
add
mov
lret
xchg
and
cmc
sahf
fwait
cmc
jecxz
sti
mov
mov
out
leave
les
mov
push
dec
in
es
sbb
push
cmpsl
into
mov
leave
cmpsb
xchg
std
jo
jg
sbb
rcrb
pop
or
add
or
mov
shll
hlt
es
mov
mov
fisubrl
fidivrs
gs
popf
int
mov
cmpsb
ret
adc
and
ret
out
push
jbe
sbb
bt
inc
adc
test
iret
popf
andb
and
pusha
sbb
inc
les
cmpsl
xchg
and
stos
out
jmp
popa
xor
and
push
shlb
cmp
cmpsl
or
test
insb
push
pushl
pop
xlat
fwait
sbb
inc
adc
adc
xchg
cmpsb
jmp
enter
inc
test
js
pop
mov
fsubrp
dec
mov
mov
sbb
data16
cmpl
popf
sbb
adc
fsubp
je
pop
push
and
stos
dec
pop
lock
add
js
bound
pushf
shlb
push
aam
repnz
pop
out
bt
cmp
fs
aaa
xchg
add
je
pusha
lret
push
mov
pop
in
testl
psadbw
mov
out
loope
jmp
xor
lds
fwait
and
cmpsb
jnp
fstl
bound
dec
sub
or
dec
xchg
nop
push
fadd
and
adc
sbb
inc
push
ss
stc
adcb
jle
mov
mov
sbb
out
sub
mov
cld
aad
lods
or
sub
push
push
insb
dec
jmp
inc
aaa
inc
ret
idivl
mov
fisubs
popa
leave
es
adc
in
inc
push
mov
dec
jnp
jns
or
rcll
pop
daa
cmp
push
mov
sub
adc
clc
ljmp
add
les
cmp
xlat
cmpsl
jbe,pt
sti
xor
mov
nop
js
xor
jp
jb
ret
ja
inc
fbld
cwtl
test
push
mov
es
cmpxchg
lret
jns
sub
dec
repnz
shrb
and
cmp
in
out
in
or
outsb
in
es
jo
cmpsl
mov
out
ds
pop
jp
sbb
xlat
repnz
lretw
sbb
rorb
mov
cmpsb
push
mov
inc
xchg
shl
loopne
outsb
push
aaa
lds
xchg
outsb
movl
pushf
cmpb
mov
sub
pop
test
cmpsb
sbb
adc
mov
cmpsl
das
mov
stos
mov
inc
cmp
push
jp
es
or
stos
jb,pt
add
imul
repnz
popl
mov
ss
imul
leave
mov
jle
xchg
fs
je
xchg
insl
jmp
pop
mov
mov
xchg
shll
push
pop
loop
xchg
out
pop
cld
outsl
pop
sub
mov
repnz
sbb
and
ljmp
inc
inc
cli
jne
dec
pop
xchg
imul
mov
sub
add
out
sub
ss
add
lea
cmpsl
jecxz
sub
in
pop
cmpsl
rolb
jmp
int
add
xchg
insb
jl
mov
dec
pop
mov
push
sti
dec
ret
icebp
cmp
jmp
cld
adc
loope
nop
jae
cmp
add
ja
or
and
in
adc
mov
inc
ljmp
mov
dec
push
loopne
sti
and
dec
shlb
push
or
in
arpl
iret
xchg
ret
adc
mov
addr16
push
or
cmpsb
fldenv
dec
scas
into
sti
mov
push
scas
inc
mov
sbb
into
cmpsl
fstpt
in
inc
adc
dec
outsb
xor
fwait
xchg
je
lea
cmp
or
cmpsl
ja
mov
xchg
dec
and
mov
vmovlps
xchg
call
ret
push
inc
pop
lods
hlt
and
ljmp
stc
mov
mov
mov
jno
fwait
clc
popa
pushf
in
ds
cmpsl
pusha
cs
clc
add
xor
mov
add
cmpsl
jno
cmp
ja
adc
adc
clc
adc
sbb
shl
xchg
cmp
fsubs
jge
dec
lret
jnp
out
pop
sar
xchg
cmp
cmp
lock
mov
mov
dec
mov
push
jo
in
imul
sbb
dec
inc
jnp
push
adc
jo
xlat
repnz
lret
js
hlt
cld
xor
test
lahf
jecxz
divb
xor
out
jno
loop
or
insb
imul
xor
cmpsl
inc
or
imul
leave
mov
push
decl
xor
loope
dec
xor
andb
xor
dec
test
insb
push
in
push
das
iret
add
int
adc
insb
repz
dec
daa
jns
in
mov
das
fst
inc
imul
shlb
mov
pop
in
mov
mov
out
cmp
or
pop
cmp
mov
and
xor
fidivrl
adc
xor
pop
or
sar
loop
mov
enter
je
cli
mov
es
or
lds
cld
popf
sub
jbe
jecxz
jl
xor
xor
xchg
push
adc
sbb
and
xchg
xor
add
mov
sbb
es
data16
cltd
fs
in
or
sub
out
push
ficoms
shll
lock
cmpsl
push
ffree
and
jmp
xchg
and
dec
xor
xlat
sbb
loope
fiadds
rcl
or
cmp
hlt
and
push
out
sbb
dec
pop
stos
mov
mov
fstpl
push
in
rcrl
cmpsb
xor
mov
pop
arpl
adc
or
addr16
nop
repnz
push
je
into
sbbb
dec
imul
mov
pop
inc
jmp
test
xchg
ret
cmc
mov
mov
sbbl
bound
sbb
jmp
lret
adc
add
jg
xchg
jne
ja
stc
mov
add
sbb
sub
in
jg
mov
jae
lds
dec
inc
ret
jno
movsb
cmc
lret
inc
imul
mov
add
fstpt
pop
xor
sbbb
xchg
and
cmp
in
orl
lods
outsl
adc
pop
cld
push
xchg
or
out
jl
in
scas
imul
mov
loop
enter
das
rcll
cmpsb
in
mul
and
adc
fldt
insb
orl
xchg
mov
dec
sub
add
rorb
jne
lret
and
or
lcall
dec
lret
push
jns
jae
sar
mov
add
dec
aad
add
pop
adc
push
scas
mov
inc
bnd
cmp
stc
iret
inc
push
push
movsb
or
mov
pop
jo
popf
jo
adc
cld
or
mov
adc
repz
jmp
imul
mov
into
mov
push
ret
xchg
scas
fcomp
js
xchg
aas
mov
iret
push
or
and
jo
xor
sbb
and
idiv
dec
inc
dec
popa
cli
fdiv
sbb
aad
rcl
dec
and
aad
xchg
push
out
jg
sub
pop
adc
jo
fnstenv
and
xchg
out
jl
dec
cmpsb
adc
mov
inc
movsb
decb
je
xchg
js
pop
or
jmp
push
xchg
cmp
xchg
or
jle
push
or
data16
push
dec
jmp
add
jo
pop
pop
dec
adc
mov
stos
mov
jne
gs
or
out
push
add
and
lods
push
fs
test
jecxz
je
repnz
scas
dec
xor
sti
dec
push
and
pop
sbb
inc
and
and
cmpsb
aam
sti
adc
inc
dec
xor
xor
sub
pop
out
jnp
adc
pop
es
sub
es
cmp
testl
or
sub
cmp
loopne
and
lret
sbb
in
cmpsb
in
adc
cmpsb
imul
add
sahf
xor
loop
sbb
add
inc
negb
sti
push
mov
ret
sub
fmull
push
loopne
ljmp
sbb
sti
or
cmp
add
sbb
or
fs
andb
mov
es
ds
cmpsb
gs
push
fdivl
ds
outsb
add
pop
xlat
dec
dec
pop
pop
pushf
sarb
nop
push
cmp
push
and
repnz
mov
sbb
pop
cwtl
in
mov
nop
xchg
push
adc
lret
sbb
shrb
cmpsb
fiaddl
rol
es
jecxz
stos
pop
push
jne
cmp
pop
push
jle
movsb
add
cmpsb
shrb
dec
mov
sbb
inc
pushf
mov
sbb
mov
cmp
push
jbe
pusha
decb
dec
lods
cmpsb
adc
sub
adc
fistl
mov
out
xor
xor
pop
idivl
scas
mov
js
rcrl
adc
pop
xchg
xor
test
jne
jns
xchg
ret
jl
repz
sbb
repnz
or
scas
daa
in
or
loope
cmpsl
fistps
movsb
inc
pop
cmp
aam
fldcw
popf
popf
int
loopne
mov
pop
mov
lods
mov
clc
cmpsb
andl
jo
push
xor
dec
push
fistpl
mov
es
in
jbe
pop
ret
mov
mov
push
push
testl
and
jge
ja
adc
adc
cli
sahf
mov
in
adc
ja
jb
loopne
or
rep
addr16
mov
ljmp
xchg
mov
bound
push
mov
jmp
cmpsl
dec
cmc
icebp
pop
pop
add
lret
call
sbb
ficomps
push
inc
xor
cmpsb
jge
mov
pop
xlat
pop
inc
pushf
sbb
pushf
xor
jge
aas
inc
pop
cmc
mov
add
inc
cltd
push
xlat
call
xchg
push
jo
notl
or
shlb
sbb
imul
int3
test
inc
mov
push
lea
pop
or
pop
loope
outsl
outsl
data16
or
inc
jl
lret
mov
and
or
push
lret
es
push
adc
jmp
in
inc
sub
push
pop
scas
jmp
imul
ljmp
push
in
lahf
pusha
dec
imul
mov
add
cmp
adc
test
cmpsl
sbb
inc
fnstcw
aam
push
push
mov
sbb
data16
mov
pop
leave
int
pop
jae
shrl
mov
bound
xchg
sub
ret
pop
lcall
lret
aam
aad
cmpsb
cmp
inc
imul
add
ss
addr16
fldt
jbe
rorl
in
test
jecxz
jnp
iret
xor
cmp
nopl
cs
and
inc
bound
adcb
ljmp
aad
iret
bound
or
adc
adc
sbb
lret
or
push
fxch
adc
jmp
pop
add
adc
pop
pop
leave
cmpsl
sub
dec
mov
or
lods
pushf
jne
mov
outsb
inc
out
or
inc
jae
notl
add
mov
add
icebp
aaa
pop
jae
out
lret
shr
mov
sub
stos
mov
bound
into
push
mov
cmpsb
push
pop
jae
ljmp
jno
and
es
out
push
enter
mov
repz
repnz
call
mov
jne
dec
sub
mov
scas
jnp
xor
pop
dec
enter
push
add
outsl
sub
adc
adcl
call
aas
and
fwait
ds
mov
scas
sbb
nop
mov
cmp
cmpsb
pop
rorb
in
int3
sbb
add
mov
cmp
push
dec
inc
enter
add
cmp
jg
inc
sbb
mov
or
lods
push
push
cmpsl
cmpsb
test
pop
lret
push
lcall
sbb
dec
es
cmpsb
fwait
pop
dec
add
inc
push
pop
lods
mov
aad
into
add
mov
aad
and
dec
pop
dec
into
jae
stos
push
lods
cmpsl
sbb
mov
das
ss
adc
fwait
arpl
mov
adc
stos
pop
inc
cmp
xchg
jmp
sbb
cli
scas
jnp
pop
jae
mov
lock
daa
out
or
push
sbb
mov
pusha
push
ljmp
add
mov
fidivl
jno
test
fistps
dec
in
lds
xor
movntq
in
sbb
xor
xor
dec
xchg
xor
pop
add
sbb
int3
bound
xchg
insb
mov
pand
mov
loope
cmp
add
dec
adc
mov
pop
cltd
or
dec
ret
lds
or
mov
xor
ret
jnp
fisttpll
sbb
js
mov
pushf
cmpsb
sbb
shrb
mov
adc
lds
fldl
fcomps
pop
mov
adc
jae
jg
int
loope
cmp
daa
nop
cmp
xchg
imul
adc
push
and
sbb
xchg
dec
adc
decb
cmp
mov
sbb
xor
outsb
inc
or
push
push
inc
je
xchg
fwait
inc
mov
lcall
mov
pop
je
mov
sti
sbbb
leave
push
cmpsl
loopne
mov
dec
inc
cmp
inc
sub
rorb
or
add
jo
dec
jp
aas
jl
inc
add
in
mov
stc
adc
cli
xchg
sub
lahf
es
das
fsubs
mov
rcrb
mov
and
jnp
xlat
or
or
xor
xor
xchg
arpl
sub
mulb
add
sub
es
cmp
mov
pop
or
cmp
mov
cli
jo
les
sbb
inc
repnz
lahf
cmpsb
sbb
int3
mov
mov
push
imul
adc
pop
push
jns
test
ja
mov
adc
add
or
test
sbb
cmpsl
push
push
out
aas
les
aam
aam
stos
fmull
push
push
mov
push
lcall
xor
or
inc
lock
mov
repnz
mov
dec
cmp
icebp
rdpmc
test
push
jb
mov
arpl
push
test
imul
stos
or
pop
arpl
repz
push
stos
popf
push
stc
rorb
data16
inc
cmp
shll
sub
adcb
test
mov
push
aam
fwait
rcrb
xlat
aad
cs
les
sbb
add
lret
push
scas
insl
or
cmp
loop
pop
jnp
xchg
mov
or
or
xchg
xor
pop
insl
sarb
add
outsb
sbb
pusha
push
sahf
and
pusha
cmpsb
loopne
imul
mov
in
cmp
ret
jecxz
int
subl
out
sbb
lods
nop
shrl
inc
xchg
push
popf
dec
or
inc
jmp
outsl
cld
aam
mov
jge
cli
or
xchg
sti
sbb
gs
idivl
push
jno
sbb
jnp
dec
sbbl
imul
mov
fs
imul
fimuls
fcmove
inc
icebp
jmp
adc
mov
push
jbe
dec
inc
adc
out
adcb
ror
cmp
shrb
mov
ret
fwait
in
xchg
xor
test
inc
negb
cmpsl
sahf
or
shrb
scas
pop
push
mov
inc
jnp
je
pop
bswap
mov
push
ret
jge
ffree
stos
into
ret
inc
sbb
insl
adc
lahf
gs
sbb
mov
dec
adc
add
arpl
lret
das
loop
std
out
fmul
int
pop
and
xor
sbb
or
mov
mov
shlb
leave
xchg
fstpt
jmp
xchg
fbstp
jecxz
fwait
popa
nop
or
outsb
mov
jl
jg
adc
adc
mov
sbb
adc
jmp
push
or
lods
mov
jb
mov
sbb
mov
mov
rorl
adc
or
in
cmpsl
or
rorl
adc
pusha
adc
lret
loopne
dec
push
or
dec
inc
cli
xchg
es
cmpb
scas
stc
fwait
mov
inc
push
ss
cmp
jmp
adc
pop
jne
ficomps
push
cmovae
jl
cmpsb
hlt
pop
jmp
cmpsb
mov
jmp
pushf
aas
in
pop
jle
or
xchg
sub
inc
test
ljmp
push
jp
pop
out
les
lds
mov
push
pop
cmp
sarl
cli
aas
pop
xor
imul
add
cmpsb
mov
insl
push
cltd
xor
arpl
repz
ds
clc
add
in
xchg
sbb
fldt
xchg
unpckhps
dec
inc
aam
or
mov
leave
adc
popf
fcomp
mov
cmc
jl
pop
mov
cmpsb
xchg
push
add
loop
loopne
push
push
inc
xorl
bound
dec
push
fistps
dec
fidivs
add
imul
ficomps
sbb
or
lret
insl
or
cmpsb
adc
hlt
mov
es
sbb
rcr
in
mov
jl
pop
adc
cmpsb
pop
mov
push
xor
jecxz
mov
ljmp
jno
xor
iret
mulb
mov
jg
sub
out
outsb
call
pop
push
lret
adc
es
ljmp
ja
xchg
shlb
jl
loop
rorb
cmpsl
jl
sub
flds
pop
dec
dec
test
sbb
mov
push
inc
cmpl
pop
dec
mov
ja
cmp
out
mov
ret
sbb
xor
shrl
sub
adc
mov
xchg
fs
fsubs
sub
cld
xchg
ds
bound
in
bound
scas
mov
push
push
scas
cmpsl
subl
insl
mov
inc
leave
xor
inc
push
in
aas
aad
mov
pop
xchg
push
or
xchg
notl
sbb
je
rcr
shlb
lret
jnp
or
test
push
inc
orb
inc
ja
adc
jo
lds
mov
lcall
mov
sbb
aaa
gs
inc
xor
jmp
inc
loopne
sbb
adc
or
sub
pop
mov
sahf
xor
cmp
popf
dec
arpl
orl
sbb
xchg
into
rclb
dec
push
stc
jo
pop
mov
mov
xchg
rol
adc
popa
aas
and
jae
dec
inc
nop
cmpsb
xchg
arpl
ret
jb
jno
jnp
mov
cmp
pop
jge
cmpsl
cmp
jge
pop
cltd
cmp
js
lret
fildll
nop
cmpsl
mov
dec
aas
les
je
sahf
xchg
ss
mov
pop
push
xchg
dec
insb
fbstp
dec
in
stos
ret
mov
adc
cmpsb
scas
xor
test
ljmp
sub
and
stos
or
in
jecxz
or
or
pop
cmpsb
lods
mov
test
loopne
cmp
add
mov
cmp
mov
lock
lret
sahf
dec
mov
xchg
dec
cmpsb
loopne
mov
int3
xchg
xor
pop
cmpsb
cmp
xchg
sbb
push
sbb
xchg
mov
pop
fwait
sub
dec
sub
push
shrb
add
jg
imul
pop
inc
adc
adc
adc
dec
lock
push
movsb
and
mov
mov
mov
in
or
dec
mov
cmp
rcrb
jnp
xor
dec
lret
xor
aad
sbb
and
adc
mov
fsubl
sti
repnz
jb
jle
es
sub
push
sub
pop
js
movl
aad
xchg
nop
stos
push
fcmove
insb
lea
add
push
mov
iret
adc
push
jb
and
loopne
add
fidivrs
jecxz
js
mov
jl
cmp
xor
push
dec
scas
pop
fadd
xchg
fs
mov
in
ficoml
cltd
adc
es
mov
test
iret
mov
push
mov
and
dec
roll
adc
sub
push
add
jmp
push
mov
loopne
mov
or
dec
imull
push
mov
mov
dec
ss
push
lds
add
sub
sbb
shl
mov
mov
inc
out
cvtps2pd
cmpsl
in
adc
stos
lock
sbb
push
in
inc
cmovne
mov
and
das
xchg
aam
push
in
lock
mov
add
pop
mov
fldl
mov
rolb
adc
lahf
xor
pop
or
enter
xchg
xchg
add
mov
xor
cmp
adc
cmpsl
sbb
in
js
fisubs
xchg
fcoms
cmp
outsl
xchg
out
push
daa
xor
add
out
dec
push
ret
out
cmpsb
mov
xchg
aad
pop
cs
pushf
cmpsl
in
out
cmp
sub
adc
xchg
dec
xor
cmp
mov
xor
ss
jg
mov
popa
das
dec
dec
inc
cli
cltd
daa
mov
fwait
jno
js
mov
sbb
imul
push
push
push
add
dec
mov
or
out
add
mov
int
gs
jp
xchg
sbb
sub
imul
sarl
mov
dec
addr16
jo
cmp
in
adc
mov
jbe
mov
sub
std
jecxz
xchg
into
bnd
inc
xchg
push
test
jo
ljmp
mov
xchg
mov
push
inc
out
or
pop
das
in
mov
psrlw
outsl
pop
xor
inc
ret
sbb
lds
mov
mov
mov
mov
loopne
aad
in
jb
jb
inc
or
ret
push
adc
mov
push
cmp
jge
mov
sub
and
outsb
adc
iret
rorb
aaa
jl
jl
xchg
sbb
pop
adc
fisttps
pop
popa
gs
adc
or
fstpl
push
xor
rcl
xchg
ret
iret
aam
int3
cmp
mov
gs
inc
jne
movsl
das
popa
pop
test
mov
mov
xchg
insb
mov
cmpsb
les
adc
cmp
out
test
out
lds
int3
dec
sbb
xor
lcall
out
push
shlb
sub
in
cmpsl
pop
sub
mov
ds
ss
cmpsl
popf
push
andb
aam
mov
ja
in
shr
adc
fidivrl
push
in
push
push
mov
movsl
jnp
mov
push
push
push
mov
outsl
stc
data16
in
out
and
jecxz
lds
push
add
fimuls
push
dec
cli
mov
sbb
hlt
inc
mov
fnstcw
xchg
pextrw
or
and
mov
cmpsb
fwait
xchg
outsb
mov
mov
jmp
aaa
adc
cltd
sbb
inc
push
adc
jbe
pop
test
nop
rolb
fisubl
in
jae
inc
push
inc
adc
stos
or
push
call
cmpsb
movsb
sub
fidivs
or
jmp
push
es
int3
ret
push
je
or
nop
push
push
test
pop
jnp
adc
insb
mov
into
push
cmp
or
dec
out
mov
jnp
sbb
jns
sbb
jg
mov
pop
mov
ret
test
sbb
adc
pushf
fwait
jmp
iret
std
push
into
sbb
mov
rolb
mov
xor
fmull
sahf
ret
popl
jg
ja
in
add
lock
fwait
cwtl
loopne
in
es
es
das
and
lret
insl
fwait
push
std
gs
or
and
cmpsl
test
test
ficoms
pop
dec
ja
sub
push
pop
lahf
dec
xchg
xchg
int
out
push
cmpsl
mov
inc
cmpsb
rorb
jp
push
push
test
ret
or
mov
data16
adc
push
cmp
mov
push
ljmp
in
into
negb
or
fadd
nop
sarb
mov
jae
mov
xor
ret
imul
cmpb
xchg
in
cmp
js
loopne
cltd
mov
and
test
jecxz
sahf
pop
lcall
insb
jmp
scas
push
out
xchg
imul
rcl
repz
shll
popf
mov
mov
mov
cmpsb
push
inc
jnp
jp
jmp
add
ljmp
xchg
sub
and
sbb
movsl
pop
sbb
mov
es
push
pop
pusha
lcall
leave
cmpsb
jnp
xor
lods
in
inc
loope
pop
mov
cli
mov
add
jl
mov
ret
inc
xor
sbbl
aam
adc
arpl
repnz
sarb
in
scas
cmpsl
es
xor
lret
shlb
std
push
pop
leave
xlat
mov
mov
jb
fnsave
and
lret
push
add
jnp
sbb
fadds
xchg
fcoms
int3
in
push
jae
insb
cli
jp
push
inc
in
pop
sub
jg
inc
into
cmp
dec
outsb
leave
fwait
push
push
xor
sbb
popa
fcmovb
es
push
add
or
mov
dec
aaa
push
mov
add
adc
loop
xchg
push
adc
cmpsb
movsl
in
and
sbb
pop
mov
push
mov
pusha
inc
sbb
mov
fidivs
and
cmpsb
in
ficompl
loopne
mov
shll
jne
mov
in
in
cmp
inc
inc
aaa
cmpsl
xor
inc
inc
adc
cs
lods
dec
mov
out
sbb
fsubrs
test
mov
das
xor
pushf
loop
mov
jp
pop
or
xchg
es
imul
stos
adc
mov
and
dec
sbb
mov
cmpsb
jo
mov
or
lods
pushl
dec
cmpsb
mov
arpl
cmpsl
scas
pushf
aad
adc
out
jecxz
setno
orb
push
push
fsts
or
push
test
into
out
push
mov
ljmp
push
inc
cmpsl
outsl
loop
adc
mov
cld
pop
lea
and
jae
ss
fs
xchg
or
jp
add
mov
cmpsl
and
adc
push
sub
xor
mov
pop
out
notb
fsub
sbb
sbb
mov
add
push
inc
fimuls
push
icebp
leave
cwtl
mov
jne
inc
or
jl
repz
lcall
push
sbb
xchg
adc
pop
xchg
test
adc
ret
scas
lock
mov
jbe
and
lcall
rcll
inc
lock
xor
and
xchg
pop
inc
js
out
jg
dec
clc
ljmp
popa
adc
cmpsl
movsl
filds
shlb
inc
add
jecxz
push
into
ds
js
sbb
decl
idivl
es
jb
hlt
push
push
popf
xchg
add
dec
dec
dec
ja
sarb
adc
imul
and
pop
or
into
dec
es
lret
cmpsl
mov
jnp
adc
sub
test
xchg
or
addr16
pop
flds
jmp
pop
fwait
in
dec
mov
cwtl
ss
cmpsl
pusha
cli
lds
in
inc
punpcklbw
mov
sbb
enter
dec
inc
ds
insl
ja
cmp
adc
mov
int3
or
lcall
pusha
or
push
cmpsl
cmpsl
xor
dec
cmp
scas
lds
push
negl
int3
cmp
test
ds
imul
push
icebp
xchg
scas
xchg
adc
jge
push
add
jge
cs
push
pop
testb
jmp
mov
adc
hlt
and
mov
ljmp
addl
imul
in
scas
mov
inc
cmpsb
aaa
and
adc
stos
sbb
inc
loopne
mov
mov
es
aam
sub
leave
in
jns
arpl
arpl
sub
xchg
cmp
les
insb
arpl
in
push
das
push
lea
adc
push
cmpsb
mov
scas
cmp
fimull
int
in
sub
and
cltd
fidivs
push
or
out
roll
cmpsb
pushf
ret
int
cmp
sub
sbb
pop
pop
mov
es
push
lock
xchg
data16
mov
push
addr16
fisubrs
mov
inc
mov
lret
aas
fdiv
test
cmp
loop
sbb
dec
loope
arpl
xor
cwtl
mov
mov
mov
cmpsl
sbb
mov
adc
mov
mov
pop
ljmp
pop
outsl
sarb
std
ja
inc
hlt
dec
stos
or
push
dec
es
jl
xor
adc
call
in
cmp
popa
push
or
call
xchg
push
jg
add
cld
adc
cmpsb
jecxz
sahf
pop
movsb
pop
xchg
dec
adcb
jmp
and
inc
mov
pop
repz
mov
clc
insl
scas
mov
call
xchg
xor
pop
faddp
stos
or
into
fisttpl
push
pop
jge
or
aam
jle
xchg
adc
cmc
mov
stos
or
mov
mov
jmp
nop
mov
in
cmpsb
testl
xor
dec
lret
clc
ret
add
cmpsl
push
dec
lods
psubusw
ljmp
dec
ret
shlb
in
xor
mov
mov
out
push
scas
lods
aam
stc
bound
push
push
jbe
cltd
jmp
test
jmp
jp
gs
pop
sub
inc
xchg
and
fisttps
rcrb
mov
inc
sbb
mov
push
fwait
stos
pusha
cmp
inc
popa
iret
mov
popa
cmpsl
jp
add
cld
mov
cmp
adc
xchg
in
mov
gs
nop
and
jnp
jecxz
mov
dec
adc
push
ret
es
xchg
mov
or
adc
add
fs
scas
jge
sub
aam
push
xchg
es
sbb
push
bound
subl
andl
add
aaa
push
push
adc
xchg
mov
add
push
mov
push
push
addr16
or
pop
or
xor
mov
in
lods
inc
cmp
mov
cmpsb
mulb
xchg
push
lahf
or
or
mov
cmp
adc
loop
sub
js
fdiv
sbb
fcompl
mov
mov
shll
data16
aad
dec
push
adc
dec
repz
jecxz
push
loope
or
mov
or
dec
sbb
out
inc
cld
or
fisubl
enter
mov
xchg
add
adc
push
dec
cmpsb
push
jo
repnz
mov
outsb
and
mov
push
pop
adc
in
mulb
add
mov
sarl
and
jg
inc
lods
push
stos
push
jecxz
pushf
sbb
hlt
dec
jecxz
adc
mov
popf
sahf
mov
icebp
subl
sbb
add
es
scas
dec
int3
sbb
add
adc
push
jle
cli
sub
jg
cmp
dec
es
ret
sbb
fdivrl
or
das
inc
leave
xor
mov
push
mov
repz
sbb
jnp
repz
icebp
xchg
pop
xor
xchg
mov
in
push
add
pop
lcall
daa
loop
icebp
stos
mov
mov
testb
sbb
pop
cmpsb
ljmp
pop
adc
add
mov
cltd
ljmp
ljmp
movsl
mulb
inc
pop
dec
add
inc
leave
sbb
pop
loop
incl
sbb
insl
mov
in
mov
push
into
sbb
pop
cwtl
or
xchg
jne
decb
or
inc
repnz
inc
andl
notl
inc
cmpsb
and
mov
into
bnd
insb
mov
rorl
cmpsb
int3
adc
add
cmpsb
out
jle
xor
sbb
mov
xor
lods
jae
movsl
xchg
jg
cmp
mov
cmp
dec
mov
xor
rcrb
leave
cmpsl
jecxz
inc
stos
dec
js
sbb
dec
aam
mov
retw
cs
cmpsb
pop
pop
dec
jnp
notb
jbe
inc
cmpsl
jne
enter
pop
rcll
cmpsl
sub
jmp
mov
cmpsl
add
add
fbld
test
jg
popf
mov
addb
dec
leave
xchg
movsb
inc
in
sub
mov
imul
inc
xor
add
cmpsl
jge
xorl
jle
cmpsl
nop
sbb
adc
std
arpl
ret
mov
aas
inc
jbe
dec
call
mov
cwtl
jge
mov
gs
push
push
sti
leave
adc
data16
cli
push
dec
imul
aad
push
jns
test
jmp
inc
jp
jg
out
jge
xchg
sub
or
push
push
addl
ljmp
mov
push
pop
sbb
scas
cmp
push
movsb
das
pop
adc
push
idivl
xchg
ljmp
mov
or
in
dec
pop
out
es
mov
cmp
repnz
sbbb
arpl
mov
jnp
and
cmpsl
data16
shlb
mov
aad
shr
jg
inc
stc
data16
aam
mov
mov
jnp
mov
push
xor
push
shrl
push
outsb
gs
ret
pop
push
pop
mov
fwait
loop
iret
hlt
push
jo
inc
jl
imul
push
dec
cmp
mov
xor
sbb
sub
cmpsb
cmp
dec
pop
shrl
xchg
test
sub
addb
jp
mov
filds
rclb
xchg
gs
jns
gs
lea
xchg
pop
adc
ljmp
push
out
sub
adc
or
shlb
das
or
mov
jg
rolb
movsl
sub
or
andb
loopne
add
mov
pop
adc
fcompl
repnz
add
stc
jno
xchg
fiadds
ret
pop
xor
cmp
add
pop
mov
out
insb
fbstp
or
cltd
jne
add
fldenv
jmp
ja
dec
popf
int3
cmpsb
adc
sub
mov
or
xchg
inc
mov
ret
scas
js
mov
faddp
xchg
mov
cld
mov
call
in
daa
push
sub
loopne
insl
xor
imul
movl
or
sbbb
mov
cmpsl
in
out
inc
sbb
ret
inc
jns
mov
jg
mov
mov
incb
fs
push
shrb
xor
cmpsb
aaa
es
jnp
or
dec
aaa
sbb
inc
daa
and
sub
fsubrp
int
or
push
lods
out
scas
pusha
push
mov
jbe
push
aam
jge
mov
leave
cwtl
mov
dec
xor
and
mov
call
in
fmulp
mov
fs
add
xchg
mov
lds
push
cli
push
cmpsb
insl
adc
mov
mov
and
sub
adc
out
cmpsb
sbb
xlat
mov
mov
push
scas
jns
sbb
or
mov
pop
shll
sbb
mov
xchg
aas
inc
cmc
cmp
cmpsb
dec
mov
xor
push
sbb
jns
push
lds
sbb
jae
iret
cmpsb
lret
mov
jg
jnp
cmp
cmp
test
inc
sti
stos
fisubrs
inc
dec
xor
mov
xor
pop
dec
adc
dec
mov
jno
inc
ljmp
mov
imul
xchg
adc
jb
or
pusha
imul
jns
imul
cmp
jae
adc
mov
mov
cmpsb
lods
or
cwtl
jmp
sbb
daa
cmp
pop
mov
fsubs
dec
test
jnp
stos
repnz
or
inc
mov
mov
imul
xchg
lahf
out
adc
addr16
push
adc
and
cli
or
pusha
mov
enter
mov
add
xorb
aad
push
clc
add
xor
push
inc
jle
jge
or
push
cmpsb
sbb
push
jge
and
jns
pop
outsl
dec
or
rcrb
dec
insl
push
mov
inc
aad
mov
cmpb
rol
adc
add
xor
mov
aad
pusha
gs
ljmp
push
outsb
aad
jbe
mov
jns
loopew
mov
stos
adc
push
ljmp
push
dec
outsl
fistps
test
cmpsl
test
pop
jle
leave
shl
add
jno
inc
push
orb
sub
mov
mov
mov
inc
add
dec
mov
xor
xchg
inc
sbbb
test
xor
cltd
mov
inc
imul
xlat
or
adc
insb
mov
pop
shl
xchg
leave
xchg
jecxz
pop
jbe
nop
push
xchg
jp
ja
sti
add
inc
lret
ss
mov
sub
mov
add
aas
or
xchg
addr16
mov
scas
sbb
add
out
sbb
pop
mov
divl
dec
dec
adc
pop
xchg
out
cmpsl
jecxz
mov
mov
out
shufps
sbb
stc
xchg
dec
push
sbb
repz
ds
movsl
or
addr16
adc
xor
mov
xchg
ret
inc
in
cmp
insb
fisttps
movsb
adc
push
and
jge
mov
cmc
sub
inc
add
push
enter
push
nop
adc
and
sbb
js,pt
mov
shlb
lahf
ret
ja
inc
ret
jge
rorl
mov
ret
adc
adcl
push
mov
mov
jne
repnz
jp
dec
cmpsb
cmpsl
cmp
add
fstpl
jge
sub
jne
inc
xchg
mov
sbb
out
mov
loopne
push
mov
and
mov
jp
in
pusha
jl
adc
mov
cmpsb
push
ljmp
push
jns
push
mov
sbb
adc
jge
pop
jnp
fwait
mov
mov
jecxz
pop
or
cli
aaa
or
add
push
adc
sbb
lret
in
cli
test
mov
push
xor
pop
ds
enter
mov
imul
pop
or
or
or
push
or
popl
adc
dec
dec
xchg
aad
cmpsb
sbb
or
mov
push
cmp
not
or
mov
cmp
cmpsb
mov
sub
fsubs
push
out
shrb
pop
out
aam
adc
mov
push
stos
nop
mov
mov
lock
or
inc
xor
mov
cmp
push
repnz
push
dec
into
xor
arpl
ds
jnp
mov
jle
lock
lods
fadd
push
xchg
jo
xchg
mov
popa
sbb
cmp
mov
mov
push
lahf
pop
jae,pn
adc
stos
sbb
dec
orl
adc
jbe
push
cmp
push
pop
cmp
loopne
cmp
sbb
rclb
aaa
test
sub
sub
subl
sbb
decb
cmp
xlat
or
mov
xchg
ret
mov
mov
mov
inc
roll
lret
pop
mov
ds
mov
cmp
in
pop
pusha
mov
lahf
dec
shrb
jg
pushw
push
inc
and
mov
pop
inc
jbe
ret
pop
xor
cmpsl
movsl
mov
and
adc
es
dec
lcall
in
imul
sbb
push
sahf
sub
or
jmp
push
push
pop
popf
xor
or
dec
lret
arpl
lahf
mov
dec
jne
arpl
cmp
inc
addr16
and
scas
jmp
pop
jnp
and
dec
andl
xchg
and
in
ret
pop
sbb
test
daa
push
sahf
cmp
dec
scas
scas
daa
cmpsl
jecxz
fwait
and
or
mov
cld
xorb
xchg
cmpsb
mov
push
mov
es
aaa
jp
ret
jne
fcmovnb
fildl
daa
inc
xor
jecxz
lds
out
std
jg
pop
dec
or
pop
pop
out
pop
stos
jnp
or
push
sbb
cmp
in
clc
jbe
cmp
sub
jecxz
cmp
adc
mov
ljmp
sbb
scas
pop
xchg
cmp
cltd
add
aad
xor
cld
loop
aas
inc
and
js
mov
outsb
les
es
sti
shl
adc
cmc
inc
in
stos
dec
sbb
mov
enter
dec
push
push
push
cmpsl
sbb
pop
scas
bound
scas
mull
sbb
dec
cmp
cmpsb
gs
pusha
test
sti
mov
dec
adc
ret
dec
mov
roll
xchg
cli
pop
xor
xchg
pop
cmpsb
or
ret
adc
mov
ret
cmpsl
jle
mov
insb
aad
out
push
addl
push
popf
cmpsl
arpl
jl
xchg
lods
mov
out
leave
cmpsl
push
jmp
dec
mov
loopne
fbstp
adc
fwait
dec
push
lea
jmp
bndstx
inc
add
stos
daa
mov
sbb
add
xor
fstpl
cmpsl
mov
cld
das
daa
cmpsb
fidivs
push
mov
sub
faddl
stos
add
cmp
pop
outsb
insl
scas
inc
aas
dec
std
mov
xchg
and
inc
add
es
in
push
mov
sbb
ja
xchg
rorb
fiadds
push
sarb
in
add
les
add
xchg
adc
ret
mov
or
pop
mov
addr16
jne
int
jp
mov
js
shlb
ljmp
aad
cmpsb
adc
pop
jmp
xchg
lcall
sarb
adc
dec
xor
les
test
pop
inc
shrb
inc
fucomip
jnp
jecxz
mov
xor
mov
rorl
adc
jg
mov
test
pop
dec
pop
mov
jne
shll
lahf
ja
mov
sub
pop
pop
sbb
and
sub
shll
sub
clc
cmp
dec
xchg
mov
inc
into
push
jle
xor
dec
inc
mov
sub
into
movsl
mov
dec
push
dec
push
getsec
jp
mov
in
js
sbb
popa
push
int3
or
ficomps
jbe
push
es
leave
push
lods
lea
popa
and
fistps
ret
addb
or
cmp
aam
push
jno
js
xor
shlb
fs
sbb
push
mov
cmp
mov
jecxz
xor
mov
testb
dec
inc
sub
jge
adc
cmpsl
jne
inc
mov
shl
mov
in
sbb
sub
ja,pn
add
dec
and
fisubrs
out
iret
inc
push
xchg
dec
lds
jmp
add
pop
sbb
and
in
jecxz
rcrl
cmpsl
xor
ljmp
mov
in
cmpsl
lahf
out
js
sub
jmp
lcall
adc
andl
mov
sbb
nop
dec
pop
orl
sti
fdivrl
aam
and
pop
mov
test
pop
and
sbb
inc
add
add
loopnew
mov
mov
cmp
push
fisubl
shrl
nop
loopne
jmp
into
pop
inc
push
adc
jb
adc
lea
dec
mov
jle
fisubs
pop
mulb
int3
fs
ds
mov
lahf
cmpsb
xlat
int3
ret
aas
xlat
xchg
loope
adc
and
out
fwait
lods
xchg
cmpsl
mov
ds
test
cmpsb
xor
or
stos
mov
inc
pop
pop
cmpsl
sbb
pop
adc
xor
pop
push
imul
arpl
fdivs
std
imul
jo
push
lods
xor
cmc
and
pop
cmc
mull
xor
lret
shrl
es
out
and
sbb
mov
xor
inc
dec
adc
jp
cmpsb
mov
sbb
bound
cmp
push
dec
xor
repnz
int
in
jnp
xchg
pushf
out
test
jmp
inc
enter
dec
ret
fildl
pop
loopne
ret
int3
adc
cmpsb
test
cmp
add
loope
popf
inc
out
inc
dec
dec
pop
aam
out
xchg
cmpsl
jmp
sbb
pop
jecxz
jb
push
ss
cmpsl
mov
dec
dec
rorb
jle
imul
cmp
insb
sti
cmc
mov
or
ljmp
insb
xchg
lods
mov
dec
dec
inc
imul
icebp
outsl
ja
insl
mov
push
add
das
jge
leave
jle
lret
idivl
push
jg
dec
lods
push
aaa
push
adc
mov
mov
into
leave
xlat
pop
adcb
test
clc
lret
xchg
cs
sbb
cli
push
xchg
lahf
adc
pop
fiaddl
xor
jo
nop
in
mov
filds
xchg
loopne
sbb
add
fbstp
shr
jo
and
sahf
and
inc
adc
jl
xlat
inc
leave
dec
cmp
push
lods
scas
sub
push
and
loopne
mov
out
sbb
mov
and
es
dec
mov
and
scas
stc
inc
cmpsl
add
mov
ret
mov
lea
push
mov
inc
adc
jbe,pn
xchg
sbb
and
into
mov
int
sub
sahf
pop
sbb
push
fcompl
arpl
jmp
or
fwait
shlb
dec
aas
adc
and
or
sahf
test
dec
shlb
pushf
xchg
out
pop
xor
jp
pop
sbb
sahf
addr16
xchg
xor
dec
lcall
pop
inc
pop
stos
cmp
js
inc
stc
dec
das
xchg
sub
stos
addr16
insb
mov
leave
cmpsl
das
roll
pop
out
adc
inc
or
xor
sbb
addl
or
out
sahf
scas
jp
cmp
xchg
mov
mov
pop
adc
cltd
jg
cmpsb
mov
ret
push
xchg
and
jns
lea
icebp
add
and
in
aad
imul
cmp
ret
jl
inc
jae
add
jecxz
mov
in
or
dec
jnp
out
sbb
fwait
sub
push
pop
es
in
inc
imul
adc
sbb
push
loop
mov
fldl
setnp
push
or
lret
push
iret
jnp
and
xchg
outsb
jo
add
into
imul
push
cmp
pop
push
in
cmpsb
lret
in
push
adc
xchg
xchg
movb
bound
mov
cmp
add
imul
fnstsw
mov
add
xor
cmpsl
pop
int3
mov
cs
pop
sub
xor
xacquire
hlt
mov
cmpsl
jmp
push
out
dec
pop
inc
call
insl
xor
lods
outsb
pusha
lea
call
daa
pop
xlat
inc
cmpsb
cltd
mov
aad
pushf
mov
mov
or
mov
pop
in
outsl
push
lret
rclb
fs
in
scas
daa
push
ret
out
dec
aaa
outsb
push
out
mov
push
mov
pop
jnp
ljmp
inc
or
sbb
aad
ret
and
jbe
pop
push
push
push
jne
add
adc
pushf
aas
and
out
testl
aam
aas
mov
cmpsl
insb
fisubs
pop
sbb
fldenv
sub
jmp
sbb
xor
or
xchg
cmp
push
cli
mov
and
adc
leave
outsl
cmpsb
mov
jns
fldl
add
lock
cmpsb
or
lret
mov
mov
cmp
push
push
xor
in
adc
inc
sub
rcll
daa
inc
push
fs
inc
adc
and
cld
push
decb
cmpsl
adc
xchg
or
shlb
cmp
adc
out
cmpsl
filds
ss
int
and
jb
jns
pop
mov
subl
xchg
or
dec
pusha
cmp
nop
cld
or
inc
or
push
imul
bound
fidivrs
lods
or
subb
aaa
sub
roll
push
xor
out
adc
outsb
arpl
in
and
pop
mov
add
je
xor
jno
sbb
push
out
call
xchg
adc
adc
rcl
hlt
and
dec
or
cld
popa
popa
rol
cmpsb
movsl
in
cltd
inc
push
and
adc
cmpsb
repz
sbb
jge
or
fsubl
fsubrs
orl
popa
fistpll
jbe
push
sub
outsl
sub
pop
push
mov
xchg
mov
repnz
adc
roll
cmp
sar
inc
sbb
push
xchg
daa
xchg
movsb
call
cmpsl
inc
mov
or
jbe
push
adc
sbb
and
or
dec
popa
fucomip
mov
and
cmc
mov
clc
mov
pop
push
sar
js
repz
dec
push
aam
xor
and
push
in
xchg
jle
into
mov
push
xchg
ret
js
gs
movsl
pop
movsb
push
mov
mov
sbb
fisubrs
and
and
adc
movsb
cmc
pop
ret
sbb
idivb
icebp
sarl
sub
daa
mov
in
fmul
sti
xchg
pop
inc
pop
push
mov
mov
dec
push
cmp
inc
push
pop
testl
push
mov
add
mov
dec
xchg
mov
outsl
call
jne
pop
mov
push
mov
adc
ret
push
bound
mov
icebp
fstpl
xchg
push
xchg
dec
decb
sbb
rcrl
hlt
in
mov
shlb
push
out
cmp
out
mov
push
divb
pop
mov
std
insl
push
jge
shll
adc
shlb
lods
add
rclb
jae
cmpsl
ss
imul
cmpsb
xor
cmp
je
dec
scas
inc
sti
pop
dec
test
movsl
or
mov
andb
divb
lahf
push
lds
mov
stos
dec
dec
outsb
dec
xor
orb
repz
mov
movb
xlat
adc
pushf
ffreep
pop
adc
lcall
repnz
xchg
cltd
into
mov
sub
fstl
cmp
mov
leave
and
add
int
pushf
dec
sbb
bound
and
add
insl
push
pop
das
jae
xchg
jmp
icebp
out
je
dec
xor
adc
pop
scas
stc
aad
jns
adcl
sub
into
pop
adc
imul
mov
movsb
mov
push
lods
out
leave
cmpsb
cmp
pop
fidivs
mov
lea
test
add
shll
scas
cmpsl
dec
push
jae
test
mov
dec
andl
mov
xor
push
jns
int3
mov
mov
mov
out
cmpsb
lret
xchg
cmpsl
mov
data16
inc
ljmp
mov
inc
cmpsl
inc
fstps
aaa
pop
call
inc
xchg
aas
xchg
out
mov
xchg
or
mov
inc
int
add
lock
mov
inc
aam
sbb
mov
mov
cltd
into
sbb
mov
inc
cmp
or
roll
loope
pop
ficomps
adc
jge
xchg
sub
push
inc
push
push
mov
fimull
aad
push
inc
jmp
in
and
imul
inc
jne
pop
lock
pop
lock
add
add
xchg
inc
idivb
scas
cmpsl
out
mul
das
js
xor
js
mov
push
sbb
push
cmp
cmpsl
xchg
push
sub
cmp
adcl
cmpsb
in
push
into
pop
aam
arpl
popf
mov
push
adc
mov
adc
inc
cmc
mov
rolb
cmpsl
cmpsl
mov
push
push
inc
and
mov
rorl
adc
mov
xor
ja
movsb
mov
imul
mov
mov
sub
cmpsl
ret
mov
mov
or
loopne
mov
push
in
ljmp
push
or
stc
cmp
jg
mov
inc
push
or
imul
rcrb
pop
cmp
test
rcrb
mov
or
fsubp
int
xor
mov
adc
scas
jl
stos
push
push
pop
cmpsb
jne
jp
cmp
add
arpl
dec
push
ds
dec
sahf
pop
dec
sub
inc
das
jnp
mov
stos
sbb
fiaddl
and
jnp
jns
jg
fisubl
mov
sbb
lods
loop
scas
sarb
cli
dec
stos
adc
dec
jg
repz
in
je
pop
scas
push
push
adc
sub
push
push
jecxz
sbb
xchg
lret
pop
and
arpl
xor
lea
or
adc
adc
dec
add
les
add
stos
push
mov
xor
nop
out
jae
outsb
add
shlb
lahf
jns
cmp
mov
cmpsb
fisttpl
sub
add
cmpsl
in
xchg
or
adc
add
test
imul
adc
inc
lcall
repnz
shlb
lock
mov
dec
rolb
mov
push
call
into
cmpsb
aam
popf
mov
fiadds
dec
jb
out
push
xchg
shlb
adc
add
insl
fwait
lods
cli
xchg
inc
ss
sub
cwtl
dec
push
cmp
js
dec
push
ret
pop
mov
dec
xchg
cmpsl
lret
adcb
mov
repz
mov
sbb
cmpsl
fsts
ret
or
inc
mov
jmp
mov
in
pop
sbb
aam
int3
ret
jb
mov
mov
inc
mov
lcall
push
xor
in
cmpsb
pusha
mov
loopne
fs
in
bound
movsb
ds
movaps
adc
ds
mov
jae
cmp
inc
mov
es
in
movsl
jmp
movsb
les
gs
pusha
mov
stos
add
sbb
push
hlt
dec
cmp
push
push
mov
push
insl
pop
insb
dec
fcmovnb
adc
dec
fsubrp
jge
test
dec
xorb
push
dec
in
push
popf
push
and
stos
test
pop
stos
icebp
in
arpl
inc
shlb
add
add
js
cli
outsb
ror
push
pop
js
sbb
loope
icebp
inc
dec
push
sub
push
or
add
cmp
inc
loop
aad
push
push
out
pop
popf
add
dec
xor
loopne
ret
mov
push
sti
enter
sti
mov
movsb
and
mov
adc
adc
out
xchg
into
sbb
icebp
mov
repnz
sbb
mov
out
push
sbb
ficoml
imul
andb
xchg
pop
jnp,pt
jne
dec
iret
loopne
jl
or
fwait
adc
stos
js
popa
dec
dec
es
mov
push
ds
ret
cmp
xor
test
idivl
pop
push
or
mov
leave
frstor
fdivp
mov
mov
pop
leave
test
loope
dec
pop
shlb
pop
push
pusha
jns
or
jbe
es
sbb
lahf
jl
loop
fdivl
cmpsl
jbe
cmpsb
push
mov
jno
dec
fistpl
cmpsb
dec
call
xchg
shrb
jo
xor
xor
pop
mov
das
sbb
or
int
and
adc
cli
pop
push
jne
pushf
nop
je
xchg
jb
xorl
loopne
mov
nop
cmpsl
inc
xchg
adc
lods
pusha
not
cmpsb
xchg
test
mov
jno
mov
std
xchg
or
adc
cmp
mov
lds
cmp
scas
cmp
iret
cmpsl
adc
push
outsl
lret
sub
mov
ds
xchg
call
lcall
jae
jmp
add
insl
mov
ljmp
push
cmp
jmp
cmpsl
sbb
das
sub
inc
xchg
push
xor
sbb
adc
push
stc
push
test
jl
add
into
mov
lock
mov
or
jnp
fisttpl
es
mov
cli
rcll
out
shll
in
cmpsl
sahf
popf
cltd
test
mov
mov
pop
or
push
mov
sbb
xlat
push
mov
xor
popa
sbb
sbb
sbb
in
mov
popa
inc
xor
push
push
jmp
stos
out
inc
sahf
cld
aas
pop
mov
mov
rcrl
mov
subl
lods
xchg
inc
jnp
fst
int
mov
xchg
jnp
push
push
pop
incl
test
and
pop
out
xchg
decb
or
pushf
and
dec
add
je
out
sarb
js
push
lds
jnp
es
jmp
push
push
lods
xchg
jbe
dec
jno
push
add
and
idiv
adc
adc
test
sbb
pop
jno
hlt
js
js
or
dec
mov
push
shrd
sbb
mov
or
jmp
lds
and
jle
loop
aaa
xchg
xor
mov
sbb
lods
or
jnp
xor
int3
or
push
pop
mov
jne,pt
ja
scas
pusha
les
or
mulb
orb
pop
test
xor
aas
cmpsl
jne
push
shl
lods
mov
pop
cmpsl
mov
aam
test
js
fldcw
dec
jnp
or
stos
out
aas
mov
cmp
out
adc
mov
es
in
fists
or
stc
mov
jo
mov
mov
pop
push
shlb
jge
cmpsb
cmp
mov
inc
pop
scas
in
xor
fidivs
sub
mov
sbb
shll
loop
jg
pop
jo
and
insb
inc
cmpsl
pop
cmp
jecxz
into
orl
into
call
add
or
mov
cli
xor
out
into
in
shll
rcrl
mov
lret
pop
inc
into
cli
push
addb
ja
or
push
lret
jecxz
dec
dec
sub
mov
lods
jge
inc
jmp
xor
ficoms
int
scas
adc
jbe
jge
sbbb
das
cmpsl
jmp
sbb
stos
jg
push
pop
dec
xor
or
mov
jo
mov
lds
cli
out
js
popa
push
es
arpl
lods
loopne
pop
scas
inc
or
fs
or
fildl
sbb
dec
cmpsb
jne
mov
je
xchg
lret
pop
addr16
clc
and
jae
fidivrs
mov
sub
js
cmp
mov
aaa
or
into
xlat
mov
fistpll
and
sbb
in
inc
cmp
daa
in
and
inc
cmc
cmp
gs
xor
xlat
aad
mov
or
aaa
faddl
loop
or
push
rclb
and
push
mov
cmp
sbb
cmp
and
icebp
inc
inc
mov
pop
pusha
or
dec
and
js
cwtl
test
imul
pop
mov
cwtl
sub
pop
adc
cmpsl
mov
mov
cmpsb
in
and
sub
xchg
ret
das
negb
mov
or
fisttpl
pushf
loopne
sbb
cmp
sbb
push
mov
stos
and
sahf
test
adc
jnp
dec
mov
pop
sub
cmp
mov
lods
cltd
pop
push
dec
and
pusha
cmp
add
sar
fiadds
ja
jb
es
stos
push
xchg
sarb
in
cmpb
dec
cmp
jg
mov
jo
popf
movsb
cmp
dec
xchg
sbb
inc
cmpsb
shlb
jl
dec
pop
push
xchg
xor
lods
ds
dec
jno
fs
ret
adc
sarb
and
pop
inc
inc
and
mov
mov
cmpsb
xor
shr
jne
int
stos
cmp
push
pop
dec
dec
adc
sbb
in
enter
inc
pop
xchg
scas
leave
adc
lret
push
das
or
mov
push
mov
repz
cwtl
in
sub
or
scas
mov
pop
das
in
inc
cmpsb
dec
sahf
inc
es
xor
mov
pop
mov
gs
test
nop
cmpsb
shll
add
push
push
pop
add
aam
imul
es
jb
pop
insl
and
pop
xor
aas
ljmp
mov
fsubrp
jns
scas
in
hlt
mov
inc
aaa
out
mov
aas
fs
inc
lret
lahf
pop
mov
jne
adc
mov
ja
dec
cld
mov
or
push
xchg
dec
sbb
hlt
pop
mov
jmp
xchg
pop
rcl
lahf
div
pop
sbb
adc
and
cmp
mov
xchg
test
rcl
or
mov
in
xchg
lret
push
add
pop
mov
inc
cli
xor
push
daa
dec
adc
inc
fildl
sahf
jl,pn
popf
jle
es
out
or
add
mov
pop
rolb
cmp
fldcw
unpckhps
lahf
ret
scas
adc
dec
xchg
xchg
jns
inc
sbb
shll
push
aaa
sbb
mov
jae
shlb
and
xor
jge
sbbl
pusha
test
cmpsl
sub
nop
fsub
jl
adc
negb
jne
test
cmp
mulb
andb
fisubs
add
test
fucomi
orl
mov
ficomps
aas
popa
jmp
xchg
psubusb
fwait
scas
or
orb
mov
mov
insb
jbe
push
adc
sbb
icebp
arpl
mov
ret
mov
loop
pop
pop
adc
push
shrl
add
stos
xchg
shlb
jecxz
dec
fs
aaa
pushf
jae
sbb
test
aad
xor
sub
int
loopne
pop
and
ljmp
outsb
push
insb
cmpsl
aad
dec
pop
rcl
push
add
jae
insb
adc
test
add
mov
jg
pop
adc
inc
cmpsl
xchg
shll
or
or
repnz
int
push
inc
jns
loop
push
inc
pop
imul
outsb
jmp
pop
mov
push
jle
cmpsl
and
in
cmp
pop
movsl
add
cltd
push
pop
ret
ja
outsl
pop
add
in
lret
push
popa
mov
xchg
out
rcll
inc
ja
push
adc
mov
std
mov
xchg
pop
push
aaa
sarb
add
sbb
cmpsb
sbb
enter
cmpsl
and
dec
cmp
js
adc
push
jle
insl
push
ret
jnp
popa
lods
repz
or
xor
push
inc
ficoml
ja
lock
popa
push
add
pop
lahf
cld
out
add
ficoms
negb
call
out
les
lret
cmpsl
sbb
loopne
sub
xchg
lret
lahf
push
push
shlb
sbb
push
adc
cmp
xchg
push
in
cli
pop
aas
aam
imul
xchg
fwait
cmpsl
jnp
push
mov
call
pushf
lods
inc
sbb
add
cmc
mov
mov
adc
out
cmp
add
loop
jb
add
bound
in
push
mov
ljmp
xchg
cmp
jne
jnp
mov
and
inc
adc
imul
sbb
push
adc
into
mov
push
orb
shlb
jnp
enter
mov
cs
andb
jne
scas
aas
es
pop
xchg
dec
sub
push
sbb
pop
testl
fldt
lcall
and
jge
xchg
add
jecxz
push
adc
pop
mov
mov
insl
test
mov
cmp
enter
cmpsb
push
jno
mov
mov
jmp
xchg
out
jecxz
aas
out
inc
ficoms
jge
sti
ret
lret
cmp
out
fcmovbe
lock
ffreep
bound
lods
inc
push
cmp
fsubrs
aam
pop
icebp
fimuls
and
mov
sbb
testl
inc
mov
push
ret
pop
js
imul
inc
cmpsl
pop
sbb
scas
adc
movsl
cmp
pusha
imul
ret
dec
loop
into
addl
enter
push
push
push
into
lahf
test
nop
test
mov
adc
arpl
sub
icebp
push
cmpsl
int
fwait
sub
lret
in
loop
add
leave
enter
mov
cmc
inc
xchg
bound
adcl
mov
iret
add
jle
pop
xchg
int
cmpb
cmp
pop
bound
inc
enter
inc
dec
or
cmc
lret
lds
fmulp
pop
es
mov
adc
dec
call
jne
cmp
xchg
ss
cmp
sarb
adc
or
rorl
cld
push
rcl
jg
cmpsl
fldenv
testb
xor
push
int3
push
mov
adc
insb
push
lods
out
mov
cmpsb
mov
mov
pop
and
ret
es
xor
push
push
inc
mov
sbb
inc
pop
mov
cmpsl
sbb
std
daa
ss
cmp
add
popf
out
xor
pushf
adc
inc
mov
mov
pop
cmpsl
push
pusha
xor
pusha
inc
cmp
addr16
das
mov
adc
or
loopne
lret
jb
out
or
loop
test
or
mov
pop
fucom
push
push
ficoms
dec
ret
es
jbe
cmpl
xchg
sti
push
fbstp
cmpsb
push
sbb
pop
push
mov
mov
popa
leave
or
xchg
lock
xchg
mov
jbe
inc
cli
lds
xor
mov
lret
data16
or
div
adc
inc
repnz
std
mov
dec
adc
push
or
insb
dec
jns
push
cmpsl
sub
xchg
adc
fisubs
dec
inc
mov
jbe
push
and
sbb
and
push
out
mov
int
inc
pop
push
mov
push
push
loop
push
mov
mov
sbb
mov
sbb
dec
inc
push
mov
push
jp
dec
dec
cmpsl
in
add
in
mov
push
imul
rclb
push
xor
or
cmp
sar
add
insl
or
inc
inc
sub
or
jge
sti
mov
ljmp
and
cwtl
push
mov
imul
cli
add
xor
dec
cmp
sub
jbe
adc
push
pop
xlat
ret
push
jns
mov
and
push
xchg
xor
inc
sbb
lods
xor
push
std
es
mov
fldt
cmpsb
lods
and
popa
jle
int
mov
push
or
mov
adc
inc
jle
cmpsl
mov
cmp
jno
mov
aam
mov
in
les
cmp
xchg
mov
dec
cmp
sbb
into
jmp
addr16
sub
sub
sti
mov
xchg
into
or
subb
sbb
xchg
enter
fstpl
add
leave
and
fsubp
out
xchg
inc
ds
mov
jge
push
inc
mov
pushf
mov
popf
or
xor
adc
push
push
cmpsl
sbb
add
mov
or
jecxz
jbe
fsts
mov
add
cld
inc
push
mov
mov
jns
jbe
leave
dec
jl
hlt
push
mov
pop
mov
repz
jg
inc
dec
xchg
ja
pop
faddl
ret
xorl
shll
mov
or
mov
scas
dec
sbb
out
xchg
cli
push
outsb
fisubs
ret
jge
xchg
dec
adc
inc
or
repnz
rclb
push
jg
pusha
mov
mov
adc
sub
pop
movsl
sub
lsl
nop
arpl
mov
fisubs
cmpsl
mov
jle
shlb
and
std
add
pop
mov
int
dec
inc
incl
push
inc
scas
sbb
bound
lahf
xor
pop
push
xchg
jl,pt
ja
es
cltd
pop
out
dec
cld
push
pop
insb
dec
sbbl
lock
out
jp
push
push
ja
andb
xor
add
add
je
adc
xchg
lds
ds
aas
lods
dec
rol
es
cld
ret
sub
xor
mov
in
cmpsb
mov
arpl
rorl
pop
test
sub
push
jne
dec
cmpsb
out
mulb
mov
inc
sbb
ret
loopne
negl
or
jae
in
push
ja
mov
jbe
cmp
ds
fistpll
sbb
mov
popa
inc
clc
out
cmp
cmpsl
mov
xchg
dec
fidivrl
dec
lret
aad
in
push
enter
fisubl
sbb
add
in
dec
xor
stos
dec
pop
cs
add
cmpsl
int
repz
jl
ret
sub
mov
or
cmp
int3
cs
xor
sbb
jmp
ja
mov
les
mov
imul
mov
lret
les
push
and
add
pop
test
jge
es
ret
sub
ds
cmpsl
imul
sbb
addr16
rcrb
xor
or
mov
sbb
jbe
xchg
mov
add
mov
xlat
xor
xchg
jns
jb
repz
into
inc
in
push
inc
mov
pop
loop
rolb
add
into
dec
out
cmp
shlb
movsb
pop
cwtl
aam
xor
dec
pop
jle
jmp
cmp
or
dec
and
cli
es
xor
add
adc
mov
mov
cmpsl
mov
test
lock
push
hlt
or
inc
xchg
rcll
movsb
out
sub
add
leave
fstl
dec
ret
ret
and
iret
int
in
mov
sbb
fcoml
ret
add
cmpsb
xchg
cltd
cmp
dec
cmp
mov
dec
and
dec
pop
sub
leave
in
push
or
test
divb
nop
cmpsb
xchg
inc
lcall
shrl
xchg
push
xchg
lods
push
pushf
sahf
push
pop
jns
lcall
inc
cmp
call
add
inc
dec
iret
xor
pop
xchg
dec
xorl
or
push
xchg
jno
shlb
sbb
mov
lcall
adc
loopne
outsl
nop
cmc
fists
divl
inc
mov
enter
pop
xlat
jne
pop
cmpsl
xchg
int
ret
rcrl
jnp
in
testb
fadds
in
lea
pop
movsb
or
sbb
shl
sti
popf
sub
push
pop
jl
ficoms
add
std
into
lcall
lret
orl
cmovne
mov
add
jge
das
loop
data16
aad
jg
insl
dec
push
ret
and
adc
mov
xchg
jle
jge
sub
add
jae
inc
or
mov
pop
cmp
cmc
mov
jns
aam
mov
push
in
data16
lods
mov
enter
and
inc
jmp
add
je
es
ret
mov
push
dec
stc
ret
scas
mov
loop
dec
ja
dec
or
mov
enter
xor
sub
aam
mov
jo
out
stc
xchg
test
xchg
pop
aad
jle
pop
push
rcrb
test
push
sub
dec
icebp
scas
pop
sub
loopne
leave
movsl
repnz
mov
cmp
mov
xor
ficompl
inc
call
inc
mov
shlb
mov
or
popa
jo
inc
shlb
in
negl
mov
inc
jl
pusha
lods
lock
rcrb
in
adcb
and
and
adc
jnp
pop
mov
pop
int
dec
jle
nop
ljmp
push
adc
xor
xchg
jo
jne
mov
push
pop
adc
push
push
cmpsb
mov
daa
out
sub
sbb
outsb
mov
mov
cmpsb
dec
sub
sbb
movsb
adc
mov
mov
push
lds
cmp
das
xcrypt-ofb
cmpsl
sub
and
out
jl
jne
inc
adc
or
sbb
mov
stc
cwtl
pop
xchg
pop
sub
mov
mov
sub
fnstcw
clc
cmp
cmp
lods
bound
or
rorl
sbb
pop
test
pushf
dec
xchg
es
dec
and
sub
mov
mov
cmp
les
cmp
stc
pop
dec
addr16
lcall
ret
push
mov
inc
lcall
int3
bound
push
adc
adc
xchg
push
xor
xchg
fldcw
std
xchg
lret
add
cli
adc
pop
push
cli
loope
mov
lea
lods
and
ss
xor
add
pop
mov
out
pop
cmpsb
call
jnp
fs
or
xor
xorb
sahf
jbe
jge
sub
shlb
imul
cmp
adc
add
outsl
push
pop
cmpsb
mov
mov
lret
sbb
cmp
inc
dec
xchg
outsb
test
xchg
adc
icebp
out
js
in
jle
jb
ret
lods
mov
in
nop
adc
mov
mov
push
or
add
sarb
movsl
inc
nop
test
dec
es
fldl
inc
imul
insb
aam
fwait
xor
push
cmpsl
pop
clc
dec
mov
push
adcl
insl
repnz
mov
popa
jnp
cmc
fists
iret
sbb
int
jo
adc
pop
or
bound
into
cmpsb
cmp
shll
add
mov
inc
adc
leave
mov
xchg
mov
pop
into
jbe
call
xor
mov
sbb
add
es
int
push
ret
inc
sub
xchg
inc
jl
sub
insl
or
out
call
out
ret
fisubrs
outsb
out
testl
or
sub
lea
push
jge
movsb
mov
push
loopne
xor
jl
jne
ret
aad
pop
dec
inc
ret
ds
ret
mov
push
in
inc
fwait
inc
fldt
dec
fisubrs
aad
pop
cmp
jg
les
mov
loopne
push
pop
xor
inc
inc
xchg
fstps
negb
and
push
sub
inc
test
lods
lock
sbb
push
fwait
push
stc
ret
mov
dec
push
dec
pop
iret
jmp
inc
add
mov
jnp
aaa
push
mov
outsb
ds
popf
or
jno
ret
adc
cmc
lods
push
mov
xorl
test
xchg
jne
sbb
es
ljmp
inc
mov
imul
or
cmpsl
dec
scas
and
roll
push
pop
movsb
iret
in
leave
mov
add
fsubl
mov
mov
inc
jne
roll
dec
daa
jl
imul
add
jbe
push
lret
jge
gs
mov
jecxz
test
push
jmp
or
lret
sbb
dec
fcomps
add
adc
nop
repnz
js
sbb
lds
pop
mov
cltd
inc
jo
stos
out
push
adc
push
pop
adc
out
pop
mov
in
stos
cmp
lods
shlb
add
ds
icebp
adc
sbb
cmpw
xor
lea
jne
fists
int3
mov
pop
cs
outsb
cld
sarb
jo
lret
in
mov
ljmp
sbb
adc
negb
xchg
pushf
movb
rcrl
jmp
out
cmpsb
sbb
aad
fistpll
inc
rorb
push
cmpsl
clc
xchg
nop
outsl
lods
push
pop
ret
and
jg
out
ret
jl
cwtl
lcall
jl
cli
js
scas
mov
mov
call
adc
sahf
movb
nop
lcallw
loopne
jge
jl
lcall
push
mov
or
dec
je
call
push
add
jle
arpl
xchg
into
sbb
mov
nop
mov
mov
xor
rol
repz
movw
inc
mov
xor
and
notb
pop
shlb
inc
pop
xor
sub
mov
pop
out
shl
dec
xchg
les
sbb
fisubrs
orl
sbb
xchg
cmpsb
push
push
xchg
clc
and
ljmp
dec
mov
shrl
mov
push
or
pop
and
xor
sub
rclb
jecxz
ficoml
imul
adc
push
lahf
in
sbb
jnp
imul
sub
sbb
lret
jb
jle
es
ljmp
xchg
notl
or
cmp
cmpsl
lock
pop
xor
jbe
add
cmpsl
andl
add
push
xor
xchg
mov
cmpsb
in
sbbb
jns
fsubl
and
jns
pop
fbstp
rolb
out
divl
inc
popf
pop
jae
stos
inc
adc
jae
fwait
add
mov
sbb
int
inc
jg
cmpsl
push
or
jecxz
lods
scas
orl
push
jg
sbb
xchg
pop
ret
inc
add
push
mov
jle
cmpsl
inc
xor
dec
push
and
sub
cmp
out
in
xchg
aas
push
js
fsubs
inc
mov
pop
ret
jge
test
adc
mov
xorb
inc
xchg
sbb
cmp
pop
sub
jns
mov
push
inc
sbbl
imul
ss
jge
arpl
adc
sti
jecxz
fiadds
incl
sub
push
or
xchg
testl
mov
sub
je
mov
cmp
sbb
leave
mov
xchg
cmp
sbb
shlb
into
adc
testb
jnp
fwait
in
pushf
dec
shufps
xor
dec
inc
out
adc
jecxz
xchg
adc
jmp
xchg
dec
xchg
xor
xchg
into
cli
cmpsb
sub
fidivl
clc
jmp
dec
adc
es
clc
in
or
pop
push
mov
in
push
or
inc
pop
dec
lock
lods
bound
adc
lret
ret
divl
pusha
clc
push
xchg
jns
adc
jecxz
mov
sub
xchg
aam
andb
int3
dec
xchg
push
push
fdivrs
adc
fidivs
scas
hlt
sbb
stc
scas
push
das
push
jno
into
cmpsl
aam
adc
pop
out
xchg
lret
jmp
rcrb
dec
mov
daa
dec
lahf
xor
js
pop
sbb
fisttps
stos
popa
iret
push
and
pusha
movsl
ljmp
push
inc
lret
fidivrl
sbb
mov
dec
dec
push
rcll
imul
sub
add
xor
inc
aad
push
pop
adc
or
into
cmpsl
jecxz
mov
inc
aaa
es
test
lcall
es
adc
jp
into
adc
test
pop
mov
cmc
ret
add
pop
pop
xlat
ret
add
cli
push
jg
or
sbb
call
call
mov
dec
setnp
jne
xchg
mov
sbb
in
inc
fs
jecxz
push
cmp
pusha
hlt
jecxz
adc
arpl
or
lea
add
cltd
sbb
pop
push
push
dec
xor
pop
mov
movsb
push
and
jle
shrl
sub
push
cld
mov
sbb
adc
dec
imul
mov
pop
jbe
stos
fadds
adc
es
mov
or
jbe
push
mov
cmpb
loopne
stos
jo
pop
aad
mov
xchg
inc
loop
pop
lds
mov
aam
xlat
lods
inc
cmp
testb
insb
inc
mov
movsb
fisubs
and
jmp
add
pop
mov
sbb
mov
je
cmp
mov
cmpsl
cld
sbb
in
xchg
aas
cmp
into
sub
or
add
mov
shll
lahf
xor
cmpsb
xor
inc
push
pop
pushf
jl
push
add
adc
xchg
push
sbb
arpl
gs
inc
xor
inc
lret
es
rcl
adcb
adc
sti
jns
iret
jp
andl
dec
fdivs
or
fstpt
jg
popa
adc
add
in
push
lds
cmpsl
in
daa
sarb
aad
dec
mov
add
dec
mov
inc
mov
in
mov
aam
jnp
repz
popf
insl
aas
jge
cli
out
pop
jmp
inc
and
int3
or
jecxz,pn
pop
xor
movsl
add
and
imull
pop
lods
or
aas
ljmp
out
jae
call
cmp
outsl
mov
int
mov
mov
jp
dec
test
jo
mov
sbb
add
add
int
jmp
aad
cmpsb
data16
pusha
jmp
sbb
mov
or
ret
push
stos
inc
inc
aas
movsl
loop
hlt
xchg
lret
pop
ds
cmpsl
out
push
call
arpl
sub
push
in
adc
arpl
movsl
out
ret
pop
push
cmpsb
dec
xchg
out
inc
out
push
std
jo
cmpsl
xchg
adc
insl
mov
sbb
pop
and
sbb
sub
adc
out
shrl
fwait
mov
xor
imul
out
mov
or
ret
bound
call
in
ja
hlt
jno
adc
lods
aad
imul
ja
dec
xchg
fcomps
data16
int
aad
or
mov
mov
clc
dec
stos
stos
xchg
push
cmpsl
jecxz
dec
cmp
cmc
or
sub
rclb
rcrl
jmp
sbb
mul
aad
xchg
sbb
lock
les
xchg
pushf
mov
in
sbb
stc
jl
sbb
cld
push
pop
test
out
xor
push
add
add
inc
cmpsl
pop
mov
leave
cmp
es
scas
mov
inc
sub
jmp
in
and
in
pop
mov
sbb
adc
hlt
in
xlat
xchg
cs
ficoms
stos
jb
call
arpl
lcall
cmp
pop
push
or
add
sbb
dec
mov
rcrl
sbb
adc
push
imul
mov
inc
daa
xchg
add
push
sahf
or
and
lods
adc
mov
xor
xchg
and
lods
inc
repnz
mov
push
cmp
shll
mov
push
xchg
or
adc
sbb
dec
sbb
enter
add
inc
sahf
push
lret
mov
sbb
decb
shrb
jecxz
pusha
push
push
setge
stos
jle
cmpsl
out
icebp
pop
into
ss
cmpsb
pop
sbb
out
push
ss
lods
add
test
popa
lods
and
bound
jne
daa
dec
mov
xchg
test
and
call
pop
adc
push
cmpsb
push
mov
adc
jl
arpl
sub
daa
ss
lea
sbb
jns
lods
mov
xor
mov
push
push
fsubrp
idiv
mov
scas
jno
loopne
ficomps
cmp
jo
out
out
es
hlt
outsl
in
mov
cmpsl
fiaddl
cmp
mov
pop
sub
pop
mov
xor
sti
test
dec
xchg
dec
shlb
sbb
push
mov
mov
mov
and
fldcw
ljmp
cmpsl
nop
jle
subb
mov
cmpsl
mov
dec
mov
jle
insl
jb
in
stc
add
jg
pop
add
push
xchg
mov
lods
ds
pop
pop
pop
push
inc
push
dec
js
loopne
or
outsb
inc
data16
lods
pop
xchg
xor
ljmp
ss
mov
sbb
cmpl
xchg
lock
pusha
mov
ret
push
mov
mov
mov
pusha
sub
into
add
xor
sbb
mov
out
xchg
rcrl
mov
push
repnz
cmpsl
in
and
mov
ss
xchg
test
mov
pop
sub
pop
aad
cmp
out
mov
lahf
push
scas
lock
dec
add
rcrl
dec
rol
cli
xor
cmpsl
mov
inc
shlb
adc
scas
sub
jnp
movsl
mov
aas
or
add
into
cmpsb
mov
push
pop
inc
mov
add
add
pushf
mov
std
sbbb
shll
js
out
mov
cld
dec
nop
cltd
out
test
inc
xchg
rclb
xchg
mov
out
pop
sahf
fidivs
lock
adc
cmpsl
add
pop
xchg
ret
jne
xchg
adc
outsb
stc
data16
mov
inc
sub
adc
je
inc
push
nop
jp
pusha
out
pop
xchg
sub
out
pushf
mov
lahf
call
imull
mov
cltd
in
pop
push
push
jp
or
sbb
sbb
lods
mov
loopne
cmp
add
jecxz
mov
xchg
jmp
push
xor
and
test
stc
insb
loopne
ficompl
cwtl
and
adc
mov
pop
lea
adc
inc
inc
stc
movsb
push
call
ret
cmp
cmpsb
pop
mov
inc
push
push
mov
push
mov
dec
and
xor
mov
cli
adc
xchg
lods
dec
testl
cmpsl
repz
ljmp
mov
cmpsb
or
or
jge
lea
mov
and
sbb
cmpsb
loop
xorb
cmpsw
stc
pop
bound
jge
xchg
or
xor
cmp
sub
or
pop
call
xor
jbe
jmp
ret
inc
ror
fldcw
inc
lahf
ja
out
push
adc
inc
cmpsb
cmp
cwtl
mov
or
cmpl
add
inc
scas
push
sbb
jg
shrb
mov
pop
ret
ja
sbb
aas
or
inc
outsl
push
test
push
addb
rcr
test
or
xchg
enter
clc
mov
pop
mov
shlb
cmpsl
addr16
push
push
xor
pop
sub
mov
imul
cmpsl
ret
or
dec
cmp
pop
or
mov
outsb
loopne
jmp
mov
xchg
push
es
xchg
sub
xor
dec
cmpsb
jne
sub
cmpsl
enter
push
adc
fs
aam
test
adc
aas
sbb
or
jg
dec
test
add
xlat
inc
xchg
mov
push
adc
mov
sbb
rorb
cmp
sbb
cwtl
insl
mov
sbb
mov
add
xor
vpsubusb
leave
cmp
ja
xchg
jo
fs
adc
imul
in
mov
cmp
bnd
sbb
xchg
xchg
lret
jecxz
js
popa
cmpsb
into
inc
adc
adc
cmpsl
jge
ja,pn
addb
ret
icebp
push
leave
push
and
xchg
divl
sub
xchg
out
sbb
je
jns
repz
push
jp
xchg
add
daa
fwait
ja
sbb
xchg
cmp
jb
dec
jmp
or
xorb
mov
shrl
xor
pop
pop
jo
mov
jge
movsb
xor
fcompl
int3
rolb
jno
lea
test
es
lahf
mov
sbb
add
es
add
cmpsb
sbb
adc
cmpsb
add
ja
out
push
push
outsb
test
push
bound
push
mov
pop
pop
jl
sub
pusha
scas
xchg
loop
mov
js
pop
es
and
sub
push
cmp
arpl
jp
cmp
adc
push
dec
mov
dec
sbb
pop
inc
faddl
daa
add
shlb
pusha
aad
test
insb
negb
repz
daa
pop
pop
and
into
cmpsb
mov
lret
mov
add
cmovs
lahf
and
mov
xor
jnp
data16
dec
add
xor
sbb
pop
inc
xchg
xchg
cmpsb
out
hlt
mov
lods
pop
and
dec
lock
push
or
fcoml
jb
mov
test
add
jecxz
fcoml
hlt
xor
fnstcw
push
popf
ljmp
pop
shrb
shll
jle
xchg
mov
mov
sub
mov
jo
jmp
xchg
fisttps
push
fs
in
push
jmp
sahf
jae
lret
jge
mov
test
es
push
jecxz
das
cmp
mov
js
les
adc
jae
data16
popf
or
aad
daa
aad
dec
inc
fisubl
mov
daa
xchg
les
and
jo
je
dec
push
pop
xor
inc
cmpsl
adc
dec
lods
es
xchg
dec
stc
leave
mov
push
sub
lret
cmpsb
data16
int
ljmp
mov
and
adc
lods
pop
scas
test
adc
insl
sbb
into
cmpsb
shrl
mov
out
into
dec
sub
stc
dec
sarl
repnz
sbb
mov
adc
sbbl
data16
adc
adc
add
and
addr16
stos
jno
dec
pop
repnz
lret
scas
sbb
cmpsl
jl
add
jbe
add
adc
xor
or
mov
inc
cmpsl
add
mov
jp
rol
inc
cmpsl
js
push
cli
xor
loopne
aad
lds
ret
bound
push
mov
ret
or
ljmp
shlb
inc
mov
jns
test
push
cmp
loope
sbb
or
loope
cmpsb
insb
xchg
dec
inc
pop
inc
movsb
rcl
pop
mov
test
cmp
adc
or
sbb
outsl
bound
cmp
cmpsb
dec
cmp
nop
jno
add
je
in
addb
pushf
xchg
popf
rcrl
or
popf
cmp
xchg
xchg
adc
sbb
mov
dec
nop
loopne
lock
dec
fcomip
pop
dec
dec
stos
jmp
in
adc
xchg
adc
sbb
insl
cmc
pop
push
and
mov
sahf
cmp
fists
mov
int3
or
and
push
es
jl
cmpsb
dec
xchg
push
cmp
push
xchg
shrl
cld
jne
adc
mov
lock
popa
les
jl
clc
dec
adc
jl
stos
fcmovne
xchg
sbb
mov
std
fs
aas
fisttpll
jne
sub
fdivr
sub
or
lock
mov
js
hlt
repnz
inc
in
scas
cmp
mov
in
inc
sbb
xor
adc
clc
mov
shrl
aad
pop
sbb
xchg
outsl
in
mov
push
or
std
or
outsb
rol
popf
or
es
stc
addr16
ret
add
pop
lea
ret
imul
outsl
inc
or
jecxz
adc
mov
test
sbb
lods
adc
or
dec
dec
adc
loop
mov
dec
mov
js
sub
leave
insl
cmpsb
je
xchg
arpl
imul
bound
addb
jns
jl
dec
dec
adc
aas
or
jns
or
push
sbb
ret
incl
ret
ds
aas
sbb
imul
popl
aam
mov
jl
test
incb
in
sub
imul
xor
jle
push
push
loopne
clc
jecxz
pusha
inc
es
nopl
movsl
push
jns
stos
outsb
cltd
ret
or
cmpsl
jecxz
rcrb
pop
sbb
testb
jae
in
outsb
jge
adc
dec
or
rolb
cmp
lock
xchg
inc
adc
inc
adc
xor
nop
shll
mov
leave
imulb
or
stos
dec
inc
push
icebp
mov
cmpsl
pop
pushf
and
aad
cld
out
inc
icebp
sbb
ficoms
push
pop
sbb
dec
stos
cmpsl
dec
loope
sbb
push
push
cmp
and
lods
and
push
or
push
addl
test
jbe
inc
mov
xor
add
xor
ss
xchg
mov
lahf
lock
push
popf
scas
mov
idivb
cmpsb
scas
or
leave
fisubs
lahf
ret
pop
leave
jbe
mov
xor
sbb
mov
xlat
pop
or
ss
mov
cmpsl
inc
test
adc
loope
orl
adc
sbb
cmpsb
cmp
dec
mov
inc
ficoml
fsubr
xchg
sar
adc
pop
lea
iret
inc
pop
in
add
jmp
mov
in
sub
aad
lods
repnz
inc
test
movsl
sub
call
int3
les
push
sub
sbb
mov
adc
mov
mov
adc
shll
loop
inc
out
push
ficoml
pop
xor
jnp
icebp
inc
fwait
dec
lret
cmpsb
pop
sbb
popa
xor
ja
xchg
ja
inc
adc
mov
push
cmpsb
sbb
movzbl
dec
arpl
andb
dec
adc
pop
scas
mov
adc
add
cmp
push
cmc
push
cmpsl
cltd
sbb
cmp
xchg
repz
or
add
data16
andl
cmc
and
movsl
lds
or
ret
mov
adc
adc
test
jne
or
mulb
in
mov
fcomps
leave
mov
mov
fld
inc
inc
sub
insb
movsb
add
inc
jno
xchg
pop
mov
out
loopne
sti
push
insb
mov
int
jle
clc
loope
adc
cmp
xchg
data16
subl
jmp
dec
test
int
or
or
dec
nop
mov
lods
dec
movsb
stos
and
sbb
cmpsl
int3
push
pusha
pop
leave
sbb
and
cld
ljmp
movsl
out
or
cmp
leave
shr
incb
mov
pusha
out
sti
negb
mov
in
mov
cld
fxch
test
add
insb
and
jecxz
sysexit
test
sbb
cmpsb
faddp
mov
add
mov
cltd
cmc
mov
mov
ret
inc
mov
or
mov
xchg
jecxz
cmp
push
in
cltd
adc
sub
sbbl
ds
mov
or
in
dec
xor
cmp
cwtl
nop
push
jge
pop
adc
adc
adc
lds
fsubr
xor
int3
push
test
cmpsl
lret
add
repnz
fwait
dec
popa
cmp
insl
cmp
cmp
pushw
adc
mov
pop
xchg
js
mov
jecxz
mov
rcrb
ss
mov
or
icebp
stos
or
adc
out
xor
dec
sub
bound
sarl
xchg
nop
out
xchg
adc
orl
inc
into
push
imul
adc
lahf
stc
data16
dec
cmpsb
lods
or
nop
dec
push
lock
pop
and
in
cmpsb
bound
bound
shll
xor
lods
rcll
jl
shll
adc
inc
jge
pop
and
je
out
xor
dec
dec
es
cltd
dec
pop
xchg
rolb
mov
decb
fiadds
test
rcrl
adc
dec
pop
mov
mov
shlb
mov
cmp
in
decb
jp
xchg
dec
jmp
pop
mov
push
xchg
sbb
cmpsl
push
adc
stos
mov
insb
push
mov
cltd
sbb
add
fucomi
sub
jp
mov
repnz
add
jge
aam
test
adc
jbe
test
sbb
in
es
mov
pusha
ljmp
popf
pusha
movsl
xchg
sbb
xchg
std
scas
sbb
or
test
cmp
xchg
js
scas
xchg
or
sbb
lcall
push
push
mov
xor
andb
add
jns
jbe
sbb
mov
jne
jp
jle
in
xchg
mov
mov
hlt
mov
pop
jecxz
cli
jle
mov
int3
cmp
inc
mov
sti
push
jl
out
pop
fisubs
adc
adc
cmpsl
dec
hlt
lock
test
test
mov
jge
ds
jbe
xchg
push
adc
cmpsb
scas
scas
stc
mov
out
dec
imul
pusha
jecxz
or
inc
adc
rclb
rcll
std
mov
fmulp
jl
es
pop
in
adc
inc
insb
addr16
xor
rcrl
add
xchg
das
iret
arpl
es
rclb
in
pusha
push
sub
je
cmp
push
imul
or
loopne
or
mov
cmpsb
cld
loopne,pt
in
inc
push
loope
adc
push
jmp
sub
pop
xor
sub
dec
jp
push
cltd
pop
mov
cmpsb
jg
and
loope
test
push
xchg
adc
cmpsb
cmp
insl
stc
mov
out
or
insl
jle
dec
pop
cmp
mov
cmpsl
xchg
inc
inc
xchg
cwtl
pop
mov
ss
js
imul
jl
dec
push
mov
jbe
es
inc
add
divb
lock
jg
mov
adc
or
jp
xchg
inc
adc
lock
adc
dec
add
xchg
loopne
mov
or
push
jle
dec
cli
xchg
mov
lahf
xchg
insb
inc
daa
cmp
push
movsb
pop
jecxz
lods
loopne
inc
repnz
mov
in
ret
push
push
adc
jno
xchg
xchg
sar
ds
dec
js
mov
or
insl
repnz
icebp
outsl
mov
mov
sti
push
xchg
adc
pop
and
lret
lcall
or
mov
adc
leave
cltd
pop
adc
mov
cltd
fsubs
incl
xlat
mov
aaa
mov
mov
or
fdivr
sbb
loopne
xchg
pop
hlt
jg
xchg
sbb
mov
jge
bound
ja,pt
outsl
pop
rclb
inc
mov
retw
cmpsb
cmpsl
daa
pop
fistps
push
mov
pusha
jp
mov
cmpsb
das
aaa
mov
fistps
add
test
mov
adc
sub
aam
addr16
sbbb
and
pop
cli
and
sbb
mov
stc
clc
stos
rclb
or
lods
ljmp
inc
stos
rcr
cmpsl
out
or
inc
add
push
jge
xchg
inc
pop
dec
cmp
jmp
jbe
out
push
push
out
jmp
arpl
lret
jecxz
pop
pop
fmul
dec
push
xchg
fimull
ja
arpl
ficomps
xchg
xchg
inc
adc
int3
cmc
gs
cmp
aam
pop
fbld
call
pop
mov
test
test
cmp
push
or
test
cwtl
lcall
scas
xchg
cmpsl
test
lock
lahf
jne
loopne
push
add
adc
jge
mov
rcl
es
andb
cmpsl
iret
xchg
or
es
xchg
mov
xchg
lds
adc
xchg
loopne
adc
mov
fimuls
xchg
xchg
pop
mull
pop
mov
loop
std
fs
add
xchg
push
inc
repnz
xchg
push
in
push
jl
fistpll
inc
xchg
bound
xchg
into
cmpsb
xchg
int
xorl
repnz
xchg
cmpsl
mov
sti
shlb
add
inc
mov
leave
outsb
adc
dec
test
or
shlb
cmpsb
test
xchg
aaa
aaa
arpl
xchg
cmc
push
mov
dec
mov
mul
loope
out
roll
shlb
pop
loop
sub
lret
in
ret
test
xchg
rclb
mov
fisubs
mov
mov
gs
sbb
cld
insl
xchg
test
mov
lcall
pop
outsb
adc
push
mov
stc
push
mov
enter
in
mov
mov
es
loop
ss
mov
cmpsl
lods
or
jbe
aam
inc
aaa
scas
add
and
ret
and
insl
push
lcall
loopne
es
pop
inc
iret
cmp
cmp
cmp
jnp
cld
add
xlat
push
aad
stc
mov
cmpsb
dec
ret
pop
cmp
pop
cmovne
shrl
cmp
xchg
cmp
shll
loope
cmp
mov
ret
jl
jns
lock
or
adc
jno
mov
mov
shlb
jl
cli
repnz
lea
mov
or
cli
andb
mov
outsl
sbb
ljmp
jne
inc
mov
sub
scas
xchg
sarl
lcall
jle
adc
stos
pop
test
push
arpl
stc
aas
roll
cli
or
sarl
push
push
imul
loop
ja
in
mov
adc
xor
dec
mov
scas
jae
xchg
or
in
lock
sbb
cltd
lcall
sub
jae
scas
mov
mov
xchg
cld
or
sbb
rol
mov
int
test
adc
cmpsl
out
dec
jmp
fiaddl
mov
push
mov
adc
orb
mov
lret
js
je
adc
xor
shlb
jmp
nop
dec
pop
adc
bound
sub
int
inc
icebp
imul
clc
aam
aam
add
mov
push
inc
and
outsl
push
push
mulb
sub
pusha
lret
add
idivb
dec
inc
jp
mov
mov
mov
dec
dec
jnp
pop
ror
cmpsb
inc
sub
push
sbb
xlat
push
test
in
imul
lods
out
out
sar
cmp
ja
xchg
sub
xor
adc
xchg
adc
mov
std
mov
push
pop
les
dec
jge
mov
shrb
cs
and
les
negl
cmp
or
cmp
mov
pop
daa
adc
cmpsl
sbb
stos
jmp
mov
pop
cmpsb
jnp
or
outsl
jmp
push
adc
jle
stos
dec
xchg
add
jge
movsl
out
pop
adc
cli
ret
cmpsb
call
cmp
push
sub
inc
jg
cmpsl
imul
inc
int3
mov
dec
jge
btr
xor
mov
hlt
jle
in
push
pop
into
call
clc
cmpsl
and
shlb
stos
gs
dec
fcompl
aas
std
movsl
call
cmpsb
cmc
fsubrl
jle
mov
cli
xor
in
adc
aam
sbb
adc
insb
dec
mov
xor
cmp
inc
pop
dec
jge
or
addb
and
jecxz
ja
and
pop
xor
inc
cmpsb
cwtl
data16
imul
clc
cmpsb
or
pusha
in
jnp
push
in
mov
jp
pusha
repz
in
xchg
mov
popf
aad
sub
lock
xchg
mov
pop
lret
jo
dec
and
cmpl
rcr
sub
xchg
imul
or
fbstp
ffreep
pop
push
in
dec
jo
xchg
in
xorl
in
in
insl
rclb
mov
xor
stc
pop
jg
fstl
xor
pop
inc
inc
bound
lahf
aad
out
out
popa
cmpsb
aam
add
subl
lret
and
cmpsb
outsb
xor
pop
or
outsb
pop
cmpsl
mov
mov
cmpsb
push
xchg
outsb
out
into
cmpsl
sbb
or
test
inc
in
xchg
push
and
pop
gs
push
insl
es
and
cmpsb
mov
adc
stos
adc
in
sub
mov
jns
cmc
cld
mov
ss
dec
adc
jl
gs
xlat
add
or
inc
sub
pop
lcall
mov
les
aas
mov
jno
xor
into
lock
cmp
inc
mov
push
adc
divl
les
test
dec
jge
orl
push
or
inc
inc
mov
lret
adc
ja
or
cld
xchg
clc
int3
or
jl
cmc
xchg
aaa
cmpsb
in
imul
dec
pop
push
pop
and
sub
in
sbb
push
in
outsl
xor
push
push
xchg
pushl
xor
sub
mov
adc
and
addr16
inc
popf
outsl
out
jmp
adc
dec
xchg
xchg
sub
cmp
dec
pop
ret
aad
dec
xchg
popf
test
cmpsb
or
dec
push
cmp
push
rcl
ss
inc
pop
cmpsb
ffree
es
jecxz
jae
enter
mov
cli
xor
addb
mov
inc
insl
scas
int
push
adc
sbb
fildl
into
aam
shlb
std
in
jl
cmpsb
jnp
pop
shl
movl
lret
push
mov
adc
mov
mov
ret
in
inc
inc
push
sbb
xor
cmp
or
cmpsl
pushf
cwtl
xor
push
nop
fwait
mov
jne
xchg
pop
addb
pusha
xor
jne
fdivl
xchg
sahf
mov
xchg
jne
lock
movq
dec
cmpsb
pop
cwtl
sub
xchg
cmp
cmpsl
loop
into
pop
pop
cwtl
jb
gs
aas
aad
stos
mov
inc
adc
daa
xor
mov
mov
xor
inc
push
xor
and
leave
leave
lret
insb
sbb
mov
dec
lea
filds
jo
shll
fwait
cmpsl
dec
in
scas
adc
es
movsl
fistps
test
pop
mov
xchg
adc
scas
leave
je
add
push
push
outsb
cli
mov
into
mov
pop
rclb
cltd
sbb
test
rclb
adc
xor
jg
mov
out
loopne
cmp
adcb
adc
cmpsl
lods
ss
es
popa
add
das
push
rclb
divb
enter
xchg
es
aam
into
push
imul
test
ret
jnp
push
mov
out
int3
mov
lods
adc
setno
jl
out
xchg
sbb
dec
ljmp
test
jnp
stos
daa
lret
aas
pop
insl
inc
mov
inc
ds
lods
add
rcll
mov
imul
cmpsb
or
mov
jmp
xor
and
push
ud0
cmpsl
sbb
jns
aam
out
and
inc
jnp
in
fimuls
xor
dec
repz
incl
adc
sub
cmp
and
cmpsb
mov
xlat
sub
cmpsl
cmpsb
adc
lds
dec
dec
cs
pop
cmpsl
or
rcrl
and
leave
inc
ss
fsubl
mov
fcmove
pusha
je
cmp
in
dec
xor
sahf
jnp
xchg
lahf
ljmp
lods
push
mov
rclb
mov
add
test
mov
jp
cmp
test
repnz
jb
imul
imul
aas
push
pop
pop
sbb
add
loope
and
mov
testl
push
lahf
jl
popf
push
int
fisubs
int3
jge
push
add
mov
call
push
enter
inc
enter
fldenv
add
jge
mov
push
into
mov
jg
adc
sti
cmp
jp
mov
mov
inc
fbstp
test
mov
jmp
sub
or
cmpsb
xor
stos
adc
loop
gs
aaa
inc
cld
ja
test
sbb
sub
cli
and
mov
adc
pusha
mov
add
test
cmp
cmpsl
in
jbe,pn
xchg
loopne
call
in
or
les
mov
test
cs
lds
imul
pop
fsubl
cmp
xchg
push
push
add
lret
pop
push
push
ret
test
test
es
push
clc
es
dec
inc
nop
push
jle
dec
jle
inc
mov
jbe
and
cltd
cmpsb
cwtl
jns
push
adcl
in
andl
lods
cmpsl
mov
pop
adc
pushf
aas
fisubl
inc
push
push
mov
sbb
orb
jns
popa
leave
jecxz,pt
out
mov
mov
mov
movsb
jmp
dec
test
sar
xor
sub
repnz
sarl
imul
int3
pop
fwait
mov
push
lret
fsubr
adc
lret
cmpsl
mov
fisttps
push
decl
loop
jne,pn
sub
adc
jne
mov
sbb
data16
frstor
push
ljmp
mov
mov
mov
addl
scas
mov
lods
and
js
mov
test
inc
in
clc
push
test
fcomip
add
out
push
mov
xchg
in
pop
ficoml
cmpsb
or
pop
iret
xchg
lea
push
dec
je
lds
mov
lcall
push
adcl
adc
popa
es
push
push
mov
in
pop
adc
dec
repnz
lret
test
adc
fs
repz
adc
int3
pop
fdivrl
adc
pop
shrb
seta
imul
ficoml
mov
jg
cmpsb
pop
jae
jbe
push
imul
xchg
xchg
sub
insb
repnz
andb
call
cld
es
cltd
hlt
aam
ljmp
or
loop
outsb
test
pushf
fidivs
push
adc
add
sarb
adc
sub
pop
cmpsb
sub
cmpsl
scas
enter
xchg
imul
xchg
xor
setne
leave
dec
cmpsb
outsb
pop
jmp
push
xchg
ret
test
shlb
sub
loopne
xchg
dec
loopne
inc
dec
adc
pop
inc
stc
das
std
or
subb
outsb
mov
push
cmp
addr16
cmpsl
adc
outsb
dec
cmpsb
push
lock
push
gs
xchg
imul
push
scas
imul
inc
adc
mov
cmp
push
ret
jl
cmpsl
mov
rorw
xor
cmp
andb
push
shlb
xor
mov
movsl
mov
cmp
jecxz
xchg
dec
daa
adc
cmpsl
cmp
jnp
xlat
dec
inc
mov
dec
les
jb
mov
test
stos
mov
push
arpl
inc
jle
xchg
mov
or
roll
jecxz
sbb
fimuls
xor
cwtl
adc
adc
fwait
dec
mov
mov
mov
pushf
into
out
sbb
mov
or
xchg
push
rcr
jp
leave
fstps
jo
fistl
pop
imul
push
js
xchg
push
fcom
leave
fldl
scas
pop
jecxz
push
test
jns
dec
dec
xor
aad
in
cmpsb
sub
mov
adc
jbe
lock
inc
mov
ret
adc
shr
mov
cmp
push
push
pop
xor
into
adc
es
outsl
and
jo
xchg
mov
or
adc
leave
mov
imul
cmpsl
or
fstps
hlt
nop
sub
test
xchg
xor
sbb
mov
or
mov
int
cmp
sub
out
sbb
inc
mov
addr16
cmpsb
xlat
xchg
insl
xchg
imul
gs
or
ljmp
cmpsb
mov
mov
mov
cmp
fdivrs
sbb
xor
dec
sub
push
fdivrl
mov
pusha
ficompl
sub
daa
movsb
adc
mov
inc
cmpsl
and
pop
ss
loopne
sub
xor
popa
loop
das
in
cmp
add
enter
imul
mov
hlt
rolb
imul
jge
je
mov
out
sub
ds
test
popf
xor
repnz
shrl
push
xchg
pusha
mov
les
jo
pop
insb
inc
xchg
mov
mov
cli
cmpsl
and
cmp
int
rcr
jle
dec
push
aam
adc
push
shld
push
xor
xor
in
inc
leave
loopne
xor
mov
mov
xchg
pop
inc
rcll
pop
xor
pop
arpl
into
mov
xor
std
pop
and
lock
leave
popa
mov
mov
xchg
ret
pop
mov
jbe
adc
and
sbb
jmp
imul
mov
push
ficompl
add
mov
mov
or
call
mov
pop
fistpll
in
call
stc
xor
mov
push
jge
loop
jl
ja
mov
xor
and
fs
inc
dec
icebp
or
addb
sbb
arpl
data16
or
int
inc
xchg
sahf
mov
cmpsl
ficompl
movl
rcrl
mov
xor
pop
pop
adc
mov
es
lds
pop
jge
popa
pusha
mov
pop
les
xchg
xor
sbb
dec
and
pushf
sbb
pop
pusha
jbe
jecxz
int
stos
mov
or
test
leave
mov
sbb
jnp
cmpsl
clc
mov
push
cmp
pop
cmpsb
and
in
negb
adc
test
add
lock
push
xchg
lds
push
dec
mov
out
loopne
xchg
aad
pusha
cmp
in
adc
push
jbe
adc
cld
cs
cmp
in
or
xor
arpl
xchg
mov
lret
mov
aad
popf
and
loopne
ret
shl
push
inc
jns
pop
sbb
xor
mov
je
sbb
or
cmpsb
stos
scas
out
mov
pop
xchg
dec
adc
sub
adc
inc
xchg
in
sti
imul
shl
cwtl
and
leave
scas
add
jne
cmp
sahf
sbb
into
sub
push
mov
sub
lret
cmpsb
bound
inc
cmpsl
mov
fisttps
jp
daa
xor
xlat
nop
cmp
es
or
mov
lods
push
jnp
sbb
xchg
jae
jp,pn
test
sbb
filds
xchg
cmpsb
fistl
jnp
push
xchg
sbb
cmpsb
test
addl
inc
stos
add
into
negl
mov
lds
mov
into
cmpsl
xchg
dec
fwait
rclb
push
add
sbb
aas
cmpsb
push
mov
sub
add
ret
cmp
mov
push
pop
in
and
ror
ja
mov
dec
outsl
ret
cmpsb
lcall
into
pop
or
sub
cmpb
js
push
mov
lds
popf
inc
decb
cltd
roll
and
ret
dec
adc
adcb
pop
sub
cmp
adc
ret
stos
lods
hlt
push
push
in
shlb
and
sbb
or
xchg
imul
cmc
add
cmp
jecxz
sarl
mov
lea
test
addr16
push
cmp
cmpsl
pop
sub
rcr
test
decl
inc
and
sub
in
push
in
xchg
sahf
and
and
dec
inc
test
daa
flds
mov
xchg
xor
push
pusha
cli
and
mov
in
jecxz
lods
pop
add
out
dec
mov
cmp
stc
and
cwtl
xchg
dec
sbb
std
dec
inc
dec
lds
xchg
cmpsb
in
push
inc
out
push
and
dec
dec
cmp
push
pop
sbb
jecxz
mov
inc
add
jle
push
cmpsb
rclb
mov
add
into
mov
inc
addr16
push
imul
xchg
push
es
sbb
push
test
pusha
dec
push
js
icebp
sti
and
pop
in
scas
xlat
mov
mov
out
push
jecxz
push
leave
mov
push
mov
test
xchg
pusha
mov
pop
cmpsl
pop
aaa
dec
cltd
jnp
jns
shrl
es
xchg
fdivr
adc
push
push
adc
push
rclb
fsubrs
jo
jge
inc
lcall
nop
or
xchg
adc
mov
out
addr16
std
outsb
icebp
ret
sub
xor
inc
stos
mov
adc
jecxz
fwait
pop
aas
cmpb
jge
inc
cmp
jp
fmuls
inc
lahf
repnz
cmpsb
mov
cmpsl
and
xor
or
insl
das
divb
in
mov
leave
push
xchg
push
inc
pop
pop
arpl
popl
ljmp
mov
or
xor
or
jno
js
jmp
dec
or
loop
insl
push
daa
sarb
cmp
mov
sbbb
arpl
in
cmpsl
inc
cmp
pop
outsl
jle
sbb
mov
inc
movsl
inc
mov
leave
xchg
sbb
inc
dec
ret
out
inc
loopne
int
jns
pop
xchg
sub
cmp
mov
je
sub
add
mov
repnz
push
movsb
mov
mov
leave
pop
sub
fwait
xor
xor
pop
pop
jg
mov
popa
jbe
push
cmp
mov
adc
sarb
mov
imul
cmpsl
push
mov
or
mov
mov
das
adc
push
inc
pop
insl
push
dec
jge
mov
test
xor
xlat
aaa
cmpsl
mov
add
inc
out
cmpsb
adc
mov
xor
lcall
mov
xchg
cmp
adc
add
cli
es
xchg
mov
adc
sbb
jmp
push
call
cmpsl
sbb
gs
ret
cmpsb
test
shlb
add
lods
jns
sahf
fwait
insl
rcll
lods
mov
or
nop
xchg
add
nop
fnsave
cmp
push
mov
jnp
and
dec
rolb
aam
xlat
sahf
lods
aas
pop
nop
pop
cmp
push
push
and
or
cmp
inc
imul
push
aaa
or
fcmovnb
dec
pop
scas
loop
or
inc
dec
mov
loopne
push
mov
sbb
cmpsb
cmp
adc
mov
mov
sahf
cmp
adc
movsl
pop
adc
lret
inc
es
xor
fisttpl
addr16
pop
pop
adc
ds
push
cmp
ljmp
cmp
mov
or
inc
js
shlb
divb
or
clc
push
xor
iret
xchg
aad
jns
or
push
int3
xor
cmpsl
mov
inc
int
inc
rolb
and
int3
or
aam
pop
aad
mov
adc
pushf
or
push
insl
adc
insl
dec
fsubs
xchg
and
xchg
insb
mov
xchg
fistl
popfw
mov
in
jp
mov
icebp
sub
xchg
stos
aas
lret
stc
in
sbbl
jl
and
jg
and
mov
sbb
lods
dec
mov
cmpsl
lret
xchg
cmp
sbb
or
sub
mov
in
pop
ret
shrb
mov
popa
cmpsb
pop
push
add
sbb
dec
movsb
dec
adc
cmpsb
mov
mov
sti
cmp
sbb
lahf
cs
into
mov
pusha
adc
aaa
sub
adc
out
bound
add
sub
aad
je
out
inc
lret
inc
push
sarl
mov
jne
adc
rclb
mov
movsb
je
inc
dec
and
into
fwait
push
cmpsb
sub
jl
pop
jl
loope
push
outsb
cld
xchg
call
inc
insb
sub
jne
dec
test
movl
jl
in
mov
insb
sbb
mov
pushf
dec
pop
leave
add
mov
loop
cwtl
mov
or
push
arpl
loopne
adc
push
stc
jg
xor
add
sbb
inc
and
push
add
jnp
maxps
sbb
jecxz
add
or
cmp
mov
flds
adc
dec
jmp
xchg
xchg
inc
push
repnz
ffreep
int
or
cmp
mov
fadds
daa
xor
les
jg
cpuid
movl
fimull
mov
mov
into
and
cmpsl
cwtl
mov
es
or
push
xor
lock
push
subl
mov
xchg
push
mov
rorb
lret
xor
es
call
sbbl
cli
ficoms
push
pmaxsw
fsubs
rcrl
dec
or
adc
mov
movb
jmp
xlat
pop
cmp
cmovp
fnstcw
popa
or
adc
ret
and
add
stos
cwtl
push
insl
mov
inc
jnp
mov
push
jo
jecxz
dec
syscall
int3
cmpsl
xchg
lahf
outsb
inc
rcll
mov
mov
jmp
sbb
and
xchg
psllq
addr16
xchg
sbb
mov
pop
lcall
leave
dec
xchg
fwait
ds
cmp
xorl
mov
fbld
cmpsl
mov
lret
imul
mov
mov
aad
cmp
cwtl
into
adc
mov
xchg
pop
and
push
and
test
addr16
push
cmp
in
cmpsl
rcrl
xchg
mov
sub
clc
xor
sbb
or
cld
in
lock
mov
mov
sub
jb
test
stos
in
jge
movsb
jg
in
leave
cwtl
push
cmpsb
imul
mov
cmp
xchg
mov
nop
pop
mov
loop
sub
dec
jbe
xchg
jp
sbb
or
ljmp
jne
and
sub
in
sbb
in
lcall
pop
jmp
add
xchg
out
pop
bnd
gs
aas
in
jl
or
scas
dec
sub
aaa
jmp
dec
sbb
adcl
mov
aad
adc
jns
sbb
bound
adc
btr
insb
int3
jae
mov
cltd
lcall
dec
popl
shll
or
fxam
jmp
and
push
into
lahf
out
repz
xchg
pop
adc
xchg
cli
mov
aas
push
push
xor
hlt
inc
xor
inc
mov
rolb
xchg
in
movsb
stos
push
inc
into
icebp
stos
mov
and
dec
insb
mov
sub
sub
idivb
cwtl
shlb
aaa
mov
mov
aas
push
hlt
pop
inc
cmpsb
rcrl
adc
pop
push
adc
ficomps
cmp
fmull
jae
push
adc
push
dec
ret
lea
pop
xorl
ljmp
fisttps
shll
in
inc
lods
pusha
inc
or
sbb
fldenv
pop
pop
cs
fsub
sbb
popa
rorb
cmp
adc
adc
adc
inc
enter
repnz
cmp
pushf
jno
ret
lods
cmpsb
mov
out
pushf
adcb
js
sbb
or
xor
mov
dec
pop
or
js
xchg
ret
into
sbb
or
sbb
jecxz
mov
inc
cmp
xor
push
add
jge
insl
push
mov
outsb
jecxz
lcall
je
pop
insb
inc
push
mov
fcompl
sub
or
mov
addr16
into
xchg
mov
push
or
in
jns
push
mov
or
adc
jmp
dec
cmp
push
or
jl
cmpl
dec
lahf
test
xchg
icebp
adc
cmpsl
ret
or
stc
mov
jb
mov
pop
push
js
int
adcl
xchg
inc
adc
sub
mov
xor
cmpsb
inc
sbb
inc
jbe
loop
not
inc
dec
xchg
mov
aad
shlb
xor
mov
or
sbb
lea
cmpsl
sbb
xor
mov
xchg
or
in
aad
xor
das
jo
addr16
out
imul
push
cmpsb
movsb
scas
pop
loopne
in
jb
imul
inc
rcrb
dec
inc
cmpl
jae
lock
xchg
cmp
dec
adc
inc
ss
pop
cmpsl
aas
xchg
cli
orl
pop
add
aad
add
aad
daa
lds
cmc
and
mov
xor
fstps
cmpsl
jge
out
sarl
out
adc
or
shlb
insb
or
pop
mov
faddl
mov
xor
jb
enter
push
cmc
mov
repnz
pushl
sub
pop
mov
fstpt
sbb
mov
mov
ret
adc
or
bound
inc
movsl
jecxz
fwait
lea
cmp
inc
jmp
mov
adc
pop
push
jmp
and
mov
or
es
dec
push
int
adc
cmpsb
xor
test
pop
mov
pushl
push
shrl
adc
movsb
push
or
lahf
push
mov
push
add
ds
mov
in
dec
jecxz
jno
fisttps
fistl
sub
xchg
mov
les
js
sbb
nop
sbb
out
insb
dec
sbb
mov
lock
pop
dec
scas
in
ret
sbb
sbb
or
adc
adc
mov
js
enter
mov
sub
movsb
push
xchg
fisubl
es
or
jo
pop
test
mov
les
pop
ret
shr
test
mov
loop
pop
xchg
mov
dec
xchg
dec
lret
sub
mov
pop
inc
jae
sbb
fisubrs
cwtl
rorb
jge
aaa
inc
nop
sahf
dec
je
out
in
fimuls
sbb
div
mov
inc
mov
adc
push
test
addl
cmp
rclb
je
scas
jl
sbb
jg
mov
lret
cmpsb
add
ss
jns
inc
inc
cli
outsb
or
pop
das
lcall
nop
sbb
push
aam
movb
xchg
cli
in
xchg
cmp
out
int
mov
scas
inc
ficompl
sub
dec
iret
or
enter
insb
inc
pop
in
adc
in
rorb
mov
push
cmpsb
mov
adc
loop
push
shl
xchg
dec
es
inc
cmp
data16
mov
push
jmp
dec
cmpsb
lock
sub
out
cmpsb
inc
push
pusha
daa
mov
leave
xor
fildl
jns
mul
xchg
int3
xchg
inc
xchg
mov
push
pop
icebp
push
cmpsb
cmp
sbb
out
push
aad
out
mov
inc
arpl
adc
js
jnp
cld
daa
loopne
popa
or
das
daa
ret
sarb
adc
jb
scas
sbb
fwait
test
aam
pop
mov
jno
or
mov
pop
mov
wbinvd
cmp
push
lods
jns
mov
and
leave
adc
sahf
jo
sbb
push
cmp
or
out
jcxz
mov
out
jbe
xchg
fs
lgs
dec
fistps
pop
sbb
dec
sbb
and
int3
in
add
jecxz
dec
sub
adc
push
add
je
in
xor
jne
pop
in
leave
add
ret
test
sbb
shll
stos
inc
sbb
repz
dec
inc
pop
adc
dec
data16
test
loope
leave
cmp
aam
fists
or
shrb
jae
out
mov
push
mov
lahf
or
mov
sbb
mov
faddp
push
cmpsb
pop
push
repz
cmp
int
mov
dec
loope
into
jecxz
mov
test
into
push
scas
out
popa
leave
and
push
mov
inc
push
imul
imul
pop
cmpsb
leave
and
or
lods
jo
or
lock
mulb
daa
mov
push
lcall
andb
aam
cmp
out
dec
mov
das
into
es
cld
mov
mov
xlat
cmpsb
js
testl
adc
pop
dec
mov
sti
in
push
xor
pop
jne
nop
adc
push
cltd
aam
imul
jne
pushf
nop
call
sub
inc
mov
mov
jge
movsl
jle
and
jo
ds
jnp
inc
shrb
sti
push
cmp
jnp
jb
cwtl
xchg
bound
fidivrl
jmp
mov
mov
jb
push
cld
lods
inc
ret
arpl
dec
pop
mov
jecxz
shlb
jge
imul
xor
ja
pop
gs
pop
dec
mov
inc
xchg
push
lods
pop
sbb
data16
and
call
incb
test
in
sbb
shrb
mov
push
shlb
in
pop
rclb
lret
cmpsl
pop
xchg
push
dec
add
adc
or
inc
cmpsl
js
movl
jb
mov
mov
adc
jecxz
outsb
repnz
outsl
jns
or
push
xchg
loope
add
and
push
push
cmp
fimuls
enter
cmpb
inc
xchg
andb
iret
je
out
inc
cmpsb
fwait
jecxz
std
dec
pop
clc
stos
pop
aam
mov
out
jmp
js
popf
scas
lcall
into
xor
jns
sub
lds
lret
cmpsb
xor
into
adc
fsts
cmpsb
push
pop
mov
cmpsb
pop
jbe
divb
push
sbb
inc
mov
and
mov
dec
jge
repnz
pop
inc
cmpsl
mov
out
sarb
dec
push
cmpsb
dec
pop
lret
adc
pop
add
mov
xor
inc
rcl
or
enter
out
insl
xor
rorb
xor
xchg
out
out
or
lea
ljmp
test
inc
into
int3
adc
cmpsb
inc
das
arpl
scas
inc
rorl
cmp
pop
ja
sbb
xor
cli
mov
push
dec
test
adc
mov
mov
ss
pop
dec
inc
mov
jg
pusha
cmp
pop
push
test
jns
rcrb
jae
loope
inc
adc
push
fistpll
int
dec
scas
xor
add
mov
mov
push
xor
cs
push
dec
in
lods
mov
dec
pop
mov
gs
out
ss
cmp
cmp
xor
sub
jp
inc
cmpsb
jo
rcr
xchg
out
dec
cltd
add
push
jecxz
out
jae
or
movlps
dec
or
cmova
ret
dec
fiadds
jo
push
jne
mov
leave
rcrl
mov
shll
aad
pop
mov
or
jge
sbb
sbb
lahf
outsl
sub
adc
dec
xchg
xchg
in
iret
xchg
rcll
aam
ja
xor
cwtl
mov
lret
and
andb
cld
pop
add
push
mov
push
aaa
outsb
sbb
clc
and
jo
es
loope
mov
and
mov
aaa
clc
into
add
push
sbb
test
pop
cmovg
xchg
mov
in
into
jb
jbe
sub
jbe
imul
sbb
aas
lea
mov
cmp
or
sub
dec
sub
sbb
add
daa
cwtl
adc
jae
xchg
dec
orb
xchg
cltd
ret
push
mov
loop
movsb
and
sbb
js
sbb
dec
dec
gs
stos
fwait
or
adc
leave
inc
jle
loop
pop
lds
ljmp
movsl
add
fwait
enter
shrb
popf
fsubr
mov
jp
jg
add
jno
jae
test
xchg
in
pop
inc
cmpsl
inc
cmp
mov
insb
mov
rorb
xchg
bound
in
cmpsl
clc
push
notb
fld
lahf
push
xor
xor
mov
repnz
mov
icebp
and
cmpsb
jecxz
xchg
mov
inc
lret
outsb
in
call
push
into
mov
xchg
mov
mov
lcall
push
pop
mov
sarb
dec
or
sahf
jne
cmp
dec
adc
daa
add
into
adc
lods
sub
adc
cmp
xchg
shll
int
cmpl
sahf
lret
cmc
loope
adc
int
movsb
bound
mov
sti
adc
test
mov
fwait
gs
or
and
jl
lcall
cmpsl
push
aas
xchg
stos
cmp
push
loopne
cmpsb
sub
inc
rclb
enter
daa
sbb
pop
or
add
mov
jg
insb
push
or
sahf
dec
stos
gs
inc
test
iret
lea
in
and
push
ret
and
scas
mov
jo
push
lcall
fstl
out
cli
jecxz
das
dec
push
out
jecxz
sub
adc
ret
mov
mov
xor
fbstp
das
fwait
mov
push
mov
lea
adc
out
push
push
pop
jp
xchg
rorb
jecxz
iret
jne
lock
rorb
mov
ds
push
dec
lds
jecxz
pop
xor
pusha
rorl
les
sub
cmpsb
add
mov
in
jo
push
mov
or
mov
push
xchg
mov
divb
data16
shlb
movsb
lds
xor
cmpsb
jecxz
cmp
adc
stc
jmp
notb
jecxz
or
lret
inc
jne
sbb
push
lods
lock
push
adc
jnp
jmp
pop
movl
and
lock
data16
dec
sub
push
mov
mov
sbb
movsb
ss
jl
in
mulb
cmpsl
sbbl
add
push
sub
enter
bound
das
inc
cli
pop
cld
lcall
dec
pop
mov
xlat
cmpsb
mov
mov
add
loope
rclb
shrl
mov
push
lcall
mov
pop
out
data16
sub
fxch
rorb
mov
repnz
les
outsl
jge
lea
out
mov
inc
pop
push
js
pop
or
into
xchg
pop
loope
pop
inc
inc
cmpsl
or
insb
out
pop
mov
pusha
frstor
js
sbb
adc
cmp
test
div
cmpsb
pusha
ljmp
push
stos
es
xchg
gs
cmpsb
adcl
pop
hlt
push
negl
clc
xchg
pop
push
push
sub
mov
dec
push
jecxz
shlb
mov
add
and
and
add
js
jmp
aam
jno
jb
sarl
imul
sbb
cmpsl
jge
dec
fbstp
jo
pop
loope
dec
aam
mov
inc
mov
dec
insl
fisttps
jbe
mov
aas
lcall
lret
or
cmp
sub
mov
js
mull
push
mov
das
mov
ret
int
cmpl
decb
subl
jl
mov
bound
adc
mov
dec
add
cli
mov
xor
cli
cli
adc
pop
sub
enter
pop
jne
jmp
xchg
add
int
jg
mov
mov
out
shlb
fistpll
data16
xchg
js
les
in
std
mov
cmpsb
mov
jecxz
and
mov
jle
push
pop
test
and
bound
ret
cmpsl
jno
inc
pop
stc
stos
xor
push
and
xorb
sub
leave
cmpsb
pop
push
aam
sbb
sbb
pop
inc
xor
mov
lods
fstl
pop
out
sbb
in
xchg
mov
sub
popf
fmull
push
mov
inc
or
outsb
bound
dec
dec
cli
mov
shll
push
jl
dec
lds
mov
mov
imul
lds
lahf
popa
cmpsl
aas
xchg
lahf
cmpsb
int3
fmull
inc
dec
and
out
cmp
xor
push
inc
fidivl
add
push
outsl
mov
cltd
and
fiaddl
fstpt
mov
sub
hlt
ds
dec
into
movsl
jecxz
sub
les
negl
inc
das
xchg
leave
movsl
es
js
jae
cmpsl
setg
jae
in
pop
in
jmp
mov
push
scas
ret
lock
push
push
push
movsb
push
lretw
cmpsl
mov
jmp
sbb
jne
mov
lea
shlb
out
lds
pop
jo
andnps
push
jo
loopne
push
movsb
fnstsw
out
sbb
fstpt
insb
mov
cmpsl
test
rcrb
push
inc
insb
xchg
repz
aaa
mov
jo
std
faddl
xchg
outsb
dec
push
call
mov
adc
or
dec
ja
fbstp
cmpsl
sahf
mov
das
fwait
push
pop
push
stos
aam
and
push
sub
filds
nop
lods
test
packsswb
push
inc
je
jne
dec
mov
xchg
add
movzwl
cmp
lods
nop
test
repnz
orb
cs
dec
movsb
cmp
cwtl
dec
xchg
and
inc
push
inc
jl
or
add
insb
fistpll
inc
mov
mov
and
dec
inc
or
cmpb
mov
push
int3
or
cmpsb
add
das
int
and
fcomps
movsb
mov
pop
out
pop
divl
sbb
add
cmc
inc
insb
rcrb
cltd
inc
cmc
inc
out
and
lods
pop
or
jg,pn
adc
push
mov
test
and
push
jae
in
into
jbe
vmovntps
jecxz
insb
jmp
call
stc
jns
sub
dec
xor
inc
push
lcall
call
inc
cmp
fstps
adc
out
repnz
shrl
cmpsl
in
int
loop
test
imul
mov
out
adc
js
in
test
sbb
push
test
in
fs
nop
or
mov
decl
daa
dec
cltd
adc
mov
pop
mov
ret
dec
push
jmp
ja
dec
cmpsl
arpl
push
cmpsb
insl
adc
test
pop
mov
sbb
in
xchg
std
xchg
inc
lcall
cs
in
mov
mov
fs
sbb
cli
cmp
aad
jb
and
ret
dec
inc
cmpsl
mov
or
cmpsl
or
adc
mov
dec
stc
fistps
je
jp
aas
pop
jg
cmpsb
push
addl
adc
and
or
pop
push
pop
std
pusha
pop
fsincos
dec
cmp
fcmovbe
mov
inc
push
cmpsb
es
ja
mov
and
imul
fwait
pop
add
mov
sub
pop
cltd
aaa
sbb
in
sbb
lcall
rcrb
mov
dec
incl
mov
imul
outsl
rcrb
fwait
xor
pop
sbb
mov
or
xchg
popa
pusha
fsubr
ljmp
and
inc
nop
cmpsl
jp
mov
cmpsb
lds
pop
sbbl
out
dec
xchg
icebp
ja
mov
call
or
jb
dec
mov
cmp
insl
sbb
pop
test
mov
outsb
lods
dec
push
fisubs
push
psadbw
jl
cs
sbb
dec
incb
test
or
sbb
push
sbb
add
fimull
ds
es
fs
fistpll
pop
scas
xor
xchg
nop
sbb
insl
repz
dec
lea
xorl
adc
rclb
fwait
push
dec
jl
cmpsl
mov
xor
or
test
mov
pop
add
pop
cmp
in
and
push
in
ret
xchg
xchg
add
sarl
in
into
push
dec
or
sbb
cmpsb
or
adc
lock
cmp
repz
mov
insl
dec
lahf
dec
cmpsb
push
jg
inc
in
and
loope
sub
nop
push
out
pop
lea
fidivrl
lcall
lret
leave
test
dec
sar
dec
adc
test
int3
cmpsb
adc
jno
cmp
push
mov
push
or
mov
lods
jo
and
mov
dec
repnz
cmpsl
jle
add
into
add
mov
dec
or
into
movsl
shll
dec
rclb
repnz
fbld
jl
jnp
cmp
pop
push
xchg
imul
sbb
lods
pusha
sub
mov
cmpsb
loopne
push
mov
cmpsl
push
jnp
lds
in
cmp
cmp
fmulp
pop
jle
idiv
mov
mov
inc
mov
xor
xor
inc
inc
std
mov
shlb
pop
mov
mov
mov
mov
dec
fldt
ds
pop
xchg
loop
adc
pusha
cwtl
fs
sbb
push
popf
inc
sahf
xchg
paddsw
add
testb
mov
in
ret
mov
jno
lret
ret
jbe
mov
cwtl
mov
push
in
xor
shl
dec
or
ret
cmp
sbb
loope
ret
cmpsl
xor
adc
repnz
out
mov
push
arpl
push
aas
ret
and
xchg
push
cmpsl
jecxz
test
aas
lret
and
mov
pcmpgtd
cmpsb
sub
cmc
into
es
inc
jle
call
inc
leave
cmpsl
insl
xchg
insl
xor
cmpsl
mov
push
pop
in
cmp
dec
jnp
inc
or
sbb
cmpb
adc
xor
lds
inc
lret
mov
in
push
pusha
adc
lret
cwtl
divl
iret
push
into
in
cmpsb
popf
shll
add
inc
or
ja
push
push
aam
lods
jecxz
orl
insl
shrb
sub
movsb
push
leave
pop
sub
insb
mov
push
and
cmp
mulb
push
dec
adc
xchg
ror
popf
and
jecxz
xor
mov
add
stc
mov
adc
sbb
in
dec
lods
xor
sti
lret
mov
cmp
hlt
scas
and
inc
sahf
clc
mov
aaa
sbb
lret
rorl
fnstsw
dec
xchg
xlat
add
push
jno
movsb
cmp
add
sarb
mov
push
add
ret
jae
mov
fs
repnz
int3
or
xor
into
xchg
push
and
or
jno
pop
dec
fidivrs
inc
mov
sbbl
mov
pandn
pushf
push
inc
pop
or
xor
inc
shlb
adc
xor
push
inc
dec
ds
pop
leave
dec
xchg
imull
and
mov
xor
fstp
roll
cmpsl
sbb
shr
xor
ret
mov
ja
insb
and
push
mov
cmp
cmpsb
xor
clc
cmp
jecxz
test
mov
lcall
rol
mov
mov
or
repnz
mov
aas
test
ret
pop
out
cmp
push
inc
inc
jmp
aas
jp
pop
jbe
shrl
in
and
cmpsb
inc
pop
dec
in
stos
stc
xchg
push
ret
outsb
cmp
push
xchg
mov
jbe
or
inc
lret
push
push
jle
imul
out
rep
ret
lods
adc
dec
pop
xchg
mov
jae
int
cli
cmpsl
in
fnstenv
js
call
dec
cmp
jb
sarl
cmp
cld
sub
or
leave
cmpsb
and
test
push
xor
adc
inc
jg
decb
sahf
dec
aam
xchg
ret
subl
cmp
cmc
adc
decb
mov
and
icebp
mov
adc
es
adc
pop
clc
mov
dec
popa
into
sbb
es
je
push
pop
adc
cmpsl
ljmp
fsubp
add
mov
mov
imul
mov
cmp
mov
clc
mov
aad
or
mov
inc
add
cmpsl
sbb
and
inc
lahf
add
pop
jge
jbe
mov
cmpsb
repnz
rcrb
inc
filds
mov
ja
aad
cmp
cmp
mov
jge
addr16
daa
inc
and
ret
pop
or
mov
adc
es
sbb
shll
dec
pushf
inc
cmp
xchg
test
adc
rcr
cmc
xchg
int3
rep
outsb
or
rcr
xchg
test
push
mov
dec
es
das
dec
jge
ret
sbb
sub
pop
jle
jne
call
cmpsb
dec
push
push
dec
cmp
lcall
jp
out
mov
sub
in
push
fisttpll
inc
iret
mov
xchg
sbbb
ds
cmp
dec
aas
shll
roll
decb
les
cltd
dec
cli
fisubrl
jmp
test
jmp
xchg
out
mov
xchg
stc
xor
outsl
lock
xchg
out
mov
lods
lock
dec
inc
fsubrp
push
repz
data16
jl
test
mov
popf
push
pusha
rcrl
mov
cmp
out
jl
jmp
xchg
push
pop
pop
inc
pop
push
pop
sub
lods
sahf
and
addr16
fwait
imul
das
push
into
lock
push
mov
lea
shrb
loope
fdivrp
inc
scas
les
add
pop
pop
xchg
inc
adc
idivb
xchg
mov
cltd
fidivs
or
out
inc
ficoms
dec
adc
into
inc
fcomip
test
adc
mov
out
int3
rorb
or
loope
add
and
ds
cmp
sbb
mov
and
sbb
out
loopne
rorb
das
dec
fimuls
aad
mov
out
xchg
add
rcrb
push
lods
decl
cwtl
int3
mov
adc
loope
inc
cltd
add
popl
add
lea
in
lods
into
cli
xchg
dec
rolb
fisubs
ds
push
mov
or
xchg
popf
out
arpl
mov
mov
inc
xor
fucom
pop
lds
std
mov
push
mov
mov
jp
add
inc
ds
push
lods
decl
lds
or
push
sub
mov
pop
stos
xor
inc
shr
mov
fdivrs
into
lea
movsl
or
dec
ds
push
cs
xchg
into
mov
into
inc
sub
mov
aam
lcall
data16
sbb
push
int3
and
mov
xchg
pop
stos
pop
sarb
push
cmpsb
test
sbb
add
mov
loope
fmul
xchg
loopne
stos
hlt
xor
in
pop
das
icebp
jp
loope
sarb
movb
loope
mov
dec
out
pop
les
out
push
fisttpl
add
or
loop
push
adc
scas
out
inc
out
ds
fcom
shrl
and
add
out
pushf
in
push
inc
sub
scas
cmp
sahf
xlat
mov
inc
out
into
jle
push
ss
loopne
mov
jle
loope
jg
adc
mov
or
or
dec
push
and
xchg
sbb
aas
mov
outsb
adc
dec
ss
shll
incl
pop
xchg
notb
pop
cli
movl
xchg
lods
inc
scas
into
sti
enter
fucomip
into
sub
push
enter
add
add
rcrb
add
push
fimuls
jl
jno
sahf
mov
xchg
ds
cmc
dec
idivb
mov
push
add
mov
mov
push
shlb
ljmp
cli
mov
mov
loopne
xchg
add
adc
iret
mov
inc
inc
in
data16
lcall
fadd
dec
mov
jo
mov
lcall
jo
add
orb
inc
out
sub
enter
vcvtsd2ss
mov
mov
bound
push
rolb
mov
jg
in
xchg
loopne
jbe
jecxz
sub
aad
loopne
and
mov
test
pop
stos
mov
push
pop
nop
dec
jle
sub
sarb
mov
add
fiaddl
iret
insb
out
add
imulb
and
enter
mov
iret
incb
scas
inc
fstpt
mov
sbb
or
cwtl
pop
cmc
pushf
out
imul
dec
rcl
ret
inc
add
sarb
js
mov
dec
jbe
and
aaa
inc
sti
push
aam
pushf
inc
aad
fistps
movsl
and
out
mov
js
and
stos
fldcw
leave
jle
mov
adc
shlb
or
int3
ds
push
adc
sub
cmovle
inc
push
fwait
pusha
mov
std
int3
lcall
xchg
jmp
lock
lock
push
in
fidivrs
xchg
repnz
roll
out
sub
cmpsb
mov
vmovups
and
bound
leave
inc
xchg
imul
clc
add
xchg
loopne
sbb
sbb
jno
test
jecxz
mov
xor
test
loopne
std
arpl
sti
fcmovb
ficompl
bnd
daa
mov
dec
out
sub
xchg
mov
push
pop
fwait
sbbb
mov
cmp
subl
mov
adc
popf
adc
ds
xchg
push
fisubrs
idiv
ja
inc
mov
fwait
stc
sbb
iret
xor
adc
scas
jne
rorb
lret
outsl
daa
aas
fstpt
xlat
cmpsl
or
aas
push
rclb
rorb
and
adc
jb
popa
push
mov
jnp
shlb
ds
inc
pop
pushf
loopne
pop
and
jg
imull
push
add
fidivrs
fimuls
out
pop
push
mov
in
sbb
sarl
mov
jmp
fistl
add
decl
in
sti
mov
push
pop
stos
iret
mov
pop
mov
dec
ss
mov
fsubl
push
insb
mov
dec
gs
dec
shlb
or
xchg
add
cmc
int3
movsl
cmpsl
out
push
add
pop
sti
into
mov
stos
push
pop
inc
xchg
lret
push
mov
adc
shrb
lea
lock
addr16
out
cmpsl
or
into
lret
paddq
cmp
ja
cli
cmpsb
test
sub
int
ret
mov
jmp
data16
imul
xor
jecxz
into
push
popf
movb
mov
dec
outsb
shlb
cwtl
and
out
testl
data16
ret
or
test
mov
aas
aas
into
clc
fadd
xlat
test
in
pop
into
aaa
jo
jecxz
mov
enter
arpl
les
pop
fimuls
les
clc
aad
push
inc
sub
jle
gs
pop
push
rolb
add
outsl
adc
rol
leave
cs
mov
cmp
jmp
mov
pushf
xchg
dec
ds
mov
sub
push
loop
or
ret
cmp
mov
bound
xlat
sti
in
lods
dec
out
and
lock
mov
bound
stos
push
push
jbe
mov
es
lret
cwtl
test
sti
inc
fmul
mov
jno
sti
ljmp
bound
sbbb
loopne
dec
pop
mov
lock
xor
cs
ds
arpl
adc
movb
sub
ret
mov
std
inc
repnz
fucomp
add
scas
adc
stos
lahf
mov
mov
sub
mov
dec
ror
icebp
insb
arpl
push
mov
mov
mov
add
cmpxchg
and
shll
jle
sub
jge
jns
dec
xchg
dec
ds
mov
jle
cmp
pop
pop
mov
ret
into
or
jle
sbb
xchg
push
jecxz
movsl
repnz
cmp
cmp
sarb
cmp
into
xchg
sbb
int3
pop
pop
mov
add
mov
push
imulb
cmp
lock
adc
inc
jle
push
dec
jno
inc
pop
cmp
nop
imul
push
or
loopne
rolb
mov
les
gs
add
xchg
orl
shll
std
lret
cli
aas
sub
jle
aas
dec
ljmp
xchg
out
fdivrp
add
int
and
in
fiaddl
pop
aas
xchg
adc
fst
rorb
dec
daa
into
test
dec
popf
or
out
stos
xor
rorl
sub
aam
mov
jbe
push
lret
xlat
dec
std
mov
scas
popa
jno
ret
stos
mov
push
mov
sahf
es
inc
or
push
mov
xlat
mov
scas
add
sub
lock
mov
push
bound
push
jecxz
or
rolb
xchg
lds
dec
push
ljmp
cmc
aad
nop
out
mov
rorb
xchg
ds
mov
mov
ja
mov
jle
imul
mov
xorl
mov
push
xchg
mov
les
xchg
fiadds
add
int
stos
sbbl
and
jle
lcall
in
inc
stos
leave
sarb
in
cwtl
shlb
push
lret
inc
push
out
adc
dec
sub
mov
pop
into
push
hlt
pop
sbb
dec
rclb
cmpsl
pop
repnz
divps
cld
xor
xchg
ret
mov
jb
mov
and
js,pt
popa
fnsave
cli
sub
ror
out
mov
cmp
ret
and
dec
shl
out
inc
addr16
xchg
idiv
lret
and
out
jnp
cmp
jae
pmulhuw
mov
ficomps
dec
fisubs
mov
mov
lret
outsb
xlat
inc
pusha
in
jo
and
ret
or
test
std
loopne
sbb
gs
rclb
orb
mov
cmp
jb
push
lret
or
pop
sbb
push
rol
adc
add
popa
cwtl
ret
jne
jb
fdivl
push
scas
nop
ret
xchg
and
pusha
out
std
bound
test
dec
and
out
movq
pop
inc
cli
sahf
in
lds
scas
and
das
out
lock
test
jmp
stos
push
movswl
cmp
ljmp
mov
dec
mov
jmp
out
fcompl
icebp
out
daa
pop
push
outsl
mov
dec
fidivl
clc
mov
test
sbb
out
add
inc
pop
dec
cmp
push
lds
jo
jo
pusha
int
mov
int3
push
rcrb
outsb
gs
scas
fdivl
mov
idivb
popf
push
rcll
push
insb
mov
lahf
repnz
lds
jle
addb
mov
add
popf
mov
into
fiaddl
loop
sbb
xchg
push
add
push
arpl
push
lods
les
mov
push
cmc
xlat
int3
jno
push
aam
jnp
xchg
mov
ss
jg
mov
shrb
lret
out
add
mov
and
adc
mov
loop
ljmp
outsb
xchg
push
push
std
in
pop
push
ss
fistps
iret
xchg
jmp
inc
mov
jle
or
cmc
bnd
iret
pop
mov
mov
outsb
ffree
adc
lcall
push
jbe
stos
scas
movsb
out
mov
sub
out
scas
jg
add
loopne
shl
lea
mov
out
inc
sub
data16
pop
rcrb
push
inc
push
repnz
xor
xchg
sti
loop
out
mov
mov
cli
push
hlt
mov
inc
xchg
mov
gs
inc
mov
inc
adc
push
pop
jae
not
call
push
xchg
ds
lods
mov
add
shrb
jns
adc
cs
scas
sbb
jle
test
adc
cs
or
push
pop
mov
loop
mov
xor
mov
pop
mov
dec
xor
push
stos
add
push
sub
mov
xor
push
push
mov
mov
dec
lea
lret
sub
jns
mov
or
outsl
dec
cmpb
jle
fcomps
push
out
push
xlat
nop
jecxz
mov
mov
aas
test
aas
in
dec
cs
mov
ds
add
push
rcrb
movsb
mov
xchg
pop
jle
out
and
movsb
dec
insb
daa
mov
stos
xchg
outsl
push
lahf
push
push
jno
int3
repz
lret
adc
xchg
mov
xor
and
mov
adc
pop
outsl
inc
out
inc
and
dec
push
stos
insl
lods
sbb
and
ret
and
lret
in
in
loop
xchg
xchg
mov
xchg
ret
cmp
push
jbe
xor
mov
hlt
inc
jg
es
arpl
cld
jmp
rcl
in
out
push
or
sub
pop
or
shlb
das
push
fidivrl
push
dec
cmp
jle
add
mov
adc
mov
mov
in
out
pop
sahf
mov
push
out
lcall
dec
addl
sarb
aam
add
int3
outsl
mov
mov
idivb
cmp
fisubs
rol
sbb
mov
ret
aam
add
sahf
inc
test
dec
mov
aad
xchg
repnz
push
push
rclb
nop
push
mov
lret
clc
mov
mov
fildl
cld
adc
outsl
addr16
xchg
or
push
test
cmpsb
ret
outsb
mov
mov
inc
insl
mov
mov
lds
push
push
es
subb
sbb
pop
shr
inc
stos
imul
xor
push
mov
xor
data16
mov
pop
addr16
adc
pop
lds
inc
ret
cld
out
cmp
fists
xchg
dec
aas
pop
int3
dec
jo
jg
icebp
and
jmp
lea
push
add
jge
and
in
mov
repz
lcall
xchg
sub
push
dec
dec
sbb
pop
testb
cmp
stos
mov
leave
push
fucom
imul
mov
mov
and
in
fstpl
scas
testb
ljmp
daa
cmp
and
aad
nop
js
inc
sbb
jecxz
xchg
mov
lods
lock
sub
into
out
jg
mov
jmp
testb
dec
lods
rorb
jecxz
inc
push
loope
fstps
mov
xlat
inc
es
adc
xor
mov
aas
sbb
mov
mov
in
cmpsb
pop
or
dec
mov
stos
jle
sub
mov
inc
hlt
daa
aad
pop
or
mov
clc
ret
arpl
outsb
jnp
push
jb
fidivl
inc
hlt
cmp
out
mov
out
and
sub
outsb
lret
test
leave
or
push
stc
outsb
ljmp
add
adc
dec
lods
xchg
ss
inc
cmpsb
pop
addr16
or
jge
lret
ret
mov
cmp
xor
or
out
jbe
push
pusha
rol
push
stc
dec
out
stc
insb
leave
inc
out
inc
popl
jbe
sub
mov
cmp
addr16
pop
jg
sbb
leave
pusha
mov
inc
into
in
xchg
stos
rolb
add
inc
inc
mov
add
pop
pop
pop
aaa
scas
ficomps
mov
dec
sub
aam
into
imul
dec
pop
jns
xchg
jp
or
fmull
aad
lods
ds
cmpsb
ret
adcb
js
sub
sahf
mov
mov
or
push
xor
ret
loop
mov
dec
ret
int3
push
jne
into
mov
cld
push
and
test
fwait
out
lock
or
inc
dec
or
pop
rcll
sahf
into
or
loopne
fisubrl
jae
mov
and
dec
iret
sub
jle
cmc
cmp
lahf
loop
into
add
rclb
inc
jo
out
movsl
rcll
iret
push
movsl
xor
test
xchg
adc
push
sbb
dec
mov
clc
sbb
stos
scas
int
sub
lock
leave
rolb
out
aad
fiadds
mov
cmpsb
cs
stos
hlt
jp
iret
push
mov
mov
cld
out
push
xlat
movaps
repnz
jb
jo
push
or
je
push
pop
push
cmc
jecxz
adcl
loop
bound
lcall
xor
fcmovb
inc
lods
push
lock
push
insb
test
push
adc
imul
push
mov
scas
push
push
jo
enter
push
ds
push
ljmp
add
rcrb
mov
adc
cs
scas
pop
sub
into
cmpb
xor
jp
in
ffreep
arpl
pop
ret
dec
hlt
push
pusha
outsb
or
ret
mov
insl
jbe
pop
lods
scas
pop
xchg
scas
shrl
pop
push
push
ljmp
mov
adcb
faddl
sub
adc
out
push
and
test
pop
xchg
dec
push
mov
mov
add
aam
hlt
inc
xchg
mov
dec
push
push
push
jmp
out
jecxz
lods
push
xchg
mov
testl
sub
in
pop
cwtl
ret
ret
fucomi
inc
push
movsb
data16
mov
in
add
sbb
xor
cmp
pop
dec
loop
fwait
sti
lds
jmp
mov
out
inc
jbe
dec
rcrb
push
sbb
test
sbb
xor
ficomps
pop
dec
loopne
rolb
ret
sub
ljmp
mov
out
inc
sti
in
add
or
inc
cmp
nop
adc
dec
ficoms
dec
add
mov
popf
mov
mov
iret
mov
and
ficomps
scas
push
sbb
mov
sti
outsb
sub
mov
pop
ss
in
pop
push
mov
jno
out
imul
mov
ss
jle
jno
fisubrs
add
in
adc
add
jg
sarb
pop
lret
fimuls
jae
sahf
push
pop
pusha
clc
xlat
shl
or
and
popf
push
cli
jle,pn
je
imul
imul
cmp
push
scas
aad
push
push
mov
sar
jle
mov
push
inc
rorl
xor
aas
std
xlat
sub
mov
popf
push
push
andb
shll
aad
sahf
push
jo
leave
inc
rolb
sahf
cli
sbb
jl
cs
inc
sbb
fists
scas
fs
ror
jmp
pop
sub
ret
add
pmaxub
jae
add
aaa
and
pop
aas
push
jno,pt
in
in
or
lock
mov
or
loop
nop
cmpsl
add
into
or
jecxz
mov
xchg
mov
push
mov
jo
cmp
mov
ror
push
adc
jle
ficoms
sbb
mov
ret
jns
xchg
data16
mov
sub
add
mov
push
ret
test
xchg
mov
inc
xchg
aad
xor
movsb
cmc
in
cwtl
sbb
lret
mov
lret
lods
dec
lods
jmp
pop
push
push
in
sub
push
push
cli
fmul
push
lea
xchg
cmp
ja
cmp
sub
ret
ja
jg
or
inc
pop
repnz
sarl
push
test
test
and
in
mov
jnp
dec
enter
scas
fcomip
pop
xchg
sahf
cmp
jge
es
int
add
pop
out
mov
cmp
out
lcall
mov
inc
cmp
fs
notl
dec
pop
clc
add
mov
jg
sbb
daa
aas
mov
idivb
fwait
idivb
xor
sbb
adc
push
lret
ret
xor
mov
ss
int
dec
in
pop
pop
rcrb
lcall
outsb
jne
inc
sub
sti
test
mov
mov
lea
outsb
dec
mov
sbb
push
fwait
ds
inc
fisubrl
in
into
stos
push
leave
xor
inc
rolb
pop
std
mov
ret
xchg
dec
cmc
scas
ds
mov
stos
inc
jne
scas
scas
aad
sub
jb
jb
xchg
push
jb
inc
lods
testl
shrb
out
mov
out
pop
add
outsl
into
fidivl
addb
or
and
jecxz
push
movsb
aam
jmp
mov
lret
bound
xchg
pop
test
repnz
pop
and
popf
int3
in
stos
and
mov
loop
jl
push
sbb
dec
out
jecxz
ret
xchg
mov
mov
ss
andl
in
or
loopne
stos
rcl
insl
imul
outsl
add
ret
shll
jle
xor
ret
mov
fmulp
ljmp
out
rolb
pusha
scas
xor
lcall
stc
dec
fnstsw
push
jle
jp
cmp
jp
push
bound
mov
push
test
fwait
pushf
out
pop
push
rorl
scas
mov
aam
or
lds
push
fisubrs
scas
jnp
mov
addr16
fisttpl
push
adc
mov
loopne
rorb
inc
fsubp
ret
les
sbb
or
dec
into
xchg
jb
aam
mov
dec
inc
dec
ret
sarl
xchg
in
mov
dec
inc
sbb
mov
out
out
flds
hlt
fidivrs
in
rcll
fmul
or
inc
adcb
ss
dec
mov
adc
push
jne
repnz
in
jno
jle
lods
fcmovnu
cld
leave
cmp
faddp
mov
dec
cs
add
mov
xchg
or
or
fiadds
adc
push
mov
scas
adc
jp
or
push
test
out
pop
inc
mov
mov
lods
sahf
adc
cmp
mov
in
scas
bound
int3
mov
lahf
popa
add
rorl
mov
cmp
sbb
dec
in
sahf
add
xchg
test
inc
ffree
stos
inc
outsl
mov
sub
jbe
push
jg
dec
into
jmp
push
jmp
and
out
push
fiadds
fucomi
jne
ljmp
leave
pop
ret
movsb
xor
xor
into
pop
adc
out
adc
jmp
mov
mov
or
lahf
clc
arpl
ror
xchg
fnsave
loope
into
repnz
shll
push
dec
jp
es
dec
inc
loop
shr
dec
pop
pop
out
or
aas
dec
andl
sahf
inc
mov
dec
dec
jmp
inc
push
test
in
push
pop
mov
jp
test
jb
and
ds
dec
push
ja
movl
aaa
movntps
jle
xor
mov
push
cmp
lods
das
xchg
sahf
push
push
out
dec
pop
jbe
lea
cs
push
sub
cmp
cld
push
sbb
fisubrs
mov
sbb
cli
in
pop
std
pop
mov
dec
inc
pop
jecxz
loope
adc
dec
loop
and
inc
mov
data16
jge
add
push
xchg
fdivrp
das
push
stos
ficomps
add
ljmp
bnd
into
add
retw
rclb
jle
roll
into
rcrb
xor
aam
in
cltd
mov
fdivrs
add
in
fiadds
les
das
add
xor
mov
adc
das
mov
lods
ds
push
ret
adcl
ds
and
divl
leave
sti
imul
outsl
cmpsl
xchg
xchg
cmp
aam
les
push
scas
mov
sbb
loopne
or
into
nop
jb
xor
adc
xor
aam
shlb
mov
ds
js
mov
push
mov
mov
push
jl
push
repnz
ret
push
xchg
xchg
les
or
pop
stc
out
push
xchg
addr16
jb
in
sub
into
sbb
dec
push
cmp
mov
lock
push
outsb
push
loop
xchg
ljmp
add
andb
xchg
rcrb
adc
mov
cld
mov
outsb
movsb
push
rcrl
mov
adcb
pop
in
inc
jo
sar
and
cmpb
and
add
mov
test
mov
sar
test
xor
scas
mov
and
xchg
lcall
lret
test
pop
jp
stc
andl
dec
xchg
imul
repnz
xlat
dec
dec
push
push
addr16
jo
popa
popl
movsl
mov
fwait
test
mov
pop
and
jnp
ds
or
mov
sahf
shlb
bnd
aas
and
aas
pop
xor
out
add
repnz
int
pop
sti
aas
lret
adc
mov
fs
inc
dec
ds
or
and
xchg
test
push
sbb
aas
xlat
in
mov
xchg
add
andl
jno
mov
sahf
out
icebp
mov
mov
inc
dec
and
movl
cmp
xchg
rorb
addl
aas
stc
jo
push
fsubrp
push
mov
mov
pushf
mov
insb
cltd
jbe
pop
xchg
mov
shr
inc
push
mov
add
xchg
mov
aaa
jecxz
ret
xorl
les
js
mov
mov
or
xchg
loop
ret
pop
mov
xor
sub
push
push
cs
testb
fimuls
and
ret
sbb
mov
mov
cli
or
inc
js
loopne
sahf
in
adc
in
lock
lahf
gs
add
pop
ds
xor
sub
push
je
subl
xor
ja
mov
push
clc
nop
push
out
hlt
or
sbb
pop
mov
or
ret
adc
inc
push
sbb
push
sub
jb
pop
and
dec
cli
fdivrl
in
arpl
iret
popf
lds
maskmovq
negl
stos
sti
decb
in
bound
jbe
daa
movl
sar
mov
ret
lods
lahf
fs
out
fisubs
push
incb
ret
mov
mov
jns
mov
dec
push
adc
cmpb
fmulp
xlat
repnz
sbb
dec
inc
setp
bound
and
loopne
rol
jb
das
adc
ds
mov
jbe
je
imul
hlt
cmp
addb
sarl
clc
bound
loop
sbb
outsb
jne
push
jae
jle
or
shr
idivb
mov
cs
int
les
mov
inc
mov
bound
adc
push
je
iret
xchg
stc
fnsave
aad
fcoms
push
mov
xor
mov
mov
repz
jg
jae
cltd
dec
loope
movsl
sbb
xor
push
mov
iret
ds
fwait
lds
cli
std
enter
add
in
mov
lcall
mov
sbb
mov
mov
ficomps
or
sbb
leave
js
in
xor
inc
lret
jg
mov
rorl
push
cmpsl
sbb
mov
push
cmp
adc
inc
mov
add
xor
fildll
xchg
jg
or
pop
and
iret
je
mov
movsb
sub
adc
mov
dec
loopne
data16
lahf
lock
jo
mov
mov
nop
sahf
jae
aam
leave
mov
push
jns
mov
cmp
out
mov
adc
jnp
mov
fbstp
dec
cli
sarl
sbb
movsl
sub
xor
pop
into
xor
outsb
psubd
sub
jle
push
xor
and
xor
jg
xor
push
mov
sub
mov
loopne
cmp
enter
push
sbb
iret
insl
jnp
loope
out
ds
out
roll
out
bound
xchg
mov
and
or
lret
jecxz
pop
pop
repnz
int
jo
psrlq
fs
adc
push
in
aas
roll
or
and
adc
loopne
int
cmp
adc
xlat
jb
fs
push
cltd
mov
mov
ljmp
das
or
idiv
ds
ret
xchg
jae
push
aas
es
mov
aad
rcrl
xchg
lea
ret
mov
push
int3
push
decl
lret
aam
imul
and
adc
pop
inc
scas
lcall
negl
mov
and
fcoml
mov
aaa
shl
push
jle
sbb
inc
pushf
or
mov
push
fstp
pop
xor
enter
dec
shr
cs
adc
cmp
jno
dec
push
push
jno
rclb
mov
mov
dec
lcall
test
mov
fbld
xchg
lcall
ljmp
xchg
push
dec
push
xor
mov
inc
ja
pop
ret
xchg
and
test
xchg
cmpb
pop
ss
cmpsb
lcall
pop
aam
lock
cs
adc
mov
push
mov
sti
int
scas
ret
inc
jle
pop
outsb
sahf
mov
test
push
rol
jno
jecxz
push
mov
bound
jmp
add
outsb
cld
xchg
and
xor
inc
mov
or
ret
cmp
stos
data16
insl
or
fdiv
loope
mov
mov
dec
ficomps
fldt
clc
aas
xchg
dec
mov
sub
test
pop
mov
out
shlb
push
and
leave
xchg
cmc
xor
movsl
jb
add
jb
pop
jne
push
cmp
ds
aam
movsl
mov
pop
push
mov
test
cmp
mov
push
pop
daa
push
in
lea
inc
sbbb
scas
sbb
add
popf
jg
in
dec
mov
sub
jle
lea
add
push
xor
push
loop
cmp
cmp
pop
and
mov
push
mov
mov
inc
fistps
mov
dec
cmp
adc
mov
mov
push
insb
pop
or
in
sbb
push
shl
xchg
scas
cmpsl
cld
or
pop
rcrl
sbb
mov
push
sahf
add
sbb
pushf
ljmp
enter
aaa
bound
inc
loop
shlb
cltd
inc
out
cmp
mov
mov
in
adc
add
push
int
or
pop
outsb
aad
or
iret
push
out
jne
ds
loop
clc
sbb
jae
push
push
jo
cmp
ds
jl
or
aam
int
cs
push
jns
ds
push
inc
shrb
fcmovbe
out
xchg
sbb
in
mov
scas
xchg
jle
addl
mov
fiadds
xchg
or
pop
repnz
xchg
rclb
mov
lret
pextrw
mov
adc
mov
and
shr
cmp
addr16
pop
or
sahf
xor
push
aam
and
and
addr16
jmp
dec
imulb
jle
mov
fdivs
inc
in
addr16
mul
xchg
pop
shlb
ret
pop
jno
mov
add
lods
push
jecxz
movsl
xchg
pushf
jecxz
out
mov
sti
push
xchg
aas
mov
lods
and
xchg
out
push
cmp
clc
scas
insb
xchg
mov
jae
jne
repnz
dec
push
or
jno
mov
sub
icebp
ret
xchg
dec
lods
pop
inc
ss
or
into
pop
mov
shl
fidivrl
push
je
push
nopl
aas
xchg
mov
pop
pop
imul
movsl
jmp
lods
leave
inc
stos
pop
inc
stos
and
or
sub
mov
inc
cmp
jo
push
adc
xchg
or
leave
mov
push
aaa
mov
rorb
push
push
cmc
xchg
jo
cmp
leave
inc
xchg
out
mov
and
push
or
ficomps
adc
or
mov
jo
pop
rorl
pop
nop
push
and
xchg
int
insl
add
dec
pop
ljmp
jo
repnz
sub
ds
or
inc
fimuls
rclb
push
test
sbb
test
iret
jmp
out
fidivrs
push
insl
addb
mov
sbb
mov
fnstsw
stos
sbb
jle
xlat
xchg
pop
stos
out
or
push
adcb
cmpsb
add
aam
mov
inc
push
xor
sbbb
xchg
mov
fiadds
jo
mov
mov
test
insb
fwait
ljmp
adcl
loop
icebp
sbb
sarl
sbb
out
imulb
das
aad
inc
in
ret
out
sti
sbb
data16
sbb
jp
ret
mov
imul
xchg
mov
enter
mov
and
push
dec
fwait
cmp
xchg
repnz
out
loop
jno
inc
outsl
push
data16
repz
aas
test
rcrb
sbb
add
ret
add
cmp
cli
xor
ret
rcl
stos
data16
lahf
ret
jnp
jp
adc
loopne
rol
sub
mov
pop
cs
mov
inc
push
mov
jns
loop
pop
sub
add
mov
dec
shlb
loope
push
addr16
mov
lret
adc
xchg
inc
push
lods
iret
test
data16
mov
pop
ret
test
outsb
jo
andb
push
mov
and
es
loopne
sarb
jo
sub
mov
aas
cwtl
repz
rclb
out
sbb
push
fiadds
inc
ret
mov
jno
iret
js
add
add
add
insb
out
xchg
cmp
lds
push
ficomps
inc
mov
hlt
into
and
cmp
adc
repnz
mov
aas
jmp
or
out
sub
push
fucom
jge
shl
cmp
loope
cmp
jle
xchg
sub
xchg
popf
outsl
inc
movsb
push
leave
push
cmpsl
jo
xchg
or
in
aam
out
pop
fidivrl
add
ret
push
add
shll
push
and
pop
lcall
arpl
xor
outsb
push
mov
nop
and
rolb
push
pop
xor
lcall
fsubrp
mov
pushf
xlat
xchg
out
dec
test
test
mov
pop
es
adc
lods
hlt
cmp
sub
in
ret
les
call
sbb
pop
mov
jle
dec
ljmp
jns
or
ret
ds
jle
cmp
cmc
xchg
push
pop
data16
idivb
dec
insb
inc
cld
xor
popf
push
xchg
push
leave
mov
xor
sub
das
data16
cvtpi2ps
je
rolb
in
xchg
outsl
ss
rorb
cmp
mov
xlat
jecxz
jne
sahf
cmpsb
ror
or
les
inc
movsl
mov
fdivp
and
lret
adc
inc
cltd
aaa
and
push
loope
ficompl
cmp
enter
loopne
rcr
ficompl
mov
out
xchg
ss
sbb
aam
sahf
mov
xlat
xor
mov
ret
rcr
mov
mov
pop
xor
mov
movsb
out
cmp
fcom
loope
ret
je
rcrb
or
into
xor
pop
add
cli
mov
sub
fiaddl
mov
ret
add
xbegin
lcall
mov
or
mov
jmp
sub
add
dec
sbb
xchg
clc
inc
scas
bound
loopne
por
cltd
pop
mov
add
ret
mov
lahf
jnp
mov
inc
aas
out
ds
popa
mov
arpl
xor
cmc
and
inc
push
lret
imul
sahf
test
sbb
sbb
fsin
push
cmp
data16
aam
lock
add
pop
push
lret
leave
dec
pop
cmpsb
imul
push
jp
push
mov
out
add
xchg
data16
cmp
out
testb
ss
sarb
cmp
and
adc
pop
sbb
sbb
orb
fdivp
add
pop
loop
mull
mov
xchg
pop
std
cmp
fnsave
aas
shlb
ds
cmpsl
mov
push
jp
imull
jo
mov
rcrb
fwait
xlat
int
fsubrp
jmp
sub
add
mov
inc
pop
cmpl
loopne
es
leave
xchg
sbb
mov
in
mov
leave
cmp
addl
lcall
sti
jmp
loopne
fcmovnbe
out
add
xlat
rorb
faddp
jge
sti
cld
ja
into
out
pusha
mov
add
hlt
mov
ret
data16
add
sbb
or
fmul
inc
fdivrp
xor
and
add
push
push
push
loop
jle
adc
mov
and
das
xchg
aas
in
sub
lret
push
push
pop
sbb
iret
adc
push
insb
and
mov
mov
ficoms
inc
jecxz
sub
dec
xor
ss
mov
mov
mov
jl
sar
fs
shlb
testl
sbb
push
or
cmc
loop
stc
sbb
push
pop
repnz
mov
dec
mov
push
test
aas
xor
in
sbb
jp
mov
push
inc
xor
or
adcb
fbld
rolb
into
fldl
jg
jb
xchg
out
lods
jns
out
jle
mov
out
xchg
mov
scas
iret
test
pop
repnz
vcvtpd2ps
push
fs
sub
pop
and
push
mul
outsb
cmpl
clc
push
movsb
ss
dec
aam
sbb
cmpsb
outsb
sahf
lret
push
dec
outsl
xor
stc
mov
mov
bound
push
push
iret
jno
mov
sbb
rclb
dec
adc
mov
mov
fstpl
ficompl
jle
ds
pop
mov
in
jg
sarb
out
sahf
cmp
and
xchg
loope
or
ret
xor
mov
fildll
xchg
pop
jmp
std
mul
repz
mov
push
cld
dec
mov
xor
xor
negb
mov
push
inc
add
xchg
ljmp
cmp
or
je
sbb
push
lds
cmpsb
in
imul
fldln2
scas
xor
ret
pop
dec
inc
inc
adc
inc
mov
iret
add
movl
lds
mov
shr
cld
jle,pt
dec
adc
push
mov
xchg
ds
and
mov
cli
fstl
data16
lahf
enter
lret
pop
add
jne
pop
sbb
mov
aas
jae
cmp
fsubrp
divb
inc
pop
fwait
rorb
mov
cmova
fidivs
cmpsl
sbb
popa
or
popa
es
int3
jl
push
ss
push
pop
scas
repnz
out
shrb
fcmove
inc
sbb
shl
lods
scas
and
insl
cs
mov
jmp
xchg
push
divb
dec
out
in
dec
loope
dec
push
lcall
lcall
clc
pop
cmc
jb
ljmp
xor
fistps
in
cltd
in
movsb
ljmp
jns
xchg
jae
cmpsb
mov
inc
repz
cmp
or
lds
lock
jecxz
pop
or
lods
mov
mov
fisubs
jg
cmp
rclb
rcrb
notl
popl
orl
into
fnstenv
ret
int3
jp
mov
rorb
int
push
jo
popf
outsb
sbb
mov
rcll
push
aad
xchg
bound
xchg
xor
stos
mov
dec
scas
cli
inc
jle
adc
inc
nop
sbb
dec
push
ja
mov
push
aad
popf
push
outsb
ljmp
mov
jbe
out
adc
in
decb
mov
push
jle
jbe
repnz
sarl
mov
or
push
aaa
mov
in
mov
or
xchg
sub
xorb
rcr
ret
inc
movsb
sbb
repz
scas
xor
push
loope
cmp
push
clc
mov
jl
jle
xor
shlb
push
cwtl
push
pop
mov
int
xor
pop
cld
xorb
sti
xor
or
inc
fwait
mov
adc
je
push
lds
cmc
jle
pop
xor
cmpsb
mov
fsubp
divb
scas
shll
add
repnz
ljmp
lcall
push
sub
leave
jbe
xchg
fistpll
xchg
mov
jmp
sub
mov
push
loop
push
push
sbb
mov
mov
jmp
data16
jmp
dec
xchg
mov
sbb
jns
out
xorb
std
lds
fs
push
dec
lea
rcrb
mov
mov
adc
inc
ss
mov
ljmp
cmpsb
mov
cvtpi2ps
push
jne
test
pusha
addr16
cwtl
mov
xchg
popf
rcl
xchg
push
push
jl
iretw
inc
mov
add
cld
out
jp
out
int
jp
jne
jge
cmp
cmpsb
cmp
fwait
insb
inc
dec
jbe
stos
push
cmc
dec
mov
leave
cmpsl
jbe
push
pop
das
mov
sbbb
into
sub
push
shl
imul
pushf
jp
add
push
movsb
push
rcrb
inc
and
int3
scas
rcrb
inc
adc
fwait
cmc
jnp
in
bound
add
ret
xchg
test
mov
aam
push
adc
pop
iret
xor
ret
mov
lds
shr
xchg
dec
out
cmpb
popa
loop
push
jge
data16
insb
scas
sub
sbb
inc
subb
xor
testl
sti
xchg
fidivrl
pop
sub
mov
jl
aas
cmpsl
jo
mov
inc
je
js
xchg
cmp
aam
inc
insb
insl
lret
fsubl
jae
inc
push
xor
jg
nop
loop
mov
pop
ret
ds
fisubrs
or
push
mov
repz
jle
push
movsb
xlat
cs
xor
mov
jl
pop
aam
or
push
push
cmp
in
xadd
fwait
mov
add
das
lcall
inc
sub
out
scas
push
fmulp
and
dec
or
ret
pop
push
push
enter
scas
sahf
out
es
pop
cli
cmp
push
add
rcrb
pop
xchg
jb
sub
in
ret
or
xchg
popa
xchg
mov
lcall
sub
xlat
imul
leave
pop
adc
dec
inc
sub
mov
test
push
out
dec
inc
das
lcall
lds
shrb
jb
push
ret
ret
popf
jne
adc
sub
cmp
inc
and
xchg
or
push
dec
sbb
in
xchg
lds
loopne
jmp
or
push
lods
mov
roll
nop
jae
mov
clc
outsl
into
jnp
mov
xor
dec
jno
mov
jbe
stc
dec
xchg
in
orb
push
dec
out
rolb
adc
mov
das
or
push
rolb
ds
lock
sbb
icebp
or
mov
mov
pusha
jnp
jl,pn
mov
mov
roll
mov
fbld
xorb
jbe
lahf
jl
and
mov
sahf
mov
out
inc
push
pusha
jecxz,pt
bound
and
rcrb
das
xchg
dec
lea
adcl
lods
rolb
xor
cwtl
rol
push
fnstsw
cli
bound
push
das
outsb
sub
jp
dec
mov
sti
sub
fdivrp
int3
mov
jecxz
inc
movsb
stos
test
jecxz
inc
add
mov
scas
adc
jmp
iret
and
rorb
out
dec
fs
xchg
add
inc
xlat
pop
fs
loope
or
mov
fldt
ret
mov
push
adc
pop
jle
cmp
push
data16
push
gs
push
or
clc
adc
out
data16
mov
jne
fisubrs
xor
cs
xchg
inc
in
and
loopne
icebp
xor
enter
xchg
push
push
ja
test
data16
cmp
inc
pop
xor
nop
out
pushf
adc
or
push
sbb
jg
popf
mov
fidivl
push
aam
lds
mov
dec
push
mov
test
push
ret
cwtd
fildll
cmp
sub
ljmp
fsubp
add
push
scas
and
sub
mov
cs
push
mov
pushf
xchg
adc
jno
mov
rorb
hlt
dec
mov
gs
ds
jo
push
and
shrb
lods
ficoms
repz
stos
aaa
jnp
inc
mul
pop
xor
iret
rol
mov
mov
ficompl
repnz
adc
inc
inc
mov
out
jb
push
jmp
sbb
mov
inc
jle
mov
mov
stos
rol
xchg
fcomip
out
adc
ljmp
out
into
pop
sarb
idivb
jle
stc
jno
xor
testb
leave
mov
movb
jb
insb
pop
iret
imul
ret
push
in
cltd
and
mov
xchg
int3
xchg
or
cltd
dec
into
mov
popf
sub
in
or
loopne
or
out
jne,pn
enter
add
imul
ds
xor
and
sbb
xchg
mov
out
stc
jle
js
mov
sbb
notb
dec
jbe,pt
push
inc
lea
loopne
mov
jp
and
jmp
adc
stc
pop
insb
pop
xor
outsb
push
mov
shrb
push
lret
mov
bound
jp
xchg
aam
pop
mov
lret
daa
nop
cmpsl
fimuls
rcrb
pop
mov
lret
sub
adcl
in
inc
dec
mov
fwait
mov
or
psadbw
rcrl
and
cmp
aad
push
pop
xchg
in
dec
lea
xchg
push
and
testb
mov
mov
sub
scas
pusha
hlt
xchg
xor
addb
push
jg
jne
ss
les
mov
shlb
dec
sub
pop
out
popa
repnz
add
pmullw
sbb
out
cmp
into
out
adc
clc
jbe
bnd
xchg
jo
out
push
pop
jl
push
inc
jmp
test
bound
cmpsl
jmp
int
lcall
ljmp
in
mov
into
or
mov
jle
push
lahf
jb
and
ret
outsl
shll
in
jne
push
jg
lahf
in
and
pop
rolb
outsl
jle
stos
leave
out
add
jle
das
nop
lea
negb
mov
sbb
mov
pusha
dec
in
xchg
and
push
lret
fmul
jnp
mov
push
and
mov
add
rolb
or
clc
mov
adc
cmp
cmp
pop
push
adc
or
mov
mov
mov
gs
jle
in
dec
je
or
inc
or
outsb
les
inc
movsb
adc
pop
in
or
fidivl
cs
push
testb
mov
mov
cmp
mov
sahf
mov
out
sbb
les
push
add
pusha
int3
and
stos
mov
ds
in
pop
push
fiaddl
lcall
pop
in
add
lret
xchg
inc
mov
dec
cmp
and
xor
xchg
pop
rolb
inc
int3
frstor
jmp
rorb
mov
mov
into
ds
and
adc
ret
mov
roll
and
mov
mov
and
flds
sbb
fstpt
pop
clc
mov
mov
jno
mov
xchg
in
outsb
enter
adc
ret
imul
adc
push
adc
cmp
sub
in
test
mov
dec
xor
mov
xor
jle
or
add
lea
xor
add
mov
mov
sti
fimull
rol
push
imul
sub
fisubs
mov
adc
and
mov
roll
xchg
jmp
add
loop
ja
push
or
mov
setae
jae
jmp
dec
sarb
iret
int
imul
sahf
mov
mov
push
mov
sbb
in
sarb
mov
xchg
xchg
sti
inc
shl
in
nop
popf
mov
fucomp
mov
mov
jecxz
sub
ret
jl
incl
push
scas
fidivrs
test
push
xorl
mov
andb
imul
in
inc
mov
out
shlb
not
push
pop
mov
xchg
outsl
lods
adc
sub
imul
insl
test
jne
fldt
andb
lods
mov
dec
push
inc
inc
scas
mov
jmp
repnz
mov
xor
add
cltd
mov
jle
jl
mov
and
mov
lds
stc
or
push
or
lods
xor
xchg
push
sub
popa
mov
adc
sarl
les
imul
stos
lods
adc
mov
cmp
mov
pop
dec
xchg
fincstp
adc
mov
lock
cmp
inc
mov
jne
push
not
jmp
pop
cltd
movsb
jbe
insl
inc
cmpsb
dec
mov
pop
cmpsl
out
mov
mov
shlb
push
mov
cmp
cmp
sub
fldcw
shrl
push
mov
adc
inc
mov
xor
scas
test
jmp
push
lea
xor
xchg
mov
testl
mov
andb
hlt
dec
out
jae
shr
mov
push
es
sarl
cld
add
and
jecxz
mov
xchg
mov
mov
jae
fidivrl
dec
add
push
call
mov
sahf
fwait
repnz
cmp
fildll
dec
repz
xchg
and
add
pop
pop
divl
dec
mov
push
insl
sub
pop
cs
and
xlat
int3
ret
or
pushl
mov
jns
movsb
clc
test
ljmp
mov
mov
add
jp
incb
jnp
mov
mov
pop
loope
rcrb
aad
fisubs
xor
cld
mov
ljmp
js
iret
sub
rclb
inc
ss
addb
xchg
pop
xchg
js
adc
ss
inc
ds
dec
cmp
mov
rcl
cs
sub
ja
jmp
in
add
int3
setl
or
stc
sub
mov
adc
jle
les
adc
jb,pt
lcall
inc
dec
add
cmp
out
in
inc
mov
imul
and
cwtl
lds
xchg
jg
and
inc
mov
int3
mov
loope
in
mov
int
cmp
jmp
cmp
mov
cmc
sub
out
dec
xchg
jp
xor
mov
lret
cli
sub
fistpl
jl
aas
adc
inc
out
les
and
jecxz
sarl
imul
rcrb
add
sahf
fs
fsubl
jmp
mov
mov
xchg
mov
fidivrs
pop
ljmp
xor
push
push
jle
sbb
clc
sbb
lahf
jns
and
pop
in
or
loopne
lcall
mov
mov
decb
sahf
mov
push
test
adc
mov
push
jmp
mull
out
push
mov
pop
dec
mov
mov
sub
push
dec
in
pop
add
rcrb
sbb
add
adc
jg
popf
adc
or
sub
jl
or
out
push
push
dec
push
adc
add
pop
mov
movsl
leave
mov
sbb
ss
cmpsl
imul
stc
mov
sub
adc
mov
inc
xor
fildll
mov
rcll
loope
lods
hlt
ret
cmpsl
int3
push
jb
dec
aas
xor
cwtl
sub
dec
mov
repnz
sti
or
or
imul
js
cmp
mov
or
dec
jge
and
test
hlt
shll
mov
inc
ds
aad
aas
jge
or
push
and
push
lock
adc
test
mov
push
test
lods
shrb
sbb
insl
in
push
dec
decb
mov
inc
mov
adc
add
and
inc
cmp
sbb
inc
push
or
mov
rcll
lods
mov
clc
jnp
dec
out
push
jns
lea
leave
or
sarb
inc
rolb
aaa
outsb
lret
xchg
sub
sub
adc
push
jnp
xchg
jmp
cmpb
xor
pop
fiadds
ds
xor
xchg
mov
out
lcall
add
mov
cmpsl
shr
push
mov
pop
mov
mov
mov
inc
arpl
fadd
xchg
sub
in
or
test
xchg
push
insb
pop
in
pushf
repz
push
icebp
mov
sarb
cltd
xchg
faddl
bound
fucom
adc
mov
cmp
lea
and
cmc
les
mov
and
imul
cmpsl
mov
jg
test
add
into
cli
mov
in
sub
push
lcall
mov
je
dec
dec
push
xor
cmpsb
inc
or
rolb
inc
jns
fsubrp
aam
xor
loopne
adc
sti
mov
cmp
ds
les
xor
dec
or
or
lods
push
aas
push
inc
andb
mov
cmpsl
sbb
pop
daa
mov
subb
pop
push
adc
dec
incb
mov
leave
sbb
lds
pop
fstps
mov
and
mov
out
cld
popa
jecxz
pop
es
idivl
jmp
ja
or
iret
ret
test
adc
push
xchg
popf
jno
or
sub
adc
arpl
mov
negb
inc
test
dec
or
addl
jmp
jl
ret
stc
bound
xor
push
lods
xchg
jo
imul
inc
sub
cmc
pop
xchg
jno
adc
shl
outsl
ljmp
ficomps
ds
rclb
fbld
push
ljmp
push
popf
call
ficoms
rcrb
adc
pop
xor
jns
xchg
aad
dec
xchg
insl
test
and
flds
repnz
jge
imul
std
pop
call
dec
lcall
data16
sbbb
push
jge
mov
pop
ljmp
xchg
mov
push
test
scas
std
inc
aas
testb
push
es
cltd
sub
mov
push
aad
fistl
dec
in
lret
mov
dec
popf
stos
mov
scas
mov
adc
lret
jbe
ds
mov
inc
or
push
inc
in
and
dec
push
out
loop
aad
call
roll
mov
aas
sahf
popa
push
int
inc
add
pop
ja
out
in
ret
jge
mov
mov
and
mov
mov
sarl
pop
mov
push
push
sbb
loope
or
xchg
cmc
mov
jns
loopne
jecxz
or
or
dec
lds
arpl
out
cmp
xchg
and
int
mov
xchg
push
shll
aad
mov
sbb
push
push
cmpsl
ficoml
mov
pop
mov
pop
mov
incl
enter
and
popa
sbb
iret
push
lret
mov
and
scas
adcl
push
push
imul
ss
ret
enter
das
adc
lea
into
shl
pop
push
or
xchg
sub
fwait
xchg
movsb
loopne
pop
sbb
das
aas
sub
into
ror
lods
loopne
fiadds
mov
xorb
loop
jne
xchg
mov
dec
mov
pop
mov
adc
leave
adc
mov
pop
or
fistl
sub
jno
push
push
es
sbbb
add
ret
pop
xor
loope
cli
test
test
push
or
ror
pop
dec
cmpsb
addr16
in
cmp
sbb
movsb
jmp
inc
lods
sbb
mov
inc
pop
bound
ljmp
jmp
nop
scas
mov
inc
lahf
ja
out
pushf
xchg
dec
pop
inc
xor
dec
dec
add
adc
out
xchg
scas
pushf
jl
inc
les
jmp
dec
inc
aam
mov
and
push
inc
je
lods
mov
jnp
es
ret
data16
add
cld
xchg
je
orb
fcomip
cmpsl
call
loop
in
or
imul
cmpsl
idivb
cmpsl
mov
mov
jge
mov
adc
pop
mov
fsub
cmp
jnp
push
fs
into
dec
dec
or
pusha
dec
bnd
xchg
add
push
add
inc
jmp
loope
or
or
enter
inc
in
int3
adc
mov
test
dec
je
jge
lds
or
mov
imul
or
mov
push
sbb
ja
cmpsb
jmp
sub
imul
jo
repnz
imul
inc
jmp
push
sub
xchg
rol
inc
jl
mov
mov
cmpsl
ror
inc
and
and
addb
push
push
jge
add
dec
and
mov
dec
push
adc
jbe
inc
insb
ja
adc
push
cmp
fwait
test
pop
and
sub
pop
push
popf
arpl
push
or
insl
sahf
int
jecxz
push
cmp
ret
mov
jl
jbe
loop
movsl
xor
pop
inc
lret
cmpl
daa
mov
or
pop
cmp
nop
fisubrs
and
xchg
or
mov
mov
cmpsb
adc
dec
ret
mov
pushw
sbb
push
push
or
adc
push
enter
inc
ljmp
xchg
sub
ret
xorl
cld
push
jle
pop
cmpsb
orb
shl
popl
pop
sbb
and
mov
lret
xchg
push
jbe
mov
pusha
nop
subps
cmpsl
cmp
arpl
push
push
cmpsl
push
bound
test
and
cmpsb
testb
es
cmp
repnz
jl
dec
pop
test
push
aaa
or
xchg
pop
decb
js
xor
xor
fisttpl
push
cmpsl
push
cmp
call
adc
jle
es
outsl
loope
out
cmpsl
pusha
repz
pop
and
int
cmpsb
cmpsb
testb
jns
push
xor
push
pop
adc
outsl
pop
adc
cmpsl
cmp
addr16
fldenv
mov
fsubr
sbbl
mov
dec
adc
add
lret
inc
in
es
popa
cmp
ret
in
pop
mov
adc
push
scas
sbb
adc
fs
inc
inc
adc
lret
invd
push
test
xchg
cmpsb
mov
sbb
clc
addr16
lods
js
or
dec
pop
add
aas
ret
in
mov
std
inc
ret
out
xor
sbb
lods
std
xchg
test
sahf
out
cmpsl
je
jae
sarb
add
call
adc
jecxz
scas
and
xor
dec
and
cmpsb
push
xchg
test
xchg
loop
icebp
lahf
xchg
sub
test
jmp
fwait
and
dec
xchg
and
out
xchg
mov
jecxz
es
inc
bound
and
stc
ja
xorb
shlb
inc
imulb
pop
pop
rorb
xor
pop
out
in
cmpps
jge
cmp
fildl
insb
mov
dec
sub
mov
cmpsl
daa
nop
mov
adc
xor
enter
xor
pop
mov
into
pop
inc
enter
jp
dec
push
out
cli
and
movb
test
ja
aas
xor
pop
mov
fiadds
dec
inc
out
mov
push
sbb
mov
outsl
jne
push
aam
jl
int
test
mov
aas
rcrl
inc
jns
mov
pop
push
cmpsb
and
fldl
mov
cmpsb
push
stc
adc
pop
je
push
cmpsb
loope
xor
dec
addr16
imul
hlt
jbe
sbbl
and
ret
into
jg
gs
sbb
push
xor
adcb
std
jae
call
ret
pop
aas
loopne
mov
inc
cmc
jl
inc
xor
push
lods
sub
mov
inc
repz
lock
adc
lret
mov
push
inc
cmovnp
stos
mov
pop
xorl
jne
mov
test
hlt
push
add
push
rcrb
and
andl
jl
in
repnz
repz
jns
cmpsl
movsb
adc
fisttpll
lret
dec
lahf
call
js
jo
jae
addb
jl
cmpsl
mov
mov
loop
inc
inc
lret
xchg
faddp
lods
dec
ds
mov
ret
cmpsl
scas
pop
inc
out
xchg
es
inc
fwait
pop
inc
mov
xlat
outsl
mov
jb
insl
pusha
ss
jecxz
cmp
adc
in
inc
jne
mov
test
add
ficoms
mov
rorb
lret
js
adc
or
ss
ss
adc
mov
add
xchg
bnd
sub
shl
push
jnp
cmp
out
call
mov
inc
sar
test
outsl
aad
add
int3
mov
adc
js
outsb
pop
es
push
lea
stos
mov
adc
mov
and
xchg
jmp
repz
clc
aad
dec
push
push
and
sub
pop
mov
pop
add
and
push
adcb
or
test
sbb
out
add
inc
nop
adc
cmpsl
sbb
mov
test
sbb
pop
sbb
push
sbb
cmpsb
test
repnz
push
outsl
ljmp
mov
pop
adc
and
push
push
mov
cmp
pop
mov
cmp
lcall
fdivp
dec
or
shr
mov
subl
imul
leave
xchg
fs
decl
out
push
popf
push
cli
int
adc
lock
adc
or
jno
jbe
es
int
insb
jge
ret
and
cmpsl
sbb
popf
sbb
push
loop
test
fdivrl
aad
fistl
in
inc
xchg
dec
sbb
inc
sbb
push
cmp
mov
cmp
xchg
in
pop
adc
jo
popa
shlb
in
cld
jecxz
dec
mov
xchg
jecxz
mov
sbbb
xchg
shll
mov
jecxz
and
repz
inc
in
loop
mov
pushf
jmp
es
aam
rcr
scas
ja
sbb
fcmovnbe
pop
fcomi
xor
dec
sbb
or
shlb
aas
xlat
dec
adc
or
test
push
push
xchg
jbe
cmp
lods
cmp
or
mul
cmc
sbb
or
mov
aam
push
jbe
imul
call
int
push
jl
test
mov
cmpsb
mov
cmp
add
or
mov
dec
add
sbb
add
mov
push
out
lods
jmp
jp
sbb
loopne
cli
and
adc
ja
jle
mov
ret
cmpsb
cmp
in
dec
jl
stos
ljmp
jle
aas
stos
mov
adc
push
movsb
ret
insb
mov
dec
add
leave
std
addr16
dec
and
adc
mov
insb
or
xlat
lea
pop
mov
sub
cmpsb
in
adc
dec
xor
push
mov
mov
push
jae
frstor
cltd
push
sahf
mov
xchg
cwtl
movsb
cmc
orb
add
shlb
insb
in
int
insb
pop
jle
test
rorl
pop
popa
clc
push
pop
shll
arpl
aas
mov
rcrl
rolb
mov
cmpsb
dec
loopne
xor
add
pop
xorb
jo
fdivrp
fisubs
in
pop
adc
dec
popa
cmpsl
fwait
or
inc
mov
cld
push
lahf
xorb
shll
mov
addr16
jmp
movsb
pop
imul
or
xchg
adc
sub
cmpsl
adc
sbb
lea
mov
in
mov
lock
aas
pop
cli
and
mov
iret
mov
out
ret
jp
cwtl
mov
mov
lcall
int
call
push
shrb
scas
sbb
idivb
inc
ficomps
jo
in
fcomps
out
cld
scas
add
andb
divl
test
imul
xor
pop
dec
stos
cli
shl
push
push
jge
sarl
ljmp
mov
mov
jecxz
sub
xor
cltd
xlat
xchg
lock
mov
adc
adc
mov
mov
mov
mov
iret
addl
fcomps
loopne
cmpsl
adc
cli
test
shll
outsl
enter
lret
cmp
pop
xor
ds
dec
inc
leave
stos
push
sbb
xchg
inc
pop
sub
loopne
dec
xor
cmpsb
out
mov
sbb
insl
pop
clc
cmpsl
test
popf
mov
lret
push
js
jne
movsb
push
jecxz
xchg
popa
adc
movsb
xor
mov
cmpsl
fisubs
xchg
daa
insb
cmp
popa
mov
sub
cmpsb
loop
xor
push
into
jg
xchg
cmpb
pop
orb
dec
daa
xchg
push
clc
mov
push
sbb
or
inc
dec
cmpsl
scas
andl
imul
mov
aas
out
pop
das
popf
sbb
adc
fsubrl
sahf
cmp
test
push
dec
mov
mov
cmpsl
rcrl
call
mov
pusha
jbe
or
fidivs
add
or
or
aad
rolb
es
push
divb
xlat
and
jecxz
fcompl
es
lret
daa
mov
out
loop
mov
sbb
jecxz
les
sbb
fdivp
cmpsl
mov
push
pop
stc
jbe
mov
cmp
cmpsl
sar
int
lds
fcoml
cmpsl
mov
stos
ret
mov
cld
cmp
pop
shr
push
rol
int3
faddp
int
les
sub
lret
sahf
xchg
dec
data16
rcrb
loope
dec
xor
test
mov
cld
add
test
mov
cmpsb
xchg
rclb
test
sub
adc
inc
mov
lret
mov
push
xchg
decl
pop
inc
jo
ds
pop
xchg
lret
mov
in
aam
jae
and
out
arpl
and
call
mov
dec
aam
jns
imul
cmp
jge
and
inc
stos
mov
and
fsubs
mov
lods
jle
je
dec
or
push
or
and
inc
sbb
push
sbb
cmpsl
ret
rolb
and
sub
mov
and
inc
in
push
xchg
sar
scas
sub
dec
jb
movsl
sub
inc
or
pushf
cmp
bound
mov
loop
adc
movsl
pop
sbb
nop
repnz
adc
xor
push
ret
jno
outsl
add
push
ljmp
rcl
pop
jb
add
cmpsl
outsl
mov
adc
mov
mov
js
or
mov
lahf
jmp
push
or
ret
or
pop
inc
outsl
out
mov
push
jle
rcl
insl
jo
jecxz
push
jnp
cmpsl
or
cwtl
in
imul
pop
cs
sbb
faddl
cmpsb
sub
mov
cmpsb
xor
push
lods
fs
lret
lea
jle
les
inc
ret
dec
dec
cmpsl
pop
filds
mov
adc
mov
sahf
push
out
sbb
repz
stc
mov
cmpsb
xchg
cmpsl
pop
mov
mov
push
cmp
inc
add
test
add
adc
mov
loope
aas
xchg
outsl
pop
stos
clc
push
push
test
mov
sbb
cmp
pop
in
cli
loopne
cmp
dec
pop
fists
dec
and
lret
nop
shlb
aas
jmp
and
mov
or
loopne
inc
mov
shll
mov
inc
pop
xchg
sub
jle
sti
mov
sti
cmpsl
adc
movsl
dec
jmp
sbb
in
pushw
lock
std
jp
inc
cmpsb
stos
in
dec
push
sbb
mov
jno
gs
add
adc
xchg
adc
push
pop
add
sbb
mov
pushw
push
push
or
cmp
aam
out
nop
xor
pop
push
sti
pop
out
loopne
mov
cmpsb
inc
lcall
jno
adc
and
rorb
cmpsl
in
ficompl
mov
int
lcall
int
sbb
neg
pop
andl
cmp
push
fimuls
xchg
push
or
cltd
push
push
cmpl
dec
inc
push
pop
jmp
lods
popa
mov
rcrl
and
int
loopne
ficomps
and
lods
out
xor
std
jp
gs
in
sbb
mov
out
sbb
mov
and
or
lret
or
and
sub
cmp
ss
mov
and
test
jecxz
lret
je
mov
jbe
dec
mov
push
inc
mov
cmp
test
dec
mov
cmpsb
lods
adc
std
data16
scas
mov
sti
and
stc
ret
outsw
ds
mov
pop
leave
bound
jbe
xor
fs
dec
repz
cmp
bound
cmpsl
mulb
cmpsb
outsl
push
jno
sbb
mov
into
push
shlb
xchg
mov
sahf
cmp
jae
cmp
mov
adc
xlat
mov
jg
add
push
push
jne
inc
dec
push
mov
daa
inc
lods
add
and
mov
inc
sub
jnp
into
jns
sbb
lock
or
pop
or
jge
mov
mov
mov
in
fwait
pusha
testb
cmc
subl
cmp
pop
xchg
ret
jbe
or
or
and
cmpsl
pop
sub
sbb
loop
mov
loopne
aaa
cmpsl
sbb
ja
andb
xchg
das
xchg
sbb
pop
sub
repz
clc
cmpsb
in
std
inc
test
mov
dec
insb
movsb
mov
fdivrl
es
pusha
pop
test
cmpsl
jecxz
mov
out
fisubrs
call
lret
in
cmp
push
xchg
cmpsl
in
stos
outsb
cmp
adc
or
jo
nop
mov
lret
in
repnz
mov
ljmp
xchg
or
and
sbb
stos
sub
cmp
sti
xor
stos
inc
sbb
addl
fisttpll
push
cmp
pushf
fsubl
fldcw
lea
pop
adc
es
mov
dec
push
arpl
lret
sub
cmpsl
inc
nop
push
insb
xorb
mov
add
imul
pop
ja
adc
out
and
mov
xchg
inc
fcompl
ja
mov
or
popa
adc
fcmove
mov
add
pop
adc
cmpsl
xchg
adc
cmp
push
and
sbb
cmp
or
xchg
out
cmpsb
push
cmp
pop
xor
ret
push
mov
imul
jecxz
pop
push
sbb
push
rcrb
push
mov
push
inc
cmp
xchg
outsb
xchg
into
push
push
xlat
sub
int
pop
cmp
mov
clc
aam
mov
pop
inc
stc
inc
jge
mov
ljmp
or
aam
xchg
outsl
sahf
cmp
call
ljmp
popf
jb
pop
fcompl
mov
cmpsl
sbb
inc
ret
cmc
mov
inc
cmp
dec
js
sub
data16
cmp
ficomps
mov
mov
stos
xchg
cmp
sbb
pop
sbb
or
xchg
mov
lods
movsl
ficoml
cmpsl
in
mov
dec
push
mov
jle
jo
push
rcl
repz
mov
xor
adc
ds
mov
inc
inc
cwtl
xchg
movsb
mov
xlat
and
test
inc
sub
sbb
add
adc
push
fidivl
mov
insb
cmpsl
and
mov
push
imul
mov
sub
test
or
std
mov
mov
cmpsl
push
push
in
cmpsb
mov
or
jns
pushf
shlb
xor
movmskps
cmp
leave
jne
dec
mov
sbb
fdivrl
cltd
insl
and
inc
mov
pop
push
cmpsl
push
imul
loop
push
es
inc
sahf
mov
mov
bnd
cld
inc
incb
lock
adc
and
aam
mov
add
or
pop
rol
sbb
pop
inc
cs
lret
fs
xlat
push
push
sahf
add
mov
dec
add
es
in
xor
inc
int3
in
add
push
stos
mov
into
pop
scas
test
sbb
add
adc
cmpsl
frstor
push
adc
clc
jbe
pop
gs
inc
nop
or
in
lahf
xchg
es
test
fmulp
out
sbb
jmp
inc
jbe
push
out
ficoms
cmpsb
and
shrb
and
sbb
int
xchg
enter
mov
xchg
lea
es
sub
loope
aad
push
jge
es
dec
pusha
decl
xchg
push
mov
sbb
or
fwait
cmpl
test
jmp
inc
pop
shll
or
inc
out
sarb
push
js
ja
mov
aas
cmpsb
lahf
sub
push
test
pop
sbb
in
or
stos
adc
lret
xchg
in
mov
mov
jbe
pop
cmpsl
cmpb
mov
pop
test
and
push
ror
cmpb
les
ss
xor
cmpsl
or
push
and
add
leave
in
mov
xchg
mov
adc
or
cmp
cmpl
das
inc
cmpsb
jecxz
push
xor
adc
les
cmp
jo
movsl
xchg
adc
aas
xchg
filds
pushf
shlb
xchg
or
iret
shlb
add
dec
imul
leave
mov
inc
push
push
das
dec
cmp
data16
es
or
mov
jno
pushf
shll
adc
cmpsl
dec
and
jae
mov
mov
fisubrs
and
jmp
icebp
inc
xchg
nop
jecxz
xor
aas
push
gs
or
inc
sahf
cmpsl
outsb
push
mov
push
into
nop
sbb
cmpsl
inc
inc
push
dec
xchg
insb
inc
outsl
data16
pop
pushf
jns
lock
or
pop
leave
mov
cmpsl
in
in
mov
xor
push
adc
adc
mov
inc
add
leave
cmpsb
out
and
sbbb
andb
mov
jb
mov
or
mov
push
cmpsl
bound
pusha
shlb
fmuls
scas
push
loop
inc
stc
int
ds
pushf
inc
cli
lds
push
in
fmuls
push
xor
in
inc
inc
cmpsb
arpl
out
push
orb
stc
out
mov
mov
push
pop
fbld
ljmp
cmp
xchg
sub
loop
fdivrl
les
test
sbb
mov
mov
pusha
xlat
fistl
cmp
es
mov
adc
xchg
fdivrl
pop
ds
rcrb
and
pop
movaps
cmpsl
ret
mov
andl
mov
sbb
adc
and
rorl
cmp
ds
jae
xchg
mov
push
adc
push
mov
int3
sbb
rcl
popa
jne
call
push
out
sbb
and
fcomip
push
pop
in
imul
push
cmpsb
pop
andb
add
faddl
aaa
sbb
les
ljmp
cltd
jbe
xor
dec
xchg
loopne
push
xchg
ret
or
jo
lret
out
pop
dec
leave
mov
pop
cmp
cmpsb
pop
push
stc
mov
mov
mov
roll
cmpb
add
fistl
cmpl
shr
mov
inc
jbe
adc
pop
cmpsl
mov
int
out
test
into
pop
adc
sub
loop
lea
cmp
pop
dec
test
in
sbb
mov
and
into
sbb
jecxz
xor
mov
inc
orl
fiaddl
adc
push
cmpsl
push
jb
pop
push
mov
inc
dec
pop
cmpl
loopne
rorb
xchg
inc
xchg
mov
lret
pop
and
adc
dec
mov
lods
jne
sbb
pop
sub
mov
mov
sbb
test
xor
xchg
mov
fwait
push
test
jecxz
mov
sbb
jl
adc
cmp
mov
pop
mov
fidivs
sbb
xchg
xchg
shll
fdivr
adcb
adc
jmp
mov
pop
dec
mov
cmpsl
cmp
subl
dec
ret
fidivrl
cvtps2pi
or
dec
push
insb
pop
add
mov
add
dec
jge
lds
inc
repz
xchg
mov
xchg
mov
es
sbb
repz
inc
dec
je
sub
test
hlt
outsb
pop
cltd
dec
mov
loopne
out
mov
lds
sahf
int
loopne
xchg
push
cmpsl
scas
cmpsb
andb
repz
mov
xor
pop
sub
push
adc
divl
cmp
xchg
or
push
leave
rcr
in
jmp
in
loop
in
or
cmp
lds
or
fiaddl
sbb
sbb
dec
mov
jo
adc
mov
cmp
fidivrs
mov
daa
cmpsb
push
xchg
pop
mov
cmp
cmp
int3
arpl
pop
mov
pop
lret
icebp
inc
shr
clc
into
dec
aas
es
js
push
push
mov
cs
xchg
push
icebp
jmp
cmp
rcll
mov
push
in
cmp
movsl
dec
je
dec
pop
mov
mov
xor
fistps
push
lret
lods
mov
inc
sbb
inc
scas
sbb
push
dec
add
jbe
je
ret
es
sub
jae
sub
mov
test
sub
add
pop
test
inc
jo
loopne
mov
stos
shr
push
sahf
into
sbb
popa
in
insb
push
in
sub
push
in
fst
adc
pop
int3
push
test
xor
dec
pop
mov
rcrb
sbb
je
pop
mov
push
adc
pop
and
mov
dec
ret
fcmovnbe
dec
arpl
out
cltd
cmpsl
jecxz
ret
fisubs
cmpsb
add
out
cmp
sub
xlat
sbbb
dec
test
scas
inc
imul
pusha
inc
loop
and
cmpsl
mov
lods
mov
fnstenv
adc
push
sbb
fistl
call
repz
ret
pushf
sbb
ret
adc
andb
addr16
loopne
fisttps
mov
xchg
jo
les
inc
lods
fcmovbe
and
mov
adc
mov
sub
xchg
mov
inc
aas
es
cmp
cmpsl
mov
push
pop
mov
outsl
int3
push
jl
daa
push
ficoms
dec
movsb
cmp
aaa
aam
leave
fstpt
es
mov
sbb
test
into
insb
cmp
aas
jno,pn
mov
mov
sbbl
and
mov
xor
aam
push
arpl
fidivrs
in
ret
add
xorb
fcoms
jmp
cmp
sti
aaa
or
push
sub
adc
ret
jo
pop
sub
jl
adc
push
jp
into
fwait
popl
aas
push
inc
xchg
mov
leave
push
loopne
shl
fdivp
test
inc
fwait
stos
pop
or
and
lcall
mov
subl
scas
cmp
inc
scas
dec
mov
pushl
push
and
jp
in
xor
push
and
lock
inc
xchg
mov
loopne
xlat
pop
adc
push
push
mov
cmp
or
stos
cmp
jnp
shll
iret
incl
xchg
repnz
stos
fiadds
mov
mov
mov
movb
int
pop
ret
cmp
mov
mov
mov
stos
fst
push
inc
in
push
jno
fdivrp
push
sbb
jecxz
ror
jecxz
pop
pop
add
adc
clc
jns
pop
adc
loope
sub
aaa
lret
out
les
xor
repnz
fildl
aam
js
lds
rolb
popl
ret
stos
jge
xchg
push
mov
pusha
nop
push
cli
mov
mov
mov
daa
pop
xor
iret
add
sbb
fmul
mov
xor
fwait
dec
push
daa
lcall
push
int
adc
cmpsb
aam
mov
or
shlb
xchg
sbb
aas
inc
out
stc
jecxz
cmpsl
aad
popf
in
mov
fisttpll
mov
mov
adc
ss
mov
mov
xor
add
rolb
xchg
out
clc
push
inc
call
sub
nop
out
test
scas
sbb
inc
push
sub
push
push
mov
cmp
jbe
push
push
push
js
adc
mov
jp
call
aad
xchg
fadds
xor
mov
cmpsb
shll
cmp
xor
enter
mov
stc
lds
jle
pop
stc
or
cmp
movsb
lock
bound
mov
cmpsb
or
lods
jmp
imulb
xchg
cs
cmpsl
test
mov
fisttpl
inc
aas
es
shrb
add
ror
lret
ret
add
into
and
sbb
mov
mov
mov
sbb
cmp
inc
fcmovb
lods
imul
imul
inc
in
xchg
fsubrs
cmpsb
ljmp
imull
rcl
ss
sub
lds
and
mov
inc
and
fidivrs
test
ss
mov
cs
sbb
mov
xchg
fistpll
dec
add
sbb
sbb
inc
inc
int
ret
jecxz
stc
mov
xchg
sub
xor
push
fwait
mov
inc
into
js
mov
ret
push
push
jns
cmpsl
jecxz
fs
movsb
push
xor
sbb
sbb
mov
pop
push
test
dec
roll
mov
jns
cmp
jge
iret
pop
cmpb
or
rolb
mov
shr
ds
inc
add
and
adc
daa
out
and
and
addr16
test
mov
push
outsb
jno
mov
and
lret
sub
inc
dec
in
rcrl
out
test
dec
lahf
ja
mov
lret
pop
leave
repnz
jle
xor
jl
ds
dec
stc
inc
ja
js
pop
adc
dec
dec
out
out
and
lds
pop
shll
mov
mov
pop
jns
inc
out
pusha
jl
ficompl
jbe
fsubrp
xchg
into
cmpsb
mov
negb
mov
jmp
punpcklbw
fstpt
in
adc
lahf
cmpsb
jnp
cmp
jmp
sub
dec
inc
xor
test
repnz
inc
jnp
push
push
inc
cmpsb
cmp
sbb
cmpsl
xchg
cmpl
test
jg
push
les
sti
arpl
clc
in
imul
icebp
mov
mov
std
push
lods
mov
xor
mov
jge
into
sub
adc
imull
xor
in
push
push
test
fs
mov
mov
xchg
cmpsl
or
push
mov
adc
mov
inc
nop
das
ficoms
push
cmp
jmp
mov
adc
mov
jge
in
repz
inc
pop
add
jecxz
clc
xor
imul
inc
insl
out
loop
cld
pop
or
lcall
sbb
daa
inc
pushl
ret
mov
sub
pushf
lahf
push
dec
mov
sti
sub
addb
call
neg
push
ds
adc
and
sbb
dec
cmp
enter
pushf
test
jge
mov
push
movsb
adc
push
mov
int
jle
jbe
pop
das
stc
jmp
mov
movsb
or
mov
das
std
fisubrs
repnz
jmp
test
sarl
lock
sarl
xchg
or
cmpsl
fisubrl
cmpsb
lds
xchg
xor
xlat
inc
rcl
psubsw
pop
sbb
fisubs
daa
jge
aas
mov
repz
xchg
icebp
pop
rol
mov
adc
push
iret
test
in
js
cltd
lret
stc
xchg
jne
shll
adc
or
push
data16
mov
xchg
sub
unpckhps
mov
push
sub
mov
sbb
or
cmpsb
dec
lret
addr16
movsb
xor
repz
jne
xor
jno
pop
rcll
in
adc
push
mov
pop
inc
mov
cmp
pop
and
lret
cmpsb
push
mov
test
fsubp
cli
pop
fisubl
add
adc
mov
push
int
jg
jecxz
mov
outsl
push
sbb
or
xchg
add
aam
xor
jns
cmp
add
jge
and
mov
pushf
fsubrl
xchg
in
fsts
test
dec
pushl
mov
cmp
mov
jmp
sbb
adc
insb
xor
push
in
fnsave
pop
xlat
sahf
inc
mov
cmpsl
test
repz
out
xchg
lock
inc
call
dec
roll
sbb
sbb
dec
test
outsl
add
xchg
in
andb
cmpsb
dec
ss
inc
pop
inc
or
push
ffreep
xchg
push
mov
push
push
cmpsl
outsl
sub
jo
cli
lods
jns
pop
mov
sbb
add
inc
push
stc
sbb
pop
leave
pop
adc
jne
push
or
es
je
mov
mov
jns
pop
pusha
cmpsb
into
fildll
shlb
lret
pop
inc
or
aas
jl
push
push
add
cmp
addr16
adc
xor
jecxz
into
pop
inc
sbb
sbb
inc
cmp
cmp
add
pop
gs
arpl
add
cmp
data16
sbb
ret
push
aam
leave
cmp
jnp
pop
sbb
pop
testl
sub
gs
adc
push
ret
fcmovnb
pop
imul
cmpsb
sub
fisubs
pop
pushf
and
add
cmpsb
ja
mov
adc
ret
jno
dec
mov
inc
fbld
jecxz
cmp
das
jl
in
cmp
jmp
adc
mov
inc
daa
dec
inc
sbb
lock
mov
adc
xor
enter
ja
cmp
cmp
mov
cmpsb
rorb
test
or
push
jl
push
cmpsl
in
adc
in
mov
outsb
pop
cmpsl
leave
sbb
adc
dec
das
jle
jnp
and
aam
mov
aad
lods
mov
lret
stc
pop
repnz
lock
cli
fcmovnb
cwtl
mov
aam
jmp
mov
inc
push
and
jecxz
push
or
jl
adc
sbb
ja
push
pop
negb
fs
sbb
fs
dec
xchg
fadds
cmpsl
jle
es
rolb
jecxz
das
cmp
aas
pop
dec
es
int3
or
push
xchg
or
bound
dec
mov
mov
nop
inc
int
fs
dec
pop
push
cmpsl
cmp
outsl
and
jmp
adc
dec
xchg
sbb
flds
inc
push
jmp
lods
nop
adc
cmp
push
jns
pop
add
ret
cmpsb
test
ret
inc
out
lds
hlt
add
orb
mov
lods
fadd
or
mov
push
inc
push
fwait
jne
sahf
mov
cmpsb
into
add
or
push
inc
lret
es
sbb
es
mov
sbb
lods
mov
pop
push
dec
add
popa
or
out
into
int
push
cmpsl
rcl
mov
xchg
jmp
jge
or
cmpsb
or
or
inc
jo
jmp
xor
aad
jno
fucomp
fcoml
push
es
push
dec
inc
cmpsb
lock
testb
push
pushf
and
fldl
mov
imul
pop
rorb
test
push
adc
sbb
push
mov
cmp
cmp
lret
in
mov
lahf
inc
and
into
dec
xchg
xor
push
test
test
sub
movsb
int3
adc
or
aas
je
push
frstor
rclb
mov
out
int3
push
neg
or
std
cmpsb
or
clc
lcall
mov
enter
rclb
aam
inc
and
sbb
bound
divl
mov
jmp
cli
aaa
pop
fldl
pop
ficomps
or
lods
fwait
jns
cltd
cmp
int3
pop
in
push
stos
fcmovu
testl
inc
push
lret
cld
jb
inc
mov
out
cmpsl
les
sbb
adc
push
push
cld
lods
xchg
jns
push
push
scas
jl
in
fstpl
in
push
movsb
sbb
ret
ret
or
pop
mov
mov
add
cmpsb
inc
pop
jl
push
les
hlt
push
pop
js
dec
and
sub
and
fwait
inc
sub
das
in
mov
mov
jo
xor
incl
cs
loop
xchg
stos
push
xor
cmpsb
loope
sbb
sbb
fnstcw
arpl
rolb
cmp
add
mov
rclb
shll
jnp
insl
add
pop
mov
dec
loope
push
pop
mov
inc
sbb
insb
sub
es
insl
jbe
mov
and
out
rcll
imul
pusha
js
and
jecxz
pop
xchg
flds
and
push
shll
dec
jns
pop
jns
inc
scas
aam
loopne
push
xor
pop
lods
dec
outsb
and
pop
ss
cmpsl
into
cmp
in
add
pop
and
jg
mov
andl
inc
mov
lahf
shlb
in
sbb
jmp
sub
pop
popf
push
sbb
nop
inc
stos
orl
js
adc
cmpsb
shrl
jno
ret
cmpsl
mov
jo
fsubrp
sti
dec
movsl
sbb
cli
leave
aas
mov
rclb
outsb
pop
pop
es
cmpsl
jmp
jecxz
xor
mov
clc
cmp
push
sub
push
xor
inc
xchg
dec
mov
outsl
aaa
or
lret
add
lcall
cwtl
outsl
jnp
int
enter
stc
or
and
jge
jecxz
cli
add
dec
pusha
sbb
mov
jmp
jo
inc
sbb
cmpsl
and
outsb
add
int3
push
adc
xor
adc
sub
sbb
loopne
adc
mov
push
loopne
pop
enter
int3
aad
adc
insl
cmp
hlt
sbb
add
cmp
pusha
int
sbb
inc
xchg
and
sub
jae
push
xchg
fcomps
xchg
outsb
in
mov
cmc
cwtl
xor
inc
jmp
clc
ret
lods
jo
or
push
in
mov
jnp
xchg
clc
lods
fidivs
push
fcoms
repz
popf
mov
pushf
jo
inc
lods
pop
xlat
test
into
daa
popa
push
pusha
movsl
or
pusha
ss
movsl
xchg
addb
stos
jmp
jp
adc
hlt
pop
pop
insl
lds
filds
lock
mov
and
leavew
mov
pop
and
lods
repz
push
std
inc
les
clc
pop
subl
sub
es
inc
and
pushf
jmp
dec
lea
arpl
push
or
repz
sbb
dec
sub
lods
mov
lret
scas
sub
nop
inc
push
nop
in
das
or
aad
insl
dec
sti
es
adc
jg
adc
sub
lods
cwtl
std
lds
jne
push
je
sub
ja
jb
mov
lods
add
cltd
cwtl
sti
mov
ds
xor
jp,pt
rcll
push
sbb
inc
jbe
daa
jge
xchg
aas
cmpsb
adc
mov
aas
add
lods
loopne
dec
inc
pop
pminub
push
inc
repnz
fcoms
js
ss
cmpsb
lret
loopne
stos
pop
fwait
pop
jno
addr16
inc
into
add
test
push
negb
sbbl
xchg
notl
outsl
cmpsl
das
add
sbb
cmpsb
cmc
out
cmp
xlat
or
pop
or
and
lods
ds
jbe
in
jne
iret
sub
or
loopne
mov
sbb
adc
xchg
xchg
cltd
or
fdivr
cmpsl
std
jns
dec
mov
xor
push
xlat
jbe
clc
xchg
frstor
int3
cli
sub
or
ss
jp
dec
ret
sub
fnsave
lret
jmp
adc
sbb
adc
push
subl
push
xor
sbb
pop
lods
outsl
jns
movsl
jecxz
pavgw
imulb
ljmp
cmp
dec
jb
mov
mov
call
test
add
aaa
jns
jnp
fucomp
cmpsl
lock
xor
sub
rcll
xor
imulb
cmp
push
fistps
sbb
out
sti
jg
bound
push
arpl
pop
mov
mov
pop
rep
rorl
into
push
push
add
stos
daa
out
fcompl
aam
jbe
add
pop
push
imul
into
aam
pop
mull
std
mov
imul
or
jecxz
lea
or
cmp
mov
inc
add
adc
dec
cmpsl
xor
push
cmpsb
sbb
sbb
sarb
inc
and
adc
and
and
imul
and
jecxz
sub
adc
dec
cmpsb
fnstcw
das
mov
sti
fcmovb
pop
mov
mov
notb
out
cmc
fnstenv
test
adc
out
sub
xchg
cmp
cmpsb
lea
dec
add
mov
in
stc
aaa
repz
es
sbb
cmpsl
push
stc
mov
add
or
mov
dec
push
jo
lret
xchg
ret
xchg
mov
cmp
jnp
out
or
aaa
out
pop
fsubl
inc
leave
add
jbe
lahf
es
icebp
mov
addl
leave
mov
mov
pop
and
xchg
cmp
mov
ror
pop
push
xchg
mov
rcr
dec
leave
cmpsl
sbbl
mov
stos
loopne
adc
movsl
push
ljmp
sub
and
std
rcrl
cmp
addl
push
jo
shr
adc
daa
push
adc
xlat
push
popf
xor
lret
cmpsb
int3
mov
stc
jge
mov
es
or
dec
ljmp
or
dec
push
pop
add
lods
loop
movb
fisttpll
pusha
retw
dec
rolb
aad
xor
or
fwait
jmp
pushf
mov
rcl
insl
les
xor
daa
dec
mov
xor
adc
arpl
sti
pop
addb
mov
mov
data16
xchg
xchg
das
pop
js
cmp
loopne
jle
mov
xchg
pop
or
fimuls
adc
rorb
andl
insb
mov
ret
cwtl
or
scas
mov
pop
xor
test
cmpsb
dec
fwait
loop
jae
ret
cld
mov
lock
mov
rcrb
push
jns
push
push
jmp
mov
jnp
je
in
testl
mov
mov
pop
sbb
inc
jp
gs
hlt
inc
or
jecxz
mov
sbbl
out
pop
jno
cmpb
ds
ret
jbe
mov
lret
xor
mov
or
dec
pop
mov
jle
int
lahf
sbbl
dec
xchg
mov
rorb
dec
ficoml
push
mov
mov
push
inc
sbb
orl
sbb
nop
arpl
cli
int3
cwtl
mov
xchg
push
cmp
push
mov
popa
mov
inc
adc
je
sbb
push
or
and
mov
cli
or
insl
inc
shlb
call
mov
mov
cltd
test
xor
inc
cmpsl
sub
fs
ds
sub
pop
addr16
add
pop
in
ret
stos
mov
mov
jne
adc
call
xchg
mov
popf
js
call
inc
rcrl
into
ret
sbbb
test
outsl
or
mov
or
ljmp
xchg
jle
sbb
mov
aam
mov
ss
mov
and
mov
ret
dec
sub
shll
addw
jbe
inc
pop
sbb
dec
mov
push
icebp
es
mov
int3
pushf
fadds
pushf
add
or
fildl
fs
movsb
shll
icebp
or
pop
in
pushf
in
push
in
xchg
in
ret
mov
sbb
rcl
imul
mov
sbb
outsb
jmp
and
or
cmpsb
inc
or
or
cli
pop
into
sub
xchg
outsb
ss
es
aaa
insb
push
jmp
cmpsb
xor
fs
jbe
pusha
push
mov
leave
dec
stc
push
ficoml
and
nop
fwait
inc
push
mov
adc
jo
or
mov
sahf
jle
or
adc
insl
fldl
jecxz
inc
inc
xchg
into
data16
push
mov
shlb
xor
jmp
inc
jo
rorb
jp
scas
test
leave
xchg
mov
and
jne
xchg
pop
adc
es
cwtl
and
pushl
repnz
xchg
add
mov
or
cs
xor
mov
cli
mov
lahf
and
mov
movsl
push
popl
clc
push
inc
pop
pushf
xchg
andl
test
in
add
mov
sbb
test
sbb
jne
aas
push
stos
repz
arpl
jae
or
adc
sbb
insb
fistpll
in
xchg
pusha
das
shlb
in
inc
cmp
fsubrs
xchg
add
icebp
aad
dec
xor
inc
mov
or
cmpsl
out
jbe
mov
sbb
pushf
fs
ficoms
sub
mov
adc
fildll
into
dec
inc
mov
sbb
es
stos
stos
inc
add
in
dec
movsl
inc
in
in
xchg
aaa
js
nop
popf
addr16
in
into
and
add
add
push
xor
fs
mov
divl
push
inc
xor
data16
add
in
inc
sbb
xchg
cmpsl
xchg
sarb
test
push
push
stos
cmpsb
out
pop
or
fadd
out
mov
sti
add
cltd
popa
jl
int
test
in
mov
dec
or
mov
adc
cmc
pop
xorl
stos
push
mov
push
or
xchg
add
push
ret
xor
pusha
add
popa
xchg
stc
jmp
mov
stc
mov
inc
cmp
es
loope
sub
lcall
dec
fs
pop
shll
sarb
ret
mov
adc
iret
les
out
inc
xchg
jne
lahf
stos
in
btc
cmpsb
mov
inc
test
mov
sub
cmpsl
ret
sub
sbb
xor
mov
push
dec
mov
adc
fwait
loopne
jno
ret
adc
jo
or
mov
fisubrl
cmpsl
lods
cmp
cmp
es
movsl
jecxz
mov
addb
dec
cmpsb
nop
jns
insb
mov
roll
push
mov
and
nop
pop
sbb
in
insb
loop
mov
arpl
std
sbb
jecxz
xor
or
lahf
xchg
cmp
mov
shlb
jl
add
mov
popa
cmp
cmp
aad
pop
test
mov
out
jnp
out
mov
movsb
es
cmp
pop
cmovl
push
leave
lds
sbb
das
cmpsl
pop
pop
push
fcomip
jmp
cmp
into
add
inc
js
lods
cmp
jl
pop
in
push
pop
loope
fisttps
cmpsb
es
icebp
mov
lds
lahf
ja
in
jns
cwtl
inc
stc
pop
out
pusha
or
jb
push
jmp
das
jl
fiaddl
or
js
push
mov
jne
hlt
jle
pop
push
mov
dec
lcall
inc
movsb
jne
mulb
sarl
in
inc
lret
or
gs
cli
push
rcl
and
arpl
jmp
cmp
cltd
scas
adc
push
sbb
movsl
es
repz
mov
and
cld
xor
stos
or
icebp
fisubrl
lahf
pop
subb
jb
adc
adc
adc
jno
js
dec
dec
pop
pop
mov
or
nop
mov
cmpsb
aam
sbb
outsb
lret
jecxz
in
adc
sub
cs
push
mov
cmpsl
popf
xor
mov
cmpsb
xchg
xorb
cmp
mov
dec
stc
mov
sub
insb
loop
cmpsl
in
mov
bound
jge
int
push
pop
lret
inc
xchg
cmp
push
xor
sub
inc
cmpsb
hlt
data16
mov
scas
add
and
sub
cld
sbb
xchg
or
enter
push
pop
jp
push
js
cwtl
xor
int
or
pop
jecxz
cmpsb
das
mov
push
sub
ljmp
mov
shr
dec
push
out
shrl
mov
xor
adc
xor
inc
scas
xor
pop
mov
movsl
roll
imul
ret
push
push
lahf
ds
inc
lahf
adc
xor
sbb
adc
sub
test
inc
loopne
setl
jns
mov
aas
inc
mov
dec
stc
insl
loop
lods
jbe
andb
into
lds
mov
pop
dec
mov
adc
pop
pushf
xor
ret
daa
push
cmpsl
mov
lret
sbb
xchg
minps
out
xor
cmp
aad
lock
ljmp
insl
leave
call
mov
adc
ror
imul
push
sbb
test
mov
dec
icebp
cmp
lret
stos
add
sbb
xchg
imul
rcrl
jp
outsl
cmpsb
daa
jmp
inc
push
push
xchg
lods
loop
mov
jecxz
adc
pusha
add
lret
pop
pop
xor
inc
add
das
pop
cli
adc
jnp
inc
adcb
mov
push
jle
cli
es
pop
lret
out
cli
rclb
sbb
lea
mov
dec
xchg
loopne
ror
cmc
or
cmpsl
xchg
xlat
jmp
push
add
loopne
add
add
push
jle
leave
dec
out
call
clc
testb
cwtl
inc
ds
mov
aad
out
mov
pop
sbb
icebp
roll
in
loopne
mov
dec
mov
gs
pmaxub
xchg
xor
pop
frstor
andb
xchg
adc
fdivrs
cli
ret
insl
int3
jl
rcll
cmp
adc
xchg
jp
lock
mov
push
mov
dec
push
scas
mov
cli
jb
mov
add
push
lea
and
shlb
mov
dec
test
lds
fwait
cmp
xchg
mov
pop
adc
mov
lahf
nop
in
sarl
inc
jg
fstpt
aaa
rcrl
mov
adc
cmpsb
sarl
dec
mov
cs
test
push
sub
gs
and
jb
mov
xlat
add
daa
iret
ret
loop
outsl
push
and
inc
jnp
cmp
or
das
loop
add
mov
push
push
xchg
mov
pop
aas
insb
mov
bound
cmp
adcl
pop
adc
add
jle
jp
pushf
add
inc
mov
jae
sub
xor
mov
lahf
ror
test
pop
in
into
sahf
std
cli
lcall
or
adc
adcl
xchg
push
loope
push
les
mov
out
outsl
or
mov
add
rol
test
push
xchg
dec
xchg
clc
fadds
fistps
push
sub
jb
cmp
add
ret
in
dec
enter
mov
mov
cmp
lcall
adc
mov
out
xchg
adc
mov
or
adc
dec
shr
lods
data16
test
dec
mov
lock
or
jbe
jb
add
into
xor
fwait
cld
mov
pop
cmp
and
lahf
mov
lods
scas
in
sub
sahf
out
jle
dec
push
or
add
loop
xchg
adc
jg
lods
mov
push
push
mov
movsb
fwait
pop
pop
mov
inc
adc
je
mov
outsb
mov
rorl
ds
aam
or
mov
sub
fs
xor
mov
loopne
out
ds
cmc
sahf
arpl
jbe
xlat
mov
add
add
sahf
fcoml
mov
das
pop
int
cltd
rcr
and
adc
inc
and
mov
lods
movb
push
and
in
ret
xchg
add
ds
push
lds
jg
pop
cmpb
cmp
sarb
in
pop
and
scas
aad
xor
fidivrs
cmp
cmp
mov
push
fsub
in
xchg
sbb
adcl
and
inc
mov
jg
mov
rorl
xor
inc
fidivs
repz
dec
adc
pop
stos
iret
into
vpshad
and
fiadds
mov
dec
lret
in
ffreep
ds
push
pop
cmc
lea
push
in
inc
shlb
xchg
psubsb
sbbl
push
mov
mov
sub
shll
pop
lcall
xor
mov
add
into
adc
mov
push
cwtl
shrb
add
icebp
mov
out
shlb
inc
shll
cld
andl
pop
xchg
ror
sub
xchg
xor
fdivrs
or
adc
int
and
sahf
fsub
shrb
clc
sub
xor
push
outsl
xchg
mov
into
fstpl
rcrl
or
mov
imul
mov
mov
jb
xor
fcmovnbe
inc
jp
adc
mov
imul
mulb
push
cmp
xchg
adc
shll
xchg
pushf
inc
dec
mov
movsb
mov
in
push
sbb
xchg
mov
pop
aad
lock
jb
fnstsw
jecxz
xchg
cmpb
mov
cmpsb
pop
jle
movsb
dec
std
sbb
jne,pt
sub
stc
sbb
mov
cld
aas
ret
dec
add
loop
pop
mov
mov
loope
lods
outsb
and
and
bound
int
cmp
sub
or
and
std
jecxz
sbb
or
xchg
sarb
inc
int3
sub
mov
stos
add
sarb
mov
xchg
mov
and
int
out
and
pop
ss
insb
fmuls
xchg
mov
and
push
ljmp
nop
sub
mov
push
jnp
into
mov
insl
testb
cmp
mov
ret
mov
mov
jmp
pusha
ret
outsl
lea
in
into
mov
ds
mov
sbb
xlat
repnz
add
jle
xor
push
pushf
dec
ds
xchg
adc
scas
gs
shrl
rclb
lea
xchg
in
movsl
insl
int
rcrl
add
std
or
shl
sub
mov
test
mov
jmp
std
dec
pop
adc
pop
iret
cld
sub
mov
jb
ficomps
inc
xlat
fisttpll
mov
xchg
cmp
mov
stos
inc
mov
scas
lods
lea
xchg
cmpsb
xchg
test
es
add
mov
sbb
mov
into
inc
xor
lret
fdivr
mov
mov
faddl
cmp
dec
rol
mov
loop
fiadds
cmp
js
lahf
or
cmp
imul
pushf
cmp
imul
mov
insb
stos
pop
lock
sub
ds
daa
lcall
cmp
mov
out
repz
mov
lods
lahf
mov
psadbw
or
sar
cmp
sarb
je
lcall
test
or
mov
mov
cmp
mov
push
out
bts
sbb
push
pop
fstl
pop
mov
or
mov
ds
mov
out
sti
ffree
in
cmpsl
adc
mov
and
sbb
xchg
cmp
xor
loop
xchg
xchg
es
mov
jle
in
xchg
or
jmp
hlt
daa
xor
fdivp
fwait
or
inc
ret
push
pop
test
jb
xor
jno
sub
sbb
pop
fists
aam
shl
mov
sar
cmpsb
sub
cmpb
push
push
cmp
loop
jecxz
fadds
sarb
aad
xchg
sti
cmp
stos
xchg
stc
pop
push
cli
add
adc
shlb
enter
push
scas
pop
dec
in
sbb
xchg
mov
ds
push
pop
push
xor
cltd
push
movsl
jmp
mov
int
out
mov
in
sbb
inc
aaa
jbe
rol
and
leave
add
sbb
inc
cmp
push
mov
std
jno
sahf
aad
into
enter
lret
push
mov
or
push
and
jl
lcall
mov
and
cmpb
or
dec
jb
mov
sahf
shl
rorb
loop
dec
xchg
leave
jle
mov
push
int
or
cmpsl
xor
mov
stos
popa
mov
movsbl
cmpsl
fcompl
cmp
push
leave
pusha
ret
jae
dec
rolb
pop
mov
iret
pop
stos
lahf
mov
call
cmp
bound
push
in
out
loop
jecxz,pn
jbe
xorb
sub
mov
dec
cld
stos
mov
test
add
sbb
pushf
mov
dec
inc
jle
xchg
mov
mov
aam
sbb
cmpsb
mov
or
cmp
fstl
xchg
mov
add
push
jle
xchg
nop
dec
mov
cld
inc
cmp
cltd
lock
mov
mov
add
dec
inc
or
shll
loope,pt
int3
pop
enter
xchg
mov
cmp
pop
out
adc
cli
cmpsb
cmpb
lods
push
int
test
test
cmpsb
loop
rolb
xchg
aam
call
xlat
xor
mov
pop
pop
int
ret
movsb
in
fsubp
mov
fcomp
jbe
ret
andl
inc
loop
mov
imul
js
xor
insl
mov
push
inc
ret
lahf
lcall
orl
out
outsb
cltd
mov
rcr
shll
sbb
mov
or
xchg
adc
out
push
mov
cwtl
ds
jle
lds
mov
popa
stos
and
jp
and
outsb
pop
mov
mov
shlb
cmpsb
push
mov
cmc
mov
dec
jo
imul
es
or
push
pop
in
bndstx
hlt
push
hlt
mov
shll
fldpi
shl
push
test
sbbb
pop
mov
or
inc
jmp
aad
mov
mov
xchg
mov
cmp
movsb
lds
rolb
es
lods
inc
mov
inc
stos
dec
lds
xor
rol
mov
movsb
inc
xchg
jbe
mov
aad
subl
insb
aaa
rcl
cltd
fists
cmp
out
stos
lret
dec
rcr
mov
sbb
push
movb
into
xchg
rolb
test
fucomp
in
xor
xor
cmp
addr16
and
push
mov
xchg
push
dec
add
pop
cmpsl
insb
add
ds
mov
jno
mov
push
xchg
mov
jg
out
jae
rclb
inc
jne
in
pop
mov
mov
adc
dec
mov
jp
hlt
cmc
flds
mov
jl
add
shlb
mov
jb
outsl
pop
int3
mov
adcl
sbb
lea
mov
fimull
shrb
int
jnp
ds
adc
cmpsl
or
loop
xchg
cmp
mov
add
pop
ret
mov
xchg
push
es
daa
fcmovne
push
dec
pop
lret
aam
aaa
jbe
mov
mov
mov
and
lods
cmp
sub
mov
push
ja
sarb
or
sbb
pushf
mov
test
push
mov
imul
jmp
xchg
cmpsl
jl
jns
leave
clc
jge
gs
mov
sahf
insb
icebp
mov
add
jecxz
mov
mov
aas
sbb
mov
adc
xor
and
out
dec
rcrb
sub
mov
add
inc
out
mov
ja
push
push
cmpl
lods
pop
dec
mov
jmp
data16
inc
mov
push
loop
mov
outsb
pop
popa
adc
inc
std
sbb
incl
jb
ss
dec
into
lds
lret
pop
jecxz
jg
shrb
cmp
cmp
cmpsb
jmp
into
les
int3
out
push
jb
jp
jle
orb
lea
lea
lea
or
dec
lret
int
or
out
ljmp
lea
lea
lea
lea
lea
lea
mov
dec
inc
lea
lea
lea
lea
lea
lea
lea
lea
lea
inc
lea
dec
lea
push
lea
pop
lea
lea
outsb
lea
jbe
jp
jle
orb
lea
lea
lea
lea
icebp
ret
dec
lret
int
or
fimuls
ljmp
cli
decb
or
push
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
inc
lea
dec
lea
push
lea
pop
lea
lea
outsb
lea
xchg
lcall
lea
lcall
lret
int
or
mov
mov
mov
mov
mov
mov
mov
ss
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lahf
shlb
fidivs
ljmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rclb
ljmp
mov
mov
mov
xor
xorb
lcall
xor
xor
xor
ss
dec
cmp
cmp
cmp
cmp
cmp
cmp
sahf
stc
xor
xor
xor
cmp
jp
cmpb
xchg
cmp
cmp
cmp
cmp
cmp
fcmovb
cli
lret
fcmovnu
pop
loop
ljmp
or
cmp
cmp
cmp
cmp
inc
cld
dec
pop
push
data16
xchg
mov
pop
sahf
pop
cmpsb
pop
mov
mov
ret
in
add
out
out
test
movsl
push
movsl
push
movsl
push
movsl
and
movsl
xor
movsl
inc
movsl
inc
movsl
dec
movsl
dec
movsl
push
movsl
push
movsl
pop
movsl
pop
movsl
outsb
movsl
jb
jbe
jp
jle
andb
movsl
xchg
movsl
lcall
movsl
stos
movsl
scas
movsl
mov
int3
mov
mov
out
lret
stc
in
clc
sti
cs
xabort
stc
cmp
mov
push
mov
mov
mov
mov
mov
mov
mov
daa
lcall
or
bound
or
jb
icebp
outsb
mov
insb
std
jle
cmp
dec
cmp
sbb
xor
mov
repnz
hlt
xchg
in
xlat
clc
push
mov
repnz
push
pop
cld
pop
es
push
mov
mov
push
lods
outsb
mov
loop
scas
push
xchg
pop
nop
into
xchg
fsubp
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
fidivs
mov
pop
fcmovu
fistps
cld
divl
xor
xor
cmp
cmp
add
push
pop
push
fistpl
pop
fsubrl
push
push
or
lea
jnp
sahf
in
stos
movsl
mov
ret
xchg
repnz
cli
lahf
pop
cmpsl
adc
ds
dec
std
push
std
pop
in
int3
and
aas
cli
movb
lahf
icebp
ret
std
and
daa
std
outsb
std
jb
jp
xchg
xchg
std
xchg
std
mov
clc
sar
fdivrp
jecxz
xchg
cld
cmpsb
std
stos
std
scas
or
imull
push
fsubrp
and
int
xchg
fs
push
mov
call
divl
repnz
ret
mov
add
negl
pop
xor
pop
dec
pop
dec
pop
outsb
pop
jb
jp
xchg
pop
xchg
push
mov
cs
lret
clc
stc
test
movsl
sbb
inc
mov
movsl
push
movsl
bound
jbe
jle
mov
es
mov
daa
mov
lahf
inc
icebp
mov
les
jp
xchg
mov
mov
popl
data16
jle
cmpsb
xchg
cli
xchg
aam
cmp
or
movsb
lea
xchg
lea
pop
lea
mov
scas
cmp
cmp
push
sahf
into
pop
rcr
push
fidivl
std
push
std
adc
push
std
sbb
push
std
and
es
sub
cs
xor
ss
cmp
ds
gs
cmp
int3
aad
icebp
or
dec
push
lea
jae
jp
jg
in
mov
sub
cmpsl
ja
inc
cs
leave
filds
out
ljmp
lock
shlb
pop
aad
repz
cmp
out
jbe
mov
push
scas
cs
mov
jo
clc
std
bound
mov
dec
mov
out
add
cmp
mov
cmp
cli
xor
aas
int3
sbb
lahf
sbb
pop
dec
pop
lea
int
or
push
mov
insb
add
pop
xchg
insl
pusha
mov
lcall
das
icebp
xchg
loop
xchg
test
xchg
repz
div
dec
mov
scas
loop
xor
xor
dec
xor
or
mov
stc
or
int3
in
cli
or
popf
inc
call
popa
mov
dec
sar
xlat
mov
movb
data16
jmp
and
cmp
push
cmp
cmp
cmp
cmp
cmp
fcmovu
lock
jp
rol
icebp
aaa
push
dec
sarl
repz
add
mov
movl
cld
and
jns
xchg
std
mov
clc
inc
stc
jle
mov
jmp
mov
add
mov
sar
mov
call
ret
jl
ljmp
movsl
or
loop
pushf
pop
bound
fldl
lods
lea
mov
in
add
add
mov
adcb
adc
push
push
xchg
pop
int
adc
stos
cwtl
scas
mov
mov
cmp
mov
out
mov
shl
fistps
daa
lds
xchg
jo
xchg
vpsubb
in
add
sar
add
inc
test
push
and
xor
xor
ss
adc
ficoms
pop
or
ds
mov
cmc
in
push
in
pop
lods
inc
fdivr
fucom
repnz
incl
cmp
mov
loopne
fisubrs
adc
imul
cmp
push
stc
jne
out
ja
sbb
fsts
adc
adc
lcall
enter
push
cmpsb
outsb
stos
shl
push
clc
jae
test
ficompl
pop
fildl
arpl
lahf
or
fisttpl
dec
xor
cli
sti
jg
push
pop
fisubl
das
cmpsl
xchg
sub
leave
cs
test
ljmp
icebp
fsubs
out
adc
cmp
dec
es
ficoml
xchg
push
cmpsb
rorl
cld
icebp
adc
out
pop
push
lock
add
icebp
sbb
xor
jno
jle
repnz
aas
negb
jp
dec
arpl
sbbl
loop
cmpsb
out
pop
repnz
hlt
pop
mov
clc
aad
sbb
inc
std
cli
jo
push
rolb
xchg
out
shlb
testb
xchg
lcall
or
out
sbb
mov
pushf
rorb
cli
repz
lcall
sub
into
nop
inc
xor
popa
js
mov
cmpsb
cmp
push
push
subb
leave
out
hlt
add
icebp
int
jl
testb
int3
fdivp
popf
or
pop
jle,pn
inc
stc
xor
push
ljmp
scas
mov
clc
idivb
outsl
lods
mov
idiv
mov
enter
pop
cld
imul
push
add
push
out
imul
shl
dec
or
repz
dec
sbb
pusha
mov
push
imull
inc
int3
clc
adc
movsl
cli
and
aaa
add
lock
push
xchg
scas
add
ds
cmp
pop
push
xchg
pusha
inc
mov
stos
fisubl
lock
lds
shl
add
sbb
ds
xchg
cwtl
lahf
cmpsb
orb
xchg
xor
fs
sub
dec
or
gs
adc
arpl
and
ds
data16
out
sbb
out
repnz
adc
js
mov
mov
push
shl
adc
shll
adc
pop
jno
pushf
mov
int3
daa
sti
jg
idiv
add
popa
jl
xchg
inc
pusha
pop
and
loopne
lock
int3
and
xchg
add
pop
jl
mov
and
pop
inc
or
clc
sub
stc
iret
ret
add
adc
int3
fadds
or
inc
sub
mov
inc
outsb
dec
ret
dec
out
pop
xchg
int3
pop
push
cltd
pop
fyl2x
stc
mov
inc
repnz
mov
push
cwtl
cmp
sbb
cmp
dec
xor
pop
test
or
cld
mov
std
test
mov
push
loope
int3
out
cmp
inc
movb
mov
inc
arpl
andl
add
jl
sbb
push
fldl
call
inc
push
sub
push
dec
jmp
loopne
mov
xchg
cli
mov
ds
repnz
mov
add
push
sbb
imull
inc
in
push
in
xor
xchg
xor
pop
xor
loop
pop
or
out
dec
inc
push
lock
icebp
jl
lods
pop
jbe
jmp
hlt
movsl
cmc
sub
inc
adc
out
clc
xor
sbbl
js
ja
rcll
push
push
mov
pop
scas
push
dec
in
out
mov
pushf
push
gs
loopne
mov
int3
push
mov
in
add
mov
xor
sar
pop
xchg
nop
add
jne
loope
aaa
mov
pop
rorb
fldz
or
stos
fsubr
sub
xor
jle
hlt
repz
mov
mov
mov
xchg
or
push
cli
xor
fimull
je
inc
push
into
rolb
clc
out
dec
xchg
jno
or
js
fcmove
icebp
jmp
cld
pmuludq
divl
pop
ror
clc
dec
jle
lret
stc
inc
push
rcr
lcall
cld
inc
jecxz
pop
mov
cmpsl
inc
faddp
push
out
daa
xchg
out
aas
lods
mov
in
imul
subb
leave
cmc
push
adc
neg
shl
in
pop
cmp
stc
adc
sti
jne
roll
popa
mov
mov
iret
push
ljmp
pop
add
adcb
enter
cs
mov
fxtract
sub
xor
int3
call
sar
popf
push
call
xor
lds
in
incb
shlb
or
mov
xchg
bound
lock
iret
icebp
clc
lahf
cld
nop
xchg
add
xor
xor
jbe
mov
int3
div
in
int3
out
xchg
or
ret
and
push
orb
xor
std
adc
jb
push
push
jg
out
jo
mov
ljmp
faddl
fs
or
jge
mov
or
cwtl
popa
cmc
xor
stc
cmpsl
and
pop
pop
sarl
push
lcall
std
daa
push
push
out
xchg
shl
xor
leave
pop
loope
inc
or
dec
fldcw
pop
filds
cmc
daa
xchg
notb
xchg
mov
inc
xchg
mov
xor
push
add
jae
cld
xor
repnz
jge
loop
cs
jg
out
xchg
xchg
out
sbb
leave
nop
int3
lahf
cmpsb
cmpsl
xchg
lahf
repz
mov
call
push
mov
or
psubusb
sti
scas
push
xor
int3
mov
cld
arpl
pusha
or
filds
std
ret
out
shll
mov
sbb
jge
cltd
cmpsb
stc
in
adc
enter
cmc
cmp
mov
xorl
stc
sub
fidivs
int3
sti
fdivrp
sbb
xchg
jg
adc
add
leave
out
out
mov
shl
sub
je
daa
lock
mov
xchg
xor
xor
mov
inc
shl
pop
jecxz
push
mov
fcoms
int3
sti
dec
cld
xchg
cmp
fwait
rcrb
into
out
test
out
mov
div
or
sbb
mov
hlt
sub
stos
cld
div
adc
ret
mul
or
jo,pt
cmp
mov
clc
inc
stc
outsl
cli
or
sti
and
pusha
inc
scas
rclb
test
int3
rolb
sarl
out
imul
nop
mov
and
lds
repz
cs
adc
ja
scas
int3
push
divb
addl
push
popl
jo
mov
add
cld
sbb
push
ret
inc
out
into
push
sarl
out
inc
dec
cmc
out
pop
mov
test
popa
int3
lock
sbb
repz
leave
hlt
ss
xchg
sahf
hlt
test
notl
mov
clc
fdivs
xor
pop
aam
sbb
add
lret
int
cmp
xlat
adc
into
out
push
mov
lock
lahf
dec
movsl
xchg
idivl
cmp
dec
push
push
push
rep
mov
scas
cs
test
inc
or
jnp
jle
cld
sti
xor
out
inc
push
inc
rcrl
cmp
xor
push
lock
inc
add
xchg
push
pop
sub
fistpl
in
inc
hlt
inc
cmp
dec
mov
int3
xor
outsl
add
and
aam
jmp
out
or
ds
icebp
jne
mov
push
ret
test
mov
ss
pop
idivl
dec
stc
leave
jl
aam
jle
aam
daa
mov
roll
mov
xadd
xadd
push
inc
clc
push
add
mov
movsbw
push
shl
push
movsbw
bswap
test
pushf
mov
or
inc
lea
stc
mov
bt
sbb
mov
sbb
sub
lea
not
pusha
lods
sub
pusha
sub
neg
shl
inc
neg
shr
add
and
sar
add
clc
neg
clc
dec
bt
add
push
push
pushl
stos
call
lea
je
ja
push
pushf
jmp
insl
aaa
ds
das
push
jne
clc
arpl
out
jmp
mov
nop
imul
sqrtps
mov
loop
cmpsl
into
negb
fs
stos
cmp
jbe
lret
pop
mov
insl
push
push
mov
pushl
aaa
movsl
lret
loop
andl
sbb
xchg
jl
inc
and
call
jns
add
loopne
push
pop
mov
int
out
es
dec
lock
test
cmp
push
sub
in
or
shll
pop
cld
sbb
add
enter
arpl
mov
leave
scas
in
scas
icebp
mov
mov
pusha
cmp
jmp
mov
cltd
fwait
das
sbb
flds
jns
shlb
cld
movsb
mov
dec
xor
mov
test
faddl
and
loopne
jb
in
adc
lods
fisttpl
cltd
jg
mov
ja
push
inc
pop
xchg
clc
jp
jp
cmpsl
ljmp
and
loopne
test
mov
sarl
mov
leave
mov
xor
jno
xor
ss
mov
in
sub
imul
les
mov
jnp
shll
or
mov
add
stos
dec
scas
out
in
adc
shrl
hlt
cwtl
bound
test
push
aaa
add
push
inc
in
stos
dec
xor
dec
push
mov
les
mov
cld
and
push
shrb
fidivrl
push
pushf
pop
pop
fidivrs
fstl
dec
jmp
movsl
fwait
sahf
sti
mov
sub
stos
scas
push
jl
xor
or
or
fistpl
jmp
fistl
xchg
dec
fistps
sub
sbbl
sbb
adc
adc
std
cwtl
cltd
pop
stc
mov
imul
and
or
pop
fcompl
jae
inc
cmp
js
mov
push
jmp
xor
jl
cmpsb
enter
push
xor
or
idivb
rol
gs
jb
popa
xchg
lea
scas
sub
push
into
scas
popf
push
jne
loop
iret
pop
cli
ret
push
or
adc
pop
ret
jmp
mov
lcall
imul
mov
std
and
in
xchg
cmp
jge
inc
in
push
mov
xor
mov
cmp
mov
jecxz
jmp
scas
nop
clc
jp
inc
xor
xor
mov
pop
pushl
sub
jmp
ret
aaa
mov
rcl
xchg
xchg
fiaddl
scas
pop
iret
repz
xor
cld
icebp
fisttps
pop
shll
cmp
jg
dec
outsl
xchg
cmp
sbb
into
jnp
std
aad
mov
enter
test
mov
mov
cmc
jae
scas
push
cwtl
aas
sub
loope
test
ret
movsl
test
lahf
add
int3
mov
sub
lods
sub
hlt
aad
mov
subb
addb
lods
xchg
xchg
adc
or
mov
aad
pushf
ret
addr16
outsl
jmp
clc
push
jg
pop
pop
cli
xchg
repz
mov
bound
cltd
mov
clc
jp
loopne
rorb
cli
mov
push
jno
mov
test
sbb
repnz
aaa
mov
mov
xor
ljmp
inc
push
or
pop
jg
add
cltd
mov
cmp
mov
mov
std
hlt
dec
test
out
push
mov
test
js
loope
stos
xchg
pop
adc
pop
bound
inc
add
xor
push
mov
jo
jbe
push
lcall
mov
adc
pop
xor
adc
or
xor
dec
xchg
xor
in
cmp
aaa
fstpt
mov
mov
cli
loope
std
jb
dec
or
dec
jo
xchg
pop
lahf
inc
in
fimuls
jp
mov
out
scas
mov
mov
push
std
mov
pusha
push
mov
mov
or
push
clc
pop
cmp
jne
fcmovnb
movsl
pop
add
insb
xchg
jle
dec
add
lods
mov
int3
stc
std
out
mov
gs
cltd
scas
push
add
int
jmp
movsb
lds
xor
dec
sbb
sub
lea
mov
pop
add
daa
dec
mov
cwtl
flds
cli
leave
inc
stc
add
mov
sub
push
shrl
sbb
lds
pusha
sub
jne
cmp
adc
cmp
adc
xchg
jp
inc
test
mov
out
scas
sar
add
adc
xlat
fsubr
mov
add
lea
call
jmp
mov
xor
adc
imul
sub
dec
ret
ja
push
push
jl
inc
in
xor
imul
xchg
cli
ffreep
lods
adc
out
and
lret
cmp
lea
jne
shr
stc
sub
shld
mov
test
clc
add
test
push
stc
movzwl
movzbl
mov
push
pushl
add
pushf
pushf
bt
test
mov
jmp
pushf
mov
pushf
movl
pusha
lea
jmp
add
dec
outsl
arpl
inc
jb
gs
loop
mov
pusha
andl
add
lahf
arpl
fldenv
sub
mov
dec
push
stos
mov
add
mov
stos
fistps
es
movsl
in
movsb
stc
pop
pop
into
sbb
xor
movsl
adc
in
mov
pop
xchg
loop
cmp
sbb
push
mov
andb
das
adc
pop
push
dec
or
inc
inc
cmc
mov
je
mov
imul
jnp
cmc
mov
xchg
cmpsl
fisttpl
leave
lock
cmp
or
cltd
sbb
or
or
out
cli
cld
cld
adc
pop
sub
pop
pop
jle
push
jbe
jecxz
adc
or
jmp
subb
push
dec
mov
inc
mov
mov
pop
xor
and
add
sarb
in
add
cmp
xchg
cmc
call
pop
sub
cli
jl
cmpsl
lock
dec
jne
andl
shlb
xor
jne
jp
insl
adc
pop
aad
nop
popf
ret
push
mov
cmpsb
je
fbstp
jmp
loop
stos
cmpsb
sbb
cmpsb
cltd
pop
cwtl
mov
push
adc
xor
cwtl
push
aam
enter
push
clc
mov
mov
enter
dec
jo
mov
lea
shr
push
lgs
mov
jle
shll
cli
in
jmp
xor
cmp
or
mov
sti
sahf
inc
jmp
xor
mov
pcmpeqb
xchg
mov
push
xor
lcall
pop
sbb
jecxz
pop
push
mov
xchg
sti
sbb
pop
and
jae
lods
mov
jl
test
icebp
xchg
inc
mov
add
jo
mov
push
loopne
lods
sbb
popf
inc
xor
sbb
sbb
and
into
inc
out
ret
jmp
jns
and
lock
pushl
jmp
mov
scas
mov
xor
hlt
adc
leave
outsl
adc
imul
imul
shrb
mov
push
mov
xchg
adc
ds
addb
in
cs
cmp
test
jecxz
cmp
xor
pushf
cmp
stc
pusha
add
clc
stc
bt
push
xor
test
call
xchg
pusha
mov
call
lea
je
dec
add
shr
cmc
sub
and
sub
xadd
shr
clc
pushf
inc
mov
shld
xor
bswap
bsr
add
sub
sub
pusha
add
add
seta
pushf
rcr
or
mov
lea
je
push
shr
mov
pushl
cmp
call
mov
ljmp
loopne
loop
jnp
push
and
rol
sarb
adc
or
pop
movsb
bound
nop
cmpl
sub
ja
ds
add
pusha
subl
add
adc
mov
mov
push
inc
jmp
sub
mov
adc
loopne
cmpsb
dec
inc
in
mov
inc
call
xor
andb
shlb
adc
out
inc
jmp
jmp
lds
xor
cmpsb
pop
sub
jmp
sbb
pop
inc
stos
int
pop
test
cmp
and
lea
or
movb
pushf
push
jns
inc
mov
inc
inc
in
aad
loop
jns
mov
xor
dec
out
adc
call
cmp
and
push
jle
int3
pushw
rol
mov
push
jl
ret
jbe
pop
repz
js
shl
jb
rorb
icebp
fnstcw
mull
mov
call
xchg
dec
jb
jge
and
repz
pandn
aam
movsb
pop
xor
or
jle
xchg
xor
cltd
push
push
inc
fs
jg
loope
push
pop
or
pop
enter
sub
pop
adc
adc
adc
pop
pop
cmpb
std
jnp
shll
iret
mov
add
xor
jge
cs
pop
xchg
addr16
adc
add
inc
or
mov
xor
push
jns
ret
mov
mov
push
jnp
jns
or
iret
xchg
or
das
add
lret
jb
xchg
xor
cli
fwait
add
inc
imul
cmc
fstps
inc
in
iret
cltd
xor
adc
je
movsl
lea
push
mov
add
leave
pop
imul
fcmovb
add
jo
dec
stc
jmp
dec
jg
mov
xor
lret
insb
adc
insl
adc
popa
fistpl
mov
int
test
repnz
cmpsl
pop
dec
imul
push
test
lcall
xchg
or
fmul
out
sub
pop
orb
lahf
addr16
pop
scas
or
lret
out
inc
scas
mov
test
push
inc
rorl
push
jns
jecxz
xor
cld
pop
mov
inc
inc
pop
stc
push
adc
xchg
lcall
xor
sbb
addr16
mov
std
and
js
sub
fisubs
xchg
pop
in
mov
pop
les
sub
idivb
cli
in
xor
divl
sbb
lods
lea
jb
mov
xor
jmp
out
cmp
pusha
pushf
test
pushl
pushf
mov
movb
lea
je
bt
push
stc
add
test
clc
pusha
cmp
call
inc
js
mov
xor
xor
std
flds
or
and
cli
test
push
inc
pop
push
outsb
int3
sub
shr
xchg
mov
std
mov
inc
jp
ret
hlt
add
sub
jne
cmp
sub
push
or
test
dec
xor
int3
insl
je
mov
inc
in
sarl
push
pop
mov
xor
adc
push
imul
cli
test
and
int3
pop
lods
insl
adc
faddl
xchg
pop
pop
stos
dec
das
in
jl
jmp
mov
inc
jmp
scas
aas
leave
in
xlat
cli
pop
add
mov
sbb
sbb
mov
pusha
lret
pop
push
jne
pop
sbb
add
je
andl
negb
cld
movsb
or
call
jns
sbb
lods
xchg
dec
cmp
jnp
pop
mov
js
mov
lret
stos
mov
pop
push
add
shr
sub
iret
push
and
mov
jmp
sub
and
jbe
inc
out
mov
jne
cmp
lods
sub
ja
mov
jno
sar
mov
dec
popf
or
sbb
cld
push
mov
sub
addr16
or
pop
inc
fwait
cmc
sbb
nop
leave
add
daa
orl
pop
adc
pop
ja
rcrb
cmp
jbe
rcl
std
and
jo
shlb
sahf
and
xor
add
daa
cmp
test
xor
test
lods
std
jmp
movb
movsbw
pushf
pushf
call
pushl
push
lea
call
pusha
push
lea
jb
pushf
pushl
ret
lea
je
pusha
test
cmp
call
rep
movzbw
jmp
enter
mov
mov
cmpl
xor
inc
ret
ja
aad
scas
shl
sbb
jp
inc
imul
xor
ret
movsb
pop
std
outsb
xchg
insl
fmuls
adc
scas
mov
cmp
jle
cmp
push
cmp
aad
xchg
jp
xchg
sarb
xchg
mov
call
pop
shl
mov
sbb
and
imulb
into
xor
jmp
movsl
or
dec
xor
cli
xchg
adc
inc
sub
pusha
mov
call
scas
mov
hlt
sbb
out
and
mov
js
mov
mov
mov
mov
mov
mov
sbb
ss
pop
ret
cmp
andl
dec
mov
mov
imul
xchg
jecxz
pop
shll
sbb
mov
xorb
fcoml
ljmp
das
pop
mov
aam
sub
jl
xchg
clc
jmp
pop
ljmp
test
int
sbb
loope
sub
jb
mov
lret
repz
cmp
ret
add
dec
clc
neg
movb
clc
mov
call
in
mov
mov
xor
sti
mov
adc
xor
addl
lret
repz
mov
jo
xor
add
scas
hlt
pop
xor
in
rorb
xor
mov
cmp
push
mov
lods
dec
out
loop
jg
shrl
sahf
sbb
neg
sbb
push
dec
daa
xchg
dec
imul
dec
addr16
jmp
push
pushf
or
std
gs
sbb
cs
js
jnp
sahf
outsb
mov
or
loop
pushf
xchg
dec
outsl
cmpsl
sub
or
or
sbb
or
jge
fldl
add
mov
and
pushf
pop
jle
mov
stos
rorb
inc
inc
inc
in
sar
jbe
dec
push
scas
mov
lock
fiadds
mov
or
pushf
aaa
pop
and
outsl
adc
mov
jo
mov
push
jb
mov
cmp
insl
pop
testl
xchg
popf
jg
pop
int
sbb
add
push
jb
lcall
push
vsqrtps
mov
mov
cmp
es
out
lods
mov
pop
jnp
je
dec
out
shlb
shl
jmp
ds
call
cmp
sbb
mov
popa
sbb
add
cs
dec
push
or
and
cmp
addr16
mov
icebp
pop
jle
jp
in
jge
push
xchg
mov
inc
ret
sahf
aas
negl
ret
out
push
cmp
xchg
jge
inc
mov
fwait
ljmp
scas
push
pusha
lea
jne
cwtl
push
bswap
movb
movzbw
mov
movzbw
not
lea
pushf
movb
push
lea
jmp
jle
js
mov
xchg
mov
stc
popf
ret
in
xor
jg
dec
mov
mov
mov
dec
pop
mov
dec
iret
jns
fcoms
imul
ds
xchg
dec
pop
add
cld
sbb
imul
jecxz
mov
popa
enter
nop
dec
inc
adc
jbe
or
jnp
inc
sub
insl
push
mov
jnp
in
ljmp
add
push
mov
jmp
lock
jno
inc
bound
mov
push
stos
dec
loope
cmpsb
subl
nop
xor
cmp
enter
xchg
cmp
mov
mov
xchg
cmp
cmpsb
mov
int3
xor
je
jg
ja
xchg
outsb
jne
mov
or
push
jl
inc
out
mov
std
ficoms
lret
jb
outsl
or
pop
dec
sbb
mov
pusha
js
in
xchg
cmp
mov
fsubrl
dec
cmp
int3
jae
push
xchg
scas
loop
mov
fiadds
fwait
notb
mov
ret
sub
pop
enter
test
stos
mov
test
dec
xor
lods
out
push
mov
popa
pop
ja
and
jecxz
lods
mov
add
fdivrl
inc
std
movsl
cwtl
pop
stos
mov
xor
nop
out
and
adc
pop
add
fwait
jge
sub
lods
hlt
pop
iret
fdivrl
lcall
adc
and
ja
cmp
adc
sub
stos
arpl
xchg
test
mov
dec
or
and
jno
jno
aas
negl
xchg
pop
daa
aaa
pop
mov
mov
cmp
cltd
push
cmpsl
cmp
gs
loop
push
mov
push
notb
cmp
call
mov
xor
pusha
inc
ja
out
mov
aas
and
cld
fiadds
repnz
pop
add
dec
and
mov
sbb
iret
lea
pushf
pop
lea
lea
call
jmp
stc
cmp
pusha
lea
jae
pushf
add
mov
call
cmc
call
adc
and
or
cmpb
test
lock
and
cmpsb
insb
rolb
sub
loope
icebp
jmp
arpl
sbb
andb
and
pop
adc
addb
push
nop
xchg
fs
bound
and
and
rolb
sub
inc
sti
cmc
mov
lock
jmp
jnp
lea
ja
andb
and
jecxz
nop
add
adc
add
jb
addr16
cmpb
or
xchg
push
add
imul
ficomps
arpl
fisubrs
sub
and
pop
sbb
and
addl
sub
and
sub
addb
inc
push
push
inc
test
and
inc
mov
inc
rolb
ss
cmpb
or
add
push
addb
dec
and
call
addb
jmp
adc
pop
lock
xchg
and
jae
sbb
andb
and
jnp
sub
push
mov
cmp
xchg
inc
loope
rolb
pop
xchg
dec
addb
sub
jnp
and
test
add
lret
nop
cmpsb
fwait
xor
test
push
ret
insb
fs
rorl
push
dec
inc
nop
add
gs
gs
shrl
and
movb
and
mov
mov
inc
test
test
fdivs
andb
and
xchg
mov
adc
mov
inc
or
in
dec
mov
cmp
and
lds
rolb
aad
xchg
mov
or
lea
ja
bt
adc
shr
sub
pushf
dec
add
add
sbb
stc
setb
stc
mov
clc
mov
pusha
clc
pushl
test
repnz
movw
call
pusha
lea
jne
pushf
pushf
setnp
not
pushfw
popw
mov
stc
mov
mov
pushf
bt
sub
jmp
mov
call
jmp
jge
ja
mov
aaa
fiadds
pop
add
daa
or
xor
lods
pop
dec
loopne
lahf
out
sbb
lret
cmc
push
shlb
out
xchg
mov
inc
add
adcb
mov
mov
sbb
cmp
xchg
inc
adc
mov
lds
inc
call
adc
loopne
js
push
mov
cmp
mov
hlt
push
cmp
push
aad
pop
cmp
test
xor
lods
aam
ljmp
push
xchg
adc
leave
sbb
decb
xchg
mov
and
outsl
jp
lahf
mov
fbstp
mov
jmp
cmpl
cld
out
daa
sub
arpl
out
pop
iret
icebp
and
loop
daa
or
daa
filds
shrl
add
enter
icebp
mov
jno
push
sbb
cmpl
js
xchg
xor
rcrl
xor
aas
sub
mov
push
cmp
inc
xor
mov
or
jb
dec
sbb
pop
ret
cmp
jle
int
adc
pop
inc
mov
xchg
jg
xchg
mov
shll
leave
call
test
mov
imul
mov
lods
inc
cmp
dec
mov
sti
push
ljmp
mov
jmp
stos
jne
xchg
out
or
mov
scas
aad
mov
arpl
dec
call
orb
loop
lods
mov
xor
and
pop
dec
sub
movsb
movsl
dec
jno
mov
push
jmp
cli
sbb
fsubl
push
lds
sbb
cs
ss
std
sbb
inc
or
mov
leave
lret
add
lahf
cmp
imul
div
mov
rorb
jecxz
iret
jge
push
jbe
xchg
aam
stc
pusha
inc
test
pop
mov
jns
movsb
loopne
pusha
mov
into
loopne
cli
and
dec
cmpsb
je
sub
jae
push
jbe
xchg
sub
push
cmc
jp
ficoml
dec
mov
cmc
or
sbb
jl,pn
lret
mov
fiadds
int3
mov
in
mov
out
out
jle
push
rdpmc
pop
cmp
dec
mov
cld
popa
leave
sub
sbb
jb
mov
add
lea
jne
mov
movzbw
bswap
mov
pusha
lea
jmp
call
sahf
insw
cmpsb
mov
cs
jge
inc
bound
cs
hlt
pop
loopne
sahf
ljmp
xchg
ss
and
mov
inc
mov
cld
xor
fwait
lahf
ret
xchg
daa
aas
dec
xor
jmp
jo
pop
shlb
add
sbb
lods
jl
adc
lods
push
out
mov
inc
sbb
loope
cmpsl
les
lret
outsb
es
out
aad
and
imul
sbb
cmp
ss
stc
repnz
push
lea
jne
call
add
pushf
mov
call
call
imul
call
cltd
ds
sub
push
cmp
xchg
xor
and
push
push
pop
jmp
mov
pop
add
cmp
jns
stc
ja
mov
stc
pop
mov
dec
lock
inc
dec
xlat
and
adc
fscale
flds
in
bound
data16
push
jmp
repnz
mov
aam
sbb
inc
les
push
lds
xor
jae
clc
test
push
cmp
pushl
lea
jae
pushf
movb
movb
clc
cmp
movl
mov
jmp
xor
test
cmp
mov
not
pushl
lea
movzbw
seta
not
sets
mov
call
add
shlb
insl
xchg
mov
in
push
mov
cmp
pusha
jle
xchg
mov
push
negb
leave
xchg
popf
add
cltd
mov
lods
lds
test
lcall
call
lret
stos
push
adc
movsl
out
cmp
cltd
arpl
lret
dec
cmp
push
lret
rorl
mov
xorl
stc
sbb
pop
ret
jno
mov
mov
dec
push
jb
pop
out
rcl
hlt
out
movsb
mov
mov
or
add
fnstsw
add
cmc
scas
mov
out
xchg
dec
jno
mov
add
mov
movsl
hlt
pop
sub
rep
ss
adc
push
out
stos
lret
mov
popa
lods
js
gs
daa
pushf
cmp
mov
and
mov
insl
xor
stc
mov
sbb
nop
or
dec
jne
push
sub
jl
mov
stc
stos
data16
push
jge
les
dec
add
dec
xor
sti
pop
les
and
div
test
inc
sub
pushl
mov
clc
pushl
push
test
pushf
jmp
call
stc
cmp
movw
lea
ja
jmp
pop
adc
mov
or
inc
in
push
jge
mov
and
xor
popa
sbb
subl
push
and
add
mov
add
mov
mov
filds
call
iret
adc
mov
jbe
addr16
push
mov
ljmp
test
les
shll
add
iret
adc
jecxz
sub
hlt
adc
dec
add
push
mov
lods
or
fimuls
fdivrs
stc
pop
xchg
xor
pop
dec
mov
or
mov
mov
adc
fwait
cld
fadds
and
mov
lock
andb
das
push
aas
daa
pushf
je,pt
xchg
push
jne
test
cli
ret
outsb
mov
out
dec
das
adc
add
lcall
cmp
call
movl
jmp
or
frstor
push
jae
xor
mov
subl
pop
inc
in
stos
push
jnp
ret
out
cs
stos
dec
loope
mov
hlt
dec
flds
call
ja
pushf
pop
sti
mov
das
jmp
test
jg
xor
push
jmp
insb
xlat
mov
jns
or
mov
sahf
ret
or
push
sbb
and
xor
cmp
mov
test
outsb
aad
sbb
adc
arpl
cld
add
out
mov
loopne
sub
jb
out
insb
lar
aas
inc
pop
jg
xlat
addr16
insb
outsl
xchg
dec
cmc
sbb
jno
mov
add
mov
out
sub
out
arpl
mov
daa
dec
jg
add
mov
xchg
jns
mov
hlt
jmp
andb
mov
and
push
sub
loop
scas
fimull
ss
andb
sbb
popa
les
cmpsl
mov
repnz
mov
sub
hlt
sarb
repz
mov
loopne
sbb
or
dec
out
cmpsb
leave
insb
xchg
cmp
daa
dec
repnz
dec
lds
pop
adcb
nop
pop
jns
sbb
mov
dec
ret
imul
or
repz
jae
fidivl
push
xchg
shl
repnz
loope
sub
adc
jl
lea
shr
enter
mov
neg
inc
sub
fwait
add
pop
insb
mov
jl
mov
test
jo
je
cmc
clc
add
pusha
pushl
pusha
lea
jmp
call
lea
jne
sar
mov
call
push
pusha
inc
lea
call
lea
jne
setg
pusha
cwtl
lea
movb
movsbl
pushf
mov
cwtl
lea
lea
call
inc
cmp
mov
ss
sti
pushf
mov
add
int3
das
adc
lods
push
ja
adc
jl
pop
orb
scas
dec
shlb
ljmp
iret
inc
popa
or
ljmp
imul
adc
jl
and
mov
push
jnp
dec
jne
sar
fstpt
mov
std
in
cmp
jl
imul
bound
jmp
call
lea
jne
bswap
movzbw
mov
pushf
push
mov
lea
jmp
cmpsb
cltd
mov
out
xchg
cmp
and
insb
xchg
ss
jmp
cmc
loopne
cmpb
adc
lds
cmp
fbld
lods
dec
adc
sbb
xchg
mov
xor
adc
lahf
lds
stos
mov
sahf
add
fldt
sahf
cli
jo
mov
leave
push
mov
fldl
mov
test
divl
data16
pop
and
add
movzbw
movzbw
mov
xor
xor
rcl
add
rcr
pusha
movl
not
jmp
call
jl
mov
adc
call
and
fimuls
repnz
mov
rcrb
idivb
ret
ss
cltd
mov
js
xlat
mov
aaa
pop
lods
jbe
xor
insb
push
js
int
stos
popf
fidivrs
xchg
jno
jne
es
sub
xchg
mov
add
dec
mov
jge
shlb
lea
stos
dec
mov
xchg
cmp
jmp
pushf
lea
ja
call
mov
cmp
mov
push
lea
jne
push
inc
pushl
jmp
lahf
mov
fwait
shl
test
pop
add
pop
in
outsl
loopne
add
ds
testb
pop
dec
cli
xchg
adc
cmc
stc
xor
out
pushf
fdivs
popa
sub
cmp
outsb
dec
out
sub
sub
push
dec
mov
mov
jecxz
or
mov
add
xor
andl
std
aam
lods
sub
xor
popf
mov
outsb
fnstcw
movsb
mov
xor
xor
ja
in
jnp
inc
mov
loope
sub
jnp
imul
into
fs
xorl
aad
cmp
xorl
gs
or
mov
ja
adc
pop
adc
pop
dec
pusha
mov
jbe
jnp
loop
mov
pushf
js
pop
jge
rcll
lock
andl
out
lock
sbb
ja
scas
icebp
cmpb
adc
sbb
mov
cmp
loopne
ss
xchg
pop
fstpt
int3
mov
call
pusha
call
add
add
rcl
aaa
aaa
or
push
shr
cmc
mov
sub
and
sub
pushf
rcl
aad
jmp
add
inc
js
je
jb
arpl
jae
in
and
shr
xor
js
insb
xchg
xor
pusha
sub
sub
testl
xor
cmp
inc
mov
das
aaa
je
cli
mov
cwtl
jecxz
js
xchg
sub
in
lcall
jmp
pop
inc
loop
xchg
inc
or
mov
cmp
fists
mov
pop
nop
push
mov
sbb
ffreep
inc
daa
mov
aam
cs
loope
dec
mov
pusha
sub
pushf
mov
enter
push
sti
mov
xchg
js
adc
xchg
divb
sbb
cmovg
pop
and
mov
mov
loop
jb
xchg
mov
jae
pop
jecxz
push
daa
sbb
xchg
jns
cli
fistpl
xor
lea
gs
xor
das
sub
pop
add
lret
jae
insl
fwait
mov
mov
xchg
push
mov
mov
repz
mov
inc
and
xchg
clc
jp
lahf
add
jne
cli
mov
pop
iret
cmc
sbb
in
mov
xchg
ja
mov
pusha
aaa
mov
cmc
add
call
jmp
or
ficompl
into
jae
mov
lock
adc
and
add
mov
sub
repnz
lahf
ss
das
pop
mov
dec
mov
aad
enter
and
out
push
shr
mov
or
leave
subl
popf
test
iret
mov
movsl
outsl
lock
cmp
sar
and
mov
fdivrp
jmp
js
dec
scas
mov
mov
mov
inc
dec
inc
js
scas
mov
inc
js
mov
lods
mov
scas
scas
inc
js
mov
lods
scas
mov
js
scas
js
mov
js
inc
scas
mov
lods
mov
mov
lods
mov
dec
mov
dec
sbb
and
js
mov
outsb
adc
mov
dec
outsl
lea
daa
adc
loopne
hlt
or
push
scas
push
inc
cmp
pop
inc
mov
or
sbbb
mov
pop
push
test
push
sbb
cmp
mov
jns
les
mov
outsl
push
addl
sub
sub
test
and
lea
jmp
pusha
xchg
mov
jmp
clc
mov
sub
jmp
sbb
in
cltd
mov
xchg
negb
cmp
divb
lock
jno
icebp
cld
lcall
stos
adc
mov
and
repz
mov
xor
lea
jne
movsbw
lea
mov
sub
sub
clc
mov
push
stc
pushf
clc
sub
pusha
pushl
popl
lea
jne
cmp
pushf
push
lea
ja
inc
rcl
sbb
sub
shr
shld
add
shr
rol
inc
mov
ror
rcr
mov
pushf
test
repnz
mov
jmp
pusha
xchg
popf
cltd
mov
pop
subl
fildl
stos
push
mov
xlat
loopne
aaa
sub
popf
hlt
aam
lock
popf
jns
pop
jp
outsb
pusha
stc
jp
in
mov
jg
mov
mov
fwait
cld
pop
shll
xchg
cmp
std
psubusw
cwtl
mov
mov
cmp
xor
lods
xor
subl
ja
icebp
hlt
push
cmp
add
arpl
mov
dec
sbb
ret
out
pop
mov
jecxz
jbe
daa
mov
test
lfs
jo
mov
mov
jo
sbb
push
jns
cmp
shlb
push
scas
pop
cltd
mov
xor
pop
into
outsl
xchg
jnp
shlb
out
push
mov
popf
subl
add
lcall
test
std
push
pusha
add
pusha
pushf
lea
jmp
push
lea
jae
test
sub
push
push
lea
call
jmp
bt
and
cmp
stc
add
pusha
lea
jmp
push
or
xchg
mov
scas
push
jae
aaa
pop
add
adc
and
pusha
imul
jg
insb
adc
call
lds
gs
dec
int3
fnstcw
out
ss
mov
cmp
lret
sbb
jne
leave
repz
and
inc
popa
imul
scas
xchg
je
mov
inc
in
cwtl
andb
clc
xchg
mov
or
aas
or
inc
jns
repz
and
popa
imul
ljmp
sbb
popf
mov
push
cmp
mov
mov
sub
xor
jmp
mov
push
sti
pusha
ret
subl
in
lret
mov
sahf
adc
push
negb
popa
pop
sub
jns
pop
jmp
ret
sahf
inc
in
test
pop
jno
imul
inc
out
hlt
mov
or
push
cmp
cmpsb
cmpsl
jns
sub
push
mov
shrl
lcall
orl
js
mov
arpl
mov
pop
push
cmp
push
pop
add
dec
scas
mov
mov
jle
shlb
mov
sub
lahf
fisttpl
cli
push
cmp
test
aaa
test
mov
scas
inc
or
out
xor
js
inc
fs
push
cld
fs
sub
push
in
inc
imul
int
mov
mov
push
cmc
pop
add
js
sub
aas
or
stc
jne
rorb
inc
in
sub
mov
stc
mov
wrmsr
iret
and
lods
cmp
mov
je
aas
xor
mov
movsl
ljmp
jp
fs
fwait
push
sub
out
push
push
xchg
or
sbb
ret
in
mov
sbb
adc
push
aad
xchg
mov
idiv
pusha
pushf
jmp
push
lea
je
jmp
cmc
sub
xchg
mov
dec
jmp
shlb
mov
stc
in
mov
hlt
mov
enter
pop
add
jmp
cld
clc
dec
andb
imul
mov
jge
pop
cmpl
aas
sub
nop
cmp
imul
dec
sub
int3
and
stc
outsb
adc
out
xchg
stc
fistpl
lahf
add
dec
das
adc
xchg
xchg
pop
cmp
cmp
test
sbb
movl
mov
lea
jmp
jecxz
fstl
iret
negb
iret
stos
imul
out
aas
sbb
mov
mov
mov
jns
popa
and
pop
mov
or
add
jne
cmp
cmc
xchg
popa
cmpsb
in
aas
xchg
ss
into
lea
out
xchg
cmc
fnstcw
cmp
shlb
jge
ja
mov
mov
test
cwtl
stc
mov
inc
mov
sarl
sbb
sub
sbb
imul
mov
test
sbb
movsb
or
push
or
mov
add
and
and
add
pop
ret
imul
xchg
xor
pushf
xchg
mov
inc
adc
icebp
xchg
cmp
cltd
jg
dec
mov
or
sbb
xor
xchg
jnp
mov
add
lret
outsl
adc
fiadds
lds
or
shrl
jge
pop
jns
imul
pop
int
fnstcw
mov
dec
xchg
lock
movsl
and
push
outsl
pop
jnp
out
xor
pop
dec
fidivrs
movsl
out
out
shlb
fistps
add
in
cltd
inc
inc
in
jne
mov
lods
xchg
adc
ret
rorl
xlat
cmp
xchg
bt
jmp
bound
xor
and
mov
out
mov
loopne
repnz
fiadds
jmp
imul
popf
push
jp
mov
push
mov
into
xor
xchg
ficompl
add
xor
jle
dec
xor
out
in
pop
test
test
nop
pop
popa
xchg
mov
std
lahf
stos
adc
mov
loopne
test
fadds
mov
cmpsl
pop
pop
sub
pusha
xchg
jmp
arpl
and
popf
add
mov
pushf
dec
jmp
inc
push
adc
push
xor
stc
and
xor
daa
int
jg
pop
and
stos
push
clc
pop
inc
jmp
mov
divl
or
mov
mov
xor
ja
xchg
push
cmc
popa
aaa
push
pop
sub
push
mov
push
fists
mov
add
fldl
pop
and
mov
cmp
add
cltd
notb
inc
sub
jne
cmp
imul
out
into
popf
ret
movsl
or
mov
ljmp
aad
cs
cmpsl
xor
mov
ret
ja
or
mov
hlt
sbb
jg
out
mov
mov
jbe
sti
popf
push
not
stos
lea
scas
je
xor
push
mov
in
nop
xor
jo
mov
ret
mov
jmp
cmp
jge
nop
sti
mov
loop
sbb
jbe
dec
pop
cltd
dec
int
imull
into
xor
jp
inc
and
ljmp
insb
cld
sbb
orl
lods
lock
scas
dec
pop
xor
jnp
push
out
xor
push
fsub
push
lret
or
sub
fwait
loopne
jb
or
movsl
call
icebp
inc
cmpsl
push
push
lret
cs
or
jne
xchg
mov
jecxz
add
sqrtpd
movsl
fs
or
fld
sub
pop
scas
insl
test
fldt
fistl
cs
das
dec
mov
adc
clc
dec
mov
xor
lds
aad
into
xor
pop
and
xchg
in
sbb
cmc
cmp
jmp
test
aas
add
pop
cs
fbstp
out
outsl
adcb
push
xchg
sarb
out
pop
cmp
shlb
or
mov
mov
nop
xchg
dec
fcomps
outsl
mov
sbb
dec
out
sub
pop
rcll
or
lock
test
repnz
dec
int
daa
insl
lcall
dec
ficoms
test
lea
jne
push
stos
pushf
pushf
lea
jmp
mov
mov
bswap
lea
jmp
pop
dec
push
nop
mov
xchg
lods
dec
scas
and
adc
cs
push
mov
ret
ja
push
repnz
shl
sbb
or
fnstcw
inc
call
cmpsb
mov
pop
pop
dec
fldenv
filds
ljmp
pop
sbb
mov
mov
inc
xor
out
sbb
sbb
js
pop
cltd
addr16
lock
int
sub
es
push
mov
mov
push
aas
gs
lahf
and
push
stc
jmp
push
lea
call
cmp
stc
pusha
sub
pushl
call
sbb
in
mov
test
pop
std
and
insb
xor
and
xor
fiaddl
dec
or
sbb
add
mov
lods
xchg
jnp
mov
xor
jp
inc
adc
jo
push
test
jmp
push
call
mov
ljmp
and
xor
mov
fcoml
in
sub
ja
ret
and
or
hlt
dec
fadd
insl
push
lock
xchg
pop
fistps
test
loopne
inc
add
inc
jg
loop
adc
pop
lahf
ret
and
adc
sahf
les
outsb
jo
lcall
mov
xlat
mov
in
mov
adc
ficompl
lahf
push
ljmp
push
pop
jnp
lea
je
pushf
lea
jmp
lea
je
call
push
lea
jp
pusha
movl
push
pusha
movb
call
stc
sub
jl
clc
stc
cmp
call
push
inc
dec
mov
imul
jb
mov
xor
outsl
add
xlat
jnp
les
sub
out
in
pop
inc
in
jbe
inc
sub
cld
jne
or
fnstsw
add
addr16
xor
gs
neg
loop
jle
outsl
js
xchg
int3
mov
lds
dec
mov
je
movsb
and
xor
ss
dec
push
mov
in
xchg
cmp
lods
out
stc
inc
jmp
push
pop
fiadds
mov
lret
push
mov
out
nop
cmp
push
outsl
mov
mov
stos
mov
or
adc
mov
mov
incl
add
leave
subl
cwtl
jle
dec
and
and
in
into
outsl
movsl
lods
lea
inc
jmp
xor
and
in
rcrb
lahf
loop
mov
push
add
shr
and
ljmp
or
in
push
ss
add
xor
jl
cs
orl
mov
std
mov
pop
jle
push
inc
push
mov
push
js
aam
rcrl
pop
stos
fnsave
cmc
or
xor
fldl
repz
movsb
inc
rorb
mov
aas
jmp
xchg
add
mov
fildl
cmpl
popf
xorl
xchg
xor
cmp
pop
jl
inc
lods
je
dec
inc
push
sub
nop
mov
xor
decl
mov
pushf
adc
push
mov
call
xchg
xchg
faddl
test
jne
ret
imul
push
jbe
jl
pop
rol
push
jne
push
daa
sbb
popa
push
pusha
into
pop
dec
xlat
orl
xor
pop
shrb
xchg
mov
mov
or
adc
mov
cld
mov
lahf
adc
andl
lock
jne
iret
jo
mov
mov
add
rcl
iret
mov
jmp
dec
pop
adc
mov
scas
shl
pop
inc
out
scas
push
sti
popf
test
push
inc
mov
jae
int3
clc
or
pop
dec
and
cmc
jnp
fs
icebp
fwait
mov
call
add
mov
xor
jnp
jb
ret
sbb
jb
mov
mov
test
int3
outsb
into
mov
outsb
mov
push
push
mov
jne
in
push
dec
out
dec
ds
out
shl
pcmpgtb
mov
cmp
sbb
jb
xor
sub
jle
js
mov
xor
scas
push
inc
outsl
stc
mov
test
xor
aad
sbb
push
je
or
loop
cmpsb
lret
repnz
adc
push
and
mov
add
ficompl
call
xchg
in
jnp
mov
shlb
shll
sub
outsb
in
popl
and
cmp
imul
xchg
stc
ffreep
and
cmpsl
movsl
imul
outsl
ds
lea
jb
call
stc
cmc
clc
push
shld
mov
pusha
movb
cmp
sub
pusha
pushf
push
pushf
rep
mov
not
push
mov
mov
movb
lea
jmp
mov
orb
lcall
sahf
xor
pop
ret
ja
dec
out
icebp
cwtl
mov
cmc
lcall
push
inc
rcrb
daa
mov
hlt
test
fwait
cld
in
sub
repnz
inc
pushf
call
add
stc
mov
sub
call
movb
jmp
push
sbb
mov
clc
mov
push
ds
mov
mov
sub
mov
or
shlb
mov
je
andb
fcmovu
add
jmp
add
fisttps
dec
fidivrl
incl
cmpsl
gs
std
icebp
xchg
or
xchg
mov
andb
dec
mov
rcrb
mov
sub
inc
test
movsb
mov
ljmp
insl
cld
lods
push
mov
and
inc
and
inc
aas
mov
movb
pusha
pushf
pushf
lea
jmp
lea
jae
bsf
btr
pushf
mov
pushf
btc
xor
mov
test
pusha
jmp
lea
je
push
pusha
sub
pushf
cmc
stc
movw
cmp
movb
pushf
pushf
lea
jmp
arpl
pop
andl
mov
adc
repnz
xchg
pop
jmp
ror
dec
cmp
xlat
out
jg
cld
ss
push
aaa
cmpsb
paddusw
push
loop
sub
adc
sub
sbb
insb
xlat
mov
lock
jg
sbb
cs
out
adc
and
out
mov
cltd
cli
pop
daa
and
jno
mov
std
jmp
fisttpll
dec
pop
out
mov
out
xor
and
ja
jno
cmp
mov
mov
stc
in
mov
out
stos
push
inc
pop
subb
or
das
mov
mov
xchg
aam
das
and
push
mov
sbb
add
popa
ret
mov
repz
sub
push
jge
lret
repz
movsl
or
lock
cld
test
mov
andb
add
push
push
pusha
lea
jmp
pushf
pushf
mov
mov
call
push
lea
ja
call
pusha
lea
je
call
lea
je
pushf
call
test
cmp
clc
cmp
call
push
lock
std
std
xorl
dec
inc
arpl
rcrb
insl
mov
adc
lret
push
xor
lods
popf
jge
jmp
dec
mov
imul
push
int
mov
pop
xchg
xchg
test
int
inc
add
dec
add
out
in
xchg
push
push
movsl
les
xchg
push
enter
aam
clc
cmc
cmp
pushf
pushf
movb
jmp
cmp
sub
cmp
pushf
cmc
xor
stc
test
movb
jmp
test
pusha
bt
cmpb
call
pop
mov
loopne
jecxz
pop
in
pop
adc
out
xchg
mov
mov
fiadds
sbb
dec
imul
xchg
icebp
pop
jbe
mov
cmp
icebp
xchg
dec
je
jno
rol
ret
dec
insl
push
out
mov
mov
jecxz
lock
sahf
ret
sti
add
leave
test
out
cmp
mov
mov
jl
outsl
mov
xchg
lcall
adc
lret
int
push
jbe
push
mov
das
adc
jecxz
stos
fimull
push
repz
cmp
xchg
shl
lods
push
ja
mov
jns
pop
inc
mov
and
inc
or
sbb
fimuls
jbe
sub
bound
mov
ljmp
aas
xor
cltd
lret
pop
jb
in
out
or
das
xchg
jp
aas
mov
lcall
icebp
xchg
jp
pop
mov
push
movb
push
pushl
ret
sub
xchg
aaa
sbb
jb
jecxz
lcall
push
sbb
ja
out
cmpsl
iret
je
shlb
lret
insl
ss
sbb
cmc
loopne
sub
shll
out
dec
inc
cld
jl
pop
sub
adc
decb
in
and
dec
mov
xlat
push
in
sub
xchg
lods
or
mov
or
push
divl
clc
jecxz
jbe
inc
fs
test
fldenv
jmp
out
xchg
push
mov
ljmp
cmp
mov
cmp
add
and
orb
xor
push
mov
std
lret
ss
xor
ja
ljmp
xorl
sub
adc
inc
popa
sbb
or
iret
inc
jmp
mov
jge
call
mov
in
dec
jne
ss
insb
xchg
in
xchg
or
loope
dec
repnz
lods
push
xchg
jge
xchg
pandn
push
mov
sub
sbb
mov
movsl
jo
dec
mov
adc
jb
cmpsl
int
fldl
sub
inc
mov
test
sub
adc
dec
inc
or
lods
xchg
pop
hlt
rcrl
add
scas
adc
push
mov
push
adc
sbb
xchg
imul
inc
and
scas
movb
pushl
ret
sbb
pushl
shr
neg
bsf
movzbw
mov
lea
sub
add
lea
pop
pop
mov
call
call
pop
push
pop
test
insb
adc
add
dec
insl
xchg
cmp
mov
ss
pop
sbb
jl
dec
cmp
out
and
jmp
jp
cli
or
filds
lcall
dec
xor
adc
fnstsw
or
icebp
test
pop
adc
xchg
pop
in
daa
xchg
rolb
sarl
movsb
mov
cmp
push
push
hlt
arpl
add
xchg
call
cmc
sub
rol
stc
add
lea
mov
xor
push
sub
mov
clc
pushf
call
stos
jb
test
mov
outsb
xchg
cmp
jl
push
cmc
out
rorl
je,pn
mov
dec
int3
sbb
lret
clc
add
jmp
and
cli
adc
and
out
dec
lods
push
or
sbb
repnz
jg
xor
int3
pop
jb
or
xor
or
adc
mov
dec
das
xchg
pop
pop
ds
jns
emms
fneni(8087
lea
je
stc
cmp
pusha
pusha
call
mov
push
jmp
call
pop
pusha
cmpl
xchg
mov
loop
xchg
xor
sbb
ja
sub
stos
push
hlt
fwait
ds
mov
mov
les
and
adc
arpl
push
push
inc
in
sbb
daa
int
sahf
cmpl
push
jl
dec
outsl
adc
sar
or
xor
inc
ss
sub
jecxz
ret
lahf
daa
mov
lcall
dec
mov
incl
cmp
fisubl
popa
loope
push
popa
or
sub
mov
jns
push
mov
pusha
orl
enter
sbb
push
lret
mov
mov
js
lds
jg
sbb
xor
les
flds
jp
leave
mov
icebp
sub
sbb
enter
and
inc
or
call
or
ja
shlb
dec
jae
iret
sbb
mov
subl
dec
lret
das
jb
jle
lock
cltd
dec
lock
cltd
add
xchg
inc
xor
mov
inc
push
jae
repz
pop
jg
in
lcall
dec
setl
push
imul
push
cmp
pop
and
bound
dec
imul
and
mov
add
add
fwait
and
dec
mov
in
mov
ss
imul
aam
mov
jle
dec
sub
cmp
in
cmp
cwtl
cmp
stc
cmpb
pushf
lea
jne
or
test
sub
mov
cmp
call
push
mov
lea
jne
add
shrd
aaa
sub
neg
mov
ror
sbb
inc
add
add
rcr
rcr
mov
cmp
test
test
jmp
pushf
pushf
movb
movl
call
adc
subb
cmp
xchg
xor
jmp
or
fadds
and
aam
pop
jne
js
fwait
add
cmp
inc
repnz
pop
andl
stos
insb
popa
ds
or
into
fists
std
and
addb
lcall
jle
sbbl
fs
ja
scas
std
and
shl
fstpt
and
inc
and
pop
add
fiadds
mov
sbb
leave
sub
mov
jae
in
mov
clc
movb
mov
cmp
push
pushf
movb
mov
lea
jbe
bts
sub
btr
sub
xchg
shl
shl
mov
btc
mov
add
cmp
test
push
add
jmp
pusha
movl
cmp
cmpb
mov
mov
pushf
push
lea
jne
cmc
jmp
call
mov
dec
shld
push
jle
sbb
push
test
not
or
sub
movzbl
movzbw
lea
call
xorb
mov
xchg
mov
in
xchg
mov
jle
int3
inc
icebp
or
xchg
rcrl
or
cld
cmpb
clc
mov
mov
je
clc
inc
out
pop
fisubrl
jns
jns
dec
repz
jb
std
push
cmp
cs
and
pop
add
dec
mov
subb
xchg
clc
jbe
or
iret
xor
mov
popf
inc
mov
hlt
push
ds
rclb
lcall
stc
pop
adc
fmuls
or
xchg
xor
popf
sbbb
mov
jle
in
push
jl
jno
arpl
adc
fstpl
ret
iret
xor
jp
fmul
inc
aas
js
andb
cmp
loopne
test
sbb
pop
inc
test
mov
and
inc
sub
jmp
lea
ja
neg
mov
sar
dec
sub
rcr
add
add
stc
mov
or
mov
cmp
call
lea
je
call
sub
movb
call
neg
bt
add
pushf
push
lea
call
jmp
movl
call
lahf
imul
in
xchg
mov
cmpsb
dec
in
adc
jge
sbb
stos
movsl
mov
es
jbe
jne
pop
dec
repnz
ss
ret
cli
jmp
ss
dec
or
inc
xchg
ds
in
dec
xor
lods
out
ja
mov
outsb
fsin
shl
fmul
pop
push
push
scas
inc
out
jle
or
scas
xchg
jp
inc
test
outsl
push
push
sbb
ficomps
pop
test
mov
cmp
add
clc
cmp
movzwl
shld
clc
mov
jmp
sti
out
cmc
jge
xor
cmp
stos
sarl
ds
push
jecxz
icebp
xchg
mov
lcall
mov
mov
pop
jp
nop
dec
jmp
mov
xor
add
adc
inc
and
insb
aam
mov
sbb
aaa
mov
lea
and
je
add
es
cmp
pusha
add
test
stc
cmc
pusha
movzwl
bswap
movzbw
mov
jmp
push
stc
jge
xor
pop
jmp
leave
in
adc
aam
icebp
insb
nop
mov
negb
aaa
mov
shll
arpl
cld
mov
xchg
add
mov
aaa
sbb
lfs
loopne
mov
push
jns
int3
hlt
and
sub
lea
mov
push
push
inc
in
push
ljmp
or
inc
addr16
es
dec
out
mov
add
and
loopne
inc
loop
movsl
dec
out
xchg
xor
jmp
inc
in
adc
loope
sti
cs
roll
subb
fs
ja
adc
bound
adc
or
testb
iret
std
jmp
movl
cmp
clc
stc
movb
movzwl
movsbw
bsr
ror
mov
movb
jmp
movzbl
mov
pushf
lea
jg
pushf
lea
ja
pusha
lea
jb
cmp
call
call
push
dec
push
jl
xor
mov
jnp
jmp
data16
jo
mov
or
sbb
ficomps
ret
insl
xor
loopne
pop
adc
lds
rcr
push
jp
pop
andl
lahf
add
mov
imul
loope
jnp
mov
gs
out
adc
fsts
mov
mov
inc
jnp
mov
add
stos
mov
push
pushf
mov
bswap
pop
pushf
pushl
ret
jmp
mov
lea
jne
lea
movb
jmp
mov
cmpb
xor
jp
shll
shl
popf
inc
addr16
push
shrl
mov
cmp
cmp
inc
rolb
or
jo
arpl
cmp
nop
stc
std
call
movsb
scas
mov
mov
nop
test
fsqrt
les
mov
cld
mov
jle
imul
faddp
sub
std
dec
fwait
mov
ret
movb
mov
lea
call
push
call
cltd
arpl
mov
movsl
insb
mov
shl
fwait
mov
negb
xor
into
scas
insl
shrb
test
fstpl
stos
cmp
or
sti
popa
cwtl
mov
test
lahf
fs
dec
cmp
ljmp
fildl
stos
sahf
imul
push
das
aam
sbb
push
or
call
jge
jb
mov
xchg
mov
cmc
cmp
mov
ds
out
xor
call
xor
xchg
incl
mov
subl
dec
pop
sub
outsl
adc
jo
mov
js
in
arpl
out
jp
xchg
lahf
cmc
pop
jbe
xchg
pop
push
xor
mov
cmovo
popa
add
xchg
mov
dec
ficompl
pop
sbb
cmc
outsl
pop
cld
dec
icebp
xchg
cmp
sub
pop
rcrl
scas
push
loopne
push
in
mov
jae
mov
xor
add
inc
and
push
insl
cld
mov
jo
lret
sarb
xor
inc
and
dec
cmp
sub
xchg
ljmp
stos
lret
outsl
xchg
mov
negl
cmp
popf
dec
mov
popf
fnstenv
push
fsubrl
loop
jb
fs
or
mov
aaa
fcompl
nop
xor
jl
sbb
int
jno
jo
xchg
cmp
xchg
imulb
rcrb
pop
imul
pop
add
clc
mov
dec
push
cmp
push
push
push
dec
xor
fnstcw
and
lret
scas
adc
ffreep
test
push
push
pushf
movl
push
pushf
pushl
lea
jmp
cmp
pushl
pusha
pushf
pushf
lea
jae
bts
push
mov
call
mov
push
pusha
pushf
lea
jmp
pushf
movl
pusha
push
mov
lea
jmp
movl
call
push
jmp
popa
xchg
lcall
fdivr
and
aam
cmpsl
dec
cmp
jp
xor
pop
in
jbe
shl
xchg
mov
stc
and
cltd
xchg
xor
push
sbb
movl
or
out
scas
inc
ljmp
xchg
lds
mov
movsb
pop
pushf
inc
pop
mov
cmpsb
ret
xor
inc
shlb
cmp
loope
mov
fs
call
dec
out
push
aaa
lahf
test
dec
ss
loopne
cmpsb
cltd
xchg
mov
les
dec
dec
setns
setp
lods
test
sub
stc
push
neg
call
lea
jne
bt
bt
sar
mov
clc
call
pusha
push
lea
jae
call
setbe
lea
pushl
pusha
pushf
pushf
lea
jmp
jmp
mov
pushf
pushf
lahf
not
movl
bswap
cwtl
lahf
lea
movw
push
movl
call
call
mov
outsb
mov
mov
test
arpl
ret
jne
dec
dec
test
fs
mov
push
mov
xchg
test
mov
inc
add
icebp
adc
push
cmpsb
pop
arpl
mov
and
pusha
sahf
and
inc
insb
dec
inc
iret
adcb
ficoms
mov
mov
stc
testl
adc
stc
lea
je
pushf
pushf
pusha
add
pushl
lea
jmp
cmp
pushf
lea
jae
cmp
cmp
pusha
cmp
call
call
shr
cmc
call
fs
pop
jbe
xor
lcall
jge
push
fmul
xchg
pushf
mov
adc
or
cmp
mov
arpl
inc
in
sub
movl
and
ja
push
pusha
mov
pusha
lea
jb
call
repz
jmp
std
lock
xor
jne
mov
movb
test
iret
jb
aaa
pop
std
pop
inc
insb
nop
xor
popf
jae
test
aam
xlat
sbb
gs
lods
or
test
mov
mov
mov
mov
and
lret
insb
ss
mov
iret
icebp
cltd
mov
jb
sbb
mov
or
cmp
dec
cmp
or
and
pop
cld
xor
adc
int
jl
sbb
sbb
ret
daa
mov
aam
sbb
bound
push
push
and
arpl
call
call
cmp
jne
xor
outsl
nop
mov
andl
or
xorb
in
repz
sbb
inc
and
orb
idivb
fildll
xchg
cwtl
cmp
inc
movsb
and
out
push
mov
cmp
loop
in
push
pushf
jmp
pop
dec
push
jne
xor
mov
lds
pop
dec
mov
dec
pop
scas
or
ja
shll
push
repnz
fwait
mov
das
push
or
std
sbb
or
pop
cld
pop
cmp
jae
loope
insl
push
lods
push
dec
iret
sbb
push
flds
add
xor
jge
inc
stos
dec
int3
test
mov
sub
addb
cmp
xchg
ja
rorb
adc
lahf
xchg
mov
pop
pushl
shr
lea
bsf
rcr
add
add
mov
cmc
or
push
pusha
call
mov
setbe
movl
not
lea
call
jl
dec
je
xor
sub
lcall
pop
les
out
mov
rcrb
fdivrs
jl
pop
dec
jns
cmp
add
cmp
xchg
in
fdivr
dec
cmp
stos
hlt
movsl
push
pop
push
cmp
xchg
jb
or
aam
pushf
mov
js
lahf
inc
movsl
dec
cs
pusha
inc
lods
or
test
fsincos
loop
dec
mov
test
clc
cmp
jmp
pop
pushf
jmp
arpl
test
fs
or
xor
or
ja
outsl
adc
cmp
add
dec
icebp
pop
cmp
hlt
jns
pop
or
cmc
sbb
aaa
call
adc
insl
pop
cli
and
lret
mov
sar
and
movsl
nop
call
xchg
lock
imul
or
xor
cmp
xlat
or
or
mov
push
in
push
mov
add
int
cwtl
jnp
sub
pavgw
inc
push
negb
xor
mov
push
mov
clc
insl
xchg
pop
test
mov
das
push
xchg
sbb
mov
mov
out
adc
repz
mov
leave
jecxz
loope,pt
js
mov
xchg
add
fdivrl
ret
mov
push
lods
shlb
dec
jno
or
pop
cltd
les
icebp
pop
out
lcall
mov
xor
push
pop
outsl
cld
je
pop
imul
sti
add
add
out
push
call
pusha
mov
pusha
push
mov
lea
jmp
stc
or
push
movb
lea
je
not
pushf
mov
push
lea
jmp
lea
jne
push
lea
call
pusha
push
pusha
pushl
lea
jmp
add
add
add
mov
add
pop
and
add
add
add
push
lds
add
add
cld
aam
add
lds
add
jmp
mov
in
xchg
mov
cld
and
jmp
lods
iret
mov
cmpl
or
sub
lret
dec
in
mov
jg
add
jecxz
mov
enter
add
cltd
push
jnp
jg
xchg
pop
xchg
je
ret
mov
push
push
xor
sub
pop
pop
outsb
es
lret
jno
jp
sti
in
and
pop
sarb
mov
imul
mov
mov
adc
add
popa
push
mov
imul
inc
in
scas
adc
jg
scas
int3
mov
jg
in
dec
xchg
or
adc
jge
mov
mov
das
dec
lcall
scas
sbb
xor
mov
aaa
push
outsb
mov
test
xlat
sarb
jo
test
jne
and
pushf
data16
pop
adcl
enter
cmp
jmp
or
jmp
mov
xor
int3
mov
sub
iret
push
test
out
sub
jge
in
shr
cld
and
out
add
rcr
and
xbegin
cmp
into
add
loopne
add
into
stos
xor
scas
adc
add
in
loope
push
and
call
ror
add
pushf
inc
mov
out
xor
push
dec
dec
fs
add
inc
add
or
push
push
arpl
aaa
lret
cmp
fisttpl
icebp
loope
dec
sub
addb
mov
ret
aad
cld
push
or
lock
cmp
rcl
loopne
add
pop
dec
add
gs
ds
mov
out
clc
iret
sbb
mov
pop
loopne
add
aad
shl
push
push
pop
mov
push
loopne
fistpll
andb
iret
ljmp
sub
inc
inc
arpl
iret
push
rcr
add
mov
out
in
cmc
cmp
dec
fisubs
movl
jmp
adc
ds
decb
inc
pop
iret
xlat
dec
or
test
ret
push
repnz
push
pop
ficoml
xchg
cs
jbe
fildl
into
add
pop
std
adc
int3
and
into
ffree
add
mov
lret
mov
mov
loopne
add
add
jno
mov
lds
and
loope
pusha
iret
es
ljmp
mov
in
popa
lock
sub
cmp
push
inc
shlb
or
push
dec
sbb
push
inc
jbe
aas
adc
lock
leave
fdivrp
jb
fmulp
addr16
data16
rol
inc
outsl
xchg
addr16
into
inc
push
push
fdiv
out
adc
sbb
add
insb
add
fcomp
and
fidivrs
adc
xchg
fildll
leave
jno
inc
in
jb
sbb
idiv
jae
inc
pop
ficoml
jne
inc
dec
jbe
xchg
shlb
incb
cli
add
jns
cli
iret
fcompl
in
jnp
lret
aam
fidivrl
jp
mov
add
sar
sub
mov
mov
ror
inc
cli
daa
int
idivb
cmp
xchg
pushf
lret
inc
enter
and
les
mov
adc
test
pop
out
int3
and
inc
and
sub
lret
cli
adc
aas
add
roll
ljmp
in
push
or
aam
rorl
pop
hlt
scas
addb
lret
xlat
bound
cld
sub
jl
shlb
and
rolb
inc
push
rcrb
leave
rcl
or
jle
lods
jp
loope
sub
inc
popa
lret
ds
loope
inc
push
inc
mov
fbld
cmp
or
and
adc
xor
mov
aaa
ror
stos
inc
scas
inc
jnp
inc
leave
inc
bound
push
mov
mov
or
sub
ret
scas
push
push
adc
lds
shrb
dec
sti
mov
addr16
mov
loope
mov
test
into
int3
jl
and
rcrb
push
loop
orb
out
idivb
fwait
xchg
into
sbb
ja
dec
repnz
dec
push
sub
add
sahf
mov
push
fbstp
adc
cmp
jle
jmp
sbb
dec
sbb
lods
jecxz
es
nop
cmpsl
push
into
cmp
fwait
inc
lret
out
fistpl
inc
mov
dec
addr16
mov
push
sti
daa
push
mov
movb
xchg
popa
push
jo
stos
push
pop
push
xchg
lods
inc
adc
out
inc
sbb
cs
and
xor
leave
adc
lret
out
inc
push
shl
fdivp
addr16
xchg
mov
test
fcoms
je
mov
fsubrl
sub
push
push
mov
pop
and
fisubs
lods
or
lahf
or
rorb
cmp
sub
mov
jb
rcrb
enter
cmp
xlat
outsb
jle
sub
std
enter
xor
call
xor
lock
cmp
pop
xchg
or
mov
dec
lea
mov
in
push
popa
mov
dec
jecxz
add
adc
sbb
and
mov
jno
xchg
rcrl
cmp
sar
in
add
shl
fdivr
aas
into
sbb
ret
or
push
mov
mov
add
lret
dec
movl
mov
or
dec
ret
inc
and
es
loope
cmpsb
into
inc
mov
xor
fisubrs
pop
cli
inc
jle
and
inc
mov
out
in
outsl
add
loop
push
movl
inc
das
pop
jg
addl
hlt
and
xor
in
and
pop
shr
movsb
jno
in
push
mov
fiaddl
shlb
out
mov
mov
pop
xlat
xchg
ss
fistpll
add
cmpsl
clc
push
add
imul
es
and
ds
div
mov
dec
add
into
loopne
out
and
enter
es
and
das
mov
add
sahf
call
divb
push
data16
ds
loop
cs
inc
bound
ljmp
ljmp
add
clc
iret
and
push
or
stos
adc
adc
add
sub
lret
jno
inc
xor
and
inc
cmp
push
shl
fsubp
push
cli
fidivs
xchg
out
fimuls
in
ss
fnstsw
out
into
lret
movb
into
in
out
cmc
lret
push
xlat
out
fwait
out
fs
aaa
and
movl
and
ficompl
iret
bound
and
push
data16
adc
orl
out
lretw
push
pmaxsw
out
dec
or
into
sbb
loopne
add
inc
shlb
addl
test
mov
mov
iret
ljmp
push
lahf
sbb
sub
ret
xor
cmp
inc
add
inc
cmp
push
lock
push
xchg
mull
ret
dec
mov
xchg
aas
in
ja
dec
mov
pop
jo
aas
sub
loop
ret
or
lret
or
cli
push
dec
movb
loopne
adc
dec
cli
daa
lret
push
in
sub
nop
sub
inc
push
ss
cmp
adc
cmp
pop
ds
adc
into
imulb
lahf
es
adc
cs
loope
ret
add
fucomip
jmp
dec
into
cmp
les
loop
mov
loopne
out
xchg
fmulp
rcrb
daa
push
mov
icebp
xlat
rolb
and
pop
cmp
add
and
or
xlat
fsubr
xchg
aam
fmulp
loope
dec
mov
fnsave
inc
rcrb
lock
jp
dec
and
out
out
fists
rorl
jle
push
fs
cmp
jmp
lea
ljmp
ret
push
inc
sbb
mov
fistpll
xlat
inc
in
icebp
loop
push
or
divl
mov
push
add
fidivrs
outsl
cli
lsl
dec
xor
jmp
push
mov
add
jmp
aaa
movsl
pushf
adc
or
data16
xor
and
ss
jmp
ljmp
add
in
or
bound
mov
das
add
std
add
push
in
sub
inc
inc
inc
ret
inc
orl
fsubs
dec
and
inc
lret
or
cmc
in
adc
dec
inc
arpl
xchg
pop
jne
xor
jno
into
mov
insl
imulb
call
fidivl
mov
push
data16
bound
or
and
ficoms
mov
inc
sub
fsubl
jmp
ljmp
fimuls
roll
mov
or
ret
mov
jb
add
lret
push
adc
pop
movsl
jp
dec
out
out
push
xor
jo
mull
rol
aad
push
cmpsb
lock
bound
outsb
mov
mov
sub
sub
inc
jl
rolb
adc
cltd
sub
rorl
fwait
xor
inc
pop
and
and
into
and
sub
dec
daa
test
fiaddl
xor
mov
xchg
idiv
cmp
cmc
inc
mov
sahf
mull
jmp
into
icebp
inc
lock
shr
ffreep
sub
shl
add
lock
ret
in
iret
call
fcomi
cmp
fisubs
sub
lock
xor
and
daa
stos
jp
cmpsb
negl
rorb
xchg
ds
jle
sarb
jbe
lahf
jae
add
xor
int3
pop
ljmp
mov
gs
das
jae
mov
sbb
or
decl
cmp
lds
iret
push
adc
push
in
cs
jg
clc
sbb
sub
aaa
out
popf
inc
mov
or
pop
rorb
in
or
imulb
and
mov
jo
push
pop
mov
movl
je
mov
add
pop
xor
fisttps
adc
mulb
int
xchg
sub
xor
mov
out
icebp
ret
adc
or
decb
imul
add
push
loope
ret
pop
xor
add
testl
sbb
xchg
add
sbb
fmulp
sub
add
push
testb
addr16
testb
lret
push
inc
stos
ror
aam
xchg
testl
rolb
xor
mov
or
ficoml
mov
mov
add
cli
adc
push
enter
or
xor
push
mov
repnz
cmpsb
or
mov
aam
fucom
rcll
add
mov
push
jmp
add
inc
out
jmp
inc
fadds
cs
sub
adc
add
rolb
xchg
fstpl
adc
dec
fisubs
fiaddl
or
mov
loope
dec
ljmp
enter
and
add
inc
xor
loop
jbe
andb
fxch
in
ss
dec
idiv
cmpsb
rorb
dec
sahf
or
sub
xor
add
rolb
jg
and
scas
call
loope
add
imulb
pop
or
push
adc
bnd
push
repnz
inc
mov
vaddsubps
push
pusha
arpl
pop
push
cld
imul
add
adc
fiaddl
out
out
es
inc
pushf
inc
add
push
xor
or
imul
and
inc
lods
scas
inc
push
xchg
push
xor
mov
popf
xor
notb
ret
or
sub
dec
popf
mov
pop
and
jge
and
ficoms
mov
filds
mov
sub
test
jbe
sub
sub
sub
pop
fistps
sbb
or
sub
notb
jg
sub
mov
jle
and
and
xor
addr16
xor
push
je
xchg
cmp
mov
shll
sub
loope
mov
loopne
jb
cld
inc
lahf
notb
js
push
testb
mov
mov
in
mov
add
out
ljmp
or
xlat
in
ret
pop
jg
call
or
xchg
out
sub
lret
daa
and
adc
div
out
daa
cltd
mov
cmp
int3
add
pusha
icebp
cmc
push
inc
cmpb
jle
xor
xor
and
adc
and
mov
sub
adc
sbb
push
mov
sub
mov
fwait
or
and
cmp
or
mov
add
xchg
push
pop
outsb
adc
sbbl
xor
scas
aas
inc
sahf
adc
cmp
sbb
and
adc
push
jnp
outsb
inc
and
and
lret
mov
inc
lds
sbb
fcmove
into
enter
xchg
jmp
or
mov
mov
lret
loop
cli
push
jmp
fmull
jmp
sub
out
aas
add
adc
jo
jmp
sub
inc
or
aam
bound
mov
pop
in
xlat
out
out
out
inc
icebp
cs
loopne
and
adc
enter
push
pop
xor
xor
icebp
adc
repz
out
jo
adc
enter
add
call
iret
lock
sbb
sub
fcmovnb
out
and
pop
xor
pushw
into
sub
lock
push
ret
rcll
ret
fs
repz
repnz
mov
sbb
lea
jl
dec
and
iret
push
adc
inc
std
and
push
sub
xchg
xlat
cmp
ja
and
and
lock
mov
adc
notb
xor
loop
shrl
jb
add
adc
loope
dec
in
insb
mov
and
cwtl
fsubrs
in
xchg
jnp
fsubr
inc
and
in
ljmp
xor
jg
adc
daa
fs
aaa
lret
and
xor
or
and
xor
adc
ljmp
int3
lret
pop
push
test
test
sti
jae
xor
pop
mov
jecxz
xor
movsl
mov
out
das
xor
pop
sub
cmp
dec
aam
in
loop
add
push
call
cmp
or
gs
pop
lock
push
mov
xor
dec
shrb
shl
sub
pop
and
sti
cli
xchg
inc
xchg
adc
mov
add
mov
mov
enter
push
stos
pusha
test
je
cli
scas
and
pushf
mov
daa
push
fdivl
adc
push
and
mov
fisubrs
lock
rclb
int3
mov
dec
mov
pop
mov
into
sub
lret
iret
sub
aam
cmpsb
loop
pushf
daa
callw
and
jbe
inc
inc
adc
out
push
repnz
loope
loopne
call
scas
dec
daa
cmp
mulb
push
movsb
stc
add
das
sbb
add
xor
imul
jecxz
cmp
icebp
lret
lret
mov
sarl
push
and
pusha
push
loope
out
push
pop
jo
ret
sub
lret
xor
inc
cmp
stc
push
inc
sub
repz
mov
mov
jmp
and
rcll
mov
rcr
or
sub
and
push
and
xor
sub
xor
js
mov
add
sub
sahf
sti
dec
stos
push
xor
es
sar
pop
dec
add
lock
lods
jbe
sub
ljmp
icebp
add
inc
call
or
push
ljmp
mov
sub
testb
xchg
xchg
xchg
lahf
in
mov
or
add
sbb
adc
out
cmp
pop
xchg
push
js
jns
jb
sahf
pop
inc
or
xor
push
pop
ret
out
lock
movl
sbb
jmp
fcomi
cmpsl
fidivs
outsl
jno,pt
mul
ret
testl
or
add
into
repz
cmp
or
ljmp
fcomi
or
shlb
xor
iret
pop
cmpsl
in
mov
ret
add
lcall
test
pop
xor
int3
fldt
call
in
out
cmp
or
push
push
in
push
push
xchg
pop
rclb
ss
and
or
add
add
fs
xchg
out
xor
cmp
dec
adc
cmp
pop
sbb
mov
repnz
sub
pop
mov
loopne
sbb
iret
xchg
sti
add
mull
or
xchg
xchg
test
sti
adc
repnz
hlt
out
bound
fdivp
adc
push
push
and
loopne
pusha
push
cmp
addr16
add
pusha
lock
and
cld
ret
push
cmp
rcll
ret
out
in
divb
push
sete
out
push
jmp
cli
ret
push
repnz
pop
cs
add
jle
or
cmc
imul
sub
mov
jmp
bound
out
sbb
out
mul
and
bnd
add
push
and
mov
out
add
push
or
xor
ja
pop
outsb
shl
pop
loopne
adc
sub
jo
loop
cli
incl
rorl
hlt
in
pop
add
stos
out
mov
dec
enter
repz
clc
or
push
adc
inc
adc
cmc
shll
imul
es
add
je
inc
push
popa
or
icebp
mov
pop
cmpsb
push
shl
push
xchg
mov
add
lds
aaa
hlt
int
jmp
daa
icebp
out
xlat
scas
icebp
call
dec
pop
pop
shl
mov
and
add
add
push
jmp
pusha
cs
imul
lock
push
cmc
cwtl
mov
or
test
stos
mov
nop
pop
cmpsl
sbb
dec
mov
and
dec
clc
lock
lock
xchg
push
icebp
sub
rclb
cmp
lock
xchg
jl
jbe
pop
int3
mov
push
mov
repz
add
addr16
pop
and
or
insb
pop
or
jle
test
sub
cli
xchg
and
testl
pop
adc
je
insl
cli
sub
mov
pop
or
lret
pop
fcomps
in
mov
or
scas
xor
lods
aad
or
add
in
lock
movsb
out
popf
sbb
es
arpl
lock
pause
inc
ficoml
push
or
loopne
repnz
pop
movsb
push
icebp
push
sub
push
std
repnz
sbb
push
dec
add
xchg
mov
lock
repnz
sub
lret
sbb
xor
hlt
push
add
or
enter
hlt
mov
mov
jns
pop
imul
in
call
cmc
mov
mov
push
hlt
mov
push
aam
or
and
out
sbbl
nop
pop
xor
cwtl
cmp
push
cmc
push
loop
add
es
and
dec
mov
imulb
notb
xchg
dec
idivb
insb
lods
mov
jle
in
jmp
xchg
pop
in
pushf
xchg
sub
sub
stos
ss
out
pop
insl
push
imul
insb
test
repz
inc
addr16
repnz
or
and
mov
cmc
mov
es
add
cmc
dec
mulb
repnz
dec
out
jo
push
test
jmp
push
in
daa
repz
and
dec
cld
or
mov
mul
and
dec
clc
mov
sub
icebp
repz
inc
loopne
xor
mov
jns
jae
and
pusha
std
clc
xchg
fdiv
or
aam
out
push
div
sub
hlt
jns
test
iret
sbb
lock
out
sahf
push
div
out
add
cmp
repz
enter
clc
xchg
repnz
adc
mov
xchg
xor
testb
arpl
add
pmuludq
out
mul
icebp
adc
push
or
mov
in
jp
testl
js
jmp
jmp
pushf
insb
cmpsb
daa
orl
int3
repz
add
sbb
xchg
mov
dec
pushf
push
clc
mov
and
repnz
jmp
sbb
cmp
mov
jo
adc
push
dec
pusha
mov
pop
hlt
mov
sbb
test
push
mov
fs
pop
out
mov
add
add
std
cld
xchg
adc
xchg
cmp
call
xor
sub
pop
pop
iret
repnz
cmp
fsubs
jne
add
out
pop
adc
adc
cmp
lcall
cmpsb
xor
icebp
lret
push
or
or
xchg
pop
add
add
sbbl
push
nop
and
shl
subb
dec
dec
add
xchg
adc
pop
insb
in
repnz
push
sub
lock
lds
pushf
or
xor
sbb
push
pop
cmp
and
add
mov
stos
stos
arpl
dec
cmpsl
hlt
xor
lea
sbb
push
divl
loop
cld
aaa
cmc
and
in
idiv
cmp
icebp
jns
dec
notb
mov
ss
push
pop
cli
add
fiadds
xor
add
push
sub
dec
add
les
cmp
sbb
sbb
scas
inc
cld
and
jge
jbe
pushf
push
mov
sub
push
loopne
sbb
xor
add
mov
push
mov
xor
xor
mov
add
loopne
jmp
ja
push
push
sbb
push
mov
add
sbb
mov
mov
dec
in
cmp
cmp
xor
js
pop
loope
and
add
cmp
push
fisttps
mulb
xor
loopne
sbb
movb
pop
daa
testl
stos
cmp
push
cmp
add
stc
idivl
sub
andb
insb
clc
sub
add
mov
mov
cwtl
mov
sbb
lcall
add
sbbb
in
jmp
ds
cmp
testb
and
cmpsb
push
inc
xchg
xchg
shl
push
out
out
xchg
mov
adc
cwtl
rorb
mov
aam
lret
push
xor
movsl
push
or
dec
data16
cmp
xor
add
mov
daa
adc
mov
scas
cmpsl
and
pusha
cmp
ret
cwtl
pop
insl
sbbb
hlt
sarb
jl
repnz
lock
dec
into
pusha
add
dec
scas
shl
cmc
xchg
call
ljmp
pop
jae
jb
pusha
out
sbb
add
add
sub
push
fdivrl
adc
mov
lea
mov
imul
push
add
sti
adc
ret
mov
in
dec
es
imul
push
hlt
and
in
cli
in
call
inc
xchg
divl
dec
pop
add
call
loopne
add
dec
bound
lods
filds
sbb
push
rclb
fs
adc
lock
pop
and
out
adc
or
adc
push
aam
add
sbb
test
scas
add
test
mov
out
push
jbe
inc
hlt
sub
dec
mull
add
push
add
in
jmp
ret
dec
adc
cmp
or
inc
ljmp
fsubs
add
mov
push
jmp
mov
lock
outsl
push
push
jecxz
pusha
es
pop
jmp
pusha
cld
mov
push
testl
xor
mov
loopne
push
sbb
and
sub
or
lods
testb
adc
adc
adc
adc
sahf
sbb
and
or
pop
mov
mov
sahf
das
push
inc
pop
pop
lock
xor
cmp
je
jmp
dec
add
and
ret
dec
lods
dec
out
push
add
pushf
lock
aas
ds
inc
lock
lock
inc
cwtl
sar
push
push
filds
sbb
fsub
pop
or
push
popl
lock
add
jb
jp
aaa
push
ja
lcall
xchg
pop
out
push
add
xchg
cmpsb
adc
inc
add
push
add
hlt
sub
inc
jl
jb
scas
sbb
push
dec
bound
imul
mov
dec
in
push
ljmp
scas
xchg
shrl
loopne
sub
mov
pop
fdivs
bnd
sub
add
in
xchg
push
mov
fistl
adc
out
dec
mov
ljmp
ret
pop
xchg
sar
inc
jns
or
pop
out
daa
mov
and
out
notb
sbb
mov
xchg
popa
adc
mov
xor
pushf
or
notl
xor
and
pop
mov
rclb
add
and
sub
into
or
xor
adc
lret
sub
ffree
lret
sub
lea
mov
pop
notb
push
xchg
stos
xor
into
lds
add
pop
sub
repnz
enter
ljmp
mov
mov
subl
ret
and
out
dec
out
or
push
int3
out
push
fdivrp
adc
push
mov
pop
sub
sub
out
add
mov
jmp
test
ss
fmull
mov
inc
xor
fildll
jne
movsb
add
adc
lock
imulb
dec
and
and
popa
xor
push
movsb
push
movsl
pop
inc
fiadds
adc
sbb
sub
mov
stos
add
shlb
jmp
xlat
ljmp
loope
jp
and
sub
flds
orb
xchg
mov
add
clc
lock
and
mov
sbb
popa
push
sbb
sahf
inc
add
es
sub
cmpsb
lret
push
sub
jns
pop
ret
daa
jg
hlt
mov
shlb
xchg
and
jge
scas
jae
xchg
adc
cwtl
lock
xchg
jo
lock
out
daa
sbb
ja
iret
and
dec
pop
leave
jg
mov
adc
and
dec
in
push
neg
dec
jnp
mov
out
jb
inc
loope
mov
testb
ret
xor
mov
dec
sbb
mov
rcll
xor
sub
sahf
xor
xor
mov
enter
inc
add
add
dec
sti
bound
int3
sub
mov
out
sbb
jg
mov
cmp
shlb
dec
into
sub
pop
xchg
scas
mov
push
add
cs
int
or
and
movsb
mov
into
pop
daa
push
out
iret
cs
fisubl
add
adc
add
jb
imul
mov
sub
add
mov
mov
inc
fcomp
dec
xorb
xchg
ljmp
popa
or
lock
inc
mov
iret
ds
bnd
push
add
mov
cmp
lock
into
dec
jns
jp
lret
les
shrb
mov
push
xor
and
mov
mov
test
jl
lahf
or
fwait
inc
adc
mov
xchg
subb
mov
jbe
aam
mov
loope
mov
mov
les
pop
cli
dec
loope
and
lret
mov
xchg
jns
xchg
cmp
jge
push
ss
and
leave
scas
xchg
pop
push
in
lret
shrb
das
sub
dec
ret
adc
xchg
imul
jbe
mov
mov
js
mov
mov
jnp
out
notb
out
aaa
sahf
mov
shll
and
sbb
cwtl
jge
mov
mov
add
enter
shll
imul
push
sub
lret
ljmp
loopne
add
mov
inc
enter
ret
imulb
xor
enter
push
ret
mov
rol
sub
loope
xchg
inc
sahf
pop
xor
fcmove
popf
lock
xor
into
les
arpl
mov
sahf
jecxz
sub
shlb
add
ficompl
loop
add
and
int
out
mov
stos
xor
ljmp
cwtl
pop
aas
push
adc
jle
push
pop
outsl
sub
sarl
push
mov
xchg
in
sub
aas
mov
fs
dec
in
adc
pop
mov
jo
jg
cmpsl
push
call
mov
inc
lock
mov
sbb
adc
pop
dec
adc
shrl
gs
xor
mov
scas
out
outsl
jbe
mov
in
xlat
jecxz
adc
jge
or
aad
icebp
sarb
xchg
jmp
xchg
es
lret
in
add
xchg
out
add
mov
cmp
stos
inc
dec
lret
stc
and
pop
xchg
fwait
xchg
or
adc
add
icebp
mov
xor
xor
cli
push
ret
dec
adc
cmpsb
into
mov
stc
test
sub
add
mov
cmpsb
cwtl
xchg
shll
mov
jp
lock
push
stc
jle
cmpsb
out
xor
les
mov
mov
push
push
add
iret
test
mov
fucom
sbb
cmp
inc
adc
and
cmpsb
cmpsb
inc
es
rorb
sbb
loope
cmpsb
mov
es
rorb
jo
mov
ret
mov
mov
add
rcr
add
enter
mulb
dec
xor
ret
dec
mov
dec
icebp
cltd
inc
sbb
push
ds
cmpsb
out
dec
fdivrs
sbb
lcall
cmpsb
xchg
iret
inc
cmp
stc
and
shlb
and
adc
xor
enter
mov
mov
adc
decb
cmpsb
xchg
push
rol
inc
pop
sahf
mov
loop
push
out
xchg
fxtract
in
adcb
cwtl
sub
cmpsb
int3
faddp
push
sbb
push
mov
adc
enter
stos
lret
mov
pop
ds
cmpsb
sti
fs
cmc
or
test
stos
xchg
mov
mov
dec
mov
push
mov
cmp
repz
bound
cmp
fdivs
lcall
xchg
and
flds
lds
push
cmpsb
mov
bound
call
ljmpw
pcmpeqd
lret
push
arpl
xchg
adc
pop
or
or
aam
sub
mov
lret
data16
or
aaa
test
inc
and
add
sahf
out
es
dec
xchg
jb
add
inc
push
jbe
loopne
shrl
inc
out
adc
pop
fwait
bound
adc
pop
mov
pop
adc
jle
cmp
pusha
shll
lcall
call
pushf
fidivrl
jmp
dec
add
inc
inc
xlat
in
shrb
decb
cmpsb
icebp
out
mov
sub
or
rolb
cmpsb
mov
push
rorl
inc
test
shrb
adc
mov
into
bound
mov
adc
ficompl
rol
inc
rol
mov
rorl
pop
jae
mov
loop
xor
mov
push
add
fcmovbe
inc
pop
testl
fidivrs
inc
inc
cmp
inc
sbb
icebp
xchg
data16
int
jg
xchg
pop
fwait
add
adc
aam
jno
fmul
jge
inc
inc
nop
xor
adc
enter
inc
push
imul
cmpsb
repnz
into
mov
add
enter
ss
ss
out
rcpps
decl
movsl
rclb
shl
daa
stc
xor
out
addb
ficomps
jle
add
jno
mov
mov
mov
enter
fcomps
ficoms
push
lret
dec
cmp
aas
inc
adc
int
pop
jecxz
loopne,pn
lret
insb
fldlg2
mov
hlt
push
xchg
xchg
and
mov
mov
push
out
fdivs
in
mov
in
mov
lds
add
inc
xor
mov
sbb
fildll
pop
cmpsb
push
gs
call
push
push
shlb
sbb
jg
mov
add
roll
or
push
xchg
ret
add
shl
cwtl
sbb
psubusb
in
les
adc
dec
xchg
mov
addr16
mov
lods
pop
cld
and
mov
out
push
push
pcmpgtb
loop
shlb
int3
xorb
push
int
inc
jle
add
in
adc
push
pop
push
sti
jle
inc
mov
dec
pop
pop
push
pop
dec
push
pop
mov
daa
push
insb
loopne
jmp
push
out
mov
pop
imul
bnd
add
arpl
inc
add
lret
cmpsl
pop
mov
fsubrs
in
hlt
out
or
xchg
test
cmp
lret
lock
repnz
adc
xlat
xchg
adcb
fcmovb
jbe
fldl
pop
sarb
push
and
out
dec
push
push
arpl
jp
ja
mov
mov
inc
dec
inc
sahf
push
mov
rcrb
cmp
jl
std
mov
inc
jo
xor
inc
push
mov
loop
mov
cmpsb
xchg
ljmp
jp
ja
sub
pop
out
dec
or
push
cs
test
push
sub
inc
dec
ljmp
paddd
lsl
fisubs
fnsetpm(287
aad
stos
pop
ljmp
cmp
bound
out
xorl
lret
inc
shr
and
in
add
cli
pusha
rolb
inc
and
add
inc
loop
sub
addb
outsb
ds
push
inc
aas
orb
sub
ja
cmovo
pop
cld
out
and
loopne
lds
mov
push
push
stc
sbb
pop
mov
push
pop
cmp
inc
jle
xor
pop
xchg
jno
add
fwait
mov
sub
clc
jmp
into
push
repz
xchg
push
adc
dec
sbb
jno
ljmp
push
pop
repnz
push
jns
mov
jp
inc
dec
push
pusha
lret
lds
addb
lock
add
push
fcmovnbe
cmpsb
lret
aas
mov
xor
push
jmp
cmp
push
es
testb
mulb
into
inc
cmc
sti
sbb
mov
lods
mov
daa
pop
jns
enter
shll
adc
pusha
leave
lret
enter
inc
stos
push
rorl
push
sar
out
iret
in
sub
js
aad
pop
mov
jo
ds
fiadds
pop
jo
mov
and
xchg
jecxz
push
aas
xchg
inc
out
add
enter
int
adc
in
idivl
ficoml
sbb
jno
inc
pop
add
data16
in
outsb
shlb
sbb
add
jns,pt
outsb
add
out
add
shr
ud0
loop
call
mov
lock
rorl
adc
mov
into
dec
dec
rorl
movl
push
sub
cli
pop
addl
jb
pop
inc
add
in
pop
test
pop
rol
jb
or
jae
inc
cmpsb
cmpsl
xlat
aad
fdivrs
inc
xchg
cmpsb
pop
out
or
std
loop
jl
dec
inc
mov
inc
pop
bound
inc
loopne
outsb
xchg
call
pop
enter
fistps
fldenv
and
cmp
int3
mov
adc
sysret
inc
into
loopne
pop
loope
into
outsb
sbb
mov
aad
adc
dec
pushfw
loope
sahf
adc
adc
jne,pn
adc
int
outsl
xchg
xlat
lock
mov
loopne
filds
aad
rcr
sti
int
dec
xchg
push
xlat
add
dec
lea
cmpsb
in
cmpb
hlt
lret
add
loopne
push
or
jbe
cmpsb
in
push
and
out
fldt
cmpsb
mul
jns
data16
xchg
mov
cltd
mov
lock
fucomp
cmpsl
mov
xchg
mov
cmpsb
fcoml
or
fisubs
cmp
mul
or
test
inc
cmpsl
jmp
dec
loope
add
in
add
fmul
inc
sub
cmp
cli
rorl
jecxz
ret
ret
cmpsb
push
mov
ds
cmp
cli
xor
daa
cmpsb
rcrl
test
in
mov
int
in
ret
inc
ds
popa
mov
pusha
rorb
xor
rorb
or
pop
dec
fbld
data16
ret
push
data16
std
in
cmp
pop
ret
add
sub
and
pop
jmp
inc
adc
pop
fwait
pop
in
and
xlat
ds
cmpb
inc
pop
dec
scas
xchg
aad
andb
mov
shlb
nop
leave
pop
ds
ret
inc
xchg
mov
rorb
leave
jb
es
bound
int3
mov
inc
or
mov
sbb
into
cmp
cmp
mov
xor
mov
add
xlat
or
mov
negb
outsl
jge
rcll
dec
xchg
sub
popf
bound
ja
mov
adc
add
add
in
adc
xor
stos
mov
dec
push
hlt
out
outsl
pop
adcb
push
mov
fists
popa
ret
dec
add
pop
jb
or
cli
inc
cmp
cmpsl
inc
inc
mov
inc
adc
add
inc
mov
push
pop
rclb
out
jmp
xor
inc
lcall
xor
cli
notb
push
add
inc
mov
add
inc
loop
mov
hlt
fiadds
dec
shlb
push
sbb
adc
inc
repnz
lods
or
loopne
imul
repnz
int
mov
push
mov
pop
add
xor
push
mov
jbe
add
repnz
xchg
adc
testb
cmp
push
push
mov
es
mov
notl
aad
addb
in
fidivl
mov
and
cld
add
es
xchg
xorl
sar
movsl
adc
fsubrp
or
xor
and
jmp
cmc
test
fwait
pop
out
pop
dec
cmp
scas
dec
out
in
notb
in
mov
add
sbb
xchg
cmp
mov
das
pop
rclb
add
add
pop
cmp
push
push
fiadds
cmc
xor
sbb
lock
icebp
pop
jmp
cmpsl
loope
out
or
dec
cmp
icebp
dec
mov
ret
loope
dec
adc
adc
pop
popf
fisttps
mov
into
call
or
iret
mov
subb
rorl
ljmp
adc
out
orb
mov
in
and
add
iret
dec
mov
ror
add
shl
out
push
rorl
dec
adc
jbe
enter
rolb
inc
cmp
aas
xadd
ss
push
sbb
fcomip
or
add
decb
or
push
rclb
dec
mov
sbb
fadds
ljmp
dec
add
out
dec
scas
dec
adc
fcmovbe
add
inc
loop
mov
dec
inc
rorb
add
loopne
std
cmpsb
xchg
and
mov
das
mov
sub
or
and
ljmp
scas
pop
iret
and
dec
shlb
dec
ret
adc
inc
adc
xchg
shlb
jecxz
jle
mov
dec
adc
sti
cmp
into
adcl
sub
sub
xchg
xchg
insl
inc
inc
mov
ret
cmp
inc
pop
sub
xor
sahf
dec
adcb
loopne
push
iret
dec
adc
inc
test
shll
jle
lret
loop
stc
and
jbe
and
pop
inc
loopne
push
shrb
and
loopne
dec
jae
lret
push
xchg
mov
js
test
daa
fwait
lret
jmp
add
adc
mov
and
sarb
inc
es
xchg
dec
or
std
lret
xlat
add
aad
ret
or
andb
rolb
insl
enter
jecxz
xchg
inc
rclb
pop
mov
mov
sub
fwait
and
xlat
pop
rol
push
scas
xor
stos
xchg
jnp
xchg
fidivrs
mov
push
sbb
icebp
mov
pop
js
out
add
xor
sahf
lcall
mov
xchg
cmp
outsb
aas
pop
rorb
std
jae
or
push
fisttps
dec
incb
test
loop
inc
inc
jnp
enter
push
fnstsw
ds
push
js
test
jle
mov
in
pop
rolb
xchg
inc
mov
ror
fists
into
shr
inc
notl
jmp
cli
add
shrb
repnz
test
adc
push
pop
xchg
jge
xchg
rcrl
cmpsb
rolb
incb
fs
loop
jbe
push
test
es
cs
dec
jae
ss
jne
add
and
adc
cmpsb
jmp
pop
divb
addb
aam
sub
stos
push
fisubrs
sbb
insb
cltd
sub
fwait
sbb
movb
leave
or
dec
ds
imul
jle
es
ljmp
push
cmp
sub
push
arpl
iret
sahf
push
pop
sub
outsl
lcall
mov
out
push
dec
mov
outsb
cli
push
sub
ret
adc
fs
js
outsl
dec
or
shlb
shll
lods
sbb
jp
negb
adc
inc
dec
sbb
sbb
js
pushf
inc
pop
shll
aaa
in
shl
aam
mov
loop
inc
in
inc
xor
out
xchg
lock
bound
iret
jae
in
cmp
mul
lret
add
into
add
roll
push
fucomp
inc
xorb
ja
rclb
enter
ret
jecxz
push
into
movsl
mov
push
push
arpl
sub
xchg
dec
int3
daa
add
sbb
xchg
imul
inc
push
ljmp
push
jl
rorb
cld
es
fcmovnbe
sbb
in
mov
test
push
scas
jp
rorb
into
pop
jge
xor
push
inc
mov
rcrb
xchg
sahf
inc
pop
adc
jecxz
adc
icebp
jle
sub
xor
sub
inc
orb
xlat
cmp
inc
jge
pop
mov
lret
push
es
or
bound
inc
dec
xchg
fisubs
out
inc
mov
jge
sbb
jmp
xchg
pushf
rclb
cltd
xchg
xor
test
int
cmp
int3
pxor
lea
jle
dec
lcall
aad
jno
sub
sub
fidivrs
add
sahf
popl
xchg
jmp
sbb
mov
lret
xor
add
and
cmpsb
loop
mov
mov
push
xor
test
push
cmp
lds
icebp
mov
lods
xchg
popf
mov
sbb
inc
adc
scas
call
jge
add
mov
leave
es
fidivrs
repnz
sar
dec
popa
dec
pop
pop
mov
rcr
xchg
lcall
sarb
push
pop
add
dec
cmp
mov
lods
idivl
cmpsl
jbe
addr16
inc
in
fwait
loopne
stos
and
cs
jmp
lock
inc
jg
sahf
inc
aas
sub
sbb
inc
gs
shlb
movsb
adc
dec
xchg
out
in
scas
inc
lahf
rol
inc
xchg
fwait
xchg
cmpsb
xchg
movsb
arpl
dec
or
or
jecxz
in
daa
mov
out
pop
xchg
out
pop
cmp
iret
push
pop
shlb
into
ffreep
aaa
aas
push
ljmp
add
sbb
dec
dec
jo
mov
sbb
rol
stos
and
out
fiadds
cs
inc
sub
cmpsb
bound
adc
jp
faddp
pop
jnp
push
inc
je
imul
shll
ss
push
int
inc
add
xchg
fmull
out
pop
mov
aam
or
jo
enter
les
xchg
xor
xor
mov
mov
aaa
in
and
daa
jbe
stos
mov
inc
call
mov
pop
test
pop
mov
xchg
push
inc
cld
push
xlat
push
push
xlat
jbe
push
sub
repz
push
dec
imul
adc
js
dec
adc
dec
or
mov
rclb
outsl
ret
into
flds
and
add
loop
arpl
orl
mov
repz
or
dec
popf
iret
push
into
or
jbe
add
hlt
dec
dec
xchg
add
not
xchg
rcl
test
out
in
into
cs
sub
cmc
pop
mov
or
cltd
jp
and
jbe
in
out
jmp
push
daa
sbb
arpl
jmp
pop
outsb
ljmp
add
repnz
ret
movsb
in
out
decb
mov
or
mov
ljmp
adc
jmp
lret
dec
cmp
jmp
sarl
push
add
out
sub
jmp
inc
out
daa
sub
or
xor
not
sbb
or
xor
fiaddl
in
or
adc
mov
mov
rcll
cmp
movsb
add
mov
adc
xor
pop
xchg
cmp
imul
dec
pusha
pop
inc
and
das
xchg
in
rcll
scas
sbb
or
out
mov
push
mov
icebp
cltd
es
test
loope
les
mov
xchg
add
jp
jbe
data16
push
inc
mov
jo
les
loopne
push
push
wrmsr
pusha
gs
ds
js
addr16
loopne
aad
hlt
jmp
dec
add
ftst
and
cmpb
dec
add
subb
sbb
orb
cs
or
out
pop
int
or
inc
jbe
cli
pop
xor
jp
xor
adcb
push
xchg
enter
inc
cs
popa
ljmp
pop
push
or
push
pop
adc
or
std
sub
es
push
mov
push
ljmp
dec
add
inc
adc
push
mov
outsl
aas
inc
add
ds
pop
push
inc
mov
pop
fsubrs
fwait
pop
sbb
dec
rorl
or
or
xchg
or
mov
stc
out
push
insb
mov
scas
or
mov
fcmovne
ret
ja
add
cmp
jno
popa
outsl
and
adc
stos
movsl
in
push
jl
data16
add
fucomip
out
dec
gs
inc
push
dec
push
add
pop
add
inc
pusha
push
bound
roll
shrl
fstps
mul
mov
sti
sbb
ljmp
cs
bound
lods
inc
mov
add
daa
jo
or
mov
mov
das
cmovs
arpl
ss
sub
stos
movsb
scas
add
inc
mov
lods
aaa
je
jmp
aad
mov
pop
repz
xchg
and
in
notl
test
cmpsb
add
jae
loopne
ret
jle
sbbb
dec
pop
rolb
popl
loop
fadds
dec
loopne
sahf
popa
mov
lods
and
mov
popf
and
mov
imul
ljmp
and
cmp
or
cwtl
xor
jbe
aas
push
rolb
mov
pop
jle
mov
inc
pop
cs
sbb
add
pop
mov
xchg
andb
adc
cmp
mov
cmpsl
idivl
mov
lds
mov
rsqrtps
scas
jno
dec
cmp
shlb
pop
fimuls
sbb
aas
jno
jle
add
rcrb
dec
sub
insb
jecxz
and
shl
dec
out
or
mov
fucomi
xor
pop
adc
add
push
jbe
or
or
jb
pop
fwait
out
nop
iret
and
call
call
push
shl
aaa
rol
std
push
lret
sub
jl
pop
shr
adc
lret
pop
xchg
xlat
loopne
add
and
mov
mov
rcl
xchg
jp
or
jb
ret
lcall
cmp
rorl
outsb
fidivrs
call
sarb
movd
push
push
adc
mov
push
in
mulb
fucomi
mov
jbe
xor
and
push
loopne
and
add
jmp
std
out
jg
rclb
dec
inc
xchg
dec
xchg
inc
xor
push
xchg
add
xchg
outsb
xor
add
xor
inc
and
pop
jle
jl
sub
test
int3
cmpsb
int3
pop
rol
lea
fbld
idivb
int3
rclb
add
mov
mov
inc
cmpsb
pop
xor
sar
pop
out
bound
fnstcw
push
inc
dec
cmpsb
jl
mov
les
mov
rcrl
stos
push
xchg
movsl
mov
inc
mov
in
cmp
cli
jb
sub
push
outsb
mov
adc
aaa
in
cmp
jb
rcr
push
add
outsb
shrl
sub
in
rolb
xchg
pop
ja
jmp
out
adc
fsubrs
push
stc
mov
mov
ja
inc
jl
lcall
daa
xchg
rorl
and
push
sahf
sub
mov
push
data16
pop
sub
addl
or
or
sbb
stos
mov
mov
popf
nop
adc
data16
adc
les
dec
fisubs
decl
jb
les
mov
mov
xchg
add
aaa
inc
pushf
test
pop
jmp
pushf
int3
and
jb
xchg
or
dec
aaa
cmpsb
repz
std
imul
adc
push
addr16
xchg
dec
lods
or
jecxz
testl
ret
push
das
ror
in
addr16
dec
or
mov
int3
or
aam
aam
fldcw
or
repz
sbb
push
rcrb
jl
repz
fcompl
mov
mov
and
dec
mov
inc
mov
mov
xor
mov
loope
or
xchg
or
dec
jmp
out
sbb
jp
and
dec
mov
sub
pusha
out
cmpsb
test
mov
in
scas
into
shlb
sarl
leave
jo
out
addr16
adc
rcr
push
pushf
ret
clc
fisubs
xchg
or
shufps
push
rcrb
inc
push
mov
stos
adc
andl
scas
pusha
ss
or
dec
iret
shlb
xlat
cli
xchg
in
in
out
jg
lret
ret
int3
pop
fldl
xchg
ss
or
pushf
jae
lcall
outsl
inc
push
xchg
fs
xchg
push
pushl
push
pop
lahf
inc
rolb
outsb
sub
push
lods
lock
cmp
mov
push
mov
add
outsl
mov
add
bound
mov
ffreep
sar
cld
jae
lret
mov
xchg
lds
jae
jns
fsubs
mov
add
cmpsl
mov
pushf
mov
out
jo
mov
insl
shr
aam
jnp
inc
scas
imul
mov
sub
bound
mov
cmp
or
sub
push
mov
call
sub
cmpb
movsl
std
xchg
cmp
icebp
mov
xlat
lds
cmpsb
inc
mov
mov
cmp
mov
testb
cmovo
out
cs
push
sub
andb
sub
xchg
push
adc
or
push
popa
add
sahf
dec
mov
rolb
lret
xor
je
inc
cwtl
lock
bound
sbb
into
cmp
xchg
outsb
jle
decl
in
pop
dec
repz
adc
data16
cmpsl
mov
mov
popa
sub
int3
adc
loopne
loopne
add
lock
popa
jge
loope
incb
xchg
mov
std
out
mov
std
stos
push
and
shl
mov
test
xchg
or
lcall
and
fs
out
test
scas
inc
mov
sbb
mov
fwait
mov
xchg
pop
cltd
sub
shlb
rcr
mov
inc
xchg
popf
ret
mov
mov
dec
call
stos
inc
xchg
outsb
mov
loop
jle
dec
cmp
data16
imul
notb
lahf
lret
mov
lods
adc
xchg
cmpsb
ret
mov
jo
jecxz
xorl
xchg
push
aam
subl
sub
inc
ret
in
mov
pop
cmp
stos
sbb
call
test
adc
mov
hlt
das
or
in
or
std
sub
pop
xchg
dec
adc
mov
dec
js
ljmp
xchg
ret
push
inc
cltd
dec
dec
loope
pop
adc
fs
ret
mov
int
inc
in
xor
pop
pop
xor
ljmp
add
lds
ret
jb
push
popf
pop
pxor
das
inc
int
pop
dec
cltd
notb
lret
xchg
shrl
jne
outsb
push
cli
push
mov
into
bswap
xor
inc
jbe
sbb
aad
xchg
gs
and
inc
and
out
cmp
filds
inc
push
push
dec
repnz
or
call
cwtl
out
loop
sub
sarb
pop
and
add
adc
es
and
inc
rcr
xchg
add
cmp
aas
in
adc
cmpsl
lods
hlt
jmp
and
rclb
es
bound
mov
mov
push
jg
pop
xchg
call
xchg
sbb
add
out
insb
fcomip
and
shrl
sahf
out
sbb
les
inc
loopne
adc
mov
xchg
imul
scas
rcl
in
outsl
or
adc
in
adc
or
lods
adc
or
out
in
or
mov
inc
dec
daa
jo
in
addr16
mov
es
ror
pop
ret
pop
or
out
inc
loop
cmp
mov
mov
bswap
leave
loope
in
mov
aad
jb
xchg
push
sarb
es
fsts
leave
imul
cmpsb
mov
cmp
ficoms
es
push
push
mov
js
lcall
ds
dec
push
cmp
in
adc
frstor
icebp
push
addl
cmp
cmpsl
xchg
pushf
mov
cmpsb
loope
ret
jb
mov
mov
sahf
rcrb
ror
sarb
mov
in
adc
adc
inc
push
sahf
nop
pop
stos
mov
es
mov
sub
push
push
adc
add
sub
inc
dec
mov
cmpsb
pop
xchg
or
push
mov
pop
xchg
ljmp
std
cld
jl
or
ss
pop
iret
leave
aas
push
dec
push
lds
pop
adc
inc
rol
cmp
es
mov
or
adcb
add
dec
inc
mov
js
or
cmp
loope
repz
test
call
add
inc
push
negl
xor
add
pop
lods
paddw
or
cs
jecxz
enter
imul
and
and
in
cwtl
ror
add
and
shll
decb
lret
clc
fs
dec
les
cltd
into
dec
mov
jo
cltd
pop
inc
mov
inc
jle
imul
loop
test
sahf
sbb
jle
test
sbb
adc
xchg
in
adc
arpl
cmc
into
outsl
and
inc
les
lret
dec
or
cmpsb
stc
dec
sub
out
jns
and
pop
or
and
loopne
pop
aad
add
cmp
adc
fimull
ret
mov
fucomi
mov
jl
mov
push
mov
nop
mov
jb
movsl
xchg
mov
sbb
mov
add
sbb
das
ds
sbb
fsts
inc
adc
insb
out
ret
mov
and
scas
pop
add
into
jp
mov
imul
mov
loop
leave
xchg
mov
addb
or
ret
aas
movsb
push
xor
lahf
leave
dec
out
out
popa
addr16
dec
push
xor
sub
rcr
mov
xor
pop
sub
lret
jo
push
add
mov
mov
and
in
mov
add
cs
outsb
into
push
inc
pop
and
pop
or
addr16
lods
xor
dec
addr16
pop
movb
dec
sahf
rclb
or
push
sub
sbb
call
ret
call
push
inc
adc
inc
jnp
cmp
hlt
push
push
pop
rol
pop
xor
and
jg
pop
inc
add
dec
push
pop
dec
push
pop
pop
mov
add
inc
push
imul
jge
cmp
xchg
scas
in
dec
jb
adc
clc
out
arpl
lock
fsub
xchg
sbb
loop
xchg
xor
adc
stos
movsb
or
adc
js
outsb
mov
jecxz
test
mov
lret
js
enter
sbb
fpatan
addl
and
inc
test
mov
cmp
cmpsb
jecxz
and
loope
jp
lcall
pushf
add
in
shlb
in
cli
push
psubw
jecxz
xor
inc
pop
fwait
sub
movl
leave
fisubs
pop
dec
and
mov
push
fucomp
inc
cwtl
pop
imul
sahf
jecxz
hlt
cmp
enter
lret
cmp
ljmp
sbb
daa
ret
pop
push
add
lret
mov
inc
cmpsb
in
in
popw
xchg
lret
mov
ljmp
enter
fisubl
inc
inc
adc
adc
inc
nop
or
push
lret
or
dec
in
xchg
jae
pop
and
adc
adc
pusha
enter
cmp
cmpsb
push
pushfw
jecxz
xor
push
iret
aam
sti
add
fists
jb
sbb
xchg
fcom
inc
rclb
push
push
rclb
inc
mov
or
cmpsb
lods
outsl
call
rolb
xlat
push
lret
cmpsl
das
into
cli
cs
popa
aaa
movsb
jge
mov
xchg
cmp
jp
jno
xor
rcrb
and
fwait
into
mov
xor
jo
outsb
fcompl
int
arpl
lcall
pop
rcrl
xor
xchg
mov
loop
jo
dec
inc
out
pop
pop
dec
mov
xor
cmpsb
insb
mov
xchg
sar
in
pop
mov
gs
or
mov
inc
insb
mov
sbb
cmp
rol
ja
cmp
mov
dec
jp
in
pop
xchg
xor
loopne
fsubl
fiadds
ja
orb
jne
lret
gs
mov
mov
mov
or
jg
rclb
and
sarl
sbb
stc
adc
cmp
insl
das
jbe
mov
jp
dec
leave
addl
and
dec
repnz
ror
and
add
jno
pop
in
cli
mov
and
lcall
js
stc
xchg
ja
sbb
lea
bound
loopne
mov
push
dec
shr
leave
pop
xor
and
and
push
push
sbb
inc
push
into
aam
mov
icebp
cltd
loopne
inc
sbb
dec
ds
pop
divb
cmp
neg
mov
mov
pop
rorl
sti
iret
cmp
loop
jae
aad
mov
inc
mov
in
jecxz
jne
int
push
push
pop
pop
ja
sarl
sbb
mov
int
inc
imul
pushf
out
leave
rcr
push
cltd
cmp
cmpsb
mov
xchg
ficomps
scas
adcb
jge
mov
cmp
sbb
inc
stc
test
xor
sbb
pop
xchg
gs
int3
addr16
sbb
and
and
bound
mov
incl
fsubl
call
cmp
shrl
lods
adc
lret
mov
fstpt
xor
sti
icebp
jle
test
les
decb
lcall
jp
jb
outsb
shr
push
loopne
xchg
add
or
add
ss
jbe
xchg
les
cmpsl
xor
sub
es
loop
jl
je
push
jb
xor
and
xchg
cmp
jnp
in
pop
popa
je
or
xchg
dec
jge
sti
nop
sub
test
scas
and
xchg
shll
loopne
inc
fimull
jbe
or
lds
stc
push
into
xor
cmpsb
out
js
out
in
bound
idivl
cmp
lret
out
loop
or
dec
sub
outsb
xchg
add
inc
pop
cmpsb
push
sub
push
xor
es
popf
pusha
jb
cs
iret
and
imul
and
arpl
out
daa
dec
xor
lea
fwait
ja
faddl
mov
push
push
ficoms
jo
rcrb
jnp
test
xor
add
cmp
xchg
pop
or
ret
mov
dec
or
or
add
dec
push
test
jne
xchg
js
add
pop
sar
sahf
ja
mov
adc
add
sub
rorb
push
insb
dec
jl
mov
sahf
mov
ret
shr
loop
push
adc
out
jp
ds
inc
loopne
pop
add
nop
shlb
mov
loop
jg
jno
shl
iret
in
clc
loop
push
adc
lret
out
ss
and
xor
inc
lock
fbld
outsb
push
jp
mov
lcall
fsub
out
cld
or
shlb
loop
or
xchg
push
xlat
je
push
dec
xlat
xchg
leave
xlat
lcall
inc
out
enter
loopne
call
adc
and
ss
inc
dec
pop
loopne
and
pop
and
cmpsb
and
and
and
idiv
ja
mov
pushf
and
xlat
daa
pop
and
xlat
mov
faddp
addb
in
out
sar
loop
push
adc
and
jnp
mov
in
out
adc
or
cmp
lcall
repz
adc
inc
mov
pop
push
xchg
out
sbb
jae
sub
pop
xchg
loope
xor
ss
in
mov
mov
js
mov
add
pusha
stc
cmc
movzwl
shl
pusha
bts
mov
push
jmp
pushl
popl
pushl
jmp
inc
call
jmp
xor
test
insl
adc
out
mov
jecxz
sub
jp
enter
out
lods
xchg
lods
push
jbe
cmpsb
fnstcw
hlt
orl
movsl
ds
je
lret
add
loope
adc
sub
push
push
out
lds
repnz
leave
push
outsl
aad
jb
dec
add
leave
stos
mov
cmp
add
xchg
stc
ret
sarl
fildll
icebp
push
push
lea
push
mov
pushf
movsbw
movzbw
cwtl
pushl
popl
bswap
movsbw
seto
jmp
lea
jne
test
dec
add
mov
cmc
push
cmc
jmp
pushf
xchg
pushl
mov
jmp
pushf
lea
ja
mov
inc
dec
not
push
movb
inc
ror
xchg
movzbw
btr
bsf
mov
shl
pusha
sar
mov
movb
mov
btr
mov
test
movl
pusha
sub
lea
js
push
rep
bswap
movl
jmp
sub
imull
mov
sbb
test
out
fs
insb
aas
xor
add
ret
pop
xchg
cmp
mov
filds
push
jne
or
add
xchg
cmpsb
adc
outsb
filds
int
cli
outsl
adc
mov
add
inc
mov
sbb
mov
sub
and
rol
lahf
adc
mov
lds
pop
jae
into
outsl
shrb
test
mov
popa
add
inc
andb
push
jle
dec
push
adc
mov
je
mov
loope
lret
mov
mov
xor
xor
mov
push
out
mov
lods
test
adc
push
enter
dec
mull
fimull
xchg
jp
aas
and
and
daa
jne
jo
cmp
movb
lea
call
pusha
cmp
pusha
lea
jae
pusha
pusha
clc
call
pushf
pusha
jmp
sub
clc
pusha
pushl
popl
mov
test
cmp
mov
pushf
lea
ja
bt
shr
and
rol
sub
add
rcl
add
adc
add
sar
cmp
mov
shl
mov
clc
pushf
bt
repnz
movw
jmp
jae
shrd
shl
mov
btr
dec
clc
mov
pushf
mov
mov
clc
pushl
cmc
xor
jmp
call
je
cmc
stc
pushf
pusha
sub
push
test
cmp
call
mov
lea
lea
pushf
mov
movb
movl
jmp
movb
jmp
lea
jne
call
popf
gs
sub
lods
shll
inc
mov
xchg
test
insl
rcrb
cmp
adc
faddl
xor
xchg
push
inc
jb
push
cmpsb
das
adc
pop
mov
ja
push
cli
inc
or
sub
xchg
mov
cld
ffreep
lods
mov
mov
bound
imul
fbstp
adc
jmp
pushf
popl
jmp
ror
call
pushl
popl
movl
mov
lea
jmp
push
mov
pushf
push
pushf
lea
jmp
aad
pushf
aam
and
mov
pusha
sub
call
lahf
setae
setg
movsbl
mov
pushf
mov
push
mov
jmp
pusha
pushl
popl
pushf
pushf
push
lea
jmp
movb
pushl
jmp
movzbl
call
lea
jne
pusha
mov
pushl
popl
mov
lea
jmp
jmp
and
cmp
lea
btc
mov
clc
cmc
sub
call
call
call
bt
cmc
sub
pushf
mov
push
lea
jmp
pushf
jmp
rep
xchg
cmc
adc
pushf
mov
adc
shrd
btc
cmp
mov
jmp
jmp
call
pushf
pushl
popl
mov
movl
movw
lea
jmp
shl
clc
mov
pushf
test
add
pushf
push
pushf
lea
jmp
pushf
mov
xor
pushf
clc
xchg
bt
test
pushf
add
test
pushf
stc
pushf
add
pushf
jmp
jmp
movsbw
adc
mov
pusha
add
pushf
mov
pushf
pushf
popl
movl
pushf
pushf
pushl
popl
pushf
lea
jmp
pushl
popl
push
lea
jmp
pushf
pushl
popl
mov
pushl
pushf
pushf
lea
jmp
mov
push
call
ror
pushf
not
jmp
pushl
pushf
mov
mov
pushf
lea
jmp
bt
pusha
cmp
sub
jmp
pushl
pushf
popl
pushf
jmp
sub
call
shr
not
jmp
pushf
popl
jmp
call
pushf
not
dec
shrd
test
and
xor
jmp
bswap
bsr
btr
cmp
mov
bt
mov
or
add
pushf
mov
pusha
mov
movb
mov
pusha
lea
jmp
pushl
popl
pushf
pushf
movl
push
lea
jmp
rcr
push
jmp
rcl
sub
das
aas
mov
stc
pushf
shl
mov
pusha
add
movb
mov
pusha
movl
pushf
lea
jmp
sub
bt
jmp
shl
cmc
movzbl
jmp
pushf
mov
pushf
pushf
push
lea
jmp
jmp
movb
push
call
pushf
pusha
mov
pushf
pushl
pushl
lea
jmp
movb
add
push
pushl
inc
push
mov
ror
cmc
call
call
movb
mov
movw
pushf
pusha
pushf
mov
push
push
pushl
mov
lea
jmp
mov
movb
mov
movb
push
lea
jmp
pushf
and
mov
bt
call
shl
pusha
movb
jmp
rcr
mov
push
shr
neg
xor
sub
cmc
pop
ror
jmp
call
sub
cmp
bt
add
jmp
clc
clc
ror
push
push
add
movb
cmc
stc
call
pusha
mov
push
mov
mov
movb
pusha
lea
jmp
sub
pushf
mov
pushf
pushf
mov
lea
jmp
pushf
push
call
push
dec
jmp
call
call
stc
xor
test
sub
push
call
movsbw
bswap
pusha
or
mov
bsf
sub
jo
stc
btr
mov
call
inc
movb
pushf
decl
jmp
pushf
mov
movb
lea
jmp
push
pushf
mov
pushf
push
push
pushl
lea
jmp
mov
pushl
lea
jmp
lea
jne
setle
jmp
inc
pushf
lea
jmp
call
pusha
movb
mov
pusha
pushl
mov
pushl
lea
jmp
push
stc
test
sub
call
push
mov
call
mov
push
mov
lea
jmp
pusha
cmp
and
jmp
jmp
mov
pushf
mov
push
mov
mov
push
movb
movw
movb
lea
jmp
pushl
popl
pushf
pushf
pushl
lea
jmp
cmp
pushf
shrd
push
push
push
mov
pusha
call
call
not
rol
jne
movsbw
mov
adc
clc
ror
pushf
mov
pusha
movb
clc
pusha
sub
test
bt
cmc
push
shl
jmp
mov
mov
mov
push
pushf
lea
jmp
rol
movsbw
movzbw
mov
call
xchg
mov
xor
pusha
pushf
sub
xor
movzbw
call
jmp
call
mov
cmc
sar
sets
ror
mov
mov
clc
call
pushf
popl
movw
jmp
call
add
push
bt
sub
push
jmp
push
pushf
movb
lea
jmp
mov
adc
mov
test
pusha
push
add
call
mov
push
pushl
lea
jmp
call
not
pop
bswap
setb
movzbw
dec
add
neg
add
inc
movzbl
mov
mov
push
jmp
mov
pushf
pushf
pushl
jmp
jmp
pop
neg
pop
shl
pop
das
pop
xadd
pop
xchg
popf
pusha
mov
pusha
lahf
lahf
mov
lahf
mov
movsbw
bswap
mov
mov
movw
mov
mov
pushl
ret
aaa
mov
movsbw
shl
mov
jmp
pusha
mov
pusha
mov
push
lea
jmp
pushf
stc
bt
add
call
rcl
mov
pushf
cmp
pushf
add
push
call
pushf
popl
call
xchg
setns
pop
repz
popl
not
shr
xadd
sub
xchg
lea
xadd
stc
ror
mov
not
btr
shrd
mov
lea
mov
jmp
pusha
movw
mov
lea
push
push
pusha
call
pushf
movb
pusha
mov
push
pusha
lea
jmp
mov
mov
jmp
dec
btc
mov
shl
lahf
pop
setge
dec
jmp
jmp
test
pushf
shr
call
lea
movzbw
mov
mov
push
pusha
pusha
lea
pushf
mov
call
call
call
pushf
popl
jmp
pushf
jmp
pusha
movw
pushf
mov
pushf
pushf
pushl
lea
jmp
mov
jmp
add
push
mov
pusha
lea
jmp
sar
btr
clc
bsr
rdtsc
cmp
cmc
sub
pushf
call
mov
call
call
pusha
jmp
shrd
mov
test
cmp
call
mov
push
mov
lea
jmp
mov
mov
pushl
popl
push
lea
jmp
add
add
movb
mov
pusha
push
mov
lea
jmp
lea
movw
push
jmp
test
mov
push
sub
pushl
pusha
lea
jne
pusha
test
sub
push
pushf
call
pushf
popl
mov
pushl
pushf
call
xchg
jmp
pushf
mov
push
lea
jmp
add
mov
pusha
pushf
popl
jmp
add
push
bt
pushf
pushl
popf
pushf
movw
pusha
push
lea
jmp
call
pushf
mov
movl
pushf
lea
jmp
lea
jne
bsf
bsr
mov
xorb
bswap
pushf
bswap
mov
push
push
pusha
movb
lea
jmp
pusha
mov
mov
mov
mov
pushf
lea
jmp
pusha
call
pushl
mov
pushl
push
mov
pusha
lea
jmp
mov
movw
pushl
movb
push
lea
jmp
pushl
popl
mov
push
movl
lea
jmp
add
clc
shld
push
pushf
mov
mov
push
pushf
popl
pushf
pushl
popl
push
lea
jmp
call
sub
pushf
call
cmc
sub
test
clc
cmc
and
pushf
jmp
pusha
mov
pushf
pushl
lea
jmp
pushf
cmp
call
and
mov
call
lea
jg
mov
jg
mov
pusha
lea
jmp
dec
test
xor
pushf
mov
pushf
clc
cmp
sub
jmp
pushf
mov
bt
cmp
mov
pushf
cmc
test
not
stc
bt
not
push
pushf
push
sub
bt
call
jmp
mov
mov
cwtl
lea
movzbl
mov
pushf
pushf
divl
pusha
pushl
mov
pushl
mov
jmp
call
mov
pushf
popl
call
call
bswap
cwtl
push
setb
not
mov
pushf
pusha
lea
cpuid
pushf
sub
pushf
pusha
cmpl
pushf
jmp
mov
mov
lea
pusha
push
pushf
xchg
mov
movzbw
jmp
mov
jmp
mov
inc
pushf
call
push
or
movzbl
cmc
bt
sub
pushl
jmp
pushf
neg
jmp
pushf
mov
cmp
mov
cmp
bt
pusha
add
jmp
not
clc
pushl
popl
shl
mov
sub
cmp
movl
bsr
stc
mov
bsf
neg
ror
xchg
lea
ror
rol
btc
and
sub
add
dec
bts
lea
jmp
rcr
lea
sub
shl
xor
mov
pusha
clc
btr
rol
movsbw
bts
clc
seto
neg
pushf
cmp
inc
btc
and
and
pop
mov
cmp
add
pushf
push
mov
pushl
pushf
mov
lea
jmp
call
movzbw
mov
push
pushf
cld
pushl
movb
jmp
mov
movl
pusha
mov
mov
pushf
lea
jmp
pushf
mov
pusha
pushf
popl
jmp
pusha
pushf
push
inc
clc
push
xor
cmp
cmc
movb
mov
call
mov
mov
pushf
pushf
popl
pushf
movw
pushl
popl
movb
mov
movl
mov
lea
jmp
cmp
stc
sub
pusha
cmp
cmp
clc
shr
pusha
call
dec
and
bt
inc
mov
inc
neg
mov
cmc
pushf
sub
pushf
test
call
jmp
jmp
jmp
push
pusha
mov
pushl
pushf
popl
call
pusha
bt
and
movb
pusha
push
call
cmp
mov
cmc
pushf
test
pusha
add
call
mov
mov
pushf
pushl
xor
mov
cmp
add
clc
rol
cmc
clc
neg
call
xor
pusha
cmc
bt
xchg
push
bt
add
jmp
pushf
movb
call
jmp
push
push
mov
pushf
call
push
inc
cmp
bt
cmp
bt
neg
stc
test
jmp
mov
pusha
push
pushf
pushf
lea
jmp
pushf
pusha
mov
movl
mov
pushf
pushf
lea
jmp
push
jmp
shrd
dec
mov
mov
test
push
add
push
pushf
lea
jmp
jmp
rol
dec
mov
je
cmc
cmc
sub
push
mov
mov
movb
movw
pusha
lea
jmp
push
mov
pushf
mov
lea
jmp
pushf
popl
mov
pushl
popl
pushf
lea
jmp
btr
mov
call
push
call
bsf
shld
add
bswap
mov
ror
rcr
bts
sub
dec
inc
call
pushf
call
mov
mov
pushf
pushf
popl
push
pushl
popl
pushf
pushl
movb
lea
jmp
mov
push
lea
jmp
mov
pushf
lea
jmp
movl
test
shl
bt
shr
pusha
stc
push
clc
or
test
test
movl
xor
mov
push
call
jmp
shr
rol
mov
cmp
call
btc
rcl
ror
sub
mov
setae
inc
movsbw
mov
cmp
cmp
pusha
add
call
mov
pushf
mov
mov
pusha
pushl
ret
sub
jmp
pushf
add
mov
inc
clc
add
pushf
not
mov
movw
pushf
jmp
movsbw
pushf
popl
not
lea
bswap
push
cld
call
pushl
popl
call
jmp
jmp
sub
cmp
shl
call
push
cmc
cmc
jmp
adc
mov
test
and
pusha
test
cmp
jmp
push
mov
mov
lea
jmp
movsbw
cmp
mov
stc
push
add
pushl
mov
mov
jmp
inc
mov
bt
pusha
stc
add
push
mov
pushf
lea
jmp
stc
clc
push
jmp
bts
notl
stc
inc
adc
mov
jp
sub
call
shr
rcl
bts
mov
sub
setbe
push
rol
mov
test
movb
test
jmp
mov
pushl
pusha
pushf
mov
lea
jmp
lea
pusha
call
bsf
mov
bt
cmp
add
pusha
pushf
lea
jmp
push
mov
movw
movb
lea
jmp
clc
push
cmp
pushl
mov
lea
ja
and
rdtsc
mov
push
lea
lea
aaa
sub
btc
aaa
lea
cmp
clc
bsf
and
adc
sub
not
bswap
bswap
jmp
cltd
bts
cmc
das
mov
lea
pusha
mov
pushf
add
jmp
lahf
aas
or
btc
mov
not
bt
shr
mov
stc
jmp
pusha
jmp
movl
call
sbb
btc
mov
pushf
sub
pusha
call
pushl
or
jmp
push
push
pushf
popl
movb
jmp
push
mov
pushf
lea
jmp
mov
jmp
jmp
ror
pushf
xor
mov
mov
cmc
test
cwtl
stc
call
mov
call
bsr
rcr
sub
adc
sar
dec
mov
pushf
mov
rcr
movzbw
add
sub
rcr
sbb
mov
btc
setb
bts
rcl
add
dec
jmp
mov
call
cmpsb
data16
out
cmp
out
push
popa
stc
out
shll
arpl
out
sbb
out
pop
jne
out
out
stc
out
sbb
out
sbb
out
sbb
out
mov
out
pop
imul
fsubrs
out
dec
jns
out
pop
imul
or
stc
out
xlat
data16
out
cmp
out
lds
out
aas
insb
stc
out
lock
out
popa
stc
out
cmpsb
data16
out
inc
pusha
stc
out
inc
pusha
stc
out
inc
pusha
stc
out
inc
pusha
stc
out
inc
pusha
stc
out
inc
pusha
stc
out
inc
pusha
stc
out
inc
pusha
stc
out
cmp
out
push
popa
stc
out
mov
out
mov
stc
out
cmp
out
or
stc
out
inc
ja
out
enter
adc
stc
out
arpl
out
out
stc
out
jb
stc
out
push
popa
stc
out
lds
out
pop
imul
cmp
out
subb
jb
stc
out
cmp
out
subb
push
jne
out
cmp
out
fsubrs
out
jb
stc
out
fsubrs
out
lds
out
shll
fwait
jo
out
jl
stc
out
sbb
out
sbb
out
jb
stc
out
sbb
out
aas
insb
stc
out
push
je
out
inc
ja
out
add
outsb
stc
out
loopne
stc
out
aaa
insl
stc
out
jmp
stc
out
sub
out
mov
out
test
popa
stc
out
arpl
out
mov
ja
out
loopne
stc
out
mov
out
aaa
js
out
add
jb
out
cmp
out
cmc
data16
out
pop
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
sbb
out
scas
jne
out
subb
mov
out
int3
insl
stc
out
aaa
js
out
out
pop
stc
out
jb
stc
out
xlat
data16
out
enter
mov
stc
out
sub
out
push
jne
out
sbb
out
add
pop
stc
out
jl
stc
out
sbb
out
aaa
insl
stc
out
cmc
data16
out
fwait
jo
out
or
stc
out
mov
out
mov
out
shll
out
pop
stc
out
push
popa
stc
out
out
stc
out
int3
insl
stc
out
lds
out
push
popa
stc
out
adc
stc
out
fwait
jo
out
fidivs
out
inc
pusha
stc
out
mov
out
mov
out
aas
insb
stc
out
push
jae
out
outsb
jo
out
subb
aas
insb
stc
out
sub
out
jmp
stc
out
fwait
jo
out
outsb
jo
out
aaa
js
out
lock
out
xlat
data16
out
cmc
data16
out
xlat
data16
out
sbb
out
loopne
stc
out
jp
stc
out
lds
out
push
jae
out
inc
pusha
stc
out
inc
pusha
stc
out
push
jae
out
inc
pusha
stc
out
inc
pusha
stc
out
inc
pusha
stc
out
inc
pusha
stc
out
inc
pusha
stc
out
cmc
data16
out
sbb
out
inc
ja
out
mov
out
subb
arpl
out
fidivs
out
shll
sub
out
dec
jns
out
xlat
data16
out
lds
out
int3
insl
stc
out
int3
insl
stc
out
adc
stc
out
sbb
out
cmc
data16
out
aas
insb
stc
out
jp
stc
out
push
jne
out
inc
ja
out
mov
out
adc
stc
out
mov
out
fidivs
out
sbb
out
aaa
insl
stc
out
scas
jne
out
insb
push
stc
out
test
insb
stc
out
out
pop
stc
out
lds
out
or
stc
out
push
popa
stc
out
push
je
out
pop
stc
out
cmpsb
data16
out
push
jne
out
cmp
out
popa
stc
out
fsubrs
out
out
pop
stc
out
out
pop
stc
out
push
jae
out
fsubrs
out
loopne
stc
out
pop
imul
inc
ja
out
shll
fidivs
out
lds
out
dec
jns
out
outsb
jo
out
sbb
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
fwait
insb
stc
out
pop
imul
scas
jne
out
pop
jne
out
insb
push
stc
out
jp
stc
out
jmp
stc
out
pop
imul
push
je
out
aaa
insl
stc
out
adc
stc
out
fwait
jo
out
inc
ja
out
shll
lock
out
cmp
out
cmp
out
shll
cmp
out
lock
out
insb
push
stc
out
xlat
data16
out
mov
out
cmp
out
cmp
out
pop
stc
out
arpl
out
sbb
out
jmp
stc
out
insb
push
stc
out
xor
pusha
pushl
inc
pushf
call
add
add
jg
cmc
cmp
shrd
pushf
mov
call
mov
push
movb
mov
pushf
lea
jmp
call
pushf
jmp
neg
rcr
mov
cmc
add
pushf
pushf
lea
jmp
push
lea
jp
push
pushl
popl
pushl
pushf
pushl
lea
jmp
bsr
and
xadd
mov
dec
sub
btr
mov
mov
add
adc
mov
cmp
jmp
stc
movw
clc
ror
bt
add
cmp
jmp
mov
jmp
and
rcl
mov
rcl
dec
mov
stc
sub
jmp
das
mov
bswap
mov
cmp
stc
clc
not
cmc
not
cmc
jmp
mov
lea
je
cmp
stc
sub
push
test
xchg
call
add
add
cmp
lea
mov
shr
dec
mov
cmc
stc
bt
call
pushf
pushl
mov
movb
pushf
lea
jmp
jmp
cmp
sub
bt
sub
pushf
mov
pusha
pushl
jmp
cmp
add
call
dec
test
cmp
call
shrd
xor
bswap
bts
bts
rol
inc
inc
bsr
bt
neg
mov
sbb
jmp
pushf
popl
mov
pushf
pushl
popl
pushf
lea
jmp
dec
rcr
clc
neg
neg
inc
call
jmp
pushf
bswap
shl
mov
test
stc
pushl
call
pusha
movzbw
pusha
mov
push
mov
mov
mov
pushf
push
lea
jmp
bswap
aas
mov
sar
rol
rcl
setp
mov
call
and
bts
mov
ror
rol
or
add
xor
rcr
bts
rol
sbb
neg
pushf
movsbw
pushf
inc
bsf
xor
clc
bts
ror
btc
mov
pushf
lea
bt
cmc
cmc
movb
add
jmp
mov
pushl
pushf
mov
lea
jmp
movl
mov
pushl
pushf
pushl
ret
mov
mov
pusha
call
pushl
popl
mov
pushf
lea
jmp
mov
jmp
mov
movb
pushf
lea
jmp
mov
jmp
sub
jmp
jmp
sub
jmp
jmp
mov
pusha
lea
jmp
pushf
pushl
mov
movw
pushf
mov
movl
lea
jmp
xadd
xadd
mov
xor
mov
and
neg
dec
cmc
mov
push
jmp
jmp
mov
mov
pusha
lea
jmp
setne
or
aam
lea
jmp
call
lea
jne
jmp
call
test
add
jmp
test
shl
pusha
jmp
mov
call
ror
and
mov
not
mov
shrd
stc
sub
sar
add
pushf
clc
xor
add
push
call
daa
sbb
aaa
mov
bt
add
call
jmp
bt
push
test
cbtw
cmc
clc
test
test
cwtl
call
pushl
popf
push
pushf
mov
pushf
lea
jmp
jmp
pushl
popl
push
pushf
pushf
lea
jmp
pusha
pushl
popl
push
pushf
movb
lea
jmp
pushf
call
jmp
push
mov
push
pushf
pushf
movb
lea
jmp
jmp
ror
call
