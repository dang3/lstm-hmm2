push
call
ret
ret
pop
and
call
aas
pop
and
ret
sbb
test
aas
shll
adc
in
fcmovnu
mov
dec
hlt
inc
aad
iret
inc
stc
mov
stos
mov
es
sahf
jb
lcall
adc
popa
addl
xchg
mov
jle
push
push
mov
mov
inc
inc
fbld
mov
insb
pop
mov
jle
mov
out
xorl
gs
jne
shll
sub
mov
fbld
dec
inc
in
or
loopne
inc
imul
shrb
push
jne
jl
out
push
mov
jae
push
adc
mov
sub
dec
or
jl
add
out
lods
sub
cmp
and
dec
xchg
jmp
call
sti
imul
insb
adc
push
mov
lea
adc
push
fldt
xchg
scas
scas
movsl
cmp
inc
mov
lret
shll
cwtl
jg
mov
mov
out
ljmp
pop
fwait
iret
or
ja
sub
mov
cmp
mov
aad
xchg
xchg
or
cmp
faddl
stc
divb
rcl
cmpsl
mull
jno
iret
push
push
out
js
xor
push
lret
xchg
sti
nopl
sub
xchg
jo
mov
cmp
out
mov
xor
adc
sub
mov
add
loop
cmpsb
dec
push
and
in
out
and
ljmp
cmp
js
ljmp
and
ss
push
mov
xorb
outsl
stc
dec
inc
or
int
push
in
decb
in
jbe
mov
and
ljmp
jo
negl
cmpsb
mov
mov
xor
stc
lahf
hlt
mov
xchg
arpl
bound
and
leave
pop
jg
and
int3
xchg
push
adc
and
jmp
mov
sbb
cs
adc
das
xor
fldl
lods
sbb
test
mov
jb
xchg
bound
out
inc
cmp
sub
ljmp
and
rcrb
stos
jg
and
popa
loope
bound
cwtl
enter
and
lock
cld
iret
fdivl
jmp
cli
fld
imul
imul
or
mov
dec
mov
inc
stos
addb
or
pusha
leave
cmp
jecxz
cmp
incl
adc
xchg
sahf
rol
dec
xor
imul
push
enter
sbb
add
shl
pop
addr16
cli
mov
stc
fists
les
movsb
sbb
icebp
lea
cmp
inc
xchg
push
mov
or
cmp
outsl
rcll
push
inc
adc
mov
les
jns
cmc
mov
cs
out
popf
xor
push
jmp
jnp
ds
frstor
xchg
hlt
sub
jl
add
sbb
loop
rcl
xchg
mov
mov
xor
lods
xchg
fs
push
cli
out
cmpl
sub
dec
add
jae
jns
add
and
rolb
insb
scas
repz
mov
in
std
repz
stos
add
mov
repz
jmp
jle
mov
add
mov
cld
leave
std
add
and
jbe
jl
jg
jnp
push
cltd
adc
mov
mov
mov
mov
sub
mov
lcall
push
sub
mov
dec
aaa
jl
insl
mov
insb
pop
adc
xor
test
and
movsl
or
idivb
sbb
pop
pop
hlt
mov
fisubrs
sahf
dec
and
xor
mov
push
or
xchg
cld
dec
clc
xchg
je
mov
inc
mov
movsb
xchg
mov
test
popl
popa
int3
sub
ret
inc
out
pushf
cmp
addr16
xlat
cmp
lcall
iret
xor
jecxz
sbb
xor
lds
rolb
pop
loop
push
mov
jo
cmp
pushf
sbb
mov
jge
dec
mov
jl
mov
jle
pop
mov
and
push
repz
push
push
mov
cs
mov
jns
movsb
data16
mov
xor
ljmp
cmp
rcrb
loope
outsl
mov
xor
je
dec
push
push
ljmp
push
adc
fldcw
push
test
push
enter
inc
cmp
inc
outsl
test
icebp
jnp
ret
stos
mov
decl
pop
popf
xchg
out
iret
addps
add
popa
cld
jmp
push
jmp
and
push
jae
or
push
cmc
shrb
adc
out
or
stos
xchg
mov
dec
imul
test
add
insb
icebp
mov
pusha
jne
in
negb
adc
lret
add
dec
mov
mov
loopne
fs
lret
adc
fisttpll
jbe
pmuludq
das
int
jle
in
ret
cmp
shll
cmc
shll
into
or
test
dec
bound
aad
leave
cmpsb
lret
cld
aad
hlt
js
sub
arpl
ds
mov
mov
or
je
or
xchg
adc
jmp
mov
out
jb
jbe
push
inc
lret
pop
inc
div
add
mov
scas
out
jbe
mov
lret
mov
xor
jae
mov
mov
filds
xchg
cld
out
mov
loope
add
jnp
xor
sub
test
lods
add
std
and
test
add
test
dec
fldt
in
in
call
push
jo
icebp
bound
ljmp
pop
sqrtps
sbb
int
mov
xchg
jg
flds
pop
inc
xor
outsl
andl
xchg
inc
stos
mov
sub
and
stos
inc
push
push
repnz
repnz
pop
mov
push
daa
loope
imul
add
push
dec
adc
xchg
and
add
sub
outsl
xchg
inc
and
and
jle
test
inc
cmp
test
je
repz
jge
xchg
ret
jg
dec
sub
mov
lahf
rcrl
and
repz
xchg
in
push
jbe
loope
aas
jecxz
int
pusha
cs
mov
loopne
or
clc
jne
sub
dec
lret
xor
stos
mov
mov
add
inc
xchg
dec
jno
cmp
jg
mov
sahf
pop
sti
lcall
dec
ret
adc
pop
popa
ljmp
add
mov
ja
add
stos
jb
shlb
cwtl
inc
add
adc
adc
cld
jnp
decb
dec
xchg
sub
arpl
adc
push
stos
lods
xchg
lods
stc
ja
xchg
pop
add
or
jecxz
push
mov
cmp
dec
test
mov
inc
pushf
pop
push
push
xor
mov
roll
inc
mov
or
in
rolb
out
mov
in
outsl
flds
cmp
fcmove
xchg
cmp
in
icebp
mov
movsl
aas
mov
movaps
and
push
fisubl
shl
cs
mov
xor
mov
jg
rcrb
pop
in
dec
xor
mov
add
out
stos
shrl
inc
out
cmp
fdiv
mov
das
call
fnstenv
or
cmp
add
mov
adc
jae
imul
js
jae
pop
cmp
cmc
cmp
or
push
sub
xor
sbb
push
nop
sub
imul
out
cwtl
dec
and
xchg
lahf
jb
cmpsb
aas
repz
mov
dec
xor
outsb
inc
test
ljmp
bound
jl
cmc
jmp
mov
in
inc
push
jmp
in
sti
int
sbb
and
and
and
jp
shl
or
add
jl
leave
cmp
and
mov
fcomps
out
rolb
faddl
repnz
sub
push
cmp
push
imul
outsl
xchg
loopne
in
fnop
jno
shll
pop
loop
pop
fmull
mov
sahf
or
and
fcomps
rcrl
js
xchg
mov
sub
or
ds
sub
push
dec
adc
pop
cmp
arpl
pusha
sbb
dec
adc
sub
das
idivb
push
or
sbb
ret
mov
test
or
mov
sub
pop
rorl
mov
ja
sbb
dec
fistpl
jne
nop
cld
push
mov
pop
or
dec
mov
rcr
add
lea
stos
and
cmpsb
mov
push
lcall
or
mov
sbb
insb
pop
dec
aaa
jo
inc
repz
lahf
imul
dec
jmp
push
sbb
lret
add
cli
adc
fstpt
push
add
aad
rclb
shll
ret
mov
out
insb
pushf
sbb
int
loop
xchg
enter
cltd
scas
movsb
sub
cmp
lods
pop
jge
enter
mov
mov
push
or
hlt
clc
scas
xchg
jmp
in
mov
pop
jge
jne
xorb
fcom
add
fldcw
fs
insl
cmp
mov
xchg
imul
mov
push
xor
mov
test
nop
add
movsl
push
mov
mov
push
ficoml
scas
pop
lods
jno
sbb
xchg
dec
cmp
pop
sbb
aam
mov
cmp
aaa
movsl
lahf
ja
and
push
add
ja
adc
bound
cmpsl
insb
jmp
fst
lock
popa
jno
jg
sub
xchg
xchg
mov
push
in
iret
jmp
aam
adc
cli
mov
inc
pop
xor
cmp
ljmp
sbb
mov
mov
mov
inc
push
into
test
mov
jne
mov
and
mov
sub
iret
pop
outsb
in
call
and
enter
xlat
imul
hlt
in
xor
sub
repnz
cmpsb
pop
into
mov
or
shlb
mov
cmpsb
mov
fcoms
push
loope
dec
in
popf
and
adcb
xchg
and
idivl
fldt
xchg
push
and
push
dec
test
adc
add
push
rcrb
aad
dec
imul
inc
add
lods
insb
scas
shlb
or
sub
xchg
mov
sub
sbb
je
aam
and
xor
stc
clc
xor
inc
fildl
adc
sub
sahf
inc
fimull
rcl
negl
sbb
adc
std
push
dec
int3
pop
add
in
je
cmp
fsub
lea
je
int
jnp
sub
sub
or
adc
jnp
jbe
enter
pop
dec
out
push
add
jecxz
clc
xchg
dec
push
inc
adc
ja,pn
fbld
dec
fdivp
loopne
es
jecxz
xchg
lret
cmp
jbe
pop
in
icebp
xchg
pop
mov
dec
lcall
clc
dec
mov
scas
aam
aas
push
add
adc
dec
repnz
imul
adc
xor
outsb
addl
repz
xchg
mov
cmpsb
jmp
jecxz
arpl
pop
and
mov
xor
fcmovnu
or
lea
adc
push
dec
test
push
xchg
xchg
call
inc
cmp
and
jo,pt
xchg
fnstcw
pop
push
mov
mov
jecxz
mov
or
push
cmp
lods
mov
stc
loop
je
xor
xlat
mull
stc
lcall
js
adc
push
ss
jo
ret
out
inc
sub
incb
lds
call
pop
mov
scas
push
enter
rcl
cld
mov
cmp
sub
je
cltd
adc
adc
xor
push
inc
test
dec
outsb
movsl
dec
insl
dec
push
inc
rolb
insl
les
lahf
or
lret
addr16
xchg
sbbl
pushf
loope
xor
sbb
xlat
call
aam
cmp
cmpsl
cmp
loop
pop
dec
out
inc
inc
inc
add
iret
push
filds
jnp
jb
sbb
push
mov
sbb
mov
lea
and
and
fwait
pop
fildl
jl
movsb
das
movsl
stc
mov
cmp
sarl
insl
roll
dec
jno
jbe
icebp
arpl
jbe
adc
jl
push
jmp
sub
daa
filds
repnz
and
xchg
pop
dec
sub
dec
fs
xchg
inc
mov
and
or
jp
leave
aaa
sub
mov
call
jnp
cmp
mov
cld
inc
cmp
repz
arpl
mov
in
add
iret
rorl
ror
rorb
int3
pusha
test
arpl
cmp
inc
xor
adc
mov
push
loop
mov
nop
mov
insl
jp
mov
xorb
or
or
jmp
mov
pop
mov
cwtl
cmpsl
inc
insl
sub
jb
xor
rorb
inc
inc
dec
jno
pop
aad
adc
es
adc
push
std
jo
xchg
ja
stc
sti
rolb
lahf
mov
inc
loopne
adc
je
xor
and
out
jle
xor
add
jb
cmp
dec
xchg
jbe
dec
lea
rorb
mov
into
mov
repnz
fwait
int
jg
lods
sbb
cmp
mov
pop
aam
sub
and
icebp
jmp
imul
add
shrl
ds
pop
das
inc
scas
in
sub
jp
data16
lds
add
dec
push
xor
add
push
pop
shl
push
mov
mov
mov
cmp
mov
dec
xor
addr16
insb
inc
inc
hlt
lods
mov
xor
neg
test
pop
push
pop
sbb
cltd
rolb
add
mov
mov
in
rcl
pop
inc
inc
cli
mov
cmp
push
into
add
pop
call
test
and
pushf
lret
gs
mov
xor
aad
dec
outsb
pop
out
outsb
js
hlt
icebp
repz
imul
and
sub
sbb
push
cltd
xchg
mov
ret
sub
pop
insl
insb
imul
sbb
cltd
popf
pop
push
jmp
sub
popf
pusha
xor
add
jle
loopne
and
aam
das
mov
or
xchg
jge
add
pcmpeqb
sbb
and
int3
pushl
and
xor
arpl
out
jge
sub
insl
jo
jo
pop
sub
ja
xchg
je
out
rcrb
in
mov
pusha
fsubl
and
mov
out
sarl
out
mov
andb
loopne
aas
outsb
jle
pushf
icebp
jmp
mov
or
lahf
lea
les
cmpb
push
lods
lcall
sub
movsb
cmp
into
outsb
inc
adc
sbb
rorb
sub
mov
test
pop
div
mov
cmp
in
scas
sbb
fdivs
jo
mov
ret
pop
fldcw
mov
scas
std
dec
mov
add
jle
mov
adc
popa
ror
pusha
jge
movsb
call
adc
cmp
mov
xorb
pop
in
xchg
jne
rorb
jb
cltd
pop
es
jp
lods
inc
enter
negl
add
lock
cmp
pop
jmp
mov
in
push
int
or
push
pusha
lahf
sahf
mov
sbb
mov
fcmovne
stos
or
inc
push
fstps
icebp
lea
inc
adc
int
jno
mov
in
dec
adc
jp
add
cmp
pop
testb
shrd
or
shr
call
repnz
mov
repz
dec
in
mov
call
jl
cwtl
jge
rorb
shrb
push
out
fcmovbe
mov
mov
out
and
cmp
jno
mov
jns
adc
inc
js
xor
dec
aam
fucomp
sub
jl
movsl
imul
dec
mov
and
jnp
pop
outsb
lock
in
enter
seto
push
into
into
xlat
jns
dec
mov
jo
imul
push
cmp
jb
int
and
or
xlat
ret
or
mov
icebp
sti
and
mov
or
sbbl
mov
add
xchg
stos
clc
nop
lret
loope
pop
jb
sub
jno
push
cmpsl
or
out
cmp
mov
mov
repnz
scas
insb
in
add
jl
loopne
mov
mov
add
add
or
lods
test
xchg
pop
aad
pushf
lret
inc
pop
ds
or
sbb
sub
aaa
loop
jge
rcl
mov
mov
lds
jo
clc
in
mov
ja
lods
xor
pop
mov
mov
push
ss
or
hlt
and
iret
dec
cli
sti
and
inc
ss
push
adc
movsl
div
icebp
inc
and
pop
mov
mov
xor
insb
add
jns
sbb
and
nop
dec
inc
lds
pop
jns
cmpb
inc
or
mov
repz
lahf
pop
jae
fnstcw
mov
adc
pop
scas
mov
dec
xchg
das
imulb
cltd
xor
adc
xorb
int3
sti
jl
xchg
push
in
adc
push
sub
lods
push
addr16
js
mov
test
mov
scas
dec
pusha
push
subl
cmc
xor
jg
sahf
adc
push
jle
dec
sbb
jne
arpl
xchg
in
sub
enter
es
mov
jle
jbe
rolb
mov
push
add
mov
sarl
out
ljmp
sbb
cmp
movsl
xchg
push
xchg
xchg
aaa
pop
sbb
mov
mov
and
push
jb
adc
xchg
xor
int3
popf
mov
lods
adc
add
outsl
cwtl
in
inc
push
aam
inc
xchg
cltd
jb
mov
inc
daa
aad
es
xchg
daa
jns
out
aaa
sbb
mov
dec
sub
mov
lea
pop
dec
cmp
cmp
subb
fists
fidivrl
jmp
negl
shll
push
es
pop
add
cld
push
lea
repnz
test
addl
fsubs
sbb
mov
dec
or
subb
ficompl
arpl
cmp
and
and
test
test
mov
xchg
adc
dec
in
bound
loope
adc
iret
sub
push
fiadds
lret
inc
xor
into
int3
xor
adc
jnp
or
scas
enter
into
fldl
xlat
adc
enter
sbb
xchg
adc
ljmp
gs
movsl
mov
lock
cs
cli
adcb
lahf
cli
hlt
cmpsl
int
pop
jo
xor
lock
mov
pop
push
and
dec
test
mov
lods
push
pop
add
scas
andl
cmpsb
dec
sbb
je
jg
pop
cmpsl
lock
jecxz
adc
pop
mov
push
or
dec
and
xor
les
cmp
xchg
fidivl
adc
insl
or
mov
sbb
add
scas
loope
inc
pop
mov
bound
add
cs
push
sar
and
hlt
sbb
add
push
sub
cwtl
push
push
stos
loopne
pushf
pushf
movsb
push
test
adc
imul
mov
loope
or
in
xor
dec
and
testl
mov
int
sub
test
loopne
insb
sbb
hlt
ljmp
fidivrl
jb
jl
add
adc
leave
sti
pop
cmpsb
shll
fbld
pop
dec
int
xchg
jbe
fildll
jp
xlat
adc
mov
stos
pop
ret
adc
insb
cmp
scas
jbe
cli
movsl
xor
ds
pop
call
pop
and
jge
sahf
mov
push
fstpt
inc
add
pop
push
push
pusha
loop
lret
push
cmp
sbb
pop
int3
clc
cmp
cmc
push
inc
popa
mov
inc
fnsave
stos
jnp
leave
enter
push
orl
insl
aaa
inc
lcall
cwtl
sub
lock
je
das
jae
push
push
push
mov
mov
das
inc
inc
sbb
loopne
imul
sarb
dec
cltd
jmp
xchg
sub
cmc
or
les
xchg
mov
orb
mov
in
insl
and
andb
stos
sub
out
lock
push
jo
pushl
add
push
xor
push
pop
lock
bswap
add
andl
push
je
call
rcrb
out
hlt
dec
lahf
sub
fidivrl
dec
sub
mov
sahf
in
mov
je
loopne
mov
scas
and
lods
mov
sbb
mov
cmpsb
imul
int
sbb
loope
push
lods
add
mov
roll
lret
pcmpeqd
or
frstor
push
out
pusha
mov
mov
inc
lret
cld
add
mov
popa
mov
lcall
add
lods
aas
jno
testb
aad
lods
pop
jns
pop
shll
fwait
bound
lea
pushf
jp
mov
das
call
or
jecxz
imul
pop
movsl
inc
mov
push
sbb
mov
cli
lret
push
cmp
lret
and
xchg
loopne
pop
lahf
cwtl
jl
gs
inc
out
dec
and
pusha
adc
pop
aam
loop
test
dec
or
cmpsb
test
mov
icebp
mov
xchg
dec
push
cld
ljmp
xchg
popl
loopne
out
or
aaa
aas
adc
adcb
or
push
push
fldln2
inc
or
jnp
sub
inc
mov
fidivrs
fists
xlat
lods
test
push
sarb
mov
inc
mov
std
jb
enter
sub
xchg
jmp
push
sub
inc
xor
and
fstpl
movsb
sahf
push
loopne
mov
hlt
push
xor
pop
icebp
fstpt
sbb
mov
js
nop
add
push
dec
mov
loopne
cmpsl
in
dec
mov
bound
stc
push
push
xor
loope
or
lock
adc
and
pop
or
call
cli
fsts
lock
sub
pop
leave
popa
or
add
dec
outsb
out
adc
repz
xchg
test
inc
repnz
insl
repnz
mov
and
lock
test
mov
lret
fwait
rolb
jb
cmp
in
jg
cmp
lods
mull
pop
imul
dec
jne
enter
sbb
pop
movl
scas
mov
jae
in
sub
pusha
mov
fucomip
cmp
add
test
icebp
andb
adc
jbe
cld
mov
mov
cmp
or
sbbw
cmpsb
sub
push
adc
push
imul
out
ljmp
imul
ss
arpl
lock
adcl
ret
xchg
pop
pop
add
movl
push
js
mov
mov
mov
xchg
and
push
scas
push
cmp
lret
push
sub
mov
popl
jno
mov
add
repnz
mov
jne
out
leave
out
xchg
divps
repz
add
xchg
cmp
sahf
jg
add
test
adc
ds
hlt
out
mov
rclb
xchg
adc
mov
pop
cmp
es
mov
test
pop
int3
fnstenv
loop
mov
jl
xchg
mov
inc
inc
dec
mov
inc
dec
sbb
sbb
ret
imul
pop
loopne
dec
inc
pop
add
dec
imul
add
fcomps
cmp
daa
cs
scas
cmc
inc
fisubl
sbb
adc
mov
imul
aam
dec
adc
and
stc
cmp
aad
jae
es
sub
xchg
jle
xchg
fldt
inc
lea
lret
lcall
add
stos
mov
pusha
loopne
leave
out
push
cmp
pop
sbb
jae
xchg
outsb
std
cwtl
add
sbb
in
sbb
add
outsl
mov
out
adcb
in
or
repz
sub
dec
ficomps
dec
cmp
xchg
in
jg
addr16
jns
sub
xchg
test
stc
in
movsb
mov
dec
push
out
lods
or
jno
xchg
mov
shll
aad
mov
jecxz
pusha
push
bound
sarl
or
outsl
sub
mov
les
aas
cmp
jno
scas
stos
sbb
cmp
iret
cmp
push
hlt
fildll
xorl
fdivrp
mov
push
adc
pop
xchg
arpl
inc
add
cltd
fs
pop
rcrb
fldt
xor
int3
imul
and
pushf
arpl
ficoml
push
push
add
xchg
loopne
jne
lods
in
subl
out
mov
je
fwait
cmpsb
or
pop
xor
push
adc
int3
outsb
xor
clc
dec
iret
iret
cmp
cmp
jge
mov
xchg
pop
mov
add
inc
xor
sbb
adc
cmp
adc
push
int3
in
xchg
addr16
aaa
mov
fdivs
sub
pop
mov
icebp
shrb
cmpsb
or
cmpsl
adc
dec
push
and
pop
decb
sub
data16
mov
push
inc
stos
sarl
inc
leave
cmp
sti
sbb
scas
cmpsb
xchg
sbb
verr
mov
push
cmpsb
adc
add
push
data16
push
das
jne
adc
dec
outsl
mov
push
popf
jge
inc
mov
dec
xchg
mov
test
inc
inc
cli
imul
or
pushaw
pop
or
minps
in
pusha
stos
stc
enter
xor
mov
test
pop
jmp
rolb
jg
mov
jae
mov
jl
lret
pop
xchg
cmp
dec
test
mov
push
sbb
loop
rorb
enter
inc
and
cmpsb
imul
xchg
push
fcmovne
xchg
pop
dec
cmp
xor
mov
sbb
jecxz
push
xor
scas
jmp
pop
mov
mov
push
sbb
sti
arpl
dec
lret
add
mov
js
test
jge
scas
sbbb
ljmp
jecxz
push
insl
mov
rcrb
sarb
sbb
fcmove
sahf
adcl
adc
hlt
rcrb
pop
jp
jae
add
loopne
jl
mov
xor
cmp
or
adc
insl
hlt
fs
mov
clc
mov
pop
stc
mov
sbb
movsb
nop
xor
inc
lds
aas
mov
addr16
fwait
clc
cmp
fadds
xor
jno
inc
int3
mov
xor
xor
inc
xchg
dec
loop
shlb
mov
sbb
push
arpl
inc
inc
test
sbb
stos
push
bound
leave
inc
lea
xor
jp
mov
in
add
mov
mov
push
repnz
mov
push
lahf
or
jnp
or
int3
lods
into
jae
sub
mov
xor
pop
xchg
mov
add
into
pop
and
clc
das
cmp
mul
aad
add
bnd
xor
mov
aaa
xor
callw
adc
int
sbbb
lds
and
sbb
mov
clc
mov
addl
mov
addr16
ja
pusha
push
jp
repnz
push
mov
cmp
subl
rcl
adc
lock
sti
or
imul
lods
cltd
jle
jo
faddl
fsub
mov
call
insb
addr16
cs
fnstsw
dec
shrb
fcomps
xchg
xor
mov
stos
fdivs
movsl
arpl
cwtl
xor
popf
xchg
int
mov
prefetch
xchg
in
xor
jnp
mulb
int3
fisubrl
xchg
adc
test
mov
scas
aaa
repz
adc
fidivl
pop
push
add
jle
mov
cmovle
cmpsl
cwtl
shrb
xlat
add
xchg
jle
adc
push
pop
sarb
sbb
mov
dec
sub
mov
dec
in
or
addr16
mov
sub
in
popa
dec
lahf
jne
fwait
mov
pop
ds
jno
lea
jne
int3
inc
call
in
jae
std
int
rol
jno
sbb
outsb
roll
pop
data16
xchg
ds
lods
pusha
rol
push
mov
gs
adc
push
xchg
aas
fs
fcmovb
adc
mov
rolb
in
in
xor
xchg
jp
jg
adc
cmp
pop
mov
imul
test
out
roll
pop
cmp
mov
mov
push
xor
dec
xchg
daa
mov
push
push
push
sahf
out
loop
xlat
pop
jo
sbb
sbb
cmp
mov
dec
nop
jecxz
ret
popa
mov
stos
shlb
mov
push
js
mov
aas
mov
stc
jb
adc
loop
sub
inc
es
mov
fldt
es
sbbb
out
mov
ss
inc
sti
push
jmp
roll
jp
jl
inc
pop
fstpl
xor
xor
pop
push
jns
mov
xor
lds
xlat
add
and
cmp
aad
and
jns
imul
gs
mov
inc
add
inc
bound
jmp
adc
ljmp
push
mov
mov
xor
je
mov
gs
outsb
xchg
xor
loopne
jmp
and
mov
pop
dec
mov
loope
loop
into
out
or
dec
jb
mov
push
loope
cltd
inc
stos
jo
or
cmp
sub
or
stos
push
lahf
adc
sub
mov
cmp
mov
ja
lds
lcall
movsl
sarb
pop
or
cmpb
icebp
push
mov
out
nop
stc
jle
pop
mov
leave
gs
xchg
lods
loope
stos
shrb
call
imul
in
jae
cli
adc
out
inc
sarl
pop
aaa
movsl
cmpsl
pop
decb
or
loope
add
insl
mov
idivl
fwait
shl
shlb
jmp
outsl
repnz
andl
or
ret
out
xlat
mov
xor
sarl
mov
pop
fst
dec
insb
insb
dec
xchg
jno
jno
dec
cs
in
pop
rol
and
jae
mov
pop
orb
cli
mov
dec
mov
xchg
cmpsl
dec
and
mov
lods
nop
lods
jnp
insb
dec
sub
in
ljmp
add
add
cmp
inc
mov
pop
lret
xchg
test
mov
xchg
push
sbb
mov
idiv
pop
test
mov
ds
jnp
add
in
and
sbb
push
movsb
push
in
pop
push
cmp
dec
mov
stos
loope
lods
dec
push
sub
rorb
lret
call
cmp
or
mov
push
jge
push
adc
nop
insb
mov
stos
inc
loop
dec
lods
out
push
es
dec
scas
adc
ficomps
dec
je
out
lret
inc
xchg
mov
addr16
push
dec
in
inc
inc
dec
into
ret
inc
dec
imul
jle
stc
cmp
mov
pop
jle
push
xchg
pop
xor
iret
lods
adc
push
push
cmc
jbe
cli
pop
mov
pop
xor
or
adc
lods
cmpb
cmpsb
pop
adc
sbb
cmp
dec
shlb
adc
pop
ja
ret
or
or
and
fbld
push
repz
hlt
or
sub
mov
or
fwait
sbb
jp
push
test
ljmp
fistl
es
pop
mov
scas
dec
shll
testb
xor
mov
jg
mov
js
inc
mov
sbb
and
xchg
dec
in
loopne
mov
int
inc
inc
mov
imul
dec
jecxz
test
mov
xchg
mov
mov
sbb
lret
jle
je
leave
cli
xchg
dec
repnz
pop
push
imul
clc
mov
scas
jne
sti
jg
adc
cmp
adc
dec
outsl
xor
data16
inc
mov
dec
popa
fisubs
mov
ja
sub
arpl
jl
inc
stos
dec
ds
imul
lods
aad
cld
pushf
add
daa
jge
out
fisttps
push
push
or
lahf
ret
push
pop
cwtl
outsl
sbb
mov
out
ja
mov
mov
push
xchg
fisubl
inc
enter
imul
into
out
inc
mov
negb
xchg
inc
mov
add
push
std
inc
rcrl
lahf
sub
add
call
dec
or
stc
pop
testb
push
test
adc
xor
xlat
adc
lret
test
jns
mov
and
fcompl
mov
lret
and
les
roll
imulb
out
xchg
int
pop
mov
mov
fwait
jecxz
sub
inc
mov
dec
out
xchg
fistl
addr16
add
movsb
cmpsb
cmpsb
xchg
cld
jge
subl
adc
xchg
push
fdivrs
addl
and
push
inc
mov
mov
mov
pop
push
daa
je
push
jbe
sbb
popa
mov
rorb
insb
push
insl
lcall
xchg
adc
flds
push
and
sub
sub
xchg
lret
mov
movb
icebp
sbb
cmp
cs
shr
jo
popa
or
mov
cld
loopne
fcmovnu
jbe
rorl
sub
loopne
pop
sbb
pushf
je
std
jmp
mov
mov
cmpl
xchg
push
and
mov
push
mov
and
out
inc
push
dec
mov
inc
xor
call
lods
rorb
xchg
inc
out
out
repnz
enter
inc
mov
jne
lea
insb
pop
push
cmc
test
jl
push
test
loop
inc
adc
nop
test
adc
aad
addr16
cmpsl
jge
xlat
jnp
std
xor
incl
cmp
push
pop
clc
scas
outsb
je
lea
or
into
add
sub
pushf
adcb
aaa
cmp
pop
push
sub
fisubl
sarb
jae
jo
jle
push
mov
pop
sbb
dec
sub
lret
mov
mov
cmp
xchg
xchg
add
sub
jmp
test
jns
inc
das
insb
xor
xchg
test
pushf
imul
jno
adcl
cmc
pop
sarb
pushf
adc
cmpsb
jae
mov
pop
mov
mov
xchg
jg
into
fsubs
push
sbb
stc
insb
clc
inc
out
adc
lret
mov
mov
jp
add
clc
int3
jmp
scas
adc
inc
mov
inc
leave
js
pop
pop
movsl
inc
add
fsubrs
in
xchg
push
cmp
out
stos
dec
sub
add
call
call
add
push
shll
inc
setne
push
jmp
and
sub
xchg
outsb
push
push
jmp
push
aam
test
gs
mov
cltd
push
mov
mov
xor
inc
test
inc
in
leave
shrb
sbb
mov
int
xchg
cmp
jnp
sbb
cmp
std
test
adc
push
push
jg
sub
icebp
sahf
dec
sub
jmp
fists
scas
addr16
stos
ret
mov
push
leave
mov
pop
xor
fs
dec
stos
push
aad
mov
stos
push
dec
in
sarb
in
mov
daa
lret
lret
xorb
nop
sbb
test
or
outsb
loop
scas
adc
cltd
shr
imul
mov
fimull
ret
roll
or
out
pop
test
ja
and
push
sbb
stos
adc
add
mull
xchg
fsubl
and
mov
and
mov
in
test
fists
mov
mov
das
dec
mov
adcl
pop
sub
aas
incb
out
dec
test
cld
ds
mov
mov
sub
jne
inc
movsb
pop
ja
jns
lcall
in
outsb
imull
or
ret
subb
hlt
dec
sbb
sahf
pop
ret
dec
mov
add
xor
sbb
push
push
imul
cmp
add
xorb
jle
sub
xchg
jl
mov
jbe
sbbb
jmp
stos
pop
sbb
into
jl
out
mov
stc
ss
test
pop
subl
test
fcoml
jne
stos
pop
fadds
das
dec
ss
fstpl
mov
scas
mov
xlat
imul
inc
push
mov
or
rclb
push
repz
fdivl
sub
and
mov
mov
add
call
adc
adc
iret
push
inc
mov
jg
xchg
push
add
push
shlb
add
xchg
ss
lods
xor
pop
in
cmp
add
mov
loopne
pop
mov
rcrl
mov
leave
lods
dec
xor
sub
int
in
cmc
mov
ja
pop
cmpsb
stos
inc
or
ret
roll
lods
jo
push
mov
sub
loopne
and
fldl
stos
pop
cmpb
jmp
or
movsb
lods
push
mov
das
int
es
popa
rorl
push
and
jns
or
mov
cwtl
cltd
jo
and
jae
xchg
enter
lcall
sub
xor
xchg
xchg
add
adc
bound
pop
pop
mov
add
jae
enter
push
js
cltd
sti
call
mov
mov
sbb
fidivrs
je
mov
in
push
je
fildll
cli
adc
or
mov
push
or
add
test
jg
mov
mov
mov
sub
xor
mov
cmpsl
and
pop
sbb
les
adc
mov
shlb
mov
je
push
mov
daa
fmull
lcall
pop
pop
lea
lods
movsl
leave
add
or
or
movsl
dec
or
add
scas
shll
push
add
lahf
jno
xor
cmp
mov
mov
sub
aas
dec
rclb
mov
push
cmp
fs
iret
outsb
mov
jge
sar
mov
sub
jb
mov
data16
test
pcmpeqb
sbb
push
add
inc
sbb
push
negl
adc
push
xchg
mov
push
push
insb
les
mov
xor
lret
imul
mov
fs
ret
jae
add
call
jb
lea
fwait
jno
scas
out
jb
ja
les
repnz
lea
adc
and
cwtl
daa
loope
cmp
mov
cmpsb
mov
adc
cwtl
cmp
push
pop
xorl
push
insl
stc
aam
pushf
pop
repz
mov
or
test
mov
pop
mov
and
shll
lods
push
fsubp
or
mov
clc
lret
mov
bound
cmpsb
ja
cmp
mov
mov
sbb
xor
clc
pop
mov
stos
cmc
adcb
xchg
lret
xor
dec
mov
mov
mov
jmp
ja
dec
into
fisttpll
cwtl
out
lods
jnp
test
dec
sbb
xchg
mov
scas
sub
dec
lret
roll
popa
sbb
cmp
mov
popa
sbb
or
int3
lcall
stos
pop
dec
rorb
mov
mov
outsl
pop
and
push
notb
iret
lahf
jae
mov
fcomip
mov
and
cmp
mov
mov
add
jns
push
aaa
inc
mov
fld
dec
add
imul
sbb
cwtl
pusha
sub
jle
inc
push
adc
aas
aaa
xchg
mov
andb
add
fadds
pop
lahf
leave
inc
and
or
pop
and
sahf
mov
cmp
push
in
test
dec
and
imul
cmp
xor
mov
imul
push
int
cmpsb
push
std
push
insl
and
inc
popa
dec
cmc
cmpb
arpl
mov
adc
and
dec
icebp
test
sub
dec
jb
add
call
xchg
push
push
dec
fstl
pop
and
cs
xchg
negl
enter
imul
negl
sbbl
lds
push
cs
enter
cmp
push
mov
dec
stc
adc
mov
push
fstl
cli
mov
cmpsl
out
mov
xchg
and
andl
pop
shl
xchg
adc
dec
mov
or
and
jbe
mov
rcrl
xchg
pop
aaa
pop
insl
sbb
rorl
push
dec
int3
mov
aad
mov
sub
enter
fdiv
cmp
scas
sub
jecxz
adcl
push
int
xchg
cli
movsb
scas
dec
pop
push
sti
dec
mov
shlb
cli
iret
push
enter
loop
sbb
dec
cmpb
lds
xchg
outsb
mov
xchg
lea
mov
out
lret
pop
mov
mov
pop
xchg
pusha
adcb
sub
mov
jle
popf
xchg
xchg
push
xchg
xchg
test
xor
jnp
inc
popf
das
imul
test
jecxz
pop
ja
enter
movsl
sub
push
jp
test
jbe
sub
outsl
retw
dec
push
push
repnz
mov
mov
inc
insl
jecxz
inc
push
sbb
rcrb
call
inc
and
add
leave
jae
pop
xlat
push
repnz
cs
cmp
add
stos
inc
inc
inc
lock
push
jae
adc
cmpsb
pop
fstl
int
adc
push
mov
loop
xchg
mov
push
out
stc
mov
mov
jb
jbe
adc
addps
rclb
jle
ljmp
es
ret
mov
add
mov
bound
jbe
stc
test
iret
aaa
cmc
cmp
js
inc
ret
flds
int3
cwtl
out
faddl
sbb
into
mov
cmpb
sub
push
mov
push
ret
or
fwait
or
mov
sbb
in
or
mov
pop
in
ljmp
bound
shlb
xor
xchg
lods
and
pushf
int
push
cmp
mov
flds
scas
cmp
dec
test
adc
dec
sub
inc
pop
fcom
cmp
add
push
repnz
and
sti
mov
call
sbb
push
jo
cmp
jbe
push
fsubs
cwtl
aaa
mov
cli
les
inc
pop
lods
sub
fs
lods
cmp
or
jns
stos
je
jl
popa
push
fmul
sub
insl
insw
dec
mov
aam
xchg
jmp
or
mov
or
ret
into
aaa
or
sub
setb
andb
loop
mov
testb
cli
incl
pop
pop
lods
xchg
mov
insb
push
pop
fwait
pop
dec
ds
sub
sub
mov
jno
cmpsl
mov
adc
sarl
sub
lods
cmp
lods
xor
stos
lds
mov
jle
dec
rcrb
rolb
xchg
ljmp
cmp
cmp
cmc
sbb
pushl
gs
mov
push
cmc
mov
dec
stos
inc
roll
or
push
aas
movsb
loopne
and
mov
mov
ret
sahf
js
inc
jnp
insb
aad
test
in
sub
sbbb
popa
test
or
cmp
dec
jmp
mov
movsl
cltd
adcb
dec
pusha
mov
and
jno
in
aas
rcll
xchg
jae
and
test
js
mov
xor
pop
jecxz
sbb
cmpsb
shrl
cli
inc
out
xor
jns
pop
mov
push
adc
test
aas
dec
loop
sbb
jo
leave
popf
sbb
loope
insl
aam
mov
icebp
xchg
cwtl
or
jp
push
shr
out
orl
jge
sub
mov
loopne
rolb
repnz
lock
mov
mov
loopne
push
shrl
in
sub
stos
add
inc
mov
and
lods
or
mov
or
pushf
jnp
mov
mov
xchg
mov
or
lret
sbb
pop
jl
lock
and
sub
fnstsw
lods
test
das
ljmp
fnstsw
xchg
fcmovbe
xchg
mov
daa
or
pop
mov
or
andl
les
fistpll
add
cmpb
clc
jae
ja
push
js
or
ds
xchg
pop
aam
sub
cli
or
cmp
pop
inc
push
int
lret
sub
insb
jb
mov
pop
push
bound
js
mov
insl
adc
movsl
push
fidivrs
add
pusha
insl
int
test
test
pop
xlat
lahf
in
outsl
adc
add
mov
int
jnp
hlt
dec
jne
ret
jbe
dec
test
roll
sub
test
outsl
mov
and
push
cmp
mov
pop
subl
mov
call
nop
mov
pop
pop
hlt
andl
leave
bound
mov
pop
mov
mov
insl
in
mov
sub
inc
out
jl
pop
or
test
lahf
cmp
inc
repnz
mov
mov
aaa
xchg
mov
stos
pop
sahf
push
or
aad
jmp
push
mov
lea
pop
sbb
fistps
inc
sub
jb
jbe
cli
insl
mov
aad
aaa
adc
sub
inc
scas
mov
sbb
adc
inc
int3
ja
adc
or
dec
jl
ljmp
das
repnz
shll
xchg
in
jno
movl
repnz
pop
shrb
add
and
mov
push
fsubrp
and
or
jo
pop
sbb
mov
movsb
sub
xchg
bound
insb
orl
push
mov
inc
pushf
jae
insb
rcrb
mov
mov
lods
adc
inc
enter
mov
inc
fiadds
out
mov
mov
subb
sub
lret
push
jnp
add
mov
movaps
mov
push
add
push
stos
dec
fcomip
mov
jmp
insb
inc
mov
add
jno
xchg
inc
cmpsb
mov
lret
gs
jbe
sbb
sub
rolb
jmp
mov
nop
loope
add
enter
outsl
outsb
int3
sbbb
repnz
test
jle
pop
xor
cmc
fists
pop
mulb
cmp
dec
jns
sub
ljmp
addr16
mov
subl
lcall
movsl
jbe
std
roll
cmpsl
mov
cmp
xchg
das
in
pop
pop
fs
xor
mov
lods
xchg
push
pop
stos
in
dec
movsb
std
lahf
xchg
rorl
or
jb
mov
push
scas
xchg
fcoms
mov
dec
jne
mov
out
ret
xchg
xchg
lock
mov
test
mov
sub
outsl
popa
xchg
scas
mov
or
adc
and
lds
sub
idiv
call
fbld
push
outsl
xor
cmp
or
inc
mov
push
dec
mov
dec
and
pop
dec
fwait
dec
pop
fsubrp
in
rcll
xlat
mov
mov
dec
cmpsl
cmc
fs
jmp
dec
imul
lods
aaa
xchg
push
sub
jnp
iret
pop
pusha
xlat
mov
and
push
test
mov
js,pt
xor
fsubrl
fdivrl
xor
jo
push
das
mov
jnp
add
add
arpl
test
ror
push
mov
into
decb
inc
push
and
cli
or
fnsave
and
mov
mov
jno
leave
jle
int3
jae
ss
xchg
aaa
jl
sbb
pop
jmp
outsl
lea
pop
cmc
leave
sub
inc
or
daa
loopne
mov
push
adc
xchg
xchg
mov
cmp
xlat
adc
sub
dec
in
pop
cmp
sub
loopne
cmp
jle,pn
lds
mov
add
fdivrs
pop
bound
xor
ret
mov
cmp
inc
inc
cwtl
mov
pop
jge
shlb
fsubrs
mov
cmpsl
and
enter
mov
xor
pop
xlat
sbb
subl
mov
sbb
fidivl
fcomi
int3
lret
pushl
fdivs
inc
aad
mov
ljmp
xchg
sub
mov
fildl
pusha
lea
adcb
or
out
inc
jle
cmc
insl
cmp
popa
and
aas
scas
xchg
dec
dec
shrb
mov
andb
cmp
sti
pop
inc
push
loop
mov
sub
and
inc
sub
sub
scas
push
push
and
xor
mov
push
bound
jle
dec
ds
test
mov
push
jb
ret
pop
aaa
test
rclb
jae
loope
dec
cltd
dec
ret
das
imul
rclb
cmp
jnp
repnz
cmp
cli
cmp
scas
mov
out
mov
lea
mov
mov
and
or
insl
inc
aas
push
ret
test
sbb
ret
mov
and
test
mov
pusha
pop
movsl
dec
ljmp
push
mov
nop
adc
mov
aas
sarl
dec
xchg
imul
xchg
jb
outsl
push
inc
sbb
mov
sbb
inc
iret
mov
stos
jmp
mov
inc
xchg
arpl
repnz
mov
add
pop
add
repnz
popf
fidivl
in
xor
int3
cmp
sarb
sub
rcrl
push
mov
xor
mov
inc
roll
lds
loopne
mov
movsl
jge
xor
adc
mov
mov
xchg
stos
stos
aaa
jbe
inc
rcrl
rcrl
add
mov
inc
or
rcrb
lea
push
mov
or
mov
cmc
pop
and
xor
dec
and
cs
in
scas
xchg
scas
out
push
iret
repz
ss
or
push
scas
ret
inc
clc
push
popa
stos
xor
sbb
mov
popf
loopne
push
and
pop
ret
in
cld
pop
xchg
std
jg
test
into
xchg
xor
fimuls
notl
loopne
adcb
push
mov
xchg
xor
mov
jns
add
les
imul
pop
mov
jo
imul
insl
mov
xlat
mov
in
cwtl
rolb
shll
mov
mov
test
xchg
stc
xor
dec
imul
or
or
ja
negl
iret
insb
scas
mov
ret
inc
fidivrl
mov
push
pop
aaa
inc
jmp
xor
cmc
pushf
push
test
sbb
and
enter
cmp
jmp
je
loope
dec
lcall
dec
adc
push
test
sbb
out
ret
ret
fisttpl
push
mov
pop
adc
dec
pop
inc
inc
push
add
xor
sub
je
stc
push
cwtl
mov
cmp
pushf
ss
pushf
mul
scas
push
enter
or
rol
int3
int3
mov
xlat
cmp
mov
dec
mov
pop
ja
mov
xor
out
push
cmp
outsl
and
jo
psubusw
shlb
jmp
add
adc
cbtw
mov
add
dec
cmp
cmp
arpl
mov
or
es
loope
mov
add
xchg
sub
jne
ds
addb
push
jne
jae
or
adc
fcomi
hlt
and
dec
sti
inc
add
xchg
daa
xchg
sbb
cmp
pop
stos
hlt
push
repnz
inc
insb
mov
fidivl
imul
lret
mov
stos
dec
push
lcall
scas
ficoms
mov
cmpl
xor
ret
repz
stos
mov
int3
sbb
iret
sub
test
xchg
imul
push
ds
adc
fildl
lods
pop
test
push
adc
shll
mov
pop
or
add
dec
stos
aad
jne
or
cmp
pop
xchg
jecxz
pop
jne
mov
dec
mov
aam
pop
repz
push
xchg
sarb
inc
cli
insl
push
out
in
mov
inc
xor
jbe
adc
loop
outsb
push
adc
dec
push
or
or
push
pop
fisubrs
push
cmpsl
nop
out
xor
cmp
filds
stc
lcallw
clc
push
in
js
sbb
shrl
pushf
pop
in
pop
fs
mov
aad
jbe
mov
int
cmpsb
mov
jb
ret
mov
adc
push
dec
pop
in
mov
adc
xor
cmpb
mov
push
pop
hlt
xor
mov
push
imul
mov
jp
pop
pop
lds
xor
adc
add
mov
call
add
and
push
or
divl
lods
imul
icebp
add
mov
lods
inc
repz
mov
bnd
jle
rcpps
or
xlat
out
outsb
dec
addl
cmpsb
add
mov
fstpl
mov
add
hlt
icebp
sub
loop
int3
test
aam
mov
enter
sub
inc
pop
inc
test
scas
sbb
ret
and
repnz
aam
add
test
in
xorl
into
pop
push
adc
push
jmp
cs
in
je
adc
xchg
push
mov
out
lods
orb
adcb
in
gs
mov
xchg
lcall
shl
movsb
into
mov
cld
fldenv
dec
test
mov
inc
sbb
and
mov
push
dec
push
jmp
xchg
mov
pusha
adc
sub
pusha
cltd
cmp
das
add
lds
sbb
fidivrs
push
mov
and
inc
aas
jo
mov
ret
pop
pushf
pop
mov
int
jb
mov
xor
push
movsb
out
push
mov
mov
leave
mulb
jecxz
rcr
iret
shll
andb
sbb
cli
jae
and
inc
pop
clc
xchg
pop
or
mov
lea
cmp
push
or
out
adc
sub
stc
jno
iret
inc
gs
es
or
sbbb
cwtl
mov
pop
je
rcl
cli
js
outsb
ds
leave
lret
aad
cmp
outsb
aaa
sahf
jmp
shlb
aad
and
cmpsb
aam
push
mov
cmp
and
jl
clc
ret
pop
push
mov
xchg
add
lea
lcall
in
movsw
xor
jmp
inc
mov
push
call
cmp
incb
aam
inc
dec
mull
popf
mov
or
mov
xchg
jns
mov
into
add
sbb
push
and
loope
inc
mov
das
data16
mov
loopne
orl
inc
inc
pop
imul
pop
es
jmp
push
push
scas
callw
cli
adc
add
sahf
jae
ret
xchg
mov
scas
das
xchg
shlb
cmp
mov
jp
pushf
pop
dec
or
daa
sub
pop
loopne
shrb
mov
and
repz
es
cli
and
push
jnp
pop
imul
out
xchg
xor
xor
faddl
pop
scas
jmp
mov
enter
adc
imul
mov
inc
jo
xchg
jle
xor
and
and
loop
jb
mov
lds
sub
jbe
adc
addr16
idiv
sub
sti
sub
sub
je
pop
aaa
cld
xlat
aam
loopne
push
mov
mov
push
pop
jae
push
pop
in
movsl
das
shlb
dec
iret
in
lds
dec
pop
adc
enter
push
imul
adc
jp
cmp
test
sahf
sub
int
popf
hlt
call
jecxz
adc
jl
rcrl
mov
mov
inc
iret
push
mov
pop
rclb
stos
mov
leave
je
xchg
es
jbe
mov
popf
stos
lock
nop
sub
pop
ret
fldenv
lds
int3
push
mov
ljmp
popa
loope
cmp
test
mov
pop
pushf
sub
pop
pop
mov
mov
popa
and
or
jp
lret
pop
fs
xchg
push
cld
mov
lret
add
lret
dec
out
mov
sub
mov
insb
sbb
mov
mov
and
pop
call
lods
sbb
xor
or
dec
xchg
rclb
jmp
mov
sbb
mov
and
mov
lods
sub
inc
fiadds
aas
push
cmpsl
adc
sub
int
lods
ss
jecxz
jg
or
icebp
push
sbb
dec
pop
outsb
sub
in
mov
arpl
adc
lock
jle
xor
mov
adc
jle
test
minps
in
sbb
call
xor
push
js
pop
cltd
add
adc
dec
cmp
es
test
and
adc
push
in
xor
jno
std
add
sahf
sub
push
popf
enter
leave
inc
jg
movsl
pusha
mov
lds
sbb
adc
ret
aas
push
out
sbb
push
push
shl
mov
sbb
sbb
nop
jnp
dec
or
das
mov
cli
cld
inc
repz
sub
push
cs
fstpl
pop
jmp
push
pop
push
or
mov
roll
xchg
enter
insl
fdivs
mov
enter
rcll
fcomps
xor
popf
mov
or
xchg
daa
mov
aaa
lods
mov
nop
adc
push
adc
dec
mov
push
push
popa
mov
std
sub
mov
sbb
sub
cli
pop
xchg
mov
or
xchg
mov
fdivrp
ror
hlt
lret
push
mov
push
test
fimuls
js
push
lahf
movb
xchg
in
es
nop
notb
fdivs
popf
pop
imul
xchg
aas
pop
mov
pop
shll
stos
pop
push
push
and
lret
pop
xor
fstps
scas
arpl
repz
push
ss
mov
je
and
push
fmulp
dec
inc
enter
xor
cwtl
sbb
jp
shl
xchg
sbb
out
adc
loop
jmp
push
push
cmp
mov
gs
loope
sarl
repz
loop
ljmp
pushf
les
push
bound
lods
xor
jo
xlat
out
movsl
cwtl
dec
sbb
or
sahf
jge
inc
and
fildl
mov
mov
jb
and
lcall
dec
test
fs
add
inc
sarl
ja
push
mov
fcmovnu
xor
addb
adc
cs
sbb
jmp
pop
mov
imul
data16
fmulp
push
sub
and
sub
arpl
leave
fdivrl
pop
xchg
fistpll
shll
ljmp
cmp
push
shl
mov
or
inc
into
test
hlt
xor
rclb
outsb
and
out
dec
and
in
adc
pop
fucomi
out
push
push
mov
add
dec
sarb
test
sub
xchg
cmp
in
cmp
je
leave
std
or
loope
push
sbb
xchg
sub
ret
in
imul
adc
pushf
daa
xchg
or
arpl
scas
aaa
imul
xchg
insl
xchg
dec
push
pop
adc
arpl
jae
mov
cli
outsb
sahf
xchg
test
push
push
fcomip
jns
add
out
loope
aaa
pushf
jecxz
mov
mov
mov
test
gs
int
xor
stos
push
clc
cmp
mov
fdivrs
sub
adc
adc
add
adc
inc
xchg
pop
or
int3
xor
pop
in
je
jmp
pop
add
inc
orl
adc
sub
outsb
ret
sbb
jnp
outsb
iret
jecxz
sbb
addr16
aam
mov
inc
xchg
nop
push
sbb
flds
fmul
xchg
out
mov
fstp
loop
sbb
out
pop
inc
inc
sub
push
inc
mov
or
sub
cwtl
repz
sbb
lret
mov
orb
ret
daa
xor
dec
dec
or
mov
sbb
jnp
cmpsb
inc
shlb
lock
xor
cltd
cltd
sub
gs
jge
xchg
in
mov
sub
cmc
jo
mov
mov
mov
mov
add
cli
xchg
inc
adc
rcl
xchg
xor
ss
call
outsb
pop
call
loop
loope
ret
adc
xchg
insb
popl
notl
push
out
aam
mov
cmp
push
adc
pop
movsb
cmp
adc
stc
cltd
aaa
sbb
dec
testl
std
push
cmp
xlat
fidivrl
fstpt
aaa
pusha
cs
lret
cld
lret
ret
int3
je
inc
pusha
cmp
inc
mov
daa
mov
inc
pushf
lock
in
pop
pop
insb
xor
into
pop
xor
xchg
add
rolb
shrl
dec
loope
push
aas
jg
icebp
xchg
or
iret
inc
adc
sbb
and
cmpsb
pop
int
or
test
loope
movsb
hlt
idivb
cs
adc
push
cmp
aaa
jmp
dec
mov
adc
push
sahf
mov
lock
outsl
maxps
fcoms
add
mov
jge
mov
mov
jg
out
xchg
push
scas
fmull
fistps
ljmp
lds
dec
sahf
cmp
bound
and
test
xor
xor
inc
test
stc
cmpsl
loope
fldcw
sbb
push
gs
fwait
das
mov
jmp
data16
add
out
adc
in
scas
fcmovbe
rep
lods
pop
cmc
testl
adcl
sub
leave
stos
xor
push
dec
test
aas
nop
push
addb
or
push
push
cmp
inc
cmpsl
sub
pop
js
push
pop
xchg
mov
scas
pop
mov
cmc
jae
fistpl
pop
sub
scas
xchg
dec
fcompl
int
aad
pusha
add
hlt
leave
mov
cmp
dec
out
sub
and
ja
cltd
shrl
and
xchg
jne
mov
ret
sub
mov
jne
subl
out
push
lcall
clc
pop
sub
movsl
mov
cmp
outsl
outsb
lret
and
les
jae
test
xchg
mov
vmaskmovdqu
fdivl
jae
pushl
aaa
and
push
cmp
pusha
xchg
arpl
test
xchg
push
sub
and
aad
xchg
shlb
pushf
push
add
and
shl
sbb
int
sub
popa
and
inc
rclb
cmp
aam
mov
inc
cli
push
fstpl
push
push
push
shlb
or
jae
dec
faddl
iret
subb
je
rcrb
sbb
mov
bound
jmp
pop
xchg
adc
xor
repz
cmc
jbe
add
inc
xor
mov
xchg
jle
add
daa
idivb
fstps
cmp
inc
aad
sti
cmp
movsl
fs
arpl
pop
adc
jge
mov
pop
gs
rcl
inc
or
std
aas
je
je
pushf
lahf
push
dec
stc
stc
daa
ss
aaa
int
sub
leave
mov
push
out
or
pop
pusha
and
js
shll
pushf
push
cmpsb
iret
mov
in
and
sbb
jmp
cmp
mov
jge
jmp
cmp
mov
inc
or
mov
js
call
rcll
lods
enter
fsub
mov
enter
mulb
test
xchg
ja
adc
xchg
test
testl
mov
sbb
cltd
xchg
aas
push
mov
pop
inc
mov
pop
inc
cmc
and
ja
shll
lcall
adc
sysret
insl
or
xlat
movb
dec
mov
mov
dec
push
adc
or
loopne
test
cmp
push
fisubs
add
and
adc
and
sti
adc
sub
loopne
mov
jl
mov
sbb
and
adc
aam
mov
dec
cmp
add
jo
adc
lds
fldcw
pop
cmpb
jbe
in
mov
push
subl
loopne
xor
dec
lcall
push
cmp
jbe
mov
mov
jns
in
push
ss
xchg
cmpsl
enter
pop
mov
inc
sub
sbb
inc
ja
shrb
xchg
in
sbb
xchg
mov
aam
in
and
iret
je
xchg
pop
cld
xchg
mov
sarl
jecxz
xor
ucomiss
jae
adc
or
sbb
xchg
arpl
xchg
inc
sub
cmp
gs
and
inc
jmp
std
jmp
and
imul
push
aaa
add
das
fstl
jbe
repnz
aam
add
add
lds
cmpsb
fidivrs
test
cmc
cld
adc
aad
scas
test
dec
imull
in
xchg
nop
push
lock
add
adc
dec
xor
popa
and
fsubl
lahf
add
lret
insl
fs
popa
mov
add
aaa
xchg
mov
adc
cmp
and
jge
cwtl
add
mov
in
dec
clc
pop
into
aam
loope
in
into
sbbb
push
or
cmpsl
mov
mov
add
jbe
fs
or
loopne
push
inc
bound
mov
push
xlat
subl
mov
sub
popa
test
adc
sbb
je
out
negb
fistpll
xlat
scas
cli
sbb
or
cmc
insb
in
push
xchg
xor
and
add
pop
std
mov
mov
cmp
inc
outsb
xlat
push
xor
shrb
jae
test
inc
test
icebp
mov
jno
mov
ds
pusha
lcall
dec
das
mov
fs
pop
es
das
inc
test
int
jle
dec
inc
cltd
neg
sub
jns
mov
ljmp
sbb
sbb
mov
push
jmp
sub
dec
stc
add
push
push
mov
in
push
jbe
mov
xchg
xorl
mov
clc
das
mov
cmp
in
sbb
aad
fisubl
stos
lods
dec
jno
stos
out
jmp
movsb
adc
push
in
inc
fidivl
add
mov
add
les
mov
and
xor
std
je
mov
push
out
mov
sti
andb
cmpsb
js
xor
pop
jp
xorl
subb
inc
lahf
hlt
jo
cmp
jbe
xchg
inc
imul
sbb
out
jp
dec
or
hlt
mov
stos
jmp
push
outsl
push
cmp
xor
mov
cmp
and
ds
icebp
cmp
pop
mov
shrl
mov
push
xchg
xchg
pop
js
pop
jns
inc
ja
andb
xchg
pop
xor
aaa
xor
push
leave
xchg
clc
mov
fnstenvs
pop
loopne
fldcw
scas
loop
cwtl
out
push
mov
add
test
repnz
in
xor
insb
repnz
addr16
mov
sub
ret
movsl
xchg
js
mov
sub
and
mov
cmp
popaw
dec
in
jbe
mov
dec
lods
or
inc
sahf
push
clc
pop
ja
sbb
and
xlat
enter
lea
addr16
sub
dec
mov
into
mov
add
testb
mov
cmpsb
faddl
pop
and
enter
imul
imul
pusha
dec
es
and
xlat
cmp
jg
mov
gs
es
inc
mov
in
es
aad
jl
add
sbb
sub
clc
in
pop
mov
and
mov
jl
clc
add
mov
inc
mov
popa
cmp
and
mov
fildll
fstl
aaa
inc
and
sub
mov
sti
push
test
xchg
fdivrs
mov
icebp
pop
dec
mov
outsb
roll
or
and
lock
inc
je
add
aam
leave
cmc
aaa
jmp
jbe
nop
cmp
in
xlat
data16
cmp
mov
jnp
sarb
jp
les
push
ja
insl
orl
bound
mov
lods
xor
movsb
mov
hlt
call
jno
and
cli
xor
outsb
xchg
adc
jecxz
imul
inc
outsl
jae
adc
xchg
imul
mov
psubsw
mov
inc
dec
cmp
xor
cltd
add
fsts
iret
adc
inc
aam
lds
lods
jmp
cltd
add
and
xor
ficompl
in
imul
push
push
out
call
je
inc
lcall
cwtl
pop
jmp
insb
cltd
xor
int
mov
lods
lods
adc
or
shlb
xchg
push
rcl
inc
hlt
xchg
in
sahf
ret
jecxz
lods
sub
clc
adc
dec
adc
pop
leave
sub
push
jns
and
leave
pop
push
push
xchg
mov
arpl
std
stos
cmp
fsts
sub
fyl2xp1
jno
aam
shll
dec
imulb
inc
cpuid
push
flds
data16
inc
xchg
popa
enter
lea
out
mov
bound
add
sbb
cmp
push
jae
movsb
pop
mov
int3
jmp
test
int
movsb
adc
lcall
push
fdiv
pop
jnp
pusha
and
std
test
xchg
lret
push
mov
jnp,pn
shlb
mov
in
imul
and
cmp
scas
cmc
sbb
loop
popl
inc
int3
inc
jp
mov
sub
jae
and
sub
hlt
or
jne
adc
pop
pop
lods
mov
fidivl
in
sub
icebp
test
iret
push
push
mov
insl
and
push
or
mov
ljmp
sub
lret
xor
andl
test
ljmp
and
xor
cli
repnz
fwait
adc
mov
int3
sbb
jge
xor
cmp
lret
stos
addr16
jnp
inc
ds
iret
pop
sub
add
fisttpll
add
enter
orb
add
pop
push
iret
mov
sahf
dec
inc
jno
fstps
bound
and
cmp
nop
mov
aam
enter
aaa
mov
add
xor
adc
jle
mov
adc
xchg
inc
push
negb
lock
repz
mov
pushf
out
sbb
or
sbb
or
into
mov
add
pop
xor
adc
jnp
stc
lcall
loopne
fwait
dec
push
mov
xor
decb
orb
sbb
jae
pop
pop
aad
mov
push
pop
and
xchg
popa
mov
jge
scas
cmpsb
adc
test
add
in
fs
addr16
fsubs
das
gs
cmp
dec
repnz
into
std
inc
jnp
int3
leave
insl
arpl
cwtl
scas
lock
mov
push
ljmp
in
nop
nopl
push
cmp
pop
sub
xor
push
aas
or
loopne
xchg
outsb
repz
stos
pop
xor
imul
pop
jne
aam
adc
mov
scas
clc
pop
pop
xchg
mov
inc
test
jl
ret
fiaddl
icebp
es
and
outsl
dec
in
pop
xor
cwtl
xor
adc
jg
dec
bound
mov
push
mov
push
push
mov
adc
jns
sbb
sarl
ficomps
enter
fnstcw
inc
mov
incb
cmp
inc
lea
add
repz
fsubl
mov
cwtl
cmpsb
mov
mov
cmp
mov
sub
xor
jo
or
shlb
int
out
sub
ret
jecxz
dec
add
mov
push
cmp
out
sub
popa
stc
dec
or
or
fldenv
dec
imul
cld
mov
jmp
fbstp
lods
xchg
cmpl
shrl
loop
dec
xor
push
in
nop
mov
add
fwait
jp
call
push
leave
test
outsb
sub
push
pop
sub
pushf
into
hlt
jns
ja
dec
sub
aaa
out
es
test
push
mov
inc
mov
and
das
jle
int
xchg
test
dec
insl
adc
adc
hlt
mov
dec
xor
xchg
pop
push
jne
cmp
mov
push
jl
sbb
data16
push
es
test
push
sbb
stos
pop
jmp
test
je
cmp
sub
iret
addr16
cmc
jo
xor
movsl
stc
mov
sbb
pop
add
mov
jns
dec
stc
fisttps
subl
fisubl
adc
addr16
jmp
enter
adc
in
test
inc
aad
pop
repz
push
pop
xchg
sbb
out
cwtl
aas
mov
inc
je
push
jmp
cmp
fiadds
mov
arpl
jb
movsb
dec
dec
mov
dec
ret
out
pushf
pop
fiaddl
leave
ds
es
shl
imul
or
mov
dec
jmp
xchg
push
dec
mov
dec
out
rcrl
shl
test
aas
lahf
lret
xor
fcompl
xor
cmc
jns
insb
mov
sub
push
pop
pop
sbb
push
cmp
adc
dec
sahf
stc
mov
add
and
push
mov
dec
dec
adc
out
movsb
push
test
sahf
scas
test
clc
fdivs
sub
xlat
add
and
in
jbe
enter
mov
cmpsl
stos
xchg
sarb
jae
fldt
rorl
dec
fldenv
loop
in
sub
pop
push
scas
roll
icebp
addb
fisubl
push
aaa
fs
cli
or
push
mov
mov
sub
icebp
xchg
cmp
jne
mov
iret
add
hlt
jg
test
mov
mov
inc
sbb
test
outsb
imul
or
into
daa
adc
addl
dec
cmpsl
sub
push
sub
int
jo
outsl
lret
outsl
loop
and
cmpsl
pop
addr16
adc
outsl
and
stos
mov
repnz
add
addr16
cwtl
dec
jae
popa
mov
add
std
scas
daa
sub
in
pop
imul
mov
dec
dec
push
xchg
add
ds
mov
aaa
ret
ds
pusha
sub
xor
xchg
jno
cltd
int3
div
dec
sub
jecxz
cmp
sti
shlb
scas
ficoml
dec
pop
stos
in
sub
dec
je
jl
dec
scas
adc
mov
jns
mov
pushf
cmp
sub
jne
decl
or
shlb
push
push
sub
jl
dec
movsb
jecxz
dec
inc
cmpsl
cld
xor
pusha
push
mov
jmp
mov
jb
dec
cmp
test
mov
movsl
jns
mov
and
mov
adc
test
adc
imul
adc
push
out
mov
pop
mov
add
sar
cmp
xchg
scas
mov
inc
shll
pop
popf
addr16
lods
sub
negl
lods
adc
sti
jne
xchg
mov
inc
mov
cld
pop
xchg
push
ficompl
inc
outsl
sbb
xor
mov
lret
insb
imul
mov
and
lret
adc
mov
outsb
xor
add
mov
inc
xchg
pop
push
lret
aaa
mov
cwtl
in
and
jbe
cmp
adc
push
adc
push
mov
cmp
loopne
or
ljmp
pop
lahf
jecxz
jb
and
cmp
xchg
scas
scas
in
cmpsl
mov
add
pop
or
rcll
dec
mov
pop
mov
cmp
loopne
sbb
in
cmp
sub
lcall
mov
push
lcall
push
xchg
fildl
imul
mov
loope
push
cmp
cmp
lds
test
mov
xchg
shll
jle
mov
xchg
jle
pop
push
cli
cmpsl
add
es
dec
and
jp
or
jo
sub
out
adc
fiaddl
in
cmp
shll
lcall
mov
sbb
loope
pop
mov
inc
adc
scas
into
shr
movb
gs
dec
adc
lcall
cmpb
or
lret
inc
icebp
dec
push
mov
loope
pusha
stos
in
leave
popf
scas
mov
mov
negl
xchg
pop
mov
fnsetpm(287
sub
shlb
mov
sub
movsb
cmpsb
inc
xlat
mov
cltd
mov
bound
mov
outsb
icebp
dec
dec
in
push
push
pop
shrb
lahf
mov
jg
add
xor
inc
shr
insl
add
ljmp
fsubr
lods
cltd
daa
adc
pop
cwtl
out
out
dec
sub
mov
aas
cmp
adc
mov
dec
inc
insb
repnz
cmpsl
test
add
jne
lcall
mov
je
add
rcrb
pop
pop
movsl
xlat
repz
sbb
cld
outsl
push
xchg
sub
fldl
sbb
xor
adc
add
std
rcr
jge
push
xchg
lods
cmpl
outsb
mulb
xchg
jb
adc
jo
pop
sbb
test
mov
cltd
fsubrl
push
mov
mov
jo
or
movsb
push
fidivrl
mov
cmp
xchg
vunpcklps
aaa
fs
hlt
or
and
repnz
mov
rcrb
add
xor
icebp
inc
mov
mov
xor
into
jae
mov
in
test
cld
fsubrs
repz
push
cmc
shll
and
jmp
add
jmp
sbbl
ret
fmul
xlat
xor
testl
test
add
lods
xchg
cmp
daa
jge
out
shlb
xor
out
cmp
int
pop
xchg
xchg
cmc
adc
add
xchg
test
add
leave
out
mov
lock
sbb
ja
jge
push
inc
inc
insb
les
add
in
push
add
xlat
pop
or
cmpsl
add
mov
cmc
pop
mov
inc
fucomp
sub
or
stos
push
push
pop
add
pop
fcmove
fbld
shlb
and
in
push
cmpsb
stos
xchg
test
or
insb
jae
mov
call
cmp
call
sub
xchg
stos
mov
sub
jp
dec
mov
mov
dec
mov
mov
loopne
inc
pop
jl
test
out
je
adc
testl
sub
sub
adc
xor
jmp
pop
mov
and
mov
call
test
mov
insl
sbb
push
fildl
test
sahf
fwait
add
xor
iret
or
xlat
insb
roll
out
mov
fldl
dec
aam
insl
hlt
adc
jae
addr16
fneni(8087
pushl
lods
aam
repz
jnp
sbbb
mov
shll
mov
fcomps
push
call
pushf
jmp
cmp
repz
dec
dec
xor
mov
cs
and
scas
loope
sbb
jo
daa
lock
dec
dec
shrd
imul
loop
mov
xor
ja
and
mov
in
mov
pop
and
cs
mov
movb
clc
movsb
out
inc
mov
test
nop
popa
mov
in
aam
mov
icebp
int
mov
je
inc
testl
in
and
popa
mov
push
lcall
ljmp
lods
movsb
jo
sub
bound
mov
subl
leave
mov
lods
xchg
sti
sbb
sti
loopne
mov
lea
xlat
mov
push
add
iret
stc
sbb
xchg
subb
push
fnstenv
aaa
jae
push
mov
icebp
xchg
pop
jge
mov
dec
jbe
adc
fwait
and
fbstp
das
xlat
ja
sbbb
int
decl
movl
xor
ss
leave
jp
mov
lock
mov
sarl
cmp
and
adc
fstps
add
decb
xor
lret
pop
rolb
into
sub
cmp
push
mov
neg
dec
and
cmp
xchg
in
cmp
jp
jmp
stos
xchg
frstpm(287
loop
bound
mov
fwait
dec
popa
repz
cmp
dec
rcll
pusha
dec
pop
dec
add
sbb
jmp
orl
xchg
xchg
mov
stos
jno
pop
pushf
repnz
sub
inc
push
adcb
pop
mov
sub
stc
mov
jnp
push
push
push
cli
outsb
je
jne
xor
mov
and
xchg
cwtl
jnp
cmc
in
sub
nop
stc
aad
push
adc
cs
xor
cmp
inc
pop
adc
inc
icebp
adc
mov
jno
popa
sub
das
sub
ja
adc
cwtl
scas
test
sahf
adc
mov
add
dec
add
jnp
jge
push
dec
mov
mov
pop
push
pushf
push
lods
push
add
pop
mov
test
dec
push
push
inc
push
push
mov
imul
cltd
or
xchg
cmc
xor
mov
ja
clc
push
mov
mov
mov
mov
lret
cmpsl
and
cli
cs
xchg
fdivl
ja
dec
movsl
jmp
xchg
cld
ret
repnz
shlb
mov
rep
adc
mov
imul
mov
pop
mov
lahf
pushf
or
loop
pop
jne
ret
icebp
movsl
aam
fcompl
cld
xor
jnp
mov
pusha
insl
inc
pop
mov
js
mov
inc
rclb
fcom
xchg
out
mov
pop
inc
xor
mov
arpl
add
add
pop
push
mov
adc
cmp
pop
das
das
mov
roll
pushf
add
xor
lret
stos
xor
pop
mov
adc
lahf
nop
les
push
enter
inc
inc
add
leave
pop
in
mov
sbb
jp
insb
xor
push
or
orb
hlt
cmp
out
add
mov
loope
data16
and
sti
adc
nop
ds
dec
fisttps
jecxz
ror
outsb
mov
fsub
lock
pop
daa
scas
stos
fcmovb
pushfw
dec
movsl
inc
in
in
jecxz
mov
aaa
sub
and
aas
imul
fisubrs
ret
sbb
inc
ljmp
loopne
das
push
or
dec
xchg
dec
fldt
and
mov
xchg
out
outsl
roll
enter
sbb
xchg
mov
in
cmp
xchg
fwait
les
mov
xor
xchg
std
xchg
adc
or
mov
jno
xor
mov
repnz
sarb
in
fldl
jge
dec
mov
adc
xchg
and
mov
jl
inc
push
xor
add
lgs
repnz
mov
inc
add
arpl
enter
cltd
insb
xor
pop
push
shl
dec
push
adc
or
imulb
andb
push
ret
pop
xchg
andb
mov
repnz
mov
pop
pop
adc
xchg
xchg
ret
mov
cwtl
cmpsb
xor
jae
mov
lods
dec
aaa
jo
add
repz
insb
popf
jle
and
lahf
lahf
inc
push
stc
sbbb
cwtl
std
adc
mov
arpl
imul
fld
push
sahf
push
dec
scas
nop
push
xchg
lret
lock
nop
adc
push
rclb
push
pop
sub
fidivrs
call
push
cmp
scas
jae
lahf
in
pop
cwtl
dec
sub
sarl
fimull
movsb
test
arpl
dec
jge
sbb
js
shlb
pop
adc
rcll
jmp
xchg
repz
int
and
rorb
xchg
sbb
fidivrs
jb
sbb
xlat
jb
les
fstpt
sbb
int
insl
add
jns
test
pop
jle
dec
and
xchg
test
test
lret
out
bound
and
push
pop
lods
loopne
push
cmp
cmpsb
mov
mov
dec
xchg
repz
nop
mov
push
pop
jmp
pop
ds
push
mov
andl
jae
mov
mov
cmp
mov
inc
adc
xchg
lods
ljmp
push
int
sti
mov
outsb
inc
hlt
mov
out
stos
jl
shlb
xor
add
add
jmp
jns
es
xchg
imul
test
fidivrs
sti
mov
dec
and
inc
dec
daa
roll
je
out
push
rclb
in
jne
xchg
inc
in
mov
pop
cmpsb
push
xchg
dec
mov
adc
mov
and
dec
dec
mov
ret
cld
jbe
call
inc
mov
lret
push
push
testb
test
test
rcll
add
rcrb
mov
leave
aam
xor
stos
jno
jae
aam
enter
rcl
outsb
dec
dec
mov
push
cs
jae
add
push
mov
sbb
mov
jge
bound
sub
cs
clc
sub
cmpsl
mov
repnz
in
aad
push
mov
lods
pushf
and
dec
incb
fisttpl
push
push
adc
mov
sub
cmp
mov
mov
fcoml
sbb
cmp
inc
adc
shlb
adc
loope
mov
sub
pop
xor
cs
test
dec
push
xchg
pop
inc
inc
hlt
daa
xor
mov
pop
dec
test
and
mov
xor
jecxz
push
lods
shrb
fwait
cwtl
popa
sbb
imul
cmp
dec
cmp
add
es
fstl
push
sti
mov
addb
cmp
mov
or
nop
pushf
ret
aas
and
outsl
pop
inc
stos
pop
loopne
cmc
or
mov
pop
test
mov
push
das
jns
std
out
jbe
cmp
mov
imul
aam
push
sbb
cmp
xor
lea
sbb
adc
mov
movsb
inc
xlat
jl
cmpsl
and
mov
bound
negl
sbb
fs
ret
sti
gs
xor
andl
notb
push
popa
rcr
or
xor
sub
jle
shll
add
dec
lret
out
popf
filds
shr
dec
pslld
pop
lahf
and
ss
xor
jmp
adc
loope
xor
push
jp
inc
xlat
cltd
cmc
loope
out
xor
jle
push
sti
inc
pop
mov
mov
jg
aaa
cmp
addb
pushf
cli
pop
outsb
mov
pop
sarb
pop
push
dec
pop
sbb
popa
jecxz
in
or
scas
cmp
push
iret
jge
xor
cmp
sub
adc
sub
mov
xchg
pop
jle
dec
push
add
xchg
push
push
cmp
cmc
not
aaa
adc
mov
mul
cwtl
xor
clc
jbe
into
movq
pop
aam
pusha
les
push
subb
mov
js
mov
cmp
bound
shl
mov
jns
daa
pop
int
jo
lcall
imul
out
out
push
mov
repnz
push
in
mov
repz
jns
mov
call
std
pop
in
test
fdivs
xchg
in
sbb
or
jbe
stc
sbb
xchg
mov
cmpsb
or
repz
or
sbb
or
dec
cmp
lds
add
inc
shlb
arpl
iret
test
icebp
xchg
dec
jnp
push
mov
push
inc
adc
jo
mov
in
faddl
jae
sahf
in
flds
ret
sub
movsl
jbe
sti
pop
aam
push
popa
movsl
fidivl
push
xchg
xor
jecxz
repz
lea
push
sbb
jmp
aam
xorb
and
lods
xchg
or
adc
daa
jae
lret
xchg
gs
repz
xor
fstpt
mov
in
into
ficompl
mov
dec
js
gs
arpl
dec
jne
loope
cmp
jmp
aas
mov
shl
mov
xchg
pop
movb
mov
push
mov
stos
lods
daa
int3
inc
xor
sti
mov
xchg
push
fistpll
mov
pop
jo
push
push
sbb
aam
ret
pop
jge
add
or
cmp
nop
mov
pop
mov
test
push
aam
inc
cmc
int3
sub
ljmp
lods
xchg
inc
xor
mov
and
push
lock
inc
lcall
pop
mov
xchg
fwait
ja
lret
mov
mov
push
lds
divb
mov
jne
ja
test
icebp
pop
jge
jno
scas
mov
dec
popf
sub
mov
sbb
cmp
or
dec
shrb
stos
iret
push
dec
push
mov
jne
scas
pop
loope
popf
sub
dec
mov
stos
push
fcomps
sbb
movsb
out
sahf
shll
sti
sbb
sub
popa
fiadds
mov
jp
dec
andl
cmpsl
repz
push
adc
lods
xchg
adc
mov
jge
hlt
pop
dec
lahf
mov
jne
mov
or
jne
or
add
jbe
mov
pop
aam
pop
outsb
dec
pop
xlat
or
push
in
loop
add
xchg
dec
mov
roll
pop
cltd
in
nop
orb
icebp
pop
mov
xchg
dec
pushf
and
add
dec
jo
scas
mov
or
xchg
xchg
daa
sar
int
and
cmc
pop
fwait
pop
cli
push
pushf
stos
and
push
and
cli
or
dec
sub
and
mov
jo
dec
adc
jnp
das
push
or
stos
jg
and
xor
das
loope
add
xchg
cmp
jmp
popf
scas
add
adc
add
lods
xchg
movsl
loope
sbb
nop
or
pop
dec
pop
adc
daa
sub
jo
out
fsubrs
fimuls
aas
inc
sar
mov
fiadds
and
push
in
mov
xor
psraw
jge
mov
out
sbbl
aas
push
insb
dec
pop
ja
dec
outsb
or
dec
call
roll
sub
stc
jne
ret
xchg
push
lock
fcoms
pop
mov
loope
inc
jbe
test
pop
push
scas
inc
pop
inc
fdivrl
cmc
adc
and
push
std
push
add
add
sub
enter
mov
or
adc
jbe
push
aad
iret
pop
xor
sub
imul
sbbl
movsl
push
aas
aam
mov
enter
sub
add
ret
lahf
add
aad
or
fwait
scas
lcall
xor
aam
test
xchg
push
outsl
or
push
jns
or
push
inc
cmp
mov
test
sub
dec
in
or
add
mov
out
mov
sub
fsubl
nop
push
inc
repnz
pushw
fs
inc
or
and
or
mov
cwtl
sbb
push
ffree
in
shll
lods
imul
pop
ja
loopne
and
ja
jp
test
and
hlt
lds
inc
mov
idiv
adc
cwtl
or
sti
mov
jne
adc
sbb
push
fimuls
xor
mov
push
addr16
aam
or
into
sub
xchg
or
in
mov
dec
cmpsl
xor
mov
aas
scas
es
mov
cmp
jl
rclb
jg
loop
xor
and
sub
xchg
mov
lods
xor
movb
pop
mov
stos
inc
nop
push
push
sub
scas
mov
mov
sti
mov
add
enter
repnz
notb
mov
gs
movsl
and
mov
hlt
enter
dec
jg
adc
insb
arpl
in
fcoml
mov
cltd
xorb
push
jne
push
stos
scas
cld
jmp
or
dec
jle
adc
lret
and
test
jns
movsb
inc
sarb
dec
imul
loopne
push
sbb
or
mov
xchg
mov
notb
push
push
iret
jne
jno
cmc
jmp
mov
mov
pop
imul
mov
hlt
ret
lret
mov
mov
dec
shr
mov
inc
cmp
rorl
sub
jo
ja
loope
inc
jb
test
xchg
and
adc
mov
adc
xchg
mov
cmc
push
dec
cmp
mov
out
pop
dec
test
test
subb
inc
cwtl
jg
inc
xor
clc
lret
dec
outsl
nop
cltd
stos
xor
arpl
mov
sbb
or
rcll
les
cwtl
mov
clc
xor
out
dec
push
sbb
ficomps
sub
out
rol
xchg
outsb
adc
xchg
push
ret
pop
es
cmp
cmpl
mov
mov
into
and
cltd
dec
and
pop
xorl
das
push
loopne
in
out
rcrb
mov
jmp
mov
sub
xchg
push
lods
out
mov
pop
es
adc
ja
lods
push
lahf
xchg
mov
push
cld
lea
test
bound
add
scas
mov
fstl
inc
imul
out
mov
push
cli
push
rcl
frstor
pop
or
mov
push
pop
aaa
pop
inc
aad
rcll
out
js
fistpll
pop
push
push
outsb
fimull
xchg
mov
dec
fsubs
fisubrs
mov
stc
add
push
fcoml
sbb
jo
popa
push
aas
push
jg
inc
js
add
roll
loopne
clc
push
mov
xor
and
xor
and
call
pop
sbb
jae
mov
push
ret
lods
enter
pop
fmull
sbb
sbb
mov
sbbb
lret
insl
out
cwtl
xor
daa
and
jl
lcall
fwait
or
adc
cmp
std
jle
inc
lods
and
fxch
jle
mov
jb
orb
sbb
out
mov
mov
mov
out
imul
imul
lret
xchg
jge
gs
mov
adc
mov
dec
pop
mov
bound
dec
mov
and
cmpsl
push
mov
xor
sbb
sbb
aad
mov
hlt
sbb
sbbb
or
cmp
adc
push
stos
mov
xor
int3
mov
fdivrl
and
cmp
push
fimull
push
dec
insb
jbe
jb
lock
add
std
stos
jne
jl
jno
mul
mov
or
sub
mov
loop
nop
out
imul
add
or
jg
xor
mov
test
clc
int3
sub
mov
outsl
sub
or
sahf
call
call
aam
mov
add
push
mov
mov
dec
sbb
mov
movsb
addr16
dec
jg
aam
repz
sahf
dec
add
sbb
mov
inc
push
imul
out
iret
sbb
ss
push
fwait
in
mov
ljmp
push
ljmp
xor
cltd
pop
add
push
push
sbb
out
ror
div
push
xchg
jb
push
lods
decb
andl
sub
lea
ss
sub
pop
jg
popa
pusha
jbe
into
pop
repnz
ja
pop
dec
movsl
xchg
pop
inc
jmp
sub
das
cmp
je
sub
push
jb
ss
rorb
pop
in
rorl
loop
jb
mov
pop
adc
add
mov
data16
lods
mov
push
ficoml
or
mov
dec
and
dec
icebp
aad
jp
push
sub
aas
sub
dec
lods
int
hlt
inc
hlt
xor
add
add
adc
and
and
mov
inc
lahf
inc
fbstp
fucom
enter
sub
lds
aaa
and
jecxz
push
es
stos
jo
mov
fidivl
sbb
outsb
adc
jno
mov
xor
lock
pop
sti
test
jno
push
scas
push
push
sub
sarl
adc
fstpl
pop
jno
sub
push
lods
xchg
testb
gs
cltd
xchg
cmc
int
stc
push
mov
sbb
popf
pop
and
lret
imul
call
add
in
inc
lahf
or
rcrl
cld
add
cs
dec
jle
xor
push
dec
mov
lea
adc
das
std
push
mov
xchg
jge
inc
mov
push
cmpsb
into
or
pop
fidivl
mov
and
xlat
push
test
es
fisubs
dec
mov
mov
and
xchg
fmull
mov
jnp
shl
xor
outsb
inc
imulb
ja
and
sub
sub
pop
or
dec
sbb
dec
sti
int3
jns
xchg
adc
cwtl
filds
hlt
mov
adc
sub
xchg
sarl
in
sbb
test
push
inc
fwait
arpl
mov
mov
inc
ljmp
arpl
notb
std
jne
stos
cmc
add
lock
insl
mov
cmpsl
das
mov
imul
fdivr
jbe
sbb
movsb
cmp
pop
lods
mov
cmp
shl
cmp
js
mov
mov
pop
mov
sbb
push
xchg
push
sarl
or
push
scas
xor
inc
mov
cmc
mov
int3
ffree
lods
iret
fsubr
popf
sahf
test
movsb
daa
cmp
scas
loop
sbb
pop
cmpsb
xor
js
mov
pop
fwait
inc
mov
clc
in
sbb
and
push
sub
dec
pop
add
hlt
dec
adc
cmp
sub
lea
xchg
cmp
mov
scas
sbb
icebp
jp
filds
push
iret
rolb
inc
sub
and
idivb
cmp
add
mov
inc
addb
push
mov
cwtl
call
call
jl
imul
outsl
mov
jle
jns
lds
push
ret
int3
adc
in
test
sti
sbb
scas
push
add
out
arpl
and
test
call
xchg
pop
sbb
daa
jmp
decb
sub
addr16
mov
scas
or
adc
adc
shrl
mov
icebp
loope
cmp
cmp
or
pop
push
push
push
lcall
jp
xor
lods
sub
nop
jnp
retw
sub
cmp
add
in
fucom
xor
xchg
pop
pop
int3
push
push
pop
bound
jge
popl
stos
enter
mov
pop
mov
pop
sbb
sbbb
cmc
js
stc
xor
fisttpl
popa
test
gs
out
lock
sbb
add
sub
push
ret
imul
in
cmpsl
sbbb
enter
iret
jmp
push
fidivrs
loope
call
in
adc
xchg
int
mov
in
aas
mov
cmc
mov
jp
addr16
int3
or
jb
mov
xchg
push
sbb
xchg
and
push
lods
in
std
movsl
mov
inc
xlat
push
icebp
inc
lods
adc
xor
mov
ficomps
addr16
mov
pop
add
lret
fdivr
push
shl
pop
inc
insb
fisttpll
and
xchg
enter
push
je
pslld
popf
xchg
aaa
adc
rcll
ds
pop
cld
mov
xor
stc
jne
movsl
pop
std
or
dec
pop
jnp
jb
idivl
mov
jmp
cli
data16
mov
jae
mov
lret
push
pop
movsb
push
cmp
and
fst
fs
ret
xor
jne
inc
and
xchg
stos
jg
shrb
iret
stc
bound
push
xchg
adc
adc
push
cmp
repnz
iret
or
push
xchg
xor
dec
xchg
adcl
lcall
xchg
pop
ljmp
mov
dec
or
adc
ja
bound
push
xchg
inc
dec
jp
inc
shll
inc
or
or
xor
push
cmp
andl
call
mov
and
xor
inc
sub
call
jne
mov
lahf
fcoms
xlat
jg
mov
xchg
jecxz
mov
sub
es
push
mov
movsl
test
inc
add
jmp
and
sbb
in
cltd
pushf
popf
cmpsl
into
cltd
iret
mov
and
xchg
aam
stc
jns
mov
subb
sbb
add
daa
mov
mov
dec
and
jbe
push
cmp
and
push
aad
pop
jo
mov
xchg
outsb
fsubl
hlt
loopne
bound
push
fs
ja
mov
push
inc
in
cwtl
dec
and
lods
xor
cwtl
or
pop
mov
ds
or
ret
int3
dec
jo
jg
fs
adc
imul
mov
mov
pop
outsb
in
adc
push
clc
dec
cmp
dec
sub
ds
cmpsl
ljmp
call
outsl
lret
jb
pop
repnz
xchg
cmp
fdivrl
dec
push
sbb
lods
xchg
fisttpl
push
les
dec
xchg
cltd
test
testb
push
call
fsubrl
ds
and
xor
lds
pop
fistpll
mov
sti
js
aas
lret
xchg
fbld
and
cmp
cmp
sbb
scas
imul
notb
sbb
gs
insl
leave
outsb
in
jae
push
scas
pop
mov
mov
lods
shll
xor
mov
les
mov
imul
mov
add
xor
mov
in
loop
add
pop
mov
jnp
roll
add
jne
in
adc
mov
jae
xchg
or
mov
ret
lock
jle
xor
dec
gs
sub
andb
push
bound
or
dec
dec
cmp
pop
or
adc
dec
sub
inc
ja
sub
xchg
cmp
mov
icebp
iret
and
mov
cmp
cwtl
jecxz
xorl
pusha
in
rcll
mov
push
cmp
cli
dec
pop
and
dec
sbb
mov
add
jbe
adc
sar
push
and
faddp
cmp
dec
cmpsb
les
sbb
popf
push
les
jb
inc
or
and
dec
stos
repz
pusha
xor
loopne
mov
adc
mov
xchg
and
mov
test
imulb
cmp
push
mov
cwtl
jp
mov
mov
sub
lcall
inc
xor
inc
inc
aad
mov
mov
jecxz
sbb
or
mov
mov
xchg
adc
inc
xchg
mov
jp
fs
xor
push
stos
mov
lock
dec
sahf
stos
push
inc
outsb
or
xchg
mov
cwtl
gs
nop
movsl
and
inc
lahf
shrb
scas
pop
inc
push
sub
mov
push
insl
nop
push
insl
je
inc
addr16
adc
in
cmp
xchg
jbe
xlat
mov
in
fstpl
adcb
and
mov
and
sbb
dec
les
xchg
sub
ret
rcrl
pop
cmp
fincstp
cmp
dec
mov
jmp
enter
xchg
or
add
push
shld
lret
or
mov
cmpb
data16
dec
or
sub
lds
mov
out
stos
je
cmp
scas
cmpsl
fildll
fisttpll
or
in
jge
mov
imul
ret
push
ja
sbb
push
add
into
movsl
loopne
sbb
iret
cmc
or
dec
cmp
inc
test
xchg
insl
pop
popl
fisttps
dec
sub
cmpb
pop
sbb
push
jl
push
idivl
dec
fidivrs
mov
adc
and
cmpsl
ret
adc
adc
insb
adc
adc
es
outsl
aad
imul
ds
mov
adc
mov
push
cmp
jbe
fs
fnstenv
popf
push
ret
in
and
xor
xor
daa
jb
mov
cmc
inc
inc
aaa
lea
mov
inc
sbb
movsl
sahf
push
aas
lret
xor
cld
mov
xchg
adc
sub
mov
hlt
in
xchg
push
add
pop
or
push
cmp
enter
mov
outsl
fsubrp
push
adc
jmp
dec
cmpsb
orb
ljmp
ds
scas
and
dec
sbb
movsl
outsb
shl
gs
test
test
sbb
addr16
fstpt
pop
cmp
mov
dec
insl
push
je
mov
aaa
and
dec
lock
sub
iret
xor
int3
xchg
adc
adc
imul
pop
ja
adc
stos
dec
xchg
cmp
lea
cmp
movsl
dec
xchg
icebp
mov
pop
ja
pop
mov
bound
insb
popa
pushf
das
pusha
fsubrl
stos
sub
mov
imul
and
lds
out
sbbb
mov
lcall
pop
push
xorl
popf
ds
push
cmp
sub
mov
les
lret
scas
insb
test
dec
or
sub
mov
jmp
das
push
pop
hlt
mov
cmpsl
cli
xor
scas
or
jmp
xor
fisubrl
lods
aad
outsl
xor
mov
cmp
push
nop
stos
in
or
popa
inc
add
mov
lods
idivb
ficoms
sarb
jb
decl
aaa
sbb
sub
lods
es
xor
lds
enter
nop
jbe
adc
push
mov
fsubrl
loope
sub
fsubrs
adc
ret
jl
test
cmp
cld
es
lods
lds
jnp
xor
lock
cmpsb
jl
bound
inc
push
ficompl
pop
adc
dec
jo
jge
mov
movl
hlt
scas
cmc
aas
faddl
jmp
or
xchg
push
ss
or
add
movsb
pushf
xchg
mov
lcall
push
shl
inc
fistpl
or
lret
out
rorb
mov
cli
sub
xor
xchg
shr
jnp
xchg
push
adc
lret
inc
repnz
iret
inc
or
cmp
cwtl
pop
sbb
outsb
or
fsubrl
popa
mov
push
sbb
adc
push
fcmovb
jno
aam
sbbl
lcall
dec
sbb
das
ret
inc
popf
pushf
fmul
lods
int
sbb
cmp
add
inc
mov
scas
adc
test
nop
test
int
lods
test
in
popf
test
fs
cmc
sub
test
xor
dec
shll
lahf
andb
pop
mov
push
pop
mov
je
cmovo
mov
insl
pushf
stos
out
add
les
add
and
data16
shlb
cwtl
push
lahf
sbb
jg
push
dec
adc
or
cmp
lods
shll
mov
lock
ret
sub
or
mov
push
add
adc
je
scas
sahf
sbb
or
mov
inc
sub
lds
cld
fdivrs
sub
in
test
lods
jnp
inc
pop
cmp
lock
push
mov
stc
and
add
aas
in
clc
jl
dec
int3
push
mov
and
sbbb
sbb
mov
cmc
rclb
stc
je
test
jbe
jb
add
mov
inc
icebp
push
mov
sti
test
cltd
inc
add
hlt
mov
addr16
sbb
scas
jo
push
pop
lds
xchg
je
cmpb
mov
insl
insl
dec
xor
loop
cmp
sub
mov
mov
scas
dec
ljmp
sbb
fs
insl
xchg
xor
fisubl
sbbl
ds
push
mov
sub
incb
out
push
cs
jne
hlt
leave
push
xor
jno
or
sahf
jmp
call
stc
scas
or
in
stos
and
test
daa
bts
push
mov
ss
xor
cmp
jmp
fisubrl
and
out
jp
lea
pop
enter
nop
jp,pn
dec
mov
push
lods
push
sarb
adc
lcall
sub
aad
xor
cltd
scas
addl
jno
loop
or
push
fstpt
mov
dec
or
xor
aaa
xchg
and
mov
bound
loopne
push
mov
jne
int3
gs
xchg
push
push
pop
jne
lahf
sbb
and
pop
clc
loop
sub
mov
or
mov
sbb
rcr
mov
fisubl
or
ljmp
jns
fsub
sbb
push
and
jg
sti
das
addb
pop
lods
movsb
repz
add
ret
icebp
inc
mov
sub
sbb
lcall
or
sti
adc
xor
pop
cmp
cmp
int3
adc
and
arpl
iret
mov
int3
pop
sub
stc
lock
jecxz
adc
ret
sbbl
fnsave
in
push
ja
inc
shll
pop
nop
cs
movsb
adc
ds
mov
dec
or
psadbw
daa
mov
pusha
nop
addb
ror
les
rcl
mov
loope
mov
sub
push
repz
fisubl
jp
or
xor
cli
jns
loop
rcrl
das
cmp
sbb
mov
shrl
test
outsl
or
ljmp
mov
cmpsb
jl
pop
rcr
idivb
xor
push
adc
repz
sarl
test
sti
sbb
test
xchg
mov
sti
inc
sbb
js
mov
loope
in
push
aad
outsb
mov
xor
lds
jns
test
lods
cmpsb
pop
lods
leave
jns
fs
mov
or
lcall
or
outsb
js
scas
loope
cmpsb
enter
jle
inc
mov
pop
adc
push
mov
dec
add
adc
xor
outsl
xchg
push
dec
stos
mov
fstps
xor
repz
lods
xor
sbb
repz
lret
in
xchg
mov
faddl
and
pop
xchg
call
push
jp
pop
div
xor
andb
pusha
dec
push
xor
xor
cmpsb
mov
popa
pop
out
ss
and
mov
inc
in
cwtl
pop
xchg
or
jne
mov
cld
push
cwtl
push
xchg
adc
pop
cli
xchg
jl
mov
loop
xorl
out
push
fisttps
push
insb
push
jne
xchg
or
fwait
pop
mov
mov
cltd
test
ret
lcall
int
cs
jns
push
pop
jmp
add
jnp
aaa
cmc
lds
fs
cmc
hlt
int3
mov
cwtl
pop
push
push
lret
mov
pop
mov
dec
fwait
out
int
pop
divl
addl
test
pop
sahf
dec
int
leave
cs
cmc
mov
daa
out
mov
stos
psubsw
subl
es
cmp
jl
jle
inc
js
iret
movsl
lret
outsl
sti
mov
fcomps
dec
imul
js
mov
ss
les
test
inc
sub
test
std
xchg
jno
inc
pop
call
add
sbb
rorl
pop
dec
cli
idivb
pop
mov
push
movsb
sti
jl
add
push
mull
cmp
sub
in
insb
out
jmp
repnz
scas
mov
cmp
mov
jle
mov
push
addl
fucom
enter
scas
inc
mov
data16
rcrb
das
call
out
repz
xchg
testb
call
gs
xor
xor
add
jbe
adc
mov
ljmp
mov
lahf
jae
xor
lds
mov
loop
nop
xor
push
fisubrs
lods
movsl
test
or
jo
rol
int3
sub
mov
jecxz
hlt
icebp
cmp
pop
adc
outsb
fbld
jae
icebp
pop
sbb
insb
pop
outsl
pop
pop
fsubp
imul
stos
cs
movl
mov
mov
push
roll
fisubrl
push
arpl
lock
xor
mov
adc
adcb
loope
gs
adc
insb
jae
dec
aaa
mov
les
xchg
or
mov
dec
addl
inc
pop
inc
call
jnp
dec
and
push
in
mov
mov
fdivr
mov
cltd
cmc
push
pop
test
pop
xor
mov
xor
pop
jne
push
aad
sbb
hlt
xchg
adc
xchg
fistl
dec
jmp
in
dec
pop
lock
loopne
pushf
push
imul
push
sub
sbb
lahf
hlt
les
scas
xchg
bnd
inc
pop
mov
test
inc
cmp
mov
mov
inc
mov
pop
adc
das
bound
sbb
sub
sub
or
test
stos
xchg
inc
imul
out
mov
bound
jg
data16
or
adc
inc
jle
dec
gs
lea
fwait
jecxz
addr16
sub
inc
adcl
pop
cmpsb
adc
cmp
outsb
mov
jp
int
dec
test
mov
push
push
cld
xchg
loope
and
dec
push
movsb
imul
sbbl
cltd
sub
mov
js
je
shrb
lods
outsb
push
xor
add
loopne
xchg
jmp
movsb
std
mov
add
clc
xor
mov
xchg
mov
xchg
push
push
cltd
movsl
sub
lods
adc
push
stos
inc
add
add
adc
or
push
and
xchg
lods
std
jge
inc
pop
pop
jg
or
mov
xor
xchg
aaa
pop
xor
aaa
outsl
jbe
ds
xchg
fldt
inc
daa
push
xlat
aad
jae
jns
inc
shr
pop
pop
repz
or
adc
add
push
shl
popf
fiaddl
gs
fs
dec
push
fiaddl
pushf
cmpsb
les
ja
negb
jp
xchg
sbb
ret
mov
cmp
and
imul
or
loope
jae
sbb
adcl
xchg
fidivrl
mov
nop
or
xor
and
push
dec
ljmp
cmp
ss
fs
outsl
loopne
imul
or
cmp
sbb
aam
dec
rolb
out
or
sub
sti
rol
lret
dec
jl
rorb
adc
imul
rorl
test
aaa
pop
jecxz
stos
inc
add
sbb
push
jns
repz
cmp
ss
cld
xchg
add
or
push
shrb
rclb
leave
ja
bound
das
and
and
or
dec
bound
pop
add
xor
mov
or
inc
shlb
jecxz
pusha
ret
scas
and
cld
add
or
aaa
and
sbb
es
jmpw
jmp
cmp
sub
flds
scas
in
fnstenv
sbb
imul
or
mov
cwtl
pop
mov
fs
dec
ja
inc
ljmp
push
push
lcall
and
or
cwtd
jno
or
stos
or
pushf
xchg
add
sbbb
pop
mov
lret
mov
pop
dec
cld
cmpsb
aam
jnp
enter
stos
lcall
adc
add
jecxz
jl
adc
xor
testl
movsl
or
add
sub
dec
shl
xlat
sti
sub
xchg
pop
aaa
imul
cmp
add
rolb
push
push
push
loop
sbb
stc
cmp
aaa
push
mov
pop
xor
aam
or
adc
xchg
cmp
sahf
pop
arpl
lahf
jecxz
cmpsb
pop
mov
les
push
mov
pop
inc
cmp
cmp
lods
jns
adc
out
lods
or
cmp
in
cld
push
shlb
jl
lcall
mov
xor
mov
out
out
mov
dec
stos
adc
dec
jne
les
mov
adc
cmpsl
cli
or
xor
push
shrl
cmp
aam
adc
insl
shll
and
sbb
pop
pop
mov
inc
mov
in
ret
bound
pop
std
scas
mov
sbb
stos
test
xor
cs
xacquire
shll
cmpsb
pop
sub
mov
xchg
cs
in
sbb
lds
mov
les
pushf
fdivs
rclb
inc
mov
insl
repz
lock
inc
fcomps
inc
pop
dec
sahf
out
sbb
lahf
push
or
push
sbb
sbb
dec
pop
adc
repz
adc
jecxz
test
adc
xlat
int3
jb
sar
fiaddl
sbb
pop
fcmovb
adc
and
lret
ja
aas
into
stos
cmp
rclb
mov
xchg
mov
imul
cmp
adc
push
or
mov
and
clc
cli
data16
ret
out
or
cld
dec
push
mov
jno
enter
adc
aad
in
pop
dec
loopne
pop
fs
stos
iret
mov
and
rorb
push
mov
movsb
push
adc
int3
add
push
loope
inc
mov
mov
aam
stc
sbb
sub
loop
cli
pop
cmp
jo
push
into
insl
mov
push
jns
mov
enter
movsb
jmp
xlat
pop
test
dec
pop
add
ss
dec
fbstp
and
dec
adc
mov
rorl
mov
mov
repz
xchg
push
leave
dec
mov
push
insl
cmc
lds
out
outsl
mov
mov
popf
jbe
mov
xor
pop
sbb
out
rorb
xor
fwait
and
mov
or
insl
dec
enter
leave
and
jns
inc
ss
int3
stos
mov
mov
in
scas
aad
testl
adcl
mov
imul
pusha
mov
fs
insl
push
outsb
or
push
jle
xor
add
jmp
xchg
xor
aaa
shrb
fsubr
push
orl
fcoml
stos
cmp
cwtl
push
mov
lcall
das
rorl
cld
test
out
in
add
int
pop
jns
jecxz
jne
loop
adc
aas
jmp
cmp
push
push
orb
mov
push
aam
add
lahf
pop
aas
jmp
fimull
jb
ja
aaa
mov
fsubl
mov
xchg
jmp
xchg
push
shrl
sbb
mov
call
stos
inc
add
movsl
jbe
cwtl
mov
xchg
mov
test
sub
subl
faddl
leave
repz
or
iret
pop
gs
xchg
push
and
test
mov
add
xchg
jge
sbb
mov
lret
mov
movsb
inc
cmc
les
sub
xchg
mov
mov
fucomi
imul
movl
fxch
and
cmp
pop
dec
push
mov
pusha
into
popf
lret
sub
mov
testb
cmp
test
pop
pop
in
sub
xchg
sbb
dec
or
das
inc
shl
jb
or
aas
jl
jp
loopne
and
add
je
fs
aaa
loope
hlt
ret
jmp
xchg
repz
or
xor
pop
sbb
rcll
cmp
pop
xlat
mov
mov
frstpm(287
cmpsl
mov
sbb
mov
adc
mov
lahf
and
scas
xchg
fstl
sbb
xor
ds
jb
stc
in
int
or
and
xchg
loopne
jge
mov
cltd
pop
out
pop
fdivr
push
mov
mov
imul
cli
add
jb,pn
xchg
outsb
adc
mov
verr
pushl
adc
aad
aam
jl
mov
lds
insl
data16
ficompl
mov
mov
pop
repz
jo
bound
cmp
inc
or
cmpl
cli
push
push
in
mov
jb
jp
shr
ds
and
mov
adc
xchg
sbb
arpl
movsl
adc
sbb
scas
cmp
insl
or
scas
loop
nop
sti
mov
xchg
mov
movsb
mov
mov
in
cmpsb
test
imul
or
mov
adc
test
test
mov
adc
push
mov
cmpsb
sub
mov
lret
daa
mov
or
add
cltd
cmp
in
cmp
jecxz
mov
mov
in
les
mov
dec
or
ss
xchg
xchg
cmp
mov
jo
sub
inc
rorl
xchg
or
dec
or
xor
rcll
enter
pushaw
mov
or
es
daa
push
repnz
mov
mov
add
mov
enter
lret
cmpsl
shrl
jae
jg
push
sub
icebp
sarl
mov
into
aad
mov
push
mov
jp
test
sbb
sub
mov
popa
push
mov
mov
imul
sahf
cmpsl
xor
cwtl
add
js
cmpsb
test
sub
ja
inc
xchg
fwait
cmc
clc
push
mov
jo
or
movsl
or
xor
inc
pop
test
into
dec
stos
out
and
dec
in
dec
pop
mov
imul
cmp
xchg
ss
addl
lods
inc
sbb
in
stos
xor
mov
ret
mov
lret
mov
xchg
ja
test
xor
pop
in
add
push
add
sub
test
js
ds
sub
pop
add
lods
sbb
inc
dec
lea
fadd
xor
mov
fsubrl
pmulhuw
iret
mov
mov
jl
pop
dec
xorl
sub
jg
inc
jge
movsb
and
lahf
jno
sbb
addb
rol
mov
lods
pop
xchg
ljmp
test
cmpl
icebp
add
xchg
lods
nop
lods
leave
ljmp
add
fldt
xchg
test
mov
sub
push
int3
add
out
cwtl
mov
scas
jo
xchg
imul
mov
sub
fidivrs
cli
xchg
mov
mov
fcmovnbe
fdivl
iret
pop
lea
sti
push
xor
jno
in
push
xlat
out
sahf
ds
cmp
mov
pop
cmp
xor
sub
xor
pop
daa
xor
xor
scas
push
xor
xorl
xchg
add
dec
mov
cmp
rcll
inc
jp
mov
sub
dec
js
mov
gs
into
cmp
xlat
fmuls
adc
xchg
cltd
sbb
adc
insb
outsb
popf
cmpb
daa
lret
jnp
out
dec
rclb
es
outsl
out
cmpsl
cmp
lds
mov
movsb
cmpl
test
outsl
imul
insb
rcrb
xchg
pop
test
gs
xor
cmp
movsl
dec
mov
cmc
shr
xchg
push
ret
xor
xor
ljmp
xchg
push
xchg
jne
lret
fldenv
fucomp
pop
jb
add
fnstcw
inc
dec
rcl
int3
sarb
and
xor
inc
subl
clc
xchg
or
out
sbb
imul
mov
or
add
mov
pop
daa
pop
ret
fsubs
and
aad
in
push
outsb
ds
fwait
rcll
adc
jns
inc
sbb
cli
mov
aam
mov
loop
sbb
sbb
cmpb
lret
cmpb
outsb
popa
out
and
adc
xchg
push
jge
xchg
push
add
inc
pusha
xchg
lret
in
imull
dec
lcall
loopne
cltd
fbld
mov
loopne
mov
push
and
inc
fcomp
loopne
jmp
pop
repnz
fcoml
test
push
xor
mov
pop
mov
loopne
ret
sbbl
sbb
inc
add
orb
sub
xchg
jge
mov
mov
pushf
jl
in
movsb
into
sbb
mov
scas
push
data16
sub
mov
or
fistpll
sub
inc
mov
rcrb
sub
in
insb
rorl
jle
xor
ja
adc
test
mov
sub
mov
inc
sub
test
cmp
sbb
sbb
cmpsl
jb
jb
in
out
rolb
sarl
mov
insl
push
jp
add
lea
mov
jae
cmp
mov
shll
jge
out
mov
aad
mov
sbb
and
xor
lcall
imul
adc
enter
push
mov
les
stos
je
adc
push
add
sbb
mov
cmp
jecxz
clc
sub
push
cmp
jno
dec
js
scas
popa
rcr
popa
stos
sbb
pop
xor
and
std
add
outsb
pop
das
mov
in
movsl
jnp
push
xorb
ljmp
mov
mov
outsb
jnp
pushf
push
lahf
adc
fcmovne
ljmp
adc
or
or
stos
in
mov
and
adc
mov
repnz
mov
jecxz
decl
mov
mov
adc
mov
dec
mov
mov
dec
into
mov
idivl
dec
jp
mov
push
mov
subb
xchg
sbb
ret
bnd
nop
subl
mov
mov
stos
in
mov
inc
stos
repz
dec
sub
push
and
sahf
les
ds
mov
add
cwtl
xlat
fildl
push
and
mov
and
xchg
jbe
test
repz
jb
bound
sbb
dec
or
fldenv
xchg
shlb
ja
adc
xor
mov
xchg
imul
xchg
insl
xor
and
add
in
pop
ret
test
push
test
aam
pop
sub
cmp
mov
mov
push
stos
das
lods
adc
subb
mov
in
pusha
dec
test
mov
subl
jnp
sub
fistl
push
jne
cmpsl
mov
out
enter
adc
mov
fwait
push
inc
sbb
xor
cld
mov
push
sbb
adc
insl
xor
insb
mov
cmp
push
imul
push
lds
and
xlat
push
and
jp
xchg
leave
pushf
mov
or
adc
mov
cmp
add
test
push
aas
sbb
fnsave
icebp
and
jns
repnz
cli
pop
loopne
out
sbb
std
adc
out
mov
add
lock
xchg
push
dec
push
mov
lcall
imul
and
xchg
imul
add
xchg
fmuls
fcoml
fchs
jb
mov
mov
icebp
mov
loop
sbb
or
cmp
add
decb
cmpsb
xchg
testb
leave
sub
scas
dec
and
jbe
jmp
cmp
mov
mov
js
push
jmp
lods
fdivl
jnp
shl
cltd
cmp
mov
dec
scas
ja
dec
sbb
nop
jns
push
mov
push
xor
inc
inc
rclb
repz
mov
mov
in
out
xor
lcall
popa
cmc
lods
jl
aad
jno
outsb
cmp
inc
in
sti
jmp
jmp
sahf
xor
cmp
lret
push
mov
xchg
add
stc
test
loope
ret
or
jb
mov
sub
shlb
push
cld
dec
mov
enter
mov
or
sbb
inc
xor
lea
sbb
mov
adc
inc
adc
rcll
xchg
mov
js
call
sbbl
or
jp
adc
xchg
adc
and
inc
jmp
cltd
addl
sbb
or
sbb
arpl
stc
sub
stos
pop
pop
add
les
ret
add
or
cmp
adc
jne
movsl
loop
xchg
orb
mov
lea
mov
dec
mov
jnp
ss
repnz
pop
in
or
shr
enter
jle
fsubrl
testb
add
push
ss
fs
mov
push
lret
mov
sub
xchg
popa
mov
add
lret
shlb
pop
mov
bnd
adc
pop
popa
lds
test
rcrb
push
adc
add
jb
mov
ficomps
std
sub
xchg
loope
or
shll
push
fisttpl
fcmovnb
push
pop
imul
sbb
adc
test
xchg
pop
jb
scas
repnz
xchg
gs
mov
mov
fimull
cmp
pushf
inc
leave
imul
stos
sub
mov
and
popf
mov
add
clc
iret
dec
scas
pop
test
out
mov
pop
or
ja
pop
adc
inc
push
inc
lods
dec
mov
inc
xchg
sbb
mov
aaa
inc
imul
out
cmp
movsl
add
pop
inc
fisttpl
gs
or
out
mov
jl
mov
pop
mov
xchg
cmp
or
xchg
sub
lahf
outsb
adc
testb
pushf
cmp
test
in
mov
rcr
std
arpl
idivb
jo
xchg
mov
push
test
aad
aas
mov
fcoms
jg
in
dec
in
leave
mov
ficompl
jle
adc
xchg
pop
sbb
or
xchg
ds
cmp
das
or
into
cmp
sbb
push
shlb
in
push
mov
outsb
push
dec
dec
push
lds
mov
or
bound
out
call
pushf
mov
into
xchg
lds
lds
push
movsb
in
adc
test
popf
lds
push
mov
mov
ror
adc
dec
jne
scas
pop
sub
pop
stos
xchg
les
jae
jns
xchg
cmp
jne
pop
nop
cmpsb
mov
add
in
call
flds
mov
rcrb
push
dec
out
test
xlat
lea
xlat
mov
movsl
jp
enter
test
adc
jp
xchg
cmp
lods
and
aam
or
js
xor
add
dec
lds
pop
xchg
mov
pop
pushl
scas
stos
cltd
outsl
iret
xchg
movb
cwtl
inc
adc
pop
pop
inc
xchg
xchg
sar
mov
jo
and
pop
call
gs
cmpsb
sahf
mov
lahf
iret
inc
dec
cmc
jg
scas
xchg
jnp
sbb
xadd
mov
aaa
pop
addb
xor
jmp
std
nop
jp
jnp
fwait
xchg
movsb
popf
pusha
in
lahf
test
sub
sti
jnp
mov
imul
push
mov
xorl
sub
inc
lret
div
ds
bound
fldl
xchg
popf
in
pop
hlt
jge
inc
icebp
xchg
scas
jp
mov
outsb
push
divb
or
test
push
and
repnz
in
jnp
xchg
jg
or
cmp
mov
cmpsl
add
ja
mov
lods
fldenv
popa
cmp
sub
add
mov
mov
insb
pushf
cmp
jge
lahf
data16
popa
je
or
das
inc
dec
cli
pusha
andb
cli
cld
cmp
push
cmp
jl
dec
mov
arpl
jbe
sahf
sub
cmc
push
dec
daa
js
sub
pop
in
push
mov
ljmp
jecxz
insl
rol
add
or
push
dec
add
add
bound
not
xor
xchg
out
lret
push
sahf
hlt
fbld
stos
sub
mov
daa
sbb
das
movsb
jo
es
cs
shrl
mov
cmpsl
jl
xor
add
inc
cmp
sbbl
pop
cmp
popa
mov
mov
inc
add
xor
sub
and
les
xlat
shlb
repz
mov
je
xadd
mov
in
hlt
call
add
jb
sbb
mov
std
popa
lock
mov
imul
stos
cltd
comiss
mov
inc
aam
sub
test
sarl
fcoml
xchg
in
adc
movsl
mov
sub
push
xchg
rcrl
mov
sti
sub
and
popf
or
rcll
sub
adc
fnstcw
xchg
mov
sarl
into
pushf
stc
adc
mov
lret
testl
in
testl
cmc
sbb
push
cmp
sub
cmpsl
loopne
sub
and
push
xor
ljmp
stc
dec
and
out
xor
enter
or
xchg
mov
mov
fdivp
push
popa
dec
jmp
jl
stc
pop
iret
sbb
mov
addr16
mov
js
imul
rcr
in
scas
rcrl
and
inc
outsb
xlat
cwtl
loope
fldl
push
jbe
or
outsb
dec
push
popf
dec
mov
test
je
dec
mov
jge
cmp
xor
pop
lcall
std
mov
jb
data16
adc
jne
xchg
daa
adc
mov
sbb
pop
lret
and
addr16
and
jge
in
test
int3
add
mov
sbb
nop
mov
cmc
repnz
or
int3
nop
adc
lea
clc
mov
scas
mov
fucomip
jo
fs
push
daa
rol
jno
push
out
sbb
mov
or
cs
pushf
inc
aaa
in
mov
fmul
or
sub
sub
dec
mov
inc
inc
cli
add
or
mov
pavgw
push
nop
dec
clc
pusha
push
fisubl
nop
test
mov
add
dec
jmp
inc
dec
sbb
lock
hlt
mov
xor
and
adc
xlat
sub
fsts
mov
cmpsb
addb
cld
aam
insl
mov
fwait
sbb
ret
lods
jmp
in
gs
dec
push
cltd
gs
inc
loope
setb
cmpsl
jg
mov
inc
js
imul
cmpsl
xchg
imul
dec
into
lahf
sub
or
mov
outsb
and
adc
xchg
cwtl
das
and
shlb
sbb
fwait
sarb
add
sahf
pop
jb
pop
in
xchg
je
push
sbb
fidivrs
scas
inc
dec
pop
or
gs
and
imulb
jp
mov
shlb
inc
gs
cli
stc
stos
cltd
jge
out
sahf
orl
adc
mov
fld1
bound
aaa
insb
jbe
cltd
jg
push
xor
and
adc
sbb
cmp
call
in
ret
scas
sbb
je
cmp
cmp
imul
test
stos
mov
sbb
das
inc
mov
mov
mov
push
or
ret
mov
stos
test
dec
and
aam
int3
lock
popa
mov
cmp
add
jne
movsb
pusha
mov
in
push
sbb
xor
fwait
or
outsb
sub
rorb
mov
sbb
dec
jo
xor
pop
sub
fcmove
dec
repnz
sbb
and
jo
lea
fidivs
outsb
es
inc
loop
int3
shll
sbb
pop
lahf
pusha
cmp
xor
inc
dec
in
lgs
mov
lahf
xchg
lock
cli
arpl
outsb
xlat
push
clc
ret
cmpsb
loope
fucom
fcomps
sbb
cld
enter
push
les
sub
push
int3
shrl
inc
leave
sbb
loopne
dec
sti
loope
mov
mov
sbb
inc
les
rclb
imul
popf
int
insl
dec
pop
mov
fwait
test
shr
loope
cmc
sahf
stos
sub
or
ret
and
mov
adc
dec
aad
inc
adc
movsb
inc
adc
jle
fsubrl
pop
mov
cwtl
push
gs
jg
mov
sbb
xor
add
cltd
iret
incb
popf
xor
jecxz
sub
lret
push
cli
jbe
mov
stos
mov
sub
shlb
hlt
dec
mov
dec
mov
push
xchg
lods
cltd
add
cmp
dec
icebp
out
loopne
cmp
loop
cwtl
xchg
lret
inc
add
lret
sub
fcomps
xor
jb
idivl
sub
pusha
dec
mov
cmp
scas
xor
sub
dec
ror
ja
sbb
cmp
dec
dec
lods
int3
addr16
dec
xchg
sbb
sbb
cltd
jge
loopne
into
pop
mov
add
xchg
and
arpl
je
inc
dec
lods
jl
or
push
mov
and
movsb
gs
adc
lahf
inc
gs
pop
movsb
pop
mov
ljmp
xchg
iret
iret
jae
popa
aam
jmp
push
call
icebp
xchg
addr16
ss
and
outsl
pop
std
jg
and
jge
mov
dec
pop
insl
pop
fsubl
pop
ljmp
inc
push
lock
cmp
pop
xor
xor
std
popf
push
inc
fildll
popf
addr16
push
xchg
jno
dec
cmpsl
dec
idivb
das
leave
cmp
mov
xchg
cmp
sahf
addr16
adc
negl
fildll
jp
xlat
xlat
pop
xchg
daa
movsl
mov
inc
mov
mov
sbb
repnz
sub
inc
repnz
ret
int
sub
adc
inc
outsl
cmp
movsb
add
add
es
and
and
ja
mul
dec
scas
jb
ret
sub
popa
call
jmp
hlt
sti
mov
sarb
mov
sub
or
jecxz
repz
cltd
jb
mov
lcall
sbb
cmp
out
shrb
push
xor
pusha
sarb
les
xchg
data16
lea
out
shr
adc
jp
pop
pusha
mov
daa
mov
fsts
inc
xchg
dec
rcrl
dec
std
test
int
inc
cli
divl
cmp
push
lret
outsl
out
shr
iret
movsb
jns
sbb
icebp
lods
adc
or
pushf
arpl
mov
pop
dec
sub
push
iret
push
jo
xchg
inc
je
lret
stos
hlt
nop
ja
hlt
sub
cmp
outsl
or
dec
xor
xor
loope
adc
xchg
arpl
test
dec
xlat
or
mov
mov
fdiv
pop
ss
aad
sbb
sub
test
imul
or
fucom
insb
xor
pop
fstp
mov
test
cmp
xchg
cld
mov
sub
into
fndisi(8087
stos
mov
push
pop
mov
lret
rcll
aaa
out
push
pop
pop
jae
jp
sbb
data16
pushf
mov
dec
lret
push
loop
pop
lret
or
pop
jno
push
pop
es
std
bound
xorl
mov
inc
movsb
and
sub
insb
push
out
sub
add
rcr
icebp
dec
mov
dec
mov
push
or
cmp
int3
xor
loop
mov
xor
jno
icebp
mov
leave
out
push
and
packuswb
jo
jnp
xchg
sbb
pusha
and
add
xorb
flds
cmp
xchg
jg
xor
push
imul
mov
push
dec
pop
sub
sub
push
dec
adc
cltd
ret
or
cmp
pop
test
ds
xor
call
and
mov
ja
dec
add
xchg
lods
dec
xchg
in
jne
clc
and
pushf
lahf
mov
scas
dec
xchg
mov
and
sti
movsl
add
sub
xchg
sub
fdivrl
push
xor
rcll
lahf
and
mov
orb
movsl
movsb
mov
shr
das
xchg
popl
cld
cld
mov
int3
dec
aad
dec
repz
dec
jbe
sbb
xchg
xchg
cmpb
mov
lret
test
mov
jo
test
add
daa
push
rorb
add
out
or
clc
cli
xchg
jns
cmc
push
mov
in
ss
push
lcall
or
enter
fldl
mov
movsb
jno
sub
cmp
jbe
pop
adc
insb
push
push
stos
aam
repz
mov
lods
mov
ret
cmp
fisubrs
and
rorl
sbb
pop
lods
mov
xlat
scas
xchg
cwtl
call
push
das
leave
sbb
clc
rcll
aam
and
ljmp
insb
popa
inc
cmpsl
jne
dec
loopne
popf
lea
dec
cwtl
neg
push
testl
sbb
lret
iret
mov
or
xchg
dec
mov
jl
in
sti
aas
arpl
mov
jnp
js
cmp
or
test
std
aaa
adc
fmul
cs
aad
push
mov
popf
imul
adcb
xor
inc
fldenv
mov
cltd
dec
out
push
popa
das
insl
ljmp
add
cmp
repz
daa
gs
push
mov
mov
ret
int3
lahf
mov
scas
dec
lods
jmp
stos
pop
xchg
xor
leave
into
xchg
sub
stos
frstor
push
loopne
cmp
push
arpl
xchg
fs
mov
pop
or
mov
xchg
xorl
xlat
mov
scas
incb
imul
sbb
stc
adc
and
add
mov
mov
cmc
fcompl
test
sub
add
loope
xor
or
xbegin
fs
fwait
inc
repnz
push
and
movsl
push
jp
dec
stc
out
cmpsb
xlat
mov
out
sbb
or
outsb
int
jg
pop
xchg
fwait
adc
add
dec
mov
jmp
push
sub
popa
clc
lahf
fisubrs
and
lock
sbb
mov
mov
mov
dec
xor
sub
mov
pop
push
xchg
jo
xchg
clc
pop
pushf
lahf
pop
mov
loopne
lods
dec
sti
movsb
sbb
rol
aas
test
out
xchg
push
ds
cmp
jbe
mov
xchg
fiaddl
ret
mov
mov
ret
dec
mov
test
xor
inc
inc
cmp
push
sub
dec
fildl
ret
stc
in
pusha
pop
repnz
popa
mov
pop
ret
das
jmp
lock
dec
popaw
cmp
mov
icebp
lahf
xor
test
cmp
lret
popf
pop
aad
pop
mov
std
dec
sub
imull
and
faddp
jnp
in
lods
std
mov
jl
out
outsb
mov
mov
push
daa
cld
sbb
repz
xchg
push
rcll
jge
mov
test
push
cld
scas
fabs
cmp
stc
mov
adc
jno
rcll
jae
mov
mov
out
sub
popa
adc
faddl
cmpsl
out
call
pop
push
pusha
mov
fldl
fstpt
int
push
cmpsb
or
mov
mov
push
daa
in
push
rol
add
push
pop
addb
je
push
inc
jno,pn
fwait
jmp
movsb
fcmovbe
mov
andb
adc
mov
insb
adc
testl
inc
push
test
jae
push
or
mull
add
repz
fistl
lret
cmc
imul
lds
leave
aad
mov
pop
pop
xor
mov
jb
or
cli
int3
push
jnp
fnstcw
jge
cmp
repz
mov
mov
pop
dec
cmp
pop
jmp
imul
sbb
inc
mov
xchg
addr16
sbb
icebp
cmp
imul
icebp
fldl
fadds
and
xor
ss
shrb
lret
pop
cmp
mov
lods
xchg
and
out
daa
and
test
xchg
fs
jnp
jbe
xchg
lret
sahf
fs
sbb
lahf
dec
shll
fists
add
test
sub
adc
test
mov
cmpsb
mov
cmc
jle
sub
mov
imul
push
adc
pop
inc
fld
mov
push
and
and
pop
sbbl
inc
loopne
mov
stos
cmp
fwait
mov
xchg
fdivrl
aad
scas
fcompp
stos
jno
mov
or
and
divl
int
pop
jmp
outsb
enter
pop
mov
scas
repz
cmp
jno
add
fidivl
jle
lock
and
enter
fsubrl
xchg
mul
push
push
mov
adc
es
popa
inc
jg
xor
mov
lods
xor
adc
jo
push
cli
stc
or
fldcw
and
ljmp
xchg
ja
mov
jle
lcall
push
in
mov
jno
mov
sarb
out
adc
lcall
sub
insl
or
std
cmp
pop
test
daa
push
mov
shll
shlb
inc
int3
ret
nop
je
sub
pop
int
xchg
adc
jp
lahf
mov
mov
jne
push
pop
loop
jp
push
add
les
or
sar
gs
cltd
sub
flds
iret
dec
stc
dec
fistl
ret
inc
push
xchg
inc
icebp
mov
add
aad
mov
pop
enter
jge
sub
push
aad
jb
mov
add
repz
mov
sbb
and
out
adc
cltd
xchg
push
push
ret
dec
adc
xlat
adc
inc
add
lods
mov
outsw
scas
mov
sub
mov
sbb
and
pushf
dec
mov
xor
jo
int3
movsl
inc
movl
lcall
lret
dec
push
out
xchg
mov
and
sahf
clc
jnp
cltd
pop
std
jle
adcl
mov
fucomi
jl
mov
jb
pop
dec
lret
add
pop
mov
jge
xchg
test
cmp
pushf
lds
mov
adc
mov
cmc
xor
cmp
lret
andl
push
mov
pop
sbb
jnp
js
je
xchg
and
adc
xor
pop
addr16
roll
xchg
push
and
push
cmpsb
cli
jecxz
sbb
ret
clc
icebp
mov
movl
lds
cmpl
bound
ret
pop
fdivl
fwait
lret
mov
loop
xchg
and
test
clc
fstps
popa
cld
push
jns
aaa
stc
shlb
and
les
mov
neg
iret
addb
or
mov
stc
cmpl
xchg
pop
inc
icebp
mov
scas
das
das
out
cwtl
cwtl
jb
es
daa
sub
dec
in
scas
nop
fisubrl
bound
lods
lods
or
test
sbb
cltd
push
movsl
popa
mov
pop
or
inc
pop
push
lds
sti
cld
cltd
data16
cmc
xor
xchg
dec
adc
or
shrb
xcrypt-cbc
cmpsl
adc
sub
push
inc
data16
arpl
test
lods
add
cmp
sbb
ja
in
cmp
mov
adc
rolb
inc
lahf
stos
mov
sbb
push
pop
xor
cmpsl
xchg
dec
loopne
jmp
mov
cltd
pushl
and
imul
data16
mov
sbb
loopne
mov
aad
insb
cmpsl
add
jb
dec
cmp
cmpsb
pop
ss
mov
in
mov
mov
jae
inc
dec
mov
call
jbe
push
testb
fstps
jge
inc
cltd
dec
xchg
ja
ficompl
ljmp
in
loope
bound
lcall
call
lahf
jbe
adc
sbbb
adcb
push
sbb
and
xchg
lods
pushl
addb
add
test
mov
lahf
push
push
push
lods
addr16
lcall
arpl
imul
cmpsl
in
jb
xor
repz
inc
pop
iret
sysenter
imul
mov
cmp
test
mov
and
cmp
cmc
out
sbb
in
fldcw
mov
cmp
xchg
pop
les
pop
movsb
stos
push
sub
leave
pop
adc
push
and
repnz
cs
bound
dec
or
pushf
stc
cmpsl
sub
or
or
int
pop
mov
lods
shlb
fldt
mov
sbb
movsb
push
mov
sbb
push
movsb
add
testb
popf
lahf
ret
push
adc
xchg
dec
pop
or
mov
addr16
push
ss
nopl
push
loopne
mov
push
mov
jbe
es
fwait
or
rorl
fwait
and
pop
out
jecxz
fstpt
hlt
xor
cmp
inc
sub
xchg
cmovge
mov
sahf
lea
sub
cs
push
mov
mov
hlt
and
jno,pn
push
mov
sbb
sbb
jp
sti
dec
aaa
pop
sub
xchg
pop
out
fcomip
mov
and
jns
enter
pop
imul
ss
ficoml
xchg
movsb
sbb
mov
push
mov
sub
sarb
cmpsl
mov
shll
mov
shrb
cmp
cli
je
pop
inc
push
scas
xchg
sti
jl
mov
mov
fs
jecxz
add
andb
or
fwait
sbb
stos
push
push
dec
popf
xchg
mov
push
movsb
in
mov
pop
inc
popa
cmp
mov
xchg
xchg
pop
xor
pop
dec
jb
xchg
sbb
push
repnz
ror
mov
cwtl
testl
xchg
push
sbb
test
mov
ret
mov
jle
shr
dec
divb
lcall
in
mov
adc
ljmp
addr16
push
cmpsl
adc
cld
andl
lahf
rolb
pop
adc
testb
loop
fbstp
push
pop
inc
jbe
iret
stos
repz
dec
mov
rcrl
dec
sahf
outsb
aad
xchg
add
xchg
outsl
mov
sub
cmpsb
rcl
or
pop
pop
sbb
push
xchg
sar
sbb
jo
mov
push
and
or
lret
outsl
cmpsl
pop
and
cld
ljmp
ja
adc
inc
cmp
inc
imul
lods
fisttpll
mov
jnp
inc
stos
push
testl
ja
xor
stos
cmpsb
hlt
testb
adc
ljmp
inc
jne
lea
xchg
js
test
lcall
xor
outsl
pop
aam
or
sahf
shlb
test
pop
out
std
movb
cltd
pop
inc
into
repnz
xor
pop
mov
xor
daa
jmp
jae
xchg
fstl
and
pop
std
enter
jl
add
jbe,pt
jb
out
insb
shlb
mov
xlat
mov
cmp
push
scas
inc
movsb
mov
daa
adc
mov
fwait
jmp
xorl
cwtl
inc
xchg
ret
push
orl
pop
mov
push
sbb
adc
adc
sub
mov
or
rorl
fisttps
mov
and
push
mov
xchg
mov
sar
call
add
int
xchg
js
adc
push
xor
jmp
xchg
add
dec
outsb
ret
lahf
popa
pushf
xor
jl
lock
push
test
jo
movsb
or
push
leave
mov
ds
scas
adc
cwtl
ror
push
mov
xchg
and
mov
cmp
fidivrs
les
xchg
adcl
pop
mov
inc
insb
or
bound
pop
out
fistps
xchg
jns
sub
push
push
xchg
lahf
cltd
mov
push
push
sub
mov
mov
jns
or
mov
lock
ss
roll
mov
in
stc
stos
xor
fnsave
pop
jmp
sahf
and
leave
push
dec
or
inc
xor
out
xor
xchg
xor
jnp
add
shlb
icebp
mov
or
sahf
lds
inc
pusha
aaa
orl
mov
out
cmp
adc
xor
mov
sub
dec
sub
push
cmp
xchg
add
cmp
sbb
or
in
dec
adc
cltd
mov
and
adc
mov
mov
add
cli
lahf
push
iret
je
adc
lret
push
xchg
cmp
mov
lea
push
jmp
push
icebp
add
sub
jmp
xor
add
daa
xchg
push
sbb
cmp
std
movl
ss
in
fisubrs
xor
jl
sub
xchg
dec
es
test
notl
mov
xor
add
shrl
stos
or
cltd
push
sbb
orb
addl
repz
jecxz
sti
in
or
and
in
or
xchg
cmpsb
aaa
cmp
sub
mov
sahf
nop
jno
dec
data16
mov
lods
gs
adc
push
in
ds
int
lds
clc
clc
in
jecxz
fsubr
or
ret
xor
xchg
loopne
inc
clc
cwtl
push
movsb
sbb
inc
jecxz
int3
sbb
sbb
cmc
adc
lret
jne
adc
lock
jnp
sub
ja
push
and
mov
loopne
inc
or
pop
cmp
mov
fsubl
xchg
in
enter
push
xchg
mov
repz
pop
pop
movsl
cmp
fwait
add
sbb
push
mov
fsubrs
hlt
lahf
mov
xchg
push
jbe
sub
lret
popf
and
ficoms
stc
add
add
sbb
jl
dec
test
jbe
insl
pushf
push
mov
jmp
xor
stos
dec
bound
dec
dec
jle
sti
outsb
dec
rolb
push
jmp
mov
push
lahf
movsl
jo
test
les
adc
lods
sahf
loope
hlt
xchg
adc
dec
xchg
lret
cmc
mov
sub
in
mov
sub
outsb
jnp
sti
pop
jo
xor
pusha
ds
xchg
dec
push
push
es
jge
mov
test
int
daa
inc
aad
fs
in
pop
add
in
adc
ja
push
mov
pop
push
inc
call
mov
mov
sub
into
inc
adc
stos
push
push
inc
mov
test
inc
jle
fdiv
outsb
fimuls
sbb
sbb
pop
add
std
movsl
cmp
adc
fadd
aaa
xchg
cmpsl
inc
ljmp
sub
jo
je
rolb
pop
cwtl
pop
fstl
mov
inc
outsb
ficoms
shlb
jge
testb
push
mov
xchg
iret
sub
and
notl
leave
in
fidivrs
int
ret
loopne
push
pop
xchg
insl
cs
mov
adc
cmp
or
inc
lds
loopne
cmpl
iret
je
ret
mov
jg
xchg
cs
out
adc
scas
mov
cmp
or
push
add
ret
fbstp
shrb
xor
fldenv
hlt
rcll
cltd
or
repz
rcll
dec
push
bound
sbb
stos
js
dec
jo
gs
adc
lea
imul
and
cmp
mov
div
or
das
pushf
rcrl
out
in
mov
xor
xlat
pop
mov
pop
nop
jnp
loop
xor
pop
mov
mov
leave
pop
lcall
xchg
sub
add
or
mov
movq
push
aas
inc
mov
mov
mov
in
dec
shll
mov
test
daa
adc
or
aam
mov
mov
lods
std
mov
cmp
pushf
jns
rcrb
xchg
push
adc
mov
jae
aam
aaa
jb
pop
loope
mov
xorb
and
insl
or
mov
sti
movsl
leave
aas
push
add
jbe
jbe
out
in
and
in
mov
cmp
rcl
into
jno
hlt
cld
negb
jle
xchg
sub
jmp
inc
cmc
sub
in
or
sbb
mov
icebp
call
out
xchg
xchg
xor
mov
xor
std
imul
ss
mov
ljmp
fstps
cltd
scas
inc
pusha
pop
hlt
sub
nop
pop
xor
sub
cltd
mov
mov
sbb
call
mov
gs
lahf
clc
add
bound
push
pop
hlt
daa
insb
push
mov
in
or
outsb
sub
inc
xchg
in
ss
es
cmpsl
scas
sbb
or
lds
imul
ret
loope
mov
scas
insb
mov
in
xor
enter
and
sub
and
cmp
cmc
test
fiaddl
mov
clc
fldenv
jmp
xchg
xchg
mov
pop
xchg
pop
ret
push
icebp
sbb
imul
dec
iret
arpl
xor
lock
pop
inc
cmc
cmpsb
setle
sub
rcrl
nop
aaa
jno
xchg
insl
dec
and
imul
frstor
push
push
divb
fs
sub
pop
mov
mov
in
cmp
jp
sahf
mov
jmp
pop
pop
call
add
inc
pop
push
imul
xchg
cltd
cmpb
jbe
mov
xor
imul
lds
cmp
lods
jg
cmp
cmp
mov
add
sbb
mov
inc
loopne
in
lock
std
aam
cmc
stos
pop
fdivl
lds
pop
add
addr16
mov
lret
lcall
gs
xchg
adc
mov
shll
jo
xchg
inc
mov
fucomip
jg
insl
outsl
stc
outsb
rcrb
cmc
jle
sahf
in
cmp
sbbl
clc
mov
mov
sbb
pop
int3
jne
rclb
push
xchg
dec
outsl
js
sub
adc
push
fnop
sbb
dec
sbb
shlb
movsb
loop
test
sbb
hlt
cmc
or
shrl
cs
mov
push
stos
daa
clc
or
cltd
mov
cmp
lods
out
in
repnz
xor
leave
das
xor
push
cmp
inc
idivb
leave
pop
jbe
hlt
jmp
push
punpckhdq
xchg
or
ret
pushf
xchg
lret
lea
pop
sub
sti
paddw
mov
mov
mov
mov
fcmovbe
or
pop
out
std
and
xchg
in
lret
popa
sub
call
xchg
fwait
cmp
cmpsl
mov
or
push
test
jl
lret
dec
sub
lret
loopne
and
out
out
jle
jge
int
sbb
mov
addr16
repz
aad
clc
cli
pop
loopne
mov
or
roll
repz
jb
inc
fsubrp
jbe
sbb
daa
cs
popf
mov
sub
push
sub
rcl
xchg
adc
repz
fmull
inc
popa
dec
adc
test
adc
jg
out
popf
jl
cltd
jne
sub
cld
movsl
lods
dec
push
adc
in
pop
lahf
sub
gs
pop
out
pop
insb
cli
mov
divb
pop
jno
rol
je
or
cli
and
cmp
outsl
jp
divb
sbb
jecxz
repz
aas
ljmp
add
sub
fldenv
cmpsl
push
sub
sub
inc
jge
adc
in
mov
cmpsl
push
jge
push
jo
dec
repz
decl
pop
sub
ss
cld
iret
and
mov
cmp
arpl
fcoml
mov
int
or
push
mov
sub
shl
inc
shl
mov
xor
jecxz
mov
lret
jge
mov
sti
and
sti
shrl
lock
mov
inc
shll
push
mov
add
pushf
pop
scas
pop
movsb
and
mov
pop
lods
arpl
ja
nop
jmp
movsb
mov
mov
sbbb
pushf
lret
cmp
insb
out
jle
mov
mov
push
jp
clc
je
iret
ret
aas
sub
sbb
or
adc
imul
cmp
sarl
xor
cmp
pop
or
pop
cmp
and
fdivl
mov
loop
sub
push
push
xor
or
sub
mov
imul
sbb
sbb
jae
jmp
add
js
daa
xchg
xor
jno
sub
call
gs
push
and
jo
fsubr
inc
outsb
xor
lcall
pop
sbb
js
xor
inc
rcrb
lret
mov
test
mov
and
jmp
in
cmp
jne
pop
sahf
clc
and
sti
outsl
cmp
ret
inc
es
mov
dec
test
and
jne
lds
lahf
xor
aad
shll
cmp
les
bound
in
inc
cmp
sti
push
lea
mov
cmp
xor
repz
mov
lods
and
and
jl
les
add
push
loopne
mov
ja
or
into
popf
out
ds
fcomp
dec
jle
lock
outsb
cmpsb
dec
clc
cmp
inc
mov
inc
or
repnz
lods
aaa
gs
int3
test
movsl
sub
jl
push
push
popa
popl
lock
test
xor
mov
dec
jno
mov
cltd
push
xor
jge
inc
or
adc
jl
mov
xor
ficompl
ljmp
push
mov
sub
icebp
cmp
inc
aad
test
xchg
sub
repnz
dec
mov
idiv
sbb
test
or
inc
sbb
add
cmp
jne
and
mov
cmpsl
les
mov
mov
sub
rcrl
add
xor
xchg
pusha
mov
lods
hlt
inc
cmp
pop
fwait
cmp
add
xor
movb
or
pop
lret
les
sub
sub
das
mov
lcall
repz
add
jp
mov
shr
jmp
arpl
les
inc
push
test
fimull
adc
jmp
aaa
int
out
stc
gs
add
pushf
sbb
andb
ljmp
imul
jb
mov
cmp
inc
divb
jb
jne
out
fwait
jne
pop
adc
mov
imul
dec
scas
push
adc
inc
int3
gs
mov
xchg
or
mov
jb
mov
addr16
fldcw
push
fs
mov
mov
inc
jg
sar
scas
adc
add
xchg
cmp
andb
dec
push
in
ss
xor
jno,pn
roll
fldcw
sbb
push
leave
mov
cltd
xor
adc
push
out
data16
xchg
fiaddl
cmp
or
jno
fsubp
dec
or
or
lcall
ja
movsl
cli
sub
jmp
insl
loopne
mov
mov
sub
cld
insl
pushf
xchg
pop
icebp
add
push
cmp
and
jb
mov
mov
scas
loopne
push
mov
pop
or
fldt
adc
loop
aad
insb
cmpsl
fimull
gs
enter
xchg
stos
push
inc
mov
cmp
mov
adc
out
cmp
out
jo
dec
push
push
pushf
cli
fisttpll
nop
leave
rep
pop
mov
fdivl
jg
xorb
iret
and
leave
xchg
ljmp
icebp
adc
push
mov
shrb
jne
pop
addr16
test
sub
fwait
or
insl
ss
daa
pop
xchg
push
cmp
jle
xchg
push
decb
fidivrs
insb
rolb
xlat
fs
stc
fs
fdivl
and
jb
int3
jge
inc
insl
movsl
push
and
mov
mov
mov
inc
in
shrb
stos
xor
mov
int3
mov
push
adc
rol
lret
push
lret
stos
ror
jae
jo
adc
jl,pt
mov
or
shlb
add
stos
ss
jl
inc
xor
sahf
dec
in
in
sub
stos
movsb
add
pop
cltd
and
cs
cmc
sbb
xor
popf
pushl
mov
out
hlt
adc
cs
xor
in
fdivr
xor
jnp
push
lret
sbb
jo
inc
imul
insb
je
lds
mov
data16
mov
es
mov
leave
cwtl
pop
mov
ljmp
in
lods
inc
adc
fsts
sbb
cmp
inc
inc
mov
cmp
adc
cmp
ljmp
or
lock
pop
dec
iret
outsb
aam
and
ret
push
push
fldl
cmpsb
cmp
adc
clc
cmp
loope
cli
pop
sbb
pop
cmpsl
mov
outsb
mov
adc
leave
lods
test
lods
outsl
xchg
mov
stc
jne
or
int3
mov
nop
push
stos
or
pop
popf
icebp
adc
sti
mov
in
sarb
cmp
push
add
sbb
mov
in
pop
jno
leave
clc
rorl
adc
mov
push
mov
lret
fmull
jne
mov
outsb
sbbb
ret
gs
xchg
pop
lods
cmp
shlb
mov
aas
loop
ja
mov
push
adc
sarb
insb
xchg
std
mov
fidivl
adc
stos
mov
add
mov
mov
lods
ljmp
div
imul
cmpsl
jo
sbb
ret
fs
xchg
jnp
outsb
xorl
mov
cmc
fs
out
js
push
mov
xchg
pop
jp
sub
jo
inc
xchg
pop
lret
popl
jns
leave
mov
pop
sbb
lods
push
ret
aam
ret
dec
aam
dec
outsb
clc
mov
cmp
push
std
jl
ja
stos
lcall
int
push
add
mov
decl
shrl
xchg
lods
incb
fsubs
repnz
fistl
push
pop
lcall
out
fcoml
lea
and
popa
push
jle
jecxz
fiadds
fimull
mov
in
mov
xor
loope
insl
test
xchg
adc
out
lods
dec
jg
and
sahf
movsl
rolb
mov
leave
xchg
insl
push
addr16
inc
inc
sub
push
adc
nop
xchg
jg
push
in
loop
or
test
mov
dec
dec
inc
lods
jbe
cld
in
and
sbb
mov
fwait
dec
mov
sub
fwait
sub
dec
pop
xchg
icebp
test
fnstenv
mov
and
mov
push
adcb
push
stos
sbb
adc
fwait
sbb
test
sbb
xor
inc
ljmp
imul
test
pop
test
adc
mov
or
aas
and
push
jb
pop
aas
push
inc
inc
add
inc
sbb
push
fdivrs
or
push
mov
cmpsl
or
test
cmp
xor
sub
scas
jmp
lahf
insb
lock
stc
inc
lock
je
mov
xor
lret
xchg
stc
idivl
mov
daa
sub
cwtl
mov
or
je
inc
push
ret
fyl2x
add
dec
test
push
std
mov
jns
popa
pop
out
jbe
jne
sti
xor
and
imul
insl
aaa
inc
mov
in
in
mov
sbb
orl
addb
sub
dec
and
repnz
pop
lret
push
aaa
test
xor
sub
aam
movsb
or
sub
adc
mov
xchg
xchg
mov
mov
lods
jnp
and
adcl
sub
dec
pop
das
bound
bound
sti
adc
jb
push
sbb
frstor
adc
filds
out
sbb
mov
int
push
rcr
and
stos
inc
loopne
bound
iret
mov
sbb
sub
push
fiadds
adc
sub
js
dec
loope
push
fdivrl
outsb
cmc
fwait
mov
rorb
adc
mov
mov
sub
xchg
lar
dec
pushf
pop
jne
mov
inc
jmp
shll
adc
pushf
fiadds
dec
cld
push
sbb
int3
adc
subb
insl
cmp
inc
cwtl
push
inc
xor
pop
in
sti
cmp
lods
pushf
xor
sti
push
repnz
in
jne
cmpsb
pop
movsb
ret
push
adc
imul
xor
inc
adc
sbb
cltd
stos
jl
movsl
jne
push
icebp
lea
pop
fsubl
adc
and
int
jnp
xchg
aad
and
cmp
test
dec
or
jno
mov
paddsw
mov
pop
mov
jg
sub
xor
pop
mov
addr16
and
xchg
in
test
fs
inc
xchg
addr16
lock
fcompl
push
pushf
and
pop
cmp
sarb
jl
mov
iret
pop
sbb
xchg
mov
fisttpll
inc
ficoms
lret
push
gs
mov
mov
mov
dec
mov
push
stos
push
pop
cmp
push
pop
fcmovbe
adc
jmp
mov
aaa
je
out
divl
push
ljmp
cmp
cmpsb
imul
inc
adc
mov
push
cli
sub
ss
and
adc
add
cmp
das
xlat
cmpsb
adc
popa
jb
fidivrs
mov
xchg
or
pop
fs
push
iret
testl
es
mov
imul
scas
in
xchg
cmpsl
xor
or
mov
outsb
jbe
pop
insb
add
jne
fsts
and
sbb
adc
test
jnp
add
add
ret
jmp
decl
aaa
into
and
dec
mov
ja
xor
bound
pusha
pop
sbb
mov
adc
loop
inc
mov
mov
or
cwtl
sbb
call
shrl
push
cli
mov
or
dec
xchg
push
fnstenv
fcoml
sbb
lar
aad
repz
movsb
shll
insb
idiv
repz
movsl
js
in
xlat
sub
jg
xor
fldcw
jg
lret
cld
and
xchg
shlb
dec
pushf
aas
mov
adc
mov
inc
push
push
inc
fs
cmp
inc
cltd
loope
ret
mov
aam
sub
sub
clc
cld
and
lock
loope
outsb
sub
push
pop
aaa
int
and
ljmp
jnp
fcmovnb
adc
pusha
scas
mov
inc
jp
ljmp
pop
xor
and
xor
insl
or
adcl
shll
cmc
xor
int
sub
push
xchg
fwait
add
push
je
cs
cmp
or
jg
add
lock
rcr
lret
dec
mov
lcall
lahf
cmp
lcall
rorl
mov
xchg
sbb
add
mov
cmpsl
das
push
lahf
shr
dec
cmp
in
clc
rorl
fidivrs
add
test
mov
or
push
mov
fisubrs
int
dec
dec
cs
out
xchg
add
std
jecxz
push
push
push
xor
pop
jbe
xor
and
pop
repz
lock
adc
ror
and
mov
and
les
pop
sbb
xchg
mov
ss
xchg
shrb
mov
xchg
outsb
gs
sbb
rorb
out
fcomps
jnp
jno
mov
pop
fisttpl
xlat
pop
sub
cmp
pop
mov
shll
xchg
addr16
dec
divl
pop
ss
mov
adcl
fsubr
pop
jg
cmp
adc
inc
aas
je
dec
xchg
sahf
insl
sbb
pop
insb
add
imul
push
cltd
fldl
add
mov
in
mov
test
movsl
xchg
and
insl
movsl
iret
jmp
mov
scas
aad
mov
shlb
add
paddsb
je
mov
iret
xchg
fsubl
inc
cwtl
test
adcb
cmpsb
repz
xchg
arpl
sahf
movsbl
mov
push
loop
test
pop
inc
jb
aam
or
rorl
inc
jo
orb
sub
mov
add
daa
cmp
mov
jecxz
retw
sarl
sbb
les
jb
pop
xchg
and
imulb
or
lret
hlt
int
pop
gs
xor
push
xor
or
imul
dec
sub
setbe
adc
loop
push
hlt
push
iret
xor
outsl
inc
cmpsl
repnz
outsl
outsb
test
jp,pn
push
jo
std
sbb
and
sub
pop
jb
jne
push
cmpb
scas
in
repnz
sub
inc
or
movsl
pop
sbb
xor
jecxz
out
sub
push
ljmp
sub
pop
rclb
movsb
jno
das
sbb
xor
pop
mov
sbb
inc
jno
fcmovbe
cmpsb
mov
scas
xchg
adc
cmpsb
insb
pop
adc
xlat
push
insb
mov
fists
je
call
dec
testb
mov
xor
push
mov
adc
fldt
xor
das
cmp
jo
lods
cmpsl
repnz
loop
xlat
lea
push
aam
cmp
out
out
push
inc
out
inc
loope
sub
fcoml
imul
adc
or
mov
dec
arpl
in
cld
sub
test
mov
jl
push
shr
or
lret
jns
xchg
dec
je
scas
addps
cmp
pop
das
cmp
out
push
test
scas
aad
mov
cmp
nop
bound
mov
popa
scas
jmp
mov
cmp
and
and
or
push
movsl
mov
sub
cmp
jb
xor
popa
lahf
loop
stos
mov
or
mov
pop
inc
push
test
jmp
mov
sbb
adc
xchg
pop
push
sbb
scas
in
aaa
pop
sbb
rcl
pop
pop
lds
sbb
mov
adc
xchg
dec
mov
bound
es
insl
repnz
dec
cmp
jmp
pop
dec
push
mov
dec
in
or
jns
nop
popa
cld
hlt
test
xchg
push
mov
push
shlb
push
bound
cmpsb
popa
mov
ja
dec
ror
mov
pop
xchg
inc
dec
into
add
std
outsb
repz
enter
xor
cli
cmp
jb
pop
int3
enter
mov
inc
cmc
sub
mov
push
xor
sub
out
scas
loopne
adc
dec
jp
aaa
popa
flds
mov
xchg
sbb
fadds
jle
sub
lods
mov
stos
pop
int3
mov
ror
fisubrs
sub
ss
pop
outsl
xor
xor
ret
icebp
add
mov
push
lret
sti
add
dec
sbb
rorl
push
sbb
fdivrl
pushf
mov
jne
push
in
sub
push
int
mov
push
mov
add
out
lret
dec
xor
cmpsb
fsubrl
test
mov
mov
pop
cmp
in
cmpsb
mov
jmp
pop
push
inc
push
ja
mov
xchg
ret
out
add
in
mov
js
jb
push
dec
pop
imul
lahf
mov
scas
gs
in
or
add
mov
lods
sbb
sti
or
adc
cmpsb
fwait
iret
aam
pop
mov
in
xor
xor
add
repz
add
je
mov
lods
mov
inc
xchg
in
adc
imul
mov
mov
sbb
ljmp
add
inc
dec
and
sub
add
scas
push
xor
shlb
jo
sahf
fiadds
or
xor
int
xchg
pop
addr16
fisubs
mov
mov
or
lret
adc
shrl
xor
and
in
sub
das
fstl
xor
adc
jbe
adc
fstl
mov
pushf
mov
add
adc
inc
loop
lods
lret
jnp
movsl
ljmp
xor
movsb
leave
aaa
in
cld
cmc
in
or
daa
sbb
push
sbb
stos
pop
shll
mov
add
lods
pop
call
lea
cmp
pop
mov
cmp
inc
enter
stos
or
and
and
shl
sti
outsb
outsb
stc
mov
roll
xor
scas
test
dec
or
lods
aas
sbb
mov
std
pop
and
sbb
cmp
test
jns
or
mov
inc
or
mov
mov
decb
jp
and
push
stos
mov
jmp
mov
mov
aaa
pop
pusha
mov
imul
out
scas
mov
lcall
test
inc
aaa
loope
xor
test
loop
pop
mov
int3
dec
call
mov
dec
lcall
leave
loopne
fmuls
jo
and
icebp
ret
add
push
aaa
sbb
rcl
mov
insb
hlt
inc
jge
lds
nop
cli
xor
cld
inc
and
add
jno
cmp
xchg
out
pop
sbb
or
cld
arpl
xor
adc
out
cmpsl
lret
xlat
loop
cmp
xchg
mov
pop
aaa
aaa
sub
test
jle
push
or
pop
pop
xor
dec
vpminub
sbbl
dec
ret
sbb
ljmp
mov
dec
nop
popa
clc
shld
jecxz
fcom
mov
lods
and
mov
out
jb
movb
repz
fs
push
dec
jbe
scas
das
notb
xchg
ret
lret
jo
push
aaa
xlat
dec
jge
nop
aam
and
cld
sub
ret
and
push
xor
stos
push
lods
adc
js
clc
cmp
mov
sub
jg
cmp
sbb
int3
push
lahf
in
dec
shll
adc
shlb
orl
loope
push
pop
shll
inc
cltd
fldt
sarb
pop
lcall
mov
jnp
add
inc
stos
add
lahf
push
cmpsl
or
mov
or
fstps
mov
fwait
icebp
sbb
pop
dec
fidivl
jb
sbb
imul
mov
jge
or
cltd
insl
je
push
test
mov
mov
add
int3
leave
push
into
push
jne
lods
push
dec
repz
test
pop
sbb
mov
sub
jecxz
out
mov
add
and
cmpsb
sub
inc
lret
test
cmp
cmp
cs
jge
jne
cld
call
fsubrp
xchg
test
fisubl
es
roll
cltd
push
dec
xchg
pop
and
add
push
xor
jmp
inc
lret
add
and
sbb
int3
mov
xchg
dec
xchg
add
cs
jno
or
dec
pushf
outsb
gs
sbb
or
mov
in
cltd
movsb
js
adc
repz
cmpsb
jge
mov
adc
leave
stos
jno
icebp
popa
push
shrb
push
lds
xchg
add
test
pop
xor
xchg
fsubs
int3
jae
and
push
pusha
jge
push
lret
cmp
push
push
push
mov
pop
mov
and
inc
push
int
insb
mov
insl
mov
bound
rolb
fdivrl
sbb
lahf
dec
xor
mov
shrb
mov
xchg
sahf
ds
sbb
or
jmp
mov
cs
xchg
in
xchg
push
cmp
lds
pop
inc
xor
push
inc
icebp
data16
xchg
ds
es
pop
or
insl
out
repz
mov
pusha
cmp
stos
sti
decb
xlat
cmp
or
inc
sbb
data16
push
scas
jae
ss
lds
pop
sub
add
mov
mov
fcompl
lods
mov
ret
mov
aas
sahf
insb
add
dec
mov
pop
aam
sub
fs
imull
mov
xor
fisubl
ss
fisubs
stos
sarb
push
testb
dec
inc
cbtw
dec
cli
sbb
sub
cmp
test
add
pop
aad
push
test
xchg
xor
or
push
movsb
mov
push
ficompl
sahf
mov
mov
scas
mov
mov
movsl
xchg
jp
jnp
lods
test
lcall
sub
adc
icebp
fnstenv
shll
rcl
aas
cwtl
fdivs
lods
push
lret
xchg
test
xchg
cli
out
stc
or
adc
mov
orl
inc
inc
loop
sbb
mov
fmull
xorb
cmp
jmp
jge
dec
sti
mov
or
imul
call
mov
ret
xchg
mov
scas
mov
push
cli
fstpt
nop
pandn
sbb
jae
rclb
dec
into
outsl
cmc
testb
rcrb
push
rcrl
jbe
test
arpl
lahf
in
push
mov
push
nop
testl
fcomp
imul
popf
xchg
cwtl
push
adc
shrl
out
popf
ret
aam
lock
jns
push
sbb
and
sbb
cs
stos
and
jo
test
and
ficomps
or
out
cli
adc
sahf
or
mov
xor
add
mov
test
dec
xchg
mov
cwtl
mov
jbe
add
inc
mov
inc
cmp
adc
pop
pop
push
nop
stc
imul
lahf
xchg
add
lea
adc
push
rcll
notl
dec
jge
jg
push
cmp
leave
mov
daa
fstps
mov
mov
ret
clc
push
dec
daa
test
and
pop
cmpsb
lods
dec
scas
mov
cltd
fisttpll
or
mov
or
lods
mov
jp
cmp
pop
mov
xor
sbb
cltd
xchg
test
mov
sbb
mov
nop
pop
inc
mov
dec
imul
fcmove
cld
add
mov
cmc
aas
out
pop
push
jp
jnp
cmpb
mov
mov
jo
mov
in
testl
jmp
xor
je
movsl
and
pop
je
sub
jl
hlt
lahf
aam
divl
jecxz
xchg
cmp
xchg
and
lcall
add
and
es
pop
outsb
faddp
out
cmpsb
and
js
adc
hlt
imul
bound
inc
push
sub
adc
push
cmp
mov
adc
in
fildl
lods
into
jecxz
pop
push
and
pminsw
adc
negb
ret
cmpsw
mov
jo
push
cmp
and
hlt
cmp
add
je
hlt
fbstp
adc
pop
lret
pop
pusha
hlt
and
mov
sub
out
stos
mov
cwtl
fwait
push
fwait
inc
imul
mov
mov
data16
inc
test
fwait
pusha
in
cmp
clc
dec
mov
xor
xor
cmp
xor
stos
fscale
sti
hlt
cld
movsb
lahf
lods
xor
ret
icebp
jbe
cmpsb
lods
mov
pushf
mov
ret
sti
enter
insl
aaa
out
in
ja
mov
es
pop
rolb
out
push
ss
icebp
ja
out
jg
in
lea
inc
jno
adc
push
push
ret
xchg
das
sub
ljmp
adc
les
imul
adc
lahf
shlb
push
fcomi
addr16
pop
mov
sub
xor
stos
in
xor
jb
lods
push
scas
fnstcw
pop
sub
aas
mov
and
cmc
push
push
fs
in
or
ja
hlt
sbb
aaa
js
cmp
dec
jb
ss
pop
mov
int3
dec
sbbb
push
xorb
js
or
fisubs
mov
jnp
inc
negl
xlat
pushf
mov
mov
mov
es
or
mov
fsts
popa
adc
lock
xchg
icebp
mov
cmp
or
clc
sub
dec
pop
es
mov
adc
call
mov
stos
std
es
ljmp
mov
ficomps
xor
pop
dec
add
jae
bound
ds
sbb
sbbb
dec
push
sbb
fnstcw
sbb
in
sbb
cli
daa
push
std
xor
xor
fwait
sub
std
repz
push
adc
arpl
aam
mov
adc
jae
dec
jle
loopne
imul
mov
sub
fwait
sbbl
push
aas
mov
jp
xor
movsl
jmp
aas
aas
fcomps
cs
mov
add
cmpsl
shlb
sbb
xlat
mov
adc
movsb
lret
xchg
insb
jno
enter
sub
sbb
jo
push
inc
mov
push
mov
call
cmc
sub
pop
adc
popa
btr
data16
gs
scas
rorl
nop
and
sbb
aas
fists
into
stos
inc
dec
xor
and
mov
mov
and
mov
std
add
sbb
cmp
add
hlt
cmp
jl
popa
fwait
dec
xor
roll
mov
lret
jle
sbb
icebp
cmp
ds
iret
push
idivb
aas
rcrl
xchg
jge
leave
jp
pop
cmp
dec
ds
out
mov
cwtl
xorb
lcall
push
xchg
cltd
es
or
out
lahf
xor
sbb
lock
inc
je
xor
cmpsl
push
lea
imul
test
or
aaa
add
jns
cmp
adcb
push
rcr
adc
sti
pop
mov
xchg
loopne
mov
shlb
ror
pop
mov
ljmp
adc
jmp
movsb
jno
cmp
pop
push
in
cmp
push
fiadds
loopne
jp
inc
or
lahf
fldenv
xchg
xchg
lea
je
sub
sub
sti
insb
bound
adc
mov
jmp
lods
mov
outsb
stos
clc
dec
xchg
add
jmp
xchg
insb
mov
adc
rolb
cltd
shl
in
mov
jle
xchg
mov
icebp
into
test
xchg
sub
rcrl
pop
mov
cmc
inc
add
in
mov
jbe
imul
adc
rolb
fwait
les
or
and
aad
fidivs
in
xor
and
aam
push
sub
cmpsl
mov
push
mov
mov
popa
shll
dec
lret
shlb
xlat
inc
jmp
outsl
fstl
add
pop
mov
outsl
dec
ret
and
fiaddl
lods
lods
cmp
es
repnz
mov
mov
shrb
push
adcl
in
xchg
jae
cs
push
jmp
cli
sub
ljmp
sbb
popf
lods
aaa
and
push
pusha
inc
dec
loopne
sbb
push
popf
xchg
push
repz
adc
lahf
pop
popa
sub
add
pop
dec
push
push
jbe
das
fwait
dec
insl
mov
into
shl
in
push
fsincos
repnz
pop
dec
jns
pop
add
push
and
mov
add
cmp
es
add
sbb
fwait
dec
jg
mov
cmpsl
mov
push
dec
jmp
addr16
jb
enter
and
mov
jno
sbb
sbbl
cmp
pop
fs
out
push
iret
dec
xorb
addl
adc
fdivrp
cmp
cmp
push
or
ss
sbb
inc
fmull
mov
dec
add
xlat
in
lahf
and
cmpsb
add
notl
leave
clc
inc
sub
sbb
stos
sub
mov
mov
adc
and
and
mov
pop
xor
icebp
pushf
mov
mov
outsb
cmp
push
test
dec
jle
adc
iret
or
mov
dec
xchg
xchg
ds
mov
xlat
aas
ja
jle
les
bound
ja
push
jecxz
inc
imul
notb
mov
out
ja
push
mov
outsb
jne
mov
lods
sbbb
or
adc
in
sub
dec
mov
out
push
add
sbb
jmp
xchg
int
in
outsl
pop
cmp
bound
ja
out
pop
dec
shrl
pushf
ror
iret
mulb
jp
adc
add
inc
sub
sbb
nop
fcomps
add
subb
lret
in
aam
push
jp
pop
dec
adc
xchg
dec
cltd
mov
lock
imul
test
int
mov
jge
push
sub
ja
jo
xchg
xchg
cwtl
mov
add
insl
push
sbb
pop
jb
paddsw
adc
lret
pop
cwtl
test
mov
sbbb
imul
mov
mov
xlat
dec
mov
push
mov
loop
pushf
scas
scas
push
test
outsb
pop
pop
mov
repnz
sbb
enter
cmp
xchg
lea
mov
jb
dec
pushf
stos
ds
in
inc
std
loope
fisttpll
dec
sub
mov
xor
xchg
or
pop
sbb
jb
orb
loope
push
scas
popf
pop
std
adc
int3
jmp
mov
adc
in
aam
aam
stos
mov
mov
xchg
je
mov
fwait
out
adc
je
pop
pushf
lock
outsb
out
xchg
js,pn
lods
sbb
fisttpll
xor
inc
xchg
rcrb
bound
xlat
cwtl
icebp
int
fimull
adcb
out
push
test
mov
in
movsb
add
das
icebp
dec
pushf
bound
adc
pop
pop
inc
mov
push
dec
mov
jle
call
mov
sbb
les
ljmp
and
push
movsl
aaa
mulb
mov
pop
push
pop
mov
orl
in
fcomps
js
inc
out
jb
bound
add
stos
inc
fdivrl
pop
mov
xor
arpl
xchg
aas
popf
sbb
sub
jne
or
pop
xchg
mov
insl
xlat
hlt
cmp
pop
xor
mov
sub
outsb
pop
out
mov
in
cmp
arpl
repnz
out
roll
adcb
mov
push
xchg
xor
mov
adc
fstl
mov
mov
push
sub
pop
popa
cmc
pop
cmc
cli
mov
adc
sbb
shlb
aam
sbb
pusha
inc
sahf
mov
jnp
cltd
into
push
in
shl
mov
roll
dec
outsl
out
ss
test
lret
pop
mov
mov
outsb
lret
mov
das
roll
fxch
mov
lahf
and
add
shll
jmp
push
aas
fst
pop
jo
mov
dec
leave
fcmovnbe
jne
sub
insb
cltd
jg
outsb
int3
and
mov
push
lea
xchg
jbe
dec
bound
pop
data16
adc
dec
xor
loope
mulb
cmpsb
movsb
sahf
push
rolb
and
enter
scas
xor
inc
xchg
aad
mov
cmpl
les
pop
cld
rolb
inc
adc
loopne
xchg
ds
in
fcos
fcoml
ja
sbb
inc
js
fildll
mov
mov
jle
pop
adc
mov
and
add
xchg
dec
ret
mov
andnps
and
cld
sbb
shrb
cmc
data16
mov
cs
inc
lods
adc
cld
sub
fildll
jb
mov
cmp
add
mov
dec
push
ds
xor
jae
add
push
xchg
orb
xor
aad
ret
cmp
test
aam
aas
sbb
inc
out
fists
dec
repz
mov
imul
bound
xchg
or
pop
push
mov
mov
jno
xchg
cld
inc
divl
pop
hlt
mov
push
push
shrb
add
push
xchg
pop
xchg
ret
add
and
out
popf
ret
pushl
mov
push
push
enter
add
cmp
adc
inc
and
push
fwait
jbe
mov
imul
outsl
dec
nop
and
pushf
jo
ja
arpl
jmp
loopne
fdivrs
dec
sub
pop
dec
scas
push
jp
sbb
xlat
es
loopne
adc
fisubrl
leave
es
mov
lahf
outsl
mov
xor
push
or
mov
sbb
fldln2
xchg
popf
xor
cwtl
filds
pop
pushl
xor
aam
inc
mov
jl
push
xor
into
cmp
out
cs
mov
in
push
xchg
shrl
je
cmp
ja
add
mov
jno
push
xchg
nop
lock
into
repz
cmp
lahf
ljmp
insl
fmulp
insl
and
cmovp
push
sub
sub
insl
sub
xchg
cmp
sbb
add
not
hlt
add
std
imul
sbb
notb
and
mov
repnz
stos
mov
mov
or
pop
test
xchg
cmp
mov
inc
lods
fs
aas
xor
cli
xor
ficoms
lock
dec
mov
cli
pushf
ljmp
dec
icebp
push
push
pop
fisubs
ret
mov
jb
adc
repnz
mov
mov
cmp
es
nop
or
cmp
inc
pop
aam
out
and
push
jg
es
xlat
sub
sub
cli
push
out
pushl
xlat
sub
ds
add
aad
xchg
and
fildll
xchg
cmpsb
xor
sub
push
push
sahf
lcall
or
and
sbb
pop
fstpt
lret
push
push
push
lahf
mov
ss
pop
mov
push
dec
into
cs
inc
inc
xor
jo
adc
ss
add
jae
sbb
jbe
pop
lock
cmpsl
stos
daa
out
push
lods
andb
inc
pop
dec
fadds
roll
data16
data16
sbb
rorb
sbb
xor
push
pop
rclb
lret
jne
xor
inc
mov
insb
lock
je
ret
scas
cmp
bnd
sub
inc
ja
aam
mov
dec
sbb
and
cld
xor
sub
js
jge
push
xlat
std
add
fdivrl
mov
mov
and
out
and
aam
and
inc
or
pop
mov
int
aaa
popa
out
mov
jne
mov
iret
stc
cmc
add
xchg
fimull
test
int3
cmp
or
jecxz
xor
icebp
imul
stc
dec
push
lretw
dec
cmp
dec
jno
cmp
sarb
adc
push
mov
sub
outsl
xchg
mov
mov
jae
xchg
dec
iret
pop
fcomi
mov
adc
jnp
mov
mov
cmc
int3
xchg
xor
jb
jne
jmp
xchg
adc
das
sub
hlt
or
jmp
pop
add
mov
adc
stc
cmp
cmp
out
push
push
popa
in
pop
push
std
jbe
add
std
aam
insl
scas
or
mov
fwait
rorl
cmp
leave
and
divl
nop
sub
pusha
nop
adcl
and
pop
fcomip
les
fstl
lcall
xor
lea
add
jo
add
jmp
inc
adc
or
add
in
xchg
mov
xlat
and
mov
stc
cli
or
mov
aaa
jb
int
lock
stc
ljmp
sub
adc
pusha
mov
adc
dec
arpl
loopne
inc
xor
jb
std
xchg
mov
pop
jne
mov
outsb
lock
push
mov
in
jmp
inc
cmpsb
and
inc
push
aas
add
out
xchg
pop
repz
jge
outsb
xchg
gs
lcall
mov
cmpsl
adc
xchg
test
ljmp
jp
lock
cmp
xchg
jo
mov
or
push
gs
xchg
jg
in
sub
push
popf
lods
inc
or
jne
mov
addr16
sbb
cmp
xchg
loope
shrb
shll
stc
jbe
inc
add
and
jmp
shl
movsb
cltd
adc
dec
cmp
comiss
fidivrs
sbbb
loope
aaa
push
ss
sbb
xchg
push
lret
loope
xor
adc
or
ljmp
or
jle
fldl
sub
ja
ror
pop
push
cmp
and
or
repnz
enter
adc
cli
xorb
insb
test
push
call
je
push
pop
rorb
fsubrl
push
inc
scas
cwtl
out
sub
into
add
jo
inc
iret
adc
pop
cmpsb
std
pushf
sub
cwtl
push
neg
xchg
xor
testb
cmp
test
add
stc
add
sbb
inc
es
dec
enter
lods
jmp
adc
add
mov
pop
std
pop
loop
andl
or
mov
rcrb
cltd
add
insb
test
adc
jge
mov
mov
int
ficoms
pop
out
sub
adc
mov
dec
hlt
and
adc
cmpsb
mov
repz
dec
cmpsl
push
sub
jnp
outsl
adc
ja
enter
loopne
mov
mov
fmull
pop
jae
sbb
aam
mov
xor
enter
mov
out
stos
adc
inc
sbb
mov
pop
mov
ljmp
int
lret
mov
push
das
mov
xor
imul
sub
pop
mov
icebp
or
mov
mov
sub
loope
jbe
mov
aaa
inc
movsb
and
ficomps
nop
into
icebp
push
xchg
loop
add
jmp
mov
mov
jnp
cs
pop
aaa
sbb
rcr
movsl
mov
xchg
loope
sbb
fisttpll
out
ret
xor
and
in
sbb
jmp
sahf
pop
mov
outsl
jecxz
inc
jg
mull
dec
and
push
insl
fidivl
sub
cld
lcall
cmp
adc
mov
out
int
icebp
cmpsl
xchg
push
xchg
sbb
outsb
dec
push
sub
or
leave
sub
outsb
xchg
or
loope
dec
xor
cmpsb
cmp
loopne
adc
jmp
stos
js
das
push
dec
inc
enter
pop
push
pop
hlt
inc
mov
addl
iret
push
shl
xchg
or
call
jecxz
adc
pop
mov
inc
push
dec
mov
stc
imul
fwait
loopne
movsl
mov
daa
sub
ss
dec
test
and
pushf
mov
aas
icebp
xchg
inc
pop
mov
repz
lods
push
bound
jle
in
sub
push
xchg
fists
mov
iret
arpl
or
loop
mov
jmp
leave
cli
add
icebp
mov
pop
cmp
popf
addr16
movl
sub
or
insb
and
push
loopne
jo
test
xor
aad
ret
mov
add
adc
jecxz
mov
sub
stos
sub
test
cmp
and
pusha
mov
sti
xor
and
jbe
in
daa
pop
imul
in
imul
cmp
fistl
jmp
frstor
and
xor
enter
and
clc
es
push
cmc
and
xor
cmpsl
pushf
lds
mov
xor
ds
jmp
out
nop
push
adc
push
mov
cmp
xchg
push
into
xor
clc
cwtl
or
push
sbb
out
into
or
sub
xor
sbb
jbe
cmp
movsl
sub
cld
jae
jne
mov
mov
push
mov
xchg
shll
inc
js
inc
js
movsb
cmp
insb
dec
pop
sub
lahf
or
cld
ds
es
lret
lcall
mov
mov
mov
insb
mov
scas
jb
mov
movsb
loope
push
mov
push
push
daa
rorl
sbb
sbb
sbb
jle
cmp
push
in
fmuls
addr16
mov
lock
xorl
std
adc
call
dec
or
enter
dec
cltd
int
mov
add
dec
stos
dec
push
std
aam
add
xor
enter
shll
pop
mov
cmp
jno
data16
xor
cmc
sub
xor
loop
popf
sbb
sbb
mov
cmp
xchg
and
xchg
ret
mov
lds
mov
nop
and
js
mov
mov
popa
outsb
mov
mov
mov
push
add
dec
jp
add
pop
jbe
jne
jle
or
mov
mov
fdivl
push
dec
lock
pushf
xchg
movsl
push
hlt
stos
and
jp
xor
lret
mov
arpl
pop
sarb
push
orb
jg
out
inc
arpl
shll
mov
jp
int3
xor
xlat
icebp
pop
int3
or
adc
dec
aad
mov
jmp
imul
jbe
inc
fbld
pop
test
xchg
xchg
or
or
in
sti
cmpsb
push
mov
xchg
clc
scas
mov
dec
pop
fs
mov
xchg
push
jne
leave
sti
xlat
xchg
sub
adc
loop
mulb
cmp
test
sub
push
jmp
mov
jne
inc
jle
lods
fisubs
ret
pop
shl
jb
or
mov
test
inc
out
std
ss
xlat
je,pt
ret
fs
dec
and
mov
outsl
and
lahf
shlb
popf
jle
xchg
inc
je
add
jge
inc
pop
stc
sub
sbb
fcoml
jmp
push
out
push
and
insb
xorb
mov
lods
addr16
add
loopne
mov
mov
jbe
pop
outsl
hlt
xchg
cmp
pop
xchg
push
cmp
cltd
cmp
adc
sbb
les
ja
test
mov
xchg
out
adc
imul
iret
xchg
mov
inc
sti
pop
jae
dec
mov
cs
cld
out
dec
sbb
lods
mov
imul
mov
inc
insl
lahf
push
mov
xchg
imul
lods
aas
adc
shlb
ja
jmp
jnp
xchg
aad
test
fdivs
aad
fldl
cmp
pushf
sbb
and
mov
add
popf
mov
out
push
jp
push
xor
test
stc
in
daa
idivl
push
loopne
cmp
adc
lahf
push
pop
popf
popf
stos
adc
das
cmp
pushf
insl
das
jbe
aas
js
mov
dec
xor
sti
jae
test
ljmp
push
call
pusha
scas
jp
loopne
andb
ffreep
rorl
add
out
mov
js
mov
and
cmpsb
mov
adc
xchg
push
add
and
mov
xchg
pop
mov
push
push
and
aas
dec
cs
cmc
fld1
xchg
ss
push
cmp
adc
or
inc
popa
xor
xchg
imul
js
inc
mov
stc
mov
test
mov
mov
test
or
sub
pop
and
push
in
andl
jne
pop
dec
sbb
mov
push
adc
lea
pop
mov
mov
je
xchg
xor
mov
adc
rcl
inc
fdivl
lea
and
xlat
sbbl
mov
fsubs
pop
rcrb
orb
out
cmpsb
and
cwtl
icebp
push
adc
cmpsb
fldcw
sub
in
push
repz
lods
fidivs
inc
xchg
movsb
fisttpll
ret
jb
mov
enter
jge
fidivs
sub
clc
pop
mov
cmpsl
std
sbb
lret
test
jl
shll
sbb
dec
repnz
ror
dec
sbb
adc
sub
add
inc
stos
loop
jns
stos
fcomps
loop
int
cmpsb
lods
cltd
cwtl
rcll
movsl
mov
and
dec
std
dec
jle
push
rcl
idivb
or
dec
push
adc
mov
cmpl
jmp
fdivrl
repnz
mov
add
jbe
sahf
jbe
dec
pop
xchg
xlat
leave
lds
jg
cmp
ds
mov
xor
js
test
jl
and
es
repz
pop
sbb
adc
pusha
adc
xchg
loop
pop
popf
std
mov
mov
loopne
push
fisttpl
adc
js
push
add
out
popa
jmp
push
stos
lcall
frstor
stc
inc
xchg
imul
das
jmp
movsl
out
jmp
adc
mov
jecxz
shll
imul
test
int
hlt
mov
stos
push
push
clc
or
and
xor
dec
popf
movsb
and
enter
mov
mov
push
jno
or
movsl
jecxz
or
adc
call
or
mov
in
jae
dec
mov
insl
pop
lret
cmc
or
inc
xchg
adc
mov
dec
push
enter
sub
mov
hlt
daa
and
xor
pcmpeqd
mov
out
fistl
shll
sbb
mov
in
cmp
mov
mov
mov
inc
sarb
outsl
pop
xchg
push
pop
int
jle
cmpsb
mov
and
sub
iret
shlb
into
dec
imul
mov
fcom
and
jae
inc
addr16
mov
xchg
leave
icebp
mov
mov
xchg
jno
fildl
xchg
adc
fildll
test
xor
daa
sbb
push
push
push
neg
jecxz
fldcw
add
xlat
int
ret
push
iret
out
mulb
and
imul
lahf
mov
push
shlb
incb
cmp
popf
dec
nop
push
clc
inc
adc
add
aaa
xchg
xor
test
mov
dec
test
jmp
cmp
stos
fdivp
jne
lcall
cmpb
cmp
cmp
icebp
dec
mov
jne
cmp
add
inc
jp
push
lock
popa
add
adc
jnp
in
outsl
gs
cmpsb
out
cmp
sub
mov
lods
inc
shlb
mov
fnstenv
cltd
mov
mov
lods
add
and
inc
aam
push
fcomp
xor
cmp
push
inc
jbe
mov
ret
std
clc
adc
sahf
aaa
pop
inc
jnp
push
pop
sarl
dec
mov
add
dec
test
int
dec
shr
or
std
xchg
stos
lock
sbb
repnz
cmpsb
clc
test
pop
xor
or
dec
ds
ret
push
scas
sti
movb
inc
xchg
decb
add
icebp
push
jo
mov
push
rcll
or
xor
movsl
mov
in
mov
pop
dec
or
jl
or
jb
dec
test
clc
add
dec
push
push
aaa
fidivrs
in
sbb
cmp
imul
out
push
adc
xor
jmp
mov
xorl
push
or
inc
pop
stc
test
mov
testl
arpl
mov
pop
test
jo
or
imul
cmpb
cmp
mov
and
out
push
mov
rclb
inc
jecxz
enter
fldln2
sub
clc
pushf
in
hlt
aam
movsb
inc
sub
and
add
xchg
jo
scas
lret
jp
push
sbb
push
dec
shr
je
repz
add
mov
scas
jae
dec
das
je
push
cmp
les
sub
cmc
sub
sbb
mov
and
icebp
mov
sbb
hlt
and
es
push
orb
leave
out
fstl
mov
mov
daa
test
adcl
mov
int
adc
les
loopne
add
dec
dec
mov
test
hlt
lret
lds
pop
cwtl
pop
mov
je
cmc
sbb
push
mov
loope
lret
ljmp
pop
daa
pop
pushf
inc
xchg
and
fstpt
loope
cmpsb
mov
sub
test
hlt
int3
mov
push
int3
mov
cmpsb
enter
lds
add
xchg
aaa
mov
cltd
mov
jg
dec
mov
sub
movsb
adc
scas
inc
sbb
aad
lcall
adcl
repz
sbb
subb
scas
mov
out
sbb
cwtl
gs
xchg
and
cmp
aam
mov
dec
cwtl
in
sub
mul
mov
shrl
mov
aad
mov
mov
enter
inc
jb
lcall
ret
pop
in
std
xchg
movsl
push
outsl
enter
mov
cs
lret
stc
cmpsb
xchg
or
pushf
xor
sub
push
push
mov
pushf
xchg
add
call
int
cmp
in
xor
fwait
sbb
add
fisubl
xchg
inc
xor
xchg
inc
xchg
arpl
loop
addr16
cmp
sbb
cltd
fsubrs
test
shrd
push
and
mov
mov
push
sbb
jbe
pusha
xor
xor
pop
or
mov
shll
inc
out
sub
mov
mov
jo
lods
cld
stc
xorl
adc
sub
out
setl
fsts
xchg
lock
pusha
sarb
loope
xchg
mov
lea
or
cs
fs
mov
xchg
in
pop
pop
dec
push
cmp
int
dec
cli
mov
and
cmp
cmp
cmc
mov
movsb
inc
jbe
ja
mov
lods
mov
rorl
lods
push
or
movsb
jo
ret
fwait
cmp
pop
test
test
stos
aam
xor
or
xchg
lahf
mov
xchg
adc
push
mov
jmp
jl
sub
into
pop
loope
out
or
pop
push
or
cmp
sbb
movsb
jns
test
mov
ss
mov
movsb
repnz
bound
mov
aaa
sarb
outsb
pop
cs
sub
mov
push
fiaddl
addr16
and
fsubr
les
shrb
mov
mov
popa
sbb
mov
adc
add
shlb
int3
xor
cmpsl
add
and
lcall
test
popf
inc
sub
add
clc
adcl
jns
loope
aas
pop
je
add
call
pop
add
popf
and
mov
ljmp
clc
std
cld
fdiv
shrl
sub
loop
push
data16
mov
pop
in
cs
jmp
add
adcl
ljmp
out
cld
sti
ja
dec
xchg
sbb
loope
ficompl
sub
movsl
ds
movsl
daa
xor
nop
pop
cmp
stos
xlat
mov
adc
jg
scas
aas
mov
and
xor
jge
add
cmpsl
push
test
sub
mov
sbb
aaa
sub
aaa
mov
rclb
sbb
sbb
sbbl
push
into
mov
xor
ss
std
sub
orb
and
mov
inc
push
pop
fnstenv
dec
imul
pop
cltd
inc
inc
in
jecxz
jo
mov
or
hlt
fucomip
movsb
push
js
call
scas
mov
xchg
mov
movb
mov
mov
jne
shlb
call
insl
movsb
jb
xlat
pop
fisttpll
pop
mov
jno
js
jmp
mov
jle
repz
aam
jg
cmp
sbb
cltd
aad
pop
arpl
xchg
sbb
nop
add
in
mov
sbb
lret
sub
or
xor
jp
cmp
fists
adc
movsb
mov
lods
add
push
out
xchg
jle
sub
arpl
fstpl
clc
push
fldenv
jmp
inc
mov
or
cli
mov
into
and
loop
sbb
outsl
in
xor
sarl
lret
shrb
fwait
outsl
sub
xchg
xor
fidivl
shrb
outsl
and
pop
cmpl
or
push
xor
cli
push
or
inc
jmp
dec
gs
mov
adc
xlat
add
mov
sub
fnstcw
push
out
inc
dec
adc
clc
scas
fcmovnu
lcall
sti
pushf
sbb
pusha
or
es
loop
mov
lret
dec
shlb
and
int3
out
sub
loope
int3
in
fisttps
ja
idiv
dec
pusha
sbb
jl
xchg
add
push
mov
and
push
mov
inc
loope
in
pop
sbb
mov
negb
hlt
cmpsl
push
fsts
jp
add
or
in
push
inc
test
test
push
mov
ret
mov
movsl
mov
or
add
lcall
ret
jo
je
inc
int3
dec
popf
jns
jg
fimull
fldt
ret
adc
mov
outsl
lahf
das
aam
or
mov
out
aam
inc
push
scas
cwtl
push
sarb
push
inc
adc
jle
jge
ja
fwait
bound
aam
or
cmc
loope
incl
mov
pop
imul
pop
pop
sub
dec
xor
xor
movd
xorb
test
in
add
jle
sub
into
ljmp
cwtl
cmpsl
js
mov
push
lods
data16
cmp
mov
sbbb
or
gs
cmp
sbb
es
push
leave
imul
mov
ret
mov
fidivs
into
std
sahf
cwtl
xchg
xor
inc
push
ds
icebp
or
pop
mov
movsl
push
jo
lret
movsb
data16
pop
inc
popa
shr
push
mov
add
je
jmp
hlt
lea
aaa
jg
out
sub
shr
or
repz
bound
sbb
roll
jne
sbb
sub
push
xchg
and
call
movsl
and
fsubp
push
xchg
fisubl
ret
out
push
ja
call
add
jmp
divb
insb
dec
addps
aad
scas
xchg
into
jg
insb
jmp
movsl
push
iret
sbb
popf
mov
pop
enter
dec
outsb
ljmp
inc
fimuls
and
repnz
cmpsl
and
mov
imulb
mov
rol
fistps
add
push
ja
bound
cmp
xor
dec
cmpsb
mov
ret
jb
pop
mov
aad
add
je
xchg
imul
inc
stos
sti
in
or
test
into
push
sahf
inc
add
dec
cmpsl
xchg
adcb
push
pop
in
ret
xchg
mov
cmp
dec
lds
rcll
loopne
dec
mov
fisubs
in
mov
outsl
movsb
into
jno
arpl
ja
les
cmp
aam
clc
or
mov
dec
push
std
leave
in
mov
loopne
lcall
mov
pop
cltd
fdivrs
xor
mov
cmpsl
lods
rcl
inc
mov
mov
fsubs
push
sub
cld
fisubs
cmpsl
cmp
cmp
iret
mov
push
add
mov
in
mov
dec
adc
pop
movsb
cli
dec
adc
daa
sti
dec
leave
aam
sar
dec
insb
rclb
mov
lods
in
lods
cmc
loope
enter
imul
out
or
and
mov
sub
mov
aaa
scas
xor
nop
jle
pushf
int
stc
jo
movsl
adc
sbbl
inc
push
ficomps
and
push
cltd
mov
mov
shrb
pop
in
es
lds
inc
es
scas
cmp
jbe
xchg
lahf
jl
sti
cmp
jno
sbb
cmp
dec
pop
insb
decl
fwait
loopne
fwait
sbb
xor
pop
push
fdivr
xchg
lcall
dec
dec
jp
xchg
mov
mov
cmpsb
into
pop
push
das
pop
std
cmpsl
jns
iret
jb
ds
aas
lea
sbb
mov
cmp
mov
push
lret
jo
and
pop
adc
scas
es
xor
cld
cmpsb
pop
scas
pop
jo
xor
or
jg
iret
mov
pushf
add
jne
call
jae
clc
jge
cmc
sub
mov
xchg
mov
bound
fdivl
mov
inc
sbb
call
cwtl
scas
xchg
or
xchg
mov
aam
sub
aam
dec
test
sbb
jp
popf
ja
and
inc
and
mov
mov
clc
stos
lods
repnz
imul
push
jl
mov
divl
sub
out
sbb
mov
repz
adc
sbb
aam
subl
sub
fstps
outsb
subl
mov
je
jl
or
mov
lret
lds
scas
aas
imul
fcmovnb
lea
leave
int3
mov
xchg
sbb
stos
xchg
and
xchg
pop
xor
xchg
push
stos
fwait
dec
movsb
pop
jnp
in
lret
and
mov
add
mov
mov
sub
popa
out
xlat
shrl
xchg
imulb
les
insl
cmp
mov
enter
mov
ficoml
and
inc
imul
inc
sub
test
push
jp
es
or
jle
pop
jns
jno
cltd
mov
pop
lret
iret
lret
es
cs
sbb
inc
mov
push
mov
xchg
rol
xchg
and
lods
hlt
push
nop
shll
lods
cmp
cld
nop
inc
pop
and
mov
mov
fxch
mov
dec
adc
mov
mov
loope
mov
dec
or
and
sti
and
jo
cltd
xchg
cmp
clc
pop
or
xchg
out
jle
pop
out
xor
mov
int3
fwait
mov
mov
sub
sub
es
mov
or
cmp
and
cmp
add
nop
fcomp
add
or
xchg
push
stos
aaa
xchg
sbb
xor
xor
shlb
data16
pop
in
push
adc
int3
je
dec
mov
and
fcomps
adcb
sbb
jmp
mov
aaa
mov
bound
ret
and
and
pop
and
push
inc
iret
fucom
cwtl
xlat
inc
mov
jg
mov
jg
cmp
mov
pop
mov
jnp
sbb
in
mov
loope
xchg
ret
or
mov
pop
fs
adc
pop
into
mov
imul
addl
in
call
dec
mov
inc
in
sahf
ficompl
adc
pop
ret
push
lar
insb
xorb
add
adc
mov
cmp
mov
insb
mov
hlt
cld
addr16
xchg
divb
insb
loope
pop
inc
mov
adc
out
dec
sahf
mov
pop
mov
cmpsl
pushf
imulb
clc
adc
mov
out
xchg
jmp
inc
add
in
xor
test
add
and
fdivs
and
lcall
jge
jns
mov
aad
lea
push
dec
mov
xchg
cmp
int3
inc
mov
cwtl
push
push
push
lock
ficoml
scas
xchg
popa
cmpsl
lods
mov
hlt
fs
subb
es
mov
and
push
dec
cmp
iret
or
adc
arpl
mov
scas
loop
xchg
imul
or
cltd
pop
cld
out
pushf
sbbb
flds
cmp
adc
pop
and
push
andl
mov
xchg
inc
sub
mulb
cltd
out
dec
imul
and
push
mov
xchg
adc
sbb
sub
mov
add
test
jg
ljmp
dec
dec
mov
xchg
xchg
mov
lods
lret
in
jmp
pusha
ret
inc
sub
ficompl
cmp
popf
insl
pop
leave
testb
int3
jae
insb
cmp
imul
mov
or
or
fldenv
mov
xchg
js
or
push
popa
mov
xchg
les
sub
out
xor
repnz
pop
ret
xlat
sub
cmp
ret
setg
mov
pop
testl
pop
mov
dec
and
cmpsl
cmp
cmp
mov
jo
mov
add
and
xorb
xor
shrl
mov
pop
push
stos
sahf
cmp
mov
and
cmpsl
sbb
inc
mov
cmp
aam
sbb
jl
outsl
out
call
sbb
loopne,pn
stos
xor
addb
jmp
popf
call
shrl
outsl
pop
xchg
jmp
dec
aad
and
nop
or
inc
cwtl
sbb
fistpl
sbb
and
sbb
push
enter
popf
jb
imul
mov
std
cmp
sahf
lea
ficoml
dec
imulb
push
fldcw
sub
pop
mov
mov
push
mov
adc
movl
sahf
test
dec
clc
xlat
xchg
and
fnsave
mov
sahf
scas
hlt
movsb
jle
repz
xchg
repz
fsts
mov
leave
mov
dec
movsl
in
sahf
mov
jmp
dec
mov
js
dec
fstpt
dec
or
leave
add
test
cmp
das
push
pop
cli
iret
add
ss
ljmp
xchg
fbstp
sbb
in
loope
add
pop
jnp
aaa
fsincos
pusha
xor
or
push
add
mov
inc
mov
fistl
mov
add
xchg
test
imul
in
mov
xor
and
adc
cmc
dec
push
cs
jae
stos
push
lea
mov
pop
cmp
in
xorl
xor
in
xor
shrl
popf
and
enter
outsb
jmp
fsubs
xchg
pop
pop
stos
inc
out
sbb
inc
arpl
arpl
push
adc
int
movsl
jl
sarb
mov
insl
sub
sbb
cmpsl
repz
lret
fdiv
js
dec
xchg
hlt
es
sbb
jnp
mov
in
int
lods
inc
int
and
imul
dec
sbb
cld
aas
jb
pop
or
cmp
xlat
fdivr
cmp
mov
rclb
mov
sub
mov
loop
cmp
insl
movsb
inc
xchg
push
mov
cmp
in
sbb
or
inc
jle
sti
inc
popf
dec
div
je
jge
rcl
jne
pop
adc
mov
jns
scas
rcr
outsl
jae
clc
jge
mov
test
mov
and
clc
fdivr
je
test
data16
iret
jl
mov
or
cmp
sub
int3
adc
mov
gs
push
rcll
cmpsb
stc
pop
getsec
insl
jmp
stos
andb
movw
lret
mov
fs
sub
or
aaa
dec
dec
inc
xor
xchg
repnz
dec
xchg
mov
pop
daa
sar
mov
mov
ss
fwait
lea
and
sti
repnz
sub
pop
xor
nop
imul
fidivl
daa
jbe
adc
mov
out
and
iret
out
xor
dec
xorb
jg
repnz
jmp
mov
cmp
imul
mov
sysret
jl
add
push
inc
jmp
pop
mov
cltd
sbb
jg
jb
push
jns
imul
mov
push
inc
test
sub
push
das
mulb
push
push
xchg
add
cs
push
and
inc
dec
subl
add
jp
mov
stos
ja
jns
push
mov
sub
aaa
das
sbb
scas
lea
push
sub
pop
decb
xor
movsl
cmp
imul
mov
int3
mov
mov
jno
out
push
cmp
hlt
mov
xor
popa
jne
inc
pop
fcomps
fsubs
cmpsl
loop
xchg
mov
aaa
and
xor
das
enter
mov
int3
divb
inc
and
pusha
inc
clc
daa
shrl
cs
test
aas
jo
mov
test
or
mov
push
or
jne
loopne
cmc
adc
jo
sbb
cmc
inc
popf
mov
ret
dec
popf
push
xchg
adc
das
aaa
add
popf
push
test
stc
push
add
lret
mov
push
nop
pop
or
mov
shll
mov
call
movsb
inc
clc
ret
and
inc
or
fidivrs
cmp
xor
rol
pop
call
scas
pop
dec
add
lret
bound
adc
fcmovne
movsb
push
inc
scas
xor
mov
jl
inc
mov
int3
sti
filds
gs
add
jle
pop
stos
scas
push
ljmp
insb
fnstcw
daa
sub
das
jg
lcall
fsubrl
xor
pmaxsw
sub
lahf
push
sub
add
inc
jecxz
mov
jnp
jno
xchg
bound
adc
lcall
sbb
push
gs
cltd
jle
xor
cmp
xchg
scas
xlat
jno
adc
adc
fldenv
in
jbe
sbb
adc
into
sub
add
std
mov
add
mov
jmp
popa
push
sbb
inc
jb
data16
repz
push
add
aam
lret
jbe
out
loopne
xor
fdivrl
out
sub
cmpsb
xchg
mov
xchg
fcomp
mov
sub
insl
jecxz
xorb
je
or
push
sbb
xor
sbb
jge
imul
aas
addr16
pop
popa
mov
daa
xchg
fdivl
addl
mov
dec
inc
int
mov
inc
mov
xchg
and
dec
loop
sub
or
fidivrs
mov
cmp
popa
jae
xchg
pop
mov
shrl
fistpll
imul
les
sub
dec
mov
fucomp
aas
fnstenv
dec
add
in
sub
sbb
jle
icebp
pop
adc
pop
add
xchg
icebp
push
dec
fidivl
xchg
pop
and
jge
rclb
and
je
mov
pop
dec
mov
push
add
fbld
mov
mov
inc
lret
sub
cmp
data16
lods
dec
test
aaa
cmpsb
imul
xchg
xchg
or
int
cmp
adc
pop
push
stos
rorb
xor
scas
imul
shl
ret
add
pop
leave
fistps
jle
cmc
xchg
fiadds
lret
int3
or
add
fldz
fabs
imul
xchg
mov
or
inc
add
test
int
into
pushf
adc
lret
outsb
sbb
cmpsb
test
lea
ss
popa
mov
dec
mov
scas
iret
sbb
test
xor
aaa
cmpsb
in
jg
sub
lds
cmove
lcall
cmp
fstl
cs
lds
ljmp
cmp
inc
shll
sahf
mov
stc
inc
lcall
into
and
mov
push
cmp
sub
add
stc
stc
and
xor
adc
insb
lret
sahf
lahf
mov
mov
std
shll
ja
jo
adc
outsl
jns
lret
and
sbb
jmp
pop
repz
lcall
hlt
fwait
orb
xor
pop
and
movsb
xlat
es
movsb
outsl
fnstsw
adc
dec
in
inc
inc
popa
insl
hlt
mov
scas
lcall
push
lea
pop
scas
dec
jo
dec
enter
rol
inc
jae
movsl
test
pop
popf
add
xor
sarb
clc
test
jae
hlt
into
add
xor
in
sbb
lods
add
imul
jge
xchg
sub
adc
pushl
ss
adc
pop
sahf
dec
in
inc
stc
movsb
hlt
es
sub
bound
enter
xor
pop
pop
test
sbb
adc
adc
mov
int3
add
das
outsl
sbb
test
test
mov
ret
pop
mov
sar
mov
push
int
addr16
sbb
mov
jo
sbb
scas
pop
aam
cwtl
sbb
int
repnz
insl
lcall
mull
mov
sbb
imul
sbb
push
stc
insl
xchg
pop
rcll
sbb
jmp
aad
icebp
push
stc
xchg
add
push
in
fimull
dec
std
jb
jp
inc
clc
decw
jmp
mov
imul
sub
jle
mov
jl
mov
pop
out
mov
cmp
and
fnsave
cmpsb
jmp
mov
nop
lret
xchg
sbb
ja
mov
mov
or
fadds
pop
hlt
adc
pusha
ficoms
rcll
push
bound
xchg
xor
subb
gs
inc
adc
and
adc
test
movb
orb
lahf
out
test
mov
fs
mov
mov
lds
outsl
push
jae
mov
sbb
sbb
into
mov
data16
and
cmp
jbe
ret
sbb
jmp
xor
mov
pop
icebp
test
ret
cmp
push
pop
adc
cmp
cmp
pop
xchg
add
sbb
test
lds
jg
repz
sbb
xchg
shrb
lock
aam
popf
in
pop
mov
es
pop
push
stos
ljmp
mov
mov
cmc
pop
outsl
movsb
pop
lea
jmp
fcomps
inc
xchg
imul
fbstp
loopne
nop
cmp
sub
add
xorl
fcomps
cltd
hlt
sahf
or
rclb
xor
jle
cmp
fimull
mov
xchg
rcr
jmp
mov
sar
jp
jnp
pop
and
fs
jae
mov
mov
xchg
mov
xchg
gs
mov
aaa
gs
inc
divb
or
xchg
push
adc
dec
pop
dec
and
ja
sti
pop
imul
fs
push
push
out
xor
xchg
jae
mov
jno
push
push
lahf
inc
inc
rclb
or
push
xor
xchg
call
pop
push
sbb
jbe
sti
push
jnp
dec
sbb
mov
shrb
cmc
and
pusha
leave
sbb
clc
adc
cmpsl
cltd
mov
inc
adc
vpaddsw
cld
xchg
lret
mov
pop
cmp
stos
mov
gs
mov
mov
sarb
or
in
daa
in
aad
ret
xor
in
fistpll
cmpsb
decl
jmp
add
lcall
in
inc
jge
add
xchg
gs
xchg
xor
add
push
insb
aad
dec
inc
lahf
fiadds
push
lret
clc
cmp
sbb
sti
cmp
jns
adcl
imul
shll
stos
lret
push
sbb
pop
sbb
cmc
push
scas
pop
das
mov
out
les
push
shrl
mov
inc
daa
lea
sbb
jne
stc
jns
pop
imul
pop
push
jnp
push
lds
pop
repz
or
sub
ss
adc
push
jmp
subb
xorl
cwtl
push
push
jbe
add
mov
xor
mov
xor
push
cmp
frstor
cmp
dec
dec
data16
int
xchg
lahf
ds
mov
pop
enter
adc
das
xchg
outsb
into
add
in
loope
xor
lods
add
lcall
mov
inc
notb
insb
out
movsl
push
xorl
add
dec
inc
popf
and
dec
cmp
popf
iret
add
xor
mov
stc
xor
lcall
pushf
sub
leave
shll
inc
pop
lret
xor
pminsw
pop
imul
jmp
cmp
stc
cmp
sub
sbb
int3
push
dec
es
sub
dec
and
add
roll
out
xor
lods
add
lea
ds
jmp
xchg
and
mov
cmc
addr16
js
cmpsl
rcrl
mov
cs
out
jge
notb
mov
pusha
dec
xor
repnz
cmpsb
lret
jne
add
decw
lahf
or
shll
aas
lcall
xor
das
and
jbe
movsb
sub
jl
notb
in
stos
test
cmp
and
jle
ds
ss
iret
mov
adc
add
sub
pop
pushf
movsb
iret
sbb
mov
xchg
mov
push
pop
sti
xor
out
lea
and
push
jle
in
xorb
iret
stc
arpl
pop
scas
adc
das
jl
dec
in
adc
arpl
xorb
mov
mov
insb
push
xchg
pop
mov
inc
fmuls
mov
adc
ret
aas
dec
fistpl
dec
push
test
mov
int3
cmp
in
sarl
daa
mov
jbe
outsb
jb
mov
pop
cwtl
clc
mov
out
adc
xchg
and
aaa
mov
ljmp
pop
xchg
cmp
arpl
push
jo
call
icebp
pop
xchg
inc
idivb
xor
jge
arpl
cmp
lds
sarb
aas
mov
jg
test
sbb
andl
adc
dec
ja
das
pop
xor
adc
lods
pusha
or
push
in
std
cli
adc
aaa
and
jbe
xchg
or
sbb
push
pop
add
cmpsl
inc
les
ds
inc
fadds
sbb
pushf
sbbl
push
xchg
mov
je
jb
mov
xlat
sub
cmp
repnz
sti
in
cmp
adc
xor
cmp
test
call
xchg
repnz
jge
out
cmp
clc
pop
fwait
sub
inc
arpl
int
xor
js
fstl
inc
push
pop
rorl
and
loopne
mov
pop
outsl
ljmp
sbb
mov
cmp
and
and
dec
pop
sarb
nop
push
rclb
push
dec
and
jge
pop
inc
jle
mov
push
shll
aad
pop
fadd
inc
mov
dec
stos
ret
inc
cmpsl
fcompl
pop
xchg
out
mov
pop
adc
xchg
lods
cmp
decl
insl
cmp
xchg
push
ja
cld
add
sarb
mov
xchg
pop
push
fstl
imul
xchg
daa
jnp
icebp
add
jl
pop
jecxz
movsl
push
mov
mov
data16
push
cwtl
jle
ret
pop
cmpsb
pop
popa
cli
pop
ljmp
push
xor
arpl
cwtl
mov
lock
sahf
or
push
ljmp
sub
mov
inc
or
mov
jno
and
mov
sbb
jle
adc
lods
pop
mov
xor
sbb
cmp
scas
test
in
pop
and
lea
mov
push
ljmp
ret
mov
mov
fisttpl
lret
jge
pop
dec
mov
add
or
adc
aad
scas
inc
cmp
dec
add
scas
xchg
in
and
xor
cmp
pop
cs
jo
mov
in
or
and
xor
lea
rcl
ds
shll
rcr
xor
shlb
btsl
dec
pop
mov
push
pop
hlt
xorb
lds
push
xchg
dec
rcll
jno
sub
lret
ret
xchg
stc
movsb
enter
mov
push
mov
stc
mov
push
fadd
leave
movsb
cmp
dec
cmp
xchg
call
pop
pusha
mov
imul
mov
out
or
dec
lahf
or
mov
movb
mov
pusha
lret
mov
out
mov
xchg
fisubl
mov
testl
dec
ffree
mov
test
push
sub
lahf
sbb
mov
das
loop
loope
inc
cmp
movsl
cmp
mov
jno
jae
pop
sub
stos
inc
aaa
jb
test
xor
mov
dec
pop
mov
stc
out
push
hlt
cmpsb
cmp
xchg
out
aaa
js
pop
sub
popf
adc
cmp
out
fcompl
out
pop
pusha
push
push
jp
adc
cmpsl
int
push
push
sub
data16
push
jge
ljmp
and
pop
lcall
inc
cmc
and
xchg
xor
push
orb
xor
popl
dec
push
xor
sbb
push
mov
and
inc
mov
fdiv
add
popa
shl
sub
pop
fnstenv
cmpsl
push
mov
cltd
mov
out
mov
data16
adc
scas
mov
mov
imul
popf
add
or
insl
icebp
mov
out
xchg
dec
fists
cwtl
ss
cmp
je
jmp
pop
insb
das
push
aad
std
in
js
dec
sbb
push
push
mov
mov
or
jb
or
xor
jnp
adc
cmpsl
in
push
mov
fidivs
ljmp
push
and
and
jle
int
cmpsl
ds
inc
jg
jge
jle
xor
popa
cltd
sub
imul
xchg
fisubl
or
mov
roll
jecxz
insl
inc
shll
mov
das
das
push
incb
rcl
lahf
xor
adc
jmp
sbb
mov
mov
imul
or
and
lret
icebp
roll
and
cmpl
lret
cmp
mov
xor
pop
or
not
mov
mov
inc
dec
adc
push
cld
sbb
or
ret
std
mov
adc
test
push
push
dec
stos
lcall
sub
adc
jp
mov
push
inc
push
fstpl
addl
sub
enter
jbe
test
xchg
pop
adc
je
mov
aam
mov
push
outsl
std
adc
add
mov
xchg
mov
movsb
idiv
jecxz
push
cmpsb
push
mov
clc
cli
jl
pop
push
pop
mov
xor
mov
push
mov
loope
mov
xchg
add
ds
inc
shl
cwtl
mov
repnz
mov
xor
sti
cltd
xchg
ljmp
push
or
mov
and
add
lahf
test
xor
push
inc
inc
scas
lock
arpl
test
adc
outsl
and
pop
xchg
es
stc
adc
filds
jg
mov
int
pop
and
cmp
mov
loope
in
mov
sbb
mulb
and
mov
shll
jl
mov
jmp
insb
je
push
cmc
pop
je
inc
lcall
rcll
stos
push
mov
aaa
loop
pop
and
nop
or
out
mov
fmuls
inc
stc
mov
jecxz
xchg
cmpsl
sbb
or
hlt
fbstp
inc
mov
pop
sbb
fwait
pop
pop
dec
shlb
inc
dec
cmp
xor
insl
lret
pop
in
cli
adc
pop
jmp
stos
movsl
sbbl
adc
mov
lcall
insl
inc
lcall
pop
jmp
inc
shrb
pop
mov
xlat
inc
pop
xor
xchg
sbb
pop
mov
jns
mov
adc
mov
and
xchg
in
fidivrs
mov
cs
outsb
aas
xor
push
clc
jo
in
div
call
das
cltd
xor
in
fistps
fistps
test
jge
push
pusha
lret
std
movsl
mov
shlb
out
std
cmp
out
cwtl
xchg
gs
in
sub
les
cmp
inc
and
xchg
push
push
dec
jo
adc
jle
sub
mov
ret
cwtl
lods
outsl
mov
push
mov
mov
fists
or
lret
jae
out
xlat
sahf
sarb
aad
stos
jns
or
cmp
mov
cmp
xor
mov
or
jb
adc
into
imul
sub
mov
sub
enter
jmp
pop
inc
and
adc
xchg
cmpsl
popa
lds
and
cmp
fistl
push
adc
or
popf
mov
sub
jae
xlat
xchg
cmp
jecxz
push
adc
in
or
hlt
mov
stc
jp
xor
jne
mov
ljmp
or
in
movsb
or
frndint
cwtl
push
adc
sbb
arpl
dec
ljmp
mov
ficoml
push
fcmovbe
xor
outsb
enter
out
jb
or
xchg
or
pop
out
lea
mov
out
cmc
insl
test
sahf
mov
mov
sbb
add
in
or
fsubrl
jmp
cmp
daa
pop
je
loopne
or
xor
int3
adcl
ljmp
cmp
lret
loope
xchg
popf
inc
mov
or
or
dec
mov
mov
xchg
insb
rclb
xor
ret
call
dec
out
xchg
data16
sbb
adc
xchg
or
xchg
nop
ret
cmp
push
jbe
inc
outsb
inc
pop
jo
mov
jmp
sub
push
ret
into
jmp
and
push
xor
test
xchg
sets
arpl
sub
jns
jl
add
inc
adc
add
les
int3
shl
mov
imul
and
cmp
or
scas
pop
sub
xchg
lds
call
cltd
mov
jmp
xor
xchg
mov
aas
and
sbbb
sub
stc
cmp
gs
insb
sbb
call
add
mov
das
jno
xor
push
lock
loopne
xchg
mov
xor
roll
mov
fimull
mov
pop
xchg
or
hlt
jge
cld
arpl
ret
inc
rorb
jl
xor
dec
in
adc
int
test
xchg
addr16
xchg
icebp
inc
push
pcmpgtw
add
mov
mov
adc
xchg
and
xchg
out
cmp
jmp
cmp
cli
out
sbb
sbb
sarl
shlb
push
test
xchg
pop
fdivrs
or
hlt
adc
pusha
pop
xor
jno
dec
loop
pop
fld1
fisubs
or
cmpl
ss
push
sahf
xor
shrl
or
lret
add
and
nop
cmp
cmc
add
and
pop
xchg
inc
sbb
fisttps
cli
push
pop
mov
stc
lods
or
adc
xchg
fstps
insl
pop
xchg
mov
fdivrp
daa
sub
xor
and
mov
test
or
shlb
sbb
fisttpll
jnp
insb
cmpsl
es
lcall
popa
mov
test
int
fsubrs
dec
stos
inc
ss
dec
repz
out
jecxz
and
fs
mov
out
pop
je
jp
scas
shlb
jmp
push
jae
or
into
fsubrl
sub
insl
sti
or
dec
fidivrs
aas
cwtl
sbb
jp
leave
rorl
mov
imul
fists
xor
ret
aas
jle
lods
push
ds
cmp
push
movsl
testl
dec
inc
lahf
xchg
ficoml
jno
outsb
sub
mov
pop
jecxz
jecxz
std
pushl
fs
sub
inc
xchg
cmpl
stos
into
mov
sub
cmovns
pushf
xchg
sahf
ror
fnstenv
popf
add
call
cmc
lea
and
fsubl
jge
iret
cltd
mov
jne
mov
das
dec
sub
je
arpl
mov
out
mov
cmc
jle
jo
rorb
scas
inc
into
cltd
jae
xchg
lods
mov
lahf
ja
lret
pushl
fstl
mov
adc
jnp
faddl
pop
pop
sbb
sub
sbb
mov
mov
pop
fisubl
imul
lahf
jo
flds
mov
sub
lcall
incb
push
filds
sub
test
or
lret
inc
mov
jmp
or
fstpl
mov
test
mov
sbb
cld
cmpsl
push
inc
test
push
fildll
gs
xor
xchg
daa
int3
xor
adc
cli
mov
es
repnz
cmp
movsl
or
jp
mov
and
iret
jecxz
push
out
mov
mov
dec
mov
pop
cmpsl
xchg
push
movl
ret
mov
aas
aad
and
mov
hlt
mov
add
sti
dec
sbb
fcmovb
sbb
mov
cmpsb
loope
das
dec
sbb
cmp
inc
rcll
out
xchg
lods
mov
shlb
bound
das
call
scas
xchg
stc
pop
popf
jecxz
fwait
nop
dec
pop
sub
xor
aad
into
imul
arpl
outsl
and
push
cmp
adc
ds
sub
inc
loope
cmpsb
loop
or
flds
add
cmpsl
cmp
push
xchg
push
push
add
outsb
mov
sbb
sbb
xor
icebp
ja
out
pop
js
xchg
cmp
fiadds
jge
in
mov
mov
push
xor
imul
and
dec
cmpsl
aas
aas
fdivl
add
push
rcll
test
test
push
mov
inc
and
fwait
aam
adcl
xacquire
adc
ds
je
lock
cmp
inc
fld
adc
push
call
lods
scas
int
iret
sub
gs
addr16
sbb
dec
cmp
fs
sub
fstps
insb
push
mov
jg
cmp
dec
mulb
scas
cmp
xlat
dec
nop
imul
in
mov
mov
pusha
fwait
mov
or
pop
jo
cwtl
pop
loopne
pop
lds
je
push
pop
add
fs
mov
sbb
out
xor
or
repz
in
scas
mov
jecxz
ror
fwait
or
mov
add
add
mov
or
push
pop
add
push
mov
jb
pop
or
mov
imul
out
sbbb
mov
lods
mov
sub
add
mov
repnz
pop
in
orl
fistl
xorb
add
outsb
ret
aam
jle
or
pop
mov
decl
mov
lods
js
popf
mov
xchg
ja
sub
jge
push
lcall
aam
or
test
mov
into
adc
mov
mov
cwtl
xor
dec
jmp
add
push
dec
cmpsb
aas
addr16
cs
stos
cmp
push
test
xchg
loopne
adc
repnz
jmp
xchg
xlat
mov
mov
dec
iret
sub
sbb
fisttpll
cmp
jae
sub
push
xchg
fimuls
push
stos
pushf
in
mov
sub
jmp
xor
sbb
les
mov
outsb
dec
xchg
clc
imul
mov
test
lahf
loop
lret
jbe
nop
adc
xchg
scas
int3
das
push
outsl
stos
fdiv
inc
sbb
into
jp
sbb
outsl
lods
mov
insl
inc
leave
inc
and
cmpsb
and
xor
mov
test
pop
or
inc
hlt
xchg
cmp
test
rorb
sub
mov
nop
pop
inc
jbe
stc
stc
outsl
sub
iret
call
aas
ss
jl
into
fiadds
cld
popa
fwait
sbb
loop
stos
ss
adc
lcall
pop
movsb
sbb
cmp
inc
loope
mov
movsl
adc
fbstp
aam
or
cmpb
or
out
dec
and
jns
mov
cltd
mov
jno
mov
test
adc
scas
aad
mov
xor
ss
sar
lds
mull
call
lahf
dec
loope
subb
sub
outsl
and
inc
or
mov
repnz
jecxz
jno
cltd
int
and
pop
mov
stos
add
fs
insb
jno
nop
iret
jle
leave
jb
daa
in
xor
ret
clc
inc
sub
cmp
movsl
out
pop
out
cmpl
leave
inc
lock
arpl
cli
push
pop
or
jecxz
ljmp
fistpll
pop
xchg
clc
mov
lods
jl
mov
test
hlt
mov
loope
add
icebp
mul
or
gs
pop
dec
sbb
mov
xor
cmp
add
repnz
aam
out
fidivl
in
into
push
jns
pop
mov
and
jp
mov
push
dec
fdivrp
jns
adcl
hlt
xor
or
add
xchg
pop
jnp
adc
ss
mov
sbb
je,pn
mov
jg
inc
daa
or
mov
pop
jmp
add
dec
mov
test
or
clc
icebp
push
cwtl
hlt
fdivp
fmul
add
pop
push
lret
add
inc
push
xor
loop
nop
inc
out
movsb
sbb
lds
dec
xlat
mov
popf
pop
mov
xchg
cmc
aad
mov
add
cli
mov
add
insl
cmp
lret
push
insl
pushf
mov
adc
mov
fadds
and
data16
sub
lods
icebp
jo
fwait
lea
mov
lahf
aaa
sarb
pop
jecxz
lret
fists
arpl
movsb
js
jmp
lods
movsl
test
clc
xchg
add
out
movb
out
push
pushf
jne
xchg
xchg
mov
or
nop
jp
mov
inc
pop
rclb
sub
insb
sub
orb
jmp
or
pop
fstl
lea
daa
ja
lret
cmp
or
pop
xor
jge
and
xchg
and
xlat
pop
rolb
jno
sub
test
es
sub
xchg
mov
sbb
lods
out
push
add
movsl
sub
call
cmp
lods
neg
mov
mov
outsb
lds
sub
test
inc
leave
in
and
or
lea
cld
or
je
dec
push
mov
das
dec
xor
fisttpl
fimuls
adc
and
out
xor
jnp
mov
xchg
shrd
fldpi
xchg
scas
jl
mov
cmpsl
ja
sub
aas
mov
ds
clc
fdivr
inc
jb
cs
xchg
cmp
mov
push
dec
test
xchg
inc
sub
mov
negl
xorl
cmp
fdivl
jecxz
inc
mov
push
xor
fsubl
in
ja
mov
mov
sbb
mov
dec
idiv
mov
xchg
cmp
shrb
fsts
xor
inc
and
hlt
jb
idiv
imul
adc
and
insb
xchg
in
mulb
mov
pusha
loop
test
lret
ljmp
or
pop
xchg
gs
mov
lds
mov
mov
imul
cmp
imul
push
mov
in
dec
das
mov
sbb
stos
test
add
add
addr16
add
adc
adc
inc
add
pop
or
mov
inc
and
cs
add
iret
shll
mov
cmp
mov
test
out
loopne
cmp
jmp
roll
sub
adcl
scas
lea
pushf
rcl
rcr
sub
inc
mov
cld
cmpsl
addb
lock
cmp
mov
xchg
or
mov
pop
mov
cwtl
cld
loop
orl
jno
cmc
sub
sbb
and
in
xchg
cmp
arpl
pop
push
cmp
in
iret
cltd
imul
inc
xchg
test
pop
xchg
lds
and
push
jge
inc
arpl
xchg
push
pusha
aas
mov
sub
repz
sbb
aas
loop
popf
and
out
cld
mov
inc
ja
nop
ficomps
cli
mov
push
ds
ret
fcoms
cld
dec
inc
lods
mov
mov
das
lret
xorl
mov
sbb
mov
call
fildll
mov
mov
add
adc
mov
fists
clc
sbb
mov
ljmp
shl
jp
mov
je
lods
fildl
test
add
lret
pusha
ja
outsb
lahf
rcr
pop
pop
sub
scas
adc
cld
stos
mov
push
mov
fwait
xor
ss
mov
sub
outsl
stc
inc
aas
cmp
cltd
mov
loopne
fucom
jmp
fisubs
outsb
stos
mov
test
dec
jnp
inc
inc
inc
repnz
xchg
or
push
mov
aam
and
lret
mov
into
cltd
in
sbb
mov
xor
in
jns
dec
int
pusha
mov
xor
sbb
decl
stos
mov
scas
sbb
mov
mov
call
test
loope
lods
mov
pop
add
pop
pop
mov
xchg
xchg
leave
inc
adc
dec
out
mov
sbb
aaa
and
in
xor
mov
ficoml
stos
jle
leave
pop
pop
int3
jp
rcll
dec
addl
or
faddl
cmp
push
add
push
mov
xor
pop
into
and
in
addr16
jbe
xchg
mov
sbb
shll
ds
add
adc
xchg
inc
gs
jno,pn
push
push
or
inc
mov
cmpsl
xchg
xchg
mov
mov
jp
sub
loope
and
lds
cld
jae
xor
fists
adc
testl
je
jle
or
dec
sbb
jno
pushf
add
rcll
pop
popa
mov
insl
xor
das
sti
cld
pop
scas
sti
dec
inc
sub
adc
gs
mov
xor
rolb
push
mov
push
sbb
fucomip
add
push
les
sahf
jp
pop
dec
fsts
les
or
mov
arpl
call
scas
testb
ljmp
orl
xchg
lods
mov
mov
ficoms
int
inc
xor
test
iret
sbb
cmp
fcmovb
and
jle
fidivs
mov
adc
andb
arpl
cmp
je
lahf
fsubs
jl
fdivrl
addr16
sub
and
push
nop
push
mov
mov
mov
hlt
cmpsl
sbb
int3
pusha
lcall
ljmp
jge
leave
arpl
cli
xor
pop
dec
inc
or
xor
les
ret
mov
push
movsb
sarl
adc
jb
inc
xchg
fdivrs
mov
sbb
je
and
ljmp
mov
mov
test
daa
popf
xor
push
pop
add
imul
mov
dec
pop
inc
and
lea
pop
decl
jnp
xorl
std
gs
push
ret
mov
call
outsb
push
mov
pop
lea
arpl
je
fistpl
mov
lds
adc
adc
xchg
pop
iret
cmp
or
jecxz
xor
jne
out
sub
lock
or
scas
push
enter
sub
mov
dec
lea
add
scas
push
jmp
mov
cmp
jns
decl
dec
stos
stc
push
cmp
int3
xchg
in
pop
xchg
push
mov
call
add
xor
test
lcall
pop
jmp
int3
cwtl
gs
mov
iret
ret
pop
xchg
decb
pop
dec
loopne
ljmp
jge
sbb
cltd
jne
push
rorl
lods
sbb
mov
sbb
imul
xchg
int
inc
cmpsb
pop
mov
xchg
jge
jbe
push
out
jle
inc
shl
mov
jmp
push
dec
cmpsl
fcomps
pop
mov
jae
inc
pop
xor
stos
scas
fcoml
int
sub
push
mov
mov
popf
xor
fucom
add
pusha
pop
lret
sub
sti
stc
imul
adc
lds
call
or
add
stos
std
shrb
add
pop
jb
cltd
pop
dec
iret
xchg
leave
pop
pop
jl
les
lahf
mov
push
jecxz
mov
mov
push
call
xor
jnp
mov
data16
jmp
cld
jp
or
jle
push
cmp
and
pop
dec
loopne
cmp
cmp
repz
jb
add
mov
jns
and
arpl
cmp
sub
xor
fnsave
cs
pushf
nop
movsl
shlb
or
mov
lahf
mov
jl
dec
xor
xchg
or
lods
mov
push
call
popf
jo
sbb
stos
adc
stos
dec
mov
jns
loope
insb
jnp
jecxz
dec
add
lret
xchg
nop
dec
pop
int3
pop
int3
mov
icebp
cmc
sbb
fistpl
fcomip
frstor
es
insl
data16
pop
xor
sbb
cmc
outsb
sub
dec
pop
insb
jo
scas
fcompl
xchg
xchg
xor
loop
xor
cmp
jae
scas
fisttpll
inc
ljmp
mov
stos
imull
rol
xlat
xor
outsb
pop
test
faddp
rclb
jle
data16
cld
pop
jmp
mov
mov
push
in
jns
mov
adc
dec
clc
popf
imul
arpl
iret
cmp
xchg
jge
rcrb
aas
xlat
mov
dec
shll
cmpsl
push
les
dec
sub
int3
add
jo
mov
and
ret
mov
cmpb
mov
mov
xor
mov
shlb
dec
jbe
lea
add
sbb
push
ficoms
adc
mov
xor
sub
lods
cmp
bnd
dec
shll
push
sub
sub
and
hlt
push
ss
into
hlt
add
mov
push
xor
scas
cmp
or
jp
push
popf
cmp
testl
iret
test
sahf
cwtl
out
fdivrp
mov
inc
fmuls
ror
xchg
mov
cmpsl
push
mov
stc
loope
dec
iret
data16
cmpsb
xchg
mov
roll
adc
data16
push
dec
sbbl
rcl
pop
jo
push
imul
out
xor
xchg
data16
shl
dec
add
mov
lock
or
in
fs
rorb
add
sbb
inc
pop
dec
iret
scas
mov
sahf
jp
cmc
push
js
popf
in
test
jne
jo
mov
out
jmp
pop
cmpsb
xlat
push
jns
out
scas
pushf
popa
aaa
or
sub
add
movsl
in
pop
jb
pusha
fsubl
push
mov
call
arpl
repnz
pop
pop
mov
push
mov
push
pop
fs
or
test
and
scas
nopl
add
and
pop
or
rclb
jecxz
mov
shll
dec
adc
or
xor
sti
bound
or
dec
aas
mov
leave
or
mov
out
addb
in
mov
sub
or
insl
dec
cmp
pop
ret
mov
add
push
ljmp
dec
cmpsl
xorb
pop
bound
mov
mov
and
out
leave
add
fs
adc
int
mov
ds
sbb
and
movsb
fsubs
mov
push
and
lret
cmovae
add
decl
data16
mov
rclb
imul
out
sub
cmc
push
repnz
sbb
pusha
sbb
ror
jecxz
xor
xor
dec
or
repz
add
mov
pusha
aaa
jg
aas
fldcw
je
dec
mov
push
pop
and
adc
fadds
out
nop
test
or
jmp
iret
fistps
xchg
inc
mov
push
inc
cmp
mov
sbb
stc
mov
shrb
mov
js
orl
mov
xor
dec
int
js
pusha
sub
sub
mov
xor
pop
call
shll
test
movb
cmp
dec
pop
and
es
inc
pop
mov
leave
cmp
mov
or
lcall
push
repnz
adc
inc
pop
adc
sub
int3
mov
in
aam
cli
xchg
rcrb
push
pop
dec
sti
pushl
mov
imul
subl
and
jg
sbb
ret
aaa
icebp
inc
repnz
movsl
mov
adc
out
fwait
out
bound
hlt
xor
pop
call
xor
scas
bound
scas
dec
cmpsl
cs
imulb
sub
jecxz
xchg
mov
jle
int
lock
bound
mov
decb
mov
push
aaa
xchg
hlt
jns
push
sbb
fstl
mov
test
xor
std
fadd
call
movsb
adc
pop
sbb
stos
mov
xor
mov
stos
and
js
fsubl
stos
cmp
jmp
stos
jg
hlt
pop
add
push
add
and
xchg
aas
cmpsb
lods
jmp
and
das
fisttpll
aam
ljmp
cmp
ljmp
daa
mov
jmp
dec
jge
arpl
negb
xchg
lds
outsb
dec
in
jns
pop
in
xchg
fldcw
int3
mov
jp
or
push
stos
lret
dec
adcb
dec
dec
cmpsl
mov
cmpsb
mov
ffreep
jle
dec
lods
pushf
movsl
xor
inc
xchg
fistpll
dec
imul
or
jmp
xlat
adcb
jno
mov
fs
xchg
fadd
or
pushf
push
aad
pop
bound
data16
lds
mov
push
sbb
and
imul
loop
and
icebp
lahf
leave
pushf
dec
dec
fstps
pop
and
and
outsb
fwait
aas
jmp
movsl
ret
jle
into
out
lahf
addr16
xorl
adc
jecxz
repnz
nop
pop
in
int
rcrb
pop
loope
and
cwtl
incb
add
add
jns
hlt
push
scas
pop
mov
sbb
xor
lret
inc
aas
xchg
and
cmp
pop
repnz
mov
stc
xor
adc
daa
sub
adc
repz
or
test
add
dec
mov
inc
xchg
mov
pop
push
scas
ja
shll
pop
pop
sbb
sub
mov
inc
jmp
jp
hlt
add
push
xlat
or
jecxz
cmpl
out
mov
jns
or
or
fadds
rorl
or
fistpll
push
dec
dec
add
ljmp
addb
inc
enter
xchg
xor
cmpsl
arpl
flds
dec
dec
adc
lods
cmp
cltd
shll
xlat
adcb
add
inc
aam
les
sahf
jno
fldt
decl
je
fistpl
or
xchg
shll
popl
jne
gs
out
cmp
rcrl
in
fimuls
cltd
pop
rolb
pop
mov
jle
fucomp
dec
xor
adc
mov
int
cmc
push
adc
and
and
fsubl
add
out
sub
aam
xchg
lds
in
std
xchg
pop
mov
lods
pop
cmp
cmp
sbb
cld
cli
and
push
add
ljmp
stos
xor
sub
xor
push
pop
addl
mov
je
in
cmp
and
push
dec
push
mov
xchg
xorb
adc
lods
mov
adc
sub
or
pop
jns
daa
push
subl
mov
add
fdivp
mov
shlb
cmp
jne
repz
and
jl
arpl
mov
sbb
arpl
mov
jp
dec
mov
fisttpl
sahf
push
cltd
and
push
mov
mov
popf
call
cmc
jns
mov
stos
lea
adc
in
fs
adc
adc
ret
jbe
f2xm1
jmp
adc
in
pop
fwait
push
pop
pop
fsin
rolb
mov
jo
imul
dec
les
les
test
dec
adc
andl
push
jo
loop
insl
shll
push
lret
je
or
sbb
dec
dec
imul
mov
sub
mov
add
out
jae
sahf
jp
in
out
adc
cltd
fnstenv
push
repz
jo
mov
fisubrs
xorb
mov
out
leave
mov
xor
inc
pop
in
andl
inc
inc
out
fcmovnb
mov
pop
fildll
and
inc
jecxz
call
imul
dec
mov
pop
loope
arpl
jnp
jmp
inc
loop
cs
sub
out
xchg
aad
push
outsb
out
push
push
pop
mov
mov
mov
addr16
out
xor
xchg
scas
cld
mov
xchg
imul
enter
push
add
ds
jge
pop
popl
sti
stos
cmp
enter
add
jecxz
mov
mov
push
mov
inc
daa
sub
mov
and
int3
sbb
adc
xor
or
fiaddl
lods
add
aad
movsl
cmp
or
add
pop
inc
cld
jb
loop
push
ficomps
sbb
push
mov
cmp
aas
cmp
dec
sub
movsb
cmp
je
inc
fstl
call
fs
popa
aas
mov
pop
xor
out
incl
sti
int
add
aas
out
inc
in
inc
xor
into
push
movsb
dec
inc
jbe
xchg
cmp
fiadds
push
inc
mov
lea
jp
push
xchg
shll
mov
push
xchg
rol
pop
mov
lret
pop
inc
ja
sub
out
mov
out
dec
mov
sbb
inc
loopne
dec
imul
push
popa
and
xchg
loop
fdivr
xchg
pop
cwtl
pop
movsb
mov
mov
adc
inc
cmp
xlat
xchg
repz
mov
jg
popa
sbbb
push
adc
into
scas
mov
ret
scas
fadd
icebp
nop
pop
add
jmp
push
inc
pop
mov
in
sbb
push
or
scas
mov
xchg
popf
mov
or
jnp
pushl
adc
loope
mov
aaa
cmp
and
mov
mov
andl
test
mov
mov
add
sbb
int
mov
aad
gs
adc
xor
clc
hlt
jns
lods
xor
shlb
in
int
sarl
jmp
stc
push
dec
push
add
mov
lahf
adc
test
jmp
jg
xchg
inc
and
inc
adc
fimull
mov
jne
push
sbb
scas
fnstenv
pushf
adc
sbb
pop
add
xchg
xchg
jae
fisubs
loopne
mov
jecxz
xor
sub
aam
add
mov
rcr
out
movb
xchg
pop
std
loopne
andb
sbbb
loop
adc
nop
push
mov
cmpsl
xor
push
dec
jns
add
sub
xchg
mov
add
push
adc
scas
or
pop
ret
xchg
cmp
arpl
hlt
xor
repz
aam
js
sbb
dec
clc
push
mov
gs
cmpsb
out
imul
out
dec
pop
push
int
and
mov
and
push
mov
add
pop
jae
jae
loopne
adc
movsb
shll
sub
mov
fistpll
imul
sub
lcall
in
push
arpl
aam
loope
jg
jb
mov
pop
or
mov
in
or
pop
das
push
mov
and
or
jmp
dec
adc
and
scas
scas
xor
loopne
call
cmp
jle
or
stos
push
mov
cmp
addl
leave
mov
push
mov
add
cmp
sub
inc
mov
and
pop
xchg
inc
pusha
pop
movsl
daa
jae
inc
pop
mov
cmp
loope
push
push
cmpsl
pop
inc
pmulhw
mov
loope
push
push
and
xchg
pop
mov
jmp
cli
pop
cmp
or
arpl
rorb
fisttpl
or
dec
dec
push
mov
and
aam
xchg
push
jno
xchg
jae
int3
add
sub
mov
aaa
inc
hlt
and
cmp
mov
fbstp
test
arpl
fadds
push
pusha
cmc
daa
movsl
stos
pop
pop
xchg
mov
jl
neg
fs
jl
aad
adc
inc
gs
sbb
mulb
push
jb
and
js
pop
mov
or
sti
push
pushf
cmp
sbb
lods
jle
stc
daa
sbb
dec
push
cli
sbb
jmp
in
sbb
pop
in
push
sar
ja
xchg
or
and
xchg
or
outsl
test
stc
push
dec
mov
sahf
inc
loop
insl
inc
cli
stc
into
adc
mov
test
out
outsl
pop
nop
stos
call
xchg
sub
leave
dec
clc
lods
sbb
cs
cmpsl
sub
push
mov
aam
out
repz
push
push
aaa
leave
loop
pusha
out
ljmp
adc
xchg
xchg
fsubrl
pusha
imul
mov
jle
and
dec
dec
inc
fwait
inc
jle
nop
add
aad
sahf
jle
cmp
mov
lock
xorb
call
xchg
arpl
dec
jge
add
add
sbb
sub
lods
rcl
emms
dec
fcomi
xor
aaa
mov
sub
mov
sahf
mov
xchg
cs
jg
and
mov
fs
inc
inc
movsl
adc
push
out
xor
pop
movsb
and
jmp
out
out
pop
cmp
aas
mov
push
fld
jge
mov
xchg
insb
inc
ret
xor
arpl
xchg
lods
cmp
dec
push
jnp
enter
mov
dec
sub
add
aas
addr16
addl
inc
jg
mov
vmwrite
das
add
shll
cmp
push
cmpsl
aad
sarb
data16
rol
fstps
stc
dec
jp
and
mov
pop
jo
ror
jle
inc
or
mov
mov
test
mov
dec
ljmp
scas
imul
int
filds
push
xor
je
mov
test
mov
xchg
inc
adc
mov
dec
popf
or
cmp
ficomps
popf
in
movsb
lock
les
jae
jmp
add
fdivr
push
test
add
ficoms
out
test
lret
cmp
jl
push
add
lahf
js
mov
pop
jo
dec
and
scas
fstpt
sarl
sbb
mov
cmpsl
icebp
pop
mov
lret
sbb
xchg
mov
pop
xchg
or
dec
and
outsb
mov
sbbl
xor
xchg
fwait
outsb
inc
dec
cmc
sahf
sbb
mov
and
xor
sub
or
cs
jbe
out
mov
push
pop
sub
notb
lahf
sbb
data16
sub
dec
sub
jb
orb
mov
notb
xor
push
mov
movsb
aam
clc
orl
adc
cmp
mov
xchg
jnp
xchg
mov
in
imul
ss
out
mov
jle
movsl
and
jg
push
addl
in
pop
mov
push
push
hlt
or
pop
add
addb
into
push
mov
lret
ljmp
pop
sbb
fcoml
pop
pop
jo
sub
xchg
add
push
pop
popa
popa
add
shrb
lcall
pop
sbb
sbb
insl
mov
jno
ret
pushf
inc
add
inc
push
mov
stc
gs
int
xor
pop
pop
push
mov
sub
hlt
in
dec
imul
add
adc
subl
adcb
jns
out
push
mov
sub
mov
sahf
sbb
xor
nop
shrb
gs
aad
test
subb
add
mov
jecxz
cmp
in
add
mov
dec
lods
cld
mov
add
cwtl
sub
insl
mov
push
mov
or
cmp
sbb
sahf
mov
inc
xchg
scas
xor
in
pusha
push
js
push
jmp
dec
add
adc
xlat
ret
mov
stc
cmpsb
lods
xor
sti
or
and
ds
fxch
adc
stos
mov
ret
or
das
insb
data16
pop
sbb
ja
popf
xchg
cmc
xor
pop
stc
dec
jb
jne
push
mov
sar
jb
cmc
repnz
mov
jge
ror
decb
pop
xchg
push
jnp
idivl
rolb
insb
xchg
jle
jne
push
repnz
or
ret
mov
dec
nop
cwtl
push
pusha
and
daa
mov
out
inc
in
push
push
xchg
push
and
cmpsl
cmp
movsb
pop
lahf
in
or
cmpsb
lret
scas
loope
sahf
orb
sub
movsl
pop
fcmovne
icebp
mov
scas
inc
and
xor
push
mov
test
cmpsb
sbb
sti
dec
sub
fcoms
sahf
push
inc
mov
test
cmpsb
js
ljmp
or
jb
in
sbbb
leave
fs
dec
repnz
ret
xchg
popa
mov
mov
mov
imul
adc
rclb
idiv
imull
cli
pop
pop
adc
cs
sti
ja
pop
fs
inc
mov
popf
js
pop
aas
xchg
mov
jmp
movsb
adc
outsl
mov
repz
pop
das
adc
sub
sub
cmp
lret
cmc
sub
push
inc
pop
dec
mov
jne
movsb
adc
mov
aas
mov
jmp
stos
push
out
lcall
xchg
outsl
xchg
dec
arpl
mov
inc
call
jnp
or
inc
push
fiaddl
xor
xor
mull
sub
dec
push
lea
int
push
jns
jnp
dec
fcompl
mul
int
das
xchg
or
push
and
xchg
lods
sub
xchg
jns
es
jle
mov
cmp
shlb
pop
xchg
movsb
shll
mov
and
shlb
mov
dec
lock
sarb
push
inc
adcl
enter
lock
xor
outsb
sbb
push
pusha
lcall
out
nop
add
push
js,pt
les
arpl
dec
andb
sbb
xchg
out
cwtl
or
outsl
fistps
popa
clc
jne
int
push
stos
pop
push
call
lods
aas
paddusb
lahf
sub
sub
mov
push
pop
rcll
sbb
cli
cmp
lods
sub
mov
push
movsb
and
hlt
mov
repnz
stos
outsl
add
mov
lods
bound
mov
divl
sub
inc
pop
ret
mov
fnsave
jmp
addb
xor
mov
jle
mov
popf
sub
pusha
pop
subb
loop
scas
cmp
inc
add
adc
add
jecxz
ja
clc
cmpl
out
das
lods
inc
fdivl
push
call
sbb
cmpsl
push
cmpsb
add
ljmp
gs
add
lahf
xchg
sahf
sub
cltd
ficompl
mov
cltd
cmp
dec
mov
or
jbe
dec
fdiv
rorb
cmp
jno
das
xchg
add
rorb
aam
jns
shl
pop
testb
mov
jne
popf
push
std
inc
and
mov
sahf
push
fistpll
clc
inc
ret
jecxz
mov
push
ret
or
inc
iret
push
scas
jmp
test
fdivs
addb
cli
sub
pop
mov
sbb
ja
stc
or
mov
rcr
aam
aas
dec
push
insb
pop
leave
scas
jae
mov
lahf
pushf
pop
dec
aad
popf
nop
jnp
push
pusha
push
inc
dec
insb
or
fsub
popa
xchg
leave
mov
mov
addr16
daa
sub
ret
loope,pn
scas
mov
mov
movsb
inc
or
mov
pop
scas
nop
sub
or
fwait
jb
jecxz
faddl
push
je
test
scas
cmp
jl
xchg
xchg
ficoml
xor
stc
cmp
push
jl
xorl
shlb
jmp
aad
stc
mov
xchg
xchg
push
add
cwtl
pop
xor
lods
shlb
shll
mov
xchg
mov
dec
inc
jbe
icebp
jg
add
lods
adc
or
enter
iret
mov
aas
lret
xchg
rcll
xor
or
sbb
xchg
and
sarb
pop
add
es
xor
jge
fdivrl
lret
stos
addl
add
cwtl
xchg
loopne
lret
les
gs
jecxz
lea
dec
add
mov
mov
popf
mov
adc
cmp
addr16
sti
jmp
mov
push
ljmp
popa
js
pop
inc
sub
inc
cltd
add
icebp
xchg
hlt
mov
pop
icebp
rorb
pop
ss
sarb
roll
repnz
adc
mov
cmp
mov
jns
push
push
inc
fsub
lods
inc
imul
mov
inc
add
fiaddl
in
int
repnz
dec
pop
pop
lods
and
roll
cmp
scas
jecxz
pusha
popa
jo
mov
cli
test
addr16
sub
loopne
loope
pop
sub
clc
test
sbb
sarb
shlb
dec
xchg
fbstp
call
jmp
les
sbb
xor
adc
cltd
lock
gs
insb
insl
shrb
sbb
enter
jp
and
rcll
adc
scas
xor
sbb
pop
cmp
addr16
lret
or
rcll
dec
xchg
mov
aas
imul
dec
cmp
adc
cs
mov
xchg
rcr
add
dec
dec
repz
inc
lret
xor
cmp
shl
push
fwait
clc
in
mov
mov
gs
outsl
xchg
vmwrite
xchg
js
loopne
dec
adc
std
pop
inc
or
sub
sub
fdivrl
xchg
or
jno
movsb
popa
push
cli
arpl
test
fs
sub
mov
std
push
mov
popa
pop
or
xlat
add
test
fcompl
jge
push
push
or
add
sub
into
xchg
mov
mov
lds
inc
incl
mov
jae
cltd
test
daa
repnz
int3
in
lret
and
pop
cmp
mov
mov
int3
inc
and
cmp
test
std
xchg
popa
push
dec
dec
cmpsb
adc
xor
push
sbb
inc
mov
inc
iret
fnstcw
xchg
and
sbb
cli
je
jo
lds
xor
sub
cmp
repz
jmp
aaa
mov
ret
sub
jns
lret
inc
sbbl
repnz
nop
push
fwait
cmpsl
sub
fisubs
stos
xchg
inc
jb
ret
xchg
xchg
fwait
sub
mov
test
or
jb
xchg
bound
insb
jae
inc
jnp
subl
sbb
lods
xor
sbb
fildl
repz
lds
out
bound
pop
dec
xor
pop
leave
test
xor
mov
nop
jne
nop
je
jle
cmc
out
cmp
pop
push
and
sahf
cmp
xor
insl
daa
dec
xchg
jns
test
jecxz
pop
jl
pop
outsb
push
lods
jnp
pop
xchg
jmp
addr16
loopne
push
dec
mov
cwtl
lahf
cmpsb
cmp
stos
rcr
cmp
push
fcoml
mov
ficomps
cmp
lods
dec
lds
push
dec
or
insb
jno
cmp
jo
and
inc
mov
mulb
xor
sub
ret
sub
imul
stos
pop
push
icebp
mov
iret
xchg
cmp
cmp
aad
sub
flds
mov
and
in
and
add
inc
xlat
inc
ret
cmc
imul
mov
enter
ret
jecxz
sahf
dec
sub
sbb
sbb
aas
ss
lds
fndisi(8087
ja
pop
hlt
rorb
stos
pop
jl
ds
dec
imul
sbb
mov
repz
adc
jnp
push
loopne
in
or
jae
loope
xchg
pushf
fadds
sub
fistpll
lret
pushf
mov
aad
cli
lea
jbe
or
cmp
shlb
out
inc
or
lret
xor
mov
adc
pushl
xor
mov
mov
ret
cmpxchg
shll
mov
fs
inc
xchg
in
cld
es
test
sub
iret
mov
sbb
jle
fsubr
das
fxch
ljmp
mov
in
xchg
jbe
pop
sbb
pushf
xchg
bnd
lods
inc
insl
xchg
xchg
popa
cmp
inc
sbb
jbe
pop
loope
sbb
xchg
nop
es
aaa
push
aaa
out
sub
mov
sbb
add
movsb
cwtl
clc
imul
push
cmpsb
adc
sub
out
cwtl
ljmp
adc
ljmp
push
xor
je
pop
adc
ret
mov
dec
repnz
stos
add
jae
mov
pusha
pop
sbbb
jp
in
mov
inc
push
movsl
ret
mov
out
mov
and
es
push
pop
mul
sbb
mov
pop
xchg
inc
xchg
lods
xor
and
add
pop
dec
aaa
loop
xor
sub
in
int3
daa
roll
inc
adc
sbb
mov
jnp
sahf
or
fwait
cmpsb
lret
test
mov
pop
xchg
fnsave
mov
cmp
in
in
movsl
and
inc
icebp
adc
cmp
call
push
mov
aad
into
and
int
dec
sbb
dec
jb
mov
outsb
push
mov
cmp
push
imul
push
fwait
out
xchg
dec
jp
push
call
or
sub
or
jge
xlat
orl
jecxz
mov
jle
dec
add
jbe
push
imul
adc
push
push
push
mov
jle
scas
xor
lcall
and
push
stos
ret
in
xorl
ja
imul
dec
outsl
movsb
mov
insl
xor
fistpl
sub
jno
xchg
inc
adc
jb
ljmp
mov
sbb
or
add
sub
cltd
fxch
iret
fisubrl
pop
cmpsb
imul
clc
jno
xor
inc
mov
mov
xchg
add
mov
out
mov
inc
pop
test
lods
adc
movsl
push
pop
roll
sbb
and
in
in
cmp
and
arpl
cmp
push
addr16
jns
inc
pop
aam
and
incb
jle
mov
cs
inc
imul
xchg
mov
inc
cli
cmp
inc
mov
pop
jno
fdiv
adc
mov
cmp
mov
pushf
es
mov
fs
add
xchg
popf
fsub
mov
dec
pop
sbb
pushf
mov
jl
mov
shrl
dec
bound
sbb
sub
roll
add
mov
popa
sub
ja
aam
shlb
xor
pop
push
shll
inc
jle
outsb
int
loop
in
lret
mov
pusha
and
add
dec
pop
pop
add
rcll
and
xchg
xchg
dec
inc
sub
cmp
inc
arpl
adc
or
jae
rol
repz
fcmovnu
stos
mov
push
test
jne
xor
cmp
jp
addr16
fistpll
or
cmc
jbe
push
xor
jno
adcl
data16
xchg
adc
mov
addr16
add
and
xor
in
mov
adc
mov
or
call
mov
sbb
mov
sub
imul
cmp
dec
jns
fs
pusha
test
mulb
xchg
jb
jae
daa
jb
imul
cmpsb
clc
cmpsl
mov
pusha
sahf
mov
adc
and
mov
lahf
imull
dec
dec
ja
xlat
mov
push
stc
dec
push
pop
movb
cmp
ds
dec
leave
inc
rorb
int3
adc
ret
push
in
mov
or
mov
inc
dec
sub
int
test
sub
xchg
dec
movsb
roll
and
xor
jl
popa
dec
add
inc
aas
inc
out
xor
fsubs
data16
jns
inc
lcall
or
xchg
dec
sub
insl
jecxz
cs
insb
je
bound
adc
lods
aas
jne
push
inc
mov
mov
and
inc
mov
dec
inc
in
push
jb
push
leave
mov
push
jb
sub
in
fsubr
jns
add
aam
cmp
cld
xchg
mov
mov
pop
stos
aam
jb
jp
inc
or
int
sbb
or
dec
xchg
mov
inc
lods
imull
cmp
mov
sbb
rorl
push
test
imul
int
mov
push
std
aam
mov
cmp
clc
xchg
fdivr
in
jp
or
cld
mov
pop
adcl
push
popa
dec
add
in
xchg
cmp
test
sub
movsb
ss
mov
data16
dec
or
inc
xor
dec
dec
or
scas
jbe
jge
call
mov
insb
sar
lea
and
adc
out
push
lods
andl
xor
out
or
out
xchg
ds
fstl
nop
lods
pop
stc
cld
lret
xchg
ret
icebp
std
stos
sbb
lods
mov
aam
dec
popf
mov
int3
repnz
or
jmp
sub
cli
movsb
mov
cmp
dec
outsb
jne
fdivr
inc
movsb
mov
int
dec
xor
scas
pop
std
jmp
dec
mov
or
pop
mov
adc
addr16
cwtl
fisttpl
mov
mov
fcomip
stos
dec
mov
mov
lods
hlt
push
lea
nop
shll
js
adc
push
sub
mov
jbe
xchg
fisubrs
insl
inc
mov
leave
dec
mov
jnp
fmul
mov
sub
bound
lahf
xor
jmp
jb
jle
fadds
test
cmp
or
mov
jle
xlat
add
repnz
push
push
mov
fisttpl
nop
mov
mov
into
movsb
data16
sbb
out
lods
mov
jl
fwait
in
adc
pop
xchg
shl
jnp
cmc
xchg
or
aas
or
cmp
lds
shlb
fcoml
hlt
cmp
add
aad
xchg
dec
fdivrl
mov
adc
inc
xor
outsl
mov
pop
sub
pop
mov
push
movsl
lcall
pop
and
imul
stc
das
inc
jo
nop
lahf
fwait
xchg
mov
rcrl
pushf
fwait
mov
rolb
arpl
xor
mov
mov
mov
mov
rorb
js
mov
pop
loopne
cld
daa
adcb
xor
jnp
push
push
sbb
jmp
jp
sub
mov
adc
jp
jae
lods
insl
add
fistl
mov
pop
push
ret
sbb
iret
xchg
adc
and
movl
sbb
dec
popa
movsb
leave
call
pop
adc
andl
sub
and
adc
push
xchg
push
xchg
adc
adcb
jo
aam
push
test
jmp
push
pop
push
ljmp
sbb
dec
adc
jne
xlat
jg
xchg
out
shrb
xchg
mov
loop
sub
jns
stc
jo
pop
shlb
xchg
add
aas
jb
sbb
jmp
fs
dec
push
imul
mov
rolb
mov
dec
call
inc
jnp
push
mov
or
nop
nop
jne
mov
sbb
xor
hlt
jne
pop
pop
sbb
popa
cltd
adc
mov
mov
addl
mov
jb
xchg
mov
repz
sub
and
hlt
stos
and
lret
adc
je
jb
mov
dec
ss
mov
leave
imul
jo
sbb
sbb
call
lret
jae
mov
cs
lods
xor
dec
in
xor
outsb
dec
sahf
mov
in
push
xor
inc
xor
mov
lock
mov
test
gs
mov
iret
clc
mov
cmp
and
scas
sub
xchg
das
in
out
fcmovnu
das
adc
pusha
xchg
cmpsb
call
or
mov
or
jg
inc
loope
sub
pop
pusha
pop
popf
pop
cmp
pop
rcl
ds
outsl
push
cmpl
xchg
cmp
imulb
ret
mov
cmp
fnsave
xor
mov
cmp
pop
jno
lret
pop
sbb
xorl
xchg
mov
neg
jg
mov
pop
xchg
xchg
mov
mov
mov
push
add
or
aas
jecxz
push
jnp
std
push
xchg
sub
jecxz
movsb
int3
aas
lret
mov
jmp
fimull
arpl
fimuls
cmpl
test
xchg
inc
mov
scas
test
lea
push
out
nop
xchg
cltd
cld
in
ss
ds
cltd
jecxz
ljmp
addl
pop
arpl
pop
dec
sub
cmp
push
aam
sub
iret
cmp
test
mov
xlat
gs
into
rcrb
call
test
lods
int
popf
xor
adc
pop
dec
dec
sbb
arpl
popa
mov
enter
cli
fisubl
dec
gs
movsb
cmp
jle
out
js
in
test
dec
adc
rorl
push
shll
mov
movsb
and
iret
mov
jmp
adc
movsb
mov
lock
fadd
sub
jnp
sbb
in
arpl
dec
cmovb
aad
push
dec
hlt
lahf
pop
inc
aas
jno
aam
xchg
adcb
add
outsl
cmp
mov
cs
hlt
push
cmp
mov
and
push
jno
pop
cmp
icebp
cmp
mov
shlb
into
xor
pop
xor
jnp
add
jp
insb
les
insl
pop
dec
inc
dec
subl
ss
filds
mov
sarl
mov
jb
cmp
xchg
sbb
mov
fwait
jmp
in
push
push
clc
clc
cltd
inc
mov
jecxz
lret
iret
add
clc
scas
xchg
mov
aad
jo
cld
cmc
inc
out
mov
pusha
addl
lahf
jecxz
out
mov
xor
mov
roll
lret
or
cs
sbb
xor
mov
dec
dec
and
clc
push
dec
bt
push
jecxz
sbb
movsb
out
or
fwait
cmp
mov
ret
movsb
loopne
or
outsb
js
lods
xchg
loopnew
stos
dec
rcrl
push
or
out
call
xchg
test
int
dec
xlat
pusha
jmp
mov
push
inc
jo
int
scas
dec
aam
jecxz
in
sbb
js
mov
jge
or
lds
push
pop
pushf
lds
andb
icebp
pusha
imul
mov
test
mov
fdivrp
inc
arpl
loopne
xchg
mov
clc
int3
ret
pop
sti
dec
jno
sub
div
aaa
dec
xor
mov
es
addl
push
push
cli
adcb
xchg
add
sub
int
pop
pop
jmp
test
popa
rol
and
scas
jno
xor
and
sahf
jg
sahf
outsl
xorb
aam
mov
xchg
aaa
jnp
sarb
int3
mov
das
out
adc
pop
mov
dec
enter
lods
cli
cmc
push
test
xor
out
add
inc
shlb
sbb
hlt
fstl
add
and
orl
sbb
xchg
mov
gs
sbb
xlat
rcr
loop
mov
push
int3
adc
ret
sub
clc
out
jne
fsubp
jnp
pusha
xchg
add
mov
add
pop
es
lahf
lret
outsb
push
pop
scas
aam
or
lock
dec
movsl
mov
cmp
xchg
cmp
sbb
xor
xor
pusha
xor
outsb
lea
cmpsb
push
or
cmpsl
cmp
mov
jb
js
iret
push
enter
sub
push
out
dec
add
adc
out
fwait
inc
jno
mov
fmuls
cmp
test
mov
add
imul
fwait
or
jbe
in
imul
pop
sbb
mov
es
mov
popf
enter
xor
outsb
mov
inc
ja
aam
in
shll
add
dec
xor
arpl
imul
dec
adc
lret
imul
ja
fucom
lret
or
cwtl
aas
push
mov
sarb
pushf
inc
out
pop
frstor
data16
add
adc
and
jg
push
add
sub
push
mov
jmp
inc
push
test
inc
rcll
into
adc
dec
inc
orb
adc
scas
out
bnd
pushf
cmp
inc
lahf
pop
xor
xor
xchg
pop
arpl
cmp
xchg
jbe
pop
jnp
inc
pop
mov
cmpsb
xchg
loop
sub
scas
and
inc
stc
mov
or
sbb
lret
icebp
or
sbb
sarl
loopne
mov
icebp
sub
and
cmp
aad
mov
pop
sbb
adc
xchg
je
data16
std
add
sub
or
cmp
outsl
dec
adc
mov
ss
hlt
pushf
mov
dec
sbb
arpl
mov
cld
mov
jns
cwtl
sub
lcall
pushf
pop
fidivrl
mov
sub
cmp
jg
push
dec
outsb
jne
cmp
cmp
or
xchg
jo
pop
cltd
mov
mov
add
std
int
add
inc
push
cmp
movsb
xor
in
xor
lret
jl
pop
je
jnp
xor
xor
xchg
rclb
sbbb
push
adc
push
jg
mov
leave
or
sbb
js
cmp
fsubl
pop
pop
pop
loope
and
dec
cmpsb
ds
dec
mov
xor
int
je
cs
mov
sub
je
jmp
mov
pop
fdivrl
pop
clc
roll
xchg
adc
sbb
call
push
imul
xchg
mov
mov
lcall
cmpsb
lahf
stc
add
popf
icebp
xchg
lds
inc
leave
mov
and
fs
mov
clc
inc
das
daa
mov
mov
dec
aam
int3
push
out
jp
das
iret
pop
sbb
loopne
adc
dec
push
call
mov
xchg
sub
inc
outsb
addl
add
xor
mov
movsl
shl
ss
lret
mov
add
ror
mov
cmpsl
cmp
jp
lods
pop
mov
lret
faddl
cmc
cmp
test
push
repnz
in
ret
neg
mov
orl
addr16
xor
jg
adc
sub
imul
add
jecxz
data16
cmp
sub
pop
sbb
xchg
and
adc
push
fidivl
mov
pop
sahf
xchg
stc
mulb
leave
out
adc
lds
inc
fcomip
scas
xor
add
sti
pusha
pop
out
mov
push
mov
fldl
xchg
push
cmpsb
pop
mov
jmp
scas
test
inc
repz
lea
push
or
pop
mov
push
mov
or
push
push
je
icebp
inc
outsb
pop
jp
shlb
pop
jo
add
mov
xor
lcall
mov
xchg
mov
loop
lods
shr
cmp
insl
or
jmp
xchg
xorl
stc
push
or
adc
xor
pop
scas
into
or
lds
fstps
or
sub
js
popf
sub
mov
pop
xchg
test
aam
lea
ffree
lods
push
sub
fisubrl
int
xchg
std
push
add
adc
add
adc
test
cmp
cmp
nop
mov
int
into
xor
out
rclb
push
fidivl
sub
std
xor
inc
cmp
js
sub
ljmp
movl
fs
mov
ret
cmpsl
xchg
je
leave
jmp
xor
insb
das
addb
out
or
jae
mov
mov
mov
jle
les
jo
stos
clc
lock
push
leave
hlt
aad
dec
and
les
jnp
loopne
push
xchg
push
fwait
push
adc
gs
mov
icebp
push
sbb
mov
push
sub
ja
mov
gs
add
jo
cli
jp
xchg
test
push
inc
test
or
out
pushf
cmp
jno
cwtl
mov
xor
or
xchg
enter
subl
scas
hlt
loopne
int3
test
mov
hlt
outsb
mov
in
push
jmp
sub
xchg
outsb
cmp
arpl
in
mov
mov
jl
negb
mov
imul
aam
dec
std
cli
scas
adc
sarb
decl
ds
inc
sahf
mov
and
notl
push
cmpsb
loopne
and
das
push
sbb
push
gs
mov
in
mov
insb
pop
enter
xor
push
cmp
stos
jae
jle
repnz
sbb
fcoml
lea
mov
rolb
sub
addr16
inc
cmp
add
push
aad
dec
test
nop
xchg
xor
mov
stos
in
mov
sahf
mov
imul
scas
or
add
mov
insb
jg
mov
pop
lret
sbb
daa
jecxz
ja
sti
rcrb
jle
cmc
fisubl
ret
mov
pop
daa
pushf
jbe
mov
jmp
add
or
mov
mov
idiv
mov
mov
add
shr
insl
jmp
lcall
push
out
dec
or
jp
jmp
sub
adc
out
mov
int
int3
roll
mov
das
int3
lret
pop
lret
lods
adc
push
fwait
mov
lret
faddl
sub
push
mov
outsl
push
pop
pop
movsb
dec
add
xor
cmpb
mov
xor
shr
lods
dec
sub
clc
cli
and
out
mov
mov
cmp
push
call
popf
into
cmc
rcl
fwait
test
shll
jp
imul
xchg
mov
cmp
in
adc
repz
lods
cmp
mov
cli
dec
sub
insb
mov
adc
or
mov
ret
test
adc
adc
adc
pop
mov
mov
stos
inc
imul
jb
iret
stos
icebp
daa
xchg
stos
insl
arpl
jbe
push
jno
cmc
repnz
add
push
mov
mov
add
push
cmp
mov
xor
sub
arpl
mov
bound
push
cmp
aam
push
pop
rcr
xor
cmp
xor
ficoms
adc
push
or
mov
lret
push
mov
cmp
jp
loopne
add
sbb
mov
inc
cs
push
int3
fisttpll
push
add
mov
dec
addb
ljmp
rol
mov
mov
popa
cli
int
pop
fwait
mov
iret
fs
push
xchg
fwait
out
pusha
les
aam
sbb
out
or
les
pusha
je
push
jle
lret
inc
js
fs
or
rclb
flds
fsubrp
xor
je
pop
mov
xchg
stc
and
cli
mov
or
mov
outsb
sbb
scas
arpl
sahf
xchg
xor
xor
es
out
lcall
bound
pmaxub
lock
leave
mov
mov
add
mov
in
pop
xchg
lret
inc
xor
stos
xor
xchg
pop
int3
cmpb
lahf
mov
dec
jb
fdiv
add
xchg
mov
sub
mov
jbe
push
test
pop
cld
and
lahf
out
pushf
xor
in
test
jbe
add
stos
xchg
rcrl
and
push
scas
jmp
add
mov
cld
inc
js
xor
shlb
inc
and
push
inc
mov
sahf
cmp
cmpsb
ret
sub
out
stc
aad
frstor
xor
movsl
movsb
xchg
dec
pop
insl
mov
mov
jno
stos
loopne
xchg
scas
dec
in
pushf
fucomip
mov
clc
pop
inc
and
jmp
out
sarl
hlt
mov
mov
cld
fsubl
xor
jp
cmc
movsb
rcrb
in
into
les
adc
into
pop
cmp
cmp
push
fisubrl
fldln2
xchg
pop
fwait
test
xorl
dec
in
push
push
stos
lods
lock
inc
bound
fisubrs
insl
add
dec
pop
in
scas
and
insb
sub
inc
ret
pop
xchg
repz
xor
sub
je
xor
push
cs
movsb
xor
add
aam
call
push
mov
jg
xchg
movsl
or
shrl
or
sti
lock
cmp
lea
dec
jbe
lea
inc
int
cs
in
and
cmpsl
sbb
imul
jg
outsb
cmp
push
fsubrl
shrb
nop
pop
or
repnz
mov
add
pop
mov
arpl
or
inc
out
jp
mov
mov
sbb
insl
cmp
xchg
imul
jne
and
or
and
adcl
xor
xlat
pop
or
xchg
stos
cwtl
arpl
sarl
sub
fldcw
lods
mov
aam
in
adc
xchg
push
sub
cmp
in
push
iret
in
xor
sti
mov
add
or
test
mov
fs
add
jg
xchg
and
lret
fnstenv
iret
decl
adc
fs
mov
dec
mov
outsl
mov
pop
xorb
popf
aad
into
cmp
cltd
pop
add
cltd
push
sbb
shrb
cltd
lret
mov
leave
insb
xchg
sbb
sarl
int3
insb
int
aaa
lds
push
loopne
fisttps
cmc
xchg
jne
mov
add
fwait
les
movsb
jge
mov
shl
cmpsl
inc
dec
cmc
mov
adc
in
ds
daa
inc
jns
outsl
xlat
xchg
sub
pop
mov
mov
xor
cmpsl
jg
and
dec
inc
into
jae
outsl
fs
adc
push
gs
in
int
cmp
jl
add
jg
cmp
inc
push
cli
pop
aad
dec
in
lea
popa
scas
testb
sbb
xor
gs
loop
orb
imul
icebp
fldcw
jecxz
stc
out
pop
in
fdivs
pop
jl
mov
jp
arpl
push
mov
pop
mov
adc
mov
out
lea
out
ss
mov
adc
js
and
cmp
adcb
fstps
fisubs
imul
aaa
mov
popf
mov
mov
or
ret
mov
daa
jmp
jns
push
or
xchg
adc
ret
insl
mov
xorl
outsb
mov
das
imul
ret
mov
jmp
ret
jne
lret
jns
pop
cmp
out
push
lss
in
je
ret
cwtl
sar
add
mov
cmp
xchg
sub
lret
xchg
jnp
cmpsl
ret
out
pop
sbb
es
imul
or
or
jecxz
jae
fcmovne
jnp
jbe
push
add
mov
sub
xchg
sbb
bound
pop
and
movsl
enter
sti
mov
test
imul
pusha
sub
imul
out
jp
out
mov
jae
push
mulb
sbb
sub
mov
push
stos
inc
das
popa
cmc
cmpsl
lods
aaa
out
xlat
xlat
out
test
stos
xor
xor
dec
dec
cmp
jge
pop
sub
add
roll
jne
inc
int
or
sarl
adc
mov
and
cmp
mov
js
aad
and
aas
jecxz
xlat
or
mov
insb
dec
iret
sbb
test
mov
mov
pop
loope
mov
dec
jae
jbe
daa
fdivr
stos
out
loopne
dec
mov
mov
fmulp
iret
stos
or
sub
je
jno
xor
push
adc
xor
push
push
mov
add
push
outsl
sub
inc
pop
inc
pusha
fildll
cmp
push
inc
inc
fstpt
jmp
mov
cmp
in
push
data16
arpl
inc
mov
sbb
sbb
mov
adc
fisttps
push
fnsave
imul
sbb
hlt
jns
and
xchg
inc
push
ret
test
cwtl
xchg
sti
insb
lret
jge
pop
xchg
sbb
xor
cmp
shll
jo
idiv
decl
neg
cmp
aas
mov
fiadds
lods
inc
sbb
hlt
mov
sbb
call
ja
mov
jl
cmp
loop
xchg
sar
push
jle
les
cmp
mov
or
xlat
rcr
jbe
lea
xchg
das
push
push
sti
xor
or
scas
dec
loop
cwtl
or
daa
sbb
inc
les
hlt
and
test
cs
jno
jae
dec
pop
pop
push
xor
es
sbb
pop
pop
jmp
xlat
psubw
push
sbb
jne
mov
push
add
sbb
pushf
fiaddl
xchg
lcall
subb
jmp
fstpl
xor
push
lret
push
jno
jecxz
nop
xchg
fdivrs
js
ret
sub
jnp
les
pop
sub
jecxz
imul
ret
nop
jge
stc
mov
cmp
es
fwait
out
push
test
addr16
xchg
jnp
xchg
sub
adc
mov
sbb
push
gs
out
xor
aas
sub
push
leave
cmpsl
jnp
and
push
add
js
mov
fsub
pop
shr
mov
xchg
xorl
adc
negl
or
xchg
pop
add
call
add
pop
aad
stos
aaa
xorb
mov
pop
dec
rcr
push
xchg
xorps
lea
mov
ficoms
leave
pop
add
lds
enter
shrl
pop
pop
jae
rcr
cmpsl
aam
loopne
arpl
mov
and
lea
out
inc
jg
and
lods
jae
mov
loope
xorb
mov
push
push
ret
xor
sbb
testl
or
stos
rcll
lock
and
fmul
jle
call
out
shl
enterw
shlb
sbb
sub
pop
push
jo
adc
lea
jnp
loop
adc
loopne
repz
jbe
andl
enter
rorb
push
cwtl
dec
jl
dec
xchg
cs
mov
rcrb
sti
bound
cmpsl
sbb
repz
dec
adc
sub
and
pop
dec
fs
lds
cs
cmp
adc
rcrb
rorb
repnz
in
dec
arpl
mov
jb
mov
xor
aam
les
jnp
loopne
in
push
es
xlat
fistpll
xchg
imul
in
sub
ja
out
pop
roll
sub
xchg
jp
lods
sarb
sub
popa
inc
dec
sub
inc
divl
in
xlat
cltd
cld
out
int3
ljmp
add
fneni(8087
aas
xchg
mov
imul
mov
mov
popf
push
test
sbb
std
mov
imul
aam
scas
js
outsl
inc
lods
push
fdivs
jg
sbb
mov
xchg
pop
fidivrs
mov
sub
dec
repnz
aaa
popf
jle
mov
dec
gs
adc
cmp
shl
push
xchg
fwait
add
lcall
inc
mov
pop
imul
and
arpl
stos
mov
mov
or
faddl
sahf
sub
xor
pusha
xor
add
aaa
int3
pushf
push
sub
jmp
cmc
enter
push
xor
mov
add
xchg
js
shlb
in
jb
cmp
std
lods
cmp
sbb
push
les
push
xor
dec
sbb
dec
aas
fnstcw
les
lcall
das
clc
cmpsl
mov
cmp
adc
in
aas
push
jp
cmp
pop
cltd
les
cld
xchg
or
mov
dec
loop
add
cmp
pop
dec
sub
cmp
movsb
out
sub
mov
mov
xchg
sub
in
xorl
xchg
mov
mov
ret
mov
inc
in
mov
jne
cmovae
in
or
in
das
shl
sub
nop
inc
cltd
adc
insl
or
pop
pop
push
movsl
dec
out
inc
std
xor
fstpt
sub
add
test
lea
xchg
gs
push
adc
jno
addr16
out
xor
mov
ficoms
test
mov
xor
cmc
xor
mov
inc
je
push
ds
subb
int3
mov
jnp
imul
mov
xchg
aaa
adc
pop
pop
mov
dec
dec
cmp
mov
mov
or
pop
ja
and
sbb
shlb
mov
std
loop
mov
out
and
loope
fucomp
mov
outsb
mov
jnp
jge
add
push
and
scas
jo
inc
fists
stos
and
daa
orb
pop
xchg
adc
cmp
or
jmp
xor
js
sub
mov
call
std
add
and
mov
pop
pop
repz
and
pop
testb
in
dec
and
inc
pop
mov
push
lcall
dec
stos
cmp
icebp
lcall
mov
ret
mov
into
leave
in
inc
pushf
iret
mov
lret
test
mov
inc
xor
adc
or
dec
push
push
mov
jp
and
test
mov
inc
movsb
out
jnp
xchg
insb
xchg
pop
fiaddl
cld
sub
mov
data16
xchg
and
jae
mov
jns
ret
xor
push
repnz
loope
or
adc
mov
dec
outsl
add
adc
rorl
cmp
xor
xchg
push
leave
divl
and
testb
popf
sbb
dec
out
call
stos
cmp
adc
xorl
loopne
pop
adc
int3
bound
mov
rclb
adc
xchg
add
sbb
mov
pop
idivl
sti
add
dec
dec
scas
pop
lods
cld
test
jge
or
stos
mov
lret
push
lds
iret
and
mov
in
ja
popf
lahf
mov
in
mov
je
jne
mov
pushf
inc
cwtl
mov
aaa
pop
lds
xchg
in
cs
lahf
mov
arpl
inc
cmp
push
adc
cmp
int3
clc
outsb
iret
loopne
int3
repnz
jmp
mov
jnp
mov
sub
inc
int3
dec
inc
mov
repz
pop
shlb
pop
inc
mov
cmc
pop
test
adc
or
enter
pop
sub
jb
gs
or
subb
out
push
xor
scas
inc
leave
subl
lret
fwait
std
jp
jle
mov
push
mov
adc
rcrl
int3
inc
scas
pushf
lds
mov
insb
push
int3
mov
lods
cmp
daa
xchg
aas
pop
fs
inc
mov
pop
push
xchg
cmc
repz
xchg
pop
test
rclb
jae
sti
mov
xor
add
mov
dec
xor
iret
mov
sub
pop
mov
jmp
add
repz
xchg
test
add
cmpsl
mov
adc
ss
inc
imul
jae
in
add
stc
mov
mov
jnp
ret
cmpsl
addr16
xchg
xchg
cmp
test
fisttps
pop
dec
or
jle
orb
lret
sbb
out
mov
and
aas
movsb
pop
jmp
adc
inc
xor
inc
dec
hlt
fnsave
mov
cli
ret
dec
sub
jb
std
das
pop
mov
les
mov
out
ja
mov
scas
mov
aam
sub
leave
or
dec
push
out
push
xor
sbb
ret
loop
mov
das
std
cmpl
adc
jae
nop
cmp
arpl
cmpsl
jbe
pop
mov
outsb
insb
sub
ja
mov
popa
fadd
inc
cmp
cmp
aaa
iret
popf
insb
mov
and
push
and
pusha
rclb
ljmp
lcall
test
sahf
push
jecxz
out
fs
add
ljmp
xchg
push
test
push
mov
ss
pop
lods
imul
popa
cs
lds
xchg
fstp
addr16
pop
lahf
or
gs
filds
ret
into
into
nop
mov
lcall
mov
je
das
cmp
test
xlat
cmp
cmpsb
mov
sar
jmp
mov
cmp
dec
push
aaa
rorb
je
mov
mov
lods
pop
jle
sbb
mov
push
test
cmp
iret
cwtl
stos
pop
xor
cmp
and
xchg
mov
mov
loope
mov
dec
iret
lock
scas
lret
jb
dec
mov
insb
push
inc
cmpsb
lahf
mov
push
test
push
push
xchg
cli
imul
js
xchg
sarb
loop
clc
fisttps
adc
stos
inc
dec
dec
jns
data16
jo
in
fmull
mov
sub
lret
dec
lcall
push
jns
push
test
jae
sub
jl
sub
cmpsl
jle
push
pop
lds
popf
in
sub
int3
mov
xchg
lret
jns
xchg
add
push
insl
jbe
sub
mov
sar
jl
rclb
shrl
cmp
fldcw
mov
sbb
test
lods
mov
jne
in
aad
add
gs
cmp
push
int
dec
shlb
inc
iret
fwait
mov
push
mov
addb
push
pop
push
or
mov
call
and
stc
jmp
push
cs
shll
stos
fwait
xor
fstpt
inc
pop
jne
jae
stos
mov
and
push
enter
add
outsb
in
xchg
cwtl
movsb
icebp
out
push
jnp
scas
repz
add
in
arpl
repz
xchg
lods
stos
loopne
pusha
or
outsb
aam
adc
mov
fdivrl
sub
out
xor
dec
or
int3
mov
cmp
rorl
out
in
mov
je
cmpsl
xchg
out
pusha
jle
add
xor
imul
xor
or
je
push
fldt
mov
mov
frstor
push
or
int3
xchg
mov
and
loopne
push
mov
mov
inc
out
in
pop
xlat
xchg
sbbb
push
pop
push
push
loop
popf
in
enter
or
sbb
sub
daa
faddl
rclb
lods
outsb
xorb
sub
mov
mov
inc
push
outsl
xchg
sbb
xlat
movsb
pop
jmp
insl
mov
xor
aas
xchg
aaa
in
fidivrl
inc
ret
cmp
and
aaa
cmp
subb
test
cltd
mov
pop
push
les
repz
mov
fldl2t
cltd
adc
in
repz
cltd
mov
xchg
xchg
enter
test
adc
xlat
push
push
pop
mov
mov
pushf
or
jp
sbbb
sub
in
inc
int3
lods
sahf
push
rcrb
scas
dec
sbb
push
pop
jmp
pop
jge
imul
dec
sahf
adc
fwait
aas
cmpb
mov
pop
fsubrl
icebp
inc
nop
in
mov
stc
pusha
sti
cmp
jp
xchg
fiadds
aam
das
in
inc
out
cwtl
outsb
and
addl
dec
lret
pop
push
xchg
jecxz
jb
jecxz
jecxz
scas
pop
xchg
inc
out
fisttpl
and
test
xchg
imul
mov
sbb
mov
repz
mov
cltd
dec
xchg
mov
xchg
push
cmp
scas
inc
mov
nop
sahf
inc
ss
inc
xor
scas
in
stos
movsl
movsb
shrl
pop
ljmp
jg
fsubrl
cmp
dec
aas
mov
out
add
clc
mov
fcoml
sub
mov
cmp
loope
ret
xchg
loopne
and
lods
in
adc
in
mov
out
or
xor
ss
mov
loop
out
add
iret
inc
jbe
lock
mov
xchg
out
ljmp
cltd
fmulp
out
outsb
pop
scas
xchg
jecxz
fisubs
lock
icebp
mov
cmp
adc
dec
iret
es
mov
dec
xor
test
mov
decl
xchg
mov
mov
xchg
xchg
hlt
xchg
pop
dec
cltd
inc
mov
adc
mov
lea
lods
xor
bound
imul
ljmp
jno
pop
out
mov
fsubr
aaa
xor
mov
pop
inc
add
pop
xchg
test
pop
add
hlt
dec
div
cltd
lret
sbb
xchg
sub
stos
int3
into
scas
or
ss
lods
sbb
push
inc
jae
ljmp
aam
in
addl
add
aam
sub
daa
ja
pop
jecxz
push
and
add
or
fisttpl
outsb
push
pop
pop
push
pop
push
push
sub
push
std
out
xchg
fs
xchg
faddl
movsb
dec
inc
push
sub
nop
push
cmp
dec
add
por
mov
push
fsubrp
pop
out
mov
loope
sarb
pop
mov
add
lahf
rolb
xor
pushf
fbld
mov
rolb
jg
xor
dec
lock
clc
mov
dec
jns
cli
je
pop
int3
arpl
outsl
repz
mov
add
imul
into
jle
push
sbb
insb
pop
dec
pusha
pop
ja
mov
js
jno
shl
fcomps
jnp
imul
dec
inc
xlat
jo
lret
adc
jns
pushf
es
sbb
jg
int3
andb
or
fst
andl
push
add
or
mov
jle
stos
jo
pusha
dec
cmp
dec
divl
mov
pusha
cmp
xlat
jecxz
sarb
xchg
xchg
lds
mov
inc
xor
xchg
mov
and
inc
in
sbb
xor
mov
fsubrp
int3
popl
jb
jl
std
lods
xlat
ljmp
jmp
iret
aam
xor
mov
test
push
cmp
and
out
and
inc
in
dec
mov
call
stos
rclb
cmp
mov
jo
dec
dec
adc
pop
jo
mov
xor
arpl
sarl
jge
repnz
iret
outsb
flds
adc
add
aad
jmp
mulb
imul
jne
aaa
stc
mov
loope
xchg
scas
cmpsl
and
mov
les
cmp
pusha
inc
psubsw
and
add
int
dec
mov
add
push
xorl
xchg
cmpsb
push
xor
scas
movsl
test
movsl
outsl
inc
xchg
pop
mov
pop
pop
sub
dec
or
dec
scas
sub
pop
jb
stc
mov
popa
jb
adc
rclb
fs
repnz
scas
rclb
or
dec
dec
jb
or
fiadds
jae
mov
mov
popa
loopne
jle
repz
xchg
pop
push
xor
adc
aam
inc
add
xchg
push
cmpl
std
mov
jp
inc
cwtl
mov
lret
pop
pop
fstpt
xor
fisubs
roll
mov
ljmp
pop
out
cmp
or
fdivs
aaa
ds
and
jo
xchg
push
mov
mov
shll
fdiv
cmpl
cmp
inc
and
insl
mov
mov
nop
sbb
cmc
aad
sub
aam
mov
mov
sub
pop
adc
add
or
mov
xorb
or
test
test
push
push
gs
adc
jns
loopne
clc
insl
dec
ljmp
mov
shll
mov
out
jnp
add
scas
adc
mov
and
jle
dec
adc
xchg
inc
pop
jp
in
fdivs
inc
cmpsl
jecxz
lret
dec
lcall
cwtl
or
pusha
push
lock
or
outsl
mov
sbbl
mov
sub
out
xchg
cmpsb
sarb
dec
dec
js
inc
xchg
sub
push
subl
inc
mov
pop
mov
les
adc
inc
roll
xor
pop
lods
pop
push
jo
testl
xor
cmp
lds
mov
pop
push
cltd
xor
or
mov
xchg
dec
mov
xor
mov
jbe
mov
fsubrl
divb
sbb
int3
xchg
inc
gs
sbb
adc
sbb
in
out
xlat
lahf
cltd
dec
xchg
dec
idivl
and
fisubs
test
mov
stc
ds
lock
mov
scas
sbb
add
sub
pop
stc
jle
iret
dec
inc
es
cmpxchg
mov
fs
in
pop
mov
push
adc
outsb
push
test
andl
pop
hlt
inc
pop
mov
sub
adc
inc
push
and
cmp
mov
pop
lret
test
mov
mov
shrb
iret
sbb
xor
jae
ret
sarb
inc
data16
aas
nop
fisubs
jge
jns
pop
jbe
insb
mov
pop
in
and
in
jne
cwtl
pop
fnstcw
mov
pop
xlat
xor
flds
pop
imul
in
in
out
andl
popa
jg
sarl
mov
cld
mov
adc
loope
cmc
fwait
pusha
test
adc
add
int
inc
arpl
mov
mov
cmpb
in
dec
cs
mov
cmpsb
add
dec
out
fidivs
or
dec
fucomip
lea
add
xchg
fisttps
jecxz
out
lock
push
into
push
outsb
inc
adc
xchg
repz
das
inc
inc
jno
je
inc
arpl
lahf
incb
dec
mov
inc
roll
ljmp
int3
aam
sbb
pop
inc
or
xchg
popaw
add
divb
mov
data16
add
jnp
scas
or
inc
ret
sub
fst
loope
adc
int3
or
movsb
dec
adc
jge
scas
fldl
sub
mov
adc
call
inc
add
and
in
mov
shlb
pop
repnz
mov
pop
ret
xchg
movsb
repnz
jmp
pop
ret
pop
cwtl
stos
fmul
divb
xchg
scas
add
idivl
fisubs
dec
mov
fnstcw
pop
test
pop
decb
call
es
add
sarl
and
and
pushf
push
jp
jmp
je
inc
jns
adc
mov
ljmp
ficomps
les
xor
push
pop
insl
push
mov
pushf
lret
mov
mov
sahf
xlat
xor
xchg
jb
test
mov
cwtl
call
dec
add
push
jmp
push
push
push
fidivs
addl
and
jecxz
mov
pop
out
sbb
fistpll
and
jmp
add
mov
cmp
lret
cmp
ljmp
xlat
jb
lea
jecxz
fnstcw
fildll
sbb
pop
sarb
popa
xor
or
stc
ds
pop
mov
rclb
and
xchg
push
shrl
inc
pusha
movsb
lock
loope
xor
imul
jmp
int3
out
sub
cmp
xor
leave
cwtl
adc
packsswb
std
cmp
push
and
sete
push
es
jo
mov
shlb
mov
sub
pop
push
add
daa
sub
xchg
insl
rclb
sbb
and
push
fnstenv
mov
pop
adc
dec
out
jne
adc
daa
and
pop
add
mov
dec
push
out
test
add
inc
shl
mov
orl
sbb
cmp
repnz
cmpsb
hlt
adc
out
mov
mov
cwtl
call
xchg
or
push
out
mov
mov
xchg
icebp
lods
jb
aad
sub
insl
dec
push
ret
cmp
fbld
pop
sub
cmpsl
and
adc
loope
and
int
dec
push
ja
jp
xlat
call
aaa
ret
mov
or
and
clc
fs
out
lods
in
insl
in
pop
xor
les
xlat
push
popf
sar
or
test
dec
lods
mov
scas
in
xchg
mov
xchg
dec
jae
adc
repnz
push
in
dec
imul
sub
loopne
mov
sbb
push
ret
das
push
lods
dec
stos
test
rol
push
add
pop
cmpsl
sub
inc
test
loope
push
xchg
scas
stos
cmp
into
adc
xor
mov
mov
or
sti
sbb
outsl
push
inc
xchg
push
pusha
lahf
inc
mov
dec
into
lcall
daa
or
ret
mov
sub
sub
bound
mov
sub
mov
push
sbb
dec
push
in
addr16
ffree
loope
pushf
xchg
testl
subb
arpl
fidivrl
jle
mov
lret
rcll
inc
mov
jge
clc
cmp
enter
and
dec
pushf
and
fnsave
push
xchg
adc
lods
aam
popf
pop
adc
adc
popa
add
or
mov
scas
pop
cmp
popf
sbb
mov
push
mov
and
cwtl
adc
xlat
jmp
data16
insl
cmpsb
mov
xchg
xchg
cmp
call
shl
cmp
xchg
dec
cltd
xchg
mov
leave
aas
xor
or
cmp
inc
in
or
mov
enter
cs
xchg
jge
inc
pop
sub
adc
cld
notl
repz
push
sbb
int
push
cmp
sbb
outsl
jp
fimull
jl
pushf
jl
or
ja
lea
pop
aas
aas
stos
mov
pop
mov
pop
faddl
push
stc
mov
scas
add
xor
xchg
and
inc
pop
cs
xor
pop
mov
or
xchg
sbbb
fiadds
cmp
bound
lods
lods
jno
incb
mov
in
sub
mov
xchg
pop
clc
or
jae
in
int
inc
sub
gs
mov
fldcw
stc
leave
mov
add
in
push
mov
les
repz
xchg
inc
lcall
inc
push
sub
les
gs
xchg
hlt
sbb
out
adc
cmp
clc
jno
enter
jmp
or
sub
inc
sub
mov
push
data16
scas
mov
jmp
out
and
stos
rorl
sub
cli
mov
pop
and
pop
xchg
notb
sbb
xor
and
int
mov
xor
mov
rcrl
mov
pop
dec
rorl
fcompl
inc
pusha
pop
ret
lret
aad
jb
dec
dec
leave
push
mov
cmpsb
sbb
xor
lock
into
rorb
sbb
movsl
or
lret
or
shl
or
xor
cmpl
int
dec
xchg
arpl
sarb
xchg
gs
cmp
push
pop
mov
test
dec
inc
mov
nop
add
pop
dec
inc
test
addr16
or
jbe
icebp
mov
outsl
loope
jne
pop
cmp
inc
adcb
cwtl
xchg
or
fisttpll
jg
icebp
not
movl
cli
xlat
cmp
call
fmull
mov
das
dec
inc
xor
sbb
mov
jg
mov
push
mov
pop
lods
push
mov
xor
lods
cltd
repnz
xchg
shrl
xchg
adc
jmp
sub
mov
push
adc
inc
js
add
jecxz
cmp
test
lods
xchg
xchg
and
push
loope
and
ja
mov
xchg
mov
pusha
int3
sti
negl
inc
mov
ficoml
ss
mov
dec
fs
sahf
cmp
xor
stos
stos
pop
adcb
cld
push
xlat
aam
and
in
push
mov
jne
or
sub
sbb
xor
mov
xchg
push
jbe
sub
mov
insl
cwtl
mov
gs
adc
iret
dec
out
mov
mov
rorb
inc
lds
mov
and
xlat
insb
fwait
out
and
pusha
adc
jmp
push
push
cmp
loopne
pop
ret
pop
xchg
lahf
movsb
inc
inc
sbb
jbe
and
lea
cltd
sub
popa
jmp
or
cmp
fistl
and
or
pop
mov
mov
sahf
add
arpl
shlb
call
out
and
fmuls
ds
adc
xchg
xchg
insb
rcrb
shr
arpl
jbe
fistpll
fsubrs
cmpsl
or
ss
call
sub
mov
mov
inc
dec
fists
lea
div
push
fsub
sbb
add
mov
mov
movlps
je
mov
or
imulb
jecxz
add
push
aas
incl
imul
or
xchg
movb
sbb
cmp
mov
push
ds
or
lret
scas
pop
xorl
jnp
push
mov
cmp
bound
popf
mov
roll
xorl
add
pusha
mov
fdivl
andb
imul
dec
dec
dec
je
jbe
sub
xor
mov
mov
adc
ds
cmpsl
cmpsl
aas
xchg
or
xchg
aad
pop
rorl
mov
mov
jle
andb
xor
mov
mov
adc
shrb
js
das
ret
popa
dec
cmp
cmc
dec
mov
loope
insb
ljmp
adcb
jge
pop
xchg
cmp
pushf
in
dec
mov
fwait
sub
out
subb
pop
outsb
ljmp
adc
rol
outsb
and
mov
fs
shl
daa
jp
scas
lret
sbb
sub
jb
flds
mov
stos
hlt
aas
cmp
push
push
adc
and
shl
sub
clc
sbb
jmp
lahf
push
jbe
shrb
ret
movsl
sti
iret
mov
ret
mov
ja
inc
xchg
popa
fwait
jbe
in
inc
js
sti
mov
mov
popf
pop
jo
dec
inc
adc
std
push
fsubs
cmc
inc
fidivrl
in
outsb
sub
imul
faddl
adc
popa
xchg
enter
jne
fs
insl
push
push
pop
into
mov
cltd
jo
pop
js
xlat
mov
int3
mov
fs
lods
adc
jmp
push
xchg
xchg
push
cltd
xchg
push
cwtl
cmpsl
push
jae
out
ret
fstl
mov
and
push
mov
loope
jg
dec
fidivl
fs
pop
cmp
jne
icebp
sbb
scas
pop
or
ficomps
inc
push
fs
das
scas
jmp
pop
xchg
aad
xor
inc
test
dec
jnp
out
fsubrp
enter
push
cwtl
data16
jns
cmp
movsb
ret
stos
push
sub
mov
jmp
push
aad
and
mov
movsl
sbb
imul
dec
popa
push
adc
pop
sahf
mov
jmp
repz
ljmp
sbb
cmp
xchg
outsl
test
arpl
sbb
ret
ds
js
push
fistl
mov
pop
pop
add
dec
mov
lods
sbb
ret
ss
je
mov
aas
or
dec
cmc
pop
sub
call
jle
sub
iret
xlat
std
loope
add
lahf
jge
dec
adc
ret
test
repz
insl
sbb
inc
mov
fisubrs
rcpps
cli
xchg
pop
mov
mov
pop
aas
mov
xor
scas
push
and
insb
xchg
sub
jae
mov
push
xchg
dec
gs
mov
and
stc
fildl
es
iret
andl
lds
dec
in
gs
inc
or
jno
mov
js
stos
out
jge
repnz
push
push
sbb
rcrl
jo
jl
stos
adc
stos
xchg
sbb
cli
arpl
ret
push
aad
rcll
test
cmp
push
jns
sub
mov
push
inc
xlat
aaa
test
test
sbb
inc
shlb
aaa
iret
lcall
sbb
jb
fsubp
push
lock
xchg
cmp
mov
shlb
ja
inc
fsubrs
neg
aam
pop
insl
shll
inc
aaa
jae
cmc
sbb
or
add
pop
jecxz
js
pop
mov
cli
stos
inc
fistpll
mov
aad
jp
sarl
xor
into
ret
pop
sti
stos
pop
repz
in
adc
jmp
sub
test
mov
jecxz
add
dec
mov
mov
add
push
push
mov
dec
and
cmpsb
mov
stos
sbb
fisttpl
repnz
lds
repnz
mov
mov
ljmp
or
insl
in
and
xchg
mov
pop
push
push
add
mov
hlt
adc
es
mov
fprem1
push
pop
sub
and
out
push
shrl
pop
cli
fldl
std
aas
jno
test
fisttpl
adc
lret
and
leave
or
mov
pop
add
jbe
push
rclb
cmp
aaa
das
lock
imul
fsin
pop
daa
scas
push
add
pop
addr16
dec
testb
cld
fsub
iret
mov
pop
xchg
mov
scas
mov
inc
and
add
xor
mov
xor
cmpsl
xchg
dec
inc
mov
sbb
mov
ja
outsl
or
sbb
in
xchg
icebp
movsb
add
pop
pop
fsts
mov
or
cld
jbe
bound
push
dec
or
inc
push
out
imul
popf
or
je
lds
test
out
repz
jge
rcrl
test
cmp
pop
subb
mov
cld
sahf
negb
rorb
in
inc
nop
xchg
imul
mov
in
adc
sahf
pop
sub
and
adc
mov
and
ja
movsb
jbe
push
mov
ds
push
out
stc
adc
mov
xchg
dec
cmpsb
repz
aas
dec
ja
push
ljmp
cltd
jns
aaa
test
in
repz
pop
push
stos
inc
pop
lock
hlt
enter
daa
add
push
sub
xchg
pop
loopne
fdivp
mov
test
mov
cmp
cmp
xor
pop
sbb
in
jp
push
cmp
dec
mov
mov
xor
and
add
mov
jbe
iret
or
mov
adc
add
sti
pop
fs
or
and
mov
negl
dec
jl
dec
sbb
add
sti
inc
push
std
adc
jge
test
aad
in
sub
imul
xor
xchg
test
call
stos
popa
jb
test
dec
jp
jno
pushf
movsl
leave
adc
pop
mov
pop
es
inc
jae
je
mov
sbb
arpl
jns
push
imul
pop
pushf
insl
into
test
bound
pop
xlat
mov
mov
stos
adc
icebp
scas
int
cmp
sbb
lds
jae
jecxz
aad
es
aad
lret
pusha
cmpl
dec
insl
divb
loop
cmpsl
push
lahf
neg
clc
lea
sbb
inc
adc
pushf
movb
mov
fstps
cmp
push
bound
mov
aas
jle
dec
testl
xor
mov
out
mov
sub
fwait
xor
dec
std
outsl
xor
lret
cltd
and
mov
jmp
jecxz
mov
repnz
lock
pusha
sahf
xor
mov
mov
dec
pop
fimuls
push
mov
mov
out
pop
sbb
shl
mov
testb
or
inc
mov
dec
push
addl
scas
or
cltd
inc
cwtl
outsb
loope
bound
push
xor
push
xchg
iret
and
imul
xor
jno
mulb
rorb
ret
das
pushfw
stos
mov
sub
jge
outsl
and
adc
cmp
out
leave
or
fsubrl
mov
jle
mov
pop
out
jnp
push
inc
sbb
add
lret
add
adc
test
les
leave
testb
jnp
lods
sarb
repnz
dec
out
push
rorb
sub
lea
adc
mov
repz
pushf
cmp
iret
xor
pop
sbb
pop
sahf
cwtl
mov
push
fists
sti
push
imul
flds
arpl
ds
dec
sbb
mov
int3
adc
push
movsb
and
js
inc
cmp
adc
sbb
lods
lea
and
jae
arpl
xor
jne
sbb
int3
or
sbb
mov
jle
inc
jo
mov
out
imul
rcl
pushf
push
or
es
pop
pop
mov
das
push
xor
rol
dec
sub
out
lods
mov
jbe
out
addr16
out
jge
dec
or
hlt
divl
fldenv
lds
incb
lea
das
xor
sbbb
int
out
jb
aad
and
and
jl
loopne
pushf
lahf
mov
push
cmpsl
cmpsb
cmpsl
sti
movsl
scas
into
or
and
jp
cli
xor
cmpsb
int
xor
fisttps
ljmp
sbb
test
xor
adc
ljmp
or
sub
push
addr16
pop
es
in
jnp
repnz
jge
mov
push
dec
push
in
stc
fistpl
xchg
push
inc
daa
xchg
xchg
mov
push
xchg
loopne
dec
aas
mov
sub
imul
sbb
push
sti
or
outsb
hlt
add
cmp
and
add
push
imul
fs
icebp
cmp
jmp
xor
adc
leave
cmpsl
xor
mov
ret
in
inc
and
mov
cmp
dec
mov
call
pop
dec
jl
fisttpll
ret
in
outsb
mov
xchg
lret
push
fistl
bnd
mov
test
mov
test
adc
call
or
sub
pop
add
xchg
or
xchg
pop
iret
jo
adc
pop
push
pusha
pop
sbb
aam
mov
xor
nop
xor
adc
push
mov
push
and
test
xor
pop
sub
dec
mov
lods
scas
sub
cmp
mov
mov
jne
lods
or
push
js
test
ljmp
dec
mov
add
push
sbb
fs
mov
add
push
data16
xchg
stc
stc
loopne
mov
or
loope
jmp
mov
mov
xchg
jbe
loopne
mov
xor
icebp
outsl
xor
jo
xchg
inc
push
inc
jnp
adc
cmp
or
lods
jecxz
out
loope
jo
popa
pop
mov
data16
jo
xchg
in
out
push
insl
mov
shl
in
inc
shl
lret
pop
sbb
adc
adcl
lret
into
lods
and
shll
aaa
pop
mov
push
fucomi
or
xlat
sbb
dec
popf
mov
mov
jb
repnz
lea
test
les
lods
fadds
dec
push
test
shl
out
fs
mov
mov
shlb
dec
mov
dec
and
fucomi
pop
pusha
fwait
ljmp
mov
decb
rorb
push
push
imul
imulb
inc
hlt
jmp
stos
insb
jnp
shlb
test
dec
repz
nop
inc
jg
jmp
fimull
popa
pop
addr16
push
add
mov
dec
iret
mov
test
xchg
decb
shll
dec
mov
sbb
mov
jmp
scas
stos
call
cltd
cs
mov
leave
xchg
shlb
mov
mov
mov
sbb
mov
sbb
and
sbb
scas
xchg
scas
cli
cmpsl
daa
cwtl
dec
xchg
sarb
dec
add
int3
xor
inc
cli
jecxz
sub
arpl
sahf
jg
lock
push
loope
icebp
incb
and
adc
and
adc
fs
std
std
inc
dec
add
inc
adc
fsts
jae
dec
jns
cmpsl
sbb
fs
add
arpl
mov
cmp
or
xor
pop
loopne
mov
mov
sti
cs
mov
push
sti
xchg
xchg
dec
js
mov
xor
bound
dec
loop
nop
jno
fisubl
xchg
xor
mov
lods
push
cmp
std
leave
inc
in
imul
inc
push
ret
cmc
arpl
int3
sarb
shrl
sbb
aaa
mov
sub
les
cld
and
adc
lret
nop
aad
xchg
imul
dec
imul
loope
cmp
push
mov
pop
jl
mov
out
sbb
pop
jno
out
das
jno
pushf
int
mov
pop
out
fisttps
and
and
dec
mov
ret
outsl
pop
sarl
dec
pop
mov
test
pop
push
shll
or
outsb
std
mov
add
cmp
out
mov
lock
mov
stos
out
rcrl
sub
inc
sub
loope
movsb
inc
add
popl
adcb
loop
lods
xor
mov
pop
pop
iret
ja
iret
testb
imul
js
addl
push
fucomip
dec
mov
pop
push
pop
push
xor
ja
sbb
pop
fs
pop
cwtl
rorl
mov
mov
sbb
lcall
jb
xchg
mov
dec
je
sbb
decl
sbb
cmp
dec
out
fistpl
sbb
cmpsb
icebp
test
popf
xchg
subb
adc
cwtl
pop
push
scas
mov
fcomip
dec
mov
mov
movsb
fmul
xchg
es
pop
or
repnz
mov
push
xchg
iret
out
fnsetpm(287
incb
div
jno
cli
mov
mov
push
mov
or
pushf
sbb
mov
jnp
cmp
lret
in
pop
sbb
xor
in
roll
jno
mov
and
or
add
andb
push
jae
jp
mulb
cmp
leave
pop
xlat
or
sbb
testb
and
and
adcb
push
jp
xchg
push
addb
outsb
mov
jno
add
fnstcw
or
cmp
inc
lahf
scas
ds
out
xchg
icebp
loope
loope
jge
jo
cmp
ficoms
in
mov
xchg
mov
out
xlat
mov
adc
sbb
xlat
mov
dec
inc
out
pop
imul
or
push
subb
xchg
jns
inc
popa
inc
call
dec
push
sarb
dec
pop
ljmp
leave
movsl
rcl
imul
adc
fldt
mov
das
cmpsb
mov
push
cli
pop
or
push
sbb
ror
push
fisttpl
mov
pop
in
cs
jmp
fsubrs
lods
stos
cmc
add
mov
dec
pop
mov
jl
nop
mov
test
push
and
in
mov
xchg
mov
sub
mov
push
mov
ja
shrl
call
mov
daa
mov
xchg
aas
xchg
test
cmp
pop
popa
jbe
adc
cmpsl
mov
xchg
dec
adc
add
pop
sub
aad
mov
xchg
insl
insl
mov
push
lcall
dec
sbb
test
or
push
aam
test
or
push
push
inc
popf
out
mov
in
rclb
or
cmp
lcall
iret
js
outsb
sbb
inc
adc
sti
in
inc
inc
jae
das
orb
mov
mov
pop
movsb
xchg
mov
loop
in
cs
mov
xor
add
sbb
mov
into
mov
cs
call
rclb
stos
push
xor
or
sub
in
in
out
xchg
or
addr16
cld
mov
nop
and
jle
mov
cli
cmp
in
cltd
and
jnp
rclb
dec
jle
fldt
hlt
ficompl
stc
in
movsb
jbe
mov
movsl
xchg
outsb
rolb
sbb
enter
std
adc
aas
aam
cmp
rclb
ljmp
pop
mov
pop
addr16
sbbb
ret
cmp
out
clc
jge
sbb
cmp
ss
jno
imul
out
popf
mov
fsubs
jg
int
cmp
mov
cmpsl
mov
clc
shlb
xorl
pop
test
inc
dec
inc
movsb
fwait
and
push
mov
push
add
sub
stos
mov
mov
lahf
xchg
cmp
lahf
xor
add
jno
and
xchg
insb
cmp
push
xchg
icebp
sub
std
testl
cmpsl
mov
mov
push
jp
xor
sbb
les
into
fstpl
adc
xor
mov
pusha
shll
pusha
aad
iret
cmp
test
inc
push
lods
xchg
movsl
sahf
call
sti
jecxz
clc
mov
add
add
jne
sbb
sbb
fstpl
out
hlt
outsl
sti
and
xor
ret
insb
cmp
sub
lcall
mov
rcl
movb
and
dec
aad
out
icebp
push
xor
jmp
lods
jae
outsb
test
xchg
je
adc
inc
sbb
arpl
inc
out
or
lahf
jno
push
ss
pop
mov
and
jmp
pushf
mov
mov
and
or
cmp
iret
lods
dec
jg
cmp
fsubrl
xchg
adc
cmp
insl
pusha
inc
cltd
je
pusha
mov
out
adc
mov
ret
sub
pusha
adc
rclb
cmp
sbb
sysret
push
dec
sbb
sbb
adc
loopne
rcrb
xchg
test
mov
pop
clc
fstps
int3
jnp
icebp
or
sahf
stc
cli
and
pop
cmpsl
jecxz
add
dec
inc
cmpsl
je
jle
rcrb
mov
das
jmp
jecxz
push
mov
fsubrs
lcall
repnz
jno
sti
inc
xchg
movsb
scas
movsl
cmp
sti
repz
cmpsl
subb
dec
inc
pushf
leave
ds
inc
out
mov
dec
pop
mov
xchg
loop
adc
xor
cmpsl
xorb
orl
outsb
dec
jnp
lea
leave
loopne
mov
ja
ds
push
fsubrl
insb
mov
jae
sbb
inc
cli
xor
push
cmp
xchg
imul
lods
dec
dec
out
cmp
inc
in
cmp
fisttpll
add
gs
or
inc
adc
xchg
mov
sar
in
sbb
xbegin
nop
mov
into
dec
inc
loope
ret
ret
mov
inc
orl
lret
push
jecxz
pop
sub
jnp
xlat
lea
lods
dec
scas
cmp
loopne
add
das
mov
jb
adc
fisubrs
adc
or
popf
xor
or
dec
enter
out
pop
cmp
inc
dec
push
pop
stos
inc
mov
push
dec
decb
aaa
fs
movsb
adc
jecxz
dec
inc
leave
xor
mov
sbb
pop
mov
jl
bound
mov
dec
mov
mov
push
aas
adc
mov
sbb
cmovns
sub
mov
ret
pop
sbb
outsl
ret
outsl
in
insb
imul
rcrl
fs
mov
outsl
repz
inc
jl
mov
xchg
in
je
xchg
dec
popa
sbbl
mov
int3
fnsave
pop
subl
sub
xlat
jecxz
aas
inc
sbb
iret
pop
sbb
xchg
andl
into
push
ret
mov
out
cmp
mov
adc
jmp
roll
inc
rolb
inc
push
or
dec
ja
js
pop
inc
xor
cmpsb
mov
cmp
sub
add
fcomps
sahf
and
out
adc
int3
push
cmc
faddl
loope
lcall
iret
mov
sub
shr
in
popl
mov
stos
and
sbb
cli
lock
push
add
bound
movsb
jecxz
in
mov
repnz
sarl
cmpsl
mov
lret
imul
add
cwtl
xor
repnz
pusha
pop
pop
pushf
mov
mov
mov
add
xor
cltd
cmp
lahf
sarb
xor
test
enter
xor
ja
mov
scas
jle
xor
icebp
rol
loopne
imul
push
insb
mov
and
lcall
bound
in
sub
mov
rcrb
test
test
mov
subl
xchg
dec
mov
push
dec
vmread
hlt
push
imul
and
in
push
inc
in
dec
es
mov
fstps
imul
mov
ret
mov
ffreep
insl
in
fstp
loope
xor
movsb
cli
sbb
inc
int3
xchg
test
lods
dec
mov
cmp
nop
int3
sub
jo
cmp
mov
outsb
lret
dec
les
cli
test
inc
or
push
cmpsb
arpl
sti
add
sub
enter
inc
pushf
sub
pop
movb
cmc
mov
xor
dec
insl
ja
xchg
cli
enter
push
hlt
mov
pop
in
fcmovbe
dec
std
cmp
dec
fwait
shlb
jae
scas
jne
sbb
pop
mov
dec
lods
nop
jnp
dec
mov
jle
adc
push
add
fmuls
andl
pop
pop
adc
or
mov
and
adc
push
das
das
insl
push
outsb
out
cmp
mov
adc
fistl
in
rolb
mov
mov
or
add
mov
lahf
or
xlat
in
fimuls
test
je
fisubl
add
repnz
test
rcll
jp
jnp
punpcklbw
jp
andb
and
and
std
imul
int3
mov
ret
mov
jecxz
stos
ret
imul
inc
or
push
aam
cs
popf
jg
or
aam
cmpsb
shl
or
sti
outsb
test
jp
lret
cmpl
rcll
inc
fnsave
xchg
jnp
imul
cwtl
xchg
cmp
jo
jecxz
add
scas
out
clc
mov
ljmp
fisubl
mov
cmpsb
mov
nop
xchg
cmpsb
mov
rcrb
pop
test
aam
xor
cwtl
nop
sub
adc
rolb
stc
xor
jo
jnp
dec
repz
mov
mov
and
shll
push
xchg
out
ljmp
push
dec
add
imul
frndint
test
sub
mov
xchg
xchg
je
add
sbb
dec
jecxz
ud0
out
das
cs
cmp
test
jp
popf
push
xor
pop
mov
movsb
lds
js
pushf
sahf
lcall
aaa
lods
dec
aam
inc
dec
or
fildl
adc
jecxz
or
mov
fdivrs
stos
clc
sbb
scas
shl
inc
cmp
adc
leave
fsubs
sub
les
lret
div
jg
loop
xchg
ljmp
cmp
lret
add
jne
xchg
inc
test
mov
cmp
or
lret
pop
scas
sbb
jno
adcl
sub
sbbl
add
lea
add
fcomip
xor
mov
out
clc
ds
stc
fs
pop
repnz
and
push
sbbb
mov
into
movsl
idivl
lds
loope
in
xor
fiadds
fsubrs
add
mov
enter
pop
aas
loope
dec
sbb
push
repz
les
lcall
jbe
loop
jmp
adc
mov
ficoml
popa
enter
stos
popf
mov
pop
xor
sbb
jl
sub
test
movsl
sub
mov
fdivl
pop
int
inc
or
dec
inc
sub
shrl
out
ret
pop
xchg
std
std
dec
sahf
outsl
xchg
and
fs
sbb
out
push
imul
push
add
and
ror
push
mov
mov
dec
add
mov
ret
and
xchg
out
nop
jmp
dec
bound
ljmp
sbb
data16
mov
mov
sahf
dec
mov
push
mov
jo
les
inc
cmc
sbb
fwait
popa
cld
mov
daa
cmp
lock
leave
test
andl
mov
repz
inc
test
xor
mov
pop
pop
push
pop
push
mov
pop
pop
adc
fwait
mov
std
dec
lcall
lds
lods
mov
mov
out
inc
enter
mov
jo
xchg
rorl
lock
jl
test
add
adc
mov
xchg
lods
idivb
add
push
pusha
xlat
xor
pusha
adc
mov
cmpsb
dec
add
xchg
scas
test
mov
cmpsb
mov
out
inc
lret
lea
cmpsl
or
sbb
stc
test
repz
dec
icebp
out
cmp
cli
rcr
adc
insl
subb
cld
jecxz
lods
imul
rcrl
inc
insl
call
add
xchg
xlat
fidivrs
jecxz
fisubrl
popf
jno
xor
sarl
lret
jle
sahf
fwait
movb
stc
loope
jno,pt
stos
cmc
nop
aas
pop
lret
mov
push
xor
test
cmp
in
add
mov
sbb
ror
pushf
rep
cli
loope
insb
lods
jge
add
cmpsb
cmp
mov
push
push
dec
rcrl
mov
bound
xor
test
loopne
pop
push
dec
hlt
ja
push
xor
sub
das
cmp
or
shlb
shr
shll
out
enter
or
shrb
and
adc
add
adc
and
ss
mov
mov
jg
push
pop
add
outsb
aad
movsb
in
lcall
or
arpl
cmpsl
popa
in
rcrb
cltd
jp
fsubl
daa
dec
adc
dec
inc
xorl
cltd
gs
jno
cli
sbb
dec
out
fs
xchg
xor
mov
xor
jle
imul
scas
ret
pusha
cmpsl
fmull
push
dec
je
xlat
rorb
cmp
jbe
test
pop
popf
add
mov
fstpt
repz
add
ret
xchg
sub
pop
int3
xchg
mov
loopne
mov
and
bswap
push
aam
mov
insb
pop
mov
cmp
jo
mov
fs
or
in
sub
fwait
adc
popf
add
dec
inc
stos
test
mov
cli
mov
jae
pop
ja
cmp
int
je
xchg
mov
dec
xlat
fnstsw
mov
cmp
cmp
aas
pushf
jmp
or
jecxz
jns
push
nop
add
in
fdivl
inc
pop
pop
pop
mov
aaa
outsb
jae
mov
mov
mov
push
jecxz
mov
lret
ret
xchg
pop
sub
sti
push
test
movsb
iret
pushf
shl
add
xor
and
xchg
pop
insb
sbb
scas
inc
pop
scas
inc
mov
push
ljmp
pop
fwait
call
sbb
fbstp
icebp
mov
lea
sub
mov
or
push
pop
aam
and
pop
outsb
mov
dec
lcall
xchg
movsb
loopne
and
sbb
fldt
xchg
sti
hlt
test
or
cmp
push
xchg
or
mov
cli
daa
mov
or
fbstp
push
pop
cmp
push
lret
out
add
stos
sbb
das
enter
add
fisubrl
aam
cmp
mov
and
mov
push
repz
in
pushf
cmp
hlt
je
xor
mov
add
lahf
pop
mov
jo
inc
sub
push
popa
adc
cld
out
mov
mov
xchg
ds
pop
jg
test
xchg
in
mov
mov
pushf
cltd
pop
shll
inc
cmp
pop
jle
sbb
aaa
repz
ret
out
mov
fstp
out
lds
adc
or
pop
or
imul
in
jge
and
es
mov
and
int3
xchg
mov
movsl
call
fcmovb
test
lods
popf
repnz
jno
and
inc
fs
add
sub
mov
cmpb
ret
cmpb
xchg
adc
pop
out
stos
popa
rorb
movl
stos
mov
stos
nop
sub
js
dec
lahf
dec
cmp
add
add
nop
or
cmp
or
xchg
pop
push
arpl
hlt
xor
mov
jne
mov
mov
cmp
gs
mov
jle
jo
add
popf
nop
enter
int3
pop
push
das
jo
mov
sub
in
mov
lcall
mov
ljmp
dec
cli
xor
sbb
and
push
xor
movsb
jg
cwtl
es
push
adcl
adc
lock
shl
adc
loope
std
mov
push
mov
ret
jo
mov
jl
data16
jl
pop
stc
cmpsb
int3
rol
mov
jle
cmp
mov
cmc
inc
stos
and
lret
aam
and
roll
push
xchg
stos
inc
mov
mov
shl
adc
iret
xchg
jecxz
inc
mov
int3
xchg
stos
enter
lods
loope
icebp
data16
adc
pop
mov
lret
sti
cmpsl
add
dec
and
mov
xchg
lods
enter
cmp
mov
adc
test
sbb
popa
xchg
data16
in
sub
mov
int
dec
mov
pop
rclb
cld
nop
cmp
cwtl
xor
jle
cmp
sub
stc
sub
mov
popl
jl
pop
lods
scas
sub
dec
fmuls
add
test
pop
push
mov
fidivrs
scas
mov
mov
mov
push
xchg
pop
mov
flds
jne
sarl
cmp
ret
rcl
pop
icebp
add
stos
fadds
not
xchg
mov
dec
movl
insb
jno
imul
jle
mov
and
aam
mov
mov
xchg
or
mov
push
cmp
iret
pusha
and
int
iret
xchg
xchg
aam
cmp
or
cmp
cmpb
negl
ror
inc
dec
cmp
or
ror
popa
pop
adc
ret
xchg
stos
and
adc
subl
aas
push
push
mov
in
inc
loopne
pop
pop
cmp
pop
add
mov
test
pop
lahf
mov
movsb
pushf
and
imul
jno
arpl
pusha
xor
in
pop
es
lret
xchg
jb
jg
mov
mov
test
mov
adc
adc
cmp
loop
mov
pop
mov
movsb
jne
and
shll
xchg
inc
sub
push
movsb
lds
push
or
cmpsl
and
pusha
popl
pop
out
mov
push
shlb
fwait
lea
loopne
outsl
js
jl
add
xchg
sahf
dec
mov
test
cmp
out
adc
leave
cltd
xor
data16
xchg
mov
mov
lea
cli
xchg
push
pushf
jl
icebp
push
adc
js
fbld
fstps
ja
rcll
cmpsl
lcall
xchg
jo
and
cmpsb
shll
pop
adcb
cwtl
dec
pop
ret
enter
push
fidivrs
and
mov
jno
test
ss
mov
outsl
and
ss
sub
roll
cmp
lret
xor
pop
popa
inc
mov
mov
pop
and
test
nop
sub
adc
jnp
pop
enter
lods
and
pop
shll
das
aas
dec
rcrb
and
pop
pop
sahf
fisttps
mov
ds
add
int3
clc
adc
sub
sub
loope
imul
movsb
sarb
or
fs
fdivrs
push
xchg
inc
add
in
faddl
cwtl
adc
call
cmp
or
out
jle
in
sahf
jb
push
fs
leave
or
in
push
inc
xor
cmp
arpl
and
push
imull
add
jmp
dec
xchg
sub
inc
popf
mov
popf
imul
xchg
xor
imul
jne
dec
mov
xor
mov
push
insl
xor
ror
pop
xor
iret
scas
mul
sahf
add
outsb
dec
hlt
pop
enter
mov
jne
push
mov
and
pop
test
in
mov
pop
sub
std
sbb
sbb
bound
jno
arpl
jg
sub
inc
mov
inc
lods
mov
sbb
stos
notb
jg
pop
add
aad
cmpsb
ss
cmpsl
ret
leave
xchg
nop
pop
jp
mov
add
mov
xor
enter
pop
pop
push
fcmovne
out
cmp
xchg
lea
inc
mov
pop
xchg
pop
add
lds
or
scas
fprem1
subl
test
fstps
or
jp
test
dec
pushf
cld
fsubrs
xor
stc
add
xor
pop
addr16
pushf
and
or
xorl
leave
sahf
add
adc
xor
fdivrl
imul
push
aam
and
inc
push
into
mov
cmpsb
test
inc
mov
in
aam
and
js
push
xchg
mov
dec
dec
add
fwait
dec
xchg
idivl
jmp
call
jle
and
mov
imul
loop
pop
sub
shl
xchg
outsb
imul
mov
cmp
jle
jg
pushf
or
ja
add
hlt
sub
pop
xchg
xchg
out
jecxz
out
loop
mov
and
mov
and
lock
push
pop
cmpsl
jge
inc
aas
mov
adc
movsb
inc
or
sbb
or
lods
mov
mov
fcomps
and
xchg
insl
cmp
data16
cmp
repnz
jl
insb
cld
in
push
and
int
lds
mov
dec
sbb
mov
movsl
mov
inc
xor
xor
adc
cmpsb
add
push
pop
std
jnp
cmpsl
lret
stos
leave
add
jo
push
push
pop
subb
hlt
pop
cli
adc
ljmp
mov
clc
pop
xor
inc
sti
push
inc
sbb
inc
cmp
mov
into
fisubl
clc
addr16
jae
ljmp
jno
loop
cmpsl
cmc
and
bound
cld
xorb
pop
fs
mov
mov
sahf
mov
cmp
mov
sub
clc
lret
dec
cmp
jo
xchg
xor
and
add
jl
cld
mov
insb
xchg
fbstp
mov
cli
repz
jne
fiaddl
or
mov
pop
ficomps
inc
ret
sti
pop
dec
jle
cmp
jae
mov
jp
mov
dec
arpl
loop
xor
enter
push
cmp
mov
push
pop
mov
and
sbb
loopne
push
push
push
xor
xor
mov
cs
pop
push
das
lds
push
ret
rclb
or
mov
push
jecxz
cmp
paddusb
and
sbb
rcrb
dec
push
add
mov
xchg
stos
addr16
daa
shll
mov
jmp
out
or
and
mov
or
dec
shl
jnp
mov
leave
jb
or
mov
aad
cltd
jp
sbb
out
roll
cmp
js
xchg
fs
in
bound
out
scas
loopne
push
xor
mov
push
outsb
jnp
inc
fwait
je
xchg
dec
das
push
iret
cwtl
xchg
xor
push
adc
jb
shlb
fisttpl
mov
loopne
mov
push
pop
inc
in
xor
or
test
pop
mov
adc
or
jmp
mov
jmp
aas
push
ret
jp
dec
jp
outsb
mov
aam
std
decb
jno
pop
mov
nop
daa
mov
mov
mov
and
xor
ljmp
inc
xor
pop
cmc
jle
neg
out
outsl
outsb
cmp
add
rcrl
push
mov
adc
inc
add
js
sti
push
mov
adc
push
fldenv
stc
xchg
xchg
xor
shll
xor
and
repnz
and
sub
aas
mov
sbb
cmp
lock
mov
insb
stos
inc
push
sbb
pushf
mov
sahf
sbb
jecxz
icebp
addr16
iret
mov
mov
movsb
jmp
hlt
repnz
ja
popa
dec
push
inc
inc
jle
push
ret
out
sbb
adc
mov
ror
mov
nop
das
ret
lock
xlat
inc
mov
ret
adc
sbb
test
rclb
pop
adc
imul
aam
push
sbb
xchg
push
cmpsb
cmpsl
xor
lock
mov
adc
sub
clc
les
popf
mov
xlat
pop
mov
xrelease
fisubrl
andb
sbb
fdivrs
cmpsb
movsb
or
lahf
mov
mov
push
inc
push
test
lret
arpl
aad
jg
xchg
adc
cwtl
stc
adc
jbe
pop
stos
in
jge
xor
test
insb
test
iret
xchg
cmp
popa
cli
jb
orb
cmp
or
and
sbbl
mov
orl
jns
out
adcb
cld
xchg
inc
mov
shll
iret
sbb
clc
aaa
fnstsw
iret
insl
scas
push
dec
lcall
xor
jl
pop
sbbb
add
mov
and
xlat
sbb
jmp
imul
lcall
aad
mov
ds
dec
or
mov
xchg
push
call
sbb
and
clc
push
xchg
std
pop
mov
sbb
es
xchg
push
jnp
jge
test
loop
cmp
dec
cs
lock
and
sub
cmp
outsl
nop
popl
movsb
stos
hlt
mov
xlat
mov
sub
je
and
pop
mov
aad
jnp
or
mov
dec
movsl
xchg
pop
sub
inc
adc
cmc
dec
fwait
sub
cwtl
add
mov
pop
jp
dec
mov
cmc
sbbb
rorb
insl
jo
xor
sbb
call
movsb
int
cmp
lcall
pop
icebp
adc
cs
pop
jne
ret
into
pop
test
frstor
scas
repz
loopne
mov
adc
cmp
mov
loope
inc
mov
adc
scas
cmp
ja
aaa
not
ror
mov
cmp
jecxz
stos
pusha
fstps
sub
add
cmp
add
xchg
adc
cwtl
bndstx
in
aas
inc
mov
mov
jo
test
xchg
ret
mulb
vpcompressb
ret
arpl
cmp
lds
movsl
pop
lds
daa
ds
pop
lahf
and
fwait
negb
push
adc
test
xor
or
in
xchg
daa
pop
cmpb
sub
pop
dec
push
cmc
cmp
subl
mov
fisttps
fstpt
not
insl
or
cmpsl
adc
ret
aam
nop
jb
push
out
xlat
test
clc
call
push
lods
xchg
add
cwtl
sti
fldl2e
mov
aas
mov
call
xor
inc
lret
add
xor
push
jb
xchg
lahf
adc
loop
mov
cmp
nop
mov
sub
icebp
dec
add
sub
xor
in
inc
cmp
out
mov
cmp
jl
push
fwait
mov
fwait
mov
mov
sbb
sbb
divb
mov
pop
sahf
std
pop
push
mov
jb
add
stos
pusha
or
cs
xchg
rorb
add
rorl
test
test
xor
stos
or
leave
dec
cmc
mov
jns
or
fisttpl
xchg
lods
fs
enter
adc
jl
pop
sub
xlat
xchg
xor
imul
inc
mov
jmp
inc
sub
pop
lods
popf
cmp
adc
and
sub
insb
pop
lcall
sub
push
aam
mov
cmp
ja
sub
mov
inc
sub
fisttps
push
mov
inc
push
jae
dec
lahf
mov
xor
aas
sbb
lret
inc
cwtl
jns
mov
fistps
jae
xchg
sbb
cmp
push
xorb
or
rcrl
mov
jnp
add
cwtl
cmp
test
and
pop
sbb
jecxz
pop
std
fisubl
jo
add
mov
pop
xchg
mov
ds
das
xor
punpckhbw
std
cmp
scas
jno
mov
testl
les
popa
sub
inc
lock
stos
popf
std
stos
cmc
jmp
push
jp
out
jg
mov
pop
out
push
scas
sub
pop
inc
loop
jne
aaa
movsl
js
sbb
pop
faddl
jmp
jp
bound
fs
pop
loopne
mov
out
cwtl
mov
mov
mov
outsl
dec
pusha
jle
lods
sbb
lret
mov
popf
add
inc
mov
pop
sahf
fidivs
sahf
mov
aas
sub
push
nop
adc
dec
aaa
mov
in
xor
cli
mov
sub
mov
xchg
fnstenv
and
ljmp
mov
or
mov
xor
sub
out
pop
nop
imulb
out
and
mov
mov
sub
in
or
adc
push
mov
aad
cmp
jp
dec
xor
xchg
jnp
stos
dec
add
aas
xchg
pop
gs
jae
mov
mov
push
or
mov
cmp
out
js
repnz
jno
xor
out
fimull
fldl2t
cs
push
mov
inc
sbb
in
push
les
pop
enter
push
sti
stc
stos
dec
adc
in
aam
stos
lods
or
push
inc
mov
adc
cmp
pusha
cmp
ss
loope
inc
push
icebp
fcoms
xchg
testl
xor
cmc
lcall
mov
push
jge
in
testl
push
mov
xchg
mov
addr16
and
daa
push
es
fsubl
jecxz
dec
rcrl
dec
jno
ret
push
fistps
pop
jg
dec
push
sub
mov
movsb
dec
inc
lock
repz
enter
hlt
mov
inc
mov
rol
mov
in
sti
imul
pop
cmpsl
pop
sbb
aas
jo
adc
pusha
jmp
cmp
mov
jne
int
mov
cmp
fwait
movsl
fimuls
xor
jecxz
cmpl
test
and
arpl
je
jp
adc
sbb
mov
and
jb
insb
paddsb
push
pop
into
repz
into
and
shlb
pushf
sbb
push
push
inc
sbb
lds
adc
stos
iret
push
lahf
stc
push
pushf
push
add
aad
into
mov
push
push
mov
mov
dec
jae
jnp
cmp
ja
and
pop
push
mov
sub
push
add
insl
cltd
test
ljmp
shlb
pop
sub
cltd
push
adc
ljmp
rorb
jb
dec
push
imul
popf
jle
push
xchg
cs
dec
xchg
std
test
mulb
and
aam
rep
sub
cmpsl
mov
add
cmp
jo
xor
out
and
dec
bound
push
lret
cmpsl
insl
sub
shlb
in
dec
aas
js
sbb
decb
mov
dec
test
pop
adc
les
dec
add
inc
fcoml
dec
shl
lods
jb
push
cmc
das
mulb
jae
or
fnstsw
fcompl
test
bound
sub
add
push
lahf
pop
movsl
loop
cmp
mov
lock
loopne
imul
inc
mov
xlat
add
call
outsw
jbe
pop
vmovdqa
adc
jmp
out
push
lret
test
mov
add
jle
jmp
shrb
movsl
add
inc
mov
mov
arpl
mov
adc
and
fsubl
and
and
pop
push
xlat
popa
movsl
mov
movsb
push
and
dec
sbb
add
outsb
shrb
or
das
iret
loope
push
ljmp
icebp
clc
add
iret
xor
les
inc
cmp
xchg
repnz
xchg
orb
ret
cmpsl
jb
scas
mov
cmp
cld
inc
and
mov
imul
mov
lds
out
jmp
pop
add
bnd
jle
lahf
sarb
inc
xchg
jns
xchg
push
cld
cltd
std
sub
lahf
or
adc
cltd
je
xlat
in
pop
add
jmp
call
or
jecxz
test
mov
or
fstpl
push
cld
cmp
loop
xlat
popf
and
dec
sbb
mov
cmpsb
mov
dec
fiadds
sbb
push
and
adc
mov
inc
pushf
arpl
ret
xchg
mov
xchg
mov
mov
inc
jg
loopne
fistps
pop
mov
in
xchg
sub
mov
sbb
cli
into
xchg
sbb
aas
adc
loop
pop
repz
inc
popa
dec
ja
in
cmp
mov
stos
fldcw
mov
mov
popa
pop
sub
mov
ret
mov
cs
cmp
xchg
movsl
out
pusha
cltd
xor
mov
js
push
cmpsl
xor
fists
inc
lcall
and
sub
rclb
sub
aas
imul
sbb
cmp
loopne
imul
mov
dec
mov
out
xchg
sbb
in
xor
mov
and
rcrb
lcall
or
fs
in
lcall
xchg
hlt
push
out
imul
sbb
mov
out
push
bound
sub
cmc
mov
loopne
ficompl
icebp
loop
insb
je
adc
test
fs
mov
cmp
rcrl
xchg
add
xchg
lock
fwait
clc
jne
insl
rorb
daa
push
and
pop
jno
sbb
sbb
je
frstpm(287
pusha
dec
lcall
dec
int3
mov
lahf
js
subb
push
xchg
test
and
pop
pop
push
mov
cmpsb
mov
mov
lods
pop
dec
ret
cltd
or
push
ficompl
push
int
jns
jl
rcll
mov
sbb
mov
push
add
push
in
push
mov
outsb
inc
mov
push
xchg
int3
xchg
or
ret
adc
pop
jle
cmp
stc
adc
stos
sub
in
ret
arpl
fstps
xchg
xchg
inc
cmp
sbb
cmpsl
inc
dec
sbb
loopne
mov
mov
xor
inc
loope
dec
or
push
int3
sti
sub
adc
mov
cwtl
mov
imul
rcr
scas
mov
xchg
mov
jle
scas
inc
pop
xor
cltd
leave
out
xchg
push
xor
stc
insb
arpl
and
scas
adc
add
std
sahf
xchg
lea
imul
jl,pt
stos
xchg
mov
rorb
mov
enter
cltd
and
add
bound
cmp
ret
jl
stos
lea
adc
cmpsl
push
jno
jne
fdivrp
insb
pusha
pop
mov
and
jb
sahf
mov
jmp
test
dec
das
sti
sbbl
cmpl
xorl
cmp
jae
cmpsl
inc
add
enter
sbbb
cmp
mov
aas
aam
dec
push
sahf
pop
sbb
inc
roll
mov
mov
add
lcall
mov
mov
loope
or
test
cmp
ficoms
adc
cmp
cwtl
cltd
mov
fildll
dec
cwtl
leave
rclb
mov
in
clc
cmp
insl
fldz
cmp
cmc
jnp
outsb
aad
cs
or
int3
cltd
push
cmp
mov
xchg
push
jmp
addl
inc
mov
dec
gs
mov
pop
push
push
mov
dec
mov
rcrl
ss
dec
sbb
leave
icebp
loope
cmpsl
pop
rolb
pop
sbb
inc
push
imul
push
pop
jl
jae
fwait
sub
and
xor
or
sbb
pop
adc
jns
jmp
or
js
cmp
add
popa
out
xchg
dec
jp,pn
mov
leave
fmull
in
fs
push
jo
mov
push
data16
enter
mov
enter
inc
push
jns
mov
sub
loope
lock
sbb
es
jg
imul
jo
es
ret
add
jle
out
xchg
sbb
out
stos
cltd
or
mov
lea
xor
stos
or
cltd
pushf
push
call
jb
sub
fbstp
aaa
mov
push
sbb
jns
fwait
cmp
scas
out
clc
fsub
push
pusha
jns
cmpsb
push
lods
jmp
push
xor
data16
push
and
into
lcall
imul
push
decb
push
lods
js
xor
rcrb
cmpsl
inc
nop
sub
in
mov
lds
adc
adc
push
movsb
ficoms
inc
icebp
mov
jbe
or
js
cwtl
sbb
aas
push
hlt
lret
es
and
mov
leave
cli
mov
sbb
jp
xchg
fsubr
fmull
mov
sahf
mov
das
gs
xor
scas
stc
jl
mov
sub
mov
push
nop
or
sahf
shl
rcl
dec
or
cmp
lea
jge
or
jo
fs
xor
sub
jb
jnp
dec
adc
xor
or
fnstcw
lret
test
xchg
jae
das
ljmp
hlt
ret
insl
stos
insl
cwtl
out
je
fidivrs
pop
leave
test
lock
mov
mov
or
jecxz
inc
xchg
inc
jecxz
cltd
sub
pusha
pop
inc
out
lcall
and
cmp
pushf
jne
out
push
in
mov
xchg
test
ljmp
int
cmp
aaa
add
pop
mov
inc
pop
xor
cmp
shrl
stos
lea
repz
mov
push
out
divl
mov
call
std
scas
dec
push
cs
das
jae
movb
addr16
xchg
test
arpl
mov
fnstenv
cmp
sahf
or
sub
in
cmp
sbb
push
notb
popf
in
ljmp
and
gs
inc
adc
xchg
jle
or
sub
xchg
aam
push
jbe
call
dec
pop
adc
sub
pop
in
iret
jno
xor
mov
jge
mov
dec
in
adc
shl
pushf
cmp
dec
xor
aaa
mov
mov
in
add
lcall
notl
clc
bound
stos
ljmp
data16
insb
push
jo
sahf
xchg
xor
mov
adc
lock
popa
fsubrl
add
leave
and
xchg
push
popa
xorb
adc
pushf
push
loope
loopne,pn
test
sub
cli
dec
push
adc
test
cmp
bound
xlat
mov
cmc
cmp
adc
or
jl
filds
sbb
xor
xor
dec
mov
jl
adc
inc
pop
jno
popf
push
push
faddl
jge
lahf
adc
pop
mov
out
dec
shll
into
sbb
xchg
xchg
xchg
int3
mov
fstpt
loop
arpl
cmc
add
test
mov
adc
pushf
dec
dec
add
cmpsl
push
das
les
arpl
xor
xchg
sbb
outsb
or
test
add
xchg
sarl
mov
or
ss
nop
fists
pushf
sbbb
arpl
and
incb
and
lods
dec
in
add
aas
bound
sub
pop
sub
rorl
mov
push
cmc
sbbl
push
into
addl
int3
arpl
test
push
dec
mov
shr
cld
cltd
jecxz
push
imul
pushf
xor
cmp
push
jmp
push
cwtl
aam
hlt
sti
add
call
iret
mov
pop
xchg
ret
adc
fwait
push
fmulp
aad
add
pushf
lret
hlt
xchg
shr
cwtl
movsl
aas
lcall
mov
or
rcrb
cmc
mov
add
andl
movsb
inc
or
inc
cmp
mov
movsb
cmpsl
call
dec
std
loopne
pop
cmp
add
sbb
addr16
dec
push
adc
test
dec
xchg
xchg
add
jp
inc
jbe
lret
mov
xchg
adc
lret
adc
test
into
pop
sarl
lret
hlt
dec
sbb
dec
mov
cmpl
lock
cmp
and
add
or
sbb
inc
movsl
bndldx
push
ret
icebp
mov
jecxz
inc
leave
fcomps
push
idivl
inc
jle
cmp
sarb
or
pop
push
shrb
mov
jmp
sub
dec
pop
dec
sub
xchg
out
aaa
stos
xor
pushf
inc
jecxz
push
mov
rorl
outsl
aas
sub
lds
cmp
repz
xor
fwait
in
aaa
loope
push
in
notb
mov
negb
sub
out
outsl
and
sbb
and
enter
adc
pop
inc
sub
mov
les
mov
mov
outsb
loope
pop
pusha
jns,pn
mov
fwait
inc
mov
out
pop
adc
jge
mov
pop
cwtl
iret
fsubr
inc
sbb
add
jns
add
and
sub
inc
mov
xchg
and
jmp
jns
stc
enter
jg
data16
push
ss
pop
mov
inc
add
adc
add
and
or
lods
lret
pop
movsb
mov
outsl
sub
jmp
dec
mov
inc
xchg
dec
gs
lods
addr16
pop
xchg
daa
xchg
push
lods
jno
lahf
test
gs
cmpsl
fbstp
add
in
stos
inc
add
js
cltd
aaa
or
and
incl
xchg
xor
inc
sub
scas
jmp
jl
mov
sub
in
pop
sbb
test
xlat
les
adc
or
imul
bound
stos
negb
clc
push
enter
xor
in
rorl
add
gs
int3
out
sbb
dec
or
daa
mov
out
call
xor
dec
cmp
movsb
and
lret
fstl
pushf
inc
mov
xorl
sahf
or
add
cmpsl
mov
dec
daa
xchg
push
lds
sbb
pop
sub
cmp
stc
cmp
push
jg
xchg
jb
adc
lock
stc
or
push
sahf
pushf
popa
lods
std
mov
sub
rclb
sbb
pop
xchg
lea
sbb
mov
push
jb
into
and
or
xor
and
lods
push
js
cmp
jg
cmp
jle
lcall
repnz
jns
dec
inc
push
negb
mov
and
xor
push
cltd
push
enter
nop
int3
or
jo
or
int
dec
xor
pop
ljmp
lret
mov
push
mov
scas
insb
and
mov
aad
std
sti
outsb
icebp
daa
adc
mov
sbb
lcall
sub
dec
out
push
in
imul
cli
in
loopne
jbe
ds
arpl
xchg
sub
pop
lods
mov
mov
fbld
adc
arpl
adc
mov
sbb
repz
data16
mov
mov
es
cwtl
scas
pop
lods
mov
sub
fsubs
int
sahf
pop
cwtl
fadds
test
mov
dec
int3
hlt
enter
pop
push
xchg
fcoms
push
es
and
int3
xor
mov
insl
lret
rclb
stos
pop
jmp
loope
push
mov
dec
aam
dec
ljmp
mov
out
int
sub
lcall
xor
pushf
fs
mov
push
and
sbb
cmp
pusha
mov
mov
in
ja
repz
xchg
cmp
sub
push
cld
push
mov
ds
cmc
ds
adc
sti
in
sarl
nop
jp
mov
mov
add
lret
jge
mov
lret
add
xchg
jp
jge
xor
scas
mov
out
pop
push
mov
push
mov
push
jecxz
enter
gs
adc
aaa
or
mov
cmp
nop
lds
cmp
mov
adc
pop
fsubrl
jmp
scas
std
xor
xor
xchg
pusha
nop
dec
cmp
push
imul
jnp
std
pop
aas
push
arpl
rcr
inc
fwait
mov
js
jno
orl
enter
mov
xor
int
aas
xchg
pop
jl
int3
es
push
dec
fldl
out
fwait
cmp
clc
jae
xchg
popf
bnd
cmp
das
scas
pop
pop
mov
lods
jb
pusha
mov
insl
push
sbb
jl
sub
mov
sbb
js
int3
shl
rolb
negl
fsubrs
adc
flds
cwtl
sub
jmp
in
pop
cmp
sahf
insl
imul
sub
std
mov
cli
add
xchg
insl
movsb
leave
out
nop
movsb
ret
ja
lock
sti
imul
mov
mov
lods
dec
fwait
sbb
std
insl
xor
add
popa
xor
je
mov
mov
or
into
hlt
mov
pop
cmp
psllq
jecxz
sti
aaa
pop
pop
cmpsl
lds
dec
ljmp
sub
or
out
jl
mov
inc
adcb
test
call
or
mov
mov
div
xchg
aad
sahf
ret
cltd
mov
push
cmpb
pop
jb
mov
inc
pop
das
sub
mov
jl
adcb
and
ljmp
cmp
push
xlat
xor
in
test
sbb
pop
lret
jl
push
out
outsb
sbb
data16
pushf
pop
cmp
outsb
sub
adc
test
inc
mov
aad
adcb
in
add
imul
jnp
out
jno
ret
mov
insb
nop
enter
push
jge
scas
stos
xchg
das
ss
pop
mov
loope
aam
dec
xchg
aas
stos
add
mov
fwait
or
gs
mov
mov
bnd
add
lret
mov
sub
imul
adc
add
push
mov
sbb
in
neg
fistpl
dec
test
movsb
cmc
mov
imul
push
push
push
jns
es
and
leave
std
test
lcall
loopne
in
popa
lret
clc
dec
mov
inc
cmpsb
stc
loop
pop
ja
movsb
mov
je
cwtl
cli
cmp
and
sbb
rcrb
bound
or
sub
stos
enter
hlt
mov
mov
outsb
sbb
push
xchg
movsb
and
test
out
and
inc
push
outsl
mov
mov
adc
pop
and
jno
mov
sbb
add
cmp
jnp
int
das
pop
adc
les
pop
inc
sarb
imull
mov
out
jg
inc
sbb
std
inc
sub
aas
pop
gs
lock
mov
test
or
fucom
aam
out
arpl
push
pop
dec
xchg
xchg
in
sbb
dec
stos
mov
test
dec
faddp
mov
popl
dec
or
cmc
xor
jbe
stc
decl
or
test
add
xor
in
cmp
insl
pop
lret
xlat
jb
rorl
dec
shll
ftst
xorb
mov
xchg
pop
adc
call
movsb
out
test
jns
ss
mov
mov
dec
push
imul
fstpl
cmpl
mov
les
bound
mov
sarl
xor
xacquire
xchg
int3
jbe
mov
pop
adc
adc
mov
inc
adc
pop
cmp
jmp
mov
lcall
mov
subl
mov
bound
lret
sbbl
outsl
cmp
mov
sbb
sub
gs
loopne
sub
sub
and
data16
lcall
ja
mov
inc
je
in
mov
cmp
or
dec
fs
adc
nop
hlt
inc
lahf
call
jne
scas
mov
nop
push
dec
iret
lock
xchg
adc
aas
data16
mov
scas
push
sarb
mov
sub
scas
sub
xor
cwtl
repnz
xchg
std
push
dec
push
fwait
cwtl
ds
cmc
fsubrp
pop
mov
dec
js
iret
jl
in
sbb
out
mov
mov
mov
sub
add
sub
xchg
cmp
and
fadds
or
push
add
jmp
mov
dec
jo
and
sbb
js
sub
imul
jo
loope
aad
jmp
fcomi
pop
in
and
and
inc
mov
cmp
outsb
jne
xchg
sbb
cld
loope
add
cwtl
lcall
jb
mov
push
scas
imul
mov
jae
add
pusha
arpl
xor
pop
cmp
enter
mov
sahf
push
mov
mov
sub
and
pop
cli
dec
pop
in
scas
jne
mov
sub
outsb
ret
mov
dec
test
les
dec
jnp
sbb
jnp
mov
ss
sub
aad
mov
adc
inc
cwtl
xchg
jne
or
insl
dec
and
pusha
lea
sbb
movl
and
in
xchg
hlt
inc
inc
dec
push
orb
mov
je
rcrb
add
daa
test
dec
movsl
push
rclb
mov
decb
cltd
pop
mov
xor
fcoms
dec
daa
testb
je
hlt
mov
out
es
das
jbe
add
das
in
fldt
jns
test
movsb
cmpsb
pop
lods
out
out
xor
repnz
scas
sahf
adc
or
mov
and
pop
fisubrl
mov
rclb
cmp
and
call
push
pop
sub
push
addl
aaa
mov
jge
mov
cmpsb
test
es
ret
push
or
mov
inc
jno
out
jg
cmpsl
inc
test
cld
mov
adc
lret
pop
mov
xchg
jecxz
fidivl
stc
test
cmp
pop
push
jne
mov
xchg
or
mov
in
mov
loop
push
sarl
lds
stc
push
aas
lods
pop
and
push
xchg
in
mov
cmp
or
leave
mov
dec
imul
testl
pop
cmpsb
into
xchg
enter
fistpll
cmpsb
insb
aas
adc
mov
repnz
fistpl
pop
sbb
pop
or
xor
xor
test
add
mov
test
add
push
push
mov
sub
xchg
ret
in
out
flds
pop
fwait
outsl
inc
fmuls
push
mov
xchg
jecxz
xchg
sbb
xor
xchg
dec
sbb
jns
sbb
add
ret
push
call
enter
movsb
int3
das
jns
xor
mov
lret
dec
dec
mov
pop
or
popa
add
clc
shl
in
inc
lock
jno
sarl
out
add
lock
sub
jp
cmpsb
inc
arpl
push
cmpl
inc
dec
mov
pop
addr16
and
imul
xchg
pop
inc
filds
jnp
in
mov
adc
in
test
lcall
add
adc
push
add
inc
popa
mov
das
mov
xor
pop
jo
test
sub
xor
cwtl
ds
daa
push
loopne
add
pop
imul
adc
test
dec
pop
subl
push
cmpsb
jne
in
jae
enter
aad
into
adc
jnp
inc
aas
mov
loop
push
jmp
jo
xchg
dec
ficomps
popf
aam
stc
pop
icebp
clc
or
mov
push
movsb
data16
hlt
rcrl
in
movsb
int
ret
std
repnz
cltd
insl
or
test
test
jge
jg
scas
push
add
pop
jmp
xor
mov
pop
pop
out
jnp
xor
and
dec
js
dec
push
jecxz
inc
mov
iret
pop
jg
in
call
mov
aam
and
jmp
fisttpll
jl
sbb
xchg
into
push
dec
push
cmpsl
ds
cmp
fnstenv
ss
shlb
jns
inc
test
xchg
fstps
pop
lret
iret
cmp
sub
into
sub
jns
sbb
lcall
outsl
int3
daa
fidivs
in
inc
stc
js
pop
lahf
xchg
imul
inc
pop
test
add
sub
addr16
sarb
add
jae
test
fstps
lret
jb
add
es
pop
shrl
and
add
mov
movsl
and
outsl
inc
add
leave
fnstenv
rolb
inc
pusha
sbb
loopne
dec
pop
push
shr
fimull
jmp
or
mov
adc
scas
fcomps
outsb
in
fmuls
lock
lea
push
fbstp
dec
or
ljmp
lahf
xor
push
jl
loop
jo
shlb
pop
jmp
add
sarl
sub
and
cli
and
pop
jmp
ret
enter
mov
stos
lahf
inc
add
fstpt
movl
or
ret
fsubs
iret
popf
or
sahf
sbb
cmpl
fwait
inc
and
insl
ret
jmp
jns
jg
push
add
mov
test
int
push
ficomps
push
inc
fisubs
xchg
testl
inc
jl
imul
mov
stc
lods
dec
mov
add
shr
xchg
repz
movsl
pop
mov
jns
outsb
imul
test
fsubrl
xor
es
inc
pop
cwtl
xchg
fwait
adc
popa
mov
xchg
movsb
or
outsb
xchg
out
jo
sti
sbb
and
mov
sbb
jbe
push
das
and
sbb
insb
in
stos
int
fwait
insb
bound
lods
cwtl
sub
stos
adc
fs
js
jns
cld
jecxz
rol
cltd
mov
dec
dec
cs
xchg
test
loop
push
icebp
adc
jmp
stos
lock
sbb
outsb
adc
or
popa
push
adc
push
icebp
xchg
js
mov
aaa
pop
arpl
cmp
jno
sub
rcl
aam
out
inc
mov
push
inc
jnp
dec
lret
rcrl
pop
roll
add
inc
loopne
test
jmp
pop
cmp
mov
outsb
pop
inc
inc
sub
fdivrp
lahf
or
shrb
cmp
test
arpl
xor
mov
stos
sahf
test
jae
mov
incl
add
add
mov
fmull
xchg
mov
mov
cmc
in
out
mov
push
scas
lds
push
dec
sbb
stos
add
jbe
int
or
pop
fwait
into
sub
mov
mov
jb
shll
fnstcw
mov
fbld
xchg
dec
gs
nop
xor
xchg
loop
push
mov
sbb
adc
xchg
test
jo
cmp
iret
jo
inc
lea
xchg
sbb
mov
inc
adc
mov
rorl
push
lods
mov
xchg
adc
fs
hlt
adc
into
aas
dec
push
jno
movsb
outsl
inc
cltd
or
mov
xor
add
mov
stos
sbb
cmpsb
cmp
dec
jno
sub
sbb
lods
leave
sub
jo
movsl
incb
js
xchg
push
adcl
out
xor
movsl
sub
fwait
in
adc
in
div
xor
mov
adc
cltd
ljmp
shll
cmp
mov
xchg
int
sbb
inc
xor
aaa
test
xor
pop
inc
push
pop
sub
stos
jb
mov
sbbl
and
mov
mov
pusha
scas
push
add
insl
push
rcrb
fstps
sub
lods
int3
sbb
mov
dec
fdivrp
jl
push
lods
pop
lds
xor
adc
stos
sub
sbbb
lcall
cli
call
cmp
push
push
and
insl
adc
mov
cmp
div
lds
mov
jnp
jmp
test
mov
inc
or
dec
pop
imul
and
dec
or
dec
mov
inc
and
xor
jecxz
outsl
out
xchg
sbb
insb
mov
lods
mov
mov
adc
mov
and
int3
push
pop
dec
inc
rorb
fdivs
cmp
pop
bound
inc
mov
movsb
ljmp
out
cltd
mov
mov
xchg
jg
add
not
jb
xor
arpl
fcomi
inc
and
mov
adc
aad
mov
cld
jne
sahf
adc
push
jecxz
xchg
push
les
mov
push
pop
mov
iret
call
cmpsl
inc
dec
idivl
lock
in
xchg
mov
push
inc
stc
adc
insl
cmp
rcrb
scas
jmp
mov
je
adc
push
iret
stos
test
jne
dec
jae
shrb
mov
mov
cmpsl
xor
adc
add
push
leave
or
pop
mov
dec
sub
sub
push
pop
and
and
repz
push
test
lret
jo
xchg
fcmove
xchg
repnz
push
lcall
pop
xor
or
lock
rcr
sbb
fs
dec
stos
inc
in
dec
jns
sbb
pop
test
cltd
inc
sbb
push
lret
pop
add
lcall
or
repnz
push
clc
out
add
mov
xor
ss
sub
mov
insb
pop
pop
fiadds
test
fs
or
mov
sbb
or
js
xchg
fdivs
push
movb
adc
mov
and
and
jno
inc
add
and
shll
clc
jecxz
add
jecxz
imul
mov
rclb
mov
lods
int3
into
dec
into
daa
pop
in
test
xchg
mov
lods
test
lcall
adc
push
pop
cld
xor
lret
cmp
push
in
pop
cmp
rcll
jmp
add
pusha
pop
adc
inc
rol
loop
cmp
outsb
rorl
dec
ficoms
jmp
pop
jg
clc
jb
mov
das
mov
cmovbe
mov
push
pop
sahf
leave
cmp
adc
pop
pop
ss
das
rcrb
mov
xor
dec
cmp
lahf
push
out
cltd
imul
cmc
cli
das
sbb
popa
rol
lcall
mov
adc
jmp
mov
bound
jmp
sub
dec
mov
jmp
mov
mov
andl
add
add
std
lods
das
popf
push
xchg
out
xor
xor
out
je
sbb
stos
outsl
mov
repnz
sub
fidivrs
decl
cmpsl
in
lock
push
test
push
mov
pop
shll
inc
xchg
cmp
sbb
sub
add
xchg
imul
inc
and
pop
sti
pop
iret
out
cwtl
xchg
ja
lret
jl
sbb
pop
mov
ds
push
loope
push
push
or
add
pop
xchg
lea
cmp
mov
cli
int3
pop
mov
xchg
or
ret
dec
dec
std
or
adc
mov
aaa
shll
mov
xchg
sub
sbb
imul
bound
jmp
test
ss
mov
lcall
ja
mov
stos
bound
mov
pop
pop
int3
push
cmp
enter
pusha
imul
xchg
pop
stc
xor
jbe
lods
mov
hlt
mov
xchg
mov
xor
xor
mov
dec
push
in
mov
sbb
adc
xchg
jge
ljmp
sbb
cltd
adcb
mov
pop
nop
das
push
add
inc
stc
mov
xchg
subb
and
sub
test
ficomps
mov
dec
adc
mov
xchg
stos
mov
ja
fistpll
roll
sbb
int
pushf
pushaw
cmp
xor
adc
mov
cwtl
lock
fstpt
je
inc
pop
xchg
adc
jecxz
jno
xchg
je
repnz
repnz
js
int3
loopne
mov
outsb
fdivr
jae
sbb
or
adc
xchg
adc
test
jns
dec
push
jecxz
jno
cmp
mov
aam
pop
popw
mov
aad
pop
push
loop
mov
std
mov
jnp
nop
fldt
pop
ds
fisttpll
adc
dec
mov
mov
push
ds
pop
jg
ljmpw
test
push
jl
fldl
or
inc
xchg
scas
jmp
xchg
bound
frstor
lods
cmpsb
adc
jecxz
fdivl
gs
in
shll
push
and
jo
call
add
outsb
mov
xor
cmpsb
enter
cmp
jbe
pop
call
stos
cmc
mov
jbe
xor
xor
movsb
xchg
out
add
stos
push
ret
inc
shlb
or
mov
out
cmp
mov
sahf
pop
fbstp
in
in
jg
adc
jno
loope
insb
push
test
xchg
lcall
shl
cli
adc
repnz
add
pop
shrl
jnp
aad
hlt
cltd
dec
push
dec
addb
xchg
xchg
mov
jbe
rcr
mov
push
ljmp
xlat
aas
sub
cwtl
call
inc
mov
mov
fsubr
sahf
jae
xchg
xchg
sub
int
sbb
jne
lds
fadds
mov
push
mov
rcll
loop
repnz
inc
fiadds
stos
int3
mov
cmpsl
fmull
push
mov
or
daa
xchg
xchg
gs
cld
xor
movsb
push
cli
das
shlb
jb
jno
in
les
outsl
sub
mov
scas
js
sbb
sbb
or
movsb
jne
jbe
test
dec
mov
repz
xor
push
mov
and
mov
mov
stc
adc
pop
mov
int
cmp
jb
or
adc
and
mov
fsubl
scas
insb
aas
test
or
mov
test
je
icebp
add
push
dec
mov
arpl
xchg
dec
lret
ss
pop
int
xor
int3
popf
jl
jmp
dec
mov
push
adc
inc
movsb
imul
dec
jne
pop
add
mov
movsb
stc
std
add
out
lock
gs
ret
pop
sbb
ljmp
lds
jne
je
push
mul
fiadds
pusha
push
mov
popf
inc
inc
jb
push
outsl
pop
leave
xor
test
mov
int
cmp
push
sbb
mov
jb
inc
shlb
ljmp
and
outsl
addr16
or
stos
push
fwait
arpl
stos
rclb
or
jl
push
jp
test
ffree
or
inc
and
js
xchg
sarb
mov
jle
cmp
cmp
leave
or
adc
fnstcw
mov
mov
leave
stos
jo
scas
lret
mov
mov
ret
cmpsb
and
xchg
cmp
rorb
std
enter
push
or
and
test
or
cmp
loopne
in
inc
out
scas
dec
fimuls
xchg
push
and
mov
stc
xlat
push
jb
cld
out
imul
xchg
nop
outsb
sbb
xor
mov
and
insb
lret
lret
imul
fadds
jge
sbb
xlat
inc
fistps
subl
push
mov
mov
add
dec
and
mov
xchg
push
push
or
xchg
push
mov
leave
xchg
xchg
out
imul
int3
push
push
push
mov
pop
mov
mov
mov
and
and
dec
xchg
nop
and
inc
cmpsb
jp
repnz
lods
sbb
in
push
nop
rsm
cmpsl
push
dec
mov
in
les
and
notl
mov
sbb
inc
insb
cmp
or
data16
in
mov
mov
or
or
sub
adc
dec
imul
out
insl
je
fdivrl
test
cmp
pusha
jo
in
xchg
mov
mov
and
xchg
loop
in
mov
or
jg
sub
out
cmp
mov
js
mov
clc
add
add
imul
mov
ficoms
xor
das
stos
loope
inc
rcrb
movsb
adc
push
insb
mov
test
mov
mov
xor
xchg
loopne
popf
mov
mov
or
fucomip
mov
fcomps
pushf
inc
aas
inc
pop
mov
pop
sub
imul
pop
dec
insl
mov
dec
addl
xchg
dec
push
xorps
ljmp
test
pop
xor
loopne
dec
ds
popa
loop
scas
lds
cltd
xlat
xchg
jp
stc
pushf
push
xor
fcomp
lds
sbb
cmc
cmp
adc
xchg
call
sbb
mov
mov
push
fistl
pop
ds
adc
out
push
js
insl
insb
inc
jnp
xchg
test
push
ljmp
sbb
push
mov
repz
xor
cld
lods
cmp
lods
stos
sub
addb
adc
pop
mov
or
mov
dec
push
jo
mov
pop
dec
adc
mov
loope
add
xchg
in
mov
xchg
or
mov
inc
xchg
in
sub
jb
or
daa
fisubl
mov
lahf
aaa
fdivr
pop
mov
notb
xor
dec
rclb
inc
fdiv
cmp
sbb
movsb
rcrb
fcmovnb
dec
loopne
xchg
dec
inc
fidivl
adc
cmp
sahf
shrl
or
and
and
cmp
sahf
jge
dec
test
jne
and
pop
pop
push
repz
xor
xchg
add
jb
cmc
fcoms
jmp
jle
movl
and
jb
ret
xor
cli
lret
stos
bound
inc
jle
pop
or
cmpsl
push
xchg
lahf
or
pop
cmp
lret
add
sti
shr
inc
fsub
lahf
jns
loopne
push
insl
jge
dec
inc
jp
sub
push
clc
mov
call
sub
pop
insb
cmp
ss
pop
push
cmp
pushf
pop
dec
lods
in
fbld
jmp
mov
shl
xchg
push
pop
mov
cmp
mov
aad
mov
push
enter
mov
pop
in
lret
stos
cs
leave
in
xchg
mov
mov
push
xchg
in
lock
popa
xor
into
pop
in
jno
daa
repnz
lret
insl
and
movsb
add
pop
pop
jle
xchg
mov
lods
mov
lret
xlat
aam
push
ret
repnz
std
mov
adc
xchg
cld
mov
jno
cli
stc
arpl
inc
sub
push
mov
aaa
mov
adc
adc
jns
xor
jecxz
jge
xchg
jb
leave
shll
push
jno
and
pop
ja
add
loop
pop
outsl
cmp
mov
enter
enter
fsubp
sarl
adc
xchg
outsb
xor
in
out
push
xchg
sbb
pop
aad
lock
repz
push
push
pop
mov
mov
dec
mov
adc
es
les
lods
sub
sbb
inc
sbb
xchg
mov
xor
jmp
mov
or
dec
fisubrs
and
cmp
fstl
popa
cmp
data16
rcrb
xor
and
popf
flds
add
test
cmp
sahf
sarl
popa
subb
dec
add
pop
in
dec
xchg
push
pop
test
mov
pop
jecxz
stos
fwait
jns
pop
test
mov
cmp
outsb
sbb
xchg
cmp
sbb
lcall
push
or
dec
pop
mov
idivb
out
bound
in
into
imul
out
testb
jnp
insb
mov
fs
xor
fwait
mov
or
es
in
mov
dec
gs
adc
add
rol
scas
pop
xchg
xor
lds
ds
jbe
imul
add
movsl
les
lods
imul
in
push
jg
sub
pushf
push
testb
xor
movsb
xchg
mov
lret
pop
push
iretw
dec
add
cmp
jl,pt
popa
pop
mov
clc
fs
mov
rorl
xchg
out
xchg
flds
fmuls
pop
adc
jge
xchg
pop
aam
mov
stos
pushl
push
push
jno
lret
mov
test
in
ljmp
test
ljmp
xchg
or
dec
lret
push
mov
pop
jl
jae
test
xchg
imul
or
mov
in
imul
mov
cmp
inc
out
aaa
js
sahf
out
pushf
and
jne
mov
cwtl
push
jb
or
es
mov
cmpsl
dec
jne
loopne
jge
test
popl
adc
loop
jmp
mov
in
mov
cltd
or
xchg
xor
mov
mov
xor
test
fwait
gs
pop
in
and
cmp
out
jg
testl
jnp
lcall
or
mov
rcrl
jne
pop
mov
das
mov
inc
push
jmp
fwait
sub
inc
push
push
lds
mov
daa
in
test
bndldx
jp
and
loope
push
je
stos
das
cmc
and
jno
cmp
push
sbb
lea
sbb
or
loopne
jle
pop
mov
outsl
mov
mov
sbb
or
mov
loop
dec
or
iret
dec
subb
dec
mov
push
out
fs
inc
aas
mov
jecxz
lock
adc
leave
mov
pop
adc
movsl
pop
test
or
cmp
inc
push
nop
xchg
test
or
loope
add
add
test
pushl
mov
lods
pop
cwtl
outsb
ds
adc
adc
insb
mov
ret
sarl
xor
jbe
push
fwait
rcrb
lods
mov
inc
add
mov
and
mov
outsb
mov
sub
cmp
inc
push
jne
add
sbb
jns
push
inc
cmp
sbb
xchg
je
in
fwait
shrl
lret
jne
movsb
leave
ret
in
adc
hlt
dec
gs
jo
mov
iret
movsl
inc
mov
or
addr16
imul
out
dec
inc
ficoms
jne
adc
pop
pop
mov
mov
pop
mov
sub
sub
push
lcall
jge
or
cmpsl
jbe
rcll
int
fucom
in
ljmp
pop
ljmp
pop
cmp
cmpsb
into
xlat
aaa
xlat
mov
jae
and
and
cmp
cvtpi2ps
out
cmpsb
xchg
test
ja
mov
insb
movsb
shll
mov
adc
xor
sti
sbbb
imul
pusha
leave
dec
mov
push
add
stc
cmc
or
pop
and
in
bound
sbb
mov
xchg
adc
lods
or
mov
dec
inc
outsl
insl
fcoms
xchg
push
iret
jmp
sbb
and
jge
cli
lret
mov
jno
and
andl
xchg
xchg
sbb
clc
scas
lret
shr
jno
jno
inc
fistl
popa
jmp
inc
test
popf
mov
jmp
push
popa
jne
adc
enter
outsl
stc
sub
lahf
push
jecxz
sbb
cmp
xor
imul
scas
and
mov
pop
aaa
pop
ds
and
sti
leave
inc
mov
imul
push
int3
fsubrs
aaa
in
loope
icebp
sbb
aad
in
or
mov
push
imul
xchg
adc
or
sub
xor
push
and
mov
int3
inc
pop
int3
push
ds
out
dec
imul
shll
aaa
sbb
xor
mov
daa
jle
sahf
loopne
jle
in
or
dec
sahf
fs
mov
push
scas
fdivl
in
mov
push
pop
lea
popa
fbstp
movsb
loopne
sub
push
int3
outsl
dec
scas
or
xchg
xchg
or
and
aam
or
or
dec
mov
dec
loope
imul
and
movsl
push
cmpl
xchg
and
mov
ss
loopne
push
fsubs
sub
fwait
xchg
stc
xor
repnz
fldcw
jo
inc
test
clc
lret
sbb
and
inc
fdivrl
enter
push
pop
popa
pop
cmp
outsb
das
mov
and
enter
push
mov
mov
xchg
mov
rorl
mov
test
pop
add
ljmp
fadd
cld
mov
sbb
dec
dec
std
pop
sbb
shlb
and
in
scas
mov
mov
jp
mov
xor
jmp
ljmp
pushf
insb
cmpsl
jmp
pusha
inc
and
test
pushf
lds
pop
adcl
xchg
pop
in
push
push
hlt
sub
pop
and
stos
cmp
test
adcb
dec
push
mov
outsb
lds
adc
xchg
xchg
cltd
jb
loop
mov
mov
shrb
xor
iret
dec
sub
mov
xchg
add
stc
mov
jl
jp
and
insb
inc
mov
lock
std
add
xchg
add
je
adc
cltd
xchg
cmp
cmp
jmp
dec
hlt
add
mov
mov
sarl
jo
imul
clc
lods
jno
xlat
jge
scas
push
shrl
out
iret
and
scas
pop
rcrl
inc
jecxz
in
rolb
into
mov
fs
ds
fmull
jno
lods
mov
pop
ffreep
divl
mov
cmp
pop
adc
cmp
rorl
sar
mov
lds
sbb
xchg
loop
jle
jb
dec
ds
pop
inc
das
sbb
outsb
jmp
push
xchg
fiaddl
mov
mov
pusha
and
insl
pop
push
inc
mov
pop
cmp
sahf
jne
pop
test
fadds
ja
shlb
or
dec
add
fildll
push
lret
subb
into
add
es
data16
add
fdivrp
push
sbb
cmp
fisubrs
cmc
pop
lret
sub
mov
loopne
in
jmp
xchg
sub
leave
int
mov
ljmp
lcall
ficomps
mov
adc
push
push
clc
mov
inc
sub
ds
movsl
ret
xchg
clc
loopne,pt
push
inc
in
mov
sub
jge
mov
sub
je
xor
jmp
add
or
add
lret
hlt
inc
dec
sti
out
push
enter
dec
arpl
pop
push
sbb
push
xor
out
cmpsb
inc
xchg
scas
mov
dec
xchg
lds
pop
in
jne
aam
lcall
add
push
cmp
sbb
stos
ret
ljmp
cwtl
sub
mov
out
or
sub
mov
aaa
push
dec
scas
in
fidivl
testl
inc
dec
mov
testl
int
les
inc
outsl
out
jmp
test
xor
imul
idivl
clc
push
loop
icebp
push
inc
sub
jb
add
pop
iret
dec
aas
pop
movsbl
roll
xor
gs
cmpsl
dec
push
outsl
das
sub
sbb
test
outsb
int
ss
stos
jns
mov
out
xorl
mov
mov
faddp
shll
xchg
decb
mov
dec
add
test
movsl
test
popa
data16
and
sbb
adc
add
bound
rcrb
fnstcw
ja
scas
ret
call
push
cmp
iret
in
mov
rcrb
adcl
stos
mov
push
sbb
xor
std
or
enter
xchg
sub
xchg
and
insl
xchg
pop
in
jae
adc
jge
ret
sbb
cltd
sar
les
push
adc
aam
mov
xchg
sub
lock
faddl
push
lahf
jbe
adc
loopne
mov
pop
jp
cltd
jecxz
pop
repz
xchg
in
cmp
sub
cli
push
ss
out
cmp
movsl
jnp
mov
cmp
or
ds
fcompl
sbb
dec
jle
sub
cmp
jp
mov
jns
addb
in
mov
frstor
xchg
ljmp
mov
push
cwtl
in
push
add
xchg
negb
fstl
add
jbe
lock
push
mov
sahf
jae
fsubrs
into
jp
fcompl
add
pop
mov
and
aad
pop
in
pop
adc
xchg
dec
dec
dec
mov
orl
xchg
mov
stos
add
or
scas
popa
leave
mov
push
pop
inc
jmp
and
mov
jl
js
pop
xor
xor
loope
popf
xchg
dec
push
fisubs
jb
mov
sbb
stos
cmp
jno
jb
lret
xchg
cmpsl
xchg
shlb
jb
into
jp
xchg
pop
in
cmp
sbb
lahf
insb
push
pop
mov
sub
data16
sbb
repz
adc
mov
jl
out
adc
sub
mov
subb
cwtl
add
dec
jns
pop
dec
bound
cmp
fiaddl
cltd
mov
stos
sbb
sub
in
and
xchg
mov
fstpl
aaa
xchg
out
aas
sub
lcall
es
adc
and
xchg
hlt
lret
pop
shrl
dec
push
gs
sbb
cmp
sbbl
inc
divl
stos
pop
mov
jb
out
jbe
xchg
dec
jbe
xchg
sbb
mov
fnstenv
fcoms
pop
xor
imull
out
sbb
roll
andl
mov
inc
cmp
jecxz
jns
fisubl
xchg
jnp
daa
andb
sub
icebp
shl
imul
xor
pushf
cmp
add
xchg
inc
jmp
loope
and
jb
in
or
movsb
cmp
xchg
in
pop
dec
or
mov
sbb
lock
add
mov
and
jno
movsb
popf
jecxz
cmp
scas
inc
xor
jns
dec
pushf
add
loope
cltd
mov
stos
cmp
and
jmp
lret
ds
dec
and
and
and
mov
jno
rclb
push
adc
cmp
gs
push
arpl
aaa
jp
fidivl
push
mov
test
mov
les
test
pop
andb
ss
jecxz
mov
mov
push
ss
mov
push
into
movsl
fs
or
xchg
or
stos
popf
xor
in
into
jnp
or
jge
outsl
mov
ds
push
jae
inc
loope
inc
lods
cs
sbb
and
push
mov
push
js
adc
jns
dec
aas
xor
das
or
inc
pop
xchg
inc
int3
xchg
jmp
hlt
std
movsb
or
lret
pop
inc
clc
int3
rclb
pop
jp
fnstenv
mov
rorb
push
jns
iret
mov
test
xor
jnp
test
lahf
lods
aas
into
dec
xchg
ljmp
ljmp
das
sub
adc
lea
jmp
fists
dec
in
aaa
ss
shlb
nop
iret
imul
daa
xor
pop
aad
mov
mov
xor
xor
xchg
add
add
in
pop
adc
and
cld
js
jecxz
pop
test
pop
mov
jmp
jmp
jle
mov
lret
sub
hlt
sub
xchg
lret
push
pusha
aas
lds
cli
aaa
jg
add
or
pop
out
lds
sti
out
addr16
icebp
dec
and
sbb
stc
inc
aam
lods
inc
dec
cld
sub
shr
sub
daa
push
aam
xchg
fbstp
push
scas
out
sbb
cmpsl
sbb
loope
mov
imul
inc
shl
xchg
ja
mov
xor
jecxz
push
notl
inc
enter
xor
sahf
pop
leave
pusha
rep
roll
mov
adc
ds
lret
test
xor
loopne
shlb
rclb
int
pop
or
popl
pand
sub
inc
daa
nop
je
es
sbb
mov
and
cmp
and
and
lahf
fdiv
in
dec
fsubrl
into
xchg
fimuls
pop
dec
mov
out
xor
daa
pushf
aad
jbe
jns
adc
inc
out
cmc
out
fildl
or
or
rep
adc
shlb
cs
std
or
or
adc
inc
dec
sbb
xchg
out
and
movsl
fcmovbe
fs
repnz
fidivrs
and
aaa
mov
lret
adc
fucomp
dec
xor
push
scas
aas
adc
pop
sub
sbb
js
xor
fnstcw
mov
mov
mov
mov
push
push
jo
std
test
lret
repz
rol
mov
and
or
sti
fadds
orb
mov
sub
mov
or
icebp
push
enter
xor
inc
adc
dec
adc
mov
das
sub
fdivrs
mov
std
and
enter
inc
rcl
insl
mov
je
pop
fs
or
add
mov
cmp
fs
repz
push
mov
add
cwtl
jecxz
push
imul
fmul
das
enter
or
sbb
xchg
popf
jno
adc
xchg
xchg
and
rorb
pop
lds
in
push
jecxz
pop
xchg
mov
jae
orb
cmp
enter
cmc
mov
xor
aam
dec
pop
dec
and
ret
or
push
fstpl
xchg
xchg
jg
adc
inc
lds
test
inc
out
call
loop
outsl
cli
push
movsb
icebp
fdivrl
xchg
and
pop
push
pusha
fs
push
ja
cmpsb
test
gs
les
cli
div
mov
in
lret
iret
cwtl
and
xchg
and
cmpb
push
ret
enter
mov
fwait
sub
in
jp
cmp
cs
or
cmpsl
cs
movsb
int
aas
pushf
je
add
js
mov
xchg
lock
das
jge
je
xchg
enter
dec
add
cwtl
pop
inc
xchg
pop
int
lock
ret
sbb
jns
push
inc
and
add
aad
clc
add
mov
add
hlt
fxch
lahf
mov
inc
mov
push
xchg
js
fidivrl
push
ljmp
arpl
xchg
pop
mov
jge
js
fstl
lret
xchg
mov
int
pop
lods
inc
pop
xchg
dec
push
adc
mov
or
push
popl
daa
add
sub
jecxz
or
filds
out
mov
lahf
jmp
lahf
add
jg
dec
aam
stc
add
sbb
pop
push
push
mov
cmp
movsl
out
std
sub
dec
pop
mov
aaa
inc
lcall
sub
dec
add
scas
xlat
adc
jmp
lahf
jmp
xchg
ss
pop
dec
pop
mov
scas
and
popa
test
insb
pop
add
stc
fimull
xchg
mov
sbb
fstl
sahf
loope
jl
je
ja
enter
sbb
push
mov
adc
ss
adc
lods
and
sub
cmp
adc
xchg
out
mov
shll
cmp
dec
pop
dec
mov
pop
jle
dec
mov
xor
in
push
out
lea
mov
mov
mov
or
xor
add
shll
fidivrl
mov
xchg
ss
in
push
adcb
push
lret
xor
sbb
mov
jae
mov
sbb
je
aas
scas
and
scas
mov
clc
inc
frstor
jg
xor
lret
fnsave
inc
sbb
mov
out
push
and
outsb
xor
dec
pop
fdivrl
mov
pop
push
xchg
in
insl
dec
sbb
mov
push
pop
lds
mov
and
test
mov
mov
ficoms
loopne
sub
sub
inc
sub
mov
in
sti
insl
cmp
aaa
adc
xchg
js
and
imul
xor
xchg
js
mov
dec
pop
jnp
popa
jmp
int3
mov
sub
fcmove
rclb
sub
push
fldl
push
std
in
cmpsb
inc
jp
mov
xchg
sarb
lds
bnd
andl
lret
mov
pop
ja
add
or
or
inc
pop
xor
jl
in
cmp
arpl
leave
push
stos
stos
mov
inc
jmp
mov
adcb
outsb
inc
es
cwtl
mov
loopne
push
repz
cmp
dec
fwait
or
insb
jns
rcrb
insb
into
outsb
lret
fistpll
aad
xlat
mov
stos
jp
xor
sbb
push
mov
insb
sub
cld
cmovbe
adc
in
int3
cmp
dec
mov
mov
and
or
popf
mulb
dec
outsb
lock
mov
mov
xchg
pop
in
stos
sbb
enter
lds
jp
dec
push
dec
imul
cli
mov
jnp
stos
push
cwtl
bound
mov
out
les
sub
shll
dec
dec
and
lcall
add
je
push
cltd
sbb
aaa
inc
fwait
push
out
lods
inc
shlb
inc
je
ss
cmpb
and
out
xlat
out
or
fnstsw
movsl
pushf
sub
call
jl
push
daa
pop
into
rcl
mov
jns
mov
push
inc
sub
hlt
je
cmp
lock
and
adc
mov
ljmp
gs
and
and
push
notb
sahf
jo
mov
xchg
cmp
enter
or
add
xlat
xor
outsl
sub
dec
out
push
stos
js
pop
pop
cmp
stos
or
add
je
mov
adc
adc
push
or
xor
fxch
shll
inc
out
sbb
arpl
xor
ret
push
mov
cmpsb
arpl
aas
mov
inc
xlat
sbb
mov
dec
outsb
mov
push
rorb
push
dec
adc
mov
sub
jge
dec
in
sahf
icebp
cmp
mov
mov
repnz
stos
lds
js
cltd
mov
mov
lods
repnz
dec
jns
leave
imul
xchg
int
xchg
adc
xchg
mov
mov
push
sbb
mov
lock
dec
sbb
in
in
or
dec
lods
adc
push
jle
mov
sub
fmuls
dec
ret
stc
stc
out
cmpsl
xchg
or
lcall
dec
pop
adc
repz
roll
xor
inc
xlat
sub
xchg
xchg
and
add
js
aaa
cmpsb
enter
stc
dec
xor
cmp
inc
and
add
sbb
lods
in
jno
aaa
cmpsl
test
mov
jbe
xchg
inc
xlat
rcll
adc
xlat
adc
out
push
repnz
out
inc
filds
sub
jno
sbb
sub
mov
jmp
dec
jne
dec
mov
hlt
cmp
test
xchg
into
test
dec
or
sbb
mov
daa
lret
push
xor
int
insl
pop
push
pop
ds
mov
repnz
add
jmp
fsubrl
xor
es
mov
ljmp
xchg
hlt
mov
clc
in
out
addr16
mov
push
mov
test
pop
jg
mov
jmp
adc
and
shl
addr16
out
mov
rorb
loope
lock
sahf
mov
pushf
jle
push
gs
adc
mov
popa
xchg
jg
pop
int3
gs
adc
cmp
adcl
xorl
dec
mov
pop
mov
mov
push
pop
stos
out
scas
in
adc
imul
push
aad
insb
ss
test
outsb
cmp
and
loop
and
adc
mov
lahf
adc
test
imull
mov
sub
mov
jbe
outsl
mov
xchg
xchg
pop
inc
sub
and
jns
std
xchg
pop
test
mov
dec
xor
cmp
cli
ds
inc
sti
push
adc
inc
jne
inc
les
push
cwtl
divps
inc
icebp
mov
push
mov
mov
arpl
cmp
add
push
shl
das
aad
in
sarl
push
pop
push
lods
enter
jns
pushf
push
mov
push
or
rolb
bound
cld
ljmp
dec
add
and
pop
sub
pop
leave
mov
and
adc
cmp
xor
out
popa
mov
push
inc
add
leave
push
add
mov
cwtl
mov
sbb
test
fimuls
in
mov
rol
or
aam
mov
sbb
enter
leave
jnp
jae
xor
loopne
add
lock
sbb
adcb
js
pop
fistps
repnz
lods
jnp
test
in
aad
or
mov
fdivs
outsl
rcl
bound
out
add
mov
stos
repz
shl
adc
addr16
dec
mov
lods
xchg
clc
in
sub
incl
ja,pt
sbb
das
imul
inc
jmp
mov
inc
lods
mov
daa
mov
adc
add
iret
or
mov
sarl
dec
in
and
inc
sbb
sbb
mov
pushf
and
dec
std
aad
and
push
subl
repz
icebp
mov
and
mov
in
jmp
jns
imul
cmp
in
or
xor
cmp
ljmp
jno
shlb
inc
mov
mov
cmp
pop
xor
jb
sub
ret
fidivrs
inc
inc
popa
cmpsw
xor
mov
sbb
and
adc
sbb
push
aas
or
inc
movsl
popa
lods
mov
roll
aaa
scas
aam
mov
and
ja
cmc
jg
outsb
cmpsl
sbb
dec
ja
add
xchg
hlt
mov
and
divb
pusha
dec
testl
les
out
faddl
jo
jge
stc
sbb
daa
pop
xchg
mov
stos
js
add
or
xor
or
sub
sbb
ret
ja
jecxz
repz
fmuls
jge
lods
sbb
xor
jns
ficompl
jmp
js
jae
mov
mov
jmp
ret
stos
rorl
jmp
add
jg
push
sub
std
sub
and
inc
mov
add
sub
mov
sbb
imul
cs
adc
stos
pop
fildl
xchg
icebp
mov
cltd
fdivs
rorl
push
xchg
jno
jno
add
sbb
loopne
gs
pushf
xlat
mov
ss
mov
sahf
ficoms
in
in
jmp
movsl
push
add
fistl
out
cltd
fwait
sub
inc
mov
cmpsl
mov
inc
push
and
je
rol
popa
in
xchg
andl
testl
and
sub
sbb
or
cmc
sbb
xchg
sub
xchg
gs
cmp
testl
or
jecxz
push
addl
xchg
xor
mov
mov
adc
sub
aad
or
and
out
test
inc
or
jnp
add
in
int
cmp
push
push
sbbl
adc
push
mov
cmp
movsl
inc
es
arpl
mov
xchg
mulb
xchg
mov
dec
setg
sahf
aad
mov
cmp
cwtl
les
or
sub
shlb
jnp
cmc
test
mov
push
and
bswap
mov
pop
mov
cmp
pop
pop
dec
ror
and
pop
and
push
arpl
js
addr16
imul
mov
nop
dec
inc
dec
hlt
dec
lea
xchg
and
push
push
pop
ds
cld
jmp
loope
ljmp
mov
test
xchg
imul
je
xchg
mov
add
fstpl
lea
fsub
pop
add
inc
adc
mov
es
add
lea
mov
xchg
cld
add
lods
scas
cmp
lcall
sub
out
jno
xlat
lods
sbb
push
aam
mov
test
pop
jecxz
test
scas
mov
add
in
xor
pop
shrb
xcrypt-ofb
cmpsl
jmp
inc
jle
les
cltd
dec
pop
mov
push
repz
push
sub
or
inc
push
lds
push
scas
xchg
sub
popf
push
jb
fcmovne
jns
push
lret
in
std
push
popa
cmc
mov
pop
call
in
cld
add
xchg
std
push
mov
xchg
jnp
clc
xchg
in
lret
dec
add
fldt
insb
in
mov
inc
mov
rorl
or
sub
pop
or
fwait
cmp
xchg
jne
and
bound
rorb
mov
xor
lahf
push
jbe
adc
lahf
fisubrl
int
inc
xchg
xchg
jno
push
and
or
fnsave
sbb
push
inc
jecxz
pop
xchg
frstor
dec
loope
mov
gs
dec
jbe
add
mov
jnp
dec
cld
test
cli
subl
bound
je
rcrb
push
lods
mov
xor
cmp
or
jnp
bound
push
loope
pop
and
lods
pusha
stc
movsl
aad
sbb
shl
pop
lods
mov
xor
in
out
mov
add
sbb
iret
adc
mov
mov
jns
out
movsl
push
sub
pop
into
es
aam
fprem1
mov
and
cli
das
cmp
in
sti
cwtl
notl
ret
mov
add
in
aaa
mov
arpl
cs
push
std
mov
punpckhwd
mov
popa
ret
sbb
sbb
clc
test
mov
sub
daa
mov
dec
pop
call
mov
jle
cmp
adc
fidivrl
mov
test
sahf
adc
jecxz
mov
push
out
popf
cwtl
addl
mov
out
ret
cmpsl
xor
fcmovnb
sbb
popf
xlat
push
icebp
negl
and
adc
jge
xor
shlb
push
push
sub
pop
mov
lahf
xchg
out
mov
pop
adc
scas
jecxz
sbb
xor
sbb
inc
outsb
mov
inc
jns
js
sbb
sbb
pushf
xlat
mov
and
leave
leave
in
aad
mov
mov
mov
xor
fnstenv
outsl
das
lock
popf
xchg
imul
push
cmpsl
fstpl
fsubl
push
fsqrt
and
adc
rorb
outsb
fadds
mov
xor
or
inc
xchg
enter
mov
out
push
stos
scas
sub
enter
mov
jmp
mov
repz
test
jmp
jbe
dec
into
push
nop
loopne
xchg
iret
jnp
add
cmp
jno
mov
jno
sti
sbb
dec
add
or
imul
testl
dec
sbb
mov
mov
int
loop
xor
add
aaa
xchg
jnp
adc
push
stc
js
test
jecxz
mov
filds
pusha
decb
push
shll
repz
pop
mov
mov
mov
pop
pop
loop
jns
xchg
jmp
out
mov
inc
mov
imul
sbb
rcrb
hlt
pop
xchg
das
dec
inc
pop
out
mov
lcall
test
filds
jns
nop
pop
inc
inc
pop
adc
cmpsl
inc
lea
test
sbb
ja
pop
cmp
imul
out
mov
sub
mov
xchg
and
dec
push
xchg
loopne
data16
ds
xor
xor
scas
cmp
aas
pushf
popf
in
mov
fcomip
ljmp
push
not
and
fistpll
jbe
push
ljmp
pusha
int3
mov
stc
or
gs
pop
cwtl
add
out
cld
pop
xor
sub
cmpsl
xor
or
into
xchg
push
data16
je
std
mov
rorl
mov
mov
testl
scas
mov
mov
and
sub
clc
pop
cmpsb
test
lcall
out
ljmp
fidivs
out
pop
inc
mov
int3
pop
into
pop
ret
pop
xchg
gs
sbb
je
fsubr
mov
mov
popa
sbb
dec
inc
xor
hlt
or
push
cltd
cmp
movsl
sarl
mov
jmp
jbe
fistpl
daa
push
pop
shrl
into
mov
call
jbe
inc
sti
xor
loopne
push
mov
scas
loope
xchg
cmpsb
and
xor
fs
inc
xchg
and
dec
out
or
andb
sbb
cwtl
pusha
sahf
fists
lret
xor
pusha
sbb
cli
popa
hlt
xchg
pop
xlat
and
data16
push
sub
mov
dec
in
dec
xor
je
loopne
add
and
scas
inc
int
je
xchg
xchg
xchg
test
es
jmp
test
and
insl
popl
out
xor
imul
fadd
lret
cs
mov
jne
lods
pushf
popa
jmp
addr16
pop
fsub
ret
repz
inc
sub
int3
push
sub
dec
into
cmc
repz
dec
mov
sbb
push
mov
cli
jecxz
or
mov
imul
out
inc
negl
inc
icebp
insb
in
outsb
fcompl
inc
mov
pop
push
mov
mov
adc
pop
add
ljmp
lods
filds
push
mov
dec
mov
mov
cltd
mov
ja
push
mov
cli
adc
outsb
jmp
xchg
jno
jbe
and
arpl
sbb
gs
push
push
iret
pop
cmpb
ljmp
sbb
add
mov
cmp
clc
xchg
pop
push
pop
insb
aam
loopne
cli
addl
nop
cld
mov
push
cld
sti
int
jl
mov
lds
aad
dec
mov
es
adc
xchg
dec
loope
or
jnp
mov
scas
addr16
inc
jnp
movsl
cmp
cs
nop
sbb
sbbb
lret
sbb
inc
jp
ja
ds
lods
out
iret
scas
mov
dec
repz
mov
dec
mov
cmpsb
jp
lods
loop
cmp
sub
insb
push
mov
mov
jnp
cmp
cmp
jle
pop
or
xor
push
inc
mov
into
cmc
scas
and
jae
jbe
mul
and
inc
stc
mov
fwait
jmp
outsl
pusha
fldenv
cmp
adc
mov
iret
mov
and
int3
cmp
movzwl
or
lods
sbb
mov
mov
sub
push
and
in
repnz
mov
mov
popa
lock
mov
pop
dec
roll
popf
or
jmp
xchg
loop
mov
jne
fs
hlt
cmp
loope
and
test
lods
aas
lock
pop
adc
dec
ret
cmp
stc
mov
addr16
dec
inc
xchg
push
dec
nop
inc
push
and
fcompl
xor
mov
cmc
dec
push
sub
add
jnp
xchg
sub
sahf
push
imul
std
xor
pushf
loop
fdivrs
pop
lcall
ret
les
test
push
dec
cmp
or
lret
pop
subl
dec
in
mov
mov
data16
pop
sub
gs
add
shlb
xor
mov
aaa
jae
mov
inc
fimuls
rcl
push
dec
sti
mov
jecxz
sti
push
je
cld
sbb
into
inc
cmpsl
pop
cmp
jl
jge
outsl
lods
dec
ljmp
pop
xchg
dec
aam
sbb
inc
loopne
push
cmc
shlb
stc
fmul
popf
mov
inc
push
mov
jecxz
movsl
mov
scas
mov
loop
mov
mov
movsl
out
sti
pop
lcall
ret
push
or
cmp
xor
sbb
push
lea
dec
out
test
leave
cld
mov
push
pop
inc
gs
aaa
outsl
test
lds
imul
mov
leave
cmp
xchg
jae
enter
addr16
xor
cmpsb
push
xorb
push
pop
ret
test
jo
sub
jae
mov
sub
ljmp
dec
scas
inc
mov
and
xlat
lods
mov
pushf
and
sahf
div
inc
fsub
aam
xchg
mov
sbb
jmp
mov
dec
mov
pushf
stos
sahf
xchg
mov
push
into
cwtl
jae
xchg
xchg
in
cld
fs
scas
push
pop
and
inc
cmp
push
sti
adcl
dec
sub
cli
mov
stc
fwait
jno
xchg
stos
out
cmp
in
or
push
je
loopne
gs
dec
sahf
add
dec
xor
push
and
pop
push
inc
inc
inc
imul
inc
test
roll
or
outsl
cltd
ljmp
int
push
popa
dec
and
in
lods
sti
add
pop
aam
je
pop
mov
jae
mov
and
fs
xor
mov
js
xor
sbbb
push
sbb
sub
aas
xor
mov
push
add
je
imul
jb
mov
jae
cld
fstl
roll
gs
cli
fmuls
xchg
fists
addr16
inc
add
mov
push
mov
enter
push
scas
cld
aas
mov
out
movsl
insl
out
jbe
inc
fs
into
fwait
or
inc
xchg
in
adc
pop
enter
push
jns
mov
mov
pop
lret
js
xchg
je
mov
rclb
int3
std
inc
mov
das
pop
lods
jecxz
mov
ss
inc
push
leave
sub
push
jno
mov
clc
stos
push
mov
cmp
loop
lret
mov
dec
push
icebp
rclb
dec
ds
sbb
in
mov
lock
lock
lds
pop
out
push
shrb
or
lret
or
and
xchg
xlat
push
loopne
repz
stc
gs
bound
out
in
push
add
xor
jge
mov
inc
jecxz
mov
bound
pop
outsl
xchg
mov
movsl
sub
inc
or
repnz
push
push
mov
add
mov
loop
dec
cmp
scas
loope
dec
cmp
sbb
adc
pop
mov
shrb
in
ljmp
lods
insb
push
or
call
out
ss
or
out
lods
and
fsub
fsub
adc
lea
cmp
push
mov
ret
inc
or
jecxz
daa
call
outsl
inc
sahf
dec
add
inc
and
push
enter
iret
inc
cwtl
popa
xor
outsl
mov
imul
stos
push
jp
push
xor
xchg
inc
into
jl
push
insl
mov
jmp
int
sbbb
ja
cltd
cmc
cmc
lea
fstpt
push
push
loope
loope
jne
cmp
ret
cwtl
or
in
dec
sbb
xchg
dec
push
add
lock
sbb
dec
mov
sar
jg
stc
sarb
jge
in
xchg
xlat
mov
xor
repnz
add
pop
mov
sbb
jae
fisubs
mov
sub
rol
xor
push
fisubrl
jge
ret
push
mov
dec
cmp
ret
fwait
adc
pop
xor
mov
ds
fisubrl
add
outsl
jle
pop
cmp
scas
stos
movsb
icebp
xlat
leave
divl
xchg
insl
cmp
es
mov
rclb
push
mov
stc
inc
icebp
or
rclb
movsl
loopne
enter
mov
aaa
sbb
pop
sub
add
test
testb
dec
sub
lret
lret
push
mov
inc
add
aas
sbb
cmp
dec
sbb
sti
xchg
loope
addr16
push
pushf
xchg
pop
cwtl
xchg
int3
pop
das
push
ljmp
jge
mov
adc
loop
or
pop
les
xchg
out
add
push
inc
les
or
adc
push
bound
mov
aam
stos
pop
js
out
jp
sub
leave
or
in
scas
inc
sub
daa
jmp
dec
jb
aaa
xlat
aad
addr16
lea
adc
aas
xlat
jl
mov
jmp
das
mov
dec
cli
cmp
xchg
adc
sub
or
pop
cmp
jae
test
pop
push
aas
cmpsl
inc
adc
cmp
mov
sbb
and
mov
push
jge
aas
shlb
pop
push
mov
je
pop
gs
and
movsl
cs
in
rcr
dec
dec
sarl
sti
cmpsl
jmp
and
in
and
pop
aad
fs
adc
testb
xor
sahf
sub
out
imul
push
sub
das
into
pop
pop
inc
and
lods
mov
jae
and
adc
and
jg
or
pusha
mov
aam
popf
std
and
shll
test
dec
inc
sbb
rcr
add
sub
mov
mov
inc
ss
je
orb
pop
rolb
inc
mov
xor
cmc
xchg
push
fs
pop
xor
sub
in
xor
jl
sub
inc
mov
in
xchg
mov
popa
jns
sarl
test
int
xor
rcr
xor
js
pop
cmp
push
cmp
mov
mov
adc
jno
frstor
iret
inc
pop
jge
sahf
jae
movsb
jg
adc
pop
pop
rcll
cld
push
xor
hlt
or
sub
mov
pushl
neg
cmc
mov
lahf
bound
int3
push
fsub
jnp
out
mov
add
dec
subl
aam
xlat
cmp
out
sub
inc
add
rcll
daa
clc
mov
mov
pop
or
ja
mull
sti
jle
cmc
xchg
dec
hlt
jecxz
inc
pop
add
fsubs
ljmp
adc
pop
in
xor
sub
cwtl
cmpsb
push
inc
xchg
jmp
popf
jge
int
std
lods
fwait
mov
out
mov
jg
add
aas
cltd
sub
pop
mov
push
xor
imul
xor
ja
cmp
cmpsb
bound
mov
mov
pop
ret
mov
adc
and
repnz
movb
mov
push
loope,pt
loop
mov
jns
push
jle
aas
push
mov
ret
ret
sub
xchg
popa
and
push
pop
mov
mov
pop
push
xchg
js
push
dec
cmp
mov
xchg
push
clc
adc
fsubr
push
imul
aam
push
cmp
fildl
subb
fwait
push
ret
dec
pop
jmp
int
insb
cmp
std
xchg
mov
pop
mov
push
jmp
mov
int
sahf
gs
mov
jp
pop
xchg
xchg
pop
push
mov
or
sub
xor
adc
fsubrl
out
jecxz
mov
sub
fnsave
out
imul
das
inc
sahf
sub
xlat
pop
xchg
add
pop
das
popf
and
int3
pop
jl
and
movl
lock
cmp
movsb
stos
out
lods
or
pop
mov
cmp
mov
jge
aam
call
popf
fnstsw
dec
bound
jge
movsl
xor
daa
lea
xchg
lods
and
pop
dec
cwtl
xor
cmp
push
cmp
pop
outsl
decb
lods
les
insb
add
mov
push
and
xor
mov
adc
lods
xor
mulb
aam
mov
fidivs
xchg
jno
aaa
sub
mov
sbb
push
ret
mov
hlt
mov
and
into
loopne
mov
add
imul
or
and
loope
and
sub
dec
pushl
and
repz
mov
popf
push
xchg
cltd
mov
jae
push
add
int
shr
xchg
cs
loop
add
pop
dec
dec
mull
out
jge
clc
adc
sbb
inc
adc
xchg
das
in
cwtl
nop
inc
bswap
mov
nop
pop
xor
cmc
std
xlat
and
mov
mov
gs
les
jnp
fildll
dec
mov
inc
jmp
jl
push
add
lods
mov
insb
mov
inc
dec
pop
jo
cmp
mov
fsubrl
xchg
jecxz
es
jo
out
repnz
push
movsl
sub
sbbl
das
mov
pop
jle
outsb
in
jp
lods
xor
aam
push
fmuls
stos
mov
xchg
scas
fisttpl
stos
jge
or
cwtl
dec
push
dec
shlb
pop
jp
mov
jno
loopne
ret
cmc
jns
cmp
xor
cld
and
inc
and
mov
jmp
push
rclb
push
in
clc
enter
mov
mov
adc
jecxz
mov
sub
cmp
fldenv
ja
sbb
pop
cmpsb
loope
and
pop
movsl
or
cmp
sbb
pop
hlt
in
mov
jmp
push
jl
jb
mov
shlb
fcmovnbe
dec
jnp
mov
mov
adc
inc
mov
sbb
out
loop
add
fdivl
push
idivb
dec
hlt
inc
lods
cmc
lret
or
and
adcb
lahf
fs
add
mov
repnz
popa
cmpsb
mov
cmpsl
enter
push
rorb
push
sbb
jb
sub
pop
inc
js
sub
inc
loopne
mulb
mov
push
cmp
in
mov
lea
mov
mov
push
rcrb
imul
in
push
xlat
sahf
and
adc
insb
and
jp
inc
clc
jbe
lcall
aaa
test
sub
mov
inc
loopne
sbb
jno
inc
shll
aam
dec
sub
lds
mov
mov
sti
mov
jno
in
clc
mov
pop
add
enter
js,pt
out
inc
and
jne
ds
dec
push
push
pop
movsl
les
aaa
movsb
lret
adc
mov
das
push
aaa
jnp
mov
pop
push
stos
into
pop
add
jp
notl
dec
push
mov
add
aaa
scas
leave
cli
iret
mov
inc
add
lods
sub
mov
adc
or
push
loopne
sub
adc
and
aad
inc
jge
sahf
ljmp
push
push
repz
call
add
add
fimull
mov
fs
inc
scas
xor
cmp
and
mov
pop
dec
daa
insl
pop
cmp
popa
sahf
mov
and
sub
cs
add
push
stc
divl
pusha
push
roll
stos
jne
inc
fcom
jnp
repnz
movsb
pop
mov
dec
or
loop
shlb
adc
addb
jge
call
pusha
sbb
pop
xchg
fdivrl
test
aaa
cld
call
pop
out
jp
mov
gs
insl
jo,pn
cmp
dec
add
dec
inc
pop
mov
jnp
fwait
orl
mov
clc
sub
rolb
sbb
aaa
lds
ss
xchg
sub
pushf
pop
out
or
sub
sub
test
dec
sub
cmpsl
int
sub
cmpsl
jle
fcompl
in
je
push
xchg
loope
mov
popf
cs
or
inc
lea
insl
push
insl
sahf
or
les
jg
adc
cmp
mov
push
ret
xchg
push
cmp
fld
xor
popa
sbbb
mov
pop
jle
mov
pop
jo
mov
mov
and
and
sub
adc
scas
cld
mov
inc
lock
dec
lock
int
sub
popf
or
inc
xchg
inc
pushf
fdivl
jb
dec
or
and
jge
xchg
cmp
in
shrl
and
inc
xchg
insl
and
mov
xchg
dec
mov
insb
icebp
jno
cwtl
xor
dec
popw
sub
addr16
push
mov
jle
in
xchg
mov
mov
push
xchg
mov
jmp
mov
jno
mov
sarl
pop
push
jmp
jmp
lret
cmpl
out
adc
pop
xchg
inc
inc
adc
adc
or
jae
fs
push
into
rol
andb
jb
sahf
and
or
dec
fiadds
inc
add
jp
cmp
mov
xor
jle
out
cmp
mov
call
adcl
mov
push
repz
out
and
ljmp
inc
test
sbb
hlt
xor
test
arpl
adc
xchg
loop
inc
out
mov
cmp
cmpsb
push
cs
stos
jmp
or
mov
push
push
mov
fbld
in
sub
into
ficoms
sub
lret
add
and
js
sbb
cmp
pushf
mov
das
jno
cmp
lea
cwtl
mov
hlt
je
mull
scas
mov
loope
in
ja
pusha
mov
xor
and
scas
add
enter
daa
insb
cli
inc
push
test
mov
clc
cwtl
adc
orb
aad
jle
dec
fimuls
xchg
cmp
fists
je
rolb
push
mov
call
xchg
dec
jle
push
add
popf
xor
dec
add
cmc
ret
push
dec
int3
jmp
gs
add
rorb
push
fwait
inc
cli
gs
mov
ljmp
repz
jnp
inc
out
pop
push
push
outsb
fdivrs
push
sub
mov
mov
lcall
adc
pop
aad
insl
xor
jmp
lds
cltd
add
pop
push
or
scas
pop
rcll
pop
nop
imul
insb
arpl
pop
mov
mov
mov
dec
frstor
jmp
mov
mov
insl
adc
outsb
out
pop
leave
dec
xlat
loop
shll
in
jecxz
mov
dec
add
lods
ljmp
or
mov
je
clc
xchg
adc
mov
andl
push
sub
and
shll
in
idiv
popa
cmp
xor
pop
jmp
cmc
and
cld
cmp
or
lea
dec
loopew
and
jns
mov
test
pop
subl
add
incb
dec
sub
dec
cmp
xchg
jno
pushf
mov
add
sub
or
add
push
cmpsb
rolb
add
in
ljmp
cmp
lcall
int
negb
add
insl
clc
dec
or
sahf
das
push
mov
stos
cmpsl
pop
inc
dec
insb
ds
mov
ficoml
push
repz
xor
inc
out
cmp
aas
test
subl
pushf
mov
and
inc
clc
call
fwait
call
cmc
mov
jae
or
or
int3
pop
test
cmp
inc
push
repnz
fiadds
sbb
sub
int
addr16
fiadds
mov
stos
cld
test
xor
xchg
fstps
xchg
inc
fmull
sub
mov
nop
les
sarl
pop
enter
dec
mov
lcall
insl
popa
aas
int
jbe
popa
ds
fisttpl
xchg
dec
lcall
dec
mov
sbb
loop
xchg
jg
dec
and
imul
dec
icebp
leave
test
inc
lahf
fisttpll
clc
xchg
xchg
dec
sar
inc
cltd
ljmp
jle
lds
cmp
popa
fdivrs
adc
pop
test
test
loope
inc
scas
mov
pop
push
les
movsb
ret
dec
sub
pop
jle
xor
mov
cwtl
cmp
outsb
sbb
xorb
or
adc
adc
imul
push
ja
loop
mov
lea
or
and
sbb
sbb
inc
jl
leave
outsb
popf
and
stos
lds
add
and
sub
nop
pop
mov
sub
mov
or
pop
arpl
mov
sbb
pop
mov
mov
int3
mov
push
jne
or
push
in
sti
mov
push
lret
xchg
add
fisubrs
cmp
or
sbb
test
xchg
pop
or
lods
lahf
sbb
das
decb
cmp
fdiv
cmp
rolb
rcll
out
inc
xchg
ss
sarb
or
sub
pop
jb
aas
imul
loop
fcmovu
pop
and
mov
add
cmpsb
xchg
jne
jne
sti
loopne
lahf
jmp
ficoms
adc
jns
adcl
shll
cwtl
push
test
mov
mov
mov
add
fimull
cmp
adc
mov
iret
adc
rorl
push
scas
sarl
repz
call
mov
pop
lds
sbb
mov
cs
xlat
and
jnp
icebp
add
inc
stos
xchg
push
in
dec
jns
jmp
cwtl
sbb
cmpsl
sti
outsb
inc
es
xchg
or
mov
mov
push
jns
outsl
or
xor
fs
call
shll
imul
xchg
inc
mov
pop
cmpsb
pop
mov
mov
addl
adc
nop
sub
sbb
pusha
mov
aas
lret
adc
aas
push
cwtl
xor
mov
mov
jmp
mov
cmp
fadd
into
insb
pop
test
repz
or
sbb
jecxz
push
adc
aaa
into
fiaddl
shlb
cmpsl
add
pop
mov
cmp
jne
push
loop
adc
das
sbb
cmp
pushf
mov
dec
xor
xchg
dec
push
outsl
lea
dec
fwait
adc
nop
push
push
xchg
sbb
aam
and
sbb
fstpt
jne
pop
lret
mov
movsl
lahf
xchg
inc
dec
dec
rorl
hlt
pushf
fwait
scas
and
cld
shrl
fs
jno
in
aam
pop
lcall
adc
je
clc
adc
rorb
jle
xor
idivl
jp
lods
xor
mov
mov
cmp
sub
xlat
or
pop
adc
pop
iret
pushf
dec
jmp
adc
dec
cld
pusha
sbb
lock
std
mov
xchg
sub
jnp
sbb
out
stos
sub
or
rorb
popa
loopne
xchg
int
jecxz
mov
popa
lods
cmp
ss
outsb
mov
test
lods
fcmovne
cmp
and
xchg
mov
or
in
push
add
outsb
dec
jnp
pop
lds
inc
fisttpll
add
xchg
sub
call
mov
je
adc
cmp
testb
add
push
lea
lods
push
adc
lock
imul
popa
shlb
mov
dec
adc
inc
add
mov
push
fists
stc
sbb
test
ds
jle
dec
ret
fcompl
fldenv
xchg
hlt
fdivs
daa
and
add
xlat
jo
mov
xor
mov
xor
ss
fiaddl
je
movsb
push
inc
dec
scas
mov
syscall
push
xchg
mov
sahf
imul
adc
push
jno
sti
aas
clc
cli
mov
les
sarl
push
jmp
sahf
rcrl
mov
mov
push
arpl
mov
mov
lock
adc
out
push
xlat
fs
lods
push
sub
inc
add
sub
lret
push
call
popa
jl
sub
push
jne
inc
psubw
or
jge
loopne
cs
xchg
outsb
sub
aad
ljmpw
dec
pop
loopne
mov
f2xm1
push
push
sbb
push
pop
fs
xlat
movsl
popa
lret
xor
sbb
sub
nop
push
aaa
imul
adcl
adc
bswap
dec
pusha
mov
int3
push
pop
mov
or
fadds
int3
mov
cmp
and
adc
adc
iret
xor
sub
into
dec
arpl
xlat
out
lock
in
shl
and
data16
jg
pop
ja
mov
jmp
push
mov
test
pop
into
dec
cwtl
cs
rorl
jp
push
xor
jbe
xlat
int3
ficompl
test
xchg
lahf
aaa
mov
movsb
dec
test
and
in
jns
enter
insl
ja
push
inc
andl
cmp
dec
cmpb
scas
mov
inc
pop
adc
jge
mov
sti
loop
in
pushf
into
sub
movsl
jb
adc
test
lahf
mov
and
mov
push
je
lods
pushf
rol
push
std
push
mov
pop
rorl
mull
push
pushl
decl
sti
shlb
rcll
cwtl
mov
fldenv
xchg
dec
and
icebp
mull
movsb
scas
loop
or
or
mov
add
shl
inc
subb
mov
inc
repz
and
sti
dec
sahf
add
fs
push
sub
xchg
mov
dec
les
lds
fsubs
idivl
or
xlat
pop
shl
mov
rorb
mov
cld
add
mov
adc
dec
and
add
jno
push
andb
clc
fdivrs
dec
icebp
scas
add
adc
push
aaa
xchg
pop
es
push
xchg
push
cmpsl
xor
test
inc
and
inc
pop
clc
pop
jecxz
push
shl
mov
out
cmc
xor
call
or
cmp
cmp
cmp
dec
decb
pop
data16
dec
inc
in
xor
in
gs
call
das
mov
pop
dec
and
jbe
cmp
unpckhps
in
xlat
pop
or
call
xchg
test
sub
adc
sbb
aaa
cmp
jbe
data16
cltd
xor
mov
sub
pop
bswap
shrb
hlt
arpl
jne
adc
mov
sbb
pop
xchg
sbbb
loope
or
in
enter
dec
push
lds
out
into
sub
cli
mov
call
ss
dec
into
lods
mov
adc
xchg
fmulp
lcall
pop
fstpt
jbe
xchg
jb
loop
stc
testb
inc
lahf
lahf
xchg
hlt
mov
cmp
lcall
mov
imul
mov
xchg
push
xchg
adc
stc
arpl
sub
or
aam
pop
jo
fwait
or
cmc
stos
xchg
sbb
fsubs
sbb
sub
cs
repz
stc
sbb
jbe
fisubrl
pop
inc
dec
add
add
xchg
jle
pop
hlt
sahf
out
push
scas
inc
loopne
std
iretw
lea
inc
dec
push
out
mov
lret
mov
mov
repz
setb
pusha
mov
adc
jno
dec
out
insl
add
pop
test
js
push
insl
mov
adc
pop
mov
mov
fisttpl
rolb
std
cmp
stos
sar
out
cli
stos
movsb
popa
idivl
cld
pop
ret
cmc
lock
and
cmp
stos
addb
push
mov
sti
xchg
push
jo
push
pop
pop
push
push
test
mov
inc
mov
inc
adc
aas
in
and
nop
movsl
inc
test
jns
or
inc
imul
add
mov
mov
loopne
lret
cwtl
shl
sub
and
rdpmc
test
ja
mov
push
stos
mov
adc
js
sti
and
dec
lea
cmp
dec
sub
dec
sbb
fstpl
adcb
fidivs
into
and
inc
push
rclb
xchg
int3
sbb
mov
iret
cmp
cmp
out
or
stos
mov
and
cmp
jb
pop
inc
int3
movsb
in
cmp
pop
mov
les
int3
inc
pop
mov
or
imul
xchg
movsb
xor
pusha
testb
stc
mov
gs
rcrb
mov
sbb
mov
lods
adc
fcmovnu
idivb
sbb
xchg
jle
push
call
ljmp
lock
loopne
add
imul
adc
shlb
hlt
imul
xor
icebp
out
loop
pusha
repnz
enter
iret
mov
xor
inc
fbstp
push
mov
xor
clc
arpl
jecxz
inc
mov
jno
subl
xor
pop
rcrb
xchg
imul
push
mov
add
mov
aad
pop
jle
jnp
cmp
mov
mov
push
dec
sub
incb
sub
setle
fnsave
cli
push
mov
jns
xlat
dec
sbb
dec
addr16
hlt
mov
add
scas
imull
mov
neg
add
cmp
ja
outsl
mov
test
mov
xor
ljmp
lar
inc
enter
and
shll
test
cwtl
lret
dec
lods
inc
je
jmp
ds
mov
xor
js
iret
loopne
sbb
iret
rcrl
fnstcw
and
cwtl
lret
aad
jle
ret
dec
dec
inc
add
adc
xorb
cwtl
sub
inc
enter
inc
adc
jg
pop
dec
aad
mov
xchg
subl
adc
push
jmp
rcrb
push
xorb
xor
push
dec
push
rcll
cmc
test
or
loop
shl
das
movl
into
stos
rcrb
daa
sub
mov
mov
or
xor
fsubrs
in
adcl
mov
ss
inc
jae
sbb
les
pop
jg
xchg
cwtd
cmp
push
lcall
sti
or
in
ret
jle
push
addr16
int3
mov
push
sbb
sbb
test
sub
dec
or
scas
icebp
leave
jp
mov
jmp
int
fmuls
or
pop
out
push
xchg
pop
pop
jg
cli
mov
and
jb
jne
mov
pop
xor
mov
pop
xor
adc
icebp
xchg
cld
insl
and
lcall
addr16
fistps
cmpsb
in
mov
fs
adc
xlat
fldt
and
std
scas
sub
push
adc
mov
push
call
std
scas
repz
outsl
jno
sahf
mov
cmp
adc
and
test
xor
ret
scas
push
mov
push
adc
dec
mov
cmp
adc
push
repz
mov
jne
xor
pop
pop
out
test
add
xchg
stc
inc
push
rcl
fwait
pusha
sbb
add
popf
jp
fidivrs
fdivs
inc
int
jl
jle
loope
sti
jle
outsl
xor
dec
jge
pop
pop
fmuls
fsubp
jle
sbb
pop
jne
int3
jnp
inc
sub
dec
rep
jmp
sbb
sbb
in
or
push
cmpsl
rolb
sub
dec
loope
pushf
push
pop
mov
pop
mov
rorb
push
cwtl
dec
sub
add
inc
push
cmp
loopne
daa
fstpl
pop
aaa
daa
lcall
mov
inc
jmp
push
ds
inc
lods
das
mov
outsl
loop
rorb
test
push
loopne
fucomi
push
clc
movsl
movzwl
repnz
mov
movsb
out
sub
mov
add
cld
fidivrl
jmp
mov
std
jb
dec
sbb
xchg
mov
lods
lods
test
mov
andb
xchg
and
addl
cmpsl
or
xor
mov
jge
mov
cmp
jge
mov
and
out
sub
rcr
pop
ret
xchg
push
cmp
xor
jmp
xchg
ret
mov
iret
daa
int
pusha
cmp
into
dec
ljmp
push
jmp
push
mov
mov
enter
mov
shlb
inc
inc
adc
xor
ss
or
ds
fsubr
sub
xchg
mov
pushf
inc
dec
lea
pop
imul
lods
and
mov
jae
dec
xor
push
lcall
mov
mov
loopne
jb
push
xor
mov
or
pop
jb
mov
daa
cmp
bound
mov
scas
adc
clc
mov
arpl
ss
jmp
jo
jg
push
psubusb
icebp
arpl
pop
leave
fstpt
xor
and
mov
inc
pushf
clc
pop
lds
xchg
jle
mov
xor
mov
pop
sub
mov
ja
mov
and
mov
add
jg
pushf
push
cmp
dec
js
jnp
flds
xchg
mov
orb
rcll
cmp
add
pop
push
mov
mov
fdiv
ds
testl
insb
xor
add
adc
repz
testl
ret
jecxz
das
xor
pusha
pushf
ss
jnp
sbb
into
out
daa
fildll
frstor
jo
jle
push
int3
stos
iret
inc
loopne
push
cmp
mov
xchg
fldenv
test
movl
shlb
sbb
jmp
cli
decb
adc
jecxz
jmp
mov
ret
pop
mov
xchg
mov
pop
sbb
mov
bound
sbb
js
sti
mov
add
adc
fcmove
fadds
ret
sbb
pusha
jnp
mov
add
int
jnp
aaa
inc
lods
xor
adc
call
out
jmp
push
pop
push
add
cs
stos
mov
inc
push
add
rolb
in
sub
fwait
or
fwait
jnp
int3
xchg
adc
mov
test
out
mov
sarl
bound
add
pop
push
mov
popl
pusha
push
sbb
mov
mov
pop
fwait
shlb
lcall
shl
popa
inc
bound
inc
testb
pop
mov
test
jecxz
or
cmp
mov
or
jmp
pushf
dec
stos
jp
ds
sbb
adc
leave
es
mov
sub
xorl
jae
mov
filds
xor
adcl
mov
andb
push
aaa
stos
fildll
xor
bound
cmpsl
pop
test
mov
ret
ja
xor
dec
xchg
sbb
lock
in
std
movsb
ret
add
add
imul
and
push
imul
mov
jb
and
lock
imul
xor
jle
push
xchg
shlb
loopne
lcall
add
xor
jge
jge
js
inc
or
fldl
loop
enter
xchg
mov
push
lret
mov
mov
icebp
gs
jns
popf
shrl
cwtl
xor
lret
jl
sbb
inc
popf
rclb
sahf
es
cmp
mov
lods
adc
movsl
test
inc
in
addr16
loopne
jp
repz
mov
dec
mov
hlt
inc
jp
stos
jo
sbb
adc
sbb
adc
add
mov
mov
ja
xchg
shl
sub
xchg
and
pop
xchg
and
cs
pop
hlt
xchg
cltd
lds
in
std
push
lahf
pusha
jmp
or
hlt
jno
andl
adc
icebp
out
ret
push
js
mov
sahf
stc
hlt
lahf
sahf
mov
jo
sbb
popf
jmp
mov
mov
xor
lahf
das
divl
pop
cmc
lahf
adc
mov
cli
ret
mov
imul
push
jns
outsb
shll
outsl
test
cmp
movsl
jg
cmovp
add
test
popa
mov
xchg
pop
cmovs
mov
mov
sbb
and
add
adc
dec
test
test
jle
mov
sbb
call
sub
cwtl
ljmp
les
aas
test
and
adc
outsb
pop
mov
pop
fisubl
xchg
xchg
jecxz
push
dec
dec
mov
inc
jne
xchg
scas
psubb
inc
mov
mov
xchg
scas
das
lret
pop
xor
jns
fimuls
and
lock
bound
shr
adc
push
xchg
pop
mov
pop
and
mov
lea
test
adc
sbb
jnp
mov
jns
in
xchg
cltd
lea
and
dec
out
xchg
int3
dec
addr16
xchg
push
adc
cmp
push
mov
pusha
cmp
repnz
aad
fistpl
dec
in
dec
mov
jbe
arpl
xor
gs
roll
std
pop
movsb
icebp
in
or
sbb
push
or
pop
sub
icebp
mov
outsb
and
add
mov
aas
rcl
loope
ljmp
int
push
mov
call
sahf
insl
mov
pop
dec
mov
mov
pop
pop
cmpsb
inc
pusha
repz
ret
movl
decb
lret
jge
jmp
mov
adc
divb
cmpsb
aad
xor
inc
stos
ja
mov
push
ljmp
lcall
lret
movsb
in
mov
stc
outsb
pop
push
jno
insl
add
test
lods
pusha
ret
dec
stos
push
xor
fimuls
imul
inc
addr16
dec
sti
cmp
mov
xor
nop
sbb
mov
and
mov
inc
loopne
add
mov
sbb
in
hlt
xrelease
inc
add
insb
mov
rcrl
mov
push
outsb
in
jp
push
dec
iret
mov
incl
enter
cwtl
cmp
hlt
and
jae
stc
pop
pushl
stos
xchg
push
xchg
cltd
mov
add
in
iret
pop
test
jg
cmp
lea
sub
in
bound
jbe
sarb
mov
fwait
xchg
iret
jne
loope
imul
test
cmp
loope
pop
cmpl
jp
cs
ljmp
iret
and
mov
repnz
jae
gs
pop
fcomps
loop
movsl
aad
sbb
xor
lods
inc
push
pop
sbb
mov
push
mov
lahf
sbb
push
mov
and
add
add
lahf
adc
sahf
repnz
jle
mov
push
mov
arpl
or
out
filds
push
jl
pop
sub
outsl
mov
fsubl
sub
inc
imul
fildll
mov
loopne
and
sub
jbe
sarb
cs
xchg
mov
mov
xor
setg
lret
xchg
xchg
in
mov
push
jns
loop
pop
pop
mov
mov
lock
sbb
cli
les
sbb
loopne
aad
ljmp
or
ret
ret
jne
iret
in
xchg
js
or
shrb
insb
mov
movsl
mov
and
push
jl
out
sbb
ljmp
les
outsb
aad
mov
xor
push
stos
lret
sar
adc
test
iret
jne
iret
fcoml
lahf
push
mov
or
fmuls
lret
dec
aaa
enter
enter
push
push
cs
dec
pop
or
int3
jno
pop
dec
jno
lds
pop
sti
adc
or
pop
stc
sbb
ds
scas
push
pop
pop
jp
pop
daa
movsl
lcall
fstps
jge
mov
xchg
push
push
cld
jne
pushf
inc
jl
mov
loop
sbb
outsb
repnz
xor
stos
mov
push
shrb
movl
insl
mov
out
xor
loope
and
scas
lcall
push
insl
rolb
xorl
mov
jo
scas
call
push
fdivs
xchg
sbb
mov
ja
mov
jge
ret
notl
pop
xlat
push
dec
jne
xor
mov
lret
out
and
cmc
cld
sbb
and
popf
mov
mov
ret
lock
jmp
loop
inc
mov
test
mov
sbb
test
in
adc
pop
cmp
imul
lret
insl
cmp
dec
xor
jl
push
sbb
push
push
sbbl
sub
push
addr16
inc
arpl
aas
mov
push
popf
xchg
dec
xor
mov
loope
inc
jge
lcall
loop
das
mov
jmp
outsb
jg
add
dec
cld
push
cmp
cmp
xchg
in
adc
push
popa
int
fcoms
add
and
int3
aad
ficoms
int
popa
add
in
add
call
add
push
and
push
mov
jnp
push
dec
xor
xor
jb
cmpsb
fs
sbb
jg
repz
push
or
add
sub
mov
dec
or
sti
popa
cltd
mov
insl
jo
jge
cmp
shll
add
clc
lcall
xor
lret
lcall
imul
and
push
mov
orl
scas
in
mov
xchg
inc
push
mov
int3
fldl
sbb
and
adc
int3
roll
push
push
movsl
outsl
sub
mov
cmc
mov
aas
mov
js
jnp
push
shlb
cmc
and
insl
mov
push
jnp
cmpsb
in
ss
fmull
mov
push
arpl
push
hlt
pop
flds
es
pusha
cmpsl
sbb
out
cli
push
test
push
and
test
sub
clc
mov
lea
imul
lcall
or
push
int
push
xchg
or
mov
cltd
mov
jle
aaa
xlat
mov
popf
jne
daa
hlt
loopne
push
lods
mov
mov
inc
mov
add
jle
icebp
rcr
es
pop
sbb
inc
jl
repnz
int3
cltd
jle
lret
cltd
ds
lret
sub
push
scas
enter
adc
inc
test
mov
pop
push
pop
push
push
pop
ficoml
push
inc
xchg
sub
mov
inc
mov
cs
nop
aam
test
enter
cmpsb
test
sti
roll
xlat
jmp
les
negb
dec
xchg
loop
mov
push
mov
leave
mov
adc
push
inc
cmc
mov
aam
pop
popa
filds
sbb
mov
cs
fnstsw
lcall
std
dec
js
push
pop
lds
fcompl
aas
js
push
lret
inc
hlt
inc
mov
pop
mov
data16
dec
add
xchg
pop
aam
mov
arpl
push
add
shl
out
cmp
fs
jae
shll
pop
sub
jmp
out
iret
daa
das
cmp
in
dec
int3
movsb
mov
popf
mov
test
fcompp
daa
shlb
xchg
xchg
mov
popl
mov
ds
jge
or
pop
outsl
and
mov
and
cmp
subb
lcall
data16
sbb
mov
fwait
ror
daa
adc
xor
mov
push
lret
in
enter
inc
cmpsl
loopne
push
test
sub
testl
push
testl
push
lcall
movl
outsb
push
inc
test
insl
pop
jbe
scas
cmpb
pusha
popa
std
cmpsb
pop
adc
dec
lea
cmpsb
push
jl
xlat
rol
dec
and
pop
sahf
inc
xchg
mov
inc
call
push
adc
mov
mov
cld
loope
dec
sbb
and
jae
cmc
lods
sbb
mov
jl
xchg
enter
xor
jle
lret
lret
mov
sub
stos
mov
test
fsts
pop
dec
and
daa
test
xor
jmp
into
vxorps
insb
fdivrs
in
ljmp
pop
in
cmp
int3
pushf
out
gs
mov
or
fnstcw
out
js
pop
not
pop
shlb
sub
pop
pop
mov
push
pop
fistl
dec
and
imul
sahf
testb
sarb
mov
call
repnz
cwtl
subb
mov
jno
testb
jle
sbbb
xchg
loop
add
sub
jg
dec
mov
mov
pop
xorl
mov
mov
in
mov
push
push
sbb
and
and
cmp
stc
sub
xor
leave
out
or
cmpsl
pop
mov
push
and
adc
xchg
into
in
mov
inc
scas
sbb
icebp
sub
outsb
aam
jge
or
cmpsb
cld
jl
inc
loop
push
cmpsb
mov
xchg
jno
dec
xchg
cmp
cmp
mov
pop
adc
cmp
leave
loop
lcall
mov
popa
xor
loop
loop
jnp
xchg
testl
xor
jno
fistl
aas
push
cltd
stc
pop
sbb
and
mov
fwait
insl
add
lods
lea
cmp
sbb
aas
inc
inc
fadds
mov
pop
aaa
xor
pop
lea
lret
sbb
out
mov
negl
mov
ss
push
push
pop
stc
clc
in
dec
std
mov
mov
sahf
rep
add
mov
dec
dec
out
inc
xchg
mov
fwait
cld
jmp
out
in
jo
jb
sbb
lret
add
in
mov
adc
cmp
add
lcall
sbb
push
lahf
mov
sar
push
hlt
sbb
leave
pop
inc
and
ret
jae
jmp
cmp
es
jns
xchg
imul
call
mov
leave
jmp
inc
push
mov
jns
jne
popa
push
inc
lds
sbbb
xchg
inc
mov
nop
daa
add
pop
sbb
pushf
fistl
adc
sub
ljmp
jmp
mov
push
rorb
or
push
sub
mov
jne
ffree
lds
adc
xchg
and
dec
mov
sar
xor
fimull
fnstcw
pusha
ret
int3
jno
push
sub
loop,pn
pusha
cmpsl
data16
or
insl
mov
iret
in
movsb
cltd
stos
mov
cmpsb
sahf
sbb
pop
push
and
pop
jp
popf
sbb
and
add
sub
std
jo
arpl
js
rcll
inc
outsb
stos
inc
push
inc
sub
sahf
movsl
lret
jae
ljmp
jo
xchg
mov
pushl
dec
mov
adc
enter
push
in
stos
bound
pop
fiaddl
popf
mov
test
sbb
sub
mov
push
pop
cmpsb
in
mov
fmuls
adc
lahf
push
loope
je
pop
mov
and
aad
pop
int
js
push
clc
std
out
pop
dec
in
fisubl
dec
ret
out
fwait
pop
sub
mov
sub
push
xor
cmp
cs
nop
shll
cmp
aad
adcl
shll
xor
dec
sarb
mov
or
mov
mov
aaa
or
mov
jg
js
repnz
outsl
sub
push
pop
cs
or
inc
mov
xor
data16
jecxz
jecxz
scas
mov
push
push
outsl
or
cmp
std
push
mov
ljmp
lods
jl
xchg
jg
or
lret
mov
cmp
cli
lret
fwait
movsl
popf
push
lods
pop
gs
or
xchg
mov
pop
dec
je
inc
into
in
xchg
cs
or
push
xchg
dec
jge
jg
cmc
cmp
cmc
mov
push
jmp
iret
movsb
xlat
push
in
fists
mov
jo
mov
pop
popf
sub
in
and
pop
inc
mov
push
loopne
out
loopne
add
adc
sbb
jb
repz
stos
and
sub
cmpl
test
popa
fists
xor
sarb
inc
in
std
mov
inc
dec
mov
ljmp
fnstcw
sbb
xchg
add
je
pop
pop
mov
pop
mov
popa
jnp
xor
xor
fs
xchg
std
adc
ss
cmp
cs
jno
mov
enter
mov
cli
adc
shrl
mov
dec
inc
mov
push
test
dec
sbb
shrb
sarl
cltd
xor
push
repz
xor
out
xchg
mov
inc
inc
or
sub
mov
jno
mov
xor
sub
lods
xchg
ret
lea
mov
xor
aad
xchg
mov
push
jne
scas
push
push
push
mov
jg
sbb
and
pop
mov
int
xchg
stos
out
icebp
loop
sub
mov
cmp
sbb
pusha
push
movsl
xchg
xchg
cmp
pusha
stos
dec
arpl
fstp
outsl
cwtl
and
xchg
xor
jbe
adc
data16
outsl
sub
jp
dec
xchg
jns
nop
mov
movsb
das
dec
sub
mov
les
sub
orb
push
je
test
inc
jne
fnsave
cltd
loope
mov
popa
mov
mov
movsb
push
in
sbb
jb
add
clc
inc
lods
pop
ret
fldenv
jbe
es
shll
bound
push
xor
cmp
mov
mov
orb
out
daa
dec
bound
int3
stos
in
inc
in
xchg
hlt
xchg
test
jbe
push
dec
bound
adc
mov
addr16
or
mov
cmp
sbb
icebp
gs
aaa
and
cwtl
jns
and
loop
fisttpll
fildll
push
jp
aam
hlt
dec
mov
popf
xchg
push
xchg
addl
mov
xor
mov
mov
mov
mov
dec
int3
mov
dec
out
inc
rorl
ret
addr16
mov
pop
dec
jl
inc
lods
addr16
ljmp
incb
jne
xchg
push
mov
and
push
ljmp
ljmp
cld
mov
push
lahf
or
jnp
rcrl
sub
popl
cwtl
repz
dec
inc
push
pop
xor
addb
mov
test
xor
cmpb
push
push
sti
loop
mov
push
imulb
jo
inc
dec
das
cwtl
inc
repnz
lods
test
xchg
repz
cmpsl
stc
in
fwait
mov
inc
pop
cmpsl
inc
mov
mov
xchg
inc
jb
cmc
inc
cmc
call
dec
xchg
mov
stos
xor
lret
mov
and
in
das
loopne
or
icebp
mov
popa
scas
pop
xor
dec
in
sbb
fisubrs
adc
lods
shrb
out
fsub
pop
js
dec
lret
mov
cmp
adcl
sbb
sub
pop
cmpsl
xchg
xchg
divl
pmulhuw
stos
mov
and
stc
scas
pop
or
mov
jo
and
lock
rep
and
movsl
repnz
mov
sbbl
lea
andl
inc
lret
mov
mov
test
ret
adc
mov
jl
xlat
test
pop
push
sbb
mov
pushf
adc
cs
outsb
jle
mov
pop
sub
xor
cmp
sub
outsl
or
xchg
lahf
xchg
divb
mov
int
mov
mov
rcl
cmp
ja
cmp
pop
xor
pop
lds
popf
sub
mov
rol
int3
lock
jle
xor
push
add
pusha
test
fldt
lods
stos
addb
fildl
jecxz
fisubl
jnp
out
mov
roll
repnz
cmpsb
mov
jbe
or
loope
add
jg
mov
adc
xchg
push
scas
inc
dec
aas
or
adc
jnp
sub
fs
bound
sub
addr16
addr16
hlt
jns
adc
pop
jmp
push
mov
and
xor
mov
js
and
jae
out
or
pop
mov
cmp
or
fcoms
pop
fwait
jo
dec
adc
push
ret
add
pusha
ja
mov
leave
cmp
xor
mov
adc
out
fsubl
js
adc
push
std
fs
xchg
and
aam
leave
rclb
addb
icebp
add
pop
sub
movsb
fiadds
insl
aam
call
leave
pop
pop
roll
mov
push
pop
daa
jp
enter
mov
fstpt
xchg
xor
loope
sarl
sbb
outsl
insl
faddp
mov
int3
jo
add
xchg
xchg
mov
int
sub
adcl
mov
mov
add
out
jl
push
mov
stc
and
lods
inc
mov
cli
adc
inc
pop
fs
daa
add
pop
pusha
inc
mov
sbb
sbb
and
or
ds
mov
pop
xchg
aas
adc
cltd
mov
lret
cmp
mov
and
xor
ficoml
in
sbb
inc
adc
inc
adc
aaa
jl
jg
pop
cmpsb
fldenv
sahf
mov
daa
cwtl
adc
ja
push
cwtl
push
push
in
adc
pop
fisubl
mov
push
or
aad
jb
inc
movsl
fwait
mov
out
or
mov
rcr
dec
aam
cmp
pop
and
scas
rcrl
sub
mov
sub
push
and
jno
jp
cld
xchg
xor
notl
insb
fs
out
lret
dec
icebp
or
adc
sub
into
ljmp
fsts
test
in
int
add
mov
rcr
sbb
movsb
leave
cs
icebp
push
insl
mov
sub
fcmovnu
mov
inc
sub
mov
xor
sbbl
iret
lods
xor
push
xor
sbb
push
adc
inc
mov
in
scas
jae
jmp
add
rcl
xor
gs
outsb
imul
xchg
daa
ret
sti
mov
mov
inc
enter
push
mov
xchg
shrb
cmp
pop
nop
push
ds
jb
sub
or
cmp
sbb
mov
insb
leave
pop
push
lret
dec
jmp
xor
push
mov
push
jmp
push
jp
fsubs
ljmp
out
pop
in
push
scas
addb
sbb
loop
jge
mov
shll
inc
scas
in
xchg
icebp
xchg
lods
add
shl
dec
out
lock
mov
push
sub
lea
iret
or
test
sbbb
jle
out
scas
dec
mov
push
int3
add
pop
xor
push
dec
adc
inc
adc
inc
inc
es
lret
push
xchg
imul
lods
pop
pushf
loop
inc
inc
loopne
repz
push
cs
lods
mov
pop
ljmp
shlb
imul
rolb
popf
loopne
or
sbb
stc
aad
in
shll
dec
sbb
push
cs
mov
sbb
sbb
mov
jecxz
aaa
lret
les
les
aam
and
jb
movsl
dec
mov
mov
scas
out
ljmp
imul
xor
in
mov
and
iret
and
cmpsl
add
dec
ss
mov
jbe
loopne
mov
mov
or
stos
mov
mov
call
sub
add
pop
gs
mov
xchg
dec
mov
or
daa
jmp
sysret
mov
mov
mov
repz
cmp
mov
mov
pusha
pop
test
mov
shlb
insb
icebp
pop
ljmp
dec
jbe
pop
mov
aad
add
es
les
sbb
push
mov
int3
lcall
pop
test
jbe
mov
adc
mov
xor
mov
xor
dec
and
mov
and
lea
xor
and
int
mov
popf
pop
jmp
xchg
dec
inc
stos
cmp
cltd
sub
fxch
aad
fldenv
std
ja
mov
int3
mov
hlt
aam
adc
push
xor
mov
xor
lods
cmc
dec
push
pop
out
ja
xlat
sbb
out
jno
pop
cltd
xorl
mov
das
leave
jo
iret
sub
xchg
push
sub
lcall
dec
mov
dec
adc
mov
out
mov
cs
mov
ficoml
jecxz
push
push
insl
sub
out
mov
cmpsl
sub
insl
push
lret
roll
sub
xchg
loope
pushf
lcall
pop
out
sub
lret
mov
mov
push
ljmp
in
nop
int
lret
aas
test
cmp
xor
xor
js
xlat
cmp
push
insl
jns
nop
dec
lock
out
movsl
dec
inc
sbbl
rcrl
inc
mov
xchg
xchg
mov
mov
cltd
xor
dec
js
sahf
or
sub
xchg
pop
lahf
jge
push
js
sbb
sbb
arpl
sub
lcall
adc
adc
push
dec
push
in
mov
aad
adc
cmp
inc
loopne
cmp
inc
call
mov
lods
jne
sub
fcmovne
and
movsl
add
sbb
nop
dec
xor
inc
pop
dec
mov
mov
xchg
mov
dec
xchg
es
and
jnp
in
ljmp
cmc
inc
cld
cltd
roll
push
test
xchg
sbb
fwait
adc
sbb
or
out
mov
int3
lea
fsts
adc
mov
and
mov
mov
pop
stos
jne
sbb
mov
and
test
adc
xchg
jmp
ds
rcl
push
and
sahf
or
jo
loopne
outsl
stc
adc
stos
sub
scas
mov
xor
sbb
in
popf
loopne
xchg
mov
sbbb
pop
xchg
push
std
aas
inc
mov
outsb
aam
aam
add
xor
mov
jmp
push
cwtl
mov
mov
cwtl
mov
sete
push
push
mov
loopne
je
imul
inc
xchg
aaa
sti
aaa
inc
jge
sbb
xchg
sbb
addr16
jmp
pushf
cmovo
js
ja
mov
xchg
loope
xchg
int
add
mov
pop
idivb
mov
fadds
add
pusha
and
daa
fdivl
inc
add
xchg
pop
xor
daa
lock
aaa
insl
cmc
jg
pusha
scas
shl
ss
mov
mov
or
jp
cli
mov
or
enter
mov
adc
sbb
test
jne
push
das
adc
stos
sub
ja
inc
loopne
xlat
imul
xchg
xor
popf
cmp
mov
jno
lods
sbb
jno
mov
std
xchg
mov
add
pusha
xor
fadd
cmpsl
and
xor
cs
ret
dec
sub
xor
sbb
push
rcrb
call
ret
xor
jp
and
mov
jbe
jns
outsl
sbb
inc
pop
mov
int3
xlat
test
mov
in
mov
imul
add
jge
movl
jb
push
lock
mov
loopne
lahf
adc
ja
notb
push
int
insl
loop
and
aam
ss
push
jle
hlt
je
aad
cld
and
add
stos
cmp
stos
mov
xchg
shrb
inc
cli
xor
jne
lcall
or
push
shrb
jo
es
ljmp
mov
rcrl
je
jmp
insl
sbb
adc
dec
stc
insl
mov
daa
xor
push
rcll
cmpsb
popf
pop
std
push
adc
push
subb
mov
cli
jl
xor
sub
pushf
or
xor
jp
mov
lret
cwtl
das
pop
mov
sbb
andb
push
ret
pop
and
fldcw
repnz
call
pop
add
shrl
test
mov
stc
idivl
iret
loope
sti
fbld
insl
inc
cmp
lock
test
jmp
xchg
mov
xor
mov
pop
cmc
dec
cld
aas
push
adc
mov
sbb
clc
test
dec
pop
push
je
ds
jno
jne
aaa
or
mov
call
mov
jg
aad
outsl
adcl
cmp
shll
or
xor
stos
ret
in
sub
adcb
ret
fistps
jmp
jno
xchg
out
lret
mov
roll
jae
bound
arpl
push
or
lahf
mov
lea
in
test
mov
pop
inc
subb
inc
and
ficoml
aam
popf
imul
mov
push
sub
in
cmp
shll
leave
shrb
cmpsb
add
iret
adc
sti
dec
or
dec
cmp
ds
cwtl
jae
inc
stc
test
cmp
sbb
cmp
ss
es
pusha
add
or
inc
stc
and
arpl
movsb
inc
fistpl
aaa
jle
dec
lcall
testl
pop
lods
jno
adc
jl
in
cmp
pushf
fwait
add
sahf
mov
fadds
out
testb
aas
out
loop
loope
inc
cmp
sbb
cmp
mov
xchg
jae
gs
imul
xchg
loopne
inc
out
dec
adc
je
cmp
xchg
loope
jnp
cmp
imul
daa
pop
pop
mov
ficoml
mov
sbb
and
and
cmp
enter
lods
push
cltd
mov
ficoml
int
repz
mov
xchg
push
nop
das
movsl
push
fdivrl
cmp
rorl
and
cltd
sbb
push
rorb
dec
cmp
mov
cmp
mov
mov
or
push
adc
test
cli
adc
or
push
outsb
cltd
push
pop
leave
in
pushf
and
and
pusha
sub
daa
test
push
sarl
cmpsb
inc
mov
fimull
insb
repnz
jp
jnp
cs
ss
push
jge
jb
rorb
mov
add
popf
mov
dec
ljmp
xchg
push
test
jle
push
loopne
dec
dec
and
xchg
cmp
shrb
test
sub
mov
movsb
xchg
or
sbb
jmp
pop
pop
mov
hlt
lods
dec
repz
sarl
les
aad
jb
jp
loope
mov
pop
or
in
cmpsl
mov
mov
push
imull
stos
js
arpl
fs
xor
repnz
lcallw
add
insb
mov
clc
push
dec
add
shlb
cmpsb
lahf
fwait
mov
bound
mov
jo
xor
mov
mov
test
and
popa
mov
mov
sub
xchg
fsub
in
mov
mov
jns
jns
mov
or
cmpsb
jmp
xor
int
xlat
push
or
arpl
imul
pushf
hlt
dec
mov
imul
movsb
es
loop
lods
push
pop
sbb
bound
push
arpl
cmpsl
scas
xor
lods
cmc
out
or
out
mov
jno
mov
test
xlat
mov
clc
xchg
add
ja
nop
nop
push
cwtl
inc
into
in
out
arpl
rcll
negb
movsb
pusha
mov
adc
mov
mov
in
sub
mov
jno
outsb
inc
jne
xor
mov
jae
cs
sub
cmp
nop
lret
hlt
xchg
xchg
xor
fdivrs
inc
aam
xor
stc
cmp
repnz
jnp,pn
xlat
mov
movsl
lods
add
mov
cmp
jb
es
shrb
adc
call
or
push
sub
push
cltd
ja
sti
jmp
fmull
adc
pop
mov
xor
bound
jae
mov
jl
loope
sub
outsb
and
sbb
scas
incb
aas
cmp
mov
fwait
and
dec
mov
testb
je
fs
mov
aaa
xor
xor
mov
leave
and
push
enter
push
push
lret
je
inc
repz
jbe
fsubrp
cmpsb
scas
push
das
out
faddl
cmp
mov
xor
jb
bound
mov
push
mov
inc
ja
in
out
cmp
jb
aad
jg
sub
pop
push
pop
and
fwait
out
popf
fwait
xchg
fists
sub
ret
jmp
cmc
xor
or
jbe
inc
push
into
or
mov
pop
sbb
mov
aad
dec
sbb
jp
xchg
mov
js
mov
sub
repz
push
dec
lods
add
imul
xor
add
mov
xlat
jnp
mov
out
push
dec
rclb
lcall
iret
pushf
aaa
mov
jp
cmp
dec
movsl
inc
out
mov
stos
pop
sbb
pcmpgtw
xchg
fadds
adc
jge
cmc
dec
insb
mov
mov
or
push
xlat
pop
and
push
sbb
xchg
aad
pusha
sub
mov
pusha
shll
fdivrl
or
add
sub
sub
mov
sub
push
sub
jge
pushf
testb
stos
push
inc
arpl
jg
mov
ja
cli
outsl
or
mov
movsl
test
imul
int
hlt
iret
ljmp
mov
int3
push
xchg
pushf
jbe
incl
cli
movsl
xchg
inc
lahf
xor
bound
icebp
ss
adc
xchg
or
dec
loopne
sbb
fisubl
xor
mov
push
je
cmp
ljmp
pop
das
cli
inc
sub
rolb
mov
scas
cmc
insl
testl
mov
ret
ret
xor
mov
xchg
pusha
mov
xchg
test
xor
adc
std
outsl
cltd
ret
es
mov
or
pop
mov
mov
repnz
adc
stos
or
jmp
leave
fcmovne
lret
dec
stos
bound
dec
jae
test
mov
fwait
arpl
add
add
jo
xchg
shlb
shll
int
jnp
ja
jcxz
loope
fucom
mov
xor
ja
or
xchg
lods
mov
xor
sbb
add
cltd
mov
sbb
dec
loope
sahf
dec
sarb
ds
xlat
mov
xchg
mov
pop
jle
ret
out
or
sbb
push
enter
test
adc
subl
xor
shr
push
je
arpl
cld
sub
hlt
dec
cmp
xchg
xor
mov
out
mov
testb
lods
ror
test
movsb
test
mov
cltd
add
xchg
loopne
int3
and
mov
mov
inc
push
test
jp
subl
jo
mov
fdivrs
mov
sahf
dec
push
mov
fimull
stc
jne
lods
adc
loope
insb
xor
test
outsb
cmp
fldt
dec
subb
and
pushf
inc
mov
jne
sar
inc
inc
ret
xorl
mov
mov
nop
or
sbb
in
sbb
outsl
fldcw
fistl
rol
inc
repz
fcomps
adc
sub
or
adc
pop
add
ja
notb
cmpsl
fnstcw
push
add
xor
sarb
jmp
bound
fbstp
lods
sti
adc
pop
pop
fadd
incl
clc
xchg
cmp
xchg
xchg
lcall
enter
mov
stc
dec
repnz
loope
es
in
sti
popa
daa
xchg
sbb
andb
js
sub
loop
adcl
rcrl
popa
cmp
mov
fisubl
loope
sbbl
cld
lahf
or
jg
sub
cmp
mov
cmc
inc
mov
push
adc
lcall
loop
and
lret
add
sub
lds
inc
mov
fists
pop
jecxz
push
ret
push
pop
int3
adc
add
icebp
mov
cmp
xor
aaa
mov
or
std
arpl
outsb
rcrb
sbb
jmp
push
xor
pusha
int3
add
popf
lahf
fadd
repnz
add
pop
ds
repnz
shlb
outsb
addl
dec
fiadds
divl
shlb
adc
pusha
jle
dec
dec
sub
pop
insb
addb
orb
mov
das
ljmp
mov
mov
incb
dec
rorl
push
adc
xchg
lret
mov
jp
leave
sahf
pop
jmp
push
lret
mov
push
pop
ja
addr16
xor
das
jmp
xchg
dec
sbb
in
in
pop
popa
xchg
inc
or
loope
sbb
mov
dec
fwait
dec
mov
mov
shl
mov
fists
pop
jg
es
nop
xor
xor
cmp
fistl
or
mov
ftst
stos
push
clc
ljmp
xlat
inc
cmc
cmp
and
xchg
lret
mov
jne
repnz
pop
lcall
cmpsl
adcb
sbb
mov
jl
mov
div
adc
and
dec
fcmovu
sub
pop
loop
pop
mul
xchg
sbb
outsb
adc
in
mov
ljmp
les
loopne
out
or
les
pop
add
movsb
pop
xchg
cmp
and
stc
xchg
sub
inc
lods
cmpb
mov
pop
call
dec
lea
xor
mov
pop
into
inc
mov
out
lods
pop
lahf
mov
enter
adc
xchg
sub
or
lahf
sbb
mov
sbb
dec
push
dec
pusha
adc
divl
aam
jl
insl
sahf
bound
lods
idivb
add
push
inc
xchg
es
fstpl
arpl
inc
mov
fwait
sti
add
jge
cwtl
lret
ja
outsl
fsubrl
add
in
mov
ret
mov
cwtl
cwtl
pop
jg
add
repz
mov
xchg
xchg
jno
gs
cld
inc
shr
lret
pop
dec
out
xchg
sub
pop
push
cmp
dec
push
stos
insl
add
push
in
add
lock
cs
stc
or
jmp
iret
sbb
cmp
cld
fdivl
mov
stc
add
out
ljmp
push
inc
mov
movsl
jge
and
push
mov
inc
push
mov
and
and
lret
loope
lods
add
cld
rcll
je
insb
xchg
jbe
and
cmp
cmp
out
hlt
pop
dec
aas
and
jge
inc
sub
adc
cld
xchg
lock
cmp
lods
push
sahf
jbe
in
lods
or
fwait
add
xor
pop
mov
mov
repnz
adc
daa
cmpsb
rclb
lcall
dec
jecxz
push
xlat
cmpsb
lods
ja
aas
cltd
gs
push
xchg
mov
in
ja
adc
arpl
lods
ficompl
dec
out
jmp
sbb
int3
rorl
lahf
lret
dec
adc
jb
out
fadd
mov
scas
pop
sbb
lret
sbb
cmpsl
jne
int3
xchg
pop
repnz
jno
inc
prefetchwt1
movsb
xor
push
ret
mov
lods
clc
xor
mov
and
pushl
push
ret
dec
stos
mov
pop
cmp
pop
testl
int
jbe
cmc
pop
push
int3
push
adc
es
add
test
ss
cld
dec
jae
call
mov
cmp
shlb
or
xor
xchg
aad
stos
cmpsb
mov
and
adc
or
pop
insl
pop
pop
out
arpl
call
cwtl
push
jns
pop
or
fwait
adc
mov
js
xchg
inc
push
pop
movsl
pop
jl
push
pop
dec
dec
hlt
and
cltd
mov
mov
pusha
aas
out
xchg
xor
xchg
sbbl
mov
pop
dec
movsb
sub
mov
jge
cmp
in
in
and
push
int
pop
ja
je
pop
loop
popf
ljmp
sbb
mov
cwtl
fsubrl
out
jle
add
loope
push
mov
jnp
fmul
pusha
push
clc
int3
mov
inc
dec
mov
dec
and
mov
sahf
mov
push
jno
sub
movsl
xor
mov
push
or
out
clc
mov
and
pop
inc
movsb
inc
in
jb
xor
xchg
push
jle
pop
aas
lods
pushf
xor
cmp
loopne
mov
xchg
jb
xor
dec
mov
xchg
je
movsl
fidivrl
jp
or
adc
mov
inc
push
cmp
int3
int
xor
cmp
je
scas
stc
sti
lret
imul
xlat
push
mov
xlat
dec
sbb
lret
lret
out
lret
inc
and
testl
cli
test
dec
mov
mov
jl
fisubrs
cwtl
mov
aas
into
out
jno
push
into
and
xchg
lock
fldenv
daa
xchg
pop
cmp
pop
cmp
add
push
mov
repz
mov
xor
mov
sub
jnp
sahf
aas
inc
hlt
js
cltd
sti
push
mov
mov
aam
add
sub
and
mov
inc
sub
cmp
bound
cltd
mov
pusha
or
mov
test
out
lea
in
mov
cmpsl
lret
jge
jecxz
loope
and
adc
sar
sbb
or
orl
shlb
lods
adc
fdivrp
jle
adc
inc
cmp
aaa
jno
loope
sub
jp
mov
subb
xor
pop
outsl
ss
pop
call
add
mov
pushf
stc
ljmp
push
popf
push
orb
fistpl
inc
movsl
inc
dec
ja
push
push
fdiv
fisttps
dec
add
mov
pusha
adc
mov
call
sahf
arpl
in
aaa
cld
pop
loop
loopne
arpl
add
fistpll
outsb
mov
mov
dec
imul
or
outsl
in
mov
popa
mov
sbb
mov
jne
ffree
lahf
cmpsb
cmp
mov
mov
jno
mov
xchg
std
xor
jg
xor
ljmp
aad
clc
mov
repnz
mov
bound
add
sub
test
jl
inc
inc
jp
add
mov
mov
mov
popf
and
dec
js
fists
imul
push
and
xor
push
mov
fisubrs
mov
shrb
ret
pushf
stos
vpunpcklqdq
mov
cwtl
cmp
test
push
icebp
xchg
ljmp
dec
push
cwtl
fstpl
icebp
and
push
pop
test
cs
jb
lahf
pop
add
loop
xor
inc
push
xchg
adc
push
mov
out
jp
nop
fsubr
jns
imul
and
xor
add
call
loope
mov
lea
sub
cltd
jmp
stos
stc
or
xlat
xchg
jae
cmc
in
push
mov
cwtl
inc
js
gs
das
addr16
hlt
push
xchg
xchg
bound
hlt
mov
int
hlt
adc
fmuls
mov
cmpsl
in
or
add
adc
dec
inc
insb
lods
paddd
jle
repz
cld
xor
mov
push
ja
xchg
mov
divl
stos
sahf
cmp
jg
fiaddl
sub
fidivrs
mov
add
popa
out
push
mov
sbbb
vmwrite
outsb
lds
or
push
jmp
in
mov
paddusw
mov
pop
lret
sarb
pop
jl
xlat
movsl
push
rorb
or
mov
ficompl
inc
inc
adc
add
cmc
ret
popf
sbbb
loope
in
inc
mov
es
mov
cltd
xor
mov
dec
insl
and
lock
inc
stc
and
jecxz
and
aaa
repnz
or
cli
lret
divb
add
iret
mov
xchg
cmp
jnp
push
or
fs
push
sbb
mov
fstl
or
jns
mov
pop
jg
int
cmp
pusha
rcll
loopne
add
push
fldenv
push
pop
pop
jmp
bound
xor
mov
in
push
daa
mov
sbb
pop
scas
mov
ljmp
imul
pop
addr16
and
aam
ljmp
mov
dec
dec
lcall
ss
dec
cmp
rcll
push
add
jb
adc
mov
call
dec
es
into
xchg
icebp
sub
pop
or
repz
jmp
shll
daa
shlb
jns
je
jno
fiadds
pop
shr
out
xchg
shl
mov
inc
in
sbb
pop
into
jne
or
push
dec
cmpsb
inc
xchg
inc
in
imull
in
mov
cmpsb
pop
add
xor
int3
rorl
out
jle
lds
add
popf
shlb
jns
stc
pop
fildll
push
fs
loop
jno
adcb
test
mov
scas
jle
jle
mov
cltd
xchg
sub
jp
cmp
cmp
sbb
daa
or
jg
in
stos
sub
sbb
shlb
call
add
movsl
nop
jecxz
xor
test
or
xchg
inc
repz
push
sub
dec
repnz
lea
add
sub
and
jnp
pop
bound
nop
ret
pop
dec
adc
pop
dec
in
push
inc
xchg
fidivrl
bound
jl
jg
nop
mov
cwtl
mov
and
jge
push
inc
in
sub
shrd
das
pop
call
add
xor
inc
adcl
jne
jno
sti
aaa
jl
sti
mov
dec
outsl
jl
sub
pop
aam
mov
add
jae
jb
pxor
insb
xchg
out
scas
cmp
xchg
xor
xchg
adc
lods
mov
cmpsl
cwtl
fwait
rcl
stc
jge
cmp
pop
outsb
lea
mov
fnstsw
sbb
xorb
stc
xchg
out
ja
mov
cmpsl
jbe
xor
fs
les
ret
pop
cmp
dec
cmp
bound
xor
cmp
dec
push
mov
repz
in
or
xchg
in
jne
dec
inc
push
dec
lahf
divb
jle
pop
add
add
in
pop
mov
test
enter
inc
push
addr16
sub
cmp
mov
dec
pop
xchg
cmp
int
mov
push
inc
dec
pop
mov
or
or
mov
lahf
in
cmp
inc
in
in
ja
test
data16
jmp
jnp
mov
out
mov
outsl
test
stc
out
mov
sub
push
jae
aaa
inc
call
popf
lods
xor
xchg
cmp
int3
jb
xor
inc
ret
lods
mov
add
mov
cwtl
mov
push
popf
fdivrs
pop
aad
jg
sub
or
lret
shrb
mov
inc
rolb
out
dec
fcmove
inc
jp
and
test
push
add
loop
in
mov
or
xchg
mov
cwtl
popa
fs
in
xlat
in
push
test
rclb
mov
sbb
cmp
xor
clc
imul
or
stos
dec
int3
inc
sahf
jns
xor
hlt
out
pop
or
lcall
bound
test
fcmovnbe
jo
test
xor
sbb
fwait
mov
pop
insl
inc
jnp
sti
sub
imul
stc
enter
or
jbe
js
dec
es
sub
insb
sbb
ret
push
insl
jb
xchg
stos
clc
aaa
jg
out
cmp
pop
pusha
mov
dec
xor
lods
cmp
ds
out
pop
cmp
push
pop
xlat
push
call
sub
decb
add
jb
sti
inc
add
mov
inc
or
mov
adc
jae
jp
push
push
and
jmp
stos
sbb
sbb
cmp
in
inc
in
shrl
push
mov
aam
dec
iret
fbstp
decb
in
jecxz
in
out
mov
and
cmp
aas
aam
jb
sub
sbb
test
push
imul
jmp
js,pn
jmp
jo
movsl
jmp
mov
subl
add
fistl
cld
gs
mov
ds
fistpl
xchg
xor
or
mov
sub
mov
call
ds
movsb
cmp
cltd
cli
xchg
and
mov
fsubrs
or
cmc
push
das
inc
pop
sub
mov
dec
push
fsubp
sbb
loopne
dec
movsl
push
orb
nop
cmpsl
stos
in
inc
sub
stos
nop
movsb
mov
pusha
fidivrl
les
push
cmc
insl
and
xor
mov
cwtl
hlt
xchg
jno
out
imul
sbb
das
sbb
xchg
nop
ret
xor
mov
mov
test
rol
push
mov
mov
das
dec
or
std
daa
hlt
fwait
xor
lods
push
andl
sbb
es
xor
lds
out
xor
and
push
aas
sbb
jmp
lret
xchg
mov
and
jle
loopne
imul
cmpb
stos
outsb
inc
mov
add
outsl
jle
data16
mov
sub
pop
jb
out
pop
fwait
test
pop
add
dec
inc
add
out
dec
push
push
jns
dec
repnz
sub
mov
test
add
out
add
mov
jns
cmc
fwait
int3
xchg
test
outsl
fiadds
imul
dec
mov
test
and
fcmovu
sbb
popa
add
and
xchg
std
mov
dec
divl
inc
loope
add
data16
mov
cmp
mov
inc
cmp
jge
mov
popa
adc
push
cld
mov
xchg
inc
and
pop
mov
add
adc
pop
xchg
adc
repz
out
adc
mov
lds
mov
sbb
nop
jbe
inc
dec
mov
pop
cwtl
test
dec
hlt
pushf
add
mov
scas
mov
call
jecxz
aam
sub
or
testb
fxtract
jmp
or
mov
sub
push
sti
mov
push
lret
out
rcl
dec
into
std
imul
movsb
sti
fidivl
clc
xor
pop
cs
or
dec
mov
jno
loop
jno
ficoml
jmp
loopne
mov
xchg
mov
fildll
fldt
push
scas
push
shlb
add
imul
into
push
addl
das
loopne
and
shr
mov
mov
and
push
pop
scas
pop
xor
cwtl
insl
lahf
dec
xchg
xchg
clc
pusha
andb
add
and
push
dec
jmp
test
lock
push
jle
sbb
out
cmpsl
mov
test
dec
inc
sbb
push
jne
or
iret
lret
jp
jl
js
into
test
sub
subb
mov
shr
mov
imul
mov
mov
fwait
xlat
pop
mull
clc
call
add
je
mov
testb
lcall
jno
aaa
dec
aad
iret
sbb
inc
cmp
lds
or
inc
jo
or
mov
addr16
shlb
sub
in
shrl
and
lea
mov
jle
popf
add
xchg
lret
pop
les
testl
arpl
push
pop
jnp
mov
cs
pusha
ret
lcall
cmp
add
xlat
push
jbe
shrb
sub
aam
xchg
jmp
and
xchg
icebp
adc
push
cmpb
adc
popf
movsb
or
jge
add
ja
dec
subl
shrb
mov
divl
push
mov
dec
xchg
xchg
xchg
fwait
cmpsl
les
mov
mov
mov
fwait
jmp
mov
mov
xorl
add
add
inc
mov
shl
push
daa
pop
inc
and
mov
dec
stos
and
jmp
xor
jmp
sahf
mov
cmp
cwtl
xchg
lret
lret
pop
loop
rorl
adc
cmpb
fstl
xlat
push
in
jmp
rcrl
lock
sub
inc
leave
and
and
cld
hlt
gs
dec
js
adcb
nop
add
jmp
cmp
adc
xchg
push
aaa
inc
movsl
mov
xor
loop
orl
aam
icebp
in
loop
mov
jl
and
adc
inc
or
pop
fs
add
fsubrl
push
repnz
ror
ljmp
ljmp
addr16
push
in
imul
mov
test
mov
lock
dec
xor
aam
out
pop
push
lods
lds
jnp
mov
outsl
pop
mov
iret
ss
div
push
das
cmc
mov
frstor
pop
rclb
movsl
sbb
and
inc
sub
sahf
push
mov
mov
pop
and
sbb
cmp
pop
xor
cltd
xchg
data16
shrb
test
sub
mov
and
push
push
lods
stos
mov
js
cwtl
dec
xor
out
xchg
lods
adc
cmpsb
push
fisttps
cmp
outsl
js
les
and
outsb
or
mov
cld
jp
xor
call
movl
into
mov
fistps
in
sahf
inc
test
lret
enter
into
fs
in
pop
nop
out
cmpsb
push
push
in
popa
inc
adc
inc
push
cs
je
data16
and
push
insl
mov
xchg
push
add
daa
pop
mov
das
mov
jmp
mov
scas
fidivrs
jne
in
mov
test
adc
mov
lahf
loopne
cmp
add
jnp
adc
ljmpw
jle
imull
cmpsb
mov
in
mov
fcos
push
hlt
or
and
xchg
xorl
adc
fistpl
xor
inc
lea
sbb
orl
push
pusha
sub
mov
pop
xor
inc
inc
jne
in
cltd
roll
or
outsl
mov
jno
popa
push
fbld
sub
insl
stc
add
sub
test
test
clc
out
lea
cmp
cmp
lea
and
dec
push
jg
hlt
mov
jae
lea
xchg
pushf
pop
push
mov
pushf
cmpsl
mul
lea
inc
dec
mov
test
sbb
cs
jae
push
imul
lods
jb
popa
fcompl
dec
pslld
jge
es
add
out
adc
in
inc
fists
clc
jns
shll
int3
push
out
and
fs
stos
xchg
xor
xchg
push
dec
mov
jge
push
outsb
push
and
pop
and
jne
cmpsl
jecxz
mov
mov
sbb
mov
or
imul
clc
and
lds
add
add
aad
mov
das
push
jae
inc
cwtl
sub
sub
jp
jmp
in
dec
call
aam
sti
mov
mov
cmpsb
jle
test
rolb
sbb
dec
imul
cmp
mov
sbb
je
mov
or
fnstsw
test
insl
inc
jo
dec
clc
in
cmpb
xchg
inc
sub
mov
inc
pop
push
pop
test
dec
cmp
mov
mov
mov
mov
push
adc
and
aaa
xchg
stos
jbe
xor
rcrb
jb
popa
outsb
fsubl
mov
mov
jb
mov
cwtl
cmp
rol
out
cmc
sub
ret
xchg
sub
repnz
stc
sbb
stos
jo
xor
pop
xor
dec
shrb
sub
sbb
pushf
outsl
test
iret
xor
push
xchg
aad
push
sti
stc
pushf
or
jg
mov
xchg
js
fstps
add
int
fadds
out
cli
stos
push
sbb
sbbl
push
lahf
cmp
cmc
xor
mov
push
push
push
imul
lret
inc
leave
push
aad
mov
jl
mov
stos
je
cmpsb
js
fsubs
ja
iret
jp
jnp
xor
gs
xor
or
adc
mov
cwtl
pop
xchg
xor
push
bound
jne
xchg
loope
ficompl
jge
jecxz
imulb
bt
stos
jo
xor
loop
pop
push
out
ss
dec
pop
mov
loopne
jl
scas
repz
testb
ljmp
iret
enter
ja
sub
movsb
push
daa
ds
or
and
aad
inc
shrl
sarl
mov
jmp
push
idivl
pop
addb
mov
pusha
pop
mov
movsl
mov
cmpsl
mov
push
sarl
call
sahf
fiadds
icebp
icebp
in
mov
loopne
sti
scas
test
add
sub
or
and
pop
push
push
jnp
sbb
fs
xchg
sbb
sbb
xor
mov
sahf
add
dec
movsl
jbe
std
andl
out
jl
dec
push
jne
and
or
mov
ljmp
mov
push
mov
mov
xlat
insl
cmp
mov
jp
inc
inc
xor
mov
and
push
movsl
sbb
iret
repz
jno
ror
lahf
add
cmp
xchg
nop
andb
mov
mov
mov
subb
fldl
sbb
jnp
fistl
je
cmp
sub
adc
dec
negb
cmc
push
jb
stos
push
daa
ror
sbb
sub
rclb
sbb
push
push
and
inc
subl
hlt
cmp
loope
aas
push
fsubs
sub
mov
xchg
add
ljmp
test
mov
jp
sahf
dec
test
xor
sub
rclb
test
fldt
xchg
and
pop
dec
add
dec
xor
std
jb
repz
lret
dec
psubb
push
or
lcall
insl
aad
and
mov
and
repnz
adc
jns
sarb
sub
dec
insb
adc
std
bound
xchg
sub
lods
daa
or
mov
int
mov
xor
pusha
adc
jge
iret
xor
pop
daa
xchg
subb
cmp
insb
aaa
ja,pn
mov
jns
cld
rolb
hlt
lret
sub
inc
sbb
sub
xor
cli
out
xchg
xchg
aam
jnp
adc
mov
xadd
xchg
rclb
cmp
jecxz
ret
lcall
jbe
leave
loope
aaa
repnz
dec
sbb
and
adc
xchg
xor
arpl
mov
sarb
xchg
inc
or
jmp
lds
push
push
mov
and
mov
add
add
mov
cmp
loope
cwtl
repz
mov
dec
in
sub
pop
cld
popf
push
fiadds
jbe
push
icebp
sub
lret
xor
push
loopne
add
and
adc
arpl
arpl
lds
aaa
loopne
pop
mov
int3
inc
cltd
dec
mov
lock
pusha
pop
adc
jmp
jle
cmp
dec
xchg
or
sbbl
pop
push
push
inc
xorl
push
cmp
lret
rorb
out
adc
dec
and
test
shrb
add
int3
call
and
push
insl
fidivrl
dec
xchg
cmc
movsl
sbbl
dec
clc
sub
mov
pop
sbb
add
popl
lods
in
sti
dec
xor
pop
in
loopne
mov
jns
add
cmp
xchg
inc
and
int
sub
mov
sbb
in
cs
int3
push
lods
int
adc
js
add
or
sub
mov
repnz
and
mov
daa
shlb
mov
ss
mov
gs
push
es
pop
sarb
or
cmp
mov
aas
sbb
and
sarl
cmp
add
shrb
cmc
in
or
data16
xchg
pop
adc
ds
cmp
imul
and
fistps
aas
xchg
or
push
adc
movsb
ficomps
ljmp
inc
mov
out
sub
repz
leave
imul
mov
or
cmp
and
jae
xchg
pop
stos
xchg
dec
adc
push
loope
das
mov
fbld
aaa
mov
jbe
dec
andb
lea
arpl
hlt
lock
xchg
pop
mov
mov
jmp
sub
decl
loop
xlat
mov
xor
sub
fld
xchg
ror
pop
jge
or
lods
push
cmp
mov
movsb
adc
jl,pt
in
xor
inc
inc
mov
pop
mov
rorl
sub
test
fmull
leave
add
xchg
lret
xchg
add
fstpt
sub
mov
dec
es
jae
pop
popf
cld
cs
xorl
in
pop
dec
push
sahf
fldenv
orl
or
enter
mov
push
rolb
sahf
pushf
mov
mov
out
cs
inc
mov
mov
adc
sbb
sbb
sbbl
outsl
loopne
rclb
sub
sub
aaa
cli
sbb
jb
jo
and
dec
inc
rorl
mov
xchg
aad
jecxz
push
xchg
inc
push
sbb
push
int3
xchg
sbb
ljmp
push
cltd
pop
inc
xchg
add
add
jl
ficompl
xor
nop
stos
xor
leave
add
xor
in
outsb
scas
mov
test
not
ljmp
inc
cmp
sti
sbb
xchg
mov
pop
popa
ja
cltd
ffree
scas
push
xchg
out
popf
cltd
inc
rcrl
test
shll
bnd
cmp
pop
lea
mov
dec
repz
jo
jae
fdivrp
mov
xor
lahf
push
pop
push
mov
sbbl
stos
and
stos
xor
add
sbb
ljmp
and
insl
popf
mov
out
mov
fmuls
dec
sub
sbb
push
or
mov
fwait
gs
sub
push
lods
out
in
pop
pushw
lret
inc
inc
mov
fs
imul
dec
sbb
and
andb
xor
mov
lahf
ret
jae
inc
inc
movsl
pop
or
scas
jge
add
into
ss
shl
ss
js
add
cmc
add
iret
inc
cli
sbb
imul
inc
cli
fisubs
inc
xor
dec
fwait
sbb
loop
push
lret
rcrl
lret
testb
xor
clc
sub
jg
mov
xor
ret
fiadds
ret
pop
insb
push
mov
pop
mov
out
xchg
xor
sbb
test
faddl
enter
xchg
add
xchg
orb
mov
mov
sti
sti
fistps
push
dec
inc
repnz
pop
js
lcall
std
push
xorl
or
fsubr
xor
xor
scas
into
mov
notb
add
and
jne
push
sbb
inc
push
hlt
sbb
es
inc
jecxz
jne
pop
movsl
repz
pop
mov
mov
add
incl
jnp
adc
sbb
xadd
inc
insl
add
movsb
in
dec
push
mov
cmc
sbb
sbb
dec
mov
inc
mov
mul
xchg
mov
inc
hlt
lret
imul
xlat
jnp
ds
movsl
imul
jae
mov
aam
in
lock
aad
sarb
out
lret
lahf
mov
mov
mov
popf
and
das
mov
aad
mov
xchg
mov
call
dec
mov
mov
loop
aaa
jp
daa
pop
jns
push
inc
xorl
and
rol
dec
imul
pushf
adc
sbb
adc
enter
cmp
mov
inc
std
aaa
jo
in
arpl
push
cs
jecxz
jno
incb
push
xchg
xor
and
add
dec
jb
adc
xor
shl
fcomps
push
scas
mov
push
jb
out
mov
jp
aas
dec
popa
frstor
cmc
xchg
dec
aam
jbe
cs
fcompl
jno
lea
mov
shlb
pusha
pop
pop
sbb
add
sbbl
jbe
push
inc
and
stc
jne
push
sahf
outsl
scas
inc
dec
fs
cmc
lret
sub
decb
stc
std
rorb
ror
inc
dec
imul
adc
cltd
adc
iret
xchg
adc
int
pop
jne
popf
neg
xlat
dec
lret
jnp
add
clc
mov
orb
je
rclb
jmp
std
mov
sub
hlt
sub
scas
sub
mov
leave
shll
movsl
lea
lret
clc
jns
stos
cmc
pop
cmp
bound
or
lds
fisttps
mov
add
pushf
in
cmp
pop
xchg
addr16
ret
fimull
and
mov
adc
push
pusha
aam
dec
xor
xchg
repz
xchg
call
incl
out
fsubrs
inc
ret
aad
jmp
dec
xor
push
pop
sub
int3
adc
adc
pop
shlb
sub
out
lcall
cmpl
sahf
jo
push
mov
inc
testb
xlat
push
dec
out
stc
scas
sub
or
pop
sub
cmp
shl
mov
mov
nop
jmp
sbb
scas
ror
stc
xor
cli
pop
fstl
mov
dec
lock
stos
jg
fisttpl
sub
xchg
into
into
add
or
mov
std
outsb
or
shrl
mov
push
xor
icebp
inc
popf
icebp
mov
push
and
imul
enter
pop
xchg
adc
stc
jg
loope
jge
mov
hlt
lahf
dec
movsb
out
mov
jne
lds
hlt
subl
sbbb
xchg
pusha
lcall
sahf
imul
data16
fcoms
lds
bound
push
mov
push
or
std
jle
mov
xlat
and
and
fnstsw
adc
lock
adc
hlt
cmp
push
mov
fcoml
mov
stos
js
fsts
dec
gs
lock
cmp
hlt
fldt
xchg
inc
mov
ss
inc
xchg
push
out
repnz
cmp
lds
testl
ds
je
pop
mov
mov
cmp
xor
pop
fstp
pushf
lret
daa
sbb
vpcmpgtd
neg
jp
ds
xchg
inc
rep
pop
sub
jno
es
rcr
inc
xor
or
lret
xor
cmp
pushf
dec
loopne
lods
daa
mov
mov
pop
fidivs
and
inc
testl
cltd
xorb
aam
out
jae
daa
jmp
sub
fidivrl
scas
jl
inc
test
lds
push
pmulhw
int
cmp
mov
push
cmp
popf
sbb
test
aas
sti
pop
cli
add
mov
pusha
add
cltd
in
pop
mov
in
rcr
dec
lret
pop
in
mov
daa
add
pop
xor
push
rcll
mov
jno
mov
test
mov
ja
xchg
shl
lret
push
cmp
lea
adc
push
mov
fwait
outsl
fiaddl
mov
and
idivb
mov
aam
mov
cmp
test
pop
xchg
dec
mov
push
push
jnp,pt
out
fwait
sub
inc
sbb
movd
mov
inc
xchg
xor
xchg
inc
outsl
and
xchg
out
mov
in
insl
hlt
mov
mov
mov
mov
dec
das
iret
cwtl
jns
xchg
daa
cltd
inc
jmp
pop
insl
idivl
xchg
repz
daa
jmp
sti
pop
pop
push
inc
or
jno
jg
xor
push
pop
jge
mov
idivb
xor
scas
addr16
loopne
cmp
push
push
lcall
push
xor
jb
xchg
in
push
ds
or
stos
lock
rclb
loope
jbe
cmp
ret
pop
stc
cs
popa
sbbl
cmp
jl
fcoms
add
dec
push
add
int
xchg
dec
fisttpl
cs
stos
movsl
xlat
jae
dec
bound
sub
hlt
jmp
stc
jne
jmp
sarl
sub
shlb
popl
out
pop
or
sub
cmp
rclb
mov
inc
adc
sti
repnz
pushw
nop
out
cmp
pop
pushf
and
push
adc
sarb
jb
sbb
leave
or
sub
hlt
testl
jmp
push
gs
xchg
es
xchg
movl
aaa
out
push
pusha
pop
pop
sub
mov
pop
jge
fimuls
adcb
mov
sbb
stos
outsl
pop
add
int
pop
sbb
lods
out
sbb
dec
movsl
fidivs
scas
das
jecxz
and
in
imul
cmp
dec
inc
jno
out
fistps
lock
push
pop
xchg
insl
push
dec
inc
push
iret
js
and
pop
jmp
mov
repz
loope
jno
cs
lret
add
loopne
pushw
and
mov
negl
xchg
mov
sub
xchg
imul
fwait
mov
jmp
mov
inc
adc
inc
xchg
imul
xor
outsb
outsb
mov
or
movsb
mov
gs
fstpl
lds
cmp
dec
push
ffree
mov
pop
jmp
int
jo
and
in
data16
xor
pop
cmp
inc
xchg
mov
scas
xor
fs
loope
dec
rcl
in
aaa
addr16
or
in
xchg
fnstcw
cmp
xlat
lret
scas
addr16
xor
mov
stc
sub
xor
cmp
cmp
cltd
int3
push
cwtl
fcoml
lahf
arpl
push
ret
push
ret
pop
push
push
dec
jns
popa
pop
stos
sbb
fs
mov
repz
insb
aas
inc
aad
push
push
int
cli
sbb
jne
test
mov
lods
shrl
arpl
dec
and
jb
jbe
dec
push
fldcw
jbe
sbb
dec
xchg
mov
xchg
outsb
in
scas
test
stos
mov
adc
push
andb
insb
dec
push
hlt
push
pop
add
and
lret
rorl
add
inc
insb
dec
jge
scas
mov
sub
stos
jo
mov
movsl
fldt
push
adc
xor
jecxz
paddsb
dec
mov
inc
rol
mov
mov
mov
jl
jns
dec
mov
arpl
sarb
in
adc
rolb
shlb
sub
testl
scas
xlat
repz
jno
fmulp
dec
push
pushf
sbb
dec
adc
pop
xor
mov
dec
jg
dec
ds
mov
pop
mov
inc
push
mov
mov
or
inc
test
jle,pt
pop
xchg
nop
fisubrl
mov
outsl
bound
sarl
je
pop
rorl
aas
addb
ret
lret
add
dec
fsubl
pusha
mov
fcmovb
mov
or
and
repz
xchg
mov
inc
stos
mov
addl
aaa
pop
lahf
adc
jbe
dec
je
insl
mov
pop
push
dec
adc
insb
mov
lret
jl
in
shl
pop
mov
je
stc
adc
test
xchg
push
push
xor
adc
loope
mov
dec
inc
push
and
mov
mov
cwtl
out
loop
mov
dec
orb
lret
insb
sub
inc
dec
aaa
jge
xor
pop
roll
add
ret
fcmovnu
imul
aad
mov
lock
ja
ljmp
or
std
outsl
jnp
jnp
mov
imul
mov
sub
test
mov
mov
inc
lahf
test
addr16
pop
call
rclb
push
lret
fildl
jl
and
dec
fdiv
sub
and
and
xor
pop
xchg
repz
imul
imul
pushf
jae
push
pop
sbb
pop
fmuls
and
pushf
xchg
ljmp
mov
sub
cmpb
sbb
add
sub
sbb
dec
pushf
push
fildll
pop
gs
lods
xor
push
xlat
or
adc
lcall
mov
sbb
jl
and
icebp
loopne
pop
out
jne
sub
lods
sub
shrb
pop
pop
dec
fbstp
dec
idivb
push
mov
lahf
xor
push
jmp
scas
mov
xor
pop
out
or
dec
pop
aas
in
negl
sub
sbbl
cmc
call
sar
sbb
inc
mov
loop
rorl
xchg
into
mov
push
dec
aaa
sbbb
in
into
xor
mov
jno
sar
rorb
mov
xchg
pop
pop
andb
loope
lret
mov
mov
ficoml
sbb
fsubrl
fldcw
lret
push
push
mov
and
and
ror
xchg
imul
and
xorl
scas
mov
sub
cmp
enter
dec
fsubrp
mov
jle
mov
div
mov
jb
push
test
xchg
fyl2x
rol
dec
lcall
lcall
or
daa
loop
pop
or
pop
ret
sub
push
push
jne
push
jae
in
push
push
jmp
fwait
mov
mov
rorb
mov
add
inc
aaa
fidivrl
into
adc
pop
xlat
movsl
sbb
dec
outsl
pushf
sbb
imul
jne
negl
push
lcall
jno
out
test
pop
mov
mov
std
xchg
mov
pop
adc
dec
cmp
and
pop
flds
lea
jg
shlb
adc
sbb
loopne,pn
imul
inc
inc
icebp
ljmp
mov
nop
or
dec
adc
rol
push
scas
aaa
nop
push
loop
int
nop
xor
div
mov
loop
xor
sub
in
je
sbb
movsb
imul
lahf
xchg
jnp
mov
add
sub
xor
movsl
and
sub
and
scas
shll
ds
dec
and
jmp
sbb
inc
add
cmp
test
xchg
jecxz
xchg
xor
xorb
fcmovu
mov
hlt
fbld
sbb
mov
jmp
hlt
testl
ljmp
or
xchg
icebp
jnp
outsl
push
pop
test
push
iret
or
dec
arpl
pop
push
ja
mov
fiaddl
cmp
rol
ljmp
dec
repnz
inc
or
rolb
cld
out
fildll
sahf
push
imul
add
out
je
aad
es
ret
jne
ljmp
out
jg
jg
mov
dec
lods
xchg
xchg
mov
movsb
dec
jo
frstor
jecxz
lds
dec
and
cmp
xchg
sbb
cltd
cmp
popf
or
fidivl
lods
sub
lods
mov
push
sbb
inc
cli
ret
daa
pushf
pushf
and
mov
mov
jns
sbb
xchg
inc
inc
sub
add
out
in
xchg
push
scas
dec
cmc
sub
xor
popf
xlat
rcrb
daa
mov
adc
out
fistps
cmpsb
xor
out
mov
stos
push
or
in
or
fcoms
cli
call
add
aad
int3
cmc
frstor
ret
xchg
aam
xchg
fst
aaa
push
and
xchg
adcb
or
shll
rcrb
stos
scas
pop
jl
cli
nop
pop
js
mov
sbb
xchg
aas
and
xorl
fnstsw
insb
dec
inc
and
aad
outsb
sub
lret
or
dec
ds
xchg
sub
imul
arpl
xor
pop
and
push
or
out
outsb
dec
andb
std
sbb
imul
insl
dec
cmpb
pop
leave
into
shl
xor
jge
repz
repz
mov
push
or
push
loope
adc
fwait
enter
jge
and
xor
pop
push
mov
out
cmc
shr
stos
mov
mov
and
xor
mov
lcall
inc
cmp
xlat
xchg
pop
pop
arpl
into
bound
in
cmp
ljmp
subl
test
fwait
lea
mov
mov
cmp
pop
mov
lods
push
jno
lods
loope
lahf
rorl
aaa
xlat
pop
add
data16
stos
leave
add
mov
xlat
sub
dec
mov
push
mov
xchg
jne
pop
pop
push
xchg
xor
jmp
test
adc
aas
pop
popa
mov
inc
cwtl
cmpsb
dec
std
daa
ret
xor
in
jg
lahf
mov
cmpsl
mov
leave
rcll
aad
fisttpl
dec
cwtl
lret
push
out
mov
mov
mov
testb
inc
and
incb
inc
jnp
subb
xchg
pop
lret
cwtl
add
push
jae
dec
fwait
mov
popa
out
insb
xchg
mov
in
dec
push
dec
aaa
pop
xchg
mov
cmp
sub
bound
mov
jl
sbb
push
js
lcall
xor
pop
scas
and
cmpsl
mov
rorb
pop
int3
pusha
jns
xchg
sub
lds
enter
repnz
add
addb
cmp
inc
cltd
inc
push
les
inc
xchg
testl
inc
negb
or
imul
cmp
or
lods
push
pop
lods
xchg
into
imul
pop
push
imul
push
dec
add
rorb
int
mov
mov
sub
or
mov
insl
fimull
inc
xchg
push
test
pop
lahf
push
and
out
mov
ss
xchg
test
repnz
in
push
xor
fsubl
test
lcall
jno
enter
push
mov
fisubs
cld
sbb
dec
pop
sti
mov
add
fildll
mov
repnz
aad
add
mov
test
in
mov
sti
push
inc
add
mov
mov
in
das
push
xor
es
mov
lahf
mov
push
fsubl
mull
repnz
and
sbb
push
cmp
inc
jmp
lods
nop
mov
and
pop
mov
lret
mov
sub
ja
mov
xchg
fs
mov
gs
or
rcl
pop
in
cmc
mov
xor
xchg
inc
jne
outsl
mov
ret
fldcw
sahf
push
push
pop
ret
inc
sbb
push
dec
and
jae
cmp
or
pextrw
dec
push
aad
mov
push
enter
cmp
inc
jge
aad
lods
ret
cmp
inc
lahf
pop
push
sub
outsl
in
sbb
jne
das
les
cli
test
fildl
mov
push
add
push
mov
or
mov
lcall
cs
mov
andl
pop
add
and
sbb
mov
or
push
push
scas
hlt
or
dec
aaa
sbb
test
adc
xor
das
scas
push
jl
mov
mov
in
rcrb
test
loope
insl
sbb
popl
int3
repnz
das
lock
jne
ror
stc
push
push
int3
mov
push
inc
push
stc
dec
in
sub
sub
inc
clc
sub
lods
subb
xchg
add
or
movsl
arpl
pop
mov
lods
or
pop
mov
cwtl
jae
or
dec
jnp
iret
outsb
dec
xchg
repnz
adc
popa
xor
jno
push
push
lcall
cld
idiv
ret
pop
and
xlat
pushf
push
push
imul
fldl
mov
out
lea
dec
mov
sbb
mov
mov
out
adc
mov
repz
mov
std
sahf
jecxz
sti
mov
iret
push
mov
repz
sub
jne
xchg
jge
dec
add
xor
imul
rcrl
pop
sbb
push
jle
scas
sahf
mov
and
or
adc
in
test
les
jo
jmp
leave
inc
adc
das
push
bswap
sbb
mov
add
adc
testb
xchg
jo
subb
xchg
push
lods
lock
sbb
sbb
sub
sti
cmc
jae
fsubp
clc
push
mov
xlat
repnz
ret
mov
dec
outsl
add
xchg
stc
mov
cmp
inc
or
stos
test
mov
jmp
pop
out
xchg
arpl
xor
getsec
add
cmovns
inc
mov
mov
stc
or
mov
mov
and
or
movsl
inc
jne
sti
lea
xor
movsb
ja
xor
pop
into
scas
or
stos
ds
cmpsb
mov
xchg
pop
push
and
outsb
or
stc
jmp
or
pushf
pop
jns
push
negb
sbb
aam
xor
cmpsl
mov
cmp
enter
cmp
mov
mov
cmpxchg
insb
popa
ficoms
push
adc
dec
push
xor
std
jp
jmp
ds
mov
and
das
stos
scas
push
cmpl
xor
cmpl
pop
xchg
adc
test
cmovs
ljmp
call
popf
enter
cmp
dec
mov
ds
adc
jns
jecxz
add
jg
imul
lods
mov
shlb
push
imull
jb
inc
mov
jmp
dec
test
dec
xorl
dec
xchg
test
ds
jb
call
xchg
pop
pusha
stos
sti
mov
mov
lods
or
iret
adc
add
icebp
psubsw
jmp
xchg
fsubrl
cltd
shll
push
mov
mov
addl
xor
jecxz
inc
jp
unpckhps
xchg
fadd
and
and
pop
mov
cltd
clc
mov
adc
lret
pop
cmp
int
mov
in
cltd
int3
mov
mov
adc
subb
push
xchg
cmpsl
ret
jb
xor
movsl
mov
fwait
adc
mov
mov
js
sahf
push
out
mov
shl
add
insb
push
negb
arpl
and
push
cmp
xchg
addl
bound
not
fiaddl
sub
int
jp
in
pop
popf
rolb
aad
icebp
push
out
push
outsb
pop
insl
in
mov
insb
dec
mov
pop
icebp
fwait
iret
push
cmp
sbb
flds
lret
xchg
outsl
push
jns
xchg
clc
lret
insb
fs
jecxz
adc
maskmovq
xchg
mov
sar
mov
mov
push
mov
packssdw
sbb
mov
push
sbb
shlb
cmp
sbb
enter
jp
rdtsc
jo
fwait
add
popa
push
out
jno
lahf
xor
mov
push
arpl
add
cmpsb
sarl
push
push
push
inc
add
dec
push
mov
xor
in
add
pop
mov
add
fwait
push
hlt
loopne
sbb
sub
sbbl
cmp
cmp
cmp
std
loopne
popf
push
lahf
mov
jmp
cld
popf
or
mov
sahf
es
dec
push
outsl
cli
inc
out
roll
inc
out
jl
popa
jecxz
adc
cmp
call
fldcw
das
sbb
loop
push
divl
ja
pop
pop
jp
movsl
jecxz
imul
fsts
cmp
mov
jle
mov
and
fistl
sub
ret
dec
jnp
push
sahf
in
cmpsl
or
rclb
sub
in
clc
fsubl
and
mov
cmc
dec
mov
pusha
push
adc
mov
lds
mov
sub
mov
iret
mov
ret
adc
sarl
jo
sbb
dec
ljmp
xor
or
xchg
jo
daa
inc
push
fsubrl
into
mov
pop
cmpsl
pop
add
ret
inc
sbb
rcrl
in
testl
push
in
push
hlt
mov
ds
and
and
xchg
cmp
and
xor
xor
lcall
and
arpl
sub
les
jmp
imul
or
iret
leave
sub
scas
inc
ljmp
adc
ret
out
outsl
add
dec
sub
clc
mov
mull
sub
iret
sarb
flds
rolb
repnz
mov
test
nop
loopne
xchg
jp
jecxz
out
std
push
decb
adc
cmpsb
inc
cmp
mov
jmp
jle
insb
cmp
std
inc
pushf
cmpsb
cld
pop
jle
aas
fdivrl
mov
dec
inc
lcall
mov
add
push
iret
mov
mov
icebp
jl
push
inc
stc
push
outsb
add
arpl
inc
mov
cld
outsb
sahf
add
movsb
shrl
add
mov
movsl
stos
xlat
xchg
fcom
cld
adc
jge
pusha
xchg
mov
push
sbb
lds
dec
jge
sub
mov
jp
shll
push
pop
fs
loopne
add
lret
shll
xor
inc
xor
shrb
nop
xchg
call
xchg
repnz
jp
pop
lock
pusha
out
xchg
pop
mov
nop
lods
mov
mov
add
sti
push
push
add
punpckhwd
movsl
jne
adc
or
jno
pop
jmp
and
dec
sbb
lods
cmp
mov
sbb
or
adc
dec
adc
mov
std
inc
ljmp
rclb
mov
and
mov
add
lahf
xchg
int3
cmpsb
lcall
sbb
dec
dec
test
js
in
roll
jae
aad
xorl
xchg
arpl
gs
jmp
loope
sub
fdivrs
sub
sub
mov
mov
mov
adc
int
push
shlb
xor
add
stc
aas
sbb
and
fidivrs
sbb
pop
lcall
gs
adc
fwait
leave
mov
sahf
dec
push
in
mov
push
outsb
fisttpl
mov
je
pop
cmp
dec
pop
mov
out
les
and
pop
pop
int
lahf
jns
test
pop
hlt
push
fwait
lea
call
dec
fstps
adc
push
in
xchg
adc
or
sbb
rcll
and
pop
mov
enter
add
mov
cltd
imul
mov
pop
mov
ret
inc
mov
cmc
lock
fldl
lret
in
mov
ja
test
jns
push
movsb
push
punpckhwd
xor
addr16
adc
push
sub
sbbb
add
jae
iret
lods
xchg
xor
add
iret
add
push
adc
cmc
xchg
and
xchg
or
cmpsb
mov
scas
dec
and
or
test
sbb
inc
and
mov
inc
xchg
jecxz
pop
pushw
pushf
dec
push
pop
mov
ds
mov
aas
lahf
mov
adc
into
push
dec
enter
cmp
clc
cmpsb
out
outsw
in
out
adc
mov
cmpsl
cmp
shll
mov
js
mov
cmp
cmp
fsubrp
imul
fbld
inc
mov
arpl
mov
push
cwtl
push
jno
call
rcrb
push
test
je
div
mov
jg
adc
dec
sub
jge
or
push
mov
fnstsw
je
shl
sbb
and
sub
movsl
cli
add
lret
cmc
cmp
sub
popa
push
or
pushf
pushf
sbb
cmp
test
mov
int3
rolb
inc
insb
icebp
fistl
orb
ja
mov
inc
adc
out
pop
fistpll
int3
ficompl
or
xchg
mov
jp
push
mov
adc
inc
aad
inc
aas
add
cmp
mov
cs
aam
sbb
sbb
push
mov
cmp
cmpsb
scas
bound
jb
pop
int3
loope
sub
and
or
xor
mov
leave
movsl
out
imul
xchg
jae
test
or
dec
test
cltd
cmp
mov
sub
cmpsb
mov
iret
inc
test
cs
stos
adc
add
pop
mov
push
mov
sbb
test
out
and
es
jl
sbb
icebp
xor
mov
mov
and
sbb
jle
scas
out
push
pushf
nop
fadds
ret
mov
pop
xchg
add
jmp
adc
mov
aaa
ret
test
sbbl
notb
mov
pusha
loop
aad
mov
ret
call
push
pop
loopne
mov
jle
shl
mov
fmuls
and
scas
psrlw
movsl
xor
cltd
mov
adc
inc
ret
and
insb
ret
xchg
sub
rolb
in
iret
int
cmpsb
fistpll
cld
aam
test
sbb
mov
es
xchg
inc
jbe
push
outsl
stos
push
add
xor
xchg
test
sub
sbb
jo
jp
jg
outsb
ficoms
mov
ja
inc
fsub
xor
fisubrl
out
or
mulb
test
ror
sbb
sbb
pop
imul
mov
mov
inc
pop
fsubrl
mov
ds
sbb
inc
stc
lcall
inc
mov
adc
push
push
mov
add
jns
call
add
shll
sub
or
leave
xor
aas
mov
fistpll
insl
cmpsl
arpl
movsb
jb
outsl
aaa
push
mov
and
push
dec
jl
pop
pushl
mov
lods
jmp
push
clc
pop
push
push
adc
stc
les
sarb
push
cmp
pop
das
ss
pop
pop
pushf
nop
mov
cmp
rorl
lahf
loope
mov
mov
mov
add
dec
inc
jb
divl
mov
jns
jle
lods
jmp
add
push
rolb
in
gs
jp
daa
out
stos
cmp
ja
mov
sbb
insb
mov
hlt
mov
mov
stc
pop
pop
nop
jmp
aas
in
stos
outsl
pusha
and
aaa
rcll
pop
pop
arpl
cmc
inc
push
jo
cmp
or
inc
push
lcall
cmpsb
cmc
mov
jns
lcall
sbb
movsl
test
cmp
mov
xchg
loope
cmpsb
sbb
lods
adc
sbb
in
dec
add
dec
add
jmp
push
out
iret
icebp
bound
fcompl
loop
sbb
in
cmp
mov
test
push
lgs
test
cmp
cmp
mov
lret
insb
xor
out
cmc
call
mov
aaa
adc
xchg
pushf
push
ds
test
mov
jle
ds
mov
push
mov
adc
out
out
arpl
lahf
cmp
ss
addb
aam
pop
jmp
fdivp
loopne
sub
mov
std
popa
jbe
mov
adc
jne
push
scas
xchg
inc
xchg
or
xchg
cltd
mov
aad
stc
jecxz
and
mov
fcmovb
sub
in
inc
dec
rorl
mov
sub
dec
xor
jmp
cmpsl
rcl
jecxz
out
inc
mov
iret
cli
pop
lcall
insb
push
and
sbb
and
inc
add
inc
popa
push
rcrl
mov
adc
and
mov
popa
aam
mov
and
xor
ss
icebp
mov
xchg
mov
adc
or
lahf
inc
xor
push
jno
mov
jno
das
xchg
cs
fcoml
push
outsl
fstpt
adc
fldl
pop
mov
inc
or
pop
in
xor
jnp
xchg
sub
jg
insb
xchg
xor
dec
mov
nop
cmp
mov
test
cmpl
sbb
push
mov
or
ficoms
insl
out
push
xor
push
cli
call
test
shrb
popf
jbe
fbld
pop
imul
mov
jle
xor
pop
sbb
dec
add
clc
stc
and
icebp
add
cmp
sub
sub
int
faddl
addr16
push
clc
dec
outsl
int3
adc
hlt
adc
out
nop
sbbb
push
push
xor
ja
mov
ljmp
insl
test
push
in
ficoms
jnp
pop
loopne
xor
push
mov
ret
xchg
mov
outsl
adc
mov
pop
hlt
add
mov
lahf
pop
push
in
iret
jg
mov
dec
or
mov
jo
or
ret
out
jecxz
inc
adc
mov
jno
push
dec
sbb
pushf
mov
ja
mov
push
pop
aaa
xchg
mov
leave
inc
cmp
mov
cmp
out
ss
inc
loop
pop
dec
mov
adc
fcmovnbe
repnz
cli
in
pop
pop
pop
loope
dec
xchg
inc
bound
add
push
xorb
jae
and
xchg
das
fildl
pop
dec
scas
mov
mov
and
testb
mov
push
shrb
insb
push
test
or
mov
movsb
xor
sbb
pop
or
imul
addr16
pop
and
cs
dec
movsb
pop
test
dec
mov
test
or
add
jb
or
adc
fdivl
mov
test
sub
xor
int
sub
cmpsb
sbb
scas
push
push
in
fld
dec
mov
cli
les
mov
out
pop
and
mov
movl
scas
ret
addr16
scas
push
and
xchg
test
dec
push
cmp
jo
daa
jnp
insb
push
xorl
fiadds
xor
mov
adc
pusha
jl
push
daa
movsb
pop
imul
jl
ror
lret
xchg
stos
and
sarb
push
pop
xor
jmp
rorl
cli
rep
dec
xor
popa
cmp
mov
mov
cmp
test
cs
xor
out
out
or
jb
xchg
xor
pop
inc
jmp
mov
cwtl
and
and
mov
push
push
cmc
mov
and
aaa
sub
adc
test
mov
lock
jmp
out
or
imul
mov
negb
rcrb
push
sub
dec
mov
or
pop
ds
xchg
inc
mov
out
pop
roll
sahf
dec
mov
add
iret
lds
push
or
xchg
fwait
and
pop
lret
in
dec
repz
sub
aaa
jno
mov
xlat
and
pop
xchg
pop
test
or
mov
jae
lods
ljmp
bound
inc
test
test
inc
mov
cltd
xchg
lock
sub
xor
mov
xchg
push
repnz
mov
cmpsl
mov
sbb
addr16
mov
pusha
pop
adc
hlt
mov
cli
outsb
push
dec
test
call
repnz
mov
add
mov
xchg
rcrb
push
or
dec
icebp
fdivrs
je
cmp
stc
aad
pop
loope
mov
push
mov
mov
fdivl
sub
andb
or
test
loopne
xor
mov
leave
lret
xor
sti
rcrl
outsb
inc
lods
or
icebp
cmp
in
pop
push
ljmp
ds
sahf
fwait
sbb
mov
in
decb
mov
mov
cltd
fbstp
pop
inc
or
push
or
mov
mov
inc
and
test
mov
lods
and
inc
mov
popa
fstl
adc
mov
sbb
pop
ficomps
fnstcw
and
fstl
cwtl
rcrb
xchg
and
mov
dec
dec
ret
aas
lea
fsts
loopne
outsb
xchg
push
fists
add
xchg
push
sbbb
add
inc
addb
movsb
lahf
cmp
shll
lahf
jae
lods
es
fsts
adcl
push
mov
jae
loopne
je
fcomps
sub
inc
inc
lds
cmp
sub
imul
or
mov
mov
sahf
sub
mov
inc
jecxz
cmp
xchg
lock
ljmp
sub
pop
pop
test
push
imul
loop
or
popf
mov
mov
icebp
and
lahf
cmp
enter
icebp
xchg
addb
mov
repnz
das
push
inc
stos
insl
cmp
int
das
jge
pop
mov
push
movsl
push
mov
xor
dec
in
push
push
sub
sbb
mov
out
xor
addr16
ss
push
inc
mov
repz
das
or
pop
or
add
out
adc
pop
out
jg
adc
inc
inc
cli
add
pop
jne
jno
repnz
push
bound
mov
mov
or
ljmp
es
leave
jp
fimull
and
setbe
adc
bound
xor
jnp
lock
or
aas
cs
lods
push
adc
stos
pop
add
out
jns
mov
xchg
mov
popf
push
cmp
sub
pop
add
mov
icebp
mov
pop
jg
aad
scas
push
in
je
xchg
sbb
xor
inc
sbb
mov
sub
imul
cmpsl
mov
cmp
xor
mov
loope
sti
inc
inc
xlat
mov
in
popf
push
jns
ret
mov
add
lcall
sti
add
testl
xchg
xor
jl
out
adc
jle
mov
xor
xor
jae
xor
push
sbb
lcall
data16
pop
push
sbb
das
adc
pop
or
ja
lret
decb
test
inc
in
adc
das
loope
das
inc
call
arpl
jecxz
lods
xchg
out
int3
xchg
pop
adc
in
es
lret
fcoms
fwait
adc
inc
adc
cld
lds
insb
xor
shll
popf
mov
sar
rolb
imul
push
pop
pusha
add
sbbl
push
into
mov
inc
cmp
in
lcall
leave
movb
add
xlat
pop
push
sti
je
lds
add
cmp
jo
lock
or
lods
dec
mov
jnp
xabort
daa
loope
xor
fadd
jne
stos
sbb
je
cltd
leave
cmp
es
movsb
dec
adc
push
sub
mov
movsl
out
aad
data16
fsubl
idivb
push
jb
push
negb
fwait
mov
xlat
mov
cmpsb
les
or
out
imul
loope
jg
dec
mov
cmpsb
jmp
nop
insb
fdiv
lds
fimuls
mov
xchg
sbb
dec
jecxz
add
push
lahf
out
or
dec
xor
adc
push
fwait
xchg
cmp
lods
pop
dec
sub
jg
daa
shll
push
lods
in
or
add
pop
jns
je
jmp
mov
dec
int
out
xchg
leave
dec
inc
iret
jp
xor
shrl
cmp
push
xor
insb
and
cmpsb
loopne
dec
pop
pop
jbe
cmpsl
cmp
and
stc
or
cmp
pusha
ljmp
gs
sub
push
adc
je
push
or
test
add
cmc
push
in
cmp
mov
clc
jnp
scas
sub
fbld
xchg
push
cmp
xchg
jno
add
fisttps
vandnps
mov
xor
and
ja
sbb
push
or
stc
xchg
arpl
and
sub
dec
jmp
adc
in
lds
hlt
test
mov
aam
aaa
fldl
movsb
xchg
subl
pusha
lahf
mov
jle
inc
and
sbb
icebp
outsb
incl
cmp
outsl
shlb
movsl
insb
cld
pop
xor
or
repz
cli
incb
add
xchg
adc
jns
xchg
test
mov
insl
icebp
mov
lahf
call
out
popf
xchg
cltd
mov
or
mov
paddsw
pop
or
sbb
pop
stos
fs
ds
xor
cli
cmpl
rorb
gs
pop
test
loope
les
shlb
dec
adc
cld
jg
xor
fisttpl
mov
adc
cmp
mov
pop
imul
stc
mov
cmp
in
mov
jmp
into
push
clc
rcl
addb
xchg
xchg
push
stc
cltd
or
ret
add
out
out
lahf
adc
or
mov
or
test
sti
sub
sbb
xor
pusha
repz
leave
xchg
out
pop
xor
pusha
xlat
aad
push
ss
clc
into
not
jecxz
xor
rclb
scas
jp
mov
lahf
mov
out
push
cltd
xor
mov
or
mov
lock
ss
in
pop
mov
mov
movsl
push
cmp
imull
sbb
iret
mov
fistl
test
out
imul
pop
scas
lods
cmc
jg
movsl
cmp
call
add
mov
and
fldl
sub
dec
or
pop
bound
rcl
jns
fildl
jae
lds
ds
mov
nop
jae
outsl
push
out
cmp
fnstcw
lret
js
leave
mov
cwtl
mov
pop
cmp
pop
outsb
cmp
repz
and
ret
inc
nop
lock
add
subb
mov
or
xchg
mov
push
negl
dec
jno
dec
push
pop
addr16
loopne
addb
xchg
ror
pop
sub
mov
and
xchg
sar
and
sub
cwtl
icebp
mov
dec
imul
sub
dec
scas
push
lret
push
xor
pop
cmp
arpl
lock
lcall
pusha
sbb
mov
test
xchg
push
lahf
mov
mov
cmpsl
insl
jnp
jmp
xor
jae
xchg
outsl
je
aaa
dec
cli
mov
decb
shr
inc
dec
sub
ja
cmp
lods
test
sub
cmpb
leave
movd
mov
aas
pop
out
adc
and
das
sub
mov
ljmp
jnp
outsb
test
xor
xchg
pop
dec
mov
mov
imul
push
pusha
sub
jp
pop
push
and
subl
or
in
xor
iret
decl
xor
mov
cli
sub
paddd
cmc
imul
pop
jae
outsl
adc
les
nop
cli
out
mov
pop
jge
dec
aaa
cwtl
mov
adc
cmp
and
push
mov
pop
add
call
mov
add
dec
fs
loop
icebp
loopne
sbb
cmp
adcb
test
movsl
imul
shrb
ss
movsb
push
mov
xor
xchg
inc
lcall
xor
out
jae,pn
sub
mov
push
addr16
dec
lahf
test
std
cmp
xor
xchg
xor
xor
pushf
bnd
xchg
idivl
xchg
loop
ret
or
push
lret
mov
lcall
mov
pusha
push
shll
flds
ds
cmpsl
push
xor
imul
popf
sub
incb
sub
stc
mov
lds
jbe
fidivs
imul
sbb
arpl
sbb
mov
push
ljmp
cmp
inc
sbb
and
mov
jl
lcall
movsl
or
mov
push
fs
cmp
push
fildll
aas
inc
xor
lret
cli
or
sarl
ljmp
xchg
jp,pn
mov
sbb
iret
sub
and
xchg
shlb
cmc
outsb
out
lahf
lret
adc
jno
loope
xor
inc
neg
cmp
aaa
xchg
and
mov
add
rcll
enter
cltd
push
mov
mov
test
test
rorb
mov
pop
sbb
cmpsl
gs
std
and
gs
cmpsb
imul
outsl
jl
adc
cwtl
cld
scas
ljmp
adc
xor
stc
cmp
aam
mov
pop
stc
cmp
pop
mov
mov
adc
dec
fwait
ljmp
fidivrs
mov
sbb
jecxz
enter
pop
jl
cmpb
push
lret
push
sub
aam
rorb
sbb
int
addr16
cmpps
xor
mov
mov
mov
lret
stc
xlat
mov
mov
out
xlat
adc
outsb
sub
sbb
fs
jmp
inc
push
sub
inc
push
mov
stos
adc
cmpl
sub
xor
pop
addr16
lods
stos
pop
icebp
cmpsb
idiv
cld
or
sbb
cmc
push
pushf
and
js
xor
pop
std
in
adc
mov
or
in
xor
js
mov
shlb
loopne
lahf
test
jge
call
cmp
lahf
fwait
rorl
and
enter
fbld
sub
mov
imul
jno
imul
and
les
outsl
cltd
popa
cmp
jp
add
sbb
pop
lcall
xor
test
stos
repz
adc
fsubrs
pop
jnp
pop
jp
test
or
shlb
addb
push
out
loopne
mov
cmpsl
mov
pop
jecxz
mov
mov
out
imull
or
clc
clc
adc
fisttps
into
jae
cli
cmpsb
call
jb
add
outsb
pop
insl
adc
pop
push
cli
stc
iret
aaa
and
sbb
je
or
cmc
inc
stos
sbb
mov
adc
rcll
loopne
cli
mov
sub
and
outsl
and
mov
icebp
sub
xorb
jo
xlat
inc
fnsave
sbb
imul
ja
xchg
add
mov
sub
jne
cwtl
dec
xlat
repz
clc
xchg
pop
push
fisubl
push
pushf
push
or
aad
inc
xchg
test
inc
lahf
dec
xor
in
push
fisttpll
aam
cld
xor
mov
in
sub
xor
push
push
jg
adc
cmp
mov
add
lods
ret
add
lea
fwait
dec
movsb
and
pop
mov
push
jb
xlat
pusha
out
xlat
inc
xchg
jge
dec
dec
mov
dec
mov
cmpsb
and
dec
mov
mov
popa
pop
ja
loopne
cwtl
lock
orl
roll
lea
in
fsubl
and
pushf
dec
mov
stos
lock
and
in
add
adc
or
cli
ds
sahf
mov
pop
int3
ds
push
xchg
repnz
mov
add
imulb
add
sti
xlat
fsub
pop
aam
ror
mov
iret
addr16
shl
out
pop
aam
sbb
sub
ret
ret
sbb
push
out
jns
mov
loopne
jp
dec
into
fcmovu
add
call
in
jno
inc
xor
or
or
inc
xchg
mov
stos
stos
je
push
jns
or
lcall
push
mov
push
and
loop
ret
pop
addr16
xchg
jmp
cmp
popa
mov
jg
stos
jmp
dec
out
imul
lea
add
cwtl
add
jbe
or
lods
sub
cmp
enter
or
dec
lock
jno,pt
push
enter
orb
les
lahf
xor
add
or
rolb
pop
and
lcall
mov
push
aas
leave
add
adc
ds
xor
push
into
push
movsl
test
in
xchg
push
dec
and
scas
dec
or
data16
cmovne
lcall
lods
movsl
repz
mov
and
call
mov
imul
xor
push
leave
bound
lret
ret
mov
sub
inc
loope
fadd
mov
push
ljmp
movsl
ds
mov
loope
fadds
add
or
stos
push
sub
cmp
mov
ds
inc
fs
mov
push
adc
xchg
jp
pop
cmc
das
mov
cld
js
sub
lods
fisttpll
push
or
inc
stos
jge
mov
int3
pop
imul
jae
mov
imul
lea
dec
ds
and
cmp
push
xchg
mov
add
push
and
sbb
out
mov
cs
mov
jg
or
xorb
popa
pop
cmp
testl
out
imul
aad
lods
insl
and
push
mov
sbb
fstl
es
call
outsb
pop
fs
mov
mov
std
mov
in
cwtl
mov
imul
or
xor
and
xlat
or
icebp
dec
sarl
cs
xchg
sub
cwtl
sub
or
inc
xchg
int
and
or
daa
test
out
or
popf
addr16
xlat
incb
insb
dec
inc
mov
insl
cmpsb
cltd
outsl
and
dec
sub
orb
cmp
lock
and
adc
mov
sub
test
xor
sub
jb
sbb
jle
mov
or
mov
mov
or
repz
cmp
push
jb
xlat
cmp
jbe
push
mov
push
mov
iret
orl
insl
iret
xor
sbb
inc
push
mov
enter
ret
or
add
jnp
add
inc
lods
insb
out
mov
pop
cmp
push
in
popf
rclb
mov
dec
mov
scas
cmp
lahf
iret
scas
test
fsubs
add
sahf
push
add
movsl
sti
or
add
shr
jecxz
cmp
je
in
in
adc
jp
aad
pop
mov
jecxz
push
or
outsb
repnz
mov
popa
dec
mov
xlat
jb
test
inc
inc
push
call
xchg
adcb
mov
mov
inc
or
dec
stc
lods
mov
sub
mov
rsqrtps
mov
push
cmpsl
inc
nop
xlat
clc
cld
shl
loop
popf
mull
call
ss
or
iret
loop
push
mov
xor
mov
cmp
xor
sbb
testl
sbb
imul
pop
xor
inc
add
wbinvd
jl
sti
test
xlat
test
ret
lock
scas
pop
hlt
jne
adc
mov
pop
pop
pop
add
pop
mov
cwtl
xchg
dec
ret
pop
call
sbb
jmp
cmp
bound
shrb
jl
jno
and
imul
insl
orl
push
jno
andl
repz
fnstsw
jl
add
mov
dec
mov
je
or
xor
daa
sbb
xor
cmp
jle
jb
pushf
pop
arpl
jl
dec
mov
or
jmp
subb
stos
aad
sbb
imul
ljmp
push
outsl
int3
ret
ficoms
sub
mov
stc
and
xor
push
sub
and
xor
lods
mov
cli
or
xchg
repnz
add
jae
dec
mov
out
push
adc
push
dec
push
sarl
test
xchg
enter
lock
pop
sbb
dec
in
add
scas
std
xchg
mov
mov
pop
jne
stc
cmpsl
push
xor
push
lods
sub
cmpsb
xor
arpl
mov
loop
movl
daa
cltd
xor
fcompl
mov
pop
push
sbb
adc
shll
push
rolb
inc
arpl
jp
jecxz
outsl
push
lock
or
ss
xchg
mov
or
jb
dec
push
sub
icebp
imul
outsl
jae
xchg
cld
aas
aaa
inc
gs
mov
adc
mov
mov
jno
js
mov
out
lret
sub
pop
jmp
xchg
adc
xorl
test
jb
pop
or
jmp
push
outsl
lea
loopne
add
mov
lret
aas
xor
scas
pop
loopnew
lcall
jbe
rcr
popf
pushf
adc
cmp
scas
adc
andl
xchg
mov
adc
jae
or
aaa
in
adc
rol
sbb
popf
push
push
test
andps
std
xchg
aas
jb
mov
xchg
adc
add
sbb
xchg
mov
in
or
aas
sbb
ja
mov
inc
adc
mov
pop
in
and
popa
outsl
imulb
or
call
push
rcrl
movsl
negl
sbb
mov
leave
sbb
sbb
aam
hlt
xor
loop
imul
insl
jo
sub
movsl
loope
ljmp
outsl
daa
test
mov
pushf
mov
aad
add
xlat
fwait
test
int3
call
xchg
push
je
lods
test
loop
mov
movsl
sub
pop
mov
out
add
out
or
cmpsl
into
mov
sti
pop
aad
fiadds
cmpl
dec
xor
xchg
mov
jl
out
inc
fnstsw
xchg
test
mov
mov
loope
stos
and
jae
jnp
mov
fnstcw
mov
rcrb
adc
push
pop
jecxz
xchg
sti
push
cmp
inc
ret
mov
insb
push
loop
add
and
add
or
cmp
push
mov
jecxz
lds
xchg
jnp
out
push
fs
or
insl
mov
sarl
daa
mov
loop
es
andb
xchg
std
push
lcall
add
sbb
mov
xchg
sahf
sub
pop
sub
mov
movsb
cwtl
lea
nop
lods
popa
mov
repnz
imul
subl
cwtl
pop
in
ljmp
fcompl
fwait
mov
insb
cmpsb
jo
lea
jnp
pop
jno
add
pusha
push
cmp
xor
xchg
fistpll
aas
fiaddl
mov
or
into
push
sbb
sub
xor
pop
mov
shrl
cltd
sbb
pusha
fidivs
lret
lock
sbb
fdivp
movsb
sbb
mov
sbb
idivb
push
push
shl
mov
pop
add
mov
test
loop
and
decl
inc
and
repnz
popl
xlat
push
pop
cmp
mov
sub
fcmove
xchg
pop
data16
xor
ss
and
push
aad
int3
lods
fs
sbb
pop
out
adc
or
jecxz
add
fidivrl
adc
xchg
testl
jo
xlat
fistl
popf
je
sbb
xor
test
lock
xchg
jbe
les
pop
mov
stc
mov
push
cli
cli
push
add
cmc
imul
cwtl
mov
dec
dec
push
or
cmp
inc
pop
cwtl
ss
popf
jne
dec
mov
popf
mov
and
out
xchg
mov
idiv
sbb
rcll
hlt
xchg
inc
jo
data16
jp
ret
mov
cld
pop
cmp
inc
lock
sar
mov
pop
ljmp
fisubl
mov
leave
push
xchg
ret
inc
repz
pop
fisubl
rclb
xlat
fidivl
mov
or
inc
ja
iret
shlb
add
lcall
ret
mov
cli
into
iret
daa
shrl
xor
fstps
in
xchg
push
xlat
sub
mov
mov
adc
fld
leave
pop
dec
stos
xor
pop
lds
xchg
add
and
jecxz
mov
xlat
add
jge
bound
xlat
and
dec
hlt
or
xor
test
dec
insl
jge
or
jmp
fwait
xchg
mov
into
mov
push
es
mov
fimull
mov
cld
mov
xor
fidivrl
xchg
or
cs
and
in
popa
rcl
jbe
xchg
cmp
shrl
add
xchg
mov
icebp
adc
leave
cltd
lods
in
or
es
rorb
add
sti
enter
gs
or
std
pop
lcall
xchg
fbstp
ds
xor
cltd
lods
mov
inc
adc
in
sbb
mov
ljmp
jl
adc
sbb
mov
mov
popf
push
mov
popa
push
xchg
bnd
test
xor
in
leave
int3
in
movsl
jecxz
data16
mov
stc
mov
mov
cwtl
xchg
lds
jb
xor
adc
arpl
rcrb
test
fildll
lods
mov
cmpl
nop
cmp
std
sbb
pop
jo
clc
mov
xchg
out
mov
scas
sbb
mov
pop
xor
daa
mov
mov
and
cmc
stc
dec
rcl
fistps
in
mov
lock
cmp
add
or
mov
cmp
inc
je
rol
pop
xor
nop
int3
out
rol
movb
inc
lcall
push
test
add
jmp
ss
hlt
mov
and
and
out
xchg
int3
sbb
fwait
mov
sbb
fstpl
sub
aam
mov
and
imul
sbb
je
aam
ss
and
fldt
insl
leave
pop
adc
fisttps
push
cmpsb
ds
scas
mov
inc
xor
sub
or
fmuls
mov
mov
adc
push
fcoms
test
test
shrl
jmp
das
add
mov
or
pusha
pusha
sbbl
incl
insb
cmp
sub
in
movsl
adc
pusha
inc
stos
je
inc
fwait
or
arpl
repnz
pop
aas
ja
hlt
xor
push
ljmp
sbb
in
or
push
cld
jns
lret
pop
or
cli
cmpl
adc
call
lret
xchg
stos
pusha
loope
push
hlt
dec
std
dec
mov
outsb
pop
inc
and
mov
mov
add
and
inc
push
mov
test
jb
sub
xlat
jg
cmp
xchg
rcrl
push
xchg
jns
adc
outsl
popf
adc
xchg
and
arpl
xorl
jb
int
lods
add
add
movl
xor
mov
jecxz
or
mov
cmp
sahf
in
movsl
push
rcrl
rcl
jle
in
ja
int
arpl
data16
or
adc
in
or
je
test
popa
das
outsl
mov
cmp
sbb
outsb
pop
icebp
arpl
sbb
ds
sahf
ljmp
or
push
xor
adc
daa
mov
insb
dec
sbb
call
xor
sbb
mov
or
ror
inc
pop
mov
push
mov
stc
fidivl
and
sub
ficoms
push
data16
xchg
movsl
sbb
xor
mov
cmp
mov
sub
or
cmpsl
dec
mov
cmp
notb
push
add
push
mov
sub
testb
push
js
cmp
loop
and
in
pop
hlt
shlb
mov
xor
mov
out
hlt
xor
mov
cmpsl
mov
push
cmpsb
push
nopl
jae
jbe
insb
mov
ret
push
mov
outsb
pop
dec
fimuls
cmp
insb
dec
add
cld
and
or
inc
cld
mov
mov
add
jge
inc
push
loopne
outsb
sti
and
pop
cmpsl
cmp
mov
lods
arpl
addb
hlt
mov
daa
enter
pop
jp
add
dec
pop
pop
push
xchg
sbb
sbb
scas
shll
pop
add
sub
xchg
stc
in
push
add
hlt
imul
loop
mov
aaa
dec
dec
icebp
jmp
pop
mov
out
imul
xlat
mov
mov
jne
frstor
or
cmpsl
ja
pop
hlt
adc
shll
fwait
inc
out
ljmp
and
mov
prefetcht0
jne
xchg
aad
jl
xchg
add
jnp
es
iret
loopne
or
mov
scas
popf
jge
inc
cmp
or
push
mov
lock
stc
stc
dec
sub
fistpll
idivl
sub
add
bound
lret
jb
rclw
sub
cmp
pop
add
jb
jne
movsl
jmp
cli
sbbl
jb
stos
sbb
sti
dec
dec
or
pushf
dec
addr16
cmp
ja
sub
xchg
es
sub
mov
sub
cmp
adc
shlb
push
ret
cmc
pop
gs
xorl
fbld
pop
daa
or
sub
cmpsb
add
cld
mov
ficoml
imul
mov
mulb
inc
imul
test
repnz
xor
rcll
sbb
les
mov
shr
inc
jl
jp
inc
xor
xchg
fcmove
rol
cmpsb
ss
negl
shll
sub
xchg
lret
adc
in
imul
inc
pop
cmp
xchg
pop
pop
inc
cmc
adc
dec
mov
ss
jnp
push
aaa
into
out
ljmp
xor
sbbl
fs
and
sbb
cmp
sbb
dec
xchg
xor
mov
mov
lret
lahf
stos
imul
jmp
mov
outsl
imul
mov
lock
xlat
push
fnsave
dec
test
jnp
sbb
lcall
imul
insl
adc
xor
or
adc
mov
rolb
and
nop
popa
les
lods
xchg
fidivs
std
hlt
popf
gs
stos
xchg
movsl
or
mov
jmp
lcall
addr16
ror
test
mov
insl
jo
data16
lret
dec
mov
jg
insb
xchg
ficompl
mov
jg
insl
fiaddl
dec
adc
sbb
pop
jg
sub
ss
out
js
lret
jnp
lock
ret
push
inc
out
test
sarb
push
das
push
mov
mov
pop
nop
push
js
xchg
sahf
sbb
dec
lods
dec
mov
out
adc
push
shll
mov
xchg
in
bound
mov
xor
lock
call
jmp
ds
lcall
test
inc
jge
xor
pop
popf
inc
addl
aaa
cvtps2pd
pop
mov
sbb
or
addr16
sub
lcall
sub
stos
out
popa
scas
repz
jae
ficoml
iret
or
push
lret
lea
mov
sbb
adc
jnp
rolb
rol
outsl
ljmp
outsb
ficompl
pop
inc
add
or
faddl
repz
repz
ficoml
pop
cld
das
fisubrl
les
adc
adc
ss
call
or
shlb
cmp
das
cmpsb
fildl
add
cmp
inc
inc
cmp
lods
pop
push
push
xor
cwtl
sub
cmp
lret
ret
insb
xor
push
arpl
jg
jle
dec
mull
sar
add
imulb
push
in
push
cmpsb
aaa
mov
cmp
dec
rolb
dec
mov
in
nop
pushf
cmp
nop
pop
pop
adc
mov
cmp
clc
popf
jl
push
sbb
jb
adc
mov
inc
cmp
psllq
out
push
push
lahf
adc
sub
sti
xchg
xor
mov
daa
mov
bound
lcall
gs
push
js
jl
mov
ss
test
adc
mov
jnp
sbb
pop
incb
mov
bound
mov
xor
je
sbb
out
cmc
dec
sub
stc
push
cmove
push
stos
out
ja
mov
push
xchg
sub
cmp
rolb
sub
in
mov
inc
ret
sbb
int
xchg
aaa
xchg
xlat
mov
sbbl
subb
and
and
adc
mov
in
test
mov
icebp
and
lods
aam
lret
jae
mov
lods
mov
mov
arpl
rcrl
cmp
lret
wbinvd
sub
inc
fidivrs
inc
cltd
mov
cmpb
ret
sbb
inc
js
movb
cmp
xor
push
mov
or
jnp
aam
pop
scas
push
icebp
xlat
and
into
nop
lcall
cld
insl
repz
mov
fistpl
outsl
lds
mov
mov
mov
sbb
add
mov
dec
pop
jae
sahf
iret
and
pop
cs
filds
idivb
xchg
pop
cmpsb
mov
mov
ffree
jne
or
mov
loop
xchg
ja
inc
cmp
cmp
gs
sbb
out
clc
lds
dec
adc
xor
out
test
subb
aaa
aas
xor
push
xchg
push
loop
and
push
repnz
lds
enter
xor
mov
loop
or
aaa
push
sub
aaa
je
das
inc
cld
jge
adc
imul
pop
mov
xor
scas
cmp
fistps
jae
subl
popa
pop
adc
out
xor
add
movl
or
mov
sbb
outsl
mov
shl
mov
fiaddl
lods
cmp
pop
push
mov
ljmp
push
ret
aaa
adcl
cs
jae
push
dec
lea
adc
dec
or
add
fadd
lds
xchg
xor
aas
push
sbb
cli
aaa
xchg
outsl
pop
stos
js
jno
rcrl
mov
rcl
fwait
popf
mov
mov
shlb
pushf
push
enter
pop
xor
add
insb
jl
mov
jl
lock
pop
outsl
pushf
aas
cmpxchg
fidivrs
sbb
mov
inc
sub
sub
in
aad
inc
add
pop
jg
push
sti
push
jge
mov
shll
addr16
sbbl
sub
mov
filds
mov
das
dec
push
outsl
and
and
fwait
cld
push
jne
cwtl
xor
jnp
pop
dec
mov
test
xor
out
insl
lods
out
negl
pop
cs
inc
in
in
mov
rorl
insl
ds
dec
cltd
lcall
and
pusha
pop
scas
xor
jbe
scas
rcll
nop
jp
pop
sti
sarl
outsl
xor
mov
mov
pop
pop
xor
jmp
inc
and
sbb
out
cs
cmp
rolb
mov
lcall
or
push
insl
and
fcoms
enter
std
mov
mov
xchg
mov
ja
imul
xlat
rcl
jb
sub
or
int
cld
push
jne
adc
add
cmc
add
add
lods
sub
popa
xchg
aaa
mov
fwait
jmp
jnp
int3
lea
jae
lods
lock
mov
aam
and
std
gs
ret
imul
shr
xchg
je
adc
sti
iret
add
jmp
out
adc
fiadds
or
das
sarb
adcb
rcl
xor
pop
sti
pusha
jl
je
cs
mov
stos
jae
jg
xor
push
ret
adc
in
jmp
stos
je
stos
cmp
or
mov
icebp
in
mov
jae
push
call
ret
xor
test
jmp
mov
mov
pop
das
movsl
sbb
out
xchg
xlat
lds
push
bswap
cltd
xor
adc
repz
cwtl
jno
imul
xchg
in
out
das
push
shlb
lahf
rorl
lock
aaa
in
push
and
andl
mov
push
mov
mov
pop
clc
pop
fists
int
push
pop
test
and
cmp
ret
mov
add
jnp
shlb
and
lods
fisubrs
lea
lret
icebp
push
jno
mov
mov
pop
je
loopne
flds
cmp
or
dec
cmp
in
ror
dec
fisttpl
pop
test
xchg
dec
mov
les
and
sti
sub
pop
or
fsubs
mov
cmpsl
pop
lret
mov
dec
mov
mov
jg
sbb
movsb
jg
xor
xchg
and
inc
jmp
cmp
iret
iret
xchg
mov
sbb
jl
sub
adc
pop
add
sbb
add
in
jne
inc
dec
fldenv
and
shlb
ja
rorb
pop
test
push
std
ss
addb
push
mov
sub
sahf
out
aas
fwait
in
push
mov
cmp
fiaddl
mov
incl
js
lret
into
pop
push
jne
js
sbb
mov
mov
pusha
mov
inc
inc
das
xchg
jbe
fcomps
imul
push
outsl
mov
into
push
scas
and
int3
pop
add
cmc
imul
mov
jnp
fdivrl
xchg
std
mov
testl
push
sbb
mov
sub
pop
pop
rcl
dec
rcr
sub
or
divl
mov
iret
insl
data16
pop
and
xchg
sahf
inc
cmp
ds
dec
inc
jb
dec
scas
fwait
dec
push
lcall
cmp
scas
fbld
test
xlat
inc
push
pushf
ds
aas
cwtl
loope
sbb
sbb
dec
mov
pop
mov
fbstp
add
add
cmp
pop
aam
idivl
rcll
dec
mov
mov
cmp
and
movsl
add
jno
cmp
jne
adc
aam
sub
or
xor
aaa
pop
cmp
imulb
movsl
test
les
pop
dec
test
aas
les
and
pop
inc
sub
mov
dec
push
int
adc
aad
or
out
mov
scas
clc
leave
push
sub
bound
fistps
jne
jl
fcmove
mov
add
pop
int
jecxz
insl
out
push
xchg
nop
stc
dec
fdivl
adc
loopne
leave
aas
jmp
clc
shll
jo
sbb
repnz
mov
cmovb
mov
sbb
add
push
sbb
mov
sarl
sub
adc
jb
mov
nop
inc
mov
dec
hlt
sahf
dec
sub
and
movsl
les
js
lds
fidivl
fdiv
mov
aaa
cmp
jae
mov
mov
xor
pusha
and
cmp
pop
pop
dec
shl
mov
mov
mov
push
mov
bound
xor
popf
mov
or
sub
int3
adc
test
inc
stc
clc
jnp
sub
jg
push
ret
sbb
push
jl
fyl2x
sbb
int
sub
and
and
jmp
leave
lcall
or
outsl
iret
jg
mov
call
jae
jno
xchg
mov
sbb
sub
std
pop
addb
imul
xor
xor
or
inc
mov
imul
out
sbb
jg
stos
cli
insb
mov
mov
fs
scas
fisttpl
jle
arpl
scas
dec
xor
or
test
add
mov
cltd
ljmp
in
xor
jmp
push
jb
push
hlt
fildll
and
push
aaa
cli
push
push
sti
cmp
jecxz
shll
movsb
sbb
jae
insb
jl
xchg
or
xorl
pop
aas
mov
mov
jo
call
lods
sar
sbb
or
cmp
and
divb
outsb
adc
mov
push
or
inc
push
lods
ss
in
xchg
mov
outsb
ret
add
adc
pop
iret
mov
lock
nop
dec
icebp
punpckldq
outsb
dec
and
mov
mov
imul
xchg
movsb
jb
fcomi
dec
aaa
mov
inc
fbstp
xchg
pop
adc
sahf
jp
pusha
pop
mov
iret
push
arpl
pop
mov
mov
fwait
or
push
iret
je
adc
xchg
inc
cmp
in
and
nop
call
outsb
sbb
sbb
inc
sahf
in
dec
pop
mov
mov
int
out
dec
and
or
xchg
jg
cld
inc
push
mov
push
xor
pop
push
std
nop
adc
fstpl
jmp
in
cmp
mov
ret
mov
inc
mov
movsb
int3
jae
and
movsb
lahf
stc
cwtl
iret
js
cli
push
cmp
insl
stc
dec
movsl
js
rorl
dec
fsts
mov
es
adc
push
pop
push
add
popf
add
lock
rolb
mov
gs
push
push
cmp
sbb
mov
enter
jle
jl
sbb
pushf
xlat
test
add
mov
pop
xor
test
ss
aam
xor
clc
inc
dec
push
pushl
ror
hlt
dec
push
ja
ficompl
inc
pop
imul
aam
addr16
sbb
aaa
aam
jne
or
in
mov
cmp
lock
leave
and
cmp
aad
push
inc
pop
sub
mov
push
adc
fsubrl
out
leave
js
jbe
sti
insb
add
inc
dec
shll
dec
push
push
mov
subl
xor
bound
jbe
mov
sbb
inc
fwait
sbb
mov
popf
fidivs
mov
cli
add
mov
mov
int3
xchg
mov
pop
adc
xchg
nopl
inc
sub
clc
xor
movsl
jb
pop
nop
test
xchg
in
lock
cmp
adc
mov
sbb
pusha
bound
jmp
std
push
subb
out
cmp
lret
data16
push
adc
pop
mov
sub
mov
jmp
jns
popf
jae
mov
ss
mov
cmp
xchg
sub
aas
test
imul
pop
daa
decb
call
shll
test
adc
bound
cmpsb
cwtl
cli
pop
xor
call
mov
ja
sbb
and
das
pusha
fcomi
fcmovne
dec
popa
cmp
jg
jnp
sbb
lcall
push
mov
pop
pop
cmpsl
push
repz
dec
outsb
jbe
gs
and
dec
ss
xor
js
pop
mov
fcomi
adc
and
pop
in
jae
pop
adc
lea
xchg
add
mov
inc
push
jecxz
xchg
bound
and
cmc
jmp
push
and
lea
std
sbb
inc
movsl
insb
fidivs
in
or
xor
pop
popa
cld
pop
inc
mov
xchg
popf
push
insb
sbb
sub
sar
pop
add
test
mov
in
mov
inc
inc
das
bound
mov
lods
fwait
pushf
inc
mov
aas
outsl
cmp
xor
in
ret
pop
adc
cltd
xlat
sbb
flds
mov
mov
sarb
jecxz
and
in
push
add
xor
insb
cmp
mov
dec
jge
popf
jmp
sbb
fwait
or
or
push
rol
lret
outsl
push
dec
subb
jo
sbb
hlt
mov
cmp
decb
mov
js
xor
add
or
daa
sbb
mov
movsb
lds
aas
les
pushf
inc
rorb
mov
xor
iret
rolb
rorb
sbb
xchg
sub
popa
jecxz
jo
mov
sti
dec
cmpsl
movsl
pop
imul
lods
jne
outsb
cmp
and
out
in
popf
addr16
mov
lock
fwait
out
out
or
dec
pop
add
data16
iret
dec
jmp
data16
movsb
xchg
mov
sub
loopne
pop
xchg
push
adcl
nop
scas
outsl
and
fcmovnb
sarb
inc
mov
js
mov
out
test
sahf
cmp
sbb
pop
lahf
repz
jl
sub
jmp
push
lcall
fildll
lds
mov
adc
pop
fs
and
push
mov
sbb
outsl
and
xchg
push
iret
jnp
pusha
sub
sbb
outsl
clc
clc
jbe
int
xchg
clc
cmpsb
icebp
cli
sub
or
icebp
pop
mov
push
stos
flds
arpl
loopne
xor
push
xor
xor
lods
enter
int
pop
dec
or
add
mov
or
xchg
push
lea
mov
adc
pushw
pop
push
sbb
subl
mov
enter
lods
mov
and
push
mov
ffree
xchg
adc
cmpsl
loop
mov
inc
lea
mov
fiaddl
push
cs
std
repz
or
ljmp
das
mov
inc
jecxz
dec
pop
sub
sub
test
jne
out
mov
mov
lods
in
fwait
mov
imul
cmp
add
shll
or
mov
mov
in
bound
enter
icebp
mov
mov
out
int3
push
cmc
lods
pusha
add
test
add
dec
xchg
into
mov
push
sub
and
or
std
sbb
pop
lret
adc
shrl
pop
hlt
mov
mov
jge
add
lret
inc
sub
iret
add
push
sbb
mov
cmp
rcrb
pop
sub
imul
dec
pop
and
mov
adc
inc
sbbl
mov
fsts
xchg
sbb
enter
arpl
movsb
cld
inc
mov
adc
inc
and
sbb
xor
fprem
out
cli
stos
scas
pusha
push
mov
mov
inc
imul
jg
lret
scas
insl
shrb
jb
add
gs
shl
cmp
sub
ljmp
lahf
push
hlt
push
pushf
icebp
jne
and
lret
jb
ss
out
add
jnp
fwait
xchg
rcll
lock
das
sahf
inc
mov
in
add
lods
jns
sub
int3
jg
push
and
loope
in
fwait
jb
das
jge
push
mov
mov
lahf
add
repz
adc
xchg
dec
pop
test
xchg
rorl
cs
mov
jge
pop
sbb
cld
or
fldenv
inc
std
sbb
test
fdivl
insl
andl
lock
mov
cmp
in
mov
ss
adc
cltd
lret
xchg
or
lret
cmc
sub
add
test
adc
dec
aaa
insl
mov
push
or
jae
sub
dec
and
or
pop
fwait
aad
mov
lcall
clc
xlat
out
sbb
xor
shll
sub
inc
mov
mov
icebp
pop
dec
xor
sub
sub
pop
popf
incl
mov
push
or
inc
xchg
arpl
push
pop
dec
push
pushl
stc
jae
add
enter
cld
ret
in
adc
xor
push
cltd
js
addr16
mov
cmp
mov
mov
xchg
outsb
push
xchg
xchg
cmp
out
mull
fnstcw
push
ja
xor
repnz
pop
pop
int3
pop
mov
inc
xor
mov
ds
in
js
dec
mov
jecxz
mov
out
dec
test
add
call
mov
xchg
jnp
mov
pop
or
aam
imul
jle
lahf
pusha
cmp
add
adc
mov
and
dec
mov
test
sahf
mov
stc
imul
pop
add
sbb
shr
out
mov
mov
inc
outsl
pop
dec
push
add
mov
mov
test
cmp
ret
mov
shll
sub
cld
test
mov
dec
fcomi
shll
jl
dec
xchg
jnp
stos
scas
icebp
mov
cmc
xor
inc
fistl
adc
scas
aaa
pushf
jns
jbe
stos
jbe
rcrb
out
and
xchg
mov
cmp
jae
loope
pushf
lret
pop
xlat
xlat
cmp
bound
or
or
mov
lods
dec
jae
cmp
movl
xchg
pop
es
popl
loope
lret
add
jb
push
inc
push
jnp
js
xchg
dec
stos
xchg
adc
adc
push
loope
lea
dec
mov
jge
adcl
or
jecxz
sbb
xor
add
loop
lods
shl
filds
ljmp
not
mov
dec
dec
das
mov
hlt
push
scas
jp,pn
pop
frstor
dec
or
pushf
iret
mov
xchg
push
fwait
xor
add
pusha
mov
cmp
addr16
cmp
adcb
gs
push
test
lahf
mov
iret
dec
into
cmp
sbb
test
mov
fwait
in
jae
ss
test
or
cmp
or
pop
xor
daa
push
sbb
mov
inc
stos
movlhps
cmpsb
jnp
xor
sub
push
mov
js
out
and
xor
aaa
sahf
lret
ucomiss
ds
ljmp
in
push
fbstp
mov
inc
or
scas
pop
mov
and
mov
dec
gs
in
mov
into
cmp
mov
loopne
mov
mov
aam
mov
pop
jg
lock
cmp
and
inc
rcll
fldl
insb
lock
cmp
dec
jnp
popa
fdiv
push
icebp
dec
dec
out
imul
cmp
add
fcoms
xchg
addr16
lret
mov
stos
push
leave
popa
jl
add
jnp
sbb
sub
mov
iret
nop
cltd
dec
inc
xchg
adc
mov
int
and
js
mov
mov
sbb
aam
push
enter
popa
adc
jne
jno
stos
adc
fmulp
scas
icebp
pop
scas
or
xchg
adc
int
xchg
stos
loopne
adc
adc
inc
hlt
adc
adcb
fidivl
lock
ret
or
je
pop
orl
lahf
and
scas
pop
inc
cltd
push
push
and
pop
in
jno
push
xchg
dec
mov
and
or
and
xor
cmp
mov
popf
fistpll
shrl
mov
subl
bound
outsb
xchg
insl
into
gs
ljmp
or
mov
push
sti
jo
cmp
mov
xor
mul
push
push
xchg
xor
push
mov
push
inc
mov
cld
add
jns
push
or
or
nop
stc
push
jge
cmp
cmp
push
xchg
jns
jge
lret
mov
add
repnz
jnp
dec
stos
mov
adc
jl
add
adc
or
arpl
cld
cmp
add
pushf
inc
xchg
lret
mov
arpl
and
insb
xchg
incl
xor
or
lock
xchg
aam
sbb
loopne
jne
dec
stc
mov
cltd
dec
aas
dec
int3
jne
aaa
lods
rcrl
cmpsb
and
sub
mov
outsb
lcall
fucomip
out
test
imul
fcoml
testl
daa
pop
aaa
sub
rclb
jmp
pop
repnz
cwtl
jb
pop
sub
add
xchg
data16
sbb
int
xchg
jb
scas
dec
rcr
xor
dec
push
dec
jmp
gs
push
call
fwait
test
mov
pop
and
xchg
mov
pop
push
xchg
mov
loopne
mov
jae
leave
xlat
addr16
jns
cmc
push
adc
sbb
add
xchg
mov
inc
sub
inc
adc
jecxz
inc
cmovae
popf
sti
add
lea
sahf
sti
mov
mov
jecxz
in
jge
add
cmpsl
mov
lcall
mov
pop
ljmp
add
adcb
sub
adc
movsb
imul
cmp
jmp
push
ret
aad
cmp
ds
test
pusha
adc
scas
insb
jb
and
stos
call
lret
test
cmp
aam
inc
inc
adcl
mov
in
jmp
inc
fisubrs
jle
lret
aam
das
cmp
adcb
xor
dec
pop
xor
in
rcl
mov
nop
inc
mov
inc
xchg
fldt
enter
test
hlt
dec
pop
push
pusha
inc
xorb
inc
mov
outsb
lds
fnstenv
aam
stos
rep
sbb
mov
xchg
fcomps
fsubs
out
dec
xor
pop
mov
andb
xor
hlt
outsb
sbb
das
scas
sbb
dec
xchg
bound
sbb
adc
insb
sub
out
pop
inc
movsl
dec
xorl
test
ret
lock
jae
dec
and
shlb
popf
int3
push
push
cmpsl
loopne
mov
fisubrs
dec
sbb
inc
or
mov
addb
fcompl
jecxz
xchg
mov
xchg
jmp
sub
shl
mov
jns
xor
push
or
mov
fisubl
idivb
lods
ret
je
lcall
add
mov
sub
inc
sbb
gs
xchg
jb
push
fstl
ffreep
jge
xor
loopne
sbb
mov
sarb
push
insl
scas
jge
push
outsb
adc
sbb
cmp
xlat
cwtl
jl
sub
cmpsl
frstor
xor
aad
int3
mov
ja
cmpb
adc
ljmp
bound
add
lahf
mov
fnstenv
sahf
sbb
fisttps
hlt
add
add
mov
mov
sub
push
shll
or
xor
mov
daa
insl
and
cmp
enter
mov
or
xchg
jae
lock
cld
mov
dec
jle
idiv
xchg
and
fsubl
adc
mov
ss
cmp
sub
inc
pop
jb
ret
pop
add
lahf
mov
mov
in
popf
movsl
jbe
test
insb
push
sar
ja
jle
mov
stos
xchg
push
fistps
sbb
xor
les
adc
aaa
cmc
inc
sbb
cmp
cltd
cmp
les
cmp
nop
repz
ja
add
pop
mov
push
jno
imul
icebp
pop
cmc
xor
or
jae
lahf
mulb
loop
jecxz
int
mov
adc
pop
imul
mov
sbb
aas
scas
popf
js
or
xor
sub
insl
dec
call
xor
jecxz
add
adc
mov
fidivs
sub
push
jno
popa
sub
popf
lcall
lea
in
subl
and
jg
icebp
push
loope
pop
push
ja
jp
lcall
pop
and
shlb
push
pop
push
lock
in
icebp
inc
or
mov
xchg
push
dec
and
cs
loope
sbb
or
xor
adc
sbb
lock
fstl
add
or
push
pop
in
lds
xchg
mov
sahf
out
stos
addr16
fldenv
push
jne
adc
fnstenv
imull
and
aam
add
in
add
popf
sbb
and
fidivs
jge
mov
and
inc
mov
nop
shr
or
test
add
cli
aam
sti
xor
in
pushf
mov
out
insl
roll
jecxz
inc
mov
and
aaa
sbb
jnp
sub
jnp
mov
imul
adc
lock
xor
lret
scas
cmp
push
or
fldenv
frstor
out
sub
xor
jbe
adc
push
pusha
or
push
test
push
push
jno
dec
and
xchg
ror
mov
xchg
add
decb
in
pop
inc
sbb
cmp
pop
lods
dec
jg
jb
enter
xor
fwait
jg
pop
fmulp
inc
test
js
mov
lahf
jne
dec
test
test
mov
pop
sbb
push
shlb
push
cs
nop
fmulp
sbb
stc
sbb
pop
clc
sbb
sbb
inc
or
mov
rcr
aas
inc
into
pop
cmp
and
xchg
mov
push
mov
push
into
adc
in
sub
out
shrl
sbb
sbb
insb
lret
arpl
cld
push
frstor
out
test
out
loope
cli
push
cmp
push
dec
int
aas
xor
arpl
movb
mov
scas
mov
xchg
add
xlat
xor
sub
mov
or
jns
cli
pop
cmp
or
pop
roll
test
movsl
ljmp
hlt
scas
loop
mov
mov
jne
jge
int
in
aam
lret
call
repz
cmp
cltd
std
pop
in
sub
fnstcw
or
aaa
adc
mov
pop
mov
movsb
jb
lahf
lahf
mov
es
mov
add
mov
xchg
sbb
xor
xor
xorb
mov
gs
repz
mov
icebp
sub
lock
push
mov
repz
lock
bound
fsts
test
lahf
mov
sbb
mov
xchg
and
jbe
mov
fistpl
push
test
mov
pop
repnz
repnz
out
pusha
adc
xor
int
add
inc
pop
add
sar
cmp
cs
jmp
repz
push
sbbl
xor
inc
prefetch
adc
fisubrl
adc
dec
idivl
cs
leave
into
outsl
add
xor
addr16
icebp
lret
pop
pop
lret
loope
sbb
jge
mov
cmpsb
add
xchg
repz
inc
and
push
daa
push
dec
insb
cmp
sub
adc
push
out
adc
xchg
out
dec
out
sbb
ljmp
adc
out
mov
call
sub
aas
mov
icebp
sbb
dec
sbb
out
add
ss
call
dec
mov
jo
pop
fists
pop
jg
inc
and
or
sbb
mov
adc
adc
inc
adc
lcall
xchg
pop
mov
add
adc
or
jno
xor
sbb
xchg
jl
mov
nop
jnp
int3
cli
pop
mov
or
dec
filds
in
fidivrl
add
jecxz
subb
inc
in
aam
test
sub
push
repz
cmp
mov
xchg
pop
xlat
aam
call
in
nop
outsb
and
fs
mov
pop
enter
add
test
ret
mov
add
pop
cmp
sbb
sbb
int3
fs
xchg
imul
rorl
lods
stos
in
negb
nop
or
sub
xchg
push
and
cmpsb
in
rorl
mov
lret
cld
jbe
cmp
cmpb
in
adc
pop
fisubl
mov
cmc
enter
add
xlat
imul
add
sub
adc
pop
sub
xchg
popa
data16
ret
cmc
or
aaa
xchg
aad
push
aad
pusha
subb
sbb
adc
nop
lret
mov
inc
inc
mov
out
mov
gs
add
pop
or
insl
push
inc
cld
in
inc
mov
int
xor
jno
or
push
data16
mov
sub
and
adc
iret
sub
fs
aad
mov
xlat
push
mov
and
jge
iret
andl
inc
inc
aad
sub
pusha
frstor
add
mov
stc
push
andb
je
xchg
enter
dec
shll
cmp
test
pop
pop
or
add
stos
mov
cmp
mov
f2xm1
data16
orb
rsqrtps
test
sub
xor
or
lahf
xchg
fs
pop
or
lods
or
lds
dec
sbb
sbb
rcl
daa
imul
das
imul
jo
insl
imul
lods
add
fdiv
das
aaa
cld
lret
stos
test
pushf
push
inc
dec
inc
adc
das
stc
orb
push
cmc
scas
test
insl
mov
outsb
pushf
icebp
dec
cmp
dec
out
xchg
das
and
ret
xor
gs
mov
dec
test
push
aaa
push
lods
xor
mov
xlat
lods
arpl
mov
notb
dec
lret
jl
mov
enter
inc
sub
adc
leave
stos
es
scas
lods
out
push
xchg
arpl
cmp
adc
es
incb
fnstsw
test
jno
ss
jp
cs
or
or
in
pop
ret
out
pop
fs
insb
or
sbb
pop
push
out
addr16
dec
xlat
xchg
mov
arpl
inc
xchg
loope
push
and
mov
dec
jbe
sti
fsubrl
jp
jmp
js
pop
cs
test
fdivrs
test
jmp
cmp
into
and
adc
insb
out
div
or
xchg
push
cmp
pop
inc
mov
out
jo
sbb
inc
dec
mov
shl
pop
or
loop
fnsave
mov
dec
or
cmp
lahf
or
xlat
dec
mov
insl
outsb
cmc
aas
inc
fucomi
dec
lea
sub
mov
push
faddp
addr16
lret
popf
pop
fcmovu
mov
insb
pop
addl
dec
cwtl
lret
enter
jl
jno
ja
ret
xor
shlb
jb
rol
les
pop
sbb
mov
add
insb
push
mov
inc
pop
or
shrl
pop
cwtl
or
jge
dec
push
cmp
inc
scas
push
mov
sbb
sbb
pop
inc
and
jge
sbb
mov
mov
aam
sti
fcomps
mov
cmpsl
pop
test
in
and
test
aad
inc
jae
dec
xor
nop
gs
test
icebp
dec
mov
pop
mov
push
aaa
dec
dec
lret
cmp
movsb
sub
pop
fwait
mov
out
dec
jmp
jno
aaa
mov
out
cmc
add
or
dec
fs
scas
cltd
stc
loope
jnp
ret
ds
and
add
in
out
fbstp
imul
cli
ljmp
cmp
fimuls
pusha
call
adc
push
in
or
and
sahf
lods
push
xchg
mov
push
add
popa
jmp
jecxz
pop
xor
or
push
cltd
lock
rorb
in
loope
sti
sub
stos
mov
or
out
test
rorb
int3
mov
test
xor
fsubrl
mov
lcall
cmp
jbe
imul
push
clc
es
pop
aaa
push
mov
loope
in
sub
mov
push
inc
ja
cli
mov
inc
mov
call
rcrb
xchg
repnz
add
xlat
adc
xchg
nop
repnz
cmpsb
cli
push
into
ret
int3
mov
xchg
inc
sahf
jae
fsubr
jle
daa
ret
mov
test
es
fists
jmp
mov
xchg
pop
mov
pop
pushf
sbb
sbb
outsb
jbe
cmp
mov
sahf
stos
mov
and
cmpsl
nop
faddp
jae
dec
dec
sbb
lods
inc
cmpsb
adc
cmpsl
pop
push
test
xchg
cmpsb
sbb
cmp
mov
out
or
cmpsb
push
scas
sub
aam
popa
inc
aam
mov
adc
push
cmpsb
shlb
mov
out
loop
push
in
gs
orb
sahf
mov
dec
rol
cmpsl
xchg
and
aas
jmp
arpl
xchg
add
mov
and
inc
mov
add
or
hlt
hlt
ljmp
adc
pop
dec
push
adc
cmp
jecxz
lcall
or
push
icebp
push
scas
imul
pop
orb
das
and
loop
mov
push
test
sub
std
fnop
pop
negb
add
sbb
dec
dec
pop
dec
loop
push
jae
pop
pop
out
push
pop
stc
mov
fiadds
mov
lods
dec
jle
add
dec
js
sub
sub
aad
rorl
jge
fwait
outsb
push
iret
lahf
jnp
loop
sub
pushf
in
sbb
cli
mov
push
inc
cmc
cltd
imul
imulb
scas
loope
cmp
lahf
mov
ret
bound
mov
or
lret
insl
pop
pushf
lret
mov
xlat
movsb
arpl
lcall
mov
popl
xchg
bound
push
outsb
xor
sbbl
mov
inc
mov
xchg
aaa
mov
cltd
cld
add
shlb
xor
js
fucom
ljmp
pop
push
jb
cld
popf
jbe
in
push
mov
xor
push
jle
addr16
mov
js
inc
paddq
jnp
sbb
or
jb
stos
lret
add
xchg
adc
ds
out
cmp
imul
pop
ficomps
movsb
jns
movsb
pop
icebp
jbe
bound
mov
pop
les
iret
xchg
repz
jns
jg
xorl
jl
pop
outsb
xor
push
sub
xchg
jnp
inc
inc
pop
pusha
add
outsl
add
push
inc
lret
lcall
add
mov
cmpsb
cld
js
lahf
sbbl
ja
sub
das
mov
jle
xor
sub
out
sbb
cli
dec
jmp
xor
push
fsub
cmp
aad
call
xchg
arpl
leave
jne
mov
push
iret
mov
daa
inc
lcall
sahf
pop
push
int
lret
repnz
lret
imul
fistpl
daa
push
ret
inc
xchg
jns
sbbl
cmp
rcl
mov
pusha
rol
pop
xchg
fwait
jge
sar
stos
push
xchg
cmpsl
mov
fnsave
jno
rcll
push
dec
pop
pop
and
add
jbe
mov
adcb
sub
or
dec
fsubl
and
jns
test
xchg
push
pop
fwait
and
leave
movsb
cmpsl
ficompl
xor
ss
mov
jae
jne
dec
lret
out
rcrl
mov
mov
mov
lret
repnz
xor
lcall
cmc
push
add
sub
sbb
gs
loop
stos
add
and
int3
adc
es
add
rolb
cmc
int3
hlt
cmp
dec
sbb
jmp
cli
jge
jmp
and
fnstcw
sub
push
test
faddl
cli
jge
jno
lret
jle
mov
fsts
mov
adc
out
or
iret
in
sti
pop
jae
int3
inc
out
pusha
cs
out
xor
fmull
push
mov
int
mov
xchg
jae
pop
pop
jno
inc
cli
push
fcmovb
mov
adc
sub
pop
lds
push
lcall
inc
add
push
mov
in
jmp
jmp
shlb
hlt
mov
dec
in
add
dec
inc
push
add
or
mov
push
add
cmpsb
push
lcall
sahf
mull
mov
xchg
popf
pop
mov
inc
push
fisttps
push
ret
into
dec
cmc
lret
dec
mov
cmp
divb
fs
dec
or
out
or
les
repnz
lret
xchg
dec
and
lods
mov
and
pop
out
jbe
jmp
and
subb
loopne
inc
cmp
bound
push
sub
dec
inc
es
movsl
dec
push
rorb
lds
jae
mov
les
fcomp
adc
or
fcoml
ficomps
mov
nop
or
xchg
enter
sub
divl
sbbb
cmp
mov
pop
push
dec
xchg
push
and
push
pop
mov
hlt
insl
outsb
fistps
and
pop
cmpl
lret
mov
pslld
mov
jno
in
pushf
xchg
frstor
jbe
dec
test
add
lea
add
test
test
sbb
addr16
cmp
clc
daa
imul
enter
ret
mov
nop
inc
mov
cmpsl
push
inc
sahf
daa
daa
loope
cmp
mov
dec
push
das
repnz
hlt
call
xlat
cmp
enter
mov
iret
daa
negl
inc
into
into
jp
xchg
or
lock
dec
leave
xchg
push
fucomip
cwtl
shrb
imul
sub
aas
aaa
jo
dec
dec
jg
cmp
sti
dec
into
cmc
or
mov
jbe
mov
xlat
leave
ss
mov
mov
jb
adc
jne
lods
xor
rcrb
ds
mov
test
or
push
lods
testl
ret
addl
movsb
daa
daa
cs
inc
rcrl
insb
push
leave
outsb
push
cmp
xchg
inc
sub
into
les
jbe
testb
and
stos
sbb
cmp
sbb
loop
inc
jae
int
mov
xchg
notb
cmc
sub
xor
dec
inc
push
in
adc
jle
mov
shl
pop
aam
out
repz
mov
and
mov
push
pop
stc
ret
aam
dec
and
push
clc
insl
scas
mov
inc
sbb
loopne
aas
out
xchg
out
mov
lds
fnstenv
push
mov
mov
mov
test
jp
push
xchg
outsb
clc
xchg
xchg
shll
jb
iret
addb
ljmp
stos
icebp
aas
fmul
cs
stc
inc
data16
icebp
in
repnz
rclb
into
out
cmp
lcall
xchg
insl
sub
mov
inc
dec
mov
mov
out
xchg
stos
cltd
cwtl
mov
enter
add
lahf
and
and
jle
mov
shll
ret
pop
stc
cmp
add
gs
sbb
inc
adc
jns
mov
and
push
dec
call
mov
cmp
fs
cmp
mov
rolb
iret
jb
lods
jecxz
pop
sub
sbb
adc
bound
loope
pop
sub
aas
cmp
mov
mov
sub
popa
push
or
push
rcr
sbb
pop
pushf
sub
in
cmp
bound
fnstcw
ja
mov
popa
cmpsb
jp
loope
sub
push
es
dec
mov
pop
pop
scas
lret
inc
daa
mov
push
aad
xor
push
ret
pushf
dec
repz
loop
cmp
cmpsl
in
cltd
add
repnz
jno
and
jge
xchg
inc
test
pop
ds
add
mov
lds
fdivr
repz
aad
stos
mov
xchg
adc
sahf
cmc
roll
lcall
sub
sahf
mov
jae
hlt
cmp
mov
mov
or
jns
loopne
test
out
cli
add
leave
inc
and
pop
dec
sbb
dec
pop
cs
mov
notb
inc
test
add
sbb
test
xchg
or
hlt
push
xor
sarl
mov
mov
daa
xchg
push
scas
jo
cmp
cltd
lea
jne
xchg
roll
das
mov
xor
push
inc
sahf
add
in
icebp
sub
test
pop
movsl
rcll
jo
jnp
das
pop
inc
mov
in
xchg
jmp
enter
mov
dec
jl
pop
jno
stos
out
adc
stc
ret
sbb
cmp
cwtl
dec
call
or
dec
jnp
jno
cmp
daa
lods
mov
push
iret
mov
es
pop
inc
rcrl
leave
inc
lods
sbb
dec
lret
mov
xchg
les
insb
mov
out
jecxz
movsb
in
mov
push
pop
xchg
push
push
xchg
jg
in
xor
lahf
das
lcall
push
mov
nop
ficoms
pusha
rorl
rcrl
xor
sub
sub
rol
push
push
sti
into
and
repz
pop
or
in
mov
js
pop
cmp
test
pop
push
dec
bound
xchg
imul
sbb
in
sub
in
cld
ds
sahf
xor
shrb
ja
adc
das
mov
imull
repnz
mov
xor
xchg
imul
rcrl
cmpsb
xor
mov
add
cwtl
push
je
cmp
jo
push
repz
sbb
lods
xor
stos
insb
xor
ret
mov
mov
push
jb
dec
jg
insb
mov
jmp
mov
js
add
aad
lds
mov
ja
pop
mov
rcpps
les
shlb
ret
push
imul
xchg
push
jo
cld
rclb
divl
mov
or
lds
jp
jbe
imul
and
adc
and
loopne
fldenv
mov
sahf
mov
inc
stc
push
andb
pushf
jg
js
loop
testl
mov
mov
sbb
es
mov
pop
mov
or
stos
mov
es
icebp
pop
or
jae
nop
add
lock
cmp
inc
fstpt
pusha
push
js
outsl
pusha
jae,pt
push
daa
dec
xor
lcall
and
aaa
mov
pop
xchg
subl
faddl
adc
xchg
pop
rcrl
and
ret
mov
pusha
pop
xchg
sbb
add
cmp
test
cltd
nop
inc
push
ficompl
push
aaa
leave
shll
aas
int
push
imul
jns
xor
pop
je
push
iret
mov
clc
sbb
cmp
testb
fmuls
sub
enter
out
ljmp
adc
add
fld
or
outsl
test
push
push
test
sahf
push
nop
pop
pop
mov
xchg
sti
je
add
dec
je
loop
rclb
out
mov
sub
cmc
icebp
pop
frstor
push
adc
jmpw
es
mov
sbb
in
inc
aas
adc
add
imul
out
inc
adcl
adc
repnz
mov
add
loop
or
pop
xchg
pop
pusha
and
fwait
movsb
mov
jp
pop
jbe
push
xor
jecxz
dec
nop
cld
orl
jg
cmp
arpl
jp
daa
stos
mov
out
in
jecxz
lds
mov
inc
jp
push
leave
xorl
dec
pusha
adc
fcom
xchg
adc
xchg
rcrb
adc
push
mov
mov
adc
in
icebp
mov
scas
jg
inc
pop
sub
mov
cld
inc
inc
pushf
arpl
sub
mov
or
push
gs
jmp
or
mov
rclb
out
xor
cmp
push
lcall
fsub
leave
and
iret
xor
push
shl
out
popf
push
pop
inc
out
and
inc
mov
add
push
xchg
out
out
sub
adc
jb
mov
je
jnp
xchg
inc
push
jg
and
outsl
xor
arpl
lock
addr16
sbb
xchg
mov
push
fildll
pop
notl
push
cmp
jo
mov
movsl
lret
or
shrb
sub
mov
jge
int3
add
sbb
ret
jae
addr16
sbb
out
mov
xchg
cmpb
mov
ds
add
push
repnz
xlat
int
inc
xchg
imul
mov
inc
test
add
inc
ljmp
xor
test
inc
and
sub
rolb
and
imulb
adc
mov
ret
pop
mov
jecxz
cmp
sbb
pushf
mov
scas
int3
pop
jo
adc
pop
ret
les
incb
popa
in
stos
cmc
xchg
cmp
dec
outsb
sbb
nop
fildl
xor
mov
outsl
cmp
push
cmpsb
lahf
iret
mov
mov
sahf
pusha
mov
adc
imul
cwtl
jmp
enter
dec
mov
mov
xor
mov
ret
mov
jnp
dec
jne
dec
xor
push
sbb
lret
stos
dec
cmpsl
sub
notw
jmp
jae
out
add
into
ljmp
lock
xchg
das
push
loopne
mov
mov
iret
xlat
imul
or
int
cli
into
push
cmp
adc
mov
shll
add
lods
jmp
xchg
fisubrl
ja
push
loop
xchg
or
xchg
lea
adc
aas
pop
stos
shll
sti
fs
nop
adc
addr16
xchg
mov
lcall
cmpsb
or
js
adc
cs
std
cmp
mov
cmp
mov
push
lods
push
cmpsl
jp
cmp
jno
mov
repnz
ljmp
sarl
mov
sub
aaa
pusha
mov
inc
sub
cmpsl
push
repnz
iret
dec
jnp
sti
hlt
push
inc
lret
inc
pushl
fiadds
adc
add
xchg
cli
call
xor
push
mov
jge
mov
test
jns
xchg
xor
xchg
xlat
inc
push
push
lret
adc
jb
push
popw
clc
and
dec
push
push
adc
mov
ss
arpl
fwait
lahf
aaa
inc
and
leave
dec
add
insl
xchg
repnz
xchg
mov
mov
data16
push
mov
or
xchg
ds
mov
into
pop
pop
pop
mov
addr16
icebp
daa
inc
mov
ret
mov
in
leave
addr16
outsl
mov
add
lds
out
sbb
outsb
lea
ficoml
jl
test
lock
push
fsubrs
mov
cmpsb
cwtl
push
add
pmaxsw
push
sbbl
enter
lret
adc
sub
popa
int
xor
pop
mov
pushf
dec
or
fwait
dec
out
fnsave
sub
sub
popf
cmpsb
inc
mov
imul
insl
repz
add
cmp
mov
test
fstpt
sbbl
inc
js
sub
cmp
dec
pushf
pop
pushf
xchg
in
insb
cmp
mov
and
shrl
mov
xchg
rolb
inc
out
popl
not
insb
push
idivl
scas
mov
in
dec
out
hlt
daa
mov
sub
cmp
jbe
pop
aas
lock
jp
inc
pop
cmpsb
das
jg
repnz
sbb
addr16
push
ds
shlb
jbe
adc
pop
dec
stos
jmp
xchg
mov
dec
sub
jmp
add
mov
push
or
fldl2t
rcrl
jbe
pop
xor
mov
mov
xor
hlt
arpl
es
add
mov
mov
sti
imul
aad
add
mov
mov
mov
aam
inc
push
das
mov
mov
inc
dec
shll
inc
or
int
adc
int
scas
push
pop
filds
push
int
dec
in
cs
xor
cmp
in
imul
sti
push
cmpsl
fnstcw
and
xor
inc
adc
xchg
pop
popf
out
addr16
in
adc
outsb
fdivrs
xchg
xchg
lds
outsb
sbb
jns
dec
stc
mov
icebp
push
fidivrl
or
data16
mov
pop
fldl
fwait
outsb
shl
push
mul
js
sbb
ret
dec
mov
mov
repnz
call
or
lret
mov
sbb
mov
sbb
test
pop
cltd
dec
and
call
push
push
cmp
pop
pop
xor
push
mov
mov
out
mov
mov
das
mov
cmp
and
lock
in
stos
out
inc
out
fidivrs
popa
or
js
inc
pop
sub
icebp
sub
add
mov
dec
mov
imul
pop
pop
into
out
pushf
ljmp
fcompl
cli
mov
add
xchg
lea
inc
push
jnp
icebp
outsb
lahf
iret
in
das
adc
jge
xor
xchg
call
inc
jle
inc
js
xchg
call
out
dec
out
repz
pop
scas
sarb
add
dec
imul
mov
ret
push
mov
jne
outsl
xlat
jns
cltd
pop
add
cmp
mov
fwait
xchg
mov
adc
add
shll
pop
add
fsub
test
push
sub
cmp
ss
cmp
enter
inc
cmp
iret
roll
push
jg
popf
jns
adc
pop
ret
sbb
sub
idivb
xor
inc
mov
xchg
rol
mov
push
clc
jbe
jle
sarb
and
je
cmc
and
jge
es
xchg
jb
mov
cmp
movsb
inc
pushf
jne
pusha
dec
mov
out
iret
push
insb
xor
sbb
popf
cld
jle
inc
lods
xor
mov
repz
pop
mov
push
inc
sub
adc
xor
xchg
xor
into
cwtl
repnz
out
mov
decl
sub
in
mov
fcmovnu
sub
fildl
out
push
mov
mov
push
jl
call
pusha
shll
jge
movsb
int
ret
jmp
xchg
stos
testb
cmpsb
lcall
mov
sub
lea
jecxz
test
popa
in
lods
fdivrs
stos
jae
mov
outsb
fadds
popl
aas
cmp
add
mov
pop
ljmp
popa
push
fnsave
sub
rsqrtps
cmp
xchg
sbb
lods
int
lahf
cmp
lcall
lea
roll
or
fmull
adc
sub
js
cmp
int3
mov
rclb
sahf
test
jno
lea
xchg
jns
xor
xchg
or
sub
push
leave
xchg
bound
pop
push
pushf
aad
cmp
lcall
push
or
jge
js
inc
xchg
xor
loope
in
insb
push
iret
cwtl
cs
push
mov
pop
nop
jne
cltd
in
mov
bound
push
push
push
insb
enter
mov
aaa
hlt
rcll
dec
jge
dec
fnstenv
mov
push
mov
xor
jecxz
inc
pop
faddl
mov
sbb
jmp
or
pop
inc
subl
repnz
stos
outsl
scas
in
jne
outsb
inc
scas
sbb
call
rcll
loopne
movsl
imul
lret
aam
stos
test
mov
lret
jb
mov
xchg
dec
pop
inc
sahf
dec
aam
cmpl
mov
das
decl
les
jmp
pop
les
mov
lret
mov
or
rorl
pushf
jmp
inc
fisubl
pop
mov
mov
push
pextrw
mov
outsl
dec
movsl
test
ss
cmp
xchg
andnps
loopne
or
or
popf
push
loop
push
flds
out
mov
xor
movl
lods
lahf
fldl
sub
mov
mov
sbb
inc
mov
cwtl
arpl
shll
mov
mov
movsl
loop
test
xchg
cmpb
enter
sbb
addr16
mov
inc
cmp
adc
xor
and
ret
pop
cmp
or
push
leave
push
xchg
and
inc
jle
xchg
stc
rcrb
mov
push
mov
imul
ret
mov
sub
or
addr16
daa
cmp
xlat
xor
stc
push
repnz
cld
dec
loop
jg
push
xor
push
pop
xlat
sub
mov
daa
mov
mov
sbb
xor
mov
mov
in
mov
push
sbb
sub
enter
push
fidivs
jle
adc
clc
test
scas
fnstcw
popa
popf
push
fwait
das
dec
pop
sbb
inc
rclb
pop
mov
or
mov
xchg
cmp
add
mov
nop
sbb
call
popf
adc
jmp
movsl
sub
dec
xor
daa
daa
ret
outsl
push
and
jnp
dec
mov
jle
jb
sahf
xchg
adc
dec
jg
adc
sarb
int
outsb
mov
enter
push
push
stos
pop
in
jb
xor
inc
mov
push
rcl
je
jmp
mov
mov
or
loopne
add
test
out
mov
push
mov
adc
xor
inc
and
outsb
dec
imul
and
popf
aam
pop
jle
cmpsb
popf
jge
imul
outsl
lods
pop
pop
sbb
lcall
lds
iret
lea
jecxz
push
andl
xor
adc
imull
pop
ftst
iret
sub
sti
mov
mov
add
mov
xchg
icebp
stc
or
dec
sub
sub
rclb
movsl
pop
js
fistpl
jecxz
dec
jp
mov
xlat
sbb
mov
aas
call
mov
xchg
call
inc
and
push
xor
push
out
mov
jmp
xor
and
mov
mov
ss
jge
pop
sbb
daa
cs
andb
inc
pop
ret
repnz
sti
jo
int3
ret
shrl
pop
or
hlt
inc
sub
inc
inc
xor
sbb
hlt
xlat
in
aad
je
icebp
or
add
std
add
popa
fmuls
push
loop
mov
fstpl
or
add
aad
pop
int3
mov
pop
dec
lods
cmp
imul
fstl
jl
xlat
cwtl
adcl
cld
sbb
inc
dec
jnp
mov
rcrl
add
mov
scas
ret
pop
fstpl
icebp
loop
push
rol
push
adc
std
loopne
push
push
arpl
sarb
insb
sti
popa
mov
bound
rorb
lods
add
ret
and
and
push
mov
mov
jl
jmp
push
adc
and
adc
xchg
iret
call
mov
loopne
push
pop
sti
outsl
inc
lret
sub
lea
and
insl
orb
arpl
stos
negl
inc
pop
mov
out
xchg
dec
cmp
fldl
and
or
mov
je
sub
ljmp
xchg
les
mov
repz
flds
mov
or
jp
sbb
movsb
orb
jmp
xchg
insl
outsb
push
into
push
jno,pt
lds
inc
and
jge
cmp
mov
call
rolb
aaa
loop
sbb
add
repz
push
inc
sbb
push
pop
shl
adc
jge
aas
cmc
sti
jmp
pop
inc
mov
movl
mov
xchg
push
mov
pushf
xchg
mov
add
lods
aaa
xorb
adc
push
insl
mov
pop
mov
jno
mov
sub
hlt
es
aad
cmp
xchg
xor
jl
sbb
inc
xchg
in
jle
loope
xchg
mov
pop
xchg
jg
imul
jmp
js
cmc
iret
movsb
cs
pusha
dec
loope
test
popa
xor
sahf
adc
jb
leave
ja
push
push
jle
mov
cmp
in
inc
mov
and
inc
popa
rcll
jle
adc
fwait
mov
das
mov
add
pushf
and
cmc
mov
lods
jmp
mov
int
dec
push
mov
pusha
shlb
xor
rol
insb
pushf
pop
popl
mov
fstp
inc
dec
int3
xchg
outsl
outsb
jmp
addr16
cmp
dec
sub
pop
insl
repz
mov
test
fisubrs
enter
xor
push
xor
fiaddl
movsb
enter
mov
pop
or
push
mov
aaa
pop
push
mov
inc
xor
adc
push
xor
fsubrp
aad
pop
push
or
shrb
cwtl
lcall
and
imul
and
loopne
xor
sarb
adc
loopne
je
insl
fsubr
mov
loopne
add
mov
ret
shll
sahf
pop
push
icebp
mov
xchg
xchg
adc
ds
hlt
pop
cmp
push
adc
fcomi
push
add
movsb
addr16
mov
sub
add
leave
hlt
dec
rcll
sub
imul
das
xchg
xchg
outsl
mov
xchg
inc
daa
iret
in
xchg
notb
sahf
fistps
out
sti
push
xorb
and
arpl
xor
xchg
test
mov
arpl
pop
xchg
fmuls
test
cmp
mov
add
mov
loopne
jp
xchg
aas
mov
sbb
pop
adc
mov
call
xor
push
fwait
or
cmp
push
xchg
or
push
mov
mov
popa
pop
das
mov
js,pn
sub
jnp
into
mov
inc
xchg
adc
xor
jmp
jge
sub
mov
pusha
fnstcw
xchg
sbb
lea
repz
scas
jg
adc
pop
jecxz
incl
stos
scas
mov
sbb
jmp
mov
mov
cmp
push
pushf
xor
mov
das
jle
dec
xchg
in
push
outsl
jmp
lock
mov
push
imul
sahf
xor
or
sbb
movsb
stc
mov
sub
sti
dec
shl
iret
outsb
fisttps
aam
data16
movsb
movsl
adc
xor
pop
pop
push
repz
ss
jp
pop
pop
popa
ljmp
pop
std
or
push
or
mov
inc
dec
jecxz
mov
cmc
mov
fstps
mov
mov
lods
mov
sbb
sbb
lcall
dec
mov
outsl
mov
xchg
imul
repz
pushf
out
out
mov
mov
mov
jo
fnsave
xor
lods
fnsave
adc
mov
sub
adc
sbb
mull
adc
jae
nop
xor
movsb
mov
shll
jp
cmp
jmp
imul
outsl
dec
sub
mov
test
out
faddl
fiaddl
int
ucomiss
pop
cwtl
mov
inc
add
lret
or
lods
push
mov
jmp
sub
and
mov
cltd
sub
out
jle,pn
popa
mov
test
testl
ficomps
andb
test
sub
or
lahf
mov
fimuls
fisubrs
mov
jns
mov
sub
pop
loop
lods
mov
dec
lea
xlat
and
add
stc
xor
push
cwtl
out
mov
xchg
call
pop
cmpsb
fisubs
xchg
fwait
pop
mov
dec
inc
mov
cmovno
or
dec
ja
mov
lcall
jle
int3
mov
mov
and
add
stos
push
sbb
mov
les
aas
xlat
mov
sub
iret
mov
push
cmpsb
icebp
xchg
cmp
mov
sub
sub
mov
popf
icebp
or
xchg
sub
sub
xlat
nop
or
icebp
out
push
je
outsb
inc
repnz
js
jno
out
ret
imul
mov
push
mov
inc
out
mov
mov
mov
sti
add
inc
add
jb
int3
cmp
adc
and
sub
xchg
fcmovb
and
or
adc
push
dec
ret
pop
adc
loop
jmp
inc
jns
xorl
inc
mov
add
dec
hlt
pop
add
scas
push
test
adc
mov
adc
push
sarl
xchg
iret
mov
sub
push
rorb
jg
cltd
push
add
dec
mov
addr16
adc
push
inc
cld
shll
xorb
jae
mov
add
or
int3
xor
or
popf
js
outsb
inc
xchg
jnp
xor
inc
xor
mov
repz
addl
std
and
insb
mov
xchg
jno
roll
cld
xorl
cmp
scas
fxam
and
fnsave
mov
in
jl
push
and
stc
test
push
pop
cmpsl
push
mov
aaa
mov
jne
adc
lret
mov
mov
and
dec
adc
scas
fidivrs
pop
dec
mov
xor
mov
out
dec
outsl
stos
jno
lods
out
scas
sub
sarl
mov
or
mov
or
or
fisubrs
push
cs
ljmp
inc
shl
mov
or
mov
fmull
rcll
xor
fwait
es
mov
or
mov
dec
frstor
or
push
nop
inc
and
notb
aam
mov
xorb
clc
outsl
inc
mov
xchg
inc
cmpb
dec
aad
dec
push
jne
in
cwtl
ss
in
push
lcall
mov
cmp
icebp
fstp
aas
test
push
mov
out
mov
jns
outsl
pop
dec
fstpt
test
stos
ljmp
ljmp
mov
cmpsb
dec
arpl
sbb
push
cmp
pop
aaa
scas
or
pop
push
add
sahf
jecxz
mov
divb
xor
pop
mov
cli
rorb
aam
adc
icebp
scas
jns
sbb
std
inc
sub
mov
insb
std
inc
stos
add
js
fimull
int
daa
icebp
loop
ficomps
iret
iret
mov
dec
mov
out
push
sbb
pop
icebp
data16
add
cmpsb
mov
cmpsb
ss
out
and
xchg
test
loop
xchg
pop
dec
mov
adc
jne
mov
pop
loope
dec
cmp
dec
in
or
loope
aad
stc
mov
andl
sti
test
jno
out
cmpsb
mov
gs
push
xor
push
xchg
lods
xor
insl
push
xor
xor
dec
push
jl
sub
adc
add
xchg
fs
push
xchg
cmpsb
notb
jno
lds
dec
cmp
mov
pop
les
pop
add
mov
cmp
fdivrs
sub
testw
shrb
daa
xchg
mov
lret
imul
lea
insl
out
scas
stc
test
mov
dec
in
pop
mov
cmp
sahf
lahf
or
mov
pop
int3
mov
orl
das
pop
inc
jmp
hlt
fldcw
rcrl
mov
mov
jns
ret
and
sbb
in
or
fnsave
sub
cs
mov
adc
fwait
je
sbb
stc
or
pop
mov
xchg
pop
in
xchg
enter
clc
lret
in
mov
xchg
mov
cwtl
adcl
or
cmpsl
rclb
or
bound
and
xor
sub
imul
popf
dec
outsl
aad
fwait
mov
and
lods
mov
cmc
push
imul
mov
lret
dec
imul
lds
dec
jg
fistps
mov
test
cmp
into
in
pushf
fidivl
leave
pop
cli
rorb
sbbl
mov
sub
shrb
je
mov
call
and
sub
sbb
rolb
icebp
mov
mov
xor
cmp
pop
insb
outsl
lcall
scas
mov
movsl
xor
push
cmp
repnz
or
pop
cmp
push
mov
jmp
jge
add
arpl
xor
lock
lret
ja
es
sbb
jl
les
or
push
jno
into
lret
repnz
pop
cmp
adc
cmp
rorl
sti
mov
xchg
xor
insb
in
adc
pop
lock
sub
insb
popa
ficomps
shlb
mov
cmp
rorb
lods
imull
je
adc
jbe
vmovupd
mov
pop
iret
lret
pop
rcrl
dec
aam
lods
fldt
add
imul
adc
mov
or
xchg
adc
lock
arpl
lret
imull
push
or
mov
filds
add
push
aas
ss
or
call
cli
and
fimull
out
cli
lahf
xor
fprem
sbb
adc
jbe
fnsave
inc
xor
and
adc
and
sub
mov
dec
arpl
mov
dec
imul
inc
jmp
inc
push
repnz
addr16
outsl
ja
fimuls
imul
and
stc
inc
movsb
xchg
repz
xor
mov
sbb
popa
mov
out
mov
add
divb
pop
repz
les
fwait
rclb
mov
adc
ret
mov
sbb
push
popa
push
dec
jp
add
mov
cmpsb
or
aad
jb
xchg
rol
xlat
pop
push
rcrl
push
or
jne
shlb
inc
out
out
addr16
shr
vhsubpd
outsb
push
lcall
data16
outsl
xchg
add
push
in
das
out
pushf
cmp
cli
daa
in
iret
les
mov
adc
es
jno
insl
add
inc
lret
insb
inc
pushf
enter
pop
ljmp
add
and
pop
jecxz
inc
xchg
jae
inc
jle
ret
or
lahf
push
out
dec
movsl
dec
fwait
push
flds
pop
mov
push
test
cmp
sbb
or
jle
in
loop
and
data16
imul
dec
add
sbb
outsl
and
es
mov
xor
shlb
jns
adc
mov
adc
mov
int
mov
addb
fstl
cwtl
int
les
jp
mov
out
icebp
push
dec
mov
andl
dec
adc
icebp
scas
insl
add
scas
adc
mov
popf
fadds
xchg
fisttps
sub
arpl
dec
in
ror
lea
add
cmp
scas
call
push
xchg
and
test
jb
mov
add
inc
lods
aas
or
or
js
push
lods
xor
ljmp
sub
xor
mov
loope
imul
adc
clc
pop
in
mov
and
and
xchg
arpl
in
iret
addr16
jle
jg
dec
daa
xor
fnstsw
cpuid
xor
inc
addb
inc
dec
scas
icebp
lea
xor
mov
imul
out
push
dec
lock
add
push
xor
cwtl
pop
leave
ret
leave
sbb
gs
or
xor
pop
pop
lret
dec
popf
enter
or
test
mov
gs
es
dec
sub
inc
addb
or
add
or
mov
xor
fwait
fwait
stos
cmp
mov
mov
ja
cmpb
mov
push
aad
mov
sub
lret
jne
loopne
mov
rcll
and
push
data16
clc
std
mov
pop
sub
leave
and
inc
dec
jle
mov
in
jnp
fsincos
fisttpll
outsb
mov
inc
inc
cld
sbb
subb
xchg
jnp
testb
pop
inc
push
or
xorb
cwtl
leave
mov
jp
rorl
into
push
push
lcall
lock
sub
ret
loope
fwait
scas
mov
addr16
sarb
mov
mov
mov
xor
lahf
dec
cld
arpl
mov
sub
cs
sub
mov
daa
adc
dec
inc
loop
repnz
ds
jnp
add
add
push
xor
sub
test
or
push
xchg
or
call
or
insl
scas
mov
dec
pop
loope
mov
out
cmp
xor
xor
repz
mov
in
mov
into
or
mov
addr16
xor
inc
push
pusha
pop
adc
lahf
and
and
call
pop
shrl
jo
push
push
dec
jecxz
arpl
mov
mov
mov
jge
aad
sbb
and
push
xchg
outsl
mov
dec
add
mov
xchg
and
cmp
mov
shlb
cli
cs
inc
xor
cmpsl
hlt
jb
fnstenv
call
or
in
push
push
imul
sub
xor
lods
in
or
es
mov
sbbb
jp
push
cmpb
push
or
add
cmc
inc
popa
xor
xchg
cmp
mov
ret
jae
mov
cmpsb
std
sbb
nop
xchg
insb
jg
fldcw
jno
fwait
imul
adc
xor
out
pop
out
xchg
sbb
aam
add
or
mov
adc
mov
jno
sahf
lahf
scas
add
mov
adc
xor
push
xor
dec
dec
ficoms
cmpsb
int
repnz
call
mov
mov
inc
rcrl
mov
lcall
inc
cmp
mov
lret
jbe
cli
int3
xor
lahf
sbb
and
jmp
inc
adc
and
fsubrl
cli
in
xor
xchg
cltd
and
push
outsl
jnp
loop
push
push
in
xor
movsb
aam
sub
test
call
mov
popf
dec
xor
arpl
jae
jmp
jno
lods
ds
scas
mov
enter
jnp
cmp
add
ret
pop
push
lock
out
xchg
mov
push
or
ljmp
jl
sub
popf
test
push
xor
jnp
jl
pop
add
cmp
outsb
mov
std
out
adc
cmpsl
ret
or
and
jecxz
mov
sub
cmpsl
repz
and
jo
lods
cld
xor
add
adc
mov
pop
xchg
dec
repz
out
lods
push
sbb
add
out
into
sbb
mov
stos
dec
or
in
and
add
rep
xchg
mov
xor
mov
add
push
push
xor
jmp
cmp
or
or
fstpl
push
dec
test
push
out
ret
addr16
pusha
lret
and
pop
push
popa
or
movsb
lds
mov
jae
mov
jbe
and
push
mov
mov
jecxz
leave
dec
cmp
xor
imul
adc
mov
lahf
test
iret
fs
notl
mov
xor
mov
sbb
xchg
adc
outsb
cmpsl
mov
pop
pop
jge
or
pop
adc
cs
mov
adc
and
js
mulb
shlb
xor
jp
and
stc
xchg
push
lock
sbb
nop
sub
test
in
push
lods
jb
sbb
cld
mov
jge
int3
es
es
jb
mov
stc
fdivs
push
and
iret
into
and
mov
push
sbb
test
and
mov
xchg
adc
sub
out
pop
cmp
jmp
lods
sub
and
dec
or
cmpsl
fsubl
ljmp
dec
mov
enter
scas
loope
cli
jbe
out
mov
outsl
cmp
into
fimull
stos
flds
push
lock
scas
cltd
nop
inc
mov
sub
pop
pop
push
mov
out
addb
popf
jo
lds
lcall
sub
xchg
push
out
scas
subl
add
jae
mov
shr
jge
pop
les
sub
push
test
loop
jnp
inc
dec
mov
mov
dec
pop
push
add
in
mov
inc
push
xchg
hlt
push
bound
xchg
push
jl
rol
xchg
pop
jbe
sbb
or
pop
adc
ficompl
xor
shl
mov
pop
jo
lods
xchg
jns
xchg
dec
jbe
in
ret
fdivp
mov
fildll
xorl
mov
cld
fildll
out
nop
mov
pop
jae
cli
arpl
jns
pop
and
mov
lds
sub
jl
lds
lret
pop
icebp
push
sub
mov
cmc
jb
sbb
divb
dec
sti
jmp
push
jne,pn
sub
add
dec
or
xor
xchg
inc
fimuls
or
repz
and
push
sbb
rcrl
pop
into
into
add
movsl
cmpsb
nop
or
cmp
int
xchg
jp
inc
fcoml
ret
arpl
ss
xor
movsb
jl
stos
inc
push
repnz
cltd
or
repz
ficoml
cli
nopl
dec
sub
in
inc
loop
leave
cwtl
pop
cli
push
push
repnz
dec
into
js
push
pop
push
adc
stos
cwtl
pop
imul
enter
jbe
jno
push
pushw
sub
shrb
filds
jmp
cmp
mov
xchg
adc
or
pop
iret
and
mov
cli
cmp
in
sar
or
enter
repnz
push
leave
or
aam
xor
das
xor
jge
neg
in
xchg
pop
ds
xchg
and
or
or
ja
clc
ret
pop
push
out
lods
shrl
mov
insl
sbb
push
ja
jge
inc
jns
dec
adc
xorl
xchg
loope
lods
xchg
int3
sub
push
rcr
fwait
outsl
mov
daa
ss
cmp
cmp
mov
sub
es
push
xchg
mov
push
mov
dec
cli
in
fs
cmp
dec
push
lods
ss
aad
dec
inc
adc
into
ss
sub
xchg
lea
mov
rcll
jmp
cs
lock
sub
push
and
xchg
add
repz
out
int
mov
fstpt
shrl
int3
push
nop
outsb
lods
lcall
jbe
mov
inc
lret
xchg
sbb
sbb
pop
xchg
or
push
stos
pop
pusha
sub
push
mov
cli
cmpsl
or
and
es
or
jb
addr16
lds
sub
or
sub
inc
mov
xor
outsb
push
mov
leave
cmc
dec
mov
and
xchg
out
cmp
mov
adc
inc
push
inc
test
or
adc
cwtl
cmp
jecxz
push
out
loop
out
in
xlat
fdivl
jecxz
sti
push
dec
in
mov
lcall
and
ss
pop
shlb
int3
xchg
fs
faddp
pop
inc
shrl
and
add
or
jb
push
subl
and
xlat
ljmp
aas
outsl
push
dec
scas
add
dec
lahf
mov
jne
xor
xchg
push
stos
xchg
ret
xchg
xor
mov
jnp
lahf
daa
jp
out
xor
sbb
rcl
pop
xlat
out
pop
gs
sub
mov
mov
cmp
fsts
adc
adc
lcall
mov
nop
cmp
sub
insl
mov
pop
inc
lods
dec
and
adc
xor
dec
mov
cmc
ljmp
xor
jle
lds
dec
mov
addb
dec
fsubs
push
das
lahf
mov
adc
push
jmp
pop
xor
push
xor
adc
data16
mov
sub
push
mov
sub
xchg
sub
or
adc
jbe
jbe
fimuls
pop
hlt
xor
ds
jne
addl
lret
fldt
adc
xchg
cmpsb
jae
aam
scas
rclb
sarb
aad
and
mov
pop
jle
jge
out
leave
mov
pushf
imul
das
adc
adc
mov
sarl
cmp
or
mov
fildll
sarb
jnp
mov
addb
cmp
mov
fimuls
rclb
mov
les
mov
jg
mov
int3
test
test
mov
cmp
out
ret
push
mov
cs
loopne
push
push
add
out
or
and
movsl
push
dec
das
aas
cmp
int
lods
dec
addb
pop
mov
inc
jae
sbb
dec
hlt
push
adc
cmp
xor
mov
lods
pop
xor
jle
shlb
or
and
data16
sub
es
xlat
and
int3
fmul
imul
push
push
fadds
or
stos
dec
pop
cmp
pop
xchg
popf
rorl
mov
stc
cmp
lahf
dec
sub
jl
or
jae
ja
push
pop
cmp
mov
xor
sub
lahf
jecxz
in
xor
cmp
or
addr16
pop
xor
rclb
cmp
jp
popa
int
clc
or
add
ja
mov
jmp
hlt
dec
iret
test
xchg
sub
mov
sarb
mov
cmp
pop
add
inc
imul
cli
jmp
stos
loop
addr16
xchg
js
in
notb
cwtl
push
add
inc
xlat
adc
add
sbb
fdivrs
call
in
repnz
mov
stos
dec
inc
insl
pop
fmul
subl
xchg
dec
dec
adc
cld
lods
mov
sbb
sbbl
or
mov
cmp
ret
es
loope
inc
call
jo
jbe
in
push
mov
jns
das
cmp
ret
jnp
addb
mov
fmuls
imul
lcall
sub
cld
mov
aam
jo
pop
sub
scas
bound
xchg
ljmp
faddl
pop
popf
popf
xlat
pop
lods
nop
shll
add
jle
cmpsl
in
ficomps
or
mov
ljmp
dec
stos
xorl
xchg
in
js
inc
xor
std
out
mov
aam
inc
call
jnp
sub
notl
adc
test
fildl
lret
call
jb
and
adc
ja
or
test
into
sbb
dec
pop
enter
dec
lds
xor
cld
repz
shl
and
roll
jmp
dec
iret
mov
fdivl
cltd
mov
ja
cld
in
push
imul
pusha
out
adc
sahf
and
push
mov
cmpsl
add
pushf
sub
jecxz
ror
jnp
imul
loope
mov
sub
sbbl
sub
xchg
sbb
popa
rcl
inc
ret
sub
or
pop
xrelease
inc
pop
test
adc
jg
push
pop
bound
je
xchg
mov
popa
lock
add
jo
jg
xchg
fisttpl
xor
push
or
loop
jae
outsb
mov
xor
inc
call
add
xor
xor
insb
sbb
loope
jmp
mov
jo
mov
dec
test
fcoml
mov
xor
movl
int
test
je
xchg
sahf
call
in
adc
std
mov
jmp
nop
je
pop
jecxz
loopne
rdtsc
lods
jle
je
cmpl
mov
cwtl
lahf
or
and
das
dec
inc
movsb
xchg
mov
repnz
int
insb
fsubr
jecxz
xchg
add
add
in
dec
int3
rcrl
out
icebp
mov
push
repz
cs
stos
adc
scas
or
adc
pop
ret
jnp
fistpl
rol
fdivr
into
aas
movsl
std
aaa
jmp
aam
out
lds
dec
xchg
ret
sahf
cmc
push
sahf
sbb
mov
in
jb
lahf
mov
int3
fidivrl
out
xchg
sbb
in
xchg
clc
fcmove
test
cmpsb
inc
mov
loop
pop
sub
sbb
push
add
clc
push
push
std
flds
lret
cmp
scas
jbe
aad
dec
divb
push
mov
les
sbb
test
xchg
nop
movsb
movsb
adc
popa
scas
loopne
das
scas
inc
push
cmpb
mov
loop
lcall
xor
fwait
pop
arpl
cltd
test
jne
mov
stos
pushf
mov
xchg
add
adc
push
fs
xchg
jmp
dec
inc
jae
rorl
les
les
xchg
ret
gs
xor
mov
xchg
cltd
pushf
test
mov
xchg
sbb
sarl
sti
push
push
mov
roll
loope
jg
cmpsl
outsb
mov
pop
mov
mov
xchg
lret
add
int
ja
jg
insb
mov
cmp
or
popl
cmp
orb
nop
inc
fptan
pop
or
sbb
jns
cli
sub
inc
dec
iret
xor
frstor
lock
sub
ja
leave
iret
or
adc
sbb
cmp
mov
lahf
mov
lods
push
sub
inc
imul
add
fdivrl
fsts
xor
mov
dec
aaa
mov
inc
sti
pop
hlt
adc
test
inc
test
pop
packssdw
and
sub
rcll
pop
and
push
scas
sbb
pop
lods
aam
mov
and
dec
mov
mov
fisubs
xchg
pop
push
xor
int3
lret
sub
test
movsl
push
fisttpl
or
in
repnz
int
out
jg
lds
iret
leave
inc
aad
inc
pop
ja
out
out
mov
loop
shlb
lret
cmpsb
xor
pop
jb
js
cmp
shlb
scas
std
pop
shlb
jbe
mov
es
mov
dec
sub
stos
and
mov
in
ret
or
dec
sub
cmp
inc
cwtl
and
sub
les
adc
movsb
dec
pop
dec
leave
mulb
pusha
xchg
cmp
inc
jns
push
cmp
mov
push
loopne
mov
loop
lret
rcr
jecxz
mov
divl
mov
mov
rcrl
add
mov
xchg
mov
jns
lea
jmp
jle
xor
xor
mov
ljmp
push
cmp
pop
testb
sarl
cmovge
and
dec
stos
cmp
test
or
in
jmp
sub
cmp
fsubl
or
push
xor
in
shr
pop
add
lods
jecxz
adc
jge
cmpb
popf
sbb
inc
xor
repnz
icebp
lahf
fistl
fidivrs
out
fildll
aad
mov
arpl
fdivrl
mov
in
daa
je
mov
fcomps
cwtl
fidivrl
test
xchg
daa
popa
aad
addr16
or
mov
adc
cmp
mov
mov
outsb
jl
xchg
mov
lods
std
push
sbb
call
lds
dec
scas
mov
out
stos
sbb
push
fadd
dec
repz
fs
in
cmpsb
notl
aas
andl
push
pop
pop
jo
jp
shrb
negl
arpl
lea
fnstcw
jno
mov
lods
insl
sbb
mov
xchg
pop
cmp
jae
js
test
idivb
test
add
xlat
dec
jp
test
pop
xlat
jge
gs
sti
jg
scas
lahf
dec
adc
jns
jb
aaa
mov
stos
sub
dec
add
arpl
in
jl
fadds
sub
pop
xor
adc
jns
xor
push
dec
mov
ljmp
sbb
jns
sbb
fbld
repnz
hlt
out
or
add
push
pop
push
sub
push
leave
lods
xor
sub
xlat
mov
aam
dec
testl
sbb
scas
pushf
sub
test
lods
xchg
cmc
push
mov
repz
in
xor
mov
sub
cmp
movsb
pop
call
ljmp
dec
or
cmpsl
sub
adc
mov
pop
idiv
cmpb
movb
or
mov
xchg
ja
je
mov
dec
lock
or
ljmp
pop
sbb
add
and
es
test
push
mov
add
imul
xor
xchg
inc
and
jno
push
pop
push
test
xor
and
xor
loope
xchg
inc
in
add
push
ljmp
or
lcall
add
and
ret
aam
add
icebp
lcall
add
ror
outsl
inc
int
stos
mov
les
sbb
jne
mov
in
pop
cmp
lds
add
mov
add
testb
sbb
mov
outsl
lods
bound
lahf
cmpsb
js
jns
xchg
int3
adc
mov
in
int
daa
push
cmp
lea
iret
dec
rcl
mov
mov
dec
scas
or
shlb
paddusw
aam
and
cmp
icebp
aam
ret
ds
roll
fistpl
add
test
or
stc
pop
into
pop
cli
jns
push
hlt
lea
fcoms
mov
inc
call
out
scas
dec
xor
outsb
insb
xchg
mov
jns
inc
inc
cmp
and
clc
jns
sbb
and
inc
cld
icebp
aas
mov
add
mov
loopne
sahf
dec
pushw
inc
popf
jl
shll
lea
cs
popf
mov
jl
jne
pop
in
jmp
mov
sahf
adc
xor
push
rclb
mov
sub
sub
out
rep
sub
mov
add
cli
push
pushf
cmp
pop
mov
ret
arpl
mov
xchg
stos
jae
mov
pop
popf
jge
sub
and
push
dec
mov
sub
in
mov
outsl
cmc
mov
sbb
sub
sbbl
cld
loope
add
lcall
cmp
or
test
lds
mov
dec
orl
ja
jns
fsubrp
repz
out
lds
shll
jbe
jne
sbb
push
adc
adc
shlb
test
or
inc
daa
inc
shlb
ret
cmp
xchg
xor
and
outsl
dec
sti
cmp
les
xchg
push
mov
mov
pop
adc
fsubl
aad
imul
das
xchg
xchg
sbb
rclb
inc
jecxz
lahf
jnp
mov
jae
scas
shl
push
lret
xchg
testb
cs
out
dec
das
inc
imul
int3
out
inc
mov
stc
rcrb
outsl
pop
iret
out
mov
gs
cmp
add
adc
orl
repz
hlt
stos
scas
imul
das
push
inc
mov
push
push
sbb
lret
insb
sti
outsl
out
jecxz
push
xor
push
pop
sbb
lods
ss
imul
bound
movsb
scas
lock
xor
or
mov
dec
pop
adc
push
outsl
ret
mov
pop
mov
fidivl
test
cltd
add
add
xor
jmp
sbbl
pop
sbb
mov
je
dec
stc
mov
inc
mov
mov
or
dec
mov
mov
int
cmp
test
push
in
cwtl
jge
dec
scas
add
lods
xchg
mov
cmpsb
xorl
add
adc
push
sub
lcall
mov
push
in
imul
lcall
mov
push
fwait
cltd
pusha
test
push
lock
test
xorb
gs
cmp
or
pop
cltd
sbb
dec
loop
push
scas
outsb
dec
xchg
in
cli
sub
shlb
push
arpl
push
mov
push
loop
dec
inc
cltd
popa
xchg
or
sahf
dec
pop
shll
rclb
aas
mov
sbb
mov
mov
into
leave
int
out
jge
hlt
add
gs
enter
dec
arpl
cmpsl
mov
pop
lods
in
xchg
lahf
push
sbb
movsl
clc
sqrtps
fmul
mov
cmp
mov
pop
je
push
subb
lret
pop
fdivrs
adc
cs
shl
dec
into
pop
sub
cmp
repnz
or
jmp
sbb
push
sarl
push
or
lock
push
daa
or
into
xchg
xorb
pop
add
dec
xchg
mov
push
imul
test
add
push
or
pop
mov
dec
shll
cmp
mov
and
loopne
pop
push
pmaddwd
cli
inc
test
sahf
push
xor
rol
popa
push
lret
pop
inc
dec
std
loop
and
pop
mov
jns
mov
cld
cs
sbb
enter
xor
push
sub
xchg
cmc
nop
cmc
mov
pop
and
lret
adc
push
and
mov
pop
jp
pop
sbb
enter
aad
nop
lods
push
clc
push
mov
sub
jg
ja
call
mov
loopne
testb
lds
mov
in
jmp
pop
cli
or
std
xor
jb
in
cmpsl
sub
fadds
mov
cwtl
dec
imul
mov
cmp
xlat
mov
mov
push
into
mov
inc
add
test
fs
outsb
loopne
xor
jle
add
in
jns
pusha
nop
jmp
stos
add
mov
jle
jo
sbb
test
inc
inc
adc
or
testb
or
mov
pop
aam
mov
jnp
sbb
pop
push
popf
fstl
jp
daa
data16
dec
jecxz
daa
out
mov
sbb
mov
ja
sub
xor
sti
dec
jno
lret
sub
dec
fldt
mov
sub
xor
inc
rorl
sbb
loope
ds
sbb
sbb
ret
addr16
mov
pusha
cmp
je
addr16
imul
jl
loop
popa
clc
sbb
mov
test
inc
lods
scas
loope
subl
sbb
insb
jecxz
fsubp
pop
imul
lret
or
jbe
dec
punpckldq
adc
loope
xlat
xor
les
xor
pop
add
lret
mov
mov
mov
mov
filds
and
dec
inc
and
sub
pop
cld
mov
pop
fnstsw
jp
jns
mov
inc
out
and
daa
into
inc
cmpsl
inc
sub
xor
repnz
sti
in
movsl
inc
and
jg
push
addr16
add
jg
lret
add
dec
mov
insl
mov
jg
test
ret
sub
sub
mov
out
rcrb
sbb
rorl
sahf
mov
cmc
xchg
xchg
xchg
imul
arpl
push
adc
cmp
dec
inc
xchg
push
in
mov
sub
sub
stos
push
xchg
xchg
pop
fisttps
mov
fildl
and
adc
pop
scas
mov
pop
ja
movsb
mov
sub
jno
mov
mov
loop
jbe
mov
lds
std
sub
arpl
push
pop
ja
jp
push
xchg
pop
mov
cs
jne
shlb
mov
mov
cmp
inc
fisubrs
jecxz
cmp
xchg
pop
jns
push
jge
lret
aaa
mov
inc
cs
xchg
outsl
scas
in
call
sub
cmp
idivb
or
jne
subb
add
mov
sub
ret
sub
lea
cmp
aas
cmc
in
mov
sub
add
xchg
testb
fwait
lcall
pop
mov
bound
mov
into
lcall
xlat
mov
jl
div
fwait
into
sti
inc
adc
scas
pop
sbb
push
inc
cmp
notl
mov
sti
leave
test
faddl
dec
push
or
mov
scas
and
std
sub
mov
pop
stos
imul
push
les
sub
mov
fadds
addr16
lock
dec
in
fwait
aas
xor
aas
xchg
adc
adc
inc
in
aas
mov
jecxz
push
addr16
loop
jb
popa
inc
stc
xor
sahf
or
cmp
out
mov
add
insb
stos
fsubl
mov
lods
insb
aam
xchg
out
add
xchg
sbb
xor
inc
fistpll
push
cwtl
sarl
das
jle
icebp
enter
dec
stos
dec
push
xchg
xchg
int3
repnz
divl
push
scas
in
or
cmp
or
push
fldt
cld
outsb
sub
or
jecxz
imul
pushl
push
push
adc
cwtl
cmpsb
sbb
mov
imul
pop
and
add
aam
lds
or
pop
xchg
dec
ljmp
jp
je
xor
pop
push
jl
jbe
sub
push
push
and
dec
rcr
fcmovb
cs
pop
cltd
cld
or
pop
int
pop
jecxz
cld
push
out
sbb
sbb
xor
scas
lock
sarb
sub
cwtl
testl
push
cmp
insb
out
std
fists
pop
aad
or
mov
cmp
sbb
imul
or
insb
out
mov
jne
mov
std
pushf
jg
lret
call
mov
mov
add
ljmp
std
rcrb
repz
dec
add
or
stos
call
cmpb
mov
decb
cli
sub
shrl
fadd
fsincos
es
and
fcomps
ret
jnp
clc
lret
xchg
mov
add
mov
mov
mov
out
jns
adc
adc
cld
sub
inc
in
sbb
divb
push
and
push
pop
push
repz
stos
ljmp
sub
cmpsb
mov
addr16
inc
fstl
test
jns
lahf
xchg
or
cmpl
mov
push
push
aas
jp
loop
xor
mov
xchg
shrb
test
test
loop
lea
fsubl
shl
adc
fcomps
and
dec
xor
mov
dec
pop
push
insl
mov
or
sti
adc
jns
aaa
and
jae
gs
sub
sub
clc
ret
dec
push
cmc
mov
and
push
jle
jmp
repz
add
dec
sub
rcll
cmp
cmc
add
dec
jle
adc
das
sbb
cmp
fsts
inc
mov
adc
inc
lret
fsubrl
mov
stos
aad
test
outsb
frstor
pop
or
dec
les
lods
pop
sbb
shl
adc
add
xlat
mov
das
les
movsl
ret
xchg
xchg
sbb
xchg
push
icebp
xchg
leave
jnp
xor
leave
mov
iret
pop
sub
push
mov
ss
js
cld
sbb
jns
js
aam
adc
inc
data16
xchg
lods
inc
or
mov
jae
stos
out
adc
mov
negb
insl
out
xchg
orl
pop
mov
mov
int
fs
mov
imul
xchg
xchg
adc
scas
and
in
stos
cli
cmc
dec
pop
add
sub
push
xor
jnp
push
in
sahf
mov
inc
pop
jg
fwait
mov
jge
jne
shrl
imull
cs
dec
xchg
xor
lret
leave
shrl
push
mov
adc
pop
shrl
out
jecxz
iret
inc
scas
outsb
mov
push
mov
push
xor
inc
jbe
aam
leave
xor
push
stc
cmp
mov
iret
push
and
movsb
push
and
out
jp
cmpsb
jmp
fistps
push
pop
push
push
pop
shrl
cmp
test
outsl
or
sahf
inc
paddq
out
add
bnd
push
adc
lods
mov
jne
and
and
into
xor
mov
gs
insl
js
xchg
add
xchg
sbb
jecxz
push
xchg
pop
hlt
popa
ror
mov
cwtl
xor
stos
addb
push
stc
nop
xchg
into
stos
pop
cmp
fisttpll
hlt
sbb
ffree
test
cmp
leave
in
repz
sub
pushf
pop
mov
xchg
xor
and
jnp
test
pop
dec
and
ds
cmpsl
mov
xor
push
xor
lcall
cmc
cmp
decb
mov
or
dec
xor
sbb
test
jbe
adc
push
ficompl
mov
test
mov
cwtl
shrl
cmp
lret
mov
xor
gs
push
xchg
add
mov
fldl
mov
cmp
stos
inc
sub
ret
dec
dec
out
fistpll
mov
mov
cmpsb
fstps
ds
jno
dec
push
pusha
notb
pop
sub
xlat
call
adc
cmp
imul
or
aaa
rcrl
test
jo
int3
sub
clc
push
movsl
adc
pop
mov
in
mov
negb
or
in
lret
jne
or
popl
cmp
insb
jle
mov
push
xor
xchg
aad
jmp
push
sub
bound
cmp
or
xor
xor
add
jne
out
jae
jmp
stos
stos
inc
pop
push
mov
xor
or
adc
sub
jp
jns
cs
sbb
mov
jo
xor
inc
pushl
lret
push
xlat
insb
add
ret
and
addr16
lcall
cs
adc
loop
and
hlt
imul
clc
dec
dec
mov
mov
rolb
cmp
clc
xor
test
sub
mov
hlt
outsl
pop
and
clc
pop
scas
or
lods
add
mov
loopne
mov
mov
mov
movsl
jo
push
jnp
call
sahf
ljmp
add
fdivr
cwtl
sub
lcall
fldenv
and
mov
and
in
ds
stc
or
cmp
std
xchg
mov
stos
nop
aaa
xor
cltd
les
inc
movsb
cmpsl
fs
cmp
aad
stos
sub
popf
test
push
sbb
movsb
push
fs
mov
or
xor
insb
in
mov
jae
stos
rcrl
xchg
scas
pop
out
andb
jl
mov
xor
mov
adc
ds
pop
sti
inc
jmp
pop
fldcw
insb
int
cmp
jb
inc
mov
enter
adc
adc
sub
cmc
repz
decb
lahf
add
jno
lods
addb
jp
adc
jnp
lcall
out
imul
dec
pushf
xor
or
or
xchg
mov
jno
mov
scas
aas
dec
xor
iret
loop
sub
push
jae
pop
les
aas
mov
adc
mov
mov
lods
push
stos
mov
dec
and
mov
push
jge
popf
inc
or
scas
out
aaa
out
cld
cli
jmp
pop
or
and
jecxz
jle
sub
mov
xor
cwtl
adc
nop
sbb
dec
mov
call
or
daa
mov
and
xchg
dec
or
fldcw
mov
mov
xor
sbb
inc
sbbl
mov
xchg
cmp
leave
jge
push
jecxz
dec
not
push
add
mov
insb
xlat
inc
loop
jmp
cmc
imul
es
push
in
cmpb
xchg
inc
sbb
std
popf
push
andl
adc
mov
rcll
pop
data16
mov
cmp
je
xchg
pop
das
out
dec
sub
add
hlt
pop
xor
insl
mov
dec
cld
mov
lret
popf
aaa
ja
adc
movb
sbb
lock
push
mov
repnz
dec
call
pop
or
ja
stos
jle
in
rcr
add
aam
push
inc
xchg
inc
adc
mov
and
fldcw
dec
aas
add
js
mov
cmp
bound
ss
mov
mov
cwtl
push
mov
arpl
pop
lods
in
mov
shll
out
mov
mov
data16
jle
nop
fiadds
mov
test
in
scas
cs
pop
xchg
xor
sub
in
ds
mov
out
mov
fwait
jnp
arpl
imul
test
out
ret
data16
fdivrp
fs
daa
cmp
scas
aaa
add
daa
ja
pop
leave
in
adc
mov
insb
loop
icebp
jg
test
sbb
mov
insl
mov
rcll
subl
cmpsb
daa
test
icebp
inc
xor
ret
xchg
ja
mov
jle
outsb
xor
push
test
push
hlt
jo
push
jae
inc
xchg
dec
nop
and
jmp
fstl
inc
or
push
stc
movsb
mov
daa
ja
out
or
pop
or
arpl
jl
ret
or
sub
shrl
test
lds
movsl
outsb
add
imul
decl
mov
int
movsl
sub
loope
fimull
mov
es
ret
cs
sub
mov
int
lods
push
add
mov
imul
adc
pop
iret
fldcw
int3
push
nop
lret
mov
arpl
ds
xchg
test
insl
cmp
jge
shlb
shlb
inc
pop
adc
rcll
push
mov
adc
je
push
add
lods
aam
out
dec
pusha
insb
and
cmpsb
sbb
push
jl
inc
pop
xchg
inc
pop
out
adcb
cmp
cmp
cld
xor
mov
icebp
jl
jge
shr
loopne
sbb
loop
cmp
sbb
jne
fcmovne
xchg
mov
shrd
and
mov
outsl
inc
ret
push
mov
sub
dec
das
cltd
mov
push
mov
dec
mov
pop
xchg
cmp
hlt
stos
push
add
mov
add
mov
sub
mov
or
xor
jmp
pop
test
data16
cmp
movsl
dec
or
popf
and
dec
aad
aad
xchg
mov
test
xlat
xchg
mov
in
mov
aaa
pop
in
mov
pushf
fwait
adc
lods
repnz
mov
mov
clc
dec
sub
loop
or
cmp
je
adc
cltd
in
pop
lret
cmp
outsb
xor
sub
aam
aad
jmp
or
daa
clc
mov
mov
rcll
out
xchg
bound
test
and
loop
scas
xorl
pusha
in
out
test
fldcw
inc
jge
xor
pop
push
incb
into
ljmp
mov
mov
or
in
pop
mov
int
or
faddp
dec
je
test
test
sub
inc
ljmp
cmp
subb
dec
sub
lcall
jo
rcll
xchg
stos
cmpsb
sahf
orl
mov
loopne
xor
enter
cmp
test
mov
icebp
sub
sbb
icebp
mov
mov
leave
in
fdivrs
xchg
mov
xor
ret
dec
mov
xlat
or
das
sbb
scas
int3
fcomp
leave
shrl
lahf
pop
test
pusha
cs
lods
mov
pop
int3
and
movsl
call
ror
mov
pop
push
cmp
and
cli
pop
mov
stos
repz
or
dec
cmp
xchg
popf
xor
lcall
loopne
inc
mov
out
mov
in
or
shl
jb
push
pop
mov
xor
or
push
pop
dec
xor
insl
push
cltd
jne
jge
xlat
js
fs
inc
xor
arpl
fldt
sar
sub
ret
test
or
out
push
cmp
sub
call
sbb
push
mov
stos
inc
in
sbb
cmp
loopne
push
sbbl
addb
pop
fcmovne
dec
adcl
and
mov
add
es
aad
mov
outsl
jmp
sub
int
bound
push
sub
jmp
xlat
cld
test
mov
mov
dec
jp
add
aas
lret
cs
int3
pushf
pop
mov
cmpsl
lret
fidivl
fisubrs
dec
rorb
sbb
or
cmpsb
enter
adc
and
outsb
out
jle
aas
mov
dec
shl
bound
jno
cmpsl
lret
jmp
mov
popa
inc
xchg
cmc
std
insl
shll
incl
rclb
in
leave
fnstsw
jp
jno
das
dec
mov
mov
jbe
xlat
lret
addps
clc
pop
pop
xchg
jno
inc
stc
addb
cwtl
add
in
rclb
push
cmp
mov
add
xor
push
imul
jmp
xor
xor
add
ss
cmp
jle
pop
sbb
lret
test
cltd
or
and
outsl
push
mov
shrb
mov
add
popa
dec
cmpsl
mov
pop
les
lret
mov
mov
fdivrl
add
shr
les
lea
cmc
inc
and
xchg
add
jge
sbb
mov
pop
pop
aam
les
inc
mov
pushf
dec
call
fcomp
cmp
test
push
aaa
jnp
adc
xlat
outsb
xlat
jle
lock
imul
lea
fwait
sbb
dec
inc
dec
push
xchg
xor
cmp
fldenv
mov
mov
add
popf
jae
pop
mov
sbb
push
cmp
inc
rcl
mov
sub
outsb
cltd
out
mov
push
sahf
fwait
add
cmp
xor
imul
and
xchg
and
lret
lret
xor
pop
sbb
jo
lods
test
jo
ss
ror
push
xlat
ja
dec
mov
ds
jge
mov
mov
pop
test
scas
insl
mov
xor
xchg
mov
bound
and
ds
jb
in
out
sarb
dec
das
sahf
loop
addl
xor
divl
lcall
dec
sub
repz
imul
mov
fdivl
shll
adc
ret
sub
cmp
xchg
push
sbb
inc
jo
add
jl
int
inc
pusha
mov
into
lret
and
or
dec
out
inc
sbb
push
xorl
aam
adc
xchg
push
xor
adcl
addr16
mov
arpl
push
pop
movsb
movsb
daa
mov
sub
cmp
movsl
leave
std
test
dec
lds
pop
aad
dec
insl
insl
sub
adc
sub
or
sarb
xchg
push
fxam
add
bound
in
xchg
mov
push
xlat
jecxz
push
imul
inc
ja
inc
lods
xchg
lea
fwait
cmpsl
xor
dec
jg
call
dec
inc
scas
out
xchg
iret
iret
scas
mov
ret
iret
sbb
lcall
mov
push
mov
bound
xor
cmp
lret
je
pusha
xorb
mov
mov
daa
ss
sub
dec
pop
mov
jl
pop
or
scas
jne
outsl
jle
xchg
push
sarb
jecxz
or
popf
ss
int3
adc
xor
dec
sub
mov
pop
cmp
xchg
mov
xchg
dec
mull
mov
ss
pop
and
xlat
hlt
out
fdivrs
dec
lsl
mov
sbb
fistpll
add
pop
fisttpl
push
subb
sbb
xor
fidivs
inc
mov
fwait
dec
xchg
fistpll
ffreep
rolb
mov
fisttps
ret
jnp
pop
scas
dec
inc
fisubrl
adc
or
xor
in
pop
repz
ds
and
mov
fsubrp
and
push
sub
xor
adc
mov
movsb
insl
aam
adc
out
mov
jecxz
xchg
fcomps
jge
xchg
fsubs
inc
aas
lock
sub
adc
xchg
xchg
and
and
sub
paddw
sahf
sar
jecxz
ds
pushf
int3
arpl
jecxz
lret
mov
lcall
cmp
movd
jo
xlat
pop
jmp
cmp
aam
push
add
lods
and
xlat
in
gs
dec
pop
adc
in
out
pop
das
jnp
mov
pusha
sub
test
int
jg
mov
inc
dec
shrl
cwtl
dec
leave
push
arpl
arpl
mov
into
lock
packssdw
add
and
lret
fdivrl
jno
jmp
pop
lods
mov
mov
mov
jae
inc
dec
loopne
into
ss
xor
out
fistpl
or
jmp
in
lods
mov
mov
das
sti
mov
mov
pop
pop
jo
cwtl
iret
fstpl
inc
inc
dec
scas
xor
or
adc
ljmp
and
xchg
es
mov
sbb
ficoms
jbe
addr16
inc
mov
data16
movsb
psubsb
or
push
push
test
popf
xchg
push
adc
out
aaa
push
ljmp
inc
sbb
in
dec
imul
fyl2x
outsb
jmp
jne
mov
dec
and
stos
mov
pop
push
jmp
dec
or
push
addl
enter
sub
scas
mov
movsl
pop
cltd
inc
scas
out
jmp
loope
sbb
repnz
outsl
add
insl
orb
sbb
lret
icebp
pop
jmp
psubq
sub
call
in
insb
mov
xchg
mov
das
mov
jbe
out
out
ja
xchg
cli
mov
push
mov
mov
sahf
fs
and
js
dec
dec
or
js
stos
ljmp
daa
lcall
inc
daa
sbb
sub
xchg
xor
push
pop
adc
imul
enter
ljmp
outsl
movsb
cmpl
jbe
or
pop
push
sub
add
outsb
xorl
add
jnp
out
out
sahf
pop
fiadds
adc
dec
movsb
std
in
mov
cmp
lock
and
scas
or
test
xor
pop
arpl
ds
sbb
jmp
shlb
adc
les
lds
adc
shll
add
rorl
pop
dec
xor
negb
inc
das
lods
dec
popf
jno
and
push
mov
dec
push
xchg
xorl
sarb
jmp
mov
mov
xchg
fs
in
cld
push
ret
push
pop
adc
jl
xor
adc
cmc
jle
dec
mov
mov
mov
or
mov
adc
rcl
push
mov
gs
cmc
dec
sahf
test
sub
adc
xchg
adc
outsl
jo
xchg
pop
dec
or
xchg
xor
mov
bound
mov
pop
cltd
test
jmp
inc
ds
lea
xor
hlt
cmp
mov
gs
sub
jne
stc
pop
mov
stos
cmp
jl
gs
mov
sarl
mov
into
icebp
loopne
sub
nop
imul
jl
into
dec
push
in
mov
pusha
mov
inc
mov
jge
xchg
cmp
cmp
rclb
xchg
test
ss
jo
or
and
aaa
icebp
add
xor
add
aad
int3
mov
push
bound
push
jb
test
fistps
pop
ljmp
add
cmpsl
dec
shrl
test
fbld
sub
orl
sub
sarb
call
adc
lds
iret
shl
xchg
jb
jb
cmp
pop
mov
movsl
lahf
dec
mov
mov
sbb
pop
into
lock
pop
mov
pop
mov
jecxz
pushf
ss
mov
outsl
int3
mov
mov
dec
mov
dec
and
and
inc
jae
sbb
ja
gs
xor
mov
jge
and
decb
andl
cli
and
icebp
adc
stos
divl
std
sti
fmulp
loop
adc
mov
lret
mov
jge
and
and
jg
adc
inc
shll
and
insl
cs
adc
sub
fyl2x
xor
mov
mov
mov
fs
lret
cltd
shl
test
pop
dec
mov
sar
or
mov
fdiv
sub
lea
mov
push
xchg
je
pop
adc
gs
nop
mov
cli
sub
mov
sub
mov
jl
xchg
cld
fidivs
xchg
lods
mov
inc
mov
cmp
pop
les
xor
and
pop
ja
dec
ret
std
scas
dec
jmp
adc
jns
inc
add
ljmp
test
add
icebp
testl
cmp
sub
xchg
pop
add
adc
clc
cmp
mov
fidivrl
testb
ret
mov
inc
cmp
xchg
jno
pop
fmul
pop
mov
into
sbb
push
xchg
adc
aas
jg
mov
std
aad
lds
das
xchg
arpl
or
addr16
sbb
sarl
add
sbb
dec
add
dec
repz
pop
cltd
mov
xchg
add
mov
pop
mov
lret
jbe
or
and
scas
pop
inc
ret
jo
sub
les
jl
sarb
sub
and
push
mov
sarb
sub
insl
xchg
xchg
push
inc
adc
push
fimuls
pop
pushf
das
pop
mov
mov
push
or
nop
into
aaa
scas
sbb
cmpsl
icebp
jne
out
mov
inc
aam
xchg
mov
mov
push
cmp
push
push
mov
sbb
xchg
inc
jle
mov
jle
jmp
testb
pop
enter
pop
std
xorl
and
adcl
dec
imul
xor
fdivrl
inc
and
in
push
mov
jle
jmp
add
mov
adc
xchg
lahf
fwait
dec
mov
outsl
xchg
push
pop
cld
popf
jp
sub
push
adc
data16
loopne
jae
int
inc
jb
ss
jns
flds
int
pop
pop
xchg
fucomip
popf
xchg
clc
pop
jmp
xchg
insl
and
or
orl
mov
out
cmp
cs
shrl
dec
push
scas
rcr
pop
mov
inc
out
mov
sub
loop
icebp
and
xchg
xor
xchg
add
xchg
sbb
dec
sbb
pop
mov
mov
xor
mov
pop
clc
lcall
test
lret
mov
xchg
adc
fdivr
loopne
jbe
cmp
test
stos
mov
mov
fimuls
mov
cmp
add
xlat
xchg
inc
sarl
jmp
or
outsl
out
dec
daa
das
mov
mov
mov
js
add
sti
cmpsb
mov
fs
int3
les
push
roll
mov
push
fdivrl
ss
lock
and
and
inc
lcall
in
cmc
int
inc
nop
cmpsb
sbb
fs
out
cmpb
push
sbb
and
aas
push
repnz
cmc
xchg
pusha
sub
mov
mov
leave
xchg
fcmovnu
jbe
fstpt
sbbl
and
popa
push
mov
pusha
add
adc
and
scas
sahf
mov
lock
jo
xchg
test
push
sub
mov
mov
imul
or
test
sbb
adc
test
cmp
aas
adc
xor
test
movsb
sti
adc
mov
jg
pushf
mov
out
repnz
xchg
inc
mov
imul
mov
pop
insb
and
pusha
mov
jnp
test
mov
insb
in
int3
imulb
add
add
shlb
pop
pop
and
out
jae
aas
pop
out
jl
outsb
repnz
outsb
adc
push
cmp
popf
ret
negl
nop
push
lcall
push
int3
mov
iret
push
push
sbb
pop
adc
add
aas
pop
dec
or
sbb
mov
das
lock
mov
or
ss
out
push
push
stos
xor
mov
mov
sbb
mov
pop
mov
sbb
in
lods
fldcw
and
stc
jg
outsb
out
inc
orb
cmp
sahf
into
ret
xor
dec
cmpsl
stc
fstpl
adc
mov
and
xchg
push
jl
or
sbb
es
jg
sub
push
push
sbb
into
decb
dec
push
aad
xor
hlt
sub
mov
in
xchg
addr16
out
xor
pop
rorl
mov
andl
aad
xchg
enter
pushf
das
lea
es
int3
loopne
xlat
adc
sub
mov
xchg
leave
cmc
xchg
xor
adc
push
push
call
xchg
mov
in
imul
insb
push
mov
mov
arpl
leave
lret
or
in
xchg
and
or
outsl
movsb
jae
inc
pop
jae
mov
jle
aaa
in
xchg
loopne
stc
leave
movsl
dec
pop
rcrb
out
icebp
imul
jb
lods
sub
outsl
lret
hlt
das
mov
jecxz
add
jb
sub
add
xchg
adc
lcall
push
and
pop
fbld
xor
sbb
movl
push
ja
mov
pop
mov
push
jge
div
sbb
add
jl
add
ds
in
orb
or
jle
rcr
pushf
ja
andl
int3
xor
movl
adc
jo
stos
fcompl
mov
je
sahf
inc
or
inc
aad
mov
dec
add
jg
dec
pop
xor
inc
ss
call
jmp
push
and
xor
mov
testb
jecxz
mov
sub
ficoms
rorl
outsl
mov
je
mov
aas
cltd
icebp
test
push
inc
xor
add
jb
push
sub
mov
mov
jmp
cwtl
jbe
mov
push
add
adc
mov
xor
js
mov
mov
cld
sbb
mov
push
int
and
fdivrl
and
xor
scas
dec
ret
and
js
sub
scas
push
cmp
iret
imul
lds
push
outsl
pop
stos
add
dec
dec
out
mov
test
sbb
nop
xor
fucom
lods
int
jge
or
mov
mov
pop
pop
jbe
push
push
xor
lret
loopne
imul
sub
in
dec
xor
jge
pushf
aam
in
pop
aas
js
and
push
imul
clc
divb
shlb
cmpsb
mov
or
xchg
shll
jnp
outsb
push
subb
adc
sahf
dec
push
pop
jmp
xor
test
xor
int
aad
inc
mov
ret
cmpsb
jp
loop
iret
dec
insl
scas
bnd
sbb
xchg
xchg
add
jbe
and
aaa
add
pushf
imul
and
addr16
jb
mov
pusha
fimull
decl
add
pop
fisttpl
push
add
mov
aaa
cmp
mov
aam
lock
mov
fs
stos
jle
iret
mov
inc
push
mov
cs
mov
gs
js
nop
or
adc
sub
shl
lods
es
cmc
adc
pushf
iret
xor
inc
mov
mov
jmp
lret
fisubrs
call
aaa
mov
jp
jns
dec
ljmp
shr
pushf
cs
jb
push
mov
je
mov
jbe
mov
fistl
sbb
shl
and
xor
push
int
mov
outsl
movsl
mov
xchg
xor
fdiv
lods
mov
sub
xchg
cmp
fdiv
dec
mov
mov
imul
pop
xchg
xlat
imul
cs
dec
sbb
hlt
or
and
or
and
clc
fildll
pusha
xchg
adc
pop
push
push
or
pop
scas
jle
mov
and
sub
adc
aad
daa
push
fnstenv
dec
mov
inc
xor
lahf
dec
sbb
outsb
gs
data16
mov
or
mov
sub
jno
fisttpl
clc
and
mov
test
and
andb
lods
lret
jecxz
addr16
cmp
push
inc
lods
outsl
cmp
mov
rcrl
rcrl
pop
pop
adc
es
and
das
mov
push
cli
add
inc
int
xchg
push
push
cmp
push
mov
lret
fnstenv
and
addr16
jl
xlat
fimull
inc
addr16
gs
jg
lock
dec
in
outsl
push
dec
mov
ss
imull
das
ss
pop
aas
call
jmp
push
mov
cmpsb
adc
es
mov
add
arpl
inc
insb
das
sbb
inc
jo
sbb
popf
push
ss
inc
jmp
push
in
jle
mov
testl
lods
lret
push
das
ficoms
int
outsl
rsm
lea
and
out
cmp
cs
cmp
les
insb
cmp
push
jne
pop
out
pop
or
lods
cs
inc
movsl
dec
mov
cmc
fcomps
add
mov
sbb
jp
lret
test
ja
iret
int3
mov
inc
add
lcall
dec
add
iret
mov
inc
ret
or
in
sbb
fucom
insb
cltd
leave
arpl
inc
out
xchg
mov
push
and
dec
sahf
push
lds
cmp
jae
adc
add
and
stos
mov
scas
das
add
cmp
loope
sub
ljmp
call
hlt
push
xorl
mov
jno
js
and
mov
jns
xchg
xor
lret
push
bnd
fwait
xor
xor
out
mov
sub
sahf
ss
cltd
inc
and
and
enter
xchg
jmp
fistpl
xchg
repz
mov
loopne
xchg
scas
cwtl
lret
sbb
aam
in
fdivrl
push
xor
not
outsb
mov
sbb
or
add
add
enter
sub
push
dec
push
xor
sbb
jl
xchg
jo
mov
cmpl
fs
aad
cmp
or
and
xchg
incl
popa
icebp
imul
je
jb
test
lcall
gs
or
ss
mov
data16
push
push
jb
cld
sub
enter
or
or
popa
mov
jp
or
arpl
inc
sbb
dec
mov
inc
mov
mov
jne
shrl
add
mov
hlt
stos
scas
fsubrl
je
les
sbb
out
push
scas
push
inc
mov
cli
cs
inc
jae
cmp
mov
sbb
dec
frstor
dec
paddd
stos
adc
stos
add
hlt
and
lock
jge
imul
xchg
lret
push
mov
out
dec
test
setno
sbb
and
mov
jne
or
adc
fnstenv
popa
lahf
mov
and
jbe
dec
sbb
add
xchg
aam
pop
outsb
cli
pop
mov
mov
pop
sub
push
xchg
loop
aas
icebp
inc
orl
add
or
push
sub
loopne
mov
mull
jmp
inc
out
cs
into
dec
mov
nop
and
cmpsl
and
fld
xor
in
xlat
jecxz
xchg
mov
sarb
arpl
mov
movsl
pushf
pop
and
pop
pop
pop
pop
mov
testl
pop
cld
xor
xor
sti
ds
movsl
or
cmp
and
inc
nop
or
shrb
sub
cmpsl
loop
mov
movsl
lcall
mov
pop
testl
out
sbb
add
in
lods
and
pop
cmp
mov
loope
ss
imul
mov
jle
aad
aaa
int
cmp
imul
push
pop
pop
pop
pop
test
mov
fs
push
std
sbb
and
mov
push
mov
aas
loop,pn
push
or
bound
cmpsl
xor
push
push
inc
or
bound
pop
lods
clc
push
insb
scas
clc
pop
xor
jb
mov
test
hlt
sbb
inc
and
inc
mov
cmp
shll
fstl
push
pop
imul
push
push
out
mov
stos
vmaxpd
repnz
mov
mov
sbb
jp
mov
aad
mov
shr
or
adc
push
sti
imul
daa
cmp
adcb
sub
fs
aas
dec
or
or
pushl
loopne,pn
pop
fsubr
push
mov
or
xor
mov
mov
push
dec
mov
stos
jns
mov
push
mov
pop
xor
out
ljmp
dec
dec
pusha
data16
and
sbb
sbbl
mov
gs
lds
faddl
mov
int3
xchg
mov
dec
ror
sbb
pop
sar
into
frstor
cltd
lods
pop
xchg
cwtl
push
out
jge
or
lret
and
dec
mov
cmc
out
je
stc
sti
es
cmpsl
mov
shrb
repz
cmpsl
fmuls
scas
jno
jl
pop
cs
rol
mov
pop
dec
xchg
xchg
xchg
dec
xchg
jl
shr
vpmaxub
and
dec
pop
push
xor
dec
stos
mov
cmc
das
add
inc
sub
pop
mov
xchg
cli
adc
movsb
jb
outsb
insb
pop
andb
nop
push
jb
mov
xor
jae
iret
scas
arpl
daa
fsubr
push
push
xchg
cwtl
sahf
push
jmp
inc
adc
decb
xlat
stc
mov
ljmp
sbbb
mov
jne
xor
mov
pop
xor
jbe
xchg
mov
rolb
in
ret
sub
loop
shll
rolb
dec
wbinvd
das
cmp
rorb
adc
notrack
mov
sbb
or
sahf
sets
stos
dec
inc
test
test
or
mov
mov
or
inc
cmp
in
in
mov
loope
sbb
mov
dec
loope
xlat
mov
and
imul
add
adc
adc
mov
movsl
lock
mov
adc
pop
inc
pop
dec
call
and
sbb
into
hlt
mov
xchg
ret
and
xchg
mov
push
imul
in
mov
in
mov
pop
cmpsl
xor
out
out
pushf
in
icebp
cmp
cmp
movsl
adc
push
leave
cmpsl
inc
fnsave
lcall
sbb
popa
mov
xorb
pop
lods
push
xor
stos
mov
or
push
imul
scas
mov
mov
mov
inc
or
jns
pop
xchg
movsb
ret
rorl
fnstsw
inc
fidivl
insl
cmpsl
call
mov
sub
xor
xchg
push
push
ss
notb
movsb
or
pop
sbb
call
sub
gs
dec
and
cltd
inc
daa
loope
cmp
adc
scas
cmp
jbe
push
lea
sbb
loope
in
call
mov
mov
sub
sahf
and
sbb
test
jge
std
loop
jne
loope
das
push
leave
jg
mov
add
or
sub
fiaddl
mov
cmp
int3
push
push
inc
test
jle
sub
jle
negb
add
fwait
sti
ljmp
ds
pop
scas
mov
sbb
jno
scas
jl
mov
test
jmp
jp
inc
jno
js
or
in
sahf
loope
movsb
add
add
int
or
out
divl
cli
testl
inc
jge
data16
push
in
xchg
pop
xor
pop
lcall
dec
sbb
out
jl
rcrb
and
ret
mov
ss
and
imulb
and
in
inc
cmp
and
aam
int3
mov
popf
cwtl
inc
mov
mov
pop
lods
pop
insb
jl
cmp
pop
icebp
push
insb
mov
enter
jl
aam
mov
mov
je
lock
cmp
sbb
out
les
sbb
jge
test
pop
mov
dec
jo
sti
shrl
mov
loop
scas
xor
rclb
xor
push
cmp
mov
repz
xor
add
pop
adc
push
inc
adc
nop
das
cmp
out
push
sub
je
sbb
or
icebp
jbe
push
cld
gs
xor
lret
cltd
xor
inc
test
add
out
jno
cs
add
push
mov
lods
imulb
xorl
push
xchg
lock
outsb
cmp
popa
stc
scas
stc
push
sub
jns
pop
sub
xor
daa
pop
add
xchg
mov
sub
sti
es
fisttpll
hlt
add
imul
in
mov
sti
xchg
mov
push
push
jnp
ss
in
stos
daa
dec
jg
out
stos
push
out
fmul
adc
mov
jno
mov
mov
xchg
js
sbb
jg
loop
mov
scas
xor
jne
cmp
hlt
imul
mov
ret
icebp
dec
xor
sbb
or
mov
mov
dec
push
mov
fcmovnu
out
test
push
xchg
std
pop
ljmp
out
movl
mov
mov
popf
mov
lahf
mov
xchg
pop
cmp
jg
dec
pop
das
or
fisttps
adc
dec
and
imul
shll
imul
stos
mov
push
fmuls
in
subl
insb
call
dec
lea
sbb
call
ljmp
jb
jb
clc
andl
inc
loop
orl
add
push
aam
xor
pusha
dec
das
fdivl
adc
jmp
pop
adc
js
xchg
add
mov
in
je
pop
shr
push
mov
inc
mov
stos
add
and
jnp
and
iret
mov
sbb
pop
pop
pop
cltd
sub
cmpsb
mov
popf
add
add
inc
cmp
and
movsl
iret
lret
fs
imul
lea
sub
mov
and
subl
xchg
jg
cmp
stos
cmp
lods
mov
jae
sub
test
mov
xchg
fisubs
cltd
adc
mov
mov
push
inc
cmpsb
jns
sbb
or
sti
xor
rorl
jg
dec
or
mov
fldl
out
movsb
lret
or
inc
jecxz
dec
fwait
orb
mov
enter
cmp
aas
inc
ja
or
subl
mov
or
push
pop
jge
cmp
mov
add
sub
stos
mov
mov
stos
out
rorl
popf
orl
push
xchg
jg
mov
int
cmp
cli
loopne
insb
stos
fdivl
fnstsw
push
rcl
pop
cwtl
inc
mov
sub
es
das
fistl
mov
xchg
fs
inc
mov
push
sub
or
mov
jl
adc
mov
fsubr
sub
sub
pop
jnp
pop
cld
push
xchg
xlat
stos
lods
cmp
test
or
add
lds
xchg
jo
mov
js
mov
xchg
inc
leave
and
xchg
ret
pop
mov
add
das
scas
ss
fistpll
cmpsl
or
rorl
movsb
xchg
sub
in
sbb
hlt
push
push
fistpll
fs
mov
lret
loope
lds
out
jle
jg
test
pop
inc
mov
fstps
push
lret
push
xor
adc
mov
das
pop
jnp
xchg
jmp
adc
les
es
lods
or
lcall
jge
inc
ljmp
push
mov
andl
je
sarl
mov
loop
fldt
or
sbb
xchg
repz
mov
jmp
jl
insb
icebp
ljmp
lahf
push
cli
je
xchg
xchg
jle
xchg
fwait
mov
fadds
push
or
push
push
mov
aad
cld
rorl
push
add
push
js
leave
pop
or
fdivl
clc
cmp
pop
xor
lret
gs
ret
cmp
pop
xor
inc
sbb
fsubl
lock
aad
ret
stc
bound
sbb
out
mov
add
mov
cmp
pop
mov
stos
notb
sub
fcomip
loope
inc
daa
and
mov
addr16
sbb
mov
push
push
mov
rorl
nop/reserved
or
dec
js
adc
push
mov
inc
lcall
outsb
push
dec
pop
loope
inc
test
nop
test
jge
push
decb
mov
inc
mov
inc
xchg
test
ret
pushf
xlat
insl
rcl
cmp
and
ds
int
inc
mov
fwait
cld
push
xor
and
add
and
mov
divb
sti
sbb
add
out
aaa
ljmp
jnp
rep
fildll
stos
push
pop
inc
pop
gs
xlat
mov
icebp
ss
adc
or
loope
or
mov
add
push
outsl
fst
pop
popa
add
cmp
imul
pop
sub
mov
inc
out
je
aaa
mov
inc
mov
test
adc
add
pop
dec
and
dec
ss
push
js
fsubs
mov
adc
and
lock
les
dec
out
loop
es
int
push
repz
add
leave
dec
xchg
test
xchg
xor
sbb
movsb
jle
insb
mov
cmp
imul
sbb
xor
ret
adc
filds
insb
in
std
pop
lret
pop
test
fistpl
enter
rcr
push
sub
lcall
rcrl
mov
sub
scas
movl
mov
pop
icebp
adc
mov
pop
aas
pop
test
jg
sbb
adc
xchg
imull
xchg
mov
mov
lds
sbbb
pop
cmp
ss
mov
lds
ds
and
sbb
movsb
adc
jo
enter
aad
adc
cwtl
pop
add
push
ja
adc
push
mov
addr16
xor
cmp
outsb
test
push
jmp
in
jmp
mov
push
push
cmpb
mov
iret
fisubrl
push
dec
or
sti
jl
call
mov
push
xchg
sbb
in
pop
mov
adc
jmp
repnz
ja
out
xchg
addr16
insl
xor
pop
pop
rcrl
pop
clc
xchg
jge
dec
adc
js
in
fucomi
xchg
or
mov
push
ret
out
pop
sbb
rcr
mov
aaa
cmc
js
pop
fisttps
adc
inc
insl
sub
adc
pop
push
sub
stos
push
mov
imul
stos
insl
push
sbb
xor
pop
mov
loope
push
mov
dec
push
cmpsl
dec
cltd
ds
lea
negl
adc
sbb
js
pop
repz
es
sub
imul
iret
test
leave
das
adc
scas
imul
dec
cs
mov
sahf
test
ss
or
push
lock
lods
mov
and
pop
mov
sbb
fimuls
xor
gs
daa
shl
inc
das
cmp
jo
sarl
inc
mov
sbb
sbb
shl
stos
in
bound
imul
mov
jo
xchg
add
or
aad
in
jl
jno
pusha
jnp
loope
aas
or
mov
sub
stos
push
out
movsb
movsl
loopne
adc
cwtl
sbb
loope
lods
stc
fisttpl
rorb
rolb
push
dec
sub
add
add
add
jle
in
push
mov
mov
add
shlb
sarb
lock
and
cmc
inc
fsubl
xor
jle
leave
dec
and
cmc
mov
insl
mov
jmp
sbb
sub
or
sbb
pusha
shrl
xor
je
sbb
mov
in
jno
mov
cmpsb
mov
sbb
add
ficomps
or
mov
pusha
or
pop
xor
jbe
push
add
xchg
mov
aaa
pop
or
daa
and
xchg
push
ljmp
or
lret
iret
mov
pop
outsl
in
es
cmp
xor
int
jns
andl
sbb
pop
in
mov
mov
sbb
jns
aad
or
mov
sub
pop
stos
xor
mov
cmpsb
cwtl
mov
mov
push
outsl
mov
push
lock
jbe
cmp
jae
cwtl
addr16
pop
xchg
cmc
fs
scas
aad
adc
outsl
das
clc
and
out
inc
aad
ret
filds
add
push
cwtl
hlt
pop
ret
sbb
cmp
push
int
lret
fiadds
xorl
out
push
out
outsl
mov
iret
mov
pop
loopne
fistl
or
aaa
stc
aam
rcrb
subb
lea
lcall
aas
sahf
pop
ret
cltd
mov
cmpl
push
mov
std
rorl
push
popa
cmp
testl
outsb
insb
mov
mov
testb
test
call
push
dec
lcall
lea
xchg
xchg
out
dec
add
xchg
stos
inc
xor
add
xor
inc
mov
icebp
inc
xor
adc
adc
shr
pusha
cli
jecxz
mov
lds
and
out
lcall
mov
lahf
rorb
pop
and
ret
push
or
or
out
pop
in
mov
ss
arpl
add
and
push
cmp
lods
add
das
divb
scas
daa
out
popa
mov
sub
ret
loop
jbe
or
inc
imul
pop
cmpsb
lea
pop
into
mov
and
lea
sub
jno
rolb
jp
aas
push
data16
xor
mov
add
jnp
shlb
mov
in
lea
enter
cmpsb
pop
dec
rcll
and
jge
hlt
mov
fwait
pushf
test
jnp
and
scas
ss
ja
insl
mov
push
add
push
push
das
movsl
jns
imul
jnp
lret
cmp
cli
push
fcomps
aaa
mov
test
sti
lret
jge
fwait
rcll
mov
imul
push
ds
inc
loopne
sub
push
pop
mov
in
jecxz
adc
mov
into
cs
aam
push
addr16
pop
jne
or
push
in
mov
or
jmp
cmpsb
push
mov
inc
fs
loope
jnp
loop
jge
icebp
and
cmp
rcrl
adc
out
test
cmpsb
and
lods
iret
push
cltd
push
addr16
out
sbb
and
aas
adc
cmp
pop
and
push
test
icebp
xchg
push
xor
out
jb
cmpsb
add
dec
adc
and
jle
inc
fnsave
add
ficomps
pop
pop
jl
sub
sbb
xchg
xor
aam
mov
das
inc
clc
or
nop
mov
xchg
sbbl
cli
jns
add
sbb
call
adc
fs
cs
into
xor
mov
sub
and
popf
sub
in
push
out
sub
push
fisubl
insl
out
fneni(8087
in
rorl
lea
cmc
xchg
or
pushf
xor
aad
xor
lret
je
shr
sbb
add
xchg
out
cwtl
dec
lea
ds
adc
sub
jns
pop
bound
cmp
inc
call
imul
inc
int
push
and
xor
popf
xor
inc
lret
movaps
jns
dec
arpl
pop
fmuls
mov
cwtl
jmp
imul
cmp
sahf
pusha
ret
cmp
xchg
scas
leave
push
push
jo
and
int3
cmc
aaa
jne
cmp
jno
inc
or
mov
in
cwtl
sub
pop
insl
mov
xchg
sub
lods
cmp
inc
push
int3
pop
dec
inc
imul
jmp
in
lahf
fdivr
mov
mov
ret
cmpsl
mov
ret
fisubl
rolb
scas
mov
cmpsb
mov
mov
xchg
pop
lods
fadds
jne
dec
lea
mov
cmp
sbb
jno
cmp
icebp
movsb
not
push
and
lahf
sbb
add
inc
pop
scas
cltd
daa
test
fs
add
movups
rep
repnz
enter
dec
mov
jo
inc
test
call
lret
sub
lock
mov
cwtl
dec
pop
sub
ds
jg
mov
pop
dec
mov
idivb
push
inc
aaa
add
xchg
jge
pop
dec
push
dec
call
inc
mov
lods
jns
pop
sbb
push
in
stc
dec
fldcw
and
ds
outsl
pusha
movsb
inc
scas
popf
pop
pop
into
in
or
in
mov
lods
mov
shlb
ljmp
imul
mov
add
lds
and
xor
icebp
insl
adc
psllq
scas
cmp
testb
cmp
cld
imul
movsl
jg
and
scas
inc
adc
and
stos
mov
jle
popf
pusha
sbb
xor
cmpsl
sbb
aas
pop
xchg
call
lea
daa
push
inc
int
nop
fsubr
xor
mov
pop
mov
adc
fdivrs
dec
pop
outsl
and
mov
fmull
adc
movsl
hlt
call
or
imul
enter
xor
daa
stc
add
js
insl
mov
sbb
push
push
ljmp
lods
xchg
std
or
std
sbb
mov
decl
in
pop
push
adc
fisubrs
adc
cmp
mov
jns
mov
pop
arpl
daa
rorb
pushl
mov
xchg
test
lahf
xor
test
jne
call
test
cmp
cld
or
cmp
rcrl
nop
or
cltd
dec
sub
in
out
pop
mov
shrl
arpl
mov
popf
mov
movsb
dec
jmp
mov
les
pop
xchg
mov
pop
cwtl
mov
inc
jne
in
pop
jo
insb
pop
xor
std
cs
fs
push
aad
movsb
mov
inc
mov
mov
or
mov
aaa
orl
outsb
aas
loopne
dec
cli
push
cwtl
fs
adc
adc
in
movsl
insl
push
scas
cmp
lahf
push
cli
int3
dec
cs
pop
mov
lods
imul
or
in
mov
mov
add
call
call
xchg
aas
shlb
hlt
dec
ljmp
ficompl
scas
sti
popa
es
dec
clc
nop
mov
ja
shrl
hlt
or
xlat
out
xlat
aaa
or
outsl
out
arpl
add
sub
jo
add
bound
xchg
xor
rcrb
cs
aad
sahf
imul
mov
iret
xchg
stos
popa
mov
sub
xor
cmp
sbb
loopne
mov
rcl
iret
jecxz
out
fists
cmp
xchg
cmpsl
dec
inc
scas
sbb
mov
out
cmp
sysexit
rorl
in
packsswb
in
jnp
add
cmpsb
adc
clc
pop
lds
nop
mov
push
ja
dec
lock
push
mov
xchg
mov
mov
pop
mov
dec
jne
jge
das
adc
mov
ja
inc
dec
loope
mov
jae
outsb
cmp
push
add
mov
and
pop
int3
adc
xor
idivb
or
pop
or
mov
adc
out
insb
je
xchg
sti
jb
jno
fdivrs
sub
jecxz
or
mov
sti
mov
jnp
adc
xor
fnstsw
pop
mov
add
aam
fbstp
sbb
addr16
jl
mov
or
mov
jecxz
add
xlat
sbb
les
pop
sbb
mov
fldt
stos
dec
or
out
subl
das
mov
ds
dec
adc
enter
test
in
dec
xor
or
bound
pop
lds
ds
push
jg
pop
insl
and
adc
fmulp
cmp
dec
adc
xchg
ret
mov
test
pop
clc
xchg
dec
cmp
add
iret
xor
cld
cmp
or
ds
and
xchg
das
lcall
imul
push
jl
push
sti
adc
fsubrs
mov
jno
test
dec
test
or
jle
cmpsl
icebp
or
mov
and
dec
test
mov
addr16
imul
cwtl
dec
jb
mov
jb
adc
mov
xor
outsl
dec
push
pop
popf
jmp
sbb
mov
enter
add
pop
sbb
or
or
pop
jge
add
mov
push
or
cld
sbb
inc
pop
xchg
std
dec
into
cs
addl
xchg
jne
dec
push
aaa
inc
loop
lds
imul
mov
orl
mov
icebp
or
orl
scas
ss
lahf
and
aas
adc
arpl
cmp
inc
repz
int
inc
xchg
cli
inc
sahf
xchg
mov
xorl
sbb
dec
imul
add
inc
out
pop
jecxz
push
sahf
mov
fwait
mov
int3
or
jne
pop
adc
adc
incl
aam
scas
and
xor
and
pop
xchg
fisubl
sti
je
adc
std
cld
xchg
jbe
add
ja
mov
sbb
shll
lahf
or
push
insb
mov
das
cmpsb
push
in
aad
pop
hlt
in
dec
push
push
aas
jne
pop
cmp
push
popf
movsb
or
out
adc
ds
aad
out
mov
jle
add
jbe
jge
xchg
pop
xor
lret
xchg
push
sbb
fbstp
add
insb
xchg
add
inc
push
rep
or
pop
lods
add
pop
popa
cmp
cmpsl
fstpt
ss
dec
mov
sbb
repz
ret
sbb
sub
or
push
mov
addr16
lock
dec
lods
fmul
xor
mov
mov
jb
ds
pop
mov
ficomps
das
xchg
fadds
int
mov
pushf
bound
adc
sbb
jo
cmp
or
mov
in
mov
stos
into
test
imull
dec
cmp
lea
mov
xor
int
or
adc
out
pop
fldlg2
fadd
call
fs
cmpsb
lret
rclb
xorb
in
adc
aad
pop
testb
push
mov
pop
and
pusha
outsb
dec
inc
lahf
jmp
and
mov
sbb
pop
sbb
sbb
ret
in
sub
mov
xor
and
ret
je
pusha
pop
push
jae
jmp
test
jne
mov
data16
xchg
pushf
cmc
dec
mov
push
adc
sub
out
cmpsl
xchg
in
cmp
stos
pop
push
stos
ret
lcall
jno
lods
test
das
or
pop
ficoms
pop
mov
or
cmp
pop
cmp
enter
pop
mov
xor
aas
sahf
daa
xchg
pop
test
push
jg
sbb
insl
icebp
movsl
jecxz
add
add
mov
movups
call
sbb
adc
sti
popa
movsb
shll
sbb
sbb
insb
fst
and
sti
je
fisubrs
rcll
ss
fmuls
lret
bound
xor
lock
inc
nop
add
cli
outsl
dec
or
subb
out
or
inc
insb
pop
popf
adc
mov
jge
sub
arpl
addr16
add
push
xor
lret
js
arpl
xchg
cmpps
adc
xorl
cltd
pop
subl
ret
jp
jo
es
or
fsubrs
sub
jecxz
and
jmp
xor
leave
push
pusha
jne
cmp
xchg
fdiv
mov
push
xchg
adc
push
lcall
insl
and
cmp
jb
sbb
cmpsb
inc
lahf
adc
mov
mov
test
sub
xchg
or
xchg
out
cmp
lcall
add
stos
mov
imul
cmp
sbb
ss
add
negb
mov
mov
dec
sub
outsb
ds
ror
xor
mov
inc
lock
in
loopne
push
aam
nop
out
xor
mov
lods
imulb
mov
pop
fs
popl
pop
gs
push
aam
outsb
cltd
lds
fbld
mov
adc
mov
xchg
pop
mov
push
outsb
sub
test
or
cmp
push
ficomps
movsb
inc
sub
push
inc
lds
fsts
mov
cmc
cmc
shl
push
jne
frstor
scas
dec
popa
dec
xchg
sbb
popf
insl
push
cmp
add
sbb
ljmp
jmp
fisttps
pusha
or
icebp
ljmp
push
cmp
add
add
xchg
cmpsl
scas
setno
jl
and
inc
jbe
adc
or
mov
cmp
sti
dec
roll
push
arpl
push
lock
aas
insb
mov
push
stos
dec
dec
and
leave
mov
mov
or
and
adc
and
pop
data16
or
xchg
testl
insl
outsl
aaa
repz
mov
subl
js
jecxz
mov
cwtl
xchg
cld
sbb
shll
ljmp
lret
mov
and
pop
mov
pop
and
out
lods
or
stos
add
jecxz
repz
push
push
fs
dec
cmp
and
cs
out
hlt
movsl
fidivrs
rolb
pop
dec
jmp
outsb
or
or
icebp
xchg
xchg
mov
call
shl
out
divl
out
lret
and
or
add
and
xor
mov
lret
loop
push
push
mov
sub
mov
inc
sbb
sahf
dec
dec
adc
mov
repz
ds
call
in
outsb
add
lds
popa
js
xor
cmp
ljmp
mov
pop
and
or
or
inc
add
shrb
pop
enter
push
jecxz
xchg
rcl
xor
mov
scas
pop
ljmp
mov
jmp
jle
sbb
shr
and
dec
cmpsb
loop
stos
pop
nop
inc
jbe
les
dec
push
lret
roll
mov
and
ret
push
dec
lock
inc
inc
fldl
jp
inc
js
xchg
mov
int
push
xchg
fs
or
or
sub
or
dec
inc
lods
mov
push
shrl
ds
xlat
adc
in
les
push
imul
mov
std
push
js
lcall
pop
cmpsl
mov
inc
pop
xchg
test
mov
and
out
test
loop
std
movl
push
ret
jg
mov
cmp
cmpsb
hlt
sub
fiaddl
or
mov
lcall
ret
xor
ficomps
mov
and
popl
mov
push
hlt
xchg
or
jae
dec
or
popa
push
mov
and
adc
xchg
fbld
mov
or
loope
mov
rcll
aad
add
jno
not
fisttpl
idivl
xlat
and
int3
push
lahf
in
in
loopne
adc
enter
fdivr
mov
orb
push
dec
cwtl
inc
repnz
dec
xchg
sbb
dec
adc
jmp
jecxz
inc
inc
and
mov
andl
pop
pushf
lock
int3
popf
jb
into
xchg
adc
gs
insb
pop
sti
enter
push
sub
pusha
clc
and
sub
out
loop
lock
loopne
movsb
xchg
mov
add
xchg
jnp
and
int3
stos
repz
repz
inc
int3
sub
repnz
incb
mov
cs
stos
adc
add
jo
jp
mov
pop
and
mov
add
cmp
xor
xor
fildl
mul
jo
or
cs
inc
push
out
stc
adc
repz
jae
mov
mov
lods
xchg
movsl
cmc
mov
or
push
mov
popf
cwtl
ret
lock
outsb
mov
js
out
sbb
lcall
jg
iret
adc
adcb
ljmp
adcb
rcll
mov
aaa
adc
loopne
mov
dec
cmp
mov
jnp
test
out
jnp
pop
and
xchg
xchg
mov
pop
sar
test
jl
dec
or
pop
jmp
inc
sarb
lret
bswap
push
mov
imulb
xchg
lahf
jp
sbb
xchg
push
in
std
out
lret
sbb
dec
and
andb
in
loopne
sbb
fucomip
mov
cmp
rorl
dec
leave
push
jecxz
popf
rorb
pusha
das
fprem
adc
mov
fcmovbe
jno
outsb
stos
adc
push
xor
push
push
pop
sub
fsubrs
mov
jae
bound
pop
test
mov
enter
mov
roll
in
out
sbb
sbb
jbe
je
fs
fldl
mov
mov
mov
ss
jne
pop
clc
xchg
or
lret
and
mov
sbb
cmp
into
xchg
pusha
cltd
sbb
dec
sub
lret
pop
adc
push
adc
sbb
ss
jge
mov
dec
sub
or
mov
pop
sbb
fs
pop
xchg
dec
cmp
adc
jbe
push
mov
repnz
je
jae
jle
fdivrl
mov
or
sub
int3
inc
push
in
fcomps
add
cli
add
or
mov
insb
mov
test
repnz
dec
ja
sbb
adc
cmp
lret
scas
cltd
pusha
je
push
pop
mov
xchg
jmp
movsb
inc
das
insb
xchg
lock
mov
mov
mov
xchg
imul
nop
cltd
lods
faddl
jmp
dec
inc
imul
cmc
into
cmp
xchg
push
loop
xor
or
movsl
inc
jb
in
mov
dec
mov
test
xchg
outsl
cwtl
sub
stc
ja
addl
enter
xor
fsubrs
outsb
mov
mov
data16
imul
jno
aam
pop
xor
adc
xchg
js
daa
xchg
jmp
lods
mov
inc
jmp
ret
aaa
mov
mov
fdivrl
scas
or
andb
mov
in
jg
and
cs
push
and
pop
adc
ret
lea
fcompl
outsb
insb
ds
daa
lcall
lahf
sbb
aas
stc
cmp
lds
movsl
push
jb
adc
adc
test
inc
andl
mov
add
fdecstp
adc
es
mov
mov
mov
xor
pop
cmp
out
sbb
xchg
sub
and
les
inc
push
popf
fwait
sbb
or
jbe
and
mov
fiaddl
clc
jbe
mov
sub
xchg
das
mov
mull
xchg
mulb
and
adc
xchg
lret
xlat
cltd
mov
cwtl
les
lret
sub
push
popw
pop
mov
sub
mov
sbb
cwtl
daa
or
ljmp
push
xorb
cmp
out
ja
sbb
mov
aas
add
push
imul
sbb
pop
daa
mov
and
fucom
ror
out
xlat
divb
xor
sub
in
outsb
sub
mov
mov
cmpsb
popa
rolb
push
mov
fsub
add
cmp
cmpsl
cmc
inc
stc
cmp
lock
aas
push
sbb
notl
jb
cmpsb
mov
mov
jo
or
cmpsl
and
out
stos
mov
dec
cmp
out
push
mov
cmp
cmp
imul
std
out
rorl
rolb
sbb
fwait
in
add
xchg
testb
enter
pop
insl
pushf
xor
mov
sbb
or
mov
and
mov
cmp
pop
jp
pop
aam
dec
pop
xor
pop
cmpl
mov
fcoms
scas
push
push
daa
lds
aas
int3
movsb
pushf
xor
mov
int3
les
add
mov
lods
dec
sbb
jle
fistps
cwtl
daa
sbb
mov
movsl
pop
lret
dec
pop
scas
mov
xor
and
sbb
outsl
mov
cmpsb
testl
bound
ja
lds
add
loop
shrl
pushf
fisubs
stc
lock
pushf
adc
xlat
call
and
imull
push
dec
outsl
push
lea
mov
mov
inc
push
test
mov
mov
loop
fdivrl
mov
push
mov
call
sbb
icebp
test
xchg
sub
xorb
inc
std
mov
adc
mov
add
pop
pop
fs
bound
iret
lods
cmp
into
mov
outsb
cld
lret
ss
sbb
outsl
mov
mov
shlb
in
and
mov
mov
fwait
loope
popl
out
js
add
popa
movsb
dec
inc
sub
leave
pop
pop
out
rolb
and
int3
cmpsl
xlat
adc
jo
fsubrs
cwtl
aaa
mov
adc
inc
out
mov
fiaddl
mov
add
cmp
xchg
cwtl
into
das
xlat
mov
inc
pusha
mov
dec
push
test
rcrb
push
jo
xchg
sbb
clc
and
scas
push
neg
int3
cmpb
xchg
enter
imul
jge
dec
imul
jne
mov
and
mov
mov
in
and
dec
cli
popa
dec
aaa
xchg
or
push
or
or
push
es
adc
add
adc
cmp
data16
inc
adc
out
sub
jns
movsb
pop
jno
enter
push
rcr
inc
or
loopne
mov
dec
and
rorb
lods
jne
xor
or
xor
xchg
pop
lret
test
cmp
pop
sahf
clc
add
pop
mov
push
mov
mov
cmp
nop
sub
loopne
inc
test
push
xor
test
push
in
inc
stos
mov
fnstcw
loope
das
pop
enter
in
shrb
into
cld
clc
add
ds
stos
scas
jmp
sbb
js
mov
and
xor
jmp
int
fwait
push
stc
cmp
sub
inc
dec
sbb
inc
cmpsb
pop
inc
inc
addr16
adc
lret
stos
dec
adc
fnstcw
in
repz
dec
rolb
cmpsl
sarb
in
mov
je
lds
flds
mov
mov
xor
testb
jp
xlat
xor
sti
enter
sbb
lock
dec
xor
mov
push
lret
inc
fcompl
out
fmul
mov
fsts
outsb
outsl
pcmpeqw
sub
sbb
xor
cmp
arpl
inc
imul
lods
shlb
iret
std
imul
xchg
mov
add
xchg
fbstp
jbe
loopne
enter
mov
or
je
repnz
outsl
xchg
sub
sub
loop
fildll
fbld
mov
ss
inc
push
das
ja
sbb
dec
adc
outsb
dec
mov
addr16
mov
push
xchg
movsl
mov
bnd
ret
not
ljmp
lret
xor
push
gs
or
xchg
pop
dec
xchg
mov
mov
das
in
rcll
dec
lea
jge
add
pop
push
imul
lret
lds
sbb
loopne
movsb
aam
mov
mov
es
adc
mov
bound
or
outsl
insb
mov
aaa
xchg
enter
jp
out
ss
or
xor
inc
or
cltd
fdivrs
daa
jge
rclb
lds
inc
aam
push
cmpb
hlt
jb
inc
xchg
cvtps2pd
int3
scas
jo
xor
and
je
jo
pop
mov
imul
ja
lahf
fimuls
pop
cmpsb
jae
xchg
or
in
test
xchg
test
stc
cmp
mov
lods
lea
out
aas
es
or
add
mov
shll
enter
mov
shll
pop
mov
ds
xchg
lods
inc
mov
in
fwait
lret
pop
mov
loope
pop
stos
sub
hlt
cwtl
dec
aam
jmp
pop
dec
sub
mov
pop
mov
pop
scas
add
add
mov
inc
dec
cs
cli
adc
fstps
inc
sub
shrb
pop
or
int3
out
jno
daa
dec
je
int
sbb
and
js
lcall
data16
add
mov
in
push
jno
fisttpl
or
xchg
mov
sub
pop
test
xor
dec
jo
hlt
jbe
mov
cmp
jmp
shrl
or
jg
push
add
scas
fcoms
sub
xchg
popl
cmp
cld
sbb
rcll
fldcw
adc
pop
jnp
cmp
mov
stos
sub
test
mov
sub
popa
dec
jae
jg
sahf
cltd
icebp
cltd
adc
and
push
mov
jne
pop
push
or
pop
jmp
imul
shlb
jnp
cltd
pushf
and
xchg
jle
ss
pop
lods
pop
mov
dec
out
or
cmp
inc
cmp
sub
out
xchg
and
xlat
sub
push
sub
jne
jg
or
aad
sbb
mov
lret
imul
sub
call
pop
mov
xlat
xchg
in
and
imulb
mov
mov
sbb
mov
push
jne
jne
or
xor
rcrb
aam
pop
fistpl
outsb
das
nop
push
test
mov
aas
stos
repz
into
and
bound
mov
pusha
ljmp
iret
test
aaa
lods
push
jno
es
adc
xlat
sbb
push
int3
jg
fwait
pushf
mov
popf
jo
aas
inc
leave
cmpl
mov
sbb
addb
cltd
pop
stos
lret
jecxz
xchg
mov
cmc
pop
pop
cwtl
mov
and
rclb
insl
jl
fisubs
or
bound
or
fcomps
mov
stos
popa
mov
scas
ja
jns
jo
cmpsl
loopne
lds
xlat
shr
sub
xchg
mov
das
pop
test
cmp
xchg
sub
bound
daa
inc
lds
cmp
add
insl
sbb
je
repz
xor
test
cwtl
icebp
pop
daa
push
jecxz
hlt
and
push
jg
icebp
arpl
jne
jnp
xchg
push
and
fwait
adc
mov
sahf
jnp
movsl
sbb
fsub
lret
jmp
adc
ss
fwait
lock
pop
jmp
dec
mov
cmp
xchg
repz
frstor
cmpsl
and
add
insl
lret
inc
xchg
repz
ss
inc
sbb
fs
stc
fists
aam
cmp
sbb
fiadds
pop
stos
insb
cld
ss
outsb
enter
mov
clc
int
pop
xchg
das
fs
mov
inc
cmp
stc
pop
imul
or
and
push
loopne
dec
mov
ljmp
fs
fnstsw
arpl
inc
and
andb
cmpsl
or
fbstp
repz
or
cmp
in
sbbl
rcll
mov
fiaddl
pop
fwait
jecxz
rcll
mov
mov
xor
loopne
cli
xchg
psubusw
xor
lret
movsb
and
popa
xor
sub
pop
and
in
push
stos
insb
mov
outsl
ss
sbb
xchg
out
mov
jp
and
iret
stos
out
cmp
roll
loope
nop
je
or
pop
xchg
jb
inc
mov
iret
inc
outsb
or
daa
lret
xchg
jnp
add
push
jmp
xor
jo
jmp
inc
dec
nop
push
ficomps
rcrl
add
mov
lcall
push
stos
scas
push
push
fcmovbe
fcomps
dec
outsb
mov
dec
sbb
aam
dec
mov
push
js
push
lock
scas
xor
add
loopne
imul
fyl2xp1
bnd
dec
jno
in
mov
mov
mov
mov
repz
imul
jns
int3
ja
mov
cmp
adc
xchg
or
add
xor
mov
or
and
sti
mov
fucomi
jne
mov
cs
les
cmp
clc
cmp
jmp
sub
data16
or
arpl
dec
mov
call
lcall
ret
icebp
fbld
xchg
cmc
mov
dec
loopne
in
xchg
adc
aad
mov
loope
or
imul
lcall
sbb
shr
repz
and
jle
jp
dec
xor
out
gs
ret
fs
pop
xchg
adc
mov
pop
loopne
sarl
cmpsb
jno
xlat
je
std
jbe
push
pop
in
pop
test
cmp
lret
ja
icebp
sub
mov
fldl
pusha
pop
push
cld
xor
push
rclb
scas
xchg
jnp
aad
mov
xor
test
ret
cmpsb
clc
or
ljmp
insb
jmp
std
push
out
repz
dec
mov
and
cmp
loop
xchg
icebp
int
into
sub
inc
and
mov
mov
test
shr
pop
dec
addb
js
fidivrs
lods
xchg
jae
mov
mov
pop
test
fidivrs
fmull
xchg
scas
cmp
lods
ja
inc
divl
faddl
pop
inc
lret
movsb
pushf
inc
ret
pop
and
pop
or
lea
nop
shlb
imul
inc
cmp
dec
jns
xlat
push
mov
or
lret
lds
addr16
outsb
inc
popf
mov
rolb
imul
fimull
adc
fsubrs
enter
ljmp
push
xchg
mov
into
shlb
xchg
xor
lcall
push
fildl
icebp
or
in
push
rolb
das
xchg
jae
jge
sbb
and
inc
jns
aad
adc
in
or
out
mov
ss
imul
stos
adc
push
add
xor
jecxz,pn
mov
mov
sub
lods
lahf
or
mov
mov
adc
mov
ss
mov
movsl
push
jle
ss
ret
dec
mov
inc
add
xor
mov
int
hlt
ds
cmp
add
mov
jle
jge
push
cli
pop
ret
add
bound
and
mov
xchg
or
ret
inc
and
insb
cmpsl
call
cltd
in
roll
fnsave
push
mov
cmpl
mov
xchg
xor
cmpsb
pop
xchg
in
jns
pop
xlat
sub
and
jge
test
inc
or
aaa
fstpt
add
jge
aam
bound
idiv
punpckhdq
pop
lcall
mov
jp
jmp
xorb
ljmp
movsb
mov
test
add
xchg
jecxz
dec
or
mov
mov
les
xchg
push
aas
inc
in
cmp
cli
jo
cmpsl
push
into
mov
mov
add
imul
cmp
jmp
cmc
and
jle
js
iret
es
sahf
lods
pushf
sbb
sub
fmuls
out
in
xor
stc
cmova
dec
sti
mov
dec
sub
push
outsl
add
leave
mov
mov
or
mov
inc
pop
arpl
pop
ja
cmp
adc
jge
push
imull
push
pop
push
add
xchg
ja
fsubp
xor
ret
mov
inc
mov
xchg
push
or
xlat
cmp
cmp
mov
mov
push
hlt
js
in
mov
es
push
fidivl
adc
outsb
roll
jp
dec
jmp
fimull
and
xchg
cmp
shll
fnstsw
das
incl
jge
imull
daa
and
and
cmp
iret
test
rorl
cmp
mov
test
cld
dec
or
aam
call
jg
pop
pop
popa
movsb
popf
jb
shlb
repnz
pop
incb
add
mov
push
or
push
pushf
lea
cmc
inc
das
dec
rolb
in
dec
and
push
add
arpl
mov
mov
add
popa
aaa
push
das
ret
loopne
out
mov
jg
xor
dec
in
jp
pop
cwtl
adcl
test
stos
pop
add
pop
sbb
out
sbb
push
pop
add
lahf
sub
push
fcmovne
sub
ds
iret
test
adc
cmc
inc
push
lea
sbb
xor
xor
sub
adc
add
imul
jmp
mov
and
inc
insl
lods
aad
and
daa
int3
pop
pop
dec
dec
in
cld
sti
scas
mov
adc
sub
cmp
cmpsl
lret
or
clc
es
add
xchg
cltd
mov
out
and
mov
push
add
int
mov
xor
rcr
cmp
adc
inc
testb
push
or
mov
inc
lock
inc
sbb
sub
sub
pop
lods
sarl
xchg
stos
sahf
popl
cmp
jge
push
enter
add
lock
rorl
mov
test
js
xchg
add
aaa
lcall
or
les
out
push
xchg
out
mov
popf
adc
cmpsl
cmp
stc
xor
mov
andb
lret
mov
jecxz
repnz
mov
inc
sarl
adc
sbb
test
lret
mov
imul
jle
mov
jo
cmp
push
fisubs
cmp
out
dec
pop
sub
addr16
pop
inc
jg
cmp
cmp
adc
mov
negb
lahf
rorl
stos
mov
les
sarl
mov
daa
sbb
jle
mov
jl
aas
xchg
ror
in
daa
outsb
cli
sbb
fmull
lret
in
int3
push
xchg
icebp
sbb
arpl
icebp
add
sub
push
add
loopne
jae
enter
lret
or
fcom
mov
pop
sub
fistps
dec
cli
sbb
adc
xchg
cmpsl
add
pop
cmpsb
aam
mov
rcrb
add
jo
mov
in
or
mov
mov
jl
mov
jecxz
sbb
cmp
out
dec
les
adc
xor
jns
mov
sbb
fdivl
scas
mov
cmc
out
loopne
push
ret
fidivrl
pop
adc
ljmp
pop
shl
jecxz
and
call
sbb
xlat
xchg
jo
into
scas
pop
stos
pop
mov
stc
daa
outsb
std
lcall
test
pop
rep
loopne
push
mov
scas
imul
aaa
xchg
clc
sti
push
jno
xor
mov
cli
mov
and
das
or
inc
ret
dec
push
xchg
inc
jmp
add
or
adc
jg
lods
pop
das
ret
mov
out
jnp
scas
loope
adc
add
jge
outsb
enter
stos
call
out
out
cld
in
dec
mov
mov
add
jo
les
ja
pop
push
dec
test
mov
inc
pushl
imul
imul
fistps
xchg
fistpll
fcomps
jb
jg
cmp
jbe
jmp
les
cmp
push
fsts
push
or
sti
pop
shrb
mov
mov
test
out
iret
rorb
or
out
ss
call
add
sub
arpl
popf
insl
add
mov
fists
enter
cmp
out
out
jns
cmpsb
movsl
ret
and
popa
jae
je
fisttpl
repnz
ds
out
je
mov
popf
insb
test
cmp
pop
mov
into
cs
outsl
mov
push
lods
or
jl
mov
sarl
push
pop
ja
xchg
and
push
ja
jp
jo
dec
nop
fwait
leave
pusha
das
dec
sbb
dec
mov
jae
xlat
jbe
or
gs
mov
push
sbb
outsl
movsb
mov
scas
imul
popl
mov
leave
lods
inc
imul
out
xchg
mov
outsl
lcall
call
add
cld
or
mov
cmp
repz
movsb
pop
out
loopne
and
add
aaa
add
push
mull
call
fs
cmp
cli
shlb
insl
pop
scas
mov
je
push
fwait
or
jo
dec
je
mov
ret
xchg
and
jo
fldt
jb
ss
pop
imul
mov
sub
shrb
ljmp
xor
hlt
in
xor
adc
ljmp
mov
cwtl
and
inc
stos
dec
sbb
movsl
add
adc
inc
in
push
push
pop
mov
jle
stos
xor
inc
lods
lods
je
repz
dec
das
in
sarl
shlb
xor
test
or
fcmovnu
push
stos
loop
sub
ds
sub
into
stc
test
push
imul
sbb
ret
cmp
cs
cmp
jecxz
lods
xor
xchg
adc
mov
loope
add
lds
fdivrs
call
shll
enter
fmull
fcom
int
cld
cmp
mov
sub
das
jl
mov
jb
sti
jg
jp
mov
jl
push
out
mov
ljmp
jecxz
sahf
cmpsb
cmp
add
cs
cld
fnstsw
fs
fimull
fnstcw
ret
incl
lods
add
adc
rol
sub
or
rorl
xchg
hlt
int3
jecxz
push
pop
call
je
adc
xor
jnp
loop
jl
pushf
stc
add
sti
and
and
jbe
lret
mov
xchg
lea
sub
in
cmp
ss
xor
lods
aas
lods
jge
test
adc
or
loopne
or
scas
mov
mulb
xor
and
mov
push
cmpsb
insb
cmp
mov
jecxz
mov
cmp
daa
or
mov
jg
mov
add
test
int3
aas
mov
pushw
out
inc
sub
xor
cltd
sub
jno
mov
in
sahf
hlt
mov
xchg
loope
hlt
xchg
xchg
or
xor
jb
xlat
push
sbb
inc
dec
mov
mov
xchg
in
inc
fsqrt
in
in
mov
inc
dec
xor
dec
fnstcw
lds
xlat
int
mov
pop
sti
das
in
stos
iret
out
lret
shr
jbe
aad
jecxz
out
outsb
test
adc
jg
shll
add
mov
pop
lods
jnp
mov
test
test
push
mov
dec
sbbb
dec
push
jg
sub
addr16
lcall
pmullw
fists
popf
ret
scas
sbb
dec
add
test
mov
push
pop
or
mov
ss
jp
pop
mov
pop
cld
shlb
insl
dec
mov
sub
push
loop
fidivrs
jecxz
cmc
mov
push
pop
rclb
pop
mov
push
mov
sbb
cmp
lret
jo
mov
xchg
jmp
imul
and
jle
pop
xchg
add
jmp
pop
mov
fdivp
clc
sbb
cmpsl
adc
mov
cmp
lret
dec
mov
push
push
add
push
outsb
pop
loopne
sub
adc
arpl
pop
inc
test
mov
inc
repz
or
or
xor
dec
inc
xor
shll
sub
push
inc
fisubs
ss
add
cmp
sbb
stos
adc
jl
sti
cmp
imull
clc
xor
pop
adc
or
scas
and
fidivl
into
adc
jnp
xchg
js
sbb
xchg
cmpb
mov
jle
out
enter
pop
xchg
dec
js,pt
out
push
pop
in
aam
add
xchg
js
cmpsl
shrb
jp
cmc
stos
leave
sub
sahf
sbb
mov
cmpsl
rcrb
or
pop
xchg
dec
dec
les
xorb
fdivrs
sub
mov
shll
arpl
mov
aaa
push
mov
pop
push
adc
shll
dec
test
addb
sar
repnz
push
mov
jnp
cvttps2pi
jbe
pop
push
pop
mov
jmp
fs
loope
xchg
xor
sub
push
lret
ret
scas
push
push
cld
push
mov
mov
out
lahf
mov
sbb
cltd
mov
je
and
jl
sub
mov
shl
push
shrb
jae
mov
dec
lea
adc
or
mov
ss
inc
xor
jmp
xchg
fwait
adc
outsb
imul
insl
repz
sti
cmp
and
leave
mov
nop
imul
cmp
test
xchg
loop
xor
and
scas
out
dec
cmp
inc
jns
imul
inc
clc
xor
xchg
test
sub
xchg
mov
xor
cmp
adc
push
sub
cli
push
mov
scas
jecxz
mov
adc
xlat
fs
test
lahf
scas
hlt
into
mov
insb
fidivrs
xor
or
out
mov
adc
lods
mov
fwait
aad
stos
mov
xchg
lahf
ror
adc
pop
dec
add
lahf
add
xchg
testb
out
mov
mov
mov
loopne
xchg
in
jge
mov
out
cwtl
xchg
inc
mov
lock
lahf
or
rol
mov
add
cmp
cltd
sbb
test
mov
fst
mov
nop
repz
rclb
pushf
cmpsb
push
push
ficompl
sbb
ja
pop
mov
in
jmp
out
xrelease
mov
fsubrl
dec
andb
in
adc
aam
ret
cmpsl
movsl
jae
movsb
incb
sub
pop
daa
and
and
pop
fsubr
inc
inc
pop
mov
int3
shll
shll
insl
pop
fmulp
lahf
aaa
lret
jo
cmpsb
shlb
in
ret
mov
dec
mov
ret
stos
mov
sti
sub
adc
leave
jl
pop
stc
iret
popl
or
enter
pop
adc
out
cmp
or
xchg
inc
pop
movsl
push
rclb
sbbl
int3
xlat
out
sub
lods
dec
push
in
das
ret
push
loop
mov
push
ret
sub
rolb
divl
pop
ds
es
push
test
xchg
or
fwait
push
xor
fwait
ds
xchg
sub
push
movsb
sbb
aaa
iret
mov
aam
add
ljmp
in
pop
loop
cmp
cmpsb
movsl
pop
iret
in
sti
or
adc
sbb
rcrl
mov
or
test
sub
out
inc
es
adc
mov
jg
outsb
int3
icebp
out
sub
sub
lods
push
cmp
test
inc
and
push
mov
cmc
int
mov
inc
xchg
pop
pop
mov
xchg
push
xor
ret
sub
jg
lret
es
add
sub
in
ljmp
daa
mov
rorb
aam
jae
dec
dec
stos
int
in
pop
lret
repnz
sub
sbbl
dec
sub
inc
and
lcall
test
mov
add
pushf
push
sub
jo
pop
or
rcl
clc
cmp
mov
sbb
inc
cwtl
cmp
mov
cwtl
cmpxchg8b
dec
fld
or
add
cmp
pop
rcrb
arpl
out
iret
pop
ss
adc
mov
pop
fiaddl
cmpsb
rol
call
dec
shll
ret
push
jb
jg
test
xor
rcl
lret
jg
push
imul
push
hlt
inc
jmp
enter
test
ss
sbb
pop
add
xchg
mov
mull
sub
shl
into
push
ficoms
andb
pop
dec
or
xor
popf
jae
mov
sbb
sbb
or
fwait
ss
pop
shll
pop
fbstp
xor
addr16
in
adc
loopne
ds
int
lea
cmp
mov
es
iret
and
mov
insb
mov
jbe
imul
mov
outsb
lret
inc
notb
jp
mov
jp
inc
adc
push
adc
sbb
daa
insb
sub
jae
rorb
andb
mov
push
sub
std
xchg
fs
movsb
inc
dec
mov
jl
pop
arpl
pop
cmp
pop
xor
cltd
dec
jns
popa
jge
push
mov
mov
or
pop
lcall
lahf
fwait
mov
cmp
mov
xchg
mov
xchg
fdivl
jb
add
mov
pop
sub
xlat
out
add
xor
repz
insb
mov
inc
mov
cli
inc
adc
dec
ds
imulb
mov
lea
sub
adc
mov
loope
and
mov
adc
fisttpll
out
mov
push
bound
int
sub
mov
mov
insb
xchg
cltd
xorl
lret
aad
js
dec
iret
addb
sbb
leave
pop
dec
or
push
cmpsl
dec
push
adcb
jno
pop
mov
addl
cmc
mov
jbe
and
pop
adc
jae
xor
and
add
leave
xor
dec
ja
xchg
mov
ret
mov
gs
mov
jo
arpl
scas
sahf
add
daa
and
mov
xchg
fdivs
fwait
imull
dec
rcr
pop
dec
push
add
jmp
add
nop
xchg
rcll
shll
sbb
fwait
cmpsl
mov
aam
ss
stos
xchg
dec
xlat
or
outsl
push
and
jo
fadds
push
pop
push
iret
shrl
iret
push
sub
movups
imul
mov
sbb
mov
shl
rclb
mov
xchg
mov
push
repnz
sarl
fnsave
adc
add
push
cmp
lcall
insb
test
jnp
xchg
mov
roll
sub
xor
dec
adcl
jmp
roll
cltd
cwtl
mov
fildl
sub
ja
pop
insb
inc
mov
xchg
lret
jl
mov
push
stc
adc
mov
push
ret
add
adc
pop
xchg
pop
add
fwait
adc
fdivrp
loop
xor
js
push
pop
sbb
sbb
fadds
fdivrs
or
adc
aad
pop
clc
por
out
imul
pop
jle
mov
cwtl
lods
mov
jno
pop
leave
xor
and
bound
cld
data16
mov
inc
mov
pop
aad
imul
jge
push
icebp
clc
imul
dec
xchg
leave
stc
lahf
add
rcrb
in
or
out
or
jbe
add
sub
or
jnp
and
mov
mov
cmp
jg
cld
cmp
sbb
fiaddl
sbb
orb
popf
pop
repz
fisubs
cmp
sbb
lea
mov
enter
mov
dec
mov
pushf
pop
or
mov
frstor
out
shl
mov
push
cmp
fisttpll
lret
sbbl
out
sbb
mov
sbb
mov
rclb
fwait
nop
in
cs
orb
push
idivb
mov
mov
ret
mov
xchg
pop
cwtl
xchg
mov
mov
sahf
ror
scas
cmpsl
pop
cld
scas
jnp
xchg
rcll
es
jo
call
pop
lret
dec
pop
pop
je
sar
sub
lods
sbb
ja
insl
xchg
stc
sbb
les
xor
daa
fildll
push
fs
mov
je
adc
sbb
jecxz
rcl
cmp
lock
dec
movsb
insl
lods
push
mov
pop
dec
int3
jg
jae
push
insl
sub
mov
xchg
pop
inc
push
fnstenv
sbb
ret
nop
sbb
mov
lret
adc
jl
dec
xor
es
aaa
dec
xor
and
and
sub
in
fcmovbe
push
mov
shll
ret
pop
leave
adc
std
xchg
int
pop
add
add
ljmp
loope
xchg
adc
jns
js
into
push
es
xor
sbbb
or
cmc
sub
fstp
dec
sti
pushf
sbb
addr16
push
pop
add
adc
loop
adc
sbb
push
insb
movsl
xchg
icebp
mov
and
jmp
sahf
jl
pop
popf
cld
repz
jno
xchg
adc
movsl
cmp
sub
adc
lock
xchg
pushf
insb
icebp
stc
and
outsb
pop
sub
cltd
std
cmp
adc
ja
roll
lods
dec
or
fstpl
or
cmp
mov
xor
xchg
and
push
cmp
fildl
xchg
dec
pop
les
pop
call
imul
xorb
repz
xor
push
shll
fistpl
fstl
sbbb
xchg
mov
sbb
ss
sbb
jge
mov
push
add
push
out
lcall
mov
lock
rorb
push
inc
int3
ss
dec
or
mov
fcompl
fcompl
xchg
push
pop
aam
pop
negl
adc
es
add
jo
xchg
cmp
pop
push
or
push
mov
stc
add
mov
sti
movsl
adc
call
addl
rcrl
sbb
jle
push
lea
jae
and
push
sub
outsl
aad
mov
fwait
xchg
or
lods
jle
push
push
lds
outsb
xchg
addl
lock
or
push
pushf
repz
repz
mov
jbe
imul
cmp
add
mov
push
dec
lret
pop
ret
cld
dec
mov
and
nop
jbe
lret
stos
outsb
sub
test
mov
xchg
hlt
out
dec
push
ret
sbb
jmp
aaa
scas
or
mov
pop
xchg
mov
dec
push
sti
or
xor
sbb
lcall
add
pop
mov
fldl
sbb
sub
lret
lock
stos
loopne
ltr
adc
push
cmpsl
dec
daa
gs
sub
sub
xor
jno
jne
jnp
xchg
add
rcrb
jns
out
mov
xchg
scas
sub
pop
ja,pn
mov
jbe
sub
std
mov
rorl
incl
mov
nop
adc
inc
mov
jge
sahf
cmp
pop
aas
jmp
jbe
loopne
fwait
sub
testl
insl
sbb
push
sbb
inc
in
xchg
mov
negl
xor
mov
shl
inc
pop
dec
ja
or
jge
xor
dec
inc
jmp
les
adc
push
mov
cs
movsl
sbb
enter
stc
jb
in
hlt
and
xchg
pop
outsl
pusha
add
pop
fisttpll
dec
call
std
inc
sbbb
adc
movsb
and
sub
xor
cmpsl
aaa
inc
ljmp
loopne
std
sbb
sbb
test
lcall
push
stc
xchg
jne
mov
rclb
add
push
add
cmp
jb
leave
jae
iret
std
imull
mov
imul
les
mov
push
loop
ds
pop
cmpsb
sbb
loop
mov
inc
inc
jae
xlat
lret
push
and
into
and
lea
and
xor
inc
jnp
jns
lahf
add
xchg
adc
fistpl
addr16
lock
loopnew
call
fwait
cmp
shr
shlb
xor
out
sarl
out
or
divl
jge
adc
push
mov
sahf
cmp
mov
std
sbb
xlat
pop
int
mov
push
xchg
fbld
xor
mov
sarb
cs
dec
lret
and
jmp
scas
mov
inc
sbb
scas
xor
comiss
cmc
xchg
pop
in
pop
sub
sub
cmp
and
icebp
push
mov
ds
push
push
and
fs
fxch
shlb
mov
enter
cmp
jne
addr16
or
add
rcrb
mov
sar
xor
sahf
xchg
cmpsb
dec
stc
stos
xor
sub
push
mov
or
push
mov
pop
adc
or
fs
int
sub
outsl
pop
xchg
xchg
or
inc
xor
add
lods
movsb
mov
jge
lahf
sbb
inc
xor
pop
mov
repz
ss
rcr
dec
fisubs
insl
lret
movsb
ret
popa
sbb
mov
loopne
imul
insl
mov
repz
fistpl
sar
mov
std
xor
loop
std
into
and
div
dec
scas
pop
inc
rolb
sbb
mov
aas
dec
inc
cmp
or
sbb
scas
sub
dec
aaa
lods
inc
xchg
bound
mov
jae
jecxz
mov
push
rorb
sbb
ljmp
stos
jmp
or
and
clc
and
add
cmpsl
lahf
test
cmp
sbb
mov
inc
data16
test
push
add
popa
stos
xchg
mov
fcmovbe
sub
fisubrl
int3
sbb
cwtl
movsl
out
pop
imul
cmpl
jo
movsl
jnp
dec
aam
js
int
fadd
or
lea
icebp
cmpsb
gs
xor
aas
mov
adc
xchg
push
mov
lahf
ret
mov
or
push
sbb
mov
leave
leave
fnstsw
cmp
push
std
push
sbb
push
pop
mov
adc
cmp
xor
cmp
lock
stc
rcll
imul
sahf
into
cli
sarb
and
inc
mov
adc
or
jo
mov
js
clc
std
and
lret
jnp
les
cmp
cmp
and
and
xchg
insb
cmp
or
sbb
inc
xor
adc
lock
bound
out
push
pusha
xchg
cld
js
xlat
popf
push
and
mov
xor
pusha
xchg
lock
sub
mov
dec
repnz
adc
cmp
and
fs
popa
dec
es
sub
stos
std
and
and
aaa
mov
testb
add
mov
mov
xor
sub
outsb
sbb
ss
add
add
daa
mov
nop
push
xor
dec
mov
push
cmp
inc
jb
adc
sbb
sub
jo
stos
cltd
loop
test
sbb
pop
inc
push
mov
adc
mov
rclb
xorl
lds
inc
mov
jmp
pop
push
adc
dec
adc
repz
fs
push
push
add
int3
inc
add
push
push
jg
adc
das
popf
gs
mov
cmp
sbbb
cld
sbb
fwait
push
int
xchg
fwait
popa
aad
in
inc
jae
push
cli
jg
push
mov
pop
mov
dec
dec
cli
mov
dec
pusha
hlt
inc
jge
or
test
loope
movsb
adc
add
ljmp
stos
pop
xor
popa
fs
jbe
push
adc
in
sti
mov
xor
or
imul
pop
rcrb
jbe
adc
int3
addr16
adc
mov
jecxz
push
mov
push
shlb
insl
or
test
loope
mov
cld
push
adc
movsl
push
pop
xchg
shll
cmp
cld
push
in
or
pusha
loop
mov
mov
mov
or
sahf
xchg
mov
jae
aaa
ret
icebp
dec
nop
mov
imul
stos
call
aaa
xchg
lahf
iret
push
pop
cli
sbb
or
jno
cmp
insl
push
jge
sbb
push
cli
shrl
mov
lcall
hlt
inc
sbb
jge
adc
sub
ret
pop
out
loopne
fisubrl
sahf
xor
and
pop
sbb
test
xchg
ljmp
in
pop
pop
sub
adc
add
cwtl
mov
pushf
icebp
dec
bound
pop
adc
inc
popf
aaa
jle
mov
xor
or
cmp
roll
cmc
inc
mov
or
push
fisubl
mov
fisubl
mov
jbe
out
fadd
sub
mov
cmp
sbb
sub
and
out
out
das
fidivl
mov
add
jnp
loope
and
mov
fwait
adc
jae
in
int
aad
jb
out
dec
adc
xor
inc
in
outsb
push
dec
xchg
jnp
xor
test
shrb
jne
loopne
notb
xor
es
sbb
jl
rcll
hlt
mov
push
adc
test
inc
cmp
popa
cmpsb
iret
push
lods
popa
mov
mov
inc
bound
mov
enter
sub
pushf
xor
scas
ret
aaa
mov
mov
fwait
cmp
stc
lods
lahf
fmuls
inc
cwtl
jp
sbb
jle
pop
hlt
test
loope
push
jb
lret
dec
out
sbb
in
inc
inc
movsl
add
sti
jns
out
sub
inc
jl
pop
shr
lock
std
adcl
insl
dec
scas
mov
out
mov
xor
aas
cli
xor
repnz
add
xchg
rolb
xor
add
das
sub
lret
mov
data16
andl
sub
and
mov
mov
hlt
mov
and
jecxz
jmp
dec
adc
and
arpl
inc
pop
pusha
mov
stos
das
adc
movsl
imul
cmp
test
mov
lret
shlb
jns
ds
dec
xor
jmp
mov
sub
cmp
out
outsl
rol
jle
sub
movsb
scas
movsb
sub
pop
and
test
mov
sub
repnz
sarb
movsl
dec
mov
outsb
pusha
mov
adc
push
add
xchg
push
push
xchg
lret
out
nop
pop
mov
std
hlt
ficompl
sub
rclb
mov
mov
mov
dec
les
cmpsl
lock
sti
pop
aam
jecxz
dec
sar
mov
or
add
cmc
int3
mov
enter
sarl
jmp
inc
sub
push
sbb
fsubs
stc
adc
push
fisubl
or
insl
inc
out
popf
mov
mov
xchg
and
and
jno
push
jmp
movsb
inc
pop
in
cli
add
add
jbe
cmp
cmp
rsqrtps
or
int
dec
outsl
mov
cmp
xor
shll
insb
jno
jg
outsl
shl
pop
or
ret
enter
mov
mov
push
mov
cmp
fwait
pop
js
test
cmp
icebp
sub
data16
jne
or
das
sbb
or
or
inc
pop
cltd
mov
and
les
in
cmpb
stos
dec
mov
cmp
data16
pop
out
inc
call
adc
pop
hlt
xchg
xor
xchg
jecxz
hlt
xchg
sub
sub
movsb
fwait
cmp
mov
aas
es
out
pop
adc
sti
subl
repz
into
mov
and
mov
jbe
loopne
jecxz
repz
xor
add
es
jmp
push
xchg
imul
mov
jae
int3
sub
es
hlt
sbbl
lods
fwait
in
in
mov
and
or
jmp
mov
montmul
cmpsb
inc
cmp
adc
jae
jl
cmpsl
dec
push
and
mov
mov
xchg
inc
mov
cmc
mov
inc
inc
mov
cmp
mov
hlt
faddl
rorb
cmpsb
pop
jmp
iret
js
cli
sbb
push
addr16
xchg
popa
mov
dec
or
in
push
fdivrl
insl
mov
insb
cmpsl
inc
lods
repz
and
mov
push
and
add
mov
or
mov
out
shll
mov
stc
lcall
adc
sbb
adc
and
fmulp
jns
loope
pop
push
imul
jp
cltd
repz
clc
rcl
loope
lea
test
inc
fcomps
out
mov
pop
lock
fbld
fsubr
lods
adc
fnstcw
mov
outsb
test
xchg
in
mov
hlt
xchg
fmull
sub
repnz
adc
jecxz
mov
dec
and
xchg
test
lock
cli
push
cs
mov
fdivrl
mov
add
pusha
in
dec
cwtl
cmp
sub
cmc
cmpl
push
dec
pop
or
sahf
push
push
lods
leave
dec
ds
pop
fidivrs
pusha
push
mov
in
dec
leave
dec
movsl
pushf
aas
pop
stos
sbb
aam
insb
inc
pop
add
push
sub
pop
int
rcl
fstpt
mov
enter
dec
ss
push
fisubs
in
jp
lcall
and
in
popf
rcll
adc
sbb
pusha
inc
loop
lret
test
mov
lds
ja
test
add
pop
out
pop
add
mov
pop
pop
fnsave
das
gs
popa
ds
pop
std
or
lcall
jb
xchg
and
repz
into
xor
data16
add
and
stos
aaa
mov
mov
andl
mov
sub
int3
and
popa
hlt
mov
mov
or
ss
dec
out
pop
lds
shll
call
ds
notb
lret
pushf
pop
test
mov
push
mov
push
jbe
adcl
int3
sbb
dec
sbb
xchg
pop
imul
pop
jae
xchg
inc
fcomps
popf
clc
jge
add
push
mov
mov
jns
fs
rcr
dec
lds
int
lret
inc
lea
xchg
or
xchg
repz
lds
hlt
fnsave
cmpsb
stos
pusha
daa
jb
std
insl
sbb
cmpsl
jno
add
cwtl
push
lods
mov
mov
pop
rcll
mov
sub
adc
stc
data16
push
fbld
mov
pop
es
ljmp
addl
rcr
cmp
cmp
movsl
xchg
div
pop
daa
loop
scas
pop
push
inc
movsl
add
sub
jne
aam
sbb
iret
dec
sahf
jle
lahf
inc
jnp
mov
dec
popf
fidivl
cltd
pop
lods
icebp
icebp
lret
lods
jge
jae
dec
ror
adc
mov
xchg
pop
sbb
sbb
jno
mov
mov
dec
lcall
adc
arpl
movsb
mov
aas
sub
mov
cld
adc
xor
outsb
ds
mov
orb
xchg
or
dec
xchg
pop
es
dec
mov
mov
or
and
mov
inc
lock
mov
decl
cs
int3
inc
cmp
mov
cmp
xlat
out
out
add
pop
mov
out
iret
roll
lahf
pop
pop
cmpsl
xchg
push
mov
xor
mov
scas
jl
test
mov
add
or
mov
cmp
scas
bound
sub
push
xchg
sub
fstps
mov
int3
insb
lea
mov
or
das
pop
mov
aaa
idivb
and
jbe
int
cltd
adc
rclb
aas
cmp
sub
test
mov
lods
in
mov
sub
mov
lods
lods
mov
inc
cmp
ret
inc
sbb
stos
mov
jb
and
mov
push
mov
mov
pushf
fdivs
inc
inc
mov
sub
pop
mov
gs
adc
adc
or
push
or
out
subl
pop
jl
out
in
fnstenv
jae
dec
jg
mov
movsl
pusha
orb
pop
repz
out
cli
out
or
push
outsl
lret
idiv
pop
jnp
cmp
inc
daa
repnz
and
arpl
cld
cmc
lret
aam
pop
inc
divb
fsubrs
test
xor
clc
xchg
subps
mov
sbb
adc
jne
mov
xor
lea
sahf
das
pushf
gs
repz
xor
into
cmp
pop
adc
addr16
jecxz
cmp
cmp
xchg
fs
shll
test
popf
fimull
add
fmulp
popa
or
dec
inc
or
mov
mov
aam
pushf
dec
fstpt
mov
pop
cwtl
mov
and
sarb
out
xchg
leave
repz
dec
push
and
jb
popf
insl
les
sbbl
in
je
repnz
std
shl
jle
testl
push
mov
mov
clc
sub
push
pop
push
sub
push
les
sbb
iret
pop
xchg
adc
xchg
xor
sub
mov
je
or
push
les
icebp
adc
stos
inc
mov
inc
jns
mov
mov
xchg
add
mov
and
xor
xor
adc
std
lret
mov
ljmp
adc
mov
push
xor
xchg
sar
cmpsl
aaa
mov
mov
in
xor
imul
pushf
jnp
cmp
or
jge
xchg
mov
mov
adc
cmp
popf
in
fadd
cld
mov
test
mov
sbb
in
aam
int3
test
fcompl
insl
pushf
jg
mov
out
ljmp
mov
xor
push
xchg
std
scas
repnz
mov
jmp
xor
mov
xor
jg
xchg
dec
hlt
lods
fbld
ret
mov
fisttpl
lock
mov
mov
cld
mov
outsb
mov
xor
and
pop
loope
xor
or
xchg
sbb
daa
cmpsb
mov
mov
fisubl
test
pusha
mov
adc
sbb
or
js
inc
div
and
mov
bound
push
sub
inc
inc
or
jnp
xor
mov
popf
pushaw
in
into
dec
xlat
jno
push
push
loopne
mov
lods
adc
test
jne
inc
mov
frstor
pusha
add
insb
enter
cmc
and
addr16
sub
imul
idivl
pop
jb
or
das
sub
add
stc
scas
add
xchg
pop
jecxz
pop
inc
cmp
jl
loop
lods
test
mov
cmp
xor
mov
lods
add
dec
pop
jg
push
sub
dec
clc
movsl
js
pusha
adc
gs
pop
mov
inc
pop
dec
inc
push
call
dec
cmc
imul
mov
test
and
fs
sbb
mov
ja
adc
mov
mov
fsqrt
movsl
push
inc
adc
loop
and
push
out
clc
inc
xor
aas
std
pop
int
jle
dec
push
mov
xchg
fbstp
clc
loopne,pt
ret
lods
mov
addr16
mov
jbe
cmp
jecxz
rcrb
test
inc
mov
dec
fistpll
xor
gs
xchg
mov
xor
out
mov
jge
test
fsubrl
sub
jno
nop
aas
movsb
inc
dec
loop
ds
add
loope
mov
cmp
lret
or
cmpsb
test
inc
ss
xchg
stc
adc
cs
lret
lock
dec
push
ja
mov
jbe
xchg
xchg
sub
pop
movsl
jl
leave
xor
sbb
int
movsl
sti
mov
ret
imul
inc
addr16
xchg
ret
ljmp
inc
mov
sub
mov
hlt
mov
push
adc
add
orb
xchg
mov
std
repz
je
int3
jecxz
loopne
cmpsl
and
fisubrl
fnstcw
nop
sti
mov
inc
push
mov
xor
push
mov
aas
mov
pop
add
and
inc
lods
stc
jb
jmp
out
cmp
xor
ja
xor
or
es
xchg
sbb
mov
push
add
jbe
stos
in
fldenv
nop
int3
xor
add
mov
adcb
cltd
dec
push
and
dec
inc
mov
ret
xchg
cld
aaa
into
ret
test
pop
leave
mov
xchg
cmp
lods
lcall
push
fistpll
dec
lahf
scas
xor
mov
lds
out
inc
push
lods
sti
std
push
jb
inc
out
idivl
xlat
dec
nop
outsb
jb
mov
inc
sub
cs
call
xchg
adcb
hlt
sbb
jge
push
cwtl
push
cmpsl
out
fildl
aam
outsl
divl
mov
dec
pushf
dec
stc
mov
icebp
add
sahf
cmpsl
outsl
cmp
mov
or
sub
ljmp
lcall
nop
repz
dec
popa
or
and
dec
lods
or
cwtl
inc
aad
int
xchg
and
insl
movsb
lods
mov
mov
cmp
dec
xchg
mov
jne
cmp
xor
xor
mov
sarl
sbb
push
pop
repnz
adcl
or
xor
scas
cmpsb
dec
add
sub
mov
mov
jns
xorb
les
cmp
out
in
sbb
sarl
incb
inc
aam
xchg
or
negb
testb
imulb
shrl
shrb
jg
push
sbb
push
movsb
jp
loopne
add
mov
inc
xchg
or
xchg
or
jae
iret
stos
fsubs
mov
inc
shl
movsl
mov
addb
jg
inc
in
and
scas
ror
or
gs
ljmp
lahf
shlb
pushf
and
test
pop
inc
sbb
mov
sbb
mov
stos
in
clc
adc
jae
sub
movsb
notl
mov
aam
or
ds
rorb
inc
pusha
pop
lock
es
lock
or
mov
in
pop
dec
push
bnd
cmp
lret
lock
mov
movsb
movsb
loopne
inc
mov
out
in
lea
subb
add
in
enter
jge
mov
in
mov
mov
jne
and
int3
mov
add
sbb
pop
insb
movsb
lds
push
ret
sub
or
gs
out
cmp
dec
mov
pop
mov
sbb
and
roll
mov
pop
lea
dec
dec
pushf
lea
xchg
call
cmp
into
fs
fiaddl
mov
sbb
out
movsl
or
cmp
jecxz
sbb
dec
sbb
push
arpl
cld
sti
cltd
mov
add
int3
loop
jno
add
inc
sbb
jg
or
add
push
mov
ret
jo
cmp
push
push
in
inc
dec
pop
sbb
mov
fidivs
xchg
pop
sub
xor
ret
mov
pop
ss
cmp
lods
das
xor
cmp
lds
scas
pop
lcall
bound
popa
aas
out
fcmovu
cli
scas
push
cwtl
loopne
mov
or
cmpsb
inc
add
adc
sar
inc
xchg
xchg
mov
out
and
or
add
add
xor
push
sbb
stos
push
cmp
fcoml
adc
push
clc
sbb
jmp
aas
xor
in
addr16
sub
scas
sbb
cmp
mov
pop
sbb
notl
xchg
dec
insl
fnstenv
jg
add
daa
int
fdivl
movsb
jbe
rorl
add
ljmp
pop
clc
xor
and
xor
xor
ror
orl
in
popa
or
pop
jnp
add
cltd
cmp
and
fisubrs
aaa
xchg
in
pop
jae
ds
pushf
js
pusha
sbb
and
xor
aas
test
mov
movsb
addb
jnp
mov
lock
wrmsr
ja
pop
pop
jg
add
add
and
test
sbb
cmp
push
pop
movsb
pop
cmp
data16
dec
fdivrs
ret
andb
movsb
fstpl
xchg
cli
sub
mov
ds
loopne
clc
fidivs
and
int
outsl
or
sbbb
fcoms
and
jg
push
into
sub
cmp
orl
not
aaa
dec
inc
push
repz
or
mov
dec
outsb
aaa
std
pop
sub
dec
jmp
push
sub
sahf
push
test
dec
mov
xchg
jl
push
pop
loope
ss
clc
pop
adc
imul
stc
inc
push
aam
addl
pop
inc
mov
dec
sub
xchg
in
or
fwait
out
mov
push
gs
push
mov
lcall
sub
leave
push
add
sti
xlat
jae
pop
cmp
xchg
hlt
lock
fs
add
xchg
ret
fdivrl
dec
mov
rclb
mov
ljmp
mov
daa
hlt
push
cltd
xor
fisubrs
cmp
je
and
aaa
jecxz
mov
xor
adc
or
sbb
inc
bound
jno
add
push
aad
lret
int3
std
stc
jl
out
sub
or
in
shrl
mov
clc
test
fistl
push
cmp
adc
test
test
cmp
xchg
in
shll
imul
or
aaa
sbb
out
pusha
lret
cld
mov
cmpsb
pop
sbb
pop
rolb
sub
or
push
add
jmp
ret
adc
notb
call
cmpsl
fistps
adc
aaa
push
xchg
mov
mov
dec
cmp
popa
xchg
fsubs
jne
shlb
xor
cmpl
and
rclb
mov
cli
mov
dec
pop
dec
or
mov
cmpsb
sub
mov
or
push
xchg
push
scas
dec
push
mov
mov
mov
add
mov
js
cltd
pop
test
mov
bound
decl
mov
mov
jge
and
scas
push
sbb
scas
fadds
sar
cmp
jbe
ret
movsb
push
int
nop
adc
scas
xor
mov
jecxz
mov
push
cmp
xor
sahf
test
and
or
fsubs
mov
in
sub
adc
sbbl
xchg
in
sbb
arpl
das
dec
sarb
aaa
cmc
scas
or
idivl
sbb
rol
ds
inc
push
dec
negb
dec
lods
cmpsb
sbb
add
in
cmp
cmp
xorl
push
popa
and
aaa
xchg
lret
sbb
cmp
popa
ret
fmuls
adc
push
call
iret
xor
fldl
aad
mov
and
inc
ret
cmp
fldl
scas
cwtl
push
jnp
cmp
push
mov
and
mov
inc
xor
mov
push
adc
adc
sbb
hlt
fstps
cmp
xchg
pop
out
xor
or
push
xor
in
pop
cmpb
inc
in
mov
into
ljmp
dec
sbb
ss
xor
testl
scas
loop
xchg
xchg
mov
push
inc
lcall
mov
hlt
add
sti
add
pop
cli
inc
pop
jb
push
into
bnd
js
incl
icebp
mov
xor
add
rorl
xchg
dec
push
mov
fdivl
cmp
mov
mov
push
mov
out
aam
and
sbb
aam
cmpl
scas
cmpsl
scas
xor
pop
jle
fbld
pop
and
sbb
stc
adc
jg
fnstsw
cli
inc
sbb
cmp
mov
xchg
shrb
mov
inc
or
mov
mov
sbbl
push
and
int
jne
in
leave
in
gs
mov
cmc
divb
int3
mov
mov
loop
stos
mov
xchg
xor
daa
pop
fisubrs
mov
adc
mov
in
cmp
push
jo
inc
mov
dec
adc
arpl
icebp
pop
add
pop
outsb
and
popa
cmp
xor
jmp
adc
jmp
lahf
lock
mov
sub
int
movsb
mov
xor
mov
pop
cmp
fsubl
cmp
pop
adc
and
clc
mov
dec
xorb
cmp
mull
movsb
fiadds
or
add
aam
loopne
mov
test
mov
xchg
std
out
push
pushf
cmpsb
into
add
fsub
faddl
jb
orb
out
inc
int3
aaa
fisubs
shr
int3
mov
and
in
mov
pop
sub
pop
pop
into
jl
and
call
cmp
push
orb
repz
popf
fmul
jb
jnp
ficoms
cmpsl
push
repnz
mov
shlb
add
xor
xor
inc
adc
in
dec
or
loop
sbb
sub
lods
and
stc
jmp
adc
adc
push
lret
mov
mov
jmp
inc
mov
filds
sub
roll
xchg
in
in
push
xchg
popa
xor
jl
mov
jge
stos
iret
mov
andl
shrl
insl
test
xchg
sarl
xchg
cmp
enter
and
out
mov
xor
dec
push
push
xor
adc
icebp
inc
mov
and
sahf
jle
sbb
and
in
jg
inc
mov
xor
clc
push
fbld
xchg
rcl
add
push
adc
jnp
movsb
sahf
mov
mov
lcall
movsb
mov
ss
push
in
call
dec
pop
or
push
cltd
scas
scas
ficoms
fucomi
cltd
dec
sub
gs
jno
or
xchg
mov
test
jo
xchg
lahf
out
shrd
faddp
repz
cmp
lahf
dec
push
mov
adc
mov
lea
into
into
and
jns
outsl
jge
cmp
mov
jne
movsl
fldt
leave
daa
dec
adc
sbb
shlb
test
popa
inc
dec
xor
cmp
xchg
movsl
es
dec
je
loop
cmp
pop
fs
outsl
popa
pop
push
lret
sbb
and
arpl
out
mov
in
push
sbb
lret
icebp
cwtl
sbbl
aaa
insb
pop
jg
in
lret
addr16
rcr
fimuls
inc
test
mov
sbb
arpl
xchg
js
scas
cs
push
and
jo
inc
outsl
cmp
popa
or
lret
test
xchg
std
xor
cld
pushf
repz
imul
fs
pushf
insb
mov
shl
rcll
or
es
outsb
mov
inc
sar
pop
hlt
incl
sbb
xchg
mov
pop
mov
sub
loop
incb
and
push
mov
imulb
cmovl
in
pop
aam
imul
pop
movsb
mov
stc
pop
lcall
xlat
cli
mov
pop
jo
es
jecxz
push
dec
rcrb
mulb
adc
pushf
xchg
or
imul
ret
pop
pop
adc
jo
sub
bound
inc
imulb
ds
push
xchg
stos
testl
movsl
setne
scas
and
rcr
cmp
xorb
adc
pop
sub
aas
stos
sub
lahf
sub
xchg
inc
addr16
lods
mov
pop
mov
push
push
ret
push
xchg
push
mov
cmpsl
popf
aam
test
mov
loopne
xchg
popw
xlat
push
vpackssdw
in
mov
cmp
lahf
xor
loope
xchg
maxps
outsb
adc
popa
xor
push
sub
shl
stos
std
pop
jbe
mov
pop
and
cmc
bound
out
mov
out
pushf
int
xchg
mov
sub
pushf
jns
dec
outsb
adcb
push
shll
pusha
add
rclb
mov
repz
pop
sub
das
add
xchg
and
sub
in
jns
ljmp
pop
add
mov
dec
and
jne
aad
arpl
mov
dec
or
adc
xchg
mov
test
enter
fadd
cs
fnstsw
nop
aaa
adc
jg
xchg
and
mov
jmp
or
ret
jb
decl
jmp
xor
mov
sub
cmp
mov
pop
inc
cmpsl
addr16
repnz
jle
rorb
sub
and
stc
addr16
lock
fsubs
fnstenv
mov
in
mov
pop
fisttpl
push
push
loopne
jmp
dec
mov
mov
adc
mov
jae
imul
cwtl
in
cmp
aad
cltd
pop
push
push
mov
jecxz
pusha
dec
pop
popf
arpl
fisttpll
in
repz
adcl
mov
outsl
cmpsb
ret
sti
inc
add
into
push
fcomp
insb
cmc
inc
cli
jne
mov
add
sub
xlat
mov
push
mov
cmpsl
ret
cmp
imul
or
fnstcw
add
orl
jp
and
fdivl
dec
aas
pop
adc
xor
insl
xchg
loope
inc
fisttps
les
rol
repnz
jmp
fisubrl
pop
jo
and
mov
mov
or
in
jmp
jg
ficompl
pop
and
and
outsl
lret
sbb
jg
test
lsl
jae
add
lods
push
and
dec
loopne
inc
mov
les
inc
jne
popa
or
jo
cltd
xor
loop
lods
jbe
cmp
insb
pop
xchg
jns
add
mov
mov
jne
imul
xchg
push
loope
lock
sbbb
mov
popf
loopne
cmp
scas
es
xchg
pusha
sub
jns
inc
dec
fnstcw
clc
notl
add
addl
fmul
add
icebp
cli
je
mov
test
dec
sub
shrl
adc
xchg
push
rcl
jmp
ljmp
jecxz
dec
in
into
lds
bound
dec
movsb
test
xchg
stos
push
add
adc
push
mov
dec
ret
ss
clc
or
xor
scas
filds
arpl
pop
jne
and
cmp
aam
push
sbb
cmp
xchg
shll
decl
stc
rcr
jg
pushf
daa
cmpsl
outsb
aad
loop
inc
mov
xor
cmc
out
lret
mov
fmull
add
dec
mov
sub
dec
fwait
ljmp
mov
lret
mov
rorl
fcoms
cmp
mov
xchg
lds
inc
xor
xchg
add
fisubl
lods
adc
fidivs
dec
movd
push
xorl
movsl
stos
gs
test
dec
mov
mov
shrb
pop
into
loopne
mov
mov
test
or
cmp
push
insb
pop
fistl
xchg
push
cld
jecxz
test
pop
cmp
mov
adc
jl
js
pop
pusha
pop
sbb
xor
inc
out
cwtl
push
cmpsl
fidivrs
lahf
or
ds
push
outsb
and
adc
xchg
add
jecxz
sbb
mov
xchg
rcr
mov
adc
mov
enter
std
cmp
fisubrs
aaa
sbb
sub
stos
sbb
xchg
insb
pop
jb
cli
dec
jb
sbb
ss
cmp
inc
adc
pushf
ret
mov
stos
dec
out
lds
roll
or
decb
add
cli
dec
rol
aaa
sub
jno
out
pop
loope
xor
sarb
enter
scas
mov
inc
rorl
ljmp
pop
xchg
adc
cmp
xor
in
add
sub
fsub
xchg
mov
repz
scas
push
fcoms
mov
pop
shll
dec
pop
int
xor
inc
rol
scas
pop
xchg
lahf
xchg
xlat
jmp
mov
jbe
mov
push
mov
inc
int
mov
inc
aam
add
xchg
jp
jl
icebp
test
stos
jae
mov
popf
jmp
sbb
and
mov
rcrl
inc
scas
or
mov
mov
push
rcl
jbe
lahf
int3
fwait
xor
jnp
mov
mov
fstl
mov
jge
pop
mov
adc
add
movsb
push
mov
scas
jbe
insl
mov
push
lret
sarl
push
jecxz
mov
fiaddl
pop
lret
movsb
mov
leave
inc
xchg
mov
insb
pop
dec
stos
movsl
dec
xchg
push
pop
pop
fnstenv
sbb
stos
sbb
stc
pop
lds
sbbl
pushl
das
xor
xchg
call
inc
loop
xor
ss
cmp
pmaxub
and
pop
test
inc
xor
mov
iret
adc
jbe
cmpsl
adcl
fsts
mov
test
mov
aaa
mov
cmp
mov
fildll
sbb
lcall
lret
mov
aam
loopne
sub
xor
in
sub
aaa
std
xchg
fldt
mov
decl
or
mov
pop
fs
xchg
push
and
pop
push
mov
sub
pop
xor
fucomp
dec
inc
mov
aad
call
mov
jge
sbb
scas
jb
mov
icebp
into
leave
stos
push
add
rol
xchg
fstl
or
mov
pusha
push
dec
inc
cmp
pop
nop
pop
jbe
cli
gs
out
cmpsl
fcoml
xchg
cmp
lret
sbbl
jge
std
rcrl
mov
inc
push
cmp
push
cwtl
mov
pusha
jbe
push
pop
mov
mov
jae
pop
test
mov
dec
fstpt
pop
das
jmp
mov
es
push
pop
stos
loope
sbb
and
mov
fs
call
bound
xchg
insb
pop
mov
mov
push
mov
test
mov
xor
jmp
outsb
mov
jle
cmp
lods
testl
test
xlat
and
xchg
fs
stc
xchg
sub
int
ret
mov
mov
sahf
int3
fistps
je
lret
addb
call
xchg
sbb
mov
mov
popf
inc
and
push
call
push
add
mov
test
inc
adc
cmp
popf
lret
jo
test
shlb
mov
and
testb
sub
jge
insl
mov
dec
pop
xorl
jnp
out
mov
jg
in
int
xchg
fs
or
popa
adc
jecxz
stos
in
stos
mov
cmp
or
jmp
dec
ret
sbb
mov
dec
repz
xchg
ret
jnp
insl
out
mov
sub
pop
lods
adc
in
push
dec
lret
pop
inc
sbb
hlt
dec
ficomps
cld
dec
jbe
ja
rorb
or
adc
push
xor
adc
test
jbe
mov
pop
push
pop
cli
jl
jecxz
mov
mov
xchg
add
stos
dec
fstp
and
push
test
lcall
loop
cld
ja
push
out
and
xchg
sbbl
xchg
xor
fs
push
push
in
test
sahf
push
loopne
pop
cmp
repnz
xor
xchg
lea
adc
cmc
imul
xchg
out
add
push
rclb
fs
or
push
add
jno
sbb
jo
out
sub
scas
cwtl
add
xchg
adc
pop
add
push
pop
or
rorl
inc
mov
test
mov
cmp
daa
ja
pushf
lret
jno
cld
and
out
or
mov
imul
push
lds
dec
push
jns
iret
ret
pop
cli
mov
les
pop
jl
lret
lds
aas
nop
icebp
pop
sub
jne
icebp
out
rorl
pop
adc
jnp
ljmp
stos
sbb
outsl
adc
add
movsb
rorb
mov
movsb
jb
test
sub
mov
push
pop
xor
sbb
test
aas
pop
pop
arpl
das
popa
adc
add
or
push
dec
mov
faddl
push
out
cmpb
shll
sar
or
and
je
push
mov
roll
mov
sub
out
jmp
leave
fwait
icebp
jno
add
xlat
push
icebp
sub
pop
je
mov
lds
sbb
adc
mov
sub
subb
movsl
adc
mov
xchg
inc
mov
and
jo
test
xor
push
push
jge
or
push
dec
scas
xorl
aas
or
mov
push
shl
lret
pop
mov
xchg
sbb
pusha
aad
dec
out
and
dec
in
insl
sub
jp
adc
cli
push
pop
or
ljmp
and
or
movlps
inc
iret
mov
cmp
dec
sub
lock
pop
add
insl
lret
xchg
in
addr16
jp
loopne
push
popa
pop
int
lds
inc
outsl
decb
adc
hlt
cmc
sahf
lcall
nop
sbb
imul
dec
jp
das
pop
fstps
push
cmpsl
xor
xchg
stos
stos
hlt
cmpsl
jb
out
xchg
fldcw
dec
jno
pop
mov
pop
pop
and
cmp
xchg
push
xor
in
insb
cli
test
adc
jge
mov
cmp
sub
and
jns
lret
out
mov
out
cmp
sub
xchg
mov
test
jne
imul
xchg
cld
push
jnp
or
adc
sbbl
enter
lock
test
sbb
loopne
shlb
xor
jae
mov
mov
or
lret
fdivl
xor
adc
fidivrl
dec
nopl
adc
push
ja
mov
cmp
mov
fisubrl
dec
arpl
mov
in
xorb
cld
cmc
or
scas
xchg
lahf
mov
and
outsl
mov
aaa
inc
xchg
and
lock
or
or
repz
inc
gs
divl
ljmp
mov
stos
sub
sahf
xchg
aam
idivl
sub
ret
fisttpll
mov
jo
mov
push
add
js
cltd
int
shr
push
popf
cld
lahf
sarb
je
cmpsb
jns
sub
push
mov
inc
adc
inc
sti
mov
fadds
mov
xlat
icebp
in
mov
imul
push
push
jns
cmpb
and
int
xchg
and
adcl
je
cmp
pusha
jne
adc
push
leave
loope
inc
cs
loope
fs
sub
sub
outsb
xor
loope
out
mov
adc
cwtl
or
push
mov
sub
xchg
cmp
loopne
push
adc
xor
out
and
popf
out
lret
or
ret
xor
push
repz
inc
xlat
mov
scas
xchg
xchg
sbb
inc
xchg
enter
loopne
add
push
lods
faddl
sbb
nop
dec
mov
xor
xchg
push
sahf
add
inc
shlb
mov
mov
scas
dec
lods
dec
push
mov
fimull
xor
les
sbb
cmc
push
je
pop
es
lret
or
and
jl
xor
pop
pop
add
pop
mov
sarl
test
mov
fimull
and
lahf
xor
orb
gs
in
or
pushf
and
jle
xor
clc
sbb
dec
fs
shrb
xchg
and
add
xor
mov
mov
cld
inc
push
pop
xlat
jmp
lods
push
mov
and
movsl
push
stos
jbe
outsl
sbb
ret
jg
pop
jmp
loopne
push
loopne
sub
sub
test
lea
aam
fwait
icebp
and
push
xchg
pushf
in
cmp
in
adc
cmp
in
test
jae
sbb
mov
or
rcl
imul
imull
xor
dec
aad
add
bnd
or
push
incb
push
jnp
xor
xorb
lcall
jg,pn
sbb
cltd
loope
das
cld
or
dec
mov
inc
cmpsb
or
jb
jecxz
gs
cs
adc
push
pop
rorl
sarl
insl
jecxz
mov
mov
gs
push
mov
nop
sbb
pop
or
adc
add
or
mov
cmpsb
inc
inc
outsb
adc
push
jb
fidivrl
mov
adcb
cmp
jbe
rcr
xor
imul
test
in
xor
jmp
aas
mov
add
push
ss
lcall
shlb
test
hlt
xor
stos
pop
and
in
pop
xchg
stos
scas
xor
xchg
mov
jae
int
sub
sub
pop
push
fmuls
mov
pop
jle
insl
push
movsb
or
xchg
lret
clc
imul
out
push
pop
mov
mov
andl
sahf
inc
or
shlb
mov
xchg
js
cmc
push
gs
adc
adc
xor
pop
addr16
aam
mov
adc
test
lods
xlat
out
xor
hlt
repz
fisubs
leave
es
aam
or
add
mov
fwait
movsb
movsb
sti
int3
adc
adc
jnp
adc
add
and
mov
pop
mov
push
out
lret
mov
jmp
add
pop
adc
cmpsb
jg
xchg
adc
push
loop
mov
adc
cwtl
sub
mov
inc
xorb
jecxz
sahf
dec
outsb
mov
rorl
xor
dec
les
ficoml
lcall
jmp
add
sbb
cmp
push
xorb
adc
adc
cltd
sub
.byte
.byte
dec
.byte
and
sub
dec
push
nop
xor
push
mov
lods
rolb
inc
scas
bound
imull
cwtl
or
xor
das
int
inc
icebp
stos
daa
stc
inc
loope
cmc
mov
push
and
xchg
xchg
cld
adc
inc
loopne
js
mov
inc
pop
aas
out
fmul
inc
sti
lret
or
dec
stc
xchg
mov
ret
lds
nop
shlb
xchg
mov
je
cmp
pop
int
mov
andb
xor
fcmovne
test
jmp
idivl
add
jno
mov
pop
out
enter
or
xor
dec
in
jl
popa
sbb
xchg
fcompl
or
ret
out
xor
cwtl
stos
dec
or
rorl
leave
pop
mov
adc
add
mov
adc
nop
sbb
shr
out
aas
fdiv
sbb
jbe
sbb
lret
lock
push
jno
dec
rcrl
arpl
jb
pop
test
xor
mov
imul
and
and
test
rcll
cmp
sbb
mov
sub
and
sub
mov
xchg
xchg
mov
sub
fs
fisubrs
cmp
push
sar
cltd
orb
dec
aas
cld
ss
loope
pop
cmc
inc
inc
rcr
add
and
mov
cmp
or
pushf
mov
sti
pop
xor
sbbb
dec
mov
fisttpll
jno
hlt
subl
in
mov
fwait
cmp
cmc
imul
xchg
stos
mov
sbb
mov
popf
jle
int
div
test
push
adc
push
fmul
leave
mov
mov
imul
push
xor
je
add
inc
xchg
mov
sti
sub
das
sti
cmp
push
les
pop
sub
ficompl
dec
lcall
mov
inc
iret
lret
mov
ss
leave
sti
or
in
repnz
aam
jb
cli
imul
or
or
sub
jb
sbb
iret
sbbb
and
insb
xor
add
xor
inc
cwtl
jmp
mov
scas
mov
pop
push
inc
add
js
ja
sub
mov
inc
xchg
and
ds
or
clc
jg
mov
sub
shrl
aad
add
fdivr
test
fcmovne
jo
adc
or
mov
inc
hlt
and
sub
adc
lds
flds
cmpsl
insl
dec
lcall
mov
jmp
shrl
fidivs
pop
test
and
lods
mov
jno
aam
dec
mov
cmp
bound
repnz
ds
sbb
aas
jl
cmp
or
mov
mov
mov
test
lods
cltd
dec
fstps
test
shlb
test
pop
lock
pop
cmovb
out
mov
add
loopne
push
xchg
cld
dec
mov
int3
xchg
inc
stos
sub
not
cltd
ret
pop
cwtl
pop
mov
loop
pop
mov
adc
cli
out
mov
mov
frstor
insb
adc
pushf
fbstp
ficoml
xorb
sub
mov
rorl
lock
mov
nop
sub
xchg
mov
xchg
cwtl
ja,pn
popa
inc
addl
jb
mov
les
pop
jb
insl
pop
pusha
into
inc
mov
add
sbb
sub
push
mov
fistl
jb
push
cltd
sbb
pushf
and
pop
add
add
pop
mov
push
xchg
shlw
decl
iret
insb
fldenv
jne
fwait
mov
rolb
and
std
mov
pushl
or
jp
xchg
int3
mov
fwait
add
jne
arpl
jo
icebp
popa
pusha
inc
arpl
popa
push
jno
dec
push
jne
jle
dec
lods
pushf
rcr
mov
add
in
movsb
fs
das
shlb
sub
pop
jg
dec
sbb
or
rcr
mov
mov
into
mov
pop
test
and
ret
mov
mov
cmp
add
sbb
iret
cmp
push
pop
push
pop
and
mov
ficoml
lds
bound
aad
push
out
jae
repnz
pop
data16
or
movsl
aam
inc
jmp
mov
pushf
into
xchg
xchg
sbb
xchg
roll
mov
inc
outsb
sbb
cmpsl
popa
orl
jecxz
cmpsl
mov
push
lcall
cmp
sbb
rcll
rclb
push
mov
and
pop
push
mov
dec
sbb
push
xlat
leave
pop
lcall
mov
jmp
in
adc
clc
inc
dec
push
jmp
imul
mov
adcb
icebp
ds
pop
cld
or
pop
jnp
add
fisubl
add
xor
xor
dec
push
mov
sub
pop
xor
mov
sarb
js
orl
add
and
or
jnp
arpl
mov
je
mov
sub
int
daa
fistpl
or
in
pusha
inc
cs
cmc
and
mov
aam
lock
rcrl
mov
mov
mov
cmp
push
push
loopne
jmp
vshufps
inc
xchg
lea
stc
sahf
sub
adc
xchg
jnp
xchg
mov
xorb
xchg
mov
mov
pop
lock
leave
pop
lock
popf
js
mov
cmpb
orl
jno
sbb
or
adc
add
mov
fnsave
stos
lret
inc
outsb
xchg
lea
xor
rolb
mov
dec
mov
pop
push
mov
push
sbb
divb
sbb
sbb
pop
stos
push
jns
dec
cmp
rorb
push
push
xor
mov
ja
mov
mov
nop
out
sub
sbb
test
les
cmp
add
cs
jo
and
inc
aas
cld
lret
mul
inc
push
mov
out
fldcw
mov
pop
push
xchg
imul
inc
sbb
fdivl
pop
mov
fs
jge
jmp
push
orl
loop
push
jg
mov
or
dec
aas
hlt
ja
sub
push
or
dec
cmp
enter
push
imul
mov
pushf
and
mov
push
out
dec
popa
cmpsb
notl
out
xchg
jbe
adc
cmp
hlt
aaa
adc
movsb
test
scas
cmpsl
jecxz
jne
jne
outsl
cmpsl
xchg
sub
insb
sbb
mov
dec
shll
enter
push
mov
and
mov
mov
push
mov
sub
mov
lret
dec
sub
xchg
ficompl
icebp
sbb
imul
fcomps
pushf
shl
cmp
stos
aas
hlt
pop
stos
dec
dec
ja
and
pop
leave
pminub
xchg
adc
int
mov
fldt
cltd
test
popa
jg
dec
xchg
rcr
das
imul
out
pusha
jb
cmp
mov
jmp
mov
dec
das
xchg
lcall
out
stc
inc
mov
stc
das
adc
stc
iret
and
in
ljmp
clc
negl
mov
push
adc
mov
int3
fs
mov
ret
push
mov
jmp
mov
outsl
and
xchg
sub
dec
data16
shlb
imul
mov
mov
daa
sub
lret
js
dec
and
repz
lret
xchg
test
shrd
imul
loope
pop
loop
std
dec
push
pop
jecxz
nop
cmp
dec
or
jo
int
std
iret
sbb
inc
sbb
clc
insl
into
xchg
inc
and
sahf
inc
js
or
stc
sub
mov
imull
negl
pop
call
mov
jp
fdivl
adc
pusha
movsl
jge
test
and
add
test
lret
jns
scas
stc
sbb
push
mov
data16
arpl
lea
scas
mov
das
cmpsl
mov
fdivs
into
lods
shr
cmp
shlb
fmul
xchg
fcoml
sahf
popa
inc
push
cmp
data16
inc
push
outsl
jge
fildll
insb
dec
enter
and
std
jp
stos
aas
dec
std
add
pop
fnstsw
push
scas
pop
test
mov
jge
pop
inc
or
pop
rol
xor
sbb
popl
dec
dec
loop
push
aas
es
xchg
ficomps
mov
add
or
adc
sbb
ret
sbb
push
adc
clc
and
scas
xorl
pop
and
fcoml
cmp
cwtl
sahf
push
add
push
call
adc
add
stc
push
adc
mov
leave
pop
movsl
pop
inc
xor
or
outsl
jbe
out
pop
push
sub
arpl
inc
cmc
clc
pop
fisttps
push
dec
xor
jb
cmpb
mov
dec
adc
push
mov
add
xchg
das
push
jmp
sbb
ficompl
dec
ss
xor
xor
xchg
out
in
mov
fcmovnbe
add
hlt
xchg
js
add
push
jae
negb
cmp
mov
shlb
dec
sbb
fsubr
fnstsw
cmp
pop
and
and
test
out
adc
sub
js
xlat
in
fstl
ret
mov
jp
faddl
push
pop
lahf
xor
xchg
lods
xor
dec
push
push
or
xor
or
ret
mov
outsb
fisttpl
int
sbb
je
nop
fdivrs
or
test
mov
aas
lahf
jl
in
or
repz
sbb
in
ljmp
ret
jg
adc
pmulhw
sarl
sub
push
in
adc
dec
int
pop
faddl
jne
pop
fisubs
leave
lea
repnz
in
movsl
push
mov
pop
lcall
imul
and
fldt
mov
and
lahf
mov
dec
push
in
fcomps
sbb
cwtl
loopne
shlb
mov
pusha
fwait
and
aad
sbb
lret
adc
add
das
dec
mov
mov
mov
cli
push
ret
mov
out
push
ficomps
loopne,pt
fsubl
mov
push
sbb
lcall
ja
or
add
je
push
cld
sbb
add
mov
adc
and
cs
sahf
or
out
jl
add
xor
in
inc
inc
in
ficompl
test
push
xchg
jbe
jae
andl
cld
xchg
mov
mov
fcoms
jnp
repnz
popf
movsb
and
xor
mov
adc
popf
sub
scas
sbb
clc
icebp
xchg
add
sbb
pop
xor
xor
adc
jbe
mov
sub
ljmp
test
daa
jmp
pop
mov
scas
insb
pusha
mov
repz
ret
fmul
sbb
ljmp
jb
into
int3
fsubrp
push
mov
mov
or
into
hlt
sti
pop
test
mov
add
jb
jle
xchg
fistps
lds
sti
shlb
mov
pop
cltd
test
or
test
rcr
pop
dec
mov
mov
mov
or
fisubs
mov
movsb
adc
xchg
jne
sub
or
popf
icebp
push
add
push
mov
push
push
mov
fsincos
negl
mov
mov
jle
mov
pop
aam
hlt
daa
push
inc
pop
pop
mov
and
mov
je
fwait
mov
push
icebp
std
sbb
cli
std
aam
int3
clc
xchg
cmp
scas
scas
cltd
mov
push
jbe
int
daa
lea
mov
push
mov
pop
lahf
rorb
sub
insl
pop
pusha
sub
cmp
aas
or
gs
xchg
aam
and
pop
adc
jno
xor
mov
ja
push
clc
sbb
iret
jb
sbb
mov
inc
xor
cmp
mov
bnd
cmp
repnz
push
xor
xchg
push
jge
imul
ds
into
imul
jne
test
push
pushf
cmc
aam
or
xchg
out
xchg
negb
cmp
mov
sub
sub
cmc
mov
test
inc
mov
pop
jne
or
int
aad
inc
dec
iret
xor
add
out
xchg
rcll
aam
and
sbb
cwtl
int3
adc
jmp
lods
das
jne
fdivr
or
sub
xor
cmp
in
or
xor
xor
and
push
rcr
jl
lea
jp
in
pusha
push
or
mov
mov
lcall
mov
pusha
add
pop
rorl
mov
cld
pop
pop
rolb
inc
cwtl
adc
jbe
jmp
fs
cmc
sbb
adc
je
lret
clc
pop
cmpsl
sub
stc
xchg
dec
xchg
fs
mov
insb
sahf
jge
in
push
push
les
test
push
push
xor
sub
mov
shl
enter
push
fstl
mov
mov
jno
adc
mov
lahf
vmovaps
js
test
leave
xchg
ds
cmp
sub
nop
jmp
push
mov
inc
jecxz
dec
adc
inc
inc
lret
int
sub
in
mov
es
or
mov
inc
adc
sub
enter
hlt
ss
test
jge
aas
test
aas
sbb
sahf
xorb
cmp
out
push
jbe
imul
jb
pop
push
xchg
daa
in
test
test
fsubrl
ds
pop
ret
mov
movsl
shrl
sbb
push
repz
xor
das
repnz
in
mov
andb
jge
pop
sub
xor
mov
add
out
fsub
cmp
sti
push
sbb
fldt
movsb
mov
xlat
popf
or
repnz
xchg
push
jae
test
dec
lock
and
mov
mov
pusha
xchg
xlat
add
xchg
or
add
mov
mov
mov
cltd
or
jae
cmp
lcall
pusha
lret
and
inc
in
call
and
out
out
push
or
stos
sbb
or
fs
adcl
inc
adc
xchg
or
cmp
pop
cmp
xchg
hlt
incl
imul
sub
cld
dec
cmp
push
aaa
lcall
lock
insb
cwtl
out
mov
sub
hlt
fisubl
jno
cmpsb
inc
test
jmp
and
pop
sahf
lret
add
xlat
popa
cmpl
data16
xchg
arpl
sub
and
out
sub
pop
mov
fisubrl
or
jae
jecxz
dec
xchg
call
fbld
xor
test
push
out
push
faddp
ret
and
pop
xchg
and
cwtl
adc
pop
jp
into
clc
fiadds
push
loop
loopne
out
push
sub
inc
inc
mov
jl
mov
rcl
pop
xor
lahf
lahf
test
mov
in
in
mov
lret
pop
cmp
outsl
std
fsubrs
inc
jnp
pusha
xor
jle
dec
das
push
push
outsl
insl
inc
adc
cmp
push
lahf
pop
cmpsl
repnz
popa
add
or
mov
sub
data16
imul
xor
or
repz
adc
inc
xchg
pop
and
int3
mov
mov
xchg
fwait
jmp
sbb
fmuls
loopne
jb
cmp
test
push
icebp
jae
mov
mov
jbe
xor
jecxz
push
mov
xor
or
addr16
.byte
and
test
andb
lret
ja
jnp
push
sbb
xchg
aam
outsl
clc
das
aam
js
adc
xor
add
dec
aas
xor
movsb
int3
mov
mov
xchg
sub
cld
inc
cmpb
andl
mov
jnp
adc
xor
add
call
andl
out
lock
sbb
out
mov
sbb
xor
stos
add
lock
fsubrl
aam
cmp
stos
sahf
lret
cwtl
inc
popf
lahf
sbb
or
xchg
sub
sbb
test
or
test
cmpb
push
fwait
das
and
dec
cmpsb
jg
dec
xchg
into
push
jne
jl
cmp
inc
fidivrl
cmpsl
mov
and
sub
add
mov
int3
fwait
adc
add
hlt
mov
lahf
push
mov
or
addl
and
mov
cmp
out
dec
xchg
jnp
cmc
data16
lret
dec
jecxz
jns
dec
movsb
xchg
repz
shl
lods
cli
inc
fyl2xp1
in
lods
mov
push
lea
and
cwtl
cmp
or
imul
push
jo
pop
xchg
jno
add
inc
jmp
sub
or
xchg
pop
scas
mov
push
jl
mov
push
ljmp
aas
pop
scas
or
inc
pop
jg
cltd
insb
jl
push
xchg
in
out
push
mov
imul
rcrl
inc
enter
int3
gs
xchg
aam
orl
sbb
cmc
lcall
xor
mov
push
in
cmp
aas
push
and
addr16
dec
sarl
inc
pop
rorb
rol
aaa
ret
and
xchg
mov
or
call
fdivr
jecxz
jecxz
movsb
js
jecxz
stc
adc
pop
mov
dec
pushf
pop
or
lods
or
movsb
cmpsl
cli
flds
xor
sbb
fldz
xor
imul
pop
add
insb
dec
hlt
add
into
idivb
add
add
aam
pop
ljmp
mov
stc
jae
xchg
shll
insl
sahf
in
push
xor
cmc
mov
stos
cmc
mov
sub
xchg
aaa
cmpsb
mov
insb
fidivrl
inc
sti
jno
add
jl
pop
cmpsl
aad
in
leave
sbb
pop
inc
imul
push
popf
ffreep
mov
mov
inc
fidivrs
dec
adc
in
js,pn
cmp
xor
dec
loopne
cmpsl
jecxz
inc
fisubs
inc
cwtl
ds
lret
jge
out
int3
inc
jl
pop
lret
jmp
and
add
scas
push
out
push
and
mov
lds
in
std
xchg
push
jb
and
mov
jb
out
int
dec
mov
push
push
xchg
loop
pop
jno
sub
xchg
imul
stc
xor
inc
dec
and
mov
nop
insl
lea
mov
sbb
rcr
mov
jb
jae
dec
sub
push
push
pop
mov
mov
xor
pop
inc
sbb
xchg
call
fsubp
jo
std
pop
repnz
std
jecxz
and
or
and
test
push
mov
mov
ds
mov
adc
add
leave
mov
dec
gs
add
push
inc
xor
addb
xchg
push
repz
jmp
push
loop
jo
popa
sub
xchg
clc
dec
mov
and
xchg
idivl
loop
jnp
bnd
jo
mov
jecxz
pop
std
push
nop
pop
mov
loopne
sub
testb
icebp
push
cmp
cli
shrl
leave
dec
rclb
jmp
mov
icebp
popa
out
in
imul
popa
dec
hlt
inc
std
cwtl
ja
push
push
mov
or
out
cwtl
cmp
notrack
pop
mov
xchg
sbb
out
rorl
xchg
sbb
or
out
or
sub
sub
and
pushf
add
mov
faddl
mov
popa
push
pop
jg
push
insb
jno
js
mov
push
es
in
mov
stos
adc
std
inc
mov
mov
adc
jmp
and
ret
or
jb
pop
in
ret
mov
or
jne
arpl
test
push
or
and
lcall
test
mov
bound
js
push
sbb
pop
aaa
pop
pop
mov
sub
xchg
shrl
cmp
pop
call
adcl
pop
push
lret
mov
icebp
cld
push
pop
ja
pop
adc
gs
inc
inc
xchg
je
loopne
jo
fcmovbe
rorl
xchg
inc
push
add
leave
sbb
cmc
mov
ljmp
sbbb
movsl
outsb
inc
shl
add
scas
lods
ds
leave
cmp
out
fprem
cmp
mov
or
mov
xlat
dec
and
ss
xor
in
je
inc
imul
sub
adc
ja
cmp
inc
js
aam
inc
addr16
out
jge
in
adc
sbb
pop
xorb
sbb
enter
lahf
jno
adc
and
in
jo
pop
fcomip
cmp
jge
lods
mov
push
fsubrs
jnp
or
test
jle
addr16
push
mov
loopne
sbb
movsb
les
mov
sbb
jno
les
mov
popf
jne
pop
mov
cmpsl
movsl
cmp
mov
repnz
iret
fbstp
xor
pop
nop
stos
shll
inc
push
loope
cwtl
mov
add
add
ljmp
sbb
das
and
cli
inc
xor
das
cwtl
outsl
in
scas
lock
pop
popf
jbe
xor
in
push
jne
mov
sub
xor
out
ret
add
add
in
mov
loop
arpl
lret
scas
lret
fcoml
xchg
bound
inc
repnz
rcrl
jmp
jne
test
stos
mov
inc
inc
xor
sub
and
les
mov
mov
ljmp
rcr
repz
push
jne
int3
jmp
jnp
xor
and
xor
inc
cs
enter
and
sub
jp
mov
pop
out
lock
or
in
aam
out
sti
mov
push
fimuls
lret
inc
mov
test
inc
movsl
cmpsl
mov
adc
ss
mov
adc
add
push
dec
imul
sbb
addb
push
mulb
cmpsl
mov
inc
sub
std
jno
ds
cmp
repz
mov
pop
sub
or
push
sbb
mov
push
bswap
cmpsb
push
push
imul
js
mov
adc
inc
pop
cwtl
and
cmp
es
mov
xlat
add
push
sub
push
mov
mull
call
lret
movsb
xor
js
add
and
sub
js
jmp
inc
lds
jp
ljmp
and
ret
daa
aaa
push
lds
sarb
jmp
hlt
cmpb
sub
or
push
and
cli
cmpsb
mov
daa
lods
arpl
sub
jne
sbb
xchg
mov
jnp
scas
dec
jnp
mov
out
gs
xchg
insb
sbb
stc
cmpsb
adc
mov
fistps
inc
and
aaa
shll
das
lcall
xor
add
lcall
xchg
add
mov
xor
lahf
xchg
dec
icebp
rorb
arpl
test
jns
adc
ss
mov
push
inc
cmp
sub
pop
add
inc
leave
add
pop
push
pop
mov
xchg
fisttps
dec
scas
mov
movsb
stc
fisubrl
jae
test
mov
adc
lds
lret
scas
int
push
push
pop
cwtl
push
xchg
cmc
imul
cmp
add
imul
jecxz
jb
lods
dec
fbstp
mov
adc
jle
out
add
push
mov
xchg
lcall
cmp
mov
inc
dec
or
mov
inc
push
fadds
mov
push
mov
jae
in
dec
add
push
jns
sti
sub
sub
in
loopne
adc
inc
and
inc
jo
lods
iret
iret
cmp
orl
int3
pop
inc
push
jg
pop
mov
and
sarl
sub
push
add
mov
mov
pop
sbb
adc
insl
mov
push
sbb
push
push
mov
sub
dec
sti
adc
xlat
fimull
cltd
je
das
repnz
inc
push
loop
in
sbb
sti
inc
mov
xchg
xchg
or
idivl
sub
mov
lret
stos
mov
xchg
cmp
fwait
dec
scas
aaa
aas
fildl
pushf
std
jl
sbb
mov
jb
aad
sbb
mov
faddl
jl
dec
stc
pop
scas
mov
inc
arpl
ret
cmpsb
sbb
ret
jne
xor
cmp
mov
mov
sub
mov
jae
dec
mov
shrb
in
mov
xor
pop
push
es
les
test
aad
xchg
mov
js
repz
dec
dec
jmp
cmp
ja
jg
call
mov
jmp
data16
jmp
dec
movsb
ja
sbb
repz
test
enter
movsl
into
rorl
js
pop
lea
enter
icebp
arpl
movsb
nop
adc
inc
popf
ljmp
cld
push
add
xchg
jae
movsl
lret
cmpsb
fcmovnbe
pop
sbb
push
fisttps
mov
arpl
test
push
fmuls
ret
jb
mov
into
out
lret
outsl
sbb
rcll
push
sbb
cmpsb
orb
mov
in
into
arpl
push
xchg
scas
cmpsb
inc
movsl
adc
mov
mov
jno
outsl
lea
inc
push
dec
dec
loopne
xchg
lds
mov
jno
repnz
jns
mov
dec
iret
insb
out
sbb
pushw
sahf
into
mov
inc
mov
aas
je
rorb
movb
lcall
movsb
pop
mov
sarl
and
xor
or
mov
test
adc
sub
sarl
xchg
mov
idiv
pop
xor
jnp
jne
xchg
sbb
mov
pop
cwtl
adc
add
stos
xor
or
sub
data16
aad
xor
imull
test
sub
pusha
rorb
iret
fidivs
enter
inc
inc
add
ds
dec
push
inc
sti
out
iret
incb
jle
pop
ret
xor
mov
rcrb
cmp
ss
sbb
inc
jne
loope
pushf
cld
xor
lahf
cmpsl
xchg
aad
mov
popa
mov
lods
jae
sbb
imul
in
fimull
and
inc
lods
pop
fnstenv
ds
mov
and
ficomps
sbb
mov
in
xchg
sub
fisubrs
aaa
hlt
dec
push
push
dec
aaa
std
int
add
xlat
in
mov
and
push
or
mov
popf
insl
dec
push
jecxz
inc
int
inc
pop
and
sub
lcall
sbb
fiaddl
mov
jno
nop
mov
in
xor
cmp
xlat
fcoms
sbb
pop
aaa
inc
mov
or
popf
int3
inc
push
add
lret
fstpt
imul
push
pop
and
loop
fisubrl
cmp
or
jmp
clc
xchg
sub
hlt
dec
addr16
push
mov
iret
fucom
mov
repnz
pop
imul
dec
insl
and
mov
mov
lea
mov
mov
add
stc
and
ja
inc
xchg
mov
or
loopne
cmp
mov
mov
push
add
lea
sub
xchg
xchg
fwait
repnz
cs
jle
icebp
push
inc
and
xor
sbb
xlat
std
mov
ss
cmp
push
lret
jle
in
ficompl
iret
in
jecxz
arpl
movsb
push
jl
insb
cmpsb
fiaddl
adc
test
xchg
leave
sbb
inc
sbb
fidivrs
lods
xor
jo
lret
mov
lods
sbb
divl
xchg
xor
in
cmpl
push
lods
mov
or
and
inc
nop
jmp
into
mov
push
ljmp
arpl
int
pop
adc
mov
popa
sbb
xchg
lea
movsb
gs
leave
sti
fcmovu
adc
and
aas
lods
adc
popf
xor
push
dec
xchg
repz
fcomi
add
stos
adc
push
or
or
js
or
cmp
shlb
cltd
mov
outsb
pusha
add
into
inc
pop
sti
fldenv
in
jl
dec
sub
cmpsb
cltd
push
ds
int3
sbb
roll
mov
dec
outsb
insb
ljmp
fnstcw
push
lea
mov
jnp
je
fwait
push
push
jae
push
mov
inc
icebp
push
pushf
lahf
mov
mov
xor
mov
fimull
mov
imul
mov
popa
adc
sbb
mov
xchg
dec
xor
repz
dec
push
mov
addr16
or
repz
push
and
mov
enter
and
sbb
negl
test
cmp
jne
or
pusha
shrb
jmp
adc
jno
mov
scas
int3
sbb
nop
pusha
push
xchg
dec
mov
stc
ret
push
lock
fistpl
nop
shll
add
ss
xchg
js
je
loop
in
mov
scas
pop
add
in
insl
fwait
mov
mov
adc
mov
sub
mov
xchg
inc
adc
pop
loop
popl
and
imul
pop
subb
xchg
push
push
inc
adc
xchg
inc
jmp
xorl
pop
ja
push
cmpsl
mov
jg
outsb
testb
sbb
cmpsb
jbe
pop
jecxz
out
xor
adc
mov
xor
mov
pop
ret
mov
lcall
sbb
inc
inc
xor
inc
jno
push
push
add
in
mov
out
xchg
insb
cmp
mov
gs
dec
into
insb
jmp
pop
fwait
cpuid
push
enter
xor
or
scas
aam
hlt
xor
outsl
xor
div
pop
or
test
and
cmp
xchg
jg
mov
dec
stos
add
mov
insb
cmp
es
mov
push
ret
sbb
push
ja
add
ss
fwait
inc
pop
rolb
aaa
call
mov
jmp
fdivrs
sub
and
inc
fdivs
test
push
jo
lods
sarl
sub
mov
test
sahf
dec
push
js
repnz
pop
xchg
lea
or
int
pop
or
mov
add
sahf
gs
xchg
pop
push
test
into
in
call
lods
scas
mov
add
pop
and
leave
clc
adc
lcall
in
imul
and
dec
or
pop
cltd
dec
lret
mov
bound
and
jg
adc
fisubrl
dec
popf
cmp
inc
sub
xchg
or
jmp
mov
ret
adc
jl
xor
mov
and
mov
das
inc
popf
out
mov
ror
mov
mov
xchg
addl
insl
pop
aaa
dec
popa
adc
xchg
push
push
mov
or
pop
mov
inc
pop
push
hlt
jmp
push
popf
mov
mov
xchg
sti
fwait
out
pop
jno
sbb
pop
mov
xchg
out
dec
xor
into
loopne
adc
jle
movsl
pop
arpl
aas
roll
xor
mov
bound
out
jae
filds
lret
loop
test
test
jg
mov
xor
cmc
loopne
addb
push
stos
loope
push
test
xchg
icebp
in
leave
sub
adc
repnz
rorb
fidivrl
outsb
cmp
repnz
fistl
outsb
xor
sub
out
xchg
adc
jnp
jae
sbb
and
pop
fs
test
out
repz
add
inc
add
bound
cmp
push
sbb
xchg
enter
out
mov
sub
adc
push
mov
dec
pop
mov
pusha
mov
pop
inc
sahf
in
xchg
jo
lds
sarb
dec
dec
test
fsubrs
add
clc
popf
movsl
xchg
cmc
push
dec
jle
xchg
in
and
mov
dec
aaa
orl
push
fs
rcr
xchg
hlt
mov
pusha
movsl
mov
or
jecxz
imul
repz
cmp
rcll
sub
add
inc
cltd
repz
jno
and
push
addr16
xchg
iret
ljmp
jno
notl
jle
mov
movsb
sub
push
cld
sub
loopne
cmpb
ja
mov
cmp
idivl
loop
test
lret
je
cli
sbb
out
out
push
jge
or
sbb
jne
xchg
jne
pop
mov
sbb
insb
pop
mov
ret
sub
cmpsl
mov
mov
xchg
or
lods
lods
adc
push
fsts
popf
ljmp
sahf
cwtl
aaa
sar
mov
mov
sti
mov
mov
jns
insb
aaa
push
test
lea
mov
and
jb
jo
mov
lea
mov
mov
rcll
bnd
sbb
std
sub
or
idiv
mov
fwait
jle
jmp
fwait
jg
mov
fsubr
inc
sub
pop
push
mov
enter
adcb
lock
jecxz
shll
adc
dec
pop
xchg
jge
gs
pop
mov
divb
gs
aaa
xor
push
mov
repnz
lock
push
leave
arpl
dec
dec
jle
mov
add
lret
push
sar
pop
adc
sub
cld
std
rcrb
jno
and
or
cmp
icebp
rorb
xlat
test
inc
inc
sbb
xor
stos
pop
mov
sbb
mov
pop
add
jmp
jmp
xchg
mov
out
mov
loope
sub
not
lret
cmp
sub
pop
push
lret
push
lods
push
ljmp
mov
pop
mov
out
pop
mov
mov
dec
jmp
jnp
cmp
arpl
jp
fidivs
cmpsl
adc
daa
iret
dec
int3
push
scas
mov
adc
pop
adc
pop
cmc
icebp
sbb
xlat
cmp
idivl
cmpsl
bound
movb
cltd
jmp
outsb
push
test
out
jge
mov
pop
jbe
scas
movsl
push
sub
sub
lret
leave
les
mov
pop
pop
mov
push
lret
arpl
mov
test
inc
xor
jae
test
cmp
dec
jbe
or
or
lret
cmp
loopne
pop
scas
xchg
imul
xlat
test
or
dec
jl,pt
loopne
stos
insb
mov
and
mov
inc
push
pop
push
cmp
js
sbb
sbb
mov
rorb
sub
sub
cmp
test
jbe
add
js
pushf
mov
add
mov
pop
aad
fisubl
int
cli
insb
sub
lcall
jae
rcll
call
movsl
shlb
xchg
movsb
popf
adc
sbb
push
push
fs
inc
cmp
mov
mov
xchg
pop
in
mov
lahf
lods
xor
movups
loop
jns
push
xchg
stc
stc
jno
jne
add
jl
incb
in
mov
cmpsb
nop
adc
mov
addr16
aaa
inc
push
dec
xchg
pushf
add
xchg
mov
adc
das
or
jne
adc
push
sbb
in
mov
lods
jecxz
jne
jge
jbe
push
xchg
xchg
jecxz
out
cmp
inc
pop
shll
sbb
lret
mov
in
loop
xchg
mov
aaa
imul
cmp
inc
mov
mov
ret
and
aaa
mov
add
pop
jae
pop
push
and
add
test
push
iret
stos
push
scas
jl
int3
pop
dec
loop
nop
pop
xor
xchg
sub
les
sti
xlat
add
bound
popa
bound
rorl
mov
ret
or
adc
add
pusha
cli
xor
scas
adc
in
and
mov
mov
push
out
stos
inc
int
mov
xor
lahf
pop
or
ljmp
and
add
orl
jnp
in
imul
popa
outsl
roll
xor
repz
sbb
push
push
sar
stos
and
ljmp
add
out
ret
push
mov
adc
inc
out
inc
cmp
sub
jo
inc
test
push
cmp
in
inc
shrb
jle
add
cli
out
daa
xor
and
outsb
adc
sbb
lods
in
mov
cmp
xchg
daa
xor
pop
in
sti
int3
nop
push
sub
sarb
xor
das
inc
and
xor
cld
testl
mov
cwtl
mov
xor
fidivrs
and
imul
popf
add
pushf
dec
in
repnz
sub
xchg
push
sub
cmpsl
jb
cld
ret
mov
pop
dec
cmp
loopne
outsb
xor
ljmp
in
test
jg
mul
mov
sub
clc
inc
mov
ljmp
cmp
dec
sti
pop
mov
movsb
mov
movsl
xchg
lcall
ss
mov
cwtl
shl
cli
adc
mov
mov
je
lahf
push
sbb
in
rcr
sub
test
fists
cmp
push
adc
cmc
ret
test
mov
cmp
out
add
and
jmp
aam
jmp
push
and
popf
mov
xchg
jbe
in
jge
xor
sub
out
cmpsl
int3
cmp
xchg
imul
shlb
add
inc
or
sbb
lret
jae
and
lea
jnp
lcall
push
mov
mov
cmp
and
pop
lcall
orb
push
int
lock
dec
jae
sbb
xor
stos
dec
sahf
jecxz
adc
inc
mov
jns
inc
adcl
dec
pop
sbb
cs
in
cld
rcrb
cmpsl
xchg
aas
inc
cwtl
mov
xor
jg
fisubl
jp
and
xchg
sub
pop
jns
iret
test
cltd
in
push
scas
jns
jmp
call
cli
int
cltd
sub
xor
jp
faddl
icebp
dec
mov
test
xchg
and
mov
cmpsb
cmp
ret
mov
fistl
jb
sahf
pop
ss
sub
in
or
sbb
cmp
js
jno
jp
popa
xchg
aaa
jae
es
inc
decl
xor
rcll
arpl
test
mov
sahf
popf
fdivs
sub
jl
shlb
mov
cmpl
inc
clc
lods
out
fs
inc
or
ret
xor
xor
insb
movsl
add
xchg
adc
inc
mov
dec
xor
adc
xchg
shrb
mov
mov
mov
int3
mov
scas
pop
movsl
or
xchg
dec
sub
mov
popa
ret
push
and
xchg
not
outsb
fwait
ret
mov
inc
cmp
xlat
scas
out
sub
adc
jg
dec
and
js
push
cld
lods
xchg
dec
cmp
lret
adc
mov
or
push
cmpsb
mov
cmp
adc
mov
cmc
aam
shll
dec
pusha
mov
jmp
jbe
iret
adc
mov
pop
jge
nop
stc
test
jge
xor
adc
test
lock
pop
jmp
jae
adc
movsb
rcrl
add
sbb
jg
jbe
dec
sub
or
nop
stc
pop
cmc
mov
mull
jbe
mov
inc
inc
imul
mov
cld
jge
mov
inc
popa
adc
aaa
or
mov
cmpsb
popf
fstps
cmp
clc
xor
test
xlat
xor
decl
adc
mov
add
out
jae
dec
scas
adc
stos
jmp
popl
fdivrl
jbe
push
aas
das
les
ret
push
cmp
mov
jg
adc
test
push
inc
adc
sahf
bound
movsl
add
pop
adc
jbe
add
jg
jl
jnp
in
fidivrl
es
cmpsb
jge
and
sbb
sub
push
push
insl
jns
or
repz
lea
lock
push
sub
mov
mov
or
fcmovb
scas
incl
pop
inc
in
pop
jl
movb
mov
xchg
arpl
int
jl
gs
inc
mov
inc
gs
push
cmp
cmpsb
push
jnp
loope
mov
in
shlb
xchg
jp
cld
sub
vmwrite
aas
or
in
cld
arpl
jmp
mov
cli
and
dec
into
or
sti
fcomip
cmp
push
cmc
xor
nop
mov
cmpb
aad
add
das
inc
or
rorb
mov
mov
sarb
lea
adc
inc
cmpsb
dec
xchg
hlt
inc
mov
dec
sub
sahf
sbb
iret
cmp
clc
imul
push
aas
dec
xor
adc
pusha
sbb
xchg
out
lds
aaa
push
or
push
jle
add
and
test
dec
cmp
imul
push
pop
sub
repnz
jne
push
pop
aaa
or
mov
or
dec
rcl
cld
or
inc
stos
roll
mov
dec
sbb
push
test
xor
in
nop
in
jmp
mov
and
les
jg
mov
inc
in
std
add
call
mov
xchg
pop
xor
push
adc
sub
lahf
adc
xor
or
jecxz
nop
sbbl
push
mov
ret
lcall
or
mov
adc
das
scas
cmpsb
sti
icebp
icebp
adc
stos
mov
fs
loopne
lret
mov
pop
fs
xor
fs
and
outsb
adc
pop
sub
push
mov
cmp
xchg
ss
cli
iret
test
sub
mov
xchg
iret
jno
cmpsl
dec
test
or
xchg
xor
mov
les
dec
push
loop
mov
and
add
inc
adc
sub
bound
aam
mov
adc
push
dec
push
out
add
sbb
or
stos
adc
xor
sub
call
xchg
ds
jae
sbb
mov
arpl
pop
xor
int3
cmp
jecxz
into
stos
imul
arpl
bound
jge
cs
dec
addl
sbb
jnp
add
xor
lahf
rolb
jmp
xchg
push
push
les
sbb
mov
xchg
or
pop
pop
into
icebp
in
xlat
jns
pop
inc
mov
or
jnp
jecxz
and
loop
mov
cmpsb
repz
fsub
inc
out
push
xchg
jecxz
mov
shr
addr16
scas
cld
or
xchg
repnz
push
stc
jg
sbb
nop
jmp
repz
fidivl
stos
mov
add
in
push
in
fnstsw
push
ret
and
imul
and
lods
clc
mov
mov
push
les
mov
leave
rcll
add
or
shrb
scas
in
ss
mov
lock
fsubrl
xor
xor
dec
push
fildll
pop
and
testl
fwait
push
int3
fs
and
test
fs
in
cmp
testl
ret
mov
int
mov
dec
js
fnstsw
daa
cmp
lret
sub
mov
jl
mov
mov
sarl
gs
test
xlat
xchg
arpl
xor
outsl
pop
test
pop
pop
inc
mov
and
xlat
out
xchg
mov
jmp
lods
dec
or
test
or
mov
arpl
push
pop
sbb
ss
and
pop
popa
xchg
mov
sahf
lock
in
adcb
push
and
inc
dec
xchg
mov
lcall
xchg
jle
sub
sar
push
rcrl
sbb
xchg
outsl
lret
in
jb
add
mov
lret
in
lahf
test
les
cld
mov
adc
movsl
inc
fs
popf
cld
loopne
jbe
mov
or
insl
wbinvd
jmp
das
fcmovu
and
es
mov
jb
loope
xor
jecxz
xor
aam
jne
jnp
ror
cmp
xchg
out
in
mov
push
mov
pop
add
lods
movsl
ja
imul
mull
cmpsb
xchg
jne
std
pushf
jno,pn
xchg
js
test
inc
pop
push
testl
sbb
cltd
push
jb
cmp
dec
cmpsb
cmpsb
stos
push
mov
xlat
pop
pop
xchg
ljmp
fs
push
or
push
cli
js
mov
cmp
cltd
jno
das
mov
std
fwait
fs
dec
repz
mov
pop
rcrl
mov
lret
daa
dec
or
xchg
mov
cmc
mov
lds
subb
ja
mov
jbe
shrl
pop
add
adc
cmp
inc
inc
mov
xchg
adc
push
std
add
in
jae
call
aam
jno
in
outsl
ret
push
shll
push
fisttpl
out
push
lret
push
scas
mov
out
push
in
fmuls
cli
jo
cmpl
pextrw
popa
mov
cmp
out
add
or
cs
int
or
aaa
test
fildl
sbb
fcomi
aam
push
sarl
call
cmp
repnz
pop
loop
cmp
sbbb
jnp
pop
mov
push
jl
mov
test
push
ljmp
pop
xor
dec
jbe
sbb
xor
sub
pmaxsw
push
xchg
fisubs
and
push
mov
cmpsb
xor
aam
cmpsb
int3
ss
roll
leave
out
imul
xor
jne
pop
push
div
add
mov
mov
or
je
lods
push
ret
sbb
and
fs
push
jp
loope
pop
xchg
sub
push
testb
and
dec
mov
xchg
cmp
outsl
insl
jno
mov
cs
mov
dec
mov
out
xchg
add
les
and
mov
loope
sbb
jle
rorb
push
pop
xchg
ja
aam
and
push
inc
sbb
negb
fstpt
pop
pop
lea
lret
in
push
repnz
data16
inc
or
aad
push
mov
bound
pushf
cmp
sahf
hlt
pop
test
pop
jne
xchg
mov
mov
pop
or
jo
mov
adc
ds
in
je
sub
fwait
popa
or
cmp
nop
sbbb
lahf
sub
pop
mov
and
add
jnp
adc
sub
mov
mov
mov
adcb
push
dec
out
push
lret
cmc
mov
.byte
.byte
add
dec
add
dec
add
add
dec
popa
cmp
add
add
add
add
or
sbbb
addb
add
jo
add
mov
add
add
add
addb
add
addb
orb
add
push
add
orb
add
add
add
add
addb
add
dec
popa
cmp
add
add
add
add
or
sub
add
dec
popa
cmp
add
add
add
add
add
add
add
addb
add
sbb
add
xor
add
dec
add
addb
add
js
add
nop
add
addb
add
dec
popa
cmp
add
add
add
add
or
add
rolb
sbbb
subb
add
ds
add
and
sbbb
cmpb
add
push
add
xorb
subb
addb
add
cwtl
add
addb
add
dec
popa
cmp
add
add
add
add
add
add
add
add
add
addb
add
loopne
add
clc
add
addb
add
sub
add
inc
add
add
dec
popa
cmp
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
sldt
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
test
add
rolb
cmp
add
fadds
add
lock
add
or
add
and
add
cmp
add
push
pop
add
push
sldt
addb
addb
add
cwtl
pop
add
dec
popa
cmp
add
add
or
add
enter
out
add
hlt
or
add
adc
add
dec
popa
cmp
add
add
add
add
jg
add
or
cmp
add
inc
or
cmp
add
pop
or
cmp
add
jo
add
mov
add
mov
jg
add
add
add
cmp
add
add
add
add
push
add
add
add
dec
popa
cmp
add
add
add
add
add
call
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
sbb
add
add
add
dec
popa
cmp
add
add
add
add
add
sub
add
add
add
dec
popa
cmp
add
add
add
add
add
cmp
add
add
add
dec
popa
cmp
add
add
add
add
add
dec
or
add
add
add
cmp
add
add
add
add
add
pop
or
add
add
add
cmp
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
js
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
add
dec
popa
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
fmuls
add
or
add
add
and
or
xor
add
pop
jg
add
add
mov
add
rolb
add
orb
xor
add
sub
add
add
add
nop
xchg
add
add
add
or
in
add
inc
mov
add
add
add
or
rolb
add
in
or
rolb
add
mov
or
rolb
add
test
add
push
xchg
or
rolb
add
and
or
rolb
add
hlt
xchg
or
rolb
add
les
add
call
add
add
and
test
add
cwtl
andl
and
add
add
add
jo
and
sub
add
in
and
mov
inc
pop
and
test
add
sbb
add
or
add
pop
push
add
add
cmp
push
add
add
add
adc
push
add
add
add
adc
add
add
add
push
add
add
or
push
add
add
dec
sbb
add
add
add
add
add
push
add
add
push
add
add
add
push
add
add
add
test
push
add
add
add
add
add
add
add
mov
push
add
add
and
push
add
add
add
xor
add
add
add
add
add
push
add
add
add
add
add
cmp
add
hlt
cmp
add
add
add
add
add
inc
push
add
add
add
add
add
dec
push
add
add
add
dec
push
add
add
add
add
add
adc
add
add
add
in
sbb
std
sbb
add
jge
add
add
add
add
add
and
adc
add
inc
cmp
add
add
push
cmp
add
add
push
add
add
add
add
nop
cmp
add
add
movsb
cmp
add
add
mov
and
push
add
add
add
add
add
add
add
dec
add
add
inc
add
push
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
push
add
add
push
add
xor
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
add
and
mov
sbb
stos
cmpb
jo
mov
jmp
jo
and
out
sti
push
and
test
insb
leave
subl
shl
pop
repnz
jno
xchg
int3
aas
lcall
incl
inc
xor
push
pop
xor
out
imul
imul
fidivrs
in
orl
xchg
adc
dec
out
in
or
bound
imul
lods
cmpsl
adc
jp
sbb
cltd
xchg
imul
and
pop
sbb
adc
pop
fdivl
pusha
roll
call
jecxz
lret
cltd
dec
pop
jmp
ljmp
mull
imul
dec
push
xor
rcrl
aad
in
mov
outsb
loopne
bound
dec
mov
int3
dec
jbe
pop
add
in
lahf
sub
fsubrp
test
mov
pop
iret
sbb
fwait
xorl
mov
cmpsl
jl
inc
test
xchg
adc
scas
sub
cmp
enter
push
fadd
lds
lods
adc
mov
cmpsb
rol
fcomip
je
cmpsb
shlb
mov
fnstcw
push
and
add
lods
jnp
dec
clc
call
and
stos
mov
scas
adc
popf
mov
or
ja
xchg
cld
mov
and
fwait
pop
dec
sbb
hlt
add
mov
test
mov
mov
xchg
sub
adc
popa
xchg
xchg
mov
mov
shl
in
mov
into
loope
dec
add
mov
mov
pop
push
call
jo
ss
loope
push
lret
mov
adc
lea
leave
push
inc
bound
xlat
push
mov
enter
xor
add
inc
dec
lahf
dec
sahf
push
sti
jno
push
movsb
and
mov
enter
dec
push
js
ret
movsb
lret
inc
jg
add
dec
fdiv
mov
leave
in
xor
cli
xor
fldt
and
mov
hlt
cmp
repz
stc
fbstp
push
leave
popa
xor
cltd
jmp
mov
cmp
pop
call
push
inc
or
jle
jnp
lret
lds
aas
fidivl
xchg
mov
jbe
add
ds
mov
imul
jne
fadds
sbb
add
cmp
orl
sbb
xchg
inc
mov
fnstsw
test
add
jge
insl
and
inc
pop
arpl
sub
dec
mov
xchg
dec
adc
pop
adc
mov
movsl
lds
imul
jecxz
cld
mov
js
jmp
pop
mov
adc
jl
icebp
pop
mov
xlat
mov
inc
mov
add
xchg
jmp
popa
stos
icebp
add
out
das
outsl
push
out
js
mov
mov
sbb
add
sub
mov
rorl
gs
mov
aas
xchg
outsl
adc
add
pop
jmp
test
bound
mov
mov
jp
es
out
rcrl
push
inc
and
jmp
aas
out
cmp
cmpsl
and
xchg
int3
orb
ja
xchg
out
adc
xor
or
mov
loope
pop
fisttps
test
mov
andl
ljmp
mov
xchg
push
xlat
call
out
adc
dec
jl
sub
ror
cmp
jbe
inc
test
add
mov
out
ds
cwtl
and
pop
add
xor
aam
ficomps
jg
std
jne
jo
insb
xchg
mov
cmp
movq
cmp
out
add
mov
movsl
mov
out
aaa
push
int3
loopne
mov
addl
add
mov
adc
cwtl
push
es
shll
sub
sbb
jge
sub
dec
fs
cmp
popa
lods
sahf
cwtl
sub
enter
mov
ds
int
out
lock
jmp
into
adc
lahf
lahf
cmpsl
add
std
mov
or
in
jne
jbe
es
out
scas
bound
push
xor
scas
or
loope
jge
cmp
addr16
fisubrl
pop
cmp
adc
les
and
nop
icebp
out
mov
and
add
and
sub
xchg
rcl
enter
pop
in
mov
inc
ds
mov
cmc
inc
aaa
decb
std
add
inc
fcomps
loopne
std
mov
movsl
jg
mov
inc
mov
add
jle
pop
mov
test
arpl
mov
add
inc
jmp
inc
sbbb
dec
lahf
xor
sbbb
rolb
lods
add
nop
xor
rcll
add
jbe
mov
and
dec
jne
test
pop
lret
fimull
push
je
pop
add
cmp
dec
test
scas
and
outsb
mov
xor
xchg
and
xchg
cmp
insb
mov
mov
sbb
cs
add
push
pushf
push
xor
sbbb
sbb
bound
inc
pop
roll
lock
out
push
mov
inc
sub
das
mov
test
and
ljmp
dec
sbb
aas
mov
jne
lods
mov
push
into
mov
enter
gs
mov
ret
mov
xor
ss
and
pushf
outsb
lcall
inc
inc
jne
fmull
jp
mov
xchg
dec
scas
ljmp
and
fucom
icebp
cmp
pusha
bound
mov
sub
mov
xchg
cmp
les
push
push
jo
push
int
push
jb
cs
push
and
push
fnstenv
sahf
or
mov
push
xor
je
sub
push
lea
sbb
xor
sub
cli
pop
cmp
andb
inc
ffree
repnz
add
cmp
mov
js
aad
mov
fists
js
lds
adc
mov
sbb
jo
xchg
dec
jmp
sbb
lahf
cli
mov
lea
das
mov
sahf
sahf
pop
out
test
push
aad
imul
push
mov
inc
fsubr
push
je
cmpb
adc
leave
mov
adc
sub
jnp,pt
in
or
inc
push
aaa
mov
adc
pop
cmp
or
cmp
pop
mov
test
sahf
inc
dec
cmp
fdivs
mov
lret
pop
cmp
scas
fsincos
mov
add
in
cli
adc
fstenv
fwait
imul
push
mov
imul
mov
inc
out
cmp
xor
mov
jmp
lds
jmp
mov
mov
hlt
jmp
sarl
jmp
xchg
adc
aam
cmp
aas
repz
xchg
in
lahf
sahf
mov
pusha
stc
jg
sar
xchg
dec
or
sub
push
lock
stos
flds
enter
and
hlt
xlat
enter
aam
jns
call
xchg
add
dec
push
cmp
je
into
pop
das
push
adc
imul
mov
out
popa
sbb
sarb
lret
fcoms
scas
jae
cld
xlat
ss
cmpb
inc
std
mov
jge
mov
stos
mov
mov
lds
xorl
cld
shrb
rcr
dec
jmp
arpl
xchg
cltd
in
push
imul
mov
mov
push
push
sahf
mov
xor
jmp
repz
dec
push
js
cmpsl
rorl
inc
js
xchg
imul
stos
add
sbb
ret
xlat
outsl
ljmp
sub
xchg
jmp
add
jae
jb
aad
add
pop
mov
pop
mov
clc
jg
leave
lahf
loope
cmpsl
int
data16
dec
arpl
mov
or
imull
add
adc
std
sahf
ret
vprotw
iret
mov
out
jo
jecxz
dec
xchg
add
sub
add
push
aas
xorl
cmp
rol
fwait
fwait
cmp
and
mov
jns
arpl
mov
and
push
cmpsb
int
dec
adc
push
jp
repz
imul
cmpsl
adc
js
movsl
ds
jmp
push
clc
test
or
movsl
clc
pop
je
icebp
les
push
sub
xor
dec
cmpsl
out
mov
xchg
xchg
jnp
add
dec
sub
test
dec
pop
mov
inc
lods
fucomp
sub
addl
outsb
jmp
pop
cmp
loope
pop
pop
test
in
mov
icebp
fwait
push
ret
mov
xor
mov
outsb
xor
sub
dec
or
inc
jecxz
mov
stos
push
insl
stos
push
and
dec
mov
bnd
dec
loopne
cli
inc
mov
jmp
lahf
dec
xchg
pushf
fdivrl
es
pop
dec
or
lea
or
mov
adc
push
pop
stos
loopne
sub
shrl
dec
aad
test
stos
aad
pop
push
ret
out
lods
pop
push
mov
and
cmc
cmp
jg
lret
xchg
dec
adcl
mov
es
adc
ror
push
in
pop
enter
push
jl
clc
aaa
cmp
clc
or
int3
cli
mov
fmulp
fs
ror
cli
pop
or
pop
mov
xor
aad
adc
stos
bound
repnz
push
pop
sbb
sbb
or
in
imul
scas
pop
sub
and
sub
add
das
push
sbb
sti
jno
cmpsb
psubd
or
clc
sbb
mov
subb
xor
add
fmuls
arpl
js
faddl
jo
fldt
jg
inc
loope
inc
mov
scas
ret
inc
mov
xchg
mov
in
adc
nop
testl
fidivrl
call
int
adcb
test
neg
dec
ret
movsb
or
scas
or
pop
lds
in
cmp
movsl
inc
xchg
aad
icebp
shrl
push
cmp
push
sbb
mov
push
daa
xor
lds
or
int3
out
add
xchg
inc
jbe
or
push
push
sbb
sbb
dec
je
lods
scas
inc
jmp
insb
pop
call
add
push
ja
fistpl
mov
sub
lods
data16
push
outsb
push
and
mov
out
enter
sub
mov
das
movsl
out
mov
movsl
in
adc
lods
lcall
data16
ds
cmpsb
pop
xchg
shll
fisubrl
and
pop
shll
popa
aam
pop
faddl
sbb
jle
mov
mov
decb
xlat
and
sbb
pop
xor
mov
out
cmc
xchg
incl
es
arpl
xor
cmc
call
mov
fwait
mov
fsubs
push
adc
arpl
test
cli
cmc
inc
in
scas
or
test
in
pop
sub
jecxz
loop
sbb
cmpsl
push
cmc
mov
outsl
popa
sti
daa
sub
xchg
sti
mov
lahf
mov
lret
xor
repnz
or
js
mov
push
out
imul
sub
or
in
mov
xor
and
mov
push
mov
push
pusha
fbstp
fistl
push
cmp
pop
lock
imul
cmp
push
sbb
lods
aam
popa
xor
dec
dec
cmp
pop
hlt
mov
cmp
jge
cld
jb
sbb
negb
stc
sbb
call
jecxz
out
sub
jo
or
cmp
in
addr16
gs
mov
mov
xor
sub
mov
cmp
fsubrl
xchg
fimuls
jae
cmp
test
dec
pop
xchg
and
arpl
test
jbe
aad
mov
inc
mov
mov
mov
in
mov
cmp
jmp
popf
pushf
pop
cltd
xchg
and
jle
ret
jmp
push
jno
xor
mov
sub
mov
or
jnp
in
or
push
lods
cmp
sub
adc
je
fs
inc
mulb
inc
or
jae
inc
lcall
lock
aas
sbb
daa
in
lock
arpl
inc
push
hlt
cs
or
daa
xchg
mov
cmp
sti
cld
in
jp
adc
daa
lock
fwait
inc
xchg
imul
mov
test
jp
add
ja
sti
je
mov
adc
ljmp
pop
ret
jnp
mov
dec
pop
ror
into
imul
stc
adc
in
pop
push
and
push
and
or
mov
enter
aaa
xor
mov
cmpsb
mov
xchg
adc
leave
mov
sub
in
je
fnstsw
lret
repnz
aam
lahf
lods
xchg
push
loopne
mov
in
xchg
imul
pushf
add
lock
sahf
mov
mov
dec
adc
aas
xor
js
repz
sub
aas
mov
hlt
mov
out
pop
push
je
mov
sbb
dec
fcompl
negb
mov
dec
xchg
dec
sbb
into
arpl
cmc
mov
pop
dec
jmp
inc
inc
xchg
std
mov
int3
outsb
mov
xchg
inc
and
sub
shlb
push
cltd
xor
gs
jp
sti
xor
pop
in
test
fmulp
xor
mov
cmpsb
pop
add
fistpll
or
enter
les
and
popa
mov
ficomps
es
scas
mov
jae
or
and
subl
inc
adc
mov
pop
mov
mov
lea
sbb
lahf
arpl
inc
mov
pusha
push
mov
dec
in
adc
mov
dec
jbe
jp
lret
mov
popf
stos
add
outsb
jge
arpl
jno
sbb
out
fbstp
sbb
lea
and
fiaddl
js
mov
mov
fnsave
out
mov
jnp
and
in
xchg
push
iret
std
inc
sbb
insl
int
mov
push
fistpl
push
je
ds
lods
imul
lahf
mulb
lds
das
sbb
pop
in
mov
pop
fidivs
daa
mov
int3
mov
out
fs
inc
mov
pop
push
scas
pop
mov
or
xchg
outsl
repnz
push
loop
push
lods
sub
stos
push
arpl
movsb
jl
incb
imul
inc
out
ljmp
xor
or
popa
cmp
xlat
or
mov
add
aad
xchg
jp
stc
mov
fdivrl
mov
adc
mov
jb
inc
pop
push
xchg
xchg
xor
pop
sub
int3
jmp
ds
das
push
ficomps
mov
mov
push
mov
sub
push
shll
cmp
shll
cmpsb
in
mov
lds
ficoms
rorb
mov
or
addb
push
loop
jg
mov
jno
aad
ss
enter
xor
bnd
push
push
movsl
gs
insb
loope
into
and
std
or
bound
testb
mov
pop
cmp
mov
rol
repnz
cmp
jp
cs
inc
pop
std
jno
mov
adc
mov
mov
dec
loope
aas
mov
add
inc
out
movsl
jbe
jne
cmc
insb
jae
inc
or
mov
push
pmaxub
out
out
pop
inc
outsb
xorl
inc
scas
cmc
test
add
xchg
add
scas
jb
test
jae
mov
and
sarb
dec
xchg
imul
loop
in
jl
sub
mov
adc
cmpsl
popf
or
je
es
mov
lods
and
mov
cmp
inc
add
iret
and
sbb
mov
dec
outsl
xchg
fstps
mov
lds
sub
add
xchg
fs
adc
mov
mov
xor
nop
push
mov
jbe
push
jae
repnz
push
orb
add
adc
sbb
insl
or
xorb
shlb
out
push
push
dec
frstor
sub
xchg
into
fnstenv
out
imull
adc
movsl
adc
sti
adc
stos
test
cmpsb
jo
mov
movsb
out
pop
lret
cmp
int
fcmovnb
in
or
mov
jmp
lods
aam
aad
outsb
adcb
fs
jmp
adc
push
mov
jge,pn
xchg
push
mov
mov
cmp
mov
push
sbb
xor
bound
sub
cmc
mull
push
adc
mov
stc
into
pop
xor
cwtl
mov
sbb
out
pmulhw
jae
shlb
pop
xor
out
xchg
js
push
fbld
in
push
lahf
fadd
adc
mov
pop
inc
outsb
loop
and
int3
jno
inc
decl
sbb
cltd
call
cld
and
xor
arpl
pop
xchg
xor
inc
xchg
sarl
mov
ss
imul
icebp
ljmp
movsb
lods
mov
jno
mov
mov
mov
pop
iret
push
test
lods
cmp
mov
inc
in
ja
in
popa
or
jns
sahf
sub
sti
enter
and
jecxz
ds
mov
jbe
mov
inc
adc
mov
pop
sbb
out
inc
or
or
mov
pusha
push
cmp
testl
cmpsl
adc
lcall
scas
add
mov
das
xor
lret
dec
out
cmpsb
fiaddl
jns
jmp
and
mov
cmpsl
jge
mov
mov
jne
pop
insb
fldt
inc
sahf
call
cmp
data16
adcb
idivl
movsb
sub
inc
mov
jmp
mov
fstpt
adc
jb
repz
xchg
out
popf
mov
jecxz
cmpsl
outsb
je
inc
inc
mov
hlt
test
inc
mov
test
mov
or
popf
popf
inc
scas
stos
cmp
repnz
jl
sahf
adc
pop
pop
mov
cmp
pop
cs
ficoms
dec
add
fimuls
ds
mov
sbb
sub
sysenter
xchg
movsb
stos
and
cld
push
adc
mov
fwait
and
add
pop
sub
push
xchg
or
mov
imul
dec
cmp
or
push
lods
pusha
dec
call
sbb
cmpsb
fsts
push
mov
pop
dec
call
sbb
sub
test
sub
fmuls
jle
sub
xor
jb
sbb
enter
es
shlb
inc
add
aas
mov
add
sahf
out
shrl
dec
ret
mov
popf
imul
mov
outsb
lret
in
cmp
mov
cmp
cmc
adc
aaa
mov
ret
add
pop
mov
mov
fucom
ljmp
in
jo
dec
sub
in
imul
jns
adc
xchg
xchg
int
fisubs
fcoms
lea
dec
jp
mov
dec
mov
push
sub
les
add
icebp
in
fcompl
or
in
lds
fwait
pop
je
xchg
or
pop
push
in
dec
lds
adc
mov
shlb
jp
dec
jge
shlb
stos
mov
test
xbegin
fwait
ss
out
inc
aam
imul
loope
dec
cmp
mov
shrb
adc
adc
add
jp
inc
lods
jle
add
shll
out
inc
bound
jne
repz
fsts
lods
icebp
xchg
jecxz
loopne
xchg
and
mov
pop
ffreep
jle
cmpsl
stc
cmp
mov
xor
mov
in
insb
adc
les
and
leave
test
or
xorl
dec
push
adc
mov
jg
popa
and
or
das
and
shrd
hlt
lcall
fxam
jae
xchg
adc
xchg
cmpsb
pop
add
cmp
add
and
jg
pushf
jle
out
mov
pusha
sarl
xchg
mov
imul
pop
pop
stos
mov
mov
into
inc
sub
dec
jecxz
add
dec
adc
lods
test
mov
or
xor
adc
ds
mov
xchg
dec
or
insb
test
fidivrl
imul
dec
loopne
jne
push
mov
or
bnd
push
push
stos
sub
rcrl
lret
push
bound
push
or
pop
stos
or
xchg
sbb
in
lods
je
xchg
cli
scas
push
mov
in
dec
or
fistpll
push
stos
jno
cwtl
ret
and
mov
and
push
ret
or
jo
add
out
push
push
adc
ss
pop
stos
mov
xor
cmpsb
adc
xor
jb
xor
xchg
je
movsl
adc
mov
inc
mov
loopne
push
popf
out
arpl
shr
leave
mov
popf
stc
in
inc
enter
mov
test
dec
jno
sarl
or
insb
push
incb
adc
mov
fdivrl
push
and
int3
inc
in
xchg
cli
mov
test
xor
mov
and
repnz
and
sub
push
aaa
sbb
mov
inc
mov
mov
xchg
fistps
jb
add
push
push
ficoml
dec
mov
lcall
adc
pusha
mov
xchg
xlat
jle
test
pop
pop
sbb
pop
jecxz
into
or
adc
insl
scas
sub
push
stos
scas
rcrb
cmp
mov
cli
ss
cld
xchg
and
jb
sub
jle
ret
repnz
pushf
out
in
hlt
or
in
xchg
push
cmpsl
xchg
lea
push
jae
lds
sbb
int
out
movsl
fisttpl
pop
mov
loop
xchg
es
rcl
test
and
in
adc
das
ret
repz
out
add
xchg
xchg
jle
and
sbb
shr
fmul
or
mov
ljmp
adc
inc
add
pop
or
leave
faddl
lods
or
fstps
stos
test
xor
mov
scas
or
lret
js
inc
or
shlb
inc
xchg
arpl
scas
dec
ljmp
pop
out
xlat
cmp
popf
cmp
decl
mov
in
adc
mov
dec
aam
xlat
inc
data16
int3
call
movsl
cmp
cmp
and
xorl
int
fcmovnbe
sub
xor
sub
mov
xor
pop
xor
jge
sub
jmp
push
lods
sbb
sub
repz
scas
mov
push
jecxz
ret
mov
cli
pusha
add
jmp
xor
fcoms
adc
call
lds
fidivrs
aas
mov
cmp
leave
scas
mov
jno
repnz
jl
jns
jl
sbb
jle
adc
out
outsl
xor
or
loope
inc
adc
bound
int
ds
sbb
scas
je
adc
jnp
enter
pop
cmp
rorb
cmp
xor
arpl
outsl
cmp
mov
call
loope
scas
out
xor
sahf
adc
and
mov
and
jle
test
mov
pop
cltd
sbb
lea
ljmp
adc
jge
jp
test
sbb
popa
ss
cmpsb
adc
leave
adc
test
add
testb
jecxz
mov
sbb
leave
push
test
jne
mov
sub
inc
aad
mov
add
or
sbb
in
mov
enter
lret
rcr
xor
adc
dec
adc
ret
insb
lock
push
sub
xor
xor
sbb
iret
sbb
pop
jecxz
adc
sbb
push
pop
out
adc
xor
stos
sub
mov
adc
cmp
sarl
fcomps
push
addr16
out
loopne
xor
jo
push
sub
imull
mov
mov
out
lods
repnz
push
into
mov
mov
test
or
cmpsl
pop
dec
arpl
xchg
repz
jno
imul
lret
xor
lds
mov
lea
dec
sbb
or
int
stos
mov
mov
subb
imul
fs
jg
or
js
xor
les
jmp
fmuls
dec
and
adc
inc
addr16
xchg
and
test
xchg
icebp
pop
mov
sub
cmpl
in
mov
lds
in
popf
repnz
in
inc
into
sahf
dec
sbb
sar
adc
imul
loope
dec
outsb
mov
lock
lea
xchg
inc
cs
dec
cmp
les
ret
mov
mov
cmp
push
pushf
and
les
sub
dec
ja
mov
test
sbb
inc
inc
in
cmpl
pop
and
adc
notb
jne
pop
mov
sahf
clc
test
jle
cvttps2pi
lcall
rdmsr
gs
sbb
ret
mov
cli
mov
cld
adc
fcomps
xor
xchg
ja
adc
fnstcw
xlat
dec
lods
pusha
and
cmp
mov
bnd
push
pop
push
mov
xacquire
cli
dec
adc
out
mov
dec
out
inc
sbb
mov
mov
or
pusha
pop
mov
aas
into
dec
or
mov
inc
lret
sub
pop
mov
movsl
pop
xor
dec
xchg
test
pushf
jle
out
ds
sub
icebp
jne
jnp
fistps
bound
cmpl
lock
push
mov
xor
cmp
cmpsb
rol
mov
addr16
sbbl
fistl
push
repnz
testb
movsl
sbb
int3
fistpl
inc
aaa
movsl
stos
jbe
sti
setb
cmp
scas
ret
lret
xor
aaa
ss
test
aaa
into
out
mov
in
mov
mov
mov
aas
ret
mov
lds
add
and
xchg
cltd
xchg
cmp
repnz
and
push
mull
lret
add
sub
cmc
and
aad
mov
pushf
cld
push
jl
fs
aas
xchg
iret
xchg
js
lods
push
adc
pop
das
call
stos
and
cmp
outsl
mov
or
testb
inc
and
js
ss
jge
mov
mov
fs
jns
push
dec
inc
test
outsl
fidivs
jno
call
gs
aad
lock
add
add
out
xchg
and
jle
push
sub
loope
popa
push
or
jae
pop
movsl
cmp
mov
dec
xchg
andl
scas
mov
mov
fisubl
dec
scas
jnp
mov
pop
loope
pushf
mov
pushf
je
adc
movsb
mov
jmp
stc
push
scas
cmc
sbb
jbe
mov
aas
mov
and
loope
mov
sbb
sarb
jno
sbb
pop
repz
jle
fwait
int3
dec
xor
pushf
jnp
nop
movsb
movsl
xor
pushl
jne
xchg
out
pop
fwait
pop
leave
lods
aad
movsl
test
mov
scas
fldt
lcall
test
xchg
test
xor
aaa
out
aas
outsb
add
lock
in
jno
shrl
mov
mov
adc
je
xor
add
xchg
mov
cmp
add
leave
sub
push
insl
stos
lret
in
in
lds
or
test
fcmovu
daa
leave
pop
pop
mov
in
movsb
pushf
sub
sub
pushl
outsb
mov
cmpsl
mov
hlt
ja
ja
stos
dec
jp
lods
movsl
xchg
xchg
inc
pop
jo
lret
ljmp
outsl
xor
int
call
stos
jno
movsb
xor
shl
sub
mov
and
adc
ret
outsl
enter
pop
pop
mov
in
mov
sbb
lcall
mov
mov
stc
ds
xchg
xlat
iret
jl
mov
or
in
xchg
incl
adc
mov
fnstenv
lea
or
lea
stos
xchg
or
lds
jmp
xor
cld
outsb
and
push
and
xchg
sub
das
mov
enter
sbb
add
cli
sbb
arpl
or
sahf
sbb
test
add
pusha
leave
adc
repnz
sahf
aaa
pop
mov
in
pop
cmp
adc
loop
clc
inc
inc
shlb
pop
out
push
push
das
mov
and
xorb
cs
push
gs
enter
inc
mov
nop
aam
xchg
dec
leave
mov
in
add
pop
leave
loopne
jbe
or
scas
aaa
cs
cwtl
cmpsb
and
neg
and
or
dec
jmp
insb
adc
roll
outsb
ljmp
mov
outsb
mull
mov
pop
sbb
add
arpl
adc
fdivr
mov
insl
sbbl
sbb
into
icebp
insl
mov
aam
flds
cld
data16
rcrl
mov
ja
std
cmc
cld
pop
add
push
outsl
lock
or
cmp
cltd
jge
fimuls
or
lret
sarl
iret
subb
aas
ja
or
jno
lcall
xor
push
pop
add
mov
test
sub
push
add
add
jecxz
test
pop
push
int
addr16
and
je
imul
in
mov
stos
imul
xor
aam
xchg
add
sbb
mov
lock
mov
sub
dec
je
or
dec
inc
xchg
push
cmpsl
repz
aad
and
hlt
dec
jae
out
cmp
bnd
mov
or
je
pushf
rcrl
dec
cmpsb
and
cmp
repz
pop
andb
pop
lcall
mov
pop
loopne
out
pop
push
jg
scas
xchg
pop
jns
push
imul
jge
mov
cltd
daa
lods
and
or
pop
push
fstps
ds
jp
or
push
and
push
dec
jecxz
push
test
pop
mov
or
jp
arpl
cmp
add
pop
or
dec
mov
in
sbb
stos
leave
lcall
gs
cmp
fs
pop
adc
fldl2e
cltd
dec
dec
fmuls
mov
sub
lds
mov
testb
xchg
pop
mov
sub
test
fildl
sbb
dec
ja
lret
push
cli
shlb
pop
pop
cltd
add
std
in
pop
mov
add
inc
and
aad
imul
xor
movsb
mov
sub
sub
xor
jbe
pop
dec
dec
popa
cmpb
enter
inc
mov
or
jle
push
movsb
and
sbb
enter
pop
popa
insb
test
or
adc
xchg
cs
icebp
pop
inc
shl
leave
and
mov
xor
in
out
js
mov
inc
repz
adcb
lret
fstl
test
jecxz
mov
or
bnd
int3
jb
jae
xchg
mov
inc
lcall
or
enter
jns
lea
xor
cwtl
bound
mov
xor
mov
adc
pusha
xchg
int3
out
jg
pop
pop
sbb
loope
sbb
cltd
enter
xor
cli
out
lods
cwtl
xchg
sub
mov
cmp
mov
push
mov
movsb
adc
xor
cli
add
xchg
sbb
pusha
xchg
adc
aad
jg
movsl
pop
sbb
xchg
fxtract
insb
mov
imul
cli
hlt
push
adc
add
dec
es
pop
xor
aad
lock
sub
pop
repz
fstpt
aad
insb
bound
scas
out
xor
fildl
ja
fsubs
push
pop
xor
lock
inc
sahf
xchg
push
sbb
stos
mov
aaa
cltd
iret
in
fnstenv
ret
addb
lods
cmpsb
pop
ds
cmp
cmc
inc
inc
sti
xor
jp
pop
pusha
jnp
test
sub
in
pop
add
fldcw
imul
and
and
xor
sbb
and
insb
in
add
mov
scas
pop
adc
mov
pop
fdiv
push
js
and
adc
mov
notb
fsubs
movsb
sub
sub
das
das
outsb
push
pop
rolb
notl
mov
aaa
test
bound
arpl
and
xchg
dec
xor
sbb
adc
fiadds
fsubrs
and
xchg
mov
lret
in
push
pop
xchg
jb
mov
jp
repz
fs
mov
jmp
cmpsl
fildl
stos
fmul
inc
jge
inc
pushf
mov
stos
cld
mov
push
add
adc
push
push
icebp
xchg
pop
dec
call
push
dec
fiaddl
jo
daa
push
out
cli
out
int
jnp
cmp
popf
pop
sbb
or
pop
inc
sbb
ss
push
iret
adc
inc
mov
cmc
push
aaa
or
aad
push
xchg
int
inc
push
fstpt
mov
push
out
stc
popf
mov
xor
cmp
repz
ss
fcoml
adc
adc
mov
mov
subl
daa
dec
or
ficoml
add
xchg
dec
mov
fs
jae
adc
sub
sahf
mov
cmp
cmpsb
mov
rcrb
mov
inc
mov
or
push
test
sbb
repz
lret
fnstsw
sarl
add
pop
pop
inc
xchg
aam
fnsave
mov
sub
fists
mov
mov
xor
les
xchg
jp
insb
mov
scas
popa
pop
cmp
cmp
push
pop
iret
xchg
jno
cmp
cli
cld
jecxz
sub
or
sub
lds
xchg
cwtl
lret
mov
adc
cmpsb
mov
cwtl
or
pop
jne
sub
out
divl
dec
push
mov
cmp
inc
rcrl
adc
adc
cmpsb
nop
mov
shlb
insl
js
sar
lds
sub
or
in
ljmp
data16
pushf
int3
lea
cs
jp
sbb
pop
add
je
lods
jle
bnd
repnz
lret
adc
pop
adc
push
filds
mov
inc
xchg
xchg
pop
push
mov
addr16
xor
mov
jmp
fdivr
sbbb
fldcw
push
and
inc
shll
jmp
mov
das
lock
test
pop
inc
cmp
mov
xchg
es
je
icebp
mov
sbbb
push
push
adc
data16
shrb
mov
hlt
mov
inc
fwait
lds
cmpsb
cmpsl
xor
sbb
cli
xor
sub
fwait
xchg
enter
insb
or
mov
pop
mov
and
and
or
rolb
test
rcpps
and
adc
cltd
inc
loop
push
and
pop
adc
mov
fistpl
adc
xchg
sub
jb
and
pop
and
out
and
mov
out
cli
inc
sbb
add
adc
decl
int3
out
aaa
or
or
dec
ja
loopne
add
sbb
pushf
inc
lcall
fwait
sub
aaa
out
jae
pop
push
jl
push
dec
xchg
inc
psubusw
or
cmp
dec
lahf
pand
sub
and
pop
mov
inc
or
inc
std
push
sub
shrb
ret
sub
pop
pop
push
pop
stos
popa
out
mov
out
push
lods
stos
push
out
inc
cvtpi2ps
fs
test
xor
and
addr16
stos
cmp
mov
lds
push
pop
mov
cmp
push
dec
pop
mov
lret
icebp
mov
repz
push
fistpl
addr16
mov
pop
mov
and
in
fidivl
iret
adc
out
mov
orb
mov
dec
sbb
adc
stos
adc
mov
hlt
adcl
jne
dec
out
dec
incb
imul
xor
aaa
pop
adc
xor
cmp
mov
mov
jl
dec
dec
ret
mov
xchg
lret
xchg
and
or
push
lret
call
arpl
adcl
leave
aas
test
fcmovnbe
pusha
loopne
fidivl
inc
and
call
mov
fisubrs
cmc
xor
enter
int
jne
fimull
pop
lock
and
xchg
cmp
cwtl
sub
faddl
mov
fs
cmp
aaa
xchg
push
jne
fistpll
jecxz
add
mov
loope
add
pop
or
outsl
or
mov
push
xchg
call
filds
es
sub
add
scas
and
sti
sub
cli
stc
data16
int3
jge
dec
sbbl
cmpsl
js
pop
icebp
xchg
jne
fisttpll
adc
push
push
sub
add
clc
test
loope
lret
jne
push
shr
xchg
inc
subb
and
xchg
cmc
in
xchg
dec
je
xlat
push
mov
mov
into
dec
xchg
add
pusha
test
jae
outsl
mov
mov
add
and
adc
aas
into
arpl
xlat
gs
das
out
daa
or
fisubrl
push
aas
xor
sbb
mov
sbb
mov
xor
leave
mov
fildll
movsl
es
fnstcw
push
add
outsl
lret
jae
stos
lahf
imul
mov
dec
lock
or
int3
fcmovnb
add
subb
xchg
notl
insl
pop
jecxz
lret
int
push
test
int
in
xchg
fidivl
dec
adc
jmp
xor
xor
cwtl
jl
icebp
lods
add
arpl
push
inc
xchg
ret
push
or
cmpsb
xchg
mov
sbb
iret
mov
mov
xor
addb
scas
in
mov
push
scas
into
push
test
dec
mov
stos
test
adc
or
fisubrl
gs
sub
dec
jae
stos
test
outsl
je
mov
push
sub
push
lock
mov
or
cli
aaa
dec
jae
das
xor
test
and
push
hlt
pushf
xor
paddd
test
dec
fwait
and
inc
inc
stos
add
and
inc
cmp
lret
push
push
sbb
inc
je
or
fimull
adc
mov
push
pop
sbb
add
mov
ss
inc
or
cld
fs
cmp
movsl
xor
cmpsl
das
mov
adc
pop
add
ret
and
lret
jge
add
cwtl
arpl
xor
enter
sar
sti
test
push
call
xor
mov
sbb
adc
pop
jnp
cmp
push
cmp
lahf
cmpsl
inc
and
mov
add
dec
outsl
mov
mov
pop
jp
out
lea
inc
icebp
mov
cmp
push
push
sbb
dec
popf
ja
xchg
or
sahf
xchg
push
out
repnz
insb
pop
adc
test
adc
dec
nop
call
add
or
and
inc
nop
ja
inc
jl
test
mov
mov
cld
shll
add
mov
hlt
sbb
push
movsl
lahf
sahf
ds
in
cmovno
sub
sbb
in
stc
popf
jl
jmp
lahf
and
aad
stc
jg
cmpsb
pop
mov
xchg
aaa
cltd
sbb
mov
xor
xchg
ret
fbld
cmp
pop
sub
or
and
scas
ljmp
fadds
out
lea
jecxz
or
stos
outsl
mov
mov
pop
je
cmpsl
cmp
scas
nop
testl
lea
mov
lea
push
jnp
cmp
mov
leave
xchg
dec
sbb
loop
mov
movsl
andl
sbb
jne
jbe
push
xchg
push
pusha
adc
rcl
notb
mov
mov
mov
int3
adc
jno
out
cmc
ss
ja
jns
stos
fdivrs
mov
dec
mov
jge
cmc
adc
in
jmp
outsb
nop
rcrb
pop
jmp
pop
dec
or
sahf
mov
aas
dec
jg
movlps
mov
and
add
les
xchg
mov
cmp
xlat
xor
ljmp
xor
mov
inc
add
popa
rorl
fbld
ds
jb
jae
or
iret
data16
test
xor
stc
sahf
push
mov
arpl
pop
jns
or
mov
sarl
cmpsl
fwait
mov
pop
mov
push
jnp
dec
inc
mov
xchg
dec
mov
loope
std
shrb
repnz
cmpb
pop
pop
jno
stc
mov
nop
jno
ja
movsl
adc
adc
sbb
push
testl
pop
pop
xchg
or
rorb
std
outsb
js
cltd
leave
sub
insl
mov
and
lock
cmp
cli
sbb
mov
adc
mov
push
cltd
mov
in
notl
mov
les
insl
cld
add
cli
aas
xchg
sub
dec
mov
xchg
stc
mov
sbb
nop
xchg
dec
das
inc
ds
shl
iret
pop
push
xor
and
cmpsl
lret
ds
sub
or
icebp
int3
leave
dec
fstl
aad
dec
jb
cmpb
sbb
xchg
or
xor
sub
cld
aas
sbb
sbb
inc
cltd
sahf
mov
adc
pop
pop
es
dec
lods
bound
pop
imul
pusha
mov
test
or
xchg
out
xor
xor
lock
pop
mov
xor
mov
dec
insb
int
jmp
sbb
push
shlb
jne
push
mov
inc
cld
jp
lods
clc
fwait
pop
lcall
stos
sahf
sub
frstpm(287
pop
pop
pop
js
dec
pop
imul
dec
mov
rclb
sub
adc
fdivl
xchg
jge
outsl
lahf
jecxz
repnz
js
roll
fistpl
aad
loopne
xlat
pop
push
sbb
push
dec
jae
popa
out
or
dec
cmp
dec
jns
adc
inc
sbb
dec
sbb
push
cli
mov
jmp
mov
sbb
inc
imul
mov
xor
in
imul
aas
mov
loop
rcrb
cs
jb
fisttpll
push
mov
in
xchg
mov
mov
add
and
mov
add
pop
imul
xchg
sub
loopne,pt
adcb
and
push
loop
sahf
lods
jecxz
xor
js
dec
and
imul
inc
add
cs
xchg
iret
cmp
lea
cs
repz
sub
dec
clc
mov
and
fisttpll
inc
out
adc
xchg
sti
rolb
ja
or
pushf
rcr
fistl
push
adc
jp
dec
mov
and
lcall
or
leave
rolb
inc
mov
adc
scas
add
imull
stos
popf
clc
aaa
test
xchg
mov
jle
jg
jle
or
les
int
add
push
call
xor
sbb
int
sub
hlt
cwtl
jns
mov
pop
inc
jbe,pt
sub
or
mov
rcl
dec
in
push
xor
ficoms
sbb
xchg
test
nop
fs
push
mov
out
sahf
inc
mov
or
rcl
hlt
fisttps
jo
jmp
fisubl
sub
stos
hlt
imul
fs
or
hlt
push
mov
push
dec
pop
jg
popa
adc
test
hlt
aaa
mov
jp
ds
pop
sbb
sahf
sub
xchg
js
cmpsb
notrack
mov
add
bound
and
shr
add
mov
aas
inc
popf
add
xor
pop
adc
inc
scas
aaa
dec
mov
jb
xlat
stos
imul
inc
sub
aad
xor
addr16
out
push
je
mov
pop
add
shrl
adc
push
fcmovnbe
out
outsb
jne
mov
inc
xchg
mov
push
inc
mov
aaa
or
pop
leave
mov
and
out
jbe
xchg
inc
fldcw
inc
sub
mov
push
and
jbe
sbb
or
aad
movsl
sbb
addr16
sub
cmpsl
shll
mov
cwtl
push
aas
ret
push
mov
inc
cmp
sbb
fwait
dec
into
rcrb
out
push
mov
push
pushf
jns
inc
outsb
pop
out
adc
sbb
loop
ror
lock
jle
stos
mov
aas
lods
addr16
jp
icebp
addr16
xor
pop
shll
inc
imul
sbb
fldcw
sahf
mov
mov
ret
mov
inc
mov
sub
and
xchg
mov
sti
rorb
in
push
push
mov
mov
mov
push
jns
test
mulb
push
mov
int
nop
xor
add
mov
jl
mov
pop
dec
jno
and
xor
push
ds
push
mov
pop
das
sbb
fisubrs
and
loope
mov
or
dec
add
dec
mov
jge
outsb
aas
mov
stos
imul
adc
cmp
ror
dec
push
je
lahf
testb
lock
hlt
xchg
xchg
hlt
adc
outsl
ffreep
sub
fwait
outsb
lds
jle
inc
fwait
hlt
xchg
arpl
adc
cltd
or
pop
stos
jmp
mov
push
cld
aad
out
mov
cmp
xchg
xchg
cltd
fst
enter
mull
daa
addr16
cs
mov
mov
idivb
subl
pop
movsb
movsl
into
cmp
loopne
pop
and
cmp
add
fisttpll
fimuls
push
in
jmp
or
xchg
mov
xchg
sbb
inc
lods
lea
in
adc
cmp
subl
mov
cmpl
gs
fs
sub
inc
inc
enter
fdivrs
add
gs
jmp
cmpsl
pop
jo
mov
movsb
notl
pop
in
xor
mov
fldl
mov
push
mov
mov
cld
rcrb
insb
or
call
ss
jo
rcr
aaa
inc
ficoms
out
inc
stos
popa
loopne
pop
adcb
add
sub
mov
xchg
mov
pop
ljmp
das
jecxz
js
jmp
cmp
mov
daa
xchg
adc
xor
push
mov
xchg
test
out
xchg
das
add
js
scas
mov
dec
mov
add
out
jl
xlat
aad
int
xchg
push
xor
fnstenv
int3
jns
dec
push
les
test
mov
jmp
sub
call
mov
xchg
xor
and
test
push
fwait
push
scas
mov
mov
xor
in
fstp
std
add
mov
sub
clc
sarl
xchg
cmp
adc
mov
rorb
adc
rcl
sub
mov
mov
adc
ja
mov
xchg
push
inc
mov
stos
mov
and
cmp
mov
mov
jle
sbb
xchg
cmp
pop
dec
mov
jns
fwait
xor
mov
and
sti
mov
out
mov
fcoms
fwait
cld
cli
jae
fstl
sub
sbb
or
int3
xchg
repnz
scas
mov
mov
cmc
movsl
decb
xor
mov
push
xadd
sbbl
push
out
lret
mov
xchg
or
das
push
inc
sbb
sub
add
stos
out
arpl
and
lahf
dec
or
jg
and
cli
sbb
cmpsl
inc
xchg
dec
test
xchg
jno
iret
cs
cltd
leave
xchg
loopne
cmpsb
mov
lods
cmp
clc
mov
test
test
mov
sbb
lret
fisttps
adc
arpl
sub
jae
adc
adc
mov
aaa
aas
imul
push
inc
mov
or
and
sub
das
je
xor
mov
lahf
das
mov
mov
cld
sub
or
xchg
lods
int3
push
fidivl
filds
bound
mulb
test
fwait
sbbl
add
and
sbb
out
cmp
stos
movsb
rcrl
mov
push
leave
mov
xor
cmp
xchg
dec
sub
lea
rcr
ljmp
psubw
in
inc
pop
subl
pop
add
sti
ds
pop
xchg
mov
jb
fwait
pusha
test
add
cwtl
lret
lds
in
mov
gs
test
fsubr
imul
xchg
insl
les
loope
pop
into
clc
mov
xor
xor
inc
mov
push
arpl
xchg
or
loopne
popa
gs
add
in
jno
into
push
loope
xor
hlt
pop
aad
add
addb
mov
insb
rolb
out
push
andb
sub
inc
and
pop
sahf
lcall
addr16
xchg
sbb
lods
push
jnp
jmp
mov
pop
and
daa
call
dec
inc
inc
mov
aad
mov
xlat
cmpsl
icebp
mov
jo
xlat
push
mov
dec
popf
data16
aad
insl
inc
outsl
pushl
xchg
call
dec
jbe
push
pop
repz
aaa
mov
mov
jae
add
std
add
xorl
mov
xor
sbb
rcrl
je
sbb
in
scas
std
cmc
addl
lret
aam
xor
sub
jle
sahf
lods
das
icebp
leave
fdiv
inc
push
je
push
xchg
cs
push
in
mov
clc
lods
mov
push
test
cwtl
sub
fdivrp
lahf
xchg
adc
ret
cmp
or
arpl
mov
icebp
fs
shlb
sub
stos
stc
subl
xchg
jmp
in
jge
dec
stc
or
mov
jecxz
dec
push
les
fcomps
enter
in
dec
adc
xchg
mov
hlt
setno
pop
and
xchg
push
loopne
inc
mov
mov
subl
push
outsl
jne
lret
dec
push
pusha
pop
sub
outsb
pop
enter
cmpsb
xchg
bound
daa
adc
into
inc
xor
jbe
shr
xor
scas
ja
mov
mov
testb
and
pop
jno
mov
add
lahf
sbbl
mov
stc
and
es
test
fstps
push
cmp
lds
and
stc
add
mov
in
fwait
dec
insl
scas
adc
jne
mov
mov
out
adc
push
and
loop
adc
insl
cmpsl
shrb
in
push
pop
mov
xchg
ja
cltd
pusha
subb
loope
add
add
int
lcall
add
mov
push
cmp
insl
mov
fisubl
xor
cltd
cmp
stos
fcmove
inc
aam
enter
mov
leave
push
mov
test
and
fdivrl
sbb
adc
and
mov
fs
lock
dec
mov
leave
das
sub
pusha
insb
lret
arpl
adc
dec
jmp
mov
cmp
subl
push
xchg
xlat
lds
jl
mov
movsl
imul
roll
imul
aad
jb
jno
mov
and
aad
repnz
imul
lock
mov
loopne
or
pushf
pop
jecxz
push
loope
add
sub
stos
pop
gs
addr16
add
lds
xchg
bnd
jmp
ja
pop
stc
dec
test
in
xchg
mov
movsb
fcoms
jge
iret
add
in
sub
decl
movsb
xor
lret
inc
sar
popa
or
push
test
xchg
mov
jg
cmp
add
incl
test
adc
jnp
out
mov
int
mov
fsincos
imul
cmp
push
jg
jae
iret
outsl
inc
mov
xchg
add
cltd
jo
fisubrl
jnp
jns
fstpl
or
or
stos
mov
adc
adc
xor
and
dec
mov
shlb
sbb
inc
sbb
ficompl
push
fcoml
inc
mov
arpl
push
mov
arpl
jne
sub
dec
stos
pop
pusha
out
jmp
jno
cwtl
add
test
aaa
mov
push
mov
add
insl
inc
add
pop
cmp
insb
test
xlat
movhps
mov
rolb
jo
adc
shlb
shlb
adc
cmp
inc
adc
push
inc
repnz
cltd
cli
add
sub
dec
and
popf
pop
rcll
int
adc
aad
cwtl
push
mov
ja
pop
or
jae
push
icebp
pop
loopne
mov
adc
fsubl
jbe
test
mov
inc
mov
jne
xor
pop
hlt
test
imul
fstl
pop
mov
xchg
inc
sarl
repz
xor
add
cmp
adc
inc
push
inc
out
and
mov
dec
xor
pop
jns
subl
push
push
push
and
into
push
and
add
or
mov
adc
cmpsl
cmpsb
cmpb
lock
push
fstl
fnsave
mov
mov
hlt
lods
xorl
jp
push
ret
repnz
sub
xchg
in
mov
andl
lods
jne
clc
cmp
imul
mov
push
mov
jecxz
fldcw
fdivrp
mov
data16
les
paddd
inc
mov
sub
xchg
add
or
call
and
and
sbb
adc
cmp
adc
lret
xor
jle
popf
cs
push
imul
dec
adc
scas
fwait
iret
sub
mov
sbb
sub
push
and
xchg
enter
dec
movsl
cli
aaa
mov
mov
pop
orl
add
cmp
pop
data16
imul
sbb
leave
adc
jo
hlt
loop
adc
fdivrl
push
push
and
idivl
push
adc
aam
in
mov
and
push
cmovl
xchg
mov
and
lret
out
push
push
xor
fs
sub
repnz
fdivrl
cmp
and
out
inc
mov
xchg
nopl
aaa
jb
jmp
fld1
add
icebp
add
jge,pt
or
mull
cltd
cmp
xlat
dec
insb
push
mov
cmp
stc
cmp
and
popf
aad
inc
stc
test
test
push
testl
xchg
jecxz
movsl
outsl
addb
pop
xor
mov
shr
sub
fmull
mov
jp
fmul
leave
mov
ret
in
adc
in
lock
inc
mov
bswap
xor
jnp
movsb
mov
mov
test
xor
daa
and
push
imul
scas
ss
xchg
add
mov
lea
dec
mov
xchg
adc
dec
add
out
movsl
out
pop
mov
push
sub
repnz
sbb
fildll
mov
push
jge
xchg
fcmovne
test
cmpsb
lret
iret
ds
xchg
notl
sub
cmc
insb
popa
xlat
push
sahf
inc
xlat
push
push
jp
shlb
inc
xlat
pop
mov
cmp
enter
mov
add
in
das
mov
loop
sti
divb
imul
dec
mov
insl
push
xchg
dec
aam
addb
mov
leave
pop
adcl
inc
int
and
stc
xchg
jge
xor
fs
mov
mov
mov
int
lea
push
jp
xchg
fdivs
and
and
push
push
adc
dec
cmp
xchg
cmpsl
int
pop
vpunpcklbw
jg
sbb
aam
bound
scas
add
es
inc
xlat
dec
in
movsl
ljmp
mov
cmpsb
and
push
xchg
stos
testb
inc
fisubrl
pop
xor
pop
in
cmpsb
gs
loop
sahf
sub
mov
push
sub
fcompl
and
sub
pushf
sti
cld
roll
cwtl
inc
sub
adc
ds
cld
fwait
stos
cs
pop
sti
loop
xchg
cmp
fsubr
repz
bound
add
sub
popf
xor
or
push
xchg
insl
add
fwait
leave
sbb
js
out
sbb
mov
int
xchg
cmp
mov
add
or
rcrb
mov
jl
std
fidivrs
jmp
movsl
nop
xor
sub
sub
push
xor
lock
iret
nop
test
mov
pop
out
pop
shr
outsb
hlt
jbe
jae
stc
insl
mov
jmp
sub
pop
cli
mov
hlt
loope
or
sbb
sub
inc
inc
mov
dec
sub
data16
popf
inc
sbb
or
xor
repz
dec
or
roll
es
sbb
jnp
push
jp
xor
lret
test
mov
xchg
or
sub
xchg
scas
lds
out
rol
sub
xchg
daa
inc
jl
push
or
dec
dec
push
push
cmp
sbb
cmp
imul
xchg
inc
mov
mov
das
pusha
xor
jecxz
cmp
outsl
cmp
pop
jl
adc
inc
pop
rol
popa
insl
xlat
stos
xchg
aas
sbbl
push
mov
cmp
dec
dec
mov
dec
sub
pop
scas
incl
repz
outsl
es
cld
movsl
mov
outsb
andl
cmp
call
cmovp
jl
mov
decb
add
fs
bound
jg
addr16
mov
pushf
xlat
mov
clc
js
jl
cmpb
cld
stc
cmc
pop
pop
rorb
pop
jae
inc
ret
mov
addr16
xchg
mov
inc
sarb
lret
fcmove
dec
lods
mov
cmp
leave
scas
out
in
pop
pop
pusha
pop
inc
push
aas
test
sbb
pop
adc
daa
fmul
push
pusha
or
xchg
sahf
pusha
cmp
pusha
out
xor
sub
std
dec
ret
xchg
sub
jle
aad
push
jp
std
es
fcomps
std
stc
jecxz
js
push
pop
mov
fwait
lcall
ljmp
inc
insl
xor
imul
shrb
pop
jno
jae
jno
les
cmp
ret
scas
inc
popf
add
inc
out
fldt
mov
jle
cltd
imul
cmp
jns
loop
inc
insb
mov
or
xchg
sbb
sub
dec
jge
addr16
loop
cmpsl
lods
push
push
inc
add
icebp
mov
xchg
mov
push
ss
aad
stc
mov
je
xchg
sub
out
pusha
fistpll
rorl
pop
push
mov
negl
nop
mov
dec
test
xchg
fimuls
cltd
lea
movsl
and
mov
das
sbb
sbb
js
arpl
roll
and
sub
loopne
jae
stc
add
out
stos
fwait
dec
lock
jae
scas
xchg
mov
inc
add
stos
pminsw
xchg
rcr
lret
enter
ljmp
je
sub
xor
cli
aas
lret
xchg
mov
or
cmp
inc
mov
insl
jmp
ds
sarb
in
popf
orl
mov
xor
xor
mov
cmpsl
push
ja
add
cmc
ja
out
insb
fisttpll
sub
aam
movsb
cltd
pusha
insl
jns
sub
xchg
lods
mov
repz
ljmp
and
fimuls
sbb
loop
or
mov
pop
mov
cmp
sbb
jmp
into
dec
aaa
aad
pop
add
lret
jle
jle
xor
iret
rorb
mov
mov
imull
sti
gs
ror
mov
shlb
pusha
sub
add
insb
sub
add
pop
or
xchg
popl
and
mov
addr16
mov
pusha
push
dec
dec
loopne
jb
and
cli
jmp
scas
into
adc
xor
mov
mov
or
adc
mov
aaa
xchg
or
jmp
shll
jnp
loope
xchg
mov
jle
inc
cmpsb
je
or
aad
test
xlat
cmp
lret
and
sbb
pop
rolb
arpl
mov
xlat
insb
xchg
adc
cmp
cmp
jle
shll
sub
jnp
jbe
fsts
jne
mov
fildl
fwait
pop
jns
imul
test
gs
pop
push
push
sbb
fmul
int3
ret
subb
mov
jb
divl
pop
mov
inc
xor
notl
add
mov
push
icebp
pop
stos
repz
pop
pop
xchg
dec
and
adc
cmpsb
or
mov
jae
push
dec
jge
cld
mov
loop
xchg
lcall
loop
xchg
subb
leave
and
xchg
bound
jnp
outsl
and
xorl
jns
mov
adc
adc
mov
adc
push
add
rolb
mov
lahf
sub
cmp
dec
mov
adc
addr16
and
push
in
mov
or
xchg
jno
pop
sar
cmp
outsl
sbb
xor
sub
cmp
ja
out
jmp
jo
pop
movsl
inc
aas
jb
sub
fimull
cltd
pusha
into
rorb
mov
mulb
int3
aam
ljmp
out
adc
pop
xchg
jl
cmc
jp
jg
dec
cmp
ret
cltd
out
gs
outsb
push
push
sbb
jnp
std
insl
jbe
rclb
jle
out
loope
dec
mov
loope
iret
jg
repz
cmp
and
adcb
movsb
negl
repnz
xchg
or
movsl
jmp
movsb
jb
jecxz
pop
scas
outsb
out
fimull
scas
mov
les
jae
mov
dec
mov
iret
and
cmpsl
sbb
fucom
shrl
orb
stos
rolb
sbb
jp
movsb
add
mov
push
sti
aam
dec
dec
enter
push
aas
fdivs
pop
jp
stc
inc
dec
jle
and
push
inc
mov
add
jecxz
flds
pop
pop
int
pusha
jg
inc
sbb
pop
in
ja
stc
pop
popa
dec
sub
adc
jae
stos
je
in
fwait
mov
test
push
ja
xchg
loop
stos
xchg
jecxz
push
cmp
jg
popf
aad
fwait
mov
push
loopne
mov
cs
stos
sbb
call
or
imul
push
int3
sbb
dec
and
xor
scas
adc
cmp
fdivrs
add
in
mov
shll
inc
clc
xchg
sbb
mov
sub
or
pop
mov
aam
sub
fimull
adc
xchg
lret
andl
adc
xor
sbb
inc
cmp
fdivl
mov
jecxz
and
mov
lods
push
mov
inc
xor
stos
lahf
and
pushf
add
pop
outsb
cmp
mov
stos
imul
lock
xchg
aas
jl
adc
out
dec
pop
fs
adc
inc
loope
test
push
inc
mov
stos
and
lahf
sub
push
xchg
push
pop
xchg
mov
sub
cmp
xor
cmc
mov
inc
test
bound
mov
mov
add
cmp
cmp
xlat
aas
imul
nop
shlb
shr
dec
pop
push
mov
inc
scas
cmp
dec
cwtl
adc
add
in
mov
sti
push
adcl
xlat
inc
fisubl
jne
mov
jns
pop
imul
loope
popf
insb
adc
pushf
loopne
cmp
or
or
or
aad
mov
outsb
sub
push
in
mov
int
cmp
sub
or
mov
ds
arpl
data16
roll
aad
jg
sbb
push
or
mov
sbb
and
stos
pop
push
pop
adc
push
dec
xlat
mov
cmp
bound
mov
nop
mov
cmpsb
pop
roll
jge
jp
out
xlat
mov
jb
ss
mov
ljmp
cmp
push
out
jmp
cmpsb
dec
outsl
mov
fs
enter
dec
les
xchg
xchg
push
fcoms
mov
xor
int3
movsb
cmp
pop
arpl
ret
sahf
test
mov
andl
pop
cwtl
adc
lds
mov
mov
ficomps
lock
ds
frstor
cmp
cli
sbb
push
in
lahf
adc
push
pusha
ljmp
sub
mov
jle
aam
adc
mov
movsl
dec
cmc
sbb
std
cltd
and
fnstsw
fisubrs
cmp
shlb
sbb
or
mov
std
pop
lea
lea
aam
test
fnstsw
shll
insb
and
xchg
std
movsl
rcll
arpl
imul
lahf
inc
in
or
call
or
test
mov
add
xchg
inc
or
jns
fistpl
rcrb
incl
call
fwait
clc
adc
fwait
pop
mov
into
adc
icebp
jno
repz
popf
test
sub
ja
je
sub
inc
and
in
push
call
lds
sbb
jl
arpl
neg
sbb
sub
shrb
andl
mov
xchg
in
and
lock
pop
adc
addr16
ljmp
or
push
jo
dec
push
lea
fldcw
push
loope
add
stos
sahf
and
adc
jl
cltd
xor
and
sub
sub
dec
dec
inc
sbb
cmpsb
pop
mov
dec
mov
mov
mov
adc
ret
xchg
mov
xlat
js
test
sbbb
je
movsl
std
aaa
mov
fildll
push
cltd
push
and
add
and
inc
mov
cmpsl
xchg
fdivr
pop
push
outsb
arpl
das
xor
out
repz
mov
mov
mov
das
xchg
adc
adc
add
addr16
xchg
sub
pop
pop
mov
test
cli
clc
xor
push
in
sahf
and
cltd
cmp
insb
ds
push
loopne
or
push
sbb
mov
insb
pop
repz
mov
cmp
ret
das
mov
call
xor
xchg
sbb
sub
sti
adcl
movsb
adc
or
stos
stos
mov
dec
adc
je
add
dec
adc
fmull
shl
or
hlt
push
xchg
inc
jo
xchg
sar
std
sub
cmc
mov
push
inc
xchg
loope
fisubrl
scas
cwtl
lahf
push
adc
sub
dec
dec
rcrb
mov
add
mov
je
fcomps
getsec
fcmovne
dec
cltd
into
jns
divl
fs
cs
loopne
sub
insb
inc
rcrl
push
fmul
inc
ds
jmp
cmp
repnz
aas
mov
mov
fsubr
imul
xor
cwtl
ljmp
movsb
mov
icebp
pop
pop
push
mov
pusha
cmpsb
cmpsb
sarl
faddl
adc
pushf
xchg
orb
pushf
outsl
xchg
fiaddl
xchg
cmp
sbb
push
sbb
jo
stos
cmp
aaa
dec
cmc
cmp
xor
ror
push
xlat
push
adc
andb
es
mov
lea
arpl
pop
and
mov
shlb
out
cmp
jl
sub
mov
jge
repnz
and
push
popa
jle
sub
cld
push
inc
jbe
xchg
fcompl
stos
sbb
xchg
mov
xchg
pop
dec
lods
out
repz
lds
jnp
vprotb
pop
fimuls
cmp
push
cmp
xchg
stos
jo
cmp
jae
xchg
stos
es
lahf
add
adc
cmpl
rcrl
pop
pop
sbb
ds
ljmp
in
jg
pop
sbb
or
mov
fildl
jp
inc
sbb
aas
add
sub
inc
push
fisttpl
pop
loope
repnz
push
jg
inc
jo
cmp
xchg
inc
les
sbb
sub
mov
mov
insl
jmp
scas
mov
sbb
push
sarl
sbb
sbb
jbe
dec
ret
sbb
hlt
sub
ret
mov
cmp
aam
mov
jge
js
mov
das
in
push
lock
add
adc
out
les
dec
popa
ds
aas
or
adc
test
pop
add
mov
adc
jp
repnz
or
add
int3
add
les
adc
dec
jmp
testb
aam
arpl
imull
adc
jae
mov
cmp
cmp
scas
jnp
cmc
dec
adc
into
push
ror
cltd
xchg
sbbb
out
dec
scas
dec
mov
test
out
pop
xchg
and
adc
insl
pop
or
sub
mov
jg
outsl
add
jg
pushf
loopne
imul
in
popa
ret
aaa
adc
leave
fdivl
dec
in
jne
push
jl
out
push
in
mov
cmc
imul
inc
in
gs
inc
flds
pop
cmpsb
cwtl
data16
or
and
je
rclb
arpl
cs
mov
xchg
in
xchg
push
leave
dec
divb
jecxz
hlt
mov
xchg
sbb
std
cmp
mov
xchg
adc
int3
fwait
xchg
icebp
into
mov
jnp
pop
movb
in
push
xor
push
test
or
add
dec
out
into
xchg
cmpsb
int3
stc
das
movsb
add
fsubrp
idivl
cmp
add
xorl
sarb
push
adc
arpl
sbb
pop
cmp
decb
or
mov
cltd
or
cmp
xor
insb
and
cmc
fdivrs
bound
pop
out
leave
cmc
dec
mov
data16
rorl
sub
dec
pusha
data16
mov
xchg
les
je
cmc
or
daa
push
pop
in
inc
lock
jecxz
adc
leave
pop
test
in
lahf
pushf
dec
insb
cmp
int3
es
insb
or
aad
mov
rclb
hlt
xchg
mov
out
stc
xchg
cltd
clc
ret
mov
push
inc
sbb
mov
fstpt
cmp
test
xor
pop
rcrl
loope
or
dec
idiv
lea
mov
sub
sbb
xchg
cmp
pushf
mov
ficoml
xor
push
add
xchg
popf
scas
stos
lds
outsl
fidivs
jecxz
fistl
fnstsw
mov
push
sbb
cmp
clc
dec
clc
sbb
jg
lcall
lahf
mov
icebp
mov
dec
out
or
shll
test
adc
mov
lods
push
stc
lock
mov
cmp
scas
sub
push
lret
das
popa
mov
add
dec
pop
or
cmpsl
fldenv
pop
cmp
sbb
jg
aas
shr
pop
in
push
add
gs
pop
popa
mov
ljmp
push
mov
jb
sub
fs
sub
pop
pop
ret
roll
ljmp
sub
jb
addb
hlt
push
outsb
lahf
pusha
ja
jge
push
cmp
stos
and
pop
scas
adc
jge
xchg
fistl
fiaddl
popf
xchg
mov
xchg
repnz
repnz
cmpl
gs
sbb
lods
inc
dec
add
mov
movsb
pushf
mov
enter
xchg
addl
das
cmp
mov
adc
les
cli
leave
mov
cli
lock
adc
scas
dec
dec
cmp
shll
jns
pop
cmc
mov
enter
xchg
inc
push
notl
loope
icebp
and
lods
enter
lea
sbb
mov
jns
es
push
dec
xor
leave
pop
adc
inc
outsb
sub
mov
ret
push
mov
xor
ja
mov
movsl
bound
xchg
cmp
mov
std
mov
inc
ja
dec
push
fsub
movsl
rorl
movsl
in
mov
push
dec
and
ljmp
ficoms
adc
xor
or
cmc
dec
jo
out
sub
sub
push
subl
sti
mov
adc
pop
pop
mov
cmp
rcll
lock
mov
or
or
sub
nop
mov
out
nop
mov
mov
jno
lcall
mov
es
mov
sub
popf
inc
pop
aas
sbb
jmp
aam
popa
lods
jge
add
pushf
adc
mov
sahf
movsl
jnp
imul
mov
lahf
mov
jae
push
aam
sbbb
loopne
mov
sub
mov
mov
insl
sbb
sbb
outsl
mov
push
lea
fiaddl
sbb
xchg
fmuls
fdivr
adc
sub
fisubrs
dec
pop
enter
push
andb
xchg
mov
fsub
fwait
inc
filds
out
sub
or
mov
jb
shrl
jne
mov
sarl
pusha
shrb
sbb
lock
into
push
pop
add
xchg
fldcw
mov
dec
dec
stos
das
mov
ficoms
jge
repz
mov
push
outsl
mov
xchg
fmull
mov
in
adc
test
jae
lock
iret
push
insl
jnp
int
and
movsl
repz
cmpsl
xchg
sub
pop
inc
and
sbb
fisubl
adc
ljmp
outsl
clc
pop
xor
aam
jo
xchg
gs
jl
or
xchg
decl
xchg
mov
pushf
pushl
jge
xchg
aam
xchg
sub
mov
mov
cmp
sbb
push
xchg
out
bound
jnp
xor
cmp
out
sbb
jge
mov
add
jnp
sbb
xor
lds
jbe
and
call
or
adc
shlb
aam
pop
cmpsb
aaa
xorb
stos
test
inc
cmc
addl
test
into
js
add
int3
mov
add
adc
pushf
sub
cmpsb
rcl
jle
and
cmpsl
add
into
rcr
cmp
and
inc
aas
adc
test
sti
pop
xchg
int3
jae
lea
fwait
add
push
lret
push
insl
mov
gs
cmpsb
rol
jg
xor
sbb
movsb
mov
inc
in
pop
pop
jne
sbb
les
xor
ja
mov
repz
lcall
repnz
inc
pusha
repnz
ss
cmp
fisttps
pushl
ja
adc
add
out
xchg
ss
fidivs
push
and
push
shrb
fildl
fwait
sub
cmpsb
dec
mov
mov
sub
or
dec
paddusw
scas
mov
gs
jo
or
pop
test
jmp
mov
push
mov
adc
mov
and
and
mov
xor
adc
insb
mov
pop
add
loop
pop
lds
and
mov
enter
push
jl
lods
pop
mov
sbb
in
cmp
jb
test
pop
fs
out
arpl
pop
ss
enter
jb
xor
push
push
jp
movsl
fisubrl
xchg
push
dec
out
ret
mov
push
out
test
outsl
sbbl
or
dec
cmc
lds
test
stos
inc
pop
add
jge
push
dec
mov
fsubs
inc
mov
andb
add
aad
sbb
addr16
fisttpll
cmp
dec
cmp
std
orl
pusha
test
xor
das
cltd
movsb
ficompl
xor
popf
shrl
dec
mov
cld
push
notb
jl
cmpl
daa
aad
sarb
push
std
std
and
jecxz
pop
or
cmpsb
inc
adcb
sub
or
pushf
or
idivl
loopne
sbb
sbb
jnp
inc
and
mov
dec
packsswb
repnz
int3
je
fstl
movsl
pop
into
cmp
dec
pop
lahf
pop
inc
or
mov
into
lea
inc
rclb
xchg
xchg
jns
xor
ljmp
scas
loop
push
lods
xor
std
xchg
xor
adcb
add
and
sbbl
mov
test
cmp
and
shrb
shl
push
lret
dec
enter
inc
les
scas
jle
jl
sbb
std
in
inc
decl
jmp
insb
test
mov
les
or
repnz
shl
aam
adc
enter
sar
jnp
sub
sub
jmp
loopne
loopne
sub
ja
fcmovu
pop
clc
mov
imul
fadds
lahf
dec
cmc
push
mov
out
inc
mov
add
and
nop
push
lea
mov
xchg
mov
push
push
inc
addr16
add
dec
es
pusha
shrl
mov
jmp
cmp
outsl
in
xchg
inc
pop
pusha
adc
sbb
xchg
mov
mov
push
dec
dec
xchg
adc
add
inc
push
push
xchg
test
ss
fbld
lret
push
sub
push
mov
inc
decb
adc
leave
push
cmp
in
sbb
scas
test
mov
stos
lret
xorl
scas
xchg
sbb
in
mov
dec
cmc
jmp
xchg
xchg
inc
into
sub
cvttps2pi
push
in
push
int
dec
push
bound
lods
out
imul
das
test
push
mov
mov
ljmp
mov
in
icebp
xchg
mov
popa
push
jl
add
mov
mov
adc
jecxz
lea
and
ja
fistps
mov
adc
push
mov
and
loop
add
das
mov
add
leave
dec
das
test
jo
xchg
sub
fucomp
sti
bound
push
stos
xchg
ljmp
add
lret
mov
hlt
xchg
sub
mull
inc
not
jge
xchg
and
test
xchg
shr
pop
imul
int3
rcrb
xor
imul
lods
js
test
into
mov
es
fisttpll
lahf
mov
and
and
inc
xor
dec
nop
icebp
sub
pop
jle
addr16
xor
mov
sbb
es
push
inc
mov
cmpsl
dec
subb
jmp
imul
mov
add
movsb
add
jl
cltd
and
dec
lea
xchg
loopne
mov
leave
inc
and
test
orl
cld
dec
daa
mov
mov
dec
dec
xchg
sbb
xor
or
push
adc
xor
ret
dec
cmpsb
outsl
adc
imul
rcrb
lret
mov
xchg
pop
data16
fdiv
popf
pop
pop
aaa
out
jbe
testl
ret
cmp
fucomi
mov
mov
cmpsb
ljmp
xchg
inc
hlt
adcl
add
insl
sti
xor
or
cmp
or
jmp
xchg
mov
inc
scas
lret
iret
push
sbb
pop
mov
loopne
push
add
loope
xchg
js
sahf
dec
inc
jmp
jo
lock
cltd
push
mov
inc
dec
add
outsb
test
aad
out
insb
mov
andb
lret
fisubrs
mov
and
jle
push
push
cmp
push
jno
or
enter
and
dec
and
jg
dec
jle
ds
mov
loopne
lahf
stos
pop
xor
mov
lret
movsl
stos
std
adc
lods
pop
jnp
push
js
xchg
lock
sarl
ds
mov
ret
jnp
insb
cld
sbb
and
or
pop
mov
insb
sbb
ds
push
or
test
and
in
jae
fisttps
lods
icebp
jl
inc
aas
scas
xchg
xor
cmpsl
jb
loopne
in
andl
sub
int3
ret
aad
hlt
leave
xor
xchg
pusha
mov
iret
jl
jo
xlat
jnp
xor
inc
icebp
in
inc
jl
sub
lods
imul
jbe
ss
ror
sub
popf
rorl
rolb
jmp
push
push
jp
in
mov
inc
dec
bound
pop
inc
movsl
and
js
dec
or
xor
mov
or
and
repnz
sahf
inc
jecxz
enter
test
outsb
inc
inc
cmpsb
out
movsb
push
cmp
out
xor
dec
movsl
in
jbe
mov
push
push
or
cltd
push
or
and
mull
jb
xchg
mov
pusha
stc
jae
xchg
fstl
pop
xchg
jp,pt
loopne
outsb
out
sbb
xor
fistl
jmp
sub
cmpsl
xlat
inc
sub
sarl
lea
rcll
aam
cmp
dec
mov
loope
stos
cmp
dec
xchg
int
cmc
test
sub
inc
sbb
sub
cmp
arpl
scas
mov
cwtl
mov
addl
cmc
aaa
es
dec
adc
and
add
test
aad
jge
jg
sub
test
xor
cmc
aaa
inc
sbb
outsb
fidivrs
and
fwait
cmp
sub
inc
mov
lods
sub
pop
jae
ds
push
inc
mov
inc
mov
sub
mov
out
js
inc
dec
clc
sti
shlb
or
mov
xchg
fildl
mov
js
std
xchg
shr
mov
nop
mov
repnz
mov
es
or
stc
clc
into
dec
push
and
pop
jbe
sub
data16
inc
dec
jo
inc
and
jg
test
hlt
and
rolb
addr16
add
sbb
lock
jne
fs
jno
into
jmp
adc
fsubl
call
mov
cwtl
out
jae
sbb
or
jp
stos
cmpsl
mov
lock
dec
imul
sbb
inc
shll
push
xor
mov
pushf
ss
push
sbb
inc
or
push
xor
xor
imul
or
pop
subl
mov
dec
adc
popf
test
dec
mov
inc
add
movsl
cmp
xchg
lret
test
aad
movsl
jne
push
test
enter
add
ja
jno
ljmp
test
rorb
fst
xchg
cmp
xchg
and
fs
cs
adc
aam
xor
popf
xchg
mov
test
movsl
push
lds
or
incb
inc
fst
pop
xor
and
cmp
dec
pusha
clc
test
fistpll
jbe
cmp
push
scas
fcom
add
jp
ds
dec
gs
cmp
sbb
lret
push
into
std
shll
sub
or
push
jmp
pop
lods
scas
daa
in
push
mov
sub
adcl
leave
xchg
inc
jecxz
xor
xchg
call
cmc
sahf
cmc
mov
in
xor
adc
jg
stos
mov
add
rcll
xchg
dec
xlat
jmp
sub
popf
push
sbb
in
lods
mov
sub
adc
mov
jo
sbb
sub
insb
sbb
scas
jle
pop
sbb
js
mov
in
xchg
push
push
dec
xchg
popa
sbb
inc
loopne
mov
push
or
adcl
dec
pop
push
repz
outsb
push
out
pop
adc
fmuls
mov
fidivl
stos
jbe
ffree
push
repnz
lret
cltd
sti
mov
xchg
jbe
push
push
cmp
jg
roll
js
aad
stc
in
inc
dec
cmp
sbb
test
push
ljmp
in
jns
clc
gs
fs
dec
lock
push
cwtl
les
xchg
jmp
jno
push
les
mov
adc
mov
sub
mov
enter
clc
sub
test
mov
inc
out
mov
dec
mov
lods
in
out
mov
push
mov
pop
jle
in
mov
pop
fwait
aad
fcoml
aad
mov
inc
adc
fsubl
ret
repz
add
dec
mov
aas
push
je
mov
jno
mov
ljmp
fdivp
dec
pop
push
jns
rorl
add
insb
adc
outsb
mov
std
push
ffree
sti
or
loop
cmp
gs
cwtl
in
cwtl
dec
incb
pop
pop
mov
sar
pusha
jo
or
mov
lahf
outsl
fldt
pop
add
add
inc
mov
mov
and
ret
ja
mov
mov
scas
loope
push
adc
sub
rclb
cmc
pop
data16
cltd
subb
jno,pt
fldenv
inc
faddl
and
cltd
mov
inc
andl
fdiv
pop
icebp
cmp
mov
jae
aam
jae
sub
cli
push
sub
xchg
pop
ss
mov
lock
dec
je
mov
mov
xchg
cltd
push
aaa
jg
fcmovnu
andb
insl
test
ret
lret
fidivs
jecxz
enter
xchg
movsb
lahf
pusha
rcr
xchg
push
cli
lock
ret
loop
rorb
stc
in
jne
sbb
fcomps
jge
mov
inc
insb
xchg
dec
jo
mov
inc
xchg
fldl
mov
and
sub
movsb
xchg
mov
lret
cmpsl
sub
in
movsl
jnp
cwtl
test
jl
cmpsb
cmp
sub
xchg
stc
mov
fdivrl
cmp
test
cld
imul
jl
pop
jno
xor
cwtl
outsb
lods
jae
imul
das
rorl
stc
insl
addr16
mov
arpl
shr
imul
jo
push
ljmp
and
daa
mov
add
loope
imul
scas
push
xchg
jae
ficomps
outsb
inc
or
jb
xor
pop
sub
jp
out
jns
outsl
iret
leave
mov
mov
bound
jecxz
lret
pop
loop
lea
ljmp
xor
out
outsl
and
cmpsb
cmp
enter
sub
mov
cmp
inc
xor
pop
lret
and
sub
xchg
lea
adc
sub
pop
jg
lds
test
shlb
cmc
out
cmc
cs
mov
push
daa
ret
mov
cli
inc
pop
test
add
fwait
and
sahf
cmpsl
out
loope
and
shrb
popa
sahf
cmc
js,pt
ret
pop
xchg
cmp
cwtl
xor
mov
inc
xchg
pop
iret
enter
mov
call
mov
push
movsl
pop
cmp
repz
in
jne
repnz
mov
mov
or
loop
cmp
push
cmp
mov
jo
dec
loop
popa
andl
sbb
xor
lcall
lock
std
ja
insb
std
fsubr
xchg
iret
push
icebp
inc
addr16
mov
out
mov
loopne
fnsave
pop
push
cmpsb
fisubl
lds
mov
or
stos
ss
outsb
cmp
insl
dec
rcll
movb
xchg
ds
enter
inc
dec
adc
cmp
rorb
jmp
ljmp
stos
pusha
add
lcall
mov
in
out
pop
test
pusha
and
scas
mov
stc
xchg
repz
gs
cmp
inc
outsb
lahf
mov
push
jl
pushf
loope
cmp
jno
fdivl
in
adc
mov
iret
mov
leave
orb
std
test
jns
in
lods
loopne
push
push
add
xor
and
fisttps
push
dec
and
fwait
sahf
out
repnz
mov
fwait
xor
push
or
mov
jl
scas
into
subl
sub
and
xchg
push
mov
ja
aaa
jecxz
mov
push
fwait
inc
sbb
loop
mov
sub
nop
sbb
inc
in
mov
add
push
rolb
cmp
sahf
fisubrl
sub
loopew,pt
pop
dec
loope
xchg
inc
loope
ret
repz
sub
cmp
insb
sub
jnp
lods
std
ljmp
push
dec
and
xor
jmp
fdiv
mov
xchg
imul
mov
mov
push
data16
arpl
xchg
fwait
leave
adc
repnz
cld
xor
stc
cmp
xor
sti
stos
fmuls
in
sub
movsb
or
addl
sbb
sbb
pop
mov
push
mov
insl
dec
loopne
mov
inc
lcall
mov
push
mov
inc
sbb
jge
lret
mov
enter
nop
mov
shll
mov
lods
std
adc
dec
jmp
pop
mov
pusha
mov
std
jnp
pop
sarl
aas
je
out
jg
je
push
cld
mov
push
inc
ja
pop
mov
loope
insl
jecxz
and
jb
je
js
or
fists
pop
mov
adc
ja
mov
or
xchg
pusha
jb
jecxz
cli
lret
mov
in
or
adc
andl
push
sbb
aaa
fldl
call
js
ljmp
pop
mov
sub
jno
popf
push
and
or
ljmp
mov
or
or
xor
stos
and
xlat
stos
out
sub
push
aad
test
push
fcompl
xchg
pop
adc
or
or
adc
dec
pop
mov
ret
lahf
scas
inc
ret
dec
mov
mov
or
movsl
bound
add
imul
mov
enter
fcmovbe
int
lds
iret
push
mov
xor
popf
aad
outsl
lods
xor
xor
cmp
rcrl
and
loop
aaa
adc
orl
lcall
adc
lahf
pop
add
inc
adc
outsl
aas
pop
push
mov
fmul
adc
pusha
jb
nop
mov
js
cmp
in
ja
sbb
and
incl
iret
and
dec
jns
rep
and
ds
stc
aas
sti
mov
aam
test
lods
inc
ljmp
repz
jae
test
adc
cmp
jns
cmp
add
popa
dec
je
cmpb
add
mov
xor
xor
in
and
std
ds
aaa
jb
repz
pop
das
inc
jle
jg
lds
imul
loopne
mov
xchg
xchg
xor
push
mov
or
hlt
push
shrl
adc
xor
xchg
adc
in
lea
xor
clc
stc
sbb
rorb
add
pop
ljmp
adc
divl
int
rcrl
test
pop
xor
cmp
add
pop
test
pop
push
dec
mov
shll
sub
push
or
pop
mov
fcmove
ficoml
push
fimull
inc
adc
cmc
pop
dec
cs
xor
pop
cmp
mov
ret
push
je
cwtl
mov
inc
repnz
xchg
mov
jne
or
movsb
inc
mov
jge
xchg
cmpsl
es
and
lret
pushf
adc
push
mov
cmpsb
mov
icebp
out
cmpsb
push
jo
outsl
popf
mov
in
jo
pop
xchg
fstps
mov
movhps
adc
je
xchg
in
out
test
xor
cmp
cli
pop
sbb
push
int
push
mov
push
fxch
test
ss
jmp
sub
pop
mov
in
je
sahf
xchg
pop
cs
mov
mov
mov
adc
sub
addr16
mov
or
mov
je
enter
pop
loope
adc
xchg
imul
icebp
sub
ss
mov
out
leave
and
cmc
insl
cmp
mov
mov
push
in
in
and
sbb
jo
scas
inc
icebp
cmovge
cmp
mov
addl
pop
movsb
pop
test
xchg
rol
aas
pop
lret
sarb
popf
enter
jae
fcom
pop
xor
rcrb
cmc
imul
ret
sarl
add
cmp
mov
aam
xlat
push
rol
jae
or
and
mov
push
inc
out
adc
rcr
insb
cmp
jno
push
xchg
adc
adc
cltd
push
repnz
mov
fnsave
movsl
ror
fildl
mov
pop
mov
lock
mov
cmp
push
sti
movsb
mov
xor
fidivrs
in
in
xor
add
fadds
cs
gs
dec
aad
jmp
mov
sbb
pusha
mov
hlt
movsb
mov
scas
in
sarb
or
fidivrs
jp
cmpsb
ret
inc
rorl
sbb
mov
pop
lret
aas
movsl
jnp
icebp
mov
cltd
jecxz
push
int
push
outsb
sbb
cmp
xchg
mov
sub
sbb
inc
add
imul
fsub
dec
mov
shr
jle
test
ss
xor
cmc
roll
sbb
pop
xchg
stos
inc
repnz
ficomps
repz
jno
cld
fcmove
jo
lock
stos
ret
pop
cmpsb
mov
out
jo
dec
arpl
arpl
push
or
cmovle
icebp
dec
dec
push
ret
mov
call
mov
insb
or
sub
ja
fwait
dec
enter
fsubrl
xchg
mov
dec
push
imul
pop
jg
imul
xlat
mov
gs
or
hlt
shll
outsl
in
mov
cmp
aad
push
loop
cmpsb
test
sahf
aad
dec
aam
insl
mov
xchg
push
inc
movsl
fcmovne
mov
clc
addr16
stos
xchg
inc
fadds
mov
scas
test
stc
into
adc
or
or
and
dec
shrl
adc
stc
mov
fs
pop
test
dec
mov
mov
cmpps
adc
lods
les
pop
inc
mov
jge
in
mov
push
xor
pop
or
dec
inc
lods
xchg
enter
mov
jne
mov
mov
pop
movsl
dec
and
in
sbb
cmpsb
push
icebp
scas
scas
pop
add
push
cmp
pop
adc
jl
lea
push
lea
sbb
cmp
mov
pop
pop
out
leave
jge
mov
mov
jmp
in
data16
cmpsb
jnp
scas
push
mov
or
sbb
sbb
mov
stos
fs
and
fs
mov
adc
xchg
lret
mov
sbb
scas
inc
cmp
js
dec
adc
add
loop
jge
pop
testb
fmuls
xchg
pusha
cltd
mov
sub
pop
mov
divl
lods
addr16
adc
or
scas
add
add
dec
data16
mov
rcrb
dec
inc
adc
ret
inc
xchg
or
test
fbld
aas
jne
sub
mov
fdivs
out
imul
cmpsl
xchg
out
clc
push
fidivl
mov
add
rorl
test
aaa
dec
ret
std
insl
mov
xchg
outsb
jbe
lds
mov
subb
pop
in
sbb
in
enter
jp
aas
or
jp
lods
in
cmpsb
or
xchg
mov
pop
aas
cmpsl
jl
sub
or
pushf
mov
mov
mov
or
mov
ret
xor
ss
pop
jae
insl
add
daa
or
outsb
xchg
sbb
das
in
or
rcr
push
loope
lods
pop
nop
jae
pop
int3
testl
pop
addr16
adc
imul
jbe
jbe
test
ja
leave
push
xor
pop
inc
push
out
gs
int
mov
dec
sbb
mov
bound
outsb
mov
adc
jl
out
jbe
mov
rcrb
gs
jno
test
inc
jo
dec
mov
mov
mov
mov
shlb
jle
xorb
mov
loope
sti
inc
repnz
cmp
mov
inc
loopne
roll
je
inc
mov
aas
mov
lock
sub
loop
lret
stos
stc
clc
sub
imul
cmpsb
mov
xor
jne
je
mov
lret
sbb
test
out
add
cmpb
mov
jns
loop
push
pushf
iret
addr16
push
push
dec
xchg
shrl
cmpsb
mov
lock
add
mov
dec
mov
pop
pop
rolb
and
inc
push
ja
ds
ds
push
jno
in
test
sbb
dec
inc
xchg
lahf
xorl
sbb
bound
xor
push
push
movsb
repnz
arpl
pop
rcrl
outsb
dec
inc
jo
cmpsl
test
iret
dec
inc
mov
mov
ret
jmp
or
cmpsb
add
cmpsb
loope,pt
leave
cld
inc
mov
lcall
add
pop
xchg
out
pop
pushf
cmp
push
ljmp
testl
std
pop
mov
test
sub
pop
lret
test
cmpsb
cmpsl
adc
adc
lahf
ret
xchg
ja
xchg
inc
mov
sahf
cmp
test
adc
scas
sbb
jg
mov
push
int3
cwtl
push
mov
mov
out
push
pusha
mov
addr16
lahf
mov
pusha
jnp
xchg
imull
push
cmp
nop
out
mov
sahf
ljmp
inc
push
or
cmp
sbb
scas
movsb
loope
sub
mov
jae
rolb
subb
fidivrl
insl
int3
push
or
add
cmpsb
dec
cli
sub
and
jg
repz
iret
into
or
sti
hlt
scas
shlb
outsl
dec
fists
std
sub
cmp
imul
popf
ss
sti
movsb
mov
loopne
and
rol
nop
test
or
mov
mov
fs
add
clc
sbb
adc
cmpl
dec
push
mov
dec
mov
js
jo
jecxz
sbb
dec
sub
wbinvd
pop
xor
subl
addb
sub
test
xchg
mov
adc
jl
lock
xchg
fcompl
dec
push
pop
in
xchg
sarl
jl
adc
pop
jmp
insl
push
adc
sahf
sbb
dec
and
cmp
out
xor
outsl
orb
mov
fdivl
repnz
add
lret
test
leave
sbb
sub
lds
push
movl
push
mov
test
lcall
push
xchg
sub
add
aas
idivl
xchg
icebp
aaa
jns
mov
arpl
cmp
or
test
sub
aad
and
sbbb
outsb
sti
pop
fidivrs
mov
mov
in
or
adc
pop
ss
dec
pop
ja
mov
add
cmp
sti
push
pop
push
xchg
cmpsb
push
mov
je
ret
and
aad
push
loop
cmpsb
ja
adc
jl
pop
and
cmpsl
push
movsb
cltd
in
jg
jl
hlt
cmp
cmp
adc
mov
mov
dec
test
imul
cmpsl
jle
out
and
mov
xor
out
and
pop
push
push
xchg
push
add
repnz
jg
mov
mov
sub
cwtl
icebp
insb
xchg
cmpsb
xchg
or
mov
cmovnp
lahf
xchg
mov
mov
movsb
and
sbb
mov
aaa
fs
ret
stos
sub
loop
mov
or
adc
lret
mov
xlat
mov
testl
lret
int3
dec
inc
cmc
inc
movb
mov
jge
test
mov
fwait
mov
push
inc
sub
xchg
mov
jne
sti
mov
stos
mov
mov
inc
jo,pn
fnsave
push
mov
cmp
sti
or
outsb
pop
lret
insb
mov
negl
sub
fs
jno
outsb
inc
mov
fs
orl
int
cmp
lret
push
insl
sbb
adc
add
loope
pop
add
lret
rorb
pop
jo
mov
push
cld
adc
xor
pop
dec
insb
lods
lods
icebp
cmp
xchg
push
cwtl
fists
lods
push
fdivrs
jns
test
adc
cmpb
or
mov
mov
inc
lds
mov
stos
out
sbb
xor
pop
push
lcall
lret
cltd
dec
rcl
loop
mov
stos
lret
mov
les
fdivrs
mov
sbb
cmp
push
fisttps
jmp
sub
cmpsb
adc
stc
daa
and
jno
roll
aam
fnstenv
cmp
cs
sub
nop
or
push
fcompl
mov
stos
and
xchg
lock
or
loop
cmpsb
adc
iret
mov
push
lret
in
test
daa
inc
mov
dec
stos
insb
sbb
mov
int3
lods
mov
sbb
shlb
lahf
xor
adc
popa
aam
iret
xchg
les
jae
loope
lcall
sbb
cmp
ljmp
lods
xchg
ja
in
stc
mov
cli
mov
ds
push
rclb
shrl
insl
bound
sub
out
xor
sub
push
mov
cwtl
push
adc
cli
sarl
and
dec
sbbb
out
xor
fsubrs
das
stos
adc
sub
pop
cwtd
arpl
out
push
or
jo
insb
push
bound
adc
mov
sub
push
mov
out
add
int3
jmp
loop
push
sub
movsb
fwait
imull
in
sub
pop
push
subl
sub
icebp
pop
lcall
cli
xchg
loopne
movsb
push
add
and
iret
imul
mov
fisttpl
sbb
mov
inc
and
mov
cmc
ret
cwtl
jecxz
adc
out
es
mov
xchg
cmpsb
cmp
out
cmp
add
sub
fcom
lock
push
es
shr
mov
lahf
adcl
shrl
test
int
jns
aam
push
add
mov
and
add
scas
inc
mov
sarl
cmp
das
loop
add
xlat
push
fdivr
jnp
pop
sbb
das
xchg
inc
cmc
sub
das
outsl
into
dec
adc
sub
lea
ljmp
push
xchg
fadds
mov
popa
inc
adcb
enter
sub
sub
mov
mov
shl
imul
cltd
jae
out
in
int
sub
pop
mov
adc
add
mov
sub
or
and
mov
sbb
push
sti
mov
cld
inc
int3
and
sbbb
xor
inc
fwait
adc
mov
lcall
xlat
sti
movsl
loopne
in
xchg
xchg
insb
mov
cmp
push
sub
and
push
scas
adc
out
test
and
push
push
xor
push
xlat
rcrl
xor
movsb
test
out
sahf
in
adcl
push
and
and
pop
or
mov
mov
sbbl
push
pop
mov
into
ljmp
jns
int3
ret
sub
or
add
cmp
push
in
inc
testl
fidivrs
je
add
push
mov
ret
inc
in
sbb
sti
aad
mov
pop
cmp
xor
xchg
push
or
mov
adc
push
lds
dec
sbb
push
or
in
fidivrs
nop
mov
lock
pop
adc
sub
mov
fwait
sub
gs
add
div
loope
or
insl
aaa
das
lahf
repnz
add
mov
and
movsb
js
icebp
add
or
push
sahf
pop
push
xor
cwtl
pop
pop
shll
ret
loopne
sub
mov
xchg
dec
loopne
xlat
pop
fs
ret
adc
cmp
mov
mov
inc
ret
outsb
stos
inc
push
xor
idivl
mov
xor
out
icebp
jmp
and
adc
cmc
inc
dec
pop
xchg
lods
mov
sub
pushf
add
add
outsb
sti
stc
add
idivl
or
pushf
mov
aaa
shrl
and
sbb
jecxz
ljmp
movsl
ss
sbb
xor
sbb
xor
jb
cmpsl
push
inc
xchg
in
add
xor
fwait
mov
fmuls
cmc
lods
lretw
movsl
jo
popa
outsb
nop
in
dec
jno
xchg
inc
mov
cmpsl
xchg
in
cmp
cmp
or
pop
sub
psrad
mov
xor
lods
push
and
xchg
pop
mov
loopne
lcall
cmp
lahf
mov
pop
adc
cmp
mov
shl
mov
ljmp
pusha
outsl
jecxz
lret
orb
fdivrl
mov
ljmp
and
shl
xlat
push
ds
xor
adc
pop
out
fists
xor
jecxz
pop
mov
inc
cmc
and
fwait
jb
jno
jno
repz
imul
fwait
mov
jecxz
lret
es
add
popa
pop
sbb
stos
push
pop
and
fs
sti
icebp
jne
scas
les
sti
add
inc
into
sub
dec
stc
pop
sub
dec
mov
js
cmp
enter
sub
lahf
xchg
insb
mov
jne
popa
je
iret
shll
fwait
add
xchg
mov
mov
add
mov
dec
push
jmp
fstpt
sbb
mov
xor
rol
mov
mov
outsb
sub
xchg
ret
leave
addb
pop
nop
sub
pop
pop
inc
enter
add
xlat
mov
xchg
call
pop
xchg
stc
scas
push
dec
repnz
cld
jb
pop
mov
sbb
adc
outsl
cmp
in
fisttps
insl
inc
mov
bound
psllw
fcmovne
sbb
ja
sub
out
cmpsb
enter
mov
ljmp
pop
fidivrs
dec
sub
sbb
jecxz
xlat
lret
pop
push
ljmp
ret
inc
inc
icebp
outsl
inc
sbb
dec
int3
cltd
inc
pushf
sub
inc
dec
call
xchg
push
popf
sub
pop
repz
subb
pop
sbb
dec
call
bswap
sub
mov
or
repz
xchg
pushf
xor
pushf
fwait
inc
pop
jg
mov
or
add
mov
pop
or
cmp
aas
pop
rcrl
and
jnp
inc
subb
xchg
and
mov
xchg
and
push
xchg
neg
xchg
outsl
test
das
sbb
adc
clc
lret
or
mov
shll
xor
insb
frstor
popf
push
rorb
jge
pop
mov
add
scas
ds
mov
movsb
imul
ficompl
push
mov
addr16
jecxz
sbb
aad
sub
adc
pusha
pop
repnz
ss
jae
inc
into
int
mov
pop
jbe
fcomps
sbb
xchg
movsb
add
pop
cld
in
cmpsl
push
sbb
aad
adc
jnp
sbb
add
out
cmp
mov
clc
pop
es
outsl
dec
mov
int3
fwait
push
xor
push
sbb
dec
or
inc
jl
push
nop
int
stos
fistpl
movsb
jmp
jb
xchg
and
push
stos
aad
pusha
lret
dec
jge
stos
imull
jo
mov
faddl
shlb
add
xchg
push
cltd
icebp
clc
xor
sti
movl
addr16
mov
pop
pushf
and
cs
dec
cs
cltd
inc
lcall
push
imul
or
adc
xchg
popa
mov
sub
cmpsb
lock
inc
push
and
add
test
xchg
mov
cmp
push
xchg
jno
mov
jbe
loopne
aaa
push
loop
lcall
loop
loope
mov
inc
loopne
mov
pop
es
sub
cmpb
out
and
mov
fnstenv
adc
jne
pushf
lods
push
lahf
inc
rol
ds
mov
or
add
add
outsb
ljmp
jle
pop
push
push
pop
jnp
test
data16
pop
negl
pop
add
int3
mov
xorb
xchg
and
sbb
adc
mov
mov
mov
pop
push
enter
dec
fcomps
lock
xor
xor
mov
pop
fdivr
push
mov
mov
jl
xor
in
mov
push
xchg
fidivl
sbb
xor
dec
inc
not
xchg
int3
xor
xchg
mov
add
sbb
mov
add
lods
mov
test
cmp
pushf
adc
les
mov
sbb
fdivs
xor
in
pop
adc
sub
int
incb
and
pop
push
not
lahf
out
push
cltd
pop
fsubrl
in
xchg
fdivrp
mov
fs
repz
xor
adc
cmp
hlt
adc
mov
hlt
jbe
pop
xchg
std
pop
loopne
pusha
cli
addr16
add
out
jns
ds
cmp
inc
ds
icebp
repnz
aaa
inc
adc
shll
std
pop
lret
add
ljmp
pop
sub
mov
shrb
bsf
mov
repnz
inc
jo
dec
mov
movsl
ret
mov
faddl
and
adc
rolb
xor
jo
and
hlt
lods
add
pushf
mov
push
dec
sbb
lret
cmp
shll
scas
test
jo
decb
lds
jmp
cwtl
jno
mov
lods
or
lcall
xor
sub
jns
jg
scas
imul
out
loope
mov
gs
push
xor
leave
sbb
push
jmp
jns
jle
js
sub
in
mov
call
aad
jle
or
add
xchg
arpl
push
xor
int
daa
mov
decb
mov
cmp
xorb
mov
mov
lds
jae
sub
lahf
add
insl
filds
fmuls
imul
cmp
sub
mov
cwtl
push
es
xor
xorb
pop
pop
fwait
mov
daa
sub
cli
add
pop
push
jg
xchg
in
pop
fwait
mov
in
lret
and
jbe
mov
es
cmp
inc
outsb
jmp
dec
cmp
push
pop
std
sar
int3
dec
dec
insb
icebp
out
in
push
mov
pop
mov
scas
aam
mov
les
mov
pop
mov
mov
imul
repz
pop
sub
push
ds
and
int
jmp
add
out
fstpt
lock
addr16
popa
js
mov
or
mov
test
inc
test
iret
roll
add
jg
addb
bound
fcoml
adc
xchg
int
mov
sahf
or
imul
stc
daa
xchg
cmc
adc
pop
mov
pop
mov
sub
lret
shll
dec
jmp
cmp
pop
aaa
movsl
and
mov
cmpsl
lret
sub
push
shll
add
mov
cmc
jmp
xor
mov
bound
ret
loop
pusha
lds
mov
jmp
ds
out
fs
adc
pop
pushf
shl
mov
enter
aad
add
es
std
jl
mov
cmc
scas
sahf
stos
mov
lds
push
fdivl
sti
inc
pop
inc
ss
cli
sub
mov
shll
dec
push
adc
int
pop
out
inc
sbb
adc
fnstenv
lds
test
sub
jbe
mov
jnp
int3
gs
stos
rcll
pop
addr16
xlat
test
dec
ljmp
mov
incl
sarb
cltd
pop
loopne
sbb
push
jns
inc
cwtl
pop
movsb
add
adc
pop
js
cwtl
inc
int
in
mov
inc
or
inc
mov
dec
jg
cmp
clc
jmp
divb
sti
lock
xchg
loopne
es
mov
dec
push
or
das
iret
addb
cmp
jge
and
aad
jne
dec
mov
sub
inc
xchg
mov
call
mov
cltd
sbb
scas
lock
xchg
in
sub
cmp
testl
movsb
cmp
fnstcw
mov
fldt
xlat
and
adc
inc
mov
out
dec
stos
or
lds
pop
mov
pusha
sub
cwtl
xchg
mov
out
lods
test
pusha
xor
fstl
cltd
aad
test
std
and
inc
dec
pop
insb
sub
add
mov
add
xrelease
stos
loope
clc
mov
into
int
and
jo
fsubs
clc
adc
mov
lds
movsb
mov
pop
sbb
filds
addr16
mov
cmpl
add
pop
out
cmp
cmp
push
mov
loopne
and
add
lock
mov
add
int3
movsb
outsb
sbb
xor
cmp
roll
hlt
popa
insb
jb
or
in
dec
jno
adc
xor
int
ljmp
pop
xor
fwait
add
outsb
es
or
into
cmp
pop
mov
decb
mov
cmp
push
stos
ror
pop
cwtl
pop
inc
dec
mov
xchg
je
outsl
sbb
jns
loopne
ds
pop
sub
dec
sbb
addr16
mov
jne
sbb
fdivs
xchg
push
add
pop
mov
adc
xor
mov
mov
movsb
and
cmpsl
addr16
mov
test
sub
das
movsl
je
xchg
fnsave
out
test
dec
inc
jge
rcrl
mov
stos
lock
cltd
fs
inc
out
je
dec
cwtl
mov
in
rcl
pop
jecxz
clc
cmp
stos
adc
xchg
daa
call
add
pushf
jge
mov
dec
xlat
fcoml
xor
and
xor
scas
pop
shrl
add
mov
fs
mov
mov
inc
sbb
push
int3
xchg
adc
loopne
xchg
testl
aaa
std
push
jg
or
pop
cli
lret
jae
jg
adc
or
cmpsl
cld
adc
inc
test
xchg
hlt
out
out
pop
xchg
sbb
adc
loopne
out
add
cwtl
daa
or
clc
push
inc
sbb
lret
sahf
mov
sti
push
or
lea
push
mov
loopne
cs
inc
outsl
xchg
jl
imul
shlb
aad
loope
pop
cmp
addr16
cmp
cmp
adc
adc
push
mov
mov
dec
repnz
rolb
push
enter
mov
push
xchg
cmp
sbb
in
inc
xor
push
mov
add
pop
mov
shll
jge,pt
pop
dec
test
stc
rol
cmp
xor
sub
scas
ficompl
and
pop
jle
fwait
inc
pop
xor
xchg
xchg
lret
sahf
mov
mov
fcoms
std
stc
cmp
add
jmp
inc
dec
xchg
dec
addr16
nop
inc
jnp
out
dec
test
stos
jnp
xchg
jmp
mov
fmuls
call
cmp
mov
adc
fcoml
fldt
ljmp
sub
inc
je
mov
ficoms
lock
ja
mov
and
add
int3
xor
setg
mov
jmp
mov
clc
and
mov
push
or
push
dec
push
inc
aam
je
mov
mov
jecxz
jge
jmp
mov
dec
pop
pop
push
cmpsl
push
repnz
nopl
xchg
xchg
gs
lock
pavgw
sbb
sub
movsb
xchg
mov
faddp
xor
pop
ret
loopne
call
mov
pop
pop
mov
shrb
xchg
aaa
inc
in
mov
cmp
insb
int
out
gs
push
sahf
jno
cmp
aad
in
icebp
jns
inc
lret
mov
cltd
clc
or
mov
xchg
inc
lret
lods
cmc
inc
mov
lds
push
fstpl
dec
mov
jo
and
arpl
sbb
inc
ljmp
push
xor
xchg
sbb
lods
subl
stos
cmpsb
add
jns
cmp
mov
or
rcrb
sbb
cmpsl
xor
popa
or
in
lods
aaa
into
cmp
cmpsl
mov
dec
or
sbb
imul
call
fists
mov
and
out
xor
mov
rcll
jle
sbb
pusha
jns
outsl
std
aad
pushf
jp
inc
out
fcomps
add
dec
jbe
roll
xor
sub
jns
push
cld
mov
fiadds
insb
hlt
inc
mov
int
xor
sbb
loope
add
loope
inc
dec
popf
push
jb
stos
outsl
negl
xor
stos
push
cmp
ss
jmp
ret
cli
pop
jl
jne
in
xchg
test
jnp
daa
gs
inc
stos
mov
push
xor
inc
jo
lods
fcoml
inc
mov
jmp
clc
js
into
addr16
push
fstpl
mov
mov
cltd
push
ja
cmp
call
in
gs
pusha
outsb
movsl
xor
fidivrl
decb
aam
jmp
call
jne
dec
sbb
adc
outsl
dec
lods
jno
lock
add
or
loop
fstp
rol
out
in
or
and
xchg
popa
loopne
mov
jecxz
jbe
jnp
push
jb
inc
lahf
sub
das
rep
clc
dec
addr16
aaa
push
outsl
sub
sbb
xchg
cmp
cmpsb
jl
fstpt
into
lahf
push
and
cmp
fsts
in
std
xchg
and
sbb
adc
cltd
int
cmp
mov
scas
and
or
mov
das
sub
in
pushf
mov
dec
or
mov
test
jbe
xchg
nop
sub
lcall
mov
xlat
lea
adc
jecxz
mov
lds
rcl
popa
push
push
mov
inc
adc
rcrb
mov
adc
orl
sub
sub
sub
or
xchg
shll
xor
gs
push
cmpl
or
lods
pop
push
push
cmp
and
dec
ja
add
xchg
push
pop
test
xchg
nop
aad
xor
int
inc
or
aad
mov
aas
mov
cld
xor
lcall
scas
cs
adc
les
je
ss
mov
mov
sub
pop
add
out
sbb
xchg
and
mov
pop
push
lds
or
mov
sub
xchg
das
call
push
lds
push
inc
mov
push
add
mov
shl
daa
mov
mov
jns
std
and
xorl
push
loop
ja
out
and
cmp
cmp
dec
xchg
ds
push
bound
adc
lcall
js
cmp
inc
ret
cmp
cltd
mov
adc
gs
sbb
idivl
inc
in
mov
mov
aas
jns
cmp
mov
pop
sarb
data16
mov
mov
pop
jl
pop
push
loope
sub
test
lahf
jb
cli
sub
ljmp
cmp
add
icebp
pop
stc
out
mov
dec
cmp
aaa
inc
cmp
jno
js
and
leave
push
pop
add
and
mov
pop
jns
leave
orl
mov
es
sahf
stc
out
cmpsl
mov
and
pop
fwait
int
movb
in
movsl
inc
ret
push
mov
mov
cmpsl
icebp
mov
imul
lock
cmp
push
hlt
xchg
push
cmp
adc
stc
jg
jo
mov
rcl
push
inc
jmp
fadd
mov
add
addr16
inc
fs
fidivs
stc
jno
test
xchg
sub
dec
push
mov
jb
jl
pop
pop
jmp
or
flds
jno
mov
jecxz
pop
std
aas
mov
test
sbb
jge
frstor
mov
adc
pop
sub
into
dec
inc
in
cmp
cs
or
outsl
mov
jns
dec
jo
sub
cld
mov
add
and
clc
mul
mov
das
mov
jmp
outsb
lods
fdivrp
and
test
add
enter
mov
cltd
jo
scas
mov
mov
jge
dec
gs
into
inc
dec
loope
inc
sarb
inc
xchg
jg
loop
aad
scas
int
jne
inc
sbb
popa
mov
lahf
jle
scas
mov
mov
jmp
push
rcrb
test
mov
repz
pusha
lock
and
test
pop
jb
mov
or
out
jmp
nop
mov
pop
lret
call
rcll
dec
mov
cltd
sbb
mov
icebp
subl
out
cmp
sbb
sbb
icebp
lods
shrl
jg
xchg
cmp
das
jl
aam
lret
or
xchg
in
mov
mov
repz
lods
leave
int
scas
xchg
dec
xchg
mov
add
daa
xchg
iret
jl
popa
xchg
loope
lret
cmc
in
xchg
lock
inc
xor
or
inc
fnstcw
dec
and
pop
add
pop
popf
push
addr16
test
loop
mov
fneni(8087
push
lods
ds
cmpsb
lods
and
jmp
or
rcl
cwtl
aaa
ss
mov
mov
data16
or
mov
push
add
nop
rorb
aam
sti
daa
popf
rol
add
xor
hlt
sub
gs
popf
add
movsb
inc
ficomps
punpcklbw
pop
xchg
test
sub
xor
jle
test
dec
cmp
pop
adc
ret
sub
loope
icebp
ljmp
jg
mov
loopne
push
push
mov
lret
inc
loopne
rclb
testl
outsl
mov
and
mov
or
repnz
sbb
cwtl
and
push
aam
inc
movsl
push
and
jo
mov
sahf
inc
stos
pusha
movsb
vmread
imul
cltd
xchg
lahf
push
add
call
xor
or
iret
js
test
insb
call
xchg
lods
inc
nop
mov
xchg
gs
loop
fsubs
sub
push
mov
or
jl
lds
cmc
leave
es
add
xchg
cmpsb
xlat
mov
add
outsl
ret
push
dec
pop
cli
addr16
pop
mov
xchg
push
loope
call
sbb
add
jno
dec
testl
mov
out
sbb
xor
mov
out
or
cmpsl
push
mov
sub
ror
xor
and
or
push
xchg
sbb
test
sub
mov
add
into
xchg
pop
dec
fisubrs
int3
sahf
jnp
dec
sbb
push
clc
mov
mov
pop
add
adc
pusha
int3
push
push
scas
stos
adc
je
mov
xor
xor
fs
sub
and
ljmp
scas
popa
pusha
subl
lods
add
push
inc
jl
notb
or
inc
xchg
arpl
adc
mov
xor
xchg
scas
aaa
pop
sbb
in
call
add
pop
stos
scas
call
dec
shrb
test
cli
aad
adc
cmp
and
cmp
out
and
xor
pop
aad
lret
lods
and
lock
rcrl
lcall
stos
ja
pop
and
jl
jl
lods
or
mov
es
bound
movsb
mov
cmp
test
sbb
push
loop
aaa
sbb
mov
mov
fcomip
movb
xor
cmpsl
sbb
cmpl
aam
insb
lds
into
cmp
test
lods
jge
sbb
and
mov
or
outsl
hlt
inc
and
cmp
es
fs
xchg
lret
jp,pn
stc
lods
jg
xchg
dec
imul
ds
xchg
jb
mov
aas
call
pop
sbb
out
bound
or
fstpt
or
and
bound
scas
and
test
inc
xchg
pop
or
xor
icebp
test
xor
xchg
push
adc
bound
mov
pop
or
jl
mov
outsl
mov
dec
ds
and
and
mov
or
nop
jb
shlb
xchg
xorb
xorb
ljmp
push
mov
mov
sbb
jmp
cmp
lret
push
dec
fcoml
fsubs
cmp
xchg
cltd
leave
xor
jp
aaa
pop
sar
out
push
inc
mov
adc
cmc
lds
aad
mov
sbb
dec
and
mov
adc
repnz
pusha
sbbb
mov
sbb
push
cmpsb
push
mov
iret
xor
mov
push
dec
jae
inc
jo
fldcw
lds
mov
mov
cmp
insb
push
sub
push
jg
push
mov
ja
call
jne
call
push
push
push
mov
pop
out
fs
jbe
sub
mov
jo
adc
inc
pop
ljmp
jne
mul
ss
xchg
popa
and
dec
jno
inc
repz
es
xor
push
inc
mov
adc
cmpsl
jge
jbe
sbb
cltd
mov
push
fcompl
cld
jl
orl
mov
push
mov
inc
dec
mov
fstpt
mov
mov
dec
add
cs
inc
push
test
adc
sub
sahf
dec
or
xchg
addr16
cmp
cld
mov
add
push
mov
dec
shll
shll
sub
shll
jbe
cltd
lret
das
jmp
dec
shrl
sub
inc
mov
ljmp
mov
inc
mov
out
repz
and
inc
mov
xor
jecxz
fisubl
insb
mov
adc
jb
mov
pop
ljmp
inc
mov
mov
adc
aaa
mov
pop
loopne
int
dec
xchg
js
rcrl
fisttps
out
mov
out
cltd
mov
mov
ds
idivb
inc
in
push
mov
jecxz
dec
insb
mov
test
call
cs
add
or
outsl
xlat
pop
push
cmp
jne
push
or
movsl
xchg
insb
fwait
imul
and
mov
fcmove
ss
jae
scas
in
adc
fucomip
shrb
mov
shrl
mov
mov
ljmp
xor
mov
mov
add
sbb
push
daa
mov
add
jbe
jle
sarl
inc
sti
lahf
pop
sbb
xor
movsl
insb
xchg
in
std
insb
pop
outsb
fnstcw
aaa
pushf
and
stos
mov
adc
pop
lret
int3
cmc
sub
lea
fmuls
xchg
inc
mov
sub
sbb
mov
xor
lds
lret
sub
add
cltd
xor
mov
mov
shlb
inc
xor
pop
xor
in
mov
in
ret
test
aaa
mov
mov
ljmp
ret
push
mov
inc
jno
sbb
das
jge
mov
out
je
lea
lock
lods
pop
xor
sahf
or
notl
sbb
mov
bound
std
sbb
test
out
xchg
mov
xor
loopne
jp
shl
xor
insl
mov
xor
sub
andl
cmp
xlat
mov
iret
jl
push
or
xchg
adc
dec
mov
sbb
lahf
fucomp
xchg
pop
adc
popf
cld
push
mull
cmpsl
mov
negb
cli
scas
or
outsl
adc
movzwl
xor
rcr
xor
push
adc
mov
mov
dec
cmp
orl
push
cmc
or
cs
mov
fmull
mov
out
nop
imul
jp
popa
in
sbb
or
cmp
dec
jle
xchg
ret
mov
in
dec
je
mov
mov
mov
lods
stc
add
mov
fdivs
cmp
stos
std
mov
jmp
cmp
fbld
mov
lds
enter
cmp
and
int
sbb
xchg
sahf
pop
jecxz
fimuls
mov
mov
pop
xor
pop
dec
mov
ja
mov
test
xchg
mov
push
outsl
mov
xchg
mov
jl
hlt
mov
testb
xor
popa
mov
dec
leave
imul
and
out
loope
cmp
inc
cs
xchg
cmp
adc
jl
xchg
aad
or
stc
fsubl
pop
icebp
sub
pop
insb
mov
sahf
xor
arpl
hlt
fistps
andl
lea
pop
nop
xor
mov
xchg
xlat
xchg
mov
gs
jecxz
push
das
xor
mov
sar
push
sbb
lret
cmp
or
movsl
cmp
jg
test
add
outsb
jbe
cmp
dec
push
add
ret
jae
xchg
out
dec
pop
lahf
dec
ss
dec
push
mov
sarb
icebp
jo
pop
inc
xchg
push
or
lret
repz
pop
icebp
mov
push
adc
test
add
inc
pop
inc
in
test
test
repz
or
pusha
out
cld
test
or
xchg
and
xor
and
or
push
xchg
dec
dec
cmp
lea
inc
mov
xor
jae
jbe
movsl
xchg
or
repnz
nop
out
jmp
mov
aad
jecxz
repnz
sbb
ss
xor
lret
and
mov
inc
jbe
mov
rcr
aam
repnz
testb
mov
sbb
imul
jg
imul
xchg
pop
addr16
xor
sub
neg
push
ret
cmp
fwait
out
idiv
scas
mov
andb
data16
test
jo
repnz
ljmp
adcb
pushf
enter
or
fidivl
or
xor
aas
jnp
sub
xchg
push
add
and
inc
mov
pop
popa
mov
rcll
dec
dec
jbe
shll
jp
push
mov
or
mov
fcmovbe
add
lret
pop
int
nop
inc
int
arpl
inc
pusha
cld
testb
add
xor
fs
and
xchg
fbstp
jp
pop
cmp
mov
jp
loopne,pn
jmp
aas
arpl
xchg
sbb
and
js
and
ret
mov
dec
loop
add
mov
in
xchg
xor
pop
and
arpl
loopne
or
sbb
pop
iret
ret
lcall
sbb
hlt
stos
pop
fbld
mov
bound
ficompl
adc
dec
dec
pushf
fstps
ret
jnp
mov
xchg
adc
dec
mov
sub
dec
outsl
push
mov
outsb
xchg
pop
fidivrs
ljmp
gs
cmp
or
arpl
jp
lahf
cmc
inc
cwtl
js
mov
ds
imul
icebp
insb
lret
andl
xchg
in
lock
pop
int3
icebp
jecxz
test
mov
out
hlt
inc
cli
sub
sub
xlat
xchg
xchg
scas
test
stos
pushf
jae
out
xchg
rolb
push
in
out
xorb
push
or
ret
sub
push
int3
cmp
mov
adc
fistpl
mov
add
mov
push
xchg
push
cmc
mov
insl
mov
and
lret
push
inc
jne
stos
mov
inc
mov
lret
fsubrl
push
outsb
add
cwtl
stos
outsl
mov
dec
js
ficompl
add
push
xchg
lock
cmp
pop
push
lahf
lcall
ds
rclb
dec
dec
xlat
fldt
rclb
insl
push
lahf
lock
xchg
and
xchg
ffreep
cld
cltd
test
add
add
fmul
pop
adc
stos
and
inc
andb
aam
test
pop
loope
fstps
cld
pop
int3
jno
or
into
mov
bswap
or
xchg
sbbl
cmp
jb
jnp
sahf
sub
jae
pusha
pop
mov
cwtl
xlat
dec
ds
repz
imul
dec
xchg
push
push
xor
cmp
cmp
movsb
test
push
int3
add
clc
loope
jnp
adcl
aaa
push
je
cmp
inc
sbb
jle
jle
lret
aas
outsl
mov
inc
xor
pop
hlt
icebp
mov
scas
stos
jae
push
lods
andl
sub
lret
mov
cwtl
xor
je
add
lcall
xchg
andb
jns
arpl
sbb
and
xchg
cwtl
int
addr16
push
scas
dec
push
fcoms
xlat
addr16
adcl
mov
sti
insl
jp
jmp
add
pop
push
mov
ret
add
cmp
std
ss
jp
insb
sub
inc
dec
jnp
push
mov
inc
cmpsb
and
lds
inc
pop
mov
jns
repnz
cmp
pop
xchg
lcall
mov
sub
aaa
mov
scas
outsb
shll
xchg
clc
dec
jns
push
sub
outsl
dec
gs
cmp
mov
jne
inc
jmp
shr
jnp
stos
mov
lcall
mov
mov
loope
out
fstpl
sbb
movsl
insl
mov
xchg
es
mov
cmp
inc
sbb
add
xchg
sti
add
dec
xor
jl
ds
mov
sbb
call
add
ret
jnp,pt
stos
mov
imul
imul
das
icebp
push
loop
xlat
repnz
rcl
add
sahf
inc
mov
rolb
idivl
and
rcrl
mov
mov
aas
test
mov
sar
negl
idivl
jo
dec
stc
inc
js
mov
in
or
jmp
stc
shl
setbe
loop
jnp
xor
sbb
mov
ret
mov
or
ss
aas
or
pop
push
pop
push
rolb
lret
icebp
jg
aad
adc
and
daa
subl
dec
mov
lcall
mov
sub
sub
ss
dec
cmp
mov
push
push
cwtl
pop
mov
sarb
cli
push
inc
ss
test
xchg
jge
sbb
stc
pushf
jle
mov
repnz
aaa
push
and
push
xchg
jae
xchg
jae
aaa
jg
jp
xchg
test
sahf
sbb
sar
rclb
cmp
shlb
lock
sub
or
jbe
jle
jecxz
add
mov
or
push
fcoml
or
mov
insl
jmp
sub
jo
movsl
sahf
adc
mov
lret
sub
cld
test
and
jo
mov
or
out
andl
xor
inc
jg
repnz
clc
loopne
mov
adc
shrb
cwtl
and
nop
aas
sbb
and
sub
daa
fisttpl
push
lcall
je
out
rcrl
out
imul
fisttpll
sahf
cmpsl
jb
mov
popa
jl
or
dec
push
mov
scas
out
out
xchg
pop
jne
rcrb
ds
out
inc
icebp
jmp
je
pop
and
notb
sbb
mov
fistpl
in
mov
aam
not
dec
cli
mov
fldt
push
loopne
fwait
mov
xchg
sub
adc
cmp
dec
icebp
ret
push
sbb
scas
cmp
outsl
add
das
bound
mov
xchg
aaa
out
or
lcall
inc
xchg
testl
mov
push
scas
or
xchg
int
data16
pop
mov
sub
jns
xlat
push
imul
popa
add
enter
sbb
cmp
mov
lods
cwtl
sahf
ret
enter
cmpb
nop
cld
hlt
dec
js
and
inc
jp
inc
pop
in
outsl
jl
lea
xchg
lahf
mov
dec
fldt
jnp
movsb
xchg
dec
push
in
orb
shr
jnp
mov
cmpsb
mov
call
jnp
pop
mov
pop
pop
subb
cmpsl
adc
ret
jecxz
cmp
jmp
int3
leave
xchg
rcrb
cld
xchg
icebp
stos
jp
mov
sbb
gs
jmp
in
dec
sub
shll
push
pop
push
cltd
leave
jmp
cwtl
and
mov
dec
cld
lods
inc
repz
js
int
xchg
cwtl
xor
addr16
in
cmc
rol
xchg
mov
xor
in
cmpsl
nop
sbb
mov
fdivs
stos
es
pop
fwait
outsw
pop
add
test
mov
arpl
sub
stos
int
pop
inc
and
xor
or
sub
ds
sbb
push
fimull
movsb
mov
push
and
adc
lahf
or
jg
bound
jecxz
jno
shl
jmp
dec
push
shll
mov
popa
and
mov
iret
push
mov
or
push
clc
loopne
and
out
lea
xchg
pop
inc
xor
repz
mov
mov
mov
push
outsb
mov
mov
adc
ss
or
push
call
mov
out
inc
sti
das
push
xchg
xchg
popf
mov
fmulp
cmp
dec
out
mov
inc
xchg
pop
pop
fnstsw
daa
lock
subl
ret
icebp
popa
pop
push
int3
sbb
fcompl
xchg
shl
rclb
dec
sbb
pop
loope
popf
mov
cmpb
out
jecxz
aam
insl
dec
xor
dec
mov
mov
inc
or
and
cmc
cmp
cmp
push
mov
or
ja
sahf
scas
jmp
dec
sub
mov
fsubs
sarl
push
scas
sbb
mov
xchg
cld
fwait
cmp
adc
inc
cld
iret
rorb
enter
divl
xchg
mov
mov
jmp
inc
jle
out
sub
xor
inc
push
scas
mov
bound
mov
jl
popa
mov
jns
or
mov
xchg
cli
out
icebp
loope
mov
inc
adc
or
xchg
inc
out
xor
dec
test
jb
add
xchg
leave
dec
repnz
nop
stc
stos
xchg
mov
sub
out
cmp
pop
xor
xchg
inc
cli
ret
inc
lods
ja
cmp
add
arpl
lahf
das
leave
outsl
js
and
mov
add
dec
dec
call
out
xchg
ja
dec
sub
mov
inc
dec
cmpsl
cmp
sbb
addr16
hlt
sbb
insl
adc
aam
pop
bound
lahf
clc
mov
rcl
out
cwtl
das
mov
in
test
addl
jge
dec
push
sub
ljmp
pop
aaa
jno
lock
add
sub
test
push
dec
test
imul
mov
dec
test
mov
sub
mov
mov
xchg
mov
lea
jo
dec
push
or
dec
sti
andl
adc
mov
shl
pusha
shl
ret
lock
fsubs
xlat
stos
dec
adc
inc
xchg
hlt
sub
dec
cs
incb
in
repz
gs
std
paddusb
lret
in
sub
pop
push
movsl
inc
ljmp
mov
adc
stc
dec
aaa
inc
or
cmp
jmp
fbstp
mov
fadd
and
cld
pop
cmp
outsl
adc
sarb
adc
pop
add
popf
aaa
in
repnz
lret
js
mov
lods
test
clc
push
fcmove
psraw
or
shlb
adc
adcb
cmp
popf
mov
les
clc
stc
lods
cmp
test
movsl
lret
outsb
mov
mov
and
push
or
jg
fwait
aaa
daa
imul
dec
lahf
movsb
dec
dec
sbb
stc
mov
pop
or
inc
inc
inc
and
das
lods
inc
aad
clc
orb
or
add
fbstp
ja
les
rcrl
ret
lds
test
ret
fsubl
mov
shl
mov
adc
lahf
jl
xchg
addr16
mov
sub
pop
dec
sarl
xor
jmp
mov
inc
sti
xchg
pusha
jge
out
sub
aas
out
call
rcrl
in
ret
dec
popf
clc
adcl
ret
lds
ja
lret
mov
clc
and
and
add
pop
xchg
add
inc
and
ds
cmp
rcll
xchg
lret
jmp
sbb
push
shll
sub
mov
dec
in
add
xchg
mov
leave
into
scas
inc
es
rcr
scas
mov
insl
ds
jo
cmp
cmp
mov
insb
cs
orb
jl
sbb
xchg
xor
sbb
rcll
aaa
mov
sub
cs
ja
cmp
outsb
jbe
stos
sub
ficomps
xchg
adc
and
adc
mov
or
mov
bound
push
jbe
mov
sub
jns
leave
sbb
ss
adc
fwait
outsb
loopne
jmp
push
data16
loopne
sti
insb
scas
jne
imul
cmpl
mov
adc
push
jmp
push
out
jmp
sub
or
jo
jno
fisubl
test
fsubrl
rorb
aas
out
dec
sbb
dec
xor
rcl
jbe
shl
mov
pop
dec
mov
rorb
aas
push
jecxz
inc
loopne
sti
mov
orl
fstpl
lahf
push
push
mov
addr16
pushf
ljmp
call
jecxz
aam
cltd
nop
popa
cmp
lods
std
daa
adc
adc
imul
jg
dec
mov
add
sahf
push
stos
loopne
or
cs
mov
adc
pop
mov
mov
and
push
and
jg
ds
push
xchg
inc
xor
out
bound
mov
ss
adc
xchg
mov
jg
jecxz
xchg
push
or
jp
xor
xchg
pushf
icebp
pop
inc
sub
mov
addr16
aas
dec
leave
mov
das
aaa
jge
or
orb
or
cs
or
fstl
or
pop
jle
frstor
icebp
dec
mov
dec
push
lods
mov
adc
mov
mov
fstl
jne
fcomps
add
pop
mov
mov
sub
inc
jb
push
or
int
mov
loope
inc
dec
loopne
aas
es
pop
xor
lret
sbb
jp
push
ror
jb
mov
lock
sbb
dec
pop
insb
mov
int3
rorl
mov
rolb
xor
addr16
pop
nop
gs
pop
xchg
cwtl
addr16
pop
sub
xchg
jae
fsubrl
rcll
sbb
jge
cltd
sbb
sbb
std
or
add
mov
dec
mov
xlat
push
imul
scas
scas
fmulp
fucomp
cltd
jne
movsb
inc
out
sti
mov
jp
and
push
nop
xchg
push
xchg
inc
or
loope
mov
cmp
mov
jmp
mov
aaa
and
mov
pop
out
push
xor
xor
mov
lret
cwtl
and
jge
xchg
cmp
aad
mov
cs
lret
outsl
cmp
mov
fnstenv
aam
inc
addb
cmp
arpl
or
dec
mov
xorb
fisubs
mov
call
pop
xchg
add
leave
sbb
sub
sahf
xchg
cmp
das
mov
mov
mov
pop
mov
push
sarl
sub
pop
sub
mov
jns
lret
scas
push
adc
shlb
inc
sbb
fidivl
out
xchg
movsb
ret
mov
or
push
cmp
mov
mov
xchg
imul
es
daa
aam
add
push
int3
mov
cmp
mov
mov
out
push
jmp
mov
cli
cmp
fildl
stos
iret
sub
rcrb
pop
jp
sbb
inc
pop
xchg
push
sbb
test
movsl
dec
mov
ja
iret
mov
pop
jle
sbb
sbb
out
inc
xorb
dec
mov
dec
cmp
aam
xchg
add
sahf
inc
add
adc
into
push
sbb
test
inc
fidivs
cmpsb
push
test
mov
stos
ja
rcrl
adc
xor
mov
pop
popf
jbe
pop
cs
dec
dec
mov
xchg
shlb
loop
out
sub
add
ljmp
out
sahf
imul
mov
sbb
mov
aas
fisubs
in
pop
aas
imul
sub
pop
addl
outsl
stos
shld
xchg
sarl
aad
mov
dec
cmp
int
xchg
cwtl
mov
aad
jne
in
repz
pusha
subl
push
push
and
adc
sub
loope
jmp
scas
ss
xchg
push
into
out
mov
xor
stc
fstpt
xor
pop
cwtl
and
enter
dec
out
fcmovbe
aad
inc
loope
cmp
mov
daa
sub
cmc
pop
out
push
push
sub
into
and
pop
pop
mov
clc
sbb
cmp
idivb
call
ficomps
aaa
das
fcmovbe
iret
inc
xchg
lock
pusha
fiaddl
jae
cmpsb
call
lahf
repz
cmpsb
sub
cmpsl
push
and
or
insl
ss
leave
test
nop
jp
xchg
jecxz
int
xor
inc
mov
mov
out
sti
cmp
es
jbe
mov
jmp
jg
mov
dec
pop
imul
mulb
xchg
iret
daa
test
push
dec
push
rorl
cs
daa
pop
inc
sub
pop
std
int
and
ficomps
jb
cmp
xchg
lock
pop
lds
sbb
pop
cltd
aam
push
inc
mov
cmp
notl
and
cmc
pop
mov
out
dec
adc
aas
jp
pop
and
push
jl
out
test
sub
shlb
push
jmp
add
cwtl
adc
mov
mov
inc
bound
or
dec
mov
or
ja
pop
dec
add
sbb
add
cli
lahf
mov
pop
jbe
test
xchg
and
ds
stos
xchg
fstpl
mov
pop
outsl
iret
imul
mov
js
add
fwait
jae
pop
mov
sbb
aaa
imul
sub
clc
lret
cmc
outsb
loope
or
pop
or
sbb
pop
cmp
add
xor
mov
bound
jmp
mov
sub
imul
push
inc
pushw
roll
ret
ja
cli
xchg
stos
dec
std
and
xchg
xchg
sbb
mov
or
loop
xlat
adc
mov
jge
bound
out
rcl
sub
cmp
push
fnsave
dec
call
sbb
jecxz
cmp
in
dec
dec
dec
inc
imul
sbb
pop
cwtl
cld
icebp
fdivs
hlt
test
jne
and
aam
fstps
in
lods
loopne
xchg
in
in
and
jo
rcrb
xchg
shll
or
sahf
inc
dec
shrb
out
mov
lcall
sbb
lcall
dec
sub
int
xor
pop
mov
jmp
out
mov
test
jecxz
cmp
subb
loope
inc
je
mov
clc
out
mov
inc
shrb
arpl
and
loop
xor
notl
add
scas
in
xlat
adc
xor
iret
daa
mov
adc
mov
or
or
push
jo
scas
pop
aas
adc
inc
and
std
push
push
enter
int
push
movsl
adc
cwtl
rol
nop
dec
or
sub
push
lea
out
xchg
jae
dec
rcl
push
icebp
pop
add
push
leave
fsubl
lret
test
xchg
jb
cwtl
push
cmp
mov
sahf
cmp
xchg
ret
inc
js
out
dec
xchg
add
xchg
jge
add
adc
sbb
bound
in
outsb
sub
mov
push
pop
mov
int
es
shl
push
sub
in
push
cmpsl
pusha
into
imul
loopne
mov
jne
stc
pop
push
cld
std
and
jg
pop
outsb
cwtl
aaa
sete
pop
push
imul
ljmp
push
imul
jo
ljmp
arpl
mov
out
into
leave
xchg
pop
mov
push
adc
out
and
push
stc
fcoms
loop
xor
or
mov
rcrb
xchg
ror
pop
jp
mov
mov
daa
inc
push
jnp
mov
and
inc
sbb
mov
repnz
mov
sbb
movsb
jmp
jg
stos
movsl
push
jecxz,pt
popa
pop
pop
out
out
int3
int3
pop
in
mov
xchg
sar
stos
aaa
xchg
lahf
add
aaa
addr16
push
stos
fxsave
and
sub
cmpsl
jb
jg
out
jmp
or
out
cltd
inc
xor
js
sub
cmp
pop
or
lods
int3
mov
pop
fmull
sbb
sti
adc
iret
and
jp
imul
ljmp
pop
sbb
loope
or
outsb
das
and
call
negl
add
inc
lahf
jne
in
push
cmpsb
mov
bound
mov
dec
push
cmp
sbb
sbb
xchg
mov
jecxz
into
fistl
add
cmpsl
cltd
cmp
dec
test
add
loope
arpl
lds
in
test
js
mov
outsb
cmp
xor
popa
or
rcll
and
mov
out
mov
test
aam
inc
adc
outsl
xor
pop
sbb
negl
add
adcl
inc
roll
aad
lock
pop
pop
aas
xchg
into
sahf
add
cmp
ret
xor
inc
adc
or
and
fwait
add
mov
dec
adc
cmpsb
ss
insl
cltd
jmp
sub
xchg
push
idiv
ficomps
pop
outsl
fs
lcall
mov
sarb
pop
ret
mov
xor
push
mov
call
cmpsb
aam
xchg
add
lds
lock
mov
sub
pop
push
gs
mov
xchg
stos
push
mov
faddl
adc
push
bound
sti
pop
movd
cltd
xor
or
stos
ret
test
mov
dec
rol
insl
mov
test
xlat
jg
lds
and
mov
sub
mov
cmpb
loop
mov
pop
out
fistpl
mov
movsl
dec
dec
xchg
lods
int3
mov
sub
push
mov
jl
ja
adc
clc
mov
rorl
xchg
loop
jb
push
loope
xchg
xor
and
sbb
jmp
fxam
cmp
and
push
pop
jbe
test
or
adc
cmc
push
out
idivl
sbb
xchg
sub
mov
mov
push
sub
cmpsl
pusha
xchg
mov
adc
cmp
repnz
cmpsl
cmpsl
in
je
pop
mov
xchg
js
xor
lods
mov
cs
arpl
lahf
shl
mov
push
push
cmp
dec
cmpl
popf
sub
mov
outsl
and
loope
inc
jae
fnstsw
mov
imul
dec
mov
cmpsl
or
fsubrs
dec
fwait
nop
xor
cmp
enter
jbe
push
enter
decb
jno
sub
ljmp
jg
lds
mov
outsb
popa
sarb
jne
jge
dec
jl
dec
xor
repz
notl
test
out
mov
cmpsb
in
push
out
imul
pop
pop
cli
sub
out
bswap
cwtl
inc
outsl
inc
aaa
pusha
cmp
rcrl
dec
lcall
jl
enter
ds
sahf
sahf
xor
scas
in
shl
fistl
cmpl
fistpll
sub
sti
fwait
pop
mov
add
or
lock
ret
xchg
inc
xchg
sub
out
xchg
nop
ds
mov
cli
les
sub
or
int3
adc
sub
jle
cmc
lret
sub
xchg
or
test
cltd
push
sahf
fildl
fidivl
ror
in
add
dec
lods
jo
jl
loope
movsl
repz
sarl
xchg
je
inc
fsts
add
sbb
adcb
pop
dec
jns
jno
xchg
bound
stos
pop
push
inc
mov
das
xchg
push
lds
pop
pop
sarl
shrd
add
test
pop
je
pop
pop
and
repnz
test
cmc
add
mov
pop
push
fs
xchg
push
sub
shr
and
pop
cld
inc
aaa
xor
sbb
dec
pop
jbe
fldenv
or
lods
sbb
dec
mov
jl
inc
fisubs
mov
stc
adc
fxch
imul
cmp
or
test
adc
cwtl
mov
pushl
fst
and
dec
mov
xchg
imul
mov
and
add
pusha
add
jbe
pop
aaa
aaa
mov
pop
push
mov
in
xchg
inc
out
test
fbld
jbe
push
pusha
push
icebp
mov
push
fwait
mov
pop
adcl
pop
iret
pushf
ja
jae
in
push
xchg
test
adc
imul
cmp
mov
lds
int
je,pt
fisttpl
scas
mov
push
cmc
jbe
fwait
xchg
std
jns
xchg
out
mov
mov
jg
dec
cmp
jp
ljmp
xlat
ss
xchg
pop
xchg
shll
aas
daa
add
mov
push
mov
pushf
insl
mov
mov
hlt
mov
mov
mov
inc
outsb
pop
arpl
int
int
mov
loope
insb
sbb
pop
mull
xor
jl
adc
es
pop
test
xchg
adc
nop
adc
stc
int3
mov
sbb
cld
mov
mov
jne
repnz
negl
add
jle
jnp
sbb
jmp
and
or
xchg
lret
addb
or
adcl
fdivrs
jb
cltd
or
jmp
pusha
lret
fcomip
lds
fwait
rorl
adc
sub
mov
jl
push
xchg
cltd
pop
inc
cwtl
or
inc
mov
fistps
mov
dec
cmp
call
mov
cwtl
sbb
or
lret
ss
out
in
ja
jmp
lea
int3
lds
sub
push
addb
stc
stos
sbb
mov
aad
inc
inc
aas
inc
mov
stos
adc
mov
mov
jns
xlat
cmp
pushf
and
rcr
sub
aad
fildl
div
jbe
pop
jmp
mov
in
push
adc
cmp
jg
ret
filds
mov
fistl
shl
out
int
adc
addr16
aaa
push
gs
cld
xchg
xor
xor
cli
iret
aas
insl
sbb
and
inc
and
jnp
fstpt
out
mov
and
jp
in
test
jb
push
fldcw
and
mov
dec
enter
cmp
pop
adc
mov
scas
lret
loop
cmp
adc
lret
jae
das
cltd
jl
sub
push
mov
out
test
iret
adc
cld
xchg
pop
mov
add
xorl
jge
jge
mov
sub
ja
lret
cld
dec
pop
insb
jae
fldl
cmp
lret
cwtl
xchg
xor
cli
inc
rorl
sarb
sbb
add
addl
xor
inc
pop
push
pop
sar
sub
push
mov
aas
mov
popf
sahf
cmp
dec
mov
jb
cmp
xor
gs
pop
test
mov
pop
out
insb
ds
mov
and
mov
sbb
lret
xor
popa
xor
push
mov
jl
fs
or
int
add
dec
or
les
or
icebp
lods
add
sbb
hlt
jg
mov
xchg
mov
jbe
push
jne
test
fwait
or
shlb
loopne
andnps
mov
fwait
jb
push
push
in
cmp
iret
popa
push
repnz
stc
jle
loopne
mov
loopne
jo
jle
pop
and
cmp
call
stos
mov
xor
jge
test
int
leave
cmp
les
in
pop
stos
pop
push
mov
dec
out
nop
aaa
pop
scas
pop
xor
orb
xor
aam
and
cld
fs
adc
pop
add
adc
and
std
jae
jle
push
arpl
add
arpl
repz
mov
cmp
xor
ret
inc
movsl
sub
mov
sbb
cmpsl
cmpsb
and
aaa
clc
cli
iret
pop
es
jns
mov
dec
or
push
cld
cmove
xlat
push
int3
pushf
cmpsl
pop
testl
xor
xchg
fidivrl
mov
cli
mov
fmulp
insl
or
stc
push
clc
pop
sub
in
in
js
add
pop
cli
out
in
fstpl
mov
cmp
or
in
mov
dec
push
dec
lcall
test
int3
out
jecxz
adc
dec
push
mov
loop
addr16
loopne
or
pusha
xchg
xor
fsubrs
mov
test
push
jg
ljmp
cld
push
jne
or
push
emms
in
mov
pop
jae
push
lcall
inc
mov
mov
insl
push
jp
pusha
aad
rcll
push
sbb
xchg
into
adc
push
enter
xor
xchg
pop
cs
cltd
jbe
lret
jecxz
mov
xor
into
ret
das
es
lea
adc
inc
out
lret
push
inc
cmp
jno,pn
mov
jp
pop
xor
iret
or
adc
imul
shrb
arpl
repz
in
or
addr16
inc
dec
das
sarb
popw
divl
es
aam
mov
es
loope
push
clc
xlat
xor
cmp
test
test
sub
mov
adc
sub
int
das
or
sbb
mov
sub
insl
and
in
xchg
mov
popa
mov
add
push
arpl
addb
jae
test
lds
ds
push
dec
sub
push
mov
arpl
adc
push
dec
rolb
scas
sub
cmp
in
fstl
or
mov
mov
xor
adcb
lods
push
notb
int
add
mov
test
mov
cmp
xlat
int3
cld
ficoms
xor
cmp
mov
cmp
xchg
mov
into
xchg
sub
sub
jle
inc
lcall
add
add
push
fs
mov
out
in
mov
jb
in
ds
bound
popf
fcompl
cmp
push
or
mov
cld
jne
inc
cwtl
cmpsb
adc
or
addr16
aas
sbb
call
push
cwtl
int3
push
or
jne
mov
sub
or
arpl
into
or
lcall
test
in
sbb
or
mov
or
cmp
idivb
xchg
pop
sbb
pop
fsubrp
aam
cmp
dec
xor
push
ret
jle
sub
sbb
outsl
shlb
add
pushf
jmp
mov
loopne
mov
rorl
mul
inc
repz
and
aad
ret
arpl
pushl
lea
push
push
in
jp
adc
mov
aaa
in
mov
inc
pop
xchg
popf
jge
dec
cmp
ret
loop
sbb
int3
test
mulb
fwait
int3
shrl
test
mov
ljmp
jb
gs
data16
scas
cmpsb
cmp
add
jbe
mov
inc
push
mov
mov
and
jp
or
dec
int
push
lock
sbb
push
xchg
push
jae
fwait
push
les
mov
scas
and
pop
in
loopne
sahf
fnstsw
les
inc
jae
xchg
dec
movsb
adc
pusha
mov
jo
mov
and
ficomps
mov
xor
nop
leave
adc
push
jl
dec
jno
movsl
push
idivl
cmp
sbb
jb
jecxz
push
mov
maxps
scas
xchg
fistpl
cmp
gs
in
push
or
push
adc
mov
cmp
leave
inc
push
xchg
movsl
idivl
sub
ljmp
pop
pop
daa
inc
rcr
hlt
push
inc
out
mov
ljmp
xchg
addr16
test
inc
popf
xchg
lret
stos
out
out
pop
mov
jmp
scas
push
loope
inc
adc
mov
jo
std
pop
int
or
filds
imul
xlat
sub
dec
cli
pusha
jo
cmpsb
int3
scas
inc
xor
scas
jp
testb
cmc
mov
in
lds
loope
adc
xor
test
inc
insl
ret
mov
and
xor
fistl
or
mov
or
or
repz
popa
data16
cmp
into
filds
fstpt
jle
mov
sub
addl
lock
or
pop
jmp
lds
imul
in
out
sub
into
out
js
scas
ss
push
int
xchg
lcall
sbb
cwtl
out
in
daa
hlt
inc
lret
movsl
clc
xor
pop
or
shll
push
mov
add
fmull
lret
add
imul
jo
jmp
js
dec
sbb
or
adc
cmp
push
imul
pop
pop
arpl
xor
lcall
enter
dec
push
addl
insl
sbb
sub
daa
lret
in
imulb
pop
xor
push
lods
cmc
mov
inc
fists
add
or
add
mov
and
sbb
sub
push
lods
xchg
sarl
in
cs
sub
test
mov
and
pop
movsl
sbb
xlat
sbb
jle
jne
mov
fistl
jo
sub
jo
stc
clc
inc
mov
lcall
jecxz
push
mov
mov
test
lret
divps
rcl
bswap
sub
jb
lds
lahf
mov
push
jns
iret
push
jecxz
popf
ret
push
shl
fwait
jmp
or
ss
std
imul
sbb
sbbl
or
mov
or
jl
xchg
cmp
mul
jbe
inc
adc
pop
cli
lahf
mov
pop
mov
subb
xor
cmpsb
cmc
fdivs
push
in
loop
jmp
mov
push
out
sbb
outsb
arpl
pop
xchg
movsb
inc
out
or
cltd
xor
outsb
push
outsl
mov
nop
or
dec
ret
pop
fistps
xor
andb
dec
pop
push
xor
push
mov
clc
test
movsb
sbb
in
add
outsl
stc
xchg
push
loopne
pop
nop
enter
ja
jp
divl
nop
aad
popa
enter
xchg
popa
ror
sub
sbb
mov
jbe
mov
inc
pop
mov
inc
inc
push
ret
and
dec
mov
loope
js
pushf
cmp
inc
mov
les
fadd
stc
lds
and
data16
jae
out
add
adc
mov
cld
pop
ljmp
insl
adc
stos
sarb
add
mov
testl
mov
nop
aaa
arpl
xchg
pop
pop
shrl
inc
sbb
lock
mov
shlb
xchg
cmpsl
jg
or
dec
xchg
adc
xlat
add
aam
inc
cmc
sbb
test
call
addr16
mov
and
pusha
adc
jp
lock
sbb
sbb
ljmp
sub
loopne
cmp
notl
mov
or
xor
pop
lahf
cmp
call
arpl
outsb
jae
bound
stos
outsl
cltd
roll
repnz
cmp
je
aam
push
jp
jg
and
pop
cld
std
stos
jne
neg
push
lcall
mov
and
add
and
sbb
sub
cmp
jne
mov
dec
jle
insl
sub
aaa
nop
pop
insl
mov
addb
mov
or
pop
jne
add
inc
adc
mov
scas
mov
pop
jle
adc
orb
out
ss
addl
iret
pushf
insl
test
frstor
movsl
movsl
xchg
cwtl
fwait
imul
xor
mov
jmp
push
or
and
inc
loope
dec
mov
mov
xchg
adc
dec
mov
or
push
mov
adc
lret
andl
add
lock
mov
jo
test
pop
shl
dec
xor
jno
mov
push
cmpsl
xchg
sub
jmp
jmp
cmp
test
arpl
subb
mov
lahf
mov
aad
aas
mov
push
lcall
adc
scas
lods
mov
test
sbb
or
sti
pushf
test
mov
mov
jecxz
or
aaa
xlat
sti
pop
push
je
pusha
aad
jmp
jne
pusha
pop
mov
mov
mov
loop
les
aas
das
leave
sbb
int3
cmp
iret
test
imul
stc
pop
jp
in
mov
and
sbb
sbb
hlt
adc
aam
sbb
jne
or
fldcw
jl
pop
loop
mov
adc
push
add
testb
aad
jns
sub
cmp
cmc
inc
insl
ret
cs
xor
xor
push
shll
imul
mov
jne
mov
into
cwtl
mov
push
cmp
add
cli
push
push
fcoms
sub
in
fisttps
imul
popf
push
dec
lock
sarl
aam
pop
pusha
sbb
ficomps
pop
mov
dec
or
push
lock
dec
sub
ja
ret
jle
sahf
and
inc
xchg
xor
cs
cld
jle
cmp
xchg
push
repz
xchg
insl
push
std
stc
pop
fmull
pop
dec
lret
cld
or
xchg
outsl
outsb
or
shrl
jb
push
repnz
bnd
hlt
sbb
mov
lock
pop
call
stos
push
in
gs
loop
out
mov
mov
adc
ljmp
outsb
xchg
add
mov
lret
test
sti
test
icebp
add
mov
stos
popf
int3
push
hlt
push
and
scas
pop
daa
mov
out
push
sti
jae
pop
cmc
out
leave
repz
jno
inc
inc
pop
sub
mov
push
pop
imul
lods
xor
xor
adc
or
jmp
mov
mov
insl
or
inc
xchg
shlb
mov
testb
push
inc
sub
xchg
inc
lret
inc
rcll
insl
repz
jne
lcall
xchg
sahf
dec
sbb
mov
out
aas
and
xchg
jbe
pushf
or
hlt
jecxz
pop
cmp
out
testl
in
cwtl
xor
jp
cmpsl
pop
stc
stc
jge
dec
roll
jne
or
adc
xchg
xor
cld
ss
inc
push
xor
cwtl
sbb
mov
cmp
icebp
mov
mov
je
mov
cmp
adc
lret
fiaddl
inc
xchg
xchg
cmp
sbb
test
mov
lahf
xchg
xlat
jne
testb
cmp
jo
jnp
ss
ja
aaa
or
jb
cmp
xor
mov
sbb
shlb
fsub
jno
outsb
xchg
and
mov
push
pop
enter
test
mov
mov
add
jnp
call
fs
push
in
call
rorl
mov
xchg
stc
fistpl
lds
rdtsc
cwtl
cmp
bound
adc
jb
or
xchg
jecxz
bnd
sbb
dec
js
or
ljmp
add
in
outsl
mov
iret
out
sbb
iret
or
insb
sub
xchg
sbbl
repnz
mov
push
mov
icebp
in
sahf
mov
fstl
imul
dec
or
xor
mov
inc
cmp
jbe
and
aad
push
mov
icebp
test
and
cmp
jecxz
xchg
arpl
dec
inc
scas
aas
shrl
push
ds
mov
cli
xchg
sbb
lods
mov
sbb
fdivl
xor
repz
sbb
jle
int3
pop
lret
pop
or
inc
xchg
push
mov
mov
popa
fsubs
out
popa
mov
test
aam
cmpsl
add
aad
cld
lds
dec
add
xchg
sub
test
popa
cmpsb
cld
mov
pop
les
lock
xor
push
cmpsl
lret
push
aaa
mov
sbb
rcrl
mov
push
adc
idiv
data16
cmc
xchg
gs
sub
add
cmp
mov
repz
xchg
cmp
and
movsb
pop
pop
sti
sub
jae
sbb
je
mov
pop
xchg
scas
das
mov
out
mov
imul
iret
lock
shl
mov
mov
mov
jae
xchg
xor
stos
lock
stos
push
fisubl
xchg
shll
push
sbb
sarb
iret
loopne
mov
aam
pop
loopne
inc
inc
adc
sub
out
xlat
add
and
sbb
adc
in
andl
cmp
xchg
addr16
fsubrs
xchg
ss
icebp
pop
sti
leave
cmp
and
aaa
dec
xchg
cmp
fdivs
pop
ss
daa
sub
jmp
ss
scas
lock
xchg
push
adc
and
pushf
or
mov
inc
addr16
jle
mov
sub
lods
jp
push
xor
adc
es
popf
arpl
mov
insb
push
sar
aam
dec
cmc
or
arpl
sbb
and
sub
test
shlb
mov
dec
adc
xchg
xchg
sbb
out
adc
or
and
xchg
test
jmp
bound
bndldx
push
cmpsb
mov
rclb
sbb
into
in
push
push
ja
mov
xor
mov
popa
in
sub
jg
in
pop
aad
push
sbb
pop
or
es
jno
xchg
add
push
push
adc
jl
into
jecxz
or
push
cld
jnp
stc
push
imul
inc
xchg
inc
jge
inc
movsb
in
cmp
imul
mov
fdivrs
adc
xor
cmp
mov
decl
jae
out
sahf
rolb
ret
xor
push
xlat
cltd
lcall
mov
out
add
sub
dec
add
cmpb
in
jmp
cmp
sbbl
ret
int
adc
inc
add
sbb
mov
out
cmp
rorl
sub
push
xchg
jp
xlat
or
and
xchg
loope
and
dec
mulb
cmp
sub
adc
repz
test
call
push
orb
jbe
sub
out
rorb
mov
fs
jle
mov
mov
pop
jb
cli
sbb
cmpsb
ljmp
sbb
mov
xlat
sbb
aaa
inc
adc
jnp
dec
and
add
sub
gs
imul
pop
das
add
imul
loope
shr
dec
push
sti
es
push
insb
vmovupd
outsb
jns
mov
call
jmp
roll
xchg
scas
or
inc
mov
cltd
jmp
mov
cmp
mov
adc
arpl
shll
out
ljmp
xor
cld
xchg
pop
mov
xchg
out
sub
sbbb
addr16
lods
pop
arpl
fisubs
enter
and
add
jo
je
sti
pop
scas
sbb
adc
ss
xor
cmp
dec
movsl
mov
mov
pop
cmpsl
icebp
jl
test
aaa
test
lret
and
and
cmp
rcrl
xchg
add
pop
inc
mov
loopne
mov
jle
cs
clc
flds
or
cwtl
jmp
inc
push
mov
aam
and
cmp
outsl
and
jno
sahf
xlat
outsl
xchg
and
icebp
jl
arpl
fcompl
sub
out
fs
fldcw
pop
xchg
pop
adc
xchg
test
push
daa
cmp
addl
cltd
mov
sahf
xor
push
gs
dec
jns
pop
out
sarl
dec
subl
jnp
pop
inc
adc
xor
out
jns
lds
mov
mov
jbe
lcall
outsb
outsb
movsl
es
fcomp
stos
cmovs
push
in
pushl
mov
pop
fsts
pusha
loop
call
mov
pop
adc
or
pop
jg
and
stos
mov
push
mov
lea
cld
adc
movsl
repnz
jne
mov
jnp
std
cs
js
arpl
push
jno
in
jo
mov
pop
inc
pop
jnp
sub
mov
xchg
jge
dec
stc
mov
adc
jnp
gs
in
cli
xchg
out
pop
or
mov
adc
les
mov
in
adc
add
adc
mov
test
es
push
cmpsb
les
je
ss
fldt
cmp
loope
sbb
dec
sbb
cmp
aad
mov
push
xor
jle
dec
push
fs
mov
fidivl
inc
ret
lea
movsb
adc
loopne
sti
leave
inc
cmpl
test
test
imul
cmp
xlat
xchg
in
adc
aad
gs
int3
push
mov
fimuls
fistpl
cld
scas
mov
fisttpll
sarb
xlat
xor
mov
leave
inc
and
or
cmp
mov
aad
sub
ss
and
sbbb
inc
cmpsl
mov
push
lock
dec
ret
lods
or
out
cmovl
test
push
test
lea
out
outsb
jbe
ficompl
fimuls
adc
ret
mov
push
hlt
xchg
or
in
hlt
dec
jmp
shll
fnstsw
lret
xor
add
insl
stc
mov
and
outsl
fsubr
fucom
push
je
call
or
mov
dec
out
jno
lea
lcall
sbb
xor
mov
lahf
loope
sbb
dec
add
das
mov
pushf
aas
mov
mov
int
jle
lret
clc
mov
jg
stc
jmp
and
inc
mov
push
adc
cltd
call
sub
sub
nop
and
mov
sub
jo
push
cli
ljmp
fiadds
sub
int
xchg
rolb
push
adc
mov
test
sbb
les
repz
ja
lcall
xchg
pop
scas
xor
jl
aas
loopne
out
push
inc
ds
lock
pop
loope
push
int3
test
pushf
and
add
clc
scas
jo
mov
dec
xchg
mov
imul
mov
mov
jge
push
jne
ss
sbb
daa
rorb
pop
pop
push
or
mov
cmp
pop
jge
pop
aaa
test
daa
add
ret
push
cmp
out
scas
mov
negl
dec
divl
adc
aas
dec
jg
mov
dec
stc
jo
cli
push
pop
lahf
mov
sub
cmp
xchg
in
addl
sarb
inc
sbb
push
xor
movsb
outsb
fsub
sub
sub
jmp
insl
jne
cltd
dec
in
cwtl
lahf
sub
push
pop
fimuls
add
mov
pop
jg
sub
aad
stos
push
adc
daa
lock
int3
loopne
iret
pop
cltd
or
mov
scas
fisttpll
dec
ljmp
dec
xorb
push
out
push
jbe
mov
adc
cmpl
inc
mov
jae
in
jp
sbb
and
clc
test
ficoms
int
or
testb
adc
mov
adc
mov
and
push
and
ja
adc
mov
add
inc
lock
sub
das
sbb
xor
jecxz
inc
popl
mov
jae
fwait
jg
or
repnz
mov
mov
pop
outsl
xorb
daa
inc
xor
cmpsb
rcr
pusha
les
cmpl
mov
js
mov
pushf
xor
out
inc
fidivl
push
mov
mov
mov
mov
mov
or
xlat
repz
rolb
std
or
mov
inc
jmp
mov
call
xchg
subl
mov
in
mov
arpl
dec
push
jbe
out
cmp
xorb
insb
and
addr16
stos
out
sbb
push
jp
jg
or
sbb
push
stc
je
aad
cld
inc
sbb
stos
jmp
and
rol
shlb
mov
enter
xor
mov
repnz
repnz
mov
push
sbbl
js
mov
sub
ljmp
jne
lret
lds
mov
xor
pop
mov
cmp
jae
imul
adc
or
sbb
inc
outsl
hlt
jne
cmpsb
xor
push
xor
dec
test
mov
xchg
ja
stc
int
jno
fwait
inc
imul
ret
ficoml
das
cmc
xchg
xchg
lahf
lods
jns
arpl
push
es
fisttps
popa
add
add
and
sbb
cmp
mov
jecxz
xor
cmpsb
mov
scas
stc
fmull
cld
daa
mov
push
fsubl
lea
rcrl
sbb
pop
and
sub
sbb
ljmp
dec
ja
aaa
sti
pop
push
add
inc
jo
popfw
pop
dec
inc
inc
jge
push
and
sub
push
dec
push
sarl
xchg
ds
mov
jb
jb
jle
les
cmp
pop
jns
cli
push
dec
jp
sbbb
out
in
mov
xorl
int
push
movsl
xchg
mov
les
clc
clc
or
cmp
xchg
bound
push
inc
xchg
aam
and
push
xor
add
aam
loopne
or
mov
lea
xor
adc
lret
mov
push
sub
jb
cmp
inc
jmp
in
jp
movsb
pop
arpl
outsb
divl
sti
ret
fmull
mov
ret
pcmpeqw
mov
pop
dec
daa
adc
out
addl
mov
loop
hlt
fisttpl
pushf
pop
adc
xchg
cli
std
push
mov
repz
xlat
dec
xchg
in
push
cmp
dec
mov
add
shll
jmp
push
jne
movsl
repnz
or
aaa
pushf
sahf
inc
loop
sub
lret
push
sub
xchg
pop
data16
mov
inc
test
sbb
loop
jo
xchg
fnsave
lods
and
mov
test
leave
sub
sbbb
inc
sub
out
inc
mov
pushf
loope
xlat
imul
pop
fadds
testl
pop
fildl
push
jne
push
pop
jl
nop
cmpsb
jns
jmp
cmpsl
or
mov
mov
dec
or
sbb
sti
sbb
das
pop
call
dec
dec
out
fbstp
lcall
add
jo
xchg
test
mov
and
push
sub
xchg
pop
sub
aam
outsb
inc
xor
lods
fldt
fdivs
xchg
jge
arpl
mov
test
fsubs
dec
filds
jecxz
push
mov
bound
and
add
and
scas
mov
les
cmpsb
push
add
sbb
xor
sbb
lea
cmp
jae
js
dec
ret
fimull
inc
orl
cmp
sub
cwtl
fisubrs
mov
rcr
es
cmp
jl
or
cli
repnz
jae
fidivrl
testb
scas
loop
pop
aaa
test
jp
repz
add
out
sbb
or
lds
das
jo
lock
jle
jbe
inc
out
ror
nop
push
push
lock
ffree
xchg
inc
xlat
fisttpl
fwait
aad
cli
and
outsl
ficompl
jae
out
outsb
rcll
xor
insb
mov
pop
cmp
inc
push
or
and
into
lods
cmp
fisttps
push
mov
xchg
insl
dec
scas
stc
pop
pop
pop
ss
insl
lret
iret
mov
cli
lds
in
xchg
sbb
stos
sub
jae
sbb
sbb
and
cmp
xchg
popf
dec
inc
jae
out
js
or
cmc
xchg
push
xchg
adc
jge
dec
inc
aam
lods
sub
xlat
push
rcrb
push
bound
pop
cmp
inc
xor
fld
dec
and
xchg
mov
loope
decb
inc
les
sbb
insl
push
push
popf
mull
cltd
add
mov
and
es
inc
fsubr
push
cmp
sbb
lds
fs
jo
cmc
test
popa
adc
xchg
mov
push
shll
fsubl
ljmp
insb
or
movsl
xchg
xor
sub
cmp
mov
sub
fnstsw
into
lea
cltd
scas
call
fldl
call
push
push
push
dec
mov
pusha
mov
lret
dec
xor
mov
inc
popa
nop
repnz
lcall
loop
popa
loop
xor
rclb
lret
fwait
mov
jg
mov
repnz
test
ljmp
out
lret
ret
hlt
jmp
outsb
es
and
cmp
lahf
sar
imul
pop
fwait
cld
add
jns
cmp
es
fwait
jge
int
push
lods
adc
or
inc
insl
arpl
jne
mov
movsl
sti
loop
das
add
jo
and
lea
dec
ret
pop
lret
je
inc
arpl
mov
sbb
adc
ss
sti
inc
repnz
les
pop
push
psadbw
dec
leave
sub
addb
jnp
pop
cmp
inc
fnclex
dec
adc
inc
loopne
push
aaa
sub
pop
sbb
aas
jne
xchg
sub
stos
jmp
cmpsl
andl
ficoml
pop
sbb
js
into
rcrl
sbb
imul
cmp
ror
dec
shrl
mov
idivb
addr16
aas
sti
popf
dec
xchg
sub
mov
std
adc
iret
fldenv
out
out
or
xor
aam
test
out
xor
and
add
insb
xor
mov
mov
daa
into
ljmp
adc
xchg
jecxz
or
in
in
or
shlb
mov
mov
nop
in
pop
cmpsb
dec
fisubl
movsb
sarl
outsl
jns
cmp
jle
adc
mov
inc
int
into
jecxz
jno
into
push
add
mov
jp
or
sarl
aaa
xorl
xor
mov
outsl
jo
hlt
mov
pop
mov
jle
push
fcomps
sbb
out
lds
and
jb
fcmovnbe
pop
lret
aad
out
mov
mov
push
loop
sbb
out
or
cmpsl
push
dec
dec
shrl
cwtl
in
push
mov
and
flds
fnstsw
dec
or
gs
xchg
fstpt
add
jne
lret
jge
int
mov
and
xor
loop
push
stc
push
sti
out
mov
ss
fldl
fsubs
dec
mov
nop
mov
loope
lods
stc
adc
cltd
xchg
cmc
ret
hlt
fldt
xchg
mov
sub
andb
je
and
cli
adc
jb
xchg
jno
and
clc
mov
dec
or
hlt
pop
lods
dec
and
mov
test
sbb
push
xor
cmpsb
lods
add
pop
push
and
lods
pop
or
cmpsl
leave
divl
sbb
pop
mov
enter
push
shlb
loope
inc
aad
push
dec
pushl
dec
inc
out
decb
fcoml
dec
mov
into
loope
ljmp
add
pop
dec
jmp
enter
ret
sbb
arpl
sbb
ret
outsb
and
or
mov
imul
jecxz
mov
fwait
repnz
adc
rcrb
mov
js
and
icebp
jge
inc
enter
mov
out
movsb
jo
stos
je
imul
lods
sbb
pop
das
push
movsb
rorb
inc
js
call
mov
orb
lret
leave
mov
cmpb
sub
fnstenv
jle
test
or
jmp
andb
inc
add
ljmp
nop
pusha
lods
out
cmp
fisubs
push
and
ds
stos
xchg
sub
cltd
test
sub
jle
cmp
xor
mov
dec
xchg
xchg
mov
push
shl
jge
inc
clc
pop
push
cmp
jmp
ss
dec
ljmp
nop
pop
stos
mov
imul
xchg
orl
pop
ja
pop
mov
ss
and
inc
lods
xchg
in
push
shr
idivb
es
lods
in
sub
pop
or
repnz
daa
adc
bnd
pop
into
shr
dec
xchg
sbb
out
mov
outsl
rcrl
jno
in
fistpll
repnz
jle
jl
fisubrs
iret
call
inc
sahf
repnz
mov
sbbb
add
pop
movsb
push
inc
movsb
roll
ds
loope
clc
lret
mov
arpl
sbbb
or
jo
out
cmp
dec
repnz
popa
or
xor
ds
lods
dec
fstps
jbe
add
cli
push
std
ss
stos
or
repnz
addl
ficompl
pop
pop
lahf
sbb
or
or
ffreep
mov
das
mov
cmp
jo
adc
cmpl
pop
cmpsb
cmpl
ja
test
rolb
jecxz
add
pop
jb
pop
sbb
lock
int3
stc
mov
jge
or
adc
ss
push
and
dec
dec
shlb
wbinvd
dec
shl
leave
dec
dec
lahf
sub
and
jnp
in
mov
xor
outsb
xor
icebp
cmp
sbb
mov
or
sbb
out
sarl
cmpb
sbb
adc
mov
stc
fcmovu
int
out
mov
xchg
fcmovnu
cld
loop
mov
into
scas
or
dec
dec
aam
fmul
pop
adc
enter
testb
xor
push
fcompl
arpl
push
bound
mov
lea
test
cltd
pop
jbe
mov
jge
mov
int
and
dec
dec
test
cwtl
scas
mov
cwtl
shrd
dec
data16
stos
popa
push
subl
mov
jae
icebp
mov
add
imul
and
dec
add
adcb
xchg
ja
jle
bnd
xchg
sbbl
movsl
add
pop
shrb
push
inc
dec
mov
bound
cmp
test
or
jl
adc
repz
pop
pop
addr16
mov
arpl
mov
adc
add
cli
ret
mov
sbb
repz
out
and
hlt
sbb
mov
test
int
out
sub
sti
pop
pop
in
pop
jns
xchg
xor
push
mov
xchg
in
mov
movsl
faddl
insb
mov
sbb
xlat
xor
sub
fwait
insb
xor
gs
mov
scas
out
jmp
mov
mov
cmp
fwait
cmp
sub
lret
cmp
xchg
sub
add
xchg
scas
pop
and
push
adc
out
adc
imul
lcall
mov
push
sbb
xchg
test
sub
sub
cmp
mov
xchg
lea
mov
add
jne
bound
jp
xchg
xchg
jnp
int3
push
mov
jne
das
jbe
lods
lret
mov
ss
aad
adc
aas
dec
sbb
push
push
dec
mov
mov
loop
cmp
cmpsl
loop
jmp
push
pop
sahf
test
push
sahf
ficompl
call
cs
inc
xor
shrb
mov
js
ret
loopne
adc
jno
cld
add
iret
dec
int3
nop
xchg
aam
mov
cmp
mov
jne
add
or
test
ret
xchg
xchg
filds
xchg
movsl
loop
shr
xchg
int3
mov
hlt
inc
dec
mov
inc
sub
data16
movsb
es
adc
xor
or
aad
xor
movsl
daa
sahf
test
adc
push
adcl
sbb
jne
cmp
dec
cltd
movsl
cmpsl
call
test
xchg
ja
mov
xchg
stos
push
cmp
fdivl
das
mov
mov
mov
cwtl
or
mov
sub
pushf
gs
das
test
popl
push
gs
daa
xchg
lds
in
in
lcall
ljmp
push
push
jbe
ja
movsl
mov
mov
dec
inc
outsb
ja
in
adc
sbbb
fst
jo
cmp
lods
dec
mov
mov
hlt
loop
mov
jae
sub
in
mov
xchg
std
lods
outsb
mov
fsubrs
adc
lahf
sbb
rclb
ljmp
sbb
push
pop
shlb
aam
dec
mov
mov
lcall
push
xchg
loope
lds
jecxz
sbb
in
mov
jnp
movsl
sub
xor
mov
sbb
xchg
int
pushf
mov
imul
imul
add
add
sbb
pop
push
mov
cmpsl
movsl
shrb
popf
xor
and
or
nop
or
orl
fdivl
insb
adc
xor
push
pop
jmp
insl
fldt
jl
sbb
cmp
sub
adc
xchg
dec
add
lret
xchg
lods
push
push
ljmp
xor
mov
mov
mov
test
in
lret
sti
dec
fs
sahf
jmp
and
es
jl
adc
cmp
daa
push
pop
popf
adc
cmp
jmp
jns
nop/reserved
add
out
pop
ljmp
cltd
fs
jp
sti
jo
sbb
rcrb
xchg
jns
jae
repnz
mov
or
movsl
ss
or
mov
lods
outsl
xchg
cmp
lock
cmpsb
sbb
jl
jl
jne
jne
and
jns
cld
int3
jge
mov
dec
mov
shll
inc
adc
mov
xlat
inc
push
stos
cmpsb
adc
inc
bnd
sub
dec
sbb
out
adc
fucomi
push
xchg
xchg
addr16
aam
pop
mov
fnstenv
outsl
es
inc
loopne
call
xor
lret
adc
mov
xlat
andl
std
ja
cmp
imul
adc
sub
jecxz
pop
mov
xchg
mov
aaa
into
push
daa
xor
mov
xlat
pop
outsl
or
out
push
cmp
xor
addl
fidivl
jg
mov
icebp
mov
lds
mov
lcall
add
adc
sub
movsb
sub
mov
sti
cwtl
cmp
mov
loop
dec
in
push
cmpsl
xchg
ja
cmpb
adc
fimuls
or
xchg
addl
std
rcr
push
mov
mov
pop
mov
mov
or
hlt
shlb
jb
sbbl
push
xor
das
push
mov
dec
lea
in
scas
and
leave
push
test
into
inc
in
xor
fidivrs
decl
dec
mov
adc
mov
push
xchg
orl
add
sub
sahf
push
ja
adcb
addl
or
repz
pop
xchg
or
cmp
adc
fstpl
and
jbe
ds
sub
enter
push
pusha
test
aam
xchg
cmp
fiaddl
pusha
arpl
jbe
pop
ret
push
adc
scas
mov
sub
push
pop
pop
loopnew
or
jnp
xor
andps
mov
in
push
aad
pop
cld
sti
mov
add
bound
fdivrl
xchg
mov
inc
in
mov
dec
lret
mov
es
filds
pop
mov
xchg
mov
cld
mov
xorl
data16
and
inc
lods
mov
dec
cmc
pop
push
les
rclb
fnstenv
xchg
xchg
mov
int
repz
lcall
and
mov
add
aam
lret
cmpsl
out
shlb
and
popf
andl
xor
adc
scas
cmc
or
stos
iret
pop
vandnps
cmp
add
test
test
push
clc
cmp
ja
insb
jecxz
test
dec
lea
push
and
mov
aam
jl
insl
test
in
insl
ret
pop
or
jmp
outsb
arpl
outsb
dec
mov
cs
push
outsl
adc
push
inc
inc
popa
in
mov
popl
mov
inc
or
lea
ss
add
popa
into
push
lahf
enterw
mov
fcoml
xchg
jbe
fstpt
inc
add
mov
lret
mov
scas
fnstsw
mov
sub
jmp
fcoml
dec
leave
dec
xlat
xor
mov
leave
xor
mov
cltd
jecxz
fcoms
inc
repnz
or
jbe
mov
iret
les
push
lahf
sbb
mov
daa
mov
sbb
rol
jge
inc
fildl
push
push
loope
fnstenv
or
add
xor
or
add
push
int
xchg
in
add
mov
inc
orl
inc
cmp
cmpsl
shrb
xchg
test
pushf
ret
cmc
in
fldcw
mov
mov
xor
adc
push
enter
cmp
lea
aas
add
sbb
popa
push
arpl
push
mov
into
mov
xor
mulb
out
jbe
xchg
pop
subb
adc
bnd
aad
sbb
repz
jmp
push
les
push
icebp
out
jg
fdivr
dec
les
mov
lods
outsb
cmp
xchg
scas
inc
mov
add
mov
ja
mov
fildl
in
lahf
mov
mov
scas
sub
jmp
sub
xchg
pop
out
cmc
push
fnsave
mov
mov
out
jne
jb
lret
push
into
push
jb
negl
dec
jo
aam
mov
add
xor
rcll
jno
icebp
enter
mov
ss
mov
std
cmp
pop
jle
lcall
lods
adc
adc
inc
inc
jns
adc
jne
inc
aas
cmp
rolb
mov
push
jge
ret
imul
or
in
xorb
xorb
imul
shlb
fbstp
jae
int
shll
fcoml
push
test
sbb
xlat
push
scas
in
xor
dec
jnp
fcomi
pop
outsb
hlt
xor
mov
cmpb
mov
shrb
cld
es
inc
addl
jb
scas
jmp
notb
pop
sbb
popf
cmc
pop
inc
les
out
addr16
jb
movsb
sbb
or
push
imul
dec
sub
dec
aaa
in
dec
sbb
and
lcall
lods
jo
out
mov
or
mov
xchg
mov
cmc
mov
sbb
inc
mov
sti
and
add
xchg
push
add
xchg
es
mov
in
adc
js
int3
imul
jae
mov
pop
je
cmp
pushf
mov
sub
mov
xchg
xchg
push
cmp
inc
test
mov
push
and
cmp
test
cmc
ja
xchg
test
cmpsb
stos
dec
test
in
sub
xchg
out
sbb
and
xchg
mov
mov
cmp
stos
xor
xlat
adc
sub
mov
xor
pop
push
pop
pop
int
imul
hlt
pusha
test
add
sbb
inc
pushf
pop
mov
jns
roll
cmpl
arpl
sub
imul
xchg
dec
push
cmp
add
loope
out
lods
cmp
gs
mov
cmp
lret
cmpsb
lods
mov
jg
shr
cwtl
add
mov
jge,pt
push
push
cltd
aaa
pop
cmpsl
xchg
mov
inc
dec
in
lds
inc
pop
push
cmp
mov
mov
or
outsl
repz
or
sti
pop
icebp
int3
stos
pop
xchg
lock
xchg
shrl
push
or
mov
push
jbe
add
jle
mov
push
sub
add
mov
mov
sbb
mov
call
push
cmp
adc
xor
into
stos
daa
cmp
punpcklwd
and
popa
out
mov
inc
mov
cld
or
xor
jns
cmpxchg
mov
mov
imul
sub
repz
les
punpckhdq
into
mov
testb
loop
repz
pop
dec
sbb
pop
iret
lahf
pop
sbb
sub
xor
add
xor
add
mov
sub
cmpsb
repnz
adc
jecxz
mov
and
movmskps
sbb
rcrb
push
add
add
clc
add
stos
shll
ljmp
pop
jno
sbb
int
clc
mov
add
repz
add
imul
jae
jo
push
std
xchg
inc
pop
clc
mov
leave
mov
and
xor
cmpsl
xchg
and
and
sub
sub
xchg
mov
and
int
or
cld
cmp
aad
push
xlat
out
popa
mov
mov
jnp
pushf
and
dec
in
cmpsb
xchg
fwait
or
push
and
hlt
jae
test
pop
mov
fistps
pop
jmp
jae
cmp
into
movsb
adc
sysenter
int3
idiv
stos
fiaddl
mov
out
jp
sbb
sbb
test
lods
ljmp
test
aas
mov
jns
cmp
or
adc
or
and
sub
cmp
cmp
aaa
js
mov
mov
and
shr
fldl
ret
addb
and
in
loopne
adc
push
sarl
and
xchg
xchg
and
pushf
sub
push
gs
sub
mov
call
or
test
dec
filds
add
and
jmp
cmp
dec
jp
mov
data16
sbb
mov
push
add
mov
add
mov
scas
pop
and
js
js
mulb
mov
loopne
stos
icebp
bound
mov
push
sub
cmpsl
adc
std
jl
pop
jnp
insb
mov
leave
sub
sub
jne
leave
shl
sbb
insl
fs
std
adc
leave
add
mov
lcall
repz
rolb
ret
out
cmp
and
mov
scas
pop
outsl
pop
cwtl
add
inc
cmp
jns
imul
or
and
leave
sub
mov
fistps
lea
ljmp
mov
test
and
ret
ret
or
jl
sbb
xchg
ss
leave
data16
out
mov
mov
mov
hlt
pop
shlb
dec
sahf
fimull
movsl
xchg
cmpl
jmp
scas
filds
pusha
ljmp
enter
sbb
data16
mov
aas
jae
lahf
adc
inc
and
subl
sub
scas
incl
pop
inc
jge,pt
jno
mov
pop
aam
icebp
jns
les
in
push
out
outsb
jp
mov
pop
jo
mov
or
mov
push
sbb
push
pusha
in
ss
jns
ja
cmpsb
dec
pushf
sub
into
sub
cmp
xchg
adc
adc
outsb
add
xchg
daa
lret
dec
mov
mov
inc
jns
into
fists
or
xchg
sbb
mov
xlat
and
and
xchg
sahf
and
mov
fsubs
movsb
cli
mov
add
bswap
mov
push
scas
ds
cwtl
push
push
and
fdiv
inc
add
push
or
mov
jnp
sub
jmp
repz
xchg
xor
mov
inc
test
or
add
adc
mov
nop
lds
movb
xchg
jo
or
clc
xor
iret
dec
and
inc
pop
push
sahf
push
pop
and
pop
pop
sbb
or
es
negl
sbb
mov
push
mov
out
adc
lods
jg
jp
fidivl
jl
lock
adc
and
sarb
jno
adc
mov
fbld
jo
lock
xchg
pop
jb
fcmove
push
push
push
dec
jecxz
enter
cmp
imul
pop
stc
test
add
add
icebp
mov
sbb
jns
xchg
jbe
mov
cmpsl
scas
sub
scas
lcall
sbb
mov
loop
cmc
cmc
sub
das
jb
jae
andl
jmp
dec
cmpsb
pushf
test
outsb
adc
xchg
lret
mov
mov
sbb
aas
sbb
mov
xchg
xchg
pop
test
mov
repz
inc
mov
cmp
mov
cmp
pop
inc
push
test
pusha
movsb
jns
insb
outsb
stos
lcall
aad
add
mov
lahf
in
cmp
jp
inc
popa
nop
mov
pop
test
ja
iret
mov
cmp
mov
arpl
dec
sub
mov
call
pop
mov
xchg
dec
repz
push
into
pop
or
data16
mov
imul
pop
ret
mov
mov
adc
subb
and
cmp
aam
enter
mov
int3
mov
imull
adc
add
sbb
xor
jp
push
pop
sbb
sub
shlb
xor
xchg
add
repz
adc
int3
js
repz
rcr
pop
jle
push
inc
mov
dec
adc
jmp
aad
fsubr
dec
jl
xor
mov
pop
mov
in
ja
repnz
scas
add
cmpl
repnz
subl
repz
arpl
js
pop
pusha
sub
gs
gs
xchg
mov
or
test
mov
loopne
push
lret
push
pop
pop
les
xor
test
test
sub
adcl
cmp
adc
cmp
push
fs
int3
clc
das
lcall
sbb
out
out
out
jno
pop
xchg
ficoml
sub
mov
xor
sub
repz
out
std
mov
lcall
inc
jl
enter
pop
push
cld
push
fs
arpl
xchg
mov
fxch
test
cmp
in
out
movsb
movsl
mov
cmc
mov
aas
enter
stc
mov
mov
iret
repnz
aam
jl
test
cmpsl
repz
movsb
pop
repnz
xor
ljmp
hlt
stos
outsl
je
jmp
mov
pop
fwait
idivb
push
push
in
adc
repnz
mov
mov
and
mov
cmpsl
pop
insl
jl
jns
lock
cwtl
mov
ja
mov
jle
pusha
icebp
subl
xchg
popf
lret
ss
ja
jb
sbb
mov
dec
dec
mov
in
jmp
into
sbbl
leave
mov
loope
pushf
dec
loopne
pop
dec
aaa
pop
test
mov
ret
sub
and
or
or
loop
adc
and
xor
scas
jnp
aad
xchg
outsb
scas
adc
fdivs
in
lea
out
pop
shrl
repnz
add
mov
mov
test
inc
out
nop
and
xchg
push
add
pop
jne
test
sbb
out
or
dec
loope
or
sbb
adc
mov
pop
decb
mov
popa
push
in
and
add
add
pop
imul
shl
dec
mov
mov
daa
in
or
xchg
pop
data16
outsb
popf
lock
mov
or
xchg
lret
mov
jl
push
cltd
dec
xchg
and
les
ds
pcmpgtb
jae
jb
stc
mov
cmpsb
je
dec
jae,pt
clc
dec
and
sbb
push
sbb
ljmp
movsb
mov
test
sbb
sbb
sbb
inc
es
pop
inc
scas
fldl2e
or
ret
dec
fmulp
push
nop
movlps
mov
ss
call
mov
in
jnp
xor
xchg
mov
mov
or
test
imul
mov
repnz
cli
inc
and
mov
std
hlt
cli
xor
dec
addr16
movsl
mov
rorl
dec
insl
xor
xchg
stos
stos
pop
notl
add
inc
add
xchg
dec
ss
dec
or
or
fstpt
or
shlb
out
dec
cli
jne
xor
pop
das
pop
mov
mov
sbb
mov
push
fstps
push
out
loop
shll
mov
pusha
sbb
pop
ja
data16
dec
test
pop
or
sub
lock
push
jp
nop
jo
movsb
shr
mov
jns
hlt
mov
xlat
add
ret
jg
idivb
xchg
and
test
dec
mov
xor
pop
cmpsb
xchg
add
inc
sar
dec
or
mov
scas
stc
mov
inc
cli
hlt
jecxz
imul
xchg
imul
mov
jne
mov
or
push
mov
push
les
cmp
mov
pop
push
adc
push
pop
mov
ret
xchg
testl
ss
ss
ds
cmpsl
in
sbb
xor
aad
inc
dec
dec
inc
adc
add
and
shlb
add
cmp
add
or
jmp
in
hlt
fcompl
pop
or
push
loope
jp
hlt
sub
sbbb
xchg
cmp
mov
sti
sbb
add
or
pushf
cmp
in
ret
dec
call
or
sbb
xor
test
add
and
testl
mov
in
mov
mov
pushf
or
xorb
mov
dec
push
jbe
mov
andl
inc
cmp
in
adc
iret
mov
jne
fnstcw
jp
insl
jae
enter
aam
outsb
pushf
add
mov
enter
rorb
pop
pop
es
aas
or
xchg
testl
loop
pop
xor
cli
jge
pop
iret
mov
sbb
mov
lcall
adc
pop
xchg
or
mov
gs
push
and
mov
sbbl
fstpl
addb
je
or
mov
loope
fisubrs
stc
cmp
mov
int3
ss
test
aad
dec
mov
fwait
sbb
mov
aad
insl
sbb
pop
fstpt
leave
shlb
test
xchg
es
mov
xchg
and
inc
inc
dec
inc
sti
fistl
pop
pusha
mov
loopne
push
mov
lods
sbb
xlat
cmovle
and
sub
aam
imul
rclb
test
push
dec
cwtl
dec
lods
arpl
data16
fisttpll
inc
jg
and
insb
adc
lret
mov
jle
arpl
aad
cs
jbe
cmp
arpl
sub
jbe
out
iret
call
daa
int3
xor
arpl
cmp
aam
cmp
cmpsl
insl
pop
mov
lcall
js
sar
xchg
lret
add
sub
push
mov
push
in
pop
inc
mov
sbb
jp
add
or
rcll
mov
and
push
andl
adc
jb,pt
adc
and
sar
pop
ja
cmpsb
mov
pop
mov
adc
cmp
aas
in
jns
mov
xchg
push
xchg
aaa
or
mov
sub
ss
xor
lock
mov
push
add
insl
dec
bound
add
roll
xlat
or
hlt
sbb
mov
sub
jns
xchg
loop
add
pushf
push
aad
in
xor
loop
mov
loop
loopne
aam
loop
out
jmp
cmp
xchg
adc
sub
mov
out
call
jg
mov
push
inc
xchg
testb
cmp
test
mov
cmpl
jne
inc
aam
iretw
daa
cmc
lea
in
cmpb
mov
data16
pop
push
cld
push
ds
lcall
mov
inc
cmp
pop
xchg
stos
mov
in
jae
jo
push
and
push
das
icebp
sub
and
inc
sahf
out
or
mov
jbe
or
adc
add
pop
cmp
loopne
scas
lea
in
mov
stos
scas
and
outsl
mov
xchg
lea
int
push
movsb
ja
pop
iret
scas
inc
pop
imul
push
xorl
jg
leave
sub
mov
add
mov
iret
scas
test
cli
addr16
and
xchg
dec
add
push
push
daa
inc
pop
jns
jns
jno
inc
ss
dec
ds
insl
je
ret
lea
mov
int
in
add
sbbb
sti
mov
adc
mov
cmc
bnd
lret
adc
xchg
incb
xlat
mov
jge
mov
in
addr16
jnp
rcr
ds
sub
mov
push
jbe
add
sbb
inc
pop
push
xchg
and
rcll
and
rdpmc
push
nopl
inc
xor
loop
cmp
push
dec
sbb
jno
imul
lea
subl
outsl
or
mov
lods
and
adc
popa
stc
fwait
mov
stos
cmp
leave
cli
outsb
arpl
pop
or
repnz
push
or
jae
mov
repz
inc
adc
shr
sti
imul
dec
cmp
add
sub
fimuls
das
mov
test
pop
aam
lcall
jg
xchg
pop
inc
loopne
sbb
adc
xor
lcall
fmul
or
or
pop
addr16
xor
call
sub
push
fsts
loope
or
lcall
mov
fstpl
cmpsb
shlb
push
fucom
pop
cmp
inc
jbe
pop
or
jb
push
fidivrs
push
jno
dec
jne
clc
jo
in
dec
insb
and
imul
leave
fsubs
lods
ljmp
imul
dec
jge
xchg
stos
out
andl
test
and
clc
test
jo
fsincos
xchg
inc
call
xor
sub
sub
fisubs
push
mov
icebp
dec
fcomps
jo
cmc
push
sahf
clc
xchg
dec
sbb
lds
adc
pop
test
or
jle
jns
cld
cmp
pop
mov
arpl
loop
lret
fimull
add
out
mov
fistps
dec
sub
in
mov
je
mov
pop
dec
inc
sub
adc
sarb
mov
pop
add
or
in
ljmp
cmp
daa
daa
loope
and
fwait
orb
pop
fmuls
sbb
push
or
or
int
fisttps
sahf
jecxz
hlt
mov
xor
mov
mov
scas
fs
mov
push
mov
inc
sbb
nop
out
cmp
andb
jmp
add
xchg
sub
es
pop
jp
sbb
imul
jp
jp
xchg
addr16
in
call
or
cmpsb
sbb
fimuls
out
jle
sahf
xorb
lret
sti
outsl
in
clc
fs
sub
cmc
add
js
adc
sahf
sbb
lods
daa
xchg
xorl
out
mov
cmc
in
xor
pop
xchg
aad
mov
nop
mov
arpl
cmc
pop
loope
leave
aam
push
fwait
dec
aam
adc
sbb
sbb
mov
mov
pusha
dec
out
out
cli
cmp
jp
mov
ss
jns
push
and
or
add
mov
bound
adc
jmp
xchg
jmp
jecxz
data16
jnp
jmp
test
popf
nop
lods
mov
sub
dec
enter
adc
adc
enter
pop
fldcw
test
rol
and
flds
idivl
popf
and
fbld
jns
cmp
sbbl
pop
leave
imul
lahf
out
or
fwait
dec
shll
out
addr16
rorb
rolb
in
pop
fmul
add
mov
sbb
test
cli
ficomps
leave
push
out
pop
ret
shll
mov
scas
dec
inc
pop
jno
nop
jbe
inc
add
lahf
fbld
dec
lea
mov
arpl
cli
push
sub
lds
mov
out
mov
xchg
aas
sahf
cmpsl
mov
cmc
push
rorb
ret
xchg
lock
xchg
add
xchg
add
mov
aas
and
push
add
sbb
pop
scas
addr16
adc
stc
inc
call
fsubrs
fistl
adc
shlb
in
das
mov
out
add
repnz
lock
ret
mov
pop
call
mov
pop
cmp
sahf
insl
leave
lret
or
movsl
lcall
daa
fidivrl
aas
popf
add
inc
push
sbb
in
push
iret
imul
mov
test
add
loope
mov
xchg
data16
inc
adc
xchg
loop
inc
adcl
movsl
jo
cmp
cmp
inc
shll
jae
popf
test
cmc
arpl
je
lods
aam
xchg
mov
xor
jnp
int
mov
pop
dec
add
mov
loop
test
pushf
dec
jbe
out
add
rorb
imul
icebp
cmp
adc
push
push
fistpll
out
sti
mov
cmp
fimull
xchg
or
lods
outsl
rcrb
jno
mov
inc
pop
repnz
mov
out
pop
lret
push
jb
xor
out
cltd
imul
jge
adc
mov
xor
aas
jne
out
loopne
ljmp
hlt
or
mov
adc
jne
andl
mov
out
xor
mov
push
jle
in
add
push
outsb
adc
adc
arpl
add
sub
test
pop
faddl
sub
in
sub
add
fwait
cmc
popa
mov
cmc
jb
leave
cmp
std
sbb
jne
movsb
mov
xchg
scas
rep
movsb
movsb
mov
push
adc
into
mov
test
cmpl
xchg
std
jae
dec
sub
adc
pop
repnz
repnz
add
dec
pop
into
and
pop
sub
subl
pop
xorb
fiaddl
rorb
fs
jp
test
psrlq
lret
xchg
lds
and
in
jg
int
ljmp
mov
ret
out
stos
into
inc
dec
sub
repz
xchg
into
or
mov
push
push
adc
hlt
lods
loop
out
enter
je
movsb
icebp
and
sub
rol
rorl
xchg
loop
dec
mov
mov
add
and
stc
sub
sub
subl
xor
inc
mov
or
push
sahf
ret
pop
push
clc
inc
mov
and
jg
adc
jmp
stos
adc
mov
jae
loop
out
repz
in
pinsrw
loop
shll
lock
jp
inc
stos
pop
repz
dec
push
call
xchg
lds
xchg
idiv
shll
dec
insl
mov
pop
bound
shll
jmp
add
iret
jbe
pop
stos
inc
leave
ja
int
and
cwtl
loop
shrl
imul
ret
pop
lock
enter
loop
cld
mov
push
sti
inc
in
push
out
rorl
dec
mov
mov
lock
mov
in
mov
sub
push
or
fimull
pop
ss
into
cmp
lret
pop
outsl
pop
cmp
mov
pushf
inc
dec
dec
adc
add
es
cmp
test
lret
lods
xor
cmp
pop
pop
popa
sbb
pop
adc
movsl
pop
cmc
mov
loopne
cmp
add
cs
repz
cmp
xorb
xchg
das
es
mov
xchg
int
cltd
xor
pop
push
add
imul
jmp
xor
sub
xchg
or
xchg
jo
shlb
xor
jo
stos
out
dec
dec
xchg
aad
loop
add
in
jl
repz
jbe
negb
jle
jb
pusha
pop
mov
sub
out
add
cmc
lret
or
and
add
push
mov
cmpl
cmp
xchg
std
jae
in
push
lods
inc
nop
andl
add
push
or
paddsw
sbb
into
or
xor
hlt
mov
add
imul
stos
dec
hlt
mov
cmp
rcr
imul
or
stos
cmp
jle
add
ja
sub
adc
mov
push
or
inc
jle
mov
cmpsl
or
cli
dec
add
loope
mov
into
fisubl
pop
pop
int3
mov
shrb
mov
push
popl
push
stc
mov
cmp
inc
mov
xor
outsl
mov
lea
mov
adc
jecxz
xor
mov
inc
lods
loopne
scas
mov
jle
test
imul
test
cs
aad
or
xlat
pop
mov
pop
dec
into
movl
mov
sbb
jle
mov
xchg
jp
sub
mov
jae
sbb
push
mov
jns
std
dec
call
loope
cmp
push
shrl
xlat
cli
pop
in
adc
stc
cmc
sub
sub
and
cmp
insl
hlt
sub
test
cmp
adc
dec
out
pop
fdivrs
movsl
mov
jbe
pushl
aaa
scas
out
add
cltd
and
sti
lret
lods
push
test
mov
inc
jno
pop
and
adc
jl
lret
ffree
flds
xchg
jb
cli
int
jns
lea
pop
cmpsl
dec
xor
js
inc
cmp
or
jl
out
add
push
test
or
in
cmpb
dec
inc
xchg
arpl
fstl
mov
lods
inc
xlat
xchg
push
std
stos
gs
test
lea
pushf
test
mov
push
mov
add
jecxz
cmp
or
popa
mov
and
ja
dec
xorb
push
sub
stos
shrb
inc
pop
mov
out
icebp
std
mull
or
add
sub
jns
mov
lea
gs
mov
inc
hlt
pop
sarl
jmp
push
int
js
aas
popa
add
je
pop
fmuls
rcrl
lea
jecxz
mov
lock
jecxz
xchg
repz
sbb
adc
lret
dec
sub
xlat
xchg
and
icebp
mov
pop
xchg
xor
mov
xchg
cmp
imul
mov
lcall
stos
mov
sti
and
pusha
xlat
cmpsl
jmp
rclb
mov
xchg
imul
push
pop
xchg
std
out
jmp
je
stos
jb,pt
mov
push
arpl
pop
dec
int
shrl
cs
mov
incl
dec
cmpsb
xchg
mov
pop
popa
sub
dec
ja
std
imul
pushf
push
popf
mov
dec
fmulp
jno
push
fistpll
rcr
test
jo
sub
bound
pop
dec
pop
std
pop
ficoml
arpl
pop
js
xchg
jge
ljmp
pop
inc
je
popa
stos
data16
lcall
dec
sbb
inc
or
fwait
outsl
cmc
pop
in
inc
sbb
pushf
in
jp
addr16
loop
cmpsb
xor
xlat
mov
call
inc
add
inc
repz
xor
or
ss
push
lea
xchg
aad
sti
cmp
loop
dec
test
in
negb
rclb
hlt
fisubrl
out
jl
pop
adc
add
sub
mov
inc
xlat
dec
nop
push
cmc
or
sbb
iret
addr16
lock
daa
mov
lcall
mov
movsb
adc
sbb
fisubs
out
leave
jmp
pop
jo
shlb
add
out
xchg
dec
mov
pushw
pop
imul
xlat
enter
sti
aad
lcall
xor
dec
pop
shlb
xchg
les
push
arpl
lea
sti
adc
addr16
sub
pop
jecxz
cltd
lock
in
in
test
enter
ljmp
int3
je
call
fstpl
jb
in
ret
enter
and
stos
clc
push
cmp
fsub
fld
cmpsb
xchg
push
in
mov
pop
add
sbb
in
leave
inc
sarb
outsl
xor
repz
jnp
mov
jb
mov
loopne
cs
ret
in
sbb
xlat
jbe
lods
pushf
add
int3
sbb
lahf
imul
dec
sub
xchg
jbe
sahf
mov
cli
sti
in
lahf
mov
inc
cs
test
stos
jne
sarb
fisttps
inc
daa
fisttpl
cltd
test
mov
dec
int3
int3
and
mov
and
inc
xor
test
and
adc
icebp
lods
cmp
mov
lcall
ss
je
inc
daa
movsl
fadds
mov
loopne
push
jae
push
rsqrtps
in
daa
cmp
call
data16
fildl
movsb
and
xchg
inc
out
or
jbe
cmpsl
inc
in
pop
cmpb
stos
xorl
mov
sub
es
mov
dec
dec
leave
mov
into
imul
aas
mov
add
stc
jg
je
frstor
adc
repz
arpl
xor
push
pop
cwtl
or
mov
pop
enter
and
mov
sbb
arpl
add
xor
jp
rcrb
sub
mov
inc
pminub
fs
push
sbbl
shll
shrb
inc
sbb
pop
xor
mov
movsl
mov
sbb
push
inc
add
add
clc
jmp
mov
pop
mov
push
push
xor
cli
add
pop
sub
fnsave
sahf
cmp
addr16
ljmp
xchg
imul
shlb
loop
lods
inc
pop
mov
dec
mov
ja
outsb
cmp
inc
rcrb
dec
and
sub
adc
cmp
xlat
cmpsb
popa
mov
xor
jmp
or
xchg
shll
jns
inc
rolb
in
aam
push
jb
rcll
pop
movb
fisttpl
xchg
idivl
or
clc
cmp
cwtl
push
clc
shr
push
adc
lcall
pop
mull
bound
add
shrb
das
inc
or
mov
pop
popa
gs
adc
cmp
push
aam
dec
xchg
test
add
mov
jno
and
ss
pop
rorb
out
inc
cmp
outsl
ret
xchg
test
pop
aam
adc
or
outsl
outsb
leave
enter
xchg
hlt
call
mov
mov
out
mov
movq
jnp
push
nop
insb
sbb
imul
add
add
stos
iret
cmp
inc
inc
mov
es
jge
hlt
bound
sbbl
cmpsb
in
jbe
jmp
test
xchg
out
pop
testb
stos
cmc
dec
push
pop
pop
pop
mov
mov
push
cmp
mov
shrl
test
das
stc
push
subb
call
arpl
dec
fstp
loop
int
and
repz
das
lret
adc
fnstcw
inc
cmp
adc
inc
clc
repz
clc
mov
jns
lea
pop
jmp
pop
jecxz
sub
mov
ljmp
lods
stc
cmpsl
gs
mov
jge
arpl
jl
inc
sub
pop
out
adc
xchg
push
fs
pop
movsb
push
pop
xchg
pop
mov
mov
iret
xchg
mov
mov
sbb
repz
daa
sub
in
lcall
icebp
dec
pop
push
les
jecxz
fwait
lret
lret
cmp
mov
mov
repnz
push
subl
inc
jne
repz
iret
mov
push
pop
in
nop
pop
lds
jl
dec
fcmovne
sbb
loope
icebp
cmp
push
sar
mov
dec
pop
test
pop
cmp
inc
jbe
scas
inc
mov
adc
fldt
icebp
in
sbb
jp
xlat
bound
mov
sbb
push
imul
jns
add
sti
aad
adcl
into
in
cmp
mov
xchg
ret
js
mov
adc
xchg
cmc
mov
xchg
negb
test
sub
addr16
arpl
add
popf
in
fstl
clc
popa
xor
imul
inc
test
sbb
push
or
adc
cmp
lods
inc
push
stos
inc
loop
les
ret
cmp
call
sti
pop
dec
lods
jbe
loop
rorl
adc
in
mov
mov
nop
sub
lds
mov
inc
mov
popf
inc
fistl
enter
mov
adc
test
xor
adc
shl
dec
jl
fucomp
lcall
cmc
add
sbb
sbb
cltd
adc
xor
mov
adc
cmc
iret
and
jae
inc
mov
xchg
inc
push
sbb
lahf
into
push
rcr
dec
inc
lret
cmp
sub
push
add
sbb
xchg
pop
mov
cmc
push
hlt
dec
push
cmpsl
cmp
sbb
dec
push
xchg
or
in
clc
leave
cmp
push
mov
aam
dec
aas
mov
sub
repz
fdivs
and
cmp
ret
push
inc
sarl
and
dec
fwait
inc
push
in
xchg
test
cli
adc
in
sub
jle
xlat
adc
push
adc
mov
xchg
jb
movsb
ret
mov
pop
inc
outsb
jp
push
fnstsw
inc
in
and
xor
mov
push
or
jb
pop
mov
roll
sbbb
jl,pn
mov
jge
jmp
lcall
mov
xchg
enter
pusha
test
ja
add
jbe
inc
rcl
add
jl
divl
shll
js
scas
int
icebp
add
daa
add
loope
shll
and
out
fiadds
jp
pop
data16
push
stos
fldt
lods
pop
mov
sti
mov
imul
add
sarl
inc
sbb
push
mov
aaa
lahf
cmp
and
xchg
or
test
xor
outsl
popf
nop
sbb
sub
or
or
push
mov
cli
jecxz
sbb
shrl
je
add
adc
push
dec
dec
xorb
xchg
cmc
pop
les
sbb
xor
lea
dec
pop
cmpsb
push
fdivrl
repz
daa
daa
mov
sub
bound
xor
cmp
bound
fdivrs
and
pop
xchg
lods
mov
stos
loopne
mov
and
in
mov
xchg
dec
or
clc
dec
pushf
and
shlb
loope
push
fidivl
in
and
out
jae
pop
cmp
xor
push
dec
fs
xor
es
pushf
loope
and
dec
inc
imul
adc
pop
jp
dec
add
sysenter
enter
leave
cmc
adc
jmp
xchg
cs
shrb
nop
in
or
xchg
add
dec
popa
xor
mov
mov
adc
ret
and
pop
add
pop
iret
add
imul
pop
inc
std
popa
sub
inc
data16
add
jmp
add
mov
stos
mov
das
js
xor
sbb
mov
iret
pop
fistpll
ret
js
xchg
push
jp
mov
insb
lods
push
xor
ljmp
bound
inc
sbb
add
mov
fwait
cmc
sbb
inc
push
cltd
into
push
scas
sbb
aas
enter
push
shll
jmp
icebp
adc
mov
dec
mov
in
stos
mov
inc
lods
pop
jae
lea
jbe
jne
rcl
fistpl
das
leave
cmp
mov
or
fbstp
lret
repz
sbb
repz
std
test
mov
add
push
adc
nop
cmpsl
aas
out
cmp
loop
cmp
cwtl
je
mov
lahf
mov
mov
push
mov
into
push
xchg
or
adc
popa
sub
shrl
out
and
outsl
loope
jle
cltd
sarb
jg
jnp
xchg
imul
in
dec
mov
dec
ds
scas
mov
push
and
lret
push
ja
push
stos
negl
sar
adc
pop
push
cld
cmc
test
and
cmpsb
cmp
or
fcmovu
hlt
sbb
stos
jmp
stc
scas
mov
push
lahf
lock
xor
mov
stos
sub
pop
pop
or
in
pop
or
adc
add
sti
punpckhdq
cwtl
or
int
cli
imul
add
jg
sub
cmp
and
cmp
dec
mov
fsub
and
dec
dec
aad
imulb
leave
imul
fbstp
xor
sub
dec
pop
pusha
jl
cmp
and
arpl
cld
pusha
pop
add
or
gs
adc
pushf
mov
fldcw
jb
or
and
nop
cmp
aas
or
jae
sbb
mov
dec
xor
or
dec
mov
mov
dec
cmp
adc
test
or
mov
test
push
jb
imul
faddl
mov
sahf
mov
pop
jecxz
divb
pop
ds
nop
test
aaa
push
inc
sub
lea
iret
jl
jle
cld
lods
or
fidivrs
push
mov
push
lock
lods
mov
subl
sbb
pop
dec
inc
jmp
unpcklps
jb
aaa
out
int
xor
sbb
pop
pop
sbb
mov
xchg
xchg
or
cmpb
mov
dec
push
mov
mov
int
mov
std
and
lds
fwait
out
cmp
test
mov
scas
divb
or
cs
sahf
jbe
rorb
adc
js
fdivrs
mov
inc
push
out
jmp
sbb
ljmp
add
pop
test
adc
or
mov
in
cld
or
push
cmp
aam
jmp
orb
les
mov
dec
fs
fisttpll
and
mov
add
aad
xchg
and
sub
xchg
fstpt
out
jmp
xor
icebp
outsb
or
ret
cli
jg
push
push
mov
outsb
sub
lahf
rorl
pop
xor
jmp
xor
in
sbb
jae
fstps
imull
das
sbb
lret
leave
xchg
inc
jb
daa
xor
adc
ficompl
adc
mov
loope
out
mov
fsubrs
cs
dec
jle
call
sub
push
add
test
cmp
pusha
sub
in
push
out
aas
outsl
mov
fwait
mov
sub
das
lahf
jns
mov
out
mov
and
imul
lret
inc
out
shl
pusha
push
and
scas
sbb
sarb
xchg
orb
cmp
cmc
push
mov
das
pop
sub
ljmp
jp
xchg
inc
stos
sbb
fstps
je
imul
mov
or
add
call
cld
jae
mov
lahf
inc
insb
hlt
xchg
in
mov
cmp
mov
sub
jle
lahf
adc
mov
mov
sub
cmp
into
mov
lods
fucomip
xor
dec
icebp
xchg
notb
xor
ret
std
ds
cld
pop
mov
cmc
jo
fwait
lods
push
dec
icebp
xor
in
aaa
shrb
ret
decl
mov
dec
or
gs
and
shl
not
or
incb
fbstp
adc
sub
sub
dec
cli
or
push
jne
sbb
jmp
out
sub
inc
inc
mov
and
cld
fdivr
ss
test
add
in
push
fs
dec
and
inc
and
loop
xchg
into
pusha
inc
out
jae
sbb
and
repnz
gs
rorl
cmp
cmp
mov
push
icebp
test
loopne
int
loope
jg
sub
xor
mov
orl
sti
cmp
sub
dec
imul
pop
sar
jg
push
xor
out
out
lret
jmp
sbb
pop
xchg
pop
out
jbe
push
es
and
lods
aaa
sub
call
jb
loope
mov
sbb
xchg
add
push
daa
cld
jns
xchg
xchg
mov
sbbl
popf
scas
jmp
pop
addr16
mov
inc
call
push
mov
sbb
mov
cmp
aam
and
cmp
cwtl
decb
mov
loope
ret
jbe
aam
das
pusha
or
push
jno
insl
xchg
mov
mov
dec
lods
lds
adc
pop
into
mull
mov
pusha
adc
xchg
xchg
jne
mov
cmpsb
test
shlb
pop
jl
pop
cmp
mov
push
adc
pusha
cmp
divl
into
add
icebp
fimull
add
adc
jl
xchg
add
jp
add
push
and
scas
cld
push
sub
jnp
xchg
imul
scas
pop
jns
iret
jb
dec
mov
xor
les
fldenv
ljmp
mov
dec
shll
inc
hlt
xor
jns
ret
cmc
imul
push
cmp
adc
repz
cmp
loop
jmp
cli
mov
mov
lods
pop
addl
adc
dec
mov
shr
adc
push
pop
rolb
sbb
jmp
scas
loope
cmpsb
xchg
shlb
sbb
loopne
out
loop
jnp
xlat
stos
les
jae
cmpsl
inc
push
sbb
dec
dec
out
push
lahf
sbb
repnz
xlat
push
cld
leave
pop
ds
imull
into
enter
cmp
xchg
jb
mov
mov
jnp
scas
xlat
xor
popf
nop
sub
rcrb
cmpb
mov
fsubp
and
dec
addr16
hlt
add
xchg
xchg
push
cltd
xchg
rclb
xchg
or
int3
xor
xchg
and
pop
jl
ror
cmp
mov
imul
in
subl
out
pusha
adc
ret
cli
inc
mov
imul
mov
fwait
pause
sub
sub
rcrl
lods
push
cmp
xchg
std
das
test
cmpsb
call
leave
out
std
ds
dec
cmp
xchg
lret
movsl
fistpl
mov
jl
ljmp
cwtl
test
xchg
data16
hlt
and
test
shr
btl
mov
imulb
xchg
lcall
inc
scas
xchg
pop
xchg
sahf
mov
mov
mov
xor
and
pop
adc
in
xlat
in
scas
push
add
jge
frstor
mov
loopne
aaa
jo
lcall
or
and
xchg
jae
jne
and
inc
out
movsb
lcall
fwait
movsl
je
fcoms
out
sbb
pop
imul
cli
inc
into
pop
pop
cmp
mov
stos
xor
jmp
fs
pop
lea
xchg
mov
pop
mul
fwait
lcall
pop
cltd
cld
insb
cmc
mov
pushf
xchg
ficomps
js
mov
pop
fmul
or
out
mov
dec
pop
sub
xchg
adc
jecxz
or
pop
jg
pushf
add
push
push
add
or
popa
sti
and
inc
out
cwtl
or
repnz
imul
mov
mov
and
mov
leave
sbb
sub
pop
or
jbe
addl
fs
xchg
xchg
pusha
gs
mov
in
dec
fadds
cmc
pop
cmp
dec
iret
loop
sbb
sbb
popa
or
sbb
mov
sbb
jmp
xchg
aad
cmc
stos
stos
loope
imul
aam
fadds
not
iret
mov
cwtl
push
sahf
movsb
mov
and
pop
inc
pop
std
xacquire
jmp
pop
ss
movsb
aaa
mov
or
inc
in
and
je
inc
pop
sub
push
adcb
pushf
xorb
adc
cmpsl
sub
aaa
jmp
mov
mov
adc
inc
sub
sarl
push
pop
subb
fsubp
dec
daa
or
push
cmpsb
xchg
lea
pop
adc
repz
loopne
jns
fldcw
rcrb
shl
out
pop
add
fdivp
cmp
jle
sub
in
cld
test
jge
mov
popf
xchg
lret
xchg
cld
push
dec
sub
clc
cmp
stos
or
cmp
les
dec
pop
push
and
js
roll
lcall
inc
rcrl
pop
sbbl
lods
push
add
sub
ja
es
ljmp
icebp
subl
push
mov
hlt
xor
rcl
js
call
jg
and
negb
outsb
mov
jg
popf
push
orb
xor
or
mov
inc
add
sbb
std
movsl
fists
xchg
push
in
ss
pop
in
jecxz
adc
add
pop
pushf
loopne
stos
cmp
push
cmp
or
adc
push
xchg
lds
inc
mov
repz
fxch
mov
mov
inc
int3
jmp
sbb
fnsave
cwtl
cmp
inc
mov
or
inc
lods
rcrw
cwtl
mov
or
jbe
xchg
mov
cmpb
bound
adc
test
inc
sbb
rorb
sbb
test
icebp
adc
cmp
movsb
stos
and
xchg
mov
adc
int3
xor
xor
out
mov
enter
enter
test
sbb
sub
mov
mov
pop
and
cmp
fldcw
les
mov
in
pop
or
add
xchg
xor
mov
mov
or
sub
dec
cmp
mov
fbstp
sub
mov
push
sub
push
inc
lock
fadd
sbb
imul
lods
test
lea
push
incl
daa
outsb
mov
sbb
adc
and
and
repnz
fistpll
pop
sub
stc
popf
ds
mov
daa
xchg
icebp
mov
pop
cmc
or
xchg
cmp
push
das
in
cmp
imul
loop
shrb
sbb
fistpl
jae
inc
les
xor
xchg
jno
in
pop
xchg
pop
add
xchg
into
push
pop
repnz
stc
scas
xor
aam
dec
pop
jg
shl
stc
mov
pop
pop
insl
aas
pushf
jb
mov
xchg
popf
push
sub
jmp
dec
fsubrs
xor
or
loopne
pop
cmpsb
push
jmp
mov
out
xlat
ret
shrl
sub
aam
sti
push
fwait
dec
rol
inc
das
or
or
mov
gs
pusha
or
lods
inc
js
ds
loopne
cmp
aaa
lods
stos
add
leave
iret
push
shll
fwait
adc
nop
push
in
ret
lret
aam
icebp
jge
sub
xor
mov
add
pop
outsl
dec
movsl
les
stos
mov
lods
rorl
lock
or
mov
push
in
xor
dec
push
mov
js
jne
cmpsb
cmpsb
push
shrl
cli
lea
inc
fmul
and
aas
dec
push
or
fwait
xor
jns
sti
enter
xor
pop
jmp
lods
mov
dec
and
imul
jae
out
dec
sbb
shrb
or
aam
shl
scas
pop
push
mov
pop
stos
clc
cmp
repz
jnp
jno
pop
dec
fldenv
pop
xor
add
gs
pop
push
gs
int
in
inc
dec
push
pusha
movsl
sub
out
in
or
mov
pop
popf
shll
test
lahf
xchg
or
ljmp
out
test
stos
sahf
subb
adc
cli
add
pop
or
fiadds
jmp
lock
std
outsl
adc
jo
pushf
fisubs
andb
jge
cld
in
in
inc
dec
dec
fcmovnbe
dec
push
mov
cld
mov
outsb
jmp
icebp
je
repnz
jmp
fstps
fdivl
in
andl
pop
sbb
mov
scas
xchg
sub
mov
xchg
lret
and
inc
out
push
rorb
jo
dec
mov
fwait
add
mov
lds
pop
mov
in
fildll
negb
dec
dec
push
sahf
adc
mov
fs
inc
mov
xlat
ret
mov
cmp
leave
sbb
add
mov
cmp
pop
cmc
xor
mov
mov
cmc
sahf
jmp
inc
leave
inc
mov
add
add
pop
stc
mov
inc
int
std
aam
imul
int3
sub
or
mov
insb
leave
or
cmp
xchg
xchg
adc
push
lret
xchg
sbb
add
stos
scas
xor
or
sub
lret
xlat
stc
mov
stc
pushf
mov
sahf
jp
int3
pop
out
aaa
adc
mov
in
cltd
pop
stc
and
in
dec
popa
add
stc
insb
mov
xchg
or
jnp
js
push
or
inc
es
xor
cmpsb
ret
fisttpl
xor
cltd
jmp
dec
push
sbb
cmp
mov
push
adcl
mov
mov
mov
loopne
dec
mov
cmpsl
cld
inc
jb
fdivr
sub
cmp
push
nop
pushf
les
pop
cmp
mov
repz
jns
or
pop
xchg
ret
loopne
adc
sub
and
pop
or
and
mov
cmp
enter
pop
push
gs
movsb
lret
inc
call
dec
in
mov
mov
jmp
cmp
or
push
imul
lret
xor
cmp
adc
or
jae
inc
jecxz
loope
sbb
sahf
pop
call
shlb
fstpt
mov
jmp
push
adc
test
push
rol
jbe
pop
pop
adc
push
xor
adc
add
ja
ficomps
int
inc
fistpll
mov
pop
jecxz
pop
and
cmp
xchg
cmp
jo
or
adc
out
inc
es
push
mov
jl
cwtl
mov
ror
out
popa
xchg
and
adc
pushf
inc
fcomps
xor
xor
shr
je
xchg
or
push
xor
in
dec
leave
sub
sub
xchg
js
in
lods
pop
or
inc
push
cmpb
push
cmpsb
leave
jb
fwait
xchg
or
enter
jbe
call
decl
jp
out
pop
and
push
cmpsb
fmuls
cmovne
inc
insl
les
es
sub
dec
shlb
fdivrl
dec
jl
jbe
sbb
xchg
sub
mov
rcrl
dec
in
pushl
jge
dec
inc
lea
adc
call
aas
sub
cmpsl
push
sub
cwtl
inc
inc
pop
add
insl
ds
cld
mov
dec
dec
int
popf
mov
cmp
and
pop
fldcw
pop
jl
cs
loop
hlt
xchg
push
cmp
jnp
adc
in
out
sub
xchg
cmova
mov
stos
xor
rcrb
mov
mov
filds
xchg
hlt
inc
cltd
xchg
testl
xchg
adc
sub
negl
into
imul
lahf
xor
adc
dec
in
jl
scas
mov
sahf
sub
call
int3
push
leave
hlt
xchg
and
test
fisttpl
mov
lock
hlt
jmp
pushaw
adc
xor
test
fstpt
sbb
inc
mov
pop
cmp
push
gs
jg
or
stc
dec
addr16
ficoml
adc
mov
aaa
lods
nop
jg
mov
shrl
dec
mov
cmp
push
movsb
test
test
sbb
pop
jmp
sarl
push
push
test
je
mov
mov
sbb
das
cmc
xchg
mov
mov
icebp
mov
push
daa
ljmp
cwtl
sbb
movsb
in
cli
xchg
mov
sub
outsl
loope
outsb
stos
stos
out
mov
mov
and
inc
lods
loopne
jns
fwait
cmp
aad
xchg
mov
repnz
aaa
data16
cmp
pop
test
sarl
or
inc
stos
imul
icebp
mov
xor
lret
lods
mov
enter
loope
and
xchg
cld
sbb
daa
pop
and
mov
dec
pop
repnz
nop
movsb
clc
push
pushf
jns
outsl
lcall
dec
lods
aad
xor
or
push
pop
push
xor
xchg
xchg
adc
out
loopne
pusha
loopne
icebp
xlat
mulb
js
and
pop
fdivrs
rorl
pusha
inc
pop
pop
test
adcl
jo
jecxz
out
sbb
and
jbe
mov
sbb
cmp
sbb
repz
popf
or
dec
popa
jle
movd
sti
das
add
xchg
xor
inc
sbb
rol
and
mov
pushf
cmp
fdivs
movsb
cmp
rorb
mov
popa
ss
adc
lods
or
mov
jns
outsl
mull
lds
xlat
push
xchg
mov
test
fimuls
mov
pop
cmpl
test
repnz
mov
pushf
leave
out
mov
arpl
cli
push
sarb
xchg
cmp
xor
sub
and
jno
or
cmpsl
shlb
push
dec
push
dec
and
lock
jno
or
push
sub
inc
dec
adc
pop
scas
xor
sub
shlb
dec
mov
mov
xchg
jecxz
pop
jp
out
cli
sbb
dec
adc
insl
cmp
test
and
out
sub
cmp
scas
neg
jo
push
sbb
cmpsl
cmp
jo
xor
jg
add
test
outsb
lods
push
sbb
ljmp
xor
dec
test
pop
add
test
lock
sti
adc
test
repz
pop
lods
repnz
mov
add
xor
daa
repnz
test
adc
lahf
call
mov
mov
adc
push
ljmp
fists
leave
jnp
xor
jg
rcr
jo
pop
aam
sarb
in
ljmp
clc
test
ficoms
repnz
ret
pop
adc
dec
imul
adc
in
and
cwtl
pop
out
xchg
test
cmpsb
loop
mov
pop
xlat
jle
jne
push
out
test
sub
mov
leave
enter
xor
inc
stos
and
inc
push
inc
lret
jg
xchg
inc
or
lret
push
sbb
pop
jge
repnz
out
cmp
jle
popa
sub
movsl
rcrb
adc
mov
out
lret
fiaddl
fwait
inc
out
xchg
jmp
imul
test
adc
lea
aas
add
mov
pusha
inc
popa
push
inc
xor
je
out
jle
outsb
pop
add
sub
xor
sbb
inc
push
inc
ret
adc
fs
or
outsl
xchg
lock
mov
cmp
or
in
mov
lret
mov
sbb
jp
adc
loope
jns
aam
xchg
adc
inc
cwtl
cmp
xchg
pop
xchg
mov
cmc
jmp
iret
adc
lods
or
mov
or
xchg
data16
mov
loopne
sbb
add
mov
inc
fnstsw
xor
dec
and
lock
push
sbb
add
mov
aam
insl
pop
jl
adc
outsb
pop
cmc
and
ja
ss
fbstp
inc
jg
dec
js
pop
lds
pop
and
push
dec
ss
ljmp
mov
pop
das
push
ret
sbb
sub
or
or
inc
xor
sbb
paddd
and
mov
push
pop
sbb
dec
mov
jecxz
arpl
cmp
scas
push
mov
cmp
cs
mov
xrelease
loope
mov
jge
and
daa
pop
and
push
adc
in
adc
orl
roll
xchg
decl
inc
mov
pop
pop
movsb
and
cmp
mov
cs
cwtl
popf
sub
std
and
fldt
push
sbb
mov
std
cmpsb
call
push
mov
cld
jecxz
fs
es
mov
push
scas
inc
adc
icebp
cmpsl
aas
sahf
mov
pop
into
in
shrl
cmp
shll
jae
xor
roll
ficompl
inc
push
stos
mov
or
pop
adcb
cmpl
aaa
adc
shrl
inc
nop
into
std
in
jbe
sbb
push
popf
mov
push
xorl
clc
xor
sbb
or
dec
push
or
mov
int3
jecxz
lret
mov
cmp
cmc
adc
iret
and
jo
add
aad
cli
rcll
in
aaa
rclb
fwait
mov
mov
push
push
movsb
std
subl
jp
cmc
xchg
or
aam
mull
icebp
push
aas
aaa
mov
rcpps
mov
cmp
jmp
aam
lods
sbb
es
and
add
cmp
xrelease
xor
cmp
cmp
stc
int3
les
movsl
jnp
pop
repnz
jge
jp
loop
bound
cwtl
andb
mov
mov
inc
push
ror
outsb
subl
cs
ss
xor
adc
imul
push
jp
adc
outsl
leave
xorl
cwtl
mov
sbb
and
mov
in
mov
add
jp
mov
xor
test
loopne
push
xchg
fldenv
sahf
and
dec
leave
cs
popf
gs
and
shrb
or
dec
outsl
je
fdivrl
arpl
shll
repz
cmpb
sbb
cld
mov
fdivs
adc
gs
aas
xor
sti
pop
stos
call
xor
xor
sub
lock
dec
or
xorl
cmpb
xor
fsts
jnp
pop
loope
add
inc
nop
sub
inc
fcoml
mov
inc
stos
lret
dec
cltd
ret
sahf
push
mov
clc
inc
test
or
rcrl
cld
jnp
addr16
std
nop
inc
lret
xchg
mov
adc
loopne
sub
insl
iret
mov
stos
enter
pop
cs
bound
sbb
jnp
jnp
inc
jge
cmp
add
mov
jmp
mov
popa
clc
test
mov
sub
mov
sti
jnp
cld
scas
imulb
sub
jecxz
aam
xorb
add
rol
jnp
inc
test
inc
lods
popa
sti
mov
sub
iret
push
or
push
dec
loopne
adc
jp
icebp
pop
fistpll
jle
sub
xor
call
loope
lods
in
shll
mov
sub
loopne
dec
dec
dec
iret
xor
adc
mov
in
js
sti
add
mov
sbb
fldt
ljmp
pop
aas
or
adc
aaa
fdivr
inc
xchg
insl
imul
in
fstps
cmc
dec
inc
mov
xchg
dec
lods
pop
sub
add
adc
das
popf
inc
add
mov
je
loope
or
mov
sbbl
aad
pushw
sbb
jne
data16
xchg
xlat
adc
das
inc
out
push
outsl
jle
in
xor
cmp
ficompl
aad
sub
and
lcall
xchg
cs
and
mov
data16
xbegin
fmuls
mov
lods
mov
inc
out
clc
pop
jno
js
loopne
xchg
fs
dec
pop
in
xchg
adc
stos
bound
mov
popa
xchg
jge
or
into
cmp
decl
add
mov
mov
test
xchg
fimuls
ret
push
outsl
jmp
jmp
loop
pop
xor
mov
sbb
dec
pushf
add
fdivs
sahf
std
lods
dec
js
stc
leave
lret
add
lcall
shlb
imul
jmp
sub
jns
or
imul
sbb
call
cmp
rcrl
filds
pushf
loopne
inc
mov
outsl
roll
pop
ret
push
ljmp
pop
mov
addb
mov
cmpsb
jge
xchg
add
std
cwtl
jecxz
and
dec
cli
xchg
push
cmp
bnd
push
cmp
jo
and
out
dec
stc
pop
bound
icebp
cltd
mov
jne
orl
loop
loop
mov
adc
xor
iret
mov
push
push
xchg
xchg
and
pushl
sbb
lahf
or
xchg
aam
inc
xchg
adc
push
clc
push
ja
shll
mov
leave
pop
popa
mov
push
and
xlat
mov
in
jno
fstp
mov
leave
dec
mov
out
or
push
gs
and
add
jg
in
ret
inc
out
loope
adc
iret
mov
mov
pop
pop
lahf
out
or
outsb
dec
push
mov
idiv
dec
out
push
or
pop
ja
xor
mov
aas
inc
gs
lock
aas
xchg
jmp
lds
jmp
inc
mov
jb
add
lahf
jg
int3
hlt
pusha
adc
aad
js
pop
xchg
ja
adc
lds
adc
inc
mov
adc
call
pop
cwtl
xor
shlb
ficompl
std
xchg
xchg
dec
xor
pop
jmp
jae
pop
int3
out
or
xor
fwait
movsl
ret
rorb
ss
mov
lods
cmpsb
cltd
inc
and
loopne
jns
test
cwtl
sbb
mov
xchg
sbb
pop
ds
lret
jmp
shll
mov
pop
mov
xor
adc
or
aam
inc
andl
sbb
sub
cmc
inc
add
hlt
fwait
std
repz
imull
or
sbb
out
inc
jle
icebp
or
cmc
repz
sub
out
sub
adc
adc
dec
shrb
mov
xor
in
pop
xor
adc
and
adc
xchg
bound
repz
in
jns
test
lock
push
lock
call
pop
and
cs
divl
sarl
xchg
or
addb
ja
cmp
mov
pop
arpl
push
adc
cmp
ficompl
nop
dec
pop
jge
jg
bound
mov
mov
push
fwait
cld
dec
imul
cmp
out
and
xor
jno
sarb
mov
sahf
add
rcrl
xchg
and
int
jp
outsb
inc
xchg
or
xchg
imul
mov
push
lcall
test
xor
fsub
out
js
cli
sbb
pop
es
cmp
stos
push
das
push
dec
lret
iret
inc
mov
push
lea
fimull
sub
fidivrl
cmp
jecxz
push
divb
mov
mov
mov
call
jo
push
adc
inc
outsl
mov
mov
or
jno
push
gs
push
mov
imulb
mov
dec
cwtl
imul
scas
jl
test
mov
mov
in
cmpsb
jle
outsl
push
xor
cmp
inc
sbb
rcrl
scas
sbb
loope
shll
xchg
enter
aaa
dec
scas
xchg
addr16
cwtl
inc
fdivrl
enter
cli
sub
test
adc
lods
test
dec
push
mov
mov
jae
dec
test
add
inc
aad
in
jg
mov
and
cmp
jmp
aad
jmp
xchg
mov
cvtps2pd
jb
in
gs
jle
cmpsb
jg
out
lahf
arpl
cmp
mov
cmp
ficoml
out
testb
test
js
inc
push
push
rcrl
dec
popf
int3
xor
jns
scas
leave
scas
xor
push
pop
in
sbb
pop
and
push
imul
ss
pop
lods
lds
sub
rcrl
pusha
sub
jge
add
jmp
jl
push
sub
lds
mov
cwtl
dec
mov
lds
jo
test
scas
mov
jle
fwait
jae
pop
mov
stc
aam
sub
push
test
pop
mov
add
aaa
pop
inc
pop
into
sahf
pop
mov
repz
orb
dec
xor
dec
cs
or
nop
push
aas
pop
stos
sub
add
push
outsl
ret
xchg
pop
xor
pop
psubusb
das
or
imul
je
inc
jecxz
sub
jnp
loop
push
sti
pop
lret
shlb
mov
test
pop
jg
or
dec
pop
xchg
mov
push
adc
fsubrs
sbb
test
popa
subl
sbb
pushf
movsl
fcmovb
xchg
inc
jecxz
mov
push
lea
mov
pop
lods
dec
stc
push
dec
add
or
inc
das
xor
xchg
dec
or
lret
jno
incb
ja
loop
aam
lds
and
xlat
jmp
mov
and
dec
je
add
lcall
out
int3
xchg
ss
cs
lcall
dec
call
add
mov
das
adc
daa
aad
xchg
outsb
adc
and
sub
in
sbb
xor
cmpsb
push
ss
push
pushf
xchg
mov
js
jp
ficoml
xor
subl
dec
addl
ret
loop
adc
add
arpl
sbb
mov
test
sbb
sub
cmp
in
lods
repz
xchg
fbld
dec
inc
mov
jb
pop
pop
std
jnp
pusha
scas
je
cmpsb
jbe
loop
mov
sahf
ja
add
rolb
jp
cs
jne
mulb
ficoms
or
jle
das
lods
or
mov
inc
jle
cltd
add
arpl
inc
test
cmp
clc
or
lret
push
inc
out
sub
cmp
adc
in
and
push
sarl
loope
fisubrl
loopew
divl
mov
push
ljmp
call
cmp
sbb
push
cmp
push
mov
adc
cld
push
lock
fidivl
arpl
ret
ds
mov
jp
xor
in
rol
out
and
xchg
cltd
add
loop
jo
lea
andb
stos
out
ret
pop
pop
xchg
xor
sub
rcrb
xchg
sbb
adc
push
pop
das
stc
or
repz
pop
inc
pushf
ljmp
je
inc
dec
mov
xor
push
mov
aad
lahf
sahf
fs
and
mov
or
shl
fsubrp
mov
dec
cmpb
lahf
nop
xchg
mov
leave
dec
inc
xchg
mov
call
dec
xor
movsl
add
test
xor
mov
push
shlb
les
cmp
add
test
insl
repz
setb
cli
scas
inc
adc
xchg
jg
jo
fs
out
insb
cltd
fsubp
sbb
data16
les
push
mov
popf
mov
out
loopne
dec
add
adc
out
sbb
imul
dec
sub
mov
popa
ds
xchg
popf
filds
ljmp
push
repz
inc
xor
add
pop
push
xor
in
stos
or
pop
iret
aam
jnp
sarl
add
es
push
jge
fldcw
jecxz
sbb
ffreep
xor
push
mov
mov
pop
fs
xchg
mov
cmp
xchg
pusha
test
cld
adc
std
or
mov
and
lods
and
mov
xchg
push
xor
lods
addr16
push
dec
ret
xor
int3
inc
push
fldt
jge
mov
ljmp
push
cli
loope
push
popl
push
repz
jne
imul
and
mov
adc
jp
loopne
test
adc
scas
or
aas
fs
incl
mov
sub
dec
jge
mov
scas
lods
pop
pop
rorb
mov
adc
sbb
fnsave
inc
test
lock
test
dec
jmp
in
jmp
insl
lahf
inc
pop
xchg
popa
stc
cwtl
adcb
cld
ret
cmc
jnp
insl
aam
push
ret
or
jecxz
push
push
gs
xor
and
dec
enter
loopne
sbb
adc
insb
popa
adc
js
pop
pop
cmp
mov
inc
xchg
dec
out
sbb
hlt
sbb
rcrb
fidivl
stc
adc
cmp
xchg
cmp
fstl
push
imull
out
adc
out
mov
fisubrs
pop
popf
sub
mov
dec
add
loopne
pusha
xchg
rolb
popa
mov
sahf
jl
or
or
shrb
or
ds
data16
inc
aam
push
or
push
testb
and
jmp
es
mov
xor
adcl
cmpsb
adc
pop
outsl
in
dec
pop
pushf
stc
dec
push
ret
int3
xchg
loopne
or
int3
push
hlt
sub
adc
sbb
or
push
inc
rolb
adc
push
mov
aad
inc
ret
and
and
mov
lds
mov
xor
out
stos
rorl
aaa
xchg
xchg
mov
cmpsl
inc
pop
lea
ja
scas
sti
rolb
mov
loopne
pop
xor
sti
jle
lahf
pop
xchg
scas
enter
cwtl
pop
mov
leave
and
add
outsl
ret
push
das
jb
inc
sbb
inc
loop
xchg
pop
int3
test
lea
es
in
jge
jl,pn
push
xor
loopne
push
fistl
fs
sahf
shr
add
data16
push
sbb
sub
xchg
loop
dec
lods
or
sbb
dec
push
enter
ljmp
addb
xchg
inc
repz
fdivrs
jbe
maxps
adc
push
bound
push
lahf
mov
enter
adcl
mov
sub
add
pop
push
insl
fadds
mov
xor
push
mov
mov
jp
js
in
pop
adc
and
scas
xchg
call
lods
subl
jg
pop
lock
cmp
xchg
add
inc
sbb
shlb
addr16
loopne
cmp
aad
add
mov
sub
adc
pop
outsl
jo
add
scas
or
fldt
inc
and
push
pop
sub
aas
cmp
xor
shrb
out
mov
lret
popa
stc
outsl
fisttpll
notl
aad
or
cld
pop
xor
fstps
lea
iret
adc
jb
add
add
add
cmp
pop
sbb
and
enter
cmp
adc
sahf
push
je
idivl
sbb
adc
add
std
daa
popf
ret
adc
gs
or
rclb
icebp
cmp
jns
adc
sub
dec
lahf
outsb
dec
or
popa
and
fiaddl
pop
add
lds
push
ficoml
fwait
lcall
mov
dec
lea
pop
xchg
rcrb
push
test
sub
add
orb
pop
jecxz
sbb
jmp
mov
inc
inc
lea
enter
shrb
loop
dec
push
pop
shl
sbb
xchg
fs
dec
fmul
sbb
mov
movnti
inc
jecxz,pn
stos
add
mov
sarb
mov
dec
push
aam
je
shlb
mov
mov
les
in
mov
ds
mov
mov
sbb
sub
fcmovnbe
xlat
pushw
mov
lret
sub
int
jno
lret
sbb
jle
mov
icebp
dec
mov
mov
push
cld
je
cwtl
stc
faddl
sbb
in
test
inc
pop
mov
push
jp
jae
js
push
and
and
ficoml
scas
pop
mov
iret
imulb
mov
stos
mov
bswap
test
push
add
mov
insl
repz
pop
mov
pushf
iret
mov
xchg
sbb
int3
adc
lret
scas
xchg
inc
ficomps
and
pop
pop
add
aad
jmp
in
mov
into
hlt
fldl
add
fwait
jp
lods
xor
and
sbbl
lea
test
xor
out
mov
ja
adc
push
jge
push
arpl
or
clc
enter
jecxz
dec
lods
jl
adc
xlat
jno
mov
mov
fwait
jo
inc
xor
xlat
mov
adc
inc
imul
adc
daa
iret
mov
mov
adc
nop
gs
loop
hlt
add
fwait
movsl
pop
data16
xchg
sub
push
nop
push
pop
jg
push
inc
dec
pop
cmpsb
ret
xor
ljmp
in
into
mov
xorb
fninit
loop
cld
jns
hlt
mov
or
or
jg
pop
and
push
sub
mov
adc
fsts
ja
or
mov
push
mov
ret
or
jo
jbe
mov
xor
and
adc
pop
mov
repz
das
push
xor
ret
jmp
mov
shrl
pop
mov
pop
in
sbb
dec
ret
pop
push
dec
pop
push
scas
repz
das
xchg
and
sahf
imul
mov
add
push
mov
mov
pop
in
aas
add
mov
movsl
jecxz
sub
inc
in
jecxz
inc
pop
mov
jb
adc
test
imul
popa
xor
out
mov
movsl
rcrl
insl
xchg
sahf
shrl
dec
cmc
jmp
dec
mov
xchg
xlat
jge
movsl
inc
adc
fwait
aas
mov
add
cmp
push
daa
idivb
sub
sbb
scas
fwait
mov
and
ss
imull
fdivrs
push
lods
cltd
sbb
cmp
sarl
add
mov
add
rcl
pop
add
xor
mov
adc
imul
inc
mov
movsl
cli
test
and
sbb
in
and
out
xchg
loop
pop
mov
push
repnz
shrb
sbb
movl
fstpl
lret
or
imul
jmp
pop
jmp
mov
loopne
fcmovnu
in
cwtl
jecxz
pop
jp
clc
sub
sub
mov
imulb
es
or
in
push
mov
dec
das
xor
jae
jp
add
cmpsl
xor
inc
jg
daa
push
xor
decb
fidivs
out
cmp
dec
outsb
jp
dec
fwait
les
push
ds
out
inc
icebp
mov
sbb
jb
lea
insl
jbe
xchg
mov
outsb
btl
sbb
sbb
jns
jns
test
daa
outsl
cmc
int
or
mov
adc
cmp
mov
ljmp
shrb
js
cs
jae
cs
in
pushf
cmp
loope
aaa
les
clc
jno
and
dec
mov
lret
jbe
orb
rol
ljmp
and
push
lods
and
push
jbe
sbb
mov
call
in
popa
gs
movsl
stos
aas
movsl
int3
mov
and
lock
pusha
pop
lret
int
aam
jno
dec
adc
scas
mov
mov
sti
xchg
rclb
xor
ret
jne
out
sbb
scas
lea
scas
je
sbb
inc
mov
xchg
insb
leave
addr16
xchg
pop
rcr
loopne
jp
jmp
cmp
inc
ret
jmp
cmp
shlb
movsl
jecxz
push
dec
cmpsl
orl
cmp
mov
mov
xchg
inc
mov
mov
sbb
adc
inc
je
outsl
jne
shr
jbe
mov
push
mov
push
push
fsubl
jle
inc
icebp
in
mov
inc
push
imul
xchg
arpl
xor
jecxz
cmp
sbb
orl
pop
hlt
jns
shrl
mov
roll
in
or
fdivl
out
push
cmpsb
sbb
loopne
dec
fisubl
jecxz
push
data16
xchg
mov
pop
xchg
ficoml
orb
outsl
lods
jp
dec
inc
fstps
mov
mov
xor
mov
out
sub
ss
and
pop
movsl
mov
test
sar
xorl
or
cmp
xor
in
cmc
push
popf
or
push
adc
mov
xlat
loopne
das
stc
dec
jg
push
in
cmpsl
int3
cs
sbb
cli
xlat
jecxz
adc
sbb
lds
lds
in
mov
xlat
data16
dec
jle
and
cmp
mov
cmpsl
jb
mov
out
adc
pop
rcl
xchg
aad
ljmp
sbb
test
dec
cmpsl
inc
inc
xchg
fcmovnu
add
adc
or
or
inc
inc
push
xor
les
jecxz
popa
sbb
lahf
and
std
aaa
fsubrl
lods
lock
dec
adc
mov
xor
and
sbb
push
frstor
pshufw
push
inc
cmpl
arpl
out
pop
pop
sub
adc
mov
jo
adc
mov
dec
and
popa
mov
push
fdivs
in
mov
cmpsb
add
cmp
fsts
add
cmp
and
inc
jp
xchg
jbe
popa
dec
push
pop
mov
ret
push
xor
jnp
sub
add
std
or
sub
mov
pop
cmp
jo
jl
xchg
scas
shr
xchg
or
jbe
pusha
in
cmp
in
pop
mov
sbb
cmp
scas
inc
fnsave
aaa
or
sbb
mov
cmp
mov
cld
sti
into
idivb
mov
imul
push
loopne
push
cmp
push
xor
mov
xor
std
push
pushf
dec
jecxz
stos
xchg
mov
les
pop
shll
push
xor
sbb
push
mov
mov
push
clc
inc
sub
lods
adc
sbb
movsb
cmpsl
add
mov
stos
cmpl
sub
pop
xlat
cmp
push
rcr
or
lahf
movsb
stc
shr
in
pop
inc
mov
into
sti
daa
cmp
push
sahf
sub
and
push
sbb
scas
add
and
int3
inc
dec
popf
push
add
mov
ds
sbb
loop
dec
out
jb
andb
lods
cli
int3
adc
std
lods
sub
rorb
xchg
dec
push
and
xlat
in
rcrl
cmovs
fbld
cmp
cmp
bound
in
popl
faddl
hlt
push
notl
jne
or
or
inc
inc
jge
shlb
inc
push
push
xchg
push
popa
lcall
jno
stc
sti
cwtl
out
sub
bound
call
xchg
inc
arpl
inc
fsubrs
fcoml
je
lcall
adc
popa
jle
xor
in
jp
jg
out
mov
and
test
filds
sub
inc
push
cmpb
jl
mov
out
sbb
arpl
aaa
xor
mov
pop
inc
pop
sbb
xor
outsl
add
cwtl
daa
or
pop
jnp
cmc
sbb
cmp
pop
jl
jb
pusha
xlat
push
sti
mull
jae
in
hlt
mov
mov
dec
test
sub
mov
dec
jbe
sbb
int
ja
cmpsl
cli
cltd
xchg
mov
mov
push
push
xchg
sahf
rcrl
flds
adc
js
xor
out
xchg
xor
insb
jecxz
and
cmp
stc
ret
cltd
mov
cs
mov
cwtl
test
inc
or
push
cmc
sarl
loope
adc
jbe
clc
cltd
or
cmpsl
mov
dec
and
sub
cs
push
movsb
inc
inc
pushf
icebp
enter
dec
xor
xchg
mov
xchg
cmp
xor
inc
and
out
inc
test
jno
jl
xchg
inc
sub
cmp
jnp
lea
lret
repz
lahf
sub
stos
adc
inc
orb
testb
cmp
fcompl
fstps
mov
popf
adc
ds
addr16
ljmp
mov
xor
scas
jae
std
mov
rcrb
roll
das
inc
mov
xchg
iret
pop
stos
mov
dec
pop
adc
imull
aas
mov
push
cmp
shrl
call
adc
testb
out
shr
mov
outsb
popf
mov
mov
sub
mov
and
cmpsl
jne
cwtl
cmp
xor
cmp
xchg
loopne
push
xchg
cmp
aam
pop
enter
pusha
sahf
pop
push
cs
cwtl
in
mov
aaa
add
cmp
fsubl
sub
hlt
stos
loop
sbb
insl
pushf
add
pushf
ret
lock
add
daa
cltd
jbe
scas
in
mov
inc
popf
test
or
or
stc
xor
xchg
pop
cmp
repnz
lahf
cmpsl
dec
mov
xchg
popa
xor
out
outsl
jmp
sar
cli
inc
dec
sub
adc
xor
repnz
or
and
xchg
pop
sbb
jb
mov
or
ror
adc
test
dec
lods
cmp
into
fimull
divl
loopne
jns
rcll
mov
or
outsb
jle
gs
mov
xchg
pop
fdivrl
jp
jp
mov
or
jp
or
cmp
mov
sti
and
notl
sbb
add
jne
mov
add
jns
mov
xchg
andb
mov
repnz
and
sbbl
in
outsl
scas
cmpsl
dec
pop
loop
mov
jl
call
test
mov
inc
out
pop
push
xor
out
xchg
ss
andb
dec
int3
pop
fisubrs
xlat
add
aas
xlat
dec
jp
xlat
rcrl
pop
mov
and
sub
pop
adc
mov
loope
fidivl
lret
jmp
bound
rorb
out
stc
popa
and
test
dec
jnp
xlat
cmp
out
mov
cld
cmp
xchg
fisubrl
sti
lcall
rol
sbb
jbe
sahf
and
sbb
xor
sahf
ljmp
mov
pop
xchg
rorl
adc
repnz
std
popf
popf
mov
in
pop
mov
inc
dec
lcall
bound
xchg
xor
xor
push
loopne
mov
cmp
daa
cli
xchg
popa
hlt
sub
mov
dec
out
mov
shlb
jno
sub
jae
sub
jl
roll
int
addr16
pop
movsb
fsts
cltd
pop
add
in
stos
test
sti
out
pop
fsubrp
bnd
and
out
or
je
jns
mov
dec
cmc
pop
movsl
mov
fcompl
repnz
adc
mov
adc
and
std
add
add
rcl
jle
lods
pusha
lcall
push
les
cli
cmp
std
icebp
shlb
xlat
mov
dec
push
lahf
pop
pop
popa
inc
icebp
jp
jbe
bsr
or
push
xor
xor
xor
mov
lahf
adc
in
insl
lock
out
or
sub
dec
xor
mov
mov
shlb
subl
clc
inc
or
mov
sbb
stc
inc
test
fcompl
jecxz
mov
aad
push
pop
repnz
add
adc
mov
inc
add
cwtl
dec
lock
in
xchg
pop
or
push
or
mov
outsb
mov
pushf
cmpsl
test
and
adc
add
into
bound
cmp
les
sti
notl
push
pushf
les
jg
sub
or
and
fcoms
test
dec
push
enter
and
daa
movsl
xor
inc
es
pusha
sub
xor
insb
cmc
stos
mov
push
push
xchg
cmc
mov
adc
in
std
imul
cld
fstp
movsb
pop
movsl
push
imul
sub
jno
add
adcb
loop
aad
out
jo,pn
lret
addr16
lods
mov
call
dec
push
cmp
daa
jne
cmp
mov
dec
pop
jmp
mov
scas
dec
fisttps
out
pop
pop
decb
mov
lea
fdivs
xchg
or
sub
fisttpl
popf
fldt
mov
jmp
xchg
push
mov
popa
in
xor
ds
fdivrl
es
mov
mov
outsl
mov
inc
mov
jne
sbb
insl
jo
ljmp
sub
pusha
cs
cli
mov
dec
mul
pop
push
in
mov
and
fs
jb
sbb
adc
and
dec
cltd
jns
mov
call
mov
mov
lods
xor
xor
jl
aas
test
repnz
out
jno
mov
mov
jne
jb
and
and
cltd
sbb
mov
sub
shlb
cwtl
xor
push
push
int
or
arpl
add
test
repnz
jns
and
push
and
dec
mov
jae
dec
imul
decl
and
cmp
fsubs
fcomps
jp
out
and
mov
jnp
jmp
dec
add
cmc
push
xchg
mov
sbb
jmp
adc
ret
lahf
push
imul
or
cmp
jnp
push
shlb
stos
lea
lods
adc
outsb
int3
hlt
adcl
push
out
stos
xchg
cmpsl
pop
inc
mov
mov
movsl
sub
push
scas
xchg
sbb
clc
cmp
lcall
addr16
arpl
or
pop
movsl
mov
inc
jl
xor
sahf
lock
dec
faddl
jbe
adc
jns
adc
cmpb
sub
outsl
decb
jmp
push
mov
cwtl
sub
add
sbb
dec
jb
mov
insl
jecxz
in
sub
scas
add
push
out
subb
mov
and
sub
pandn
and
clc
lret
mov
popa
adc
dec
push
inc
jno
in
sarl
pusha
outsb
fwait
push
int3
dec
or
ret
jne
jle
dec
adc
dec
mull
inc
jnp
in
arpl
inc
sbb
mov
jle
cli
ja
mov
outsb
int3
daa
sarb
popl
xchg
in
and
inc
popf
loope
inc
and
shlb
mov
cmpsb
std
add
loop
jp
out
imull
xor
sub
es
out
jmp
or
aas
faddp
xor
push
mov
dec
add
jmp
clc
sbbl
mov
shll
stc
xchg
jns
cmp
lods
or
addb
adc
cmpsb
xor
leave
or
mov
mov
mov
aas
lea
movsl
int
roll
xor
mov
mov
mov
insb
mov
mov
dec
pop
ss
jg
cmp
inc
xchg
pop
pop
sbb
stos
pop
aas
loope
movsl
ljmp
scas
pop
out
fildll
fcoms
sbb
cmp
jb
jmp
fistpl
daa
dec
nop
sbb
add
cwtl
dec
daa
push
sbbb
xor
push
call
das
js
mov
pop
and
das
fs
rcrl
push
jle
inc
gs
or
mov
cmpsl
sbbb
imul
dec
arpl
pop
pop
in
push
out
mov
jae
pusha
sub
xchg
scas
subb
ret
pop
out
leave
or
jno
cmp
jae
jl
scas
sbb
adc
and
sub
jo
fwait
jl
sbb
out
pop
cmp
jecxz
mov
mov
jae
push
push
jg
int
in
pop
sub
push
fldcw
push
push
fstl
mov
sub
loop
xchg
jo
call
mov
push
sub
mov
das
gs
xchg
shll
push
sbb
stc
dec
add
dec
sbb
mov
xorb
cmc
inc
repz
jae
cmp
aas
clc
es
lds
mov
and
mov
loopne
cmp
addr16
int
inc
popf
cltd
dec
arpl
and
xchg
scas
shl
mov
mov
push
push
outsb
add
mov
jg
test
xor
sbb
das
ja
lods
dec
out
cmp
sti
or
and
or
outsb
inc
ret
imul
hlt
repnz
iret
cs
daa
js
sub
fnstsw
jb
mov
sub
mov
iret
imul
daa
cmpsb
pop
mov
push
ljmp
mov
mov
jmp
push
add
inc
mov
das
push
adc
and
imul
jb
jae
out
sti
mov
scas
push
adc
inc
xorb
lock
scas
test
icebp
xchg
pop
fsubr
imul
lahf
out
leave
ja
jo
mov
xchg
cmp
mov
in
sub
negl
pop
orb
dec
adc
fildl
add
jae
jns
pop
mov
cld
stos
or
adc
dec
push
cld
icebp
inc
mov
shrl
mov
and
imul
lock
mov
sbb
pop
sbb
jno
xchg
testl
or
sub
jae
push
stc
shrd
enter
xchg
repz
jle
imul
addl
icebp
lods
ds
cld
lret
push
stc
or
cli
adc
rcrl
dec
push
cmp
or
sub
test
cmp
jno
inc
aam
lcall
popf
pop
xor
cwtl
push
jl
jge
sub
fcmovne
push
pop
or
das
cli
push
sbb
shlb
stos
jno
xor
xchg
jne
jecxz
sbb
cwtl
cs
mov
mov
lahf
js
out
or
sbb
adc
popf
ss
popf
cmp
mov
mov
cmp
pop
adc
in
dec
stos
ja
push
add
std
stos
xchg
push
push
pusha
stc
xchg
push
inc
out
or
ds
jbe
outsb
outsb
cmpsl
xchg
arpl
pusha
enter
cmpsb
and
jae
insb
aam
jmp
rol
pop
adc
dec
adc
je
inc
inc
mov
mov
jle
mov
outsb
push
push
and
dec
inc
sti
in
and
out
aas
inc
push
repnz
scas
gs
shlb
cmp
sub
adc
in
sbb
xor
jmp
pop
jnp
sbb
into
and
mov
aaa
addr16
lcall
imul
scas
or
jns
sbb
adc
mov
call
fdivrl
sahf
lods
pop
mov
pushl
xchg
fmulp
leave
inc
mov
rcll
add
push
test
push
jmp
push
in
lods
cs
inc
iret
pop
imul
fistpl
popf
push
test
and
test
loop
addr16
ret
nop
lahf
jl
aad
xor
xchg
stos
lret
push
cli
push
dec
dec
es
nop
ret
lcall
insb
adc
loop
add
fs
dec
xchg
mov
dec
xor
je
mov
inc
test
das
and
aaa
daa
ds
mov
rorl
das
mov
loop
cs
mov
in
ljmp
xor
mov
push
sbb
xor
gs
cwtl
insb
std
xlat
sub
mov
sbb
jo
mov
cmp
popa
fcomp
xlat
lcall
je
clc
jbe
sbb
jb
subb
adc
out
adc
daa
lcall
push
movsb
inc
inc
sbb
jns
fsubrs
shlb
addb
pop
add
lods
push
aas
outsb
sahf
fcomi
jge
aas
xor
pop
push
iret
push
sti
sub
pop
jle
mov
in
pop
fs
jl
sti
cmpb
js
mov
cmc
or
repnz
or
or
lret
jl
ret
out
testl
rep
pop
in
push
jne
insb
aad
in
lret
fmull
aad
hlt
cltd
out
jne
sahf
loope
movsb
cltd
clc
test
cmp
in
repnz
push
xchg
popa
hlt
fsts
repz
ja
imul
aaa
xlat
push
adc
ret
dec
sbb
in
sub
shll
mov
or
sti
jmp
loope
dec
repnz
xchg
out
test
leave
fdivr
cwtl
js
pop
adc
ja
movsb
xchg
aam
insl
adc
mov
mov
push
push
cmpsl
inc
push
inc
mov
mov
rorl
sub
mov
neg
sbb
or
mov
arpl
pop
fstpt
cmp
adc
adc
outsb
add
xor
mov
jmp
repz
insb
push
das
xor
bound
lcall
in
mov
xor
ja
aad
cld
mov
inc
scas
jae
cwtl
mov
hlt
test
int3
mov
dec
cmp
jp
push
inc
repnz
sbbb
push
popa
mov
mov
xchg
pusha
aad
push
push
sbbb
scas
adc
or
sub
ret
jne
loopne
add
add
lret
mov
cmp
cld
nop
mov
push
into
sbb
lret
jns
rcrl
test
jp
jp
pusha
mov
bound
daa
orb
es
fmull
mov
lods
flds
xchg
pop
cmp
fdivrs
inc
pop
aas
push
jne
push
into
mov
icebp
xor
dec
push
jb
or
cmc
and
hlt
pop
adc
mov
cmp
xchg
movsl
or
push
into
mov
xlat
sub
pop
cli
adc
sub
cmp
pop
test
push
ret
sti
andl
xchg
mov
inc
es
xchg
lea
mov
ss
xor
pop
faddp
cld
lds
lret
loop
pop
sub
cli
push
outsl
int
fcompl
pop
fwait
cltd
mov
cwtl
out
addr16
mulb
cmp
scas
or
mov
xor
push
cmp
les
outsb
daa
jl
or
cmp
int3
adcl
ret
mov
cmp
dec
and
es
out
lret
test
loopne
push
adc
xor
mov
je
scas
inc
mov
loopne
nop
repz
pop
outsb
adc
sbb
dec
inc
adc
scas
xor
ret
es
sub
mull
int3
subb
push
ret
loopne
xchg
inc
adc
out
nop
loopne
iret
lds
test
stos
push
das
push
or
cmp
call
sbb
lods
subl
sbb
dec
ret
mov
bound
add
and
mov
cwtl
add
sbb
push
xor
sbb
jecxz
ja
sahf
pop
imul
data16
rolb
jo
dec
repz
arpl
xor
adc
insl
dec
jnp
in
push
ljmp
xor
sub
jno
xor
pop
aas
mov
cmp
cltd
pop
jno
adc
lahf
adc
lds
bound
pop
mov
lds
mov
incl
and
arpl
inc
add
leave
ret
cli
dec
and
cmp
jae
jne
lcall
aad
push
jb
stos
fwait
sbb
int3
sub
push
aas
mov
enter
or
or
add
mov
fistps
cmp
xor
lods
fcoml
cmc
push
cmpsb
stos
inc
std
ret
push
cmp
rclb
scas
enter
and
push
mov
pop
cs
cmp
xorb
jbe
es
adc
sbb
dec
fwait
imul
push
pusha
pop
scas
ret
cmpsl
enter
aam
lret
or
xchg
and
xchg
and
int3
hlt
jg,pt
scas
mov
push
leave
mov
bound
xchg
jp
push
mov
adc
push
push
xor
xchg
fmull
xorl
sbb
ficomps
or
cli
inc
std
lods
inc
push
sub
adc
cmovp
fidivrs
cmp
mov
push
inc
pop
outsl
add
mov
rclb
pop
xchg
xlat
and
mov
aaa
std
dec
inc
clc
pushf
cs
ljmp
dec
incl
add
std
mov
jg
xor
movsb
push
mov
mov
stc
mov
out
loope
fisttpll
popf
ret
test
sti
into
insb
push
inc
adc
mov
push
iret
jnp
ss
out
std
pop
inc
loopne
jp
mov
pop
dec
mov
pop
outsb
lcall
inc
je
mov
cmc
xlat
pop
jne
xchg
mov
lea
cwtl
test
cmpsl
pop
pop
movsl
dec
pop
das
push
lcall
push
call
addr16
cmp
cmpsl
inc
xchg
inc
lods
sbb
sub
in
cmp
or
clc
cmpsl
fs
add
insb
push
aas
idivb
mov
rolb
repnz
lahf
lret
cwtl
add
popa
sti
sub
fucomip
sub
pusha
popf
mov
push
sub
xchg
add
adc
in
data16
or
mov
xor
sub
push
mov
mov
lret
xor
outsb
sar
cmp
insb
and
pop
pop
rcll
mov
jge
sub
out
fnstcw
in
sahf
xchg
icebp
movsb
push
jge
sbbb
pop
xor
sbb
mov
ds
enter
add
mov
push
jmp
out
cmpsb
xchg
jmp
lds
cmc
cmp
shlb
shll
test
icebp
lods
jecxz
dec
or
sahf
ret
mov
repnz
test
xlat
iret
sbbl
jb
fsubr
out
cmpb
mov
sbb
lock
sub
enter
testl
les
movsb
inc
push
idivb
insb
fidivrs
into
bound
mov
dec
pop
pop
xchg
in
insl
imul
add
ljmp
les
jmp
lock
pop
loop
stos
aad
mov
je
and
dec
jns
insl
icebp
xchg
cmpb
pop
or
call
insl
hlt
jbe
out
sbb
inc
push
icebp
push
filds
push
daa
sub
mov
pop
mov
cmpb
sahf
sub
inc
sub
add
mov
daa
pop
bound
mov
lods
inc
repz
dec
movsb
subb
icebp
test
xlat
xchg
pop
cmp
ret
fistl
out
out
cwtl
mov
fisttps
andb
bound
cmp
outsb
pop
sbb
jns
popa
pop
cmp
xchg
aas
pop
popf
call
negl
pop
xor
popa
push
mov
pop
adc
inc
dec
imul
movsb
lahf
xchg
repnz
pop
scas
xchg
js
adc
ret
mov
dec
fwait
cmp
jl
pop
stos
xchg
scas
sub
mov
sbb
repnz
scas
je
fucomip
je
ret
push
xor
test
and
sbb
adc
pop
xor
lods
aaa
in
sub
mov
mov
inc
push
push
xor
lods
push
fcoms
loop
xchg
xor
shl
or
test
insb
outsl
jnp
xchg
subb
mov
iret
iret
and
inc
or
inc
or
out
sub
push
push
pop
dec
xchg
pushf
and
cltd
into
inc
mov
adc
mul
xchg
ss
aam
xchg
mov
sbb
inc
out
mov
pop
aam
les
je
je
aas
jg
das
daa
jo
and
mov
clc
aad
xchg
in
mov
jge
inc
push
clc
jae
enter
add
push
int3
imul
pop
adc
or
data16
xchg
sub
mov
imul
adc
jmp
mov
fisubrl
jne
fimuls
xor
or
mov
cmpsl
pop
sub
cmc
mov
adc
inc
loopne
sti
leave
push
dec
xchg
or
jecxz
ja
insb
push
xchg
outsb
mov
shlb
lcall
mov
or
pop
jecxz
sbb
jnp
movsb
outsb
jno
xchg
aad
jmp
mov
dec
out
cmp
iret
push
jno
in
add
leave
hlt
test
mov
and
ret
jp
cmp
lret
xchg
sbb
out
dec
mov
outsl
loopne
cs
jle
leave
jmp
rcr
jle
cmp
mov
movsl
cmp
out
insb
and
mov
sbb
mov
je
mov
dec
test
xchg
add
fldt
test
sahf
add
je
xchg
fcompl
mov
push
loop
jge
xchg
mov
imul
ficoms
pop
mov
mov
lds
jge
in
test
int
inc
fimull
sbb
cmp
dec
in
out
psubw
cmc
jb
stos
jnp
push
shrl
addr16
aam
xor
leave
pop
not
movsl
and
sti
iret
push
push
sbb
jb
repnz
push
jb
aad
nop
cmp
out
sub
cmp
imul
sahf
jmp
push
pushf
jne
les
repnz
jg
dec
mov
jl
test
lock
jns
jl
push
ss
insb
jbe
shl
lea
xlat
pop
pusha
adc
in
adc
or
push
pop
rorl
cmpsl
xchg
dec
out
inc
sub
xchg
cs
push
cs
push
rclb
fs
pcmpeqd
loop
jmp
out
in
xor
push
dec
repz
movsb
aad
push
call
insl
cli
xchg
lret
divl
fwait
mov
or
jmp
pop
movsl
idivb
pushf
repnz
push
in
mov
icebp
pop
push
mov
sbb
icebp
fsubs
lret
xchg
mov
inc
sbb
in
pop
int
data16
add
jbe
ja
dec
cmp
sub
mov
sub
rclb
aam
gs
mov
fs
xor
cs
mov
mov
scas
loopne
ss
insl
add
hlt
jae
mov
iret
push
cltd
insb
fisubl
lea
in
jae
push
push
in
inc
cmp
cmc
mov
add
fcoml
pop
mov
push
jecxz
dec
push
into
mov
jl
stos
sbb
lret
dec
xorb
push
push
cmpsb
out
mov
push
mov
call
inc
and
stos
mov
loop
sbb
leave
test
pop
push
xchg
ja
fisubl
lret
inc
sti
test
lret
faddl
jnp
lods
inc
dec
fs
inc
sub
push
push
jns
push
pop
imul
lds
push
loopne
or
sub
scas
push
or
push
mov
je
push
lds
dec
mov
cmp
mov
mov
jge
imul
ds
lahf
inc
in
dec
ret
xchg
add
xchg
popa
xrelease
insl
mov
out
add
dec
cmp
dec
mov
int3
xchg
jns
pop
adcb
stos
lock
sub
sub
ljmp
aam
add
sub
in
int
dec
daa
lcall
adc
cmp
cli
xor
jp
xlat
mov
adc
mov
xor
mov
in
out
mov
je
negl
and
pop
stos
xorb
mov
mov
pop
ja
sbb
lods
pop
gs
loopne
js
xchg
mov
jle
and
xor
jae
leave
jb
xchg
inc
stc
fdivp
xchg
test
sbb
and
xchg
mov
popa
dec
roll
and
loopne
loope
xchg
mov
push
insl
scas
adc
add
rcl
push
loop
cmp
xor
mov
jecxz
mov
cs
das
out
push
pop
insb
inc
dec
pusha
mov
inc
inc
lahf
je
xchg
mov
add
sbb
xchg
fiaddl
int
add
in
pop
cmpl
movsb
imul
sti
fnsave
mov
insb
cli
stos
in
out
mov
add
push
les
mov
std
inc
xchg
rolb
and
sub
lahf
jae
rcrb
dec
dec
outsl
out
xchg
xor
nop
and
sbb
dec
cmp
push
out
pop
pop
cwtl
inc
nop
in
cmc
fwait
popa
bnd
into
xchg
jno
xlat
rclb
pop
jbe
popa
jae
aad
xorb
pop
xor
loopne
cltd
xchg
bnd
push
sub
fildl
xor
insl
cld
add
sarb
aas
sbb
mov
dec
sti
dec
xchg
enter
xchg
scas
sti
dec
pop
fcomps
cmc
inc
aaa
repz
dec
pop
dec
xor
xor
mov
icebp
push
cltd
dec
mulb
mov
cmp
pop
in
js
mov
mov
cli
xchg
shlb
mov
fcomps
pop
fistps
pushf
cmp
call
clc
and
popf
mov
sbbb
cwtl
xor
cmp
pop
push
mov
inc
outsb
mov
inc
adc
nop
add
andl
roll
cmp
loop
out
mov
pop
adc
push
dec
and
pop
inc
sub
adc
notb
inc
mov
fdivs
testl
jl
dec
inc
jl
lods
adc
ss
insb
ret
sub
in
pop
cmp
push
dec
mov
xor
clc
cld
aad
lcall
mul
sbb
stos
rorb
push
mov
sbb
jno
scas
mov
ja
push
loope
jl
out
std
xor
js
mov
roll
jecxz
cld
mov
pop
push
and
ret
test
push
test
movsl
lret
pop
aaa
subb
test
push
lret
outsb
add
popa
fs
fwait
lcall
hlt
imul
sub
cmp
adc
dec
std
pop
mov
clc
xchg
mov
jl
mov
dec
inc
stos
pop
aas
mov
or
out
cmc
xor
scas
push
lahf
jo
sub
xchg
int
pop
mov
jmp
nop
mov
leave
sahf
fmull
push
cmp
mov
cmp
je
push
cmc
int
push
sahf
inc
lds
les
repnz
clc
les
lcall
repnz
and
aas
lods
lret
leave
mov
fwait
cs
push
fmull
orl
mov
popa
fbld
sub
cmpl
int
std
ficoms
repnz
push
rcrb
flds
repz
fistl
inc
fidivrl
ret
dec
mov
insl
icebp
test
call
daa
addr16
sub
loop
or
cmp
pop
push
xor
xchg
popl
ud0
jne
mov
inc
mov
jmp
push
and
push
gs
add
jae
inc
mov
dec
push
mov
push
inc
fldt
testl
push
xor
stos
pop
imul
ds
jecxz
sub
fdivrl
minps
jge
icebp
sub
out
add
std
orl
movsl
icebp
cmp
mov
cli
cmp
movsl
pop
jmp
mov
cli
xchg
push
lods
aaa
sub
loopne
idiv
and
lock
loop
ljmp
pop
in
sub
in
inc
add
jecxz
push
int
rolb
mov
out
scas
xchg
adc
xor
data16
mov
negb
pop
sbb
fcmovb
in
std
pop
jmp
jecxz
and
mov
cmp
out
pop
jp
jg
stc
test
cmp
push
or
outsl
xchg
das
add
sub
arpl
hlt
bswap
nop
out
iret
scas
sub
mov
test
mov
outsl
xchg
push
pop
jno
pusha
mov
js
mov
insl
mov
test
cmp
mov
mov
jbe
dec
ret
sti
int3
ja
jmp
xchg
bound
mov
rcrb
and
aas
mov
int3
into
mov
in
cmc
cs
mov
xchg
cmp
ss
daa
sub
inc
out
sub
and
shll
fwait
dec
jge
je
mov
adc
fildl
ret
stos
xchg
and
sub
push
xchg
xor
dec
test
jle
xor
xor
pusha
push
jne
and
push
xlat
push
ja
roll
inc
popf
mov
adc
stos
push
lock
loopne
mov
pop
rcr
pop
adc
dec
repnz
push
jno
icebp
repnz
or
push
sub
cmp
loopne
sti
sar
iret
dec
int
xor
cmp
xchg
or
push
xor
dec
fnclex
ljmp
add
mov
xchg
or
xor
aaa
stos
or
push
stos
ret
jns
rolb
imul
inc
push
in
adc
outsb
in
call
rclb
imul
fadds
idiv
hlt
jb
scas
sub
mov
xor
adc
jecxz
push
into
push
movsl
rcl
rorb
xor
ljmp
and
xchg
lret
test
jbe
dec
jg
dec
lods
jge
call
shll
call
lahf
inc
test
popf
dec
ja
arpl
push
sti
push
and
add
dec
cmc
cmpsb
sbb
add
mov
fs
push
or
ss
mov
fwait
pop
in
xor
fsts
mov
in
xchg
xchg
inc
loopne
inc
and
ja
loopne
jmp
mov
cltd
or
xchg
clc
test
shr
adc
xchg
sbb
cmc
loop
enter
cmpsb
lcall
adc
push
roll
lds
bound
sub
lock
arpl
xlat
add
ret
movsl
lahf
cmp
push
mov
and
lcall
adc
test
ret
mov
ret
xchg
inc
and
outsl
lods
jmp
push
and
out
iret
inc
and
or
cmp
repz
dec
hlt
pushf
or
adc
push
movsb
inc
nop
stos
dec
sbb
pop
andl
popf
add
xchg
xchg
imul
xchg
test
shrl
push
insl
dec
mov
dec
push
shlb
int3
repnz
inc
sbbl
xchg
movsl
jg
fldt
push
xchg
push
and
movsl
das
out
mov
mov
cmpsl
adc
jmp
sub
shlb
jl
push
adc
xor
sahf
push
mov
ljmp
data16
sbb
rcr
lret
mov
scas
mov
cmp
mov
pop
movsl
imul
jae
in
pop
aam
jecxz
movsb
inc
repz
push
scas
fnstenv
testl
push
mov
inc
ret
stos
jne
xor
stos
xchg
pop
sbb
cmp
sub
insb
jecxz
stos
mov
lea
xchg
in
cmp
push
int3
mov
jp
jb
mov
push
scas
es
int
add
mov
push
xchg
mov
push
inc
and
into
sub
jns
xor
mov
add
mov
cmp
sti
rol
ja
cmc
and
fwait
push
lcall
lock
shl
dec
iret
out
addr16
outsb
outsl
subb
test
sbb
and
jns
cmp
out
fidivs
jg
test
insb
sub
sbb
pop
ret
jge
and
inc
push
or
and
daa
lcall
mov
out
outsb
mov
loop
fcoml
sub
mov
mov
lahf
mov
rorl
les
mov
repz
fcompl
fs
cmpsb
jne
mov
into
sti
pop
test
aad
adc
fisubrs
xor
lahf
xchg
aaa
in
mov
fistl
push
mov
push
inc
push
cld
lret
xor
mov
xor
testl
inc
and
fcom
jl
and
dec
adcl
cmp
xor
pop
jl
sbb
jmp
out
and
or
arpl
loope
out
inc
pop
aaa
sbb
in
mov
addr16
push
jge
stos
pop
shrl
fisttpl
push
int
clc
dec
fsubrs
add
adc
xlat
jno
sub
movsb
adc
xorb
inc
xor
pop
es
mov
pop
dec
or
dec
xchg
push
sbb
pop
cmpsb
arpl
dec
inc
xchg
dec
pop
pop
mov
in
jge
ficomps
idivb
std
ret
mov
push
push
cmpb
add
lahf
ficoml
cmpsb
inc
inc
divl
jae
mov
ds
nop
out
dec
add
stos
pop
inc
jo
test
lcall
lds
pop
fsubs
push
test
aaa
xchg
dec
xor
cmpsb
dec
nop
ret
cmp
pop
mov
xchg
mov
fwait
push
out
je
fildl
push
rolb
fcom
aas
mov
add
cwtl
fnsave
push
ret
in
fwait
clc
xlat
out
arpl
xchg
push
xchg
xchg
mov
and
cmpsb
mov
sarb
nop
mov
adc
cltd
lcall
inc
lds
jae
and
stos
pop
fwait
shlb
dec
add
jb
jns
aaa
cs
jge
pop
clc
xlat
test
sbb
lcall
into
inc
les
movsl
ret
xor
mov
add
fadds
je
sub
out
pusha
or
dec
and
outsb
cmp
in
mov
dec
sub
mov
jmp
dec
sbb
mov
dec
mov
pop
fmul
push
jl
insl
fcompl
push
fldz
mov
ds
gs
loop
lret
sub
inc
push
in
mov
aaa
mov
cmp
cli
loopne
bound
shll
mov
jle
adc
cmp
and
insl
cmp
test
mov
dec
out
add
test
aad
fists
xor
mov
imul
dec
repz
int
test
into
adc
and
cmp
sub
cmp
sub
cmpsb
adc
lods
lods
lcall
dec
push
outsb
fadds
mov
sub
out
jno
mov
xchg
and
pop
fadds
add
inc
push
pop
lret
stos
std
mov
cmp
mov
movsb
scas
sub
andl
jge
pop
sbb
lret
fisttpll
lds
shr
push
negl
sub
das
inc
pusha
cwtl
imul
sub
iret
adc
xor
shrl
jp
aad
ss
out
lcall
clc
call
ds
dec
out
mov
jo
jne
add
cwtl
ret
pop
cmp
push
inc
jl
out
int3
movsb
cmp
add
push
pop
scas
push
arpl
and
pop
aam
xor
clc
jg
repz
inc
test
movsb
pop
cmpsl
xor
les
int3
xor
data16
sbb
inc
kortestw
imul
lcall
hlt
xor
fsubrs
jne
or
jbe
pop
ljmp
mov
jae
or
in
aas
stos
cmp
mov
mov
lods
lds
sbbb
xchg
sub
stos
mov
cmc
sub
cwtl
mov
jp
xchg
arpl
sahf
aaa
clc
pop
pop
testl
outsl
aad
out
dec
xchg
inc
repz
mov
repz
mov
xor
xchg
sub
cmpsb
sub
sbb
lds
imul
lods
dec
mov
mov
dec
into
mov
pop
imul
jne
mov
sahf
insl
dec
xor
test
gs
dec
mov
jecxz
js
jb
lret
push
or
jbe
fmulp
push
jg
cmp
cltd
cli
aas
ret
jl
and
xor
jnp
xor
and
lahf
sbb
shrb
out
lahf
dec
into
popa
lock
mov
adc
cmc
pop
and
mov
or
gs
jnp
imul
sub
sbb
adc
mov
sahf
xchg
popf
aaa
jle
pop
inc
in
repnz
mov
xchg
popa
daa
enter
mov
pop
sub
pop
pop
pop
repnz
mov
mov
lahf
jmp
or
jp
jbe
popa
imul
fadds
xor
test
fcmovu
mov
mov
push
mov
mov
sub
xlat
adc
popa
inc
adc
cmc
dec
cmp
or
sub
movl
jl
cmp
jb
dec
push
adc
mov
adc
lds
and
jmp
mov
pop
xchg
fdivs
inc
mov
lahf
loope
pop
loopne
imul
scas
repz
out
pop
pop
popa
adc
jle
xor
enter
loope
xor
mov
cwtl
jnp
pop
dec
incb
xchg
inc
cmpsb
sub
insb
jne
js
mov
or
jbe
das
inc
and
or
mov
scas
scas
ljmp
fdivl
mov
in
pop
in
icebp
and
mov
pop
aad
jp
push
jo
push
mov
scas
imul
jno
or
xchg
out
lret
xchg
dec
arpl
push
insb
jmp
push
push
pop
xchg
pusha
lock
inc
jae
lds
decb
xor
jae
push
call
fisttpll
pop
push
int3
or
add
cmp
mov
loop
shlb
fsubs
add
bnd
aaa
inc
mov
mov
inc
aad
fnsave
sub
xchg
das
xor
jns
or
dec
fs
sbb
ret
mov
popa
dec
xlat
mov
pop
xor
push
xchg
sbb
sbb
mov
je
xchg
and
mov
mov
dec
cwtl
sbb
ffree
and
js
jge
lret
or
xlat
test
jo
cmp
sahf
mov
icebp
mov
xor
loope
fidivl
repnz
push
pop
cmp
adc
sbb
xchg
in
xor
call
mov
push
stos
pop
push
mov
test
nop
push
jbe
cmp
mov
jmp
inc
ret
inc
xchg
mov
sub
adc
xchg
sahf
and
dec
and
ds
sti
adc
out
dec
loopne
push
add
jbe
ret
inc
and
adc
scas
hlt
in
icebp
fwait
cmc
loope
sbb
repz
mov
add
int3
das
mov
pop
push
inc
mov
cltd
das
sub
mov
in
mov
les
mov
adc
ljmp
outsb
lahf
rorl
jns
bound
repnz
or
shll
int3
and
and
pushf
xchg
out
adc
add
xchg
ljmp
pop
add
int
fld
enter
sahf
mov
inc
pop
sti
enter
dec
ret
and
in
test
mov
add
jp
repz
cmc
dec
lahf
test
push
jne
enter
fiaddl
cltd
mov
pop
fistl
insb
jb
mov
sub
mov
gs
scas
stos
add
gs
pop
les
xor
xchg
cmc
testl
mov
lea
mov
mov
aaa
fdivl
mov
mov
dec
test
repnz
xor
mov
inc
lods
push
test
stos
mov
adc
xchg
mov
lds
adc
mov
and
es
mov
orl
cli
cs
or
or
addr16
mov
add
stc
and
add
add
inc
or
cmpsb
andl
leave
xchg
inc
clc
lcall
stc
sbb
nop
jns
outsl
cmp
in
das
out
roll
mov
dec
pushf
daa
dec
imul
mov
es
xchg
inc
mov
jbe
cmp
push
xor
sub
hlt
xchg
jp
mov
in
in
in
push
pop
fsubs
ror
push
int
cmp
mov
rolb
adc
jge
mov
cmp
xacquire
lret
or
out
cmp
jl
pop
dec
outsl
mov
hlt
cmc
int3
shrl
insl
shr
jecxz
push
mov
into
jmp
cli
mov
addb
mov
in
stos
lahf
xor
add
into
lods
cli
out
and
rcll
shrl
mov
filds
xor
mov
xchg
movsb
test
mov
add
je
cltd
ds
cli
mov
xor
or
xchg
hlt
push
out
or
mov
outsl
xor
pusha
rorb
leave
mov
push
mov
xchg
xchg
faddl
or
fwait
mov
into
popf
inc
mov
repnz
mov
add
gs
add
addr16
ret
es
push
mov
xchg
adc
mov
data16
sub
dec
call
add
push
fsubl
shll
add
mov
push
and
lods
das
leave
cmc
cmpsl
jne
test
sbb
sub
or
mov
std
sahf
je
sarb
push
fisubrs
scas
or
and
leave
xchg
clc
or
xor
test
dec
ds
add
fbld
sub
daa
scas
dec
mov
leave
stos
hlt
call
pop
daa
mov
xor
dec
pop
pop
test
push
ficoml
lds
fnstcw
outsl
mov
ds
mov
es
shl
mov
sbb
aas
leave
in
fistps
cmpsl
pop
aad
jmp
pop
leave
daa
xchg
mov
xchg
jecxz
sahf
dec
out
jbe
inc
out
rorl
mov
mov
sbb
jecxz
call
mov
call
stos
xorb
andb
xchg
cmp
subl
mov
cs
or
enter
lret
push
add
cltd
incl
daa
dec
mov
into
test
out
lret
or
push
push
arpl
ja
cli
decb
les
push
ja
inc
xor
in
clc
addb
cmp
dec
shll
gs
jg
std
sub
and
out
fidivs
enter
lret
cwtl
in
xchg
or
fxch
aam
fwait
daa
jp
notb
js
rorl
push
jp
mov
mov
aas
jp
and
lds
mov
mov
xor
add
stc
jb
sub
insb
xor
and
push
inc
decl
andl
sbb
jge
fwait
call
loopne
add
jo
jmp
push
cmp
addr16
divl
cltd
sbb
mov
cli
fcmovb
fisubrl
sbb
jg
int3
insl
pop
xor
pop
into
adc
in
shlb
add
fstp
jle
mov
push
jne
inc
int3
jnp
in
sub
and
pushf
jmp
ret
xchg
jp
insb
andb
mov
inc
add
mov
fstps
aas
lahf
inc
idivb
lcall
insl
pop
push
inc
mov
je
xor
imul
mov
mov
cmc
push
dec
imul
mov
popf
sub
test
push
and
and
lea
jmp
jb
dec
lds
mov
dec
mov
jns
jmp
fs
dec
xchg
or
out
mov
imul
sbb
jmp
mov
pop
enter
push
jg
jb
xchg
push
sbbb
rcll
dec
jl
sbb
sarl
imul
clc
cli
repz
jecxz
rcrb
cmp
ret
mov
mov
mov
leave
out
cltd
cli
add
gs
sub
ret
jbe
rclb
pop
scas
ljmp
pop
addr16
pusha
pop
repz
addr16
mov
jne
mov
ss
loopne
mov
inc
add
arpl
rcll
mov
arpl
in
pop
add
test
sub
dec
enter
add
cltd
sbb
xchg
adc
and
lret
iret
lcall
insl
lods
adc
add
mov
fs
mov
jmp
jnp
enter
adc
adc
imul
inc
test
aas
out
out
idivb
leave
jns
and
stos
push
mov
out
test
jmp
fs
xor
jb
pop
adc
ror
dec
xor
scas
pop
mov
or
add
push
mov
push
mov
add
adc
or
loope
das
mov
cld
mov
test
push
sub
mov
insb
xchg
mov
imul
repz
and
cmp
cwtl
xor
cwtl
icebp
call
add
movsl
shll
insb
push
adc
xchg
bound
ja
inc
mov
and
movsb
adc
stos
nop
xlat
inc
es
std
mov
loop
mov
push
pushf
mov
enter
xor
cltd
es
xchg
mov
and
jne
mov
jle
test
mov
iret
stos
stos
adc
push
sti
dec
repz
inc
inc
mov
sub
fst
jo
sub
mov
shr
in
jmp
and
push
mov
mov
data16
sub
jle
jae
into
test
sbb
push
ja
ret
int3
dec
xchg
sub
jbe
inc
inc
stos
cwtl
sbb
cmp
pusha
test
in
cmp
jecxz
mov
inc
jp
jecxz
inc
cli
push
aaa
outsl
gs
or
sub
or
hlt
movsl
popf
repnz
mov
mov
idivb
inc
jp
divl
loop
xchg
je
inc
cmp
xchg
dec
jnp
stc
aad
dec
and
gs
xchg
push
packssdw
fwait
std
ja
cmp
mov
add
insb
pop
sub
sub
dec
or
es
loope
xor
out
mov
pushf
sbb
pop
pusha
sbb
add
dec
push
stos
fidivl
dec
dec
cmp
outsl
push
gs
fcmovnb
ror
aaa
enter
mov
jge
adcb
jno
clc
add
and
inc
into
data16
pusha
cmc
mov
icebp
ret
push
sbb
shl
scas
push
inc
cs
sub
adc
pop
push
inc
in
mov
sbb
pop
jns
cmpsb
int
adc
fdivrs
into
cld
aad
jbe
ret
inc
sub
mov
add
and
iret
sbb
xchg
or
mov
jmp
ret
push
push
arpl
es
inc
cmp
xchg
fs
into
test
jl
inc
jge
sub
rcll
aad
outsb
mov
mov
cwtl
sti
lret
ret
cwtl
mov
push
xor
loop
pop
sub
stc
out
mov
mov
pop
sarb
data16
or
aam
addr16
mov
jo
clc
and
in
lret
cmpsl
nop
insb
mov
es
ljmp
loope
out
sti
or
pushf
ret
test
jb
xchg
cmp
mov
out
ret
fwait
in
insb
inc
xlat
dec
push
mov
cmpsl
test
pop
ficomps
or
iret
cmp
inc
cmp
push
and
rorb
les
xchg
jl
push
je
fdivrs
pop
push
mov
scas
jne
aaa
mov
sub
enter
cs
shl
mov
mov
lods
jecxz
decb
lahf
dec
dec
andb
lods
mov
test
jo
inc
inc
into
sub
loop
mov
mov
gs
xrelease
sbb
mov
or
pop
push
push
jp
add
test
jmp
int
sbb
ja
ss
fucom
sti
cmpsb
orb
mov
jge
add
push
in
adc
or
aad
sbb
mov
fcompl
movsb
push
hlt
lods
pop
repnz
outsl
dec
or
mov
sbb
ja
jl
icebp
outsl
push
pop
sub
es
scas
fstp
dec
es
cmp
mov
aad
inc
popw
jo
jmp
imul
popf
lea
ret
mov
and
int
pop
test
adc
cmp
xchg
enter
setge
es
push
in
adc
pushf
pop
jmp
push
ror
inc
mov
push
inc
mov
xor
xor
shl
sbb
inc
push
pop
pop
mull
loope
mov
inc
sbb
pop
insl
jle
mov
das
cmp
mov
fwait
or
jbe
push
pop
test
push
pop
jbe
lret
xchg
add
jns
fdivrl
push
push
in
fcomp
in
mov
push
shll
push
jecxz
in
pop
sbb
js
add
cmp
mov
out
xchg
test
dec
push
pop
sub
in
push
pusha
sbb
mov
pop
xor
clc
pop
mov
or
xor
inc
adc
mov
mov
aam
das
sub
loopne
and
cmp
ret
mov
repnz
inc
inc
sub
loope
jne
int3
dec
rcrl
and
push
sub
inc
add
out
push
jo
mov
into
lods
inc
sub
xor
sbb
jg
cmp
dec
dec
pop
or
mov
rorl
xor
lret
mov
hlt
sbb
clc
xchg
lahf
dec
push
dec
sbb
mov
clc
leave
mov
or
outsb
or
js
jg
jg
shl
bound
jp
inc
sub
popf
and
push
fdivl
pop
add
test
mov
loope
addl
std
inc
lret
xchg
pusha
in
mov
loop
outsl
cmpsb
notb
clc
pop
jno
ja
add
xchg
add
adc
jnp
sub
in
add
ss
cmp
call
jg
rcrl
jg
adc
repz
rcrb
inc
xchg
sub
xor
and
out
fnstsw
mov
outsl
or
stos
dec
sub
jb
inc
pop
fsubs
dec
in
cmpsl
shr
mov
arpl
mov
leave
xor
imul
aam
mov
push
bswap
jbe
dec
fadds
mov
xchg
mov
jno
mov
and
pop
push
fists
push
mov
enter
jl
pop
lods
popa
mov
pushf
loop
not
mov
add
jp
loopne
je
cmp
lcall
das
mov
xchg
adc
loope
sbb
xchg
push
test
cmc
adc
mov
in
adc
je
adc
hlt
mov
cmp
dec
int3
xlat
pushf
stc
lcall
in
pushf
add
decb
test
scas
cmp
sub
inc
fidivl
and
call
popf
in
out
mov
sub
mov
pop
mov
add
sbb
jae
mov
out
lret
ljmp
fwait
add
cwtl
xchg
out
mov
ss
fwait
movsl
dec
leave
lock
jmp
daa
inc
or
cmpl
sub
dec
add
mov
jge
mov
ss
mov
and
cmp
pop
xchg
and
repz
push
xchg
push
push
ljmp
stc
sub
mov
scas
adc
push
add
in
sti
mov
or
push
sbb
fistl
adc
subb
jmp
jp
loope
ret
rorb
xchg
sbb
es
test
push
fptan
jbe
mov
enter
xchg
ljmp
pop
push
xchg
cs
shll
xor
into
iret
push
sbb
pop
and
out
rclb
sub
cmpsb
xchg
data16
pop
push
dec
inc
fidivs
sub
jl
add
nop
sbb
and
push
outsb
xchg
pop
mov
jns
cld
sti
and
cwtl
xchg
es
sub
jo
gs
mov
dec
push
fldenv
inc
cltd
add
and
out
sub
lret
sbb
lret
mov
insb
test
cmc
aam
es
lahf
jle
subb
push
sbb
std
roll
fs
mov
in
xor
das
orl
lods
test
mov
pop
and
jbe
jns
testb
scas
fsubrl
sub
out
and
hlt
cmp
sbb
xchg
clc
mov
lds
mov
xor
jnp
imul
jecxz
or
stc
add
aad
icebp
inc
jne
je
and
cld
dec
jno
dec
stos
rclb
ljmp
fwait
lea
mov
cmc
stos
push
adc
cmp
scas
dec
ss
jns
rcr
push
shll
sar
add
jmp
sarl
adc
inc
out
adc
mov
xor
mov
insl
push
repnz
cmp
and
fistl
insl
adc
sbb
insb
lock
push
frstor
daa
rclb
and
xchg
cwtl
xchg
das
adc
push
mov
xor
es
xchg
cmp
and
mov
cwtl
cmpsl
in
xbegin
xor
loop
and
xchg
cs
mov
mov
out
jge
popf
repz
dec
lret
cs
pop
imul
pusha
mov
xchg
stos
sbb
jle
sub
sbb
nop
daa
push
shrl
jp
pop
sbb
sbb
adc
icebp
mov
push
jmp
inc
mov
mov
sub
popa
jmp
mov
jbe
icebp
dec
push
xor
jnp
das
cli
inc
pushf
imul
iret
jp
negl
pop
mov
cmpsb
mov
fbstp
push
fwait
push
add
repnz
mull
je
aaa
push
adc
and
push
cli
testl
ljmp
dec
lret
lods
test
or
stc
dec
es
lea
mov
push
cli
mov
push
lods
mov
fwait
inc
enter
mov
jg
stos
ljmp
lret
xor
sbb
jno
in
out
mov
repnz
jl
xchg
push
and
jle
cmp
dec
decl
mov
mov
dec
or
or
pusha
or
enter
addb
jl
sub
pop
stos
dec
jmp
subl
movsb
data16
push
xor
mov
adc
inc
push
cmpsl
push
sbb
ss
mov
lret
cmp
lock
movsb
out
adc
stos
in
fadd
mov
dec
inc
push
gs
pop
and
mov
loop
lods
mov
xlat
cltd
test
cli
movsl
mov
mov
mov
or
or
jne
test
js
stc
jno
fmull
insb
cmp
sub
mov
and
cmc
bound
jae
out
jne
and
mov
pop
mov
fimull
mov
adc
adc
fldcw
fisttpll
sahf
in
or
mov
cmp
enter
jno
jle
popl
xchg
mov
jo
dec
dec
cmpsl
push
mov
xor
adc
je
push
adc
jne
mov
jne
push
ret
cld
shll
ret
or
add
jbe
and
mov
test
xchg
loopne
jl
dec
fsubrl
and
xor
filds
in
cltd
sti
popf
or
mov
ret
in
push
mov
cmovp
and
outsb
jg
test
mov
sbb
scas
or
pop
aam
ret
subl
cli
adc
xor
mov
xor
in
iret
rcll
pop
daa
mov
jae
in
lea
rcr
sub
mov
roll
aam
mov
sti
int3
or
mov
jle
adc
call
xchg
pop
sub
mov
lahf
sub
cli
sbb
push
data16
mov
jne
aaa
cmpb
xor
xchg
adc
mov
push
cmp
xor
imul
jl
repnz
jp
cmp
sub
inc
push
pusha
clc
fscale
int
or
mov
jecxz
fcoms
adc
xlat
xchg
sbb
insl
mov
pop
dec
cmp
pop
inc
adc
push
cmp
test
dec
mov
cmp
lds
imul
iret
out
mov
imul
mov
hlt
mov
movsl
iret
nop
mov
or
nop
mov
pop
ret
pusha
jp
cmpsb
push
jmp
es
lock
sub
cmpsl
pop
enter
out
int3
and
fsubs
incb
xchg
mov
mov
test
push
outsb
aaa
pushf
push
fisubrl
shrl
popa
xor
sbb
xor
fstl
dec
out
js
xchg
xor
into
xchg
and
pop
hlt
loope
xchg
pop
pusha
adc
jecxz
ret
andl
jg
xor
and
out
sub
pop
pop
pop
xor
jo
or
push
pop
aam
sbb
cli
rorl
repz
xor
js
xor
add
test
cmp
stos
dec
cmpsl
jb
pop
loop
add
repnz
aas
fldt
cmp
xchg
fdiv
sbb
cmp
inc
pop
jmp
cltd
inc
cwtl
sbb
jp
dec
xchg
imul
mov
andl
ret
and
jnp
jmp
mov
sti
jge
and
jl
lds
enter
rcl
dec
sub
inc
mov
inc
enter
hlt
inc
jno
inc
xchg
lods
lahf
adc
cmp
xor
jge
test
and
in
mov
pop
in
sti
fsubl
les
sbb
jmp
nop
jae
into
push
cmp
dec
ja
ret
push
sub
jp
xor
xchg
mov
lret
stc
cltd
xchg
stos
mov
or
rcrb
jns
icebp
in
lock
mov
andb
sbb
jo
add
ret
sub
lea
lods
in
and
push
cmp
dec
cwtl
xchg
jge
and
sbb
imul
cld
or
adc
sub
add
inc
dec
sub
sub
pushf
mov
int
daa
adc
ret
jne
lret
jl
andb
lock
mov
or
sub
fcmovnbe
aam
fnstcw
cmp
push
jg
sbb
les
cmp
pop
sbb
inc
dec
repnz
sahf
rcl
push
mulb
loope
or
loop
cld
mulb
dec
pop
xchg
dec
jge
xchg
or
sub
jbe
loopne
sub
dec
dec
jl
add
rol
int3
fsubrs
popa
fidivl
jbe
cltd
into
es
loop
and
lret
aad
push
sti
jbe
data16
sub
out
shll
push
xor
leave
adc
inc
cmp
outsb
jo
jle
mov
ret
fcompl
pop
inc
jnp
test
jne
sbbl
push
punpckhbw
jmp
mov
imul
mov
pushf
adc
xchg
daa
lret
push
push
cs
dec
out
es
xor
ret
sub
mov
testb
cmpsb
jle
fs
push
fisubrl
push
push
push
cwtl
push
cld
add
jp
mov
jbe
test
pop
mov
or
popa
pop
lahf
pop
push
insl
movsl
mov
sub
lret
lret
push
rcr
std
fwait
adc
cmp
cmp
jno
or
ja
mov
fwait
mov
inc
popa
xchg
les
cmp
add
inc
lcall
sbb
loopne
mov
out
jbe
popa
data16
pop
cmp
mov
cmpsb
xor
xor
add
sub
xchg
adc
lock
sub
cltd
fwait
hlt
data16
mov
lods
pop
orb
popl
inc
mov
cld
fidivs
jge
test
adcb
inc
aad
in
inc
or
pop
dec
sbbl
inc
mov
leave
enter
cs
mov
in
sbb
add
cmpsl
in
pop
mov
sub
sbb
mov
gs
pop
dec
pop
pop
inc
xchg
jle
pop
das
sahf
sub
and
jbe
sub
mov
mov
enter
pop
mov
mov
ja
sahf
clc
jg
sahf
ret
push
clc
outsl
jo
mov
mov
lret
nop
test
xchg
data16
mov
adc
insl
or
jle
lcall
push
pop
fcomps
xchg
or
xor
outsl
xchg
cmp
adc
pop
dec
sti
fwait
loope
adc
enter
cmp
std
fisttpll
test
ljmp
jmp
pop
shrb
out
fadd
out
pop
dec
ljmp
aas
lds
dec
and
daa
aam
rcrl
movsl
lock
into
les
fimuls
lds
test
jbe
sub
outsl
hlt
lods
jo
xor
ja
push
mov
enter
push
pop
sbb
fldl
add
shlb
pop
push
jl
in
or
xor
lahf
push
inc
mov
sti
jae
add
fiadds
jne
pop
dec
cmpsl
in
lock
xlat
lcall
iret
jmp
loope
jbe
popa
lahf
or
mov
pop
mov
pop
sub
sahf
pop
sbb
mov
mov
enter
aad
or
pop
jno
inc
mov
es
repz
mov
push
cld
pop
mov
cmp
fcompl
pop
mov
lcall
bound
mov
xchg
test
pop
inc
divl
and
int3
jne
mov
das
jnp
cmpl
jns
mov
mov
cmp
or
es
ret
scas
outsb
and
sbb
std
pusha
cmpsl
vmwrite
inc
in
inc
sbb
jne
adc
jb
add
and
sbb
ja
cs
adc
dec
pop
inc
pop
sub
sti
xchg
inc
in
mov
lcall
sbb
pop
in
xlat
mov
and
pop
jg
in
jne
pop
cmp
inc
arpl
mov
bound
xor
inc
mov
inc
in
test
pop
dec
and
call
cmp
mov
xchg
stos
mov
and
ret
fnsave
repnz
daa
addr16
and
jo
cmpsb
test
test
sahf
or
out
sti
push
ljmp
mov
sbb
dec
jns
jmp
adc
xchg
pop
xchg
cld
dec
cmc
dec
xchg
les
movsl
cltd
mov
mov
mov
sbb
das
pop
aad
into
adc
jp
jle
jb
movsl
lods
out
fmuls
inc
inc
repz
inc
cs
mov
add
add
imul
inc
and
pop
les
sarb
sbb
push
add
sub
jne
stos
fcmovnu
jecxz
inc
stos
jae
mov
mov
sub
mull
cmp
xchg
mov
imull
push
fwait
or
scas
add
test
test
dec
cmpsb
aam
add
jmp
flds
push
mov
out
gs
aad
idivl
outsb
mov
pushf
out
pusha
js
lcall
das
inc
pushl
xor
xchg
gs
cmpsl
popa
cmp
iret
ret
sti
test
or
aam
cld
punpckhwd
xor
or
fmuls
dec
clc
mov
andl
std
or
sbb
shlb
inc
daa
sub
sti
rcll
jae
movsl
call
add
sbb
loope
lock
movsb
aad
adc
ficompl
dec
inc
fisubrs
sub
lahf
or
jmp
aaa
xchg
jle
in
mov
aas
pop
inc
cltd
inc
xchg
add
js
add
lock
xchg
popf
push
shll
xor
repnz
jg
cli
mov
sbb
andl
cmp
sub
dec
add
rorb
mov
aad
push
push
ja
loop
add
fistps
xchg
xor
push
adc
hlt
and
iret
jge
and
and
push
xchg
sbb
cs
or
cltd
repz
jne
shl
xchg
mov
xchg
andl
dec
sbb
mov
jb
push
lods
imull
inc
ss
in
pop
mov
ljmp
in
push
cmp
and
dec
sbb
cld
jp
sbb
sbbb
out
jmp
sub
sbb
mov
inc
rcl
xchg
ljmp
out
jg
add
inc
lods
cmp
aas
jge
sbb
xchg
cld
jp
mov
sub
hlt
add
es
sub
mov
pop
and
jecxz
mov
add
push
xchg
lock
popf
daa
or
icebp
mov
lahf
movsl
xorb
mov
xchg
pop
mov
mov
cltd
sub
sbbb
pop
xor
cmpsb
push
test
fucompp
push
jnp
fwait
js
mov
sub
pop
pusha
cmp
loopne
dec
cmc
stos
lcall
rcr
subl
and
fmull
push
push
cmpsl
jp
jge
xchg
jbe
js
or
mov
sbbl
and
adc
popf
bound
jp
pop
lock
test
shll
das
ror
or
xchg
xor
mov
iret
js
cmpsb
jo
jo
jae
mov
push
xorb
dec
lcall
fisttpl
adc
ss
enter
or
fs
out
or
aad
stos
inc
push
pop
test
lds
scas
in
pop
jl
xchg
sbbb
test
dec
fs
call
in
sub
daa
fistps
jbe
or
lds
adcl
mov
or
or
xchg
and
cmp
les
adc
sub
lock
and
mov
and
xor
dec
movsl
cmpsb
sti
add
adc
lds
adc
xor
mov
pop
imul
fbstp
push
adc
loop
pop
orl
jnp
cltd
aas
scas
js
mov
mov
dec
sub
cmp
dec
sub
sar
adc
call
ljmp
int
jo
mov
sub
mov
pop
inc
dec
out
movsl
push
mov
lret
jle
push
sbb
rclb
or
in
lock
or
fisubrl
into
lret
adc
and
movsb
push
fs
push
data16
orb
dec
shrb
and
xor
push
cld
sbb
cmpsb
fidivrl
mov
jg
pop
jl
gs
pusha
push
xchg
sbb
add
aas
cmc
cld
pushf
mov
mov
stos
lock
int3
adc
sub
mov
stos
fcmovne
push
mov
mov
lahf
lea
mov
enter
mov
orb
addr16
cmp
out
mov
dec
fdivrs
dec
fs
jae
inc
jecxz
shlb
hlt
mov
ret
pusha
loope
jge
popa
push
clc
mov
add
mov
les
cld
sbb
jbe
cmpb
cmp
mov
add
mov
imul
add
rcr
movsl
dec
jge
fwait
inc
pop
aad
adc
in
rorb
out
jo
push
jg
ret
lods
mov
mov
call
arpl
fidivrl
lret
pop
mov
addr16
pop
fdivr
outsl
mov
pop
cld
std
jle
sub
sbb
ljmp
cmpsl
jae
icebp
inc
stc
cmc
and
imul
xchg
xchg
sub
xorps
mov
add
mov
movsb
loope
mov
gs
fwait
sub
push
adc
sahf
ljmp
mov
call
push
fbld
adc
lods
daa
std
and
fistpll
popf
out
loopne
ficomps
lods
out
fsubl
mov
or
int3
xor
ljmp
jge
pop
xchg
jp
cmp
fwait
aam
pop
mov
pop
jno
xor
jb
xchg
dec
dec
iret
arpl
cld
mov
and
pop
mov
push
cmp
or
outsl
mov
in
mov
jnp
iret
add
and
lock
xor
xlat
sar
inc
jns
jecxz
mov
dec
mov
pop
test
dec
and
push
mov
popf
mov
call
lahf
ljmp
push
or
adc
stos
loop
pop
and
loope
push
push
and
mov
push
orl
xchg
mov
jecxz
in
bnd
adc
or
dec
in
out
inc
push
inc
inc
dec
js
xchg
push
jnp
push
cmpsb
ret
js
xchg
mov
sar
out
push
repz
dec
mov
pushf
mov
sub
dec
mov
clc
jb
addb
inc
faddp
pop
rclb
imul
stos
add
stc
cmpsb
xor
out
push
not
cmpsb
mov
fidivl
bound
addr16
cmp
cmp
pop
imul
inc
push
lcall
cmp
push
pop
aaa
pusha
cmc
sub
mov
fcmovnb
cmpsb
mov
scas
xor
mov
pop
xor
jp
into
mov
mov
bound
dec
xchg
xor
subl
pop
jmp
xchg
xchg
addr16
fs
test
mov
imul
ss
or
movsb
mov
aaa
in
jmp
push
cmp
mov
test
mov
js
lods
sbbl
push
outsl
pop
in
push
movsb
jp
rcl
or
in
or
add
int
xlat
out
out
out
jb
test
pusha
mov
jo
shll
and
cwtl
mov
cmp
push
cmp
je
and
sbb
mov
or
andl
insb
sbb
mov
sti
jo
imul
sub
xlat
adc
xor
inc
insb
js
pop
sti
push
jp
pushf
roll
add
sbb
push
push
test
mov
adc
jnp
add
mov
pushf
mov
push
call
inc
pop
add
cwtl
add
rcr
int3
fiadds
dec
dec
push
push
lcall
cld
mov
xchg
pop
negb
fsts
cmp
xchg
insl
xor
push
pusha
add
cmp
sbb
lret
or
and
test
stos
or
inc
nop
add
xlat
sub
insl
sub
cli
xor
mov
imul
xor
push
mov
hlt
nop
push
xor
mov
subb
mov
cmc
gs
popf
call
jae
xor
xor
repz
push
push
xchg
cmp
xchg
adc
and
shll
int
aaa
push
repnz
inc
push
and
out
loope
aam
adc
les
mov
out
xor
daa
or
sub
inc
add
or
xchg
repz
scas
mov
icebp
add
sbb
cmp
cmpsb
and
pop
clc
or
xchg
fld
pop
cmpsl
xchg
pop
xchg
push
push
dec
or
mov
or
xor
push
add
sbb
jg
cltd
push
xor
in
in
mov
mull
jbe
inc
lods
and
cmp
cmp
mov
or
andb
das
adc
test
mov
shrb
mov
mov
xchg
int3
pusha
sub
inc
lret
push
clc
lret
adc
mov
mov
push
push
mov
outsb
or
lahf
sub
leave
sbb
sub
test
lahf
mov
push
lcall
cli
in
xchg
cli
fwait
dec
jge
inc
xchg
int
jne
nop
cmp
jl
lcall
xchg
andl
xor
add
dec
jbe
pop
push
jp
call
lods
xchg
mov
and
mov
aam
push
cmp
pop
in
fistl
popf
test
iret
mov
xor
push
or
mov
mov
in
scas
or
mov
pop
imul
lock
pusha
mov
addr16
sbb
movsb
or
sub
and
daa
mov
mov
adc
bound
mov
sbb
or
or
aaa
pop
out
jnp
sbb
mov
cmp
pusha
and
insl
cmpsb
test
pop
inc
dec
dec
xor
dec
jbe
xchg
pop
jno
mov
add
mov
xchg
dec
jnp
cmp
mov
ret
mov
cltd
mov
sbb
dec
faddl
cld
test
cmp
rcrl
dec
xchg
outsb
xor
sbb
ljmp
fdivr
xor
xor
xchg
out
daa
push
and
push
push
or
xor
fs
xor
cmp
xor
rcr
mov
or
cmpsb
std
dec
jae
mov
cmpsb
out
mov
pop
outsl
mov
and
or
fstps
jae
push
mov
fstps
ds
and
add
sub
pop
xor
insl
jmp
inc
dec
cwtl
hlt
lods
sbb
jle
aad
push
cli
jns
fldz
mov
fcmovnu
cmc
lret
lock
arpl
jae
and
mov
inc
in
aas
push
jecxz
scas
pushf
rclb
and
icebp
test
adc
popa
lret
push
push
jne
push
popa
shll
aad
mov
test
pop
cmp
fdivrl
movsb
dec
daa
test
mov
mov
les
mov
pop
lret
pop
mov
sub
jae
cwtl
mov
inc
je
inc
or
outsl
mov
push
xor
int
enter
aas
mulb
sbb
dec
push
gs
popa
cltd
enter
sbb
bound
and
out
repnz
lock
mov
jbe
test
sbbl
negl
or
mov
ds
dec
cmpsb
imul
sahf
adc
mov
jns
pop
iret
fadd
icebp
shr
push
or
adc
dec
sbb
mov
int3
loopne
jbe
bound
les
xchg
mov
xor
cmpsb
mov
cmpsl
fsts
lods
or
or
xchg
xor
xor
pop
mov
sahf
dec
jp
mov
popf
loope
cld
jno
movsl
dec
xor
mov
mov
and
fbstp
xchg
in
repz
loope
iret
aam
lods
push
adc
xchg
loop,pn
xchg
cwtl
fs
sbb
and
es
loop
lret
xlat
fiadds
shll
mov
push
or
inc
je
cmpsb
cmpsl
dec
push
cmp
pop
outsb
mov
rorl
std
jecxz
sbb
lcall
jmp
sub
cmpsl
and
add
jmp
lret
pop
jecxz
push
fcoml
push
push
ljmp
mov
cmp
push
pusha
ds
push
push
sub
out
in
pushl
push
outsb
stos
test
les
sahf
testb
or
shll
jle
loope
sbb
xor
mov
dec
leave
sbb
mov
pushf
pop
mov
adc
pushf
mov
std
pop
xlat
dec
add
xchg
pop
icebp
rcll
push
mov
fcmovnb
fstpt
push
dec
out
lret
sahf
adc
sbb
pop
mov
dec
cltd
adc
in
ljmp
loop
bound
sub
shll
or
adc
fs
or
call
xchg
and
sbb
push
fildll
insl
mov
call
stos
adc
es
lret
movsl
push
sbb
adc
fcoml
inc
push
add
mov
incb
or
xlat
sub
xor
loop
sahf
hlt
ret
mov
pop
sub
dec
pop
add
fsubrl
into
out
sub
cli
and
mov
xor
aad
pop
shlb
add
in
clc
lahf
aaa
jae
add
mov
loopne
jmp
nop
sbb
shlb
push
pop
and
movsl
or
pop
loop
jge
les
push
inc
add
mov
pop
sub
scas
sbb
sbb
addr16
xor
shlb
jnp
push
mov
insb
movsl
xor
sub
jo
rcrl
lahf
adc
ret
jne
test
add
fadds
xchg
insb
dec
adc
inc
inc
sbb
or
xchg
and
xchg
inc
push
mov
pusha
ljmp
bnd
fcomps
xchg
jbe
js
inc
xchg
mov
cs
out
sub
mov
adc
and
je
pop
loopne
pop
add
in
inc
dec
ja
pop
adc
stos
lds
add
loope
andb
addr16
push
mov
arpl
imul
insl
jp
aam
adc
rcrl
rcrb
insb
scas
negl
push
jle
fstl
insl
sub
inc
inc
cmp
stc
push
xorl
lds
pop
inc
scas
and
dec
xlat
cmpsb
sub
or
jmp
into
fdiv
add
cld
sub
add
push
test
mov
movsb
pop
jle
sub
leave
les
lret
adc
or
cmpsb
jle
jl
mov
lret
mov
xor
dec
mov
jae
cmp
test
bswap
pushf
das
addb
jb
adc
or
xchg
add
xchg
mov
popl
js
rcrl
mov
mov
pop
cmc
lret
js
ret
mov
call
repz
pop
jp
push
xor
lea
aaa
dec
push
adc
and
pop
mov
adc
repz
push
cmp
fsqrt
mov
xor
sarl
cli
enter
ret
les
cmc
jnp
mov
repz
add
dec
test
xchg
adc
mov
stos
and
inc
mov
mov
jmp
inc
mov
jp
add
or
fcmovb
lret
cmpsb
lods
in
or
cmp
xchg
imul
push
aaa
int3
adc
lea
orb
outsl
test
mov
data16
mov
jae
dec
cli
jecxz
add
pop
sbb
test
lds
fisttps
xlat
int3
lahf
fwait
and
push
ja
ret
inc
xorb
push
push
sub
or
jle
and
into
lock
xor
hlt
xchg
shl
cmp
out
xor
nop
test
mov
mov
in
mov
les
subb
jb
pop
xor
adc
je
mov
fs
sub
mov
adc
push
cmp
xor
adc
out
shll
and
or
inc
repnz
mov
jle
lret
xchg
repnz
dec
jl
je
jp
dec
cmp
dec
cmc
and
subb
cmpsl
dec
dec
stc
jo
mov
mov
lea
int
or
fsubr
mov
sti
scas
aam
jl
inc
movsl
pop
push
int3
scas
adc
sbb
add
cmp
or
mov
cmpsb
addl
jae
dec
not
push
push
xchg
pop
jae
cwtl
xor
aas
iret
scas
lahf
into
repz
jne
sub
xchg
sub
adc
idiv
and
push
xchg
xchg
adc
or
in
rcrl
pop
jno
pushf
sub
sub
imul
insl
mov
int3
mov
sbb
xorb
inc
ja
rcr
imul
test
and
adc
arpl
sbb
mov
lret
sub
fdiv
xor
inc
jnp
cmp
xor
pop
cmpb
movsb
mov
jl
add
stos
aam
pop
loop
out
movsb
jns
push
dec
adc
mov
inc
mov
icebp
dec
enter
lock
xor
aas
jecxz
or
push
enter
leave
inc
and
xor
das
aaa
int
mov
mov
jmp
je
adc
icebp
sub
push
mov
bound
jle
and
fsubrp
and
sub
clc
push
push
jl
movsl
mov
ljmp
shlb
in
pop
ljmp
insl
and
imul
repz
jno
js
js
jno
lahf
mov
pop
rcll
lds
dec
adc
mov
repz
xor
jne
jns
xchg
dec
push
xchg
popa
idiv
loopne
fs
or
ljmp
ja
pop
push
and
gs
fldt
sub
mov
pop
out
sarb
push
push
pop
loope
and
dec
leave
xor
bound
lahf
fistl
mov
ret
cmp
bnd
arpl
cmovno
dec
mov
jo
std
fnstsw
js
push
dec
adc
sub
outsb
pop
xorb
sti
sub
xchg
mov
mov
push
inc
clc
into
ss
int
mov
fnstsw
push
xchg
pop
mov
xlat
jge
add
arpl
push
sti
fstpt
stos
sbb
addr16
sub
xchg
aaa
jnp
push
inc
dec
pop
add
adc
push
jle
mov
sub
adc
pop
inc
mov
subb
mov
shlb
sub
jp
movsl
adc
pop
imul
iret
loopne
and
mov
mov
xchg
out
je
or
lea
add
fdivr
push
mov
pop
data16
jo
pusha
dec
xchg
ljmp
ljmp
mov
inc
sub
aaa
pusha
aam
or
call
mov
outsl
sub
outsb
xchg
mov
loopne
movsb
and
xor
dec
cmp
lret
out
adc
pop
iret
pusha
dec
shr
cmp
or
pop
and
cwtl
rorb
push
jbe
mov
xchg
mov
pop
push
aam
popf
adc
sbb
mov
and
jecxz
enter
jns
testb
and
stos
negb
mov
cmpb
ds
lret
sbb
jae
icebp
cmp
mov
clc
mov
xor
test
pop
mov
imul
lret
loopne
inc
mov
test
movsl
mov
dec
mov
cmp
cmp
mov
test
dec
adc
jno
shll
int3
jno
ret
test
sub
nop
sub
mov
bound
rorb
aam
stos
dec
dec
dec
push
and
mov
out
jle
in
std
negl
lods
or
jp
sbbl
js
add
cmc
dec
std
rcr
xchg
out
xor
maxps
stos
or
push
lret
add
repz
fsubr
and
sti
pop
scas
pop
inc
pop
fsts
fwait
js
push
push
mov
repz
pusha
ficoms
and
pop
sbb
pop
adcb
ja
add
mov
xchg
pop
lcall
sbb
fsubrl
cmp
repz
push
xchg
out
out
test
aam
cmp
mov
add
add
jno
ja
adc
pop
rol
sti
push
rolb
xchg
popf
pop
stos
stos
xlat
and
mov
sahf
dec
jg
jp
jne
jp
push
mov
sbb
adcb
jno
lods
scas
out
into
insl
cmp
movsl
push
sub
push
fisubl
fnstenv
loop
sahf
fldt
sbb
je
test
add
mov
xchg
cmp
and
mov
cmpb
sub
xor
xchg
rorl
or
fucom
or
ss
pop
dec
dec
fisttps
mov
mov
lods
jle
sbb
ror
sub
shl
std
xchg
out
cs
hlt
in
push
adc
xchg
cmc
out
pop
sbb
les
call
shll
shrl
stos
mov
imul
addr16
imul
call
mov
nop
mov
jae
arpl
mov
ret
cmp
test
push
jae
adc
lods
aaa
arpl
push
mov
shrl
cmpb
ret
add
ja
xchg
add
sbb
les
sbb
sbb
sub
mov
repz
mov
pop
jle
inc
dec
cli
movsl
btr
mov
icebp
inc
loope
sarl
pop
jno
aas
xlat
add
out
negl
sti
inc
and
or
adc
pop
in
mov
mov
jecxz
xchg
sbb
adc
out
movsb
data16
add
or
mov
pop
or
pop
aaa
jmp
loop
cmp
inc
jmp
nop
jbe
dec
sbb
test
rcll
cmp
sub
jns
cli
inc
scas
sub
ja
cmp
or
dec
out
jne
lret
push
adc
subb
xor
sub
jb
xchg
enter
pop
mov
int3
jno
push
ficompl
shlb
mov
xchg
jmp
pop
jnp
ret
in
adc
lcall
int
lods
lock
xor
adc
lahf
push
xchg
mov
movsb
dec
sub
and
cli
adc
jb
xor
imul
adc
ss
enter
mov
aas
cli
jne
fimuls
or
xchg
xor
dec
daa
in
jg
loope
push
cmpsl
lcall
mov
sub
inc
aad
pop
rolb
int3
idivb
out
sti
aas
icebp
aas
adc
mov
insl
inc
inc
mov
movsb
out
or
fisubl
in
outsl
mov
cmp
fisttps
and
loope
or
mov
movsb
cli
mov
cltd
pop
xor
aaa
pop
iret
add
sbb
pop
and
cmp
mov
jae
or
outsb
mov
out
mov
ror
and
insl
mov
js
test
adc
mov
sbb
inc
loop
aas
test
insl
sbb
sbb
movsl
pop
mov
xchg
std
fldt
ja
out
roll
call
aam
jge
push
pop
mov
stos
in
and
out
or
sub
xchg
add
and
ljmp
inc
sub
ficoml
nop
xchg
lds
cmpsl
push
test
repz
dec
add
sti
scas
popa
lea
ret
mov
call
mov
iret
mov
sbb
pop
sbb
or
dec
fsubrp
cmc
int3
add
pop
enter
pop
orl
mov
ficompl
ret
dec
adc
mov
inc
dec
inc
loopne
cmp
or
lods
and
out
fists
pop
jno
xchg
inc
xchg
cmc
fwait
cmpsl
cs
push
xlat
jmp
sbb
dec
adc
pushf
mov
xor
or
aam
mov
pop
outsb
and
out
mov
adc
adc
lods
fistpl
push
jmp
addr16
in
lcall
jns
pop
notl
dec
pop
mov
rcrb
hlt
andl
and
loope
xor
test
mov
mov
out
sbb
clc
add
push
js
adc
jno
jno
rclb
and
and
mov
mov
push
mov
cmp
lfs
sub
arpl
repnz
mov
mov
or
push
push
into
sbb
mov
push
lcall
cmp
mov
jo
cmp
xchg
cmp
and
ds
sbb
cmpsb
popf
test
lret
test
das
outsb
sarb
adc
fdivrs
mov
sub
popa
repnz
lods
and
fisttpll
call
loope
or
mov
mov
ds
adc
ds
jmp
movsl
xor
fs
cmp
jmp
mov
icebp
lock
cli
cmp
mov
mov
pop
int3
lods
jcxz
outsb
push
out
dec
push
inc
cld
repz
test
pop
mov
dec
xor
mov
inc
test
jbe
push
mov
aam
out
int
inc
xchg
adc
or
push
sbb
cmp
les
test
subl
gs
pop
sub
cs
push
leave
insb
ja
cmp
pcmpgtb
inc
test
loope
iret
lcall
xchg
out
xor
scas
mov
push
push
adc
shll
scas
jmp
lock
out
sbb
insl
mov
pushf
pusha
xchg
or
adc
out
adc
fildll
stos
inc
fnstcw
cwtl
and
push
add
dec
mov
in
or
xlat
push
push
nop
and
sti
or
mov
or
out
mov
mov
in
lret
je
fdivs
fstpl
sbb
out
sarb
ret
lock
pop
out
add
jae
ljmp
lcall
stos
movsb
fwait
ret
inc
ljmp
and
dec
int
mov
ficoms
stos
inc
icebp
rcll
push
mov
ret
stos
ss
mov
lock
data16
pusha
mov
or
loope
into
cmpsl
jo
push
addr16
sub
push
pop
cmp
jno
test
jmp
dec
jecxz
dec
insl
ja
xchg
inc
push
int3
pop
push
in
lea
xor
je
jns
roll
clc
iret
jmp
je
mov
rorl
dec
out
lock
mov
outsb
pop
push
xor
xlat
add
idiv
stc
insl
shr
leave
or
scas
jge
loopne
dec
lods
cwtl
dec
fisttps
lret
jbe
add
jg
or
add
jnp
adc
add
cmp
sub
pusha
mov
push
adc
push
test
add
pop
pop
mov
push
jecxz
xor
enter
ret
mov
sbb
xor
mov
jnp
mov
ja
bnd
and
and
gs
notl
pushf
pop
idiv
mov
call
ss
iret
ljmp
scas
push
cmc
xor
jne
dec
rsm
rorl
or
push
cmp
xchg
leave
aam
xor
add
inc
cmpsl
sbb
jmp
xorb
adc
lods
xor
lods
xor
dec
fcoms
lods
das
aaa
or
fisubrs
sbb
repnz
cmp
ret
mov
xlat
cwtl
cld
pop
xor
test
subb
mov
xchg
lahf
adc
orb
xlat
adc
int
pop
jne
cmpsb
push
in
fwait
into
aas
cmp
cmp
not
das
call
mov
enter
dec
insb
fimuls
inc
and
leave
rorl
push
js
mov
sbb
mov
adc
bound
add
mov
test
push
mov
in
mov
dec
xchg
cmp
sti
pop
xchg
sbb
int3
jmp
jg
clc
imull
and
mov
xor
pop
lds
iret
add
mov
mov
cmc
cmp
mov
scas
out
xor
pop
ljmp
adc
mov
aaa
stc
inc
jo
leave
pop
inc
call
mov
cmpsl
das
push
mov
vmwrite
ret
jno
push
mov
bound
push
stos
add
push
adc
inc
mov
test
sbbb
pop
testl
xchg
or
jp
outsl
pop
add
or
jb
jg
arpl
cmc
data16
hlt
xor
fbld
enter
test
push
mov
sbb
or
mov
adc
add
push
imull
xchg
mov
jbe
stos
in
je
add
jb
push
clc
inc
andl
add
ror
lahf
jno
dec
sub
mov
dec
scas
inc
sahf
int3
mov
test
ret
rclb
jmp
icebp
fsubp
jbe
adc
pushf
cmovg
dec
ja
mov
and
sbb
jle
and
jge
mov
std
aaa
lret
mov
and
cmc
clc
adc
jmp
cmp
dec
dec
test
adc
xchg
popa
repnz
push
inc
out
sbb
jecxz
pushf
sbb
cmpsb
cmp
js
mov
cs
les
enter
push
sub
pop
add
push
stos
iret
stos
cmp
and
mov
lahf
and
loopne
cmp
push
add
ds
out
das
shl
mov
sub
mov
inc
shlb
dec
push
push
lret
cs
cmp
movsb
mov
sbb
push
ja
cmp
pop
into
aas
mov
dec
repnz
mov
fwait
add
insb
cmc
cld
jmp
sub
pop
dec
aaa
and
jp
pop
cmp
rolb
mov
shrl
orb
mov
push
sahf
out
push
mov
idivb
movsb
and
mov
sub
mov
icebp
lret
push
mov
mov
pushf
mov
jae
ret
not
mov
inc
xor
inc
or
cmp
inc
cli
sub
mov
mov
aam
lds
xchg
or
inc
movsl
ljmp
lahf
sti
or
lds
sub
fdivrs
dec
xlat
adc
int3
les
push
mov
adc
sbb
testl
mov
mov
mov
cmp
jnp
ret
push
sarl
imul
cmp
movl
imul
jno
inc
sbb
lods
std
or
shrl
add
adc
fstpt
or
int3
ja
cmp
fimuls
shlb
lret
enter
repnz
daa
scas
sbb
or
test
icebp
jge
clc
ficoms
mov
scas
lds
or
enter
adc
jne
pop
enter
jb
fdivl
loop
cli
jmp
jne
pusha
cwtl
sbb
shrl
add
fcoml
pop
es
push
xchg
insb
mov
jbe
aam
call
mov
pushw
cmpsl
mov
or
das
push
in
mov
xchg
imul
mov
mov
out
xchg
mov
lock
cmp
bound
ret
mov
add
mov
int
sarl
pop
aas
xor
inc
cmpsb
push
je
cmp
mov
ds
push
jle
repz
or
into
stos
xchg
stos
stos
ficoms
xor
lahf
or
and
sub
lock
sub
lea
dec
leave
jns
stos
sahf
lret
in
std
enter
fstl
dec
scas
jb
andb
mov
lock
xchg
mov
xchg
repnz
rorl
test
insl
das
jno
add
dec
imul
decb
dec
fimull
es
repnz
jg
push
test
arpl
sub
mov
push
jo
add
xchg
cmp
pop
mov
cld
mov
clc
hlt
cmpsl
lret
jnp
fisubrs
dec
cmp
inc
lea
js
or
pop
dec
test
lahf
je
das
mov
mov
pop
outsl
and
loope
or
and
les
mov
jecxz
shlb
pop
and
and
jbe
cld
dec
sub
cli
sbb
pop
out
mov
stc
stc
jb
mov
fldt
cli
stc
push
loop
addr16
jge
jnp
mov
push
xchg
mov
lea
mov
push
or
push
adc
movsb
cmpsb
ds
jp
cltd
decl
add
xchg
cli
mov
jmp
lahf
lds
hlt
int3
dec
pop
loop
das
jle
or
int3
out
fadd
lahf
insb
xor
test
xchg
xchg
aas
dec
inc
inc
sahf
out
rclb
mov
inc
sbb
jecxz
repnz
xchg
pop
mov
push
pop
lret
xchg
fisubrl
dec
xorl
jns
repnz
push
cmp
pusha
insl
pop
jmp
xor
sub
out
imul
and
xor
sub
mov
xor
cmp
cld
dec
cmp
aaa
lret
aas
jmp
xchg
in
adc
jns
shl
sbb
int
leave
mov
loop
adcb
nop
push
and
sub
sub
inc
enter
sbb
fbstp
rcrb
fmuls
cltd
cmc
mov
lods
sub
jmp
in
jb
cltd
and
fcmovne
push
mov
jae
sbb
jo
xchg
leave
push
stc
push
lret
inc
and
into
jecxz
into
sub
cli
mov
cmp
and
and
aad
mov
cwtl
push
decb
cli
out
jp
iret
xor
xor
add
out
imul
jmp
pushf
fwait
repz
lock
xchg
sub
pusha
lret
rcrb
push
fstl
stos
and
jae
bound
inc
jmp
enter
call
or
add
icebp
push
out
and
jge
sub
test
cmp
xchg
call
xor
add
ss
lret
jns
inc
test
out
int
fidivs
shll
ret
fadd
ret
sbb
mov
mov
sbb
mov
iret
ror
lds
nop
xchg
add
loop
out
shrl
icebp
test
enter
mov
icebp
inc
fmuls
jecxz
int3
mov
jnp
lahf
jle
negb
adc
inc
cmp
pop
cmpb
cli
adc
data16
pop
mov
xchg
push
sub
out
push
pop
xchg
xor
mov
sbb
lock
out
xor
dec
mov
add
and
iret
std
call
lcall
mov
cmp
pop
lds
xchg
push
add
jge
sbb
xor
sbb
shlb
push
repnz
mov
insb
enter
jg
lods
js
fmuls
lahf
mov
call
nop
lods
mov
jae
js
cli
arpl
dec
fwait
xchg
inc
rorb
insl
xor
int3
mov
mov
pop
mov
sub
movsb
mov
rcrl
pop
adc
add
or
fisttps
mov
push
inc
mov
cld
fucomi
dec
and
fistpll
jns
negb
pusha
rclb
lahf
outsl
call
scas
inc
jno
add
mov
loop
and
pop
adc
sar
mov
test
dec
js
clc
loope
fidivs
jb
lock
in
or
ret
sbb
sub
add
dec
icebp
sub
loopne
movsb
sub
jno
jnp
sub
dec
fldenv
cmp
xchg
aaa
or
xor
push
mov
pop
fnsave
movsb
sarl
inc
or
cwtl
dec
jbe
lahf
cmp
cmp
fs
loope
dec
mov
mov
dec
cmp
fwait
fwait
repnz
jmp
push
sub
xchg
or
push
mov
pop
xor
push
and
aam
xor
xor
mov
ss
inc
pop
dec
jb
or
imul
rclb
sbb
jne
clc
insl
fcmove
dec
pop
repz
jb
adc
mov
lret
mov
idivb
aad
sub
sbb
mov
or
sbb
stos
jmp
stos
notl
xor
adcb
aaa
je
repz
inc
imul
lcall
pusha
scas
pop
popa
pop
mov
push
add
pop
in
jg
call
sub
and
mov
xor
push
jl
mov
add
fmuls
xlat
cld
pusha
ljmp
cmp
sub
or
addr16
push
addr16
sbb
lods
adc
mov
mov
push
dec
xor
jl
mov
mov
fadds
ds
sub
cmc
imul
idivl
pop
es
mov
push
or
mov
pop
lods
jmp
pop
sti
mov
push
je
xor
nopl
lods
out
and
pop
inc
ret
repz
iret
andb
fidivs
mov
clc
pop
mov
testb
adc
jne
mov
pop
pop
fsubr
lcall
mov
inc
xor
pushf
push
in
lock
xchg
dec
fldl
inc
mov
mov
add
repz
jne
leave
jns
outsb
pusha
ss
cs
ret
add
fdivr
jnp
aas
mov
pop
or
jo
pop
ss
mov
daa
sub
dec
mov
sub
scas
test
jbe
cmp
mov
mov
adc
push
pop
int
add
cmp
sti
ret
dec
xlat
dec
cmp
outsb
and
jb
sub
leave
data16
leave
or
ss
out
bound
mov
out
test
mov
dec
ret
pop
pop
add
adc
pop
out
mov
lods
shl
test
ja
cmp
push
imul
push
jnp
mov
jecxz
mov
add
enter
aam
rcll
xor
leave
mov
jle
sub
adc
negb
daa
test
popa
testb
sub
imul
sbb
cmp
outsl
inc
in
test
cltd
stc
mov
jbe
dec
adc
cli
ss
mov
mov
fsts
dec
std
stos
push
or
outsl
inc
jne
xor
jnp
inc
call
nop
arpl
inc
cltd
iret
andl
inc
mov
std
add
sbb
lret
lret
enter
iret
lods
cmc
pop
push
pushf
in
ret
jno
cmc
enter
jg
jp
xchg
fsubl
sbb
push
mov
and
xlat
dec
jbe
negl
pop
mov
add
jp
fidivl
mull
push
jmp
jo
cmp
sbb
mov
mov
lret
cmpsl
imul
hlt
mov
bound
iret
mov
sahf
rolb
push
scas
fstps
fwait
fs
cmpsl
hlt
test
fldcw
stos
mov
jl
les
lahf
sub
add
lret
push
inc
scas
inc
xor
lahf
xchg
iret
sub
pop
rcrb
sti
lret
test
jge
imul
scas
push
pop
mov
adc
lock
out
cmp
adc
xlat
xchg
jle
out
jle
mov
sahf
pop
mov
cmp
test
and
mov
ret
addr16
cli
jge
in
mov
xlat
neg
sbb
mov
lds
pop
inc
repz
orl
and
in
sbb
shll
dec
add
cwtl
notb
mov
sar
shr
cld
movsb
imul
sbb
push
leave
fists
aaa
inc
and
jl
push
add
inc
or
sub
lods
cmpsl
in
jl
dec
sar
aaa
jmp
aam
jp
jbe
xchg
pushf
sub
add
lods
inc
daa
inc
inc
xor
xchg
xlat
stc
jno
icebp
ror
add
insb
fsub
xchg
ljmp
dec
and
cmp
fisubrl
pop
js
inc
stos
sbb
cmp
ss
fistpl
add
cs
cwtl
push
adc
lret
lea
push
jg
les
stos
iret
negb
lea
jns
pop
mov
scas
sub
xor
in
subl
in
push
shll
xchg
xor
repnz
xor
lret
lods
cmp
pusha
mov
inc
dec
push
ffreep
jno
cmp
idiv
inc
data16
int
movsb
pop
xchg
mov
xlat
jbe
js
xlat
iret
xchg
test
push
icebp
sub
dec
cmp
dec
repz
pop
jmp
gs
fisttpll
xchg
ljmp
sti
dec
ret
jae
mov
push
push
in
xor
pop
push
xchg
out
es
xor
xchg
aam
lret
fwait
pop
mov
out
cmpl
mov
lock
bnd
mov
call
sbb
jnp
jmp
mov
js
jo
scas
stc
sbb
out
leave
sub
mov
lahf
xor
ucomiss
add
and
jmp
mov
mov
pop
sbb
xchg
ret
rcrb
mov
jo
ja
arpl
mov
and
and
push
outsl
mov
fadds
sahf
mov
mov
sbb
and
and
les
test
or
jae
lcall
xchg
std
ss
lret
in
lea
jns
das
enter
jns
data16
shrb
mov
mov
jae
inc
inc
in
fisubrl
test
pop
testb
xchg
jp
addl
lds
test
notl
xchg
mov
jg
shlb
and
add
inc
dec
adc
dec
sbb
out
fbld
mov
push
ret
cltd
push
data16
cmp
test
subl
jl
xchg
xor
xchg
std
test
dec
mov
jp
movsl
xchg
sarl
sbb
aas
add
pop
fxch
fldt
aam
adc
pop
je
or
add
lret
rolb
push
pushf
dec
decb
das
dec
pop
mov
dec
in
mov
dec
js
inc
mov
jo
pop
clc
jno
mov
dec
jb
jbe
jp
iret
xchg
push
or
adc
mov
pop
and
leave
cmp
popf
pop
push
jae
sahf
mov
xor
mov
cmpsb
lods
xlat
mov
ret
push
or
and
cmp
xchg
lds
jge
insb
xor
and
mulb
and
and
xor
fwait
adcl
adc
rol
mov
mov
fildl
int
xorl
mov
aas
in
stos
shrb
xorl
xor
lret
aaa
sbb
mov
mov
xor
mov
dec
lods
popl
push
and
jecxz
sahf
xor
add
ret
lret
scas
mov
insb
mov
loope
sub
cmp
push
dec
insl
test
fidivl
imul
lret
bound
stos
test
outsl
inc
fwait
or
xor
adcl
mov
fcomps
rep
and
mov
mov
ss
aaa
insb
xchg
outsb
out
out
movsl
data16
and
cmp
and
je
imul
mov
cld
repz
lcall
add
stc
push
out
incl
lea
cld
push
bound
lcall
sbb
cltd
xchg
cmp
xchg
add
or
xlat
mov
pop
out
mov
icebp
cmc
xor
push
mov
ds
pop
rcll
stos
add
popf
sub
cmp
mov
jo
inc
std
fisubrs
mov
xor
mov
jg
dec
fildll
lcall
into
xchg
dec
sub
call
rcll
jne
push
push
fistps
mov
dec
xor
jb
or
test
push
out
mov
std
pusha
mov
testl
in
adc
pop
lret
loop
pusha
ja
mov
popf
mov
xor
pusha
testl
es
loopne
add
movb
lods
lret
xchg
or
mov
hlt
pop
in
or
mov
dec
pop
lret
das
shrb
push
and
mov
and
mov
and
insl
ret
sub
sub
not
sub
jge
ficompl
lret
enter
or
and
outsl
xchg
std
test
in
add
test
mov
out
orb
popa
push
fsubl
lret
xor
cmp
xlat
call
cmpsl
xchg
add
xchg
pop
push
pop
mov
and
dec
fs
and
mov
rcr
sbb
adc
cmp
subb
out
addr16
mov
push
push
xchg
sub
scas
jmp
sti
sti
mov
repnz
sti
inc
subb
and
mov
gs
les
cltd
cmpsb
add
nop
shlb
add
mov
cs
in
sub
vpcmpeqw
lahf
push
push
adc
out
popa
inc
mov
repz
stos
xchg
dec
sbb
xor
xchg
test
daa
les
cmpsl
or
data16
sub
test
test
stos
xchg
and
mov
sarb
mov
movsl
or
and
cmp
in
mov
lahf
mov
repnz
lret
arpl
xor
and
hlt
xor
xor
in
add
dec
outsb
sub
sarb
inc
sub
int3
and
cmp
push
inc
aad
xchg
xor
gs
push
jmp
int3
pop
dec
stos
shl
add
add
lock
cmc
pop
in
loope
imul
mov
xor
sub
and
mov
dec
mov
jecxz
insl
push
mov
repnz
fs
mov
push
rcrb
and
cli
sbb
fldt
out
movsl
repnz
mov
loop
in
inc
jno
mov
cld
cwtl
xchg
sub
pop
push
push
jbe
jbe
cltd
jae
movl
jp
mov
and
pop
ss
and
cmp
sub
xlat
call
dec
dec
decb
and
mov
loopne
bound
jnp
outsb
mov
mov
repz
ror
lods
dec
test
push
sbb
loope
sbb
in
jb
xor
mov
xor
cmp
pop
std
xor
andl
scas
cmc
sbb
ljmp
inc
fs
mov
and
mov
mov
mov
ljmp
jg
sete
cmp
push
xor
scas
loopne
cmpsb
mov
jmp
loopne
pcmpgtw
mov
mov
addb
xchg
sbb
adc
jmp
out
rclb
loopne
cmc
push
jle
adc
mov
mov
xchg
push
testb
xchg
test
mov
fwait
js
addr16
jbe
loop
mov
test
mov
or
xor
or
pop
inc
pop
inc
mov
mov
or
les
cmpsb
cmp
das
out
jg
cmc
lock
mov
and
aas
inc
cmp
sbb
in
aaa
jns
cmp
sbb
pop
push
dec
fwait
push
data16
popf
loopne
imul
adc
and
fnstsw
insb
sub
and
add
and
xor
xorl
cmp
int3
push
sbb
ds
add
outsl
and
hlt
jge
jp
mov
arpl
mov
pop
rcll
pop
fadds
jbe
testb
out
dec
fsubl
xlat
sub
mov
jp
push
fbstp
cli
xor
lods
lahf
aas
mov
and
push
stos
push
test
sub
cmp
push
pop
cwtl
mov
cmp
adc
imull
adc
rcrb
push
push
popa
xor
mov
adc
add
mov
imul
movb
xor
loop
xchg
dec
or
sbb
cld
std
daa
mov
imull
lods
sub
jmp
jge
fisttpll
mov
xlat
add
je
xor
sub
ds
stos
mov
jp
das
into
icebp
jo
fcmovnb
mov
pop
sarl
lret
or
movsb
mov
aas
fmuls
push
aad
ds
aaa
cmpsl
jae
pop
or
push
movsl
mov
push
inc
insl
int3
sub
mov
sbb
fwait
mov
fdivrs
and
fisttpl
sub
dec
adc
adc
jl
aad
mov
mov
pop
daa
in
mov
pop
rcl
mov
cld
cld
cmp
popf
imul
fprem1
sub
fcoms
mov
pop
mov
dec
pop
pop
push
inc
fisttpll
jmp
mov
pop
loope
loop
xor
cmp
mov
decb
push
mov
in
push
gs
lcall
jb
mov
jne
sbb
call
adc
pop
ljmp
sbb
ja
push
rcrb
bound
scas
cmp
and
xor
adc
jbe
pop
out
out
mov
jnp
sti
jle
adc
push
sub
mov
push
cwtd
scas
cwtl
aas
repz
inc
mov
and
mov
pop
mov
lods
xchg
inc
je
pushf
fs
xchg
or
xchg
scas
stos
adc
lock
mul
out
sti
cld
mov
pop
incb
pop
test
push
dec
das
sbb
popa
xchg
shll
outsl
jle
sub
movsl
push
je
push
mov
lods
mov
mov
jl
or
dec
push
push
jmp
xor
jmp
test
cli
test
ret
adc
and
out
loope
and
fwait
xor
sbb
cmc
push
push
add
scas
adc
inc
cmp
inc
pop
and
andb
jp
popf
adc
mov
inc
out
fidivl
xchg
in
neg
mov
loopne
xchg
popa
cltd
les
mov
mov
imul
lret
inc
lret
push
push
clc
rcl
in
add
mov
pop
popa
leave
push
test
popf
and
jge
mov
sub
sahf
pop
pop
xchg
sub
aam
lret
mov
lcall
sbb
xchg
sub
inc
test
mov
mov
ljmp
xchg
mov
xchg
xchg
fisubl
cmc
pop
mov
inc
or
jmp
pop
outsl
and
clc
push
cmpsl
stos
xor
cmpsb
xor
int
out
sahf
bound
lods
stos
push
jp
and
sti
and
xor
test
fldenv
loopne
mov
scas
and
stos
jl
inc
jne
shll
jecxz
cwtl
test
add
fbld
and
push
sti
andl
add
xchg
jge
insl
mov
and
inc
test
fdivrs
push
mov
aam
mov
test
imul
ficompl
mov
in
inc
icebp
and
clc
fcoms
fbstp
adcb
icebp
lds
sub
xchg
jae
inc
push
gs
pusha
push
push
popa
cmpl
push
xchg
mov
pop
mov
call
lcall
loope
out
add
mov
sub
add
jp
add
cmp
add
lcall
xchg
in
mov
ja
or
loope
sbb
ds
es
mov
mov
das
or
jnp
aad
lret
cmp
inc
std
push
cmp
xor
hlt
xor
add
daa
cwtl
out
push
test
lock
sbb
add
es
jmp
pop
pop
incl
jae
mov
mov
outsl
imul
ret
int3
pop
xchg
push
js
popa
dec
jno
cli
shlb
jbe
and
push
cmpsb
clc
into
inc
fxch
pop
jp
popf
out
dec
les
lcall
loope
jns
movsl
outsl
jno
mov
fcoml
and
lahf
mov
les
test
push
cmc
mov
xchg
jns
or
lods
dec
cmp
imul
fsts
or
xchg
scas
adc
or
mov
aad
pop
outsb
mov
icebp
pcmpgtw
inc
jne
addr16
div
xor
das
cld
into
ret
xor
mov
add
inc
push
sbb
push
rcll
test
push
stos
int3
sub
repnz
loope
sub
pop
cmpsb
in
ljmp
cmpsl
cmp
pop
lock
imul
sti
jp
test
lret
sbb
jne
push
push
and
in
or
adc
xchg
add
and
xor
outsl
fsubrs
mov
sbb
and
add
and
arpl
stc
shlb
push
mov
xchg
pop
fdivrs
cltd
pusha
mov
daa
inc
aam
jne
fiaddl
pop
push
jmp
js
loop
adc
inc
adc
mov
push
pop
repnz
cmp
movsl
xor
dec
or
imul
push
imul
mov
ljmp
xchg
ss
xchg
dec
into
push
xchg
mov
sub
cltd
xchg
inc
adc
pop
or
and
mov
iret
sbb
cmc
dec
sbb
mov
fbld
mov
dec
sub
add
push
or
cmp
xchg
shll
mov
ficoms
inc
lret
push
jge
sti
lcall
sub
aam
jg
xor
sti
mov
lcall
push
adc
dec
stos
imul
mov
scas
mov
rorb
enter
add
fcomps
std
sar
and
mov
testw
push
and
pop
inc
xor
mov
xor
mov
xchg
dec
jno,pn
pop
stos
ljmp
loopw
inc
ret
push
popf
jle
lods
push
sub
and
int
lods
inc
sbb
pop
add
jle
gs
pushf
je
insl
cltd
in
int
cmp
sahf
cmp
imul
inc
mov
call
add
mov
pop
pop
pop
push
xor
mov
leave
inc
mov
ret
pop
xchg
leave
xor
inc
push
test
cmp
or
jle
neg
pop
iret
add
fsubl
in
imul
rolb
xor
pushf
cs
hlt
mov
xchg
movsb
and
imul
dec
xchg
lock
insl
mov
sbb
lcall
subl
and
pop
add
shll
std
mov
mov
cs
dec
mov
dec
xor
sbb
fisttpl
xor
and
inc
xlat
mov
xchg
pop
mov
sbb
jle
lock
lret
adc
jl
sbb
xor
fld
jmp
scas
lea
mov
fstpl
push
xor
mov
mov
mov
arpl
ja
shl
inc
cmc
icebp
adc
cmp
test
jmp
jmp
dec
push
xlat
dec
adc
xchg
xor
movsb
int3
gs
mov
mov
push
pmaxub
xchg
movsb
rcl
xlat
out
push
pop
clc
push
push
scas
je
push
roll
stos
ffreep
imul
stc
test
clc
sub
or
xchg
mov
lahf
jmp
das
xlat
dec
mov
lock
jae
cs
cmpsb
inc
in
jns
fwait
pavgb
cli
pusha
insb
push
enter
in
scas
addr16
push
mov
jl
sbb
mov
sub
rorb
push
xchg
pop
inc
ds
mov
pusha
repz
nop
insl
inc
fucom
into
stc
adc
frstor
pushf
mov
es
fcoms
inc
mov
arpl
push
xor
mov
xchg
pop
shll
and
or
pop
inc
in
mov
rcrb
test
inc
dec
xor
aaa
hlt
inc
fnstsw
icebp
sbb
adc
sbb
or
cmp
or
addr16
cmpsb
es
dec
sarb
and
das
xchg
cltd
add
shlb
xchg
shr
fwait
inc
rorb
mov
sub
adcb
jns
jno
push
pop
rclb
int3
loope
pop
dec
call
ds
repz
jno
mov
cmp
in
cmc
jns
outsb
and
dec
loop
inc
and
push
push
scas
pop
mov
rclb
cmp
mov
pop
adc
ret
or
dec
emms
aam
imul
test
adc
add
lock
and
movsl
leave
popf
push
ficomps
mov
mov
push
fisttps
dec
mov
inc
cli
testl
push
add
cs
in
mov
mov
lea
sbbb
movsb
arpl
sti
rcrl
lods
inc
xor
xchg
loopne
mov
push
mov
data16
out
iret
mov
sti
or
cmpsl
mov
cmpsl
andb
pusha
jo
inc
sub
xchg
outsl
adc
xchg
xor
bound
adc
adc
in
adc
xchg
shl
push
xchg
inc
rolb
fildll
xchg
push
push
or
ds
fstl
mov
push
push
clc
movsb
sbb
jno
mov
stos
adc
mov
mov
mov
add
add
mov
lods
ds
mov
push
incb
mov
or
je
pushf
push
xchg
adc
mov
dec
icebp
sbb
mov
push
test
rcrb
mov
or
xor
and
xlat
cmp
dec
add
dec
outsl
dec
mov
stos
ret
push
repnz
fdiv
sub
loop
jb
addr16
mov
jle
pop
adc
dec
cmp
inc
mov
sahf
test
adc
mov
lods
inc
mov
xor
mov
fcmovu
mov
in
sbb
sub
mov
aam
fnstsw
shll
stos
mov
ljmp
pushf
popf
loope
jle
xor
mov
xchg
xchg
pop
fcmovnb
dec
push
jmp
popa
mov
pop
in
das
or
mov
cwtl
xchg
test
and
cltd
mov
daa
into
cmpsl
or
in
and
cmc
ret
test
addr16
std
push
xchg
adc
mov
lds
js,pn
cmp
cmp
dec
mov
inc
hlt
xor
das
icebp
pop
loop
testl
mov
or
out
js
jge
outsl
movsl
std
std
es
out
or
scas
xchg
in
pop
ret
jle
sub
dec
or
cli
sub
and
popf
pop
pop
pop
inc
daa
sbb
arpl
bound
cmp
cmp
xor
push
fsubr
or
jle
xchg
jmp
jno
xor
sub
cmp
data16
mov
bnd
fildll
jp
jo
inc
test
lret
outsb
out
repnz
outsl
cld
add
test
lea
mov
ret
push
bound
std
mov
cld
jg
dec
xor
sbb
fisttpll
sub
addr16
xlat
mov
cmc
ja
mov
mov
mov
inc
incl
cmpsl
mov
add
in
mov
fcomps
sti
fsubs
add
xor
in
pop
add
add
mov
add
jnp
push
and
mov
stc
pusha
das
out
push
ret
aas
negb
add
pop
mov
ds
add
mov
stos
ror
xchg
push
addb
mov
mov
insb
ljmp
and
xchg
enter
lods
xchg
call
push
and
or
adc
jns
push
inc
cmp
pop
sbb
xrelease
cli
test
mov
clc
sub
imul
pop
outsb
movsl
imul
add
cmc
mov
or
jne
icebp
movl
ret
jo
fwait
shll
xchg
std
xchg
popf
push
inc
mov
mov
stos
pop
mov
add
movsl
pop
mov
lock
adc
andl
mull
mov
cmp
sbb
inc
push
ljmp
stos
test
push
sbb
xor
loopne
test
bound
mov
cld
repz
daa
mov
sub
cmp
mov
push
jge
stos
push
add
jge
andl
xor
xor
pop
xchg
cmpsb
pop
inc
cmp
inc
and
ds
mov
cmc
xchg
sarb
rolb
jp
insb
ds
mov
lds
in
sbb
or
cmpsb
push
lret
push
stos
sahf
push
xor
jbe
sub
sahf
shlb
cmp
fiadds
and
push
cmpsl
mov
sbb
lock
movsl
push
aas
mov
mov
orb
mull
mov
xchg
jnp
inc
lret
pop
cmp
out
fiadds
xchg
or
xchg
je
test
fldl
je
push
sbb
int3
in
stos
movsb
xchg
nop
cmp
mov
lds
iret
out
fsts
and
cmp
xor
cmp
add
and
out
dec
lea
pop
cmpsb
xchg
sbb
sub
ffree
pushf
cmp
popa
out
insl
jo
imul
vmaxps
lahf
les
push
xlat
mov
mov
mov
out
xchg
push
add
stos
aaa
inc
jnp
test
fwait
mov
idivb
rcrb
jp
mov
jb
inc
jae
orl
or
fsin
arpl
and
pop
pop
out
inc
out
adc
or
xor
dec
shlb
cld
iret
enter
cmp
jo
xor
jb
ret
and
test
icebp
iret
out
pop
push
dec
jo
stc
push
sub
sbb
fdivrs
and
adc
mov
adc
les
ret
add
ror
inc
adc
rcl
dec
aaa
sub
mov
jb
bound
out
xchg
xchg
mov
xor
loop
jne
or
sub
jmp
push
jbe
adc
xchg
call
xor
sub
js
cmp
inc
mov
dec
cmp
add
mov
popa
movsl
push
mov
mov
jl
fdivrl
inc
push
into
cmp
mov
fnstcw
ret
lock
out
imul
dec
inc
dec
outsl
push
and
sti
xchg
fcoml
xor
js
or
pop
adc
xchg
inc
dec
adc
movsb
cmp
adc
push
pop
stos
cmc
sub
aad
loop
pop
or
fs
sub
jmp
imul
rcrb
push
push
scas
lahf
pop
cli
mov
sbb
pop
in
pop
xor
or
aas
cwtl
sub
dec
daa
mov
push
sbb
or
test
inc
dec
add
pop
mov
sahf
std
add
push
pop
aaa
inc
daa
cwtl
cmp
sub
out
aaa
fisttpl
xchg
xchg
push
jb
push
xchg
movsb
or
xor
pop
lahf
mov
repnz
cmc
push
push
mov
mov
or
mov
mov
lock
adc
test
out
sub
xor
dec
fcoml
cmp
push
fldcw
cmpsb
xchg
insl
sub
scas
stc
push
ficompl
bound
push
test
int
ret
jnp
andb
mov
loopne
inc
xchg
ss
sbb
gs
roll
mov
push
mov
out
cld
mov
mov
outsl
clc
jp
xchg
rcrl
imul
mov
dec
or
add
aam
adc
push
jo
fbstp
pop
mov
mov
adc
mov
fldcw
jne
ds
inc
fidivl
lods
sbb
jl
fst
mov
pusha
or
bound
pop
sbb
cmp
xor
inc
sub
sub
fidivrs
lahf
imul
mov
push
xor
push
lods
mov
mov
ret
es
pop
mov
mov
out
mov
or
sarl
and
cmc
dec
add
adc
xor
fwait
or
xchg
cmpb
pop
das
dec
testl
sbb
js
push
lods
mov
loope
rclw
cli
mov
mov
xlat
jge
nop
or
pop
addr16
fwait
cmp
lret
std
mov
sbb
xchg
aad
sub
loopne
pop
std
imulb
inc
enter
ds
dec
jb
imul
and
push
xor
mov
enter
dec
push
sub
push
loope
fmull
aas
mov
pop
xor
addps
lods
movsl
test
adc
xlat
in
sub
cld
movsl
sbb
mov
dec
jge
fdivrs
popa
rcr
mov
push
stos
lcall
adc
out
jmp
pop
adcl
jg
jp
or
mov
fwait
jge
loopne
jb
ret
xchg
roll
repnz
enter
mov
lret
aas
dec
cmp
xchg
bnd
inc
rcl
mov
dec
rol
mov
mov
sbb
dec
push
add
inc
test
fsubrl
lock
in
or
xor
lret
ret
insb
xor
inc
lds
inc
sub
sbb
adcl
test
aam
lea
out
xchg
add
pop
dec
mov
int3
xor
mov
inc
add
mov
push
push
mov
and
pop
adc
xor
or
push
mov
ljmp
push
imul
jns
push
or
movsl
inc
mov
ror
fs
lods
rcll
xchg
sub
xchg
mov
xor
sub
mov
xchg
ljmp
fnsave
aam
xchg
add
mov
notl
inc
xlat
aam
sbbl
ret
lahf
adc
add
hlt
fwait
xor
ret
mov
pop
mov
in
lahf
das
mov
in
sbb
addl
xchg
inc
mov
jo
int
loop
jle
xchg
popa
outsb
lret
addr16
les
ret
mov
mov
jno
in
scas
lock
jbe
jmp
rol
loopne
insb
add
mov
xchg
sti
mov
xchg
imul
sub
jle
adc
test
stos
lods
mov
pusha
sarl
pop
xchg
data16
fldl
out
xor
mov
mov
imul
xchg
dec
or
js
hlt
enter
cmpsb
js
lahf
in
aad
and
adc
je
jg
xchg
cmpsl
int3
es
xchg
mov
dec
test
xor
cld
xor
dec
lds
push
lods
dec
push
test
inc
mov
jnp
dec
push
and
pop
outsl
movsb
sub
ficomps
or
iret
mov
sub
mov
sub
xor
insb
pop
fnstcw
ss
hlt
xchg
fldpi
mov
push
jle
sbb
add
mov
mov
mov
sub
ljmp
dec
sub
iret
out
mov
sbb
aam
jae
mov
gs
lods
and
fs
sub
loop
mov
out
inc
loop
inc
lret
movsl
popf
outsl
ficompl
cmp
add
mov
mov
movsl
sub
pop
inc
mov
sub
in
out
xor
imul
test
jge
ret
mov
rcll
xchg
or
pushf
mov
sub
call
out
push
mov
lret
inc
mov
adc
stos
mov
jne
stc
mov
loopne
mov
dec
pop
adc
or
lds
sbb
push
push
pop
loop
cli
outsl
pop
mov
jmp
add
cmp
cmp
sub
scas
jmp
add
and
mov
push
adc
mov
dec
mov
movsl
loopne
popa
fildl
fwait
jp
lcall
xor
cmc
daa
jnp
mov
test
adc
decl
mov
xchg
movl
mov
add
je
mov
std
inc
pushf
test
sbb
les
bound
enter
pop
mov
in
int
dec
imul
push
mov
les
mov
and
push
fistl
sbb
icebp
loop
sbbb
mov
cwtl
rolb
pause
xchg
pop
addl
cwtl
push
mov
popf
lods
or
inc
lahf
jecxz
insb
push
out
mov
daa
imul
insb
and
repnz
cs
icebp
xor
mov
pop
push
js
cmp
ret
xchg
int3
mov
clc
mov
fcoml
mov
enter
or
mov
sub
sbb
or
fwait
xchg
in
inc
mov
sub
stc
notb
inc
jbe
and
aas
stos
mov
dec
pop
sub
rorb
add
or
ret
or
jno
loop
pushf
cmp
loopne
mov
pop
push
xchg
xor
mov
xchg
daa
jmp
fisubl
jg
mov
loopne
rcr
cmc
mov
jmp
jp
and
mov
mov
aas
fwait
mov
add
pop
out
and
mov
rorl
in
test
fnstsw
sub
mov
mov
mov
loop
loop
cmp
sub
dec
pop
cltd
cmp
or
movsb
lcall
jle
inc
into
add
push
lods
lods
test
mov
cmp
cmp
inc
and
ficoms
sbb
out
pop
call
add
xchg
mov
ljmp
pusha
cmc
push
data16
popf
sub
sti
mov
iret
sbbb
ja
xchg
aaa
cmp
add
movsl
ljmp
das
jae
adc
ds
xchg
cmp
pop
push
scas
pop
pop
dec
jg
mov
add
test
sbb
adc
cmp
shll
pop
lret
adc
rsqrtps
mov
mov
iret
inc
aaa
xor
shl
into
daa
cmpsl
push
insl
pop
inc
sub
movl
jbe
push
data16
jmp
lods
and
clc
aas
sub
stos
sbb
mov
sub
push
push
or
pop
xor
jp
fidivrs
cwtl
pop
push
inc
or
loopne
stc
setle
xor
sahf
addb
jo
clc
hlt
repnz
and
std
and
insl
cld
ftst
pop
push
lods
dec
fisttpl
andb
test
mov
enter
push
lds
adc
cmp
loopne
mov
jmp
sub
test
ds
test
or
outsb
xor
xchg
call
lret
mov
fstl
and
push
loop
nop
mov
mov
std
adc
fdiv
xchg
mov
mov
inc
or
je
jle
outsl
mov
cli
in
xchg
sbb
mov
push
repnz
test
mov
fstpl
add
in
and
adc
arpl
ja
xor
loop
jmp
out
cld
mov
xchg
adc
pusha
sub
xchg
mov
lds
jp
out
movsl
repz
dec
and
jns
mull
jae
test
hlt
nop
cmc
jnp
cmp
adc
mov
cmc
fldt
data16
faddp
cmp
imul
ds
fdivrs
add
cmp
lds
jmp
aam
xchg
popa
into
adc
mov
add
add
test
fdivrl
out
sub
nop
or
jno
mov
popf
in
sbb
ljmp
lret
ficoml
push
sub
jge
enter
mov
xlat
gs
cmpsb
movsl
in
ds
inc
inc
push
push
mov
outsb
xlat
loope
outsl
xlat
pop
test
std
dec
xor
arpl
sub
xchg
mov
cmpsb
pop
push
out
add
loop
sbb
das
fstpl
ret
cmp
and
pop
stc
push
stc
lret
jmp
nop
add
loope
testl
inc
sub
lret
adc
jp
push
cmp
or
test
jb
lret
jno
push
repz
es
sub
movsb
pop
dec
aam
cmp
and
test
mov
fdivrp
out
stc
outsb
pop
int
mov
or
das
jnp
mov
test
xor
xchg
sbb
stos
ds
cs
lods
lods
arpl
dec
sub
jle
inc
or
xor
push
mov
sbb
sbbl
or
lds
mov
inc
xchg
outsb
adc
ja
inc
inc
arpl
or
cmp
mov
sub
sbb
cmp
call
repz
ja
fwait
sbb
lods
inc
sbb
rcl
icebp
mov
mov
fimuls
pop
adc
mov
mov
push
fnstcw
xor
leave
daa
jo
lcall
pop
lods
sub
mov
lock
xorw
mov
fildl
scas
jp
mov
les
dec
lahf
adc
mov
jle
aas
and
inc
xor
mov
mov
mov
stc
ljmp
daa
andb
jbe
pop
scas
jb
gs
inc
scas
rcrl
shll
and
inc
jne
mov
nop
lds
or
hlt
xchg
push
test
cmp
xchg
es
lock
inc
pushf
dec
sbb
fldenv
rol
fnstcw
xor
jl
xbegin
push
pushf
mov
inc
jnp
sub
or
xchg
das
mov
aam
movb
or
dec
mov
pop
cmpb
lret
sbb
push
jmp
rorl
hlt
push
lcall
into
in
ja
call
jl
test
ret
mov
mov
and
push
gs
test
lret
adc
inc
lret
pop
mov
mov
stos
ds
sub
cli
xor
and
andb
lahf
xor
out
bound
es
sub
cmp
push
push
or
push
enterw
and
mov
int
push
or
lods
aas
mov
jne
test
inc
in
jle
and
ficomps
fwait
test
add
jbe
scas
insl
jecxz
lahf
ljmp
pusha
sbb
call
mov
jno
inc
call
mov
pusha
jg
movsb
xchg
inc
aaa
mov
fcoml
mov
cwtl
test
inc
in
adc
es
push
adc
cmp
mov
mov
lret
aaa
gs
icebp
out
mov
add
lods
mov
clc
enter
imul
cmp
pop
mov
fdivs
xchg
clc
mov
lods
sub
jb
xor
shrb
movsl
imul
lcall
mov
mov
cltd
and
jbe
dec
fdivrs
push
pop
dec
ret
push
dec
mov
ds
push
idivb
xor
ds
sub
gs
fistps
or
inc
jecxz
leave
sti
sbb
xchg
ja
nop
cmp
inc
jne
xor
push
movsb
adc
pop
mov
pop
pop
or
insl
pop
fstpl
mov
xchg
out
hlt
stc
repnz
mov
push
push
sbb
rorl
pause
xor
popf
pop
mov
cmp
add
leave
scas
movsb
sub
shl
sbb
push
iret
adc
mov
dec
outsl
les
inc
aas
popf
stos
pop
loope
mov
mov
cmp
jo
leave
push
add
nop
jns
int3
inc
int
jo
enter
mov
mov
lfs
mov
or
dec
mov
pop
pop
inc
add
mov
or
dec
lret
sub
jo
sub
cwtl
xlat
pop
ds
cld
xor
inc
adcb
in
lea
jo
clc
adc
setnp
mov
pop
mov
and
imul
cs
push
imul
adc
insl
inc
adc
dec
lret
jnp
xlat
inc
movsl
loop
fwait
inc
and
or
test
cs
jg
sbb
add
pop
sbb
push
inc
mov
mov
sbb
jmp
leave
clc
shll
jno
imul
ret
adc
sub
push
lcall
mov
ljmp
jb
adc
sub
cli
lds
pop
cli
call
out
scas
loop
jo
push
adc
sub
push
aam
out
cmpsl
sub
mov
push
cltd
push
adc
inc
cmp
lret
lock
pusha
mov
push
dec
inc
sbb
into
je
aaa
ljmp
pop
mov
inc
scas
aaa
cmpsl
sbb
pushf
cmp
enter
dec
mov
out
arpl
sbb
jno
aad
sub
cmpsb
pop
pop
mov
shl
jno
cmpsb
and
and
sub
pop
or
ret
sbb
xchg
inc
dec
cli
lods
add
rorl
xchg
loopne
xor
ljmp
lahf
faddl
fisttpll
pop
scas
push
adc
adc
mov
nop
sub
lcall
int3
mov
stos
sarb
mov
xor
ss
push
inc
mov
cmpsb
xchg
imul
pop
push
pop
iret
ud0
jo
movsb
adc
push
sbb
jmp
notb
mov
sub
inc
push
scas
stos
lret
dec
xor
insb
xor
cltd
repz
xchg
jl
or
mov
rcrb
push
jae
push
jb
sbb
ss
sbb
es
mov
data16
mov
lcall
loop
repnz
sub
push
mov
data16
xchg
scas
inc
sub
dec
sub
cli
cmc
sarl
mov
add
mov
stos
inc
rcrb
adc
cmpb
hlt
and
xor
loopne,pn
mov
and
or
gs
adc
jl
mov
dec
imul
mov
xchg
mov
mov
inc
mov
loope
xchg
mov
pop
ljmp
orb
and
leave
repnz
push
adc
outsb
mov
cli
adc
mov
int
jmp
dec
mov
leave
popa
pop
mov
sbb
insl
pop
jp
fnstenv
je
frstor
mov
stc
or
mov
sub
aad
push
repz
cmpsb
jge
lock
in
lods
sar
stc
or
pop
xor
roll
rcll
mov
pop
mov
mov
push
fldenv
jne
stc
hlt
jmp
mov
or
pushf
mov
out
push
dec
cmp
push
sbb
mov
fs
mov
ljmp
fadds
xchg
test
xlat
test
decb
cmc
xchg
add
pop
and
test
sti
or
xchg
outsl
testl
cmc
or
sub
lods
jb
das
insb
pushf
xchg
mov
roll
inc
push
test
int
pop
xchg
outsb
cmp
mov
jno
dec
rolb
negb
fs
ljmp
adc
imul
jle
xchg
push
jns
into
leave
push
inc
mov
sbb
fucom
popf
sahf
mov
fs
fsubrs
and
shl
rcrl
adc
shrb
shlw
jecxz
bound
outsl
add
leave
push
lock
jns
push
cmp
adc
ror
push
leave
cmp
cs
add
jbe
mov
jmp
test
test
iret
ret
fldl
mov
subl
or
in
mov
add
and
stos
sub
cli
mov
dec
into
xchg
push
insl
sub
pushf
aam
sub
push
mov
daa
sub
icebp
xlat
push
adcb
in
jge
jmp
lods
cmp
je
pop
out
mov
sub
and
arpl
cmc
out
mov
mov
xchg
jl
dec
jecxz
ret
dec
dec
int
out
push
add
es
movsb
test
in
clc
les
fs
mov
or
fidivrs
scas
mov
and
mov
pop
cmp
fbld
pop
inc
aad
jg
xchg
push
vmread
mov
and
cmp
icebp
push
lds
rol
xchg
cmpsl
hlt
fwait
aad
jnp
push
cmp
adc
fsubrs
cmp
aas
adc
jecxz
xlat
movsb
pop
or
adc
xor
inc
int3
aam
push
inc
mov
lods
mov
ds
outsl
bound
inc
cmpl
mov
push
nop
scas
dec
mov
repz
add
xor
lcall
fcoms
add
xchg
out
and
jb
push
movsb
imul
sub
fs
cmp
add
push
aaa
cmpsl
xor
data16
dec
mov
sub
inc
mov
inc
pop
popa
mov
loopne
stos
and
int
jecxz
jp
mov
fadd
sahf
xchg
pop
mov
shlb
sub
in
cli
mov
xchg
inc
or
jmp
dec
jae
sbb
insl
xor
lea
cmp
in
aas
in
jns
fcompl
scas
inc
cmp
es
fmuls
aad
push
push
jb
fnstcw
in
out
sub
mov
mov
in
stc
push
out
imul
mov
sub
ret
das
cwtl
test
cli
test
ss
pop
mov
jge
ja
cmp
ljmp
inc
ljmp
sbb
cmp
xchg
div
inc
xchg
sbbb
dec
ret
inc
xchg
andb
imul
or
adc
mov
sbb
sub
pop
mov
fcmovnb
movzbl
jbe
addb
orb
inc
addb
pop
rolb
pop
sub
addr16
cmp
outsb
cmp
dec
mov
sub
adcb
mov
leave
frstor
add
push
cmc
and
pop
or
mov
das
stc
dec
sahf
loopne
mov
call
cmpsl
int
cmp
dec
divb
pop
into
jecxz
imul
into
fisttps
enter
xor
jbe
cmp
add
aas
in
repz
cmpsb
push
push
adc
rcll
out
xchg
scas
vcmppd
sub
int3
push
sub
inc
out
sbb
mov
mov
fwait
add
pop
mov
movsl
ljmp
test
push
aam
pop
mov
jns
add
aas
lock
jle
adc
and
insl
xchg
mov
add
and
add
imul
mov
sub
mov
cmp
pusha
add
aaa
ja
mov
das
mov
sub
cmp
dec
jae
addl
jns
cmpb
xor
insl
inc
cld
xchg
pop
in
pushf
and
inc
xchg
jae
mov
jmp
mov
push
shll
mov
add
sbb
cmpsb
std
gs
pushf
pop
and
or
daa
cmpsl
aam
notl
test
fucomip
dec
sbb
rorb
subl
jl
arpl
xchg
sti
stos
adc
pop
or
imul
push
push
fs
sbb
jg
jno
pop
std
mov
or
inc
adc
pop
loopne
nop
sub
mov
fwait
decl
mov
inc
push
cmc
jle
lds
jmp
inc
dec
sub
xchg
pushf
gs
cmp
mov
pop
cmp
dec
cmc
jo
sti
add
sti
cs
sbb
dec
fwait
pop
mov
arpl
fisubrl
xor
sti
dec
mov
imul
push
mov
cld
push
sub
add
jg
mov
insl
sbb
jns
imul
aaa
xor
xchg
xor
out
ss
test
xor
lods
jo
jns
in
mov
sub
rolb
or
mov
mov
addb
std
xchg
pop
jb
std
lahf
cmp
mov
xor
mov
jp
add
push
add
lret
inc
lock
mov
out
mov
fs
dec
sti
pushl
xor
push
sub
inc
sbb
cwtl
fistl
in
cmp
adc
add
push
xchg
pop
jge
fs
outsl
jno
inc
xor
ret
fadds
cmpsl
out
mov
inc
jo
js
test
out
pop
dec
push
incb
cli
adc
inc
in
dec
clc
icebp
sti
dec
ss
repz
or
lahf
outsb
leave
rol
inc
add
cld
nop
cmc
cmp
xchg
mov
xor
loope
cli
mov
lcall
mov
mov
mov
lds
push
sarb
int
sub
subl
movsb
cmp
sub
add
pop
jae
bswap
jb
adc
pop
loop
adc
int3
gs
int3
or
repz
sub
dec
or
mov
cwtl
adc
dec
fdivrl
loope
mov
add
jp
stc
lock
jmp
adc
mov
movsb
shl
outsb
cmp
mov
sub
fidivrs
je
mov
int
push
add
movsl
aaa
pop
rcrb
xchg
shll
fcoms
inc
fsub
sub
xor
mov
dec
das
mov
inc
loopne
jns
fisttps
in
jmp
rclb
push
and
repz
jp
inc
jns
push
cmc
jne
dec
lods
fisubrs
cmp
inc
loop
lahf
jae
jbe
das
pop
inc
sbb
lahf
fwait
outsl
dec
sbb
mov
ja
adc
xchg
sub
mov
dec
push
out
arpl
cli
or
add
cmpl
stos
and
sti
outsl
xchg
push
fldl
insl
and
arpl
adc
pop
mov
aaa
imul
jbe
xor
inc
cmp
dec
jo
xor
pop
imul
cmpsb
mov
mov
add
cmc
out
pop
dec
ja
mov
ljmp
dec
or
mov
sub
aam
cmpsb
xor
or
loop
sbb
jle
or
mov
in
gs
mov
adc
jle
adc
dec
jp
xchg
sub
mov
add
jns
jno
mov
inc
cmpsl
or
cmp
jnp
data16
mov
mov
ret
add
mov
dec
mov
es
aam
push
pop
clc
cmp
xchg
aas
pop
push
mov
dec
mov
dec
pop
push
sti
xchg
cltd
xchg
pop
lahf
mov
add
mov
mov
iret
push
xchg
sbb
pop
push
lret
pop
mov
out
and
adc
adc
and
add
shll
fdiv
xchg
sub
push
fstps
push
jo
add
lret
jb
movl
das
add
sbb
stos
pop
xor
mov
ljmp
jl
std
push
int3
cmpb
cmp
sahf
sbb
rolb
into
leave
and
iret
jb
inc
mov
dec
jae
shll
loope
cld
xchg
pop
movsb
std
cmp
mov
das
lods
mov
fdivrs
or
movsl
loop
scas
fwait
and
adc
stos
pop
movsb
movmskps
mov
lret
lock
cmpsb
inc
jnp
and
jno
push
je
dec
jbe
popa
inc
das
mov
repnz
pop
and
scas
add
bound
sbb
push
stos
leave
ja
jmp
ss
sub
scas
mov
mov
out
enter
jge
cli
sub
push
sbb
icebp
push
scas
movsl
lods
dec
inc
cmp
xchg
sub
bound
lods
pop
popf
cmp
pop
arpl
popa
call
sbb
mov
incb
out
imul
jbe
movl
jne
mov
movsb
xor
fistpl
int3
fistps
mov
test
testb
push
ljmp
sub
sub
sub
dec
jl
pop
inc
jae
scas
jnp
sbb
mov
lods
mov
inc
pop
loope
int
ficompl
shrl
mov
add
adc
or
push
mov
lret
pop
sbb
lea
and
mov
and
inc
mov
in
inc
sbb
jns
xor
inc
inc
in
inc
inc
mov
add
loope
dec
jnp
jl
dec
std
add
xchg
inc
stos
push
xchg
insl
sbb
testb
in
xchg
pop
jbe
lds
mov
adc
icebp
nop
fbstp
mov
jns
push
lock
pop
loope
jmp
xor
xor
jne
mov
jecxz
sbb
or
pop
dec
js
fisubrl
cmp
adc
dec
mov
sahf
pop
jg
jnp
call
inc
cmp
gs
lahf
repz
cwtl
loop
cmpsb
xchg
movsl
and
into
push
lahf
scas
repnz
add
dec
enter
and
addb
frstor
stos
out
cmp
xchg
ret
xor
sub
and
jl
mov
dec
sub
insl
xchg
mov
in
add
ss
dec
and
dec
sahf
add
mov
test
jb
ja
fnsave
loope
stos
sahf
mov
jg
imul
leave
mov
mov
adc
add
ret
add
lahf
adc
fwait
imul
test
sub
xor
arpl
movsl
push
add
ss
lcall
movb
sbb
setae
mov
in
cli
jg
xor
shlb
mov
inc
dec
sti
jg
repz
mov
mov
rcll
or
stos
cmp
icebp
push
into
add
or
nop
in
pusha
dec
jmp
cmpsb
sub
xchg
mov
hlt
lods
dec
roll
add
into
adc
test
sub
iret
into
into
or
xchg
pusha
js
cmp
outsl
xchg
sub
cmp
aam
and
aaa
push
jnp
cmp
jp
adc
inc
mov
adc
mov
xlat
repnz
xchg
sbb
icebp
mov
ss
fistpl
pop
test
in
cltd
sub
mov
lods
mov
adc
js
mov
cmpsb
iret
dec
aad
or
fstpl
je
mov
cli
dec
jl
pop
pop
cmp
push
sbb
xor
adc
add
cmpsl
adc
rclb
inc
pop
dec
imul
sti
nop
in
rcr
xchg
iret
adc
dec
in
mov
adc
ja
adc
dec
mulb
icebp
pop
cmpsl
mov
xlat
scas
xchg
dec
rep
jne
lock
cmp
arpl
mov
xor
in
xor
and
xchg
xlat
loope
rorb
inc
inc
movsl
sub
sub
lods
fistps
sub
xor
xchg
mov
push
pop
rorb
adc
add
fcomps
orl
pop
sbb
push
movsb
add
test
lods
outsl
push
jg
ds
xchg
sbb
dec
popa
jmp
mov
punpckhdq
dec
test
add
and
or
mov
mov
inc
xchg
cmp
pusha
pusha
or
sub
mov
push
aam
enter
jnp
pop
cs
mulb
mov
repnz
rorl
pop
clc
xchg
out
setge
lods
push
movsl
xchg
mov
shll
std
xchg
jp
iret
sbb
std
es
inc
sbb
sbb
inc
lahf
cwtl
dec
inc
sahf
scas
xchg
mov
les
mov
shl
adc
xor
fidivrl
scas
push
mov
repz
xchg
add
and
cwtl
je
xor
xchg
aas
ss
add
mov
addr16
fnstenv
inc
xlat
cmp
sbb
les
dec
pop
push
mov
imul
jns
mov
daa
mov
clc
mov
fldt
inc
test
jmp
mov
idiv
jmp
mov
add
mov
mov
mov
mull
leave
ljmp
sub
sbb
cs
and
gs
mov
daa
jge
clc
test
lahf
or
inc
inc
jnp
aam
adc
sbb
cli
add
repnz
xor
in
mov
mov
mov
mov
jl
dec
adc
repz
and
and
mov
inc
stc
cli
and
into
sbb
mov
fnstcw
jmp
lods
ret
sbb
sbb
and
adc
lea
adc
adc
lahf
cwtl
or
xor
xchg
imul
mov
test
sbb
mov
fmull
and
xchg
mov
sub
in
add
dec
jbe
adc
aas
fnstenv
sbb
les
mov
add
mov
fcmovb
pop
xchg
in
shlb
cwtl
push
out
fisttpll
mov
xchg
mov
aam
pop
lea
dec
adc
call
out
jmp
fdiv
ss
adc
loop
das
imul
xor
aas
pop
mov
cli
js
push
ss
ja
or
ja
test
test
ljmp
jmp
cmc
test
adc
test
add
xlat
cli
fistpll
adc
scas
scas
or
movsb
pop
cmp
fwait
inc
popf
jno
call
les
and
xor
push
jge
addr16
popa
stos
add
out
in
or
push
lea
les
test
in
ds
cmpsb
jle
lods
out
clc
fstps
fiaddl
push
int3
xchg
adc
mov
mov
jp
or
and
fs
div
cmpb
cs
sbb
ljmp
rcrl
test
adc
test
ret
jp
sbb
aas
dec
add
mov
cmpsl
rcll
call
ret
mov
xor
dec
push
hlt
out
stc
loop
pop
pop
push
push
lock
cmpsb
dec
cwtl
ja
add
mov
sub
call
enter
jbe
ret
inc
jmp
inc
cli
push
cmp
jp
push
out
and
jbe
cmp
addl
mov
ds
push
ja
inc
xor
mov
cmp
xchg
and
addr16
mov
push
cltd
mov
cmp
adc
in
mov
adc
pop
xor
int3
xchg
xor
pop
adc
xchg
adc
xor
test
jecxz
mov
pop
cmpsl
pop
imul
aaa
stos
push
sbb
ds
out
int3
mov
out
inc
mov
xchg
sbbb
arpl
lods
push
push
mov
mov
xchg
inc
dec
xchg
sub
dec
fsubs
mov
sub
mov
jno
rcrl
xchg
adc
dec
push
sbb
or
in
adc
hlt
jl
mov
jecxz
testl
cmp
sub
mov
jbe
jge
gs
aaa
adc
das
dec
jmp
insb
or
insl
in
arpl
cmp
mov
das
cmp
ret
outsl
and
movsb
add
mov
and
xor
cmp
ret
stos
adc
mov
mov
sti
push
repnz
sti
test
and
pushf
jge
pop
loope
xchg
mov
push
stos
std
cmp
xorb
in
in
lds
arpl
and
push
test
xor
push
mov
push
call
dec
pushf
flds
scas
and
add
lret
rcr
mov
lret
fcoml
pop
adc
mov
int
pop
push
aad
outsl
dec
or
in
in
sbb
aas
inc
sbb
add
arpl
mov
adc
jo
or
sbb
rcll
pop
mov
or
cmpsl
testb
or
movsb
sub
mov
in
mov
mov
pop
and
inc
negb
insb
lsl
xor
stc
mov
fs
sbb
and
mov
mov
lock
jle
movsb
cmpsl
mov
lea
xor
mov
xchg
cmpsb
add
ja
adc
aad
adc
movsb
sbb
push
fwait
test
cltd
mov
push
xchg
dec
inc
or
jp
push
dec
mov
cmp
imul
shl
iret
pop
cltd
clc
stc
mov
push
dec
lahf
loop
outsb
roll
imul
and
pop
ja
in
mov
jo
and
adc
testl
rorb
jne
mov
adc
mov
call
pop
fisttpll
xchg
xchg
fcompl
sbb
jle
mov
xor
test
mov
inc
mov
pushf
inc
cmc
out
xchg
stc
jp
out
sbb
jns
sub
es
cmp
loop
sub
sub
push
jge
repnz
insl
mov
mov
out
sub
cld
idiv
adc
cli
push
pop
scas
jno
jl
cvtps2pd
cmp
daa
and
std
movsb
std
adc
or
shl
jle
fldl2t
xor
ds
push
and
xchg
xchg
hlt
jp
pop
mov
jo
std
push
ficompl
insb
jbe
and
push
mov
ljmp
xchg
cmp
mov
push
jg
cmpb
shll
inc
inc
dec
inc
sbb
inc
pop
push
or
jge
lock
fnstsw
adc
jno
sbb
adc
and
mov
add
es
or
fnsave
fstpl
imull
fisubrs
jmp
fs
outsl
xor
mov
fmul
cmp
insb
mov
dec
mov
and
js
dec
mov
inc
inc
popf
add
add
es
and
and
pop
sbb
xchg
ss
dec
jns
fnstcw
sub
xchg
es
push
jne
push
mov
sbb
xor
cmp
lahf
rorb
mov
stos
lret
arpl
lods
icebp
or
mov
andl
dec
dec
mov
call
jmp
push
and
mov
dec
insl
orl
xchg
icebp
dec
mov
lock
add
inc
std
inc
cltd
dec
cmp
add
je
pop
mov
push
push
mov
les
bound
inc
inc
xor
notl
cmp
hlt
sbb
pop
push
mov
popa
cmpsl
pop
mov
insb
pop
cmpsb
adc
mov
mov
or
inc
sub
and
or
sub
xchg
mov
je
push
cmp
sbb
cwtl
push
inc
mov
or
add
pop
mov
cmp
fwait
add
aas
mov
ret
cltd
push
lret
test
inc
leave
inc
push
sbbl
or
mov
in
rcll
clc
out
aas
sbb
testl
push
xor
jecxz
js
add
and
and
pop
jbe
jge
and
pop
add
scas
pop
js
xchg
sbb
fsubs
popa
or
lock
push
mov
adc
cwtl
nop
mov
insl
bound
push
mov
out
dec
add
cwtl
adc
std
jns
inc
sub
flds
pop
es
pminsw
das
test
imul
mov
inc
mov
mov
xchg
push
mov
in
inc
pop
iret
fs
fsubrs
xchg
je
loop
mov
dec
bound
movsb
cmc
stos
movntq
xor
mov
jmp
fiadds
outsb
out
pop
push
hlt
cmp
mov
adc
sub
add
mov
incl
popf
mov
pop
mov
fnstcw
pop
push
test
push
mov
mov
or
out
mov
out
cmp
jmp
pop
mov
repz
loopne
in
test
incb
ret
mov
pop
enter
int3
cmp
sbb
mov
xchg
jnp
and
pop
lea
xor
push
and
ja
in
addb
into
into
and
stos
xchg
jp
shr
inc
fwait
arpl
mov
lret
pushf
cmp
pop
push
popf
pusha
lret
cmp
rcrl
and
pop
outsb
aad
mov
inc
jo
xchg
push
or
or
jo
mov
shll
xchg
jnp
pop
xor
sarl
jb
lods
cwtl
popl
push
jg
in
add
rcll
xchg
or
out
pop
jbe
in
ljmp
jmp
addb
mov
mov
sub
xchg
cmc
inc
andl
jae
sbb
jp
clc
scas
pusha
inc
leave
mov
adcb
in
movl
xchg
addr16
adc
adc
jo
jb
mov
adc
addb
dec
mov
sub
add
mov
sti
ljmp
dec
out
push
js
icebp
mov
stc
fisubs
test
push
fwait
call
inc
mov
outsl
sub
arpl
or
cmp
movsl
cmc
or
es
imul
imul
cwtl
lea
push
dec
leave
ret
xor
pop
jb
mov
cmpsb
popa
fstpl
outsb
adc
daa
ljmp
pop
xor
loop
sub
xchg
xchg
aas
sub
jge
jae
cwtl
mov
pop
out
scas
sbb
mov
and
out
inc
xchg
mov
cli
mov
xor
sub
in
test
fdivs
in
repnz
test
fnstenv
std
jno
shrb
lahf
lret
loope
movsl
mov
lret
nop
enter
mov
sub
fwait
xor
lea
sti
jo
adc
xchg
lock
outsl
lcall
mov
insl
sarl
jge
popf
hlt
aas
ret
and
inc
in
push
jns
scas
outsl
cmp
mov
add
jp
jne
in
in
addr16
add
jo
cmp
mov
pop
sub
sbb
jp
inc
sbb
xchg
push
data16
xlat
daa
xchg
sbb
into
jbe
fildll
jl
shl
lret
jg
sbb
inc
pop
lret
mov
and
mov
cmp
loope
jl
faddl
mov
pop
je
xchg
xchg
loop
out
adc
adc
ret
rclb
sbbl
mov
loope
sbb
aam
adc
decb
sahf
jb
pop
jge
mov
dec
stc
dec
inc
jmp
mov
scas
imul
divl
jecxz
cmp
lods
and
mov
test
jbe
push
arpl
mov
pop
push
es
jl
jbe
mov
shlb
fisubrl
rcrb
mov
rolb
loopne
ljmp
push
add
add
cli
mov
andb
cmp
dec
jbe
sbb
xor
and
test
lret
insl
aad
sti
mov
mov
loope
dec
sbb
xlat
inc
jae
pushl
jl
js
adc
mov
sub
and
in
mov
mov
push
sahf
jae
data16
out
pop
stc
popa
aam
subl
cld
xchg
sbb
jo
mull
push
push
sbb
push
xorl
lret
jnp
fisttpl
ja
jp
insb
ljmp
frstor
sbb
rorl
add
aaa
aam
out
sub
mov
test
fidivl
fucomp
mov
test
repz
xchg
push
add
dec
sub
and
jbe
mov
push
jbe
pop
jo
pop
fiaddl
lcall
cmp
xor
cwtl
mov
pusha
testb
inc
mov
sub
aad
movsl
fstpl
pop
xchg
int3
cwtl
mov
adc
and
dec
out
cmp
insl
push
popf
xchg
pop
push
jl
mov
pushf
rcrl
jl
mov
sahf
out
dec
mov
xchg
jecxz
push
stos
add
jmp
jo
mov
add
adc
xchg
sub
pop
push
push
pop
gs
mov
jp
les
in
lds
jno
mov
ss
push
inc
sbb
rol
cmp
dec
shll
jl
jg
cmp
lea
lcall
pop
adc
aam
fwait
inc
sub
repz
adc
mov
cs
xchg
icebp
cmp
and
outsl
jns
lret
sub
daa
imul
sub
enter
jmp
pop
call
cmp
xchg
push
xchg
cmp
mov
movsl
cmp
imulb
lods
inc
cli
hlt
imulb
xchg
and
fcompl
popl
sub
xchg
jmp
out
les
fwait
std
pop
mov
sbb
or
ja
cltd
in
and
call
and
xor
push
jp
pop
xor
xchg
stos
int3
jle
mov
loop
filds
and
ret
cmpsb
lea
movsl
scas
cmc
out
mov
push
mov
pusha
adc
pop
jno
shll
rcrb
ljmp
jbe
shlb
adc
ds
cmpsl
lods
in
sub
enter
fmuls
das
pop
jmp
dec
sbb
jl
out
lds
insl
and
mov
clc
jp
dec
push
mov
push
outsb
xor
subl
adc
mov
push
or
jo
popa
dec
mov
enter
lea
inc
fldenv
subl
sub
pop
cld
inc
das
or
jl
aam
scas
pop
jmp
mov
jmp
add
pop
cmp
mov
and
mov
adc
int
test
jecxz
dec
decl
jmp
mov
and
add
je
jg
inc
or
stc
mov
mov
xchg
mov
ret
inc
or
popa
pushf
mov
ljmp
fmull
jno
repz
jb
js
xor
pop
je
out
lcall
and
popa
fldcw
das
testb
push
push
icebp
mov
rclb
fdivrp
add
jl
mov
mov
or
mov
mov
xor
xchg
xchg
xchg
jb
outsb
arpl
dec
testb
mov
inc
ficoml
jae
scas
add
jne
movsb
insl
adc
inc
jns
mov
dec
push
repnz
sub
fsubl
cmp
sbb
jp
mov
add
push
push
cmp
add
test
leave
xchg
icebp
push
aas
cmp
mov
add
aaa
mov
rcll
rcrl
aad
or
outsl
xor
mov
movl
jecxz
leave
jle
or
add
xor
and
cwtl
stos
popa
orl
les
clc
and
cmp
xor
imul
inc
sti
adc
andb
out
into
dec
repz
mov
xor
imul
ja
mov
adc
movups
and
mov
mov
in
pusha
es
les
aaa
andl
fisttpl
push
or
add
inc
mov
in
and
dec
mov
xor
subb
std
and
test
insl
outsl
sti
aas
xor
xchg
lods
or
frstor
sub
cbtw
sahf
xor
sub
add
rolb
jecxz
and
sub
pop
or
shlb
adc
pop
push
hlt
cmp
fwait
nop
dec
sbb
pop
rolb
jle
scas
sbb
inc
sbb
test
pop
fidivs
and
mov
inc
in
outsb
fistpl
mov
sahf
push
or
sub
test
push
xor
and
sbb
jnp
sbbb
sub
add
test
fwait
fwait
cwtl
mov
xchg
out
aam
sbb
add
and
arpl
dec
stc
imul
push
push
fwait
rcll
pop
mov
lock
fldt
jno
out
insl
mov
push
lea
jl
jnp
test
cmc
sub
cmp
scas
sbb
add
insb
add
stos
in
jmp
loope
mov
xor
mov
int3
xor
fstpt
lods
cmp
pop
jmp
sahf
add
pop
test
mov
sub
add
adc
nop
je
inc
cmpb
aad
call
pop
dec
inc
popf
jmp
inc
clc
jne
cmpsl
rclb
lods
enter
xor
jle
and
mov
sti
pop
js
scas
lahf
adc
sbb
inc
push
add
sub
pop
dec
mov
cmp
nop
mov
mov
iret
cld
nop
pop
pop
mov
rorl
pop
push
push
iret
mov
add
jg
sbb
sarl
outsl
in
jo
push
mov
cmp
loopne
fsts
imul
movsl
adc
sub
imul
sub
inc
pop
adcb
adc
icebp
mov
roll
fs
aam
bound
outsw
imul
call
js
arpl
cmp
stc
inc
adc
lods
xchg
xchg
push
sub
add
lds
pop
add
roll
adc
inc
fwait
xchg
pop
mov
lret
pop
mov
inc
out
shll
push
mov
xchg
ja
mov
imul
das
or
add
mov
dec
inc
pop
movsl
jp
add
movsb
and
incl
arpl
jbe
mov
mov
ret
mov
rolb
add
in
cmp
inc
cmpsl
imull
hlt
test
sbb
mov
arpl
divb
lds
cmp
sub
in
jbe
jo
icebp
adc
mov
sub
fidivs
adc
sarb
mov
push
push
add
cvtpi2ps
cmpl
lret
aaa
inc
stos
push
cmpsb
gs
dec
cmp
sarb
xchg
nop
shlb
test
xor
lods
data16
xchg
dec
push
test
mov
daa
loop
repnz
mov
jl
test
in
fistpll
or
mov
push
leave
popa
xor
outsl
movsb
pop
repnz
and
cmp
push
fs
push
sbb
scas
pop
jl
adcb
and
push
adc
sti
mov
sbb
inc
ret
xchg
dec
cwtl
jecxz
mov
insb
push
ffreep
rcl
js
dec
dec
loop
cmpl
cltd
fs
dec
mov
ret
jmp
mov
loope
and
div
pusha
stc
outsl
dec
fidivs
loop
shr
lds
stos
mov
mov
lods
bound
pop
xor
inc
lea
out
in
sbbl
js
and
push
out
mov
push
mull
sbb
bound
lret
ja
mov
stos
subl
mov
jp
cmpsb
push
lret
jne
xor
mov
push
loopne
nop
push
aas
hlt
enter
mov
or
scas
mov
movsl
cmp
jg
repnz
in
test
push
insb
out
push
cmpsl
out
test
rcrb
or
icebp
mov
int
ffreep
add
jl
push
sub
pmaxsw
push
jne
cmpsb
add
ds
in
lret
mov
and
jmp
mov
movsb
mov
inc
stos
orl
decl
jg
or
push
lret
sbb
push
fidivs
negl
mov
add
cltd
inc
sbb
ret
sti
xchg
and
test
pusha
mov
mov
stos
imul
and
or
lods
ss
lods
ljmp
lods
bnd
mov
mov
mov
fwait
jmp
jnp
aas
adc
daa
mov
movsb
dec
mov
pop
xor
call
sbbb
in
cmp
imul
scas
repnz
add
pushl
dec
pushf
test
mov
loopne
xchg
xchg
xchg
std
std
aad
and
sub
mov
jl
fwait
push
cld
xchg
mov
cltd
ds
fwait
pop
test
cmpb
xor
jecxz
in
mov
sbb
out
xor
dec
cmpsl
es
add
lret
push
out
hlt
jo
cmp
cli
dec
ljmp
fwait
js
add
and
jmp
xor
and
bnd
loope
xchg
std
xor
scas
mov
and
jo
add
dec
xlat
jge
inc
and
les
minps
mov
js
push
js
dec
mov
jno
xchg
dec
jae
xor
mov
andb
into
add
ret
jnp
outsb
cmp
data16
inc
cld
sub
mov
cld
pop
xchg
enter
addr16
dec
icebp
cmp
insl
add
shlb
test
xlat
stc
popf
je
cli
hlt
lods
mov
enter
testl
pop
lods
or
mov
and
jl
addr16
jle
jo
and
sbb
insl
bound
xor
repnz
aam
lret
mov
test
fisubrl
outsb
cwtl
or
insl
mov
sub
repz
push
mov
out
nop
sti
fildl
mov
stos
rcr
in
xchg
cmp
xchg
cmpsl
mov
jns
adc
dec
pusha
cmp
fnstsw
pop
push
dec
inc
push
jb
or
xchg
xchg
ficompl
cmpsb
dec
push
fwait
jns
xchg
jns
cmp
mov
sbb
mov
dec
sti
test
cmpsl
imul
and
daa
dec
xchg
adc
js
adc
and
sub
lcall
cmpl
ret
jbe
bound
cltd
pushf
pop
pop
jge
js
cmp
mov
push
jmp
jl
roll
rolb
aad
ss
dec
jmp
mov
mov
aas
xchg
ljmp
pop
outsl
pop
xchg
vmxoff
arpl
pop
cmp
test
lds
lods
hlt
popa
nop
xchg
jno
mov
cli
rcl
fists
or
and
inc
jl
push
add
sub
adc
dec
mov
adc
insb
push
push
sub
push
dec
shrl
leave
insb
dec
pop
sbb
cmp
xlat
repnz
js
push
fdivr
sub
das
xchg
cwtl
ja
or
mov
push
sbb
push
clc
push
repz
jp
sub
ret
pop
subb
mov
sarb
mov
scas
enter
add
aaa
testb
aaa
cmc
push
mov
add
je
rorb
mov
mov
jb
mov
pop
inc
mov
out
imul
popf
add
jp
sub
adc
popf
xor
and
mov
shll
pop
or
sub
jecxz
pusha
divb
in
fcomip
sub
out
or
dec
imul
xor
iret
sub
ja
mov
xchg
mov
pop
ljmp
addr16
xorl
pop
jecxz
dec
mov
pop
adc
dec
sub
orb
sbb
add
mov
icebp
test
mov
mov
pop
ljmp
std
mov
mov
mov
dec
cli
lea
rcrl
insl
mov
and
jge
sub
loop
pop
lret
adc
cld
bnd
lods
mov
in
daa
xchg
cmpsl
mov
aad
inc
imul
and
and
add
jo
lods
popf
hlt
mov
push
sbb
sub
dec
mov
cld
add
std
into
add
lret
jmp
cs
push
cwtl
neg
into
jb
jae
dec
push
inc
loop
arpl
adc
sahf
sbb
mov
mov
lret
push
pop
clc
je
or
pop
jb
xorb
sub
cmp
ja
cmp
aam
mov
push
sti
in
test
ret
xchg
or
pop
and
mov
pusha
fcmovnu
dec
icebp
pop
inc
mov
mov
and
in
test
aad
inc
sbb
dec
pop
jle
push
roll
out
arpl
mov
add
fcoml
adc
jmp
or
xchg
enter
and
js
popa
rcll
xlat
and
or
test
jae
shlb
xchg
mov
inc
jmp
push
push
mov
bnd
mov
add
outsb
incb
or
jmp
out
cmp
mov
sbb
sbb
xor
adc
xchg
call
adcb
cmp
jns
lea
add
out
jbe
stc
repnz
sti
dec
ret
add
aaa
push
enter
mov
aam
sub
repz
es
outsl
stos
adc
ja
cmpsl
mov
daa
jnp
shrl
xlat
cmp
leave
sub
outsb
and
mov
inc
dec
aas
movsl
fwait
xorl
sti
adc
lret
mov
dec
ss
imulb
outsb
lea
jb
xchg
insl
xor
xorb
mov
inc
lea
icebp
and
fsubrp
pop
mov
sbb
adc
mov
and
pop
jns
sub
inc
adcb
mov
pop
sahf
pop
ret
bound
mov
sub
popf
jl
fstpt
dec
add
jge
and
lock
fldcw
std
mov
mov
cwtl
fdiv
cld
xchg
sub
push
ss
xchg
push
xor
outsb
fcmovb
pushf
addl
clc
int
or
mov
pop
mov
pop
icebp
stos
test
movsb
inc
gs
outsb
out
cld
ret
add
jge
push
jg
adc
mov
pop
shll
dec
lahf
pushf
in
mov
jne
mov
idivl
xor
pusha
xchg
jle
mov
pop
leave
pop
stos
scas
push
inc
xchg
popf
inc
int
cld
jecxz
inc
rcl
adc
cmp
push
mov
mov
lahf
sbb
mov
push
imul
call
pop
xor
movsb
cmp
inc
xor
lcall
pop
inc
mov
ds
sub
cmp
cltd
sbb
fprem
push
mov
jecxz
jnp,pt
push
jae
notb
scas
push
clc
das
pop
xor
fwait
dec
mov
sbb
mov
leave
unpcklps
call
xchg
or
mov
rorb
cld
adc
loop
mov
dec
push
mov
mov
xor
cli
xchg
loop
inc
cmp
xchg
sbb
ljmp
lahf
push
xchg
into
jecxz
fists
adc
mov
dec
fsubrs
daa
mov
jae
outsb
mov
cltd
cmp
ficompl
outsb
ret
sbb
mulb
xor
loop
mov
lods
sub
pop
fidivl
mov
aas
xor
xor
xchg
sarl
js
lods
subl
loope
mov
xor
push
call
pop
mov
movb
fs
ret
adcl
ss
fsubs
sbb
mov
jno
out
nop
dec
and
pop
lret
idiv
mov
arpl
xchg
clc
addb
pop
adc
fstpt
daa
sub
outsl
lock
jb
mov
insl
pop
push
dec
in
daa
test
es
add
jp
cmp
icebp
inc
shlb
das
mov
xor
pop
adc
je
ja
pop
mov
nop
cs
repz
or
loop
inc
imul
mov
aad
outsb
add
mov
les
shll
aaa
xchg
movsb
je
aad
icebp
dec
leave
push
cmp
push
mov
in
add
in
lret
in
pop
jbe
js
cli
push
out
push
mov
jecxz
adc
icebp
lea
inc
int
lds
in
cli
test
gs
sub
outsl
sbb
ds
sahf
sub
test
push
std
pminub
jl
mov
stos
add
or
cmpsl
cmpsb
or
shlb
iret
repnz
aas
int3
mov
ret
cwtl
in
or
push
outsb
xor
movsl
pop
rcr
sbb
and
mov
mov
and
sbb
incb
jne
ljmp
add
ret
aad
pushf
add
cmp
mov
xor
shlb
ja
jl
pop
test
rclb
std
sub
pushf
jge
ret
push
adc
mov
ret
jo
roll
jmp
mov
repz
test
sbb
cmc
fdivrs
adcb
fisttpll
mov
or
jmp
fnstcw
xor
jmp
and
mov
outsb
int3
mov
jl
adc
mulb
sub
shll
and
xor
inc
inc
jno
pop
push
jle
je
xor
cmpsb
nop
adc
out
inc
pop
jp
add
dec
cmp
rcll
outsb
xor
mov
mov
sahf
sbb
adc
mov
xor
das
mov
or
cmp
or
std
sbb
hlt
rolb
adc
sub
and
fsub
cmp
unpcklps
scas
adc
jge
loopne
jg
out
push
cmp
call
fcoml
adc
mov
imul
cmc
sub
sub
pop
cld
lret
adc
push
or
fwait
rcrb
aam
call
pop
cmp
push
adc
repnz
adc
push
rcrl
xchg
jg
xchg
enter
mov
mov
jmp
scas
out
pusha
push
mov
arpl
and
cli
cmpsb
ffreep
pop
xlat
or
mov
inc
out
fcoms
push
or
pop
xchg
cmpsb
mov
mov
lods
pop
jge
mov
je
inc
sbb
mov
add
dec
or
aad
pop
scas
push
and
cli
aaa
lret
rcrl
test
mov
stos
jae
inc
push
mov
or
jmp
jb
mov
adc
fisubs
or
push
hlt
xor
dec
cmp
lods
loopne
bound
pushf
cmpl
int
inc
test
lods
add
faddl
fcomp
insb
or
in
das
push
add
lods
subb
leave
pusha
movsl
jg
sti
mov
push
mov
dec
xor
inc
les
popa
xor
fs
push
and
push
mov
mov
xchg
xchg
aaa
nop
mov
idivl
cmp
pop
fs
lahf
push
fstps
dec
and
mov
inc
mov
xchg
and
cmp
scas
adc
mov
adc
stos
sub
or
in
decb
repnz
or
inc
out
xchg
jnp
xchg
insl
push
sub
xchg
mov
jmp
adc
sub
adc
add
xchg
cmp
lcall
sti
push
sbb
sbb
inc
fistps
push
jp
leave
mov
jle
lcall
pminub
push
add
nop
push
mov
cmp
pop
or
sbb
fwait
std
and
mov
mov
mov
cmpsb
aam
xchg
pop
xor
pop
lods
adc
sub
adc
adc
cltd
mov
push
leave
inc
or
mov
jno
popf
ljmp
pop
orl
sti
scas
mov
mov
pushf
dec
mov
xchg
repz
sub
int
pop
mov
push
lods
dec
jnp
out
fcomps
and
dec
sub
adc
push
lods
sbb
lret
cmpsl
lea
add
test
xchg
stos
push
lods
je
mov
fisttps
lret
das
in
adc
mov
xchg
xchg
mov
mov
mov
sbb
mov
or
or
jno
aam
outsl
xor
sub
divl
jo
fwait
lret
mov
es
mov
in
xchg
rcl
sub
push
mov
xchg
xor
jae
and
cmp
jge
repz
xor
xchg
pop
mov
loop
jns
xor
cld
fidivs
xor
and
cmpsl
mov
push
daa
sbb
dec
lods
dec
lods
sahf
xchg
clc
rorl
loope
fiadds
je
lods
and
cltd
mov
dec
dec
in
sub
jge
sub
loope
mov
xor
pop
xor
enter
cmpsl
inc
shlb
inc
inc
popa
lock
mov
stc
xchg
sti
pop
push
out
out
fisttpl
clc
jno
ret
leave
or
add
cwtl
cltd
roll
xlat
cmp
iret
adc
mov
loop
fmul
dec
push
dec
xor
xor
jbe
fcmovnb
in
fcmovnbe
in
xor
mov
test
xchg
inc
push
movsb
xchg
mov
sub
mov
jne
ret
into
popf
imul
fimull
fmul
mov
imul
repz
roll
int
pop
sub
jne
adc
xchg
cmp
cmp
or
sahf
add
jae
rcrb
add
mov
push
sub
sub
out
dec
mov
add
push
cmpsl
jno
mov
inc
xor
push
add
loop
jne
lret
movb
adc
push
mov
jno
mov
test
jnp
adc
int
mov
jle
sub
add
mov
jle
or
pop
jo
cmc
les
pop
out
xchg
jle
cld
push
popf
addr16
in
mov
xlat
shll
jno
mov
mov
int
popf
lret
cmp
js
repz
pop
movsb
xlat
enter
loopne
scas
sub
insb
pop
pop
pop
mov
fs
inc
psubq
fldt
xchg
in
sub
cmc
xlat
xchg
sub
dec
cmp
test
mov
rcll
test
inc
aaa
fsubrs
xor
xchg
loope
xchg
pop
or
test
push
or
cmpl
fldcw
or
inc
xor
ss
in
cmp
mov
dec
mov
out
sti
movsl
pop
loop
mov
imul
add
mov
shll
scas
mov
mov
and
pop
iret
lahf
sub
lods
in
pop
pop
xor
pushf
mov
cmp
sub
call
sbb
pop
xor
pop
dec
push
sbb
pop
mov
mov
ds
insb
nop
out
add
xchg
mov
fwait
dec
les
jae
dec
add
stos
dec
add
mov
popf
pop
test
cmp
inc
fstps
stc
mov
je
lcall
adc
cs
gs
aad
push
fistps
inc
rorb
cmp
push
cs
repz
and
outsl
je
push
mov
jg
fidivrl
das
xor
lock
insb
inc
xor
adc
or
call
cmp
popf
add
adc
ljmp
sbb
mov
ss
es
loope
sub
fstpl
outsb
push
xlat
cld
jecxz
dec
jmp
inc
insl
or
add
pop
test
sub
or
jecxz
cmpsb
sub
clc
add
aaa
addl
and
xor
cmp
cltd
inc
sbb
out
sub
mov
movsl
lock
out
jmp
jnp
mov
rcrb
and
fsubp
pop
xor
push
xor
cmc
pop
scas
in
enter
dec
pop
jl
mov
test
mov
mov
pop
movsb
fsts
repz
push
xchg
cltd
in
lock
je
lods
cmp
inc
daa
mov
add
ds
mov
imul
add
mov
sub
mov
sub
add
fs
addr16
xchg
dec
adc
ss
mov
mov
pop
mov
popf
mov
mov
xchg
dec
ret
frstor
in
lods
mov
popf
sahf
jo
shrb
repnz
adc
push
inc
aas
cmp
test
mov
mov
in
fidivrs
shl
push
ret
sub
mov
stos
inc
xchg
aas
push
lods
ds
mov
sub
loopne
cs
shr
adc
out
std
int
push
out
loopne
adc
test
xor
xor
cmpsb
cmp
cmp
xor
loope
mov
add
mov
or
cli
out
lea
aad
or
adc
dec
jmp
inc
ret
add
mov
push
push
sbb
mov
cmp
bound
jp
lock
dec
cld
into
xlat
aad
test
pop
imul
clc
mov
std
pop
test
fs
shll
xchg
sbb
rcr
cmp
sbb
xchg
in
int
popa
dec
pop
push
add
push
insl
mov
jnp
or
sbb
cwtl
rcll
aad
shl
lods
imul
jmp
or
ljmp
inc
hlt
jecxz
fistpll
cs
xor
out
lcall
mov
in
test
jg
iret
clc
scas
adc
in
nop
es
mov
int
mov
pop
aaa
cld
push
repnz
dec
adc
cmp
inc
xchg
rorl
push
push
ret
dec
ja
clc
xchg
add
dec
int3
xchg
and
or
gs
fistps
xchg
xchg
dec
push
ja
sbb
mov
repz
fsubrl
mov
and
loopne
pop
das
int
pop
xchg
cmp
mov
inc
rorl
inc
fwait
movl
xor
outsb
test
ds
dec
fbstp
popa
push
sbb
lcall
xor
shll
xchg
test
mov
cmp
jle
lret
sbb
mov
and
int
pop
adc
pop
push
sub
jno
jg
mov
pop
cmp
inc
inc
mov
roll
ror
add
dec
bndldx
jb
es
sub
lds
mov
add
mov
cwtl
sti
cs
cmp
test
mov
push
outsl
ljmp
popa
add
mov
inc
js
cmp
mov
push
outsl
out
or
fidivs
arpl
xor
cs
adc
or
sub
mov
xchg
or
inc
xchg
mov
dec
in
lods
pop
fcom
aad
mov
adc
mov
movsl
scas
dec
mov
addr16
orb
stos
mov
mov
mov
call
jne
inc
push
je
and
mov
shlb
pop
movsl
sarb
popf
das
mov
fistpll
cmp
adc
jo
popa
cmpsb
iret
xchg
loopne
insb
pushf
sbbb
cmp
dec
pop
lahf
or
movsb
jns
mov
mov
sub
push
ret
arpl
pop
stos
ret
cmpsl
cmc
mov
add
test
call
out
int3
sub
add
int
shrb
pop
enter
fistps
jge
outsl
ja
cld
jge
fadds
out
outsl
xchg
lods
pop
jne
sbb
sbb
ja
mov
jle
or
pusha
xchg
adc
gs
fistl
movsb
daa
cmp
add
pop
cmpsl
inc
ret
mov
negb
sub
je
mov
xlat
add
jge
mov
int3
cmp
mov
adc
xchg
ss
popl
lods
pop
jmp
movsb
cmp
dec
test
cmp
ja
mov
scas
xchg
xor
adc
std
mov
hlt
lret
sbb
jecxz
test
push
add
and
popa
icebp
mov
insb
stos
jmp
pop
loop
and
push
rclb
je
hlt
pop
jne
xor
lahf
fs
inc
jo
test
fwait
rcll
sbb
pop
dec
iret
ret
outsl
jnp
in
cmp
ss
jmp
dec
mov
lea
popf
hlt
punpckhdq
fadds
or
xchg
arpl
in
fcompl
loope
push
pop
xorb
jno
testl
sbb
push
out
jl
loop
mov
xchg
cmp
jns
loope
fld
mov
pop
jo
sub
jge
or
int
cli
pusha
dec
ss
xchg
ret
cmpl
sub
or
jecxz
imul
dec
mov
fsubs
mov
out
push
fnstcw
sub
mov
sbb
shll
jmp
nop
dec
jne
ret
lods
movsb
mov
jle
testl
test
rorb
and
out
stos
mov
dec
lods
mov
push
mov
ss
jbe
inc
push
cmc
mov
int
repnz
ret
outsl
daa
test
mov
mov
dec
es
add
daa
add
dec
pop
cmc
pop
mov
sub
popf
sub
in
adc
and
or
add
mov
lret
pop
ja
and
das
call
bound
icebp
add
scas
xchg
or
repnz
lods
mov
cmp
loope
or
and
lcall
sub
push
cwtl
fldl
lcall
adc
sbb
and
cmp
pop
and
pushf
xor
push
ss
sub
jne
mov
lret
sub
in
xchg
cwtl
add
frstor
inc
pop
dec
inc
jbe
pop
lods
cmp
in
pop
mov
or
popf
lock
pop
in
addl
push
xchg
scas
mov
icebp
push
lret
icebp
dec
sub
gs
mov
xor
lods
or
movsl
xchg
or
pushf
notl
jae
fwait
mov
pushf
and
in
adc
xorl
inc
jl
orl
in
xor
lods
rorl
rolb
xor
call
mov
fwait
add
shlb
mov
out
jmp
push
clc
xchg
cmc
sub
add
or
inc
out
sbb
out
outsb
add
mov
add
ljmp
nop
xlat
jns
jne
lret
mov
gs
outsl
loop
out
lods
fnsave
aaa
jl
out
push
cmpsl
test
int
mov
add
ss
mov
stos
inc
sbb
push
cmc
pop
pop
mov
sub
jg
add
pop
subps
sub
lods
adc
movsb
add
lds
mov
push
and
nop
gs
cli
imul
repnz
mov
roll
rcr
bts
mov
or
mov
or
and
jo
loopne
icebp
add
cmp
stc
negl
mov
out
push
pop
sub
cmc
mov
pop
dec
test
adcb
add
test
jae
add
rcll
sub
sahf
and
mov
dec
aad
lcall
mov
sahf
adc
pop
lods
dec
aad
dec
hlt
outsb
lcall
aam
in
sbb
popa
rol
mov
mov
cmp
sbb
jecxz
out
out
xorb
jp
cmpsb
mov
sbb
loopne
call
mov
xchg
push
ss
addr16
int
inc
sahf
call
fiadds
lret
jne
adc
dec
mov
mov
inc
fdivr
inc
mov
fimull
or
jl
inc
pop
arpl
adc
pop
in
xor
dec
cmp
mov
dec
stc
xchg
sub
sbb
jno
test
xchg
jbe
dec
bound
sbb
pop
inc
je
cmc
sub
push
data16
mov
and
loope
gs
mov
jecxz
aad
test
outsb
cmp
shrb
stc
cmpsb
pop
cmpb
lods
and
insl
fwait
andb
add
sbb
adc
shll
in
icebp
pop
or
aaa
cltd
cmpsb
jo
popa
cmp
push
lods
inc
xor
movsb
lea
xchg
out
jnp
jb
xlat
sahf
roll
pop
and
es
outsb
lods
xchg
xchg
int
mov
insb
pop
test
add
daa
mov
mov
xor
test
cmpb
inc
add
bnd
jmp
adc
jmp
pusha
imul
dec
fistps
inc
test
jno
popa
sub
rol
pop
add
aaa
sahf
aam
mov
pop
in
dec
or
lret
lret
int
enter
mov
sbb
inc
jg
jg
lods
jno
sbb
push
add
add
cmp
and
jp
jb
cmp
push
jns
sub
inc
sub
imul
adc
jl
sbb
ja
jns
nop
pop
push
sbb
jb
adc
lock
pop
loop
mov
add
xchg
test
jnp
rol
cmc
fldcw
test
mov
adc
cs
fsubrp
test
jno
mov
jl
adc
xor
inc
and
insb
clc
mov
mov
mov
movsl
adc
scas
daa
push
sti
mov
sbb
and
fucomi
jge
xlat
and
insl
cmpl
jl
or
stos
xchg
xchg
dec
outsl
mov
mov
fldl
push
pop
xchg
loop
movsb
jno
mov
imul
push
xor
or
push
jo
in
shr
mov
adc
inc
out
sub
inc
stos
jns
sarl
sub
jl
ja
ret
jo
int
lds
outsb
clc
pop
and
repnz
mov
popa
inc
out
jae
sub
add
inc
sbb
xor
jp
dec
aam
test
sbb
sbb
xor
sbb
cmp
or
pop
sbb
pop
pop
les
add
shl
sti
cs
js
sbb
sub
rcrl
out
std
call
xor
insl
hlt
xchg
pop
jnp
inc
out
std
shrl
dec
loop
in
ljmp
scas
mov
jae
test
inc
add
out
push
pop
ss
add
cmp
or
or
pop
adc
mov
sbb
pop
or
mov
push
lret
mov
out
adc
mov
fwait
cli
cmp
inc
jns
insb
or
xor
notb
std
jo
jae
in
cs
or
aaa
xchg
arpl
jae
sarl
and
leave
cmc
jns
mov
add
insl
jg
push
arpl
fnstcw
mov
fbld
cld
gs
inc
out
push
jmp
mov
daa
adc
ja
jle
cmc
in
subb
jnp
inc
pop
mov
mov
lahf
clc
jbe
into
fldt
std
xchg
pop
scas
addl
incl
adc
es
jno
jp
push
popa
sbb
dec
mov
sbb
adc
fwait
mov
in
sti
cmp
xchg
lcall
paddd
shrb
les
sbb
test
inc
std
and
and
dec
call
mov
pop
out
cmpsb
fsubs
in
cmp
testl
cmp
scas
hlt
jle
xor
lea
mov
or
mov
psubusb
jnp
xchg
addb
mov
push
mov
test
pop
dec
jle
scas
push
add
inc
lret
arpl
arpl
sub
xor
pusha
fdiv
mov
lcall
jecxz
push
lea
aas
jecxz
push
mov
bound
xchg
jno
xchg
dec
pop
mov
nop
sub
test
mov
jp
cmp
test
lahf
cmovge
and
or
xchg
jecxz
aam
lock
mov
cltd
cmp
pop
pop
jle
sub
jg
aam
cwtl
cmc
mov
jl
out
mov
add
pushf
mov
cmc
add
leave
mov
pop
je
arpl
ss
shl
or
add
dec
ret
lock
xchg
or
test
das
mov
jne
cmpxchg8b
mov
out
mov
jg
in
mov
sbb
adc
pusha
shll
pop
jnp
jle
testb
int3
stc
pop
arpl
addr16
xchg
pop
testl
add
stos
fs
adc
iret
shll
cmc
adc
outsl
pop
and
push
xor
test
negl
mov
and
sub
out
mov
xchg
mov
out
sub
popa
cmp
sahf
jl
inc
in
daa
insb
aam
xchg
adc
jecxz
in
push
push
and
lock
test
dec
call
hlt
inc
mov
adc
add
add
add
cmp
das
test
les
aam
sbb
repz
test
test
pop
pushf
cli
mul
and
in
jecxz
out
adc
rcrb
sbb
mov
add
cmp
dec
sbb
jns
aad
adc
xchg
lret
dec
mov
xor
sbb
in
test
or
imul
and
out
xchg
push
int3
add
jbe
in
fs
call
dec
xor
es
mov
adcl
push
jl
aam
lret
int
xor
inc
ret
repz
jbe
inc
xor
orl
cli
frstor
cmp
int
pop
out
dec
lcall
lods
adc
push
lods
and
pop
sub
dec
test
cmp
inc
pop
int
test
mov
fwait
sub
in
adc
adc
mov
cmpl
adc
xor
lahf
clc
nop
popa
stc
or
xchg
outsb
int
and
xor
jbe
xor
insl
popf
jl
cmp
jno
jnp
xchg
leave
pand
ret
pushf
test
jecxz
out
sub
into
cmpsb
adc
adc
inc
adc
cmp
sbb
mov
adc
sub
lcall
jg
push
rolb
add
xchg
xor
cli
xchg
mov
adc
in
sub
les
notl
jbe
ficompl
into
mov
push
test
inc
shlb
dec
xchg
in
call
mov
mov
popf
in
int
fwait
mov
ss
inc
push
ficoml
jl
pop
ja
jg
in
rcrb
or
pop
gs
test
aad
inc
xchg
sti
pop
aas
call
xor
xlat
out
pushf
or
cmp
ljmp
add
fsubrs
iret
adc
aad
ja
test
sub
add
cltd
xchg
xchg
sbb
xchg
loopne
int3
pop
es
cmp
rcr
jb
push
push
push
sarl
dec
call
push
stos
cmp
push
mov
mov
clc
popf
fmulp
mov
add
mov
jnp
jo
aaa
sub
out
push
jl
and
ljmp
jnp
iret
sub
mov
test
in
push
push
mov
cmp
jb
xor
cli
add
loope
and
xchg
std
jbe
lahf
pop
stos
hlt
or
xchg
dec
daa
cld
imul
repnz
pop
insb
dec
imul
and
add
cmp
mov
fldenv
jle
hlt
pop
test
movsb
shl
cmp
lcall
lock
cmpsb
adc
sub
sbb
dec
push
inc
inc
jp
insb
nop
test
xlat
sbb
and
add
lods
mov
out
xchg
dec
int
adc
pusha
pop
jl
test
push
mov
pop
cmpsb
adc
jno
and
fimuls
jecxz
and
lret
sbb
fidivl
push
in
pushf
or
mov
out
xchg
into
and
cmp
cmp
bound
push
push
bound
jp
test
mov
add
add
lret
inc
add
pop
xor
xchg
cmp
pop
fmull
jbe
xchg
dec
sub
pop
cwtl
xor
dec
mov
adc
xchg
mov
dec
lea
loopne
xchg
movsl
cltd
lret
xlat
pop
dec
movsl
jmp
lods
cs
mov
pusha
aad
inc
shlb
mov
mov
or
outsl
imul
fistpll
imul
test
push
cld
roll
js
fcmovbe
lret
push
aas
sub
gs
and
call
sbb
jns
mov
mov
fimuls
xchg
cs
jne,pt
negl
pop
xor
cmc
jp
fstpl
mov
cld
or
jb
bound
pop
xor
out
fsubrl
jmp
ficomps
cltd
cltd
sarl
sbbl
aam
in
sub
add
das
push
xor
pop
push
insb
jg
shrl
insb
inc
icebp
mov
add
inc
xor
jge
fcompl
xchg
inc
cmp
inc
lret
jnp
aam
cmpb
fs
sete
xor
fs
mov
push
mov
mov
imul
scas
push
or
sbb
pop
sub
inc
jo
icebp
les
lcall
sbb
mov
stos
jmp
jb
xchg
pop
push
sti
inc
sub
loop
pop
out
sub
inc
imul
jb
dec
push
mov
imul
aad
xchg
push
cltd
push
icebp
repnz
shrb
mov
cmpsl
xchg
push
dec
pop
pop
cwtl
and
mov
cmpsb
out
data16
jbe
in
sub
loopne
insb
jl
xchg
pusha
aam
push
xor
pop
xor
sbb
fildl
xor
pop
dec
mov
add
mov
pop
imul
pop
sbb
xor
lahf
mov
rcr
out
sbb
icebp
cmp
mov
int3
cld
xchg
jno
sti
xor
or
and
test
sub
pusha
and
popa
add
pop
cld
xchg
xor
mov
sbb
xchg
dec
inc
fdiv
mov
pop
inc
or
fmull
aam
and
aas
xchg
sub
cwtl
xlat
and
in
inc
xchg
enter
xor
mov
mov
jge
iret
lcall
jo,pt
or
adc
cmpl
addl
add
mov
fadds
and
push
dec
pop
aad
xchg
imul
cltd
pop
push
xor
cli
cmp
inc
ja,pn
iret
les
shl
outsl
xchg
fimull
pop
or
jb
lods
lahf
sbb
jno
fisubrs
leave
fildl
insl
or
pop
movsb
push
fiaddl
test
or
mov
inc
out
sbb
or
or
psubsw
ss
sahf
ja
fistpl
jge
das
fdivl
dec
aam
out
jl
mov
fsts
clc
cmp
nop
pop
pop
iret
das
xchg
out
scas
out
cltd
dec
adc
fisttpl
or
pop
jle
push
inc
and
jle
mov
dec
adc
in
mov
jbe
fcompl
dec
fnstcw
adcl
imull
pop
and
jbe
mov
ret
adc
dec
pop
inc
outsl
mov
dec
inc
mov
dec
out
push
int
test
clc
rclb
xor
adc
and
add
dec
sbbb
inc
mov
repnz
jmp
sub
xorl
in
cmp
ljmp
sbbl
lea
push
fdivr
pop
std
jb
aam
fxch
aas
in
pop
pop
mov
pop
adc
add
cmc
jmp
or
sarb
cld
or
sarl
nop
and
xor
adc
and
je
push
sarl
filds
addl
dec
sbb
xor
pusha
inc
xchg
sti
mov
sbbl
jl
mov
push
clc
mov
sbb
xchg
je
pop
pop
arpl
mulb
push
xacquire
push
mov
test
and
add
ss
jb
mulb
push
in
cmp
lock
xchg
in
aad
aad
pop
pop
jmp
and
add
adc
mov
jecxz
mov
and
push
inc
icebp
cmpsl
push
inc
sub
outsb
das
mov
rorl
in
clc
cli
mov
pop
fsts
add
ret
jo
jae
aad
call
std
inc
jecxz
push
lret
mov
gs
icebp
dec
xlat
sbb
adc
sub
fs
int
push
push
sub
inc
mov
cmp
mov
lahf
mov
push
aam
xchg
and
and
mov
jp
cmp
cmpsb
fimuls
inc
cltd
xor
mov
hlt
arpl
jl
sar
xlat
jmp
mov
push
jno
adc
sub
inc
jmp
fwait
or
xlat
popf
clc
test
adc
mov
lcall
shll
insl
xor
jns
xor
cld
outsl
mov
shr
sbb
jg
xlat
insb
out
add
push
add
jg
push
or
sbb
ret
aas
cld
notl
bnd
add
xchg
fmuls
dec
pop
loop
mov
push
clc
pop
movlps
popf
cmp
sti
test
lods
ljmp
push
stc
mov
js
fdivr
mov
dec
or
xchg
int3
imul
or
cmp
jle
pop
add
xchg
adc
je
adc
cltd
popa
xchg
xchg
mov
sbb
dec
mov
sub
and
fwait
inc
in
dec
cmp
add
stos
push
xor
arpl
cmp
mov
arpl
jnp
in
aas
mov
inc
iret
mov
call
mov
xchg
push
ficompl
shl
sti
xchg
and
mov
int3
or
sub
xchg
ret
dec
dec
int
inc
mov
and
das
je
rclb
adc
jb
and
movsb
aaa
sbb
es
cmp
push
inc
add
cli
sub
mov
xor
or
loope
ljmp
lahf
or
scas
std
icebp
lahf
out
ss
pop
loope
movsb
pop
push
dec
adc
movsl
dec
jl
lcall
inc
and
ja
push
sbb
mov
push
mov
bound
mov
cmp
clc
pop
ret
pop
dec
pop
ljmp
cld
push
dec
mov
mov
push
jecxz
pop
and
sti
add
mov
push
cmp
out
sub
lret
sbb
nop
ret
xor
mov
adc
movsb
pop
fimull
jmp
ficomps
jbe
icebp
cli
mov
and
nop
sub
aam
and
dec
andl
xor
loop
scas
mov
popf
pushf
mov
shll
divb
cli
inc
and
cmp
ret
adc
dec
or
push
mov
or
inc
adc
bound
fidivrl
xchg
rolb
mov
pop
fnstsw
insl
popa
add
shrl
jecxz
lret
add
jmp
cwtl
jb
xchg
xor
lea
inc
add
jle
lahf
es
jae
jp
sahf
in
mov
jae,pn
pop
pop
jmp
jmp
adc
ja
idivl
imul
cmp
cld
or
cmp
push
jle
lods
xor
adcb
add
push
sti
sbb
dec
push
lods
movsl
aas
sti
xor
pop
notb
imul
xchg
sbb
clc
mov
testl
mov
andl
jae
div
decl
cmp
cs
mov
popf
leave
rolb
push
lret
in
repz
xor
iret
inc
mov
cli
fsubr
lahf
lds
shlb
aad
lock
mov
stc
push
rorb
pop
push
leave
shr
mov
in
dec
in
movsl
lods
push
adc
push
in
push
lret
inc
mov
or
dec
sar
pusha
jl
test
pop
dec
mov
outsb
ss
jle
ljmp
push
push
pop
sub
fwait
mov
sub
mov
mov
and
add
push
mov
stos
in
ja
adc
adc
dec
bound
and
outsb
fistpl
jp
sti
and
xchg
mov
popa
add
mov
push
mov
mov
lods
lock
cli
dec
cmc
cltd
das
out
aas
mov
push
mov
pop
pop
dec
pop
add
stc
hlt
and
das
loop
xchg
sub
in
scas
jno
nop
jg
movb
sbb
shrl
sub
jnp
xchg
mov
scas
push
pushf
rolb
lea
push
xchg
dec
adc
nop
adc
pop
ljmp
mov
in
add
pop
sbb
stos
and
testl
test
jno
test
xor
jmp
je
ljmp
xor
std
inc
sarb
aas
adc
aas
pop
mov
out
nop
lds
arpl
cmp
sbb
fcomps
or
out
int3
push
arpl
jge
jecxz
divb
test
jae
push
mov
add
fldt
ds
adc
test
or
pop
push
or
lahf
gs
lcall
imul
lods
xor
pshufw
loopne
sub
xchg
ljmp
xor
push
clc
push
cmc
mov
xchg
sub
cmpsl
pop
pop
pusha
sbb
add
sub
push
lahf
iret
dec
or
clc
xchg
negl
dec
aad
push
cmp
pop
dec
jnp
fsubrl
or
mov
xor
and
rclb
les
sbb
fcmovnu
mov
cmp
xor
pushf
mov
mov
push
shlb
cwtl
stos
orb
add
iret
xchg
lret
adc
add
dec
popf
arpl
sbb
in
push
push
add
repz
or
ror
ret
lcall
adc
mov
data16
testb
shrl
mov
std
mov
clc
xchg
aas
dec
repnz
int3
out
std
out
adc
shr
es
fidivs
mov
out
pop
inc
xor
mov
xor
dec
mov
outsl
in
dec
sub
cmp
jecxz
lds
lock
incl
out
add
test
hlt
mov
test
jo
push
sbbl
mov
xchg
cmc
push
xor
pop
add
imul
out
mov
lcall
jne
shrb
sbb
and
packsswb
ret
lret
and
adc
xor
movsb
rcrb
mov
inc
pop
les
xchg
or
xchg
scas
aad
ja
repz
stos
xchg
enter
jmp
loope
push
test
push
clc
add
ret
cmp
or
lret
aas
repnz
es
push
jno
cmp
mov
add
and
scas
sub
dec
push
fcoml
push
cltd
pop
jb
inc
jecxz
imulb
test
cmpsl
lods
scas
adc
cmp
jg
pop
cli
lret
popf
inc
data16
dec
shlb
and
mov
pusha
inc
int3
mov
ffree
cmp
mov
sub
loope
and
dec
pop
call
mov
loopne
es
sahf
adc
sub
xchg
jbe
jnp
sub
cmpsl
clc
and
jecxz
or
adcl
lock
mov
mov
pushf
imul
mov
sub
rolb
sub
sbb
addl
jl
fs
cmp
cmp
ja
ljmp
inc
outsl
repz
lret
or
mov
ds
out
jle
or
leave
add
or
es
shll
lea
lret
sub
cmpsl
sbb
cmp
in
mov
xor
insb
lock
pop
mov
mov
jno
pop
or
ret
in
leave
xor
out
lods
pushl
fstpt
pop
xor
sub
popa
fs
mulb
push
and
scas
and
outsb
pop
inc
cmp
jmp
or
mov
std
cmpsb
mov
out
push
pop
xchg
gs
dec
jnp
ret
popf
or
movsb
mov
mov
cs
lea
xchg
cmp
lods
je
loop
andb
fnstcw
cmp
movsb
mov
ret
mov
and
cmpsl
jecxz
mov
movsl
dec
es
insl
movsl
pop
sbb
icebp
daa
sub
sub
incl
mov
sets
xchg
adc
jno
iret
and
aas
push
sti
shlb
inc
mov
dec
cmp
xor
ror
jle
test
or
mov
push
inc
ret
in
inc
gs
cmc
push
jle
push
mov
sti
out
ljmp
adc
push
sahf
mov
sub
and
hlt
jle
pop
testl
fsubs
mov
mov
inc
aas
enter
lods
mov
adc
mov
rol
mov
jne
push
cmp
and
aaa
jge
cmpsl
sub
iret
outsl
cmp
pop
pop
data16
cmp
xchg
repnz
addb
cmp
clc
gs
cmp
in
rolb
and
shll
insl
cmp
cltd
add
mov
mov
xchg
jns
dec
sbb
mov
aam
jp
dec
fadd
mov
mov
xor
jae
mov
int3
or
xlat
fisttpl
mov
cmp
fwait
out
data16
dec
adc
xchg
aam
mov
and
enter
sub
pop
inc
xchg
or
mov
lcall
jmp
or
lds
cs
adc
into
jo
push
push
fisubs
addr16
mov
xlat
repnz
pop
push
into
lods
addb
gs
and
xor
sahf
std
and
shlb
xchg
add
jns
daa
stc
mov
cmp
loopne
sti
rorl
cmp
js
stos
lea
fisttpl
lods
jo
push
dec
aas
pop
xchg
mov
cli
sahf
add
push
movsb
aad
testb
dec
ficoml
xlat
push
mov
lods
pusha
cmp
pop
inc
fwait
popa
sahf
mov
jb
cmp
sub
mov
add
adc
cmp
mov
cmpsl
out
and
icebp
fadd
inc
pop
mov
mov
lods
mov
or
push
cmp
stos
lds
jb
sub
aas
test
sbb
movb
ds
loop
mov
mov
xchg
lret
mov
push
jnp
aam
cltd
jecxz
or
push
cmpsb
xchg
loope
mov
push
sub
or
js
inc
dec
push
pop
inc
es
adc
rol
iret
popf
jnp
and
fs
inc
push
pushf
add
pop
jl
sbb
cmp
push
out
cmove
notl
shrb
mov
lret
jge
xor
add
repz
or
cmp
decl
hlt
dec
jecxz
outsb
mov
aaa
inc
cmpsb
imul
je
sbb
nop
shrl
jno
inc
xor
cmpsb
fiadds
add
push
sub
sahf
jo
xor
dec
mov
xor
mov
loopne
ljmp
lahf
jo
mov
mov
xchg
adc
mov
push
jg
inc
lret
jb
cwtl
hlt
std
xchg
test
push
faddl
mov
pop
push
xchg
imul
xchg
rcrl
sbb
inc
outsb
and
xlat
sbb
add
mov
cld
mov
and
ficoms
push
dec
js
inc
dec
negb
andb
push
fmull
call
nop
pop
cmp
repnz
jl
or
pop
and
pop
cmp
or
fisubs
rcl
enter
xchg
movsb
repz
push
les
into
jmp
push
and
rcrb
aam
add
std
add
iret
adc
and
cs
ss
inc
filds
sbb
xchg
xchg
pusha
cmp
rcrb
add
divb
mov
push
mov
addr16
add
cltd
out
jbe
stc
aad
adc
sub
jg
xor
enter
in
nop
jmp
pop
lret
ljmp
or
sub
js
jno
fsubr
test
push
bound
push
fstpt
mov
adc
cs
movsb
inc
les
enter
in
pop
sbb
jle
mov
jne
jmp
pop
into
pop
xor
sub
mov
aad
cmc
jbe
ret
mov
push
and
mov
repnz
pop
cld
outsl
shll
xchg
jle
mov
out
or
pop
push
in
aam
mov
pop
xor
sub
aas
int
scas
test
testb
dec
in
mov
push
and
mov
stos
push
cmc
push
int3
rorb
bound
or
pusha
bound
or
inc
stos
add
cmp
dec
xchg
movsl
sub
inc
fistpl
imul
int3
dec
cwtl
jecxz
leave
daa
mov
mov
xor
insb
jo
inc
sub
repnz
xor
add
and
adc
mov
xchg
fstpl
mov
push
gs
das
cmpsl
sti
les
mov
mov
out
ret
dec
xchg
popf
lods
xlat
cmp
sub
mov
mov
outsl
mov
aas
mov
mov
loop
lds
repz
push
jne
lea
ss
out
sbb
cmpsl
js
mull
and
into
sub
cmc
jmp
mov
adc
adc
rolb
scas
sub
and
sbb
jecxz
js
jge
jnp
sbb
scas
enter
dec
mov
dec
cmpsb
into
out
pop
mov
cmpsl
fwait
jns
xlat
dec
jnp
popa
fwait
sub
jmp
push
pop
sub
mov
ss
mov
xchg
jnp
add
imulb
sub
outsl
popf
rcrl
or
jp
jns
mov
xor
roll
adc
testb
xor
xchg
xchg
mov
jg
imul
fstp
popa
stos
mov
mov
fbld
divps
xchg
je
pop
fs
insb
xor
fld1
mov
push
mov
fs
sub
call
loop
pop
dec
xchg
insb
jns
mov
fsubrs
dec
cmpsl
jl
push
movsl
pop
loope
ret
add
mov
loopne
cmp
insb
ret
add
pop
popl
xor
jno
mov
or
jge,pn
push
inc
jno
adc
xor
xor
mov
or
lods
mov
mov
mov
xor
ss
test
ret
xchg
arpl
test
hlt
lahf
sub
ret
leave
pop
cmp
cmp
aaa
cltd
stc
pushf
fbstp
int3
es
in
jns
cmp
stos
movsl
pusha
and
jne
push
inc
sti
insb
ds
mov
fucompp
incb
les
push
sub
inc
stos
fld
outsb
adc
mov
inc
jae
mov
lret
or
push
xchg
mov
mov
add
push
aam
fstl
push
push
dec
pop
push
std
mov
push
and
cmp
ja
icebp
fimuls
adc
repnz
movsb
xchg
ficoms
push
add
add
nop
cmp
leave
test
or
pop
cmp
sbb
int3
mov
xchg
data16
inc
popa
arpl
or
cmp
xor
add
push
mov
sub
inc
shrl
std
jbe
ljmp
mov
inc
hlt
test
xor
or
pop
cwtl
xchg
pusha
mov
cwtl
sbb
pop
jne
arpl
shrl
inc
scas
mov
lods
out
sbb
test
stos
hlt
dec
push
pop
leave
sub
ljmp
xchg
scas
cmc
mull
clc
pop
mov
adc
insl
pushf
mov
adc
movsb
inc
inc
imul
pop
cld
dec
mov
jmp
sbb
lahf
mov
outsb
inc
jg
fldt
loopne
stc
faddp
dec
lret
xor
and
into
add
shlb
cmp
mov
jae
mov
mov
inc
inc
push
movsb
sub
nop
ljmp
sub
fbld
adc
sti
ffree
or
cmp
add
jns
add
cs
or
imul
sbb
add
jge
mov
mov
ficomps
cmpsl
and
adc
jnp
xchg
and
ret
loope
scas
jns
jae
bound
pop
add
mov
mov
inc
addb
lods
xor
cmp
loop
push
rcrl
mov
popf
xlat
or
add
xchg
mov
mov
pop
icebp
popf
ss
mov
mov
adc
fwait
std
mov
pop
insb
mull
adcl
mov
incb
pop
jbe
sarb
inc
ljmp
stc
loop
sub
push
mov
jnp
push
sbbb
add
cmp
out
xchg
imul
fists
jmp
add
inc
rorl
cwtl
fwait
into
sbb
adc
pusha
cld
cmp
lcall
push
and
jg
and
dec
or
inc
pusha
pop
jle
jmp
sbb
pusha
inc
xadd
jmp
les
jl
push
xlat
ljmp
roll
mov
ljmp
cmc
inc
jae
fs
pop
jbe
into
mov
push
mov
mov
outsb
mov
mov
lods
jne
repz
jnp
inc
mov
shll
push
sahf
aam
dec
cmpsb
inc
hlt
push
sbb
insl
and
mov
outsl
mov
stc
int3
int
xor
leave
or
and
xor
add
fsubs
faddl
clc
inc
xchg
and
dec
jp
out
mov
mov
outsl
iret
jnp
cmpsl
or
in
shll
mov
add
cs
adc
pop
jmp
pop
test
cli
imul
aaa
jmp
fiadds
dec
imul
push
xchg
cmp
inc
aas
jmp
test
push
sub
push
xchg
mov
sti
testb
xor
inc
imul
xor
xchg
cmp
clc
adc
int
sub
cmp
test
pop
xchg
sbb
sbb
popa
add
mov
mov
addb
fwait
enter
mov
leave
out
and
scas
add
push
lods
pop
fs
push
inc
push
cmp
sahf
shrl
out
push
insl
pusha
mov
pop
xor
sub
adc
hlt
fstl
cmp
fwait
sub
das
inc
mov
push
sbb
sub
test
lods
nop
pop
and
xchg
adc
aam
xor
cli
dec
insb
dec
and
cmp
or
jb
imul
repz
cs
fwait
xor
call
mov
movl
sub
jns
aam
mov
ja
icebp
mov
xchg
mov
mov
dec
or
jnp
add
sbb
stc
jb
jmp
repz
pop
andb
mov
or
sub
iret
outsl
iret
and
xchg
fimuls
outsl
shlb
jbe
call
xchg
fwait
sbb
push
or
inc
bound
ds
sub
sub
inc
shr
dec
sti
je
rcrl
jg,pn
jl
adc
sub
popa
jne
stos
jg
add
sbb
les
and
lret
mov
lea
inc
sub
adc
push
sub
int
je
xchg
mov
mov
mov
cmp
mov
loop
xor
push
mov
std
mov
jne
dec
mov
lods
xchg
popf
addl
inc
subl
and
add
je
xchg
fists
popfw
mov
dec
cld
orl
pop
pusha
call
ja
mov
lahf
mov
out
mov
out
fnstenv
aam
cld
add
test
pop
scas
decb
xlat
test
add
cmpsb
push
push
aas
and
fistpl
arpl
clc
dec
push
jno
pop
and
sub
cmp
dec
and
adc
and
xchg
fimuls
in
xor
aad
mov
aaa
cwtl
xchg
or
adc
ss
cld
rol
fldenv
mov
imul
xchg
scas
lods
ss
push
pushl
pop
pushf
and
in
shlb
mov
mov
sub
and
shlb
addr16
xchg
xchg
xor
aaa
xor
lea
loopne
cld
mov
dec
adc
test
inc
mov
pop
int
cltd
push
mov
push
cmpsb
cmpsb
xor
movsl
leave
add
push
mov
dec
test
jg
testb
cmc
out
loope
sbb
lcall
push
push
jle
lods
push
bound
push
pop
aas
incl
es
and
cmp
mov
enter
mov
xor
clc
pop
repnz
lock
or
mov
dec
das
lret
jl
sub
jl
loop
dec
sbb
dec
sbb
lds
faddl
cmp
ret
jecxz
or
stos
adc
and
aad
mov
xor
imul
dec
jp
movsb
lods
mov
fmuls
nop
and
mov
xor
pushf
shr
mov
mov
jno
lahf
neg
cmpsb
push
mov
push
inc
xchg
les
fnsave
repnz
insb
sbb
add
xor
sub
add
ljmp
or
bound
imul
xchg
and
push
daa
jb
stc
cmp
fcoms
jecxz
das
pop
or
adc
outsl
jp
mov
les
fstl
and
push
std
sbb
mov
lret
dec
mov
outsl
loop
mov
bound
mov
xor
jae
iret
pop
mov
sub
xchg
adc
cld
inc
add
mov
sbb
jae
in
mov
sbb
jo
dec
loop,pn
xor
add
popf
fucompp
and
mov
out
lret
je
mov
add
popa
and
adc
iret
aad
enter
jnp
leave
jle
popf
out
sbb
ljmp
je
adc
pop
adc
push
xor
test
dec
cmp
dec
clc
pusha
addb
mov
fxch
cmpsb
das
movl
std
mov
push
mov
aad
jnp
lock
in
popa
xchg
adc
jnp
inc
outsb
pusha
cli
sbbb
mov
loopne
push
dec
repz
stos
je
pop
push
fisubrl
lahf
mov
mov
testl
mov
inc
or
lods
test
scas
sub
popf
fcmove
mov
dec
into
sub
outsl
push
loop
mov
sub
mov
outsl
out
sbb
aas
or
rcrb
inc
pop
leave
sbb
pop
fistps
mov
in
xchg
in
stos
pop
cmp
jnp
pusha
push
clc
mov
push
mov
inc
xchg
or
idivl
fadds
mov
cmp
lret
cmpsl
mov
cwtl
mov
ss
arpl
push
sbb
pop
cmp
dec
xchg
inc
insl
push
sahf
xor
xor
flds
push
fistpl
outsl
scas
add
jmp
cmp
and
add
daa
hlt
or
mov
inc
adc
ret
aaa
hlt
aaa
outsl
outsb
test
lret
add
xor
push
jae
mov
sub
jns
mov
jecxz
xchg
xlat
mov
push
add
pop
jg
lods
lret
bound
jno
andb
pop
mov
data16
push
and
adc
rcrl
pop
fmuls
push
test
jb
pop
pop
or
in
push
mov
inc
fnstenv
dec
fs
lds
dec
add
lret
rol
filds
jae
cmpsb
std
cmp
out
jle
popf
push
std
dec
and
jmp
fcomps
dec
repz
sub
lret
test
add
jmp
and
mov
fs
addl
push
sahf
test
cmp
int
loopne
jns
xor
mov
cwtl
imul
jmp
imulb
push
ficoml
call
int
in
lret
xchg
mov
insl
xor
dec
pop
xor
das
icebp
cmp
inc
add
mov
in
add
sub
outsb
and
mov
imul
into
and
jo
jle
out
in
sbb
push
adc
mov
sub
mov
pop
mov
pop
aaa
xchg
xor
pop
leave
inc
sbb
test
ss
and
mov
push
insl
mov
ja
sbb
pop
loop
sbb
sbb
je
jmp
stc
pushf
jmp
mov
mov
lret
mov
iret
pop
jmp
enter
test
xchg
in
movsl
jg
mov
popa
adc
push
mov
out
mov
imul
gs
jp
pushl
and
jle
hlt
cmp
xchg
push
cmpsl
and
dec
dec
or
mov
pop
loopne
sbb
xchg
iret
mov
in
pop
mov
test
pop
aam
lret
sti
mov
xorl
cmp
fisubrl
cmp
push
fistps
mov
jp
jb
popa
imul
cmp
and
inc
sbb
popa
add
dec
imul
lret
cmp
cld
mov
cwtl
ret
das
rcrb
popa
mov
cmp
add
mov
push
rcr
shll
fistps
add
dec
sub
jo
sbb
cmpsb
and
and
xor
cltd
or
imul
stos
mov
fildl
addr16
cli
ficomps
arpl
sbb
movsl
insb
push
sub
cltd
mov
popf
pmullw
mov
imul
add
cmp
sbb
xor
adc
jbe
jns
xor
mov
cmpsb
xor
fimuls
sub
les
xor
adc
cltd
test
pcmpgtd
dec
sarb
mov
pusha
mov
call
pusha
lods
mov
xor
cs
push
xor
pop
mov
mov
xchg
cmp
out
inc
mov
fiadds
inc
repnz
addb
mov
hlt
jg
pop
fstps
mov
or
adc
add
repnz
cmc
or
pop
notl
in
push
mov
mov
push
stos
into
jl
xor
loope
xchg
dec
xchg
add
int3
adc
aad
cmc
or
pop
push
mov
push
sub
icebp
movl
inc
sub
add
or
fwait
jg
or
dec
mov
jbe
adc
add
test
aaa
add
iret
shrl
aam
shl
inc
or
mov
xlat
rcl
jmp
aaa
jle
inc
iret
lea
cs
push
loope
mov
add
cmp
cmpsl
lea
lock
add
test
mov
fsubrl
nop
add
xor
shlb
lock
dec
idivl
imul
jb
jmp
dec
js
mov
cmpsl
xchg
mov
scas
enter
jge
test
mov
xor
jg
push
ret
sbb
icebp
xor
lret
fmull
and
pop
aad
aas
mov
lods
xchg
cmp
xchg
xchg
dec
jmp
fldenv
out
ss
or
cmp
jl
mul
pusha
adc
stos
push
mul
stos
into
sub
aas
xor
jo
xlat
call
jmp
mov
pop
loope
or
adc
inc
lods
push
in
mov
adc
dec
dec
loope
lea
xorl
cs
mov
mov
divl
adc
lcall
push
ljmp
xchg
mov
or
mov
inc
sub
popa
stos
movsl
or
enter
push
int
in
xchg
movsl
imul
add
xchg
scas
xlat
stc
aam
xchg
pop
loop
push
stos
and
and
sbb
into
ret
mov
fisubrl
add
cwtl
fwait
and
adc
xchg
sbb
sub
mov
movsb
jge
aam
lods
sub
mov
fst
arpl
repnz
imul
xor
and
scas
fisubrl
or
scas
icebp
mov
jno
mov
add
push
jo
stos
xchg
pushf
in
cmpb
xor
fcmovbe
dec
and
and
fdivl
mov
fistpl
repz
ret
fidivs
dec
mov
decb
cmpsb
scas
insb
adc
dec
mov
mov
int
dec
daa
ljmp
scas
insl
inc
out
jne
lea
sub
popa
lcall
cmp
xchg
cmp
in
in
fwait
pop
lods
stos
sarb
adc
jl
lods
cmp
ret
mov
pushf
outsb
lcall
je
adc
clc
xorb
mov
add
mov
aaa
fists
std
pop
cwtl
mov
out
clc
loopne
insb
daa
mov
push
jnp
mov
dec
aam
push
stos
shll
out
dec
repz
hlt
imul
sbb
cmpl
cli
jo
push
fstpt
or
jnp
inc
pop
inc
push
mov
into
jecxz
cli
xlat
rorl
mov
decb
fildl
xor
incl
jge
imul
into
cmpsl
push
pop
adc
scas
test
fwait
dec
mov
sbb
scas
or
test
cmp
lea
push
stc
jge
lahf
jmp
pusha
insl
and
push
fnstsw
int3
adc
jo
jmp
mov
mov
push
sbb
xchg
mov
cmp
out
dec
push
dec
loopne
jbe
add
inc
jle
into
imul
arpl
bound
aad
and
jne
loop
test
dec
sti
pop
inc
jle
mov
das
in
cmp
mov
out
jg
mov
jle
subb
mov
bnd
add
jae
bound
loope
jge,pt
add
sbb
jno
repnz
rep
mov
lds
in
fisubrl
cmp
mov
cmp
addr16
es
ret
adcl
and
sub
mov
ljmp
orb
pushl
test
insb
jmp
mov
or
push
popf
or
and
push
in
enter
idivb
mov
inc
cmc
xchg
push
push
jg
pop
mov
bound
arpl
fistl
add
out
xor
mov
shr
movsl
pop
cmp
adc
mov
and
into
cmp
aaa
mov
xor
stos
insl
mov
mov
pop
sub
mov
test
iret
push
dec
jne
lahf
jbe
push
mov
xorl
imul
loop
inc
mov
mov
cmp
es
dec
and
subl
insl
out
inc
fistpll
sbb
inc
cmpsl
out
std
mov
mov
dec
fcoms
in
mov
sbb
inc
add
sub
cmpsb
sub
jae
mov
xchg
rclb
push
sbb
push
imul
xchg
sahf
cmp
loope
mov
daa
inc
test
jbe
jecxz
push
rcrb
inc
fs
cli
pop
pop
sbb
cmp
cmp
scas
push
aaa
cmp
dec
sbb
pop
cld
outsb
lret
jo
mov
hlt
dec
mov
push
mov
jb
fbstp
xchg
or
push
into
or
test
pop
sbb
out
and
je
xchg
add
jb
sti
cmp
push
lods
mov
test
stc
cmp
ljmp
fisubs
dec
repnz
in
std
cmpb
int3
jmp
test
ja
pop
or
repz
mov
mov
fmulp
or
xchg
ret
push
xor
sub
clc
es
fildl
push
add
mov
xchg
and
pop
cld
jp
add
out
aad
in
add
push
stc
popf
and
xchg
sub
xchg
lret
adc
sub
fmuls
pop
mov
or
es
fdiv
xchg
push
aaa
push
roll
rorl
jp
bound
jbe
lock
shlb
mov
jno
and
inc
jb
fnstenv
xchg
insb
sub
xchg
add
loopne
fstpt
mov
pop
icebp
jge
dec
inc
stc
jns
leave
ljmp
inc
into
int3
pop
jnp
shrb
fidivl
adc
arpl
mov
fmull
popf
or
dec
dec
sbb
mov
mov
cltd
jp
and
cmp
imul
mov
xchg
push
ret
add
jmp
pop
int
jae
inc
jae
inc
jo
adc
fistpll
push
subl
ljmp
sbb
lods
gs
push
push
int3
cmp
sbb
std
pop
push
xor
mov
add
sub
xor
add
insl
arpl
pusha
jnp
das
shrb
jmp
stos
out
sti
pop
add
mov
std
mov
push
cli
rcl
enter
enter
cmpb
rcrl
lds
push
fidivl
ret
add
cwtl
sub
repz
rcll
aam
dec
lods
dec
stos
mov
data16
sarb
jecxz
insb
dec
mov
insl
dec
jle
arpl
test
and
jl
add
cld
pusha
test
sti
mov
aaa
subl
push
push
jb
cli
pusha
adc
repz
and
stc
lret
pusha
push
jns
test
jmp
in
push
loopne
dec
adc
fmull
fwait
sub
push
cltd
icebp
add
fcoml
sahf
push
out
jae
adc
pop
lds
mov
dec
push
call
insb
cmpsb
out
mov
xchg
push
inc
and
cmpsl
inc
gs
mov
push
push
cld
int
sub
jecxz
gs
aaa
dec
nop
jne
jb
fbld
pushf
xor
push
jns
jl
or
into
fistl
scas
jmp
imul
add
cmp
adc
cwtl
xor
test
cwtl
dec
incb
rep
xchg
pop
cmp
popa
adc
shl
inc
xor
mov
fs
push
xlat
inc
popf
into
in
imul
imul
pushf
xor
loopne
pusha
and
outsl
movsl
gs
ror
dec
mov
push
into
adc
cmp
add
int
push
cmp
jbe
inc
cltd
shll
dec
in
aad
out
push
cmpl
xchg
aad
xor
cmp
push
pop
pop
jge
mov
in
or
repnz
stc
shl
jo
sbb
int3
mov
inc
inc
sub
dec
cli
jl
pop
inc
mov
pop
mov
inc
dec
inc
push
jns
or
inc
mov
pop
inc
jmp
lock
aaa
mov
clc
sbb
push
rep
pop
fiaddl
push
sub
lea
repnz
jge
ljmp
mov
add
es
add
ljmp
int3
icebp
pop
xchg
pop
pop
pop
xlat
push
stos
or
cmp
cltd
lret
dec
mov
jl
sbb
mov
mov
fdivs
xchg
clc
mov
rorb
add
adc
pop
shl
jnp
nop
pop
shl
adc
cmp
lret
push
repz
mov
shll
fdivrs
dec
jp,pn
int3
lock
mov
in
or
ss
sub
and
and
mov
xor
iret
xor
movsb
fisttps
push
mov
in
and
mov
inc
push
or
jno
leave
cs
dec
push
je
out
jmp
mov
ret
sub
add
aas
ret
aad
shrl
ffreep
fldt
pop
daa
inc
mov
mov
cs
or
sbb
stc
mov
lret
sub
mov
mov
mov
addr16
inc
mov
cmc
inc
xorl
xchg
xor
and
aaa
and
dec
or
xchg
mov
aad
mov
inc
push
scas
push
and
pop
cmpsb
loopne
mov
xchg
xor
inc
testb
pop
int
movsl
insb
fstpl
popf
add
mov
stc
popa
push
jge
cmc
adc
pop
outsl
pop
and
cmp
or
add
sbb
mov
test
sbb
sbb
fdivs
mov
adc
sub
add
adc
pushf
sbb
jg
mov
fbstp
sbb
js
fsubs
daa
daa
pop
jb,pt
push
fcomip
iret
fmul
jnp
dec
test
outsl
mov
xor
pop
jb
xchg
sub
sbb
loope
push
mov
test
xlat
push
shlb
push
and
les
repz
jo
test
sub
cmp
scas
xchg
ja
jg
lods
jne
sbb
cld
test
push
and
and
in
sarl
add
add
std
push
jmp
inc
ljmp
stc
sbb
xchg
cmp
adc
cmp
cmp
mov
test
dec
adc
xchg
mov
scas
inc
xchg
jle
sub
mov
push
in
pop
push
dec
xchg
inc
icebp
push
sbb
add
inc
jge
inc
inc
icebp
and
ret
fs
test
shll
pop
sti
imul
cmp
clc
bound
enter
and
xchg
inc
rcrl
and
adc
and
mov
pop
adc
loopne
and
inc
xchg
aad
dec
cltd
sub
xor
cmovg
fidivrs
xor
jl
sub
in
dec
mov
pop
jne
xchg
and
pop
dec
adc
dec
xchg
add
fsts
pop
fldl
push
mov
shll
fistps
loope
mov
imul
adc
nop
adc
inc
pop
out
jnp
dec
stc
mov
mov
les
stc
mov
pushf
popf
dec
scas
lods
int
and
inc
dec
aaa
sbb
and
test
js
pop
sub
aam
jnp
insb
or
push
lods
decb
xchg
jle
or
in
movsl
push
repz
shl
jo
mov
ds
jecxz
xor
mov
sbb
das
mov
cmc
in
jae
xchg
mov
and
add
xchg
int
push
add
lret
add
cmp
adc
mov
and
cli
adc
mov
test
sarl
or
mov
ja
jo
mov
add
sti
jne
insl
jb
add
jae
icebp
out
push
add
cwtl
in
mov
mov
cmpsl
enter
mov
mov
add
lods
and
ljmp
leave
add
jg
movsl
das
lock
popa
in
dec
inc
inc
data16
sbb
dec
push
repz
mov
lret
cmpsb
mov
and
adc
inc
adc
adc
lea
in
cli
dec
sbb
cmc
push
mov
push
ret
mov
sbb
xor
test
cmpsl
out
out
push
outsl
jbe
lds
push
cld
mov
dec
popa
xchg
push
adc
jb
cmp
sub
enter
jle
cs
cs
xchg
dec
cmp
cmp
adc
movl
in
sbb
mov
cwtl
sub
jmp
sbb
jle
dec
add
in
ja
and
mov
add
xchg
add
and
clc
lods
adc
movsl
orl
cld
adc
ljmp
dec
xchg
jb
xor
push
sub
in
push
xchg
int3
in
and
divb
cmpsl
fstl
xchg
cmpsl
dec
push
inc
fsts
pop
xor
rcll
loop
lret
loop
inc
adc
mov
hlt
cli
pop
fidivrs
iret
sub
inc
push
mov
nop
mov
xor
sbb
push
scas
mov
data16
popf
push
imul
and
inc
lods
xchg
int3
test
adc
mov
popfw
enter
adc
imul
inc
xchg
clc
mov
mov
outsb
sbb
push
out
testb
popf
xchg
dec
dec
sbbb
bnd
inc
les
xlat
into
add
sbb
sbb
pop
jbe
cltd
ja
lock
add
mov
xchg
dec
out
ss
pop
jnp
cmpsl
xor
sub
or
jp
pop
and
and
cmp
sbb
in
mov
fnstenv
orb
and
clc
mov
and
push
xchg
pop
pushf
inc
loopne
mov
mov
outsl
pop
inc
icebp
mov
push
outsl
add
stos
fwait
cmp
shll
push
mov
jge
sbb
xor
sub
cmpl
scas
enter
cs
add
cmp
rcll
lods
rorl
cmpsl
or
pusha
xor
inc
mov
dec
jle
pop
loope
rcrb
sti
std
push
pop
pop
mov
jmp
push
jbe
insb
lret
push
sub
or
adc
xor
adc
xor
push
out
lods
popf
call
jle
fwait
repz
xor
push
adc
jne
scas
xor
imulb
sbb
jp
sbb
cwtl
cmc
loop
mov
or
cmp
mov
test
cmc
mov
fmuls
push
push
xchg
mov
gs
adc
adc
mov
hlt
mov
sbb
div
jo
repnz
cmpsl
sarb
rcrb
imul
inc
fwait
cmc
inc
test
mov
push
inc
gs
fadd
cli
iret
ret
popf
fmul
insl
jp
jmp
adc
movsb
inc
lods
ds
pop
fistpll
push
or
fsubl
inc
push
dec
in
or
popf
pop
into
pop
xlat
shrb
pop
push
stos
xor
mov
iret
clc
push
nopl
push
clc
repnz
test
jnp
sbb
and
xchg
dec
scas
mov
imul
arpl
inc
sub
stos
or
jecxz
sbb
cmpsl
sahf
push
stos
pop
je
mov
push
sahf
je
scas
lods
xlat
cmp
pop
fs
xchg
scas
test
lods
sahf
jecxz
xor
lock
push
xchg
push
or
imul
mov
pop
mov
cwtl
les
jae
push
hlt
ja
push
loope
aad
xor
and
pop
and
cmp
mov
orl
mov
sub
pop
icebp
adc
addr16
enter
sbb
inc
test
jp
inc
add
mov
icebp
jle
xchg
adc
xor
mov
lock
stos
sub
or
mov
gs
mov
sahf
test
sbb
mov
xchg
pop
fdivrs
or
cmp
test
imul
jmp
pop
repz
jp
xlat
cmp
aaa
aas
and
mov
jmp
cmp
mov
out
les
repnz
inc
adc
dec
inc
adc
testb
in
sbb
icebp
fdecstp
jecxz
enter
xor
pop
daa
cwtl
xor
into
jmp
hlt
inc
mov
lods
imul
lret
xchg
jg
fmul
inc
lahf
sub
lods
pop
je
in
adc
pusha
or
mov
pusha
fisubs
sub
inc
aaa
movsb
adc
cmp
mov
rol
ret
je
pop
outsb
jmp
and
call
xchg
mov
xchg
insb
stc
int3
sahf
adc
jge
ja
xorb
jnp
mov
add
imul
shlb
stos
push
pop
jl
in
imul
notl
sub
adc
xor
test
dec
lahf
or
mov
pushf
flds
mov
mov
xchg
push
cld
xor
jg
jae
es
add
cmpsb
aaa
push
jecxz
xchg
in
mov
or
pop
test
sub
mov
push
insb
popf
cmp
outsl
mov
inc
and
sbb
add
xchg
push
enter
mov
lret
pop
push
inc
push
push
mov
cmp
fcmovnu
add
inc
inc
sub
jp
outsl
ss
jecxz
fnstsw
data16
addr16
pop
lcall
iret
inc
jno
call
mov
iret
mov
and
mov
push
mov
cmpsl
jge
push
enter
hlt
pop
outsl
or
mov
mov
fbld
inc
les
jle
dec
jge
mov
out
mov
pop
les
cmp
add
sahf
mov
push
ret
pop
dec
test
push
fucomi
or
pop
xchg
lcall
lock
fists
and
add
add
rcll
xor
mov
mov
fsubrp
sahf
mov
test
xlat
mov
dec
dec
add
adc
lcall
inc
jg
popf
enter
rcl
mulb
jg
shrl
cld
es
mov
rorb
out
insl
or
add
and
fucomi
int
push
fstpl
pop
mull
mov
imul
stos
mov
pop
push
xor
cs
inc
sub
inc
inc
push
dec
ror
jb
rcl
int
leave
nop
lds
jp
cli
bnd
dec
push
rcrb
push
movsl
push
xor
aam
in
or
xchg
xor
arpl
js
or
xchg
add
dec
test
ret
add
jnp
mov
rcrb
add
xor
popf
dec
cmp
lods
cmp
inc
pop
push
xorl
aaa
cmp
pop
add
fs
xchg
iret
sub
bound
rcll
dec
xchg
das
mov
pop
insb
xor
iret
out
pop
push
push
and
xor
mov
das
sbb
mov
sbb
inc
icebp
aas
dec
pop
int
lods
push
jo
sbb
or
xstore-rng
cmpsl
add
push
jmp
mov
mov
xlat
adc
dec
dec
jp
cmpsb
pusha
mov
cld
xchg
sbb
shr
rcrl
popa
mov
xchg
mov
mov
in
push
incl
jg
add
push
and
and
and
dec
repz
adc
sub
and
shlb
aad
push
gs
pushf
shlb
clc
inc
movsb
sbb
or
pop
fisttps
mov
sbb
arpl
push
ret
dec
inc
stos
and
lds
icebp
int3
dec
jecxz
rorb
enter
mov
jno
xor
push
cmc
nop
xchg
nop
addl
cmp
push
mov
xor
leave
fucomip
pushf
xchg
dec
dec
sbb
sbb
and
push
push
fwait
fs
dec
sub
jns
pop
sarl
and
rclb
in
inc
mov
mov
dec
out
js
int
mov
push
out
stos
fdivs
jge
or
les
adc
xchg
cmp
mov
int3
push
aaa
xchg
jne
loopne
or
sub
or
cs
cltd
push
sub
test
inc
je
mov
jmp
je
clc
add
aam
out
jge
subb
into
and
scas
je
lcall
pop
pop
ret
add
sub
aas
lods
in
lcall
push
dec
inc
scas
aaa
inc
shrl
orb
mov
fst
cmpsb
cmpl
cmp
mov
sbb
mov
sbb
xlat
ret
loopne
mov
pop
sbb
in
movsl
test
lock
push
call
jbe
in
xor
stos
and
leave
jge
sahf
add
inc
pusha
adc
std
pop
adc
xchg
stc
dec
rclb
dec
sar
mov
cs
mov
fwait
xchg
adc
stos
cmc
hlt
mov
int
iret
repnz
jge
ficompl
out
sub
adc
call
inc
lods
mov
ljmp
fmulp
fnsave
pop
outsl
inc
sbb
or
xchg
sqrtps
push
pusha
roll
jno
in
out
push
mov
test
out
push
mov
sbb
fnstcw
pushf
cmc
fisubs
mov
jbe
mov
cmc
pop
ror
movsb
mov
loopne
inc
fnstenv
mov
jl
or
mov
stc
mov
jecxz
out
dec
out
adc
cwtl
xchg
jl
jl,pt
test
xlat
addl
mov
and
jecxz
jbe
mov
orb
inc
cmp
in
repz
stos
mov
cmp
imul
iret
pop
mov
mov
cmc
xorb
fisubrs
sub
rol
es
icebp
xor
inc
or
daa
adc
cmp
ljmp
mov
adc
lods
push
aad
outsl
dec
stos
fwait
xor
xor
jo
stc
shlb
mov
rcrl
test
aad
gs
rolb
xchg
sub
lock
lcall
mov
cwtl
jne
rolb
push
ret
or
lret
repz
imul
cmp
psubb
or
bound
xchg
mov
mov
in
subb
jle
push
lahf
test
sub
push
jmp
pop
andl
fdivrl
push
repz
nop
es
imul
push
mov
sub
lret
lock
ret
lds
dec
roll
rorb
nop
lcall
pop
out
inc
dec
inc
addr16
sbb
xchg
insl
ljmp
aas
loop
mov
loopne
push
or
cld
jo
loop
dec
sbb
xlat
mov
ja
mov
cmp
loop
sbb
scas
stos
sahf
inc
test
pop
fmull
loopne
cld
stc
testb
popa
js
mov
xchg
stc
js
inc
sbb
gs
nop
and
add
pop
mov
out
out
fwait
xor
sub
mov
leave
add
popa
cmp
lahf
shll
adc
stc
fucom
ja
lods
ss
dec
pushf
loop
or
push
sub
jge
negl
mov
cwtl
inc
mov
out
cltd
ret
je
push
mov
mov
or
push
pop
mov
stc
and
scas
push
test
xchg
sub
mov
fistl
xor
mov
das
int
sbb
daa
enter
mov
lahf
negb
jge
icebp
imul
xchg
push
test
cltd
std
adc
scas
data16
pop
mov
ds
test
repnz
mov
mov
add
ja
aad
xor
leave
int
mov
popf
mov
mov
icebp
jae
jmp
xchg
faddl
ret
or
pop
mov
mov
ds
xor
xchg
xchg
lret
mov
mov
dec
push
mov
adcb
out
mov
incb
inc
adc
movsb
aam
or
fldt
in
mov
in
xchg
out
cs
add
inc
test
arpl
sti
cmc
js
cli
add
nop
xor
dec
push
mull
stos
pop
push
jb
bound
add
rcll
movsb
push
dec
imul
fdivs
cmp
cmpsb
fwait
cld
pop
repz
mov
jnp
loop
movsl
push
jmp
inc
mov
sbb
aaa
mov
sbb
cmp
mov
dec
incl
pop
outsb
test
mov
pop
and
or
xor
shll
mov
lods
cmp
mov
fnstcw
jmp
adc
xchg
stos
sub
out
inc
out
sahf
adc
jle
or
lea
mov
xchg
lahf
dec
out
aam
cltd
mov
ss
mov
addl
gs
fcoms
mov
pop
enter
cmp
andl
shrl
lea
pop
rcrl
sbbl
add
adc
lret
push
in
mov
inc
js
outsb
incb
mov
lock
add
ror
push
rolb
dec
popf
xchg
stc
stos
je
cltd
pop
pop
shll
int
xor
addl
xchg
es
mov
inc
cmpl
pushf
test
ficoms
cmp
cmpsb
lgs
pushl
daa
and
enter
adc
and
out
dec
pop
dec
xorl
fcom
arpl
cmpsl
push
inc
call
xchg
or
inc
test
dec
cmp
repz
mov
mov
aas
inc
pop
dec
test
std
into
mov
lods
mov
jl
imul
fs
lods
or
add
push
test
pop
dec
cld
nop
lret
addl
scas
lods
enter
daa
roll
mov
push
pop
cmpsl
jmp
test
int
add
pop
sub
sub
into
pop
sbb
pop
jb
stc
test
idivb
lods
xor
aas
sbb
test
shlb
pop
pusha
and
sbb
push
imul
sub
inc
mov
testl
and
mov
jp
push
ja
pop
icebp
mov
dec
shlb
lods
inc
dec
lds
orl
push
mov
cli
push
sbbl
aaa
in
pop
or
decb
test
repz
dec
int
sbb
arpl
xor
jmp
loop
or
adc
cmpsb
pop
cmpsl
mov
testl
jmp
push
pop
xchg
mov
outsb
ss
dec
jns
mov
mov
xchg
rcrl
cltd
pop
jne
jge
ficoml
mov
sub
push
ss
nop
jb
cli
test
mov
jne
pop
cmc
lods
das
fisubrl
sbb
jns
std
xor
dec
movsl
cmp
adc
xor
imul
mov
imul
add
fnstsw
sarl
nop
or
fsubrs
orl
iret
mov
xchg
in
pushf
jnp
jmp
prefetchw
movd
jp
fwait
pop
jl,pt
mov
xor
popa
xchg
addb
fcom
lods
fidivrl
adc
popa
insl
icebp
pop
stos
mov
adc
push
shll
xor
repnz
cmc
add
and
and
scas
test
mov
push
mov
push
shr
aam
sti
or
ret
fdiv
inc
mov
or
icebp
imul
pop
clc
test
mov
out
pop
sbb
rorb
add
lcall
push
or
dec
fistl
push
stc
fsubl
stc
call
and
negl
movsb
adc
stos
icebp
xchg
icebp
xor
or
lret
repz
loop
repz
fcomi
shr
xchg
dec
out
jmp
push
rcl
inc
inc
lcall
adc
and
stos
mov
adc
adc
fildll
push
data16
pop
adc
jne
xor
sbb
mov
xor
hlt
add
sar
rcrl
pop
stos
mov
sub
adc
sub
mov
xlat
push
jne
mov
mov
mov
sub
enter
mov
pop
inc
mov
pop
je
jle
enter
mov
mov
xchg
and
test
roll
mov
sub
sub
jle
stc
mov
xchg
sbb
and
hlt
pop
aam
jp
or
lock
xor
test
popa
adc
xchg
cmp
ret
push
fcomps
and
inc
lret
dec
fldenv
jne
pusha
mov
cld
push
test
sub
cmp
fstpt
aaa
dec
push
in
imul
ror
pusha
pushf
or
jge
mov
in
mov
inc
pop
ficompl
idiv
mov
or
test
dec
adc
movsb
jne
fcmovbe
dec
cmp
inc
jle
mov
imul
in
movsb
jl
in
lcallw
mov
jle
out
int3
mov
pop
pop
int
dec
mov
lret
mov
neg
in
out
outsl
decl
jge
stos
mov
in
aas
fldt
push
cmp
sub
cmp
pop
loop
out
push
mov
rcll
arpl
int
addl
addr16
mov
jne
loop
insb
lods
test
ret
insl
mov
cwtl
cmp
dec
jno
xchg
repz
mov
daa
arpl
call
push
inc
jge
bound
and
cmpsl
push
jl
nop
out
pushf
lds
in
lods
pop
sbb
aas
js
mov
into
fdivrl
and
scas
adc
mov
jnp
data16
not
or
xor
sbb
cmpl
push
sarl
and
adc
mov
pop
sub
push
or
shrb
movsl
mov
adc
mov
jecxz
mov
adc
pusha
ljmp
xchg
cli
mov
mov
jl
mov
mov
jg
jno
and
lcall
addr16
stos
loope
jle
rcl
aam
scas
sub
loope
xchg
test
xchg
sahf
jecxz
iret
lcall
push
into
pop
daa
xchg
test
mov
enter
lcall
lahf
insl
ljmp
mov
xchg
pop
popa
cmp
movsl
iret
mov
orb
pop
int
xor
xor
xchg
cmp
aaa
xchg
and
xor
leave
fdivl
call
push
cmp
int
ret
pushf
and
cmp
lea
jge
push
mov
gs
adc
popf
jge
dec
jg
push
shl
jnp
fwait
out
xchg
inc
cli
mov
pop
pop
rorl
not
mov
xor
lods
lock
movsb
loopne
mov
insl
add
inc
lods
and
ret
dec
jmp
dec
jae
daa
mov
mov
and
jmp
int
out
mov
mov
inc
adc
pop
cmp
inc
sub
mov
rcrb
stos
in
filds
out
adc
mov
inc
fisttps
sub
mov
jp
insb
into
call
lahf
pop
ljmp
imulb
xlat
mov
lret
cs
mov
push
jns
pop
ret
push
sub
sti
insb
repnz
cmpsl
dec
pop
jle
mov
pop
push
outsl
pop
pop
cmp
out
xor
daa
mov
or
aas
imul
enter
dec
add
js
inc
data16
or
mov
shll
popf
pop
and
mov
je
dec
sbb
in
pop
and
inc
call
repnz
cmp
lret
repnz
mov
mov
gs
outsb
inc
sbb
lret
push
test
inc
xchg
iret
mov
mov
dec
jae
lds
or
test
sahf
lock
loopne
lret
add
sub
jae
sbb
ficoms
idivl
loopne
xorb
sub
pusha
ror
and
in
rorb
sti
fwait
jbe
jne
dec
movsl
in
lcall
test
pop
aas
imul
jmp
test
mov
jo
xchg
jbe
jg
mov
cld
daa
ds
int
mov
sti
jb
xor
or
mov
clc
jo
testb
sbb
xchg
pushf
mov
mov
or
adc
popa
sub
xchg
xchg
iret
mov
into
sub
std
cmp
xchg
fdivrl
xorb
xlat
mov
sub
insb
shl
fldenv
and
mov
ds
call
cwtl
push
dec
popf
adc
jno
cmpb
test
sti
mov
adcb
push
pop
push
test
fiadds
push
cmp
jbe
push
adc
inc
or
or
mov
push
inc
or
mov
sub
xchg
in
dec
jl
stos
jle
cmc
in
sbb
sarl
pop
outsl
and
sub
jns
sbb
sub
fs
lock
aad
insb
add
lahf
push
jecxz
or
ret
xchg
sbb
push
cmpsb
jmp
jb
scas
bound
roll
cmp
sbbb
ja
stos
add
mov
mov
repnz
adc
sbb
mov
xchg
mov
shrb
js
int3
outsl
negb
inc
pop
push
gs
mov
icebp
stc
mov
push
test
and
iret
out
jmp
testl
mov
gs
mov
or
dec
add
enter
mov
push
ljmp
rcr
adc
loop
jbe
out
jge
shld
testb
inc
xor
add
cmp
mov
push
cmc
push
xchg
xchg
sbb
lock
xchg
or
inc
xchg
pop
gs
rorb
idiv
inc
dec
rolb
mov
jge
and
fldl
push
loop
dec
iret
movsb
xchg
mov
mov
pop
pushf
shlb
pop
addr16
jle
emms
mov
test
inc
pop
lods
iret
pop
fbld
push
mov
fsubr
mov
aad
roll
pop
add
mov
leave
pop
test
cld
scas
sbb
xor
lcall
cs
and
or
int
inc
sub
mov
jl
pop
arpl
cmp
fldl
jg
and
int
mov
inc
cld
mov
movsb
jns
sub
adcl
or
jmp
mov
insb
xchg
mov
jae
pop
js
pop
jno
push
lahf
and
push
iret
mov
add
gs
jae
xchg
jle
shll
pop
fstps
mov
jns
or
mov
data16
das
leave
xor
mov
dec
sub
jno
int
iret
dec
adc
test
imul
mov
data16
xchg
sbb
sbb
incl
add
imul
mov
lret
insl
lock
xchg
lcall
popf
pop
fisubs
in
mov
test
in
pusha
mov
push
iret
into
dec
pop
jl
cmp
mov
jo
popa
mov
dec
push
in
or
lcall
dec
out
xchg
js
push
outsb
mov
add
scas
inc
lret
sbb
int3
iret
cli
jecxz
jle
sub
push
xchg
into
ret
xor
loop
mov
out
subb
je
pop
mov
loop
sbb
xchg
lock
pusha
xor
mov
sub
mov
inc
mov
pop
mov
push
jl
mov
dec
pop
sub
jne
subb
mov
lahf
mov
movsb
push
in
adc
imul
pushf
mov
inc
jo
mov
mov
jg
xchg
movl
call
cmp
lods
jmp
stos
js
fimull
xchg
ljmp
in
es
sub
dec
mov
adc
jmp
pushl
ret
in
pushf
sub
jno
ljmp
sub
out
hlt
arpl
imul
cli
cs
cmc
pushf
mov
and
add
and
sbb
jle
nop
cmc
push
cmpsb
loopne
add
or
and
and
mov
push
movsb
sub
nop
xor
fmuls
lret
std
in
ud1
imul
sti
hlt
sbb
fiaddl
push
in
in
adc
nop
sub
jne
jl
ret
test
jle
xor
mov
push
pop
in
lea
dec
push
lods
jno
mov
fisttpl
mov
cmp
mov
dec
pushf
pop
push
scas
divb
xchg
dec
sub
jl
sub
cmp
sarb
pop
xor
lea
test
clc
imul
xor
shll
xchg
test
mov
and
inc
test
in
stos
pop
push
add
mov
mov
and
shlb
stc
cli
or
inc
je
repz
adc
jg
mov
mov
fsubrl
into
mov
mov
cmp
dec
or
fiaddl
dec
xchg
and
insl
xlat
fcompl
aad
pop
mov
loop
cmpsb
add
in
aad
test
mov
cmp
fimull
pop
mov
sbb
jno
xchg
lret
xor
movsb
out
test
loope
sti
mov
jns
mov
add
inc
mov
xlat
dec
sti
mov
xchg
movsl
and
ss
add
inc
or
movsb
cmp
sti
xor
inc
ret
or
dec
mov
xchg
insl
js
ds
fisttps
int
pusha
in
out
stos
add
sub
repnz
das
jecxz
into
xchg
or
and
add
ret
cmp
movl
pop
int
xor
aaa
data16
or
xor
icebp
jae
and
add
into
mov
shl
and
adc
xor
push
mov
xor
and
lahf
pop
icebp
sub
mov
lods
xor
jmp
out
out
push
xor
clc
aas
xchg
int
xor
jne
dec
scas
mov
lods
push
mov
cmpsl
jmp
ret
in
xchg
insl
loop
adc
adcb
jecxz
add
in
inc
bound
inc
pop
jg
into
in
dec
sbb
lret
out
and
rcrl
inc
aas
scas
mov
repnz
and
push
push
xorb
add
mov
dec
or
inc
add
test
jl
sahf
ficoml
fwait
fs
add
cmp
mov
jmp
lods
ret
jle
cmpsb
adc
push
sbb
sahf
mov
scas
push
aas
pop
mov
js
repnz
or
sahf
mov
cmpsl
ja
jecxz
sahf
stos
icebp
sub
mov
aas
pop
pop
cltd
stos
push
mov
dec
cmpsb
icebp
or
push
sub
fisubrs
ficoml
rorl
dec
int3
out
imul
andb
and
sti
and
dec
mov
xchg
xor
mov
gs
insb
lcall
push
mov
scas
xlat
mov
bound
into
sub
mov
xchg
mov
es
or
fcoml
loope
and
mov
js
sbb
cmp
push
add
pop
mov
mov
push
repnz
dec
or
xchg
popa
sub
sub
push
fisttpll
add
movsb
ret
out
fs
lret
cmp
test
mov
lds
cmp
mov
mov
xor
cmc
cmc
push
mov
add
push
add
cltd
faddl
adc
repz
test
sub
xchg
ja
lods
dec
test
loop
xor
mov
out
stos
pop
inc
aad
scas
movsl
cs
xor
cmp
mov
lret
mov
mov
roll
insb
repz
div
lret
cwtl
xor
jbe
inc
rcll
inc
add
mov
lcall
out
cltd
jg
mov
js
pop
mov
jno
outsb
add
inc
fwait
push
repnz
out
add
std
add
push
idiv
loopne
or
push
cmpl
les
dec
xchg
js
inc
mov
inc
dec
dec
in
popf
mov
sbb
testl
ret
mulb
sahf
jnp
loope
jns
push
mov
mov
adc
out
in
fcoms
xor
dec
sbb
inc
jl
sub
sub
mov
jp
int3
jne
in
xlat
orb
adc
shrb
add
cmp
enter
adc
mov
push
aam
mov
xchg
cmpsb
inc
pop
aas
sbb
test
mov
jp
mov
adc
and
lret
push
or
mov
add
mov
pop
jg
ret
jbe
dec
cmp
scas
mov
jne
sbb
sbb
xchg
movsb
and
adc
inc
or
adc
fs
scas
sarb
or
test
aaa
xor
and
push
call
jo
cmp
ljmp
adcb
sbbl
stc
xor
movsb
pop
int3
gs
idivl
pop
jge
inc
inc
xor
mov
sahf
and
iret
fisubs
mov
testb
leave
testb
push
ljmp
mov
mov
jns
dec
jns
mov
jmp
in
mov
stos
sbb
dec
jo
push
push
pop
rorl
xchg
cld
xchg
push
pop
mov
cs
or
cmp
loope
push
inc
out
loope
push
faddl
in
lea
xchg
mov
jmp
push
imull
inc
jle
lea
push
daa
jp,pn
aad
pop
cld
xchg
outsb
out
dec
movsl
jno
subl
inc
jno
push
jno
es
adc
mov
loopne
mov
popf
pop
push
js
clc
lcall
movl
lret
push
imulb
inc
faddp
mov
push
mov
mov
clc
das
gs
and
and
fcoms
xchg
mov
mov
inc
jmp
fucomip
jns
mov
cld
rcll
js
inc
aad
aas
decl
rcrl
dec
add
clc
sbb
mul
jmp
imul
lcall
xchg
sti
cmp
mov
divb
int
enter
js
dec
rcll
shrl
lds
sub
pop
pop
mov
scas
cmp
dec
or
and
sub
mov
jnp
xor
clc
inc
test
sub
ljmp
movsl
or
imul
in
inc
cmp
mov
in
nop
lock
mov
mov
or
lcall
mov
inc
mov
rorb
stos
and
mov
fmuls
lods
mov
lods
mov
movsb
arpl
scas
sbb
fstps
aas
dec
gs
or
jnp
ficompl
jmp
add
pop
jb
out
push
cs
popa
or
or
pop
adc
sbb
rcll
sbb
bswap
aaa
int3
xchg
cmp
jmp
inc
cld
add
outsl
insl
add
adc
iret
scas
popa
adcl
dec
push
imul
ret
hlt
mov
mov
sbb
repnz
out
loopne
mov
pop
mov
and
cmpl
mov
mov
cltd
xor
test
in
or
adc
ret
and
pop
out
fwait
sbb
shlb
pop
mov
add
inc
and
lret
subb
out
xchg
adcb
mov
sbb
cs
lock
mov
xor
loope
lret
jno
xchg
std
lods
cli
xor
shrl
jns
jne
mov
arpl
ds
or
mov
or
fstl
sbb
bound
cmpsb
imul
xor
and
shll
xor
and
pop
js
insb
stos
sti
mov
mov
bound
jmp
stos
cmc
jmp
lock
aam
lret
fprem1
ja
repz
push
aad
movsl
testb
push
out
cltd
cs
popf
cltd
xor
adc
cmp
cmp
out
repz
and
mov
mov
data16
xchg
dec
mov
sub
push
sahf
jno
test
pop
lods
movzbl
cmc
push
sub
imul
xchg
pop
cltd
lret
adc
pop
inc
sub
fcoms
inc
pop
xor
hlt
cmp
xor
xchg
sub
jbe
jle
hlt
mov
push
sub
movsb
out
and
cmp
jle
push
bound
or
out
cltd
lcall
jp
out
jo
mov
mov
push
mov
fists
lcall
and
sub
pop
notb
pushf
push
xchg
or
mov
daa
mov
stc
sahf
jbe
mov
mov
testl
sub
aad
mov
psubusb
push
stc
mov
aas
or
xchg
xor
sbb
xor
out
cmc
push
sbb
push
push
mov
push
jne
sub
outsb
mov
adc
ja
andl
mov
imul
mov
and
test
sbb
cmpsb
test
jl
cwtl
js
add
add
push
stos
mov
outsb
push
adc
stc
loop
lret
lods
sub
xchg
addr16
dec
add
xor
or
lahf
pushf
fwait
sbb
dec
xlat
fldenvs
lods
sub
sbbl
je
adc
or
decb
push
jl
mov
mov
into
cli
push
imul
or
jge
add
ljmp
iret
mov
stos
xor
test
test
sbb
out
add
lcall
mov
clc
in
add
outsb
imul
xchg
push
fcomp
and
cld
dec
cmpsl
add
int
pop
sbb
aas
mov
call
push
aad
pop
pop
sub
icebp
adc
movsl
jnp
mov
ja
jae
inc
or
xchg
sbb
and
push
testl
mov
dec
mov
mov
push
repnz
sbb
push
stc
xchg
pop
sahf
pop
pop
mov
mov
pushf
into
dec
push
jg
mov
adc
mov
jecxz
enter
nop
arpl
cmp
shll
jns
inc
and
jnp
pop
les
inc
xchg
or
mov
mov
cmpl
inc
fwait
cmc
clc
clc
es
jmp
jle
xchg
hlt
test
jnp
test
fisttpll
adc
push
leave
lods
fists
xchg
les
cmp
andl
pop
stc
mov
pusha
mov
dec
fldenv
and
mov
repz
dec
or
fs
mov
addr16
das
shlb
jge
xor
push
lret
clc
cli
xor
roll
lock
jmp
jae
aas
call
sub
mov
xchg
cs
cwtl
rclb
stc
repnz
int
sbb
jno
mov
cmpb
dec
inc
int
add
lds
xor
ret
mov
or
push
dec
mulb
cli
pop
neg
fadd
jne
out
cmp
loop
sub
pop
xor
cmp
cmp
inc
repnz
push
push
mov
fbstp
sbb
inc
test
xchg
xchg
or
pop
inc
xchg
shl
fwait
nop
in
mov
test
cmp
int
bnd
incl
cmp
cld
cmp
repnz
cmp
in
xchg
sbb
push
push
shrb
or
cwtl
push
aas
out
sarl
jle
ret
sarb
xchg
pop
arpl
sti
mov
cld
pop
rcll
negl
loope
xchg
cmc
lea
nop
popa
imull
inc
add
mov
aaa
xchg
push
cmp
mov
mov
pushf
cmc
and
add
out
xor
dec
inc
punpckhbw
mov
ds
pop
and
xchg
mov
xchg
pop
mov
adc
cmp
mov
cmpsb
sub
pop
in
les
xchg
lea
dec
clc
movb
dec
inc
add
bound
jnp
outsb
or
sahf
push
jl
or
pop
sub
pop
mov
repz
daa
repz
repz
lods
mov
hlt
and
bound
arpl
addl
dec
mov
pusha
test
mov
or
cld
enter
popl
sbb
loope
add
pop
ret
call
cmpsl
push
xchg
test
scas
movsl
fwait
mov
hlt
sahf
rorl
dec
js
js
movsl
shrl
lods
ret
out
fwait
adc
repz
insb
dec
aas
sbb
je
push
sub
jl
cmpsb
lea
inc
mov
mov
mov
out
cmp
pusha
shll
dec
mov
xchg
scas
jecxz
outsb
pop
inc
inc
mov
fdivs
cs
sub
cmp
out
lds
aam
int3
in
push
lods
pusha
pop
pop
adc
jl
inc
mov
pop
popa
jecxz
xor
div
xlat
scas
jbe
ret
nop
sbb
inc
pop
and
les
icebp
mov
adc
jmp
jp
adc
dec
mov
and
movsb
out
push
ds
movsl
fcmovnb
mov
xor
testl
xchg
sub
pop
pushf
mov
jns
mov
push
xchg
mov
pop
repnz
test
and
jg
fcompl
cmp
and
lods
jle
subb
movsl
xchg
xchg
ret
pop
sub
xor
pop
pop
shll
adc
push
dec
movsl
ret
mov
xchg
fadds
cmp
mov
out
mov
sbb
imul
xchg
mov
scas
pop
pop
les
lcall
iret
xchg
mov
out
sti
rol
in
repnz
xchg
fs
lahf
clc
loope
mov
imul
push
cltd
out
pop
icebp
cmp
cwtl
repz
test
jae
xor
outsl
dec
mov
or
mov
mov
shlb
jae
mov
mov
pop
imul
mov
fistps
mov
sbb
arpl
aaa
push
add
jg
xor
ss
das
out
in
aaa
rcrb
pop
sahf
pop
sbb
or
ss
movsb
sahf
pusha
sbb
xchg
out
xlat
inc
lods
out
push
jp
aad
int3
movsb
lret
dec
jne
jg
ficomps
inc
add
sbb
cmpb
jl
movzwl
and
mov
daa
pop
fcmovb
adc
push
clc
jbe
incb
inc
bound
insb
paddusw
iret
loopne
pop
cmp
fimuls
inc
cltd
fldl
out
in
fstps
in
in
aas
mov
jmp
mov
sbb
cmp
add
dec
sub
cmp
jge
sub
push
div
jmp
push
lea
fimuls
lock
xchg
xchg
jge
stos
int
cmp
mov
push
xchg
fsubrs
push
or
outsl
sbb
add
cmp
cmpsl
movsb
pop
mov
pop
mov
mov
xchg
aam
icebp
or
repnz
pushf
mov
and
and
dec
leave
sub
push
lahf
or
enter
stos
iret
pop
jp
mov
stos
je
in
xor
sub
inc
leave
ja
sbb
rcll
push
pop
and
inc
fstp
js
ret
fcomp
aas
mov
jno
lds
nop
dec
cmpsl
pop
mov
test
lock
and
loop
and
pusha
addr16
xchg
jmp
xor
int3
inc
mov
shll
sub
jbe
mov
xchg
or
psubusw
jle
test
dec
imul
xchg
inc
push
js
mov
jns
cli
push
sub
rcrl
clc
stos
cmp
js
or
push
dec
in
sub
inc
gs
shufps
scas
add
sbb
leave
lock
or
ds
cmp
cmp
shll
jns
cmp
pop
push
pop
shl
repz
xor
add
adc
testb
cmc
ss
mov
arpl
jnp
push
pusha
mov
mov
adc
sub
ds
mov
and
pop
into
cli
test
dec
aas
mov
mov
or
gs
mov
out
mov
ds
gs
mov
add
movsb
jb
in
sub
cmp
insl
xchg
out
or
jbe
mov
rclb
addr16
xor
inc
imul
or
sbb
mov
pop
jo
or
push
mov
jge
pop
fildll
adc
std
lods
adc
jns
cmpsl
mov
jo
pop
pop
aas
rolb
iret
adc
test
cmp
adc
fcoml
dec
jle
mov
outsl
add
cmpsl
adc
mov
push
cmp
mov
or
scas
loope
inc
push
adc
std
movsl
jno
sbb
je
push
and
pop
out
inc
mov
inc
pop
mov
mov
mov
sbb
jg
insl
addr16
xor
or
mov
inc
push
dec
fcoml
sbb
mov
rcrb
in
mov
lret
pop
jg
xor
lods
inc
lods
lods
iret
push
aam
add
scas
mov
in
movb
jae
ret
push
es
or
test
jno
cld
xchg
outsl
daa
mov
xchg
push
lahf
std
push
jecxz
js
xchg
xchg
and
dec
xchg
push
aam
dec
jmp
neg
push
fcom
aas
inc
xor
arpl
movsl
xchg
dec
pop
sub
mov
lret
add
push
dec
mov
lahf
out
inc
mov
loopne
jae
pop
push
mov
xchg
mov
jmp
mov
xchg
imul
sbb
subb
outsl
shll
jnp
shll
int
sbb
lret
insl
xchg
inc
pop
sub
pushf
sarl
mov
xchg
cmp
leave
xor
incl
inc
sbb
shr
and
cmc
test
cmp
lds
mov
negb
or
and
popa
mov
push
insl
outsb
dec
int
adc
call
jo
pusha
lea
stos
into
test
out
jbe
cld
mov
dec
dec
push
inc
and
cmp
sub
dec
jne
inc
jmp
insb
push
clc
in
sub
xorl
add
xchg
pop
loope
sarb
bound
sub
lods
inc
pop
push
aaa
lods
pushf
mov
cwtl
dec
scas
jg
mov
xor
xor
xor
fmuls
xchg
rorl
mov
cmp
inc
dec
jno
fmuls
loope
xchg
int3
mov
add
xchg
pop
jne
sbb
out
ret
shl
and
inc
xor
add
xor
test
pop
xchg
cltd
in
and
ss
jp
xorl
shrl
outsl
jl
rcll
inc
inc
mov
mov
outsl
int3
xor
push
ret
or
insl
mov
imul
adc
loope
jne
fists
jo
and
xchg
es
rorb
std
xchg
xchg
mov
dec
inc
xor
pop
cltd
inc
xchg
aam
daa
fdivl
loopne
jg
lods
sub
xor
ja
push
xchg
dec
fldenv
lock
mov
mov
xchg
push
or
mov
xchg
mov
mov
sbb
push
je
xchg
xchg
xchg
fucom
jle
hlt
dec
test
mov
into
mov
das
idivl
sub
fwait
push
daa
fisttps
aam
lds
cwtl
scas
mov
lahf
ret
mov
inc
in
in
out
data16
add
pop
movzwl
xchg
mov
mov
add
sti
jae
and
mov
inc
mov
mov
add
in
out
je
jnp
pop
adc
dec
out
dec
aad
ficompl
or
cltd
cs
shlb
dec
shl
cmp
into
fsubrl
test
ret
loop
dec
inc
je
dec
and
bnd
mov
sub
repnz
or
xor
mov
xchg
aam
aam
or
pop
mov
jb
scas
andb
loopne
push
shll
mov
push
mov
out
mul
dec
mov
ja
xor
pushf
push
dec
call
mov
mov
ds
scas
ljmp
pop
mov
loope
jo
loope
add
mov
xor
pop
mov
lds
jg
add
cmp
push
divb
or
aas
ja
nop
setb
mov
jb
mov
and
in
ja
push
popa
sarl
in
dec
inc
mov
cmp
fsts
lock
lahf
mov
hlt
loopne
push
fstpt
jo
inc
lods
loopne
xchg
dec
xchg
xor
add
or
sahf
incb
mov
mov
add
dec
call
sbb
and
dec
out
call
int
stc
inc
lcall
sub
jno
jecxz
fcompl
lock
fs
pop
mov
and
stos
repz
je
pop
fstpl
add
movsl
stc
mov
rorb
add
sbb
xchg
dec
jecxz
out
mov
dec
mov
test
push
ss
pop
xor
xchg
fildl
dec
pop
pop
and
daa
push
into
ja
daa
adc
mov
and
int
add
pusha
mov
out
jo
jno
in
mov
push
push
xor
fsub
fwait
ret
and
fcmove
pop
jno
add
leave
xchg
cmp
or
mov
xchg
and
dec
and
je
pop
mov
inc
mov
iret
aaa
movsb
mov
das
or
ja
test
inc
roll
and
xchg
outsl
fisttps
in
call
outsl
inc
jns
fcmovnu
call
daa
test
sbb
jp
inc
xchg
daa
mov
dec
cwtl
push
or
repnz
sub
mov
rclb
or
subb
scas
into
fs
rol
movl
fdivr
ljmp
out
lock
rcll
inc
lds
lods
out
pop
outsb
sub
out
fcomi
inc
xor
lea
sti
cmp
repz
out
sbb
icebp
adc
stos
out
mov
pop
decl
xchg
push
sbb
sub
or
push
cmp
dec
cli
xlat
subl
inc
fldcw
outsb
push
sub
iret
xchg
je
jp
scas
dec
cld
pop
jl
loopne
jmp
dec
cld
test
inc
add
sbb
and
jmp
or
mov
mov
pop
pop
mov
cltd
push
mov
pop
inc
inc
es
add
out
insl
push
mov
add
out
pop
stos
clc
popf
aas
fisttpl
leave
nop
add
mov
lret
cwtl
fistpl
test
imul
enter
ret
rol
sarl
dec
ret
inc
pop
push
adc
cld
pop
jmp
mov
lods
pop
loop
and
pop
mov
pop
icebp
loop
mov
xchg
jle
lahf
jp
pop
sub
mov
inc
shlb
pop
pop
mov
lods
in
pushf
push
and
push
mov
out
std
daa
xor
xchg
jle
out
sti
sti
gs
shl
and
mov
xor
repz
stos
inc
and
adc
jl
cli
movsb
fisubs
imul
stc
push
das
add
pop
addr16
or
fmuls
push
jecxz
daa
push
dec
ret
mov
cltd
push
cltd
fidivrl
or
clc
sbb
iret
cwtl
xchg
and
clc
shll
cmp
push
movsl
sub
xorl
out
cwtl
test
sahf
pop
push
push
pop
call
aas
insb
add
out
in
rolb
push
data16
pop
xlat
sbb
sub
jnp
popa
loop
push
pushf
adc
push
sbb
popf
cmc
sbbb
ja
jp
rolb
cmp
or
pushf
es
cmc
insl
fnstenv
and
jns
xor
push
enter
test
xor
leave
mov
mov
ret
adc
jne
push
sbb
adc
sbbb
dec
fstl
inc
pop
add
push
repnz
xchg
gs
mov
fwait
int
ret
push
cltd
test
jg
lock
enter
xchg
push
sbb
pusha
lock
mov
test
mov
or
pop
out
jno
inc
jns
pop
aaa
sbb
mov
sub
pop
xchg
xchg
enter
scas
fisubrs
jmp
push
sti
add
sti
adc
js
ljmp
ret
jbe
out
mov
in
mov
xchg
xor
int3
mov
or
outsb
jno
mov
fstps
sub
call
arpl
test
cmpb
push
fsubrl
xchg
int
mov
add
push
jmp
test
negl
addl
adc
jno
dec
pushf
jg,pn
xchg
mov
push
icebp
mov
xchg
aam
notb
pop
pop
adc
outsb
sub
jae
mov
mov
xchg
sub
aas
inc
mov
pop
mov
mov
and
rolb
icebp
push
loopne
dec
pushf
mov
xor
push
movsb
loopne
xchg
xor
xor
imul
jns
jo
in
add
and
lock
inc
or
iret
clc
pop
icebp
dec
leave
inc
scas
paddsb
xchg
mov
in
mov
pusha
jg
xchg
lcall
jbe
mov
pop
pop
pop
fildl
inc
pusha
fbstp
rcrb
mov
daa
jne
mov
lods
cmp
pop
or
test
aas
pop
shll
mov
xchg
xchg
movsl
notl
stc
repnz
int3
fiadds
mov
clc
dec
push
cltd
adc
or
fs
or
xchg
sbb
xor
mov
xchg
out
push
cmp
cs
scas
and
sbb
push
jb
pop
jmp
xor
popf
and
cld
cmp
data16
jae
push
sbb
cli
ds
or
mov
jae
adc
mulps
fidivs
outsl
dec
inc
xor
sbb
cli
sahf
fdecstp
or
sahf
push
pavgw
test
arpl
xchg
xor
iret
outsl
lock
ss
cmp
xlat
inc
jge
fnstcw
jo
adc
jmp
sbb
mov
out
jno
sbb
in
and
sub
rcrl
pushf
xchg
dec
mov
hlt
out
jae
jnp
fs
pop
sub
movsl
arpl
dec
ja
mov
jl
lods
lods
adc
xor
faddl
xchg
out
les
scas
fcoml
pop
pusha
ja
hlt
cli
test
push
pushf
data16
cld
mov
jp
mov
xchg
js
mov
sbb
lahf
std
dec
cwtl
add
int
push
rclb
movsb
dec
sarl
iret
lahf
cs
mov
sbb
out
incl
fistl
and
xlat
push
xchg
pop
outsl
outsl
bound
lcall
divl
push
mov
push
fnsave
cmp
inc
dec
mov
and
lret
sbb
lcall
aaa
jne
push
xor
and
cs
cmp
cmpsb
xchg
sbb
repz
daa
es
mov
idivb
ljmp
jbe
mov
pop
stos
in
mov
mov
jno
fwait
push
ret
adc
aad
xchg
into
mov
dec
stc
lret
int
cwtl
shl
or
sbb
pop
mov
mov
sti
sarb
or
je
faddl
and
ds
mov
push
xor
xorl
out
dec
sbb
cld
out
ds
mov
pop
pop
pop
sub
add
test
lods
fsubl
jl,pt
mov
dec
call
pop
cli
and
inc
dec
popl
mov
pusha
shrl
pop
or
movsb
push
leave
sbb
add
mov
data16
icebp
dec
mov
add
lahf
mov
out
flds
or
loop
cmp
add
jmp
jecxz
insl
cmp
adc
fs
and
dec
inc
movl
push
inc
movl
xchg
adc
inc
fwait
mov
enter
adc
dec
stos
in
addr16
xlat
out
fnsave
push
push
call
sbb
dec
mov
mov
push
inc
cmp
inc
add
cwtl
aam
fcmovnu
in
fistpll
decb
dec
int3
xchg
dec
into
stos
ss
jmp
inc
and
in
mov
js
enter
bound
dec
mov
fildll
push
xor
dec
xchg
testl
repnz
hlt
cltd
lock
pop
and
push
lea
adc
mov
ljmp
jge
mov
in
cmc
mov
fiaddl
inc
sbb
insl
dec
movsb
out
sti
cltd
push
push
lock
push
aam
jo
inc
pop
and
std
push
xor
in
mov
shl
mov
jl
add
xor
fldl
inc
idivl
mov
lock
xchg
cs
push
je
inc
mov
test
gs
mov
sbb
cltd
jnp
mov
repz
pushf
jle
xchg
mov
or
xor
in
ffree
fs
xchg
sbb
sbb
jnp
lds
roll
aad
sub
mov
lods
and
mov
out
into
fbstp
mov
lods
sbb
xchg
dec
pop
outsb
cmp
xor
jb
mov
fidivs
ja
fdivrl
jge
cmc
test
add
jg
jl
in
add
inc
stc
ds
xchg
pusha
sub
dec
es
mov
mov
xchg
sbb
push
inc
fidivs
adcl
sub
mov
pop
cs
cmp
xchg
shrb
cmpsl
in
bound
je
push
ds
popa
mov
adc
adc
aaa
inc
les
dec
popf
push
sahf
cs
sbb
lcall
mov
into
xor
outsl
mov
pop
rcrl
lds
add
std
test
mov
mov
sub
in
and
mov
xor
test
sub
mov
mov
jae
or
mov
pop
stos
stc
pop
lods
ljmp
push
mov
clc
and
test
and
cld
in
scas
insb
sub
enter
lods
or
adc
outsl
icebp
xor
sub
mov
cmc
je
mov
aaa
rorl
adc
ds
sub
inc
sbb
push
adc
sub
mov
cmpsb
out
jae
arpl
rcrl
and
adc
addl
push
dec
shlb
sbb
cs
jmp
decl
pop
mov
and
ficomps
adc
sbb
dec
dec
loopne
or
popl
jge
imul
bound
mov
lahf
leave
sar
es
outsb
xchg
xchg
bound
jb,pt
sbb
lret
neg
mov
pop
jo
mov
js
aas
xor
mov
stos
out
push
mov
int
cmpsl
jp
mov
mov
bound
sub
mov
test
loop
cmpsb
mov
je
in
inc
pop
daa
loop
pushf
pop
sub
out
cmc
rcr
lret
adc
sarl
xor
ds
test
xchg
and
js
pop
and
mov
xchg
xor
xor
fdivs
mov
in
pop
roll
mov
js
cmp
imul
mov
push
mov
popl
cmp
js
jnp
xchg
dec
add
or
in
dec
inc
test
add
aad
ss
add
out
add
and
lock
dec
or
and
mov
mov
out
leave
mov
inc
mull
push
jbe
or
pop
cs
sbb
aas
stos
adcl
cmp
push
push
movsl
cmp
pushf
dec
and
sbb
cwtl
sarb
mov
daa
mov
push
and
in
pusha
jae
add
into
test
mov
lods
adc
outsb
lods
cmpl
mov
lods
cmpsl
mov
or
jno
sub
xor
loopne
and
mov
aam
jl
hlt
mov
mov
test
inc
mov
in
adc
icebp
dec
lahf
test
testl
out
cli
jmp
push
or
ret
iret
mov
mov
sti
das
addb
test
dec
xchg
pop
jmp
xchg
xchg
xor
gs
out
fwait
leave
lods
loope
out
pop
or
or
icebp
stos
add
xor
lock
int3
sahf
jno
and
aas
mov
mov
out
and
not
clc
rcrl
js
es
pop
bound
cmpb
mov
pop
js
call
scas
adc
test
std
fimull
pop
xchg
scas
scas
aaa
repz
sub
xlat
sbb
jns
int3
ret
cs
pop
mov
fwait
or
lcall
or
lea
mov
popf
ja
mov
imul
push
inc
ficompl
add
mov
addr16
leave
xchg
lcall
mov
push
mov
enter
and
xchg
xchg
jge
adc
or
mov
sbb
jmp
cwtl
out
cmp
mov
mov
and
inc
sahf
adc
loopne
clc
dec
xor
cmpl
add
arpl
mov
xor
ljmp
test
mov
fisubrl
pop
mov
sarl
dec
or
mov
xchg
addb
nop
out
xorb
mov
test
sbb
xor
fistpll
js
fmul
xor
mov
xchg
mov
aas
test
dec
lret
ljmp
jmp
and
sbb
test
xchg
repz
rorb
and
lds
je
inc
xor
addl
lahf
inc
into
jae
adc
faddl
xlat
xchg
jl
sbb
dec
mov
mov
inc
mov
adc
mov
xor
push
xor
mov
lods
adc
lods
or
in
inc
mov
pop
pop
pusha
dec
das
stos
out
lods
inc
mov
test
scas
stos
mov
subb
adc
cmpsl
repz
xor
xor
rcrb
inc
aam
lock
test
imul
jbe
adc
mov
icebp
mov
or
jno
cmpl
mov
pushf
lahf
fwait
mov
out
mov
outsl
and
xchg
cltd
cli
aad
pusha
push
cmp
pop
adc
mov
jb
sbb
pop
xchg
mov
adc
daa
sarl
in
leave
std
pop
sub
mov
lret
pop
mov
mov
pop
inc
cmpl
icebp
jg
xchg
xor
xor
mov
pop
int3
sbb
mov
xchg
dec
mov
dec
out
pop
outsl
test
inc
cwtl
or
xchg
ja
jge
mov
jbe
mov
fscale
sbbl
mov
sbb
xor
xchg
sub
sub
setge
dec
aaa
xchg
mov
mov
and
mov
mov
sub
ss
inc
inc
lock
xchg
or
sub
pop
sbb
int3
ss
imul
sub
inc
push
aas
lea
dec
popa
loop
in
adc
push
jb
test
xor
sbb
daa
adcb
pop
and
xlat
dec
jge
xchg
mov
sub
pushw
imulb
dec
mov
or
pop
jb
push
stos
pushf
cmpsb
mov
lods
xchg
std
outsl
jo
xor
lds
scas
push
jo
pop
sarl
stc
push
and
push
push
aad
pop
stos
outsl
jecxz
sub
xor
jg
or
repnz
and
aad
jo
jle
xchg
pop
jae
cmpsl
rcll
movsl
mov
lods
hlt
lea
repz
push
out
out
sahf
ds
test
or
xor
pop
jne
sub
pop
int3
call
adc
lcall
adc
das
adcb
popa
jecxz
jp
das
and
xchg
add
jae
sub
lret
pop
xor
sub
xchg
lret
xchg
out
mov
test
repnz
dec
data16
or
jle
pmullw
jns
inc
outsb
inc
ljmp
shll
fldt
repnz
adc
dec
push
pop
push
xorb
repz
and
cwtl
push
jno
adc
and
jp
jecxz
out
pushf
push
inc
sahf
adc
push
xchg
jae
push
sti
push
push
pop
popa
push
xchg
jmp
mov
dec
js
pop
jae
push
and
insl
pop
pop
mov
scas
push
mov
sub
movsl
adc
and
adc
lods
xor
mov
push
outsb
cmpsb
add
mov
cltd
and
jge
xor
in
inc
jmp
sbb
mov
arpl
xor
lcall
mov
into
jg
shll
and
sbb
imul
xor
in
arpl
stc
fldenv
loope
push
out
mov
sti
inc
pushf
mov
inc
lea
les
scas
xor
inc
test
jno
outsl
mov
outsb
es
mov
jbe
ljmp
mov
jmp
pop
jge
dec
cs
cld
mov
pop
insb
popa
mov
sbb
jae
mov
rorb
ljmp
or
test
xor
int3
in
hlt
out
lcall
icebp
adc
int3
inc
push
xchg
repnz
mov
mov
cli
mov
mov
dec
aaa
pop
add
stos
inc
mov
adc
iret
lahf
or
mov
js
daa
ret
das
dec
iret
jmp
xor
sbb
add
sti
dec
gs
mov
xor
div
mov
push
loopne
repnz
mov
jbe
cmpsl
jb
and
cmp
dec
push
jae
mov
fisttpll
cmp
sbb
pop
cld
mov
mov
jbe
fidivrl
inc
out
inc
mov
add
outsb
and
lock
jns
cs
les
popa
push
inc
adc
xchg
fsubs
fwait
inc
and
lcall
stc
mov
push
fisttpl
jo
sub
or
test
adc
enter
xor
adc
and
ret
les
inc
fcmovne
jg
fldcw
cmp
xchg
enter
jg
cmp
adcb
pop
mov
dec
adc
push
push
andl
pop
xor
mov
pop
pop
jle
aaa
insb
out
aam
add
daa
daa
in
and
in
hlt
and
xchg
sti
mov
xor
or
sub
xchg
lods
cmp
es
mov
inc
sbb
cld
pushf
stc
daa
clc
arpl
mov
rcll
aad
adc
dec
arpl
test
push
and
push
addr16
in
pop
xlat
xchg
jecxz
mov
pop
or
push
stos
jge
xor
add
or
in
cmc
jno
aas
daa
insl
add
aaa
cli
outsl
pushl
dec
xchg
jns
es
aas
push
push
inc
loope
sub
paddsw
mov
cmp
call
scas
cltd
cmp
mov
ja
push
xchg
rcrl
sub
cmp
or
loop
adc
lret
and
in
fs
and
mov
shll
and
pop
cmovne
pop
lahf
cs
test
mov
in
dec
popa
mov
jge
mov
enter
cmp
movsl
add
jnp
adc
pop
clc
and
insl
loopne
or
adc
xchg
push
and
sbb
cltd
loope
cs
out
sbb
in
in
test
outsl
idivb
or
jo
sub
adc
es
mov
ret
fwait
push
sar
ds
sub
cmpl
jb
notb
add
dec
stos
inc
out
sbb
call
mov
adc
xchg
xchg
jb
scas
dec
inc
and
add
out
dec
pushf
push
ljmp
jo
mov
mov
or
movsl
add
mov
int3
jnp
pop
jmp
add
mov
retw
mov
enter
xor
adc
pushf
js
aaa
jge
dec
sub
addr16
es
in
and
jo
imul
push
pushf
outsb
mov
shrl
data16
mov
mov
outsl
imul
push
clc
fisttpl
aad
popa
xchg
lock
and
mov
sbb
adc
mov
int
cmp
xor
mov
push
arpl
pop
int
sbb
shlb
sbb
inc
mov
adc
cmpsl
jmp
dec
out
sbb
pop
setb
imull
push
or
mov
gs
in
shl
fsubl
ror
inc
push
pushf
cmp
xor
push
lods
sub
push
mov
mov
sub
test
das
and
imul
das
mov
xlat
dec
aam
aas
incb
sub
sub
cmpsb
pop
sbb
inc
loop
adc
stc
xchg
andb
mov
push
cmc
xor
inc
ret
jno
cltd
cmp
scas
sbb
insl
into
adc
add
fidivrs
loopne
ja
cmp
idivb
add
xchg
aaa
jg
xchg
inc
fisttps
push
xchg
shll
lock
rcrl
stc
or
stos
push
xchg
jge
std
js
add
mov
xor
jle
faddl
jns
sti
loopne
pop
mov
mov
fwait
push
ja
pop
mov
in
xor
fisubrl
inc
movsl
lret
lahf
int3
outsl
sub
cli
icebp
aas
ss
repnz
lahf
mov
adc
lret
scas
adc
pop
adc
int
lahf
cmp
iret
dec
leave
rclb
mov
aam
add
xchg
fcoms
not
rcrb
mov
aad
pop
add
sbb
popf
and
jl
mov
icebp
subb
int
xor
mov
insl
cmp
adc
adc
xchg
sbb
xor
mov
das
adc
mov
repz
add
cmc
stc
pushf
outsl
ret
sub
pshufw
jo
jo
aad
in
mov
pop
out
inc
ja
and
adc
mov
mov
out
negl
out
cwtl
pop
sub
xchg
mov
iret
and
std
imul
cmp
push
fidivrl
shl
cmpsl
ret
daa
ret
mov
cmp
pop
mov
into
aad
shlb
ret
inc
jge
or
push
push
stc
xchg
add
daa
jecxz
icebp
mov
dec
xchg
mov
pop
push
xchg
cmc
sub
lahf
fwait
dec
add
mov
sub
mov
xlat
jg
and
jecxz
xchg
sub
jb
xchg
sbb
rcll
nop
enter
aaa
movsb
repz
push
cltd
cmp
pop
and
xchg
jp
mov
and
in
mov
lods
dec
mov
sarl
mov
push
ficompl
sub
xchg
jmp
bound
dec
xor
ret
lret
cmp
lcall
gs
nop
sahf
sbb
jo
and
ljmp
scas
into
and
insb
mov
xor
cwtl
jle
lods
fidivrl
sbb
jp
cmpsl
jp
int
and
sbb
aad
jecxz
and
les
push
dec
dec
fildll
mov
int3
lock
and
cld
aad
mov
pop
shll
fidivl
xor
out
mov
jns
xchg
fs
push
cld
rorl
push
out
sbb
mov
xchg
addl
mov
mov
mov
jg
imul
mov
sub
jl
fwait
mov
ljmp
and
or
push
repnz
std
or
lahf
cmp
fistps
xor
insl
jge
inc
xlat
xor
enter
inc
add
or
aam
jg
cltd
push
dec
xchg
call
daa
std
scas
ret
mov
ficoms
fstpl
mov
fwait
iret
xchg
push
mov
sub
call
incb
mov
testb
add
jae
repnz
je
mov
mov
jno
pop
and
sbb
loope
lods
je
dec
push
add
push
sbb
or
cmp
push
das
das
int
fsubr
push
dec
add
imul
ret
movsl
mov
jmp
or
fsts
sahf
jl
xor
bound
mov
sub
addr16
sub
stc
cmp
xchg
pop
pop
fidivs
das
fs
lock
mov
outsb
sbb
clc
imul
fdivrl
adc
and
lret
pop
mov
lock
xor
loopne
push
push
popf
pusha
ljmp
pop
repnz
cmp
inc
enter
test
outsb
test
cmp
fistpl
mov
jo
mov
stos
or
gs
pop
push
cmp
cmp
stos
call
repnz
imul
roll
imul
pusha
and
xchg
fcmove
xchg
inc
add
test
daa
sarl
imul
ret
xchg
notl
cld
adc
add
lret
pop
lcall
add
ret
lods
leave
jne
xchg
sbb
jge
xor
jp
cmp
jno
mov
jecxz
pop
loopnew
or
push
dec
pop
lret
dec
xchg
shlb
xchg
aad
xor
mov
jbe
int3
dec
sbb
loopne
outsl
outsl
jecxz
cli
test
add
aaa
and
and
mov
scas
popa
sub
jmp
jg
dec
jg
jge
shrb
pop
adcb
cltd
fcmovnbe
pop
in
ds
sbbl
arpl
negl
mov
mov
test
mov
int3
xchg
cli
and
push
push
aaa
fmull
push
dec
lods
xchg
pop
inc
or
mov
push
jge
mov
mov
pushf
test
cmp
adc
inc
mov
rorb
mov
cltd
add
out
movsl
adc
rolb
or
dec
cld
jo
pop
decb
or
cmpsb
in
add
and
fisubl
lods
jge
mov
mov
mov
pop
xchg
sahf
pop
nop
mov
jns
daa
jle
adcl
and
pop
xlat
jne
cmp
jmp
sub
mov
jbe
in
cmp
pop
mov
in
fwait
popw
push
fisubs
sub
test
scas
inc
dec
mov
cmp
adc
gs
inc
xchg
gs
mov
inc
inc
jne
sub
sti
adc
lea
fcoml
xchg
popf
call
repz
in
test
repz
adc
fwait
jl
xor
and
push
imul
std
pop
neg
mov
mov
mov
js
mov
ret
mov
adc
mov
sbb
jb
adc
mov
into
or
fsubr
dec
and
add
sbb
jae
hlt
mov
mov
out
insl
shrl
mov
jae
pop
xor
or
dec
add
jb
inc
pushf
cmp
jne
jns
dec
es
jb
push
fwait
sub
int3
jnp
mov
ret
xor
fdivl
fldl
cli
push
xchg
push
sub
xchg
push
fildll
mov
xchg
int3
stos
mov
jmp
mov
sbb
sub
cmpsl
cmp
mov
inc
dec
jge
orb
dec
add
out
mov
mov
pop
mov
sbb
mov
lds
imul
repz
pusha
sub
pop
ljmp
push
mov
cmp
adc
subb
sub
fmulp
enter
dec
in
pop
negb
lods
inc
out
inc
lcall
mov
out
mov
dec
popf
pop
jb
addl
and
and
xchg
fmul
add
ret
jbe
addl
rcr
jecxz
mov
loopne
push
sbb
push
addb
mov
pop
push
jne
mov
sub
xor
movsb
pop
pop
dec
sbb
std
mov
testb
loop
pop
push
pop
nop
pop
test
ljmp
icebp
and
roll
cmp
test
test
fcomp
mov
jo
inc
push
pop
dec
mov
jecxz
ret
xor
mov
adc
movsl
sub
mov
push
les
sub
jl
leave
fildl
push
push
je
xchg
jbe
push
add
lods
adc
ja
xchg
and
xor
stos
daa
call
test
addr16
mov
add
lret
ja
fadd
jg
inc
outsb
sbb
je
and
sub
mov
adc
jae
test
mov
daa
test
cld
outsl
bound
xchg
xadd
jnp
ljmp
mov
add
cld
add
inc
mov
dec
lcall
cs
pop
cmpl
mov
add
cmp
mov
cwtl
push
xchg
dec
arpl
pop
push
fstl
pushf
inc
pop
pop
add
dec
mov
pop
jl
dec
outsb
int
sbb
test
mov
xchg
cmp
lods
test
pop
xlat
push
test
xor
and
test
mov
jg
in
pusha
inc
dec
into
dec
and
loopne
mov
outsb
xor
jns
adc
xor
andl
cmc
sub
imul
adc
dec
cmp
pop
sbb
or
sbb
lods
in
jmp
std
add
out
fmuls
aas
test
or
fistps
jmp
aaa
push
xor
jmp
mov
stc
inc
pop
adc
movsl
enter
jnp
jno
jle
inc
fsubrl
jne
lods
add
mov
aas
xchg
xchg
jne
sbb
adc
cmpl
pop
stos
pop
fisubrs
repnz
jb
push
jno
sub
fnstenv
stc
mov
jle
mov
mov
out
cmp
lahf
fisttpll
sbb
leave
push
push
and
es
faddl
cli
imul
clc
lahf
das
scas
mov
push
shll
sub
rcl
push
mov
xorl
jp
and
leave
imul
and
fstps
aad
jb
testl
aad
loope
addl
and
sub
xchg
scas
rcl
jno
ja
mov
sub
jge
out
push
jne
jns
sub
fs
es
aas
inc
jl
cli
xor
aad
mov
loope
ds
fisubs
jle
orb
dec
icebp
scas
mov
mov
adc
xorl
dec
jge
mov
ds
roll
and
hlt
jns
cld
push
cmp
push
iret
sub
pop
adc
loopne
sti
jo
jae
sbb
jp
sar
xor
adc
fstcw
fstpt
ficompl
and
rcrb
rclb
insl
cltd
mov
popf
push
scas
xor
das
in
test
mov
sub
icebp
ficoml
in
adc
xchg
jl
call
in
jmp
repnz
adc
dec
into
ja
jb
mov
inc
insb
test
test
aaa
mov
nop
es
aaa
push
ljmp
fidivs
sahf
out
mov
aam
or
inc
and
cli
adc
std
pushf
scas
sub
scas
popf
mov
faddl
inc
cmp
pop
or
mov
xchg
ds
jmp
mov
xor
add
pushf
jo
and
aas
xchg
adcb
fstps
lret
cld
mov
int
cmp
int
shlb
pop
test
roll
in
imul
xchg
out
les
hlt
das
xchg
xchg
push
in
inc
and
sbb
cmpsl
add
pop
xchg
inc
mov
xchg
pushf
movsl
ficoml
cmc
adc
test
mov
cmpsb
loopne
mov
inc
cmpl
push
test
xchg
sub
pop
jp
and
pushf
cs
adc
jnp
adc
enter
mov
lods
pusha
mov
inc
ror
rol
jb
jmp
cli
icebp
mov
jecxz
jb
dec
repz
popa
mov
sbb
sub
rcll
xor
mov
lahf
adc
jge
xor
stc
add
pop
pushf
dec
arpl
ret
jb
adc
jno
cmpsb
sbb
popf
pop
jne
xchg
cmpsb
sub
sahf
or
inc
outsl
mov
add
mov
lahf
cmp
loopne
cmp
cmpsb
xchg
aaa
mov
pop
inc
into
inc
inc
aas
pop
pushf
ss
sbb
mov
loopne
sbb
jne
movsb
shrb
test
fs
testb
shrl
cmpsl
inc
imul
ret
fimull
cmc
jge
aaa
mov
pop
imull
jns
sub
sbb
lods
push
loope
js
movsl
out
push
pushf
outsb
dec
mov
dec
adc
and
inc
jbe
insb
cmpsb
or
nop
fucomip
jo
add
std
decb
in
inc
insb
movsl
repnz
insb
lods
sbb
and
popf
xor
cmp
out
mov
or
fildll
fdiv
adc
dec
push
int3
outsl
and
cmp
aad
dec
jg
ret
xchg
aaa
in
aaa
and
push
push
leave
cld
mov
stc
sub
cmpsb
iret
sub
jp
cmpl
xchg
sub
dec
sbb
mov
test
pop
clc
jmp
push
outsb
pop
xlat
xor
cwtl
test
jbe
call
daa
or
je
movmskps
sbb
out
ljmp
mov
les
pop
in
bound
push
loope
sbb
stos
jecxz
repz
or
sbb
int3
and
ss
cmp
jne
insb
sub
lds
xor
pop
lcall
fists
jl
test
mov
and
xchg
mov
testl
dec
mov
mov
and
pusha
loope
iret
and
inc
dec
sub
xchg
lods
xchg
mov
nop
aad
lret
stc
inc
pop
xchg
lret
out
and
std
jp
add
ficoms
daa
mov
mov
lock
and
dec
mov
idivb
shrl
ret
pop
out
dec
loop
mov
cmpsb
mov
cmp
mov
dec
adc
add
mov
cmp
rorl
add
and
mov
add
or
xor
movsb
test
pop
push
pop
fdivr
push
or
adc
xlat
ds
cld
jmp
in
or
cmp
bound
loop
pushf
sbb
je
push
outsl
in
mov
roll
fdivr
rol
cwtl
lret
orb
mov
sub
aad
jecxz
mov
mov
mov
cmp
mov
xor
mov
inc
or
xchg
xor
xchg
rcll
push
call
scas
pusha
push
ds
xchg
inc
loopne
pop
pop
lods
xor
dec
cs
sub
jmp
xor
push
imul
sub
lea
or
mov
pop
ss
pop
xchg
cmc
fnstcw
sbb
mov
and
pop
dec
ja
das
imul
inc
cmp
jge
aam
sbb
aam
lods
ret
pop
add
jb
ret
outsb
xor
out
dec
jne
lret
or
or
mov
jge
sub
push
dec
jl
and
fcmovb
jae
dec
mov
adc
sub
cmc
sbb
fsubs
pop
sbb
adc
in
pop
fnstcw
xor
jo
loop
ret
les
mov
dec
push
xchg
pop
adc
ds
sti
icebp
ss
inc
sbb
out
adc
pop
add
xor
nop
imul
and
inc
mov
push
lods
test
cmpl
mov
int
add
fwait
dec
lret
leave
stc
cld
add
mov
jae
mov
push
repz
xor
insb
add
sbbb
xorb
and
movsl
jge
addr16
mov
mov
push
mov
leave
jns
loope
orl
hlt
push
mov
mov
and
outsb
lock
cmc
jbe
xchg
and
jp
mov
mov
jno
xchg
sarl
mov
jb
jmp
aam
ffreep
call
ja
or
sbb
je
or
and
or
push
andb
scas
pop
jnp
mov
pop
es
sbb
mov
jmp
cwtl
out
pushf
fimuls
test
pop
or
jp
mov
cmp
inc
mov
loope
sbb
cmc
and
push
or
jae
sahf
sbb
ss
adcb
cmp
rcl
orl
sbb
daa
lahf
icebp
or
cmp
dec
mov
jns
jp
cmp
fnstcw
enter
adc
sbb
insb
cmpl
lret
out
insb
cmp
and
push
stos
pop
addl
sahf
mov
add
insl
mov
and
mov
xor
mov
std
push
and
enter
mov
nop
and
js
push
inc
iret
ds
neg
dec
or
into
mov
mov
mov
add
cld
jp
jp
test
xor
pop
arpl
lret
xor
adc
mov
sub
xor
cmpsl
sub
sbb
sub
inc
add
cmp
cmpsb
hlt
sbb
ficomps
jns
pushf
inc
scas
aam
ss
jno
add
icebp
scas
ljmp
popf
aas
in
scas
mov
sbb
cmpb
fists
mov
sbb
stos
out
arpl
negb
cmp
sub
shr
insb
and
push
iret
repnz
insb
arpl
push
insl
stc
push
out
jp
cmp
test
shrb
jecxz
cmpsl
mov
daa
cmp
push
sbb
mov
std
scas
test
sub
aaa
data16
push
pop
xchg
gs
mov
lret
mov
push
popf
shl
or
adcl
adc
xchg
out
je
clc
iret
scas
xor
das
or
xor
push
xor
stos
or
pop
loop
push
repz
xor
or
repz
pop
aad
loopne
loopne
adc
fdivrl
test
dec
mov
xchg
lcall
mov
cmpsb
push
loopne
jb
jmp
loope
aas
test
inc
xor
dec
sti
push
dec
lock
fstps
adc
jo
jns
lods
push
ret
sub
sbb
push
idivl
ret
cmp
xchg
iret
mov
imul
sbb
xchg
mov
pushf
cmpsl
mov
cmp
repz
clc
or
iret
push
and
adc
push
daa
mov
push
mov
add
cwtl
xchg
icebp
push
nop
cmp
roll
test
push
cs
xchg
in
popa
push
lcall
rcll
mov
test
int3
aam
addl
mov
sub
sbb
out
push
xchg
scas
notl
push
adc
adc
push
aad
cli
icebp
xor
push
subb
jne
push
mov
enter
shr
sarb
inc
out
testl
in
stos
mov
aam
or
xchg
xchg
lahf
shrl
mov
jo
lods
and
jge
mov
inc
mov
adc
xchg
ljmp
mov
dec
cwtl
sub
imull
mov
or
and
mov
insb
lret
xor
daa
mov
enter
adc
pushf
inc
popa
and
jg
and
dec
sub
syscall
js
nop
jp
mov
inc
cmpsl
shlb
mov
cs
scas
std
jno
inc
push
int3
repz
mov
push
jb
push
add
xchg
shr
divb
stos
std
mov
lret
dec
out
inc
sbb
lods
fs
inc
movsb
sbb
xchg
pop
movsl
sbb
sbb
sbb
mov
sti
iret
in
pop
or
mov
out
sbb
test
outsl
and
movsl
int
sbb
jle
imull
lods
subb
adc
sub
rol
repnz
mov
int
adc
iret
iret
pop
or
or
mov
enter
insl
and
dec
daa
bound
pop
xor
sbb
in
jne
imul
mov
inc
repz
cwtl
ja
outsb
out
and
movsb
or
cmp
mov
mov
inc
bound
add
sbb
dec
pushf
push
bound
in
jno
xor
mov
fildl
sub
pop
test
addr16
add
mov
imul
adc
push
or
push
mov
add
ret
jo
mov
gs
fs
dec
xchg
pushf
dec
mov
jnp
xchg
leave
in
xor
push
cmpb
fdivrl
es
pusha
int
je
mov
sbb
scas
rcr
adc
add
and
lock
or
xchg
ds
test
and
mov
inc
or
xor
adc
incl
push
fistl
sbb
xchg
cmp
loope
mov
enter
fs
hlt
call
cmp
inc
mov
pop
cld
hlt
jne
adc
les
jb
std
pop
push
xor
dec
cmpb
pop
xchg
inc
push
adc
decl
out
notl
adc
jne
cmp
xchg
testl
mov
sub
xor
adc
xchg
sbb
rorl
gs
jmp
out
xchg
hlt
sbb
xor
cmp
sbb
ret
pop
push
movsl
cltd
add
pop
fdivp
mov
and
in
dec
dec
add
mov
mov
sbb
stc
ljmp
lds
jne
xchg
jno
pop
and
in
sbb
adc
cmc
jne
push
mov
jl
sub
mov
data16
push
or
inc
out
lock
mulb
loop
sbb
or
mov
sub
dec
jecxz
scas
test
out
push
inc
addr16
dec
jne
test
aam
bnd
pop
stos
inc
push
adc
cld
cmp
mov
mov
js
adc
loope
fwait
xor
dec
pop
lods
test
mov
scas
mov
sub
jae
and
mov
pusha
or
fsubr
push
repz
and
ficomps
cmp
cmp
cld
inc
and
sub
jo
or
outsl
push
lock
imul
push
daa
xchg
cmc
inc
lret
fcomi
lock
testl
mov
leave
out
mov
fsubl
outsl
adc
push
mov
mov
xlat
or
mov
add
mov
cltd
sub
xchg
cmp
imul
dec
shll
xor
dec
dec
icebp
cmc
subb
test
decl
hlt
lods
or
xchg
lods
xchg
mov
jnp
lret
inc
dec
jbe
hlt
int
vrsqrtss
add
add
xor
repz
dec
xchg
cmp
fisubrl
pop
or
scas
xor
jle
inc
push
sbb
mov
cld
imul
sub
arpl
sbb
shl
push
sub
not
lcall
les
sub
or
push
es
or
ds
inc
xchg
mov
jp
mov
mov
inc
xor
push
push
xor
ljmp
jnp
push
jp
into
jge
sarl
bound
lock
in
js
push
and
hlt
xchg
setne
dec
jmp
enter
cmp
fstpt
lods
lds
bound
dec
jmp
hlt
dec
xlat
add
fiaddl
aad
shll
inc
adc
fidivrs
fwait
sbb
push
fcompl
jg
pushf
ret
adc
aas
outsb
xor
loopne
lahf
sub
cmp
out
bound
pop
push
pop
pop
cwtl
or
aam
pop
in
test
mov
push
in
mov
mov
dec
pop
xchg
fs
fnsave
mov
aaa
jmp
in
clc
cltd
mov
movsl
adc
mov
pop
mov
arpl
cmp
mov
mov
into
movsl
add
sub
outsl
mov
sbb
insb
sbb
nop
xor
jns
outsl
daa
in
inc
add
inc
cmp
call
test
or
fdivrl
fisttpl
or
add
and
decb
jmp
cli
punpckldq
mov
jl
filds
pop
jns
repz
sbb
adc
aad
dec
and
out
and
idivl
jne
mov
ja
test
sbb
loopne
mov
mov
push
inc
pop
insl
insb
jne
mov
mov
rorb
adc
in
jl
xchg
imul
sbb
jl
push
pop
scas
aad
add
outsl
aam
ret
and
or
pmullw
mov
jnp
fwait
or
fbld
push
gs
ljmp
xor
adc
or
jnp
push
test
add
fadds
mov
mov
mov
scas
or
mov
xchg
aad
mov
dec
stos
add
pusha
xchg
dec
mov
xchg
pop
inc
xor
fisubs
sub
int
mov
xor
lock
fwait
cwtl
push
sub
jl
push
sub
and
imul
jp
sti
sbb
xchg
mov
cmp
dec
mov
mov
aam
nop
lret
add
loope
xchg
adc
jb
jle
pushf
cmpsb
cmp
sub
dec
sbbb
in
pop
push
cmpsl
xlat
iret
pop
mov
in
mov
leave
lods
daa
push
jbe
and
adc
add
sti
inc
bound
hlt
std
jmp
inc
push
jge
sbb
loopne
xor
pop
adc
jo
mov
idiv
and
cmc
mov
ljmp
xchg
pop
loopne
je
addr16
adcb
cwtl
pushf
jge
cld
inc
add
lea
lfs
and
inc
rcr
push
jno
test
adc
xchg
dec
and
xchg
js
andl
push
jnp
push
imul
push
xchg
movsb
and
ret
aam
and
cmp
test
movl
jmp
arpl
je
push
mov
jecxz
mov
sub
pop
push
fdivrs
adc
xchg
je
push
mov
cmp
and
js
aad
jbe
pusha
repz
sarl
xor
cmpsb
call
lds
fdivrs
adc
test
das
push
xor
pop
inc
push
fsubl
cmc
popa
lahf
pop
je
and
sbb
insb
cmp
call
lcall
test
cmp
stc
mov
dec
or
xor
mov
orl
jnp
push
sahf
inc
in
outsb
mov
roll
adc
cmpsl
out
les
mov
sbb
fbld
jne
xchg
xor
push
out
fsubr
add
out
push
push
pop
out
into
iret
dec
mov
mov
rcrl
mov
loope
xchg
add
data16
scas
dec
sahf
fstps
loope
xlat
add
frstor
push
cmp
push
pop
sbb
ss
sub
je
lock
rclb
pop
xchg
add
sbb
dec
lcall
sub
push
imul
sub
sbb
rcl
ja
sbb
stos
jns
pop
fcmovnbe
loope
push
pop
inc
imul
test
push
in
mov
xchg
jo
js
sub
mov
fidivl
bound
cmpsl
jecxz
scas
lahf
mov
push
test
pop
mov
pushf
dec
aas
lahf
shll
push
inc
dec
pop
mov
mov
mov
add
and
jo
imul
pop
mov
lcall
mov
mov
insl
adc
in
pop
je
sbb
add
aam
jle
cli
sub
shll
mov
pop
push
pop
push
mov
lret
jecxz
out
lods
ss
adc
nop
add
ds
mov
out
stos
popf
push
aas
shll
mov
mov
insb
push
dec
jne
popf
inc
int3
adc
or
test
cmp
mov
or
mov
sub
sub
jl
ror
add
add
stos
in
mov
int
arpl
mov
jp
repnz
or
jmp
pop
xor
inc
insb
rorb
cwtl
test
aad
aam
popf
pusha
movsl
pop
imul
jg
scas
ret
fisubl
cmp
jne
xchg
in
sub
shl
loope
insb
sahf
test
sbb
insb
fwait
jmp
paddusw
roll
and
je
xor
push
dec
mov
sbb
lods
sub
push
int
fmull
mov
lds
into
mov
jecxz
xchg
mov
shrl
mov
subb
dec
cmpb
ss
inc
sub
repz
adc
xchg
test
pop
cli
push
dec
and
in
dec
dec
inc
mov
cmp
xchg
xorl
mov
js
xchg
dec
je
jp
or
pop
cs
xor
push
dec
ja
fwait
jle
pop
stos
mov
sub
push
or
xor
mulb
jp
les
sbb
mov
in
out
test
and
push
mov
add
pop
mov
pop
js,pn
push
jnp
pop
xchg
fdivp
jne
sbbb
les
test
pop
test
stos
lock
or
fisttps
pushf
les
xor
push
leave
xor
cmp
cli
mov
pop
mov
test
cmpsl
inc
lods
fisubs
or
sub
cmp
adc
xchg
dec
outsb
push
adc
mov
or
adc
xor
cmp
in
jg
int
sbb
pop
test
rcll
cmp
loope
les
insb
cli
push
or
mov
repnz
and
mov
int3
pop
outsb
bound
jg
insl
popa
ret
mov
pop
rorl
mov
push
mov
dec
in
dec
mov
push
fdivrs
out
mov
pop
inc
or
call
movsl
and
jl
cld
sti
mov
pushf
pushf
inc
clc
xor
nop
scas
xchg
loop
inc
mov
int
add
enter
dec
shrb
stos
into
cltd
fsubs
repz
mov
mov
idivb
add
xor
lea
cwtl
rcrb
mov
loop
lds
pop
imul
and
jge
inc
subb
jge
test
popa
dec
sub
call
idivb
mov
inc
enter
xchg
cwtl
mov
push
data16
imul
movsb
int
stc
cmp
mov
sbb
cmp
mov
push
cmc
add
push
dec
xchg
push
aas
clc
decb
and
cmp
cmp
mov
and
and
lock
cmpsl
fsubl
movsw
lock
xor
out
or
and
xor
out
or
lods
inc
insl
mov
xchg
adc
xor
jb
bound
and
mov
cmp
fwait
sub
gs
sub
icebp
cmp
dec
sbb
lods
mov
aaa
lcall
inc
sarb
lds
ss
loop
mov
xor
mov
das
adc
xchg
das
rorb
adc
aad
lret
jns
inc
in
dec
jle
add
adc
scas
icebp
negb
rolb
in
js
ljmp
repnz
cmp
cmp
mov
stc
sbb
jmp
xchg
cmc
ss
adc
adc
out
dec
outsb
jp
pop
outsb
shlb
bound
jge
ss
pop
sub
je
xchg
pop
ror
dec
dec
jl
jl
mov
pushf
nop
pushf
pop
dec
insl
sub
cmp
xor
mov
cwtl
imul
mov
pop
in
mov
jecxz
stc
stc
add
jecxz
rcll
sub
aas
pop
shrl
stos
xchg
inc
jge
sbb
in
filds
cwtl
sub
ja
ds
sahf
fcmovnu
or
cmp
pushl
push
pop
mov
or
fimull
lock
xchg
mov
mov
lock
fwait
gs
inc
cvtdq2ps
add
jb
scas
add
dec
cmp
sub
mov
lods
xor
sub
lahf
popf
inc
mov
mov
xchg
in
aaa
outsb
mov
or
mov
adc
outsb
add
daa
push
pushf
jns
xor
xchg
mov
mov
jmp
lcall
mov
aaa
loopne
sbb
push
inc
lret
mov
lea
adc
jecxz
out
dec
xor
mov
and
imul
cmp
stos
push
aas
jno
xchg
aas
data16
lret
mov
sub
cs
ret
les
mov
mov
add
cli
orl
mov
push
subb
sbb
xlat
push
ds
sbb
mov
fmuls
jecxz
push
movsl
test
xchg
or
leave
jge
jecxz
imul
and
xor
fs
lahf
xchg
xchg
or
push
outsl
push
in
mov
loope
inc
and
inc
pop
xor
jne
cmc
cmp
sbb
stos
pop
xchg
icebp
test
iret
leave
shlb
hlt
sar
push
sbb
jo
xor
ret
iret
xlat
outsl
push
pop
xchg
fsubr
fcompl
mov
arpl
ret
stc
jae
sti
shll
dec
sbb
pushf
mov
out
inc
pop
mov
mov
das
insb
rorb
adc
ret
adc
and
xchg
lahf
pop
popf
xchg
shll
xchg
jmp
push
notl
or
xlat
jp
or
inc
sub
pusha
xor
pop
in
testb
insb
out
bound
jnp
pop
scas
addr16
pop
movsl
jmp
je
out
inc
enter
jnp
xor
out
pop
imul
sbb
cmp
jne
repnz
push
mov
jecxz
inc
inc
xchg
jmp
sub
and
fildl
push
ds
jae
pusha
orl
dec
mov
jns
and
arpl
cmp
test
das
or
dec
sti
stos
xchg
sub
inc
mov
mov
xor
add
ljmp
sysenter
adc
sahf
inc
xor
in
fildll
lods
dec
push
mov
and
sub
fmull
pop
or
cltd
or
pop
fcmove
cltd
jle
mov
push
test
xor
sbb
sti
in
pop
test
push
jmp
lahf
mov
xchg
xchg
out
mov
loop
mov
hlt
pop
scas
cmpb
mul
ror
fstpt
dec
clc
dec
andb
xchg
inc
loope
push
add
shrb
out
jno
cmp
out
popf
loope
mov
or
in
sbbb
sbb
lock
pop
cld
push
aas
int3
cs
lock
and
xchg
add
lock
sub
pop
ss
jmp
fidivs
jmp
xlat
fnstsw
mov
push
mov
xchg
jge
xchg
lret
stos
fs
or
push
insl
es
and
mov
loopne
lret
outsb
lret
fcoms
stc
pop
lea
test
lods
push
xor
in
push
inc
dec
cmc
sub
repz
sbb
mov
push
add
dec
xchg
rclb
cmp
dec
lods
repnz
or
test
ds
cmp
jb
cmp
or
dec
sbb
dec
jne
sub
fisttpll
leave
inc
mov
stos
call
xchg
std
test
arpl
mul
aam
pusha
pop
xchg
loopne
lods
push
mov
or
mov
push
pop
mov
xor
pop
lcall
movsb
mov
push
mov
mov
and
test
xchg
mov
mov
and
pop
inc
jmp
pop
test
pop
mov
dec
sahf
in
sti
outsb
mov
dec
jp
jmp
or
mov
dec
into
loop
std
outsb
add
cli
mov
gs
xchg
jnp
inc
jle
dec
jnp
pop
mov
mov
pop
jne
pop
into
jl
loope
push
pop
fisttps
rolb
clc
into
mov
xchg
fsubrp
int3
sub
rcrl
push
inc
sub
aam
mov
repz
mov
adc
or
iret
adc
jmp
sub
sub
rcrl
repnz
or
loop
movsl
cmp
add
push
movsl
pop
mov
jnp
outsb
push
jecxz
stos
mov
jne
hlt
mov
dec
repnz
fiaddl
sub
mov
adc
lea
pavgw
iret
inc
ja
xchg
das
ljmp
adc
inc
das
dec
popa
mov
in
cs
bound
shlb
jno
pop
lahf
insl
sbbl
mov
push
imul
dec
sub
daa
jmp
add
pop
cmp
cld
je
loope
out
or
into
cli
sbb
push
pop
insb
jno
out
dec
rolb
sub
cltd
and
jle
bound
sbb
push
or
mov
sahf
push
jmp
ds
mov
iret
push
pop
mov
dec
insb
clc
adc
mov
jne
js
inc
lret
mov
shr
push
cltd
add
mov
adc
nop
cld
pushf
ror
std
dec
jbe
es
push
cmp
mov
cmpsl
cltd
enter
jg
cli
ds
outsw
jne
data16
cmp
mov
inc
icebp
xchg
repnz
iret
ss
inc
loopne
xor
shlb
xor
dec
jb
aam
lahf
mov
test
incb
cmp
ljmp
xchg
mov
aam
push
inc
bound
cmpsb
jle
push
gs
mov
mov
out
iret
mov
int3
dec
bound
mov
mov
stc
pop
dec
movsl
xor
jnp
inc
outsb
jae
les
xlat
pop
les
dec
and
push
or
mov
ss
sbb
or
enter
push
xlat
pop
sub
clc
scas
cs
dec
shl
fwait
enter
jp
pushf
dec
push
scas
cmp
mov
js
sub
sub
cmp
mov
inc
std
mov
lret
xor
mov
repz
fcom
mov
mov
out
adc
push
xchg
sub
inc
sub
fnstcw
jb
ffree
test
pop
xorb
imul
push
inc
adcb
lcall
pop
mov
rolb
mov
dec
sbb
xchg
xchg
push
scas
mov
lods
jecxz
fbstp
push
jbe
fs
dec
daa
ja
cmpsb
insb
movhlps
mov
stc
mov
dec
jns
lds
roll
mov
cld
stc
inc
cmp
add
inc
jb
xchg
sub
mov
mov
sbb
aad
fmul
in
sub
dec
push
mov
sub
fwait
lret
xchg
and
icebp
push
or
leave
pop
dec
xor
and
pop
sub
push
pushf
mov
pop
icebp
mov
int3
and
aad
xor
into
push
cld
mov
outsb
lods
in
push
push
xchg
into
adc
mov
leave
and
fcompl
test
xchg
insb
sub
aaa
and
sbb
clc
shrb
and
inc
sub
fcomp
xchg
mov
sbb
push
mov
or
psrlq
jns
scas
movsb
aam
mov
or
imul
mov
or
inc
xchg
pushf
imul
push
xor
jbe
aad
loope
lahf
sahf
adc
arpl
xlat
push
add
fwait
cmp
mov
sub
sub
mov
loope
mov
fdiv
bound
ljmp
adc
fs
cmp
dec
xchg
fnstcw
dec
inc
push
mov
add
mov
push
sub
insb
pop
in
sbbl
shrb
int
jge
add
cmp
pop
dec
popf
xchg
fwait
mov
aad
notb
arpl
mov
push
mov
adc
dec
or
rcrb
outsl
mov
mov
add
cmp
clc
add
fsubrs
dec
pusha
sub
or
mov
sbb
adc
cmc
push
cmp
add
hlt
dec
xchg
push
lea
jp
add
adc
shrb
mov
notb
jns
scas
stos
loope
shrb
xchg
jb
fisubrl
adc
sahf
lcall
sub
andb
lret
xchg
lods
popa
popa
xchg
or
loopne
mov
test
cmpb
dec
pusha
mov
xchg
dec
xor
aas
adcb
jl
lods
mov
rcrb
lret
outsb
dec
adc
fadd
inc
hlt
adc
pop
cmpb
add
add
ljmp
sahf
jne
int
shll
pop
sub
push
xchg
lret
sub
cmp
mov
cmp
test
lea
aad
inc
hlt
pop
lahf
cwtl
cli
inc
sahf
mov
adc
mov
pop
int
add
jmp
movsb
mov
outsb
dec
xor
cld
xor
mov
insb
lret
icebp
ljmp
dec
out
mov
sbb
inc
add
ljmp
mov
adcb
addr16
xor
in
movsb
into
mov
outsb
xlat
xor
js
rol
add
add
shrb
sub
jp
lret
shll
pop
or
jno
mov
pop
sti
je
pop
adcb
sbb
mov
jnp
cld
fstpt
push
nop
ja
popa
pop
mov
jno
sub
mov
push
movsl
cmp
negb
insb
mov
insb
mov
movsb
jo
push
lock
jbe
sub
scas
lret
rcrb
mov
mov
inc
popa
xchg
inc
inc
xor
sbb
cltd
or
dec
cld
enter
mov
jmp
or
popa
cmpsl
or
mov
push
aad
mov
rcll
dec
mov
xor
ficompl
ret
sahf
jp
divl
inc
push
lahf
cmpsb
clc
add
les
aam
rcrb
xchg
stos
push
jbe
add
mov
push
in
adc
lret
push
and
adc
cmp
push
pushl
movsb
fists
adc
xlat
pop
ret
push
or
xchg
xchg
mov
jb
mov
movsb
pop
adc
cmpsl
sbb
mov
pushf
xchg
jl
mov
unpcklps
cmp
shlb
cltd
call
cmpsl
and
js
std
mov
insb
lret
cld
sti
enter
movsl
and
jmp
jp
adc
or
push
push
mov
dec
inc
arpl
loope
jge
adc
lcall
clc
hlt
cmp
jge
outsl
js
pop
adc
xor
mov
les
pop
scas
dec
jg
fs
inc
les
pop
or
fidivrl
sti
and
mov
ja
push
test
pop
or
fs
mov
imul
inc
sub
dec
sti
scas
or
adc
adc
data16
fisubl
mov
cmpsl
cmp
stos
sbb
jge
xor
stos
cmp
pusha
lahf
jns
xchg
rclb
enter
arpl
movsl
adc
sbb
push
jb
push
mov
enter
sbb
testb
test
imul
mov
jmp
sbb
mov
inc
dec
scas
dec
pop
sub
or
cld
gs
or
lcall
mov
xchg
xchg
sub
sub
outsb
pop
push
sub
adc
xchg
or
stos
cmpb
xor
push
pushf
fstpt
mov
sbb
ret
push
arpl
in
movsl
mov
dec
dec
cmp
icebp
push
mov
xchg
sbb
mov
mov
test
mov
nop
pop
mov
out
pop
push
insl
mov
lds
push
sarl
sbb
mov
sahf
push
stos
adc
xchg
insl
rorb
sbb
jle
lcall
mov
rcr
mov
adc
push
adc
dec
mov
and
pop
in
add
adc
ds
cltd
fnsave
ja
out
cmp
outsl
jecxz
add
cmp
push
pop
out
ret
push
add
dec
mov
sarl
and
jl
aad
or
movb
iret
ds
paddusw
adc
jmp
sbbl
jns
jle
sbb
mov
mov
addb
sub
int
or
es
iret
into
push
outsb
sub
fmuls
pop
aam
sbb
mov
sbb
shld
sti
test
push
jb
dec
popf
cltd
inc
pop
xchg
les
ret
jp
addr16
aas
nop
push
mov
stos
inc
jmp
sarl
xchg
leave
arpl
sub
andb
paddd
rorb
cltd
push
cmp
pop
sub
add
shlb
stos
dec
cli
mov
pusha
lret
cwtl
or
movsb
mov
mov
sub
jg
sbb
mov
push
pop
test
imull
adc
jne
cmp
xchg
sub
or
loope
call
mov
push
add
push
xchg
enter
outsl
mov
in
sbb
test
xchg
movsb
push
mov
gs
mov
pop
fs
frstor
sbbl
adc
movsl
jno
or
push
mov
repz
push
and
or
imul
xor
xor
inc
in
jo
mov
stc
out
pop
mov
sbb
cmc
std
imul
xor
loope
mov
fisttps
ljmp
mov
cmp
test
jecxz
leave
hlt
cmp
lods
mov
sbb
dec
je
and
pop
mov
je
arpl
or
ja
push
movsl
mov
pushf
xor
pop
jns
repnz
fadds
es
sahf
je
or
cmp
imul
loopne
dec
mov
iret
jge
inc
jne
jg
inc
and
mov
xchg
and
stc
sahf
scas
add
push
div
aad
jb
or
out
mov
fildll
nop
mov
sub
push
in
inc
sbbl
aas
xlat
and
fmuls
imul
mov
inc
aaa
inc
mov
xor
cmpb
push
loopne
cld
and
cltd
add
jmp
cmc
mov
inc
adc
push
bound
loopne
sbb
cmp
test
je
inc
lock
enter
mov
dec
loop
stc
subl
jb
pop
mov
adc
mov
pop
cmp
aam
mov
pushf
fwait
add
les
imul
push
adc
outsl
push
lcall
setno
pop
adc
not
cmp
addr16
or
and
dec
mov
lock
rcll
cmp
sbb
mov
dec
cmp
addl
insb
jl
js
into
dec
jl
inc
xor
lea
out
filds
add
call
push
xchg
mov
insl
popa
in
subl
ret
inc
repnz
ds
lret
aaa
lret
pop
daa
mov
rorl
loopne
sub
xchg
and
and
mov
inc
mov
push
es
xorl
lock
or
fisttpl
pop
inc
fs
push
lods
adc
adc
mov
dec
xor
cmp
pop
addr16
pop
jecxz
div
sub
ds
mov
inc
dec
pop
xlat
stos
adc
and
aas
repnz
popf
mov
push
arpl
mov
jns
dec
dec
mov
aad
adc
or
in
xchg
lods
dec
psubsw
shl
jmp
js
ljmp
and
iret
dec
and
mov
sahf
sbb
aaa
pop
xor
mov
cli
pop
xchg
pop
adc
lds
xchg
fst
sbb
xor
jle
xchg
ljmp
jle
inc
cmovo
or
pushf
scas
movsb
in
in
call
clc
sarl
bound
or
pop
mov
pop
int
stc
xchg
mov
movsb
andl
inc
stc
insl
dec
arpl
roll
xorb
imul
imul
adc
inc
sti
repnz
pop
add
lods
leave
sub
mov
jnp
mov
popa
xor
stos
push
mov
push
jno
in
pop
enter
jp
ds
sbb
mov
sub
push
scas
int
mov
pushf
imul
pop
lret
cltd
or
sbb
push
repnz
push
sub
xor
in
and
cmp
adc
xchg
or
lahf
xchg
and
mov
test
imul
popa
cmpsb
dec
popl
push
adc
inc
ja
ret
inc
or
mov
mov
fwait
mov
add
aas
insb
sub
in
dec
addb
lock
imul
ss
test
cmp
std
ljmp
cmp
jbe
fpatan
dec
mov
pop
dec
stos
insl
sbb
sub
xor
sbb
mov
out
mov
or
push
dec
test
xchg
jbe
cmpsb
loop
stos
sahf
sub
in
std
pop
mov
out
cmp
xchg
sarl
bound
and
lock
mov
sahf
int3
mov
xchg
mov
xchg
popa
rolw
push
add
in
adc
cli
out
cwtl
lods
test
push
sti
jns
loopne
fbstp
adc
das
sbb
cmc
cmp
sub
jg
imul
mov
push
sub
lea
push
mov
fistpll
clc
mov
pop
jbe
xchg
sub
and
lock
pop
addl
shlb
addr16
mov
adc
cmc
inc
add
pop
push
push
lea
fisttpl
add
out
movsl
sarl
xlat
mov
enter
mov
inc
scas
adc
and
inc
repz
sub
outsl
sub
adc
popa
cmp
pop
int3
data16
add
or
push
fcomi
inc
stos
ficomps
fcoml
push
mov
mov
mov
mov
mov
pop
xchg
shll
xor
rcrb
in
pop
and
sub
insb
jb
inc
frstor
repz
fwait
nop
pop
in
clc
fsts
sub
test
cmpsb
and
cli
test
mov
cmp
stc
mov
dec
rcr
aam
lea
out
jp
jmp
mov
jbe
std
enter
mov
pop
adc
inc
lahf
lcall
push
mov
dec
push
bound
fs
fwait
scas
stc
je
repnz
dec
les
mov
jle
cmp
mov
inc
sbb
xor
or
cmpsb
lahf
pop
cmp
push
push
adc
jecxz
cmp
adc
adc
sub
ja
ss
stos
jecxz
jmp
fs
xor
pop
inc
jl
xchg
in
inc
pop
outsl
push
xchg
jne
std
out
xchg
jmp
cmp
out
aas
imul
inc
or
int
cli
enter
jae
cli
clc
jb
mov
sbb
and
out
cwtl
cli
dec
dec
dec
mov
jle
aaa
es
adc
mov
insl
insb
iret
dec
out
aas
movb
dec
mov
or
insb
pop
pop
cmc
jnp
dec
mov
xchg
loope
xchg
scas
push
cmpsl
in
xchg
mov
rclb
sub
je
cmp
xor
cmpsl
loopne
xor
imul
femms
ljmp
sub
js
xchg
push
push
icebp
pushf
call
je
and
lcall
xchg
iret
addr16
dec
mov
sub
jo
mov
mov
and
icebp
fisubrs
inc
fildl
sub
mov
fists
sub
pop
push
in
daa
hlt
sbb
cltd
fldl
movsl
mov
mov
inc
pop
in
sub
mov
in
stc
jle
cmpsl
and
mov
stos
movsl
faddl
sub
dec
xor
in
shll
jge
rcrl
mov
push
jbe
mov
xlat
mov
cmp
lods
lahf
xchg
push
outsb
xchg
sahf
sbb
xchg
mov
jb
jae
dec
mov
dec
sub
scas
pop
icebp
sbb
jmp
pop
out
outsl
scas
dec
jp
es
adc
cmp
call
xchg
push
pop
or
cli
and
mov
pushf
pop
and
cmp
pop
dec
cld
xchg
popf
push
pop
jbe
mov
imul
repz
mov
imul
push
dec
cli
xchg
aam
arpl
cmp
or
mov
mov
fcmovnbe
out
aas
dec
push
in
jae
aaa
divb
sahf
outsl
jb
mov
cmp
sbb
cmp
jp
jne
imul
xchg
jo
shll
ficomps
and
sbb
daa
lret
or
add
fcoms
in
lock
jo
enter
mov
rcr
ss
lods
or
in
out
adc
test
lea
fsubrs
pop
pop
add
outsb
cmp
add
je
xor
inc
notb
rcll
sub
filds
mov
add
xlat
pop
push
sti
call
mov
aad
pop
test
jbe
outsb
lock
rorl
add
aas
fcomip
add
bound
shlb
jb
in
or
loopne
push
xchg
cmpsl
outsb
mov
push
leave
insb
in
aam
dec
adc
jle
fidivrs
cmpsb
ljmp
dec
and
movsl
gs
xor
call
sub
es
or
adc
aas
scas
popa
and
orl
jb
ss
addr16
mov
imul
xor
test
ljmp
test
fisubl
xchg
mov
lods
xlat
and
jne
mov
add
cmp
call
aam
xchg
pop
arpl
lcall
jb
xor
pop
das
add
cmpsb
jns
std
push
jno
pop
aad
pusha
jne
pop
pop
fadd
enter
push
adc
inc
dec
lds
sub
outsb
sbb
and
nop
sbb
add
jns
and
in
or
or
mov
icebp
test
add
sarl
inc
sub
je
divb
popf
xor
fisttpll
sub
jae
loop
js
or
das
jb
and
in
and
sahf
sub
pushf
das
xchg
and
push
add
das
pop
ljmp
adc
and
mov
popf
dec
sub
loopne
repnz
sbb
call
out
sub
xor
push
pop
incb
jl
shl
pop
outsb
aaa
lcall
repz
pop
and
xchg
repz
and
sub
ret
popl
test
mov
jae
lds
sub
mov
scas
fs
pop
sub
les
cmpb
and
adc
inc
lahf
lcall
cltd
dec
and
sarb
icebp
adc
lods
das
jno
negl
dec
aas
pop
test
sbb
pop
dec
xor
repnz
add
ljmp
mov
jno
mov
jle
mov
push
and
divl
into
inc
inc
mov
inc
xchg
jno
pusha
and
mov
jmp
aam
adc
jl
xchg
ja
mov
js
add
mov
or
pop
mov
insl
inc
test
repz
xlat
ret
out
push
cmc
icebp
rorl
mov
into
hlt
cwtl
aas
dec
sbb
or
inc
cmp
inc
pop
cmpsb
insb
push
push
jp
lahf
int
and
inc
test
adc
sub
loope
jle
in
pinsrw
push
xchg
sub
xor
test
jns
aam
and
jp
cli
fimull
mov
xor
mov
inc
xlat
sub
mov
int
movsb
jae
sbb
mov
mov
mov
and
or
pop
inc
cmp
jae
cli
adc
jl
mov
lret
nop
je
xchg
mov
lret
inc
in
loope
decb
leave
inc
sbb
or
mov
and
data16
outsl
and
dec
repz
andb
sbb
adc
push
shll
sbb
repnz
rolb
aaa
fsubrs
lret
rclb
sub
xlat
sbb
mull
imul
mov
mov
out
mov
push
pusha
mov
cmp
mov
out
inc
adc
xor
mov
cmp
fbld
int
cmp
push
ljmp
push
test
jge
jo
sbb
or
mov
sbb
daa
jp
inc
clc
sub
sub
xchg
cld
loop
xor
mov
cmp
mov
jecxz
mov
xor
stos
sbbl
stc
jl
movsb
push
popa
test
gs
push
add
lds
mov
sub
pop
cmp
inc
les
mov
ja
fucomi
clc
and
xor
in
inc
mul
shr
ret
cmpl
inc
les
cmp
jbe
jnp
push
iret
add
hlt
lcall
popa
push
mov
lods
mov
js
lock
mov
bound
mov
mov
repz
out
mov
push
xchg
test
mov
jb
in
rclb
xor
adc
ss
dec
arpl
and
fldt
or
test
mov
push
aam
movsl
mov
inc
pop
lods
mov
dec
jnp
leave
lahf
and
add
scas
aas
xchg
in
mov
or
pop
or
mov
push
and
add
jae
add
pusha
imul
icebp
ljmp
add
inc
scas
jmp
pop
test
sbb
xchg
sti
cltd
sub
xor
popf
pop
cld
xchg
sub
fbstp
bound
mov
gs
xchg
mov
mov
aam
mov
cmp
sub
mov
popa
push
push
iret
jo
pop
sub
and
lods
stos
std
jmp
shlb
ja
ret
mov
call
mov
inc
loope
lahf
jb
xor
mov
jg
sub
stos
pop
inc
cmp
xor
dec
movsl
jo
inc
adc
mov
lds
in
dec
fs
ljmp
leave
jmp
lret
inc
mov
sub
arpl
mov
nop
add
cmp
lods
mov
call
cmp
xor
ljmp
mov
cmp
test
mov
xor
inc
xlat
xchg
daa
jp
call
pop
fimuls
lea
xor
test
sbb
sahf
ja
inc
jmp
call
sub
mov
sub
call
inc
les
xchg
xchg
insl
add
sub
mov
popa
cmpsl
out
stos
mov
stos
shl
mov
push
cmpsb
movsl
nop
andb
cld
push
repz
vmovdqa
insb
pop
dec
int3
sbb
push
aas
repnz
fstpl
xor
lcall
push
pop
pop
pushf
xchg
shrb
cmovb
lock
lock
push
ret
ficomps
sar
lcall
add
push
push
test
outsb
movsb
mov
and
repz
jb
outsl
pop
dec
fiaddl
int3
cmp
enter
xchg
popf
test
rdmsr
push
mov
bound
clc
xchg
rcrb
dec
xchg
sbbl
fsub
mov
xor
dec
xor
mov
pop
dec
js
adc
xor
mov
fwait
xrelease
leave
adc
fwait
es
out
into
popa
fnstcw
ss
push
or
daa
or
xor
and
jle
mov
pop
jl
addr16
sarl
cwtl
shll
popf
mov
push
test
mov
pushf
leave
push
sub
sbb
fstl
test
ja
pop
xchg
and
fwait
or
xchg
mov
or
xor
fstps
pop
and
lea
enter
jne
imul
dec
and
pop
mov
mov
test
fs
fucomp
adc
mov
and
adc
xchg
leave
xchg
stos
ja
push
and
cmp
xchg
and
shll
pop
mov
scas
rcrb
pop
xor
imul
mov
hlt
shl
mull
inc
int
rcrb
mov
lds
add
jae
lods
push
icebp
mov
pop
in
fcom
daa
mov
aam
iret
jp
mov
lcall
mov
movsb
aas
cmp
push
arpl
cld
nop
cwtl
fsubrs
pop
sub
outsb
push
jo
add
xchg
je
test
mov
and
mov
enter
mov
lock
popa
pop
cmp
pop
call
xchg
mov
divl
ds
jl
xlat
jbe
iret
bnd
sbb
adc
or
adc
adc
lcall
loope
and
fsub
imul
and
loope
repnz
jg
add
adc
inc
jno
mov
mov
push
jmp
sbb
push
out
push
sbb
or
xor
jbe
add
xchg
movsb
jb
or
mov
gs
repz
loope
jb
imul
lahf
fisubrs
pop
data16
xor
add
dec
jmp
fidivrs
fmulp
push
mov
icebp
inc
cmpsb
inc
dec
dec
sbb
into
fisubrs
fcompl
test
lret
adc
jge
int
inc
or
insl
xor
push
xor
and
push
movsl
mov
xchg
xchg
fsubrs
ljmp
inc
test
sub
xor
shlb
pop
adc
push
inc
fwait
call
outsb
jg
mov
rolb
ss
daa
lea
ret
cmpsb
orb
stc
mov
or
pop
jg
xchg
xchg
repnz
stc
pop
mov
sarl
add
mov
xchg
out
loope
cli
pop
mov
les
es
xor
push
pop
cli
cmp
inc
and
sub
test
sbb
sub
and
js
dec
sti
and
push
movsb
mov
cld
pop
popa
dec
xchg
push
repnz
js
push
cli
jmp
insl
stos
mov
adcl
xlat
push
in
lret
int3
push
lods
xchg
addr16
sub
jp
xchg
mov
or
nop
cmpsl
mov
lahf
ja
lods
sbb
mov
sbb
sarl
lods
mov
jge
xchg
cltd
enter
pop
pop
iret
scas
std
std
fcomip
test
sbb
sti
aad
jp
shrb
mov
aas
xor
mov
imul
pop
fstpt
lret
pop
cmpsl
lcall
pop
sub
inc
inc
adc
pop
loope
xorl
leave
js
sub
gs
add
mov
shll
daa
loope
and
push
cmp
pop
pop
jle
jmp
cmc
xlat
ret
dec
repz
in
xchg
push
xchg
push
jbe
pop
in
xor
popa
inc
adc
add
repz
popa
cmpb
outsb
loop
xchg
mov
jl
test
push
mov
jp
loop
ss
dec
add
mov
mov
push
sbb
push
and
adc
dec
jg
mov
enter
test
lcall
test
enter
dec
aad
pop
out
inc
sbb
loopne
sarb
cmp
pop
sub
or
nop
push
dec
push
xor
mov
sbb
cmp
in
mov
sbb
inc
rclb
mov
addr16
notb
ljmp
sahf
fdivs
cmp
xchg
jno
add
loop
fsubrs
into
shll
ret
push
mov
sub
and
mov
in
pop
outsb
fidivrl
lods
push
cwtl
sbb
cmp
loope
dec
push
jg
sbb
aam
gs
dec
ja
clc
mov
addr16
shll
sbb
push
aad
jge
popa
hlt
outsl
lahf
addr16
mov
dec
sub
sahf
notl
cli
sub
mov
mov
push
testl
frstpm(287
xor
xchg
shlb
xor
icebp
sbb
lahf
inc
dec
fdiv
cmp
jbe
out
addr16
dec
out
scas
dec
jp
jecxz
inc
mov
adc
dec
int
push
inc
enter
mov
mov
in
cld
sahf
mov
mov
pop
or
incb
ja
pop
lods
call
fstps
mov
add
sti
insl
mov
adc
jmp
ljmp
push
xchg
mov
mov
dec
jmp
xchg
pop
test
push
outsl
push
jge
fidivrs
mov
lods
movsl
push
or
sbb
cwtl
and
push
fistpll
into
das
lds
lahf
ss
repz
sbb
mov
adc
mov
push
subl
mov
inc
fs
aam
jecxz
adc
je
sbb
cltd
or
pop
test
xor
sub
sbb
mov
push
push
scas
jle
mov
push
push
pop
cmp
scas
dec
pop
mov
pop
dec
mov
cld
dec
xchg
cmp
pop
and
xor
inc
xor
and
cmp
imul
mov
adc
push
fucomip
rcl
cmp
jo
jmp
scas
adc
mov
aaa
and
popa
jl
repz
lds
xor
mov
inc
inc
or
mov
cmp
or
nop
xchg
js
ds
std
mov
mov
push
sar
pop
outsl
movsb
mov
xchg
pop
adc
push
mov
js
lds
popf
pop
loope
stos
xor
sahf
mov
pop
sarb
cmp
mov
cmp
or
cld
push
cwtl
in
and
sbb
test
push
sbb
jge
int3
xor
lret
adc
sub
test
mov
in
xor
and
ljmp
test
jle
or
jmp
push
mov
bound
shlb
out
pop
aas
sub
shll
fsts
sub
mov
sarl
sahf
and
dec
gs
loopne
cwtl
sub
adc
add
dec
test
inc
gs
test
push
cmp
aam
or
int
repnz
xor
jbe
jp
cmp
loope
cld
mov
loopne
movsb
push
shl
aas
add
test
shlb
ja
sahf
add
push
aaa
push
sbb
mov
test
imull
subl
icebp
loope
xchg
xchg
cmc
mov
icebp
cmp
and
jp
ficoml
fwait
pop
xchg
sahf
sub
lcall
adc
sbb
mov
push
mov
mov
js
pushf
loopne
call
call
mov
in
xor
iret
add
cmp
xchg
pop
jae
sarb
aam
shll
and
rolb
das
add
mov
inc
adcb
jmp
clc
gs
clc
adc
sbb
adc
pop
push
test
pop
shlb
mov
xlat
in
push
push
outsl
xlat
movsl
push
call
sbb
loope
fldt
push
inc
lret
and
icebp
xor
mov
or
outsb
inc
mov
push
dec
add
and
inc
popa
in
add
xchg
cmpsb
in
jecxz
fisttps
sub
je
adc
mov
out
fnstcw
sbb
inc
sbb
jno
pop
scas
je
sub
adc
fwait
sub
jns
mov
mov
mov
subb
jbe
aas
pop
loop
ret
push
fldl
aad
ret
push
mov
push
jg
rorb
jns
pop
fimuls
test
or
repz
loop
sub
pop
shr
rcrb
jnp
xor
aas
and
xchg
lcall
mov
pop
pop
push
xor
dec
shll
insb
ja
lods
hlt
xlat
mov
sbb
cmpsl
pushf
sub
test
adc
xor
shlb
lock
mov
adc
jge
hlt
scas
test
insl
xchg
bound
and
inc
sbb
addr16
xadd
add
xchg
adc
inc
ficomps
sti
cmp
cs
and
jle
push
sub
xor
pop
in
jl
and
adc
inc
cwtl
movsb
xor
hlt
jnp,pt
adc
int3
jp
push
mov
sub
fisttpl
scas
cmpsb
mov
mov
mov
add
fbld
subl
push
es
mov
and
xchg
sbbl
mov
insl
orl
cmovne
out
lods
aam
outsl
jbe
sarb
jle
jge
fcmovbe
es
call
dec
cmp
cmpsb
jp
loopne
icebp
push
xchg
jns
test
cmpsl
pop
mov
jne
add
stos
hlt
jg
sub
inc
xor
les
or
and
mov
and
dec
jae
clc
test
aaa
icebp
and
idivb
xor
push
mov
xor
mov
stc
mov
insl
xor
mov
icebp
adc
add
fnstcw
and
jbe
in
inc
and
cmp
xchg
push
in
xor
cli
arpl
jge
jmp
xchg
push
lret
dec
fsubs
out
cmpsb
adc
xlat
ljmp
pop
push
add
dec
jns
and
cmpxchg
fadds
mov
push
fisubrl
je
adc
cld
stos
jl
lds
adc
scas
fiadds
fs
icebp
dec
cld
data16
xor
cmp
dec
lret
ljmp
scas
int
cmp
fnstcw
xor
or
fwait
mov
pop
dec
xlat
mov
stos
mov
sbb
das
jnp
sbb
ljmp
int
mov
into
adcl
push
lock
add
xchg
ljmp
push
test
inc
sbb
cmp
pop
int
jle
lahf
jg
inc
aaa
data16
xor
pop
lock
movsl
cmpsl
sbb
mov
ror
mov
jmp
dec
repz
divl
sbb
insl
push
cwtl
pop
mov
push
cwtl
dec
or
pop
gs
mov
clc
or
into
btc
dec
gs
push
jo
lods
add
enter
cli
dec
dec
pop
insb
aas
lahf
repnz
mov
sti
pop
xchg
mov
in
inc
cmpl
mov
into
or
cwtl
imul
data16
push
test
jno
jno,pt
test
or
mov
hlt
cmp
bound
test
int
icebp
add
jmp
jle
mov
mov
ret
jecxz
inc
push
push
cmp
aas
int
lods
push
adc
or
sbb
sub
lods
in
lret
clc
xorb
mov
pop
sbb
pop
ret
dec
test
mov
sbb
dec
push
add
dec
cltd
rorb
shlb
jbe
mov
jp
push
cmpsl
jmp
maskmovq
mull
and
mov
add
int3
push
mov
adc
aas
icebp
xor
pushf
sub
mov
imul
cmpl
xchg
aad
int
mov
dec
cli
fildl
jecxz
pop
test
repnz
push
addb
popf
push
mov
sub
loop
or
and
in
jl
arpl
lret
adc
sti
pop
cmp
mov
inc
mov
aas
jb
das
push
add
dec
cmp
divb
rcr
mov
xchg
xchg
orb
popa
iret
sub
mov
push
insb
cwtl
nop
adc
cmp
mov
cld
push
daa
mov
in
push
jg
xor
ljmp
and
mov
add
imul
cltd
mov
mov
shll
xor
xchg
mov
inc
mov
into
out
jge
rolb
int
xchg
sbb
xor
icebp
es
ljmp
out
lret
into
jge
imul
cwtl
sbb
mov
leave
mov
push
loop
ja
jge
mov
mov
imull
sar
inc
mov
pusha
pop
mov
bound
adc
adc
jge
mov
std
push
mov
std
sbb
or
mov
adc
mov
xor
arpl
mov
adc
sub
mov
shl
inc
sar
adc
mov
and
jecxz
cmpsw
int
ljmp
es
cmp
sub
lea
aad
mov
push
in
icebp
rolb
jmp
dec
sub
sti
adc
dec
mov
mov
fld
sub
push
sub
xor
xor
cmp
push
out
cmp
pop
jnp
jecxz
dec
cmp
aad
scas
lahf
adc
jp
fisubrl
in
and
orb
sub
inc
subb
in
xchg
lods
mov
lods
push
mov
lods
test
or
push
notl
xchg
mov
popf
xchg
mov
push
iret
pop
sti
dec
mov
outsl
mov
xchg
fmul
cmp
or
arpl
int3
int3
mov
and
dec
xchg
cmp
jg
test
cltd
vminpd
add
or
insl
ret
in
ds
lds
add
push
lret
and
cli
jmp
lods
ss
arpl
inc
push
sub
daa
inc
dec
imul
arpl
test
sub
jbe
insl
add
out
cwtl
dec
adcl
test
dec
sub
lods
sbbb
jmp
push
lods
sbb
es
scas
lret
cmp
cmp
lods
push
jbe
cmpsl
mov
mov
mov
hlt
mov
clc
or
or
push
notb
outsl
pop
je
sub
xor
push
popa
mov
sub
aam
leave
lret
mov
testb
fwait
or
xor
inc
test
adc
repz
sahf
dec
push
test
adc
add
cmp
mov
mulb
jb
int
jae
xchg
dec
xorb
mov
xorb
outsb
int
push
js
sahf
mov
sub
ja
in
imul
adc
mov
enter
xor
jo
stc
xor
popa
dec
pusha
repz
push
inc
shr
mov
ret
scas
xor
int
fdivs
cli
xchg
mov
lods
pop
adc
fwait
adc
xchg
fwait
or
ja
loop
sbb
lahf
jb
fidivrs
test
fdivs
in
ljmp
push
jle
mov
jle
mov
adc
test
xchg
fisubrs
push
xchg
fscale
nop
cmc
mov
push
sub
fisttpl
dec
lods
dec
adc
daa
xchg
xchg
dec
sbb
adc
fwait
das
lahf
xorb
roll
ljmp
push
jp
mov
push
ret
mov
cmp
test
lds
gs
sub
sbb
ret
fnstenv
inc
cwtl
hlt
xor
enter
lds
cmpsl
cmp
pop
mov
push
cmpsl
pop
out
aaa
movsb
pop
bound
loopne
or
mov
add
lcall
jge
movsl
xor
repnz
xchg
sbb
and
fwait
leave
jmp
mov
jbe
mov
add
adc
mov
mov
out
xchg
and
out
jnp
mov
inc
xor
xchg
test
leave
push
fdivl
add
dec
xor
cs
and
rcrb
add
xor
test
sub
out
scas
mov
lahf
fnstsw
push
mov
add
jge
fcompl
aaa
daa
xchg
xchg
repnz
sbb
cmp
icebp
xor
mov
pop
push
dec
push
pop
push
mov
mov
xor
mov
nopl
sub
addr16
inc
clc
std
dec
xchg
fadd
xchg
and
pop
sti
jmp
fadds
pop
mov
sub
xchg
mov
bound
mov
jge
lds
push
xchg
push
lcall
out
iret
dec
inc
call
and
mov
pop
sbb
repz
adc
fisttpl
push
sub
sahf
test
sahf
dec
mov
leave
xor
pop
ds
notl
mov
xor
sub
loopne
inc
mov
xor
inc
jb
and
sub
or
jno
lea
jle
adc
cs
iret
xchg
push
rclb
popa
dec
push
jae
imul
lret
mov
mov
std
arpl
sbb
add
xor
and
mov
out
push
add
ret
arpl
jbe
out
icebp
mov
or
mov
clc
int
stc
xchg
fs
push
imul
jbe
xchg
inc
dec
lahf
jnp
cmpsb
sub
lea
mov
mov
push
hlt
xor
inc
mov
sub
std
push
imul
mov
clc
cmpsb
js
hlt
adc
jmp
in
xchg
mov
pop
jno
push
adc
repz
and
jge
dec
pop
push
dec
lock
dec
inc
inc
inc
sbb
test
jp
cmpsb
mov
cmp
push
mov
adc
pushf
mov
loopne
sahf
mov
sti
or
xchg
cmp
mov
in
icebp
adc
lock
lods
jg
shl
pop
dec
in
jge
adc
cmp
fadd
ss
add
mov
sbb
leave
shll
ret
mov
sub
mov
add
repz
push
ljmp
repnz
cmp
scas
and
and
pop
or
jb
rcrb
or
fidivl
xchg
fcomps
mov
xor
lcall
jbe
jl
call
imul
sbb
addr16
sub
xchg
fbstp
cwtl
jo
test
xchg
ds
in
sbb
ds
and
loopne
ds
jl
and
adc
inc
mov
inc
cmc
sub
enter
js
dec
dec
push
popa
mov
sbb
dec
std
mov
cmp
pusha
sbb
cmp
cwtl
push
fmull
pushf
xchg
xor
dec
das
add
fmul
dec
mov
jne
sahf
jo
or
and
adc
inc
jbe
cld
inc
aad
mov
jecxz
xor
sbb
sub
and
dec
mov
stos
insl
pop
mov
or
pushf
adc
fidivs
leave
stos
cld
cmp
sub
inc
sbb
push
and
xchg
into
je
lret
mov
roll
xor
push
add
negb
mov
mov
jae
push
and
ret
or
movsb
sbb
adc
popa
mov
js
shll
add
in
dec
enter
lds
xchg
outsl
mov
in
mov
mov
hlt
aad
push
outsl
lcall
jo
lods
shrb
jp
test
push
push
push
pop
mov
loope
mov
jle
jbe
xorb
pop
int3
lret
sbb
arpl
out
and
push
mov
mov
sti
jnp
dec
push
outsl
and
cmp
or
mov
or
mov
push
rcrl
xor
movsb
pop
cmp
jg
lock
ret
and
mov
stc
or
xchg
lret
ret
add
jo
repz
jecxz
cmp
int3
mov
sti
or
or
lock
jge
into
sbb
aad
fwait
das
fs
mov
mov
icebp
xchg
loope
outsl
les
or
sarl
jge
add
mov
add
push
inc
jbe
out
dec
loop
shl
sub
bound
sbb
push
and
cld
mov
insl
out
push
mov
int
pop
jbe
mov
adc
xor
js
aaa
or
sti
sbb
int
mov
test
lahf
mov
adc
adc
pop
mov
and
inc
es
lret
mov
pop
mov
dec
sahf
ljmp
ret
dec
loope
aaa
scas
inc
cmc
xor
mov
jae
stos
adc
pop
mov
and
imul
jbe
mov
mov
fcomip
imull
jl
rcrl
lret
pushf
cmp
pop
or
xchg
popa
inc
sti
fistps
xor
ljmp
adc
push
int3
fs
mov
je
jge
movsl
and
adc
aas
dec
test
out
jecxz
mov
push
dec
add
add
sar
jns
add
cwtl
dec
ret
out
jmp
cmpsb
or
cmp
rcrb
test
outsb
adcb
jne
dec
addl
jnp
mov
notb
ljmp
addr16
insl
adc
mov
test
push
in
rolb
cmp
call
sti
cmc
subb
sahf
cli
xchg
int3
mov
in
lea
inc
stc
mov
mov
lret
out
ret
xlat
push
mov
push
adc
fildll
jle
cmc
or
insl
dec
sbbl
xchg
sarl
adc
mov
jns
push
sbb
lcall
or
sti
xor
xor
cmp
dec
scas
int3
imul
mov
hlt
adc
adc
mov
clc
ret
xchg
fisubs
idivl
into
decl
loope
jecxz
inc
in
decl
nop
add
pop
testb
imul
loopne
push
imul
ret
jne
cli
xor
adc
inc
out
dec
and
xor
in
out
mov
cmp
ret
ljmp
cmp
push
xchg
mov
mov
jle
sahf
stc
in
in
push
pop
outsb
cmp
sub
xor
fcmovnb
lret
push
jae
sub
hlt
xor
jnp
ret
aam
lock
or
int3
adc
lret
in
hlt
xchg
shl
mov
outsl
les
sbbb
cwtl
ljmp
pop
fsubr
rcll
ja
adc
sti
sbb
jnp
push
idiv
ds
scas
push
jo
pop
ja
cmpsl
into
cmp
dec
ljmp
mov
jbe
repz
jle
pop
out
jl
mov
leave
iret
cli
aas
lods
sbb
insl
and
xchg
adcb
aam
cld
or
mov
and
loop
ret
dec
pop
aas
std
pop
mov
gs
add
ljmp
xchg
dec
shll
sub
daa
adc
test
push
mov
popw
mov
mov
ret
mov
loop
in
push
into
aas
jnp
and
mov
adc
bound
out
adc
add
push
adc
imul
dec
mov
mov
xor
fucomi
clc
mov
inc
or
pop
daa
push
push
imul
insb
mov
jns
mov
or
addr16
repnz
jecxz
mov
fnsave
nop
ss
mov
mov
rclb
decb
xchg
xor
sub
xorl
or
mov
adc
mov
and
cltd
add
arpl
mov
pop
jg
push
in
rcll
nop
push
stos
or
or
iret
cmp
or
sbb
mov
jl
mov
int
outsl
jl
xor
xor
xchg
adc
adc
popa
idivb
les
lret
ret
pop
iret
push
out
jmp
sub
sbb
cmp
loopne
das
mov
mov
jmp
out
std
call
inc
jmp
cltd
nop
mov
inc
sub
sbb
xchg
lods
mov
out
pop
cmp
insb
dec
push
jp
mov
pop
cmp
jmp
mov
pop
int
push
ret
jno
lret
fwait
pop
adc
mov
imul
addr16
testl
mov
push
sub
popa
in
lret
pop
and
adc
mov
or
xor
test
out
adc
add
icebp
adc
jo
fwait
insl
stos
cli
and
xchg
imul
js
in
xor
push
sub
mov
xchg
dec
pop
test
pusha
jb
pop
xchg
je
cmp
icebp
dec
das
inc
ret
jne
jl
or
mov
cmp
clc
daa
lds
mov
repz
ret
mov
movsl
jnp
mov
push
jne
mov
out
dec
mov
cmp
lods
xchg
jle
or
loop
mov
mov
xor
lods
jno
shl
jmp
mov
jecxz
in
sbb
add
push
push
dec
popf
data16
mov
or
gs
cmp
jne
jne
mov
xchg
aad
push
rolb
mov
arpl
mov
out
cmc
dec
jmp
cmpsl
sahf
aas
sbb
jns
sub
mov
xor
lods
xchg
test
fwait
mov
xchg
jmp
dec
inc
mov
mov
icebp
in
lret
cmp
out
lock
jns
xor
scas
jp
add
fbld
xchg
loopne
or
sub
cmp
aaa
pop
pop
lret
jle
lods
mov
lcall
pop
xchg
dec
repz
jge
jmp
push
adc
loope
pop
or
negl
aaa
mov
imul
stc
mov
sbb
cwtl
outsb
dec
or
insl
lock
stos
mov
rcl
sub
sbb
enter
ss
push
popa
js
lods
add
or
pop
in
imul
out
cmpsl
mov
mov
mov
or
cmp
outsb
pop
inc
push
mov
or
mov
add
push
sti
ret
fstpl
cmc
xchg
xchg
roll
movsl
push
mov
fwait
and
aam
movsb
pop
sarl
add
pop
inc
cmp
push
icebp
bound
xchg
lcall
les
je
dec
mov
push
sub
sar
je
mov
and
add
outsl
sbb
pushl
cmp
dec
pop
cwtl
jb
hlt
push
es
mov
push
inc
mov
mov
std
sbb
and
fmuls
mov
mov
or
lret
xchg
loope
xor
arpl
dec
and
jo
mov
je
xchg
fidivl
cwtl
sub
cs
pop
push
daa
jg
arpl
cmp
pop
lock
xchg
adc
and
cmpsl
cmc
cltd
mov
fidivrl
lods
push
sti
sbb
add
push
adc
movsb
mov
or
or
jb
fsts
test
sub
jns
jbe
dec
sub
negb
testl
mov
add
mov
das
adc
pushf
mov
xchg
sbb
jmp
cmp
adc
mov
pop
adc
cmp
lret
dec
mov
sbb
enter
sub
loopne
and
add
std
iret
fistps
and
mov
mov
mov
gs
jmp
add
mov
jne
cld
xchg
loope
mov
dec
or
xor
pop
sub
mov
xchg
push
xor
adc
adc
call
fdivrl
out
jle
adc
test
subl
jbe
jmp
xchg
fwait
dec
sub
or
sarl
out
mov
cmp
sbb
sub
push
in
mov
jbe
sub
pop
sti
mov
nop
cmp
data16
mov
lret
jl
xor
cmc
test
loope
xchg
pop
adc
pop
lret
and
and
popa
cld
addb
out
ljmp
mov
push
sub
mov
fisubrs
rclb
mov
inc
stos
push
sbbl
scas
jnp
or
push
aad
sbb
popf
in
inc
mov
cmpsb
lea
mov
mov
jns
adc
mov
das
arpl
jnp,pt
loopne
pop
pushl
ret
dec
gs
test
fldl
jge
cwtl
movsl
je
mov
orb
fnsave
les
ljmp
sbb
cmp
dec
dec
or
xchg
mov
fsubs
aad
or
aaa
xlat
imulb
sbbb
imul
loopnew
pop
leave
cmp
dec
xchg
jle
mov
lock
clc
push
ja
nop
fwait
push
imul
mov
mov
das
ret
int
incl
dec
add
or
or
lret
cmpsl
dec
rcrl
fsub
jp
bound
jnp
dec
mov
jb
add
out
and
ret
dec
mov
add
push
push
sbb
adc
push
cmpsb
or
add
mov
pusha
push
inc
cmpb
lods
pop
or
lods
or
and
iret
dec
mov
shlb
sbb
jp
add
fcoml
mov
pushf
sbb
fwait
arpl
outsb
pop
jge
mov
imul
sbb
push
sti
and
xchg
loope
xchg
jb
pop
xchg
std
inc
int
lcall
jo
xor
and
sbb
push
aad
or
mov
popf
rolb
push
inc
call
into
lods
sub
add
sub
into
pushf
stos
jns
inc
push
mov
add
scas
mov
or
mov
divb
sub
int
or
pop
lahf
mov
sub
sub
mov
sub
push
imul
or
dec
and
push
cmpsb
inc
addr16
loop
iret
popf
sbb
or
shll
movsl
push
leave
ljmp
aaa
sbb
pop
cmc
fwait
int
or
sub
jo
mov
or
bound
dec
insl
repnz
add
xor
mov
insb
test
lcall
cmp
or
shld
add
adc
add
shrl
jbe
push
fdivrl
in
rol
daa
sbb
add
mov
mov
xchg
test
mov
xchg
push
js
lea
jns
sub
sub
mov
lock
in
pop
pop
aaa
and
shrl
jl
js
cmpsb
xor
and
sbb
add
mov
dec
inc
inc
lret
sub
xor
jnp
rcll
imul
jmp
mov
jno
ss
rorl
fiadds
fldl
mov
ljmp
push
adc
ljmp
movsb
mov
or
fstpl
jne
das
xor
aam
push
inc
movsl
arpl
icebp
imull
into
sub
les
or
and
add
inc
and
arpl
mov
dec
rol
andl
popf
add
addr16
movsl
inc
pop
movsl
mov
or
orb
movsl
cltd
out
out
push
adc
adc
fbld
bound
aam
icebp
or
sbb
or
pop
iret
aam
fsubr
mov
cmp
cmp
mov
cmp
imul
sarl
int3
push
mov
mov
mov
outsl
jne
mov
scas
cmp
cmpsb
lcallw
outsl
loope
add
sbb
dec
bound
nop
out
fidivl
inc
shr
repnz
bound
xchg
nop
sahf
jb
jno
movsl
out
push
mov
dec
popf
pop
and
mov
cmp
push
cs
sbb
sub
xor
and
xor
sub
adc
jnp
test
test
mov
addl
fisubrs
dec
sub
dec
lock
aaa
jmp
sub
cwtl
mov
mov
stos
xor
pushf
mov
inc
dec
in
pop
scas
and
repnz
lahf
sub
push
xchg
clc
enter
insl
loop
push
xchg
inc
imul
xchg
add
add
jp
mov
loop
mov
les
lahf
pusha
dec
imul
jae
imul
in
insl
jnp
pop
push
enter
in
mov
stc
cld
jno
and
pop
jae
xchg
enter
pop
pop
push
add
pop
pusha
xchg
stos
cmpsl
adc
bound
adc
and
jmp
add
mov
and
push
mov
mov
movb
pop
js
add
mov
xchg
xchg
mov
pop
cmpl
cmp
cmpb
sub
jns
adc
stos
mov
dec
lds
push
and
out
xchg
call
jmp
aaa
or
xor
ret
fldl
aam
mov
cmp
je
mov
mov
std
in
push
or
inc
add
int
cmc
mov
pop
hlt
or
ljmp
fs
mov
insl
push
or
cltd
ss
cmc
loope
xchg
arpl
leave
cltd
pop
shr
or
jecxz
xchg
sub
pushf
or
dec
push
lods
or
xchg
inc
pop
lods
sub
jbe
dec
jp
adc
add
hlt
cmpsl
inc
or
jle
and
lcall
dec
outsb
mov
pushl
das
int3
test
loopne
cld
int
fsubs
call
outsl
mov
jle
bound
icebp
mov
and
pop
adc
sbb
cmpl
dec
jns
mov
jle
addr16
notl
jp
cmp
daa
add
inc
cmpsl
test
lds
bound
mov
mov
jecxz
loopne
xor
or
cmp
or
inc
ret
enter
jns
ss
out
add
or
int
xlat
jns
sub
inc
in
or
or
adc
jns
push
shll
mov
push
mov
mov
pop
dec
pop
inc
sbb
in
push
cmpsl
mov
and
pavgw
lds
jmp
mov
or
into
outsl
fistps
dec
push
daa
jno
ret
and
jg
adc
ljmp
cmp
fsubs
adc
add
outsl
sbb
test
rcl
lcall
arpl
in
inc
flds
xor
pop
mov
addr16
ret
mov
sbb
mov
inc
stos
sahf
call
xchg
cli
cmp
ds
or
sub
mov
stos
mov
mov
mov
fists
in
stc
fsubrl
les
repz
lret
bound
sahf
mov
push
pusha
je
jns
in
int
push
sub
lret
and
clc
push
pop
nop
sub
mov
push
insl
mov
jmp
in
xchg
ljmp
out
scas
mov
or
fildll
xchg
fwait
push
jecxz
xor
mov
mov
jmp
rclb
fadds
xchg
xor
mov
add
scas
rol
sbb
std
int
pop
push
pusha
mov
pause
ret
ret
nop
mov
stos
xor
es
xchg
arpl
iret
inc
outsl
popa
mov
adc
xor
subl
add
push
mov
push
cmp
loope
sub
mov
mov
pop
testb
ds
stos
add
aam
lcall
in
das
mov
dec
jb
sbb
cmp
pop
bound
and
out
lods
jb
push
shrb
cmpsb
enter
and
pop
xchg
addr16
inc
bound
popa
fidivs
lock
sbb
lods
out
addr16
test
cmp
stos
mov
xchg
mov
ret
daa
jg
sarl
das
faddp
aad
fstpl
bnd
pop
lea
dec
aad
hlt
mov
pop
sub
imul
test
adcl
pop
dec
sti
sub
into
inc
sub
push
mov
cli
cs
sub
or
test
or
out
cld
add
xchg
push
xchg
xchg
data16
into
dec
lds
sub
pushf
sbb
lret
gs
ret
xchg
add
xorl
push
rorb
ja
adc
into
js
xor
push
mov
pushf
mov
lahf
stos
xchg
ret
arpl
xchg
sub
into
loop
cmp
faddl
out
and
xor
inc
xorb
xchg
in
repz
jbe
in
pop
das
xchg
cmpsb
ss
jne
sbb
mov
fwait
jo
sahf
int3
adc
cli
xchg
and
jg
fldcw
daa
adc
xor
add
faddl
movsb
fs
pop
fistl
cltd
xchg
and
xchg
dec
mov
sbb
adc
xchg
xchg
lcall
jnp
inc
add
push
jge
cmpb
ljmp
in
icebp
mov
cmp
bound
aas
mov
xchg
jns
mov
enter
outsb
lret
hlt
js
sub
mov
imul
mov
je
mov
sbb
lret
xchg
pusha
call
test
sbb
xchg
int
data16
inc
pusha
loopne
sub
jge
aad
sub
pop
repnz
aas
pop
inc
or
adc
jecxz,pt
push
sbb
adc
orb
mov
clc
and
std
xlat
lahf
mov
mov
push
dec
in
push
mov
es
les
mov
add
hlt
bound
mov
lahf
and
incl
std
sbb
stos
dec
test
jbe
jns
and
movsb
sub
rcr
xor
loopne
pop
and
adc
pusha
in
jge
adc
pusha
aam
call
js
leave
sbb
cmp
mov
lock
pop
mov
xor
push
mov
sbb
mov
aaa
pusha
loopne
pop
fnstsw
adc
lea
mov
jb
sbb
jne
xchg
leave
and
jmp
shll
jno
sub
jae
ret
sbb
sbb
sbb
or
push
icebp
lcall
sbb
or
mov
bound
add
mov
test
jl
dec
xor
sbb
out
pop
int3
rclb
stos
shr
adc
movsb
lcall
xchg
loope
xor
xlat
inc
ss
mov
adc
add
mov
jmp
push
mov
sbb
sbb
or
dec
and
clc
out
xor
test
add
ljmp
repnz
push
sub
add
xor
sub
or
insb
shlb
pop
mov
xchg
leave
cmpb
aam
mov
mov
out
into
ss
jnp
clc
movsw
je
cmp
imul
adc
daa
out
lods
dec
push
mov
fs
xor
sub
inc
mov
inc
movb
pop
ficompl
pop
sbb
add
pop
lcall
movsl
pusha
aam
sub
cmp
mov
ja
sarl
push
fldl2e
dec
adc
jb
xchg
adc
push
dec
ficoms
and
fidivrl
in
xor
adc
pop
jl
mov
mov
dec
jb
jge
mov
sbb
push
lret
iret
pop
add
imul
add
mov
shl
mov
push
push
mov
pop
jl,pn
pop
add
test
js
loop
mov
ficompl
shlb
xchg
divl
int3
pop
mov
je
das
pop
daa
add
mov
mov
pop
int3
cmpsl
int
arpl
or
xchg
sbb
jg
pop
repnz
xor
test
cmp
fs
xor
scas
es
jnp
fisttps
por
in
pop
xor
add
sbb
or
ds
sub
les
ret
fists
pop
fldl
ret
sbb
aaa
mov
cwtl
mov
sbb
lret
inc
ret
dec
jns
push
sub
daa
mov
shr
pop
arpl
jae
bnd
xor
lock
mov
hlt
pusha
shl
inc
dec
lcall
mov
xor
sub
ret
pushf
popf
sbb
push
add
rcrb
xchg
aaa
int3
cmp
pusha
and
sbb
stos
addl
pop
adc
cmp
jb
xor
mov
mov
ja
inc
mov
xor
jle
leave
sbb
mov
arpl
decb
dec
push
outsl
aas
adc
loopne
push
xchg
hlt
inc
mov
mov
mov
dec
mov
sahf
inc
sub
outsb
movsb
int3
mov
pop
or
add
mov
cmp
movsb
push
jae
popl
xor
insl
das
call
dec
in
mov
lret
lods
jecxz
es
scas
ja
adc
sub
sbbb
outsb
mov
outsb
mov
dec
add
inc
movsl
movsl
fstps
fldl
add
push
in
lret
sahf
fiaddl
xor
mov
cld
ss
jl
imul
inc
fistpl
pop
sub
or
xchg
adc
test
out
outsb
jecxz
stos
sbb
mov
fcmove
das
jg
mov
cmpsb
inc
push
lahf
loopne
stos
pop
fmuls
sarb
daa
adc
test
test
movsl
mov
dec
rcll
insb
cwtl
cmp
mov
push
xchg
jge
popf
js
cmp
jmp
fsts
into
lret
jl
xchg
dec
gs
je
mov
cmp
scas
and
lods
sub
xchg
push
out
out
lret
cmp
push
inc
aad
xchg
loop
adc
jge
movb
imul
mov
lret
cmovbe
jmp
daa
ret
dec
push
scas
ljmp
pop
lahf
dec
cltd
leave
pop
sub
dec
xchg
push
xchg
xor
les
insl
bound
clc
sub
std
mov
cmp
add
out
cmc
or
xor
pop
lcall
mov
js
cltd
loope
loope
pop
test
adc
fstps
inc
in
adc
fstp
and
arpl
push
jmp
test
flds
jno
into
xchg
sarl
add
aam
xchg
adc
pop
add
jle
repnz
loopne
sub
jns
add
adc
fcompl
cmp
test
push
notl
mov
dec
shlb
aad
push
pushf
mov
cmp
in
fidivrl
xchg
andl
mov
lret
pushf
inc
js
adc
dec
xchg
imul
pop
ds
jp
xor
xor
mov
lock
cli
outsb
jbe
dec
cmp
xor
bound
pop
aam
in
test
sbb
adc
stc
fs
mov
or
lret
mov
idivb
mov
in
jns
pcmpeqb
cmpb
xchg
xchg
push
push
loop
pop
je
xchg
sti
xchg
add
and
push
test
and
xchg
dec
or
je
push
sbb
aaa
lret
push
aas
and
push
jg
fstpl
jbe
cmp
cwtl
out
lret
xchg
and
push
test
add
xchg
or
xchg
mov
add
sub
mov
mov
mov
loopne
fistpll
pusha
ret
hlt
lret
xchg
sbb
outsb
push
mov
jns
jnp
mov
ret
call
adc
xor
lahf
cli
xchg
fmuls
cmp
push
xchg
icebp
or
push
nop
cli
test
inc
add
mov
stos
jg
es
cld
incb
inc
dec
scas
lret
dec
mov
call
or
pop
or
mov
sarl
aad
inc
out
cld
adc
adc
xor
ror
es
jb
jae
adc
ds
js
push
rorb
xchg
cmp
mov
jb
lret
aad
enter
xor
inc
aas
jmp
or
insb
push
jge
xor
ja
sbb
xchg
jb
neg
mov
rcrl
and
xchg
pmaxub
mov
xor
lcall
imul
inc
push
or
sbb
push
fidivl
xor
and
lods
lods
es
mov
mov
push
lea
jl
adc
xor
sub
roll
int3
dec
xor
pop
cmp
orb
nop
repz
dec
xchg
or
xchg
shrb
fs
popa
shlb
inc
nop
xor
fcomp
test
mov
push
imul
dec
int3
lods
scas
and
sbb
mov
pop
lea
mov
push
pusha
rolb
mov
jae
rolb
add
test
sbb
subl
ja
dec
mov
xchg
xchg
push
jge
pop
scas
inc
jno
lea
xor
movsl
arpl
aam
add
outsl
mov
pop
cmpsl
nop
mov
outsb
xor
decl
into
data16
fstpl
jb
xlat
test
out
mov
inc
sahf
lret
xchg
xchg
mov
adc
das
cwtl
inc
shll
pop
mov
push
dec
mov
inc
scas
sahf
inc
std
das
mov
push
mov
negb
ljmp
and
adc
call
add
dec
cmpsb
pusha
div
call
loopne
mov
xchg
push
std
xchg
and
sub
sbb
and
bound
cmpsl
fsubrl
xchg
int3
aaa
jne
or
xchg
xchg
sub
push
jo
nop
flds
lods
stos
adc
mov
daa
ds
xor
ss
pushf
dec
xchg
jmp
push
dec
xor
sbb
lea
bound
xchg
mov
push
dec
xor
and
inc
sub
push
sbb
cmp
adc
mov
cmp
sarb
repz
jecxz
fmuls
mov
mov
and
shrb
test
xor
stc
cmp
mov
xchg
cmp
xchg
jge
decb
push
ds
jp
rorb
add
scas
out
and
mov
fs
xchg
test
xor
cmp
frstor
push
jge
and
jg
shr
pop
or
sub
sbb
je
in
ds
or
inc
pop
lods
adc
and
enter
inc
pop
pop
dec
xchg
sub
addr16
sbb
sbb
test
dec
sub
repz
scas
inc
leave
imul
gs
aaa
or
lret
mov
pop
sub
mov
mov
sbb
and
andl
and
lods
loopne
stc
cmp
mov
lods
pop
jbe
mov
sbb
xchg
ljmp
add
repz
iret
push
call
fdivrl
test
jb
adcl
sahf
das
nop
inc
cmp
pushf
pop
lret
mov
add
mov
loopne
xor
nop
fmuls
sti
and
icebp
or
hlt
xor
xchg
ficoml
enter
aaa
shrl
stc
jmp
jae
xor
inc
jl
lds
icebp
xlat
lcall
add
ja
out
in
inc
xchg
mov
test
xchg
lods
xchg
rolb
xchg
dec
cmc
dec
cmpsl
mov
pop
iret
dec
ficoms
adc
sub
repz
xorl
push
push
std
jns
inc
lds
lret
adc
sub
lret
lcall
xor
push
mov
insl
int
fisttpl
mov
xor
pop
sub
mov
cmp
or
shlb
and
xchg
les
xchg
rolb
notl
mov
jmp
pop
dec
or
hlt
out
pop
imul
je
addl
shrl
xchg
push
aas
std
and
clc
xor
pop
adc
pop
fisubs
lret
out
out
cmc
mov
fsubs
cmp
sbb
nop
jo
outsb
jno
lahf
fldcw
adc
sub
cmpsl
jno
lea
xchg
popa
std
dec
pop
jne
das
add
pop
or
daa
and
leave
cltd
popa
sub
lahf
mov
xchg
push
dec
outsb
xor
xlat
int3
hlt
enter
jnp
fsubs
push
cmc
ficoml
pop
lret
jo
xor
ss
loope
fcoml
icebp
xchg
adc
and
in
ljmp
fnstcw
xor
test
dec
push
xchg
push
pop
stc
arpl
adc
call
pop
pop
mov
bound
mov
adc
mov
mov
mov
inc
mov
inc
pop
je
pop
mov
sbb
stos
inc
out
or
scas
push
or
xor
or
fsubrl
mov
roll
sub
xor
lret
ja
clc
pop
lcall
cmc
repnz
or
dec
insl
loop
add
push
push
xor
sub
pop
add
fsubp
shrb
mov
int
sbb
jb
ja
sbb
jbe
call
ficoms
mov
inc
popa
jmp
adc
cwtl
das
push
mov
pop
mov
out
xchg
jecxz
stos
nop
mov
mov
push
mov
sti
repz
mov
jl
or
xchg
xor
popa
cltd
push
cwtl
das
into
in
pop
push
xor
xchg
cmpsl
adc
mov
clc
ljmp
and
shl
mov
or
dec
xchg
subb
into
fwait
cwtl
jle
or
or
sbb
jo
xor
adc
jge
sub
mov
xor
mov
xchg
xor
gs
mov
pushf
xchg
in
mov
das
gs
jno
mov
ja
push
ud1
push
sbb
test
pop
jl
sub
mov
adc
vcvttps2dq
dec
pop
or
loope
loope
rorb
sub
sub
ljmp
out
mov
sub
sbb
mov
gs
sbb
pmuludq
mov
cmpsl
mov
mov
sarl
mov
add
mov
adc
mov
iret
dec
sahf
cmp
addl
sub
sub
mov
lods
mov
pop
pop
sti
cmpl
and
in
push
mov
jae
lcall
mov
xor
cld
jp
adcb
xorb
push
sub
jle
insl
xor
lret
or
pop
or
je
in
cmc
push
lret
or
pop
data16
incb
lcall
or
daa
or
pop
add
fldenv
xchg
mov
sbb
xor
mov
into
aad
xorb
inc
sti
dec
pop
lock
pop
xchg
and
add
in
repnz
ret
sahf
pop
orl
jle
mov
push
sub
and
dec
push
lret
dec
mov
cli
xor
cmp
addb
xor
pusha
pop
rorb
inc
aam
mov
notb
cmc
push
movsl
mov
jmp
adc
test
aaa
xchg
cmc
pop
lods
sub
sub
sbb
rcrl
sub
jo
jge
push
and
sbb
sub
fdivrl
xlat
aam
aaa
test
fildl
xchg
out
loop
or
xor
das
and
pop
nop
bound
mov
jno,pn
and
jne
pop
add
pop
mov
pop
fistpl
outsl
push
insl
jmp
mov
movsl
shll
mov
mov
daa
lock
in
lea
lock
pusha
shll
je
push
cmc
cld
add
jae
in
mov
sbb
xchg
jmp
addl
and
and
push
rcrb
adcb
pop
push
lods
sub
les
imull
cmp
push
cmp
add
adc
popf
inc
mov
fucom
test
popa
mov
add
add
div
rcr
jbe
outsl
in
orl
xor
push
add
ss
or
or
mov
ret
sub
aas
cvtps2pd
dec
test
popf
pop
cli
adc
and
add
js
js
test
daa
pop
sbb
dec
jg
fwait
dec
dec
mov
lea
icebp
test
pop
and
dec
sub
sub
push
fsts
imul
push
mov
data16
je
dec
pop
and
mov
jp
sbb
inc
insb
mov
push
lods
rcrb
jg
fcmovnu
or
inc
scas
xor
xchg
xchg
inc
lret
and
leave
loope
jl
jle
fistpll
popa
dec
add
fdivp
cmpl
mov
xchg
outsb
in
iret
into
mov
fimull
jle
int3
xchg
push
icebp
fldt
hlt
cmp
adc
and
inc
sub
dec
adcl
ret
sbbb
lea
outsl
pop
xchg
sub
cmp
cmp
aaa
pop
xor
and
stos
scas
nop
ja
dec
inc
xlat
pop
and
ffree
out
mov
and
sbb
sbb
sbb
xor
dec
push
xchg
xchg
ds
mov
mov
movsb
adc
mov
push
fsubr
push
jnp
add
jno
sub
insl
xchg
dec
mov
movsl
sbb
dec
or
sti
stos
incl
imul
mov
aam
push
mov
fcmove
lcall
push
inc
sbb
ljmp
fildl
adc
pop
sub
inc
movsl
nop
or
std
call
dec
popf
les
mov
testl
push
repnz
cmp
xlat
dec
push
xor
cmp
test
sahf
movsl
adc
aam
cmpsl
and
je
inc
enter
mov
xchg
and
push
sub
mov
in
add
out
xchg
push
imul
outsl
enter
scas
or
mov
mov
aad
mov
test
cmp
pop
stc
mov
fisttpl
imulb
aaa
xor
cli
push
arpl
mov
ds
sar
cmp
lcall
mov
jmp
push
outsl
ret
sub
lea
mov
das
enter
jg
js
mov
or
xor
cmc
scas
cwtl
into
lods
pop
lcall
gs
xchg
test
and
test
jl
fisubs
or
aad
out
sub
mov
jne
sub
pop
movsl
test
jne
jno
fildl
in
aam
int3
push
int
cld
xchg
pop
xchg
stc
add
cld
lahf
es
cwtl
ljmp
fsubs
leave
andl
and
push
sbb
repz
test
jge
loopne
aas
mov
ja
pop
mov
in
popf
hlt
push
mov
sbb
add
mov
call
mov
imul
xchg
shll
mov
add
adc
mov
popa
cmpsb
xchg
cs
lock
dec
out
repz
push
mov
and
mov
push
sub
push
mov
dec
mov
shrb
jl
jae
xchg
mov
and
data16
dec
push
lret
pop
or
lcall
sub
arpl
stos
ftst
cwtl
gs
push
jb
out
stos
xchg
xor
cmpsl
push
mov
jno
or
lock
sti
sub
inc
push
cmp
xlat
inc
loope
dec
mov
or
sbb
movsl
imul
ds
fimuls
dec
daa
xor
adc
mov
and
scas
sbb
jae
sbb
pop
dec
repz
cltd
lcall
pop
cmpsb
cmp
or
sbb
jp
dec
cmpsl
fcmove
aaa
mov
xor
sbb
sbb
mov
imul
cmp
aad
js
lret
movsl
scas
adc
push
clc
mov
sbb
jne
or
adc
push
mov
cmp
pop
insb
loop
sub
addr16
mov
mov
xchg
push
mov
out
movsb
loope
mov
loopne
mov
fwait
dec
push
dec
je
sbb
out
and
fidivs
nop
ja
push
and
sti
sbb
js
dec
cmp
sub
sub
xor
cltd
mov
cmp
aas
push
and
sbb
or
data16
cmp
in
sbb
inc
sub
hlt
jb
xchg
push
push
jno
shrl
sub
out
or
mov
add
mov
and
or
xor
and
in
rcrb
aam
jbe
out
lcall
xor
arpl
mov
daa
sub
adc
jle
sub
jl
adc
rol
pop
sarb
add
push
xchg
fs
xchg
jno
popa
int3
dec
outsb
cmpsl
sub
push
iret
xor
ja
xlat
or
arpl
sub
dec
mov
aad
xchg
add
movsl
lds
cmp
lret
std
mov
stc
jo
xchg
mov
popa
sub
stos
clc
imull
insl
arpl
clc
or
loop
and
sbb
and
xchg
test
push
push
pop
mov
pop
mov
jno
xchg
mov
inc
dec
clc
pop
sub
inc
sub
scas
loop
scas
movhps
shrl
sub
pop
pop
dec
enter
in
cmc
cmpsl
decb
inc
xchg
xor
pop
jbe
mov
int3
arpl
mov
outsl
mov
xchg
push
int3
mov
inc
xchg
out
mov
scas
sub
pop
loope
sub
xchg
repnz
xor
mov
mov
int
fcmovu
add
scas
push
sbb
xchg
sbb
inc
out
dec
jb
test
pop
loop
cmp
ljmp
sbb
jg
lods
test
sbb
cmp
iret
aaa
out
movsb
push
js
rcrb
jmp
xchg
cmp
stc
inc
test
loope
jnp
fildll
push
cli
adc
inc
push
std
xchg
ljmp
aas
adc
addr16
fisubl
and
fidivl
pop
jne
mov
cwtl
xor
and
stos
jo
les
das
inc
dec
mov
mov
and
std
clc
rcl
fs
push
and
call
movsl
out
mov
pop
out
lret
rol
nop
adc
sbb
cwtl
lret
fiaddl
in
lret
sbb
push
daa
iret
and
inc
pushf
add
sub
cmc
bound
mov
cmp
jae
scas
imul
mov
loopne
fmuls
out
add
fstpl
dec
or
jns
mov
test
sbb
lds
push
cmp
dec
bound
sbb
mov
jbe
shlb
add
into
dec
mov
xor
mov
lods
subb
or
sub
jne
popa
inc
inc
leave
sub
outsl
iret
fidivrl
je
enter
mov
sub
lret
pop
jnp
loop
xchg
mov
popa
inc
ret
scas
sub
pop
or
outsb
xchg
or
dec
nop
lcall
int
clc
das
pop
mov
aas
stos
mov
in
push
mov
jmp
wrmsr
dec
sbb
jecxz
mov
leave
pop
and
cmpsl
cltd
adc
mov
and
mov
popf
sbb
jbe
dec
xor
lock
lret
push
push
sbb
pushf
cmp
jae
push
push
mov
dec
aad
jae
inc
hlt
xor
fwait
push
cmp
jns
inc
xor
stos
mov
xchg
or
iret
les
fisubrl
fwait
int3
scas
xchg
pop
or
sbb
mov
jg
sti
sub
dec
pop
cmc
or
ja
ds
jg
jmp
sub
lods
aam
fs
mov
or
clc
cmc
xlat
and
shlb
or
shr
inc
cld
push
adc
inc
pushf
in
mov
inc
lock
movsl
ficomps
mov
lds
jne
movsl
loope
and
in
jbe
fsubrs
popf
fadds
mov
xor
sar
fmuls
call
inc
add
arpl
imull
cli
je
cmp
sub
repnz
push
sti
movntq
imul
repnz
and
loope
pop
loop
iret
sub
push
inc
outsb
or
into
or
dec
jbe
jg
popf
cmp
cmc
leave
mov
cmp
repnz
inc
adc
xor
mov
mov
xor
daa
popl
push
sbb
out
shlb
cmc
or
outsb
xchg
insl
jnp
cmp
repnz
xor
dec
inc
dec
xchg
xchg
enter
insb
imull
cmpsl
fisubrs
inc
add
daa
adc
sub
adc
idiv
push
dec
xchg
in
push
xor
dec
lret
pop
add
sti
ficoml
call
mov
sub
xchg
xlat
mov
loopne
imul
xor
inc
pusha
daa
cmp
into
mov
repz
push
adc
clc
call
dec
mov
mov
sbb
mov
fsubs
or
into
popf
addr16
mov
pop
shrl
and
push
addl
loope
or
aam
mov
test
sub
mov
sbb
outsl
mov
js
dec
mov
mov
xlat
loopw
lock
jno
push
dec
icebp
jle
fs
cs
daa
mov
jl,pt
shlb
notl
pop
pop
inc
dec
int3
sub
cltd
pushf
das
leave
mov
adcl
and
and
push
mov
push
test
cmpsl
arpl
push
pop
add
fdivs
pop
mov
cwtl
mov
jp
mov
mov
icebp
int3
stos
outsb
mov
outsl
xor
pushf
jge
stos
cwtl
aas
add
add
cmp
lret
jecxz
xchg
push
jbe
insb
pushf
rorb
stos
rorb
je
pop
xchg
rcrb
add
mov
jmp
stos
mov
push
jle
sub
push
insb
addb
in
pop
fisubrs
push
nop
sbb
add
mulb
adc
fnstcw
cld
jmp
imul
mov
push
icebp
aad
xchg
jae
shlb
repnz
pop
std
sub
out
jb
xchg
cld
icebp
xor
inc
sub
daa
xchg
int
jg
pop
lret
ljmp
adc
hlt
push
sbb
add
icebp
bnd
ja
std
insb
lods
jne
mov
orb
fwait
sarl
movsl
leave
rol
hlt
subb
dec
cld
xor
mov
lds
test
ss
jl
cmp
leave
arpl
das
sub
or
mov
pop
xchg
dec
fwait
stos
std
test
jecxz
or
dec
pop
adc
shl
divb
loop
aaa
adc
mov
and
add
inc
xor
es
pop
dec
out
sbb
lcall
sbb
pop
adc
xchg
scas
fisttpll
cmpsl
cmpsb
lods
nop
fildll
out
sub
scas
ror
or
sub
xchg
mov
inc
sub
jb
adc
and
arpl
loop
stos
dec
out
xor
pop
inc
mov
shlb
mov
or
jmp
call
adcl
daa
inc
mov
fld
inc
fisttpll
dec
jbe
rorb
adc
dec
cmp
movsl
movsl
arpl
lret
sub
sbb
sbb
jns
and
imul
sbb
fs
nop
lahf
push
and
nop
cli
sahf
stos
add
inc
push
xchg
lock
ret
lock
mov
cmc
je
lret
inc
xchg
or
inc
bnd
xchg
sbb
xchg
sti
popa
and
mov
sub
cwtl
jmp
cmp
jo
or
jb
mov
xchg
pop
push
xchg
push
push
dec
mov
xor
cmp
call
cmpsl
scas
mov
popf
loopne
int3
loope
stos
mov
pop
test
cltd
ljmp
imul
adc
in
jns
push
mov
cli
jb
and
mov
xor
data16
dec
in
xor
daa
inc
nop
mov
mov
adc
gs
ret
hlt
pminsw
in
loope
dec
clc
fwait
pop
insl
mov
dec
stos
outsl
lahf
test
sub
sahf
loope
addb
mov
arpl
in
mov
and
mov
push
mov
sub
out
insl
cmp
rcrb
inc
dec
cltd
sbb
out
popa
int3
std
mov
adc
sbb
push
in
or
fisttpll
jbe
add
mov
push
xchg
lret
push
xchg
pop
ds
xor
aaa
jg
push
dec
iret
or
es
aad
cmp
push
dec
adc
jo
hlt
pushf
sbb
push
push
fcom
sar
jo
fimuls
or
jno
sub
jae
jae
dec
push
pop
mov
movsb
loopne
and
adc
mov
and
dec
mov
jne
and
add
mov
cmpsb
inc
loopne
jmp
push
int3
jb
xchg
int
cmp
inc
sbb
push
in
fsubp
ret
pop
inc
fldt
call
push
shll
mov
mov
cmpsb
sbb
xor
cmp
lea
andb
cmp
loop
or
mov
shrb
sub
in
pushf
xchg
mov
xor
push
and
fwait
cmpsl
rcl
sbb
xchg
jecxz
imul
xchg
outsl
lock
mov
stos
rcrb
jns
inc
inc
sub
push
cltd
ljmp
scas
mov
add
or
and
jo
mov
mov
adc
sbb
mov
cmpsl
gs
movsl
pop
jns
lret
push
cmp
loopne
fstpt
inc
stc
aaa
jo
int3
and
and
fisubs
sbbl
jp
repnz
mov
or
mov
fsubrs
sbb
imul
xchg
dec
daa
negb
jnp
call
jae
mov
cmpb
outsl
fs
or
mov
lret
adc
jmp
pop
lock
into
jne
push
cmp
test
scas
mov
push
frndint
ja
mov
jb
mov
movsb
push
and
f2xm1
inc
xchg
insb
mov
adc
iret
dec
mov
ja
leave
pop
pop
into
lods
sti
leave
fcmovnu
mov
fcoml
push
sbb
inc
or
andb
sub
lret
fwait
nopl
cmp
xchg
out
mov
and
sbb
fs
cmp
inc
rcrl
addr16
adc
sbb
cwtl
mov
adc
lret
stos
hlt
idiv
pop
pushl
sbb
pop
push
daa
inc
xor
bts
shll
mov
mov
xor
cld
mov
scas
add
mov
popf
and
mov
or
xchg
jmp
cltd
out
dec
dec
and
stc
pop
iret
mov
aas
pop
popf
xor
out
aas
mov
push
push
or
incl
and
jg
inc
dec
xor
mulb
cmpsl
mov
cmp
mov
mov
popl
push
or
or
mov
dec
cmpb
jo
fstpt
jge
jl
and
cmpsb
dec
lods
data16
mov
lods
pusha
xor
aas
and
mov
sbb
xchg
or
popf
scas
fcmovnu
popa
jle
mov
int3
sbb
scas
add
in
mov
inc
in
ljmp
dec
sbb
movsb
cmc
and
mov
mov
ljmp
int
cmp
xor
sbb
pop
es
std
in
loopne
pushf
adc
push
or
fstp
int
lods
adc
inc
jge
sahf
xchg
xchg
cmp
sarl
or
lds
lods
pop
popf
movb
insl
xor
data16
inc
rcrb
popf
mov
ljmp
jne
xlat
hlt
push
sub
rorb
leave
fcmovnbe
xchg
push
fwait
mov
inc
fadd
fildll
mov
int3
dec
push
push
ss
and
mov
cmp
jb
sbb
pop
ss
inc
xchg
and
popl
xor
xor
aaa
jo
mov
jns
lahf
xchg
mov
in
push
fwait
inc
das
js
dec
sub
das
ret
popa
iret
lret
rcll
sahf
pop
xchg
pop
scas
and
xchg
ret
outsb
add
xchg
fdivrp
movsb
aam
inc
or
dec
aam
mov
cmp
std
rcrb
and
jp
test
pop
inc
mov
pusha
jl
adc
jo
arpl
pop
ret
push
sbb
add
add
pop
and
push
repnz
push
imul
mov
push
sbb
adc
or
je
fidivrs
xchg
pop
xchg
daa
cmp
xor
js
sub
fsubs
popa
push
in
xchg
jnp
push
jns
loop
std
aad
in
xchg
lcall
lods
xor
pop
mov
add
int
pop
and
cmp
imul
in
cmp
jae
jo
hlt
jl
test
repz
dec
nop
push
xchg
testl
loopne
push
or
je
clc
inc
testb
rcr
xor
push
scas
test
loop
into
mov
mov
xchg
jecxz
xchg
shrl
enter
mov
popf
cwtl
mov
mov
enter
js
sbb
lcall
jb
mov
pop
sub
or
lods
sbb
or
mov
and
and
mov
aad
xor
adc
clc
xchg
inc
mov
mov
aad
adc
movsb
add
movsb
test
mov
outsl
xchg
and
test
inc
repz
adc
cli
add
sbb
push
rcr
mov
pop
hlt
insb
mov
mov
imul
rclb
xchg
push
jo
jmp
sbb
xor
sbb
bound
test
aaa
xchg
ljmp
icebp
xchg
sbb
ljmp
pop
loop
mov
pop
cmpsb
addr16
jge
cmp
or
dec
xor
lret
add
sahf
out
idivl
inc
dec
xchg
pop
adc
xchg
inc
or
rcll
push
addb
sbb
out
xchg
pop
xor
sub
cmp
out
in
mov
sarb
xchg
add
push
push
shlb
push
imul
sbb
lahf
jmp
scas
mov
sub
out
xor
cmpsl
push
mov
popa
in
mov
push
pop
mov
push
xor
insl
adc
test
outsb
dec
addr16
mov
pop
push
loope
jbe
xchg
inc
xchg
out
aam
cmp
add
add
adc
cmp
xor
xchg
mov
pushf
push
sub
dec
add
ljmp
xor
inc
pop
xchg
or
lea
rol
cmp
les
fnstcw
leave
sbb
dec
aad
fdivl
inc
push
repnz
fsubl
fnstsw
mul
enter
mov
pop
or
mov
dec
mov
dec
aam
xchg
add
int3
ret
lds
mov
dec
sub
shl
stos
and
cwtl
sub
fisubl
push
dec
cld
jno
insl
mov
xchg
repz
mov
ficomps
sub
hlt
mov
push
add
aad
push
ja
xchg
sbb
pop
push
fistpll
frstor
inc
fdivrs
or
fxch
adc
add
inc
xchg
jnp
xorl
xor
lret
mov
ret
sub
sbb
ja
jae
test
pop
push
mov
data16
insl
shrb
and
xchg
daa
pop
nop
movsl
cmp
sub
sub
fdivs
mov
xchg
outsb
roll
sti
iret
jne
int3
jb
orl
xchg
lea
and
mov
jmp
lods
xor
adc
loope
sbb
cltd
bswap
faddp
fsubp
lret
jge
sbb
pop
mov
jecxz
push
lea
inc
dec
mov
add
nop
dec
repz
xchg
and
or
mov
clc
xchg
cltd
adc
inc
out
pop
mov
push
jl
mov
daa
or
xor
pop
push
pop
shrb
fadds
push
xor
jecxz
mov
and
testl
movl
int3
rclb
cmpsl
insb
and
mov
into
cmp
aas
aad
sub
jb
dec
rcrw
jno
jecxz
adc
bound
insb
push
sbb
xchg
fidivl
enter
or
jmp
and
dec
leave
cltd
jbe
test
js
add
xchg
sbb
mov
ret
mov
xchg
xor
xor
cld
iret
and
ja
mull
mov
or
add
loope
push
or
repnz
popf
lea
fisubs
out
adc
mov
mov
std
jns
in
ljmp
movsl
insl
xchg
add
jo
mov
and
and
mov
push
nop
xchg
arpl
pop
or
add
ljmp
shrl
push
addr16
movsb
sbb
xchg
cmp
dec
repz
jmp
pop
loope
push
push
dec
and
xor
sbb
int3
mov
jmp
icebp
adc
ljmp
mov
mov
ret
dec
daa
jmp
push
insl
xorl
into
insl
psrad
adc
sbb
rcl
adc
int3
or
xchg
mov
fiadds
jle
adc
int
pop
push
cmc
fbld
mov
push
ja
sbb
push
and
imul
dec
jno
clc
adc
cmpsb
add
push
xchg
imul
std
jmp
jae
decl
jle
push
ljmp
xchg
sbb
dec
cld
std
inc
fstps
xor
dec
sbb
xchg
sub
mov
outsl
hlt
inc
stos
push
fs
movsl
jns
push
lea
pop
bound
mov
pop
cmc
dec
das
push
lret
in
and
cmp
mov
jo
shrl
mov
inc
fwait
mov
pop
ja
and
in
test
mov
push
pop
push
jns
mov
enter
mov
adc
ja
fsubrl
sbb
and
loopne
mov
and
or
xor
cmpsb
jmp
fs
mov
adc
jmp
aam
xchg
test
sub
jns
cld
mov
adc
mov
pusha
jg
mov
test
stos
jg
inc
pop
nop
sbb
jae
inc
out
sbb
ljmp
shll
add
dec
lds
popf
push
loop
int3
mov
lea
mov
cli
js
and
mov
pop
cmc
not
call
repz
xor
mov
rcll
gs
adc
das
mov
pop
dec
popf
adc
or
sub
out
insl
pop
clc
mov
lods
pusha
call
inc
mov
js
mov
leave
call
xchg
pop
mov
fstpl
adc
inc
xchg
mov
sbb
pop
pop
sarb
fsub
or
in
mov
loopne
mov
jg
dec
jle
adc
out
pop
mov
test
push
stc
insl
loope
cmpsb
loope
push
cmp
stos
bound
addl
mov
cmp
into
in
xor
and
movsb
jmp
xchg
outsl
cmc
in
mov
scas
nop
mov
das
lret
inc
pop
push
cltd
jns
mov
sarb
xchg
cld
das
add
mov
aad
xchg
inc
sbb
sahf
lds
lahf
cmpsb
xor
mov
andl
lcall
push
mov
in
ja
sbb
xchg
mov
mov
sbbl
or
lea
fisubrl
popa
cmp
xchg
jnp
repz
nop
pop
inc
mov
out
mov
insl
jl
xchg
test
lret
jp
pushf
loopne
mov
add
cmc
xor
push
mov
lret
sbb
popa
cmp
mov
mov
xlat
cs
push
xor
stc
sbb
in
push
mov
jnp
jp,pt
mov
sub
pusha
std
add
pop
aad
mov
ret
jp
and
sbb
inc
sub
sar
cmp
pop
push
lahf
jns
sbb
rcrl
mov
xchg
stc
or
xchg
cwtl
pop
add
movsl
mov
xchg
mov
cmp
xchg
pop
cltd
lods
jno
or
cmp
mov
aam
or
test
mov
mov
int
adc
es
pop
fcomp
pop
dec
mov
push
add
mov
cmp
aaa
and
hlt
add
lea
repz
rolb
or
inc
mov
stc
popf
ds
add
fmulp
shll
test
cmp
stos
out
xchg
sub
xor
dec
jo
lods
into
jge
call
xor
xchg
dec
sub
js
stc
dec
push
out
mov
dec
bound
sti
push
sbb
sbb
mov
cwtl
int
dec
mov
push
bound
and
mov
mov
frstor
jmp
popa
subl
int
mov
and
push
dec
mov
push
and
adc
pop
fsubl
fdivrl
pop
xor
mov
mov
cmp
xchg
cmp
mov
xchg
mov
and
daa
mov
mov
leave
fcompl
dec
pop
cmp
xor
push
lret
lock
ja
cmc
cmp
outsl
push
adc
adc
aaa
xlat
jle
sarb
or
jmp
or
ds
insb
mov
imul
ja
jle
xchg
cmpsl
xchg
mov
dec
dec
es
xor
mov
adc
enter
cmpsl
ds
jg
pusha
pusha
lcall
add
int3
in
pop
gs
int3
insl
add
orb
and
sub
popf
mov
sti
dec
scas
mov
mov
sbb
ficompl
je
out
iret
in
or
inc
loopne
fdivr
notl
mov
dec
popl
call
mov
test
ret
out
inc
mov
cmc
clc
xchg
xchg
fdivl
sahf
flds
jl
adc
xor
push
pop
cmpsl
rorl
mov
in
or
pop
ljmp
aam
mov
data16
insb
stc
push
cmpsb
insb
pop
adcl
inc
sub
push
repz
lcall
clc
or
push
pop
mov
dec
cmp
mov
add
popf
out
mov
mov
adcb
xlat
icebp
enter
fisttpll
stos
je
ret
cmp
pusha
stos
xchg
cltd
and
mov
fdivr
stos
cmp
inc
push
in
cld
cmp
xchg
subl
clc
dec
mov
jmp
pop
imul
enter
or
inc
jmp
sbb
jecxz
mov
mov
sarb
cwtl
jnp
inc
jbe
pusha
sti
push
movsb
dec
cmp
mov
or
add
sbb
nop
inc
fistpl
pushf
dec
sti
mov
dec
jl
lcall
lock
fs
mov
xor
mov
sbb
mov
in
scas
push
pop
scas
iret
pop
push
in
inc
push
and
xchg
inc
iret
sar
and
clc
xchg
aas
sbb
cltd
mov
and
insb
pop
fcompl
jle
mov
aas
icebp
push
or
subb
xor
mov
ljmp
popf
push
aam
pop
pop
adc
roll
sbb
jge
aam
loop
test
mov
ss
lahf
sbb
xchg
repz
xlat
testb
stc
fisubrl
jo
lret
test
mov
fisubrs
int3
aaa
repz
inc
arpl
xor
enter
cmp
pop
dec
jle
push
jne
imul
jge
repz
sti
pop
mov
push
add
test
addps
cmp
dec
mull
inc
or
sbbb
or
popf
push
repz
dec
jecxz,pt
jb
fidivl
push
pop
mov
stos
insl
cmpl
pop
aam
sub
lea
or
in
xchg
mov
pop
mov
shlb
sub
cld
in
test
mov
jle
sub
cmpb
popa
xchg
insb
flds
sub
mov
cmp
nop
pop
sbb
inc
outsb
pop
add
inc
insl
push
push
dec
jp
sbb
leave
insl
push
lcall
sub
aas
sti
aam
fisubs
xor
add
cmp
sbb
std
movsl
sbb
inc
xchg
inc
stos
dec
cltd
mov
mov
jle
lea
lea
arpl
fcmovnu
add
jne
out
cld
push
ret
mov
and
add
mov
pusha
inc
add
iret
jmp
sbb
push
mov
int
jp
test
sahf
inc
out
dec
sub
in
adc
les
xor
enter
psubusw
push
ss
add
push
scas
fisttpl
xor
das
cmpl
dec
xchg
mov
pop
adc
jae
mov
repz
outsb
outsl
test
add
lea
push
roll
mov
inc
sti
cld
ljmp
xchg
rcll
jmp
jb
mov
cltd
lahf
xchg
scas
jb
inc
hlt
sub
pop
or
loopne
in
mov
test
sbb
pop
jle
stos
psubq
and
out
push
imul
and
jbe
mov
sbb
mov
out
xor
mov
into
data16
mov
dec
movsb
inc
mov
ljmp
xor
pop
inc
scas
push
mov
sbbl
nop
je
imul
mov
std
pop
jb
or
inc
std
test
adc
xor
mov
cmp
icebp
and
lahf
testb
push
jbe
loopne
in
adcb
sbbb
call
outsb
sbb
mov
add
push
and
inc
rcrb
or
int3
dec
adc
add
ret
cwtl
lea
addr16
mov
and
in
and
cmp
clc
popa
mov
adc
mov
mov
sbb
movsl
lea
arpl
sub
movsl
aaa
lds
ja
shll
cmp
sub
mov
pmaxub
xchg
push
mov
cmpsl
subl
insl
cmpsl
lods
cmp
cmp
out
fdivl
scas
cmp
xor
push
jle
js
jne
mov
dec
sbb
shll
fwait
mov
rcll
xchg
lahf
fs
lock
dec
sub
into
adc
into
nop
push
out
adc
popa
pop
xor
sti
scas
mov
int
add
and
mov
pop
xor
ret
mov
aaa
shlb
fldcw
or
movsb
insl
out
adc
sbb
out
and
mov
add
pop
or
add
xlat
mov
sti
mov
popf
xor
lods
pop
into
mov
in
rcrl
inc
jecxz
mov
scas
or
test
xchg
jl
enter
mov
sbbb
mov
inc
sbb
rcrb
scas
pushf
sbb
popf
push
mov
iret
xlat
mov
xorl
int
push
cltd
nop
dec
pop
xchg
pop
xor
lahf
sarb
cwtl
ds
ja
push
jb
mov
mov
cmp
sub
jb
inc
pop
pushf
and
pop
pop
jg
jge
imul
and
lods
cld
pop
sub
or
mov
xchg
and
adc
sbb
or
movq
pop
jae
dec
sub
orl
xor
adc
dec
xor
daa
insb
lods
int3
ret
mov
daa
pop
out
daa
xchg
cltd
jns
ficompl
xchg
ds
mov
mov
mov
add
outsl
mov
pop
popf
cmp
inc
xchg
jecxz
pop
pusha
adc
shl
cmpb
nop
jnp
mov
ret
lret
testb
jae
jmp
ror
inc
jmp
pop
sub
or
xchg
iret
lods
jmp
lock
xor
cwtl
inc
ss
inc
insl
mov
sbb
stc
xchg
mov
and
sbb
pop
rcll
dec
out
pop
pslld
jmp
mov
out
xor
sbb
dec
fs
add
push
dec
add
test
push
sub
mov
cmpsb
and
mov
subb
add
mov
or
fs
call
out
fnsave
cmc
ret
add
add
xor
cmp
fwait
add
cwtl
jmp
lret
out
xchg
fs
lea
dec
or
cli
jae
clc
mov
adc
fisubrs
adc
arpl
jecxz
cmp
loopne
xchg
and
ret
pop
in
f2xm1
sbb
push
popa
adc
mov
mov
push
shll
std
inc
ljmp
popf
inc
in
aas
xlat
xchg
scas
pop
sbb
pusha
fimull
mov
jp
fisubl
mov
mov
sbb
in
and
mov
movsl
into
test
hlt
testl
push
adc
or
sbb
cmp
ficomps
iret
cmc
dec
test
or
xchg
fucomip
imul
cmc
mov
lret
jnp
lds
addr16
pop
mov
mov
sub
das
inc
inc
mov
mov
in
dec
pop
scas
inc
lods
arpl
cld
inc
movsl
into
rcll
pop
cmp
or
xchg
rolb
ja
popf
dec
or
cltd
mov
cltd
sub
add
fnstcw
sub
lods
dec
inc
mov
ret
and
lods
cli
push
xlat
xor
xchg
insb
rcll
movl
adc
pushf
sub
push
fadds
test
call
addr16
ljmp
add
aaa
into
adcb
outsb
adc
pop
movb
test
out
jecxz
mov
adc
cltd
xlat
cmp
sub
sub
ffreep
iret
mov
movsl
arpl
scas
cwtl
xorb
outsb
cmp
mov
mov
pop
sbb
push
push
or
xchg
adc
mov
push
mov
cmpsb
xchg
xchg
adc
add
pop
movsb
cmp
into
scas
insb
gs
xchg
or
rcll
int3
icebp
call
mov
mov
aam
mov
jae
and
lods
pop
and
inc
cs
fwait
and
sub
xor
jl
mov
shl
mov
fsubrl
imul
pop
add
push
mov
jno
jns
jno
cltd
gs
pop
inc
es
pop
inc
cmpsb
mov
push
hlt
sub
or
nop
loope
jg
in
repz
adc
aaa
lods
mov
call
shll
mov
leave
clc
pop
adc
fmulp
xchg
mov
clc
stos
lods
xchg
icebp
or
push
and
adc
lea
pop
jle
rclb
mov
push
mov
adc
mov
push
cmp
sbb
clc
dec
loop
push
addr16
adc
dec
dec
mov
movsl
mov
add
sub
pop
fwait
and
xor
ret
dec
push
dec
rolb
dec
aas
inc
ret
and
lods
fwait
mov
loopne
jns
shl
mov
in
arpl
pop
ret
clc
stc
aas
mov
test
mov
dec
mul
xor
scas
cltd
pop
es
push
inc
fiadds
idiv
mov
cmp
ds
jp
sbb
sbbb
je
mov
out
imul
sub
push
or
xchg
mov
mov
jge
clc
mov
adc
gs
movsl
push
pushf
xchg
int3
sbb
sub
clc
imul
push
and
sub
fildl
loop
mov
stc
xor
mov
bound
xchg
iret
push
push
push
and
push
adc
hlt
jbe
jne
cmp
popf
movsb
or
mov
out
js
jnp
enter
xlat
mov
cmc
call
xchg
and
or
clc
push
int
add
addl
and
xor
pop
divl
xchg
stos
sbb
call
sti
jl
loopne
test
mov
in
xchg
pushf
jne
mov
in
or
sbbl
jae
popa
cmp
movsb
ret
loop
push
add
push
mov
mov
and
inc
add
push
pop
lret
aas
cmp
or
xchg
decl
insb
std
aas
bound
xlat
int3
add
mov
or
jae
xchg
add
mov
outsl
sbb
jne
aaa
push
aaa
mov
inc
jns
ret
mov
loopne
push
jns
xor
jne
inc
fadd
lods
je
xchg
mov
int3
xor
rcrl
mov
jmp
jmp
mov
fsubs
aaa
jmp
push
shr
lea
scas
push
pushf
inc
repnz
mov
sbb
cmpb
push
cmp
push
xchg
scas
xchg
xchg
inc
fdivrs
lods
enter
andb
pop
sbb
xor
outsl
inc
in
shlb
mov
add
mov
fldl2t
lea
jae
jae
sbb
inc
add
mov
aas
es
jmp
ljmp
jge
mov
ds
sbb
mov
cmp
test
mov
mov
cmp
xchg
or
aam
mov
outsl
andb
xchg
and
ds
or
insl
sub
jno
rorb
xor
out
test
aaa
sarl
das
leave
add
hlt
ret
xchg
or
int
loopne
sbb
test
cs
fnstenv
out
rorb
andb
xchg
xchg
fsubl
mov
xorl
fwait
or
adc
lock
and
movl
lret
fistpl
adc
adc
pop
paddsw
mov
sti
inc
pop
mov
jae
imul
and
dec
push
arpl
inc
int
fs
fsub
sbb
cmc
push
dec
inc
mov
addr16
add
in
adc
or
mov
sub
popf
add
lds
push
or
adc
iret
and
cmp
mov
xor
or
fiaddl
and
jnp
repz
pop
jecxz
imul
pop
cltd
shlb
dec
inc
and
mov
jne
repnz
repnz
sub
push
scas
add
sub
pushf
test
stos
add
xchg
jmp
push
push
push
outsl
fcompl
movsl
clc
test
jnp
dec
mov
mov
jp
scas
lcall
add
std
ss
stc
inc
test
dec
dec
dec
adc
into
fisubl
xchg
shrb
out
js
pop
dec
and
mov
jnp
fucomip
mov
mov
bound
jbe
inc
xchg
sub
lret
pusha
sub
lea
xchg
sbbb
jge
push
ret
push
repnz
or
sti
xchg
dec
xchg
aad
mov
pop
push
or
out
or
sbb
or
insl
mov
sub
and
inc
repnz
and
pushf
std
popf
mov
lret
lea
fdivrl
pop
ljmp
icebp
sub
push
jne
add
hlt
add
ficoms
xor
jecxz
push
inc
push
scas
dec
movsb
mov
push
dec
loopne
or
rcrl
and
add
sbb
hlt
xor
add
or
mov
pop
hlt
xchg
sub
inc
or
dec
daa
mov
push
out
adc
out
jne
hlt
ds
fldt
mov
cmp
mov
mov
add
push
add
out
roll
outsl
pushf
dec
lock
hlt
inc
aam
and
hlt
bnd
sbb
test
out
inc
mov
jnp
pusha
push
inc
jecxz
push
leave
inc
jne
cld
or
and
test
inc
test
xchg
jo
sbbb
lea
mov
jno
in
test
adc
xchg
movsb
pop
mov
xchg
ficoms
push
mov
mov
scas
outsb
or
icebp
jae
or
in
mov
push
shr
subl
mov
loope
jp
in
add
pushf
out
push
push
add
or
jnp
and
into
cmp
and
xchg
sbbb
out
ret
sub
lock
clc
add
in
or
lret
imul
cmpsb
adc
sub
inc
add
push
cmp
push
xor
xor
lock
mov
fmull
sbb
xchg
in
ss
fs
xor
xor
pushf
sub
movsl
pop
lea
or
fsubs
jl
icebp
insl
in
mov
popa
sub
ja
pop
push
loop
lods
daa
mov
xchg
pop
cld
xchg
xchg
lcall
pop
leave
movsl
xor
bound
loopne
dec
pop
dec
xor
out
and
and
rclb
clc
in
daa
cwtl
in
jp
aas
jmp
and
mov
fdivrl
adc
mov
in
lea
jp
and
jge
xchg
mov
lret
addr16
mov
lret
aad
sti
mov
adc
add
pop
pop
sub
jbe
xchg
sub
out
jne
add
dec
int
arpl
sub
test
add
xchg
ljmp
mov
cwtl
sub
jle
mov
add
shrl
or
cmp
into
std
mov
push
in
or
push
cwtl
pop
icebp
outsl
dec
sub
push
dec
cmp
mov
pop
jo
push
adc
xchg
daa
adc
and
scas
mov
push
sbb
or
outsl
test
jle
aam
dec
jb
adc
xor
mul
fists
movd
push
adc
sti
jl
push
pop
jmp
repz
mov
loope
and
mov
push
cmp
lds
mov
imul
je
shl
mov
mov
inc
in
int3
jne
push
int3
push
jbe
mov
push
xchg
std
pop
or
mov
xchg
mov
xchg
shrb
push
or
dec
cmc
xchg
xor
std
and
mov
inc
fimull
sbb
fwait
mov
jge
imul
sti
cmp
mov
outsl
test
aam
xlat
mov
sub
sub
sbb
mov
lret
pop
and
pop
outsl
rorl
cld
subl
adc
ja
and
xor
int3
push
insl
push
fimull
popa
xor
xlat
je
add
cmp
loope
jnp
jg
in
jbe
test
inc
test
jo
cli
jmp
int3
xor
negl
aam
out
and
fs
fisubl
testl
movsl
in
lea
adc
sbb
or
test
sub
ljmp
fisttpl
lcall
imul
or
mov
mov
pop
in
das
add
lods
inc
add
imul
mov
xchg
out
test
push
ja
sbb
add
les
inc
lods
stos
sbb
addr16
inc
inc
shr
xchg
js
in
dec
sbb
or
and
mov
call
or
daa
lds
sbb
xchg
xchg
rol
aam
xchg
in
out
aas
sbb
gs
scas
popa
inc
push
sub
xor
dec
ret
in
push
in
jae
add
in
aam
mov
mov
bound
test
imulb
lods
addl
pop
pop
leave
rcrb
xchg
ss
hlt
lret
and
sub
dec
xor
xchg
ds
xchg
mov
cmp
jle
aad
and
inc
adc
cltd
cli
mov
lods
dec
fdivs
in
das
jge
shll
sub
or
inc
int3
adc
jb
call
or
lret
addr16
sbb
xor
inc
xchg
push
ss
mov
xor
ss
icebp
xor
lods
shll
mov
dec
lret
lea
and
xchg
fcoms
movsl
jmp
outsb
adc
adc
push
test
pop
in
mov
dec
sub
call
popf
test
dec
aas
mov
push
rclb
push
je
sahf
jne
lret
push
jne
pop
das
xor
and
mov
nop
arpl
cmpsb
jge
mov
pop
xor
and
mov
inc
lret
pop
sub
insb
lea
dec
mov
mov
adc
aaa
sub
mov
cli
test
mov
jns
xchg
push
dec
push
pop
mov
push
cmp
mov
xchg
pop
insl
or
lds
push
jge
xchg
xchg
xchg
cld
aas
push
andl
les
fs
jmp
lods
clc
lock
mov
loope
lods
push
fistpll
lods
jle
jnp
cmp
stc
movsb
hlt
popf
or
xor
lcall
leave
wbinvd
ljmp
adc
ja
mov
movb
dec
and
sub
js
inc
shl
jp
aaa
cmp
sbb
cmp
pop
add
sub
mov
inc
test
xchg
imul
lcall
incb
pop
dec
int3
shr
bound
daa
das
test
xchg
int
pop
mov
in
movsb
repz
add
outsb
mov
xchg
cmpsb
mov
add
dec
jecxz
dec
dec
push
mov
cmp
sbb
and
cs
out
adc
mov
xor
test
inc
cmc
pop
xor
sub
loope
in
xchg
dec
fsub
cmp
dec
call
js
sub
into
test
adc
gs
xchg
test
test
fsts
fiadds
mov
cld
into
dec
div
int3
inc
sub
outsl
cmp
mov
lea
mov
mov
push
sub
int3
add
or
pop
fisubs
dec
bound
mov
xchg
or
sub
loop
pop
adc
adc
add
xchg
sahf
mov
xchg
popa
mov
repnz
jle
cmp
push
int
push
and
xchg
clc
loop
ds
inc
fsts
mov
mov
or
rclb
aad
pushf
sub
push
in
add
mov
cltd
cmpsl
xchg
push
repnz
dec
jmp
adc
xchg
push
push
leave
hlt
pop
lock
mov
repnz
push
xlat
sbb
ret
out
dec
mov
cmp
xor
inc
cmp
outsb
aad
add
sbb
xchg
cmp
cmpsl
ficoms
jp
push
jg
mov
lahf
cltd
xlat
notl
cmpsb
ret
dec
or
fwait
jb
mov
push
push
mov
outsb
add
push
orl
sub
jle
movb
mov
ret
scas
loope
sbbl
sahf
mov
cmpsl
sub
jl
inc
sbb
xchg
mov
cmc
pop
xor
cmpsl
dec
mov
mov
mov
hlt
jns
adc
or
and
xchg
fdivrs
and
je,pn
mov
pop
sarl
fmull
sbb
mov
add
xor
push
sub
ficoml
ret
xor
test
sbb
sub
and
jge
push
mov
cmp
dec
popa
pop
jnp
fnstsw
mov
and
jae
out
mov
dec
fsubr
enter
cmp
mov
inc
xchg
push
pop
sti
pop
and
sbb
xchg
sub
aad
or
cmp
fisubl
mov
jle
pop
testb
and
xchg
push
loopne
mov
mov
dec
adc
daa
leave
add
cwtl
call
int
adc
mov
rclb
mov
and
cmpsl
xor
gs
nop
mov
cmp
dec
insb
sti
rcr
add
iret
xchg
fsub
andl
jp
aam
mov
loop
push
and
ret
addr16
imul
rclb
push
jl
cmc
inc
sbb
clc
cmp
mov
jb
adc
es
add
jecxz
cli
mov
push
sub
cmpsl
daa
xor
mov
data16
sbb
mov
dec
pop
jns
dec
sub
xchg
and
scas
sahf
fwait
lret
jle
js
xor
sbb
mov
hlt
jns
xchg
in
add
sub
cli
mov
loop
gs
jo
insb
push
inc
sub
into
in
inc
sbb
jl
inc
roll
test
out
lods
jns
lret
cmp
sbb
add
loop
jb
mov
mov
adc
dec
mov
inc
pusha
or
loope
mov
mov
mov
out
mov
pop
push
or
inc
dec
push
arpl
adc
mov
jno
jno
sub
loope
daa
sub
aad
mov
in
int
xchg
xchg
dec
lds
xchg
mov
mov
fdiv
fwait
xchg
gs
data16
call
sbb
dec
pushf
fcmovnbe
jae
mov
jle
mov
or
inc
gs
notl
shlb
fs
bound
adc
movsl
stos
mov
cwtl
pop
divl
sub
je
dec
cld
sub
scas
test
sbb
or
fs
ret
add
xor
loope
enter
adc
mov
jno
and
cld
inc
xchg
sbb
xchg
fists
pop
mov
mov
stos
dec
stos
pop
sub
cli
mov
cmp
inc
add
sbb
decl
pushf
adc
mov
push
push
dec
mov
pop
lods
cmp
pusha
dec
jecxz
insl
push
lret
dec
rcr
aaa
sub
mov
cmp
int
mov
lret
orb
pop
sahf
leave
es
in
cwtl
dec
mov
cmp
dec
push
mov
cld
xchg
and
jno
jbe
cs
add
sub
mov
inc
scas
movsl
jno
push
cmpps
push
sub
cmp
lcall
out
mov
cld
pop
adc
adc
mov
movsl
shll
test
cltd
call
xchg
rcr
sub
es
and
idiv
pop
decb
mov
mov
dec
mov
fxch
hlt
mov
lret
js
xlat
imul
fdivs
pusha
lret
sbb
dec
xchg
inc
sbb
jnp
mov
jo
out
mov
xor
cld
mov
roll
jl
pop
xchg
mov
popa
jne
mov
lea
ret
das
add
stc
pop
mov
or
jl
jae
mov
xchg
addr16
lcall
repz
ficompl
xor
fisubrl
mov
int
repnz
addr16
enter
push
push
lods
xchg
cltd
fisttpll
popf
jl
jmp
dec
jne
loope
or
and
dec
fbstp
aad
xchg
sahf
push
in
std
lods
pop
adc
cmp
mov
jmp
lret
test
mov
push
jle
in
loopne
pop
shrb
lret
sbb
mov
lock
repz
rcll
aad
dec
push
dec
dec
into
adc
mov
mov
xor
mov
aam
popl
jne
adc
es
push
xor
imul
add
dec
jns
mov
jno
and
repnz
jb
cmpsb
mov
lret
clc
mov
inc
push
inc
daa
sbb
jae
insl
jmp
ja
xchg
cmp
dec
pop
cwtl
out
shrb
in
scas
pop
je
sub
lea
cmp
adc
out
dec
adc
mov
in
pop
subl
aam
fldl
dec
mov
and
lea
cmc
in
nop
addr16
jae
xchg
in
test
stos
scas
cmp
mov
jp
push
dec
out
cmp
inc
leave
push
add
jmp
jne
adc
test
pop
into
pusha
lods
mov
jl
in
jle
ds
movsl
jne
in
or
xchg
call
movnti
loop
in
shll
leave
dec
cmc
pop
or
in
mov
xchg
mov
in
or
daa
jno
repz
shll
or
xor
shr
mov
sbb
cmc
jle
mov
and
pop
std
idiv
loop
dec
pop
or
fwait
xchg
out
push
pop
push
jecxz
inc
cltd
jae
mov
cld
or
and
dec
mov
insb
xchg
out
and
int
dec
mov
lea
and
shll
pop
push
mov
jne
jmp
gs
xchg
cmp
xor
inc
leave
jns
rcll
xchg
add
mov
fs
jb
js
data16
dec
adc
loope
push
inc
pop
xor
jge
out
leave
mov
mov
aas
inc
rorl
mov
cmpsl
popf
xchg
in
xor
sbb
sub
shl
cmpsl
mov
dec
dec
cmp
cmc
mov
pop
test
cmp
jmp
test
imul
les
and
sub
mov
popa
ljmp
xor
push
jle
dec
add
add
jmp
mov
push
lods
test
mov
bound
and
jb
jbe
sub
iret
sbb
jmp
mov
hlt
mov
pop
jge
mov
jle
sbb
stc
int
fcmovbe
aas
mov
or
xchg
bound
bnd
enter
mov
out
cmp
xchg
inc
aas
stos
jmp
out
shrl
scas
inc
cwtl
sbb
inc
fld
inc
push
lcall
movntq
dec
and
jecxz
add
pop
shlb
insl
mov
ret
int3
shr
mov
add
and
cs
repz
inc
cld
push
jbe
pop
clc
ss
cmp
pusha
mov
sub
add
movsb
loopne
mov
incl
or
in
or
dec
add
or
dec
adc
pop
push
adc
in
sbb
mov
or
mov
xchg
dec
adc
mov
mov
lret
mov
les
rorb
in
jmp
push
lock
add
loop
movsb
add
loopnew
dec
dec
fsubrs
jnp
loope
push
lods
sbb
shll
testb
ja
into
fldenv
das
fistpl
out
pop
inc
rorl
push
jl
lahf
insl
aad
add
add
ficoms
lods
inc
mov
ljmp
jae
aad
fs
mov
shll
fnstenv
cmp
xchg
sub
sti
jecxz
popfw
pusha
cmp
sbb
dec
cmovne
addr16
push
push
mov
jl
push
xchg
dec
mov
xchg
jle
cmp
es
in
popa
imul
xlat
mov
sub
addr16
mov
lods
adc
dec
cwtl
mov
out
mov
mov
les
jb
lcall
dec
leave
sbb
mov
cmpsb
mov
es
jecxz
push
gs
and
sub
sbbl
out
and
push
push
fiadds
mov
push
aaa
mov
cli
dec
aaa
ss
adcl
dec
ja
mov
aaa
mov
mov
push
sbb
loope
cmp
inc
xchg
enter
jo
je
push
pop
jecxz
test
cmp
cwtl
cmp
push
in
js
rorb
scas
xchg
inc
cmp
lcall
addb
mov
jle
inc
jge
je
sub
lock
popa
mov
and
insl
imul
and
enter
call
pop
addb
int3
or
fcomp
cld
in
push
xlat
fcmovb
clc
dec
scas
sub
sbb
bound
inc
sbb
mov
cmp
test
inc
repnz
test
cmp
insl
imul
push
jns
es
mov
fnstenv
mov
or
and
loop
iret
jg
into
dec
mov
mov
xor
pop
pop
out
adc
outsb
xlat
xor
pop
jae
in
xchg
mov
stos
sti
push
dec
out
inc
fidivs
les
idivl
mov
aad
pop
inc
imul
xchg
add
out
mov
sbb
push
pusha
mov
mov
mov
mov
pop
pop
fs
sub
outsb
je
xor
lods
ljmp
aas
cmp
cmp
mov
movsb
lret
sub
jbe
pop
mov
sub
mov
and
mov
mov
ret
notb
loope
fwait
cltd
outsb
stos
aaa
mov
sub
xchg
test
jge
decb
sub
pop
lock
mov
and
movsb
rolb
sbb
cmp
out
mov
and
lds
inc
dec
mov
cwtl
jl
and
sub
in
inc
mov
aam
push
lock
cld
jae
cltd
das
jne
xchg
and
cld
stos
aas
xor
rcll
scas
pop
push
jmp
inc
test
scas
jmp
cmpsl
hlt
mov
in
add
push
inc
test
adc
or
jo
inc
jnp
xorb
mov
xchg
int
pop
xor
out
insl
push
imul
sub
adc
les
sub
outsb
cwtl
stc
adc
sbb
mov
fs
fs
lahf
arpl
mulb
movsb
pusha
push
add
ja
xchg
out
mov
lcall
fs
sub
adc
loope
mov
jge
rorl
andb
dec
loop
jne
push
stos
sbb
fimull
arpl
inc
lahf
mov
in
sbb
nop
pop
int
ljmp
adc
push
jne
fcomps
mov
sbb
mov
fisttpl
std
mov
cmp
pop
lods
cli
in
int3
or
addr16
test
pop
test
push
fisubs
cmpsl
mov
dec
mov
fwait
das
test
sub
adc
jns
mov
aam
leave
js
std
cmp
outsb
enter
adc
sub
test
xchg
rcl
and
out
rorb
ret
xchg
and
loope
sub
test
aas
inc
xor
inc
daa
das
stos
add
pop
dec
fwait
dec
pushf
adc
popf
jg
mov
cmp
fcomip
int
jmp
repz
lahf
fldl
push
popa
adc
mov
add
sbb
aas
cmpb
xchg
iret
and
popf
push
scas
and
dec
sbb
push
sub
shlb
std
dec
inc
adc
aad
mov
mov
sbb
in
xchg
cli
daa
sti
movsl
repz
add
cmc
bnd
sub
inc
cmpsl
adc
and
pop
inc
sahf
in
ljmp
aam
inc
xor
mov
jns
jge
loop
rcr
sti
cmc
sub
sahf
jmp
jmp
push
cmp
cvtps2pi
scas
jp
or
adc
push
pop
pop
cmp
fidivl
outsb
xor
fldcw
enter
mov
and
es
lods
push
sub
fnstenv
inc
shl
sbbb
push
xchg
xor
lcall
pop
inc
loopne
pop
add
or
sbbb
clc
xchg
add
cmpsb
and
shll
mov
mov
xor
xor
jge
inc
push
add
add
ja
loope
aas
xchg
xlat
xchg
pop
adc
mov
inc
cltd
mov
inc
push
sahf
inc
inc
jbe
adc
dec
js
in
lea
fdivl
adc
jmp
dec
jl,pn
mov
inc
sub
jno
fcomps
insl
xchg
testb
daa
test
pop
push
imul
call
stos
dec
inc
dec
orl
aam
jmp
inc
add
enter
cmpsb
ret
pop
inc
jb
rcll
mov
out
push
sbb
xchg
gs
cmc
fcomps
pop
bound
lds
mov
loope
adc
push
test
jns
ret
imul
pusha
cmp
test
rcrl
mov
dec
outsl
mov
xchg
fnsave
inc
aas
pand
lcall
jge
cmp
dec
cmpsb
scas
xchg
in
aas
popf
popf
mov
aad
int3
mov
mov
mov
cmp
push
cli
jmp
rcl
push
adc
outsl
adc
test
push
cmp
jbe
xlat
cs
stos
mov
loopne
dec
mov
add
inc
insl
and
int3
mov
stos
jl
mov
je
fmuls
sbb
in
test
xorb
xchg
shlb
orl
cld
or
sbb
mov
sub
mov
cmpsb
in
xor
push
aad
mov
mov
andl
dec
xchg
in
ss
or
das
out
mov
outsl
mov
test
sbbl
lret
popl
icebp
push
lret
rcrb
xor
push
mov
mov
pushf
xor
gs
jp
sahf
addl
imul
jns
addr16
imul
mov
ds
and
pop
push
fnstcw
mov
jmp
loope
ljmp
das
mov
ja
pop
into
sub
clc
xchg
roll
test
aaa
jge
ret
jae
out
test
mov
inc
and
movsl
cli
mov
cli
and
jl
in
sbb
jno
dec
cmpsb
imul
dec
ret
dec
in
shl
push
fmulp
sbb
xchg
movsl
imulb
repnz
xchg
jo
mov
push
inc
dec
scas
sbb
cli
add
out
mov
icebp
lods
push
addr16
addb
dec
imul
cmp
sbb
or
adc
negb
fmul
mov
out
add
mov
adc
rcl
mov
inc
jp
fs
addr16
mov
in
and
jp
jbe
inc
ret
xchg
mov
jae
xchg
sbbb
mov
sbb
dec
outsb
xor
insb
bound
jae
xchg
mov
packsswb
addb
dec
jmp
decl
cmpsl
inc
insb
movsb
xchg
dec
popf
sub
add
es
push
mov
sbb
mov
vorps
or
call
lea
aam
hlt
shlb
or
out
sub
fistpl
jecxz
xor
pushf
sbb
sbb
icebp
cmpsl
push
cmc
push
nop
xchg
mov
and
dec
push
cltd
cmp
stos
mov
mov
nop
xor
out
cli
int3
sti
aas
cmpsl
jle
pop
add
inc
ds
inc
cmp
lds
xchg
mov
and
jns
rol
sbb
mov
into
insb
loop
popf
rorb
call
push
xchg
lds
les
mov
xor
dec
jl
rcll
xchg
aam
enter
cld
sbb
testl
iret
add
mov
and
mul
mov
hlt
or
data16
insl
addr16
ds
inc
mov
inc
adc
fstp
into
inc
xor
rcrl
jp
aaa
jl
arpl
xchg
add
inc
or
sub
sub
stos
cmc
or
jbe
jne
and
ret
sub
int
cmc
xchg
in
imul
ret
in
jl
in
dec
mov
mov
fcompl
movsb
lcall
imul
dec
scas
pop
lret
into
sbb
mov
sub
mov
bound
or
clc
jmp
xor
dec
inc
inc
mov
into
shll
test
das
pop
sub
lret
fwait
adcb
push
sbb
stos
jne
pop
insl
sti
cmp
repz
pop
push
stos
pop
sbb
loope
adc
sbb
lods
and
jne
dec
or
cmc
das
push
pop
xor
pop
loopne
add
mov
xchg
mov
xchg
dec
lock
in
stos
loope
or
js
aas
repz
loopne
or
cmc
lahf
nop
les
adc
stc
addl
sub
push
or
cmovno
test
pop
or
stos
lahf
out
mov
pop
mov
out
lret
ds
mov
aad
call
push
xor
push
sub
add
jmp
test
jge
into
add
fbstp
mov
xchg
sar
inc
xchg
jae
out
sbb
decb
cmp
cmp
push
ret
lods
data16
clc
cmp
push
cmp
sbb
fiaddl
jl,pn
daa
mov
cmpsb
jb
sbb
fs
or
pop
rorb
jno
sub
jmp
insb
repz
xorl
cmovle
pop
mov
jno
enter
push
loope
push
xchg
mov
daa
into
out
movsb
mov
fwait
out
mov
sahf
cmp
ds
inc
xor
scas
fstpt
nop
jo
xchg
in
and
or
jg
pop
cmp
adc
imul
xchg
in
bound
stc
xor
pusha
test
lods
jle
hlt
mov
inc
addb
dec
fisubrs
xlat
mov
push
or
pop
nop
inc
xor
push
sub
scas
inc
sbb
in
xchg
clc
adc
fst
loopne
sbb
arpl
sub
adcb
sbb
gs
sahf
je
inc
add
sbb
inc
loopne
mov
out
push
lock
loop
int3
loope
jge
xor
iret
xor
push
jge
jns
out
mov
push
jne
push
xchg
cmp
jo
or
gs
pop
into
iret
adc
enter
stc
mov
cmp
mov
adc
inc
lea
mul
test
int
or
jne
stos
adc
lock
mov
stos
insb
pop
push
inc
jae
aam
xorb
mov
xlat
mov
stc
xchg
inc
adc
inc
push
or
mov
into
jg
stos
mov
shll
leave
outsl
cmpsl
lcall
cmp
loopne
push
in
sub
scas
arpl
mov
push
icebp
mov
adc
pop
stos
jecxz
cmp
inc
adc
aaa
cmp
int
insl
rorl
push
mov
mov
fdivrl
push
inc
sub
ret
ja
adc
scas
pusha
pusha
xor
jmp
push
or
xor
es
sbb
add
dec
subl
lods
and
inc
js
push
outsl
and
ret
add
mov
push
sbb
push
inc
mov
cmp
inc
sbb
sub
rcl
fmuls
enter
adcl
xchg
sbb
bound
pop
aam
in
push
ret
and
out
mov
adc
mov
dec
jae
adc
add
jp
cs
rcll
cmp
dec
lret
add
iret
std
xchg
mov
pop
test
push
sub
ds
jge
loopne
jp
rclb
das
inc
jnp
test
push
jge
mov
dec
js
cwtl
xor
adc
mov
dec
mov
xor
subb
imul
mov
insb
xchg
pop
pop
pop
icebp
sbb
cmp
push
scas
addr16
xchg
or
mov
cmp
push
xor
mov
ljmp
pop
adc
inc
xor
mov
sti
cmpsl
cmpsb
out
ja
leave
imul
cmp
and
sbb
mov
out
mov
lods
jecxz
jmp
mov
ret
bound
cmc
inc
nop
and
sub
mov
fsubrl
cmc
pop
mov
cmova
ljmp
aaa
inc
pop
sub
aad
and
addl
test
pop
ja
jge
add
into
sbb
mov
sub
addb
push
jmp
hlt
out
add
popf
popf
pop
dec
scas
xabort
pushf
cmpsl
xor
cmp
push
imul
pop
dec
adc
mov
ljmp
dec
sbb
pop
xchg
aaa
cmp
testb
push
pop
fbstp
jb
pop
stc
mov
das
dec
xchg
mov
lock
mov
dec
cmpsl
stos
sbb
fnstcw
idivl
insb
cmp
imul
scas
sar
ret
xchg
cmp
rcll
enter
in
dec
cmovns
ljmp
sti
mov
pop
mov
adc
lret
mov
pop
xchg
lock
sub
loope
pop
sub
jg
stc
push
pop
jge
les
or
fstl
dec
jecxz
add
jno
jp
dec
sahf
cmp
loopne
xchg
adc
pop
mov
out
call
jae
insl
ret
daa
shll
xor
popf
aad
fmulp
ficomps
jecxz
imul
aaa
sbb
dec
pop
inc
outsl
push
roll
pop
rep
jno
cmp
mov
cmp
cmpsl
loope
mov
mov
cld
xor
jmp
xor
pop
emms
adc
mov
xor
fbstp
loop
loope
dec
popa
sbb
fmuls
lcall
gs
scas
pop
test
dec
out
imul
mov
cmc
mov
pushf
pop
adcb
aas
fcoms
mov
sbb
pushf
jb
int3
or
mov
inc
mov
mov
stc
cmp
rorl
xchg
clc
sub
and
pop
push
sbb
or
out
jno
aaa
mov
iret
sbb
loope
jnp
xchg
daa
inc
and
jl
lret
es
lea
jl
jb,pn
jl
and
adc
xchg
mov
xlat
mov
pop
call
xor
xor
shlb
data16
out
jae
mov
fwait
outsl
xorl
call
sub
jmp
or
fnstenv
lock
pop
jp
aas
scas
jno
sbb
mov
out
pop
shl
repz
js
mov
push
xchg
mov
insl
xor
out
pop
mov
int3
jge
or
iret
or
mov
xor
dec
adc
lret
dec
jle
push
mulps
test
mov
dec
xchg
mov
inc
movsb
test
add
jge
arpl
rorl
ljmp
lret
xchg
addr16
pushf
xchg
pop
dec
or
mov
daa
sbb
mov
and
mov
dec
lea
inc
ss
jns
inc
ss
js
jp
sahf
xor
jno
sbb
fbstp
shrl
loop
or
mov
decl
mov
js
fimuls
sbb
sub
add
fs
jmp
mov
jg
and
std
sub
inc
ret
and
jnp
jp
iret
dec
shl
std
push
jl
pop
notl
xor
enter
subps
mov
xor
jp
inc
push
mov
dec
cli
and
jmp
scas
hlt
rorb
dec
rolb
dec
rol
lea
imul
jns
and
or
test
mov
lea
insb
push
sbb
popf
add
arpl
and
daa
xchg
imul
mov
sbb
or
pop
shrb
dec
jno
repz
and
and
in
mov
movb
lds
stc
pop
mov
jmp
inc
dec
push
sub
scas
dec
push
cmc
test
pop
popf
popf
das
jecxz
lock
es
jno
xorl
stos
mov
lret
andl
outsb
adc
daa
adc
in
push
xchg
cmpb
inc
call
es
and
push
in
cmc
aam
out
jns
push
adc
push
and
mov
push
and
cmpl
mov
inc
xlat
sub
or
mov
adc
lret
jecxz
pop
inc
or
out
or
xchg
shlb
mov
jge
sbb
mov
lcall
leave
jecxz
jl
and
out
adc
jge
add
fwait
data16
test
or
dec
cmp
inc
push
mov
mov
out
in
stos
push
ja
pop
lods
or
mov
rol
cmp
cmc
or
pop
lods
adc
pop
dec
push
pop
dec
and
sub
addr16
outsb
icebp
or
mov
pushf
inc
data16
cli
push
xchg
mov
outsl
or
add
dec
int3
mov
mov
shrb
add
dec
xor
push
adc
int
out
and
rclb
xor
in
lret
xor
cltd
inc
stc
dec
pop
loope
pop
jmp
xchg
xchg
lret
lea
inc
cmpsb
sti
sub
dec
and
jle
je
inc
jl
ja
lea
out
jno
xor
jne
orb
ja
dec
xchg
adc
std
jae
xlat
cmp
adc
cli
lahf
rorl
push
dec
jge
cmpsl
pop
mov
inc
fcoml
lahf
cmpsl
add
push
iret
ja
push
push
stc
xlat
add
sahf
pop
pop
jle
push
daa
sub
inc
fs
cmp
sbb
clc
cmc
push
adc
mov
outsb
aaa
movsb
in
orl
or
pop
fidivl
sbb
pop
and
cli
enter
inc
pop
test
mov
scas
jno
or
dec
int
dec
dec
dec
sbb
outsl
out
jno
mov
fldenv
inc
mov
std
push
fwait
pop
dec
call
aad
push
lret
sub
push
dec
stos
enter
pop
push
lahf
fwait
les
fiaddl
arpl
testl
xchg
add
mov
mov
pop
mov
icebp
imul
pop
pop
in
int
mov
jl
mov
add
jge
std
xlat
repz
xor
ret
add
lcall
mov
inc
sbb
fcmovu
pushf
jp
test
cmp
stos
in
mov
dec
mov
in
fadds
adc
mov
dec
leave
mov
divb
jmp
mov
fcompl
fdivl
mov
leave
pop
or
idivb
imul
jo
mov
insertq
push
mov
lret
lcall
sti
cs
int
iret
popf
js
sub
je
mov
loope
cmp
jnp
adc
into
push
dec
sbbl
daa
inc
rcrl
mov
xchg
inc
and
sbb
sarl
mov
fs
add
and
pop
ror
or
mov
test
jle
inc
mov
cmp
sbb
ss
in
ss
push
lods
lods
leave
or
iret
loopne
lods
pop
pusha
jl
mov
test
mov
stos
push
xchg
das
cmc
xchg
xor
aas
mov
fs
out
mov
mov
pop
mov
cmp
xchg
mov
ja
movsl
lods
sub
dec
icebp
insb
cmp
ret
pop
cmpl
or
or
jne
mov
xor
jnp
adc
cmp
mov
add
addr16
ss
xchg
and
shl
adc
pop
push
sub
cmp
fldl
mov
and
jns
add
shll
neg
enter
cli
xchg
jae
jle
sbb
mov
stos
aas
xchg
or
push
mov
fs
inc
mov
xor
enter
cmp
xchg
lcall
add
and
mov
cvtps2pi
sarl
popf
pop
test
nop
push
xor
out
sub
lcall
pop
std
ret
jae
add
xchg
xchg
mov
scas
and
aam
insl
adc
out
fwait
int
in
int
push
scas
loope
sbb
fiaddl
sbb
outsb
adc
int
jl
fs
stos
adc
dec
imul
rclb
clc
insb
out
xchg
mov
jbe
clc
xchg
sub
lahf
mov
test
popl
jae
jecxz
arpl
push
fcomps
ds
inc
fs
in
xlat
mov
pop
in
pop
scas
inc
in
or
daa
xchg
test
divb
dec
push
iret
inc
fisttpll
xor
jbe
test
scas
sbb
daa
std
gs
cli
mov
cmp
dec
dec
fiadds
lahf
imul
push
mov
je
xor
cmp
hlt
dec
into
pop
push
add
xchg
jp
and
das
xchg
scas
inc
outsl
inc
in
and
js
dec
hlt
gs
das
rorl
sbb
inc
ret
sbb
popa
cli
cmp
xchg
adc
cmc
cmpsb
fistpl
test
mov
inc
cvtps2pi
addr16
push
dec
sub
or
frstor
cmp
pop
lods
aas
pop
ss
xchg
xlat
and
icebp
sti
mov
mov
jmp
lahf
push
lret
fidivrl
jnp
mov
mov
lods
fwait
cmp
dec
das
mov
dec
mov
add
in
cmpsb
sbb
int
into
mov
jbe
addb
shrb
sbb
movntq
pop
dec
mov
incl
pop
fwait
mov
rorl
mov
jmp
inc
orb
andl
call
lret
roll
lcall
adc
dec
jmp
ja
std
inc
lds
xchg
dec
cmp
dec
cmc
arpl
negb
aad
test
pop
mov
lods
in
fists
or
into
and
cmc
cmpsl
inc
rcrl
inc
fwait
push
or
jl
outsb
cli
pop
sahf
pusha
lods
mov
jecxz
jmp
test
and
fisttps
jle
in
dec
imul
sarl
daa
xor
scas
jnp
pop
test
sbb
lcall
mov
sbb
inc
test
sub
add
jle
xlat
push
pop
fcoms
push
mov
mov
fidivs
push
and
loopne
mov
jg
cmp
test
jne
gs
popa
int3
inc
cmp
jns,pt
test
pmulhw
and
insb
sbb
xor
lret
mov
int3
sarb
sbb
fistps
or
stc
insl
sahf
mov
jnp
nop
mov
xor
adc
sub
lock
and
jb
daa
add
jno
out
insl
inc
and
mov
in
in
push
scas
xor
xchg
pop
bswap
add
inc
pop
jp
mov
nop
push
or
sbb
mov
repnz
mov
insb
fs
or
adc
shrl
fcomps
popf
mov
or
scas
dec
pop
je
xlat
rcrl
xlat
rcrb
mov
pop
sbb
pop
jge
jecxz
test
pop
sbb
mov
stos
cltd
popf
cmc
cli
cmp
lods
pop
jne
mov
loopne
sub
lcall
pop
sbb
in
xchg
cli
xchg
push
sbb
push
mov
and
frstor
mov
iret
push
in
aam
mov
data16
leave
mov
enter
icebp
clc
cmp
cmp
cmpsb
cmp
fadd
xor
movsl
int3
cmc
sbb
mov
dec
cmp
iret
dec
imul
xchg
xchg
test
lods
mov
repz
je
repz
pop
cmpsb
push
mov
push
xchg
push
in
std
mov
mov
fists
mov
sub
icebp
mov
psubusb
mov
mov
lods
dec
fcmovu
xchg
inc
dec
scas
fnstenv
mov
push
xlat
outsl
mov
fwait
data16
leave
popa
aam
test
ret
fimull
pop
ret
sbb
push
pop
inc
rcrb
xchg
out
pop
pop
inc
cmpsb
push
cmovg
call
shrb
in
enter
cmpsl
jbe
rcll
popa
sti
imul
lret
push
mov
dec
cs
pop
les
outsb
adc
xchg
fld
data16
rcrl
add
mov
jmp
scas
pop
out
outsl
and
push
scas
mov
std
scas
jge
js
ficoms
jle
movsl
shrl
stos
pop
stos
jnp
popa
and
add
mov
xchg
rolb
mov
stos
adc
jecxz
or
call
orb
xchg
scas
pop
jnp
sub
jo
cmp
or
repz
lcall
jb
or
adc
call
dec
jnp
pop
push
inc
je
leave
popf
mov
das
sahf
inc
pop
and
pop
leave
pop
xlat
in
adc
je
orb
dec
jmp
dec
icebp
mov
mov
cli
xor
xor
add
in
movsl
pushf
fs
cwtl
in
add
and
shrl
jle
mov
subb
scas
xor
scas
and
ja
adc
dec
xchg
xor
cmp
pushf
imul
ljmp
mov
in
sbb
and
or
jnp
xorl
fildl
enter
mov
mov
stos
jno
jmp
sbb
mov
adcb
int
ret
xor
ret
add
xor
push
xchg
mov
and
adc
sahf
fisubl
cltd
dec
jnp
or
jnp
sub
sbb
adcb
mov
fistl
cmp
sbb
and
aad
mov
leave
mov
xchg
push
stos
mov
xor
mov
or
in
or
imul
lret
mov
mov
dec
mov
lds
outsb
jne
and
scas
fstl
mov
insb
out
adc
xlat
jge
popf
ss
and
jbe
aaa
push
stos
xchg
sbbb
push
stos
pop
out
mov
ficoml
dec
rcll
cli
mov
test
lods
xchg
cmpsb
lret
popa
xor
sub
call
scas
sbb
pop
inc
outsb
jecxz
and
and
pop
inc
push
sub
sarb
push
lods
mov
mov
int3
clflush
jne
or
repnz
ds
sbb
push
mov
cmp
cmc
pop
push
or
inc
mov
ret
inc
and
test
icebp
xchg
std
mov
dec
jne
push
push
into
imul
pop
xchg
test
out
out
in
iret
lds
daa
or
sbb
sbb
mov
mov
rclb
dec
xlat
mov
cmp
in
xchg
movsl
xor
adc
add
mov
das
fimull
jl
push
out
xchg
loopne
jnp
scas
inc
imul
mov
repz
jmp
popf
imul
adc
jo
dec
imul
dec
inc
subb
xchg
fsubl
dec
push
movsl
xchg
and
adc
fidivl
jo
jbe
lods
div
or
hlt
adc
loop
pop
fdivrl
lretw
add
loope
sbb
inc
xor
mov
punpcklbw
ja
cld
cmp
pop
push
sub
fcmovne
js
mov
sti
stc
pop
andl
push
add
insl
push
insb
mov
inc
std
ret
jae
hlt
aas
push
adc
push
mull
pop
mov
rcrl
mov
daa
iret
jno
mov
into
enter
out
mov
mov
ja
pop
arpl
jle
mov
pop
negl
imul
cmp
pop
cmp
imul
adc
int3
sbb
jns
mov
mov
push
sti
sahf
mov
and
mov
jo
cwtl
ss
lock
pop
hlt
cmpsl
hlt
mov
sub
inc
fisubrl
mov
sub
adc
call
sti
faddl
inc
and
pop
push
mov
lods
jecxz
aas
sahf
fisubrs
call
jae
movsl
sbb
xor
cmp
test
out
ds
xchg
insl
imul
or
dec
mov
mov
stc
mov
jge
xor
push
jge
ret
int3
les
mov
in
and
in
push
mov
shl
lcall
xor
das
jmp
sub
or
int3
aam
ret
orb
push
jge
sub
xor
addb
dec
sub
jmp
lahf
push
pop
sub
mov
leave
sbb
sti
sbb
lock
or
mov
loopne
jl
andl
sbb
fistl
or
or
jg
adc
xchg
dec
std
scas
xor
shll
pop
lahf
ror
dec
loop
clc
jns
adc
push
hlt
push
into
xor
dec
pushf
inc
lret
and
cmp
test
lahf
push
xor
inc
mov
pop
in
rorl
sahf
es
dec
xchg
call
lahf
in
sub
or
jle
xchg
test
pop
pop
testb
inc
lea
xchg
cmp
or
imul
push
xchg
daa
or
stos
jne
ljmp
push
jbe
pop
push
in
lds
and
into
jmp
mov
cmp
inc
adc
decl
pushf
jae
adc
inc
xor
iret
ja
insb
out
lcall
mov
cmp
jns
xchg
movsb
mov
repnz
dec
xchg
mov
xor
out
pop
ret
push
fcmovu
dec
or
or
icebp
cmpsb
mov
scas
sub
pop
mov
cwtl
nop
ret
or
sub
int3
mov
in
repnz
inc
movsl
repnz
mov
xor
test
cmpl
jo
js
add
inc
sbb
mov
xlat
mov
fwait
push
int3
iret
push
ffreep
dec
cwtl
ds
out
inc
scas
xchg
shll
test
dec
icebp
push
jmp
mov
mov
dec
and
mov
cmp
or
imul
or
jnp
sub
jo
cmp
xchg
jp
sbb
cmp
test
aaa
mov
out
jle
mov
lahf
sti
jmp
dec
pop
es
sbb
inc
mov
movsl
repz
sub
outsb
fwait
lods
inc
cmp
adc
sub
mov
pusha
scas
and
sahf
sub
les
aam
arpl
inc
jp
and
push
ljmp
xchg
mov
jp
icebp
hlt
adc
insl
shr
mov
jne
dec
mov
xchg
clc
adc
adc
mov
test
out
clc
sbb
xchg
or
addl
mov
mov
dec
loope
dec
mov
fdivrs
cmp
mov
int3
push
aad
add
iret
xchg
loop
arpl
or
clc
or
add
loope
push
cmpl
push
xchg
sub
xor
and
lcall
loop
mov
xchg
hlt
push
jmp
mov
push
mov
bound
and
sar
insb
cli
bound
es
sub
mov
pusha
shrl
jp
dec
xchg
xchg
jge
ljmp
dec
push
or
dec
jne
aad
and
iret
cmp
mov
addr16
ljmp
push
lcall
cmp
mov
int
std
loopne
cmpb
push
xlat
sahf
or
sti
iret
lea
stc
test
mov
out
ljmp
jno
and
push
out
pop
jo
jmp
cmp
pop
sub
xor
movsl
imul
into
mov
cwtl
sub
mov
push
inc
or
or
mov
lret
pop
push
int3
jno
dec
cmpb
pop
push
pop
cs
fistpl
inc
lcall
adc
adc
push
mov
add
decb
sub
lock
sahf
push
addr16
mov
dec
mov
sub
mov
pop
inc
enter
shrb
xchg
adc
movsb
sarl
js
cmpsb
mov
addl
cmc
insb
into
mov
into
psllq
mov
fistl
push
xor
add
es
sbb
push
fld
sub
fadds
ja
into
pop
in
lock
sbb
mov
mov
js
into
push
sbb
cmp
sub
popa
sbb
xor
jne
xchg
sub
mov
xchg
or
jg,pn
std
mov
bound
sub
outsl
outsb
fmuls
mov
test
ljmp
cmp
movsb
repz
shlb
push
cmp
iret
add
fstps
sahf
in
jae
fwait
pop
jnp
mov
xchg
or
mov
mov
and
dec
or
xchg
mov
sbb
cmp
push
rcrb
lret
xlat
in
ds
mov
mov
or
inc
lret
cmpsb
mov
jle
and
mov
pop
loopnew
and
mov
mov
and
and
cmpsb
push
adc
aas
add
xor
movntq
shrb
mov
push
dec
xor
push
insb
movsl
into
mov
pop
aam
popf
scas
adc
jecxz
mov
je
out
jnp
push
mov
pop
mov
sub
ja
xchg
mov
sbb
ficoml
ficoml
sbb
pop
inc
repnz
or
inc
or
pop
xchg
popa
outsl
fidivl
push
mov
mov
push
dec
aas
fidivl
into
xor
dec
sub
xchg
test
lods
into
insl
int
fs
sbb
pop
lods
jp
in
add
rolb
adc
rorl
ret
aam
mov
lock
arpl
cwtl
push
inc
jbe
and
out
lea
cld
imul
mov
add
xor
mov
mov
cmp
mov
lahf
mov
cs
sub
jbe
dec
mov
in
xor
pop
and
mov
dec
ret
sub
or
sarl
mov
sub
cmp
repz
lock
rcll
je
ss
dec
sbb
cmc
enter
and
fdivl
mov
mov
movsb
pop
pop
jle
add
incb
test
sub
pop
std
aam
aas
filds
push
mov
cs
jbe
call
out
add
jg
inc
pop
out
and
push
cmp
xlat
stc
arpl
int3
cmc
mov
pop
enter
jmp
popf
stos
mov
test
mov
enter
sbb
cmc
sub
out
jbe
mov
das
inc
in
sub
jmp
xor
xchg
inc
js
sahf
subl
mov
test
call
add
or
shrl
lret
lcall
adc
insl
mov
pop
mov
test
out
clc
int3
add
jmp
lods
lock
movsb
test
js
inc
in
sbb
inc
jnp
jns
push
out
xlat
xor
push
ljmp
nop
mov
sbb
jmp
lret
xchg
outsb
bnd
daa
dec
movsl
pop
jb
inc
int
push
test
push
dec
es
pop
jl
lock
lahf
mov
sbb
pop
mov
aad
fs
stos
xchg
jno
imul
aaa
je
mov
xchg
xchg
sbb
pop
sub
movsb
pop
lods
imul
sub
imulb
stos
jecxz
clc
sbb
xor
shrl
dec
mov
cmp
sarb
push
xchg
insb
orl
pop
mov
iret
dec
inc
test
mov
dec
aam
add
pop
shrb
mov
je
jecxz
movsb
mov
stc
jecxz
add
lds
push
pop
icebp
dec
mov
ss
push
shr
pop
scas
loope
sahf
push
cli
adc
sub
mov
inc
lea
mov
sub
out
enter
xchg
adc
rcrl
subl
into
shrb
mov
dec
cmp
out
add
fwait
stos
dec
jne
divb
xchg
dec
pop
clc
mov
jne
ret
pop
sub
les
push
call
pushf
int
mov
dec
add
jb
pop
test
dec
loope
xor
jge
fs
test
out
ficomps
adc
fildll
xor
inc
sub
cmp
fs
push
mov
cmp
jp
push
and
mov
out
mov
add
push
loopne
fldenv
sub
mov
mov
jmp
fstpl
sub
dec
jl
or
aad
fcmovb
xor
scas
push
pop
dec
lcall
aad
icebp
bound
xchg
mov
stos
pop
int3
insb
dec
repz
mov
sub
sub
or
or
push
push
and
dec
sbb
dec
xor
das
or
cmpsb
scas
lock
loope
arpl
xchg
xchg
negb
int
in
inc
aaa
xchg
dec
jo
mov
movq
sub
mov
sbb
adc
adc
fisttps
dec
cmp
enter
lcall
imul
mov
lock
ucomiss
sub
loopne
dec
jb
push
sti
mov
cmp
std
pop
xlat
sbbl
sub
shr
das
xor
sub
and
movsl
movsb
dec
addr16
jo
add
aas
cli
and
jbe
fisubrs
adc
mov
in
ret
into
das
cmp
test
pop
inc
mov
mov
mov
fadds
adc
dec
cmp
aam
mov
and
jecxz
in
cmp
aaa
pop
pusha
mov
push
sub
push
dec
andb
cmp
pop
jmp
xor
xchg
sbb
mov
sub
andb
cmc
out
jnp
iret
test
and
in
sbb
mov
and
lock
test
jge
xor
lods
imul
mov
jl
inc
stos
mov
jae
push
sti
jmp
and
mov
sbb
mov
cmp
adc
shll
push
arpl
ljmp
je
clc
rorb
push
adc
cwtl
xor
mov
cmp
cmp
mov
cs
mov
xor
das
mov
mov
ljmp
sub
scas
xchg
add
jns
enter
lods
outsl
das
inc
aas
js
mov
add
push
js
repz
mov
icebp
cmp
lock
sub
mov
xor
lods
mov
addr16
shlb
sub
mov
pop
lcall
jecxz
loope
adcl
push
push
pop
sbb
call
adc
inc
enter
mov
sub
mov
sbb
leave
popf
dec
out
out
mov
inc
mov
jp
in
pushf
push
sub
daa
aaa
mov
pusha
out
adc
inc
mov
dec
mov
aad
inc
inc
xchg
fidivrl
adc
jle
sahf
add
rorl
adc
mov
cmpsb
je
call
incb
and
cmp
fidivl
inc
push
movsl
aam
jl
and
out
outsl
or
fdivrp
scas
mov
aam
rorl
push
pop
sbb
xlat
leave
outsl
adc
sub
out
lret
sbb
push
test
mov
daa
sub
mov
clc
daa
jns
jns
jg
test
cmpps
aad
int3
loope
adc
lods
rcrl
mov
lods
pop
mov
sar
mov
xchg
mov
push
pop
and
and
push
push
popf
jne
outsl
ret
jle
jecxz
lret
mov
aad
test
pop
movsl
dec
sahf
into
in
add
ss
pop
lds
inc
jbe
aad
or
or
add
dec
push
scas
rorb
inc
push
pop
adc
sub
leave
femms
mov
cwtl
dec
sbb
jmp
xor
std
push
mov
sub
out
pop
mov
in
es
push
adc
pop
sbb
test
out
jp
jne
hlt
dec
jecxz
mov
std
movsl
mov
int3
in
push
rolb
rcrb
outsb
bound
lret
pop
lea
mov
cmp
add
mov
jge
xchg
dec
call
nop
add
fs
pop
push
jns
adc
push
pushl
lods
lret
fldl
mov
lret
or
out
ja
shrl
jbe
sbb
adc
fisubrs
dec
cmpsb
std
cmp
pop
pushl
outsl
adc
orb
mov
roll
push
push
pop
sub
push
dec
lock
dec
push
mov
int
mov
clc
es
push
pop
and
adc
xchg
dec
rorl
add
dec
ljmp
popf
scas
lea
push
adcl
inc
mov
mov
push
int
pop
bnd
sbb
pop
xor
outsl
mov
filds
cmc
pop
sub
jbe
das
push
arpl
dec
fiaddl
lea
dec
adc
stos
xor
or
call
or
dec
jno
and
dec
adc
jno
std
imul
push
mov
out
cmp
or
pop
sbb
xor
out
or
push
mov
cltd
pop
in
pop
rcll
aas
push
jg
rcrl
js
add
ljmp
js
xchg
neg
aam
pop
ret
aad
iret
or
fnstsw
mov
ds
sbb
or
dec
icebp
jb
jmp
ds
jmp
sbb
cmp
xor
fcoml
cmp
and
pop
imul
sbb
pop
push
xchg
add
fcmovne
and
outsl
pop
adc
fs
jno
into
mov
mov
jo
inc
push
imul
mov
test
jbe
pop
cmpsl
gs
jbe
add
ret
jo
add
stc
and
sarl
or
mov
in
loope
pop
fcomps
les
sub
lea
outsb
fldenv
sub
adc
ret
jbe
leave
inc
adc
xchg
sub
std
xor
inc
inc
pop
pop
cltd
and
scas
shlb
lods
out
test
add
insl
in
mov
shrb
insl
aam
dec
adc
pop
ret
addr16
dec
cmp
and
clc
mov
and
push
orl
cli
cmp
popa
push
call
add
sahf
adc
ljmp
rcl
imul
inc
inc
lods
mov
jns
test
movsl
arpl
in
mov
mov
adc
cmp
ret
mov
cmp
add
push
pop
inc
adc
sub
stos
or
into
std
inc
mov
lock
mov
imul
cmp
sti
jg
xor
aam
sub
jb
insl
std
je
add
jo
dec
sbb
mov
roll
ret
inc
mov
and
add
sub
jl
pusha
add
mov
cmc
pop
xchg
dec
test
ja
add
or
gs
icebp
sbb
adc
inc
pop
sbb
pop
fmuls
cmp
roll
pop
jnp
cmp
mov
inc
mov
jmp
loop
leave
push
inc
mov
jecxz,pn
outsb
cmp
add
insb
and
insl
pop
mov
push
push
das
test
iret
sbb
adc
mov
pop
push
fsubrl
push
inc
in
pop
mov
sbb
shl
sub
mov
cmp
or
inc
jecxz
mov
or
mov
iret
jp
lret
xchg
jl
pop
stos
jo
leave
jbe
mov
ljmp
add
add
out
aas
inc
mov
aas
sub
mov
data16
sarb
or
mov
lods
int
sbb
pop
int
rcrl
cmp
pop
fisubrl
xchg
xor
lret
sbb
fdivrs
mov
jmp
and
pop
sub
je
imul
pop
clc
loope
sbbb
or
push
or
fsubl
xlat
mov
pop
inc
dec
icebp
lods
inc
lods
lds
cmp
lret
nop
loope
out
adc
mov
outsl
out
jecxz
mov
pushl
jle
jae
mov
or
stos
sbb
stos
pop
sub
mov
add
andl
xor
ja
ja
or
jmp
push
pop
test
fs
push
or
and
sbb
fnsave
push
aad
mov
in
lcall
pusha
jne
fmull
cmp
cmp
lret
cmp
fwait
mov
jns
push
cmc
int
movsb
outsl
out
cmp
mov
pushf
pop
cmpsl
pop
loope
pop
sarl
shr
jno
pushf
ja
mov
mov
push
cli
insb
cmp
push
add
inc
lret
push
xor
fisubl
stos
int3
sbb
arpl
jmp
mov
les
call
out
data16
jmp
mov
testl
loopne
xchg
push
mov
cld
mov
insl
push
push
and
js
sbb
addr16
cmovge
test
cmpsl
jl
sub
shll
scas
mov
mov
rcrl
dec
pop
cmp
lods
or
sbb
test
cli
dec
sub
xchg
jns
cmp
mov
xchg
lcall
mov
call
ja
mov
cmp
pop
adc
mov
pop
jns
sbb
out
pop
mov
mov
lock
and
or
rcrb
es
xlat
push
fstpl
jecxz
imul
test
cltd
idiv
lcall
cld
or
test
cmpb
inc
mov
pop
cld
pushf
or
aam
and
lea
in
fcmovnu
inc
out
cmp
or
push
adc
lea
into
jne
leave
dec
cmp
mov
jbe
xlat
gs
jno
cmp
or
jle
out
dec
inc
xchg
pop
mov
ret
push
dec
sub
push
or
addr16
cmp
mov
addb
cmp
clc
out
and
adc
inc
bnd
mov
inc
leave
lds
xor
xor
std
sub
stos
mov
xlat
add
and
std
inc
pop
clc
dec
push
pop
pushf
rcrb
repnz
sbb
shl
push
xor
adcb
inc
mov
lcall
hlt
push
in
inc
sahf
sti
roll
cmp
jp
outsb
fbstp
fldenv
push
cmc
xlat
push
xor
pushf
xor
cmp
into
add
mov
lret
inc
adc
mov
iret
fistl
sbb
dec
mov
adc
mov
and
in
jl
adc
clc
sbb
xchg
mov
addr16
push
and
sub
fiaddl
test
outsl
fidivs
pop
psrad
mov
nop
push
js
jecxz
test
ror
out
sub
xchg
xor
mov
push
inc
mov
mov
jecxz
xlat
dec
ljmp
mov
aad
int3
adc
mov
dec
not
sub
int
sub
sti
addr16
jl
cld
and
add
out
ds
adc
jg
cmp
jge
enter
add
push
mov
cmp
aas
insb
jb
cltd
push
ja
out
pop
xor
inc
inc
call
ret
pop
push
xchg
and
or
xchg
push
lret
add
mov
xor
loopne
mov
cmp
cmp
adc
or
pushf
pop
hlt
iret
add
popf
push
cltd
or
pop
add
sbb
add
mov
je
iret
dec
mov
shll
inc
addl
lret
pop
or
cmp
jmp
lahf
fdivrp
andb
sub
mov
push
cmp
adc
aam
cmpsl
xchg
imul
and
mov
mov
mov
sub
popa
pop
scas
jle
jb
fwait
add
fiadds
cmpb
mov
mov
or
xchg
negb
lcall
mov
xchg
div
sub
or
mov
pusha
or
sahf
sbb
data16
xchg
jae
pop
lods
push
lds
lret
cmpsb
insb
dec
jbe
cwtl
jle
jmp
test
and
push
add
shlb
icebp
into
shll
push
inc
xchg
inc
mov
xchg
xor
into
mov
daa
dec
mov
es
or
popf
jb
lods
jl
call
stc
mov
jecxz
push
inc
cmp
lret
mov
mov
leave
loop
arpl
bound
rorb
or
fstl
add
stos
adc
cltd
xchg
bound
orb
insb
push
int
push
mov
div
fwait
or
mov
loopne
std
jbe
lods
daa
inc
sarl
test
stc
rcll
mov
loope
lret
in
or
pop
inc
jp
inc
mov
mov
jnp
aam
leave
lock
inc
sub
dec
add
test
mov
shrb
test
fldenv
or
addr16
jle
outsl
sub
adcb
cmp
andb
cli
xchg
and
repnz
ljmp
lock
in
pop
mov
arpl
stos
das
test
mov
inc
addr16
data16
mov
pushl
mov
mov
add
lods
mov
aad
pop
out
loop
push
xor
sub
js
mov
daa
jl
jmp
mov
insb
aaa
adc
jecxz
and
jle
xor
mov
and
fs
or
rcrl
jle
aad
pop
ss
jecxz
jle
hlt
sbb
mov
mov
and
js
cmp
scas
mov
add
mov
fnsave
rol
mov
cld
aam
sub
ret
push
scas
xchg
shrb
xlat
jb
popf
add
repnz
lea
xor
icebp
aam
mov
ret
sbb
fdivrs
loop
test
sbb
clc
int
scas
adc
jle
inc
pop
fwait
inc
mov
nop
stc
mov
popf
in
pop
ret
jno
cmp
and
xchg
cmpsb
popa
or
mov
inc
and
mov
push
adc
orl
cwtl
jge
mull
mov
popf
jmp
loope
mov
lret
xor
mov
adc
or
adc
or
pop
mov
outsb
popf
cmpsb
ds
sbb
add
out
jecxz
aas
mov
stc
sub
js
add
push
inc
xor
hlt
and
arpl
mov
jmp
pop
push
xor
adc
iret
cmp
jbe
jb
ljmp
out
mov
push
pop
into
mov
mov
cmp
xor
hlt
inc
shlb
dec
mov
pop
lods
fwait
ja
push
cmpl
dec
push
int
xlat
xchg
jge
lret
pop
and
into
movsl
xchg
mov
in
cwtl
cmp
dec
test
xor
push
sub
mov
test
mov
dec
inc
test
sub
xor
lock
and
loope
aad
shlb
fstl
rolb
push
jnp
or
out
in
pusha
add
pop
int3
xor
pop
jo
add
shll
push
sbb
enter
lahf
pop
test
not
imul
xchg
fscale
gs
in
push
pop
push
push
add
lds
jns
fs
pop
pop
and
jbe
cmp
dec
mov
imul
lcall
sub
idivb
and
push
ljmp
bound
adc
stos
test
or
std
bound
push
adc
sub
xor
push
in
gs
sahf
lea
stos
arpl
into
repz
mov
xchg
mov
outsl
gs
xchg
in
cmpl
xchg
inc
and
xchg
leave
aam
in
imul
mov
cli
xchg
test
or
hlt
jg
and
mov
xchg
or
lret
popl
js
or
adc
pop
ss
sarl
shrl
mov
cli
or
shl
cmp
scas
stos
mov
loopne
pushf
mov
lcall
push
aaa
loope
mov
addr16
mov
data16
cs
mov
mov
push
mov
rcll
loop
mov
xor
mov
xchg
sbb
add
xor
test
pop
mov
xlat
inc
mov
or
pop
dec
lds
push
add
inc
xor
pop
push
sti
pusha
cmpsb
in
test
pop
sub
fistpl
pop
popf
pop
dec
pop
jg
sbb
clc
in
pop
sti
add
fldt
cmc
stos
scas
dec
jmp
push
jl
xchg
jnp
sbb
lods
adc
aad
dec
push
sub
stos
lahf
in
jb
jp
adc
pop
cld
inc
pop
pop
and
cli
outsb
cmp
rcrl
lds
mov
gs
mov
ds
fwait
push
in
imul
scas
sarl
mov
jmp
aad
les
mov
jecxz
mov
scas
mov
cmpsl
imul
xchg
dec
cltd
sub
lods
insb
js
xchg
jnp
adc
clc
inc
pop
or
pop
cmp
inc
jmp
jle
xchg
mov
sbb
aad
mov
popf
mov
sbbl
mov
cld
mov
xor
in
cmpsb
pop
jge
and
stc
pop
inc
das
pop
cmc
xchg
push
push
adc
addl
push
sub
mov
frstor
enter
and
mov
mov
std
fidivs
pop
inc
aam
jne
jecxz
rol
jns
sub
rorl
push
clc
add
dec
data16
push
sbb
push
leave
out
mov
ss
in
mov
sbb
ret
shlb
adc
mov
xor
mov
loop
xor
lea
sti
rolb
insl
pop
ljmp
cli
mov
mov
cwtl
mov
xor
xchg
rol
ss
cmpsb
mov
bound
mov
add
fsubrp
xchg
cld
and
or
dec
push
iret
xorl
test
and
lret
movsl
jb
fs
xchg
aaa
outsl
sbb
push
fmulp
js
icebp
xor
fidivs
cmpsb
test
or
inc
sub
sub
movsl
pusha
pushf
jle
add
shll
xchg
xchg
add
lret
dec
in
test
jecxz
xor
adc
add
pop
or
or
rcrl
mov
lret
push
jg
push
inc
repnz
xor
sahf
bnd
push
mov
hlt
jg
push
cmpsb
mov
or
xchg
pop
xchg
and
daa
in
dec
push
ljmp
lcall
pop
adc
in
out
sbb
es
jns
sti
inc
iret
loope
lcall
jne
cmpsl
orb
int
add
icebp
and
push
sub
test
les
push
outsb
fs
in
loope
mov
fistpll
add
push
ficomps
xchg
or
jb
shrl
fildl
int
or
add
std
fwait
rep
cwtl
push
out
pop
clc
adc
fistl
or
js
lea
or
sbb
insl
jns
les
mov
xor
cmp
add
addr16
int
mov
dec
mov
jmp
mov
jmp
or
and
imul
repnz
rolb
jb
gs
movsl
out
pop
insb
jno
and
rolb
hlt
bound
adc
push
push
adc
dec
pushl
leave
int
inc
mov
dec
cmp
xor
adc
sbb
dec
push
test
aam
add
pop
es
test
push
leave
pop
pop
mov
pushf
ds
or
jo
xor
jno
enter
dec
push
cs
push
mov
sub
orl
push
in
pop
lcall
lcall
aaa
imul
mov
push
xchg
or
mov
mov
lcall
arpl
push
fndisi(8087
js
decb
and
lahf
sbb
inc
iret
xor
shrl
repnz
and
pop
jne
add
add
scas
cmc
std
lahf
mov
push
mov
test
sbb
pop
xchg
test
push
leave
sub
ss
out
orb
ret
es
std
addb
aas
fdivs
cltd
test
into
incb
pop
aam
daa
jbe
inc
data16
ljmp
hlt
push
test
dec
mov
add
sbb
ret
lods
adc
cli
push
lock
int3
leave
aad
and
leave
fistpll
jecxz
call
jp
jo
add
jae
inc
testb
jb
cmp
call
jge
sbb
push
out
push
std
pop
push
cmp
addr16
push
mov
outsl
pop
repz
sub
out
push
adc
or
add
mov
cmp
fs
or
mov
cmpsl
xchg
and
in
ficoml
mov
or
pop
pop
decl
fst
mov
ss
or
or
shll
jbe
roll
push
rclb
jg
and
popa
or
dec
jl
stos
xchg
mov
mov
jmp
mov
addl
in
popf
ljmp
cmp
std
mul
inc
out
pop
dec
in
stc
js
xchg
loop
mov
lea
loop
lret
pop
inc
insl
pop
xchg
dec
lods
xchg
fists
fcmovnu
loope
jge
addr16
stc
cs
dec
dec
adc
mov
cmp
movb
mov
test
aad
mov
add
in
gs
in
jecxz
sub
out
and
xchg
xchg
push
pushf
sub
daa
add
inc
loop
roll
das
lods
pusha
adc
push
popf
jmp
loop
scas
popa
xor
faddp
xor
jmp
rorl
and
jecxz
push
pop
out
aas
cmp
sbb
cmp
adc
pop
jle
push
cltd
cmp
imul
std
or
lods
and
xor
ret
shl
clc
inc
popa
push
rcl
push
xchg
gs
xchg
loop
ficompl
adc
jmp
fsubrs
in
add
pop
cmp
jne
stos
push
mov
in
jae
inc
mov
insb
push
hlt
jno
mov
add
ljmp
or
dec
or
inc
adcb
dec
in
and
push
gs
and
cmc
pop
fistl
das
inc
cmpl
xchg
push
or
fbstp
pop
shrl
dec
fisttpl
test
or
sbb
adcl
mov
xchg
push
sarl
insl
shll
xor
jnp
mov
cmp
cli
fwait
popf
add
and
in
sbb
mov
xor
sub
push
test
mov
xchg
jecxz
movsb
cmpsl
dec
sub
rorb
xchg
sbb
fildl
or
cmp
sbbb
repz
jbe
xor
sub
adc
int
ret
int3
xchg
rorl
rcll
daa
xor
xor
and
lcall
and
daa
push
popa
fmull
test
in
adc
aas
xor
fnstcw
xor
call
xorb
mov
jno
ljmp
sub
out
mov
lds
shrl
movsb
ss
jl
mov
lods
repnz
xchg
add
xor
xor
out
lds
ds
fucomp
and
loop
xchg
push
pusha
inc
iret
outsl
fs
idivl
mov
cmpsl
pop
push
push
push
adc
mov
lahf
das
xorl
repz
add
xchg
shlb
mov
jb
jbe
popa
leave
jecxz
mov
hlt
sti
push
nop
adc
std
pop
mov
xor
rcr
mov
test
xor
fs
inc
cltd
xlat
leave
sub
lds
out
jge
enter
mov
xlat
mov
addps
dec
dec
stos
adc
fldcw
pop
inc
or
inc
loope
pop
pushl
mov
fdiv
stos
xchg
leave
sub
lock
jbe
test
adc
inc
in
aas
shl
cmp
inc
or
aas
mov
hlt
and
dec
js
loope
or
and
xlat
pop
push
cwtl
cmp
stc
adc
fs
jmp
in
scas
jns
push
movsl
xor
mov
mov
daa
mov
jnp
pop
cld
inc
mov
in
cwtl
cli
push
faddl
fnstcw
std
test
aad
or
jno
push
mov
mov
sti
rcl
fimuls
xor
cld
inc
push
cmpb
ficomps
shl
sbb
adc
imul
sbb
popf
loop
xor
jmp
lret
and
jbe
or
dec
push
jae
iret
out
imul
pop
xchg
cld
dec
cli
sub
inc
dec
fistpll
call
cwtl
xor
jmp
in
dec
cwtl
icebp
subl
or
call
add
push
lds
pop
fadd
enter
jmp
mov
and
scas
xor
mov
call
push
cltd
adc
push
xor
divl
add
cmpl
mov
cmpsl
mov
xor
jle
add
inc
out
adc
test
cmp
test
shrb
dec
adc
popa
cmp
sub
movsb
xchg
jecxz
rcr
int
stc
iret
fidivrs
jnp
lcall
xchg
rolb
fdiv
mov
jg
mov
repz
cmp
std
mov
das
jno
mov
mov
sbbl
js
push
dec
data16
jae
mov
aam
mov
jno
add
add
ret
jecxz
jle
push
dec
xchg
cmpl
lds
cli
rcrl
in
jecxz
repz
subb
stos
cmc
xor
push
ljmp
outsl
or
pop
mov
fs
cmp
shlb
test
xor
xchg
cmp
push
gs
and
cli
jns
in
xchg
mov
jge
xchg
pop
inc
in
repz
and
outsb
jno
sub
stos
and
mov
sarl
push
pop
mov
test
jmp
jns
sarl
jnp
sub
shrb
ficompl
mov
adc
icebp
shlb
sbb
aam
aas
push
inc
lret
cltd
ja
xor
mov
or
sbb
or
pop
jnp
sub
add
inc
xchg
sub
sub
cltd
imull
pop
jmp
sub
push
out
sar
mov
repnz
rorl
insb
shr
inc
xor
jp
fadds
xchg
lret
sti
xor
sub
fidivs
mov
add
aad
sbb
xor
and
mov
incl
int3
jecxz
aam
pop
jl
jns
jp
add
gs
cwtl
negb
pop
in
in
xchg
inc
aam
cmp
adc
push
xor
repnz
cmc
jb
and
xchg
subb
sarb
outsb
lods
stc
xor
sbb
out
in
jb
or
add
mov
mov
mov
adc
lahf
pop
sti
test
addr16
sbb
cs
cltd
rcrl
lret
pop
divb
lock
mov
sbb
lret
xchg
lcall
jg
mov
lods
inc
int3
rorl
fisttpl
aas
fmuls
outsl
jne
fsubrp
fisttpll
in
and
adc
gs
out
fcomps
sbb
push
adc
mov
outsb
addr16
ret
ret
push
push
icebp
xchg
enter
mov
mov
mov
mov
adc
sub
pop
fcomps
xchg
xor
pop
ret
out
adc
fstpl
fs
jge
adc
and
iret
insb
pop
cmp
rcrb
adc
shlb
push
call
stos
add
mov
aam
bound
mov
lock
pop
aam
notl
enter
mov
mov
cli
xchg
mull
xchg
lret
jl
inc
xchg
call
testb
daa
paddsw
adc
cwtl
inc
push
les
movsl
and
dec
ret
faddl
sbb
add
mov
xchg
sahf
pop
nop
push
mov
idivl
mov
loop
out
push
mov
sbbl
pop
mov
imul
dec
push
dec
or
xchg
repnz
imul
mov
addb
xchg
dec
aad
ja
rorl
jbe
jns
mov
dec
imul
data16
add
or
mov
push
aaa
ret
or
inc
mov
clc
mov
movsb
rolb
in
sub
nop
xchg
test
mov
mov
inc
fcoml
and
hlt
mov
fiaddl
int3
cmpsl
pop
add
or
rorl
inc
faddl
loope
push
mov
push
mov
pop
push
pop
dec
arpl
push
jae
mov
dec
aas
mov
fildll
dec
out
mov
int
cmp
shl
andl
sbb
int
pop
insl
adc
fs
jge
push
jne
add
push
push
or
loop,pt
cmpsl
inc
outsl
add
push
test
ss
xchg
mov
fs
push
cmp
xlat
arpl
leave
mov
xor
mov
rcrb
cmpb
jl
cmpsl
lds
adc
sbb
mov
sub
insl
pop
cmp
cmpsl
aam
rcrb
mov
inc
imulb
int3
jno
fneni(8087
out
jg
add
mov
adc
je
cmp
je
fisubrs
gs
lcall
and
out
mov
out
jl
dec
pop
fstl
out
sar
and
xchg
xor
xchg
popa
pop
xchg
pop
divb
inc
xchg
imul
loope
jp
sbb
test
out
fprem
outsl
pusha
and
mov
pop
jg
in
xchg
jmp
fwait
bswap
in
sub
xor
popa
pop
and
mov
jecxz
push
mov
out
cmp
movsb
cld
xchg
push
add
xchg
xchg
addr16
fstl
mov
add
jns
test
pop
jl
mul
fildl
sbb
jbe
mov
jecxz
and
cld
jle
fmuls
mov
sub
mov
in
inc
sbb
aas
rclb
jns
sub
push
sbbl
push
xor
pop
and
mov
dec
jmp
test
cmpb
xchg
stos
repz
push
cmp
dec
xchg
inc
sbb
or
std
mov
cmp
test
xchg
ficoml
mov
sbb
pop
popa
or
lret
dec
rcrl
popf
pop
xor
xor
hlt
and
sahf
push
adc
das
dec
mov
xor
pusha
aad
pop
cld
mov
movsb
sbbb
add
xchg
mov
push
adc
adc
jae
cmp
pop
add
imul
xor
fs
mov
inc
mov
fcmovnbe
les
cmp
cmpl
dec
push
push
aas
xor
into
lahf
xchg
negl
jmp
test
add
in
test
pop
or
andl
mov
mov
in
cmpsb
and
loope
sbb
movsl
xchg
repnz
xchg
adc
xchg
ja
jecxz
fmulp
test
int
lret
mov
sub
mov
imul
dec
test
cli
int
cltd
xorb
pop
mov
xchg
aas
jo
inc
pushf
jp
hlt
adc
jb
pop
push
adc
lock
test
mov
or
int3
inc
jp
sub
nop
sahf
outsb
es
cwtl
js
mov
fnstenv
xor
push
dec
and
and
mov
push
into
fwait
sbb
sbb
add
push
push
ja
xchg
xlat
fistps
mov
pop
inc
imul
sarl
mov
jecxz
into
sbb
into
popf
add
gs
nop
jle
jmp
mov
add
repz
push
adc
jns
push
hlt
mov
les
bound
leave
in
cs
xorb
sarl
cmc
xor
mov
jle
xchg
cmp
sbb
push
mov
adc
add
mov
xor
or
enter
inc
imul
cmc
sarb
mov
mov
arpl
mov
jnp
xchg
cmp
filds
popa
mov
mov
in
aas
xor
lea
jg
sub
addl
fs
out
clc
push
test
iret
rclb
lock
add
adc
sbb
out
popa
ljmp
lock
xor
sub
loope
outsb
scas
out
dec
mov
xchg
adc
mov
int3
mov
and
and
inc
cmp
pusha
jns
mov
inc
in
mov
loop
je
dec
fistpll
jo,pn
fstpt
dec
add
roll
mov
push
outsb
idivl
mov
jmp
in
movsl
xor
adc
pop
xor
sub
push
mov
fsubrs
js
cmp
jbe
call
repnz
add
testl
adc
mov
mov
sbb
xor
aam
das
push
out
pop
mov
mov
and
mov
outsl
addl
pop
movsb
insl
jnp
push
dec
js
pop
adc
enter
sub
out
ficoml
add
pop
int3
add
adc
push
xchg
mov
dec
pop
fwait
xchg
shlb
push
dec
lcall
and
fsubrs
jecxz
pop
push
pop
inc
xor
movsl
and
sbb
cmp
sbb
sbb
das
or
ficoml
test
lret
and
push
imul
inc
or
out
call
sub
cmp
dec
add
mov
push
iret
pop
lods
pop
dec
js
sbb
rol
hlt
mov
jns
jnp
cmp
cmc
pusha
or
lock
icebp
cmpsb
fstpt
lcall
jle
imul
mov
inc
jg
and
mov
pop
scas
jno
adc
jmp
mov
cmc
test
je
push
shll
cmp
pop
in
clc
pop
jnp
imul
sbb
push
mov
adc
out
enter
xchg
gs
dec
sti
or
xor
xchg
push
loop
ficoms
insl
push
jl
xor
xchg
cmp
ret
cmp
das
push
xchg
scas
leave
js
cmp
sbb
popf
cmpsl
jmp
inc
mov
xchg
stos
mov
mov
and
xlat
ds
mov
lahf
push
cmp
sbb
cmp
loop
addl
jno
cmpsl
mov
dec
and
cli
leave
repnz
call
push
or
sub
sbb
sti
cld
jae
pop
daa
repnz
outsb
push
inc
test
jns
pop
inc
lods
pushf
cmpsl
push
push
lret
mov
dec
movsb
test
xor
jns
scas
lret
cmp
mov
ret
paddsw
push
jns
jnp
sub
shrl
jb
rcrl
lcall
out
cwtl
mov
mov
push
daa
mov
lods
repz
rcrb
xchg
xor
sbb
cmc
daa
mov
aam
add
loope
test
movsl
xor
or
mov
insb
pop
inc
or
add
jno
jbe
out
push
push
xchg
lods
aam
hlt
and
dec
add
push
movsb
jne
arpl
jo
push
mov
mov
cmpsl
test
loope
outsl
pusha
mov
icebp
icebp
cwtl
jle
rcr
push
aam
outsb
cmc
call
fsubl
xor
push
ds
repnz
inc
lcall
inc
cmpsb
mov
jne
push
adcl
mov
and
fnstcw
sti
sbb
movw
ret
push
sbb
cltd
mov
inc
pop
push
stc
mov
add
rorb
cmpl
ja
push
mov
loope
addr16
in
lods
push
inc
int
loop
jg
mov
hlt
dec
mov
adc
cmc
daa
and
add
dec
loopne
xchg
daa
sbb
add
test
ja
pop
push
imul
int3
mov
pusha
in
inc
or
cmp
sub
sub
pop
das
adc
and
lods
mov
aam
xchg
push
or
inc
xor
fsubrs
mov
gs
lock
jns
stos
mov
ss
jae
cmp
popf
sti
or
fistpl
adc
add
pushf
outsb
cltd
sub
inc
inc
std
sub
cmpsl
add
jp
rolb
gs
adcb
enter
arpl
mov
dec
ja
pop
lahf
mov
jmp
add
iret
data16
lock
mov
fmuls
xchg
dec
mov
jns
in
mov
stos
pop
repnz
sbb
js
mov
iret
add
xor
loopne
dec
and
cli
cmpsb
jb
xchg
push
addr16
test
sub
mov
bound
js
fstpl
loopne
popa
in
inc
jmp
insb
cmpsb
clc
outsb
push
xor
cmp
movsb
sbb
hlt
lods
stos
inc
adc
movsb
scas
pop
sub
dec
jne
mov
daa
pcmpgtw
push
daa
fmuls
or
jg
frstor
xchg
sbb
sti
in
cmp
push
ljmp
cld
pop
sahf
mov
push
ja
scas
cs
subb
and
xor
fwait
pop
mov
push
cmpsb
sbb
inc
rorl
mov
adc
push
in
scas
imul
loop
divl
jo
xor
in
imul
repz
add
inc
xchg
lret
sbb
dec
movl
repz
mov
loop
mov
push
add
jle
or
pop
adc
loope
adc
xchg
add
push
push
inc
arpl
into
xchg
sbb
inc
into
test
out
xchg
cmp
daa
jmp
pop
stos
int3
je
add
jp
aad
mov
fwait
lock
imull
xlat
mov
xor
pop
andl
pushf
pop
add
or
cmc
cmc
iret
std
in
jae
insb
in
push
ljmp
std
mov
mov
insb
pop
mov
incb
xor
movsl
jns
test
mov
shrl
pop
push
adc
cld
aas
out
cld
adc
mov
pop
int3
xor
push
aad
pop
inc
inc
add
mov
mov
addl
lret
cmpsl
repz
out
out
shlb
out
mov
sbb
pop
rorb
popa
stos
xor
in
mov
jmp
daa
out
pop
punpckhdq
ret
sub
xchg
sbb
sub
rcrb
push
stc
aam
lods
movsb
cltd
int
mov
push
popa
jbe
in
sar
inc
pusha
lret
lcall
imul
cmp
fs
mov
xor
sub
mov
and
mov
dec
insl
in
stos
fndisi(8087
push
mov
xor
cmovns
addr16
hlt
sub
shll
fs
xchg
inc
mov
aas
cmp
shrl
jl
jno
mov
adc
mov
xchg
fisubl
dec
lock
adc
mov
roll
mov
cmpsb
cld
adc
mov
movsb
dec
cmpsb
xchg
in
jge
pop
jl
fbld
cmc
pop
xchg
and
aaa
gs
jg
fwait
jecxz
arpl
arpl
ror
push
jnp
lds
push
fisttpl
ret
out
ss
or
aas
std
movsb
mov
xchg
test
mov
hlt
sbb
or
xor
sbb
fldl
cmp
push
and
lods
mov
out
jmp
inc
and
add
mov
cmp
add
pop
into
mov
push
movsl
dec
mov
mov
nop
adc
mov
lea
imul
int3
mov
or
adc
movsb
mov
ret
out
nop
xchg
push
and
cs
and
test
dec
pop
lods
mov
mov
push
xor
or
add
lret
clc
insl
jo
lcall
pop
and
lods
inc
es
and
sarb
cmp
sbb
add
int
lods
or
insl
arpl
xchg
cld
adcb
je
dec
cmp
cmp
popf
adc
inc
icebp
push
mov
mov
bound
icebp
cmp
scas
push
inc
cli
cmp
in
mov
jbe
mov
dec
jl
stos
les
scas
and
movsb
mov
mov
pop
iret
cwtl
mov
or
aam
jg
fsts
push
sahf
cli
jl
mov
fidivs
enter
ljmp
sbb
mov
popa
cmp
into
push
mov
bound
sbbb
mov
popf
mov
sbb
push
pop
pop
sarb
cmpsl
mov
inc
xor
dec
mov
dec
jae
push
loop
ds
sbb
test
aam
lret
sbb
sti
mov
cmp
imul
stos
sbb
push
scas
dec
ss
shl
filds
outsl
mov
hlt
fildl
lock
cmp
jne
in
cmp
or
xchg
push
inc
out
fs
or
fdivrl
sbb
leave
sub
sub
mov
sti
sbb
or
mov
inc
and
outsl
and
sub
popa
insb
icebp
jecxz
xchg
cmpsb
jae
movsb
xchg
dec
mov
in
mov
mov
test
out
pop
jo
sub
xchg
rorb
ret
mov
adc
imul
mov
call
jnp
xorb
push
mov
lahf
ljmp
sub
out
testl
hlt
mov
adc
repz
jne
enter
add
stc
push
out
daa
in
aaa
xchg
lcall
mov
je
adc
xchg
dec
cmp
ljmp
jmp
aad
dec
insb
in
push
in
jp
mov
mov
sar
jg
add
mov
sbb
outsl
cmpsl
mov
ffreep
stos
adcb
pop
rcrl
aaa
stos
movsl
out
pop
test
push
pop
repnz
push
mov
faddl
jno
cmpsb
push
fsubs
fs
inc
mov
or
clc
sbb
scas
mov
jno
cmc
testb
lret
inc
cmc
lcall
push
daa
cmp
rcr
pop
jnp
adc
xchg
cwtl
bound
mov
scas
sbb
fwait
aam
pop
sub
test
outsl
pop
push
js
loop
leave
and
insl
xor
lahf
aam
lea
mov
nop
scas
sbb
mov
movl
aad
stos
test
sbb
lret
cmp
cwtl
sbb
jbe
pop
mov
cwtl
mov
sbb
mov
push
mov
rcrl
sub
push
mov
add
rcl
outsb
lods
mov
int
shl
adcl
jge
ficompl
xlat
xor
sub
cltd
xchg
mov
out
mov
xchg
in
mov
sbb
into
and
stos
xchg
loopne
das
pop
fidivs
push
rol
jbe
xchg
adc
addl
aaa
aaa
mov
mov
outsb
xorb
das
add
push
cmpsl
dec
inc
push
fbstp
outsb
add
mov
outsl
push
mov
adc
idivb
pop
cli
outsl
mov
test
sbb
cmc
mov
xchg
xor
enter
fidivrs
test
jne
dec
rcrl
add
pop
cmp
pop
cmp
adc
xor
push
cltd
push
jmp
movsb
lods
test
dec
xor
pushf
xlat
loop
mov
jb
xlat
inc
cs
les
negl
xchg
and
in
dec
inc
je
lahf
xor
lret
not
sub
outsb
sbb
xor
cltd
xor
push
in
pusha
cmp
mov
mov
pop
jp
or
pop
xchg
cmp
push
test
pop
stos
lods
mov
sahf
idivl
jnp
je
xlat
das
int
cs
fiadds
popf
inc
mov
push
dec
and
outsl
mov
push
test
sbb
sbb
fisubl
and
add
mov
push
sbb
into
jnp
in
movsb
nop
sub
mov
sbb
adc
cmp
adc
das
scas
imul
mov
adc
xor
ret
ljmp
dec
aad
mov
adc
outsb
imul
ds
xchg
pop
fdiv
and
bound
roll
inc
cltd
loopne
mov
out
lea
scas
push
rcl
hlt
xor
mov
in
mov
mov
lods
in
sbb
ret
adc
push
test
xchg
jb
aad
rorl
mov
xor
sbb
jo
push
jle
test
pop
xchg
jnp
pop
xor
out
aam
sarl
mov
add
jp
outsl
mov
jno
nop
cs
push
ja
das
sbb
rcll
jnp
lcall
xchg
xchg
mov
push
dec
lea
jb
sbb
adc
cmp
pop
testl
pop
and
call
mov
fadd
sbb
js
pusha
jno
data16
add
dec
add
imul
push
loop
jl
fidivrl
mov
pop
filds
sub
dec
xor
in
enter
xchg
es
out
jb
ret
imul
test
in
jno
and
pop
imul
outsb
dec
pop
xor
inc
arpl
or
andl
aas
sub
jecxz
sub
lods
les
je
mov
jne
in
cld
cmp
adc
scas
sub
aaa
hlt
or
push
sbb
icebp
pop
xchg
sbb
and
daa
stos
jnp
repz
sub
push
nop
shrl
pop
xchg
lods
aas
aad
sub
xchg
lea
inc
xor
jbe
mov
js
aaa
push
cmpsl
xchg
or
push
lfs
xchg
mov
shl
jnp
mov
and
fimuls
cltd
bound
jecxz
arpl
fcomps
pop
sub
jge
adc
filds
add
cltd
cmp
insb
sbb
mov
rclb
jns,pt
jp
cmp
pusha
adc
xor
jmp
hlt
arpl
mov
mov
outsl
xor
push
mov
push
std
mov
scas
dec
leave
loop
outsb
addr16
subb
push
sub
pop
lcall
iret
cmp
xor
adc
sbb
iret
bound
adc
and
jmp
cmp
je
das
mov
inc
mov
rep
mov
add
lods
insb
stos
dec
push
gs
and
fcoms
and
stc
or
inc
jno
clc
andl
cwtl
scas
jmp
cmc
aam
orl
inc
add
or
shlb
inc
cwtl
daa
loop
sbb
rorl
stos
jb
dec
push
xor
sub
aad
data16
sbb
dec
int3
rcll
inc
std
cmpsb
aad
xchg
and
mov
sbb
out
add
dec
adc
cld
loopne
test
popf
mov
mov
inc
cmp
inc
lcall
sub
bound
aad
sbb
sarb
or
jmp
mov
xor
sub
mov
pop
fnsetpm(287
inc
xchg
or
cmp
fwait
inc
int3
push
add
mov
jne
inc
test
fidivrs
sahf
dec
mov
rcl
sub
icebp
test
jge
in
test
test
add
mov
push
inc
inc
sub
call
mov
push
adc
scas
jno
fisubl
out
adc
xchg
ss
xor
loopne
add
fmull
ds
mov
dec
mov
inc
test
pop
movsb
sbb
xor
jb
add
add
jge
repz
xchg
mov
xchg
mov
sbb
lret
in
push
aad
test
and
ljmp
sahf
fistpl
lcall
mov
fists
jae
mov
push
out
jbe
movsb
mov
es
rorl
arpl
sahf
sbb
stos
stos
movsl
cld
rol
ret
inc
fmull
frstor
mov
popf
es
jmp
scas
cmpsl
adc
jg
stc
std
mov
das
mov
in
dec
add
mov
fwait
sbb
mov
mov
outsl
scas
loop
pushl
xor
stos
mov
sarl
jmp
inc
or
mov
pop
stos
shl
lahf
add
pop
xor
pop
sbb
pusha
inc
dec
xchg
insl
xchg
mov
xchg
in
add
pop
pop
dec
sub
add
pop
cmp
stos
push
jge
bound
jne
pushf
fisubl
lods
add
dec
dec
sub
pop
mov
clc
pop
cmp
div
daa
in
es
xchg
hlt
iret
dec
ds
incl
cmpsb
pop
push
out
leave
and
mov
cmp
adc
loopne
inc
jmp
adc
xchg
fbld
push
lret
fnsave
jle
mov
mov
insl
lods
cmp
lahf
std
lret
fs
insb
fcomps
nopl
push
jae
cmp
lea
mov
sub
adc
and
or
jl
negl
dec
sahf
jb
jmp
lods
jmp
in
ds
and
push
mov
cmp
ss
add
mov
mov
inc
fnstcw
cmpsb
sub
inc
mov
pop
stos
or
aad
cs
fldcw
les
and
add
inc
lods
adc
pusha
fistpl
xor
or
aas
icebp
inc
insl
in
mov
loope
jnp
out
xor
shlb
repnz
lods
pop
lods
imul
or
es
inc
pusha
xchg
sub
pop
lret
and
xlat
xchg
loope
xchg
loopne
movsb
xchg
adc
xor
addb
xor
adcb
add
mov
icebp
lock
adc
push
inc
cmp
pop
cs
pop
jnp
fldenv
outsb
repnz
jp
mov
ljmp
jo
xor
jle
cltd
pushf
or
xchg
jno
jecxz
fisubrs
aam
pushw
std
out
into
push
adc
dec
sbb
jae
lret
push
inc
out
push
lods
lea
mov
sub
mov
or
adc
xchg
neg
jl
pop
ret
sub
scas
mov
sbb
lock
mov
stc
push
push
sahf
ss
pop
pop
mov
lods
and
xchg
in
cld
xlat
in
lea
jb
push
mov
mov
pop
xchg
push
iret
std
xor
add
pop
push
cmc
and
mov
fstcw
aad
pop
adc
dec
fcmovne
stos
in
pop
add
mov
jb
outsb
outsb
lock
push
lods
pop
pop
icebp
or
xchg
es
add
push
push
clc
ret
sbb
pop
jle
inc
mov
jmp
sar
inc
pushf
rclb
imul
clc
jno
cmp
std
in
leave
mov
xchg
sub
add
sbb
imul
or
rorl
adc
push
xchg
pop
into
flds
pop
fdivl
inc
dec
xor
int3
jl
jns
inc
xchg
into
inc
mov
mov
xchg
xchg
in
aaa
mov
jg
popf
mov
inc
jl
and
jne
mov
dec
fs
adc
pusha
outsb
and
jb
adc
add
mov
mov
loopne
mov
xor
orl
pop
pop
mov
int3
xchg
das
mov
pop
xchg
pop
mov
mov
cld
adc
xchg
sarl
mov
mov
push
je
pop
mov
xchg
xchg
data16
hlt
rdtsc
xchg
push
jae
mov
pop
ret
in
cld
cmp
adcl
xchg
pushl
int3
test
adc
cld
shr
dec
dec
add
mov
ret
icebp
pop
xor
insl
loopne
pushf
pushf
xchg
test
enter
aad
out
inc
mov
popl
leave
insl
mov
sbb
pop
ljmp
jecxz
jb
dec
fidivl
adc
adc
pop
ss
fcomps
lock
sbbl
xor
dec
jbe
jecxz
mov
movsb
mov
jo
jns
pushf
and
outsb
ja
pop
das
stc
sbb
jns
pop
sahf
data16
loope
push
cmp
push
hlt
nop
insb
inc
test
or
mov
dec
push
cltd
sub
sbb
daa
or
ds
addl
fisttpll
and
jns
arpl
mov
pop
mov
andl
jmp
pop
movsb
jnp
lcall
out
sub
les
push
pop
mov
insl
push
sahf
pop
les
inc
mov
cmp
mov
pop
sbb
mov
jge
rol
out
jg,pn
mov
imul
test
repz
or
cmpl
mov
xchg
xor
sbb
jo
mov
out
inc
ds
scas
push
push
js
inc
adc
dec
cwtl
xor
push
sub
dec
dec
or
xor
sub
mov
mov
je
js
mov
xor
jge
popf
testb
enter
dec
insb
stos
mov
jae
push
addr16
in
stos
popa
jge
orl
sbb
cmp
ss
adc
sbb
popa
xor
outsl
ss
add
push
jae
xchg
adc
dec
jb
dec
sbb
lock
pop
lea
xchg
into
sbb
insl
push
push
fildl
jg
xchg
add
pusha
push
mov
cld
stos
lcall
imul
adc
fisttps
dec
jle
push
sbb
leave
add
inc
lret
sti
lcall
lods
push
and
lcall
out
in
inc
insl
push
into
mov
popf
sbb
xchg
adc
aas
cmp
inc
loopne
or
and
dec
pop
push
aas
dec
dec
out
push
xlat
fmull
push
loopne
adc
and
sub
in
push
movsb
iret
scas
mov
in
jl
lret
mov
add
mov
mov
popl
jmp
push
or
mov
lods
out
add
sub
and
mov
xchg
ret
pushf
cmp
rclb
rclb
and
mov
push
cmc
bound
daa
fdivr
jne
mov
jp
stos
mov
or
inc
mov
push
adc
pop
xchg
mov
fs
std
jns
push
cmp
shr
fs
lret
test
lods
lret
jb
clc
fcoms
jb
mov
ljmp
aas
inc
xor
ficompl
or
adc
mov
in
dec
mov
jae
mov
xchg
pop
loopne
fisttpll
in
jl
test
je
pop
xor
dec
add
lods
imulb
sbbl
sahf
lret
cs
test
jbe
mov
mov
mov
sar
mov
mov
push
jge
repz
sti
sub
stos
sub
mov
pushf
stc
pop
frstor
and
js
sbb
add
jno
mov
fdivl
dec
sahf
pushl
enter
push
lock
sub
xor
dec
inc
stos
cwtl
pusha
cmpsb
inc
stos
lods
jae
cmp
cmp
cmp
clc
add
jg
sub
in
adc
leave
lcall
sub
ror
sub
insb
pop
or
mov
mov
outsb
jmp
cs
aaa
adc
imul
pop
ss
or
sub
cmpsb
cmc
fdivrl
inc
int
stos
fcompl
xchg
jns
pusha
mov
outsb
outsb
adc
aas
mov
repnz
sub
mov
movsl
or
sub
lahf
out
push
adc
mov
push
cmc
cmp
lods
mov
jp
hlt
data16
xchg
jge
sbb
jg
fs
popa
push
orl
cwtl
aam
mov
add
jo
ret
sub
mov
dec
jmp
cmpsl
fsubr
mov
je
ljmp
lcall
jb
push
mov
push
push
out
xlat
xlat
push
decb
iret
push
lret
mov
fucom
loope
repz
movsb
idiv
rcrl
cmp
std
pop
push
pop
jl
dec
int
in
int3
dec
fs
push
loopne
lock
pushf
aas
mov
loopne
sub
ret
or
xor
lods
movsl
and
cli
sub
loope
scas
and
adc
xchg
xchg
hlt
stos
push
rclb
repz
inc
sub
push
ljmp
xchg
jle
jno
lahf
xchg
mov
imul
out
test
pop
inc
cwtl
and
mov
fadd
lods
les
movsl
pop
sarb
or
or
push
inc
jl
pushf
add
adc
xlat
or
outsl
jo
movsl
adc
sbb
fwait
scas
mov
cli
mov
sti
push
mov
jno
inc
imul
push
aam
cmp
in
and
jle
dec
sarb
adc
test
fbld
cmp
lret
jo
mov
shrb
iret
arpl
fisttps
movsb
dec
xor
sbb
cmp
mov
ss
inc
ss
pop
sti
xchg
mov
iret
cmp
adc
aaa
ss
out
mov
fdivl
insb
push
out
xchg
enter
or
fbstp
add
jge
rep
or
xlat
int
insl
loop
icebp
cmpsl
roll
jne
lcall
push
arpl
pop
mov
cmp
test
lret
sbb
je
jp
sbb
sahf
imul
stos
sub
out
inc
cltd
adc
insb
mov
adc
or
adc
xorb
jo
ja
movsb
push
add
divl
rolb
fcoml
inc
jle
mov
push
xchg
lea
push
insl
add
push
sbb
mov
xor
cmp
mov
sbb
sub
sub
les
mov
dec
add
mov
jle
jl
out
in
xor
ja
and
push
mov
pusha
sub
pop
aaa
popf
cmpsb
mov
lods
pop
andl
fstpl
sbb
xor
jae
push
outsb
mov
cs
mov
mov
cmp
aad
inc
sub
mov
int
jmp
xorl
sbb
mov
inc
cmp
xor
cmp
loop
cmp
sbbl
pop
add
loope
outsb
data16
shrl
cwtl
mov
mov
pop
xchg
mov
xchg
dec
and
cmpsb
outsl
test
shrb
jmp
fstps
xor
sbb
in
popa
jmp
pop
mov
test
xor
xchg
subps
adc
pushf
fimuls
pop
lods
lret
aad
int3
mov
into
cmp
mov
xorb
ret
loop
in
jo
or
mov
xchg
push
dec
jge
jge
adcb
mov
sbb
out
dec
in
insb
dec
jo
mov
cmc
pop
sub
repnz
jmp
mov
es
xchg
cmp
comiss
loopne
cli
mov
sbb
nop
out
xor
mov
cmp
loope
sbb
pop
ret
fldcw
inc
or
and
rol
dec
in
jns
inc
enter
inc
cmp
pop
gs
mov
daa
xor
or
cli
mov
negb
incb
push
push
push
enter
andl
mov
push
jne
movsb
aam
rcr
jb
mov
lods
add
test
addb
int3
xchg
sbb
mov
pop
jmp
fildl
xor
inc
xchg
cmpb
testb
jb
adc
mov
dec
sub
popf
inc
cmp
test
pop
or
lret
mov
sbb
xchg
push
repz
mov
notb
stc
dec
mov
orb
push
jae
inc
ret
cmc
icebp
gs
sbb
sub
push
mov
or
xor
fucomip
dec
pop
xor
mov
pusha
add
jb
in
and
mov
fisttps
inc
shlb
pop
and
inc
fwait
push
hlt
outsl
nop
das
xor
push
in
xchg
xchg
mov
les
cmp
popf
pushf
out
mov
out
clts
xchg
xchg
mov
mov
inc
or
scas
xchg
sarb
mov
jle
rcrl
shl
and
mov
pop
repnz
pop
out
mov
call
pop
add
inc
push
add
sub
andb
xor
lock
xor
out
mov
loopne
mov
mov
roll
lds
testl
jg
popa
ror
repnz
inc
mov
aam
addr16
mov
inc
jge
leave
in
imul
adc
lds
ret
inc
xor
lcall
pushf
xchg
clc
xorb
push
pusha
mov
xchg
dec
mov
jge
arpl
iret
divb
cs
mov
xor
xchg
insb
pop
scas
lcall
js
cmp
jle
push
pop
subl
ror
pusha
sub
lahf
xchg
inc
hlt
add
jecxz
fdiv
jbe
push
or
gs
aaa
aam
sub
icebp
js
pop
stos
fwait
push
into
movsl
xchg
mov
lods
repz
adc
outsb
xchg
pusha
push
lods
insb
scas
cmp
add
xchg
add
cmp
inc
movsb
push
ror
test
dec
ds
insb
loop
stos
lret
xchg
mov
addr16
loopne
add
aas
jae
loope
addr16
in
mov
jp
or
stc
adc
cltd
fwait
xor
jge
inc
sub
hlt
pusha
dec
mov
scas
jae
mov
ds
jns
mov
add
push
lods
or
test
pop
fildll
xchg
fisttpll
xchg
in
movsl
loop
adc
rcll
ret
inc
outsb
cli
jo
loope
xchg
xchg
notb
dec
jge
icebp
sbbl
outsb
xchg
adc
cmc
jl
add
push
sbb
pop
pop
lods
dec
add
rol
dec
push
out
xor
push
inc
cs
xor
mov
rcll
jmp
stc
ss
push
sub
xor
stc
mov
lcall
cmpsl
inc
not
dec
xlat
jbe
jnp
outsb
xchg
xchg
mov
pushf
insb
or
dec
pushf
sbb
add
pop
add
push
outsb
or
xchg
push
int
dec
roll
in
aas
aad
push
dec
lcall
testl
add
xchg
shl
jae
mov
fisubrl
cli
insb
loope
loopne
loopne
adcl
pop
imulb
enter
push
adc
push
lock
ficoms
aam
jl
insb
push
stc
addl
jl
xchg
in
les
sbb
pop
sbb
fstpt
rorb
cs
sbb
arpl
les
sub
cmp
dec
repz
int
sub
enter
lcall
cwtl
pop
ds
jp
aas
popa
cwtl
lret
xchg
jge
sbb
mov
bound
dec
movsb
fdivs
in
fwait
dec
cmp
loopne
lds
xchg
jecxz
lcall
mov
lcall
pop
xor
xchg
std
rcll
mov
lret
pop
test
push
test
mov
clc
fcoms
fildll
fcoms
std
pop
inc
div
fstps
xchg
mov
inc
fistps
rcrl
add
cmp
jbe
arpl
xchg
mov
cwtl
les
add
pop
sti
int3
mov
cwtl
dec
cmp
xor
pop
out
jne
xchg
rorl
rorl
je
and
adc
popf
dec
adc
jecxz
cmp
int3
nop
mov
divb
popa
out
mov
mov
mov
jg
ja
inc
or
xor
test
push
fsubl
int3
int3
sbb
cmp
fs
negb
cmp
sub
jb
lahf
cmp
mov
adc
jp
cmpsl
sub
and
cmp
lret
mov
sti
adc
push
inc
adc
in
mov
xor
jmp
adc
push
adc
stc
mov
pusha
imulb
mov
in
rolb
stos
ljmp
cmp
jb
xchg
mov
ljmp
cmp
push
lret
fsubrs
repnz
mov
xchg
imul
sbb
popl
jmp
sbb
addr16
or
call
add
loopne
xor
add
push
push
imul
push
adcb
fucompp
push
adc
push
nop
shrl
dec
test
popf
adc
inc
out
loopne
sbb
xchg
and
or
jmp
and
fwait
and
ds
dec
popf
test
dec
add
xor
adc
xchg
int
orb
stos
push
arpl
test
jl
adc
lods
sub
mov
sub
dec
jb
outsl
lea
lods
ljmp
fsubp
push
push
xor
mov
fisubrl
push
xchg
jl
xchg
stos
orb
lds
inc
pop
push
xor
rclb
adc
jb
fs
into
and
sbb
mov
pusha
xlat
inc
lea
loopne
pop
stos
std
and
or
xchg
jge
push
cli
add
mov
sar
ss
pop
and
fst
cli
sbb
icebp
loop
and
sbb
and
stos
rclb
dec
sub
stc
inc
jno
mov
cli
mov
clc
xlat
lds
movsl
fs
addb
jno
ljmp
push
dec
addl
aad
into
shlb
sbb
pushf
or
push
rclb
test
bound
adc
pop
mov
mov
or
sub
mov
jo
in
and
adc
xchg
hlt
lods
sbb
xchg
sub
imul
pop
sub
cltd
push
mov
outsl
xor
and
lcall
sub
fisttps
sbbl
mov
repz
cmpsl
popf
dec
xchg
ja
jbe
aas
cmp
add
ret
sbb
push
mov
ja
popf
and
pop
mov
mov
scas
insl
and
jne
pop
mov
lea
movb
mov
mov
sahf
push
pop
mov
xchg
icebp
fildll
lods
or
xor
out
fadds
pop
loop
aad
xor
fisubrs
int
mov
pop
and
popa
sub
sbb
push
insl
mov
sbb
sub
xchg
adc
icebp
lds
test
add
cmp
jns
sub
adc
and
mov
bound
cwtl
scas
das
or
mov
hlt
mov
mov
pop
push
in
push
cwtl
mov
pop
movsb
lea
rcl
in
xchg
xor
das
and
adc
fs
mov
cmp
lahf
call
insb
adc
xor
movsl
test
sub
data16
jo
dec
mov
push
mov
jge
push
fisubrs
out
aad
jns
aam
ds
mov
pop
pop
or
popa
cmpl
mov
mov
mov
mov
inc
rorb
dec
cmpsb
jl
loopne
or
dec
outsb
mov
sti
hlt
les
cmp
jge
dec
jae
lock
or
jmp
data16
and
sbb
cli
insb
add
mov
jb
dec
add
subb
aaa
std
out
aas
adc
pop
int
jnp
aas
or
pop
cmpl
jp,pn
jl
or
adc
movsb
ja
fbstp
roll
xchg
mov
ret
aaa
jle
insl
push
jnp
jge
pop
dec
ret
xchg
pop
or
and
int3
jg
xchg
mov
push
jg
movl
mov
jecxz
rorb
clc
cmp
jb
fdivs
push
mov
sub
ret
fcmovne
pop
cmc
mov
and
jp
adc
pop
xor
lods
push
pop
lret
out
popa
das
or
push
loope
test
add
push
fbstp
sub
push
cmp
iret
xor
mov
int
test
inc
xor
lods
movsb
cmpsb
je
pushf
or
imul
mov
sarb
lock
pop
sbb
add
loope
insb
push
imul
sbb
xor
stc
jl
push
dec
push
aas
jp
jb
cmp
rcll
ds
push
cmp
pop
adc
ja
push
cmp
xchg
fcmove
sub
dec
xor
iret
clc
mov
xor
in
addr16
jne
lds
rcrb
or
inc
fwait
mov
popf
sahf
incb
lods
mov
sbb
add
inc
scas
js
test
xchg
scas
pop
test
les
es
xor
stc
sbb
fs
mov
lret
out
dec
pop
add
inc
mov
cli
pop
pusha
ss
cmpl
lret
or
mov
je
or
enter
dec
ret
xchg
popa
addr16
jno
iret
and
ret
aaa
mov
pop
dec
aad
in
sbb
jnp
ret
pop
das
aam
dec
test
fsubrl
lods
and
push
sub
cmpsb
inc
aas
mov
add
mov
dec
adc
popf
mov
stos
xchg
jbe
mov
xchg
push
sub
jb
push
arpl
movsl
loope
sbb
xor
add
pop
mov
hlt
dec
shl
or
out
xchg
push
lods
rorl
xor
cli
and
jbe
xor
inc
test
cltd
inc
repnz
mov
test
jnp
mov
pop
mov
mov
adc
aaa
mov
sub
ljmp
inc
mov
or
sbb
or
xchg
jno
dec
les
dec
dec
dec
cmp
push
pop
daa
nop
xor
inc
push
imull
loop
sub
std
pop
xchg
push
push
sub
out
mov
push
sub
dec
out
lods
fs
push
rcrl
repz
cs
xchg
cmovno
jge
lock
fldenv
or
repnz
dec
fnsave
add
sbb
shlb
sub
mov
xchg
mov
inc
and
arpl
push
idivl
bound
dec
ror
popw
mov
fisubl
lock
out
jno
shrb
mov
rorl
mov
inc
call
cmp
into
bound
movsl
cmpsb
inc
xor
je
dec
fsubrl
imul
adc
jbe
out
js
sub
cmp
push
or
mov
or
mov
and
mov
roll
shlb
and
das
ret
insb
jp
shrl
add
mov
cmp
jecxz
xor
in
mov
test
jmp
sbb
les
pop
lea
lods
icebp
adc
jg
repnz
pop
xchg
and
insl
xor
add
push
add
pop
je
fildl
dec
mov
jp
pop
cmp
aas
jg
in
leave
push
and
mov
icebp
mov
xchg
repnz
push
or
enter
loope
in
lcall
jbe
cmp
movsl
mov
adc
mov
pop
lods
shrb
lea
outsb
cmp
xchg
leave
add
ret
push
mov
sti
mov
repz
adc
and
pop
jl
jmp
pop
jnp
imul
es
in
sbb
add
sbb
adc
adc
and
cltd
push
xor
dec
xor
sbb
jp
nop
aaa
decb
mov
sub
cmp
scas
push
mov
aam
sub
mov
rcl
xchg
arpl
push
mov
xchg
adc
jnp
pusha
jns
arpl
lods
adc
xchg
and
repz
mov
cli
or
pop
push
xor
sbb
add
xchg
add
mov
scas
decb
add
push
or
int
mov
lds
sub
pop
popa
push
xlat
mov
ffree
cmp
adc
call
fsubrs
xor
xchg
test
mov
mov
lock
sub
add
sbb
fildll
fnclex
push
adcb
mov
xor
inc
sti
xchg
ficoms
xchg
nop
push
dec
fisttps
jae
in
cmp
or
sti
loope
mov
cltd
pop
ljmp
jmp
cltd
stc
mov
dec
xchg
xlat
sub
mov
inc
xchg
loop
or
shrl
psubusb
int
add
fsubrl
and
in
mov
mov
shll
mov
and
bsr
xorl
add
fidivl
adcl
outsb
xchg
push
rolb
mov
pop
cmpb
call
push
loope
and
stc
jge
es
popf
call
call
movq
sbb
leave
push
int3
aam
mov
dec
mov
dec
cmp
mov
xor
into
sub
ret
dec
xchg
inc
cmpsb
pop
xor
loopne
pop
gs
aaa
cmp
in
mull
das
mov
or
sbb
mov
daa
or
mov
test
dec
das
stos
xor
xchg
fsts
add
aas
xchg
in
and
mov
sarb
in
and
rol
test
roll
js
nop
xlat
fdivs
or
aaa
lea
add
inc
in
sub
mov
arpl
loope
inc
push
scas
jno
mov
pop
fs
rcll
inc
imul
bound
das
out
pushf
mov
push
mov
ljmp
fadds
shll
sbb
test
aam
adc
jge
mov
sub
sub
cmp
xchg
addr16
cmp
sahf
repz
movmskps
xchg
lods
stos
jno
jle
mov
cmp
out
and
xchg
enter
mov
cld
ja
jbe
outsb
or
add
pop
mov
jmp
jbe
inc
bound
data16
shl
jbe
aas
ror
loop
push
xchg
xchg
jle
stos
stos
iret
inc
dec
fdivl
es
jne
lds
pop
ljmp
fistpl
jns
mov
sub
or
cmc
arpl
mov
sbb
dec
xor
fwait
popa
movsl
fsts
mov
jae
push
les
pusha
mov
shlb
or
loope
jl
test
mov
and
dec
push
mov
jns
sub
mov
cmpl
stos
pop
sub
push
xchg
pop
push
sysret
leave
out
pop
push
repnz
cmp
jb
insb
jbe
dec
divl
inc
shl
call
mov
jp
test
les
or
rclb
mov
inc
mov
mov
xchg
cwtl
sbb
adc
daa
sub
mov
jecxz
testb
jge
sbbl
outsl
es
cmc
outsl
ret
push
loop
lcall
orl
ret
dec
loopne
cmc
int
movsl
fnstcw
dec
in
lret
dec
push
insl
pop
jne
jge
sub
mov
inc
xlat
xchg
jo
mov
lcall
cmp
outsl
rclb
inc
sbb
jecxz
jmp
mov
xchg
dec
dec
adc
lock
jmp
lods
mov
jmp
pop
pop
cmpsb
cwtl
imulb
ficomps
in
jnp
std
xlat
fisubl
xor
ret
test
jmp
popa
add
dec
pop
insl
push
neg
push
jle
add
repnz
mov
in
mov
imul
int
fdivrs
jo
push
dec
lods
xor
addb
addr16
sbb
and
jg
mov
in
mov
sbb
xor
popf
mov
ficomps
dec
mov
sahf
pop
adc
dec
mov
pop
xor
xor
je
push
adc
lcall
inc
xor
mov
xor
rcll
mov
pop
jb
jo
cld
mov
mov
mov
adc
jmp
jecxz
je
push
popf
lods
mov
jno
aad
jno
or
sarl
mov
loope
cmpsl
aad
fistps
and
mov
icebp
fistl
pop
pop
sarl
adc
out
xchg
popa
nop
cmp
or
fwait
xchg
data16
outsb
or
pop
sub
into
cmp
js
pop
es
fwait
add
xchg
test
sub
fwait
add
jns
mov
sub
mov
push
sbb
add
out
xchg
mov
lds
sbb
aaa
mov
xor
stos
icebp
out
xchg
xchg
jae
adc
sbb
inc
xchg
insb
xchg
jge
stc
xor
dec
push
jbe
in
xor
mov
inc
or
adc
add
lret
mov
dec
in
iret
int3
push
inc
jecxz
out
or
iret
lock
and
lret
orl
pop
hlt
adc
dec
adc
jge
aad
int3
ja
movsb
jae
pop
pop
out
pop
push
push
jnp
and
jne
mov
dec
dec
push
sub
testl
mov
aaa
fldl
push
push
xchg
adc
sbb
lret
pop
jno
stos
ret
insl
adc
inc
sub
out
std
popa
mov
push
or
adc
fimull
or
add
mov
pop
add
rol
mov
cmp
mov
mov
shrb
push
add
cmp
popf
ljmp
jo
out
rcl
out
push
inc
xchg
push
ffreep
mov
mov
call
cld
sbb
aad
lahf
fcoml
sub
inc
and
fdivl
adc
fsin
mov
inc
pop
jp
es
inc
and
jmp
in
dec
dec
cmp
jb
cmp
loop
lret
call
mov
inc
inc
dec
sub
rcr
sbb
in
lea
mov
adcb
arpl
xchg
pusha
ret
jg
out
jge
roll
sbb
or
jno
push
lods
xchg
push
gs
fcomps
into
cwtl
fld
subl
push
and
sbbb
flds
mov
pop
adc
int
addr16
ret
sarb
sbb
roll
mov
adc
pop
xchg
lea
cmpsl
iret
mov
jae
dec
test
bound
mov
and
jge
mov
roll
fldenv
or
stos
cmc
loop
jb
cld
call
add
movsb
xchg
push
mov
mov
mov
cmpb
mov
mov
dec
nop
push
fcom
fsubrs
mov
jns
inc
mov
push
test
dec
and
shll
jp
push
or
inc
arpl
xor
mov
aas
xchg
imul
addb
xchg
and
mov
push
mov
int3
xorb
pop
loop
popf
push
cmp
repz
dec
fmull
sub
aas
es
repz
xchg
jg
cltd
mov
addr16
pop
or
sub
xchg
loop,pn
mov
dec
mov
lret
or
insl
sub
adc
sbb
inc
fs
adc
xlat
dec
mov
fnstsw
xor
inc
dec
test
mov
sub
enter
or
jmp
mov
sbb
fwait
mov
jbe
dec
popf
loopne
mov
leave
enter
clc
sbb
outsb
ja
or
mov
sbb
dec
jne
xlat
jl
xchg
call
mov
data16
nop
sbbb
xor
out
jno
adc
lret
mov
inc
inc
mov
jmp
dec
and
js
js
ss
fdiv
roll
outsl
out
fcomip
rol
xor
sub
icebp
or
pop
fwait
mov
push
jge
loop
out
fiadds
xchg
testl
outsl
mov
es
js
push
inc
xchg
mov
int3
js
jbe
mov
fmuls
lock
mov
mov
or
lahf
js
outsl
or
lods
xchg
popa
repz
ficomps
mov
mov
xchg
aad
ret
rcll
sti
int
sbb
or
dec
call
lods
fdivp
sti
roll
fstpl
sbb
mov
adc
ljmp
push
dec
out
jb
xchg
sub
repnz
movsl
or
loop
shrl
ret
loop
andb
cwtl
xchg
je
mov
xor
fcoms
test
cli
xchg
and
mov
add
pop
adc
add
stos
add
jmp
push
jo
jmp
pop
cmp
mov
add
cltd
pop
pop
push
push
mov
ficompl
xchg
sub
int
add
bound
cmp
pop
xchg
inc
es
mov
or
mov
ret
add
js
notl
out
imul
outsl
pop
xchg
mov
and
xchg
sbb
aas
aas
push
bound
xor
cltd
jl
je
push
sbb
cmp
dec
enter
mov
sub
paddd
fimuls
test
das
insl
lahf
fisttpl
push
xchg
mov
jb
add
mov
sbb
ret
mov
inc
int3
mov
xor
insl
dec
loopne
cltd
or
fxch
or
xor
push
mov
adc
push
xchg
scas
add
mov
mov
in
cmc
push
aad
mov
push
les
sub
mov
out
xor
adc
cwtl
fcompl
sub
and
lods
add
and
jge
into
push
frndint
mov
mov
cmp
sub
out
jb
mov
cmp
mov
popa
sbb
ficomps
sahf
ret
ja
scas
and
push
scas
pop
xor
lea
jg
jno
sarb
pushf
testb
std
mov
mov
lock
imul
iret
test
std
dec
xchg
ljmp
xor
inc
loop
and
jmp
jl
fwait
pop
insl
mov
shrl
popl
lret
push
xor
lahf
add
cmp
cmp
mov
sbb
inc
cmp
movsb
sbb
xor
fcoml
inc
dec
out
aaa
jb
insb
lret
push
out
mov
fcmovb
xchg
fdivs
push
sbb
mov
add
in
mov
cwtl
ds
ret
or
pop
into
into
sub
stos
push
xor
mov
jae
inc
and
mov
fisttps
push
daa
test
iret
aam
ss
mov
ret
lcall
aas
repnz
mov
ret
cs
inc
fwait
leave
xor
or
popf
ljmp
aas
int3
repz
out
mov
sbb
push
imul
jecxz,pn
sbb
sub
jmp
xor
sub
test
push
xor
mov
ja
mov
psraw
ljmp
shrl
repz
lea
pop
je
mov
inc
popa
ja
into
daa
das
iret
jg
sub
pop
or
mov
xchg
pop
mov
pop
loop
sbb
jno
hlt
pop
in
mov
shl
outsb
adc
jns
pusha
btr
hlt
or
push
arpl
test
adcb
inc
pushf
sarl
lods
cli
pop
pop
mov
add
lods
mov
fxch
push
push
std
mov
ljmp
fcompl
sbb
jb
nop
insl
shll
cmp
push
in
mov
inc
rcrl
or
and
lock
mov
cld
inc
adc
jae
cld
lret
insb
sub
dec
enter
fnstenv
dec
imul
pop
loopne
pop
adc
jecxz
cmpsl
out
arpl
sbb
pop
xor
shl
repnz
cmp
or
inc
xchg
or
std
xor
jnp
mov
pop
mov
dec
loopne
sub
mov
push
jns
lea
pop
pop
aad
adc
icebp
push
adc
adc
adc
les
and
adc
std
xor
jns
ds
out
scas
in
clc
out
or
pop
cmp
and
inc
lds
xchg
pop
hlt
pusha
ret
movups
mov
pop
fcmovnu
cmp
stos
push
mov
or
push
xchg
dec
pop
push
lea
inc
fwait
cld
sub
xchg
lret
es
or
or
and
cmp
and
mov
gs
out
push
test
das
popf
jbe
rcrb
test
pop
mov
dec
fsubl
nop
jp
mov
shrl
scas
daa
js
mov
inc
lret
sub
cmp
sub
sbb
pop
imul
mov
pop
mov
xor
je
xor
xchg
out
scas
pushf
mov
bound
cmpsl
xor
xor
enter
xchg
push
ss
fwait
push
mov
sbb
sti
dec
lcall
jecxz
push
fisubs
xchg
icebp
push
bound
int3
mov
in
call
insb
movsb
rclb
sbb
xchg
fisttpl
pushf
inc
js
lret
xchg
cmp
xor
pop
dec
ss
cmc
movsb
xchg
add
add
shrl
das
inc
repz
in
leave
clc
or
sbb
inc
stos
std
insl
int
mov
adc
out
add
mov
inc
lcall
xchg
mov
mov
jo
push
mov
dec
ret
xor
stc
mov
jle
sti
push
push
pusha
mov
push
pop
mov
xor
pushl
or
rcrb
or
push
les
xor
sti
ss
je
jl
jno
pop
ja
lock
sbb
inc
test
aad
push
inc
aad
xor
add
insb
clc
sub
cmp
inc
cmc
sbb
repnz
mov
lret
ss
popa
scas
jo
or
and
aad
inc
repz
aam
jnp
sbbb
inc
in
shlb
popf
dec
ret
loop
mov
fsubrs
push
lea
popa
fildl
pop
mov
or
dec
rcrl
enter
mov
inc
dec
faddl
gs
pop
shrl
scas
rcrl
sbbb
push
jg
lcall
das
addl
in
scas
or
std
inc
push
cmp
fcos
xchg
shr
aaa
cmpsl
in
insl
mov
xchg
iret
outsl
xchg
adc
mov
in
push
mov
sbb
mov
lds
xor
sub
out
out
mov
adcb
jmp
push
lcall
mov
cs
mov
adc
adc
fistpl
xor
sbb
sbb
ja
aad
icebp
fiadds
lcall
and
jl
enter
bound
xchg
test
incl
dec
sub
pop
adc
aam
iret
push
mov
mov
jne
sbb
push
lds
sbb
call
fldenv
mov
sub
dec
test
mov
aaa
add
push
mov
gs
jg
leave
fsts
push
mov
stc
ljmp
aas
sbb
adc
icebp
pop
jbe
add
xor
cmp
mov
bound
or
pop
lcall
cwtl
or
xor
aad
call
add
in
hlt
mov
and
bound
add
adc
xchg
and
stos
ja
jge
stos
sbb
pop
sub
jle
fbstp
mov
ficoml
aad
sbb
jge
movsl
aaa
movl
or
pop
test
sbb
sub
sub
adc
ficomps
jo
pop
rcll
sub
mov
mov
mov
or
shlb
and
movsb
push
mov
mov
or
xlat
aas
sbb
mov
inc
mov
fadds
shll
aad
mulb
push
cmpsb
xchg
mov
lret
xor
mov
xchg
xor
cmp
mov
dec
nop
pusha
ja
cmp
cmp
push
je
rol
jmp
js
xchg
arpl
js
leave
jo
out
and
lods
mov
adc
cmp
push
popf
mov
imul
mov
jmp
daa
loopne
xchg
bnd
sti
fsub
xor
pop
ss
inc
lcall
mov
fiaddl
inc
shrl
add
insb
or
xchg
sbb
enter
mov
mov
jo
mov
imul
test
lds
sbb
lret
xor
push
pop
out
xor
mov
arpl
push
iret
imul
repz
out
scas
xor
divb
lahf
push
inc
dec
jle
pop
xor
jne
fucom
pop
int
push
ret
push
push
lret
push
push
arpl
test
out
ljmp
inc
fstpl
push
cmpsl
ja
pop
in
push
and
cltd
jnp
lret
lea
adc
addb
mov
pushf
pop
xor
incb
cmp
hlt
jae
dec
sbb
popf
in
sti
jno
js
xlat
pop
jne
out
mov
mov
mov
push
addr16
ja
xor
cmc
pop
adc
xchg
lcall
xrstor
js
mov
out
outsb
test
push
inc
outsb
cld
fidivrs
xchg
mov
je
xor
mov
pushf
cmp
rcrb
stos
movsb
dec
imul
or
repnz
icebp
out
xchg
inc
pop
ds
je
xor
jle
test
jae
and
adc
xorl
push
in
outsl
add
mov
mov
lock
fldenv
dec
aam
sub
sbb
mov
in
push
fistps
test
mov
inc
cmpsl
imul
in
aam
ficoms
pop
sbb
sarb
lods
ljmp
add
decl
leave
xor
fnsetpm(287
lods
rolb
mov
pop
mov
inc
sbb
mov
add
jmp
dec
icebp
cli
push
jbe
xlat
shll
out
mov
clc
rcrl
push
dec
push
push
jge
push
sub
pop
mov
hlt
iret
sbb
inc
mov
jmp
shrl
rclb
arpl
and
shlb
lahf
dec
xchg
mov
int3
mov
mov
push
sahf
insb
and
les
adc
or
fldt
fs
lret
in
sbb
lahf
pop
js
cmp
xor
or
mov
cmpsb
jbe
addl
outsb
bound
sbb
clc
lods
push
ss
enter
add
add
mov
mov
add
mov
sub
out
xor
jp
subb
icebp
cmpsl
inc
jb
adc
fbstp
jno
mov
xchg
dec
mov
stc
and
hlt
sahf
dec
mov
inc
loopne
push
or
mov
test
add
xchg
pop
repnz
inc
push
cmp
mov
lret
or
or
xlat
mov
popa
cmpsl
ljmp
xchg
sbb
movsl
imul
mov
je
and
pop
push
mov
ret
dec
jb
ljmp
xchg
cltd
jns
push
or
test
rcrl
or
xor
rorb
and
jb
arpl
adc
roll
jp
jg
mov
dec
pop
fwait
and
repz
leave
adc
inc
lahf
lods
loop
movsb
inc
pop
outsl
dec
and
dec
xchg
jge
dec
test
cwtd
stos
divb
pop
adc
dec
daa
pop
lock
mov
adc
dec
dec
pop
and
leave
mov
out
mov
js
das
mov
scas
insb
inc
cmc
fsubl
and
lcall
fprem
mov
push
daa
andb
push
cli
and
das
and
lahf
lods
repz
lds
lock
add
pop
and
insb
and
xchg
mov
sbb
mov
pop
imul
lret
sbbb
movswl
mov
icebp
test
insb
push
test
and
cmp
mov
mov
fdivl
mov
shrb
and
lock
pop
mov
inc
add
ret
sbb
mov
jle
push
adc
nop
jecxz
jle
mov
or
ds
mov
cld
ljmp
jg
vpsubsb
pop
cmc
out
in
pop
mov
scas
pop
ffree
push
xor
pushf
js
add
sub
adcl
fistpll
in
push
adc
push
mov
mov
daa
pop
loope
dec
sub
ja
mov
ffreep
js
out
out
xchg
in
pop
xchg
lcall
xchg
add
fnstsw
jge
sbb
bound
lret
push
clc
jno
or
jno
jl
jmp
outsl
add
adc
imul
adc
cmp
xchg
lds
mov
push
test
xchg
loopne
decb
je
mov
mov
orl
inc
popf
nop
outsb
add
mov
popa
mov
testb
pop
movsb
loope
inc
mov
stos
inc
cmc
push
das
fwait
stos
fs
flds
dec
ja
pop
dec
data16
mov
fdivrl
adc
xor
mov
movsl
sbb
or
dec
sub
sbb
or
fldcw
cmpxchg
push
enter
mov
ds
hlt
and
or
xor
jp
lods
push
daa
add
dec
xor
pop
mov
movsl
mov
sub
lahf
push
in
bound
cmp
pop
push
leave
jp
jo
xor
adc
or
and
imul
cwtl
test
and
lahf
push
sahf
sahf
div
in
ret
cmpsb
and
je
cmp
jecxz
divl
mov
popa
loop
out
aam
pop
cmc
test
and
outsb
dec
aaa
andb
fildll
notl
test
jmp
push
cmp
cmpsl
iret
imul
sahf
call
dec
stc
in
adc
pop
ffree
roll
dec
imul
movsb
lret
jg
lahf
cmp
insl
mov
lcall
add
aad
aad
sub
sbb
ret
into
or
daa
in
mov
aaa
pop
sbbl
insl
popf
mov
dec
pop
in
pop
test
mov
sub
outsb
pop
cmp
sub
xchg
mov
lret
xchg
push
dec
cmp
add
lods
mov
xor
daa
test
test
push
stc
sbb
inc
push
in
mov
mov
jge,pn
adc
pop
dec
sub
xchg
pop
shr
dec
icebp
adc
xchg
dec
stc
fisubl
adc
inc
clc
mov
and
and
dec
pop
or
cmp
jge
mov
pop
push
adc
xor
pop
loop
or
lret
in
lea
sbb
push
out
cli
pop
sub
insb
mov
push
ja
or
adc
fdivs
por
jmp
out
xor
jns
fs
cmc
add
adc
pop
pushw
out
into
xchg
xchg
mov
xor
push
rorb
push
push
mov
xor
inc
insl
adc
andb
outsl
mov
cs
sahf
fdivrp
pop
lds
xchg
aaa
mov
lods
addb
pop
mov
cmpsl
xchg
sub
out
lds
jno
jb
lock
aam
mov
enter
and
push
xchg
xor
jb
or
lret
rcrl
jecxz
xchg
mov
sub
loope
clc
xchg
push
xlat
xchg
pop
lret
dec
mov
cmp
lea
sbb
cmp
push
ficomps
sbb
inc
addr16
jg
inc
lock
adc
mov
sbb
jecxz
pushf
imul
ffree
cmpsb
lret
test
mov
mov
mov
or
jecxz
pop
cltd
mov
mov
pop
and
aad
xor
cmp
repz
dec
mov
sarb
mov
cmpsl
jb
ficoms
lret
divl
mov
push
mov
and
jmp
xor
jne
mov
pushf
jb,pt
lea
mov
pop
sub
push
adc
ljmp
dec
jg
out
adc
lret
outsl
lds
mov
pop
and
adc
adc
imul
insb
cmp
or
inc
add
lods
cs
or
mov
or
sbb
pop
popa
pop
dec
bound
xchg
mov
sub
shlb
xchg
cmp
jns
hlt
into
push
mull
adc
jmp
hlt
inc
aad
sbb
nop
aam
icebp
mov
fst
jecxz
cwtl
dec
fcmovnu
xor
adc
jnp
and
cmp
outsl
movsb
cmp
adc
dec
inc
leave
negl
mov
andb
lret
js
pushf
aas
xchg
add
out
jb
repz
cmpsb
dec
xlat
dec
aam
gs
insb
out
sub
cmpsb
mov
lcall
loop
mov
lea
std
lret
adc
and
jnp
cmp
notl
jo
jmp
pop
dec
jbe
mov
mov
or
loop
inc
pop
add
lods
xchg
outsb
filds
adc
xchg
jne
testl
inc
pop
nop
lret
enter
pop
iret
dec
imul
test
jne
std
insl
add
outsl
push
add
and
out
pop
push
fcoml
push
mov
sbb
unpckhps
pushl
add
sbb
lods
adc
fst
scas
adc
sbb
xchg
lock
ficoml
pop
jo
addr16
pusha
inc
mov
xchg
pop
ds
daa
push
push
outsb
sbbl
fiadds
mov
int
orl
scas
push
movsb
ss
frstor
jbe
push
cmp
int3
out
mov
decb
repz
xchg
fwait
cltd
insb
pushf
inc
sbb
enter
mov
ficoms
movsb
cmpsb
or
xor
jmp
movsb
sbbl
pusha
or
mov
or
adc
jecxz
inc
sbb
clc
sarl
cltd
rol
sarb
mov
xchg
imul
fcompl
ds
mov
loopne
add
jecxz
inc
mov
pop
outsb
lods
aam
push
fdivrp
or
dec
addr16
adc
rcrb
inc
fildl
sub
out
pop
out
add
mov
jns
jecxz
inc
adcl
pop
clc
popf
leave
inc
lods
out
aas
pushl
fdivl
lods
jo
ss
mov
bound
inc
adc
je
cmpsb
sti
adc
cmp
push
lds
and
lods
add
pop
mov
test
jbe
mov
cs
mov
out
or
lahf
lret
jp
into
mov
rorb
jns
pop
lea
xchg
sbb
adc
jmp
sub
adcb
test
mov
int3
out
orb
test
mov
add
cmp
cmp
sub
cld
out
ret
or
xchg
mov
or
sbb
paddsb
jle
fisttps
dec
push
je
jg
sbb
and
mov
lret
repnz
jns
or
loope
mov
sub
xor
xor
daa
pop
rorb
jnp
mov
jg
cmp
daa
in
lahf
ss
push
xchg
aaa
lock
xchg
rclb
push
aas
add
jge
enter
insb
cmp
outsb
imul
pop
sbb
lods
sub
jae
ja
shll
mov
push
lret
mov
fdivrl
and
mov
pop
fistpll
push
dec
ja
push
sbb
mov
pop
or
xchg
addl
mov
mov
mov
push
jmp
sahf
mov
lods
cmp
test
sub
dec
pop
add
lahf
add
sti
clc
push
into
jge
inc
fsubrp
jno
js
xor
inc
xlat
daa
xlat
inc
xchg
shr
xchg
mov
push
daa
cld
loopne
adc
or
mov
stc
popf
jb
stc
cmp
jecxz
sub
xchg
adc
jb
dec
cld
and
adc
popa
mov
sbb
into
sub
iret
clc
icebp
jb
je
xor
xor
add
rorl
addb
pushf
in
add
testl
cs
xchg
lock
sub
insb
dec
sub
xchg
mov
mov
loopne
clc
push
jle
mov
jl
xchg
adc
dec
mov
adc
pop
and
scas
and
jnp
xor
xor
add
sahf
ss
mov
iret
xor
test
in
add
pop
lcall
cwtl
loop
mov
popf
sahf
test
or
or
sbb
sbb
lret
cli
in
add
jecxz
sub
stos
or
mov
mov
in
paddd
cs
pusha
enter
mov
add
pop
cmpb
shll
fs
xor
in
test
pop
push
jb
idivb
pop
mov
adc
cmpsb
dec
jbe
and
mov
dec
mov
xor
ja
xor
aaa
and
in
jge
bound
push
pop
cs
jmp
clc
stc
mov
ss
ficoml
lret
ret
dec
mov
stos
adc
and
dec
inc
ljmp
pushf
sub
js
fs
loop
fdivrs
call
in
xor
ret
es
addb
nop
sarl
subb
mov
jne
mov
ss
push
mov
cmpsl
and
insl
dec
cmpsb
add
dec
les
jno
aam
mov
daa
pop
add
enter
jg
fstpt
lea
jle
jnp
stos
xorl
inc
and
cmp
mov
out
pusha
push
inc
ret
mov
cmc
cld
mov
icebp
jecxz
dec
mov
int
dec
mov
lds
pop
push
jecxz
mov
mov
test
lods
mov
pop
lods
mov
imul
into
or
popa
mov
xchg
xor
sub
je
outsb
in
test
pushf
call
fdivl
mov
xlat
repz
xchg
mov
movsl
push
jg
mov
push
insl
pop
add
jge
inc
and
aam
in
fisttpl
sbb
imul
shrl
push
lret
and
icebp
loop
mov
rolb
iret
xchg
js
ret
pop
imul
mov
cmp
mov
arpl
mov
lea
and
mov
loope
mov
mov
xchg
sub
rcll
mov
cmp
std
add
sbb
shll
push
mov
add
push
sub
adc
cltd
mov
jge
adc
mov
push
jle
movsb
sub
test
nop
in
scas
inc
insl
call
jge
aaa
lock
or
add
or
and
popa
outsl
inc
test
mov
sbb
movsl
fisttps
cwtl
xor
pop
or
cs
mov
pop
ret
inc
cld
jmp
mov
pop
adc
xlat
and
out
dec
imul
sbb
add
mov
addr16
lahf
xchg
fisubl
xchg
dec
jle
out
lret
cmpsl
into
rorl
lahf
fs
jb
mov
ja
push
xor
sbb
mov
mov
and
xor
rcrl
leave
mov
push
cmp
fdivs
loop,pt
pop
and
add
movsl
push
jnp
mov
imul
lcall
mov
mov
mov
fwait
arpl
inc
sub
xchg
push
std
mov
loope
sub
sbb
lods
or
jmp
repnz
insb
pop
fisubl
stos
addr16
testl
mov
repz
fcmovnu
data16
push
mov
add
sub
popf
mov
daa
pop
rclb
inc
dec
leave
sbb
js
jns
cld
dec
inc
mov
sub
enter
fld
cli
dec
xor
or
jb
in
xchg
ds
loopne
stos
push
and
scas
push
aad
int
mov
movsl
mov
sub
and
cmc
pop
mov
pop
xor
jns
loop
icebp
test
mov
fnstsw
jecxz
int3
loope
pop
inc
sub
jmp
scas
sub
adc
fwait
es
movsb
rorb
inc
cli
pop
push
adc
jecxz
pop
add
popf
xor
jnp
jle
mov
xor
repnz
add
push
or
jge
shrb
xchg
adc
cmpsl
adc
mov
lret
lea
loop
and
or
out
je
sti
outsb
dec
loop
and
das
add
add
push
pop
loopne
xchg
es
pop
leave
push
inc
mov
sbb
mov
xor
inc
sub
jmp
movsl
pop
push
std
lds
xlat
sbb
out
lcall
daa
mov
push
adc
pop
loop
mov
and
pushf
push
dec
pop
mov
cld
daa
and
mov
dec
pop
xor
add
insb
or
pop
daa
push
sub
inc
mov
movsb
ja
in
xchg
jns
xchg
cmpsl
hlt
ficoml
cltd
fildll
adc
mov
mov
out
jmp
mov
push
pop
or
leave
cmp
negb
int3
pop
push
sub
das
cmp
cltd
ds
cmc
mov
mov
pusha
js
sarl
leave
or
ja
int3
in
out
cmp
clc
or
movsl
das
in
mov
push
imul
dec
xchg
rorb
pusha
inc
imul
jg
sub
mov
mov
sahf
jg
adc
xchg
mov
add
jo
ret
adc
pop
lods
cmp
add
hlt
nop
sub
mov
mov
jbe
adc
sub
sbb
aas
subb
sbb
int3
xorl
mov
fs
jp
adc
lds
and
js
mov
loop
imul
cmp
je
pop
std
dec
sbb
xchg
push
adc
mov
push
mov
imul
icebp
movsl
and
and
in
fs
xor
inc
adc
adc
lds
mov
mov
and
lcall
pop
popa
sub
dec
dec
inc
push
mov
je
inc
repz
outsl
and
mov
pop
lods
mov
loope
pop
xorb
aas
sbb
sbb
cmp
adc
lock
add
cld
adc
mov
mov
add
push
lret
stc
lahf
inc
xchg
loope
mov
loope
xchg
repnz
pop
test
jbe
lock
popf
bound
stc
xchg
in
mov
dec
mov
cmc
xor
xchg
inc
dec
lods
ss
out
xor
movsb
push
int
sbb
loopne
js
scas
addb
jle
insl
stos
xchg
outsb
pop
inc
lret
das
add
pusha
mov
aad
jns
mov
push
and
in
pop
add
jle
and
or
push
mov
pop
sub
sub
jle
scas
out
mov
hlt
int
sub
cmp
movsb
adc
mov
aad
push
fsubp
lcall
or
push
fstps
mov
imul
test
cmp
insb
add
mov
mov
mov
mov
popa
adc
or
movsl
sahf
shlb
jnp
inc
cmp
inc
dec
daa
js
inc
mov
in
xchg
imul
sbb
in
mov
cmp
shll
pop
xorl
mov
les
inc
std
inc
mov
sub
mov
and
inc
pop
cmp
jns
mov
xlat
jl
aaa
mov
dec
sbb
aaa
scas
decl
movsb
cmp
cwtl
mov
lret
adc
out
andb
mov
out
popa
adc
mov
bound
lret
or
add
or
mov
outsl
inc
cli
xchg
dec
es
into
inc
push
cmp
xor
add
je
fucom
outsb
fwait
int
mov
cltd
bound
dec
in
adc
orl
adc
in
testl
sbb
add
imul
dec
mov
and
leave
cmp
jno
inc
cmp
fs
movsb
fstpl
pop
lock
inc
cli
sub
stos
iret
or
lds
and
pop
cmp
insl
push
cmp
and
jp
or
mov
es
inc
jb
fcomi
cmpl
inc
outsl
sbb
xchg
sahf
orl
push
mov
mov
sahf
mov
in
jns
cmp
and
push
xchg
sub
int3
xor
mov
pop
ror
mov
stc
pop
xchg
sub
ss
mov
jae
pop
cmp
and
outsb
mov
ljmp
movsl
xor
fisubl
gs
or
pop
xchg
repnz
in
test
dec
mov
out
xchg
bnd
arpl
pop
pop
cs
pop
sbb
iret
inc
dec
or
sub
mov
sub
cmc
add
adc
lcall
cmpsl
shrb
insb
mov
pushf
aaa
add
jbe
mov
pop
test
add
lock
fxch
aad
push
dec
les
je
sbb
testl
insb
aas
lods
pop
jno
push
jmp
vsubss
xchg
jo
data16
stc
sub
or
movsb
pop
push
mov
mov
and
pop
pusha
adc
mov
cmp
mov
and
stc
insl
jne
jmp
mov
out
jo
mov
xchg
push
outsb
dec
ret
dec
push
repnz
stos
push
lods
loop
cmp
dec
out
test
out
shrb
push
ficoml
push
std
std
cmp
cmp
fidivrs
into
out
sbb
test
imul
lock
mov
out
cmp
ljmp
in
cli
pushaw
lods
push
test
vcvtsd2ss
cwtl
aad
xor
pop
mov
jmp
mov
mov
jae
cmp
test
test
cmp
insb
leave
out
insl
hlt
mov
inc
push
cli
dec
lock
ds
pushw
xor
ss
sub
push
jns
cmc
jl
ret
sbb
loop
les
inc
ret
sbb
repnz
pop
lds
adc
fwait
xor
lods
jb
stos
outsl
mov
stos
das
mov
or
add
mov
cmpsb
addr16
inc
xor
fisubs
das
pop
mov
in
sbb
jo
sub
mov
sub
mov
cmp
mov
and
sahf
enter
fcompl
fdivrs
rcr
xchg
rcrb
xchg
add
cmp
out
pop
mov
fnstsw
or
call
jle
test
les
xchg
nop
xchg
and
popf
xchg
loope
jecxz
jecxz
add
addr16
push
pusha
decb
add
lret
inc
push
call
dec
out
ficomps
stc
mov
mov
movsb
xchg
xlat
test
mov
and
jbe
push
rcrl
and
cltd
add
fisttpl
aam
lahf
lods
sub
jge
jne
or
jo
mov
or
aas
and
and
cli
add
xchg
xlat
fwait
mov
fisubs
popl
inc
test
sub
dec
mov
push
jo
cmpb
sub
lret
ss
es
repz
inc
pop
les
xor
inc
fwait
jge
mov
fimull
fimuls
mov
cld
mov
mov
in
sub
add
mov
push
add
pusha
mov
sub
jbe
xor
mov
lea
adc
jae
push
test
mov
in
mov
and
ljmp
mov
out
rcl
sti
int3
mov
jecxz
aaa
dec
add
mov
mov
pop
pop
add
dec
cmc
and
adc
push
mov
push
inc
xor
jmp
daa
cld
xor
jmp
sub
xchg
mov
sub
jmp
mov
fisubrl
movsl
lahf
pop
sub
dec
dec
adc
fsubr
imul
or
ljmp
mov
and
dec
insl
stos
pop
dec
mov
push
lock
xchg
scas
int3
ljmp
mov
add
push
xchg
outsb
cmp
inc
mov
and
jecxz
cmpsb
test
jbe
ja
scas
dec
filds
ja
push
adc
push
inc
imul
data16
push
jne
jae
pop
movsb
sti
jo
mov
lods
std
std
pop
pop
sarb
or
loopne
jae
shlb
in
frstor
jmp
push
je
outsl
sub
cmp
int3
in
filds
lods
xor
icebp
test
lock
dec
xchg
jo
test
xchg
daa
je
jns
pop
addr16
sub
cwtl
rcrb
or
inc
pop
sbb
notb
imul
outsb
sub
ret
aas
cmp
cltd
mov
fcomp
popf
in
mov
test
loopne
aas
sbb
pop
test
jnp
andl
mov
test
or
iret
cmp
call
pop
das
je
sbbb
lahf
stos
ljmp
std
rol
arpl
nop
clc
outsl
add
aaa
out
ret
sbb
pop
imul
jns
jbe
xchg
add
pop
jp
lods
jo
fisubl
js
add
or
cld
dec
insl
mov
pop
xchg
in
loopne
dec
xchg
std
pop
pop
mov
mov
aaa
subl
loope
pop
aaa
mov
add
rol
pop
mov
pop
lds
lfs
rclb
dec
push
je
cwtl
testl
mov
jno
popf
jae
test
fs
mov
xchg
movsl
dec
hlt
sahf
std
jmp
xchg
les
xchg
pushf
stc
sbb
mov
ljmp
and
and
jge
iret
pop
mov
orb
ljmp
mull
xchg
sub
xor
adc
test
mov
aaa
out
lock
mov
repz
push
lods
into
in
mov
ds
mov
testb
cmp
push
jg
jecxz
cld
sbb
pop
xorb
add
out
mov
in
ficoms
out
xor
paddb
push
or
movsb
pop
mov
sub
pop
push
inc
add
outsb
aad
rorl
aad
bound
rcrb
mov
pop
sub
xor
les
lret
int
lock
mov
and
push
sbb
imul
nop
ret
dec
jnp
fldcw
and
push
dec
les
lods
xchg
push
out
inc
jl
xor
mov
out
pop
push
movsb
xchg
mov
dec
cli
sbb
push
stos
jb
adc
adc
movsb
pusha
aas
pop
int3
add
les
ficompl
mov
divl
jae
mov
mov
mov
fdivl
hlt
xchg
dec
sbb
inc
dec
dec
adc
or
adc
insl
cmpsb
ds
push
stc
clc
repnz
stc
dec
sbb
je
push
mov
push
jae
cmp
push
push
and
pop
inc
fadds
ss
xchg
push
or
shl
shll
daa
lods
test
int3
aam
imul
pop
insl
adc
rolb
jg
pusha
fdivp
ret
mov
gs
add
add
shl
js
dec
sahf
dec
movsl
pop
sub
and
dec
cmc
decb
push
setns
or
mov
cli
je
cmp
adcl
sub
js
mov
data16
push
jae
mov
test
fimull
or
js
pop
xchg
xor
push
subb
push
mov
stos
mov
idivl
and
stos
adc
and
adc
aaa
inc
xor
jg
jl
insb
out
ficoml
ret
mov
sbb
out
testl
mov
ret
mov
mov
lahf
movsb
dec
dec
aaa
ret
jge
int
mov
or
aas
outsl
push
mov
mov
stos
cmp
cmp
pop
repz
xchg
neg
sub
mov
and
adc
cmp
xchg
in
cmp
sbb
jp
dec
dec
negl
movsb
insl
jge
inc
jg
sbb
cmpl
in
adc
arpl
push
lret
in
incb
or
jo
repnz
cmp
add
add
repnz
jns
mov
xlat
sub
stc
data16
mov
sbb
bound
je
daa
roll
in
shrl
lds
cmp
mov
inc
aas
add
mov
cmpsl
sub
dec
push
cltd
mov
cs
pshufw
push
repnz
and
loope
xor
es
mov
idivl
loop
jb
filds
add
push
loopne
lods
frstor
std
lcall
rorl
pushf
pop
andl
xchg
nop
lea
repz
xor
push
or
andb
jbe
sub
adc
mov
mov
add
loope
xchg
lret
inc
adc
ds
cs
shrb
rorb
vsqrtpd
pop
out
faddl
push
push
jb
shl
mov
inc
mov
int
cld
adc
push
stos
jge
pop
aad
adc
sub
insb
jge
orb
dec
addl
jb
cmpsl
jle
daa
negl
cmpsb
hlt
popa
js
mov
sbb
loope
enter
pop
jge
pop
mov
dec
idivb
outsb
sbb
sbb
in
bound
adc
loop
icebp
inc
cmpsb
xchg
adc
addr16
sbb
test
fdivs
mov
jmp
aaa
bound
nop
push
mov
pusha
imul
mov
jecxz
test
dec
jae
hlt
jp
test
jbe
push
or
mov
inc
jbe
mov
and
inc
push
stos
arpl
out
fwait
and
or
cli
nop
cmpsb
mov
mov
mov
pop
pushf
std
xor
xor
in
sahf
lds
mov
ret
ffree
sub
in
and
shll
mov
adc
cmpsl
jb
in
mov
test
scas
bound
adcb
scas
js
add
push
push
mov
jp
mov
mov
xor
test
popf
push
push
sbb
jnp
sbb
movsl
stc
orb
dec
icebp
cmp
push
rorl
icebp
lret
cmp
sub
jp
es
popa
mov
test
xchg
cmpsl
repz
pop
cmp
hlt
es
les
push
dec
outsb
insl
dec
jno
push
cmpsl
adc
sub
out
add
enter
push
inc
dec
jmp
stos
fidivl
sub
in
ss
mov
inc
dec
scas
push
out
outsl
ret
jp
les
or
push
sbb
xchg
in
addr16
data16
test
jno
shll
movsl
mov
mov
jnp
fldcw
ret
add
fidivl
shlb
lret
emms
mov
push
stc
mov
and
negl
mov
mov
inc
jg
fnstsw
das
ljmp
adcb
mov
sub
inc
jg
inc
dec
int3
jle
cwtl
mov
das
cli
int
mov
add
cmp
mov
mov
and
add
stc
insl
dec
add
pop
pop
and
sub
jne
addl
fs
dec
pop
sahf
adc
lods
jb
inc
std
into
mov
stos
lock
inc
sub
sbbl
test
pushl
mov
xor
cmpsb
out
add
loope
test
mov
and
jb
rorb
push
shrl
test
sbb
out
sbb
xchg
rorb
sahf
popl
push
aad
push
negb
ret
shl
into
or
in
inc
xchg
rclb
jmp
aam
adc
fmull
out
adc
mov
hlt
push
cmpsb
dec
rcr
jnp
das
mov
cmc
sbb
xchg
or
lods
imul
mov
out
and
fstpl
add
test
pop
insl
ret
fisubrs
fs
iret
daa
pusha
or
iret
xchg
inc
push
fs
mov
cmp
pop
shl
cwtl
pop
xchg
loop
mov
loop
pusha
sbb
in
cmc
gs
ja
shr
cmp
jl
dec
and
subl
rcrb
add
push
or
rorl
xchg
cmpsl
divb
sbb
lcall
jle
jns
sub
mov
ss
add
mov
fldcw
pop
pop
add
jecxz
or
cld
push
mov
cmpsb
pop
dec
insl
add
mov
loop
and
test
gs
pusha
adc
es
add
jne
sub
xchg
or
push
jp
mov
push
sbb
pop
push
int3
sub
hlt
push
mov
nop
jl
push
jmp
jns
adc
les
cli
jae
dec
xchg
mov
mov
and
ss
shl
lahf
mov
inc
sahf
dec
xor
cmp
fadds
lods
lret
cwtl
shlb
jo
xlat
xchg
scas
xlat
data16
addr16
lds
mov
jge
scas
mov
nop
xchg
std
jns
jecxz
inc
jbe
in
or
cmp
fisubrs
push
add
cmp
leave
std
push
ds
ljmp
sbbb
lahf
mov
lret
mov
mov
gs
pop
dec
ljmp
adc
outsb
pop
mov
lds
mov
xor
rcrb
gs
and
inc
jae
daa
gs
mov
pop
or
fucomp
mov
inc
jge
jno
mov
adc
sub
push
xchg
out
xchg
dec
out
jp
in
dec
testb
jnp
mov
aaa
loopne
fsubr
sub
jp
lret
add
add
mov
negb
je
and
and
imul
mov
popf
mov
out
ljmp
fisttps
push
lret
xor
pop
mov
call
sub
xlat
cltd
add
mov
mov
xchg
dec
repz
adc
sbbl
jle
push
mov
mov
sti
sbb
pop
ret
jle
xchg
mov
jnp
or
or
sbb
jmp
sub
push
jmp
in
push
stos
mov
jp
ja
stc
pop
xchg
std
test
mov
addr16
and
xchg
cwtl
lds
add
pushf
pop
push
sti
jae
sahf
fisubs
xchg
sarb
jno
cli
cmpsb
mov
add
adc
fmull
outsb
xchg
xchg
sub
jbe
ret
sbbl
stos
inc
push
lret
subl
call
mov
push
push
test
adc
popa
sarl
imul
mov
jbe
das
rolb
or
sbb
and
jno
jns
sahf
push
pop
sub
sbb
xchg
sbb
mov
mov
inc
mov
push
jno
adc
and
and
sbb
mov
or
xor
pop
and
sahf
and
iret
mov
pop
rclb
sub
rcrl
dec
in
daa
hlt
ds
dec
pop
fisttpll
inc
inc
add
fbstp
mov
mov
sbb
inc
jecxz
mov
jbe
push
jmp
hlt
cmovb
cmp
mov
insl
xchg
mov
mov
ja
jle
pop
mov
loopne
test
lods
aas
fwait
push
add
xor
dec
cwtl
or
mov
imul
movl
pusha
pop
shlb
mov
xor
add
mov
fld
lcall
leave
sbb
mov
mov
push
mov
ljmp
mov
iret
inc
mov
js
jecxz
pop
mov
sub
push
lcall
int3
inc
cmc
in
xchg
test
pop
call
jge
stos
inc
daa
and
lcall
in
mov
sub
lds
xchg
xchg
dec
mov
mov
adc
xchg
inc
xchg
hlt
fs
mov
gs
sub
mov
dec
jmp
mov
pop
fbstp
shr
repnz
dec
sbb
js
push
arpl
idiv
or
lret
push
je
fmuls
and
adc
inc
adc
popf
xchg
outsb
icebp
adc
std
sbb
push
aam
mov
inc
xchg
mov
jns
xchg
out
gs
lcall
lock
mov
repnz
add
out
ljmp
pop
fld
push
lea
sarb
inc
movsl
and
outsb
scas
out
test
cli
add
sub
xor
dec
add
mov
cmpsb
and
sbb
cmp
cmc
inc
jmp
outsl
and
lock
js
add
iret
ds
imul
xor
repnz
fwait
mov
mov
data16
arpl
sbb
loop
sbb
ret
stos
dec
popa
arpl
mov
les
mov
imul
jge
ljmp
mov
out
pop
xchg
fsts
dec
xchg
jl
adc
jmp
or
lods
inc
jnp
frstor
cli
js
sbb
sti
sbb
jmp
pop
lret
pop
and
hlt
inc
add
stos
mov
clc
mov
dec
bound
xchg
arpl
outsb
sub
cmc
roll
push
jmp
es
cmp
cwtl
mov
pushf
mov
jg
call
dec
mov
sar
dec
cld
sub
mov
cld
gs
xchg
enter
and
adc
xor
insl
pop
mov
lods
ja
and
dec
mov
cmp
stos
ret
jecxz
mov
out
push
scas
scas
andb
or
adc
sub
addr16
out
jg
movsb
in
test
imul
inc
push
pop
xchg
mov
into
mov
mov
mov
xor
in
xor
and
aaa
es
inc
dec
pusha
mov
pop
addl
sub
dec
push
ja
lret
fsubrl
or
mov
xchg
pop
loop
mov
push
loope
call
push
dec
outsb
imul
movsl
or
shlb
sbb
lret
jb
or
mov
mov
cli
xlat
lods
pop
pop
mov
dec
mov
insl
fucomi
dec
dec
ret
nop
test
pop
sub
xchg
sbb
adc
sub
dec
cmp
push
loopne
out
sbb
or
data16
popa
dec
into
mov
jge
mov
mov
jno
lret
mov
xchg
call
push
aad
mov
fsubs
hlt
insb
xchg
lods
filds
cwtl
lret
imul
int
xor
sub
call
jbe
mov
xchg
sarb
cld
lds
xor
cli
rolb
inc
push
xchg
xchg
mov
ljmp
mov
imul
cmpsl
mov
pushf
lds
mov
mov
out
or
xchg
sbb
push
push
inc
les
in
push
rol
pop
dec
test
dec
inc
xchg
inc
mov
cltd
notl
add
push
cmp
adc
sbb
dec
mov
mov
mov
add
mov
inc
push
inc
pushf
mov
sub
int
lret
insl
push
int
mov
and
pushf
cmp
repnz
test
and
mov
dec
pop
mov
xchg
push
out
sub
loope
jo
out
subb
fidivs
aam
push
pop
mov
in
andb
push
stos
aam
movsb
rcrb
xchg
push
add
out
jo
xlat
xor
push
out
lods
out
push
pop
aad
lock
les
les
xchg
cli
dec
pop
shl
xchg
push
sub
jo
cmp
and
subl
js
mov
shlb
inc
rolb
sbb
sbb
fstl
loopne
pop
std
enter
andl
mov
out
in
mov
jb
dec
adc
in
xor
adc
es
cmp
aas
rol
inc
jns
mov
lahf
fs
and
sbb
dec
cmp
outsl
test
push
sbb
push
or
out
stos
sub
add
sub
jne
outsl
xchg
in
sarb
mov
lret
sub
mov
adc
cmpl
and
pop
lret
ds
movsl
dec
scas
cmp
cmpsl
ret
push
lret
mov
or
xchg
movsb
push
ja
scas
aam
inc
imul
jle
push
js
popa
bound
inc
pop
pusha
repnz
xchg
mov
loope
les
xchg
jne
pop
lds
test
or
fs
ds
jno
xchg
shll
out
test
sub
cld
pop
cwtl
daa
jl
lret
ror
pusha
stos
adc
and
iret
xchg
mov
in
call
jg
hlt
test
xchg
xchg
stc
scas
add
rolb
pop
jmp
xor
xchg
shlb
jge
push
repz
fcmovbe
inc
rcll
loop
pop
testb
xchg
cmc
ret
sbb
adcl
adc
mov
push
xchg
lretw
scas
and
sub
pushf
xor
xchg
jmp
dec
xlat
mov
lea
fbstp
fisubrs
cmp
push
lods
lret
mov
mov
add
mov
leave
sbb
mov
in
mov
in
adc
mov
lcall
cltd
lret
rclb
pop
loopne
shl
pop
roll
aaa
inc
rclb
mov
fs
push
sbb
xchg
pushf
lcall
push
inc
lods
cmp
xchg
pop
or
pop
dec
repnz
les
jnp
test
or
mov
movsl
mov
ret
leave
xchg
dec
test
popf
or
xchg
daa
add
scas
push
and
add
ds
sbb
pop
dec
mov
les
imul
inc
test
mov
dec
pop
add
dec
stos
pop
testl
sub
ud2
push
outsb
mov
xor
xlat
adc
push
xlat
inc
rolb
mov
xor
inc
cmp
cmc
pop
mov
sbb
xor
pusha
jge
bound
sub
out
jno
adc
rcr
xchg
mov
dec
jnp
add
inc
popa
imul
dec
inc
sub
aam
mov
pushw
mov
call
ds
aam
xchg
sarb
les
gs
sbb
and
subb
adc
push
and
push
inc
cli
inc
pop
add
ds
in
cmp
cmpsl
mov
mov
sub
std
jbe
and
jne
cmp
in
push
stos
nop
das
int3
xor
gs
add
fwait
in
insl
scas
cmp
add
imul
rorl
sti
pop
or
mov
fiadds
pxor
jbe
div
popa
sub
repz
adc
fwait
aaa
and
iret
mov
test
fdivrs
add
aas
ret
in
gs
sti
loop
sbb
cmpsl
pop
adc
popf
and
jo
mov
fmuls
mov
sahf
jbe
js
dec
inc
push
sbb
ds
popa
inc
mov
inc
mov
and
repnz
ss
in
fwait
adc
xor
jnp
push
in
dec
faddp
or
lods
xor
and
scas
ja
rol
cmp
add
enter
fnstsw
inc
mov
inc
vpmacswd
mov
jl
les
lea
mov
filds
adc
imul
mov
inc
enter
outsb
fwait
sbb
pop
subl
jmp
shlb
jecxz
pop
movsb
dec
ja
mov
loopne
inc
pop
or
adc
add
in
popf
mov
lret
andl
pop
mov
loopne
jo
popf
sbb
pop
jb
loop
movsl
lock
or
in
xor
dec
cmp
cmp
sub
addr16
les
and
xor
push
cmp
insb
lahf
addr16
cmp
jbe
imul
pop
test
mov
dec
inc
pop
fildl
mov
mov
mov
stc
pop
in
xor
and
jl
cs
and
movsb
jb
mov
jl
jbe
into
arpl
jmp
inc
repz
loop
in
xor
jb
adc
clc
popa
aas
sbb
imul
jmp
je
in
lret
dec
insl
lock
sarb
mov
je
or
in
aad
adc
jg
fsub
out
pop
std
or
rorb
pop
hlt
pop
jns
push
push
iret
jecxz
sbbl
ljmp
insl
inc
cmpsb
in
adc
data16
xchg
mov
popf
les
nop
mov
push
inc
jg
pop
and
push
pop
add
jl
pushf
sahf
fcoms
movsb
push
pusha
loope
sub
in
fldenv
pop
sahf
or
jbe
mov
xchg
sub
in
loop
jl
in
mov
dec
push
push
inc
out
xor
inc
out
scas
ret
clc
inc
int
iret
push
jle
push
sbb
jnp
xchg
pop
jl
sbb
cld
rcr
cmpsb
aaa
addr16
xchg
stos
add
sub
xchg
fcmove
jb
pop
fdivrp
xchg
popa
jl
aaa
xchg
nop
pop
push
cs
inc
jnp
jbe
add
in
sbb
sbb
xchg
jmp
mov
xchg
jae
xor
and
outsb
push
incb
aam
shlb
or
orb
add
or
jne
stos
pushf
movsb
mov
mov
and
pop
test
and
jno
das
xor
aad
dec
sub
or
mov
xlat
arpl
mov
jbe
sbb
push
shl
inc
mov
repz
aam
push
cmc
sbb
rolb
pop
loope
data16
rcrb
cmpsl
movsl
sbb
jmp
nop
xor
lea
cmp
and
stos
jmp
lds
mov
arpl
lret
mov
sbb
cwtl
cmc
or
pop
adc
int3
pop
inc
pop
sub
mov
in
sub
lods
xlat
es
repz
dec
pop
jo
jl
packsswb
mov
cmp
ss
jecxz
addr16
hlt
mov
scas
into
push
ja
push
fldcw
fstp
repz
fdivp
jp
lds
bound
popl
pop
dec
inc
stos
sbb
mov
sub
sub
sub
rorl
and
cmc
pop
jae
sbb
negl
push
xchg
sahf
cltd
jle
and
lahf
mov
jb
loopne
mov
sbb
push
outsb
adc
push
insl
push
test
xor
sub
aad
orl
jo
xchg
inc
jp
sub
jns
movsb
ret
push
cs
adc
outsl
jp
sahf
frstor
iretw
jns
xchg
and
decl
stos
inc
cs
push
add
popa
dec
sbb
jbe
dec
arpl
jge
add
sub
stos
fcomps
mov
xchg
fs
dec
adc
jle
stos
jnp
or
in
push
out
outsl
in
mov
insb
into
addb
add
popf
push
sbb
pop
inc
lds
cmp
stos
xor
outsl
out
sbb
and
outsb
lcall
mov
into
aam
js
jge
test
aaa
cmp
or
hlt
xor
and
dec
daa
pop
pop
xor
and
pop
les
xor
ljmp
movsb
rorl
out
pop
aam
push
test
inc
fisubrl
mov
gs
leave
repnz
sub
and
loope
push
iret
jge
ret
jne
adc
jg
dec
fwait
stos
and
repz
out
insl
divb
pusha
push
adc
addb
js
add
mov
daa
movsl
adc
pop
cmp
das
jg
push
add
in
adc
lret
inc
leave
lret
imul
cmp
pop
mov
loope
mov
pop
xlat
stos
dec
mov
mov
in
arpl
hlt
je
pop
pushf
adc
aad
mov
jae
mov
mov
xor
insb
ret
push
lcall
cs
repnz
mov
clc
ret
aas
jne
scas
lcall
stos
mov
sti
out
test
mov
mov
cmp
inc
call
stc
adc
pop
loopne
leave
inc
sbb
adc
xor
jle
pusha
scas
mov
sbb
mov
or
ss
xchg
sarb
cld
lret
notl
divl
fwait
pop
sub
notb
jl
push
jae
clc
mov
cmpsb
lock
or
push
mov
call
push
or
push
imul
sar
xchg
jecxz
aas
inc
xchg
and
addr16
mov
fdivrl
lea
mov
es
in
orb
cmp
mov
mov
pop
mov
mov
js
fmul
or
outsb
leave
jp
xchg
inc
mov
inc
je
js
sar
push
outsb
jl
jecxz
dec
iret
dec
push
and
icebp
add
out
push
add
adc
pop
jp
das
adc
push
xlat
out
xor
inc
xlat
repz
push
cmpsb
sti
in
and
push
aaa
or
shl
dec
lods
mov
mov
ret
shl
int
scas
mov
fsts
hlt
test
loope
dec
push
cs
les
jle
xchg
mov
mov
clc
daa
mov
jle
mov
jo
pushf
subb
daa
jo
fisubs
and
mov
arpl
mov
scas
mov
icebp
outsl
ljmp
pop
dec
inc
inc
movl
ss
cltd
movsl
icebp
pop
imul
jmp
shll
cli
pop
lcall
jbe
xor
add
sub
dec
int3
ja
sbb
pop
pop
js
shlb
inc
divb
or
add
mov
call
mov
mov
mov
stc
in
out
jmp
inc
sbb
add
sbb
popa
fldt
and
inc
jne
inc
jmp
jns
jbe
xchg
add
mov
test
cmp
push
mov
mov
cltd
in
stc
stos
ja
push
mov
jns
ja
add
mov
rcr
and
hlt
mov
push
sbb
jle
shll
pop
cmp
sbb
or
push
mov
rcll
call
xor
pop
mov
scas
jg
pop
inc
fidivrl
out
fdiv
clc
rclb
xchg
imul
add
xlat
and
add
cmp
dec
jne
std
push
dec
lcall
inc
in
outsl
fsubrp
dec
mov
pop
out
cmp
fcmovbe
sbb
cli
mov
test
jae
movsl
test
dec
dec
rol
push
enter
mov
ljmp
int3
out
gs
aaa
mov
popf
jmp
xorl
jp
dec
push
dec
mov
rol
movsb
insb
adc
sub
add
movsb
sbb
out
imulb
lret
sbb
inc
dec
aaa
push
sbb
xor
push
movsb
or
or
js
push
push
loope
xor
shll
pop
ficoml
mov
adc
movsb
jle
out
push
cs
out
push
daa
cmp
push
in
add
call
daa
add
js
sbb
lcall
push
jmp
adc
ret
add
pop
inc
xlat
jmp
and
or
cmp
push
cs
sti
cmpl
enter
mov
add
cli
sub
xchg
ss
imul
jne
jne
decb
sahf
lods
mov
mulb
aad
imul
scas
mov
push
imul
push
push
push
sarb
or
scas
lcall
dec
fwait
mov
pop
dec
lcall
aaa
xor
mov
xchg
pop
and
fidivrl
ja
adc
jge
push
push
mov
inc
sbb
lcall
shll
fidivrs
test
xor
repz
pop
sti
xchg
mov
and
bound
add
lds
fiaddl
loope
cmp
sti
adc
sbb
test
mov
and
xor
pop
stos
mov
sub
cmpsl
push
cld
inc
cmp
push
call
xchg
nop
jecxz
out
aam
in
adc
imulb
adc
push
cmpsl
scas
jmp
test
xor
xor
mov
add
test
sub
ljmp
rolb
pop
repnz
add
adc
lods
adc
jmp
outsb
xchg
xor
xor
mov
cmp
into
sub
call
daa
int
outsb
inc
adc
pop
mov
gs
ljmp
sub
popf
leave
sub
stos
cmp
clc
adc
mov
lock
pushf
aaa
lret
mov
cmp
adc
mov
and
or
mov
into
notb
sbb
push
inc
stc
inc
or
xchg
jb
adc
push
xchg
pusha
mov
mov
inc
shl
lods
imul
dec
sbb
jnp
push
fstpl
sub
lcall
jae
pusha
in
fiadds
sbb
sbb
jbe
xchg
jae
sti
sbb
stos
mov
cld
sub
and
outsl
decb
jle
rorb
imul
aaa
cmp
scas
insl
and
xchg
insl
cmp
loop
imul
xchg
clc
add
ja
xchg
sub
out
fwait
movsl
loop
scas
cli
push
add
push
sub
sarl
or
sbb
aad
xchg
cltd
sub
sub
das
sub
jmp
in
sbb
aad
bound
das
hlt
xor
jne
lret
dec
dec
popa
xor
enter
call
in
mov
sub
pushf
out
adc
scas
enter
stos
cmp
fs
addb
sub
mov
cltd
vpcmpgtw
scas
fwait
addl
iret
sbb
int
outsl
pop
jecxz
int3
cmp
loop
subb
xor
loop
and
push
imul
and
movsb
inc
mov
lahf
jecxz
fcoml
cs
mov
and
push
clc
pop
lods
add
shl
lcall
arpl
jecxz
out
ja
sti
and
gs
sub
clc
push
popa
add
inc
push
ljmp
decb
push
aaa
lds
or
clc
fdivrs
fdivp
scas
lcall
int
pusha
in
sub
scas
shrb
aam
std
or
imul
sbb
test
add
sbbl
lahf
hlt
dec
shll
dec
push
mov
sarl
pushf
rorb
mov
out
cmc
pop
adc
sbb
cmp
stos
mov
cmp
xchg
cmp
test
lds
pop
cs
cmpsb
movsb
repz
dec
incb
mov
test
xor
inc
push
push
dec
shrb
test
mov
dec
xor
sar
imull
mov
add
lods
aas
lea
xchg
loope
jo
cwtl
enter
jmp
aad
mov
outsb
pushf
es
add
and
jle
jecxz
in
xor
adc
lock
and
fsts
sbb
mov
int
mov
fldt
or
xor
push
inc
xlat
shl
inc
out
push
add
movl
xchg
pop
leave
and
ss
arpl
and
subb
jo
ljmp
lods
add
mov
imul
daa
jae
insl
outsl
popf
sbb
out
cs
pushf
mov
dec
mov
aaa
mov
cmpsl
or
stos
bound
ficoms
pop
addr16
test
dec
repz
stos
stos
clc
js
subb
clc
or
ss
mov
std
push
nop
push
stos
mov
or
lods
pop
xlat
loopne
and
push
shll
sarl
cmp
dec
stos
call
or
outsl
inc
movsl
push
sub
mov
scas
out
pminsw
jecxz
jo
cwtl
mov
xor
mov
cltd
pop
fidivs
cmpsb
cmp
mov
pop
popa
test
xor
outsb
negl
xchg
push
xchg
or
loopne
add
fistpl
pusha
fisttps
mov
addr16
xor
out
inc
rcrl
cmp
arpl
jp
push
andb
iret
lods
add
push
pushl
je
sbb
popf
xor
ljmp
std
push
jne
cmpsb
pop
xor
negl
mov
dec
stc
negl
dec
jae
scas
mov
cmpsl
jmp
lods
jp
push
push
mov
es
push
int3
xchg
and
out
rcrb
mov
call
sar
orb
inc
mov
add
imul
pop
scas
mov
ljmp
sub
pop
fldl
mov
push
jbe
sub
movsb
or
arpl
lods
aas
mov
add
arpl
lock
add
push
adc
cld
sbb
jnp
outsl
cli
cwtl
arpl
xor
rcrl
ss
or
fwait
cltd
popf
mov
pop
push
jb
sti
jnp
int3
push
add
xor
add
xchg
out
sub
push
push
notb
int
push
pusha
imul
jb
lcall
or
imul
xchg
pop
or
in
pop
inc
ficomps
ret
scas
push
or
imul
in
or
pop
pop
jecxz
mov
das
incl
inc
cld
sub
xor
adc
rcrl
shll
jmp
sub
cmp
adc
pop
mov
gs
lods
dec
xchg
push
jbe
push
nop
xlat
aad
mov
mov
mov
cmp
dec
sub
sbbb
gs
xor
sahf
pusha
inc
mov
or
adc
int
mov
dec
stc
bound
xchg
push
pop
jns
insb
jp
das
push
dec
mov
sub
adc
jae
cmc
sbb
jecxz
rorl
shll
xor
test
pop
std
insb
sub
mov
lret
push
mov
sbb
add
out
xor
outsl
out
cmpsl
xchg
and
addr16
jmp
movsb
push
std
sbb
sti
push
mov
cmp
outsl
mov
aad
push
scas
pop
jo
add
ret
je
lahf
jmp
cwtl
sub
lods
lock
scas
sub
adc
xchg
cmp
orb
enter
mov
sub
xor
in
sahf
xor
inc
fsubl
jg
cmp
dec
leave
mov
xchg
repnz
shll
mov
ss
rcll
push
hlt
mov
cmpsb
iret
fwait
push
out
inc
mov
dec
flds
pusha
fisubrs
xor
es
fwait
out
ja
incl
sar
jle
pop
fists
push
push
cld
add
push
ret
push
cmp
mov
mov
mov
dec
cld
fs
cmp
pop
outsb
add
and
lret
pop
mov
mov
pop
loop
sub
fistps
imul
sub
mov
push
mov
xchg
sbb
nop
mov
in
fistl
dec
mov
add
lea
lcall
mov
in
div
inc
hlt
or
addl
pusha
int
push
leave
pop
insl
mov
lock
rcl
mov
adc
jb
lock
aad
xchg
mov
push
mov
push
pop
out
push
ret
ja
and
out
push
in
pusha
int3
push
movsb
cwtl
insb
add
sbb
lea
cmp
subb
scas
call
sbb
cmpsb
cs
mov
sbb
inc
inc
popf
fisubs
test
test
sbb
adc
mov
xchg
test
adc
mov
into
fs
add
mov
pop
or
iret
repnz
mov
imul
aam
xor
xchg
ret
adc
jnp
pop
push
pop
inc
mov
daa
hlt
movsb
mov
and
or
dec
addr16
xor
xor
pop
lret
mov
in
mov
shlb
jl
sti
rorb
xor
dec
inc
inc
call
aam
shll
inc
divb
imul
pop
mov
push
xorb
cli
mov
movb
mov
inc
xor
dec
movsb
xchg
pavgb
cmpsb
outsl
cli
pop
in
stos
scas
xchg
cmp
push
xchg
pushf
pushf
repz
and
pusha
call
cwtl
inc
mov
mov
mov
out
pop
sahf
xchg
pop
cwtl
mov
fisubs
add
shlb
lea
mov
pushf
mov
inc
je
fidivrs
fistl
pusha
jp
fdiv
sub
and
lret
sub
mov
mov
or
jne
mov
xchg
popa
xor
orb
ds
test
or
push
inc
lret
daa
pop
push
repz
dec
jge
inc
in
cmp
push
movsl
mov
imul
addb
push
stos
sbb
sbb
shrb
test
int
popa
data16
xchg
sbb
or
pop
popf
roll
add
in
repnz
xchg
inc
rclb
pop
sahf
scas
icebp
adc
pop
dec
inc
mov
jno
push
or
je
and
or
and
inc
ret
mov
adcb
incl
push
cltd
xchg
inc
push
test
rorl
movsl
rcll
int
pop
mov
aas
and
push
or
imul
push
mov
push
sub
ja
fdivp
adcl
fwait
adc
repz
leave
es
test
inc
mov
jnp
jbe
xchg
cmp
push
dec
loope,pt
pusha
loopne,pt
scas
cmpsb
adc
dec
jae
mov
add
add
xor
mov
scas
mov
and
pop
sub
in
xchg
fcomi
repz
push
out
mov
sub
es
sbb
add
dec
xor
push
and
int3
fists
adc
sbb
pop
mov
sub
sarb
push
pop
cmpsl
daa
sbb
scas
icebp
test
stos
xchg
bt
out
and
pushf
mov
int3
xlat
fucomp
or
in
repnz
jle
fdivl
mov
mov
xchg
add
js
clc
rcll
in
cmpsl
add
insb
mov
dec
test
gs
and
inc
leave
sbb
mov
push
pushf
xchg
jo
fcomip
filds
stos
cmpsl
into
xor
fwait
dec
adc
stos
jne
jae
mov
jnp
testl
add
mov
ret
stos
pop
or
pop
jmp
pop
jb
cmp
add
fldcw
and
jne
or
push
lcall
mov
mov
mov
push
mov
xchg
repz
jmp
jb
cmp
push
pop
push
rclb
jge
jle
push
mov
stos
push
imul
pop
add
aaa
mov
sbb
lret
mov
cmp
in
lcall
es
stos
dec
pushf
sub
sub
mov
pop
pop
sub
xchg
lea
pop
lock
nop
adc
cmpsb
lahf
test
sbb
out
xchg
frstor
out
test
int
imul
movsb
repz
mov
pushf
lea
orl
fcompl
cmp
push
push
mov
or
jecxz
icebp
roll
aas
xlat
addr16
fsubl
outsl
xchg
lods
inc
sbb
sbb
adc
or
lret
mov
mov
pop
dec
push
std
test
cs
jge
outsl
test
jno
dec
dec
lret
jnp
notb
outsl
pusha
jbe
xchg
out
scas
push
pop
inc
fnstcw
dec
push
inc
out
xchg
xchg
std
pop
sti
sub
adc
les
pop
cmp
aaa
pop
and
mov
test
jg
cltd
lret
xchg
pop
lahf
sbb
mov
enter
and
jae
or
and
push
pop
cwtl
call
xor
sub
push
jbe
or
outsl
lret
sbb
es
fldt
testl
xchg
cmpsb
mov
mov
movsb
adc
cltd
data16
js
or
sub
sbb
cwtl
mov
sub
inc
and
xor
out
in
aaa
lock
and
and
cld
mov
inc
jne
jne
les
xchg
imul
ret
fsubrs
outsb
sbb
inc
je
shl
idiv
jg
sar
sti
dec
scas
orb
sub
js
push
inc
popf
fwait
sub
jne
push
sbb
mov
das
lcall
stos
inc
inc
fwait
mov
repnz
dec
mov
mov
lods
repnz
push
mov
je
les
daa
test
je
mov
adc
aam
ja
jg
mov
add
or
sub
jnp
sbb
out
ret
fstps
dec
test
dec
popf
jo
pushf
inc
cmp
fcompl
lea
inc
pop
je
rcrb
jmp
mov
daa
sub
jnp
ret
mov
pop
and
js
inc
lods
repz
sti
xor
addl
inc
push
add
loop
gs
pop
and
xorb
mov
ret
jne
frstor
ds
popf
addr16
dec
iret
mov
leave
dec
lock
inc
push
out
push
jnp
mov
xor
sbb
shrl
fcoms
mov
fwait
jnp
fcomps
adc
push
bound
call
mov
dec
pushf
daa
xor
mov
jl
push
adc
sbb
cmp
xor
ds
jne
mov
xor
add
les
sbb
ret
data16
mov
setge
and
mov
mov
roll
mov
stc
mov
repnz
sub
inc
jno
outsb
pop
cmp
imul
dec
ret
mov
or
cwtl
mov
jnp
test
xor
push
cli
push
cmp
repz
insl
jle
and
pop
pop
in
les
in
pop
mov
or
push
cwtl
pusha
je
lods
popa
sti
mov
dec
mov
push
fmuls
push
jae
sub
xchg
cs
loop
repz
cmp
mov
pushf
pop
mov
xchg
test
and
and
pop
xchg
movb
fucomi
std
sti
mov
aam
xchg
jmp
adc
fisttps
int3
jmp
mov
fcoms
dec
pop
scas
or
push
cmp
dec
cmp
test
push
sarb
adc
push
push
mov
data16
dec
jbe
mov
mov
fsts
cmpsb
adc
bound
jmp
nop
or
mov
repz
mov
and
mov
out
mov
jg
dec
cmp
sbb
sub
xchg
shlb
push
clc
cmp
inc
sbb
inc
nop
daa
sbb
jnp
sbb
inc
or
stc
enter
ret
clc
adc
icebp
sbb
mov
leave
jbe
adc
outsl
xor
std
xchg
push
pop
popf
cli
popf
cmpsl
or
jg
cwtl
js
or
and
adc
movsl
insl
int3
xlat
mov
or
test
loop
mov
pop
cmp
and
dec
sbb
ss
and
scas
push
sub
aad
clc
mov
nop
add
ljmp
cmc
and
iret
repnz
push
inc
in
jecxz
push
inc
cmp
pop
test
test
sbb
mov
mov
nop
loope
ret
push
pushf
pop
pop
add
add
or
push
daa
dec
jle
enter
pop
dec
test
dec
in
or
cmc
cmpsb
pusha
test
cmp
and
adc
push
scas
adc
in
cs
cmp
cmc
push
push
cmp
sarb
in
push
aaa
fldt
inc
push
sbb
push
inc
adc
pop
mov
popa
pop
mov
mov
push
sarl
pop
cld
cmp
icebp
mov
adc
cmp
rclb
dec
or
jne
add
insb
cwtl
adcb
and
pop
ljmp
cmp
dec
push
cli
fwait
cmpl
xchg
dec
sbb
and
movsb
push
adc
iret
xor
test
pop
pop
xor
and
mov
xlat
daa
dec
adc
fdivs
fs
addb
jmp
outsb
mov
mov
stos
cmpsl
mov
negb
or
fisttps
inc
imul
jp
in
or
pop
cmp
jne
fs
adc
dec
dec
rolb
inc
into
mov
int
fsubrs
cmpxchg
or
les
ficompl
fmulp
stos
jle
inc
andb
mov
ss
je
jne
mov
jl
sbb
jbe
add
call
or
dec
inc
adc
pop
cli
mov
mov
cmp
fcmove
jp
fdivr
inc
mov
mov
dec
mov
cmp
or
andl
cmp
scas
mov
or
in
ret
ja
lock
iret
rorb
xchg
inc
aad
fldcw
and
push
movsb
in
popaw
jnp
xorb
mov
sub
cwtl
into
xor
call
imul
insl
xchg
and
bound
sub
mov
pop
movsb
push
testw
stc
and
lock
loopne
or
aas
jb
mov
test
and
inc
stos
lea
lret
xchg
mov
push
inc
and
pminub
jle
icebp
adcl
adc
ljmp
or
iret
dec
leave
cwtl
xor
and
mov
lret
iret
push
dec
mov
mov
adc
ret
xor
imul
loopne
and
push
inc
add
sbb
and
mov
outsb
and
push
mov
pop
test
mov
jno
cmp
mov
dec
cwtl
pop
mov
scas
mov
jne
leave
aas
sbbl
pop
cltd
xchg
fwait
cld
sbb
cmp
and
lret
inc
xor
sahf
jl
mov
in
ret
pop
inc
repnz
add
aam
mov
pop
rorl
shlb
sbb
shrb
or
pop
addb
jno
and
jl
mov
rep
push
push
enter
mov
mov
pop
pop
icebp
cld
lods
inc
and
imul
or
xlat
daa
mov
fisubs
pop
add
scas
sbb
fsubrl
xor
fs
mov
adc
xor
stos
cmpsl
adc
mov
inc
popa
dec
aam
rolb
mov
pop
lds
pop
sub
sti
sbb
adc
xor
or
sub
fstps
stos
sbb
push
into
nop
addr16
movsb
iret
adc
jnp
ret
xor
mov
hlt
fs
cmp
in
outsl
sahf
mov
mov
push
xchg
mov
adc
divb
loopne
in
pop
mov
popf
imul
rorl
jmp
aaa
cmp
outsl
xor
cmpsl
push
sbb
jl
and
and
ss
cmpsl
cmp
push
movsb
jmp
je
push
mov
mov
cltd
mov
mov
mov
rol
dec
imul
inc
inc
enter
cmc
fnstenv
imul
pop
aam
je
leave
in
cmp
es
lds
xchg
inc
stc
add
loopne
stos
push
pop
pop
lret
push
cli
pushf
mov
push
inc
cmpsl
mov
push
and
clc
andl
jbe
repz
inc
shrl
loope
dec
jmp
aas
ficomps
mov
add
pushf
xchg
scas
ret
stc
xchg
mov
sub
not
xchg
out
out
pop
pause
and
ret
mov
lret
lcall
mov
mov
imul
popf
cwtl
cmp
xchg
testb
test
lret
cmp
lock
out
xorb
jmp
outsb
lea
enter
aaa
adc
addr16
movsl
adc
pop
mov
pushw
jns
fmuls
icebp
adc
xor
jbe
pop
jnp
rcl
adc
cli
jno,pn
movsb
idivl
jge
fst
and
outsb
adc
mov
mov
jae
inc
enter
and
stos
jle
xor
lods
in
dec
xchg
jg
sub
loop
int
push
adc
push
mov
es
sar
test
xchg
ss
sbb
pusha
push
xor
stc
mov
call
sbb
add
pop
sbb
jl
and
add
mov
cmp
mov
sahf
and
push
cmpb
and
add
dec
jnp
icebp
push
loop
fisubl
std
jne
leave
lock
mov
test
scas
jge
or
iret
pop
nop
pop
inc
or
cmc
cmpsl
push
cmp
lods
xchg
pop
rcl
and
jg
popf
fisttps
call
pop
mov
push
adc
push
mov
ljmp
adc
rclb
push
inc
sti
mov
push
fldl
in
add
or
das
sarb
lret
sti
rorl
hlt
in
xchg
out
inc
cld
js
lods
fdivs
lret
fnsave
cmpsb
and
sub
daa
xor
jb
add
pushl
add
gs
dec
int3
movsb
mov
jbe
stos
cmp
cwtl
mov
dec
sahf
lret
test
mov
popa
sub
cmp
mov
ja
jnp
inc
out
jp
mov
adc
aaa
outsl
sbb
ss
pop
ret
push
lret
xlat
xchg
in
jno
xor
idivb
shlb
sbb
call
mov
aad
mov
enter
pusha
js
mov
sbb
and
rcl
fstl
lds
cmp
mov
inc
out
out
data16
pop
mov
and
lcall
inc
std
aas
pop
sub
push
add
fstp
pop
stc
icebp
push
xchg
test
xchg
pushf
push
repz
clc
test
dec
popa
aad
bound
out
xchg
test
insb
lahf
xorb
mov
inc
push
lret
push
pushf
cmp
lea
jno
push
cmp
dec
jae
add
xor
sbb
mov
test
repz
out
nop
sbb
adc
pop
cmpsl
sahf
jg
xchg
stos
cli
xchg
pop
fwait
mov
cmc
movsl
cmp
orb
cltd
data16
jne
cli
mov
mov
push
pop
repz
outsl
hlt
lcall
adc
inc
cmc
jle
lods
dec
js
jge
movsl
push
pop
xor
xchg
push
inc
xchg
pushf
mov
jns
adc
cmpsb
mov
sbb
and
or
ss
cmp
mov
mov
and
mov
negl
fcomps
adc
ret
repnz
push
and
in
or
int
fdivr
push
rclb
test
xchg
aad
imul
cltd
rcl
adc
fsubl
and
cmpsb
xor
rorb
mov
fmull
sbb
dec
sbb
add
addb
cld
int
add
pushf
and
jge
insb
sbb
sti
nop
sar
leave
jb
cmpsl
leave
cli
sub
out
clc
cli
int
dec
sub
xchg
mul
push
cmp
bound
in
mov
out
ret
push
test
das
jmp
sbb
xchg
jbe
out
fidivrl
mov
mov
jae
add
sub
idiv
bound
lock
fs
pop
in
sub
push
xlat
out
pop
sti
mov
inc
in
adc
fsub
inc
dec
mov
in
ror
scas
pop
pop
pop
push
mov
dec
test
add
cmpsb
mov
iret
mov
mov
fisttpl
mov
pushf
jl
scas
in
fidivrl
mov
or
push
loopne
out
adc
mov
lea
push
pop
test
mov
mov
pop
data16
push
cmp
repz
lret
mov
inc
mov
xchg
mov
cmc
mov
cmp
sub
test
jb
xor
and
test
cmc
repnz
in
popf
into
push
pop
push
mov
scas
cmp
inc
xor
data16
add
push
jne
cs
mov
and
out
or
cmp
test
push
sahf
dec
cmp
stos
lcall
insl
repz
jbe
inc
and
loopne
loop
xor
jae
jp
or
xor
jno
xchg
and
push
mov
ret
popf
xchg
mov
mov
rorb
jae
negb
inc
or
leave
fisttpl
sub
and
cli
jb
or
lods
inc
aam
cmpsl
dec
and
stc
out
jne
jb
or
lcall
mov
ss
fwait
jae
sahf
pop
clc
sbb
mov
jecxz
aam
add
jo
popf
adc
adc
cmc
xor
cwtl
scas
fwait
stc
hlt
in
in
mov
je
movsb
mov
and
cmpsb
in
add
sub
sbb
shll
call
mov
popa
retw
in
adc
cli
xor
aad
je
adc
push
insl
pop
adc
and
cmpsb
push
call
inc
adcl
xchg
add
sub
aaa
jge
jge
in
dec
in
dec
or
out
std
sub
xor
cmp
je
xor
mov
mov
inc
cmp
sub
js
xchg
mov
push
test
fildl
fwait
mov
test
jno
shr
add
ret
push
xor
sahf
mov
mov
mov
push
cmpsb
hlt
mov
jl
adc
in
sbb
inc
and
jp
jecxz
aam
mov
movsl
shlb
and
out
in
xor
fldt
mov
js
mov
lods
push
mov
adc
sbb
rcrb
push
ret
adc
ljmp
push
cmpsb
outsl
push
jle
test
mov
fidivrs
adc
inc
fs
dec
push
outsb
call
das
in
xchg
mov
mov
clc
fdivrl
imul
or
cmp
mov
add
das
adc
jne
push
sub
or
popf
lret
jmp
or
hlt
jmp
inc
call
sbb
push
icebp
add
adc
add
icebp
fists
aaa
sub
popf
inc
cmp
jb
arpl
stos
rol
cmc
add
mov
adc
sbb
mov
std
popf
dec
xchg
iret
popa
mov
add
ret
inc
adc
jnp
pop
push
shr
adc
mov
fisubrl
lea
and
add
push
xchg
mov
xchg
dec
cmp
cwtl
mov
sbb
inc
negb
jo
push
push
inc
xchg
arpl
xor
loopne
xchg
outsl
jae
ss
cmp
movsl
jge
inc
daa
clc
cmpsl
dec
cmpsl
push
out
test
or
dec
lds
mov
scas
mov
jnp
xor
pop
push
iret
push
sbb
xor
sub
clc
loopne
pop
mov
sub
push
test
fldt
push
mov
push
dec
pop
xchg
int
mov
cmpb
mov
sbbb
mov
cli
xor
mov
dec
xchg
lcall
lcall
fcmovbe
js
adc
test
rcl
ss
adc
imul
jge
mov
test
xchg
push
lods
out
sbb
cmpsb
dec
xor
cwtl
lret
mov
pop
sub
jns
jp
outsl
test
mov
outsb
and
jne
pop
stos
jmp
xchg
loope
popf
loope
pusha
cs
push
jo
sub
in
cmpsl
lcall
xchg
mov
mov
pop
push
roll
into
push
test
sbbl
sbb
mov
mov
das
add
cli
and
sbb
stc
scas
xchg
rclb
sbb
xor
pop
jo
into
cltd
lods
jecxz
gs
je
add
loopne
je
stc
pop
lds
jg
and
mov
fiadds
insb
sarb
mov
insl
push
jecxz
sbb
mull
lcall
fsubrs
adc
xchg
pop
stos
fs
add
add
jl
iret
lods
cltd
xor
adc
xor
mov
dec
mov
push
inc
pop
gs
sbb
xor
add
insb
sub
dec
sub
movsb
sar
fisubs
aas
enter
std
xor
ss
pop
stos
je
ds
mov
andb
lods
loop
or
mov
mov
sub
pop
inc
data16
mov
adc
sbb
jmp
push
cmc
xlat
inc
inc
insb
cli
lods
push
ret
or
adc
xlat
dec
xchg
push
jle
xchg
das
xor
pushf
mov
insl
mov
push
ja
pop
in
insl
sbb
icebp
pushl
add
sbb
push
ja
lds
sub
mov
pop
cld
adc
mov
push
clc
sbb
pop
or
add
out
lods
dec
lcall
leave
sub
sbb
lods
cmc
pop
mov
xchg
sbb
movsb
into
lahf
int
cmp
xor
loopne
addr16
mov
add
test
sarl
jg
inc
push
ljmp
enter
jl
jecxz
sbb
cmp
sbb
sbb
test
mov
inc
jecxz
jg
add
in
and
psadbw
push
shlb
jne
add
cmp
stos
imul
adc
jno
es
dec
sbb
or
pop
mov
dec
jge
ror
clc
mov
es
mov
and
aad
lods
imul
sbbb
out
leave
sub
sti
and
and
addl
int3
aaa
scas
testl
and
xchg
mov
std
ljmp
add
lods
mov
add
lods
pop
cmp
mov
mov
adc
popa
mov
cmp
or
mov
repnz
lds
sbb
mov
sarl
inc
fcmovne
add
bound
sarl
cmp
dec
xor
xor
cmc
push
mov
stc
push
jne
call
push
test
aas
lock
lcall
popf
cwtl
lods
dec
in
jg
test
mov
pop
js
sbb
jnp
cmp
test
xor
pusha
in
sti
mov
les
sub
call
cs
xor
push
pop
loopne
pop
add
sub
imul
cmp
lcall
fildl
mov
cld
jnp
jmp
repnz
call
insb
insb
aad
popa
scas
xchg
and
mov
push
cmp
push
fsubp
cld
dec
std
inc
xor
cmpb
inc
call
shrl
pop
xlat
jle
dec
rcll
lret
or
decl
icebp
les
dec
lods
mov
and
cmpsl
arpl
pop
enter
or
and
pop
in
fucomip
xor
loope
xchg
fidivl
mov
fs
loopne
push
dec
shll
cwtl
lret
imul
ss
cwtl
lcall
push
movsb
push
mov
mov
ficomps
pop
dec
add
push
js
jp
loop
and
dec
jne
insl
jb
jp
testl
jns
push
andb
and
cwtl
and
pop
daa
repz
ffreep
stc
cmp
cmp
mov
lods
mov
jne
in
mov
scas
mov
mov
rcrl
inc
fcoms
imul
cld
popf
lods
movsb
insb
sub
cli
repz
psllq
mov
ret
cmp
movsl
test
mov
xchg
sbb
rcrb
inc
sub
xchg
inc
hlt
add
fdiv
and
data16
fstpt
xchg
call
pop
lods
sahf
loopne
cltd
stos
add
push
xor
ret
andl
insw
iret
pop
into
je
sarl
cmp
and
sbb
bswap
mov
repz
pop
inc
shrl
cmp
loopne
xchg
ret
rclb
sub
test
mov
in
popf
push
sub
mov
push
sbb
mov
out
xchg
adc
mov
mov
push
sub
xchg
out
push
icebp
adc
hlt
lods
lcall
or
and
pusha
add
fidivl
pop
jge
sbb
push
cmp
and
pop
bswap
pop
fistpll
adc
out
adc
cwtl
or
push
mov
push
mov
aam
or
lret
test
mov
jo
outsb
add
insb
jmp
jp
aam
mov
lret
sub
ficompl
scas
mov
in
mov
fbstp
test
out
pop
lret
adc
xchg
mov
decb
jnp
mov
sbb
movsb
popf
xchg
sbb
in
push
outsb
and
rcll
xor
in
jns
repnz
add
mov
inc
lahf
aas
and
movsl
dec
jge
and
aaa
imul
xor
dec
out
inc
xchg
dec
inc
ret
sub
mov
lods
cmc
jmp
cmp
hlt
mov
mov
inc
cmpsb
inc
push
call
mov
inc
jg
aam
repz
add
or
or
sub
sahf
jb
inc
out
into
or
sbb
sbb
in
or
scas
mov
nop
adc
jmp
loope
enter
orb
add
scas
mov
xor
sub
pop
adc
mov
inc
test
pop
int
mov
mov
or
out
xor
wbinvd
fsub
out
in
push
faddl
xor
cmp
sub
bnd
sti
sbb
push
imul
cmp
lock
call
and
dec
cld
adc
fists
negl
and
mov
mov
rcrl
js
jns
rclb
pusha
jecxz
imulb
pop
adc
or
push
lahf
in
cltd
and
push
or
mov
and
inc
inc
push
pushf
xor
ljmp
andps
lret
inc
data16
mov
add
cs
outsb
sbb
les
lea
pusha
add
add
out
dec
cmpsl
sar
adc
fisttpl
test
jo
das
mov
inc
or
pop
bnd
add
mov
addr16
cld
push
es
push
dec
sub
or
sub
dec
insb
and
mov
cli
daa
push
outsb
or
xor
inc
dec
aad
push
cmpsb
adc
mov
fs
xchg
sti
shrb
dec
mov
sub
push
out
jmp
pop
out
push
sub
xchg
or
push
enter
mov
imul
mov
or
mov
sbb
fwait
lret
jg
subl
mov
sbb
pop
stc
mov
cmp
arpl
int3
enter
scas
jo
or
es
pop
mov
dec
adc
pop
mov
jne
and
mov
add
aam
leave
jns
insl
cld
or
es
out
daa
dec
mov
scas
cwtl
test
cmpsb
lcall
scas
xchg
hlt
xor
push
nop
imul
jg
scas
lcall
push
xchg
jecxz
xor
xor
jle
outsl
ret
jb
sub
cmpsl
lahf
lods
push
sbb
and
jns
xchg
sarb
sub
cwtl
adc
xor
mov
fcmovnb
mov
mov
nop
inc
pop
and
pop
ss
imul
and
ss
icebp
popa
xorb
inc
in
mov
leave
push
sub
sub
xlat
fstpl
mov
push
add
lods
mov
and
bound
notb
cld
inc
gs
push
add
cmc
je
loopne
cmc
mov
push
ljmp
addr16
mov
stos
mov
test
lods
out
fstpl
mov
xor
dec
inc
mov
add
and
adc
movsb
insb
out
mov
daa
inc
jns
cmp
adc
xchg
addr16
dec
jno
push
popa
pushf
xchg
cmpsb
cmp
cmc
cmp
push
cmp
jmp
popf
sbb
dec
into
sbb
jg
imul
cwtl
mov
jnp
cmpsl
bound
xor
mov
sahf
mov
cmp
dec
and
clc
out
xchg
ljmp
mov
or
and
mov
aad
lret
insb
jns
mov
clc
or
pop
les
add
mov
mov
ret
push
movaps
outsl
mov
dec
rolb
jecxz
jns
or
sbb
jp
dec
repz
dec
adc
add
xor
in
pop
loope
lods
test
pop
dec
data16
data16
jo
mov
je
mov
out
call
dec
and
mull
pushf
add
in
mov
mov
inc
jne
icebp
lods
and
xchg
inc
mov
xor
in
xchg
fdivl
push
adc
or
lea
das
shl
xchg
loopne
lcall
and
sbb
in
xchg
addr16
insl
sahf
sti
jno
das
cmpsl
xlat
or
lods
sub
push
adc
les
scas
pop
ljmp
cmp
mov
lret
xor
daa
or
mov
lods
es
jecxz
jne
jmp
sbb
das
dec
sub
pop
and
mov
jno
test
clc
insl
cmpb
xchg
adc
sub
push
xchg
push
out
inc
sub
outsb
cmp
pop
add
dec
xchg
in
sti
cmp
lds
gs
leave
fadd
imul
pop
lret
hlt
mov
adc
push
fwait
das
push
pushf
sbb
mov
pusha
jge
push
imul
inc
pushf
lret
je
push
push
std
jno
aaa
iret
fsubl
int3
add
idivb
xchg
jecxz
or
dec
cmpsb
dec
jecxz
cmpsl
mov
out
adc
test
insb
lahf
negl
pop
dec
or
push
imul
loop
out
ljmp
in
inc
cs
inc
data16
test
and
mov
add
add
mov
mov
push
mov
adc
pop
jp
stos
ror
xchg
ds
popf
xor
adcb
jnp
pop
sub
adc
dec
mov
push
popa
stos
inc
mov
jo
adc
insl
sbb
sub
fwait
lock
pop
mov
mov
mov
div
imul
lock
out
and
jp
sub
cmpsb
sbb
xchg
shlb
mov
scas
dec
ss
aam
fcoms
push
mov
jp
jae
cs
idivb
mov
push
sbb
add
add
mov
sarb
inc
inc
xchg
jne
mov
les
scas
loope
or
lcall
mov
mov
adc
ja
fsts
and
loopne
and
jle
and
mov
inc
inc
xor
cmp
pop
adc
sub
je
icebp
repz
lea
jle
lahf
orb
or
push
lods
pusha
mov
stos
int3
or
pop
mov
stc
iret
ljmp
inc
xchg
add
testl
mov
rcll
aaa
dec
push
fisubrs
sbb
fists
xor
fadds
aam
and
sbb
add
addr16
mov
popa
daa
pop
sarl
lahf
ret
stc
stos
mov
cmp
jle
push
sub
lds
lahf
lds
pop
stos
lcall
jecxz
scas
lds
pop
xor
fdivs
xchg
mov
pushf
iret
call
scas
insl
fwait
xchg
test
imul
out
mov
lea
sti
xor
aaa
push
mov
mov
lds
lret
sbb
fwait
lea
dec
mov
dec
adc
and
mov
xchg
pop
mov
outsl
movsl
xor
cmp
inc
dec
loopne
xor
push
mov
mov
pop
ss
sub
add
mov
or
mov
stc
das
add
cmp
mov
push
mov
cltd
stos
add
mov
into
inc
xchg
xchg
lods
scas
mov
mov
inc
test
imul
int3
sar
mov
pop
cmp
jmp
mov
dec
scas
sbb
mov
pop
jmp
imul
mov
pop
mov
icebp
int
pop
notl
pop
int3
into
lret
pop
cmp
adc
int
cli
xor
or
lock
icebp
sbb
push
mov
cmp
mov
sbb
mov
mov
jnp
mov
dec
nop
mov
inc
pop
push
lods
add
lret
jmp
pop
cmc
imul
insb
or
xor
jl
jo
jmp
cli
orl
les
sub
arpl
xlat
scas
cmp
add
dec
mov
int
imul
rcl
arpl
mov
sbb
push
hlt
js
popf
ss
nop
pop
xor
cmp
sub
shl
pop
leave
pop
push
mov
cmp
outsb
jge
cmp
popa
cmp
ja
int3
sub
lahf
push
cmpsb
or
subb
sbb
mov
sub
pop
xor
inc
lds
mov
mov
int
sbb
es
adc
jg
jle
or
lcall
pop
dec
or
aas
push
sbb
mov
jnp
push
int
shrb
mov
pop
repz
inc
cld
repnz
xor
loop
stc
sti
sub
inc
lds
dec
dec
out
jns
push
je
pop
ja
call
mov
lods
imull
sbb
adc
shld
ds
and
sbb
ret
dec
outsl
loop
test
jb
lret
ja
inc
adc
xlat
and
inc
lock
xchg
or
mov
and
mov
add
pushf
dec
icebp
cmpsl
adc
and
jnp
jb
gs
lds
imul
inc
sbb
js
idivl
ret
adcb
mov
dec
cld
push
movsb
icebp
test
inc
outsb
push
ljmp
and
jnp
mov
cmp
int
pop
scas
pushf
jae
dec
sbb
inc
fcmovnb
clc
leave
sbb
scas
pusha
call
fs
or
mulb
adc
fwait
je
sbb
test
bound
pop
inc
inc
xor
fistps
cwtl
idiv
jo
dec
aas
adc
subl
ds
sbb
sbb
add
pop
hlt
iret
add
add
orb
leave
ret
daa
add
negb
lretw
dec
lds
mov
daa
arpl
lods
mov
data16
cwtl
jg
insl
or
int3
mov
rolb
pop
mov
mov
push
stc
jno
push
clc
dec
notl
lret
inc
xor
pop
xchg
mov
dec
out
jns
loop
cmp
ret
clc
jno
pushf
adc
mov
fcmovnb
outsb
js
push
mov
call
pop
mov
loopne
aad
mov
sub
dec
movsb
push
into
adc
mov
push
cwtl
scas
inc
mov
aas
push
jl
sbb
rcrl
or
add
out
ja
lods
lea
movl
dec
cmc
ret
mov
add
inc
xor
loop
je
dec
leave
sbb
mov
jns
adc
mov
or
sub
movsb
sbb
in
mov
mov
push
in
sahf
inc
pop
fimuls
push
mov
push
mov
push
cmp
lea
enter
fsubs
jns
mov
pop
push
addr16
test
jmp
push
adc
sahf
mov
add
lahf
js
jae
pop
and
fmuls
adc
jl
push
mov
mov
aad
xor
mov
xchg
int3
xor
cs
popf
lahf
mov
movl
cmpb
add
xchg
dec
cmpsb
mov
shlb
ljmp
mov
lea
fdiv
jl
pop
ja
adc
lds
xlat
or
stos
imul
sub
xor
and
fldt
ljmp
bound
push
mov
aas
xchg
mov
lds
inc
inc
jno
jge
ret
mov
orl
add
out
cs
imul
jle
mov
mov
addr16
sahf
out
push
mov
lea
jecxz
shl
out
sub
inc
xor
imul
mov
add
xor
sbb
push
test
ja
test
insl
push
movsl
adc
and
std
and
mov
sub
push
sbb
jmp
aad
xor
xchg
icebp
xor
cmp
movsb
cmp
xor
mov
add
cmp
or
xchg
jp
jns
xor
inc
mov
push
pop
and
xor
push
cmp
fwait
jo
jo
lcall
add
xchg
cmpsl
das
xor
sub
jns
cld
inc
inc
mov
and
repz
fwait
jbe
mov
insl
jo
icebp
push
sbb
xor
rcrl
xor
pop
mov
bound
lea
mov
dec
sub
push
out
add
pop
xor
push
sbb
inc
mov
movsb
aam
movsb
mov
jg
in
negb
outsl
int
inc
or
iret
movsl
out
fistpl
loopne
and
xor
mov
dec
mov
push
aad
icebp
jle
xchg
jp
adcb
jge
roll
aas
clc
jg
add
push
push
push
xchg
lods
mov
addl
cmp
movsl
cwtl
imull
inc
mov
and
dec
cmp
aad
jl
ficoml
add
popf
sub
mov
ficoml
add
push
daa
sub
js
jge
xor
sahf
mov
push
mov
adc
lds
mov
daa
lea
mov
inc
dec
mov
mov
adc
test
popf
push
cli
movsb
pop
mov
jae
negl
pusha
jge
lock
test
sti
clc
imul
in
ret
adc
inc
or
jp
dec
xchg
repz
in
push
incl
movl
jno
ja
or
mov
inc
cmpsl
cmp
mov
mov
mov
arpl
aas
jae
inc
int
inc
out
rcll
roll
cmp
out
xor
push
pop
es
mov
mov
mov
xor
fstpt
mov
dec
cmp
pop
cmp
adcb
test
fisubl
inc
sub
movsb
addr16
adc
inc
iret
dec
and
pop
push
in
in
lods
in
pushf
mov
sub
push
pop
sub
test
rolb
test
dec
pop
push
int3
inc
in
sbb
lahf
push
movsl
shrd
adc
mov
xchg
lods
rcll
aas
pop
psubsw
mov
xchg
sbb
imulb
dec
pop
in
leave
and
inc
xchg
in
sub
repnz
push
sub
sub
and
adc
xchg
outsl
inc
iret
ja
pop
mov
inc
imul
xchg
cmp
mov
adc
inc
in
or
jg
and
aad
mov
cmp
ret
insb
lods
mov
mov
mov
fsubl
jnp
andl
sbb
lret
inc
sub
sub
scas
adc
inc
in
fs
daa
push
mov
insb
shrl
or
loop
nopl
shrb
iret
fisubs
jne
idiv
add
mulb
xchg
lods
mov
mov
xchg
adc
in
and
mov
xlat
loop
or
nop
pop
lea
pop
cmp
and
lret
mov
mov
pop
and
jo
bnd
or
add
dec
push
mov
mov
mov
adc
jecxz
out
imul
popf
lret
mov
out
xor
mov
push
pop
lock
lock
scas
dec
cmovge
xchg
mov
mov
push
sub
call
mov
outsl
inc
movsl
mov
sub
xor
mov
loope
mov
cmp
mov
cmpsb
fistpl
std
mov
pop
or
inc
pop
mov
xor
test
gs
jg
adc
mov
call
xchg
rol
push
jmp
mov
mov
sbb
jae
push
cltd
or
mov
iret
mov
ljmp
shll
fldl
lret
ret
shll
cwtl
inc
push
pop
and
adc
xorl
outsl
inc
movhlps
cmpsl
mov
leave
cmpsl
mov
push
jns
fisttps
mov
in
out
shlb
stc
cltd
in
pop
js
cmp
outsb
add
ja
pop
pop
xlat
lock
and
xlat
inc
jae
test
pop
dec
push
insb
nop
adc
ficomps
insl
mov
test
movsl
neg
sub
out
xchg
xor
ljmp
sbb
js
fcmove
xchg
sub
xchg
add
in
call
pop
sbb
dec
lahf
xchg
dec
inc
ficomps
cmp
xchg
ds
int
dec
mov
popf
push
sbb
mov
and
pop
sbb
jne
leave
test
mov
xor
fs
push
or
inc
pop
jno
add
xchg
jne
daa
xchg
cmp
ror
lahf
data16
push
mov
pop
jl
pop
mov
es
loope
and
je
stos
in
inc
fldt
sbb
xchg
lcall
xchg
cmp
ficompl
sub
lods
aas
into
lea
pop
stos
nop
lods
out
jecxz
orb
dec
pop
sbb
dec
mov
mov
mov
out
enter
pop
aad
pop
mov
xchg
loop
inc
fs
push
dec
pusha
in
aas
pushf
mov
movsl
xchg
fwait
lcall
xor
popl
je
push
pop
call
pop
into
inc
fs
popa
pop
push
mov
xchg
ljmp
pop
mov
sub
sbb
jecxz
pop
popf
push
push
cs
and
push
jo,pt
or
test
sbb
loop
and
test
adc
cmp
gs
mov
in
push
dec
add
inc
daa
addr16
dec
jle
add
or
xorl
arpl
rorb
inc
add
mov
sub
bound
pop
loopne
jns
xor
pushf
push
inc
nop
mov
sub
repnz
jbe
adc
mov
cld
insb
adc
mov
rorl
fwait
lods
jl
adc
push
cmp
je
jg
out
mov
flds
jne
shlb
lret
inc
shl
scas
lahf
scas
jo
sahf
add
pop
outsl
sub
xchg
in
inc
jg
jecxz
sahf
test
xchg
and
jp
loop
pop
cwtl
xor
xor
lds
ja
xor
mov
sub
ret
sbb
int
lcall
les
lods
lret
mov
mov
xchg
pushf
lods
sahf
sbb
ficompl
insb
ret
and
add
out
cmp
int
add
lea
fistpl
jecxz
push
clc
mov
or
lods
sub
addr16
sahf
push
pop
or
xchg
ljmp
pop
jg
int3
cmp
sub
push
imulb
pop
aas
sub
leave
mov
lods
add
xchg
mov
shr
out
incb
pop
mov
sub
pop
fcomip
push
dec
jns
loopne
daa
std
cmc
adc
out
sub
pop
and
pop
shll
lcall
testl
and
jle
or
fists
leave
inc
push
repnz
iret
pop
repz
or
in
mov
mov
gs
mov
cli
push
movsl
jo
ljmp
mov
adc
jbe
loopne
mov
rcr
cs
test
hlt
add
cmc
nop
aaa
arpl
sbb
pop
aas
je
pop
fimuls
enter
sti
das
add
pop
adc
sub
in
push
loop
or
sahf
fsubl
add
push
and
imul
lret
add
inc
cmc
add
mov
js
int
aaa
rolb
mov
arpl
jg
shll
rcll
inc
fwait
rclb
sti
lods
jb
std
jns
mov
add
xchg
mov
dec
sbb
cld
lret
aaa
jge
je
cs
add
mov
xchg
test
aam
inc
ret
adc
cmp
lods
xchg
fidivrs
icebp
je
cmp
jecxz
aad
sti
adc
fildl
jno
fwait
ss
into
sub
dec
icebp
mov
repnz
sbb
inc
add
xchg
xor
test
and
mov
mov
sub
ret
mov
out
pop
fcmovne
lcall
xchg
subl
leave
sub
aad
xor
into
dec
js
xor
mov
insb
aas
and
pop
lahf
pop
or
into
popf
daa
push
icebp
pop
mov
pop
enter
cmpsl
out
std
inc
xor
nop
subl
pushf
pop
sbb
fs
dec
std
xor
pop
call
xlat
pop
sub
out
dec
out
rcrb
sbb
xchg
pop
and
and
xlat
and
jle
pop
loope
outsl
pop
push
repnz
mov
negb
shrb
int
mov
push
push
insb
xchg
std
mov
jo
out
cmp
les
dec
push
or
ss
cmp
push
mov
shrl
mov
dec
loope
in
sarb
incb
fistps
xchg
daa
xor
adc
pop
dec
inc
lds
xchg
mov
jle
ja
add
adc
ds
jo
and
mov
test
call
dec
push
xchg
aam
lock
arpl
insb
add
movsl
xchg
add
push
pop
mov
jo
jne
or
jle
pusha
idiv
out
jnp
in
mov
or
mov
mov
adc
fdivl
stc
lahf
in
mov
push
mov
push
aas
aam
mov
sub
adc
ds
dec
push
mov
jecxz
dec
push
fmull
clc
jo
stc
or
sar
out
xchg
sub
jne
bndldx
cld
pop
xor
sbb
stos
jmp
pop
outsl
ret
movsb
je
inc
dec
mulb
lock
lods
ja
ljmp
sarb
cmpsb
pop
repnz
shrb
aad
pop
lar
push
sbb
mov
in
sub
xor
dec
cmp
mov
jl
push
lock
mov
cmp
mov
fchs
jae
es
pop
xor
adc
jmp
push
ss
cmpl
jg
cltd
xchg
jnp
cltd
cmp
xor
outsb
push
jp
adc
out
mov
add
out
lret
insb
sub
xchg
leave
pop
pop
xchg
pop
mov
jns
mov
dec
sbb
inc
test
lea
lock
icebp
in
inc
pushf
sbb
mov
or
and
mov
aam
stos
int3
lods
jecxz
pushf
addr16
out
mov
xor
outsb
sbb
movsl
stos
sbb
jp
mov
insb
cmc
lret
std
ret
out
jge
xchg
popa
mov
cli
dec
icebp
and
loopne
pop
push
push
adc
xchg
les
mov
ljmp
es
mov
or
push
cmpsb
sub
jb
imull
sub
nop
cmp
mov
mov
jb
and
nop
xchg
xor
in
lds
adc
arpl
sbb
inc
nop
xor
roll
push
xlat
imul
adc
cmc
leave
aam
imul
nopl
or
push
mov
mov
adc
sub
jns
adc
push
lock
lea
je
dec
lods
and
adc
je
pop
sub
and
ss
sbb
fnstenv
shlb
ss
dec
pop
popf
and
pop
xor
stos
ret
push
dec
test
cmpsl
rol
sub
cmpsb
arpl
popa
incl
loop
decb
jb
test
stc
fildl
add
or
cmpsl
aaa
lds
fidivl
cmpsl
loope
sbb
xor
or
in
or
repz
mov
push
mov
aam
adc
ds
jb
dec
push
rclb
sub
test
push
lahf
int
inc
sub
xor
imul
adcl
bswap
sub
popf
xor
push
dec
imul
rclb
lahf
push
sbb
mov
ficompl
jbe
or
test
mov
out
cmp
sti
flds
push
jbe
jbe
push
add
cmp
inc
daa
adc
ss
sbb
jl
out
in
ja
xor
repnz
push
mov
sti
test
jmp
daa
xchg
outsb
pop
push
leave
call
or
jb
xchg
in
mov
dec
push
in
pop
rorb
enter
ret
test
xor
mov
test
into
jns
aaa
jnp
loope
sub
jne
mov
sbb
sbb
or
lret
adc
pusha
scas
mov
mov
sbbb
mov
jae
and
imul
dec
pop
aas
arpl
mov
loop
jae
cmp
dec
add
sbb
cmpsl
adc
adc
sar
sub
ret
jnp
ret
shr
hlt
out
inc
push
rcll
ret
lods
insb
js
cmp
aas
inc
cmp
push
jecxz
popf
mov
cmp
mov
add
adc
aad
xor
je
jp
mov
xchg
xor
jl
jne
dec
xchg
xor
or
inc
lea
sbb
leave
xchg
dec
pushl
push
fsts
aam
stc
data16
sub
xchg
or
cli
jp
or
cmc
orb
dec
scas
outsl
xchg
cld
add
adc
xchg
dec
lock
testb
aam
ret
cmp
popa
movb
ljmp
mov
stos
xchg
add
pusha
clc
pop
nop
or
cmpl
cmp
out
in
xchg
jbe
push
jmp
nop
jns
inc
push
push
dec
push
popf
or
in
xor
in
aas
es
push
mov
sub
pop
nop
call
pop
mov
push
out
popa
cmpsl
lret
mov
and
leave
scas
iret
shl
xor
daa
addl
mov
jns
pop
sbb
jne
test
sub
pop
pusha
fiaddl
mov
repnz
js
inc
imul
and
mov
jne
fsubl
into
pop
xorb
lods
sbb
ja
inc
in
push
ret
push
sbb
loopne
pop
lods
pop
mov
mov
push
mov
mov
or
xchg
pusha
adc
arpl
decb
and
push
ret
adcl
mov
pop
pop
fldcw
cltd
xor
pop
loop
xor
jnp
jg
inc
xlat
push
sub
lds
lret
sub
xorl
les
inc
push
or
sti
or
aas
add
ss
in
in
pop
jp
hlt
mov
sub
dec
dec
flds
lods
xor
aam
stos
mov
and
enter
fwait
lret
push
icebp
mov
arpl
fdivrl
push
out
pop
cmp
movsl
iret
sub
out
sub
inc
add
lret
xchg
pop
adc
fldt
dec
ja
test
psraw
outsb
mov
fadd
jae
push
test
push
xor
dec
loope
and
and
arpl
add
pop
jb
cwtl
add
lods
xor
push
test
sbb
cmpsl
data16
pop
lahf
sub
imul
insl
mov
and
testl
ret
mov
mov
pop
adc
cld
stos
ret
ds
mov
or
pop
cmpsb
sti
lods
cmpsb
int
fists
int
inc
push
pushl
adcl
inc
js
lret
xlat
fcoml
jnp
mov
add
pop
lret
imul
stos
clc
jne
orl
sub
push
sarb
mov
lahf
sbb
fiaddl
mov
or
pushf
int3
xchg
popf
in
mov
cmp
lret
mov
mov
fldt
inc
pop
aas
xchg
test
jno
xor
int3
js
or
xchg
cmp
dec
nop
into
push
inc
sahf
adc
dec
adc
cltd
jge
cwtl
pop
aam
push
xor
repz
or
or
and
xor
pop
jmp
push
fldl
push
add
repnz
or
adc
mov
sbb
or
xor
xor
mov
popa
mov
cmp
sub
out
adc
inc
adc
push
or
dec
enter
jle
mov
dec
setns
dec
push
in
push
pop
or
pop
loop
out
inc
sub
outsb
pop
jecxz
int3
mov
xlat
mov
outsb
fcmovu
stos
arpl
dec
dec
adc
or
mov
mov
les
mov
test
mov
mov
cld
inc
arpl
addb
stos
jl
mov
movsb
push
aas
inc
div
sahf
test
xorl
mov
sahf
xchg
rcl
jbe
mov
out
cmp
and
pop
stos
lret
push
push
inc
out
ljmp
sbb
sub
jne
mov
jne
push
rcll
loope
pop
in
call
cmc
loope
xor
add
xlat
push
test
lahf
pop
push
pop
lds
fldt
xchg
arpl
push
jno
out
jb
jl
xorb
or
inc
mov
inc
loope
fwait
ret
mov
dec
mov
sbb
arpl
pushf
pop
sti
or
out
hlt
js
loopne
xor
scas
mov
lods
mov
xor
shlb
push
cwtl
aad
mov
push
cmp
adc
movsl
imul
push
add
xchg
add
jbe
or
mov
cmpsl
fwait
xor
xchg
aam
sub
mov
dec
adc
imull
sysret
negl
inc
push
mov
gs
fcompl
adcl
out
cli
mov
ffree
jle
scas
dec
daa
jo
sub
dec
in
sbb
jl
push
pop
mov
sbb
pop
repnz
jbe
jp
inc
pop
divb
add
in
mull
jnp
mov
pop
cmp
pop
sbb
test
sbb
std
jge
jl
and
inc
int
xchg
loop
rorl
jmp
nop
sub
xchg
sbb
hlt
test
leave
mov
mov
lock
loopne
add
in
fsubl
aad
mov
jge
ja
and
pop
push
mov
mov
mov
add
inc
test
aaa
push
jecxz
cmc
jbe
pop
xchg
mov
stos
mov
inc
lods
jecxz
inc
ja
and
lea
ss
int
and
sub
jmp
cmc
shr
mov
out
ss
mull
aas
adc
dec
movsb
lret
in
aam
inc
imul
push
data16
xchg
aas
pop
repnz
lret
rcrb
shlb
out
and
fildll
call
or
mov
add
out
sahf
sub
add
mov
rcr
dec
and
addb
xchg
pop
in
sbb
clc
popf
or
imulb
ret
shrl
pop
adc
scas
push
add
ret
lds
mov
mov
adc
jnp
sbb
adc
mov
and
jno
and
fsubrs
mov
xor
cs
shrb
out
lcall
sub
call
fcompl
std
mov
dec
or
dec
call
mov
push
sti
mov
daa
ret
std
mov
ror
pushf
push
pop
das
outsb
test
fidivrl
push
sbbb
mov
mov
ficoml
sbb
inc
mov
adc
mov
stos
mov
mov
or
ds
les
add
nop
ljmp
xchg
xor
sbb
clc
lock
enter
shl
push
pushl
dec
loope
out
outsl
push
lods
enter
insl
fsubp
xorl
hlt
sub
mov
cmp
ret
pop
stos
sub
push
mov
adc
mov
imul
mov
jl
icebp
lcall
in
cltd
imull
popf
inc
xchg
sbb
cmp
mov
pop
fsqrt
sbb
lahf
pop
stos
xchg
mov
call
testl
inc
jge
push
test
cmp
mov
mov
mov
test
dec
dec
push
loopne
cmpsl
pop
cwtl
push
aas
and
bound
add
xchg
imul
inc
push
jge
in
push
jnp
push
iret
mov
shr
idivl
mov
sbb
addr16
add
push
repnz
xchg
pop
jecxz
push
xchg
inc
xchg
fcomps
inc
mov
push
mov
sub
xchg
out
scas
std
pop
xor
les
mov
int
pop
jno
fstpt
into
inc
inc
pushf
push
mov
test
test
sbb
mov
mov
sbb
orl
inc
repz
jae
xor
and
sbb
mov
arpl
push
jg
outsb
imul
mov
push
pop
jns
test
repnz
cli
lahf
pop
push
xchg
pusha
js
add
negb
cmpsl
and
and
push
xchg
sbb
lea
cmc
ret
lahf
sub
or
xchg
xor
ret
ljmp
add
push
psubq
add
mov
add
xor
decl
popa
sbb
inc
xor
int
cwtl
add
xchg
cmp
stos
insb
jge
mov
sub
inc
push
push
jmp
dec
xor
lods
je
or
mov
mov
cmp
rolb
mov
sbb
adc
jae
jo
xchg
int
mov
add
cli
add
inc
testl
xor
aaa
test
jns
mov
adc
mov
mov
gs
ja
cltd
push
cmc
aad
pop
sub
sbb
mov
in
xchg
insl
cmp
push
scas
mov
push
std
adc
xor
cmp
repnz
clc
mov
cltd
je
mov
sub
sbb
inc
xor
shlb
sub
inc
jmp
jmp
into
push
mov
sub
jns
mulb
daa
mov
and
mov
movsb
cmp
hlt
test
pop
adc
in
cmpsl
pop
bnd
es
mov
and
scas
cmp
push
and
add
jcxz
popf
or
xchg
mov
add
jp
das
mov
inc
test
lea
jle
and
dec
mov
pop
stos
xor
dec
in
xchg
mov
movsb
push
xor
loopne
xchg
inc
xchg
int3
mov
inc
mov
dec
or
fsts
lods
adc
fistpl
adc
or
clc
mov
cmp
sbb
jb
mov
hlt
aad
jg
push
dec
rcrb
inc
rcrl
insl
sub
sub
and
push
jns
cltd
adc
clc
pushw
rcll
jg
das
test
xchg
mov
jbe
bound
mov
pop
pop
push
and
je
in
xchg
push
and
pop
cli
cmpsl
out
pop
jmp
add
mov
mov
leave
xchg
movsl
pop
pop
ss
xchg
pop
mov
fsubs
ss
out
lret
sbb
insl
js
insl
adc
mov
cmp
add
mov
push
xchg
in
jecxz
adc
dec
xor
aaa
add
jecxz
in
insb
jmp
cmp
or
pop
xchg
jb
mov
inc
cltd
cmp
mov
nop
shll
mov
dec
sbb
add
push
and
sub
jae
popf
sub
push
adc
in
aaa
dec
xor
pusha
fcmovne
gs
inc
push
add
xchg
loop
xor
int3
outsb
mov
mov
cltd
cli
sbb
mov
out
sub
outsb
xor
in
outsl
ret
mov
insb
pop
pop
mov
or
add
add
sbb
nop
jae
mov
push
cmpsb
pop
dec
repnz
das
pop
jecxz
in
leave
mov
mov
pop
pop
xlat
xor
inc
sub
icebp
fnstenv
sub
out
inc
jle
test
sub
nop
lret
aad
or
sub
pop
sbb
xchg
pop
xor
cwtl
ja
pop
jg
cmp
stc
inc
mov
fwait
add
dec
cwtl
shrb
xor
scas
in
inc
lcall
cmp
inc
enter
add
cmp
dec
lret
enter
xor
xchg
xlat
add
inc
mov
in
lcall
cmp
jle
jnp
jb
fldcw
imul
bound
psubw
pop
lock
fldenv
mov
in
sbb
mov
adc
shlb
pop
sbb
jle
jne
cmc
pop
cltd
inc
outsl
fistpll
popf
sub
fnstenv
icebp
std
daa
sub
jae
or
inc
faddl
sub
mov
dec
sub
jle
cld
dec
inc
test
rorb
aas
push
sahf
lods
add
dec
imul
test
jne
jb
ds
xor
adc
fimuls
rol
xor
insl
or
movb
ret
ljmp
aaa
mov
sub
mov
lods
fisttpll
xchg
rcl
inc
mov
push
sub
or
adc
std
lret
mov
dec
xor
clc
add
popf
cld
mov
push
sahf
ret
lods
repz
inc
inc
jp
out
ret
mov
mov
xor
add
les
jmp
jo
push
pop
addr16
cltd
push
mov
sbb
clc
and
fcmovbe
mov
sub
add
dec
cli
aas
rcl
dec
mov
negl
lea
movsl
dec
imul
movsb
lcall
mov
and
inc
cmc
add
in
mov
hlt
push
jl
addb
jae
jae
cld
mov
dec
ljmp
inc
jle
jbe
inc
ljmp
jae
sahf
mov
iret
popf
jbe
jmp
push
sub
nop
aad
adc
insl
shrb
mov
cmp
sbb
sarl
enter
jb
aaa
push
inc
lock
or
or
popf
pushl
sbbb
xchg
subb
addr16
sub
enter
push
aad
jge
add
daa
add
and
mov
loope
dec
push
jl
add
inc
push
negl
fcomi
mov
shll
jb
fiadds
imul
mov
pop
js
xorl
mov
sbb
ja
sbb
xor
cltd
scas
dec
movl
in
mov
fs
and
mov
mov
inc
in
je
dec
mov
inc
mov
jmp
je
xchg
rcr
mov
shl
nop
shll
xchg
jmp
inc
into
pop
rcll
or
adc
or
sub
pop
jns
lcall
dec
leave
or
sbb
jle
test
xlat
mov
pop
mov
jo
subl
push
fdivrs
lcall
mov
xor
mul
mov
scas
ror
out
nopl
test
mov
addb
push
mov
jge
xor
xor
mov
dec
and
lret
jnp
push
data16
ja
scas
or
stos
fwait
cli
scas
jns
jmp
mov
hlt
shlb
xchg
mov
int
in
icebp
js
dec
dec
nop
mov
sbb
cmp
fidivrs
test
jecxz
or
les
mov
add
cmp
les
push
pop
es
inc
subb
daa
out
jg
fwait
sbb
fistl
in
inc
sti
rolb
xchg
inc
aad
xchg
dec
mov
insb
cmp
stc
pop
loope
out
int3
add
loopne
pop
call
and
sahf
inc
xchg
sarl
ret
adc
sbb
subb
xchg
bnd
mov
push
mov
dec
lahf
mov
mov
xchg
lds
in
push
int
sbb
jne
inc
int3
xor
mov
je
test
pop
das
add
enter
adc
jne
sub
lret
jnp
shr
mov
cs
movsw
pushf
js
sub
push
inc
out
fcomps
xchg
popa
mov
lods
cmp
mov
movsl
mov
or
mov
ds
aam
out
arpl
jle
es
popa
lods
icebp
pop
mov
adc
rcl
movsb
lcall
fsubp
scas
pop
cmpsb
inc
dec
orb
lret
sbb
fprem1
loopne
and
test
xor
lea
jno
into
inc
push
lock
inc
test
clc
fildll
fdivl
stc
stc
jle
cmpsb
pop
ret
mov
xchg
adc
rcr
push
mov
mov
inc
sub
mov
jg
shrb
pop
into
lods
frstor
jno
rorl
jmp
cmpsl
test
shll
lret
imul
cmpsl
push
in
dec
mov
insb
loope
dec
mov
or
loopne
sub
in
mov
iret
sarl
cs
mov
je
decl
test
outsl
cmc
dec
xchg
jmp
xchg
and
sti
xchg
icebp
cld
dec
jecxz
sbb
mov
mov
adc
dec
je
mov
outsl
scas
lahf
cmp
push
and
addr16
inc
or
push
ficomps
push
xor
mov
xor
repnz
pop
cmpsl
ds
loope
mov
and
pop
push
jp
add
adc
sub
and
movsl
sbb
int
fwait
pusha
jnp
outsl
dec
test
xchg
cmpsb
mov
shl
mov
dec
xor
cmc
jp
popl
lods
movsb
push
or
aaa
jb
push
add
imul
pushf
pushf
mov
push
mov
addl
std
and
dec
cwtl
mov
mov
dec
push
pop
adc
pop
imul
adc
xchg
push
push
or
aad
mov
scas
clc
int3
cmp
pop
insb
daa
fildll
mov
sti
cmp
pop
or
test
dec
shrl
adcb
push
push
mov
in
fcoml
fwait
jae
out
jo
sbbb
ret
fnstenv
xor
mov
mov
xchg
stos
push
rcrl
sbb
clc
stos
lret
push
or
xchg
jae
xchg
xchg
inc
cmc
sbb
arpl
push
mov
dec
push
jmp
xlat
push
or
mov
sub
insb
mov
ss
inc
xchg
call
dec
stos
inc
or
mov
mov
dec
in
mov
jns
bound
mov
jb
nop
adcl
aas
ret
jb
mov
jge
xchg
ljmp
mov
mov
jge
mov
sub
xchg
in
mov
or
iret
out
xchg
push
jge
popa
lcall
inc
js
inc
push
mov
iret
iret
imul
cli
sbb
fdivr
dec
fcmove
sub
or
push
je
testl
ret
pop
cmp
addl
jns
test
rorb
mov
push
mov
fadds
fsubrl
jnp
jmp
inc
xchg
ljmp
movl
mov
mov
fstps
andl
jae
jmp
xor
mov
mov
imul
pushf
data16
aas
push
lcall
loope
cld
mull
cmp
mov
fidivrl
mov
fldt
aas
fdivs
xchg
xchg
hlt
xor
cmp
pop
cmp
lcall
mov
ja
addr16
fadd
dec
lds
addr16
mov
mov
mov
mov
adc
sbb
pop
cmp
sbb
add
sahf
addr16
cmp
movsl
inc
sbb
mov
xchg
nop
push
push
xor
sub
fimuls
or
leavew
push
out
enter
icebp
cs
bound
popa
bound
andb
push
adc
xor
adc
mov
aad
adc
push
push
and
enter
mov
mov
adc
push
test
sbb
mov
pusha
out
ret
popf
add
daa
fnstsw
lods
cmp
jmp
btr
mov
mov
in
mov
lret
lret
in
jmp
xchg
jnp
pop
sub
xor
outsl
xchg
ss
test
in
call
test
pop
jo
inc
sub
repnz
testb
cwtl
test
sbb
mov
jns
clc
mov
mov
mov
mov
es
mov
sar
push
add
pop
cmp
stos
ds
cli
sbb
inc
test
pop
push
sub
jo
adc
push
mov
cmc
dec
or
xor
scas
pop
jbe
ss
jp
xor
loope
push
outsb
pop
adc
inc
push
arpl
dec
xor
mov
scas
cmpl
fucomi
cmp
addr16
mov
stos
fnstsw
xchg
fmull
jns
clc
and
mov
mov
pop
cmp
fstp
pop
push
aam
sbb
push
jne
mov
cs
ds
cmpsb
xchg
lahf
stc
cmp
imul
pop
sbb
and
sub
mov
pop
fwait
xchg
testl
mov
add
leave
imul
cli
pop
or
fildl
mov
cmp
nop
xor
stos
cmp
or
xor
mov
fstl
rcrb
adc
in
dec
stos
in
ja
push
test
inc
mov
aaa
popf
popa
jl
aad
jg
dec
pop
dec
cmp
xchg
xor
push
movsb
xor
enter
fisttpll
aaa
out
pcmpgtw
and
xor
pop
pusha
lahf
push
add
pop
dec
pop
lods
xchg
dec
mov
or
cwtl
stc
inc
mov
mov
cmp
outsw
xchg
cmpsb
jmp
inc
ret
push
lcall
xlat
fwait
out
and
je
pop
jg
mov
test
sub
rorl
in
mov
shll
mov
lds
xor
push
popl
push
mov
pop
pop
cmp
ret
adc
mov
scas
cmpl
add
int
aad
lea
mov
and
loop
xchg
scas
push
ljmp
iret
cmpsb
out
mov
pop
cmpsb
xchg
fiadds
call
pusha
inc
adc
mov
popa
inc
test
outsl
imul
push
ss
loope
cmpsb
out
sahf
dec
push
out
ljmp
xlat
test
lcall
xor
movsb
pop
outsl
aam
insl
mov
fs
cli
es
ficoml
dec
or
fistpl
sub
sbb
jmp
xorb
dec
xchg
xchg
push
or
sub
adcl
in
stos
pop
fbstp
mov
js
mov
or
ss
cmp
daa
cmp
lret
inc
mov
sbb
push
or
xchg
push
in
bound
repnz
mov
and
xor
mov
dec
xchg
mov
fsubrl
fdiv
mov
and
dec
mov
je
pop
and
lock
loopne
xchg
inc
xlat
adc
inc
clc
pop
jp
xor
outsl
cs
ss
sbb
ja
std
repz
and
mov
xchg
jno
mov
scas
cmp
fidivrl
mov
out
mov
sub
sub
stc
jg
sbb
arpl
jnp
mov
into
in
dec
testl
mov
inc
inc
inc
push
mov
adc
or
std
scas
scas
push
jae
lock
stc
sub
test
pop
negb
and
mov
bound
scas
inc
push
test
pop
test
faddl
sbb
jecxz
fsubp
loopne
loop
xlat
dec
in
xchg
mov
push
aas
mov
test
arpl
insl
jl
mov
lods
push
insl
cld
cltd
hlt
push
adc
test
stos
or
insb
add
jge
xlat
mov
das
lds
lcall
cmp
iret
roll
scas
ret
int
inc
push
dec
loop
dec
push
xchg
rorl
lahf
lcall
mov
repnz
xchg
push
xor
dec
push
stos
scas
cmp
push
lds
hlt
inc
cmp
in
push
sub
lcall
xor
xchg
cs
mov
mov
fstpt
adc
add
pop
int3
and
gs
data16
mov
popf
jae
cmp
add
pop
mov
repnz
jl
out
lods
mov
das
daa
mov
or
in
cmovo
mov
xlat
jmp
aas
push
stos
adc
rclb
lods
nop
fs
jbe
push
mov
std
test
fs
scas
xchg
add
cmp
mov
popf
add
rcl
inc
sub
mov
aad
jg
mov
cs
push
sub
nop
shlb
inc
sub
pop
cli
adc
mov
mov
pusha
pop
into
push
fldenv
ljmp
lahf
test
lds
test
shrl
push
leave
aaa
push
inc
jnp
icebp
das
shlb
pusha
mov
cmp
aad
mov
inc
jnp
or
xor
inc
xor
inc
dec
divb
inc
cmc
and
dec
xchg
jl
push
pop
gs
ljmp
fisubrl
jmp
cli
mov
inc
cmp
dec
mov
loop
int
and
jno
arpl
and
dec
jb
das
or
ret
es
pop
xor
sub
sahf
cmpb
out
inc
inc
addb
out
icebp
lods
and
je
sahf
pushf
xchg
in
addr16
and
mov
cmp
pushf
inc
inc
stos
sbb
hlt
dec
ja
call
mov
push
jns
mov
mov
pop
test
ljmp
sarb
xchg
or
sbb
push
jno
aam
jbe
sbb
jb
sub
sbb
or
aad
orb
ja
xchg
push
imul
ret
cmp
imul
sti
int
jae
stos
dec
adc
jecxz
xor
int3
aad
jnp
inc
nop
dec
mov
or
inc
mov
test
jg
cmp
popa
pop
insl
sub
lret
lahf
shrl
cmp
add
push
push
mov
popf
mov
push
or
jp
call
pop
push
mov
dec
sub
sar
and
mov
lds
xor
ds
fsubrl
stos
cmpsl
ffree
mov
iret
test
xchg
ret
aad
cmp
pop
or
mov
insl
mov
xlat
or
std
aad
lods
sub
and
inc
mov
push
test
pop
sbb
cltd
mov
pop
je
mov
in
push
daa
setle
sbb
fwait
pop
jmp
jecxz
seto
mov
out
int3
push
call
sub
add
mov
sbb
dec
cmpb
idivl
push
daa
push
mov
sbb
data16
out
sub
aas
cmc
push
leave
lods
mov
inc
mov
pop
xchg
incb
sarb
rorb
imul
loop
out
jge
enter
into
cmc
jle
sbbb
outsl
lds
adc
call
rcl
mov
out
mov
mov
dec
and
xchg
imul
sbb
or
outsb
cmp
sbb
jns
push
scas
adc
jge
add
add
xor
push
ds
xchg
stos
icebp
out
push
mov
stos
outsb
testl
push
stos
movsl
mov
jle
shld
push
loop
lcall
xor
mov
push
mov
cmp
jnp
xchg
movsb
xchg
shl
xchg
jl
sub
xchg
in
jmp
sbb
push
adc
out
add
push
jmp
sarb
add
xchg
mov
mov
mov
xlat
imul
stc
adc
ljmp
loope
mov
cmp
sub
pop
cli
cld
inc
lcall
xor
jne
mov
adc
mov
ljmp
fiadds
push
fcmovne
dec
test
fists
scas
pushf
iret
xchg
je
jns
and
mov
and
mov
push
adc
cmc
mov
xor
mov
mov
stos
ljmp
xchg
cmp
loop
es
js
negl
add
cmp
lcall
sub
imul
fwait
and
cld
sbb
mov
jmp
out
sbb
cmpsb
subb
pop
lcall
ja
jl
lret
iret
mov
int3
scas
cmc
stos
and
movsb
add
xchg
movsl
add
jp
jle
inc
mov
fs
test
imul
lret
and
lds
pop
scas
cld
pop
mov
testb
dec
sub
ret
push
sbbl
xchg
cmp
cs
mov
push
test
test
movsb
cwtl
scas
sahf
gs
ds
mov
mov
sbb
or
mov
out
fucomip
adc
test
popw
xchg
fsts
and
push
mov
mov
cltd
cltd
lahf
add
xor
adc
jle
stos
testl
mov
push
xor
mov
rorl
mov
jnp
cmp
cmp
cmpsl
mov
sbb
sahf
sbb
mov
orb
inc
push
ja
inc
pop
cmpsl
jecxz
out
scas
stos
aam
adc
aam
lds
mov
scas
shrl
push
jge
sahf
xor
std
cmp
outsl
lea
es
je
dec
mov
lods
sahf
inc
andb
int
adc
cmp
mov
insl
shll
dec
mov
pop
pop
inc
es
das
mov
and
out
jno
loopne
mov
pop
sub
inc
mov
rcll
pop
dec
mov
sbb
sbb
jnp
fwait
cmpsl
popf
mov
ffree
adc
insl
mov
std
pop
mulb
jne
testb
jae
push
stc
dec
pop
clc
mov
out
fisubs
in
fsubl
in
jo
cld
rol
test
out
or
pop
jb
add
mov
pop
xlat
lret
xchg
push
pop
jge
ljmp
add
shlb
xchg
push
clc
pop
ds
xchg
mov
and
movsb
stos
in
decb
jecxz
mov
xchg
imul
aad
es
or
hlt
inc
inc
xchg
sbb
mov
je
shlb
jb
scas
test
jbe
sub
push
pusha
cs
movsb
arpl
push
outsl
mov
cmp
and
fwait
scas
loopne
nop
fisubrs
je
cmp
int3
movsb
mov
js
cmp
arpl
dec
aad
rorl
mov
in
jg
xchg
daa
push
or
lcall
sub
jnp
add
dec
mov
jae
jle
jno
push
icebp
call
pop
cmpl
sbb
mov
mov
addl
mov
cmp
mov
int3
fstpl
mov
jno
dec
in
es
sub
xchg
es
sub
rorl
mov
icebp
inc
les
mov
out
test
ret
add
loop
repnz
out
arpl
push
sar
mov
lods
pop
xor
mov
xchg
sub
ret
jle
je
add
and
lods
mov
jecxz
mov
push
repz
shlb
lahf
lea
lcall
push
xor
push
mov
mov
adcl
in
stc
sti
sbb
sbb
or
shlb
push
cmp
add
add
fidivrs
mov
outsb
into
jp
pop
in
sbb
in
das
cmc
jo
jns
adc
jg
shr
cwtl
lods
cmpsl
inc
and
cld
sbb
repz
test
xchg
sub
mov
cmp
scas
sbb
xchg
inc
push
fcomip
or
cwtl
and
push
lahf
ret
inc
mov
inc
mov
mov
pop
out
popf
sub
clc
jno
stc
xchg
fs
fwait
out
xor
aas
push
sbb
outsl
iret
ret
jbe
or
in
mov
mov
pop
sbb
int
pop
out
dec
jmp
mov
dec
mov
in
sbb
jnp
addr16
inc
ret
pop
aas
imul
lahf
mul
xor
cmpsl
inc
ror
cmpb
and
pop
popf
cmp
xor
mov
loope
sbbl
pop
mov
adc
test
jo
jle
jns
lds
in
inc
repz
mov
mov
adc
push
pop
les
mov
ficomps
lret
clc
dec
data16
inc
mov
cmp
mov
push
rcll
adc
dec
fnstcw
enter
aaa
es
jae
dec
fisubl
in
clc
pop
dec
cmpsl
mov
jo
xor
push
loope
push
sub
cli
xor
xor
sbb
lcall
fisubs
aam
push
testb
inc
mov
out
scas
xchg
in
movsb
mov
cld
ret
pusha
in
mov
nop
enter
mov
xor
push
pop
add
sub
cmp
data16
pop
jb
mov
mov
jno
stc
inc
mov
mov
pop
mov
xlat
addps
lret
call
stos
test
mov
cmp
dec
sub
cli
add
pop
movsb
imull
or
inc
sub
and
testl
mov
adc
mov
and
xchg
dec
test
fwait
dec
push
or
and
ds
divb
lcall
push
cmp
jl
push
out
mov
lahf
pop
jge
out
out
add
loope
out
push
cmc
sbb
daa
cmp
sub
test
or
adc
dec
je
dec
pop
fisubrl
mov
fcompp
push
mov
jl
xor
pop
int3
and
aas
cltd
mov
or
movsl
mov
jbe
mov
mov
mov
bound
dec
mov
scas
and
jmp
xchg
enter
orb
aaa
xchg
sub
insb
in
imul
hlt
or
cmc
iret
mov
mov
cmp
sbb
out
xor
in
and
jmp
xor
lret
scas
cmp
inc
subb
es
pop
cmp
popa
inc
ja
sbb
xchg
jecxz
movsb
xchg
jle
mov
in
pop
lcall
sbbl
push
ret
adc
das
adc
int3
icebp
dec
and
mov
mov
push
shlb
mov
sbb
nop
jmp
aas
mov
ja
and
push
cmp
aam
es
leave
out
pushf
ljmp
icebp
cmpsb
mov
loope
xor
out
and
imul
add
sub
mov
test
sbb
jne
sub
outsl
xor
mov
shrl
clc
cli
rolb
sub
rorl
ljmp
mov
sub
sbb
pusha
pop
insl
cmp
push
lea
lea
inc
jns
lods
add
insb
push
stc
push
push
lods
or
mov
sbb
push
push
xchg
sub
or
lods
mov
and
and
push
jb
cltd
ss
and
push
aad
dec
push
sbb
insl
push
and
insb
mov
jecxz
jo
add
ljmp
lret
fs
or
inc
dec
inc
push
cs
adc
jmp
mov
clc
lea
jmp
jo
push
mov
icebp
or
int
int3
sbb
movsb
repnz
stos
mov
dec
ss
push
pop
xchg
in
fwait
in
mov
mov
inc
inc
lcall
lds
negb
enter
inc
data16
lods
sahf
repnz
or
je
push
ret
adc
mov
mov
add
mov
scas
ret
out
push
dec
jmp
inc
daa
ds
int3
xchg
cmp
mov
pop
test
dec
mov
mov
jle
mov
insb
cmp
push
stos
dec
inc
mov
fwait
mov
lcall
out
lods
sbb
cmp
jb
hlt
enter
push
jo
cmp
imul
adc
bound
leave
add
sub
jmp
aas
andb
add
add
data16
sub
orb
fucomp
gs
push
xchg
in
daa
lods
lock
imul
cmpsb
sub
mov
stos
fwait
imul
mov
add
dec
ret
call
push
ficompl
ss
shrb
int
je
aad
add
mov
orb
push
adc
add
mov
cmpl
or
bound
and
xor
jno
lcall
pop
rorl
in
arpl
loop
fisubs
enter
or
xchg
pop
call
imul
xor
ret
push
cmp
add
and
push
addb
jns
lock
or
leave
in
arpl
aad
movsl
daa
pop
pop
mov
push
push
leave
cmp
and
xchg
pushf
ficoml
mov
dec
jns
jg
push
and
dec
sub
push
dec
popa
adc
scas
sahf
jecxz
adc
or
mov
jge
or
das
inc
jb
outsl
fildll
imul
mov
push
stc
cli
test
out
inc
xchg
in
rcrb
js
repnz
sbb
xchg
mov
pusha
in
jp
in
ret
je
jp
fildl
push
mov
or
mov
jno
mov
pop
sbb
push
push
arpl
adc
dec
push
repnz
shll
jecxz
call
jecxz
jne
out
xchg
rcrl
jbe
std
push
lret
mov
test
or
fisttpll
jecxz
mov
jae
and
mov
js
hlt
pop
sbbl
popa
aad
mov
sar
mov
mov
hlt
in
jge
push
imul
mov
cld
push
incb
jo
mov
cmp
scas
mov
test
jae
shll
sbb
push
pop
xor
test
clc
xchg
lock
mov
aas
adc
xchg
sahf
ja
mov
popf
out
jle
fwait
sub
jge
shr
data16
xchg
push
push
adc
xor
dec
incb
pop
mov
ss
stc
add
imul
adc
jns
idivl
pop
out
dec
aaa
decl
out
xlat
pop
mov
sub
mov
pop
lds
idiv
imul
or
lret
pop
pop
lcall
sub
push
cmpsl
sarb
xor
fistpl
fs
cmpsb
cmp
scas
movsl
adc
aaa
push
lret
arpl
stc
cmp
sbb
out
and
decb
jg
lods
in
xor
cli
mov
lods
xchg
mov
lret
int3
js
jmp
leave
mov
dec
mov
xchg
js
pop
cmp
push
pop
xchg
dec
jno
imul
cmpb
xor
lret
inc
repnz
jecxz
cmpsb
nop
shll
dec
lcall
adc
push
insl
insl
adc
xor
lret
and
ret
add
lods
xchg
out
jge
push
rcll
mov
push
jl
inc
in
dec
ljmp
push
lds
sub
cmp
in
mov
ja
dec
aas
clc
push
out
adc
shll
fists
jo
cmpsl
fcomp
fisubl
leave
dec
add
cli
lods
sub
lea
inc
jae
adc
and
sub
xor
jo
mov
dec
sarl
pop
cli
andb
jecxz
or
and
cli
or
push
sbbl
ds
push
dec
loop
mov
jp
mov
push
lcall
dec
adc
sahf
lret
xlat
icebp
dec
dec
rcrl
push
or
pop
mov
fidivrl
iret
pop
jg
xor
std
cmpsb
in
inc
mov
cmc
mov
nop
and
mov
mov
xor
scas
mov
sbb
sub
std
xchg
out
jmp
std
imull
push
mov
into
inc
inc
jbe
stc
cmp
push
scas
insl
xchg
mov
push
out
fnstsw
leave
mov
push
cltd
aaa
jge
leave
push
dec
or
pop
test
fs
cwtl
divl
outsl
popf
mov
sub
mov
jae
cmp
or
mov
test
xchg
imul
push
es
push
dec
jnp
outsl
and
cmp
mov
cwtl
cmp
cmp
andb
jb
dec
jmp
lds
out
xchg
cmp
push
loopne
in
sbb
push
fldl
fistps
stos
sbb
xchg
iret
mov
inc
pushf
dec
in
or
or
or
xchg
push
loop
or
add
push
gs
jb
cmp
iret
mov
imul
adc
or
rol
cli
adc
and
sub
cwtl
push
dec
adc
out
cmp
and
push
xor
inc
dec
push
fists
movsb
mov
xchg
enter
out
gs
mov
rorl
daa
outsl
lcall
xchg
or
pusha
int3
pushf
orl
sbb
test
jno
faddl
or
push
stos
mov
xchg
stos
test
idivb
mov
ss
xchg
and
cmc
clc
inc
adcb
aas
or
mov
ficomps
pushf
push
sbb
leave
pop
pop
pop
mov
in
inc
outsl
jl
dec
cmp
int
dec
pushf
mov
mov
and
push
out
sbb
pusha
mov
mov
lcall
lock
les
xor
fucomi
push
xchg
movsl
xchg
xor
inc
gs
inc
push
mov
and
and
jne
cmpsl
sbb
xchg
mov
cmpb
fwait
test
cmc
clc
rcrl
in
outsb
xor
sub
cmp
lods
ffree
fisubs
aam
sbb
test
mov
jg
lahf
inc
and
push
push
rcrl
lcall
pop
pop
mov
mov
imul
xor
jecxz
adc
xchg
pushf
sbbl
pop
cmpb
xor
lods
lret
outsb
lds
inc
call
lcall
lret
xor
pop
push
pusha
adc
xor
in
inc
xor
stos
insb
imul
dec
out
push
ss
pop
clc
out
xchg
std
adcb
cld
xor
rolb
ss
add
lea
pop
ss
or
out
ret
jmp
mov
mov
sbb
insb
push
add
cmpsl
sub
es
das
cmp
push
jl
jl
mov
lods
mov
adc
bnd
inc
cmp
in
cmc
mov
test
xchg
pop
xorl
call
outsb
imul
or
xchg
mov
fisubrs
jo
lds
shll
and
or
push
cmp
inc
sub
notb
addr16
ds
fimuls
cmp
std
jl
mov
jmp
outsb
pop
mov
lods
mov
fwait
mov
jmp
push
or
lods
dec
jmp
pushl
add
test
popa
cwtl
icebp
xchg
pop
push
in
scas
outsb
das
ficomps
flds
xchg
xchg
cmpsl
sar
call
fwait
sbb
movsl
sahf
ffreep
mov
jg
dec
fwait
mov
loope
adc
repz
mov
stos
or
es
cmp
inc
pusha
push
jb
cmp
jmp
xor
push
outsl
ret
shl
xchg
mov
mov
xchg
sbb
lea
cltd
sbb
out
iret
in
jl
loopne
faddl
pop
movsl
push
add
cltd
push
data16
lock
push
fcoml
xlat
cmpsl
xor
and
or
mov
aad
test
add
jge
push
das
sbb
in
repnz
add
jno
notl
push
add
cli
jo
push
cmc
iret
notb
adc
in
xor
or
popf
jmp
mov
stc
aad
test
leave
pop
pushf
dec
aam
mov
mov
cmp
out
aaa
into
add
xlat
or
mov
push
dec
push
lock
push
push
and
test
push
cmp
in
aad
stc
lods
jnp
xor
cmc
jbe
or
insb
cld
xchg
dec
shrl
mov
stos
pop
mov
sub
cmp
jmp
or
push
push
push
inc
mov
sub
xchg
cltd
andb
fcoml
dec
cmpsl
outsl
dec
and
add
dec
mov
ret
mov
test
add
add
or
movsl
daa
fimuls
xor
inc
jmp
sub
cmp
mov
icebp
clc
lods
and
xchg
or
mov
push
push
push
or
insl
jp
jecxz
sub
sub
icebp
pop
mov
push
cmp
xchg
mov
out
cmp
jg
hlt
shl
sub
adc
push
sub
xor
mov
jmp
pop
cmp
insl
mov
cmp
push
repz
flds
inc
stc
pop
outsb
notl
daa
mov
and
ljmp
test
push
sub
mul
push
out
cmp
mov
sub
shll
and
mov
mov
nop
mov
lret
fmuls
andb
pusha
jno
dec
inc
outsl
aaa
cmp
xor
inc
mov
dec
insb
jne
jl
fs
jmp
mov
xorb
sub
pop
jecxz
in
mov
adc
leave
daa
insb
mov
mov
jle
pop
mov
negb
pop
jecxz
xchg
cmc
pop
ret
or
and
test
mov
fsubp
fnstcw
sbb
pop
mov
lods
inc
jmp
or
pop
imul
jno
mov
fistl
pusha
and
or
xchg
pop
or
std
out
fidivl
mov
js
jae
sti
gs
fwait
ljmp
scas
jne
cmp
dec
fsubl
data16
shrl
mov
aad
jo
sub
out
or
mov
mov
push
mov
cli
jl
bound
jle
sahf
in
in
add
mov
add
pop
scas
xlat
adc
pop
fwait
pop
das
hlt
xor
push
insb
adc
nop
add
sbb
add
lret
int3
into
mov
inc
bound
test
push
adc
xchg
stos
and
pop
out
je
andl
xor
and
fists
outsb
sub
adc
dec
add
ret
xor
pop
jae
cmp
ror
mov
adc
insb
or
idivl
fisubrl
ret
inc
mov
inc
test
mov
pop
jmp
cmpb
mov
xchg
xor
insb
jb
inc
fsubs
xchg
xchg
stos
ljmp
jge
or
push
mov
cmp
or
in
hlt
test
gs
test
jp
mov
sbb
loope
inc
mov
clc
xor
sbb
mov
shll
sub
mov
ljmp
les
js
in
fisttps
inc
mov
adc
and
pop
inc
pop
and
leave
shl
movb
out
mov
mov
jmp
out
lods
pop
aaa
sbb
fcmove
push
dec
lea
cld
sub
jb
mov
mov
jae
push
in
xchg
jle
ret
pusha
imul
push
cli
jp
xor
xor
lock
mov
dec
das
push
push
imull
cmpsl
stos
mov
and
sbb
mov
popf
mov
pop
cltd
sub
xchg
rol
lret
sbb
xchg
orb
add
in
xchg
pop
insb
or
or
loopne
adc
cmp
sub
daa
lea
sarl
cmp
xchg
divb
sub
lds
xchg
pushl
mov
cs
jecxz
push
outsb
iret
lds
fcoms
sarb
jecxz
mov
fldl
jp
imul
in
stos
adc
lret
xchg
addr16
dec
pop
popf
xchg
mov
push
push
push
fwait
bound
mov
mov
insl
in
xchg
hlt
push
outsl
repnz
inc
mov
rcr
add
enter
ja
mov
add
mov
lock
inc
sti
test
popa
jge
shlb
xor
mov
adc
or
pop
fcmovbe
idivb
cltd
inc
or
rcl
les
mov
push
dec
les
lahf
notl
add
cmp
in
pop
out
pop
lahf
push
ds
movsl
mov
repz
adc
leave
pop
jnp
pop
into
inc
scas
mov
ret
test
pop
imul
mov
jmp
or
xor
xchg
push
pusha
loop
cmp
xchg
leave
pop
jnp
test
mov
and
xchg
add
pop
jp
fdiv
scas
cld
push
mov
mov
loopne
pop
inc
or
or
cmpsl
lret
dec
clc
test
inc
xor
inc
enter
mov
mov
fs
int
xor
sub
popf
sub
push
ja
mov
jmp
sub
inc
mov
cmp
lods
rolb
repz
push
adc
adc
sbb
mov
jp
out
sbb
pushf
and
lock
sbb
or
xchg
into
pop
and
mov
add
mov
cmc
nop
fwait
cmc
int
inc
push
push
inc
outsb
enter
push
popf
jp
dec
mov
adc
or
cmpsl
xor
pop
scas
test
xchg
dec
imul
dec
outsb
cmpsb
jno
lahf
push
push
clc
adc
movsl
inc
jns
cwtl
add
je
pop
imul
mov
loop
inc
pop
fs
dec
inc
imul
sbb
sbb
repnz
or
xlat
jo
cmp
fwait
mov
mov
pop
cmp
sbb
popf
lahf
push
sub
jp
xchg
test
bound
cmp
adc
dec
inc
daa
add
or
mov
lea
pop
push
std
dec
and
fidivs
and
sbb
add
leave
mov
or
shll
mov
ret
aaa
and
xor
lcall
outsb
iret
lcall
outsl
mov
out
stos
outsb
inc
add
sti
jle
pop
xor
cmp
pop
loopne
enter
jecxz
xor
or
mov
jge
loopne
add
rcrl
ja
dec
popa
stc
imul
js
xchg
bound
push
cwtl
pop
daa
add
add
push
rcl
sub
mov
xchg
adc
sbb
shlb
ret
and
inc
inc
pop
cmp
add
lds
jl
inc
clc
add
sub
arpl
jg
sbb
push
ja
xor
dec
cmp
jecxz
sub
loop
neg
sbb
cld
hlt
dec
or
repnz
pusha
jb
cmc
or
test
fsts
out
mov
pop
mov
mov
mov
sub
fstpl
insl
inc
out
pop
clc
mov
sub
push
and
fsubrs
arpl
add
pop
aad
lea
mov
lahf
rcrl
mov
jmp
int3
mov
sbb
sbb
mov
into
mov
or
adc
ljmp
aam
shl
dec
and
add
lcall
aam
jno
pop
fidivl
mov
mov
xchg
cmc
hlt
imul
inc
js
and
push
stos
es
bound
cmp
in
orb
jle
icebp
and
xchg
addl
xor
jg
cs
loope
sbb
imul
pop
frstor
mov
adc
add
cmp
cld
cli
repnz
mov
ret
out
in
pop
sub
and
lods
push
push
and
push
cmp
sub
test
inc
xchg
jp
push
pusha
jp
dec
cltd
add
add
mov
push
movsb
lret
xchg
lds
fistl
rclb
mov
or
adc
lret
push
push
sub
test
incb
sbbl
mov
sbb
pop
xchg
data16
jno
dec
pop
cs
insb
test
in
addb
mov
ljmp
push
add
test
push
dec
sub
cmp
fcmove
aad
in
mov
ret
push
push
scas
jecxz
stc
sbb
inc
xor
scas
sbb
sub
sbb
fisttps
mov
shlb
movsl
dec
in
iret
cs
in
lods
inc
mov
mov
popa
bound
mov
mov
daa
adc
cmp
or
push
pop
mov
fs
fdivrs
jb
inc
sub
outsb
mov
fs
pop
popf
lock
rclb
stos
adc
cltd
add
dec
xor
mov
outsb
sub
fs
mov
aam
fnsave
out
hlt
in
sub
stos
shll
pop
dec
stos
sbb
push
hlt
mov
push
pop
add
and
scas
ss
inc
pushf
pushl
adc
pop
sti
xor
push
loopne
pop
pop
out
sti
cmp
mov
loope
jge
aad
jb
filds
dec
cmp
lret
roll
cli
lret
fstpt
sbb
sub
orb
sbbl
test
cmpsb
movsl
sbb
pop
in
mov
mov
out
arpl
mov
and
gs
cli
cmp
sub
shl
cmp
int3
mov
in
jle
pop
stc
or
mov
iret
enter
jecxz
cmp
jo
cmp
js
cmp
pushf
outsb
add
xor
aad
or
and
shrl
mov
mov
cmp
cwtl
mov
cwtl
repnz
sti
push
test
cld
scas
sbb
popf
ret
pop
aaa
jp
and
push
lds
std
int3
out
int
push
push
inc
ljmp
movsl
popa
ljmp
orl
jmp
inc
scas
mov
sbb
jne
divb
ds
into
inc
mov
xchg
stos
fadds
ror
repz
mul
dec
mov
mov
mov
xchg
js
mov
daa
int3
inc
loopne
add
call
lods
dec
sub
and
cmp
sub
pop
iret
jb
mov
call
mov
leave
ror
mov
sbb
sub
xchg
div
jecxz
adc
ljmp
int3
and
jl
cmp
push
mov
inc
pop
popa
dec
in
xor
pop
xlat
jae
jecxz
cmpsl
add
dec
testl
push
lret
dec
in
dec
es
clc
lds
sbb
pop
hlt
pop
pop
adc
and
dec
or
arpl
in
popa
nop
lods
in
imul
or
and
enter
aad
cmpsl
xchg
int3
sub
sub
sbb
hlt
shll
pop
orl
sbb
es
xor
mov
jmp
fidivrl
js
or
fimuls
divl
subb
inc
adc
lret
ja
sbb
or
dec
sbb
push
bound
rcrb
sahf
cmp
scas
repnz
ret
add
jmp
adc
cmp
dec
lret
sub
adc
push
ljmp
outsl
sub
adc
mov
mov
cmp
lcall
sbbb
nop
les
cli
ficompl
xor
xchg
xor
sub
data16
inc
mov
mov
bound
push
add
imul
fsubs
je
popa
xchg
xor
mov
xorl
lret
cwtl
xlat
adc
mov
cmp
scas
stos
inc
js
cmp
lods
fistps
cmc
mov
mov
repnz
push
or
ret
cmpsl
mov
mov
shlb
inc
in
sarl
xor
xchg
les
aaa
adc
mov
lods
outsl
mov
cli
ret
adc
sbb
push
movsl
push
cmp
mov
jg
xchg
mov
packsswb
repnz
shlb
push
pop
loope
jbe
xor
cmp
lcall
and
jbe
pop
jmp
mov
dec
mov
movsl
pop
shlb
outsb
jb,pt
push
imul
add
in
lods
adc
pop
xor
mov
xor
pop
xchg
push
int
ljmp
stc
das
out
dec
notb
adc
addr16
push
jmp
fnstenv
push
outsl
stos
dec
lds
cwtl
mov
lret
data16
sbb
mov
jae
stos
sbb
jmp
xchg
fmull
pusha
or
xor
pushf
jge
xchg
and
mov
popa
xor
lds
out
pop
jne
jp
jg
or
and
lock
mov
jecxz
scas
or
negb
xor
mov
add
outsb
push
outsb
sar
mov
adc
popf
fistps
mov
jb
pop
movsl
mov
aam
sbb
jae
outsb
in
push
je
mov
fwait
mov
jnp
mov
imul
imul
adc
je
xchg
pop
and
inc
stos
mov
popa
pushf
xchg
adc
mov
pop
mov
inc
mov
aam
mov
sub
mov
dec
pop
mov
es
in
clc
lea
ds
shrl
sarl
clc
sbb
fisttpl
add
jns
loopne
xor
push
ja
push
ja
clc
aaa
xchg
shll
pop
and
pop
jnp
ficoms
ret
pop
leave
xor
les
jnp
xlat
cmp
fcomi
cmp
mov
pop
push
cld
mov
hlt
jge
mov
add
mov
lds
mov
stos
xchg
inc
pop
or
and
and
mov
jmp
mov
xor
pop
cmc
xor
cmpsl
mov
push
insb
or
lahf
test
scas
xchg
dec
arpl
jnp
mov
mov
iret
sub
shr
xor
into
cmp
shl
cmp
loop
mov
sbb
aas
outsl
aaa
or
push
pushf
adc
or
ret
fists
hlt
mov
push
sub
lahf
dec
add
ja
sbb
sarb
int
arpl
jb
test
scas
jns
dec
lcall
or
mov
mov
dec
xchg
pop
and
mov
and
testb
jnp
outsl
ret
mov
mov
jns
jns
jnp
pop
mov
mov
jo
scas
xchg
fisttps
push
arpl
or
xor
lds
jge
push
cmp
adc
push
test
jl
and
or
pop
cmpsb
leave
push
daa
test
pop
lods
cwtl
pop
popa
arpl
in
out
jo
add
rcll
push
hlt
lcall
mov
in
mov
jle
fisttps
fsub
jecxz
or
xchg
rcl
pop
mov
decb
xor
daa
loop
sbb
jb
lahf
sbb
xchg
sbb
and
jmp
ss
pop
mov
ss
sbb
xor
test
cli
rcrb
inc
loop
and
daa
xchg
and
cmp
or
mov
cwtl
pop
sbb
sbb
fs
dec
and
cli
jo
inc
stc
mov
dec
outsl
pop
cmp
rcr
sbb
scas
inc
fisttpll
insl
stos
outsl
dec
jo
dec
add
mov
repnz
inc
test
sub
lods
les
and
mov
stos
mov
pop
push
xlat
test
adcb
add
inc
data16
xor
lahf
mov
mov
pop
jo
xor
lret
cmpsb
loopne
fdivr
sub
popf
mov
rol
xchg
xor
jl
movsb
mov
imul
jecxz
jne
cwtl
repz
jbe
faddl
fistpll
sub
push
jp
cwtl
cli
repnz
inc
and
pusha
inc
cmp
add
mov
sbb
call
or
sub
popa
imul
cltd
push
jmp
and
cmp
test
xlat
mov
js
adc
andl
stc
jbe
sub
push
mov
insl
notb
mov
repnz
cltd
rcrb
dec
hlt
add
mov
pop
hlt
sti
in
xchg
ret
mov
ret
les
testl
test
sbb
gs
push
adc
sbb
sbb
cltd
icebp
insl
xchg
adc
xor
pop
or
outsl
sbb
fstpt
pop
aas
and
jl
in
shrl
fistps
stc
push
mov
insl
or
jle
mov
movsl
mov
mov
sbb
in
and
iret
sbb
lret
sub
fst
aam
lcall
fs
scas
dec
add
cmpsl
fxch
adc
xor
cli
sbb
lcall
mov
jbe
push
mov
shl
jo
xlat
cmp
fldcw
sub
dec
mov
scas
cmc
mov
inc
jmp
add
and
mov
int
mov
add
xorl
iret
test
push
jl
cmpl
sbb
mov
inc
pop
sbb
add
mov
jp
hlt
test
push
adc
pop
dec
dec
ljmp
inc
scas
imull
pop
mov
in
in
push
jg
shl
xchg
movb
std
mov
call
jge
mov
orl
out
jecxz
pop
fsubrs
lods
jb
cmc
imul
inc
add
pop
insl
mov
mov
ret
dec
push
shrl
imul
mov
inc
xchg
xchg
push
cwtl
adc
hlt
jp
scas
cld
lret
sub
les
mov
xchg
jmp
mov
xchg
jmp
pop
push
gs
ret
ljmp
push
push
adc
enter
sti
call
fwait
or
lahf
sub
mov
fiadds
add
mov
cltd
stos
sub
dec
jl
jl
test
adc
aaa
mov
ret
push
cmpsb
out
cmp
pop
ficoms
pop
insl
and
movsb
pop
call
neg
inc
shlb
call
leave
push
out
sbb
mov
addb
dec
sbb
adc
jge
aam
aaa
in
aas
pop
sbb
rorb
xchg
shr
aam
fnsave
mov
inc
push
shll
or
dec
lock
dec
sbb
jp
mov
mov
pop
xchg
jne
jnp
pop
xchg
pop
aad
cmp
out
scas
les
jns
mov
outsb
aam
dec
pop
jnp
loop
cmp
push
mov
in
and
in
ret
and
aas
jecxz
xchg
inc
fcomps
inc
push
sub
sahf
insb
dec
enter
in
cmc
movsl
jns
scas
cmpsb
push
loopne
mov
xchg
jns
mov
dec
dec
loope
sbb
test
fsubr
inc
jne
pop
push
inc
arpl
mov
in
scas
xlat
xchg
pop
cwtl
gs
and
mov
xchg
lahf
add
dec
shrl
rorl
movsb
mov
push
in
jne
jecxz
roll
mov
or
push
jno
push
in
lret
sub
mov
mov
adc
fdivrl
add
and
mov
push
or
in
pop
cld
jle
lcall
dec
es
cmp
clc
scas
pop
mov
out
ret
mov
adc
xchg
mov
xor
test
cmpsb
push
push
fimull
add
add
cmp
sbb
les
test
xor
insb
dec
pushf
jge
mov
sahf
mov
xchg
push
test
xor
inc
arpl
lahf
xchg
cmp
cwtl
pop
repnz
and
ficomps
mov
adc
jae
jno
or
sub
arpl
cmp
add
sub
mov
outsb
inc
mov
jmp
std
cmp
or
or
roll
mov
pop
popa
out
jne
dec
je
clc
mov
xor
mov
jnp
push
mov
push
sbb
in
js
in
dec
test
adc
cmp
imul
movsb
xchg
and
scas
sbb
test
aas
cmp
les
mov
and
movups
insl
pop
shll
jae
jmp
lret
clc
cmp
sahf
mov
jle
ljmp
lock
jl
xchg
xor
dec
fs
xchg
hlt
lea
jmp
sub
jp
xchg
addr16
sti
imul
mov
test
jg
mov
jg
pop
add
popf
aad
inc
xchg
push
dec
push
sub
mov
call
subl
inc
repz
sbb
mov
jb
adc
inc
nop
pusha
sub
imul
mov
iret
lahf
jmp
out
ret
mov
sub
cld
jnp
xor
enter
stos
jae
pop
ss
mov
xor
test
mov
xor
or
and
shll
sub
mov
inc
sbb
push
repnz
push
nop
dec
cmp
adc
dec
push
dec
orl
sub
movsl
inc
dec
xchg
inc
push
cmp
jb
fs
jne
aas
int
cmc
sub
xor
stc
fstpt
push
shrl
mov
mov
push
inc
insb
out
or
sbb
jae
cwtl
push
dec
lea
xor
lds
mov
push
pop
add
add
fiadds
cmp
cmp
mov
scas
xchg
dec
push
icebp
stos
xlat
call
mov
xchg
mov
adc
jp
fiaddl
test
mov
mov
inc
stos
add
mov
xor
sarb
inc
out
addb
lock
push
push
pop
jmp
sub
inc
int
cli
dec
pushl
mov
or
push
jmp
dec
or
xor
pop
test
movsl
iret
or
dec
xchg
inc
aam
arpl
aad
mov
cs
ja
cmpsb
jb
xchg
imul
ljmp
cmc
xor
sub
xchg
jnp
imul
loop
xchg
push
push
xor
jp
hlt
inc
in
mov
sub
adc
sub
xor
ret
lea
outsb
adcb
jb
add
movsl
inc
adc
loope
aas
fimuls
add
movsl
or
mov
push
adc
xchg
popa
or
out
mov
and
adc
adc
adc
divl
sti
push
xchg
test
jp
jb
mov
push
enter
repz
mov
std
idivb
fsubrl
adc
mulb
jne
sub
jmp
scas
les
jo
and
xor
arpl
or
add
lods
lea
lods
cs
outsb
cmp
call
xchg
decb
fistpll
int
xor
push
adc
ja
bswap
subl
push
cmp
jle
xor
rcr
add
loopne
sub
push
rcl
test
fsts
stos
in
adc
or
movsb
out
mov
fwait
xlat
gs
push
dec
outsl
daa
fistpll
mov
lcall
pop
push
push
lock
arpl
hlt
pop
and
mov
pop
std
popa
sub
out
sbb
sahf
int3
mov
arpl
inc
xchg
jl
mov
outsb
dec
xrstor
lcall
sahf
push
cli
add
jo
add
cs
xchg
push
inc
loopne
xor
pusha
push
pop
cmp
cmpsl
test
push
pop
sti
in
cmpb
ret
xor
xor
cmp
in
in
inc
insl
ret
ds
cmp
jo
dec
mov
push
aaa
fnstenv
jmp
jae
add
jmp
pop
imul
test
cmp
insl
inc
push
sahf
jne
xor
stc
sbb
jne
leave
xchg
sbb
dec
addb
test
les
arpl
nop
gs
pop
mov
push
fcmovnu
aaa
mov
and
aaa
fnsave
cwtl
imul
xor
test
xor
mov
rcr
pop
fstps
lahf
in
mov
sub
fmuls
push
fimull
out
mov
jne
jp
dec
xchg
jecxz
in
or
bound
mov
loop
sbb
clc
cmp
aas
inc
test
and
push
sbb
aam
imul
roll
push
or
sub
in
and
lods
out
sarl
scas
rclb
add
cmp
pop
xor
pop
mov
xor
rcrb
dec
ljmp
in
lods
sub
es
xchg
push
aam
imul
cltd
xchg
fsubr
push
or
add
dec
mov
insl
pop
mov
ret
mov
jle
or
lods
stos
adc
pop
and
mov
ret
jmp
aad
loopne
dec
add
or
cmp
jnp
repz
lret
push
lock
rclb
frstor
mov
or
mov
inc
xor
push
sti
test
cli
outsb
clc
push
fstpl
out
add
push
sahf
sbb
sub
xor
pusha
lret
cmp
mov
stos
lret
fidivs
jbe
imul
jne
mov
pop
sbb
pop
gs
pop
bound
lods
inc
mov
inc
push
push
sahf
mov
int3
inc
pusha
stc
mov
mov
repnz
push
and
outsb
xchg
xor
clc
push
outsb
xor
aaa
popa
mov
sub
int3
pop
jmp
mov
sbb
jge
jl
xlat
pop
sub
inc
cld
or
or
inc
loop
adc
pop
mov
mov
xor
out
mov
out
int3
mov
dec
cmp
movsl
cmp
jecxz
ja
jbe
das
cmp
shlb
outsl
add
fwait
insl
inc
cld
mov
pushf
cmp
adc
inc
push
mov
mov
sbb
dec
sbbb
jbe
adc
je
mov
cmp
jbe
or
aas
and
sbb
and
mov
xchg
cltd
rcr
ja
les
xchg
cwtl
xchg
dec
addr16
test
xchg
adc
aam
in
sarb
and
mov
cs
into
pop
cltd
outsb
xor
aaa
or
out
jns
xchg
insb
mov
or
test
int
adc
sub
sub
mov
gs
add
inc
xchg
push
lds
ds
mov
iret
pop
nop
jmp
xchg
sbb
inc
cmp
out
jns
sbb
dec
movl
pop
add
es
out
ss
pop
pcmpgtd
hlt
sbb
jns
cli
jle
js
jae
pop
xlat
inc
push
fwait
xchg
xlat
sub
mov
mov
cmp
adcl
call
xor
cmovl
mov
jno
mov
xchg
enter
sub
mov
pop
inc
shll
imul
sbb
incl
mov
pop
ja
mov
cmp
loopne
test
ret
xchg
lret
fcompl
popf
cmp
and
or
xor
mov
adc
aam
sbbb
push
cmp
call
dec
jmp
xor
mov
jmp
jns
xor
test
xor
jp
call
cmp
push
je
and
repnz
int
call
sub
int3
jno
cld
and
icebp
lret
js
inc
push
xchg
push
out
jns
ja
stos
int3
jae
lods
sub
dec
imul
jo
fisttpll
lock
cmp
adc
push
pop
dec
fs
std
push
mov
lods
sub
out
scas
cwtl
mov
mov
sub
insb
outsl
and
mov
lock
push
cmp
sbb
add
imul
xor
pushf
mov
iret
jns
scas
movsb
push
mov
xchg
cmp
jnp
fisubrl
pop
outsb
js
push
xor
jns
mov
inc
in
add
lahf
sbb
dec
inc
pop
sbb
xchg
stos
and
push
repz
xchg
pop
popa
lds
iret
jne
jae
cmpsb
sub
dec
mov
xlat
lahf
pop
and
mov
lds
dec
rcl
dec
pop
out
out
add
pop
lcall
dec
jne
xchg
ret
xchg
data16
sub
je
push
fucom
pop
or
cwtl
jae
mov
dec
sbb
mov
push
dec
cli
bound
fdivp
xor
mov
pop
sahf
xlat
mov
loope
ficomps
fidivrl
dec
lahf
push
sub
clc
in
fld
lahf
dec
stos
lret
or
lret
fsubrl
xchg
pop
push
andl
and
sti
shl
push
inc
loope
xor
lods
fmull
lahf
ret
arpl
jbe
loope
xchg
rcll
sub
insb
mov
or
ret
fcmove
lock
jo
pop
add
pop
stc
xchg
sub
pop
adc
inc
rep
out
pop
movsb
outsb
mov
rol
xor
jo
mov
push
mov
xor
data16
enter
cmp
or
inc
cwtl
xchg
or
push
mov
pop
jb
stos
stc
clc
cmp
into
cwtl
lcall
push
or
aad
xchg
jecxz
out
pop
iret
sbb
mov
or
push
push
adcl
fld
cmp
and
inc
out
sbb
ret
ss
xchg
out
jne
aad
decl
jmp
shll
push
cmp
adc
dec
and
xchg
push
sub
ret
subb
rcll
and
cltd
fidivrs
mov
sub
pop
cmpsl
cli
insb
in
jae
fdivrl
sti
movsl
cmpsl
push
testb
jns
jno
inc
add
dec
in
loope
stc
xor
in
xchg
or
pop
mov
jno
arpl
and
loopne
jge
fstpt
mov
repnz
iret
aas
mov
xchg
push
inc
imul
stc
loopne
jo
sbb
lock
adc
sbb
nop
rclb
pop
shl
cmp
scas
sbb
xchg
jmp
out
push
es
cltd
rcr
xor
pop
sahf
stc
cmpsl
add
mov
inc
loopne
jns
scas
jg
and
mov
mov
cmp
adc
cmp
mov
stc
pop
add
paddusb
sbb
loopne
dec
pop
push
push
imul
adc
loope
add
lret
mov
adc
jns
insl
mov
jae
xchg
jb
cwtl
add
sbb
jbe
push
mov
dec
jecxz
mov
repz
outsb
out
add
sbbl
mov
and
xor
and
insl
mov
mov
sbb
pop
mov
fidivs
cmpl
jns
rcr
mov
mov
pop
int
mov
jecxz
daa
in
fdivs
ljmp
jo
shll
repz
mov
cmp
js
add
xchg
jae
jb
je
jae
test
sbb
xrelease
rorb
stos
jp
adc
xchg
jecxz
out
xchg
out
stc
imull
std
aam
jge
aaa
sub
push
loop
xchg
ljmp
out
icebp
xlat
outsl
ret
cmp
add
lahf
out
loopne
mov
aaa
cmp
into
lock
xchg
ficompl
jno
mov
ljmp
jbe
and
out
pushf
mov
sub
push
jne
insl
rorb
push
stos
jmp
cmp
lahf
movl
not
sbb
stos
rcll
inc
hlt
out
lock
in
cmp
and
bound
cmpsb
xchg
mov
movsl
insb
mov
inc
imul
outsb
std
mov
mov
cmp
nop
push
aas
shll
push
pop
sbb
lea
mov
and
mov
and
cli
mov
rcrb
pop
mov
dec
and
mov
and
cltd
shrd
and
push
lods
dec
sub
dec
rclb
lret
jge
cmp
aas
ds
mov
mov
dec
popf
ret
mov
dec
or
pop
clc
outsb
enter
insl
inc
es
or
orl
ficomps
pop
and
test
cmpsl
lods
es
into
cmpsl
sbb
mov
and
adc
and
push
mov
dec
dec
adc
mov
push
mov
jne
repz
jp
incb
mov
out
shlb
add
adc
mov
stos
inc
cs
mov
cmpsb
sub
xchg
dec
push
mov
ss
or
adc
filds
adc
mov
and
clc
pushf
nop
cmc
bound
shll
mov
push
adc
aaa
out
iret
sbb
lahf
mov
inc
scas
fldl
lahf
and
cvtpi2ps
repnz
subb
fadd
repz
lret
inc
and
clc
mov
add
sbb
cwtl
jg
pop
rcrl
cltd
repnz
push
divl
lret
sub
pop
loopne
adc
cmp
in
fdivrs
je
js
sub
pop
push
fistps
lret
shlb
rclb
inc
stos
fistpll
lahf
sbb
sar
das
mov
mov
pushf
jnp
fdivl
jl
movsb
cltd
mov
adc
testl
cmp
jnp
push
ret
mov
ss
mov
cmp
scas
push
add
lcall
jmp
pop
push
test
cmp
pop
dec
stc
pop
adc
mov
ds
inc
iret
testb
or
jno
bnd
pop
and
ror
mov
out
orl
sub
push
jge
sub
or
jp
inc
ret
out
fs
cmp
jge
mov
loop
gs
gs
ss
jmp
shr
int3
adc
ss
pop
fsubr
sarl
movsl
pushf
xchg
imul
fstl
xchg
jne
inc
lret
cmp
clc
repz
fwait
cmp
push
mov
add
mov
fs
jle
mov
sub
xor
gs
mov
jns
out
pop
into
lahf
adc
lds
mov
adc
mov
or
stc
adc
mov
cli
mov
or
ja
dec
loop
sub
mov
sbb
sub
aad
lcall
and
mov
sbb
push
xchg
imul
add
lods
mov
pop
xor
dec
jecxz
push
mov
push
cs
ds
sarl
sub
mov
lods
mov
ljmp
mov
mov
jmp
cmp
clc
aaa
add
mov
fdivs
mov
pop
xorb
in
mov
pusha
loop
lds
shlb
scas
mov
out
pop
jmp
cltd
pop
and
dec
je
aad
xorb
loopne
ret
jl
mov
loop
push
fsubrp
gs
xor
or
nop
loopne
and
mov
fistpl
jno
sub
inc
outsl
bound
or
stos
mov
rclb
jb
mov
inc
ret
movb
cli
and
xchg
add
loopne
stos
lret
movsb
add
jo
push
push
sbb
sbb
adc
sbb
push
nop
into
add
fadds
inc
pop
stos
push
xor
leave
fisttpl
mov
mov
rep
std
sub
jb
adc
icebp
adc
aas
xor
pop
push
mov
scas
jmp
push
inc
cltd
int
pusha
or
stos
cmp
sub
mov
pushf
loop
dec
inc
xchg
push
cmpsl
sbb
fs
sbb
je
std
loope
dec
push
pop
push
push
mov
jno
adc
lcall
loope
in
push
jl
test
std
dec
stc
jo
mov
jecxz
cmp
ret
and
in
repnz
pop
dec
dec
and
jns
mov
rorb
cmp
add
dec
inc
sub
dec
jge
movsb
fstl
sub
mov
add
jb
ds
lods
stc
mov
lahf
hlt
adc
xor
es
dec
int3
push
xor
mov
imul
and
xchg
lods
cmp
push
repz
sahf
in
cltd
xor
sbb
push
dec
mov
or
xchg
mov
jl
adc
ljmp
mov
sbb
dec
xchg
mov
popf
mov
addl
ret
mov
push
dec
std
imul
les
mov
outsl
shll
xor
and
leave
xor
ss
das
fnstcw
jge
call
add
cmpb
cmp
or
nop
repz
jle
out
sbb
adc
mov
dec
xchg
cltd
sbb
imul
fwait
pop
sbb
jl
or
or
push
dec
fwait
lds
sahf
rcr
cwtl
popf
jo
jb
dec
jne
pop
push
bound
mov
and
pop
popf
nop
add
mov
and
shlb
push
imull
into
fdivl
lds
inc
push
or
mov
mov
mov
xchg
arpl
adc
repnz
jp
mov
cld
insl
adc
xor
jmp
jae
mov
pop
pop
inc
mov
xchg
rcl
sbb
and
jbe
mov
mov
lea
mov
lea
nop
out
mov
sarl
mulb
call
cld
mov
dec
das
mov
shll
imulb
outsb
mov
hlt
cs
xor
jmpw
sbb
int
aam
repz
sbb
jno
dec
fcompl
sub
imul
adcb
sbb
mov
jp
decb
cmp
lea
imul
pop
lcall
cmpsb
js
or
pushf
push
fdivr
sahf
leave
scas
adc
dec
pop
mov
mov
jno
jp
mov
lock
nop
shll
inc
shlb
or
movsb
pop
jae
imul
dec
fists
mov
push
add
dec
mov
js
repnz
cltd
mov
rol
lods
repnz
sahf
adc
idivl
lahf
dec
dec
sbb
mov
bound
cltd
inc
int
push
inc
sbbb
sarb
arpl
mov
imul
mov
push
and
jno
lcall
mov
xchg
lods
mov
push
push
push
xchg
xchg
add
dec
outsb
inc
je
xchg
clc
mov
cwtl
cmc
andb
jae
ret
cmp
mov
loop
int
mov
xor
and
das
inc
add
ret
lods
stos
cmp
into
fdivrp
cwtl
lods
xor
std
daa
mov
pusha
ret
decb
jbe
int
loopne
push
ja
jbe
mov
and
pop
cmp
ja
shrl
lods
and
mov
mov
fst
in
pop
dec
mov
dec
cli
ficompl
sub
cwtl
mov
out
pop
pop
jle
xorl
sbb
call
mov
sub
icebp
pop
inc
dec
cmp
mov
ds
es
push
mov
dec
xchg
leave
stc
mov
clc
not
cwtl
fcmovnbe
loopne
and
mov
jl
je
popa
mov
push
xor
jne
sbb
lods
xor
int3
fildll
stos
aam
inc
lods
js
pop
and
test
fnstcw
jl
negl
sub
sbb
mov
xchg
call
cltd
ret
cmc
cmpl
ljmp
inc
and
stos
mov
int
sbb
nop
push
mov
aam
mov
mov
idivl
mov
pop
scas
push
jnp
cld
iretw
mov
push
shl
mov
hlt
pop
int3
xchg
ret
adc
popf
outsb
mov
lea
inc
pop
popa
mov
out
sub
cs
cli
ja
jne
push
pop
jge
push
push
iret
dec
icebp
adc
lea
jge
out
xchg
push
lcall
xchg
jge
cmp
test
out
mov
scas
mov
cmp
enter
xchg
sub
xchg
fimull
addr16
sti
stos
push
js
mov
loope
or
cmp
test
push
lock
dec
insl
dec
jg
adc
mov
mov
in
add
fnsave
mov
pop
adc
cs
nop
dec
sub
mov
in
scas
sub
or
dec
push
inc
aas
xor
mov
xor
or
mov
test
xchg
inc
cmp
repnz
pop
clc
mov
aaa
loope
inc
jl
fwait
ja
fimull
pop
jp
cmp
and
ret
sarb
test
inc
push
jbe
xlat
inc
pop
pop
lock
mov
ror
out
inc
adc
dec
int
cmp
sub
pop
out
movsl
pop
scas
out
adcb
adc
xchg
pop
ljmp
icebp
jle
mov
push
dec
cmp
int3
xor
lods
loop
mov
stos
clc
pop
push
jo
mov
or
pop
jne
adc
aaa
stc
insb
mov
fistl
add
addr16
cmp
push
mov
mov
loope
les
jnp
mov
out
negl
fs
call
les
cltd
adc
sbb
sub
push
fsubr
xchg
and
adc
notl
push
jnp
pop
add
adcb
outsl
pop
in
xchg
cs
pop
fsubs
test
mov
mov
and
sub
mov
call
mul
xorb
mov
loope
fs
adc
ds
xor
icebp
jbe
inc
sub
je
lods
cmpsl
fbstp
sub
mov
adc
cltd
out
sarl
xor
sub
ljmp
daa
sti
jge
fnclex
cs
jb
jle
into
aam
jnp
dec
jecxz
dec
dec
xchg
movsb
sbb
sbb
sbb
fnstsw
stos
das
cmpsb
fcoms
jo
xchg
dec
stos
nop
mov
sub
mov
insb
ds
clc
adc
shr
ljmp
das
pusha
repz
push
pop
xchg
mov
clc
mov
xchg
jns
repz
shll
xchg
and
test
cli
cli
and
test
popa
inc
mov
xorb
dec
jge
ret
jg
pop
cltd
outsl
and
outsl
mov
cmp
add
cwtl
scas
jl
mov
out
ja
dec
mov
push
mov
mov
pop
cmp
adc
scas
imul
xor
cmc
cmc
mov
pop
xlat
movsl
dec
cli
sbb
sub
push
pop
cs
lock
cli
fstpl
stos
sub
in
addb
sbb
push
cli
andl
or
shll
xchg
in
int3
sub
pop
adcb
adc
sahf
test
cwtl
push
dec
lret
xlat
and
js
in
pop
cld
rcr
clc
lock
xchg
push
jle
aad
cmp
mov
in
sub
sbb
sub
les
fs
loopne
sub
xchg
cs
push
loope
pop
adc
mov
mov
jnp
int
clc
testb
mov
mov
ja
jge
xor
add
mov
add
pop
leave
testb
or
gs
pop
cmp
das
cmpsb
cmp
xchg
mov
popa
dec
jns
int3
jmp
dec
lds
fidivrs
push
mov
add
aam
test
adc
mov
xchg
test
test
decl
hlt
sbb
pop
mov
or
imul
lds
push
jbe
repnz
cmp
pop
ja
repz
lods
test
inc
cmpsl
mov
inc
sub
ror
push
xor
jge
mov
cmp
mov
loope
jo
xor
out
mov
jbe
orl
push
xchg
jle
mov
inc
inc
in
pop
shrl
pop
popf
aas
push
dec
jbe
cmpsb
leave
out
aam
push
stc
cwtl
dec
sarb
clc
and
push
sub
lds
and
push
xor
test
xor
outsl
ret
lret
mov
jbe
test
iret
daa
jecxz
loope
mov
mov
lret
test
xor
xchg
jmp
lds
stos
cmp
jne
xor
and
push
ret
int3
cmovns
loop
mov
int
cs
cmp
mov
adc
icebp
or
and
adc
mov
adc
cmp
rcl
mov
pop
jbe
scas
mov
popf
pop
inc
movsl
in
fisubl
jmp
stc
add
sub
jg
push
jecxz
mov
jmp
sti
dec
push
stos
push
arpl
out
xor
xor
test
test
aas
xor
outsl
mov
and
popa
out
push
mov
mov
mov
mov
pusha
mov
test
jns
popl
sub
out
mov
mov
fsts
rolb
push
add
inc
add
das
mov
mov
stos
jne
imul
sbb
pop
std
sti
mov
in
in
jne
scas
mov
adc
inc
repnz
or
push
push
out
loop
add
pop
das
nop
fildll
shl
stc
mov
sbb
xor
dec
aad
xchg
mov
pop
xor
decl
fisubrs
aas
add
xor
push
nop
aad
test
loopne
jl
scas
ss
out
and
dec
inc
call
mov
inc
xor
jge
add
mov
xchg
push
cmp
adc
fnstcw
pop
xchg
push
mov
jg
adc
ja
mov
pusha
subl
int3
sub
xlat
mov
popf
dec
mov
inc
insl
adc
shl
jo
int3
popa
cli
repz
pop
add
jb
enter
sbbb
pop
xchg
icebp
fisttps
cmp
repz
cmpsl
dec
orb
xor
fs
mov
mov
push
imul
adc
rorl
add
sar
ds
es
mov
jecxz
push
icebp
cmp
push
repz
cmpsb
sbb
jge
sbb
add
jne
loope
test
jp
lcall
jb
dec
mov
test
inc
clc
adc
lahf
jecxz
std
adc
push
jns
jno
sahf
or
and
jle
insb
je
ljmp
hlt
dec
push
scas
mov
xchg
xchg
iret
in
push
lcall
pop
jmp
or
out
bound
jle
xchg
pushf
mov
stos
ror
push
cld
sub
ss
cmpsl
xchg
out
push
fstpl
cltd
jecxz
cmp
aam
sbb
mov
and
rorl
and
jae
cmc
sub
mov
into
push
stos
cmp
cmc
inc
lods
std
mov
dec
fisttpl
decl
push
cmp
out
sti
xchg
icebp
shr
fmull
jbe
loopne
mov
fs
pop
lds
lds
xchg
rcrl
mov
fdivp
mov
or
cmc
xor
and
pop
fiadds
in
sbb
cs
mov
es
gs
push
jge
or
push
jbe
mov
cltd
pusha
xor
stc
aas
stos
mov
data16
inc
nop
rorb
mov
imul
jb
xor
inc
mov
dec
orl
dec
shll
mov
lahf
cmpsl
popa
movsl
mov
inc
punpckhdq
jp
cld
mov
adcb
shl
xor
mov
or
adc
xor
mov
lret
lods
mov
data16
js
xchg
rclb
fisubs
movsb
sub
icebp
repnz
or
sub
dec
xor
push
jo
inc
or
cwtl
shrb
mov
xor
sub
xchg
jne
mov
in
xor
out
mov
fs
xchg
les
mov
roll
dec
sahf
and
ja
cmpl
cwtl
mov
sub
lret
test
shll
adc
mov
in
cmp
imul
sbb
cmp
aas
pushf
rcrl
xchg
and
out
repnz
sbb
fists
jmp
in
test
pop
mov
cwtl
adc
insl
aad
add
inc
jecxz
and
std
dec
xchg
dec
sahf
pop
xlat
mov
repnz
mov
out
call
xor
test
stos
movsl
icebp
xchg
sub
pop
fdivrl
xor
jb
push
shrb
push
jle
sahf
aas
xchg
jbe
sbb
lret
sub
mov
std
inc
mov
pop
movsl
and
sub
lods
dec
jbe
sub
fstpl
pop
fwait
xchg
jne
lock
jecxz
mov
xchg
mov
push
and
sbb
fstps
mov
xchg
mov
fadd
test
les
cmc
outsb
bound
shll
cld
test
out
pop
movsb
or
pop
stc
loopne
sbb
scas
cld
pop
adc
rcr
xchg
or
mov
dec
and
shrl
mov
xchg
iret
mov
add
mov
pop
pop
stos
lret
in
ss
add
jp
jmp
stos
mov
pusha
pop
fnstsw
je
xor
fnstsw
stos
or
repz
adc
shl
add
cli
out
jae
adc
push
or
inc
sbb
and
xchg
dec
ja
xor
lret
push
and
sahf
or
je
adc
cmp
and
ucomiss
stos
adc
add
clc
and
or
andl
sub
mov
sub
in
cmc
xchg
out
inc
dec
repz
popa
mov
pushl
jle
mov
push
pop
add
test
into
adc
bound
inc
mov
jge
sbb
test
pop
adc
dec
rorl
test
cmpsl
aam
sub
into
cwtl
and
and
jg
pop
xchg
sbb
dec
mov
cmpsl
inc
mov
pop
popa
dec
outsb
jbe
add
and
pop
lret
inc
mov
dec
cmc
push
cmp
dec
sub
sbbl
cmp
cmpsl
sbb
in
add
xchg
dec
ss
mov
sub
jecxz
fadds
test
adc
mov
fnsetpm(287
inc
xor
ljmp
outsl
jae
test
movl
add
cmp
mov
lods
lock
not
hlt
clc
cmpsl
clc
mov
lret
in
mov
daa
push
repnz
mov
imul
stos
mov
pop
push
mov
or
jo
cwtl
and
out
and
jmp
xchg
push
mov
push
sti
cmpsb
sbb
mov
idivb
push
pop
ret
push
cmc
jg
mov
xchg
jne
sbb
xchg
fs
mov
testl
mov
insb
sbb
dec
and
mov
lds
jp
outsb
mov
push
data16
inc
dec
stos
icebp
xor
fsubrl
fs
xor
scas
xor
cmp
mov
data16
leave
lods
sub
ret
es
xor
in
in
into
in
je
cmpsb
inc
sbb
pop
cwtl
adc
mov
ja
aaa
nop
xchg
mov
cmp
pop
rorb
jne
sub
fcmovu
adc
xlat
dec
add
adc
mov
sar
inc
sub
jo
cmc
or
push
push
hlt
or
andb
sub
sbb
fdivr
sub
dec
out
sbb
cmp
fwait
sti
mov
or
add
into
nop
loopne
subb
push
add
mov
pop
scas
inc
pushf
repnz
cld
push
adcb
mov
lods
fstpt
mov
cmp
mov
das
nop
aas
outsl
stc
dec
xor
cmp
outsl
adc
adc
xor
sub
aad
dec
cli
aad
sbb
xor
xchg
bnd
mov
imul
imul
mov
loope
sub
adcb
mov
or
hlt
fisttpl
in
es
push
and
sub
fcmovbe
inc
cmp
test
and
xchg
leave
ss
inc
stos
push
aaa
sbb
mov
ret
jb
push
jmp
push
fidivrl
subb
pop
arpl
aam
popa
mov
mov
sub
xchg
adc
mov
xchg
out
mov
std
xlat
dec
ljmp
mov
fisttps
sub
jne
and
test
inc
loop
xchg
lds
xchg
pop
jl
repz
jnp
sub
pop
mov
mov
and
pusha
scas
sub
jge
push
ljmp
mov
movsl
inc
adc
and
mov
out
mov
sbb
into
lret
jbe
dec
fsubrs
or
leave
cmpb
mov
pop
into
xor
or
cwtl
push
cwtl
fmulp
inc
mov
int
jp
enter
dec
jbe
sub
loope
test
dec
rcrl
adc
ss
jb
mov
add
jmp
clc
stos
mov
jecxz
lds
jmp
ljmp
out
push
std
dec
mov
ror
movsl
leave
sub
les
mov
je
pop
push
add
lret
lret
insl
pop
xor
int
fcomip
lahf
fldpi
shrb
imul
addr16
gs
shll
jp
push
jge
ds
adc
sahf
out
loop
clc
jbe
arpl
push
pop
inc
push
inc
aas
xchg
mov
cmp
push
sub
loopne
imul
inc
jb
push
sbb
push
insl
shlb
into
xchg
out
inc
sub
mov
sub
shll
lcall
mov
sti
jae
xor
loop
ljmp
std
push
frstor
mov
and
arpl
mov
mov
addr16
adc
xchg
push
cmc
sbb
and
lds
imul
arpl
je
es
int3
jl
pop
pop
xchg
add
cmc
pop
jnp
outsb
test
iret
jp
sub
test
jo
test
dec
andb
adc
pop
jno
nop
in
mov
mov
mov
out
int
aas
mov
mov
mov
lds
inc
rcl
mov
dec
fmull
loop
out
stc
dec
test
xchg
sbb
ret
pop
xor
insb
lret
in
leave
arpl
jb
inc
jns
jnp
push
push
ljmp
or
call
dec
adc
sbb
xor
inc
stos
xadd
or
xchg
jno
je
movsb
xchg
movsb
insb
lret
cmpsb
mov
mov
adc
loopne
insb
dec
sahf
ss
sub
gs
pusha
inc
stc
sti
xor
mov
imul
jns
mov
xchg
add
mov
bound
inc
es
imul
or
cli
xchg
rclb
ret
push
xlat
loop
pop
dec
idivl
mov
pop
loopne
test
add
out
xchg
pop
int3
mov
sub
sti
jne
stos
xchg
ret
push
loop
mov
push
xchg
sub
sub
or
insb
test
sub
out
sbbb
mov
addl
jl
into
or
add
xor
rorl
inc
jns
out
or
in
sub
jecxz
jno
cs
push
jae
lret
xchg
inc
push
icebp
push
mov
jecxz
pushf
xor
clc
xchg
xor
jbe
in
fwait
cmpsb
addr16
in
jp
js
test
mov
sbb
cmp
inc
mov
hlt
outsl
ss
sub
sbb
xchg
sbb
mov
nop
mov
pop
ret
clc
and
aaa
loope
aaa
pusha
fiadds
pop
inc
mov
jbe
sbb
clc
mov
xchg
iret
adc
xor
in
lock
in
mov
push
outsb
dec
iret
inc
fcoml
test
dec
or
repz
sbb
jae
insb
fidivrs
inc
xor
mov
jp
aaa
loop
shr
pop
fucomp
aaa
fnsave
xchg
cltd
jmp
in
mov
cmp
push
or
test
hlt
loope
dec
addb
dec
daa
bound
pop
dec
sub
pushf
mov
xchg
adc
cmp
loop
fstpl
adc
aam
into
mov
xchg
icebp
shll
shl
jnp
cmc
mov
imul
call
mov
lret
addl
cli
icebp
fwait
push
cmp
mov
stos
mov
cmpsb
push
mov
pusha
jnp
inc
fnsave
jbe
pop
or
cmc
pop
dec
adc
es
insl
cmp
test
insb
in
cs
or
outsb
leave
int3
lods
sti
out
cmp
stos
cmp
cmp
add
xchg
pusha
push
inc
int3
sub
hlt
test
std
stos
nop
cmc
in
inc
mov
push
add
hlt
outsb
imul
xchg
roll
mov
mov
imul
lods
nop
hlt
mov
adc
mov
outsl
xchg
mov
into
dec
dec
mov
sahf
gs
in
mov
push
jnp
fstpt
mov
pushf
loope
stos
mov
cmp
lahf
push
mov
enter
inc
cmp
into
pusha
xor
cwtl
add
and
fwait
cmpsb
out
mov
lea
pop
cmpsl
pop
xor
jb
loopne
cli
push
mov
outsl
pusha
ds
sub
pop
imull
and
cmpsl
jns
in
push
mov
sbb
jp
push
cmp
mov
jo
dec
jb
xchg
js
mov
test
aas
mov
lea
lret
sti
mov
bound
add
mov
mov
xor
leave
dec
inc
cli
inc
add
je
in
out
and
adc
outsb
stos
es
loopne
jnp
in
mov
stc
pop
inc
not
pushf
inc
arpl
dec
fnstenv
aam
mov
and
movsl
lcall
stos
inc
inc
push
notb
mov
mov
lcall
out
out
dec
push
push
icebp
aas
clc
jg
pop
mov
cmpsl
cli
int3
jae
int
mov
je
cltd
sbb
testw
iret
or
push
jle
aaa
adc
inc
mov
repnz
push
mov
sbb
iret
jb
and
hlt
pop
adc
in
rclb
add
jg
mov
mov
fildl
pop
movsl
pop
adc
xor
adc
aam
jge
lret
or
repz
cs
pop
fcmove
movsl
test
cmc
inc
fistpl
movsb
test
push
cmp
pop
je
test
mov
dec
push
inc
inc
mov
shrb
sub
into
ss
or
pusha
frstor
popf
test
loope
sub
movsb
jecxz
inc
pop
pop
lds
clc
xor
iret
mov
pushf
xchg
mov
dec
mov
and
stc
call
jbe
fmuls
call
lea
loope
jo
mov
mov
pop
sub
pop
les
fucomi
push
mov
ficoml
ds
or
loope
jl
mov
sbb
xor
test
push
aam
rclb
xchg
sub
clc
cli
cmc
lahf
push
inc
mov
js
aad
cld
jl
loop
test
and
fstl
mov
pop
mov
jge
mov
mov
add
sbb
cmp
loopne
push
sti
mov
or
and
sarl
cmp
pop
aaa
cmpsb
lahf
adc
in
das
mov
in
arpl
in
hlt
mov
cmpsb
and
mov
dec
daa
les
push
pop
das
shll
sub
xchg
call
sbbb
imul
sub
add
fs
das
mov
adc
dec
cs
push
ds
cli
xchg
movsb
mov
adc
cld
sbb
pop
and
adc
aaa
mov
pop
jbe
or
sub
adc
lret
lcall
and
fisubrl
clc
jmp
dec
jne
je
cltd
adc
push
outsb
pop
notl
es
mov
arpl
xchg
mov
add
pop
sub
clc
lahf
mov
cltd
add
mov
imul
scas
hlt
scas
mov
and
fsubrl
jl
jae
or
daa
lods
xor
xchg
in
pop
jnp
and
pop
lahf
jns
negb
mov
call
mov
dec
pop
dec
inc
lock
dec
int3
jae
roll
push
dec
sub
aaa
popl
sbb
pop
adc
aaa
test
fimuls
cmpsb
mov
outsl
enter
and
aad
dec
jns
xchg
mov
lock
jnp
push
and
jbe
xchg
fcmovnbe
mov
lahf
lret
loope
push
mov
das
ja
inc
xchg
lea
aad
mov
add
scas
sub
or
push
repz
popa
ja
jmp
pushf
ss
xor
std
mov
lods
mov
or
mov
xor
sbb
stos
adc
pop
rcll
addr16
stos
xor
mov
rorb
and
sub
and
fstpt
push
mov
or
mov
test
pop
mov
jecxz
cmpsl
pop
pop
jne
jecxz
and
or
xchg
rorl
dec
pop
sub
fldcw
mov
xchg
pop
in
enter
sbb
call
lahf
cwtl
jge
inc
cs
popf
aam
and
and
jne
dec
cmp
pushf
int
cmc
cmp
xor
push
sub
ljmp
adc
cmp
mov
stos
xor
loopne
fcomps
mov
fisubrs
das
inc
xchg
out
lock
sbb
mov
add
push
in
pop
xchg
nop
outsb
add
mov
arpl
test
add
in
sbb
das
pop
sub
clc
push
xchg
push
jecxz
dec
in
mov
adc
adc
in
add
lock
add
xchg
into
or
lds
xchg
mov
jo
ret
andl
pop
repz
out
add
dec
jns
test
xorl
push
movsb
xorl
cmp
outsb
and
fists
out
add
and
lock
jo
sbb
add
adc
mov
imul
sub
loopne
in
mov
xchg
ss
and
mov
iret
xor
ret
add
out
adc
mov
out
push
mov
insb
jne
movsl
mov
bound
sti
push
xchg
insl
in
lcall
mov
ficomps
movlhps
jmp
rol
fcomp
pop
mov
push
xor
loope
rep
xchg
orb
in
adc
and
jge
mov
dec
pop
enter
fisubl
push
faddl
push
ljmp
push
fstps
roll
dec
out
insb
cmpsb
mov
andl
ficomps
in
xchg
fstl
ficompl
rcrb
cmpsl
dec
shrl
hlt
lcall
xor
jns
jnp
add
into
adc
xchg
xlat
outsb
and
sub
or
push
push
test
jmp
cmp
mov
mov
loopne
in
shrl
cmpsb
stc
in
mov
inc
sub
push
xchg
sbb
cmpsb
sub
js
scas
les
pushf
mov
pop
cmpsb
add
mov
loopne
push
xlat
or
and
xchg
mov
xor
pop
pop
pop
jns
lcall
xchg
jmp
xchg
push
out
push
cli
js
ljmp
inc
les
jg
pusha
das
xor
sahf
test
clc
push
sbbb
add
cld
push
sub
fldcw
jl
sub
lcall
cmp
fnstsw
aam
pop
jb
test
mov
popf
push
sbb
inc
mov
sbb
pop
jle
test
adc
sti
pop
xchg
mov
xchg
dec
fsubrl
or
mov
xchg
in
ss
sti
ss
cmpsl
push
mov
popf
dec
sub
inc
test
xchg
ljmp
data16
mov
adc
xlat
or
xchg
push
dec
push
jae
inc
sub
push
sbb
mov
lock
add
jg
cmp
dec
sbb
pop
xchg
movsl
bound
outsl
js
out
jnp
inc
and
lods
scas
sbb
cmp
outsl
fisttps
lock
std
stos
jge
scas
sbb
test
out
push
arpl
rorl
pop
fcmovne
xor
lock
sbb
and
into
lock
into
test
fs
int
cmp
dec
mov
pop
out
cld
popf
fsubp
imul
mov
pop
movsl
fbld
iret
pushf
inc
cmpl
inc
sub
in
addr16
dec
inc
sub
scas
outsl
or
jge
xchg
call
pop
mov
shlb
mov
test
mov
xor
jae
out
ljmp
movsb
cmp
jl
jbe
mov
mov
mov
out
jp
sarl
lret
cmp
stos
int
push
dec
mov
es
int3
mov
sbb
sbb
fisubs
dec
fs
jno
and
scas
xchg
addr16
pop
pushf
pop
negl
psubusw
cmp
in
lds
test
test
and
mov
cmp
jecxz
nop
dec
and
in
jmp
orl
pushf
rcrl
push
xchg
lret
sbb
leave
rcrl
xchg
in
std
sti
sub
cs
cmpsl
jb
xor
fstpt
popa
dec
mov
mov
push
cmpsl
sti
sub
cmp
dec
xchg
out
inc
pushf
jnp
ja
jne
sti
sub
outsb
nop
imul
lret
ret
lret
add
jg
pop
pop
pusha
pop
rclb
jno
in
cmp
mov
mov
push
or
mov
inc
jb
js
daa
or
push
out
xchg
fnstsw
sub
repnz
mov
mov
cmp
jns
andl
pop
lret
mov
outsl
icebp
popa
fstp
mov
aas
inc
sub
bound
push
push
or
in
sarb
xchg
or
jae
shl
or
cmp
push
push
inc
pop
xor
cli
sub
rep
mov
sub
xor
js
xchg
out
pop
sub
and
enter
and
mov
int
jge
lcall
xor
test
mov
mov
lock
xor
jmp
cmp
call
jae
xchg
vorps
ret
lret
fwait
outsb
repnz
pushf
mov
stc
xlat
ljmp
jno
faddp
jae
and
insl
pop
repz
adc
dec
lds
dec
movsb
pushf
adc
or
and
add
dec
dec
leave
in
test
adc
shrl
aad
in
pop
dec
sub
pop
das
push
inc
inc
adc
mov
inc
repz
inc
fistps
pop
mov
push
rcrb
imul
insl
mov
cs
jecxz
adcb
mov
mov
lcall
rorb
outsl
bound
pop
scas
enter
fisubl
mov
lods
dec
mov
cs
lret
jbe
mov
sbb
mov
xchg
ret
xlat
lahf
aam
cmp
iret
inc
and
add
fucomp
adc
pop
dec
lret
adc
ja
mov
pop
jecxz
pop
or
inc
jmp
cmpsl
fldenv
xor
mov
pop
mov
lea
push
ror
xor
jp
daa
rclb
ret
ret
pushf
cltd
int3
in
stos
fistpll
rcll
push
mov
in
adc
daa
cwtl
lods
cmc
sbb
mov
in
jno
push
inc
rorb
cli
xchg
movsl
mov
stc
rorl
adc
outsl
movsl
adc
xor
icebp
mov
cmp
add
xlat
sbb
push
pop
idivb
and
cli
popl
adc
mov
in
iret
or
sub
sbbb
xchg
sqrtps
xor
test
mov
jmp
sub
icebp
inc
dec
inc
into
sbb
push
in
out
cmpsl
mov
fidivrl
stos
adc
xchg
cmp
popa
push
lcall
jg
into
sbb
enter
xor
cmpsb
sbb
or
test
xor
xor
push
movsb
jbe
cmpsl
sub
insb
inc
in
icebp
pop
sarb
add
icebp
cmp
ljmp
mov
mov
add
xchg
jl
xchg
xchg
jnp
xchg
pop
fldt
js
lods
push
and
pop
popa
jle
inc
jo
push
dec
sbb
xchg
fwait
bound
roll
out
cmpsl
or
dec
push
mov
js
ljmp
xchg
mov
xor
or
test
repnz
stc
shlb
mov
add
ljmp
andb
xor
insb
push
loopne
xlat
push
jg
lcall
adc
fsts
push
sub
aas
out
push
jmp
shll
sbb
mov
rcl
inc
cmp
mov
pushf
inc
loope
xchg
and
sub
mov
dec
push
pushf
mov
or
shll
or
dec
mov
sbb
dec
fsubs
xchg
jb
adc
iret
cmp
rcr
testb
mov
mov
dec
pop
or
xchg
pop
xlat
ja
shrl
and
lcall
bound
std
mov
daa
push
addr16
mov
addr16
mov
xor
xchg
cli
or
daa
out
and
mov
sti
outsb
pop
jmp
js
mov
outsb
js
inc
outsb
sbb
dec
loope
inc
pop
jmp
inc
std
inc
enter
inc
xchg
fcomps
cmc
push
jg
mov
popa
addb
cmpb
idivb
pop
ret
xor
dec
jl
xor
shrl
pusha
test
idivl
fwait
and
in
aam
mov
mov
sbb
shll
in
pop
fldcw
mov
push
stos
xor
test
popf
inc
pop
add
jl
jmp
and
xor
cmp
data16
ret
inc
inc
pop
dec
jg
xor
mov
sahf
sub
push
cmp
popa
push
fcompl
dec
pop
fs
sbb
inc
aam
ficoml
xor
pop
xchg
mov
insb
outsl
cmp
xchg
push
negl
pop
add
jo
ja
mov
mov
pop
mov
imul
dec
jmp
mov
es
xor
rcll
ja
pop
test
sub
cmc
leave
push
fildll
fdivr
mov
cmpsb
fdivr
mov
ret
inc
sbb
or
cs
aad
gs
int3
movsl
loopne
in
jns
loopne
adc
dec
loope
dec
stos
and
push
insl
pop
cltd
mov
ffreep
dec
and
sub
jle
test
xchg
cmp
or
add
call
aaa
pop
dec
pop
ja
add
out
mov
lea
test
cs
mov
adc
shlb
jge
sbb
imul
dec
push
adc
adc
cmp
int
add
lahf
mov
fdivl
push
dec
fiadds
xor
pop
shl
int3
or
xor
mov
repz
jnp
scas
cmc
add
jle
xchg
xchg
out
or
sub
cmp
cmp
lds
movsl
int3
pop
imul
in
mov
dec
in
fsts
cmp
adc
xchg
lret
sarb
es
mov
pop
hlt
aaa
inc
sub
push
insb
mov
je
fsubrs
mov
xchg
fwait
or
dec
cmp
push
sarb
push
imul
mov
into
or
rcr
mov
fwait
sti
xor
outsl
int
mov
leave
movsl
dec
cmpsl
push
adc
or
dec
xchg
push
call
ljmp
repz
mov
jae
rorl
movsb
ret
xchg
lods
jmp
mov
cmp
mov
push
fadds
pop
push
push
mov
jg
je
mov
arpl
xor
sub
insb
fwait
jg
xor
pop
xor
jo
rolb
cltd
mov
dec
sub
mov
popa
int
xor
mov
pusha
in
mov
aad
pop
imul
xchg
mov
leave
iret
pop
cmp
stos
mov
pop
pushf
pop
mov
inc
dec
out
ja
mov
mov
enter
arpl
enter
cmp
jp
and
cli
xabort
popa
mov
ss
movsl
aaa
ss
mov
mov
aad
ljmp
ja
add
lret
ret
and
add
insl
push
imull
jno
fistpll
ja
xchg
stos
loop
sbb
je
add
mov
dec
push
leave
push
in
pop
shll
call
lahf
pop
xchg
push
cmc
mov
js
fs
push
jmp
out
fnstenv
mov
adc
fildl
jnp
add
lods
jns
mov
cld
stos
sub
cs
push
xchg
dec
add
mov
mov
cs
mov
cli
fcmovnu
xchg
out
inc
adc
mov
lcall
test
xchg
cmpsl
sub
stos
adc
sub
xchg
loope
push
fcoml
int3
inc
mov
adc
inc
enter
out
jmp
and
gs
scas
mov
subl
push
fisttpl
je
pop
mov
dec
cmovno
aaa
mov
add
dec
popf
rcrb
pop
pusha
mov
dec
cmp
xchg
mov
mov
pop
scas
mov
cwtl
repz
and
add
movsl
mov
fisubrs
imul
mov
cwtl
bound
push
mov
out
cmp
sbbl
jo
test
fsubs
sub
lds
jno
insb
mov
leave
cltd
push
add
fsubrs
shll
pusha
aaa
int3
and
push
sub
lea
shll
es
and
int
jb
inc
das
aaa
xorb
dec
cmp
and
xchg
enter
push
pop
pop
sti
std
into
fs
daa
pop
mov
int3
es
cmpl
sti
lods
je
jge
fs
daa
sbb
xlat
iret
add
popf
add
push
bound
jno
das
fcmovbe
dec
mov
push
mov
dec
and
push
lods
fadds
sbb
in
das
sbb
outsb
sub
sbb
mov
cmp
mov
je
push
inc
or
sbb
aam
inc
jge
jo
add
clc
cmp
cwtl
adc
scas
mov
add
mov
mov
test
jnp
sbb
clc
test
jle
lahf
roll
ljmp
push
ds
push
dec
lods
stos
loop
call
mov
shl
or
stc
push
ds
pop
jae
ret
cli
pop
mov
mov
movb
out
cwtl
xchg
out
clc
jne
sti
std
int
add
mov
cmp
std
ja
icebp
mov
xchg
pop
jo
ss
stos
scas
xor
aad
cmc
xchg
outsl
outsl
cmp
add
mov
out
sbb
jg
shrl
pop
dec
lods
setle
xor
outsb
mov
test
dec
sbb
jecxz
jmp
dec
mov
mov
mov
daa
xchg
fidivrl
mov
mov
mov
pop
scas
and
nop
inc
xchg
movsl
leave
mov
pop
mov
fildll
cli
das
icebp
mov
lods
push
in
shrl
or
bound
sbb
imul
call
jecxz
add
jbe
mov
shlb
mov
outsb
js
jo
nop
out
lahf
sbb
pop
add
je
iret
push
xchg
mov
inc
pop
js
xor
ficoms
daa
hlt
mov
add
mov
loope
hlt
mov
mov
fnstcw
mov
adc
jne
arpl
mov
cmp
jnp
lret
push
js
sub
add
mov
lea
sbb
fimuls
clc
adc
cmpsl
sub
push
adc
adc
cmp
xor
mov
sbb
dec
cwtl
jle
lcall
lods
mov
mov
push
mov
sti
push
shl
cmp
mov
sti
movsl
arpl
mov
pop
jo
and
mov
ja
rorl
out
or
sub
lods
fwait
aas
lods
inc
inc
out
pop
pusha
lret
sub
xchg
or
add
out
xchg
shrl
adc
mov
ret
cld
sub
xor
mov
add
cmp
cmpsl
mov
lea
xchg
xchg
jecxz
cmp
jae
int
test
gs
jl
sahf
aas
mov
and
outsb
lods
cld
mov
mov
scas
dec
jle
push
adc
pop
cs
mov
fwait
push
mov
cwtl
lock
clc
or
sbb
loopne
sub
jle
mull
pop
fbstp
cltd
mov
aad
mov
iret
rclb
imul
into
outsb
add
mov
test
cmp
test
mov
mov
mov
or
je
push
mov
inc
adc
les
push
sbb
and
inc
les
lock
xor
sti
and
jne
ja
jl
dec
pop
xchg
or
fs
test
inc
push
aam
add
lea
xor
push
leave
insb
and
and
xor
repz
pop
nop
add
shrb
or
pusha
jmp
out
sbb
and
and
scas
ja
and
dec
push
movsb
pop
nop
cwtl
es
in
mov
mov
adc
aam
dec
pop
popa
xchg
cmp
jo
sub
cmp
movsb
push
loope
popf
imulb
or
mov
aaa
add
push
add
dec
and
adc
cmpl
aaa
adc
rcr
loopne
fldl
test
ja
dec
test
aad
pop
fcomi
aaa
xchg
push
fwait
sbb
iret
cmc
push
mov
faddl
push
fdivl
inc
sbbl
mov
xchg
loop
aaa
pop
rcrl
outsb
push
iret
pop
inc
fstpt
xchg
dec
roll
je
push
fisttpl
xor
push
push
mov
mov
or
jb
adc
jp
ljmp
idivl
or
outsl
jecxz
stos
jmp
rolb
dec
dec
fsubs
inc
enter
adc
and
fidivrs
jecxz
push
inc
sub
pop
sub
adcl
cmp
je
test
stos
add
sub
and
ror
mov
xchg
or
and
sub
push
and
mov
jmp
sub
mov
jl
fiadds
test
sti
jmp
add
adc
shrl
xor
or
arpl
mov
cmp
mov
iret
sarl
xor
loopne
gs
inc
aad
int3
inc
leave
push
jne
ja
pop
push
cld
inc
cld
mov
inc
sbb
divb
lds
lahf
cmp
push
xchg
xchg
add
lock
hlt
push
push
mov
push
or
adc
mov
xchg
das
add
jmp
and
xor
pop
addr16
mov
cmpsl
cs
pushf
scas
jb
dec
iret
cmp
pop
or
and
or
push
xor
mov
loope
mov
jl
iret
das
or
sbb
mov
jl
in
and
fs
adc
adc
aaa
or
mov
popa
aad
loopne
pop
es
fcomi
out
sub
loope
or
cmc
fstpt
adc
lds
xor
stos
cmpsl
dec
xchg
in
xchg
mov
pop
stos
mov
pushf
inc
mov
cmp
mov
push
push
jecxz
xor
hlt
loopne
mov
sub
lret
add
int3
imul
add
std
bound
pop
das
int3
or
ja
sub
xor
movhps
xchg
cwtl
xchg
jl
aas
andl
push
ret
mov
and
jo
xchg
pop
addb
sbb
aas
xchg
movsb
enter
cmp
hlt
movsb
das
fcmovu
in
in
push
xchg
sub
cmp
pop
jnp
mov
cld
add
lcall
in
push
inc
repz
jg
aaa
lahf
mov
mov
mov
dec
cmp
sahf
sub
loop
inc
or
add
pop
lds
nop
sbb
rcrl
out
pop
cmp
outsb
test
les
int
fisttpl
pushf
dec
lock
pop
mov
push
adc
and
mov
fistps
mov
nop
cmp
mov
dec
add
lods
dec
out
mov
scas
mov
dec
out
sbb
insb
sbb
push
insb
test
push
inc
and
ss
lret
sbb
mov
mov
es
mov
xor
jnp
imul
mov
negl
adc
imul
push
cwtl
add
ja
mov
mov
sti
mov
pop
repz
inc
mov
addr16
imul
pop
adc
fs
cs
fimull
push
inc
xor
xchg
dec
add
mov
pop
cmp
scas
sub
push
lahf
pushf
push
aaa
xchg
stc
imull
out
jno
fstl
xchg
pop
insb
xchg
imul
mov
jge
xor
insl
sub
rorl
fimull
test
or
mov
jle
jmp
aas
mov
pop
pushf
jl
test
mov
cmpb
xchg
mov
push
push
xor
jge
adc
js
outsb
adc
jmp
add
ds
lahf
adc
pop
mov
and
arpl
adc
mov
leave
pushf
jge
pop
test
and
push
or
mov
sub
pop
push
je
push
xor
add
int
and
jmp
in
add
fnstsw
cmc
ja
dec
cld
mov
jnp
in
lock
movsl
cmp
xchg
test
sbb
notl
xchg
fcoml
lea
add
jmp
and
sbb
inc
insl
or
arpl
xchg
pusha
add
xor
mov
xchg
inc
lret
and
mov
add
outsb
or
jo
iret
insb
jle
inc
adc
or
push
xchg
mov
stos
bnd
xchg
ljmp
add
or
jb
cmp
into
lods
dec
ret
out
dec
mov
test
jmpw
and
dec
push
dec
xor
add
mov
xchg
adc
mov
scas
xor
movsb
mov
outsb
adc
mov
shrl
loop
fisubrl
mov
jmp
add
pushf
lcall
adc
or
jecxz
mov
inc
add
jle
nop
mov
xor
mov
sub
cmp
mov
xchg
mov
inc
das
out
pop
push
mov
adc
add
out
divb
pusha
dec
stc
dec
sbb
and
inc
mov
scas
insb
jle
xchg
das
pop
mov
mov
aam
daa
mov
mov
xchg
push
call
xor
pop
mov
inc
orl
scas
add
gs
lret
jo
mov
mov
loop
stos
dec
lret
pop
or
mov
inc
enter
repz
mov
pop
cltd
add
aaa
pop
push
dec
es
lods
inc
shl
ds
test
push
cmpsb
ret
xchg
add
and
popa
sbb
insb
or
outsb
mov
ljmp
iret
push
inc
lret
out
fs
jb
mov
test
sub
jl
dec
mov
aad
xchg
int
lods
push
dec
outsb
orl
xor
pop
or
cmp
push
ljmp
xchg
loope
inc
loop
into
cmp
cmp
cmp
push
idivl
test
mov
daa
push
sti
lret
repnz
dec
in
or
jl
cmp
or
popf
mov
out
adc
ljmp
add
mov
insw
sub
mov
mov
movsl
idivl
aam
dec
mov
data16
jp
and
fcomps
or
inc
add
pop
pop
cmp
xchg
fiadds
adcl
popa
rep
dec
xor
mov
jecxz
adc
mov
jo
sub
mov
clc
xor
fldl
jle
sti
mov
dec
mov
push
bnd
and
cmpsl
add
xchg
cmp
sub
call
test
cwtl
data16
push
pushf
jmp
push
into
das
push
fistpll
pop
jne
and
movsl
mov
cmp
add
insl
js
xchg
inc
fdivrs
push
jp
xor
les
push
sub
fidivrs
ja
sub
or
push
cwtl
mov
pop
xchg
decb
out
adc
xchg
adc
cmpsb
inc
or
sahf
push
mov
ds
mov
arpl
pop
or
add
lods
dec
mov
enter
adc
sub
faddl
mov
jecxz
dec
dec
loop
jmp
lret
aad
movsb
xor
shl
cmc
pop
mov
inc
xor
push
mulb
int3
dec
ffree
pop
inc
xorl
arpl
xchg
clc
xor
or
and
and
jl
cltd
mov
imul
inc
xor
xchg
jle
shrl
xchg
adc
push
orb
mov
ja
lcall
jbe
sti
ljmp
aad
pop
add
clc
push
insl
into
mov
push
and
add
fwait
mov
or
mov
cmp
iret
in
inc
sarl
mov
xlat
lock
inc
pop
pop
popa
cmp
ret
sbb
mov
cld
loopne
push
sbbl
mov
aas
mull
mov
cmp
jne
adc
sahf
movsl
shl
ffree
jns
fwait
sub
lret
dec
inc
xchg
and
or
mov
mov
xor
xchg
std
das
inc
stos
imul
test
sbb
xor
scas
and
adcl
push
pop
or
or
xor
std
dec
call
or
add
push
jg
push
nop
sbb
xor
int
das
pop
add
xor
sbb
enter
mov
xchg
rorb
dec
or
gs
clc
jae
mov
pop
sub
lods
ret
ljmp
sub
dec
cmc
cwtl
push
add
sub
mov
rorb
push
push
jp
loop
pop
dec
pop
ja
add
aad
add
and
xor
add
rcr
fdivl
int3
add
xor
sub
xchg
or
clc
lahf
daa
mov
popf
pop
add
lods
loop
ret
add
mov
push
ja
aam
cmp
lods
mov
jns
xchg
es
fldl
inc
outsb
or
loop
sub
push
int3
or
or
jns,pn
dec
lds
dec
jns
mov
mov
fucomip
lods
call
aas
or
cmp
sub
and
cmp
or
pusha
stos
mov
dec
out
xor
or
and
xchg
mov
out
icebp
cs
pop
xor
popa
or
movsb
jb
push
and
push
or
lods
add
dec
mov
cs
mov
scas
add
xchg
add
mov
mov
pop
inc
adc
sbb
sub
fldt
sbb
cltd
cmp
jmp
in
out
aas
sbb
repz
sbb
mov
lock
jnp
xor
lock
imul
cmp
pop
push
loope
jne
jne
and
mov
jbe
movsl
inc
imul
push
int
fcoml
popf
jp
cmp
inc
stos
or
jl
fstl
xchg
mul
sub
shlb
popa
mov
loopne
jno
imull
mov
int
leave
ret
pop
and
sub
pop
dec
xchg
xchg
xor
mov
hlt
shlb
out
test
fldt
scas
push
add
jle
dec
jns
and
popa
dec
ljmp
xor
rol
xchg
scas
in
mov
fcmovnb
jg
repz
dec
mov
jne
idivl
mov
cwtl
push
lret
mov
fistl
xor
rolb
or
movsb
fwait
cmp
jecxz
or
mov
xor
faddl
lods
movsl
sub
popa
pop
adc
ljmp
adc
push
movsbl
aaa
sti
loopne
sub
inc
mov
sbb
or
scas
adc
incl
xor
jp
cmp
pop
lcall
aad
add
cltd
sub
ss
xchg
inc
fwait
cs
jp
rcr
in
inc
pop
inc
fldenv
mov
out
xchg
lretw
clc
shll
hlt
shl
loope
pop
mov
mov
std
inc
mov
pop
jae
push
mov
xor
aaa
lods
insb
and
mov
push
sbb
mov
xor
cmp
das
pop
in
mov
mov
xchg
push
and
xchg
mov
push
cmp
js
jae
mov
scas
push
inc
aad
test
add
pop
xchg
mov
mov
movb
ljmp
lahf
out
lret
inc
lock
sub
add
repz
mov
lret
stos
jp
jnp
and
pop
out
ret
sahf
aad
cmp
mov
out
mov
jg
mov
dec
xorl
jbe
movsl
adc
mov
out
mov
pop
mov
push
cmpl
sbb
sbb
inc
mov
push
mov
lods
dec
adc
adc
pop
push
in
es
popf
clc
or
cmpsl
mov
and
sub
mov
scas
cwtl
pop
popf
mov
mov
int3
xchg
fcomip
div
neg
xchg
int
lret
cltd
mov
xchg
in
cmp
das
hlt
mov
adc
mov
and
push
jbe
push
pop
and
mov
inc
pop
imul
or
mov
das
add
out
stos
jmp
sub
and
mov
fcmove
push
mov
fsub
mov
mov
sub
cmp
xor
jmp
iret
testb
inc
and
arpl
pop
ficoms
and
out
sub
push
repnz
and
add
bound
aad
adc
shrb
nop
int3
add
cltd
cmpsl
pushf
mov
mov
imul
je
lods
jl
jae
fmull
loopne
jne
jns
cli
push
mov
jmp
xlat
adc
in
mov
inc
lods
inc
in
imul
mov
loop
inc
pop
mov
in
mov
rcl
aad
xchg
loope
aaa
mov
lret
and
or
lea
jbe
mov
data16
addl
out
sbb
and
fdivl
or
xlat
insb
cmp
ss
mov
mov
or
cmc
bound
push
or
ljmp
jo
decb
in
ljmp
outsb
in
sub
mov
das
call
ds
and
mov
xchg
imul
inc
cmpl
dec
inc
sub
jns
outsb
push
jg
test
cmp
mov
flds
or
inc
scas
icebp
aaa
or
pop
jb
cld
pop
or
hlt
lret
shrl
dec
xchg
int3
pop
push
or
cmp
rcll
ja
and
jmp
fisubrs
out
mov
sbb
ficoml
test
push
out
imul
jbe,pt
pop
call
push
dec
sub
outsl
mov
sbb
popa
std
cli
into
mov
mov
rcll
ret
cmpl
cmp
sbb
mov
cwtl
insl
test
mov
insb
or
push
call
inc
push
lahf
data16
shlb
aad
inc
incl
dec
mov
sbb
rorb
xchg
dec
int
pop
std
sbb
pop
sub
adc
in
loopne
mov
push
mov
sub
push
inc
push
or
jb
int
shll
push
adc
mov
mov
inc
cmp
push
insl
orb
orl
lahf
pop
push
mov
cwtl
push
js
lcall
sahf
mov
jne
imul
cmp
shlb
fsubl
js
pop
add
ret
mov
inc
and
push
fcoml
xchg
jg
cmpsl
les
gs
jmp
aam
aas
jmp
in
push
pusha
jb
inc
scas
lcall
xor
xchg
cmpsl
cmp
shl
rorb
rclb
int
stos
push
add
lea
jns
rorl
mov
in
daa
and
dec
bound
das
leave
pop
xchg
sbb
cmp
add
push
scas
fsub
adc
dec
jbe
dec
jmp
mov
dec
loope
cli
or
es
lods
mov
add
cmp
gs
mov
repz
mov
jns
cmp
or
mov
adc
ja
mov
dec
bound
mov
mov
fnstsw
ss
cmp
jb
sub
mov
insl
fisttpl
imul
jnp
mov
add
sub
outsb
stos
push
sbb
push
push
adc
and
sbb
stos
sbb
and
daa
sub
xlat
add
sbbl
or
mov
xchg
mov
movb
in
mov
xchg
jg
mov
push
rorb
dec
orb
sbb
mov
xchg
and
mov
sub
push
pop
adc
in
xor
and
mov
leave
les
jne
push
xor
push
adc
outsb
xor
jg
pop
dec
push
mov
sub
subb
aaa
jbe
dec
je
mov
scas
or
movsb
cmp
dec
mov
xchg
stc
iret
jbe
or
inc
fildll
les
add
sahf
mov
sti
dec
ret
or
inc
dec
xor
xorl
dec
cmp
pop
push
inc
mov
arpl
stos
dec
outsb
shll
hlt
cmp
mov
enter
mov
punpckldq
jb
dec
icebp
xchg
insb
jo
add
into
push
sub
cmp
sbb
adc
dec
cmc
sub
sar
insb
jge
movsl
insl
rorb
fidivrl
cwtl
inc
add
adc
sti
lret
inc
adc
call
jo
mov
cmpsl
rorb
push
lahf
cli
lods
sbb
mov
call
mov
fistpll
sub
pop
or
aaa
pushf
inc
cmp
sbb
xor
hlt
jne
cld
jnp
fmull
inc
pusha
movsb
daa
movsb
or
cmp
push
js
popa
nop
push
mov
dec
pop
cs
pop
adc
out
sub
xchg
int
xor
xchg
push
jns
shrb
sbb
mov
mov
cmp
inc
inc
pop
lea
and
mov
movsl
xchg
mov
push
add
mov
rcll
bound
mov
mov
ljmp
cld
lahf
inc
addb
mov
mov
jecxz
lods
mov
hlt
sahf
cmp
cmpsl
or
je
es
push
sub
xchg
or
pusha
jle
jg
xor
ja
pop
divb
sub
in
xchg
push
mov
or
jnp
sub
mov
push
mov
push
popl
inc
loopne
arpl
mov
cli
out
lahf
outsb
push
daa
cwtl
test
add
es
push
add
test
repnz
fisubl
xlat
js
fldl
les
stos
jle
enter
cmpsb
jmp
jmp
sbb
ret
inc
gs
cmc
cmp
and
push
out
xchg
enter
ret
cli
outsl
gs
jge
xchg
push
outsb
jp
vmread
adc
ss
mov
jo
cld
lcall
xor
lret
xlat
clc
cmp
fadds
push
inc
adc
jp
mov
std
fwait
mul
sub
aaa
lds
pop
sub
jb
mulb
fidivs
mov
lods
in
mov
hlt
jnp
and
lcall
mov
xchg
xor
clc
xor
mov
dec
lret
js
shr
mov
in
and
test
lret
mov
fidivrl
cwtl
jl
js
mov
jne
incb
mov
pop
cltd
pop
sub
stos
sub
jp
js
or
hlt
push
aam
cmp
mov
push
mov
mov
xchg
fdivl
add
aam
inc
aad
sbb
xorl
dec
sub
rcrl
pushf
jne
mov
dec
pop
mov
inc
xchg
test
nop
leave
inc
mov
sbb
sti
push
clc
pop
rolb
mov
rolb
dec
nop
cmp
lods
or
pop
jno
in
lea
mov
cltd
cmpsb
ficompl
xchg
xor
outsl
cmp
mov
inc
push
out
add
fisttps
ja
push
xchg
cmp
push
movsl
pusha
inc
pop
jmp
cmp
les
cmp
xor
rep
stos
les
aas
or
ds
cli
pop
nop
xor
imul
pop
mov
sub
and
test
adc
sahf
and
sbb
les
les
ljmp
xchg
or
popf
aam
jb
mov
aad
je
clc
popf
test
push
dec
pop
add
adc
push
imul
leave
repz
jnp
int3
push
lea
pop
adc
divb
stos
jge
sub
inc
xor
dec
adcb
sbbb
add
lds
ljmp
js
scas
loop
xor
cmc
sub
lea
cmp
test
push
data16
mov
xchg
das
dec
fisubrl
sub
xchg
inc
movsb
cmp
xchg
add
fwait
xor
jmp
pop
not
lods
jb
inc
jae
xchg
fcoml
ljmp
adc
push
fisubl
ret
push
bound
inc
mov
bound
mov
xchg
and
imul
jne
and
sbb
jne
sub
dec
jne
sahf
inc
imul
test
adc
lcall
in
mov
jo
jns
cmp
pushf
je
lock
push
nop
inc
cmc
cmp
inc
jmp
xor
fstpt
jmp
add
sub
dec
test
xchg
pushl
xchg
test
and
mov
or
inc
movl
jmp
mov
dec
add
cmp
push
push
or
pop
outsl
inc
adc
mov
xchg
repnz
out
cwtl
push
addb
dec
mov
leave
sub
dec
or
cmpsl
out
add
cmpsb
je
xchg
push
dec
xchg
test
pushf
xlat
js
jnp
sbb
out
sub
mov
push
mov
push
pusha
cmp
lret
dec
ss
mov
das
shrb
cmp
xor
leave
sbb
push
xchg
and
mov
jl
push
jmp
add
push
nop
fisubrl
jnp
push
and
ss
popf
ss
cmp
pop
adc
xor
and
sti
out
int3
rcll
sub
insb
les
sbb
aaa
std
stos
inc
data16
jmp
cmpb
jae
test
add
sbb
jmp
pop
pop
aad
and
inc
mov
xlat
int3
push
repnz
add
xchg
shl
inc
sbb
adc
xchg
lea
mov
inc
or
adc
xchg
out
push
insl
lods
xchg
lahf
and
pop
daa
popf
xchg
mov
out
pop
mov
int
xchg
aam
nop
and
dec
jge
pop
ret
xor
xor
mov
pop
push
mov
add
subl
aam
out
pop
gs
std
adc
pop
icebp
lcall
pushf
hlt
jecxz
fwait
mov
and
pop
ret
loop
pop
loop
pushl
jnp,pn
mov
enter
jns
movsb
outsl
jbe
movsb
xor
subb
xlat
sbb
xchg
cmp
jae
dec
pop
rol
cmp
popf
mov
rcrl
fcom
mov
arpl
pop
std
pop
add
jo
inc
scas
ss
lods
arpl
int
mov
dec
pop
loop
mov
test
fisubl
outsb
imulb
adc
jnp
mov
in
and
and
lcall
sub
mov
mov
push
out
cmp
cmp
and
xchg
arpl
inc
icebp
jnp
fucomp
testl
filds
in
push
movl
mov
rcrl
adc
cmpsb
jno
jne
ljmp
fcomip
push
jnp
inc
mov
jmp
push
cmpb
dec
cwtl
add
push
enter
les
jge
ret
add
adc
push
mov
lock
xchg
insb
cbtw
lahf
fidivrl
aas
ror
xchg
add
hlt
dec
dec
in
cmp
cmp
add
inc
aaa
cmpl
or
xor
into
adc
aas
xchg
scas
sub
push
inc
ret
arpl
incl
fldcw
icebp
jns
sbb
or
cmpsb
das
cmp
jb
cmpsl
aad
bound
icebp
push
jbe
pop
add
xchg
jmp
cmp
test
adc
dec
inc
push
pop
mov
cmp
fisubl
xchg
in
fs
enter
and
cli
popa
cmp
in
ss
call
std
xor
jl
imul
cwtl
notb
mov
mov
push
jmp
je
dec
mov
add
pop
mov
enter
add
aaa
inc
mov
mov
sahf
dec
aad
nop
ret
add
mov
pop
inc
jns
stc
dec
std
in
sub
mov
push
xchg
sub
jno
mov
es
shll
outsl
ret
ss
inc
inc
fs
sbb
inc
jnp
pusha
mov
sub
fadd
scas
incb
out
insb
test
pushaw
push
mov
ja
in
ss
loope
aas
mov
mov
dec
clc
mov
mov
rcr
roll
sbbb
adc
test
cmpsl
popf
sub
lods
mov
scas
add
das
cmc
cmp
sbb
jb
or
int
lock
mov
mov
lahf
int3
adc
sbb
sbb
sub
inc
les
ljmp
dec
inc
out
dec
outsl
sub
cmp
loop
jmp
sub
mov
jp
testl
test
xchg
mov
jecxz
inc
sub
sbb
and
into
sbb
outsl
jecxz
testb
pop
mov
adcb
and
out
in
xchg
add
iret
mov
push
test
cmpsb
xor
lds
aaa
ds
shl
cs
pop
mov
fdivl
lahf
mov
test
out
cmpsb
dec
ss
popa
repz
aad
lods
add
ret
scas
push
lock
xlat
jo
adc
jns
jae
jl
inc
push
jecxz
push
out
shrb
test
xchg
test
adcl
insl
shll
fwait
inc
popa
addl
aas
and
cmp
mov
jmp
popf
add
mov
ret
mov
stc
ja
mov
adc
pop
fisttpll
mov
dec
mov
mov
xchg
rol
xlat
and
sti
jg
imul
jb
and
mov
mov
notl
jne
mov
fisubl
in
jecxz
jno
rcr
inc
mov
xchg
xor
push
mov
ja
cmp
sub
jne
pop
inc
sub
cld
mov
fildl
inc
ret
lcall
inc
and
lock
dec
sti
stc
int3
out
lcall
inc
pop
xorb
cmp
lahf
jg
dec
imul
pusha
sub
jmp
scas
adcl
ds
cld
popa
loopne
xchg
xlat
mov
sbb
jp
sbb
negl
mov
xchg
cmpsb
xchg
adc
lock
popa
inc
dec
dec
les
mov
out
aam
add
or
outsl
lcall
aam
jne
and
negl
push
mov
mov
fmull
out
mov
mov
addr16
filds
push
mov
ljmp
repnz
clc
shlb
or
shlb
in
push
cmpsb
pop
mov
ljmp
lret
pop
and
mov
mov
xchg
into
xlat
scas
inc
cmpsb
pop
cs
imul
adcl
mov
test
enter
push
sub
cmp
loope
push
xor
jecxz
mov
ror
mov
andb
xchg
inc
push
bound
dec
clc
dec
cmp
mov
mov
and
mov
pop
mov
or
imul
aam
adc
mov
mov
sarb
icebp
sub
sbb
cmp
sub
mull
sub
arpl
bound
in
dec
notb
or
sbb
and
loope
std
fsubl
orl
adc
push
js
xchg
inc
sub
pop
jbe
rcll
push
xchg
and
fldcw
cs
cltd
inc
and
pop
add
sub
mov
repz
stos
test
add
hlt
mov
cs
test
pop
push
movsl
or
cltd
mov
scas
add
mov
dec
cltd
xchg
jno
out
enter
jg
xchg
add
fstl
stc
and
pop
jg
iret
ret
mov
fstp
add
mov
jno
fsts
jp
or
out
mov
jle
cltd
xchg
shlb
dec
fnstcw
jmp
jne
and
ficoms
pop
fstpl
movsb
repnz
sub
xor
addr16
popa
in
divl
out
cmpsb
push
push
mov
movsl
cld
daa
fadds
cld
loope
ljmp
ja
ds
stc
test
shrb
sbb
sbb
fs
ret
jle
pop
rolb
sti
sbb
mov
fsubp
imul
dec
jecxz
cld
pop
jno
mov
xchg
sbb
mov
div
fs
mov
push
dec
sub
push
ja
push
mov
mov
and
out
adc
lods
cmpsb
jl
std
xor
sbb
adc
repnz
in
mov
iret
int3
test
fstpt
jo
lea
out
int
sahf
mov
idivl
sbb
mov
sbb
int
mov
mov
xchg
xchg
adc
daa
sbb
jb
outsb
jbe
dec
pop
push
outsb
movsl
adc
imul
mov
xchg
adc
imul
push
sti
or
hlt
lock
sarb
or
js
gs
xlat
add
repz
loopne
out
roll
cmp
xchg
jno
fdivrs
lcall
or
int
xor
inc
dec
xchg
outsb
pop
cltd
xor
bound
xor
scas
dec
fdivs
jg
dec
add
call
fnstcw
out
bound
test
shrb
jmp
enter
mov
add
push
in
lahf
mov
jbe
pushf
sahf
insl
imul
xchg
stos
adc
sub
pop
adc
mov
scas
mov
dec
sbb
sbb
add
push
daa
ljmp
push
push
hlt
sub
fiadds
movsb
mov
das
cmp
shrl
enter
in
loope
jmp
jae
daa
dec
inc
js
xor
or
mov
add
popa
jl
sub
mov
addr16
mov
fimull
lahf
mov
sti
icebp
lret
in
jne
push
std
pop
mov
mov
add
sbb
cmp
pop
stc
push
pop
call
mov
jns
fstps
pushf
lock
js
dec
ret
test
adc
or
push
push
mov
jp
cmp
cmp
or
inc
xor
add
inc
cmc
fsubs
bound
hlt
outsl
dec
lods
in
xor
scas
mov
xchg
ret
xor
cwtl
fdivp
or
or
push
shll
add
xchg
adc
mov
mov
test
sti
dec
jle
out
sbb
fisttps
mov
stc
push
sub
and
or
hlt
xchg
nop
addr16
outsb
sub
jp
xor
push
test
lea
clc
insb
aam
xchg
gs
lods
popa
jmp
ljmp
outsl
sub
cmp
and
int3
sarb
dec
jmp
fwait
std
sub
outsb
mov
das
es
sbb
mov
and
mov
jb
sub
shrb
xchg
add
xor
out
push
add
sbb
xor
inc
pushf
sbb
mov
test
test
lods
pop
jmp
sti
jecxz
in
dec
rorb
push
xor
movsl
cs
dec
adc
in
out
fst
jg
push
icebp
int3
pop
xchg
adc
add
scas
add
mov
add
incl
xchg
insb
cmp
ror
inc
fcomp
cld
movl
faddl
push
pop
add
pop
inc
sub
jo
shrl
jb
jno
outsb
jns
and
push
push
loope
rcll
pop
ret
cmp
jmp
mov
out
sub
cmp
ja
pop
pop
mov
mov
icebp
pop
dec
add
inc
cmp
push
xchg
mov
outsl
fisttpll
push
pushl
shr
aaa
iret
sahf
jge
cmpsb
scas
xchg
xlat
adc
ret
repnz
add
setnp
cmp
or
fs
sub
divl
xchg
sub
lock
jo
push
insl
int
xchg
outsb
adc
jo,pt
lret
rcrl
fldenv
cmp
lods
xchg
mov
add
push
loopne
pop
xchg
ja
ds
add
pop
inc
lea
std
push
dec
je
cmpsl
sbb
sbb
jnp
leave
pop
dec
rorb
xor
imul
xor
and
int3
mov
sbb
jae
adc
push
pop
xchg
xchg
and
fisubl
cmp
shrb
push
or
out
xor
mov
or
idivb
xchg
pop
mov
std
sti
add
das
fiadds
test
pusha
and
lds
loopne
fdiv
xchg
mov
pop
stc
xchg
data16
push
jbe
int
jg
pop
xchg
cmp
punpcklwd
mov
pop
sbb
push
sbb
adc
hlt
pop
adc
push
ja
or
test
aam
mov
cwtl
sahf
ss
or
jbe
xor
shll
lods
fbstp
and
nop
loope
cli
cmp
es
test
sbb
jle
dec
sbb
gs
into
pop
int3
shlb
test
shl
or
or
sub
pusha
cmc
sub
shl
push
dec
fs
fbstp
cmpsl
shrb
outsl
divl
add
adc
xchg
lods
sub
push
call
sbb
and
sbb
cmpsb
dec
pop
loop
jge
or
inc
hlt
cs
call
xchg
and
nop
and
psubb
push
ja
loopne
fdivl
dec
mov
shlb
packssdw
cli
cmp
xlat
xor
in
lods
ficoms
xor
pop
fnstenv
imul
sub
jnp
xchg
sbb
cmpsl
mov
lret
sub
sar
xor
sbbl
test
and
sbb
orl
test
jmp
pop
cmp
pop
lds
push
ss
mov
pop
ds
adc
cs
sub
imull
lea
pop
mov
loop
test
fsubrp
out
packssdw
cmc
jo
es
call
shlb
pop
out
negb
das
hlt
sub
rclb
lock
shl
roll
out
mov
mov
int3
adc
pop
fbld
push
ret
out
sub
inc
dec
je
cld
je
mov
push
insb
cli
subl
std
cmp
push
add
insl
int3
sbb
arpl
pop
mov
mov
mov
std
mov
add
lcall
jmp
ret
jg
popf
scas
mov
mov
sub
test
jne
dec
or
stos
mov
mov
cwtl
add
daa
or
pop
mov
fisubrl
lret
imul
push
insb
add
insl
lock
add
or
cmp
aas
out
xlat
test
fidivrl
test
roll
adc
loopne
jne
or
lret
mov
xchg
shrb
add
addb
mov
es
rclb
jl
ret
ret
ficoms
pop
pop
sbb
lcall
pop
pop
or
cmpsb
jns
std
jne
flds
mov
into
pop
push
aam
test
push
dec
aas
inc
in
addr16
pusha
shlb
jbe
xorb
orl
cpuid
ss
insb
jmp
out
sbb
scas
add
xchg
fisubs
sub
js
xchg
repnz
fiaddl
loopne
xchg
mov
test
push
mov
pop
adc
xchg
pushl
mov
cltd
int
inc
pop
je
scas
popf
fidivl
cld
ror
or
mov
add
add
add
add
ds
popa
cmp
ftst
stos
ja
push
sbb
xor
ljmp
dec
gs
adc
outsb
inc
sbb
inc
jae
std
pop
xchg
test
hlt
movsb
adc
fwait
aas
cs
sbb
cmp
dec
jecxz
or
mov
sbb
adc
lret
popa
test
xor
adcl
ds
mov
push
movsl
and
jp
out
cltd
sahf
cli
xor
les
enter
add
adc
adc
jmp
inc
inc
mov
dec
lret
imul
cltd
add
outsl
pop
fsubrs
cld
fldenv
shlb
sbb
mov
insl
pop
push
lret
mov
fadd
test
mov
fbstp
pop
sub
xlat
gs
mul
mov
rcrl
mov
aas
push
mov
push
cli
dec
push
js
push
imul
leave
pop
jae
jae
mov
add
and
push
and
filds
insb
lods
into
scas
adc
or
fcomip
inc
in
jge
add
lcallw
mov
pop
xchg
adc
in
outsb
mov
sarl
hlt
cmpsl
lods
arpl
adc
inc
mov
icebp
test
ds
adc
mov
mov
lcall
cwtl
push
aas
outsl
cmp
mov
dec
fwait
mov
push
cld
sub
xchg
sbb
ret
pushf
push
mov
stos
add
pop
add
sarl
in
lret
dec
ficomps
sub
fstp
add
pop
dec
add
mov
mov
orb
xchg
idivl
lods
mov
mov
insl
dec
popa
xor
mov
pop
mov
mov
or
adc
aaa
inc
sarl
pop
jp
jns
popa
test
sub
std
inc
inc
pop
push
xchg
or
ss
cli
cltd
mov
push
out
lahf
push
imul
iret
mov
adc
in
xchg
popf
test
add
dec
inc
call
pop
jl
push
pop
adc
cmp
fildll
inc
jecxz
in
sbb
out
adc
andl
dec
pop
or
ret
mov
popa
jp
insb
in
xchg
imull
jbe
or
out
adc
or
mov
mov
in
add
outsl
xchg
xchg
mull
jl
scas
testl
cs
lods
fistpll
in
mov
xor
dec
mov
mov
loopne
cs
xor
adc
mov
mov
or
or
mov
aad
sti
test
add
fldenv
mov
cli
xchg
push
cmpsb
pop
jo
xor
fldt
inc
push
push
ja
sbbb
fisttpl
sahf
test
sbb
adc
decb
fwait
rclb
mov
js
xor
add
sbb
lods
out
jno
sti
std
lock
daa
inc
jno
enter
cs
mov
test
imull
jno
out
fcomps
cmp
movsl
popf
cld
lds
aas
dec
orl
inc
insl
mov
mov
pop
dec
jmp
lahf
sub
push
pop
xlat
jle
scas
lcall
jl
out
ret
sbb
cmp
mov
pop
popa
jns
repnz
or
movsl
ret
xchg
ja
lret
dec
inc
add
aas
mov
mov
jo
add
add
inc
pop
pusha
sbb
sub
aas
and
mov
dec
mov
int3
mov
loope
cmp
push
pop
lods
in
push
mov
sub
sti
cmpl
mov
fisttps
add
push
jg
push
out
cmp
lcall
addr16
outsb
cmp
shlb
adc
jno
or
repz
in
outsl
add
pop
push
loope
cld
add
adc
in
pop
fldenv
sbb
jg
sub
imul
dec
jmp
sbb
testl
mov
pop
or
inc
push
repz
das
jo,pn
xor
lds
call
lods
lock
push
js
cmp
or
add
dec
sarl
or
add
cs
daa
insb
dec
pop
sbb
ret
or
mov
pop
outsl
repnz
clc
bound
add
xor
pusha
mov
or
insl
test
imul
add
repz
sbb
mov
test
imull
out
jp
ficomps
ja,pn
dec
fcomip
and
sbb
sbb
sub
fs
mov
jg
dec
enter
sub
mov
test
jmp
push
mov
hlt
xor
mov
sub
xchg
int3
or
sahf
out
mov
leave
dec
sub
jge
sub
push
jmp
push
jnp
test
jno
hlt
pushf
hlt
les
mov
test
cld
cmc
out
cmp
xor
jnp
mov
icebp
pusha
or
jae
pop
xchg
inc
ret
rorl
adc
popf
leave
lahf
call
dec
pop
mov
jmp
mul
insb
outsb
mov
out
mov
ficoms
sub
pushf
jno
mov
movsl
sub
sahf
sub
inc
movsb
movsb
xchg
dec
ss
adc
push
shll
hlt
mov
shrb
int3
cmp
mov
cld
lods
outsl
sbb
repnz
fwait
lret
xchg
sub
push
inc
and
lds
xchg
jg
iret
and
xor
mov
loop
mov
sbbb
inc
fldcw
mov
test
sbb
aas
dec
int
shr
jbe
mov
add
movsb
mov
mov
cmp
mov
lea
fwait
in
or
and
pop
pop
sbb
jb
fcompl
xor
lods
push
mov
or
xchg
mov
adc
dec
mov
pop
and
idivl
adc
popa
aam
jb
das
popf
addb
test
mov
mov
mov
add
adc
bound
push
daa
ds
cmp
xchg
and
test
and
roll
fnsave
imul
imul
adc
fsubs
sahf
loope
jae
pop
sub
push
ret
mov
pop
cmp
sub
mov
jle
sub
shlb
data16
ja
repnz
sbb
mov
mov
add
sbb
lret
jb
fs
mov
hlt
lods
out
xor
test
pop
dec
cmpsb
lds
in
push
cmpsb
das
pushf
popf
arpl
sti
fisttpll
stos
hlt
mov
out
es
pop
loope
or
idiv
addr16
and
daa
lret
push
dec
test
xchg
and
and
ja
ljmp
push
lret
add
test
and
pop
cmp
xchg
xor
or
jo
jmp
xor
shr
iret
pop
ljmp
xchg
jl
sub
pop
fsubrs
pushf
cmpsl
jge
movl
std
adc
sar
inc
xchg
sbb
dec
ds
in
insl
add
mov
mov
stos
push
pcmpeqw
scas
xchg
cvtps2pd
stc
xchg
fninit
test
test
xchg
jle
shlb
sub
push
icebp
outsb
jl
push
ffree
cmp
adc
sub
jle
sub
daa
mov
jne
mov
loop
or
insb
adc
xor
cs
scas
loopne
mov
aas
aas
mov
sub
in
dec
cwtl
lahf
fwait
xchg
lret
ljmp
insl
xlat
jl
mov
add
dec
push
jne
repnz
pop
sbb
ret
fwait
inc
jae
or
mov
dec
int3
inc
stos
andl
xchg
push
cmpsb
imul
inc
cmpsb
add
cs
jle
daa
ret
jmp
mov
mov
js
mov
inc
cmp
pop
stc
imul
pop
lods
icebp
mov
icebp
addr16
and
outsb
inc
xor
cld
mov
scas
insl
jmp
cmc
adc
xchg
scas
mov
xor
shll
aaa
into
lods
inc
jnp
pop
or
movsl
mov
int
loop
cmp
pop
mov
xchg
cmc
xchg
outsb
divl
lods
outsb
sbb
mov
fnstcw
mov
push
jecxz
xchg
shrl
pop
mov
push
cs
inc
inc
stos
sbb
and
loope
pushl
mov
insb
loopne
fisttpl
xor
lock
jae
adc
push
rclb
lcall
jnp
inc
shl
aam
lock
push
sub
movsl
push
and
int3
test
mov
xchg
out
cmp
pop
jbe
and
faddl
sub
pusha
fs
test
mov
add
jg
int
addl
lods
cmpsb
jge
lods
push
dec
arpl
mov
aad
cmpl
xchg
push
insl
dec
imul
xchg
push
or
ja
pusha
iret
in
mov
mov
pop
jno
inc
stos
pop
test
call
add
mov
lods
pop
xchg
bound
mov
cli
loopne
jmp
xchg
xor
cltd
aas
sahf
xchg
roll
repnz
arpl
sbb
shrb
xchg
test
lcall
fstpt
jnp
decb
push
jecxz
pop
es
test
pop
fwait
add
dec
in
cmp
out
outsl
push
jge
sahf
or
or
mov
adc
out
adc
aas
movsl
stos
jne
mov
incb
test
xchg
jae
and
mov
popf
pop
je
mov
inc
cwtl
leave
add
push
inc
mov
mov
out
inc
inc
xor
scas
mov
jmp
or
mov
imul
insl
dec
addr16
or
shrb
out
adc
outsl
into
aam
add
xchg
pop
pop
testb
sbb
xchg
mov
int
dec
inc
pop
jne
mov
sub
sbb
lods
pop
hlt
repnz
cmp
sbb
movsb
arpl
and
pushf
aas
gs
out
stc
adc
xor
mov
jb
mov
and
int
push
negl
add
mov
cwtl
push
push
xchg
lock
das
out
insb
xchg
sub
rorb
test
inc
sbb
push
xchg
call
mov
sub
repz
pop
jne
cmp
sbb
push
insb
dec
and
adc
sub
ret
pop
mov
adc
fidivs
daa
xor
pop
insb
ljmp
cmp
adcb
mov
ret
jmp
nop
push
rolb
adc
cmp
xor
aas
sub
into
lcall
scas
inc
pop
aaa
insl
iret
mov
in
inc
into
sbb
and
mov
in
pusha
sahf
sbbb
pop
cli
cmpb
fidivs
stos
mov
sbb
sbb
xchg
fimull
push
dec
call
ljmp
bound
enter
adc
cmp
jp
jns
loop
clc
jnp
pop
cmp
stc
ds
dec
xchg
cmp
pop
ds
add
lods
xchg
cld
fsub
pushf
aad
ret
test
mov
into
inc
inc
cmovae
in
xchg
add
xor
sarb
jmp
or
in
mov
pop
sbb
adc
ljmp
cli
bound
js
stc
icebp
es
pop
mov
ret
cmpsl
inc
pop
mov
out
js
and
push
rcrb
imul
arpl
lock
mov
jecxz
enter
mov
in
jl
and
testb
clc
mov
loope
std
out
dec
dec
and
out
cmp
gs
inc
rcll
movsl
xchg
lods
leave
pop
cmp
lahf
add
xchg
call
mov
inc
popa
cmc
cwtl
shll
or
push
movsl
gs
int3
test
xor
or
outsb
xchg
push
fwait
pop
xor
fwait
movsl
adc
std
pop
popf
fisubl
bound
imull
and
sub
fmul
std
jecxz
call
sti
dec
addr16
data16
inc
pop
mov
shlb
jecxz
andl
push
and
jge
lods
rol
cwtl
inc
lcall
dec
lds
jp
fildl
sbb
lods
imul
push
mov
loop
inc
pop
jae
xor
add
xchg
aas
or
cmpl
pusha
scas
mov
imul
lock
loope
test
xlat
movsl
daa
sar
dec
mov
stc
or
cltd
sbb
and
push
outsb
xorl
ss
mov
movsl
les
pop
xor
mov
int
pop
sub
imul
ficompl
mov
or
pop
lods
sbb
imul
and
pop
rcrl
aas
aad
out
jnp
ret
and
shl
push
or
pushf
push
xchg
scas
nop
jge
cmp
je
jno
ret
xor
fdivrs
xchg
loopne
jns
divl
fistpll
sub
pusha
movsl
cwtl
test
pop
pop
add
mov
push
sahf
cli
ret
gs
sub
ja
into
test
stc
dec
xchg
mov
push
cs
stc
push
adc
mov
les
insl
pop
out
js
scas
push
cltd
lcall
adc
icebp
sub
and
or
scas
ret
movaps
aam
cwtl
mov
sbb
iret
imul
dec
jno
xchg
jl,pt
adc
ds
or
jl
test
xor
mov
xchg
out
pop
ljmp
out
mov
les
fwait
in
insl
mov
inc
mov
jle
leave
mov
clc
cmp
leave
clc
push
xor
push
fs
idivl
mov
mov
add
fisubs
movsl
add
sti
mov
jmp
clc
out
push
dec
xchg
cmp
icebp
cmp
pop
jmp
stos
pop
aas
push
xlat
mov
push
jnp
into
icebp
stos
mov
or
xchg
xor
cmp
int
clc
xor
jge
fcomi
movsb
ja
stos
adc
scas
cmp
mov
pop
cmp
imulb
sbb
pop
sub
and
mov
shll
inc
mov
jl
scas
int
cs
pop
sub
and
nop
push
shlb
cld
outsl
dec
repz
lods
mov
pusha
lahf
orps
mov
mov
mov
adc
movsl
fstl
add
mov
and
add
and
call
icebp
xor
mov
pop
jo
push
mov
iret
cmpsb
daa
adc
faddl
lods
fnsave
test
aaa
push
dec
pop
jle
jns
mov
and
je
js
mov
jecxz
loope
push
push
push
fcmove
add
gs
pushf
nop
js
xor
out
jge
mov
dec
mov
add
shl
xchg
shll
dec
push
scas
orl
add
cmpsb
xchg
and
and
fcomps
and
pop
lahf
push
test
mov
jo
sub
pop
pop
movsl
pop
test
aaa
sub
jno
loope
cmpsl
mov
cmp
dec
lret
sub
subl
sbb
sti
dec
push
leave
jle
and
add
aad
push
movsl
cmp
lcall
push
in
jnp
and
mov
hlt
jecxz
push
ret
clc
fbld
loop
sbb
mov
lock
jb
gs
pop
sub
out
arpl
into
mov
push
dec
insb
pop
je
sub
dec
insb
stos
cmp
jbe
and
data16
fcmovne
ret
enter
add
xor
adc
jle,pt
sub
mov
scas
push
and
mov
sub
in
xchg
push
int3
fadds
lods
push
push
shl
or
aam
mov
dec
jb
push
pusha
scas
lcall
rcrl
sti
std
mov
fstl
inc
movsl
sbb
push
incl
pop
jb
bound
aam
pusha
sub
imul
popf
nop
fcomp
mov
int
pop
sbb
lret
cmp
push
rcl
ds
pusha
ret
icebp
testb
test
imul
fwait
inc
inc
stos
dec
dec
xchg
ja
xchg
sbb
mov
and
lods
shlb
imul
jno
iret
cmc
sbb
imul
add
or
xor
mov
lahf
insl
das
and
out
xor
mov
push
rorb
push
inc
iret
push
jae
push
mov
jecxz
paddd
scas
fsubrp
xor
pop
jae
adc
lret
inc
in
dec
dec
insl
mov
int3
jp
cli
iret
xchg
or
pop
dec
add
and
mov
xor
and
fsubrs
cli
repz
test
popa
sbbb
mov
test
push
mov
test
imul
or
mov
out
addr16
pop
dec
adc
lods
nopl
inc
cmp
xor
popa
cmpsb
adc
xor
xchg
sbb
aad
and
nop
pop
ja
rolb
arpl
inc
jp
stc
push
mov
jmp
pop
mov
add
int
test
sbb
mov
mov
mov
in
pop
lahf
punpcklwd
sub
cltd
cmp
shl
les
cmp
call
sahf
lods
xchg
int3
adc
jno
cmp
pop
inc
call
mov
jno
stos
sahf
push
mov
xor
xchg
movsb
cmp
loop
push
incl
pop
and
lret
loop
jecxz,pn
push
mov
dec
xor
push
push
and
xchg
fmul
xor
inc
daa
adc
lods
add
push
add
inc
jo
ror
scas
lods
xchg
into
fbstp
test
jg
mov
push
cld
neg
sub
mov
jecxz
push
pop
stos
ljmp
lcall
add
lods
cwtl
lret
dec
add
push
xchg
mov
adc
outsl
pop
xor
add
inc
test
lret
jnp
aaa
outsl
dec
and
dec
mov
cmc
sahf
mov
jle
inc
inc
fdivr
xchg
add
fucomi
outsl
sbb
xchg
pop
jecxz
orl
mov
andl
jae
inc
cwtl
jmp
xchg
fmuls
xchg
pop
rclb
push
mov
in
icebp
es
mov
jae
out
aad
lods
sbb
lods
loop
mov
mov
je
insb
stos
inc
and
mov
adc
sbb
daa
ss
dec
pop
and
inc
stc
add
mov
add
cltd
imul
add
adc
ja
dec
test
mov
movsb
divb
xor
call
push
daa
push
repz
cwtl
sub
xchg
dec
mulb
lds
bound
lret
jno
pop
outsb
mov
jge
pop
out
inc
xlat
sti
adc
fildll
xor
xchg
clc
xor
mov
xchg
outsb
mov
shlb
push
cli
and
sbb
fmul
mov
jae
sahf
mov
pop
loope
and
test
xor
mov
movsb
push
add
lret
mov
pop
adc
pop
xchg
lret
popf
cwtl
popa
or
sub
test
test
sahf
mov
ret
pop
je
mov
pop
rolb
aas
jl
mov
cmp
hlt
lock
push
mov
lret
jne
fdivs
cld
mov
jne
mov
sbb
xor
fbld
lea
sahf
xchg
mov
movsb
add
loopne
fs
cld
out
in
bound
ljmp
cmpsb
sbb
in
stos
lods
cmpl
outsl
xlat
adc
scas
dec
add
das
iret
in
in
fs
icebp
jmp
jle
sub
dec
adc
sub
adc
mov
jbe
in
inc
lea
aas
sbb
adc
xorl
adc
mov
xchg
out
ss
xchg
lcall
ja
push
or
sbb
lret
and
enter
lret
movsl
cli
gs
lcall
cs
dec
mov
in
aas
or
ljmp
push
cs
xor
adc
movsb
cmp
and
xchg
sub
mov
push
and
clc
push
dec
mov
adc
mov
dec
add
pop
je
imul
mov
xchg
jns
dec
or
sub
adc
mov
fstl
pushf
and
xchg
imul
enter
xlat
jge
mov
ret
int
ss
xchg
and
or
negl
jb
push
xchg
jp
sub
aaa
sbb
sub
xchg
sbb
notl
xorb
data16
mov
mov
push
push
sub
xchg
pop
dec
pop
mov
ds
ficoml
pop
loop
or
jecxz
mov
out
inc
repz
push
add
mov
lea
push
scas
inc
out
data16
xchg
scas
cmp
je
add
out
dec
sub
push
mov
fwait
sbb
fmull
dec
jns
cmpb
movsb
test
sbb
sbb
adc
es
nop
mov
xchg
sbb
adc
movsl
inc
and
stos
mov
clc
jbe
mov
lods
frstor
push
pop
cwtl
insb
inc
pop
mov
sub
int
rclb
jecxz
stos
gs
roll
jl
add
cmpsl
dec
sbbl
lds
mov
je
sbb
jle
popf
jbe
jge
lret
clc
and
xchg
fimull
nop
mov
es
inc
enter
ljmp
mov
adc
sub
pop
inc
add
fdivr
setp
cli
pop
mov
loopne
jge
jle
or
in
pop
inc
push
in
imul
nop
lea
jb
imul
aad
xorb
mov
mov
mov
push
sbb
repz
inc
cmc
cltd
push
mov
xchg
clc
test
mov
mov
dec
pop
ds
sub
repz
repnz
movsl
inc
leave
push
adc
mov
aaa
lret
push
gs
aam
aad
outsb
jnp
call
mov
out
xor
jbe
xor
mov
inc
mov
loope
mov
repz
pop
mov
negl
sbb
add
or
sbb
jnp
cmc
mov
mov
dec
fidivrs
mov
mov
lcall
pop
mov
cmp
xor
sub
sbb
mov
pushf
in
mov
xor
push
aaa
mov
jb
shrb
adc
jb
lds
jns
imul
inc
fnstcw
push
addr16
ret
sub
fmul
xchg
shll
fwait
push
repnz
enter
push
jg
insl
jp
dec
xchg
mov
push
imul
fidivrs
flds
and
es
or
cmp
push
dec
ret
xor
sbb
repnz
or
dec
inc
pop
ss
push
push
fisttpll
pop
or
bound
inc
negl
pop
inc
pop
stc
lds
inc
xchg
loopne
or
sahf
out
xchg
xchg
stc
gs
push
xchg
hlt
mov
pushl
mov
jle
and
lahf
mov
sarb
xchg
imul
repnz
subl
fcmovnb
xchg
pop
xor
daa
add
jge
cld
xor
das
cmc
mov
adcb
mov
repz
adc
jle
bound
mov
loope
xchg
idivl
in
sbb
xor
in
pop
movsl
pop
je
in
add
cs
sub
pop
mov
fwait
mov
scas
decb
dec
dec
jae
rcl
nop
push
les
jo
add
mov
test
cmpsl
sbb
data16
jecxz
push
xchg
jne
adc
and
in
pop
stos
repnz
xchg
movsb
out
testb
mov
icebp
out
lods
test
jne
xchg
lds
inc
dec
fs
pushf
rclb
fidivs
sub
add
adc
test
pop
lret
sub
gs
orb
fwait
xchg
rcrl
test
popf
cmp
cmp
inc
rol
fnstenv
and
in
and
inc
cmp
loopne
fcmovnu
test
daa
pop
dec
lds
mov
mov
int3
popf
xchg
inc
cld
xor
arpl
pop
popa
mov
pop
mov
inc
cmc
outsb
cmpsl
inc
mov
push
in
clc
adcl
repnz
push
pop
sbb
xchg
bound
and
stc
xor
cmp
test
stos
and
fisttpl
in
jge
dec
pop
mov
jns
sbb
mov
pop
outsl
add
testb
out
fnstcw
mov
sbb
in
insb
or
xor
out
mov
mov
sub
xchg
pop
mov
adcb
lods
dec
jnp
out
adc
cwtl
dec
iret
mov
lahf
shlb
notl
addr16
inc
movsl
fiaddl
mov
push
ljmp
mov
xor
cmp
lds
mov
sbb
sub
cmpsl
lret
and
fwait
idivl
mov
das
mov
stos
pop
fisubl
jbe
xor
aad
cs
mov
enter
fwait
loop
push
enter
mov
jbe
sub
shl
sarb
in
jp
sbb
jno
fiadds
aad
pop
cli
xlat
jg
out
jbe
xor
mov
icebp
loop
or
jge
inc
divb
adc
add
hlt
decl
mov
lods
sbb
hlt
mov
fucomi
mov
cld
in
movsb
pop
stc
test
lret
movsl
mov
pop
jne
adc
lds
int3
enter
lods
push
jnp
in
shl
lcall
jb
dec
cmp
lock
xchg
icebp
loope
fisttpl
mov
inc
lock
lock
std
xchg
sub
addb
push
adc
ljmp
push
lret
mov
or
fsubp
pop
sbb
add
add
dec
push
jle
cmp
mulb
icebp
cld
rolb
inc
adc
cld
cmp
pusha
jmp
movsb
xor
test
movsb
sbb
pop
leave
and
cltd
push
test
loop
dec
xchg
pop
sub
hlt
push
push
xchg
popf
loopne
push
xchg
xlat
mov
xchg
sbb
add
push
inc
outsl
or
mov
loopne
mov
fwait
sbb
adc
call
insb
shlb
ljmp
sbb
mov
fs
loop
inc
add
int3
btrl
sub
mov
jmp
leave
call
inc
imul
adc
movsb
inc
pop
enter
in
test
mov
jge
add
js
arpl
nop
push
shr
leave
lret
or
jg
cwtl
and
push
pop
dec
call
and
ja
test
jae
in
pop
es
jae
push
fisttpll
cmp
dec
and
mov
clc
or
add
ja
jle
dec
sbb
das
dec
push
jbe
fcomps
xchg
sahf
push
icebp
jecxz
push
sub
inc
and
push
sbb
add
fst
jae
pop
hlt
pop
lods
jno
hlt
mov
mov
push
push
ficoml
out
les
iret
mov
roll
jl
or
in
aaa
and
gs
jle
mov
xor
test
repz
xor
jmp
or
jge
mov
cmp
arpl
sbb
sti
xor
fwait
fwait
mov
mov
fwait
imul
push
pop
cmc
inc
fcoms
inc
cmpsb
loope
push
push
aam
orl
xor
mov
pop
popa
fwait
lods
nop
jns
xchg
rol
jmp
arpl
pop
inc
jns
add
pop
inc
out
dec
xchg
ja
daa
pushf
cmp
add
push
mov
add
adc
sbb
testl
or
jp
add
cmp
lock
jno
mov
xchg
dec
push
xlat
sub
mov
pop
jb
inc
frstor
bound
ret
cs
js
repnz
push
lods
aas
jne
outsl
sarb
ja
push
in
push
icebp
jmp
sbb
xor
sub
xorb
int
fsubr
mov
stos
sbb
or
stos
and
jecxz
jns
and
cmp
dec
xchg
sar
pop
subb
outsb
enter
mov
adc
push
xchg
outsb
outsb
xchg
push
sbb
pusha
push
enter
ss
pop
push
mov
repz
fbld
push
in
xor
cld
stos
adc
pop
rclb
xor
cmp
test
xchg
nop
fisubs
int3
sti
sbb
fisubrl
mov
or
pop
stos
mov
mov
out
pop
dec
or
lcall
int
or
xchg
fisubl
popa
lcall
sbb
in
push
popf
cmp
or
dec
push
pop
mov
adc
adc
inc
dec
adc
jae
jge
cmp
cmp
imul
and
and
dec
mov
ljmp
pusha
repz
pop
scas
push
mov
jge
scas
or
jns
xor
das
hlt
shrl
lahf
leave
cmc
fsts
scas
push
jnp
xchg
push
into
loopne
mov
jmp
jmp
jle
lea
or
sti
sti
mov
or
jne
lock
lea
xor
scas
xor
add
dec
adc
xor
mov
inc
popf
push
and
jecxz
or
pop
or
push
jge
shll
jo
daa
jo
or
pushf
push
push
aas
outsl
push
mov
xchg
pmullw
daa
push
xor
sub
xor
inc
lods
and
push
arpl
jbe
fs
pusha
inc
mov
or
sub
sub
testl
lock
rcrl
js
faddl
fmuls
or
fstp
fwait
xchg
mov
repnz
test
dec
inc
aam
sti
jl
jae
mulb
or
xchg
push
hlt
mov
cmpsl
cmpsl
loop
sub
jne
mov
rcrl
and
xchg
mov
jne
push
push
pop
imul
stos
pop
subl
cld
adc
inc
mov
xor
outsl
pusha
loopne
xchg
aad
sub
cmpsl
jmp
movsb
or
pop
inc
lods
mov
xchg
jb
in
cmp
mov
dec
adc
mov
js
loopne
leave
mov
mov
ljmp
aam
lcall
cmp
fcmovnbe
fldcw
mov
rorl
arpl
jbe
loope
lcall
cwtl
pop
dec
dec
cwtl
sahf
test
loop
push
or
or
les
dec
jge
mov
xor
push
out
in
inc
adc
stos
adc
inc
push
mov
xchg
push
pop
hlt
mov
les
dec
adc
jecxz
pusha
xchg
gs
test
jg
mov
lret
and
xchg
adc
jmp
shll
fbstp
int
and
notl
in
shl
lcall
inc
hlt
jle
adc
test
movsl
lds
xchg
lahf
add
or
pop
sahf
dec
scas
dec
sbb
ret
bound
pop
pop
dec
das
call
fnstenv
insl
push
mov
popa
push
je
sbb
jl
dec
mov
test
aad
imul
ja
dec
repnz
stos
mov
pop
xor
andl
iret
push
insl
in
in
adc
pop
in
pop
out
enter
pop
fsubr
mov
xchg
dec
and
xor
mov
xchg
jecxz
pusha
fucomi
xor
cmp
loop
fstl
call
inc
push
lret
ret
loopne
test
push
or
pop
cltd
into
sarl
shl
push
add
rolb
jl
push
xchg
int3
adc
rolb
jl
popa
mov
imul
pop
xchg
ja
adc
ds
cmp
daa
adc
push
loopne
xchg
clc
pop
push
ret
cs
incb
imul
cs
xchg
push
ficoml
mov
mov
leave
loop
sub
fs
adc
movsl
rorl
sbb
mov
fistps
shrb
cltd
imul
addr16
ret
cmp
in
loope
xchg
xchg
cld
cmp
ljmp
mov
imul
daa
scas
add
jp
or
xchg
push
dec
add
adc
jp
iret
inc
fcompl
sbb
fstpl
pop
dec
adc
fcoms
add
divb
ljmp
mov
push
loop
int3
into
test
fldt
insl
dec
xor
pop
or
mov
sar
mov
aaa
int3
sbb
fcomps
rclb
testb
lahf
and
sbb
add
adc
arpl
insb
lock
cmp
inc
fld
adc
pop
ja
arpl
jg
shll
pop
icebp
into
push
loop
jno
xchg
idiv
sub
pop
jae
mov
pop
fisttpll
sbb
popf
and
mov
adc
push
push
or
mov
push
add
and
fsts
xchg
out
adcl
mov
adc
jp
inc
fsubs
lea
jb
sti
xchg
cs
fcmovb
dec
stc
shrb
xor
pop
xchg
dec
rclb
mov
iret
mov
scas
cmp
push
mov
mov
imul
pmovmskb
inc
imul
push
adc
jne
cmp
icebp
fldl
repnz
fadds
ljmp
sub
in
xchg
mov
cmp
fwait
in
popa
hlt
cmp
pop
or
add
pop
mov
push
addl
clc
lods
pop
cwtl
lret
fs
mov
movsl
insl
push
xor
mov
mov
dec
mov
subl
imul
out
pop
inc
jle
mov
cmpsb
cmp
js
and
xor
and
or
dec
push
dec
int
cmp
inc
imul
and
mov
pop
xchg
pop
rcl
test
into
lret
push
out
sbb
pop
lret
xchg
jle
sbb
dec
mov
pop
jp
ljmp
xor
aad
push
push
jne
outsl
sbb
stos
pop
repnz
dec
cli
inc
sbb
inc
adc
loope
jns
in
inc
jmp
aaa
adc
push
mov
push
push
bound
jmp
aaa
dec
xchg
mov
mul
xor
jae
jne
mov
fisttpll
mov
fildl
cmc
inc
push
ds
es
cmp
cmp
in
pop
jmp
and
leave
addb
add
adc
xor
iret
push
mov
paddusw
es
lods
sub
outsb
aaa
dec
mov
lcall
mov
xchg
scas
mov
xor
lds
inc
jp
enter
mov
pop
jg
cmpsb
clc
sub
cmpb
pop
mov
into
stos
lods
test
aaa
mov
mov
dec
subl
stos
in
jno
sub
push
mov
rcll
cltd
es
mov
mov
out
icebp
and
mov
mov
call
push
mov
mov
pop
and
jbe
loope
cli
pop
shrb
jp
pop
fisubrl
in
and
in
xchg
push
sbb
add
xorl
test
iret
push
jp
iret
das
insl
inc
adc
sbb
int3
leave
add
inc
fimull
out
cltd
int
xchg
xchg
dec
decl
sti
sbb
negl
push
fbstp
jge
sub
sahf
and
pop
sbb
push
push
push
jno
loop
xor
popa
fidivl
shrb
inc
cmc
iret
lahf
and
inc
cs
jno
in
or
out
mov
into
das
add
mov
xchg
mov
jno
loope
adc
cmp
jmp
mov
add
sub
or
xor
inc
dec
cmpsb
cs
add
arpl
shll
jge
idivb
and
pop
loopne
dec
lcall
fcmovnb
cli
fisubrl
iret
scas
and
sbb
cmpsl
les
and
fldl
call
sub
faddl
and
sbb
jecxz
mov
imulb
hlt
out
fucom
arpl
loope
ret
mov
dec
les
shrl
jb
mov
pushf
cmp
cld
mov
pusha
sbb
sub
out
mov
sbb
popa
push
mov
stc
adc
jns
mov
scas
mov
iret
xchg
loopne
cmpsb
notl
fnstcw
js
hlt
pop
je
xor
out
test
add
or
les
mov
add
pop
idiv
in
or
ss
jecxz
xor
and
popa
sub
adc
fdivl
and
mov
mov
inc
aam
dec
xchg
test
push
int
imul
pop
jno
cltd
int3
adc
insl
pop
call
in
sub
nop
insl
aam
jnp
inc
int
fdivr
dec
jns
add
lret
dec
xor
shlb
es
jmp
sub
icebp
lock
out
xchg
pop
addr16
jle
cwtl
adc
cmc
push
popl
sbbl
jle
test
and
jl
dec
jle
sbb
dec
mov
adc
mov
in
jnp
jge
add
dec
jnp
imul
adc
pushl
sbb
inc
mov
mov
mull
sbb
movsb
add
js
arpl
mov
std
sub
sahf
or
jne
xor
gs
jl
repz
mov
ret
shr
sbb
and
fcomip
popa
mov
fidivrs
and
fwait
sub
push
std
push
inc
xchg
mov
int3
cmpsb
mov
mov
mov
in
mov
test
jns
xor
mov
add
sysexit
stc
int3
inc
add
jno
mov
or
insl
add
outsb
and
sbb
popa
lds
inc
jg
in
jmp
scas
imul
sub
mov
enter
dec
movsl
sub
lods
ds
mov
xchg
and
sahf
icebp
rcr
sbb
je
mov
repz
and
sbb
fdivrs
sahf
jecxz
push
ljmp
lahf
mov
lods
pop
bound
lods
sub
jns
lds
mov
call
mov
out
repnz
test
sti
push
push
iret
ja
sub
pop
out
scas
in
jecxz
mov
jp
mov
out
test
stc
add
test
and
icebp
cs
cmp
add
sbb
pop
repz
or
stos
sar
aaa
xor
and
mov
loop
daa
shll
in
xor
push
sbb
sahf
xor
mov
pop
pop
or
mov
adc
add
adc
mov
loop
jo
jp
das
arpl
mov
and
nop
jb
add
cmp
gs
mov
out
aaa
into
in
xchg
inc
mov
sub
mov
xchg
xlat
pop
inc
or
fmul
out
ret
sahf
and
out
jae
outsb
outsl
dec
data16
mov
pop
pop
out
icebp
pop
lcall
scas
xchg
mov
push
out
pop
adc
xor
add
imul
pop
repz
cmpsl
int
xor
fdivrs
jp
arpl
adc
cmc
ret
sahf
sbb
jnp
or
xchg
push
out
adc
or
in
repz
jae
xor
cmpsb
jecxz
iret
cmp
mov
cmp
es
lock
inc
cld
fisttpll
sub
mov
and
sbb
mov
mov
inc
addl
xchg
cmp
sub
add
mov
xchg
popa
inc
dec
ret
or
jecxz
jl
inc
dec
call
dec
xor
dec
cs
movsl
sub
inc
mov
xor
in
pop
mov
cmp
inc
jbe
sub
push
loopne
in
sub
movsb
mov
aaa
bnd
xchg
ret
gs
gs
or
inc
pop
adc
or
mov
inc
inc
inc
jo
faddl
std
push
xchg
test
movsl
and
vandnps
ror
cltd
mov
test
inc
jle
loope
xchg
lea
fs
lret
sub
pop
cwtl
filds
pop
stos
dec
sub
imul
adc
sti
push
xchg
leave
fistpll
bound
inc
push
lcall
es
sub
adc
push
ret
mov
adc
xchg
outsl
test
data16
adc
stos
push
les
mov
mov
pop
xor
xchg
and
pop
iret
out
push
xor
xlat
mov
js
xor
pop
and
jmp
pop
xor
rcll
lcall
bound
inc
cld
mov
mov
out
xchg
mov
sbb
int
mov
fwait
add
mov
lret
fucomip
adc
dec
mov
mov
fcoml
inc
ljmp
xchg
subb
xor
je
mov
fisttpll
popf
push
or
mov
popf
addr16
xor
bound
addr16
xlat
in
js
xor
sbb
sub
and
aaa
sarl
push
and
pop
inc
add
arpl
mov
icebp
xor
push
movsb
movsl
cmp
scas
popf
dec
in
sbb
and
mov
xchg
push
and
fnstcw
rep
inc
mov
movlps
inc
cmp
shrl
push
push
dec
test
hlt
ret
es
mov
imul
push
pop
nop
pushl
add
andb
push
scas
scas
and
cmc
mov
sbbl
aad
sub
jno
xchg
xor
les
hlt
add
cmp
mov
mov
dec
jmp
scas
stos
sbb
or
push
add
or
mov
mov
mov
leave
shlb
pop
mov
sub
jge,pn
and
ljmp
mov
mov
xchg
ljmp
gs
stos
insl
andb
enter
out
sbb
xor
mov
subb
add
ret
scas
lods
dec
push
add
lock
sarl
mov
or
or
mov
loop
nop
add
sahf
dec
test
lds
outsb
aad
mov
adc
jl
or
cld
or
jp
rorl
add
aam
stos
mov
xor
sbb
pushf
mov
pop
xchg
out
and
mov
subb
push
xchg
jo
into
jmp
icebp
scas
loope
das
push
jg
or
mov
cs
pop
jnp,pn
add
jb
cltd
jle
adcb
cmp
pop
enter
fcomps
jecxz
icebp
and
mov
js
dec
outsl
insl
call
adc
push
cs
pop
dec
test
call
in
dec
dec
bound
or
and
popf
push
ret
std
and
cwtl
loope
xor
scas
fistpl
push
or
out
mov
xchg
leave
es
test
lock
movsb
lock
int
in
div
std
mov
lods
sahf
cmpsl
sti
mov
test
shrb
aas
xchg
lds
pop
in
push
cmp
cmp
jo
dec
mov
or
and
repz
gs
adc
test
clc
cwtl
stc
and
aam
and
inc
cmp
dec
imul
push
jae
inc
dec
in
bound
inc
scas
test
in
push
sub
sub
mov
fdiv
inc
ljmp
adc
inc
ds
repz
push
dec
lods
mov
loope
andb
fsubrl
cmpsl
or
outsl
fcompl
fsts
jg
lods
xor
sub
into
cmpl
shlb
cli
sahf
or
sub
mov
scas
ljmp
daa
cmp
fsubp
mov
cmp
pop
imul
xchg
je
adc
in
inc
push
sub
jg
xor
fcmovu
sbb
jp
push
mov
sbb
jns
and
cmp
sub
mov
mov
and
adc
push
test
pop
mov
inc
mov
dec
xchg
popf
jb
outsb
mov
scas
je
adc
popf
fwait
jp
mov
nop
pop
cltd
fstpl
out
lret
mov
pop
mov
cwtl
push
mov
xor
aad
es
cli
pop
insb
sub
std
mov
sub
dec
dec
ljmp
and
or
add
push
pusha
int3
call
aad
gs
lret
mov
mov
add
imul
addr16
lcall
mov
sub
cmp
les
and
loope
cltd
lods
stc
sbb
leave
jne
or
mov
mov
cmc
rorb
mov
data16
mov
out
sbb
dec
mov
mov
push
xchg
mov
addr16
pop
hlt
stc
mov
ljmp
xchg
sub
sbb
outsb
cmp
sbb
arpl
sarl
out
lea
xor
aam
js
ja
int3
call
shll
sti
rol
mov
or
mov
cmp
sub
sbb
dec
pop
popa
jmp
insl
and
sahf
xor
or
mov
push
sbb
lea
mov
test
pop
nop
daa
pop
xchg
movsl
lds
and
sub
pop
dec
fadds
fnsave
cltd
in
dec
xchg
andl
outsb
add
ss
sub
jge
dec
mov
mov
nop
push
out
fdivr
push
in
mov
mov
xor
pop
fwait
andl
in
test
add
or
loop
pusha
hlt
mov
dec
jge
xchg
in
mov
xor
adc
jns
inc
pushf
push
push
cmp
imul
pop
mov
filds
test
sbb
xor
inc
cmp
pop
ss
push
or
mov
cld
jae
loope
push
out
and
push
jle
lahf
sub
testl
sbb
jno
push
mov
jecxz
cs
ja,pt
mov
cwtl
data16
in
add
mov
xor
sbb
lea
pusha
je
mov
lds
mov
sahf
or
gs
fildl
mov
mov
inc
call
inc
clc
and
aad
stos
push
jbe
add
or
pop
lret
subl
dec
ljmp
add
mov
mov
mov
lret
rcr
mov
cli
push
or
inc
iret
jne
mov
mov
and
clc
and
cmc
dec
mov
call
sbb
ss
rsqrtps
lods
shl
add
enter
scas
lods
adc
jne
jnp
jns
shlb
pop
inc
je
cmpsl
xchg
pop
dec
inc
out
adc
add
movsb
adc
push
arpl
mov
lea
xchg
jg
sahf
adc
add
addl
dec
push
mov
or
and
dec
mov
pop
jno
movsl
jmp
xchg
jg
mov
add
into
aam
roll
or
and
mov
dec
mov
int
subb
sbb
xor
movsb
inc
and
pusha
dec
call
lea
fadds
icebp
cmp
stos
push
aas
loope
daa
push
cmp
lcall
mov
mov
fisttpl
cltd
popa
mov
sub
cmpsb
sub
ss
std
sub
xchg
xor
sub
es
or
pop
cli
mov
cmc
push
jne
xchg
add
pop
xchg
and
jle
ljmp
cmp
mov
add
ss
das
es
insl
pop
rcll
or
and
mov
mov
cmp
jl
cmc
mov
fdecstp
fldenv
mov
cld
xor
ss
test
pop
mov
iret
jmp
je
in
rclb
insl
cli
jge
idivb
jle
cmp
sbb
push
mov
push
add
mov
inc
icebp
or
mov
push
mov
data16
sbb
dec
mov
test
pop
scas
jp
sbb
iret
mov
cwtl
push
bound
movsb
loop
leave
insl
pop
ret
jg
and
dec
mov
jmp
lcall
mov
rol
bound
addl
out
adc
pop
fcmovne
cmpsb
loop
clc
mov
fbstp
mov
les
test
and
mov
imul
mov
adc
orl
mov
push
push
cmp
push
push
in
dec
mov
sahf
pop
arpl
cmp
xchg
push
or
jg
daa
mov
sub
enter
push
aam
cmp
jmp
add
xchg
add
pop
mov
int
cmp
int
jne
dec
and
dec
and
pop
in
or
filds
std
popa
pushf
les
add
jge
cwtl
in
push
out
outsb
in
es
sub
push
aam
pop
scas
test
lds
das
sub
and
repz
fwait
dec
and
rcll
pop
jge
mov
jmp
push
nop
xchg
aas
and
add
jmp
pop
push
mov
xor
adc
sbb
xchg
xchg
adc
jns,pt
dec
pop
and
xorl
out
xor
popf
call
xchg
push
mov
notl
inc
and
jecxz
xchg
clc
jns
dec
xorl
xor
add
pop
push
push
xor
gs
push
dec
popa
aam
mov
and
push
push
imul
fwait
loopne
or
adc
mov
inc
mov
jae
shlb
mov
push
jb
imul
dec
sub
test
sub
shll
adc
insb
lock
inc
leave
fcmove
pop
mov
xchg
ds
shll
inc
mov
mov
inc
repnz
or
scas
jg
inc
sti
lods
pop
add
je
mov
xlat
scas
sub
xor
xor
add
repnz
sahf
pop
mov
data16
adc
arpl
mov
fmull
jns
sbb
xchg
pop
push
push
xchg
adc
jae
scas
in
add
adc
push
cmpl
add
cld
pushf
jecxz
out
lea
dec
ljmp
xchg
scas
lods
mov
nop
sub
mov
mov
ljmp
scas
inc
popa
pop
sub
rorl
imul
pusha
sar
enter
mov
push
ja
cmp
test
fisubl
icebp
dec
into
pop
aam
ljmp
rolb
mov
inc
aad
test
pop
nop
stc
mov
and
sti
mov
push
dec
aad
int3
jno
or
jp
and
xchg
pop
das
adc
adcl
dec
cmpb
mov
and
insl
mov
cmpsl
mov
aas
lds
push
es
mov
adc
xchg
jb
nop
jno
lcall
cmp
xorb
adc
stc
xchg
leave
loope
cltd
and
add
popa
in
repz
data16
sahf
mov
pop
mov
jp
addb
xor
repz
push
pop
inc
lret
push
clc
jmp
loopne
imul
cwtl
adcb
dec
repz
xchg
cmpsl
mov
dec
or
subl
inc
lods
dec
xchg
es
mov
addr16
repz
cmc
xchg
mov
pop
mov
or
scas
jl
xlat
adc
dec
xchg
sbb
lcall
lret
div
cmovl
test
pusha
sub
bound
call
cmp
jne
insb
and
adc
imul
ret
adc
push
dec
ret
sbb
pop
xchg
add
popf
orl
dec
sbb
add
outsb
cld
pop
mov
lret
insl
stos
pop
push
sbb
or
call
stos
loop
sbb
cmp
lret
cwtl
popf
in
ret
pushf
clc
jns
scas
mov
pop
in
jg
sub
mov
push
fwait
imul
lahf
and
es
jno
cld
out
mov
fs
xchg
movsb
nop
insl
or
dec
rcrb
jmp
lcall
or
pop
cmp
and
imul
or
jge
fwait
and
fiaddl
fdivr
std
mov
rorb
mov
rcrb
das
lea
or
pop
rclb
jmp
inc
sbb
leave
or
jb
loopne
pop
dec
cmp
shlb
fldcw
add
mov
xor
sbbb
out
outsb
push
in
ja
add
pop
cmpsb
hlt
push
sbb
cmp
std
inc
pop
movsb
movsb
lahf
fs
and
popf
into
jo
dec
addl
test
sarl
mov
or
and
jns
mov
pop
adc
orl
fldenv
icebp
xchg
jne
idivl
out
pusha
aam
push
xchg
lds
out
into
out
and
mov
dec
mov
int3
or
mov
inc
adcl
push
pop
xchg
lahf
and
mov
aaa
xchg
sbb
cmpsl
test
xchg
and
ja
nop
xorb
stc
cmpsl
shlb
sahf
mov
sbb
movl
divb
cmp
push
rep
mov
xchg
add
sbb
adc
add
into
lcall
pop
test
sti
lahf
add
iret
fwait
and
movsb
test
fs
mov
mov
fidivs
out
fadds
sbb
or
stos
push
push
cmp
cli
sahf
test
xor
push
mov
mov
aaa
mov
aad
scas
sbb
dec
mov
push
push
adc
fcom
xor
in
aam
in
out
add
dec
ljmp
fs
pop
and
movsb
sti
xchg
cs
add
insb
dec
loopne
xchg
aad
movsl
pushf
jmp
pop
add
cwtl
addb
mov
in
test
in
repz
daa
out
repz
and
aad
fwait
cmp
sub
testb
push
dec
out
lret
cmp
xor
xor
movsl
xor
sub
pusha
pop
push
arpl
fsubrs
or
jle
sbb
cmp
jl
dec
xchg
inc
inc
movsb
imul
repz
push
outsl
jge
adcb
sub
ds
dec
shll
adc
push
ja
inc
incb
push
jmp
pop
jo
fwait
ud0
fadd
setl
aas
adc
xchg
or
xor
repnz
jno
mov
dec
adc
or
pop
push
cmp
mov
mov
pop
and
add
mov
push
inc
scas
dec
imul
sbb
dec
sub
xchg
mov
stos
out
xor
xchg
scas
inc
dec
loop
or
fcmovu
fidivrs
adc
pop
mov
adc
aad
mov
aam
and
mov
and
cmovae
sbb
add
neg
repz
std
fnstcw
mov
adc
lahf
jnp
push
cmp
cmp
and
clc
les
mov
rorb
jo
arpl
lret
push
sti
push
xchg
cltd
sub
sahf
out
int
xchg
int
shlb
and
fcomip
mov
sbb
sub
pop
ljmp
bound
mov
xchg
rclb
sarb
ljmp
repz
or
roll
stc
dec
mov
sub
stos
inc
ljmp
mov
popa
lods
shr
popa
in
and
sbb
mov
push
test
pop
dec
sahf
rcrl
push
popf
imul
adc
sub
aas
rcl
test
adc
stc
add
cs
xchg
or
cmc
pop
clc
sbb
xchg
mov
fwait
or
lcall
fldt
imul
and
jbe
cmp
and
daa
xlat
enter
js
notl
or
dec
cmp
js
lds
popf
push
xchg
inc
lcall
repz
pop
rorb
jge
mov
pop
mov
cld
fbstp
pushf
into
lcall
xor
xchg
xor
in
out
or
mov
aas
and
push
lods
pusha
cmp
ss
xor
pop
inc
sarl
lock
mov
das
cmp
xor
cmp
jno
in
xchg
jo
inc
movsb
ret
call
cmpw
or
scas
pop
adc
aad
lods
push
insb
mov
scas
loope
jno
lock
adc
xchg
pcmpeqw
mov
inc
push
popf
inc
movl
adc
shlb
test
int3
fldt
dec
xchg
mov
call
push
dec
dec
popa
lahf
inc
popf
pushf
and
pop
mov
push
ficomps
aas
sbb
push
pop
sti
enter
jle
adc
lret
mov
mov
loope
inc
mov
mov
dec
dec
divl
dec
ds
js
adc
lods
in
jp
dec
xlat
loope
sub
push
or
mov
sahf
orb
add
outsl
pop
lods
push
and
mov
negl
add
popa
sub
push
jl
inc
mov
mov
mov
cmpsl
push
lock
in
cmpsb
test
adc
or
sbb
adc
pop
aam
dec
bound
ficoml
mov
lods
data16
push
mov
or
mov
jg
hlt
cmp
or
imul
dec
push
inc
je
xchg
fdivs
push
cld
jo
mov
push
and
bound
movsl
dec
cwtl
pop
iret
or
cmp
divb
mov
cmpb
push
and
ret
mov
in
push
stc
dec
imul
pushf
cmpsb
xchg
mov
push
push
iret
mov
sub
imul
aad
jno
lahf
adc
addb
inc
mov
push
or
popa
inc
mov
jbe
mov
sub
jo
insl
lods
mov
jnp
jg
ljmp
out
jecxz
adc
lahf
stc
idivl
gs
jno
dec
out
loope
pop
sti
adc
add
mov
push
fcmovnb
pop
push
pop
fwait
push
sub
stc
mov
or
call
push
mov
dec
shl
dec
jo
adc
xor
mov
les
cltd
je
sub
push
negb
fisubl
mov
hlt
int
sub
jo
xchg
jae
mov
fadd
notb
pop
mov
xor
insl
aas
mov
cmc
jno
lea
pop
inc
clc
xlat
push
mov
push
mov
loopne
into
xchg
fnsave
jecxz
lahf
mov
mov
mov
jge
fsubl
leave
in
arpl
jo
inc
xchg
sarb
mov
into
out
push
out
cmc
stc
test
bound
lods
mov
imul
lret
jo
repz
push
mov
xor
adc
scas
mov
in
test
adc
pop
push
incl
das
loope
cmp
mov
mov
fldcw
fmull
addr16
stc
and
frstor
into
xchg
je
pop
cli
stc
ja
push
dec
das
mov
sub
pusha
xchg
scas
nop
arpl
pop
sti
loop
fsubp
test
loopne
push
jecxz
and
lret
fs
push
mov
sarb
lds
add
xchg
sbb
out
dec
xorb
push
shlb
lods
aad
ror
ja
cmp
lcall
sbb
mov
sub
dec
cmp
lods
mov
scas
je
lods
and
outsl
test
cmp
adc
je
fistl
sbb
outsl
dec
mov
lret
rcr
xlat
fldenv
pop
jno
mov
sbb
xchg
mov
xor
mov
ja
lret
add
xchg
jl
es
pop
adc
and
add
xor
cmp
cmp
inc
loop
inc
movsl
dec
clc
jo
sbb
out
push
repz
stc
dec
cmp
jle
mov
imul
loopne
mov
xchg
test
inc
inc
adc
add
sub
mov
xchg
jb
pop
lds
cli
jle
mov
push
fwait
xor
leave
mov
rorb
test
addr16
pop
push
icebp
dec
pop
pop
icebp
xor
mov
push
or
insb
push
adc
lahf
and
cmpl
adc
fnstenv
inc
cmp
sbb
subb
cmpsb
test
out
sub
sub
loope
dec
inc
xor
popa
cmovno
insb
push
mov
xchg
fadd
stc
inc
jle
je
je
adc
andb
dec
or
pop
and
and
sbb
lea
out
add
jmp
sub
adc
in
pop
subb
sub
lcall
adc
pop
inc
add
insb
dec
lret
cld
xor
and
outsl
subl
mov
push
iret
inc
sbb
and
fcoms
out
data16
loope
fsubrl
mov
and
jmp
insb
push
aam
mov
xorb
imul
and
adc
and
insl
leave
and
push
dec
and
call
test
pop
lods
and
and
jge
add
lods
rorb
data16
push
dec
rorb
add
lret
add
aas
cmp
mov
and
in
jle
mov
jecxz
mov
shrl
shlb
je
mov
add
fwait
cmp
loopne
jg
test
rcr
mov
rolb
mov
adc
aad
sub
or
push
push
cwtl
push
xor
loop
xor
dec
scas
mov
dec
push
popa
jp
imul
pop
shrl
jp
dec
inc
inc
jl
test
jae
pop
jl
je
jecxz
xor
in
arpl
inc
enter
inc
jge
xor
cld
mov
int3
add
mov
xchg
lret
mov
sbb
cmp
fistps
rcr
cmp
pushf
sbb
mov
cmc
out
iret
inc
clc
and
cmc
xor
ret
imul
leave
loopne
pop
adcb
cwtl
add
rclb
ss
stc
stos
pop
sbb
jle
outsb
mov
iret
dec
cmp
aaa
sub
cmpl
jne
ds
add
jns
clc
push
push
jge
lret
or
repz
jecxz
push
lods
add
and
lock
test
xchg
cmp
insl
stc
mov
push
xchg
sbb
fidivs
add
jl
push
aaa
call
push
call
xchg
cmpsl
outsb
xor
mov
dec
stos
hlt
js
insb
mov
pop
iret
je
ljmp
mov
popf
mov
push
pop
pop
pop
movsl
leave
mov
inc
mov
push
jecxz
outsb
mov
das
fbstp
add
add
hlt
xor
or
pop
aad
mov
mov
jnp
sub
inc
jge
stos
ss
ficomps
ret
xchg
lret
enter
push
xor
jnp
jno
das
jne
lods
cmc
lods
cltd
aam
mov
clc
push
and
jle
leave
inc
gs
stc
int
fdivrs
push
rclb
cwtl
adc
adc
nop
scas
dec
cmp
xchg
inc
push
pop
ss
mov
enter
mov
xchg
cmp
inc
negl
adc
repz
sub
cmp
push
hlt
mov
or
fwait
mov
lods
out
push
ljmp
sub
jg
cmc
mov
or
xlat
xor
movsl
pop
shlb
cli
loope
cmpsl
xchg
sbb
cmpsl
test
xchg
loopne
xor
ds
push
mov
push
mov
sti
cmp
mov
and
adc
xchg
call
rcrb
and
stos
rolb
loop
sbb
jo
jns
inc
in
sub
sub
repnz
lock
jg
sub
push
rolb
in
cmp
ret
jne
adc
push
insl
sar
lcall
pusha
stc
mov
inc
mov
insb
xor
mov
ja
xor
fcomps
mov
inc
mov
pusha
adc
push
jmp
inc
jo
lods
add
dec
and
xchg
jl
jge
jle
cli
sti
je
sub
ret
mov
sub
leave
idivb
jne
jl
notb
in
add
xor
idiv
mov
dec
mov
aaa
incl
sbb
mov
cmc
xor
cltd
mov
or
sub
scas
inc
fsubrs
or
imul
addb
orb
cmp
mov
and
jns
fsubrs
xchg
mov
lret
push
dec
or
jle
dec
or
or
pop
pop
test
xchg
push
pop
xchg
mov
insb
orl
push
out
adc
and
inc
dec
negl
adc
sub
popf
lods
fidivrs
and
mov
mov
xchg
xor
int3
enter
mov
andb
les
into
mov
cld
push
mov
mov
and
out
outsb
push
fadd
movsb
fwait
out
mov
stos
jmp
call
lret
xchg
push
lcall
dec
xor
or
jbe
xor
out
sti
aas
mov
int
or
jecxz
dec
or
pop
cmp
into
in
or
push
adc
or
sub
fistps
push
nop
scas
or
fs
cld
sub
inc
es
data16
mov
sub
inc
cmpsb
add
jge
subl
sub
daa
adc
stc
enter
nop
and
jb
cmpsb
xor
aam
sahf
int3
test
jmp
pop
cmp
ror
xchg
sub
sahf
mov
data16
repnz
out
xor
fbstp
or
sbbb
xchg
into
sahf
lock
push
imul
sarl
mov
pop
enter
mov
rorl
sar
push
dec
imul
and
or
loopne
sti
mull
loop
fs
mov
lods
fsubrl
scas
push
add
xchg
dec
cmc
inc
xor
rclb
aam
sub
mov
push
jge
jno
mov
negl
adc
jle
sub
adc
cmp
insl
xchg
cmp
outsl
cmpsb
push
inc
jge
insl
pop
adc
or
fdivl
lcall
inc
sub
inc
pop
imul
xor
pop
add
aas
hlt
inc
adc
add
cmp
out
fsub
shll
ljmp
fistl
inc
pop
pop
loopne
pop
test
dec
mov
push
sbb
notb
fs
inc
mov
sbb
jnp
mov
fs
jbe
and
lahf
push
sti
push
daa
jns
jnp
ficoms
or
sahf
in
xchg
ss
sbb
jb
or
adc
sub
rcrb
mull
popa
mov
sbb
int
cmp
mov
js
ja
ret
cli
lahf
aad
mov
or
mov
sti
int3
and
in
mov
scas
inc
sub
inc
movhps
sub
jno
insb
mov
push
loop
cmp
arpl
adc
stos
pop
mov
adc
ret
or
popa
scas
pop
sub
jl
clc
xor
cmp
cmp
push
adc
sarl
inc
lods
scas
xlat
enter
mov
lret
ret
cmp
iret
add
cmpsb
jle
rolb
xlat
inc
aaa
sahf
imul
sub
imul
adc
data16
mov
push
mov
pop
int3
mov
adc
inc
mov
into
push
loope
rcr
shll
mov
pop
wbinvd
mov
aas
sarb
arpl
and
xchg
movsb
in
das
xchg
xlat
ss
in
repnz
xchg
add
aad
mov
imul
xchg
sarb
mov
hlt
movl
mov
icebp
push
cmp
mov
test
sub
jbe
vcmppd
and
out
push
mov
xor
inc
push
repnz
lahf
dec
pop
lret
sarb
pop
sti
cld
sbb
pop
jmp
jno
out
sub
addb
sub
or
out
jp
lds
xor
aaa
aad
pop
dec
out
imul
xchg
mov
jnp
mov
add
inc
inc
xchg
xor
xor
cmp
fstps
das
xor
xor
add
roll
lret
out
in
stc
push
gs
aam
mov
inc
xor
lret
sbb
sbb
aam
mov
sbb
or
and
cmp
in
js
test
mov
hlt
or
mov
dec
mov
and
jl
mov
sub
adc
call
sbb
lds
pop
add
push
jecxz
xor
push
outsb
inc
fwait
adc
repnz
in
and
fnstcw
adc
jb
aam
add
xor
push
mov
icebp
push
sub
aad
dec
lods
stos
jg
sbb
dec
sbb
and
mov
subb
es
popf
xchg
sbb
out
add
mov
iret
test
pop
daa
clc
mov
cld
leave
adc
mov
xchg
lods
mov
mov
xor
fildl
inc
imul
cmp
cmp
pop
fwait
inc
movsl
lcall
pop
repnz
push
loop
cmp
test
cmpsb
and
pop
mov
stos
out
push
or
roll
mov
xlat
add
in
addr16
fnstsw
pushf
adc
insl
aam
fucom
in
into
sbb
push
jecxz
sbbb
inc
mov
or
jl
bound
push
out
sub
push
jmp
dec
or
mov
xchg
mov
pop
lods
fs
fists
lock
and
mov
or
add
ss
daa
jge
pop
ss
xchg
sub
sbb
cmp
mov
lods
pop
rol
pop
dec
mov
in
cmpsb
insb
push
jns
pop
mov
sbb
ja
ret
push
jnp
push
adc
dec
mov
movsl
in
jae
dec
jns
jnp
cmpsl
lret
mov
fprem
sub
clc
jmp
cmpsl
mov
and
insb
sub
ret
push
fwait
mov
idivl
mov
xorl
inc
fsubs
and
pusha
xor
roll
pop
mov
loopne
fcoml
loopne
adc
jp
nop
add
lahf
stos
push
les
aaa
leave
cmp
dec
in
sbb
lods
outsb
sub
hlt
mov
movsl
aaa
pop
mov
push
add
frstor
mov
jae
mov
or
and
or
dec
repz
imul
xor
sbb
in
movsb
mov
arpl
in
jnp
es
inc
out
int3
mov
add
imul
cmp
add
into
push
xchg
jecxz
or
push
or
es
adc
adc
pop
dec
xlat
add
mov
iret
std
aaa
movsl
ds
and
lods
mov
dec
xlat
pop
lret
mov
ret
mov
or
mov
pusha
pusha
push
jl
sar
add
inc
pop
test
icebp
out
stos
adc
movups
push
popa
mov
dec
pop
inc
xor
jb
and
xchg
jns
cmp
inc
icebp
test
jbe
testl
jp
ret
popf
dec
lods
xchg
loopne
adc
cmp
xchg
lds
push
les
or
push
add
aas
cmp
aas
ljmp
mov
cmp
dec
adc
push
out
jg
loopne
mov
add
loopne
test
cld
mov
lods
dec
stos
ljmp
cld
or
cmp
xchg
arpl
and
leave
pop
mov
in
popf
sbbb
imul
push
in
sahf
push
gs
mov
loop
mov
in
pop
leave
xor
adc
dec
and
aas
cld
lgs
mov
add
xchg
and
lea
adc
mov
cmp
nop
lods
cs
enter
sbb
jns
fadds
iret
cmp
inc
rcrl
pushf
out
xlat
jo
and
nop
stos
jp
aas
pop
jge
dec
ja
xchg
mov
sub
es
sahf
ds
in
aam
mov
mov
cmp
mov
cmp
fdivrs
cltd
push
rcll
sbb
sbb
mov
dec
lds
shl
cwtl
call
cmp
jl
push
cli
inc
outsl
stos
cwtl
jl
addr16
lret
aam
aas
xor
insl
inc
movsl
gs
mov
mov
cmp
mov
arpl
mov
and
pop
add
cmpsl
push
and
les
push
cmp
lds
shl
out
jbe
fmuls
mov
out
push
mov
lock
mov
add
ror
mov
inc
and
dec
sub
dec
mov
pop
push
idivb
fisubs
pop
mov
rorb
mov
icebp
imul
adc
ret
jecxz
jg
out
mov
roll
enter
mov
lea
sahf
jp
push
ljmp
adc
jae
repz
fimuls
xchg
scas
sarl
pop
int
sbb
push
mov
sub
addb
jmp
fwait
gs
jge
pop
jnp
jge
in
push
xor
push
push
scas
shrl
mov
lcall
and
pusha
push
popa
lock
xchg
mov
cmpsw
mov
jmp
jl
xlat
repz
cmp
mov
stos
add
xorb
repz
cwtl
cmp
les
stos
pop
cmp
sub
cmc
addl
rcrb
into
pop
aad
rol
mov
movsb
addb
jo
sub
mov
xchg
pop
iret
adc
fs
arpl
add
add
idivb
jmp
fdivs
shll
sbb
imul
and
pop
jg
sbb
sbb
aam
add
jae
and
mov
mov
pop
pop
mov
into
jns
dec
xor
cli
roll
adc
push
aas
adc
jno
popa
mov
lock
lea
xor
push
leave
pop
stos
and
push
xchg
mov
bound
or
sub
xchg
jg
and
data16
fs
mov
xchg
dec
cmp
and
xchg
and
fnstenv
loope
ret
mov
inc
add
or
xlat
fstp
je
jg
cmpb
xor
lods
sub
mov
mov
inc
test
or
mov
jne
xlat
orb
in
loopne
sub
or
aas
add
jp
sarb
mov
add
test
inc
cmp
daa
jno
das
adc
inc
out
outsl
mov
cmp
and
bound
add
jbe
imul
mov
outsl
pop
inc
mov
sub
pop
sub
adcl
cmp
stc
inc
push
pop
fisttps
dec
lahf
das
pop
das
rcr
and
and
and
inc
hlt
test
jle
pop
sbb
pusha
jmp
cs
aas
cmp
in
push
sahf
mov
movsb
pop
test
call
in
sbb
loopne
and
lea
lods
enter
fsts
mov
out
aad
subb
daa
roll
aaa
fcmovnbe
jge
pop
adc
inc
movsb
lahf
ljmp
and
stc
or
xchg
ffree
into
xchg
sbb
cmpsl
insl
push
call
jp
sub
pop
cmpb
sub
hlt
aas
pop
ret
addr16
fildl
or
adc
adc
loopne
sarl
call
cs
adc
aam
push
pop
add
fisttpll
or
outsl
jp
hlt
mov
adc
adc
cltd
mov
mov
add
mov
loope
stc
jnp
inc
add
stos
and
or
lods
mov
pop
jmp
sub
pop
xor
cmpsb
cmpsb
push
outsb
jmp
roll
out
cli
adc
add
loop
cmp
in
pop
mov
addr16
fs
fs
in
cld
jg
lods
idivl
pop
pop
jg
cmp
lods
shrl
movsl
cwtl
sbb
cs
jns
mov
inc
arpl
push
and
xor
sbb
fcompl
bound
inc
popa
inc
sub
sbb
lock
add
pop
loope
int3
std
jno
movsb
mov
lret
jne
push
add
cmp
adc
stos
adc
mov
pop
out
loopne
dec
ljmp
and
ja
jle
pop
repz
mov
inc
push
xchg
fimull
jae
ret
add
mov
pop
aaa
shll
arpl
mov
lock
lods
mov
dec
or
fcoms
mov
cmpl
jae
sahf
fcmovnu
cmp
out
xchg
push
xchg
out
xchg
cmp
shrb
push
pop
mov
lock
leave
push
fs
fwait
jge
mov
lods
imul
or
fidivrl
mov
xchg
mov
pop
test
pop
pop
push
fs
adc
pop
or
adc
jmp
int3
movsb
loopne
mov
xor
mov
hlt
or
movl
jge
cmpsl
test
and
lods
mov
stos
arpl
pop
sub
imul
outsb
roll
lea
mov
pop
dec
test
out
xchg
mov
lahf
adc
push
pop
sub
jae
icebp
jle
sbbb
sbbl
push
popa
insl
inc
adc
push
xchg
jns
movsb
fnstenv
iret
stos
jnp
mov
sbb
repz
clc
push
or
mov
sbb
push
and
xchg
jg
inc
js
movb
xor
xor
test
shl
adc
das
push
dec
sti
adc
xor
jbe
mov
or
test
or
fistl
dec
push
fldenv
daa
out
inc
jg
cmc
lds
jmp
stos
hlt
push
pop
daa
mov
jne
lcall
mov
insl
mov
rcll
mov
pop
outsb
jo
repnz
mov
pop
les
lea
arpl
jbe
mov
cs
sbbb
fnsave
fucomip
leave
out
lds
xor
adc
leave
lahf
mov
mov
or
add
xor
cmp
jo
flds
cwtl
inc
rolb
mov
sbb
add
add
movsl
sbb
movaps
adc
inc
cmpsb
inc
fldl
fimull
stc
pop
scas
jecxz
mov
add
sbb
dec
mov
leave
std
mov
jge
adc
js
popa
xchg
and
jnp
insb
loopne
jecxz
sub
xchg
cwtl
xchg
daa
pop
idivl
xor
in
jnp
push
cmp
imul
loope
sub
jmp
fiadds
cmp
ret
sbb
lret
pop
test
test
jl
dec
xor
test
loopne
jecxz
sub
lcall
jnp
mov
adc
shrl
out
mov
add
fstpt
sub
jbe
daa
int3
xor
sarl
mov
mov
xor
xchg
sahf
inc
xchg
bound
or
jns
and
xchg
out
shrd
dec
and
aam
stos
ljmp
out
loop
loop
movsb
ss
iret
xchg
and
addb
pop
test
add
or
mov
ret
fs
pop
add
das
movlps
fldl
fldl
dec
or
bound
dec
fnstcw
cmp
push
out
std
xlat
jbe
stc
jne
lahf
insb
cmp
fsubrs
pusha
cmp
cli
aas
pop
add
bound
imul
inc
add
mov
enter
inc
xchg
mov
mov
in
call
je
cmp
mov
lock
jmp
inc
out
jg
aam
shll
out
adc
dec
xchg
cmp
pop
mov
imul
xchg
les
aaa
mov
ja
orb
push
outsb
dec
sub
fldenv
rcll
cltd
imul
mov
fistps
xor
cmp
int3
outsl
lret
fsubs
inc
inc
xchg
in
sahf
dec
xor
enter
call
inc
mov
mov
je
inc
aad
jmp
adc
pusha
bound
push
in
mov
and
sbb
aad
outsb
or
pop
push
lret
imul
sarb
sub
jecxz
arpl
pop
xor
cld
repnz
mov
lret
addr16
mov
inc
adc
push
mov
sub
xor
push
pop
adc
mov
pusha
or
ljmp
xchg
shrl
sub
cld
cmpsb
sub
cmpsl
mov
jge
lcall
inc
cmp
rclb
ret
jae
or
sub
or
mov
das
fcoms
aas
dec
sub
adc
in
xor
imul
adc
dec
outsb
fstps
test
and
lock
sub
cld
ds
push
jo
push
jb
mov
loop
daa
xchg
push
or
jns
sub
das
xor
aad
loope
sub
pushf
mov
push
jno
adc
push
jae
jge
cld
shl
incl
inc
lea
out
mov
sub
in
movsl
scas
in
push
jmp
mull
lcall
scas
sbb
aam
pop
inc
dec
cmp
fs
and
loope
imul
fidivrl
dec
mov
adc
mov
ss
sub
adc
cli
iret
sti
mov
dec
iret
xor
gs
xor
jb
lods
add
mov
mov
insl
das
jmp
push
cs
cmp
pop
xlat
les
or
xchg
call
aad
push
xchg
push
push
addb
cmp
aaa
aas
push
xchg
in
mov
inc
scas
and
mov
cld
fldenv
adc
stc
nop
mov
push
sub
dec
xchg
xchg
sahf
mov
cmp
lods
movsl
sub
jne
lahf
push
in
cmp
and
test
int3
push
jne
sbb
or
pop
mov
mov
xlat
xchg
and
lea
cmp
and
in
sahf
ffree
outsb
jns
or
aas
loopne
cmp
cmp
bound
mov
pop
test
add
cmc
mov
jp
scas
ja
and
movsl
jecxz
ret
inc
bnd
push
push
pusha
inc
dec
sub
mov
cmp
mov
dec
and
or
data16
mov
cmp
sbb
and
fs
data16
add
fldcw
pop
push
inc
ficoml
push
cmp
cltd
jecxz
dec
orl
adc
push
sub
or
add
cltd
outsl
mov
mov
add
xchg
jge
or
mov
clc
or
addr16
adc
ljmp
int3
mov
fistpll
xchg
adc
mov
pop
scas
cmpl
inc
dec
and
and
add
adc
xchg
push
dec
cmp
outsb
add
lods
pop
fwait
mov
sub
pop
xchg
movsl
insb
repz
inc
mov
add
lret
fs
stos
sub
std
incl
mov
ljmp
mov
push
jp
daa
cmp
or
test
out
cwtl
icebp
inc
push
inc
jecxz
push
sarb
xchg
arpl
aaa
outsb
repnz
sahf
icebp
jle
cmp
outsl
loope
mov
push
dec
push
and
pop
andb
sarb
mov
sbbb
sub
imul
aas
mov
lods
imul
mov
sbbl
in
xchg
fmuls
xchg
or
jle
mov
jg
in
pop
xor
jns
or
icebp
dec
fistl
mov
stc
scas
jne
jp
push
sbb
mov
enter
ja
lock
leave
ficoms
cmp
pop
cmp
jl
in
sbb
out
fdivl
mov
scas
ja
push
cmp
push
jecxz
xor
and
adc
fdivr
add
movsb
sahf
cmc
push
sub
ret
stos
lahf
inc
call
cwtl
test
imul
clc
addr16
out
jb
and
dec
rcl
dec
and
xchg
call
leave
inc
std
push
sub
les
xlat
mov
adc
mov
ja
clc
lods
loopne
mov
fistpll
lea
adc
in
in
inc
test
decb
mov
inc
pusha
in
jne
ljmp
push
adc
pushl
shl
fisubs
pop
xchg
sub
push
dec
stos
cmp
rcll
mov
movsb
shlb
mov
ret
mov
inc
stos
or
sbb
ja
mov
push
xchg
pop
sub
xor
call
je
icebp
out
mov
sbb
mov
fisubs
jp
sub
les
mov
in
stc
int3
enter
dec
inc
ds
dec
push
loope
insb
push
dec
mov
stc
xchg
push
out
jg
mov
ja
fimuls
xchg
out
stos
scas
lock
xorb
mov
mov
aas
xor
xorl
mov
fcompl
popf
mov
inc
inc
push
repz
arpl
adcb
adc
push
pop
adc
popf
inc
movsb
loopne
mov
ljmp
sbb
mov
jmp
sub
addb
xchg
inc
jg
cmp
push
cs
ss
adc
jge
sbb
mov
xchg
int3
cmp
call
xchg
mov
and
test
testl
sahf
sarl
inc
dec
cs
pop
int3
inc
std
and
out
push
test
add
mov
cmp
js
jo
mov
mov
sub
addr16
fnstcw
push
rolb
ret
scas
push
push
out
dec
cld
cmp
lret
jae
lahf
shll
rcll
dec
aas
or
xor
stos
mov
sub
sub
xor
jecxz
lret
or
dec
pop
cmpsb
xchg
ret
sub
mov
jge
mov
mov
idivl
push
es
mov
push
mov
and
and
mov
imul
or
xchg
jnp
rorb
js
sub
sub
arpl
and
cmc
push
popf
rcl
add
adc
xor
adcb
mov
mov
and
mov
popa
adc
es
jl
mov
pop
jg
in
jmp
shl
int
fwait
jae
dec
push
mov
push
repz
sbbb
jmp
imul
movsl
mov
mov
lahf
xchg
pop
sbb
shrb
inc
mov
jo
nop
call
dec
xchg
and
mov
or
jns,pt
lea
mov
mov
lcall
sahf
pavgb
ds
mov
rcrl
sub
mov
add
shlb
push
xchg
and
loop
inc
push
inc
ljmp
sbb
pop
adc
hlt
pop
mov
dec
bound
clc
stos
rcll
test
jo
push
add
jne
nop
enter
jne
sub
rolb
mov
mov
or
popa
xlat
in
or
push
lods
in
hlt
add
insb
ja
shr
testb
xor
dec
xchg
pop
loope
xrelease
gs
loope,pn
cmpsb
sbb
bound
mov
adcl
pushf
mov
mov
dec
pop
aad
mov
sub
mov
and
pop
mov
sub
js
pop
in
jae
push
jns
xchg
push
sbb
dec
sbb
dec
xor
push
shlb
cmpsl
es
xchg
push
pop
cmp
xchg
repnz
incb
xchg
sub
push
shrb
dec
inc
add
cld
mov
sbb
loopne
pop
sub
sarb
add
push
or
mov
add
fidivl
push
sarb
pop
adc
pop
call
ret
addr16
sub
push
sub
and
loopne
pop
cmc
insl
jmp
inc
inc
dec
sub
adc
in
mov
push
jo
mov
ret
imull
xchg
mov
aas
stos
das
imul
sti
int
test
fdivrs
mov
std
mov
xor
lahf
mov
mov
test
dec
xor
pop
rol
mov
dec
sbb
insb
mov
clc
lock
add
add
test
test
mov
mov
mov
jle
sar
imul
xorl
sub
push
stos
push
movsb
arpl
idivl
pop
jns
les
repz
es
jl
push
movsl
popf
push
jge
outsb
rolb
inc
push
arpl
adc
mov
and
loop
mov
sub
or
mov
out
addr16
nop
lds
dec
cltd
add
and
jg
stos
push
mov
out
add
and
mov
cmpsl
mov
jns
push
stos
adcl
outsb
mov
sbb
mov
jae
mov
mov
cli
cmp
pop
cmc
lahf
sbb
shll
mov
in
insl
out
fnstsw
adc
aaa
adc
and
jmp
mov
mov
cmc
pop
cs
mov
int
mov
xchg
mov
dec
repz
sbbl
test
and
imul
pop
jnp
leave
iret
push
sub
inc
adc
jo
mov
mov
mov
cltd
xlat
jge
fldcw
mov
mov
clc
jle
dec
mov
inc
mov
push
stos
enter
mov
aaa
sti
mov
or
sub
xor
mov
shlb
inc
hlt
scas
scas
mov
bound
outsl
cltd
mov
ljmp
lds
test
out
out
cmpsl
inc
sbb
pop
mov
lret
outsb
lret
cmp
cld
scas
rcrl
cld
jl
or
inc
xor
ret
push
in
xchg
stos
add
pushw
subb
insl
loope
mov
pop
inc
cmp
repnz
sub
or
call
aam
xchg
stc
dec
loop
out
sub
negl
sti
and
test
jno
int3
sbb
je
outsl
imul
cmp
push
addr16
imul
push
mov
loope
pop
outsl
pop
inc
jmp
jae
loopne
fwait
adc
scas
mov
sub
movsb
jmp
test
ljmp
add
push
iret
inc
mov
std
int3
or
std
rclb
cmp
cwtl
outsl
addr16
mov
cmp
xchg
add
add
pop
cmp
add
mov
jno
cmp
push
rol
mov
push
mov
mov
jne
jb
mov
and
movsl
jl
fimull
ss
fsub
sub
xchg
scas
pop
sbb
loope
mov
cmpsl
jo
and
clc
iret
imul
aad
outsb
xchg
xchg
pop
mov
cs
je
add
cmpsb
adc
mov
xlat
sbb
cmp
cmp
call
daa
push
pop
inc
cmpsb
adc
sbb
es
adc
mov
jge
cmp
les
add
jle
test
add
sahf
cmp
pushf
xor
cli
aad
ret
daa
rcrb
sub
add
negl
pusha
lret
into
test
push
mov
xchg
mov
sbb
mov
jno
push
adc
or
pop
inc
popa
pop
sbb
mov
fs
jg
push
imul
addr16
stos
es
pop
imul
dec
cld
dec
adc
or
ss
arpl
inc
inc
insb
xchg
pop
inc
mov
sub
lret
popf
shll
ret
dec
sti
jle
push
sub
or
xchg
sub
pop
dec
push
xchg
xchg
mov
jno
mov
adc
scas
jae
ror
and
in
or
and
or
xor
sbb
push
mov
out
push
std
aad
in
push
jb
clc
xor
push
mov
mov
daa
fnstcw
in
push
in
push
push
test
mov
cmp
test
and
scas
mov
cltd
xor
or
push
cmp
inc
dec
into
out
pop
mov
movsl
in
out
aad
jb
insl
cwtl
xchg
cmpsb
inc
add
sub
mov
jnp
xor
cmc
xor
xorl
cmc
dec
in
push
inc
jns
add
cmpsb
je
sahf
repz
imul
inc
das
inc
pop
xchg
scas
mov
into
icebp
popf
push
sar
popa
xor
iret
test
jg
lods
or
sbb
fsubl
mov
jbe
loop
xchg
jne
orl
in
xchg
add
sbb
imul
jecxz
inc
jno
orl
jo
gs
xchg
mov
push
repnz
mov
and
push
sbb
pop
cmp
jl
icebp
jbe
imulb
repz
mov
testl
pop
insb
push
sub
es
lcall
popa
pop
scas
push
jmp
lea
int3
push
ret
pop
sarb
adc
daa
xor
dec
insb
scas
fsubs
inc
adc
mov
je
insb
push
pop
hlt
push
leave
mov
jle
lods
rclb
addb
cmp
call
xchg
push
push
bound
inc
xchg
aas
arpl
jbe
mov
popf
sub
mov
sbbb
adc
sbb
xchg
iret
push
in
pop
mov
outsl
jns
push
mov
and
repnz
mov
cld
push
cwtl
push
jecxz
fbld
sub
aad
push
leave
push
xchg
mov
leave
loop
lret
pop
loop
insb
fisttps
pop
shll
push
cmp
mov
fldl
pop
in
pop
dec
push
jge
test
push
mov
mov
cbtw
xchg
jne
mov
cmp
inc
dec
mov
mov
pop
inc
dec
pop
loope
push
iret
shrl
movsb
mov
hlt
jle
cltd
inc
push
call
movsb
lds
mov
jle
mov
mov
pop
mov
out
in
pusha
fwait
push
sbb
lret
push
mov
push
bound
dec
fsubp
insb
push
sub
ja
xor
xor
adc
sbb
xchg
iret
insl
les
repnz
mov
cmc
push
mov
sbb
sub
sub
out
jbe
shl
enter
imul
shrb
sbb
mov
sarb
test
sub
push
mov
xchg
push
sbb
lods
lahf
mov
lret
sub
arpl
xchg
bound
jmp
cwtl
cmp
jb
mov
push
es
pop
cmp
inc
xchg
enter
xor
jo
jecxz
aam
dec
mov
mov
std
adc
add
adc
bound
cmc
xlat
pop
mov
fnstcw
sub
push
stos
or
xchg
scas
cli
pop
mov
aas
mov
push
and
mov
das
movsl
daa
dec
repz
mov
pop
pop
fidivrs
inc
or
cwtl
inc
ret
ret
push
cmpb
or
shrb
cmp
fsubs
jl
xor
and
add
mov
ljmp
inc
xchg
mov
mov
outsb
mov
pusha
out
imul
or
mov
outsl
mov
mov
scas
mov
xor
dec
add
repz
ljmp
lcall
and
pop
xchg
or
mov
xor
sbb
ds
rolb
loope
sbbl
fistps
mov
jle
call
hlt
jnp
aad
adc
xchg
icebp
js
sub
push
sub
psubusb
add
mov
xlat
dec
and
shl
icebp
push
add
orb
xor
test
rorb
xchg
ret
bound
dec
pop
scas
lret
mov
popa
mov
cli
jb
lret
xchg
nop
aam
lds
cmp
cmp
jns
xchg
cli
mov
pop
sahf
cmp
psubsw
add
jns
jge
xchg
fimull
cmp
xchg
repnz
pop
xchg
pop
sub
fstpl
fwait
das
add
dec
ret
into
push
or
gs
insb
in
xchg
and
stos
dec
fcoms
inc
mov
fadd
push
push
push
ljmp
fcoml
mov
test
sbb
bound
ret
jbe
rorb
sub
loopne
popa
mov
shl
shll
adc
cmpsl
negb
mov
mov
insb
or
cmp
push
fildl
mov
sub
cmp
cwtl
xor
mov
jge
mov
xor
lcall
adc
ja
jp
bound
loope
push
inc
jmp
fcmovbe
mov
das
imul
ljmp
stc
cmp
out
and
pop
add
mov
lods
fs
test
jecxz
dec
jecxz
inc
push
sbb
ret
int3
js
mov
or
data16
call
sub
js
mov
pop
pop
les
cmpsb
lahf
aas
sbb
and
lret
jo
testl
and
add
jl
xchg
push
movsl
push
mov
loop
leave
sbb
push
mov
push
cli
daa
inc
pop
arpl
shlb
out
push
adc
lock
push
es
mov
push
and
sub
enter
xchg
clc
leave
ret
cmp
lret
pop
lods
test
cld
and
pop
xchg
sub
mov
mov
gs
cmp
aas
outsl
xchg
cmp
inc
adc
pusha
sti
repnz
cmp
dec
push
mov
add
xor
pop
cmpl
lret
pop
lret
xchg
pop
movsl
fiaddl
xchg
pusha
push
pop
jns
sub
rolb
int3
xchg
jnp
lahf
not
dec
dec
dec
pop
les
adc
jo
xchg
jno
add
aam
adc
xchg
xchg
sub
loope
xchg
fisubrs
mov
mov
lods
outsl
dec
gs
test
shlb
fwait
cmpb
push
adc
pop
pop
das
pop
lret
mov
mov
push
dec
sbb
xchg
mov
addl
xchg
dec
dec
cltd
sahf
mov
push
xor
jg
sub
jnp
pop
fmuls
out
mov
mov
jns
sub
aas
shrb
das
jp
outsl
leave
mov
add
add
jo
adc
in
rolb
and
bound
xchg
push
shl
daa
inc
negb
add
pop
scas
daa
lret
mov
sub
lahf
cli
lahf
cwtl
ds
sti
shl
sbb
divl
lods
lcall
pop
mov
iret
jae
stos
jp
jns
sar
jae
test
adc
hlt
xchg
jl
adc
push
lahf
cmp
push
addr16
loopne
lock
xchg
addr16
insb
pop
lock
rol
nop
in
stos
pop
dec
add
lock
loope
outsb
cwtl
and
mov
fwait
inc
fisubrs
mov
xlat
jns
xchg
movsl
push
and
ret
sbb
stos
push
inc
xchg
push
movl
push
cmp
dec
outsb
xchg
loope
xor
jnp
cwtl
adc
mov
gs
add
dec
sub
mov
icebp
adc
stos
sub
not
mov
xor
adc
data16
pop
cltd
daa
mov
push
sbb
adc
pop
pushf
dec
jns
add
insl
xor
and
add
sbb
cmp
inc
mov
xor
in
and
mov
xor
pop
pop
mov
xor
inc
popa
insb
mov
mov
push
jmp
mov
gs
push
das
dec
push
inc
lret
iret
push
mov
inc
les
dec
test
mov
dec
test
jnp
pop
ljmp
lds
cwtl
dec
and
sub
adc
adc
and
add
xchg
jge
iret
lahf
repnz
scas
xor
cmp
adc
mov
das
imul
test
cld
mov
mov
lods
test
or
mov
push
enter
mov
int3
daa
push
dec
enter
jns
sub
jb
pop
sahf
lea
or
clc
das
inc
pop
mov
xchg
sbbl
dec
xchg
cwtl
pusha
sbb
sti
outsb
mov
movl
test
sti
icebp
cmp
jbe
out
add
ret
adc
mov
pop
sbb
push
out
shr
loopne
ret
loopne
je
cmp
ss
jge
sub
call
push
sahf
mov
xchg
inc
mov
mov
lock
cmp
sbb
xchg
lds
and
sub
dec
test
jmp
lret
sti
arpl
aad
add
in
dec
test
sbb
test
addr16
or
pop
repnz
pop
pusha
mov
test
movsb
xor
mov
mov
cmpsb
pop
push
loope
mov
jo
xchg
push
iret
addr16
lds
add
dec
mov
add
cmp
cmpsl
push
mov
insb
push
inc
iret
jne
andl
xorb
mov
loope
js
inc
sar
push
je
cwtl
and
pop
movsb
dec
imul
je
imul
cmp
push
pop
popa
push
sub
cmp
lods
xchg
addl
hlt
aam
int3
fildl
mov
sbb
push
addr16
jge
push
add
jae
xchg
in
nop
lahf
inc
and
mov
and
out
cmpsb
mov
jle
mov
fwait
cmp
jno
push
push
mov
les
mov
shll
sar
inc
je
ret
mov
sbb
xor
cmpsb
add
jmp
iret
test
xchg
ljmp
incb
xor
fmul
push
enter
add
sub
xchg
out
inc
rcll
iret
int3
jl
sub
icebp
lea
push
pop
cli
jle
cld
lahf
aad
arpl
addb
xor
popa
jge
or
cmp
jp
clc
inc
pop
aas
pop
jmp
inc
ss
icebp
stos
adc
push
and
test
dec
jle
out
add
push
jecxz
xchg
push
xchg
sub
sub
xchg
add
jle
test
loope
jecxz
fisubs
mov
sbb
dec
inc
int
mov
in
sub
sub
jne
stos
movsl
jecxz
xor
lea
das
iret
loope
cmp
jno
ja
out
and
fstp
mov
push
lds
lea
inc
add
xor
mov
mov
repz
stos
jle
or
sub
sub
sbb
adc
in
inc
test
lods
sbb
cmpsb
fbld
out
add
push
xor
adc
nop
icebp
push
ljmp
pusha
add
aas
mov
popf
add
push
or
lods
and
dec
fxch
out
add
pusha
or
adc
or
inc
add
jle
cli
lods
shr
scas
add
in
xchg
cltd
or
mov
aas
add
js
push
cwtl
cmp
jl
inc
xchg
jbe
pop
daa
mov
cld
add
jae
mov
and
fldt
and
arpl
aam
incb
scas
push
scas
outsb
fwait
xor
inc
inc
jle
fdivrs
xor
bound
lret
inc
lahf
gs
popf
cmpsb
data16
roll
pop
xchg
ja
cmp
stc
mov
mov
les
fildll
stos
fwait
xor
adc
mov
mov
jle
hlt
test
fs
jae
cmpsl
aam
in
lcall
pop
xchg
ficompl
or
push
jae
fistps
sub
pusha
in
aaa
sbb
or
or
sub
fmull
dec
pop
insb
sbb
mov
mov
xor
sub
call
sub
loop
bound
sbb
test
sahf
in
push
lret
test
movsl
call
std
push
in
rclb
pop
leave
mov
int
mov
repz
loop
inc
fistl
xor
xor
mov
or
js
cmp
mov
mov
jb
mov
xor
outsb
popa
fdivr
and
or
push
pop
xchg
push
test
jne
jbe
gs
adc
dec
inc
fsub
repnz
loope
adc
int
lcall
mov
and
loopne
lcall
mov
bound
jecxz
mov
fisttpl
int
rorl
add
xchg
xchg
enter
add
aas
xor
pop
ds
push
mov
loop
jmp
dec
mov
mov
mov
mov
fdivrl
pop
sbb
push
mov
cwtl
xchg
cmpsl
push
in
scas
in
mov
lahf
pop
mov
mov
sbb
xor
shrl
stc
push
jnp
xor
stos
xchg
subb
fwait
push
add
aas
repz
fsts
lds
push
add
arpl
mov
fsubs
daa
jp
mov
cmc
sub
out
xchg
mov
pop
test
dec
jmp
pop
or
add
dec
add
lods
mov
fnstsw
notb
or
xor
push
fcoms
ret
adc
std
push
or
imul
pushf
lods
sbb
cltd
cmp
xchg
sbb
add
sti
jp
inc
inc
push
or
xor
mov
hlt
or
push
sbb
xchg
push
xchg
hlt
nop
fidivrl
icebp
jne
jnp
fsts
testl
xor
push
sub
ret
icebp
pop
pop
xor
clc
test
lcall
rcrl
sahf
neg
out
lret
fbld
sub
stc
les
cli
pop
dec
imul
je
or
int3
pusha
aad
int
in
movsb
push
stos
or
lods
pop
jl
loopne
mov
or
add
sub
jle
and
int
subl
je
scas
or
and
or
inc
pop
mov
sub
ss
movsb
imul
sub
inc
and
lea
or
mov
repz
movsl
xor
repz
negb
add
adcl
or
xor
sub
inc
repz
mov
cmp
stc
push
ret
cld
into
je
add
mov
neg
ret
scas
out
mov
sub
push
dec
sub
mov
into
and
xchg
jecxz
fimull
cwtl
xchg
roll
shll
clc
mov
cmp
in
ds
mov
push
pusha
loopne
jne
aad
in
add
sbb
push
mov
push
cmp
sub
cmp
imul
scas
dec
xlat
mov
subl
movb
xor
xor
xchg
add
mov
lea
fneni(8087
lods
inc
fsubl
pushf
and
iret
cli
cld
or
mov
cmp
inc
lods
cwtl
push
out
push
iret
into
insb
mov
imul
ds
imulb
mov
movsb
fwait
mov
dec
mov
or
ret
xchg
iret
pop
pushf
jns
outsl
xor
test
andl
xchg
lcall
inc
cs
xchg
into
ret
mov
push
jge
xchg
into
dec
adc
mov
xor
repz
jne
and
ror
mov
xchg
pop
cmp
jge
adc
cmpsl
xor
lahf
xchg
insl
cli
dec
icebp
or
test
data16
cmp
popf
pop
jp
mov
into
sbb
cs
loope
in
ljmp
push
and
sbb
and
pop
push
adc
or
jne
adc
add
jle
in
mov
sahf
sar
dec
test
sub
lret
cmpsb
jl
mov
arpl
pop
int3
pushf
std
lret
xchg
inc
das
dec
arpl
icebp
lds
xor
add
pop
cmp
lret
mov
sub
test
xchg
fidivrl
sub
js
mov
mov
cmp
sarb
mov
add
ret
jns
lods
sbb
cltd
insl
in
jp
insl
inc
out
push
shr
and
mov
or
pop
popf
inc
cmp
sbb
stos
jl
mov
ja
ficoms
insb
movsl
stc
pusha
std
push
xchg
xor
and
outsl
dec
movsb
jge
aas
ds
lret
push
movl
je
aaa
sub
stos
ror
jns
mov
call
xor
push
jp
jle
lcall
push
adc
loopne
adc
xchg
sub
push
jns
mov
push
in
lret
insb
inc
loop
xchg
or
or
adc
or
test
das
movsl
je
or
cmp
pop
gs
gs
xchg
dec
or
fistl
cld
add
adc
add
aas
fs
js
fcomi
lods
or
fstl
aad
je
sub
inc
fisttpll
ret
cmpb
jo
or
cmp
nop
mov
or
adc
das
or
cld
add
sub
mov
stos
adc
lahf
aas
xchg
call
jnp
pusha
fs
cs
add
add
in
scas
xchg
cmp
xor
mov
xorl
icebp
lret
imul
test
iret
cmc
inc
xor
add
rol
xor
jecxz
sti
jmp
mov
lret
aas
imul
mov
fisubrl
arpl
pop
ja
cmpsl
mov
push
shrl
lcall
in
jo
xchg
or
flds
fildll
push
jmp
mov
sarb
arpl
jl
push
sbb
sub
or
cmpsl
data16
cwtl
cltd
inc
sub
cltd
mov
in
add
ds
mov
mov
addr16
sbb
adc
into
adc
and
and
cmp
cmp
lahf
mov
negl
addr16
inc
xchg
cmp
and
and
lds
cltd
iret
test
lea
or
mov
dec
adc
imul
and
popf
pop
xchg
inc
ret
fldcw
test
divb
lcall
adc
rolb
cmp
test
jecxz
inc
xchg
test
rcrb
out
and
repnz
sbb
cmp
sahf
dec
shl
imul
adc
cs
ljmp
sbb
stos
lahf
cwtl
xchg
adc
dec
fisubrl
push
xchg
sti
sahf
pop
ds
fnstenv
mov
xor
loop
mov
inc
sar
idiv
dec
rolb
hlt
leave
outsb
lret
lds
xchg
push
adc
sbb
fistpl
xor
cmp
pop
das
or
sub
fldcw
mov
test
jmp
imul
mov
fistps
push
clc
ret
mov
sti
cli
xor
jecxz
fidivrs
cmpsb
mov
aad
or
repz
push
sub
inc
sub
mov
mov
enter
mov
fsubr
icebp
sbbl
lcall
xchg
cmp
fsubrs
push
js
mov
and
arpl
pop
sub
shlb
pop
gs
mov
add
incb
cmpb
cs
push
cmp
lods
loop
fstpt
or
jmp
in
fs
jecxz
aas
leave
test
mov
xor
xor
dec
cmp
jns
jg
rcll
ljmp
inc
xor
iret
lret
mov
inc
lods
sbb
cmpsb
mov
sbb
js
loop
pop
inc
int3
push
add
scas
push
mov
test
xchg
shll
stos
jno
cmp
inc
jo
sbb
pop
sbb
xchg
add
jb
mov
mov
ret
pop
and
xor
or
dec
fimuls
lods
mov
inc
int
test
or
out
pop
ds
je,pt
ret
cmp
mov
dec
mov
fstp
test
loop
lret
ret
jne
mov
push
cmp
adc
popf
in
outsl
dec
fidivl
repnz
dec
popa
loopne
jg
jb
and
ret
mov
dec
xchg
addr16
shlb
jbe
mov
je
mov
daa
into
jl
dec
push
testl
pop
decb
ret
cld
addr16
sti
pop
stc
cmp
xchg
dec
test
sub
popf
push
mov
pop
jne
sub
std
js
inc
cmp
or
cli
mov
mov
add
xchg
iret
mov
pop
shlb
insb
sbbb
lods
sub
subb
push
out
shlb
sub
sub
and
shr
jae
aam
mov
jbe
mov
jb
dec
lret
jle
cmp
and
insb
inc
jb
cmc
test
lcall
in
data16
xchg
push
dec
loope
ficompl
pop
lods
shll
loopne
pop
in
xchg
mov
fdivl
les
int
sub
sti
sub
enter
inc
push
add
in
fs
shlb
mov
fcmovu
mov
fwait
gs
stc
add
add
or
pop
sub
fldcw
push
lods
inc
sbb
out
pop
pop
push
push
push
fwait
inc
out
shlb
push
scas
loope
movsb
xchg
xchg
inc
orl
insb
lahf
or
cmp
test
add
fsubp
loopne
xchg
inc
aas
lret
or
popf
add
jnp
mov
lret
sbb
jl
add
xor
or
sahf
and
cmpsb
addb
add
inc
adc
add
lods
and
mov
lods
in
ror
push
adc
mov
in
mov
les
jecxz
loop
xor
xchg
add
pop
loopne
dec
mov
bound
iret
and
xchg
inc
dec
pushf
cmpsb
jno
leave
nop
popf
sbb
sbb
jp
jmp
jecxz
inc
sub
dec
out
or
cmpl
push
nop
in
icebp
imul
inc
adc
leave
add
push
pop
inc
xor
ljmp
push
mov
testb
icebp
xchg
mov
sahf
jg
shlb
loope
pop
inc
sbb
insl
sti
dec
mov
pop
into
imul
push
or
cmpsl
xor
dec
rcl
jno
gs
les
push
insb
addr16
jae
inc
outsl
jg
out
leave
inc
add
cmp
pop
popf
jmp
cld
fbstp
adc
jae
into
fcmovb
and
sti
pop
stc
sub
int3
adc
popl
adc
repnz
test
or
push
testl
xchg
mov
jmp
in
push
jle
pop
and
inc
xchg
sar
xchg
out
pushf
xor
or
sbbl
cs
push
add
popf
shll
and
in
or
xchg
xchg
dec
ja
jle
inc
push
movsl
roll
les
xchg
popf
cmc
mov
sub
xor
dec
das
aad
sub
or
test
mov
jo
fists
xor
sub
fcompl
int3
sub
rol
and
push
js
inc
stc
xchg
mov
sub
adcl
cltd
mov
dec
shrb
test
aaa
rcrl
or
fdivs
adc
dec
mov
test
lahf
addb
mov
int
xor
pop
xchg
pop
push
or
sbb
iret
sbb
dec
jecxz
sbb
hlt
ficoms
jb
xchg
add
fnstenv
pop
sbb
jne
cmp
pop
dec
cwtl
mov
xchg
fdivr
shlb
xchg
test
pop
pop
nop
add
shlb
popf
lcall
das
jp
mov
pusha
jp
shrb
sar
loop
outsl
sahf
scas
fxch
adc
mov
mov
fisttps
shlb
jno
das
ficomps
mov
out
pop
fldl
adc
hlt
scas
inc
pop
out
addb
sbb
add
add
xor
mov
out
and
sahf
sub
or
cmp
push
aaa
data16
mov
int
adc
mov
subb
cmpsl
push
test
mov
lahf
popa
and
test
movsb
inc
std
jb
mov
ss
cmp
popf
and
test
fstpl
sub
cwtl
fdivrl
hlt
xchg
jp
pop
push
add
jg
das
dec
mov
push
movsl
mov
sub
push
jmp
ja
mov
lcall
xchg
cmp
mov
fcmovnu
or
push
mov
add
inc
mov
or
lock
loopne
jl
mov
xor
in
or
test
adc
call
enter
rolb
jle
pop
clc
scas
inc
addl
mov
dec
inc
jle
sub
jns
je
inc
xchg
mov
les
add
hlt
aaa
addr16
idiv
testl
vandnps
xor
negb
xchg
aam
mov
loope
sbbb
cmc
or
sbb
mov
dec
mov
mov
repnz
cltd
pop
imul
mov
mov
xchg
push
mov
pop
lock
adc
add
and
mov
push
ficompl
stc
xchg
inc
out
pop
cld
sbb
or
cld
pop
mov
mov
jnp
out
xchg
movsl
and
dec
fnstenv
or
mov
gs
push
mov
cmp
or
adc
int
push
adc
les
push
push
fdivs
in
adc
and
jno
cmp
xor
add
cmp
inc
imul
stc
jecxz
es
ficomps
pusha
dec
shrb
lret
test
arpl
les
push
cmp
pop
mov
push
or
add
jmp
bound
jecxz
xor
sbb
pop
filds
jmp
iret
lods
pop
call
pop
dec
inc
inc
jb
out
and
mov
pushf
test
xorb
push
jb
cmc
jmp
movsl
mov
bound
xchg
xlat
mov
icebp
adc
mov
mov
mov
inc
cmpsl
rclb
pop
ja
and
gs
xorl
nop
bound
mov
cmpb
push
stos
dec
clc
in
pop
idivl
mov
call
mov
fisubrl
pop
popa
fmul
rolb
lret
test
xor
xchg
pop
sbb
decl
adc
dec
lods
sti
pop
js
jl
mov
and
mov
ja
or
aaa
stc
dec
in
js
pop
push
andb
sub
sbb
sbb
push
inc
pop
xchg
jo
test
dec
sbb
xlat
mov
add
pop
ljmp
or
sub
push
std
cli
insl
int
xorl
mov
dec
ja
sbb
add
inc
lods
in
negb
rdtsc
sub
sub
sahf
sub
mov
xor
rclb
cmc
pushf
fwait
les
mov
jae
xchg
pop
jnp
out
in
outsb
inc
or
pop
mov
cmpl
lds
inc
mov
lea
adc
push
lret
jne
push
xor
pop
stos
mov
xor
add
aad
mov
cltd
and
xchg
nop
mov
xchg
xor
cwtl
fists
cmp
sub
lods
ret
out
push
jnp
xor
mov
out
in
push
mov
inc
pop
dec
xchg
push
mov
and
sbb
mov
shl
push
rorl
push
in
aad
fistpl
sbb
fists
jmp
imul
push
cmp
xchg
ds
or
lret
jne
adc
add
ljmp
or
in
loopne
xor
cld
sahf
jb
xor
dec
sub
sub
adc
dec
inc
les
sub
pop
dec
cmp
pusha
adc
cli
lea
add
mov
popf
push
repnz
mov
adc
sub
push
add
aas
shlb
mov
and
fsubrl
cltd
or
adc
push
sub
xor
dec
lods
pop
enter
lahf
adcl
push
xchg
or
cmp
popa
das
add
notb
inc
xchg
add
repz
push
jbe
push
jnp
sti
sbb
sbb
or
cmpsb
or
jae
sahf
push
ficoml
jge
icebp
fstps
push
nop
fmull
es
add
pop
mov
and
or
xor
xchg
fld
sub
push
cmpb
sbb
and
out
adc
adc
mov
dec
jg
iret
scas
dec
sbb
mov
ljmp
xchg
test
adc
jbe
cs
push
aam
shr
adc
adc
pop
test
rcll
and
dec
jo
jmp
mov
shll
out
add
mov
xchg
lea
sbb
imul
adc
adc
fdivrl
sbb
push
add
repnz
add
aaa
fdivl
sti
movsb
inc
insb
adc
cmp
in
movsb
jb
test
cmp
pop
test
scas
dec
xchg
jbe
xor
cmp
lret
sub
shrl
mov
ret
cmp
adc
incb
inc
xchg
arpl
pop
inc
jbe
sahf
mov
pop
dec
shrl
add
xor
mov
push
dec
clc
mov
push
or
xor
es
imul
or
lretw
dec
dec
add
pop
outsb
push
jp
lods
fsubs
cmp
lock
iret
cmp
ss
mov
xor
jecxz
jecxz
xchg
push
test
dec
fidivrl
sub
jo
sub
jmp
lret
cmp
inc
jno
lea
inc
add
xchg
out
cmp
fnstcw
and
push
inc
testl
cmp
and
pop
inc
xor
jns
addr16
add
ljmp
test
aaa
inc
stc
in
jne
pop
xchg
xorb
fmuls
loop
or
sbb
mov
lahf
mov
pop
xchg
and
leave
loopne
sbb
jl
rcl
gs
es
pop
pop
test
fwait
sub
and
rclb
test
sbb
pop
lds
movsl
and
gs
mov
aam
subl
push
sub
push
rcrl
lods
dec
aam
aas
jae
sub
arpl
ret
mov
gs
test
fsubrl
jle
adc
push
cmp
xor
and
cmp
cmp
jmp
push
add
and
inc
jne
sbb
fcmovnbe
mov
inc
popf
hlt
inc
sahf
mov
jo
mov
scas
pusha
aaa
cmp
or
inc
stos
dec
pop
fists
sahf
mov
lret
je
xchg
aam
inc
xor
and
shll
jae
cs
dec
inc
adc
das
mov
loope
mov
and
mov
sti
loopne
out
in
std
adc
xchg
scas
push
and
lcall
lods
test
loop
pop
or
inc
out
jb
imul
xchg
cmpsb
adc
nop
imul
mov
test
mov
popa
pop
add
jo
mov
iret
in
pop
adc
sbb
fsubl
dec
std
add
in
adcl
fimull
mov
outsl
int
imul
push
push
in
lods
or
cmp
shl
enter
imul
std
dec
mov
fucomi
mov
sbb
pop
mov
dec
mov
fldt
add
data16
shlb
std
push
mov
fiaddl
xchg
cs
cmp
mov
jns
cmp
sahf
mov
pop
add
jge
pushf
mov
adcl
int
jbe
popf
jb
xchg
push
xor
cmpl
pop
push
jb
dec
pop
loop
cmpsb
cli
jmp
mov
mov
push
popf
stc
sahf
xorb
dec
rcll
push
mov
mov
js
mov
cltd
adc
mov
xchg
bound
lahf
mov
adc
adc
data16
hlt
inc
outsl
bnd
ret
rclb
inc
fcmovne
mov
shlb
adc
cmp
jno
clc
repnz
lret
loope
and
push
mov
jecxz
adc
push
ja
mov
nop
inc
fdivs
clc
or
iret
out
push
pushf
in
sti
popf
push
lock
loop
mov
loopne
aam
ja
mov
cmc
test
mov
push
fimuls
call
clc
adc
pop
in
adc
enter
mov
fldenv
push
add
xlat
mov
and
xor
dec
sub
pandn
in
lea
add
sahf
clc
xchg
inc
inc
outsl
inc
out
push
sbb
rol
ret
sahf
adc
addb
jne
call
or
and
pop
hlt
adc
cmp
or
pop
stos
jl
sub
ret
inc
das
jo
ds
shll
cs
cltd
mov
xor
add
push
and
cld
int3
lds
cmp
ret
mov
push
mov
sti
ret
jmp
in
sbb
icebp
add
pop
imul
dec
repz
xor
mov
cwtl
fwait
mov
daa
sub
cli
insl
adc
xchg
dec
pslld
sti
jp
sbb
je,pt
lods
out
mov
sahf
fwait
ljmp
inc
push
nop
pop
mov
out
inc
sti
jnp
test
push
jne
mov
cmp
fiadds
jns
cmpsb
mov
mov
fldt
sbb
lahf
out
popf
aad
pop
or
pop
idiv
icebp
mov
les
out
push
popa
mov
pop
sbb
push
xlat
test
and
fisubrs
or
arpl
jmp
mov
mov
rolb
pop
lock
rcr
push
mov
or
jnp
cmp
adc
adc
rcll
ficompl
and
cmc
mul
pop
iret
aam
push
mov
fdivl
push
and
mov
pop
arpl
add
jb
scas
xor
mov
icebp
and
mov
dec
scas
inc
xchg
or
mov
and
inc
inc
mov
push
outsl
repnz
test
sbb
hlt
xchg
test
xor
xchg
mov
or
les
insl
or
add
xchg
call
add
xor
or
pusha
scas
lea
aam
js
ret
or
dec
jne
rcll
mov
xor
pop
sbb
in
dec
adc
in
inc
jno,pn
test
push
inc
push
cmp
xlat
mov
jp
push
mov
cmpl
pop
sbb
sbb
jae
jo
iret
dec
cmp
stos
add
adcb
sub
push
mov
gs
in
push
xchg
adc
out
sub
sub
mov
sub
lock
pop
jl
loopne
push
fst
popa
and
lds
sub
mov
push
cmp
test
fsubr
adc
sbb
jbe
jno
mov
test
sub
mov
cwtl
pop
js
enter
std
and
insl
mov
clc
loopne
cmc
cmpsl
out
cmp
push
dec
inc
pop
push
dec
mov
or
xchg
aas
stc
mov
and
stc
or
daa
popf
push
icebp
or
cwtl
inc
adc
jmp
jge
jo
clc
inc
push
push
mov
movsl
sub
stos
mov
or
popa
mov
loop
add
xchg
mov
pop
and
inc
pop
testl
xchg
int
jb
inc
xor
push
jp
lods
xor
jp
fbld
push
push
enter
stos
sub
push
lea
mov
stos
addb
jns
scas
cmp
push
stos
sti
insl
dec
mov
xchg
mov
mov
cmpsb
and
jo
in
or
icebp
cli
fbstp
mov
movsb
xchg
or
push
pop
jl
xchg
iret
in
push
fwait
subl
std
pop
cmp
imul
jae
or
leave
arpl
mov
mov
lods
dec
push
ss
jle
sub
mov
std
sti
sbb
stos
aas
sub
nop
mov
mov
movsb
rcl
pop
mov
jg
jp
xor
inc
ficomps
mov
mov
jmp
test
xlat
sub
int3
neg
mov
outsl
std
fcmove
mov
lds
mov
in
out
out
out
adcb
movsb
ret
movsl
or
and
mov
cli
mov
in
and
sbb
lds
loope
lea
fwait
and
dec
adc
mov
jl
dec
sub
in
cmp
imul
loopne
pop
fistpll
lcall
add
icebp
dec
test
popl
sub
push
shlb
lds
sahf
fidivs
enter
add
mov
xor
sti
or
sbb
or
rol
fdivl
ret
stos
mov
and
adc
scas
sbb
sbb
out
ds
fmul
cmpsb
clc
xor
dec
push
fwait
or
sbb
stos
cmpsb
jle
jecxz
mov
jmp
aad
aas
call
jmp
clc
stos
enter
jne
int
pop
mov
cmp
add
insl
rcll
add
mov
sbb
push
mov
ret
out
in
mov
adcb
cmc
pop
lds
cmp
add
pop
mov
mov
add
mov
clc
pop
xchg
pusha
pop
sahf
rolb
add
mov
icebp
test
test
jl
out
lock
sub
sbb
sbb
int3
pop
out
fistps
pop
es
insb
inc
mov
idivb
cli
mov
lds
ljmp
xchg
mov
daa
cltd
mov
std
inc
or
rol
jnp
push
lcall
or
cmpsb
aaa
xor
pop
fistpl
push
mov
mov
insb
mov
cld
lods
push
int
in
call
adc
nop
in
loop
or
fcompl
subl
pop
repz
jo
stc
lret
cmpsb
jmp
addr16
sub
xchg
jp
xchg
fisubl
dec
mov
xchg
jle
popa
sub
sub
lret
sbb
lret
jo
or
popa
xorb
gs
fdivrs
xchg
push
jo
nop
sti
sub
maskmovq
mull
push
loop
mov
out
ss
addl
cs
cld
daa
mov
cltd
iret
sbb
cwtl
jmp
negl
loopne
jle
jnp
xor
jge
mov
pusha
aas
pop
mov
jne
mov
cmp
loope
add
mov
lret
add
mov
jno
jo
popa
dec
adc
divb
jo
inc
stos
or
push
into
mov
cltd
mov
in
inc
popa
in
jo
adc
inc
leave
imul
sbb
xlat
push
inc
sub
jl
push
adc
cwtl
mov
mov
and
fidivrl
cmpsb
fisttps
pop
xor
insl
enter
adc
mov
fldcw
and
or
fisubrs
push
cwtl
popa
sub
out
aaa
dec
mov
aad
fsubrl
mov
loopne
pusha
mov
test
inc
test
mov
ljmp
mov
jae
jle
dec
cs
aas
int3
lret
mov
mov
mov
or
aam
int
mov
ret
pop
outsl
dec
mov
cmpsb
mov
jb
and
fldenv
mov
adc
call
mov
push
xchg
mov
xchg
inc
and
movsl
mov
ficoml
mov
push
inc
insl
jno
sub
popa
cmpsb
cli
dec
cmp
jg
insb
add
stc
adc
mov
fwait
push
xchg
jge
lods
shll
cli
mov
mov
imul
lods
push
xor
mov
repnz
sub
or
add
mov
mov
test
nop
dec
sub
mov
pslld
mov
movsb
mov
pop
adc
ret
sahf
sti
lret
and
es
mov
ss
jg
mov
clc
xor
leave
and
adc
lret
dec
jmp
jecxz
addb
fcompl
sarl
pop
xor
jae
pop
fwait
dec
dec
pop
xchg
xchg
scas
fwait
push
and
clc
jmp
adc
xor
mov
cmp
mov
clc
inc
ror
xchg
sub
cli
inc
jg
pusha
insl
pop
inc
pop
mov
fucomp
inc
sub
jmp
cmp
dec
stos
pusha
scas
jp
fisubl
dec
insl
sarl
xor
mull
push
ficomps
stos
cmp
in
mov
inc
lods
sub
mov
push
add
in
sub
push
inc
jne
movsl
and
stos
ja
popa
xor
fnstenv
jle
aam
outsl
insl
xor
into
lahf
ljmp
rcrl
fidivrs
data16
xor
push
pop
mov
cmpsl
loopne
lods
dec
cmc
addr16
popa
negb
cmp
mov
std
in
notl
xchg
ljmp
pop
fcoml
xchg
mov
xchg
shrb
cmp
scas
add
cmp
xchg
fistl
movsb
mov
or
mov
shlb
jg
fxch
sti
dec
xor
push
sbb
mov
mov
adc
xchg
lods
jl
inc
push
cmp
ja,pt
es
jo
jp
ret
lock
roll
adc
xor
or
sarl
stc
pusha
xchg
push
jge
dec
sub
push
dec
pop
cmpsb
data16
out
popa
jns
jne
hlt
stc
nop
stc
pop
cmp
aas
into
test
mov
cmp
loopne
adc
inc
cs
cs
push
out
test
les
cld
mov
mov
lahf
inc
imul
js
push
sub
pop
jmp
cmp
jns
mov
mov
jle
adc
push
cmp
inc
xor
scas
add
int3
fsubrl
pop
xchg
adc
leave
rorl
jno
addr16
shll
sbb
cmpsb
xor
push
sub
xchg
sbb
sub
xor
mov
push
cmc
fs
mov
das
mov
orl
jl
int3
adc
mov
imull
jmp
mov
popa
jns
mov
push
ret
add
xchg
and
adc
xor
dec
push
inc
mov
imul
aaa
fsts
pop
icebp
int3
inc
xor
enter
je
es
adc
dec
or
sbb
popf
adcb
cli
pop
add
inc
out
lock
jne
lcall
xchg
ds
arpl
xor
jo
hlt
fbld
sbb
mov
mov
into
aad
push
add
pop
or
lahf
and
sub
cmpsb
xor
dec
push
outsb
or
push
mov
inc
xlat
arpl
push
lea
cmp
in
inc
inc
push
sbb
and
sub
pushf
mov
lods
insb
lret
xchg
mov
bswap
or
sub
outsl
mov
mov
hlt
pcmpeqd
xchg
push
cmp
jbe
sub
xchg
xorb
js
aam
notb
pop
outsl
xchg
and
les
pop
xchg
dec
aaa
cld
cli
andl
push
sub
xlat
jp
adc
call
xchg
lahf
cmc
icebp
call
clc
lret
fcoml
loop
xchg
stos
jge
or
add
mov
or
jle
xchg
outsb
cmp
sbb
jp
cmpsb
or
xor
ljmpw
fiaddl
mull
bound
cmp
clc
cli
xor
jmp
stc
clc
inc
fsub
push
push
and
pop
add
pop
std
jmp
outsb
aad
nop
add
mov
pop
mov
push
pop
fdivrl
jb
xor
je
jle
push
lret
test
add
sbb
xchg
ja
lret
test
push
fldl
enter
mov
mov
mov
xlat
adc
hlt
pop
sbb
sbb
jb
xor
add
mov
js
es
push
stos
hlt
mov
mov
frstor
dec
jmp
sbb
inc
mov
cmp
or
pop
int3
movsb
inc
jae
jne
ss
push
or
push
mov
adc
inc
mov
xchg
iret
mov
cmp
dec
pop
pop
inc
lock
dec
sub
insl
testb
pop
or
sbb
int3
repz
and
cmpsb
mov
hlt
dec
mov
inc
out
xchg
stos
push
inc
ds
push
jg
inc
int
pop
push
dec
mov
jne
pop
dec
adcb
out
sub
xchg
cli
sbb
inc
sbb
dec
pop
imul
push
mov
scas
out
adc
push
lock
mov
sbb
dec
int
and
lds
pop
jne
cli
popf
cltd
and
xchg
imull
lret
add
sub
in
mov
repz
lods
inc
xchg
mov
imul
add
adc
push
push
mov
xor
cmpsl
loope
scas
loope
test
rcr
push
pop
cmp
aaa
or
cmp
mov
pop
setp
addr16
push
faddp
das
gs
and
js
xchg
or
adc
fistpl
xchg
ja
xor
dec
xor
add
out
or
xchg
lahf
inc
mov
jecxz
adc
cs
loope
pop
sub
mov
test
push
mov
in
cwtl
cmp
loop
mov
mov
xor
inc
adc
xor
pop
fmul
shl
jns
stos
addr16
pop
iret
mov
ja
imul
mov
lea
cmp
cmc
pushf
pop
push
data16
cmp
sub
popa
shl
fwait
je
cmp
cmp
sarb
xor
ljmp
aam
xchg
cmp
aaa
xchg
and
inc
lea
adc
dec
mov
add
mov
imul
xchg
imul
adc
sub
imull
jmp
pop
adc
imul
adc
sub
mov
aam
dec
cltd
jle
push
stos
push
xlat
pop
into
or
jecxz
cld
xchg
int
push
jo
mov
mov
lahf
adc
in
loope
lret
sub
jg
sub
push
sub
and
mov
sbb
sbb
adc
inc
pop
inc
xor
les
add
lock
push
es
mov
adc
xor
das
scas
mov
jmp
adc
or
push
xchg
mov
dec
in
stc
in
cmp
sbb
test
push
aad
std
outsl
icebp
rol
fisubs
push
cmp
in
outsb
je
jne
push
jmp
dec
or
push
xor
rol
imul
inc
and
mov
jns
fwait
scas
out
xor
retw
shrl
hlt
jnp
jge
sub
sbb
lret
xlat
xchg
es
mov
cwtl
or
jmp
out
ret
cmc
mov
push
loope
lcall
insb
add
lock
jo
daa
mov
xor
push
mov
mov
add
cwtl
push
adc
mov
imul
sub
gs
xor
pop
jmp
clc
hlt
icebp
lahf
sub
and
mov
mov
and
jmp
xchg
mov
mov
ja
clc
cltd
fcomps
sub
mov
lods
daa
xchg
pusha
jle
fiaddl
xor
stc
inc
test
jns
adc
fldt
sbb
jno
jno
popa
pop
lahf
push
movsb
cmc
ret
lret
mov
std
insb
dec
fdivl
mov
sbb
pop
out
xchg
pop
ret
pop
jmp
sbb
in
adc
xchg
and
adc
lods
enter
sbb
test
sti
lret
dec
xchg
xor
scas
adc
mov
fcmovnb
adc
jns
shl
pop
jbe
dec
dec
in
loop
and
insb
and
pop
mov
pop
adc
mov
mov
push
clc
cmp
ret
sbb
inc
mov
imul
in
mov
mov
push
rcl
mov
faddl
jb
jecxz
jo
loopne
add
scas
aaa
sub
ret
loopne
cmpsb
fstpl
and
and
sbb
or
nop
sbb
mov
in
add
mulb
aam
adc
ss
out
lods
add
jo
in
or
push
inc
sti
adc
adc
in
scas
out
icebp
push
stos
pop
movsb
fwait
mov
into
lret
int
clc
push
adc
jecxz
sub
sbb
leave
pop
and
clc
xchg
leave
xor
popl
dec
adc
sti
mov
mov
out
insl
or
xor
pop
ret
ss
cmp
out
mov
or
inc
cmpsl
pop
gs
das
sub
push
adc
add
cmp
subb
aam
inc
call
mov
mov
mov
rcrb
dec
adc
jle
push
lods
rcll
lcall
rep
ret
xchg
pusha
imul
icebp
or
jg
rcpps
sub
daa
imul
fists
mov
aas
pop
xor
mov
inc
cld
unpckhps
jmp
shr
jae
sub
scas
repz
xor
push
aas
fcom
and
sbb
test
int3
rcll
sub
pop
aad
sbb
daa
loopne
mov
aad
or
or
xchg
pop
mov
fbstp
inc
sbb
aas
mov
xchg
out
adcb
jecxz
mov
cmpb
iret
mov
roll
or
mov
add
lea
movsl
jp
pop
cltd
enter
dec
fldt
push
aad
pop
hlt
inc
movsb
add
mov
clc
movsl
cld
mov
pop
mov
icebp
jg
xor
ljmp
fisttps
xchg
xor
xchg
jp
xor
pop
sti
cmpsl
imul
push
inc
push
and
rcrl
popf
mov
dec
mov
cmpsl
in
or
adc
insl
xchg
xor
pextrw
jns
popf
jns
out
push
ljmp
sbb
add
and
xchg
pop
mov
add
pop
pop
lahf
jb
adc
sub
xchg
subb
fs
cmp
xor
sbb
lahf
outsl
push
xor
sub
pop
andb
pushf
xchg
mov
pop
mov
fdivs
sub
popf
packsswb
fisubrl
bnd
push
dec
scas
add
push
das
jne
pop
jp
sbbl
add
pushf
cmc
dec
push
shl
xchg
testb
out
xchg
mov
mov
add
cmpsl
jmp
inc
mov
aad
fmul
dec
scas
inc
mov
jle
mov
inc
sub
sbb
pop
cmp
rolb
ljmp
in
xor
ret
and
popa
lea
mov
orl
push
dec
xor
and
mov
pop
jmp
cmp
pop
js
pop
pop
test
or
into
mov
push
push
negb
push
dec
dec
imul
repz
jo
and
das
outsb
mov
xchg
pop
repz
sbb
adcl
pop
les
bound
insl
imul
and
and
loop
ficoml
xor
outsb
loop
inc
cmp
mov
cmp
adc
mov
mov
push
lcall
ljmp
movsl
mov
sbb
lcall
jno
std
fimuls
fbstp
rcl
dec
iret
sbb
mov
stc
jnp
bound
pop
pop
sub
filds
cmp
sahf
pop
xor
test
cli
sti
in
movsb
mov
lea
aaa
mov
inc
adc
mov
sub
fnstsw
xlat
popa
or
mov
sbb
or
pop
addr16
jmp
and
daa
mov
mov
and
mov
std
xor
mov
push
sbb
mov
pop
adc
cltd
loop
gs
add
xor
pop
xor
lcall
lret
push
cltd
sub
int3
mov
sub
rcl
or
clc
fisttpll
decl
adc
xchg
fwait
inc
pop
fstpt
sub
dec
in
test
mov
xor
xchg
dec
aaa
lods
lcall
ret
adc
fistpl
mov
out
and
lahf
movsl
dec
sahf
movsl
in
std
test
jecxz
and
sub
popf
aad
cmp
fcomps
pop
pop
test
or
or
sar
add
pusha
cmp
cli
ret
cli
mov
jbe
pop
xor
mov
add
jbe
icebp
pop
add
xor
loope
out
jl
call
or
sub
inc
leave
jae
xchg
pop
test
popa
ja
xchg
aad
sub
icebp
pop
test
xor
scas
insl
inc
out
mov
pushf
mov
cmpsl
cmc
test
icebp
cs
push
test
aam
pop
outsl
sti
in
test
jns
mov
mov
push
shll
jns
dec
dec
or
dec
pop
in
sub
add
iret
adc
jbe
push
mov
mov
shrl
adc
cli
out
sbb
fstpt
xchg
movsl
sbb
int3
sbb
scas
sub
ljmp
mov
outsl
mov
ja
scas
jbe
std
xor
xor
sbb
cmp
ss
cmp
stos
call
in
add
xor
gs
out
fdivrl
loop
mov
cmpsl
popa
test
jmp
icebp
adc
fdivl
sub
push
mov
pop
jp
in
or
lock
cmp
mov
push
dec
lds
repnz
repnz
cmc
jg
sbb
jno
mov
scas
out
lods
push
cmp
add
inc
adc
test
aam
mov
mov
jecxz
out
or
cmc
push
pop
fimuls
xlat
xor
cld
jb
sbb
inc
ds
push
adcl
or
mov
pop
lcall
dec
jg
in
pop
sbb
mov
int3
mov
push
mov
sti
jnp
mov
int3
ljmp
mov
sbb
lds
call
pop
dec
andb
cmp
shl
adc
push
cmpsb
jb
adc
push
mov
push
cmp
mov
fildll
ret
jnp
std
or
xchg
push
xorl
and
test
sub
outsl
sti
mov
add
pop
in
push
push
cmc
in
xchg
pop
xor
mov
xchg
lock
out
icebp
filds
mov
pop
imul
jno,pn
and
jge
bound
pop
cmp
xor
test
fisubrs
lret
or
pop
xchg
cmpsb
pusha
stc
add
pop
cmp
mov
lods
inc
xchg
nop
lret
mov
test
xor
adc
or
mov
subl
stos
dec
sub
sub
outsb
mov
mov
popa
add
cmp
sarb
rclb
out
ss
std
in
xor
add
daa
in
dec
into
xchg
sub
mov
ret
jb
dec
push
in
rcrl
inc
push
pop
loopne
and
and
pop
cmp
inc
pop
and
call
cmpsb
dec
xor
cmp
andl
mov
dec
or
or
mov
or
dec
jb
inc
rcrb
or
jl
mov
xor
xchg
inc
movsb
mov
mov
jnp
mov
imul
fcmovb
mov
lods
shrb
inc
fistl
mov
push
adc
or
add
paddd
jecxz
das
push
movsb
leave
push
cmp
int3
test
jns
scas
mov
mov
loope
xchg
cli
pusha
inc
cld
call
xor
or
lea
lds
shlb
cmc
mov
pop
test
out
inc
sub
pop
adc
clc
enter
int
push
sbb
pushf
xchg
mov
adc
sbb
push
xchg
inc
cwtl
mov
jmp
rcr
mov
add
enter
sbb
mov
das
nop
ret
out
sbb
int3
gs
pop
and
xchg
bound
lret
jp
ds
fcomps
cwtl
aam
xchg
xor
lea
cwtl
or
in
sbb
sub
sub
shr
adc
add
ljmp
mov
push
movsb
mov
fdivrs
push
mov
inc
mov
ja
jmp
test
aaa
push
pop
lea
rcll
or
sahf
fsubrl
out
fsts
cli
icebp
dec
mov
clc
and
sahf
xchg
jne
inc
inc
scas
subl
test
repz
pop
sub
jg
es
cmp
sti
mov
jo
inc
sub
test
lcall
inc
pushf
push
in
mov
jp
cs
popf
nop
inc
rcl
fwait
jmp
jg
mov
loope,pn
int
insb
mov
inc
xor
dec
orl
mov
ret
stos
or
add
or
insl
enter
fdiv
mov
pop
jp
ljmp
shlb
pop
mov
mov
cmp
dec
xor
cmpsb
lock
and
pusha
test
insl
add
sbb
scas
pop
movsb
dec
add
out
sbb
push
or
mov
sbb
mov
loope
in
insb
mov
ficoms
mov
adc
xchg
pop
pop
mov
xor
imul
jle
and
mov
push
stos
lret
loop
loop
ds
iret
repz
arpl
nop
sub
outsb
cs
inc
iret
addr16
mov
pop
mov
popa
push
xor
jnp
stos
cs
mov
adc
lcall
inc
mov
sbb
xlat
lock
adc
push
fnstenv
adc
stc
scas
lds
ss
add
insb
in
outsl
mov
dec
dec
xchg
jg
push
sub
inc
jge
shll
add
cs
xchg
lret
sti
jmp
out
sub
mov
int3
fs
pop
cmc
sbb
dec
std
scas
ds
iret
out
pushf
push
jge
iret
int3
and
mov
rol
in
sbb
pop
and
mov
repz
cmp
or
and
cld
push
popa
and
mov
or
clc
into
or
stc
sub
push
fistpl
out
mov
xchg
ja
mov
sti
cmp
pushf
xchg
lea
aad
lods
add
cld
loop
cmp
filds
inc
fsubr
stos
mov
or
and
pop
stos
add
sub
les
pop
cmp
test
push
cmpsl
in
mov
mov
xchg
fdivrs
in
addr16
jno
addr16
adc
mov
cmp
inc
stc
sub
sarl
mov
rcl
fs
mov
pusha
pop
iret
gs
divb
xchg
dec
xchg
popa
adc
cmp
orb
sbb
out
stos
add
pop
and
lahf
call
loop
stos
das
test
gs
aaa
cltd
push
mov
fiadds
cmp
cmp
lea
int3
and
mov
xchg
rcl
lcall
sub
jno
aas
out
dec
add
pop
or
ja
add
pop
std
sti
lahf
push
jl
inc
cld
sbb
xchg
xchg
imul
jo
jns
push
xor
jge
int3
lea
xchg
ds
js
mov
inc
jno
mov
xchg
loope
lock
lahf
xchg
cwtl
jnp
mov
mov
in
das
push
pop
popf
mov
mov
push
stc
fsubr
in
pop
std
xchg
mov
js
xchg
xchg
mov
pop
xchg
aad
xchg
pop
push
hlt
push
gs
out
repz
pop
int
mov
roll
jg
jne
sub
add
test
inc
int
cmp
mov
jb
xor
negb
js
out
adcb
addr16
xlat
cli
pop
jno
xchg
xor
insl
es
xchg
pop
insb
sub
mull
movsb
sti
dec
mov
sahf
xchg
jno
gs
mov
hlt
jne
sti
jne
shlb
daa
cmp
dec
adc
add
jne
push
pusha
ja
push
adc
add
xor
xor
ss
push
jne
iret
test
hlt
leave
enter
jo
fistl
push
js
scas
scas
daa
scas
or
sbb
inc
mov
popa
push
jle
notl
push
and
push
and
icebp
in
repnz
jmp
xchg
out
mov
jmp
jnp
mov
mov
sub
push
call
add
push
adc
mov
dec
adc
jge
pop
inc
lcall
clc
cli
mov
jle
pop
test
je
jb
sub
aam
xchg
sbb
push
nop
cmp
add
xor
adc
jns
jnp
and
arpl
testb
xchg
movsb
sbb
add
dec
jbe
xor
dec
lret
xchg
cmpsb
xor
mov
in
add
test
push
aaa
push
leave
pushf
mov
mov
js
dec
enter
xchg
pop
loop
fs
inc
adc
stos
inc
dec
add
js
movsb
and
std
mov
ret
cmp
cmp
xchg
and
pushl
pop
xlat
dec
inc
movsl
iret
aaa
cmp
test
xchg
and
js
shl
push
pop
pusha
or
cmc
mov
rcl
sub
adc
mov
std
mov
pop
fwait
scas
cs
pop
sbb
enter
lahf
and
push
movsl
hlt
dec
enter
sub
jmp
fwait
data16
mov
call
adc
hlt
ds
mov
cmpsl
bound
test
sbb
enter
mov
xlat
stos
fst
pop
pushf
loopne
and
inc
mov
lret
add
fs
loope
stos
or
outsl
in
jmp
mov
in
mov
fwait
aam
pop
and
cmpsb
mov
mov
enter
or
cmc
mov
js
inc
and
adc
xchg
test
movsl
std
sbb
xchg
fiaddl
sub
out
fdiv
or
lods
lods
sbb
inc
inc
push
or
inc
fldt
fcomp
inc
inc
mov
or
ret
fcomp
push
jae
arpl
xchg
pop
inc
or
les
ret
addb
lods
loope
mov
adcl
push
add
mov
loope
adcb
mov
dec
mov
pusha
pushw
hlt
dec
test
sub
dec
aaa
and
xorb
inc
imul
inc
xor
or
pop
clc
lods
into
mov
sbb
add
int3
or
xor
jb
call
fwait
and
mov
pop
aad
fcmovnu
shl
hlt
sub
xor
imul
adc
sub
sub
pop
push
and
push
sti
xor
mov
adc
and
outsb
xorb
divl
repnz
lahf
int
mov
ljmp
xor
or
xchg
inc
inc
mov
inc
out
mov
rcrb
push
mov
jp
and
xor
lcall
mov
cwtl
push
roll
jno
dec
es
cwtl
daa
add
test
loope
daa
mov
pop
in
push
sti
orl
pop
push
jecxz,pn
or
stos
fs
gs
and
xchg
cmp
jp
xchg
jl
pop
jo
xor
js
push
stos
lds
pop
insb
ja
daa
mov
dec
mov
roll
jg
sub
scas
aad
jno
aam
ret
in
xor
sbb
test
push
and
repnz
in
out
lods
movsl
and
mov
and
test
xchg
movb
mov
pop
cmpps
lahf
in
std
call
cli
lods
in
sub
mov
test
faddl
dec
movsb
ss
dec
ja
push
mov
jmp
xor
loopne
inc
std
pop
loopne
mov
jb
sub
xchg
xor
push
sub
mov
cmc
pop
fildll
mov
mov
arpl
mov
xchg
push
fldl
pop
jge
jae
sub
movsb
out
iret
pushf
repz
scas
xchg
cmc
faddl
in
lods
test
das
and
in
mov
mov
mov
xchg
sub
out
add
repz
sbb
lret
dec
sub
mov
mov
adc
dec
mov
mov
inc
test
loopne
adc
and
loope
ds
hlt
push
mov
lea
jae
pop
dec
sbb
mov
test
outsl
inc
push
inc
pushf
bound
movsl
rorb
cmp
push
inc
lock
jmp
xorb
adc
stos
enter
ret
pop
jl
mov
cltd
pop
xor
std
xchg
iret
and
fucomi
cmp
pop
jb
lds
dec
lods
iret
sahf
and
cmp
mov
aas
mov
adc
sbb
aaa
popf
mov
test
into
movsl
in
or
cld
sbb
enter
cmp
mov
insb
fdivp
subb
je
test
mov
mov
sahf
adc
pop
je
mov
pop
out
enter
cld
shll
jns
sub
push
mov
lahf
out
fidivl
xor
cmpsb
jecxz
xchg
xorl
fnstenv
clc
adc
jmp
xor
in
cld
into
mulb
sbb
push
and
cmpsb
repnz
pop
in
enter
push
sub
push
or
pusha
push
mov
jmp
dec
ss
loop
xor
imull
push
sub
add
bnd
dec
mov
dec
push
xor
dec
out
sub
pop
mov
add
cmpsb
ds
mov
or
sbb
movsl
scas
mov
sbb
popa
aad
hlt
loopne
pop
stos
fnstenv
fists
sti
adc
adc
or
out
cmpsb
xchg
or
pop
mov
mov
cmp
ret
int
and
push
imul
push
xchg
mov
xor
dec
sbb
jo
inc
in
xor
ja
subb
lahf
and
cs
call
jno
sbbb
mov
in
inc
inc
pop
ret
cmc
out
pop
insl
std
sbb
shll
nop
not
mov
lea
hlt
push
cmc
notl
add
lock
icebp
pusha
or
lahf
sbbb
and
lea
sar
jno
pushf
mov
or
sbb
cli
cli
mov
fistpl
pop
arpl
cmp
jp
add
ljmp
jle
push
pop
fdivrl
cmpsb
in
ret
lods
adc
js
dec
push
push
mov
mov
sub
inc
adc
imul
adc
xor
std
push
add
icebp
xchg
outsb
mov
mov
test
and
call
sub
outsb
data16
push
sub
bound
scas
test
cmpsb
stc
jns
sub
cmp
test
popf
mov
inc
mov
sub
sub
fidivrl
outsl
imul
repnz
arpl
dec
shll
mov
dec
xchg
mov
std
test
aad
repnz
int3
dec
mov
add
lea
leave
stc
sub
pop
add
sub
jp
push
es
cmpsb
out
addr16
popf
inc
jmp
xchg
or
repz
sub
push
outsl
inc
leave
and
push
adcb
lea
andl
pop
or
repz
jmp
test
clc
mov
cmc
scas
push
add
ljmp
fs
lock
xchg
dec
xor
ss
fmul
sbb
std
xor
lahf
pop
cli
adc
fbld
xor
sbbl
icebp
arpl
scas
mov
adc
push
xlat
repnz
out
enter
pop
mov
sbb
out
add
out
pop
test
bound
dec
inc
stos
scas
scas
dec
xchg
fldt
shll
push
testb
xor
dec
lret
sub
xor
or
int
cmp
and
push
jge
stos
movsb
ljmp
das
orb
out
pop
adc
push
ficoms
mov
mov
not
lds
jecxz
lds
mov
cmp
and
sbb
xchg
testl
fistpl
les
cld
mov
sub
mov
divb
imul
cmc
jnp
sbb
mov
imul
mov
pop
insl
jb
cli
test
xchg
pop
out
add
xor
push
fstps
pop
out
sbbb
out
xchg
sub
scas
je
hlt
jmp
or
aaa
sub
push
jle
std
ds
xor
loop
sub
mov
psraw
mov
out
nop
xchg
mov
jne
add
inc
mov
xchg
data16
or
sbb
push
dec
and
xorl
data16
addr16
popf
xor
xchg
push
ds
jb
cld
dec
mov
sub
loope
test
fwait
and
jp
mov
jb
inc
mov
js
pop
fwait
cmpsb
test
clc
repz
mov
mov
enter
jns
xor
cmpsl
jae
cmc
aaa
arpl
fmul
sarb
pop
sbb
xor
push
inc
pusha
mov
mov
mov
pop
xor
pop
call
cmp
push
xor
pop
shl
out
push
pop
pop
fwait
les
pop
mov
push
cld
pop
add
pop
jp
inc
sbb
jge
out
fucomi
lock
mov
push
sbb
cmp
lea
cld
daa
mov
inc
sbb
xchg
jmp
push
dec
data16
jns
xchg
add
loopne
jl
push
mov
dec
scas
inc
adc
mov
and
sbb
test
aam
jecxz
and
sbbb
sbb
mov
and
inc
fldl
cmp
mov
fmulp
xchg
adc
sbb
jp
push
scas
cmp
push
fcoml
xchg
mov
adc
clc
add
inc
lods
cs
pop
cltd
mov
orl
fnsave
leave
insl
adc
fcomi
lret
xchg
nop
mov
mov
fwait
sub
or
mov
cmp
out
mov
je
push
out
enter
lahf
pop
mov
inc
mov
arpl
xor
mov
punpckldq
gs
scas
aas
mov
inc
insl
xchg
inc
roll
sub
add
jecxz
lahf
sub
add
hlt
daa
jo
adc
push
outsl
shlb
popa
repnz
mov
mov
rorb
mov
aam
pop
incl
out
mov
inc
cmpsb
cmpsl
cmp
xlat
incb
mov
lock
popa
mov
stos
fidivrl
jo
pop
cmp
cmp
loopne
xor
mov
rorb
push
push
or
roll
in
jge
icebp
xor
clc
cmpsl
cli
iret
in
hlt
gs
push
mov
dec
aas
pop
imul
xchg
add
push
shlb
xchg
js
cltd
fcoms
icebp
cltd
jle
pop
scas
xor
ret
cmp
into
xchg
mov
aaa
cmp
int
ss
fstl
and
add
adc
stos
addr16
shlb
mov
cmp
call
int
push
cmp
fs
add
inc
scas
mov
push
jmp
test
fwait
mov
push
popf
faddp
xor
scas
sub
js
adcb
iret
jns
push
inc
cld
notl
jo
add
cmp
sar
lods
xchg
xchg
imul
cmp
mov
cmp
fcoms
adc
pop
mov
mov
dec
fistpl
cmc
sub
and
clc
leave
push
cmp
test
mov
sahf
imul
fisubs
cmpsl
in
mov
inc
add
push
stos
push
pusha
stos
mov
jo
fistps
fwait
cli
dec
in
cmp
sbb
stos
sbb
dec
sbb
loop
xchg
test
rcrb
cmp
or
insb
icebp
stc
push
adc
push
daa
inc
pusha
mov
and
xor
push
je
jmp
icebp
sub
mov
mov
lea
jns
inc
jne
cli
stos
jae
pop
test
xor
jl
roll
mov
arpl
out
movsl
fdivrs
or
ret
cmpsl
mov
outsb
or
sbb
push
inc
fnstcw
lahf
shl
sbb
pop
rol
add
addb
jge
inc
mov
push
mov
push
inc
mov
pop
arpl
cltd
sub
daa
in
mov
into
aad
inc
push
push
and
jns
mov
add
lods
xchg
arpl
jecxz
push
pop
push
cmc
inc
mov
int3
jbe,pn
fs
jg
pop
scas
fnstsw
mov
pop
push
sub
dec
int3
adc
orps
nop
dec
sbb
bound
je
push
xchg
mov
in
adc
cs
rcrl
cmp
es
sarl
adc
lea
outsb
divb
xor
mov
dec
imull
xor
push
push
cwtl
rcrl
nop
rcr
je
sbb
cld
pop
mov
mov
fnstenv
jp
mov
cltd
stc
stos
sbb
mov
mov
inc
int
push
mov
mov
mulb
leave
sbb
adc
sbb
xchg
arpl
cmpsl
loopne
mov
push
int3
js
into
bound
cltd
adc
stos
xor
hlt
rcrl
xchg
bound
cmp
cmp
mov
fwait
and
enter
and
in
inc
or
test
or
xchg
fistpl
sub
loopne
mov
out
insl
cld
add
xchg
icebp
inc
in
jmp
nop
jne
loopne
sti
xor
iret
pextrw
xchg
enter
mov
lea
and
fwait
fwait
mov
gs
lcall
mov
aad
jnp
inc
cltd
pushf
inc
loop
in
arpl
out
inc
leave
jmp
out
icebp
pushf
mov
les
stos
dec
aaa
sbb
icebp
jp
add
and
jl
adc
idivb
icebp
test
cmp
rcl
inc
and
rep
mov
scas
lock
sbb
insb
inc
cmpsb
paddq
adc
cmp
fsubrs
loop
cli
pop
jno
pop
xchg
push
adc
xor
dec
inc
xchg
and
lret
fisttpll
cmpsb
lock
aas
addb
sbb
dec
stc
push
push
icebp
shl
in
dec
fwait
sahf
scas
pop
arpl
negb
adc
std
push
pushf
adc
mov
mov
dec
imul
fmuls
xor
sub
xor
sbb
test
push
shlb
inc
stos
or
stc
xchg
imul
adc
sub
and
pop
mov
pop
xchg
mov
cli
imul
fs
cmp
xchg
dec
push
leave
mov
pop
xchg
ficoml
js
jo
cmpb
push
icebp
add
sbb
jno
shrl
jnp
popa
aad
lods
mov
lahf
popf
ret
flds
mov
push
or
das
cmp
jne
xor
mov
push
out
cmp
jbe
movsl
or
mov
cmp
fcmovnb
add
pop
arpl
mov
xchg
into
pusha
jp
jmp
cmpsl
lods
lds
cmp
sbb
mov
sub
jp
xchg
lret
shlb
fbstp
push
pop
loop
ss
das
sbb
add
dec
mov
addr16
mov
mov
lods
adc
xor
pop
fdivrl
addb
xchg
loopne
js
stc
lret
xorl
es
pop
addr16
mov
loope
xchg
fildll
and
fbld
jne
or
ljmp
rcr
mov
sbbb
jmp
inc
in
cmp
aad
in
sub
pop
push
nop
add
cmpb
test
cmp
aaa
lds
dec
outsl
orb
and
ror
cmp
out
loope
test
pop
sti
stc
add
mov
popf
movsl
sti
xchg
mov
mov
loopne
stc
pop
inc
push
inc
mov
push
in
or
cmp
setge
pop
pop
jmp
mov
push
jg
push
bound
mov
out
insl
pop
pop
inc
push
fistpl
and
jecxz
nop
rcll
rcrb
push
adc
push
sahf
push
subl
and
not
mov
lcall
lret
js
scas
inc
outsb
mov
pop
sbb
pop
cld
enter
cwtl
aas
pop
mov
hlt
xchg
and
or
jmp
and
cwtl
and
pop
stc
pop
stos
pop
xchg
scas
dec
testl
pusha
cmpsb
ficomps
repz
andb
aad
daa
dec
inc
push
fmull
inc
inc
movsb
rorb
mov
shll
das
add
push
mov
add
das
in
out
pop
or
xchg
sti
imul
mov
movsb
push
gs
insb
in
sbb
cs
out
imul
inc
adc
movsb
popf
outsl
insb
fnstsw
and
mov
in
mov
and
wbinvd
aas
lock
loopne
cmc
fcompl
dec
jae
stc
jmp
jle
inc
jae
outsl
addr16
dec
inc
lcall
lahf
push
shll
jno
call
adc
xchg
add
out
mov
scas
rcrl
stos
add
imul
jb
lds
fistps
dec
xchg
std
popa
inc
test
pop
out
and
dec
sar
lahf
mov
xor
dec
adc
jns
jae
pop
and
sub
insb
jl
mov
adc
sbb
mov
cmp
mov
iret
dec
popf
dec
or
and
aad
inc
and
popa
repz
enter
adc
addr16
jg
clc
in
sarb
mov
sbb
xchg
cmc
or
imul
pushf
push
pop
orl
add
mov
cmp
jns
lcall
lock
and
and
xchg
fwait
lock
mov
lret
outsb
pusha
rorb
je
inc
jno
jns
jno
and
mov
mov
xor
mov
xchg
or
ss
sbb
jge
xor
pop
adc
cmp
into
int3
push
outsb
or
rcll
gs
arpl
sbb
push
daa
pushf
sub
ret
xor
jge,pn
xor
fstpt
mov
fistpl
jo
jmp
xchg
test
mov
scas
push
xlat
jno
fistps
cmpsl
jns
out
cmovne
and
push
scas
jl
or
leave
test
sub
sahf
and
lcall
popf
dec
and
pusha
dec
daa
test
and
mov
test
jne
rcl
int3
fisubrs
sub
dec
mov
sub
push
sub
pop
xchg
scas
push
in
lods
loopne
xor
ret
xor
mov
xor
inc
rclb
dec
jbe
enter
lcall
jns
mov
test
add
lret
mov
dec
sbb
shrl
adc
xchg
rcl
or
add
shr
les
lret
xchg
test
leave
sbb
movsl
inc
cmp
adc
je
mov
and
add
fwait
or
xchg
xchg
adcb
jne
outsl
add
movsl
mov
shl
xchg
adc
ljmp
lds
pop
mov
xchg
push
fnstsw
cmp
jo
and
pop
mov
jno
notl
ret
daa
aaa
mov
imul
dec
pop
js
mov
sub
or
mov
fnstsw
mov
add
ds
jecxz
into
ds
mov
ret
pop
movsb
loope
pusha
sbb
mov
outsl
cmp
mov
into
sbb
lahf
pushf
scas
cmp
adc
lcall
loop
sub
add
xor
jmp
scas
push
enter
xchg
or
mov
stos
jle
fs
cmpsl
enter
fwait
and
ja
shll
mov
sub
mov
cwtl
inc
xchg
add
leave
mov
and
sbb
pop
pop
mov
push
mov
test
push
mov
popa
cmp
lcall
leave
es
sti
mov
mov
push
imul
sahf
push
xchg
pop
pop
hlt
xor
mov
inc
adc
pushf
jns
push
adc
stos
xor
cmpsb
jecxz
sub
sbb
inc
push
loopne
sub
outsb
pop
add
fiadds
movsl
and
int
cld
mov
push
jg
adc
push
xchg
push
push
dec
sbb
shll
push
or
push
lock
sbb
jmp
cli
das
mov
shl
pop
mov
mov
rolb
addr16
insb
xor
aaa
pop
jmp
cltd
imul
daa
and
cmp
lds
rorb
sub
mov
dec
sbb
dec
fisubs
loope
xchg
leave
sbb
loope
sub
sbb
shll
scas
and
pop
fildll
stos
sbb
rorb
jl
mov
vpsubsb
stos
and
sub
push
add
scas
std
das
push
pop
add
sbb
and
and
jno
adc
mov
pop
fimull
movsb
xchg
popf
mov
scas
inc
sub
lods
lahf
fwait
jg
lcall
in
ret
lea
xchg
mov
xchg
pop
movsl
jp
fsubr
scas
dec
adcl
sbbl
or
add
pinsrw
and
sub
xchg
jg
and
std
movsl
inc
sub
insb
push
out
jo
int3
mov
mov
inc
xchg
jns
cltd
jae
sub
push
test
xlat
inc
mov
test
inc
sbb
inc
pop
loopne
ljmp
inc
jb
sub
xchg
in
xchg
es
or
icebp
arpl
inc
inc
sub
test
mulb
imul
cmp
cs
push
push
jl
fprem1
pop
fwait
sub
and
movsl
sbb
xchg
jno
cmp
ret
push
sub
lcall
ss
or
lock
or
mov
imul
fisubs
xor
mov
adc
lea
sub
movsl
mov
jle
mov
add
jbe,pn
lcall
xor
push
jge
pusha
pop
fs
mov
or
popf
sti
imul
push
movsb
push
sti
and
lret
cli
dec
inc
add
outsl
repz
jo
es
xchg
outsl
xchg
divl
cld
rorl
decl
jl
jae
push
ds
sbb
xchg
sbb
cmpl
pop
and
cs
cld
mov
lods
jbe
push
inc
ss
aaa
push
dec
push
loopne
push
mov
ljmp
jge
push
mov
inc
fisttpll
xchg
dec
cmp
add
sti
mov
push
add
sub
adc
add
cmp
lret
test
sub
mov
or
popf
sub
mov
dec
sub
jle
mov
or
push
jp
sbb
and
pop
and
sbb
aad
sbb
ja
mov
inc
sbb
sbb
lods
dec
in
fldl
cs
adc
mov
scas
cli
pop
mov
pop
push
nop
loope
mov
in
add
out
pop
sbb
mov
sbb
fs
dec
or
adc
pop
fsubl
ss
jnp
mov
insl
icebp
in
xor
sbb
repnz
daa
gs
push
xor
dec
outsl
out
push
inc
jp
jns
jmp
movsl
inc
cltd
lock
or
sahf
mov
outsb
ds
add
xchg
cmpsb
xor
and
lods
xor
cmp
fxch
add
mov
out
lret
aam
arpl
cmpsl
pop
out
push
xor
bound
sbb
imul
je
jmp
jecxz
das
pop
jne
outsb
jmp
mov
cltd
mov
push
out
fcoms
inc
jb
adc
xchg
xchg
sbb
jnp
sub
gs
inc
mov
cli
sti
inc
stos
fmulp
and
pop
push
outsl
add
sti
ret
out
lret
adc
divb
mov
lcall
insb
or
lods
xchg
ds
out
xchg
enter
into
sbb
jbe
and
or
loopne
push
sub
mov
icebp
cmp
mov
or
mov
jo
fwait
sbb
popf
cwtl
popa
enter
cmp
pop
sbb
repnz
popf
inc
or
xchg
pop
addr16
data16
int3
push
push
cld
jne
test
lcall
xchg
xor
inc
xchg
xchg
hlt
mov
cltd
lods
daa
xlat
cmp
stos
leave
stos
icebp
mov
mov
adc
out
pop
cltd
test
mov
mov
xor
inc
add
cmp
fldt
rcll
pop
adc
mov
pop
mov
inc
fistl
movsb
jae
sbb
push
call
mov
outsl
and
ss
popf
push
mov
cmc
mov
jno
in
out
shll
enter
lcall
dec
mov
shl
into
lcall
dec
vmread
fidivs
pop
aaa
in
pop
icebp
mov
sti
enter
hlt
adc
into
mov
pop
rcr
pop
int3
push
ja
add
xlat
xor
xor
imul
fs
mov
pop
sub
addr16
in
pop
imul
mov
int3
pop
test
mov
dec
enter
rolb
xchg
faddl
decb
fldcw
outsl
fisubs
jne
and
js
add
aam
outsl
sbb
mov
and
sub
fnstenv
aad
cmpsb
je
imul
out
out
xchg
push
popf
shrl
xor
push
outsl
ficompl
les
rolb
mov
dec
bound
negb
xchg
ljmp
lret
into
jns
repz
adcl
cmp
dec
scas
jecxz
adc
inc
or
dec
jle
scas
inc
es
fcomps
sbb
std
xchg
insl
jecxz
dec
sub
sub
shll
adc
in
dec
les
test
pop
xor
rol
xchg
andl
lret
dec
js
jno
das
dec
mov
dec
dec
repz
nop
mov
adc
xchg
outsb
inc
rolb
mov
rcrl
inc
sub
lret
cs
insl
add
mov
cltd
adc
add
add
mov
lock
je
and
mov
pop
aaa
cmp
test
inc
or
sbb
mov
mov
jbe
rcrb
jb
pop
cltd
xchg
jno
dec
mov
fsubr
nop
xchg
lcall
or
rorl
inc
rolb
lea
fcompl
leave
sub
inc
lock
sbb
dec
incl
in
enter
jge
arpl
dec
or
sti
mov
dec
popf
dec
ljmp
and
ds
enter
fwait
push
aas
in
sbb
sbb
ljmp
movb
push
les
mov
or
jns
and
repz
cld
adc
lock
jp
scas
mov
ss
sub
lahf
sbb
push
and
dec
jmp
push
insb
pop
loopne
pop
notb
jg
movsl
stos
add
icebp
fs
fbld
jmp
test
out
push
jb
mov
test
into
inc
movsl
pop
je
add
dec
aad
adc
jnp
mov
shrl
jno
or
nop
repz
inc
cwtl
ficompl
pop
lret
adc
push
sbb
inc
xchg
cmp
dec
lcall
pop
scas
sub
dec
aas
xchg
jge
xchg
out
sub
test
cmpsb
lds
out
mov
nop
mov
mov
lods
dec
mov
sbb
pop
mov
sub
sub
xor
enter
scas
arpl
ss
sahf
dec
mov
sub
popa
mov
sbb
cld
call
imul
sub
aas
aam
rol
outsl
or
xchg
mov
jl
push
mov
push
push
test
cmp
aam
inc
jne
adc
jbe
je
dec
hlt
add
jecxz
ljmp
stos
imul
insb
pop
ss
xor
mov
iret
cmpl
or
insl
scas
jns
xor
xchg
or
mov
and
sub
dec
lock
std
sets
jp
ja
mov
add
jmp
lock
dec
mov
xor
pop
inc
hlt
add
mov
cmp
pop
mov
pop
cwtl
je
xor
int3
push
lds
jno
enter
fildll
movsl
fsubrl
stc
adcb
pushf
push
sahf
lcall
mov
push
mov
ljmp
lock
inc
lods
push
mov
cmp
aam
frstor
clc
test
cli
push
test
adc
inc
movsl
inc
movl
xor
mov
add
cmp
xor
push
xor
mov
insb
movsl
or
add
aam
jl
data16
inc
inc
roll
xor
adc
call
sub
xor
js
adc
lcall
sub
cwtl
xor
mov
mov
inc
insb
cli
loopne
sbb
or
mov
cmp
push
push
rclb
jmp
jae
jo
mov
sub
cmpsl
mov
frstor
xchg
ret
mov
clc
xor
cli
lods
dec
inc
adc
jbe
les
test
dec
cmp
mov
or
dec
out
sub
nop
xor
pop
and
fcmovne
roll
inc
inc
cmp
mov
das
add
ds
ja
test
mov
mov
sub
mov
test
fsubrs
mov
xor
mov
ljmp
mov
xor
jno
sbb
sbb
jmp
sti
cltd
inc
jno
cmp
or
inc
das
cli
enter
fnsave
enter
dec
outsb
in
loope
jmp
mov
sub
ja
fnstcw
aad
out
push
mov
cmpl
pop
mov
in
or
cld
nop
mov
sub
pop
jb
xchg
mov
sarl
imul
xchg
stos
test
push
mov
xor
mov
jae
sbb
mov
cmp
pcmpgtb
push
jno
mov
push
orb
and
sub
mov
add
mov
fdivl
adc
mov
cmc
shll
cld
repnz
or
sbb
ljmp
cwtl
dec
mov
and
pop
or
mov
push
xor
icebp
stos
push
xor
cmp
rcr
add
push
mov
jns
js
gs
inc
xchg
inc
fs
sbb
mov
loope
pop
popa
inc
mov
push
fdivrl
dec
iret
jmp
sub
mov
rcrl
stos
lds
adc
add
scas
imul
mov
mov
in
or
rclb
sbb
je
negb
mov
mov
out
inc
scas
mov
mov
scas
hlt
cltd
outsb
dec
ja
stos
rorb
xchg
pop
stc
out
add
imul
int
cmpsb
add
cmp
mov
test
int
test
and
leave
jmp
fsubr
cmpb
setg
adc
mov
jmp
rorb
bound
lret
call
push
mov
imul
fdiv
sub
das
mov
mov
cli
jle
inc
fdivrp
fcompl
mov
mov
movsl
shlb
xchg
add
cmp
sub
xlat
jns
and
mov
cmp
jnp
push
popa
push
movsl
daa
orb
inc
jl
fcmovb
pop
imul
adc
jp
stos
gs
lahf
repnz
cwtl
outsl
sbb
mov
lds
aad
inc
cwtl
jae
push
jmp
mov
shll
push
test
xchg
int3
or
fists
xchg
test
pop
addl
test
test
xor
in
cli
xchg
and
fst
das
mov
inc
loop
stos
or
stos
or
sub
xlat
inc
test
and
stc
dec
push
cmp
jge
mov
push
or
and
add
imul
xchg
std
sarl
sub
dec
sbb
rcrb
pop
lahf
icebp
xor
lods
dec
ljmp
push
in
clc
jmp
pop
or
hlt
inc
jno
and
lods
outsl
idiv
adc
mov
dec
sub
in
fs
int
xor
lret
cmp
fcmovne
xchg
xchg
xor
ds
fwait
imul
mov
loope
out
data16
mov
mov
jge
push
ret
pop
loopne
movhps
std
movsl
fnstsw
lds
mov
popf
fildl
fsub
pop
xor
mov
mov
lss
xor
inc
jmp
xchg
push
fcoms
insb
pop
adc
and
mov
insl
or
mov
data16
fidivrs
mov
inc
mov
dec
paddw
insb
xchg
clc
repz
out
or
cmp
sbb
test
rcl
pusha
sub
xor
pop
jl
fs
pop
push
imul
push
or
mov
mov
mov
in
mov
iret
jne
mov
add
pushf
outsl
xchg
dec
insl
and
fstps
add
xlat
and
not
sbb
mov
xchg
pop
nop
xor
cmpsl
mov
sbb
movsb
inc
fisttps
jle
inc
pop
mov
inc
arpl
jle
mov
jl
rcrb
inc
inc
pop
fdivl
mov
int3
in
push
cmp
sbb
dec
les
cmp
jae
sbb
insb
mov
xchg
add
mov
mov
dec
mov
cli
xor
inc
das
cmp
mov
xor
sarl
and
iret
icebp
arpl
stos
or
scas
push
mov
lock
jl
or
cmp
loopne
fldcw
in
daa
xchg
hlt
idivb
stos
push
and
mov
aas
xchg
cmc
mov
and
sbb
std
mov
mov
mov
pop
pop
lods
push
sbb
jno
lds
push
jg
data16
adc
out
or
pop
lock
les
fiaddl
fbstp
fwait
inc
and
daa
loopne
sub
adc
adc
out
stc
cmc
or
add
add
push
lea
rorb
lret
xor
loop
pop
push
push
pop
inc
inc
test
jnp
test
cs
fucomi
push
push
lock
adc
in
sub
inc
ljmp
push
lcall
addr16
fstl
movsl
mov
sarl
fs
and
jmp
decl
cmpsb
int3
outsb
and
pop
rcr
push
jns
or
inc
sub
popa
jle
dec
cmp
sub
push
inc
sbb
or
xor
jecxz
xchg
cmp
xchg
ss
repnz
or
aas
movl
icebp
xchg
jnp
xor
outsb
pop
jecxz
scas
adc
cmpsl
stos
mov
in
pop
lods
in
sub
lods
jbe
lret
mov
xor
scas
xchg
stos
adc
mov
fistpl
loope
mov
pop
ss
gs
nop
mov
movsb
sub
push
lock
adc
cmp
adc
mov
mov
fiaddl
cltd
cmp
inc
or
int
aad
stos
out
sbb
or
into
int
add
hlt
add
lcall
mov
add
in
icebp
inc
xlat
sbb
lahf
cwtl
ljmp
or
mov
xchg
and
mov
sbb
xchg
dec
jb
fs
mov
ss
inc
movsl
mov
sub
out
or
or
enter
lock
xor
push
or
sbb
in
xchg
push
lcall
mov
ret
out
fisubs
bound
mov
insl
out
insb
fdivp
das
add
inc
into
jg
push
adcb
and
or
pop
mov
lahf
pop
test
adc
or
aad
push
xchg
mov
cmpl
out
jne
ja
outsl
xor
push
lret
add
enter
mov
mov
daa
insb
loopne
pop
or
pop
test
enter
sarl
add
sub
push
xchg
mov
jns
movsl
xlat
cmp
clc
and
cmpsb
rcl
jno
jnp
orl
adc
mov
push
xor
loop
mov
bound
cmp
call
jmp
jae
insl
ret
sub
mov
pop
enter
aam
mov
ss
gs
jl
ss
xchg
into
mov
roll
add
push
xchg
lock
adc
ficomps
or
pop
cmp
insl
xchg
insb
sbb
jne
repnz
icebp
int
mov
mov
das
sub
dec
icebp
inc
data16
outsl
icebp
testl
shlb
cltd
sbb
enter
ret
jo
rorl
out
pop
push
mov
movsb
inc
inc
xchg
cld
icebp
leave
dec
jp
je
mov
and
js
into
out
int3
sbbl
pop
js
pop
aaa
push
dec
int
fwait
sbb
inc
pop
pusha
aam
push
xor
pop
add
mov
aad
movl
jle
enter
imul
pop
xchg
mov
or
jns
or
adc
mov
fcoms
shll
divb
mov
cmp
sbb
icebp
pusha
insl
cmp
push
das
jno
out
ss
xchg
mov
std
fxch
inc
xor
minps
and
xchg
popa
gs
mov
insl
gs
add
jns
mov
push
loopne
inc
and
and
cmp
push
repnz
leave
loopne
add
pop
cmpsl
or
outsb
push
pop
or
test
es
sbb
ret
add
imul
lahf
add
icebp
ud1
xchg
pop
or
jnp
mov
add
and
mov
dec
out
in
idiv
or
fistpl
xchg
call
out
mov
popa
mov
cwtl
jp
adc
or
mov
add
cmp
xchg
cmp
push
mov
repz
pop
outsl
inc
sub
decl
mov
fsub
ret
xor
nop
clc
arpl
ljmp
hlt
sbb
mov
jb
xor
je
in
add
js
dec
imul
mov
into
mov
cmc
xor
mov
cmpb
dec
dec
pop
loop
mov
incl
mov
lock
shr
ljmp
andb
hlt
mov
mov
xor
aad
mov
jmp
xor
cmp
cmp
and
inc
ss
fnsave
cmc
push
adc
jmp
pop
popf
sti
dec
lods
mov
bound
movsb
fstl
inc
loopne
cmp
adc
xchg
testb
sub
sbb
sub
movsl
add
cli
mov
subl
fucomip
mov
jnp
cs
ja
test
jbe
pop
jl
mov
loope
jmp
mov
push
dec
cmpb
lret
or
lahf
daa
sahf
lahf
leave
rcll
adc
cmc
fadd
stc
jne
mov
fsubr
mov
jbe
out
or
adc
push
mov
dec
sbb
xchg
int3
ret
pop
cltd
adc
sarb
and
xor
or
mov
pcmpgtb
mov
pop
in
add
hlt
stos
jnp
mov
adc
sub
mov
push
or
mov
xchg
in
sub
aam
repz
mov
fldl
fldt
jnp
aad
sbb
xor
and
fs
xchg
push
fisttpl
pop
adc
and
pop
out
cmc
lcall
inc
daa
cs
popa
ror
fnsave
clc
pop
xchg
push
aad
bnd
cltd
mov
bnd
loopne
stos
mov
xchg
orl
jae
ficoms
inc
das
adc
and
cli
lods
repz
mov
movb
xlat
ss
lcall
inc
mov
leave
sbb
in
and
sbb
fucom
mov
dec
test
cmp
inc
in
lret
test
hlt
cmp
pushf
jle
stos
stc
mov
movsb
push
lahf
fs
xchg
and
test
cmp
or
jo
mov
test
xchg
loope
dec
sub
loop
ret
xor
stc
lea
dec
sbb
pushf
push
dec
pop
xor
mov
js
push
mov
test
xor
nop
jecxz
adc
jmp
mov
jge
repz
das
adc
cltd
adc
ficomps
xchg
scas
je
add
test
xchg
les
pop
scas
stos
push
or
cmp
cmp
out
adc
dec
fwait
rcrl
xchg
icebp
sub
mov
scas
mov
imul
adc
in
push
gs
inc
sar
pop
out
cmp
nop
mov
pushf
xor
js
cmpsb
cli
stos
mov
pop
sbb
xor
push
cmp
and
stc
dec
popa
mov
add
xorb
sbb
sbb
add
popa
ljmp
and
addr16
inc
arpl
mov
xchg
int3
orl
lods
add
outsb
dec
sub
xor
sbb
dec
imul
loope
mov
add
and
fcomps
jl
imul
addr16
push
fildl
stos
rclb
mov
stc
dec
pop
jno
adc
leave
les
push
jno,pn
dec
int
iret
sub
inc
jb
sub
icebp
dec
in
or
fcomps
scas
xchg
mov
ret
mov
shlb
nop
xchg
mov
push
sahf
lods
test
jl
iret
xor
add
es
pop
jmp
int3
or
or
cli
cmp
xchg
add
jno
lret
and
je
sarl
sbb
fstp
gs
pop
outsl
sub
lods
adc
jns
mov
inc
xor
add
xor
dec
int
dec
xor
out
mov
addb
add
jno
mov
mov
pop
pop
mov
lea
fimuls
xchg
orl
dec
ficomps
jb
xchg
fimuls
ds
jns
push
outsl
fimull
lcall
cli
jno
ja
fsubrl
fcomps
xor
mov
cmp
adc
sub
mov
jnp
adc
adc
inc
xchg
xchg
aas
pop
into
stos
nop
out
fistl
popa
add
jb
adc
fdivrl
mov
mov
iret
xlat
dec
sub
or
mov
rcrb
popa
iret
pop
mov
jmp
mov
data16
push
movsb
nop
adc
inc
jge
mov
adc
rol
sub
sahf
pop
sub
in
add
ds
inc
or
in
push
loop
addr16
mov
divb
push
xor
sub
ljmp
dec
mov
fsubs
xor
les
je
jge
mov
scas
bound
gs
dec
jg
jmp
loop
int3
dec
push
lcall
and
enter
inc
and
mov
inc
xchg
mov
lods
mov
or
inc
add
and
push
imul
stos
and
dec
addr16
in
pop
scas
pop
or
imul
or
jb
cmp
sbb
and
pop
sbb
push
mov
xchg
or
hlt
pusha
cmp
xor
js
nop
push
mov
pop
jl
fldcw
outsb
pop
imul
xor
insb
outsb
xorb
pop
push
pop
jns
popa
imul
rcrl
aaa
mov
out
mov
mov
out
inc
insl
popf
int3
push
aaa
stos
sub
mov
sub
xlat
mul
test
xor
sahf
sub
sbb
roll
sbb
jae
mov
pop
inc
popf
pusha
xchg
mov
lahf
add
sti
les
cld
stc
in
push
sbb
mov
cmpsl
and
cmp
stc
inc
mov
xchg
dec
xor
arpl
pop
jecxz
and
dec
inc
adc
ja
aaa
cltd
adc
mov
sbb
mov
cmp
xchg
in
dec
in
pop
cmc
mov
icebp
add
cltd
lock
das
outsl
insb
lcall
jns
lret
pop
and
cli
or
daa
push
repnz
lcall
add
in
ja
enter
jns
inc
test
adc
aam
mov
add
repnz
cmp
jne
jg
ss
push
mov
shlb
pushf
or
push
or
lahf
pop
xchg
push
pop
mov
negl
jns
cltd
mov
std
aaa
cmp
push
icebp
mov
jecxz
fs
cmp
jmp
sahf
dec
ds
ret
adc
push
push
mov
inc
cmc
lcall
jbe
jne
xor
sub
sti
dec
iret
shrb
fdivrs
dec
jle
outsl
pop
xor
cltd
call
dec
fidivl
fistpll
mov
pushl
js
aas
mov
dec
outsb
leave
jle
sub
nop
add
in
gs
cli
pop
adc
or
in
mov
push
mov
and
mov
sbb
mov
dec
lock
cs
sub
push
pop
shlb
lods
test
lods
jbe
jae
jne
xchg
mov
inc
notb
leave
sub
inc
call
in
shr
add
or
push
rcrb
lods
testb
in
ret
mov
and
push
sarb
je
adc
shlb
enter
loope
rcr
sbb
aas
sarb
push
mov
push
xchg
jbe
sub
push
cmc
jge
iret
xchg
pop
stc
mov
fs
subb
xchg
add
xchg
adc
pop
aam
adc
cld
test
xor
enter
dec
xchg
fsub
fisttpl
mov
in
jp
cmp
jmp
ja
adc
cltd
jmp
cmp
and
sub
dec
lret
xor
pop
dec
es
and
aaa
xchg
and
or
fwait
dec
push
lds
jge
inc
fisttpll
nop
inc
pop
jne
xchg
mov
lods
jbe
fs
adc
mov
xchg
imul
lock
jo
data16
test
iret
cmp
jg
cwtl
iret
mov
mov
out
loopne
pushf
rcrl
enterw
push
pop
loope,pt
or
out
cmpsb
sbb
fidivs
push
imull
mov
iret
mov
push
pusha
mov
cltd
test
mov
and
ljmp
data16
jmp
fbld
adc
dec
xchg
dec
jne
pop
neg
std
aaa
scas
pop
jmp
pop
std
test
push
or
and
fnstcw
push
andl
incb
and
in
pop
mulps
cmp
dec
aas
or
mov
xor
out
xchg
aam
jb
insl
push
fdivrl
dec
outsl
outsl
sbb
arpl
mov
jno
cmpsb
and
and
push
ljmp
dec
imulb
pop
dec
cmp
xor
test
dec
cmp
pop
pop
test
jle
bound
inc
push
loop
xlat
xchg
fadd
dec
ror
xchg
out
sti
mov
add
cmp
or
imul
repz
push
or
rorb
ficompl
push
incl
xor
adc
popa
enter
nop
mov
leave
lock
add
aam
xchg
jbe
ret
outsb
sbb
cmp
or
sar
ja
push
lret
and
adc
xor
pop
xchg
mov
mov
outsl
or
psrad
sub
inc
into
push
xchg
jle
mov
push
xor
or
pop
and
pop
pushf
push
lret
ss
aam
add
mov
sbb
loop
lret
fs
cld
xchg
je
mov
sbb
sbb
mov
sbb
jo
dec
out
cmp
das
mov
push
inc
cltd
push
sub
hlt
mov
or
mov
repz
add
xor
shlb
sbb
icebp
xor
mov
stc
mov
cltd
rcl
push
sub
jb
lods
inc
ret
mov
push
jnp
rcl
rcl
mov
into
and
cmpsb
int
dec
test
xor
orl
inc
imulb
test
rcll
sarb
or
mov
push
lcall
adc
repz
adc
int
cmp
mov
mov
adc
cmpsl
mov
jno
mov
dec
pop
jg
in
icebp
mov
mov
imul
or
out
rcll
add
int
scas
mov
mov
mov
and
cmp
pop
les
xchg
clc
je
dec
imul
out
js
mov
insl
push
push
stc
shll
sarl
push
sbb
mov
loope
xchg
sbb
xchg
xor
cltd
mov
mov
iret
push
mov
hlt
adc
gs
push
jno
cmp
mov
loope
add
in
and
xchg
cmpsb
stos
fstpt
cmp
les
mov
ret
mov
jp
or
or
mov
sahf
mov
cmpsb
pop
xor
jno
sahf
movsb
mov
lahf
in
inc
push
stos
adc
xor
out
and
add
mov
icebp
cmp
popa
adc
jno
js
fsubl
pop
push
loope
pop
adcb
filds
jp
cmp
mov
jnp
leave
in
pushf
jp
cmpsb
lret
xor
add
ljmp
jmp
inc
test
sub
sub
sbb
in
cmp
dec
sub
fimull
or
stos
push
jp
and
mov
je
gs
testl
lods
cli
push
xchg
push
jp
ja
int3
insl
jmp
inc
push
arpl
jmp
enter
stos
add
mov
push
stc
shrl
mov
push
clc
xchg
insb
cwtl
stos
cmp
pop
mov
aaa
jns
jle
frstor
jno
push
repnz
js
adc
xlat
arpl
hlt
inc
jns
or
mov
jbe
lcall
push
add
lods
pop
mov
std
or
clc
or
fsubs
popa
lea
fisubs
push
push
xchg
inc
xchg
je
into
fcomps
filds
and
fimull
cmp
addr16
filds
ret
pusha
xchg
popf
sbb
or
push
add
mov
xchg
xchg
loop
adc
faddl
push
cmpsb
ljmp
push
or
imul
out
or
test
mov
sarl
jmp
pop
cmp
mov
adcl
mov
jp
lea
sbb
xlat
out
xor
pop
xchg
je
inc
adc
pop
push
sahf
push
fwait
add
fs
loop
or
xor
lret
clc
andl
mov
mov
xor
jno
jg
pop
leave
mov
sub
jge
xor
mov
push
pop
repnz
xchg
shrl
in
jge
movsl
cmp
mov
adc
mov
mov
push
xor
pop
mov
mov
clc
push
out
adc
out
inc
lcall
fs
mov
push
jl
int3
mov
xor
popa
jb
push
and
and
lods
push
mov
and
data16
mov
das
or
popf
les
into
mov
out
clc
pop
dec
xor
lea
push
lock
mov
mov
and
incb
sbb
fcompl
adc
lods
imul
mov
sub
loope
push
dec
mov
cmp
ss
mov
pop
mov
addr16
rol
jns
lea
adc
andb
sub
mov
push
jno
data16
or
jns
sub
or
sub
xchg
clc
aas
or
xchg
les
loop
cmc
or
lods
test
fs
cmpsb
or
test
xlat
push
out
add
dec
cmp
stc
fwait
aam
and
out
stos
pop
into
test
int3
loope
mov
popa
cmp
mov
je
enter
sbb
lret
iret
jl
xorb
and
mov
aas
enter
mov
fisttpl
mov
sub
sbb
push
cltd
or
cwtl
nop
pop
pop
test
outsb
add
ljmp
jne
mov
push
std
lds
pop
or
test
movsl
push
stc
loope
testb
repnz
jecxz
ja
push
lar
mov
and
outsb
insl
mov
jne
ja
ds
fptan
popa
push
jecxz
ret
fiaddl
push
inc
dec
adc
cmpsl
pop
push
dec
cmpsb
inc
pop
jne
adc
xor
xchg
cmp
mov
scas
add
mov
push
cmp
das
cmp
data16
sti
push
clc
lea
pop
push
adc
or
pop
add
in
inc
stc
add
jne
aad
and
xchg
add
inc
mov
lea
fwait
sub
imul
std
sti
mov
cwtl
rcr
lock
aad
and
jmp
arpl
cmpsb
ret
in
xlat
aas
sbb
sahf
out
add
pop
xchg
push
imul
or
movsl
fistl
aam
mov
ja
test
pop
roll
int
sbb
xor
fucomip
in
jo
jns
daa
mov
add
popf
cmpsb
adc
call
jl
mov
adc
xlat
inc
mov
mov
xchg
or
idivl
add
dec
aad
and
or
or
repz
call
adc
int3
cmp
xchg
push
pop
push
stc
cmp
in
dec
jp
pop
cmp
jae
mov
pop
push
scas
add
mov
pop
jg
jl
dec
mov
cli
lahf
add
jle
push
lret
jns
sbb
loop
push
mov
jmp
movsb
lahf
aam
jl
pop
mov
and
pop
xor
jle
mov
out
xor
mov
pop
add
lds
jae
add
fisttpl
sub
push
add
and
cmp
pusha
jb
dec
xlat
mov
imul
fldenv
enter
adc
add
jg
pop
je
jp
das
jne
aaa
adc
mov
mov
inc
dec
cmpsl
add
dec
push
jno
xor
xlat
push
mov
mov
lret
pop
dec
cwtl
fsubs
jge
movsl
out
roll
sub
xor
fs
cwtl
in
out
jecxz
push
lret
jbe
add
fwait
push
fistl
aas
rcll
adcb
adc
dec
push
push
sbb
jae
or
jo
rolb
pop
adc
push
je
inc
stos
aam
lcall
pop
mov
xor
popa
adc
jnp
popl
jmp
out
cs
lcall
arpl
mov
dec
outsb
ja
je
cltd
fdivrs
or
sbb
push
dec
or
inc
sub
rorb
adc
inc
mov
test
fldt
xchg
mov
mov
xlat
movb
xchg
sub
int3
nop
pop
xchg
lds
jns
loop
test
add
jle
das
loopne
jecxz
lret
mov
mov
dec
data16
int3
pushf
and
or
call
stos
je
arpl
in
jo,pn
movsb
xor
push
sub
cs
cmp
fst
lret
add
testb
add
out
in
stos
xchg
adc
fcom
pusha
mov
lcall
addr16
adc
push
push
dec
dec
sbb
and
dec
add
inc
lods
es
shlb
fistpl
dec
cmp
pop
into
push
sub
cmc
fnstsw
lea
cmp
iret
cld
push
and
scas
cmpsb
adc
cmp
xchg
outsl
mov
dec
out
rcrb
pop
mov
sbb
rol
mov
shll
ljmp
loopne
mov
add
xlat
xchg
aaa
pop
xlat
clc
jno
or
mov
lods
pushw
jge
or
lahf
add
aam
loop
pop
mov
loopne
xchg
xchg
push
fnstenv
pusha
out
stc
pop
mov
jmp
push
and
pusha
and
icebp
inc
cmp
jns
jo
xchg
cli
inc
adc
sarb
into
mov
pop
insl
jmp
cld
mov
fimull
add
pop
mov
shl
repz
xchg
pop
out
xchg
imul
rcrl
dec
cmpsl
jne
dec
jmp
test
repnz
xchg
push
mov
int3
mov
rorl
pop
jl
push
jecxz
jge
add
lcall
imul
loopne
aaa
outsb
adc
push
rcll
popf
enter
or
fbld
std
lcall
lret
mov
stc
sub
cmp
rcl
dec
push
rolb
mov
or
mov
gs
xchg
sub
mov
jnp
les
and
les
xor
lret
stos
pop
jmp
int3
adc
xor
fscale
loopne
fwait
mov
insl
jl,pt
sub
ds
divb
ss
xor
jno
sub
fs
lock
imul
int
fcompl
idivb
sub
mov
in
mov
ljmp
mov
inc
sub
xchg
hlt
and
vorps
aam
or
addr16
out
mov
jge
js
cmp
cmp
loope
sub
in
mov
js
pop
sti
imul
xchg
mov
das
sbb
sub
add
cs
ss
enter
jp
sarb
pop
add
repnz
rolb
cmpsl
push
cmp
adc
inc
scas
ja
fmul
fwait
mov
xchg
jb
sar
popf
aaa
mov
inc
inc
jb
arpl
or
mov
imul
pusha
push
gs
outsl
adc
ficompl
and
or
mov
adc
jnp
in
mov
ljmp
imull
into
jmp
fcoms
imul
daa
sbb
les
pop
fdivl
outsl
cmp
xchg
inc
and
inc
fwait
adcl
mov
and
sbb
jg
lcall
lods
gs
test
inc
cmc
jbe
test
aas
or
adc
xchg
push
sbb
adc
ffree
add
ret
sbb
cld
nop
sarb
jnp
fidivrl
cmc
jae
jle
jge
mov
je
push
xor
testl
lea
push
cmp
fwait
push
xchg
push
adc
sbb
in
cs
pop
dec
jns
pop
pop
addr16
and
aad
xor
popa
cmpsb
adc
imul
push
mov
sub
adc
lock
mov
mov
pop
call
pop
sarl
mov
mov
arpl
adc
xlat
sbbb
pop
out
lea
adc
cmpsb
xor
mov
adc
jb
jmp
hlt
pop
add
mov
jno
push
test
rolb
push
imul
es
pop
bound
jae
pushf
cs
int
push
lret
je
jl
inc
stc
cwtl
inc
sub
ret
cmc
fisubrl
inc
mov
pushf
and
mov
jns
hlt
flds
out
mov
mov
pop
or
in
inc
mov
into
fnstsw
pop
xchg
negb
xor
gs
mov
fsubrs
lcall
repnz
jns
repnz
mov
pop
sbb
add
mov
xchg
sbb
xchg
or
lcall
test
les
rcr
fwait
xchg
int3
imul
stos
add
jns
nop
test
cmc
pop
push
add
pop
adc
sub
dec
xor
lret
pop
add
add
add
adc
mov
xor
insb
rcl
sar
iret
push
dec
pop
enter
and
std
or
add
mov
jb
enter
arpl
stos
xlat
pop
ret
sbb
stos
movsl
das
scas
popf
call
ret
pop
roll
inc
jnp
push
jecxz
xchg
test
inc
in
addr16
jne
cltd
mov
sbb
mov
push
mov
dec
pusha
aad
jb
dec
mov
cmc
and
repz
aam
lds
js
cmc
addr16
push
push
sbb
sar
sub
mov
loope
sbb
sets
xor
pop
add
shr
imul
mov
sbb
and
mov
adc
inc
add
icebp
aad
loope
orl
push
xchg
divb
xchg
mov
leave
add
movsb
fwait
les
arpl
clc
adc
iret
sub
fsubrp
addl
out
sbb
imul
jge
out
in
mov
sub
je
arpl
imulb
push
mov
je
mov
xor
cmp
adc
jns
stos
dec
adc
pushf
mov
js
push
pop
ret
sti
adc
cmpsb
hlt
push
shrl
insb
pushf
push
cld
and
xchg
scas
shr
roll
lods
xor
fildll
loop
in
push
cmc
xor
insb
xchg
les
shrl
movsb
sub
pop
mov
jo
jae
fidivl
icebp
cmp
mov
sbb
fwait
sbb
xor
and
xchg
sbb
adc
mov
xchg
test
pop
add
mov
das
and
sbb
mov
xchg
mov
adc
lret
sarl
outsl
or
inc
stos
xlat
aad
push
in
xor
lods
dec
inc
aad
into
sbb
in
jmp
fstpt
cmp
popa
push
fisttps
stos
fstpt
enter
and
jbe
jo
push
inc
stos
dec
int
push
adcb
loopne
neg
stc
test
js
lods
imul
loop
dec
and
shll
cmp
sbb
int
int
cmpsl
adcl
mov
xchg
push
not
cmp
lds
negb
jb
aas
in
adcl
or
sub
and
jb
and
je
test
or
arpl
ss
mov
or
mov
dec
gs
or
shl
mov
jb
cmpsl
lods
sahf
mov
fnstcw
das
mov
bound
int3
pop
gs
mov
add
test
cmp
add
mov
xor
nop
pop
lock
mov
pop
ret
push
and
or
imul
in
mov
xchg
mov
dec
popf
ret
out
mov
stc
je
lret
sbb
repnz
xorl
sahf
and
ljmp
jp
clc
lods
in
mov
jbe
sbb
jns
frstor
cltd
jmp
in
adc
lds
and
push
sbb
adc
xchg
jne
mov
bound
push
mov
xor
add
mov
xchg
xlat
mov
out
rclb
mov
jmp
test
fxch
mov
inc
ja
lahf
dec
pop
mov
out
sbb
or
jl
sarl
sub
sub
xor
or
jmp
orb
jmp
testl
and
inc
orb
or
sbb
mov
out
jg
sbb
pusha
xor
fwait
cmp
dec
out
out
dec
inc
xchg
in
test
test
pushf
pushf
mov
lods
mov
xchg
pop
int3
adc
mov
mov
xor
in
sbb
adc
loopne
jb
cmc
jecxz
lret
sub
fwait
je
insb
adc
and
pop
dec
pushf
in
and
shlw
mov
shlb
js
add
jae
and
pop
loope
imul
pop
xchg
stos
sahf
mov
jge
repz
sub
int
cmpsl
in
mov
push
sbb
in
repnz
mov
or
and
je
sbb
mov
ss
or
xor
sahf
inc
mov
sbb
xchg
xor
or
into
mov
js
test
clc
int
push
push
or
push
dec
jg
mov
sub
insb
test
jmp
in
mov
fwait
sbb
pop
int3
inc
add
icebp
sub
addr16
fcoml
push
sub
dec
popf
inc
lods
dec
sub
jae
fwait
jb
in
subl
into
mov
inc
sti
pop
fistpll
arpl
rcll
aaa
arpl
inc
xchg
mov
nop
outsl
hlt
pop
sub
lcall
jne
sub
push
lret
ss
add
inc
cmc
ficoml
lods
sbb
dec
pop
out
sub
pop
mul
and
mov
dec
aad
sbb
or
cmp
std
test
jb
repnz
mov
cmp
add
xchg
xchg
mov
arpl
sub
mov
sbb
scas
cmp
test
mov
ss
push
cmp
push
jbe
mov
mov
xchg
icebp
lds
and
or
xor
sbb
xchg
mov
ret
add
sub
xor
xchg
pop
jae
xor
jne
mov
je
mov
push
outsb
xchg
adc
mov
movhps
mov
gs
sub
cmp
orb
pop
lods
and
ret
lods
pop
xchg
rdmsr
ljmp
xchg
mov
out
mov
mov
xor
and
push
movsl
icebp
mov
pop
fwait
inc
out
jle,pn
cmpsl
loopne
test
repz
add
mov
test
cmc
inc
aad
clc
dec
mov
sub
int
adc
add
call
mov
xlat
call
xchg
mov
mov
mov
out
out
stc
jge
dec
push
inc
push
xor
add
pusha
test
negb
loop
outsl
fstpl
inc
pop
fisttpll
xchg
jbe
cwtl
mov
addr16
addr16
inc
push
add
aas
push
mov
xor
in
jae
rol
add
mov
insl
arpl
stc
movsl
pop
cwtl
push
jo
xchg
flds
sub
dec
repz
bound
aad
dec
popf
je
mov
mov
mov
jb
cmp
adc
xchg
cltd
inc
xchg
loop
popf
mov
pop
lret
insl
add
push
adc
pop
aad
and
push
mov
aam
pop
or
cmc
filds
std
mov
jno
arpl
cli
stc
mov
js
lods
movsb
scas
shll
mov
stos
loop
sbb
jp
sarb
or
scas
sbb
jae
jns,pt
movsl
sub
ss
loopne
xchg
mov
bound
and
orl
add
sbb
jae
cmpsb
lret
xchg
nop
loope
mov
cmp
xor
cmp
aas
dec
rcr
pop
add
cmc
mov
cmp
lods
adc
mov
lcall
cltd
dec
cmp
aam
mov
dec
idiv
and
cltd
or
aas
push
adc
nop
pop
push
neg
ret
sub
ljmp
pushf
call
enter
sbb
cmpsl
xchg
stos
imul
clc
das
popf
xchg
std
push
lcall
and
push
test
test
popf
das
lret
sub
jge
jb
or
mov
lock
dec
mov
lock
call
xchg
pop
cmp
or
push
push
jb
into
push
notl
adc
rcrl
hlt
fbstp
add
stos
sub
out
fidivrl
insl
mov
shrl
lcall
xor
adc
pushf
dec
fs
orl
inc
or
inc
inc
pop
aas
dec
imul
push
sbb
jg
cmp
push
je
push
push
or
pop
push
sub
dec
lret
shll
or
push
dec
cmp
test
sub
push
xchg
jg
mov
imul
add
mov
js
imul
sbb
push
cmp
sub
jb
in
pop
mov
jg
sbbb
mov
sar
sub
xchg
mov
jnp
aaa
shlb
stos
cmp
cmpsb
pop
mov
nop
xlat
mov
mov
lods
xchg
ficoml
es
dec
xor
and
lods
insb
push
push
fst
into
cmpsb
sti
data16
adc
rorb
add
test
in
out
cmp
inc
sub
sbb
into
fwait
out
addb
jo
ds
in
xchg
inc
dec
aaa
inc
push
xchg
aaa
dec
xlat
mov
sbb
rolb
push
xor
and
cld
xchg
jg
js
push
add
dec
pushf
sub
jbe
in
jno
sbbb
dec
dec
dec
int3
dec
pop
js
mov
pop
push
daa
mov
mov
xchg
fwait
pop
cmpsb
ds
aam
ja
in
push
jb
jmp
xor
adc
pop
mov
xor
sarl
ja
lcall
sub
mov
mov
nop
sbb
fstl
dec
imul
aam
pop
fistps
add
les
sbb
xchg
xchg
push
push
call
inc
sub
in
sub
jp
mov
out
cmpsl
incb
sbb
out
mov
push
pusha
mov
daa
sahf
andl
leave
or
data16
fdivrl
mov
hlt
ficoms
fsubs
test
rcrb
rolb
rcr
xchg
xchg
jno
loop
xor
jnp
loope
jmp
inc
dec
lods
add
add
xchg
ret
inc
testb
cltd
pop
lret
icebp
das
sub
mov
jns
push
js
dec
adc
movsl
jb
aaa
aad
add
push
sub
cmp
push
les
je
or
out
adc
and
daa
hlt
or
add
xor
fld
jno
sub
mov
inc
mov
leave
test
sahf
dec
lret
mov
es
jp
lock
ficoml
cmpsb
lds
add
pop
nop
cwtl
aas
or
mov
push
pop
call
jne
xchg
push
loopne
jne
mov
add
arpl
subl
sbb
mov
sub
xchg
lods
jb
aaa
jmp
clc
dec
mov
shll
mov
adc
dec
and
or
add
inc
jns
popl
sub
and
fsubr
mov
cmp
xlat
aas
mov
or
add
repz
ljmp
flds
lret
dec
push
out
inc
xchg
inc
les
into
xchg
cltd
and
or
lahf
sub
mov
notl
cmp
sbb
ljmp
gs
loop
xchg
lea
inc
mov
mov
lahf
dec
or
out
jnp
inc
jo
lods
pusha
jns
int
xchg
fcoml
shll
orb
cld
pushfw
pop
jle
mov
jecxz
sbb
repz
loopne
sbb
push
insb
xor
es
int3
jecxz
xor
shll
iret
push
test
push
jecxz
cmc
and
or
nop
mov
mov
adc
push
jnp
scas
jg
and
jl
aam
es
test
add
fcompl
xlat
push
pop
add
push
call
cmp
sahf
sub
mov
jle
mov
pop
sub
or
mov
dec
pusha
mov
jg
pop
insb
das
iret
xchg
pop
mov
adc
pop
inc
xchg
popa
cmp
jne
cmp
movsb
cmp
and
dec
notb
mov
xor
pop
daa
fldcw
imul
xor
jecxz
call
ret
mov
popf
repz
xchg
in
adc
adc
and
int3
aaa
mov
add
sub
push
aam
nop
push
xchg
dec
sahf
arpl
decb
sti
xlat
test
aam
test
xchg
frstor
cld
stos
push
jns
ret
fwait
jb
adc
ds
and
ljmp
and
push
decb
es
or
sbb
fdivr
call
out
xchg
and
js
cvtps2pd
cmpsb
aam
inc
push
fidivrl
sbb
loop
mov
ficoml
in
out
sub
ljmp
imul
sbb
fidivl
mov
adc
repz
or
fisubrs
xor
movsb
test
stos
mov
or
inc
test
rorb
enter
dec
sbb
inc
movsl
jnp
and
int
mov
inc
jae
dec
sbb
pop
pop
inc
enter
fisttpl
cmc
pop
mov
sahf
add
iret
testl
mov
and
mov
dec
cmc
sub
or
call
nop
lahf
mov
sbb
jne
xlat
sub
cmp
mov
loopne
dec
mov
add
inc
shl
movsl
sbb
xchg
dec
dec
pop
test
sbb
push
les
ja
adc
push
sarb
or
jmp
pop
testb
pop
arpl
adc
lea
sarb
sub
sbb
push
cld
xchg
push
and
inc
roll
stos
xchg
add
mov
adc
add
movsb
aad
pop
mov
inc
daa
ss
push
mov
enter
std
out
fs
daa
shrl
clc
pop
das
cmpsl
adc
xor
mov
scas
adc
cmp
aam
xor
mov
sub
pop
shlb
imul
xor
push
push
cmp
bound
mov
pop
pop
jecxz
pop
mov
subl
xchg
mov
inc
enter
mov
inc
sbb
inc
add
std
dec
mov
jb
mov
xchg
aad
sbb
nop
test
imul
adc
inc
sbb
pop
out
mov
jle
jmp
mov
popa
test
pushf
pop
aaa
cld
xor
adc
sub
dec
mov
pop
out
addb
rep
ffree
jmp
mov
cmp
xchg
xchg
and
lret
addr16
dec
dec
ljmp
cmp
sub
mov
ds
lahf
jmp
xor
sti
xchg
loop
mov
mov
xchg
adc
aad
ss
mov
jb
shlb
stos
jge
sbb
push
dec
rolb
notb
aad
or
xchg
xor
fs
push
mov
lcall
mov
cltd
jmp
pop
pop
mov
scas
adc
mov
inc
xlat
xchg
cld
dec
jo
es
push
sbb
scas
xor
jno
sbb
mov
push
push
mov
stos
or
lods
jmp
jle
jl
sub
cmp
inc
xchg
xchg
pop
cmc
insl
cmp
jno
les
out
test
dec
cld
xor
popf
leave
lret
out
jnp
iret
mov
pop
loop
fs
aam
loopne
mov
push
in
xchg
rcl
xor
js
in
xor
icebp
idivl
push
or
fstps
lea
les
loope
mov
repnz
add
cld
jns
xor
add
xchg
mov
push
movsl
aaa
mov
cmp
pop
lods
pop
fwait
add
daa
in
push
jmp
das
cmpsl
and
mov
je
xchg
mov
push
add
jmp
cltd
adc
jle
dec
int3
mov
mov
cld
or
and
jae
sub
cmpsb
idivl
cmp
sub
iret
push
arpl
and
sbb
push
xchg
lods
out
mov
or
mov
add
inc
push
fwait
jl
add
and
repnz
mov
jnp
mov
cmpl
in
xor
ljmpw
pop
and
adc
jne
pop
mov
rcrb
jno
imul
std
adc
and
push
jecxz
fs
inc
idiv
xchg
je
jg
mov
daa
xchg
popa
cmpl
jo
push
add
jecxz
add
into
pusha
and
add
lcall
scas
pop
lods
pop
fildl
xchg
push
fmull
push
outsb
rclb
arpl
sub
xchg
roll
pop
shlb
adc
repz
fisubs
les
les
adc
out
data16
push
std
sub
dec
inc
push
aas
outsb
pop
fnstsw
repnz
outsb
inc
daa
rorl
jbe
adc
jbe
repz
mov
sub
sub
lods
xchg
shrb
dec
jecxz
dec
idivb
add
sub
and
pop
sbb
adc
testb
sbbl
scas
adc
popf
jb
add
out
or
cmc
inc
xchg
inc
loop
pop
jno
sub
and
out
ljmp
mov
roll
mov
jo
in
cmovb
scas
add
push
fnstcw
sbb
mov
ja
adc
insb
push
stc
dec
lcall
aas
jl
and
mov
pop
xchg
aad
pusha
mov
repnz
dec
adc
mov
les
movsl
adc
dec
mov
add
jp
and
mov
push
std
inc
cmp
fists
xchg
sbbb
push
pop
cmc
je
test
mov
push
mov
sbb
inc
scas
lahf
mov
jle
fsubs
jo
or
fldt
sbb
aaa
in
add
xor
pop
sub
test
ds
jo
jne
movsl
popa
sbb
ret
pop
add
out
and
lds
adc
inc
mov
fidivl
pop
test
scas
or
pop
push
scas
cmp
jecxz
stos
sbb
out
jp
pusha
inc
lahf
dec
sbb
and
aaa
mov
and
jle
addr16
xor
fiaddl
movsb
test
push
xor
lods
xchg
outsb
xor
xchg
jbe
test
bound
out
xchg
rorb
or
mov
dec
in
mov
icebp
mov
mov
test
js
outsb
push
cwtl
ljmp
pushf
negb
incl
fsubrl
pop
idiv
mov
pop
pop
mov
inc
push
sub
scas
xor
jae
js
fs
call
jg
push
ret
sar
and
mov
cmpsl
jge
mov
adc
add
mov
test
out
xchg
mov
mov
loope
call
push
jp
xlat
jmp
imul
or
cli
fs
sbb
add
push
fidivl
nop
mov
or
jns
pop
test
into
add
sub
rolb
and
ljmp
test
out
pop
xor
aaa
pop
sarb
cmpsb
jnp
xor
inc
outsb
fists
pop
iret
in
inc
jae
jae
adc
js
xchg
pusha
dec
dec
add
mov
add
aad
loope
sbb
and
imul
ds
lds
pop
loopne
adc
mov
xor
push
adcb
std
in
ret
lock
lahf
sbb
out
test
mov
adc
fsubr
xlat
icebp
test
daa
and
or
dec
jbe
dec
sub
andb
imul
jecxz
jp
bound
lret
pop
dec
ds
scas
sti
mov
mov
lock
jno
mov
inc
mov
sti
ljmp
aad
push
pop
mov
inc
mov
mov
mov
pop
jb
ret
fisubrs
lret
and
movsl
push
inc
push
cwtl
push
dec
push
push
xor
push
xchg
jmp
push
pop
test
in
mov
cmp
insb
stos
fwait
or
jae
fs
fnstsw
mov
mov
mov
and
loope
rolb
pop
imul
loop
sbb
shlb
push
popf
pop
jle
ficompl
sub
out
mov
das
mov
sarl
out
dec
movsb
mov
fsubr
les
loope
imul
cmp
popl
or
jg
sub
mov
dec
jbe
mov
mov
gs
or
js
icebp
push
push
into
pop
fs
stos
and
pfacc
pop
inc
or
repz
adc
imulb
test
sbb
sub
adc
push
adc
cmp
fcomps
xor
outsl
adc
sub
iret
dec
sbb
or
push
cmp
sub
push
mov
sbb
shr
jae
xor
jae
lods
dec
cmpsb
neg
sub
stos
test
jg
in
mov
ficomps
out
lahf
std
test
inc
and
sahf
insb
shlb
test
dec
dec
or
lahf
jecxz
dec
pop
push
mov
push
lods
mov
rcrl
shl
daa
movsb
imulb
insb
ds
add
sbb
pop
sub
sub
cmp
mov
ret
xchg
cmpsb
xor
repnz
dec
ret
std
and
out
cmp
mov
fisubrs
inc
and
pop
pop
ret
jmp
pushf
cmp
sub
gs
popa
rcrb
cs
mov
out
into
jnp
adc
adc
das
lods
popa
add
mov
push
push
jmp
mov
orl
or
pop
sub
ror
xchg
jb
inc
or
je
sbb
std
loopne
out
and
cld
xchg
mov
adc
shlb
es
lods
push
pusha
fisubrs
loop
cltd
in
cmpsb
jp
sbb
cmp
jecxz
ljmp
or
je
push
xchg
sbb
cmp
sbbb
cli
pop
pop
and
pop
mov
movsb
mov
je
cltd
cmp
paddusw
xchg
scas
mov
lods
daa
ljmp
jmp
mov
imul
dec
jae
xchg
scas
sbb
test
data16
sahf
subl
add
push
push
mov
inc
lret
jne
shlb
pop
in
dec
rep
out
mov
or
pop
or
jg
mov
mov
mov
mov
adc
mov
fldt
out
pop
sar
push
rol
sbb
lahf
into
lahf
loope
mov
inc
pop
mov
mov
and
and
pop
inc
sbb
sub
adc
add
mov
popa
test
stos
mov
dec
mov
and
mov
pop
insb
mov
push
fistpll
sub
fsub
dec
call
lea
jo
pop
sub
fdivs
push
movsb
cmp
sbb
aad
int3
push
pop
jb
cmp
push
mov
jns
and
mov
lea
hlt
mov
mov
and
dec
lods
adc
aas
pop
or
push
inc
or
add
lds
sbb
cmp
mov
hlt
enter
xor
mov
add
xchg
mov
cld
icebp
sbb
jb
jns
mov
in
pop
clc
xchg
sarb
jecxz
fwait
xor
push
jne
lods
testb
sub
add
mov
jns
or
lock
rcr
cmp
repnz
loop
mov
stc
pop
and
imul
mov
cmc
scas
push
lds
shl
xchg
cmc
data16
mov
mov
pop
rcr
mov
mov
lods
imul
mov
in
gs
or
movsb
push
scas
aaa
xchg
and
pop
popa
inc
fcmovnb
xor
pop
mov
rcrl
mov
das
sub
daa
push
orb
cmc
xchg
imul
es
ret
and
adc
stos
cmpsb
insb
outsb
pop
pop
dec
jno
pop
stc
cmp
imul
dec
xchg
fisubrs
add
or
or
into
xchg
lock
or
sub
jnp
lahf
ljmp
dec
hlt
jmp
and
xor
or
cltd
inc
push
adc
sub
aaa
in
js
ds
pop
push
jmp
dec
pop
dec
mov
xlat
and
pop
imul
mov
scas
in
cmp
movsb
fwait
dec
nop
ret
mov
push
push
adc
dec
xchg
loopne
pop
in
lock
cwtl
subl
divl
inc
and
push
xchg
sahf
cmpsl
cmc
push
je
inc
inc
mov
arpl
mov
ss
mov
push
mov
adc
daa
and
push
fdivl
dec
cmp
aad
cmpsb
stos
mov
xchg
cmpsb
lret
inc
cmp
xchg
xchg
xchg
mov
pop
test
nop
add
cmpsl
xor
cmp
sub
and
push
push
scas
xchg
inc
aaa
popf
cmc
mov
or
push
push
into
mov
dec
xchg
fwait
clc
and
js
cs
movsb
imul
lea
cmp
mov
push
lds
rolb
mov
or
or
xchg
adc
gs
fwait
xor
enter
popa
jp
xchg
call
cltd
pop
mov
lret
loopne
scas
jl
jo
jmp
test
lock
push
aad
pop
in
sbb
mov
mov
std
or
nop
and
cmp
add
flds
rorl
cmp
repnz
fisubs
jb
sbb
outsb
vdivsd
stc
inc
sbbl
out
mov
popa
mov
shlb
mov
or
hlt
int
popa
dec
mov
mov
lds
dec
xchg
test
ret
or
js
xor
leave
jmp
loope
mov
stc
sbb
dec
pushf
fadds
sub
adc
mov
pop
je
pushf
nop
or
sahf
xchg
ds
or
add
mov
add
pop
outsl
push
dec
in
fstps
sbb
mov
rep
pop
jne
rolb
hlt
xchg
pop
adc
xor
dec
rcl
fdivl
lds
mov
sbb
inc
addl
arpl
stc
inc
mov
inc
mov
add
jl
jae
shlb
add
cmp
add
into
lret
fisttps
xor
mov
pusha
cmc
cmp
xchg
jle
push
sbb
push
adc
js
cmp
fdivr
jne
xchg
push
repnz
pop
push
test
add
cwtl
pop
dec
cs
fbstp
pop
adc
sbb
shlb
cmc
aaa
xchg
sbb
negl
mov
insl
jmp
loopne
cmpsl
test
push
mov
sub
jge
adc
push
repz
and
scas
adc
mov
inc
ret
or
push
test
into
ficoms
in
std
setle
popf
js
imul
ja
pop
xor
cmp
inc
push
sbb
jbe
popf
gs
cmp
data16
cwtl
dec
stos
ljmp
dec
inc
xchg
nop
mov
out
shlb
sbb
je
xor
xor
sub
pop
push
js
imul
je
shrb
mov
pushf
cmpsl
pop
add
adc
dec
fdivl
xchg
enter
sbb
jle
jns
sub
ret
repnz
fstps
repz
andl
pop
jnp
xlat
cmp
inc
arpl
sub
gs
add
xor
ret
int
test
adc
dec
add
cmpsl
imulb
in
xor
dec
ret
dec
pop
mov
sar
or
fistpll
pop
adcb
adc
data16
test
ss
ja
mov
aad
enter
lea
scas
or
jmp
repnz
cmpsb
fildll
inc
scas
push
inc
dec
push
or
lret
push
pop
xor
pop
cmp
mov
mov
sbb
das
fsubr
jecxz
ret
sub
dec
sbb
cmp
lcall
loope
mov
dec
repnz
aaa
add
jnp
clc
cli
push
mov
lcall
add
lret
xchg
pusha
lods
jnp
lds
or
ficomps
dec
or
mov
lock
out
inc
or
cmpsl
push
mov
cmpsb
rcrb
sar
pop
dec
jns
test
data16
nop
negl
inc
inc
ja
cltd
outsl
mov
cmp
pop
xor
inc
test
test
lret
loop
jo
rorb
test
dec
repnz
andl
dec
xor
imul
test
stos
adc
jbe
popf
cmp
sub
lret
aam
les
push
inc
dec
lret
dec
push
add
mov
sbb
mov
jbe
dec
sub
outsl
jno
fimuls
fwait
and
imul
add
dec
imul
in
add
push
xchg
rol
inc
repnz
rcl
sub
xor
lods
ja
pop
sbb
iret
mov
or
shlb
jmp
lahf
jmp
sahf
je
loop
adc
push
xchg
cmp
inc
xchg
push
mov
xchg
inc
clc
and
daa
jle
rcr
addb
jo
inc
pop
push
popf
inc
clc
add
xor
adc
jnp
cmpsb
test
add
mov
or
pop
xor
lret
add
sbb
scas
dec
dec
cmp
nop
rcll
out
pop
xchg
popl
stos
cltd
faddl
or
dec
es
cmp
cmp
negl
push
push
aam
stos
sbb
and
pop
out
or
clc
sbb
sahf
lods
int3
mov
and
mov
mov
or
inc
xor
inc
push
or
mov
lods
sub
test
sub
mov
outsl
and
adc
xchg
idivl
lods
adc
in
loopne
daa
mov
pusha
test
sbb
push
dec
nop
loop
dec
mull
pop
int3
mov
and
push
sti
push
notb
inc
inc
jb
mov
jl
or
scas
push
jae
enter
push
ds
pop
xor
mov
lea
shll
jnp
adc
jecxz
mov
out
push
stos
mov
in
sbb
jnp
cmp
dec
or
fs
sarl
pop
adc
and
int3
adc
and
inc
out
xchg
mov
xchg
inc
movsl
xchg
xor
ds
int
jecxz
in
fdivr
cmp
dec
sti
mov
cmpl
push
movsl
push
mov
xchg
fisubrl
xchg
data16
hlt
sahf
lret
jp
fcomps
push
cld
lahf
xchg
clc
fst
aam
inc
lods
neg
stc
lret
xchg
jle
jnp
out
jg
cld
cmpsl
insb
pop
mov
sub
insl
mov
cmpsl
xorl
sub
out
cmc
fcmovnb
mov
xor
mov
add
lock
pop
lods
xor
das
cmovl
cmp
ss
lret
movsl
xlat
sub
and
fs
mov
dec
pop
xchg
neg
enter
sbb
clc
les
push
pop
inc
add
mov
xlat
push
cmp
sti
data16
xchg
imul
inc
mov
sbb
sub
fisttps
cld
inc
lds
pop
rorl
xorl
pop
pop
mov
and
sbb
mov
pop
mov
rcrl
push
jne
dec
ret
in
rol
pop
shl
adc
bound
jne
cmp
int
jge
test
sahf
adcb
add
stc
pop
jae
jns
dec
outsb
push
jg
add
jp
fidivrl
jb
ficoml
int3
push
push
xchg
jno
mov
adc
in
lret
and
inc
xchg
xchg
into
xlat
jnp
popa
loope
dec
fs
adc
loopne
insl
inc
imul
or
push
pusha
cmp
lret
push
popa
jp
pop
jb
xchg
jae
aam
xchg
jns
push
push
enter
xchg
sarl
cwtl
stos
adc
std
add
mov
sub
mov
sub
push
jle
add
lcall
jmp
outsb
aam
sub
sub
stc
xor
fisttpl
mov
push
arpl
or
mov
outsl
xchg
mov
push
ficoms
inc
inc
adc
sbb
inc
and
xlat
ds
insb
aad
rcl
addb
add
iret
aas
jo
xchg
cmpsb
mul
andl
pop
cmp
and
sbb
addr16
mov
mov
push
roll
and
adc
clc
lahf
inc
stos
das
or
dec
push
sar
cmp
and
mov
mov
imul
cmpsb
iret
or
ljmp
cmp
lcall
adc
xor
mov
push
and
ficompl
out
les
xor
negb
xchg
bound
movsl
dec
jbe
cmp
je
add
jb
cmpsl
push
andl
sbb
sbb
pushf
fisubrs
repz
pop
jle
jle
xor
jbe
fcomps
js
mov
mov
daa
push
inc
dec
repz
mov
push
das
insl
mov
sub
push
in
rclb
mov
and
lret
aad
rcrl
push
movsb
rorb
cmp
loope
fs
push
insb
xchg
fisttps
rsm
gs
cmpsl
xor
lcall
mov
or
in
data16
test
fs
fsubrl
jp
xchg
dec
push
sub
pop
dec
lret
cmpsl
lock
jbe
leave
and
sub
in
dec
dec
test
stc
xchg
andb
jmp
test
stos
push
pop
test
scas
pop
lret
sbb
push
fildl
cmp
leave
scas
pop
xchg
push
pop
mull
or
mov
inc
jb
out
inc
out
out
ss
xchg
jb
xor
pop
push
dec
xor
idivl
stos
imul
jg
bnd
pop
pusha
mov
inc
ja
mov
ret
es
jne
mov
cmp
mov
cld
fdivrl
cmp
inc
test
push
mov
or
mov
fisttps
and
mov
aas
cmp
add
test
cmp
das
pop
sub
push
adc
inc
cmp
lods
loope
cs
mov
fcomps
adc
sqrtps
repz
stos
adc
xchg
cmp
mov
mov
fs
cmpsb
or
outsb
lods
fwait
lods
lcall
bound
add
cmp
mov
cld
or
in
dec
fbstp
clc
shlb
mov
sbb
data16
mov
idivl
mov
mov
ljmp
cltd
test
fcoml
out
pop
sar
sub
cld
sbb
push
mov
ret
imul
stos
shrb
adc
dec
fwait
or
xchg
sbb
dec
lahf
jecxz
sbb
scas
clc
mov
add
dec
fwait
insl
mov
fldenv
das
fildl
cmp
popf
ret
std
test
test
mov
and
and
scas
popf
test
mov
inc
xchg
inc
gs
mov
mov
add
iret
mov
jg
cmp
sbb
int
in
and
sbb
cmp
sarb
mov
test
into
mov
dec
fwait
das
std
add
mov
or
jecxz
dec
fwait
lret
cltd
inc
cmp
stc
repnz
fucomp
cli
xchg
fs
pop
lock
andl
hlt
js
xchg
mov
xor
add
stos
sub
mov
and
pop
mov
std
aas
jp
test
movsl
add
xchg
xchg
enter
xor
mov
inc
adc
adc
shll
scas
pop
ret
stos
out
add
shll
stc
sbb
sub
add
lret
sbb
in
stc
jmp
push
jmp
adc
push
lea
pushw
inc
mov
xchg
orb
jo
flds
pop
dec
pop
fidivrs
js
jle
push
inc
lea
rolb
rolb
xchg
adc
push
sbb
mov
notb
cmp
test
dec
mov
xor
adc
sbb
jecxz
xchg
push
in
fs
mov
push
not
roll
addr16
mov
int3
outsb
dec
cmp
fucomp
mov
mov
jmp
add
pop
jnp
mov
mov
cmp
pop
xchg
andl
in
mov
fsubs
sti
mov
nop
lds
sbb
pop
jg
mov
popa
jg
daa
xchg
aaa
dec
adc
loope
in
jno
aad
sbb
arpl
and
sahf
fs
ret
inc
in
mov
lock
out
scas
lods
dec
leave
or
fcompp
jg
fwait
push
sbb
fisttps
xor
mov
repnz
push
or
dec
push
repnz
jmp
jmp
popf
cmpb
jle
push
push
jg
clc
cmpsl
add
cmp
jg
popl
add
inc
jmp
add
adc
xor
or
cwtl
or
inc
and
les
or
push
mov
outsb
stos
cmpl
lret
imul
inc
out
mov
call
add
pop
fmul
push
pop
imull
cmp
sub
dec
test
clc
repz
jno
fcmovbe
lods
sti
lds
addr16
repz
mov
inc
out
in
inc
ficoms
lcall
mov
out
push
add
xchg
test
fs
jb
xorl
in
xor
xchg
mov
sub
imul
sbb
stos
loopne
sbb
sbb
cltd
adc
sub
jo
push
jg
or
jne
add
fs
loop
adc
xchg
lods
jl
pop
xor
fisubl
sub
loopne
cmp
imul
stos
inc
cmpsl
cs
ja
imul
push
cmp
mov
mov
add
jne
mull
mov
repnz
mov
rorb
ret
movsl
pop
loope
cltd
imul
dec
xchg
clc
fsts
mov
xchg
je
shll
insl
mov
jge
ret
pop
cmp
mov
bound
dec
orb
xorl
lock
icebp
out
push
pop
fisttps
insl
shrl
fisubl
mov
pop
push
jp
dec
push
or
jbe
fistps
je
imul
sti
sbb
add
lahf
outsb
inc
ret
fmuls
or
inc
je
scas
xchg
or
push
gs
push
adc
addl
mulb
outsb
into
movsl
arpl
imul
shrb
repz
mov
cmp
daa
in
lods
pop
stos
push
aaa
adc
fidivs
stc
loopne
ret
sti
jle
push
add
jbe
cs
mov
or
sbb
aas
out
or
xchg
rcl
stos
lds
cli
mov
add
stc
std
insb
das
or
imul
mov
mov
mov
mov
add
pop
outsb
or
push
aas
js
or
pop
cmc
repz
jmp
push
cli
push
cmc
clc
add
sbb
or
push
leave
and
shlb
xchg
adc
mov
cld
cs
mov
xchg
sbb
jge
push
mov
shlb
sub
push
leave
add
xchg
cli
mov
sub
std
cwtl
iret
jl,pt
jmp
test
sub
outsb
popa
sbb
icebp
sub
ss
test
push
in
out
sahf
insl
cmc
cmp
xchg
xchg
fsub
pusha
imul
inc
test
mov
test
sub
jns
sarl
jp
push
mov
or
pop
adc
xchg
adc
sbb
add
aad
sub
out
sub
mov
rcl
adc
lret
das
lret
out
out
mov
repnz
xchg
loop
aaa
scas
sarl
add
imul
add
les
int3
cmp
insl
ret
sub
bound
enter
fsub
stos
cltd
cmp
inc
sbb
xor
lret
aas
and
inc
sbb
mov
and
js
pop
sbb
mov
xor
in
pop
addr16
repnz
mov
inc
sbb
cltd
sbb
mov
cmpsl
pop
out
mov
push
adcl
sub
frstor
into
and
mov
mov
mov
enter
aaa
push
adc
stos
gs
cltd
mov
imul
pop
and
mov
pop
inc
lahf
nop
insl
sub
push
lods
sti
ret
fiaddl
fsubp
rcll
adcl
push
ds
fwait
and
mov
xchg
mov
dec
dec
inc
out
sbb
mov
jnp
dec
cld
ljmp
and
imul
sub
push
inc
scas
xor
jecxz
movsb
daa
sbb
adc
outsb
je
lds
cmp
call
xchg
fcomip
pop
enter
xlat
dec
fstpt
loop
add
inc
aaa
movsb
jne
sub
xchg
outsb
pop
and
addl
imulb
mov
lea
mov
xor
sub
xlat
cli
jno
ja
add
pop
xchg
and
mov
cmp
dec
xor
adc
loop
repz
and
dec
cmp
fbld
nop
ss
nop
mov
push
leave
adc
push
fildll
lcall
mov
mov
cltd
clc
movb
push
fcomps
cmp
outsl
aad
add
cmpsb
add
fadds
pop
fsub
imul
leave
sti
cmp
cmc
insb
fistpll
pop
bound
dec
xor
push
loopne
sti
xchg
mov
pop
xor
scas
insl
xor
push
lret
lods
dec
shll
mov
lret
dec
pop
repz
aad
rep
inc
sbb
in
jg,pt
or
nop
or
test
xchg
xchg
cli
pop
fnstsw
pop
test
ficoml
jne
and
cwtl
sub
stos
and
cmc
xorb
out
sbb
xorl
int
jno
out
jbe
mov
cwtl
popf
insl
pop
mov
xor
sub
push
mov
das
sbb
lahf
notb
aas
sbb
mov
pop
adc
lret
pop
dec
cmp
dec
jmp
xlat
aas
pop
mov
js
cmp
enter
adc
inc
repz
and
lods
stos
push
dec
jb
or
lret
faddl
ja
lods
cltd
pop
bound
xchg
jg
pop
pop
out
mov
pop
cmpps
push
sbb
call
push
das
nop
xor
adc
enter
in
xor
sub
dec
aad
jno
je
test
sub
sbb
inc
cld
pop
iret
in
cmp
push
inc
sub
jl
imul
ret
adc
sub
inc
shl
ret
movl
xor
jno
inc
sub
and
mov
sahf
mov
ljmp
je
orb
and
jmp
and
jp
lds
push
pop
in
fwait
dec
ds
stos
xor
jnp,pt
push
add
cmp
sbb
lds
fbld
sbb
out
ret
dec
dec
dec
xor
sub
pop
stc
cwtl
add
movsl
cli
sbb
lods
aaa
push
test
lods
sub
insb
int
inc
push
adc
pop
adc
mov
adcb
inc
cmp
sbb
dec
jmp
int
adc
cli
fwait
loopne
adc
sar
jae
dec
stos
mull
pop
insb
jle
xor
popa
bound
nop
popf
out
hlt
adc
stos
inc
inc
push
pusha
or
rcl
mov
dec
cmc
mov
movsb
mov
cld
mov
test
jge
out
insl
sub
mull
cwtl
adc
xor
cmpsl
jae
pop
push
orl
and
testb
mov
sub
dec
es
lret
push
out
out
jnp
sbb
fidivs
inc
or
jl
xor
mov
aas
adc
adc
mov
stos
in
cmp
sbb
adc
cmpsb
push
loope
adc
pop
sub
xchg
inc
test
cmp
aad
inc
xchg
ret
mov
out
fisttpll
mov
pop
adc
imul
xor
xchg
mov
aam
movzwl
fwait
das
mov
jl
jns
cli
sbbb
push
ret
cs
xor
cmp
mov
sbb
ss
dec
sub
push
push
inc
hlt
scas
outsl
sub
and
test
in
adc
or
shlb
mov
jecxz
adc
cmp
cmp
ljmp
sub
add
pop
data16
shll
lods
and
mov
hlt
jo
daa
ja
jnp
cs
out
inc
xor
test
popf
or
ficompl
jbe
scas
and
inc
das
cmc
cli
into
pop
sbb
ret
sub
mov
ret
aam
jle
and
cmp
pop
add
lods
call
xchg
aam
and
cmp
inc
aam
shll
dec
jb
add
aaa
inc
and
and
mov
inc
out
dec
adc
push
inc
les
push
jno
sbb
testb
sbb
int
daa
mov
xchg
inc
cmpsl
adc
add
xor
jp
mov
sti
loope
dec
insl
ret
lods
sar
pop
and
xchg
add
cmp
shll
jne
nop
out
test
add
cmp
cmc
cmp
jno
or
js
sbb
jo
ficoms
xchg
mov
pop
mov
mov
push
pop
dec
mov
imul
ja
in
pop
ds
lods
loopne
imul
leave
jp
outsb
shlb
xchg
and
xor
test
mov
fucomp
add
mov
xlat
and
cli
adc
movsl
out
xor
xor
mov
xchg
iret
sti
insl
subb
cld
stos
inc
sar
sub
pop
scas
sub
and
jl
pop
jecxz
or
xor
into
mov
cmc
sub
jns
and
inc
xor
jg
pushf
xor
and
mov
mov
jo
dec
movsl
mov
stos
mov
sti
ljmp
pop
xorl
cmp
mov
cmpsb
andl
dec
sbb
lcall
or
imul
fnstenv
xor
rcll
sahf
or
cmpsl
jle
jge
push
pushf
out
pop
ss
jne
pop
push
pop
sub
add
mov
push
sub
sbb
sahf
mov
daa
test
data16
lock
mov
xchg
add
popf
jb
push
and
js
fsubp
dec
cmpsl
imul
cli
mov
sbb
adc
add
repnz
subl
ja
xchg
data16
bound
mov
cmp
add
test
int
test
in
add
dec
cli
lock
push
ljmp
push
fsubrs
scas
mov
fcmovbe
out
aam
in
out
icebp
gs
shll
xchg
pop
cwtl
mov
sub
sub
js,pt
out
sbb
push
shrl
add
mov
jae
sbb
repz
inc
add
test
cli
test
sub
push
adc
mov
stos
scas
call
jmp
jg
fwait
lcall
ja
loope
subl
xor
movsb
pop
sub
jae
inc
jnp
push
push
inc
fcomi
out
mov
add
xor
adc
inc
test
daa
sti
push
add
mov
mov
andb
sbb
jp
push
xor
mov
insb
adc
jno
add
xor
int
sbb
aas
out
push
lret
sahf
bound
xchg
adc
sahf
and
xchg
aas
push
aad
mov
call
out
test
shl
adc
pop
jle
xor
and
inc
mov
icebp
or
aaa
sbb
fnstsw
add
jmp
pop
or
inc
push
clc
fisttps
sahf
xor
jne
in
ret
ja
xchg
add
or
jg
adc
lahf
mov
mov
add
jg
stos
mov
add
rcll
fistps
or
test
sub
fisubs
xor
loope
jb
mov
fldenv
push
add
cmp
popl
cmc
mov
xchg
xor
int
shlb
das
mov
mov
push
mov
dec
push
out
or
adc
xor
inc
nop
xor
inc
jo
xchg
sub
fbstp
aaa
dec
gs
jb
dec
mov
jnp
es
popf
lods
xchg
mov
inc
mov
lock
gs
ja
in
dec
int3
push
ret
push
pop
sbb
add
aas
cs
out
mov
inc
clc
sahf
imul
es
hlt
dec
js
adc
push
fbld
pop
xor
and
lods
outsb
cld
testl
fidivrs
push
xor
fwait
adc
dec
test
mov
stos
sub
dec
and
je
lret
outsb
mov
icebp
mov
pop
dec
popa
push
push
testl
or
add
jle
aas
add
cli
mov
xchg
inc
lock
fdivl
stc
bsr
dec
or
inc
lods
adc
subl
leave
xchg
jne
and
xlat
fdivs
cwtl
das
push
nop
jae
movntps
jns
push
mov
sbb
sub
in
jg
lret
rcr
outsl
bound
pushf
push
movsl
lea
xchg
xchg
out
inc
or
inc
test
mov
stc
xor
or
jle
mov
jmp
out
clc
std
lahf
mov
ret
out
insl
jb
dec
lods
sahf
xchg
fisttpll
mov
xchg
fs
int3
pop
jg
insb
aam
rolb
xchg
fisttpl
loop
jb
mov
mov
pop
daa
iret
sti
push
adc
hlt
xchg
xlat
cld
lahf
mov
fwait
cmp
jbe
inc
andl
xchg
pop
addr16
icebp
sbb
negb
push
adc
loope
xchg
push
mov
jmp
into
mov
repnz
gs
sub
add
push
test
out
jns
in
dec
call
sbb
out
push
sbb
push
addr16
push
mov
sub
lahf
jno
lods
push
sbb
jmp
lcall
adc
push
sbb
cltd
cld
in
lret
add
xor
or
pop
ret
jne
inc
fwait
in
inc
imul
out
lret
cmp
sub
sub
and
shr
mov
clc
dec
lret
data16
rol
jnp
sbb
insb
sbb
and
or
cltd
lods
jp
push
cmpsl
mov
stc
mov
push
iret
mov
push
cmp
hlt
sbb
in
xor
xchg
iret
adc
and
repz
or
pop
pop
arpl
sub
sub
dec
sbb
mov
call
lret
mov
in
fstpl
les
mov
fwait
cmp
pop
adc
call
mov
sbb
cmpsl
pop
nop
adc
sub
dec
push
arpl
push
add
int
jp
jns
test
adc
icebp
or
mov
sbb
nop
jecxz
cmp
or
mov
add
mov
push
inc
and
fmull
mov
adc
and
dec
adc
pushf
sub
repz
test
inc
in
cli
arpl
bound
sbb
das
jle
mov
add
push
push
imul
xorb
mov
cmp
jb
pop
mov
mov
xchg
test
test
jp
int
push
adc
pop
rolb
test
lret
rol
pop
sti
xor
mov
out
pop
jmp
cld
cmc
mov
sub
cld
push
dec
mov
mov
outsl
dec
and
in
mov
ss
push
pushf
out
push
push
test
cmp
xor
mov
adc
pop
stos
call
rol
pop
jl
inc
les
pop
je
add
scas
and
jns
outsl
adc
mov
stc
test
inc
fiaddl
ret
sub
test
mov
shlb
dec
mov
mov
mov
roll
repnz
cmpsl
lds
inc
or
and
pop
inc
cmp
addr16
cltd
fldl
add
xchg
data16
shrl
out
mov
lds
add
adc
movsb
scas
stos
mov
aad
mov
xor
sti
xchg
add
imul
das
jnp
popa
push
pop
xor
sbb
and
push
shlb
inc
repz
push
jnp
loop
stos
or
sbb
ds
xchg
sbb
and
shlb
sahf
iret
jb
gs
incl
push
ds
jl
cli
or
mov
adc
jb
std
push
dec
lret
xlat
notb
pop
jp
pop
mov
or
test
sbb
cmp
jmp
fstpt
sub
cmp
cltd
inc
xlat
popf
push
sub
insl
fildll
or
xchg
inc
orb
icebp
stc
add
sbb
cli
mov
jg,pt
rorl
cmp
lcall
push
dec
and
ror
sbb
mov
clc
jp
fcom
cmpsb
mov
push
call
sbb
inc
adc
in
and
popa
mov
insl
or
xchg
cli
inc
adc
xchg
ret
jo
push
xor
scas
xor
enter
in
pop
js
add
stos
jmp
adc
sarl
adc
add
sub
mov
call
cmp
pop
add
push
testb
or
mov
dec
fldl
addl
les
ljmp
fsts
sbb
adc
push
mov
adc
mov
add
push
xchg
aam
mov
shrb
sub
js
insl
shlb
jmp
loopne
sar
sbb
fnstenv
xlat
scas
addr16
push
adc
adcb
cmpsl
mov
lret
test
ja
or
push
les
cld
push
imul
mov
icebp
dec
ljmp
pop
lds
jbe
cmp
jle
sub
loop
inc
lods
xchg
mov
imul
insl
aad
jno
test
mov
jp
stc
test
mov
mov
imul
stos
loop
cmp
adc
cmpsb
cmp
inc
arpl
test
popa
mov
into
cmp
inc
aad
inc
mov
push
sub
roll
jg
pop
shrl
jg
lcall
and
in
push
xchg
pop
icebp
sahf
pop
std
pop
lock
add
sbb
mov
inc
pop
ja
cltd
cmp
and
dec
add
fstl
sahf
imull
shl
sub
std
cmp
sbb
mov
dec
mov
cmp
adc
ret
push
xchg
sahf
cmpsb
inc
adc
xor
sub
hlt
mov
and
inc
sbb
sub
sahf
in
and
adc
mov
or
pop
cmp
gs
dec
pop
fwait
xchg
sub
sbb
adc
push
loopne
push
fldl
push
pop
loope
pusha
loop
fistl
inc
push
inc
xchg
mov
xor
adc
dec
xchg
sbb
sbbl
jae
test
jle
mov
out
fcmovbe
lds
mov
out
les
mov
in
jae
cmp
test
dec
and
dec
adc
rclb
pop
pop
xchg
and
cltd
fisttpl
nop
dec
mov
es
mov
mov
rclb
add
test
and
add
into
outsb
push
faddl
lock
xor
je
push
lcall
stos
loop
mov
jmp
fucomip
or
adc
in
sub
pop
stos
enter
scas
inc
jl
xchg
test
mov
or
push
jmp
mov
cmp
xor
dec
pusha
loope
dec
xchg
mov
fidivrl
mov
adc
mov
add
lcall
mov
clc
push
data16
bound
stos
in
adc
mov
dec
push
adc
or
addr16
jle
push
repz
or
and
les
adc
cmc
lods
push
adc
xor
xorl
dec
mov
pop
out
dec
jno
sti
ror
ss
ss
adc
lcall
es
or
gs
pop
sub
aas
ret
aad
test
jecxz
sar
leave
mov
or
arpl
or
out
in
outsb
inc
ficompl
pop
xor
es
scas
out
rol
mov
push
aad
sti
mov
aaa
out
pop
jae
jae
lret
mov
call
inc
andb
jle
repz
jp
mov
jle
les
aam
inc
in
sbb
fsubl
iret
xchg
stc
cltd
inc
mov
jae
lods
sub
mov
fists
add
int3
stos
xchg
push
movsb
les
xor
pushl
mov
lods
testl
push
sbb
cltd
mov
jecxz
shrl
aas
xor
mov
shrb
jne
cli
xchg
fisttps
mov
xor
ret
xchg
mov
mov
inc
inc
cmp
ror
jno
aaa
hlt
pop
adc
jge
xor
lcall
xchg
or
pop
int
popl
mov
loope
pop
mov
or
xor
dec
andl
jge
addb
xlat
ja
pop
dec
jns
xchg
fcoml
mov
in
xlat
add
call
xchg
jae
ljmp
jno
xchg
dec
mov
arpl
lret
mov
jo
mov
ss
jmp
mov
test
dec
pop
daa
adc
aas
push
mov
mov
lret
pop
rorl
and
leave
pop
fimuls
push
ret
out
sub
test
xor
jnp
sahf
and
jnp
adc
in
xor
xchg
mov
add
cmpsl
xchg
testb
xchg
jns
sbb
test
inc
jmp
sbb
jb
pop
es
dec
in
mov
sub
adc
xor
mov
add
push
scas
cmpsl
cmpb
inc
cmp
mov
xchg
popa
jne
pop
xor
int3
stc
jb
pop
fldenv
orl
add
jns
mov
mov
xchg
jae
push
aas
sub
xchg
aaa
or
mov
sbb
loopne
add
lods
popa
push
dec
fs
shl
cmp
inc
inc
jb
nop
cmp
call
popf
mov
push
inc
mov
movsl
jno
fisttps
popa
in
stos
and
insb
test
xor
cmp
in
jg
int
in
gs
cmp
cmp
sub
mov
jnp
xchg
fcmovbe
jbe
aad
xor
hlt
xchg
aam
jae
mov
sub
push
pop
or
repz
movsb
aas
dec
inc
cltd
mov
xchg
test
jl
and
gs
fdecstp
movsb
outsb
adc
xchg
jg
arpl
xchg
xor
xor
inc
in
lcall
ljmp
pop
and
orb
cmc
sbb
sbb
lods
gs
call
flds
in
aad
ret
fistl
inc
shrb
pop
adc
aaa
int
les
mov
aam
test
or
mov
aad
fildll
dec
and
movsb
push
cli
xor
shrl
aam
int
dec
pop
enter
loopne
loopne
push
jnp
inc
andb
pop
ret
mov
pop
push
decl
shl
mov
fnstenv
hlt
out
push
mov
dec
cli
fdivs
mov
mov
mov
cmp
cmpb
sti
js
xor
jg
mov
push
lret
push
sbb
fcmovne
adc
addr16
in
jne
or
lds
xchg
cmc
add
leave
cmc
adc
das
out
mov
pop
popa
sbb
addr16
scas
jb
out
ds
daa
add
adc
aad
jne
dec
hlt
jmp
pusha
shlb
out
sub
sti
loop
adc
into
cmp
mov
or
add
jne
test
ljmp
rcrl
call
mov
cld
out
jno
add
addr16
push
xor
mov
pop
out
fistpll
fs
mov
xchg
std
bound
dec
xchg
loopne
adc
and
sbb
out
mov
cs
mov
in
xor
bound
test
cmpsl
data16
dec
mov
mov
leave
fdivrl
adc
push
cmpsl
jo
mov
or
out
shlb
add
sbb
adc
mov
mov
jb
cltd
mov
scas
and
xor
das
rcr
mov
imul
xor
push
out
arpl
loope
stc
pushf
test
pop
les
adc
dec
mov
push
mov
divb
jno
sbb
pop
testl
sbb
cmp
or
pop
dec
xchg
xchg
xor
cmpsb
iret
xchg
rcrb
je
sub
aam
xor
cmp
stc
jne
pushf
mov
xorb
mov
scas
dec
dec
xchg
xor
fcmovnu
popa
inc
andl
test
push
mov
sbb
fimuls
and
xchg
push
rorb
fidivrs
adc
enter
pop
out
clc
cmp
adc
fsubs
shlb
jae
or
mov
mov
mov
add
popa
mov
add
jle
pop
cmpsb
mov
loope
pop
or
lahf
fucomip
imul
adc
push
lock
bound
pop
mov
les
jle
sub
movsb
mov
xor
movsb
pusha
adc
mov
push
in
lds
in
mull
hlt
pushl
or
push
decl
leave
dec
mov
push
push
cmpsb
adc
dec
jo
repz
push
adc
ss
dec
ret
rclb
movsl
mov
cmpsb
stos
xchg
mov
jmp
mov
mov
add
inc
push
cmp
pop
or
xchg
jle
fildl
jp
subb
mov
div
jns
push
mov
pop
iret
out
add
xchg
mul
repnz
loop
push
popa
mov
inc
pop
scas
mov
xchg
cmpsl
imul
push
icebp
pop
xchg
addr16
es
adc
add
cmp
mov
dec
mov
popf
mov
sub
daa
das
mov
mov
jbe
jg
xchg
cwtl
cmp
sbb
fldt
xor
in
mov
cltd
inc
outsl
pusha
pop
cmc
popf
lock
outsl
movsl
scas
cmpsl
ret
cmc
shlb
push
inc
ljmp
cmp
inc
mov
or
adc
jg
loop
daa
xchg
hlt
push
fisttps
int3
pop
cltd
mul
cld
inc
mov
lcall
mov
sub
xor
lret
fs
shlb
jmp
mov
xchg
pop
std
sbb
in
repnz
ss
cmp
push
div
cltd
fiaddl
add
repz
xor
sub
rorb
enter
mov
cli
pop
mov
lret
and
aaa
and
adc
das
outsb
jl
dec
dec
jb
jb
test
push
rorl
test
push
mov
in
ss
je
loop
xchg
inc
stc
jae
or
lock
scas
mov
fmuls
sub
sub
js
dec
in
shlb
sti
cmp
or
xchg
ret
sub
sbb
pop
je
popf
xchg
bound
push
mov
lahf
mov
mov
sub
cmpsl
push
aam
repz
fs
arpl
or
out
pop
test
or
insl
icebp
hlt
add
mov
rorb
in
icebp
outsb
push
mov
and
lret
lods
aas
adc
lock
sbb
add
outsb
cwtl
out
inc
in
or
jg
jns
cmp
dec
jmp
ds
leave
movsb
mov
inc
pop
adc
insl
mov
push
jne
push
aad
or
addr16
fldt
lcall
push
popl
pop
or
inc
mov
or
jp
mov
andb
sbb
push
cmp
stos
dec
cli
pop
pop
and
adc
push
pop
and
fst
push
jecxz
movl
or
hlt
inc
lods
cmpl
fdiv
inc
xor
inc
hlt
xchg
sahf
stos
movsl
pop
inc
inc
mov
int3
cmpsl
xlat
or
das
cmpl
pop
daa
ds
mov
sbb
cmp
and
daa
sbb
mov
outsb
rcll
pop
cmp
repz
fistps
xchg
xchg
rdmsr
dec
pop
stos
test
xorl
mov
call
and
lea
movsb
arpl
dec
int3
subl
fistpll
xchg
pop
loope
cmc
je
enter
std
jle
cmc
scas
rcll
cwtl
stos
push
cmpsb
test
cmpsb
int3
in
movsb
incl
mov
or
in
pop
jmp
in
cmp
jg
push
fdivrl
std
insb
addl
cltd
mov
inc
loopne
jecxz
pop
inc
in
lret
cmp
iret
cmpsb
xchg
mov
icebp
movsl
push
aas
jb
xchg
push
xchg
inc
jle
or
jo
mov
pop
out
push
cmpb
push
popa
inc
sub
cmp
rorb
dec
adc
mov
inc
mov
lahf
int3
in
int
aad
or
mov
add
dec
bound
push
adc
fwait
mov
rcrl
jge
xchg
stos
cmp
dec
imul
ss
and
push
dec
icebp
mov
cmp
pop
jmp
test
adc
flds
sub
call
adc
pop
mov
dec
ret
mov
inc
lret
fnstsw
sub
push
rolb
scas
shlb
jecxz
sub
fcmovbe
dec
jmp
push
cpuid
push
sbb
pop
push
es
cmpsl
xor
push
mov
repnz
push
sub
inc
iret
adc
pushf
mov
insb
in
push
int
jbe
mov
cmpsl
aam
insl
sub
dec
mov
fisubl
inc
pusha
fimull
lret
stos
sbb
xor
push
mov
dec
faddl
leave
add
iret
mov
pop
testb
fs
aam
add
aam
and
enter
out
sbb
movsl
scas
ss
cmpsl
lods
jnp
mov
out
cs
data16
mov
into
lods
and
daa
xchg
inc
cmp
adc
push
inc
imul
pop
sbb
imul
iret
sbb
jmp
dec
push
pusha
dec
xor
pusha
movzbl
lea
adc
sbb
dec
cmpsb
push
test
add
nop
add
sarl
addr16
pop
jmp
sub
push
sub
pop
divb
push
cmp
ja
into
jae
ds
loopne
mov
xchg
pop
xor
lock
js
xor
popf
dec
in
out
movsb
inc
inc
xchg
jo
lea
xchg
mov
clc
xor
lcall
mov
int3
xchg
loop
popf
jg
data16
mov
dec
lcall
xor
cmovae
es
xor
xchg
mov
scas
stos
sub
int
bswap
xor
shlb
fcoml
dec
push
push
jp
pop
leave
mov
mov
add
sub
aas
jne
inc
xchg
pminub
lahf
rorb
in
cltd
push
fs
out
pop
or
in
ja
lret
adc
cmp
push
iret
das
xchg
pop
subl
arpl
xor
cmp
jae
mov
xor
push
ss
pop
lret
fstpt
sub
jns
or
imul
xchg
xchg
xchg
push
xor
int
jns
sahf
ficoms
inc
lret
adc
iret
popa
mov
or
jo
mov
inc
pop
push
repnz
and
subl
mov
ljmp
pop
fwait
icebp
fmull
push
sub
imul
pop
push
mov
or
lods
jb
sbb
push
or
fadds
sub
mov
mov
xchg
pop
mov
lcall
jno
dec
xchg
shr
xchg
sub
or
adc
cmp
test
inc
lods
incb
ficomps
add
mov
jne
imul
push
popa
pop
addr16
les
mov
cltd
aaa
stos
scas
into
jno
mov
pop
incl
icebp
mov
mov
push
or
je
insl
loope
jnp
dec
mov
adc
push
movsl
popf
sbb
dec
pop
sbb
in
aad
push
pop
mov
push
fprem
ret
sbb
cmp
test
sbb
push
or
sub
out
ficoml
aad
imul
add
call
orl
into
push
lahf
sti
repz
push
mov
inc
cli
ja
repnz
outsb
and
xor
adc
out
and
hlt
fisubs
jbe
and
xchg
pop
cmp
cmp
or
data16
mov
addr16
ja
sbb
in
sub
mov
cltd
sub
outsb
jno
mov
add
out
js
rclb
xlat
sti
jle
sahf
mov
and
adc
ljmp
inc
es
bound
add
clc
mov
loopne
dec
cmovs
push
jns
fcomp
inc
rclb
or
pop
push
mov
fs
add
push
xorl
iret
aas
cmpsb
dec
mov
and
movsl
push
xchg
cmp
xlat
sbb
fsts
ja
or
test
js
sub
mov
lods
jae
adc
xchg
inc
pop
xchg
push
mov
jne
lret
cmp
inc
sbb
mov
cmp
mov
imul
test
test
scas
mov
mov
scas
jo
or
mov
into
icebp
lea
and
push
filds
mov
and
dec
inc
data16
lea
jge
xchg
inc
mov
fmull
js
roll
je
lahf
fstp
mov
stos
dec
jno
mov
movsb
xchg
mov
inc
pop
or
lret
shlb
add
push
adc
add
adc
and
outsb
leave
push
mov
je
fstl
xor
rcrb
dec
cmpsb
jp
data16
dec
cmpsl
xor
lahf
pushf
mov
mov
addr16
dec
cmp
in
test
mov
ss
fwait
ret
and
lods
add
gs
aad
lock
scas
mov
dec
dec
sbb
out
mov
cmp
adc
adc
sbb
inc
xlat
dec
sbb
jecxz
mov
fwait
adc
fwait
inc
pusha
xorb
sbb
xchg
cmp
adc
lds
cmp
cmp
inc
daa
cs
adc
push
cli
mov
out
mov
int3
sub
push
mov
popa
xchg
inc
frstor
xchg
adc
push
push
addr16
add
and
popf
cmp
mov
cmc
mov
mov
std
test
push
or
ret
pusha
in
pop
ret
mov
inc
clc
ljmp
dec
mov
call
std
adc
push
popf
popa
movsb
movsb
mov
jge
sub
out
push
xchg
data16
push
cmp
push
lcall
pop
xchg
dec
xor
push
mov
mov
fldenv
ficompl
aas
xchg
and
clc
imul
xor
and
mov
jne
jl
leave
sub
aam
sbb
and
push
and
add
dec
or
mov
mov
inc
test
decl
mov
mov
rol
jmp
mov
outsb
mov
jae
mov
mov
adc
or
jle
addl
fdivrl
adc
jo
inc
sub
fcomp
bswap
out
insl
leave
push
ror
fs
pop
mov
inc
xor
push
sti
shlb
pop
int3
hlt
inc
sub
mov
into
inc
cmp
cmp
in
repnz
shrb
loop
push
cmp
rorb
pop
mov
jbe
jnp
movsl
je
push
lds
bound
pop
or
sub
aam
das
decb
dec
inc
cmp
das
es
jge
jge
sub
sbb
adcb
les
sti
pop
pop
mov
scas
sbb
shll
movsl
pop
popf
jo
inc
mov
and
lds
dec
mov
iret
dec
pop
mov
in
inc
jmp
sub
pop
mov
mov
shrb
cmpsb
movsl
jmp
xlat
pop
shlb
rorl
int
pop
mov
xchg
jmp
in
adc
test
adc
punpckhdq
push
popa
dec
sub
ja
jo
mov
pushf
bound
loope
das
repz
lea
jl
out
xchg
jbe
ret
std
add
int3
pop
adc
js
cmp
mov
sub
pop
xchg
lods
xor
xor
push
add
push
clc
ret
movsl
add
mov
dec
adc
enter
rorl
add
and
adc
mov
movsb
xor
fnstsw
test
inc
jmp
stos
sbb
lods
push
cmp
inc
hlt
icebp
push
dec
xor
mov
inc
aam
jns
movsb
adc
xor
lock
and
stc
mov
sbb
stc
repnz
ds
cmp
cmc
cmp
pop
in
mov
xchg
cli
inc
jno
push
mov
mov
push
mov
in
adc
lret
les
adcl
inc
rolb
cmp
sub
jmp
popf
cmp
dec
out
jb
mov
adc
nop
mov
in
loopne
jne
loope
adcl
add
lods
out
nop
nop
fs
pop
loope
and
fmul
pop
and
gs
lcall
inc
test
sub
inc
stos
adc
sub
cmp
xor
and
pop
mov
cld
and
fwait
add
test
pop
xor
ficomps
nop
in
icebp
mov
xchg
std
lds
mov
ljmp
iret
lea
cs
cs
add
mov
insb
cmpsl
fnstsw
and
movsl
mov
adc
xchg
mov
cltd
inc
ret
push
divl
js
cmc
addr16
nop
inc
add
inc
jmp
aad
push
stc
xchg
and
rcrb
decb
repz
pushf
cwtl
les
lods
push
pop
cmp
popf
mov
imul
aam
inc
loop
mov
outsl
enter
icebp
xor
pop
pop
scas
mov
arpl
xchg
sub
aad
xlat
lods
push
or
pusha
inc
mov
pop
insl
xchg
or
arpl
shrb
lcall
fs
aaa
cli
popa
sar
cmp
das
jno
add
jbe
xchg
popf
push
adc
popa
cld
js
test
dec
fs
cmp
dec
push
add
test
gs
jmp
add
push
mov
push
andb
adc
cmpsl
inc
loop
cmc
push
pop
pop
cwtl
repz
push
xlat
int3
pop
outsl
cwtl
sbb
jne
ret
jb
dec
popa
dec
jge
test
push
adc
push
movsb
ficomps
push
or
or
add
popf
out
jp
sar
divb
add
lock
cwtl
leave
mov
adc
xor
test
xchg
inc
mov
das
dec
cmp
jge
sbb
lock
es
ljmp
fsubrl
into
aaa
xchg
xchg
sbb
fmuls
mov
mov
mov
sbb
jb
bound
mov
and
mov
push
loope
leave
jnp
inc
sub
dec
pop
out
xchg
cmp
push
mov
push
xchg
jmp
pop
push
adc
icebp
ljmp
clc
ss
sahf
mov
sub
xchg
dec
cmp
xchg
inc
xchg
sbbl
inc
fdivl
dec
mov
test
sbb
push
xor
sbb
js
xchg
xchg
loope
and
push
add
xchg
sub
repnz
int3
mov
xchg
cmp
sub
cmp
cmp
add
mov
pop
jb
mov
in
movsb
jge
or
test
cmpl
inc
jg
sub
cld
adc
cli
push
in
cmc
stos
push
shl
adc
mov
movd
mov
mov
mov
cmp
std
pop
rclb
mov
rolb
push
mov
daa
sub
je
pusha
adc
and
xchg
sbb
mov
pushf
lea
decl
int
outsl
orl
mov
lea
jns
shlb
xchg
addl
cli
das
mov
test
data16
adcb
pop
cli
adc
inc
push
popf
sbb
aaa
das
jl
pop
aad
test
lds
add
mov
push
xchg
push
mov
fwait
pop
push
cmpsl
movsb
sub
ss
aad
push
push
neg
mov
sbb
imull
pusha
jmp
call
flds
xor
leave
jo
ret
cmp
sbb
pusha
pop
mov
movntps
in
add
sub
jns
int
dec
xchg
fwait
cld
add
pop
mov
inc
xchg
xchg
int3
pop
mov
cmp
arpl
xchg
test
jo
mov
imull
loop
cmc
xchg
mov
dec
cli
in
das
sbb
cli
add
mov
pusha
adc
xchg
ret
cmp
pop
cmp
int3
sbb
cmp
ret
aad
cs
jbe
sbb
adc
xor
rcrl
in
adc
jb
mov
stc
pop
push
mov
jae
dec
cmovnp
movsb
into
mov
mov
fidivs
jns
insb
jae
aam
adc
mov
js
xchg
loope
repz
inc
xchg
mov
cmp
sahf
fsqrt
and
pop
push
out
setb
test
imul
out
cwtl
in
mov
mov
jo
and
repz
mov
inc
aaa
lret
scas
cmpsl
sub
xchg
mov
xchg
jnp
sbb
dec
and
shrb
stos
cmp
loop
xor
negl
pop
xorb
adc
movl
dec
jl
cs
xorb
pop
into
sbb
repnz
push
xchg
jne
loop
pop
dec
stos
xchg
pop
test
cltd
mov
mov
insl
in
in
sbb
fistpll
jbe
or
in
shr
cmc
punpcklbw
or
xchg
jmp
sub
inc
arpl
lahf
call
cwtl
lcall
sti
leave
add
xor
stos
lea
xchg
cmpb
mov
pushl
mov
add
loopne
ljmp
dec
fistpll
pop
mov
mov
ret
sub
jp
add
stos
pop
addl
push
sti
pop
fldenv
lods
push
mov
mov
imul
into
push
call
push
mov
lret
aas
add
xor
mov
xor
mov
negl
out
xor
xchg
mov
or
mov
scas
pop
sti
lock
addr16
sbb
and
icebp
fisubrl
jnp
enter
pop
je
mov
sub
cmpsb
addr16
mov
sbb
mov
test
lds
lods
mov
inc
mov
not
mov
inc
xor
sbb
jmp
adc
add
popf
bound
sub
mov
xchg
add
dec
and
xchg
xchg
iret
in
nop
mov
and
mov
dec
repnz
clc
xor
xor
dec
mov
rclb
cltd
and
sbb
test
imul
add
mov
inc
sbb
add
push
inc
xchg
insl
push
lea
cmp
jle
mov
fists
xchg
mov
fists
adc
shrl
cs
mov
bound
push
push
insl
xorb
jg
xchg
out
pop
jne
sbb
or
mov
push
sub
xor
mov
mov
jb
ljmp
aas
retw
mov
lds
adc
mov
xor
pcmpgtb
pop
jecxz
xchg
popf
jle
and
push
and
xor
fistps
or
imul
mov
push
mov
inc
mov
stos
push
and
test
popf
mov
filds
pop
cmp
add
jg
popa
out
int3
leave
mov
and
pusha
lcall
jmp
incl
xor
inc
movsb
je
or
in
fidivl
mov
jmp
lods
sub
and
cmp
andl
and
pusha
mov
inc
pop
or
fsubs
or
ret
dec
test
inc
mov
movsl
loop
cmpsl
enter
neg
jbe
test
repnz
xchg
cwtl
iret
mov
mov
andb
pushf
cmpsb
dec
push
adc
xor
loopne
test
push
rorb
xchg
lret
out
xchg
mov
inc
lret
xor
and
lods
add
push
call
inc
ret
icebp
ret
push
mov
dec
sahf
mov
imul
jo
cmpsl
mov
pop
int
sbb
fiaddl
idivl
or
lods
xchg
and
iret
ljmp
imul
lods
adc
xchg
push
jge
jecxz
and
adc
sub
out
xchg
fs
syscall
push
sub
pop
loop
fcomps
aas
pop
aaa
les
rcrb
dec
test
fidivl
and
lret
mov
mov
insl
jb
lock
xchg
and
mov
rclb
mov
sbb
stc
push
dec
inc
jp
fstpt
inc
lea
sub
sbb
movsb
in
pop
fwait
cmp
cmp
or
aas
repz
cs
pop
xlat
dec
incb
sbb
cmc
repnz
cmpsb
pop
je
pop
and
push
pop
pusha
dec
or
cld
andb
fisubrl
mov
jo
push
scas
push
nop
fs
sahf
mov
sbb
rorb
test
push
mov
jae
sub
test
dec
into
or
or
xchg
aam
ds
pop
cmp
out
or
movsb
mov
fstpt
fldl
stc
xchg
mov
xor
xchg
adc
jo
xchg
push
imul
in
lahf
mov
fwait
sub
cmp
iret
aas
rolb
cmp
fdivp
cmpsl
push
push
ss
mov
pop
dec
push
xchg
inc
dec
xchg
gs
in
push
dec
push
inc
das
xor
fidivrl
ds
jecxz
test
xor
add
andl
stc
push
aad
out
mov
xlat
loop
scas
insl
cmpsb
aam
or
lahf
and
addr16
fnstcw
sar
fs
outsl
into
sbb
mov
mov
and
mov
gs
aad
ret
testb
sbb
jle
cli
cmp
test
shl
imul
or
jb
adc
jmp
push
cld
out
movsb
cwtl
pop
loop
subb
add
lcall
xchg
mov
hlt
scas
xchg
cmp
mov
cmp
imul
jnp
adc
xchg
std
dec
mov
scas
shll
mov
in
push
cmp
xchg
fldcw
mov
pop
popa
out
ret
es
scas
shrl
mov
push
adc
push
ret
pop
dec
aad
repz
dec
sub
xchg
xchg
stos
test
mov
jg
loop
add
scas
or
xchg
int3
push
pop
in
imul
ret
push
lret
push
add
push
and
mov
clc
add
dec
mov
std
bound
mov
and
mov
cmpsl
test
or
pop
jo
dec
add
and
pop
sub
cmp
out
sahf
ficomps
mov
je
outsl
pushf
mov
dec
jge
cmc
popf
mov
pop
cmp
inc
std
stc
orb
mov
rcrl
es
adc
sbb
pop
push
mov
decl
divb
push
test
add
mov
add
sub
repz
mov
xchg
insl
popf
insb
jo
add
cmp
pushf
inc
mov
push
or
in
bound
cmp
dec
adc
xor
popf
xchg
mov
and
fstpl
cmp
cs
dec
xchg
popa
mov
out
pop
adc
xor
sub
mov
rorl
daa
fdiv
lret
mov
xchg
cli
mov
xlat
or
dec
pop
sbb
ficoms
leave
mov
adc
mov
mov
fldl
sahf
cmp
mov
mov
mov
mov
int3
sar
inc
in
or
cmpsb
cs
popa
ss
out
push
arpl
stc
iret
ds
mov
pop
mov
loopne
fldenv
orb
in
dec
test
xchg
fsubr
jecxz
sbb
inc
icebp
cwtl
or
cli
add
dec
push
fadds
nop
sbb
adc
out
xlat
sub
jmp
enter
test
mov
nop
push
push
fiadds
adc
mov
jl
mov
mov
pop
cmpsl
out
inc
ljmp
xchg
mov
xor
subl
test
mov
and
pop
cs
add
lret
sar
cmp
outsb
cs
push
and
imul
fwait
inc
repz
pushf
dec
and
jmp
out
pop
in
sub
and
cmp
mov
lods
fildll
xor
out
clc
mov
cmp
movsb
cmp
xchg
sub
mov
mov
jae
jnp
jb
out
xchg
mov
mov
data16
popf
ss
int3
sti
xchg
pop
leave
and
push
sub
mov
ss
xor
or
sbb
push
or
sti
mov
add
cmp
dec
icebp
jns
push
pushf
daa
flds
fwait
scas
jb
je
pop
lods
js
sbb
add
xchg
mov
scas
shld
faddl
push
cwtl
pop
push
mov
sti
inc
mov
xor
mov
test
sub
and
sbb
outsb
push
mov
inc
mov
pop
xchg
mov
stos
bnd
nop
cmp
dec
orl
add
test
adc
lret
or
in
push
and
adc
sbb
sti
aad
xchg
and
xor
rolb
pop
add
cmp
sbb
adc
pop
push
xchg
icebp
aad
mov
fcompl
mov
sub
je
cmpsb
and
dec
lods
sarl
mov
dec
in
or
push
in
call
push
popf
inc
mov
cli
fcoml
mov
sahf
dec
pushf
jp
shll
movsb
sarl
scas
fistps
rclb
ds
cld
lock
jbe
cltd
xor
push
sub
or
add
rcr
addr16
test
jno
inc
xchg
adc
mov
jmp
mov
ud0
sub
ljmp
jbe
mov
xor
fmul
cli
cmc
inc
lods
sub
add
pop
in
insl
insb
leave
adc
adc
push
jno,pt
add
orb
inc
call
mov
xchg
cmp
das
ja
orb
sahf
lock
dec
movl
sbb
cltd
push
shr
dec
pushf
ds
adc
fdivrs
mul
mov
lock
add
pop
cmp
repz
loope
or
pushf
mov
les
arpl
lods
pop
adc
push
adc
mov
clc
call
pop
sub
shl
mov
outsb
adc
push
push
or
data16
sarl
mov
cltd
pushf
jmp
mov
jo
inc
lds
adc
sbb
ret
imul
repnz
dec
movsl
decb
lret
lret
jae
jle
xor
mov
test
add
inc
int
in
push
xor
push
jbe
jmp
cmc
mov
jo
xchg
xor
mov
jg
xor
and
mov
or
ja
pop
lods
jno
mov
pop
mov
into
out
mov
mov
idiv
clc
dec
mov
xchg
dec
sbb
sarl
dec
into
test
imul
in
jmp
sbb
mov
inc
call
lea
call
fxam
jne
dec
pop
and
mov
push
or
stc
scas
insb
aad
js
mov
out
arpl
jl
aad
rol
rolb
pop
stos
test
imul
mov
mov
loopne
push
lock
or
dec
cmp
mov
sbb
xchg
push
popf
jo
xchg
or
into
mov
mov
fstpl
mov
push
sub
shl
stos
rcrb
dec
adc
iret
aaa
ret
dec
pop
push
dec
adcb
jbe
xor
push
add
add
lds
jle
mov
not
mov
mov
sbb
sub
mov
ja
xchg
dec
out
test
xchg
or
idivb
out
jo
mov
xchg
pop
stc
pusha
add
sub
aam
sti
jmp
rorb
sbb
out
lahf
cmp
imul
jmp
cmp
ret
test
icebp
cld
or
sbb
mov
xchg
xchg
xchg
and
stc
daa
cmp
es
push
das
aad
cmp
mov
push
cwtl
jp
ja
mov
cmp
xchg
test
daa
mov
test
loopne
sbb
inc
add
vpaddq
lock
mov
push
inc
xchg
dec
mov
movzbl
ja
pop
loope
aam
pushf
adc
sub
das
pop
enter
xchg
lahf
lcall
dec
push
sbb
xlat
inc
add
imul
jae
xchg
jl
mov
mov
mov
les
pop
mov
daa
test
fisttpll
mov
inc
cli
cltd
jnp
mov
test
addb
in
mov
cwtl
test
gs
mov
mov
xchg
mov
das
cld
dec
or
leave
push
fdivp
mov
push
mov
in
xor
jge
shll
mov
cmp
in
sbb
insl
mov
xchg
test
rcr
es
std
cmp
sub
sbb
xor
mov
add
test
jmp
fwait
pushf
xchg
xor
jb
idivl
test
out
fwait
pushl
ljmp
neg
dec
aam
stos
jg
popa
cmp
xor
cs
sub
jnp
adc
inc
mov
xor
xchg
loopne
sbb
pop
icebp
mov
pop
xor
fldenv
inc
mov
adc
xchg
mov
mov
call
xchg
cmp
das
cltd
pushf
inc
js
sarb
flds
jecxz
inc
sub
xor
repz
jbe
xor
add
xor
push
push
faddl
sbb
ss
cmp
jno
imul
cltd
inc
lar
out
pop
sbbb
int
into
aas
jo
or
mov
sub
push
ret
addl
shll
xchg
pop
repz
pop
cmp
or
mov
fwait
js
push
jbe
or
out
sub
jl
mov
call
add
dec
out
imul
ret
dec
test
push
andb
xor
sahf
lret
xor
test
jnp
flds
stos
push
loope
arpl
icebp
stos
clc
aaa
adc
pushf
out
fs
dec
sub
ljmp
shrb
out
sarl
sarl
int3
in
gs
xchg
jnp
push
scas
in
jne
adc
test
sub
xchg
xchg
add
xor
fists
sahf
lret
cltd
ljmp
mov
or
adc
icebp
enter
xor
lock
xchg
mov
in
shrl
sbb
sub
hlt
pop
or
xor
inc
xor
fadds
divb
pop
adc
fucompp
cli
or
loope
out
sbb
pop
jmp
pop
arpl
lds
adc
mov
adc
push
outsl
pop
xchg
mov
cwtl
std
push
into
mov
inc
in
in
pushf
ret
fsubl
test
iret
gs
adc
pop
das
mov
xchg
push
mov
and
adc
xchg
stc
jl
and
pop
cltd
push
les
jmp
in
lea
negl
jp
js
rorl
aam
inc
inc
stos
shl
or
push
pop
mov
pop
out
jmp
xchg
push
leave
sbb
scas
push
gs
push
sbb
mov
aad
mov
pop
mov
inc
xor
sahf
dec
mov
ds
popa
or
js
mov
mov
dec
push
enter
test
add
cmp
sbb
hlt
or
mov
aas
pushf
in
js
cmp
push
shll
sbb
dec
daa
enter
or
push
jae
sti
sub
mov
xchg
fwait
aam
std
lahf
mov
lock
leave
stc
popa
fnsave
outsl
add
addr16
sahf
addr16
pop
aam
xchg
mov
dec
aad
add
push
push
xchg
int
push
int3
push
lret
out
mov
loop
dec
cmp
bound
jl
pop
jge
ret
jecxz
gs
cmp
cmova
xchg
nop
pop
cmp
jnp
jae
pop
test
rcl
int3
enter
pop
jge
sahf
inc
fisubrl
outsl
adc
imul
mov
add
dec
fld
add
repnz
std
fidivs
sbb
fdivl
push
xor
test
adc
push
int3
lret
sbb
je
or
das
lahf
int3
pop
push
jbe
mov
pushf
scas
sbb
or
insb
pop
jp,pn
add
arpl
lea
push
repz
xlat
or
mov
fidivs
xor
out
iret
cmp
mov
jmp
jg
xor
sub
cld
push
adc
dec
and
mov
xlat
shll
and
aad
imul
jp,pt
in
pushf
sti
mov
mov
cmp
inc
inc
cs
jmp
jno
push
lods
push
decb
cmpsb
test
sub
rorl
frstor
pop
lcall
stos
jl
pop
mov
pop
cmpsb
pop
or
loop
into
jecxz
pop
fistl
push
adc
fs
jns
xor
dec
les
scas
dec
push
fwait
pop
lock
fwait
pop
loope
xchg
add
nop
push
stc
pop
xor
push
cmp
test
in
mov
adc
in
loopne
xor
cmpsb
xchg
push
ret
push
es
clc
mov
jl
fisubrl
xor
sbb
ret
lods
xchg
testb
iret
pop
adc
aas
addr16
dec
push
jecxz
scas
and
xor
pop
test
jnp
sub
outsb
popf
mov
sub
repnz
mov
lcall
mov
mov
das
adc
lea
lock
fadds
addr16
push
les
adc
mov
out
lret
lods
daa
das
in
mov
adc
cwtl
sub
fsub
xchg
cmc
xchg
push
mov
push
in
jl
ds
aaa
in
scas
xor
cld
jle
jno
inc
sub
test
fcoml
inc
push
sbbl
xor
cmp
cmc
or
std
pop
mov
sbb
iret
test
fwait
cmp
or
cli
jecxz
pop
sbb
syscall
insb
scas
daa
xlat
xor
shlb
and
jp
mov
xchg
ljmp
sbb
cmp
sbb
shrl
xor
push
clc
test
in
mov
popf
xchg
fidivrs
mov
and
sub
mov
mov
xchg
lods
pop
ds
fs
xchg
hlt
jge
push
xor
adcl
cmp
in
cld
inc
push
movsb
mov
out
movsb
push
arpl
jbe
imul
rclb
mov
xchg
loop
pop
add
ret
or
test
lods
mov
xor
push
dec
lcall
movb
mov
adcl
adc
jbe
mov
sub
xchg
jno
outsb
imul
outsl
repnz
xchg
fidivs
inc
cmp
mov
mov
inc
dec
js
or
sub
dec
dec
repz
je
add
adc
or
xchg
sub
add
scas
shrb
xor
push
mov
sub
stos
stos
or
rorb
sub
add
cld
in
lods
push
xchg
pop
cs
push
ds
cli
pushl
daa
mov
mov
out
push
and
or
fists
jg
insb
jge
add
mov
mov
mov
rcl
test
xlat
sbb
fidivrs
cmp
dec
push
fwait
into
clc
dec
mov
mov
cwtl
inc
les
pop
into
jle
scas
push
movsb
out
xlat
sbb
xor
std
lock
aam
aam
das
push
cmpsb
inc
mov
clc
repz
addr16
iret
sub
sub
rorl
test
mov
in
lcall
mov
or
repz
enter
inc
leave
jbe
xchg
push
mov
lahf
pop
inc
imull
mov
add
add
or
pop
scas
adc
mov
sub
jo
fistps
mov
xor
dec
push
out
clc
popf
scas
enter
xchg
push
mov
adc
sbb
cwtl
inc
ficoms
jo
xor
xor
cmp
jae
or
jb
pop
xchg
arpl
sbb
ja
lahf
add
int
faddp
testb
fwait
lock
sbb
jb
pop
mov
push
cmp
mov
cmc
ljmp
dec
mov
or
push
and
scas
xchg
push
jl
xchg
fsave
push
add
idivb
pop
lcall
xchg
cmp
jns
aad
movsl
add
dec
sbb
ret
jns
fwait
push
sub
call
inc
dec
or
mov
arpl
jae
ret
cs
loopne
jb
mov
sahf
es
pushf
pop
inc
jno
fidivrs
cli
fistps
jecxz
jns
pop
xchg
add
lahf
loope
push
pop
sbb
hlt
mov
dec
lds
ja
and
mov
pop
push
ja
hlt
insl
xchg
mov
jle
aaa
jns
clc
cmp
adc
lds
aas
lock
ja
outsl
test
movsb
leave
inc
push
test
mov
push
les
sub
mov
test
jle
cld
dec
hlt
sbb
fcoml
cmp
xchg
cmpl
xchg
addr16
cmp
mov
jle
sbbl
mov
cld
push
cmpl
out
outsb
mov
or
jg
pop
push
mov
int3
mov
xchg
xchg
jle
dec
les
add
sbb
xchg
fdivl
decb
xor
es
lret
mov
adc
or
aaa
addr16
xor
mov
jp
pop
pop
jno
sub
mov
fwait
ljmp
pop
pushf
pop
shl
adc
mov
dec
adc
xor
push
call
call
ret
mov
push
adc
mov
mov
loop
bound
cmc
fcompl
dec
sub
mov
pop
pop
out
cmc
add
test
cmp
fwait
add
xchg
and
mull
out
scas
outsl
cmp
xchg
mov
mov
xchg
fcmovb
aam
stos
pop
push
jno
xor
adc
add
in
jp
test
fdivs
nop
mov
push
ficomps
mov
mov
daa
sbb
push
jns
lods
add
or
es
mov
jne
push
popf
call
cli
shrb
dec
stc
aaa
add
out
movsb
mov
test
cmp
add
jo
inc
or
daa
mov
push
test
lods
jg
push
push
sub
jb
scas
xchg
lcall
pop
fwait
sub
data16
out
mov
mov
cmp
mov
in
add
xlat
mov
mov
loopne
jmp
and
stos
inc
jo
ficoml
cmpxchg
xchg
lgs
jne
pushf
push
and
add
cmp
sahf
adc
adc
mov
push
cmp
daa
xchg
gs
cmp
arpl
addr16
jmp
push
in
aaa
popa
inc
cltd
loopne
mov
inc
movsl
out
jg
cltd
sub
dec
lods
shll
mov
seto
andl
ja
inc
fmuls
sarl
mov
inc
sub
lods
aaa
arpl
or
data16
mov
lea
pop
mov
rcll
popa
sbb
cli
iret
or
or
pop
mov
sbb
popa
pop
int3
out
std
adc
sbb
adc
jns
pop
out
jmp
xor
fmul
adc
pop
out
dec
inc
push
ret
add
pop
jb
int3
and
cmpsl
loop
lods
inc
jae
xor
ljmp
sbb
dec
pop
dec
or
lea
cmpsb
test
pusha
outsb
ja
aaa
push
xor
xor
and
fisubl
aad
mov
dec
fadds
push
mov
je
lahf
adc
cs
mov
push
pop
mov
aad
dec
xlat
add
in
rcll
lods
or
or
add
or
stc
push
sub
push
cmp
sub
ficoml
aad
or
push
push
mov
xor
sbb
std
fs
push
test
cmp
push
cwtl
pop
insl
pop
xchg
add
xor
jnp
mov
test
pop
hlt
jb
mov
push
das
xchg
into
clc
or
ret
jl
xor
sti
shl
or
lods
jns
inc
sbb
addb
jle
loopne
push
pusha
enter
fcompl
mov
jns
roll
mov
sbbl
dec
and
jecxz
push
incl
test
outsl
loope
mov
mov
fcom
dec
dec
in
mov
xchg
adc
shlb
mov
jge
fsubs
mov
int
cmpsl
gs
fsubp
xor
mov
je
sti
daa
and
xor
pop
imul
iret
and
or
push
imul
cld
pop
gs
xchg
mov
push
adc
into
outsb
repz
push
cmp
cmp
std
lds
mov
out
jmp
es
cwtl
enter
cmpsl
pop
pop
mov
jne
adc
jbe
cmp
sbb
inc
in
inc
cld
jne
fcmovne
sar
aas
pushf
lds
sbb
movsb
and
sub
jae
push
jge
or
add
test
push
mov
xchg
xchg
lret
or
jecxz
iret
popa
jg
jb
repnz
into
or
lock
push
cwtl
jne
jmp
pusha
jge
fdiv
outsl
sub
dec
in
push
enter
mov
ret
les
push
inc
xchg
xor
test
out
in
lcall
enter
scas
cs
xchg
das
pop
mov
adc
fs
cmp
jmp
or
icebp
mov
mov
repz
push
orl
cli
jg
lret
cmp
xchg
nop
lods
mov
dec
pop
neg
sbbb
dec
int3
mov
ljmp
into
mov
pop
shrb
adc
mov
adc
xchg
out
ret
xchg
jb
inc
fs
jecxz
test
sbb
inc
jb
dec
or
pop
mov
test
sti
adc
sub
jb
push
cltd
test
pop
push
xlat
fsubs
shl
xlat
mov
in
or
cmp
xchg
and
push
mov
lea
pusha
sbbb
and
mov
or
xchg
xchg
ror
in
jb
loope
lea
mov
shlb
test
xor
mov
arpl
jbe
pop
inc
sub
adc
dec
adc
xor
into
addb
xor
cmp
adc
jp
mul
pushf
or
sbb
imul
dec
inc
jno
imul
jae
add
jns
sbb
iret
dec
std
stos
sub
lea
mov
fcoms
mov
mov
enter
fildll
pop
cmpsl
lock
cwtl
xchg
mov
stos
imulb
mov
icebp
pop
out
pop
mov
inc
adc
fcmovnb
push
dec
or
mov
add
dec
cmp
add
mov
es
pop
push
xchg
aam
sub
and
lods
mov
sub
sub
cmc
lcall
lret
dec
pop
imul
repz
pop
outsl
cmp
xor
sti
aad
adcb
sub
pop
shlb
cltd
lds
js
stos
xor
rcrl
sub
dec
fisubl
add
jp
rcrl
repz
sbb
mov
pop
add
pop
mov
pusha
xor
in
sbbb
cmp
mov
scas
sbb
imul
jg
mov
fwait
out
loope
stc
xchg
cs
and
xchg
jae
push
adc
daa
fisubrl
dec
push
out
xchg
int3
cmp
xchg
push
xor
repnz
mov
jle
movsl
mov
add
outsb
stc
push
fisttpl
mov
sbb
out
out
out
xchg
mov
out
xchg
movsb
sub
popa
repz
icebp
cmp
push
pop
push
inc
rcrl
imul
repnz
cli
hlt
jl
stos
jo
repz
cmpsb
jle
hlt
in
jne
inc
jmp
fldt
mov
cmpsb
add
xor
shr
popf
mov
inc
popa
mov
mov
push
add
mov
xchg
jg
jg
mov
mov
ficompl
jae
inc
inc
ficompl
and
sub
add
mov
sub
lods
mov
adc
popa
and
fidivrl
hlt
mov
mov
mov
repnz
adc
xchg
mov
pop
xor
and
cmp
insb
mov
rcl
aam
jl
sub
cmp
pop
cwtl
push
pushf
jae
and
ret
nop
xor
lret
decb
lds
sub
pop
cld
xchg
xor
inc
dec
pop
pop
jle
and
jb
inc
aaa
inc
fisubl
adc
mov
stos
push
testb
sahf
neg
adc
push
xchg
inc
and
lods
xor
and
mov
jge
pop
clc
sub
sbb
jne
loop
xchg
mov
dec
fs
lds
push
and
cmp
sarl
dec
int
movsl
jo
mov
adc
stos
int
loope
mov
lcall
sti
inc
cmp
pop
cmp
xor
pushf
stos
mov
xor
in
call
sbb
sbb
xchg
add
aad
and
xchg
shl
ljmp
fiadds
mov
pop
mov
stos
out
adc
lret
fldt
jb
sbb
push
outsl
sbb
out
inc
pop
jle
arpl
and
mov
cmp
mov
add
into
cwtl
xchg
ja
pop
ja
lret
pop
jns
inc
dec
fnstsw
and
jp
sbb
push
js
mov
xchg
mov
je
fdivr
cli
xchg
gs
test
sub
imull
lods
jb
mov
mov
ret
ds
mov
mov
inc
cmp
loope
cld
out
mov
cmpsl
mov
dec
sub
cmc
add
aas
adc
add
stos
fcomps
jb
sbb
push
xchg
gs
or
dec
out
jnp
cmp
popf
fsin
mov
into
or
sar
leave
cmp
adc
jno
dec
es
scas
clc
in
inc
cmpsb
mov
or
pushf
cmpsb
outsb
pop
sbb
int
out
sti
out
cmp
jl
rclb
cmp
and
mov
cmc
mov
movsl
mov
adc
jecxz
push
push
mov
mov
sbb
sbb
mov
leave
cmc
xchg
sbb
jb
repz
inc
jmp
bound
xor
mov
lret
arpl
xchg
cli
inc
cmp
xchg
nop
insb
push
xchg
call
nop
ret
and
psubb
imul
iret
mov
xor
dec
in
jno
aam
sub
ret
mov
mov
ss
dec
test
lea
cmp
out
and
out
push
jo
int
push
sti
cmpsb
sub
xchg
sub
xor
pusha
inc
std
sbb
add
repnz
adc
bound
ja
mov
lret
mov
repz
into
insl
in
mov
or
cmp
mov
in
jecxz
or
rcll
invd
pop
shll
out
inc
adc
xchg
xchg
sub
xchg
in
cmp
dec
aaa
and
mov
aam
cmp
dec
sub
push
sarb
mulb
cmp
cs
clc
xor
dec
fucomi
jb
pop
ror
inc
repz
inc
imul
sbb
sub
xor
fldl
aas
test
nop
cmpl
leave
xacquire
jns
jle
mov
mov
pop
addr16
cmp
sub
and
popa
push
cmp
dec
sub
pop
pop
lcall
pop
inc
rcll
mov
xor
aas
movl
add
or
push
lahf
dec
mov
xor
mov
adc
outsb
ljmp
xor
sbb
out
movsl
jae
mov
cwtl
add
aad
xchg
addr16
mov
and
lock
dec
add
adc
in
jbe
mov
fwait
and
dec
mov
mov
std
mov
popa
decb
mov
jg
jg
sbb
cs
push
pop
pop
add
hlt
ret
dec
sarl
lcall
in
sbb
push
mov
push
sbb
test
mov
shlb
loopne
fs
aam
xchg
mov
in
out
ret
push
sbb
lcall
xor
loopne,pn
jge
iret
adc
mov
mov
mov
nop
out
imul
jo
mov
cmpsb
jge
int
nop
fsubrs
iret
jg
cmpl
and
or
cld
jl
mov
push
mov
cwtl
shlb
adc
xchg
test
test
dec
and
mov
pop
sbbb
inc
xchg
int
inc
stc
push
ret
push
mov
int
sahf
mov
sti
popa
add
or
stc
mov
jge
and
orl
cmp
fs
test
das
sahf
mov
movd
pop
sub
cld
daa
js
and
repnz
sub
mov
scas
ficompl
fld
push
popf
fisttpl
dec
and
std
lods
shlb
inc
add
sahf
xor
popa
ficompl
jecxz
loop
mov
sub
and
xchg
pushf
test
xor
push
mov
inc
imul
mov
bound
xchg
xchg
repz
mov
pop
je
int
xor
adc
pmulhuw
aaa
mov
scas
mov
or
xor
pushf
mov
sti
sbb
pop
or
lcall
and
mov
aad
sub
inc
data16
fwait
iret
cmc
addl
test
cmpsb
pushf
fdivp
shll
aam
fiaddl
adc
or
jb
inc
test
push
dec
data16
outsl
inc
and
popa
nop
jns
inc
ror
in
push
loop
xor
jge
push
dec
push
add
pusha
pop
xor
cs
mov
ja
popf
pusha
mov
jp
subb
push
mov
xor
and
push
stos
je
and
test
push
repnz
adc
ret
ficoml
clc
push
inc
scas
aas
adc
rorb
repnz
push
push
jle
inc
hlt
mov
cs
add
mov
out
fs
lock
mov
pop
cmp
jns
adc
cs
pop
loopne
mov
sub
loope
sub
add
inc
clc
mov
sub
fstp
push
xchg
enter
lea
add
cmpsl
in
mov
jge
mov
mov
xor
cmp
out
mov
sub
push
inc
mov
mov
adc
and
add
cmp
xor
cmpsb
jg
inc
mov
jmp
lret
adc
sbb
fs
mov
shlb
shrl
aaa
paddsw
outsl
out
add
nop
sub
mov
xchg
jl
cs
and
xchg
js
jb
pop
inc
and
stos
xor
mov
sub
enter
repnz
jmp
and
pop
mov
mov
cmp
cmpsl
out
mov
test
mov
cmpsl
ret
and
jns
add
xchg
movq
into
vphaddubw
ljmp
dec
stc
dec
ss
int3
pop
mov
sub
inc
push
dec
jnp
cmp
mov
adc
lock
addr16
add
or
adc
xchg
pushf
xlat
jnp
jae
xor
btcl
sub
in
cmpsl
push
imul
fs
imul
add
jbe
sahf
cmpb
notl
and
ja
adc
and
jmp
cmpb
adc
jp
test
sbb
lahf
daa
xchg
fcoml
mov
idivl
jg
and
mov
add
cmp
jne
cmpsb
pop
js
dec
and
loopne
pop
test
xor
aam
jb
cltd
sbb
jecxz
mul
push
in
test
movsl
lcall
scas
mov
mov
mov
aad
lods
loope
inc
sti
decb
in
loope
enter
cmp
cmp
lahf
mov
js
dec
mov
fdivl
and
ljmp
xchg
inc
lods
fwait
inc
mov
test
push
lcall
push
dec
jns
sub
dec
aam
ret
sub
adc
lods
pop
push
ljmp
hlt
bound
fldcw
loop
jecxz,pn
clc
fistps
pop
test
ja
test
leave
or
test
and
push
int
jnp
adc
sarl
or
mov
stos
outsl
push
pusha
scas
inc
sahf
roll
push
pop
sub
in
mov
sub
jp
fwait
cmp
sub
aad
lahf
dec
cmp
negl
mov
push
sbb
jl,pn
imul
aam
and
jns
mov
sarl
xchg
mov
shl
das
fldcw
push
addr16
addl
imull
sti
cmp
insb
jmp
cld
cld
or
iret
outsb
pusha
adcb
pop
out
faddl
mov
add
loopne
sbb
std
inc
std
out
lcall
int
jns
sub
push
and
mov
clc
adc
popf
fwait
pop
scas
sbb
and
data16
add
test
iret
sub
ret
jge
test
mov
pop
jecxz
mov
pop
add
pop
fists
jge
rclb
push
or
adc
aas
aam
std
nopl
sahf
fdivrl
call
popa
fcmovu
orb
hlt
sti
inc
lods
mov
stos
lea
ret
inc
adc
and
out
out
and
mov
or
adc
ret
pop
jle,pt
cld
cwtl
jle
dec
inc
mov
pop
ljmp
test
adc
aas
lds
push
cmp
test
push
lea
test
lret
or
pop
mov
sbb
scas
xlat
imul
data16
test
jg
rorb
push
fistpl
xor
movsl
std
imul
xrelease
or
test
imul
es
cli
popf
push
aaa
push
cmp
int3
stc
subb
je
push
push
lahf
cmp
lods
xchg
mull
and
cmp
jnp
scas
cli
pop
aad
mov
scas
pop
xor
lods
sbb
and
shr
xor
popf
dec
outsl
out
dec
and
ja
adc
imul
adc
in
mov
rcrl
inc
mov
jp
ljmp
cmp
movsl
mov
xchg
scas
test
bound
fs
pushw
mov
lret
xor
inc
daa
fucomi
stc
cmp
repz
adc
mov
xor
popa
int3
push
nop
daa
loope
jg
sti
inc
dec
dec
insb
aas
inc
sahf
xchg
jno
ljmp
outsl
bswap
jne
ficompl
dec
inc
arpl
mov
dec
mov
test
out
cld
mov
pop
leave
arpl
jns
sbb
test
cmpsl
dec
jbe
arpl
and
pop
jns
xchg
lds
mov
mov
mov
test
icebp
insb
divb
and
dec
dec
mov
mov
mov
fstpl
icebp
or
jp
je
into
mov
or
lret
call
sub
xor
test
les
fcomps
and
cmp
ljmp
add
lret
aaa
dec
sbb
mov
jmp
sarl
xchg
mov
cmp
jp
mov
push
jbe
pop
mov
movb
push
dec
insl
aaa
xchg
mov
sarl
push
inc
aas
jge
nop
scas
scas
ja
mov
pop
int
mov
sbb
loop
mov
dec
xor
inc
mov
pop
jae
xor
adc
inc
pop
bnd
jle
ljmp
dec
into
sub
pop
cmp
enter
in
mov
sub
jge
fisttpl
or
por
push
loope
pop
pop
mov
out
daa
inc
cmp
mov
loop
xchg
mov
cmp
out
test
leave
inc
push
stc
stos
cmpsb
fwait
push
movsb
or
fwait
add
popa
mov
add
sarb
test
int
loop
in
movsb
lods
stos
popl
pop
je
pushf
pushf
fildl
add
jg
jl
fwait
test
pop
xor
push
mov
inc
fdivl
shl
xlat
fdivrs
fildl
push
std
stos
cmp
sbb
aam
jge
push
mov
bound
sbb
add
jno
push
roll
outsb
out
lods
sti
push
adc
cmp
push
mov
jge
mov
mov
aam
pop
fnstsw
shl
xchg
xor
add
test
xor
xor
mov
mov
fldt
and
adc
gs
out
push
jno
rcrl
adc
cmpsl
push
cmpsl
push
repnz
jecxz
ficoml
xor
inc
shlb
loope
push
mov
test
mov
xchg
lahf
lret
enter
pop
daa
add
push
bound
dec
mov
xchg
add
or
loopne
mov
bnd
int
jae
js,pn
push
jb
adc
bswap
xchg
fistps
ficoms
inc
jne
mov
inc
fldenv
mov
xor
inc
jp
scas
data16
pop
mov
push
gs
hlt
jg
mov
cld
aaa
jb
rolb
int3
outsb
dec
adc
test
mov
sub
or
pop
lds
fmulp
mov
pop
pop
push
sub
dec
pusha
cmp
ja
movsb
add
pop
jo
inc
xchg
aad
jmp
test
lods
test
xchg
les
push
fcompl
aad
cli
js
ficoms
arpl
pop
scas
daa
mov
sahf
movsl
mov
movsl
mov
mov
push
or
or
pop
in
sti
jge
insb
addb
cwtl
js
repnz
inc
cwtl
jbe
insl
decb
repz
nop
mov
adcb
cmp
dec
jle
add
dec
cmpsb
dec
mov
movsb
cwtl
cli
sbbb
cmp
inc
out
dec
jg
aad
sub
scas
or
xor
out
insl
mov
stos
cmp
movsb
mov
adc
push
mov
cs
pop
pop
push
dec
sub
and
cmp
push
js
fldcw
inc
inc
add
mov
aas
into
sbb
sbb
imull
mov
testl
mov
cs
neg
add
orl
jl
cmp
jbe
jnp
loope
xor
sbb
shll
fstpt
test
adc
mov
cwtl
or
mov
mov
std
jl
arpl
inc
fs
jo
imul
sub
inc
pop
adc
jno
outsl
push
scas
idiv
push
out
xchg
and
lea
shlb
mov
and
pop
lahf
dec
pop
test
and
test
fcoms
sub
pop
push
orl
andb
lcall
add
xchg
aad
fiaddl
daa
cmp
sahf
mov
bound
mov
mov
dec
or
pop
loope
jne
lcall
jmp
mov
jae
jno
dec
xor
push
sub
daa
shrl
cmpsl
stos
test
lcall
inc
mov
push
push
sub
ja
into
out
ss
xchg
xchg
ret
aad
call
jp
push
loop
mov
scas
out
push
call
test
cwtl
jmp
adc
outsb
ds
notl
cmp
jl
xchg
imul
dec
mov
ss
push
push
jo
cld
cmp
add
xor
or
sub
or
pop
in
or
push
sub
test
mov
jecxz
orb
dec
mov
and
push
mov
sbbl
mov
push
mov
out
push
lret
ss
mov
jge
mov
mov
mov
pop
pop
ret
lods
icebp
mov
shrb
hlt
mov
out
les
xchg
andb
jbe
repnz
add
scas
out
mov
push
push
test
jns
add
xchg
dec
push
jo
push
out
and
sbb
inc
insb
mov
dec
and
or
pop
rolb
rorb
inc
in
inc
mov
xor
push
int3
cmpsl
shr
stos
adc
sub
add
sbb
sbb
bswap
xchg
cmpsl
cmpsb
mov
pop
iret
fmull
leave
aaa
pushf
xchg
xchg
in
sub
xchg
lods
xchg
jl
push
pop
xor
int3
ficoml
iret
dec
roll
stos
inc
mov
outsl
xchg
sbb
aad
mov
push
addb
icebp
rolb
push
mov
mov
inc
xchg
add
and
jecxz
xor
push
popl
xlat
or
dec
leave
jg
and
hlt
repz
and
leave
pop
ret
inc
sbb
push
or
ret
mov
lods
dec
and
jge
mov
push
xor
inc
sbb
gs
or
fwait
cmp
jne
dec
fnstenv
add
or
stc
adc
pop
out
cmp
or
scas
rclb
mov
out
or
inc
inc
lea
push
push
movsl
cmpsl
nop
xchg
add
ss
and
inc
mov
into
xlat
ja
inc
lahf
das
push
mov
divl
inc
and
arpl
dec
pop
outsl
xchg
icebp
lret
dec
mov
cmp
push
inc
std
sub
cmpsl
xchg
xchg
sbb
adc
lret
sbb
or
in
add
xchg
sbb
cwtl
movsb
jg
mov
scas
in
cli
in
aam
push
jmp
jb
in
test
and
pusha
in
test
pop
mov
add
das
arpl
test
aam
pop
loop
jp
ja
fcompl
pop
xchg
repz
icebp
fsubrl
mov
lret
push
sti
jecxz
sti
cmp
test
xor
jno
out
push
lret
xor
jno
push
dec
clc
popa
das
xchg
mov
in
lret
push
jbe
sub
popf
inc
test
loop
sti
in
dec
pop
push
dec
mov
aaa
std
add
inc
or
test
sbb
push
cmc
cwtl
mov
mov
mov
mov
push
out
arpl
cmpsl
cwtl
mov
popf
cmp
fs
jmp
movsb
xchg
sahf
pop
enter
push
icebp
std
xrelease
sahf
inc
addl
mov
sub
hlt
xchg
fcompl
adc
xor
cmp
mov
cs
xchg
dec
scas
test
aaa
add
out
mov
xchg
rcl
xchg
loop
push
mov
into
out
add
jns
rcll
sbb
adc
idivb
push
mov
imul
sub
sbb
jl
adc
int3
cmpsb
or
repz
lcall
add
lret
xchg
aaa
jns
cld
arpl
and
repnz
imul
sub
data16
int3
xchg
cmp
adc
outsl
or
adcb
pushf
ret
std
addr16
inc
jae
inc
movb
sti
pop
bound
iret
lret
movsl
jb
scas
or
cltd
fisubrs
sub
mov
push
mov
ss
jle
and
out
xchg
inc
push
out
int3
jecxz
out
xor
cli
push
inc
push
outsb
js
movl
push
add
mov
fwait
pushf
cmp
outsl
sbb
scas
je
mov
sub
cltd
lds
fwait
inc
popf
xchg
cmp
adcb
adc
cld
sahf
or
xchg
negb
adc
adc
pop
sub
or
stos
leave
cltd
xor
and
mov
lahf
sub
in
fincstp
aas
sub
xchg
hlt
adc
push
popa
leave
loope
jle
push
xchg
mov
add
sbb
mov
fnstenvs
movsb
test
cmp
inc
mov
or
and
clc
pop
test
inc
jp
pop
cli
mov
cli
fwait
int3
clc
mov
jmp
out
push
enter
addr16
inc
frstor
aad
int3
pop
jecxz
cmpsl
mov
mov
ret
sahf
popf
jge
mov
inc
mov
add
fucomi
into
inc
cmp
js
imul
lahf
ljmp
jmp
ret
push
fs
movsl
inc
int3
inc
xor
xor
dec
clc
in
inc
dec
or
sub
jge
dec
in
shrl
sub
pop
mov
and
cmp
js
and
push
add
add
scas
sub
in
stc
movsl
sbbl
ret
mov
push
jp
push
call
out
ret
jg
lds
add
push
ret
out
test
aas
xchg
push
jbe
rcll
loopne
add
adc
iret
dec
dec
imul
pop
fiaddl
and
nop
sar
push
xchg
push
adc
insl
int
scas
push
mov
lock
popf
cmpsl
cmpsb
sub
fcomip
mov
mov
je
inc
and
nop
aam
xor
mov
lret
mov
mov
and
inc
cmp
adc
rol
lds
lret
jno
lret
and
inc
mov
pop
sbb
jp
cmp
pop
jl
icebp
lods
mov
repnz
inc
call
push
dec
xchg
mov
or
clc
cltd
mov
cmp
mov
in
lock
pop
stc
mov
push
ds
lods
mov
lods
sti
ds
xor
mov
sub
inc
movsl
cmp
fistpll
mov
les
xor
mov
push
int
rorb
imul
scas
sbb
daa
int
cmc
inc
es
jmp
hlt
pusha
test
imul
add
fdivr
xchg
sbb
inc
push
lds
test
cmp
inc
pusha
and
cmc
dec
push
call
and
stos
insl
xlat
mov
xor
cmc
push
push
repz
and
rclb
dec
adc
sbb
or
jb
test
cmp
cld
call
sahf
mulb
xor
sahf
call
divb
fildl
int
das
cltd
add
lods
adc
test
jle
into
or
jbe
sbb
and
push
ja
adc
popa
sub
inc
insb
mov
mov
shrl
je
mov
cmp
sub
mov
test
dec
mov
clc
pop
fildll
es
add
sbb
xchg
push
xchg
stos
std
push
xor
sub
and
cltd
fld
cmc
mov
nop
and
sbb
jp
pop
inc
inc
clc
int
lahf
cmpps
pop
or
cmc
cwtl
and
cmp
mov
mov
rolb
cmc
sub
call
dec
cmp
jno
insl
dec
lea
mov
scas
push
mov
xor
daa
es
pop
das
mov
cmpb
or
xor
ret
add
dec
mov
lods
sahf
adc
xlat
pop
inc
cld
ret
enter
fwait
pop
in
add
sbb
insl
pop
in
rclb
ret
in
pop
loope
hlt
aad
add
pushf
jo
or
loope
pop
pop
out
fstpl
ret
stos
push
pop
and
aas
les
icebp
aas
pusha
cltd
dec
mov
push
in
xor
fcomip
sbb
stos
cmp
lods
adc
lret
aad
sahf
pop
sbbl
out
adc
cli
fldt
es
lea
mov
ret
fs
mov
pop
call
add
aam
dec
pop
testb
mov
jbe
pop
xchg
sbb
int3
std
sub
sahf
icebp
cmpsb
and
adc
popa
inc
pop
xchg
xchg
leave
jb
iret
adc
cmp
or
cmp
jne
insb
xchg
dec
add
outsb
mov
xchg
sti
rclb
pop
dec
popf
das
push
push
push
inc
dec
stos
cmp
mov
cwtl
lock
cmpsl
mov
sub
lods
adc
in
movsb
loope
xor
sub
lock
test
xchg
add
test
gs
adc
jbe
cmp
aad
cwtl
push
mov
dec
roll
loope
call
xor
lret
sub
mov
out
rorb
mov
ljmp
mov
repnz
dec
bswap
fstps
clc
cmpsl
adc
xchg
push
imul
cmpb
mov
std
dec
pop
xor
mov
push
push
out
lcall
cmp
inc
pop
pop
fs
cwtl
jge
xchg
jle
cmp
sub
push
xor
adc
mov
negl
jne
jae
xchg
cltd
fnsave
cld
push
inc
xor
mov
lahf
xor
test
pop
leave
xchg
in
pop
jne
cmpsb
adc
add
cmovo
mov
pop
in
cmp
and
mov
xor
push
push
xchg
cwtl
pop
xchg
cld
lret
mov
cmp
es
stos
sarl
or
cmp
out
cmp
fs
or
and
sbb
jle
loop
jnp
les
mov
xorb
movsb
popf
cltd
fcomp
sbb
test
cmp
xor
jb
test
xor
inc
pop
ret
push
xchg
les
in
bound
mov
movsb
xor
dec
outsb
sbb
jae
fsubr
and
imul
xchg
sub
jno
scas
xor
test
sub
xchg
setnp
add
adc
push
aad
call
int
les
jbe
mov
sub
sbb
mov
clc
add
sub
add
jge
pop
adc
ficomps
adc
inc
jg
movsl
sub
nop
int
fistpl
push
adcb
sbb
mov
ljmp
das
es
or
call
pushf
cs
push
mov
insl
sub
sub
xchg
popf
cmpsl
popa
jb
out
or
jb
xor
lods
ljmp
inc
and
or
fidivs
push
inc
ja
int3
sbb
je
hlt
or
hlt
mov
insl
stos
and
xor
fists
loop
dec
es
movsl
fistpl
sub
sbb
imul
xor
sub
jne
push
sti
jo
cmp
cmp
push
jb
mov
stos
test
push
push
jge
pop
ret
les
sbb
and
in
pop
stos
push
cwtl
and
ret
enter
xlat
aas
xorl
ficompl
mov
mov
fistpll
xorb
punpckhbw
int
inc
sbb
divb
out
lock
es
mov
pop
clc
jmp
jecxz
pop
cmc
mov
out
xchg
fistl
icebp
add
jmp
outsb
inc
xlat
js
mov
lods
out
aaa
inc
push
fbstp
xor
sbb
xor
call
lock
shrb
push
loopne
jle
xchg
jne
cmpsl
cmp
sbb
ljmp
add
aam
sbb
dec
adcl
ss
mov
clc
daa
inc
test
les
mov
movsb
lahf
push
aaa
jmp
ljmp
unpckhps
jl
and
inc
dec
pop
cmpsb
sub
ret
addr16
xorl
mov
lcall
imul
cld
cmpsb
pusha
shl
out
xchg
lcall
arpl
xor
ret
js
jno
mov
lahf
or
mulb
add
insb
adc
in
push
sbb
popa
mov
cmc
pop
xlat
add
out
fdivrs
out
shlb
jnp
int3
and
and
shrb
stos
rorb
push
popa
pop
insb
dec
or
push
inc
cmc
test
ret
idiv
repz
arpl
mov
cs
data16
out
xchg
xorb
jg
popf
cltd
xchg
and
jo
xor
push
xchg
jmp
mov
sbb
ja
and
shlb
mov
hlt
jae
ljmp
cmp
mov
jns
cs
negb
test
in
call
outsl
mov
and
cmpsl
and
xor
mov
mov
add
mul
lret
cld
mov
test
jecxz
cmc
jo
dec
fsubrl
inc
add
in
test
mov
or
push
push
enter
dec
or
add
pop
clc
out
xor
cmpsb
iret
test
xor
pop
mov
fidivl
sahf
cmc
shll
mov
or
stos
push
xchg
mov
xor
sbb
or
push
inc
aas
add
or
jne
pop
testl
popa
xchg
inc
je
adc
push
or
lea
enter
roll
lock
jecxz
cmp
cmp
test
insb
lock
push
pop
loope
int3
sbbl
popl
adc
add
aad
dec
fistpll
add
or
inc
jo
leave
jecxz
mov
mov
sbb
mov
loope
or
mov
fs
or
dec
sub
int
xchg
nop
outsb
lods
xorl
lret
fdivrl
sbb
xchg
mov
fisubs
push
and
popf
dec
adc
jl
jns
dec
adc
jb
outsb
xchg
dec
xchg
push
mov
pop
mov
cmpsl
dec
aas
add
mov
mov
sub
int3
dec
push
mov
aam
mov
lahf
mov
pusha
add
aad
mov
add
push
jmp
gs
mov
or
roll
cmpsb
fdivrs
icebp
lock
mov
cmpsl
inc
cmpsl
or
mov
ds
cmp
out
inc
or
xor
dec
repnz
add
add
pop
cltd
xor
xor
or
in
jg
xchg
mov
loopne
fimull
clc
add
mov
and
lcall
adc
das
xorb
or
sub
push
out
stc
addl
popa
add
adc
jbe
or
dec
adc
out
aam
test
shl
ss
mov
jge
pop
sahf
jg
out
add
push
xor
sti
jns
mov
int
cmpsl
adc
aas
mov
sub
stos
push
xor
rcl
mov
fnstsw
mov
push
mov
imul
mov
aaa
or
les
mov
cld
inc
push
xchg
cmpsl
aas
test
lahf
lods
xchg
cmp
aas
mov
andl
or
push
mov
push
rcll
js
stos
pop
inc
sbb
mov
test
lds
addl
inc
js
call
dec
fcoml
push
xchg
push
int3
mov
pop
mov
jp
mov
outsl
xor
sahf
sub
xorl
and
xor
int
lods
fsts
dec
cltd
les
add
mov
inc
lcall
fnsave
dec
out
jl
loop
leave
rolb
sub
jns
push
fidivrl
inc
sbb
mov
cmpl
inc
adc
fdivs
jae
outsl
sbb
push
rcl
adc
repnz
jbe
push
fadds
push
mov
sahf
xchg
cmc
int3
aad
cs
mov
mov
adc
cld
outsl
es
nop
and
lret
loope
ret
sbb
sbbb
jmp
test
mov
ds
fucomp
jl
icebp
adc
popa
int
imul
sub
movsl
or
add
je
or
sub
shrb
add
xor
adc
in
inc
mov
repz
and
pop
xor
cmp
mov
or
dec
jno
push
in
imul
pushf
and
shlb
out
aad
mov
je
shr
push
add
or
jmp
shrb
shl
fs
mov
xchg
inc
xor
imul
push
jnp
mov
add
mov
imul
push
push
lret
lods
test
xor
cli
mov
pusha
addr16
pusha
and
mov
sbb
ds
dec
mov
adc
rcll
cmpl
shll
push
jbe
mov
fists
fs
stos
aaa
sbb
jno
mov
jnp
dec
insb
add
xor
ror
mov
pop
add
push
adcb
imul
leave
and
jbe
movsl
arpl
cmpsb
aam
adc
lea
pushf
inc
or
push
pop
xlat
sub
test
jmp
dec
sbb
jmp
rorl
sahf
inc
lea
jo
in
pop
ret
xor
add
mov
popa
cmp
xchg
iret
arpl
adc
cmp
sub
popa
inc
int
hlt
inc
push
cwtl
pop
push
mov
aam
jcxz
xchg
inc
lock
hlt
fisttpll
popf
inc
aas
xchg
add
dec
cmp
out
pushf
cld
out
push
add
test
in
sub
push
cmc
inc
mov
stos
mov
into
mov
cwtl
jbe
xchg
add
aaa
ret
sahf
out
mov
mov
fsubrs
cli
cs
jo
dec
push
mov
in
lea
dec
mov
bound
test
jl
test
adc
mov
repnz
outsl
xor
hlt
inc
mov
aaa
nop
decl
cmpsb
or
dec
adc
mov
adc
lods
in
pop
pop
test
aad
push
daa
in
lahf
iret
imul
rorb
cmp
xchg
xor
jae
dec
mov
push
outsl
fmuls
push
push
js
and
push
mov
or
cmp
enter
pop
js
movsl
push
js
mov
into
outsb
subl
pop
fnstcw
leave
add
sbb
testb
pop
and
push
jge
pop
insl
pop
push
in
push
ror
push
mov
xchg
shrl
xchg
out
jg
clc
fcomip
lds
mov
ds
outsb
mov
jno
into
xchg
xchg
push
js
sub
or
fsts
xchg
mov
orl
cmp
push
fwait
mov
iret
xor
fldt
push
enter
xchg
sbb
ror
dec
xchg
inc
je
xor
add
inc
rclb
dec
outsl
and
scas
in
int
sbb
add
mov
mov
jecxz
pop
lock
cmp
aaa
in
jge
call
stc
xor
int3
push
push
shll
or
aas
sub
mov
mov
fstl
xlat
and
push
daa
or
mov
in
imul
lea
ljmp
cld
loopne
movl
ret
mov
push
push
jo
pop
dec
pop
std
loop
popf
dec
mov
sub
mov
movb
xor
jle
pushf
or
jb
xor
jge
push
mov
pop
loopne
mov
xor
cmp
and
cmp
cmp
jns
clc
int
mov
rcrb
xor
jl
out
mov
fwait
pop
adc
inc
ret
testb
mov
sub
test
fcmovnbe
push
xchg
sub
mov
pop
shl
aas
lods
sub
sar
ret
sub
test
or
xchg
sti
cmpsl
mov
ret
mov
cmp
add
repnz
insb
inc
jp
test
adc
sub
rcrb
inc
sbb
iret
mov
xchg
mov
imul
mov
xor
cli
in
repnz
fxch
dec
push
push
repz
aad
pop
jo
jecxz
xor
xor
std
or
mov
cli
xchg
cmp
mov
je
lock
arpl
addl
pop
in
dec
outsb
cmpsl
out
dec
mov
mov
stos
sub
cmova
add
dec
jbe
and
pushf
mov
rcrl
aas
dec
sarl
jns
jb
mov
setge
pop
shrb
sub
jbe
mov
pushf
js
mov
cmp
imull
jno
jg
imul
sbb
ja
stos
daa
repnz
xlat
adc
fldl
loope
in
ror
loop
lahf
mov
mov
and
inc
int3
std
and
push
pop
jle
stos
lock
lahf
insl
mov
push
int3
enter
xchg
inc
add
inc
jae
mov
cmp
push
into
push
or
lea
add
or
psubw
pop
rorl
std
sub
xor
dec
xor
ret
pop
iret
push
aad
inc
std
mov
adc
jo
int
add
sbb
sub
inc
and
xor
inc
dec
fistl
push
or
cli
dec
fsubp
sub
push
adc
pop
mov
cli
jl
stc
pop
enter
nop
lret
sub
insl
es
aas
pop
push
mov
push
adcb
mov
jns
test
or
leave
dec
add
mov
mov
ja
inc
xchg
mov
sahf
xchg
sbb
lds
les
shr
mov
leave
cltd
add
sahf
sbb
aaa
xor
adc
sahf
popf
xor
fiadds
push
lods
ret
pop
adc
or
imul
inc
xchg
jle
aaa
mov
dec
push
xor
mov
subl
scas
lods
ficoms
sbb
adc
inc
in
js
adc
mov
mov
jns
pop
rolb
lds
add
subb
or
int
movsb
push
shll
mov
sub
cld
pop
inc
fisubs
push
mov
sub
mov
lock
incl
adc
xchg
cmp
xchg
and
movsl
std
pop
sub
inc
lret
js
jne
push
sub
sub
dec
lds
push
cmpsb
aas
or
std
sub
push
mov
and
test
sarl
mov
adc
iret
subl
iret
cmp
push
stos
adc
sub
add
jo
xchg
and
pop
pop
xchg
mov
xchg
fldcw
ret
popa
dec
mov
aas
xchg
stos
or
push
mov
jne
lds
cmpl
mov
dec
xchg
fs
jno
jmp
mov
xchg
nop
sub
sbb
dec
sarb
std
jnp
adc
xchg
jae
negb
mov
mov
outsl
pop
jg
movsl
lds
jmp
mov
in
repz
xor
lret
gs
mov
das
ja
sbb
pusha
sti
adc
push
aad
test
pop
xchg
jp
repnz
test
cmp
sti
addl
sub
jbe
enter
jnp
out
mov
sbbb
inc
cld
aas
addb
adc
lret
sti
jae
divl
dec
fnstenv
andl
inc
mov
mov
ds
outsl
pop
xlat
sbb
popa
ret
push
loop
cmpsb
int3
stos
push
push
test
and
in
sti
gs
and
fs
popf
imulb
enter
daa
sbb
jnp
mov
jb
jl
sahf
mov
adcb
rcll
fldenv
and
cmp
xchg
cli
mov
pop
das
es
sti
adc
dec
fucom
insb
inc
sbb
repnz
popf
or
mov
or
rorb
fcmovnb
les
imul
mov
bound
xchg
loopne
scas
cmp
xor
pop
iret
imul
imull
jl
incb
test
les
inc
sarl
cmp
ret
or
movsl
cld
cltd
stos
fisttpll
cmp
pop
or
push
adc
mov
jecxz
clc
sbb
cmp
add
or
cmpsl
jp
ret
xchg
andl
sbb
sub
mov
pop
cltd
and
sub
mov
jle
test
fisubs
xor
push
nop
fcompl
jo
inc
out
and
clc
movsl
sub
dec
mov
mov
jg
ret
les
out
inc
cmp
in
pop
add
sbb
xor
shlb
das
mov
popa
repz
pop
xchg
hlt
and
ret
icebp
lahf
and
adc
outsl
mov
cs
je
push
jl
cmp
fiaddl
jns
jae
sbb
loope
aam
in
or
adc
push
call
mov
mov
in
add
adc
sti
cld
mov
pop
jmp
dec
ja
add
in
lahf
out
js
dec
or
or
mov
rcrl
or
pop
push
cmp
and
pop
fisubrs
sbb
outsb
sbb
fmuls
or
nop
aaa
fstpl
les
and
push
shr
dec
es
fisubrl
lret
or
lahf
ja
inc
cmpsb
sarl
cli
mov
sub
mov
lret
push
xor
or
inc
push
mov
push
ret
jnp
inc
bound
xchg
pop
adc
rorb
jns
aad
pusha
sub
test
and
fs
lcall
jge
ss
add
sub
push
push
jecxz
dec
jbe
loop
mov
sub
sbb
lods
mov
dec
jbe
fbld
mov
sub
cld
mov
sbb
sbb
xor
sbb
insl
pop
mov
sub
dec
push
int3
jno
push
aaa
fdiv
mov
sbb
cmc
loop
jl
out
inc
xlat
addl
out
jb
popa
std
gs
fdivl
mov
pop
pop
mov
scas
lea
in
mov
add
add
dec
clc
jbe
and
cmp
stos
add
cmp
insl
sub
xchg
outsl
mov
sbbl
sbb
push
movups
lods
in
add
sub
cli
mov
hlt
jge,pt
lcall
call
or
lock
jae
scas
jmp
cmpsl
les
adc
xchg
mov
out
je
es
pop
call
xchg
punpcklwd
out
pop
adc
jnp
loopne
pop
es
xchg
shl
cld
aam
shrl
or
dec
mov
adc
test
adc
jae
in
sbb
pop
lahf
push
xchg
xor
test
addr16
jbe
cmp
xchg
lods
sub
mov
es
mov
je
mov
and
fnsave
test
test
iret
mov
xchg
cmp
test
std
sbb
mov
cmc
cmp
or
into
push
fimull
arpl
ss
and
jg
jno
mov
fstpl
aam
push
xchg
cmp
xor
out
adc
repz
clc
cli
mov
mov
mov
add
inc
mov
sahf
cmp
fldcw
push
pop
cltd
shlb
xchg
cmc
arpl
xchg
lods
pop
fsub
movsb
dec
movsl
std
fisttpl
aam
nop
lea
mov
dec
sahf
jg
movsb
sub
repnz
jp
ja
jle
and
jmp
arpl
lret
je
outsl
outsb
out
inc
inc
aas
jg
push
sahf
incb
leave
push
je
loop
pop
push
scas
adc
inc
lret
push
insb
mov
icebp
ret
ror
outsb
push
enter
es
movsb
loop
cmc
push
imul
mov
push
xor
jg
or
push
movsb
xchg
fwait
dec
mov
pop
imul
mov
dec
mov
les
dec
cwtl
adc
lret
inc
movsb
mov
pushf
inc
xchg
inc
es
into
xchg
pop
in
gs
sbb
cs
loopne
sbb
test
jb
fidivl
jbe
mov
or
in
dec
rorb
jge
cmpsl
pop
lock
fwait
sbb
inc
scas
sti
mov
inc
negb
xor
mov
fcompl
movsb
out
jnp
add
bound
inc
pop
int3
iret
lcall
int
dec
in
cmpsb
ret
sahf
push
pop
inc
scas
xchg
je
inc
fimuls
mov
adcl
sub
or
and
data16
xor
xchg
mov
in
rorb
enter
mov
dec
push
push
ljmp
addr16
or
cmc
shrd
lods
shlb
mov
or
xchg
shrb
aam
inc
xchg
sbb
and
or
mov
aas
sub
cld
sub
std
stos
inc
repnz
or
mov
inc
push
and
push
sub
dec
and
fadd
sub
jle
loop
scas
xchg
push
fnsave
pop
jecxz
jp
arpl
mov
fnsave
push
movsl
mov
fists
out
cmp
daa
out
out
dec
rcrb
add
lret
push
add
dec
outsl
clc
push
pop
lret
adc
aam
aas
dec
fstps
dec
dec
jle
mov
add
jl
data16
xchg
ficomps
shl
xchg
pop
sbb
pop
lcall
push
mov
xor
fiadds
loope
test
out
jb
pop
cmpsb
stos
cmpsb
pop
lods
icebp
jp
rolb
mov
rcl
push
jno
jns
push
mov
xchg
mov
dec
mov
mov
aas
or
arpl
fisubl
fmull
and
outsl
xchg
dec
xlat
loope
push
sbb
out
cli
in
inc
gs
decl
mov
mov
jnp
mov
mov
mov
test
cmp
mov
pusha
arpl
mov
sbb
bound
sub
xchg
xchg
dec
add
jne
xchg
adc
push
dec
test
push
sarl
in
imul
sbb
push
test
cmc
imul
push
shll
addr16
aam
sub
inc
jno
decl
call
shll
aam
lods
jno
cmpsb
lds
cmp
jmp
push
adc
mov
mov
pusha
js
data16
imulb
dec
jg
lret
push
xor
push
lods
push
sub
ja
sarl
mov
mov
mov
sbb
in
sahf
xor
rol
sub
or
inc
xlat
in
incb
inc
filds
test
push
adc
and
inc
lcall
pusha
insb
fiaddl
jae
in
and
cwtl
ja
lret
inc
movsl
sbb
pop
inc
pop
inc
add
push
or
movsl
into
or
or
int
add
ficoms
sbb
shll
jns
aam
sub
pop
mov
inc
dec
js
sahf
dec
sub
mov
sbb
jb
div
jle
pop
pushf
push
push
aad
scas
cmpsb
sub
xchg
les
pop
mov
cmp
les
in
into
add
rcll
jecxz,pn
dec
call
lret
ss
push
stos
jl
inc
insl
jl
xor
ljmp
mov
push
push
sbb
push
cmp
fisttpll
and
push
subl
mov
push
bnd
fcomi
mov
push
jns
mov
dec
inc
mov
aas
jp
fsubl
jl
out
shl
xor
and
std
rclb
jno,pn
ss
pop
sbbl
fiaddl
insb
mov
dec
ss
jbe
cmp
pop
shrb
adc
mov
scas
inc
mov
stos
outsl
xor
jo
fs
loopne
ljmp
shld
xchg
mov
clc
ja
daa
cmp
cmp
std
jns
lods
fldlg2
jns
cmp
sub
pop
xchg
jge
cmpsl
mov
add
cmpsl
daa
fdivl
adc
fiaddl
cld
loop
fcoml
sub
lret
adc
xchg
add
jge
adc
push
movsl
inc
inc
repnz
test
pop
ret
xchg
jo
and
stc
mov
mov
push
or
es
mov
and
inc
out
test
mov
ja
mov
pop
movsl
inc
xor
fwait
pop
pop
mov
jne
fidivrl
lods
xchg
mov
xor
fwait
into
loope
add
xchg
pop
mov
cltd
imul
cmpsb
mov
sbb
add
jbe
cmc
dec
imul
fwait
shrb
dec
jno,pn
pop
pop
jae
outsb
push
pop
and
and
aam
cld
dec
sbb
js
cmpsl
clc
push
sub
sbb
or
mov
cmp
sbb
ret
fnstenv
lea
shrb
mov
jg
inc
int
jno
cmpsb
xchg
sub
in
maxps
xchg
orl
mov
out
or
fnstenv
outsl
pop
imul
out
out
xor
stos
lods
sahf
pop
negl
test
mov
outsb
push
loope
jns
adc
stc
inc
incl
lods
mov
gs
cmpl
mov
fsubrp
call
xchg
mov
and
call
add
shlb
out
gs
jno
nop
adc
sub
out
andl
and
sarb
out
and
and
pop
pusha
imul
xor
jg
pop
and
lret
outsl
ficoms
cmpsl
dec
call
lods
cltd
mov
mov
adc
mov
or
push
sar
mov
jo
jno
fwait
rcrl
mov
clc
loope
xor
pushf
xor
andps
mov
sbb
aas
fstpt
mov
fistps
jg
or
repz
cwtl
popa
xor
adc
outsl
jns
dec
jns
inc
mov
cmp
outsb
cs
mov
sbb
or
sbb
cmpsl
mov
sub
jl
lret
jne
lret
movsb
popf
push
dec
and
xchg
adc
jnp
js
mov
dec
mov
ret
fsubs
leave
int3
sub
push
mov
mov
mov
xchg
push
int3
pop
adc
je
push
ljmp
out
loop
jno,pt
xchg
cmpsb
cld
gs
outsl
xchg
imul
inc
mov
fldenv
pushf
test
dec
jmp
mov
and
mov
xchg
pop
push
jge
lds
aam
fnstenv
mov
lcall
cmp
rolb
in
jg
std
mov
hlt
or
pop
xchg
ja
stc
sbb
adc
pop
jb
test
lock
mov
xor
mov
mov
xchg
add
xchg
cmpl
psrlq
gs
cmp
js
icebp
cmp
jno
aaa
fadds
push
jle
dec
arpl
inc
shrl
out
adc
rolb
addr16
cmp
pop
arpl
addr16
sub
pop
mov
inc
pop
addr16
dec
add
mov
pushl
and
leave
das
sub
pop
dec
fcompl
dec
leave
aad
out
dec
je
push
dec
inc
and
xchg
clc
clc
insl
mov
cmpsb
jmp
mov
cld
push
sbb
int
outsl
outsb
prefetcht1
xchg
inc
jno
mov
adcb
mov
mov
aam
into
sbb
push
pop
push
adc
lods
cli
jns
fbstp
lds
cmp
cmp
fisubrs
nop
push
xor
pusha
push
in
je
mov
orb
inc
jle
test
sbb
cmc
adc
sub
leave
jae
std
push
jl
cwtl
pushf
mov
cmp
mov
xor
add
mov
dec
mov
rol
outsb
pop
pop
fisubs
mov
lret
js
scas
lds
ja
cmp
mov
push
dec
test
sahf
lahf
fnstsw
in
jecxz
leave
jae
in
loope
jmp
ja
sbb
call
stos
out
das
lds
sub
rorl
cwtl
fdivrs
ljmp
shlb
mov
sbb
inc
lret
adc
xadd
pop
inc
test
pop
pop
repz
repz
xor
subl
ss
dec
das
cmp
leave
inc
xchg
aas
xor
or
inc
stos
cltd
enter
adc
and
sahf
das
xchg
sahf
jb
addl
adc
or
push
test
icebp
adc
xchg
xchg
add
mov
fwait
stos
sarb
bound
lods
and
jg
fcmovnu
popf
cmp
mov
ja
mov
popa
mov
sub
test
inc
cmp
cmc
jne
bound
mov
xor
adc
mov
adc
mov
mov
stc
mov
xchg
sub
int
sbb
shrb
inc
adc
lock
das
jmp
mov
adc
and
js
sbb
in
dec
and
sarl
scas
sbb
scas
rcll
fistl
les
je
push
sbb
nop
rolb
jbe
in
stos
clc
dec
and
cltd
mov
jb
mull
pop
dec
push
pop
dec
inc
xchg
mov
in
out
push
loopne
inc
xchg
fisttpll
testl
pusha
cmp
xchg
bound
outsl
clc
jmp
mov
das
lods
cmpsb
cld
add
movl
iret
subb
jne
out
xor
xor
xchg
loope
sub
or
dec
or
xlat
jae
cltd
and
add
les
sub
or
pop
dec
lahf
inc
hlt
sbbl
enter
xchg
popa
mov
mov
dec
xlat
loopne
inc
fs
jbe
scas
dec
dec
cmc
push
ret
imul
cmpsl
test
idivb
lods
xchg
pop
cs
ret
fstpt
xchg
cmp
jge
mov
fwait
jb
push
inc
inc
mov
dec
outsb
pop
sub
jp
mov
cmp
mov
xchg
add
loopne
adc
cmc
mov
movsl
dec
sbb
cmp
std
ja
push
or
mov
dec
jae
jg
out
xor
scas
out
sbb
dec
mov
aas
hlt
inc
icebp
push
rorb
jg
jnp
adc
sub
test
leave
sbb
jmp
adc
pusha
inc
cmpsb
sarb
jge
jecxz
push
testl
jo
imul
mov
xor
sbb
sbb
mov
sti
push
sub
add
das
xchg
repz
std
mov
cmp
ljmp
sub
mov
fildll
xchg
xchg
lcall
mov
lods
cmp
outsb
jbe
repnz
flds
loopne
sbb
jo
sbb
addr16
out
repz
in
out
icebp
or
xor
aad
xchg
repz
fstps
cmpb
mov
sbb
in
aaa
jmp
mov
adc
into
fists
inc
lea
unpcklps
mov
and
lea
jo
rorb
pminub
outsb
mov
dec
sbb
cli
cmp
or
out
mov
xchg
out
orl
pop
iret
repnz
and
or
dec
daa
sti
jp
mov
fwait
outsl
ficoms
fwait
sbb
orl
and
lds
clc
xor
mov
cltd
sbb
call
add
sbb
addb
jae
add
jno,pn
push
dec
movsb
sub
jns
sbb
add
inc
cmp
imulb
cmp
xor
iret
leave
mov
cmpsl
xor
pop
sub
push
lret
into
push
cmpsb
xchg
mov
push
scas
push
lds
adcl
sahf
cld
jle
inc
push
std
mov
fmull
lods
cmp
out
xchg
lcall
lods
rcr
movsl
lahf
sahf
out
loopne
cmp
pop
dec
mov
and
jbe
daa
mov
inc
jle
dec
xchg
loopne
and
xchg
cwtl
jmp
leave
daa
xchg
or
jo
loopne
push
movsb
fwait
and
fildl
test
dec
dec
aam
imull
xor
mov
dec
xchg
fs
fsub
push
inc
jno
adc
dec
stc
shrb
pop
jp
and
loope
arpl
inc
int3
ret
dec
vmovaps
lea
lahf
sub
and
sub
or
push
lahf
mov
test
aam
add
daa
fnstenv
adc
fwait
gs
mov
add
pushf
sub
enter
shrl
adc
inc
aas
jo
mov
clc
mov
out
or
loope
loopne
cmpsb
pop
int3
adc
out
adc
jle
fs
test
out
loop
mov
outsb
outsb
and
cmp
inc
jl
cwtl
sbb
inc
hlt
mov
fldcw
orl
mov
jns
scas
sbb
push
inc
stos
dec
xlat
cmp
in
es
adc
inc
fwait
xor
cmpsl
add
jl
rorl
mov
inc
xlat
clc
int3
stc
in
in
pop
push
add
or
es
add
xor
andl
add
xlat
rcll
pop
popf
in
aad
es
jnp
mov
cmp
popa
pop
adc
xchg
call
dec
pop
icebp
stos
jle
xchg
sbb
mov
and
test
push
mov
jbe
push
xchg
cwtl
pop
jbe
pop
cwtl
push
xchg
fwait
in
test
xor
scas
cmp
es
mov
mov
data16
imul
mov
gs
cmpsb
xchg
lret
jecxz
mov
push
sub
mov
clc
inc
fldl
test
adc
hlt
insl
sub
jecxz
adc
test
call
xor
jmp
pop
jne
es
and
push
sub
adc
mov
jb
hlt
sbb
sbb
xchg
fldenv
mov
lea
inc
and
xor
add
lds
jo
dec
mov
push
pop
adc
mov
out
adc
fwait
das
and
pop
rclb
lcall
xlat
adc
stos
repz
in
out
xorl
fs
jl
lahf
in
mov
pop
clc
mov
mov
and
cmp
jbe
loope
cli
push
jl
jbe
arpl
jo
rcr
xchg
lea
out
fsubl
cmp
jge
lea
aam
pusha
sahf
and
test
aaa
pop
push
repnz
addb
pop
mov
lcall
cmc
inc
cmpsb
or
adc
scas
sbb
jg
or
add
enter
lcall
fsubrl
out
decl
inc
icebp
mov
add
mov
xor
pop
stos
call
test
icebp
testl
cmp
sbb
fdivr
mov
cmpsb
shrl
dec
jb
cmp
xchg
loop
stos
mov
mov
jge
jl
scas
aam
jno
repz
fbld
dec
xchg
dec
aaa
xchg
mov
sub
xlat
mov
adc
lock
aaa
jg
dec
and
ljmp
sbb
lahf
push
aas
or
mov
mov
sbb
subb
xchg
scas
push
mov
lods
and
gs
jbe
mov
loopne
mov
jbe
sarl
sub
xor
pop
rcrb
pop
insl
adcb
dec
fwait
lcall
and
pop
int
ret
out
mov
sbb
xor
mov
and
test
cmpb
vpcmpgtw
loop
push
lret
stos
add
and
pushf
nop
pop
movsl
ret
mov
pop
pop
sub
pop
out
pop
jg
push
fisubrs
cltd
push
push
shll
popf
lcall
or
and
cmpsl
jl
loop
inc
mov
fstps
xchg
call
fbstp
pop
adc
sbb
jae
fcomps
mov
movsl
xlat
inc
cmc
mov
hlt
mov
cltd
fwait
mov
fsubrl
sub
mov
mov
or
and
and
pusha
addr16
xchg
and
mov
test
clc
dec
cli
mov
jne
movsl
mov
jo
push
addl
daa
dec
lret
mov
mov
mov
push
cmpsl
loopne
inc
add
scas
aad
cmp
and
dec
add
lock
lret
out
add
int3
lcall
xor
data16
mov
rep
and
dec
into
dec
ljmp
adc
push
push
es
add
out
movsl
mov
pusha
popa
mov
js
mov
js
push
jno
cmp
lods
les
add
out
out
mov
sub
mov
mov
jmp
jmp
jmp
dec
lods
lock
jmp
movsl
mov
mov
fildll
and
xor
fwait
aaa
loope
pushf
jnp
mov
loope
pusha
rorl
lods
mull
in
es
and
clc
or
cwtl
sarb
sbb
or
cmpb
add
pop
adc
call
push
insl
push
xor
ss
pop
fwait
movsb
pop
addr16
sub
jg
add
dec
stos
test
movsb
inc
jmp
cmpl
add
ss
insb
sub
mov
cld
jp
test
add
iret
imul
mov
int3
movsb
loopne
mov
dec
pop
sbbb
jmp
mov
fldcw
dec
pusha
loopne
ja
flds
xchg
xor
dec
mov
mov
aam
cmp
pop
test
mov
loop
sbb
adc
mov
scas
aad
mov
cli
add
mov
std
mov
mov
cmp
mov
sbb
mov
sub
test
aam
js
ds
mov
xchg
rorl
and
inc
clc
mov
inc
mov
bound
mov
dec
insl
push
imul
popf
lods
sub
out
push
push
adc
fimuls
and
in
inc
je
pushf
pop
clc
lds
xchg
sub
sbb
scas
lods
outsl
addr16
xor
loop
mov
movsl
ja
mov
sub
pop
stos
push
scas
sbb
es
mov
jp
aas
popa
add
mov
outsl
or
in
loope
stc
push
mov
inc
mov
inc
stos
mov
lret
mov
and
lret
mov
push
dec
add
ss
add
gs
clc
pop
pusha
mov
cmp
jb
xchg
icebp
pop
mov
hlt
and
bound
insb
int
mov
cmp
sbb
dec
sbb
cltd
mov
or
aas
push
mov
mov
dec
mov
inc
push
mov
lcall
shll
adc
out
inc
cs
es
pop
mov
js
lcall
sbbb
mov
movsl
mov
adc
jle
sub
mull
aam
and
xchg
inc
testl
ljmp
push
in
cmc
xchg
in
andl
pop
fisubrl
or
xchg
lods
mov
push
pop
stos
mov
and
cmp
les
andb
stc
pop
sub
pop
inc
lods
cmc
mov
aaa
cmp
adc
je
jp
inc
jmp
pusha
xabort
leave
add
or
outsb
pop
arpl
mov
and
mov
mov
jle
cs
arpl
stc
pop
sbbl
bound
lds
add
cmpb
iret
rol
int3
fistpl
add
scas
mov
cmp
cmp
sbb
int3
jno
in
inc
jne
xchg
fs
cs
incl
or
pop
mov
movsw
lret
pusha
pop
or
xchg
cli
pop
cmp
inc
aam
daa
add
or
dec
and
sbb
jg
pop
push
mov
xchg
xor
and
sahf
dec
jb
sub
xchg
ret
dec
out
out
sbb
mov
adc
fsubr
add
mov
loope
mov
out
jae
insl
dec
sbb
cmp
inc
ret
arpl
subb
jecxz
xchg
or
imul
sbb
add
or
shlb
adc
jbe
or
aad
repz
xchg
dec
and
pop
lret
pusha
inc
icebp
jge
xor
fisttps
jg
jg
push
nop
cmp
es
and
shrl
mov
add
lods
les
and
das
or
sub
cmp
pop
imul
jmp
add
lods
xchg
lods
adc
adc
xchg
mov
push
addr16
push
ficoml
mov
adc
pop
mov
aas
mull
add
lods
inc
mov
outsb
xor
lods
or
cmc
pop
in
ret
sbb
and
mov
lret
jno
cmp
pop
add
mov
push
int
in
jg
aad
aaa
mov
xchg
pop
test
jne
pop
xchg
mov
xchg
sbb
enter
xor
mov
ds
pop
pop
xor
push
cmp
jge
lods
push
insb
push
imul
loope
pop
push
mov
fsubp
mov
shrl
and
es
push
jl
in
mov
sub
jbe
aam
sub
std
sbb
mov
sbbb
adc
int
mov
fdivrs
shr
xor
add
lret
fsts
scas
xchg
jge
adc
xor
repz
mov
test
icebp
repz
dec
test
adcl
pushf
add
mov
js,pt
scas
arpl
cld
dec
cs
lds
insb
adc
mov
pusha
repnz
cs
inc
sub
inc
xorl
jbe
jno
imul
mov
mov
mov
loope
adcb
pusha
rorb
push
stc
mov
jge
jg
arpl
mov
mov
and
shld
or
mov
cs
out
inc
sbb
stc
add
xor
inc
xchg
jae
fisubs
xor
lcall
mov
lahf
and
out
sub
and
sbb
icebp
inc
lods
lcall
call
jb
addr16
call
stos
dec
outsb
jp
shrb
jno
and
mov
out
jmp
mov
mov
sub
xor
lret
adc
adc
lahf
pop
outsl
ljmp
lret
sub
sub
push
fadds
jp
xchg
fwait
dec
fwait
add
rolb
dec
and
data16
gs
js
ret
mov
mov
popa
inc
loop
mov
or
popa
negb
sbb
xor
pop
sbb
ja
pusha
call
xchg
jl
rcrb
sbb
pop
push
xor
das
in
rolb
mov
dec
or
pop
and
ret
dec
mov
lret
cs
scas
pop
scas
loop
pop
lock
or
aad
or
movsl
jle
mov
in
imul
pop
rcrl
sub
or
dec
mov
rolb
ja
cmpsb
lahf
xchg
xor
arpl
mov
cmp
adcl
inc
push
jmp
mov
xchg
and
ljmp
or
and
inc
int
xchg
lds
xor
add
mov
xor
add
cmp
lcall
lret
mov
in
pop
xlat
shrb
xchg
adc
xlat
mov
rclb
mov
imul
out
sub
cwtl
xor
shll
pop
jg
lret
iret
cmc
mov
lods
or
movsb
mov
arpl
enter
bound
insb
lds
and
cs
add
rorb
sub
xor
adc
int3
test
leave
mov
fdivrs
cmpsl
push
nop
and
or
cmpsb
or
jge
cwtl
add
insb
mov
sbb
sub
sahf
adc
in
and
mov
add
ljmp
imul
jb
push
pop
test
pop
pop
sbb
push
add
push
xchg
fmul
xchg
lret
mov
jmp
outsl
inc
jle
xchg
mov
clc
icebp
jg
dec
or
cmpsb
inc
xor
bound
ds
xor
push
xchg
addl
test
xchg
mov
xor
xchg
pop
mov
in
fisttps
aad
ja
add
inc
sarl
pop
repnz
cs
xchg
test
mov
fwait
lods
lock
fistl
sarb
cmp
jmp
jle
cmp
xor
cwtl
jo
inc
adc
das
mov
mov
adc
inc
test
addb
movsl
mov
test
stc
or
cmpsb
rorl
mov
and
iret
test
push
imul
push
pop
and
pop
mov
cmp
cli
cli
mov
jo
sub
jp
decl
imull
jl
daa
sti
mov
fcomps
test
dec
mov
and
push
hlt
push
xor
pop
adc
mov
add
xchg
adc
and
add
cmp
add
mov
test
cmp
mov
jge
daa
xor
adc
dec
arpl
int
mov
mov
sub
cmpsb
add
xchg
into
xor
cmp
mov
cmp
xchg
ffree
adc
shl
icebp
mov
out
push
mov
xchg
push
lods
fcoms
mov
popf
inc
jp
psubsb
cmovg
pop
sti
shr
ja
daa
pop
dec
push
sahf
test
and
mov
sub
int3
or
push
add
jno
xchg
xor
and
lahf
push
cmc
popa
std
ljmp
enter
jbe
jne
cmp
ret
cli
adc
inc
rcl
fs
icebp
push
ds
sub
imul
inc
repz
sbbb
add
adc
cld
stc
jno
adc
fnstcw
jne
fcmovnu
jmp
mov
cmp
ljmp
sbb
xchg
punpcklbw
iret
mov
dec
push
push
adc
popf
or
pop
bnd
cmp
adcl
data16
pusha
mov
shll
std
movsl
pmulhw
mov
inc
xor
ljmp
test
mov
les
ljmp
push
cmp
imulb
jge
repnz
or
xchg
mov
jne
xor
dec
insb
mov
xor
test
push
repnz
mov
gs
xchg
or
dec
push
pop
xchg
mov
cmp
mov
lds
sub
lods
jnp
xchg
inc
sahf
sbb
sbb
repnz
push
lret
push
insl
pop
call
out
repz
xchg
cmp
or
jle
inc
scas
cs
data16
push
in
jecxz,pt
scas
lods
and
jae
outsb
lds
loope
fsts
mov
ja
pop
lds
mov
jecxz
inc
repnz
xorb
enter
rol
jge
push
dec
rcrb
rol
push
mov
adc
cli
imul
fisttpll
inc
cld
inc
cli
pop
push
or
fldcw
jl
pop
fnstsw
push
or
mov
dec
leave
inc
pop
fisttpll
mov
mov
outsb
push
ds
out
int3
mov
mov
arpl
dec
pop
test
loope
adc
cs
xchg
jg
testl
xchg
mov
sbbl
call
cmp
jo
push
lcall
cltd
shlb
dec
xchg
push
adc
psadbw
mov
sbb
pop
xchg
or
cli
aam
cli
std
push
mov
data16
ret
les
pop
lcall
stos
mov
pop
xchg
or
push
lods
sub
icebp
mov
dec
or
push
fs
mov
popa
push
stos
cmpsl
jnp
shl
mov
mov
test
push
sub
addr16
and
fiaddl
icebp
cli
and
or
mov
out
mov
jns
fstps
out
jecxz,pt
scas
out
or
js
and
les
js
dec
pop
andb
lock
cmp
mov
insl
inc
lock
xor
out
stos
fwait
aad
gs
xor
jp
push
or
imul
popf
pop
nop
inc
lods
loope
lea
xor
pop
lret
cmp
cmpsb
sahf
mov
fisubrl
dec
cltd
sbb
add
pusha
insb
call
jl
push
mov
mov
xchg
jge
in
pop
fsubl
and
push
push
cltd
mov
outsl
popf
cmpsb
mov
and
lahf
arpl
pushf
aam
sbb
mov
data16
popl
je
xchg
xchg
push
cmp
mov
xchg
insl
inc
or
das
divps
scas
mov
int3
inc
pop
add
jno
ret
pop
dec
sbb
sbbl
test
cmpsb
dec
mov
lock
xor
imul
mov
mov
or
xlat
repz
loopne
rcrb
sti
outsl
imul
mov
sub
xchg
mov
add
push
shlb
sub
fcomps
iret
cmp
dec
insl
xchg
xchg
loopne
scas
stos
das
mov
data16
adc
push
sbb
cmpsl
imull
fsubs
push
clc
mov
addr16
fninit
popf
pop
enter
insb
push
or
push
sub
mov
fwait
push
xlat
push
add
orl
dec
in
pusha
adcl
push
mov
test
icebp
lret
gs
jae
sbb
mov
notb
mov
dec
cwtl
ja
cwtl
es
ljmp
pop
sbb
ret
call
out
int
rcrb
fcoms
pop
dec
pop
shlb
ja
xchg
aad
adc
in
mov
xchg
fcomps
addr16
jmp
ja
out
outsb
fcompl
outsb
cwtl
fwait
xor
inc
push
xor
xchg
mov
cmpsl
loope
clc
lds
or
stos
enter
out
call
idivb
lods
lcall
sub
xlat
xlat
dec
or
inc
pop
jnp
mov
ja
add
sbb
dec
testl
loop
leave
sbb
dec
popa
std
xchg
adc
fdivl
pop
jmp
jnp
adc
push
insl
dec
inc
sub
sbb
push
fnstcw
jg
lods
in
out
sub
mov
sub
push
mov
mov
mov
ficoml
mov
adcb
fsubrl
push
pusha
ss
std
adc
jne
or
lret
gs
int
mov
fildll
dec
adc
push
les
jecxz
dec
dec
add
sbb
pop
fwait
lds
test
jl
or
and
cmc
rolb
xchg
loop
daa
and
mov
xor
push
or
imul
out
test
loop
imul
mov
clc
jle
mov
add
xchg
or
movsl
outsb
aad
mov
lods
jecxz
jg
jle
mov
fsubrl
mov
cmp
scas
ret
fists
or
jg
push
add
les
enter
add
xchg
and
outsb
mov
add
sbb
add
insl
xor
and
cs
pop
cmpb
jo
push
xchg
or
ds
lods
pop
lcall
jp
and
inc
into
inc
ja
out
test
sbb
adcb
cltd
cltd
fcompl
mov
cmp
mov
adc
jmp
jl
mov
out
add
popf
out
inc
xor
out
sbb
adc
inc
cmp
outsb
jmp
sub
and
jp
jp
cltd
mov
or
das
lahf
in
inc
mov
repz
pop
sub
lea
sub
sub
xchg
out
cwtl
adc
pop
sbb
rorb
push
sub
push
shll
lock
mov
jmp
cmp
je
addb
sbbb
mov
inc
and
mov
mov
xor
mov
test
xchg
mov
aad
jmp
pushf
fwait
sub
mov
repz
xchg
fsts
shl
inc
adc
jb
sub
jno
mov
push
cltd
flds
jnp
sbb
sub
mov
daa
dec
into
and
ret
sbb
push
jno
sub
xor
out
jmp
mov
mov
add
data16
ret
into
mov
pop
test
mov
mov
or
mov
test
dec
mov
cld
pop
push
stos
das
ret
xchg
sbbl
push
out
push
ja
ffreep
fxtract
inc
sbb
jmp
rol
mov
insl
xor
xlat
out
cwtl
stos
lret
lahf
mov
xchg
mov
pusha
cmp
ret
movsb
cld
xor
lock
cld
loopne
xorb
add
fimuls
cmp
or
loope
and
dec
mov
gs
jl
out
hlt
mov
fcoms
mov
movsb
cmp
cmp
sub
cmpsb
icebp
jecxz
xchg
sub
mov
xor
shl
ss
mov
cmc
sarl
test
stos
mov
fimuls
mov
cmpsl
push
mov
hlt
repz
lea
arpl
mov
inc
ret
mov
adc
inc
mov
lods
adc
jecxz
jmp
mov
add
daa
hlt
fwait
and
fsubrs
imul
mov
adc
mov
push
dec
inc
js
jmp
lcall
and
mov
xchg
mov
push
mov
xlat
push
out
jmp
shll
leave
sub
pop
add
push
test
jg
jmp
push
push
xchg
test
add
iret
mov
shrb
cmpb
xchg
push
dec
scas
push
out
push
popf
insb
or
sbb
lret
test
arpl
jecxz
jp
shlb
inc
mov
add
or
xchg
loopne
push
ljmp
out
shrl
imul
mov
clc
sub
jbe
pop
mov
pop
and
movsl
pop
dec
and
pop
les
dec
fwait
pop
lret
lods
loopnew
jo
inc
cmp
mov
jae
and
sbb
fisttps
nop
xchg
jg
adc
enter
outsb
insl
sbb
sahf
gs
xchg
ja
inc
xchg
mov
jne
int3
out
dec
mov
cwtl
lock
fdivrl
jnp
mov
dec
aas
movsb
xor
mov
fwait
cmpsl
mov
cmpsl
xchg
sbb
lahf
in
subl
mov
jecxz
cs
fstpl
in
andb
rorb
xchg
mov
test
mov
std
mov
outsb
out
test
test
imul
add
sbb
add
or
xchg
mov
or
sub
mov
insb
sti
mov
add
inc
repz
mov
out
inc
icebp
testb
mov
out
dec
pop
sbb
pop
jb
mov
scas
jl
sub
lea
fisubrs
sbb
adc
test
gs
shlb
test
add
test
adc
sub
sub
gs
sbb
nop
jnp
add
int
cmc
out
enter
add
pop
pop
rcrb
fs
pop
sbb
arpl
push
push
popa
in
push
mov
push
pop
inc
testb
and
push
cs
jl
pop
lds
or
adc
mov
mov
or
mov
push
xchg
xor
loopne
in
test
out
mov
mov
adc
add
jne
push
int
pop
push
andl
faddp
scas
rolb
cld
add
into
adc
xor
cmpsl
mov
in
hlt
hlt
adc
incl
das
je
pop
arpl
push
mov
mov
insl
lret
jge
xchg
xchg
fisubs
sbb
mov
lcall
add
addr16
bound
in
sahf
fsubrs
gs
sub
lret
or
mov
into
dec
inc
int
incl
mov
inc
push
adc
dec
jbe
adc
push
jb
dec
and
imul
mov
inc
call
pop
ucomiss
into
inc
scas
push
mov
inc
dec
dec
out
pop
dec
sub
inc
xor
xchg
addl
or
mov
les
xorb
jp
dec
je
inc
or
dec
cmp
push
jae
popf
xchg
sbb
fsubl
sub
arpl
iret
add
sbb
aad
lock
pop
in
outsb
jg
sbb
in
cltd
stc
lods
inc
int
jg
aaa
dec
sbb
aam
mov
mov
test
dec
bound
sti
cwtl
stos
mov
or
jb
sub
sbb
ljmp
xchg
jecxz
jae
jns
lods
pop
scas
bound
cmp
fnstenv
add
lcall
mov
sbb
xchg
jg
jecxz
int3
xor
out
imul
jbe
or
sub
movsl
mov
notl
cmp
sbb
xchg
push
loop
xlat
ljmp
mov
dec
xor
mov
push
insl
inc
shrb
lock
iret
pop
addr16
rorb
pop
mov
inc
or
shlb
pop
xor
adc
adc
sbbl
ret
stc
insb
add
pop
push
sbb
ret
add
rcrl
and
add
mov
cwtl
sub
sahf
mov
xorb
xchg
cmp
add
movsl
or
push
cmc
stos
lds
out
lret
lcall
lods
xor
imul
movsb
imul
mov
in
cld
fsubrp
sar
inc
xchg
jnp
lock
stos
xor
jp
mov
mov
xchg
jge
aad
fdivs
push
jmp
pushf
inc
shrl
pop
lods
xchg
cmp
mov
push
cmp
jl
mov
fwait
mov
outsl
push
mov
sbb
dec
xchg
jl
mov
sub
xchg
lret
mov
ds
pop
pop
xlat
sub
in
cmc
fsts
dec
mov
aam
add
shlb
std
addr16
dec
jbe
inc
pop
pop
push
or
cld
cmpsl
sub
sbb
sub
imul
fmull
push
repz
gs
aas
fxch
jp
fcmovnbe
loope
inc
popl
pop
in
jno
or
adc
cmpsl
push
pushf
insl
dec
or
jae
mov
xchg
add
and
mov
int
dec
das
or
sub
bound
cmp
jmp
fwait
jecxz
cltd
or
shl
pop
fsubs
js
sti
pop
push
sub
mov
jecxz
pop
jp
adc
enter
or
cmpsl
xchg
aam
cmp
test
cltd
imul
pop
outsl
scas
sub
xor
mov
dec
push
and
shrb
fcomi
in
push
fisubs
subl
add
std
xor
repz
sub
int
add
icebp
ret
sub
movb
inc
pop
push
and
inc
sbb
jg
std
mov
sub
loopne
scas
sbb
fisubrl
xchg
test
rorl
sub
dec
lea
test
bound
test
data16
movsb
ljmp
xchg
add
stos
inc
in
out
jle
fmull
shlb
jns
xchg
add
stos
xor
mov
fs
lcall
or
cmpsl
push
out
mov
jbe
mov
leave
dec
insb
add
aaa
stos
jmp
sbb
dec
mov
jecxz
push
js
sahf
psrad
cmp
dec
leave
aas
int3
mov
loope
sub
adc
adc
loopne
jb
inc
sub
sbb
lea
mov
dec
lret
mov
mov
aam
lret
mov
leave
mov
sub
lds
in
cmp
fstps
and
mov
pop
sbb
ss
bound
pusha
ss
xchg
sub
scas
jle
mov
and
jns
aad
mov
clc
adcl
imull
push
fimuls
dec
pop
mov
fucomi
mov
sbb
int
into
and
pushf
je
orl
add
call
lods
and
inc
dec
test
mov
push
mov
dec
ficomps
outsb
jne
add
clc
mov
setbe
xchg
dec
out
rcrl
mov
mov
and
jle
rcrb
pop
cld
xor
aas
push
jae
push
leave
inc
shl
jecxz
rorb
repz
and
arpl
imul
lcall
sti
mov
and
jbe
gs
inc
lods
xor
mov
mov
sbb
fs
imull
rcrl
cmpsl
fstpl
repz
test
cmp
xchg
cmp
pop
iret
inc
adc
xchg
pop
cmp
loope
mov
sub
popf
push
or
adc
mov
inc
int3
sbb
es
rcrl
fstl
xor
int
cmp
adc
dec
mov
std
mov
movsl
jnp
cmp
sub
dec
adc
enter
push
out
push
cwtl
and
insb
decb
or
stc
test
jle
xchg
insb
push
push
sbb
xorb
mov
sbb
mov
leave
jae
clc
dec
sti
ret
call
mov
out
arpl
scas
test
test
jb,pn
sub
gs
jae
or
aam
aad
xlat
lock
jmp
roll
xchg
or
fdivrp
jecxz
enter
aas
jge
push
jb
dec
mov
cmpsb
xchg
fcoms
add
push
cltd
into
gs
inc
in
xor
cmp
and
sti
mov
jecxz
add
push
loope
dec
dec
jl
dec
jbe
rclb
pop
lahf
sbb
mov
int3
dec
test
adc
scas
repz
jno
dec
popa
sub
adc
fcmovbe
jmp
ja
xor
and
cs
dec
insl
sub
xchg
mov
jg
scas
mov
notb
out
fisubl
into
stos
fmull
xchg
mov
jno
jmp
idivl
inc
mov
clc
jo
int3
sbb
lods
out
int
xchg
scas
hlt
xchg
xchg
sub
ss
and
push
add
xorl
inc
fistpl
inc
aad
and
pop
imull
cli
mov
into
jmp
aaa
xlat
xchg
stos
mov
adc
jnp
lret
pop
test
mov
cs
or
sbb
testb
mov
fsubp
mov
or
xchg
scas
es
fwait
lret
test
lret
push
jb
in
fsubrl
gs
pop
cmp
aad
ret
inc
fimuls
xchg
jno
cs
fildl
sbbb
stos
iret
imul
mov
stos
ficoms
fisubrl
loop
inc
xchg
ret
insl
xchg
xchg
pushf
mov
imul
push
cmpsl
fwait
cmp
popf
lds
xchg
xor
dec
je
push
fadds
push
fs
lods
mov
xchg
fistpll
jp
cmp
das
or
push
fnstcw
push
pop
sub
and
movsb
nop
mov
push
or
push
pop
in
add
call
inc
aaa
dec
jb
mov
cmp
clc
and
ret
ss
adc
add
cmpsl
sub
outsl
xchg
data16
sbb
xor
xchg
jmp
ljmp
mov
imul
and
lods
dec
mov
push
add
pop
pop
and
push
mov
loope
push
sbb
lret
cmp
jg
sbb
inc
idiv
sbb
push
xchg
leave
ss
xchg
add
push
into
jmp
xor
sub
dec
stc
divb
push
or
inc
fisttpl
xor
loopne
push
pop
xchg
push
pmullw
xchg
nop
loop
sbb
or
push
mov
pop
jne
ljmp
ja
sub
lock
jge
nop
cli
pop
movsl
imul
jo
hlt
repz
loope
aad
loopne
adc
jae
fbld
addb
and
jns
fiaddl
mov
mov
mov
pop
and
repnz
dec
inc
addl
les
icebp
cld
cltd
jl
aaa
aam
not
stc
xchg
shlb
xchg
dec
fsubrl
and
xchg
ret
pop
jns
xor
cmpl
push
or
sbb
mov
or
add
cmp
adc
test
push
sub
push
stos
stc
mov
xchg
mov
imul
stos
cmp
andb
sbb
or
jle
xor
call
add
inc
adc
imul
inc
aad
and
iret
xor
inc
loope
movsb
mov
push
jmp
push
dec
sub
sahf
mov
les
outsb
xor
push
mov
mov
pop
xchg
sbb
loopne
cmc
fimuls
nop
push
mov
inc
xor
bnd
ss
jmp
ja
ud2
xor
lods
jbe
mov
push
xlat
jbe
lods
jl
lcall
cmp
xchg
fisubl
aad
adc
cmp
sahf
jmp
xor
andl
or
push
sbb
stc
inc
ss
int3
pop
mov
js
negb
test
xchg
xor
arpl
sti
push
mov
pop
stc
flds
std
push
lds
push
inc
cwtl
das
stc
jno
dec
in
push
add
add
cmp
addr16
aas
add
mov
mov
push
mov
scas
andb
rcl
xlat
sbb
adc
ret
jnp
mov
sahf
lods
fwait
cmp
push
fdiv
push
fistpll
cmpsb
insb
shlb
mov
sub
xor
insb
inc
ret
xchg
inc
lahf
adc
xchg
add
dec
dec
pop
addr16
dec
call
or
addl
out
in
stc
movl
pusha
jns
jge
push
dec
jge
test
push
and
sub
xchg
pop
sub
pop
dec
jne
roll
std
pusha
mov
lret
xor
pop
adc
push
add
js
lret
xor
push
pusha
add
mov
nop
push
arpl
mov
or
aad
sahf
into
sub
repnz
aad
or
nop
add
ljmp
add
xor
adc
add
nop
icebp
arpl
call
bound
xchg
fdivrl
das
cltd
push
fcompl
push
dec
add
imulb
sbbl
pop
aas
lods
adc
push
shlb
insl
je
js
xchg
int
in
mov
lds
in
ret
test
sub
push
jl
movsl
ds
push
movsl
ret
xchg
icebp
imul
or
repnz
lock
rcll
pop
add
js
jecxz
insl
and
sub
mov
mov
movl
daa
aas
pop
out
add
lahf
das
push
jle
sbbl
or
xchg
test
adc
jno
inc
mov
inc
dec
jg
aad
cmp
popa
xchg
mov
jnp
rcrb
in
mov
add
jle
xchg
pushf
fcmovnb
out
jge
in
cmpsb
cmpsb
cltd
loop
loope
or
xchg
pcmpgtb
scas
mov
pop
pop
loop
cmp
jmp
xlat
mov
cmp
lods
dec
or
dec
imulw
clc
push
add
cs
or
pusha
xor
or
aam
adc
adc
add
loopne,pt
inc
test
inc
lcall
lcall
in
mov
jp
jne
inc
push
or
jnp
jge
or
jecxz
sub
aas
sub
mov
push
subps
jle
jae
xchg
dec
cltd
outsb
pop
inc
sbb
frstor
leave
jb
loop
sub
repnz
push
xorb
imul
jmp
and
or
and
mov
inc
lods
pop
xlat
iret
imul
push
stos
and
in
cmp
loopne
sub
or
pop
fldenv
loopne
stc
ds
jno
inc
xor
sbb
shll
fs
push
mov
dec
scas
pop
repz
or
repnz
cwtl
aas
inc
das
sti
mov
jae
std
mov
and
cltd
sub
into
jg
out
mov
add
inc
punpcklbw
std
scas
daa
sub
testl
stos
fldl
cltd
stos
ror
std
fisttpll
and
sub
mov
add
in
mov
ret
popf
inc
add
clc
xlat
outsl
mov
sahf
or
mov
sub
cmp
in
mov
push
xor
push
adc
adc
jne
mov
xlat
adc
out
mov
iret
test
mov
xor
xchg
test
scas
sub
loope
inc
and
cli
push
in
xchg
pop
mov
jne
aas
fdivl
push
jmp
xor
les
jne
cs
popf
cld
sub
xchg
and
sub
add
lret
out
adc
mov
out
xchg
lods
cmpl
mov
inc
lock
push
fwait
push
fnstsw
mov
adcl
repz
popa
mov
into
cld
rorl
mov
ror
ljmp
paddsb
mov
cmp
test
mov
stc
jmp
mov
inc
jmp
pop
jl
push
jle
cmpsb
mov
inc
dec
sbb
inc
sbb
je
pushf
xchg
jne
outsl
push
xchg
jo
xchg
add
pushf
cmp
mov
jo
jnp
mov
add
add
cmp
cmp
test
adc
std
shr
popf
repnz
sbb
frstor
mov
mov
xchg
add
push
pop
mov
mov
push
lock
push
mov
imull
cmp
sub
inc
sbb
adc
cmpsb
mov
pop
sbb
push
and
dec
mov
and
test
andl
out
in
mov
add
mov
xlat
out
jb
cmpsb
loopne
xchg
test
outsl
cmp
pop
movsl
xor
jle
dec
jl
push
inc
cmp
xchg
adc
mov
adc
mov
ja
enter
mov
test
mov
cmpsb
dec
mov
imul
pop
jae
pop
sbb
cmp
jns
mov
sub
ret
enter
lcall
nop
mov
iret
jbe
pop
in
mov
loope
mov
jmp
pop
pop
inc
ljmp
jle
call
cmp
sbb
mov
xor
jg
daa
divl
faddp
add
addr16
mov
sti
test
imul
or
sbb
repnz
dec
jmp
fdiv
sbb
sahf
xlat
push
jp
nopl
fbld
cmp
andl
lahf
push
sahf
imul
inc
and
aaa
stos
lcall
jne
inc
xchg
int
mov
add
push
mov
jge
test
or
ficoml
or
jg
dec
jo
xor
test
adc
dec
daa
ficompl
jns
mov
in
lock
or
jns
add
incb
mov
lock
out
adc
sub
inc
xor
sbb
push
add
lcall
aaa
arpl
cmp
cmc
popf
bound
dec
jmp
mov
mov
dec
imul
stos
inc
fwait
xor
and
cltd
push
jmp
rclb
jb
pop
pushf
sub
lret
push
pop
out
adc
into
inc
or
and
fistl
shll
std
lret
xchg
push
mov
xor
test
pushf
pop
in
or
cmovs
shrl
jne,pt
xchg
push
sbbb
sbb
add
stc
sahf
loope
test
adc
popf
stc
sarb
aaa
dec
mov
xor
aaa
imul
hlt
fistl
push
daa
xchg
inc
js
xor
inc
cmp
je
jp
xchg
mov
insl
inc
movsb
cld
inc
bound
adc
or
adc
out
cmp
int3
loopne
lret
popa
arpl
mov
sahf
data16
and
dec
or
push
dec
out
mov
aas
jns
ret
push
out
out
fisubl
ficoms
test
pop
shl
addr16
sbb
in
ret
xorl
adc
mov
mov
fsubl
mov
sub
std
xlat
bound
mov
mov
stos
adc
cld
lock
in
sub
inc
mov
sti
inc
dec
iret
aad
testl
jge
push
test
sbb
mov
in
push
scas
les
cmp
jns
sbb
movsb
and
cltd
push
int3
mov
mov
or
dec
jno
lds
mov
lret
pop
xor
mov
jne
das
add
inc
lock
mov
pop
adc
sti
insl
fcmovu
js
fiaddl
mov
or
clc
lock
mov
mov
rolb
jne
sbb
sub
fbld
inc
repnz
mov
push
loope
inc
xchg
rolb
lock
movsb
pop
pop
pop
jp
mov
push
les
mov
push
add
sub
dec
fwait
mov
roll
mov
sahf
movsl
ja
adc
int
test
xor
push
ds
imul
mov
int3
mov
aad
mov
adc
in
push
dec
out
adcl
fistl
imul
dec
bound
mov
mov
outsl
int3
inc
xor
cmp
jmp
mov
test
outsl
mov
nop
loope
mov
xor
sub
lret
sub
movb
ljmp
pop
fdiv
ljmp
push
gs
dec
xchg
mov
dec
mov
and
subl
lods
cmpsl
outsl
push
fnsave
push
xchg
imul
lcall
lret
cmp
negl
ret
rcrb
insl
cmpsb
jbe
cmp
jb
inc
cmp
adc
inc
insl
xchg
test
test
mov
lds
ja
mov
mov
sbb
sar
xor
enter
hlt
or
dec
xchg
xor
cmp
in
inc
and
inc
xor
inc
cmp
cmp
pop
in
dec
shrl
in
fs
popf
aas
jmp
ss
mov
jl
lods
repnz
imul
hlt
insl
fdivrs
jge
test
fs
test
cmpsb
rolb
push
inc
sbb
sbb
call
movsl
ret
cs
lcall
add
lcall
lods
ds
popa
fsubs
in
sub
loope
dec
sbb
mov
add
jecxz
jo
push
dec
inc
mov
bound
sbb
sets
jae
dec
movsb
std
inc
or
adc
lcall
sahf
adc
dec
add
push
push
test
push
das
or
movsb
je
pop
mov
add
sub
test
xor
adc
ds
js
pop
loope
popf
inc
loop
cmp
in
pushf
out
jle
ljmp
mov
cmp
cmpsl
pop
stc
sti
jno
and
imul
jg
push
pop
mov
push
aad
in
cmc
push
ljmp
inc
stos
cmp
mov
cmpl
mov
cli
sub
lock
mov
or
mov
xlat
sub
dec
mov
aas
ljmp
inc
sbb
push
dec
out
out
mov
cmc
mov
mov
pop
stc
dec
inc
mov
dec
pop
xor
mov
fimuls
pop
pusha
in
lock
fimuls
push
jnp
icebp
aam
mov
sbb
lcall
add
call
movsl
pop
sbbb
dec
ret
xchg
add
in
push
push
push
sub
mov
leave
cmp
mov
or
jae
jl
xlat
and
jo
jg
cmp
jb
fstl
mov
mov
sub
movsb
and
jns
cmp
sub
xchg
sub
cmc
sbb
xchg
int3
mov
or
fwait
not
add
test
push
cltd
pop
bound
rorb
mov
push
xchg
sarb
int
mov
test
rcrb
scas
adc
fcmovnb
adc
out
dec
push
jbe
mov
jmp
test
sub
pop
mov
add
cmp
frstor
or
adc
push
jg
loop
cltd
sub
inc
add
pop
pushl
aam
out
enter
ja
cmp
movsl
jecxz
in
mov
or
shll
mov
push
adc
adc
push
repnz
add
cli
cmpl
sub
movsl
mov
pop
adc
call
push
pop
lahf
xor
outsl
mov
push
push
out
adc
imul
lods
ficomps
mov
popa
mov
sub
sti
xor
call
jbe
ret
mov
jb
xchg
sti
push
push
or
dec
add
mov
jp
lcall
aad
cmpsl
hlt
and
fs
inc
sbb
xchg
add
inc
adc
dec
dec
or
jnp
xchg
rorl
xor
xor
mov
sbb
scas
mov
lret
push
jge
adc
aas
mov
mov
repz
rorl
dec
sub
pop
fsubl
or
push
or
mov
test
leave
mov
inc
scas
aas
fisubrs
ja
adc
int3
inc
mov
mov
pop
pmaxsw
pop
xchg
pop
lcall
fimull
ret
flds
mov
js
pop
dec
addb
iret
sbb
and
xor
nop
push
lret
mov
pop
jbe
add
cmp
mov
push
mov
or
lret
jo
cmp
cmp
aaa
imul
sbb
out
push
les
lods
or
or
call
push
cmpsb
shlb
mov
sti
or
mov
repnz
push
sahf
es
movsb
pop
lcall
test
adc
mov
movsl
sub
xchg
inc
pushf
pop
pop
adc
adcl
pop
push
aas
insl
and
pop
je
and
adc
jbe
mov
push
insb
inc
in
xchg
sbb
fwait
in
xor
push
test
pop
and
xchg
sarb
pmaddwd
lock
push
popa
leave
sub
out
and
test
mov
and
out
sub
xchg
movsl
lock
cmp
inc
lret
or
lods
or
incl
dec
mov
lcall
push
mov
push
xor
lea
mov
aas
lods
stos
xchg
jge
inc
fnstsw
ret
vphadduwq
scas
cmc
xor
push
out
shrd
or
pop
pop
xor
fdivp
out
mov
aam
cmp
mov
xor
jg
mov
out
adc
movsl
lock
push
add
mov
ficoms
pusha
iret
push
push
or
cwtl
andb
pop
iret
mov
sbb
or
add
push
adc
cmp
gs
stos
push
inc
xor
and
push
movnti
rcrl
inc
sbb
pop
xchg
repz
add
inc
jg
adc
pop
jbe
and
imul
xchg
push
gs
int
rcll
mov
jmp
cld
jbe
shrl
pop
lcall
lcall
out
ss
bound
or
xchg
mov
lods
cmp
std
or
mov
es
add
mov
xchg
mov
mov
xor
das
movsl
add
ret
sub
pop
adc
fstps
data16
sub
mov
cmp
insl
xor
mov
das
and
and
add
sub
shrl
add
fwait
and
out
jo
fadds
test
rolb
sub
jne
ljmp
mov
sbbl
int3
sub
ljmp
stc
xchg
dec
mov
ljmp
mov
outsb
movsb
test
les
pop
jge
pop
mov
cs
cltd
data16
push
push
push
and
cli
xlat
stos
add
inc
or
hlt
xchg
adc
aad
pop
or
mov
orb
mov
lds
dec
mov
xchg
mov
filds
adc
lahf
and
movsl
out
imul
lds
es
aam
outsl
out
sub
ljmp
int
insl
sbb
xor
and
cli
nop
fwait
ret
mov
xchg
testb
repz
mov
mov
mov
push
int3
cmpsb
xor
imull
or
push
and
cmc
dec
test
les
enter
mov
test
inc
and
test
mov
sbb
insb
xchg
cld
test
nop
and
jg
mov
inc
adc
pop
icebp
mov
mov
push
xor
dec
mov
scas
cltd
dec
mov
jg
lea
out
fwait
ret
push
add
xchg
push
xor
mov
in
inc
jle
xlat
jne,pn
xchg
iret
adc
pushf
fs
jge
shlb
mov
lea
fstp
pop
xchg
xchg
rol
cmpsl
jg
jg
add
xchg
orb
mov
adc
add
stos
jno
xor
jmp
mov
mov
mov
fcoml
inc
iret
in
sub
stos
push
xchg
mov
jp
pop
mov
sbb
shll
push
push
dec
add
stc
fistpl
adc
out
lds
and
xorb
xchg
test
mov
popa
out
fsts
mov
cltd
dec
notl
xor
dec
mov
ja
loope
lods
cmp
inc
frstor
xchg
dec
stos
sbb
sbb
ret
sbb
xchg
dec
dec
push
addb
fadds
popa
insl
aam
adc
pop
shl
fstps
lahf
das
cmp
clc
sbb
add
jae
add
rol
cs
dec
sub
mov
pusha
lret
jne
scas
push
mov
mov
cmp
lea
rclb
fdivl
fwait
pop
and
add
cld
push
mov
adc
enter
in
or
std
ss
arpl
in
daa
in
cmp
lcall
pop
pfmax
aam
aam
adc
daa
out
cwtl
mov
pop
and
jmp
mov
cmc
cmp
sti
lea
adc
repz
insl
stc
xor
dec
push
pop
out
pop
xor
and
andb
and
data16
pop
mov
lahf
push
adcb
cmp
cmc
vdivss
dec
xor
sarb
scas
pop
hlt
xchg
lret
push
rcll
icebp
insb
xchg
dec
fiaddl
jp
mov
xchg
adc
add
fisubl
push
xor
mov
cmp
and
push
add
sbb
data16
loop
adc
rcrl
fcomip
daa
outsb
cmp
punpckhwd
xor
or
arpl
mov
xor
push
cld
mov
out
add
hlt
ja
repnz
cmpsl
arpl
and
mov
out
test
pop
int
pop
rcrl
pusha
and
pop
inc
mov
fidivrs
xchg
and
hlt
push
mov
dec
mov
pop
cld
and
call
mov
push
sbb
adc
pop
notb
pop
ja
xor
punpcklwd
jnp
dec
not
mov
adc
test
push
popf
lcall
lret
sti
pushf
sbb
int3
arpl
ss
add
fisttps
push
mov
mov
scas
inc
ja
dec
pop
movsl
cmpsb
and
xor
xchg
fs
int3
mov
out
mov
roll
and
clc
nop
ret
clc
jp
lods
push
pop
cmp
sbb
fcompl
xchg
add
pushf
xchg
out
jmp
jmp
xor
jmp
pop
or
pushf
fwait
stos
jl
insl
lds
adc
cltd
lcall
or
scas
sbbl
mov
loope
push
cmp
aaa
in
sbb
mov
jle
cltd
mov
cmpb
mov
js
push
ret
sbb
fxam
push
fmul
popf
repz
fsubl
data16
jo
inc
mov
add
imul
fistl
mov
adc
mov
aas
pop
adc
sahf
push
push
or
sti
sub
sbb
xchg
cmpsb
mov
dec
imul
in
cmp
dec
push
or
push
ss
lcall
loopne
iret
in
dec
orl
int3
imul
xor
xchg
and
insb
inc
pop
cmp
pop
pop
pop
andb
mov
aad
repnz
repnz
mov
cmp
addr16
jb
nop
rclb
sahf
pop
and
push
inc
adc
les
inc
push
test
jp
leave
push
jae
mov
mov
ret
xor
pop
lock
fxch
push
add
out
and
inc
scas
xchg
ds
lahf
and
xchg
roll
outsl
sti
inc
hlt
mov
xchg
movsl
arpl
mov
sub
fidivs
dec
cmc
jmp
ja
dec
sub
or
xchg
iret
repnz
ja
inc
dec
and
lar
or
mov
ljmp
inc
push
sub
std
addb
push
out
daa
dec
mov
loopne
loop
decl
sub
mov
jae
rol
and
jmp
bound
inc
in
int
push
pop
subw
adc
sahf
test
push
pop
or
fstps
mov
pop
mov
andl
sbb
cld
insl
loope
dec
mov
or
xchg
pop
shlb
jae
push
lcall
sbb
cmp
mov
and
mov
repnz
xor
mov
xchg
outsb
cltd
or
mov
pop
out
sbb
adc
daa
mov
xchg
lds
outsb
mov
jnp
jecxz
adc
insb
std
and
leave
adc
mov
inc
inc
pop
cld
xchg
idivl
lahf
cmp
mov
lret
ficoms
cmc
psubsw
movsl
dec
mov
fwait
lahf
adc
subl
out
arpl
xor
mov
aam
add
cmc
xchg
jo
loop
repz
sbb
pop
push
inc
push
repnz
xchg
cmpsl
or
lods
xchg
rcrb
push
xor
gs
xchg
or
pushf
shlb
add
ja
dec
into
cwtl
loope
lods
adc
icebp
sbb
mov
xor
test
sub
add
or
push
pop
jnp
fldcw
push
push
cmp
sub
adc
subl
test
dec
out
scas
lods
gs
push
leave
xor
mov
shrl
add
out
pop
mov
push
dec
fistl
adc
es
fwait
ja
cmp
cmp
xor
std
lahf
mov
outsb
dec
ljmp
dec
lcall
and
adc
enter
xchg
xor
dec
pop
xchg
sbb
fbld
sub
outsb
test
test
push
add
lret
and
lcall
push
fstp
movsl
mov
sub
sbbl
in
test
fisubrs
ds
adc
jg
jb
shll
adc
out
into
adc
shll
push
push
lock
and
lea
inc
fidivrs
pop
and
popa
cmp
outsb
test
pop
into
das
adc
xor
das
and
jnp
ficompl
loope
pop
sar
iret
pop
or
pop
mov
shll
ds
divl
shll
rorb
push
xorl
icebp
xchg
inc
xchg
cltd
iret
jge
cmp
pop
das
sahf
mov
push
sbb
xchg
test
aam
push
ret
mov
sub
aad
sub
mov
cmp
sub
jo
mov
ss
stc
jo
loopne
push
add
ficomps
icebp
jmp
addr16
mov
mov
stos
jle
dec
jl
outsb
in
push
in
cltd
in
adc
js
mov
roll
popa
add
inc
mov
addb
das
gs
xor
sbb
inc
fs
mov
or
mov
aaa
sbb
ror
jp
mov
push
mov
int3
fmul
sbb
mov
idivb
inc
fisubs
movsb
xchg
lods
jp
mov
jmp
cmpsb
xor
cmp
fisubrs
mov
aas
das
pushf
ds
bound
and
rcrb
mov
ret
cmp
icebp
cmp
lods
dec
mov
lret
mov
scas
repnz
fcoml
sbb
jl
movsl
cmp
pop
and
mov
sbb
mov
or
sub
ret
xchg
adc
sbb
xor
frndint
or
dec
das
cli
subb
or
outsb
sub
push
xor
popa
pusha
add
repnz
stos
je
pop
sbb
inc
push
sub
pop
jns
inc
jo
pop
sbb
pop
cmp
imull
mov
pop
shrb
icebp
dec
xchg
hlt
call
add
cwtl
std
sub
test
arpl
repz
fidivrl
mov
jns
hlt
ljmp
sub
lret
cmp
pop
sbb
inc
pop
xor
mov
jecxz
jnp
sub
out
xor
mov
xor
add
loope
jle
pushf
loope
lods
movsl
cmp
mov
dec
sub
aas
int3
mov
daa
push
xchg
outsb
adc
mov
jne
push
sub
push
mov
sub
cs
and
jae
outsl
in
repnz
jle
xlat
in
ljmp
ret
int
testl
fldcw
stos
ja
inc
add
pop
add
adc
adc
loope
jo
es
bound
inc
and
jg
sbbl
aam
movsb
xor
sub
int
adc
inc
decb
push
aad
jecxz
adc
jno
ljmp
mov
into
push
and
bnd
stos
loopne
mov
sbb
jns
push
and
aaa
and
xchg
xchg
les
lret
cmp
xor
pop
xor
out
mov
jb
call
shll
adc
inc
popa
add
imul
ds
jno
aas
mov
pop
lahf
push
mov
mov
cld
stc
mov
jno
icebp
dec
int
shrb
shlb
daa
stos
jo
xlat
lds
inc
sbb
inc
ljmp
iret
dec
mov
cs
dec
lahf
scas
push
jp
push
xchg
sbb
inc
or
pop
shrl
push
push
adc
mov
xchg
gs
jle
pop
cmp
mov
push
out
sahf
in
mov
push
adc
dec
jge
lcall
lahf
push
ljmp
loope
ss
in
xchg
and
and
cmp
cwtl
push
and
xor
stos
mov
xlat
roll
and
adc
pop
xchg
in
pusha
invd
in
dec
sub
adc
mov
ljmp
cmp
sbb
not
adc
or
mov
test
aas
pop
inc
push
sti
cwtl
rorl
and
sub
mov
pop
dec
adc
jle
or
adc
pop
aas
sub
scas
mov
scas
vxorps
xchg
mov
idiv
push
ja
stos
mov
sbb
xor
mov
xchg
fnstcw
iret
outsl
inc
loopne
dec
loopne
stos
mov
mov
sub
jge
cwtl
xor
dec
jo
pop
mov
sub
movsb
mov
pop
sahf
imul
lea
push
sahf
mov
out
ds
mov
pop
mov
in
and
das
push
cmp
lret
jbe
fstl
adcl
lret
cs
sub
pop
les
jle
mov
jecxz
mov
cmp
stc
cmp
popa
imul
popa
sbb
enter
popa
mov
sahf
pop
mov
cmp
sbb
lret
inc
gs
mov
cmp
xchg
adc
xchg
out
push
loop
loop
mov
jne
repnz
dec
cmc
xor
lods
cmp
push
adc
or
hlt
inc
scas
loope
dec
outsb
cmpsb
xor
push
movl
fmull
cmp
out
lea
aaa
lahf
add
fsubs
or
sbb
fcoms
and
adc
sub
gs
in
fisubrl
imul
into
and
ret
cwtl
fwait
in
in
xchg
scas
cmc
fadds
dec
cmpsb
inc
nop
inc
sub
mov
pop
repz
lcall
out
cmc
sbb
jns
popf
inc
jg
ror
shrl
push
flds
ret
adc
pop
dec
sbb
inc
call
fimull
xchg
xlat
sub
addb
shl
or
repnz
lea
xchg
jnp
adc
cmp
add
mov
mov
clc
jno
or
add
mov
test
and
add
cmp
add
push
popa
xchg
fsubrl
xchg
adc
out
or
sub
mov
dec
mov
adc
pop
test
int
out
js
add
into
sub
push
aas
cmpsb
mov
les
mov
repnz
outsl
xor
lret
fnstcw
sub
adc
aaa
mov
dec
leave
fwait
dec
lret
lret
movsl
test
xchg
mov
or
cmp
outsb
ret
xchg
lret
mov
mov
cltd
cmp
cmpsl
pop
ficoml
mov
xor
lds
jg
mov
int3
pop
jmp
jg
mov
add
add
sbb
ljmp
mov
leave
mov
insb
in
jle
and
sarb
int3
cli
icebp
lret
sti
xchg
jns
add
int3
aam
in
adc
loopne
or
fsubr
mov
imul
sar
pop
div
sub
push
push
gs
ja
and
stos
popf
test
jmp
in
scas
cmc
bound
outsl
push
push
and
loop
mov
dec
repnz
out
cs
imul
mov
mov
dec
je
mov
xor
ret
ja
roll
push
loope
popf
loopne
fstl
mov
xor
sahf
cmp
addr16
xlat
dec
lahf
dec
sbb
adc
das
jbe
sti
pop
outsb
and
jne
jno
add
lods
daa
adc
jp
fstpt
scas
inc
test
loope
xchg
adc
jle
cmpsb
pop
clc
bound
clc
sub
test
mov
mov
xor
push
mov
xor
ja
jecxz
xor
xor
adc
fstl
mov
pushl
mov
loope
xchg
mov
mov
cltd
and
jo
mov
icebp
stos
pop
dec
mov
test
push
sbb
pop
fisttpll
sbb
leave
test
jle
pop
mov
xchg
aaa
jo
cmp
fs
insl
add
sbb
or
fwait
shrb
inc
inc
jg
and
das
inc
leave
loope
or
mov
pop
rcrb
mov
xchg
inc
inc
scas
in
and
jae
add
jae
xlat
fwait
aaa
rcrb
jns
cmpsl
jl
xor
lcall
lahf
jno
fdivp
orb
cwtl
pop
mov
xor
push
push
sub
sub
or
out
sub
add
xor
mov
mov
and
lcall
inc
aas
push
jnp
pusha
test
fsubl
scas
out
push
out
jno
iret
loopne
aas
cwtl
mov
inc
movsl
dec
or
dec
dec
outsb
xchg
xchg
aaa
pop
insl
cmpsl
add
cltd
xchg
push
mov
ss
je
xchg
incb
iret
add
sti
shll
stc
cmp
push
repz
pop
xor
fstpl
mov
inc
dec
mov
push
push
add
sbb
or
sarb
cltd
or
mov
jns
nop
xor
fdiv
inc
fwait
push
jecxz
es
inc
cld
xchg
mov
nop
jg
jbe
scas
fs
out
pop
addb
mulb
in
es
sbb
scas
js
push
adc
xor
loopne
leave
adc
and
repz
mov
jmp
je
loopne
xchg
ret
scas
adc
mov
fiadds
sarl
inc
sbb
pop
add
test
loope
push
push
dec
jle
fs
in
mov
rol
pop
adc
push
push
clc
cmpb
iret
sti
mov
push
xor
pusha
mov
mov
dec
cmp
enter
aam
pushf
push
dec
push
jl
mov
jmp
fdivl
ja
mov
jno
repz
test
nop
icebp
or
xor
jno
into
push
bswap
sub
mov
and
out
clc
ds
xlat
shlb
cmp
out
fsub
xchg
stos
repz
adc
mov
fsubp
pusha
xor
in
adc
jne
sbb
pop
xchg
and
adc
jae
loop
loopne
shlb
loop
pop
mov
out
xchg
ljmp
es
scas
dec
xor
scas
push
adc
push
sbb
int3
xchg
mov
dec
inc
mov
push
mov
js
aas
cmp
jns
dec
aam
std
sbbb
ja
les
cld
mov
dec
scas
popf
outsb
mov
fdivrl
jno
movsl
rol
xor
sub
icebp
jecxz
iret
push
sbb
pop
jbe
dec
jns
lret
outsb
les
es
fs
shlb
test
js
xchg
call
inc
insb
pop
dec
inc
adcl
xor
push
shlb
jecxz
arpl
or
imul
push
push
push
mov
sbb
out
sub
add
enter
mov
in
mov
sbbb
into
decb
dec
mov
rol
push
sub
mov
adc
mov
mov
push
int3
pop
dec
pop
push
xor
gs
test
or
test
pop
add
xor
push
and
rcll
sub
mov
mov
data16
xor
outsb
dec
inc
sbb
cmp
lcall
lods
add
adc
test
xor
mov
in
jg
test
cs
sub
popf
mull
cmpb
mov
jmp
sbb
in
arpl
cmpsb
fldl
add
pop
sbb
jl
shlb
out
aas
daa
mov
cmp
sti
push
in
lods
jae
jp
xchg
mov
dec
repnz
jle
test
outsl
arpl
mov
jmp
mov
jne
popf
out
jo
lret
ss
jle
stos
jge
xor
add
mov
mov
movsl
inc
xor
push
cmp
mov
gs
in
jno
xor
inc
mov
ficompl
jno
je
adc
sbb
ljmp
dec
movsb
pop
xor
out
jecxz
mov
leave
aam
cmpsb
enter
mov
push
pop
call
xor
dec
not
mov
xchg
subb
sub
push
pop
fcmovbe
cmp
sbb
mov
xor
jmp
cs
mov
out
out
jl
orb
jae
cmpsb
fnstcw
ror
xchg
in
inc
fldcw
pushf
mov
add
loope
aad
sbb
mov
jge
push
js
adc
and
insl
fdivs
ja
test
dec
push
ja
adc
adc
ja
out
mov
push
aaa
imul
rcl
push
jnp
push
pop
push
movsl
in
xchg
mov
mov
daa
pop
adc
repnz
pop
std
stos
mov
jns
mov
inc
pop
push
mov
fistps
mov
push
sbb
inc
pop
mov
bound
dec
aaa
xadd
mov
in
inc
ret
and
dec
xor
inc
inc
push
jb
lcall
dec
and
dec
cmp
sti
sub
add
pop
pushf
cmpsb
adc
dec
das
into
and
aaa
or
jae
mov
xchg
sbbl
push
icebp
cld
xchg
sub
fiadds
aam
cmpsl
sbb
jmp
xor
in
xchg
jb
sub
cmpsl
pop
loop
pop
adcb
adc
cwtl
movsl
cmp
xchg
push
mov
dec
cmp
inc
test
andb
or
adcl
mov
mov
hlt
out
lret
mov
in
cld
and
push
pop
mov
adc
pushf
outsb
int3
adc
in
les
sub
lods
loope
mov
jmp
cmp
fsubs
adcl
clc
lock
ficoml
leave
xlat
inc
popf
aas
and
lock
push
and
sti
dec
sbb
rcrl
jp
fists
loopne
out
mov
sbb
push
call
mov
lahf
jns
ffree
lock
pop
or
mov
cmc
cltd
mov
inc
cmp
sbb
lds
insl
cmp
jp
imul
cmp
lcall
jg
call
adc
and
adc
ret
js
sub
insl
subl
aaa
xchg
cmp
or
aas
ret
add
mov
mov
xchg
mov
nop
pop
mov
add
add
push
sub
das
arpl
ret
popa
test
aaa
fidivrl
cmpsb
xorb
pushf
push
fldt
xchg
adc
stos
rcrb
pop
imul
add
xorl
sub
add
inc
sahf
les
sbb
sbb
cmp
mov
dec
pushf
pop
or
ret
aaa
mov
stc
jae
out
mov
and
or
jne
mov
or
fmul
insl
mov
enter
xchg
mov
hlt
sub
loopne
dec
jae
das
icebp
dec
std
xor
and
pop
hlt
mov
lcall
inc
push
push
adc
cwtl
dec
inc
cwtl
jne
jg
sar
jecxz
mov
dec
sbb
mov
jp
inc
adc
test
adc
stc
into
cmpl
add
movsl
or
cwtl
and
insb
push
mov
ds
xchg
mov
fsts
cltd
aad
scas
int
push
xor
jle
pop
sub
subb
sbb
ret
cmc
mov
adc
push
int
stos
cld
xchg
mov
jnp
jo
push
xchg
lcall
xchg
test
jnp
sbb
jnp
test
scas
sbb
jecxz
cmp
cmp
mov
cmc
adc
les
cmp
adc
lahf
xchg
cmpb
fidivrs
mov
xchg
es
fstl
dec
imul
out
lock
mov
out
push
mov
in
mov
dec
imul
rcrl
push
mov
cmp
scas
movsb
jg
stos
adc
adcb
mov
int
stc
test
outsb
cmpsl
cmp
and
ret
int
test
push
pop
adcb
adcb
cmp
mov
inc
jmp
fwait
mov
xchg
lahf
fldcw
sbb
daa
enter
pop
sbb
andps
sbb
push
inc
sbb
xchg
pop
mov
aaa
cmc
psubsb
arpl
dec
mov
js
pop
test
dec
sub
xor
loope
fists
add
hlt
xor
and
inc
rcll
xor
in
inc
aas
push
mov
jmp
mov
dec
sub
cmpl
dec
into
cld
int3
push
pop
lods
mov
sbb
xchg
and
icebp
mov
pop
pop
test
and
push
stc
daa
or
and
push
jo
jnp
fsubrs
adc
push
pop
pop
cmp
push
or
jae
add
in
decl
loopne
enter
frstor
push
xchg
or
mov
dec
test
mov
notb
cwtl
popf
jbe
fwait
jmp
jae
je
leave
addr16
stos
add
pop
adc
hlt
inc
in
push
mov
mov
dec
in
mov
jle
xor
std
pop
cmp
gs
dec
mov
lods
in
or
add
test
or
rcrl
lahf
dec
lods
clc
push
cmp
pop
xor
cwtl
in
lret
es
data16
popf
fsubs
ret
jb
fidivrl
and
pop
cmpsb
mov
xchg
test
adc
pop
data16
sub
insb
add
in
sbb
push
aas
int
xor
adc
dec
scas
shrb
mov
out
sbb
inc
lcall
ljmp
sahf
lods
push
dec
cmp
cli
or
decl
xchg
sbb
test
jno
rcl
pusha
dec
out
icebp
cld
inc
ss
arpl
adc
push
or
pop
fdivrs
cs
and
pop
daa
dec
mov
stos
xor
fs
add
sub
mov
push
push
popf
dec
or
xchg
cmp
insl
scas
insl
sub
xchg
sbb
outsl
icebp
cmc
movsb
clc
mov
int
pop
fs
mov
jp
cmc
lock
and
bswap
mov
dec
push
pushf
gs
mov
ret
push
out
out
movups
jbe
lret
lock
dec
imulb
push
in
rcrl
and
arpl
dec
pusha
xor
jb
fcompl
jae
lods
cmp
mov
rclb
sbb
jno
or
push
sub
out
jmp
scas
xor
stos
cltd
mov
ss
cmp
sub
jns
and
sub
jbe
pop
or
leave
out
stc
in
mov
or
sub
icebp
and
je
out
cmpb
mov
dec
and
out
popa
cmpsb
mov
icebp
loope
pop
sahf
in
dec
aas
paddw
pop
pop
cmp
mov
outsl
push
ja
hlt
mov
mov
mov
fisubs
mov
lret
loop
int3
inc
pop
bt
bound
cmp
in
aaa
adc
fmul
test
adc
jns
inc
xchg
lcall
cltd
out
dec
into
jg
inc
sbb
pop
jmp
cltd
mov
adc
xchg
pop
lods
clc
pop
dec
xchg
jp
ret
push
push
xchg
mov
mov
jg
mov
or
lret
jae
jl
out
xchg
pop
in
xchg
rolb
ror
mov
das
test
fadds
add
and
mov
mov
lods
rorl
rol
add
fstpl
xor
loop
pop
pop
or
mov
lods
dec
lock
mov
xchg
jmp
adc
pop
ret
mov
rol
or
ret
test
bound
test
or
iret
sub
loop
dec
xchg
inc
or
fnstcw
pop
add
hlt
add
jge
xor
mov
dec
cli
cwtl
dec
mov
add
pop
add
outsb
inc
repnz
hlt
loopne
mov
dec
loopne
iret
movsb
and
cmp
adc
leave
outsl
fnstsw
dec
dec
dec
sbb
pop
pop
imul
pop
mov
subl
mov
je
fwait
xchg
popf
and
cmp
arpl
inc
in
mov
inc
lcall
pushf
add
mov
xchg
repz
mov
js
fimuls
aad
fnstenv
add
cmp
leave
notl
fistl
pop
scas
adc
outsl
enter
or
hlt
mov
adc
add
or
repnz
mov
ret
push
pop
sub
inc
push
mov
jmp
push
cmp
jl
faddl
aam
lahf
jne
mov
adc
loope
ds
mov
pop
xor
jl
xchg
ficompl
aad
scas
pop
hlt
sbb
xor
fstp
dec
xor
std
jp
xchg
test
push
movb
out
sbb
dec
hlt
dec
testb
and
or
jle
ret
rolb
test
jb
sbb
jle
hlt
and
cmpsb
out
mov
sahf
inc
xor
inc
adc
loope
out
jmp
mov
mov
push
inc
push
dec
inc
xchg
push
pop
push
cmp
test
leave
insb
aad
repz
sbb
inc
out
fsts
hlt
rcr
lret
leave
jmp
mov
pop
addr16
sub
push
std
stos
adc
out
out
jp
ds
or
cwtl
add
fidivl
mov
jo
jnp
pushf
adcl
add
xchg
push
push
repz
pop
and
aad
movsl
mov
nop
inc
roll
inc
setge
loope
dec
mov
scas
pop
cmpsb
int
xchg
push
int
jne
xchg
shll
mov
std
mov
xchg
mov
imul
pop
or
cmc
sbb
stos
dec
lret
inc
inc
add
jb
pop
lods
push
adc
mov
sub
pop
add
sub
dec
inc
mov
rcr
addr16
adc
mov
out
push
sti
sbb
movsb
scas
test
cmc
popf
shlb
cltd
mov
jl
adc
sbb
pop
push
dec
jmp
inc
dec
cwtl
jbe
and
in
jl
xlat
loopne
hlt
xor
and
inc
lret
add
or
push
out
fsubrl
lret
cltd
in
fs
mov
ret
test
mov
stos
jae
test
pop
les
xor
hlt
dec
mov
fstl
push
jno,pt
pop
jns
fistpll
cmp
sarb
pusha
int3
or
dec
mulb
dec
outsl
test
ficoml
sub
pop
ret
pusha
ficoms
push
dec
mov
cltd
xchg
rol
leave
out
mov
push
jnp
jb
mov
adc
jmp
scas
repz
mov
cs
test
mov
outsl
pop
dec
and
mov
jmp
pop
aaa
add
sbb
fdecstp
jns
sub
pushf
popa
out
cli
or
mov
add
pop
add
add
and
aad
mov
mov
sbbl
jmp
insl
mov
sbb
data16
in
iret
push
fsubrs
jp
cwtl
dec
imull
mov
mov
les
imul
and
stos
cmpsl
sbb
clc
xor
addr16
mov
mov
jle
insb
inc
ds
mov
adc
shrl
into
cmp
idivl
sub
dec
ss
fwait
and
or
mov
dec
push
cmp
iret
push
adc
cmp
in
dec
adc
rorb
add
gs
out
shl
mov
xor
imulb
rolb
push
mov
into
sbb
jnp
xacquire
adc
push
mov
addr16
aas
aas
jb
sti
cmp
fcomps
mov
imul
fnstcw
adc
adc
insl
pop
push
mov
stos
ss
fdivrl
retw
mov
mov
xor
jo
call
leave
xchg
pop
dec
jb
mov
mov
jecxz
das
inc
jo
pushf
int
adc
popa
mov
mov
dec
in
inc
sbb
clc
inc
or
mov
mov
mov
arpl
adc
inc
adc
scas
jle
in
out
dec
mov
pop
std
or
gs
daa
iret
shrb
mov
inc
icebp
flds
mov
data16
dec
cmpsl
lcall
inc
test
es
mov
stc
mov
sbb
jle
nop
js
out
scas
js
add
pop
lret
stos
xor
mov
pop
sub
sub
inc
pushf
xlat
scas
push
movsl
and
fldcw
nop
mov
pop
inc
cmc
cmp
jns
aad
lds
enter
and
jo
data16
std
push
mov
adc
dec
and
mov
pop
jae
fsubrl
shll
mov
jg
dec
andb
pop
mov
sbb
fildll
insl
hlt
add
lock
mov
in
pop
pop
mov
int3
iret
fidivl
jne
sbb
xor
je
pop
in
push
inc
pop
mov
fwait
adc
outsl
mov
push
xlat
bound
mov
dec
lea
in
mov
sarb
test
xchg
movsb
fisttpl
add
adc
stos
jl
call
sub
addr16
push
jae
cld
xor
cmp
insb
push
shlb
fildll
inc
xlat
movsl
jnp
cwtl
adc
out
out
outsl
inc
lock
clc
mov
fcompl
repz
adc
pushf
das
ret
shrb
ljmp
sub
and
sub
jae
mov
sub
cli
dec
scas
lret
icebp
in
sbb
xchg
fsubrs
dec
sub
dec
lock
bound
or
loopne
sub
out
mov
ljmp
jmp
push
mov
mov
lcall
call
mov
notl
mov
adc
xor
jle
jbe
xchg
jnp
lds
les
sub
jae
xchg
push
aad
jl
mov
jnp
push
pop
out
jno
push
scas
loopne
jb
adc
push
push
decb
mov
movsl
mov
push
fstl
lods
xchg
addr16
sbb
in
sbb
sub
adc
pop
dec
pop
mov
in
jne
xor
pop
jg
mov
imul
aas
inc
sbb
mov
popw
pop
xor
push
or
mov
fdivl
pop
cli
adc
pop
xchg
cmp
out
xor
and
xchg
enter
jo
ret
aaa
sahf
pop
shlb
cmc
or
lahf
js
or
lds
lret
shrb
sarb
and
ret
dec
rcll
imul
cwtl
or
mov
daa
fwait
xchg
lcall
daa
scas
cmc
sahf
xlat
pop
jne
inc
loopne
pop
lret
push
sbb
jmp
mov
dec
std
out
xchg
jne
jne
mov
mov
inc
sub
mov
inc
mov
and
xor
adc
jae
xor
ljmp
mov
pop
inc
data16
inc
or
sub
mov
imul
addr16
incl
pusha
mov
adc
xor
andb
enter
js
adc
sbb
adc
push
cmp
jmp
out
sbb
stos
jo
cmpsl
pop
int3
fs
add
adc
popl
jge
xchg
push
dec
and
ss
call
push
mov
stos
lock
addl
sub
sbb
pusha
inc
gs
in
xchg
dec
subl
mov
mov
sahf
add
in
out
xor
jmp
and
icebp
aas
imul
pop
add
or
enter
sti
shll
xlat
jbe
jmp
pop
loop
cmp
daa
jb
add
sbb
push
xor
and
push
mov
or
inc
mov
jbe
rorb
push
and
xchg
frstor
sahf
stc
pop
jle
clc
out
inc
fcom
jmp
or
ja
pushf
lea
mov
mov
mov
adc
cltd
jg
jl
or
xor
rcll
mov
fwait
lcall
loopne
lods
jmp
dec
push
push
lock
mov
filds
imul
pop
and
ror
dec
popa
nop
or
and
lock
inc
out
int3
pop
faddp
jns
or
fs
xchg
adc
rorl
adc
jg
cmp
mov
in
ljmp
cltd
std
cmpsb
mov
jae
lret
inc
push
and
or
stc
cld
mov
xor
add
test
mov
fstpt
push
sti
push
dec
dec
aam
or
add
popf
push
nop
add
mov
xor
std
fwait
arpl
adc
add
adc
push
lea
lret
popa
cmp
hlt
inc
jae
mov
movsb
sbb
dec
push
enter
mov
push
ljmp
and
inc
mov
pop
mov
xor
mov
push
sub
call
jbe
adc
jns
cmp
outsl
dec
jbe
sub
mov
into
pop
sbb
jb
fiadds
nop
out
stos
mov
jg
inc
mov
fidivs
ficoml
lcall
jp
sub
scas
imul
mov
push
dec
lret
movl
shll
enter
pop
mov
dec
sbb
and
push
xor
xor
les
pushf
fiadds
int3
jle
mov
mov
cmc
add
outsb
fstl
faddl
and
cltd
mov
push
or
and
or
mov
sub
sub
or
push
ss
cmp
cmp
es
sub
mov
stos
add
cltd
jno
pop
sbb
jp
mov
sarb
push
iret
inc
xor
mov
pop
dec
std
add
cwtl
neg
lfs
xchg
cmpsl
push
push
sbb
sub
rcr
pop
add
gs
pop
aaa
inc
adcl
cmpsl
ffree
inc
add
pop
push
pop
dec
mov
sbb
test
jg
xchg
jg
icebp
lret
xor
sub
xor
jbe
mov
adc
pop
jmp
mov
cs
cld
scas
push
jecxz
and
jno
mov
inc
or
aas
push
cs
lds
lret
and
and
lret
mov
mov
mov
jecxz
xor
pop
and
lods
std
scas
loopne
pop
or
mov
pop
mov
add
data16
and
popa
mov
fmuls
pop
nop
in
xor
jnp
adc
test
cmpsl
rcl
jg
xor
xchg
inc
pop
xchg
sub
mov
fsubrl
adc
cmp
mov
test
sahf
arpl
push
fnsave
mov
scas
hlt
les
fsubs
pop
inc
in
es
ret
rorb
repnz
js
out
mov
push
fs
arpl
mov
mov
shlb
mov
je
mov
stos
int
jg
aad
fiadds
or
adc
fbstp
and
mov
and
mov
or
pop
mov
aaa
jo
jb
xchg
rcrb
mov
sbb
sub
dec
sub
inc
mov
inc
xchg
repz
dec
rcll
test
test
movl
mov
bound
sbb
xchg
lock
push
or
push
cmpsl
cmp
sub
cmc
bound
or
xchg
jo
push
sub
jmp
loopne
push
jge
mov
cld
push
popf
mov
inc
and
lods
mov
test
fnstcw
jnp
test
jmp
adc
lods
repz
cmp
mov
adc
orb
adc
lods
cs
call
pop
mov
adc
sarl
push
adc
in
out
xchg
inc
js
cmp
arpl
dec
jne
fiadds
ret
outsb
pop
lret
mov
push
es
mov
sbb
inc
push
push
dec
xor
icebp
cli
mov
jne
push
out
in
fwait
push
test
inc
sub
mov
stos
mov
test
xchg
shll
cmp
push
shrl
fsts
dec
pop
push
cmc
push
xchg
pushl
das
mov
in
pop
mov
pop
iret
mov
jmp
jl
or
fiadds
js
or
es
xchg
inc
scas
jae
jo
jo
pop
fisubrl
dec
sti
loop
jge
cmpsl
mov
aaa
repz
test
jl
dec
out
test
in
push
clc
sarb
mov
pop
jnp
adc
loope
aam
mov
jb
sarb
xchg
and
xorl
or
dec
adc
call
push
fildll
and
inc
int
push
das
cmp
sub
pushf
push
mov
pop
popf
inc
aam
in
jg
push
movl
ja
jmp
cmc
js
push
sub
mov
pop
jge
in
leave
cmp
packuswb
arpl
push
jl
sub
aas
pusha
mov
jne
add
inc
and
std
divl
mov
shll
jne
idiv
adc
out
in
push
mov
icebp
imul
sti
jae
jns
sti
push
pop
stos
lcall
cmp
rcrb
sub
lds
shl
imul
cmp
pop
xchg
popf
rcrl
cld
std
cmpsl
xchg
push
movsb
inc
aad
lret
or
add
adc
or
cmp
mov
std
inc
push
aam
sbb
pop
jno
nop
lahf
mov
lcall
ffreep
in
popw
inc
cmp
mov
pop
xor
cs
mov
pop
mov
jp
or
push
mov
cmp
out
lret
ss
fsubrs
fcmovnbe
movsl
dec
loope
pop
fdiv
bound
rorl
clc
out
push
xor
jb
pop
cld
jecxz
jae
sbb
sbbb
enter
mov
mov
and
bound
sbb
das
hlt
xchg
mov
sub
push
sbb
mov
imul
in
std
lds
or
mov
jno
ret
jnp
inc
loop
or
mov
xchg
imul
rcll
bound
pmaxub
pop
stc
push
push
rcrl
jp
arpl
adc
pushl
dec
icebp
xchg
cmp
dec
xchg
pop
inc
aam
int
ds
in
lahf
stc
cmpb
ljmp
out
ret
fldt
xchg
cmpsb
cmp
mov
rcl
push
pop
or
pop
or
adc
pop
sbb
pop
or
sbb
push
or
ja
mov
mov
lcall
and
enter
lea
cs
lcall
out
mov
mov
push
dec
in
adc
jo
jbe
lret
dec
xlat
cmp
fs
cli
test
sbb
pusha
push
push
mov
in
aam
jge
nop
and
mov
pop
pop
std
or
pop
in
rcrl
dec
xchg
cmc
pop
fadd
shrl
mov
fimuls
loopne
insl
in
dec
aaa
rorl
cmp
shll
xchg
push
mov
dec
dec
pop
addr16
mul
jbe
repz
rolb
cmp
mov
cmp
add
mov
cmp
push
inc
add
fstps
and
int3
pushf
push
mov
aas
sub
les
xor
cmpsb
jl
movsb
sbb
sub
xchg
jo
or
inc
lcall
mov
mov
pop
shrl
je
aaa
jne
pop
and
push
pop
dec
mov
pop
mov
lret
mov
in
das
repnz
mov
cli
xor
lcall
in
or
lahf
cs
and
and
cmp
loopne
lret
out
test
test
aas
or
dec
and
js
jmp
dec
xlat
xchg
add
popa
test
test
aam
subb
mov
jle
sub
enter
test
hlt
inc
in
ja
js
sarb
jns
shll
push
adc
bound
xchg
adc
movsl
adc
leave
cmp
mov
xchg
cmp
stos
adc
adc
pop
js
mov
push
pusha
cmpsl
cmp
fwait
pop
out
adc
sub
xchg
push
jle
andb
out
stos
cs
dec
jno
inc
dec
xor
inc
sbb
adcb
cmpb
and
rorb
call
mov
push
or
mov
sbb
adc
cmpsl
push
stos
bound
mov
or
rcr
xchg
adc
mov
cli
roll
mov
mov
sbb
je
xchg
xor
sbb
jnp
xor
popf
sarl
add
xchg
cli
adc
and
xchg
add
xchg
mov
repnz
mov
jp
sub
adc
movsb
dec
push
xchg
inc
bnd
shlb
mov
push
push
pop
mov
push
add
shl
imul
cltd
pusha
mov
mov
dec
cmc
add
andb
inc
adc
fistl
dec
loop
mov
and
out
fcmovu
add
jle
jb
sbb
scas
add
insl
mov
pushl
xchg
xchg
jecxz
imul
dec
out
cld
mov
xor
and
stc
mov
lcall
mov
rcrl
test
mov
loope
mov
add
mov
jno
push
lret
xlat
or
xor
pop
decl
es
pop
mov
aas
add
aaa
mov
xchg
jbe
jecxz
dec
add
xor
enter
movsl
in
dec
stos
repnz
daa
test
lods
jae
jecxz
or
adc
fsts
adc
pavgb
bound
push
pop
fidivrl
pop
or
repz
add
mov
and
mov
xor
push
or
mov
mov
into
rclb
aad
daa
out
popl
pop
test
ret
adc
pusha
mov
lds
cld
ja
sbb
xchg
mov
hlt
gs
mov
sahf
xor
movsl
inc
sbb
in
push
pop
pop
pop
pusha
std
mov
repnz
dec
aam
and
rcll
arpl
mov
sbb
push
sub
xchg
jbe
aad
in
daa
push
push
loop
mov
adc
xor
fcompl
add
test
inc
lock
test
decl
out
scas
pop
nop
repz
pop
push
lahf
cmp
pmaxub
jbe
pop
push
movsl
stc
inc
pop
in
dec
jle
scas
bound
gs
push
sub
push
fcmove
pop
sti
add
pop
adc
mov
aas
sarb
repnz
aam
cmpsl
sub
cmpsl
dec
or
out
push
adc
popa
cmp
pop
test
mov
pop
xchg
jp
outsb
les
sbb
sbb
xchg
rclb
and
push
lds
xchg
jg,pn
xchg
sbb
loope
das
repnz
sub
fcompl
or
stc
jge
rcrl
mov
scas
lret
sahf
cmp
das
ss
or
cmp
or
adc
in
sub
sub
clc
sub
loope
xchg
push
mov
add
mov
aam
ret
int
inc
cwtl
mov
xor
imul
sub
sub
jge
add
mov
fidivrl
xor
lret
jbe
mov
fwait
call
dec
fwait
push
negb
push
jl
ret
push
sub
sub
fimull
sub
out
inc
fwait
ret
movsl
in
test
arpl
jmp
rolb
nop
jno
aaa
xchg
shll
loope
aas
add
sarb
or
inc
pop
adc
inc
shrl
pop
inc
in
bound
xchg
push
jb
inc
pop
negl
sub
sbb
xor
shrl
sbb
mov
fcoml
fucomip
imul
ljmp
jcxz
adc
insl
dec
pop
dec
pop
push
or
dec
sbbl
scas
loopne
std
or
cmp
inc
or
loopne
push
int
mov
add
nop
jecxz
ror
cwtl
das
jo
insb
push
imul
jle
out
push
or
pop
cs
add
add
mov
jo
mov
ds
scas
loop
pop
cld
inc
shll
xor
test
popf
iret
orb
imul
adc
and
cmpsl
cs
adcl
mov
scas
add
in
push
jno
jl
mov
popf
shr
mov
shlb
add
sbb
pop
adc
loopne
divl
shr
cmpsb
cmpsb
les
push
cmp
fwait
popf
cmpsb
inc
mov
or
adc
add
mov
xchg
fwait
pop
dec
rcl
fcmovnbe
cmp
jns
out
mov
xor
adc
and
cs
mov
mov
hlt
xor
outsl
mov
and
out
adc
mov
pop
test
in
ret
push
stos
xchg
xor
or
ljmp
es
xchg
in
lock
sbbb
aas
insb
adcb
pop
jecxz
fcmovbe
rorl
loope
jns
insl
es
icebp
or
lret
and
sub
add
loop
cmpsb
inc
xchg
mov
fldl
insl
addr16
push
adc
into
cmpsl
jge
fucom
pop
and
rorb
mov
lods
jmp
or
xchg
pop
ret
adc
andb
je
or
loopne
xor
cmpsl
jnp
test
repz
cmp
aam
jne
mov
jno
ljmp
sar
movsl
cmove
mov
aaa
lahf
sub
pop
movsl
dec
jmp
enter
sbbl
das
enter
add
sbb
mov
cmpsb
sub
jle
rcrl
xor
mov
outsl
dec
inc
push
push
testb
dec
xchg
pop
xchg
hlt
add
insb
cmp
inc
push
jp
dec
inc
xor
test
add
aas
cltd
jno
cwtl
mov
dec
push
cli
ljmpw
xchg
dec
jmp
daa
ss
and
enter
xchg
xchg
nop
in
in
movsb
pop
lcall
mov
mov
adcl
push
loop
into
xorl
rcrb
pop
sbbb
mov
jne
test
mov
imulb
mov
test
dec
adc
sbb
insb
pop
mov
mov
imul
push
push
test
sbb
fwait
mov
dec
dec
fnclex
inc
mov
mov
add
out
xchg
movsl
xchg
add
inc
scas
sahf
and
es
hlt
gs
cmpsb
pop
push
rol
movsl
push
and
testl
mov
stc
push
int3
dec
stc
push
fscale
xor
sub
out
stos
imul
xor
adc
mov
mov
pop
lods
repz
int3
mov
push
lods
push
sbb
fistpl
pop
mov
imul
stos
mov
ficoms
xorl
lods
loopne
imul
loop
aaa
xor
rorl
inc
repz
cmc
ret
xchg
push
cmpsb
sti
push
jecxz
inc
shlb
lea
xor
cmp
inc
add
push
iret
popa
dec
push
xchg
sar
cmp
adc
cmc
mov
adc
mov
adc
scas
mov
iret
cmp
mov
and
scas
fisttpll
flds
inc
inc
call
lea
fcomip
push
lea
pop
mov
into
push
jnp
and
mov
mov
aaa
or
mov
les
int3
ret
and
bound
lret
pop
inc
dec
loop
sub
push
dec
ret
mov
adc
shlb
stos
in
aam
es
jo
cmpsl
out
cmc
sbb
push
jo
out
imul
jmp
cmp
aaa
lock
aas
push
push
nop
xchg
dec
movsl
bound
test
mov
jo
jg
jg
mov
mov
dec
xchg
add
lods
int
sub
js
lea
int3
aam
mov
adc
mov
aam
cmp
inc
xchg
sub
mov
cmp
in
fstpl
mov
push
inc
and
pop
sbb
cli
lcall
addl
push
mov
sti
sub
pop
dec
push
push
mov
dec
fistpll
xor
mov
sar
cmc
dec
pop
cmp
int
push
das
jge
in
cmp
xor
dec
loopne
sbb
cli
mov
jae
add
xchg
enter
push
das
cmpsb
fsubl
push
loope
inc
pop
and
cmp
out
movsb
pop
adc
and
repnz
enter
fcmove
lret
nop
aam
mov
adc
je
addb
imul
call
adc
inc
and
xchg
int3
nop
ss
mov
fcoms
cmp
test
push
jo
es
and
push
cld
clc
dec
cmp
mov
inc
int
cwtl
lods
dec
mov
leave
cmp
sbb
dec
sbb
jmp
jmp
push
sahf
push
shl
sbb
cmp
xchg
push
dec
and
das
push
dec
or
mov
add
sub
push
push
or
repnz
cmpsb
sbb
test
push
push
shlb
call
in
add
xchg
mov
test
js
mov
pop
push
cli
cmp
test
or
frstor
in
adc
rorl
mov
roll
mov
adc
mov
popa
add
fs
push
jns
cmpsb
sbb
pop
or
dec
jnp
push
stos
push
push
inc
jns
jns
std
cmp
movb
sbbb
and
lcall
jo
and
jmp
jne
ja
push
pushf
xchg
sahf
js
pop
shrb
rdpmc
jmp
shl
iret
ja
cwtl
add
xlat
std
out
jno
sub
imul
mov
fs
push
push
add
mov
pop
stos
or
ja
cltd
jne
cs
pop
mov
arpl
mov
sbb
pop
xchg
movl
rclb
ds
pop
sbb
pop
mov
js
or
sub
jo
in
jge
or
mov
hlt
loope
sbb
dec
js
inc
sarl
lea
aad
mov
nop
fisubs
adcl
cmpl
loope
push
and
data16
push
pop
test
movsl
adc
call
adc
fcomps
not
stc
cmpsl
test
xor
or
pushl
pop
cwtl
push
pop
jo
jmp
jne
jle
fmuls
ret
push
xchg
mov
jnp
movsl
jge
and
xchg
data16
adc
out
ljmp
jno
sbb
mov
scas
daa
mov
ret
stos
cwtl
icebp
adc
aam
jnp
out
out
pop
into
sbb
push
nop
mov
inc
sub
push
xchg
lds
mov
lds
test
sar
test
and
inc
outsb
cltd
dec
insl
mov
xor
pop
pop
mov
dec
sbb
push
js
fisubrl
les
push
pop
xchg
insb
sbb
aam
jbe
sti
mov
pop
mov
pop
pop
repnz
cmpl
jmp
pop
ja
fistps
xorb
jp
std
inc
pop
pop
stos
hlt
jns
xlat
dec
into
arpl
cmc
push
in
cli
int3
push
ja
mov
mov
lahf
pushf
int
int
xchg
test
stos
lret
sub
das
push
fidivrs
push
adc
mov
cmpsb
call
and
and
adc
or
aad
sub
cmp
gs
filds
xchg
mov
push
mov
cmp
ds
iret
jle
inc
xchg
xchg
rol
mov
mov
lcall
and
mov
lret
mov
test
cmp
loop
jg
sbb
insl
int3
dec
inc
mov
push
sub
movsb
rcr
xor
mov
mov
mov
ja
bound
out
add
add
idiv
fnsave
rcll
dec
jp
int3
add
mov
mov
sub
xor
int
inc
fwait
lea
movsl
lret
adc
pop
push
xchg
and
sahf
mov
inc
and
jp
mov
lock
mov
shrl
mov
adc
stc
ja
loopne
out
sbb
and
popa
test
inc
aaa
in
pop
xchg
int3
xor
cld
mov
push
sub
pop
imul
dec
test
push
lods
leave
sub
sub
shl
adc
pop
in
lcall
adc
mov
cmp
insl
cmovo
push
or
data16
and
ja
lea
popa
xor
psadbw
push
xchg
cli
je
ret
in
pop
push
add
aam
push
daa
sub
sbb
cmpsl
adc
push
pop
in
push
leave
cmp
mov
or
lret
push
jle
jle
movsb
pcmpeqd
negl
das
pop
pop
cwtl
in
pop
fs
aad
jae
pop
adc
pop
shlb
loope
adc
pop
fisttpl
mov
add
cmp
cmp
test
lahf
hlt
mov
adc
xor
inc
jae
jge
imul
mov
xchg
aad
daa
sub
test
jmp
mov
in
pop
lret
imul
sbb
pop
adc
scas
adc
add
sti
mov
movsl
push
mov
xchg
mov
push
jbe
fisubs
push
lods
into
pop
push
scas
mov
xchg
jo
and
mulb
mov
dec
out
mov
xor
and
and
ljmp
pop
mov
sti
push
add
lahf
mov
imul
add
jl
inc
jmp
mov
xchg
sbb
insb
js
int
out
adc
jge
scas
pop
adc
test
scas
test
sub
or
mov
jecxz
loopne
mov
rorl
cld
pop
lahf
out
mov
aaa
stos
hlt
pop
cmp
aas
fs
cmp
icebp
fbld
addl
pop
pop
pop
repz
sti
cs
xor
cmp
mov
add
popf
xorl
loopne
lock
inc
shr
xchg
jg
xchg
add
jmp
mov
imul
cmp
inc
enter
mov
xorl
andl
into
imul
loope
cmp
push
lret
mov
leave
jbe
loopne
inc
test
push
cmp
decb
dec
cmp
add
les
pop
jo
push
call
shrb
icebp
in
in
xor
jae
xchg
cmp
scas
mov
mov
add
aas
mov
insb
fs
xor
in
mov
xchg
mov
es
xchg
jg
adc
cmpsl
lahf
notb
aaa
pop
out
fucomi
jae
add
in
lret
or
sub
lock
imul
test
lcall
out
add
push
jne,pn
inc
add
pop
repz
jl
dec
mov
sub
mov
iret
and
xchg
leave
jg
fsub
pop
divb
std
inc
stos
or
pop
and
sub
jl
cmp
cmpsl
bound
mov
sbb
lea
sbb
add
scas
nop
les
js
pop
mov
jo
cwtl
sarl
pop
jns
dec
adc
push
mov
pop
loope
call
shl
repnz
cmc
jge
outsl
or
xor
or
fiaddl
push
aas
push
mov
pop
jae
dec
mov
xor
dec
xlat
lea
data16
out
pop
mov
bound
push
xlat
nop
sbb
pop
adc
sbb
cmp
add
outsl
mov
adc
arpl
dec
les
sub
out
jmp
cmc
das
inc
push
lds
sbb
and
out
fwait
mov
inc
xchg
pusha
dec
dec
enter
icebp
js
mov
pop
inc
push
ja
push
inc
call
test
insl
loope
ljmp
push
lret
and
fs
clc
stos
out
jne
mov
add
in
rcrb
and
fs
insb
fistl
xchg
shld
mov
int
push
mov
xor
pushf
test
test
lfs
xor
cmpsl
clc
in
add
dec
cmp
dec
daa
mov
mov
rorl
lods
pop
rcl
scas
jmp
daa
ret
xorb
xchg
sbb
shrb
fwait
lods
fs
outsb
imul
ljmp
pop
cmp
inc
pop
sarb
mov
cs
enter
orb
push
cmp
movsb
push
stc
cmp
jmp
mov
mov
push
lods
andb
fstl
sub
sub
fstpt
inc
bnd
out
xchg
push
mov
dec
mov
clc
pusha
jno
aam
fs
mov
push
mov
and
mov
pop
cmp
mov
shll
add
mov
jnp
lret
hlt
cmc
in
cmp
xchg
je
xchg
fs
or
add
mov
jl
inc
lea
or
mov
nop
sub
sbb
aas
mov
xchg
data16
jle
mov
imul
pop
cmpsl
jb
loopne
test
sub
jo
negb
pop
push
fisttpl
cmpsb
lretw
icebp
mov
pusha
call
xor
adc
push
dec
inc
mov
push
jle
notl
bsf
jnp
cwtl
jge
ffree
xchg
push
ror
and
pusha
fildl
add
ud2
ficomps
int
sbb
stos
lea
mov
xlat
loop
sti
push
in
mov
insb
into
xchg
add
fs
xadd
xor
clc
and
adc
sti
arpl
jmp
jbe
sub
mov
fdivrs
fadds
arpl
into
add
js
xchg
mov
push
sbb
push
shr
in
and
jle
sbb
sub
shlb
minps
subl
pop
aam
or
jae
hlt
jnp
pushf
ss
test
adc
xchg
cmp
jg
jl
cs
aad
lods
mov
or
dec
jle
xor
das
push
pusha
cwtl
leave
sti
psrlq
or
repz
fisttpll
dec
sbb
cmp
push
in
sub
push
loop
aas
out
and
pop
mov
mov
pop
ja
mov
cmc
mov
push
es
xor
push
lods
inc
dec
ljmp
rcrb
incl
mov
andb
sbb
mov
xchg
dec
pop
jne
cmp
mov
inc
inc
sbb
and
nop
mov
or
cmc
mov
rorb
sub
daa
jmp
aam
fs
mov
iret
outsl
sub
mov
je
iret
icebp
lock
xor
cli
inc
gs
mov
adc
jnp
push
mov
in
push
cmpsl
popf
sub
adc
and
cs
int3
jb,pt
xchg
frstor
pop
mov
insl
ss
jl
xor
jnp
stos
lahf
lret
fiadds
sarl
cmp
mov
hlt
sbb
inc
ljmp
adc
mov
xchg
pop
xchg
xor
arpl
xchg
pop
movsb
es
mov
push
ja
daa
add
push
call
mov
mov
jmp
ss
fs
xchg
aam
aaa
adc
mov
cmp
int
mov
jns
sub
jle
inc
out
sub
movsl
inc
mov
mov
sarl
sbb
out
jno
sbb
out
cmpsb
pop
xor
addr16
pop
orb
daa
xor
jmp
cli
popf
xchg
inc
pusha
push
xchg
inc
xchg
scas
push
pusha
push
gs
pop
mov
wrmsr
push
or
xor
icebp
lock
jl
sbb
loopne
lret
dec
adc
jb
inc
sub
mov
adc
outsb
stos
lods
pop
push
repnz
jmp
cmp
pop
fmuls
addr16
repnz
sbb
cmpsl
sti
xchg
mov
testb
arpl
lock
push
lfs
test
add
mov
movsl
fistps
add
and
adc
pop
sub
jne
insl
sbb
andb
out
cmpl
adc
cmpsb
mov
out
sbb
or
mov
movsl
sbb
push
inc
test
cld
jmp
dec
test
pop
fdivrs
and
push
jle
ds
mov
mov
loop
into
add
cld
in
cwtl
mov
jbe
ret
mov
mov
or
inc
aad
add
jne
out
ja,pt
push
loop
dec
xor
mov
sub
fs
jnp
sub
adc
sbb
sub
jle
xchg
mov
adc
rol
xchg
loope
fsubrl
ja
out
sbb
test
adc
test
ljmp
sbb
loope
scas
rcr
push
lea
rorl
mov
dec
and
adc
cltd
xchg
mov
push
movsl
fdivrl
and
es
imul
mov
push
push
sbbb
jge
fstpt
test
lods
xor
lret
sar
imull
cmp
movl
mov
xlat
inc
lock
hlt
hlt
jg
jmp
cli
ja
sbb
fisttpl
cltd
add
pop
std
jp
shrl
popf
mov
add
and
add
lahf
mov
mov
in
xchg
push
popa
push
clc
scas
repnz
fwait
pop
push
clc
ja
xchg
stos
cmpsl
divb
push
movsl
xor
add
push
push
inc
loopne
sbb
clc
pop
rcrb
xor
sub
das
bswap
lea
dec
fcmovnbe
mov
nop
nop
out
movsb
loop
mov
hlt
fisttpll
cmp
xor
adc
sarb
ss
lods
imul
lcall
ljmp
add
dec
jp
or
inc
mov
js
jl
cmp
sbb
or
sbb
and
imul
or
dec
mov
fcoml
dec
mov
cltd
mov
cmc
les
stos
subl
cli
push
les
mov
or
adc
pop
mov
inc
cwtl
inc
sub
sbb
pop
or
jo
lods
into
nop
and
subl
popa
cmc
mov
fidivs
mov
or
ret
in
add
push
adc
adc
inc
mov
out
outsb
or
inc
inc
fcompl
sub
dec
sub
scas
fcomp
pop
imul
jnp
xchg
cmp
inc
outsb
shlb
out
dec
fbld
daa
nop
mov
xor
push
dec
pop
fcompl
movsl
leave
push
and
inc
add
pop
jg
jb
cmp
insw
pop
xchg
pop
in
sub
ss
push
mov
scas
xor
jo
push
in
ficoml
jecxz
aam
jnp
leave
cmp
ds
mov
inc
std
push
sub
mov
sbbl
ffreep
jecxz
popa
ss
lret
daa
jo
mov
mov
notl
loopne
mov
js
repnz
data16
sti
scas
arpl
and
and
xor
arpl
jb
scas
xchg
loope
fs
cmp
imul
inc
cmp
into
xor
fistl
jo
push
pusha
gs
movsb
cmp
xchg
sbb
test
rcll
pop
xchg
daa
shll
xor
xchg
jb
icebp
xchg
mov
pop
mov
push
inc
inc
push
movsl
les
xchg
sbb
pop
lds
or
lds
mov
flds
add
iret
and
cmp
and
xor
xchg
xor
incb
sub
mov
mov
mov
mov
fnstcw
ss
pop
cs
push
ljmp
xchg
sub
jge
imul
sbb
insb
jp
rorl
fdivr
les
out
xor
out
jno
or
iret
mov
mov
cld
push
arpl
push
das
fstps
xor
aaa
xor
mov
ret
sub
jno
aad
sub
mov
nop
cmpsb
repz
pop
lret
push
mov
shlb
dec
xchg
std
xchg
aam
and
dec
imul
enter
sub
bound
sub
movsl
fldt
test
jne
add
cwtl
aam
mov
shrb
shll
fsubrl
pop
in
adc
push
dec
mov
int
andl
into
dec
cmpsb
mov
add
xchg
leave
jg
in
and
inc
inc
loope
js
mov
add
adc
add
mov
pop
mov
lahf
dec
sub
fisttpl
js
icebp
mov
jecxz
mov
sub
stos
push
sub
fsubrs
dec
xor
push
mov
sub
cmp
or
mov
mov
mov
mov
mov
dec
loope
xchg
inc
and
xchg
adc
mov
adc
mov
outsl
in
loop
shlb
in
divb
and
sahf
rorb
push
int3
movsl
ljmp
out
leave
mov
aam
xor
cmpsl
sahf
push
decl
add
scas
add
popf
inc
lea
jg
lods
out
loopne
jp
cwtl
xchg
mulb
aaa
test
in
gs
fcmovb
mov
sub
xlat
sysenter
pop
inc
pop
ss
dec
and
xor
inc
aas
or
fs
test
insb
jg
fdivrs
sub
imul
loopne
in
out
cmpb
xchg
cmp
mov
add
fnstcw
dec
repnz
add
movsl
cmc
les
clc
inc
in
dec
jo
clc
sarl
out
fisttpl
loope
pop
push
xor
fimull
scas
das
push
inc
mov
adc
jno
jns
jbe
push
or
xchg
stos
insl
lods
repz
pop
jno
mov
xor
dec
lods
movsb
xlat
jns
in
aam
push
dec
xor
sub
nop
movsl
mov
lcall
lret
sbb
or
je
das
outsb
mov
push
jp
xchg
dec
pop
mov
ja
lret
or
fcompl
addr16
std
add
cmpsl
cs
mov
popf
mov
jmp
mov
rclb
ljmp
or
cmp
pop
pop
mov
cli
push
fisttpl
sub
pop
xchg
inc
sbb
int
or
iret
adc
sub
add
jge
push
pop
inc
jne
inc
iret
out
dec
clc
fs
dec
sbb
xchg
sahf
mov
adc
mov
jno
push
xchg
test
inc
lret
jb
mov
in
dec
mov
cmp
pop
adc
push
push
test
and
and
dec
popl
pop
or
pop
aaa
push
push
push
mov
fidivrl
pop
xor
filds
movb
aam
pop
arpl
jnp
adc
es
cmc
adc
in
xor
std
lcall
jmp
dec
imul
and
mov
mov
push
subb
add
add
pushf
sub
ljmp
dec
int
mov
jmp
pop
loope
aam
js
repnz
pop
popf
pushf
orb
and
xor
test
mov
or
dec
cmp
enter
outsb
mov
loopne
sub
aad
imul
es
sub
comiss
lahf
hlt
sub
pusha
inc
mov
mov
xlat
push
xchg
cmpsb
inc
in
mov
inc
rcrl
iret
lea
ds
out
pop
mov
cltd
inc
xor
sbb
push
jecxz
testl
or
pop
inc
lock
insb
call
in
mov
xchg
push
fcoms
xchg
push
mov
dec
fwait
jge
jge
jbe
dec
jmp
mov
adc
xor
pop
scas
add
out
dec
cmc
aas
pop
das
xor
mov
dec
jne
cmc
adc
push
fstps
dec
pop
enter
std
clc
aaa
mov
test
mov
sub
test
mov
test
fidivrl
sbb
or
pop
mov
cmp
movsl
push
sbb
pop
and
jns
or
and
mov
fdivl
in
sub
push
mov
int3
add
xor
pusha
out
ss
adcl
in
add
aad
mov
loope
dec
lahf
inc
popa
sti
shll
sahf
lods
mov
ror
aas
ss
data16
ds
cmpsb
sub
popa
mov
sub
sbb
lcall
mov
cmp
mov
and
mov
jl
mov
inc
cmp
movsl
nop
dec
subb
subb
and
mov
pop
adc
inc
int
xor
dec
fcmovnb
notl
test
pop
loop
movsl
xor
xchg
decb
inc
shlb
push
fidivrs
popa
xor
out
not
dec
dec
push
call
in
push
mov
push
int3
inc
push
lock
dec
aad
cmp
jb
loopne
inc
push
add
or
add
ret
faddl
push
cwtl
add
test
in
aaa
ret
xor
scas
cwtl
mov
loopne
cmp
push
repz
ljmp
mov
cwtl
sbb
push
loop
ds
mov
data16
repnz
fdivs
aas
adc
add
inc
push
cmp
cwtl
xor
mov
fadds
push
in
xchg
daa
loop
xchg
faddl
out
aad
and
or
hlt
loope
mov
mov
adc
enter
xchg
cli
mov
or
mov
or
adc
and
pop
mov
jmp
jno
jge
mov
adc
hlt
pop
daa
xchg
mov
jns
lock
inc
adc
dec
ja
lds
lods
jmp
mov
mov
clc
leave
movb
ret
push
in
loope
cmpsb
or
cmpsl
js
mov
add
fsubl
ret
jno
dec
and
sbb
jnp
out
mov
in
sbb
and
mov
outsb
int
rcrb
into
imulb
lods
sub
int3
je
loop
out
xor
adc
cmp
pop
inc
add
ret
or
subb
iret
shlb
dec
push
popa
dec
das
negl
pop
repnz
cltd
jbe
jmp
mov
in
je
xor
add
adc
jbe
repnz
xchg
iret
or
xlat
mov
popa
push
addr16
stos
mov
sub
mov
or
and
push
sub
xchg
int
fldl
nop
pop
mov
aaa
xor
cmp
adc
stos
icebp
imul
inc
dec
in
push
mov
clc
cmp
cmp
xchg
add
out
sub
push
adc
cmp
adc
sbb
jl
lret
adc
negl
cmp
xor
xchg
les
or
cmp
jl
xchg
mov
arpl
jae
mov
cmp
mov
inc
mov
mov
pop
xchg
test
nop
fstl
nop
cltd
adc
pop
mov
out
mov
mov
call
testl
sbb
dec
mov
fdiv
push
insl
and
mov
cwtl
jns
popf
shrb
lahf
fcmovnb
fwait
inc
test
aas
adc
xchg
call
cmp
push
je
xchg
pop
mov
inc
xchg
xlat
jge
cmp
mov
sub
cmp
pcmpgtw
mov
jle
jle
mov
and
cltd
mov
mov
sbb
outsb
adc
xor
push
sahf
sahf
fmull
push
xchg
cmp
lahf
mov
inc
dec
aas
stos
mov
inc
adc
in
stc
adc
ja
lds
fs
or
sahf
xor
inc
jnp
mov
cmp
add
dec
jecxz
mull
popa
cmp
lret
cmp
sub
cmp
xor
js
pop
fcmove
add
xor
or
int
daa
jo
mov
repnz
popa
cmp
adc
xor
cs
jmp
mov
and
xchg
cmp
les
xchg
inc
dec
int3
scas
negl
call
jmp
xor
imul
or
int
ret
cmp
lock
and
and
nop
icebp
inc
add
sbb
std
imul
shl
addr16
push
rcr
sbb
sbb
pop
cmpsb
push
pop
mov
stc
dec
cmp
inc
aad
mov
imul
or
pop
test
pop
out
hlt
and
push
jae
imul
test
fwait
mov
ljmp
inc
sub
in
test
inc
xor
push
mov
shll
outsb
mov
cmp
cmc
sbb
in
loope
cmp
jae
jo
xor
pusha
test
js
bound
push
test
sub
mov
dec
mov
outsl
xor
in
sub
push
xor
clc
outsb
fwait
and
sarb
outsl
jmp
and
adc
and
repnz
xor
fcompl
out
iret
shl
jmp
xor
repz
or
data16
lcall
jo
mov
jbe
ljmp
jb
into
pusha
mov
in
outsb
stos
inc
or
lods
loop
movsl
or
adc
fisttpll
in
inc
fildl
ss
das
pusha
inc
and
in
pop
push
jp
loope
out
mov
push
push
into
or
dec
adc
jge
mov
sahf
and
xchg
jno
lret
popl
les
data16
dec
or
cltd
pop
aad
ret
add
leave
fsubs
inc
ja
mov
imul
js
jge
mov
jecxz
dec
cmpb
mov
dec
push
rorl
popf
sub
push
jmp
or
hlt
sbb
jge
ret
call
jns
mov
dec
mov
pop
in
cmpsl
pop
std
sub
jle
mov
ffree
shlb
add
shlb
sub
sbb
pop
or
cmp
pop
ljmp
push
mov
push
add
add
push
adc
mov
cwtl
inc
stc
int3
in
pop
xor
data16
cwtl
xchg
shrb
lea
call
jge
std
scas
cmc
inc
cmp
xor
mov
jnp
test
and
in
movsb
mov
xchg
inc
jg
sbb
icebp
cmpb
xchg
adc
int
mov
jae
adc
mov
int
xchg
mov
addr16
fs
gs
jmp
mov
das
ljmp
cmpl
je
push
xor
jmp
in
xor
pop
mov
mov
jmp
mov
or
mov
fcoms
andl
pop
dec
inc
inc
iret
mov
jp
push
jp
lret
call
push
iret
pop
ret
sub
jle
popa
rcrb
push
dec
jg
out
fmuls
daa
push
loope
or
push
cmpsb
out
imul
pop
dec
inc
shr
jmp
int3
ret
push
xor
and
and
and
mov
mov
xor
mov
mov
into
out
cwtl
pusha
add
sub
add
xchg
pusha
popa
mov
xchg
out
inc
movsl
cli
mov
outsl
push
sub
popa
and
icebp
pop
movsb
dec
movsb
push
sbb
test
sbb
cmp
jl
cmpsl
or
insl
outsb
stc
xchg
ret
cmpsb
push
aaa
cmc
mov
in
out
insl
pop
and
sbb
push
dec
cwtl
pop
test
add
pop
cmp
nop
fbstp
bound
xchg
mov
fninit
xchg
cmp
dec
and
rorl
mov
inc
out
add
stos
mov
test
sti
mov
sub
adc
data16
adc
jmp
xchg
js
addr16
jae
jo
mov
sti
mov
fsubl
mov
js
repz
cmp
xorl
xlat
sub
mov
pop
popa
pop
add
mov
out
jne
jle
cmp
lahf
push
xchg
mov
stos
jb
xchg
lret
mov
in
hlt
bound
lcall
mov
int
rolb
ret
sub
push
sti
mov
bound
dec
or
cltd
and
sub
lahf
clc
push
cmp
jnp
cmp
js
loope
xchg
xor
mov
in
into
fildll
fcom
popa
push
xchg
insb
mov
push
xchg
fcoml
and
cmc
mov
gs
fcompp
fstps
popf
popf
xchg
pop
cmp
call
in
add
loope
sti
ret
filds
push
clc
out
out
add
rcrb
fadds
sub
jno
lock
iret
push
add
or
in
rol
insb
shlb
aam
or
test
imul
ret
push
jno
adc
mov
out
mov
cli
fdiv
mov
pusha
xchg
push
cmp
int3
mov
dec
iret
andl
sbb
xchg
mov
xchg
mov
jmp
adc
jo
lock
gs
xor
cmpsl
push
push
push
test
and
inc
fwait
pop
out
pop
xor
sbb
int
add
cmp
sub
stos
incb
ret
sbb
xchg
out
inc
lahf
out
sub
decb
aas
xor
mov
adc
xchg
mov
push
ja
mov
and
add
add
je
fdivrs
jne,pt
movsb
rol
pop
test
mov
popa
xor
lds
fwait
push
lret
and
lock
dec
movsb
mov
inc
lret
jno
sbb
mov
jg
outsl
call
inc
fdivrl
pop
shlb
inc
data16
dec
or
push
sub
jnp
jae
cli
je
das
dec
js
adc
xorl
push
out
push
hlt
sbb
cwtl
jge
imul
rorl
lock
imull
pop
pop
or
imul
dec
sub
lock
jb
fistps
insb
shl
jle
jae
push
in
outsb
es
sbb
orl
aas
icebp
addr16
xchg
stc
mov
mov
pxor
ljmp
pushl
lret
dec
mov
and
adc
div
test
add
test
cmp
imul
xchg
dec
dec
outsl
scas
inc
mov
in
movsb
icebp
dec
mov
dec
ds
dec
mov
lahf
into
adc
xchg
nop
in
add
or
leave
and
jb
jmp
loop
xchg
popl
mulb
lds
jmp
outsl
das
cmpsb
pop
sbb
inc
fs
shr
mov
jns
xchg
les
cmpsb
and
xchg
push
outsl
inc
pop
xor
gs
mov
pop
sub
sbb
mov
sbb
push
das
ljmp
inc
add
test
push
push
cmpsl
push
in
pop
repz
pop
dec
lds
rcrb
dec
cli
xchg
mov
mov
mov
aaa
jl
xchg
lea
xor
fstps
mov
loop,pn
arpl
mov
xchg
scas
mull
push
push
push
test
and
test
loope
sbb
sub
int3
lcall
stos
push
mull
repz
sub
fs
xorl
sbb
popf
stos
mov
mov
xlat
dec
mov
mov
push
or
out
pop
orl
and
movsl
mov
test
jmp
std
stos
sbb
pop
pop
jbe
dec
sbb
les
loop
orb
pusha
xor
push
aas
mov
mov
fsubp
or
jno
add
aad
mov
sub
xor
mov
insl
adc
xchg
xchg
into
std
or
bound
fucomp
cmp
shrb
dec
xchg
mov
and
mov
and
pop
test
mull
insl
push
pop
mov
mov
sub
mov
rcrl
pop
aam
loope
jg
sbb
rclb
cmp
sti
in
dec
pop
xchg
idivl
pop
push
jecxz
cltd
daa
xchg
mov
sub
int
setge
rorb
and
sbb
pop
xchg
pop
ret
ret
lods
sbb
fimull
movsl
das
leave
jmp
ficoms
cltd
sub
data16
les
sub
pop
xor
sub
sub
fimuls
and
inc
or
ljmp
adc
mov
pop
cltd
and
sbb
mov
jle
std
sbb
bound
insl
scas
mov
sub
ljmp
imul
mov
jmp
jp
ja
int3
ret
movsb
loope
add
adc
mov
std
lret
dec
call
add
lods
jg
lret
mov
push
pop
mov
and
lods
and
lea
cmpsb
xchg
call
pop
mov
out
test
jbe
sub
mov
ss
stos
xchg
hlt
movsb
pop
lret
lea
loopne
dec
add
cs
mov
xchg
stos
fistpll
dec
test
rcll
in
ja
addb
loop
rclb
inc
cld
out
and
mov
aad
pop
push
ret
xlat
mov
pop
dec
addr16
lahf
dec
cmp
lcall
add
pop
sbb
xchg
lods
inc
lahf
xchg
test
add
sbb
arpl
sbb
push
ds
vmread
nop
adc
les
arpl
xchg
out
sbb
xor
fistps
and
pop
and
call
cs
out
mov
je
cs
push
mov
loope
push
jo
les
dec
xor
sbb
lods
sbb
mov
and
ds
shrb
mov
cli
out
adc
fisttps
sbb
out
fsubrs
bound
inc
and
mov
dec
cltd
lds
ficoms
mov
sarb
sbb
inc
adc
or
fidivl
jns
pop
loopne
into
xchg
push
or
inc
fidivl
movsb
mov
icebp
push
stos
shlb
xor
dec
pop
sbb
dec
iret
sbb
inc
jmp
dec
dec
inc
daa
add
or
movl
aas
mov
data16
adc
jb
js
adc
scas
mov
hlt
aaa
xchg
pop
sahf
sub
repnz
aad
xchg
cmp
xchg
cmp
or
aas
sub
and
dec
jno
xor
ret
sbb
cmpsb
ret
popa
adc
fwait
mov
js
adc
cmp
lds
cld
and
mov
pop
push
inc
xrstor
cmp
fidivrl
push
rcrb
xor
cmp
push
outsl
cwtl
aas
into
mov
ds
mov
or
scas
mov
sub
adc
loope
out
mov
pop
ljmp
je
stos
repz
adc
xor
iret
jno
pushf
jb
mov
js
out
ss
cmp
lock
daa
xchg
or
pop
fxch
xchg
adc
cld
pop
test
in
sbb
movsb
dec
jnp
test
push
pop
or
insb
push
mov
les
inc
popf
xchg
test
push
adc
push
pop
js
enter
gs
rol
dec
push
lock
das
add
aas
scas
out
sub
sar
and
mov
in
flds
mov
ror
sub
leave
mov
cmp
icebp
or
push
adc
mov
test
inc
xor
mov
hlt
lock
pop
mov
cmp
sbb
jp
lcall
test
dec
imul
inc
ds
loop
repz
push
cwtl
pop
ret
jle
cmp
test
xor
fcmovb
js
push
into
mov
lret
iret
or
mov
idivb
dec
enter
xor
push
mov
adc
sub
jb
mov
icebp
and
add
cmpsb
inc
xchg
clc
cmp
pop
cmp
incb
cmp
out
into
bswap
ljmp
adc
pop
sbb
pop
push
push
stos
xor
int3
xchg
scas
and
xchg
ljmp
stos
sbb
test
pop
pop
adc
mov
push
sub
jno
xchg
or
jmp
adc
imul
ss
aaa
jecxz
mov
push
sarl
adc
xchg
push
inc
ss
inc
enter
aas
push
lock
fnsave
jl
xor
adc
add
clc
outsb
push
stos
in
arpl
bound
jne
dec
out
mov
jae
push
scas
sarl
aaa
ja
xchg
pop
test
mov
cmp
dec
inc
jae
cmp
std
sarb
push
xor
test
push
rorb
imul
stos
rol
cmp
ss
stos
jb
fimull
dec
jns
out
je
push
fcmovnbe
dec
ret
mov
jno
out
jo
xlat
pop
mov
xchg
mov
jo
movsl
fwait
mov
or
dec
sub
loopne
scas
mov
mov
or
mov
xchg
pop
jl
and
push
inc
stc
adc
aad
insb
dec
std
xchg
cmp
push
push
test
add
mov
or
pop
or
in
push
mov
mov
daa
loope
mov
lea
add
fmulp
xchg
dec
insb
das
js
cmp
call
adc
out
pop
push
js
add
sub
mov
or
ja
mov
sub
nop
es
or
sub
enter
push
add
mov
loop
gs
push
pop
inc
cmpsb
add
and
xor
push
add
fldl
push
aaa
xorb
dec
insl
push
lret
inc
scas
cmc
out
jle
movsl
mov
mulb
hlt
push
fnstsw
add
movsb
inc
add
sub
addr16
movsb
enter
imul
dec
dec
push
lock
fdivrs
cltd
std
ret
push
xchg
pop
push
in
add
jbe
icebp
repz
mov
jge
lret
dec
mov
dec
hlt
icebp
popa
sar
movl
imul
loopne
add
mov
cwtl
icebp
pop
jge
lods
in
mov
or
mov
add
ret
mov
shufps
mov
cmpsb
sub
hlt
jl
push
mov
test
in
push
loopne
inc
push
cmpb
pop
gs
call
mov
enter
repz
push
das
push
imul
mov
cs
or
andl
sahf
dec
cmp
inc
out
dec
xchg
mov
loope
pop
push
pop
pop
mov
adc
fwait
dec
into
xchg
jns
in
fs
mov
and
adc
xchg
fnstenv
loopne
add
inc
int3
mov
lods
mov
dec
mov
pop
loop
cmc
neg
ja
inc
in
mov
jl
test
push
pop
mov
mov
or
adc
addr16
mov
out
mov
pop
pop
sub
cltd
lods
loopne
popf
cmc
sbbl
fldt
imul
xchg
mov
dec
mov
addb
sbb
pusha
test
xchg
xchg
mov
psubusb
jbe
add
inc
in
insl
dec
std
cltd
dec
fildll
lahf
div
xor
cmpb
pop
imul
add
pop
cltd
dec
xchg
xor
je
dec
stos
add
jno
es
mov
xlat
test
ja
add
jae
scas
jns
jae
adc
jnp
decb
cld
pop
lret
lods
iret
arpl
arpl
loope
adc
cltd
mov
xlat
out
cmp
repnz
fwait
pop
push
xchg
movsb
das
dec
movsb
mov
lods
imul
outsl
or
dec
popf
mov
xor
jo
rcrl
out
add
adc
std
cltd
repz
mov
es
push
jnp
jmp
mov
mov
ret
sar
add
mov
or
mov
xchg
repz
bnd
test
fdiv
test
mov
pop
pop
inc
popa
movsl
shlb
ljmp
es
shr
xor
pop
negb
sti
xor
mov
mov
and
test
dec
pop
lods
jmp
mov
in
lahf
lcall
mov
hlt
add
mov
sbb
inc
mov
mov
fwait
jno
cmp
xchg
push
xchg
mov
mov
xor
aaa
jle
jge
fwait
mov
sub
lcall
enter
mulb
dec
cwtl
mov
repz
stos
mov
mov
int
stos
pop
mov
aad
loopne
add
inc
xchg
mov
dec
cld
inc
cs
leave
mov
xchg
mov
test
rorl
je
out
mov
loopne
cwtl
xchg
movsl
push
cld
lea
repnz
adc
cmpsb
and
into
pushf
pop
and
pop
mov
ret
pop
leave
stos
xchg
pop
and
or
fcomi
stc
xchg
mov
cmpb
and
and
pop
cli
mov
fistps
push
push
fwait
sub
fdivrs
rcll
sbb
push
pusha
mov
jle
sbb
hlt
push
adc
pop
test
in
jg
andb
mov
dec
test
rcrb
xorb
js
je
xor
aaa
stc
push
mov
dec
xor
sbb
cld
and
test
sbb
call
mov
enter
fsubl
dec
sbb
jb
xchg
push
int3
sbb
std
adc
jle
lods
cltd
or
lea
pop
mov
mov
arpl
clc
iret
or
sbb
mov
and
cmp
cmp
dec
rorl
lea
jb
int
adc
jg
addr16
mov
nop
fs
lods
lods
mov
xchg
loopne
data16
inc
mov
es
cmpsb
iret
das
sbbl
pop
out
cmp
idiv
lret
movsb
cmpsl
call
clc
sub
setb
scas
push
lcall
and
jg
in
les
push
mov
push
arpl
movsl
cwtl
jl
and
in
mov
int
subl
je
dec
pop
cmpsl
sub
icebp
sub
sbb
call
pop
inc
stos
xor
into
xchg
adc
in
ror
or
sub
xor
jg
mov
mov
stc
xchg
fiadds
lods
fs
enter
leave
lods
cld
loop
movsl
lahf
pop
out
cmp
push
add
jl
xor
lahf
cmp
fcompl
adc
mulb
cmpsl
inc
in
loop
cmp
xchg
imul
sub
je,pn
mov
mov
mov
sub
fnstcw
int3
sbb
ficoms
mov
ret
xor
or
push
cmpl
pusha
ds
or
cmp
ficomps
pop
jno
and
mov
push
ds
in
in
adc
or
testl
scas
sbb
push
out
xchg
cld
mov
loop
lds
gs
pop
cli
lret
or
dec
sti
mov
ss
in
dec
push
imul
jmp
jge
js
clc
jmp
jo
pop
in
cmp
pop
js
aam
repz
or
pop
xor
cmp
scas
out
inc
xor
dec
xor
jbe
push
mov
add
or
lds
sub
cmpsb
jge
xor
out
cmp
es
sub
ret
push
or
mov
outsb
rolb
jbe
xchg
lods
sbb
movsl
pop
icebp
mov
add
out
scas
sbb
add
testb
ret
popf
dec
add
ret
jns
xchg
stos
or
inc
push
ret
fldcw
xchg
ljmp
dec
mov
movsl
and
js
xchg
mov
adc
inc
cld
xor
loope
mov
test
xor
xchg
iret
dec
push
add
roll
dec
jno
and
push
or
dec
mov
add
icebp
jo
sub
int3
insl
jmp
push
stos
ja
fcompl
insl
xchg
adc
cmp
pusha
xchg
adc
mul
fs
in
fwait
mov
cmpsl
push
inc
sbb
sbb
sbb
sub
lea
rcl
in
ret
sub
and
push
and
daa
mov
imul
mov
insl
int
jne
inc
bound
pushf
pop
je
scas
push
loop
pmaxsw
push
lea
sbb
lret
xorl
test
mov
cld
cmp
push
in
pop
pop
pop
xor
fidivl
mov
cld
dec
call
out
adc
mov
test
add
jb
jbe
lahf
cmp
je
mov
inc
inc
fdivrl
cltd
mov
sbb
enter
dec
or
divl
jbe
mov
jge
ljmp
dec
jb
add
insl
movsb
ja
pop
pop
aad
push
pop
addr16
jp
insl
fdivl
jnp
xor
inc
cld
xchg
nop
ret
sti
mov
arpl
clc
aad
xor
pop
loop
loop
int3
or
pop
cmp
and
shl
xchg
xlat
clc
mov
inc
mov
dec
sbb
fldl
les
sahf
inc
push
or
addr16
out
js
jge
insl
mov
pop
pusha
aaa
mov
mov
subl
pop
push
or
leave
jp
lea
or
inc
mov
mov
mov
jno
pusha
cli
lds
xchg
mov
jp
sbb
rcrb
test
inc
mov
sbb
inc
add
lods
out
push
ds
or
add
push
lea
movsl
loopne
or
adc
stos
ja
hlt
movsl
adc
iret
xor
or
arpl
scas
mov
xchg
push
int
mov
daa
dec
and
mov
push
xchg
mov
ds
sbb
jp
test
adcb
js
cmp
lret
je
sbb
lock
and
out
sti
mov
ret
mov
adc
stc
or
add
and
sbb
cld
loop
aas
lods
pop
or
xchg
jg
inc
inc
lock
mov
pop
mov
sub
cmpsl
push
data16
xor
movsl
ds
aam
push
sub
fcoms
ljmp
test
mov
cmc
pop
testl
rclb
sub
mov
and
mov
xchg
inc
mov
jnp
call
repnz
lods
outsb
in
inc
dec
out
jl
dec
movsl
cmpsl
mov
nop
sti
push
dec
mov
cltd
jnp
cmpsb
idivb
nop
lods
dec
inc
testb
mov
pop
iret
stos
adc
loopne
ss
xchg
pop
xchg
std
repnz
inc
fbstp
adc
loope
testl
xchg
test
dec
mul
pushf
push
push
xor
and
dec
and
fidivs
orb
fisubs
aam
xor
dec
sbb
pop
out
clc
mov
mov
adc
mov
pop
cmp
sbb
scas
mov
test
dec
cmpsl
insb
mov
sbb
lea
aad
cmp
cmp
sbb
loope
ja
ucomiss
sbbb
gs
dec
imul
hlt
outsb
lea
mov
test
jge
popa
mov
jp
data16
nop
popf
xchg
push
cmc
push
pop
mov
or
bound
mov
scas
dec
mov
sarb
mov
stos
cmp
push
in
pop
push
jnp
call
dec
dec
cs
push
imul
and
and
cmp
xor
loop
jl
xchg
adc
in
ret
cwtl
stc
mov
test
scas
jecxz
xchg
pop
and
sbb
jo
cmp
imul
jo
cwtl
fbstp
mov
xlat
add
mov
jns
rcll
cmp
sarl
mov
mov
sbb
adc
or
xor
xor
or
xor
cmp
mov
push
loope
pop
aam
add
out
mov
xor
dec
mov
adc
sub
lret
lcall
mov
and
adc
inc
jg
push
mov
sbb
ja
mov
es
xchg
hlt
into
mov
and
clc
mul
lea
mov
rcrl
repnz
mov
push
pop
and
icebp
push
mov
mov
in
push
cmp
idivb
cmp
add
push
popl
ss
add
mov
sbb
notb
pop
sub
sub
mov
xchg
jge
int
jbe
stos
mov
jg
das
pushf
inc
loopne
clc
mov
sbb
fdivl
dec
mov
sarb
movsb
add
mov
mov
jmp
mov
shr
in
mov
in
mov
fwait
loop
lea
and
popf
cmp
fisttpll
inc
xor
inc
das
cmp
loop
xchg
xchg
mov
jle
sti
mov
add
adc
inc
push
add
cmp
pop
xchg
push
cwtl
std
add
lods
in
push
enter
movb
mov
adc
jg
cmpsl
xchg
aad
or
and
in
stc
and
xchg
jne
popa
fildl
into
sub
test
movsl
fsts
or
cmc
add
shll
dec
lea
xor
es
lods
in
xchg
xchg
mov
arpl
push
loopne
pop
sub
lea
aaa
divps
bound
test
pop
dec
mov
or
fists
outsl
inc
mov
pop
in
xlat
inc
xor
out
repz
mov
popl
sbb
loopne
and
int
cs
pop
mov
stos
or
popf
inc
test
data16
scas
decl
push
test
xor
outsb
out
sahf
add
add
mov
fdivrl
push
jno
pop
pop
inc
sbb
out
dec
and
inc
pop
mov
cmpsb
pushl
into
imul
insb
fldt
popa
hlt
int
cmpsl
pop
cwtl
mov
mov
xchg
or
insb
inc
mov
or
test
movsl
push
lds
outsb
dec
stos
sbb
and
imul
dec
push
pushf
sub
jbe
orb
loopne
outsl
ret
inc
lret
jl
dec
xor
inc
int
or
jb
repnz
jmp
std
jmp
sub
negb
push
cmp
jl
pushf
stos
dec
jmp
pop
xlat
cmpsb
mov
xor
and
outsb
insl
in
and
xchg
and
sub
jae
test
lret
cltd
stos
sub
mov
mov
lods
xchg
inc
scas
cmp
scas
jge
mov
inc
lock
sbb
and
cmp
xor
mov
fxch
test
std
fwait
std
mov
push
jmp
push
dec
cld
mov
cmc
rolb
xchg
and
jg
inc
aaa
mov
std
rol
add
outsl
jg
fnstenv
and
cmpsb
mov
lds
mov
mov
cs
cli
fidivs
xor
mov
popf
sub
lcall
orb
inc
mov
sub
mov
jl
pop
addr16
repz
lods
aam
fcompl
xchg
push
push
cmp
push
das
fidivl
fidivrs
ja
jle
jg
jle
and
push
add
mov
aas
mov
rorb
in
int
mov
dec
cmp
jo
mov
xchg
scas
stos
mov
jne
mov
ficoml
rcll
in
cmpsl
xchg
test
add
cli
hlt
lret
in
push
sbb
push
xchg
fchs
push
add
mov
pop
push
in
repnz
scas
xor
aam
cltd
sub
bound
into
sahf
cmp
or
push
mov
aas
xor
mov
mov
sbb
cmp
add
hlt
bound
call
and
adc
jns
int
add
sub
inc
mov
jp
out
or
sub
sbb
mov
frstor
inc
push
pop
fsubr
cltd
cmp
divb
aam
mov
arpl
push
fcmovu
iret
roll
jecxz
pop
ja
jae
add
mov
mov
mov
test
jg
push
jae
and
push
inc
xor
daa
fstps
push
mov
jae
sbb
inc
call
fst
adc
sbb
dec
mov
out
inc
xor
fsubrs
sbb
sbb
sub
lock
imul
fisttps
dec
sbb
cltd
scas
cltd
lock
add
cltd
sub
ss
inc
fcom
movsb
pop
pushf
gs
mov
xor
sbbl
mov
sub
pop
into
mov
jge
adc
sub
sbb
in
rolb
popf
imul
push
add
xor
inc
inc
jae
pop
sub
out
stos
jge
cmc
jp
push
and
jp
add
jo
cli
jg
cli
les
xchg
push
mov
movb
fwait
mov
subb
shrb
ret
sahf
pop
loop
add
in
repnz
sbb
mov
pushf
cmp
adc
xor
insb
cli
xor
pop
outsb
dec
mov
imul
or
add
cmp
lea
adc
fadds
arpl
adc
iret
xor
cld
aas
ja
popf
xchg
int
test
loop
das
jg
mov
out
xlat
sub
mov
pop
mov
test
cld
push
rorb
mov
int
mov
std
imul
rorb
lods
out
pand
dec
xchg
stc
sbb
aam
rcrl
push
lods
cmp
ss
icebp
test
mov
push
ucomiss
push
push
addr16
loope
data16
cli
and
aas
in
movsb
ja
scas
jle
inc
frstor
jno
ljmp
bsf
mov
mov
mov
push
pop
cmc
shrb
lods
lods
push
bound
sub
xchg
js
sub
mov
mov
xor
pop
out
shr
repz
mov
pop
cmpl
pop
ror
cs
movl
lcall
sti
sbb
loop
add
cld
inc
mov
mov
adc
inc
sub
and
movsl
cmp
repz
imul
mov
adc
gs
sub
imul
dec
pop
in
sub
lock
xchg
orb
add
push
sub
xchg
outsb
mov
aad
cltd
push
fldenv
cld
stos
dec
lcall
and
xor
in
outsb
xor
and
pop
mov
fisttpll
mov
adc
sbb
cmp
jns
lea
sub
jne
cmp
ficoms
adc
mov
jecxz
nop
subb
clc
mov
test
xchg
push
int3
sub
push
ljmp
dec
and
jae
cmp
push
sub
push
dec
frstpm(287
pusha
mov
hlt
iret
pop
jmp
inc
insl
jl
stos
add
loopne
sbb
cmp
sbb
cld
jecxz
mov
test
fimuls
cld
fldenv
mov
insb
rclb
cmc
lock
or
subb
insb
and
aad
inc
pop
xor
movsl
xchg
cmp
cwtl
repnz
and
inc
test
bound
mov
pop
int3
pop
lret
mov
inc
add
aam
sti
sub
int
add
pop
add
push
xor
inc
sub
cmp
int
mov
add
mov
sub
push
cld
xchg
sti
push
jb
jmp
out
and
mov
enter
jb
sbb
mov
xchg
out
repnz
sub
mov
ljmp
shlb
inc
or
loope
test
xchg
sbb
lahf
jae
hlt
adc
jmp
xor
cld
in
mov
testb
mov
aad
popa
sbb
push
cmc
mov
sub
mov
inc
loop
add
sbb
roll
vmwrite
clc
mov
arpl
or
push
push
adc
scas
int
add
adc
iret
sarl
pusha
hlt
xchg
arpl
sti
pop
cmp
aas
mov
test
popa
mov
into
fs
rcrb
loop
mov
scas
sub
loopne
jb
add
and
xor
rcl
icebp
fiadds
test
and
ss
sbb
daa
xchg
repnz
jg
inc
xchg
ret
js
pop
cs
popa
mov
adc
inc
out
mov
rorl
in
sbbl
jb
and
adc
xchg
pop
xor
aaa
cmc
sar
add
jg
inc
inc
or
repz
hlt
inc
pop
jecxz
int
mov
mov
leave
mov
pop
jp
jl
or
ljmp
rorb
fadds
stos
or
and
arpl
xor
sbb
xchg
jae
movsl
jae
stos
std
das
jmp
sbb
push
pushf
rcll
call
es
decb
das
sti
mov
lahf
es
jg
mov
cmpsb
xchg
jl
pushf
ss
adc
xchg
adc
aad
pop
or
mov
mov
je
pop
inc
and
fnstenv
pop
jo
cmp
ret
sbb
pop
bnd
jb
mov
shll
sbb
sbb
int
insb
xor
jne,pn
mov
jp
jnp
push
rorb
mov
fs
gs
aad
push
imul
das
in
mov
or
push
std
mov
pop
mov
stos
adc
xor
ja
mov
push
mov
pop
xorb
xlat
out
push
add
mov
or
jne
xchg
enter
mov
push
fisttps
or
ror
pop
rcrb
dec
aam
sti
rorb
mov
push
aad
in
fs
mov
fnstsw
mov
cmp
dec
inc
or
push
dec
fidivrl
int
xchg
inc
jnp
cmp
ret
loop
movsb
mov
push
insb
mov
sub
xor
incl
lods
jns
dec
pop
xchg
sub
cli
std
mov
sub
or
xchg
sub
sbb
jnp
fwait
test
in
adc
loopne
rolb
enter
pop
adc
movsl
mov
out
repnz
inc
test
data16
pushf
inc
gs
aaa
outsl
rcrb
sub
in
fwait
dec
xchg
in
sub
pusha
jne
sbb
pop
getsec
shlb
xchg
out
jbe
ds
fsubrs
leave
sub
std
cmpb
popa
mov
sbb
movsb
mov
pop
shrb
pop
cmpsb
inc
adc
call
fcmovbe
pop
dec
out
and
es
inc
int
push
lcall
adc
cltd
inc
mov
sub
nop
inc
inc
push
fstpt
cli
scas
jns
mov
daa
xor
push
jle
cmpsl
xchg
lock
push
mov
mov
dec
xor
ret
cmp
inc
push
adc
mov
hlt
arpl
stos
pop
lds
test
mov
lds
jae
cmovbe
iret
xchg
daa
mov
imul
cltd
bound
cld
mov
mov
mov
scas
mov
mov
lock
int
jecxz
aam
je
xor
int
repnz
xor
add
xor
in
jle
inc
sub
rclb
cld
sbb
out
cmp
xchg
mov
or
mov
push
push
sbb
cmp
jge
pop
xlat
push
mov
in
loop
outsb
jne
and
or
sbb
sub
xchg
in
movsl
inc
scas
ret
lods
addr16
lock
mov
ret
ds
jne
xor
ljmp
jecxz
dec
sbb
shll
outsb
jo
jno
pop
add
mov
data16
mov
lock
das
sbb
and
sti
dec
mov
sbb
add
fldcw
rcr
jmp
push
or
jno
push
inc
lds
and
icebp
cmp
scas
inc
add
pop
subb
mov
aas
jge
xchg
movsb
loopne
mov
out
aam
in
insb
push
int3
lret
js
leave
cmp
and
mov
inc
xchg
out
stc
inc
sbb
in
push
std
or
ret
jae
loop
outsb
mov
add
and
dec
mov
stos
int
popa
xchg
cld
insl
roll
loope
jecxz
loop
aam
xchg
xchg
clc
mov
and
out
in
xor
sub
inc
inc
xor
icebp
sbb
jae
or
mov
hlt
pop
rorl
xchg
adc
dec
push
push
cmp
shll
imul
in
pop
mov
aaa
pop
lods
or
mov
sbb
dec
and
push
loope
xor
in
adc
mov
mov
push
dec
rclb
insl
dec
mov
leave
mov
adc
out
addb
jne
std
mov
out
outsb
imul
aaa
les
sti
aam
or
mov
mov
mov
lods
mov
jp
ss
xchg
inc
push
pop
sbb
adc
pop
int
adc
fistps
push
dec
add
sbb
mov
lret
sub
andb
addb
inc
fadd
jbe
sbb
sub
ds
movsl
and
xchg
sbb
jmp
fldl2e
lods
jbe
sub
icebp
mov
sti
fimuls
mov
mov
push
push
push
std
arpl
test
movsb
lret
jo
js
or
aas
jl
stos
inc
hlt
push
cwtl
xchg
lcall
int3
dec
or
cmp
jb
adc
add
jg
inc
js
movsl
movsb
repnz
imul
aam
mov
xorb
cld
lods
fsubs
popf
mov
mov
and
mov
and
daa
xchg
out
icebp
rcr
push
in
das
icebp
addb
out
insl
jne
cli
mov
and
mov
cwtl
dec
testb
and
cltd
cmp
sbb
cwtl
out
fcomps
mov
adc
push
pop
pop
test
in
scas
add
out
xchg
dec
ja
adc
stos
into
dec
adc
test
insb
das
sub
mov
mov
cmp
push
inc
pop
popa
js
mov
push
mov
xor
call
rorb
xchg
xor
push
xchg
fistps
pop
pop
xor
ret
fwait
add
or
push
and
mov
outsb
inc
or
je
dec
test
mov
roll
adc
inc
fildll
inc
mov
cmp
pushf
ss
and
jo
xchg
arpl
out
sub
fisubs
xchg
dec
outsb
sub
call
sub
lahf
sbb
cmc
jle
fisttpll
dec
adc
les
xchg
push
mov
out
inc
lahf
jnp
mov
int
dec
sti
cmc
xchg
and
push
rcrl
call
js
xor
add
push
add
adc
jo
in
out
call
pop
mov
xor
out
sbb
mov
pop
xlat
fisttpll
mov
jb
iret
and
adc
sub
or
int3
outsb
xchg
mov
dec
or
cmp
faddl
mov
in
addb
mov
repz
loope
push
xchg
int
jnp
cli
push
dec
bound
hlt
dec
insb
fimull
in
xlat
sub
mov
inc
sub
clc
add
in
jo
stos
mov
cmpsl
adc
loop
lods
mov
inc
xchg
jmp
sub
pmovmskb
adc
test
cmp
adcl
leave
addr16
jns
stos
dec
fs
and
add
xchg
adc
inc
push
push
clc
and
mov
outsl
inc
inc
pop
and
in
xor
rclb
lods
or
insl
rcl
pusha
sbb
dec
fldl
pop
jo
xor
mov
push
mov
test
push
cmp
out
xor
or
and
and
jecxz
sbb
and
aad
iret
xchg
add
push
push
push
pop
addr16
out
xlat
ror
cmp
mov
adcl
jmp
and
jne
adc
vmwrite
xor
movb
lods
fstps
div
adc
aam
test
xor
inc
ret
sub
lock
cmpsb
jno
jns
ljmp
es
add
add
les
jp
sub
dec
testb
push
and
in
aas
xchg
cmc
xlat
popa
int
fstps
mov
mov
adc
xchg
dec
cmp
and
lods
mov
sar
mov
cmp
push
mov
daa
loope
fcoms
inc
dec
lret
push
inc
std
shlb
add
sbb
jns
popf
aaa
push
cmp
jns
and
ja
push
mov
movsl
jnp
pop
roll
repnz
jge
testl
mov
stos
insl
xor
fildl
dec
cmc
push
add
cltd
lahf
mov
call
into
ret
adc
fistps
mov
jnp
lock
cmc
xchg
or
fwait
loopne
mov
xchg
aas
mov
jecxz
dec
dec
lcall
mov
fbstp
push
lds
dec
arpl
push
adc
popa
inc
or
icebp
sbb
xor
push
paddd
out
aad
ja
fnstenv
mov
loop
cmp
aas
mov
push
dec
sbb
mov
inc
xchg
jecxz
shlb
ds
jge
jo
jb
rcrl
inc
sbb
xchg
inc
add
push
jns
insb
daa
mov
push
jae
xor
push
addl
jb
cli
jns
test
adc
dec
xlat
xor
in
push
mov
int3
or
stc
push
inc
sbb
mov
jl
inc
xchg
out
push
in
xchg
cmp
das
mov
xor
fmul
out
test
in
jmp
gs
xchg
dec
ret
push
mov
xchg
mov
mov
mov
jne
fs
enter
dec
push
sub
lds
xor
rcrb
jg
jnp
pop
mov
add
pop
mov
xor
pop
clc
jp
popa
xlat
fcompl
in
js
mov
add
sub
sub
pop
pop
and
pop
fs
mov
or
adc
xor
test
popf
jbe
inc
inc
xchg
sub
test
and
mov
dec
cmp
cmpsb
push
dec
xchg
data16
jmp
lods
mov
add
jp
sub
out
fwait
jl
fs
or
inc
push
sbb
jno
push
movsl
dec
test
fldl
pop
dec
add
lahf
dec
adc
cmpb
orl
xor
jbe
shlb
pop
ficomps
mov
mov
js
mov
repz
and
in
dec
ds
jae
add
xchg
mov
addl
shl
mov
movsb
mov
jns
push
out
aam
call
xchg
push
or
sbb
fstps
test
push
inc
jecxz
stos
inc
loope
cwtl
fs
jg
adc
lea
lret
std
sbb
push
or
notl
sbb
cmp
rclb
es
les
fsubr
lahf
mov
dec
push
xchg
mov
jo
xlat
add
lahf
popf
sbb
bound
adc
aam
imul
add
xchg
repnz
xor
sub
push
push
push
pop
lret
pop
stos
adc
hlt
mov
mov
stc
fdivr
mov
cmp
orl
mov
adc
mov
repnz
or
pop
xchg
xchg
shrb
mov
xchg
fimuls
or
dec
rorb
and
jnp
icebp
sbb
fs
cld
add
sarb
and
mov
gs
fisubl
mov
cltd
out
push
xchg
rorl
dec
jo
or
sbb
sbb
negl
and
popa
jecxz
push
call
xor
mov
xchg
xchg
xor
push
xchg
or
xor
mov
cmp
push
aaa
or
roll
inc
xchg
jb
shlb
push
mov
cmp
std
mov
outsb
insl
call
int
sub
xor
pop
shll
cmp
dec
daa
arpl
push
cmc
loop
les
xor
leave
dec
mov
fldl
xchg
xor
mov
or
repz
gs
add
xchg
cmp
divb
mov
pop
dec
adc
in
shll
add
jl
aad
push
ljmp
roll
dec
in
cltd
incl
pop
jmp
sub
sbb
mov
lds
cmp
repnz
cld
lea
sbb
or
push
sbb
dec
rol
jge
xlat
subb
cmpsb
mov
test
scas
mov
scas
inc
push
popf
lds
inc
inc
out
xchg
out
fwait
sbb
inc
sahf
mov
ss
push
cwtl
adc
or
lret
jmp
sti
cmp
mov
inc
iret
mov
ljmp
repnz
sbb
adc
das
cmp
cmc
out
mov
out
lcall
xchg
and
mov
insb
lret
repnz
shll
repz
push
clc
ja
jo
mov
sub
xchg
push
loope
dec
mov
aaa
mov
xchg
inc
inc
pushf
rolb
fdivp
pop
push
mov
fs
rclb
adc
addr16
jecxz
push
std
cmp
mov
cmc
xor
das
or
add
filds
sub
sbb
lahf
sub
push
fwait
push
mov
jmp
xor
mov
sub
mov
dec
sti
or
push
inc
cmp
xor
inc
pop
mov
jae
jbe
push
push
ljmp
movsl
ja
add
xchg
cmp
pop
push
cltd
cmc
sub
stos
std
dec
mov
icebp
sub
aas
mov
ljmp
scas
push
mov
xchg
jg
jecxz
jae
insl
out
pop
stos
pop
pusha
stc
xor
mov
mov
dec
or
xchg
add
lcall
add
movsl
mov
scas
pop
cmp
cmp
lods
adc
mov
cs
loop
xchg
and
inc
ss
add
xchg
or
mov
mov
mov
mov
ljmp
pushf
lods
xchg
mov
mov
hlt
and
test
xor
pop
sti
dec
dec
jge
test
cwtl
lret
mov
pop
stc
mov
push
jb
out
push
jae
js
jg
popa
inc
pop
aam
sbb
or
aaa
push
rorl
cmp
mov
les
ja
mov
push
shl
aad
push
add
jnp
jo
pop
outsb
in
jle
inc
xor
test
cmp
lds
jmp
movsb
xor
jle
pop
aas
and
fsubs
sbb
pop
loop
mov
xor
rclb
mov
jo
in
imul
sub
inc
addb
inc
push
incl
pop
mov
mov
pop
rorl
stos
cli
adc
stos
stos
adc
bnd
dec
jae
sub
fstps
and
push
fwait
sbb
jle
mov
adc
jle
loop
add
mov
mov
pop
cmp
shl
in
mov
bound
fisttpll
jo
icebp
imul
popf
aam
xchg
push
add
ljmp
inc
jg
xor
test
cmpsl
je
or
xor
arpl
mov
lods
jp
jg
aaa
and
ds
mov
xchg
xchg
add
add
xchg
cmpsl
fsubs
mov
enter
pop
sar
fwait
mov
mov
int
sub
loop
add
loopne
jl
andb
insb
inc
push
lock
ds
xlat
sahf
mov
ret
jmp
lret
das
mov
out
fcom
fldcw
dec
imul
into
add
pop
jp
test
data16
loop
loope
mov
dec
addr16
xchg
aaa
sahf
sub
into
pop
hlt
hlt
ret
aaa
fs
and
sub
dec
bound
dec
mov
sbb
inc
and
adc
cmc
push
xchg
cltd
lret
sub
cli
jo
pop
insl
adc
or
fcmove
shlb
jge
pop
clc
add
mov
mov
test
shll
add
dec
fisubrs
fwait
daa
and
je
std
cmc
iretw
stc
cli
mov
leave
scas
mov
sub
rol
and
into
mov
jg,pt
lcall
adc
pop
scas
xor
paddq
jl
or
inc
icebp
jbe
ret
fcmovnu
jmp
mov
adc
nop
outsb
mov
ret
jp
xchg
xor
pusha
fisttpll
sbb
push
inc
adc
mov
test
insb
mov
jmp
xor
movsb
pusha
push
push
out
inc
test
mov
fsubr
in
into
mov
lret
or
pop
xchg
xchg
adc
xor
out
popa
test
adc
or
push
aam
addr16
push
xchg
data16
call
das
xor
and
les
mov
imul
mov
xor
inc
stos
push
sub
mov
orb
cmp
jbe
xor
inc
xor
sbb
push
in
sarb
movsl
fmul
inc
incb
dec
xchg
pushf
push
xchg
mov
jg
sbb
dec
sbb
lret
sub
iret
pop
jge
push
cli
mov
push
dec
das
popa
mov
fwait
push
test
fwait
mov
dec
and
jecxz
add
sbb
xchg
shrl
or
in
js
mov
subb
test
aam
stos
icebp
inc
mov
out
pusha
ficompl
mov
iret
jns
int3
push
push
lcall
scas
das
aad
push
adc
out
or
sbb
fs
ja
sbb
push
leave
xchg
loope
push
mov
pshufw
lret
mov
popa
mov
jmp
cld
ss
std
mov
out
out
sub
mov
rolb
hlt
add
add
or
movsb
mov
adcb
jns
mov
sbb
mov
pop
dec
xlat
cmpsl
ds
dec
lcall
and
inc
mov
pop
add
aad
lock
inc
ret
cmp
mov
fldt
cmp
inc
jno
adc
mov
push
jp
imul
push
mov
xchg
adc
cmpsl
fsubl
sub
or
pmullw
je
bound
fsubrp
jmp
mul
inc
outsl
popf
pop
mov
fidivrl
aad
jbe
mov
hlt
mov
icebp
cmp
mov
push
add
loopne
out
add
cmp
popa
add
mov
dec
outsl
aaa
jg
or
das
mov
in
inc
inc
inc
insb
mov
test
lret
jecxz
adc
lds
sahf
xchg
subl
dec
pusha
leave
xchg
lahf
lds
adc
ret
or
inc
inc
sub
inc
cmp
in
das
out
stos
and
mov
jns
inc
addr16
adc
push
push
insl
mov
je
clc
and
cmp
and
andl
jmp
lock
adc
xchg
stos
mov
es
test
aas
and
mov
sub
lret
xor
enter
push
dec
cmpsl
sub
daa
and
cmp
adc
mov
adc
adc
test
test
xchg
cmp
sarb
hlt
and
sbb
mov
mov
or
ja
xor
jecxz
ffreep
pop
xor
ret
add
add
std
imul
xchg
iret
scas
addr16
ljmp
xor
scas
xchg
pusha
popa
xchg
ljmp
cmp
cmp
js
bound
push
cltd
test
adc
or
out
inc
xchg
fsts
loope
mov
ljmp
mov
enter
adc
mov
or
fiadds
sbb
mov
mov
out
add
aaa
test
addr16
lods
and
je
mov
push
test
repz
dec
inc
dec
mov
cwtl
cmp
xchg
lock
pop
in
xchg
and
mov
mov
cltd
enter
ja
fsubl
aad
xchg
push
imul
pop
adc
sbbl
dec
repz
fidivl
fldcw
sbb
push
mov
mov
cmp
movsb
jge
cs
lods
adc
cs
lods
jns
stc
popf
sbb
call
add
ror
vmovaps
test
pop
out
mov
shrl
push
ret
lret
and
ficompl
and
mov
fstpl
xchg
ja
fcomps
sahf
aad
mov
aad
jne
sub
lods
mov
mov
sbb
xchg
jmp
loopne
andl
int
mov
pop
test
jae
test
cmp
jns
add
ss
sti
imul
jge
xchg
jmp
loopne
aaa
dec
pop
fs
or
or
pop
xchg
in
dec
insl
jecxz
in
daa
push
es
fdivs
int3
jle
rcrl
inc
sub
push
fnstcw
xchg
data16
jge
icebp
mov
sti
loope
mov
push
mov
sbb
jge
aam
ds
jge
mov
mov
addr16
push
je
pop
in
popa
js
pop
iret
push
or
mov
dec
inc
mov
dec
lods
insl
filds
sub
loop
pop
jmp
pop
loopne
add
pop
icebp
sub
cmpsb
lea
pop
lods
fcoms
scas
ja
adc
insb
mov
xlat
xchg
sbb
into
call
mov
pop
pop
pop
cmp
dec
enter
cmc
mov
lock
stos
popa
push
fidivrl
push
adc
xchg
inc
gs
ret
test
cmpl
pop
xorb
jns
add
out
xchg
add
push
pusha
test
xor
call
fs
icebp
lods
mov
or
or
test
imul
or
sbb
loop
mov
test
mov
push
in
cmp
push
scas
mov
mov
dec
pop
push
rclb
push
test
cld
mov
lret
insl
bswap
add
cmp
inc
bound
sti
rol
int3
sub
dec
sbb
das
lock
push
and
cmc
add
xor
fsubs
jae
pop
clc
adc
out
les
jb
and
stos
sbb
push
and
push
jp
out
fistpl
daa
out
dec
and
sahf
daa
sub
mov
adc
xchg
add
sbb
push
pop
gs
cwtl
daa
push
mov
sbb
cmp
xchg
push
cmp
call
ljmp
scas
and
jecxz
dec
inc
jb
dec
jno
inc
cmpsb
fucomp
fldenv
add
ljmp
dec
sub
sub
add
in
movsb
lret
jp
adc
ljmpw
mov
cmpb
orl
shrl
sub
es
lea
lret
jle
cmp
mov
cmp
std
int3
inc
mov
sbb
aaa
sub
jecxz
adc
loope
push
mov
pop
shrl
push
mov
xchg
mov
push
div
jecxz
mov
mov
daa
sub
mov
or
mov
das
lret
pop
repnz
mov
mov
stos
out
aaa
mov
cmpb
ret
sbb
jmp
lcall
jnp
out
xchg
hlt
mov
jo
test
mov
and
addr16
loop
out
xor
sbb
adc
adc
dec
ret
decb
mov
push
push
cmp
push
push
std
out
xchg
call
ds
repnz
sti
adc
sahf
fcomps
dec
adc
imul
cvtps2pd
sbb
movsb
jg
pop
pop
pop
arpl
pop
inc
jg
stos
addl
cmpl
shlb
rcl
xchg
idivb
cmp
fwait
clc
rclb
stc
fcoms
stc
out
jae
test
sbb
outsl
or
out
pop
mov
vandps
jb
push
nop
hlt
sub
xchg
fisttpl
xor
addb
pop
mov
insl
push
dec
jle
iret
mov
push
xchg
sbb
or
popf
cld
lds
jne
add
fmuls
dec
std
movsb
rolb
dec
mov
icebp
adcb
inc
jecxz
cmp
cmp
rcll
mov
hlt
or
in
rorl
adcl
fsubs
mov
mov
mov
mov
sbb
sbb
push
xor
outsl
jb
and
es
je
bound
shrb
hlt
test
mov
ficoms
add
daa
lds
adc
aaa
sub
or
push
shr
and
cmp
mov
in
pop
pop
push
mov
pop
dec
arpl
loope
jecxz
mov
in
fmuls
inc
or
add
test
xor
shrb
dec
stos
icebp
arpl
shll
jo
sbb
mov
leave
js
test
aad
mov
sub
out
dec
sarl
mov
arpl
iret
add
jge
mov
dec
jnp
ja
scas
and
inc
loop
ljmp
dec
fwait
and
loope
jns
mov
cmc
adcl
cs
dec
sbb
pop
inc
mov
mov
add
adc
adc
icebp
ds
or
mov
das
pop
shrb
and
cmp
lds
nop
les
insb
nop
push
es
xchg
push
outsb
leave
orb
lret
inc
or
shlb
int
push
repnz
ljmp
add
aam
lock
mov
sbbl
movsl
cmp
js
pop
ja
into
or
into
ljmp
dec
rorb
push
inc
sbb
dec
scas
pop
movl
lret
fstpl
pop
sti
push
dec
or
movb
pushf
push
cmc
fbld
out
fcmovne
push
push
sbb
repz
lahf
sub
sar
negl
pushf
test
in
scas
leave
adc
lahf
arpl
xor
cmp
cmp
stos
jb
data16
rcll
cmp
jno
sbb
ss
xor
fcoml
xchg
fmull
aad
aas
scas
aad
pop
add
andl
jle
mov
add
push
in
outsl
inc
jnp
adc
dec
jecxz
aaa
fildll
dec
fdiv
mov
cmp
mov
xchg
int3
sbb
jmp
jmp
ljmp
mov
fsub
adc
in
outsb
jmp
sub
jecxz
dec
inc
adc
adc
testb
dec
jne
cltd
out
sbb
aas
scas
in
cmpsb
loope
imul
int3
jbe
lret
mov
jns
sbb
or
or
push
mov
mull
jbe
pop
out
flds
or
inc
movsb
int
rorb
sbb
mov
lahf
mov
pop
cmp
cmpsl
mov
fistl
lock
xor
cmp
or
rol
jns
jl
insb
or
add
mov
jg
popf
idivl
je
orb
sbb
mov
xchg
inc
mov
mov
sahf
lods
dec
cmpsl
xor
push
out
jmp
pusha
lahf
and
ss
test
inc
cwtl
ret
lcall
sbb
jg
scas
push
lods
jle
cmc
lea
js
cmp
movsl
std
cld
jp
lcall
frstor
mov
adc
out
cmc
mov
adc
cmp
je
aam
out
je
add
jecxz
mov
adc
scas
cmp
jg
test
rcrb
sti
and
out
clc
mov
and
jl
push
inc
ljmp
cli
cmp
int3
out
add
xor
mov
or
sbb
or
lds
push
shll
stos
sbb
test
fscale
cmp
push
outsl
insw
cmpsl
enter
mov
mov
scas
aaa
lret
pop
test
cmpl
stos
cmpsl
scas
push
ret
call
aaa
push
xchg
xchg
pop
std
xor
or
in
loope
mov
pop
imul
popa
icebp
lds
out
das
xlat
jae
lods
inc
pop
fisubl
lret
sbb
cmp
cli
xor
mov
add
test
arpl
push
bswap
cwtl
loopne
inc
xor
js
mov
mov
sub
add
out
cltd
mov
push
or
insl
push
cld
rcl
mov
cmpsl
repz
inc
repz
arpl
in
push
add
lcall
and
mov
clc
pop
out
cmpsl
imul
sbb
mov
mov
fdivl
push
xchg
xchg
sarb
movsb
cs
pop
jno
mov
inc
fdivl
sub
adcb
cmp
rorl
ja
lods
dec
stos
xchg
incl
mull
scas
dec
ret
lods
ljmp
jecxz
dec
dec
mov
add
ds
jnp
hlt
cmp
or
addb
xor
dec
sar
cmp
cwtl
mul
stos
sahf
pop
lahf
adc
lahf
out
mov
test
addb
push
loopne
add
inc
add
aas
inc
mov
aaa
mov
xor
nop
shr
mov
add
icebp
pop
push
push
sbb
jle
mov
out
outsl
or
pop
icebp
push
jecxz
ffreep
orl
mov
xchg
repnz
mov
out
mov
std
fisttpll
mov
test
cmp
push
imul
jne
sarl
dec
or
sub
jnp
imul
ds
dec
mov
push
ljmp
das
inc
mov
sbbl
popa
aaa
mov
cmpsl
nop
aad
sub
adc
dec
lcall
iret
outsl
pop
cmp
mov
stc
xor
add
cltd
stc
pop
sbb
jmp
mov
ffree
lcall
lods
mov
adc
hlt
fdivl
adc
xchg
repnz
cmp
sti
pop
stos
lods
aas
fwait
movsl
loop
aam
cmp
cmp
xor
shll
inc
pop
lahf
pop
aaa
loope
pop
sti
je
rclb
sub
mov
loop
sbb
mov
icebp
stos
mov
xor
mov
dec
jae
mov
mov
outsl
scas
lret
ja
cmp
nop
lds
jae
or
or
icebp
dec
pop
js
and
adc
fcoms
outsl
lret
addr16
xchg
mov
jecxz
orl
push
sub
jne
cmp
ret
std
arpl
dec
xchg
imull
stos
daa
into
out
xor
pop
cmp
push
push
jecxz
inc
out
add
sbb
inc
data16
or
and
adc
mov
push
sub
jnp
add
cmp
sub
sub
std
push
bsf
movsb
mov
mov
xlat
cmpsl
fsubr
sub
fs
xchg
dec
cmpsb
inc
push
push
mov
aam
les
in
xchg
jge
out
sub
lret
rcrb
and
mov
out
xchg
adc
aad
leave
cwtl
fwait
and
push
mov
jl
leave
jnp
les
or
sub
or
fimull
xor
iret
int3
bound
sub
rorl
stc
cmp
inc
push
sbb
das
mov
pop
insl
push
fstps
add
cmp
mov
sub
or
mov
jge
inc
cmc
insl
cmp
pushf
push
inc
int
jae
mov
and
inc
sub
fwait
orl
imul
bound
dec
mov
xchg
subl
mov
pusha
adc
popa
divl
xchg
addr16
mov
repnz
ja
cmp
std
out
pop
mov
fcmovnb
adc
je
outsb
pusha
rolb
das
cltd
sub
pusha
mov
push
daa
dec
mov
rorb
fs
add
arpl
data16
mov
inc
mov
test
lods
loope
push
popl
loope
xor
ds
xchg
out
dec
xchg
mov
pop
test
divl
jle
cmp
aas
xchg
mov
jns
jns
clc
cmpsb
xor
or
mov
sbb
jne
scas
jno
cmp
and
test
mov
sbb
movsb
inc
rcrb
dec
or
adc
mov
cmpsl
aaa
popf
or
test
and
out
fcomp
or
movsb
insb
ja
aaa
adc
cld
add
icebp
mov
dec
lock
mov
cltd
xor
gs
lret
sub
or
cmp
stos
ss
pop
sub
xor
imul
push
adc
mov
mov
mov
ret
mov
inc
or
xor
mov
dec
lret
sti
adc
push
jp
daa
xchg
dec
out
popf
xor
aaa
cmp
sub
cmp
fnstcw
int3
inc
jae
cmp
mov
dec
sbb
cmp
fnsave
inc
or
test
and
std
and
in
daa
adc
testb
xor
lcall
xchg
icebp
sarl
mov
and
jne
xchg
and
pop
mov
arpl
loope
and
mov
push
imull
mov
xor
insl
leave
bound
rorl
call
insb
or
inc
test
inc
int
call
popa
ds
adc
mov
iret
xchg
push
pusha
inc
push
xchg
pop
xor
into
xor
mov
push
sbb
pop
clc
cmp
mov
mov
sbbl
das
popf
xor
cmp
dec
stc
les
push
call
jns
out
push
scas
or
jecxz
xchg
or
int
lods
inc
mov
pop
rcrb
shlb
xor
fidivrl
mov
mov
adc
jg
jo
mov
and
xor
xor
sbb
jmp
pop
jne
enter
fucom
dec
jge
rorl
ret
sub
js
cmpsl
cld
sub
repnz
stc
adc
insb
scas
ja
movsl
xor
es
dec
lcall
cmp
push
and
sub
imul
xor
cmc
sub
cli
sbb
push
adc
sub
inc
scas
mov
jecxz
lea
mov
testb
movsl
sahf
xor
jnp
scas
or
jecxz
adcb
int
add
jne
mov
aad
shlb
mov
jl
repz
add
cmp
pop
arpl
lcall
bound
loopne
mov
loop
mov
sbb
leave
cwtl
xchg
sbb
imul
inc
sub
inc
rcrb
cs
rcrl
das
mov
jl
inc
xor
test
lods
pop
fcoml
cmp
in
sbb
fwait
mov
jne
xchg
jecxz
inc
sub
fistpl
outsl
xchg
and
data16
or
xchg
pop
lods
insb
mov
andb
enter
popa
and
scas
pop
pop
ss
pop
sbb
adc
mov
ret
fidivl
pop
leave
leave
cmp
dec
inc
fimuls
bound
pop
hlt
stc
fldl
mov
jne
shlb
jp
bound
mov
loop
stos
js
xchg
addb
xor
imul
into
aaa
pop
push
push
jbe
adc
dec
fldt
mov
ret
sbbb
cmpsl
jnp
xchg
dec
insb
pop
and
out
push
movsl
loope
cmp
mov
lods
mov
sbb
mov
ret
jmp
dec
xchg
out
pop
or
and
cmp
aas
daa
pop
push
in
lods
bound
ficomps
mov
adc
pop
add
adc
sub
push
cltd
cmpsb
adc
sahf
daa
popa
insb
or
cmp
dec
mov
dec
sub
xchg
lret
sbb
jo
inc
xor
pop
pop
ror
inc
imul
fldcw
roll
add
ljmp
push
push
sub
xchg
cmpsb
xchg
call
adc
adc
or
mov
sbb
add
jmp
insl
sbb
stos
and
aam
dec
xchg
gs
jmp
push
pushl
lea
mov
mov
cltd
mov
mov
adc
pop
xor
inc
push
push
adc
outsl
jae
stc
arpl
mov
ss
xchg
pushf
jmp
in
xchg
inc
mov
test
dec
out
adc
jne
fcoms
or
dec
sbb
leave
cmpsl
sbb
xor
pop
mov
ja
xor
pushf
out
jecxz
xchg
inc
loope
testl
out
inc
stc
imul
aaa
pop
mov
sbb
xchg
out
das
mov
sbb
cmc
test
imul
dec
leave
imul
dec
xchg
push
add
das
sub
fists
pop
or
and
outsb
insb
mov
sub
movsb
scas
xor
fprem
cmp
rcrb
insl
jbe
outsb
addr16
jge
push
test
outsb
sub
inc
ds
mov
dec
mov
and
cmp
stos
and
imul
faddl
fs
mov
xor
arpl
jns
ficompl
fcompl
push
cmp
aam
jne
imul
push
sub
xchg
mov
cli
sbb
adc
cmp
outsl
jnp
mov
rolb
inc
test
mov
push
xlat
xor
out
fsubrs
push
xor
adc
fwait
dec
adc
addb
insb
adc
or
leave
sbb
or
push
aam
push
and
jno
sti
sub
sub
jmp
int
or
cld
mov
sbb
sti
ss
in
out
mov
lahf
or
fadds
ss
popf
or
jle
mov
stc
or
div
insb
clc
fstl
pop
sbb
or
repz
sbb
mov
std
mov
xor
mov
test
mov
push
mov
jecxz
popf
or
xchg
andb
mov
lods
scas
dec
ret
mov
lahf
stos
cltd
std
in
pop
cmp
pop
pop
xor
jp
loop
xchg
pop
push
adcb
mov
pop
lcall
nop
sub
inc
dec
ljmp
xor
dec
stc
xor
xor
dec
lock
add
bound
dec
mov
into
cltd
mov
mov
lret
leave
push
push
movsb
cmpsl
push
in
out
lcall
cmp
sti
sbb
push
pusha
xchg
cld
pop
jg
daa
jb
xor
sbb
jge
addr16
jmp
pop
dec
clc
ds
dec
add
leave
inc
sub
mov
mov
mov
test
pop
inc
lahf
call
fisubs
sub
les
std
sbb
arpl
xor
cmp
mov
lock
nop
xchg
rcr
inc
fs
outsb
cwtl
push
push
add
and
test
mov
mov
mov
and
pop
or
pop
mov
fs
dec
aas
pusha
jg
pop
aaa
addr16
cmpsb
pop
je
push
jl
int3
cmpsl
aad
and
jns
xlat
cmpsl
xor
sbb
jnp
pop
push
xchg
into
add
fistps
enter
les
pop
jns
pop
jg
cltd
xor
pop
call
shll
loopne
jle
adc
lret
or
icebp
ss
loope
inc
pop
ljmp
outsl
lds
mov
stos
mov
jmp
out
mov
and
cmp
rep
mov
ljmp
pop
sbbb
jb
loope
pop
loope
cs
push
cmp
mov
xor
popf
cld
push
insb
int3
into
pusha
es
and
and
shrb
sarl
mov
imul
mov
mov
dec
xlat
js
pop
fcmovne
sbb
movsl
mov
loopne
or
movl
mov
push
insb
adc
or
std
xchg
fidivrs
sub
fsts
lcall
int3
jo
cld
fcomi
in
push
mov
sub
xor
inc
lea
sub
lahf
cwtl
imul
inc
scas
cmpsb
mov
leave
pop
faddp
sub
fcoml
ljmp
pop
popf
inc
stos
xlat
int
xchg
jl
jo
movsl
loope
cmp
push
jg
sub
cmc
int3
or
sbbl
in
push
dec
and
cld
nop
les
jae
arpl
test
mov
pusha
push
sti
xchg
mov
and
clc
dec
mov
pop
inc
mov
inc
dec
imul
out
fwait
xor
outsl
shlb
and
es
icebp
mov
insl
xchg
or
push
jb
mov
mov
out
ss
mov
adc
mov
gs
inc
test
and
inc
dec
ficoms
mov
xor
movsl
enter
int3
adc
mov
mov
cmp
hlt
adc
arpl
pop
in
mov
ja
out
xor
xor
sbb
jle
mov
adc
in
pushf
pushf
jno
daa
out
adc
fcmovnu
leave
stc
test
in
aad
push
push
mov
sarb
sub
pusha
mov
and
cmc
xchg
sbbl
into
sub
cmc
pop
fs
jmp
dec
cmp
pusha
jns
add
jg
cmpsl
shll
ror
fistpll
fisubs
mov
nop
xor
dec
loop
jl
insb
inc
cmp
icebp
shrb
push
mov
mov
xor
adc
fcomip
fidivrl
sbb
jns
imul
mov
inc
sbb
add
inc
dec
movsb
mov
mov
xor
fs
or
imul
jp
pusha
xor
ja
ss
mov
sub
dec
test
fsubp
loop
dec
dec
push
add
icebp
mov
mov
bnd
test
lret
jle
or
pop
cmp
push
rcll
or
loop
gs
sarb
lahf
and
sub
mov
ss
jp
add
cmp
out
inc
aas
out
cmpsl
push
lea
add
lods
in
data16
mov
popf
daa
and
std
push
daa
test
std
ljmp
popf
cmp
xor
sbb
scas
mov
jge
pop
xchg
xchg
push
out
jg
xor
shlb
test
jbe
mov
dec
adc
dec
fsts
in
mov
sahf
mov
test
fstpl
xor
pop
push
gs
notl
mov
mov
pushf
stc
lret
daa
hlt
cmp
xchg
jnp
pop
dec
pop
jne
test
fisubrs
rclb
notb
lock
nop
ret
jle
repz
sub
pop
or
jmp
sbb
mov
cmp
xor
mov
dec
jne
dec
mov
sub
mov
rcrb
fldt
or
xchg
cmpsl
lahf
ja
loope
in
mov
dec
mov
aam
cmp
inc
xor
sti
cmpsl
or
fcomip
fisttpll
jbe
dec
sub
movsb
cltd
and
pop
roll
xchg
fsubrs
test
mov
cmp
push
cmp
shl
imul
jg
repnz
cmp
out
ds
daa
push
push
scas
cltd
xchg
insb
stc
scas
into
orb
movsb
fcmove
push
das
sbb
insl
and
mov
movsb
mov
adc
xor
and
fadds
arpl
and
outsb
dec
lea
cmp
into
sub
xchg
movsl
lods
in
mov
out
repnz
mov
jb
out
add
pushl
adc
cmp
loopne
insb
test
cmpsl
les
and
movsb
sahf
mov
jno
repnz
pop
shlb
fldt
loope
xchg
push
jnp
mov
lahf
insl
xor
addb
dec
xchg
ret
xlat
out
push
sub
out
movzbl
outsl
test
orb
lock
jl
cmc
imul
pop
push
aam
inc
lods
aas
xchg
out
mov
add
sub
bound
movsb
setg
sub
inc
call
out
xchg
movsb
loopne
cs
pop
aad
test
pop
adc
add
xchg
outsb
mov
sbb
out
lret
jecxz
into
das
mov
xor
lret
subl
push
xchg
insb
jno
cmp
pop
subb
lods
and
je
daa
mov
mov
cmp
xlat
adc
cli
add
ss
imul
mov
jge
or
push
sbb
inc
negl
mov
dec
pop
add
jl
jns
cmp
lret
scas
and
clc
mov
push
lods
outsb
ss
add
shll
pop
mov
movsl
adc
sbb
je
scas
cmpsb
inc
mov
int3
dec
out
inc
jae
mov
fldenv
xor
fstps
adc
jo
std
andl
int3
int3
pusha
xchg
mov
andb
cmp
jbe
mov
mov
andb
cmp
xor
js
fwait
jo
test
dec
imul
push
push
sub
push
cmpsb
sbb
push
sub
clc
push
lods
or
daa
xor
mov
mov
popl
sub
dec
movsl
cmp
push
xchg
push
sahf
mov
in
jne
push
lret
or
push
in
cmp
leave
jle
or
in
xor
loop
dec
cmpsl
xchg
xchg
fldl
cmpsl
mov
fs
jmp
scas
mov
popf
cmpsl
inc
and
add
pop
gs
sub
fdivl
and
inc
aam
andnps
movsb
enter
mov
mov
in
jae
jae
sti
aaa
leave
or
and
xchg
push
aas
daa
and
repz
stos
mov
xor
addr16
push
lods
int
cmp
jle
in
pop
das
imul
mov
sbb
inc
sbb
adc
jle
stos
push
add
jne
sbb
and
outsb
dec
mov
std
jl
mov
lods
addr16
push
bound
jbe
sbb
pushf
scas
mov
sbb
mov
shll
bound
and
jbe
fildll
lmsw
dec
or
gs
mov
pusha
popa
push
mov
jge
mov
in
mov
push
jg
enter
sub
test
push
lcall
sub
ret
lea
dec
pop
mov
pop
xor
ss
mov
xchg
pop
into
jmp
mov
cmp
fs
dec
mov
mov
adc
cmp
add
out
and
mov
imul
mov
pop
aaa
orb
or
gs
arpl
test
daa
cmpsl
test
adc
adc
jb
lods
sub
xor
out
mov
sub
adc
jmp
dec
mov
leave
mov
lds
cmp
cmp
push
cmp
jns
sub
and
lds
sbb
mov
cmp
jnp
fstl
and
mov
xchg
lods
popa
jl
aas
jno
cli
inc
or
dec
jbe
mov
add
imul
insl
lret
lods
pusha
lea
sub
test
push
std
dec
or
sbb
aad
cmp
mov
lods
mov
cld
mov
add
pop
in
movsb
xchg
xchg
mov
insb
imul
pop
inc
aaa
inc
out
push
out
push
fwait
sub
adc
pop
idivl
pop
cld
int3
push
mov
or
lret
mov
mov
inc
xchg
pop
push
shll
push
sub
add
add
xor
loopne
iret
test
sbb
pop
test
sub
test
test
push
lret
sbb
push
fdivp
cmp
mov
dec
fildl
cmp
icebp
sub
lock
cmp
sti
mov
mov
call
add
push
mov
mov
cmp
aaa
rcr
mov
jecxz
mov
sbb
mov
scas
push
fmuls
inc
int3
xchg
jae
test
cmp
mov
or
mov
rol
mov
stos
jno
and
mov
or
xor
and
imulb
add
popa
jmp
es
repnz
test
ror
lret
jp
mov
lret
sub
adc
mov
xorb
cwtl
adc
adc
and
aam
movsl
mov
mov
mov
sahf
ret
pop
inc
in
inc
and
mov
pushl
and
fistpll
xchg
loope
xlat
add
jbe
push
pop
lods
iret
mov
jecxz
inc
clc
fwait
dec
xor
gs
lock
pop
scas
testb
push
inc
mov
cmp
cmp
fiaddl
jns
scas
and
cltd
push
add
sti
cmp
mov
cli
jg
push
pop
shl
cmp
insl
enter
and
fmuls
cmpsl
jecxz
xor
sub
inc
or
divb
mov
stos
into
mov
orb
ficomps
das
push
and
cwtl
pop
mov
les
lods
jp
jno
pop
cs
and
push
and
orb
mov
or
adc
rcrl
jmp
cmc
outsb
aaa
mov
xchg
add
inc
jbe
inc
mov
xchg
pcmpgtw
inc
adc
negl
cs
insl
and
loopw
shll
adc
or
lods
shl
or
inc
xchg
jno
in
clc
scas
test
mov
jecxz
out
sti
hlt
fs
sbb
in
jne
xchg
mov
inc
imull
mov
sarl
jno
repnz
rcrb
jge
rorb
fs
adc
pmaxub
test
in
sub
cs
cmp
jecxz
add
in
ds
cmp
aad
repz
stc
mov
and
push
add
mov
and
imulb
shl
cmp
lret
mov
andb
or
js
clc
fcomps
jo
cltd
mov
shrl
les
out
or
aad
leave
sarl
dec
loop
movsl
mov
rcl
mov
xor
call
mov
adc
loope
call
mov
lock
jns
imull
out
into
inc
sub
push
pop
sub
imul
out
lea
repz
push
cmp
imul
mov
gs
pop
sti
xchg
repnz
jae
insl
jecxz
ljmp
push
add
fdivp
popa
ret
negb
or
xchg
repz
clc
aad
call
jno
mov
sub
dec
push
sub
jbe
mov
jbe
cs
cmp
fcoms
push
and
jmp
and
cmp
add
sub
jl
mov
movsl
inc
cmp
popa
scas
adc
and
mov
pop
add
rcrl
dec
and
in
scas
rcrl
xchg
add
jo
call
mov
hlt
pop
or
xchg
jmp
fmuls
mov
cld
data16
or
cmp
cmpsl
fwait
jge
pushf
addr16
mov
xlat
adc
push
fwait
xor
pop
clc
pop
aad
jmp
or
push
inc
push
cmpl
mov
cmp
xchg
sbb
fbstp
lods
add
pop
loopne
cmc
scas
popa
fldcw
das
mov
or
in
sub
enter
fldcw
mov
icebp
push
and
and
push
dec
stos
sub
out
idiv
aad
add
pop
xor
or
cmpsb
test
sbb
movsl
stos
sub
dec
or
inc
or
orl
loope
pop
xor
and
mov
mov
mov
orl
cmp
in
test
cmp
adc
sahf
inc
mov
scas
int3
test
adc
dec
cmp
adc
ficoms
loopne
jecxz
imul
xchg
loopne
inc
xchg
sahf
mov
jge
lds
pop
std
call
or
dec
cmc
testl
push
jle
lahf
push
push
jl
js
cmp
mov
jl
fs
ret
dec
mov
icebp
sbb
aas
cmovno
dec
or
aas
mov
imul
stos
das
sub
pusha
shlb
mov
outsb
dec
test
shrb
ss
std
pop
lret
jne
pop
jecxz
xlat
popf
js
in
bnd
cmc
std
in
cld
lcall
imul
adc
adc
sbb
or
bsr
xchg
lahf
mov
add
cmp
lret
and
shl
in
pop
lcall
test
ret
imul
fs
pop
pop
mov
lods
fwait
add
xchg
icebp
cmp
cmpsb
pop
sbb
pop
push
push
inc
pop
cmpl
push
xor
dec
xor
pusha
mov
xchg
mov
addl
dec
popf
pop
arpl
jge
pop
jmp
outsl
or
sub
xor
pop
pop
mov
shrb
or
in
inc
and
cmpsb
mov
xchg
sbb
int
sar
pushf
fs
jbe
aas
push
adcl
fsubrs
inc
dec
cld
cmpsl
or
scas
dec
sbb
cld
fldt
fcmovbe
mov
jnp
xchg
inc
ret
push
sub
xor
push
sub
scas
incb
aad
popl
dec
loopne
pop
ficompl
repz
sub
mov
fnstenv
pusha
nop
pop
inc
push
xor
in
hlt
adc
leave
nop
xchg
adc
ret
dec
je
aas
jbe
xchg
fcom
push
rorl
inc
xorl
addr16
pop
mov
ret
cmp
inc
enter
jae
int
add
das
jne
fsub
repnz
popa
rolb
dec
mov
lret
das
pop
adc
pusha
adc
arpl
int
gs
mov
in
in
dec
cld
inc
mov
or
xor
jg
shr
das
bswap
pop
pop
xchg
push
shrb
xchg
fstpl
cld
and
test
scas
xchg
stos
flds
fdivrp
mov
enter
cmp
cmp
pusha
movsb
gs
fmuls
add
jmp
cltd
lds
xchg
adc
loopne
shr
aad
jp
jno
pop
mov
push
test
xchg
dec
mov
bound
cmp
adc
xor
push
out
xchg
ds
out
je
lret
pushf
or
mov
jnp
sti
jnp
popa
mov
aam
cmc
shlb
fnstsw
adc
and
sub
adc
pop
lret
inc
fidivl
add
fnstcw
jg
les
mov
movsw
test
lds
mov
dec
or
cmc
pop
movsl
sahf
rorl
lahf
outsb
sbb
fdivrl
sub
repnz
pop
xlat
pop
movsb
inc
test
lahf
adc
jb
pop
movsb
lea
test
xchg
mov
push
faddl
xchg
mov
notb
xorb
fildll
mov
out
sti
or
incb
into
xchg
adc
xchg
xor
ljmp
fstp
lret
addr16
and
int3
lret
fistps
dec
cmp
ds
pop
xchg
sbb
push
push
xor
jno
stc
add
test
cld
inc
ljmp
mov
and
adc
stos
jne
dec
dec
movsl
adc
mov
jle
push
mov
sub
add
push
jp
lods
and
sbb
int3
sub
mov
stos
fldenv
sub
push
loope
les
sbb
aaa
ret
inc
rcll
out
xor
in
mov
scas
cs
jne
aam
sbb
mov
aas
cmp
and
or
xor
xor
inc
xchg
mov
clc
inc
scas
cmpsb
pop
xchg
jg
negl
fldt
and
mov
cmp
cmp
push
add
adc
jbe
test
cmp
mov
add
add
mov
xor
push
movsl
aas
or
fsubrl
call
or
inc
hlt
cmc
or
in
jns
ja
sbb
xchg
scas
push
adc
push
jle
imul
lcall
fcmovnb
xchg
andl
icebp
xor
jbe
inc
xchg
xchg
fstpl
addb
and
pop
out
adc
mov
lret
mov
or
roll
mov
addr16
jae
shlb
dec
popa
jmp
dec
or
pop
fiadds
ja
mov
add
adc
dec
xor
jmp
sarb
call
mov
cmpsb
jecxz
ret
or
lcall
xor
popf
test
mov
adc
repz
lret
sub
sbb
cmp
popa
xor
inc
mov
adcl
dec
and
mov
xchg
and
pushl
or
xor
jmp
popa
in
inc
dec
jecxz
in
ficoml
push
or
xor
and
cmp
or
aas
test
dec
cmp
mov
mov
out
pop
sbb
test
and
bound
insl
fnstenv
xlat
sub
sub
rcrl
ss
mov
test
fstps
pop
mov
xchg
inc
inc
xchg
mov
mov
pop
pop
imul
loop
repz
push
lret
cmpsl
inc
out
cmp
out
aaa
xor
pop
mov
sub
psrad
in
push
dec
hlt
inc
daa
xorb
xor
push
and
aam
shlb
jg
sub
dec
and
push
insl
in
fdivl
pop
jecxz
adc
mov
mov
hlt
jno
pushf
and
lret
fdivl
out
adc
dec
mov
mov
pop
outsb
cmc
pop
or
cmc
pop
sub
and
mov
out
bound
cltd
adc
test
gs
xchg
lret
mov
repnz
imul
out
inc
js
push
lds
mov
jns
incb
movl
add
addr16
cmp
jns
gs
loope
nop
push
cmp
ret
clc
imul
pop
sahf
lcall
and
cmp
aam
ss
mov
add
outsb
adc
scas
xor
and
adc
sbb
out
out
lahf
aaa
cmc
and
enter
repnz
push
repnz
lcall
dec
fwait
adc
or
insl
or
aaa
mov
inc
pop
mov
or
lea
stos
fistpl
cmp
arpl
lds
in
or
sub
adcb
cwtl
pinsrw
inc
mov
jecxz
sub
ds
stos
insl
ficoms
mov
cmp
mov
lret
shll
cld
test
aad
push
jns
fstpl
mov
push
shrb
sahf
sub
fmull
ja
mov
xor
dec
mov
rcrl
or
ror
adc
sti
mov
dec
mov
daa
mov
inc
sti
sti
inc
sti
inc
lret
scas
shll
pop
mov
jle
push
mov
jo
add
jae
out
xchg
aad
sbb
in
in
loopne
ss
idivl
ret
arpl
fistps
or
sub
clc
fwait
test
mov
addl
pusha
push
lret
mov
fistpll
sub
int
xor
orl
aaa
mov
xor
mov
xor
ja
lock
lods
sub
in
mov
shlb
aas
shrb
iret
mov
adc
pushf
lods
in
lds
mov
cmp
rcl
xchg
pushf
pop
cmp
imul
xor
push
mov
jo
in
pop
pop
fs
lods
mov
aaa
and
sub
mov
fstpt
cmc
jno
repz
shll
incl
aas
fdivs
jno
outsl
sub
jmp
or
jp
or
into
lods
cltd
or
sbb
out
rclb
fists
adc
mov
lret
outsb
int3
dec
xor
push
inc
mov
and
gs
sub
out
jg
adc
shrb
popa
sub
push
out
mov
std
jne
sbb
or
arpl
push
test
jle
iret
sub
insl
outsl
mov
enter
stos
clc
cmp
mov
jno
adc
adc
or
test
popa
fmuls
rolb
jle
rcrl
dec
xchg
repz
imul
test
mov
and
repnz
or
cmpsb
fnsave
mov
int3
in
jnp
ds
mov
ljmp
sarl
fsubrl
xchg
mov
cmp
mov
daa
mov
cmc
cltd
pop
arpl
cld
or
sti
lcall
imul
and
movsb
sti
cs
gs
outsl
out
cs
stos
push
xor
cmpsl
pop
xor
and
push
jo
mov
cmp
adc
rep
out
clc
xor
jno
aaa
dec
and
xchg
push
int
jnp
fucomp
dec
mov
aaa
lods
pushw
fucomp
ja
inc
push
scas
call
push
and
scas
adcb
negb
in
xlat
push
mov
inc
in
lock
into
xchg
rolb
mov
test
sbb
sub
pop
add
xlat
xchg
fnsave
loop
sub
push
out
push
fcmovne
out
pop
pop
xlat
mov
addr16
lret
sti
adc
add
jo
lods
push
imul
mov
ret
lret
dec
inc
dec
stos
and
or
shlb
jmp
sbbl
hlt
push
xchg
adcb
scas
dec
roll
lret
cmpb
icebp
add
dec
enter
dec
push
pushf
jp
mov
push
or
adc
mov
mov
lahf
adc
sbb
sbb
cli
test
inc
dec
dec
jge
or
cwtl
and
jb
pop
mov
and
lahf
mov
pop
dec
push
ss
call
xor
stos
inc
pushf
mov
add
add
pop
jno
in
mov
pushf
nop
xor
mov
cli
sbb
pop
xor
es
into
xor
loopne
xchg
scas
je
dec
mov
pop
test
sbb
fdivs
sbb
or
mov
dec
movsl
aaa
dec
mov
sbb
movsl
inc
cmpsb
inc
insb
jb
ret
dec
mov
adc
repnz
cs
mov
jmp
daa
push
xchg
out
sar
test
ljmp
mov
add
lcall
or
jno
cmp
lret
mov
jle
in
in
rclb
fbstp
aad
xor
lods
xor
xor
push
sarb
lods
mov
rclb
fistpll
sahf
mov
scas
sub
pop
pop
xor
mov
adc
and
push
lea
sbb
or
jecxz
fildl
pusha
aaa
mov
cltd
jp
sbb
pop
mov
or
xchg
xchg
push
lods
xorb
lcall
dec
lods
mov
stos
outsb
cmp
aas
xchg
gs
inc
xchg
ja
ljmp
or
mov
lret
lods
sub
je
incl
stc
nop
mov
mov
jp
jnp
int3
lret
mov
pop
enter
dec
sbb
sub
inc
add
inc
dec
enter
sbb
adc
outsl
dec
add
sbb
sub
mov
dec
cmpsl
or
rcrb
dec
jmp
jmp
scas
repz
ljmp
dec
mov
das
cmc
sbb
xor
mov
dec
mov
jbe
push
xchg
pop
push
jp
ss
aad
lods
sbb
shld
imul
push
insb
test
or
adc
adc
pop
sahf
daa
stos
pop
cli
jbe
imul
popf
pop
movsl
xchg
sbb
repnz
xchg
sub
sbbl
stc
jp
lret
sarl
pop
xchg
out
or
push
dec
xorb
xor
mov
xchg
sti
cs
xchg
test
fistpll
fidivs
stc
call
ret
popf
push
push
xor
shll
ljmp
je
lcall
rcrl
ret
dec
jno
shlb
ds
test
in
or
pop
pop
call
fcomps
dec
add
xor
adc
ret
repz
xor
adc
daa
enter
idivl
mov
dec
jp
add
andl
aas
arpl
xchg
loope
xchg
gs
mov
mov
in
mov
pop
jb
cli
xchg
ret
addr16
in
stos
jno
jmp
xor
jae
ss
ljmp
adc
scas
inc
mov
mov
cmpsl
cmp
test
or
cmp
inc
xchg
sub
mov
shlb
es
pusha
fwait
push
cmpsb
pop
mov
mov
out
mov
adc
dec
das
aaa
popa
lock
iret
scas
xchg
cs
rcrl
cmp
rcr
cwtl
imul
pop
jno
sbb
xlat
or
lahf
popa
push
lea
mov
ja
and
arpl
test
lea
js
jno
fsubrp
sbb
dec
out
xchg
test
outsl
hlt
negl
cmp
je
mov
and
mov
mov
or
movsl
js,pn
adcl
pop
mov
add
fidivrl
mov
add
xor
jl
aad
loopne
out
push
sti
fwait
sub
adc
ret
cltd
jg
int3
mov
xchg
dec
lahf
movsl
jns
or
fmuls
repz
icebp
xor
sbb
aam
fistps
add
bound
cmp
xchg
in
xor
cmc
negl
pop
mov
cmp
and
push
rorb
cmp
sti
jae
xor
push
xor
jns
dec
ljmp
clc
sar
add
sbbb
mov
iret
cmpsl
shll
inc
push
data16
cmc
cmp
clc
rorb
stos
pop
push
sahf
mov
cli
dec
push
sti
fcoms
jno
sbb
adc
sub
fsubrs
or
sub
aad
cmp
bound
test
xchg
pop
sub
stc
lret
mov
daa
stos
adc
scas
pop
adc
inc
lret
jl
data16
mov
mov
out
ss
sbb
mov
lret
cmp
mov
sub
out
ja
jb
adc
and
inc
pop
dec
mov
data16
jnp
daa
dec
push
leave
loopne
push
lods
sub
fwait
push
mov
aas
adc
mov
fistpll
popa
mov
mov
sbb
dec
das
cmp
push
mov
mov
mov
std
into
adcb
jne
mov
pushf
jmp
pushf
fsubl
imul
sar
pusha
aam
xor
and
hlt
hlt
int3
push
je
add
nop
inc
dec
cmc
cli
cmp
cwtl
dec
jo
or
adc
xor
shrb
xchg
stc
jno
stc
mov
jbe
icebp
rcll
jnp
xchg
addr16
lods
mov
popf
sub
cmp
and
inc
xor
xor
jne
mov
cmp
pop
jnp
call
popa
jno
add
fdivl
push
pop
stc
jg
dec
and
inc
aam
mov
stos
sbb
add
std
les
subb
repz
fdivrs
jne
dec
jne
dec
cld
add
out
out
jno
sub
and
mov
xor
bnd
movsb
jb
push
adc
call
jg
push
fs
leave
iret
arpl
dec
in
sarb
and
lock
clc
ss
sub
or
icebp
orb
scas
mov
mov
hlt
jle
and
jp
adc
add
xchg
jo
mov
add
setle
cmp
lret
adc
mov
dec
or
xor
inc
jg
data16
out
std
gs
std
in
add
ds
mov
xchg
mov
mov
jns
roll
imul
pop
adc
rcl
and
call
cmpsb
fcmovnbe
hlt
int3
popf
int3
cmp
icebp
mov
sbb
outsl
mov
icebp
xor
inc
test
ret
inc
mov
pop
scas
dec
mov
in
xor
pop
and
aam
loop
outsb
dec
subb
xchg
std
int
lock
mov
js
adc
je
stos
jmp
js
rorl
pop
mov
push
inc
into
das
jo
or
mov
xchg
icebp
dec
dec
sub
cmpb
mov
adc
xchg
lock
imul
outsl
mov
lahf
iret
loope
sarl
iret
insb
sub
jns
add
add
mov
inc
loop
cltd
inc
ret
jge
out
mov
in
adc
sub
xchg
lods
aad
mov
pusha
shll
mov
ror
lds
popf
loop
and
fstpl
xchg
jp
adc
andl
call
jmp
andb
hlt
jns
or
jns
and
loopne
in
adc
jp
mov
je
scas
cmp
cmp
lret
fistps
mov
movnti
test
push
in
or
dec
add
jecxz
push
and
aas
adc
mov
jg
mov
xchg
ja
jae
jge
xchg
dec
cmc
mov
fnstenv
jge
push
mov
mov
dec
sahf
into
ror
jge
sbb
sbb
sarl
ss
mov
cmp
adc
xorl
call
push
lret
icebp
cmp
adcl
lcall
arpl
test
test
pushf
mov
ret
imul
jg
fadds
dec
cmpsb
icebp
jg
adc
mov
xchg
ljmp
xchg
pop
or
int
lret
loope
xor
add
xchg
mov
push
jg
fs
rol
rolb
lcall
out
sub
dec
aaa
cmp
and
mov
pop
and
mov
int
lock
movsl
push
inc
insl
shlb
fidivl
xchg
arpl
push
aam
mov
and
out
out
js
mov
lds
stos
add
cmp
lahf
rcrl
cmp
leave
loop
aam
and
pop
jl
sub
cltd
mov
push
lret
adc
int
adc
in
cmp
inc
js
pop
addl
inc
cmp
adc
mov
data16
ds
jecxz
out
dec
imul
pusha
out
test
inc
sbb
test
jno
or
jecxz
std
sub
xchg
dec
pop
pop
out
jg
in
xchg
andb
cli
bound
mov
clc
xchg
testl
dec
addr16
das
or
pop
mov
insb
push
sbb
jno
fldenv
inc
inc
pop
add
xchg
xchg
popf
mov
cmp
xchg
test
inc
call
cmp
pop
jp
xchg
fcomps
popa
or
ds
in
sahf
jno
xchg
push
jb
mov
pop
insl
dec
jnp
sbb
call
push
dec
cwtl
int3
push
enter
clc
enter
mov
lea
or
imul
push
xor
xchg
fcmovnu
sti
imul
adc
addl
pop
cmc
movsb
jmp
dec
adc
imul
test
cltd
insl
push
mov
cli
inc
mov
xchg
lret
into
push
xchg
xchg
into
das
pop
insb
stos
lahf
nop
mov
adc
movsb
in
rcrl
xchg
adc
negb
enter
lcall
mov
pusha
pop
cmpsb
push
inc
jecxz
pop
popf
je
dec
inc
fldt
push
test
movzwl
cmp
jnp
inc
movsb
test
loope
push
pushf
pop
test
test
test
daa
fstl
je
cmp
fcomi
mov
and
mov
lret
mov
mov
in
inc
dec
ret
mov
lret
sub
sahf
test
jmp
lret
push
incb
int3
lret
jge
iret
scas
ja
xor
jle
es
jp
scas
mov
arpl
ds
lcall
mov
addr16
scas
aam
out
ret
adc
sbb
dec
insb
fstpl
jecxz
dec
pop
hlt
push
adc
mov
lcall
aad
push
dec
in
mov
pop
sti
inc
divb
fs
sbb
or
in
pop
push
mov
xor
lods
dec
leave
sbb
inc
mov
ds
fwait
pop
inc
jb
mov
or
jge
fnclex
cld
sbb
repnz
ljmp
repnz
inc
lock
and
out
out
mov
cmp
xchg
push
ss
and
into
mov
pop
inc
pop
out
xchg
rorl
aad
xchg
out
mov
inc
test
outsl
aam
popf
in
push
test
je
repz
pop
jnp
fists
cmpsl
imul
imul
leave
cwtl
sub
mov
mov
fcompl
and
lock
rcr
push
std
mov
daa
cmp
cmp
out
mov
push
sahf
test
xchg
cmpsb
jns
fstl
cmp
scas
hlt
cmp
xchg
out
dec
mov
psubusb
ja
ret
jecxz
and
js
and
test
xor
jmp
orb
jg
fxch
mov
inc
pop
and
push
push
mov
pop
addl
push
les
les
fbstp
mov
pop
icebp
mov
and
lods
int3
or
loopne
mov
jl
or
sbbb
ror
ret
dec
stos
gs
movsb
xchg
jmp
push
inc
adc
inc
jb
outsl
push
sbb
repz
xor
fcomps
push
mov
push
pushf
aaa
push
stos
jns
cmp
push
das
jo
popa
lods
test
mov
cmova
jne
sbb
mov
mov
inc
mov
mov
in
and
cwtl
sbb
dec
mov
fistpll
mov
les
mov
xchg
sti
jg
jecxz
scas
inc
and
fs
mov
mov
cld
sub
or
cmc
sbb
sbb
icebp
lret
out
mov
rol
mov
enter
mov
lds
lret
dec
lock
dec
or
int
jp
push
cli
and
imul
or
popl
mov
mov
iret
stc
dec
xchg
lock
sbb
push
adc
jno
lods
mov
sbb
or
jge
xor
iret
outsb
clc
jle
aas
pop
ja
jmp
mov
fs
jg
and
imul
aaa
shr
fisttpll
pop
cmpsb
sbbl
mov
subb
mov
jl
fcoml
out
test
jno
call
mov
lock
mov
iret
in
xchg
pop
fnstcw
jns
les
sub
out
mov
dec
mov
in
cmp
movsb
sub
mov
mov
cli
scas
mov
mov
inc
mov
mov
and
cld
loope
in
movl
in
and
xor
jl
int
xchg
or
inc
pop
lock
ret
mov
jl
and
inc
jns
mov
insl
addl
xchg
mov
pop
push
add
fsubl
pop
pop
cmpsb
mov
nop
and
in
cld
mov
add
sbb
iret
out
pop
jmp
push
or
js
out
movsl
insl
ja
xchg
pop
add
dec
sub
popa
ret
pop
sbb
mov
sbb
xor
xor
stos
fdivrs
fdivs
jge
ljmp
and
sbb
outsb
sbb
adc
xchg
inc
loopne
lock
jno
xor
pop
test
mov
fdiv
add
cmp
pop
dec
push
fstpl
imul
cmpsl
adc
mov
js
sub
cmc
mov
cmp
pop
and
cli
dec
ret
aam
push
pop
push
aas
cmc
insl
pop
inc
xor
jbe
or
sbb
test
sub
mov
mov
cmp
fdivrs
jmp
iret
sub
test
dec
cmp
aam
into
sub
cltd
adc
in
sub
fadds
ficompl
repz
dec
push
inc
cmp
test
in
or
xor
mov
or
xchg
cmp
jne
mov
add
dec
in
adc
jmp
in
stos
cmp
xchg
out
fnsave
mov
int
mov
mov
mov
cmpsl
push
stos
mov
dec
nop
jmp
dec
push
testl
ds
jbe
sbb
ret
ljmp
mov
add
jle
lods
inc
pushf
xor
nop
jnp
outsl
sub
rol
push
movsb
icebp
les
jge
sub
cwtl
rcr
cmp
sahf
jb
jne
rcrb
jo
dec
mov
lods
fmul
out
divl
sbb
sub
xchg
sbb
cmp
frstor
ja
dec
xor
lods
gs
cwtl
int
push
out
or
aam
js
lds
das
aad
lcall
cmpb
sub
cwtl
xor
pop
sbb
mov
aam
mov
js
enter
sub
push
in
imul
clc
repnz
insl
loopne
aaa
out
popa
mov
insb
mov
out
fdivl
stc
shrl
leave
mov
mov
rclb
push
sti
iret
sbb
jo
lahf
enter
lock
cmc
xchg
jb
out
push
mov
sbb
add
inc
js
je
xchg
popf
repz
pop
cmc
in
mov
mov
xchg
mov
add
pop
cmp
das
adc
das
adc
inc
sti
cmp
mov
mov
sbb
xchg
jle
sbb
inc
push
mov
test
mov
xor
pop
fsts
ret
cwtl
pop
hlt
adc
enter
test
mov
xor
sti
into
popa
push
add
ror
jmp
fiadds
jge
push
popf
cmp
xchg
lret
std
addr16
clc
adc
cld
xchg
jb
inc
push
in
insl
stos
fwait
mov
inc
cld
ret
mull
out
aaa
andb
iret
jge
fxch
shl
adc
push
jno
cmpb
pop
or
fistps
mov
push
lods
mov
into
cmpsb
clc
xor
mov
push
and
xchg
sbb
pop
sub
cmc
adc
ret
insb
sahf
push
mov
cmp
dec
mov
adc
stc
jl
adc
ja
jb
cmpsb
ss
sub
cmp
pop
popa
sbb
popa
or
data16
gs
mov
push
sub
inc
pop
insl
sub
sbb
fsubrl
add
dec
scas
push
push
adc
jl
leave
movsl
sub
xor
lret
stos
into
enter
movsl
and
xor
sbb
in
adc
iret
and
aas
mov
add
jnp
cmc
test
sub
adc
mov
shr
das
out
pop
nop
mov
cs
or
int
ljmp
addr16
into
sub
in
mov
mov
shrl
mov
js
mov
rcll
jns
int3
pushf
cltd
push
andl
imul
jge
repz
or
repnz
inc
leave
xor
aas
pop
push
mov
dec
hlt
xlat
jmp
outsb
xor
idivb
in
aas
ret
cmp
mov
dec
sub
pop
pushf
jbe
xchg
je
clc
cwtl
rolb
arpl
xchg
hlt
orl
jge
pop
pop
test
cmp
scas
fldcw
call
add
test
jge
pop
jg
mov
add
mov
mov
cmp
adc
mov
inc
mov
repz
fcomps
pop
ljmp
adc
push
stos
and
xchg
lock
sti
push
sahf
xchg
data16
dec
dec
int
mov
aam
js
repz
sbb
iret
mov
daa
sbb
lret
outsl
in
repz
jo
inc
adc
rclb
lahf
cltd
adc
mov
mov
cmpsb
fisubs
dec
mov
mov
mov
shlb
nop
ja
adc
std
inc
movsb
add
lock
int
repz
fs
sbb
leave
lret
cltd
inc
mov
jae
test
xor
lods
and
push
sbb
bound
mov
cwtl
adc
push
mov
rorb
add
call
das
pusha
mov
int3
shl
sub
xorl
lret
pushf
sub
stc
fwait
and
lods
pop
aas
mov
divl
lcall
push
mov
add
inc
mov
mov
dec
jb
mov
pop
sbb
or
and
lods
out
push
mulb
int3
mov
mov
mov
std
ja
cmp
jnp
lret
call
scas
mov
notb
or
mov
xor
sub
cmp
fwait
jl
pop
rorl
retw
lahf
mov
test
mov
arpl
movsl
mov
sbb
mov
mov
out
mov
aaa
cmp
pop
sbb
mov
adc
fdivr
dec
mov
dec
jo
gs
mov
popf
sub
xor
xchg
fists
lret
stos
jecxz
mov
add
fisttps
xlat
jo
es
xchg
jbe
xchg
fs
cmp
dec
inc
test
fisttpl
jae
and
repnz
addr16
pop
dec
cmp
push
sub
dec
jle
lret
mov
inc
inc
fnsave
xor
out
or
sub
test
and
incb
sbb
cltd
ret
xor
pusha
cmp
repnz
xchg
and
out
mov
xchg
mov
sbbl
cmp
lahf
daa
loopne
cmp
mov
cwtl
jmp
int3
add
stos
add
pushf
dec
dec
push
and
dec
sarb
cmpsl
daa
outsb
pop
cli
dec
inc
lods
lret
push
push
pop
scas
sahf
imul
push
adcb
ret
dec
xor
inc
dec
popa
mov
ret
mov
inc
ljmp
lods
xchg
pop
icebp
jae
mov
adc
or
popa
cltd
stos
cmp
cmp
jne
out
mov
bound
push
lret
jmp
in
cmp
xor
lods
stos
cmpsb
lea
ficoml
outsl
pop
pop
pop
out
pop
jo
sbb
test
hlt
mull
pop
or
pop
adc
shr
dec
jmp
dec
into
std
int3
fxch
in
into
or
xor
ret
pop
xchg
mov
mov
push
mov
repnz
stc
icebp
mov
nop
call
lods
ss
mov
push
push
int
xor
dec
hlt
ds
insb
test
outsl
push
inc
pop
mov
lods
and
cmc
in
sbb
movsl
movsb
sbb
jnp
lcall
mov
nop
push
aaa
cs
adc
push
xor
cmc
scas
inc
es
mov
xor
outsl
inc
jmp
push
pop
rcrl
push
dec
inc
out
push
pusha
dec
sub
stos
cli
fmuls
xchg
cmp
xchg
es
push
shr
mov
das
test
out
lret
inc
xchg
mov
xlat
sahf
cwtl
loopne
inc
cs
dec
movsl
xchg
push
and
insb
jno
and
pop
mov
les
lea
insl
rorb
pop
xor
push
idivl
mov
lret
out
je
or
or
aad
in
jle
mov
jmp
icebp
adc
fcoml
in
data16
out
jb
ljmp
push
pop
int
mov
mov
sub
mov
pop
dec
or
dec
jecxz
jl
or
jp
mov
pop
adc
mov
rcrl
bnd
arpl
fidivrl
and
out
jmp
popa
jne
push
mov
push
dec
sti
sbb
notl
sahf
and
mov
shll
mov
dec
lods
stos
test
mov
dec
repnz
xchg
push
mov
lods
mov
cli
add
nop
adc
pop
add
ljmp
jne
loopne
mov
movsb
std
sahf
dec
mov
mov
jge
lea
mov
xchg
movsl
and
jle
inc
adc
imulb
enter
xchg
daa
dec
fwait
inc
leave
aas
cwtl
idivl
push
jae
leave
lea
addr16
cmp
loope
cmp
or
jmp
push
aaa
scas
rclb
stos
insb
xor
jecxz
jp
jmp
call
mov
dec
mov
cmc
cmc
outsb
into
bound
pop
adc
fmull
fmul
adc
jge
mov
xchg
out
jecxz
rcl
add
mov
enter
xchg
dec
sbb
push
outsl
addr16
adc
stos
push
leave
popa
lret
jmp
negl
movsb
and
cmpsl
fisttpl
scas
xor
pusha
stos
lcall
sbb
push
dec
mov
pop
adc
bound
jae
mov
insl
jmp
aad
out
sbb
mov
stos
call
mov
fisubrs
add
adc
and
ret
je
vmwrite
imul
subb
fmull
mov
jmp
mov
xchg
pop
push
data16
push
xchg
lret
sub
and
adc
xor
movsl
add
inc
call
or
xchg
mov
mov
call
in
addr16
push
mov
insb
movsb
aad
sbb
sub
int
in
je
cld
push
sub
xor
sti
sub
jecxz
cmpl
test
pusha
or
out
mov
fidivrs
jbe
adc
and
mov
call
jns
mov
cmp
es
lea
mov
psadbw
in
pushf
xchg
pushf
data16
fldcw
pop
pop
sub
mov
inc
mov
sub
cmpsb
mov
push
arpl
aad
and
mov
lock
jb
cmc
pop
mov
punpcklbw
fwait
xchg
loopne
adc
lcall
hlt
outsb
dec
push
scas
sar
jg
popf
cmpsl
inc
sub
or
push
inc
loope
inc
xor
ljmp
mov
loope
repz
push
das
jnp
xchg
enter
and
enter
mov
subps
push
sbb
movsb
adc
addl
push
call
push
repz
push
cmpl
add
out
sbb
pop
push
mov
sbbl
jae
inc
fwait
shlb
sub
addl
loope
xchg
cwtl
inc
out
hlt
adcl
ja
pusha
shl
xchg
popf
push
mov
pop
shl
stc
jecxz
in
daa
icebp
xchg
dec
mov
ja
ret
sbb
scas
push
aaa
sti
push
in
xor
inc
cmp
sti
or
lods
sbb
dec
leave
dec
inc
and
mov
sbb
cltd
sbb
pop
adc
sbb
out
stos
pop
cmp
push
add
addr16
mov
pop
pop
and
stc
cld
imul
out
jmp
pop
fldcw
lcall
adc
and
mov
int3
sbbb
sbb
mov
cmp
fisttps
jbe
and
xor
outsb
fcomi
mov
cmp
xor
arpl
fldl
loop
dec
pop
push
xchg
or
mov
andb
jo
mov
in
lds
rorb
lea
dec
lcall
mov
or
xchg
scas
jb
inc
xchg
and
jo
je
jl
fldt
add
xchg
mov
popa
pop
xchg
add
jne
mov
jmp
iret
aaa
pop
int3
std
and
cmp
insl
sub
in
pop
add
les
push
cmpps
mov
adc
push
mov
add
repnz
and
mov
loopne
or
push
nop
mov
int
arpl
cmpsl
jnp
sar
outsb
ds
pusha
inc
scas
rcll
sbb
and
arpl
fmull
outsb
mov
repz
jle
or
lcall
iret
mov
ret
ja
adc
ja
sarl
cmp
fsubl
js
andb
cmp
fstps
xor
les
sub
ds
adcl
out
cli
push
lds
clc
jne
mov
out
add
test
lretw
loope
mov
or
dec
xor
lea
addr16
xlat
stc
and
add
cmpsl
jno
lea
mov
insb
pop
movzbl
ret
inc
pusha
mov
in
fs
fs
cmp
lret
out
adc
in
outsl
mov
sbb
les
pop
xchg
push
dec
sbb
ljmp
jae
aam
test
or
mov
movsl
xlat
push
rorb
jecxz
jae
fistpll
cmpsb
push
push
push
gs
push
sbb
test
pop
addl
jbe
xchg
adc
cmpsb
jnp
outsl
stos
push
inc
jge
roll
ds
and
cmp
pop
adc
mov
push
nop
data16
imul
cmpsl
iret
xor
fwait
addr16
aas
rclb
inc
push
jno
push
adc
dec
lahf
movsl
xor
xchg
cmp
adcl
sahf
int
inc
divl
mov
mov
jo
cs
cmp
push
into
shrb
mov
adc
cs
dec
adc
cltd
jg
inc
add
sbbb
mov
xchg
adc
add
cmp
inc
xchg
or
addl
xor
mov
mov
mov
xor
in
mov
jmp
mov
jge
out
cmpb
adc
jo
mov
gs
js
scas
outsl
inc
push
inc
adc
fbstp
push
jbe
pop
sarb
insb
inc
mov
adc
dec
pop
addr16
sbb
stos
mov
pop
into
jecxz
scas
es
dec
js
imul
mov
rorb
test
daa
and
enter
xchg
shrb
mov
jecxz
jne
inc
pop
xchg
push
call
push
out
lods
mov
cmpl
or
and
jbe
cltd
inc
or
imul
jle
jae
fidivl
and
dec
out
lcall
and
jno
test
ljmp
add
mov
sub
add
and
test
or
jp
mov
jmp
sbb
mov
fmuls
jns
cli
pop
movsl
outsl
inc
lcall
push
mov
movsl
outsb
jno
xlat
push
dec
outsb
cmc
xchg
pop
fdivrl
push
mov
cmpsl
mov
jns
xor
add
in
jg
lahf
jl
pop
lock
dec
mov
mov
aam
mov
xchg
pop
xchg
lret
adc
sarb
test
scas
subl
push
aad
and
cmpsl
mul
cltd
dec
mov
inc
sub
mov
jmp
test
xchg
stos
inc
outsb
and
sbb
add
jmp
xchg
mov
fnstcw
lret
pushf
bound
xchg
imulb
sub
xchg
arpl
stos
flds
adc
rclb
int3
int
dec
loopne
test
test
sub
fnstcw
test
and
mov
or
cwtl
scas
test
sbb
orb
stos
test
xchg
adc
or
popa
add
lods
aad
ficomps
imul
pop
sbb
sahf
cmpb
inc
xchg
dec
pop
pushf
push
call
inc
adc
lret
shlb
hlt
out
in
push
jb
dec
lcall
mulb
fsubrs
mov
push
mov
insb
daa
xor
or
ljmp
stc
cmp
lret
lock
xor
pop
xchg
cli
popl
pushf
aad
adc
lret
mov
fnsave
jg
jle
repnz
dec
sub
or
push
sarl
imul
mov
add
cltd
addl
xor
mov
bound
push
es
pop
inc
fisttps
jbe
dec
loopne
pop
mov
adc
jmp
popf
xor
ljmp
test
cld
jno
push
jle
call
lock
scas
outsb
fimuls
popa
mov
gs
dec
ja
shl
loope
mov
inc
scas
xor
xchg
add
ja
lcall
cmpsl
lea
and
stos
push
icebp
or
xor
lret
cmpsb
xchg
pop
push
stos
aad
stos
ret
je
push
cld
addb
inc
lds
movsl
test
sbb
enter
scas
orb
xchg
pop
pop
aas
push
jnp
daa
addr16
ficomps
mov
idivb
lock
adc
push
dec
out
mov
outsb
mov
insl
push
adc
leave
pop
arpl
inc
movsl
das
add
inc
mov
hlt
aad
adc
add
pop
mov
sbb
dec
lea
aaa
mov
leave
push
dec
add
fdivr
insb
jb
mov
xchg
nopl
test
inc
stos
iret
dec
cmpsb
outsl
aad
pop
pop
jne
aas
daa
dec
cmp
nop
shl
jle
int3
mov
cmpl
and
sub
out
pop
push
insl
xor
xlat
and
sarb
in
sbb
faddl
rorb
fwait
adc
jmp
stos
or
fwait
push
push
addr16
push
mov
lea
mov
rorb
imul
xchg
jmp
mov
lods
push
pop
cmp
push
loope
mov
mov
int
loopne
shrb
stos
in
leave
jg
jbe
fimuls
add
adc
addr16
mov
notb
iret
jecxz
cmp
push
adc
leave
jg
fs
jns
inc
xor
data16
lods
mov
mov
sbb
shlb
clc
mov
inc
dec
sbb
mov
xchg
rcr
std
mov
mov
int3
sbb
loopne
or
ljmp
mov
lea
jae
pusha
adc
adcl
add
scas
les
nop
andb
out
aad
mov
add
mov
dec
mov
test
pusha
xor
repz
mov
cmp
xchg
mov
pusha
das
xchg
nop
jae
insl
add
idivb
lcall
dec
aas
test
xchg
fwait
xor
sahf
imul
enter
adc
mull
aam
sbb
hlt
or
pop
inc
outsl
sub
mov
pop
mov
daa
out
inc
xlat
stc
mulb
mov
mov
cli
ret
insb
repz
aas
pop
mov
add
mov
daa
inc
out
inc
cmpsl
out
mov
cmp
rcrl
repnz
push
cld
and
cmp
xchg
iret
mov
negb
cmpsb
mov
xor
fdivrl
jnp
jo
in
ret
xor
dec
loop
dec
fwait
push
pusha
fdivp
jmp
xor
cli
jno
or
inc
cld
or
ret
add
sbb
jno
js
in
sbb
cs
lea
addr16
loop
sub
call
jb
adc
js
shrl
arpl
roll
cmp
push
fildl
aaa
addr16
adc
popf
lahf
subb
fidivrs
aas
shlb
and
xor
fsubrp
pop
adc
pop
xchg
and
popw
das
pop
dec
or
mov
js
les
push
jno
adc
pop
or
adc
mov
xchg
fmuls
lds
out
sbb
mov
and
push
mov
add
mov
push
push
mov
sbb
jmp
cmpsb
mov
test
and
popa
and
lcall
ds
mov
mov
ror
repnz
push
cmc
pop
add
stos
cmpsb
aam
inc
xchg
pop
push
jmp
xchg
pop
in
and
mull
cwtl
hlt
cmp
push
pop
popl
data16
xchg
aas
inc
dec
imul
in
mov
lea
shll
push
dec
cli
imul
push
in
inc
clc
dec
jp
test
ja
dec
xchg
xchg
inc
xchg
fnsave
inc
mov
dec
jne
pop
rolb
mov
mov
test
jo
push
rcl
bound
sbb
es
cltd
dec
xor
jge
xor
dec
enter
add
push
add
mov
clc
movsb
xlat
and
jge
sbb
cmp
stc
cmp
gs
add
push
cmp
push
or
mov
sarl
and
jge
aam
add
jge
cmp
push
xchg
nop
sub
fisttpl
sbb
leave
pop
pop
stos
pop
jmp
in
shrl
mov
out
sti
xor
jl
mov
lock
add
xor
imul
ret
fs
sbb
shlb
push
cmpsl
or
cld
daa
mov
add
sahf
and
jecxz
push
jge
arpl
pop
mov
inc
mov
cmpsb
push
xor
push
adc
pop
push
jo
mov
ljmp
leave
jg
ja,pt
out
mov
jg
icebp
popa
notl
shrb
mov
mov
in
sub
dec
or
mov
into
dec
insb
cmpsl
enter
stos
and
or
xchg
cmp
cmpsb
adc
sub
mov
jne
adc
ret
cmp
jp
arpl
movsb
xchg
scas
shlb
cmp
cmp
mov
jae
jo
cltd
fistps
dec
dec
mov
shr
push
inc
pop
push
xchg
scas
inc
in
mov
dec
test
lret
in
loopne
or
inc
xchg
pop
nop
sarb
lret
repz
mov
call
lahf
adc
sub
jo
repnz
lea
out
divl
or
in
fisttps
cld
jmp
push
push
arpl
push
in
int
daa
cmc
xlat
mov
in
or
stos
stos
inc
je
in
cwtl
test
cmpsl
out
addb
mov
push
pop
push
ss
add
xchg
les
shrb
mov
cmp
sub
dec
ljmp
and
push
mov
les
insb
mov
lods
lret
sub
dec
dec
std
fmul
sbb
push
fwait
in
and
test
lds
mov
or
sub
jge
jno
hlt
jg
pop
js
jb
fwait
mov
in
xor
in
or
fistpll
add
rol
cmp
xlat
pop
ss
push
adc
fdivl
dec
scas
xor
adc
sub
leave
aaa
dec
cltd
sbb
loope
mov
mov
pop
fldl
push
dec
insl
in
pusha
pop
gs
pop
in
fstpl
mov
lea
pop
mov
xchg
or
cmp
xor
test
lea
pop
lds
adc
jge
mov
fistpll
divl
leave
xchg
xchg
pop
not
cmp
or
push
or
sbb
mov
sbb
inc
mov
push
jge
out
dec
pop
jnp
mov
repnz
outsb
enter
xor
mov
mov
repz
inc
add
inc
push
out
fs
es
xor
rcrb
gs
jns
pop
adc
sbb
dec
sub
mov
pop
inc
adc
notl
mov
mov
clc
cmp
xor
adc
ss
les
std
repz
out
adc
or
out
xchg
jnp
dec
pop
or
and
jb
nop
gs
incl
mov
and
cmc
pusha
ljmp
pop
mov
aas
imul
mov
xchg
push
pushf
jecxz
out
movsl
add
cld
pop
mov
xchg
xorb
aam
in
xchg
fcmovbe
jl
add
stos
sarb
outsl
pop
lods
out
hlt
test
or
shlb
pop
out
stos
sahf
inc
cmc
jmp
movsb
dec
adc
lods
cmc
mov
roll
inc
or
out
jnp
mov
jp
mov
adc
inc
icebp
jp
lds
jmp
mov
jnp
aaa
pop
mov
test
movb
leave
testb
sub
mov
mov
adc
xchg
inc
push
sbb
and
fcomps
stc
mov
arpl
jo
aas
xchg
add
push
sub
inc
stos
cmp
cld
std
add
fcmovu
jne
mov
jmp
pop
sbb
loope
pusha
testb
jl
mov
xchg
fsubrl
add
dec
mov
movsb
mov
nop
cltd
push
arpl
arpl
pop
mov
or
sbb
sbb
iret
das
push
push
sbb
pop
addr16
int3
test
dec
xor
sub
dec
ror
in
sahf
dec
pushf
icebp
test
sbb
inc
mov
jae
adc
mov
jno
xlat
push
dec
jg
jge
ss
jb
xchg
mov
mov
sbb
sub
testb
mov
nop
jb
scas
xor
sub
pop
pusha
daa
mov
pusha
mov
jae
inc
xchg
mov
imul
inc
xchg
popa
pop
divb
sub
jle
push
push
movsb
test
push
xchg
pushf
jnp
out
mov
cmp
dec
xor
bound
mov
push
jnp
inc
lahf
mov
sub
lods
inc
dec
adc
movsb
imul
xchg
cs
sbb
into
daa
xchg
adc
shrl
push
cmp
imul
in
out
xchg
push
shl
mov
lods
lock
xchg
insl
loop
inc
rcrl
inc
daa
jle
and
or
leave
mov
decl
loop
inc
pop
lret
mov
dec
xor
mov
mov
cltd
pop
sbb
adc
mov
loopne
mov
lods
adc
lret
dec
sub
xor
out
aaa
fsubp
add
bound
ret
push
pop
mov
aad
repnz
pop
push
repz
dec
push
sbb
mov
jns
xchg
idivb
adc
pop
push
icebp
push
jl
cwtl
fidivrl
stc
clc
or
lods
cld
bound
in
xor
mov
cwtl
mov
pop
scas
push
dec
out
dec
jg
test
inc
mov
pop
pushf
sbb
push
mov
push
cmp
mov
mov
in
sub
insb
mov
cmp
outsl
sahf
pop
mov
inc
dec
mov
lret
sbb
aam
sahf
cmp
rcrb
testl
dec
inc
jb
cmpb
test
mov
mov
xchg
and
call
cmpl
aas
dec
mov
mov
inc
mov
aam
xorl
clc
cld
loopne
cltd
push
and
jecxz
imul
call
int
jnp
aas
test
xor
jmp
mov
aad
dec
std
je
inc
mov
inc
pop
jb
cmp
sbb
mov
xchg
mov
cmp
xchg
addr16
std
cmp
dec
mov
jno
test
lock
enter
arpl
lret
cmp
cmpsl
ja
jl
addr16
gs
jp
adc
sbb
mov
push
lret
dec
mov
sbb
in
lods
or
lcall
loopne
es
sbb
jb
in
jg
lcall
mov
push
adc
push
daa
jae
pop
push
out
inc
test
iret
lcall
loope
inc
and
test
movsb
into
ret
popa
push
shlb
sbb
lock
inc
test
stc
imul
xor
rcr
xchg
push
bound
xchg
fmuls
mov
out
xor
pop
pop
pop
insl
sti
outsl
push
out
loopne
adc
add
ret
and
xchg
sarl
cmp
adc
pushf
leave
lds
loop
and
dec
pop
fmull
jle
cwtl
xlat
xchg
and
lret
clc
xchg
sub
mov
outsl
bound
cmp
shlb
mov
mov
loope
lahf
sbb
pop
push
push
ds
es
cmpsl
sbb
mov
loop
or
jae
stos
xchg
xor
sub
dec
movsl
hlt
mov
add
das
adc
fwait
pslld
cli
shll
imul
pop
mov
or
fisubs
cmp
es
fwait
scas
cmp
dec
es
test
call
jbe
xchg
repz
jmp
adc
sbb
notl
jmp
add
hlt
pushf
adc
sbb
xor
mov
pop
xchg
push
rorb
lret
and
test
shrb
movsb
mov
pop
push
std
rol
add
push
andb
mov
movsb
flds
dec
nop
dec
int3
pcmpeqb
pop
push
orl
inc
popf
inc
add
push
jmp
mov
int3
stos
lods
sarl
sub
push
jo
dec
pop
push
mov
repnz
sub
dec
jns
xchg
push
mov
movsb
xchg
xchg
ds
int
dec
dec
fidivs
lods
sti
stos
adc
daa
lds
xchg
xor
shrb
pop
cmp
mov
push
lock
add
ja
xchg
xor
js
call
jnp
lahf
jecxz
push
add
dec
jnp
ret
out
jnp
mov
je
gs
cwtl
cltd
loop
jns
or
ja
sbb
je
inc
lret
mov
jmp
sarl
lods
fnstcw
fistpll
pop
dec
stc
adcl
lret
push
in
sbb
jae
lcall
pop
adc
scas
fsubl
and
out
call
push
jbe
popf
in
jo
push
jg
fwait
addr16
loop
mov
aas
cs
inc
adc
pop
gs
rclb
je
mov
xor
scas
inc
into
dec
inc
je
shlb
xor
testb
xchg
outsl
sahf
sti
icebp
push
dec
mov
xor
scas
mov
sub
cmp
sarl
inc
jge
mov
out
xor
roll
sub
scas
out
push
ds
cmp
push
cmp
cmp
jp
xchg
jecxz
sub
scas
rorl
ret
push
ja
stc
movzbl
jge
mov
xchg
jmp
jae
cmpsl
dec
inc
xor
cld
adc
mov
rcl
filds
fldenv
mov
xorps
in
into
xchg
sbb
xchg
jg
in
pop
out
divl
inc
sbb
xchg
xchg
jmp
sbb
stc
rcl
and
fnsave
adc
out
out
or
xor
daa
mov
mov
lds
sbb
xchg
jno
sbb
mov
out
mov
stc
ret
shlb
xchg
xor
ror
push
push
js
leave
mov
addb
pop
loop
mov
push
xchg
shlb
push
dec
hlt
dec
in
mov
leave
adc
fisubs
cltd
pusha
fisubrs
xor
test
jmp
cmp
dec
mov
push
outsl
xor
ja
mov
or
mov
mov
frstor
xchg
divb
sub
add
xchg
adc
lea
xchg
add
and
stos
sbb
xor
push
xchg
aad
cmp
loopne
or
xor
dec
mov
and
pop
or
cmpsb
andl
and
jns
popf
push
mov
inc
fs
out
dec
mov
pop
xor
add
cld
mov
out
mov
dec
inc
test
int3
dec
fidivl
ficompl
cltd
sbb
mov
adc
or
ljmp
nop
cmpsb
lahf
cmpsb
enter
fbld
xchg
jecxz
inc
lret
es
pop
mov
popf
mulb
mov
je
outsb
xor
sbb
lcall
jb
xchg
addr16
pop
shll
hlt
js
stos
push
outsb
jp
mov
dec
sub
push
addl
push
add
out
xchg
cmp
stc
cmp
stc
jmp
and
aaa
lds
addr16
loope
out
ja
aam
and
mov
mov
mov
mov
xchg
outsb
cmp
data16
fwait
or
pop
xlat
mov
in
add
lea
popf
sub
ds
push
add
sbb
xor
adc
sub
das
xchg
xchg
mov
mov
or
pop
test
imul
test
arpl
jo
ds
fdivl
sahf
nop
iret
inc
adc
dec
jle
in
xchg
jecxz
leave
test
or
pop
pusha
xor
push
xchg
aam
inc
andb
insb
test
pusha
adc
mov
pop
rcll
movsl
in
dec
je
movsl
popf
mov
ljmp
cli
or
push
xchg
bound
xchg
and
add
jmp
xchg
inc
scas
inc
inc
sbb
inc
in
imul
xor
xchg
ss
sbb
xchg
sub
pop
sbb
jno
leave
add
out
cmp
mov
shlb
aad
adc
int3
lds
xlat
lea
lahf
inc
inc
and
pop
push
and
test
outsb
sbb
ret
xor
push
xchg
sub
xlat
call
iret
add
ret
stos
das
and
call
jmp
sti
jecxz
pop
sub
aaa
pop
lahf
add
dec
hlt
mov
aam
shll
jge
jl
outsb
popa
popa
mov
int
xor
aas
or
out
xchg
add
outsl
mov
inc
movb
or
lcall
call
push
cld
daa
adc
addr16
dec
sahf
test
inc
xchg
insl
bound
mov
push
mov
lds
xchg
sbbl
pusha
sub
add
mov
or
mov
sbb
ret
sbbb
xchg
pusha
imul
sub
lock
adc
ja
sbb
cmp
mov
xchg
ffree
stos
xor
ds
xchg
inc
ss
add
push
xor
cwtl
popa
loop
in
jecxz
in
ljmp
pop
mov
rcr
add
mov
fists
cwtl
sbb
loop
push
sahf
inc
int3
xchg
jmp
adc
fmul
pusha
inc
sub
sub
ljmp
push
sbb
fs
mov
pop
or
inc
xor
adc
out
pop
cmp
inc
inc
xchg
ficoms
or
insb
jl
std
sub
ljmp
and
imul
pop
push
rcrl
sbb
inc
xchg
jno
push
inc
dec
out
movsl
movsl
pop
in
xchg
push
add
sbb
inc
mov
out
pop
xor
push
test
push
adc
stos
xchg
lods
sbb
popf
addr16
push
arpl
test
adc
in
jae
mov
cmp
or
lret
sub
xchg
cmpsb
xchg
inc
push
mov
popf
xchg
and
jne
add
add
cmp
in
mov
sbb
test
gs
testl
out
cmp
sbb
sahf
mov
sbb
cmp
popf
inc
cmc
into
aaa
or
repnz
xor
jle
insl
cld
mov
fldt
lea
mov
sub
mov
or
scas
imul
ficomps
jecxz
mov
ficompl
xor
outsl
scas
pushf
cmp
call
pop
in
repnz
iret
mov
cmp
push
stc
jnp
and
xlat
jne
daa
jno
mov
call
and
lods
stos
cmp
aad
movsb
lods
xor
sub
call
popa
sub
pushf
fsubl
in
push
pop
inc
dec
rcrb
mov
hlt
aaa
push
insl
mov
lods
or
sub
pushf
aas
insl
pop
push
xor
movsl
lcall
adc
add
push
pushf
jg
std
rorb
fnstsw
pop
rcr
push
gs
push
inc
ret
out
test
notb
sbb
add
cltd
xor
cld
pop
xor
dec
mulb
push
inc
lock
inc
andb
out
loopne
fists
shlb
fiaddl
adc
jmp
test
rcl
mov
popl
pop
and
mov
jge
ss
or
cmpsl
test
jp
dec
inc
test
add
push
in
mov
sti
loopne
dec
decl
push
xor
adc
jb
cli
xchg
pop
inc
rorb
addr16
pop
inc
jge
dec
mov
push
pop
mov
or
sarb
js
in
cli
loopne
dec
add
lahf
sbbb
cmp
lret
outsl
pusha
mov
and
mov
xchg
jecxz
cmp
mov
xor
mov
add
dec
insb
cmp
mov
bound
test
rclb
lock
sub
ja
xor
add
sub
sub
inc
mov
dec
jge
add
inc
frstor
push
lock
jl
pop
aaa
shlb
aas
fsts
jge
lock
mov
test
sub
mov
jo
xor
into
add
out
mov
cmp
lods
lea
pop
addr16
and
lcall
and
lock
rorl
dec
or
test
lods
adc
xchg
mov
cmp
or
stc
mov
pushf
mov
add
fxch
cs
lds
in
pop
sbb
push
inc
xchg
pop
aaa
rorb
sub
out
bound
scas
jno
ds
clc
mov
and
ds
js
jg
scas
mov
in
jle
fcompl
stc
mov
aam
out
das
lcall
imul
push
cmp
loopne
cmc
les
pop
add
xchg
pop
add
addr16
call
cmpsl
or
ja
aas
movsl
bound
push
fwait
stc
mov
pop
cmp
mov
mov
stos
xchg
out
icebp
loope
xchg
inc
call
cmc
add
or
sahf
repz
or
into
cmp
insb
testb
sbb
and
insb
leave
fwait
adc
sub
shrl
adc
cmp
push
xchg
scas
popf
pop
dec
mov
dec
mov
imulb
mov
dec
sub
adc
push
lcall
das
subl
jmp
cli
add
inc
xchg
mov
cmc
xlat
cltd
loop
cmpl
sub
stos
sbb
jecxz
push
mov
dec
lods
mov
imul
lret
lods
add
mov
lcall
pop
cwtl
mov
out
cwtl
add
add
movsl
outsb
or
insl
xchg
jg
pop
ja
sbb
int
ret
inc
push
ljmp
pushf
sbbl
clc
out
add
lret
out
mov
pop
xchg
or
mov
jnp
sub
mov
fprem1
dec
xchg
lock
data16
adc
mov
dec
cmpsl
fldenv
test
cmp
adc
adc
adc
push
in
fisubrl
rcrb
xor
fwait
icebp
in
inc
push
dec
push
lea
pushf
inc
aas
daa
mov
pop
mov
in
and
pop
and
xchg
xor
int
xchg
ficoml
out
shrb
mov
in
sub
mov
imul
aaa
in
fadd
shr
xchg
int3
mov
or
push
push
xor
icebp
shrl
push
mov
sarl
sub
adc
mov
pop
dec
inc
stc
xchg
add
push
cld
rcrl
or
push
stos
scas
ficomps
mov
inc
fnstsw
push
bound
leave
mov
xor
mov
cmpsb
push
fcoml
into
insl
push
ret
fsubs
dec
lret
jl
push
js
adc
aam
aam
xorb
mov
push
int
mov
fists
pusha
mov
push
sub
dec
add
jmp
imul
mov
js
or
and
xchg
or
or
lods
cmp
lret
mov
outsl
aam
push
fnstcw
lcall
mov
negl
and
addr16
inc
jnp
lds
mov
xlat
mov
mov
lods
push
sti
add
repnz
incl
ret
jecxz
outsl
test
xchg
dec
add
or
sub
sbb
mov
jo
mov
inc
ljmp
pop
in
mov
or
out
stos
xor
inc
sbb
sbb
aad
mov
cmp
mov
fs
xchg
in
inc
andl
jecxz
push
call
mov
iret
cld
adc
jl
sarl
cmp
dec
xor
xchg
add
das
sbb
mov
cmpsl
mov
ljmp
xchg
fcoml
stos
sub
jl
inc
adc
dec
out
imul
call
ljmp
inc
les
sub
pusha
mov
mov
sub
int3
aad
push
mov
mov
sbb
or
lea
push
dec
lods
pop
in
push
into
xchg
cmp
repz
popw
xor
mov
mov
and
sub
add
jge
and
cmp
xor
popf
ja
test
mov
out
add
and
dec
sarl
xor
scas
pop
xor
cmp
sbb
or
jg
fiaddl
stos
in
push
ret
mov
xchg
lock
outsl
shrb
dec
adc
mov
push
loopne
loope
or
jmp
xor
rol
sub
jg
stos
loopne
imul
lea
rclb
and
pop
subl
adc
sbb
cli
push
sbb
outsl
mov
in
ja
jns
iret
faddl
push
loop
pop
leave
sti
data16
inc
xchg
dec
cmp
repz
mov
test
adc
adc
out
in
mov
pop
pusha
cmp
or
out
jle
or
mov
rcr
cmc
pop
xchg
rorb
divl
aaa
icebp
inc
les
adc
setge
jl
lahf
cmp
mov
push
fbld
jge
mov
clc
leave
jp
fs
cmp
lcall
mov
pop
in
rcl
or
popa
sarb
xchg
int
mov
loopne
and
dec
cmc
insb
sbb
into
jnp
fcmovnu
push
int
inc
mov
cmp
int3
mov
rolb
psllq
ret
mov
fisubrs
cmpsl
sub
adc
ss
pop
stos
jmp
dec
jnp
int
mov
xor
loop
mov
loop
mov
lcall
pop
adc
lcall
lcall
xchg
aaa
add
inc
xchg
rorb
pop
push
aas
sbb
jbe
addb
inc
cli
arpl
push
adc
cmp
mov
fildll
and
shrb
inc
out
push
sbb
pushf
xor
out
stos
clc
mov
lods
cmp
push
addr16
popa
pop
clc
idivb
lods
out
frstor
jae
jbe
mov
jbe
mov
mov
rorb
lcall
mul
mov
stc
jge
fistl
dec
mov
in
mov
out
fs
dec
in
cmpsl
sbb
sub
sub
jmp
stos
insb
dec
fbstp
loop
lods
mov
roll
cmp
ficomps
out
sti
repnz
and
icebp
or
loope
subb
add
mov
mov
mov
push
mov
mov
in
dec
js
mov
leave
mov
sub
ret
rcr
or
mov
inc
mov
inc
mov
cmp
std
shlb
cmp
stos
pop
add
mov
out
mov
aaa
test
in
lods
enter
xor
xchg
gs
pop
bound
lock
fwait
ret
arpl
or
inc
push
cltd
cld
jmp
xchg
int3
jnp
cmpsl
cmpsl
mov
test
shlb
lahf
leave
imul
adc
sbb
adc
mov
hlt
jle
or
dec
sti
aad
mov
ret
add
movaps
arpl
push
add
scas
in
mov
pop
sarb
dec
outsb
or
out
dec
jp
mov
xchg
fiaddl
movsl
shl
adc
fisttpl
pusha
test
xchg
outsb
icebp
add
or
lea
out
imul
imul
mov
shll
test
push
ret
lahf
adc
xchg
testl
add
fs
add
mov
inc
call
jmp
or
pop
enter
fdivrl
std
sbbl
clc
roll
add
insb
int3
or
inc
inc
mov
inc
mov
pop
pop
arpl
insb
xchg
cs
or
jns
fwait
pushf
mov
mov
imul
pop
jnp
jecxz
cwtl
bound
ds
movsl
cs
or
adc
mov
dec
bound
movb
andl
addl
shlb
js
push
cli
inc
xor
add
int3
loop
push
test
je
push
dec
jnp
aaa
inc
pushf
lret
iret
adc
adc
jae
xor
hlt
pop
je
psrlw
leave
leave
scas
jae
sti
in
xchg
cli
jne
sub
mov
ret
jmp
hlt
std
sbb
pop
mov
xchg
aam
inc
lods
push
stc
mov
mov
es
clc
jecxz
xchg
add
xchg
mov
cmp
xchg
xchg
mov
mov
adc
into
scas
ret
lods
arpl
mov
pop
mov
jnp
push
cltd
andl
sbb
push
mov
in
repnz
jmp
xor
mov
std
sbb
test
xchg
in
dec
dec
mov
pop
cltd
adc
and
push
rcr
cld
or
mov
sub
nop
cvttps2pi
sahf
xor
fstl
gs
stos
sub
popl
cmpsl
sub
jbe
xchg
in
ficompl
jp
fiaddl
and
xchg
lds
and
cmpsl
int
add
loop
dec
and
dec
pop
xchg
inc
push
pusha
repz
lds
dec
mov
or
push
js
lahf
push
xchg
ficoml
dec
fdivrp
inc
enter
lods
js
arpl
pop
mov
fistpl
dec
jnp
cmp
sbb
pop
call
mov
mov
add
add
mov
inc
arpl
pop
and
fsubrl
aad
pop
dec
daa
stos
aad
dec
std
in
and
pop
lods
pop
cltd
add
lcall
dec
enter
shll
mov
adc
pop
jecxz
adc
xlat
jp
mov
adc
pushf
cmp
add
mov
out
andl
dec
pop
fiaddl
pop
xchg
insb
sbb
cld
mov
out
mov
sbb
mov
mov
xor
daa
xor
dec
jne
push
dec
aam
fldt
jge
mov
ja
scas
pushf
fdivrl
into
stos
or
adc
adc
push
pop
and
out
das
and
mov
das
pop
jmp
popa
fcmovb
jg
mov
adc
push
sbb
fists
cmp
out
adc
popa
movb
jecxz
popl
inc
xchg
fidivrl
mov
fists
inc
xor
out
xchg
jge
cli
mov
addb
dec
mov
icebp
mov
xor
mov
rcr
cmp
sti
rcr
je
lahf
lods
mov
mov
cmp
xlat
pop
pop
and
test
adcl
movsb
mov
insb
jns
std
shrb
test
fwait
cmpsl
or
inc
inc
or
or
and
or
dec
in
int
fstl
add
mov
lret
inc
mov
push
dec
push
imul
pop
cmp
add
mov
and
inc
popa
dec
dec
or
push
push
in
cwtl
or
cmc
jge
inc
iret
rorb
jae
addl
cmp
push
repz
lret
push
pop
xor
aaa
mov
or
out
enter
nop
mov
sbb
mov
es
mov
inc
cltd
jne
test
xchg
mov
sarb
jl
lret
xor
pop
enter
xchg
outsl
movsb
insl
lods
loop
stos
mov
adc
xor
jo
mov
sub
cmp
mov
in
out
xchg
arpl
fsubrl
mov
xorl
inc
xchg
adc
ret
insl
das
out
mov
rclb
shll
pop
and
pop
lea
mov
fwait
jbe
cwtl
mov
rorl
out
clc
xchg
or
pop
out
xchg
xchg
test
push
lea
out
dec
enter
mov
inc
cmp
or
call
mov
gs
cmpsl
fistl
push
push
jmp
sub
push
or
inc
das
cltd
dec
or
and
sub
or
mov
adc
cli
sbb
push
sub
sub
push
dec
bound
inc
inc
js
sub
mov
pushf
sub
inc
repnz
wrmsr
adc
rclb
adc
inc
push
test
fwait
sbb
fcomps
push
xchg
pop
add
inc
test
in
ljmp
enter
sbb
flds
cmp
lods
pop
push
clc
jle
std
out
lds
stos
jo
or
out
imul
addr16
loopne
in
outsl
push
mov
xor
aam
cmp
es
mov
dec
xchg
dec
sti
jl
xor
jne
push
jns
xchg
jb
adc
shlb
cmp
add
insl
stos
or
sbbl
mov
pop
inc
clc
int
lret
push
notb
nop
ja
mov
ror
hlt
mov
cwtl
insl
fisubl
test
addr16
outsl
dec
jp
xor
xor
in
dec
and
fs
jp
lahf
sar
mov
cmp
imul
das
int
inc
in
std
aam
xchg
leave
out
sub
js
nop
or
popa
adcb
adc
sub
out
cmp
lds
repnz
mov
sub
cmpsl
push
inc
xor
jo
mov
adc
repz
mov
cmp
push
in
daa
adcl
gs
call
mov
lods
sub
ret
pushl
xor
sbb
adc
xchg
fs
lock
xor
and
jae
insb
out
int3
fnstcw
loope
jns
cltd
cmp
bound
les
or
stos
daa
nop
inc
adc
fcmovnbe
add
pop
xor
aaa
outsb
cmc
mov
sbb
enter
inc
addl
fistpll
cs
jbe
cmp
popl
pop
lret
ja
ret
pop
cmp
xor
mov
pop
jle
adcb
pop
xchg
xchg
sbb
dec
into
inc
cmp
pop
je
xor
aad
mov
push
dec
dec
sbb
push
movsb
sarl
call
xor
xor
mov
xor
mov
or
std
popa
shll
pop
mov
stc
cmc
fcmovnu
mov
cmp
int
loop
mov
test
ja
inc
es
subb
sbb
fcmovne
movsl
bound
sbb
push
adc
add
pop
in
adc
dec
inc
fidivs
mov
imul
fwait
data16
jmp
mov
cmp
dec
jl
push
add
and
divb
mov
or
test
xor
xor
sbb
test
stc
fbstp
repz
adc
insb
incb
adc
mov
out
pushf
int3
cli
mov
xor
xchg
push
dec
jae
sbb
in
fsubs
es
cmpl
push
sar
aaa
cmpl
inc
inc
stos
fsubrl
cmc
cwtl
cld
dec
dec
rcll
aad
aas
fdivrs
loope
push
xor
xchg
aad
cmc
mov
fs
add
testl
into
out
or
inc
inc
sbb
sub
lret
negl
js
loopne
pusha
xor
cs
or
lods
outsl
xchg
pop
push
cmpsb
jge
cmpsb
xchg
bnd
pop
cld
sbb
dec
addr16
or
imul
cmp
loop
sub
inc
es
inc
mov
pop
andb
push
pusha
hlt
test
mov
push
mov
push
xchg
shrb
dec
add
dec
mov
push
adc
lock
push
pop
sbbl
jbe
dec
ffree
xchg
cld
ljmp
jno
push
and
sbb
int
mov
scas
mov
test
jns
pop
loope
jo
xchg
jle
sub
les
frstor
adc
subb
clc
out
push
xlat
testl
jbe
andl
js
mov
push
mul
mov
ds
out
mov
xchg
cmp
xor
cmpsb
mov
jnp
push
repnz
mov
lret
js
xor
jp
xor
popf
xchg
movsl
aaa
arpl
imul
mov
in
mov
sub
pop
xor
jbe
ret
inc
pop
lret
js
jl
or
mulb
test
dec
je
loopne
inc
call
out
mov
push
mov
enter
stos
fwait
mov
stos
mov
inc
in
test
cmp
mov
leave
jns
movsl
mov
xor
push
mov
ret
dec
loop
mov
mov
xchg
push
add
dec
ss
or
pop
mov
dec
and
flds
cmp
int
in
aaa
dec
dec
cmp
jbe
cld
xorb
sub
adc
shll
stos
das
pop
int
stc
sbb
adc
dec
xor
xor
fimull
jo
sub
rcl
add
xchg
shll
push
pop
push
int
fucomi
cmp
mov
mov
dec
fsub
push
inc
inc
pop
push
lock
call
push
adc
mov
aas
sbb
push
adc
movsl
or
icebp
mov
pop
mov
push
dec
mov
mov
ret
or
into
sub
mov
fimull
pop
dec
es
notb
aaa
mov
or
push
lret
pop
iret
sbb
mov
inc
lds
jnp
sub
ret
xchg
cmp
les
and
or
jbe
je
cli
das
lret
movl
push
mov
xchg
arpl
cli
mov
sub
inc
popf
rol
xchg
jb
push
enter
jae
xor
pop
movsl
jb
pop
adc
clc
loop
inc
cli
notl
notl
mov
ret
sub
push
jp
lcall
cwtl
xlat
jns
sbb
jmp
imul
sub
mov
or
mov
sub
loope
fs
cmp
imul
jns
cmp
push
test
aam
pop
ja
gs
mov
clc
dec
lods
push
ficomps
imul
loop
push
icebp
scas
sbb
and
mov
sbb
jmp
hlt
xchg
mov
out
jmp
cmp
fs
push
jle
xchg
fldt
ljmp
repz
push
cmp
jbe
and
sbb
cs
sarb
jp
mov
add
ljmp
aam
jne
jno
shrb
cmc
call
pop
cmc
aas
xlat
loop
mov
iret
into
push
jae
andl
push
js
ds
xchg
jns
aad
movsb
or
movsb
or
mov
push
adc
aad
or
sti
sahf
arpl
push
dec
add
jl
neg
mov
mov
push
pop
mov
jne
jo
sbb
sbb
mov
push
scas
je
pusha
int
cmp
sbb
sub
xchg
and
pop
popf
cwtl
adc
mov
pop
mov
sbb
icebp
mov
adc
daa
dec
inc
jnp
shr
fs
sub
add
and
mov
mov
dec
mov
xor
lock
xchg
je
jae
xor
daa
or
jge
push
repz
mov
lret
push
incb
in
dec
adc
in
jp
fwait
xchg
fcoml
and
dec
pop
loopne
fbstp
cli
sub
cmp
inc
sbb
or
add
inc
xchg
pop
lret
je
mov
flds
aaa
dec
lods
fidivrl
cmpsl
stos
imul
pop
shll
mov
outsb
add
dec
mov
xchg
add
enter
cmc
nop
jle
cmp
sub
repnz
jle
lret
outsb
dec
mov
mov
jne
fnstenv
je
imul
xor
xchg
out
es
inc
jnp
mov
leave
xchg
imul
and
rcrb
adc
inc
fldl
mov
inc
std
push
dec
lods
inc
pop
jmp
fists
lcall
lods
and
popa
sub
jo
sbb
mov
roll
mov
in
cmp
in
and
add
cs
arpl
mov
push
inc
dec
cmp
cwtl
bound
into
and
cli
cmp
scas
dec
xor
pop
sub
sub
out
and
mov
xor
fisubrl
ss
bound
push
pop
pop
jge
aam
and
push
lock
xchg
dec
adc
dec
insb
out
pop
sbb
and
mov
js
and
movb
in
mov
aas
ja
jmp
stc
sub
push
das
cmc
push
pop
sub
pop
push
push
bound
lret
jg
fcmovnu
pop
and
inc
sbb
ds
stc
cmpsb
je
cmp
adc
stos
cmp
sahf
shll
pop
add
adc
xchg
mov
aas
or
jns
push
mov
cmpsb
rcl
or
out
pop
adc
mov
mov
lahf
push
fidivl
adc
cmp
fwait
loop
lcall
add
mov
bound
scas
dec
xchg
ljmp
testl
mov
sbb
add
jno
push
ret
test
decl
mov
ja
hlt
out
mov
mov
movzbl
sub
pop
dec
pop
comiss
pusha
repz
loop
mov
push
jne
add
imul
pop
nop
xor
cmc
jp
ja
fistl
or
cmp
movsl
push
lcall
in
sub
aad
mov
pop
fistpll
xchg
push
mov
icebp
inc
hlt
mov
daa
push
popf
mov
pop
loopne
movsb
fnsave
mov
mov
inc
mov
test
inc
sti
sbb
mov
nop
cld
push
and
icebp
dec
aam
shr
adc
push
mov
or
std
xchg
adc
jl
mov
cwtl
shl
call
lods
lods
mov
jnp
outsl
cmp
int
les
scas
les
ret
mov
mov
mov
iret
aad
ret
xor
add
ror
pop
push
cld
icebp
and
ret
dec
divb
sbb
dec
add
aam
push
add
jle
stos
addr16
cltd
ror
pop
subl
hlt
mov
in
jns
cmp
ret
push
dec
out
loopne
lret
gs
adc
lock
insb
call
icebp
lds
rcl
cmp
dec
dec
in
jnp
clc
or
cmp
xchg
xor
cmp
dec
ljmp
movsl
rcrl
jecxz
ja
and
hlt
push
outsl
pop
std
das
pop
lcall
pop
jne
clc
mov
mov
xor
jg
stos
push
cmp
les
sti
fcmovnb
enter
insl
pop
cld
dec
adc
scas
sub
lock
sbb
or
outsb
imul
insb
fnstsw
les
xchg
lds
imull
insl
lret
dec
sarl
jns
roll
dec
lahf
out
xchg
aam
andl
cmp
popl
addr16
xor
shl
pop
stc
sub
inc
nop
popf
nop
and
lcall
cmp
push
mov
subl
sbb
pusha
mov
add
add
aam
daa
xchg
out
out
mov
adc
mov
popf
pop
mov
ss
icebp
ror
sub
outsb
or
adc
sbb
movsl
loop
pop
xor
ret
mov
mov
je
je
inc
mov
push
adc
fwait
divl
subl
sahf
xor
loop
cmp
push
add
xchg
jl
icebp
mov
sub
or
pop
rorl
lret
addr16
lret
push
sbb
lahf
aad
or
add
iret
in
xchg
jno
das
into
jns
xor
sar
inc
jecxz
mov
imul
sbb
sub
or
fsubl
lret
movsl
negb
xchg
arpl
sub
sbb
outsb
push
and
fimuls
rolb
sbb
fldl
push
stos
cmp
icebp
pop
bnd
xchg
ficompl
dec
dec
pop
and
add
mov
add
mov
and
pop
cmp
jle
lahf
add
fdivs
bswap
lods
in
mov
call
das
ljmp
mov
adc
ljmp
adc
js
xor
movsl
mov
jle
cmp
dec
jmp
add
int3
inc
cmp
and
fstpt
mov
fs
jecxz
xlat
ret
and
mov
push
add
fcomps
sbb
test
mov
mov
dec
jmp
cwtl
das
push
xor
jnp
les
and
mov
push
movsb
xor
push
pop
repnz
jns
cmp
add
in
cmp
mov
daa
out
enter
xor
fstpt
pop
xor
mov
mov
cmpsb
sbb
leave
and
pop
cmp
inc
mov
fidivs
mov
int
push
pop
fs
hlt
sbb
rclb
mov
pop
xchg
fldcw
fiaddl
lahf
rcll
xchg
sub
rcr
fdivs
jb
lret
mov
add
lcall
inc
fs
mov
mov
repz
dec
jno
jb
mov
imulb
out
push
cmp
jns
fdivrl
roll
pusha
mov
sub
xchg
cmp
mov
xor
jl
or
sbb
cmp
pop
test
sbb
adc
xlat
leave
lcall
lds
cmc
jl
push
jns
arpl
mov
lret
xlat
lcall
pop
pop
adc
cmp
inc
lret
test
add
mov
je
scas
mov
into
mov
cld
cmp
test
pusha
sahf
push
fwait
jmp
xchg
das
mov
jmp
sub
lcall
loope
xchg
inc
adc
dec
cwtl
cmpsl
or
popa
push
leave
test
fs
jg
adc
pop
sbb
push
sub
pop
inc
xor
pop
ds
aad
int3
dec
jbe
push
mov
popf
pop
pop
mov
mov
lahf
popa
stc
out
push
jl
and
push
dec
out
stos
xor
adc
pop
mov
or
sub
std
pop
popa
dec
ljmp
cmpb
adc
cmpsl
loop
and
stos
pop
jle
mov
push
test
ds
or
push
gs
fiaddl
xchg
sub
cmp
jbe
jg
int3
or
call
jnp
movsl
adc
daa
xchg
into
push
ss
push
push
repz
jae
pop
push
xor
roll
popf
mov
cmp
and
jno
cmpsb
in
push
push
cmpsb
mov
dec
addb
or
xor
mov
popa
push
cmp
outsb
testl
dec
fdivrl
hlt
xchg
into
loope
cvtps2pd
xchg
testl
push
pop
stos
dec
test
std
das
ds
mov
ret
out
or
dec
mov
xor
cwtl
lret
lahf
gs
add
sub
cmc
inc
sub
sbb
jge
in
xor
jnp
ret
std
jp
lods
mov
xchg
pop
lcall
dec
ljmp
sbb
cmp
fnclex
xchg
fwait
icebp
jmp
xor
prefetch
or
fdivs
cltd
mov
movsb
mov
imul
push
sbb
sub
mov
xchg
sbb
shrl
rcrl
pop
push
dec
xor
clc
jnp
cmp
rorb
pushf
adc
dec
out
xchg
ret
call
lahf
add
pop
orl
inc
loop
or
jns
es
aad
divb
into
push
cmc
bound
insl
lret
gs
loopne
imul
mov
test
ss
ljmp
and
es
ljmp
insl
pop
push
aas
inc
loope
shll
pop
xor
mov
daa
push
imulb
cmp
jae
adc
sub
ljmp
nop
roll
dec
movsb
jae
dec
je
loop
mov
cld
int
inc
inc
mov
inc
push
jge
movsb
cli
sbb
sbb
jg
push
inc
mov
call
inc
lods
xchg
or
mov
fwait
idiv
add
push
fidivrs
out
mov
mull
iret
xchg
mov
movsl
repz
call
cli
jno
shlb
sbb
adc
jno
les
addr16
or
fnstsw
in
ret
jl
pop
aaa
ds
repnz
lds
jp
in
sbb
mov
push
jmp
inc
test
push
pop
sbb
xchg
insb
lods
pusha
lret
ljmp
inc
add
or
push
aam
adc
sbb
or
xchg
sub
test
ret
jl
lcall
and
lea
push
pop
stos
sbb
xchg
mov
mov
xor
loop
xchg
push
movsl
pop
mov
cmp
lar
jae
inc
ret
clc
push
jle
inc
mov
pusha
push
aas
cwtl
nop
pop
out
jnp
lds
cmpsb
lock
into
testb
scas
ret
and
mov
mov
jno
mov
enter
jne
dec
int
jge
mov
out
enter
sub
lea
insl
cs
insl
jne
stos
les
rolb
inc
xchg
fnstcw
sbb
or
cltd
and
iret
jl
fnsave
lea
fistpl
push
in
scas
add
fdivr
dec
and
add
mov
lret
mov
pop
and
jl
push
scas
sbb
ret
outsl
xor
cld
push
into
sub
dec
int
out
add
mov
push
ljmp
xchg
clc
sub
stos
scas
ja
cli
ds
adc
inc
shlb
int3
cwtl
pusha
push
inc
sti
sub
out
sbb
inc
pop
or
sub
pop
mov
push
and
mov
sub
xor
idiv
lock
aas
test
fsubl
mov
or
jp
inc
lods
or
xchg
call
xchg
mov
gs
andb
push
mov
loope
xor
add
cltd
sbb
pop
jg
pop
out
loop,pn
int3
rorl
or
mov
sub
lahf
sub
ret
xor
stos
scas
sti
xor
fs
jg
cmpsl
sbb
dec
push
sbb
sbb
in
cmc
jmp
xor
fsubr
xchg
cli
loopne
loop
jmp
ds
or
mov
ficompl
pop
push
out
in
dec
out
hlt
pop
and
dec
inc
ljmp
sbb
cmp
insl
repz
push
je
shl
cld
cmpsl
sbb
cmc
xchg
mov
int3
popf
popa
mov
sub
jle
das
loope
repnz
mov
cmp
repz
fimuls
pop
inc
pop
pop
mov
and
les
scas
sub
sbb
xchg
mov
inc
test
xor
or
clc
dec
xor
add
popa
dec
push
push
ljmp
out
mov
mov
add
sub
loopne
cmp
or
fisubs
rcrl
add
or
lret
mov
xor
cs
push
sahf
and
out
xor
repnz
rclb
sbb
push
arpl
mov
dec
ljmp
jl
pop
or
pushf
mov
mov
xchg
sbb
or
cltd
pushf
outsb
push
aam
adc
sub
xor
push
mov
jb
mov
push
imul
mov
leave
sbb
jle
lret
xchg
xor
inc
movlps
std
stos
xchg
adc
and
cmp
pop
and
cmc
das
adc
dec
jp
mov
and
aam
divb
pop
pop
rcrb
in
push
push
or
int
inc
scas
pop
negb
ss
sub
xchg
cmp
sbb
mov
or
jge
sahf
out
xorl
in
roll
push
and
push
dec
lock
or
adc
aaa
enter
jns
sbb
add
inc
sbb
or
xor
push
fwait
xor
sti
mov
mov
jmp
xchg
add
lea
nop
or
in
sahf
jae
lods
inc
lods
mov
out
and
pop
xor
sub
int
mov
sti
lahf
aaa
sbb
jge
ljmp
jle
cs
loopne
or
jnp
aad
out
divb
inc
sbb
add
xchg
xchg
or
and
push
inc
repz
mov
xor
ja
jo
jmp
jp
roll
fimuls
shlb
or
mulb
nop
xor
adc
jb
cmp
insb
xchg
test
pop
or
pop
ficoms
aaa
aas
outsb
stc
push
aad
stos
dec
pop
movsb
pop
mov
aam
push
and
fidivl
insb
pop
dec
mov
rolb
mov
fistpll
jns
xchg
in
movsb
ja
in
test
repnz
adc
jg
in
xchg
sbb
adc
push
nop
out
mov
inc
mov
dec
mov
add
cmp
inc
out
jp
pop
pop
cld
jbe
outsb
ret
pop
das
jno
bound
std
inc
fsubr
daa
mov
xchg
clc
inc
fwait
mov
jo
in
cmp
aad
mov
fcoml
jecxz
out
xchg
in
jns
hlt
xchg
inc
enter
ret
pop
stos
test
pop
jecxz
adc
pusha
jmp
jae
sahf
mov
mov
jne
sbb
pusha
jge
and
clc
fwait
adc
pop
xchg
mov
nop
dec
je
inc
mov
xchg
inc
jnp
adc
lods
adc
in
mov
mov
ret
add
lock
sub
xchg
sub
sub
mov
cmp
cwtl
xchg
mov
push
popf
xchg
or
test
out
dec
jl
push
outsb
inc
inc
in
adc
push
push
insl
ret
xor
ret
add
and
lret
sub
push
lea
daa
adc
pop
movsl
mov
xor
jmp
int
push
sar
cmpsl
jb
jno
mov
test
xor
lods
shl
cwtl
mov
and
rorl
sub
mov
loopne
push
adc
fisttpl
in
mov
pusha
and
imul
xchg
out
sbb
into
inc
shll
addl
sbb
arpl
sbb
cmc
mov
jb
jp
shlb
mov
pop
jbe
xchg
mov
mov
mov
cmp
iret
call
lcall
les
les
and
adc
push
pop
or
inc
sbb
and
btc
jno
test
or
in
sti
test
pop
int
sbb
sbb
adc
jl
ror
and
add
push
in
les
cmp
dec
push
call
push
adc
xchg
xchg
mov
sub
xor
loop
xchg
or
testb
cmpsb
sub
jge
jp
pop
and
sub
dec
xor
mov
mov
sti
mov
mov
repz
mov
dec
fyl2x
pop
sbb
xor
xchg
into
sub
ret
outsb
dec
xchg
mov
lods
divb
push
bound
fwait
mov
mov
jne
adc
or
push
ret
stos
push
loop
test
sub
xor
push
push
lods
shl
jecxz
pop
mov
ljmp
or
push
xchg
and
mov
add
scas
add
inc
inc
mov
call
fstpl
cmc
stos
mov
cld
jb
out
cmovno
test
and
loopne
push
or
out
lea
inc
andb
cmp
cmp
mov
jge
mov
lods
add
and
push
mov
push
or
cmp
dec
push
mov
xchg
adc
lcall
dec
push
adc
or
in
lret
adc
cmp
pop
fsub
push
inc
jp
repnz
xchg
and
xchg
xor
inc
or
cmc
cmp
or
xchg
repz
mov
or
mov
pop
jmp
arpl
ret
ljmp
inc
pop
pushf
sbb
aad
jg
jae
subb
xchg
sub
add
xor
adc
out
ret
cmpb
loopne
lods
xor
jbe
inc
xchg
addl
jmp
mov
dec
lea
pop
int
jg
mov
jge
pop
cwtl
dec
pushf
in
lods
mov
scas
loopne
mov
or
movsb
sub
sbbb
jp
or
jl
ds
subb
movsl
pop
push
aas
loopne
sub
int3
push
aam
add
and
dec
jecxz
adc
xor
mov
faddl
sbb
imull
inc
out
push
mov
add
xor
mov
push
xor
mov
push
pushf
push
mov
int3
scas
sub
sub
xchg
dec
call
aaa
testl
pusha
xchg
push
pop
lcall
scas
xchg
push
les
pop
push
sbb
jbe
into
lahf
cli
mov
andl
enter
int
cld
inc
or
dec
pop
hlt
and
add
and
lods
inc
cmovp
or
clc
sbb
sbb
sub
push
outsb
jne
cld
or
dec
sub
insb
hlt
outsl
dec
sbb
ljmp
fidivrl
rolb
adc
jp
adc
push
or
loope
add
mov
clc
mov
call
loop
push
dec
mov
pop
mov
popa
test
negb
mov
lret
jge
push
test
mov
fsubs
dec
add
cmp
adc
mov
jne
test
mov
mov
movd
push
es
repz
rcrl
lds
scas
xchg
sub
leave
jns
jmp
in
ffree
aam
cmovle
cmp
mov
test
fnstcw
push
mov
sti
sub
test
jp
inc
cmp
jmp
popf
mov
cmp
test
in
in
aas
and
js
and
icebp
mov
sahf
sub
fisttpll
mov
popa
roll
test
inc
sbb
cmp
in
pop
sub
imull
jmp
pop
in
or
xor
push
mov
push
loope
mov
sub
test
sub
mov
je
pop
xor
cmp
pop
js
arpl
dec
popf
imul
jb
xlat
or
push
das
in
dec
jg
cltd
mov
mov
sbb
pushl
lock
arpl
clc
ljmp
or
insl
outsl
rcrl
cld
jns
jmp
sub
mov
dec
jo
add
push
fnstenv
filds
mov
xor
add
pop
or
out
adc
jae
addb
mov
sbb
add
jge
fs
mov
addr16
fstpl
mov
pusha
jmp
or
std
sbb
push
call
cmp
sbb
sub
pop
lock
jge
ret
movsl
xchg
int3
push
rcll
test
xor
ds
cmpsl
in
push
inc
cmp
jl
sbb
sbb
adc
shlb
stos
fists
cmp
xor
insl
xor
pop
repz
add
sub
loop
fwait
inc
fs
adc
fidivs
mov
xchg
cmp
pop
mov
in
movsl
xor
flds
iret
sub
jb
data16
in
ficomps
loop
inc
cwtl
test
xor
mov
pop
das
dec
divl
int
loope
inc
jne
mov
insl
cmp
mov
mov
repz
and
or
sub
push
arpl
inc
pop
xchg
add
fs
mov
mov
sub
jae
out
negb
cmp
pop
and
pushf
jg
in
adc
inc
loope
mov
inc
stc
mov
clc
add
or
inc
jnp
imul
fistps
popf
popa
pushf
adc
idivb
aam
pop
xor
dec
adc
in
repnz
icebp
dec
mov
add
jge
imul
inc
cmp
xchg
ret
mov
sbb
push
icebp
ds
inc
jle
mov
shr
aad
lret
jb
xchg
popl
clc
shl
mov
fcom
jge
iret
jnp
sbb
cmp
xor
hlt
leave
xor
and
mov
mov
pop
das
frstor
fstl
cld
mov
sbb
pop
scas
lcall
dec
cmp
and
fldl2e
and
fs
nop
jp
push
pop
cmp
aaa
negb
loope
push
adc
sub
mov
push
cmp
lods
and
fsubrs
imul
xchg
xor
cli
or
or
cwtl
cwtl
sub
int3
sarb
das
outsb
cmp
dec
ja
jge
cmc
cmp
popa
das
mov
mov
pop
mov
pop
orb
sbb
clc
mov
mov
ret
mov
and
pop
jb
loopne
in
enter
push
xor
test
insl
je
inc
mov
jnp
jmp
aad
out
xor
cmpsb
icebp
rcrl
sbb
loop
adc
or
cwtl
mov
cltd
cmp
adc
sahf
fcoms
out
pusha
mov
mov
fimuls
pop
hlt
xchg
sti
sub
mov
lods
cli
daa
mov
adc
dec
lock
inc
dec
out
cmp
adc
add
mov
js
mov
add
push
xor
das
adc
xor
xchg
lahf
jnp
jo
lret
ja
pushf
pop
mov
push
cmp
ds
loopne
data16
fidivrl
hlt
inc
roll
out
arpl
mov
mov
ja
sub
cltd
xor
inc
and
pop
mov
and
sub
in
shr
pop
fcoml
outsl
add
std
fdivr
mov
mov
or
push
test
push
lcall
or
xchg
lret
dec
or
adc
out
inc
out
mov
cltd
stos
js
jns
lods
or
xchg
cmc
dec
in
dec
imul
ljmp
and
pop
add
or
fcoml
lret
xor
add
cs
mov
in
ss
lret
sub
xchg
popf
fistpl
test
jmp
cmpsb
xrelease
lret
fcmovbe
inc
out
xchg
inc
mov
pop
bound
inc
pop
xchg
push
cmc
xchg
pop
push
sbb
mov
loope
jo
inc
lds
push
push
fisubl
test
pop
es
mov
popf
int3
ds
setge
in
call
into
mov
cmp
xchg
subb
fs
push
les
jmp
and
arpl
sub
jle
sti
stos
in
sbb
out
lds
ja
into
mov
pop
xchg
pop
xchg
cmp
int
xorb
out
mov
sahf
cmp
iret
sub
add
cmp
ds
jae
mov
shll
pop
lea
adc
fistpl
sub
lret
je
add
xchg
sbb
fcoml
jecxz
outsb
gs
jne
popf
mov
add
and
jmp
fcoms
mov
jecxz
push
adc
jbe
xchg
out
insb
ret
icebp
inc
add
in
int3
adc
or
aas
jae
push
fidivl
idivb
movsl
ja
cmp
jo
lea
sbb
xchg
cltd
push
push
dec
or
enter
push
fidivl
clc
xor
mov
push
or
mov
repz
adc
inc
aaa
outsl
es
int3
bound
sub
iret
cltd
out
shl
std
sbb
push
push
repnz
cmc
mov
mov
lds
popf
fwait
ret
movsl
add
or
add
shl
mov
js
cmp
int3
scas
cmp
xchg
movsl
adc
push
mov
xor
cmp
shr
ficoml
lods
jo
xor
shll
sbb
clc
or
ds
mov
or
jns
jmp
mov
aam
loope
arpl
cmp
mov
dec
std
mov
or
rep
enter
sahf
cmp
or
jne
js
push
stc
icebp
andb
pop
push
sub
sbb
push
mov
popf
dec
aaa
int
andb
sub
sub
lcall
aaa
lahf
pop
test
jp
sbb
lret
lahf
push
dec
ds
mov
xor
es
dec
in
bound
insl
orl
into
jne
nop
push
shl
call
mov
filds
xchg
ja
adc
sbb
fsts
js
xchg
inc
push
aam
jl
jge
xchg
je
ds
dec
outsl
shl
loopne
test
lock
mov
mov
jle
sub
stos
xchg
mov
xor
out
cli
and
jmp
scas
xchg
in
ret
cmp
add
jmp
jns
das
cmc
jbe
inc
push
pop
ljmp
jmp
lods
mov
into
js
mov
push
jg
pop
mov
add
mov
push
xchg
stos
enter
adc
push
dec
xor
stos
adc
sbb
jge
or
cwtl
cld
out
push
push
adc
in
add
stos
or
push
xchg
popa
stos
push
inc
push
xor
mov
in
push
push
test
pop
test
mov
cltd
loope
cmp
iret
add
int
cltd
and
dec
call
lods
stos
jecxz
adc
rorl
xchg
inc
pop
addb
xchg
sbb
xchg
dec
sbb
dec
ss
pop
icebp
lea
jle
mov
mov
mov
jg
xor
xor
fnstcw
mov
add
push
outsb
iret
shlb
xor
sbb
test
sahf
leave
mov
sahf
or
mov
xor
mov
pop
cmpsb
push
imul
cli
shlb
cs
cmp
xchg
movsl
mov
iret
push
negb
add
and
push
dec
in
std
ja
jno
pushl
loop
sbb
cmpsb
popf
test
in
adc
lods
push
inc
push
push
gs
xchg
xor
das
mov
movsl
mov
cli
out
jp
push
cmp
lods
nop
jbe
popf
cmp
daa
xor
pop
push
push
shl
in
dec
mov
adc
test
orb
imul
fadd
imul
in
mov
pop
xchg
sbb
outsb
scas
xor
and
pop
inc
jbe
andl
xchg
std
push
out
mov
mov
movsl
popf
stc
jo
and
subb
pop
lcall
xchg
dec
movsb
pop
push
popf
push
push
out
or
pop
lods
push
ds
push
es
adc
cmp
add
mov
in
sbb
sub
and
xor
pushf
clc
loop
js
jae
xchg
mov
cmp
test
lahf
cld
pushf
jl
std
mov
jo
scas
shrl
jbe
test
lret
mov
jmp
ret
dec
mov
mov
das
cmp
andb
in
jle
sbb
leave
aaa
jnp
pop
jle
mov
sub
xor
loope
adc
idivb
jbe
jle
xor
and
aaa
scas
imul
es
or
mov
and
xchg
mov
ret
push
out
push
lods
or
in
into
sub
adcb
cmp
sub
mov
add
out
sub
sub
stos
pop
mov
popa
pop
das
pop
mov
inc
ljmp
sub
push
stos
sbb
or
push
push
iret
sbb
cmp
roll
lea
out
idiv
pop
jo
mov
xchg
and
jnp
xchg
je
hlt
cs
pop
imul
hlt
enter
out
inc
rorb
mov
repz
pop
adc
pop
cmp
adcl
outsb
out
pop
push
dec
rorb
xchg
das
je
addl
loop
xchg
sub
or
cld
in
push
sub
xchg
jo
ds
ret
xchg
shll
sbb
jp
fcomi
sti
adc
inc
pop
adc
xor
mov
adc
and
jle
cmp
add
xchg
outsl
popa
lahf
and
add
xlat
addr16
adc
cmp
jp
aad
dec
pop
push
and
faddl
in
aaa
out
mov
js
push
cmp
int
test
cmp
inc
mov
ret
sarl
and
movsb
and
mov
into
push
enter
push
movsb
mov
and
push
loop
out
imul
cmp
movsl
mov
popa
inc
and
add
mov
cld
adc
push
fildl
insb
jg
add
test
ret
fdivs
je
int3
mov
push
es
fistl
and
dec
test
pop
negl
jl
fsubs
pop
pop
lahf
mov
dec
out
mov
adc
test
sub
sbb
add
sbb
sub
dec
test
out
loop
loop
push
xchg
dec
das
iret
mov
sub
jo
scas
jge
nop
lcall
roll
mov
sbb
xor
push
je
jnp
loop
inc
movsb
add
testl
test
and
or
pop
inc
ja
scas
aam
repz
inc
iret
xor
push
adcb
adc
pop
mov
jg
push
mov
xchg
adc
or
loopne
jo
in
dec
nop
push
jbe
fisubs
fimuls
insb
push
sarb
aaa
adc
cmp
dec
incl
mov
push
mov
push
inc
sub
inc
xlat
xchg
pushf
push
push
repnz
cs
fs
fnsave
jle
xchg
andl
fs
adc
les
out
cli
test
or
lea
dec
and
inc
movsb
fcompl
add
pop
cmp
aam
mov
push
jle
pop
or
in
movsb
rcrl
cmp
mov
add
push
push
dec
sbb
push
mov
pop
iret
or
mov
into
xchg
rorb
ja
xchg
fistps
or
sub
iret
pop
jmp
inc
mov
es
xlat
outsl
mov
sbb
sbb
in
test
xor
cwtl
inc
inc
cmp
mov
push
mov
push
jne
inc
mov
or
nop
in
mov
sub
test
jecxz
pop
sti
pushf
xchg
enter
in
pushf
and
mov
in
mov
ficompl
ljmp
mov
push
jae
cmp
push
sbb
mov
dec
jbe
pushf
cmp
sti
mov
dec
ja
gs
mov
fsubp
cmpsb
dec
repnz
cli
test
in
adc
out
data16
sub
jnp
insb
cli
cmc
pop
adc
add
mov
pop
fstl
out
push
jne
mov
scas
addr16
push
mov
pop
inc
insl
rcrl
jmp
jne
rcrb
pop
mov
push
or
adc
imul
sbb
stos
lea
xor
or
out
ljmp
adc
jmp
inc
adc
mov
pop
stc
dec
and
and
inc
out
fisttpl
and
push
test
bound
icebp
jno
iret
pushf
leavew
sub
dec
std
aam
mov
cmc
mov
inc
movsb
pop
roll
and
bound
adc
ret
inc
test
repnz
xchg
sbb
sub
ss
loope
sti
sub
or
dec
insl
dec
fisubrl
movsl
push
xchg
push
pop
push
xchg
push
mov
dec
cmp
push
ficoml
divl
or
movsl
and
jb
movsb
pop
sub
push
flds
daa
lret
std
and
xchg
mov
stos
mov
push
jmp
mov
hlt
shl
push
aaa
dec
or
fsts
scas
lds
and
movsb
cld
jbe
sbbl
pop
or
mov
xrstors
adc
or
inc
pop
pop
lea
in
sub
arpl
and
shll
mov
ret
pop
mov
mov
pop
ret
outsb
stos
lods
add
repz
pop
mov
cld
jl
es
xchg
rolb
cli
loopne
mov
add
or
add
jp
sub
fidivrl
inc
xchg
ja
push
daa
inc
sub
stc
jne
xor
sbb
mov
jns
adc
hlt
andl
push
fmull
or
mov
rcrl
adc
scas
clc
sub
push
xchg
fs
sbb
jmp
or
shll
cmp
inc
stc
jne
lds
pop
adc
scas
xchg
fisttpl
lret
and
mov
mov
push
rorl
pusha
lahf
adc
cmp
inc
sbbb
and
ljmp
repnz
xor
push
and
lret
insb
ljmp
or
adc
jo
insb
xchg
fstpl
das
push
cmc
loopne
push
out
movsb
ficoml
loopne
jg
cmp
packuswb
es
xchg
xor
jecxz
faddl
es
push
andb
sub
scas
jg
lcall
mov
add
xchg
xor
or
xchg
sahf
sub
out
mov
mov
and
adc
mov
add
cmpsl
sbb
mov
lret
test
aam
sbb
inc
add
mov
jmp
in
fidivl
outsl
jg
mov
adc
in
jle
xor
and
add
shl
inc
push
mov
cld
mov
sbb
xor
stos
jnp
dec
sub
iret
xor
bound
scas
cmp
jg
add
out
adc
adc
fisubl
pop
add
xchg
push
push
aam
nop
sub
imul
js
outsb
fsubrl
int
jge
push
cs
adcl
lret
je
ss
imul
cmpsb
enter
test
dec
mov
mov
mov
hlt
lods
imul
adc
insb
sub
iret
mov
and
mov
pop
insb
mov
pop
mov
insb
leave
ss
mov
mov
xchg
push
xorl
out
cld
pop
mov
sahf
push
ljmp
fidivrs
inc
out
dec
out
mov
xchg
mov
shll
negl
xlat
scas
popa
fdiv
cmp
lock
ljmp
xorl
push
jl
shlb
idivl
xchg
cmp
dec
sub
cltd
dec
lods
fcmovne
fimull
sbb
enter
jecxz
jno
sbbl
add
pop
fsub
mov
push
loope
stos
shlb
es
loop
loope
mov
or
fcmovnbe
inc
xor
mov
fsubs
jge
sbb
sbb
pop
data16
xchg
inc
sti
sbb
shrb
out
pusha
nop
pop
pop
or
stos
repz
sub
stos
fdivrs
popa
sahf
mov
push
outsb
push
and
shlb
mov
dec
insl
std
dec
add
xchg
fcom
ret
fisttpll
pop
out
pop
out
dec
xchg
mov
push
xchg
imul
movsl
fwait
inc
add
test
fnstsw
rclb
bound
test
movsb
pop
adc
repz
cmpsl
pop
imul
xchg
imul
pop
and
scas
cmp
mov
mov
aaa
push
lcall
ss
cld
jnp
xchg
in
je
adcl
lahf
sub
mov
xchg
imul
sbb
int3
add
push
das
sub
and
cli
sti
jg
mov
test
cwtl
sbb
loopne
fisttpll
pop
test
rorl
aaa
or
push
sub
lds
inc
enter
loope
stos
iret
test
push
sbb
dec
mov
je
push
cmpsb
ret
lret
mov
cmc
adc
call
daa
sbb
and
adc
call
or
jmp
mov
ss
nop
call
and
cmp
leave
lahf
insb
xchg
dec
jnp
lcall
fcomps
sub
sbb
rcrl
add
test
sbb
pop
out
cmp
outsl
and
mov
sub
repnz
pushf
xchg
push
jg
xor
das
adc
cmp
pop
cmp
push
push
mov
mov
gs
or
lea
aam
pop
dec
mov
test
jnp
movsl
test
xchg
lahf
adc
jae
push
imul
data16
lret
js
sbb
xchg
ja
outsl
jle
lcall
or
fldt
jne
pushf
mov
lret
and
inc
movsl
and
sbb
and
push
jp
je
mov
xchg
jne
loope
mov
sahf
mov
int3
sub
mov
cltd
imulb
imul
fdivr
add
push
jno
mov
mov
inc
add
andb
pop
pop
stos
jns
out
dec
addb
add
out
aaa
stc
push
pop
inc
test
in
cwtl
jecxz
xor
jle
sbb
leave
int
pushw
xchg
or
cld
es
inc
mov
mov
jp
pop
dec
mov
adc
and
lahf
lahf
and
das
faddl
jle
cmp
loope
in
mov
daa
dec
rcr
fidivl
mov
xlat
push
inc
test
pop
negl
xor
jge
adc
pop
or
lock
adc
mov
sub
and
adcb
out
push
sahf
or
push
or
xor
push
ret
mov
and
jae
cmp
xor
pop
into
add
iret
sahf
mov
sub
outsb
repnz
loopne
fs
cmp
int
leave
enter
les
js
pop
inc
inc
pop
shrl
xchg
inc
inc
lds
cmp
pop
pop
fisubl
ret
lods
and
inc
jg
ds
bound
mov
mov
cmp
or
ret
xor
dec
add
or
ror
mov
movsb
xchg
jle
scas
jmp
lds
int3
cmp
push
inc
cmpsb
testb
jne
fwait
add
andb
adc
in
sbbb
and
pop
imul
mov
jo
js
in
ret
sarl
jmp
or
das
mov
pusha
push
inc
jmp
popf
movsb
cmp
lods
xchg
lods
std
jmp
cmc
mov
js
fistpl
mov
mov
ffree
unpcklps
lahf
mov
or
scas
test
fst
and
add
cmp
sub
aad
leave
xor
ud0
sahf
repz
popf
sub
and
shll
or
inc
jmp
ljmp
push
fld
inc
jns
into
push
push
pop
add
push
dec
add
inc
lret
enter
push
and
mov
enter
imul
ja
inc
int
xor
shll
aam
ss
andl
xchg
jo
rcrb
sub
lret
jle
push
es
sub
xchg
mov
mov
fisubs
mov
xor
jae
leave
dec
mov
xor
adc
clc
cld
xlat
or
cmpsb
add
add
push
mov
mov
adc
in
test
cmc
iret
rorb
cmpsb
add
nop
mov
cmp
decb
shrl
jl
add
mov
xor
dec
pop
out
push
ja
sti
push
mov
xchg
xor
addr16
adc
mov
push
sub
jb
rcll
fcoms
popf
jmp
shl
divb
inc
adc
cmc
and
js
iret
xchg
jo
fldt
fisttpl
fcoml
movsb
jb
cmp
xchg
pop
pop
pop
nop
mov
test
add
sbb
popf
push
xchg
imul
enter
jae
mov
push
or
cmp
es
jns
xor
cmp
add
jg
sbb
mov
cmpsb
cs
inc
icebp
loop
push
insb
andb
jmp
loope
hlt
movsb
test
push
stos
dec
js
test
sub
adc
mov
in
andl
lods
xchg
rorl
repz
add
test
xchg
stc
popf
push
into
and
inc
lods
cmpsl
stos
jecxz
and
xchg
xchg
xchg
pmuludq
jns
subl
sbb
mov
ja
mov
dec
cltd
dec
std
xor
push
out
or
push
rcr
mov
push
add
stos
jmp
dec
push
mov
insb
dec
mov
pushf
or
repz
push
sub
inc
or
fisttps
pop
loopne
xor
in
or
jb
mov
xchg
loop
fildll
xchg
pushf
lea
test
jnp
dec
xchg
mov
sbb
or
mov
dec
fld
ret
mov
inc
incl
movsb
inc
jb
and
mov
scas
jg
pushf
mov
ja
mov
mov
fsts
push
inc
dec
in
inc
jmp
outsb
xor
xor
out
idivb
dec
and
leave
dec
cmp
leave
jne
cs
shll
in
add
cld
les
push
insl
push
pop
retw
or
xor
fnstenv
in
aam
fmul
fwait
and
ja
inc
in
mov
jle
iret
outsb
dec
divl
lret
outsl
stos
inc
out
sbb
mov
fistpll
je
fcomps
ret
jb
inc
subl
xor
imull
scas
rcrl
xchg
fwait
repz
xor
cmp
mov
data16
ds
sahf
ficoml
inc
sarb
movsb
fwait
add
push
xchg
sub
mov
sar
popa
gs
sub
pop
lret
stos
into
sub
test
mov
cmp
mov
ficompl
cmp
add
push
xor
cmpsl
cld
aad
cmp
xchg
inc
fisubrl
js
in
cli
imul
imul
cwtl
in
shl
push
pop
ret
ret
inc
divb
sub
mov
pusha
sbb
pop
mov
inc
popf
xchg
pop
mov
sub
cmp
nop
ret
cs
mov
mov
enter
and
fisubl
pop
int3
js
jecxz
xor
and
in
or
ljmpw
loop
imulb
out
cltd
dec
fs
sub
pop
fimuls
xlat
dec
mov
out
lret
xchg
xor
mov
clc
adc
jbe
inc
xchg
movl
push
int
fdivl
insb
xchg
les
adc
cmpsb
mov
or
xchg
push
imulb
loope
jae
out
push
test
sub
fstpt
mov
ljmp
sbb
pop
mov
pop
enter
mov
push
movsl
mov
dec
mov
fsubs
dec
cltd
and
mov
adc
aas
lods
pop
popa
ljmp
std
xor
and
pop
dec
xchg
repz
js
imul
test
mov
push
out
xor
push
mov
jno
fisttpl
out
or
call
loope
push
sbb
dec
scas
je
mov
jne
repz
cmp
fisttps
leave
ficomps
mov
call
das
sahf
aaa
xor
fcmovne
and
js
fnstsw
outsl
xchg
or
ljmp
inc
sahf
jns
andl
inc
fs
cmp
mov
out
js
inc
mul
leave
sub
and
xor
sbb
fnstcw
and
lds
mov
mov
dec
loope
mov
inc
inc
ja,pn
adc
pop
inc
or
scas
mov
sti
loop
and
adc
push
nop
ret
aad
fsubp
mov
rcl
and
pop
test
add
xlat
mov
pop
mov
add
mov
or
xchg
cmp
mov
repz
mov
mov
mov
sahf
je
sbb
cltd
xchg
sbb
sub
cld
adc
sarb
add
add
jno
and
mov
mulps
clc
pop
pop
fcoml
inc
mov
cltd
subb
adc
mov
sbb
lods
jb
jnp
test
ret
enter
pusha
mov
push
mov
fs
lret
cld
fnstenv
sbb
in
sub
es
cmp
imul
test
adc
xchg
inc
push
add
and
mov
and
jmp
pop
mov
lock
pop
sub
out
add
ret
sbb
xchg
adc
and
repz
je
sbb
ret
ja
dec
out
into
addr16
out
sub
jl
out
pop
out
pop
test
push
xor
out
xchg
test
jae
lods
scas
xor
roll
idivb
aas
in
stc
and
nop
sub
mov
cmp
rol
cmp
mov
cmc
xorb
xchg
push
add
pop
clc
enter
in
lahf
test
push
jle
lea
das
lcall
inc
pop
push
adc
adc
and
add
arpl
loop
or
aam
fisubs
rcll
xor
sub
pop
popf
mov
xor
jno
rcll
inc
shlb
jmp
add
es
or
pop
cld
xlat
out
adc
out
fcmovb
aad
mov
inc
imul
xorb
pusha
pop
imul
or
or
sub
push
mov
xor
int
movsb
iret
out
or
cltd
xchg
popf
icebp
dec
xchg
addb
aas
fidivrl
jge
mov
cli
mov
sbb
pushf
mov
fmuls
cmp
xor
enter
fcompl
cwtl
scas
cmp
push
or
sub
jmp
aaa
ret
jne
pop
and
mov
ds
dec
jns
push
lods
adc
and
adc
mov
cmp
ds
arpl
jns
hlt
or
cmpsl
outsl
imul
out
sbb
sub
add
insb
sbb
int3
stc
mov
lahf
xchg
pop
pop
push
push
pop
sbb
xchg
clc
out
hlt
imul
out
in
shll
shlb
mov
add
insl
cmp
call
and
subl
into
mov
lea
repz
outsb
sub
jns
or
adc
arpl
xor
fstps
lcall
cs
fmull
pop
sub
lret
push
mov
sub
and
std
aad
adc
push
outsl
xor
or
inc
int3
sub
and
lock
negb
movsl
mov
xchg
cmp
xor
jp
jmp
std
jle
xchg
dec
imul
cmpsb
jb
or
add
fcmovnu
bound
adc
mov
mov
pop
faddl
loop
pop
jno
andl
loopne
test
sub
jo
push
mov
insb
in
std
push
in
mov
or
jl
out
jno
cs
and
cmpsb
sbb
push
xor
jmp
and
cmpl
and
adc
jae
push
dec
orb
and
adc
inc
fwait
jle
sub
xchg
dec
mov
jns
mov
fisubrs
sub
sub
cmp
mov
cmc
pop
mov
test
jg
mov
mov
sub
sbbl
cli
sbb
pop
outsb
dec
insl
andb
imul
and
push
pop
jnp
add
popf
sbb
adc
ret
mov
dec
lock
mov
push
lret
sbbb
mov
xor
popa
fwait
fs
lahf
cmp
adc
push
clc
test
xchg
pop
push
pop
je
bound
lea
cld
push
cs
inc
push
int3
cwtl
xchg
out
ljmp
jb
sbb
inc
dec
repnz
shr
mov
ficoml
pslld
xchg
shlb
lcall
cltd
mov
mov
ja
aas
insb
sub
push
adc
shll
lahf
pop
pushf
lret
jecxz
repz
jmp
push
insl
and
pushf
sbb
and
mov
mov
aaa
and
push
sahf
je
push
es
sub
sarb
sub
xchg
mov
add
mov
mov
aaa
add
fildl
addr16
or
add
mov
call
push
mov
inc
add
divb
sub
cmp
pop
ret
stos
add
and
ljmp
adc
out
and
inc
cmpsl
cmpsl
add
repnz
sub
jecxz
pop
mov
xor
out
xor
sar
mov
call
inc
pop
mov
xor
icebp
stc
inc
lods
insb
out
adc
mov
nop
out
ret
cmp
lds
mov
fstps
dec
std
mov
rcrb
sbb
add
mov
mov
mov
scas
cmp
lret
xor
lods
orb
inc
jecxz
adc
inc
clc
sarl
leave
push
insb
andl
bound
xchg
add
orl
aad
sbb
out
or
dec
nop
push
lock
addr16
subl
mov
mov
fsubrs
cmpl
into
pop
xor
cmp
jmp
out
shrl
pusha
pop
dec
mov
in
out
pop
sub
in
psllq
cld
jp
sbb
call
ret
mov
rcl
outsl
mov
mov
outsb
jle
mov
movl
pop
cmc
shr
xchg
cmp
cld
mov
mov
and
lahf
aam
out
push
loopne
push
arpl
enter
mov
ljmp
xor
sub
xor
sub
clc
mov
sarb
and
in
lods
mov
pushf
add
das
outsb
popf
rclb
stos
in
mov
mov
hlt
out
jle
add
daa
mov
js
cs
outsb
ds
adcb
cmpsl
cmpsb
mov
push
mov
mov
movsb
arpl
fdivrs
mov
icebp
lea
in
cmpsl
xchg
and
arpl
push
mov
fwait
insl
and
gs
js
jle
adc
xchg
cwtl
adc
push
fs
mov
fwait
pop
xchg
js
xor
inc
sub
add
mov
xor
pop
pop
mov
mov
dec
rolb
pop
xor
addr16
movsl
inc
test
inc
jmp
out
cmp
idivb
fdivrs
fisubrs
cmp
mov
rol
shr
sti
ficoms
xor
cs
ret
mov
pop
insb
test
sub
add
inc
and
and
or
test
jle
push
sub
add
xor
out
and
xchg
outsl
shlb
add
mov
pop
cmp
push
jg
pop
inc
and
lret
push
sub
jge
mov
xor
fbld
jns
xchg
int3
insl
sti
shl
add
sub
ret
and
rclb
cmpsb
addl
stc
sahf
mov
add
inc
out
mov
add
jl,pt
cmp
jle
ds
or
cmp
call
andb
mov
ja
sub
pop
xchg
mov
add
rorb
xchg
jns
mov
ljmp
dec
scas
jae
lods
dec
shll
movsl
cmp
outsl
mov
jne
unpckhps
jle
scas
andl
dec
jg
fidivl
ss
pushf
mov
pop
inc
arpl
aam
in
mov
inc
or
adc
mov
cwtl
test
sbb
or
incl
mov
push
stc
push
and
mov
and
mov
pop
jge
and
hlt
xor
lods
movsl
push
mov
cmp
jns
bound
adc
mov
mov
dec
mov
and
push
loop
jbe
push
inc
repz
adc
mov
and
insl
or
xchg
inc
out
sub
cmpsl
iret
gs
les
lds
pop
out
iret
out
push
repnz
ja
mov
fisttpl
ror
jnp
sbb
rcrl
repz
sub
mov
fs
pusha
and
jns
adc
jmp
sub
enter
sub
push
lcall
mov
xor
add
fadds
outsl
mov
mov
mov
mov
loop
pop
dec
push
outsb
bound
divl
sub
int
ret
mov
sahf
neg
es
sarb
rcll
push
jnp
lods
sub
stos
xchg
add
into
sbb
add
ljmp
push
mov
dec
push
in
mov
add
xchg
inc
pop
inc
sub
push
push
mov
and
fldcw
dec
mov
lods
push
inc
jge
dec
and
loop
icebp
or
xor
push
dec
nop
pop
or
mov
fsubs
and
aad
mov
les
dec
jecxz
test
icebp
lahf
and
scas
mov
lods
inc
xchg
lret
loopne
mov
mov
push
pop
aad
shll
add
test
mov
mov
andl
dec
sbbl
fstpt
sub
fwait
mov
in
daa
adc
xlat
mull
test
test
mov
mov
lods
insb
out
adc
cmp
xchg
dec
adc
mov
and
punpcklwd
add
repnz
xchg
mov
lahf
scas
push
jmp
and
pop
xlat
push
mov
sahf
in
xchg
xor
push
sub
xor
test
ror
jge
sub
in
pop
push
push
nop
or
push
push
daa
std
xchg
sbb
pop
jmp
or
cwtl
push
mov
gs
scas
popw
push
subl
imul
out
cld
jnp
cltd
mov
mov
dec
hlt
push
leave
data16
ret
scas
mov
stos
scas
add
out
cmp
xchg
ljmp
daa
fwait
into
mov
das
arpl
leave
xor
fwait
fwait
and
or
negb
notl
fistpl
ret
fnstsw
test
add
sti
aam
push
mov
test
inc
jbe
pop
in
loopne
fidivrl
aas
mov
sti
xchg
std
jp
xchg
cli
pop
pop
pop
mov
adc
pop
xchg
ss
xchg
push
testb
fwait
mov
sti
inc
in
loope,pt
decl
inc
stos
add
leave
insl
stc
ret
ja
inc
repnz
in
adcb
adc
and
xchg
lea
vpsrad
fld
daa
int
lahf
leave
inc
dec
call
aaa
inc
aas
ds
dec
mov
dec
jmp
mov
gs
mov
and
push
mov
movsb
repz
jecxz
jbe
lahf
xchg
movsl
out
shll
scas
das
ret
rcrl
test
stc
pop
cs
popa
fcomps
sub
sbb
das
jmp
pop
fstps
inc
xor
cld
cmp
stc
pop
pop
mov
pop
xor
cmp
mov
gs
loop
andb
jae
or
inc
sbb
xchg
jns
add
cltd
cmp
add
insb
lret
imull
sahf
je
bnd
inc
add
stc
rep
test
jge
inc
lcall
inc
movsd
add
pop
push
pop
xchg
mov
jge
jl
sti
int3
pop
dec
cwtl
fildll
inc
scas
rorl
push
pop
arpl
lret
adc
enter
or
stos
mov
dec
pop
xchg
and
xchg
xchg
mov
jne
sbb
or
js
sub
pop
in
mov
lods
repnz
addr16
cld
dec
or
shll
inc
xchg
insb
inc
mov
test
push
jne
pop
add
inc
inc
jecxz
add
loope
popa
scas
jne
leave
sarl
inc
clc
js
dec
push
mov
mov
decb
and
insb
mov
jge
cmp
inc
scas
or
xorl
inc
inc
add
je
xor
ljmp
jne
push
mul
xor
cmp
mov
cli
test
cmp
jne
mov
pop
pop
out
mov
push
adc
dec
lret
xchg
pop
mov
mov
aaa
icebp
lods
xchg
dec
and
or
rolb
and
mov
pusha
pusha
ret
call
sbb
sub
xor
mov
icebp
jno
xor
cmp
or
jb
jmp
aas
jno
pop
pop
cmp
in
xchg
sti
clc
pop
repz
dec
mov
pop
add
xchg
cwtl
dec
lcall
imul
lods
pop
dec
scas
orl
push
xchg
pop
lcall
repnz
pop
dec
ds
sbb
es
jb
cmp
rorl
jns
aam
mov
scas
push
push
jg
or
hlt
mov
dec
bound
mov
sbb
aad
je
or
insb
dec
and
lret
inc
jge
mov
imul
test
push
cmp
out
adc
daa
sbb
jg
push
outsl
adc
loopne
mov
mov
in
movl
dec
mov
mov
dec
dec
iret
shll
iret
repnz
ja
xchg
sti
inc
bnd
movsb
dec
push
mov
adc
das
and
xor
add
aas
out
stos
mov
jb
mov
fimull
or
ljmp
subb
ror
push
add
mov
out
inc
jnp
mov
aas
push
mov
pop
pushf
cmp
leave
xchg
pop
pushf
leave
aaa
ret
cmpsl
test
dec
leave
add
test
sub
cmp
push
sti
xor
adcw
push
xor
leave
dec
stc
dec
dec
cmpsb
dec
in
loop
negb
sub
cmp
in
pop
mov
fnstcw
pop
int
xchg
push
add
scas
andl
xchg
jns
pop
or
xor
push
jge
add
mov
test
sub
mov
adc
adc
jno
cli
fdivs
outsb
mov
adc
in
xor
in
inc
push
fcmovnb
lahf
lahf
mov
sub
fwait
jmp
ficomps
cmpsb
stc
shrb
loopne
jle
flds
jp
pop
xor
imulb
and
sub
lock
les
mov
push
and
test
xor
pop
cmp
mov
xchg
lcall
dec
lret
pop
sub
js
xchg
fbld
int3
aaa
xor
cmp
bound
sbb
and
or
movsb
idivl
cmp
lock
mov
add
movsb
lret
mov
xchg
cmp
fwait
push
clc
push
push
sahf
push
aas
leave
jl
jne
int3
dec
dec
dec
sub
movsb
mov
test
leave
and
sbb
sbb
adc
jae
cld
cmpsb
jecxz
xchg
insl
sub
popl
scas
cmp
mov
fwait
int3
mul
fmuls
xor
inc
mov
aaa
or
outsl
adcb
dec
iret
inc
mov
xchg
je
sub
pop
inc
mov
jb
out
push
jle
mov
push
out
std
cltd
loop
mov
and
imul
jae
pop
inc
xchg
aam
lahf
push
fmull
data16
or
je
pop
stc
jb
mov
ja
in
das
and
xchg
adc
lods
xchg
sti
sub
dec
or
out
test
sbb
add
xor
mov
push
testb
adc
pop
pop
mov
lcall
xor
mov
cltd
jp
fnsave
fwait
ret
psubusb
jmp
xor
insb
fwait
dec
ljmp
in
jg
jmp
addb
sbb
bnd
fldcw
out
jno
add
pushf
aad
push
flds
xor
ja
mov
mov
fucompp
fldenv
ja
mov
popa
movsl
stos
dec
lcall
mov
dec
and
jnp
mov
arpl
nop
push
jp
les
mov
emms
lods
add
hlt
pop
fisttpl
fnstsw
xchg
leave
inc
hlt
push
imul
test
sti
pusha
loop
imul
lods
push
pop
push
mov
pop
mov
mov
cmpb
inc
xor
push
fld
mov
xchg
pushf
cwtl
mov
push
in
daa
stc
loope
mov
fsubp
aas
jle
in
out
xchg
pop
add
sbb
push
mov
push
push
mov
fnstsw
xchg
xchg
frstor
lea
mov
sbb
xor
and
mov
aaa
cmpsb
dec
sahf
pop
das
inc
xor
cwtl
imul
fidivs
pop
sti
out
pop
dec
outsl
arpl
pop
mov
mov
push
loope
xor
aad
mov
xchg
ret
xchg
aas
xchg
dec
ud0
fldt
push
movsl
call
cmp
push
mov
cld
int3
ret
xchg
xor
pop
fisubl
sub
push
sbb
xor
add
inc
movsl
loopne
pop
mov
mov
dec
aam
jmp
dec
loope
into
leave
mov
add
arpl
in
mov
inc
scas
xchg
repz
clc
jge
cmp
imul
sti
pop
pop
adc
or
xor
jns
inc
ss
adc
or
std
leave
lods
fdivrl
les
stc
or
fwait
dec
adc
inc
add
dec
fcomip
fstl
loope
movsb
xor
aad
inc
gs
push
cli
leave
shr
sbb
sbb
jae
ffreep
pop
mov
incb
push
sti
mov
push
and
imulb
xchg
jg
jbe
fcoms
lcall
test
in
push
mov
cwtl
jl
arpl
out
loope
imul
mov
and
lcall
test
mov
cli
cmp
cmp
dec
jb
cld
pop
push
pop
ljmp
out
lret
test
out
jno
out
add
pop
lock
insl
or
addb
test
and
fwait
loopne
out
cmc
fcmove
or
call
push
nop
xchg
mov
fsub
mov
mov
push
repnz
fidivrs
push
xor
mov
pop
or
mov
sahf
dec
ss
mov
dec
xchg
push
push
pop
iret
int3
mov
dec
aad
xchg
xchg
addr16
stc
cs
add
xchg
shll
mov
mov
push
jmp
divb
rorl
mov
xor
or
stc
leave
call
scas
repnz
pop
stos
pop
lret
pop
enter
sahf
sub
mov
add
mov
ret
sub
pop
jb
cmp
adc
in
out
movsl
cltd
inc
cltd
ret
sbb
lods
inc
scas
pop
dec
cld
sbb
pop
mov
or
or
mov
fwait
nop
mov
scas
jb
orb
sbb
push
jmp
xchg
mov
cmp
pop
arpl
out
shr
mov
xchg
push
addl
and
mov
sbb
insb
sahf
adc
dec
mov
arpl
and
insl
mov
cmp
or
adc
test
repnz
enter
fs
pushf
jmp
mov
inc
cld
cmpsb
adc
or
arpl
lret
popa
addr16
incb
inc
jae
inc
ficompl
mov
in
enter
inc
js
jg
add
xchg
lret
nop
out
push
lahf
push
mov
sarl
fimull
push
jb
mov
pusha
fildl
lods
insl
push
xchg
jb
sbb
sti
jg
xchg
add
mov
adc
stos
push
loopne
test
mov
xor
jne
jge
loope
loope
add
xor
mov
sbb
js
mov
fstps
ss
push
pushf
hlt
stos
inc
pop
int
xchg
jbe
add
in
adc
lea
mov
adc
push
repnz
jg
mov
mov
push
xchg
jne
popa
orb
push
adc
and
mov
jns
xor
pop
xor
mov
pusha
sub
ret
mov
shrb
push
lcall
dec
dec
out
lds
sbb
mov
mov
sub
insl
cli
mov
cld
js
sbb
ljmp
sbb
and
scas
repz
mov
jo
and
push
xlat
das
in
aad
jnp
dec
in
sbb
stc
addl
mov
lea
call
stc
fldl
fildl
sahf
loop
aam
push
xchg
loop
fst
cmp
dec
push
lea
xor
or
push
mov
jae
sbb
push
sbb
jl
xlat
out
inc
dec
mov
test
mov
mov
sbb
lcall
das
test
mov
cmp
pop
out
cli
popa
push
jle
push
gs
stc
lret
xchg
adc
cmp
mov
ljmp
and
and
add
adc
and
ret
jecxz
inc
pusha
leave
dec
rcrl
xchg
out
mov
das
xchg
xchg
pop
movsl
lods
stos
dec
dec
xor
cmp
std
mov
ds
mov
outsb
xor
scas
cmpsb
mulb
cmp
add
mov
mov
inc
sahf
xor
aas
mov
in
adc
decb
xchg
xor
ss
sti
mov
jp
out
int3
and
iret
sub
daa
xchg
pop
shlb
mov
iret
and
movsb
push
add
clc
or
mov
sub
std
mov
adcl
mov
sub
sub
lret
lret
push
mov
adc
pop
shlb
call
stos
and
mov
cmp
imul
and
out
jp
mov
test
dec
cs
stos
aas
out
aad
cmc
je
fsts
add
leave
icebp
jnp
test
and
repz
insb
test
in
dec
inc
sbb
cwtl
rorb
dec
and
fisubrs
jo,pn
mov
add
push
clc
add
inc
xchg
in
mov
push
mov
out
dec
xchg
ret
in
push
std
lcall
lea
xchg
pop
lods
jb
test
mov
sbb
sbb
dec
scas
dec
movsb
sub
xor
daa
xchg
adc
inc
jg
into
ficomps
or
dec
pop
adc
jecxz
data16
jle
pop
mov
aad
gs
xor
adc
xchg
leave
adc
dec
cld
imul
sti
jl
int
fdiv
xor
aas
and
xor
jne
aas
scas
mov
inc
js
jns
mov
sbb
sbb
leave
mull
ljmp
rcrl
mov
push
decb
xor
ljmp
jp
in
xchg
mov
and
mov
cmp
adc
xor
dec
and
mov
pop
xchg
or
or
sbb
add
das
in
shll
mov
data16
pop
mov
jns
pop
xchg
mov
addl
fsts
adc
or
inc
adc
add
test
dec
daa
lods
in
and
loope
pop
shll
mov
sub
cmp
cltd
add
mov
xorl
or
mov
js
mov
xor
adc
pushf
jno
jge
push
xchg
iret
push
inc
mov
push
push
push
insb
lea
in
sarl
mov
mov
or
fiadds
mov
cmp
cs
mov
mov
mov
fbstp
xor
push
push
dec
inc
mov
sub
add
xchg
push
cmp
mov
enter
push
inc
fs
sbb
xchg
je
ljmp
xchg
fisttpl
imul
repz
pop
jnp
fsubrs
or
pop
jbe
sub
mov
inc
popa
lock
xor
fdivrs
pop
jnp
lahf
aad
out
cmpsb
loop
xchg
insb
loope
push
or
sahf
into
rcl
gs
orl
int3
filds
cmovo
adc
jo
rcl
mov
xor
inc
mov
rcr
test
fildl
add
cwtl
adc
or
xchg
in
sub
cmp
xchg
sub
push
dec
test
sbb
and
pop
loope
jge
xchg
dec
and
rcrl
mov
cmpsb
or
mov
adc
jp
dec
or
mov
mov
xlat
pushl
leave
loop
push
pop
sub
jg
mov
push
mov
jnp
jl
loope
addr16
mov
mov
scas
mov
cmp
mov
pop
lods
adc
add
aaa
mov
dec
hlt
xchg
fwait
cmp
fsubrp
sub
test
aad
xor
mov
pushf
test
test
pop
mov
adc
test
mov
mov
mov
cmpsl
scas
push
xchg
dec
mov
fdivr
icebp
sub
ss
mov
out
mov
cltd
jno
xchg
mov
xchg
in
loope
fwait
shll
xor
outsl
fwait
imul
cmp
add
cli
mov
popa
mov
ret
out
sub
fnsave
xlat
outsb
scas
mov
xlat
push
jle
and
push
int
sbb
negl
dec
push
sub
cmp
fs
xchg
fwait
iret
aaa
negb
negb
jl
out
mov
or
pop
mov
mov
jge
shl
mov
arpl
push
sbb
adcb
jg
mov
xchg
sbb
loopne
out
jne
es
push
cs
lock
sbb
mov
cmp
pusha
outsb
cmp
push
out
idiv
or
mov
sahf
lock
inc
shll
push
mov
jo
pop
xlat
push
imul
fcmovnbe
cmp
lahf
sar
pop
daa
push
je
dec
lcall
rclb
fcompl
jmp
sbb
std
fwait
jecxz
or
sbbl
imul
sbb
and
sbb
dec
test
outsl
movsl
inc
das
test
push
in
xor
test
mov
in
nop
lds
arpl
xchg
fnstenv
fidivrs
dec
lahf
cwtl
mov
xor
mov
jecxz
repz
mov
int
mov
and
cmp
push
add
jg
call
subb
mov
pop
lret
mov
cmp
daa
adc
cmp
sub
leave
or
je
ret
jg
xchg
scas
and
subb
xchg
rol
xor
in
sbb
mov
and
out
or
and
jecxz
outsl
adc
sbb
call
clc
jp
sub
sbb
pop
stos
ret
adc
cmp
cmc
mov
shrl
dec
scas
cld
jle
cltd
push
or
into
cmp
xchg
or
or
movsb
xorb
pop
in
enter
xor
in
add
outsb
xor
jne
gs
inc
push
das
fwait
inc
lea
jnp
into
sarl
loopne
dec
imul
mov
jmp
test
pop
push
in
clc
adc
xor
pop
lret
pusha
or
push
lock
xor
mov
push
xchg
les
xchg
lret
flds
arpl
pop
or
int3
inc
mull
lods
xchg
xchg
lods
push
or
into
lcall
andl
xor
xchg
xchg
push
aaa
loop
adc
out
mov
push
inc
bound
mov
mov
dec
movsb
xor
stos
repnz
jl
scas
jge
mov
call
add
or
or
cmp
test
pop
jp
dec
jg
push
adc
mov
dec
push
arpl
inc
jbe
lock
repnz
cs
xchg
cmp
lods
imul
cld
dec
push
sahf
stos
jne
les
lock
or
add
xchg
sbb
lret
xlat
jmp
dec
jnp
dec
cltd
xor
cli
sti
mov
sbb
shl
rcl
xchg
cmp
aas
cmc
rolb
xchg
mov
jmp
push
jl
mov
mov
and
pop
dec
or
or
sbb
sarb
hlt
mov
fwait
jle
in
dec
dec
shr
mov
pop
je
push
mov
jge
ljmp
cmp
flds
sub
mov
out
inc
fwait
xchg
sbb
movsl
jns
lret
sub
idiv
repz
xor
sarl
sub
mov
sbb
sti
aad
inc
arpl
adc
int3
in
push
mov
cmpsb
fiaddl
fbstp
dec
sub
adc
or
repnz
repz
sbb
arpl
rcr
mov
mov
jb
stos
push
ret
rolb
mov
outsb
inc
addl
fs
insl
hlt
xor
ljmp
popa
dec
lret
lock
jecxz
js
dec
push
sbb
scas
adc
arpl
xchg
arpl
es
test
cmpsl
mov
mov
cmp
in
cmc
sbb
push
enter
jecxz
xorb
aad
bound
or
bnd
sub
dec
cmp
mov
lret
fs
aad
test
mov
sub
mov
lret
and
loopne
in
mov
popf
add
inc
test
inc
mov
fcomp
negl
pop
int3
jae
xor
lods
lds
xlat
leave
sub
and
mov
hlt
ss
adc
cltd
icebp
mov
cld
add
in
ljmp
dec
shlb
lea
xor
mov
shr
orl
int3
jbe
mov
daa
int
in
xchg
mov
adc
bnd
lret
xor
fwait
data16
push
mov
mov
jae
mov
arpl
out
push
aam
mov
aam
adc
dec
pop
sub
jns
popa
test
lds
iret
jo
rorl
jge
xor
mov
dec
sbb
push
pushf
scas
sub
clc
daa
insl
pop
andb
sub
lock
pop
sub
icebp
cmc
sub
jno
mov
ja
mov
out
add
std
lret
mov
sub
div
mov
sbb
je
cmc
mov
or
adc
inc
mov
xchg
dec
loop
cmp
cmpsl
sti
out
cmpsl
data16
lock
cmp
push
iret
lods
dec
mov
lret
stc
adc
in
mov
lds
fnstsw
fidivrl
or
sarb
inc
fsubs
leave
mov
lcall
add
sbb
ret
mov
aad
sbb
xor
outsb
pusha
or
mov
mov
pop
mov
in
arpl
inc
jle
mov
mov
fucomp
cltd
in
pushf
xchg
cli
cmp
in
addr16
mov
jns
xchg
mov
pop
mov
xor
in
test
or
push
rcrb
or
inc
aam
outsl
sbb
movsl
jnp
test
cmp
out
sbbl
incl
call
insb
inc
dec
jns
push
cmp
sub
inc
fimuls
faddl
pop
and
push
cltd
jo
pop
xchg
inc
addl
movsl
into
clc
mov
lret
fdivrs
cmp
ret
inc
jp
popa
cmp
pop
jo
mov
jnp
imul
jne
xchg
or
nop
mov
sbb
mov
sub
dec
add
dec
aad
sub
adc
in
xchg
cld
inc
roll
enter
stos
pop
aad
rorl
xor
xchg
aas
push
lods
test
sub
aam
fldcw
xor
sti
gs
sbb
inc
inc
push
mov
add
or
das
rep
in
push
jne
mov
mov
pop
gs
test
adc
xor
popf
imul
cmpl
ret
std
fsubs
data16
or
add
addl
rorl
test
loopne
stos
or
insb
lcall
movsl
sbb
decl
inc
adc
cmp
jnp
cwtl
int
add
xor
lds
inc
adc
cmp
pop
insl
notb
inc
add
and
xchg
decb
fldcw
outsb
and
movsb
fnstcw
mov
out
mov
and
mov
add
sbb
insl
imul
scas
push
cld
popf
cmp
cs
jne
jae
inc
and
imul
mov
xor
mov
addr16
push
aaa
fists
iret
pop
adc
sub
inc
adc
inc
fdivs
out
dec
dec
mov
sbb
inc
sbb
or
push
rcll
xchg
jmp
pop
jbe
pop
aam
jbe
dec
and
mov
in
and
mov
pushf
push
fbstp
cld
into
mov
and
xchg
pusha
dec
and
clc
jns
mov
repnz
cmc
xchg
add
jns
pop
jb
jmp
mov
push
push
addr16
mov
xor
ss
rcr
lcall
pop
fxch
and
outsl
and
adc
add
out
xor
loope
add
repnz
sub
adc
test
sbb
hlt
mov
sub
jp
mov
enter
dec
jmp
mov
xchg
push
cwtl
dec
in
lea
lock
push
cmp
push
in
and
test
mov
and
jl
mov
sbb
insl
dec
sub
jbe
dec
mov
mov
push
nop
mov
jbe
mov
jb
add
jns
popa
cmp
pop
fdiv
jmp
pop
pop
and
loop
ret
adc
xlat
mov
orb
cmp
xchg
add
adc
cmp
clc
scas
sbb
roll
js
mov
cmp
ljmp
dec
int3
push
js
das
and
stc
negl
pop
ds
sbb
jnp
ret
lods
mov
insb
stc
aaa
rcrl
addr16
pop
adc
test
adc
adc
push
lock
mov
adc
outsb
cmp
nop
xlat
cmp
cmp
icebp
lea
mov
shrb
mov
jg
or
xor
js
pushf
in
sbb
mov
push
cwtl
push
shrb
dec
fdivs
xchg
out
iret
fwait
and
mov
aaa
dec
mov
jl
or
xor
push
cwtl
ror
xor
jb
roll
sbb
or
shll
sub
adc
cmp
leave
stos
dec
jbe
nop
out
mov
notb
inc
bound
add
push
jbe
sbb
in
dec
lahf
hlt
std
test
push
mov
and
pop
sbb
or
ret
xchg
mov
lods
push
aam
in
xchg
pop
jg
jmp
and
lahf
mov
pop
mov
adc
adc
jno
gs
dec
mulb
mov
int
push
push
push
mov
dec
lahf
push
add
cmp
pop
inc
ficompl
cmp
push
fcoml
lret
jl
pop
cmp
or
in
lahf
inc
xchg
mov
adc
pop
mov
xor
leave
xor
test
dec
out
xor
outsl
insl
addr16
shll
js
and
or
mov
xor
mov
fwait
push
in
adc
sub
pop
inc
js
ret
test
xchg
adc
loop
clc
jns
jns
lret
and
push
jecxz
xchg
xchg
sbb
lods
loope
in
jbe
fldt
inc
and
pop
inc
setbe
paddsw
imull
aam
pop
repnz
mov
dec
cmp
sub
andb
push
jnp
iret
pop
imul
aas
hlt
dec
fmuls
push
add
mov
or
jmp
dec
lods
pop
dec
xlat
sbb
ret
les
push
or
sti
xchg
add
das
movsb
pop
ss
xchg
popa
leave
loope
scas
adc
std
popf
push
dec
adc
sub
orl
mov
popl
and
in
loopne
shrb
dec
cmp
out
shlb
clc
jmp
stc
sbb
xlat
in
adc
add
insb
push
cmpl
in
sub
adc
mov
mov
add
sahf
mov
sbb
or
push
mov
inc
jle
fstps
pop
xchg
fmul
les
ret
test
mov
lea
adc
insb
hlt
mov
xchg
push
int
sbb
out
loop
lret
fadds
call
scas
popa
arpl
imul
mov
sub
mov
xchg
push
orl
pusha
sarb
push
call
adc
stc
adc
es
insb
movb
cwtl
and
sbb
je
fnsave
out
cmpsl
iret
movsl
test
adc
xchg
xor
sahf
pop
test
push
add
mov
mov
xor
aas
std
ja
mov
loop
mov
ret
cmp
sub
ja
lods
jne
enter
fwait
add
jns
negl
pop
xchg
in
sub
adc
add
int3
or
mov
and
loopne
push
sub
jl
add
ret
dec
inc
cmp
insb
loope
push
das
xchg
stc
rcll
dec
jge
pop
pop
jl
sub
repnz
adc
mov
lock
jne
add
xor
out
push
mov
jle
sbb
imul
rcrl
pop
push
xchg
push
lds
cmp
jmp
test
jo
sti
xor
dec
loop
out
aad
mov
cmp
addr16
jg
imul
cmp
clc
popf
dec
mov
xor
cmp
ss
and
sbb
aaa
mov
pop
mov
scas
stos
xchg
mov
pop
sbb
insl
inc
es
mov
pop
xchg
pop
push
loop
or
rcrb
les
aam
mov
xor
pop
out
lcall
push
das
lret
jno
sbb
shlb
dec
push
lret
mov
aad
cmpsb
test
push
js
cmpsb
or
pop
xor
ret
pop
lcall
jno
inc
daa
mov
ret
cmpsl
pusha
lock
xchg
cli
test
mov
cwtl
outsl
adcl
repz
test
xchg
push
mov
or
and
jp
dec
movsl
and
test
icebp
in
inc
addl
sbb
sub
in
add
jbe
std
pop
sbb
clc
int
sub
lea
pop
hlt
jno
and
cli
loopne
popf
stc
mov
sti
inc
lahf
and
js
push
insl
mov
fiaddl
mov
fwait
cmp
push
cmpsb
in
xchg
idivl
popa
daa
mov
call
mov
mov
stos
test
rcll
jbe
cli
mov
adc
jae
gs
sbb
test
mov
test
rcr
cld
pop
sbb
cmpsl
lock
je
nop
mov
xchg
mov
dec
cmpsb
fisttpll
rcll
push
cltd
or
xchg
aas
mov
pop
adc
mov
add
addb
push
sub
fstpt
jmp
sub
lods
dec
int3
pushf
aad
test
and
dec
addr16
scas
jb
popa
mov
adc
dec
lcall
jns
outsb
aad
and
push
adc
xchg
dec
shrb
pop
adc
push
popa
in
testb
sar
adc
repz
push
push
addr16
hlt
test
lret
pop
add
add
mov
jl
push
leave
dec
in
cwtl
sbb
sbbl
sub
bnd
jp
out
xchg
jmp
shlb
mov
xchg
rep
test
dec
pop
lahf
mov
fdivrl
mov
push
aad
fisubrs
or
sub
mov
js
adc
or
movsl
jnp
cwtl
jg
and
movsb
imul
mov
dec
add
fnstenv
xchg
inc
lcall
or
add
ret
test
out
addr16
cmp
xor
lahf
insb
xor
in
pop
xchg
push
lahf
cld
dec
hlt
enter
loop
and
mov
dec
cli
popa
lret
repz
cmp
mov
push
inc
sbbl
xor
ja
mov
dec
loop
mov
or
inc
dec
push
adc
cld
mov
add
sbb
pop
mov
dec
imul
scas
mov
jne
pop
faddl
lret
aam
sbb
negl
clc
int3
adc
xor
cs
mov
sti
fwait
adc
mov
and
mov
push
arpl
push
adc
movsl
adc
or
mov
jnp
cwtl
inc
pop
out
jno
outsb
shll
mov
pushf
or
push
fmul
sbb
lcall
pop
sbb
sub
les
jle
repz
repz
mov
or
mov
fs
iret
mov
xor
sbb
sub
mov
cltd
sub
pop
rcrl
xor
add
test
std
scas
loopne
mov
aad
lea
pop
xchg
add
jne
mov
dec
push
out
iret
push
adc
fnstsw
stc
psrlw
add
loope
sub
cli
inc
mov
jne
push
xchg
lret
or
movsl
fistps
dec
sahf
pushf
mov
addr16
pop
jecxz
test
je
lock
adc
sub
fnstsw
inc
push
xchg
mov
in
jmp
imul
scas
pop
imul
or
xchg
arpl
loope
nop
mov
add
mov
iret
nop
xchg
xlat
or
aad
jmp
lds
ret
das
cmp
mov
out
mov
repz
sbb
adc
push
lea
fdivs
cmp
push
sbb
aaa
dec
fdivp
inc
lods
mov
push
dec
jmp
pushaw
or
repnz
cmp
lock
mov
scas
movsb
inc
aas
lret
mov
mov
arpl
std
stc
hlt
inc
xlat
daa
mov
addr16
cld
inc
xchg
rcl
fcomip
ja
inc
lds
cmp
popf
roll
dec
cld
mov
push
cld
mov
aad
or
jae
pop
add
or
jge
sbb
ljmp
pusha
sbb
test
jmp
push
sbb
fisubl
cwtl
jns
ljmp
jb
push
mov
int3
push
jne
cmc
arpl
pop
lret
xchg
stc
lock
addb
mov
jle
fwait
pop
aaa
cltd
pop
adc
mov
cli
or
jl
test
cmp
js
sti
and
fldl
lret
test
mov
dec
or
jmp
push
dec
leave
pop
loope
popa
lcall
inc
aaa
mov
pop
popa
hlt
jge
rolb
iret
jmp
gs
pop
jnp
mov
test
les
aad
mov
push
test
imul
pop
lret
imul
and
lds
jl
xor
fidivs
imul
adcl
das
fidivl
scas
adc
adc
movb
insl
or
xchg
enter
jne
gs
loop
mov
adc
inc
pop
adc
adc
shl
fldcw
inc
add
nop
jmp
mov
shll
dec
jge
sub
lods
leave
mov
adc
insl
imul
xor
ret
mov
mov
or
addr16
ja
insb
dec
into
mov
push
mov
dec
or
sbb
or
lea
cld
cli
lcall
aaa
lds
pop
repnz
push
popf
imul
mov
inc
lods
or
xchg
comiss
lret
mov
sbb
push
bound
loope
andnps
mov
adc
jmp
imul
test
sbb
imul
inc
fs
and
leavew
push
or
mov
fisubs
xchg
mov
mov
stos
jle
mov
movsb
xor
jne
dec
pop
inc
in
enter
test
and
sbb
lods
push
fadds
iret
scas
mov
test
insb
pop
mov
mov
std
jb
stos
mov
adc
decl
cltd
loope
push
insb
sarb
dec
xchg
pop
adc
shl
ret
pop
mov
push
loop
insl
sbb
stc
ds
mov
fwait
shl
mov
jp
mov
test
jecxz
test
pavgb
lcall
jbe
push
adc
inc
xor
and
and
loopne
xchg
xchg
inc
pop
shrl
jmp
stc
ret
mov
adcl
add
pop
stc
sbb
mov
aad
push
jp
add
addr16
cwtl
cmc
fistpl
scas
mov
xchg
push
jnp
add
fwait
or
fadds
adc
into
push
lcall
imul
int3
mov
repz
xor
stos
movsl
shlb
fisubs
or
fbld
out
mov
xor
cmp
aaa
cmp
out
push
inc
dec
lcall
dec
ret
mov
hlt
mov
outsb
pusha
rolb
and
or
cmc
test
push
push
cmpsb
mov
mov
jbe
xchg
mov
xor
lret
shlb
pop
push
jno
imul
les
xor
rcr
dec
pushf
or
mov
xchg
sub
stos
insl
ss
popf
or
sub
js
test
xchg
pop
stos
ret
inc
inc
insl
sub
iret
dec
xor
cvttps2pi
push
sub
outsb
inc
adc
xchg
xlat
leave
inc
xchg
push
int3
int3
cmp
pop
rcr
mov
xor
stos
in
adc
sub
mov
sbb
mov
into
pop
mov
inc
mov
mov
loopne
inc
and
clc
mov
and
enter
lcall
pop
push
aas
ret
sub
cwtl
inc
inc
addr16
adcl
shrl
in
loopne
imul
movsl
add
mov
push
fs
bound
insb
push
jle
mov
or
icebp
addr16
insb
mov
sbbl
pusha
and
mov
and
aad
add
out
hlt
push
and
fsubrs
xchg
inc
or
sbbb
adc
xchg
scas
ficomps
addr16
dec
fisubrl
in
mov
inc
push
adc
sub
lret
push
fsub
mov
sahf
mov
adc
xor
adc
xchg
shrb
nop
and
jns
push
mov
repz
adc
mov
mov
popf
cmp
mov
mov
and
inc
lods
jle
jecxz
sarl
mov
test
aad
ds
sbb
and
cmc
popa
inc
scas
push
incl
mov
sub
mov
lock
push
cmp
add
xchg
jl
hlt
pushf
lods
clc
xchg
cmpsl
dec
sub
sub
into
sbb
js
loopne
sbb
in
sbb
fsubrs
jae
je
pusha
stc
fldenv
xlat
add
adc
rcll
mov
pushf
xchg
lods
fidivrs
jno
mov
test
popa
out
push
xor
pop
out
xchg
in
sbb
iret
imul
clc
out
mov
xchg
aam
sbb
mov
or
pop
ficoms
push
rcll
dec
sti
data16
fcomp
mov
sbb
data16
movsl
push
or
pop
mov
out
jg
xchg
inc
xchg
mov
xchg
js
cld
stos
mov
and
sbb
sahf
fbstp
pop
sahf
add
sbb
mov
xlat
inc
jecxz
inc
not
mov
push
daa
shll
pop
sbb
sub
pop
mov
inc
xchg
mov
dec
xorl
cmp
add
cwtl
cmp
dec
in
jo
cmp
inc
sbb
lods
cli
jg
out
imull
call
jg
cmp
jmp
mov
enter
dec
das
pop
mov
iret
shld
mov
loop
jle
ss
jmp
gs
pop
add
jmp
push
sbb
xchg
xchg
jge
cmp
rclb
sarb
stc
jno
hlt
gs
jl
mov
mov
addr16
insb
std
loop
jge
xor
jbe
push
testb
adc
sti
fyl2x
push
mov
cmpsl
fdivrp
xchg
cmpb
ljmp
pop
cltd
in
cmpsl
leave
cmp
neg
mov
js
sub
cld
jno
and
ja
and
jbe
inc
mov
xor
dec
call
xchg
shrl
insl
popf
mov
leave
pop
push
jmp
inc
faddp
mov
es
mov
aaa
xor
in
stc
addr16
cwtl
fmul
jno
inc
mov
mov
mov
iret
sbb
mov
mov
inc
test
subl
cltd
ret
daa
in
inc
clc
into
jp
pop
or
mov
lcall
cmpsb
loope
inc
notl
pop
push
loopne
sub
enter
nop
inc
mov
enter
test
add
bswap
roll
sub
or
enter
cwtl
leave
ss
adc
pop
test
and
sbb
movsb
cmp
arpl
push
pusha
into
stc
mov
inc
xchg
mov
xchg
or
push
inc
and
lds
pop
cld
nop
lahf
enter
sbb
add
mov
jnp
in
dec
lea
mov
and
pop
fisubrs
pusha
pushf
mov
adc
xchg
leave
pushf
rcrb
adc
sahf
popa
inc
push
jae
and
inc
int
sub
push
xor
inc
repnz
aam
cmp
pop
je
jb
ja
inc
sub
push
inc
shll
and
and
test
xor
shrb
ret
leave
push
add
mov
jb
push
push
sub
mov
sbb
pop
pushf
cmp
cwtl
imul
std
dec
lcall
cvtps2pi
add
or
adc
and
js
inc
sub
pop
les
test
mov
mov
mov
sti
adc
pop
icebp
popa
fucom
hlt
ret
and
adcl
loopne
mov
jns
lcall
repnz
movsl
cmp
in
xlat
fisubrs
cmp
scas
inc
movsb
and
stos
andb
das
fldl
xchg
jne
out
push
mov
fimuls
adc
xor
sub
stos
iret
nop
pop
cmp
and
sub
rcrb
jecxz
and
cs
xchg
test
pop
adc
dec
enter
mov
jl
pop
stos
ss
xlat
cmp
pop
cmp
mov
jbe
sbb
jge
mov
push
aad
sub
mov
out
dec
aad
push
rcrb
xor
jns
sbb
and
iret
sub
popa
stos
int
ret
aas
cmpsl
dec
sub
repz
cltd
sub
push
out
fs
mov
jp
push
es
xor
clc
in
shrl
movl
mov
add
jle
and
sub
add
test
push
jge
adc
mulb
xchg
pop
dec
out
stos
xchg
popf
mov
lods
sub
cmc
fiadds
jns
rolb
fs
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
add
call
lret
mov
pop
add
and
pop
adc
add
or
sub
movzwl
mov
mov
xor
push
mov
pop
sub
mov
xor
mov
mov
mov
adc
sub
adc
dec
mov
cmp
jne
mov
add
push
add
fimull
lock
dec
movsb
mov
jns
in
in
push
push
pfcmpeq
inc
push
pop
push
push
int
aaa
cmp
inc
jge
rcl
adc
or
mov
or
jo
xchg
pushf
shrb
shll
mov
iret
roll
cmpl
mov
subb
add
fimull
paddsb
xchg
xchg
mov
adc
mov
notb
sti
shll
or
push
roll
inc
fimull
cld
mov
xor
add
or
movsl
into
or
or
adc
sub
xchg
add
mov
stos
call
jp
das
lret
inc
push
xor
sbb
jecxz
pop
movsb
lar
aad
adc
lods
cs
push
xor
cld
or
lds
push
shrl
mov
stos
stos
fildll
mov
dec
xor
adc
flds
das
lret
inc
push
xor
mov
aas
mov
add
inc
pop
sbb
out
push
movsb
pop
xor
out
icebp
mov
jmp
test
out
push
das
fiadds
xor
loop
add
fwait
cltd
inc
icebp
repnz
xor
movb
insl
into
sub
dec
xchg
aad
js
dec
mov
shrb
mov
out
push
out
insl
fdivrp
jmp
cmpsl
es
mov
cmpb
pop
dec
push
pop
ss
stc
xchg
pop
inc
xor
inc
mov
xchg
aad
push
addr16
bound
movsb
das
fdecstp
int3
push
out
push
cmp
jae
fwait
pop
xchg
adc
jl
push
inc
inc
in
adc
mov
sub
push
jno
inc
or
xchg
movsb
pop
mov
aam
push
mov
xchg
ja
push
sub
shlb
adc
mov
mov
movsb
add
call
sub
arpl
stos
push
arpl
sub
mov
sub
arpl
mov
add
sub
jbe
adc
addr16
xchg
sarl
jmp
int
js
or
xchg
fsubp
xchg
popa
mov
pop
pop
or
xchg
clc
sbb
jle
cwtl
sbb
inc
xchg
shr
pop
and
jle
push
add
cwtl
mov
xchg
cld
fldt
pop
lds
ljmp
xchg
rolb
in
xchg
add
xchg
push
pop
dec
add
aad
scas
call
adc
mov
mov
ljmp
push
ret
add
addr16
fs
imul
aad
xor
push
adc
pop
stc
int3
jecxz
jle
mov
test
gs
lret
cmp
mov
push
jle
jecxz
cmp
sub
or
dec
fwait
test
cmpl
test
and
movsl
xchg
jl
or
or
and
mov
shrb
cld
jge
mov
scas
adc
gs
lds
dec
jmp
ljmp
jbe
xchg
fwait
pushf
in
jmp
jno
icebp
adc
xchg
ret
and
adc
arpl
aas
cwtl
xorb
fwait
jno
icebp
adc
xchg
ret
and
jge
imul
repz
dec
xchg
in
pop
pusha
pop
dec
or
xchg
mov
in
jge
or
int
shl
jl
or
xchg
insb
test
sbb
leave
lret
arpl
jl
into
sbb
xchg
mov
lahf
jl
sub
jl
rclb
imul
dec
jge
or
lahf
inc
imul
bound
xchg
push
jbe
inc
mov
xchg
stc
in
sahf
jl
rclb
imul
mov
fistl
xchg
stc
jbe
adc
or
sbb
push
xchg
jl
int
cmc
mov
sbb
int
xchg
jl
rol
sti
in
mov
imul
inc
inc
imul
test
cmp
sti
lods
aad
jnp
cmp
jl
out
das
jbe
xor
andl
adc
jmp
addl
sbb
pusha
ss
imul
jl
shl
in
mov
inc
imul
mov
mov
inc
imul
xchg
stc
mov
sbb
insl
or
push
jbe
mov
jmp
mov
jl
or
test
jl
push
xchg
jl
jbe
jl
or
add
int3
in
add
jne
sbb
insl
icebp
pop
cld
decb
aam
arpl
mov
jne
adc
jge
adc
adc
cmp
add
xor
leave
xchg
jne
adc
jge
jg
lahf
xchg
jl
adc
cmp
movsb
mov
lcall
push
daa
pop
push
data16
and
xchg
into
cmpsb
xchg
addr16
leave
xchg
jne
adc
jge
jae
cmp
rcrb
xchg
lods
imul
xchg
data16
and
xchg
into
cmpsb
xchg
addr16
leave
xchg
jne
adc
jge
negb
jnp
jb
insl
inc
imul
cmpsb
xchg
addr16
jne
adc
jge
negb
sbb
mov
sti
repnz
mov
or
and
lcall
push
daa
pop
pop
data16
and
xchg
into
cmpsb
xchg
inc
stos
ljmp
pushf
mov
imul
test
sti
repnz
jnp
mov
sub
add
repz
inc
clc
repnz
iret
lds
addr16
data16
movsl
add
xchg
test
mov
jge
push
sub
inc
xchg
jl
or
mov
gs
xchg
jl
or
push
adc
in
pop
inc
rorl
jl
popf
sbb
ja
aam
mov
ss
jl
cld
inc
inc
imul
sbb
jl
inc
xchg
jl
mov
fs
inc
jb
push
cmpsl
dec
out
dec
jge
or
mov
js
jbe
bound
xor
jl
mov
fs
jle
test
mov
cmp
inc
jbe
jbe
fldt
mov
mov
cmp
cli
sbb
cmp
int3
ss
fwait
mov
ds
rol
test
cmpsb
jo
scas
jne
xor
out
dec
mov
add
frstor
sub
nop
jl
or
xchg
jl
or
xchg
jl
or
xchg
jl
or
add
add
mov
cmp
or
xchg
jl
int
call
jbe
add
xchg
jl
inc
xchg
jl
or
xchg
jl
or
xchg
xor
fistpll
loopne
dec
jle
inc
aaa
shlb
lods
in
aam
cmp
jns
inc
test
enter
mov
xchg
cmp
push
jns
dec
mov
add
cmp
fbld
daa
imul
dec
outsl
mov
jmp
xor
cmp
mov
fs
jp,pn
loopne
jg
mov
xchg
fisttpl
pop
cltd
mov
js
ret
icebp
bound
jae
ljmp
addl
push
js
or
mov
les
push
shrl
mov
gs
aaa
jle
mov
lods
and
jge
dec
shll
cltd
mov
cmp
or
jp
push
maskmovq
negl
subb
xchg
roll
stos
add
insb
dec
scas
pop
push
dec
andb
mov
sub
push
dec
jg
add
sbb
mov
pop
fucom
cli
shll
dec
xor
sbb
inc
ret
daa
xor
lret
mov
test
cmpsl
test
add
cmp
mov
xor
loope
data16
pop
ret
jmp
mov
mov
les
xchg
cs
daa
mov
xor
sbb
lods
arpl
mov
fnsave
jnp
sahf
ret
fcmovu
repz
sbb
es
or
out
inc
ss
aad
mov
jbe
mov
outsl
mov
ss
scas
jmp
into
cwtl
adc
and
sub
mov
dec
mov
jnp
fwait
mov
mov
dec
mov
xor
cmp
mov
adc
dec
pop
sub
push
xchg
xchg
pop
mov
xchg
jl
inc
xchg
add
jg
js
xor
out
add
imul
ds
mov
imul
lret
or
decb
mov
add
xchg
inc
mov
pop
mov
inc
hlt
enter
push
je
decl
and
imull
aad
xchg
mov
mov
inc
hlt
pusha
cmp
sbb
xor
push
cld
aam
jo
std
dec
lds
mov
mov
mov
push
fs
rorb
dec
inc
push
xor
xor
add
insl
andl
lods
js
int
and
in
std
or
or
push
test
test
add
fdiv
xchg
je
fwait
xor
out
or
ret
push
or
imul
push
pop
adc
int3
sub
add
and
add
add
add
orb
orb
adc
adc
add
add
add
adc
dec
and
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
dec
and
hlt
dec
and
mov
add
dec
and
xchg
dec
and
cmp
add
dec
and
lods
dec
and
dec
dec
and
mov
dec
and
dec
and
pop
dec
and
rorb
add
and
fisttpl
add
and
call
dec
and
repnz
and
jp
and
decl
add
add
add
and
mov
add
dec
and
xchg
dec
and
and
dec
and
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
imul
add
imul
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
dec
and
add
add
xlat
dec
and
add
add
call
add
add
dec
and
add
add
or
add
add
add
add
add
dec
and
add
add
dec
dec
and
add
add
pop
dec
and
add
add
jb
and
add
add
xchg
add
add
add
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
gs
popa
insb
jne
inc
js
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
inc
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
add
je
jb
outsl
jb
outsb
outsw
add
add
popa
addr16
imul
dec
arpl
push
imul
push
dec
outsl
je
data16
arpl
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
pop
add
adc
add
add
add
add
add
and
add
add
and
test
add
add
xor
add
add
and
test
add
add
inc
inc
add
add
and
sub
add
dec
dec
add
add
and
mov
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
sldt
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
add
push
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
sldt
push
sldt
push
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
or
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
add
or
add
or
add
or
add
pop
adc
add
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
sldt
push
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
sbb
add
pop
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
adc
add
adc
add
sldt
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sldt
push
adc
add
adc
add
adc
add
adc
add
push
add
or
add
or
add
or
add
or
add
or
add
push
add
pop
add
and
add
and
add
and
add
and
add
and
add
daa
add
movaps
add
movaps
add
movaps
add
movaps
add
push
daa
add
add
and
add
and
add
and
add
and
add
and
add
push
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
sldt
push
adc
add
adc
add
adc
add
push
add
or
add
or
add
or
add
or
add
push
add
pop
add
and
add
and
add
and
add
and
add
movaps
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
cvtpi2ps
add
push
sub
add
add
and
add
and
add
and
add
pop
add
or
add
or
add
or
add
or
add
or
add
adc
add
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
sbb
add
or
add
and
add
add
cvtpi2ps
add
sub
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
push
adc
add
adc
add
adc
add
adc
add
adc
add
add
or
add
or
add
or
add
push
add
or
add
sbb
add
sbb
add
pop
add
pop
adc
add
pop
adc
add
sldt
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
push
add
or
add
and
add
movaps
add
sub
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
cmp
pop
push
cmp
pop
push
cmp
pop
push
cmp
add
pop
add
pop
add
pop
add
push
add
pop
add
pop
add
pop
add
pop
add
push
cmp
add
push
cmp
pop
adc
add
adc
aaa
add
adc
push
adc
add
adc
add
adc
add
cvtpi2ps
add
push
and
add
or
add
push
add
push
add
or
add
or
add
or
add
pop
adc
add
pop
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
push
add
or
add
or
add
add
sub
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
cmp
add
pop
inc
add
pop
inc
add
sbb
pop
sbb
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
sbb
pop
pop
inc
add
pop
inc
add
push
aas
add
push
cmp
add
adc
add
adc
add
adc
add
movaps
add
or
and
add
pop
add
or
add
or
add
or
add
pop
adc
add
adc
add
push
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
adc
add
or
add
or
add
push
add
or
add
and
add
daa
add
sub
add
adc
add
adc
push
adc
add
adc
cmp
push
push
cmp
add
pop
inc
add
sbb
pop
sbb
pop
sbb
or
dec
add
sbb
or
add
sbb
or
add
sbb
dec
add
sbb
add
sbb
add
sbb
push
add
sbb
add
sbb
add
sbb
dec
add
sbb
or
add
sbb
or
dec
add
sbb
pop
sbb
pop
sbb
pop
sbb
push
push
add
push
cmp
push
adc
aaa
add
adc
add
adc
add
sub
add
add
and
add
pop
add
or
add
sbb
add
pop
add
or
add
push
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
adc
add
pop
add
or
add
or
add
push
add
or
add
and
add
adc
add
adc
add
adc
cmp
pop
pop
add
sbb
pop
sbb
pop
sbb
pop
sbb
or
dec
add
sbb
sbb
add
sbb
push
add
push
push
add
pop
push
add
pop
push
add
pop
push
add
and
or
pop
add
and
or
pop
add
and
or
pop
add
and
or
pop
add
and
or
push
add
pop
push
add
pop
push
add
push
push
add
sbb
push
add
sbb
add
sbb
sbb
pop
sbb
pop
sbb
pop
sbb
pop
pop
aas
add
push
cmp
push
adc
xor
add
adc
add
sub
add
add
and
add
and
add
pop
add
or
add
sbb
add
pop
add
pop
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
push
add
or
add
or
add
or
add
and
add
adc
add
adc
push
adc
add
adc
cmp
add
sbb
or
inc
add
sbb
or
dec
add
sbb
add
sbb
push
add
pop
push
add
pop
push
add
and
or
pop
add
and
or
pop
add
and
or
popa
add
and
or
add
and
add
and
add
and
add
and
add
and
add
and
add
and
or
popa
add
and
or
pop
add
and
or
pop
add
and
or
push
add
push
push
add
sbb
dec
add
sbb
add
sbb
or
inc
add
sbb
pop
sbb
pop
push
cmp
add
adc
add
adc
add
cvtpi2ps
add
add
and
add
sbb
add
or
add
or
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
adc
add
or
add
or
add
and
add
and
add
adc
add
adc
push
adc
add
push
cmp
pop
pop
add
sbb
pop
sbb
sbb
or
dec
add
sbb
push
add
push
push
add
pop
push
add
and
or
pop
add
and
or
popa
add
and
add
and
add
imul
or
insb
add
insb
add
insl
add
outsb
add
outsl
add
outsl
add
outsl
add
outsb
add
insl
add
insb
add
insb
add
imul
imul
or
add
and
or
pop
add
and
or
pop
add
and
or
push
add
sbb
dec
add
sbb
pop
sbb
sbb
pop
push
add
adc
add
adc
add
push
sub
add
and
add
or
add
or
add
sbb
add
push
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
and
add
and
add
adc
add
adc
add
adc
aas
add
sbb
or
inc
add
sbb
or
dec
add
sbb
push
add
pop
push
add
and
or
pop
add
and
or
arpl
or
add
and
insb
add
outsb
add
jo
or
jb
or
sub
sub
or
sub
or
sub
add
sub
add
sub
or
sub
or
sub
or
jae
or
jo
or
insl
add
daa
push
or
add
and
or
pop
add
and
or
push
add
push
push
add
sbb
dec
add
sbb
or
inc
add
pop
inc
add
push
cmp
add
adc
add
cvtpi2ps
add
add
and
add
pop
add
or
add
sbb
add
push
add
pop
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
adc
add
or
add
or
add
and
add
add
adc
add
adc
push
adc
add
adc
add
sbb
or
inc
add
sbb
or
add
push
push
add
pop
push
add
and
or
pop
add
and
or
add
and
imul
daa
outsb
add
jno
or
sub
or
sub
add
sub
jg
push
addb
das
addb
das
addl
das
test
push
xor
add
xor
add
xor
add
das
addl
das
addb
addb
sub
jle
or
sub
or
sub
or
outsl
add
insl
add
imul
or
popa
add
and
or
pop
add
pop
push
add
sbb
dec
add
sbb
pop
sbb
pop
inc
add
push
cmp
push
adc
add
adc
add
adc
add
daa
add
and
add
sbb
add
sbb
add
push
add
pop
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
pop
add
or
add
or
add
or
add
and
add
and
add
adc
add
adc
add
adc
add
adc
add
sbb
or
inc
add
sbb
or
add
push
push
add
pop
push
add
and
or
pusha
add
and
add
imul
daa
outsb
add
jb
or
sub
push
sub
add
jg,pn
push
das
addb
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
addb
sub
jp
or
sub
or
outsl
add
imul
and
bound
or
pop
add
and
or
push
add
sbb
dec
add
sbb
pop
sbb
pop
push
add
adc
xor
add
push
sub
add
and
add
or
add
or
add
or
add
pop
adc
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
or
add
or
add
add
adc
add
adc
add
adc
add
sbb
or
inc
add
sbb
or
push
add
and
or
pop
add
and
or
imul
or
sub
or
sub
addl
rdtsc
xchg
rdmsr
mov
adc
mov
adc
add
xor
add
xor
xchg
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
ss
add
xor
popl
rdpmc
mov
rdmsr
mov
wrmsr
test
push
xor
add
sub
add
sub
or
insb
add
bound
or
pop
add
and
or
push
add
sbb
dec
add
sbb
pop
pop
inc
add
push
cmp
push
adc
add
adc
add
cvtpi2ps
add
add
and
add
pop
add
or
add
sbb
add
push
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sldt
push
adc
add
adc
add
push
add
or
add
or
add
or
add
and
add
and
add
adc
add
adc
add
adc
cmp
pop
sbb
or
inc
add
sbb
or
push
add
and
or
pop
add
and
or
add
push
or
sub
push
sub
push
sub
addl
rdtsc
mov
rdpmc
lea
adc
nop
add
xor
add
ss
add
aaa
lcall
cmp
add
inc
mov
sbb
dec
or
dec
into
or
inc
rorl
sbb
aam
sbb
fmuls
sbb
aas
fmuls
sbb
cmp
or
cmp
or
cmp
rolb
mov
adc
cmpsl
add
cmp
add
aaa
xchg
add
xor
add
xor
add
xor
push
sub
ja
or
daa
insl
add
bound
or
pop
add
and
or
push
add
sbb
add
sbb
pop
sbb
pop
push
cmp
add
adc
add
adc
add
add
and
add
pop
add
or
add
sbb
add
push
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
or
add
add
adc
add
adc
add
adc
aas
add
sbb
or
dec
add
sbb
add
sbb
push
add
and
or
popa
add
imul
sub
or
sub
add
sub
test
rdtsc
mov
rdpmc
lea
adc
add
ss
add
aaa
cltd
add
cmp
adc
mov
sbb
or
dec
lret
or
aad
daa
dec
loope
sub
adc
repnz
dec
notb
sub
adc
stc
adc
cli
adc
sti
adc
and
ds
adc
ds
adc
aas
hlt
adc
inc
in
push
inc
or
inc
int3
or
ret
add
cmp
adc
fwait
add
ss
add
xor
add
xor
ucomiss
add
sub
or
insb
add
pusha
add
and
or
push
add
sbb
add
sbb
or
inc
add
pop
aas
add
adc
xor
add
adc
add
daa
add
pop
add
or
add
or
add
or
add
push
adc
add
or
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
adc
add
adc
add
push
add
or
add
or
add
add
and
add
daa
add
adc
add
adc
push
adc
add
push
cmp
pop
pop
inc
add
sbb
or
dec
add
sbb
push
add
and
or
pop
add
and
push
or
sub
push
sub
add
addb
xor
add
xor
add
xor
cwtl
add
cmp
adc
scas
add
inc
lret
or
inc
fmuls
dec
loop
sub
adc
push
hlt
adc
push
cli
adc
sub
pop
lcall
xor
lcall
ss
sbb
lcall
xor
lcall
cmp
sbb
arpl
sbb
pop
lcall
ss
lcall
xor
push
xor
adc
sub
adc
inc
notb
daa
inc
lock
sbb
xlat
pop
sbb
les
adc
mov
adc
mov
add
xor
add
xor
push
addl
or
sub
or
push
or
add
and
or
push
add
sbb
dec
add
sbb
pop
push
aas
add
adc
xor
add
push
sub
add
and
add
pop
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
adc
add
adc
add
push
add
or
add
or
add
and
add
and
add
daa
add
adc
add
adc
add
push
add
sbb
or
dec
add
sbb
add
push
push
add
and
or
pop
add
and
add
imul
or
sub
addb
xor
add
xor
add
ss
add
aaa
lcall
cmp
add
sbb
or
push
call
adc
dec
sti
push
sub
sbb
lcall
xor
sbb
outsb
lcall
jne
sbb
inc
mov
and
and
and
and
dec
mov
and
lahf
and
and
and
and
lcall
inc
mov
push
aas
jle
sbb
cmp
sbb
push
call
sub
adc
xor
push
sbb
icebp
or
xor
push
push
ss
adc
mov
adc
mov
add
xor
mov
rdtsc
test
push
addb
sub
add
daa
insb
add
pop
add
and
or
push
add
sbb
add
sbb
pop
pop
inc
add
adc
add
cvttps2pi
add
daa
add
pop
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
push
add
or
add
or
add
and
add
and
add
daa
add
adc
add
adc
add
adc
inc
add
sbb
or
dec
add
sbb
push
add
and
and
or
add
daa
insl
add
sub
push
jg,pn
rdtsc
test
adc
mov
adc
xchg
add
ss
add
cmp
add
mov
or
jecxz
pop
push
repnz
sti
adc
push
push
daa
insl
lcall
jns,pn
push
cmp
jmp
cmpsl
jmp
dec
mov
sub
daa
dec
ret
dec
daa
push
ret
daa
dec
ret
ljmp
dec
mov
jmp
dec
mov
and
inc
mov
and
inc
mov
and
inc
scas
and
inc
mov
sbb
jbe
sbb
pop
call
pop
cmp
push
sbb
testb
xor
push
adc
into
add
mov
adc
mov
add
xor
add
xor
add
sub
add
sub
or
push
add
and
or
push
add
sbb
add
sbb
pop
pop
inc
add
adc
add
cvttps2pi
add
daa
add
push
add
or
add
or
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
sub
add
sub
add
adc
inc
add
sbb
or
add
push
push
add
and
or
pop
add
and
add
imul
sub
push
sub
or
das
test
adc
mov
adc
add
ss
add
aaa
lcall
ds
push
inc
lds
sbb
or
and
adc
fs
pop
daa
jb
sbb
lcall
xor
jmp
dec
lret
dec
int3
ljmp
dec
sub
sub
sub
jmp
inc
mov
and
test
jmp
xor
jmp
xor
jmp
cmp
jmp
xor
xchg
jmp
cmp
and
xchg
jmp
ss
and
popf
and
mov
and
inc
mov
lcall
xor
adc
and
testl
adc
iret
add
cmp
add
xor
add
jg,pn
push
sub
or
es
or
add
and
or
push
add
sbb
add
sbb
pop
pop
inc
add
adc
xor
add
push
add
and
add
push
add
or
add
or
add
pop
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
push
add
pop
adc
add
adc
add
push
add
or
add
or
add
sub
add
adc
add
adc
add
push
cmp
or
inc
add
sbb
or
dec
add
pop
push
add
and
or
pusha
add
outsb
add
sub
addl
rdmsr
popl
adc
xchg
add
cmp
add
cmp
lds
sbb
or
and
pop
daa
outsl
lcall
sub
jmp
aaa
movsb
jmp
dec
ljmp
dec
sar
sub
dec
mov
jmp
inc
xchg
jmp
cmp
xchg
sbb
jg
sbb
ja
pop
and
sbb
jne
pop
sbb
lcall
sbb
jmp
das
movsb
lcall
sub
jmp
ds
lcall
ds
and
jmp
inc
mov
and
lcall
xor
jmp
sub
and
lcall
ds
and
cwtl
lcall
jbe
adc
sbb
decl
pop
ss
push
cmp
add
cmp
add
xor
add
xor
add
sub
jb
or
insb
add
and
add
and
pop
push
add
sbb
inc
add
pop
inc
add
adc
xor
add
push
and
add
or
add
or
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
pop
adc
add
adc
add
push
add
or
add
or
add
and
add
and
add
adc
add
adc
add
sbb
or
dec
add
sbb
add
push
push
add
and
and
or
imul
or
jle,pn
push
xor
add
xor
xchg
add
cmp
add
sbb
or
push
lock
std
sbb
jns
sbb
xor
jmp
cmp
ljmp
dec
ljmp
dec
ret
ljmp
dec
mov
sub
jmp
inc
cmp
sbb
das
dec
call
sub
adc
dec
call
pop
inc
call
sbb
adc
dec
call
adc
pop
lcall
and
jmp
daa
fwait
jmp
and
jmp
cmp
jmp
test
jmp
dec
stos
jmp
bound
jmp
jl
and
jmp
ss
and
mov
daa
cmp
mov
and
sahf
lcall
xor
adc
dec
decl
sbb
decl
sbb
add
cmp
add
cmp
add
xor
add
sub
daa
imul
and
add
and
or
push
add
sbb
add
sbb
pop
pop
inc
add
adc
xor
add
sub
add
and
add
or
add
sbb
add
adc
add
push
adc
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
or
add
sub
add
adc
add
adc
add
sbb
sbb
or
push
add
and
or
add
jae
or
das
addl
adc
popl
adc
xchg
add
cmp
push
inc
les
sbb
push
pop
push
repnz
arpl
sbb
js
push
das
xchg
jmp
cmp
ljmp
inc
leave
ljmp
dec
vmovntps
ljmp
dec
sahf
jmp
aaa
pop
lcall
sub
sub
call
and
call
sbb
decl
adc
decl
nop
or
sbb
or
sbb
or
pop
cmp
push
sbb
push
sbb
sbb
sbb
lcall
insl
lcall
sub
jmp
xchg
jmp
push
mov
sub
ljmp
mov
jmp
inc
xchg
jmp
ss
jmp
xor
jmp
ds
ljmp
inc
mov
call
daa
call
sbb
adc
cmp
or
pop
aas
ret
add
cmp
add
xor
or
sub
daa
insb
add
and
add
and
or
push
add
sbb
add
sbb
pop
pop
inc
add
adc
xor
add
movaps
add
and
add
and
add
sbb
add
sbb
add
adc
add
sldt
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
or
add
and
add
and
add
sub
add
adc
add
adc
add
sbb
sbb
or
pop
add
and
or
add
outsb
add
je
or
das
addl
xor
add
ss
add
cmp
or
inc
or
and
sub
pop
xor
ljmp
inc
ret
inc
leave
ljmp
inc
mov
jmp
inc
xchg
and
lcallw
xor
adc
push
decl
adc
decl
or
call
adc
decl
or
incl
pop
pop
decl
or
decl
or
decl
pop
or
or
or
or
push
decl
adc
decl
adc
adc
push
call
adc
call
adc
call
adc
call
sbb
sbb
pop
lcall
cs
inc
mov
ljmp
pop
mov
jmp
inc
test
and
xchg
jmp
cmp
jmp
xor
jmp
dec
leave
and
lods
sbb
js
adc
call
sbb
push
sbb
or
inc
int3
add
cmp
add
ss
add
xor
add
sub
daa
insb
add
and
add
and
push
push
add
sbb
add
sbb
pop
pop
inc
add
adc
xor
add
movaps
add
and
add
pop
add
or
add
or
add
push
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
pop
add
or
add
pop
add
sub
add
adc
add
adc
cmp
add
sbb
or
push
add
and
or
pop
add
data16
outsb
add
sub
xchg
push
xor
add
cmp
push
sbb
or
and
push
and
mov
and
test
daa
inc
mov
ljmp
dec
mov
daa
aas
xchg
jmp
xor
dec
lcall
and
call
and
adc
sbb
or
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
push
push
decl
push
adc
push
push
pop
call
adc
call
sbb
adc
pop
decl
or
decl
push
adc
or
or
or
adc
or
or
call
or
call
and
sbb
xor
jmp
xor
mov
and
inc
mov
sbb
mov
push
sub
jmp
inc
enter
mov
push
xor
adc
dec
call
sbb
or
inc
roll
adc
xchg
add
xor
add
xor
add
je
or
insb
add
and
add
and
or
push
add
sbb
pop
sbb
push
pop
cmp
add
adc
add
daa
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
or
add
and
add
daa
add
sub
push
adc
add
adc
add
push
cmp
add
sbb
or
push
add
and
or
pop
add
es
add
jg,pn
rdtsc
mov
rdmsr
popl
adc
xchg
add
cmp
or
fcoml
and
push
es
sub
and
mov
ljmp
dec
mov
jmp
aaa
push
sbb
notrack
pop
pop
decl
push
decl
adc
decl
or
decl
push
push
decl
or
decl
or
or
or
push
push
or
call
adc
call
adc
call
adc
call
adc
sub
adc
sbb
call
adc
sbb
or
push
decl
adc
call
adc
call
adc
call
adc
decl
adc
decl
nop
or
or
decl
or
decl
or
call
adc
lcall
sbb
xchg
jmp
dec
mov
xor
incl
lcall
sub
ljmp
inc
leave
jmp
cmp
call
sbb
adc
inc
stc
or
dec
fadds
adc
add
ss
add
xor
add
xor
add
jae
or
push
or
popa
add
and
or
push
add
sbb
pop
sbb
push
push
cmp
add
cvtpi2ps
add
and
add
or
add
or
add
pop
adc
add
push
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
adc
add
or
add
sub
add
adc
add
push
cmp
add
sbb
or
pop
add
and
or
jo
or
sub
mov
adc
nop
add
ss
add
cmp
add
sbb
pop
lcall
sub
and
xchg
jmp
dec
ret
ljmp
dec
sar
inc
cmpsb
jmp
cmp
dec
call
and
call
sbb
call
sbb
call
sbb
call
push
ud0
adc
decl
or
or
or
or
femms
call
adc
call
adc
call
adc
call
adc
decl
push
ud0
adc
call
adc
adc
sbb
adc
sbb
jmp
adc
pushl
sub
pop
inc
decl
sub
or
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
femms
sbb
or
or
decl
call
or
call
pop
jge
dec
aam
movsb
fsub
call
dec
jmp
xor
ljmp
dec
sar
and
daa
je
adc
dec
sti
or
dec
fadds
adc
stos
add
ss
add
xor
add
sub
or
popa
add
and
or
dec
add
sbb
push
adc
xor
add
sub
add
and
add
pop
add
or
add
or
add
pop
adc
add
adc
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
or
add
and
add
and
add
adc
add
adc
inc
add
sbb
or
add
pop
push
add
and
or
outsl
add
addl
adc
add
aaa
cwtl
add
cmp
into
mov
notb
sub
lods
ljmp
dec
ljmp
vmovntps
es
xor
sbb
cmp
pop
and
call
pop
and
sbb
lcall
es
push
and
call
adc
decl
push
or
decl
push
ud0
movups
movups
adc
ud0
adc
decl
pi2fd
push
or
or
or
or
or
or
decl
or
or
or
push
decl
or
jo
xor
imul
or
pop
decl
movlhps
adc
push
call
adc
call
adc
call
adc
call
adc
adc
and
adc
and
movups
decl
adc
push
movhlps
or
ud0
sbb
push
xchg
sar
fdivr
push
icebp
out
pushl
push
jmp
sub
mov
sub
jmp
dec
mov
sbb
std
adc
decl
sbb
or
dec
roll
adc
mov
add
xor
or
sub
or
pop
add
pop
push
add
sbb
add
sbb
pop
pop
aas
add
adc
add
adc
add
or
add
or
add
or
add
push
sldt
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
pop
add
sub
add
adc
add
adc
add
pop
inc
add
sbb
or
add
pop
push
add
and
or
outsb
add
addb
xor
add
cmp
or
dec
fstl
and
push
daa
outsb
jmp
xor
ljmp
dec
iret
ljmp
pushl
dec
sahf
ljmp
cmp
and
push
jmp
das
inc
lcall
daa
aaa
lcall
and
jmp
xor
lcall
xor
adc
sbb
femms
push
decl
or
ud0
ud0
pi2fd
or
or
or
or
or
or
pop
pop
push
incl
add
add
add
add
incl
add
add
incl
add
sbb
imul
inc
decl
or
or
add
push
push
incl
push
pop
incl
add
or
or
or
call
adc
call
adc
call
adc
movups
decl
sub
dec
test
cld
cli
dec
rcr
ljmp
mov
lcall
ss
sub
jmp
dec
mov
std
adc
dec
hlt
add
adc
lahf
add
xor
mov
push
das
addl
or
outsl
add
and
pop
add
pop
push
add
sbb
add
sbb
push
push
add
adc
add
adc
add
sub
add
and
add
or
add
sbb
add
adc
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
sldt
pop
adc
add
adc
add
or
add
add
adc
add
adc
add
push
add
sbb
or
add
pop
push
add
and
or
add
jg,pn
rdmsr
mov
adc
lcall
push
in
and
sbb
jae
and
mov
ljmp
lret
ljmp
push
sar
inc
cwtl
ljmp
outsl
pushl
cmp
pushl
xor
sub
jmp
sub
jmp
xor
and
call
es
adc
decl
or
push
decl
or
decl
or
decl
or
incl
pop
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
ljmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
decl
push
adc
call
adc
decl
or
call
sub
aaa
fwait
lret
call
call
aam
ljmp
pushf
jmp
and
lcall
xor
jmp
dec
mov
sbb
jg
adc
decl
sbb
add
dec
mov
add
xor
mov
push
addb
sub
or
insb
add
and
add
and
or
push
add
sbb
pop
sbb
push
push
cmp
add
adc
add
or
pop
add
or
add
or
add
pop
adc
add
sldt
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
sbb
add
sbb
add
and
add
and
add
adc
add
adc
add
push
cmp
pop
sbb
or
dec
add
push
push
add
and
or
add
insb
add
jle,pn
rdtsc
xchg
adc
lcall
push
in
adc
pop
sbb
jp
and
stos
ljmp
dec
ljmp
pop
mov
jmp
cmp
jg
inc
cmp
aas
ss
xor
push
daa
inc
push
jmp
inc
dec
lcall
xor
call
adc
decl
or
decl
or
decl
or
incl
push
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
or
incl
and
or
decl
or
decl
push
and
add
push
incl
or
incl
or
add
and
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
or
or
push
movhlps
adc
adc
xor
and
incl
xlat
decl
jmp
sti
call
aam
jmp
lcall
xor
jmp
dec
mov
call
sbb
decl
adc
add
cmp
add
xor
add
daa
push
or
pusha
add
and
or
inc
add
pop
inc
add
adc
add
adc
add
or
add
or
add
pop
adc
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
sldt
pop
adc
add
push
add
or
add
or
add
and
add
adc
add
adc
pop
adc
inc
add
sbb
or
pop
add
and
or
push
or
sub
add
xor
add
ss
add
pop
in
adc
arpl
sbb
jmp
scas
ljmp
push
int3
ljmp
enter
mov
and
jmp
push
cmp
inc
mov
inc
cmp
pushl
push
jmp
inc
dec
lcall
cs
sbb
decl
or
or
incl
push
push
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
pop
incl
add
incl
sbb
add
adc
incl
sbb
add
jae
add
cmp
sub
lcall
and
incl
sbb
add
incl
adc
jnp
add
ja
add
incl
cmovge
or
and
add
add
incl
add
incl
add
incl
or
decl
pop
push
call
pop
xor
pushl
pushf
sar
aad
jg
std
jmp
jmp
bound
lcall
push
sar
daa
inc
mov
call
sbb
or
dec
add
cmp
xchg
add
xor
add
sub
or
pop
add
pop
push
add
sbb
add
sbb
push
cmp
push
adc
add
adc
add
sub
add
and
add
pop
add
or
add
or
add
pop
adc
add
sldt
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
and
add
and
add
adc
add
adc
add
push
add
sbb
or
add
and
or
jno
or
das
addl
xor
add
in
es
pop
xor
sub
ljmp
pusha
lret
ljmp
mov
lcall
cmp
xor
incl
mov
cmp
pushl
push
push
call
sub
decl
push
adc
incl
pop
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
incl
or
incl
or
incl
adc
add
insl
incl
daa
mov
add
stos
incl
aas
ret
decl
dec
sar
sbb
dec
js
fdivrp
push
pop
aad
adc
decl
cmp
call
cmp
int
or
ret
pop
lods
incl
sbb
incl
push
push
decl
or
or
add
add
add
add
add
add
add
add
push
add
decl
and
jmp
test
out
call
cli
ljmp
pushl
aad
dec
pop
xchg
lcall
cmp
sub
jmp
and
movhps
add
inc
ret
add
cmp
add
xor
add
daa
insl
add
and
or
pop
add
push
push
add
sbb
pop
sbb
push
adc
xor
add
push
daa
add
and
add
sbb
add
sbb
add
adc
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
adc
add
push
add
sub
add
adc
pop
adc
inc
add
sbb
add
sbb
pop
add
and
add
insl
add
addl
sysexit
xchg
add
cmp
push
and
and
ljmp
fs
das
imul
cs
jmp
cmpsb
lcall
cmp
decl
aad
aas
cmp
cmp
xor
lcall
cmp
and
adc
sbb
sbb
sbb
decl
mov
push
or
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
and
add
and
incl
das
lods
incl
inc
mov
lcall
push
in
xor
in
cmp
sti
incl
hlt
std
mov
lret
inc
xchg
out
cmp
lock
out
incl
ljmp
pop
pop
inc
into
incl
mov
add
decl
pop
sbb
or
or
add
add
add
add
add
add
add
add
or
adc
adc
jne
sbb
test
ljmp
xchg
jmp
jmp
lods
iret
arpl
call
xor
ljmp
push
aam
and
test
decl
push
dec
jmp
adc
mov
adc
fwait
add
xor
mov
push
sub
jae
or
push
add
pop
push
add
sbb
add
sbb
pop
push
add
adc
add
adc
add
sub
add
and
add
or
add
or
add
pop
adc
add
sldt
add
or
add
or
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
and
add
add
adc
add
adc
add
pop
inc
add
sbb
or
push
add
and
or
imul
push
sub
mov
adc
lahf
push
push
dec
into
adc
mov
es
mov
pushl
jbe
pushl
jae
ljmp
pop
mov
incl
nop
pushl
fdivr
push
ds
cmp
jno
and
decl
sbb
decl
push
or
daa
or
push
daa
pop
cmp
imul
add
sbb
incl
add
incl
add
incl
add
or
ud0
or
incl
adc
incl
xor
jmp
mov
hlt
call
hlt
call
idiv
push
out
lcall
clc
jmp
idiv
xchg
clc
jmp
out
ljmp
repz
out
lcall
ljmp
pushl
clc
pushl
idiv
push
mov
cmp
incl
sbb
incl
incl
adc
and
add
add
add
add
add
add
add
add
push
add
decl
or
push
lcall
xor
inc
mov
fdivr
dec
into
incl
jl
movlps
and
push
jmp
xor
call
sbb
push
adc
aam
adc
add
ss
add
xor
add
sub
or
add
push
push
add
sbb
pop
sbb
pop
adc
xor
add
sub
add
and
add
sbb
add
pop
adc
add
adc
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
sub
add
adc
add
sbb
or
dec
add
sbb
pop
add
and
jo
or
das
test
adc
add
xor
mov
sbb
cmp
push
mov
sub
pushl
sub
cmp
jecxz
xor
lcall
dec
test
xchg
decl
fdivrp
aaa
push
nop
ljmp
push
push
call
and
or
pop
incl
add
das
push
sbb
jbe
pop
call
jo
adc
dec
incl
adc
incl
add
incl
add
incl
add
or
push
decl
pop
dec
incl
sub
lcall
jno
cmp
stc
call
lcall
jmp
idiv
fs
jmp
hlt
lcall
stc
lcall
clc
jmp
clc
decl
cli
sti
std
inc
stc
jl
repnz
in
lcall
ljmp
hlt
incl
push
incl
cli
hlt
ljmp
incl
repz
inc
loopne
add
sar
daa
mov
incl
or
add
add
add
add
add
add
add
decl
add
call
dec
xchg
decl
loope
fdivr
std
jmp
sub
adc
ljmp
push
fdivr
sub
lcall
mov
push
push
push
cmc
add
inc
mov
add
ss
add
xor
add
je
or
push
or
popa
add
pop
pop
add
sbb
add
sbb
pop
pop
aas
add
adc
add
adc
add
or
add
pop
add
or
add
pop
push
add
pop
adc
add
sldt
add
or
add
or
add
push
add
add
add
add
add
pop
add
add
add
add
sldt
pop
adc
add
pop
add
or
add
and
add
and
add
adc
add
adc
aas
add
sbb
or
pop
add
and
or
insb
add
jbe
or
xor
add
cmp
adc
ja
and
pushl
ja
cmp
out
ds
and
lcall
cmp
mov
movsl
lcall
inc
pop
mov
sub
cmp
decl
ud0
add
incl
add
and
inc
push
xor
or
pop
adc
add
add
decl
pop
adc
or
inc
incl
sub
decl
dec
aam
sub
incl
idiv
pop
idiv
jmp
idiv
fs
jmp
hlt
lcall
idiv
pop
push
lcall
cmc
lcall
repz
pushl
cmc
mov
cld
call
clc
decl
jmp
dec
outsl
in
call
pushl
repz
push
incl
push
lcall
hlt
incl
out
pushl
jb
ljmp
data16
push
cmp
incl
sbb
or
add
add
add
add
add
or
add
pop
add
decl
or
lcall
pop
xchg
jmp
repnz
jmp
in
lock
xchg
decl
adc
sbb
lods
ljmp
dec
sar
and
or
inc
filds
adc
add
xor
add
xor
add
jo
or
add
and
or
push
add
sbb
or
inc
add
push
cmp
add
adc
add
and
add
sbb
add
sbb
add
adc
add
adc
add
or
add
or
add
pop
add
add
add
add
add
pop
add
add
add
add
adc
add
adc
add
sbb
add
sbb
add
daa
add
adc
pop
adc
inc
add
sbb
add
push
push
add
and
or
jno
push
sub
xchg
push
xor
lahf
push
adc
adc
fwait
pushl
sar
inc
cltd
repz
idiv
dec
xchg
out
pushl
push
fwait
decl
movsb
ljmp
jns
decl
cmp
lcall
dec
cmp
decl
pop
push
incl
add
push
incl
add
lcall
add
call
add
add
add
add
add
add
or
or
dec
incl
sub
incl
inc
lcall
push
cmc
call
repnz
idiv
pop
push
jmp
icebp
jmp
cmc
lcall
idiv
pop
icebp
cmc
call
call
cmc
decl
cmp
mov
pushl
idiv
mov
hlt
idiv
xchg
mov
ljmp
dec
cmp
stc
jmp
jmp
idiv
popa
call
repz
in
pushl
repnz
jl
stc
call
hlt
call
cmp
incl
sbb
sbb
add
add
incl
add
add
or
call
inc
xchg
pop
jecxz
dec
aam
cmp
jne
or
dec
lret
popa
jecxz
and
cmpsb
call
sbb
add
cmp
mov
add
xor
add
jbe
or
imul
and
or
pop
add
sbb
add
sbb
pop
pop
aas
add
adc
xor
add
or
add
or
add
or
add
pop
push
add
push
adc
add
or
add
or
add
pop
add
add
add
add
add
or
add
add
add
adc
add
adc
add
or
add
sub
add
adc
add
pop
aas
add
sbb
or
add
and
or
bound
or
imul
sub
push
das
addl
adc
mov
sbb
jp
call
idiv
pop
mov
lcall
cli
cmp
lcall
inc
mov
xor
popf
jmp
mov
lcall
xlat
cmp
jmp
push
push
decl
sbb
pop
add
add
add
incl
add
add
add
add
add
add
add
add
add
push
add
decl
sbb
xchg
decl
dec
sar
jl,pn
call
hlt
lcall
hlt
lcall
hlt
lcall
idiv
popa
push
jmp
idiv
pop
hlt
idiv
push
fdecstp
decl
repnz
xchg
repz
mov
lcall
or
sar
add
pop
aam
gs
jmp
in
jmp
sub
incl
sub
lcall
dec
aam
and
and
daa
xchg
jmp
pop
in
incl
out
decl
push
lcall
jb
incl
mov
pop
push
pop
decl
or
incl
add
add
add
add
add
add
sbb
ss
jmp
cld
std
call
and
call
pop
fdivr
sub
lcall
sub
inc
call
add
cmp
add
xor
add
jo
or
pop
add
push
push
add
sbb
add
sbb
pop
adc
xor
add
push
daa
add
and
add
sbb
add
pop
add
pop
adc
add
sldt
add
or
add
pop
add
add
add
add
add
add
add
push
adc
add
adc
add
pop
add
or
add
and
add
sub
add
adc
add
adc
inc
add
sbb
or
push
add
and
and
jo
or
xor
add
das
test
or
in
daa
insb
ljmp
push
call
cmc
ljmp
ljmp
decl
repz
pop
enter
fwait
ljmp
mov
lcall
push
mov
cs
imul
xor
decl
or
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
sbb
incl
xor
pushl
xor
pop
enter
bnd
idiv
addr16
jmp
hlt
jmp
idiv
push
incl
hlt
pushl
xchg
lcall
data16
or
incl
dec
ret
incl
inc
cmpsb
incl
xor
incl
es
call
xor
ljmp
in
subl
incl
sub
add
sbb
add
test
add
test
incl
and
decl
stc
mov
xchg
hlt
lcall
xor
incl
sub
decl
or
incl
add
add
add
add
add
or
sub
sbb
mov
inc
jmp
out
lock
xchg
decl
subps
pop
lods
ljmp
fs
call
push
incb
adc
into
add
cmp
rdpmc
mov
push
das
addl
or
push
or
popa
add
and
or
add
sbb
pop
pop
add
adc
add
cvtpi2ps
add
and
add
push
add
or
add
or
add
add
or
add
or
add
push
add
add
add
add
add
adc
add
adc
add
or
add
sub
add
adc
add
push
cmp
add
sbb
add
pop
push
add
and
or
push
or
das
addb
xor
add
getsec
cld
and
inc
cwtl
out
addr16
jae
jmp
sti
cmp
lcall
test
pushl
xlat
js
cmp
jmp
dec
decl
sbb
incl
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
incl
das
decl
inc
sar
jne
lcall
icebp
ljmp
cmc
ljmp
icebp
pushl
in
ljmp
cmc
lcall
decl
out
ljmp
xchg
call
pusha
fdivr
add
incl
cmp
incl
xor
incl
and
or
push
incl
sbb
aas
cs
incl
decl
sbb
or
xor
or
and
add
das
incl
or
dec
incl
sbb
sbb
xchg
jg
loopne
fdivr
ljmp
xor
sbb
jmp
incl
xor
decl
or
incl
add
incl
adc
and
fdivr
inc
clc
lcall
inc
outsl
call
sbb
daa
dec
int
sub
lcall
xor
out
add
cmp
add
xor
add
xor
add
jo
or
add
and
sbb
dec
add
sbb
pop
adc
xor
add
or
and
add
sbb
add
pop
add
pop
adc
add
or
add
or
add
pop
add
add
add
add
add
adc
add
push
add
or
add
pop
add
sub
push
adc
add
adc
add
pop
inc
add
sbb
or
pop
add
and
add
outsl
add
sub
push
xor
pop
sbb
test
adc
push
pushl
jns
lcall
sti
pushl
pushl
call
lock
pop
ret
jmp
dec
xchg
jnp
clc
pushl
dec
mov
cs
insl
lcall
xor
decl
or
incl
add
incl
add
add
add
add
add
add
add
add
add
or
sbb
incl
xor
lcall
push
sar
dec
mov
jmp
bnd
idiv
push
repz
int
cmp
out
call
gs
incl
inc
add
mov
add
xchg
incl
sub
push
outsb
decl
pop
call
adc
call
push
inc
call
or
incl
pop
jns
insl
and
jmp
lcall
or
incl
add
incl
add
incl
or
incl
or
lcall
inc
incl
jle
decl
dec
add
mov
add
incl
cs
or
pop
call
or
add
add
add
or
and
push
daa
xchg
jmp
test
call
ljmp
jmp
sti
cld
call
mov
lcall
nop
ljmp
fdivrp
and
push
pop
incl
adc
movsl
add
aaa
xchg
add
xor
add
es
or
pusha
add
pop
push
add
sbb
add
sbb
push
cmp
add
push
sub
add
and
add
sbb
add
pop
adc
add
adc
add
or
add
pop
add
add
add
add
adc
add
pop
add
or
add
and
add
daa
add
adc
add
adc
inc
add
sbb
add
pop
push
add
and
or
imul
or
xor
push
sbb
aaa
cli
sbb
out
imul
incl
aas
xchg
lcall
mov
mov
out
incl
mov
and
pop
sbb
incl
or
add
pop
incl
add
incl
add
incl
add
incl
add
decl
add
decl
adc
incl
sub
add
mov
call
dec
loope
sub
decl
sti
call
cli
lcall
sti
call
sti
cmp
sti
lcall
stc
call
pop
bnd
push
in
decl
fdivr
or
decl
xchg
decl
jb
nopl
nop/reserved
decl
adc
incl
push
call
adc
decl
arpl
dec
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
jae
push
mov
cmp
incl
das
xchg
add
mov
incl
xor
decl
add
incl
add
jmp
cmp
incl
ljmp
lcall
pop
mov
adc
pop
jmp
mov
lcall
adc
in
add
cmp
add
xor
add
xor
add
and
add
and
or
dec
add
pop
aas
add
adc
add
adc
add
or
add
or
add
or
add
or
add
add
or
add
or
add
push
add
add
add
push
adc
add
adc
add
sbb
add
sbb
add
adc
add
adc
add
push
add
sbb
or
push
add
and
or
insb
add
das
addb
xor
and
ljmp
popa
mov
jnp
incl
ret
clc
ljmp
mov
dec
xchg
mov
jmp
jmp
jmp
sub
lcall
sub
decl
adc
incl
push
or
add
pop
incl
add
incl
add
incl
add
incl
add
incl
add
cmp
call
xor
stos
lcall
dec
jecxz
sub
std
call
std
lcall
call
std
call
cld
decl
decl
cld
decl
cld
decl
cld
incl
std
ljmp
dec
sar
or
incl
sbb
add
incl
add
add
lcall
and
push
adc
decl
adc
incl
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
add
call
pusha
lcall
adc
incl
sbb
add
xor
incl
cmp
lods
incl
mov
or
add
incl
add
decl
pop
sbb
pop
sbb
lcall
dec
ret
mov
inc
in
sti
decl
sar
adc
insb
lcall
sub
jmp
push
sar
sbb
ss
add
cmp
add
xor
add
jb
or
pop
add
pop
push
add
sbb
or
inc
add
adc
xor
add
or
and
add
sbb
add
push
add
pop
adc
add
or
add
or
add
push
add
add
adc
add
adc
add
or
add
sub
add
adc
add
pop
inc
add
sbb
or
push
add
and
or
add
sub
add
xor
adc
dec
mov
or
or
push
decl
in
decl
jmp
and
call
mov
call
idiv
push
dec
lods
jmp
and
call
sbb
decl
pop
or
add
or
add
or
incl
add
incl
add
incl
add
incl
add
incl
sbb
adc
xchg
push
ds
lcall
idiv
cmp
cli
incl
cli
incl
sti
decl
cld
decl
std
call
lcall
lcall
std
lcall
std
call
incl
std
jmp
js
incl
xor
incl
adc
add
sbb
add
or
add
add
add
add
push
or
sbb
push
daa
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
add
call
decl
call
push
adc
add
ud0
sysexit
incl
cmp
incl
cmp
decl
add
incl
add
adc
dec
jmp
cmpsl
lcall
push
cmpsb
lcall
cmp
jmp
incl
pop
mov
jmp
push
mov
lcall
cmp
add
aaa
mov
adc
cwtl
add
xor
add
das
addl
sub
or
insb
add
and
or
push
add
sbb
add
sbb
pop
push
cmp
add
push
sub
add
and
add
sbb
add
pop
adc
add
adc
add
or
add
push
add
add
adc
add
push
add
or
add
pop
add
and
add
adc
add
adc
inc
add
sbb
or
push
add
and
or
push
add
xor
push
and
adc
xor
sbb
in
js
decl
cmp
aam
pop
aaa
test
sbb
jnp
repnz
cld
pushl
cmp
decl
adc
add
pop
incl
or
push
or
incl
add
incl
add
incl
push
add
add
or
add
incl
or
decl
or
decl
sub
jnp,pn
or
fwait
decl
inc
mov
push
inc
sar
dec
lret
dec
call
loope
sbb
xchg
cmp
sti
decl
cld
call
cld
lcall
decl
jmp
insl
in
add
jnp
add
inc
incl
or
push
incl
add
incl
add
call
push
sub
call
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
push
add
lcall
or
lcall
push
or
add
add
add
add
or
ud0
dec
incl
sub
incl
xor
incl
ss
add
cmp
sbb
or
incl
add
decl
or
lcall
push
cmp
sbb
cmp
repnz
ljmp
call
sbb
pop
xor
jecxz
and
sbb
add
cmp
add
xor
add
jo
or
add
and
or
dec
add
pop
inc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
add
or
add
push
add
add
adc
add
push
add
or
add
and
add
daa
add
adc
pop
adc
inc
add
sbb
add
pop
push
add
and
or
imul
sub
comiss
or
dec
mov
push
wrmsr
jmp
dec
xchg
call
hlt
incl
repz
lcall
idiv
sub
mov
adc
mov
popf
hlt
push
clc
lcall
xor
decl
or
incl
or
incl
add
incl
add
push
pop
or
or
ud0
push
adc
add
or
pop
or
decl
adc
incl
sbb
push
and
add
daa
jbe
add
jg
add
mov
add
incl
sub
lahf
decl
inc
scas
decl
inc
call
push
das
cmc
decl
cld
call
cmp
incl
sbb
add
sub
add
add
add
add
or
pop
aas
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
or
pop
incl
and
add
insl
incl
and
incl
sbb
and
add
add
add
sbb
and
jmp
inc
mov
xchg
shl
dec
decl
lock
sub
lcall
sbb
sub
ljmp
das
jb
or
cmp
add
cmp
rdpmc
mov
push
jg,pn
or
je
or
imul
or
push
add
sbb
or
inc
add
adc
xor
add
or
and
add
sbb
add
adc
add
add
or
add
pop
add
add
adc
add
sbb
add
sbb
add
and
add
adc
add
adc
add
push
add
sbb
or
pop
add
and
or
insl
add
sub
add
xor
and
aas
ljmp
mov
pop
sar
jg
pushl
decl
out
and
decl
sub
xor
push
icebp
decl
xor
or
or
add
or
add
add
add
add
add
adc
jmp
and
lcall
and
decl
adc
incl
or
incl
or
incl
or
incl
push
incl
sbb
add
incl
pop
push
incl
pop
push
incl
sbb
arpl
add
jne
add
xchg
incl
xor
incl
inc
int
and
decl
incl
clc
decl
cmp
incl
adc
incl
pop
adc
add
add
add
add
add
or
push
pop
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
call
aaa
decl
adc
adc
adc
dec
decl
push
and
add
add
add
add
adc
cmp
and
mov
lcall
xor
pushl
idiv
and
call
push
outsl
jmp
inc
pushf
pushl
jnp
jmp
dec
movsl
decl
sbb
add
xor
add
cmp
add
xor
add
insl
add
and
add
and
or
add
push
cmp
add
add
and
add
sbb
add
pop
add
pop
adc
add
or
add
or
add
adc
add
sbb
add
push
add
sub
add
adc
add
pop
inc
add
sbb
or
push
add
and
or
add
xor
or
sbb
testl
outsb
ret
lcall
std
pushl
jmp
cmp
lcall
xor
adc
outsb
cmp
jmp
jecxz
pushl
xlat
ljmp
xor
sub
incl
add
incl
add
incl
add
incl
add
decl
add
aas
adc
jmp
insb
pushl
daa
insl
decl
sbb
add
push
incl
or
add
adc
add
adc
add
adc
incl
incl
adc
incl
adc
incl
das
incl
adc
incl
adc
add
pop
incl
sub
add
incl
xor
decl
aas
mov
decl
cmp
incl
wrmsr
incl
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
pop
call
decl
or
decl
adc
adc
and
or
incl
add
incl
add
decl
or
lcall
sub
jmp
xor
xlat
mov
jmp
sar
adc
xor
ljmp
push
call
and
add
adc
mov
add
xor
add
and
pop
add
sbb
dec
add
pop
aas
add
adc
add
movaps
add
and
add
sbb
add
pop
adc
add
adc
add
or
add
sldt
pop
adc
add
sbb
add
push
add
sub
push
adc
add
adc
add
pop
inc
add
sbb
or
push
add
and
or
add
sub
or
xor
mov
lds
and
xor
call
cli
ljmp
call
idiv
imul
cmp
fcmovnu
std
ljmp
iret
ljmp
xor
daa
incl
add
incl
add
incl
add
incl
add
incl
add
or
pop
decl
sub
mov
popa
call
insb
decl
pop
inc
incl
mov
add
or
call
pop
call
adc
incl
sbb
add
adc
incl
sbb
add
sbb
incl
adc
incl
sbb
add
xchg
incl
cmp
decl
cmp
incl
sbb
add
sub
add
add
add
add
add
add
add
add
add
push
incl
add
or
add
incb
or
incb
adc
add
or
incb
add
incl
add
incl
add
incl
add
incl
add
incl
or
incl
add
add
add
push
push
push
incl
add
add
add
add
and
es
mov
and
inc
mov
jnp
pushl
sbb
mov
ljmp
push
pushl
xor
or
inc
loop
adc
scas
add
ss
add
xor
add
jb
or
add
and
or
push
add
sbb
or
inc
add
adc
xor
add
push
and
add
or
add
or
add
adc
add
or
add
sldt
or
add
or
add
sub
push
adc
add
adc
inc
add
sbb
or
push
add
and
or
imul
push
jg,pn
rdmsr
mov
adc
inc
into
adc
pushl
outsb
iret
decl
call
sti
incl
jmp
push
cmpsb
call
push
pop
call
and
ds
mov
jmp
ljmp
das
imul
add
push
incl
add
incl
add
incl
add
add
add
xor
add
decl
das
decl
or
incl
push
lcall
and
cmp
decl
sbb
add
push
incl
adc
add
or
and
add
sub
add
pop
incl
daa
jns
add
movsb
call
pop
inc
mov
jmp
addr16
add
inc
incl
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
sbb
adc
aaa
pop
std
xor
pop
std
inc
dec
pop
std
dec
push
outsl
decl
js
inc
dec
push
sub
dec
std
pop
sbb
push
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
jmp
inc
mov
pushl
sar
push
out
std
pushl
test
mov
sbb
test
sub
cmp
cltd
decl
sbb
add
cmp
add
xor
add
jne
or
push
or
pusha
add
pop
push
add
sbb
add
sbb
pop
adc
xor
add
push
add
and
add
sbb
add
adc
add
add
or
add
sldt
or
add
push
add
and
add
adc
add
adc
inc
add
sbb
add
pop
push
add
and
or
push
or
das
addl
push
aas
sahf
or
cmp
adc
aaa
lcall
jne,pn
sub
ds
incl
repnz
xlat
lcall
inc
nop
call
push
dec
call
cmp
mov
jmp
in
ljmp
sar
sub
push
push
incl
add
incl
add
incl
add
incl
add
add
add
adc
pushl
add
or
add
add
incl
pop
or
sub
sbb
jne
push
jmp
jne
push
sbb
add
sub
add
adc
decl
push
xor
or
aas
incl
sbb
add
pop
incl
and
add
mov
sbb
fdivr
inc
mov
decl
ljmp
mov
incl
xor
incl
adc
incl
add
incl
add
incl
add
incl
add
incb
ss
cld
pop
jno
cld
xchg
leave
cld
mov
into
enter
mov
movsb
mov
cld
cmp
cld
movups
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aas
jmp
dec
movsl
jmp
dec
mov
sbb
dec
mov
ss
pushl
mov
jmp
dec
mov
sbb
dec
mov
ljmp
pop
mov
adc
push
incb
adc
lcall
xor
or
insl
add
and
add
pop
pop
add
sbb
add
sbb
pop
adc
xor
add
or
add
or
add
or
add
pop
adc
add
or
add
sldt
or
add
or
add
and
add
add
adc
pop
adc
inc
add
sbb
add
pop
push
add
and
or
insb
add
das
addl
xor
adc
aaa
lcall
das
jp
sub
xor
pushl
jl
ljmp
popa
xor
inc
lcall
cmp
out
push
lock
incl
sub
or
incl
add
incl
add
incl
add
decl
push
or
push
add
add
add
decl
pop
or
add
add
add
push
incl
or
lcall
push
adc
pop
add
push
or
adc
cmp
add
xor
push
push
cmp
or
call
sub
add
jle
add
cmpsb
call
dec
int
sub
out
decl
call
pushl
xchg
idiv
or
and
add
inc
incl
or
incl
add
push
incl
add
incl
add
incl
adc
xor
sti
mov
call
std
idiv
std
std
std
std
std
std
std
out
repnz
std
fcomp
jmp
cld
pop
gs
adc
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
decl
or
add
add
adc
jmp
dec
sahf
jmp
dec
mov
push
push
mov
and
movsb
jmp
test
jmp
inc
mov
sbb
inc
mov
aaa
jbe
pushl
outsl
lret
and
cmp
mov
add
xor
add
and
add
and
or
dec
add
pop
add
adc
add
movaps
add
and
add
sbb
add
pop
add
pop
adc
add
or
add
sldt
or
add
or
add
and
add
add
adc
pop
adc
inc
add
sbb
add
pop
pop
add
and
or
insl
add
das
addl
xor
or
xor
ljmp
push
sar
jno
ljmp
jo
jmp
push
mov
decl
inc
xchg
incl
cli
idiv
call
xor
add
push
incl
add
incl
add
incl
or
decl
or
add
add
incl
add
pop
incl
add
adc
add
adc
jmp
or
das
decl
adc
incl
sbb
and
or
ss
call
dec
int3
ljmp
jle
incl
call
call
pushl
idiv
or
and
add
dec
incl
adc
incl
or
incl
add
incl
add
incl
add
incl
add
cs
push
sti
xchg
test
stc
std
std
std
std
dec
rcr
cld
push
mov
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
push
incl
add
or
and
pop
cmp
mov
push
sbb
jmp
mov
jmp
lcall
jp
sbb
ja
xor
cmp
call
sbb
or
inc
lods
add
xor
add
xor
add
and
add
and
push
push
add
sbb
pop
sbb
push
adc
add
cvtpi2ps
add
and
add
push
add
or
add
pop
adc
add
or
add
adc
add
push
add
or
add
and
add
add
adc
pop
adc
inc
add
sbb
add
and
or
add
insl
add
xor
push
inc
test
adc
ficoms
adc
lcall
cmp
push
sar
imul
jmp
and
or
lcall
inc
xchg
incl
sti
ljmp
dec
incl
add
incl
add
incl
add
decl
adc
adc
decl
or
incl
push
pop
incl
add
incl
push
pop
incl
push
or
incl
nop
add
daa
incl
adc
add
inc
incl
pop
push
incl
and
and
or
mov
es
mov
inc
imul
incl
call
lcall
cld
call
pushl
clc
call
dec
ret
incl
and
push
incl
adc
incl
or
add
add
incl
add
inc
sti
mov
idiv
call
std
je
xchg
sti
sbb
add
add
add
add
add
add
add
add
add
add
add
or
adc
pop
pop
or
add
or
sbb
popf
lcall
adc
lcall
xchg
jmp
push
mov
call
push
mov
cmp
lcall
mov
adc
in
or
inc
mov
sysexit
xchg
add
xor
or
jae
or
push
add
push
push
add
sbb
pop
sbb
push
adc
add
adc
add
or
push
add
or
add
pop
adc
add
add
add
push
adc
add
push
add
or
add
and
add
daa
add
adc
add
sbb
or
add
and
or
add
insl
add
sub
push
xor
add
cmp
movups
lcall
sub
jmp
dec
mov
ljmp
pop
sar
and
decl
xor
sbb
shr
repz
pushl
dec
dec
incl
add
incl
add
incl
or
call
sbb
call
and
decl
adc
ud0
or
incl
sbb
add
and
incl
sbb
add
push
incl
and
incl
daa
mov
add
mov
jmp
fs
pop
xchg
icebp
call
out
decl
cmc
sti
decl
cld
pushl
mov
jmp
pop
lcall
inc
xchg
decl
sbb
incl
or
incl
add
incl
add
incl
add
incl
add
lcall
sub
cld
jle
mov
cld
std
std
std
fneni(8087
jmp
imul
std
add
pop
incl
add
incl
add
incl
add
incl
add
incl
push
or
adc
sbb
or
push
incl
add
decl
adc
lcall
sbb
adc
push
jmp
jg
jmp
mov
ljmp
jo
jmp
inc
jle
adc
dec
jmp
inc
xchg
pushl
jns
jmp
test
repz
adc
xchg
add
xor
add
jne
or
push
or
pop
add
pop
push
add
sbb
add
sbb
pop
adc
xor
add
or
push
add
or
add
or
add
add
add
push
adc
add
push
add
or
add
and
add
daa
add
adc
add
sbb
or
pop
add
and
add
outsb
add
sub
push
xor
add
xor
or
sub
es
mov
sub
ljmp
push
ret
lcall
adc
decl
ds
pushl
ljmp
pushl
dec
push
incl
add
incl
add
decl
or
lcall
xor
sbb
incl
push
sbb
add
daa
incl
push
cmp
add
push
incl
and
add
decl
inc
mov
adc
aam
sbb
mov
lcall
decl
std
in
std
jmp
pushf
idiv
das
gs
cmp
push
imul
or
incl
add
incl
add
incl
add
decl
ud0
jb
rcr
loope
std
std
std
std
std
std
inc
int
cld
inc
push
ja
push
or
add
add
incl
add
incl
add
incl
add
incl
push
pop
incl
push
or
add
add
or
and
adc
pop
call
push
dec
lcall
adc
jmp
xchg
jmp
sar
ljmp
add
and
adc
inc
lcall
xor
fdivrp
sub
call
and
push
adc
add
cmp
comiss
add
es
add
and
or
push
add
sbb
add
sbb
adc
xor
add
push
add
pop
add
or
add
or
add
adc
add
adc
add
push
add
or
add
and
add
daa
add
adc
add
sbb
or
pop
add
and
add
outsb
add
sub
push
xor
add
xor
add
push
fisttpl
or
sbb
jmp
push
leave
jmp
inc
mov
decl
adc
decl
or
lcall
inc
cmpsl
ljmp
out
pushl
dec
push
incl
add
incl
add
decl
or
cmp
daa
cmp
and
sbb
decl
adc
incl
adc
incl
push
cmp
add
pop
incl
es
or
jmp
decl
decl
std
lcall
cld
pushl
call
out
std
cld
std
out
jmp
mov
mov
lcall
mov
pop
xchg
xor
push
jmp
ds
adc
adc
incl
add
jmp
xor
mov
idiv
clc
std
push
clc
std
xchg
mov
push
incb
or
decl
or
incl
add
add
add
add
add
add
add
add
add
add
add
or
and
adc
dec
decl
push
xor
sbb
jmp
jecxz
and
stc
jmp
jge
lcall
jne,pt
bndstx
call
sub
das
imul
sub
sub
or
roll
xor
add
sub
or
insl
add
and
or
push
add
sbb
add
sbb
pop
push
cmp
add
push
daa
add
and
add
sbb
add
adc
add
add
adc
add
push
add
or
add
and
add
daa
add
adc
pop
push
cmp
add
sbb
add
and
or
add
insl
add
xor
sbb
cmpsb
or
and
pop
pop
push
pop
and
es
mov
sub
jmp
inc
mov
sbb
jbe
movups
decl
or
sbb
test
fdivrp
inc
rcr
cmp
add
incl
add
decl
or
call
and
push
pushl
inc
push
lcall
sub
or
xor
add
push
incl
sub
ljmp
mov
decl
lcall
cld
lcall
lcall
lcall
sti
jmp
ljmp
jp
cli
jmp
shr
jmp
shl
fldenv
aam
gs
jmp
xchg
ljmp
lcall
jnp
dec
jae
pushl
inc
cmp
adc
adc
pop
adc
call
pusha
std
aam
fdivr
std
std
std
call
in
inc
push
jl
push
push
xor
decl
or
incl
add
incl
add
incl
add
incl
add
incl
add
decl
adc
call
xor
sbb
push
jmp
mov
jmp
ss
adc
popa
ret
insb
iret
lcall
cs
decl
cmp
nop
add
xor
add
outsb
add
and
or
pop
add
sbb
inc
add
push
cmp
add
push
daa
add
and
add
sbb
add
push
add
push
adc
add
sldt
or
add
or
add
and
add
add
adc
pop
adc
inc
add
sbb
add
and
or
popa
add
insb
add
das
addl
xor
adc
sub
add
push
jmp
dec
lret
inc
mov
sbb
and
lcall
xor
inc
cld
call
loopne
call
incl
add
incl
or
call
dec
push
pushl
pop
call
and
add
jle
or
int3
pushl
cli
call
lcall
cld
lcall
lcall
lcall
call
cld
decl
cld
ljmp
test
call
dec
into
lcall
dec
lahf
decl
popf
decl
pop
incl
inc
test
push
ja
pushl
mov
subb
push
je
ljmp
inc
call
repz
call
jne
cld
or
dec
adc
dec
decl
adc
incl
add
add
add
add
add
add
lcall
sbb
lcall
pop
jmpw
jp
jmp
pushf
loope
and
lcall
xor
movlps
call
sbb
ljmp
pop
mov
xor
lcall
xor
or
inc
fiadds
sysenter
xchg
add
xor
add
outsb
add
and
add
and
or
inc
add
push
cmp
add
push
daa
add
and
add
sbb
add
push
add
push
adc
add
sldt
or
add
pop
add
and
add
adc
pop
adc
inc
add
sbb
add
pop
push
add
and
or
imul
sub
comiss
or
sbb
sbb
adc
pop
jmp
jmp
es
adc
sub
adc
das
call
and
pushl
sti
jmp
xchg
incl
add
incl
add
xor
aas
pop
js
push
jbe
jmp
cmp
add
jb
pop
xor
clc
call
lcall
sti
lcall
sti
lcall
sti
lcall
sti
call
cld
pushl
lahf
cli
call
pop
in
add
mov
add
cmp
and
adc
ljmp
sbb
inc
sbb
adc
ss
dec
pushl
push
dec
jmp
jne
mov
fwait
jmp
je
inc
jo
pushl
dec
loopne
std
cli
sti
cld
push
hlt
clc
incb
sbb
pop
decl
pop
or
or
or
incl
add
incl
sbb
and
push
lcall
push
push
and
jmp
mov
pushf
lcall
sub
and
adc
push
lods
pushl
jb
lcall
aaa
jge
or
dec
in
sbb
add
xor
add
xor
add
and
add
and
or
inc
add
push
add
adc
add
push
sub
add
and
add
sbb
add
push
add
push
adc
add
sldt
or
add
or
add
and
add
adc
add
adc
inc
add
sbb
add
pop
push
add
and
or
imul
sub
push
das
addl
sbb
popf
sbb
cmp
adc
stc
prefetcht1
cmp
jmp
inc
mov
decl
adc
call
jg
jl,pn
lcall
push
sti
decl
xor
incl
add
incl
and
aas
pop
jns
jne
mov
pushl
xor
decl
lcall
sti
lcall
sti
lcall
sti
lcall
sti
call
std
ljmp
dec
add
scas
incl
daa
jp
add
incl
adc
incl
or
call
or
call
and
or
daa
and
inc
pop
push
pushl
jl
sbbl
pop
ljmp
clc
clc
std
std
std
clc
cli
sti
decl
sbb
adc
dec
call
adc
decl
nop
or
pop
incl
add
incl
add
incl
sbb
push
movsb
call
adc
sbb
and
fdivrp
and
bound
decl
adc
ljmp
push
lods
pushl
fdivr
sbb
test
or
pop
inc
mov
sysenter
xchg
add
xor
add
and
add
and
or
inc
add
push
add
adc
add
push
sub
add
and
add
sbb
add
pop
add
push
adc
add
sldt
pop
adc
add
sbb
add
push
add
sub
push
adc
add
adc
inc
add
sbb
or
push
add
and
or
imul
push
addb
xor
pop
sub
sbb
clc
or
inc
jmp
ss
ljmp
dec
ret
inc
sar
xor
decl
or
call
adc
decl
std
jmp
dec
push
incl
add
incl
add
adc
sub
xor
push
imul
mov
pushl
xchg
hlt
lcall
lcall
sti
lcall
sti
lcall
lcall
cld
cmp
icebp
incl
cmp
cmp
add
xor
add
push
incl
or
incl
or
incl
add
add
add
add
sub
incl
inc
call
dec
pushl
dec
xor
jmp
cli
cli
push
idiv
decl
adc
cmp
adc
call
and
adc
sub
push
add
add
add
sbb
sbb
sbb
jnp
jmp
lcall
sbb
pop
decl
or
call
adc
scas
pushl
fdivrp
sbb
test
push
sbb
or
inc
mov
rdpmc
nop
add
xor
add
and
add
and
or
inc
add
push
add
adc
add
push
sub
add
and
add
sbb
add
pop
add
push
adc
add
sldt
pop
adc
add
sbb
add
push
add
sub
add
adc
add
pop
inc
add
sbb
or
push
add
and
or
add
sub
or
xor
and
and
lcall
inc
mov
jmp
test
call
or
call
push
push
jmp
push
mov
jg
repnz
sti
pushl
pop
push
incl
add
decl
inc
push
call
xchg
jmp
mov
call
mov
lcall
lcall
sti
lcall
call
cld
ljmp
mov
incl
cmp
incl
adc
incl
or
incl
add
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
or
call
pop
adc
sbb
sbb
or
or
pop
es
jb
jge
fdivrp
cld
std
std
push
lock
jge
xchg
std
pop
or
sub
sbb
inc
lcall
xor
sbb
inc
incl
push
pop
incl
add
incl
push
or
adc
dec
call
pop
pop
call
adc
push
and
ljmp
jno
jmp
dec
xchg
call
sub
or
pop
xor
sub
pushl
jb
lcall
aaa
cmp
sbb
push
sbb
add
xor
add
xor
add
and
add
and
or
inc
add
push
add
adc
add
push
sub
add
and
add
sbb
add
pop
add
push
adc
add
push
add
pop
adc
add
sbb
add
sbb
add
adc
add
adc
add
push
inc
add
sbb
or
pop
add
and
add
sub
mov
or
push
mov
add
push
lcall
and
jmp
push
lret
jmp
inc
mov
decl
push
sbb
push
or
call
xor
lcall
in
in
pushl
pop
jb
add
add
decl
adc
lcall
xor
pop
jl
dec
jne
pushl
inc
into
pushl
mov
lcall
lcall
sti
lcall
lcall
cld
pushl
xchg
std
decl
inc
out
add
movsb
incl
pop
pop
incl
adc
incl
pop
adc
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
ljmp
clc
idiv
jmp
in
pusha
fs
add
daa
adc
jmp
xor
inc
jns
sbb
inc
incl
add
add
add
add
push
and
or
adc
and
fdivr
sub
lcall
cmp
push
decl
sbb
sub
xor
lcall
xor
decl
push
inc
mov
sysenter
popl
push
xor
add
and
add
and
or
inc
add
push
add
adc
add
push
sub
add
and
add
sbb
add
push
add
push
adc
add
or
add
or
add
or
add
and
add
sub
add
adc
add
push
add
sbb
or
pop
add
and
daa
outsb
add
sub
add
xor
pop
cs
scas
and
add
call
sbb
and
cmpsb
ljmp
push
into
jmp
push
enter
cmp
push
or
call
sbb
pushl
ljmp
pop
jp
add
add
decl
movhlps
sbb
cmp
xor
inc
insl
cltd
pushl
pusha
movsl
call
inc
mov
call
lcall
lcall
sti
lcall
sti
lcall
sti
incl
call
cmp
incl
and
aas
incl
or
incl
add
or
add
or
add
add
incl
add
incl
push
add
or
incl
add
incl
add
incl
add
incl
add
call
sub
incl
repz
std
std
std
inc
int3
std
cmp
add
and
sbb
push
cmp
pushl
push
xchg
adc
xor
incl
add
incl
add
incl
add
call
sub
jmp
xor
adc
dec
decl
or
call
and
sub
insl
aam
adc
push
dec
out
pop
inc
scas
add
xor
add
xor
add
outsb
add
and
add
and
or
inc
add
push
cmp
add
push
daa
add
and
add
sbb
add
push
add
push
adc
add
or
add
adc
add
push
add
or
add
and
add
add
adc
pop
adc
inc
add
sbb
add
pop
push
add
and
or
insb
add
das
addl
xor
sbb
xor
decl
cmp
and
xchg
ljmp
push
int
sub
lcall
cmp
decl
add
jno
and
decl
pushl
pop
mov
add
adc
add
add
or
or
sbb
aaa
pushl
push
outsb
call
lahf
decl
scas
jmp
lods
jmp
loopw
dec
into
lcall
sti
lcall
lcall
sti
lcall
call
std
ljmp
xchg
incl
inc
add
lcall
adc
incl
or
incl
or
decl
unpcklps
adc
push
call
adc
decl
push
adc
add
add
incl
push
incl
add
incl
add
incl
add
decl
pop
or
popa
subl
in
cld
std
std
std
push
hlt
hlt
std
mov
std
or
das
pushl
inc
jbe
pop
jae
cmp
adc
incl
add
incl
add
incl
add
incl
add
decl
or
lcall
pop
jb
xor
jmp
xor
decl
push
decl
or
pushl
push
lret
call
adc
loopne
pop
aas
test
add
xor
add
outsb
add
and
or
pop
add
sbb
inc
add
push
cmp
add
push
daa
add
and
add
sbb
add
push
add
push
adc
add
or
add
adc
add
adc
add
or
add
sub
push
adc
add
adc
inc
add
sbb
or
push
add
and
or
imul
push
das
addb
xor
and
stc
push
pop
sbb
sbb
jl
daa
dec
ljmp
popa
fdivr
and
decl
xor
add
or
adc
imul
push
mov
std
dec
lock
pushl
or
incl
add
incl
add
call
sub
cmp
pusha
test
cmp
scas
call
inc
iret
pushl
mov
std
lcall
lcall
sti
lcall
sti
lcall
sti
decl
std
ljmp
cmp
or
xor
incl
adc
incl
mov
or
push
ljmp
sbb
cmp
xor
and
incl
add
incl
push
incl
add
incl
add
incl
push
lcall
out
out
std
inc
cmp
pop
cli
add
dec
decl
lcall
lods
ljmp
cmp
add
incl
add
incl
add
incl
add
incl
add
call
adc
ljmp
aas
jmp
xor
mov
adc
pop
decl
and
or
sbb
pop
cmp
ljmp
pop
mov
decl
inc
fadds
cmp
popl
push
xor
or
insl
add
and
or
push
add
sbb
add
sbb
pop
adc
xor
add
daa
add
and
add
sbb
add
push
add
push
adc
add
or
add
adc
add
adc
add
sbb
add
push
add
sub
add
adc
inc
add
sbb
or
push
add
and
and
add
sub
mov
push
xor
mov
lods
adc
es
add
call
pop
popa
jmp
pop
fdivr
daa
push
mov
incl
add
call
sbb
and
in
ljmp
decl
push
incl
add
incl
add
decl
adc
ljmp
inc
dec
call
jmp
decl
lcall
dec
mov
pop
gs
dec
lret
pop
cld
lcall
lcall
sti
lcall
sti
lcall
sti
call
pushl
xchg
call
push
in
add
outsb
incl
pop
inc
incl
adc
sub
pop
or
add
decl
or
adc
adc
adc
or
adc
add
sbb
decl
dec
std
mov
mov
std
jmp
jmp
mov
or
cmp
or
sub
lcall
lods
cmp
decl
add
incl
add
incl
add
incl
add
incl
add
jb
daa
cmp
ljmp
push
sar
and
test
call
sbb
or
adc
adc
xor
and
outsb
fdivr
sub
adc
pop
decb
adc
iret
add
sahf
add
xor
add
imul
and
or
push
add
sbb
add
sbb
pop
adc
xor
add
push
daa
add
pop
add
or
add
or
add
adc
add
or
add
adc
add
adc
add
sbb
add
sbb
add
adc
add
adc
add
pop
aas
add
sbb
or
push
add
and
or
add
outsb
add
sub
push
das
test
rdpmc
xchg
add
inc
pushf
or
lret
add
adc
mov
ljmp
pop
enter
decl
add
call
sbb
and
aam
jb
cli
out
sti
decl
push
xchg
incl
push
and
add
add
add
add
adc
dec
pop
incl
cmp
addr16
ljmp
push
cltd
call
inc
mov
decl
lcall
sti
lcall
lcall
sti
lcall
lcall
sti
call
std
pushl
push
in
incl
xor
incl
pop
inc
incl
adc
decl
or
jmp
or
pushl
or
and
call
adc
and
sbb
aaa
pop
sub
sub
and
or
or
add
add
push
sbb
jmp
imul
xlat
fsincos
std
std
std
push
cmc
idiv
cltd
cmpsb
mov
sti
push
or
aas
call
lcall
and
add
add
add
add
add
add
add
add
add
add
push
or
mov
ljmp
pop
sar
pop
and
call
adc
or
adc
ljmp
push
mov
jmp
mov
clc
pop
adc
add
xor
add
jne
or
push
or
pusha
add
pop
push
add
sbb
add
sbb
pop
adc
xor
add
push
and
add
or
add
or
add
adc
add
or
add
adc
add
pop
add
or
add
and
add
adc
add
push
cmp
or
inc
add
sbb
add
pop
push
add
and
or
imul
sub
comiss
add
cmp
push
or
lcall
xor
ljmp
pop
iret
lcall
pop
adc
or
push
mov
inc
mov
mov
dec
repz
cmp
and
add
push
incl
add
incl
sbb
jmp
push
jp
cmp
and
call
inc
ljmp
xchg
call
lcall
sti
lcall
lcall
sti
lcall
lcall
call
cmp
out
incl
xor
incl
sub
add
push
call
adc
dec
adc
je
sahf
call
jae
adc
adc
pushl
push
sub
das
adc
decl
or
add
add
lcall
sub
je
mov
into
aam
cld
clc
stc
sti
out
repnz
std
mov
push
mov
adc
sub
sub
pop
decl
cmp
incl
or
incl
add
incl
add
incl
add
incl
pop
adc
sbb
push
es
loope
sub
lcall
sbb
decl
sub
push
push
add
adc
pop
pushl
xchg
decl
adc
xchg
add
xor
add
jae
or
push
add
push
push
add
sbb
or
inc
add
adc
xor
add
or
push
add
or
add
or
add
adc
add
add
add
add
add
adc
add
push
add
or
add
pop
add
and
add
adc
add
adc
inc
add
sbb
or
push
add
and
or
add
sub
push
sub
mov
adc
xchg
add
cmp
pop
or
lcall
sub
sub
ljmp
pusha
aam
and
decl
mov
or
jmp
jg
incl
push
ljmp
loopne
adc
push
and
add
add
add
add
add
pop
call
push
sub
xor
incl
test
aaa
push
mov
push
dec
fwait
call
dec
lret
jmp
jg
decl
lcall
cld
lcall
lcall
sti
lcall
sti
lcall
call
cld
ds
jmp
addr16
jmp
push
mov
cmp
xchg
jnp
mov
mov
call
test
adc
das
incl
or
call
or
decl
or
decl
wbinvd
incl
pop
push
incl
cs
push
mov
mov
call
idiv
sti
sti
sti
sti
cld
std
push
idiv
fsubp
lock
cwtl
movsl
sti
cmp
sti
adc
xor
sbb
xor
sub
cmp
add
add
add
add
add
add
add
add
push
pop
or
adc
notrack
sbb
ljmp
push
mov
sbb
test
adc
decl
or
incl
or
pushl
fs
xor
call
xor
call
add
xor
mov
or
sub
or
data16
and
or
dec
add
pop
aas
add
adc
add
adc
add
or
push
add
or
add
pop
adc
add
adc
add
add
add
add
add
adc
add
adc
add
or
add
adc
add
adc
add
pop
add
sbb
or
pop
add
and
add
outsb
add
xor
adc
add
sub
pop
or
jmp
inc
mov
jmp
push
inc
incl
add
adc
dec
jmp
push
idiv
ljmp
lcall
gs
adc
pop
incl
pop
adc
add
add
add
add
or
adc
incl
je
inc
pop
xchg
cmp
lcall
dec
popf
decl
cmp
lcall
insb
icebp
incl
lcall
std
lcall
lcall
lcall
sti
lcall
sti
call
cld
lcall
std
jmp
clc
pushl
in
mov
jmp
stos
jmp
daa
insl
incl
sbb
or
das
decl
adc
incl
push
sbb
push
or
incl
or
incl
pop
pop
decl
or
jmp
sub
push
pop
jnp
orl
std
ret
enter
loope
std
lock
in
lock
fcmovu
in
rol
std
movsb
scas
enter
lahf
sti
sub
popa
cld
push
push
aaa
decb
comiss
push
and
pop
jmp
sbb
push
incl
add
incl
add
incl
add
decl
adc
sbb
mov
sub
ljmp
pop
sar
and
mov
call
adc
incl
push
or
or
daa
jmp
inc
fwait
ljmp
data16
sub
call
outsl
decl
sbb
add
adc
add
xor
add
and
add
and
or
dec
add
push
add
adc
add
movaps
add
and
add
sbb
add
pop
add
pop
adc
add
or
add
add
add
adc
add
adc
add
sbb
add
sbb
add
and
add
adc
add
adc
pop
push
cmp
or
inc
add
sbb
add
pop
push
add
and
or
push
or
das
addl
adc
xchg
add
cmp
push
movaps
pop
xor
ljmp
popa
iret
lcall
xor
or
adc
or
das
lcall
pop
mov
pop
fcomi
call
call
idiv
decl
push
dec
fwait
call
sbb
add
add
incl
push
lcall
and
pushl
dec
pop
decl
jle
inc
pop
cmp
push
xchg
sbb
incl
xor
in
incl
call
std
lcall
sti
lcall
lcall
sti
jmp
sti
jnp
sti
jmp
out
fsubp
jmp
pop
mov
incl
push
jmp
sub
sbb
cmp
incl
push
or
add
or
or
ud0
adc
call
adc
lcall
and
sub
insb
cld
inc
pop
std
fs
cld
adcl
xchg
popf
mov
sti
push
bound
std
adc
or
push
sbb
pushl
cmp
inc
dec
cmp
inc
js
push
sbb
incl
push
incl
add
incl
add
call
or
ljmp
pop
insl
jmp
adc
jmp
test
jmp
pop
into
lcall
sbb
jne
push
adc
incl
push
push
ljmp
push
mov
jmp
inc
lahf
call
and
inc
lret
add
xor
add
sub
or
insb
add
and
or
push
add
sbb
inc
add
push
cmp
add
push
daa
add
and
add
sbb
add
pop
add
pop
adc
add
or
add
or
add
add
add
adc
add
push
add
or
add
and
add
add
adc
add
adc
inc
add
sbb
or
push
add
and
and
jo
or
xor
add
cmp
ret
adc
adc
dec
mov
jmp
dec
stos
call
push
cmp
or
and
sbb
incl
jmp
sti
lcall
cltd
aad
sbb
decl
adc
add
add
add
or
adc
and
push
pushl
pushl
dec
outsl
ljmp
dec
jge
adc
aaa
mov
pushl
mov
lcall
sti
lcall
ljmp
sti
call
std
cli
push
jmp
jg
decl
int3
incl
xchg
sub
es
incl
adc
sbb
add
adc
add
adc
call
adc
lcall
dec
and
jb
xor
jne
xor
sub
jo
sbb
sbb
or
adc
sbb
inc
incl
jp
pop
imul
incl
push
or
add
add
add
add
add
add
or
adc
xor
incw
mov
lcall
ds
mov
jmp
scas
lock
dec
lcall
pop
cwtl
call
adc
pop
decl
mov
sub
ljmp
pop
sar
xor
hlt
or
inc
mov
add
xor
add
es
or
pop
add
pop
push
add
sbb
add
sbb
pop
adc
xor
add
push
add
and
add
sbb
add
push
add
push
adc
add
or
add
pop
add
add
add
add
adc
add
adc
add
or
add
sub
add
adc
add
push
add
sbb
or
add
and
or
bound
or
insb
add
das
addb
xor
add
cmp
or
lcall
xor
ljmp
popa
sar
sbb
jne
push
or
call
xchg
pushl
idiv
in
jmp
lcall
test
lcall
inc
jl
push
or
incl
add
incl
add
call
sbb
jmp
xor
jmp
xor
pop
pushl
dec
js
pop
cmp
incl
dec
fdivr
es
incl
lcall
cld
jg
sti
inc
std
push
std
std
decl
loopne
cmp
call
decl
mov
incl
push
push
incl
adc
and
add
or
incl
adc
lcall
and
pop
sub
pop
pop
inc
call
sbb
adc
inc
call
sbb
pop
decb
push
dec
call
inc
jmp
dec
jns
dec
push
test
dec
dec
cmp
sub
call
or
add
add
add
add
add
or
pop
call
incl
loope
xor
mov
idiv
and
mov
push
adc
call
dec
decl
or
call
push
jmp
scas
ljmp
pop
lret
dec
test
call
pop
dec
in
sbb
scas
add
xor
mov
or
sub
or
add
and
or
push
add
sbb
pop
sbb
push
adc
add
adc
add
or
push
add
or
add
or
add
add
or
add
pop
add
add
add
add
adc
add
adc
add
pop
add
or
add
and
add
add
adc
pop
adc
inc
add
sbb
or
push
add
and
or
jb
or
xor
add
cmp
add
pop
clc
adc
mov
sub
out
and
scas
call
sbb
adc
dec
mov
ljmp
push
ljmp
xchg
leave
decl
push
incl
add
incl
add
incl
add
or
push
call
and
jmp
xor
popa
cmp
dec
ja
sbb
test
add
lahf
incl
ds
lcall
fs
inc
mov
decl
std
sti
jmp
lcall
sti
lcall
sti
call
cld
decl
cmp
jmp
incl
sub
incl
cmp
add
and
add
pop
incl
or
add
movhlps
adc
sbb
decl
and
and
insl
jmp
inc
jb
es
jo
and
jmp
inc
jne
sub
ljmp
sub
sub
dec
lcall
adc
push
add
incl
add
incl
add
decl
add
cmp
popa
pushl
mov
decl
incl
out
cld
call
std
jmp
sbb
and
cmpsl
lcall
adc
adc
xor
movhps
ljmp
push
ljmp
push
mov
decl
sbb
mov
add
xor
or
insl
add
and
add
and
or
inc
add
push
add
adc
add
movaps
add
and
add
sbb
add
pop
adc
add
adc
add
or
add
pop
add
add
add
add
add
add
adc
add
adc
add
pop
add
sub
push
adc
add
adc
add
pop
aas
add
sbb
or
pop
add
and
or
insb
add
sub
push
das
addl
adc
xchg
add
cmp
pop
push
adc
sbb
jns
sub
sub
sbb
cmp
pop
and
enter
cmc
fcos
in
pushl
repz
dec
xchg
incl
add
incl
add
incl
add
incl
add
decl
adc
sbb
das
pushl
inc
push
incl
incl
je
aaa
dec
outsl
lcall
aaa
jne
add
xchg
incl
cmp
icebp
pushl
call
idiv
call
std
lcall
sti
lcall
sti
lcall
sti
lcall
lcall
cld
call
std
decl
ljmp
mov
decl
inc
aam
add
xchg
incl
and
add
and
add
push
incl
or
incl
mov
sbb
cmp
push
cmp
inc
je
and
lcall
sub
adc
xor
adc
sub
adc
sbb
add
add
add
add
push
add
pushl
and
andb
lods
mov
incl
in
sti
dec
jmp
idiv
and
lcall
xchg
call
push
decl
push
xor
jmp
push
lret
inc
lods
call
adc
hlt
pop
adc
xchg
add
xor
add
es
or
pusha
add
pop
push
add
sbb
add
sbb
push
cmp
push
adc
add
or
and
add
sbb
add
pop
add
pop
adc
add
or
add
or
add
push
add
add
add
add
add
add
adc
add
adc
add
sbb
add
sbb
add
adc
add
adc
add
sbb
or
dec
add
pop
push
add
and
or
jb
or
xor
add
cmp
or
aaa
jmp
dec
mov
jmp
dec
mov
call
adc
sbb
mov
cld
push
mov
mov
decl
and
or
add
add
add
add
decl
adc
cmp
incl
data16
cmp
ljmp
inc
arpl
pop
xor
xor
cmp
jmp
ljmp
std
jmp
cld
lcall
sti
lcall
sti
lcall
sti
lcall
sti
lcall
lcall
lcall
cld
call
incl
cld
jmp
gs
add
mov
add
dec
incl
adc
incl
or
incl
or
or
adc
add
add
or
adc
sbb
jmp
dec
push
push
cmp
sbb
xor
or
pop
decl
or
or
adc
or
or
incl
add
incl
add
jbe
fs
mov
stc
dec
cld
call
std
call
std
decl
lcall
stos
call
adc
adc
inc
call
and
and
sahf
ljmp
push
lret
push
jmp
cmp
decl
adc
scas
add
xor
mov
or
sub
or
add
and
or
push
add
sbb
pop
sbb
pop
adc
xor
add
or
and
add
sbb
add
adc
add
add
or
add
pop
add
add
add
add
add
add
add
push
sldt
pop
adc
add
push
add
or
add
and
add
and
add
adc
add
adc
add
pop
inc
add
sbb
or
pop
add
and
or
insb
add
addl
adc
xchg
add
sub
lcall
jp
sub
ljmp
aas
lcall
es
jmp
mov
decl
repz
push
incl
pop
mov
nop/reserved
push
push
das
incl
push
or
add
add
add
add
adc
sbb
ljmp
cmp
dec
cmp
pushl
inc
pop
call
xor
pop
xor
call
int3
call
out
cs
cld
decl
std
lcall
sti
lcall
lcall
sti
lcall
sti
lcall
sti
lcall
lcall
sti
lcall
incl
call
inc
incl
pop
incl
sbb
incl
or
or
push
incl
or
add
add
or
push
lcall
sub
call
sub
decl
or
incl
push
or
add
add
add
add
add
add
add
add
add
add
or
call
mov
call
push
cli
std
std
jmp
sar
sbb
call
adc
adc
dec
lcall
mov
daa
dec
sar
pop
aam
es
mov
decb
cmp
int3
add
cmp
add
das
test
push
sub
or
outsb
add
and
add
and
or
inc
add
push
aas
add
adc
add
cvtpi2ps
add
and
add
push
add
or
add
or
add
adc
add
or
add
push
add
add
add
pop
add
add
add
add
add
add
adc
add
adc
add
sbb
add
push
add
and
add
adc
add
adc
add
sbb
or
dec
add
pop
push
add
and
or
data16
jo
or
xor
add
cmp
or
sub
adc
inc
jmp
push
mov
sub
js
adc
push
jmp
push
mov
jmp
idiv
sar
fdivr
jmp
in
sbb
mov
push
das
jg
adc
inc
decl
or
incl
add
incl
add
call
sbb
lcall
xor
es
pushl
inc
push
cmp
inc
pop
lcall
xor
add
push
incl
das
mov
jmp
jo
incl
call
std
lcall
sti
lcall
sti
lcall
sti
lcall
sti
lcall
lcall
decl
std
call
lret
push
imul
sbb
incl
adc
add
decl
or
incl
or
incl
add
decl
or
decl
adc
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
lcall
xor
incl
push
fcos
lcall
repnz
push
insl
call
sbb
sbb
je
and
mov
sub
ljmp
pop
sar
and
call
pusha
cld
or
xor
add
xor
add
cmp
push
jg,pn
or
and
pop
add
pop
push
add
sbb
sbb
adc
xor
add
and
add
sbb
add
pop
add
pop
adc
add
adc
add
or
add
push
add
add
add
push
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
and
add
and
add
adc
add
adc
add
pop
aas
add
sbb
or
pop
add
and
or
imul
sub
push
addb
xor
add
cmp
add
push
cs
sbb
arpl
std
das
jbe
ljmp
pop
mov
lcall
outsb
jmp
jb
ljmp
outsb
aad
call
sti
mov
mov
lret
push
fwait
call
sub
or
add
incl
add
decl
adc
lcall
and
inc
cmp
aas
dec
pop
ljmp
dec
decl
adc
pop
incl
daa
test
add
mov
ljmp
lcall
sti
lcall
lcall
sti
lcall
sti
lcall
std
incl
cld
decl
inc
scas
incl
push
pusha
decl
sbb
decl
adc
add
or
or
or
or
incl
or
decl
adc
decl
or
incl
add
add
add
add
add
or
lcall
sub
pushl
loopne
mov
cli
jmp
fdivr
ljmp
lcall
sbb
call
sbb
push
sub
and
popf
ljmp
pop
into
ljmp
push
mov
decb
adc
xor
add
aaa
mov
add
xor
add
and
add
and
or
push
add
sbb
pop
pop
inc
add
adc
add
adc
add
or
and
add
sbb
add
push
add
pop
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
adc
add
adc
pop
adc
inc
add
sbb
or
push
add
and
and
jo
or
das
addl
xor
add
aaa
test
adc
fsts
and
and
das
jo
xor
jmp
es
mov
lcall
pop
scas
jmp
add
jge
in
in
stc
dec
clc
decl
lods
loop
and
call
sub
push
push
xor
add
add
incl
or
call
sbb
jmp
cmp
and
xor
adc
decl
adc
incl
pop
aaa
incl
push
dec
incl
das
pushf
incl
ds
repz
lcall
std
lcall
sti
lcall
cld
decl
jmp
jb
decl
xor
incl
sbb
decl
or
decl
or
decl
ud2
decl
or
decl
or
decl
or
decl
or
incl
push
add
incl
add
incl
add
decl
add
lcall
adc
and
lahf
lcall
pop
fdivrp
fcos
std
push
call
test
lcall
sbb
sub
sbb
dec
mov
ljmp
xlat
jmp
cmp
std
or
adc
mov
adc
xchg
add
xor
add
jne
or
imul
and
or
push
add
sbb
add
sbb
pop
push
add
adc
add
push
sub
add
and
add
push
add
or
add
or
add
adc
add
or
add
or
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
and
add
and
add
adc
aas
add
sbb
or
add
pop
push
add
and
or
imul
or
xor
add
cmp
or
cmp
sbb
push
es
scas
xor
xor
jmp
inc
test
adc
es
sbb
xchg
pushl
or
mov
in
mov
mov
mov
decl
or
adc
add
add
add
add
or
sbb
adc
adc
call
sbb
call
and
adc
push
decl
sub
add
incl
push
std
incl
cmp
out
decl
mov
decl
sub
or
xor
bndstx
decl
adc
adc
adc
adc
adc
push
decl
or
incl
add
incl
add
incl
add
incl
add
call
or
lcall
sbb
jmp
cmp
ljmp
mov
call
push
jmp
nop
out
sbb
mov
sbb
mov
push
sub
jnp
and
test
ljmp
push
jmp
dec
mov
call
adc
aaa
into
add
cmp
add
xor
add
jo
or
pop
add
sbb
dec
add
sbb
pop
push
cmp
push
adc
add
or
and
add
sbb
add
pop
add
or
add
push
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
and
add
daa
add
adc
add
adc
inc
add
sbb
or
pop
add
and
or
insb
add
jne
or
xor
add
cmp
mov
icebp
sbb
insb
jmp
pop
mov
xor
xor
lcall
sbb
adc
call
ss
incl
xlat
pushl
call
clc
pushl
jmp
call
aaa
xchg
or
decl
pop
sub
pop
add
incl
add
incl
add
incl
push
add
call
sbb
lcall
daa
inc
jmp
sub
pusha
decl
incl
sub
add
xchg
decl
push
mov
incl
sub
incl
and
decl
push
cmp
decl
push
and
adc
call
adc
call
push
sub
adc
sbb
add
add
incl
add
decl
add
decl
push
xor
adc
pop
lcall
aaa
mov
pop
pop
mov
pushl
mov
pushl
cmc
call
std
std
push
pushl
test
lcall
mov
call
sub
lcall
cmp
and
cwtl
ljmp
push
ljmp
imul
sub
jmp
ss
adc
out
adc
mov
adc
xchg
add
xor
add
jne
or
imul
and
or
push
add
sbb
inc
add
pop
add
adc
add
adc
add
and
add
or
add
or
add
push
adc
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
and
add
and
add
adc
add
push
cmp
add
sbb
push
push
add
and
or
outsl
add
xor
add
aaa
xchg
add
cmp
adc
inc
clc
sbb
ljmp
pop
mov
cs
lcall
xor
adc
dec
call
adc
push
ds
call
stos
jmp
dec
hlt
jmp
stc
cli
jmp
cli
lcall
sar
daa
pop
cmpsl
call
daa
jne
or
incl
pop
and
add
or
add
add
add
add
add
add
pop
or
adc
sub
push
pop
inc
call
push
call
es
decl
and
arpl
add
sbb
add
incl
push
cmp
add
sub
add
sbb
push
or
incl
push
push
decl
or
call
adc
call
adc
or
adc
or
pop
decl
pop
pop
decl
xor
pop
push
sahf
jmp
jb
ljmp
xchg
loope
aas
mov
idiv
cltd
out
idiv
xlat
cld
std
cld
push
fdecstp
lcall
scas
repz
adc
lcall
cmp
aas
xchg
jmp
push
mov
ljmp
addr16
and
and
cld
or
xor
add
getsec
popf
add
xor
add
xor
or
outsl
add
and
pop
add
push
push
add
sbb
or
inc
add
push
cmp
push
adc
add
push
sub
add
and
add
sbb
add
sbb
add
adc
add
adc
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
pop
adc
add
adc
add
sbb
add
sbb
add
adc
add
adc
add
pop
inc
add
sbb
or
add
pop
push
add
and
or
push
add
sub
test
adc
add
cmp
pop
sbb
rclb
and
sbb
and
jmp
inc
jae
adc
dec
lcall
dec
incl
int
pop
mov
out
mov
idiv
fdivrp
std
dec
icebp
sti
decl
add
daa
dec
cltd
lcall
cmp
or
dec
incl
pop
and
add
or
add
push
incl
add
incl
add
push
push
adc
or
and
or
sbb
call
pop
dec
decl
sbb
add
xor
add
xor
add
or
incl
add
pop
incl
add
incl
add
incl
add
call
or
decl
or
call
dec
lcall
aas
js
and
xchg
aam
push
mov
ljmp
cli
incl
std
dec
std
push
jmp
jmp
mov
cmp
lcall
inc
mov
call
cmp
and
ljmp
push
mov
ljmp
insl
loope
sub
lcall
push
inc
cmc
push
movaps
add
xor
add
xor
add
es
or
pusha
add
pop
push
add
sbb
add
sbb
pop
pop
add
adc
add
adc
add
or
pop
add
or
add
or
add
pop
adc
add
sldt
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
push
add
or
add
pop
add
sub
add
adc
push
adc
inc
add
sbb
or
pop
add
and
or
imul
sub
sub
xchg
adc
lcall
cmp
adc
dec
sbb
test
sub
cmp
dec
cmp
and
push
adc
jae
sbb
xchg
jmp
push
mov
dec
xchg
fdivr
jbe
icebp
pushl
push
mov
mov
sar
aas
ja
lcall
inc
jp
or
incl
adc
incl
and
add
and
add
incl
add
decl
or
decl
and
or
incl
pop
adc
add
adc
add
add
incl
add
incl
add
incl
add
incl
add
call
or
call
push
push
call
imul
jmp
stc
call
cld
ljmp
clc
dec
clc
jg
hlt
aas
test
jmp
dec
enter
popf
call
or
push
lcall
cmp
dec
mov
ljmp
push
ljmp
jno
ljmp
pop
sar
and
call
sbb
push
adc
mov
adc
xchg
add
xor
or
daa
outsb
add
and
add
and
or
dec
add
sbb
pop
adc
xor
add
push
sub
add
and
add
sbb
add
or
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
or
add
or
add
sbb
add
sbb
add
and
add
and
add
adc
add
adc
add
adc
inc
add
sbb
add
push
push
add
and
and
add
insl
add
jg,pn
rdtsc
mov
adc
add
cmp
or
cmp
adc
push
ds
das
outsl
lret
cmp
in
cmp
sar
cs
xchg
lcall
sub
push
or
dec
call
adc
xor
lret
mov
incl
in
sti
push
push
cld
fcomi
std
ljmp
lods
fcos
cmp
mov
sub
ljmp
mov
sub
jmp
push
test
sbb
push
adc
dec
decl
push
xor
incl
adc
add
adc
push
push
pop
decl
or
decl
pop
pop
decl
or
decl
or
call
adc
adc
pop
call
and
push
xor
mov
lcall
idiv
fwait
icebp
fscale
push
cld
sti
fdivrp
jmp
mov
ljmp
fs
push
sub
call
push
call
pop
inc
lcall
aaa
jno
and
int3
ljmp
jo
ljmp
jae
ljmp
pusha
aad
and
adc
push
decb
adc
rolb
cmp
add
xor
add
jno
or
add
and
or
push
add
sbb
pop
sbb
push
push
add
adc
add
adc
add
or
pop
add
or
add
or
add
pop
adc
add
sldt
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
push
add
or
add
or
add
adc
add
adc
add
pop
aas
add
sbb
or
add
pop
push
add
and
or
outsb
add
addl
adc
add
cmp
or
cmp
adc
cmp
insb
ret
fwait
jmp
inc
movsl
in
xor
scas
lcall
cmp
or
decl
or
call
lcall
sbb
sub
decl
loopne
mov
hlt
dec
repz
push
fcomip
pushl
call
decl
shl
lods
sar
dec
mov
lcall
inc
jne
adc
pop
call
es
call
sub
das
call
sub
push
and
pushf
jmp
dec
mov
and
jge
pushl
mov
dec
std
push
sti
call
in
std
ljmp
lock
cmp
jmp
inc
mov
call
or
call
or
inc
lcall
jb
sub
ljmp
insb
ljmp
jae
ljmp
jno
ljmp
pop
sar
and
fwait
adc
sub
or
cmp
add
cmp
add
xor
add
daa
insb
add
and
or
pop
add
sbb
dec
add
pop
inc
add
adc
xor
add
push
daa
add
and
add
sbb
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
adc
add
adc
add
sbb
add
sbb
add
pop
add
sub
add
adc
push
adc
inc
add
sbb
or
push
add
and
or
add
sub
or
das
addb
xor
add
cmp
sbb
jecxz
and
sbb
jp
sub
cmpsl
out
std
dec
mov
leave
jmp
push
cmp
and
or
cmp
adc
inc
call
or
pop
adc
mov
xor
lcall
call
clc
stc
push
in
jmp
call
idiv
mov
int3
in
ljmp
aam
dec
mov
inc
jg
incl
mov
cmp
iret
incl
in
push
mov
ljmp
clc
incl
jmp
inc
cli
out
push
jmp
sti
mov
int
decl
in
daa
push
leave
lcall
and
call
push
jbe
adc
dec
decl
adc
call
pop
inc
lcall
inc
jl
sub
ljmp
jnp
ljmp
jae
ljmp
pop
iret
jmp
cmp
cld
or
sub
or
cmp
add
ss
add
xor
add
sub
or
pop
add
push
push
add
sbb
pop
sbb
push
push
cmp
push
adc
add
adc
add
sub
add
and
add
or
add
or
add
pop
adc
add
adc
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
adc
add
or
add
and
add
and
add
adc
add
adc
add
sbb
or
dec
add
push
push
add
and
or
pusha
add
and
jo
or
das
addb
xor
add
cmp
or
cmp
adc
dec
std
sbb
mov
inc
stos
jmp
incl
fdivr
sub
lcall
xor
push
push
aaa
decl
or
call
movd
sbb
xchg
lcall
cmp
aad
insb
mov
jmp
repz
out
push
call
idiv
pushl
fdiv
ljmp
fdiv
ljmp
stc
ljmp
stc
fcos
out
std
cld
push
dec
idiv
jmp
mov
out
das
insb
aam
push
aaa
mov
sbb
pop
call
or
cmp
adc
dec
mov
sub
xor
ljmp
jg
ljmp
jb
ljmp
pop
sar
and
call
daa
decb
xor
push
adc
add
cmp
add
xor
or
sub
or
pop
add
pop
push
add
sbb
add
sbb
pop
pop
aas
add
adc
add
adc
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
sldt
pop
adc
add
adc
add
or
add
sub
add
adc
add
push
cmp
pop
sbb
or
dec
add
sbb
pop
add
and
or
jno
or
das
addl
xor
add
cmp
sbb
adc
dec
sti
pop
xor
pop
lahf
sti
inc
movsl
push
aad
decb
out
pushl
mov
pop
dec
je
adc
adc
decl
or
punpckhdq
sbb
mov
and
cmp
lcall
call
mov
cld
clc
std
cld
cld
std
cld
std
std
stc
in
jmp
cld
call
idiv
dec
in
std
mov
loop
call
stos
in
cmp
jmp
push
jmp
xor
xchg
call
push
imul
or
adc
xor
adc
cmp
jmp
pop
stos
pushl
xlat
pushl
xchg
pushl
in
ljmp
daa
push
jmp
movsl
lcall
jns,pn
mov
hlt
pop
adc
roll
adc
xchg
add
xor
add
sub
or
imul
or
pop
add
sbb
dec
add
pop
inc
add
adc
xor
add
movaps
add
and
add
push
add
or
add
or
add
pop
adc
add
sldt
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
adc
add
adc
add
push
cmp
add
sbb
or
push
add
and
or
pusha
add
and
jno
or
das
addb
xor
add
cmp
pop
sbb
nopl
adc
pop
jmp
dec
mov
aas
lcall
push
sar
aas
mov
xchg
lcall
call
and
adc
das
decl
pop
inc
call
or
push
sbb
movsb
ljmp
push
sar
mov
js
ljmp
jmp
cli
jmp
cmc
sti
call
cmc
sti
jmp
hlt
sti
out
stc
stc
std
clc
out
std
jmp
cmc
dec
jmp
clc
jg
repnz
out
jmp
in
call
loop
dec
aas
adc
xor
and
scas
lcall
and
jl
adc
call
push
dec
call
adc
call
sbb
popa
jmp
js
ds
incl
clc
pushl
test
ljmp
aad
es
mov
and
xchg
lcall
sub
call
and
pop
sbb
rolb
adc
cmpsl
add
ss
add
xor
add
sub
je
or
imul
and
add
and
or
push
add
sbb
pop
sbb
push
push
cmp
push
adc
add
adc
add
sub
add
and
add
or
add
or
add
pop
adc
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
add
pop
add
or
add
or
add
and
add
daa
add
adc
add
adc
add
push
add
sbb
or
dec
add
push
push
add
and
or
popa
add
and
jno
or
das
addl
adc
add
aaa
cwtl
add
cmp
or
inc
in
adc
push
sbb
jle
jl,pn
cld
inc
mov
decl
cmp
xchg
lcall
inc
push
call
sbb
decl
or
decl
or
adc
push
call
adc
adc
dec
cmpsb
cmp
call
ret
ljmp
into
jge
fdivr
test
fcos
jle
decl
icebp
pushl
loopne
decl
scas
jmp
push
xchg
cmp
ljmp
push
mov
lcall
sub
call
and
call
adc
pop
call
or
adc
xor
call
cmp
daa
pop
xchg
pushl
je
incl
loope
dec
mov
sti
cmp
leave
jmp
inc
movsl
sbb
cmp
sub
adc
inc
testl
adc
test
adc
xchg
add
xor
add
xor
add
daa
insl
add
and
add
and
push
push
add
sbb
sbb
push
push
aas
add
adc
add
adc
add
or
add
or
add
or
add
push
sldt
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
adc
add
or
add
pop
add
and
add
sub
add
adc
add
adc
add
pop
add
sbb
sbb
add
push
push
add
and
or
popa
add
and
jo
or
das
addl
adc
xchg
add
cmp
or
inc
fimull
sbb
push
and
xchg
xlat
decl
call
decl
jmp
cmp
lahf
jmp
dec
ja
sbb
push
call
sbb
decl
add
cmp
adc
push
call
pop
pop
call
cs
lcall
inc
cmp
es
test
and
sub
cmp
stos
decl
incl
pushl
pusha
jmp
inc
lods
lcall
xor
adc
adc
adc
arpl
adc
inc
decl
add
decl
add
xor
pop
xor
sub
pushl
gs
ds
decl
out
push
stos
clc
call
incl
clc
pushl
fdivrp
daa
push
mov
push
aaa
xchg
sbb
call
pop
decl
and
pop
pop
ss
add
cmpsl
add
aaa
xchg
add
xor
add
xor
add
daa
insl
add
and
pop
add
pop
push
add
sbb
add
sbb
pop
pop
aas
add
adc
add
adc
add
pop
add
or
add
or
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
or
add
and
add
and
add
sub
add
adc
add
adc
add
sbb
or
dec
add
push
push
add
and
or
pusha
add
and
outsl
add
jg,pn
rdtsc
xchg
adc
add
ss
add
cmp
add
adc
dec
lcall
jne
xor
incl
in
dec
sar
dec
incl
cmp
stos
jmp
push
cmp
adc
adc
decl
or
incl
add
incl
cmp
or
incl
or
incl
or
decl
adc
mov
call
push
call
or
inc
decl
add
decl
add
decl
add
decl
add
decl
or
call
push
and
jmp
cmp
mov
cmp
lcall
pop
mov
lcall
call
incl
out
ljmp
push
jmp
inc
mov
push
sub
adc
push
call
and
push
sbb
lret
add
aaa
cmpsb
add
ss
add
xor
add
sub
jbe
or
insl
add
and
add
and
or
push
add
sbb
add
sbb
pop
pop
inc
add
adc
xor
add
movaps
add
and
add
or
add
sbb
add
adc
add
push
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
or
add
and
add
sub
add
adc
push
adc
aas
add
sbb
or
dec
add
push
push
add
and
or
pop
add
and
outsb
add
sub
test
rdpmc
mov
adc
add
aaa
cwtl
add
cmp
or
cmp
adc
inc
lcall
insl
mov
cmp
jecxz
inc
mov
incl
aas
lods
repz
cwtl
xor
ljmp
popa
xchg
jmp
inc
jb
sbb
call
push
inc
decl
sbb
call
push
cmp
movlps
decl
and
decl
or
decl
call
or
sub
adc
daa
call
pop
das
call
sbb
cmp
pop
and
lcall
sub
and
pop
ljmp
push
jg
cmp
incl
sar
push
lods
jmp
push
mov
call
decl
hlt
incl
out
ss
jmp
push
mov
sbb
sub
adc
popa
call
daa
push
clc
or
pop
cmp
add
cmp
add
xor
add
sub
or
outsb
add
and
add
and
or
push
add
sbb
dec
add
sbb
push
push
cmp
add
adc
add
sub
add
and
add
or
add
or
add
pop
adc
add
adc
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
add
and
add
sub
add
adc
add
adc
add
push
aas
add
sbb
or
dec
add
sbb
pop
add
and
or
add
jae
or
xor
add
xor
add
cmp
add
cmp
or
sub
adc
cmp
ljmp
mov
xor
cmp
lods
cld
cmp
ljmp
imul
jmp
dec
jp
push
inc
insb
lcall
ss
lcall
cs
call
daa
dec
call
inc
call
sbb
inc
lcall
das
push
lcall
pop
jmp
inc
imul
push
jl
das
pop
mov
xor
pushf
pushl
jne
cmp
incl
into
decl
call
clc
call
call
decl
incl
out
xor
jmp
cmp
call
jns,pn
adc
sub
dec
icebp
or
cmp
add
ss
add
xor
add
sub
or
insb
add
and
add
and
or
push
add
sbb
dec
add
sbb
push
push
cmp
add
adc
add
sub
add
add
or
add
or
add
or
add
pop
push
add
pop
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
adc
add
push
add
or
add
or
add
sub
add
adc
push
adc
add
push
add
sbb
sbb
or
push
add
and
or
add
es
or
jno
or
jg,pn
wrmsr
xchg
rdmsr
mov
adc
add
ss
add
cmp
push
sbb
mov
pop
rorb
adc
jmp
adc
lcall
and
push
cmp
jmp
pop
stos
pushl
jae
pushl
mov
pushl
cmc
pushl
mov
clc
cmp
pushl
xchg
xor
sar
das
jg
ljmp
scas
ljmp
mov
jmp
arpl
pushl
jg
aas
sar
inc
pushf
dec
cmpsl
ljmp
mov
decl
call
call
decl
incl
in
pushl
jg
ljmp
data16
jmp
push
mov
and
sbb
jp
adc
call
daa
pop
adc
inc
loopne
sbb
ret
cmp
add
xor
add
xor
add
sub
or
imul
and
add
and
or
push
add
sbb
dec
add
sbb
push
adc
aaa
add
adc
add
daa
add
or
add
or
add
or
add
or
add
push
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
sldt
add
adc
add
push
add
or
add
or
add
sub
add
adc
add
adc
add
push
cmp
add
sbb
or
add
push
push
add
and
or
popa
add
and
outsb
add
sub
addl
adc
popl
adc
xchg
add
aas
mov
or
daa
ljmp
lcall
sub
cmp
jmp
popf
ljmp
addr16
pushl
mov
pushl
repnz
xchg
repnz
xchg
icebp
pushl
cltd
repnz
cmp
cmp
xchg
in
cmp
in
inc
mov
idiv
dec
scas
std
decl
decl
decl
incl
clc
incl
incl
aas
out
aaa
jl
ljmp
retw
jmp
scas
lcall
inc
lahf
lcall
xor
sbb
push
adc
pop
std
push
repnz
and
or
inc
enter
scas
add
aaa
fwait
add
xor
mov
push
xor
add
sub
or
imul
or
pop
add
push
push
add
sbb
dec
add
sbb
push
adc
add
adc
add
sub
add
daa
add
or
add
or
add
or
add
or
add
pop
adc
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
adc
add
pop
add
or
add
or
add
sub
add
adc
add
adc
add
push
cmp
or
inc
add
sbb
or
add
and
or
pop
add
insb
add
sub
push
sub
test
adc
mov
adc
add
ss
add
ss
add
aas
lahf
add
cmp
rolb
or
out
or
stc
adc
and
sbb
aaa
lcall
and
sbb
imul
and
sahf
and
stos
jmp
arpl
std
das
ja
std
xor
xchg
cmp
loopne
ds
out
aas
xchg
ljmp
fdivrp
cmp
fdivr
cmp
xor
ljmp
popa
mov
jmp
push
stos
jmp
dec
movsb
lcall
xor
sbb
call
sub
adc
pop
clc
adc
push
out
or
dec
fisttpll
sbb
add
cmp
add
aaa
popf
add
xor
add
xor
add
das
addb
sub
jne
or
and
pusha
add
and
or
push
add
sbb
add
sbb
pop
sbb
pop
push
cmp
add
adc
add
sub
add
sub
add
and
add
pop
add
or
add
sbb
add
adc
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
push
add
or
add
or
add
sub
add
adc
add
adc
add
adc
inc
add
sbb
or
dec
add
sbb
push
add
and
and
or
push
add
sub
push
sub
xchg
adc
mov
adc
popl
adc
xchg
add
aaa
cwtl
add
cmp
add
cmp
or
and
or
and
push
adc
testl
adc
cli
adc
cmp
call
sub
pop
cs
cmp
push
inc
mov
and
jmp
dec
xchg
jmp
push
sahf
jmp
dec
lcall
inc
mov
sbb
cmp
xor
pop
das
jne
push
sub
push
sub
call
and
adc
dec
cld
adc
push
cli
adc
pop
cmc
pop
in
or
push
loope
push
dec
roll
sbb
add
cmp
push
xor
add
das
test
push
sub
ja
or
imul
and
add
and
or
pop
add
push
push
add
sbb
add
sbb
pop
pop
inc
add
adc
add
adc
add
daa
add
pop
add
or
add
sbb
add
push
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
push
add
or
add
or
add
daa
add
adc
add
adc
add
push
aas
add
sbb
sbb
or
push
add
and
or
pop
add
and
add
imul
or
sub
add
addb
xor
add
xor
add
cmp
add
mov
push
adc
into
or
fiaddl
cvttps2pi
pop
or
sub
or
xor
push
sbb
clc
adc
dec
cli
adc
pop
cld
adc
pop
std
adc
pop
std
adc
std
adc
popa
std
adc
cld
adc
pop
cld
adc
pop
sti
adc
push
cli
adc
push
cli
adc
push
cli
mov
testl
sbb
aas
loopne
sbb
xlat
or
inc
mov
add
cmp
sysexit
xchg
add
xor
add
das
test
push
jg,pn
push
sub
add
sub
or
add
and
or
pop
add
pop
push
add
sbb
dec
add
sbb
pop
pop
inc
add
adc
add
cvttps2pi
add
daa
add
and
add
sbb
add
sbb
add
push
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
push
add
or
add
or
add
and
add
and
add
daa
add
adc
add
adc
add
adc
add
push
cmp
add
sbb
or
dec
add
sbb
push
add
and
or
pusha
add
and
add
push
or
sub
push
sub
add
jg,pn
push
das
addl
xor
add
xor
add
ss
add
aaa
xchg
add
cmp
add
ds
adc
enter
lret
ds
sbb
or
dec
loopne
sbb
loope
sbb
loope
sbb
dec
loop
push
dec
fisttps
push
dec
fimuls
sbb
dec
push
dec
fmuls
sbb
inc
iret
pop
sbb
add
cmp
mov
adc
stos
add
cmp
add
xor
add
xor
add
xor
add
das
addl
sub
jns
or
sub
or
imul
or
pop
add
and
or
push
add
sbb
add
sbb
or
inc
add
push
add
adc
add
adc
add
cvttps2pi
add
sub
add
and
add
pop
add
or
add
sbb
add
push
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
push
add
or
add
or
add
or
add
add
adc
add
adc
add
adc
add
adc
aas
add
sbb
or
dec
add
sbb
add
sbb
push
add
and
and
or
data16
push
or
sub
sub
push
sub
addl
rdtsc
mov
adc
mov
adc
popl
sysexit
xchg
add
ss
add
ss
add
cmp
add
cmp
add
inc
mov
push
inc
mov
push
inc
mov
adc
inc
mov
push
inc
mov
push
inc
mov
adc
lods
add
test
add
cmp
adc
xchg
add
xor
add
xor
add
xor
add
addl
push
sub
or
daa
outsl
add
push
or
pusha
add
and
or
push
add
sbb
dec
add
sbb
pop
sbb
pop
push
cmp
add
adc
add
adc
add
daa
add
pop
add
or
add
sbb
add
push
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
or
add
or
add
sub
add
adc
add
adc
push
adc
cmp
pop
sbb
or
inc
add
sbb
or
add
push
push
add
pop
pop
add
and
and
or
add
outsb
add
jb
or
sub
push
sub
addb
das
test
wrmsr
xchg
rdtsc
mov
adc
mov
adc
mov
adc
add
xor
xchg
add
xor
xchg
add
aaa
cwtl
add
aaa
cwtl
add
aaa
cwtl
add
aaa
cwtl
add
aaa
cwtl
add
aaa
cwtl
add
ss
add
xor
xchg
add
xor
add
xor
add
xor
add
xor
add
das
test
push
das
addl
push
sub
add
sub
or
outsb
add
push
or
add
and
and
or
push
add
sbb
add
sbb
or
inc
add
pop
aas
add
push
cmp
push
adc
add
adc
add
add
and
add
and
add
sbb
add
sbb
add
push
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
pop
add
or
add
or
add
sub
add
adc
add
adc
add
adc
add
adc
add
sbb
or
inc
add
sbb
or
add
push
push
add
and
or
pop
add
and
or
add
and
imul
sub
or
jno
or
sub
push
sub
add
jle,pn
push
das
addb
das
addb
xor
rdtsc
xchg
rdtsc
mov
rdmsr
mov
rdpmc
mov
rdpmc
mov
rdpmc
mov
rdpmc
mov
rdpmc
mov
rdpmc
mov
rdmsr
mov
rdtsc
mov
rdtsc
mov
rdtsc
xchg
wrmsr
test
push
das
addl
das
addl
push
sub
add
sub
or
sub
or
imul
and
arpl
or
pop
add
and
or
push
add
push
push
add
sbb
dec
add
sbb
pop
sbb
pop
push
cmp
add
adc
add
adc
add
sub
add
and
add
or
add
or
add
sbb
add
push
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
push
add
or
add
or
add
pop
add
and
add
and
add
adc
add
adc
add
adc
add
adc
aas
add
sbb
or
inc
add
sbb
or
add
push
push
add
pop
push
add
and
or
pop
add
and
or
add
and
imul
daa
outsb
add
jno
or
sub
or
sub
add
sub
add
sub
jge
push
jg,pn
push
jg,pn
push
addb
addb
addb
addb
jg,pn
push
jg,pn
push
sub
jge
push
sub
add
sub
or
sub
or
jno
or
outsl
add
insb
add
push
add
and
or
pop
add
and
or
push
add
push
push
add
sbb
add
sbb
or
inc
add
sbb
pop
pop
add
adc
aaa
add
adc
add
push
daa
add
and
add
sbb
add
or
add
pop
adc
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
adc
add
or
add
or
add
add
adc
add
adc
add
adc
add
adc
aas
add
sbb
or
inc
add
sbb
or
dec
add
sbb
push
add
pop
push
add
and
or
pop
add
and
or
arpl
or
add
and
push
or
insb
add
outsb
add
jo
or
jno
or
jb
or
sub
sub
sub
or
sub
sub
sub
sub
or
jb
or
jo
or
outsl
add
insl
add
imul
and
data16
and
or
popa
add
and
or
pop
add
and
or
push
add
sbb
dec
add
sbb
or
inc
add
sbb
pop
pop
add
adc
aaa
add
adc
add
adc
add
sub
add
and
add
or
add
or
add
sbb
add
pop
add
pop
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
push
add
or
add
or
add
pop
add
and
add
add
sub
add
adc
add
adc
push
adc
add
adc
add
sbb
or
inc
add
sbb
or
dec
add
sbb
add
sbb
push
add
pop
push
add
pop
pop
add
and
and
or
pop
add
and
or
arpl
or
add
and
push
add
imul
or
imul
or
push
add
and
add
and
add
and
and
or
pusha
add
and
or
pop
add
pop
pop
add
pop
push
add
pop
push
add
push
push
add
sbb
dec
add
sbb
or
inc
add
pop
inc
add
push
add
adc
aaa
add
adc
add
movntps
add
daa
add
and
add
push
add
or
add
or
add
or
add
pop
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
push
add
or
add
or
add
or
add
and
add
and
add
adc
add
adc
push
adc
add
push
cmp
pop
pop
cmp
add
pop
inc
add
sbb
or
dec
add
sbb
sbb
add
sbb
add
push
push
add
pop
push
add
pop
push
add
and
or
pop
add
and
or
pop
add
and
or
pop
add
and
or
pop
add
and
or
pusha
add
and
or
pop
add
and
or
pop
add
and
or
pop
add
and
or
pop
add
pop
push
add
pop
push
add
push
push
add
sbb
add
sbb
add
sbb
add
sbb
or
inc
add
sbb
sbb
pop
pop
cmp
add
adc
add
adc
add
adc
add
push
sub
add
and
add
or
add
or
add
or
add
pop
adc
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
pop
add
or
add
or
add
or
add
and
add
and
add
adc
add
adc
add
adc
add
adc
add
adc
cmp
add
sbb
pop
sbb
pop
sbb
or
dec
add
sbb
or
add
sbb
add
sbb
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
push
add
push
push
add
push
push
add
sbb
dec
add
sbb
add
sbb
or
dec
add
sbb
pop
sbb
pop
sbb
pop
sbb
pop
pop
add
push
cmp
push
adc
add
adc
add
adc
add
sub
add
add
and
add
and
add
sbb
add
or
add
or
add
pop
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
adc
add
or
add
or
add
sbb
add
and
add
adc
add
adc
add
adc
add
adc
add
adc
cmp
add
pop
inc
add
sbb
pop
sbb
sbb
pop
sbb
or
dec
add
sbb
or
dec
add
sbb
or
dec
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
dec
add
sbb
or
dec
add
sbb
pop
sbb
pop
sbb
pop
pop
inc
add
pop
aas
add
pop
cmp
add
adc
add
adc
add
adc
add
adc
add
sub
add
and
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
and
add
add
sub
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
cmp
push
push
cmp
add
pop
inc
add
pop
inc
add
pop
inc
add
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
pop
inc
add
pop
inc
add
pop
aas
add
push
add
push
cmp
push
adc
cmp
push
adc
add
adc
add
adc
add
adc
add
movaps
add
add
and
add
or
add
or
add
or
add
sbb
add
pop
add
or
add
push
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
sbb
add
or
add
and
add
add
movaps
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
cmp
push
adc
cmp
push
adc
cmp
push
adc
cmp
push
adc
cmp
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sub
add
daa
add
or
and
add
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
push
add
or
add
or
add
or
add
add
push
sub
add
sub
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
cvttps2pi
add
sub
add
sub
add
sub
add
or
and
add
add
or
add
or
add
or
add
sbb
add
sbb
add
pop
add
or
add
push
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
adc
add
adc
add
adc
add
push
add
or
add
or
add
or
add
or
add
push
add
pop
add
or
add
or
add
or
add
add
movaps
add
cvtpi2ps
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
movaps
add
push
daa
add
and
add
or
and
add
pop
add
push
add
or
add
or
add
or
add
or
add
or
add
push
adc
add
sldt
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
sldt
push
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
push
add
pop
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
and
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sldt
push
sldt
push
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
or
add
sbb
add
push
add
pop
add
pop
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
pop
add
push
add
or
add
or
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
add
or
add
pop
adc
add
pop
adc
add
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sldt
push
sldt
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
push
add
pop
adc
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
push
sldt
push
sldt
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
push
sldt
push
sldt
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
push
add
push
sldt
push
sldt
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
push
sldt
add
push
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
inc
add
incl
add
cld
add
ud0
push
add
pop
inc
add
add
incl
add
add
add
add
cld
aas
cld
aas
clc
pop
jmp
ud0
rolb
add
ud0
addb
add
pop
incl
add
incb
add
cld
add
clc
add
push
add
jg
add
aas
loopne
add
rolb
pop
addb
pop
addb
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incl
add
incl
add
incl
add
inc
add
jmp
add
lock
add
add
clc
add
cld
add
incb
add
add
incl
add
add
add
add
jmp
add
add
push
add
add
clc
add
add
clc
add
add
incb
add
incl
add
add
add
inc
add
push
add
cld
add
incl
add
add
add
add
jmp
add
add
add
add
ljmp
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
sldt
push
adc
add
adc
add
adc
add
adc
add
push
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
push
add
or
add
pop
adc
add
adc
add
sldt
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
adc
add
adc
add
adc
add
push
add
or
add
or
add
or
add
or
add
sbb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
or
add
or
add
sbb
add
sbb
add
sbb
add
pop
add
pop
adc
add
push
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
adc
add
push
add
or
add
or
add
or
add
sbb
add
and
add
and
add
and
add
sub
add
sub
add
cvtpi2ps
add
adc
add
adc
add
cvtpi2ps
add
push
sub
add
daa
add
add
and
add
and
add
pop
add
or
add
sbb
add
sbb
add
push
add
pop
adc
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
adc
add
or
add
or
add
sbb
add
and
add
and
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sub
add
sub
add
and
add
or
add
or
add
or
add
sbb
add
pop
add
pop
adc
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
adc
add
adc
add
adc
add
or
add
or
add
and
add
and
add
and
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
cmp
push
push
cmp
add
push
add
push
add
push
add
push
add
push
add
push
add
push
cmp
pop
adc
cmp
pop
adc
add
adc
add
adc
add
sub
add
push
and
add
pop
add
sbb
add
or
add
pop
adc
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
push
add
or
add
or
add
or
add
and
add
and
add
daa
add
adc
add
adc
push
adc
add
adc
cmp
pop
pop
aas
add
pop
inc
add
sbb
or
inc
add
sbb
or
dec
add
sbb
or
dec
add
sbb
or
dec
add
sbb
or
dec
add
sbb
or
dec
add
sbb
or
inc
add
sbb
pop
pop
inc
add
push
cmp
add
adc
add
adc
push
adc
add
cvtpi2ps
add
add
and
add
sbb
add
or
add
pop
adc
add
adc
add
push
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
push
add
or
add
or
add
or
add
and
add
and
add
adc
add
adc
add
adc
add
adc
add
pop
inc
add
sbb
or
inc
add
sbb
or
dec
add
sbb
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
push
add
push
push
add
sbb
dec
add
sbb
or
dec
add
sbb
pop
pop
inc
add
push
add
adc
add
adc
add
or
and
add
pop
add
or
add
sbb
add
push
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
or
add
or
add
and
add
and
add
adc
add
adc
add
push
cmp
add
sbb
or
dec
add
sbb
add
sbb
push
add
pop
push
add
and
or
pop
add
and
or
pusha
add
and
or
bound
or
add
and
add
and
add
and
add
and
add
and
or
popa
add
and
or
pop
add
and
or
push
add
push
push
add
sbb
dec
add
sbb
pop
sbb
pop
sbb
push
push
cmp
push
adc
add
adc
add
sub
add
add
and
add
push
add
or
add
or
add
pop
adc
add
adc
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
push
adc
add
adc
add
push
add
or
add
sbb
add
sub
add
adc
add
adc
add
pop
inc
add
sbb
or
dec
add
sbb
add
pop
push
add
and
or
pop
add
and
or
add
imul
or
insl
add
sub
or
sub
or
jb
or
sub
or
sub
or
insb
add
es
or
add
and
or
pop
add
and
or
push
add
sbb
add
sbb
or
inc
add
pop
inc
add
adc
aaa
add
adc
add
movaps
add
and
add
and
add
sbb
add
sbb
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
adc
add
or
add
or
add
sub
add
adc
add
adc
add
adc
aas
add
sbb
sbb
or
add
push
push
add
and
or
pop
add
and
or
imul
or
sub
sub
push
sub
add
sub
jle
push
jg,pn
push
das
addl
push
das
addb
das
addl
push
jg,pn
push
jge,pn
push
sub
add
sub
or
jno
or
insl
add
imul
or
pusha
add
and
or
push
add
sbb
dec
add
sbb
pop
pop
inc
add
adc
xor
add
or
and
add
sbb
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
or
add
sub
add
adc
push
adc
aas
add
sbb
sbb
or
add
push
push
add
and
or
pusha
add
and
add
push
or
outsl
add
sub
push
sub
add
addb
xor
rdtsc
mov
push
xor
add
xor
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
addb
sub
js
or
jae
or
outsb
add
es
add
and
pop
push
add
sbb
dec
add
sbb
push
add
adc
add
adc
add
and
add
push
add
or
add
or
add
push
adc
add
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
or
add
sub
add
adc
add
adc
add
push
cmp
add
sbb
or
add
pop
push
add
and
or
pusha
add
and
insb
add
sub
push
sub
addb
xor
add
xor
add
xor
add
xor
cltd
add
mov
add
aas
lods
add
scas
add
cmp
add
cmp
add
test
add
cmp
add
xor
add
xor
add
das
addl
or
sub
or
imul
or
pop
add
pop
push
add
sbb
add
sbb
pop
pop
inc
add
adc
xor
add
push
sub
add
and
add
pop
add
or
add
or
add
pop
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
and
add
cvtpi2ps
add
adc
add
pop
inc
add
sbb
or
add
and
or
popa
add
and
insl
add
jne
or
das
addl
rdpmc
lea
sysexit
xchg
add
ss
add
cmp
add
inc
mov
or
sub
adc
dec
in
adc
inc
lock
cmp
repz
cmp
adc
cmp
out
adc
cmp
loope
sbb
iret
push
sbb
mov
add
cmp
add
xor
mov
push
xor
add
ja
or
and
popa
add
and
or
dec
add
sbb
push
push
cmp
push
adc
add
or
pop
add
or
add
or
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
adc
add
adc
add
or
add
daa
add
adc
add
adc
add
push
add
sbb
or
dec
add
push
push
add
and
or
pusha
add
and
outsb
add
sub
test
rdmsr
mov
adc
add
ss
add
cmp
adc
inc
lret
or
fisttpl
and
push
hlt
adc
cs
call
xor
sbb
arpl
sbb
lcall
aaa
lcall
cmp
sbb
pusha
lcall
ss
lcall
xor
push
call
sub
dec
notl
es
out
or
fisttps
pop
aaa
lret
cmp
add
xor
mov
push
xor
or
daa
insl
add
and
add
and
or
push
add
sbb
add
sbb
pop
push
add
adc
add
adc
add
pop
add
or
add
or
add
pop
adc
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
push
adc
add
adc
add
or
add
sub
add
adc
push
adc
inc
add
sbb
or
add
pop
push
add
and
or
add
sub
addl
xor
add
aaa
cwtl
add
cmp
add
sbb
fisttpll
pop
out
adc
push
sti
push
sub
sbb
je
push
cmp
and
xchg
jmp
inc
mov
and
dec
mov
es
lods
es
stos
and
dec
cmpsb
and
and
jmp
inc
nop
jmp
aas
test
sbb
push
adc
and
or
xor
or
xor
add
aaa
mov
adc
lahf
add
xor
mov
comiss
add
jno
or
imul
or
push
add
sbb
inc
add
pop
aas
add
adc
add
cvtpi2ps
add
and
add
pop
add
or
add
or
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
sub
add
adc
pop
adc
inc
add
sbb
or
push
add
and
or
popa
add
imul
or
das
addl
xor
add
aaa
cwtl
add
cmp
pop
sbb
or
dec
out
and
adc
sub
lcall
xor
jmp
dec
ret
ljmp
dec
ret
sub
sub
sub
es
mov
and
mov
and
scas
jmp
test
jmp
cmp
mov
jmp
cmp
and
cmpsb
and
stos
and
pushf
lcall
aaa
js
push
sub
adc
decb
xor
or
xlat
add
cmp
add
xor
add
xor
add
daa
insb
add
and
or
pop
add
sbb
inc
add
push
aas
add
adc
add
cvtpi2ps
add
and
add
pop
add
or
add
pop
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
push
adc
add
push
add
or
add
push
add
and
add
adc
add
adc
add
push
cmp
pop
sbb
sbb
pop
push
add
and
and
add
sub
ucomiss
add
xor
add
aaa
cwtl
add
cmp
or
inc
aad
sbb
addr16
sbb
jnp
push
xor
daa
inc
ret
dec
iret
ljmp
ljmp
dec
test
and
cmp
lcall
sub
sbb
je
pop
sbb
mov
and
cmpsb
jmp
xor
jmp
cmp
jmp
inc
mov
and
and
jge
and
jmp
xor
and
scas
jmp
cmp
call
sbb
decl
pop
xor
pop
pop
cmp
add
cmp
add
xor
add
sub
add
insl
add
and
add
and
or
push
add
sbb
pop
pop
aas
add
adc
add
movaps
add
and
add
sbb
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
sbb
add
adc
add
adc
add
pop
add
sbb
or
add
and
or
jb
push
sub
add
das
addl
xor
add
cmp
or
inc
or
and
sbb
ss
ljmp
dec
vmovntps
ljmp
dec
movsb
jmp
inc
cmp
xor
sbb
inc
lcall
sub
call
and
call
sbb
decl
adc
call
adc
call
adc
ja
push
and
lcall
and
and
lahf
jmp
push
mov
daa
imul
jmp
cmp
jmp
cmp
jmp
cmp
call
sbb
decb
adc
cmp
add
xor
add
outsb
add
add
and
or
inc
add
push
add
adc
add
push
sub
add
and
add
sbb
add
pop
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
adc
add
sbb
add
sbb
add
adc
add
adc
add
push
add
sbb
or
add
and
or
popa
add
push
or
je
push
jle,pn
rdtsc
mov
adc
add
aaa
cltd
add
cmp
pop
sbb
or
and
sbb
mov
and
scas
ljmp
inc
ljmp
inc
ljmp
dec
stos
ljmp
inc
test
pop
xor
lcall
es
adc
sbb
decl
adc
sbb
or
adc
or
or
or
or
or
or
or
or
or
decl
adc
call
adc
call
adc
xor
push
sbb
sbb
push
lcall
cmp
mov
sub
jmp
push
mov
and
sahf
jmp
cmp
jmp
cmp
jmp
jae
adc
inc
decl
sbb
enter
sahf
add
xor
add
xor
add
outsl
add
and
add
and
or
add
sbb
pop
push
add
adc
add
daa
add
and
add
sbb
add
push
add
push
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
pop
add
or
add
adc
add
adc
add
sbb
or
pop
add
and
add
insb
add
addb
xor
add
cmp
or
dec
call
sbb
jle
and
test
ljmp
dec
mov
jmp
xor
sbb
aas
call
pop
decl
or
incl
push
add
or
push
decl
or
decl
or
decl
or
decl
or
decl
or
adc
movups
call
sbb
decl
push
sbb
or
adc
push
push
adc
or
adc
or
or
call
or
inc
lcall
daa
lcall
xor
jmp
ss
jmp
dec
xchg
lcall
sub
and
xor
call
sbb
or
inc
roll
adc
mov
add
xor
add
outsb
add
and
add
pop
pop
add
sbb
add
sbb
push
adc
xor
add
or
pop
add
or
add
pop
adc
add
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
push
add
push
adc
add
push
add
or
add
or
add
sub
add
push
cmp
add
sbb
pop
add
and
add
sub
add
das
addb
xor
add
cmp
aad
and
sbb
je
and
jmp
inc
ret
dec
ljmp
inc
sahf
jmp
xor
call
and
call
sbb
decl
adc
decl
adc
decl
adc
decl
or
decl
or
decl
prefetch
or
call
ud0
adc
call
adc
call
adc
call
sbb
call
and
pop
sbb
call
sbb
decl
adc
call
adc
call
adc
decl
adc
decl
adc
or
adc
ud2
sbb
lcall
and
ljmp
imul
ds
sbb
jmp
inc
into
jmp
cmp
call
sbb
or
dec
fadds
adc
popl
wrmsr
test
or
jns
or
insl
add
and
or
push
add
sbb
add
sbb
pop
adc
xor
add
sub
add
and
add
sbb
add
pop
add
push
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
adc
add
pop
add
sub
add
adc
inc
add
sbb
add
and
or
bound
or
insl
add
sub
comiss
add
ss
add
mov
sbb
arpl
push
das
jmp
inc
mov
ljmp
dec
cmpsl
jmp
jae
push
sub
call
and
call
sbb
call
sbb
adc
or
decl
push
ud0
movups
adc
adc
adc
adc
push
adc
decl
or
decl
push
ud0
adc
call
or
decl
inc
incl
imul
or
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
call
adc
decl
add
pushl
gs
lret
idiv
inc
ret
push
bound
and
into
jmp
es
sbb
or
dec
aam
adc
popf
add
xor
add
imul
and
or
push
add
sbb
pop
sbb
push
adc
add
movaps
add
add
or
add
or
add
pop
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
sbb
add
sbb
add
adc
add
adc
add
sbb
or
dec
add
pop
push
add
and
or
insb
add
das
addl
xor
add
inc
mov
pop
daa
outsl
jmp
cmp
ljmp
enter
mov
and
sub
lcall
xor
sbb
jmp
xor
lcall
sub
call
adc
decl
or
ud0
pi2fd
or
or
or
or
pop
pop
push
incl
add
add
add
add
add
add
pop
add
decl
sub
dec
or
and
add
add
incl
push
push
incl
push
pop
decl
or
decl
movlhps
adc
call
adc
decl
push
pop
decl
push
and
das
jnp
dec
jmp
jecxz
ljmp
mov
jmp
sar
daa
dec
mov
decl
sbb
add
adc
cwtl
add
xor
add
imul
or
push
add
sbb
push
push
cmp
add
or
pop
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
or
add
or
add
daa
add
adc
add
push
inc
add
sbb
or
push
add
and
or
push
or
das
addl
adc
lcall
push
stc
sbb
js
and
mov
sub
int
sub
sub
pushl
inc
outsb
cmp
xor
and
dec
jmp
cmp
call
sbb
decl
or
or
or
or
pop
pop
pop
incl
pop
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
pop
call
or
add
add
incl
add
add
add
add
add
add
add
add
add
or
or
or
adc
decl
or
jmp
fs
jl
clc
jmp
out
out
ljmp
pushf
lcall
and
jmp
dec
mov
decl
push
inc
mov
add
xor
add
and
pop
add
sbb
add
sbb
adc
xor
add
sub
add
and
add
sbb
add
push
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
sbb
add
push
add
sub
add
push
cmp
pop
sbb
or
pop
add
add
sub
das
addb
xor
push
dec
lret
adc
pop
std
sbb
jp
es
mov
ljmp
pop
mov
and
jl
das
dec
jbe
inc
inc
stos
incl
sahf
pushl
dec
push
call
sub
decl
adc
decl
or
or
or
push
push
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
adc
add
inc
incl
pop
pop
decl
sbb
sbb
arpl
add
pop
incl
or
pop
incl
or
dec
incl
sub
pop
push
adc
add
add
add
add
add
add
or
or
or
sbb
jmp
jo
lcall
lcall
dec
in
in
call
cltd
call
mov
and
lret
jmp
dec
mov
decl
pop
inc
in
add
stos
add
xor
add
xor
add
outsb
add
and
or
push
add
sbb
pop
pop
inc
add
adc
add
adc
add
and
add
sbb
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
pop
add
or
add
and
add
sub
push
adc
add
adc
inc
add
sbb
add
pop
push
add
and
add
jno
push
sub
mov
adc
add
and
xor
jmp
dec
mov
ljmp
pop
mov
ljmp
cmp
dec
mov
pushl
push
jbe
and
call
and
decl
ud0
pop
push
incl
push
or
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
add
dec
incl
adc
add
cmp
push
inc
call
mov
jns
inc
outsl
call
sar
adc
into
decl
push
mov
incl
or
incl
or
add
add
add
add
add
add
add
lcall
dec
jne
sub
out
jmp
std
pushl
jecxz
dec
pop
xchg
lcall
push
mov
and
inc
mov
adc
pop
incl
push
inc
xlat
add
cmp
add
xor
or
push
or
pop
add
push
push
add
sbb
pop
push
cmp
add
movntps
add
and
add
sbb
add
pop
add
pop
adc
add
or
add
or
add
add
add
add
add
add
add
add
adc
add
adc
add
sbb
add
pop
add
sub
add
pop
aas
add
sbb
or
push
add
and
or
insb
add
xor
add
mov
sbb
xchg
jmp
pop
lret
ljmp
outsl
fdivrp
xor
lcall
inc
cwtl
pushl
pop
xlat
aas
cmp
pushl
js
pop
cmp
decl
push
pop
jmp
push
daa
ljmp
and
decl
adc
incl
adc
add
add
incl
add
incl
add
or
adc
push
adc
add
nop
incl
dec
call
addr16
sub
cmp
mov
decl
cli
call
ljmp
scas
repz
bnd
repz
repnz
in
pushl
outsl
in
adc
incl
sbb
incl
or
incl
add
incl
add
incl
add
decl
add
lcall
pop
xchg
lcall
bound
mov
pop
decl
sbb
and
movsb
call
sbb
add
inc
mov
add
xor
add
and
add
and
or
dec
add
sbb
push
adc
add
push
daa
add
and
add
sbb
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
push
add
or
add
and
add
sub
add
adc
inc
add
sbb
pop
add
and
jne
push
addb
xor
add
cmp
sbb
jmp
pop
jnp
cmp
jmp
push
mov
sub
incl
dec
clc
pushl
dec
sahf
jmp
pop
adc
push
add
decl
aaa
jmp
jbe
adc
dec
incl
or
incl
add
add
add
or
sbb
or
inc
incl
and
add
in
incl
sti
call
stc
lcall
cmc
lcall
idiv
pop
sti
lcall
idiv
xchg
stc
push
std
fcos
std
pushl
bnd
in
ljmp
repz
jg
stc
incl
in
cmc
lcall
jmp
pop
in
add
mov
add
cmp
add
add
incl
add
incl
add
decl
or
ljmp
leave
fdivr
fstp
xor
jo
adc
lahf
ljmp
push
xor
jmp
add
ss
add
xor
add
insb
add
and
or
inc
add
push
cmp
add
or
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
push
add
and
add
pop
aas
add
sbb
or
push
add
and
or
sub
mov
adc
cwtl
push
adc
adc
pop
mov
cmp
repnz
cmp
lcall
push
iret
ljmp
and
or
push
incl
add
xor
adc
push
add
decl
or
incl
add
incl
add
or
sbb
stos
decl
aad
xor
icebp
call
jmp
idiv
push
jmp
cmc
lcall
idiv
pop
clc
hlt
lcall
cmc
pushl
call
cli
jmp
cli
decl
jp
decl
out
pushl
repz
push
pushl
idiv
push
mov
out
ljmp
gs
or
cmp
incl
add
incl
add
add
or
inc
incl
loop
jmp
push
push
ljmp
pop
lcall
and
incb
adc
int
adc
popf
add
xor
add
das
addl
or
add
and
or
add
adc
das
add
or
add
or
add
pop
adc
add
or
add
or
add
push
add
add
add
pop
add
add
add
push
adc
add
adc
add
or
add
adc
add
adc
inc
add
sbb
pop
add
es
add
das
test
adc
mov
daa
push
lods
incl
in
call
cld
incl
out
lcall
dec
mov
dec
insl
movsb
ljmp
loope
ss
mov
push
ds
decl
or
incl
push
add
decl
add
incl
add
decl
pop
incl
ds
decl
idiv
pop
in
lcall
hlt
jmp
jmp
idiv
pop
out
decl
idiv
inc
mov
pushl
in
ljmp
jb
pushl
icebp
inc
jecxz
call
inc
fdivrp
or
arpl
decl
cmc
call
decl
idiv
dec
cltd
icebp
ljmp
lock
xchg
incl
mov
incl
add
incl
or
int3
dec
cld
push
clc
idiv
pop
fs
or
pop
loope
and
mov
repnz
cmp
add
xor
add
insl
add
and
or
push
add
sbb
pop
push
cmp
add
or
sbb
add
push
add
push
adc
add
or
add
push
add
add
add
or
add
adc
add
push
add
or
add
adc
pop
pop
aas
add
sbb
or
push
add
and
or
outsl
add
sub
mov
push
xor
and
decl
in
jmp
lcall
cld
ljmp
popf
ljmp
cld
ds
test
decl
adc
incl
add
incl
add
incl
add
incl
add
incl
add
decl
and
add
outsl
incl
inc
sar
xor
pop
idiv
arpl
idiv
fs
jmp
lcall
stc
decl
pushl
out
call
push
into
incl
inc
stos
incl
sub
ljmp
call
call
xor
incl
sbb
stos
incl
inc
leave
decl
sahf
lock
stc
lcall
dec
loop
add
decl
sub
incl
add
incl
or
push
cs
jno
cld
push
inc
pop
lcall
sub
lcall
cmp
fadds
adc
lahf
add
xor
addl
sub
and
add
and
or
add
adc
add
push
add
or
add
or
add
pop
adc
add
or
add
pop
add
add
add
or
add
adc
add
sbb
add
pop
add
daa
add
adc
add
sbb
or
add
and
or
jne
push
das
addl
cmp
adc
push
pushl
jg
ljmp
pushl
decl
in
lcall
inc
test
fs
mov
fsubrp
incl
dec
js
adc
and
pop
add
incl
add
incl
add
incl
add
incl
add
decl
or
imul
cmp
out
pusha
lret
outsl
stc
repz
lock
hlt
call
icebp
ljmp
push
iret
incl
cmp
mov
add
incl
adc
incl
adc
sub
test
jbe
xor
lods
incl
adc
or
and
add
xor
incl
adc
add
lcall
lret
call
inc
lock
sub
incl
push
sub
push
add
incl
add
decl
addr16
test
out
ljmp
lods
decl
pop
jmpw
dec
int
daa
push
sar
sbb
adc
mov
add
xor
add
insb
add
and
or
inc
add
push
cmp
push
adc
add
sub
add
and
add
sbb
add
adc
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
sub
push
adc
add
adc
dec
add
push
push
add
and
or
insl
add
sub
add
xor
adc
jmp
inc
test
push
mov
ljmp
sti
ljmp
leave
jmp
push
lcall
mov
test
and
push
incl
push
incl
push
push
incl
add
incl
add
incl
add
decl
or
incl
cmp
incl
jmp
pop
fincstp
jmp
stc
jmp
incl
hlt
call
cmp
incl
xor
incl
and
adc
push
call
push
aas
call
nop
pop
or
call
adc
popa
push
xchg
decl
incl
add
incl
add
incl
add
decl
add
or
pop
adc
rcrl
push
fdivrp
add
mov
incl
cmp
decl
adc
incl
add
add
pop
lcall
sbb
mov
ljmp
stc
jmp
std
dec
repz
and
test
adc
loopne
push
aaa
mov
pop
add
cmp
add
das
addb
sub
or
add
pop
push
add
sbb
add
sbb
push
adc
add
push
add
or
add
push
adc
add
or
add
add
add
push
adc
add
push
add
or
add
and
add
adc
add
pop
aas
add
sbb
or
push
add
and
add
jb
push
addb
aaa
adc
inc
rclb
cmp
xor
ljmp
incl
scas
lock
inc
lahf
decl
scas
out
jmp
jne,pn
sbb
sub
or
or
add
or
add
add
incl
add
incl
add
push
cvtps2pi
add
jne
popf
call
inc
xlat
ljmp
xchg
decl
lcall
call
std
incl
std
pushl
test
cmp
sti
jmp
cmp
incl
es
or
inc
incl
add
incl
or
ljmp
adc
jmp
daa
incl
or
incl
add
incl
add
incl
add
incl
add
incl
add
cmp
push
jmp
push
jge
add
incl
sub
add
mov
incl
or
decl
sub
and
mov
sbb
jmp
jecxz
jmp
mov
jmp
dec
mov
call
sbb
add
ss
adc
xchg
add
xor
add
push
or
pop
add
sbb
inc
add
adc
xor
add
daa
add
pop
add
or
add
pop
adc
add
or
add
pop
add
add
add
pop
adc
add
pop
add
or
add
add
adc
add
sbb
or
add
and
or
push
add
xor
adc
inc
loope
and
movsb
loop
cmp
jg
cmp
sar
sysenter
xchg
mov
hlt
cld
jle
lret
and
or
add
incl
push
push
incl
add
incl
add
incl
pop
incl
and
or
inc
call
sub
call
cmp
lcall
pushf
clc
ds
incl
cld
decl
call
lcall
lcall
lcall
incl
cld
lcall
pop
sar
add
insb
incl
adc
incl
pop
adc
add
add
add
adc
call
das
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
call
adc
cmp
sbb
add
ud0
incl
cs
add
stos
incl
cmp
incl
add
incl
add
lcall
push
jo
pop
adc
lcall
ds
ljmp
cli
lcall
pop
lahf
lcall
es
sub
lcall
test
pop
sysenter
xlat
add
aaa
popf
add
xor
add
and
or
push
add
sbb
pop
push
cmp
add
or
add
or
add
pop
adc
add
add
or
add
add
pop
adc
add
sbb
add
and
add
sub
add
adc
inc
add
sbb
pop
add
insl
add
xor
push
adc
negb
cmp
mov
ljmp
jmp
pop
test
adc
mov
repnz
jmp
lcall
mov
sbb
cmp
pop
or
incl
add
incl
or
incl
add
incl
add
add
add
incl
pop
adc
pop
or
incl
sub
mov
incl
cmp
lcall
pop
xlat
ljmp
and
xor
sti
lcall
decl
decl
inc
scas
incl
adc
add
sbb
incl
add
call
inc
call
add
add
add
add
add
add
add
add
add
add
clts
add
incl
add
decl
add
push
incl
sub
test
add
jl
push
adc
incl
add
call
adc
call
adc
dec
cmp
adc
sar
pop
decl
adc
cmp
add
xor
or
data16
and
or
dec
add
pop
inc
add
adc
add
or
sbb
add
push
adc
add
or
add
add
or
add
and
add
adc
add
adc
dec
add
pop
push
add
and
or
das
addb
xor
rdtsc
daa
pop
movsb
ljmp
incl
movsl
ljmp
fs
decl
movsl
call
pop
push
incl
add
incl
add
decl
adc
decl
push
and
incl
or
incl
adc
incl
push
dec
incl
push
pop
incl
and
add
incl
and
add
lods
decl
inc
aam
xor
lcall
lret
incl
adc
and
add
push
incl
add
decl
or
decl
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
push
decl
sbb
or
pop
call
adc
incl
add
incl
pop
ud0
and
pushl
inc
cli
pushl
hlt
call
and
ljmp
jbe
lcall
xor
push
adc
add
cmp
add
sub
add
daa
imul
and
or
inc
add
adc
add
add
or
add
or
add
push
adc
add
or
add
add
or
add
and
add
adc
add
sbb
or
push
add
and
add
xor
adc
dec
rorb
adc
ljmp
insb
mov
ljmp
cmp
call
and
and
pushl
mov
mov
incl
add
add
or
add
add
add
add
sub
sub
pop
daa
imul
add
sub
push
or
add
adc
add
adc
incl
adc
incl
adc
incl
incl
adc
incl
adc
incl
sbb
incl
sub
incl
lods
call
fdivrp
dec
fcos
lcall
push
pop
incl
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
pop
or
adc
and
or
pop
decl
or
decl
add
incl
add
call
and
and
inc
shl
decl
inc
mov
sbb
jge
xor
jmp
in
adc
mov
add
jle,pn
or
outsl
add
and
or
push
add
sbb
push
push
cmp
add
or
add
or
add
pop
adc
add
sldt
add
add
add
push
add
or
add
and
add
adc
add
pop
inc
add
sbb
and
or
push
add
das
test
adc
xchg
adc
dec
pushl
outsl
lret
mov
lcall
cld
ljmp
bound
jmp
sti
mov
cmp
incl
add
add
add
incl
add
pushl
add
cmp
push
incl
adc
incl
adc
jmp
cmp
or
incl
or
incl
push
incl
or
add
sub
add
dec
incl
es
add
mov
sub
iret
call
dec
mov
add
dec
incl
or
incl
add
incl
add
incl
add
incl
push
and
or
and
push
sbb
xor
or
and
add
or
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
decl
adc
jmp
dec
mov
pop
xor
ljmp
ljmp
jae
lcall
and
ret
imul
push
sbb
cmc
add
adc
addb
sub
or
add
sbb
pop
pop
aas
add
adc
add
sbb
add
adc
add
add
add
add
push
add
or
add
and
add
adc
add
sbb
or
add
and
and
jns
push
xor
push
adc
pop
ljmp
xchg
idiv
inc
mov
jmp
dec
xchg
decl
adc
outsl
mov
inc
mov
cmp
push
sbb
add
add
add
add
add
add
add
add
adc
add
inc
add
jmp
add
incl
add
or
inc
or
je
push
sbb
add
and
add
adc
incl
xor
add
dec
incl
push
outsl
incl
stos
jmp
jge
decl
ljmp
in
incl
and
incl
pop
push
incl
add
incl
add
incl
add
decl
adc
std
cmp
andb
lahf
cmpsl
mov
std
jg
mov
cld
push
sbb
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jmp
stos
lcall
cmp
ds
pushl
push
xor
pushl
jns
lcall
sub
cmp
add
aaa
xchg
add
xor
add
and
pop
add
sbb
add
pop
inc
add
adc
add
or
sbb
add
push
adc
add
add
add
sbb
add
push
add
add
adc
add
sbb
sbb
pop
add
insb
add
sub
add
xor
or
xor
push
and
sub
xor
insl
lcall
xor
decl
mov
in
call
into
lock
cmp
jbe
add
add
incl
add
incl
push
or
add
add
decl
push
pop
incl
add
incl
or
pushl
sbb
pop
or
call
adc
incl
adc
incl
sbb
adc
decl
sub
add
int
mov
pushl
repnz
xor
incl
or
or
add
add
add
add
or
sbbb
ljmp
std
std
std
cmc
idiv
fucomi
std
xchg
popf
mov
sub
inc
cld
add
add
add
add
add
add
add
add
add
add
add
add
or
or
push
add
sbb
jmp
cmpsl
lcall
push
xchg
jmp
mov
ljmp
xchg
lcall
xor
cmp
push
aas
cmp
adc
add
xor
add
imul
and
or
add
sbb
adc
add
or
push
add
or
add
push
adc
add
add
add
sbb
add
push
add
add
adc
add
sbb
or
pop
add
insl
add
sub
mov
inc
test
adc
in
sbb
arpl
sub
ljmp
jb
ljmp
pop
call
and
push
lcall
fcos
cli
jmp
loope
decl
incl
add
add
add
add
decl
or
incl
add
incl
add
incl
add
incl
or
incl
or
and
pop
adc
incl
pop
inc
incl
sbb
jge
and
lcall
repnz
lcall
pushl
hlt
incl
xor
incl
adc
incl
pop
adc
add
add
decl
adc
std
insl
test
cld
std
std
scas
mov
cld
xor
dec
cld
add
add
add
add
add
add
add
add
add
add
push
or
push
incl
xor
mov
jmp
xchg
es
lcall
cmp
xor
dec
pushf
decl
sbb
push
push
cmp
lea
push
sub
outsb
add
and
or
push
add
sbb
push
adc
xor
add
sub
add
and
add
sbb
add
adc
add
sldt
or
add
push
add
daa
add
adc
inc
add
sbb
pop
add
insl
add
sub
mov
adc
stos
or
and
pop
and
daa
dec
mov
jmp
dec
mov
decl
adc
push
xchg
xlat
push
push
repz
lcall
jp
add
add
add
add
or
sbb
decl
push
adc
push
pop
or
add
push
incl
sbb
add
daa
incl
push
aaa
incl
sbb
incl
and
and
incl
aaa
movsl
cmp
pushl
hlt
incl
cmc
decl
std
pushl
xchg
clc
call
dec
mov
incl
adc
incl
add
incl
add
incl
je
cli
jecxz
repz
mov
xor
add
add
add
add
add
add
add
add
or
push
call
nop
add
add
adc
inc
lcall
sbb
jmp
jle
jmp
fwait
call
call
pop
mov
call
push
push
out
add
cmp
add
addb
sub
or
add
pop
push
add
sbb
pop
push
cmp
add
sub
add
add
or
add
pop
adc
add
add
or
add
push
add
daa
add
adc
inc
add
push
push
add
and
or
outsb
add
sub
mov
push
xor
pop
push
push
jmp
inc
mov
sub
jmp
mov
decl
xchg
xlat
in
push
cld
lcall
incl
add
incl
add
call
pop
sub
pop
xor
sbb
decl
incl
or
sub
incl
and
add
push
int3
lcall
insb
call
jns
inc
in
mov
mov
sar
cmp
mov
decl
and
or
add
add
add
add
cmp
std
into
sti
std
std
std
cwtl
mov
cmp
add
add
incl
add
incl
add
decl
pop
or
add
add
or
and
call
or
and
icebp
jmp
and
and
outsb
aad
adc
cmp
add
das
addl
sub
or
add
pop
push
add
sbb
pop
push
add
adc
add
sub
add
and
add
sbb
add
adc
add
sldt
or
add
push
add
daa
add
adc
inc
add
push
push
add
and
or
outsb
add
sub
mov
adc
test
pop
adc
adc
dec
jmp
inc
mov
sub
lcall
xor
decl
adc
decl
fdivr
in
push
cld
jmp
test
add
add
add
add
adc
sub
jmp
cmp
incl
adc
incl
and
call
sar
cmp
call
jmp
incl
idiv
in
hlt
std
repz
dec
mov
pushl
lcall
call
cmp
push
jmp
xor
incl
add
incl
xchg
cld
sti
cld
std
out
repnz
std
push
pop
mov
add
and
or
or
incl
add
incl
add
incl
add
decl
or
decl
adc
adc
mov
jmp
mov
test
nopl
lcall
cmp
pushl
jo
lcall
sub
rolb
ss
add
das
test
or
and
push
add
sbb
pop
inc
add
adc
add
and
add
sbb
add
adc
add
push
add
or
add
push
add
add
adc
add
sbb
or
pop
add
insb
add
sub
mov
sbb
unpcklps
and
dec
leave
lcall
cs
mov
adc
pop
pushl
aad
leave
std
std
pushl
popf
incl
add
add
adc
and
xor
cmp
pop
and
incl
sbb
add
fdivrp
dec
lret
pop
lcall
sti
lcall
sti
lcall
std
decl
pushl
jne
call
mov
mov
dec
mov
pop
jno
pushl
pushl
call
lcall
xor
pushl
push
inc
dec
fcom
cld
decl
sbb
sbb
add
add
add
add
add
add
add
add
adc
call
cmovge
and
jmp
xchg
sar
sbb
adc
lcall
das
pushw
outsl
xlat
lcall
xor
decl
push
inc
enter
xchg
add
xor
add
add
and
or
dec
add
pop
inc
add
adc
add
and
add
sbb
add
adc
add
push
add
or
add
sbb
add
adc
add
sbb
sbb
pop
add
imul
sub
add
xor
unpckhps
jmp
cmp
ljmp
dec
lcall
das
mov
adc
sub
adc
dec
jmp
addr16
ljmp
lcall
sbb
decl
adc
jns
push
dec
jb
add
jne
adc
decl
lcall
cld
lcall
sti
lcall
call
std
ljmp
xchg
decl
inc
leave
incl
and
pop
jmp
pop
incl
outsb
incl
pushl
cmp
jne
xchg
mov
cmp
jae
call
clc
clc
std
pushl
es
adc
or
incl
add
incl
add
lcall
sbb
sbb
xchg
push
xorps
and
jmp
mov
lcall
aaa
outsl
call
mov
sbb
pop
pushl
jo
lcall
cmp
rolb
adc
xchg
add
xor
add
push
add
sbb
pop
inc
add
adc
add
or
sbb
add
adc
add
push
add
or
add
or
add
adc
add
sbb
or
pop
add
imul
sub
add
xor
sbb
xor
push
adc
jmp
cmp
jmp
mov
decl
pop
cmp
push
push
mov
cltd
call
mov
cmp
add
add
or
sbb
aas
pop
jns
jge
call
mov
cmp
lcall
lcall
call
std
jmp
jbe
incl
cmp
incl
daa
jnp
add
inc
incl
push
sub
add
sbb
or
ud0
push
ud0
dec
inc
pushl
jne
pop
jp
decl
pop
dec
in
std
std
std
mov
and
decb
pop
cmp
adc
decl
add
incl
add
lcall
sbb
sbb
mov
sbb
arpl
and
fdivr
es
aad
sbb
jae
or
sub
xor
lcall
mov
or
dec
add
aaa
cwtl
add
xor
add
push
add
sbb
add
pop
inc
add
adc
add
or
add
or
add
pop
adc
add
add
adc
add
sub
add
sbb
or
dec
add
and
or
push
add
das
xchg
sub
push
sub
sbb
dec
jmp
inc
mov
adc
push
decl
pop
call
cmp
decl
call
in
idiv
aaa
pop
incl
add
decl
push
adc
sub
pop
jmp
call
mov
sbb
incl
cld
lcall
cld
lcall
lcall
sti
ds
incl
xor
incl
or
incl
add
push
incl
add
incl
add
incl
add
decl
femms
jmp
sub
lcall
and
sub
lods
ret
mov
sti
cld
cld
std
ljmp
pop
inc
decb
sub
push
and
incl
add
incl
add
call
adc
imul
imul
lcall
xor
decl
sbb
sbb
pushl
jb
lcall
mov
or
dec
flds
adc
cltd
add
xor
add
push
add
sbb
add
pop
inc
add
adc
add
or
add
or
add
pop
adc
add
add
add
or
add
and
add
adc
add
sbb
or
push
add
and
je
push
xor
xor
rorl
and
dec
sar
dec
lcall
daa
push
push
or
decl
sbb
in
clc
call
icebp
sti
cmp
je
add
add
add
xor
incl
imul
lcall
cld
lcall
lcall
sti
incl
decl
dec
out
add
mov
add
cmp
add
adc
add
push
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
addr16
in
ljmp
call
or
adc
inc
jp
sbb
inc
incl
add
incl
add
decl
sub
sbb
jge
sub
and
sub
sbb
sbb
imul
sbb
cmp
add
aaa
cwtl
add
xor
add
push
add
sbb
pop
inc
add
adc
add
or
sbb
add
adc
add
or
add
adc
add
sbb
add
and
add
sub
add
push
add
sbb
or
push
add
and
or
addl
das
dec
mov
unpckhps
es
mov
sub
sbb
test
or
adc
or
insb
call
clc
call
cmc
pushl
pop
jle
add
add
add
cs
cmp
imul
cmpsb
idiv
pop
std
lcall
lcall
sti
call
lcall
repz
xor
incl
or
incl
push
or
decl
or
incl
pop
incl
push
add
pop
or
incl
add
incl
add
incl
add
ljmp
xor
leave
std
push
repz
push
pop
push
xor
incl
call
push
xor
add
add
add
add
add
add
or
and
and
lcall
cmp
decl
or
and
fdivrp
push
das
jbe
or
aaa
xchg
add
xor
add
add
and
or
dec
add
pop
inc
add
adc
add
and
add
sbb
add
adc
add
or
add
adc
add
sbb
add
pop
add
daa
add
adc
inc
add
push
push
add
and
or
outsb
add
sub
mov
sbb
movsl
adc
pop
out
or
sub
and
mov
jmp
inc
mov
decl
inc
jmp
push
mov
ljmp
incl
add
incl
add
call
es
decl
cmp
mov
jmp
imul
push
in
lcall
lcall
lcall
cld
ds
call
pop
out
add
popf
incl
sbb
add
decl
adc
jmp
sbb
ljmp
sbb
decl
or
incl
pop
add
add
push
incl
add
incl
add
call
cwtl
std
idiv
stc
std
ljmp
sbb
call
movsl
incl
decl
or
incl
add
incl
add
incl
add
call
dec
jmp
xor
lcall
es
push
pop
aaa
decl
or
mov
call
adc
enter
xchg
add
xor
or
pop
add
sbb
pop
pop
aas
add
adc
add
and
add
sbb
add
adc
add
or
add
adc
add
sbb
add
push
add
das
add
adc
inc
add
sbb
add
and
daa
push
or
xor
adc
xor
push
push
push
lcall
pop
aad
daa
push
mov
decl
or
jmp
js
pushl
lcall
lret
incl
sysenter
incl
add
decl
adc
cmp
jmp
test
lcall
dec
sar
cmpsb
sti
lcall
lcall
lcall
sti
lcall
cld
incl
lcall
addr16
incl
xor
incl
pop
pop
incl
adc
lcall
adc
daa
decl
or
decl
adc
incl
add
xor
std
mov
mov
jmp
in
cld
inc
dec
outsl
cli
add
jb
push
jo
lcall
daa
inc
incl
add
incl
add
incl
add
incl
push
adc
and
ljmp
push
aad
and
stos
call
adc
call
sbb
ljmp
sar
and
pop
adc
mov
add
das
addl
sub
or
add
pop
push
add
sbb
pop
push
cmp
add
sub
add
and
add
sbb
add
adc
add
or
add
adc
add
push
add
or
add
adc
add
pop
inc
add
sbb
and
or
je
comiss
add
mov
or
notl
push
ljmp
pop
int3
call
sbb
and
and
call
jmp
inc
jnp
add
pop
incl
add
call
and
pushl
bound
call
push
aam
inc
sar
pop
std
lcall
lcall
lcall
sti
decl
lcall
outsl
idiv
add
mov
add
popa
incl
adc
call
or
incl
pop
pushl
inc
call
adc
ss
ljmp
sbb
add
add
incl
push
std
rcl
out
repz
jp
scas
cli
bndstx
adc
imul
incl
add
incl
add
incl
add
call
push
dec
jmp
inc
ljmp
data16
push
and
decl
or
call
pop
dec
pushl
addr16
sub
decl
sbb
cmp
add
addb
sub
or
add
push
push
add
sbb
pop
push
cmp
push
adc
add
sub
add
and
add
sbb
add
adc
add
add
add
adc
add
sbb
add
and
add
sub
push
adc
add
push
cmp
add
push
push
add
and
or
outsl
add
jg,pn
sysenter
lea
adc
mov
push
adc
es
mov
lcall
sub
incl
add
decl
jmp
jmp
cld
cmp
incl
or
incl
add
incl
add
decl
sbb
pushl
pop
mov
push
inc
popf
lcall
pop
fdivr
inc
mov
std
lcall
lcall
lcall
sti
decl
jmp
js
decl
inc
mov
incl
test
mov
mov
decl
push
lcall
push
decl
or
incl
add
push
call
insl
cld
ret
cld
idiv
stc
jmp
ljmp
sbb
std
or
xor
cmp
sbb
add
add
add
add
add
or
sbb
push
sbb
ljmp
push
lret
lcall
push
mov
movups
push
push
add
sbb
pushl
fdivr
and
decl
push
jmp
add
xor
add
outsb
add
and
or
inc
add
adc
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
adc
add
sbb
add
pop
add
sub
add
adc
inc
add
sbb
pop
add
push
push
sub
rdtsc
mov
adc
xchg
add
sub
or
and
and
cltd
ljmp
fdivr
pop
inc
decl
add
decl
xchg
pushl
jecxz
or
add
add
add
or
daa
cmp
inc
pop
jge
aas
pop
mov
sbb
lahf
decl
dec
xlat
cmp
std
lcall
sti
lcall
lcall
sti
call
lcall
cli
pushl
loop
xchg
fcos
jp
mov
incl
sbb
decl
adc
decl
push
sbb
push
or
incl
or
incl
adc
incb
addr16
test
lret
std
out
repnz
call
into
mov
mov
adc
inc
std
pop
push
das
jmp
dec
ljmp
xor
inc
incl
add
add
add
add
movaps
sbb
popa
jmp
and
mov
sbb
jl
or
das
incl
or
jmp
inc
lcall
aaa
xchg
or
dec
fildl
adc
pushf
add
xor
add
imul
and
or
inc
add
adc
das
add
add
or
add
or
add
push
adc
add
add
add
add
add
add
push
adc
add
sbb
add
sbb
add
adc
add
sbb
add
pop
pop
add
and
add
jae
push
das
addb
xor
movsl
add
push
push
ljmp
push
sar
daa
pop
decl
push
decl
push
sub
and
std
mov
jle
decl
and
add
add
add
add
adc
cmp
incl
jge
xor
call
xchg
incl
inc
int
xor
lcall
sti
lcall
sti
ljmp
jmp
idiv
fucomip
call
fdivrp
add
sahf
incl
sub
and
and
add
pop
incl
pop
or
or
adc
adc
and
std
cmp
mov
pop
imul
jno
std
aas
dec
js
and
inc
std
add
pop
cmp
inc
dec
jbe
inc
push
mov
sbb
cmp
incl
add
incl
add
lcall
or
xchg
lcall
push
test
jmp
mov
jmp
sub
or
ud0
push
inc
ljmp
push
ljmp
pop
mov
decl
sbb
add
xor
add
xor
add
and
pop
add
sbb
pop
sbb
push
adc
add
or
sbb
add
push
adc
add
add
add
add
add
add
push
adc
add
push
add
or
add
add
adc
add
push
cmp
or
inc
add
push
push
add
and
or
insl
add
sub
add
xor
add
daa
lds
or
cld
and
xchg
ljmp
out
sbb
pop
lcall
dec
xchg
jmp
idiv
out
sti
call
xchg
decl
add
incl
push
jmp
cs
sub
push
ljmp
dec
jne
adc
mov
add
je
decl
lcall
cld
decl
std
call
std
lcall
jmp
xor
or
xor
incl
pop
cmp
add
adc
pop
or
decl
adc
lcall
aaa
lcall
push
call
and
adc
dec
decl
sbb
dec
decb
das
dec
incl
cmp
xor
arpl
push
add
add
add
add
push
pop
decl
fwait
ds
loopne
es
jmp
mov
jmp
sbb
decl
or
lcall
pop
into
jmp
inc
popf
call
and
or
ds
push
xor
add
jb
or
add
pop
push
add
sbb
push
push
add
adc
add
or
add
or
add
adc
add
add
add
add
add
add
add
push
sldt
pop
adc
add
sbb
add
pop
add
add
adc
add
sbb
or
pop
add
and
jne
push
xor
adc
cmpsb
add
ljmp
pop
sar
sub
call
sbb
sbb
sub
cld
jmp
push
push
incl
add
incl
pop
or
adc
and
and
push
lcall
ds
add
decl
push
jmp
aas
mov
ljmp
jmp
std
incl
cld
call
incl
jmp
out
decl
cmp
incl
and
add
inc
incl
adc
add
adc
add
push
decl
adc
pop
call
push
jmp
jo,pt
es
jno
and
jno
sub
ljmp
pop
ljmp
pop
dec
call
or
add
add
add
add
push
add
jmp
sahf
jmp
call
decl
in
std
jmp
pop
lret
lcall
adc
call
sbb
mov
call
sub
decl
sbb
add
xor
add
insl
add
and
or
push
add
sbb
push
push
cmp
add
movaps
add
add
or
add
pop
adc
add
sldt
add
add
add
add
add
add
add
adc
add
pop
add
or
add
and
add
adc
pop
push
add
sbb
or
push
add
and
or
sub
mov
adc
cwtl
add
sub
or
adc
push
cmp
lcall
cmp
call
dec
pushf
call
jmp
push
jmp
call
incl
add
add
add
add
push
call
and
pushl
dec
pop
decl
jno
cmp
call
xor
incl
xor
incl
out
decl
sti
lcall
sti
lcall
lcall
cld
call
cmp
incl
sub
add
incl
or
or
pop
or
decl
or
lcall
ss
ljmp
push
cmp
inc
jno
sbb
pop
call
sbb
decl
or
call
or
pop
add
add
or
xor
pop
push
test
lcall
cld
std
out
jmp
icebp
lcall
sub
adc
lcall
xor
int
and
call
sbb
decb
adc
int3
add
cmp
push
sub
or
imul
or
inc
add
adc
das
add
pop
add
or
add
pop
adc
add
or
add
add
add
or
add
add
push
sldt
or
add
and
add
daa
add
adc
add
sbb
or
pop
add
and
jne
comiss
add
mov
adc
inc
ljmp
pop
sar
sub
call
and
call
pop
jmp
cwtl
sar
mov
cld
mov
outsb
mov
incl
add
incl
add
incl
or
jmp
das
xor
pushl
inc
push
pushl
pop
call
xor
add
push
iret
ljmp
mov
lcall
std
lcall
sti
lcall
sti
lcall
sti
lcall
sti
lcall
std
decl
lcall
pop
sar
add
popa
incl
adc
add
adc
or
incl
push
or
add
add
sbb
dec
call
adc
adc
add
pop
incl
add
incl
add
decl
or
xor
mov
ljmp
std
aas
xchg
call
call
pop
inc
lcall
sub
sub
ljmp
push
lret
lcall
das
mov
or
cmp
push
adc
xor
addl
or
add
pop
push
add
sbb
pop
pop
aas
add
adc
add
or
add
push
adc
add
or
add
add
add
or
add
add
add
adc
add
pop
add
or
add
sub
push
adc
add
sbb
or
push
add
and
or
insl
add
xor
add
cmp
pop
aas
mov
jb,pn
jmp
push
mov
adc
push
lcall
push
fwait
pushl
stc
cld
decl
pop
mov
adc
imul
push
and
add
add
pop
or
lcall
and
jmp
aaa
inc
cmp
cmp
lcall
xor
add
xchg
decl
inc
sar
sub
cli
decl
lcall
cld
lcall
lcall
sti
lcall
sti
lcall
jmp
sbb
pop
pop
sub
incl
or
incl
add
add
add
adc
adc
or
add
add
add
add
add
incl
add
call
adc
sub
incl
std
decl
inc
mov
adc
popa
jmp
and
push
pop
incb
adc
xlat
add
aaa
fwait
add
xor
add
insb
add
and
or
push
add
sbb
pop
adc
xor
add
sub
add
and
add
sbb
add
adc
add
adc
add
or
add
add
add
push
add
add
add
add
adc
add
adc
add
and
add
sub
push
adc
add
adc
inc
add
sbb
add
and
or
add
je
push
das
addl
adc
add
rclb
jns
jmp
inc
xchg
lcall
daa
lcall
push
cmp
icebp
sti
in
incl
sar
sbb
decl
add
call
pop
ljmp
xor
push
ljmp
ss
decl
push
xor
add
inc
incl
and
add
scas
call
loop
inc
mov
lcall
sti
lcall
cld
call
lcall
pop
enter
pop
decl
push
sub
pop
or
decl
or
incl
pop
pop
decl
pop
add
add
add
add
add
add
add
pop
add
push
or
incl
ljmp
jns
call
pop
mov
adc
pusha
jmp
cmp
ljmp
pusha
lcall
mov
or
adc
mov
adc
addl
sub
or
add
and
or
add
sbb
push
adc
add
push
add
and
add
sbb
add
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
push
add
sub
push
adc
pop
push
add
sbb
or
push
add
and
or
imul
sub
add
xor
add
cmp
sbb
insl
fsin
xor
lcall
je
sbb
call
decl
fdivr
push
mov
mov
mov
incl
add
incl
add
decl
ud0
and
call
sbb
decl
adc
or
and
or
incl
sub
pushl
fdivr
decl
ljmp
jge
decl
xor
decl
sub
unpcklps
decl
ud0
adc
decl
pop
incl
add
incl
add
incl
add
or
push
jb
sbb
cmp
mov
mov
lcall
and
sbb
jmp
push
sar
imul
and
mov
adc
pop
decl
adc
xlat
add
aaa
popf
add
xor
add
outsl
add
and
or
push
add
sbb
pop
pop
add
adc
add
or
sbb
add
push
adc
add
or
add
push
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
or
add
daa
add
adc
add
pop
inc
add
sbb
or
push
add
and
or
outsl
add
xor
add
cmp
pop
ds
xor
xor
lcall
sub
adc
adc
mov
jmp
js
jmp
decl
push
popa
incl
push
sub
add
or
add
add
add
pop
push
decl
daa
inc
lcall
pop
decl
sub
sub
pop
das
lahf
call
inc
mov
push
sub
decl
sbb
daa
call
adc
call
adc
call
adc
or
add
add
add
pop
decl
pop
pop
lcall
inc
fwait
jmp
jl
pushl
icebp
stc
sti
dec
std
decl
lock
and
jno
sbb
je
and
test
sub
ljmp
pop
into
lcall
sub
lock
xor
nop
add
xor
add
pop
add
sbb
add
sbb
adc
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
or
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
or
add
adc
add
adc
inc
add
sbb
add
and
or
je
push
das
addb
xor
add
inc
negl
inc
pushl
jns
sub
sub
or
push
lcall
inc
xchg
ljmp
call
call
repnz
push
ljmp
xchg
into
lcall
pop
push
incl
add
add
add
add
add
or
aaa
call
and
mov
decl
sbb
add
inc
incl
and
incl
add
incl
add
and
or
add
xor
adc
data16
xor
dec
shl
js
sti
mov
jmp
sti
jmp
in
lcall
cmp
lcall
aaa
jo
and
mov
ljmp
push
jmp
ds
movhps
add
getsec
cwtl
add
xor
add
outsb
add
and
or
push
add
sbb
pop
pop
aas
add
adc
add
sbb
add
push
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
adc
add
sbb
add
and
add
daa
add
adc
add
sbb
or
push
add
and
or
push
or
das
addl
xor
add
cmp
adc
dec
cld
and
pushl
in
xor
cmp
adc
adc
pop
scas
decl
decl
ljmp
lcall
pushl
arpl
incl
or
incl
push
sbb
add
ud0
add
incl
add
decl
or
decl
adc
incl
or
incl
adc
add
incl
add
incl
add
incl
push
decl
push
and
adc
inc
call
cmp
pusha
mov
pushl
push
mov
test
ljmp
pop
iret
call
and
lcall
aaa
jb
and
stos
ljmp
gs
sub
jmp
dec
mov
incb
adc
mov
add
das
addl
or
pop
add
sbb
add
sbb
push
adc
xor
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
push
add
or
add
and
add
sub
push
adc
add
adc
add
sbb
or
add
pop
push
add
and
or
insl
add
sub
add
xor
add
cmp
adc
dec
std
and
mov
cmp
sar
es
ja
push
adc
decl
add
adc
push
ret
decl
fdivrp
sahf
aam
jmp
std
ljmp
pushl
xlat
pushl
push
mov
sub
jmp
dec
jp
adc
push
decl
push
xor
incl
add
incl
pop
sbb
or
sbb
call
adc
adc
callw
xor
ret
decl
lcall
cli
fdivrp
decl
jg
lcall
je
adc
outsb
jmp
pop
mov
sub
sub
daa
push
enter
push
or
das
out
add
xor
xchg
add
xor
add
insb
add
and
or
dec
add
push
add
adc
add
or
push
add
or
add
pop
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
sbb
add
sbb
add
adc
add
adc
inc
add
sbb
add
and
or
add
outsl
add
xor
add
cmp
adc
dec
and
cmp
lods
in
ljmp
mov
decl
or
pop
sbb
jmp
sar
fwait
out
test
push
dec
jmp
cmc
pushl
lock
jns
fdivr
dec
mov
lcall
je,pt
sbb
lcall
jle
sbb
jmp
dec
mov
cmp
loope
push
mov
fcos
jmp
jmp
fwait
out
and
call
push
xchg
adc
push
call
adc
lcall
data16
ljmp
ja
ljmp
jb
jmp
push
sar
es
decb
adc
mov
add
xor
add
and
add
pop
push
add
sbb
pop
inc
add
adc
add
push
sub
add
and
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
add
adc
push
push
cmp
add
sbb
pop
add
and
jno
or
xor
add
cmp
adc
dec
std
and
cmp
cld
aaa
pop
lcall
cmp
push
adc
syscall
aas
call
or
sbb
mov
ljmp
in
mov
push
fdecstp
jmp
ret
cmpl
incl
int3
sti
jmp
cli
call
push
call
cmc
jmp
mov
ljmp
addr16
sbb
call
or
cmp
adc
inc
lcall
inc
test
sub
sub
sub
daa
push
lcall
sub
or
das
repz
adc
cwtl
add
xor
add
jae
or
pop
add
sbb
add
sbb
pop
push
cmp
add
movntps
add
and
add
or
add
pop
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
pop
add
or
add
add
daa
add
adc
add
push
add
sbb
or
pop
add
and
add
jno
or
xor
add
cmp
nopl
sbb
jl
cmp
cld
std
inc
mov
jmp
and
push
push
sub
call
or
lcall
sub
lcall
jmp
call
idiv
stc
std
push
jmp
call
repz
mov
loope
incl
mov
ljmp
push
lcall
sub
call
push
inc
call
adc
popa
jmp
pop
test
aaa
and
xor
jo
jmp
dec
mov
decl
pop
inc
hlt
add
adc
fwait
add
xor
add
imul
or
push
add
sbb
pop
push
aas
add
adc
add
push
add
and
add
sbb
add
adc
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sldt
pop
adc
add
sbb
add
sbb
add
and
add
adc
add
adc
add
pop
inc
add
sbb
or
push
add
and
and
add
jb
push
sub
mov
adc
fwait
add
sbb
push
pushl
jl
sti
dec
lret
idiv
dec
lret
aaa
mov
call
aas
call
adc
or
or
adc
xchg
and
decl
sar
cmpb
inc
in
dec
jmp
cmc
call
jmp
out
fdivr
mov
int3
hlt
jmp
ljmp
test
pushl
pop
sar
cmp
call
or
add
adc
cmp
pop
sub
cmp
clc
cmp
cmc
ljmp
sar
and
lcall
sub
dec
clc
add
adc
cltd
add
xor
add
sub
or
and
or
push
add
sbb
pop
sbb
push
adc
add
adc
add
sub
add
and
add
sbb
add
pop
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
sbb
add
sub
add
adc
add
pop
inc
add
sbb
or
pop
add
and
add
jno
or
xor
add
aaa
cwtl
add
cmp
adc
pop
std
and
incl
loope
push
iret
decl
jmp
xor
push
jle
sbb
push
call
adc
decl
add
unpcklps
pop
xor
es
cmp
data16
incl
cmpsl
cmp
mov
lcall
ljmp
call
loopne
xor
lcall
inc
mov
sbb
call
and
call
punpcklwd
or
dec
decl
add
decl
push
cmp
and
pop
ljmp
popa
xchg
aas
mov
decl
repz
cmp
in
ljmp
push
mov
call
and
add
adc
cltd
add
xor
add
xor
or
and
or
push
add
sbb
add
sbb
adc
xor
add
or
push
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
sub
add
adc
add
pop
inc
add
sbb
or
push
add
and
and
add
outsl
add
xor
adc
xchg
add
cmp
adc
cmc
pop
cs
insl
scas
incl
out
decl
incl
icebp
pushl
jmp
pop
lcall
aaa
pop
call
sbb
decl
or
sub
add
and
add
or
incl
or
decl
daa
jno
adc
jne
ud2
push
decl
inc
decl
add
decl
add
decl
sbb
push
push
and
ljmp
push
jl
jg,pt
decl
loopne
push
mov
lcall
decl
sti
pushl
js
jmp
inc
mov
call
and
add
ss
add
xor
add
daa
insl
add
and
or
pop
add
sbb
add
sbb
pop
adc
xor
add
push
add
or
add
or
add
or
add
push
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
sub
add
adc
inc
add
sbb
or
push
add
and
or
add
insl
add
das
addl
adc
add
cmp
adc
in
adc
std
sbb
arpl
cs
scas
cmp
icebp
incl
lods
idiv
aaa
xchg
xlat
ljmp
push
cmp
pop
das
push
call
cmp
unpckhps
decl
adc
decl
or
movups
call
sbb
call
sub
push
jmp
aas
pusha
ljmp
push
jbe
cmp
decl
call
call
call
incl
cmp
ljmp
pop
mov
sbb
mov
adc
and
inc
faddl
adc
aaa
xchg
add
xor
add
daa
insl
add
and
or
pop
add
sbb
inc
add
push
add
adc
add
daa
add
and
add
sbb
add
pop
add
pop
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
adc
add
push
add
or
add
and
add
and
add
adc
add
adc
inc
add
sbb
or
pop
add
and
or
imul
sub
sub
xchg
adc
add
aaa
xchg
add
cmp
or
sub
adc
xor
ljmp
pusha
scas
pushl
loope
cmp
pushl
sahf
lock
xchg
xor
mov
jmp
pop
xchg
jmp
xchg
pop
inc
je
pop
inc
jb
and
push
mov
inc
pushf
dec
cmpsb
jmp
dec
scas
idiv
push
mov
incl
repnz
cmp
sub
and
lcall
xor
insb
call
daa
pop
adc
dec
in
or
ds
add
cmp
add
xor
add
es
add
and
or
pop
add
sbb
inc
add
push
add
adc
add
push
sub
add
and
add
sbb
add
pop
adc
add
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
and
add
adc
add
pop
aas
add
sbb
or
add
pop
push
add
and
or
jo
or
das
addb
xor
add
cmp
or
es
pop
and
jge
es
test
jne,pn
pushl
jmp
pushl
xchg
lock
xchg
lock
cmp
jmp
cmp
incl
repz
cld
decl
decl
incl
idiv
inc
popf
lock
ljmp
pop
mov
lcall
lcall
das
jl
pop
sub
call
daa
pop
std
mov
in
or
cmp
add
xor
add
sub
or
imul
or
push
add
sbb
inc
add
push
add
adc
add
adc
add
sub
add
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
pop
add
or
add
or
add
sub
add
adc
add
push
add
sbb
or
add
and
and
add
daa
insb
add
sub
test
rdpmc
lea
sysexit
xchg
add
cmp
add
sub
in
or
sub
sbb
fs
pop
inc
cmp
dec
xchg
jmp
mov
xor
pushl
test
pushl
adc
pushl
insb
mov
jmp
dec
mov
lcall
xor
push
daa
push
call
sub
sub
or
sbb
adc
aaa
lcall
xor
add
sub
or
pop
add
pop
push
add
sbb
add
sbb
pop
push
add
adc
add
cvtpi2ps
add
and
add
push
add
or
add
or
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
pop
add
sub
add
adc
add
push
cmp
pop
sbb
or
dec
add
sbb
pop
add
and
or
push
add
sub
test
rdmsr
mov
adc
xchg
add
cmp
pop
adc
rorb
adc
out
or
sub
movhps
sti
adc
pop
adc
xor
sbb
lcall
xor
adc
sub
adc
pop
call
and
adc
push
sti
push
push
dec
repz
pop
dec
fisttps
sbb
inc
mov
add
ss
add
xor
add
xor
add
sub
or
push
or
bound
or
pop
add
push
push
add
sbb
pop
sbb
push
cmp
add
movaps
add
and
add
push
add
or
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
push
add
and
add
sub
add
adc
add
adc
inc
add
sbb
or
add
push
push
add
and
or
bound
or
imul
or
sub
test
rdmsr
mov
adc
xchg
add
cmp
add
cmp
push
adc
lret
cmp
or
inc
fmull
sbb
dec
loope
sbb
or
dec
loope
sbb
sbb
dec
sbb
inc
aad
sbb
enter
mov
add
cmp
add
xor
add
xor
push
das
addl
or
daa
insl
add
and
add
and
or
push
add
sbb
dec
add
sbb
push
push
cmp
push
adc
add
movaps
add
and
add
push
add
or
add
or
add
pop
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
adc
add
push
add
or
add
or
add
daa
add
adc
add
adc
add
push
cmp
add
sbb
or
push
add
and
and
or
push
add
sub
jg
push
xor
add
xor
add
aaa
xchg
add
aaa
cwtl
add
cmp
add
test
add
test
add
movsb
add
cmp
add
ss
add
xor
add
xor
add
xor
push
xor
push
sub
or
jae
or
insb
add
and
pusha
add
and
or
push
add
sbb
sbb
pop
pop
aas
add
adc
add
adc
add
add
and
add
push
add
or
add
or
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
and
add
and
add
adc
push
adc
add
pop
aas
add
sbb
or
dec
add
sbb
push
add
and
or
popa
add
and
insb
add
jno
or
sub
add
sub
addb
xor
add
xor
add
xor
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
jp
or
sub
or
imul
and
add
and
or
pop
add
push
push
add
sbb
add
sbb
pop
sbb
push
push
cmp
push
adc
add
movntps
add
add
and
add
push
add
or
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
or
add
and
add
adc
add
adc
add
adc
inc
add
sbb
or
dec
add
sbb
push
add
and
or
pop
add
and
add
and
insb
add
jo
or
sub
or
sub
add
sub
jle
push
jg,pn
push
addb
addb
addb
jg,pn
push
jg,pn
push
sub
jnp
or
sub
or
sub
or
insb
add
and
bound
or
pop
add
and
or
push
add
sbb
add
sbb
pop
sbb
pop
add
adc
xor
add
cvtpi2ps
add
and
add
or
add
sbb
add
adc
add
push
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
push
add
or
add
or
add
and
add
adc
add
adc
add
adc
inc
add
sbb
or
dec
add
sbb
add
push
push
add
pop
push
add
and
or
pop
add
and
or
add
push
or
insb
add
insl
add
outsl
add
jo
or
jo
or
jno
or
jo
or
jo
or
jo
or
outsb
add
insb
add
push
or
add
and
or
pop
add
and
or
push
add
push
push
add
sbb
add
sbb
or
inc
add
push
aas
add
adc
xor
add
push
daa
add
and
add
pop
add
or
add
or
add
or
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
sbb
add
sbb
add
pop
add
or
add
sub
add
adc
add
adc
add
adc
aas
add
sbb
pop
sbb
or
dec
add
sbb
add
sbb
push
add
pop
pop
add
and
or
pop
add
and
or
pop
add
and
or
bound
or
add
and
add
and
add
and
or
popa
add
and
or
pop
add
and
and
or
push
add
push
push
add
sbb
dec
add
sbb
pop
sbb
pop
pop
inc
add
push
add
adc
xor
add
movaps
add
and
add
add
or
add
or
add
pop
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
pop
add
and
add
add
sub
add
adc
add
adc
cmp
pop
pop
aas
add
sbb
pop
sbb
or
dec
add
sbb
or
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
push
add
push
push
add
sbb
dec
add
sbb
or
dec
add
sbb
pop
sbb
pop
pop
aas
add
push
cmp
push
adc
add
adc
add
push
sub
add
add
and
add
push
add
or
add
or
add
pop
adc
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
pop
add
or
add
or
add
pop
add
and
add
add
adc
add
adc
add
adc
add
push
cmp
pop
push
cmp
add
sbb
pop
sbb
sbb
or
inc
add
sbb
or
dec
add
sbb
or
dec
add
sbb
or
dec
add
sbb
or
inc
add
sbb
pop
sbb
pop
inc
add
pop
inc
add
push
cmp
add
adc
add
adc
add
adc
add
or
and
add
pop
add
or
add
or
add
or
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
push
add
or
add
or
add
pop
add
and
add
and
add
movaps
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
cmp
pop
adc
cmp
add
push
add
push
add
push
add
push
add
push
add
adc
cmp
pop
adc
aaa
add
adc
add
adc
add
movaps
add
daa
add
and
add
push
add
or
add
sbb
add
push
add
pop
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
or
add
or
add
add
sub
add
sub
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
cvttps2pi
add
sub
add
or
and
add
add
or
add
or
add
sbb
add
sbb
add
adc
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
and
add
and
add
add
daa
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
daa
add
and
add
and
add
add
or
add
or
add
or
add
or
add
pop
adc
add
push
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
push
add
or
add
or
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
push
add
pop
adc
add
push
adc
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
push
add
add
push
add
add
push
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
jmp
add
add
add
add
incl
add
add
add
add
incb
add
add
add
add
clc
pop
jmp
pop
inc
add
incl
add
add
add
incl
add
cld
add
cld
add
jg
add
aas
lock
aas
loopne
add
rolb
pop
rolb
jo
add
add
add
sldt
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incl
add
incl
add
add
add
incl
add
add
add
jmp
add
lock
add
add
add
add
push
add
cld
add
incl
add
add
add
add
incl
add
add
jmp
add
add
add
add
jmp
add
add
add
add
incb
add
add
add
incl
add
add
add
inc
add
add
add
ljmp
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
pop
adc
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
push
add
or
add
or
add
push
add
and
add
and
add
and
add
sub
add
adc
add
adc
add
cvtpi2ps
add
sub
add
daa
add
and
add
and
add
pop
add
or
add
sbb
add
push
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
adc
add
or
add
push
add
and
add
and
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
and
add
push
add
or
add
or
add
pop
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
or
add
or
add
sub
add
adc
add
adc
add
push
cmp
push
push
add
pop
inc
add
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
pop
inc
add
pop
add
push
cmp
push
adc
add
adc
add
push
sub
add
and
add
pop
add
or
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
sldt
push
adc
add
push
add
or
add
or
add
add
adc
add
adc
push
adc
add
pop
inc
add
sbb
or
dec
add
sbb
add
sbb
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
push
add
sbb
dec
add
sbb
or
inc
add
pop
inc
add
push
cmp
push
adc
add
adc
add
and
add
push
add
or
add
or
add
push
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
sbb
add
sbb
add
sub
push
adc
add
adc
add
adc
inc
add
sbb
or
add
sbb
push
add
and
or
pop
add
and
or
add
and
add
imul
or
push
add
and
add
and
or
pop
add
and
or
push
add
sbb
dec
add
sbb
pop
aas
add
adc
xor
add
push
daa
add
and
add
sbb
add
pop
add
pop
adc
add
sldt
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
or
add
or
add
add
adc
add
adc
add
push
add
sbb
sbb
or
push
add
and
and
or
insb
add
jo
or
sub
or
sub
add
sub
jl
or
sub
add
sub
or
jo
or
insb
add
and
add
and
or
pop
add
push
push
add
sbb
or
inc
add
pop
add
adc
xor
add
or
push
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
adc
add
sbb
add
push
add
and
add
sub
add
adc
add
push
cmp
add
sbb
or
push
add
and
or
popa
add
outsb
add
sub
add
addb
das
test
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
or
insb
add
and
add
and
pop
push
add
sbb
sbb
adc
xor
add
or
pop
add
or
add
pop
adc
add
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
adc
add
and
add
add
adc
add
adc
inc
add
sbb
or
push
add
and
or
add
imul
sub
push
sub
add
das
addb
xor
add
ss
add
aaa
fwait
add
mov
pop
sbb
rorb
cmp
push
pop
cmp
or
cmp
or
cmp
pop
push
cmp
pop
push
cmp
add
cmp
add
xor
add
xor
or
sub
or
add
sbb
dec
add
push
inc
add
adc
add
push
daa
add
and
add
sbb
add
adc
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
or
add
or
add
sub
add
adc
add
pop
add
sbb
or
pop
add
and
or
insb
add
jg,pn
rdtsc
xchg
rdpmc
lea
adc
xchg
add
cmp
add
and
adc
dec
jmp
push
xor
pop
xor
sbb
push
lcall
xor
sbb
push
lcall
das
dec
call
cs
std
adc
inc
cmc
push
and
out
push
cmp
push
adc
aaa
movsb
add
xor
xchg
push
addb
sub
or
imul
and
or
push
add
sbb
sbb
push
adc
add
movaps
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
or
add
and
add
sub
add
adc
inc
add
sbb
add
pop
push
add
and
or
push
or
jle,pn
rdtsc
mov
adc
add
aaa
lcall
inc
or
loop
and
push
sub
sbb
jle
and
xchg
jmp
dec
cmpsl
jmp
dec
scas
jmp
dec
cmpsb
jmp
mov
jmp
inc
xchg
jmp
cmp
arpl
adc
xor
push
adc
int3
add
aaa
test
adc
xchg
push
sub
jno
or
pop
add
sbb
inc
add
adc
xor
add
sub
add
add
or
add
pop
adc
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
or
add
adc
add
adc
inc
add
sbb
pop
add
and
add
sub
xchg
adc
add
aaa
fwait
add
mov
sbb
or
and
mov
and
lods
ljmp
inc
ret
ljmp
dec
ret
ljmp
dec
mov
jmp
ds
jmp
aaa
mov
jmp
lods
jmp
cmp
jmp
cmp
popf
jmp
xor
jmp
xor
jmp
cmp
call
dec
decl
pop
xor
push
adc
lret
add
cmp
add
addl
or
imul
or
inc
add
adc
xor
add
daa
add
and
add
sbb
add
adc
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
adc
add
push
add
or
add
and
add
adc
pop
pop
cmp
add
push
push
add
and
or
push
or
das
addb
xor
adc
mov
sbb
pop
pop
repz
cmp
cmpsb
jmp
inc
mov
ljmp
dec
scas
jmp
xor
pop
call
dec
call
sbb
adc
dec
call
push
pusha
jmp
sub
jmp
xor
es
cmpsb
jmp
pop
pushf
jmp
cmp
jmp
xor
inc
decl
pop
ss
add
ss
add
xor
add
es
or
pop
add
push
push
add
sbb
adc
das
add
add
or
add
or
add
push
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
push
add
or
add
and
add
adc
pop
push
add
sbb
or
push
add
and
or
insl
add
xor
add
cmp
nopl
sub
jmp
mov
sub
sub
jmp
inc
xchg
sbb
push
daa
decl
push
adc
decl
or
or
or
or
or
or
adc
unpckhps
call
adc
call
dec
lcall
and
and
xchg
ljmp
pop
lods
jmp
push
lods
jmp
cmp
jmp
ds
call
and
cmp
lret
cmp
add
daa
imul
and
or
add
sbb
push
adc
add
or
sbb
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sldt
pop
adc
add
sbb
add
and
add
adc
add
push
add
sbb
or
push
add
and
or
jle,pn
rdmsr
mov
adc
xchg
add
inc
mov
pop
daa
jno
and
test
ljmp
inc
movsb
lcall
xor
push
and
call
pop
push
decl
add
push
decl
or
or
or
or
adc
call
adc
call
sbb
or
adc
or
adc
decl
or
call
and
and
ljmp
dec
xchg
jmp
das
mov
lcall
test
adc
dec
decb
push
inc
aam
adc
fwait
add
xor
add
push
or
pop
add
sbb
add
pop
inc
add
adc
add
sbb
add
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
sbb
add
pop
add
daa
add
push
cmp
or
inc
add
pop
push
add
and
or
jno
push
sub
mov
adc
popf
pop
sbb
adc
arpl
and
ljmp
inc
mov
jmp
jno
sbb
pop
call
sbb
decl
wbinvd
decl
or
or
call
adc
decl
femms
decl
ud0
adc
call
adc
call
adc
cmp
dec
lcall
sbb
decl
sbb
adc
push
call
adc
decl
push
push
decl
or
incl
cltd
mov
sub
mov
jmp
cmp
decl
pop
inc
add
aaa
cwtl
add
xor
add
and
pop
add
sbb
pop
pop
aas
add
push
sub
add
pop
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
push
add
or
add
adc
add
sbb
or
push
add
and
or
outsl
add
jg,pn
rdmsr
mov
adc
or
dec
loopne
sub
and
push
int
sub
xchg
jmp
xor
and
xor
push
xor
adc
sbb
push
or
ud0
push
push
decl
or
decl
or
incl
add
incl
add
decl
add
call
aaa
lcall
push
xor
add
add
pop
add
add
call
adc
call
adc
decl
or
decl
and
jecxz
mov
aaa
xchg
lcall
inc
leave
jmp
inc
mov
incl
adc
xchg
add
xor
add
and
add
pop
push
add
sbb
push
adc
das
add
sbb
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
sbb
add
and
add
adc
add
sbb
or
pop
add
sub
mov
adc
test
sbb
ljmp
dec
sar
push
ret
jmp
inc
test
cmp
cmp
jge
sub
inc
call
and
decl
or
or
or
pop
incl
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
decl
sbb
pushl
mov
xor
ret
and
call
sbb
add
inc
mov
add
addl
or
pusha
add
sbb
inc
add
adc
add
or
sbb
add
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
pop
add
or
add
sub
add
push
add
sbb
or
pop
add
imul
rdtsc
mov
adc
mov
sbb
push
ljmp
pop
inc
xchg
xor
inc
mov
xor
cmp
decl
push
adc
pop
pop
or
push
add
add
add
add
add
add
add
add
add
pop
incl
add
incl
adc
incl
and
lods
pushl
arpl
decl
xor
decl
and
incl
or
add
and
add
add
add
add
push
add
decl
pop
xor
daa
jp
lcall
in
decl
scas
enter
mov
and
ret
cmp
out
add
cmp
add
daa
imul
and
or
add
pop
add
push
daa
add
or
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
adc
add
sbb
or
push
add
and
add
xor
or
push
loopne
xor
pushl
outsl
xlat
jmp
inc
xchg
incl
movsb
decl
xor
call
xor
lcall
and
pop
adc
incl
add
incl
add
incl
add
incl
add
inc
incl
pusha
sar
sub
hlt
incl
call
stc
ljmp
clc
incl
hlt
call
idiv
push
xchg
lock
jecxz
or
or
pop
incl
add
incl
add
incl
add
call
cmp
adc
scas
call
loopne
movsb
mov
cmp
inc
leave
lcall
xor
add
aaa
cwtl
add
xor
add
and
add
pop
push
add
sbb
push
adc
add
or
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
push
adc
add
push
add
push
add
adc
add
pop
inc
add
sbb
add
and
or
outsl
add
addb
xor
sbb
cmp
cmp
mov
decl
dec
mov
incl
pop
add
cs
pop
decl
adc
incl
add
push
add
incl
adc
incl
and
aas
sar
pop
out
jmp
jmp
stc
lcall
clc
call
jmp
out
pushl
idiv
mov
clc
incl
int
lcall
push
fdivr
add
cmpsl
incl
push
inc
incl
add
incl
add
decl
add
incl
or
incl
cld
call
and
push
and
add
cmp
add
das
addl
or
pop
add
sbb
add
push
aas
add
adc
add
daa
add
or
add
push
sldt
add
add
add
add
add
add
push
add
add
adc
add
sbb
add
and
add
adc
inc
add
pop
push
add
and
jns
rdmsr
mov
push
aaa
scas
adc
imul
dec
mov
jecxz
sub
call
loopne
es
popa
decl
adc
add
push
add
jmp
add
incl
add
incl
add
incl
mov
sub
decl
stc
jmp
idiv
addr16
lcall
idiv
push
loopne
incl
cmc
incl
repz
hlt
pushl
push
jecxz
sub
lcall
idiv
push
cli
lcall
lcall
idiv
push
std
jmp
dec
incl
push
xor
incl
add
incl
add
decl
int
sti
push
cmc
repnz
jge
pop
ss
sub
decl
dec
in
adc
mov
add
and
push
add
sbb
push
adc
add
or
add
or
add
push
adc
add
add
add
add
add
add
pop
add
add
adc
add
daa
add
adc
add
pop
add
sbb
add
and
or
outsl
add
das
addb
das
xchg
pop
cmovno
sub
mov
lcall
sahf
ret
cmpsl
sti
pushl
dec
mov
adc
sbb
add
add
add
add
add
add
add
add
push
add
incl
inc
mov
jmp
idiv
addr16
jmp
idiv
push
into
idiv
xor
incl
mov
add
pushf
ljmp
incl
aaa
mov
incl
inc
mov
decl
jmp
pushl
sti
incl
scas
decl
push
incl
add
incl
add
lcall
cmp
mov
and
and
xor
incl
push
xor
add
aaa
xchg
add
das
addl
sub
or
pop
add
sbb
add
push
add
push
add
or
add
adc
add
or
add
add
add
push
adc
add
pop
add
and
add
adc
add
sbb
push
push
add
and
add
xor
adc
mov
jns
cmp
popa
movsl
dec
fdivp
pushl
iret
lcall
or
add
add
incl
add
incl
sbb
incl
aaa
lods
cmp
ljmp
push
lcall
repz
test
decl
inc
int3
incl
sub
incl
push
outsb
decl
sbb
or
cmp
add
dec
lcall
mov
incl
and
add
adc
add
xor
cmp
xchg
shrl
incl
sar
add
mov
or
das
incl
add
incl
add
ljmp
idiv
lcall
sahf
call
daa
nop
ljmp
push
lret
decl
sbb
add
xor
mov
push
sub
or
add
sbb
adc
add
or
add
or
add
push
adc
add
add
add
add
add
add
push
adc
add
sbb
add
and
add
adc
dec
add
and
or
imul
sub
xchg
push
adc
cmpsb
pushl
ljmp
std
lcall
push
lods
jge
call
sar
pushl
cmp
incl
add
incl
add
incl
add
incl
push
sub
add
mov
adc
pushl
idiv
lcall
incl
sti
jmp
jle
lcall
ja
call
and
decl
or
pop
ljmp
adc
xor
incl
add
incl
add
incl
add
incl
add
ljmp
add
ljmp
sub
incl
cmp
xchg
decl
cvtpi2ps
add
add
adc
jne
and
lcall
hlt
lcall
cmp
ret
cmp
xor
add
aaa
xchg
add
das
addl
or
pop
add
sbb
push
adc
das
add
and
add
sbb
add
adc
add
add
add
add
add
add
pop
adc
add
sbb
add
add
pop
aas
add
sbb
add
and
or
das
orb
cmp
adc
inc
std
dec
lahf
fdivr
mov
call
call
inc
xchg
jmp
lods
ljmp
or
incl
or
add
add
incl
add
incl
or
decl
ss
lcall
in
movsb
idiv
cmp
cli
incl
call
lcall
call
pushl
lahf
repnz
xor
incl
add
incl
add
call
adc
and
add
add
add
add
add
add
push
add
decl
adc
and
or
add
xchg
add
incl
sub
push
add
decl
pop
and
sbb
mov
inc
cli
decl
ret
call
sub
ljmp
pusha
int3
decl
push
xor
add
and
or
inc
add
push
sub
add
sbb
add
add
or
add
add
or
add
sub
push
adc
or
inc
add
push
push
add
and
add
aaa
mov
sbb
int
cs
clc
incl
outsb
mov
inc
sti
call
cmp
add
add
add
add
add
or
push
or
adc
pop
or
inc
incl
sub
incl
xor
lcall
addr16
xor
ljmp
sbb
incl
push
adc
add
add
adc
xor
push
adc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
or
js
add
jl
or
incl
add
lcall
pop
jo
adc
mov
stc
decl
and
ljmp
pop
lcall
cmp
mov
add
sub
push
add
sbb
push
adc
add
or
add
or
add
add
or
add
add
or
add
and
add
adc
add
sbb
or
push
add
and
jl
adc
xchg
or
inc
cmp
aad
jmp
lcall
cmp
movsl
call
std
js
call
pop
xor
add
add
add
add
pushl
cmp
xor
incl
pop
adc
add
adc
incl
adc
incl
adc
cmp
add
incl
and
sub
pushl
mov
arpl
add
adc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
adc
adc
xor
push
ucomiss
or
add
call
push
inc
lcall
sub
jmp
aas
cmpsl
jmp
inc
mov
decl
adc
xchg
add
das
addb
daa
outsb
add
and
or
dec
add
adc
add
and
add
sbb
add
adc
add
add
add
sbb
add
add
adc
dec
add
and
or
insb
add
cmp
adc
aaa
out
and
fwait
lcall
decl
ljmp
outsb
scas
dec
repz
jmp
mov
incl
add
incl
add
incl
add
call
lcall
pop
incl
movaps
or
adc
sbb
decl
adc
adc
add
adc
add
sbb
add
xor
add
mov
aas
mov
ljmp
sbb
add
dec
incl
pop
adc
add
add
add
add
add
or
pop
adc
adc
es
push
and
incb
add
incb
add
incl
add
incl
add
incl
add
add
add
add
add
add
or
sbb
ljmp
inc
mov
pushl
jnp
lcall
xor
sar
adc
icebp
add
xor
xchg
or
and
or
aas
add
adc
add
and
add
pop
adc
add
or
add
add
push
cmp
or
dec
add
and
sub
push
das
addl
cmp
and
incl
idiv
xor
decl
pop
incl
mov
ljmp
test
push
or
incl
add
incl
add
incl
add
lcall
add
and
or
add
call
push
jmp
push
jmp
pop
dec
incl
mov
pop
adc
incl
sbb
or
mov
cmp
cli
incl
das
xchg
incl
push
xor
add
incl
add
incl
add
cmp
lea
sar
int3
shl
mov
sbbl
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
ud0
inc
lcall
cltd
fcos
das
xchg
push
xor
sbb
push
ss
adc
mov
or
and
add
push
push
add
sbb
push
adc
add
or
add
add
or
add
das
add
push
cmp
or
dec
add
and
or
jno
push
das
addl
cmp
push
adc
mull
inc
mov
jmp
adc
popa
cltd
int
jg
mov
incl
add
decl
or
incl
pop
or
add
add
add
incl
or
ljmp
or
call
adc
incl
sbb
adc
call
inc
mov
and
jecxz
dec
incl
cld
decl
cmp
incl
or
incl
add
incl
add
decb
jb
fnsetpm(287
icebp
cld
inc
int3
fscale
ss
add
add
add
add
add
add
add
or
pop
or
push
cmp
jmp
insl
test
lcall
sub
cs
decl
adc
xor
jge
or
push
add
sbb
push
adc
add
or
add
or
add
add
sbb
add
and
add
pop
add
sbb
add
and
or
xor
adc
clc
and
ljmp
cmp
lcall
into
call
add
incl
add
adc
and
or
adc
add
or
add
adc
add
incl
push
cmp
incl
and
jmp
jmp
lcall
cmp
cld
lcall
push
mov
incl
pop
sbb
add
push
incl
add
cmp
sti
frstpm(287
in
cld
call
std
xor
dec
cld
add
add
add
add
add
add
or
pop
pop
call
adc
js
push
push
mov
daa
cwtl
out
sbb
jb
and
ljmp
pop
mov
fadds
sysenter
xchg
add
addb
daa
imul
and
or
dec
add
adc
sub
add
add
or
add
add
push
add
or
add
xor
pop
pop
add
sbb
add
and
or
xor
or
mulb
cmp
lcall
sub
push
pop
cmp
pop
xchg
sar
call
add
incl
or
push
xor
sbb
incl
or
sub
add
pop
incl
xor
jmp
jb
pushl
mov
pushl
inc
in
lcall
inc
jne
ljmp
sbb
add
or
adc
mov
sti
pushl
sbb
incl
add
incl
add
incl
add
decl
or
call
add
mov
es
imul
sub
push
push
out
adc
addb
sub
or
pop
add
sbb
pop
push
cmp
add
or
add
or
add
push
adc
add
sbb
add
and
add
push
add
sbb
add
and
or
jb
push
xor
or
ljmp
dec
int3
lcall
and
or
cmp
inc
nop
aam
hlt
jmp
add
add
pushl
inc
push
decl
pop
xor
add
pop
decl
mov
jmp
jmp
lcall
clc
call
mov
jmp
jge
ljmp
mov
push
jbe
call
push
push
decl
pop
std
idiv
stc
std
sti
std
std
decb
cmp
add
add
incl
add
decl
adc
call
or
sbb
pop
sub
adc
enterw
pop
icebp
add
cmp
add
jo
or
pop
add
sbb
push
cmp
add
or
add
or
add
push
adc
add
sbb
add
and
add
push
cmp
or
dec
add
and
or
jo
or
cmp
icebp
sbb
dec
leave
lcall
and
decl
xor
sub
call
fsub
call
and
incl
add
ljmp
inc
pop
jmp
jmp
cmp
or
mov
inc
leave
jmp
lcall
sti
decl
std
jmp
jae
incl
sub
pop
pushl
and
adc
ss
mov
test
pushl
std
std
pushl
movsb
incb
adc
adc
add
add
add
add
sbb
lcall
push
insl
lcall
push
cmpsl
jmp
mov
call
and
cmp
cs
sub
cmp
add
and
or
dec
add
push
cmp
add
sbb
add
adc
add
sbb
add
add
push
cmp
or
dec
add
and
or
outsb
add
cmp
in
pop
es
sub
lcall
sub
sub
and
dec
push
cli
std
pushl
dec
push
incl
add
ljmp
ds
pushl
cmp
ljmp
and
pop
lcall
sti
call
call
data16
incl
sub
incl
or
incl
add
add
add
add
pop
cmp
decl
dec
decl
pop
jmp
repz
std
std
std
jl
mov
call
xor
or
pop
incl
add
call
pop
arpl
sbb
outsb
jmp
push
mov
daa
aam
adc
sbb
call
das
je
add
cmp
add
and
or
add
or
sbb
add
adc
add
sbb
add
and
add
adc
inc
add
and
or
imul
sub
cwtl
and
call
sub
jmp
cmp
call
xor
scas
in
clc
incl
jo
add
add
pop
daa
xor
dec
jae
pushl
push
mov
xor
lcall
sti
decl
decl
dec
loop
add
imul
or
incl
add
add
add
add
add
add
add
add
add
adc
cmpsb
mov
std
jmp
incb
add
imul
add
add
push
call
cmovs
and
pop
mov
call
into
call
adc
lods
add
das
test
or
and
or
add
or
sbb
add
adc
add
add
or
add
or
add
sub
push
adc
add
sbb
or
push
add
and
jnp
adc
xor
or
jmp
push
decl
adc
incl
or
insb
movsb
loopne
ljmp
incl
add
call
sbb
jg
xor
jg
lcall
lcall
sti
call
lcall
jo
incl
and
incl
cvtps2pi
add
or
or
or
add
add
incl
add
incl
add
jmp
addr16
std
std
std
jmp
cs
cld
sbb
xchg
decl
adc
incl
add
incl
add
call
cmovs
sub
lret
cmp
call
daa
push
ljmp
push
testb
test
push
das
addb
sub
or
pop
add
sbb
push
cmp
add
or
add
or
add
push
adc
add
add
pop
adc
add
sbb
add
daa
add
adc
pop
sbb
or
arpl
or
xor
push
sbb
mov
or
xchg
ljmp
pop
adc
inc
incl
xchg
repnz
decl
movsl
incl
add
decl
push
ud0
jge
pop
test
decl
jmp
cld
lcall
sti
decl
call
arpl
incl
and
xor
adc
sbb
decl
or
incl
pop
add
add
add
jmp
cmp
inc
ror
cld
std
std
std
decb
or
incb
xchg
cmp
incl
add
incl
add
incl
add
ljmp
cmp
lcall
and
or
jnp
das
arpl
call
pop
push
out
add
aaa
mov
add
outsl
add
and
sbb
pop
adc
add
and
add
sbb
add
adc
add
add
pop
adc
add
sbb
add
and
add
pop
add
sbb
add
and
or
das
test
cmp
ljmp
sbb
incl
or
dec
stos
out
idiv
decl
adc
add
and
cmp
dec
insb
mov
cs
mov
call
lcall
sti
lcall
sti
call
lcall
jno
incl
daa
xchg
incl
adc
ljmp
adc
jmp
pop
sbb
and
sbb
incl
dec
std
in
jmp
dec
shl
sti
push
sub
pop
sub
dec
addr16
decl
adc
incl
add
decl
or
ljmp
dec
sar
and
mov
decl
or
daa
dec
movsb
ljmp
pop
mov
loop
adc
addb
daa
insb
add
and
or
dec
add
adc
sub
add
and
add
pop
add
push
sldt
add
add
push
adc
add
sbb
add
and
add
adc
dec
add
and
or
push
push
jg,pn
adc
nop
add
enter
ljmp
push
sar
and
decl
add
lcall
pop
scas
mov
stc
lcall
dec
mov
add
add
add
add
sbb
pop
cmp
inc
mov
call
lcall
sti
lcall
sti
call
jmp
repz
mov
jg
mov
cmp
pop
decl
or
adc
push
push
add
add
insl
cld
aam
loop
cld
std
std
cld
std
std
inc
lret
loopne
xor
jns
or
pushl
inc
jno
sub
incl
add
incl
add
incl
sbb
jmp
sub
aas
decl
or
mov
incl
adc
xor
add
imul
pop
sbb
push
adc
add
or
add
or
add
add
or
add
sldt
or
add
or
add
adc
add
push
push
add
and
add
xor
add
xor
and
pop
ret
pop
sbb
or
jo
mov
lcall
aad
add
inc
incl
add
decl
push
adc
cmp
incl
lcall
cmp
loop
dec
jmp
cld
lcall
sti
lcall
incl
mov
decl
sbb
cmp
movlps
incl
or
add
add
cmp
cld
jnp
lods
cld
mov
sar
lret
shl
stos
mov
std
jno
xchg
cld
and
dec
std
push
push
cmp
das
cmp
and
push
incl
add
add
push
or
lcall
or
and
mov
lcall
mov
or
and
adc
dec
ljmp
aaa
test
pop
push
aas
mov
add
and
add
push
push
add
sbb
push
adc
add
or
add
pop
adc
add
add
add
add
adc
add
sbb
add
and
add
push
cmp
add
and
or
outsl
add
das
addl
cmp
pop
push
ljmp
loopne
sbb
decl
push
inc
call
ljmp
lock
pushl
sar
movaps
add
add
push
sub
pushl
dec
arpl
xor
call
xor
ds
incl
push
lcall
cmc
decl
dec
enter
xchg
lcall
and
add
and
add
adc
or
call
sbb
lcall
xor
sub
imul
and
decb
adc
sbb
pop
mov
cmp
jbe
push
add
add
or
adc
cmp
dec
sar
and
aad
sbb
sbb
and
call
arpl
add
push
xor
add
and
or
inc
add
adc
add
add
or
add
adc
add
push
add
add
adc
add
sbb
add
and
add
adc
add
sbb
or
push
add
and
jp
adc
stos
add
cmc
and
ljmp
pop
enter
inc
lcall
test
idiv
dec
cli
ljmp
push
add
add
add
adc
and
cs
push
ds
jno
sbb
xchg
add
vmovaps
ljmp
std
decl
ljmp
xchg
cmc
decl
inc
mov
incl
adc
incl
or
incl
or
decl
adc
decl
or
pop
jmp
jno,pt
and
insl
ljmp
cmp
ljmp
sub
adc
and
decl
add
pop
cmp
repz
jg
cld
call
cld
lcall
cmp
call
or
adc
push
ljmp
push
lcall
cmp
loope
adc
cwtl
add
addl
or
pop
add
sbb
push
adc
das
add
sbb
add
adc
add
add
add
add
add
push
add
or
add
sub
add
pop
aas
add
sbb
add
and
or
jno
push
xor
add
and
adc
dec
ljmp
xor
incl
jmp
incl
pop
push
incl
add
incl
add
lcall
daa
sub
cmp
call
xor
add
mov
bound
jmp
std
lcall
sti
lcall
sti
lcall
decl
lcall
pop
incl
push
and
add
push
or
pop
or
lcall
inc
jmp
ds
push
and
or
decl
pop
adc
add
add
add
and
push
pop
stos
inc
inc
push
jmp
ljmp
adc
test
sub
call
incl
adc
les
adc
jnp
or
add
pop
push
add
sbb
push
adc
add
or
add
or
add
add
or
add
add
add
add
add
adc
add
sbb
add
and
add
adc
inc
add
pop
push
add
and
jns
rdpmc
mov
adc
movsb
or
and
ljmp
addr16
push
sbb
adc
repnz
sti
jmp
xchg
incl
sbb
add
push
incl
daa
sub
cs
dec
cmp
lcall
mov
push
inc
ljmp
cwtl
sti
call
lcall
cld
lcall
jmp
decl
decl
das
cltd
incl
sub
add
or
incl
pop
add
adc
pop
decl
or
incl
add
add
add
add
add
pop
add
mov
sti
call
ljmp
pop
sar
or
sbb
cmp
and
decl
adc
out
add
xor
add
and
or
inc
add
push
sub
add
sbb
add
add
or
add
add
add
pop
add
add
add
push
adc
add
pop
add
pop
add
sub
push
adc
add
pop
aas
add
sbb
add
and
or
outsl
add
das
addl
wrmsr
mov
outsb
loope
sub
call
sub
pop
jge
decl
dec
hlt
call
loope
pop
dec
incl
pop
incl
add
call
sbb
xor
dec
pushl
cmp
xor
add
dec
incl
sub
decl
lcall
jmp
aas
mov
incl
sub
decl
or
decl
or
decl
or
decl
pop
incl
add
incl
add
incl
add
decl
fs
repz
std
in
lcall
in
call
sbb
jmp
push
ljmp
pop
lcall
and
adc
int3
add
xor
jle
or
imul
and
or
dec
add
adc
das
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
adc
add
sbb
or
push
add
and
add
xor
push
adc
pushl
jnp
jmp
sbb
pop
pop
lods
pushl
push
decl
push
mov
incl
add
decl
or
call
adc
adc
adc
das
call
sub
add
sar
popf
repz
lahf
cmc
call
dec
mov
decl
sbb
decl
adc
call
adc
decl
or
incl
add
incl
add
incl
add
call
sbb
pop
into
lcall
cld
cld
push
ljmp
call
sub
and
ljmp
loope
and
decl
adc
xchg
or
and
add
sbb
inc
add
adc
add
sub
add
and
add
sbb
add
adc
add
add
add
add
add
add
add
add
or
add
add
push
adc
add
push
add
or
add
daa
add
adc
add
push
cmp
add
and
or
push
or
xor
or
cmp
pushl
jp
lcall
jne,pt
or
pushl
insl
mov
mov
std
ljmp
mov
add
incl
add
incl
add
incl
add
decl
or
call
sbb
push
decl
and
and
add
incl
push
inc
incl
adc
decl
and
or
or
add
and
adc
imul
imul
std
pushl
stc
call
cmp
jmp
inc
ljmp
gs
ljmp
pop
into
call
pop
sti
add
sub
mov
push
jle,pn
or
insb
add
and
or
dec
add
push
cmp
add
add
or
add
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
sbb
add
and
add
adc
add
sbb
pop
add
outsb
add
jg,pn
sysenter
lea
adc
cmpsl
or
dec
mov
jmp
dec
test
or
inc
lcall
inc
mov
inc
jns
call
push
lcall
cmpl
incl
add
incl
add
incl
add
decl
or
incl
or
add
or
add
add
add
add
pop
add
decl
or
call
cmp
lret
incl
lcall
jne
call
and
call
sbb
jmp
dec
xchg
ljmp
addr16
sub
loope
sbb
cmp
add
xor
add
and
add
push
push
add
sbb
push
adc
add
or
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
adc
add
adc
add
add
adc
inc
add
push
push
add
and
or
jb
push
das
addb
xor
scas
or
push
mov
pushl
jno
decl
add
pop
xor
jmp
stc
mov
xchg
enter
mov
dec
test
decl
sub
add
das
incl
adc
or
sub
call
dec
popf
ljmp
adc
jge
std
fcos
dec
lock
jmp
lcall
add
dec
jmp
push
mov
ljmp
insb
jecxz
push
xor
xor
add
xor
mov
or
es
add
sbb
push
adc
xor
add
add
or
add
add
or
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
sbb
add
push
add
daa
add
push
cmp
or
dec
add
pop
push
add
and
add
xor
adc
icebp
and
incl
std
cmp
xor
aaa
decl
xor
pushl
sti
in
call
repz
lcall
fwait
enter
ret
lcall
lret
cltd
in
jnp
sti
jmp
push
dec
lock
jge
idiv
cs
int3
decl
adc
or
and
jmp
popa
mov
jg,pn
ljmp
insb
loop
and
mov
or
xor
add
xor
add
mov
push
jle,pn
or
outsb
add
and
or
add
pop
inc
add
adc
add
and
add
sbb
add
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
adc
add
sbb
add
add
sub
push
adc
pop
push
add
sbb
or
pop
add
and
add
xor
add
lods
or
cmp
incl
cld
dec
icebp
ljmp
arpl
decl
aaa
decl
aas
stos
call
lcall
std
std
sti
sti
cli
clc
jmp
call
idiv
mov
aad
jmp
out
sub
call
xchg
decl
adc
lcall
jp
pushl
fs
and
fwait
decl
sbb
repnz
sub
popl
push
das
addl
or
popa
add
push
push
add
sbb
push
adc
add
or
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
add
adc
add
sbb
add
and
or
jne
push
das
addl
xor
movsl
pop
adc
fistl
xor
cmp
ds
lret
jmp
push
je
adc
cmp
or
cmp
or
mov
cmp
outsl
mov
sahf
sahf
ret
mov
in
lcall
sahf
in
inc
jp
pushl
popa
ret
inc
stos
call
cs
decl
or
decl
push
cmp
pushl
jae
incl
idiv
cmp
push
mov
decl
pop
dec
repz
mov
adc
addl
sub
and
add
pop
push
add
sbb
push
push
cmp
add
push
daa
add
or
add
or
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
push
add
or
add
adc
add
pop
inc
add
sbb
and
or
add
das
addl
adc
lcall
dec
hlt
es
xchg
incl
jmp
cmp
mov
push
sub
or
add
incl
sbb
push
decl
and
pop
inc
js
sub
call
sub
or
push
incl
add
decl
add
decl
or
lcall
es
pushl
pop
cmp
ret
call
idiv
push
scas
cmp
lahf
call
sub
push
and
add
xor
add
xor
add
xor
add
data16
and
or
dec
add
push
aas
add
adc
add
or
add
or
add
pop
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
or
add
sub
add
sbb
or
add
and
or
add
sub
mov
adc
xchg
add
ss
add
and
sub
cmp
mov
cmp
jmp
dec
ja
sbb
pop
call
and
call
sbb
decl
sub
or
sub
or
xor
adc
lcall
ds
ljmp
push
js
aas
xorl
decl
aas
and
sub
lcall
xor
adc
decb
sbb
aaa
test
sysenter
mov
push
das
addl
or
add
and
or
add
pop
inc
add
adc
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
push
add
and
add
adc
add
pop
aas
add
sbb
or
push
add
and
or
insl
add
xor
add
cmp
or
sub
sbb
jmp
xchg
pushl
jns
pushl
lock
fwait
cmc
cmp
xor
mov
sub
ljmp
mov
incl
dec
test
decl
stc
decl
decl
ds
out
das
fs
jmp
inc
mov
call
es
decl
and
pop
sbb
cltd
add
xor
add
jb
or
add
sbb
add
pop
inc
add
adc
add
or
sbb
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
sbb
add
push
add
sub
push
adc
add
sbb
or
push
add
and
or
push
add
jle,pn
rdtsc
mov
adc
nop
add
cmp
pop
or
in
adc
jmp
inc
jg
daa
pop
test
ljmp
js
pushl
xchg
cmp
ljmp
mov
pushl
push
mov
pop
inc
xchg
lcall
das
jl
adc
es
cli
push
and
pop
sbb
add
cmp
add
xor
add
and
or
push
add
sbb
pop
pop
inc
add
adc
add
or
push
add
or
add
pop
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
pop
add
or
add
adc
add
push
cmp
or
inc
add
sbb
add
and
or
add
insl
add
addb
xor
add
aaa
fwait
add
das
mov
movaps
or
and
movshdup
stc
adc
push
cld
push
cs
sbb
jns
sbb
jae
adc
and
pop
adc
inc
out
or
inc
loop
sbb
into
add
ds
adc
lahf
add
xor
add
sub
jae
or
pop
add
push
push
add
sbb
pop
pop
aas
add
adc
add
or
push
add
or
add
pop
adc
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
pop
add
or
add
sub
add
adc
add
pop
inc
add
sbb
or
push
add
and
and
add
outsb
add
jle,pn
rdtsc
test
adc
add
aaa
xchg
add
cmp
add
xor
add
sbb
pop
inc
into
push
pop
inc
iret
push
pop
inc
into
push
sbb
pop
inc
movb
cmp
add
aaa
sahf
add
xor
add
xor
add
sub
daa
imul
and
or
pop
add
sbb
add
sbb
push
push
cmp
push
adc
add
or
push
add
or
add
pop
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
or
add
and
add
adc
add
adc
add
sbb
sbb
pop
push
add
and
or
arpl
or
imul
sub
or
jg,pn
push
das
addl
xor
add
xor
xchg
add
ss
add
ss
add
ss
add
ss
add
xor
add
xor
add
xor
add
sub
or
imul
or
pop
add
push
push
add
sbb
or
inc
add
adc
xor
add
or
push
add
or
add
pop
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
adc
add
or
add
sub
add
adc
add
pop
add
sbb
or
dec
add
push
push
add
and
or
pusha
add
and
imul
sub
or
sub
add
sub
jge
push
jle,pn
push
jg,pn
push
jg,pn
push
jle,pn
push
sub
jnp
or
sub
or
jo
or
imul
and
add
and
or
pop
add
push
push
add
sbb
pop
sbb
push
push
cmp
push
adc
add
sub
add
and
add
sbb
add
pop
add
push
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
adc
add
pop
add
or
add
add
daa
add
adc
add
adc
add
push
add
sbb
sbb
or
push
add
and
or
pop
add
and
or
add
and
push
or
imul
daa
insb
add
insb
add
imul
es
or
add
and
or
pop
add
and
or
push
add
sbb
add
sbb
pop
sbb
push
push
cmp
add
adc
add
and
add
sbb
add
push
add
push
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
pop
adc
add
push
add
or
add
or
add
and
add
adc
add
adc
add
push
cmp
pop
pop
inc
add
sbb
or
dec
add
sbb
add
sbb
push
add
pop
push
add
and
or
pop
add
and
or
pop
add
and
or
push
add
and
or
push
add
sbb
dec
add
sbb
or
inc
add
pop
inc
add
adc
add
adc
add
or
and
add
sbb
add
pop
adc
add
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
sldt
push
adc
add
pop
add
or
add
or
add
and
add
daa
add
adc
add
adc
add
adc
add
push
cmp
pop
push
add
pop
inc
add
sbb
sbb
or
inc
add
sbb
or
dec
add
sbb
or
dec
add
sbb
or
inc
add
sbb
pop
inc
add
push
add
adc
aaa
add
adc
add
adc
add
add
and
add
sbb
add
or
add
push
adc
add
sldt
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
or
add
daa
add
adc
add
adc
push
adc
add
adc
add
adc
add
adc
cmp
push
adc
cmp
push
adc
add
adc
add
adc
add
adc
add
adc
add
daa
add
and
add
sbb
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
or
add
or
add
or
add
and
add
and
add
and
add
adc
add
adc
add
adc
add
movntps
add
push
daa
add
and
add
and
add
sbb
add
or
add
or
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
adc
add
or
add
or
add
or
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
sldt
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
add
add
pop
incl
add
cld
add
add
add
incl
add
jmp
add
add
add
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
incb
add
add
add
jg
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
aas
add
add
loopne
add
add
add
add
add
lock
add
add
incl
add
cld
add
add
add
incl
add
incl
add
add
ud0
add
incl
pop
incl
add
push
add
add
jg
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
push
sldt
push
adc
add
adc
add
adc
add
push
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
adc
add
adc
add
sldt
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
adc
add
or
add
or
add
push
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
push
add
or
add
sbb
add
sbb
add
adc
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sldt
pop
adc
add
adc
add
or
add
pop
add
and
add
and
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sub
add
and
add
pop
add
or
add
or
add
or
add
adc
add
push
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
adc
add
adc
add
push
add
or
add
or
add
and
add
daa
add
adc
add
adc
add
adc
cmp
add
push
add
push
add
push
add
push
cmp
add
adc
xor
add
cvtpi2ps
add
and
add
or
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
or
add
and
add
and
add
sub
add
adc
push
adc
cmp
add
sbb
or
dec
add
sbb
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
pop
sbb
pop
pop
inc
add
push
cmp
push
adc
add
adc
add
push
add
and
add
sbb
add
pop
add
pop
adc
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
or
add
or
add
sub
add
adc
add
push
cmp
add
sbb
or
add
and
or
pop
add
and
or
popa
add
and
add
and
add
and
add
and
add
and
or
pop
add
and
or
push
add
sbb
dec
add
sbb
pop
sbb
push
adc
xor
add
push
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
adc
add
or
add
sub
add
adc
add
push
aas
add
sbb
or
add
and
or
pusha
add
and
add
insb
add
jo
or
sub
or
sub
add
sub
or
sub
or
outsl
add
es
or
add
and
or
push
add
sbb
dec
add
pop
inc
add
adc
xor
add
or
add
or
add
push
add
push
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
or
add
and
add
sub
add
adc
add
pop
add
sbb
or
add
pop
push
add
and
or
add
sub
or
sub
add
addl
push
xor
add
xor
sysenter
lea
sysenter
mov
rdpmc
mov
push
xor
add
sub
add
daa
imul
and
or
pop
add
sbb
inc
add
push
add
adc
add
push
add
or
add
push
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
sbb
add
push
add
sub
push
adc
pop
push
cmp
or
inc
add
sbb
add
and
or
popa
add
push
or
sub
test
rdmsr
mov
adc
add
cmp
add
inc
mov
push
inc
enter
iret
or
aaa
rorb
sbb
aam
sbb
rorl
sbb
into
or
cmp
add
lods
add
aaa
sahf
add
xor
xchg
push
jg,pn
or
daa
insb
add
and
or
push
add
sbb
add
sbb
push
adc
add
push
add
or
add
or
add
pop
adc
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
push
add
pop
adc
add
sbb
add
pop
add
daa
add
adc
add
pop
inc
add
sbb
or
push
add
and
or
push
or
addb
xor
add
aaa
popf
add
int3
or
inc
loopne
sub
adc
xor
insl
lcall
cmp
cmp
sbb
arpl
sbb
call
push
clc
adc
inc
jmp
sbb
aad
adc
cltd
add
xor
add
imul
or
inc
add
adc
xor
add
daa
add
or
add
or
add
pop
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
sub
add
adc
inc
add
sbb
pop
add
jae
push
jg,pn
rdmsr
mov
adc
add
cmp
or
dec
loopne
and
sbb
js
and
xchg
jmp
test
jmp
dec
mov
jmp
dec
mov
jmp
lods
jmp
mov
jmp
cmp
call
and
or
xor
add
xor
add
xor
add
and
or
push
add
sbb
push
adc
xor
add
add
or
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
sub
add
adc
dec
add
push
push
add
and
or
outsb
add
xor
add
cmp
push
push
push
in
pop
sub
pop
xor
ljmp
dec
ljmp
dec
mov
and
cmp
lcall
and
sbb
mov
and
stos
jmp
mov
jmp
inc
sahf
jmp
cwtl
jmp
cmp
jmp
cmp
call
and
or
loopne
adc
scas
add
xor
add
das
addb
sub
or
add
push
push
add
sbb
push
adc
das
add
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
sbb
add
and
add
sub
push
adc
add
pop
add
sbb
or
push
add
and
add
jae
push
addl
adc
sahf
add
push
push
in
sbb
jg
and
mov
sub
ljmp
dec
scas
jmp
cs
call
sub
adc
daa
decl
or
sbb
push
movaps
pop
sbb
sbb
pop
lcall
and
jg
and
popf
ljmp
bound
jmp
mov
and
scas
lcall
sub
decl
pop
cmp
add
adc
xchg
add
xor
add
and
add
pop
push
add
sbb
push
adc
add
sbb
add
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
pop
add
or
add
sub
add
push
cmp
add
and
or
data16
xor
add
in
es
and
lods
ljmp
inc
sar
cmp
push
call
and
decl
adc
decl
push
add
or
add
decl
or
decl
or
decl
unpckhps
movhps
decl
adc
decl
push
decl
or
call
push
sub
push
sbb
jbe
and
dec
cmpsb
lcall
cmp
sbb
sbb
incl
adc
cmp
add
jne
or
add
push
push
add
sbb
push
adc
add
or
add
or
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
sldt
or
add
or
add
push
cmp
or
dec
add
and
or
js
wrmsr
xchg
adc
xchg
add
and
and
fwait
ljmp
inc
mov
jmp
xor
sbb
adc
push
invd
decl
or
call
adc
decl
femms
decl
push
push
call
adc
adc
pop
pushl
pop
inc
call
adc
sbb
adc
sbb
decl
or
adc
push
or
lcall
mov
lcall
mov
jmp
cmp
decl
push
inc
add
aaa
xchg
add
das
addb
sub
or
popa
add
sbb
inc
add
movaps
add
pop
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
adc
add
sbb
or
push
add
and
ja
push
xor
or
inc
fstps
sub
inc
mov
ljmp
jnp
and
inc
lcall
xor
push
xor
decl
or
ud0
or
incl
pop
push
incl
add
incl
add
decl
add
decl
cmp
adc
incl
add
or
pop
decl
adc
decl
add
gs
clc
repz
lcall
xor
call
pop
incl
adc
nop
add
das
addl
or
pop
add
sbb
add
push
cmp
add
sbb
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
pop
add
and
add
adc
add
push
push
add
and
or
xor
or
dec
jecxz
sub
ljmp
push
mov
sub
jge
inc
cmp
imul
cmp
push
and
decl
or
incl
push
add
incl
add
incl
add
incl
add
incl
add
add
das
decl
add
incl
add
incl
add
incl
add
incl
add
incl
push
add
or
or
adc
cmp
push
test
ljmp
call
sub
mov
adc
pop
cld
add
cmp
mov
push
sub
imul
or
inc
add
adc
add
or
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
and
add
pop
add
sbb
add
and
or
jno
push
das
addb
xor
or
push
fistps
xor
int
es
mov
aas
inc
mov
cmp
cwtl
jmp
inc
decl
push
sbb
pop
or
incl
or
add
add
add
add
add
add
add
or
add
decl
cmp
call
fdivr
fs
lcall
dec
leave
call
inc
lret
xor
incl
or
add
or
add
add
add
add
pop
adc
jmp
jbe
call
out
pushl
out
decl
pushf
lcall
stos
jmp
aas
lods
decl
adc
movsb
add
xor
add
and
or
push
add
pop
inc
add
adc
add
daa
add
or
add
add
or
add
add
add
add
add
push
adc
add
pop
add
and
add
adc
add
sbb
or
push
add
imul
adc
mov
adc
sbb
xchg
ljmp
outsb
ljmp
dec
jmp
sar
inc
dec
sar
inc
cmp
or
inc
sbb
sbb
add
incl
add
incl
add
aas
incl
cmp
ds
cmc
call
cli
call
jmp
ljmp
clc
lcall
idiv
jae
sti
jmp
clc
pushl
sub
add
or
add
push
incl
add
incl
and
push
imul
pusha
pop
mov
push
xor
incl
adc
add
xor
addl
sub
or
pop
add
sbb
push
adc
sub
add
or
add
push
adc
add
add
add
add
add
add
push
add
add
add
push
adc
add
sbb
add
and
add
pop
aas
add
sbb
popa
add
xor
adc
jbe
xor
incl
idiv
and
ljmp
mov
ljmp
push
insl
decl
push
or
or
add
inc
push
sub
sbb
sub
add
add
or
sbb
add
aam
inc
mov
cld
ljmp
clc
jmp
stc
lcall
cli
jnp
cld
call
aad
incl
out
ljmp
cli
decl
std
incl
idiv
sub
incl
pop
jbe
add
add
add
add
add
add
push
pop
mov
jmp
jmp
sub
jmp
dec
aam
sbb
jle
add
ss
sysenter
lea
or
and
push
add
sbb
push
adc
add
daa
add
or
add
adc
add
or
add
add
add
push
sldt
pop
adc
add
adc
add
sbb
or
pop
add
imul
das
jg
or
push
in
cmp
lcall
pushl
dec
outsl
lods
jmp
push
pushf
decl
sub
incl
add
incl
add
incl
add
incl
add
decl
or
add
xchg
ljmp
out
lcall
cld
jmp
idiv
gs
call
clc
pushl
popf
icebp
lcall
jne
call
dec
ljmp
call
incl
sub
sub
ljmp
and
dec
repz
jge
incl
adc
push
add
incl
add
decl
sub
mov
call
and
int
or
dec
jecxz
sysenter
fwait
add
xor
add
and
sbb
push
adc
sub
add
or
add
push
sldt
add
add
add
add
push
adc
add
sbb
add
and
add
push
cmp
add
and
or
xor
add
sub
ljmp
jmp
sti
jmp
push
scas
ljmp
mov
lcall
aaa
dec
incl
add
add
add
add
add
add
push
or
nop
ljmp
jbe
ljmp
stc
pushl
repz
hlt
ljmp
and
or
add
incl
pop
insb
incl
adc
bndldx
cmp
lcall
sbb
incl
add
inc
incl
or
sub
into
jmp
incl
sub
decl
sbb
incl
add
add
adc
sub
cld
stc
cli
pushl
push
cmp
aas
mov
incl
or
xor
jnp
or
add
sbb
push
adc
add
sbb
add
adc
add
add
add
add
add
add
pop
adc
add
sbb
add
daa
add
adc
or
inc
add
pop
push
add
jl
adc
inc
icebp
inc
cltd
aad
cmp
cmp
lods
call
incl
xchg
decl
sbb
incl
add
add
add
add
add
add
sub
or
cmp
lcall
cld
pushl
stc
lcall
imul
adc
decl
es
decl
pop
incl
push
adc
ds
incl
add
incl
add
incl
add
jmp
sub
incl
xor
decl
sbb
add
or
push
jmp
jge
pushl
rcr
call
das
cmp
or
dec
out
rdpmc
pushf
add
xor
add
and
or
dec
add
adc
add
or
add
pop
adc
add
add
add
add
add
or
add
adc
add
sbb
or
pop
add
xor
sbb
ljmpw
cli
jge
lcall
push
cmpsb
pushl
into
inc
ret
and
push
incl
or
incl
add
incl
add
incl
add
inc
call
xor
pushl
cmpsl
cmc
cmp
call
lcall
incl
stc
decl
aas
sahf
incl
or
add
or
add
push
sbb
incl
add
incl
add
incl
add
dec
add
lcall
add
incl
cmp
decl
cvtpi2ps
pop
add
call
setb
xor
mov
push
mov
sbb
or
mov
add
and
or
add
push
cmp
add
and
add
sbb
add
adc
add
add
add
add
or
add
and
add
adc
dec
add
and
or
jbe
adc
mov
adc
fisubl
push
xchg
jle
lcall
jmp
lcall
pushf
fdivrp
adc
cmp
add
incl
push
decl
adc
incl
or
incl
pop
pop
incl
and
incl
daa
incl
xor
lcall
jb
decl
pushl
adc
add
or
add
call
sbb
add
or
add
add
add
add
add
add
add
add
add
add
push
add
or
push
incl
ja
or
push
incl
adc
pop
sbb
ljmp
loopne
adc
ljmp
pusha
sar
push
inc
faddl
rdpmc
xchg
add
jg,pn
or
imul
or
inc
add
adc
add
and
add
push
adc
add
add
add
add
or
add
xor
pop
pop
aas
add
push
push
add
and
add
cmp
xor
pushl
cmp
decl
cmp
ljmp
adc
unpcklps
incl
add
incl
add
call
and
push
sbb
or
incl
or
incl
mov
add
sub
add
das
incl
push
push
incl
sbb
out
cmp
cmc
incl
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
decl
or
decl
add
decl
sub
sbb
mov
pop
nop
sbb
call
xchg
ljmp
enter
je
add
cmpsl
add
xor
add
and
or
inc
add
adc
add
or
add
add
or
add
xor
or
inc
add
pop
push
add
imul
adc
mov
xor
call
jmp
ss
ljmp
or
incl
add
incl
add
decl
add
call
or
incl
or
lcall
sbb
add
adc
add
push
incl
or
push
incl
cmp
jmp
cmovne
add
incl
add
incl
add
lcall
daa
dec
incb
arpl
pop
popa
je
dec
pop
jo
pop
and
add
add
add
add
add
add
add
add
add
add
add
add
ds
jmp
inc
mov
jmp
scas
ljmp
mov
incl
xor
add
and
or
add
push
cmp
add
or
add
pop
push
add
add
or
add
and
add
sbb
pop
push
add
insb
add
addb
stos
adc
inc
stc
sub
xor
sub
mov
decl
add
add
add
add
decl
add
incl
add
incl
pop
or
dec
or
jmp
adc
incl
adc
decl
sbb
mov
sbb
incl
pushl
xchg
jmp
add
jae
add
and
add
add
add
add
cmp
gs
mov
hlt
cld
push
sti
std
dec
shl
std
arpl
cld
add
add
add
add
add
add
add
add
push
add
or
and
jmp
mov
jmp
mov
es
mov
decl
push
inc
aad
adc
jp
or
add
sbb
aas
add
or
add
or
add
add
or
add
daa
add
adc
add
and
or
insl
add
xor
adc
inc
sti
daa
push
mov
call
sbb
sub
out
ljmp
push
pop
incl
add
decl
adc
incl
pop
or
add
incl
or
add
and
add
cmp
add
xchg
incl
aam
dec
mov
decl
pushl
mov
cmp
or
incl
add
incl
add
pushl
inc
dec
cld
fnsetpm(287
out
std
push
cli
std
je
cld
add
pop
incb
add
incl
add
decl
adc
or
or
adc
pop
mov
and
jmp
addr16
ljmp
data16
in
sysenter
cwtl
add
jle,pn
or
push
add
sbb
push
adc
add
sbb
add
adc
add
sbb
add
daa
add
adc
add
and
or
outsb
add
xor
or
inc
mov
daa
dec
sar
or
ljmp
dec
xchg
jmp
pushl
push
push
incl
or
lcall
adc
incl
or
incl
adc
incl
pop
ja
push
dec
mov
call
cli
dec
jmp
pushl
clc
pushl
push
jmp
dec
decl
push
sbb
add
add
adc
sbb
ret
int
cld
stc
sti
std
push
pop
jns
add
add
incl
add
add
or
adc
push
jmp
test
jmp
pop
call
es
ljmp
ret
xor
add
xor
add
insb
add
pop
push
add
sbb
adc
add
and
add
push
adc
add
sbb
add
daa
add
adc
or
inc
add
and
or
insl
add
xor
or
sub
and
scas
jmp
or
jmp
dec
cltd
call
mov
pop
or
add
or
jmp
cs
incl
adc
incl
es
sub
in
call
jmp
jmp
jp
cmc
inc
ret
lret
cltd
jmp
outsb
jae
jmp
mov
dec
jb
decl
adc
pop
outsl
addr16
std
std
std
mov
sbb
incb
add
incl
add
decl
xor
adc
dec
jmp
jge
jmp
jnp
call
adc
stos
lcall
cmp
cli
add
ss
add
das
addb
daa
outsb
add
and
or
inc
add
adc
add
or
add
push
adc
add
sbb
add
and
add
sbb
pop
push
add
imul
das
orb
cmp
and
test
and
or
call
xor
loop
lock
and
incl
add
incl
ja
push
jno
incl
es
sub
jmp
sti
decl
lcall
loopne
add
mov
adc
pop
decl
cmp
push
jmp
decl
jl
inc
fcom
jmp
in
sub
outsl
decb
push
and
incl
add
call
push
pusha
lcall
movd
and
and
call
push
and
lcall
inc
xchg
incb
cmp
add
outsl
add
and
or
inc
add
adc
add
or
add
push
adc
add
sbb
add
and
push
adc
add
sbb
or
push
add
imul
sbb
repnz
xchg
ljmp
inc
ret
call
adc
lcall
cmp
incl
add
cmp
mov
call
jmp
sti
call
call
out
incl
and
incl
add
incl
add
add
add
and
inc
decl
push
in
div
jmp
jmp
pop
decb
xor
adc
daa
incl
add
call
adc
and
movsw
decl
or
jmp
push
sahf
jmp
inc
cltd
incl
cmp
add
das
addl
sub
or
pop
add
sbb
push
adc
add
or
add
push
adc
add
add
or
add
and
add
pop
aas
add
sbb
data16
jnp
sbb
xchg
sbb
pop
ljmp
push
sar
sbb
incl
test
incl
jae
add
add
and
inc
incl
sahf
jmp
sar
push
jmp
jmp
sti
call
decl
loop
add
incl
push
adc
add
add
add
add
add
add
add
add
add
add
pop
adc
jmp
call
rcl
adc
xor
pop
das
popa
lcall
sub
add
add
or
sbb
adc
dec
iret
lcall
inc
mov
push
push
and
sub
lcall
inc
xchg
incl
cmp
add
outsl
add
and
or
inc
add
adc
add
or
add
push
adc
add
add
or
add
and
add
push
cmp
or
add
cmp
unpcklps
lcall
add
cmp
jmp
incl
xchg
add
add
sbb
xor
dec
je
ljmp
ret
sti
jmp
std
lcall
ljmp
xchg
clc
incl
sub
incl
ud0
adc
decl
push
push
incl
push
add
add
add
add
add
arpl
cld
cld
cld
std
incl
adc
decl
lahf
call
add
add
add
sbb
jo
sub
leave
call
adc
lcall
aaa
cmp
adc
mov
push
das
addb
sub
or
pop
add
sbb
push
adc
add
or
add
push
adc
add
add
or
add
push
add
adc
add
sbb
or
pop
add
xor
or
inc
mov
and
incl
ja
in
ljmp
ret
incl
add
or
adc
push
jb
incl
jmp
jno
lcall
lcall
sti
lcall
pushl
cwtl
stc
incl
xor
sbb
and
decl
or
call
adc
push
or
call
push
ljmp
std
std
call
fsub
cld
sbb
inc
cld
xor
jno
ds
jl
add
add
decl
push
sbb
jmp
xor
decl
push
cmp
adc
aas
pushl
fs
call
adc
add
insb
add
and
or
inc
add
adc
add
add
or
add
push
adc
add
or
add
adc
add
sbb
add
adc
or
inc
add
pop
push
add
push
push
das
addb
cmp
sbb
push
enter
sub
sbb
mov
out
decl
sub
add
add
adc
es
cmp
jmp
dec
movsl
ljmp
mov
lcall
jmp
sti
lcall
pushl
movsl
incl
cmp
decl
ja
dec
sbb
sbb
push
jmp
adc
incl
add
jmp
xor
std
ret
cld
std
std
std
jmp
out
std
inc
push
cmp
adc
inc
push
mov
adc
sub
add
add
add
add
sbb
imul
sbb
push
pop
lcall
sub
pushl
fs
decl
and
add
xor
add
push
add
sbb
push
adc
add
sbb
add
adc
add
or
add
adc
add
sbb
add
and
add
pop
add
sbb
arpl
or
aaa
mov
or
les
and
sub
push
inc
incl
cli
stc
cmp
add
adc
add
add
es
inc
incl
xchg
sbb
js
call
jmp
cld
lcall
std
call
js
loopne
nop
jb
ljmp
and
incl
adc
decl
or
ljmp
xor
test
out
repz
rcl
jecxz
fwait
movsb
mov
cld
or
cmp
sub
incl
add
incl
add
adc
inc
jmp
das
mov
sub
lcall
adc
adc
and
ljmp
push
mov
flds
adc
popl
or
and
add
sbb
add
or
add
or
add
add
pop
add
add
pop
add
and
add
adc
dec
add
and
sub
rdmsr
test
adc
or
and
and
inc
lahf
incl
or
decl
cld
jmp
push
mov
add
add
or
dec
pop
pushl
dec
outsl
call
xor
call
gs
dec
sar
lcall
std
jmp
jmp
push
enter
mov
sbb
push
incl
or
incl
or
call
es
cs
ds
jp
sub
imul
sbb
mov
sub
incl
add
incl
add
ljmp
ljmp
aaa
enter
loop
and
or
push
adc
ljmp
push
lcall
cmp
decl
pop
aas
roll
xor
add
and
or
dec
add
adc
sub
add
pop
add
or
add
add
add
add
adc
add
sbb
add
add
adc
add
sbb
or
push
add
and
jl
adc
popl
or
adc
adc
pop
call
cmc
lcall
sub
add
add
or
adc
cmp
ds
outsl
lcall
cmp
incl
jmp
std
pushl
std
decl
pushl
mov
incl
mov
add
or
or
adc
or
dec
lcall
cmp
sub
ljmp
push
incl
add
incl
add
aas
and
and
jnp
call
cld
lcall
test
adc
aaa
lcall
push
sar
and
add
push
das
addb
sub
or
pop
add
sbb
push
adc
add
or
add
add
add
add
push
adc
add
sbb
add
and
add
adc
dec
add
and
or
jb
rdmsr
xchg
adc
mov
and
lods
jmp
adc
jmp
decl
incl
add
decl
adc
pop
cmp
call
jo,pn
or
pushf
stc
jmp
lcall
std
lcall
sti
lcall
decl
lcall
imul
add
push
incl
or
add
add
sbb
inc
jmp
cmp
call
sbb
decl
or
incl
add
lcall
xor
mov
cmc
call
push
jmp
decl
call
and
sub
lcall
cmp
fiadds
adc
xchg
add
and
push
add
sbb
push
adc
add
and
add
push
adc
add
add
add
add
or
add
adc
add
sbb
add
adc
add
pop
push
add
and
jl
adc
mov
cs
sub
xor
adc
jo
stc
dec
icebp
jmp
data16
add
add
call
push
adc
cmp
xor
add
cmp
cmp
lcall
sti
jmp
incl
incl
pop
jbe
add
pop
incl
or
incl
adc
pop
or
incl
add
incl
add
incl
add
lcall
cmp
decl
dec
clc
jmp
dec
mov
rsqrtps
and
ljmp
pop
sar
adc
adc
mov
add
jae
or
pop
add
sbb
add
adc
add
and
add
pop
add
push
sldt
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
adc
dec
add
and
sub
push
das
addb
aaa
xchg
push
adc
xlat
and
pushl
jb
lcall
xor
adc
mov
inc
hlt
call
fdivrp
or
outsb
incl
add
decl
or
jmp
sub
decl
adc
incl
sub
jmp
lcall
jmp
jge
incl
adc
decl
or
or
or
push
incl
add
incl
add
decl
add
decl
sub
ljmp
cld
sti
jmp
incl
decl
pop
jns
sbb
loopnew
and
mov
jecxz
sysenter
cwtl
add
jg,pn
or
push
or
push
add
sbb
push
adc
add
sub
add
push
add
pop
adc
add
add
add
add
add
add
add
add
adc
add
sub
push
adc
add
pop
inc
add
sbb
arpl
or
xor
mov
call
cs
call
push
push
call
ds
ljmp
cli
incl
inc
test
add
sub
add
add
add
add
or
or
pop
and
call
sub
es
push
push
mov
add
sbb
decl
adc
adc
decl
add
incl
add
or
lcall
bound
call
jmp
call
decl
xor
pop
ljmp
pop
sar
adc
das
mov
rdpmc
xchg
or
and
or
add
pop
add
adc
add
and
add
sbb
add
adc
add
add
add
add
add
add
add
add
pop
add
add
adc
add
sbb
add
and
add
adc
add
sbb
or
push
add
push
add
xor
add
xor
hlt
sub
das
imul
push
dec
xchg
imul
dec
in
cld
lcall
ret
lcall
or
incl
add
add
or
push
or
decl
aaa
incl
or
add
push
incl
add
incl
add
decl
sbb
or
aaa
call
ja
inc
xchg
leave
pushl
clc
jmp
std
jmp
jge
decl
and
jmp
pop
mov
lcall
xchg
add
rdpmc
xchg
add
sub
push
or
push
add
sbb
push
adc
add
sub
add
pop
add
or
add
push
sldt
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
adc
dec
add
and
daa
insl
add
jg,pn
push
xor
mov
and
stc
xor
cmp
pop
incl
add
sbb
mov
inc
jmp
push
call
out
js
iret
cmp
pushl
pop
test
push
inc
push
incl
add
incl
add
incl
add
cmp
call
cmp
lcall
fdecstp
ljmp
ljmp
add
lcall
xor
sub
ljmp
jno
jmp
cmp
decl
ss
add
xor
add
and
or
dec
add
push
add
or
sbb
add
adc
add
or
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
adc
add
pop
add
pop
add
sub
push
adc
add
pop
inc
add
sbb
pop
add
jo
push
das
addb
xor
mov
xor
incl
in
and
test
or
decl
add
push
cmp
ljmp
ljmp
push
jmp
dec
lock
call
mov
decl
mov
js
idiv
cmpsb
call
fprem
decl
pop
decl
or
decl
cmp
sbb
jns
ljmp
jae
jmp
aas
lcall
adc
add
xor
add
and
add
push
push
add
sbb
push
adc
add
and
add
pop
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
adc
add
sbb
or
pusha
add
jno
push
das
addb
xor
mov
sbb
repz
stos
call
clc
cmp
dec
decl
add
or
ljmp
dec
scas
ljmp
in
mov
sti
clc
stc
push
in
fdivr
inc
jmp
cld
ljmp
jmp
call
sbb
inc
call
and
sub
pushl
mov
ljmp
jo
jmp
inc
mov
icebp
add
sub
mov
or
imul
or
dec
add
adc
add
sbb
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
sbb
add
and
add
adc
add
sbb
or
push
add
and
or
jno
push
das
addl
adc
stos
pop
adc
jecxz
push
mov
inc
mov
decl
in
ljmp
jo
call
sub
decl
add
push
call
das
xchg
inc
je
pushl
incl
lods
sar
test
jmp
lods
xlat
sti
jl
call
ljmp
mov
call
es
pop
push
decl
and
pop
mov
inc
xchg
inc
cltd
ljmp
int3
lcall
cmp
push
dec
icebp
add
ss
add
xor
add
sub
insl
add
and
sbb
add
push
add
push
add
or
add
push
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
adc
add
add
adc
add
sbb
or
push
add
and
or
outsl
add
jle,pn
rdpmc
mov
getsec
popf
add
cmp
adc
push
sti
xor
decl
clc
incl
lock
jns
lcall
cmp
movups
incl
or
incl
or
decl
and
adc
or
inc
decl
add
or
pop
call
inc
addr16
jg,pt
decl
call
incl
jmp
test
push
sub
or
adc
stos
add
xor
add
insl
add
and
or
add
pop
inc
add
adc
add
sub
add
and
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
or
add
adc
add
sbb
sbb
pop
add
insb
add
xor
add
xor
sbb
ljmp
insl
mov
cmp
pushl
mov
ljmp
push
jmp
jo
sbb
pop
call
and
adc
dec
lcall
cmp
ljmp
push
jge
xor
cltd
cmp
decl
fdivr
push
mov
decl
stc
cmp
ljmp
push
mov
sbb
call
and
or
aas
rolb
adc
lahf
add
xor
add
insb
add
and
or
inc
add
adc
add
or
add
or
add
push
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
adc
add
push
add
or
add
adc
add
sbb
or
add
and
or
add
sub
push
das
addb
xor
add
cmp
or
sub
push
and
inc
cmp
imul
xor
nop
call
cmp
loop
inc
movsl
hlt
decl
sti
incl
cmc
incl
lock
cmp
mov
push
cmp
call
sub
pop
stc
or
cmp
push
xor
add
imul
or
add
sbb
push
adc
add
sub
add
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
push
add
or
add
adc
add
pop
inc
add
sbb
or
push
add
and
or
sub
push
xor
adc
lcall
and
or
sbb
cli
pop
sub
sbb
je
and
daa
pop
mov
jmp
push
popf
jmp
inc
lcall
ss
pop
jb,pn
adc
pop
std
nopl
push
and
or
inc
roll
push
cmp
add
xor
xchg
or
sub
or
add
sbb
add
pop
inc
add
adc
add
or
sbb
add
push
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
push
add
or
add
and
add
adc
add
push
cmp
add
sbb
pop
add
and
add
jo
push
sub
add
xor
add
cmp
add
xor
pop
adc
rorl
pop
inc
fisttpll
sbb
or
dec
fisttps
sbb
or
inc
fimull
sbb
pop
sbb
rolb
cmp
add
xor
add
sub
es
or
pop
add
push
push
add
sbb
pop
pop
add
adc
add
or
sbb
add
push
add
push
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
adc
add
and
add
adc
add
adc
add
sbb
or
dec
add
push
push
add
and
or
add
sub
addb
xor
add
xor
xchg
add
aaa
cltd
add
aaa
lcall
ss
add
xor
popl
rdmsr
mov
push
xor
or
sub
or
imul
or
push
add
sbb
add
sbb
adc
xor
add
or
add
or
add
push
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
sbb
add
pop
add
sub
push
adc
add
adc
inc
add
sbb
or
push
add
and
or
popa
add
and
insl
add
sub
push
sub
add
jle,pn
push
jg,pn
push
sub
jle
or
sub
add
sub
or
imul
and
add
and
or
push
add
sbb
add
sbb
pop
pop
add
adc
add
push
daa
add
and
add
sbb
add
adc
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
push
add
or
add
and
add
sub
add
adc
push
push
cmp
pop
sbb
or
dec
add
sbb
add
push
push
add
and
or
pop
add
and
or
add
imul
or
imul
or
add
and
or
pop
add
and
or
push
add
sbb
add
sbb
pop
push
add
adc
add
cvtpi2ps
add
and
add
push
add
or
add
pop
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
adc
add
sbb
add
sbb
add
sub
add
adc
add
adc
add
push
cmp
add
sbb
or
dec
add
sbb
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
push
push
add
sbb
dec
add
sbb
pop
sbb
pop
sbb
push
push
cmp
push
adc
add
movntps
add
and
add
or
add
or
add
push
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
adc
add
adc
add
or
add
add
sub
add
adc
add
adc
add
adc
cmp
add
pop
inc
add
sbb
pop
sbb
pop
sbb
pop
sbb
pop
pop
inc
add
pop
aas
add
push
cmp
push
adc
add
adc
add
and
add
and
add
sbb
add
pop
add
pop
adc
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
pop
add
and
add
add
sub
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sub
add
and
add
or
add
or
add
or
add
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
push
add
or
add
or
add
or
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
pop
add
or
add
or
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
adc
add
adc
add
adc
add
push
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
ud0
loopne
add
add
incl
add
incl
add
add
add
add
aas
clc
add
add
add
aas
lock
add
add
pop
loopne
add
add
add
rolb
add
add
pop
rolb
add
add
pop
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
add
add
incl
add
add
add
inc
add
add
add
jmp
add
add
add
clc
add
add
add
clc
add
add
add
incb
add
add
inc
add
add
ljmp
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
adc
add
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
or
add
and
add
and
add
cvtpi2ps
add
movaps
add
sub
add
and
add
or
add
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
adc
add
push
add
or
add
or
add
sub
add
adc
push
adc
add
adc
add
push
add
push
add
push
cmp
add
adc
add
adc
add
and
add
sbb
add
pop
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
adc
add
and
add
adc
add
adc
add
sbb
or
dec
add
sbb
add
sbb
push
add
push
push
add
push
push
add
push
push
add
sbb
dec
add
sbb
pop
push
inc
add
adc
add
movaps
add
and
add
sbb
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
adc
add
sbb
add
and
add
adc
add
adc
inc
add
sbb
or
push
add
and
and
add
es
add
outsl
add
jo
or
jo
or
outsb
add
push
or
pop
add
pop
push
add
sbb
add
sbb
push
adc
xor
add
daa
add
or
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
push
add
or
add
adc
add
sbb
or
add
and
or
arpl
or
insl
add
sub
addb
xor
add
xor
add
xor
add
das
addb
sub
add
jo
or
add
sbb
add
sbb
push
adc
add
or
add
or
add
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
add
adc
add
sbb
add
and
or
add
sub
jle,pn
push
xor
add
cmp
and
push
and
fisttps
and
and
jecxz
and
or
ds
sbb
rolb
xor
add
das
jg
or
jae
or
push
add
sbb
pop
adc
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
and
add
adc
inc
add
push
push
add
and
add
das
addb
xor
add
push
pop
in
sub
sbb
inc
xchg
jmp
inc
lahf
jmp
sahf
jmp
inc
xchg
jmp
inc
nop
lcall
cmp
jbe
adc
push
testb
cmp
add
xor
add
jge,pn
or
outsb
add
and
or
dec
add
push
add
or
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
adc
add
sbb
add
and
add
push
cmp
add
and
sub
push
sub
mov
adc
lods
pop
sbb
adc
xor
scas
jmp
inc
test
lcall
ss
sbb
cmp
sub
jmp
cmp
jmp
dec
mov
jmp
ss
pop
sub
sbb
loope
adc
add
xor
add
and
or
cmp
add
and
add
pop
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
sbb
add
and
add
push
cmp
add
and
or
xor
sbb
es
and
mov
jmp
test
sbb
call
sbb
call
sbb
decl
movlhps
or
push
decl
adc
call
push
notrack
sbb
sbb
pusha
jmp
inc
cmp
dec
popf
jmp
inc
scas
jmp
cmp
call
push
push
testb
xor
or
add
sbb
add
push
cmp
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
or
add
pop
add
sbb
add
and
or
xor
adc
fs
aaa
cltd
jmp
inc
cmpsl
jmp
xor
das
call
adc
decl
or
decl
push
decl
or
pop
lcall
push
pop
lcall
adc
push
decl
push
adc
call
adc
call
pop
pop
cmp
test
dec
pop
mov
sbb
test
push
es
incb
adc
xor
add
and
or
dec
add
adc
sub
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
adc
add
sbb
add
adc
dec
add
and
or
xor
pop
sub
stc
daa
inc
mov
sub
xor
sbb
xor
adc
or
or
decl
pop
add
pop
add
incl
add
sub
sub
decl
push
add
or
pop
decl
push
adc
or
adc
pop
mov
pushl
mov
call
sub
add
rolb
xor
add
and
or
inc
add
adc
add
sbb
add
or
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
add
adc
add
and
or
xor
sbb
mov
daa
push
mov
cmp
inc
pop
call
sub
or
adc
pop
push
push
incl
add
incl
add
incl
add
incl
add
lcall
sub
adc
pop
incl
mulps
add
incl
add
incl
add
decl
add
lcall
ds
jg
mov
clc
call
mov
sbb
scas
call
adc
mov
push
xor
or
push
add
pop
add
or
add
pop
adc
add
add
add
add
add
add
add
add
adc
add
pop
add
pop
inc
add
pop
push
add
insl
add
das
test
inc
mov
sub
sar
cs
cmpsb
incl
mov
lcall
and
xor
add
adc
add
add
add
or
add
push
call
push
test
cmp
stc
decl
xchg
in
decl
pushl
imul
or
incl
add
incl
sbb
pushf
jmp
lcall
test
sbb
and
add
xor
jl
or
add
sbb
push
adc
add
sbb
add
sldt
add
add
add
add
add
add
add
sbb
add
add
sbb
or
bound
push
sub
cmpsl
pop
xor
ljmp
jae
call
mov
call
add
pushl
or
incl
or
decl
aaa
pushf
pushl
xchg
out
pop
cld
jmp
lcall
decl
sti
call
lock
std
jp
decl
cli
ljmp
pop
incl
adc
incl
add
push
call
pushf
lcall
adc
movl
or
and
pop
pop
inc
add
or
add
pop
adc
add
add
add
add
pop
adc
add
sbb
add
pop
aas
add
pop
push
add
mov
sbb
fdivr
dec
lcall
mov
push
incl
add
incl
add
incl
dec
scas
decl
idiv
fs
stc
call
icebp
pushl
xchg
fdivrp
push
gs
dec
stos
ljmp
ljmp
xor
cmp
lcall
incl
or
incl
add
pushl
pop
xchg
jmp
lcall
cmp
repnz
xor
add
and
add
sbb
push
adc
add
and
add
add
pop
add
add
add
pop
adc
add
adc
add
sbb
or
popa
add
sub
mov
pop
xchg
outsb
fdivr
jle,pt
lcall
mov
incl
add
incl
add
incl
lahf
cmp
decl
stc
lcall
insb
out
add
incl
adc
or
jmp
adc
xor
pusha
incl
add
incl
add
lcall
popa
mov
incl
xor
incl
or
dec
nop
fdivr
mov
imul
or
dec
roll
rdmsr
mov
or
jo
or
push
add
push
add
or
add
adc
add
or
add
add
or
add
add
adc
dec
add
push
rdtsc
xchg
sbb
int
imul
cmp
pushl
cs
incl
add
incl
add
incl
jge,pn
and
cmp
stc
incl
incl
idiv
push
pop
scas
incl
push
sub
call
adc
incl
or
add
add
or
add
inc
add
decl
or
xchg
add
xchg
push
pop
pop
decl
adc
lcall
sar
jg
sbb
xor
repz
sub
pop
add
sbb
add
or
add
pop
adc
add
add
add
add
or
add
pop
add
pop
push
add
jno
adc
cltd
pop
sub
icebp
decl
into
incl
mov
cmpsb
mov
lcall
cmp
add
add
or
lcall
adc
push
incl
adc
incl
sbb
add
incl
and
pushf
jmp
cmp
idiv
add
pop
incl
add
incl
add
add
add
add
add
add
add
add
add
or
decl
pop
pop
decl
mov
or
sub
decl
push
stos
jmp
dec
stos
incl
wrmsr
xchg
or
push
or
add
adc
add
pop
add
add
add
add
sbb
add
sbb
or
pop
add
cmp
push
test
cmpsl
call
mov
call
adc
incl
add
decl
add
decl
decl
or
and
adc
sub
add
adc
add
push
incl
andnps
adc
xor
push
incl
add
decl
adc
and
ss
es
decb
or
incb
add
incl
add
pop
add
incl
add
add
ud0
ss
call
loopne
xor
sub
call
sub
add
xor
add
pop
push
add
pop
add
or
add
add
or
add
sbb
or
pop
add
sub
mov
xor
xor
loope
pop
xor
ljmp
sbb
incl
add
pushl
or
lcall
adc
incl
outsb
ret
movsb
hlt
call
inc
fwait
incl
or
ljmp
xor
int3
std
loopne
out
jecxz
icebp
mov
std
cmp
add
incl
add
incl
add
incl
pop
or
sbb
push
mov
ljmp
dec
test
hlt
add
xor
add
and
sbb
add
or
add
add
and
add
sbb
or
popa
add
das
jge
ucomiss
sub
call
pop
gs
jl
lret
inc
rcl
decl
or
adc
add
or
incl
pop
push
decl
das
xchg
inc
jp
jp
stc
call
jmp
mov
incl
add
lcall
into
xlat
std
call
fnclex
cmp
add
add
add
or
or
adc
lcall
sahf
jmp
jge
jmp
inc
mov
and
lahf
std
add
push
sub
pusha
add
sbb
push
adc
add
or
add
pop
adc
add
and
add
sbb
or
popa
add
das
jge
push
daa
mov
and
std
and
adc
outsb
lahf
int
leave
call
adc
sub
sbb
adc
decl
xor
ljmp
xchg
in
dec
incl
call
jmp
push
js
cmp
decl
xchg
std
mov
adc
add
add
add
or
lcall
xor
and
popa
jmp
sbb
add
addl
or
dec
add
adc
add
and
add
adc
add
push
add
sbb
or
pop
add
jnp,pn
push
xor
and
adc
push
test
jmp
and
decl
test
adc
mov
cmp
decl
sti
lcall
ja
push
jb,pn
dec
push
popa
pushl
test
pusha
test
in
in
out
hlt
xor
adc
add
add
adc
push
lcall
jne
call
and
and
pop
push
leave
add
das
addl
and
dec
add
adc
add
pop
adc
add
sbb
add
sbb
or
pop
add
js
sbb
stos
pop
pop
push
sti
and
sbb
cmp
jmp
incl
pop
decl
sbb
call
mov
lcall
call
call
pop
fdivr
add
dec
incl
add
incl
add
incl
or
ljmp
xor
call
pop
push
clc
hlt
in
out
icebp
pushl
aaa
pop
adc
or
adc
inc
lcall
bound
jmp
push
movsl
decl
push
das
test
or
dec
add
adc
add
pop
adc
add
add
or
add
pop
aas
add
pop
push
add
jae
sbb
lcall
test
lcall
das
insl
mov
pusha
outsl
incl
or
cmp
pushl
jae
call
lcall
std
lcall
jno
incl
adc
or
or
or
add
add
or
lret
sar
inc
lret
std
and
dec
sub
insl
incl
add
or
lcall
xor
inc
jmp
push
stos
decl
sbb
add
das
addb
and
dec
add
adc
add
and
add
adc
add
add
or
add
daa
add
push
cmp
or
insb
add
xor
or
daa
sbb
test
sbb
sub
lods
loope
jmp
movsl
incl
add
cmp
cmp
stos
lock
call
std
lcall
imul
call
push
and
sbb
sbb
adc
decl
or
call
pop
std
cmc
div
clc
cli
std
pop
pusha
jns
xor
jmp
dec
incl
add
decl
xor
es
call
pop
call
sub
daa
dec
stos
incl
adc
jg,pn
or
add
sbb
push
adc
add
and
add
adc
add
or
add
push
add
xor
add
and
das
jg
or
pop
sti
and
stos
decl
dec
incl
shr
incl
sbb
decl
or
pushl
dec
insb
ljmp
pop
mov
aas
mov
call
jmp
jl
ljmp
cmp
lcall
adc
adc
ud0
add
std
loope
in
std
ljmp
cld
sbb
sub
incw
add
add
sbb
inc
sar
or
lcall
jbe
and
sti
add
cmp
or
pop
add
sbb
add
or
add
push
adc
add
pop
add
pop
adc
add
push
add
sbb
or
pop
add
xor
and
push
push
incl
mov
fdivrp
decl
lods
incl
add
cmp
lcall
inc
test
lcall
jge
dec
loopne
jmp
aam
or
jne
push
adc
incl
push
or
or
adc
ds
imul
jg
jae
lahf
std
cmp
sub
sub
pop
adc
add
sbb
and
jmp
cmp
jmp
dec
mov
out
add
xor
jne
or
pop
add
pop
inc
add
or
add
adc
add
push
add
push
sldt
or
add
sub
push
adc
add
sbb
imul
or
mov
and
lcall
inc
jge
mov
stc
ljmp
jle
add
add
sbb
lcall
inc
lcall
out
call
jmp
std
pushl
cmpsb
out
call
push
inc
incl
adc
or
pop
decl
adc
call
sub
sub
pop
call
adc
incl
or
dec
dec
xchg
pushl
decl
out
call
and
sbb
stos
decl
adc
mov
or
insl
add
sbb
cmp
add
sub
add
sbb
add
add
add
or
add
adc
add
sbb
or
pop
add
xor
or
loope
push
mov
push
sub
incl
enter
jmp
sbb
add
and
xor
xor
xor
lret
mov
jmp
call
lcall
pop
mov
add
add
lcall
sub
incl
add
add
push
decl
test
fldz
out
call
call
adc
jmp
xor
mov
push
jle,pn
or
add
sbb
push
adc
add
and
add
push
add
add
add
add
add
add
add
push
adc
add
sbb
add
adc
push
add
imul
adc
scas
sbb
ret
lcall
dec
mov
imul
incl
inc
ja
add
adc
pop
sbb
inc
incl
sbb
add
mov
daa
sbb
push
in
lcall
jmp
push
sub
decl
or
incl
add
incl
add
pushl
imul
jmp
xor
jmp
push
ret
sbb
add
xor
add
and
pop
pop
inc
add
or
add
pop
adc
add
or
add
add
add
pop
add
add
push
add
and
add
sbb
or
pop
add
xor
and
daa
push
test
incl
inc
in
arpl
incl
add
decl
adc
insb
call
push
lods
lcall
pop
scas
incl
and
or
sbb
push
push
adc
push
add
incl
push
sbb
or
jle
ljmp
ljmp
inc
movsl
lcall
xor
lcall
das
jle
add
xor
add
das
addb
and
dec
add
adc
add
sub
add
sbb
add
sldt
add
add
add
add
add
add
push
adc
add
sbb
add
sub
push
adc
add
sbb
or
popa
add
xor
and
pop
mov
decl
scas
jmp
cmc
call
pop
jg
or
xor
incl
push
sub
add
incl
add
incl
add
add
adc
pop
push
cmp
push
dec
jle
movsl
int3
jmp
jmp
cld
pushl
loop
and
xchg
lcall
xor
jmp
dec
lods
decl
adc
popl
or
and
pop
sbb
add
or
add
or
add
add
add
add
add
add
add
pop
add
add
adc
add
push
add
push
cmp
add
and
jl
push
xor
sub
pushl
mov
decl
pop
outsl
call
mov
jmp
mov
ret
jne
mov
cmp
jle
sub
ljmp
dec
xchg
inc
jbe
pushl
leave
idiv
push
jmp
pop
mov
or
popa
lcall
cmp
jmp
push
mov
or
rdmsr
pushf
add
sub
arpl
or
dec
add
adc
add
sub
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
pop
inc
add
push
push
add
imul
push
xor
sub
incb
sar
daa
pop
test
or
dec
lcall
and
ljmp
sti
jmp
std
fcomi
call
idiv
dec
cld
dec
hlt
inc
decl
mov
and
adc
pop
ljmp
pop
lahf
pushl
jns
jmp
and
add
das
movsl
add
xor
or
push
or
push
add
push
aas
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
sbb
add
and
push
adc
add
sbb
or
push
add
push
add
xor
sbb
fwait
sar
cmp
jmp
push
jg
or
push
decl
dec
jg
push
jb
jmp
mov
pushl
lret
pop
movsb
lcall
xor
decl
adc
daa
pop
pushl
pop
xchg
incl
fdivr
cmp
jmp
inc
xchg
decl
push
dec
out
adc
add
xor
add
pop
push
add
sbb
push
adc
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
adc
add
sbb
add
add
adc
add
sbb
or
push
add
and
js
push
xor
or
dec
loope
pop
cmp
sar
and
cmp
push
sub
or
inc
decl
sbb
push
sbb
pop
lcall
cmp
sub
xorl
pushl
mov
xor
or
inc
fadds
adc
lahf
add
das
jg
or
outsb
add
and
or
inc
add
adc
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
adc
add
pop
inc
add
sbb
popa
add
das
addl
or
inc
out
inc
jl
sub
pushl
jge
pushl
or
xor
pushl
jp
cmp
inc
xchg
in
inc
loop
xor
dec
mov
cld
or
jecxz
adc
xor
add
imul
or
inc
add
adc
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
push
add
sbb
and
or
imul
push
xor
or
mov
adc
push
sbb
ljmp
jp
and
cld
and
cld
sbb
cmp
xor
adc
dec
in
sbb
add
cmp
or
sub
or
add
push
push
add
sbb
adc
add
sub
add
pop
add
or
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
adc
add
sbb
sbb
pop
add
push
or
xor
rdmsr
mov
or
xor
add
cmp
add
cmp
add
xor
add
das
xchg
or
sub
or
data16
and
or
add
pop
aas
add
adc
add
or
add
or
add
push
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
sbb
add
and
add
adc
add
pop
cmp
add
push
push
add
and
or
insl
add
sub
jl
push
jle,pn
push
jg,pn
push
jg,pn
or
sub
add
jb
or
insb
add
and
add
and
or
inc
add
adc
add
sbb
add
push
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sldt
or
add
and
add
adc
add
push
cmp
or
inc
add
sbb
push
push
add
and
or
pop
add
and
or
add
and
add
and
add
and
or
pop
add
and
or
dec
add
sbb
pop
adc
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
adc
add
pop
add
or
add
adc
add
adc
add
push
cmp
add
sbb
or
dec
add
sbb
or
dec
add
sbb
or
inc
add
sbb
pop
sbb
push
push
cmp
push
adc
add
movaps
add
and
add
sbb
add
push
add
push
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
or
add
and
add
and
add
adc
add
adc
add
adc
push
adc
push
adc
push
adc
add
adc
add
movaps
add
and
add
and
add
sbb
add
push
add
push
adc
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
adc
add
pop
add
or
add
or
add
and
add
and
add
and
add
and
add
and
add
pop
add
or
add
sbb
add
pop
add
pop
adc
add
adc
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
incl
add
add
add
add
add
aas
add
clc
add
add
sldt
lock
add
sldt
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
cld
add
add
sldt
incl
add
add
add
inc
add
add
add
jmp
add
add
add
clc
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
adc
add
sbb
add
sbb
add
pop
add
or
add
or
add
or
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
sbb
add
and
add
sub
add
adc
add
adc
cmp
push
adc
aaa
add
cvtpi2ps
add
and
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pop
adc
add
sbb
add
and
add
adc
inc
add
sbb
push
add
and
and
or
pop
add
and
or
push
add
sbb
pop
adc
add
and
add
sbb
add
sldt
add
add
add
add
add
add
add
add
add
add
or
add
push
add
and
add
push
cmp
add
and
or
imul
or
lea
cvtps2pi
add
sub
add
ja
or
imul
or
dec
add
adc
add
or
add
push
adc
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
add
adc
add
sbb
or
pop
add
sub
or
aaa
movsb
or
dec
les
sub
adc
xor
icebp
pop
xor
adc
pop
out
sbb
xor
add
sub
or
push
add
pop
aas
add
or
add
adc
add
or
add
add
add
add
add
add
add
pop
add
add
sbb
add
adc
push
add
push
or
cmp
fistpl
xor
jmp
cmp
lcall
xor
jmp
lahf
jmp
cwtl
lcall
xor
or
dec
filds
adc
cmpsb
add
ja
or
pop
add
pop
inc
add
or
add
add
push
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
and
or
jb
rdmsr
fwait
or
pop
xlat
sbb
ss
sbb
push
call
sbb
decl
adc
call
inc
lcall
imul
cmp
call
and
add
cmp
add
and
pop
aas
add
or
add
add
add
add
add
add
add
add
add
or
add
adc
add
and
push
adc
push
add
cmp
sub
jmp
cmp
and
decl
add
or
add
pop
add
incl
add
adc
adc
push
add
incl
add
decl
add
call
cmp
xchg
mov
call
sub
mov
or
pop
push
add
adc
add
and
add
adc
add
or
add
add
add
add
add
sbb
add
sbb
jo
adc
sbb
nop
clc
sub
mov
cmp
jmp
xor
unpcklps
incl
add
incl
add
incl
dec
cmp
sub
lcall
cmp
adc
pop
cmp
pushl
incl
mov
adc
jl
add
xor
add
outsb
add
sbb
add
or
add
add
add
add
add
add
add
pop
adc
add
daa
add
pop
inc
add
and
add
xchg
sbb
fcos
pop
insl
ljmp
or
call
add
xor
decl
idiv
push
in
call
mov
decl
hlt
jmp
dec
xchg
incl
add
decl
sub
jecxz
inc
push
lods
decl
and
add
and
pop
push
cmp
add
push
adc
add
push
add
add
add
or
add
sbb
ja
and
out
pop
nop
fdivr
push
lods
decl
adc
incl
add
incl
adc
pushl
test
jmp
cmp
movsl
lcall
cmp
decl
and
nop
jl
in
decl
add
jnp
lret
lcall
cmp
mov
or
sbb
adc
add
or
add
add
add
add
add
or
add
push
cmp
or
pop
add
xchg
cmc
pop
mov
sar
ds
pop
incl
add
incl
add
pop
and
sub
lock
pushf
out
jmp
push
incl
or
call
and
add
add
add
add
cmp
jbe
add
pop
decl
adc
fdivr
inc
jno
decl
or
and
push
adc
pop
add
add
or
add
sbb
or
mov
mov
incl
sbb
add
and
or
cmp
add
inc
incl
aaa
mov
xor
pop
incl
add
incl
add
incl
add
incl
add
incl
add
decl
adc
incl
add
pushl
push
scas
call
aad
sbb
adc
movsl
add
and
inc
add
adc
add
sub
or
inc
add
outsb
or
aas
shrl
mov
lcall
pop
sub
add
add
sbb
pop
call
or
decl
and
pop
addr16
sbb
sar
or
call
lcall
test
adc
add
add
add
xor
jmp
push
stos
decl
and
add
sub
or
dec
add
pop
adc
add
sldt
sub
or
dec
add
jno
adc
jmp
cmp
fcos
and
sbb
add
sbb
or
jae
das
add
pushl
cld
jmp
inc
push
push
or
cmpsb
lods
mov
jmp
or
incb
add
adc
inc
lcall
push
xchg
call
sub
add
sub
or
xor
add
pop
add
add
sub
or
dec
add
outsl
or
lcall
sub
ljmp
cmp
lcall
push
cltd
decl
cld
incl
incl
movsb
lcall
ja
push
jb
ljmp
jns
cld
std
clc
cli
pushl
add
call
push
dec
lcall
arpl
call
or
push
push
add
or
add
add
daa
add
sbb
or
push
pop
xor
pop
xor
call
push
pop
ljmp
sahf
in
pop
call
pop
mov
incl
add
decl
adc
lcall
arpl
push
repnz
cmp
or
and
push
or
jmp
inc
mov
call
xor
add
push
push
add
or
add
add
add
or
add
push
cmp
add
cs
jl
insb
xchg
mov
call
and
cmp
call
incl
out
incl
xor
or
or
adc
adc
mov
jmp
cmp
adc
movlps
sbb
xor
call
outsb
fildl
or
jle
or
xor
add
sbb
add
or
add
sbb
add
pop
push
add
inc
fcomps
ss
inc
jno
lcall
or
push
pushl
jns
call
call
cli
ljmp
mov
incl
das
das
cmpsl
lods
sar
shl
fwait
mov
push
incl
add
lcall
cmp
lcall
cmp
enter
je
or
dec
add
or
add
or
add
sub
or
dec
add
insl
add
cs
push
inc
mov
mov
cli
ljmp
cmpsb
incl
add
push
jmp
pop
mov
outsl
sar
mov
mov
call
incl
or
decl
and
and
pusha
sbb
push
lcall
sbb
call
or
incl
fdivr
push
sbb
lcall
cmp
std
add
or
imul
add
add
push
adc
add
add
add
and
push
adc
pop
add
dec
aad
inc
mov
call
clc
cmp
incl
nop
and
cmp
pushl
mov
lcall
decl
decl
sub
add
add
or
adc
incl
mov
jmp
incl
movsb
lcall
sub
add
sub
add
adc
and
add
add
add
add
or
add
sbb
or
imul
cmp
sbb
mov
jmp
lods
call
sbb
incl
add
incl
or
call
push
pushf
jmp
push
incl
add
incl
or
jnp
fdivrp
out
ljmp
lret
cmp
incl
or
jo
or
add
or
add
add
add
add
add
add
add
push
adc
add
pop
add
adc
add
jb
adc
sbb
xor
pop
fwait
incl
cltd
decl
ret
in
imul
dec
incl
xor
adc
inc
cmp
xchg
rcr
sar
pushl
pop
movsl
lcall
inc
fwait
jmp
push
push
xlat
add
and
push
push
cmp
add
and
add
adc
add
pop
add
add
add
add
add
add
add
pop
adc
add
push
cmp
or
pop
add
jbe
adc
stos
and
lock
lcall
cmp
pop
popf
lcall
jmp
inc
fcomip
ljmp
sar
ljmp
jmp
jmp
aaa
cmp
sub
call
es
loope
or
add
sbb
add
or
add
add
add
add
add
add
add
add
add
push
add
add
sbb
add
push
add
and
or
jae
or
sahf
push
cmp
test
and
cmp
jnp
inc
pop
jg
push
imul
lcall
cmp
ljmp
pop
pushf
cmp
ljmp
pop
mov
push
and
add
cs
add
sbb
add
adc
add
pop
add
push
adc
add
or
add
add
add
add
add
pop
add
add
sbb
add
push
cmp
add
sub
or
mov
adc
jno
and
pop
mov
jmp
push
cltd
ljmp
stos
pushl
mov
ss
ljmp
lods
call
ss
push
push
aas
mov
add
push
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
daa
add
adc
add
sbb
add
and
or
jae
or
mov
or
mov
sbb
adc
pop
fcoml
xor
pop
fmull
sbb
add
cmp
add
sub
or
pop
add
sbb
push
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
pop
inc
add
sbb
pop
add
push
or
jbe
or
addl
or
test
or
addb
sub
or
imul
and
or
aas
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
adc
add
push
cmp
add
sbb
push
add
and
or
pop
add
pop
push
add
sbb
inc
add
push
cmp
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
adc
add
adc
push
adc
add
adc
add
adc
add
cvtpi2ps
add
and
add
sbb
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
add
adc
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
pop
lock
pavgb
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incl
add
adc
add
and
add
add
and
add
add
add
add
add
add
or
add
and
add
sub
add
xor
add
sub
add
and
add
adc
add
or
add
add
add
add
add
push
add
pop
adc
add
sub
push
pop
inc
add
and
add
xor
add
xor
addl
push
pop
add
adc
and
add
add
add
add
add
add
add
pop
add
or
add
and
sbb
sub
pop
sub
negl
sub
sbb
ja
adc
fildl
or
xchg
add
sbb
add
and
add
or
add
add
add
add
add
adc
push
adc
add
sub
sub
outsb
decl
nop
or
push
call
sbb
decl
adc
pushl
jne
inc
pop
movsb
sti
add
aaa
lahf
add
push
inc
add
or
add
add
add
or
add
sub
pop
and
inc
nop
loop
pop
lods
lcall
adc
dec
pushl
mov
aaa
insb
mov
and
xchg
ds
fwait
icebp
add
sub
adc
add
add
push
add
adc
pusha
mov
pop
incl
add
pushl
cltd
in
sbb
imul
adc
sub
lcall
decl
and
add
or
add
pop
adc
add
rcrb
lret
cs
or
or
pop
sub
and
decl
insb
insb
push
push
push
incb
add
jmp
dec
xchg
lcall
dec
xchg
ljmp
or
add
pop
adc
pop
sbb
sbb
push
insb
stos
incl
push
jmp
arpl
cmp
jge
test
pushl
das
decl
push
push
lcall
nop
clc
add
addb
or
adc
push
push
inc
add
inc
mov
dec
popa
jbe
cmp
int
or
adc
arpl
ljmp
decb
adc
sbb
das
jg
add
daa
add
add
add
sub
jae
mov
cmp
mov
call
aas
incl
pop
xor
push
cmp
pushl
push
movsl
decl
and
out
or
add
or
add
add
add
sbb
add
dec
mov
jbe
lods
ljmp
xor
xchg
lcall
pop
mov
add
pop
incl
outsl
lcall
pop
mov
add
mov
push
adc
adc
add
add
sub
or
data16
pop
int3
inc
jb
ljmp
mov
jne
lahf
lcall
cwtl
pushl
mov
pushl
es
add
and
add
add
add
add
add
add
add
adc
add
pop
bound
and
sbb
in
xor
aas
imul
cmc
or
and
push
adc
add
adc
add
add
add
add
add
adc
add
pop
dec
add
and
add
ss
add
inc
cmpsb
add
or
sbb
add
or
add
add
add
add
add
or
add
sub
add
xor
add
cmp
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
xor
add
cmp
add
sub
xor
sub
xchg
ret
mov
in
inc
add
jno
xchg
int
xor
jb
leave
xchg
sub
mov
je
push
add
mov
andl
test
out
rorl
xchg
int3
int
adc
fnstsw
cmp
sub
into
jne
shll
inc
cwtl
pop
xchg
clc
cmp
mov
mov
sbb
loopne
adc
sahf
xchg
das
push
dec
push
loope
sahf
jae
stc
shrb
loopne
add
lds
fcmovnu
pop
mov
nop
daa
adc
out
xchg
pop
pusha
jge
mov
addr16
sub
adc
int3
sbb
inc
jns
jmp
les
or
fildl
mulb
addb
mov
dec
stos
push
nop
andl
cld
outsl
jge
mov
push
adc
clc
sbb
inc
push
inc
sti
jae
aas
push
aam
pop
test
movl
mov
push
mov
out
into
lahf
aad
sbb
push
jae
fsubr
lea
and
push
mov
movsl
or
out
pop
and
or
idivl
mov
sbbb
sub
cmpb
je
cwtl
shl
mov
lcall
pop
ja
int3
or
adc
mov
push
push
inc
add
push
out
sbb
arpl
cmp
sbb
push
pop
rorl
or
enter
ret
or
jg
sbb
aas
pop
repnz
scas
push
inc
mov
ss
ja
mov
push
mov
daa
fnstcw
mov
mov
in
ds
jmp
xor
mov
jbe
mull
test
cwtl
cs
les
jmp
or
cs
ja
sbb
rclb
mov
lock
das
punpcklbw
jno
xor
mov
or
shll
jg
inc
pop
xor
rcr
ret
test
push
pop
dec
add
sbb
ljmp
out
xor
cmp
nop
es
fnstcw
faddp
xchg
and
stos
movsb
mov
sbb
into
or
into
lcall
cmc
imul
mov
push
sbb
inc
ljmp
stos
xchg
push
aad
mov
dec
adc
pusha
lret
push
insl
xor
lcall
loopne
and
fcmovnu
fs
jp
stos
xlat
ja
scas
jmp
cmc
cmp
inc
jno
cld
stos
fwait
inc
pop
scas
mov
sti
movsb
movsl
cmpb
mov
mov
inc
and
sub
push
mov
roll
or
sti
mov
outsb
sbb
rorb
enter
inc
loopne
test
out
adc
jecxz
stos
xchg
adcb
les
ret
adc
xlat
xchg
xorl
push
mov
or
cmp
mov
ljmp
iret
dec
movsl
hlt
xlat
sub
lea
adc
cmc
sbb
or
fcomi
pop
das
inc
sbb
roll
mov
sbb
test
idivb
mov
popf
jge
nop
push
cld
cmp
inc
imul
xchg
popa
sub
cwtl
sti
nop
adc
lcall
push
stos
sub
mov
mov
push
scas
pop
outsb
cli
mov
xor
xchg
mov
testb
call
sbb
hlt
bound
fwait
or
call
repz
push
adc
cmp
mov
push
rorb
lods
mov
pop
fcoms
sub
push
pop
add
push
or
lods
daa
add
pushf
leave
pushf
rcl
push
sbb
mov
push
xchg
int3
fistl
inc
inc
test
push
cmp
push
mov
and
jg
flds
shll
xor
xchg
movsb
jl
movlps
pushf
rolb
nop
insl
add
add
xchg
arpl
and
das
cmc
sub
pop
es
jns
xor
das
fisttpll
add
mov
rorb
mov
push
cli
or
les
sti
arpl
adc
scas
jo
sub
mov
cmp
and
out
xchg
xor
scas
dec
dec
int
movsl
das
and
into
add
ds
jb
into
inc
cltd
jo
popw
sbb
in
xor
sub
repz
fadd
fmuls
std
xchg
and
in
jne
mov
out
jp
sahf
ljmp
lds
test
out
loop
fdivr
imul
in
jno
mov
test
or
insb
inc
cmpl
or
add
inc
arpl
out
xlat
subb
pop
and
fst
hlt
sbb
insl
push
mov
jae
sub
ljmp
mov
and
inc
inc
cli
add
cmp
pop
sbb
cmpsb
or
sbb
mov
cmp
or
imul
xlat
inc
jbe
arpl
fstps
xor
sub
popa
or
out
shll
test
lahf
push
sbb
lea
xchg
sub
mov
jmp
xor
into
std
dec
aaa
and
push
jecxz
stos
inc
adc
lret
jmp
mov
and
out
lods
nop
int3
dec
out
in
mov
jae
fsubrs
pop
dec
lcall
sbb
arpl
outsb
dec
sub
inc
shr
xchg
mov
push
inc
repnz
and
xchg
enter
jne
lret
and
fwait
jge
dec
lods
arpl
jmp
ret
adc
mov
icebp
cmp
int3
stos
xchg
sarb
sar
daa
divb
cld
xchg
cwtl
ja
pop
and
lret
fisttpll
out
ret
movsl
pop
cmp
in
test
sbb
ffree
cmc
dec
out
stos
mov
shrb
push
add
pop
in
xor
sub
mulb
push
scas
test
mov
loope
dec
fimuls
repnz
lret
sub
xor
push
in
lret
stc
sbb
loope
jl
xchg
xchg
pop
jg
jle
leave
mov
mov
adc
pop
popa
loopne
cmp
mov
dec
pop
and
mov
or
xchg
imul
inc
out
ja
sahf
mov
jecxz
flds
cmp
sbb
loop
in
lcall
cmp
cmp
and
and
push
mov
jnp
inc
push
jb
jecxz
lret
cmp
sub
pop
add
pop
pusha
lcall
ret
ljmp
xor
call
mov
mov
xchg
lret
dec
cmpsl
mov
mov
or
or
jo
mov
xchg
push
iret
rorb
shrb
ds
ss
inc
insb
dec
adc
mov
jle
loope
test
push
xchg
push
mov
loop
ss
pop
xor
arpl
push
sub
dec
mov
mov
mov
adc
push
lea
xchg
fstl
lret
push
rep
pop
nop
push
inc
mov
in
outsb
clc
xchg
xchg
jmp
mov
ret
dec
pop
mov
jp
xor
cwtl
std
bnd
es
call
es
jp
pop
jbe
dec
aad
dec
mov
out
notb
das
or
fbstp
fistpll
aam
mov
sbbb
mov
testb
adc
ret
add
adc
cmpl
lock
pusha
fildll
mov
das
clc
jne
nop
pop
inc
addb
add
cli
push
jae
mov
stc
cmp
xor
ret
jno
mov
movsl
shll
cmp
jmp
sbb
lea
xorl
mov
orl
bound
mov
out
inc
push
push
xor
add
out
mov
nop
in
int3
loopne
insl
jmp
mov
jbe
cmpsl
add
jge
xchg
mov
testb
mov
mov
sbb
int3
test
cmp
dec
scas
pusha
popa
push
adc
movsl
shrb
mov
fidivl
jbe
add
mov
push
xor
xor
pop
or
movsl
or
and
pop
mov
adc
into
cltd
mov
out
pop
iret
mov
sub
movsb
int
cmp
mov
push
mov
xchg
pop
dec
lret
mov
mull
sub
sbb
pop
aas
mov
xchg
inc
cmp
and
mov
int3
fcomps
sarl
in
pop
sarl
add
je
mov
mulb
das
dec
push
or
mov
mov
call
jbe
jp
mov
pop
jb
xlat
cmp
xchg
or
adc
aas
xchg
gs
and
lahf
pop
shrl
push
daa
ret
add
mov
xor
cmpsb
rep
out
loope
push
roll
jo
pop
jecxz
pop
xchg
data16
and
movsl
mov
adc
fnsave
lahf
je
sub
xlat
popf
ror
cs
decb
cmp
mov
mov
dec
push
jle
fdiv
jmp
mov
or
xor
dec
adc
aaa
rclb
inc
jg
sub
cmp
pushf
out
das
adc
mov
mov
mov
fcmovb
mov
je
cmp
mov
mov
idiv
test
andb
sbb
outsl
pop
push
jecxz
testb
sbb
lret
mov
lods
sub
add
xor
or
sub
hlt
jo
jg
xchg
out
jnp
cmc
xor
add
fs
fcmovnbe
xor
dec
imul
repz
pop
or
jp
add
out
mov
xchg
pop
jbe
lods
pop
xchg
xor
aaa
xchg
popa
data16
push
pop
out
int
pop
push
rorb
sahf
leave
repnz
xchg
les
lds
push
dec
pop
cmpsl
xchg
or
jg
leave
push
cmpb
push
push
sahf
mov
iret
fcoms
mov
cmp
sahf
outsl
test
icebp
adc
push
out
and
cmp
push
or
out
dec
lret
subb
jle
xlat
sbb
mov
dec
cmp
cwtl
hlt
cmpsb
vphsubdq
lcall
inc
dec
inc
sti
sbb
mov
push
popa
aas
in
outsb
je
push
in
std
inc
lcall
mov
push
addr16
subl
lock
ljmp
xchg
rcll
gs
jns
cmp
cld
cmp
stc
imull
into
mov
das
movsb
fwait
int
sbb
call
stc
mov
fists
imul
push
js
jno
pop
mov
pop
shl
testb
sarl
cmp
sub
xchg
insb
lds
mov
cmc
jo
into
xchg
fwait
sub
xchg
stos
lock
aaa
mov
fdivrs
mov
movsl
push
pop
mov
arpl
add
or
sub
dec
jb
leave
pop
insb
and
call
popf
adc
dec
xchg
mov
icebp
or
sti
repnz
cwtl
dec
shrb
push
cli
fildl
xchg
pop
cmp
lock
and
push
rcll
aaa
hlt
test
adc
and
pop
or
push
addr16
in
sub
mov
mov
or
in
xor
cs
pop
fdivr
jmp
push
xlat
cmp
xchg
cmp
sti
mov
xchg
fwait
mov
es
mov
stos
pop
dec
icebp
iret
daa
in
ljmp
incb
arpl
fwait
push
add
xor
outsb
mov
shlb
inc
cmp
xchg
gs
cwtl
dec
cmpsb
fistps
and
pop
movsb
test
push
inc
les
add
jle
jg
sub
mov
call
gs
inc
enter
or
inc
mov
repz
mov
mov
mov
sbb
xor
mov
lahf
jmp
pop
mov
loopne
pop
xchg
out
out
roll
dec
sub
jle
jge
inc
adc
daa
mov
test
iret
xchg
add
pop
xor
pop
jae
rcll
add
mov
lret
icebp
ficompl
inc
jno
cmp
adc
or
mov
ret
xchg
shrl
sub
pop
mov
dec
loope
push
sbb
lods
movsb
and
sub
out
or
fbld
jp
jl
mov
lahf
inc
rcl
mov
test
bound
pop
sarb
mov
xchg
insl
repnz
shr
mov
jmp
pop
js
inc
pop
out
in
lret
addr16
mov
sbb
push
outsl
loop
pop
in
mov
push
sub
add
sub
fdivrs
or
nop
push
xor
xor
jl
push
sub
nop
jp
std
dec
js
sbb
jbe
aaa
popa
and
ljmp
push
xchg
sahf
push
add
add
or
mov
sbb
daa
jmp
sti
sbb
bound
enter
mov
and
cmp
daa
mov
xor
xor
jns
imul
sti
add
inc
or
mov
add
fldenv
inc
dec
adc
fidivl
les
loope
mov
loope
add
jge
lods
lds
jl
pusha
or
rclb
push
outsb
pop
dec
push
jno
cmc
inc
enter
jno
xor
arpl
mov
ficompl
pushf
in
outsl
lret
sbb
push
mov
in
mov
mov
push
push
mov
pusha
or
movsl
jb
repnz
dec
enter
xchg
test
push
push
xor
je
lret
loopne
sub
jb
mov
jno
in
leavew
push
cld
mov
insb
add
in
xor
ss
es
xchg
sbb
out
nop
repz
jo
sbb
xor
call
cmc
jecxz
dec
mov
imul
sbb
cmp
dec
push
test
repnz
divb
add
xor
add
popf
jmp
scas
dec
lret
aas
sub
scas
mov
in
sbb
sub
lock
jo
add
sub
data16
jle
jno
and
jg
xchg
pop
outsl
cmpsl
rorb
cltd
jns
shl
shrb
add
movsl
inc
sbb
aad
ret
aas
adc
push
stos
fsqrt
sti
jmp
mov
negl
inc
das
jge
add
adc
inc
ljmp
add
icebp
cmpsl
jo
pop
imul
scas
push
out
insl
mov
das
fs
and
and
mov
push
cmp
cmp
push
es
cwtl
mov
push
mov
sbb
mov
inc
movsl
cmpsb
or
mov
jae
pop
lods
sub
sbb
sti
jbe
fwait
test
scas
lock
and
rcll
shrl
sbb
movsl
insb
popf
jb
push
fwait
mov
sub
fcmovnbe
daa
js
outsl
pop
jb
dec
cmpsb
pusha
ret
pushf
loope
in
stc
jnp
jae
push
loopne
add
add
cs
leave
jge
bswap
lret
sarl
mov
lret
icebp
push
mov
or
and
sub
call
arpl
and
sbb
push
inc
adc
ret
lock
push
sbb
mov
jo
aad
push
push
fs
repz
sub
gs
sub
inc
in
adc
xor
or
pop
loop
sub
fldt
pop
dec
mov
aaa
jne
jb
mov
out
lea
iret
cltd
mov
push
int
adc
and
jnp
inc
cmp
test
imul
mov
adc
outsb
push
cmpsb
sbb
jle
clc
mov
xor
mov
mov
enter
cmp
inc
leave
ja
dec
ss
loope
test
sarb
xor
cld
cmp
lret
or
jmp
aaa
jo
fstps
push
xlat
fiadds
aas
js
sbb
rcrl
xorb
pinsrw
dec
jg
push
mov
push
sub
popa
cmpsl
push
aam
pushf
push
dec
xor
jmp
mov
or
pop
icebp
xchg
dec
repnz
iret
dec
pop
dec
cmp
test
push
out
xor
cmp
xor
push
pop
arpl
push
inc
cli
adc
xchg
cmp
sti
mov
mov
test
scas
xchg
sub
stos
hlt
mov
cmpsl
jecxz
mov
fiaddl
punpcklbw
push
xchg
sarl
dec
test
mov
mov
addb
mov
repz
pop
inc
psrlq
lods
jp
fstps
push
or
dec
bound
dec
scas
or
and
pop
jle
shlb
jecxz,pn
sbb
fs
out
movsl
xor
in
dec
jbe
and
mov
xor
cli
xor
test
inc
test
and
imul
inc
push
in
mov
lahf
out
lcall
push
cmpsl
xchg
lea
sub
test
pop
xchg
int3
jl
fstps
or
imul
int3
sub
pushf
sub
or
sbb
or
sbb
inc
or
rolb
ja
or
ds
and
enter
jp
adc
mov
in
xor
aam
iret
mov
mov
jg
adc
jne
out
cmc
lods
or
js
xlat
pushf
cmp
adc
xor
js
jg
push
cmp
loopne
xchg
pop
add
into
mov
loop
inc
adc
sbb
sub
outsb
outsl
loop
ja
adcl
xchg
bound
inc
sub
inc
test
sbb
lea
mov
xchg
xchg
nop
and
adc
pushl
push
push
fs
mov
adc
mov
cmp
mov
in
mov
dec
cli
lea
out
fs
jmp
fs
in
pop
movsb
nop
jns
enter
arpl
and
xchg
or
fcmovne
into
iret
lods
mov
ss
xor
call
aam
cmpsl
aam
insl
fnstcw
test
adc
pop
xchg
cmpsl
inc
stos
inc
inc
lea
sub
sub
xorl
sbb
pop
sbb
sub
jae
sub
mov
fdivs
ret
jg
movsb
fnsave
pop
pop
outsb
scas
into
js
push
pop
mov
sub
lock
adc
adc
cmc
sub
mov
movsl
cmpsl
mov
dec
scas
loope
mov
les
mov
icebp
xchg
rcrw
inc
mov
mov
jge
sbb
sbb
adc
out
pop
or
mov
sbb
clc
pop
stos
imulb
call
push
cmp
xor
mov
lahf
cld
dec
jmp
mov
pop
ficoml
sahf
popf
aaa
cmp
inc
xchg
and
jl
sbb
push
repz
cmc
out
and
jge
dec
cmp
sub
test
mov
inc
xchg
xchg
mov
xor
incb
addr16
cmpsl
mov
test
sub
mov
jmp
xchg
add
sbb
cmpl
dec
lcall
add
xchg
sub
jmp
mov
dec
in
or
xchg
push
ret
mov
iret
pop
cmp
jns
push
mov
pop
stc
stos
xlat
xchg
add
stos
test
subb
mov
aas
call
repnz
xlat
rdtsc
push
jg
inc
and
loope
roll
jl
jns
and
jbe
fidivrs
dec
mov
mov
xor
cmp
dec
adc
dec
inc
test
jp
push
mov
jae
jle
cmp
lret
lea
pusha
ret
cmpsl
mov
scas
cmp
dec
push
lock
mov
lahf
sbb
xchg
clc
andb
stos
xchg
in
push
pop
loop
xchg
jno
imul
xchg
imul
xchg
mov
test
in
pop
jae
adc
dec
pusha
jge
adc
fld
rorl
iret
rolb
jecxz
adc
or
outsb
ljmp
or
sbb
stos
cs
xchg
cltd
hlt
popf
lea
dec
mov
mov
push
jge
iret
int
mov
les
mov
sub
dec
outsb
lods
nop
adc
and
sbb
sub
xor
jecxz
add
jle
mov
inc
pop
mov
nop
imul
inc
xor
mov
imulb
push
sub
rorl
sahf
dec
imul
ja
or
popa
pxor
int
fisttpll
stos
jno
dec
loop
std
mov
mov
fwait
mov
pop
movsb
sub
aaa
clc
mov
and
ret
stc
clc
xchg
outsl
repnz
pop
leave
outsb
pusha
jns
mov
out
test
cli
aam
mov
int3
mov
div
push
fstpt
pop
pop
fisubs
xchg
adc
cwtl
push
es
sbb
xor
xchg
sub
daa
mov
bnd
mov
bound
popa
loopne
daa
jecxz
push
xlat
adc
fs
scas
push
add
inc
or
ficoms
mov
pop
push
insl
inc
les
adc
mov
mov
ret
fimull
jmp
js
das
fsubrp
sub
repnz
sub
pop
test
adc
pushf
les
or
xchg
mov
xor
int3
lds
ror
sub
movsb
mov
mov
sahf
fistpll
scas
push
mulb
inc
and
lcall
xor
mov
orb
mov
pop
xchg
arpl
es
insl
jbe
lods
inc
xor
es
clc
fistpll
inc
mov
test
outsb
inc
bound
out
push
mov
and
lahf
leave
daa
outsb
dec
insb
aam
mov
push
andl
mov
xchg
xor
jl
sahf
xchg
gs
std
adc
lahf
sub
mov
cld
xchg
lods
mov
add
push
fs
sbb
aad
sbb
movsb
sbb
mov
mov
xchg
pop
xor
shll
lahf
jb
mov
lret
push
dec
push
repnz
call
das
ret
cs
sub
stc
enter
push
pop
add
dec
adc
pusha
pop
inc
popf
dec
sub
sahf
out
fs
mov
stos
jle
jno
mov
lods
mov
add
cmp
cld
lods
imul
or
xchg
push
loopne
xorl
jae
inc
notl
mov
out
adc
inc
mov
xor
repz
imul
stos
pushf
or
mov
or
ret
pop
cmpsl
adc
jp
je
cli
adc
sti
push
icebp
repnz
or
aaa
inc
popf
fstpt
test
fldt
mov
sub
insl
jle
adc
fildl
mov
push
inc
or
clc
cmp
pop
xchg
cld
mov
stc
mov
xchg
aaa
in
jne
fadd
arpl
test
xchg
or
sub
repz
xchg
int
adc
push
mov
adc
or
fs
mov
dec
sub
mov
mov
into
sub
scas
pop
pop
lahf
leave
ljmp
aaa
lret
scas
call
icebp
iret
and
outsb
and
in
nop
pmullw
fildl
inc
arpl
icebp
test
lahf
das
add
sbb
pop
leave
jge
pop
in
fisttpl
adc
test
mov
push
and
push
imul
xchg
ret
add
flds
or
adc
cli
sbb
xlat
mov
push
xchg
adc
leave
je
lock
fdivr
and
jnp
leave
lret
xorb
ljmp
and
int
out
mov
popa
xchg
lods
test
mov
push
jo
jnp
dec
rcrl
or
lea
cmp
mov
pushf
repnz
loopne
shl
data16
dec
lods
mov
arpl
push
jno
insb
xor
out
sub
adc
pop
pminub
jne
addl
imul
je
enter
and
clc
into
loop
xchg
popa
loop
add
les
adc
rcrl
enter
adc
es
imul
push
cmpsl
andl
sbb
mulb
fnstcw
jo
push
test
sbb
xchg
stos
bound
ljmp
xchg
insb
pop
int3
insl
jne
push
push
inc
lretw
repz
mov
lcall
mov
push
andl
insb
push
subl
mov
or
mov
push
lods
insb
fstl
jnp
inc
ss
daa
ds
mov
fstpt
pop
ret
lret
pop
mov
cs
int3
cltd
sahf
lods
jle
cld
add
xor
mov
ja
cmp
mov
dec
mov
clc
iret
lret
or
pop
inc
or
pop
pop
push
and
scas
inc
push
sarl
sub
std
pop
jecxz
mov
jbe
out
test
pop
movsb
imul
add
dec
jge
xchg
enter
sub
cmpb
push
cli
push
pop
mov
mov
fisttpll
loope
sti
fisttpl
or
fistpll
lret
fisubrs
dec
lcall
xor
add
into
xor
popf
mov
cmc
rclb
cwtl
dec
fdivrp
sub
popa
hlt
pop
xchg
push
jb
push
lods
sahf
add
mov
jl,pn
push
imul
adc
daa
xchg
repnz
arpl
dec
jmp
out
jp
pop
scas
adc
insl
lahf
test
add
popa
inc
in
pop
loopne
in
lahf
outsb
bound
mov
psadbw
xchg
xchg
mov
test
movsb
and
les
test
sbb
jno
scas
aad
jne
insb
sbb
out
cli
fwait
sbbb
loop
jne
inc
mov
cld
pop
hlt
push
nop
and
xchg
mov
enter
jns
cmp
jb
cmp
cmp
mov
xor
cmp
push
insb
dec
popa
push
sbb
jle
idiv
xchg
push
dec
andb
data16
jmp
dec
enter
jns
daa
jns
shll
adc
movsl
int3
dec
lea
pop
out
or
mov
sub
es
addb
lcall
jl
pop
orb
cmp
xchg
loop
fwait
lds
std
dec
lret
xchg
repnz
jl
jmp
dec
sbbb
pop
jne
loop
pop
fidivs
adc
repnz
je
mov
dec
mov
lret
mov
mov
popa
push
push
insl
sbb
sbb
jg
sbb
mov
out
ljmp
push
fdivs
bound
dec
pop
mov
shlb
jae
ret
outsl
les
cltd
test
in
les
xchg
jo
mov
cld
jb
or
sbb
insb
cld
lea
test
or
or
sbb
rcl
je
test
mov
jg
or
das
add
out
adc
sbb
faddp
sbb
sub
in
rorl
stos
xlat
loope
pop
rolb
cmp
xchg
push
adc
xchg
and
cmc
sub
mov
imul
pop
adc
es
enter
repz
xchg
and
mov
xchg
inc
add
pop
cli
rclb
sahf
cmp
pop
sub
pop
dec
frstor
je
ret
mov
push
cld
arpl
add
adc
inc
push
stos
mov
xor
movsb
jnp
sub
rorl
add
dec
adcb
mov
add
mov
and
sbb
add
dec
push
fsubrs
push
and
mov
lret
mov
ja
jl
xchg
rclb
push
test
dec
cs
imul
pop
or
xor
in
popf
ja
mov
push
mov
into
mov
ret
mov
testb
jnp
shrl
push
push
or
inc
movsl
in
sbb
mov
jae
mov
shl
lods
pop
pop
xor
lods
repz
iret
sub
pop
mov
cmp
jmp
add
or
mov
rorl
pop
and
push
xor
sbbl
push
shl
xor
rcrb
cltd
mov
aad
mov
mov
dec
daa
jmp
mull
xchg
lock
dec
mov
mov
pop
into
mov
inc
ret
pop
aad
rcll
movsb
mov
enter
cld
fstps
inc
scas
add
sti
push
inc
cmp
and
sbb
xchg
xor
pushf
mov
push
mov
inc
jle
hlt
cld
mov
and
test
add
jo
pop
jae
xor
jbe
push
sbb
dec
xor
xor
in
lods
cmp
push
push
pop
out
subl
xlat
pop
out
sbb
std
xchg
dec
cwtl
dec
mull
ljmp
mov
push
push
push
outsb
shlb
leave
sub
mov
fsubrs
adc
ret
cmp
push
mov
add
outsl
xchg
in
repnz
push
in
mov
arpl
pop
enter
sti
iret
lret
jnp
inc
pop
imul
inc
mov
test
cmp
add
jbe
mov
push
cmp
ljmp
imul
icebp
enter
repz
fnsave
mov
addr16
push
sbb
in
push
inc
icebp
addr16
arpl
test
int
imulb
push
adc
test
pop
ss
dec
pop
roll
lods
xchg
adc
cmp
aad
inc
mov
shrl
arpl
aaa
rclb
je
icebp
fists
int
and
inc
test
addr16
in
aad
lcall
into
cmp
or
cltd
aam
int3
inc
mov
mov
jbe
ret
rclb
add
lods
lock
mov
xchg
pop
jb
das
adc
lret
xchg
faddl
xorps
sbb
mov
jge
or
sbbl
xor
ret
addl
jmp
lret
sub
pop
push
es
js
inc
daa
sbb
pushf
leave
mov
fdivr
push
jmp
sbb
add
sahf
mov
add
stos
mov
mov
sub
scas
test
xchg
ret
xchg
in
fisubrl
cmp
lret
or
and
xor
dec
pop
vunpcklps
and
insl
add
sbb
xchg
pop
int3
lcall
dec
insl
addr16
add
leave
cmp
into
adc
or
mov
out
jnp
bound
cmp
decb
pop
std
test
or
mov
es
arpl
lret
pop
inc
pop
mov
movsl
clc
test
mov
jne
scas
out
jb
jge
sbb
or
push
mov
jb
fisubl
sub
pop
cs
repnz
xor
lea
sub
ficompl
xchg
fs
push
hlt
shlb
jge
dec
stos
idivl
idivl
jb
movzbl
sbb
clc
ficoms
into
cmp
fwait
shl
nop
mov
jno
sub
or
xor
je
data16
inc
jno
adc
push
mov
lret
cltd
orb
mov
insl
add
xlat
dec
or
movsb
fcoms
mov
je
stc
xchg
xchg
cmp
outsl
cmp
mov
pop
xchg
jg
test
pop
adc
push
xchg
jmp
jo
mov
pop
adc
mov
add
pop
lret
sbb
push
lret
mul
std
aad
je
arpl
mov
rcrl
dec
aaa
lahf
idivl
popa
cwtl
and
jg
iret
jmp
sbb
das
and
loope
int
imull
add
or
mov
dec
xchg
pop
cmp
mov
fcmovbe
mov
je
sub
sbb
gs
lret
mov
pop
daa
push
stc
cmpsb
sbb
pop
jge
mov
cmpsl
cs
mov
inc
shll
decl
or
in
int
testl
cmc
mov
bound
adc
cmp
adc
xchg
cmp
sub
sub
test
add
jo
and
lahf
adc
test
icebp
xor
dec
sahf
enter
jae
pop
outsb
xchg
pop
cmpl
fisubrl
fildl
push
mov
mov
pop
bound
add
imul
cmp
push
js
pop
aam
mov
lods
loopne
dec
ror
xchg
cli
inc
or
ret
sarl
sbb
inc
test
push
mov
data16
inc
push
push
mov
jno
xchg
insb
icebp
ja
xor
mov
lods
daa
xchg
cmc
mov
int
sbb
iret
adc
xchg
cmp
jp
xor
scas
mov
push
lahf
xlat
dec
sub
scas
or
jge
repz
cmp
cmp
jl
hlt
or
jl
pop
sarl
sbb
movsl
data16
lods
cmp
push
cld
jecxz
pushf
push
xchg
movsl
jo
mov
push
in
mov
imulb
dec
shll
pop
push
push
sbb
push
adc
and
push
xchg
dec
pop
jmp
cmp
arpl
mov
insb
xor
xchg
rorl
adc
rcll
push
jmp
lcall
das
popf
out
mov
sbbb
inc
test
jne
or
cmpsl
stc
cli
ror
loope
stos
push
loop
mov
sahf
push
or
mov
icebp
aas
aaa
iret
add
add
sbb
mov
dec
insl
shrl
into
push
push
sahf
int3
xlat
mov
add
test
lods
cmp
lea
pop
jle
xchg
push
adc
dec
shrb
in
aas
loop
sbb
jb
adc
in
loope
mov
into
push
subl
cmc
adc
repnz
call
scas
shlb
pop
inc
loope
sbb
push
inc
popf
shll
cmp
mov
xor
xchg
mov
inc
jp
jg
xorl
inc
pop
pop
mov
xchg
ret
sbb
int
pop
dec
scas
jge
adc
cltd
pop
sub
imul
adc
inc
push
fdivrs
or
lcall
jle
cld
in
xchg
push
push
jmp
out
xor
in
xchg
ds
jl
ja
mov
es
movsl
daa
rcrl
adc
gs
call
mov
stc
int
jmp
jo
push
mov
jecxz
sub
push
mov
pop
jge
xchg
outsb
fmul
and
mov
in
xor
xor
cmp
lret
dec
mov
push
pop
data16
xor
rclb
addr16
out
mov
fildl
repz
xchg
jmp
insl
cwtl
mov
push
aas
or
mov
mov
push
push
pop
mov
adc
dec
push
ja
aas
loop
add
mov
popa
fmull
xchg
jnp
and
daa
cwtl
bswap
sbb
sbb
imul
inc
cmp
fs
mov
repz
bswap
pop
scas
mov
cmpsl
cmp
jmp
push
ret
js
pusha
add
ror
mov
and
xchg
addr16
adc
sahf
stos
mov
or
pushf
and
rcrb
and
int
and
bound
pop
ja
or
pop
scas
das
das
and
xlat
dec
shrd
lret
mov
sub
cmpsl
jb
inc
or
or
ret
mov
and
dec
xchg
adc
in
mov
fsubs
aas
xor
test
cmp
push
imul
cmpsb
pmaddwd
sbb
cli
rcrb
inc
pushf
mov
push
mov
roll
sbb
insb
int
adc
std
add
fcomps
mov
or
xchg
lods
sub
addb
xchg
cmp
loop
js
cmpl
cmp
cmp
and
and
aad
cmpsl
mov
test
lods
mov
mov
cmp
mov
aad
fsubr
cld
negl
jp
ljmp
pop
inc
xchg
or
pop
mov
jo
ret
inc
jo
rolb
mov
adc
xor
cmp
and
aaa
fnstcw
sbbb
gs
andb
pop
mov
jo
fwait
mov
xchg
xchg
and
cwtl
out
jmp
nop
fldt
mov
push
adc
inc
cmpsb
pop
lea
or
add
icebp
push
jp
xorb
subl
push
insb
push
stos
mov
scas
daa
stos
adc
rorb
pop
mov
jne
subb
sbb
test
stc
cmp
or
lods
insl
mov
mov
das
fstpl
rcll
pop
das
stos
dec
mov
xor
add
pop
inc
push
and
out
mulps
clc
mov
xchg
call
fbstp
jecxz
sbb
jecxz
out
mov
dec
pop
cmc
mov
push
cs
push
stc
adc
icebp
hlt
imul
imul
dec
pop
adc
mov
fwait
addr16
and
cmp
insl
fstpt
sub
ret
mov
sub
out
xchg
popf
or
xor
jmp
sbb
xchg
adc
and
jae
push
jecxz
pop
stos
das
add
add
mov
lods
in
nop
xchg
push
lcall
loop
cmp
inc
pop
pop
inc
push
pushf
test
xchg
rcrl
mov
sbb
sbb
add
mov
cli
sbb
test
mov
out
out
fwait
aas
mov
pop
jo
jecxz
xchg
xabort
repnz
push
inc
test
in
lret
xor
or
pop
lcall
mov
jae
fidivs
cli
mov
cmp
sbb
mov
jae
mov
xchg
xchg
mov
test
sub
and
sbb
add
jmp
adc
or
jmp
adc
out
jle
addl
add
les
pushf
fldt
add
xchg
xchg
jno
es
mov
imul
inc
sbb
dec
mov
cli
je
jg
icebp
jbe
pop
push
loop
insb
pop
jbe
jmp
int
clc
mov
lret
mov
adc
xchg
sbb
cmc
pop
sahf
dec
and
mov
ljmp
addr16
dec
imul
lock
iret
aaa
imull
sbb
test
and
arpl
mov
adcb
dec
sbb
and
mov
pop
popf
outsb
loope
add
sbb
pop
pop
fs
adc
add
push
arpl
xor
xchg
fwait
adc
out
and
mov
push
ss
lods
movb
cmp
jb
cmpsb
cmpsl
in
push
and
notb
fwait
into
movsb
fs
stc
inc
int3
ss
cwtl
and
rorl
xor
iret
jns
jb
pop
cs
fisttpl
jge
cmpsl
dec
icebp
subl
sbb
jmp
mov
and
xlat
or
dec
xchg
mov
xchg
je
mov
aam
cmp
hlt
dec
adc
imul
dec
cli
shl
inc
adc
xchg
mov
test
pop
xchg
pop
inc
out
push
push
mov
cmp
xor
je
sbb
repnz
subl
daa
sub
mov
dec
sub
mov
loop
loop
ret
popa
and
gs
movsb
shll
inc
mov
xchg
jbe
inc
or
pop
xor
out
sarl
bnd
fwait
cmp
add
adc
dec
into
jge
mov
int
mov
in
add
sbb
cmp
aad
xchg
xchg
adc
out
daa
std
int
out
dec
clc
xchg
idivl
enter
test
push
xor
push
adc
stos
push
test
loope
dec
inc
popa
pushf
fsubrp
xor
in
xchg
sub
mov
leave
ja
in
fdivrs
jb
nop
push
sub
and
jo
mov
je
data16
cmpsl
jns
pop
hlt
jmp
aas
xor
push
pop
fimull
in
mov
fwait
shrb
cld
arpl
xchg
mov
sarl
xor
ret
jns
rolb
rolb
in
iret
lret
xchg
cmp
sbb
dec
xchg
jns
pop
mov
imul
jnp
inc
xchg
jmp
sbb
sub
stc
push
inc
or
fistl
ret
mov
adcb
xor
and
rcrb
cwtl
repz
mov
nop
cmpsb
cmpsl
sub
je
cwtl
and
or
add
cmp
aam
ss
xchg
inc
lret
xchg
aaa
fdivl
sbb
sub
das
sbb
inc
mov
adc
dec
inc
std
fildl
push
fcmovne
sub
scas
push
inc
call
inc
mov
mov
push
movsb
xor
movaps
pop
inc
repz
jl
inc
popf
loope
mov
scas
lods
mull
pop
fistpl
cmp
bound
into
aad
sub
into
sarb
push
fwait
xchg
sub
xor
xor
sub
jo
cmp
push
jne,pt
popa
jo
push
mov
imulb
inc
insb
daa
pop
mov
lods
gs
outsb
fucomip
inc
daa
dec
scas
mov
or
movsb
and
daa
pop
insb
pop
adc
sbb
divl
lods
sarb
mov
or
jnp
das
dec
jle
and
push
add
add
mov
xchg
xor
orl
pop
jle
daa
jnp
and
xor
shlb
fcompl
sub
adc
frstor
mov
jmp
add
mov
mov
cmp
sti
cmp
and
xor
jecxz
sti
rcll
push
or
imul
inc
rcrl
fst
lods
lcall
ds
adc
lods
sbbl
test
push
xchg
std
push
lds
cmpsl
and
fstl
loop
jl
call
cmp
pop
cmp
inc
lods
sbb
ljmp
dec
test
std
icebp
imul
rcrl
divl
pmuludq
js
scas
arpl
in
sub
sub
popf
sbb
cmp
movsl
gs
mov
loopne
jg
mov
pop
test
mov
ds
or
adc
in
push
lea
and
cmp
cmc
cmc
repz
jbe
out
pop
add
jno
lahf
mov
fidivs
and
movsb
mov
aaa
scas
xchg
sbb
aam
adc
in
out
add
aaa
or
or
les
shlb
and
mov
mov
dec
mov
pop
fwait
gs
mov
mov
fisubrs
lea
dec
fiaddl
mov
idivl
jp
sub
xchg
ficompl
outsb
jmp
pop
jle
je
and
je
mov
mov
lahf
cmc
aad
addr16
inc
jbe
in
in
mov
xor
cmc
mov
or
fistl
push
scas
sub
and
dec
mov
or
xchg
xchg
mov
leave
mov
and
rcll
jb
mov
mov
jo
cmp
cmp
inc
jbe
xchg
xchg
jg
jecxz
push
mov
cld
push
pmulhw
rorb
push
out
jns
xor
xor
dec
enter
pop
push
pop
test
jo
mov
in
mov
mov
popf
inc
sub
or
mov
inc
lds
mov
and
std
test
mov
ljmp
jmp
das
jecxz
sub
cmpb
pop
fcmovu
leave
add
imul
pushf
lea
sub
aaa
ljmp
in
aaa
mov
jg
xor
add
fidivl
sbb
cld
sti
flds
mov
pop
mov
pop
loop
je
lret
sbb
pop
inc
sub
xchg
ljmp
pop
or
out
mov
push
clc
js
nop
shrl
pop
lds
stc
cltd
cwtl
les
or
es
add
loopne
test
ficoml
mov
sbb
mov
idivb
shll
movsb
outsl
loopne
mov
dec
sub
pop
rcll
adc
sbb
subl
repz
ret
adc
je
push
jmp
rorb
cs
test
sbb
in
cmp
test
dec
repz
and
ret
call
jmp
mov
adc
repnz
xchg
xor
ret
rorl
cs
sub
cli
lret
push
addr16
lret
in
cmp
add
push
rorb
cs
adc
cltd
sub
leave
pop
sub
xor
xchg
push
mov
jb
add
out
sbb
mov
and
jge
mov
or
mov
push
pop
sub
idiv
pop
mov
mov
aaa
stc
cld
fisttpll
shll
stos
lods
clc
jmp
jmp
sub
out
out
pop
sahf
pop
dec
mov
in
scas
add
mov
dec
or
dec
mov
ret
scas
or
mov
es
mulb
ds
fwait
stc
pop
popf
ret
mov
jo
sub
mov
std
mov
mov
sbb
jge
mov
xchg
inc
lods
inc
mov
shrb
movntps
adc
lods
lret
test
jne
pop
test
lds
adc
add
inc
mov
mov
scas
jge
shrl
inc
pop
inc
push
xor
lods
sbb
inc
stos
in
xor
test
dec
clc
aad
xor
lret
push
cwtl
mov
aaa
adc
dec
xchg
in
jno
push
xchg
shl
inc
fsubr
cli
pushaw
inc
mov
cmpsl
jbe
add
orl
js
jns
pop
xchg
in
or
push
cmpsl
cltd
test
enter
les
rcll
aas
leave
aas
jecxz
dec
addr16
sub
insb
lahf
ss
gs
inc
mov
das
fsubs
mov
dec
fldt
fcomps
pop
stos
lods
mov
es
xchg
pop
mov
jne
nop
push
stc
loope
repnz
insb
aas
mov
rorb
xor
add
in
movsb
xor
mov
push
push
xor
outsb
sbb
out
sbb
mov
stos
inc
in
or
test
ret
mov
dec
cld
lea
add
nop
inc
cmpsb
repnz
cmp
jmp
lock
popa
ret
mov
cmpsl
stc
ficompl
pushf
outsl
fwait
pop
inc
sbb
sbb
test
cmpsb
hlt
mov
xchg
push
js
out
add
mov
mov
pop
loope
push
das
mov
cmp
mov
sbb
mov
outsb
rcll
lea
insl
out
add
cmp
dec
fwait
lods
sbb
in
dec
cld
loop
mov
scas
and
cmp
push
addr16
nop
aaa
mov
xchg
sahf
sbb
bound
pop
jge
mov
and
xlat
adc
pop
jg
sub
xchg
fldt
imul
sub
jecxz
faddl
es
or
imul
or
outsb
mov
pop
adc
add
sti
cld
pop
and
mov
push
and
sbbb
loope
xor
cwtl
out
pop
sub
fmuls
fdiv
stc
je
test
mov
mov
pushf
icebp
rcr
and
je
or
call
imul
ljmp
jo
jo
cmp
mov
icebp
gs
mov
cmpsl
sub
mov
push
cmp
mov
mov
sub
adcb
adc
bnd
mov
test
cltd
sub
popf
cwtl
outsb
shr
movsb
dec
jg
lret
push
dec
hlt
push
cli
dec
mov
es
xchg
shrb
mov
movsl
cmp
decb
push
in
cmpl
mov
cs
stos
pop
popf
out
scas
fldz
sub
call
insl
and
adc
or
not
lods
pop
dec
aas
mov
cmpsb
pop
adc
mov
cmp
add
mov
pushf
lea
aad
pop
out
xorb
imul
jne
cmpsl
mov
insl
push
sbb
jg
mov
adc
sbb
and
xor
fwait
cmp
or
and
cli
pop
push
push
das
xchg
jmp
scas
mov
cmpsl
repz
and
pop
into
fdivl
dec
sbb
mov
pop
dec
int
pop
mov
das
enter
lea
mov
imul
faddp
dec
add
lret
fdivr
daa
shlb
sub
jne
enter
les
or
ret
mov
faddl
aaa
icebp
pop
jp
repnz
jp
addb
sbb
push
jle
mov
push
xor
rorb
imull
in
loopne
pushf
jbe
mov
jno
adc
inc
repnz
addr16
addr16
lret
inc
adc
pop
js
cmc
gs
stos
xchg
test
mov
jle
mov
cltd
nop
lret
mov
cmp
gs
jb
adc
cmovo
dec
sub
pop
cmp
lods
mov
test
cmp
inc
das
push
add
or
sub
std
insl
push
lea
and
sbb
popa
lret
mov
xchg
xchg
icebp
cmpsl
call
repnz
repnz
stos
fnstcw
sub
xchg
push
inc
adc
lretw
fs
mov
es
xor
ds
jae
stc
fsub
lds
data16
lods
pop
inc
pop
inc
pop
sub
cmp
lcall
mov
cli
xlat
ss
ljmp
pop
mov
mov
xchg
adc
xchg
enterw
divl
aas
push
es
add
xor
adcb
xchg
or
mov
dec
push
jae
xchg
cld
mov
and
outsl
pop
fiaddl
testl
push
add
jg
xchg
les
pop
adcb
ss
cmc
insl
add
sub
push
jmp
mov
orb
add
sub
jne
inc
ljmp
xor
jge
or
push
into
jbe
iret
fidivrl
lahf
jo
ljmp
imul
push
lea
lods
jne
mov
hlt
xchg
test
or
sub
daa
lods
add
push
and
dec
jecxz
enter
add
lret
xor
and
cmp
add
addr16
cmpsl
int
sbb
lock
and
movsb
jge
sbb
test
push
xchg
cli
push
pop
lcall
dec
lds
push
mov
or
cmpsb
and
adc
cmp
bound
fisubrl
lods
mov
push
fs
mov
mov
shrl
mov
orb
ljmp
xor
adc
mov
and
rcr
out
sbb
jne
jmp
or
loopne
and
and
aam
jb
rcrb
push
mov
dec
ret
adcb
add
jge
repnz
cmp
cmp
pushf
in
subl
xchg
sbb
pop
or
push
sti
fcmove
pop
cmpsb
jmp
and
repnz
jmp
imul
and
loope
adc
mov
cld
cmp
jl
or
lret
bound
xchg
popf
bound
sub
cli
insb
rclb
sbb
add
add
sub
inc
rclb
mov
rol
mov
js
xchg
js
les
or
in
mov
inc
imul
aaa
ret
mov
push
jge
in
lea
push
xchg
dec
lcall
jb
loop
pop
and
mov
mov
xchg
outsb
daa
pop
lcall
ret
in
stos
mov
imul
pop
inc
hlt
cmp
stos
pop
pop
orb
adcl
into
or
mov
lcall
adc
jg
fsubs
sbb
xor
sbb
cli
shrl
xchg
bts
into
cltd
pusha
stos
cmp
lahf
jecxz
shll
add
outsb
in
aaa
addb
push
cs
arpl
push
mov
and
loop
push
push
sbb
hlt
ret
jmp
in
fs
dec
mov
jp
jecxz
or
xor
pop
cmp
into
int3
xor
xchg
dec
push
imul
mov
aad
push
in
mov
outsb
and
cld
aad
idiv
aaa
sub
aas
push
dec
mov
mov
sub
jp
imul
push
lock
pusha
xor
lock
aas
stos
sbb
in
and
push
xchg
ljmp
cmp
idivb
in
push
insl
scas
push
fucomip
mov
adc
daa
inc
xchg
lods
or
push
lret
add
pop
xchg
fimull
outsl
fidivl
cwtl
lret
addb
jns
rcrl
pushf
add
push
inc
mov
jecxz
and
dec
jl
jb
add
push
lock
js
test
test
cli
jo
jge
loopne
push
imul
xchg
out
xor
mov
jbe
dec
in
xchg
jecxz
or
xchg
jecxz
sbb
pop
xor
ficoml
mov
into
sub
ja
ljmp
cmp
jno
out
or
jne
cli
jno
sub
adc
or
add
mov
sbb
orb
sub
mov
push
dec
jl
dec
pop
jb
push
mov
outsb
out
addr16
sub
out
stos
push
sahf
cmp
sbb
loope
sub
or
fistpl
out
int
jmp
push
mov
dec
scas
push
inc
xchg
or
lahf
lcall
insb
push
nop
stc
mov
jbe
xlat
xchg
xchg
es
into
and
sbb
and
in
push
in
cmp
insb
inc
cmp
int
mov
pop
mov
mov
frstor
mov
adc
aad
xchg
test
enter
aas
push
push
sahf
aam
fldt
xor
mov
jae
add
cli
inc
push
popf
out
jo
ds
or
xlat
push
jne
and
xchg
xchg
insb
cmp
mov
pop
jb
mov
push
pop
lret
and
mov
inc
jb
lret
test
inc
pop
push
push
or
adc
nop
mov
or
jne
xchg
sub
jmp
ds
mov
inc
cltd
dec
into
push
insl
inc
mov
or
scas
sahf
and
leave
cmc
ljmp
dec
jge
jno
sub
push
int
fiaddl
jno
mov
mov
fimuls
xchg
mov
add
dec
mov
adc
rclb
and
adc
mov
pop
movsb
mov
repnz
ljmp
mov
jmp
sub
sar
mov
dec
fisttpl
xorl
adc
cmp
xchg
dec
pop
js
call
roll
lret
sub
out
leave
jmp
cmp
repnz
in
dec
fistps
or
xor
int
icebp
pusha
add
rcl
add
cmp
outsb
jns
stos
dec
mov
inc
ret
pop
pop
mov
mov
mov
pop
lgs
ret
pop
into
and
incl
mov
iret
or
mov
inc
ror
mov
les
sub
dec
or
and
insl
lods
lods
notl
pop
xchg
mov
add
mov
loop
imul
adc
cwtl
dec
dec
pop
movsb
mov
xchg
cmp
dec
jecxz
or
pop
std
mov
jmp
jp
hlt
and
mov
lods
xchg
ljmp
mov
or
mov
cmp
sbb
sahf
nop
or
or
icebp
ss
push
push
es
mov
and
jns
je
movsb
cmc
add
adc
fdivrl
test
cwtl
outsb
xchg
lahf
or
jne
sbb
xor
push
enter
pop
sbb
xor
xor
push
xor
aad
and
cmc
testb
sub
out
insl
cs
xchg
and
into
incb
sub
and
imul
idiv
mov
xchg
aam
add
ljmp
stos
add
lods
movsl
adc
cmpsb
lret
cmpsb
sbb
movaps
sbb
mov
pop
sub
cmpb
push
loop
sbb
fsincos
js
mov
pop
sbb
lahf
pop
inc
cmp
aaa
mov
ja
negb
sbb
sbb
cmp
mov
out
mov
loop
sbb
xor
jp
jmp
cmc
push
add
push
mov
cmpsb
subb
jns
std
xlat
mov
push
pop
inc
lahf
sahf
cli
inc
pushf
mov
and
xor
or
out
and
push
daa
in
xchg
and
push
cltd
outsb
sahf
lock
mov
inc
mov
outsl
out
pop
pop
cmp
loope
lret
and
rorl
popf
shrb
add
pop
ja
xlat
or
xor
jb
sub
and
and
mov
cmp
out
xchg
call
or
sti
sbb
jae
stos
pusha
popf
popa
sbb
jp
sbb
in
fs
push
out
push
push
cli
add
xchg
xor
shr
add
aad
push
sarl
adc
xchg
jae
pop
fisubrl
adc
xor
rep
pop
fisubs
bound
fimull
sbb
imul
pop
sub
fsubrp
mov
cmp
pushf
push
maxps
out
arpl
ljmp
pop
sub
cmp
or
nop
push
in
sub
pushf
data16
mov
cmp
mov
cmpb
mov
aaa
add
mov
movsl
mov
jb
imul
sbb
lret
mov
jmpw
daa
mov
loop
mov
xor
sub
and
jecxz
inc
sbb
or
mull
outsl
pop
cs
pop
jg
test
mov
xchg
sub
clc
bound
xor
jl
sbb
xor
sub
fsubr
es
mov
std
push
push
aas
inc
add
mov
test
stos
lret
and
or
mov
push
jae
jnp
mov
ret
ja
and
icebp
cmp
mov
cmp
push
pop
sbbb
ss
repz
sub
fs
pop
sti
jno
pop
out
sbb
mov
mov
fmull
negl
sbb
pusha
xor
in
or
aas
mov
into
rcl
loop
dec
cmp
xor
sti
es
add
or
gs
mov
sahf
arpl
dec
mov
adc
add
adc
out
xchg
push
cmpsl
xchg
mov
repz
lcall
mov
add
insb
fwait
shlb
enter
pop
jo
mov
js
or
jg
mov
or
cmp
dec
sahf
push
test
in
sbb
dec
sub
mov
pop
or
add
decb
call
lock
rclb
jbe
adc
lods
adc
dec
fs
xchg
push
dec
int
fwait
cmpl
paddusb
int
pop
arpl
adc
out
out
dec
dec
inc
into
xchg
mov
jmp
jge
push
or
aam
cli
fisttpl
xor
pop
push
sbb
rolb
fwait
push
or
xorl
dec
dec
mov
mov
mov
lahf
dec
outsl
xchg
daa
frstor
lahf
cmpsl
push
or
shll
test
cmpsb
arpl
mov
or
lahf
pop
xchg
push
add
pop
ljmp
ja
sub
pusha
adc
call
cmp
enter
icebp
notb
clc
loopne
sub
or
out
dec
ret
aam
or
xchg
lods
push
push
adc
dec
ror
ret
pop
lahf
xor
leave
xchg
add
ret
aas
jl
sbb
je
mov
push
je
into
add
add
pop
mov
xor
mov
ja
cmp
and
jno
sub
out
pusha
push
mov
dec
iret
enter
mov
out
clc
outsl
jnp
movlps
pop
loop
xor
lcall
lcall
fadds
add
inc
iret
fidivs
imul
push
and
jp
shll
cs
jmp
push
iret
bnd
arpl
sub
mov
out
pop
sbb
xchg
popa
inc
addr16
jbe
mov
roll
pop
sbb
xchg
ret
iret
push
test
pop
je
xchg
adc
jo
pushf
jmp
push
sbb
inc
push
ljmp
loope
mov
push
or
lds
cmc
jbe
push
adc
pop
pop
sub
xor
cmp
or
xchg
jge
fsubl
addr16
stc
push
add
cmc
add
cwtl
add
fdiv
js
xor
std
mov
mov
leave
cmp
xor
mov
sub
pushf
add
mov
jae
int3
pushf
adc
mov
lods
pop
in
arpl
pop
cmp
test
roll
sti
aad
ss
loop
les
adc
sbb
and
dec
xor
jecxz
xor
ds
mov
fbstp
jbe
push
sbb
cltd
xchg
sub
push
dec
xchg
inc
jno
in
dec
repz
and
xchg
imul
lods
int3
sub
xorl
xor
pushf
in
roll
je
add
stos
out
adc
movsb
mov
or
adc
mov
push
mov
push
push
mov
loop
lret
aam
dec
mov
jae
mov
test
cld
add
sbb
stos
in
jp
xlat
xchg
fdivl
stc
ds
push
jg
sub
jbe
adc
aam
cmp
lcall
andl
pusha
cmp
lcall
sbb
sub
cmp
int3
pop
lods
cmp
xchg
jecxz
jns
out
and
daa
hlt
push
inc
mov
test
js
lods
iret
inc
adc
cmp
jnp
pop
mov
xchg
sti
loope
inc
shrb
gs
xchg
clc
pop
mov
add
push
mov
mov
cmpsw
dec
stos
cltd
mov
push
test
and
rcl
sahf
imul
stos
xor
inc
sbb
xor
ds
xchg
mov
ret
prefetchwt1
adc
and
das
and
out
push
loop
jae
repz
aas
shl
cmp
add
add
ret
jae
cli
out
sub
xchg
push
and
pop
inc
ret
mov
leave
mov
sub
outsb
sub
cld
pop
ds
and
aad
mov
fmull
sbb
cmp
lcall
nop
inc
pop
push
test
jl
add
movsb
icebp
pop
and
or
mov
sbbl
mov
orl
divb
push
xchg
xor
psrad
rcr
adc
sarb
mov
add
clc
sub
jbe
aam
jp
cmp
jae
fdivs
je
lret
push
pusha
fs
and
ret
push
jl
fldt
cld
lds
push
jb
xchg
stc
mov
mov
push
decl
loopne
inc
fsubl
sti
or
repnz
fstl
lahf
ss
mov
fcomip
insb
dec
rcll
pop
sub
cltd
es
and
push
cmp
cmp
cmp
mov
pop
fdivrs
push
cwtl
loopne
cld
jae
rolb
les
cmp
ljmp
xor
xlat
sub
xchg
mov
mov
cmpsl
add
sbb
push
xor
mov
mov
inc
sub
out
xor
push
sub
mov
mov
cmpb
jnp
call
dec
cmc
mov
lahf
daa
mov
cmp
jg
imul
and
jne
xchg
dec
push
cmp
int3
cmpsb
jg
movsb
ds
imul
in
notb
adc
dec
cli
arpl
in
sbb
out
xchg
lock
js
gs
or
sbb
jmp
lret
push
lcall
in
mov
aam
in
mov
mov
cwtl
ret
add
cld
and
hlt
cmp
repnz
push
cli
adc
jnp
inc
clc
iret
xor
sub
xchg
dec
inc
fs
dec
xor
inc
sahf
mov
outsl
ror
xchg
push
xor
das
ja
outsl
imul
xchg
and
test
daa
xor
mov
inc
enter
pop
mov
lock
xor
mov
jge
test
lods
sbb
data16
pusha
mov
dec
je
jns
cld
divl
inc
data16
cmp
lahf
stos
test
incl
sti
mov
testb
pushf
sub
mov
adc
jge
push
mov
or
mov
push
dec
loop
gs
insb
pop
dec
pop
mov
mov
daa
add
xchg
fsubl
xchg
jecxz
js
jp
mov
and
lds
pushf
sbb
js
out
lea
cmpsb
cwtl
cltd
sbb
insl
vmovhpd
dec
mov
outsl
ljmp
ror
mov
sub
in
mov
imul
je
adc
mov
add
mov
pop
inc
je
dec
mov
cwtl
les
dec
lea
lds
lea
jb
loope
test
stos
popa
daa
sub
dec
ss
out
repz
out
gs
sbbl
xchg
mov
lods
push
sbb
fdivrl
aam
mov
pop
cli
mov
mov
xchg
jmp
in
jbe
inc
es
mov
mov
enter
in
mov
test
fstpt
aad
pop
lahf
add
push
cmp
xchg
push
shll
pop
xor
add
cmp
das
inc
insl
jg
jg
pusha
adc
mov
xchg
int
pop
aad
dec
rcr
cmp
add
rclb
xor
mov
lds
aaa
pushf
xor
in
jge
add
mov
mov
setnp
cmp
fwait
in
adc
mov
mov
jns
addl
and
subb
ja
lea
fcmovbe
push
pop
cmp
dec
pop
and
insl
or
jecxz
rcr
dec
push
xchg
rorb
in
movsl
mov
jecxz
dec
out
test
adc
lret
add
xlat
je
pop
test
inc
shlb
clc
cs
pop
push
les
mov
mov
outsl
add
jle
mov
loop
add
cmpsb
aam
lods
pushf
xchg
cmp
call
test
jae
fldcw
test
xor
pop
or
hlt
repz
sub
xchg
mov
sub
xchg
insb
add
jge
outsb
jmp
push
orb
insb
fcmovu
icebp
mov
loop
jge
imul
mov
out
mov
fcmovb
and
sbb
int3
or
pop
sbb
sbb
fstps
inc
dec
inc
pop
ret
out
imul
push
bound
es
js
adc
cwtl
or
jne
xor
shlb
sahf
pop
xchg
jae
pop
mov
pushf
shrl
aad
push
sbb
xchg
cmpsb
bnd
hlt
rcll
int
pop
ljmp
out
dec
cs
cmp
negl
sbb
mov
mov
cli
sahf
jg
push
cmpb
xchg
rol
push
inc
sub
mov
pop
aam
js
pop
stos
mov
mov
test
cmp
xor
test
mov
mov
lods
decb
xchg
add
fsubrl
push
sub
jg
mov
mov
test
jmp
pop
mov
pop
loope
xchg
scas
cmp
adc
mov
inc
push
out
outsl
mov
cmp
nop
xlat
imulb
mov
sub
movsl
pop
xor
testl
sbb
push
mov
insb
scas
sub
enter
clc
fadd
outsb
loope
push
mov
or
add
int
xchg
cli
and
mov
lret
cmp
loope
movsl
sub
shll
in
jns
pop
aad
jle
stos
mov
xchg
and
sti
xchg
jmp
sbb
enter
cli
testl
dec
mov
enter
mov
jne
sbb
pop
add
or
mov
push
push
xchg
sbb
sbb
push
int3
repz
lock
sbb
mov
sahf
out
xchg
push
sub
mov
pop
mov
sbb
sub
mov
call
addr16
fidivrs
push
lods
hlt
lock
mov
mov
rorb
ss
enter
mov
jnp
ja
push
add
xchg
pop
repz
mov
out
inc
outsl
imul
rcrb
ds
xor
dec
jmp
push
aam
jg
hlt
or
es
loope
cmp
jge
add
mov
ljmp
lahf
cs
addr16
test
cmp
sbb
out
sbb
cli
mov
int3
in
adc
xor
push
fs
in
out
push
mov
icebp
inc
xchg
cs
imul
add
add
or
sub
fdivrl
pusha
lock
mov
xchg
mov
inc
mov
mov
jecxz
jp
mov
lret
xchg
bound
mov
std
xor
fcoml
shlb
xchg
sbb
sbb
mov
insb
mov
in
pop
jb
or
push
mov
dec
jg
mov
adc
mov
cmc
in
inc
sbb
cmpsb
sub
int
adc
jns
ljmp
sarb
cli
push
cmpsl
push
neg
repnz
push
mov
mov
sti
pop
jo
jbe
lcall
test
pusha
loopne
mov
in
inc
rcrl
mov
les
addr16
mov
lock
mov
pop
out
mov
xchg
adc
push
fcmovnbe
push
std
push
imul
sbb
xchg
call
adc
sub
pop
and
pop
dec
in
dec
mov
lock
and
sbb
adc
mov
push
call
mov
xchg
sub
call
mov
add
sbb
cmp
push
imul
pop
fistl
testb
xor
or
jg
out
fdivl
lods
add
and
mov
pop
shl
xchg
push
and
add
into
shrl
add
aas
xor
fisttpll
pop
jp
dec
cltd
sub
mov
loopne
in
gs
jp
fdivrs
sub
sbb
jge
cmpsl
dec
cmc
push
icebp
in
fwait
stos
sahf
popa
loopne
add
pop
int3
adc
push
test
sbb
add
cmp
mov
les
and
xor
cmp
mov
pop
mov
sar
dec
stc
fisttpll
outsl
insb
scas
out
sub
add
mov
aad
test
inc
or
test
mov
sahf
cmp
pop
push
inc
gs
fs
popf
pushf
mov
dec
loope
out
or
ds
test
lahf
or
imul
xchg
int3
ret
outsb
and
ret
or
mov
test
rclb
cwtl
dec
orl
aaa
test
dec
dec
lahf
insl
ja
mov
lea
stos
mov
sti
ja
sbb
cmpsl
cs
fadd
adc
lahf
xor
in
in
pop
mov
mov
pop
inc
loopne
loope
push
mov
bound
adc
pusha
push
out
or
in
mov
test
loopne
mov
adc
outsl
push
push
stos
sbb
adc
lret
call
push
xlat
fsubs
aad
jno
jle
nop
outsl
sub
pop
mov
lods
popa
pop
xor
xchg
mov
cmp
repnz
roll
pop
sbb
dec
mov
ficoms
inc
lds
fisttpl
jmp
negl
popa
aad
cmc
inc
mov
xchg
adc
sbb
pop
sbb
mov
roll
sbb
movsl
repnz
mov
inc
add
in
mov
mov
jne
pop
cwtl
push
pop
adc
scas
nop
test
pop
add
mov
repz
pop
iret
adc
sbb
fsubrl
xchg
cs
dec
mov
sub
cmp
loope
xchg
clc
repnz
in
dec
aam
rcl
cmp
stos
pop
ret
sub
out
dec
in
adc
icebp
xchg
out
push
pushf
cwtl
dec
xchg
stos
add
jecxz
int3
mov
adc
sub
outsb
push
mov
mov
popf
fdivl
mov
out
mov
int
mov
cwtl
jecxz
mov
das
pusha
and
imul
pop
pusha
clc
inc
inc
mov
flds
mov
lds
rolb
mov
fisubrl
xchg
xchg
jne
inc
cmp
bound
xor
fimuls
movsb
rorb
push
or
dec
jae
mov
jns
mov
push
dec
push
dec
shr
xor
insl
or
cmp
ret
dec
mov
lock
shll
and
out
fldcw
pop
popf
jle
add
mov
call
and
jae
fwait
or
daa
in
pop
inc
in
ficomps
js
sbb
mov
xor
jno
mov
dec
cmp
enter
jnp
cli
neg
addr16
notl
std
mov
push
sti
mov
stc
or
cmp
test
cltd
and
fistl
and
inc
dec
xor
or
adc
inc
cltd
jle
pop
fsubp
adc
or
in
sbb
mov
mov
adcb
iret
jg
es
push
inc
xchg
imul
orb
pop
cmp
hlt
jecxz
loop
in
clc
ret
das
test
pop
or
fisttpl
movsb
mov
pop
adc
repnz
push
cmp
sbb
add
insl
push
dec
add
testl
adc
stos
shll
cmp
loop
push
testb
push
push
stos
ret
push
fcompl
lss
inc
mov
addb
pop
inc
mov
cmp
dec
addb
fld
hlt
iret
mov
pop
xchg
imul
jecxz
addr16
cmp
in
cmpsb
mov
pop
inc
dec
aam
je
mul
mov
push
or
mov
ds
cmc
mov
loopne
int3
cld
mov
inc
mov
mov
js
aad
xchg
sub
outsl
xchg
je
dec
or
pop
imul
mov
xchg
insb
test
jno
sbb
ret
add
pop
pop
pop
pop
sbb
cld
int3
sub
push
test
std
clc
dec
sbb
dec
sti
push
inc
add
int
xor
cmp
loop
dec
stc
fsubs
cmp
imul
pop
inc
xor
jl
mov
bound
leave
ret
jmp
call
push
test
inc
popf
xchg
aam
cmpsl
movsl
push
xor
out
clc
sahf
cmp
or
inc
test
repnz
cmp
imul
loope
es
ss
or
xor
adc
jnp
cltd
jb
test
xchg
dec
xchg
sti
cmp
fisubl
xor
call
add
inc
push
push
xchg
add
fisubl
stc
or
mov
sub
dec
fidivrl
pop
fidivrl
sbb
pop
sahf
inc
sub
xor
icebp
arpl
loop
in
mov
adc
aas
jmp
hlt
jge
cmp
mov
xchg
repnz
insl
mov
mov
std
mov
mov
adc
js
pop
xchg
js
pop
in
lea
xlat
std
cwtl
lcall
sub
nop
pop
mov
push
mov
fwait
mov
dec
testl
outsl
cmpsl
xchg
lds
bound
and
push
ret
dec
jns
push
aaa
cmpsl
mov
xor
sbbb
subb
push
loopne
or
test
sar
test
push
es
ret
test
loop
add
lahf
mov
in
fsub
xchg
movsl
jge
insl
ret
sub
scas
out
test
lods
fcmove
mov
repz
push
pop
out
fs
insl
mov
dec
push
rclb
jnp
cmpsb
rorl
rclb
jno
mov
mov
jmp
and
xlat
stos
repnz
cmp
pop
adc
dec
dec
dec
in
jo
movups
inc
adc
add
mov
lods
or
cmp
stos
xlat
sbb
xchg
nop
fiaddl
mov
mov
imul
pop
cmp
mov
add
adc
mov
sarl
mov
xchg
push
in
movsb
dec
imulb
jns
add
cs
stc
adc
push
mov
notl
lahf
dec
xchg
rcl
out
mov
lock
dec
gs
sbb
lret
jo
or
clc
lods
adc
stc
push
add
pop
popf
mov
xchg
sbb
jbe
inc
xor
or
aaa
inc
add
or
imul
add
and
xchg
lods
loope
enter
rorl
jge
imul
movsl
ss
outsb
mov
jb
roll
dec
xor
dec
ds
lds
sub
out
sar
dec
mov
mov
test
and
aaa
cmp
mov
icebp
pop
shll
idiv
js
sub
sbb
push
movzwl
add
adc
cmp
push
push
lahf
dec
push
pop
stc
out
je
pop
js
lock
lds
lods
jl
int3
jno
nop
xor
mov
ss
std
daa
xchg
push
repz
das
cmc
sbb
rcr
hlt
xchg
cmp
add
les
dec
jae
jno
int
repz
mov
pushf
insb
or
xor
xor
pop
lret
in
mov
sub
adc
imul
mov
das
out
pop
lcall
cmp
loop
pop
mov
push
outsl
mov
xchg
mov
fwait
lahf
add
mov
xchg
jecxz
out
and
jno
ljmp
ja
xchg
mov
arpl
inc
and
aad
sub
jecxz
and
pop
lss
int3
mov
insl
shll
xchg
pusha
out
lds
enter
stc
shlb
data16
loope
or
loopne
jns
test
movsl
lods
mov
mov
aas
jge
and
mov
xchg
or
je
pop
pop
jmp
push
fwait
jae
mov
loope
pop
fiaddl
sub
push
mov
stos
in
fisttpll
lcall
repz
lods
and
xor
pop
cmp
cwtl
jae
jg
sub
xor
fadds
sbb
popa
xlat
mov
inc
outsl
pop
mov
push
in
jge
gs
xor
data16
mov
es
nop
int
sub
dec
inc
pop
enter
inc
fwait
lret
dec
arpl
outsb
insb
fcoml
jbe
and
add
cltd
test
or
leave
pop
xchg
xor
inc
lret
mov
mov
dec
push
jnp
add
sub
test
and
pop
out
jbe
mov
cld
jecxz
jns
cwtl
adc
iret
js
sub
pushf
mov
or
int3
aaa
js
push
mov
jecxz
or
mov
add
xor
test
add
lea
add
sbb
fstps
pop
mov
rol
or
cli
insl
mov
pop
adc
xchg
ljmp
outsl
lret
rcll
pop
es
dec
push
push
push
movsb
xchg
push
jb
lret
xchg
dec
jb
icebp
ss
out
adc
negb
ret
ss
xor
test
push
mov
xchg
ret
sahf
dec
rclb
insb
cmp
dec
dec
negl
std
es
xchg
sahf
insb
or
loopne
xor
aaa
sub
or
add
mov
adc
cmc
mov
or
mov
gs
iret
add
in
inc
adc
sub
into
dec
and
xor
nop
xlat
inc
mov
stos
insb
mov
repnz
adc
mov
sub
stos
inc
add
add
xchg
fisttps
jae
test
scas
mov
insb
lcall
ja
push
mov
add
in
jnp
test
out
cmp
sub
and
dec
sbb
sti
mov
repnz
cli
enter
push
ljmp
or
shr
add
popf
pop
inc
xchg
repz
mov
inc
mov
mov
mov
es
push
sub
scas
xchg
ja
cmp
xchg
mov
popa
movsb
hlt
inc
jmp
out
mov
std
jne
xor
idivl
out
into
testl
mov
aaa
sub
push
dec
jns
es
xlat
ja
fisubrs
or
int3
dec
into
outsl
sbb
sbb
push
cmp
sbb
xchg
fmulp
and
test
ret
dec
ret
in
les
movl
loop
in
dec
fstl
ss
adc
cmp
cmp
addr16
push
into
int
int3
mov
enter
pop
xchg
jg
gs
add
stos
es
sbb
mov
cmpsl
pusha
sgdtl
rcll
add
test
lock
xor
leave
push
mov
or
push
add
stos
or
dec
xchg
or
jns
fwait
pop
imul
pusha
push
pop
stos
aas
lcall
jbe
jbe
inc
dec
cmpsb
insb
sub
mov
lcall
mov
fs
add
scas
jle
das
in
cmp
std
sar
loope
fwait
xor
mov
fcomps
or
ret
je
data16
or
or
cwtl
loopnew
and
push
pop
inc
add
filds
dec
dec
fstps
fsubs
xor
enter
test
inc
repz
out
jecxz
add
or
xchg
in
cmpsl
push
mov
sub
jmp
pusha
jnp
pop
in
dec
adc
or
adc
pop
lods
mov
lret
mov
dec
ja
jg
lret
cmc
xor
cmp
iret
in
sub
jp
and
nop
sub
sub
clc
jmp
or
inc
mov
push
jns
dec
and
xor
pop
ss
add
shrl
out
movsb
mul
lcall
leave
mov
ja
mov
and
xchg
mov
nop
sbb
jb
cld
movsl
xchg
out
xchg
sub
sub
icebp
jo
lahf
dec
pop
gs
ss
sub
leave
sbb
cmp
aad
outsb
inc
rorl
test
pop
mov
sbb
scas
imul
and
xchg
sarb
cltd
enter
popa
movsb
pusha
shll
push
out
or
loope
je
or
notb
inc
jle
add
mov
lahf
jae
outsl
xchg
jecxz
mov
repz
aas
xchg
xchg
sub
and
pop
push
mov
pop
adcl
outsl
lret
sbbl
add
push
xchg
test
shrl
shr
loop
mov
test
scas
push
aas
sub
test
add
jbe
pop
xlat
mov
js
jne
mov
pop
jb
rorb
xor
lock
clc
out
xchg
inc
cmpsl
test
mov
cld
jno
mov
mov
xchg
lds
xchg
jl
dec
and
lds
and
push
js
fstpt
orb
lea
imul
ljmp
inc
pop
popa
xor
push
sti
xor
popf
int
hlt
test
fsubrl
adc
jge
jbe
pop
mov
inc
and
inc
movsb
add
movsl
push
je
mov
data16
lds
sbb
repz
xor
sbb
dec
out
inc
push
sub
test
pop
jge
inc
xchg
pop
loopne
cltd
xchg
sub
dec
cmpb
or
pushf
addr16
inc
cmpsb
cwtl
hlt
adc
add
xchg
jns
orl
icebp
std
jno
and
movsb
leave
movsl
scas
xor
movsb
hlt
jbe
sti
test
inc
xor
popf
in
in
push
mov
stc
adc
daa
sarl
cmp
std
fxam
rcl
push
push
cmpl
scas
stos
or
cs
in
sti
sub
sub
in
arpl
push
sbb
xchg
inc
popf
mov
lret
pop
cmp
pop
and
xchg
mov
mov
clc
insb
sub
jl
inc
mov
int
dec
adc
sahf
mov
ror
loope
dec
ficomps
and
pop
lea
nop
dec
stos
adc
xchg
push
xor
xor
xchg
test
dec
mov
scas
push
xor
iret
jno
in
xor
popf
int
or
fstpt
cmp
jnp
xor
jno
or
sbb
sar
loop
lock
xchg
pop
and
push
jg
jno
mov
xchg
aas
xchg
dec
inc
pop
arpl
inc
outsb
inc
lock
and
jmp
das
jl
push
imul
push
cwtl
mov
jmp
fnstenv
aam
sub
mov
in
nop
mov
mov
enter
in
xchg
cmc
cltd
adc
jo
push
pop
aad
lds
sbb
jne
jl
frstor
inc
scas
mov
mov
push
dec
iret
xchg
or
lods
xchg
mov
xchg
stc
jne,pn
xor
lods
cmp
xchg
sub
jbe
and
xchg
inc
addr16
iret
pop
mov
adc
cltd
push
test
out
les
rorb
out
pushf
adc
mov
aam
sub
xchg
orl
test
cwtl
pop
js
scas
je
fisubl
rol
pop
adc
test
cmpsb
repnz
in
push
in
dec
jne
add
cmp
mov
cmp
jns
cwtl
inc
and
mov
lds
mov
add
in
lahf
aad
jp
push
lock
aad
rorb
je
xchg
dec
adc
and
sahf
jb
inc
mov
or
sbb
sbb
stos
sahf
inc
mov
push
push
cmp
xlat
lret
cs
pop
loope
sbb
arpl
mov
dec
jnp
push
movsl
jmp
mov
in
inc
out
mov
jo
fwait
pop
and
cmpb
mov
into
and
and
cwtl
int
mov
popa
xor
adc
out
clc
mov
subb
mov
sbb
sarb
pop
mov
mov
rclb
push
and
xor
lret
in
fwait
test
imulb
aas
popa
sub
fsubrl
lods
sub
das
mov
in
cmp
cmp
mov
mov
mov
pusha
stc
adc
and
scas
dec
das
cmp
shl
jcxz
cmpsl
mov
mov
ret
inc
enter
popf
mov
negl
fwait
movsl
inc
inc
shl
add
sub
jb
mov
sub
out
xchg
cmp
bound
pushf
rcll
mov
mov
clc
rcrl
push
dec
es
sub
xor
inc
fldt
adc
in
mov
jbe
lock
call
jp
rcl
inc
aad
inc
scas
scas
sbb
daa
push
jne
rcl
jmp
push
out
ljmp
cld
imul
fildll
dec
sub
rorl
out
mov
popa
ret
ret
cmp
out
xchg
push
sbb
push
pusha
xor
xchg
mov
lea
lds
dec
fidivrs
or
imul
and
aad
cmp
sub
neg
mov
mov
push
add
in
es
cmp
push
pop
dec
stos
push
out
dec
out
fdiv
add
push
adc
popa
add
fistpll
add
shrb
daa
mov
xor
adc
add
out
pop
cmpsl
jne
dec
stos
cmp
xor
xchg
sub
hlt
addl
add
xchg
jle
data16
outsb
subl
fincstp
or
scas
aad
or
test
popf
lods
jne
push
test
lret
inc
outsl
lods
sar
test
push
int3
mov
adc
scas
js
or
fdivrs
sub
sbb
int3
jecxz
jg
inc
mov
testb
into
stos
dec
cmpsb
popl
cld
xchg
push
jns
cli
xchg
jo
mov
aad
cmp
ret
sbb
inc
int3
dec
pop
dec
add
adc
repnz
popa
cmpsb
fs
jp
xchg
ret
inc
call
inc
xchg
dec
jl
add
inc
pusha
gs
clc
fnstenv
sbb
test
movsl
cmp
push
out
and
mov
movsb
push
fistpll
jle
scas
negl
mov
les
lret
icebp
shrb
in
xchg
or
fiadds
popf
call
movsl
xlat
jle
push
or
nop
sbb
mov
and
outsb
leave
mov
jmp
mov
mov
in
pop
xor
push
mov
test
into
inc
mov
dec
xor
pop
sbb
jle
add
dec
sbb
cmp
sub
fwait
xchg
imul
cmp
fidivrl
in
sti
mov
cmpsl
jbe
mov
insb
fimull
add
je
dec
outsb
sbb
int
in
jns
pop
mov
sbb
xor
fistps
xor
hlt
pop
fsubl
add
movsl
xchg
jbe
iret
out
fnstsw
xchg
loope
or
repnz
inc
add
aas
and
jae
icebp
mov
adc
fcoms
testl
ss
inc
js
xor
xchg
arpl
movsb
xlat
test
test
xchg
sahf
int
add
and
ret
dec
and
push
jp
insb
mov
pop
lahf
xor
sbb
mov
aas
call
sahf
roll
sbb
mov
dec
mov
sbb
lret
adc
dec
pop
outsb
aaa
jne
sbb
pushf
mov
fldcw
dec
pop
push
out
mov
jmp
xor
arpl
jns
dec
lock
enter
sbb
add
inc
sbb
adc
jo,pt
jo
adc
dec
mov
add
jmp
push
cmp
popf
mov
and
xchg
dec
dec
mov
in
mov
les
sbb
dec
fwait
push
lea
jg
jnp
mov
push
sbb
push
stos
mov
add
es
add
dec
clc
jle
lret
or
jb
lods
mov
cmp
imul
push
jbe
mov
shl
stc
test
add
push
ficomps
stos
bound
imul
lock
xchg
sbb
lcall
jge
mov
xchg
pop
pop
adc
out
or
mov
sbb
jns
scas
dec
add
dec
dec
fisubl
mov
pusha
add
and
test
mov
stc
bound
scas
mov
fisttps
cmp
neg
xor
div
roll
in
lret
xor
int
push
push
and
addr16
mov
add
add
sub
dec
rcrl
jbe
ds
scas
jne
and
outsl
jp
lcall
rorl
imul
int3
pop
jo
inc
or
cmp
push
outsl
ljmp
adc
sti
aam
xchg
xor
adc
inc
outsb
pop
xor
outsb
sarb
cmp
inc
js
aaa
push
es
push
fiaddl
aad
pusha
jb
sub
iret
movsb
sub
insb
addl
inc
jmp
packsswb
mov
xchg
dec
inc
mov
xchg
aas
pop
lods
inc
sub
push
test
out
sub
cltd
push
cli
xchg
inc
es
enter
xor
mov
es
clc
mov
ret
xchg
daa
mov
ja
cmc
icebp
movsb
or
rorl
mov
movsb
lods
push
xor
dec
inc
ja
mov
sahf
add
sarl
push
in
push
dec
push
xchg
jne
aaa
test
or
mov
dec
add
clc
cltd
arpl
test
ds
add
into
jge
mov
in
repz
cmpsl
loope
mov
stos
push
sahf
push
cld
adc
sub
cmpsl
push
cs
sbb
lret
mov
repnz
ds
sbb
cmp
mov
and
mov
fimull
cmc
addr16
mov
dec
out
cmp
dec
ja
fistps
xchg
push
pop
sbb
inc
xlat
push
lcall
popa
nop
shll
push
and
stos
mov
inc
and
lds
and
scas
repz
dec
mov
rclb
add
adc
loop
add
cwtl
pop
mov
and
mov
pusha
rclb
add
jnp
pop
inc
int
jl
lahf
test
xor
mov
mov
adc
push
jbe
sbb
ret
xor
fisubrs
dec
ljmp
out
loop
adc
daa
or
fcoms
pushf
cltd
filds
xor
xchg
pop
repnz
cmc
xor
cmp
mov
out
loope
pop
dec
jl
hlt
cmpl
jle
sbb
and
mov
sbb
stos
mov
outsb
jecxz
out
jmp
loopne
xlat
inc
js
jbe
xchg
mov
sub
jns
mov
in
add
in
fidivs
adcb
std
add
pop
dec
sbb
lds
js
mov
les
inc
add
adc
aaa
mov
mov
scas
mov
pop
aam
mov
loope
iret
sub
mov
cmp
movsl
mov
sbbb
xor
daa
push
call
jbe
pop
data16
adc
or
ret
popf
das
int
push
prefetch
adc
pusha
add
push
pop
mov
fsubrl
mov
hlt
push
jo
sbb
aad
add
movsb
mov
sbb
and
xor
aas
push
sbb
mov
imul
or
sbb
ret
mov
sbb
pop
loopne
imul
mov
adc
arpl
cmp
mov
inc
jnp
ret
enter
shl
mov
loop
or
bound
dec
or
pop
dec
iret
jp
push
add
pop
mov
dec
jecxz
mov
movsl
loop
cmp
pop
mov
xor
push
add
inc
repnz
sti
ret
and
jl
rorl
imul
xchg
or
pop
jecxz
lods
jp,pn
push
pop
nop
xlat
js
and
xchg
dec
gs
icebp
jle
xor
cmpsb
popf
mov
ss
fstps
cmp
dec
lret
arpl
jmp
out
jns
test
aaa
adc
sub
jae
shl
mov
push
nop
cmpb
adc
clc
dec
cmc
xchg
popf
dec
ret
out
mov
int3
daa
add
pop
call
ret
jbe
int
clc
sahf
test
inc
push
into
pop
hlt
test
sub
int3
mov
sahf
insb
mov
jecxz
shl
jmp
rcl
mov
aas
sar
fwait
jge
push
loop
insb
mov
adc
int
mov
mov
push
les
push
pop
ret
je
imul
xlat
test
jns
idivb
and
add
imul
lahf
movsl
add
js
pop
divb
outsb
mov
movsl
jnp
push
outsb
call
out
aaa
mov
mov
inc
add
sbb
xor
std
xor
lcall
and
bound
jmp
test
mov
mov
inc
repz
sub
negl
dec
mov
xor
out
inc
lcall
xor
arpl
sbb
movsb
je
xor
dec
sarl
lahf
repnz
lds
loope
fcoml
fstpl
inc
push
sub
aas
adc
pusha
mov
sahf
cwtl
rclb
xchg
stos
or
xchg
aaa
mov
outsl
pop
mov
sub
lds
lret
bound
xor
cmpsb
bound
cmpsb
es
cmp
addr16
adcb
xchg
fidivrl
rcr
cmp
and
js
pop
adc
mov
and
loop
leave
mov
push
push
das
mov
stos
fs
pop
inc
movsb
data16
arpl
xchg
dec
jns
cmp
mov
mov
sub
jae
cmpsl
cmp
mov
push
mov
fisttpll
aaa
aaa
mov
movsb
jno
gs
fnsave
inc
xchg
mov
pop
mov
xlat
div
push
lret
mov
add
push
jnp
xor
inc
push
rorb
mov
ret
push
pop
push
cltd
push
sub
adc
pop
sbb
jo
push
aaa
mov
mov
sub
sti
ja
sarb
cmp
inc
jbe
xorl
or
pop
and
loopne
and
xchg
scas
sub
fucomp
mov
lret
xor
inc
mov
frstor
pop
mov
pushf
lret
int3
dec
clc
cld
push
pop
and
xorl
and
add
js
adc
mov
xchg
sahf
dec
xchg
push
imul
int
js
mov
cmp
inc
sbb
stos
data16
xor
adc
push
sbb
add
jl
cwtl
call
or
scas
aaa
jbe
fmuls
loop
pop
adc
xchg
push
gs
mov
ljmp
outsb
cmp
xor
aad
xor
fsubrp
sbb
sarb
cmp
pop
fwait
ja
iret
cmc
pop
out
clc
aaa
bound
out
pop
andl
and
fldenv
ljmp
mov
or
mov
jno
pop
sub
xor
cmp
lods
rolb
adc
push
stc
sbb
mov
dec
enter
xchg
dec
lds
mov
mov
push
testl
loopne
repnz
push
mov
insb
inc
adc
out
idivb
or
ja
cmpsb
mov
arpl
loopne
das
sbb
add
scas
mov
cmpsb
push
in
mov
xor
mov
jecxz
add
fstpt
hlt
hlt
das
sbbb
jno
fists
lret
or
rol
inc
mov
stc
mov
ljmp
aaa
aas
loopne
dec
addr16
stos
adc
mov
fnstsw
dec
or
aad
out
sbb
outsb
push
add
mov
sub
cli
xlat
sbb
pop
adcb
orb
and
jmp
stos
xor
jae
sub
adc
aaa
pusha
push
sbb
pushf
jge
cmp
vprotb
fwait
jp
stos
and
ret
scas
mov
sarb
imulb
jg
mov
sub
mov
sbb
push
leave
pusha
add
xor
popf
jbe
and
cwtl
pop
jl
mulb
pop
test
std
xor
push
mov
shl
jns
pushf
rcrl
mov
lods
sub
or
sub
mov
jmp
xor
add
bnd
pop
adc
mov
inc
xchg
sbbl
lahf
cmpsb
pop
lds
push
cmp
xor
je
jo
jnp
push
int3
mov
pushf
and
xor
push
insl
adc
jmp
push
iret
pushf
mov
lock
jae
jg
decl
adc
inc
push
mov
pop
lock
jmp
leave
stos
and
push
adc
popa
fbld
inc
xlat
sbb
pop
sub
scas
pushf
mov
jbe
inc
xor
sub
fstps
bound
mov
orl
jmp
fnsave
cwtl
dec
enter
arpl
xor
mov
and
scas
mov
mov
sti
xchg
push
inc
pop
push
and
ret
mov
ret
push
adc
push
out
sub
push
sub
mov
push
lahf
pusha
insb
sti
jle
mov
mov
adc
sahf
incb
es
fiadds
jno
pushf
inc
lret
pop
repnz
repz
iret
xchg
in
and
cli
stc
mov
lahf
sbb
mov
mov
mov
jnp
xchg
sbb
and
fsubs
mov
je
mov
cwtl
xor
in
mov
cmp
leave
les
das
dec
imul
sbb
ljmp
dec
add
std
push
ss
push
ficompl
sub
xchg
fisttpll
sub
inc
adc
lock
xor
loopne
dec
xchg
mov
dec
sbb
scas
and
pusha
push
loopne
adc
mov
pop
test
lret
mov
sbb
pop
and
sbb
iret
push
leave
pop
xchg
xchg
jg
in
mov
mov
aaa
push
push
push
out
jo
mov
jecxz
fucomip
mov
into
orb
inc
cmp
pop
xchg
les
mov
gs
je
fmulp
pop
sub
std
jge,pn
add
pop
fcoml
js
mov
jmp
cld
fsts
push
icebp
push
lcall
shrb
and
dec
adc
int3
ficompl
loope
movsb
test
jbe
xchg
xchg
jl
mov
mov
imul
or
mov
daa
xor
xor
lea
push
movsb
jnp
add
popf
sbb
jmp
lock
movsb
shlb
hlt
adc
xor
test
aaa
lahf
test
inc
lret
jle
out
push
fs
pop
mov
fistpll
ret
fisubl
std
or
andb
dec
xchg
stc
daa
pop
push
in
jns
push
or
mov
inc
xor
xchg
xchg
test
fsubrp
mov
mov
jg
lahf
lret
cmpsb
mov
add
pop
push
cltd
xor
fcoml
fs
adc
push
adc
mov
movsl
adc
cltd
shrl
jo
fwait
cmp
aad
insl
bound
jb
gs
call
movsl
and
push
cmpb
xor
fidivs
jae
inc
pop
jecxz
push
test
inc
push
add
or
loope
inc
ss
xchg
cwtl
or
mov
cmp
add
mov
pushf
and
test
in
imul
enter
push
outsb
movsl
xor
fbstp
std
mov
push
test
inc
icebp
fmull
aad
mov
rol
call
cmp
je
cmpsl
push
dec
xchg
mov
in
loopne
insl
repnz
lret
ficoml
add
mov
ss
pop
js
dec
mov
pop
and
pop
add
pushf
arpl
or
or
call
xchg
test
mov
in
push
and
sbb
cmp
stc
lea
cmp
fcmovbe
dec
mov
test
xchg
outsl
sbb
dec
out
test
inc
mov
xchg
js
xor
mov
xchg
or
pop
push
cmp
cltd
push
rorb
ss
and
and
faddl
cmp
sub
imul
mov
xchg
psubsw
pusha
out
leave
mov
xlat
outsl
iret
add
fidivrl
jnp
mov
add
lea
call
incl
push
jns
stos
lcall
das
jb
lock
lret
xchg
movsl
push
out
xor
repz
pop
push
sbb
adc
cltd
cmpsb
gs
cmp
lods
cld
adc
jno
out
loope
mov
cld
ret
inc
lret
cmp
or
sbb
stc
jmp
in
jge
adc
jmp
test
sbb
inc
or
popa
inc
fldenv
popf
lods
pushf
rcll
ret
xchg
and
into
cmp
rcr
ret
add
cli
sbb
sbb
pop
iret
push
mov
xor
push
mov
cmpsb
dec
and
adc
and
sbb
push
sbbb
xor
xchg
push
dec
icebp
notl
and
rorl
scas
nopl
push
repnz
mov
cli
imul
dec
enter
in
or
mov
mov
pusha
or
add
pop
repnz
mov
int3
cli
add
cwtl
addl
loopne
sub
imul
mov
xor
out
jae
dec
icebp
mov
imul
stos
cmp
cmp
sub
ljmp
push
outsl
add
jle
cmp
mov
mov
lock
adc
data16
jl
in
outsb
out
mov
xor
xor
sbb
add
mov
xchg
leave
lcall
push
add
cmp
mov
cmc
lahf
xlat
inc
push
xlat
pop
cmp
shll
das
xlat
xchg
adc
pushf
xchg
out
pop
push
std
dec
dec
and
push
xchg
ds
mov
inc
jb
call
push
sub
arpl
add
mov
imull
pop
test
push
sub
sahf
and
add
pop
imul
pop
fisubs
lret
pop
sub
pushf
cmp
cwtl
pop
enter
inc
jnp
mov
cmp
fadd
rclb
xchg
ds
pop
mov
push
push
aaa
shll
adc
mov
adc
aam
sti
mov
push
add
lret
pop
lock
je
loop
out
dec
das
cmc
pop
es
not
into
xchg
adc
arpl
mov
test
dec
xor
and
cmpsb
xchg
cmp
fiaddl
je
dec
test
ja
pop
push
jae
cmc
or
dec
jg
fwait
inc
pop
cmp
add
das
lret
scas
jnp
jo
ret
int
or
js
aaa
enter
jp
and
sbb
fiadds
push
std
push
jg
loope
inc
arpl
ret
stc
in
and
xchg
sbb
mov
cwtl
xchg
es
and
je,pt
insb
or
and
xchg
push
adc
xchg
xor
dec
inc
sbbl
rcll
push
test
clc
incb
inc
push
jo
scas
sub
add
pop
adc
movsl
lret
int
cmp
sbb
es
out
outsl
movsb
xchg
pop
hlt
pop
hlt
insl
mov
aam
xchg
decb
fisttpl
in
jnp
mov
fwait
mov
mov
lds
sub
push
inc
addr16
fstpt
pop
mov
xor
int3
mov
imul
dec
mov
xchg
inc
xchg
clc
dec
shlb
sub
mov
mov
cmp
pop
cmp
mov
es
insb
sbbl
int
lods
gs
and
in
mov
mov
insb
push
lret
sub
sbb
pushf
pop
xor
cs
icebp
shrb
pop
clc
lea
pop
mov
add
add
mov
xchg
cmpsb
push
sub
lods
and
lds
xchg
sti
lods
push
and
divb
fsts
adc
inc
mov
das
mov
shrl
cmp
sti
std
outsb
ja
sbb
xlat
xor
fists
pusha
pop
mov
push
and
in
push
gs
adc
into
push
add
shrb
jae
mov
jae
adc
fs
lds
xchg
xchg
insb
cmp
push
sub
dec
xchg
shlb
jge
insl
into
stos
add
xorb
ljmp
ret
lds
sahf
push
cmp
sahf
ljmp
dec
fldt
push
aam
mov
xchg
mov
loope
jge
pop
inc
pop
cmp
std
lock
in
xor
movsl
out
push
jg
sahf
sarl
aad
vpcmpeqd
cs
aam
cmp
aad
push
adc
call
ljmp
and
or
call
jmp
loope
jle
stc
sub
jb
cltd
xchg
mov
ret
stos
xlat
add
adc
data16
jbe
cmp
int
mov
sub
inc
pop
fstpt
jnp
lret
jl
mov
lods
pop
sbb
pop
testl
add
inc
ljmp
pop
js
fwait
xchg
movsl
popf
adc
xchg
xor
inc
push
cmp
add
mov
sbb
mov
into
pop
jecxz
push
and
add
insl
in
jp
loope
mov
mov
xchg
or
fildll
jmp
das
call
mov
imul
loope
inc
nop
pop
out
mov
inc
xor
mov
push
test
mov
outsl
xchg
sbb
dec
sahf
int3
xor
stos
mov
mov
sbb
lods
or
jbe
cmp
or
dec
les
jp
add
test
mov
shll
mov
andl
into
insl
shll
daa
adc
and
fstps
xor
sbb
xchg
addb
xchg
push
dec
out
cwtl
cwtl
mov
inc
add
shl
pusha
inc
arpl
pop
negl
adc
cmp
shl
scas
outsb
sti
cmp
repnz
cmp
or
push
dec
outsb
ljmp
mov
sbbl
cmp
adc
cmc
pop
data16
sbb
sub
pop
add
sub
xchg
testb
mov
or
lods
xor
movsb
cmpsl
divl
rcll
pop
popa
cmp
jo
mov
popf
push
shrl
mov
test
push
rep
pop
stc
push
xchg
int
ljmp
ja
sbb
aam
mov
and
aas
dec
bound
mov
xchg
mov
ss
fld
jge
sub
loopne
adc
and
enter
sub
and
adc
inc
pushf
hlt
or
push
andl
xor
fwait
xor
mov
inc
js
xor
xor
cmp
push
outsl
inc
cmp
lcall
push
add
les
adc
int3
jg
mov
addb
sti
neg
mov
xor
enter
pop
testb
push
pop
sbbl
nop
dec
sub
sbb
mov
and
cmp
xchg
movsb
jbe
pop
sub
cli
loopne
push
jg
repz
orl
into
mov
sub
mov
addr16
hlt
xor
stc
xchg
sahf
push
xchg
xchg
push
cmp
test
inc
cmc
movsl
icebp
dec
lahf
pop
cmp
jnp
mov
je
mov
in
xor
mov
adc
sbb
mov
or
popa
hlt
inc
jmp
pop
push
jns
push
push
mov
orl
jae
fdivr
mov
sbb
pop
and
cmp
cmp
sar
and
adc
push
jae
adc
dec
decb
push
icebp
xor
ret
cmc
dec
sub
shl
daa
add
and
jbe
insl
pop
dec
mov
mov
lock
call
ret
mov
inc
xor
sub
push
sbb
outsb
cmp
cmp
lods
mov
cli
subb
movsl
jmp
fsubs
xor
nop
shlb
repnz
adc
idivb
xor
sub
and
pop
and
iret
push
mov
push
popf
shll
imul
je
sbb
setbe
into
xor
add
jmp
in
lea
dec
cmp
push
inc
test
pop
out
xchg
pushf
cmp
add
fidivl
push
add
mov
xchg
pop
mov
xlat
roll
pop
ss
in
pop
mov
jne
adc
push
ret
add
mov
mov
aas
ffree
adc
mov
push
in
add
mov
cltd
adc
inc
push
xor
mov
push
add
xchg
outsb
add
mov
mov
in
xor
inc
ror
aaa
lret
ret
in
push
push
or
dec
push
in
outsb
js
clc
push
out
clc
icebp
cmp
int
out
add
mov
out
mov
aad
lahf
inc
js
sbb
pop
jg
cld
loope
xor
pop
jmp
cmp
dec
lret
or
insb
mov
daa
mov
jne
sub
fsubr
repnz
add
stc
das
aas
dec
mov
jecxz
fbstp
xor
adc
lea
mov
sarb
in
aaa
push
pop
and
in
jno
jb
xor
cwtl
inc
and
mov
xor
in
jbe
mov
jno
sti
mov
test
add
mov
ret
xor
dec
xchg
shrb
xchg
in
aam
pop
out
and
loopne
insb
fisttpll
pushl
add
test
add
jmp
xor
dec
mov
repnz
xor
mov
pop
insl
or
daa
mov
inc
arpl
aad
xor
gs
pushf
iret
insl
cmp
cmp
dec
pop
push
push
pop
push
ret
scas
mov
and
testl
pop
test
xorl
mov
xor
std
stc
cmp
dec
fs
stos
out
inc
push
dec
sub
mov
imul
ss
or
and
dec
lods
andb
fsubp
arpl
or
daa
subb
andl
inc
dec
in
neg
daa
mov
test
dec
loopne
cwtl
sbb
jl
inc
dec
sbb
shl
bound
mov
ret
sbb
test
or
movsl
pop
data16
jnp
mov
call
clc
add
pop
das
out
adc
or
cmp
cmp
add
lock
mov
mov
dec
jns
jle
mov
and
out
push
inc
fnstcw
mov
jmp
jecxz
mov
jle
mov
or
sarl
mov
mov
pop
data16
fcoml
adc
bound
ja
ss
adc
imulb
out
jge
je
in
or
mov
fcmovnbe
lcall
sbb
sbb
cmc
jle
push
mov
or
xchg
inc
dec
icebp
repnz
movsb
cld
sub
mov
gs
push
repnz
cmp
nop
adc
daa
push
push
cmp
aaa
sub
nop
mov
mov
jbe
jae
cmpsb
leave
push
pop
fcoml
mov
mov
out
cmp
aad
mov
dec
push
push
jno
mov
std
lds
xchg
cs
les
ret
pop
lea
jns
push
clc
cmc
int3
fstpl
loop
mov
xor
cmp
fbld
and
xchg
enter
call
mov
fs
popf
mov
mov
jecxz
ljmp
mov
inc
shll
adc
jmp
outsb
xor
aaa
mov
jbe
and
popf
test
and
mov
and
sub
xchg
adc
xor
or
orb
nop
dec
or
dec
xchg
test
add
bound
cmp
ret
sub
xchg
lds
loopne
fcompp
mov
aam
xor
mov
or
jo
adc
xchg
mov
jmp
insb
divl
int3
add
pop
xchg
or
loopne
mov
inc
adc
mov
pop
loopne
dec
xlat
cmpsb
pop
mov
push
loopne
xor
outsl
jmp
inc
jb
popf
cmp
loop
je
and
addr16
int
mov
cwtl
mov
cmp
ljmp
and
sub
lcall
push
aas
stos
pop
js
fistl
xchg
push
xchg
testb
stos
cld
adc
pop
jl
xor
cs
dec
arpl
mov
cmc
pop
cmp
mov
sbb
cmpsb
data16
pop
and
jb
jle
xorl
dec
inc
push
mov
xchg
mov
mov
sbb
adc
divl
cmp
enter
xchg
cmp
bound
cmpsl
xor
out
sub
adc
jle
test
pop
popf
aaa
in
cmp
xchg
push
test
mov
lock
xchg
popa
mov
daa
rol
jmp
push
push
push
repnz
leave
or
imul
dec
outsb
pop
mov
jecxz
mov
jg
gs
sti
sub
sbb
dec
cld
sub
call
bound
ja
add
in
mov
jnp
cmp
jne
or
lock
xor
inc
insb
test
rcrl
cmp
mov
jns
adc
and
rcl
roll
mov
jns
cli
cmp
jno
loop
dec
call
sub
xchg
mov
lret
dec
sbb
ficomps
add
cmp
sbbl
add
and
xchg
int3
mov
pop
sub
mov
mov
leave
sub
pop
mov
mov
pop
ret
push
loope
push
mov
cmpsb
rcrl
dec
mov
pop
ficoml
mov
mov
sbb
repnz
in
test
and
xchg
mov
std
cs
sbb
les
movsb
cmp
cmp
sbb
inc
pop
ds
xor
or
in
mov
loopne
fimull
pop
push
push
xchg
test
adc
cwtl
bound
inc
mov
sbb
insb
pop
rcrb
inc
sub
insl
push
inc
push
or
add
pop
insl
outsl
insb
add
sub
inc
add
lret
jmp
cmpsl
pop
mov
jno
lcall
sbb
sbb
fsubrl
mov
sar
ficoms
cmp
cmp
push
xor
mov
xor
stc
out
dec
insl
std
mov
and
outsl
aam
adc
jns
lods
push
jl
mov
call
dec
sub
outsb
inc
jecxz
lock
sub
adc
popf
dec
clc
imul
mul
aam
xchg
popa
mov
fs
stc
xchg
mov
or
lcall
sub
dec
or
push
test
outsb
jge
add
push
or
push
mov
sub
xor
and
fst
mov
add
cmp
ret
lahf
inc
sub
scas
mov
rcrb
ds
adc
dec
addl
hlt
cltd
mov
insl
ds
shlb
or
inc
jmp
xlat
xor
ss
int
mov
test
int3
dec
lods
push
or
out
pusha
mov
push
dec
das
mov
pop
xchg
hlt
outsl
gs
in
jp
icebp
movsb
xor
pop
jne
and
pop
adc
add
out
ja
cmp
and
test
cld
rolb
mov
lret
dec
jg
inc
sti
push
nop
mov
ja
notb
aas
fistpll
lahf
or
fidivl
aas
sub
dec
fst
stos
push
roll
mov
loopne
sbb
mov
xchg
sub
stc
xchg
push
data16
add
pop
scas
lret
into
inc
mov
jb
int
enter
xchg
data16
xchg
pop
loope
out
loop
in
bnd
push
decl
out
repnz
bound
push
outsl
cld
outsb
lods
sub
std
jno
and
jae
and
je
or
mov
or
aam
orl
sub
vmovq
jmp
out
mov
sbb
or
mov
test
add
pop
lahf
insl
mov
mov
fbld
mov
add
mov
mov
repz
cmpl
xor
out
fs
sbb
and
cmp
cmp
jo
mov
mov
mov
mov
fs
mov
xorb
dec
pop
in
pop
xor
repz
jnp
lods
iret
sbb
adc
jns
dec
inc
sub
es
or
inc
out
fsubs
out
sub
dec
xlat
sub
fimull
xor
or
cmp
ja
rolb
mov
mov
aam
sbb
and
subl
iret
repnz
adc
in
xor
mov
pop
mov
xlat
push
insb
and
mov
mov
lds
in
adc
xchg
push
insb
in
insb
cmp
jno
or
inc
cmp
sahf
out
jne
jg
mov
xlat
dec
xor
aam
lret
inc
mov
and
adc
imul
push
sbb
sarl
pop
std
shr
rorl
mov
insb
ret
jo
leave
jb
mov
scas
mov
aad
aaa
int3
xor
adc
popa
mov
lcall
cmpsb
mov
shlb
in
fs
push
jl
push
test
loope
cltd
pusha
jecxz
sbb
and
jno
mov
mov
add
lods
xor
jge
fisttpl
mov
lcall
xorl
xchg
or
data16
out
mov
int3
lea
adc
dec
dec
xchg
add
cli
jl
and
std
jnp
stos
or
xchg
mov
loop
repz
and
nop
mov
mov
cltd
xchg
fsts
pop
dec
xchg
add
mul
lret
xchg
xchg
pop
xchg
mov
xchg
sahf
mov
arpl
mov
jbe
mov
sbb
movsl
pop
not
sysret
xor
inc
mov
leave
fdivr
out
in
jb
js
into
dec
sbb
dec
mov
movsb
and
rolb
fwait
divl
inc
loop
xor
dec
sub
jg
cs
fsubl
scas
js
sub
lret
sahf
vmread
add
xlat
fstpt
stc
sbb
cltd
dec
and
or
rcll
dec
out
push
hlt
mov
mulb
or
mov
add
jl
pop
orl
mov
hlt
iret
stos
dec
or
std
sahf
add
insl
aas
shll
jns
int
or
scas
xchg
jmp
stos
insb
mov
inc
xchg
call
sbb
cltd
pop
sbb
daa
add
jbe
lahf
int
fucomip
js
cld
cltd
jo
rcr
call
xchg
mov
jbe
push
push
or
inc
pop
pop
xlat
jns
stos
push
cmp
repnz
sahf
ss
movsl
in
push
xor
cmp
stos
adc
sbb
push
mov
push
movsl
jns
insl
inc
adc
inc
add
fdivs
std
push
push
ror
pop
adc
jo
ja
push
cmpsb
shrl
jle
sbb
cltd
mov
fsubs
movsb
loopne
jle
popa
outsl
insb
adc
jae
xor
dec
in
xchg
pop
pusha
push
fldt
push
xor
je
ret
mov
in
aam
jecxz
xchg
add
sub
sahf
mov
loopne
jle
sub
scas
pushf
push
dec
dec
lcall
iret
mov
loope
fnstsw
out
dec
adc
push
subl
movsb
add
out
addr16
jl
adc
adc
dec
lea
fcmove
pop
and
jbe
push
sbb
lea
pop
dec
inc
dec
cmpsb
mov
mov
decb
jb
les
add
mov
inc
xchg
mov
pop
mov
ret
push
scas
or
xchg
int
and
adc
daa
pop
push
lea
jb
dec
pop
cmp
popf
fwait
bound
mov
and
mov
xchg
lock
or
mov
imul
mov
pop
xchg
xchg
popf
fidivl
insb
or
fs
fmull
aas
mov
cli
cmc
push
push
fninit
test
xchg
mov
stos
ljmp
and
fiaddl
dec
inc
sub
sbb
dec
mov
out
pop
icebp
pop
mov
lock
sarw
inc
aam
mov
mov
lret
dec
mov
lds
test
aad
jmp
jnp
mov
cmp
in
test
and
xchg
pop
mov
es
int
push
sub
fincstp
cs
push
lcall
dec
jae
add
dec
std
dec
test
test
imul
loop
outsb
arpl
and
and
bound
rcrl
mov
dec
add
lret
lds
std
mov
imul
xor
fldt
cli
dec
sub
cmp
add
push
inc
outsl
fs
and
mov
add
push
adc
addl
mov
cli
sbb
adc
or
mov
popa
push
movsl
mov
shlb
cmp
leave
pop
int
xchg
pusha
movsl
lea
aam
dec
out
or
jne
pushf
movsb
iret
lds
dec
xchg
jle
inc
loop
xor
frstor
pop
mov
fisubrs
push
fisubs
push
inc
repz
cs
jo
lret
js
out
cwtl
pop
cmpsb
dec
js
gs
and
xchg
jmp
and
and
jg
mov
dec
fidivrl
stos
xchg
mov
push
pop
aas
mov
test
js
lods
push
or
dec
lock
push
dec
mov
dec
popf
adc
mov
add
xchg
mov
push
adc
and
xor
xchg
and
xor
xchg
sub
fcompl
imul
sub
scas
outsb
xchg
mov
hlt
mov
mov
mov
lea
adc
shlb
js
push
int3
inc
xchg
subl
popf
mov
fst
clc
and
dec
add
pop
arpl
xor
aaa
sbb
imul
loopne
sbb
fsubr
mov
mov
dec
inc
mov
jbe
xor
xchg
add
jge
sub
mov
leave
jo
inc
cmp
push
int
pop
pop
loopne
sub
sub
push
fsubr
sbbb
jle
mov
sub
xlat
inc
pop
aam
mov
push
test
mov
arpl
push
dec
addr16
ret
mov
and
sub
mov
cmpl
inc
jl
aam
jno
sti
into
icebp
push
shll
adc
imul
or
push
push
mov
and
pop
xchg
add
int3
leave
daa
int
scas
nop
fucomi
iret
mov
addr16
jo
scas
ret
scas
jp
lods
jae
lret
jnp
addr16
pop
pushf
dec
loopne
ljmp
test
daa
mov
and
movsb
inc
and
pop
imul
mov
fimuls
repnz
dec
dec
pop
call
fcmovnbe
push
fwait
pop
and
add
sbb
or
pop
add
cs
cmpsl
cmc
and
mov
stc
aam
test
in
lods
div
and
pop
mov
idivl
imul
add
ljmp
mov
mov
punpcklbw
filds
dec
xlat
repnz
jbe
jmp
push
outsl
gs
es
pop
xchg
push
icebp
les
sbb
hlt
xlat
adc
mov
les
lea
inc
pop
push
aad
sub
lret
xlat
aas
int
cmp
xchg
ds
or
scas
cmp
mov
dec
dec
ja
fs
shlb
mov
jnp
xchg
mov
cmp
mov
fldcw
mov
cmpb
mov
mov
xchg
push
cltd
int3
lret
into
into
push
push
repz
scas
addb
lret
adc
adc
lcall
shl
ljmp
mov
xchg
lret
fidivs
mov
mov
mov
pop
pop
js
pop
xchg
sub
xchg
xchg
add
cli
inc
inc
jmp
fiadds
sbbb
inc
cmp
fiadds
jl
jp
sub
mov
xor
and
stc
push
negl
inc
out
jnp
sbb
call
imul
xlat
cmp
mov
sbb
push
fimull
inc
loop
fs
adc
sub
daa
adc
ja
aas
push
imul
mov
fdivrs
stos
mov
adc
sbb
add
ret
dec
cmpsb
mov
arpl
nop
mov
sbb
test
hlt
test
cmp
js
je
stos
andb
cmp
fdivrs
test
mov
dec
push
mov
cmp
mov
pusha
mov
addr16
rcrb
xchg
push
icebp
ret
mov
outsb
inc
lea
cwtl
and
nop
jb
sbb
cmp
xor
sub
mov
insb
add
into
dec
movsb
jbe
and
add
out
jne
xlat
icebp
bound
orb
fwait
mov
test
push
xchg
rcr
call
in
test
pop
inc
popa
xor
jno
fldt
sub
nop
adc
mov
loope
cmpsl
jns
lods
sarb
fwait
aam
icebp
outsl
in
test
sbb
repnz
test
push
aam
add
jns
enter
dec
ja
push
mov
dec
or
xchg
adc
jecxz
dec
call
addl
lret
dec
mov
sbb
shll
cmpsl
add
icebp
push
aas
mov
add
sbb
cmp
lcall
test
mov
rcrl
lods
div
mov
out
jl
mov
popf
inc
adc
add
cmp
mov
pop
arpl
push
sbb
cld
push
and
lods
cmp
dec
push
mov
mov
jp
out
imulb
and
aas
jg
rep
dec
in
das
or
loop
pop
jno
data16
rcrl
xchg
arpl
pop
lock
xchg
and
test
icebp
shl
mov
lock
scas
outsl
rcl
mov
sbb
mov
lret
scas
cmp
and
push
lret
or
mov
insl
out
xor
and
adcb
popa
adc
jne
sbb
dec
bound
lcall
push
movsb
sti
pop
mov
je
mov
in
jp
and
popa
xor
stos
lods
pop
cmp
mov
sub
and
xlat
push
inc
push
xchg
mov
lea
int3
js
inc
jb
mov
jl
ss
mov
leave
dec
mov
jl
sub
push
jne
jg
lds
cld
test
fisubl
imul
add
adc
icebp
xor
imul
fmul
mov
ja
sub
mov
mov
mulps
lds
or
enter
outsl
xor
das
inc
or
push
leave
xor
lock
jmp
test
std
sbb
add
push
jle
gs
dec
sub
es
jb
scas
aaa
push
lds
out
outsl
push
push
mov
jg
jb
dec
cwtl
mov
mov
add
and
adc
ljmp
jl
pusha
inc
lds
push
add
call
push
aas
push
adc
mov
dec
imul
rol
je
mov
sub
imul
push
out
inc
les
sbb
enter
sbb
mov
jo
mov
bnd
ljmp
mov
stc
divl
inc
inc
sub
nop
mov
out
popf
dec
push
push
mov
inc
andb
and
loope
arpl
xchg
pop
push
xchg
jmp
enter
pop
insb
sahf
in
lods
int
push
pop
lods
inc
add
add
xchg
jl
cmp
sbb
pop
orl
or
xchg
rorl
loopne
idivb
or
jecxz
insl
xorl
xchg
cmpsl
jno
sub
test
pop
out
cmp
cmc
adc
or
push
popf
and
nop
adc
imull
ljmp
cmp
pushaw
xor
repz
xor
lods
mov
dec
or
jo
or
mov
inc
in
pusha
lcall
sbb
addr16
or
xchg
mov
lods
cltd
sub
fwait
rcll
cmp
add
test
or
sbb
ljmp
pop
testl
ljmp
daa
sbb
jp
outsl
push
or
enter
mov
fisttps
and
push
mov
sub
sbb
xchg
cmp
rcll
scas
js
out
push
xor
ss
mov
mov
add
mov
lea
arpl
sbb
pop
cmp
mov
jmp
int
fisubl
insb
lret
enter
lret
int
je
mov
cmp
and
int
xor
outsb
lret
jmp
sub
shlb
mov
push
in
inc
outsw
out
cmp
jno
aam
cmp
xor
mov
call
fadd
xor
pusha
fiadds
jnp
aas
popf
int3
or
test
jno
jmp
xor
mov
inc
movsb
xchg
dec
aam
xor
iret
mov
jnp
outsb
cmc
les
mov
mov
mov
xchg
inc
pop
roll
movsl
lcall
inc
pop
xchg
mov
nop
icebp
shl
out
scas
ljmp
sbb
pop
jmp
xchg
inc
push
out
cmp
es
in
insl
fs
mov
aas
lds
jl
push
or
dec
shr
es
cmp
roll
cli
in
xlat
pop
lods
jle
movsb
jmp
mull
sarb
stc
cli
repnz
js
test
pop
nop
ljmp
sbb
mov
out
aam
cwtl
push
xor
dec
subl
push
flds
inc
daa
das
push
mov
frstor
xchg
je
scas
dec
in
js
andl
pop
loope
adc
dec
pop
out
sub
sub
in
sub
fsubrl
ljmp
fmull
dec
inc
sahf
rorl
cmp
mov
xchg
xor
pop
and
push
out
push
les
fildl
jge
jle
ret
mov
int3
aas
cmpsb
push
adc
xor
pop
cmc
pushf
dec
xchg
add
fdiv
rclb
mov
js
push
aad
jmp
aaa
xchg
andl
mov
cmp
out
ja
idivl
cmp
sbb
ret
cs
adc
xchg
add
mov
jge
int3
add
pop
leave
push
scas
add
pushf
test
adc
jne
pop
lods
or
jbe
mov
jl
cmp
and
mov
jbe
cli
out
sbb
dec
pop
scas
mov
fnstcw
add
mov
pop
pop
js
fsubr
mov
mov
std
push
hlt
mov
ds
sbb
stos
cmp
mov
aad
cwtl
add
lahf
int3
inc
jg
mov
scas
xchg
repnz
inc
pusha
pushf
dec
lcall
cmp
xchg
cmp
dec
mov
in
enter
std
xchg
ja
dec
mov
cld
lds
das
and
jl
mov
mov
fistpll
loope
mov
fnsave
lea
inc
push
cmc
roll
bound
xchg
push
faddl
hlt
sub
dec
sub
leave
rcr
mov
test
push
xchg
sub
sahf
pop
mov
mov
push
cmp
jecxz
dec
leave
stc
dec
sbb
ret
fldln2
repnz
push
out
movsb
xchg
inc
or
std
jecxz
push
or
xor
push
stos
mov
dec
imul
push
or
into
xchg
std
enter
not
in
nop
xor
mov
fsubp
ret
fsubs
fldt
cmove
insb
mov
ret
andb
out
insb
pushf
mov
xor
call
aaa
fstpt
movsb
sti
mov
pop
int3
rclb
push
mov
ret
push
inc
stos
stos
add
push
xchg
jmp
xchg
out
cmp
int3
cwtl
insb
fsubrl
out
mov
xor
jo
and
fbld
mov
adc
dec
std
add
testl
add
aam
inc
rorl
cmp
mov
fucomi
lock
std
and
insb
in
xlat
push
mov
popa
dec
cli
jmp
pusha
jne
popa
mov
xchg
sub
shl
mov
sbb
xchg
push
and
pop
pop
ret
rorb
leave
lcall
loop
ds
or
inc
mov
adc
mov
jns
push
mov
inc
pop
push
or
pop
xlat
lsl
and
jnp
sahf
inc
mov
out
jecxz
adc
xor
filds
clc
ljmp
sbb
add
lahf
or
in
mov
out
out
aam
pop
mov
popf
scas
cmp
sub
pop
dec
pushf
les
pop
inc
sahf
push
cmpsl
int
push
push
mov
mov
sub
stos
xor
out
mov
popw
pmulhw
inc
lahf
sub
mov
jmp
jb
fsubrl
dec
insb
sub
arpl
movsb
cmp
add
jmp
xchg
sti
cmp
xor
or
sbb
sbb
lods
jnp
cmp
iret
pop
xor
sti
mov
pop
mov
jp
sub
mov
push
out
sub
enter
ja
pop
jno
jns
pop
stos
cmp
mov
push
int3
mov
fs
cld
xor
popf
dec
in
and
mov
mov
ds
popf
pop
sbb
push
loop
inc
orl
adc
mov
mov
xchg
push
cmpsb
enter
cmp
inc
push
pop
add
dec
cmpsb
add
mov
int3
adc
mov
cmpb
out
aam
stos
cmp
jo
ficoms
dec
lret
addr16
add
xchg
outsb
push
push
mov
inc
inc
mov
add
ljmp
lret
loop
js
faddl
push
jne
or
add
dec
movl
popl
add
ret
jmp
cmp
mov
mull
vmovaps
shlb
mov
pop
lret
fdivr
adc
nop
fwait
push
ret
repz
dec
test
repz
cmp
or
shlb
add
insb
pop
sbb
pop
mov
cmp
out
jns
pop
js
and
dec
jecxz
sbbl
mov
cltd
out
insl
jnp
mov
std
push
cmp
repnz
div
push
jno
and
xchg
xchg
les
mov
mov
xor
movsb
jl
test
mov
icebp
insl
push
stc
mov
pop
mov
dec
loopne
xchg
xor
xor
xchg
outsb
frstor
outsl
call
lea
push
leave
dec
push
sbb
jno
stos
bound
mov
mov
or
or
das
pushf
int3
lock
jne
jp
popf
shl
inc
lahf
push
xchg
addb
outsb
inc
push
aas
mov
mov
lods
xchg
dec
test
push
cltd
mov
jle
sub
add
shrb
adc
enter
mov
mov
pop
fcomi
or
ret
jmp
mov
into
movl
in
xor
mov
call
mov
cmp
xchg
insl
lods
pusha
dec
dec
or
mov
cmp
xor
clc
inc
mov
push
arpl
sti
lds
mov
jl
gs
push
icebp
sub
dec
or
push
loop
jmp
test
outsb
pop
aas
push
mov
cmp
daa
fnstenv
pop
movsb
leave
lahf
jnp
repnz
adc
xchg
mov
xchg
lock
inc
bnd
jle
jne
in
rcrb
mov
fdivrl
jg
lahf
pop
icebp
push
mov
and
adc
sarb
cli
xor
mov
mov
cltd
loop
clc
dec
loop
fwait
xchg
xchg
movsb
adcb
movsb
or
or
jnp
sub
fimuls
cmpsl
es
cmp
jecxz
xlat
and
mov
test
movsl
mov
shll
xchg
or
dec
push
jno
stc
iret
insb
ret
es
and
shll
cmp
push
push
in
sbb
insb
ficoml
shlb
mov
sbb
xor
xchg
dec
jmp
or
mov
push
mov
sbb
icebp
mov
lds
xchg
das
jbe
fisubs
in
mov
jbe
mov
push
les
dec
xor
lret
data16
mov
jg
mov
iret
jne
mov
gs
sbb
mov
inc
lods
cmpsl
inc
sbb
scas
stos
jb
inc
cmpl
out
dec
es
pop
or
dec
push
adc
mov
or
fwait
mov
pop
add
xchg
xchg
cmp
fidivl
xchg
sub
pop
stc
dec
dec
pop
mov
dec
fs
push
into
sub
xchg
iret
cwtl
mov
mov
outsl
dec
or
mov
inc
test
mov
mov
ror
iret
fnstsw
loopne
fidivrl
stos
mov
xor
sti
sti
fcmove
ret
xor
sahf
daa
repnz
sbb
jge
das
push
xchg
jge
int
add
insb
mov
dec
dec
jo
loopne
popa
inc
jecxz
xchg
test
xchg
pop
jnp
cmp
imull
out
mov
mov
repnz
adc
mov
lds
pop
inc
in
xchg
scas
sub
push
sti
adc
add
mov
pop
movsl
loop
mov
jne
aas
mov
push
mov
adc
xor
int3
cmp
addr16
repnz
sbb
outsl
jle
push
jge
les
cmpsb
mov
xchg
data16
fidivrs
sahf
sub
push
out
dec
test
or
fwait
xor
xchg
xchg
pop
sti
sbb
jne
mov
adc
fisubrl
sub
fstpl
into
insl
lods
and
fisubrs
push
rcrb
add
sbb
out
sbb
pop
jbe
push
lods
and
test
mov
mov
pop
mov
mov
clc
inc
in
dec
aaa
xor
pushf
rclb
xchg
orb
and
or
xor
jp
loope
aam
xchg
scas
int
or
fsubs
and
mov
out
imul
sti
xchg
pop
jo
test
shll
imul
mov
and
mov
mov
cmp
pop
xor
xchg
mov
fildl
repnz
mov
aad
pop
mov
lcall
mov
daa
jo
popf
pop
sahf
sahf
aad
sbb
imul
sbb
je
stos
int3
clc
fsubrs
leave
xor
sahf
mov
push
mov
arpl
pop
repz
imul
add
pop
int3
lahf
out
mov
or
nop
fildl
inc
mov
cli
clc
mov
cld
and
call
jmp
pop
popa
lcall
cmp
fidivrs
push
cmp
test
cli
iret
xchg
gs
add
dec
mov
ss
mov
and
mov
sub
jns
and
push
push
popf
sub
daa
jle
hlt
fnsave
push
cmpsl
cltd
out
repz
inc
sub
mov
jo
loop
pop
cld
or
xchg
pusha
push
xchg
enter
int3
push
mov
out
mov
lahf
xchg
shr
lea
sbb
cmp
shlb
insl
cmp
inc
jle
lods
add
mov
mov
sbb
ja
and
pop
add
iret
ficompl
mov
mov
xor
jo
fsubs
dec
in
dec
xchg
pop
cltd
loope
ret
in
and
pushl
sbb
mov
xor
inc
xor
insl
add
adc
jo
adc
lea
call
sub
into
mov
jno
sbb
lods
subl
fnsave
loopne
pusha
movsl
inc
mov
pop
mov
xor
mov
or
ficoml
mov
mov
push
push
cmp
ret
cltd
xchg
filds
fs
xchg
jecxz
sub
mov
jmp
xlat
add
addr16
xor
lcall
cli
dec
repnz
loopne
loop
outsl
push
ja
and
fidivrs
jb
cmpsl
in
ljmp
rolb
xchg
pushw
dec
insb
jmp
ljmp
stc
lods
inc
test
push
mov
sub
and
fadds
into
movsl
mov
test
movl
loope
lret
fldt
andb
imul
lea
add
fiadds
push
imul
ljmp
aam
sbb
cmp
gs
inc
cld
and
fdivrl
sbb
fstl
mov
dec
cltd
fnstcw
inc
inc
mov
pop
push
jmp
cwtl
sbb
jo
jb
daa
jecxz
push
pop
inc
daa
iret
scas
mov
push
and
xchg
mov
or
fldcw
dec
rorb
mov
and
xor
push
in
mov
push
pop
rorl
std
imul
outsl
sbb
notl
in
mov
out
popa
mov
or
aam
outsl
sub
add
adc
mov
cmpsl
ds
pop
add
pop
enter
sub
fstl
adc
add
rcl
mov
test
push
int3
push
mov
mov
lret
pop
push
and
stos
cmp
ss
into
bnd
cwtl
pop
mov
mov
push
mov
es
pop
jg
inc
and
xchg
push
mov
xor
push
movsb
push
test
sahf
les
test
mov
mov
sub
leave
jp
mov
fcoms
clc
inc
inc
mov
pop
add
mov
test
aaa
daa
into
push
icebp
jp
inc
add
xchg
ss
add
loopne
mov
idivb
je
jbe
inc
add
pushf
jae
fidivrs
adc
repz
ret
out
cmp
out
pushf
push
and
daa
test
push
mov
xchg
call
mov
push
mov
je
divl
sti
inc
std
mov
fxam
mul
aas
mov
std
adc
test
push
mov
sbb
test
push
je
shlb
mov
inc
lods
pop
jmp
movsb
sub
subl
test
lret
jg
jae
fcmove
or
dec
std
lcall
cmp
fldcw
lods
pop
lds
mov
out
aad
fwait
jp
je
cmp
cmp
mov
add
not
adc
xor
push
adc
in
mov
cmp
imul
loope
xlat
aad
test
cmpsl
movhpd
cmp
mov
movzbl
push
jno
cmp
sbb
int
sti
or
loopne
mov
jae
hlt
mov
cmc
mov
repz
out
and
xor
push
or
mov
add
mov
stos
xchg
inc
movsb
adc
mov
add
pusha
pusha
cmp
pushf
int
fwait
lret
xchg
cmp
stc
jno
jno
mov
pop
inc
rcrb
lahf
jmp
ret
push
dec
push
and
scas
jle
sbb
rorb
and
mov
loopne
push
adc
enter
test
push
popl
cmpsl
jmp
mov
fiaddl
xlat
mov
add
arpl
jnp
lret
pop
int
ret
xchg
stos
lock
xchg
and
outsb
sub
je
rol
repnz
fists
jl
push
cmp
sahf
lcall
in
sub
adc
sbb
das
inc
push
cmc
pop
mov
adc
sub
sub
mov
or
neg
repz
sub
xchg
sub
stos
std
fsubrl
push
in
mov
or
imul
pop
sarb
icebp
push
test
mov
mov
lods
add
push
and
mov
mov
mov
mov
mov
dec
cli
sbb
jae
add
jno
add
ja
gs
mov
test
nop
gs
test
outsl
cmp
in
mov
mov
sub
scas
fdivrl
es
cs
mov
mov
ret
fs
imul
jnp
and
js
aam
and
icebp
push
xchg
dec
into
push
adc
mov
out
adc
add
out
push
insb
mov
jne
inc
int
inc
add
lretw
and
loope
mov
sub
loop
and
inc
sbb
fwait
bound
test
imul
nop
jle
jns
xor
sahf
std
pop
or
mov
inc
mov
data16
pop
test
and
aad
test
popa
mov
mov
jl
bound
jle
pop
mov
sub
shl
sbb
add
xor
dec
xchg
nop
jbe
xor
js
rorl
xchg
int3
push
add
xchg
lods
push
mov
movsl
xchg
and
cmpsb
push
sbb
imul
daa
push
out
pop
jecxz
push
aad
xchg
push
testb
dec
cmp
add
mov
mov
out
insb
xor
jg
push
mov
shll
iret
pop
fwait
sbb
lock
call
ffreep
std
pop
sub
imul
jo
cmp
out
pushf
gs
or
pop
jecxz
lcall
out
add
add
sahf
and
fcmovb
sub
insb
jbe
repz
sbb
mov
sbb
xor
jl
adc
out
insl
jae
push
add
jl
push
jg
lahf
shrb
mov
mov
outsl
pop
and
jle
or
xor
pop
cwtl
mov
jmp
stc
and
pop
mov
xchg
mov
ret
pop
jl
aam
loop
scas
mov
lahf
pop
pushf
xor
and
jmp
scas
cld
xchg
mov
push
mov
dec
ret
lods
or
inc
aas
mov
and
sbb
cmpsl
pop
sbb
dec
lcall
mov
xor
jo
iret
mov
das
imul
data16
addr16
and
ret
push
jo
arpl
and
dec
sub
lea
es
cli
sub
xchg
dec
movsl
pop
inc
jge
leave
push
adcl
mov
outsb
mov
mov
scas
out
les
ja
ds
hlt
mov
repz
lods
pop
imul
cmp
mov
insb
jmp
jo
pusha
in
xchg
mov
ljmp
test
lcall
fs
fptan
dec
out
and
mov
push
inc
bound
lods
sub
jne
push
pop
andl
inc
or
adc
int
nop
adc
iret
xchg
pop
jmp
in
sub
sahf
inc
mov
sbb
push
test
lods
cwtl
push
sub
push
stc
push
push
push
dec
ja
pop
leave
sbb
mov
jnp
cltd
xor
cmp
or
icebp
or
test
inc
orl
and
dec
notl
sbb
mov
leave
xchg
ret
outsb
mov
and
mov
cld
sbb
xchg
fldenv
popa
mov
cmp
xor
loop
in
andb
hlt
inc
mov
sbb
mov
cli
incl
gs
loope
lcall
and
stc
xor
aaa
lcall
inc
test
sub
sarb
daa
cmp
nop
mov
sub
aas
adcb
xor
cwtl
insl
xchg
cld
call
pop
bnd
fidivrl
or
sbb
mov
mov
xchg
jecxz
je
cmp
nop
sbb
fisttps
xchg
pop
data16
push
sub
loop
arpl
ss
sti
mov
jo
dec
jl
cmp
loop
pop
dec
fdivp
xchg
fldenv
xor
mov
out
outsb
and
iret
in
insb
xor
in
fnstsw
add
cmp
and
lahf
or
or
pop
movsl
loope
xor
cmpsb
cmp
lcall
jb
rclb
jmp
loopne
jecxz
mov
dec
out
rorl
adc
hlt
xlat
mov
xchg
pop
pop
es
pop
lret
lahf
sub
pop
pop
jae
add
xchg
sti
sbb
rcr
movsb
mov
cmpsl
push
mov
icebp
push
cld
sbb
or
and
imull
scas
cmp
push
call
aas
popf
testb
sub
push
fwait
push
and
mov
test
inc
xchg
add
mov
outsb
andl
push
out
pop
and
aaa
test
jae
push
cs
dec
add
sti
pop
cmpsl
in
pop
adc
lahf
or
mov
sub
adc
call
cs
cmp
dec
sbb
sarb
fwait
inc
or
enter
or
jb
js
xchg
jb
roll
adc
je
jb
push
mov
cmp
lods
out
jmp
mov
gs
in
mov
mov
std
add
ret
mov
xor
mov
ljmp
mov
sbb
in
daa
addr16
dec
fs
pop
cmp
sbb
add
cmp
cmp
inc
out
adc
imul
fs
fstp
mov
fidivs
stc
xchg
enter
pop
jmp
mov
xchg
loope
inc
xchg
xchg
aam
pop
nop
fisubs
lea
xorl
xchg
or
push
sbb
push
or
push
sbb
enter
call
ljmp
mov
ret
dec
bswap
sub
adc
aam
and
leave
or
dec
or
or
cmpsb
nop
lret
inc
jb
stos
ret
dec
mov
push
cmp
jmp
mov
mov
xlat
inc
cli
xlat
sbb
movsl
mov
push
adc
inc
imul
enter
pop
fwait
pop
mov
pop
lods
dec
cmc
outsl
mov
sarl
xchg
ss
pop
movsl
das
push
mov
jns
pop
repz
add
movsb
add
dec
mov
jns
rcr
sarl
repnz
sub
cmp
xlat
or
push
sub
in
sbb
stc
negb
push
mov
fptan
dec
ds
imul
mov
emms
xchg
xor
xor
mov
xor
dec
jp
ss
jb
xlat
push
mov
inc
ret
loopne
push
mov
movsb
dec
aaa
dec
insb
mov
lret
fcoml
sub
add
adc
mov
adc
xor
xchg
pop
mov
fldenv
icebp
sub
cmp
stc
fsubs
fmull
std
push
out
scas
pushf
pushf
adc
gs
icebp
sbb
test
xchg
bound
sub
add
or
push
adc
inc
std
inc
mov
cli
in
sarl
inc
test
jmp
mov
pop
inc
add
adc
push
rcl
in
xchg
push
xchg
sub
jp
lcall
flds
leave
push
nop
mov
and
mov
mov
imul
lock
pop
dec
loopne
divl
mov
lock
lods
adc
push
xchg
mov
in
jmp
jno
pop
mov
shlb
pop
add
dec
push
fs
push
jb
mov
aas
es
mov
or
sub
movsl
je
add
xlat
mov
out
inc
mov
push
mov
and
inc
shlb
xchg
push
loope
dec
stos
data16
repnz
mov
xchg
adc
ja
inc
popf
test
sbb
aaa
xor
and
out
jo
mov
ds
jmp
scas
and
aam
jo
std
into
mulb
outsl
dec
repz
jbe
pushf
mov
xor
and
pop
pusha
int
xchg
mov
cmp
fdiv
mov
or
ror
fwait
or
out
sahf
push
test
xor
cmc
jo
lods
test
outsb
push
cmc
dec
out
inc
inc
jbe
or
loope
fwait
enter
adc
mov
push
bound
mov
xor
sbb
orl
sub
sbb
push
mov
mov
in
push
mov
hlt
push
stos
jmp
jae
inc
clc
mov
inc
adc
cmp
cmp
jno
pusha
cmpsb
push
cmp
dec
outsb
loopne
outsl
mov
xchg
lock
ret
push
pushf
xchg
jp
scas
inc
add
test
mov
fistpl
imul
cmpsl
in
adc
out
add
js
mov
push
sahf
mov
sahf
add
lcall
stc
das
sub
mov
mov
push
dec
rorb
mov
addb
mov
dec
mov
push
pushf
arpl
addb
xchg
cltd
sahf
rcr
or
mov
mov
imul
ror
hlt
pop
mov
sbb
mov
cmp
mov
ficompl
cmc
fcmovb
mov
dec
hlt
cmpsb
inc
adc
shll
stc
pop
es
xchg
cltd
pop
in
neg
mov
or
stos
ret
pusha
into
sti
add
leave
xor
aam
pushf
outsb
test
jl
into
mov
outsb
in
sub
adc
jg
or
xchg
outsb
int
lock
dec
xchg
fldcw
dec
sub
into
cmp
push
adc
leave
out
int3
jl
push
lcall
push
xchg
and
cwtl
out
sub
fdivr
pop
ja
cmpsw
sbb
arpl
test
mov
add
js
dec
jno
arpl
adc
xor
stos
adc
dec
xor
cmpsb
mov
cmpsb
push
cmp
out
outsb
mov
pop
lret
push
aad
sub
cmp
or
cmp
bound
shrl
xchg
outsl
or
sbb
sar
dec
mov
std
rcrl
mov
int3
pop
pop
xchg
test
cltd
pop
cltd
cltd
add
ljmp
pop
popf
xchg
and
push
daa
jns
adc
and
movsl
rcrl
push
jg
add
lcall
sub
imul
mov
cmp
mov
dec
sub
outsl
loope
cmp
xor
bndstx
out
lret
or
mov
call
inc
jp
shrl
pop
lds
sbb
inc
daa
lret
xchg
cmc
test
into
hlt
cltd
or
xchg
sub
or
popa
dec
push
fnstenv
lock
std
repz
sbb
lea
mov
xchg
and
fldcw
into
mov
fidivrs
mov
insb
pusha
mov
fisttpll
sbb
mov
lahf
ss
xchg
mov
jno
inc
mov
cs
dec
ret
aad
lea
or
dec
out
test
sub
std
xchg
push
cs
cld
mov
mov
cld
fistpl
inc
and
mov
sbb
push
jbe
repnz
mov
fadd
xchg
and
or
xchg
fneni(8087
add
mov
lret
ror
mov
xor
push
push
xlat
fdiv
mov
jne
test
pop
icebp
push
mov
sahf
stos
ret
jo
pop
ljmp
out
jp
arpl
fdivrs
inc
mov
stos
dec
cmp
in
lret
and
cmpsb
insb
or
imul
push
and
jbe
lret
inc
add
dec
jo
xor
std
movsb
and
lds
xorl
jle
inc
pop
mov
mov
add
stos
jb
jno
outsb
lcall
adc
lods
push
scas
shrb
xchg
inc
scas
adc
in
sbb
clc
push
mov
popa
cmc
sbb
jae
mov
fs
nop
push
scas
xchg
sbb
shlb
mov
push
fildll
jns
mov
jb
mov
dec
and
stos
and
pop
enter
hlt
paddb
popa
nop
dec
jne
mov
cwtl
cwtl
out
jl
or
and
sti
adc
outsb
pop
out
repnz
xor
push
mov
xchg
in
lret
leave
rcrl
pop
add
mov
repz
fdivrl
mov
cmc
lahf
mov
dec
pop
shrb
in
mov
mov
add
adc
adc
out
lret
cwtl
arpl
popa
pop
and
mov
cli
cmpsl
cmc
xor
shlb
inc
sub
dec
inc
mov
mov
cmp
adc
xchg
xor
pushf
adc
in
xor
loope
lods
sbb
aam
xor
xchg
scas
jp
or
sbb
push
add
sbb
mov
dec
xchg
xchg
subb
mov
ja
rclb
imul
cmpsb
notl
adc
dec
test
out
loopne
aaa
jmp
lea
arpl
sub
popa
pop
or
movsl
mov
mov
fsubrs
jnp
adc
or
or
xor
fiaddl
push
sbb
pop
mov
xchg
push
xor
mov
and
cmc
push
lcall
pop
jbe
dec
lods
loop
adc
mov
jbe
test
fisubrl
lahf
adc
mov
push
push
insb
pop
notl
xor
inc
sbb
imul
bound
call
add
je
mov
mov
adc
pop
add
push
test
addr16
sub
testb
test
test
push
test
cmpsl
lahf
xchg
cmp
repnz
lahf
stc
jno
push
add
rorl
andl
scas
insb
popa
dec
xor
or
jg
out
clc
jae
xchg
cmpsl
movsl
cmc
into
movsb
dec
mov
xchg
stos
jno
clc
lahf
loop
pusha
les
pop
adc
out
test
add
push
inc
lock
out
jae
sub
lahf
testb
mov
sahf
dec
sub
xor
pand
and
in
jl
cmp
and
cmp
fwait
xor
or
jbe
mov
dec
jp
sub
pop
xor
fildll
push
fimuls
cmp
sbb
popf
fisttpl
int
mov
rcrb
es
ljmp
pop
or
stos
pop
jns
pusha
mov
aad
aad
and
clc
push
xchg
mov
in
gs
jmp
cwtl
mov
test
rcll
iret
rclb
jl
loopne
push
push
movsl
push
or
cld
incb
xchg
fldt
push
mov
aas
mov
call
push
or
imul
lds
jl
adc
adc
sub
dec
mov
je
or
jecxz
shlb
popf
js
jle
mov
clc
leave
loope
mov
push
leave
jg
xlat
sbb
loope
push
xchg
add
stc
sub
data16
and
pop
loope
fcomps
jg
std
lret
cld
mov
int3
pop
lret
xchg
dec
test
push
cwtl
lods
pop
hlt
sbb
xor
add
inc
xchg
mov
jo
adc
or
sti
in
iret
stos
pop
aad
jle
mov
dec
fildll
xor
out
or
call
shrb
fwait
inc
dec
call
inc
fdiv
sub
sub
add
xlat
mov
push
xor
mov
xchg
fstp
lret
mov
push
adc
jl
int3
mov
insl
lahf
dec
dec
adc
pop
inc
shl
out
xchg
pusha
in
test
jb
ljmpw
in
and
jno
popa
aam
mov
mov
jmp
gs
rolb
adc
ss
repnz
sbb
enter
iret
cmp
push
in
das
test
add
mov
in
repz
push
add
add
and
fnstenv
test
pop
sti
xchg
push
ljmp
mov
mov
adcl
push
and
pop
iret
scas
fcmovnbe
inc
inc
adc
pop
cwtl
mov
add
xor
pop
sbb
inc
fs
rclb
movsl
bswap
dec
sbb
push
xchg
jmp
cmp
jl
movsb
ret
sub
jne
les
pop
jo
push
nop
jmp
sbb
xadd
cli
sbb
cmp
sub
or
ss
stos
sub
out
mov
data16
add
lret
and
inc
popa
xorb
or
dec
bound
pop
pop
flds
test
inc
xchg
out
mov
test
in
fimull
jmp
jne
sti
mov
std
jns
adc
jno
addb
aad
mov
jecxz
in
movsb
fwait
dec
xchg
adc
sub
sub
or
ds
and
sbb
repz
and
shr
and
sbb
ss
add
loope
outsl
loope
sub
mov
lock
pusha
stos
callw
popf
fsub
in
jecxz
cmp
xor
or
repz
push
pop
jb
mov
rclb
pop
mov
sub
inc
rcl
cmpsb
int3
insl
push
xchg
cli
xchg
xor
cmp
icebp
scas
lods
cmp
mov
inc
rolb
xchg
sbb
enter
ret
clc
pop
sbb
xor
test
and
jl
adc
adcb
jmp
imul
in
xchg
fldcw
out
test
adc
orl
std
jno
lahf
inc
jne
push
in
dec
cmp
or
add
in
mov
in
movsb
pop
and
pop
mov
fwait
jb
cmpsl
sub
sub
and
outsl
loop
add
jmp
filds
imul
das
dec
cld
mov
mov
mov
ljmp
mov
mov
ss
cmpsl
jl
dec
xchg
inc
clc
cmp
lahf
fsubr
and
stos
movsb
jnp
call
dec
mov
div
cmpsb
sti
inc
outsb
jge
push
ss
sub
sti
push
stos
jnp
or
cmpsb
in
pop
mov
pop
inc
jns
neg
insl
ret
std
sbb
sub
fists
push
ja
mov
leave
rclb
negl
jg
jns
xor
pushf
insb
xchg
lea
sub
push
mov
add
mov
mov
ss
pop
insl
xchg
sub
movsb
mov
jp
into
adc
notl
shlb
pop
rorb
fs
ss
mov
in
jp
cmpsb
mov
and
inc
mov
xchg
xor
sahf
in
rcll
jp
push
jb
push
mov
dec
sub
cmp
rcl
cmp
fwait
movsb
pop
pop
mov
dec
or
cld
insb
ret
subb
jne
cld
test
mov
fnstsw
push
in
push
inc
sub
mov
sub
or
fnstenv
pop
insb
sbb
mov
adc
sub
sarb
iret
or
imul
xchg
cmp
cli
xor
out
mov
jnp
jae
fdivl
jg
xor
cltd
fadds
lret
rep
std
int
inc
xchg
pop
lea
test
jp
or
xor
test
test
mov
fnstsw
jne
loope
jecxz
sub
imul
xor
push
sbb
inc
pop
dec
xlat
dec
repz
loopne
jb
dec
push
adc
sbb
cmpsl
ret
xor
fildl
sbb
jbe
push
das
std
test
aam
dec
testb
pusha
or
movsl
jle
add
jno
cmp
rcrb
movsl
cld
mov
pop
cmp
negl
in
lods
fisttps
ret
add
divl
add
jae
mov
mov
adcl
jbe
out
hlt
sbb
shrb
pop
pop
adc
mov
pop
push
pop
aam
and
pushf
jnp
test
cmc
xchg
lret
pop
xor
add
imul
sub
inc
mov
call
sub
fdivl
pushf
push
pushf
aad
adc
repz
inc
cmp
push
outsl
sub
cwtl
jbe
or
lods
cmpsl
mov
mov
adcb
xchg
pushf
xchg
shl
shlb
jl
sar
cli
and
cmp
data16
fisttpll
je
jne
cli
lods
mov
lock
mov
adc
cmp
ficoms
data16
sbb
popf
test
lock
xchg
sbb
xor
arpl
cltd
cmp
sub
sahf
lret
and
fbstp
mov
fisubs
push
cmp
xor
mov
lea
movsl
dec
cs
mov
ljmp
cmp
movsl
iretw
mov
ja
add
mov
fs
lahf
scas
jecxz
test
and
stos
aaa
sbbb
mov
std
xor
xor
sbb
push
xor
enter
mov
sahf
push
std
movsl
jle
cli
ret
jmp
aam
mov
push
push
sbb
ljmp
inc
push
push
mov
xchg
inc
pop
sbb
scas
push
pop
imul
adc
inc
icebp
and
shlb
jmp
push
sbb
hlt
xchg
mov
pop
arpl
sbbb
inc
pop
dec
mov
loop
imul
xchg
cbtw
out
stos
in
add
and
cmp
subl
mov
scas
mov
push
lahf
mov
mov
imul
push
aas
dec
lods
push
ret
scas
lcall
rclb
mov
or
divl
add
push
call
sbb
gs
mov
cwtl
rcrb
ror
push
nop
bswap
arpl
faddl
or
sub
adc
dec
xor
les
aam
in
or
insb
arpl
stc
stc
pop
shrb
ror
pop
popa
insb
pusha
or
das
nop
xchg
and
bound
test
lcall
cmc
test
mov
outsl
mov
decl
pop
mov
fsubl
outsl
cltd
dec
popf
popf
scas
in
sbb
inc
mov
mov
dec
je
stos
iret
out
xlat
adc
mov
inc
and
in
cmp
sub
and
imul
add
cmp
rolb
xorl
pop
and
aad
mov
pop
mov
ds
dec
and
push
mov
sarb
loopne
push
lods
mov
jg
jno
push
cwtl
mov
adc
inc
or
into
push
add
mov
inc
or
dec
dec
lret
lahf
ret
xchg
and
iret
outsb
daa
inc
jns
out
push
lods
out
push
loop
loopne
push
or
mov
push
ss
mov
pop
mov
add
pusha
xor
insl
addr16
push
js
scas
inc
cs
sub
pop
lds
and
sbb
add
pop
sub
std
mov
cmp
mov
add
mov
mov
mov
push
dec
adc
sbb
je
push
sti
ds
das
xor
pop
and
daa
sbb
sub
rclb
cmpsb
lock
push
pop
jne
scas
fsubs
jbe
popf
xchg
fs
out
das
add
mov
jl
adc
mov
mov
cmp
iret
int3
dec
dec
push
lds
jne
pop
jbe
fxch
addr16
data16
mov
movsb
data16
in
inc
cmpsl
cmp
and
xchg
xchg
mov
lret
in
call
and
scas
inc
outsl
flds
ret
test
les
leave
sub
aaa
call
ds
jns
cmp
ret
es
nop
xchg
sahf
cmc
int
gs
jmp
aas
les
out
rcll
push
pop
loope
dec
sbb
out
fwait
lods
ja
lods
cmp
cmp
ret
in
jnp
or
lret
xor
int
lret
gs
adc
stc
xchg
cmpsl
xchg
daa
xchg
jbe
cltd
scas
push
nop
imull
mov
addr16
push
lcall
movsb
push
and
rorl
xor
push
pusha
jecxz
jmp
adc
filds
mov
imul
out
xchg
insl
ret
push
push
jmp
pop
jg
mov
cmp
imull
mov
test
mov
ret
je
mov
lea
xor
arpl
mov
loope
xor
lret
rcr
and
mov
jb
test
movsl
xchg
dec
sbb
lock
sub
in
scas
int
popa
sbb
inc
add
out
sbb
cmp
pop
sbb
push
cltd
inc
cwtl
testb
cmp
cmp
addr16
sub
pop
dec
jno
adc
ss
notl
sub
inc
pusha
cmp
or
inc
pop
lods
push
xchg
sbb
mov
sbb
out
sub
addr16
imul
lds
shlb
push
stos
or
sbb
xchg
adc
xchg
xchg
sbb
out
faddl
inc
cmp
pop
icebp
jne
add
jb
in
and
mov
pushf
test
ror
or
xchg
scas
into
push
scas
or
or
push
ret
and
push
xchg
mov
loopne
sbb
inc
fldcw
mov
in
mov
movsl
fnstenv
pushf
lahf
imul
lods
adc
enter
leave
stos
lret
int3
lods
mov
and
adc
mov
outsl
jb
repnz
shll
push
daa
sub
icebp
pop
jecxz
les
fistl
inc
xchg
subb
push
pop
push
inc
imul
xchg
jnp
jmp
or
jge
je
ss
test
cmc
outsl
push
repnz
fnstenv
cmpsb
inc
mov
ss
loopne
frstor
outsb
lret
sahf
and
in
and
jp
dec
int3
cmp
call
notl
xor
scas
mov
stos
jl
inc
in
xchg
hlt
and
insl
daa
aaa
adc
pop
pop
lret
push
inc
adc
aas
pop
call
sbbb
mov
ror
cwtl
jnp
jp
lock
dec
leave
cmp
negl
sbb
xchg
mov
loop
jle
push
sbb
jle
loopne
dec
jne
mov
pop
xor
out
xchg
xchg
or
lcall
mov
mov
xorl
xchg
mov
cli
leave
push
adc
mov
imul
xchg
xchg
mov
inc
or
adc
rcrb
add
add
mov
fwait
mov
fnstcw
mov
lods
push
pop
mov
sahf
repz
cs
mov
dec
lods
cmp
in
mov
loope
dec
jbe
sub
sbb
push
mov
in
cmp
inc
mov
mov
jle
dec
dec
adc
xchg
push
dec
pop
ret
pusha
push
mov
ss
lret
lds
gs
sbb
mov
add
daa
push
cs
push
add
jmp
ljmp
std
push
in
lods
xor
sahf
cltd
add
loopne
push
xchg
stos
xchg
xchg
jle
inc
inc
jnp
mov
je
add
out
out
lret
pop
sub
ret
and
adc
fxch
jno
popl
dec
scas
fwait
iret
shll
js
pushf
fcomi
dec
sub
imul
mov
adc
push
js
sbb
lods
out
push
scas
pop
iret
dec
fwait
pop
lods
sbb
or
mov
cwtl
hlt
enter
xor
mov
cld
push
adc
pop
test
loopne
cld
cltd
and
add
ja
pop
imul
mov
cwtl
into
xor
iret
mov
push
xchg
hlt
outsl
pushf
pop
sbb
dec
cs
cmc
mov
sarl
js
mov
arpl
pushf
stc
filds
jp
sub
in
rcrl
xchg
fmulp
lods
mov
push
xchg
imul
pop
orl
call
jmp
cmp
gs
mov
daa
jl
push
add
fwait
sbb
loopne
jne
xchg
xchg
jne
pop
psrld
push
leave
gs
cmpsb
aas
dec
and
cmc
cmpsb
jge
fisubrl
mov
adc
cmp
leave
loopne
jbe
cltd
rcl
jb
pop
xchg
xor
cmp
int
movsb
mov
je
pop
andb
xchg
aam
or
test
sbb
mov
les
push
insl
icebp
test
pop
loop
jecxz
inc
jb
mov
test
movlps
mov
std
sub
insl
fmulp
sub
inc
xchg
xor
jne
std
xor
jns
sbb
in
lea
pop
sahf
pop
enter
ja
lahf
gs
and
jo
ret
and
imul
aaa
fwait
inc
cmpsl
shll
pop
sub
dec
les
popl
les
mov
out
daa
lcall
inc
cmp
mov
test
xchg
ficomps
test
cld
hlt
xchg
mov
lret
push
loope
jb
sahf
push
icebp
mov
xchg
fildll
fs
in
add
jns
push
mov
pop
push
mov
std
inc
aad
xor
adc
sub
mov
imul
idivb
mov
int
icebp
jmp
dec
test
faddl
jle
cmp
lea
add
xchg
sbb
push
nop
mov
lock
xchg
dec
mov
and
inc
xchg
mov
xor
repnz
or
dec
dec
je
stos
test
mov
lcall
stos
add
mov
jb
push
pop
cmp
xlat
inc
cmc
jl
pop
nop
fidivrs
iret
mov
adc
ret
in
pop
mov
nopl
lret
pop
arpl
pop
inc
xchg
mov
dec
push
js
cmp
sub
int
scas
scas
out
jmp
rorl
add
push
mov
inc
and
or
cmp
sub
test
loop
js
mov
add
xorb
ss
mov
loope
insl
sbb
scas
or
push
loope
leave
pop
aad
xchg
adc
lret
push
std
sub
std
xor
loopne
subb
sub
mov
shll
aaa
out
pop
add
fs
iret
daa
adc
push
sbb
sub
pop
pop
mov
mov
jg
and
cmpsl
or
jno
pop
sbb
push
test
repnz
int3
and
in
add
fnstenv
out
cld
cld
cli
cmc
xchg
and
adc
mov
jmp
mov
jge
cmpsl
test
push
aad
test
aam
mov
sti
leave
out
int
or
cmp
mov
gs
stos
cmp
dec
ret
jns
bound
clc
xor
mov
pop
add
pop
sbb
mov
out
mov
jmp
pop
push
adc
jne
ss
sbb
adc
add
in
out
pop
aad
mov
dec
inc
mov
mov
cmpsl
pop
dec
scas
in
mov
shrb
loop,pt
ja
push
popa
mov
lock
dec
aam
mov
sbb
push
mov
ljmp
sbb
es
cmp
mov
add
xor
and
dec
inc
ja
or
dec
mov
or
or
mov
push
scas
jl
cmp
adcb
or
pushf
lahf
ss
inc
xor
insb
jno
scas
mov
xchg
add
jle
fst
lcall
sbb
cwtl
and
push
sbb
rclb
pop
pop
dec
roll
xchg
adc
pusha
mov
fxch
mov
xchg
cmp
mov
cmpsl
arpl
push
ss
mov
nop
and
lcall
mov
jle
fldt
xchg
xchg
hlt
out
push
mov
roll
and
jns
add
pushf
or
mov
pop
mov
sub
inc
push
lods
lods
pop
sub
shrl
mov
xor
xchg
xchg
stc
and
mov
rcll
cmc
inc
les
sarb
shll
inc
inc
hlt
inc
lods
inc
out
jge
lret
adc
sti
pop
lods
or
pop
notb
cwtl
pop
mov
int
jnp
push
push
gs
fcmovnu
cmp
ja,pn
outsl
lea
pusha
cld
sub
sub
and
xchg
dec
mov
rclb
mov
dec
outsl
push
pop
or
dec
xorb
ret
pop
inc
sub
stos
imul
jno
add
outsb
inc
inc
lea
mov
andb
mov
pushf
mov
not
sbb
adc
pop
sti
in
lret
adc
and
xchg
add
and
xchg
mov
dec
jo
push
xlat
mov
movsl
sbb
add
mov
inc
jp
and
scas
in
mov
sbb
cmp
aam
rcrb
sub
insl
lcall
shrb
jno
push
mov
adc
lods
stos
sub
ficomps
insb
jg
mov
sub
mov
adc
xchg
xchg
inc
aam
dec
mov
mov
pop
push
and
scas
int
sub
sbb
insb
add
or
mov
adc
pop
ret
pop
jae
std
adc
stc
sbb
jbe
subb
fimull
or
mov
stos
loope
add
sub
pop
sub
int
test
mov
mov
shlb
push
mov
mov
mov
sti
cmpsl
rclb
in
mov
insb
and
in
cmp
popf
rorb
mov
int3
and
aad
fisttps
fmull
int
or
scas
pop
jbe
inc
sub
push
lret
push
cmpsl
xchg
int3
dec
cmp
loop
sarb
pop
lods
xlat
in
scas
fildl
add
movsl
cmpsl
icebp
scas
or
loopne
stos
xchg
lret
int
rcrb
mov
sbb
sbb
decl
add
lds
push
mov
mov
jb
cmp
pop
inc
mov
xchg
ret
lret
out
cmpsb
lods
into
out
add
leave
int3
xchg
stc
sub
fidivrs
and
gs
cltd
pop
adc
mov
sahf
xchg
sarl
lea
xchg
pop
xor
jnp
push
pushf
push
push
mov
mov
xlat
movsl
fcoml
mov
or
push
sahf
and
mov
mov
mov
dec
outsl
mov
cli
dec
js
push
dec
mov
sbb
add
and
nop
shl
into
aaa
cmp
cmp
outsl
nop
or
mov
jl
inc
lahf
cmovno
cltd
rcr
imul
jg
mov
jmp
into
iret
out
and
add
movsl
mov
test
mov
jnp
or
inc
lcall
sbb
mov
in
xchg
insl
dec
movsb
cld
xor
popf
sub
pop
mov
movsl
out
rol
jmp
lret
add
dec
jns
jne
cmc
rcl
fwait
cli
push
cmp
add
sub
cmp
mov
es
inc
push
das
es
into
push
es
xor
pop
push
dec
lret
scas
into
ficoml
xchg
sbb
inc
call
xchg
stos
lahf
mov
call
xor
jge
in
decb
push
cmp
testb
imul
lods
jae
sbb
sbb
and
dec
pop
mov
out
faddl
sub
das
in
dec
inc
push
xor
outsb
movsl
popa
aaa
xor
ljmp
xor
cli
ficoms
cmp
int3
mov
bound
mov
loopne
sub
sub
lods
xor
les
xor
rclb
in
jb
dec
push
pop
sarb
addl
sahf
mov
loopne
out
xor
movsb
xchg
jns
pop
push
and
pushl
enter
adc
test
test
pop
mov
ja
fidivl
out
insb
dec
cmpsl
shr
pop
mov
push
jge
mov
insb
jle
inc
jnp
call
dec
dec
xchg
idivb
mov
inc
push
popf
pop
lahf
scas
lods
fildll
stc
mov
and
rolb
ds
test
mov
repz
nop
pop
int
adc
mov
inc
xchg
mov
inc
add
int3
rorb
shlb
jo
xchg
cmp
pop
outsb
xlat
pop
je
clc
and
test
lods
xor
fwait
xchg
add
pop
scas
xchg
call
xchg
jmp
add
out
incb
sub
addr16
cmp
stos
add
rcll
and
mov
jne
arpl
fcomps
ds
fsubs
mov
sbbb
pop
mov
adc
fnsave
out
xor
aad
aaa
pusha
fs
popa
jae
stc
or
push
pop
sbb
sahf
adc
adc
insb
frstor
add
mov
sub
gs
push
repz
sahf
int
movsl
mov
inc
add
add
popa
pusha
mov
cltd
cmp
sub
call
loope
call
inc
mov
mov
mov
cmc
mov
imul
dec
popa
mov
xchg
iret
int3
in
lcall
nop
push
nop
test
scas
add
xor
push
inc
xchg
sti
pop
push
fdivrs
mov
repz
negl
mov
cmpsb
or
les
pop
jmp
sub
jb
sbb
cli
aaa
cld
dec
xchg
and
or
push
and
push
xor
jne
or
flds
push
lret
and
repnz
pop
sti
shrb
sbb
lcall
sahf
je
in
lock
imul
and
insl
mov
xchg
popa
js
inc
jnp
cmpsl
sub
xor
ss
mov
pop
mov
jo
add
push
dec
pop
mov
mov
aad
dec
loopne
sbb
push
lahf
xchg
push
adc
cmpsl
jo
inc
enter
repz
lcall
mov
dec
out
xor
xchg
out
xchg
call
mov
or
mov
and
mov
inc
shrb
sbb
mov
push
and
out
jne
bound
pop
and
mov
push
inc
jb
mov
pop
test
icebp
dec
outsl
testb
fs
popf
push
push
push
inc
dec
sbb
fistpl
push
dec
mov
into
fsubs
mov
push
test
ret
pmulhuw
bound
aam
dec
mov
test
das
sbb
scas
jmp
mov
test
aam
in
insl
and
cli
test
lahf
aas
inc
shlb
loop
sahf
mov
movsb
out
xor
sbb
cld
push
leave
dec
cmp
and
pusha
cwtl
addb
pop
cmp
xchg
or
mov
leave
push
data16
cmc
jbe
iret
xchg
jne
movsl
mov
out
push
push
popa
or
arpl
pop
mov
jne
ds
loopne
xor
push
push
mov
cltd
insb
sti
cltd
lds
push
arpl
call
aaa
les
push
sub
divb
lods
sub
scas
pusha
pop
lods
jg
or
push
xchg
add
pop
testb
xor
fwait
push
sbbb
mov
jl
xchg
xchg
cmp
inc
xor
leave
pand
je
aas
sbb
mov
sub
and
sti
out
loop
mov
or
inc
dec
and
xor
frndint
push
dec
jle
sub
add
mov
push
jae
or
mov
dec
jnp
dec
xchg
mov
test
shl
push
fdivrl
pop
icebp
jle
dec
push
cmp
push
mov
fisubrs
sahf
adc
fsubs
popf
cmp
mov
pop
incb
inc
sub
sub
clc
sub
dec
push
adc
xlat
add
pop
dec
out
rcrb
movsl
aad
clc
testl
add
aas
dec
add
movsl
decb
mov
xor
jl
repz
loop
sbb
das
and
cmp
loopne
pop
jecxz
not
jg
cmp
das
cli
arpl
and
mov
shr
insl
xor
pop
xor
fsubrp
dec
adc
adc
in
push
adc
xchg
pop
jmp
in
test
les
push
xchg
pusha
shr
push
add
inc
in
insl
insb
arpl
cmp
divl
jb
aas
pop
sbb
stos
in
adc
inc
mov
pop
pop
repnz
std
jg
inc
mov
mov
sbb
lcall
xor
ficomps
inc
adc
sbb
hlt
lret
inc
mov
inc
adc
sbb
movsb
pop
or
pop
xlat
xchg
adc
push
cwtl
mov
add
xchg
inc
dec
mov
fstps
mov
inc
jnp
push
cli
imull
jno
fmull
fldcw
jae
out
in
adc
xchg
clc
sbb
addr16
lods
mov
mov
adc
nop
movq
or
test
cld
cmc
add
ds
inc
clc
cld
inc
cmp
mov
inc
push
cmp
xor
je
enter
sbb
pop
cmc
xchg
arpl
jae
icebp
and
shl
bound
and
jae
arpl
xor
adc
and
mov
decl
popf
jecxz
sub
cwtl
pop
mov
lds
imul
adc
ds
mov
mov
incb
mov
xchg
inc
ficompl
or
add
pop
xchg
xchg
out
inc
mov
or
add
inc
cwtl
pop
sbb
jo
iret
jecxz
pop
mov
int3
xchg
or
out
adc
adcb
inc
stos
add
pop
pop
push
sub
hlt
stos
xor
lock
icebp
pop
lcall
sbb
mov
in
insl
into
pop
or
xchg
push
int3
adc
popa
sti
push
fadd
repnz
mov
dec
or
mov
jl
hlt
lock
mov
les
mov
lret
xor
pop
push
mov
lret
fcompp
push
jecxz
mov
bound
in
cmpsl
or
jbe
fldlg2
jmp
mov
movsl
ja
maxps
pushf
andl
push
in
aam
es
mov
or
aad
pop
and
inc
in
or
mov
xchg
jl
test
cmp
fsubl
mov
pushf
es
jl
inc
or
imul
lds
dec
cld
shrl
sub
cmc
xor
dec
sahf
mov
aas
xchg
sbb
mov
adcb
pusha
mov
sub
push
pusha
xlat
bound
xor
add
cmp
call
hlt
int3
pop
mov
int3
aad
push
mov
xchg
or
out
stos
adc
xor
insb
dec
mov
fisubl
pop
outsb
fldl
or
xchg
test
pusha
inc
pusha
ret
mov
mov
pop
filds
jns
inc
mov
in
xchg
test
and
fsubrp
addr16
lret
sbb
lahf
cwtl
out
mov
mov
xlat
xchg
push
int
jmp
jbe
mov
push
jnp
pop
add
push
mov
fidivl
inc
mov
sti
xor
loop
je
add
pop
jp
imul
mov
and
clc
rolb
movsl
mov
scas
sbb
sti
popf
push
add
sub
shll
aam
sbb
sub
daa
jne
mov
ds
add
je
pop
inc
lods
roll
xor
add
pop
rcrl
jno
push
add
xor
mov
movsl
add
and
xor
mov
hlt
dec
sbb
and
in
out
or
mov
xchg
inc
mov
cmp
insl
pop
rorl
loop
xor
fwait
xchg
or
or
cmp
inc
add
and
mov
testl
ficomps
bound
lcall
inc
push
es
xchg
mov
loop
cmpb
jecxz
xchg
lcall
sub
cmpb
cltd
ljmp
cmpsl
mov
aaa
clc
rol
popf
fldl
and
test
es
push
push
addr16
jg
inc
xchg
fcom
mov
sub
and
xor
add
sub
sub
mov
cltd
leave
jl
dec
or
cli
dec
add
xor
jmp
adc
sub
pop
cltd
das
mov
cmp
push
int
loop,pn
in
lret
arpl
hlt
fcmovnu
pop
sbb
xor
sbb
dec
test
jl
cmp
aad
mov
mov
insb
fwait
cmp
insb
iret
negl
scas
push
dec
and
loopne
stos
js
fmulp
adc
aam
fs
xchg
je
fstpt
arpl
xor
mov
pop
inc
aam
inc
mov
sbb
add
xor
jp
enter
lods
jae
fsubs
mov
idiv
add
movsb
ret
rorb
or
and
or
xchg
pop
dec
dec
push
and
or
mov
push
mov
int3
test
jno
mov
stos
add
sahf
cs
loop
bound
repz
das
out
loop
mov
call
stc
ljmp
ret
pop
imul
lret
pop
mov
repnz
sbb
nopl
xor
icebp
pop
ret
sahf
lds
ds
pop
cmpsb
daa
scas
sub
movsb
popa
dec
xor
or
dec
cli
outsb
insl
mov
adc
mov
lret
jl
jbe
pop
mov
ss
in
or
cwtl
push
jae
mov
jns
or
out
fildll
add
add
mov
adc
stc
xchg
test
mov
addb
loope
fisubrl
sbbb
jno
mov
jp
int3
sub
cmc
and
xorl
movl
outsl
mov
clc
adc
mov
push
adc
shl
loop
push
dec
inc
mov
mov
gs
xchg
pop
xlat
hlt
jbe
rorb
fstpl
jmp
loop
pop
sbb
pop
xchg
aam
lcall
in
mov
lods
jg
adc
xor
in
test
inc
mov
outsl
and
nop
inc
pop
xchg
fwait
sbb
mov
dec
mov
sti
mov
jb
insb
xor
mov
pop
push
sbb
push
xor
mov
xchg
fadds
out
sbb
imul
xchg
cmp
ret
stos
aas
sub
mov
std
mov
insl
and
lods
mov
sub
les
data16
pop
lret
stos
push
jmp
mov
ficoms
adc
sbb
mov
fidivrs
pop
mov
push
xchg
inc
adc
aad
xorb
add
lock
mov
mov
fwait
jae
sbb
lds
push
adc
push
push
ja
inc
scas
mov
sbb
testl
push
mov
push
mov
pop
fwait
mov
push
stos
xchg
shrb
ret
jbe
daa
adc
xchg
aam
lea
add
or
mov
mov
arpl
lret
mov
sub
fnstsw
and
test
test
out
sbb
int
hlt
pop
mov
inc
fwait
jns
dec
cmp
push
pop
pop
in
aas
pop
xchg
inc
in
cmp
daa
xor
mov
adc
jo
sbb
fisubrs
imul
in
aam
push
cs
xchg
inc
cltd
mov
xlat
jbe
jns
jge
push
inc
sub
rcrl
push
in
cmp
es
test
mov
mov
icebp
gs
push
lret
fsubp
in
decb
int3
inc
pop
and
repz
aad
into
nop
or
xchg
test
mov
cmp
xlat
test
ja
jmp
and
lods
mov
sti
push
subl
inc
jns
sti
insb
sti
xchg
sub
repz
sub
sub
aam
dec
dec
sub
pop
ja
add
inc
popa
sbb
mov
insb
mov
inc
sbb
dec
dec
ljmp
dec
outsl
and
gs
test
mov
out
mov
pop
mov
xorl
mov
xchg
mov
out
int
movsl
dec
pop
push
mov
mov
in
fstpt
sbb
push
std
mov
std
inc
shl
inc
std
sbb
ret
fcoml
xchg
pop
jge
imul
mov
insl
push
xor
rcrl
insl
cmp
sbb
and
ja
fmull
loopne
sti
loope
dec
int
imull
es
loopne
pushf
jp
rol
sarb
mov
negl
out
add
mov
push
fs
subl
ljmp
fnstsw
mov
mov
or
jb
xchg
das
aas
shl
cld
sbb
icebp
jecxz
lcall
testl
jne
mov
mov
cmp
sbb
add
jecxz
rcll
not
mov
mov
inc
mov
sbbb
sbbb
rol
mov
sub
fildll
test
nop
mov
nop
cmp
aas
xchg
and
imul
aas
out
mov
test
cltd
adc
pop
or
mov
subb
int
push
loop
pusha
fisubl
mov
xchg
inc
lods
pop
jns
or
sahf
lret
lods
add
mov
popf
adc
stc
sbb
test
std
insb
and
inc
jle
add
aas
scas
cs
jle
cmp
popf
lds
push
int3
jnp
mov
fisubs
dec
mov
add
or
fcompl
mov
outsl
dec
cmp
lods
mov
jecxz
andb
and
scas
push
xlat
mov
push
pop
rolb
xor
cwtl
jno
pop
and
inc
insb
int
xor
add
rep
cmpsb
in
in
or
out
roll
sbb
cmp
jl
loopne
cmpsl
ljmp
sub
mov
lret
cmp
adc
in
stc
sti
dec
leave
cmp
repnz
pushf
sahf
pop
fiaddl
imul
cmpsl
pop
dec
pusha
subb
sti
cmp
pop
jmp
fidivs
xchg
xor
inc
stos
mov
cltd
xor
mov
dec
fstpl
shll
xor
int3
xor
xchg
leave
and
stc
daa
sbb
or
js
or
pop
xor
cmpsl
js
out
icebp
push
xchg
gs
fiaddl
push
and
cmc
mov
lret
mov
pop
cld
mov
insb
push
cmpsb
repz
pop
push
mov
add
outsb
sub
jp
mov
pop
mov
dec
movsb
lret
pop
or
std
sbb
arpl
cld
mov
je
scas
ss
mov
out
scas
push
hlt
mov
push
or
lods
in
fidivrl
and
and
test
pop
imulb
sbb
hlt
loope
ret
fistpl
mov
insb
sub
and
cli
cwtl
add
sbb
xchg
leave
cmpsb
pop
xor
dec
repz
ficoml
lret
iret
out
test
xchg
sbb
cmp
arpl
fs
popl
push
stc
mov
mov
fndisi(8087
cmpsb
xchg
aad
negb
pop
test
incb
pop
or
sbb
in
inc
icebp
aad
mov
inc
lock
repnz
mov
imul
inc
ljmp
mov
je
adc
shl
and
dec
jb
ss
subl
push
mov
js
mov
loopne
or
loop
cmp
repnz
outsl
mov
movups
js
xor
lret
and
sbb
fs
lret
xchg
rcll
cmp
or
fidivrl
int
nop
adc
addr16
mov
insl
push
mov
push
insl
pop
xor
inc
fldenv
lods
xchg
stc
xchg
mov
jae
mov
dec
add
adc
aad
movsl
xor
popa
push
adc
sub
je
pusha
scas
fprem
xchg
inc
inc
test
int3
jb
iret
or
lcall
incb
jbe
inc
xchg
test
cld
inc
jo
and
mov
xchg
mov
or
sbb
mov
loope
repnz
mov
or
sbb
ds
mov
mov
jns
and
aad
mov
or
dec
bound
test
push
cmp
loop
outsb
rcrl
stc
push
imul
fidivs
push
rolb
call
pop
jo
mov
pop
xor
xchg
rcrl
and
mov
movsbl
add
scas
push
icebp
test
test
xchg
mov
lea
negw
dec
or
jns
add
imul
or
lret
xor
out
cmp
cli
insb
cmp
jl
add
mov
and
and
jmp
loopne
ljmp
rcrl
jecxz
fimull
lock
and
and
int
xlat
jg
inc
pop
stc
fidivrs
inc
push
push
es
dec
nop
hlt
lds
out
push
jb
inc
and
xchg
out
push
cmpl
gs
add
jmp
repz
dec
fdivl
enter
mov
mov
rol
push
jo
mov
or
rclb
or
lret
cmc
add
cli
and
jmp
push
mov
mov
in
fwait
xchg
add
inc
inc
insb
int3
test
sub
insl
aaa
gs
es
adc
inc
pushl
dec
gs
pop
fcmovbe
xor
addr16
mov
fs
stos
xchg
mov
inc
ss
fldenv
shrl
sarl
sbb
mov
pop
adc
roll
fdivr
mov
movsb
pop
movsl
lret
data16
jecxz
cmp
pop
das
push
jecxz
lret
mov
pop
and
daa
sahf
dec
and
loop
dec
ficompl
pop
add
in
jnp
mov
xor
sbb
and
popa
sti
sahf
sub
sub
fmull
cmc
push
cld
sub
sbb
lret
fiadds
sub
dec
or
stos
addb
mov
mov
nop
out
lret
pop
leave
or
xor
pop
out
xchg
ds
mov
mov
data16
dec
add
into
mov
lods
inc
inc
outsb
in
xchg
push
iret
dec
push
cmpsb
dec
in
push
xchg
xchg
add
xchg
ja
leave
adc
negl
sub
das
jbe
jae
dec
push
getsec
push
and
mov
in
and
lret
jae
sbb
ficoml
pop
aad
mov
clc
loop
adc
push
mov
in
mov
sub
ret
pop
cld
sbb
sahf
lcall
push
and
rcll
xor
or
mov
or
mov
inc
jl
adc
sub
cmp
je
push
loopne
jecxz
dec
pop
push
popf
icebp
sub
jae
mov
stos
je
or
pop
push
testb
cwtl
mov
push
inc
stc
dec
loopne
jae
mov
xor
xchg
fidivl
pop
fcoml
and
jo
xchg
data16
pushf
leave
add
mov
fldenv
fidivrs
dec
mov
js
stos
xchg
or
adc
out
divl
inc
sub
or
std
popf
jle
push
arpl
scas
xchg
cmp
cmp
fst
mov
mov
jo
insb
js
ja
aam
shll
jb
jge
jbe
stos
iret
push
cmp
test
pop
cmp
enter
or
dec
ljmp
xchg
push
inc
mov
js
out
lahf
sti
scas
jl
pop
js
ja
cld
pop
sbb
inc
add
sub
daa
es
imul
dec
jmp
imul
loopne
xchg
pushf
sahf
sub
sbb
add
addr16
sti
mov
lcall
xchg
lock
or
push
scas
lret
jl
rcl
lods
and
push
xor
mov
or
dec
in
adc
pop
call
hlt
cmp
das
cld
mov
sub
dec
push
mov
ja
xchg
fsubrs
sbb
in
mov
data16
mov
scas
clc
pushf
in
jecxz
xchg
int3
into
fs
sub
jne
movsb
xchg
enter
sbb
loopne
adc
cmc
sbb
xor
xlat
ja
mov
pop
sahf
or
mov
into
stos
push
push
fistl
popf
scas
sub
mov
xor
xchg
in
clc
stc
jbe
inc
add
mov
add
dec
mov
xchg
mov
sarl
adc
jg
push
cli
repz
mov
outsl
cmp
lds
xchg
stos
out
jge
push
test
and
fimull
loope
repnz
pop
or
les
or
or
sbb
xchg
mov
inc
outsl
mov
out
inc
sbb
xorl
xor
or
or
sbb
push
xor
cmp
jnp
mov
imulb
jp
fsub
jnp
imul
mov
cmp
cmp
into
push
out
loope
mov
or
lock
xor
cmp
add
dec
adc
pop
adc
jne
sbb
push
in
shr
push
fcmovb
dec
mov
outsb
jnp
adc
and
ss
xchg
pop
mov
and
mov
clc
mov
lahf
pusha
jnp
pop
int
dec
sbb
xchg
mov
sarb
movsb
dec
mov
jecxz
arpl
sbb
in
les
jae
jnp
dec
rorb
lahf
lods
shl
fwait
out
sbb
jle
sub
add
pushf
es
jecxz
add
scas
sti
xor
sbb
es
cmp
out
stos
stos
mov
mov
imul
fwait
sub
push
and
inc
outsb
sub
lods
pop
xchg
lock
xor
repnz
sbb
pop
sbb
mov
mov
fs
je
mov
mov
mov
or
add
fisttpll
or
and
scas
inc
jnp
mov
push
sub
stos
jmp
fnstenv
test
loopne
xchg
mov
fldcw
mov
outsl
pop
lret
cmpsl
cmp
sub
dec
dec
add
jge
fcomi
cmp
push
xor
mov
sbb
mov
rdmsr
sbb
call
je
mov
pushf
dec
pushf
idivb
mov
ret
loopne
inc
lret
movsl
mov
js
jo
add
inc
pop
imul
xchg
ds
push
int
add
pop
inc
mov
pusha
cmp
sub
mov
jle
xchg
and
fdivrs
dec
sbb
jp
out
aaa
decb
mov
inc
cmpsl
out
es
scas
fbld
inc
adc
push
out
and
push
stc
xlat
inc
fs
jo
push
pop
adc
push
in
rcr
mov
mov
cmp
out
cmp
cmp
xchg
xchg
movsl
mov
ror
pop
add
push
sub
pop
sbb
adc
push
test
cmp
rcl
xchg
cmp
xchg
addr16
dec
and
mov
hlt
lcall
sti
popa
jae
out
xlat
pop
mov
in
push
jo
int3
shr
sbb
out
add
gs
mov
jns
pop
jb
add
sub
imul
sbb
fistl
inc
sbb
inc
push
or
fisubrs
cmpsb
int3
add
out
popf
adc
out
xchg
and
dec
jae
lds
inc
mov
push
push
sahf
mov
fldt
mov
add
call
shl
scas
mov
mov
mov
mov
mov
jns
sbb
adc
mov
mov
insw
or
cmpsl
cmp
call
orb
or
and
sub
aad
cmc
stc
adc
jmp
cmc
or
hlt
add
dec
cmp
xor
mov
mov
mov
orb
or
push
lret
jmp
mov
imul
adc
jnp
repz
cs
mov
xchg
out
xchg
subl
ret
int
mov
pushf
xor
das
inc
jo
mov
inc
jcxz
push
pop
std
cmpsb
insl
mov
mov
jp
mov
cmp
mov
sub
and
loopne
popf
cmp
mov
adc
lret
and
xor
loope
sub
imul
icebp
jmp
in
popa
filds
in
test
mov
cmp
insb
push
push
mov
push
dec
cmpl
cmc
inc
test
sub
shlb
add
mov
cmpsl
adcl
js
loope
jno
xchg
rcr
lea
mov
pusha
sbb
pushf
or
insl
in
pop
repz
testb
enter
mov
adc
into
lret
cld
or
fsubrp
mov
out
mov
adc
mov
lock
xchg
out
xchg
or
or
inc
add
loope
cli
into
jecxz
push
xchg
xchg
mov
into
sub
push
cld
and
enter
stc
fcomi
imul
into
cmp
lds
repnz
xor
pop
inc
out
dec
and
daa
les
lods
std
lcall
sub
scas
dec
test
aad
and
jp
dec
xor
mov
mov
movsl
mov
in
pop
out
mov
adc
xor
cld
sahf
pushf
mov
adc
lret
enter
sbb
xchg
cmp
jo
adc
out
push
int3
mov
sar
and
and
mov
cltd
push
xor
test
repnz
push
xchg
jp
sub
aaa
insb
jns
mov
mov
pop
or
or
ret
scas
pshufw
addl
cmp
mov
or
iret
adc
jmp
sbb
push
mov
hlt
mov
jecxz
fcmovnu
rolb
subb
out
aaa
iret
or
pushf
xchg
push
daa
lods
xchg
shrl
sahf
mov
fs
stos
js
jb
fildl
mov
jmp
repz
push
mov
dec
std
out
pop
sub
fadds
outsb
gs
fadds
or
pop
cwtl
icebp
push
std
mov
sbb
pop
daa
adc
insb
push
arpl
loope
xchg
inc
lock
pusha
cli
jl
pusha
mov
les
popf
xlat
fnstcw
fcmovbe
nop
push
xchg
jbe
and
pusha
repnz
push
sahf
push
adc
xchg
push
pop
ret
adc
stos
xchg
bnd
out
scas
addr16
aad
cmp
pushf
and
js
nop
leave
pop
outsb
int3
push
pop
sbb
inc
lock
lea
push
cltd
cmp
lds
push
adc
jo
pop
xchg
jge
cmp
das
xchg
insl
pushf
ja
cmp
xchg
add
loope
push
dec
aad
cmpsl
lds
dec
fdivr
in
sti
jp
js
insl
je
xor
inc
stos
push
lea
adc
movsb
popa
arpl
ret
pop
push
xchg
xorb
mov
mov
push
out
in
rorb
cwtl
mov
stos
xchg
sbb
pushf
pop
jno
dec
out
test
push
decl
mov
call
mov
inc
mov
pushf
pop
or
pop
jo
push
push
inc
or
clc
jae
lcall
repz
xorl
sbb
lahf
mov
pushf
lods
sbb
xlat
pop
jb
and
mov
mov
sahf
out
mov
cmp
call
mov
sbb
int3
cwtl
imul
loopne
clc
insb
insb
jno
int
mov
jno
mov
mov
dec
aaa
xchg
out
shrb
push
mov
out
ret
bound
jmp
lcall
ret
bound
mov
lret
lds
mov
jnp
shll
imul
pop
dec
mov
mov
sbb
sbb
xor
push
xchg
mov
subl
adc
jp
aaa
ret
lds
or
movsb
pop
out
and
xchg
movsl
xlat
pop
sub
mov
lret
out
inc
push
pop
xor
mov
enter
fsubl
or
pop
shlb
cmc
fs
adc
insb
imul
sub
ret
hlt
push
inc
push
mov
ret
filds
mov
insb
addr16
adc
xchg
pop
push
sti
test
ja
and
scas
lods
sub
mov
mov
mov
nop
cltd
sub
inc
xchg
dec
cmp
rorb
int3
adc
and
in
jnp
cmp
and
cld
outsl
jb
mov
cmp
sbb
scas
pop
cmpsb
repz
pop
sub
inc
sti
pop
in
pop
jge
test
sahf
pop
cli
add
mov
push
add
xchg
pop
outsb
cmc
in
jp
jnp
fsubrs
add
out
ds
sub
and
fimuls
cmc
mov
fdivr
pop
or
or
shrl
adc
xor
cmp
cltd
inc
es
add
std
arpl
jg
stos
paddb
inc
adc
fwait
xchg
mov
js
gs
xorb
push
adc
orl
push
mov
xor
arpl
mov
xorl
in
arpl
test
or
and
cmp
sahf
out
es
dec
enter
cmpsl
pop
lds
dec
ja
push
mov
pop
and
loop
mov
cmpsb
out
out
imul
mov
lret
std
fneni(8087
mov
cmp
insb
icebp
xchg
out
mov
arpl
int
addb
mov
int
insl
xor
sub
je
and
mov
and
loope
fidivrs
fwait
mov
repnz
subl
lock
push
sbb
inc
ret
stos
sbbb
mov
std
mov
xchg
adc
hlt
and
mov
rorb
test
les
addr16
inc
adc
xchg
rcll
leave
inc
sub
negl
mov
fildll
jle
aam
imul
lock
sub
movups
aam
hlt
outsb
mov
andl
mov
pop
push
mov
inc
imul
and
test
in
addr16
movsl
pop
or
mov
scas
pop
xor
cmpsl
stc
and
js
cmc
in
jbe
loope
inc
cs
jecxz
cli
dec
add
in
std
lock
xchg
jae
ret
fnstcw
js
mov
rcr
push
movb
xchg
cmp
dec
and
dec
movsl
stos
rorl
aaa
and
shrb
out
lret
inc
jecxz
lods
sub
shll
and
xchg
pop
pop
ffree
inc
push
lods
add
mov
push
sbb
xor
repz
sbb
icebp
push
jecxz
ret
dec
dec
out
cwtl
or
mov
lret
mov
xchg
inc
je
or
adc
lock
sub
movsb
repnz
shlb
mov
ja
push
enter
jle
xchg
sub
test
mov
and
push
shll
xor
lret
xor
imul
sbb
ret
inc
jne
sub
stos
add
push
int
ss
mov
mov
adc
xchg
movsb
pop
pop
push
mov
enter
xchg
mov
in
pop
fildll
jle
insl
outsl
sar
push
xlat
jno
in
shl
mov
sbb
xor
les
xor
xor
cmpsl
and
push
and
push
clc
xor
add
add
pop
jle
in
add
mov
sbb
pop
mov
mov
dec
popf
and
mov
pop
bnd
daa
hlt
sarl
xchg
sub
clc
cmp
xchg
lea
cli
mov
xor
sbb
les
lds
adc
jmp
or
into
call
mov
popf
call
mov
lcall
clc
inc
out
lcall
add
orl
mov
sbb
sbb
mov
xchg
bnd
push
pushf
push
xchg
hlt
mov
pushl
fs
mov
xlat
cmp
je
cmc
mov
jbe
test
cmpsl
sub
sbb
mov
std
out
pop
jl
push
pop
sub
arpl
ret
adc
push
sub
xlat
pop
jmp
dec
in
dec
les
pop
sbb
sbb
mov
into
cmpsb
cmp
bound
xor
inc
rorl
adc
sbb
mov
push
sub
in
cmpsl
or
pop
push
rol
js
scas
icebp
jno
loop
fcomip
enter
fwait
lcall
jle
lret
cmp
add
faddl
pop
pop
sub
push
xchg
and
xor
in
inc
fnstcw
lock
fdivrs
push
imul
push
add
loop
insl
lahf
test
cltd
cmp
jl
sarl
or
test
xor
into
les
ret
pop
adc
inc
repz
ds
xlat
jge
call
push
inc
push
movsl
lods
push
mov
sbb
sbb
clc
pop
or
and
push
mov
sub
test
push
xor
or
icebp
addr16
push
int
push
or
mov
cwtl
cmpsl
mov
pop
mov
sub
or
outsl
inc
cmp
xchg
xor
out
mov
pusha
cld
movsl
fwait
ds
enter
fisttps
lret
es
pop
push
add
xor
imul
mov
xorl
cmpsl
push
addr16
sbb
jbe
sub
inc
cmp
jae
mov
push
daa
sbb
inc
mov
in
fisttpl
adc
test
je
out
dec
xor
out
int
je
bound
fildl
aaa
xchg
fcom
shll
iret
mov
or
mov
lret
mov
push
jbe
inc
lods
xchg
mov
stc
or
icebp
cmp
jno
pop
add
ret
outsl
fs
cld
sub
xchg
int
scas
aas
cmp
jo
fs
jmp
test
std
fcom
mov
or
mov
shrb
jg
dec
clc
dec
outsl
insl
shlb
fstps
xor
aad
mov
xchg
ja
notb
jle
in
pop
or
popf
add
sahf
sub
jp
fildll
mov
dec
int3
outsb
out
sbb
xchg
inc
stc
jne
fldenv
jns
jno
dec
and
add
cld
aad
pusha
movb
pop
int3
stc
fdivp
lahf
bound
or
mov
push
jns
jmp
fsubrl
xchg
imul
sub
push
imul
mov
dec
movsl
pushf
ret
stos
daa
aad
out
movsb
test
lcall
stos
ss
popa
aas
ret
and
les
mov
int3
ljmp
testb
push
mov
loope
add
jp
jb
push
and
mov
fmuls
dec
test
mov
or
inc
cld
cltd
jmp
jb
aam
andl
lret
mov
lea
cmp
gs
notl
or
test
ret
imul
mov
and
cmc
hlt
insl
imul
test
paddsb
add
rcrl
test
mov
sbb
mov
or
adc
in
cmpsl
insb
shld
lds
pop
jb
imul
mov
dec
jg
inc
notb
mov
adc
lds
or
das
ror
fsubl
int
aas
sub
iret
daa
push
adc
icebp
loope
and
xchg
pop
add
les
adc
inc
pop
mov
push
es
xchg
mov
jge
pop
je
dec
pusha
paddsb
in
lods
mov
xor
xor
mov
sub
out
js
mov
xchg
pop
in
daa
aaa
pop
add
dec
adc
pushf
xor
andl
mov
cmp
mov
cmp
punpcklwd
add
in
inc
adc
in
cmpsl
pop
or
lret
lock
jge
pusha
insl
or
aas
inc
insl
sub
jae
pop
add
xor
imul
aam
fsubs
cmp
jl
or
jb
arpl
pop
and
push
insl
xor
pop
nop
adc
scas
or
scas
icebp
xor
pop
movsb
pop
ficoml
adc
addr16
inc
pop
mov
or
dec
icebp
mov
decl
scas
add
dec
mov
jl
adc
jb
xchg
sub
dec
aas
out
mov
and
daa
add
push
mov
iret
or
adc
mov
sbb
mov
add
xchg
cmp
test
sbb
mov
mov
into
negl
pop
ja
pop
mov
sti
mov
sbb
dec
push
scas
cld
cli
dec
mov
mov
xchg
add
jmp
outsb
sub
nop
mov
jle
movsb
push
jae
adc
stos
cmp
pop
mov
jbe
jne
imul
xor
xor
lret
and
int3
cmp
outsl
jbe
ret
ss
stos
insb
jg
addl
push
and
cmpb
mov
jecxz
sbb
or
and
mov
enter
lds
in
sbb
mov
cmp
xor
sti
mov
data16
mov
sub
imul
addl
lcall
adc
mov
ret
dec
and
pop
lret
pop
mov
fbld
push
add
cltd
mov
mov
fstpl
in
les
scas
xchg
sub
fidivs
ret
int
mov
sub
icebp
inc
and
sbb
push
shrl
popa
dec
pushf
sti
xor
xchg
ds
out
test
or
mov
or
mov
shll
pop
mov
adc
enter
jbe
in
inc
orl
push
in
pop
cltd
or
lret
mov
mov
xchg
push
int3
xchg
aaa
imulb
pop
and
mov
iret
xchg
test
negb
mov
xor
cld
mov
mov
std
movsl
inc
outsb
sahf
sti
mov
out
lods
shrl
or
dec
inc
addb
sbb
and
leave
jb
or
adc
out
iret
ja
shlb
popa
cmpsl
sahf
adc
xchg
xor
arpl
xlat
in
jb
xlat
adc
loope
mov
lret
gs
push
das
jo
xor
stos
dec
inc
add
push
les
shl
jo
lret
pusha
pop
xchg
pusha
movsl
mov
xchg
sbb
pop
mov
insb
cmpsl
mov
xor
pop
popf
in
add
test
das
dec
std
push
movsb
push
and
scas
push
inc
outsl
rcr
sub
pop
xor
call
xor
fisttpll
xor
mov
sub
fists
lcall
movsb
test
data16
sub
adc
fadds
xor
jmp
jnp
pop
mov
in
xchg
hlt
mov
hlt
lcall
mov
ds
push
outsb
jbe
pop
fnstcw
nop
scas
ror
es
popf
sbb
test
dec
mov
loope
push
lea
pop
mov
add
fistpll
mov
movsb
mov
ja
movsb
into
cwtl
fdivl
cmp
int
cmp
rcll
test
pushf
sbb
fwait
call
pop
pop
or
mov
mov
cmp
dec
stc
xchg
jecxz
pop
mov
adc
xor
mov
daa
push
idivb
add
mov
xstore-rng
cmpsl
inc
mov
outsl
push
repnz
test
sub
jo
leave
clc
push
dec
push
or
pop
add
fists
mov
fisubs
sub
add
test
sbb
lock
aaa
mov
mov
pop
cmp
adc
cmp
dec
mov
aaa
and
push
xchg
jns
ds
movsb
std
std
aam
jle
jnp
sbb
shll
mov
cmp
dec
or
mov
pop
scas
mov
lods
jmp
lods
fwait
jb
jae
je
and
cli
rolb
sub
loopne
cmp
xor
jnp
pop
test
inc
pop
adcl
mov
rol
into
pop
and
dec
dec
add
cmp
aad
mov
rorb
int3
push
repz
test
add
xor
dec
int3
mov
mov
sub
nop
mov
mov
mov
stos
xchg
jbe
push
stc
divl
or
les
cltd
insb
and
inc
nop
mov
flds
jge
mov
into
pop
mov
lea
ret
jno
test
jne
cmp
pop
sub
fwait
sar
push
call
push
sbb
dec
add
fisttpll
jbe
xor
push
pop
divl
sub
xchg
jp
shrl
sbb
loope
push
and
pop
jp
inc
shrl
mov
mov
mov
dec
fistpl
in
ja
cmp
outsb
cmp
out
int3
push
gs
xchg
jp
mov
adc
imul
iret
roll
gs
inc
mov
xlat
sbb
and
mov
jle
xchg
pop
jne
push
sub
add
aas
sbbb
pushf
push
pop
aam
cmp
aas
mov
inc
and
dec
jp
xchg
xor
int3
lea
adc
jmp
and
or
fs
into
jne
or
jbe
nop
pusha
dec
dec
iret
add
fidivrs
xor
lcall
jg
mov
sarb
arpl
xorl
mov
cltd
pop
sub
sbb
aaa
in
inc
gs
pop
dec
lcall
loopne
lcall
int
mov
lds
ret
sbb
sbb
pop
inc
aas
addb
hlt
call
aas
mov
sbb
arpl
mov
jbe
cmp
inc
test
out
sub
mov
aaa
or
outsl
dec
jmp
movsb
and
shll
push
int
add
lock
jle
xlat
jmp
sbb
repz
inc
cmpsl
jge
lods
lea
cmp
dec
loopne
add
xchg
addr16
shll
push
pop
mov
lahf
ja
daa
dec
lret
je
inc
adc
les
pop
lock
mov
cmpl
push
mov
ss
aas
xchg
or
mov
jae
inc
push
faddl
adc
jmp
pop
jecxz
mov
cld
pop
sub
adc
or
push
aam
mov
rolb
rcll
mov
gs
out
adc
mov
adcb
push
repz
movsb
out
cmc
push
dec
inc
mov
mov
adc
aad
push
pop
mov
jl
rorl
repz
in
pop
xor
sbb
jecxz
jp
aam
dec
mov
pop
xlat
push
addr16
test
daa
gs
shl
sti
xchg
leave
mov
fwait
pop
inc
lcall
popa
shrl
je
mov
insl
xchg
pop
repz
shlb
test
mov
aam
rorb
mov
mov
mov
lea
jp
xor
dec
and
xorl
cltd
inc
jg
mov
jo
push
or
mov
jo
xchg
dec
xchg
cmpsb
inc
xchg
add
addr16
mov
ret
xchg
in
js
sbb
stos
in
aaa
jnp
iret
gs
outsb
cmp
mov
pop
or
pop
xchg
cmpsl
push
jmp
outsb
xchg
xorb
bound
idivl
mov
cmpsl
inc
shlb
addl
addb
sbbl
mov
mov
les
in
pop
das
xor
stc
pushf
and
in
shll
sbb
data16
insl
and
cwtl
or
or
loop,pt
fimuls
jmp
xor
jecxz
lcall
setae
mov
shll
sbb
fisubrl
cmp
in
sub
in
jns
popf
jecxz
cld
movsb
sbb
xchg
pop
ljmp
lret
xor
push
jno
aam
sbb
push
and
ljmp
aas
sub
cltd
mov
pusha
roll
cmpsl
xor
stos
mov
insl
sbbb
pop
inc
fsub
insb
mov
stos
xchg
lahf
dec
xchg
cmp
dec
mov
pop
or
mov
mov
inc
call
inc
xchg
add
lahf
loop
cltd
daa
jmp
divl
fs
stos
insb
cmpsl
ret
insl
pop
data16
or
mov
jns
movsl
mov
iret
or
pop
shll
das
add
lea
sbb
mov
outsb
sub
out
mov
or
cmp
out
or
push
shll
enter
je
fimull
sahf
ficoml
vpcmpgtb
in
arpl
push
add
xor
adcl
aas
les
imul
adc
dec
sbb
sbbb
sbb
enter
outsb
pop
jg
bound
aaa
std
push
xor
fwait
sarl
into
ss
mov
sub
jo
movl
leave
movsl
aaa
sbb
cmpsl
inc
imul
push
or
fbstp
es
mov
adc
mov
sub
sub
xchg
push
pop
xchg
xchg
test
out
mov
dec
rcrb
outsb
dec
imul
push
jmp
jbe
pop
test
jge
pusha
imull
inc
sahf
pop
dec
aad
jmp
push
xorl
push
pop
out
sub
lcall
mov
sbb
sbb
pop
sti
mov
mov
out
lods
ss
out
faddl
mov
cli
es
pop
outsb
mov
in
cmpsb
sbb
mov
dec
std
repnz
mov
in
cmpsl
insb
outsb
push
in
iret
sub
jg
cmp
inc
inc
notb
mov
mov
stc
ror
push
push
insl
dec
dec
pop
mov
mov
call
mov
movsb
fsts
adc
jns
cwtl
push
cmp
mov
mov
mov
out
inc
or
and
cld
aas
mov
out
enter
je
arpl
jne
xorl
int
jmp
loop
adc
arpl
cmpsb
sbb
lea
sub
jp
sub
movsb
or
mov
adc
cmp
fidivs
cmp
je
sbb
jp
outsl
das
imul
jge
mov
push
arpl
mov
xorl
sbb
and
sti
ret
cmpsl
mov
stos
mov
shlb
dec
xor
in
cs
or
push
sbb
xchg
mov
dec
imul
jns
popa
std
add
mov
and
fwait
aaa
adc
stos
pop
addr16
jae
and
xlat
sub
sbb
mov
sub
cli
aas
jmp
ret
leave
ds
test
add
dec
or
mov
mov
insb
sub
add
xlat
int
sbb
mov
lahf
dec
xchg
cltd
enter
mov
jmp
imul
ds
push
test
cmpb
mov
sub
add
add
jno
sub
sbb
lods
loopne
cmpb
xchg
mov
push
sub
rcrl
or
cwtl
insb
std
idiv
mov
ret
mov
divb
cmp
mov
fsubs
jne
lock
fwait
sti
call
subl
test
jne
mov
mov
sbb
sub
mov
aad
dec
movsb
lods
sti
inc
xchg
jp
fucomi
pop
dec
dec
mov
cmpl
out
lods
xchg
fmul
aas
and
out
sub
xchg
pop
fists
cmc
pop
add
stos
xor
sbb
cli
adc
insl
je
mov
stos
inc
or
and
outsl
mov
repnz
xor
orb
sbb
or
dec
pop
aad
repnz
aas
add
push
gs
stos
inc
xchg
lea
xor
js
jnp
inc
add
pop
xor
mov
pusha
push
xor
test
int
add
push
xor
aas
mov
cmp
jae
cmp
inc
xor
xlat
adc
stos
fcom
cmp
mov
je
fisubl
lret
and
ds
movsb
pop
ljmp
in
cltd
mov
mov
pushf
and
leave
stc
and
push
pop
sub
sub
mov
enter
dec
fdivl
adc
and
clc
fistpll
jge
mov
sub
stos
xchg
pop
xor
loopne
mov
jae
aaa
jecxz
inc
jle
cli
dec
mov
gs
sub
push
in
popa
pusha
aas
movsl
ds
aad
or
out
in
add
ds
leave
jno
or
in
sbb
add
push
lods
rorb
and
jle
or
xor
pop
xchg
mov
adc
dec
dec
inc
xlat
sbb
stos
jg
ret
xchg
shll
mov
jp
in
adc
xor
fdivrs
adc
aam
push
and
pop
or
fwait
jp
lods
bound
repz
jo
sub
jge
mov
addb
inc
mov
lock
jp
repnz
scas
adc
xchg
ret
push
aam
xchg
mov
sub
das
cmp
aaa
scas
or
inc
sub
mov
cwtl
pop
lcall
sarb
lret
xor
jns
hlt
je
nop
cmc
jg
sbb
dec
jge
out
shr
mov
int3
inc
xchg
or
mov
inc
sub
setl
js
movsl
xchg
xor
and
sbbb
in
shll
sub
add
addr16
in
push
adc
pushf
mov
fiaddl
and
push
loopne
in
and
push
or
imul
bound
jne
mov
mov
jb
in
mov
pop
push
mov
mov
jecxz
push
sbb
sub
fcompl
pop
xchg
and
cmp
bound
jmp
pop
or
sub
stos
pop
ffree
pop
jge
pop
call
aas
mov
push
inc
dec
mov
xor
ljmp
dec
cmpb
shlb
pop
roll
mov
mov
mul
mov
les
sub
jmp
xchg
stos
xchg
xchg
xchg
rolb
adc
test
mov
pop
cmpl
enter
dec
popa
fwait
xchg
lods
or
out
mov
mov
in
sub
imul
lds
mov
cmpsb
movsb
mov
and
jecxz
add
add
ds
dec
dec
std
lea
dec
jle
or
pop
pop
dec
fdivl
int3
push
pusha
xor
sub
mov
in
fdiv
imul
fcmovbe
dec
add
js
sbb
addr16
dec
fxch
int3
xor
and
xchg
jl
cmc
imul
loopne
jbe
out
jle
fs
push
xor
jae
scas
cli
cltd
add
je
loope
test
mov
sub
imul
sbb
push
clc
out
xor
nop
lret
dec
add
jbe
jne
mov
mov
xchg
jnp
dec
ljmp
call
pop
add
test
std
and
in
aam
push
insl
mov
in
sbb
push
push
pop
lds
shlb
push
add
jg
jo
pop
popa
aam
sahf
test
je
xchg
mov
test
cwtl
xor
mov
das
sub
cmpsb
sarb
adc
inc
fs
add
and
fcomp
fucomi
jl
outsb
sahf
mov
mov
lahf
sahf
mov
push
ja
fisubl
int
push
sbb
xchg
aaa
cmp
mov
jo
movsl
std
adc
ret
sbb
loopne
mov
mov
mov
mov
xor
test
fnstenv
das
rolb
sti
inc
dec
jecxz
and
lods
js
out
sub
push
pop
loop
cltd
jle
leave
push
mov
lcall
pop
rorl
push
sub
test
nop
or
outsl
aad
xchg
repz
and
mov
js
xor
ret
mov
mov
jecxz
mov
shl
pushl
cmc
rorl
test
outsb
xchg
jns
push
aaa
outsl
imul
jbe
imul
sub
fwait
mov
repnz
mov
sbb
int3
rorb
push
testl
addl
xchg
arpl
and
pop
ret
inc
or
out
aad
jmp
mov
adc
dec
dec
mov
call
icebp
dec
arpl
movsb
pop
inc
stos
or
loop
iret
push
pop
testl
pop
decl
lahf
iret
mov
jbe
lret
leave
es
sub
das
xchg
mov
mov
pop
pop
std
push
lret
push
xchg
mov
jecxz
lcall
dec
inc
loope
loope
sahf
les
hlt
dec
push
ja
mov
jle
xchg
sbb
ja
ss
sarl
or
adc
cmp
push
or
cwtl
sub
addr16
add
stos
sbb
mov
push
mov
sbb
aaa
push
pop
jnp
movsl
mov
mov
cmp
xchg
scas
stos
jp
movsl
outsb
add
lret
push
stc
sub
in
out
inc
pusha
jg
mov
dec
push
aas
cmpsb
jbe
inc
nop
cmp
scas
sub
add
xor
xor
mov
fldenv
cmpsb
incb
mov
mov
inc
movsl
or
xor
mov
xchg
push
popf
arpl
lock
stos
push
jno
inc
mov
ret
enter
push
lret
gs
out
ljmp
sbb
fs
testl
subb
sbb
sbb
jns
mov
sub
out
iret
inc
mov
aas
cld
or
inc
pop
jmp
mov
daa
popf
mov
inc
fildl
xor
into
cld
mov
enter
dec
mov
sbbl
popf
add
jnp
pop
add
xor
cmp
shll
jb
xchg
sub
out
je
xor
out
inc
push
mov
pushf
arpl
icebp
push
std
das
cmp
outsb
sub
adc
cmpb
push
sarb
loop
ja
cmp
jne
adc
cltd
in
lret
add
dec
lret
rolb
shlb
pop
inc
xor
mov
in
test
aam
in
mov
push
mov
mov
sbb
or
ds
xchg
in
or
sub
inc
jo
or
mov
mov
cmp
pop
inc
cli
jns
jno
out
call
sbb
xor
sti
add
fldcw
or
inc
test
repz
mov
dec
es
jle
sarb
jns
orb
pop
push
jb
mov
dec
add
mov
mov
xlat
in
cmp
jl
sti
xchg
and
cmp
sbb
xchg
paddb
aaa
shlb
cmp
notb
dec
jecxz
and
lds
jo
call
xchg
lret
inc
pop
mov
xchg
iret
je
add
cmp
into
push
xorl
dec
std
imull
sub
mov
xor
sbb
lock
or
dec
mov
ds
pop
test
arpl
mov
lret
loop
lret
inc
fidivrs
sub
push
add
js
inc
push
adc
fcoms
lret
inc
sbb
outsb
or
mov
popf
into
mov
ret
stos
test
add
insl
sbb
xchg
out
push
add
push
sub
subps
test
jp
std
xor
pop
mov
lret
dec
clc
dec
mov
jns
mov
lcall
xor
sub
xlat
jmp
jae
xor
jno
hlt
out
popf
or
in
mov
js
push
or
cli
lcall
adc
sub
and
lods
pop
dec
gs
pop
fmuls
in
inc
mov
push
push
sbb
push
pushl
sub
fmulp
andl
leave
in
xor
clc
xchg
fadd
mov
mov
push
lret
mov
mov
decb
mov
leave
mov
sbb
mov
out
dec
clc
pop
cmpsb
jns
add
ss
inc
std
ljmp
mov
dec
ret
mov
lcall
pop
cld
or
or
xchg
cltd
add
loope
mov
mov
push
ds
mov
rcll
push
arpl
test
clc
movsb
and
or
shlb
ret
in
jge
mov
cwtl
int3
inc
fwait
adc
add
cmpsl
pop
incb
pop
aas
nop
push
or
sbb
sahf
inc
ja
cmp
jp
cs
lret
jns
cli
mov
push
dec
push
iret
mov
or
in
mov
inc
xchg
inc
add
push
jl
lea
pop
fsts
adc
mov
fcompl
loop
nop
dec
mov
inc
sub
sarl
cmpb
mov
adc
out
rorl
in
mov
les
pop
fcompl
lods
jecxz
lock
out
add
mov
pop
add
sarb
sbb
dec
inc
push
xchg
sbb
adc
test
bound
and
loope
gs
cs
mov
dec
aaa
arpl
add
adcb
push
jno
fstpt
stos
adc
aam
sti
ret
pop
sub
pop
test
xchg
sub
leave
lods
pop
test
stos
mov
sub
push
ljmp
in
sbb
xchg
pop
xor
dec
sub
outsl
push
aad
stos
jno
dec
dec
test
out
sbb
sub
push
jmp
inc
aam
adc
jae
int
in
or
pushf
mov
sbb
movsl
aaa
in
scas
pop
sar
fs
mov
in
pop
bound
cmpb
adc
icebp
lock
fnstenv
aas
or
xlat
jnp
insl
sbb
nop
xor
shl
das
sti
rcll
sub
sbbl
mov
sarb
and
sub
les
test
lahf
cmc
int3
mov
sbb
pop
mov
and
xchg
rclb
push
mov
dec
cmpsl
mov
div
mov
test
or
xchg
mov
xor
int3
mov
sub
enter
cmp
mov
dec
inc
adc
icebp
popf
mov
dec
stos
imul
sbb
test
and
scas
pusha
lock
push
push
pop
xchg
call
fs
cmpsl
xchg
xchg
sub
add
pop
jne
push
jecxz
dec
and
bound
push
data16
test
xor
cs
outsb
nop
fistpl
mov
clc
jmp
ds
push
int3
push
push
mov
loope
arpl
pop
repz
and
ja
lock
into
rcrl
mov
cwtl
jg
xchg
sub
sub
jb
sub
stos
sbb
push
add
aaa
pop
lret
or
es
mov
push
popa
dec
int3
xchg
fsubrs
adc
jne
xchg
sbb
adc
and
fdivrs
jne
inc
sub
orl
imul
les
and
mov
mov
hlt
mov
ljmp
pop
dec
loope
and
pop
push
or
dec
sub
in
mov
add
mov
negl
repz
inc
ss
scas
cmp
push
push
dec
jmp
mulb
outsl
out
ljmp
xor
push
cwtl
fucom
cmpsb
or
lcall
mov
add
pop
test
addb
adc
add
xchg
sub
int3
mov
add
popa
jl
lea
stc
or
xchg
dec
xlat
mov
mov
mov
fistps
out
pop
and
mov
jp
dec
sub
pop
orl
test
mov
imul
sbb
mov
aaa
int
das
ret
shrb
or
insl
call
stc
sbb
test
stos
in
inc
mov
push
mov
ret
pop
int3
and
mov
jmp
adc
lock
jnp
fucomp
mov
aad
enter
pop
movsb
pop
xor
jmp
imul
pop
pop
pop
adc
stos
into
dec
imul
push
jmp
rclb
and
push
push
adc
loope
insb
int
out
aaa
pop
mov
push
btc
aam
pop
sbbb
push
or
push
movzwl
xor
fcoml
jl
divl
mov
xchg
bound
sub
sahf
imul
cs
mov
aas
fs
jmp
xor
dec
add
insl
mov
stc
jmp
sbb
ret
push
jnp
loopne
xchg
sbb
out
sti
adc
out
dec
mov
xchg
sbb
inc
enter
fidivrs
rol
and
imul
lret
aad
cmp
mov
cmp
loope
push
or
xor
out
or
pop
mov
lods
push
shl
shl
mov
arpl
scas
mov
push
shr
shlb
jns
add
xchg
add
adc
outsl
pusha
xor
lock
or
dec
into
imul
mov
mov
fwait
or
test
shlb
loopne
movsl
ss
xor
scas
enter
aam
mov
scas
push
or
add
adc
xchg
jle
xor
xorl
dec
add
rolb
xlat
cmp
pop
outsb
inc
fwait
sub
sbb
test
jp
shl
std
lcall
xchg
das
jae
jne
sar
and
lret
rcrb
and
stc
je
mov
add
iret
jge
lea
adc
mov
lret
xchg
cmp
ja
pop
insb
push
adc
mov
inc
test
rcrl
inc
out
cmpb
ret
add
cmp
paddusb
clc
sub
jmp
jb
and
jo
filds
loop
sbb
jne
sahf
loop
scas
notl
jns
dec
daa
sub
fdivs
mov
les
loope
pop
dec
add
push
add
in
jne
lds
mov
adc
add
test
sti
hlt
outsb
cmp
lock
pop
add
mov
add
lret
in
daa
inc
add
push
mov
mov
imul
mov
push
lret
mov
pop
mov
sbb
adc
xchg
xor
leave
movsb
jb
out
fistps
jb
call
cmc
movsb
cmp
jno
pop
and
sub
addr16
imul
and
rclb
jno
cmp
enter
xchg
aam
push
mov
or
add
jne
push
sti
pop
test
rcll
stc
xor
pop
or
mov
jp
or
mov
pop
sbbb
inc
pop
out
and
mov
lret
fcoml
jb
or
dec
data16
adc
lea
jge
xor
jae
out
sbb
lahf
jnp
xor
adc
push
sub
mov
int3
sar
test
fdivl
pop
lods
push
cmp
xchg
push
dec
cmp
hlt
inc
lret
xchg
imul
loope
pop
add
popa
sbb
cmp
sub
addr16
push
inc
mov
out
cmpsl
int
sub
sahf
xchg
icebp
and
pop
mov
sbb
sub
iret
lock
lcall
sbb
movsl
loopne
or
pop
ja
push
xchg
push
std
sbb
xor
enter
sbb
cmp
jne
fsubl
cmpxchg
inc
xchg
rcrl
addl
mov
fcoms
ljmp
test
adc
pop
jns
inc
fimull
sbb
data16
call
jp,pt
or
hlt
pop
bswap
loope
pusha
aam
mov
jae
jge
ds
enter
mov
lea
sub
and
pop
ja
jae
mov
rclb
icebp
lods
out
imul
xor
pop
push
and
jbe
or
cmp
mov
mov
out
idivl
push
xchg
sbb
or
jmp
mov
popa
nop
adc
pop
push
pop
inc
xlat
mov
xchg
cmp
dec
ret
outsl
or
stc
ljmp
mov
and
mov
setb
outsb
cmc
ret
adc
adc
ljmp
mov
repnz
in
sub
mov
jb
lock
add
jno
mov
jno
mov
notb
out
cmc
mov
test
push
pushf
in
mov
incl
stos
fldl
testb
xor
fs
sbb
or
pusha
sbb
into
into
movsb
mov
xor
ret
adc
fildll
mov
xor
cli
sbb
lds
cmp
or
subb
mov
fiadds
push
loope
pop
inc
xchg
inc
sbb
out
rolb
mov
clc
sub
cmp
xor
push
cmp
xchg
mov
xchg
jo
mov
loop
mov
shlb
xor
jns
inc
sub
ds
lds
ds
shlb
int3
push
mov
fs
xchg
inc
and
inc
popa
jmp
loop
dec
jno
cmp
mov
or
ret
push
dec
notl
outsl
xor
in
push
sub
sub
enter
xchg
out
mov
xor
sbb
fucomip
and
nop
je
mov
push
aas
jp
push
pop
sahf
or
loop
pop
clc
imul
mov
push
xchg
push
cs
and
mov
cli
imul
jo
cmp
inc
adc
push
jae
xor
cmc
cmp
inc
out
cmc
xor
loop
and
sbb
stc
enter
ds
push
mov
inc
sbb
decl
das
jae
shr
inc
adc
xchg
aad
addr16
push
popa
icebp
add
mov
adc
xor
jl
xchg
xorb
add
push
rcl
xchg
fwait
test
sahf
xchg
add
iret
xor
iret
mov
loop
xchg
pop
stc
jge
loop
jmp
xor
xchg
test
dec
loopne
in
mov
mov
pusha
in
push
int3
bound
cmp
roll
in
mov
mov
push
shl
push
ret
cwtl
inc
testl
inc
mov
sahf
mov
adc
and
pcmpgtw
fbstp
pusha
xchg
out
fisttps
inc
pop
or
push
int3
cmp
mov
and
jnp
or
pop
lret
add
aad
aam
pushf
sub
xor
scas
rolb
sbb
cwtl
in
sbb
aas
xchg
ljmp
int
repz
push
in
add
mov
pusha
test
incb
into
mov
lods
inc
cmp
sub
rcl
aaa
enter
jmp
or
push
imul
out
mov
outsb
setnp
insb
xor
popa
sub
add
cmp
jmp
sub
cmp
cmc
stc
mov
mov
jno
adc
jle
xchg
sbb
aaa
pop
xlat
push
iret
xor
and
push
push
leave
cltd
leave
cmpsl
cmp
lret
and
inc
aas
sub
test
xchg
out
icebp
icebp
dec
adc
pop
push
rorb
scas
jno
ja
rol
jnp
inc
repz
es
sbb
mov
dec
lea
dec
mull
and
inc
sahf
push
ret
sub
test
hlt
xchg
dec
adc
adc
shlb
nop
sub
xor
popa
push
cmpsb
lcall
inc
leave
fs
inc
shll
stc
bound
pop
nop
cltd
pop
xchg
out
into
out
gs
and
push
push
cmp
xor
jae
pop
test
add
jo
add
loop
imul
and
add
mov
mov
dec
faddl
out
test
jne
sbb
xchg
fiaddl
iret
or
xchg
repz
mov
fcomps
dec
sbb
push
dec
xor
pop
in
addb
test
mov
jne
bnd
movsb
add
cmc
enter
pushf
insb
cs
sbb
cmpsb
ret
loope
jmp
pop
rcll
cltd
clc
xchg
mov
scas
and
add
iret
and
pop
and
stos
xchg
jg
cmp
pop
loop
lret
arpl
lahf
cmp
sbb
push
mov
cmp
orb
pusha
xchg
test
push
jae
ss
cld
in
je
or
fmulp
shl
ja
arpl
mov
adc
xchg
ja
fsubs
pop
into
mov
fistpl
adc
xchg
adc
sbb
addl
addb
outsb
or
cmp
mov
mov
ret
subl
call
vmovdqu
call
mov
add
add
imulb
adc
ffree
push
and
cmp
pop
adc
cmp
push
jg
orb
stc
sub
fsts
xor
push
dec
test
xorb
add
ret
int
test
inc
adcl
sub
cmc
mul
mov
int3
popa
or
mov
dec
xchg
icebp
aad
insb
stos
push
arpl
ds
mov
cld
mov
lret
mov
jmp
fs
imul
xchg
jbe
fwait
xor
in
dec
mov
inc
dec
push
jb
hlt
roll
or
loope
cmp
mov
jg
adc
sbbl
push
pushf
int3
push
shrb
inc
adc
xchg
adc
gs
loope
cmp
out
leave
mov
add
sub
pop
pusha
inc
out
mov
push
stos
xor
cs
pop
jno
imul
xchg
ss
jmp
nop
mov
jl
add
pusha
sti
dec
cmp
jnp
cli
je
shrb
jge
pop
shll
sbb
push
mov
mov
push
ja
xor
mov
insb
das
dec
inc
pop
cmp
add
pop
jp
lods
icebp
cli
push
data16
into
xchg
lret
cmpsb
stc
out
mov
inc
lods
dec
cmp
stos
pop
mov
in
clc
jnp
and
fcmovnbe
cmp
cltd
add
mov
lds
cltd
call
xor
jmp
pop
cmp
shlb
out
cmp
mov
mov
in
je
add
push
and
nop
add
call
shlb
es
mov
sti
push
fists
in
mov
ret
jno
pop
push
push
sub
sbb
xchg
sbb
push
xlat
lret
scas
pop
fucomp
xchg
and
rcll
call
mov
and
xchg
mov
icebp
adc
cmp
and
mov
mov
mov
cmpsl
or
inc
xchg
daa
sbb
add
mov
aad
xchg
cmp
inc
popa
jle
sub
push
aad
and
mov
pusha
dec
cmpb
repz
dec
mov
cmp
add
ds
xlat
addr16
pop
dec
xchg
mov
mov
lret
dec
or
popa
pop
add
sbb
dec
sbb
imul
pop
jg
lcall
dec
xchg
lea
lock
cmp
push
mov
out
mov
call
rclb
ja
and
fnstcw
add
imul
inc
insl
xchg
mov
sbb
jle
iret
inc
adc
fisubrl
cli
jns
into
push
repz
push
inc
xor
popa
or
dec
xchg
mov
and
sbb
stos
pop
add
jmp
aam
add
stos
mov
push
cmp
mov
mov
repnz
ja
nop
rol
sub
sub
xorl
push
adc
popf
add
inc
hlt
sbb
cmp
popa
dec
push
inc
push
cmp
out
pop
lea
mov
xchg
xor
outsb
xlat
inc
inc
dec
insb
rorl
js
xchg
and
punpckhdq
int3
in
aaa
xor
or
movsb
mov
add
pop
pop
mov
rcll
cmp
mov
in
dec
cmpsl
mulb
xchg
js
or
pop
iret
mov
dec
push
daa
fistps
outsl
in
xor
decb
fbstp
mov
lea
pop
jo
cmp
mov
mov
clc
dec
lcall
pop
sbbl
mov
jnp
hlt
add
lea
mul
cmc
xchg
lcall
shl
xchg
stos
cmp
inc
rclb
sbb
iret
cmp
std
push
xchg
mov
sub
cld
sahf
stos
testl
lahf
jo
and
mov
mov
movsl
dec
jl
bound
dec
jbe
xor
xor
dec
xchg
es
fisubs
loop
jge
inc
cmp
icebp
inc
add
jnp
mov
das
pop
outsb
test
push
jb
jp
outsl
push
test
jns
lds
dec
loopne
fistpl
push
sbb
jbe
xor
add
jnp
js
popf
inc
jecxz
mov
cmp
nop
std
mov
sbb
call
inc
adc
mov
inc
mov
in
or
add
add
lods
movsb
sub
add
lods
mov
sub
shrb
push
add
in
aas
leave
lods
mov
jne
pop
incb
es
idivl
add
add
push
test
jb
frstor
jp
cmp
fisttpl
and
xlat
add
cmp
add
jne
and
xlat
or
or
es
dec
pop
inc
fisttps
xchg
dec
adc
fsubp
adc
lea
cmp
cmc
mov
fistpll
cmp
aad
xchg
aad
test
sub
mov
loope
xor
cltd
inc
rcrb
pop
fbstp
or
lahf
pop
dec
cwtl
repnz
fcomps
std
inc
pop
mov
pop
jns
pop
outsl
or
call
movsl
dec
or
mov
mov
out
lcall
sub
cmpsl
dec
ds
or
push
sbb
push
push
andb
and
or
das
lcall
pop
mov
test
adc
ljmp
mov
pusha
push
add
xchg
push
push
aad
das
ss
xchg
fs
leave
pop
outsb
jg
int
push
or
aaa
adc
sbb
pop
outsl
out
fstl
inc
sahf
mov
or
xchg
movsb
xchg
inc
call
insb
sbb
xor
adc
pusha
dec
jge
aas
xchg
test
fldenv
lods
pop
popf
inc
xlat
mov
addr16
jb
and
jg
cli
add
jae
adc
jnp
cld
xchg
jns
mov
sub
fsubrs
jge
das
fistl
lea
test
std
mov
rcrb
cmp
enter
fnstcw
bound
insb
cld
inc
push
leave
cmp
sub
sbb
inc
in
push
in
insb
sbb
adc
test
ljmp
das
pop
cmp
inc
or
mov
pop
or
sub
pop
into
sub
cmc
pop
std
add
sbb
cwtl
mov
fwait
and
cmpsl
adc
sbb
jb
jge
je
sbb
sbb
fidivs
fs
fbstp
cmp
jbe
test
cmp
sub
xor
imul
push
mov
ret
movsb
dec
xor
mov
pop
mov
inc
cmpsb
mov
push
mov
iret
dec
mov
cld
push
jmp
sbb
cmc
call
fdivrs
sub
push
popf
xchg
mov
jge
mov
stc
pop
ljmp
sub
sahf
mov
or
adc
mov
bound
dec
and
inc
mov
mov
popf
fadds
out
scas
pop
daa
mov
ljmp
jbe
aam
sarl
mov
xchg
int
andl
mov
aad
push
xlat
push
jbe
mov
rcl
jg
in
fwait
cmpsb
sbb
fsqrt
mov
dec
jge
jnp
hlt
das
mov
es
mov
dec
nop
add
cs
pusha
pop
rcrb
sar
fs
call
adc
inc
xchg
enter
pop
pop
mov
mov
xor
mov
fcomps
call
cli
aas
decl
in
jl
subb
repz
rcl
adc
out
je
lock
pop
pop
xor
cltd
insb
add
lret
mov
scas
nop
or
lods
rolb
push
push
cmp
jo
pop
icebp
sub
adc
xchg
out
adc
dec
mov
fucomi
jmp
dec
cmp
arpl
movsl
xor
sub
xor
jp
rorl
lods
stc
cltd
cwtl
jne
cmp
dec
les
fldenv
add
stos
adc
jecxz
dec
push
pop
shl
add
scas
mov
jb
call
xor
jg
lcall
js
push
rcrb
jmp
iret
fstp
lods
movsl
push
ds
mov
arpl
ds
scas
dec
int3
pop
call
fs
es
sarl
mov
stos
call
jnp
cmpsl
cmp
call
iret
inc
decl
xchg
xchg
outsl
dec
inc
pop
decb
dec
into
cmc
mov
adc
inc
les
and
mov
and
add
mov
out
cs
shll
push
sbbl
ror
jns
add
loop
mov
fyl2x
scas
and
call
and
xor
outsl
inc
aaa
cmp
out
jecxz
fdivrs
adc
bsf
cmp
orb
ja
adc
clc
dec
mov
adc
rcrl
imul
inc
fwait
dec
xor
cli
insl
cmp
mov
fwait
mov
in
push
mov
out
call
add
shll
mov
fs
in
xor
hlt
sbb
in
lods
xchg
adc
lods
add
cltd
cmpsl
and
inc
xor
iret
adcb
lds
bound
rcll
xor
push
mov
dec
in
adc
nop
push
push
pop
iret
lods
jle
fsubs
mov
inc
fucomip
mov
out
sub
sub
mov
mov
lret
rcrl
pop
fisubrs
pop
mov
xor
ficompl
dec
adc
scas
je
push
jmp
adc
imul
testb
xchg
out
ret
je
mov
dec
adc
push
rcr
and
je
xchg
sbb
mov
cmc
or
outsb
cmp
cmpsl
cltd
push
subl
or
out
jbe
mov
inc
sub
dec
xor
call
jb
push
repz
pop
or
push
xchg
xchg
out
xor
mov
cmc
add
or
loopne
out
add
pop
int
std
lret
push
outsl
insl
mov
in
scas
cmp
test
ret
or
push
lahf
ret
dec
xchg
fstpt
test
lods
cmpsb
in
pop
lret
jb
push
enter
push
ljmp
xchg
push
leave
pushfw
inc
icebp
ljmp
mov
jge
push
mov
lds
gs
leave
mov
ret
inc
outsl
mov
jns
mov
jno
push
int3
cmpb
adc
sbb
andl
push
cmp
mov
add
rolb
test
lods
int
mov
ljmp
mov
das
lret
cld
add
sbb
std
and
lret
hlt
test
push
jbe
jge
adc
mov
rorb
xchg
pushf
je
daa
and
mov
ljmp
stos
push
push
lods
sbb
mov
movsl
cmpsb
cmp
fnsave
aam
cmp
stos
xor
xchg
push
mov
cli
sbb
xchg
xchg
js
xchg
mov
or
ret
mov
rcrb
adcl
outsb
test
std
shll
sbb
and
lcall
mov
cld
outsl
dec
cmp
out
mov
mov
arpl
cltd
outsl
js
dec
dec
push
call
in
cld
stos
int3
mov
xchg
test
sbb
sub
lock
push
fldt
adc
jle
pop
aaa
es
aaa
ds
sbb
gs
subb
mov
xchg
or
and
push
sbb
dec
test
das
fucom
cld
cli
test
sti
iret
sub
fs
mov
sbb
push
mov
add
mov
mov
adc
into
dec
xchg
adc
hlt
add
inc
jb
sbb
mov
adc
xor
rcl
jae
insb
mov
jbe
mov
je
mov
mov
and
jb
lds
outsl
out
push
lods
mov
arpl
mov
imul
mov
push
sti
sbb
andb
jns
lods
adc
and
xchg
scas
les
mov
sbb
test
cmp
test
fincstp
push
inc
fidivrs
mov
jae
repz
jns
pop
push
jae
adc
dec
adc
repnz
cltd
mov
mov
lret
jo
scas
imul
inc
push
sarb
push
pusha
mov
imull
inc
cmp
inc
fidivrl
sub
dec
shl
lcall
out
pop
das
ja
adc
imul
xchg
dec
jnp
leave
shr
push
cwtl
js
and
lret
clc
inc
adc
icebp
pop
test
jns
daa
or
sti
lcall
push
lods
mov
xor
aaa
adc
test
pop
sub
xor
sbb
inc
and
negb
arpl
push
ret
push
mov
div
add
pop
iret
mov
les
dec
lea
jnp
roll
push
movsb
fldcw
ret
jmp
jae
insl
adc
fmul
cltd
packssdw
mov
lods
xor
aaa
pop
xchg
inc
inc
or
mov
lods
push
push
or
out
repnz
aam
mov
xchg
imul
mov
sarb
xor
push
sarl
loop
subl
ja
int
inc
nop
pop
or
cld
fwait
mov
xchg
in
mov
cld
testb
shll
ja
loopne
pop
loope
test
mov
push
pop
and
sub
mov
sti
orl
jecxz
popf
mov
or
or
mov
bound
andb
cmp
movsl
inc
or
cld
cmp
loope
scas
subl
pop
push
bound
popf
push
xorl
movsl
push
lods
icebp
and
sbb
mov
loope
pusha
cmp
jne
or
or
xchg
dec
sbb
jl
popf
dec
rcl
testb
stc
dec
mov
lock
or
fcompl
push
int
add
xchg
insb
mov
mov
inc
cmp
cmc
jbe
ret
ja
gs
cmpsb
in
inc
cmpsb
fmuls
scas
sub
xchg
mov
jae
andl
fsubp
cli
dec
lret
mov
mov
stc
notb
jb
data16
mov
sbb
test
mov
mov
loopne
sub
add
xchg
jnp
mul
xchg
sbb
mov
hlt
fwait
pop
dec
sbbb
cmpsl
stos
arpl
dec
leave
fnstenv
and
xor
cmp
adcb
sub
imul
nop
mov
stos
les
dec
mull
mov
mov
jl
in
sub
or
enter
mov
jbe
pop
push
aad
ljmp
cmp
pop
out
inc
adcl
inc
lea
cwtl
pusha
push
stos
es
and
sarb
out
subl
inc
mov
cmpsl
jp
pop
mov
in
cmp
mov
iret
lret
mov
sti
jg
dec
push
xlat
aam
xor
movsb
ss
jae
loope
int
and
iret
cmp
iret
cs
nop
lret
push
jmp
mov
pop
dec
mov
xchg
leave
jmp
hlt
and
call
sub
xchg
setg
push
popf
pushf
pop
jno
rorb
movsb
daa
scas
dec
jns
mov
lret
imul
sti
addl
pop
iret
je
popf
sbb
fmull
xorb
and
push
add
dec
movsb
fldt
cmp
imul
aam
sub
shrl
cmp
adc
int3
leave
cmpl
cs
aam
pop
push
adc
loop
xor
daa
xor
mov
adc
loop
mov
lock
pop
pushf
or
and
sub
pop
jmp
or
cmp
aaa
pop
mov
jg
jg
test
in
xor
push
inc
pop
cmp
push
adc
sub
js
pop
ror
inc
loopne
dec
xor
in
scas
xchg
push
adc
xor
mov
movsl
mov
int3
imul
sbb
mov
loop
jno
push
fneni(8087
cli
inc
xor
shr
and
and
shrl
inc
adc
push
lock
jb
insb
cltd
mov
xor
mov
xor
or
jns
jle
rolb
mov
rcrl
roll
std
mov
cmp
lret
aad
insb
xor
ror
cli
out
das
jmp
rcll
leave
pop
xchg
dec
sbb
xchg
pop
sbb
jge
sbb
comiss
ret
dec
cmpsl
insb
mov
mov
mov
repnz
jnp
out
sti
sbb
jg
out
or
out
inc
and
dec
cmp
test
adc
cmp
in
pop
adc
sbb
jns
jmp
rorl
fistl
ret
jno
in
sub
xor
jne
insb
fbstp
imul
js
xor
xchg
std
lods
add
out
cmpsl
xchg
lret
push
cmp
mov
push
and
push
xchg
add
xchg
out
ss
jns
call
sub
jl
scas
and
fsubrp
and
jge
adc
pop
aad
and
cmpsl
xor
rcr
push
xor
add
lcall
sbb
ret
add
dec
mov
dec
sbb
xchg
jno
popf
aas
popf
push
sbb
or
adc
mov
pop
imul
jne
cmp
mov
add
adc
repnz
jmp
xor
lret
push
sbb
cmp
stos
add
xor
or
push
mov
cltd
sahf
dec
mov
in
mov
out
cld
cmp
imul
xor
sub
scas
sti
cmpsb
sub
insl
push
aas
sti
shrd
push
mov
or
outsl
lret
mov
ja
dec
stc
test
imull
and
jl
push
push
mov
dec
add
or
roll
inc
lahf
pop
pop
and
mov
inc
xchg
mov
adc
jl
negb
ret
leave
insb
xor
jbe
scas
fbld
cwtl
sti
xchg
and
std
mov
and
pop
test
call
arpl
push
mov
sbb
xchg
ds
mov
test
inc
dec
adc
and
icebp
ret
lahf
loope
push
jge
popa
lcall
aaa
pop
ljmp
xor
adc
and
dec
inc
adc
mov
mov
test
mov
ror
outsb
dec
xchg
out
pop
cmc
sub
jne
leave
lea
mov
mov
fs
xor
xor
lods
mov
mov
test
add
lcall
or
popf
notl
cli
xor
sbb
imull
adc
fidivs
inc
cmp
loop,pn
xor
ffree
icebp
dec
sbb
add
inc
dec
jbe
dec
mov
shr
jp
repz
cmp
nop
mov
jl
inc
adc
call
sub
xchg
cmp
hlt
fisubs
scas
in
ja
out
xchg
popf
pusha
pop
pop
scas
push
or
or
mov
mov
pslld
scas
xchg
repz
scas
popa
stos
dec
fldenv
xchg
lock
int3
addr16
push
out
test
cmp
inc
out
sub
cs
xor
pop
push
push
in
subb
sbbb
and
mov
ja
mov
paddb
outsb
lcall
jbe
in
xchg
sbb
push
aam
sahf
jmp
xchg
push
sbb
mov
stos
scas
sub
sub
faddp
enter
cli
sti
pop
jne
mov
adc
ret
pop
push
ds
or
test
add
sbb
mov
push
pop
xchg
push
test
jge
aaa
mov
mov
push
int3
into
lret
mov
js
dec
xchg
push
cmpsb
pop
adc
add
test
sbb
push
sub
push
insl
or
jae
aas
or
into
and
test
mov
arpl
sub
mov
jno
lret
and
es
pop
daa
adc
inc
or
pop
addl
popa
dec
mov
push
rolb
xchg
mov
sub
mov
sahf
add
idiv
or
lock
aaa
mov
bound
cmc
je
push
sub
and
and
mov
mov
sarb
clc
cwtl
dec
jmp
mov
imul
movsb
sbb
outsb
inc
xchg
sahf
in
push
xchg
sarl
sbb
repnz
mov
cs
arpl
ds
sarb
cmpsb
cli
inc
cmp
call
pushf
out
xchg
sbb
cs
push
pop
dec
adc
leave
es
sbb
ret
inc
jb
cmp
lds
push
jg
stos
addl
cs
mov
jns
dec
lods
lcall
shrb
cmp
shll
jae
pop
lock
cmpb
or
lret
cli
pop
cmp
lret
loopne
push
cmp
xlat
cmp
xchg
or
mov
icebp
daa
adc
jge
repnz
mov
bound
adc
xor
xlat
imul
nop
sbb
sub
in
test
ret
mov
aad
mov
scas
les
sbb
sbb
pop
es
xchg
outsb
mov
push
and
cmpsb
inc
mov
push
xor
scas
clc
jmp
mov
pop
aas
adcl
mov
cmpl
les
mov
mulb
divps
dec
subl
cmp
jno
or
xlat
jmp
push
insl
sbbb
subb
fistps
roll
inc
mov
test
stos
adc
jmp
out
shll
jae
xchg
into
push
aaa
mov
inc
push
add
inc
int
inc
xchg
cwtl
outsb
hlt
les
testl
xor
fdivrl
popf
xor
jmp
xor
stc
dec
and
andl
lock
adc
cmp
mov
mov
out
je
xchg
fstps
fwait
aam
call
int
push
push
adc
inc
arpl
inc
mov
fs
xor
xor
lahf
cmpb
outsb
imul
mov
in
pop
or
push
or
stos
nop
or
shrb
add
loope
cmp
xlat
jl
bound
aaa
cmp
adc
stos
pushl
fdivrs
jo
xchg
push
je
xchg
jl
cmp
in
shlb
shrb
stos
push
xor
and
loop
dec
daa
cmp
outsb
adc
jmp
push
sbb
cmp
jp
jbe
push
add
movl
lock
and
test
pop
push
aaa
mov
sbb
sbb
sbb
mov
and
mov
add
adc
mov
icebp
jmp
cmp
dec
pop
adc
add
mov
lods
jge
cmc
inc
jno
orb
cwtl
sub
cltd
adc
pop
sub
dec
les
pop
mov
dec
push
adc
movsl
pop
mov
sti
dec
ljmp
cmp
adc
cmp
lock
push
and
add
jo
fwait
push
sahf
dec
jno
pop
push
dec
sub
fiaddl
and
mov
pcmpeqb
outsl
fdiv
aad
pop
in
jno
jo
das
dec
les
cmp
sar
inc
push
pop
je
push
inc
push
iret
push
add
into
jle
inc
fbld
xchg
out
test
js
out
movsb
jmp
add
pop
jg
in
fcomp
out
inc
lret
sub
sbb
fxch
mov
orb
rorl
mov
cs
sahf
mov
subl
jnp
sub
inc
in
xchg
jae
into
mov
jo
xchg
pop
enter
lock
js
jp
lds
test
inc
dec
jne
jg
leave
sahf
icebp
xchg
dec
lea
loop
mov
add
or
dec
and
sbb
push
mov
cld
jae
enter
xlat
mov
mov
sub
sub
setge
dec
gs
push
lret
out
mov
mov
lcall
jo
pop
jge
mov
xor
icebp
rcll
pop
adcl
mov
test
popf
mov
lret
nop
pop
stos
mov
adc
shrl
loopne
adc
jbe
lds
jns
jne
in
mov
cmp
xor
push
fcmovne
call
pop
les
cmp
in
mov
orl
adc
inc
xchg
xchg
and
scas
lock
fldt
add
loopne
xchg
gs
movsb
or
loope
dec
test
and
fidivrs
insl
xchg
xchg
repnz
enter
test
mov
mov
xor
movsb
xor
fwait
pop
enter
xchg
sbb
mov
test
nop
xchg
pop
pop
mov
stc
loop
xor
daa
out
aaa
adc
and
add
out
ds
adc
rorl
aad
cmpsl
xchg
xchg
push
cmp
scas
inc
push
pop
push
mov
sbb
mov
or
push
stc
sbb
sbb
lock
in
mov
rolb
mov
fmul
pop
ds
mov
or
dec
das
mov
add
iret
addr16
loopne
adc
sbb
xchg
jecxz
jmp
push
cs
into
loope
les
xor
mov
mov
into
subb
loopne
rcrl
dec
test
nop
add
loop
mull
mov
outsl
stos
xchg
lods
inc
or
lea
insb
or
jle
mov
mov
icebp
int3
or
inc
mov
push
int
mov
inc
in
mov
and
jp
sub
inc
into
test
imul
inc
ljmp
xor
inc
stc
std
stc
adc
sub
ljmp
cmp
ret
xor
and
out
jg
rclb
xor
iret
fdivrl
and
inc
xchg
stos
ret
popa
stos
mov
add
push
jl
sahf
cmp
pop
sub
bound
adc
push
xchg
sbb
out
in
and
hlt
icebp
fcmovu
bound
lsl
out
push
in
push
outsb
xchg
inc
pop
pop
dec
mov
cwtl
into
lret
rcll
out
aam
leave
push
jl
jge
fistpl
dec
mov
push
jge
push
shlb
adc
aam
aad
stos
push
mov
aad
aam
popf
sub
xchg
add
mov
out
int
and
cmp
sub
xlat
mov
hlt
mov
inc
mov
hlt
pop
xchg
stos
sarb
rcrl
push
cmpsl
jp
pop
jecxz
pop
jge
sub
pop
and
icebp
dec
add
popf
dec
dec
inc
dec
xchg
push
jp
push
add
icebp
fs
mov
sbb
mov
sub
into
jp
fnstsw
insb
mov
mov
or
add
push
dec
mov
sti
adc
inc
test
scas
cmp
out
mov
ljmp
jp
push
in
adc
shll
stc
stc
jbe
adc
mov
pop
cltd
push
xchg
fmuls
repz
mov
sbb
mov
cmp
shl
sbb
rcrl
jle
outsb
shrl
xorl
pusha
xchg
xchg
pop
push
test
pusha
mov
out
push
cmpsl
imul
out
xor
loop
xchg
cmovs
gs
aam
daa
insl
out
and
jecxz
jmp
sbb
xorl
dec
push
lret
pop
inc
adc
mov
arpl
aad
outsl
inc
cmp
test
dec
iret
jmp
sbb
lahf
mov
jo
es
xchg
cwtl
push
lock
inc
sub
repnz
lea
bound
jnp
and
jecxz
pop
mov
dec
mov
pop
call
or
lock
scas
loopne
xchg
inc
mov
or
cmp
xlat
pop
xor
jmp
ror
mov
cmp
ljmp
jne
mov
push
pushf
mov
aam
subb
pop
pushf
out
loope
bound
mov
not
and
out
call
lods
out
stc
sti
inc
ror
sbb
fistpl
xchg
stos
xchg
mov
subb
push
lock
jg
xchg
data16
and
sbb
roll
test
jnp
stc
aam
popf
mov
push
dec
xchg
js
xchg
or
mov
pop
jno
dec
dec
addr16
nop
cmpsl
xor
adc
xchg
xchg
mov
sbb
daa
clc
adc
dec
mov
pop
sbb
shr
dec
mov
cmp
mov
inc
pop
stos
xchg
dec
pop
in
iret
arpl
mov
stos
and
jge
xchg
sub
cmp
pusha
adc
add
dec
lahf
aam
call
xchg
mov
enter
and
mov
inc
testb
cwtl
aad
dec
add
jne
imul
jo
xchg
out
inc
push
inc
movsb
cwtl
popf
pop
fmull
cwtl
xchg
arpl
jno
xchg
pop
jo
je
xchg
sub
sub
sub
mov
jl
cmp
jecxz
push
call
jle
xor
popa
test
ds
gs
daa
mov
xchg
or
mov
shll
dec
pop
cld
sub
jo
sub
stos
or
inc
sub
loop
lea
dec
ljmp
mov
scas
pop
adc
leave
mov
movsl
clc
sbb
sbb
and
stc
jmp
jno
add
fs
in
mov
jbe
jle
lahf
mov
xor
jle
push
mov
cmp
fwait
test
mov
enter
xchg
fs
repnz
dec
sub
and
loopne
push
clc
xchg
cmp
lcall
adc
sub
in
or
icebp
and
xor
jecxz
imul
xchg
into
pop
cmc
mov
mov
shll
cmp
push
ficoml
sbb
addb
hlt
adc
sub
loope
xor
cmp
inc
test
and
sub
mov
xor
outsl
fstps
xchg
inc
pop
and
fwait
jb
ljmp
xor
cli
ret
adc
mov
pop
scas
cmp
fdivs
imulb
cld
ret
xchg
stos
std
sub
mov
dec
sub
cmp
push
into
pushf
fidivrl
ljmp
sbb
mov
sub
or
sarb
jno
xor
dec
dec
mul
or
ja
mov
jmp
lret
stos
xchg
lea
clc
inc
shlb
icebp
xchg
push
add
divl
or
sar
or
jno
test
sbb
sbb
sub
adc
outsb
sbb
dec
jne
ss
shlb
dec
and
push
inc
cmp
pop
xchg
mov
cs
filds
decl
jne
rclb
fists
dec
fnsave
adc
test
rolb
shr
push
ja
sub
enter
out
mov
push
and
lahf
in
mov
cmovb
jge
dec
mov
shll
pop
nop
cmc
mov
cmpsb
lods
adc
jl
push
out
out
andb
stos
mov
pop
data16
mov
rcrl
in
fs
jnp
mov
mov
xchg
xor
pop
mov
mov
xchg
imull
sti
stos
lods
loop
mov
mov
mov
xor
dec
sub
insl
cli
cmp
adc
std
xor
stos
jl
push
imul
sub
ficomps
mov
add
mov
mov
mov
and
pop
popa
outsl
sbb
cmpsl
jo
and
out
aas
cmpsl
loop
insb
filds
bound
fcom
adc
sbb
fisubrl
or
or
dec
test
sti
adc
shrl
fisttps
sbb
rcrl
inc
dec
jp
mov
neg
adc
cs
leave
fisttps
mov
jmp
add
ljmp
lret
mov
inc
lds
adc
punpcklbw
cs
pop
push
cs
test
call
sub
cmp
daa
imul
add
andl
pop
orl
mov
jmp
jno
vfrczpd
nop
inc
jbe
xor
push
gs
lahf
xchg
push
jns
shll
jp
out
stc
data16
shrl
or
lcall
cli
out
mov
in
dec
add
or
fnstcw
out
lds
and
adcl
jae
and
sub
mov
ret
mov
lret
rcrb
sub
loopne
lods
bound
jns
push
and
loop
aaa
ret
scas
pop
lea
push
push
je
mov
mov
rorl
push
lds
mulb
repz
pop
push
and
lods
int
sbbb
notb
mov
dec
pop
nop
inc
cmc
cmp
insb
test
xor
mov
sbb
js
adc
subl
icebp
and
sbb
popf
and
rclb
fstpt
in
clc
popa
mov
xlat
dec
pop
into
movsl
push
hlt
add
dec
sahf
stc
push
ss
adc
or
mov
or
sub
jo
std
mov
cwtl
dec
pop
mov
nop
adc
sbb
jle
rolb
and
mov
and
outsb
iret
mov
pusha
fcomps
mov
adc
sub
pop
add
outsb
add
dec
loop
clc
out
cmpsl
xchg
push
and
nop
sbb
xor
add
leave
mov
push
mov
add
mov
jb
sbb
cmpsl
pop
lahf
cli
dec
mov
adc
dec
mov
xor
mov
mov
sbb
loop
sbb
lcall
xchg
sbb
aam
lea
push
popf
push
cmp
ret
push
pop
mov
jno
mov
cmp
push
in
inc
call
fistpl
mov
repz
push
fistpll
and
loop
dec
pop
pop
and
cmpsb
xor
dec
xor
outsb
sub
ss
aas
or
mov
loope
inc
adc
insl
test
and
lds
lret
xchg
xor
mov
push
in
dec
and
xor
movsl
sub
adc
xlat
mull
int
les
aad
cltd
push
lods
mov
mov
lcall
pop
lock
test
in
sub
andb
xchg
sti
popf
xor
lahf
nop
dec
sbb
gs
sbb
cwtl
jmp
and
cld
inc
sbb
add
sbb
push
pop
and
push
lret
lret
jg
repz
gs
cmp
xor
dec
lock
bound
lret
push
jle
stc
sub
dec
pminub
aaa
in
dec
popa
mov
movsl
pop
int
or
dec
add
gs
sub
push
rcrb
std
fld
add
cmp
jg
add
in
xchg
and
shll
sub
loopne
cmpsl
mov
in
jne
int3
arpl
mov
adc
repnz
adc
js
sub
or
add
movsl
or
push
jg
in
mov
inc
push
in
adc
adc
xchg
iret
mov
adc
addr16
mov
int3
or
popa
shll
cmpsl
push
lods
push
sub
divb
clc
or
negb
into
add
dec
jb
mov
testl
imull
movsb
pop
outsl
mov
mov
or
xor
sub
mov
in
sbb
inc
call
rclb
subl
mov
loop
scas
movsb
nop
daa
dec
lock
xlat
insl
pop
mov
movsl
mov
not
cltd
das
and
das
inc
loopne
dec
mov
shr
fnclex
and
inc
enter
xor
loop
or
loopne
jo
mov
mov
mov
and
or
shll
xor
movsb
cli
inc
stc
or
xchg
lods
out
mov
popa
mov
sub
mov
fnstcw
int
popf
mov
enter
sbb
repnz
mov
jmp
sti
call
jno
clc
fwait
pop
lea
dec
add
sbb
xor
push
xchg
stc
add
sbb
adc
xchg
jbe
loop
addl
xor
mov
mov
fcoms
lock
loop
add
jp
inc
xor
push
cmc
cvttps2pi
xchg
cmp
sbb
je
mov
popf
mov
mov
xchg
sub
sub
push
sub
sti
add
pop
xchg
pop
dec
cli
mov
fisubrl
or
or
imul
icebp
jb
fadd
push
nop
test
dec
and
dec
adc
iret
lea
or
mov
lahf
push
or
cld
sub
dec
shrb
insb
pop
mov
sahf
test
xor
idiv
int3
xchg
xor
lods
pop
pop
and
outsl
and
xor
xor
pop
arpl
xchg
jb
pop
pop
inc
notb
ret
xchg
jnp
pusha
aas
decl
cmp
sarb
stos
daa
mov
add
mov
dec
out
jne
fcom
lock
xchg
lret
push
push
aas
dec
mov
pop
and
addl
pop
pop
jl
je
mov
jbe
fistpll
lea
out
inc
xchg
fmull
jbe
pusha
test
xchg
scas
and
cmp
or
incl
lret
xchg
and
sbb
inc
pushf
pop
lcall
xchg
in
xchg
jmp
outsl
pop
xchg
cmp
pop
jb
dec
ss
mov
roll
icebp
xchg
cmp
mov
pushf
sarl
dec
pop
lods
imul
loopne
lods
sbb
outsb
out
gs
xor
call
mov
sbb
xor
jecxz
cmpb
xchg
mov
je
ret
clc
in
cld
shrl
dec
aaa
xchg
sbb
sbb
loopne
pop
xor
pop
insb
or
out
popa
mov
xor
inc
inc
cmp
add
cmovp
sti
mov
or
in
jno
test
outsb
xor
arpl
adc
jg
pop
ljmp
xchg
xorb
jbe
jmp
lods
mov
pop
pushf
cmpsl
adc
pop
dec
dec
or
xlat
add
mov
xchg
js
xor
push
dec
into
and
push
inc
repz
push
dec
mov
mov
loope
pop
mov
adc
fnstcw
fdivs
dec
mov
div
xchg
and
and
in
mov
mov
in
dec
loopne
aas
clc
sub
dec
xchg
jecxz
test
sbbl
jns
stos
nop
dec
loope
scas
sahf
scas
jns
icebp
shlb
jle
add
xchg
mov
js
jns
or
sub
sbb
fwait
stc
adc
mov
mov
int
xlat
mov
mov
and
cltd
das
cmp
cwtl
les
loope
ja
les
sbb
adc
test
in
mov
inc
cmp
ds
js
xor
pop
jecxz
imul
lretw
cltd
sub
shl
jns
push
mov
dec
xchg
push
in
lret
int
add
addb
cmp
inc
testb
aam
out
roll
rolb
and
xchg
jle
popa
jb
sbb
adc
je
sub
mov
lahf
cmp
loope
mov
pop
adc
ret
push
push
enter
pop
inc
mov
inc
mov
clc
dec
ret
cmp
and
dec
sub
outsl
or
mov
fcompl
incb
vpmaddwd
xor
sub
mov
clc
xchg
adc
xchg
mov
jae
dec
test
cli
int3
inc
rclb
ja
adc
fsub
imul
sbb
pop
out
iret
mov
std
outsb
pop
and
adc
inc
pop
or
sbb
jbe
xchg
push
push
test
gs
sbb
mov
adc
dec
push
mov
in
nop
mov
mov
jns
mov
mov
push
shlb
adc
ret
cmc
insb
push
aaa
in
mov
sub
popf
into
adc
filds
aas
inc
pushl
mov
dec
xchg
xlat
int3
inc
mov
dec
fsubrs
dec
mov
mov
ljmp
mov
nop
dec
shl
test
mov
push
xchg
pop
rcl
repz
leave
popa
xchg
jmp
jg
nop
mov
add
or
les
ss
and
xor
sub
int3
mov
mov
jge
dec
mov
addb
and
test
hlt
js
pop
push
sbb
testl
mov
xchg
and
cmp
sbb
pop
pop
mov
rcrl
fstps
stc
add
std
push
test
lock
imul
pop
pop
xchg
lock
add
mov
mov
das
xor
in
fadd
pop
or
rol
mov
add
shrb
sbb
ret
rcll
pop
movsb
or
sub
fcompl
or
push
inc
data16
out
sbb
mov
mov
stos
outsl
js
adc
cmp
mov
outsl
popa
arpl
pushf
dec
roll
push
mov
sub
xor
lods
out
inc
mov
and
pop
xor
or
inc
lock
xchg
mov
xchg
push
dec
adc
idivb
push
inc
nop
fisubs
pop
xor
xchg
mov
scas
xchg
xlat
and
jp
push
shrb
ret
mov
push
inc
mov
add
lahf
sub
adc
shlb
int
and
push
cmp
dec
arpl
inc
movsl
movsb
icebp
clc
rol
dec
in
cmc
mov
call
lds
add
inc
add
leave
inc
rcrl
mov
push
mov
sahf
xchg
arpl
imul
jbe
daa
lds
lcall
xchg
sbb
test
arpl
loope
mov
and
dec
mov
ss
adc
mov
pop
dec
int
add
popf
pop
movsl
xor
and
das
or
push
shll
push
shr
daa
push
xchg
pop
push
xor
xor
dec
mov
lods
cmp
xor
int3
mov
xchg
or
jl
adc
jnp
jecxz
inc
adc
or
dec
push
pop
push
push
fisubrs
xorl
cmpb
in
arpl
clc
cli
mov
push
gs
inc
dec
loope
inc
sub
cmp
fdivrs
fnstenv
out
loop
push
push
mov
aam
push
mov
shlb
xor
mov
cmp
daa
mov
push
ja
and
cli
cmpsl
les
mov
push
cld
dec
mov
xor
mov
pop
lret
in
pop
pop
adc
pop
and
es
cmp
or
cs
mov
std
scas
jo
dec
dec
xchg
xor
adc
nop
adc
je
ret
shr
notl
lret
xchg
mov
fcomi
mov
idiv
cwtl
jb
in
sbb
aaa
adc
sahf
push
movsl
lret
dec
ss
add
push
hlt
xchg
xor
dec
or
roll
pop
dec
scas
pop
outsb
popa
fiadds
fstpl
ret
fsubrl
mov
push
pop
gs
mov
rcrl
shrb
lock
cvtpi2ps
or
sbb
mov
mov
int3
les
rcr
inc
xor
cmp
and
mov
and
and
mov
int
gs
mov
scas
fs
pop
add
jl
test
in
pop
sub
outsl
jns
sbb
lods
mov
push
bound
sahf
cltd
lret
push
jecxz
mov
lock
das
mov
popf
jecxz
inc
aas
inc
mov
push
jno
xor
test
mov
loop
or
push
xchg
jbe
nop
xor
mov
mov
repz
jmp
mov
xor
cmpsb
imul
pop
sub
into
loopne
mov
mov
cwtl
scas
or
add
and
dec
ret
cmp
outsl
cmp
ret
jne
fimull
sbb
leave
cmp
and
mov
test
fdivl
cmp
ljmp
fnsave
test
dec
and
ret
mov
adc
mov
movsb
jb
xchg
dec
pop
mov
pop
dec
jp
adc
idivb
dec
sub
je
pop
xchg
insl
or
addb
xor
movsb
or
inc
pop
and
adc
xorb
imul
adc
stos
xchg
ja
movsb
cmp
pushl
dec
cmp
outsb
lret
pushf
adc
jle
insl
add
leave
je
es
stc
sbb
into
sub
mov
ss
aad
in
bound
je
push
inc
sub
nop
lds
dec
loopne
xchg
xchg
mov
dec
or
das
jo
and
cmpsl
add
pop
pop
mov
add
filds
cmp
loope
adc
sti
xchg
dec
add
and
ds
lea
fnstenv
sub
cmc
push
movsb
mov
jne
mov
ret
mov
cli
fpatan
sub
clc
sbb
xchg
je
inc
mov
jge
jbe
enter
insl
push
mov
int3
xchg
aas
jb
xchg
call
sbb
push
sbb
insb
or
movsl
loopne
jnp
add
adcl
mov
mov
leave
mov
xor
pop
test
mov
clc
ret
xor
adc
mov
pop
xchg
aam
or
jo
dec
dec
push
xor
das
das
ret
loope
push
ds
in
push
push
test
shll
pop
add
enter
lcall
mov
fmuls
dec
add
adc
clc
divl
in
test
inc
or
mov
jle
push
jb
lods
pop
cli
pop
xchg
cld
push
sub
jp
jecxz
xor
fs
mov
jecxz
mov
cmp
push
and
sub
xor
fnstsw
pop
add
test
jae
lds
xchg
push
insb
out
mov
or
outsb
mov
out
test
mov
cltd
dec
xor
xlat
mov
daa
inc
mov
pop
or
ret
stos
lods
rol
pop
push
movsl
adc
cltd
cwtl
mov
test
pop
shll
adc
add
popf
push
clc
or
jo
mov
fstpt
jecxz
xchg
mov
adc
out
into
sbb
pop
pop
lcall
dec
in
lods
or
cs
inc
iret
popf
xor
aad
repnz
sbb
call
sbb
push
sbb
js
mov
call
mov
dec
std
sbb
mov
mov
inc
inc
mov
and
js
adc
lock
imulb
daa
or
dec
punpckldq
push
jge
cmp
hlt
fistps
pop
inc
lret
or
ret
mov
cmpsb
sub
lahf
outsl
add
mov
mov
xor
push
iret
pop
shr
neg
movsb
popa
in
adc
les
pop
xchg
cs
or
sbb
inc
mov
ljmp
fistpl
inc
ret
outsb
inc
jg
ja
enter
mov
mov
adc
cmp
add
ret
dec
inc
das
dec
pop
jbe
mov
push
or
mov
pop
sahf
mov
insl
loope
mov
jb
mov
or
ret
dec
jge
pop
outsl
jae
insb
mov
sbb
arpl
adc
movsb
in
sahf
or
cwtl
mov
cmpsl
lock
inc
dec
sbb
mov
shr
inc
aaa
aam
fidivrl
add
sbb
push
btr
inc
sbb
cmp
pop
ja
inc
push
out
das
orl
mov
push
push
mov
add
dec
rclb
fmull
mov
imul
xchg
pop
rcr
in
cwtl
movsb
scas
out
das
and
fdivs
lret
pop
movsb
sub
sbb
sbb
movsl
cmp
push
clc
mov
xor
jae
pop
sub
imulb
xor
cmc
xchg
fs
push
in
sbb
scas
push
std
and
and
ret
jbe
sbb
sbbb
addl
cmp
or
pop
cltd
bound
daa
hlt
out
lret
mov
test
cmp
xchg
push
mov
out
jmp
push
mov
adc
movl
push
push
add
xchg
imul
cmp
mov
rcrb
lcall
xorl
dec
ss
cmpsl
add
cmp
dec
dec
push
out
adc
push
mov
sub
pop
jno
fildll
int3
pop
mov
ss
dec
xor
add
enter
nop
dec
lods
ret
adcb
sti
in
addr16
mov
adc
lods
lds
dec
xchg
loope
add
jae
daa
mov
repz
jnp
sub
mov
sbb
jbe
cld
jle
inc
jae
in
cmc
xchg
outsl
push
cld
mov
lret
in
dec
dec
cli
pop
inc
or
stos
push
push
cmp
out
mov
enter
out
lcall
sti
push
mov
and
div
out
sbb
mov
cmp
sbb
push
into
pop
mov
mov
mov
sbb
jae
pop
adc
outsl
mov
inc
ret
test
lret
push
pop
jmp
lahf
or
inc
icebp
xchg
xchg
mov
jle
dec
aam
mov
fldenv
out
and
addr16
pop
leave
jl
mov
xor
jge
cmpsl
mov
rclb
pop
xchg
popf
aam
or
pop
push
inc
inc
xor
es
xor
xchg
mov
or
test
test
sbb
mov
cmp
int3
popf
xchg
add
jne
adc
add
xor
mov
fsubrs
repz
mov
dec
in
sbb
repz
jecxz
inc
mov
mov
testb
xor
add
inc
mov
repz
pop
push
pusha
pop
inc
jl
cmc
push
xchg
mov
pop
add
setnp
dec
push
and
xchg
scas
ss
inc
push
pop
cmpsl
popf
fdivs
jp
mov
sarb
in
bound
adc
stc
mov
pop
js
pop
scas
fbld
push
test
push
int3
pop
jge
std
or
insb
mov
jge
xor
fs
imull
jae
mov
and
in
movsl
fstp
cmp
lret
jb
mov
xchg
pop
lods
push
aaa
inc
mov
out
xor
in
test
dec
mov
shlb
jne
xor
nop
cltd
adc
or
out
mov
or
mov
add
sub
mov
mov
loop
mov
xor
std
sub
sahf
shl
and
sti
fldt
loop
xchg
into
sub
mov
cld
push
mov
add
mov
sbb
mov
out
lret
pop
and
lods
jae
ds
jge
pushf
and
jne
cmp
fsubrs
push
popa
adc
and
out
jae
xor
mov
jno
dec
pop
lds
xchg
js
adc
orb
push
lea
rcl
lcall
push
push
push
daa
out
loop
mov
test
dec
mov
jmp
mov
xchg
les
sar
aam
lahf
orl
and
je
mov
and
leave
mov
xor
jge
iret
rcrl
rcrl
test
sbb
mov
loop
dec
jo
xchg
inc
js
mov
ds
inc
adc
daa
mov
insl
mov
push
cmpsl
into
mov
mov
orl
lods
cmp
stc
outsb
sub
stos
fadd
dec
lahf
add
gs
icebp
and
vsubps
mov
outsb
add
out
sbb
jb
fstl
bound
out
mov
fisubl
test
push
imul
jecxz
inc
push
subb
mov
push
mov
dec
aaa
movsb
mov
push
stc
popf
inc
jno
jb
lds
insl
jmp
lcall
sbb
lret
in
js
das
inc
lods
jo
aam
addr16
outsb
stos
add
movb
push
dec
cld
enter
push
popf
fiadds
sub
lods
lea
pop
ljmp
adc
shll
cmpsl
sbb
movsl
outsb
and
and
loope
dec
mov
pop
mov
stc
dec
jl
scas
sbb
loopne
cmc
addr16
out
mov
ja
lret
sbb
ds
fcmovb
inc
mov
mov
movsl
pop
sub
pop
mov
push
clc
push
aad
pop
pop
xor
or
loopne
push
repz
lea
inc
mov
jb
out
ror
xchg
mov
outsl
cltd
lret
fmuls
testl
ljmp
movsl
stos
dec
outsb
pop
jle
loop
cmp
int3
inc
and
mov
enter
add
dec
mov
loopne
mov
in
aaa
mov
shll
shl
ds
xor
repnz
in
imul
dec
sbb
inc
ret
cmpsb
dec
fidivrl
pop
inc
sub
fsubs
jl
jo
adc
or
jnp
add
out
test
out
lret
mov
xchg
pushf
aam
jno
shrl
test
rol
adc
dec
xor
adc
iret
xor
xor
jno
sub
lods
jge
inc
test
xchg
clc
outsb
dec
and
jmp
dec
pop
push
mov
pop
or
sbb
cmpl
mov
mov
add
dec
fidivs
gs
les
jnp
pusha
test
mov
cmpsb
sti
dec
dec
call
inc
es
push
jle
pushf
push
jo
push
daa
stc
fcmovbe
add
cmpsb
in
dec
xchg
jae
push
ss
aaa
and
push
jnp
sti
sbb
mov
lods
cmp
lods
sub
cmp
mov
loopne
mov
jnp
or
push
cmp
ret
mov
mov
and
push
scas
mov
add
cmp
xor
mov
std
xchg
pop
or
imul
test
dec
ficompl
pop
stos
rclb
aas
pushw
dec
or
add
xchg
cmp
repz
mov
lahf
pop
sarl
rclb
cmp
adc
sub
cld
mov
repnz
sub
arpl
and
lahf
sub
jne
cmpsl
ret
inc
add
es
or
sub
or
les
incl
aas
sarb
rol
mov
pop
test
mov
pop
sub
add
xchg
cmp
lock
js
xor
jecxz
inc
cmp
cmp
adc
sahf
testb
je
jb
cwtl
ljmp
push
fisubrl
sahf
xchg
sub
add
mov
mov
fwait
lahf
into
sbb
adc
cmp
insl
addr16
mov
lcall
inc
xor
sbb
stos
cltd
adc
mov
and
ja
lret
lcall
jne
cmp
mov
fistpl
jno
xor
test
mov
xchg
push
stc
test
adc
push
stos
xor
push
lahf
cltd
add
out
out
icebp
sub
adc
or
add
mov
jne
mov
popa
xor
cmpsb
icebp
mov
in
sti
jge
jae
bound
rcrl
stos
sbbb
xchg
sti
int3
push
pushf
mov
jl
test
sarl
mov
inc
out
fisubrl
cmp
jb
add
imul
jnp
call
dec
int3
sub
fisttpl
mov
and
cli
cs
repz
gs
lods
lea
cwtl
or
test
mov
loopne
scas
aad
mov
fcom
push
mov
cmp
sbb
mov
push
mov
icebp
add
pop
loop
ja
or
jnp
loop
std
sti
jp
mov
dec
dec
scas
pop
in
mov
mov
mov
movsb
icebp
push
xchg
jecxz
mov
adc
cld
std
iret
test
clc
mov
in
aas
add
fwait
out
std
sbb
push
popf
jno
push
ds
mov
push
fstpl
fsubrl
jp
jmp
or
sub
xchg
mov
pushl
es
mov
push
fimull
jmp
test
lret
mov
scas
and
stos
pop
dec
sbb
out
sub
pop
pusha
imul
xor
lock
adc
jmp
push
scas
mov
pusha
or
adc
sahf
lret
dec
or
insb
inc
out
iret
sub
mov
mov
ret
popaw
mov
call
fwait
clc
mov
iret
fisttpll
jno,pn
and
lret
inc
pop
cltd
shr
push
imul
mov
add
sub
and
loopne
mov
sub
xor
mov
sub
fisttpl
jns
xchg
push
into
jle
pop
lret
nop
mov
rol
cmp
cmc
dec
fwait
dec
push
jge
aas
ror
push
inc
call
aad
sub
loop
into
cli
fucomip
in
jp
sub
ljmp
push
daa
jne
jle
or
push
push
mov
xor
sti
stos
dec
frstor
or
xchg
test
push
xor
leave
pop
lea
lretw
mov
mov
js
cltd
jl
push
cmpsb
ret
sub
movsb
jg
xor
jb
cli
lahf
stos
mov
iret
or
xor
sub
xor
sahf
xchg
push
loopne
lcall
mov
xchg
xchg
shrl
movsl
jnp
push
ret
stc
mov
sti
push
cmpsl
or
int3
std
mov
cwtl
and
or
add
dec
stos
int3
and
into
mov
dec
stos
mov
rorl
cmp
push
push
cmovo
lret
push
mov
push
fsubrs
sbb
cwtl
test
add
or
mov
cmp
sti
lock
int3
out
inc
xor
mov
or
cwtl
add
and
mov
push
adc
and
jae
pop
inc
ljmp
jb
xor
mov
cwtl
bound
sarb
push
call
daa
pop
lea
or
sbb
jnp
adc
xchg
mov
adc
pop
push
into
dec
insl
jle
inc
jbe
jp
scas
inc
insl
mov
shlb
jp
inc
outsl
cmpsl
dec
movsl
ljmp
jne
in
xchg
aam
xchg
out
mov
pop
int
je
jg
int3
sbb
jge
scas
sahf
leave
dec
push
mov
push
xor
jbe
ret
sub
push
or
stos
clc
in
nop
daa
mov
cmp
js
popa
sub
outsl
dec
dec
fists
dec
das
mov
adc
xchg
out
in
push
sbb
fistps
dec
sahf
adc
lods
pushf
data16
scas
outsb
outsl
and
rclb
jnp
and
hlt
fwait
mov
test
fwait
cltd
and
loope
mov
pop
jle
mov
sbb
call
arpl
jmp
test
add
pop
xlat
in
push
popf
andl
or
notb
loope
das
pusha
lahf
dec
push
jbe
bnd
lods
jge
ja
jg
mov
sub
sub
push
sti
push
dec
pop
fwait
mov
repz
mov
test
mov
in
mov
pop
gs
mov
sahf
add
xor
movd
leave
adc
out
mov
jg
and
jno
dec
insl
sub
lret
fldcw
xlat
into
and
out
shll
icebp
std
stc
sahf
clc
fistl
mov
add
ds
adc
and
idivl
xor
cmp
loopne
stos
outsb
add
cmp
and
fidivl
rcr
sub
ljmp
xor
sbb
cli
das
dec
bound
movsl
dec
adc
test
dec
add
mov
in
ret
dec
add
jnp
rcl
xchg
lds
cmp
adc
movl
ljmp
mov
jo
into
roll
cld
fistl
gs
leave
pop
dec
dec
dec
cmpsb
pop
insl
jle
imul
sbb
lret
cld
sbb
out
and
cmp
test
clc
imul
or
sbb
jg
icebp
movsl
mov
aas
cwtl
cld
dec
mov
imul
mov
pop
sti
sahf
stos
jge
jbe
inc
idivb
stc
xchg
push
sahf
push
popf
fwait
sbb
cmp
arpl
in
hlt
jl
inc
in
popf
xor
jecxz
shll
popa
jge
pop
push
fstcw
inc
dec
mov
and
inc
xchg
jecxz
mov
or
add
pop
dec
out
pop
adc
mov
dec
jle
and
inc
and
cmp
sub
in
std
shrl
jge
jae
cld
bound
xchg
call
push
les
xchg
into
negl
popa
xchg
push
inc
and
add
xchg
xlat
std
add
mov
dec
mov
bswap
popf
xchg
les
dec
add
add
push
movsl
push
xlat
js
jge
xchg
add
mov
cmpsl
mov
push
dec
aam
stos
stc
daa
cli
mov
pop
dec
in
mov
cmpb
jecxz
aaa
into
adc
icebp
cld
into
insl
rcl
mov
out
xor
sbb
and
repz
pop
dec
dec
mov
push
outsl
sub
dec
xchg
into
sbb
push
adcb
add
roll
mov
daa
mov
push
lret
inc
outsb
and
and
loop
sbb
or
mov
repz
popf
xchg
add
xor
stc
ljmp
movsl
jae
mov
out
push
cli
cmpsb
push
in
lods
or
mov
cmp
jmp
xchg
xchg
lahf
sbb
push
adc
inc
or
lea
dec
mov
repz
cmp
xchg
nop
mov
imul
pop
push
fistl
xchg
daa
xlat
pop
pop
jmp
xor
pmaxub
pop
or
mov
cmc
inc
dec
imul
mov
addb
push
addr16
mov
hlt
xchg
adc
out
pop
xor
cmpsb
fiaddl
cmc
jne
xchg
flds
subb
xchg
inc
jp
jns
fidivs
xor
push
shl
fldcw
cs
popa
pop
lock
cmp
sbb
inc
mov
aas
loopne
mul
cmp
sub
push
add
stos
fsubs
idivl
push
outsb
pop
lea
std
enter
repnz
mov
mov
push
xchg
jno
cwtl
loop
mov
mov
sub
call
xor
xlat
inc
cmpsb
xchg
sbb
ds
cwtl
dec
xchg
adc
push
jb
adc
dec
and
mov
mov
int3
jg
out
push
sub
dec
add
inc
adc
cltd
mov
lret
movsb
mov
dec
jmp
mov
movlps
cmp
rorl
mov
cli
or
jecxz
adc
pushf
shrl
mov
adc
pop
dec
mov
or
xor
call
fidivl
mov
cli
and
cmpl
or
sarb
enter
test
rolb
pop
adc
es
dec
pop
sbbb
push
shl
scas
cmp
jbe
inc
push
rcrb
enter
inc
shl
scas
nop
xor
arpl
std
gs
fucom
in
jnp
or
popf
jmp
in
cmp
testl
push
mov
sub
cmpsb
mov
iret
jecxz
mov
iret
push
mov
sub
sbb
xlat
call
mov
outsb
pop
and
ret
mov
jl
cld
and
fldcw
jle
and
sbb
mov
push
sahf
aas
std
inc
imull
insb
pop
dec
mov
clc
or
xchg
fwait
popf
sbb
addr16
sti
lock
inc
inc
mov
xchg
mov
mov
push
icebp
dec
mov
lods
cmpsl
std
lret
jnp
das
loopne
push
lret
jg
cmp
lcall
fcomps
imul
sub
mov
std
insb
mov
pop
jnp
push
sub
jmp
fisubl
das
and
mov
cld
xor
test
fimull
mov
call
dec
fidivs
add
jge
loope
dec
inc
sbb
clc
stos
int
nop
fimull
push
mov
mov
mov
sub
push
cmpsl
mov
dec
or
testb
in
mov
and
mov
inc
sbb
push
xor
mov
imul
xchg
out
lret
outsl
mov
scas
push
jb
cmp
mov
push
popf
push
xchg
adc
and
push
jle
sti
or
imul
cmp
dec
fistpll
pop
adc
cld
push
or
addr16
sub
jl
mov
repnz
cmpsb
outsl
mov
cmp
pop
fisubrs
add
sbb
in
xchg
pop
push
adc
or
mov
ficoms
pop
cwtl
cmp
std
mov
lahf
ror
shrb
mov
testb
rorb
outsb
add
movsl
add
in
outsl
xlat
mov
jae
rcr
call
out
push
and
push
roll
adcl
xchg
idivb
in
xlat
repz
jbe
in
lds
into
ficoms
jmp
mov
decl
mov
inc
sub
pop
repnz
stc
idiv
ljmp
pushf
dec
and
lahf
cmpsl
jns
adc
or
xchg
in
sti
stc
scas
and
aam
sahf
test
mov
andl
lret
lds
lret
push
fldt
loope
xor
or
jle
in
add
je
ljmp
cmp
repnz
xchg
or
fwait
cmpl
je
rclb
jl
mov
sub
add
cmpsl
and
cli
loop
in
jo
add
lods
mov
insl
rcrl
mov
inc
sub
dec
jno
push
orb
mov
lahf
in
pavgw
sbb
scas
fists
scas
shrb
xchg
adc
xor
out
mov
aam
xor
pop
jnp
test
shll
test
leave
testb
mov
jp
dec
arpl
int
sub
sbb
dec
out
dec
lods
pop
rcr
dec
cmpsl
jns
test
aam
cltd
stos
sub
lcall
and
sbbb
ret
cmp
scas
aam
lret
sub
pop
xchg
dec
mov
mov
aad
xchg
aam
pop
inc
pushf
cmp
dec
int
test
jl
test
dec
pop
dec
imul
je
mov
sbb
inc
xchg
mov
xor
and
add
add
fcomi
sub
fisttpll
push
std
push
stos
popf
add
xlat
test
or
jae
ficompl
fistpll
add
dec
or
iret
ficoms
cmp
inc
lds
jmp
dec
mov
repz
adc
sbb
fld
jne
aaa
fldl
mov
or
add
jns
jge
lret
add
stos
mov
cltd
push
xor
xorb
leave
sahf
sub
test
mov
nop
mov
jmp
fiadds
inc
sti
pop
add
sub
inc
cs
dec
and
js
stos
es
insl
or
fwait
mov
mov
mov
repz
out
xor
js
jnp
sahf
int
std
sub
or
sti
test
add
ja
enter
movsb
lods
pop
cmpsb
hlt
sub
jl
nop
xchg
enter
dec
movsl
xor
dec
pushf
cmp
jns
push
add
rorl
mov
lods
ror
pushf
ret
adc
jbe
out
mov
inc
dec
fmuls
inc
call
jnp
or
sahf
movsl
call
out
bound
cld
mov
aad
cmp
mov
lahf
jle
mov
xchg
inc
cmp
repnz
push
out
pusha
sub
fdivs
lods
fadd
fs
cld
les
xchg
add
mov
push
xchg
cmp
or
jecxz
push
adc
jns
ljmp
jl
push
jb
sub
xchg
xchg
scas
clc
mov
add
mov
mov
pop
mov
jb
dec
test
jp
js
rol
xchg
cmp
mov
push
add
mov
std
jmp
jecxz
lods
repnz
dec
rcrl
mov
mov
call
mov
mov
cli
mov
cltd
mov
aaa
lret
mov
inc
insb
sbb
push
push
mov
scas
xchg
ficompl
push
leave
cmp
test
inc
sbb
lock
fwait
dec
call
int3
dec
sbb
fmuls
pushf
add
or
mov
shll
in
rcll
lea
test
adc
xchg
cmpsl
pop
add
mov
adc
jmp
jbe
fxch
jno
imul
mov
mov
sub
aas
scas
and
loope
mov
and
pushf
mov
stos
jmp
xchg
mov
sti
in
xchg
and
scas
jmp
or
mov
sub
or
es
nop
js
push
jae
dec
into
pusha
popa
mov
xchg
jle
lods
dec
test
push
sub
pop
insl
cmp
ret
jno
cmp
xchg
subb
jae
hlt
movsb
xchg
in
subb
sub
imul
idivl
les
jecxz
scas
pop
lret
xor
gs
push
jae
std
sbb
xchg
lret
pop
mov
or
xlat
stos
inc
mov
mov
fsub
add
out
inc
outsl
fs
add
add
pop
addb
and
popa
pop
inc
aam
jns
daa
xchg
dec
xor
mov
sti
inc
dec
jo
jecxz
ffreep
fistpll
in
rcrb
js
call
data16
xor
test
popf
push
sub
xchg
call
orb
mov
adc
cld
mov
xchg
mov
or
orb
adc
xchg
out
jecxz
mov
inc
cmc
fisttpll
push
call
mov
jb
lds
int3
pop
cmp
add
stc
jl
dec
mov
cmp
das
and
notb
not
scas
fsubs
xchg
xor
mov
imul
xor
pushf
cmpsl
jge
mov
je
cmpsb
xlat
popf
das
lcall
lcall
pusha
mov
icebp
addr16
cltd
push
ja
repz
fmull
lret
push
jns
mov
lret
rclb
lods
lds
sub
std
mov
cs
cltd
mov
fsub
in
dec
jge
scas
xorl
adc
lods
or
and
mov
mov
mov
and
addl
imul
out
loopne
pop
test
stos
sbb
repz
rcl
mov
enter
and
cwtl
bound
aaa
sub
ret
inc
push
cmc
push
pop
sub
dec
or
inc
jb
cmp
js
sub
jp
cmc
jle
jns
scas
jne
inc
cwtl
mov
test
mov
int
add
mov
adc
add
xor
jbe
mov
xor
repz
lods
sub
xchg
aaa
in
cli
scas
push
jne
inc
into
jmp
sbb
inc
xlat
es
ds
push
fldcw
mov
imul
addr16
pop
mov
xchg
dec
xchg
dec
cmp
ret
mov
int3
mov
mov
stos
adc
insl
xchg
ss
outsl
cmpsb
xchg
pop
shrb
fadds
nop
mov
lods
and
negl
leave
push
xchg
cmp
outsl
xchg
or
adc
jmp
or
and
xchg
inc
cld
bound
stos
or
xchg
lret
insl
xlat
addb
xchg
jbe
jnp
sub
mov
ror
cmp
int
dec
jae
adc
xchg
outsl
jp
clc
ss
mov
push
fwait
rcrb
pop
xor
or
nop
or
pop
push
lss
cmp
mov
incl
xchg
pop
cs
push
repz
pop
mov
inc
adc
mov
xchg
nop
and
dec
or
jl
sub
mov
cmpsl
outsl
in
inc
pop
pop
sub
push
es
or
inc
dec
or
dec
fadd
in
add
xor
xchg
into
jp
popa
sbb
xchg
pop
push
cs
sub
inc
insl
je
lahf
dec
inc
or
insb
sub
sub
insb
out
fnsave
in
or
nop
shr
pop
outsb
movsb
ret
dec
inc
add
pop
lahf
aam
inc
pushf
ljmp
cli
std
decl
out
subb
insl
lods
out
cmp
sbb
lods
aaa
sahf
or
mov
daa
inc
ljmp
popf
xor
and
sub
inc
push
mov
sbb
dec
aas
mov
in
mov
sbb
xchg
addb
mov
sub
pusha
mov
dec
jmp
cmp
int
ja
rolb
inc
testb
lods
and
out
popa
stos
xor
sbb
nop
push
dec
imul
mov
movsb
shlb
xchg
mov
in
jns
movsb
test
shlb
push
aad
or
fdivrl
mov
out
lahf
je
xor
mov
xor
or
pop
push
cmp
mov
mov
test
sbb
push
mov
pushf
add
adc
mov
cs
iret
or
fcoml
inc
je
xchg
sbb
das
bnd
imul
loopne
insl
pushf
jno
pop
in
sbb
adc
ret
nop
dec
out
add
mov
push
xor
sbb
mov
xchg
push
andb
imul
xchg
nop
sbb
xchg
test
or
xor
xchg
jo
sbb
xchg
cmp
xchg
xchg
cld
xor
xor
xchg
cld
leave
inc
mov
add
jb
leave
data16
fiaddl
loope
or
cld
ret
daa
push
mov
xchg
jle
shll
jecxz
fidivl
out
mov
in
fisubrs
inc
insb
andb
dec
into
push
mov
fcompl
lret
lret
ja
xor
xor
cmpsl
cld
in
les
or
mov
xor
or
fistl
xor
xchg
daa
xorb
mov
shll
jo
mov
push
stos
mov
shr
xor
or
cmp
fistpl
adc
sub
sbb
jmp
sub
cld
xor
stc
imul
mov
stos
mov
jb
xchg
mov
popf
adc
jl
lds
mov
mov
xchg
add
dec
imul
xor
mov
mov
or
mov
aam
mov
in
outsb
pop
push
psubb
cld
scas
mov
mov
mov
pop
in
xor
repz
fidivl
iret
jne
loope
sbb
push
fisubrl
lods
xlat
pop
cmpsl
addr16
cltd
sbb
fmul
loopne
stc
and
mov
fmuls
sbb
mov
ljmp
xor
lcall
int3
pop
and
fcmove
xchg
add
jmp
dec
sbb
repnz
stos
ds
out
lods
add
mov
mov
sbb
sbb
aad
sub
ret
pop
fimull
add
and
lock
push
enter
jge
out
push
xchg
rorl
jp
jmp
or
cmp
ljmp
data16
lea
dec
ja
cmovnp
lock
pop
xchg
ficoml
or
push
loope
or
nop
or
incb
out
aad
scas
xor
sti
adc
int
and
rolb
cmp
mov
pushf
mov
or
and
in
scas
imul
mov
fsts
push
push
mov
jecxz
test
scas
scas
mov
mov
mov
scas
cwtl
and
jmp
jg
pop
xchg
std
in
jge
fs
xchg
xor
add
pop
stos
mov
iret
adc
aas
imul
pop
inc
fisttps
and
push
xchg
adc
mov
mov
test
ret
fdivrl
icebp
xor
pop
or
pop
fidivs
pop
adc
loopne
adc
push
xchg
xor
adc
jp
dec
inc
jb
out
mov
cld
enter
cli
push
inc
sti
ja
inc
rorb
pop
lcall
add
fidivl
push
mov
pop
inc
pop
jl
aad
dec
aad
xchg
test
aaa
mov
movsb
sbb
fildll
test
out
and
adc
push
jl
xchg
inc
mov
in
ja
mov
sub
inc
sti
mov
int3
popf
rcrl
nop
cmp
lahf
xlat
inc
ja
mov
mov
lret
xor
popf
lahf
fnstsw
and
loop
sub
jnp
mulb
ljmp
lods
inc
cmp
push
jae
xchg
sbb
sub
mov
popa
cmp
loopne
cli
fwait
bound
inc
jne
movsb
out
push
gs
mov
movl
add
cmp
xchg
jp
push
pop
out
or
dec
jo
cmp
mov
lret
sarl
mov
outsb
movsb
cmpxchg
xor
stos
movsl
adc
xor
test
icebp
cwtl
jns
nop
and
sbb
test
cmpsl
lock
inc
repz
insb
adc
iret
mov
ret
push
xchg
ss
popf
push
mov
mov
neg
rol
sub
mov
jmp
mov
push
add
jns
test
mov
js
cmp
movl
push
mov
ds
pop
and
mov
ja
test
movsb
hlt
cmp
daa
add
bound
insl
mov
push
xchg
mov
loopne
js
mov
mov
lds
outsl
les
cmp
cwtl
enter
xor
aad
fstpt
stos
sbb
outsb
and
mov
adc
xor
jecxz
and
push
add
sbb
mov
lods
sub
cmp
or
cmp
fistl
pop
int3
scas
sbb
jl
popa
mov
js
jecxz
cmp
jge
mov
xchg
inc
xor
or
cmpsb
mov
cmc
add
dec
rcrl
mov
inc
mov
jmp
nop
push
mov
js
and
clc
std
mov
out
test
xor
lods
in
pop
cmp
iret
je
mov
push
test
sub
adc
ficoms
xchg
dec
inc
mov
sbb
cmp
test
std
pop
mov
push
inc
cs
xchg
mov
pop
mov
or
sbb
push
jle
imul
fsub
ja
mov
je
xchg
in
add
imul
sub
lcall
xor
xchg
ret
xchg
in
jle
mov
and
push
repnz
fdivrs
out
and
jmp
and
sbb
sahf
mull
loop
loope
dec
cwtl
movsl
pop
or
sbb
cmp
mov
or
mov
add
out
arpl
out
cwtl
cmp
fisubrs
in
pop
mov
xchg
cmc
push
cmpsb
lods
cli
cmp
sub
push
mov
lods
push
es
rcr
test
loopne
xchg
sub
subl
sti
mov
pop
int3
xor
leave
imul
fprem
inc
pop
stos
jmp
sbb
xchg
sahf
xchg
xchg
cld
push
mul
pop
loop
incb
fadd
cmp
sub
iret
fsts
js
mov
pop
mov
fadds
dec
jg
jecxz
arpl
add
cmp
add
out
mov
or
xor
xchg
nop
jne
inc
jg
dec
and
mov
cltd
cmp
ljmp
lds
in
insb
cwtl
mov
bound
test
outsb
inc
inc
iret
out
lcall
push
data16
popa
jbe
out
icebp
jns
sbb
and
cld
enter
dec
orb
xchg
popa
push
and
int
xor
rcrl
mov
xor
dec
adc
cmpsb
mov
and
aas
scas
ffree
and
jg
sbb
sbb
aad
jnp
lret
sub
add
lds
adc
and
jb
sub
in
int
and
ret
add
mov
ds
into
and
stos
outsl
adc
cmpsb
sahf
mov
sub
leave
out
cld
sub
in
jmp
loope
xor
sbb
dec
inc
ret
test
cmp
repz
sub
or
xchg
mov
fdivl
adc
sub
incb
jnp
stos
or
push
cmp
ja
sub
sbb
dec
out
aas
cmc
mov
pop
xchg
xchg
arpl
mov
lods
cwtl
mov
hlt
or
movaps
push
jle
leave
push
pop
dec
jne
or
pop
pop
or
and
popf
inc
ffreep
add
or
or
pop
shll
sub
push
mov
icebp
mov
jnp
xor
dec
push
rolb
nop
mov
in
pop
sub
push
cwtl
movsl
stos
jle
arpl
rcrl
dec
test
sbb
nop
iret
sbb
nop
xchg
out
lret
aad
les
push
xorl
fistpll
cltd
fistps
or
je
inc
adc
adc
sub
lcall
inc
sbb
mov
adc
test
jo
and
mov
dec
xchg
push
fsubl
sub
in
movsb
jns
mov
rolb
xor
xor
jo
push
divb
mov
and
mov
insl
roll
or
pop
out
inc
scas
pop
mov
sub
popa
mov
mov
mov
in
sbbb
call
fcmovnbe
cmp
mov
pop
jg
cld
cmpps
or
roll
aam
sbb
and
nop
pop
test
fcoml
pop
rol
clc
pop
addr16
push
insb
cltd
int3
mull
clc
lods
fcomps
cmp
in
stos
les
add
and
faddl
in
pop
mov
mov
cld
ret
js
pop
call
mov
mov
fcmovnb
and
out
lcall
popf
add
mov
filds
mov
mov
mov
addr16
or
or
dec
fimull
xor
lcall
outsb
and
pusha
cld
hlt
insb
in
in
fdivrl
bound
mov
outsb
cmp
push
test
sub
cmp
pop
jae
sub
dec
dec
dec
loope
push
sbb
adc
cmp
cmc
xchg
fsub
jg
and
aad
fistpll
jp
jl
cmp
js
inc
jle
jo
add
fwait
stos
ds
inc
lods
inc
orb
sub
stos
sub
mov
and
ret
daa
mov
out
loopne
mov
xchg
ror
filds
lret
aaa
push
xchg
sahf
out
enter
pop
out
jle
addb
or
out
shl
xor
pop
dec
ret
cmp
fs
aas
stos
repz
arpl
xor
shll
mov
ds
sbb
adc
inc
rclb
sbb
in
mov
inc
setle
fs
inc
daa
ficoms
or
js
clc
add
pusha
rcrl
pop
mov
aaa
jmp
jno
pushf
push
lds
cmp
dec
pop
cli
jmp
cmc
dec
jle
adc
xchg
popf
mov
notb
cmp
loopne
mov
pushf
scas
hlt
jle
lods
fsubrp
adc
jle
andl
and
xchg
aas
inc
imul
scas
stos
push
repnz
pop
pop
stos
mov
in
pop
pop
pop
jae
sub
push
movsl
push
add
call
mov
sbb
int3
dec
pop
aaa
mov
test
dec
stos
add
cmpsl
testl
xchg
movsl
cmp
mov
dec
pusha
clc
pusha
aam
adc
in
pushl
cmp
mov
lcall
cmp
or
ret
sbb
xchg
cwtl
cmc
inc
arpl
fidivrs
xchg
add
jg
adc
addb
in
in
push
lcall
into
jne
leave
mov
push
mov
int
daa
stos
or
test
jo
xlat
fldenv
in
cmp
mov
sub
aaa
ds
rdmsr
rcrl
mov
jmp
add
add
cmpsb
lods
pusha
into
jne
arpl
nop
push
insb
push
aas
cmp
iret
mov
fidivrl
jnp
arpl
cmp
jl
cmpsl
sar
das
out
int3
movsb
stos
sbb
xor
js
mov
xor
leave
push
scas
sahf
adc
xor
mov
sbb
cmp
add
rclb
mov
es
xorl
xchg
icebp
xor
test
jnp
aad
or
subb
rclb
and
lahf
iret
mov
and
cmp
mov
inc
dec
clc
jb
add
stc
xchg
cmp
fwait
pushf
adc
test
movsb
leave
add
stc
inc
pop
or
or
stc
mov
out
and
enter
mov
ret
lret
mov
cltd
pop
cli
daa
aad
jb
inc
push
outsl
push
lea
sub
fstps
push
inc
stos
pop
mov
inc
into
xchg
mov
iret
clc
stc
push
dec
pop
xchg
jp
mov
stos
testb
ljmp
jle
fndisi(8087
push
fiaddl
lds
in
mov
jg
in
int3
sub
sbb
xlat
and
pop
jl
xor
fisubrs
in
cmp
push
push
sub
pop
mov
aaa
lcall
insb
into
int
movsb
add
push
or
jo
pushf
xor
add
std
lds
pop
xchg
jae
popa
shll
in
aad
adc
fistpl
fldcw
and
add
rorb
ss
rcrb
aam
mov
cmpsl
sbb
push
inc
scas
jno
push
popa
mov
ds
mov
dec
jbe
dec
clc
xor
in
or
subl
data16
adc
pop
arpl
sbbl
stc
imul
mov
repz
out
xchg
sub
jecxz
jne
inc
sahf
xor
stos
out
and
mov
les
adc
sub
or
sar
add
xchg
in
addl
push
sbb
mov
and
insb
int
jge
data16
push
lods
sub
lret
insl
scas
sahf
inc
add
jnp
cld
cmpsb
push
ret
fistpll
mov
daa
div
or
nop
push
sbb
jge
fdivrl
test
imul
inc
push
outsl
mov
lahf
add
das
js
out
push
test
push
mov
out
cmp
mov
das
shl
sub
push
add
outsl
in
sub
sahf
fcoml
sbb
pop
pop
outsb
add
rol
sub
lret
loopne
jae
sbb
xchg
flds
or
dec
ljmp
push
popa
and
sub
ret
inc
mov
leave
cwtl
jne
test
cmc
xor
mov
xchg
ret
push
adcl
aad
cmc
ret
inc
arpl
aad
lcall
and
sarl
cmp
mov
scas
dec
mov
push
sub
subb
cmpsb
enter
pop
loopne
sub
mov
mov
in
add
fstpt
cmp
push
pop
push
sub
outsl
shrl
inc
xchg
ret
pop
outsl
stos
test
xor
test
dec
mov
fisubl
or
pop
adc
dec
sbb
in
or
mov
popf
mov
call
inc
push
aaa
mov
push
pushf
std
push
int
mov
pop
xchg
dec
dec
mov
push
dec
adc
cmp
dec
xchg
add
push
or
out
push
js
lock
enter
test
addr16
jns
cmpl
cmp
push
xchg
or
sbb
sbb
inc
shrl
cmp
lea
mov
xchg
push
xlat
arpl
test
scas
ret
jle
es
fbld
xchg
mov
movsl
xchg
mov
sub
jb
int3
outsl
dec
push
out
fisubrs
scas
cmp
sarl
arpl
inc
jne
push
inc
inc
inc
fadd
ja
ds
cmp
mov
mov
sub
inc
scas
mov
lock
dec
int
js
mov
cmp
sbb
mov
lods
fadds
dec
cs
ficoms
lods
ret
or
mov
sub
cmp
pop
jnp
push
sbb
cmpsl
mov
hlt
and
das
scas
xor
fdivrs
xchg
inc
lock
enter
inc
xchg
push
out
dec
xor
lods
xchg
das
xchg
loopne
sbb
lds
in
cld
insl
or
ret
xchg
jne
imul
pushl
je
cwtl
mov
add
pop
lock
stos
pop
popa
inc
enter
push
xor
out
dec
sbb
das
adc
adc
fbstp
outsb
lods
mov
adc
and
adc
es
push
inc
cmp
jb
fnsave
arpl
sbb
adc
lods
je
mov
stos
xor
dec
es
mov
ljmp
jb
fdivr
or
mov
pop
rorb
sub
mov
mov
fs
incb
fld
cli
fidivl
push
cs
push
inc
push
repnz
dec
cmp
jl
cmp
and
sub
and
push
adc
push
jmp
jnp
mov
xor
stos
adc
aaa
sbb
or
repnz
adc
out
sbb
xchg
add
cmp
std
and
mov
jle
push
adc
les
jns
hlt
and
xchg
ds
dec
daa
jmp
xchg
adc
js
lods
mov
cld
jmp
pop
sub
pop
lcall
repnz
mov
xor
cld
sar
dec
outsb
in
push
bound
xchg
ds
fnstenv
es
stos
sbb
push
adc
hlt
cs
enter
jmp
scas
mov
jnp
hlt
push
mov
mov
mov
outsb
popa
fmuls
lods
call
lds
and
data16
jp
jae
lock
xchg
xchg
fwait
aas
xchg
xchg
push
jno
mov
pusha
cwtl
loop
xchg
mov
idivl
pop
outsb
inc
or
popa
test
ljmp
movsb
clc
sar
sbb
test
xchg
rcrb
cmp
pop
jle
sbb
stc
sbb
sub
jecxz
scas
jp
hlt
and
scas
adc
in
xchg
lret
mov
push
cmc
clc
hlt
iret
xchg
push
shlb
icebp
fwait
push
xchg
inc
sbb
mov
mov
leave
test
push
mov
cwtl
cwtl
pop
shl
inc
insl
mov
movsb
dec
pop
movsb
jle
pop
xor
sub
lahf
xor
xchg
lock
hlt
xor
sub
test
sbbl
cmp
add
xchg
mov
insb
or
call
int3
lahf
enter
ja
dec
fistl
mov
cmp
jns
mov
int3
mov
dec
sub
out
mov
fstp
std
push
popf
rep
ret
in
inc
out
jb
push
push
lds
mov
jbe
popa
or
stos
or
pop
inc
sahf
loope
loop
mov
iret
int3
insb
mov
iret
sbb
inc
dec
mov
sub
xor
jmp
mov
cmp
push
aam
repnz
call
push
sbb
sahf
iret
fmull
xchg
stc
outsb
inc
scas
or
add
lcall
push
jmp
sub
icebp
add
or
sub
or
or
jns
sbb
adc
mov
jmp
testl
push
mov
lret
nop
ss
push
ds
scas
pop
scas
dec
jp
leave
aas
lea
cmp
push
jg
icebp
sbb
push
mov
fsubp
jmp
mov
jb
cmp
and
add
sub
push
mov
cltd
iret
dec
repz
rcrb
test
aad
mov
popa
mov
mov
mov
repnz
or
call
sbb
int3
mov
add
dec
add
rorl
mov
loopne
sahf
xchg
sub
out
lahf
leave
fsubl
call
push
sub
js
shlw
sbb
xchg
repz
mov
mov
push
scas
out
push
ss
mov
jnp
pop
fdivl
jae
sub
lods
sbb
fwait
cs
jecxz
xor
mov
aas
dec
inc
dec
and
mov
imul
ljmp
push
les
or
movsb
mov
mov
rclb
lods
or
or
cwtl
mov
push
jns
mov
inc
lahf
iret
xor
cmp
rorl
gs
or
pop
aad
scas
mulb
stos
in
mov
pop
scas
xchg
mov
add
iret
push
jge
lcall
lock
xchg
ds
imul
push
mov
vcvtsd2ss
js
or
nop
fstpt
mov
pop
outsb
out
fs
cmpsb
iret
jb
sar
stos
aaa
stos
xor
and
cmpsl
dec
pop
repz
sbbl
push
mov
outsl
cmp
cli
inc
es
in
mov
lret
daa
loop
out
push
add
lds
dec
fcoms
mov
les
repnz
cli
fildl
out
add
or
rcrl
negl
mov
in
jp
stos
fiadds
and
push
mov
loope
mov
dec
push
in
adc
jp
xchg
cmp
fldt
push
daa
inc
dec
adc
ss
popf
inc
xchg
loope
shl
jle
lea
repnz
insl
test
push
fsubrl
jp
push
mov
call
mov
jns
cmp
scas
mov
in
xor
test
movsl
xor
jne
dec
orl
addr16
sub
mov
bound
pop
leave
dec
mov
xchg
dec
pushf
popl
jg
into
xlat
adc
in
mov
divb
scas
scas
lahf
cmp
push
fdiv
push
lahf
movsb
sbb
fdiv
ret
xor
stos
in
ficompl
sub
arpl
stc
mul
movl
int
adc
xor
pop
ss
pusha
repnz
js,pn
imul
shr
cmpsl
jmp
sbb
push
cmp
jbe
inc
push
inc
dec
mov
pop
stos
and
call
mov
sub
decb
jb
insb
fs
in
pop
adc
test
lcall
mov
mov
jne
aaa
jmp
or
sub
sbbb
clc
mov
fldl
mulb
ljmp
mov
test
inc
xor
push
mov
clc
push
mov
stc
adc
lods
sbb
ret
lcall
mov
bound
aad
lahf
in
mov
xor
and
jb
addr16
sub
ffree
cmpsb
in
fs
cltd
mov
jl
gs
in
pop
push
jmp
lahf
jecxz
imul
jo
dec
shrl
sub
aaa
push
jbe
loopne
loopne
cltd
inc
pop
adcl
mov
xchg
push
add
adc
dec
shrl
pop
lret
fucom
xchg
dec
jno
xor
mov
pop
xchg
stos
mov
dec
dec
arpl
inc
in
mov
inc
in
clc
jge
nop
add
sarb
sub
orl
adcb
addr16
jecxz
mov
jmp
int
xchg
std
repz
add
xchg
je
jns
inc
lcall
sbb
cwtl
lea
xor
lahf
push
mov
cld
xor
popf
jp
push
jnp
mov
jp
or
or
ljmp
xchg
pop
add
jge
popa
mov
jnp
cwtl
mov
aad
sbb
mov
sbb
incl
gs
test
dec
sbb
push
in
xchg
iret
xchg
mov
in
ss
inc
cs
flds
out
cmp
inc
movsb
daa
or
push
pop
jmp
inc
or
in
jecxz
and
push
addb
std
out
sbb
mov
clc
push
mov
mov
xchg
inc
insb
cmp
shr
mov
sub
push
shrd
dec
dec
loop
fdivr
mov
rcl
mov
push
sbb
mulb
subb
cmpsb
adc
xor
leave
xchg
mov
icebp
dec
cmp
adc
aam
mov
mov
movsl
or
pop
add
xchg
or
sbb
ret
fsubs
popa
adcb
fcmovne
push
pop
sub
jbe
push
jbe
push
push
cwtl
add
stc
mov
lods
jmp
enter
data16
sub
ljmpw
and
inc
hlt
pop
xchg
dec
lcall
movsl
dec
mov
xchg
push
sbb
outsb
in
jge
cli
lret
add
fucomip
sub
imul
jmp
lea
lods
or
or
sbbb
and
mov
jp
jg
adc
adc
imul
nop
xor
cs
dec
push
push
lods
jns
lods
cmc
ret
divl
inc
out
sub
cmovo
xlat
lcall
jecxz
sbb
jecxz
inc
call
arpl
mov
fwait
pop
dec
fcmovnb
jge
sub
cmp
mov
in
popf
xor
mov
jne
push
inc
adc
fnsave
jecxz
inc
sti
pop
lret
xor
pop
stos
sub
lea
adc
add
xor
xchg
iret
mov
push
data16
inc
cmp
and
or
mov
lods
sbb
mov
mov
add
pop
add
push
mov
or
xchg
loopne
ret
in
dec
sub
cltd
fldt
xor
cmp
adc
dec
push
xor
sbb
jecxz
jno
mov
mov
adc
mov
nop
dec
mov
sti
mov
mov
xor
adc
insb
push
lcall
sbb
mov
imul
movsl
cltd
jno,pn
cmp
loope
sbb
sub
and
add
dec
xor
fldl
lods
push
push
fisubrs
addr16
imulb
push
mov
ja
jae
fmuls
je
xchg
jl
inc
mov
cmp
mov
mov
sarl
ljmp
adc
les
adc
mov
mov
or
mov
arpl
inc
clc
cmp
fwait
mov
mov
lods
push
fwait
mov
lock
leave
mov
pop
push
in
mov
jmp
cmp
jnp
and
push
pop
pop
push
pop
jl
push
push
pop
dec
and
xor
mov
jmp
jae
mov
mov
stos
mov
stos
or
mov
jg
outsl
cld
jns
ret
shlb
jle
mov
int3
adc
xchg
sbb
daa
or
push
dec
dec
andl
mov
cltd
sub
dec
lods
dec
daa
lods
daa
test
sbb
mov
mov
stc
bound
jbe
icebp
pop
dec
dec
xor
test
xchg
push
cmpsl
xlat
fwait
imul
fiaddl
call
dec
repz
int
jbe
and
mov
and
dec
push
hlt
cmpsl
xchg
loop
fstpl
rolb
sub
xor
mov
xor
jmp
ret
cs
jmp
add
push
ljmp
inc
rcrb
das
mov
mov
lret
jmp
xor
aaa
ret
dec
mov
jge
mov
sub
pop
orb
addr16
aaa
cld
push
cmp
adc
insl
cmp
jmp
js
push
pop
sbb
fisubl
adc
xchg
test
xchg
mov
fstpt
push
in
add
test
and
cld
cld
push
and
cli
jae
sarb
adc
stos
shll
inc
push
inc
fyl2x
mov
lock
imul
or
mov
dec
frstor
cmp
pop
je
aam
or
cltd
xlat
pop
insl
jne
add
push
movsl
mov
mov
jae
fdivrp
xchg
rcrb
dec
dec
or
nop
pop
and
inc
cmpsb
push
inc
dec
cmp
imul
push
xor
addr16
cmp
subb
fstl
aaa
mov
mov
shlb
pushfw
xchg
leave
aaa
pushf
stos
xchg
mov
lods
xor
sarb
ljmp
adc
mov
sub
push
xchg
gs
cmp
out
ss
push
add
ret
mov
and
sbb
dec
das
lahf
adc
insl
fwait
je
aaa
fiaddl
dec
push
outsb
sbb
mov
cmp
jecxz
cld
imul
mov
fwait
aaa
sbb
mov
int3
shrb
cmp
mov
out
push
bound
xlat
jp
rcrb
stos
dec
andb
pop
pop
in
test
sub
jmp
cmp
dec
nop
addr16
mov
mov
gs
stc
and
test
adc
or
shll
hlt
mov
xor
mov
lret
sbb
daa
call
add
xchg
inc
or
dec
pop
int
add
sub
aaa
xchg
stos
push
fwait
sahf
mov
pop
bound
dec
in
inc
je
sbb
sbb
add
and
leave
stc
xor
xchg
push
call
push
sbb
push
sbb
and
and
in
dec
mov
pop
cli
fldl
inc
loope
push
pop
push
idivb
stos
inc
sub
inc
dec
enter
repz
sbb
ret
call
jne
ja
cli
pop
mov
pop
add
and
or
dec
inc
js
enter
in
pop
adc
and
sub
lcall
push
xchg
xchg
pop
testl
adc
into
jmp
subb
cs
rcrb
inc
std
adc
test
add
add
cwtl
pop
mov
jnp
leave
lods
sbb
pop
fidivl
sti
push
loopne
inc
fstp
aaa
js
fildll
sti
push
lock
rcrb
enter
mov
int
push
push
push
loop
pop
scas
je
push
and
xchg
fs
fistl
int
in
data16
pop
push
jno
ret
rorb
shlb
push
push
adc
or
ja
cmp
push
shlb
outsl
cltd
xor
dec
fdivrl
xorb
adc
add
addr16
enter
push
and
pop
in
gs
mov
xchg
xchg
repnz
inc
xor
adc
lcall
sub
sbb
dec
add
ds
outsl
repz
lahf
push
jp
mov
mov
clc
jns
nop
cmpsl
xchg
daa
fucom
xor
adc
pop
jge
xchg
movsl
sub
cs
adc
adc
stc
test
pop
test
into
pop
js
int3
xlat
aam
and
cmp
aaa
jne
das
test
inc
sahf
mov
mov
stos
xor
mov
mov
rclb
pusha
push
enter
jl
adc
in
mov
push
sbb
dec
andb
cmp
popa
mov
imul
mov
xor
out
dec
cmpl
xor
fidivrs
pop
fldcw
cmp
pushf
repz
jmp
cmpsb
jle
and
ret
cmp
adc
xchg
sbb
jecxz
add
or
jns
cmpsb
or
outsl
jg
pop
sub
push
jle
sbb
mov
imul
lret
daa
insl
cmpsl
xchg
cmpsb
rcll
cmp
mov
es
sub
pop
popf
js
push
sbb
sbb
stc
cmp
out
cltd
and
xchg
sub
adc
bound
jle
cmp
lea
sahf
shl
jo
pushl
dec
jns
sub
std
shr
ret
inc
mov
fsts
in
mov
out
pop
cmpsl
ljmp
sbb
push
push
push
and
daa
test
ss
lahf
out
imul
or
fcoml
inc
sub
int3
mov
cmp
adc
jge
jge
ds
scas
fsincos
jge
pop
pop
and
insl
ret
xchg
lret
enter
push
or
cmp
push
xor
xchg
jns
push
push
addl
pop
fnstenv
mov
shlb
and
mov
ret
popa
test
lcall
cmp
pop
sbb
and
clc
inc
pop
jl
mov
xchg
cmpsl
pop
scas
rclb
xor
pop
xor
mov
sti
enter
inc
mov
mov
sahf
mov
lea
clc
das
decl
push
add
jp
cmpsl
lcall
sbb
loopne
push
or
pop
jl
lods
jne
repz
in
and
je
hlt
neg
ja
xchg
in
and
xchg
inc
std
movsl
push
fs
pop
xor
test
sbb
mov
pop
pushf
out
fldenv
negb
jecxz
and
push
jl
pop
and
dec
mov
mov
mov
aad
repnz
test
cmc
push
imul
mov
pusha
mov
out
or
dec
rcll
cmpsb
inc
hlt
std
scas
inc
icebp
xor
mov
push
repz
data16
mov
inc
fbld
mov
out
and
sbb
lret
movsb
ret
shrl
inc
xchg
sbb
or
adc
ret
lock
pop
mov
pop
int
iret
and
in
jg
sub
and
rolb
hlt
je
xor
shl
xchg
fwait
fcmovu
push
in
mov
xlat
mov
adc
les
loopne
movb
mov
outsl
rolb
mov
dec
sub
or
xchg
movsl
lcall
stos
push
sub
lret
incl
push
xchg
rorb
mov
cmp
cmp
mov
jp
or
xchg
mov
mov
inc
jne
push
lds
xchg
xorb
jnp
insl
jbe
sbb
mov
lock
ret
out
pushf
test
popa
xor
or
dec
fisttps
mov
loope
push
incb
add
mov
jle
out
ljmp
mov
nop
cmp
push
pop
pusha
pop
xor
or
xchg
mov
xor
push
mov
lea
fdivs
add
fiadds
jbe
rolb
sub
sbb
movsl
adc
cmc
or
jb
sbb
js
add
pushf
cli
cmp
push
or
or
lcall
cmp
add
outsl
xor
mov
inc
ljmp
inc
fs
push
cs
push
adc
aam
movsb
xchg
fdivp
fs
xorl
jno
adc
das
sahf
push
xchg
shlb
xor
cmp
adc
cli
push
cmp
or
stc
fsubrl
cmp
xor
xor
loopne
je
sub
outsl
nop
cmp
add
pop
and
push
jns
sub
rorl
in
cmp
icebp
xor
aaa
jmp
out
sbb
into
fcomip
push
testb
push
ret
cmp
adc
test
ss
cmpsb
js
arpl
shl
push
xor
push
cmp
repnz
daa
add
or
jmp
pop
pop
inc
mov
gs
push
adc
in
xor
js
jo
sti
sti
int3
int3
sub
add
ret
mov
int3
sbb
adc
adc
shl
xchg
icebp
jns
xchg
cmp
adc
cmpsb
and
popa
mull
pop
sub
aad
rol
xchg
mov
jmp
out
in
pushl
push
fidivrs
sbb
mov
xchg
xor
and
add
jne
pop
mov
loop
hlt
fwait
push
inc
lea
int3
in
sahf
mov
mov
sahf
xchg
das
sbb
lahf
cmp
pop
cs
mov
ret
sbb
xchg
and
jge
nop
jbe
and
call
clc
add
or
push
aad
lock
lret
sub
pop
in
fs
daa
mov
push
stos
push
adc
aad
dec
jmp
test
out
lret
addr16
popf
pop
mov
dec
imul
inc
mov
adc
jne
pop
hlt
adc
jnp
pop
mov
imul
gs
cli
lock
or
es
test
mov
sbb
cld
lcall
shrl
cltd
lock
roll
xchg
inc
fdivs
or
pop
mov
test
mov
sti
cs
xor
in
enter
adc
pop
outsl
icebp
test
out
stos
test
add
ret
js
test
jmp
sub
addr16
mov
pop
popa
out
bound
or
aad
lods
sub
push
in
movsb
das
mov
cwtl
pop
sbb
inc
push
jns
insb
xor
cmp
sbb
pop
xor
outsb
dec
mov
stos
pop
push
bound
pop
xor
lahf
out
push
sub
ja
push
popf
loopne
jp
popf
cmp
xor
mov
in
sub
mov
mov
sub
sbb
clc
cli
lods
ds
inc
out
repnz
mov
out
hlt
rclb
push
mov
fdivp
sub
fidivs
enter
pop
in
mov
outsb
imul
repz
inc
dec
dec
loop
pop
push
jo
daa
cmpsl
movsb
and
in
cli
adc
mov
adc
repnz
dec
sub
pop
imul
push
sbb
addr16
cmc
das
cmpsb
sub
jp
push
mov
pop
scas
adc
loopne
mov
adc
insl
dec
movsl
pushw
pop
fidivrs
mov
xchg
xlat
shlb
jle
sub
sub
adc
pop
das
push
push
adc
movsl
loopne
xchg
xchg
lret
sahf
pop
test
aam
sbb
inc
or
fldt
in
adc
xor
scas
jle
cmp
push
stos
pop
lcall
insl
daa
push
mov
stos
leave
and
idiv
cmp
int
lods
and
mov
and
inc
imulb
push
out
nop
test
sub
and
mov
add
inc
push
jb
imul
fcmovb
mov
add
push
mov
add
std
sbbb
cmc
cmp
inc
sbb
xor
or
pop
mov
imul
xor
mov
jne
cmp
add
xchg
pop
ret
xchg
fsts
jo
and
iret
pop
mov
dec
setnp
add
ss
cmp
sub
push
and
movsl
ucomiss
xor
add
mov
stos
stos
cli
pop
mov
push
xchg
pop
pop
sbb
push
pop
test
push
mov
pop
jno
cli
ja
jnp
dec
pop
fldl
inc
xchg
sub
inc
flds
in
xor
sbb
cmp
jge
out
cmp
adc
les
data16
jg
pushf
fcomps
sub
mov
dec
cmpsb
jecxz
aad
sub
mov
add
add
inc
xchg
cmp
pop
ss
cmp
xor
cmp
cmc
inc
gs
cltd
xorl
outsb
repnz
mov
shl
out
sbb
fimull
sti
inc
stos
faddl
inc
in
sbb
or
out
cmp
orb
test
iret
jg
fwait
cltd
sbb
outsb
hlt
add
cmp
int
hlt
fdivr
cltd
inc
aam
rorb
mov
sahf
inc
sarb
repz
test
dec
push
mov
movsl
xchg
ror
daa
pop
mov
jnp
pop
ffree
jns
or
loopne
arpl
sub
pop
mov
rol
dec
sarl
outsl
jb
add
mov
ret
ss
add
mov
test
and
push
ret
out
jne
js
push
inc
clc
push
sub
pop
in
adc
ss
cmp
mov
push
int3
push
dec
cltd
dec
sub
inc
cmp
jae
arpl
adc
or
cwtl
add
add
mov
xchg
addr16
cs
lret
xchg
loopne
inc
jo
mov
cmp
dec
test
stos
or
mov
push
pop
imul
jecxz
out
and
insl
lods
scas
loop
add
outsl
cmp
cltd
mov
pop
imul
outsl
add
inc
movsl
mov
jmp
mov
xchg
clc
iret
inc
adc
xor
out
sub
testl
sbb
adc
xor
inc
ja
shll
mov
fstp
pop
int
xchg
xlat
sbb
lahf
push
inc
sbb
adc
mov
jb
and
sbb
ret
jno
jns
iret
xor
mov
push
insl
xchg
cltd
sbb
xchg
mov
dec
sub
xor
call
dec
mov
xchg
push
xor
and
pop
push
cmc
lcall
push
and
cld
out
adc
out
xchg
pusha
mov
leave
mov
xorb
or
or
push
lcall
addb
and
inc
jecxz
or
imul
dec
nop
lret
mov
mov
faddl
repnz
mov
imul
inc
cli
add
mov
data16
mov
mov
inc
fldcw
mov
bound
std
iret
jle
mov
and
mov
andb
pop
rorl
push
repnz
push
inc
push
pushf
test
sub
sub
shl
xorb
mov
mov
sbb
rcrb
nop
sub
pop
fs
ja
xchg
sbb
test
repnz
push
cmp
sbb
mov
pop
loope
sub
cmp
push
sbb
inc
pop
mov
cli
cltd
mov
stos
adc
jmp
js
lds
in
fsubs
xlat
or
ficompl
push
into
mov
mov
test
mov
sbb
aad
sub
out
mov
leave
out
jecxz
cld
jne
jnp
or
jg
mov
xchg
sbb
outsb
mov
ret
enter
mov
dec
mov
sbb
cltd
sub
lds
pop
sub
mov
dec
sti
jmp
mov
out
aas
dec
mov
cltd
popf
popf
mov
stos
js
cmpsb
cmpsb
lea
mov
mov
mov
push
cmc
lods
scas
arpl
stc
ficompl
adc
loope
mov
pusha
lahf
movsl
mov
repz
jp
loop
gs
leave
enter
daa
adc
std
shrl
in
mov
jb
les
mov
cmp
push
inc
adc
sub
push
jb
adc
lds
or
push
dec
pop
add
jl
xchg
lods
shll
sub
sahf
jnp
lods
jae
push
pop
aad
xchg
sub
ss
insl
fs
adc
ds
mov
stos
pop
das
int
call
cli
push
lock
mov
xor
jbe
insb
cmp
das
stos
je
pop
inc
dec
dec
inc
daa
icebp
dec
pop
pop
jbe
iret
cmp
lock
and
xchg
stos
das
sahf
stos
sbb
lock
dec
mov
sbb
test
lods
lods
jle
aaa
mov
xor
push
fdivs
mov
loope
lea
call
jge
lahf
or
pop
sbbb
push
jl
cli
pop
cmp
or
push
or
das
sbb
shll
mov
out
inc
ror
iret
jmp
xchg
mov
in
pusha
out
mov
clc
jo
aas
xor
lock
mov
outsb
cmp
push
dec
je
mov
dec
pop
enter
popa
loope
push
or
nop
ljmp
xchg
mov
shlb
cmp
data16
popa
adc
sbb
stos
xchg
push
push
outsb
mov
outsb
jle
push
sub
testl
add
loopne
in
and
mov
fsubp
mov
mov
ds
or
add
xlat
push
pop
push
xor
in
push
fimull
push
lcall
xor
ret
int3
mov
and
adc
ss
pop
testb
inc
sbb
ret
movsb
mov
push
or
mov
sbb
bnd
jecxz
add
in
xor
or
push
push
out
rclb
adc
mov
sbb
iret
mov
adc
mov
addl
cmpsl
es
sub
mov
inc
cwtl
fsubl
push
icebp
inc
movsbl
push
xchg
cmp
stc
sub
mov
cmpsb
xchg
pop
mov
movl
add
insl
stos
rcrb
lcall
mov
push
cs
daa
test
rcll
mov
ret
subb
xorl
mov
lock
mov
fcomps
sub
inc
cmp
mov
fnsave
arpl
nop
stos
icebp
addr16
sbb
ljmp
pushf
mov
aad
xchg
daa
dec
xchg
ds
in
adc
ja
push
sti
adc
jg
daa
push
inc
fisubs
mov
outsl
inc
gs
mov
int3
jmp
inc
add
imul
dec
cmp
fnstcw
mov
insb
imul
ret
shrl
pop
aas
jnp
es
pop
stc
add
dec
and
scas
gs
nop
mov
jne
push
test
es
add
pop
lret
ret
jmp
aaa
repnz
push
ret
dec
push
negb
mov
arpl
js
adc
dec
xchg
les
jae
or
pop
and
or
out
andb
ret
cwtl
jg
cld
int
aas
fcoml
adc
xor
icebp
aad
mov
test
push
add
add
lcall
jl
daa
pop
dec
jbe
push
fwait
add
nop
sub
cmc
mov
test
mov
push
cmp
mov
push
push
inc
jecxz
jmp
popf
icebp
cmc
mov
cmc
mov
js
sbb
mov
or
arpl
daa
xchg
test
cli
pop
mov
out
mov
mov
cmp
push
int
call
cmpb
gs
es
mov
cwtl
push
out
sbb
addr16
loopne
sub
xchg
lahf
xchg
push
xor
pop
pop
in
jmp
mov
push
push
ljmp
push
fidivl
daa
inc
push
sbb
xchg
iret
incl
add
mov
int3
ja
xor
lret
test
fisubl
add
xchg
jno
fdivrs
xchg
pop
imul
sbb
mov
imul
or
mov
jnp
push
cmpsl
dec
pop
mov
cmp
repnz
mov
inc
aaa
xchg
in
push
lods
adc
divb
jmp
in
jp
outsl
sub
stos
adc
pop
push
mov
xor
xchg
dec
scas
fiaddl
ds
xor
adc
xchg
fnop
out
inc
pop
scas
jbe
cld
cmpsb
ds
iret
cli
and
and
mov
vpcmpeqw
mov
adc
xlat
jnp
add
cwtl
mov
push
repnz
and
push
push
push
dec
aam
mov
xlat
outsb
jmp
mov
cmp
clc
and
in
sub
fimull
pop
fldl
sbb
sub
dec
movsb
xchg
bound
xchg
vmread
repnz
adc
dec
inc
pop
cltd
mov
fs
leave
outsl
lahf
xor
and
pusha
lock
je
and
lret
dec
add
mov
movsb
mov
cmc
out
scas
out
sarl
mov
xor
int3
scas
clc
add
add
ss
mov
out
mov
jmp
outsl
cmpsb
ja
daa
xchg
shlb
mov
ljmp
lods
sbb
imul
pop
in
mov
sbb
dec
cwtl
adc
pop
jo
ret
xorb
or
pop
repnz
scas
fs
jecxz
repnz
jae
and
mov
aam
dec
sti
xchg
dec
inc
std
ljmp
inc
inc
mov
lds
xorb
mov
testb
outsl
outsb
in
push
dec
aas
into
xchg
inc
push
push
jbe
cmp
dec
cs
rcrb
xor
mov
push
mov
js
repz
pushf
jae
xor
insl
xchg
inc
je
xchg
push
add
jle
sbb
add
dec
adcl
jge
ja
jns
repz
fistpll
jmp
inc
mov
add
xchg
cmp
sbb
pop
push
mov
in
push
or
push
aaa
das
jle
or
push
or
mov
das
xor
pushf
loope
sub
arpl
aaa
lods
outsb
pop
adc
xchg
pop
adc
xor
fdiv
and
sar
cwtl
push
cmp
mov
push
lret
gs
stc
imul
inc
inc
dec
mov
push
xor
pop
xchg
data16
lret
mov
loop
pop
and
push
adc
mov
inc
mov
ds
movsl
movsl
jns
leave
imul
aad
setbe
mov
and
testb
inc
repnz
les
out
push
sbb
inc
rol
mov
mov
pop
mov
repz
fistps
sub
push
mov
jae
mov
push
xchg
mov
cltd
xor
adc
movsb
outsl
jbe
jl
cmp
jle
mov
movsl
adc
divl
xor
mov
xchg
adc
out
xor
pop
lea
lahf
das
dec
aaa
cmpsl
add
push
or
rorl
loop
pop
xchg
cmp
dec
stos
pop
enter
push
mov
add
daa
pop
sbb
mov
icebp
insl
in
fcoml
adc
mov
in
sub
movsb
push
dec
xlat
and
shrl
add
shrl
iret
sbb
mov
mov
xorb
scas
or
scas
lods
mov
dec
jg
jle
pusha
dec
push
jl
xor
dec
sub
or
push
loopne
jae
cmpsl
add
lret
mov
jle
mov
sub
or
imul
fadds
push
pop
jb
mov
mov
jae
sub
xchg
xor
dec
and
fstpt
loope
cmc
pop
pop
in
pop
push
mov
mov
into
repnz
push
mov
cmpsb
hlt
inc
xchg
test
ret
xchg
mov
int3
je
dec
mov
cmpsl
fcompl
cwtl
dec
mov
add
inc
pusha
sahf
fcoms
daa
sti
in
push
or
popf
xor
pop
cmp
mov
icebp
xchg
sti
xor
fists
xor
cmp
push
inc
fistps
jae
lods
dec
xor
loopne
loop
hlt
dec
jae
and
lods
stos
inc
imul
xchg
add
inc
es
sub
mov
xor
push
out
mov
or
add
mov
push
fmuls
mov
xlat
push
jge
ret
in
sbb
nop
add
enter
imul
push
mov
xchg
or
inc
mov
std
idivb
and
pop
addr16
pop
jbe
mov
clc
mov
fwait
jne
aam
pop
imul
out
xor
imul
js
movl
mov
les
imul
jp
repnz
push
dec
jno
cltd
repnz
pop
adc
scas
lock
hlt
jo
orb
mov
push
loopne
lahf
add
and
push
jp
repnz
dec
mov
push
jbe
enter
mov
inc
sbb
cld
mov
test
dec
xchg
xchg
jo
iret
shll
loopne
sti
push
lret
adc
jno
add
cmp
lahf
jne
pop
xor
lds
adc
pop
mov
je
and
jle
jg
or
dec
lret
push
in
movsb
imul
sbb
f2xm1
pop
jmp
xchg
mov
xor
dec
div
fdivs
mov
xchg
pop
adc
aaa
mov
adc
cltd
pop
fildll
mov
inc
mov
loop
inc
bound
sbb
or
and
lea
sbb
pop
fiaddl
sub
es
mov
pop
roll
add
cli
orl
xchg
mov
movsl
loopne
ja
adc
pop
pop
push
sub
cwtl
test
fiadds
dec
aam
adc
push
imull
xchg
sub
dec
inc
xchg
pop
in
mov
nop
leave
out
adc
xchg
stc
rorl
inc
mov
imul
push
daa
pop
in
aas
mov
enter
xor
xchg
sub
insb
daa
data16
and
xchg
cmp
or
xchg
jg
dec
mov
mov
sarl
insl
cmp
ljmp
mov
cld
or
lret
and
dec
stos
fists
rcr
xchg
xor
add
mov
movsl
xchg
adc
mov
ret
lock
scas
popl
inc
mov
sar
cmp
jecxz
mov
dec
cmp
add
mov
insb
inc
cmp
adc
setp
or
mov
insl
sbb
and
pop
dec
inc
inc
xor
and
and
push
pop
les
test
lret
cltd
xchg
jmp
jge
dec
lds
call
fldl
dec
icebp
jns
insl
insb
dec
mov
inc
inc
jmp
or
gs
xor
cmpsb
or
inc
push
jo
and
lcall
add
mov
out
in
jno
or
jmp
push
int3
or
jg
lods
icebp
nop
and
scas
movl
call
mov
jge,pt
popf
jb
sbb
icebp
nop
mov
lahf
add
enter
jg
scas
outsb
mov
add
pop
xor
out
or
sbb
out
add
lar
outsb
jmp
sbb
xchg
and
inc
mov
cmp
outsl
xor
jae
lret
rcll
xchg
lods
outsl
outsl
imul
push
and
scas
fsts
push
insl
and
fucomp
dec
mov
std
addr16
test
arpl
mov
jb
pop
add
andb
rclb
push
fisttpll
lret
jmp
out
call
push
shlb
sub
xor
je
xor
push
adc
jp
inc
pop
fists
xlat
add
addr16
mov
and
negb
mov
notb
xor
jg
cwtl
push
cmp
push
jbe
add
loope
cmp
inc
cmp
xchg
out
xchg
lret
and
push
cmp
fadds
mov
shr
cs
mov
push
cs
fnstsw
or
push
and
pop
jmp
fldl
mov
jmp
ret
cmp
cmp
mov
add
out
out
pop
adc
dec
roll
cli
sub
les
in
loope
pushf
push
loop
jl
pushf
push
and
push
into
cs
xchg
xchg
add
ja
cltd
test
mov
pushl
adcb
sub
add
sub
pusha
fs
sbb
out
aam
cltd
int3
and
ds
fs
mov
rcrl
add
es
leave
push
cmp
mov
jno
cmp
daa
lcall
inc
add
fdivrs
dec
packssdw
testb
mov
push
sbb
popl
bound
sar
sbb
pop
jb
or
cmp
pushl
jae
xchg
pop
aad
lcall
outsl
cwtl
pop
stc
cmpsb
and
leave
cwtl
mov
fpatan
xchg
push
test
test
jecxz
mov
mov
adc
data16
pop
mov
push
cmp
jb
xchg
cmp
repnz
jle
xchg
jl
fwait
aaa
mov
movsb
shlb
add
xchg
ret
sbb
popa
push
mov
and
ds
loope
sbb
int3
lock
sbb
mov
int
mov
repz
mov
adcb
mov
enter
in
movl
imul
fwait
movsl
shlb
mov
divb
push
je
cmp
insb
pop
outsb
or
adc
lods
aas
xor
pop
mov
add
add
jmp
sbb
push
inc
cmp
fs
ja
leave
fs
aam
dec
push
or
jb
mov
add
mov
andb
test
movsb
lea
lret
xlat
in
jge
je
sub
pop
xor
cmp
push
mov
test
xor
call
lock
or
jp
ljmp
sub
sbb
mov
jmp
in
sbb
mov
test
ss
and
inc
lahf
jp
mov
out
adc
pop
mov
xchg
sub
pop
cmp
std
adc
inc
mov
sbb
fidivrs
cli
lods
pop
or
mov
xlat
sub
add
xchg
and
rorb
loopne
xchg
mov
cmpsb
xchg
add
mov
adc
jns
popa
stos
lcall
js
imul
or
adc
int3
sbb
aad
jae
pop
push
and
fmull
pop
cli
outsb
dec
jmp
call
xlat
push
add
lret
pop
je
push
testl
mov
icebp
or
inc
sbb
sti
out
push
xor
xchg
js
test
fs
std
pop
rcll
testl
out
pop
loopne
fbld
mov
xor
and
in
cmp
dec
adc
xor
and
xchg
sub
push
xor
adc
lahf
xor
loope
divb
loop
jmp
bound
push
mov
add
dec
mov
in
add
imul
arpl
test
push
add
xchg
jmp
and
xor
int
fwait
out
repz
adc
xchg
mov
das
jae
js
pop
adc
lods
mov
leave
xor
std
inc
std
test
test
and
dec
popf
dec
add
xor
popa
jbe
inc
adc
subb
push
push
push
aaa
add
pushf
jbe
mov
add
xchg
sub
divl
je
or
mov
push
dec
jae
dec
outsb
in
out
xor
xor
sarl
test
add
add
aam
flds
mov
repz
xchg
bound
xor
add
out
sahf
pusha
cmp
jne
fwait
aas
enter
cli
div
int
pop
stc
ds
aam
lds
lcall
adc
mov
dec
adc
sbb
lret
or
pop
and
roll
cmc
and
movsb
scas
cld
jo
nop
inc
or
pusha
push
push
push
sub
scas
in
sahf
imul
inc
subl
adc
jno
mov
daa
repz
xorl
cmp
jae
andb
jg
pop
mov
aaa
push
in
or
cmp
and
and
push
adc
fdivrs
mov
shll
add
mov
push
dec
cwtl
popf
ss
les
in
jnp
or
mov
xchg
push
mov
fcompl
in
jecxz
xchg
imul
mov
add
mov
fisubs
stos
mov
movl
je
inc
sarl
cmc
and
pusha
or
sub
data16
and
pop
sub
out
outsb
enter
xchg
sbb
cld
lahf
add
leave
pop
imul
jg
aaa
dec
cltd
jb
frstor
rcrl
lds
sub
in
push
jp
je
xor
adc
push
xor
fmull
rcll
test
push
cmc
call
and
mov
push
add
imul
nop
fisubs
push
pusha
or
jne
add
dec
xor
jne
clc
lods
lcall
jne
inc
cld
fdivrs
test
mov
mov
fwait
adc
test
incb
add
into
jne
out
int3
xchg
pushf
into
lahf
stos
aaa
std
or
dec
sub
cmp
push
fstps
pop
push
je
js
lret
cmc
aas
xchg
out
ss
cmc
mov
inc
mov
pop
data16
sbb
and
sub
jecxz
add
lahf
mov
cmp
sarl
or
dec
les
out
mov
sub
ss
push
inc
ds
cmp
fidivrl
lret
in
iret
aam
pop
dec
fwait
and
inc
lret
pusha
push
push
ret
leave
lahf
inc
ror
inc
pop
adc
push
xor
jl
call
push
cli
push
lods
sarl
add
dec
shlb
jae
adc
xchg
sub
or
jae
pop
out
nop
shll
das
mov
sarl
sub
xchg
loop
pop
or
test
jmp
push
adcl
test
call
ret
sub
jae
or
jno
dec
pop
xor
mov
lods
movsl
mov
mov
cwtl
mov
int
scas
push
or
cwtl
fstpt
out
mov
mov
fnsave
xchg
mov
out
lock
jg
notl
hlt
mov
sub
aas
stos
cld
aad
push
xchg
scas
aaa
divb
and
sub
dec
lds
sbb
fistps
jge
push
fisubs
cmp
test
ja
cmpsb
xlat
cwtl
sub
jmp
std
dec
fsub
enter
jge
xchg
push
sahf
movl
inc
stos
lock
adc
mov
push
dec
pop
imul
fdivrs
cmc
mov
mov
jmp
lock
push
sub
ja
sub
fmull
hlt
adc
lret
insl
add
mov
push
or
jnp
sub
push
fwait
xchg
mov
into
jno
sbb
popa
clc
inc
std
fbstp
push
test
sti
in
std
mov
rclb
and
fcmovnb
lods
call
cmpsl
mov
sbb
mov
stos
inc
js
nopl
loop
arpl
fnclex
nop
fcmove
popf
sbb
and
jmp
out
aam
dec
loope
imul
push
fnstcw
int3
test
in
jg
adc
mov
pusha
lock
adc
mov
in
out
inc
sbb
cwtl
add
out
int3
sub
or
mov
ret
add
adc
clc
shrb
lea
and
stos
pop
jnp
addr16
scas
xor
sub
fldcw
or
add
sti
mov
nop
outsl
inc
shll
lds
mov
pop
dec
cmp
sub
mov
lret
ds
jo
adc
jecxz
xorb
xor
or
outsb
cwtl
nop
icebp
mov
xchg
dec
or
sbb
shrl
push
push
dec
int3
pop
adcb
scas
leave
xchg
stos
mov
jecxz
ljmp
add
cmc
cmpb
lea
fcoms
stc
cmc
sub
and
test
mov
mov
mov
cmp
push
movsb
pop
mov
into
sbb
in
lea
in
sub
test
nop
fxam
test
pop
enter
sti
xchg
out
lret
pop
testb
mov
cmp
sub
sub
cmpsl
pop
pop
popa
lahf
stos
and
addr16
xchg
repz
xchg
sti
add
inc
jo
fmuls
dec
cmp
push
push
stos
imul
pop
jne
dec
xchg
out
mov
imul
in
adc
jecxz
push
stos
out
sarl
xor
and
pop
lods
repnz
dec
cmc
pushf
and
imul
xor
mov
sbb
or
flds
inc
inc
fidivl
and
lock
dec
out
sbb
aaa
mov
fdivr
cmp
in
pop
jle
ss
jbe
xor
in
push
cwtl
cs
or
test
mov
jnp
sbb
lret
xor
jbe
lea
inc
and
loope
sub
das
int
sub
sbb
clc
pop
fmul
fisubl
fidivs
rol
xorl
mov
mov
jnp
or
sbb
push
sar
pop
mov
loopne
inc
add
cmpsb
out
and
jbe
fs
rorl
dec
andl
mov
outsb
into
inc
mov
fists
jmp
mov
shll
aad
adc
sbb
sbb
add
xchg
and
dec
dec
mov
loop
push
pop
xor
sbb
sar
sub
shll
add
scas
pop
test
mov
or
push
xor
clc
enter
mov
jmp
and
jecxz
push
out
test
pop
push
pop
rclb
inc
subl
inc
add
fisubl
clc
out
js
ss
sub
add
aam
dec
pop
push
clc
movsl
fcmovb
mov
push
sahf
sub
stos
push
inc
jo
out
sub
xor
or
jge
lock
stos
popf
add
mov
push
xchg
dec
push
jo
dec
fildl
or
sbb
pop
jae
sbb
gs
or
ret
cwtl
rorb
je
sahf
mov
inc
jno
test
mov
jle
push
pop
mov
sub
and
mov
pop
inc
in
inc
sarl
mov
mov
popf
fsubr
and
orl
stos
iret
in
push
mov
dec
les
rcrl
fistl
cwtl
pop
xor
or
leave
and
or
lods
jecxz
lret
and
in
adc
test
dec
test
loope
push
adc
and
mov
bound
and
mov
inc
lahf
out
ret
stos
repnz
cmc
mov
mov
or
repnz
in
jnp
pop
mov
data16
or
xor
nop
movsl
lcall
or
pop
xor
adc
cltd
sub
call
sbb
cmp
mov
mov
pop
jne
pop
sbb
arpl
fistpll
fsincos
inc
repnz
pop
pop
mov
cmp
pop
pusha
shlb
aas
push
sbb
jne
inc
subl
xor
cmpsb
or
insl
mov
cmp
push
cld
test
outsl
je
pop
imul
int3
mov
or
out
lret
jle
xchg
jmp
mov
rcr
cltd
adc
xchg
mov
push
jns
or
cwtl
shrl
mov
out
fwait
lods
nop
jns
stos
test
sub
roll
fists
negl
and
mov
sub
ss
ljmp
aad
dec
or
clc
cltd
sbb
jl
mov
adc
scas
loopne
add
dec
outsb
dec
and
dec
xchg
cmp
mov
rorb
imul
xor
adcl
lods
lahf
addr16
sub
lret
add
orb
fbld
femms
in
enter
mov
xor
sbb
cmpsl
sar
ds
pusha
jae
pop
pop
or
jmp
js
cmpsl
mov
loop
lock
adc
mov
dec
ror
pop
sbbl
pop
mov
shrb
sbb
pop
lcall
outsb
add
enter
dec
lret
js
rcrl
in
mov
pop
hlt
sbb
push
sub
test
sbb
in
mov
jb
mov
adc
leave
sbbl
aas
adcl
scas
popa
inc
addr16
fistpl
mov
mov
adc
pop
xorb
sub
aas
lcall
pop
xor
jae
mov
test
mov
push
mov
mov
xor
adc
cld
pop
adc
dec
adc
scas
decl
fs
mov
stos
xchg
jne
lcall
jmp
cmp
and
inc
mov
ja
pusha
inc
lods
mov
sub
push
or
mov
sti
insb
xchg
insl
and
lcall
jl
push
lahf
mov
mov
cmpsb
arpl
sub
movaps
mov
pop
imul
xor
fimull
outsl
jnp
or
or
adc
sub
aaa
lods
rcl
std
insl
inc
pushw
jo
ficomps
cmpl
add
cltd
jb
adc
jmp
sbb
mov
rorl
jns
aaa
das
push
cmp
sub
add
adc
inc
mov
pop
loope
inc
lea
fstps
xchg
loopne,pn
cmp
js
faddl
ds
inc
push
xchg
inc
sbb
mov
out
xchg
sub
adcb
in
orl
mov
jne
mov
and
lret
mov
int3
add
fsubrs
pop
and
clc
clc
pop
push
into
and
insb
inc
and
mov
cmpsb
in
in
pop
xor
jg
adc
iret
es
or
les
mov
sub
sbb
out
into
xor
jge
cmpb
std
and
repz
lods
mov
hlt
cmp
or
lahf
pushf
mov
sti
mov
lret
jb
mov
jns
mov
decl
not
jl
xchg
js
adc
test
xor
inc
lock
fnstenv
mov
fistpl
inc
push
push
out
mov
xchg
push
cmp
dec
mov
pop
jmp
fldcw
mov
stc
lahf
xlat
lahf
std
mov
lret
notb
les
pop
push
test
fstl
sbb
sbb
sbb
xor
sbb
loopne
pop
shrb
lahf
mov
push
mov
lods
add
pop
nop
dec
or
mov
je
cltd
mov
out
scas
sbb
imul
stos
adc
out
pushf
xor
std
notb
subb
jb
jge
mov
mov
xchg
loop
jns
mov
inc
sbb
adc
in
sahf
xchg
or
sbbb
lock
push
nop
idivb
loope
lods
in
jl
mov
push
fcomps
stos
arpl
adc
sub
xchg
sbb
stos
push
ds
mov
or
fmull
push
shlb
lret
xor
mov
rcrl
lret
lods
loope
push
sbb
popa
jno
and
popf
or
inc
adcl
lods
sub
jg
mov
jne
or
mov
adc
aas
or
mov
loop
imul
adc
fsubl
icebp
mov
adc
xchg
and
insl
mov
scas
adc
jne
aas
test
mov
loop
dec
cli
es
xor
lea
jmp
or
repz
and
xor
pop
mov
stc
push
or
popf
loop
adc
cmp
sarl
add
inc
into
and
add
push
sub
mov
daa
mov
das
add
inc
std
inc
pop
scas
ljmp
cmc
dec
inc
xchg
cs
sahf
movsb
cld
dec
insl
xlat
mov
push
inc
cmp
mov
scas
lret
jo
add
test
or
fistpll
jle
and
sbb
cmpsl
in
dec
lock
pop
call
push
out
movaps
ficoml
and
add
jbe
test
or
dec
sbb
jge
repnz
iret
loope
mov
cmp
mov
xor
lcall
out
aaa
push
pop
ja
bound
fst
xchg
hlt
lret
test
jmp
nop
fisttpl
xor
jbe
push
xchg
sub
push
shlb
inc
loopne
out
addl
data16
add
fnstcw
dec
push
lock
fisubrl
inc
mov
cwtl
fcmovb
shlb
fwait
pushf
fadds
js
cmc
call
dec
les
test
cmp
pushf
dec
sti
imul
imul
xchg
cwtl
adc
loope
inc
pushf
mov
aad
jnp
adc
cmp
imul
in
sbb
cmc
mov
fcoms
dec
enter
ljmp
dec
arpl
iret
mov
xor
xor
add
mov
jne
push
inc
sub
dec
pop
mov
pop
xor
mov
sub
jnp
dec
int
cmp
jge
jl
or
mov
outsb
cltd
jbe
xchg
mov
je
mov
fs
aam
fwait
jg
clc
jnp
cld
mov
push
adc
lock
js
xor
sti
sub
mov
out
xchg
and
jp
out
sbb
cmp
mov
subl
cmp
jne
cld
popf
cmp
fwait
and
dec
pop
cmp
fdivrs
pushf
sbb
fdivr
lcall
dec
cmpsl
arpl
aaa
jp
mov
or
or
scas
mov
inc
push
punpckhbw
pop
and
mov
je
xchg
mov
test
bound
mov
adc
sbb
call
das
mov
or
xor
mov
cmp
adc
inc
xchg
arpl
mov
sbb
shll
xchg
pop
and
pop
ds
xor
test
dec
fistps
insb
jp
lret
js
inc
lock
pop
clc
jmp
fstps
and
jmp
ret
jb
enter
imul
adc
popf
test
jne
ret
mov
bound
mov
adc
jecxz
repz
adc
cmovno
hlt
stos
inc
xor
cmp
inc
adc
jmp
jb
adc
xor
xor
push
pop
or
or
fisubl
or
mov
mov
xor
xchg
out
lds
xor
pop
cmp
repnz
mov
jle
je
mov
jg
fstpl
mov
daa
push
mov
test
push
or
inc
or
testb
jne
in
lds
push
push
or
out
gs
sub
sub
and
leave
mov
ds
pop
dec
mov
clc
icebp
mov
clc
es
andl
cmp
rcl
xchg
loopne
lret
inc
shrl
pop
dec
aas
ds
cmpsl
aam
pushf
add
or
pushf
xor
lcall
icebp
es
sub
out
loop
mov
outsb
xor
xor
sub
lods
mov
mov
pop
push
stos
mov
or
add
push
push
icebp
add
int
push
les
or
push
sbb
push
hlt
int
push
loope
mov
test
cmp
inc
add
into
into
jno
fstpt
pop
mov
jg
loop
mov
in
movsb
inc
xor
sbb
jg
and
jge
icebp
jns
call
mov
dec
jecxz
test
fldenv
test
xchg
xlat
dec
sarl
test
xor
inc
repz
push
pop
jmp
sbb
in
jnp
andl
add
pop
lret
xor
repz
shrb
sahf
push
std
jns
adc
sub
cmpsl
sub
or
adc
imul
rclb
push
ss
shll
or
xchg
mov
push
add
cmp
xchg
lret
lcall
inc
dec
dec
dec
ret
sub
stos
movsb
lahf
mov
cmp
and
xchg
fnsave
or
call
add
cmp
add
insl
inc
sub
inc
sbb
mov
pop
xchg
mov
jp
push
xorb
dec
inc
inc
clc
shrb
lods
bound
jle
adc
daa
adc
lods
jp
sti
xchg
aad
aaa
scas
inc
cmp
sarb
out
mov
mov
lock
add
mov
jno
adc
adc
clc
inc
push
imul
xchg
or
imul
xchg
cwtl
jp
fsts
mov
sub
cltd
out
cli
inc
sarb
insl
repz
aaa
push
nop
mov
mov
std
pushf
add
push
aad
enter
cs
push
aas
sub
add
push
sbb
push
xchg
jns
jg
inc
test
pop
adc
inc
mov
ret
pop
sahf
cmpsl
sbb
decb
xchg
inc
rcll
dec
jnp
cmp
jbe
shl
push
sub
fnstcw
sbb
cltd
js
dec
lods
jg
loop
fidivrs
pop
jge
imul
jnp
pop
mov
sbb
xor
call
sbb
jb
pop
xor
ret
xchg
inc
lahf
ljmp
out
mov
cmp
inc
jnp
mov
dec
inc
xchg
jae
popa
mov
in
push
movsl
add
in
leave
push
jo
insl
aam
addr16
nop
and
shlb
dec
mov
xchg
fldcw
sti
stos
pop
jmp
enter
mov
cmpsb
scas
sbbb
pminub
scas
jge
adc
lods
mov
push
adc
jno
outsb
lcall
das
cltd
sarl
sub
addl
push
sub
cld
mov
cmp
xor
je
dec
inc
imul
out
push
mov
cli
adc
pop
lahf
into
out
pop
data16
test
popf
test
aaa
sbbl
push
add
movsl
mov
cmp
cmpsl
or
movsl
std
lds
xor
mov
jle
dec
xchg
arpl
and
daa
je
mov
sub
ds
sbb
into
push
cs
bound
popa
pop
out
mov
rclb
sbb
es
sub
pop
xchg
popf
sub
sub
adc
js
xchg
pop
cmp
add
sub
push
jecxz
ror
frstor
test
push
ss
inc
push
push
cltd
stc
data16
cmpsb
xor
xor
ljmp
cmp
jecxz
pop
mov
idiv
je
xchg
and
inc
imul
jne
pop
fwait
and
mov
mov
inc
jecxz
call
and
mov
push
test
sbb
mov
add
les
hlt
adc
fstpt
pop
pop
sbbl
cmp
xor
dec
nop
dec
out
lods
xchg
lods
popa
push
into
pop
inc
cmpsl
sub
push
cmp
xchg
xchg
jo
jb
pop
std
test
add
pusha
or
stos
mov
jg
aam
rorl
pop
adc
andb
mov
cmp
add
cmp
sarl
xor
push
cmp
mov
test
out
lahf
in
lret
sarl
fxch
xchg
mov
mov
cmp
stos
push
fwait
stos
pop
push
test
fcmovu
xor
aam
adc
int
int3
mov
xor
and
push
push
mov
jb
mov
cmp
mov
jge
mov
mov
nop
scas
loopne
mov
je
jns
pusha
lret
imul
insl
cmp
stos
add
push
cmp
xor
fwait
es
test
xlat
lds
imul
loop
stc
dec
leave
and
push
enter
sbb
cmp
int3
loope
mov
icebp
scas
jle
outsl
ds
fisubrl
lock
mov
in
mov
lahf
cmc
cld
sti
adcl
add
push
fwait
out
inc
imull
int3
pop
test
mov
in
idiv
fwait
mov
iret
add
or
xor
mov
lret
ficoml
add
pmaxsw
cmp
lcall
push
imul
xorb
test
add
sti
mov
sub
mov
in
insl
jmp
mov
or
mov
pop
mov
dec
push
xchg
pop
and
stc
add
pusha
dec
mov
mov
hlt
je
cmpsb
lret
je
dec
fstl
shlb
jno
xchg
andb
dec
nop
inc
adc
inc
mov
cs
mov
mov
out
pusha
addr16
xor
sbb
fs
add
and
add
cltd
pop
xor
jl
rcr
loop
test
leave
sar
inc
xchg
push
push
hlt
jle
push
xor
pop
push
or
and
jno
sbbb
rol
arpl
pop
ss
dec
pop
leave
sbb
mov
cmp
xchg
dec
jb
lret
inc
into
cli
jae
bound
and
aad
jge
sbb
dec
pextrw
popf
test
addb
movsb
fldt
push
jns
push
movsl
xor
mov
ja
mov
sbb
jp
mov
and
xchg
out
insb
leave
stos
fsubs
sahf
daa
mov
add
or
ljmp
sub
outsb
je
ljmp
scas
xchg
sub
in
test
sbb
xchg
hlt
xchg
inc
cmpb
push
mov
pop
xchg
imul
mov
dec
xchg
and
mov
and
fsubr
cmpsb
lods
dec
push
iret
jp
fcmovb
fsubs
mov
movsl
cmp
test
inc
mov
ss
mov
pop
inc
nop
sub
pop
scas
jbe
mov
sub
cmpsl
inc
dec
xor
fldcw
xor
sahf
repnz
and
xlat
mov
popf
jbe
sub
shl
dec
andl
mov
xor
stc
ret
sbb
cmp
fidivl
mov
pop
and
add
repnz
sub
sbb
pop
dec
mov
xor
push
or
stos
cli
outsl
rclb
repz
jmp
filds
sub
pop
xor
fisttps
cbtw
inc
popf
push
clc
ljmp
adc
sbb
in
ficoms
cmp
push
call
adc
or
cmp
sub
testl
int3
iret
fidivrl
jl
push
imul
mov
pop
movsb
pop
sti
repz
lcall
and
adc
inc
adc
je
sbb
cltd
pop
inc
push
sub
cmp
js
fsub
xchg
push
lods
xchg
fwait
sub
push
add
cmp
cmpl
pop
das
jg
in
mov
push
xor
cmc
adc
int3
roll
and
add
clc
push
movsl
pop
cmp
fwait
or
movsb
into
push
adc
push
das
ficompl
hlt
enter
loop
mov
jne
adc
lret
mov
dec
ja
cmp
call
mov
sub
mov
setns
lock
pop
and
adc
idiv
mov
test
cmpl
das
hlt
xchg
mov
fs
dec
inc
inc
imul
mov
icebp
or
loope
out
cmpsl
mov
mov
aaa
mov
dec
cmpsl
adc
fadd
stos
popa
and
push
aad
xor
popf
icebp
sub
sbb
jbe
dec
pop
andb
mov
lods
jnp
popa
or
insb
mov
mov
aam
or
mov
mov
pop
inc
nop
jl
out
jl
dec
sahf
loop
sub
aas
jns
xor
or
add
push
and
lds
mov
cli
sbb
insl
data16
imul
push
test
dec
pushf
movsb
cwtl
std
mov
roll
mov
rcr
insl
les
lea
and
out
push
xchg
arpl
xor
xchg
sbb
dec
fidivrl
in
inc
adc
sbb
xor
sbbl
cltd
in
mov
jbe
xchg
stos
pop
nop
mov
stos
popa
out
les
shlb
call
cld
pushf
out
mov
xchg
je
dec
push
mov
stc
push
in
cli
lret
fimuls
ljmp
out
fwait
out
or
les
movsl
xor
sub
or
dec
sbb
gs
push
xor
push
jne
dec
clc
jo
fildll
mov
pop
dec
pop
hlt
into
xchg
pop
into
jnp
jmp
mov
fmulp
dec
sub
cmp
inc
outsl
jo
jmp
mov
jg
data16
xchg
add
adc
sbb
cs
icebp
mov
jne
inc
mov
sbb
pop
jmp
dec
jno
jns
iret
and
mov
gs
add
sbb
ja
jo
or
xor
lock
sub
fimuls
xchg
push
adc
push
adc
or
loope
xchg
pop
jecxz
xor
dec
xor
leave
cwtl
jp
inc
and
sub
push
pop
je
cmp
mov
dec
bound
outsl
popf
lods
cmpsb
rorl
in
fdivrs
mov
iret
add
mov
push
jge
mov
pop
es
stc
jp
sahf
mov
pop
and
bswap
js
inc
arpl
jecxz
sub
mov
inc
scas
ret
outsb
mov
pop
mov
loopne
mov
or
std
mov
push
sbb
repnz
aam
push
and
inc
xlat
adc
pop
scas
fcomps
push
in
or
lahf
das
in
lcall
mov
adc
or
fisubs
xor
add
add
out
mov
test
divb
insb
jbe
xchg
fs
push
cmc
std
mov
sub
call
jbe
xor
pop
dec
mov
fnsave
adc
jb
push
or
stos
lcall
adc
xor
xchg
mov
push
adc
mov
push
call
inc
lods
push
scas
adc
jle
adc
ror
arpl
or
arpl
adc
ljmp
and
mov
addl
sub
dec
imul
inc
fs
aaa
dec
ficompl
fisubrs
popf
add
inc
je
add
arpl
mov
std
and
outsl
rcrl
and
sbbb
ret
call
push
mov
loope
mov
add
repnz
cmpsb
enter
lcall
add
xor
xlat
push
cmpsl
mov
add
mov
shll
in
pop
push
xor
daa
rcrb
inc
test
mov
arpl
mov
or
mov
xchg
jp
jg
pushf
call
loop
in
jae
loopne
sub
jo
mov
fstpl
dec
push
cld
cmp
stc
adc
pop
call
cltd
pop
pop
cwtl
outsb
push
xchg
sub
mov
push
xor
fidivs
fisttps
push
push
or
inc
lods
mov
sub
int3
pop
pop
cmc
pusha
ss
fcmovb
push
pop
cld
sub
js
sbb
pop
nop
and
push
scas
mov
cmc
lods
loop
inc
cmpsb
cs
fs
dec
push
cmp
push
iret
ds
cmpsb
dec
fistl
imul
push
xchg
nop
lret
stos
enter
xchg
movsl
xor
xchg
out
adc
daa
push
icebp
add
out
jmp
push
loop
iret
shrb
jo
mov
dec
outsb
jno
add
fisubrl
insl
add
int
lcall
adc
adcl
popa
push
cli
insb
rorl
cmp
push
xor
pop
and
mov
fistpll
arpl
adc
sbbl
lret
jl
mov
mov
in
ljmp
xchg
inc
adc
ds
bound
mov
mov
and
push
scas
push
mov
test
in
loopne
mov
xor
sahf
push
dec
or
push
bnd
jmp
adc
mov
mov
dec
jle
fstps
or
adc
or
aaa
mov
ja
test
dec
cmp
push
add
pop
sbb
xorl
lock
cmc
mul
shl
stc
pushf
xor
dec
sub
mov
xor
xchg
pop
jnp
stc
loop
scas
lcall
sbb
shll
mov
inc
int3
ljmp
adc
sti
xchg
int3
jo
and
popf
es
movsl
dec
inc
stos
inc
and
rcrb
outsl
push
in
cld
ja
pop
push
pop
pop
rolb
inc
gs
adc
pop
mov
xor
mov
leave
or
inc
fcomp
insb
test
pop
mov
outsl
ss
nop
adcl
pushw
sarb
cvtps2pi
pop
and
lret
je
jbe
cmp
add
out
sar
sbb
jg
js
or
push
mov
cs
loope
pop
addr16
arpl
mov
adc
int
cmpsl
cltd
mov
fiaddl
sbb
std
mov
lcall
xlat
mov
xchg
sbb
jl
movntq
fcompl
stc
push
fwait
push
imul
mov
mulb
inc
rolb
xchg
jne
in
and
sub
push
cmp
add
add
insb
lods
xor
subb
pushf
mov
dec
jge
inc
ss
adc
inc
pop
hlt
jne
cli
into
lock
dec
out
cmp
rorl
xlat
out
dec
jmp
aaa
jno
stos
ljmp
push
es
cmp
mov
sub
imul
test
cmc
adc
loop
daa
mov
mov
xchg
loope
xlat
mulb
ret
mov
mov
ret
xchg
mov
lahf
shrl
xor
fiaddl
inc
mov
lock
xlat
push
in
inc
sub
mov
shrl
dec
jne
in
sbb
push
fldcw
lods
stc
add
mov
jecxz
pop
loopne
mov
pop
ret
jecxz
xchg
sahf
mov
and
cmp
fnsave
pusha
xor
pop
subb
not
repnz
shl
shl
mov
push
in
cmc
dec
mov
jp
filds
push
popa
ja
cmc
lahf
xchg
and
dec
orl
mov
mov
data16
nop
jb
cmpsb
nop
fcoms
sbbl
xchg
mov
fbstp
stc
push
loop
adc
retw
cmpl
mov
pop
jns
and
push
mov
mov
jne
push
xlat
add
cmc
imul
loope
mov
mov
push
inc
and
repz
add
fs
sub
jbe
cwtl
xchg
inc
sbb
iret
jl
xor
rcrb
ja
xor
jmp
clc
stc
bnd
imul
mov
in
mov
incl
and
inc
or
jle
cs
ljmp
lds
push
cmp
or
jg
lcall
pop
cmp
push
xchg
xchg
jp
mov
jo
and
jp
and
sti
xchg
fisttpll
std
pop
push
ljmp
and
inc
inc
or
cwtl
pop
jnp
mov
xchg
test
cmp
and
jnp,pn
scas
dec
clc
ret
mov
lcall
clc
ss
mov
mov
stos
xor
cmp
cmpsl
add
movsl
pop
out
mov
mov
xor
int
mov
fcompl
jns
imul
int3
arpl
out
ret
daa
push
xchg
scas
aad
pop
mov
repz
pop
cld
and
jge
fsubl
mov
push
mov
ja
sub
or
mov
in
add
xlat
push
xor
std
and
inc
mov
inc
call
cs
rclb
cmp
in
inc
sub
xor
mov
lods
fidivs
mov
pop
or
ljmp
fistl
or
xorps
mov
mov
daa
xchg
push
mov
nop
into
cvttps2pi
cmp
add
outsb
in
or
xchg
xchg
sbb
aam
inc
fdivr
rorb
cmp
mov
imul
add
cmp
sbb
cmpsl
xchg
add
pop
jno
cmp
pmuludq
in
rclb
mov
call
sti
or
and
add
stos
insl
stos
mov
jle
adc
test
cmc
lock
je
ljmp
repz
pop
fnstcw
jmp
in
sub
push
push
push
insb
inc
inc
sbb
sbbl
popa
subb
mov
outsl
scas
test
jp
mov
out
push
hlt
mov
jo
sub
xchg
btc
jne
decl
int3
adcl
pop
dec
add
pushf
mov
or
xor
inc
stc
mov
pushf
lcall
std
notb
cmp
fldenv
pop
xlat
cmovg
mov
xchg
fdivs
mov
shll
pushf
clc
andl
and
mov
add
insl
popa
add
rol
mov
fs
sbbb
cmpb
inc
lods
pop
xchg
xchg
pusha
mov
jo
lea
lahf
cmpl
sahf
lock
cmpl
jno
mov
gs
out
adc
fildll
std
mov
cli
mov
mov
sti
mov
dec
pop
mov
scas
clc
inc
lahf
les
testl
lret
push
in
mov
std
pusha
mov
or
push
aaa
xchg
jmp
dec
out
dec
sub
add
pop
jo
jmp
fdivr
fwait
leave
jo
mul
scas
aas
inc
lret
xchg
cmc
adc
push
xchg
cmpl
pop
xchg
test
xchg
nop
cmpb
test
mov
in
in
mov
test
cmp
push
loope
dec
push
les
push
push
or
mov
pop
dec
xchg
popa
xor
ja
jp
jae
popa
adcl
sbb
iret
adc
loopne
add
lock
fstl
cmpsb
movsl
lea
cmpb
pop
in
out
ret
pop
jno
cmpl
imul
or
xlat
pop
mov
sub
push
xor
pop
leave
faddl
cld
rol
xor
xchg
loop
nop
pop
fwait
inc
repnz
lods
mov
mov
cld
notl
in
sahf
sbb
push
aad
mov
roll
jp
fwait
lcall
adc
mov
inc
xchg
lods
xchg
aaa
jp
add
mov
add
or
aaa
push
imul
dec
mulb
bound
add
leave
inc
xor
fiaddl
or
faddl
out
rclb
mov
dec
js
mov
adc
out
aaa
out
bound
mov
and
aas
cmpsl
enter
lret
pop
sub
cmp
gs
cwtl
mov
or
scas
or
mov
push
push
mov
out
dec
mov
sub
popa
sub
fisttpl
sub
mov
cwtl
int
shlb
dec
sub
sub
or
pusha
xor
cltd
dec
clc
and
lea
adc
jno
push
testl
add
sub
inc
cmc
inc
nop
sbbb
les
pop
sub
stos
or
jnp
xchg
lods
pusha
imul
or
xor
popf
sbb
gs
and
das
fstps
insl
arpl
jns
xchg
fs
dec
movsb
xchg
data16
push
ret
ror
sti
lods
rcr
decl
cli
mov
loopne
and
repnz
xor
fidivrl
imul
leave
or
xchg
cmp
insb
hlt
fwait
jge
out
mov
call
xor
mov
popa
push
and
adcb
and
sub
or
rol
mov
dec
loope
add
jae
lods
pop
loope
fidivs
or
sub
mov
cld
push
xchg
cmp
aad
mov
out
es
mov
dec
daa
test
xchg
inc
cmpsb
popl
jb
iret
ret
cld
xlat
push
adc
adc
inc
call
push
popa
shr
mov
xor
pop
int3
jecxz
clc
mov
loope
outsb
fisttps
pop
sbb
push
dec
pop
int
cmp
ud0
std
popf
sbbb
lods
cmpb
nop
xchg
push
xor
mov
sub
fcmove
xchg
insb
divb
push
ret
mov
stos
test
hlt
sti
inc
out
aas
mov
sbb
lods
add
jnp
push
fsin
insl
fimull
test
xor
loopne
jno
mov
cmpl
rol
sbb
shlw
dec
xchg
outsl
dec
jb
js
insb
pop
push
mov
test
ss
adc
xor
fldl
jns
pop
iret
mov
cltd
xchg
pop
push
pop
pop
xchg
push
insb
test
stos
test
jge
in
sub
or
pop
enter
add
mov
cmp
mov
call
mov
and
push
jno
mov
das
dec
pop
xor
pop
inc
in
dec
sbb
lods
xchg
pop
jnp
lds
dec
jno
ljmp
in
sar
out
mov
int
jecxz
adc
xor
mov
dec
jns
cmp
sbb
pushf
int
sbb
mov
sub
mov
inc
mov
sub
push
hlt
xchg
ds
stos
or
inc
mov
in
orb
jno
lods
xchg
push
insl
jb
scas
mov
lds
dec
pop
xchg
jo
push
or
lds
loope
rorl
gs
mov
cmovs
decb
lret
bnd
push
in
std
mov
test
aam
sub
mov
stos
mov
xor
lods
or
dec
or
or
daa
jmp
push
outsl
out
pop
ret
dec
sbb
ficoml
push
xor
frstor
daa
fdiv
adc
daa
sub
mov
dec
out
xchg
shl
je
push
inc
or
jge
loope
scas
xor
sbb
push
lock
cmp
mov
test
sub
cmp
outsl
stc
cmc
cmp
loop
inc
js
outsl
clc
xchg
cmp
mov
cmpl
icebp
sub
enter
fnstenv
push
or
sbb
jb
sahf
sub
xchg
in
push
cmp
sbb
loope
aam
arpl
xchg
and
dec
adc
jl
fwait
inc
xchg
pop
adc
repnz
xor
lret
sub
mov
movsb
scas
scas
or
dec
ja
mov
int3
pop
shlb
mov
mov
loop
push
iret
jecxz
lcall
xor
imull
xor
rolb
pop
in
mov
push
leave
mov
mov
lret
push
sub
cmp
loope
insb
add
mov
shrb
jecxz
fsts
mov
jp
shr
mov
addb
adc
xchg
xchg
push
mov
mov
push
pop
into
mov
push
push
mov
fcmovu
subb
push
pop
out
sbb
pop
test
mov
hlt
push
and
lock
pop
and
fidivrl
xchg
das
xchg
sub
outsl
imul
shr
pop
scas
std
add
rcl
insl
push
cmp
ret
xchg
pop
push
cmp
dec
pushf
subb
fimull
adc
sbb
jne
push
and
lcall
popa
fmulp
pop
push
js
xchg
loopne
inc
push
lret
or
dec
gs
adc
stc
inc
mov
inc
sbb
push
nop
xchg
pop
daa
fdivrl
dec
lods
and
je
sub
popa
mov
sti
pop
inc
jl
mov
fnstcw
cmp
mov
or
mov
jns
push
pop
push
addr16
or
sti
xchg
scas
cs
imul
cmp
jp
cs
mov
lcall
mov
fistpll
leave
aam
adc
pop
xchg
je
clc
sub
mov
push
ds
lods
xchg
xor
push
sbb
jp
jecxz
fs
lahf
inc
push
imul
jne
outsb
xor
insl
adc
sti
scas
and
jle
fcompl
out
jmp
mov
int
imul
adcb
pop
out
jmp
daa
mov
inc
xlat
imul
addl
cmpsb
or
cmp
subl
cltd
andb
and
dec
nop
sub
clc
sbb
push
fdivrl
pusha
xchg
cmpsl
jmp
jmp
cmp
jecxz
dec
pop
ret
out
inc
dec
int3
cmp
dec
or
stc
inc
pop
pop
loop
pop
cmpsl
ficompl
mov
push
pushf
bound
mov
inc
sub
or
bound
dec
add
test
mov
mov
iret
sub
or
int3
fistps
aam
xchg
pop
lret
mov
lret
jb
xor
iret
shrb
dec
dec
loope
mov
push
shll
outsl
imull
fcompl
in
push
sahf
lods
sub
mov
rep
lea
or
mov
xor
test
pop
jne
adcb
cld
push
negb
mov
sahf
hlt
ret
jae
and
jp
jae
clc
or
jbe
popf
mov
fisubs
push
jl
jnp
inc
jl
in
call
imul
cmp
push
jno
imul
and
sbb
arpl
jnp
pusha
lahf
jmp
fcmovbe
or
mov
pop
add
jmp
es
int3
lahf
cmp
fnstcw
jmp
mov
xchg
adc
add
cmp
push
inc
loop
popa
test
add
sbb
cmp
sbbl
imul
movsb
fmull
and
xor
movsb
mov
movsb
xlat
pushf
popf
popf
inc
mov
or
into
sub
or
stos
xor
test
sbb
xor
add
insl
inc
loopne
mov
negb
jge
test
shrb
je
scas
lea
int3
pop
rclb
mov
es
in
adc
inc
clc
mov
aad
loopne
idivb
dec
sub
hlt
add
cmp
pushf
mov
pusha
mov
test
push
xor
icebp
mov
test
cwtl
mov
mov
dec
lods
mov
cmp
cli
jnp
push
pop
pop
push
mov
push
xor
dec
xchg
shll
push
cli
mov
jle
inc
pop
pop
cld
xlat
sub
sbbl
in
cmp
sub
les
call
xlat
inc
jne
stos
cmpsl
mov
lock
mov
mov
mov
pop
push
add
jb
out
cli
sbb
lods
lods
mov
jno
sti
mov
loop
ljmp
arpl
sbb
pop
and
imul
mov
add
cltd
or
fs
or
popf
jne
out
enter
pop
cmp
sbb
stos
test
cmp
cmpl
mov
fwait
lcall
fisttpl
aas
test
test
sub
xchg
fdivrl
jge
pop
cmp
mov
mov
lods
jmp
sbb
sub
subl
cltd
das
xchg
test
lods
insb
dec
mov
inc
into
cli
push
add
lds
dec
fwait
inc
inc
fldl
sub
pop
xor
sub
xor
aaa
mov
loop
and
and
out
jo
and
in
mov
mov
xlat
sub
push
std
push
or
leave
and
outsl
inc
leave
pop
cltd
jecxz
xchg
jo
data16
outsb
mov
loope
and
jp
jmp
xor
cmpsl
and
xchg
inc
sbb
mov
jge
or
sbb
pop
inc
inc
dec
mov
and
jl
pop
mov
mov
or
xlat
repnz
movsb
cmp
les
movb
test
pop
scas
mov
cmc
jns
sbb
inc
jecxz
inc
sti
pop
mov
add
push
and
push
cld
js
xchg
jne
inc
jg
outsl
adc
mov
shll
gs
mov
push
sbb
int
dec
sbb
dec
mov
divb
or
xchg
mov
sahf
mov
scas
icebp
and
movsb
outsb
inc
orb
sub
insl
push
jbe
push
mov
mov
sbb
aad
sub
loopne
dec
sahf
jp
or
sbb
outsb
pop
push
into
out
outsl
xchg
push
sbb
lds
mov
inc
xchg
inc
arpl
xor
lds
add
pop
xchg
inc
into
loopne
xchg
cltd
adc
bound
test
test
inc
aaa
sar
cmp
test
out
fwait
cltd
dec
gs
add
pushf
out
push
cmpsb
xor
jg
movsl
push
xchg
adcb
push
jno
rolb
xchg
hlt
push
cmp
mov
add
outsb
scas
in
push
shrb
xor
xorb
ret
mov
sub
mov
lds
movsb
dec
popa
icebp
daa
outsl
mov
mov
enter
shlb
and
popf
in
popf
mov
in
call
les
xor
mov
dec
adc
out
leave
in
jge
sub
and
xor
cmp
sbb
or
jl
loop
fs
sahf
jl
xchg
jo,pt
sub
cltd
call
sub
in
cmp
sbb
das
add
es
pop
pushf
pop
arpl
insl
outsl
xor
aas
test
mov
movb
inc
fisubl
in
setno
jne
dec
xor
les
ja
andb
fidivrs
pop
or
adc
mov
inc
and
outsl
sub
scas
mov
lods
jle
in
jl
mov
sub
cwtl
lret
mov
sar
fists
fnstcw
inc
test
fistl
sarb
pop
jae
mov
nop
pop
test
pop
or
dec
sbb
inc
pusha
dec
repnz
cs
cwtl
and
insb
iret
xchg
dec
push
jge
add
aaa
xchg
pusha
fs
cmp
or
jmp
xchg
lret
add
add
addl
ja
mov
jge
cmp
xchg
cli
not
pop
dec
pushf
fisubrs
xor
sbb
or
mov
pop
mov
icebp
jnp
rcr
sub
fcmovne
xor
xor
xchg
pop
dec
sbb
inc
loope
xchg
int3
das
push
add
fisubl
ss
arpl
cmpsb
fs
xor
dec
pop
cmpsl
daa
or
sub
mov
or
cmc
xchg
fists
in
jo
xor
push
pop
xchg
cmp
shrb
sbb
bound
and
xchg
iret
fdivrl
xor
insl
dec
mov
mov
scas
loop
cmp
test
push
sarl
daa
loop
imul
inc
addl
popf
cmp
imul
fldcw
and
push
jecxz
dec
ss
jb
cli
int
sahf
add
push
mov
fmull
push
dec
stos
gs
testb
in
shlb
push
ljmp
jp
xchg
movsl
ljmp
jle
cwtl
scas
push
fnsave
pop
rcll
js
xchg
sbb
shrl
subb
pop
push
mov
loopne
jae
and
and
jns
inc
mov
shr
sub
lret
ret
testl
imul
push
int3
push
popa
in
pop
pop
jno
xchg
out
mov
push
push
sbb
test
jns
test
movsl
and
in
popf
out
add
adc
mov
and
sub
mov
popf
adc
fisubs
cmp
rcll
mov
andl
stc
dec
xor
sbb
jp
mov
aas
repnz
insb
fcompl
mov
loope
push
or
push
cmp
xor
enter
cmp
push
inc
fsub
call
jnp
lea
aam
rolb
imul
dec
jnp
fcom
rcl
dec
inc
mov
mov
push
rorb
aaa
mov
mov
ja
mov
subb
in
stos
or
stos
mov
inc
in
mov
push
mov
adc
fbstp
jecxz
mov
rclb
mov
outsb
stc
jb
stos
or
or
lcall
jb
pop
ss
les
jmp
cmp
jg
sbb
sub
cmpsb
idivb
test
cmc
lock
cwtl
push
scas
sbb
mov
sub
dec
aam
xor
inc
dec
xchg
movd
mov
hlt
mov
dec
mov
decb
cwtl
jp
xor
jmp
mov
pop
sbb
shll
cmp
stos
push
icebp
adc
mov
testl
shll
mov
inc
in
ljmp
jle
mov
mov
cmp
mov
or
mov
mov
mov
xor
lret
int
add
setge
vmwrite
pusha
out
test
in
ficompl
fldt
mov
loop
adc
jo
mov
fcoms
js
lret
mov
mov
pop
inc
movsl
ss
sbb
in
push
pop
add
imul
xor
rcrl
cmp
movsb
cltd
push
xchg
jl
addr16
out
mov
xlat
dec
and
dec
or
dec
fbld
pop
aad
ret
fstpt
mov
sub
aam
mov
xchg
xor
std
jg
pop
sbbb
stos
xchg
mull
sbbb
adc
and
cmp
movsb
int3
mov
mov
jmp
outsl
lret
js
xor
test
or
mov
sbb
movsb
into
fimull
mulb
into
xchg
add
sbb
loope
mov
cli
pop
test
fucomip
adc
push
push
sarl
inc
pop
or
scas
rcrb
xchg
int3
int
sub
arpl
inc
mov
adc
js
stos
enter
addb
xchg
xor
dec
xor
scas
and
inc
jg
cltd
dec
lahf
adc
out
sub
insl
outsb
mov
inc
jl
cmp
sbb
mov
add
add
push
sub
lret
pop
lods
fsubrl
repnz
xorb
stc
pushf
dec
and
xor
in
mov
lahf
rcll
cli
leave
adc
or
fcompl
imull
fcomip
in
sbb
orl
out
jbe
popf
mov
das
dec
or
push
cmp
inc
xor
dec
inc
fdivl
movsb
jbe
dec
sub
push
jae
push
inc
gs
aaa
jge
subb
aaa
mov
repz
inc
xchg
sahf
cmp
adc
mov
bound
cmpsl
add
sub
cmpsl
jl
fisubrl
test
test
mov
bnd
stos
leave
in
call
adcb
stos
lods
cli
aaa
dec
lods
lahf
cmpsb
mov
xchg
cs
cmp
stc
dec
jmp
movsb
mov
pushf
pop
pop
inc
insb
fsubrs
adc
or
pop
int3
and
pop
lret
fisubl
fwait
cmc
movsb
into
dec
and
cmp
add
xchg
jmp
aaa
int3
inc
inc
imul
sub
loope
pop
dec
subl
xor
popl
lods
mov
aam
sub
decl
pop
and
shll
or
test
mov
inc
jne
fstl
rorl
cmp
mov
pop
insb
popa
and
lods
sub
push
jl
or
dec
das
jmp
divb
imulb
scas
leave
xchg
xchg
mov
adc
xchg
dec
xchg
je
dec
mull
mov
popa
rolb
imul
push
fldl
mov
out
ret
dec
dec
jbe
dec
mov
movsl
pop
cmpsl
xor
mov
addr16
lcall
push
sbb
fsubr
mov
outsl
sbb
push
sbb
loopne
das
sahf
cld
mov
adc
mov
mov
arpl
xor
fimuls
outsb
push
sbb
js
dec
repnz
push
pop
movsb
and
sbb
xchg
mov
or
mov
or
cmc
mov
cmc
add
push
clc
cld
rclb
pop
ja
pop
and
and
sub
mov
sbb
ds
adc
into
lcall
leave
adc
ljmp
aam
mov
sub
imul
push
outsb
dec
push
call
xorb
popf
leave
jnp
fldcw
hlt
daa
test
inc
jp
jne
or
mov
cld
fcomp
nop
xor
push
mov
fstl
cmp
push
jbe
push
pop
push
lea
mov
push
and
je
xorl
cmp
xchg
and
pop
sahf
pop
sub
imul
fisubl
ljmp
popf
sub
inc
es
cmp
push
sbb
loop
jnp
outsl
sbb
into
adc
test
fstl
push
andb
enter
iret
adc
insl
int
mov
ret
negb
movsl
pop
arpl
imul
cmpsl
pop
or
in
and
xor
filds
push
jno
xchg
add
scas
imul
scas
adc
fdivrs
sbb
mov
or
inc
push
ja
inc
push
jecxz
lds
ror
add
jp
push
inc
cmpsb
mov
ljmp
shll
adc
outsl
rcrb
out
out
ret
cmp
pop
mov
roll
pop
mov
push
arpl
jae
sbb
mov
repz
out
push
mov
hlt
mov
js
or
rcrb
fcoms
daa
adc
mov
call
push
repnz
push
or
movsl
pop
pop
add
jge
lds
in
icebp
andb
cmp
and
test
push
bound
mov
push
or
arpl
int3
dec
and
out
stos
in
test
adc
jo
dec
add
or
les
inc
stos
je
js
jo
les
stos
cmp
daa
add
or
mov
push
adc
imul
dec
sar
mov
out
push
cli
or
cmp
cwtl
adc
mov
sbb
movsl
pop
inc
outsb
jle
popa
notl
arpl
sub
push
pop
jbe
jge
mov
or
gs
dec
je
insl
pop
je
mov
lods
push
xchg
pop
fwait
cs
nop
dec
or
jge
mov
or
leave
mov
push
cmp
fwait
leave
mov
xor
stos
push
dec
ror
test
inc
xchg
inc
inc
push
es
popa
mov
into
or
movsl
popf
lea
mov
ja
sbb
inc
xor
out
ja
mov
outsb
vmovdqa32
fwait
mov
ljmp
stos
sahf
lret
jne
jg
push
xor
dec
sbb
or
cmpsl
sahf
dec
les
rcr
frstor
mov
jecxz
push
pushf
cmpsl
enter
mov
push
adc
jl
je
xor
pop
pushf
rcr
sbb
sbb
rcrl
push
addr16
frstor
jp
and
and
out
scas
sarl
sbb
ljmp
in
xor
xchg
cld
xor
xor
jle
pop
stc
dec
xchg
data16
xchg
bnd
test
loopne
pop
mov
xchg
data16
cmp
sbb
test
outsb
adc
pop
mov
xor
in
mov
nop
or
cmp
stc
outsb
xchg
mov
ror
dec
xor
mov
and
rcl
iret
xchg
aad
rorl
insb
pop
pop
adc
jmp
in
loop
cld
sti
imull
xchg
xchg
pusha
cltd
fcomip
adc
ds
fidivrl
xchg
jns
xchg
adc
inc
sti
inc
mov
ror
add
out
xchg
imul
xor
sub
jnp
cli
shrl
insl
shlb
jl
mov
mov
imulb
add
test
scas
cmp
dec
cmp
in
and
cmp
push
or
mov
adcb
push
cli
jb
jge
or
dec
pop
jle
jecxz
jge
aam
orl
sub
jns
and
or
iret
loope
add
mov
lahf
mov
aaa
mov
out
xlat
mov
cli
ss
lds
popa
push
cli
popf
or
push
loop
test
leave
fwait
sahf
adc
fninit
sub
mov
popa
notb
mov
popf
pop
pusha
out
ret
test
jne
mov
jp
push
not
jns
in
mov
sub
adc
inc
divl
int
lcall
jecxz
test
ja
aam
fdivrl
pop
and
fwait
jb
ds
nop
iret
fcoml
ret
jle
add
jno
outsl
sahf
pushf
push
loope
adc
dec
jb
loop
mov
cld
xor
ja
lahf
dec
sub
xchg
mov
sbb
fsubl
ljmp
lea
imul
lock
sub
inc
add
test
idiv
pusha
movsb
mov
cmpsb
stc
sbb
mov
mov
mov
inc
fwait
push
xor
mov
mov
adc
popf
push
or
leave
dec
sub
cltd
and
jnp
cmp
push
loopne
andb
outsb
jl
jle
lahf
cmp
outsb
jge
jge
in
adcb
out
adc
cmpsl
movsl
pop
imul
sbb
or
loop
adc
cli
call
xor
in
inc
cmpsb
xchg
mov
add
xor
add
mov
sbb
push
imul
aad
test
daa
jecxz
jge
imul
pop
cmpsb
dec
das
jae
cwtl
mov
std
les
jg
lds
add
mov
pop
sti
sar
addr16
bound
push
mov
mov
jae
mov
das
xor
test
insb
xchg
leave
loope
inc
cwtl
and
mov
jns
or
testb
mov
jg
pop
mov
jb
jmp
sbb
sti
push
out
sar
push
cmp
adc
into
pop
jge
daa
sub
mov
lret
mov
gs
repz
sbb
out
pop
into
sti
mov
adc
mov
into
lods
lret
push
aas
lods
aam
outsl
inc
inc
les
mov
sbb
lret
test
nop
cmpsb
and
adcl
mov
mov
adc
xor
or
and
call
xchg
scas
arpl
jbe
mov
cmp
mov
cmp
inc
adc
rcll
lods
xor
inc
mov
cmp
rolb
adc
pavgw
xchg
inc
shr
lock
ss
pop
out
dec
leave
aas
scas
mov
fldt
out
fwait
pop
cmp
les
bound
xor
cmp
test
add
pop
adc
cmpb
sbbl
inc
pop
clc
fstl
xor
inc
mov
xor
adc
xchg
cmpsl
mov
jnp
jge
lods
clc
or
es
jno
pop
imul
testl
fwait
cmp
or
inc
sub
xor
mov
out
cmp
cli
mov
lret
mov
lock
mov
pop
push
cwtl
lret
lds
ret
jno
jno
push
pop
aas
fistpll
jge
sub
lret
test
cmc
test
cltd
ljmp
fimull
jge
ret
rclb
pop
adc
imul
call
dec
lods
add
sbb
sub
pop
sub
pop
fwait
or
sub
hlt
lret
pop
les
xchg
sub
dec
jae
daa
nop
xchg
pop
add
push
add
in
jecxz
dec
add
sbb
xchg
push
sbb
maxps
inc
sub
mov
jecxz
pop
xchg
decb
add
jno
clc
xchg
sbb
scas
out
es
out
out
fsincos
aad
stc
lds
test
xchg
in
push
mov
xor
and
aam
push
or
testl
and
jne
cld
insb
ja
out
fwait
and
aad
movsl
lods
jae
xchg
daa
mov
popl
ljmp
aam
sbb
mov
cli
daa
ds
push
cmp
push
ja
xor
aaa
test
jge
push
dec
mov
jge
pop
inc
rcll
scas
pushf
addr16
lods
repz
sbb
jl
and
int3
mov
out
and
push
aad
in
or
push
ret
imul
xor
fistpl
imul
test
jb
xchg
xlat
shlb
mov
cmp
inc
fs
push
mov
ljmp
cwtl
and
pushf
fs
sub
xchg
push
xlat
dec
cli
xor
xchg
addb
icebp
fs
cmpsb
push
sar
or
test
out
push
aad
aas
stos
pop
stos
pop
cmp
push
or
dec
dec
cs
push
add
mov
in
scas
mov
xchg
mov
mov
popa
add
icebp
mov
rorb
cld
sub
sbb
insl
movsb
out
in
andl
mov
mov
nop
subl
mov
je
jno
fmul
mov
loopne
add
mov
imul
lds
lret
cld
outsb
xadd
jbe
jecxz
push
dec
sub
sbb
insl
adc
mov
push
fbstp
sbb
enter
or
inc
dec
or
sbb
xchg
test
inc
inc
sbb
scas
dec
insl
stos
push
pop
pop
std
test
scas
das
mov
lock
stos
pop
cmp
inc
dec
aam
cld
xor
xchg
and
movsb
sbb
test
aaa
adc
mov
jbe
jns
or
clc
loope
ja
icebp
mov
testb
fstpl
ret
push
rorb
xor
inc
pop
inc
enter
aaa
mov
test
inc
notb
fadds
pushf
jb
daa
sbb
into
push
icebp
leave
fstl
int
sub
inc
gs
fiadds
sti
add
das
clc
les
movsl
nop
popa
cld
ds
int3
jne
movb
xor
mov
daa
stos
ja
shrl
cmc
bound
test
sbb
dec
popa
xlat
pop
or
push
jp
inc
mov
pop
mov
insl
push
pushf
out
cmp
xor
and
in
loopne
jae
jle
std
fistl
inc
lods
fwait
sti
insb
mov
and
jp
jge
scas
mov
out
pop
xchg
xchg
push
mov
pop
cwtl
mov
in
sbb
aad
repz
add
stc
inc
mov
sbb
test
js
push
ds
add
fcomps
pop
aad
dec
addr16
mov
mov
fldl
das
pop
rcll
pop
roll
inc
outsb
and
nop
out
out
fldt
pop
sub
dec
cli
adc
or
into
lret
sub
scas
mov
or
aaa
js
shrb
add
sub
jp
mov
jmp
aad
push
inc
sub
cmpsl
testb
inc
inc
icebp
pop
sbb
jmp
jb
movsb
stos
call
paddb
lods
out
in
movsl
xchg
ror
sbb
mov
mov
ss
jno
sbbl
lret
pop
inc
popa
repnz
xchg
mov
mov
pop
xchg
cs
insb
lods
int
sub
mov
cli
out
sub
ret
dec
notb
or
or
scas
jae
cmp
xchg
jmp
mov
mov
inc
xchg
sti
jle
jb
sti
mov
mov
mov
mov
adc
loopne
enter
xorl
pushf
xor
or
xor
mov
mov
inc
imul
xor
inc
in
push
or
test
add
das
sti
fwait
out
loope,pt
outsl
dec
das
lds
mov
mov
sub
sbb
aas
sbb
es
inc
in
pop
jge
mov
enter
loop
xchg
loopne
fiaddl
rorl
lds
movsl
insl
xchg
popa
jmp
imul
dec
mov
xorb
and
push
shlb
fiadds
fcoms
rcrl
jmp
leave
lods
mov
leave
add
push
popf
adc
mov
cmp
or
shll
aad
cmp
fbld
iret
mov
aad
jb
shlb
adc
js
jbe
lock
gs
xchg
pop
jo
or
sub
xor
inc
and
in
enter
lcall
fnstcw
insl
xorl
je
imul
adc
leave
xor
mov
daa
sahf
outsb
add
cmp
dec
adc
mov
push
adc
add
lcall
dec
adc
add
in
cld
movb
lods
mov
push
rolb
fwait
pop
mov
repnz
hlt
mov
or
xchg
in
fcomps
out
push
push
mov
add
sub
es
mov
jb
push
cmpsl
mov
dec
scas
xchg
loopne
dec
addl
jno
inc
subl
mov
mov
xor
sub
mov
pop
jns
cli
mov
cmpsl
ja
inc
pop
push
mov
jno
adc
jle
sbb
mov
jnp,pt
mov
popa
xchg
outsl
push
ret
icebp
aad
outsb
mov
xor
pop
enter
xchg
int3
dec
push
adc
sti
jb
and
inc
lds
imul
or
xor
mov
push
test
dec
mov
push
out
sub
mov
or
sub
and
xor
repnz
sarl
inc
sbbb
sub
sbb
lret
sbb
pop
stos
and
jae
ret
jae
sub
sbb
jge
clc
fdiv
xchg
push
xchg
inc
jnp
inc
sub
sbb
or
inc
xchg
mov
and
xchg
jge
imul
cmp
xchg
insl
or
cmp
rcr
sub
xor
stos
pushf
popa
and
mov
xchg
insb
cmpsl
arpl
jb
and
jno
mov
inc
arpl
jl
pop
cmp
adc
push
cltd
outsb
dec
and
repnz
mov
xor
outsl
aad
cmp
lds
mov
mov
stos
es
jge
jg
xor
insl
ret
cmpsl
inc
cltd
sbb
mov
loop
jge
call
inc
push
xchg
mov
add
mov
orb
pop
and
in
cmc
dec
xchg
pop
mov
mov
aad
stos
inc
shrl
imul
add
loop
fwait
aas
dec
aam
fcomip
mov
jl
mov
jo
sarl
xchg
jns
inc
in
cmc
pushf
pushf
cmpsl
popf
mov
lods
adc
dec
test
rdmsr
inc
cmp
fadds
bound
fistl
xchg
jo
nop
sub
or
in
in
mov
lcall
lret
mov
das
xor
mov
test
add
sub
add
jae
gs
nop
in
test
ss
mov
fs
mov
adc
and
cmc
add
push
das
add
cmovae
ds
cmp
add
cmc
xor
cld
push
xchg
push
ja
jo
scas
sbb
das
cmp
js
popf
outsb
lcall
into
xchg
insl
call
pop
in
dec
or
push
das
dec
xor
gs
aad
cwtl
jo
mov
push
mov
xor
mov
xchg
pop
pop
adc
xor
ss
jbe
xor
or
icebp
les
xor
std
ret
jge
sub
ret
sti
dec
mov
ss
or
add
or
mov
xor
push
mov
mov
movb
les
insl
mov
mov
push
cli
shrl
aas
out
cmp
cs
insb
enter
ss
int3
adc
push
pop
insb
outsb
arpl
rcrl
xor
stc
push
adc
arpl
push
mov
push
push
pusha
ds
repz
inc
jmp
xchg
add
int
daa
mov
cmp
hlt
ljmp
test
shrb
jne
test
add
daa
mov
mov
ds
rcl
aaa
pop
scas
jnp
jne
or
sbb
pop
addr16
out
pushf
xchg
jmp
inc
push
andb
enter
shlb
pop
xor
dec
stos
mov
mov
xor
mov
arpl
jg
add
cmpsb
ret
test
popf
es
out
or
stos
pop
loop
sub
mov
xor
lock
dec
imul
or
test
xchg
adc
in
loopne
or
cmp
pop
es
daa
cs
adc
mov
mov
pop
and
test
xchg
xor
test
sub
repnz
mov
mov
and
and
mov
jl
das
scas
push
in
xor
lret
imul
push
andl
fwait
pop
xchg
shll
movsb
pop
cwtl
popf
mov
ljmp
dec
xchg
ficoms
xor
sahf
xchg
fstp
xor
add
jno
ret
repnz
loop
test
movsl
jecxz
pop
mov
add
adc
push
sub
jle
mov
and
mov
lods
test
adc
aad
mov
imul
mov
je
mov
js
pop
or
jl
dec
in
and
and
test
lods
imul
cmpsb
pop
cmpsl
scas
cmc
mov
lods
mov
and
mov
pushw
cli
xchg
mov
jecxz
cmc
pop
push
jae
iret
outsb
sbb
xchg
or
or
movsb
js
lea
sub
xchg
hlt
jbe
cltd
cld
push
push
mov
loop,pn
out
push
xchg
mov
notb
fdivr
cmpsl
mov
nop
mov
xor
lods
lcall
xlat
shl
scas
mov
outsl
into
aas
sbb
lock
outsb
dec
in
leave
shlb
sub
ret
shlb
cs
out
loope
ds
xchg
xor
mov
xchg
mov
fstl
insl
or
ds
int3
adc
in
xchg
frstor
lea
dec
push
sbb
jle
pushf
add
fists
iret
outsb
je
insl
jg
bound
jnp
and
mov
push
jae
and
add
mov
stc
movsb
mov
daa
setle
and
pop
push
or
and
and
loopne
imul
xor
push
push
scas
push
jbe
lods
pop
lods
fwait
pop
out
loop
insl
lods
sbb
inc
sbb
push
popf
xor
in
xor
mov
xor
mov
inc
aad
mov
cmp
fsubp
mov
add
loope
mov
scas
ffreep
fsubl
push
imul
or
je
add
jne
mov
mov
mov
adc
push
fcompl
mov
in
adc
mov
int
cmpl
ror
outsb
cmp
pushf
inc
scas
mov
jmp
jbe
mov
jl
mov
fcomps
cwtl
pop
jecxz
add
dec
mull
sbb
mov
add
imul
or
loope
mov
mov
xchg
xchg
dec
mov
sub
cs
jbe
les
imul
in
insb
adc
das
cmc
in
adc
pop
scas
jl
add
idivl
pushf
xor
shll
std
sub
and
push
mov
int
pop
pop
sbb
loopne
push
sbb
xchg
push
cmp
cmpsb
inc
ffreep
push
inc
sbb
xor
mov
pop
inc
out
jmp
rclb
jno
push
ss
xor
adc
adc
sub
jle
js
push
pop
lea
ret
outsl
in
hlt
dec
jecxz
icebp
inc
jmp
adc
add
xor
ror
notl
or
lret
add
sub
mov
mov
and
mov
jnp
jg
or
mov
in
xchg
fistpll
adc
add
sbb
mulb
mov
rcll
or
pop
mov
mov
icebp
xchg
mov
cli
mov
inc
sub
mov
mov
sbb
ljmp
xchg
test
add
jecxz
pop
cmp
je
adc
data16
movsl
adc
scas
xchg
fst
les
in
outsl
mov
ficompl
bound
test
dec
les
push
ss
rol
lret
add
pop
and
sbb
xor
xor
dec
mov
roll
mov
jns
pop
mov
daa
pop
mov
dec
xor
jo
imul
movsl
repnz
aaa
or
int3
cwtl
ficompl
leave
jae
test
mov
scas
sbb
xchg
dec
mov
test
dec
imul
xchg
mov
jmp
push
dec
shll
mov
dec
mov
inc
es
nop
push
lcall
cmp
js
push
inc
insl
data16
adc
mov
push
pusha
cmpl
xor
nop
adc
lods
loope
sahf
fwait
dec
fwait
incb
fdivrp
push
or
jge
jle
add
xchg
cld
pop
decl
xchg
imul
mov
imul
jo
sbb
roll
push
lret
test
xor
test
andb
xor
inc
jecxz
or
fimuls
xchg
push
xchg
ret
shll
jle
add
aam
test
pop
jmp
adc
mov
push
mov
outsl
xchg
xor
xchg
inc
je
sbb
mov
xor
xchg
xor
xchg
das
or
out
fdiv
stc
pop
jnp
fldt
inc
or
sub
inc
mov
inc
je
movsb
cmp
cli
lcall
cmp
lds
pop
mov
mov
and
roll
xchg
loopne
js
bound
rolb
pop
sete
mov
test
and
mov
mov
pop
cmp
ds
test
cmp
cld
notl
cld
jae
mov
or
xchg
mov
sbb
lahf
inc
sub
adc
test
push
movsb
repnz
je
dec
xor
dec
outsb
ljmp
sti
xchg
pop
lcall
sub
mov
pmullw
mov
pusha
inc
push
mov
add
shll
dec
or
jge
sbb
sbb
xor
popf
adc
and
sub
cmp
fdivr
sbb
aaa
addr16
sub
add
aaa
xchg
adc
jecxz
stc
push
enter
es
leave
shrb
ss
shlb
mov
fs
outsb
jl
xchg
aam
push
hlt
mov
es
js
push
xor
cltd
xchg
fidivrs
scas
or
idivb
adc
ljmp
stos
dec
pop
mov
mov
push
adc
scas
fcmovb
sub
fldl2t
and
or
fsubl
or
mov
out
sbb
mov
cmp
xchg
pop
inc
rcr
mov
pop
mov
in
call
stos
es
insl
pop
sub
push
popf
mov
mov
xchg
data16
jnp
pop
hlt
insb
movups
push
xchg
adc
cmp
test
sbb
pop
into
ret
xchg
ja,pt
andb
ret
gs
call
push
mov
mov
dec
out
mov
stc
or
or
cmp
mov
aam
lret
popa
jns
out
mov
add
mov
insl
or
inc
subb
cld
adc
lods
dec
mov
lds
cmpsl
mov
sti
out
adc
cltd
add
sbb
fisubs
push
lods
std
shl
lea
sahf
dec
inc
adc
hlt
pushf
xor
sbb
or
loop
or
mov
pop
inc
int3
lock
mov
test
faddp
aas
popf
or
jg
lret
adc
aad
add
pop
ds
mov
scas
pusha
xor
movsb
jg
nop
daa
or
lret
or
mov
movsl
subl
int3
cs
xorb
inc
xor
sbb
pop
aad
imul
addl
ja
jno
sub
stc
xchg
stos
mull
repz
inc
mov
popa
or
push
sbb
dec
cld
mov
sbb
enter
pop
push
mov
inc
jg
ja
jne
pusha
push
add
push
or
fcompl
jp
or
es
test
mov
in
pop
stos
pop
leave
pop
mov
les
push
outsl
aam
xor
das
xlat
xchg
mov
mov
jmp
dec
loopne
adc
outsl
insb
lds
aaa
adc
sub
cmpsl
cmp
in
in
mov
bound
loopne
cmp
andl
mov
jg
pop
push
mov
pop
rol
jbe
push
adc
mov
lcall
xchg
out
add
pop
sbb
mov
pandn
inc
cmpsb
adc
scas
push
push
add
xor
jge
call
dec
mov
iret
xor
xchg
in
cmpsb
pop
push
call
outsl
int3
dec
dec
mov
icebp
sbb
xchg
cwtl
push
stc
mov
xchg
pop
push
xor
cmpsl
testb
icebp
bound
cld
inc
add
bound
xchg
iret
dec
ds
out
push
mov
push
adc
es
repnz
xlat
adc
bound
sub
mov
loope
xchg
xchg
sar
push
popf
int
loope
imul
fadds
xlat
jns
daa
mov
add
pop
aad
jge
loope
push
cmp
int
pop
xchg
in
mov
test
int3
xor
lods
dec
lock
jg
je
mov
sti
mov
cltd
stc
mov
mov
or
inc
data16
loope
mov
mov
rorl
pop
push
inc
pop
daa
arpl
jae
xchg
jae
inc
inc
mov
in
xchg
nop
fildl
jmp
int
into
scas
int3
mov
sbb
ret
push
ss
push
cli
xchg
jmp
enter
rorl
lcall
pop
push
mov
xor
xchg
xchg
mov
shlb
imul
cmp
inc
push
mov
lods
insb
xchg
js
jae
or
js
in
int
pop
ds
push
jmp
ds
shrl
adc
call
sahf
cmp
inc
or
jb
insb
in
cmp
rcrb
sbb
dec
inc
imul
cli
arpl
pop
and
push
cmpsl
sub
je
add
enter
nop
sbb
pop
addr16
psadbw
cli
lock
sbb
daa
adc
je
gs
sti
add
rorl
jb
mov
mov
movsl
mov
mov
js
or
mov
lods
mov
stos
mov
fsubs
mov
and
or
arpl
cltd
dec
xchg
cs
cmp
mov
mov
dec
cwtl
sbb
incl
das
push
mov
add
movsl
adc
fs
mov
popa
jle
dec
std
dec
cld
outsb
lods
xor
xchg
add
and
sub
scas
test
addr16
mov
adc
dec
dec
rcll
sbb
jge
gs
xchg
cltd
lds
daa
pop
cld
test
inc
shrl
push
adc
movb
xchg
push
mov
push
icebp
rcrl
and
sbb
shl
imul
jmp
int3
into
push
push
cmpb
sbb
insl
mov
push
or
scas
pop
cmp
or
ds
dec
ds
insb
push
sub
dec
lods
xlat
jnp
pop
xor
iret
sub
addr16
jmp
dec
push
stos
and
push
imul
jecxz
call
jne
xchg
push
jno
lahf
pushf
addl
imul
test
sahf
roll
ljmp
xchg
dec
icebp
add
mov
cld
mov
hlt
adc
cmp
pop
cs
js
or
cmp
jmp
out
dec
divb
or
mov
jp
inc
or
push
arpl
mov
xchg
xor
sub
jns
nop
jmp
repnz
sbb
leave
pop
sbb
xchg
ds
nop
add
imul
cwtl
jg
mov
loope
fwait
jb
daa
and
sti
cmpsl
dec
lock
pop
icebp
pop
lods
test
cmc
fisubl
pop
addr16
iret
ret
xlat
mov
bound
mov
outsl
sbb
lea
or
cmc
cs
adc
inc
pop
push
adc
hlt
test
js
xchg
sbb
jmp
cmpsl
shlb
repnz
pop
mov
jae
dec
sub
and
cmp
repnz
pop
cmp
pop
dec
jns
popf
add
and
and
leave
mov
test
js
movsl
icebp
mov
push
insb
cltd
das
pop
mov
sub
loope
out
cmp
stos
inc
icebp
jno
pop
mov
sub
lods
pop
push
push
fsubrs
insb
xlat
mov
pop
shr
mov
push
popa
jl
jnp
movsl
and
nop
adc
divl
xchg
mov
push
or
push
xchg
and
andb
adc
pop
mov
arpl
pusha
rcrl
addps
lret
sbb
dec
xorl
push
xor
lods
sub
push
cmp
mov
es
mov
lret
and
mov
pop
push
insl
fildll
jge
fiaddl
add
jl
lcall
xorb
cmp
mov
filds
scas
stc
addr16
push
cmp
in
call
inc
test
imul
or
add
lods
ficoml
push
mov
push
stc
jae
and
dec
test
dec
jecxz
xor
push
flds
loope
fnstenv
enter
xsha1
cmpsb
or
insb
xor
mov
sbb
jne
imul
mov
outsl
movb
push
jg
cmp
es
mov
add
addr16
movsb
test
lods
jle
push
push
adc
loope
adc
cmc
scas
sub
mov
sub
mov
mov
out
ja
sbb
movsl
clc
in
mov
mov
sub
nop
xor
mov
loope
pop
pop
sub
gs
popl
int
in
sbb
mov
or
out
adc
lcall
sbb
cs
shrl
in
test
frstor
fisttps
sahf
ret
cmpsl
es
mov
imul
mov
hlt
pusha
test
adc
insl
inc
leave
pop
and
ficompl
inc
add
test
jae
outsl
and
addr16
mov
add
xchg
jp
jae
pop
jnp
test
xor
ficoml
sub
into
or
imull
pop
ret
mov
push
pop
pop
movsl
in
jne
cmp
in
aaa
jl
adc
repnz
shlb
ljmp
and
or
ljmp
lock
ss
ret
xchg
std
and
and
iret
fcomps
int3
push
cmp
adc
mov
test
icebp
daa
inc
push
mov
scas
fidivrs
stos
aad
or
jp
adc
sub
xor
fiaddl
int3
stos
mov
sbb
test
jmp
fnstcw
rcl
je
adc
adc
int
and
mov
xchg
xcrypt-ofb
cmpsl
sub
test
clc
out
adc
loopne
sub
out
jbe
sbb
mov
lcall
aas
aaa
pop
pop
testb
scas
xchg
enter
repz
or
pop
jns
gs
in
ljmp
adc
mov
push
pop
xor
pop
pop
mov
lret
ret
jp
nop
push
cmc
movsb
xchg
jge
and
jg
mov
pushf
test
leave
popa
mov
test
push
enter
or
jmp
aad
fdivrl
ficoms
cmp
mov
das
jnp
mov
cltd
push
movsb
dec
add
jne
mov
sbb
sbb
pop
and
jl
mov
pusha
fisubl
jne
loope
cmp
sub
push
adc
popa
jns
mov
push
mov
mov
shl
dec
sub
shll
aaa
mov
int
jge
iret
add
out
inc
sti
mov
rcrl
movsb
imul
outsl
add
js
xor
mov
push
sbb
ss
fs
pushf
dec
pop
iret
or
xor
jp
add
in
stos
dec
cwtl
je
and
and
sub
leave
lahf
pop
sbb
sbb
bound
stc
lret
sub
xor
jo
cli
add
repnz
std
jno
xchg
sbb
out
or
sub
outsb
mov
cmp
sbb
aas
dec
dec
mov
and
pushf
aad
xor
es
xor
pop
mov
decb
inc
cld
int3
ret
fimuls
shlb
aas
dec
hlt
cmp
fidivl
xor
dec
and
stos
aas
stc
dec
mov
sar
xchg
push
call
mov
adc
fwait
mov
ret
in
fdiv
sbb
ljmp
mov
es
mov
xor
cmp
adc
dec
cli
xor
fsubrs
pushf
jmp
push
aaa
inc
int
cmp
adc
jl
mov
imul
push
xlat
inc
push
xchg
cmp
shlb
jl
imul
mov
ffree
stc
dec
rol
icebp
push
push
fiaddl
iret
out
mov
pushl
movsb
adc
xchg
lea
xor
pop
sbb
lods
ret
mov
scas
dec
pop
sbb
scas
jae
cmpsb
xor
jmp
arpl
xor
out
jne
sub
jb
inc
inc
loop
ds
jmp
xchg
jae
and
push
in
negb
mov
adc
inc
mov
test
inc
pop
addr16
aam
jnp
push
mov
jmp
fwait
jnp
mov
xchg
mov
dec
mov
cmp
mov
dec
sbb
lea
ljmp
xchg
loop
and
jl
addr16
sub
mov
add
out
insb
sbb
sbb
clc
pop
inc
inc
lahf
mov
push
popa
les
pop
lea
lcall
jae
push
mov
movsl
hlt
dec
xchg
imul
rcll
outsb
ret
sub
add
sbb
jno
mov
fildll
pushf
push
ret
test
enter
xor
enter
and
fidivl
adc
mov
jb
outsl
mov
sbb
mov
out
mov
mov
mov
inc
push
lods
sub
ss
jo
add
cmp
jns
testl
inc
in
out
sub
popa
cli
scas
mov
inc
das
mov
cmpsb
pop
add
jl
loope
xchg
or
outsb
pop
int3
inc
inc
mov
add
sbb
push
mov
cwtl
pop
andb
add
cmp
out
and
cmpb
fimuls
imul
pushf
sub
pushf
sub
iret
xchg
cltd
push
aaa
loopne
jg
pushf
stos
cmp
ja
pop
hlt
sub
fwait
inc
inc
push
mov
lahf
pop
fwait
sbb
jmp
addr16
out
call
jmp
loope
ret
dec
xchg
add
jbe
lret
sbb
scas
outsb
loop
dec
daa
push
jmp
dec
mov
pop
or
xchg
mov
or
or
loope
sbbl
hlt
bound
rol
pop
xchg
shl
aaa
popa
imul
xlat
xchg
orl
cmp
adc
int3
inc
and
sbb
inc
mov
or
mov
add
jmp
xchg
mov
gs
sub
ljmp
jno
cwtd
push
add
push
and
or
pop
jno
or
mov
fildl
dec
mov
or
adc
in
jbe
hlt
mov
push
outsb
cmp
test
mov
adc
mov
cwtl
cmp
xchg
pop
out
push
sub
or
orb
inc
jge
push
jae
adc
add
xor
push
jcxz
sti
std
mov
aad
neg
rcr
mov
out
mov
outsb
hlt
dec
hlt
out
dec
lock
inc
nop
pusha
inc
outsl
iret
into
imul
adc
sti
sbb
nop
and
pop
dec
lock
js
sub
sbb
push
ja
xor
pop
mov
ror
insb
cli
dec
and
into
mov
ja
pop
add
in
xor
cmp
mov
xchg
fistpll
imulb
sti
inc
rorb
mov
std
hlt
cmpsb
xchg
or
scas
fistps
adc
iret
fsubs
or
lds
push
out
shl
adc
in
adc
jnp
inc
and
push
inc
xchg
sbb
lret
jnp
jae
aam
sub
jp
lods
iret
mov
sbb
jb
testl
mov
mov
iret
cmp
cmpl
xor
adcb
mov
xchg
pop
and
jb
dec
dec
icebp
in
mov
and
cmp
cmp
dec
out
or
push
push
lahf
push
and
pop
mov
mov
rclb
cli
bound
mov
bound
jmp
outsl
mov
xchg
xor
or
les
mov
aad
in
xor
push
pop
sbb
gs
dec
fcoml
cmp
ss
addb
add
jnp
loopne
fwait
push
out
pop
push
jo
mov
sub
lret
or
pop
jno
adc
lcall
loop
les
pop
xor
dec
cwtl
sub
dec
sub
dec
andl
or
les
popa
jecxz
lcall
inc
cmpsb
dec
cmp
jae
enter
in
adc
sbb
xchg
jge
sarb
sbb
and
js
push
outsl
lret
frstor
inc
xor
test
shr
jb
fsubl
scas
mov
aam
stc
les
repz
jge
mov
mov
mov
inc
mov
sub
push
inc
pop
push
add
sub
insb
mov
inc
stos
adc
jecxz
pop
lret
mov
fcomip
or
and
jne
or
fdivs
cli
xorb
clc
inc
mov
or
jno
cmpsl
pusha
xchg
mov
mov
lahf
dec
xor
mov
mov
arpl
rolb
xchg
rolb
mov
adc
es
sub
push
fwait
inc
pusha
sti
mov
xchg
fmul
out
lcall
dec
adc
in
cmp
fcoml
daa
jo
cmc
aad
icebp
fisttps
testl
xor
push
aaa
xor
psrad
inc
jns
cmp
cli
mov
insl
and
ficompl
out
push
cmp
ss
jne
jne
cld
test
xchg
add
fidivrl
popf
hlt
out
sbb
add
mov
xchg
push
fidivl
mov
repnz
aaa
mov
mov
lcall
pop
nop
in
xor
lret
daa
push
or
sbb
xchg
shl
xchg
sahf
and
mov
popl
sbb
dec
and
ds
mov
in
push
inc
mov
fbld
adc
cltd
cmp
out
jp
push
rorb
aas
out
jmp
rolb
inc
inc
les
add
and
jecxz
das
cmp
shll
insb
adc
stos
mov
filds
in
mov
in
cmp
sbb
dec
adc
xor
dec
nop
out
jae
jmp
lock
adc
or
and
mov
or
dec
xchg
jecxz
daa
pop
mov
xchg
fiaddl
push
cmpsb
pop
out
mov
dec
mov
cmpsl
lods
jns
stos
xchg
loop
cltd
mov
mov
xor
in
jp
ret
jp
xor
or
jmp
lds
outsl
int3
movsl
jb
mov
push
jp
adc
ja
cmp
sbb
cmp
dec
aam
ret
iret
test
scas
xchg
out
fdivs
out
subb
std
out
fs
cli
xchg
mov
out
mov
push
xchg
dec
cld
add
pushf
int
or
mov
xor
imul
shll
jle
mov
out
xor
popf
jnp
test
aad
shlb
mov
cmc
jmp
jnp
mov
jecxz
mov
clc
mov
push
inc
pop
loopne
jl
outsl
mov
lret
in
xchg
sti
pop
jg
mov
insl
mov
sub
push
xor
jbe
stos
daa
xor
js
sbb
xchg
sarl
jl
in
jo
das
cmpsb
jo
push
out
sar
dec
es
rclb
fistpll
addr16
loop
mov
dec
daa
jge
sbbb
lret
shll
lcall
divb
push
je
out
and
sbb
cmpsb
je
cmp
xor
mov
mov
add
add
das
es
int3
out
adc
idivb
push
cmp
dec
movsl
movsl
insb
repz
pusha
ds
fstpl
xlat
mov
addr16
rclb
iret
mov
test
cmp
lods
dec
dec
insl
xor
ret
sarb
loope,pt
dec
dec
fildll
ficompl
jg
push
lods
inc
xchg
outsl
test
enter
popa
lock
je
imul
jne
sarl
popa
mov
loope
mov
repnz
mov
mov
cltd
and
inc
dec
lret
test
dec
je
int3
les
mov
inc
or
push
testb
inc
inc
in
pop
mov
xor
mov
jge
pushf
sub
jno
xchg
cmc
test
mov
mov
inc
std
xor
rorb
xor
subl
jmp
mov
add
mov
inc
ds
xor
test
push
fsub
aas
outsb
push
jbe
cmp
sbb
xchg
xor
push
adc
mov
sbbb
std
cmpsb
rep
mov
push
jg
inc
dec
push
jns
es
ja
jno
je
adc
inc
adc
push
adc
or
test
mov
scas
bound
sbb
adc
mov
mov
dec
pop
shlb
std
test
jmp
xchg
sub
xchg
fcoms
lahf
ds
pop
and
xchg
enter
sub
push
or
mov
cmp
incl
cmp
daa
ljmp
jne
in
mov
scas
dec
jg
rcll
add
or
dec
push
pop
pop
sub
xchg
lret
lcall
leave
mov
xor
push
mov
push
mov
or
push
hlt
dec
lods
ret
das
inc
or
imul
aas
mov
addr16
aad
inc
fidivrl
out
in
cwtl
fistl
inc
sub
jg
popa
bound
adc
and
inc
push
cmp
call
push
jp
test
nop
xchg
inc
mov
add
movl
push
pushf
lret
adc
mov
lahf
sbb
and
or
mov
lock
adc
rorb
negl
lods
fidivrl
in
cwtl
int
int
mov
outsb
or
add
cmpsb
mov
cmpsl
add
xchg
xor
mov
jno
dec
xor
xchg
and
sub
mov
xchg
cld
cmc
adc
adc
mov
nop
decb
mov
fists
pop
pop
mov
push
lock
pop
mov
pop
mov
aaa
jmp
jecxz
aaa
fldt
adc
xchg
and
sub
outsl
pop
xchg
mov
dec
mov
ret
mov
sbb
in
mov
mov
mov
bound
mov
fsubl
mov
lods
xchg
orb
cmp
mov
mov
into
notb
add
int
ljmp
lods
pop
incb
jmp
ljmp
out
aaa
repz
cmp
push
out
clc
fidivrl
mov
sub
xor
mov
loop
jl
dec
outsl
inc
add
sti
sbb
dec
add
inc
test
call
or
ljmp
add
cmp
roll
lea
jp
test
xchg
clc
aad
mov
test
push
jnp
out
push
sbb
sub
or
testl
push
xchg
iret
and
pop
leave
and
inc
sbb
jg
sbb
loop
pop
das
enter
inc
add
lea
or
leave
std
js
sub
pop
and
push
xor
insl
out
es
out
dec
out
stos
popa
add
mov
or
xor
xlat
aas
sub
or
push
outsl
out
dec
cmp
pop
dec
into
or
js
push
clc
and
pop
lret
add
xor
push
sarb
inc
xchg
xchg
mov
cmp
or
ss
mov
pop
hlt
out
cmp
je
insb
imul
lea
daa
fstpt
cmpsl
push
stos
jo
jns
jbe
jmp
and
pop
adc
mov
sub
mov
mov
xchg
test
fsubr
bound
arpl
pop
dec
and
push
add
mov
mov
inc
lds
dec
cmp
add
adc
bound
inc
sahf
dec
push
outsl
cmp
mov
inc
adc
js
xchg
test
jo
push
mov
add
inc
xchg
cmp
pop
adc
jne
jnp
push
mov
sahf
std
adc
fiaddl
add
push
xchg
jle
lret
pop
ss
push
mov
sbb
sub
mov
xor
and
push
inc
or
pop
int3
jg
xchg
xor
xor
negl
scas
sub
sub
inc
imul
jns
repz
inc
or
and
addr16
xchg
xchg
adc
push
push
fcomps
cli
mov
adc
jecxz
push
mov
push
into
inc
mov
lods
xor
outsl
and
mov
stc
hlt
sub
push
inc
xchg
js
lahf
test
cmpsb
pop
imul
leave
pop
les
dec
cmp
add
fisttpll
mov
imull
adc
dec
pop
mov
pop
mov
popa
pop
mov
dec
inc
pop
adcl
inc
dec
push
dec
sahf
lods
sbb
into
out
pop
fistps
mov
lret
push
call
addr16
jle
or
xchg
sub
mov
fsubl
add
addr16
jecxz
shll
push
push
sbb
insb
in
or
sub
fwait
scas
xor
lahf
pop
mov
jno
inc
test
pop
mov
mov
neg
cmp
mov
and
mov
mov
xor
jge
test
jo
xchg
inc
xchg
cwtl
or
mov
fcmovnbe
clc
and
mov
and
mov
sub
and
mov
or
mov
ljmp
imul
adc
sbb
fildl
sarb
orb
push
push
sub
pop
test
std
gs
pop
add
push
mov
lret
daa
mov
pop
jo
ss
jge
mov
add
stc
and
fstpt
add
xchg
out
fcmovne
dec
xchg
in
add
push
mov
xor
mov
out
add
jp
sbb
stc
test
mov
insl
inc
jne
aas
xor
ret
push
movq
ficoml
or
or
inc
push
or
add
sub
ss
rsqrtps
movl
add
sub
jae
testb
or
and
int3
icebp
dec
sub
cmpsb
cmp
aam
enter
pusha
lcall
or
cmp
mov
mov
jo
loopne
mov
xor
adc
in
add
cmp
xchg
mov
inc
mov
sbb
stos
rcll
pop
das
push
jecxz,pt
pop
in
inc
hlt
jnp
cmpsb
xor
xchg
sti
push
inc
fsubrs
xor
outsl
hlt
lcall
fistl
ret
mov
xchg
push
stos
in
and
or
stos
jp
add
sub
movsb
flds
jns
xor
repz
inc
aaa
or
adc
out
mov
int3
sbb
jb
xor
mov
push
out
sbb
fildll
mov
out
jno
pop
mov
jne
pushl
icebp
xor
dec
enter
test
xor
add
icebp
push
out
pop
pushf
adc
in
jg
ret
mov
int3
dec
out
test
cli
jge
pop
or
push
xchg
pop
nop
adc
fists
das
out
outsb
iret
iret
and
rol
fstps
xor
dec
cmc
push
shrl
dec
dec
out
aas
mov
cld
cmpl
xchg
jbe
loop
inc
adc
cmp
add
mov
out
adc
ret
jl
mov
popf
cwtl
lcall
fdivrs
dec
cmp
mov
and
outsb
inc
add
xor
aam
jo
cmpl
cmpsl
les
or
fs
incl
or
adc
pop
iret
dec
lock
xor
sbb
mov
ja
sub
cltd
pop
push
das
rol
inc
cli
and
sub
dec
orb
std
adc
dec
mov
popa
push
push
icebp
xor
push
mov
mov
jge
dec
push
ljmp
incl
adc
pop
int3
cltd
js
out
mov
sub
in
sub
iret
out
sbbl
push
push
ret
stc
fsts
imul
enter
fwait
and
adc
pop
sbb
xor
add
mul
shl
xchg
xchg
mov
adc
lds
mov
loop
add
popa
cli
leave
mov
in
ror
jl
adc
aad
and
aam
pop
push
mov
push
fdivs
aad
out
and
int
shlb
fwait
icebp
jle
xchg
mov
out
pop
insb
insb
jmp
cmpb
sti
add
push
out
dec
sbb
shll
pushf
call
mov
and
push
dec
inc
ja
or
fwait
movsb
lods
or
fdiv
pop
repnz
sbb
mov
lock
mov
repz
pop
inc
xchg
test
mov
inc
or
in
mov
cli
rolb
xchg
or
aaa
aas
or
adc
shrl
bound
fs
out
and
jecxz
andb
pop
scas
push
mov
aam
int3
adc
lret
add
jno
xchg
push
dec
or
mov
and
pop
pop
sub
jne
inc
mov
xchg
mov
dec
mov
adc
popa
push
scas
je
xchg
and
mov
lcall
lds
and
push
out
sbb
jae
mov
fildll
int3
dec
mov
dec
jecxz
dec
loop
inc
je
mov
notb
xchg
aam
cmp
cs
mov
sub
sahf
mov
inc
lcall
mov
xor
xchg
pop
ja
cmp
cli
imul
push
dec
ljmp
mov
mov
mov
ret
mov
push
cmpsl
cmp
inc
inc
enter
pop
and
jge
push
repz
sbb
xchg
lds
movsb
inc
cwtl
push
pop
cmp
xor
pop
xchg
je
and
imull
outsl
dec
in
in
xchg
and
inc
jbe
adc
mov
inc
jae
push
imul
sbb
stos
data16
inc
lods
xchg
outsl
aam
cmpsl
mov
inc
and
es
daa
cmp
adc
stos
inc
xchg
pop
and
or
gs
jb
ss
cmp
cmc
dec
pop
outsl
pop
pop
ljmp
sbb
divb
movsl
cmp
repz
popa
or
add
mov
adc
add
lcall
je
or
mov
addr16
movb
insb
call
lods
mov
push
push
mov
mov
mov
orb
mov
pop
dec
lahf
sbb
cmpsl
cmpb
xchg
or
dec
mov
adcb
mov
popf
fwait
enter
aam
xlat
inc
fwait
jp
inc
es
scas
mov
sub
inc
cmp
je
mov
clc
pop
repz
mov
pop
ds
mov
xchg
add
xchg
aad
mov
fidivrl
xchg
out
xor
pop
mov
in
mov
pushf
jmp
outsl
pusha
lock
fwait
push
dec
mov
test
xchg
push
xchg
xor
cmp
add
les
rcr
inc
add
lcall
mov
decb
pop
out
and
nop
call
hlt
jp
add
fisubs
sbb
dec
dec
lock
hlt
cs
add
jns
idivl
push
das
push
mov
xor
pop
mov
jae
jp
fdivp
cmp
mov
popa
jae
and
hlt
cmp
mov
jecxz
cmc
pop
mov
mov
xchg
sub
or
push
imul
mov
rcrl
sbb
sbb
and
or
leave
out
fdivrl
ret
rclb
mov
inc
pop
es
pop
jo
pop
notl
ss
push
imul
stos
jle
push
mov
scas
mov
out
push
xor
leave
jecxz
jbe
in
or
mov
rolb
jecxz
or
insb
out
jge
fildll
add
or
mov
adc
dec
push
adc
mov
sbb
popf
and
dec
repnz
std
adc
rcll
jmp
add
jnp
jo
and
xor
push
dec
push
sbbb
out
loop
adc
mov
out
lret
in
filds
inc
mov
iretw
addl
xchg
cmp
push
cmpsl
mov
fbstp
inc
sahf
es
dec
mov
lret
addr16
xchg
mov
xchg
loope
push
or
mov
and
lret
cld
inc
sahf
xchg
sbb
repz
lods
and
adc
push
xor
mov
dec
rclb
das
inc
icebp
incb
popf
int3
jge
mov
test
jmp
dec
out
ss
lds
dec
imul
inc
das
xchg
fdivrl
mov
adc
jg
or
es
aam
fldcw
test
adc
mov
jnp
mov
leave
dec
sub
loope
mov
loopne
xchg
mov
add
pop
xlat
in
daa
jo
add
pop
repz
cwtl
mov
push
lea
lock
loopne
cltd
std
cmp
ret
in
loope
sbb
cli
cltd
idivl
jb
push
sub
ficoml
jns
in
int3
rolb
push
outsl
pop
dec
jmp
mov
daa
sbb
push
mov
cmp
shrb
fsubrs
xchg
pop
pop
pop
fstp
inc
cli
leave
cmp
pop
xchg
scas
xor
cmc
fwait
dec
cmpb
insb
or
xor
sarb
ret
out
mov
cmp
sub
add
jl
and
pushf
cmp
push
mov
lds
inc
ffreep
inc
jb
stos
movsl
jno
mov
xchg
jle
rolb
in
test
xchg
inc
daa
xor
adc
and
movsb
sub
pop
dec
addr16
mov
mov
jecxz
sub
inc
jl
mov
adc
dec
adc
mov
lret
insb
xchg
mov
dec
outsl
xor
mov
pop
xor
sbb
shlb
jle
pushf
pop
outsl
sub
push
rcrb
jae
je
dec
std
fucomp
popf
or
jns
jne
out
dec
mov
cld
daa
mov
and
dec
pop
jg
cwtl
push
jae
push
jne
lds
sbb
out
cmpsb
mov
pop
leave
sub
addr16
inc
mov
sub
and
loope
jge
mov
js
dec
push
adc
aad
push
push
aaa
shrl
clc
xchg
les
jmp
stos
mov
xor
mov
jno
pop
mov
sub
and
add
into
mov
out
aad
add
and
mov
scas
movsb
add
pop
mov
les
jp
xchg
out
pop
mov
pushf
cli
and
adc
mov
ss
in
sub
jns
test
out
sbb
cmpsb
sahf
lret
cmp
lret
dec
and
shr
jge
bound
inc
jne
and
mov
sbbl
push
or
or
jle
dec
arpl
mov
cltd
rol
jbe
push
inc
test
jne
add
lods
popa
and
push
in
mov
fwait
mov
push
sub
das
insl
imul
icebp
cmp
into
sbb
fldcw
push
inc
adc
pop
or
repz
dec
push
test
xor
inc
loop
jns
or
in
xchg
rcrl
and
int3
mov
sti
testl
xchg
or
jne
inc
xor
cmc
imull
push
add
add
xchg
sbb
fcoml
jno
dec
into
mov
dec
dec
jo
rolb
sub
pop
mov
jnp
and
lahf
in
and
or
daa
pop
push
arpl
ficoml
jno
add
ljmp
ss
aaa
arpl
push
push
dec
dec
cmpsb
dec
mov
sub
sbb
adc
ret
faddl
loop
shll
or
dec
dec
xchg
inc
enter
shll
adc
cli
inc
and
aaa
je
or
mov
in
fistpl
call
cli
jp
outsb
gs
pop
lret
pop
push
sub
cmc
push
mov
in
xor
jae
movsb
mov
mov
fdivrs
jge
popf
push
lods
movaps
inc
dec
lcall
loop
fstl
or
or
movb
and
cld
outsb
pop
into
test
mov
add
push
std
icebp
insb
sub
jae
es
xchg
lea
aam
imul
xor
jne
jno
in
cmp
inc
cmp
xchg
mov
test
add
shrb
test
test
xchg
out
insb
sbb
and
test
lahf
sub
cli
addr16
clc
cmp
xor
pushf
std
out
lods
jg
dec
sbb
sbb
fiadds
jg
cs
sahf
dec
aad
and
dec
call
jl
test
mov
pop
ja
pusha
je
loope
jl
call
or
sub
popa
inc
cli
dec
jge
inc
sbb
pop
mov
lret
call
mov
push
cmp
xchg
dec
in
inc
pop
fwait
add
mov
mov
inc
mov
xchg
pop
divl
xchg
pushf
sbb
lcall
shll
jp
aas
push
imul
je
add
mov
shrl
test
call
aam
xchg
dec
jmp
aas
scas
jp
orl
lahf
adc
push
and
test
jae
lea
pusha
hlt
mov
add
jbe
gs
dec
into
mov
sub
jl
jnp
daa
inc
dec
push
pushf
push
aaa
and
jecxz
mov
xchg
mov
cmp
cltd
jbe
mov
addr16
lea
outsb
lock
inc
and
pop
ds
pop
test
mov
sbbl
loopne
inc
push
adcl
mov
xchg
bound
lods
in
rcll
jns
jecxz
repz
fldcw
xor
cmp
sub
or
jle
insl
mov
mov
in
imul
rcl
inc
mov
jmp
inc
in
dec
and
and
mov
or
push
mov
adc
lock
pop
add
cmpsb
pop
lods
xor
out
pop
std
int3
sub
outsb
and
into
aam
mulb
sub
dec
jnp
inc
icebp
mov
out
mov
jp
mov
jge
arpl
sub
push
xor
jns
sub
aad
pushl
sub
call
pushf
cmp
pop
jmp
and
mov
pop
cmp
mov
jmp
scas
fucomip
sub
sahf
cmp
daa
aam
mov
js
mov
pop
dec
loopne
inc
pop
adc
inc
xor
cmp
mov
aam
js
stos
sub
jnp
insb
imulb
imul
shll
mov
mov
mov
add
mov
cmpsb
push
pop
mov
test
jge
jnp
aas
sub
pop
mov
push
sub
push
xor
xchg
es
pop
jmp
test
pop
xor
mov
leave
jmp
sbb
jl
gs
mov
fisubrl
push
xchg
bnd
inc
daa
mov
mulb
adc
and
call
jno
gs
push
xorl
outsb
ret
cmp
test
sub
push
inc
cmp
ds
hlt
jne
dec
ljmp
xchg
test
and
jae
xor
lret
out
lds
sub
lods
sbb
insb
push
jecxz
out
jmp
and
sbb
mov
push
out
sbb
pop
ret
push
int
js
jmp
dec
push
inc
or
rcrl
imul
mov
pop
pushl
or
lea
lret
shrb
ss
sbb
xchg
fcompl
sbb
lahf
jne
jb
ss
incb
ss
mov
or
loop
fwait
sub
mov
je
adc
cmp
mov
dec
mov
mul
jecxz
adc
movsl
inc
jle
mov
cmpsl
sub
addl
stos
aas
or
push
jo
jge
mov
sbb
es
mov
mov
int
adc
je
adcb
mov
cmpl
mov
lret
jge
adc
inc
mov
lods
mov
mov
or
ret
mov
pop
add
stc
dec
or
xor
popa
shrb
sub
xchg
pop
int3
mov
lahf
xchg
push
dec
mov
cld
loopne
mov
jne
fsin
lcallw
stc
test
inc
popf
xchg
test
scas
lock
mov
jbe
das
ljmp
je
leave
loope
inc
loope
sbbl
loop
xchg
jne
mov
sub
popa
cmp
movsb
ja
shlb
test
jno
push
pop
fisttpll
leave
sbb
pop
jle
scas
mov
fiadds
pop
ret
cli
stos
fists
in
pop
test
stos
dec
ret
ja
movsb
mov
aam
stos
ret
push
test
jmp
test
es
add
adc
jb
xchg
call
cld
data16
sbb
and
test
sahf
je
push
lret
sub
mov
push
mov
pop
xchg
push
pop
push
mov
sti
cwtl
lock
mov
icebp
cmp
or
cmp
cli
rcr
mov
xchg
clc
dec
lods
pop
or
jae
out
xor
cld
mov
aas
mov
lret
adc
stos
adcl
std
push
push
inc
mov
mov
dec
pop
jbe
pop
xchg
popa
pop
daa
push
in
and
loop
int3
nop
call
mov
jmp
cs
mov
ljmp
mov
mov
or
ds
dec
shlb
xchg
sti
fsts
adc
pop
sbb
inc
push
popl
xor
push
lahf
inc
popf
insl
pushl
arpl
and
adc
dec
test
addr16
das
mov
or
mov
push
add
psadbw
jge
fists
dec
ljmp
adc
or
testl
cmp
jae
mov
add
push
push
das
xchg
or
aad
sub
and
loop
mov
or
popf
addl
xor
pop
movsl
lea
inc
and
mov
sbb
fstl
test
fs
invd
insl
pop
popa
sub
arpl
dec
jle
cmpsl
push
adc
jecxz
dec
lods
xchg
sbb
test
into
ds
fistpl
stos
in
jae
shlb
lret
mov
and
scas
mov
pusha
enter
xchg
and
pop
pop
pop
movsl
xorl
lods
dec
lds
int
outsl
cli
popf
cmp
fcmovu
xchg
leave
repz
popa
fxam
lret
js
cmp
dec
inc
scas
jne
mov
jns
das
fwait
aad
aaa
ret
sbb
cmp
sbbl
ds
rol
jp
shrl
lds
cmp
insb
push
pop
in
jmp
xor
out
dec
lret
sbb
xlat
aas
add
shl
push
icebp
movsl
sub
sub
xchg
test
gs
dec
add
dec
out
jge
stos
jge
insl
mov
pop
scas
insl
sti
and
nop
nop
xor
cmc
push
and
push
sbb
cmp
xor
fldl2e
xor
lock
adc
enter
jg
fmul
aas
pop
pop
xor
call
jo
outsb
sbb
sbb
das
aad
stos
jg
fdivs
js
xor
mov
and
lahf
add
mov
xor
dec
xlat
stc
int
insl
xor
mov
mov
cs
cmp
in
sahf
js
pusha
popa
and
scas
sahf
mov
sarl
clc
enter
out
cmc
sub
cmp
inc
and
js
pushf
mov
fs
mov
mov
insb
lods
push
iret
and
cli
daa
rol
scas
lahf
nop
fwait
jns
movsl
xchg
int
into
nop
cwtl
mov
xchg
fmull
ljmp
jnp
mov
inc
stos
jl
mov
je
mov
add
out
pusha
lods
aam
and
jl
nop
repnz
pop
mov
dec
ljmp
loop
mov
std
jno
jae
add
lret
repnz
sub
push
dec
xchg
ret
cmp
stc
dec
sbb
push
push
sar
dec
insb
cmc
int3
divb
mov
xchg
inc
xor
mov
es
xchg
sarb
add
fisubl
lock
subl
loope
jle
sbb
leave
cmp
insb
sti
cmp
pop
dec
pop
and
or
adc
add
iret
xchg
pop
fcmovu
xor
cmp
mov
cmp
sub
pop
out
cmp
movsb
cld
lds
lcall
mov
xchg
mov
and
adc
xor
xchg
xchg
push
cmp
dec
sub
xchg
mov
fisubrl
pusha
out
cwtl
sbb
jns
or
dec
xchg
pop
inc
mov
pop
inc
decb
fsubrp
sbb
mov
inc
sbb
sbbb
mov
shlb
cmpsb
rolb
shrl
jmp
pusha
or
mov
sti
push
mov
fstps
jmp
mov
push
mov
aad
jg
dec
aaa
cmp
pop
cmpsb
mov
pop
ret
lret
sub
sub
js
push
in
aad
stc
jge
inc
pop
add
sti
sbb
daa
mov
stos
cmp
and
push
push
test
cmpsl
outsb
jno
cmp
pop
shl
jbe
stos
or
cs
push
in
mov
jb
out
sbb
mov
pop
lcall
mov
xchg
in
fsubrl
scas
cwtl
xor
or
mov
sub
insl
adc
xor
jmp
mov
mov
jb
in
mov
mov
in
data16
ds
movsl
cmp
lods
xor
pop
sbb
cmpsb
sahf
push
ljmp
push
fwait
jbe
and
xchg
or
mov
ds
bound
push
adc
stos
cmp
test
cld
or
hlt
inc
dec
rcrb
jmp
mull
dec
imulb
cli
lretw
mov
ja
test
and
cmp
lret
fidivs
inc
sub
in
addl
dec
or
mov
rorb
and
jns
xor
xchg
sbb
pusha
mov
sub
in
outsl
mov
aam
jge
jno
jl
sub
jmp
cmp
mov
test
rcrb
adc
scas
popf
js
mov
push
or
cmp
jno
xchg
adc
arpl
xor
ljmp
subl
push
dec
sbb
int
cmp
mov
data16
in
decl
rcrl
sub
loopne
je
out
add
sbb
cs
clc
in
loopne
xchg
call
hlt
movzwl
xchg
jns
imul
push
mov
ds
sub
inc
and
xor
pop
popa
dec
mov
mov
inc
and
jne
int
ret
sbb
sub
xor
jecxz
ror
cmpsl
inc
mov
xchg
sub
bound
gs
icebp
add
ja
fmul
xchg
adc
jnp
pop
cmp
loope
popa
xor
sub
pop
and
mov
hlt
or
push
out
inc
lods
lock
and
jmp
pusha
inc
and
pusha
and
xchg
xor
mov
int
cmp
adc
jp
mov
mov
sarb
and
adc
sbb
inc
scas
xchg
outsb
jno
icebp
movsb
stos
fwait
subl
shll
cmpsb
sub
idivb
mov
jne
in
rorl
push
out
scas
lret
test
shrl
nop
addb
pushf
sbb
cmp
rorl
or
pop
push
jb
mov
dec
pop
ja
fwait
cltd
test
cli
iret
shrl
lcall
in
mov
imul
jno
dec
fbstp
fldl
pop
push
and
lods
out
jp
stos
lret
loope
stos
mov
cmp
ljmp
dec
stc
cmp
mov
int
add
jmp
inc
fnclex
mov
mov
inc
mov
sbb
test
arpl
xchg
pop
dec
xchg
xorl
xor
pop
aam
leave
cltd
pop
test
adc
in
xchg
mov
scas
ljmp
pushf
sbb
test
or
xor
add
add
in
adc
loop
movsb
rcl
and
aas
jmp
sahf
push
cs
movsb
inc
test
xor
xchg
xor
shlb
lock
jmp
imul
sub
imull
dec
mov
mov
jno
push
jb
hlt
shll
cmp
lret
test
mov
xchg
test
std
icebp
pusha
test
loop
cmp
adc
lcall
inc
inc
roll
or
imulb
xor
int
loop
dec
adc
jb
or
jge
dec
sub
pushf
jle
or
pop
dec
nop
pop
dec
add
push
jno
mov
cmp
jle
lods
cs
leave
daa
ficoms
fstl
lea
xchg
jbe
cmp
inc
sbb
xchg
mov
int3
mov
dec
es
call
lds
test
shlb
push
mov
dec
int
fwait
sub
shll
jge
hlt
push
fs
jno
or
mov
mov
dec
in
pop
out
mov
data16
dec
movsl
fs
sbb
mov
sub
sub
mov
sub
dec
push
imul
push
xor
mov
enter
jnp
push
into
iret
cmp
movb
enter
loope
mov
sub
sti
shrb
stos
cli
test
cmp
addr16
mov
push
popf
push
adc
xlat
in
ja
xor
mov
push
sub
fisttpll
cmc
add
negb
scas
imul
mov
insl
je
aaa
mov
sbb
jb
jo
add
fnsave
push
push
jns
xchg
xor
cmp
mov
into
scas
mov
int3
push
std
or
xor
xchg
daa
imul
xor
aas
in
out
out
xor
sub
fiaddl
imul
mov
mov
stos
lods
xorb
and
pushf
push
xor
mov
and
fwait
xor
pop
inc
mov
add
aam
xchg
data16
mov
pop
dec
sahf
push
icebp
cmp
inc
sti
xor
and
pop
faddl
in
mov
in
pusha
xchg
push
cmpsb
shl
sbb
sbb
mov
push
daa
out
mov
xchg
adc
loop
or
push
push
lock
xchg
sbb
jae
daa
mov
pop
mov
add
or
dec
xchg
data16
add
fistl
loop
pop
cli
mov
and
mov
adc
jle
jp
xchg
movb
rcll
loopne
sahf
mov
mov
cwtl
fisttpll
mov
adc
or
cwtl
add
test
andl
dec
jne
mov
mov
pop
iret
sbb
adc
jg
push
push
movsl
je
pop
loopne
dec
aam
orl
sbb
stos
xchg
push
lahf
xchg
test
lds
xchg
mov
push
adc
xchg
or
pop
jno
addr16
aas
fbstp
movsb
adc
and
clc
iret
sbb
daa
adc
outsb
mov
inc
int3
ret
mov
mov
test
aaa
sbb
insb
stos
fildl
sbb
popa
and
enter
adc
rorb
push
jno
mov
mov
cli
cmpsb
cmpsl
js
adc
in
fcmove
int
lods
sbb
or
sbbb
jmp
xor
push
je
dec
jno
pop
inc
pop
xchg
fucomi
jne
les
rorl
push
sbb
aam
insl
testw
pushl
icebp
ljmp
push
pop
and
xchg
js
push
js
mov
push
jne
icebp
xchg
push
lock
xorl
in
xchg
orl
cmc
adc
cli
mov
int
mov
push
cmp
xchg
pop
lods
push
or
xchg
fsubrp
push
ds
sub
cld
pop
sbb
frstor
fidivl
addr16
mov
sbb
cmp
sub
dec
call
mov
idivl
xchg
mov
pushf
les
cs
cmp
mov
dec
scas
dec
scas
push
cmc
or
outsl
in
lcall
mov
push
pop
inc
fmuls
sub
sahf
shll
lret
dec
repnz
cmp
in
pop
cmpsl
cmpsb
sbb
pop
pushf
in
add
mov
cmpsb
mov
lcall
or
outsb
test
xchg
pop
lcall
xchg
add
mov
mov
sub
pop
jne
stc
jb
fxam
and
std
sub
ja
enter
ret
xor
xor
in
stos
pop
xchg
ljmp
movsl
push
imul
cltd
mov
mov
imulb
mov
outsb
jecxz
int
jg
repz
loope
cwtl
mov
inc
or
adcl
xlat
pop
mov
icebp
mov
in
daa
testl
pop
push
xchg
or
outsl
fmuls
test
mov
repz
repz
pop
ds
popf
pop
xchg
sub
and
adc
pop
inc
hlt
xor
fisubrs
scas
sub
pushf
js
mov
cmpsb
adcb
dec
loop
cmpsb
pop
mov
and
sub
fdivl
je
orl
and
cmp
lods
rcrb
jns
cmc
pop
mov
pop
cli
mov
ljmp
xchg
add
push
scas
mov
mov
loopne
jne
xor
dec
mov
sahf
rorb
dec
add
push
loopne
sbb
lret
sahf
mov
loope
lret
push
pop
or
cmp
and
mov
mov
adc
xchg
dec
inc
mov
or
mov
mov
xchg
leave
dec
mov
aam
cltd
add
mov
notl
push
daa
pop
xchg
pop
flds
push
pusha
jns
adc
jae
xor
push
jno
mov
vmovupd
jns
pushf
push
sub
jno
std
add
addr16
dec
pop
rcrl
fwait
push
dec
sbb
lret
mov
ret
jns
xor
xchg
jecxz
aas
sub
dec
sub
mov
push
imul
xchg
xrelease
out
mov
cmp
ja
push
addb
mov
sub
pop
mov
jb
js
dec
jg
mov
mov
add
fstpl
sbb
jne
test
insl
xor
or
cmp
aas
in
addr16
inc
jae
xor
sarl
gs
enter
mov
ret
mov
mov
jae
pop
std
and
pop
cwtl
fs
xor
aaa
pop
hlt
pop
add
push
mov
lret
push
outsl
xchg
fadds
mov
cs
shll
shlb
fs
popa
pop
js
ficomps
popf
xlat
mov
and
ljmp
jg
add
dec
mov
jns
jecxz
imul
mov
out
mov
mov
add
sub
aam
jo
out
xor
sub
jns
ja
cmc
in
orps
sub
out
sti
cld
and
lahf
popa
jo
imul
das
inc
xchg
test
lcall
add
stos
sti
dec
insb
or
sti
fildll
xchg
popa
aam
cld
stos
pop
cli
add
call
dec
jle
mov
jno
enter
pop
inc
testb
lods
stos
enter
push
inc
add
sbb
fwait
icebp
xchg
pop
enter
orb
lea
xor
loopne
dec
sub
addl
and
cld
mov
loop
aad
adc
inc
add
ret
push
mov
or
push
aaa
dec
sahf
sbb
rolb
shll
fadds
sbb
sbb
add
sub
fadds
xchg
mov
aad
loopne
sub
mov
cs
repnz
lcall
jne
jmp
pop
xchg
push
pushf
orl
mov
push
or
adc
sbb
imul
adc
ror
repz
shl
and
push
sub
jl
addr16
inc
lret
out
push
lahf
shl
nop
mov
lret
repz
pop
xchg
mov
mov
shr
dec
pop
mov
cltd
add
mov
and
mov
sarb
or
add
push
pop
jl
sub
sub
ljmp
add
jne
repnz
xor
xor
out
dec
mov
xor
cmp
sub
mov
cld
sti
cmpsb
mov
movl
sahf
das
ds
pop
sub
jmp
sbb
popf
out
push
mov
mov
mov
cmp
jecxz
mov
cmp
les
inc
cltd
lret
insb
test
hlt
sbb
jp
jge
sti
in
mov
insl
add
pop
cmp
sqrtps
jecxz
lret
xlat
fstp
or
mov
jle
pushf
lds
pop
dec
add
sbb
std
test
jl
inc
mov
xchg
adcb
and
or
mov
xchg
xchg
in
es
and
dec
ret
clc
in
and
jmp
sbb
jns
fwait
int3
testb
lods
jge
scas
and
cmp
and
loope
and
das
leave
lods
sub
in
out
es
sub
imul
xchg
cli
ret
adc
in
adc
ret
fstl
push
hlt
bound
sbb
sbb
sbb
test
cmp
xchg
jle
enter
inc
sbb
cld
dec
or
outsl
lret
push
dec
pop
lret
xchg
jo
daa
bound
pop
inc
idivb
in
jb
sbb
cmp
sub
rorb
cmp
or
adc
xchg
cmp
mov
outsb
fbstp
outsl
mov
int3
add
xchg
sbb
dec
sub
pusha
stos
inc
pop
movsl
mov
jge
mov
add
std
sub
cmp
iret
push
xchg
jmp
jecxz
dec
stc
enter
jecxz
cs
xchg
sbb
jl
stos
imul
xchg
mov
ret
add
dec
addb
out
lods
les
fcomps
pop
in
divb
into
inc
xor
and
adc
loope
pop
loopne
popa
pop
insb
add
jecxz
mov
push
lock
and
mov
cltd
cli
andb
fnstenv
xchg
push
in
inc
into
mov
pusha
pop
or
pop
push
popa
ja
inc
dec
rorl
mov
jb
nop
sarb
scas
fs
shrl
popf
inc
or
mov
in
gs
shlb
or
pop
rorl
adc
frstor
in
in
pop
add
orb
mov
cs
inc
and
fsubrl
js
sbbl
data16
stc
jb
test
mov
push
mov
jl
stos
lea
insl
roll
cmp
adc
cmp
mov
inc
adc
fldl
xlat
idivl
cmp
shrl
cmp
subl
ficomps
cmc
cmp
aam
dec
xor
ss
adc
push
xchg
push
or
xchg
and
and
xlat
xor
mov
xchg
xchg
aaa
es
push
and
jae
mov
vcvtsi2sdl
ss
jbe
fcompl
xor
push
adc
xchg
inc
add
repz
or
push
sbb
pop
dec
xchg
scas
push
ret
in
fistps
out
enter
xor
ss
addr16
xchg
add
imul
adc
and
inc
out
arpl
xlat
stos
hlt
sbb
ret
or
out
add
out
mov
les
ds
sbb
xchg
ss
xchg
push
aam
fsubl
mov
repnz
jecxz
add
loop
or
inc
lods
sub
mov
inc
lods
imul
lret
pop
or
mov
mov
sub
mov
push
cmp
cwtl
mov
dec
and
inc
mov
sub
jno
repnz
enter
pusha
jbe
fdiv
jl
push
mov
out
pusha
repz
add
ret
mov
lahf
insl
aas
adc
xlat
popa
or
repz
cli
jge
pop
mov
or
xor
aaa
pop
inc
out
mov
sahf
test
sub
push
cmp
or
loop
mov
and
xor
sbb
movsb
mov
fnstenv
shll
stos
jmp
sub
jp
add
pop
fs
push
and
int
mov
and
fbstp
sub
lahf
cwtl
mov
andl
add
add
sbb
cmp
fsubl
nop
mov
das
or
and
xchg
pop
lea
test
dec
mov
or
add
sbb
jo
mov
negl
push
xchg
xor
rcrl
push
and
mov
jnp
or
lods
rol
enter
rolb
fdivs
stc
fidivrl
insb
lret
inc
rcl
jns
dec
in
mov
mov
jns
push
fisubrl
pop
fstps
jb
mov
imul
mov
stos
pop
loope
negl
add
cmp
pcmpgtw
jno
in
pop
add
mov
clc
sbb
jle
add
cmpb
jecxz
inc
add
stc
xchg
push
push
push
lret
sub
dec
add
dec
mov
sub
push
lods
push
roll
sarb
hlt
push
push
push
addb
dec
pop
pop
or
cmp
cmpsb
dec
jg
adc
sbb
cmp
imul
inc
in
and
ret
cmp
xor
xor
aad
xlat
andb
mov
sbb
dec
xor
add
test
or
out
xor
xchg
push
jae
cmp
call
adc
xor
and
arpl
dec
sbb
leave
mov
cltd
mov
pop
xchg
cltd
inc
push
ss
loope
mov
je
lock
jo
test
test
and
push
out
sub
push
dec
fisttps
jmp
stos
fiadds
cmpl
pop
rorl
push
dec
inc
jl
sti
mov
xrelease
xchg
ja
adc
jne
lods
sahf
cs
add
je
mov
out
dec
fmuls
popa
mov
add
or
aad
xlat
add
dec
pop
cmpsb
push
adc
push
mov
inc
cltd
stos
xchg
pusha
dec
int
or
lock
adc
into
mov
push
inc
cmp
fwait
mov
mov
inc
lret
aaa
imul
mov
mov
lahf
and
mov
cmp
out
lahf
std
aas
xchg
mov
xor
fadds
xchg
test
inc
insl
scas
movsb
ja
fistps
out
dec
es
cmp
andb
call
cmp
and
sub
subb
imul
mov
prefetch
push
fidivrs
mov
jecxz
mov
jecxz
shl
out
lcall
aas
add
adc
addl
orb
add
mov
decb
pop
mov
xchg
sbb
mov
ss
aaa
add
and
jl
xlat
jmp
fmuls
jg
sbb
mov
lods
scas
mov
and
jle
adc
cmpsl
mov
lret
cmp
in
fildll
pop
cmpsb
addl
test
push
popa
cld
enter
jo
push
sti
in
movsl
vorps
mov
xchg
inc
jecxz
cmp
xor
or
sub
js
movsb
lahf
ror
orl
lods
iret
jmp
repnz
jns
test
push
sarl
sub
lcall
arpl
jbe
gs
loop
xor
in
jge
sub
push
push
or
dec
xchg
inc
dec
jle
shlb
int
mov
icebp
mov
mov
sub
andl
pop
int3
incb
loopne
jle
js
add
fcmovnb
loope
stc
fistpl
mov
mov
popa
frstor
push
inc
mov
lcall
insl
in
iret
pushf
pop
push
pop
fmull
mov
mov
cmp
dec
stos
mov
pop
mov
lret
jl
mov
adc
insb
cmp
mov
dec
sub
push
mov
sbb
aas
negb
dec
push
sbb
out
mov
lcall
cli
lods
jle
out
notl
test
jl
push
std
lcall
jl
or
pushf
lods
push
sub
jle
insl
dec
test
insb
cmpl
pop
pop
inc
xor
fdivrl
jae
in
mov
push
pop
inc
xchg
and
bnd
mov
lahf
call
cmp
jne
std
jo
jle
adc
imul
lea
test
mov
push
mov
xchg
in
mulb
sub
push
and
push
mov
arpl
popa
or
mov
ret
mov
push
jb
aad
shlb
push
jl
mov
mov
sub
test
out
mov
xchg
arpl
fcoml
faddl
daa
pop
das
rol
insl
arpl
and
mov
test
pop
je
or
sbb
jp
lods
push
adc
jmp
xor
testb
mov
idivl
push
bound
mov
cmp
add
adc
push
ljmp
mov
pop
jl
push
test
out
or
sub
inc
les
dec
sub
xchg
data16
xchg
xchg
or
and
cmp
popf
ret
pop
cltd
popa
sbb
fists
xchg
xor
cmp
xchg
pop
cmpsl
jg
notl
movsl
xchg
dec
jge
repnz
test
cwtl
jnp
mov
cwtl
jno
fcomps
jbe
cmp
xchg
fisubl
adc
or
hlt
pop
daa
roll
scas
xor
cltd
adc
and
jl
pop
loop
sub
icebp
mov
inc
outsl
add
xchg
test
cmpb
cmp
cmp
mov
pushf
pop
call
or
dec
sbbl
frstpm(287
out
fdivs
push
fiaddl
jb
js
ljmp
jl
xlat
or
and
xchg
mov
push
and
mov
xchg
xor
jl
mull
mov
shlb
dec
daa
xchg
mov
sub
es
dec
add
sub
push
lret
sahf
pop
shlb
and
out
ss
inc
mov
out
fsubp
ficomps
push
dec
shlb
dec
lods
pop
pop
incb
roll
orl
stos
fwait
or
dec
cmp
jo
test
aas
dec
push
cmp
add
movsb
adc
dec
mov
and
sub
mov
rol
mov
rcll
jg
sbb
adc
scas
ljmp
push
inc
pop
adc
mov
or
mov
sub
mov
inc
imul
mov
mov
in
movsl
gs
add
pop
xor
adc
imul
imul
icebp
push
test
les
cmp
aaa
sub
sub
jbe
or
cltd
fwait
pushf
push
dec
mov
pushf
ret
inc
sbb
cmpb
push
sbb
add
mov
sub
mov
jb
xchg
mov
fs
mov
mov
xchg
adc
dec
jo
sbb
fsubrl
xchg
pop
add
cmp
push
insl
or
jae
mov
dec
pop
xchg
xchg
sbb
add
push
add
fdivl
pop
cmp
out
push
and
bound
mov
push
adc
sub
les
pop
and
cmpsb
jb
mov
mov
add
dec
and
ss
add
sahf
arpl
std
sub
testb
insl
pop
sub
mov
xchg
pop
and
cli
sahf
sub
jmp
pop
imul
mov
pop
pop
inc
and
inc
shlb
into
in
jne
leave
into
dec
dec
xor
sti
shlb
lods
cmpl
sub
push
aaa
pop
fadds
adc
ljmp
ret
or
movsb
cmc
dec
arpl
adc
ret
cmc
orb
adc
rorb
lret
fdivrl
sbb
out
fimuls
in
sar
add
sbb
les
push
pushf
mov
lahf
fld
mov
xchg
repnz
lret
jae
fwait
sbb
inc
movsb
sub
fldt
es
ds
push
int3
out
xchg
inc
dec
cmp
stc
jne
arpl
lea
pop
mov
adc
push
jp
mov
and
scas
dec
jl
aaa
mov
lds
fnstenv
xchg
outsb
jno
sahf
ret
and
jp
push
and
lock
gs
js,pt
lret
nop
scas
int
loop
incl
test
aam
dec
mov
dec
jp
and
rorl
adc
rcl
cmp
jecxz
in
bound
imul
cmpsb
lcall
test
fwait
ja
cmp
cmp
icebp
xlat
and
inc
mov
inc
xchg
jl
push
pop
mov
or
pop
fidivl
add
add
repnz
ljmp
mov
mov
sub
dec
ds
popf
bound
mov
sbb
scas
adcl
push
cmpsl
notl
hlt
adc
or
cmp
lret
test
jmp
sbb
cmp
jbe
add
dec
xor
subb
jp
adc
jmp
jecxz
test
shll
sbb
cmc
sahf
jno
or
and
dec
mov
adc
mov
inc
pop
mov
push
pop
jle
cmpsb
test
dec
sbb
sbb
outsb
and
int3
pop
ljmp
ds
and
jge
xchg
mov
sub
xor
aad
hlt
sarl
aad
mov
push
daa
xchg
or
subl
mov
mov
rorb
clc
lret
mov
out
repnz
mov
pop
cmovg
out
xchg
cmpsb
in
in
addr16
cmp
cmp
scas
jge
outsl
mov
jo
fisttps
inc
repnz
adc
or
popf
xor
mov
jae
mov
push
push
daa
push
dec
sub
enter
adc
insl
sub
push
repnz
out
inc
imul
cmp
jbe
test
mov
push
jne
xchg
lock
xchg
push
out
addr16
sarb
movsb
or
test
xchg
dec
popa
cmp
pushf
sbb
ss
or
sbb
cmpsb
adcb
shrb
adc
shll
mov
lcall
data16
and
cmp
pop
xor
xor
movsl
lret
enter
add
jl
jae
add
lods
cmc
ja
jae
movsl
pop
lret
test
xchg
mov
icebp
pop
adc
dec
sti
push
out
ljmp
cwtl
es
sbb
jns
dec
cmp
jb
and
pop
cmp
pusha
xchg
sbb
stc
adc
push
repnz
femms
fnstenv
jmp
mov
sbbb
push
push
int
pop
rcrl
adc
das
loop
jne
lcall
fwait
in
outsb
jno
mull
sahf
out
pop
into
push
jle
fwait
inc
xor
popf
out
test
lret
jp
sti
lods
lret
push
push
jmp
movsl
ss
jl
adc
addl
aam
hlt
daa
lock
repnz
sti
adc
sub
pusha
pop
mov
jmp
mov
mov
or
inc
sub
movl
jne
cmc
addr16
test
popf
pop
sarl
out
lret
ret
add
xchg
xchg
xchg
rclb
loope
mov
sub
cltd
xor
mov
fstpl
lret
je
xchg
stos
movsb
inc
mov
out
mov
sbb
push
and
xchg
cmpsb
push
push
xor
or
inc
mov
jmp
xor
lcall
sub
xchg
into
das
test
sarl
fld
neg
cmp
cwtl
jl
fadds
aas
jnp
dec
lahf
mov
inc
shl
cmpsb
dec
jp
sub
cmpsb
jmp
lods
dec
ret
pop
sbb
jns
xchg
in
xchg
mov
xor
mov
mov
add
or
jecxz
lds
mov
dec
sbb
subl
fistl
sub
sbb
push
popa
fstpt
lret
add
les
mov
or
jae
or
cmpsb
mov
pop
test
and
es
lods
inc
lds
pop
call
cmpsl
sub
xor
push
jbe
outsl
xchg
and
pop
popf
insl
mov
lahf
add
cmpsb
ja
inc
dec
lock
mov
mov
test
insl
dec
inc
xchg
cmpb
add
jb
inc
shl
jmp
jmp
or
add
test
popl
push
bound
ret
repz
cld
and
mov
or
je
bsf
xor
fsubr
pop
iret
dec
lcall
cs
rcrb
cmp
es
leave
insb
movsb
or
cmpsl
add
ss
xlat
ret
jl
push
fidivs
sbb
or
lahf
push
mov
jne
hlt
cmpsb
push
lcall
add
sbbl
mov
jp
add
mov
incb
and
add
int3
insl
lret
fs
fnsave
add
jbe
repz
dec
int
fs
fbstp
jle
mov
cs
push
mov
inc
rcl
mov
fidivrl
les
mov
cmp
ret
push
xchg
adc
shrb
ljmp
push
cmp
out
stos
or
into
fmull
fsts
jp
xor
mov
daa
push
cmpsl
addb
add
pop
in
fadds
cmp
data16
inc
pop
loop
or
push
pop
popa
or
aaa
xchg
inc
push
lods
outsb
mov
fidivrl
test
mov
orl
icebp
add
jne
addr16
push
or
cmc
ret
sbb
out
and
stc
imul
ss
lcall
and
shll
add
icebp
mov
cmpsl
inc
out
fstpt
fcompl
lods
jno
dec
fdiv
sub
std
ja
jno
imull
dec
cmp
jl
outsl
into
jg
in
pop
cmp
or
mov
outsb
movsl
inc
jl
repnz
sub
mov
and
mov
jo
sarb
add
dec
arpl
rclb
repnz
fucom
push
adc
sub
push
roll
cmp
aaa
dec
pop
insl
mov
add
mov
roll
pop
and
lret
mov
pop
iret
cmpsl
mov
aaa
daa
lods
scas
rcrb
lock
lods
ja
push
lret
jecxz
sub
pop
lods
pop
push
mov
lods
xchg
ja
lods
dec
je
mov
mov
pushf
leave
inc
fistpll
popa
dec
and
xchg
dec
out
lods
lea
pop
pusha
das
sbbl
push
xchg
xchg
jecxz
pop
decl
pop
lods
daa
mov
xchg
or
popf
pop
pop
jno
adc
jg
dec
or
addr16
push
xor
aam
mov
mov
lods
xchg
aaa
adc
fdivs
in
arpl
fstpt
cltd
push
add
jl
jno
mov
sub
rcrb
iret
inc
push
flds
shrb
cltd
xor
mov
jns
pop
adc
lods
xchg
sbb
push
pop
cwtl
sbb
lock
dec
or
fxsave
pop
mov
push
cs
movsl
mov
adc
mov
mov
fidivrl
mov
add
dec
scas
rcr
xchg
xchg
arpl
imull
mov
leave
lods
xor
clc
stc
adc
fsts
xchg
rcl
sub
into
test
ffree
sub
mov
cmp
pushf
mov
and
lret
les
je
or
in
mov
lea
iret
inc
aas
rclb
add
push
cltd
lcall
mov
cmp
jo
loop
call
ficomps
pop
test
sub
mov
push
sub
pop
mov
xchg
pop
pop
pushf
mov
sub
pushf
pop
jnp
movsl
or
std
lret
cltd
aad
cmp
sbb
sub
pop
dec
mov
je
mov
mov
or
adc
xchg
cmc
imul
ret
repz
aas
jmp
std
dec
sub
enter
lea
ljmp
lea
cmp
push
mov
fwait
adc
jmp
lret
negl
cmpsb
lods
mov
mov
loope
push
push
and
out
dec
cli
fcmovbe
add
fdiv
stos
popf
lcall
push
sub
mov
rorl
cmp
or
mov
sbb
or
mov
mov
mov
dec
adc
push
insb
push
push
mov
pop
cli
and
inc
loop
mov
jno
sahf
cmp
addl
xorl
add
dec
enter
ficoms
lea
aam
or
and
mov
cmp
das
push
dec
adc
bound
les
pop
inc
jb
jbe
fildl
jnp
adcl
icebp
lret
xchg
sub
das
mov
roll
add
lret
sarb
push
scas
jle
push
sbb
cmpsl
pop
bound
or
xor
sub
sahf
mov
ds
jmp
jmp
mov
cmp
cld
cli
inc
adc
pop
or
push
sbb
sbb
pop
sbb
pop
sahf
out
fwait
jae
pusha
sti
test
dec
je
cmp
pop
popa
jne
dec
int
dec
rcl
repz
in
stos
xor
jl
fdivs
leave
jae
daa
jb
sti
lret
adc
in
loop
push
mov
out
test
movsb
push
dec
cmc
jnp
mov
mov
inc
inc
mov
cltd
pop
sub
inc
outsl
pop
fbld
pop
sbb
into
mov
cmp
add
inc
pop
cli
mov
add
stos
lock
lds
or
xchg
imul
shlb
sub
pushf
sbb
addr16
mov
sbb
add
sbb
lret
loop
and
mov
jnp
sub
insb
and
mov
in
fmull
sahf
push
loop
xchg
cmpsb
repnz
outsb
dec
rcl
mov
aad
out
cmpsl
out
pop
mov
rclb
add
dec
repz
mov
mov
ss
and
data16
push
hlt
addr16
push
mov
popf
ljmp
outsb
mov
mov
cli
xor
dec
mov
mov
sub
jo
xchg
jbe
fdivs
pop
push
imul
xchg
and
outsl
mov
inc
xor
push
loope
fnstsw
cmp
inc
sbb
adc
leave
add
jae
test
lahf
add
outsb
sub
xchg
test
fwait
cwtl
and
scas
ret
sbb
fs
cmp
outsb
cs
arpl
cmp
mov
js
mov
ss
jecxz
lock
jge
leave
cmp
pop
fnstenv
std
add
lret
or
cmp
in
lret
inc
jns
jmp
push
lds
push
xor
in
cmp
xchg
in
xor
and
loope
jns
add
std
repnz
cmp
fwait
xor
sbb
sahf
mov
in
mov
loope
push
mov
inc
lds
xor
add
orb
mov
stc
sub
enter
xchg
sub
xchg
int
pop
adc
test
in
lods
jl
fiadds
ret
pop
sub
pop
xor
lahf
mov
adc
loopne
dec
mov
mov
out
or
jl
aam
rcr
pop
lcall
fistps
pop
mov
inc
dec
jmp
cwtl
cmp
bound
or
push
jmp
mov
outsl
add
lcall
push
push
adcl
and
cli
stc
and
sqrtps
or
icebp
cmpsl
lods
outsl
pushf
sbb
in
movsb
repz
push
sbb
mov
dec
sub
shr
lret
mov
stos
jae
mov
ficoms
leave
pop
mov
in
inc
xchg
insb
and
fwait
popa
call
push
and
mov
push
shlb
cmc
adc
les
inc
dec
mov
mov
lods
dec
popa
aad
das
aaa
sbb
lret
repz
jno
lret
mov
dec
xchg
out
pop
mov
mov
daa
dec
jmp
gs
mov
mov
mov
pop
xchg
jbe
frstor
outsl
lods
sbb
lock
and
dec
xor
icebp
jb
dec
std
adc
push
cmpsl
lea
push
ror
dec
push
idiv
mov
pop
push
ret
imul
jae
imulb
sub
fistps
or
xchg
dec
mov
jae
aam
in
sbb
cltd
lods
mov
xchg
push
push
mov
out
push
dec
mov
aam
jne
gs
ljmp
scas
adcb
push
jge
insb
js
xorl
inc
mov
add
xchg
or
jns
pusha
pusha
push
sbb
xor
jo
out
ficompl
sub
subl
sub
fsub
sub
test
or
loope
xchg
dec
dec
push
dec
xor
idivb
or
push
dec
push
xor
out
jmp
cld
mov
shrl
sub
cmc
dec
xorb
fstpl
leave
dec
pop
xchg
es
ds
int
xor
movsl
out
mov
inc
cmp
int3
xchg
and
stc
xor
in
cmp
je
push
or
pop
push
fwait
mov
fists
lock
jl
fsubs
adc
insb
xchg
hlt
test
pushf
xorl
rcr
popf
fsubrs
pop
sub
sbbl
insl
and
repz
into
rcrb
call
sub
sub
jbe
or
and
jae
pop
pop
fstl
jns
hlt
push
cs
mov
rorl
or
sub
es
out
xor
dec
test
rcrl
xorl
inc
cmpsb
push
popf
stos
outsb
sbb
and
pop
or
xor
or
jecxz
mov
jbe
mov
test
out
repz
and
rclb
mov
push
or
ret
shlb
and
mov
xor
movsl
mov
or
push
enter
iret
sub
ret
jns
adc
iret
cmp
dec
cmp
dec
push
cmp
cmp
jb
push
ret
xor
dec
push
test
sub
mov
cmp
addl
aam
dec
fs
scas
out
mov
and
and
testb
mov
cmc
xchg
fnstenv
sahf
mov
pop
lahf
xor
sbb
pop
jecxz
push
mov
mov
add
push
or
orl
in
sub
into
sbb
fcompl
or
sti
mov
sbb
and
dec
movsb
lods
mov
or
inc
fst
sub
out
or
int3
mov
xchg
icebp
xor
push
mov
icebp
cmp
xchg
daa
jmp
add
mov
es
and
pop
mov
mov
xorl
imull
ret
jnp
cwtl
jbe
or
inc
xor
sbb
xchg
and
sbb
jo
fstl
scas
pop
push
jp
or
xchg
inc
cmpsl
or
fsubs
fldt
jle
fisubl
outsl
add
inc
xchg
aad
mov
push
push
ds
in
fs
add
rclb
sarb
shrl
add
inc
push
or
clc
cmp
sar
add
push
push
sbb
ret
cmpsb
fcmovnb
mov
cmp
sub
and
cmp
xchg
stos
fcoms
sbb
mov
adc
pop
inc
shll
adc
dec
jb
jno
outsb
fcmovnu
xchg
cbtw
xor
adc
jecxz
ret
or
incl
outsl
push
movsl
fbstp
scas
adc
jle
dec
push
hlt
push
mov
jg
mov
cmc
jp
int
xchg
adc
in
mov
fisttpl
mov
mov
mov
cmp
loopne
movsb
sub
lahf
add
fstpt
in
or
sub
xchg
imul
and
cltd
ret
std
fbld
xor
xchg
pop
jecxz
cs
jecxz
or
stos
inc
lods
fs
pusha
inc
mov
imul
lds
xchg
sub
inc
outsb
xor
adc
lret
mov
bound
mov
mov
xchg
cmp
push
mov
lret
ret
mov
into
or
rep
repnz
sub
push
dec
mov
ja
test
sbb
jp
sub
aad
inc
stos
cmp
and
js
push
scas
mov
mov
mov
nop
push
or
out
pushl
xchg
push
jle
clc
or
cmpsb
adc
out
pop
jnp
and
sbb
pop
mov
mov
pop
jb
ljmp
fdivrs
in
loope
lret
mov
jno
lret
mov
out
mov
cltd
std
mov
xor
fiaddl
push
add
push
out
sub
ja
push
sub
scas
arpl
sbb
jl
dec
inc
xchg
and
insb
cmp
sub
mov
lods
js
test
xor
mov
cmp
lcall
and
aam
nop
cmp
sbb
and
data16
fwait
sbb
or
test
cs
pop
adc
sarl
sti
inc
loopne
xchg
icebp
mov
scas
mov
push
movsl
pusha
inc
lock
pusha
enter
rolb
pop
stos
jmp
in
movsl
addr16
sbb
or
movsl
add
inc
aaa
out
imul
enter
cmp
jns
clc
fwait
jecxz
sbb
repz
bound
testl
outsb
push
sub
fwait
popf
jnp
mov
and
mov
sub
inc
pop
std
orb
mov
jo
cmpsl
add
sarl
sbb
fsubl
xor
push
insb
pop
outsb
inc
fwait
or
dec
mov
jae
and
mov
mov
das
jecxz
jge
push
ret
sti
add
pop
lods
mov
mov
mov
pop
aas
jge
jecxz
lods
aam
movq
stc
and
loopne
lret
dec
fs
notb
icebp
fiadds
popf
outsl
pop
mov
out
push
sub
dec
cld
mov
mov
mov
repz
push
mov
imul
bnd
cmp
ljmp
xor
and
aas
jmp
sub
pop
movsb
shl
mov
xchg
sti
adc
int3
aam
cwtl
leave
adcb
cmp
pop
ljmp
and
add
mov
sti
test
setne
inc
xor
sbb
outsb
inc
adc
das
and
adcb
dec
push
xchg
sbb
xchg
jns
mov
ss
lret
add
xor
movsl
adc
xchg
lret
jbe
add
push
popf
scas
in
jbe
lock
repnz
fucom
xchg
xchg
cmpsl
cmp
add
cltd
iret
cmpsb
popa
or
ret
xor
adcl
push
sub
ret
loope
in
test
in
push
dec
std
pop
aas
imulb
outsl
nop
or
sbb
int
dec
test
adcl
loope
mov
loopne
mov
push
push
divl
adc
in
xchg
dec
sub
push
jl
mov
lock
cltd
repnz
movsl
sbb
pop
pop
sub
bnd
jecxz
cli
sub
jle
js
xor
adc
xchg
std
push
nop
xchg
xor
rcl
out
adc
add
sbb
ja
mov
or
sbb
in
add
pop
sbb
jp
jl
pop
lret
mov
in
or
icebp
inc
and
loope
and
iret
ljmp
scas
pop
dec
sub
out
xchg
xor
inc
mov
rcrb
add
pop
mov
cmp
in
jne
push
test
mov
rolb
xchg
sbb
lods
shlb
xchg
mov
movsl
and
sub
cli
push
addr16
out
push
cmp
mov
lods
mov
xor
cmp
cmpb
js
xor
out
xchg
aaa
rolb
loopne
notl
xchg
cmpsl
push
xor
mov
test
pop
in
cmp
popa
cmp
addb
addr16
into
gs
and
aas
xorl
xchg
xlat
scas
pop
mov
jp
pop
mov
mov
sub
ffree
mov
push
in
mov
push
mov
jb
fildll
or
xor
loopne
xchg
jecxz
push
lds
data16
repz
pusha
dec
push
in
jmp
lods
jg
aam
imul
adc
loope
pop
mov
sar
cltd
sbb
mov
pop
clc
xor
xchg
push
xchg
xor
mov
cli
dec
arpl
mov
lahf
sub
ret
loop
scas
mov
push
adc
push
pop
xor
into
test
push
in
adc
popf
dec
push
mov
mov
dec
xchg
outsl
mov
jb
lret
xor
jo
mov
lods
sarb
cmpsb
fisubl
xlat
xchg
jo
or
jge
repz
adc
sub
hlt
sti
inc
add
daa
int3
fdivl
push
adc
call
js
loop
ret
in
push
je
jns
jl
aaa
mov
subb
mov
fidivrs
clc
inc
push
push
stos
mov
gs
movsl
inc
sti
xchg
mov
cmp
stos
rcrl
adc
jmp
push
xchg
cs
in
add
ss
adc
out
push
xchg
push
xor
push
lds
in
insl
popa
ljmp
xchg
pop
inc
test
jle
pusha
mov
sbb
pop
sbb
fisubl
pop
jp
popa
mov
repnz
and
lds
mov
shrl
adc
lock
aas
aaa
mov
adc
inc
mov
lahf
int
lcall
add
pusha
loop
das
or
sbb
pusha
xorl
adc
mov
scas
lret
call
push
cwtl
jno
pop
cs
stc
push
add
push
repnz
rcr
mov
imul
mov
roll
add
sub
enter
pop
jo
ret
std
cmpsl
push
push
xchg
fwait
ds
xor
push
ret
or
mov
stos
pop
sub
sahf
imul
push
sbb
mov
cld
xchg
cmovs
push
add
je
pop
sbb
pop
inc
mov
mov
mov
jp
and
jge
rorl
jnp
push
orb
out
mov
addr16
mov
hlt
or
ret
orb
daa
jno
ret
stos
cmpb
push
dec
ret
icebp
jae
adc
add
cmpsl
or
xchg
jo
xor
cltd
sub
cmpsl
dec
aaa
dec
loope
and
jg
sahf
in
fucomp
cmpsl
xchg
or
sti
push
movsb
or
bnd
cld
jle
push
idivb
in
fcmovb
sarl
loop
scas
outsl
cmpsl
fidivs
cmp
nop
xchg
test
insl
lret
imul
cmp
push
cmp
mov
je
outsl
jl
inc
adc
xor
scas
mov
xchg
or
icebp
mov
cwtl
pushf
jle
rcrb
cmp
out
mov
cli
mov
mull
push
xchg
sbb
adc
xor
movsb
pop
mov
out
xor
sti
aad
aaa
adc
sarb
lret
mov
xchg
mov
adcb
jbe
jns
cs
push
dec
stc
out
add
in
adc
pop
dec
lret
rep
sbb
imul
add
dec
add
aaa
int
ret
test
divl
and
sub
xor
fsubrl
stos
sub
sub
fistpl
adc
xlat
les
jne
mov
xor
sub
adc
jle
adc
fistl
inc
dec
fldcw
xchg
and
dec
rcr
adc
clc
xchg
in
js
in
iret
loopne
sbb
xchg
dec
and
mov
out
cli
sub
and
pop
and
mov
adc
fdivrs
pushl
sbb
and
testl
mov
push
lret
adc
hlt
lcall
lret
sub
jb
and
mov
imul
jle
fnsave
adc
fs
int3
arpl
pop
lea
xchg
fnstsw
das
jnp
cmp
adc
rclb
std
push
addr16
jbe
and
jecxz
ja
out
sub
mov
into
aad
cmc
adc
in
and
pop
jae
imul
sbb
filds
orl
in
mov
cltd
in
lods
dec
out
fwait
adcb
cli
jnp
sbb
push
cmp
jle
dec
mov
icebp
dec
inc
jns
in
dec
push
pop
jl
pop
add
ret
cli
into
mov
pop
cli
adc
adc
push
inc
inc
dec
and
les
in
cmp
dec
data16
mov
mov
mov
repz
stos
inc
aad
inc
ret
mov
popa
or
cmp
lds
mov
aad
testl
mov
arpl
testl
div
lea
xor
push
sbb
cmp
je
pop
mov
cmpsl
mov
stos
outsl
mov
jae
xchg
dec
lea
pusha
enter
clc
push
pop
xchg
fstps
push
pop
in
mov
push
loop
jge
pop
inc
sub
push
sub
inc
mov
inc
enter
pop
pop
jno
inc
popa
sbb
lods
dec
imul
sub
xlat
cmp
ds
cmove
sub
inc
cmp
xchg
mov
or
mov
arpl
fisubl
out
into
mov
mov
stos
cmc
mov
dec
lret
pop
mov
testl
repz
outsl
sti
fisttps
popa
cmp
xor
jns
je
sahf
sbb
or
xchg
or
in
pop
aad
gs
shrl
orl
pop
fiaddl
sub
fists
jb
push
pop
mov
sbb
cwtl
jo
inc
mov
sub
cmc
mov
cmpsb
lret
call
sub
lock
sbb
aas
loope
and
scas
shll
lret
shr
leave
dec
int
loope
jae
popa
ds
or
inc
mov
xor
jb
push
lea
pop
enter
andl
and
xchg
loop
and
pop
fistps
push
fwait
and
in
in
jge
insl
push
stos
sub
xchg
sahf
jns
and
addl
or
fimuls
sbb
incl
xchg
insb
cmc
xor
jge
jmp
xchg
pop
pop
fildl
aas
xchg
divl
bound
jle
lahf
js
push
sub
repz
xor
dec
inc
jmp
add
mov
fildl
mov
push
adc
mov
push
dec
fldenv
jo
push
and
adc
mov
pop
and
add
sbb
push
or
test
xchg
adc
outsl
push
jbe
and
cwtl
test
push
sub
jns
sar
rol
push
xlat
adc
xor
pushf
fimuls
ret
or
inc
push
incb
mov
adc
or
xchg
std
cld
cmp
mov
adc
movb
fiaddl
jle
mov
aam
dec
dec
inc
adc
aaa
les
fmuls
jecxz
lock
in
sbb
imul
push
gs
shr
bnd
in
inc
pop
out
add
shrb
inc
in
push
mov
fnstsw
adc
faddl
inc
movsb
test
mov
add
shl
push
mov
mov
fildl
lahf
push
clc
cmc
ret
fisttpll
add
jge
mov
aas
pusha
ds
cmp
test
cmp
out
mov
adc
dec
lea
movsb
or
jle
mov
xor
fisubrl
or
test
call
cs
mov
xor
cmp
push
jnp
adc
loop
mov
rcr
ficoml
inc
pop
ja
lret
fdivs
sub
aas
loopne
add
call
cwtl
lea
xlat
stos
mov
in
jmp
push
hlt
pop
mov
lods
xor
and
and
cmp
sub
ret
es
xchg
pushf
jnp
sbb
ja
bound
xor
addl
arpl
ror
mov
outsl
and
in
in
sub
xchg
pop
cmp
mov
cmpsb
cmpb
dec
insl
mov
repz
mov
sub
push
popf
adc
in
inc
ja
repz
imul
mov
mov
push
ficoml
bound
jle
xor
mov
push
repnz
es
adc
ret
test
lahf
mov
or
orb
daa
dec
push
enter
xchg
stos
cmp
cmp
outsb
xchg
cmp
mov
or
jmp
das
scas
sbb
mov
cmp
jbe
xor
or
or
adc
inc
dec
xor
cwtl
pop
or
mov
nop
xchg
imulb
out
cmp
cmp
adc
mov
push
ret
xlat
pop
xchg
adc
mov
repz
ljmp
jnp,pn
pop
les
test
and
idivb
xchg
jg
enter
xor
and
and
rcr
xor
iret
stos
add
je
adc
sbb
sub
push
and
push
pop
aad
mov
imul
repz
imul
and
pop
push
inc
lea
push
pop
pop
mov
inc
sub
incl
pushf
dec
xorl
hlt
lret
push
scas
inc
sbb
push
xor
lret
mov
xchg
ds
mov
pop
jb
scas
adc
jg
and
mov
sarl
cld
jle
int
mov
or
jb
or
out
jl
call
mov
loope
das
mov
subl
push
dec
cmpsb
inc
fnstsw
and
loope
addr16
jne
pop
icebp
xchg
add
pop
cld
add
das
xchg
insl
jnp
les
pushf
sub
inc
inc
adc
add
mov
inc
ret
sub
orb
xor
and
outsb
jb
add
sbb
and
les
sar
push
daa
mov
aaa
mov
jnp
push
out
imull
push
jmp
clc
outsb
stc
jb
leave
fimuls
insl
pop
pushl
mov
rcr
sub
sub
stos
add
cmc
aad
mov
adc
dec
jo
je
dec
hlt
push
popf
and
lret
into
fistps
push
jge
cmp
lods
call
sbb
pop
ja
pop
xchg
stos
cld
addr16
jge
sti
push
loope
scas
arpl
pop
cltd
sbb
inc
xchg
leave
cltd
fsubs
arpl
add
js
sub
mov
push
xchg
push
in
mov
stos
lods
sub
into
call
mov
mov
insl
xchg
pop
jae
inc
or
or
jmp
pop
push
lcall
inc
mov
movsb
adc
push
sub
ljmp
dec
jle
push
xchg
hlt
iret
daa
in
push
negb
xchg
aad
out
scas
or
repz
cmp
dec
stos
fists
jae
jnp
popa
js
or
inc
and
lea
repz
iret
cmpsb
adcl
pop
mov
adc
and
pop
or
pop
aas
xor
xchg
inc
fwait
and
scas
mov
cld
cmc
sbb
daa
sbb
or
and
insb
push
iret
inc
imul
or
pop
sahf
and
loope
adc
loope
mov
inc
add
pop
sub
rcll
js
mov
or
sahf
jno
hlt
push
mov
dec
or
aas
or
pop
mov
dec
adc
push
lret
stc
xchg
xor
xchg
mov
mov
pop
stos
cmp
jns
mov
cmpsl
lret
rolb
ljmp
add
mov
testb
arpl
jl
js
pop
adc
pop
gs
iret
add
xchg
xorl
sbb
mul
xor
add
xor
rol
inc
iret
adc
jne
sahf
in
stos
cmp
mov
fadds
imul
or
mov
sub
cmp
in
or
arpl
mov
xor
fnsave
push
mov
je
push
stc
fcomps
shlb
mov
and
sbb
test
cmp
icebp
cmpb
xchg
mov
cmp
mov
iret
add
ret
lods
cmp
xlat
in
xchg
or
bound
push
adc
xor
scas
dec
js
xchg
cmp
push
movsb
jecxz
daa
xchg
arpl
xchg
push
les
dec
aaa
jbe
pusha
ret
dec
inc
jmp
cmc
subb
mov
insl
sti
dec
add
pop
mov
js
pop
jecxz,pn
dec
fst
mov
sbb
out
sbb
mov
jmp
dec
sbb
xchg
fsubs
mov
hlt
and
adc
sub
jle
roll
pop
sub
dec
insb
in
gs
push
inc
cld
jne
mov
sbb
pop
inc
call
sub
shlb
mov
dec
rclb
cmpsl
not
cmp
in
jno
pcmpgtb
js
mov
mov
and
fadd
pusha
mov
inc
lahf
inc
push
mov
sub
mov
push
in
mov
shrl
mov
jb
loope
add
sbbb
in
stos
mov
mov
push
hlt
sub
pop
aad
push
mov
fdivp
pop
repz
sbb
and
arpl
std
addr16
or
cltd
jg
dec
add
adc
lods
aad
mov
in
lcall
jmp
outsb
adc
daa
imul
sub
xor
aas
jge
movsb
pop
ss
js
ljmp
add
and
dec
mov
add
call
arpl
mov
loopne
cmp
pop
xor
pop
fs
pusha
in
inc
je
stos
cltd
adc
jne
rclb
cmp
xchg
je
cs
adc
adc
enter
mov
in
sbb
jb
addr16
xchg
mov
push
adcl
pop
lods
cs
ss
daa
inc
pop
jae
and
dec
ds
ds
mov
sub
xchg
mov
shrb
sub
popa
cmp
in
dec
xor
lahf
or
add
or
jo
or
in
xor
dec
call
xchg
ffreep
popf
lcall
mov
fwait
out
jae
popl
movsl
sub
rcrl
pop
jmp
rclb
jp
cmp
pusha
mov
cmpsl
push
add
pushf
insb
and
xchg
popa
mov
push
mov
loop
repz
std
sub
mov
bound
or
push
lret
xlat
lods
mov
fnstcw
stc
mov
push
cmp
and
cltd
or
jmp
fwait
gs
sbb
dec
test
push
test
fs
xchg
outsl
sbb
rcl
js
fwait
insb
xor
shr
sarl
xchg
lret
out
insb
imul
fdiv
add
or
jbe
push
add
xchg
fsubs
mov
cwtl
dec
mov
sbb
push
push
jb
lods
mov
in
jmp
ljmp
cmpsl
mov
aas
leave
cmp
push
loope
dec
mov
insl
sbb
lret
cli
out
sbb
out
shrb
mov
dec
mov
xchg
jmp
sbb
shll
mov
fdivrl
cltd
imul
pop
sar
dec
or
xchg
mov
sub
les
mov
add
loopw
outsb
mov
sbb
or
lcall
adc
mov
popa
sub
adcl
push
inc
cli
mov
or
js
les
icebp
icebp
xor
push
nop
lcall
mov
dec
xor
jne
mov
sbb
dec
mov
cmp
xor
dec
cmp
aam
arpl
mov
inc
inc
cmpsl
jmp
lods
pusha
scas
shll
jl
inc
lahf
pop
adc
sbb
lret
pushf
mov
aad
test
pusha
or
push
jb
add
xor
fisubrs
test
out
mov
inc
imul
adc
cld
mov
fsubl
stc
mov
xlat
or
std
mov
jecxz
mov
mov
inc
sbb
sbbb
mov
pop
mov
push
sub
mov
imul
mov
sahf
shrb
ret
orl
xchg
or
cmp
ret
out
and
sub
bnd
mov
loopne
daa
add
or
hlt
fcomps
insb
push
sub
ss
loop
push
sub
fmul
ss
js
mov
xlat
lret
sbb
scas
push
cmp
xor
sarl
sub
and
or
in
ljmp
add
jle
out
ds
push
sbb
test
into
out
call
xchg
xor
ja
sbb
sarl
js
stos
aam
mov
pop
push
test
insl
mov
mov
mov
xor
ss
sub
stos
xor
movsl
iret
gs
adc
cwtl
inc
pop
daa
inc
int
xchg
add
ss
sub
movsb
into
hlt
xchg
inc
dec
jbe
lods
outsb
lock
mov
repz
add
sarb
iret
xchg
rorl
test
cmp
ficomps
xchg
aad
push
or
inc
ss
loope
xchg
fnstenv
xor
aad
mov
out
mov
xor
popl
jns
mov
add
mov
mull
popf
in
cmc
pop
adc
roll
mov
sar
sub
jo
xchg
fwait
int3
cmp
pop
and
idiv
mov
sbb
loop
jecxz
push
lods
movsl
mov
xor
xor
pop
mov
in
mov
dec
adc
mov
je
lcall
push
inc
push
test
gs
lds
jnp
adc
mov
inc
aaa
ffree
pop
andb
add
test
dec
bound
sub
nop
in
lods
sub
je
inc
sub
pop
rolb
dec
mov
nop
or
mov
lds
jb
std
fidivs
or
out
mov
data16
scas
mov
fmul
imul
mov
fildll
mov
add
cld
mov
xor
push
les
in
in
fbld
cmp
push
insb
pop
pop
jne
shll
jle
pusha
mov
hlt
sub
mov
movsb
and
incb
in
jo
cmp
sub
cmp
or
lcall
inc
adc
sbb
loop
mov
jo
xor
nop
ficoml
stc
jle
and
jnp
in
xor
shrb
jb
sti
test
shlb
sbb
sub
jle
xor
jno
ljmp
cmc
ret
es
ret
mov
inc
pop
cmp
add
fnstenv
in
out
std
cmp
push
mov
pop
xchg
push
popa
je
xchg
rcll
sub
adc
out
scas
sub
jae
aad
sub
icebp
das
mov
rcrb
inc
jecxz
fadds
dec
out
mov
ret
push
lods
mov
mov
loope
jecxz
cmp
xor
lods
and
fists
cmpsl
insl
pop
jns
mov
xlat
push
xor
xor
adc
jnp
fwait
das
jg
out
punpckldq
mov
and
mov
xor
shlb
repnz
call
aad
adc
into
cmp
js
dec
inc
fstpl
push
lods
cmp
pop
inc
ljmp
fnsave
jbe
fmull
xchg
jo
sti
dec
xor
sub
dec
xchg
sub
add
pop
push
shl
out
inc
cmpsb
imul
stos
insb
push
jne
dec
ret
icebp
aam
pop
add
lahf
dec
push
ret
daa
stos
push
or
inc
add
out
jae
mov
mov
dec
mov
push
mov
lcall
xor
call
and
sbb
and
andb
adc
adc
sbb
mov
shll
pop
xor
icebp
sbb
jmp
dec
and
lods
arpl
inc
fldl
mov
jg
mov
dec
mov
adc
nop
pushf
loop
xor
fstl
repz
inc
sti
mov
pop
inc
push
rcll
scas
dec
orb
shlb
adc
lods
fmul
int
push
inc
inc
cmp
dec
ds
jne
push
sbb
sbbb
clc
and
lea
mov
adc
push
add
sahf
push
icebp
xchg
jg
insb
gs
jecxz
cmp
fldt
getsec
inc
xchg
addl
test
mov
sub
push
or
sbb
jnp
sub
popf
mov
add
or
mov
mov
das
dec
xchg
lret
les
adc
dec
gs
imul
pop
hlt
adc
jno
iret
mov
adc
mov
test
cmpsb
or
rcrb
cs
dec
sbb
aas
cmc
adc
mov
out
shrb
mov
mov
fucomip
push
lret
xchg
mov
aas
or
pmaxub
add
xor
rorl
lock
fcompl
sub
adcb
inc
xor
mov
std
or
or
outsb
and
fbstp
mov
mov
pop
sbb
pusha
mov
or
adc
mov
int
jno
dec
insb
subl
xor
pushf
es
or
repz
daa
nop
dec
mov
or
das
in
ja
mov
cltd
cmp
pop
xchg
cmp
push
xchg
push
sbb
adc
imul
lods
inc
mov
xchg
push
sub
xchg
popa
les
xchg
ror
idivb
cmp
push
in
push
mov
xlat
sbb
sub
xor
and
rcl
sub
push
cmp
mov
mov
lret
cli
sbb
fs
ljmp
outsl
mov
rclb
nop
loop
loopne
stos
dec
cmp
lcall
push
bound
ficomps
push
mov
stos
into
jb
test
adc
addl
jno
add
jns
add
mov
imul
sub
or
pop
out
lds
ficomps
jb
ret
jbe
aas
sub
and
fucomip
adc
mov
cmpsb
dec
fstps
mov
xor
sub
jecxz
int
repnz
fnstcw
or
mov
cli
fiadds
jecxz
test
xor
les
cmp
pop
add
push
insb
pop
imul
mov
lret
cmp
sub
xor
popf
xchg
mov
dec
test
dec
out
push
pushf
and
scas
sarb
daa
lea
fidivrl
insl
divb
jge
dec
and
lock
mov
ljmp
xchg
lods
mov
loope
test
test
mov
dec
dec
sbb
cmp
ret
inc
mov
push
movsl
in
clc
out
adc
lcall
sub
lahf
mov
shrb
sub
popa
mov
adc
mov
push
test
repnz
jo
sahf
pop
add
outsl
mov
xchg
out
inc
nop
sbb
std
push
cmpsl
shlb
insb
mov
mov
cmp
mov
xchg
in
push
xor
roll
iret
xor
push
mov
jecxz
dec
loopne,pn
gs
icebp
aaa
lret
adc
leave
test
daa
repz
jmp
jns
cmp
popa
jle
dec
inc
inc
idivb
std
push
cmp
test
sbb
call
stc
lar
or
sbb
arpl
jmp
das
test
in
adc
jg
add
mov
pop
mov
cmpsl
add
or
enter
lea
in
subl
cmp
xor
adc
mov
push
sti
pop
push
movsl
xlat
fisubrs
xchg
fnstenv
cmp
ret
popf
jecxz
data16
and
loopne
pop
imul
movsb
lcall
cs
shlb
add
sub
rol
and
jle
sbb
or
add
scas
loope
andb
loope
add
shrb
xchg
es
jge
sbb
imul
sub
adc
ljmp
cmc
dec
add
std
imul
and
aam
mov
pop
mov
gs
stc
jge
push
xchg
hlt
je
popl
lods
ja
data16
icebp
test
mov
out
push
push
xchg
shlb
or
ret
inc
movsb
in
mov
mov
xchg
aam
int
and
cltd
aad
dec
push
test
test
in
stc
lret
pop
les
pop
pop
mov
inc
into
mov
sbb
dec
int3
push
aas
inc
cmp
call
out
push
mov
loopne
sub
xchg
jns
inc
aaa
loop
cmp
adc
mov
xor
icebp
jno
cmp
push
scas
test
sub
lcall
test
mov
imul
js
aaa
add
dec
xchg
dec
pop
addr16
rcr
int
add
sbb
outsb
js
cmc
push
sub
ret
pusha
aam
cld
iret
dec
xor
pop
sbb
inc
add
pop
fldcw
mov
jg
dec
lahf
jecxz
jmp
fldenv
add
jmp
stos
das
inc
xchg
shl
ja
aas
xor
add
mov
push
sahf
mov
mov
cltd
in
je
push
sub
cmp
xchg
in
cmp
repz
mov
or
xor
adcl
inc
jg
loop
xor
mov
jne
subl
insl
and
xorl
insb
psubsb
stc
cmp
mov
in
mov
jne
push
sub
dec
push
mov
dec
cmp
cmp
push
jecxz
and
test
gs
pop
jbe
sub
sub
adc
dec
in
subb
push
mov
mov
mov
mov
mov
mov
mov
jns
sahf
test
ss
xchg
and
dec
fwait
mov
loop
stos
enter
cmpl
nop
bound
flds
jns
test
popf
mov
sti
inc
js
sub
push
aad
xchg
lret
adc
cmp
push
cmp
loopne
and
data16
jecxz
push
mov
mov
cld
ljmp
outsl
jno
dec
rorl
inc
lret
in
cltd
jae
loop
cmp
inc
sub
dec
mov
test
xchg
rcl
cmp
xchg
cld
lahf
add
ljmp
outsl
bound
test
adc
lods
jp
mov
add
mov
fistl
mov
lea
test
jno
into
lods
sbb
mov
fldt
mov
out
mov
jge
dec
shl
aas
jb
mov
hlt
sbb
data16
add
push
mov
cltd
jbe
add
jle
subb
mov
outsl
fdivrl
or
fisubrl
mov
lahf
imul
jg
add
ret
mov
sub
jmp
mov
mov
inc
fwait
inc
in
shll
cmp
rcll
sub
xchg
add
cmpsb
rorl
fucomi
lods
lret
rclb
add
inc
mov
xchg
scas
in
jnp
inc
ljmp
mov
mov
cwtl
adc
adc
data16
jne
push
insb
adc
sti
sub
and
mulb
pusha
jmp
into
lret
sarb
xchg
cmc
mov
pushf
push
xor
insb
xchg
pop
fcmovu
adc
inc
out
pop
or
pop
sbb
je
xor
mov
addr16
inc
movsb
in
addr16
jne
mov
pop
dec
repz
sti
sub
adc
dec
jbe
and
sub
insl
jo
fcmovb
sarb
mov
jo
xchg
inc
pop
lahf
rolb
sub
mov
imulb
xchg
push
fcomip
xor
aaa
push
call
repz
notl
push
or
push
notb
lds
into
inc
jno
div
sub
dec
lods
adcb
sbb
into
mov
mov
fisubs
sbb
xor
sar
and
push
xchg
or
and
call
xchg
add
sbb
bnd
imul
pop
inc
push
pushf
arpl
pop
mov
shlb
cmpsb
jo
inc
pop
fimuls
mov
test
cmpsl
inc
jb
je
inc
data16
dec
mov
mov
add
mov
jecxz
sbb
lret
mov
imul
mov
mov
jmp
cmp
mov
pop
mov
sub
rcr
fidivl
lcall
mov
dec
jmp
aam
mov
or
mov
mov
aaa
fldpi
mov
xlat
mov
fs
aaa
ljmp
inc
mov
xchg
dec
ds
lahf
ss
sub
sbb
popa
jge
inc
loope
insl
add
jno
jmp
pop
movsb
fwait
movsl
out
fstpt
push
mov
or
sbb
mov
xchg
rorl
into
test
stc
cmpsb
test
mov
push
mov
cmp
out
loop
idiv
mov
inc
dec
mov
data16
fstpt
sub
add
mov
xor
inc
pop
out
arpl
in
enter
lock
shll
lahf
push
mov
fs
xchg
stos
or
out
fwait
mov
test
push
inc
jne
adc
dec
shlb
jnp
jnp
sahf
and
ffreep
inc
movsb
popf
stos
cmp
cltd
push
sub
mov
aaa
add
xchg
xchg
lea
imul
push
cmp
scas
les
cltd
out
sbb
and
xchg
aad
aaa
insb
and
push
sbb
stos
fmul
sub
pop
pusha
mov
nop
xor
push
push
pop
xor
loope
out
into
shlb
inc
cmp
cli
dec
ret
dec
xor
rcr
xor
lock
jb
cmc
jb
add
pop
adc
flds
je
sbb
fsub
fsubs
je
jp
mov
push
roll
adc
es
dec
rcll
jae
xchg
push
dec
into
inc
fiaddl
pop
fdivrl
adc
js
jmp
xchg
arpl
stos
adcl
pop
and
das
ficoms
cmpsl
fisttps
fnstenv
jmp
ret
cmp
in
aad
loop
fdivs
leave
aas
xchg
push
pop
mov
inc
into
ficompl
out
cmp
popa
or
hlt
inc
dec
pop
mov
inc
jp
jnp
or
mov
sub
fistpll
mov
mov
dec
dec
xor
dec
cmp
cltd
inc
pop
bound
movsb
xchg
inc
hlt
movsl
movsb
inc
lcall
sub
sub
push
mov
adc
push
xchg
fs
cs
aam
and
mov
aad
cs
xchg
mov
mov
push
push
sbb
jecxz
jnp
ljmp
das
aas
test
fmuls
cmp
lods
cmp
xor
xor
pop
shlb
dec
lock
inc
adc
push
jno
jbe
jbe
pop
jle
jno
jns
enter
dec
mov
sbb
xchg
jge
mov
pop
cmp
jecxz
pusha
dec
cmp
cmpsl
cmp
outsl
mov
nop
dec
sub
xor
cmc
ret
lods
xlat
cmp
scas
test
arpl
sub
aam
add
sbb
pop
lea
and
shl
cwtl
shlb
icebp
das
pop
data16
lcall
mov
in
jl
adc
cli
rcll
cld
inc
jne
pop
mov
je
out
nop
ljmp
insb
push
cmc
addr16
jge
or
out
enter
and
sub
dec
push
push
sub
mov
ljmp
sub
das
cmp
fidivs
leave
fcmovnbe
shlb
or
cmp
test
cmp
pop
inc
and
movsl
jmp
jg
in
call
cltd
dec
sbb
test
ds
mov
pop
add
mov
jbe
stos
xor
jle
sbb
repz
movsl
lret
inc
fadd
xchg
jmp
gs
stc
and
cmove
lds
dec
cmc
andnps
cmp
xor
je
mov
js
cwtl
mov
pop
jmp
gs
or
sbb
mov
out
in
inc
fiadds
es
jmp
push
jmp
xchg
lock
sub
outsl
pop
mov
icebp
xchg
dec
popa
mov
data16
rcl
mov
mov
in
push
ds
push
adc
jnp
cmp
cmpsl
xchg
pop
inc
adc
hlt
lods
pushf
sbb
pop
insl
sbb
rclb
scas
lock
xchg
sti
jns
pop
ja
add
and
loope
addr16
xchg
ret
mov
fld
clc
adcb
mov
es
xor
cmc
sub
xor
outsb
dec
or
sbb
sbb
push
cmp
dec
dec
ficompl
push
xor
mov
add
out
addr16
and
sbb
pop
adc
div
fisubrl
push
inc
xor
inc
ds
outsb
dec
and
out
fildll
mov
mov
mov
and
cmpsb
cmp
out
jecxz
pop
xchg
pop
pop
sbb
cmpsl
xchg
les
ss
pop
out
mov
fmull
pop
sub
jbe
dec
push
xchg
sbbl
call
adc
enter
pop
add
outsl
or
pop
xchg
lods
pop
jo
push
lret
inc
or
cmp
sbb
or
xor
ret
sbb
xor
mov
ds
and
movsb
pop
xor
out
xchg
xchg
fisubl
or
push
insb
fidivl
enter
fldenv
and
test
xchg
or
jge
xor
sub
in
dec
cmp
sub
mov
xor
rcll
cmpsb
pop
pop
mov
sub
outsl
js
clc
add
in
sbb
and
cmp
jmp
fwait
leave
cmp
in
mov
mov
mov
dec
sbb
sbb
adc
out
imull
lret
shll
cmp
push
and
dec
in
dec
ret
insl
fadds
jb
mov
insb
rolb
loope
mov
sbb
in
adc
or
fcmovnbe
or
mov
outsl
orl
imul
or
icebp
sub
lahf
or
imul
xor
fsts
enter
add
xchg
aaa
test
push
maxps
cmp
add
int
stos
rolb
jp
in
pushf
cld
daa
xorb
xor
mov
fldcw
xor
call
ja
pusha
outsl
adc
loop
je
mov
mov
add
notl
in
jno
pushf
popf
push
sub
inc
in
shll
mov
fnsave
xchg
ss
imul
jae
out
loopne
lods
and
add
mov
dec
pop
pop
adc
pushf
cli
mov
adc
into
xchg
add
inc
inc
and
inc
or
and
out
imul
adc
fildl
mov
dec
jb
ljmp
stos
call
mov
or
xchg
aas
aas
addl
lods
ja
dec
lcall
pop
fsubrs
std
int3
mov
xchg
inc
flds
sbb
dec
pop
test
jnp
mov
mov
scas
jmp
leave
and
cmp
stos
jns
xor
pop
xchg
mov
mov
dec
jg
mov
movsb
fwait
mov
gs
jge
rcll
scas
push
xchg
fcompl
addr16
pop
rcl
mov
movsb
or
cmp
js
mov
mov
jl
sbb
cmp
nop
negl
inc
jae
aaa
ljmp
lds
xchg
insl
mov
filds
fnsave
dec
push
ja
dec
mov
out
outsl
push
and
lea
sbb
inc
das
push
mov
int3
in
push
repz
fdivrl
mov
rcrl
and
fwait
stos
scas
mov
jbe
movsb
aas
fdivs
in
into
clc
and
mov
jno
adc
and
ret
js
xchg
rcrb
mov
rcrb
rorb
pop
adc
ficompl
lds
outsb
cmp
push
out
mov
sub
jle
jnp
pop
adc
leave
in
inc
movsl
pusha
repz
cmp
ja
int
sarl
fimull
imul
shll
rcr
mov
repz
int3
push
xchg
pop
and
popf
or
les
pop
xlat
cmpsl
dec
lahf
fmul
gs
and
andl
cmc
and
inc
fcoms
iret
out
sahf
ret
mov
adc
xor
je
int3
stos
mov
fs
je
test
out
inc
sbbl
call
cmpsl
std
cmpsb
loope
push
mov
pop
shl
cmp
cld
or
push
outsl
push
fisubrs
or
pop
xchg
sbbb
andb
lahf
push
and
adc
imul
pop
insb
inc
rcl
imul
adc
jecxz
loop
je
mov
mov
jg
popf
pop
mov
mov
mov
popa
inc
xchg
daa
sub
xchg
pushl
arpl
push
aam
out
call
out
push
ret
or
jle
rclb
imul
fsubrs
mov
iret
testb
fbld
cwtl
push
lds
adc
clc
push
dec
stos
stc
push
sbbl
popa
pop
insb
xorl
fimuls
sub
insb
or
mov
pop
sub
movsb
lods
arpl
out
imul
pop
orb
movsl
pop
jno
cmp
incl
bound
test
push
sub
add
popf
mov
inc
js
add
cmp
int
sbb
mov
adc
pop
add
scas
mov
jns
movsb
xor
push
pop
mov
or
cli
in
shl
lret
jp
jmp
push
adc
fcomps
test
outsl
fdivs
mov
xchg
xor
in
xchg
sub
jns
lret
jnp
xchg
out
arpl
repz
jmp
out
stc
push
add
xchg
sahf
xor
aas
inc
mov
inc
mov
mov
out
fsubrp
or
ret
aad
pushf
pop
sub
dec
loop
scas
loop
mov
add
pop
jns
cmp
sbb
cmp
mov
ret
addr16
mov
repz
shrb
stos
or
in
sahf
pop
sbb
nopl
jle
mov
int3
inc
dec
dec
icebp
sbb
push
in
dec
repnz
xchg
out
or
dec
xchg
mov
into
das
xchg
xor
pusha
push
icebp
cmc
push
adc
and
xorb
add
ret
cmc
roll
jns
pusha
lods
fucomp
jge
data16
push
subl
pop
mov
int3
cwtl
mov
dec
mov
push
cld
adc
add
addb
dec
xor
sahf
xchg
push
mov
test
fisubrs
loop
push
outsb
fisubrl
cmp
and
mov
fucom
jno
sub
aaa
fs
or
add
arpl
cmpsb
mov
outsl
js
pop
push
sbb
lret
cmp
adc
jl
sub
inc
or
jbe
xchg
and
pop
mov
pusha
js
and
out
xor
test
pop
or
ja
inc
cmp
jmp
xchg
push
jae
imulb
xchg
lds
mov
loopne
add
pop
adc
dec
sti
xor
jg
push
adc
dec
push
push
xor
in
daa
and
addr16
outsb
jle
mov
jg
dec
mov
dec
push
sbb
orl
int
orl
push
insl
outsl
es
pop
push
aaa
cmpb
ficoml
adc
jbe
mov
ss
cli
rolb
dec
mov
xchg
mov
stos
mov
cmc
stos
sbb
xor
jmp
push
fisubrs
aad
cmpsl
xor
xorb
pop
pushf
mov
in
sbb
push
cld
adc
inc
les
mov
pop
test
add
push
dec
test
ljmp
lahf
fcompl
movsl
movsb
subb
int3
bound
dec
inc
xchg
and
mov
fsubs
es
push
mov
add
inc
dec
mov
inc
jmp
or
push
mov
add
mov
andb
xor
out
and
gs
jne
or
leave
scas
out
push
sbbb
lods
mov
add
mov
lods
push
jb
sbb
push
dec
mov
dec
ficoms
stos
aam
dec
ljmp
push
mov
sbb
out
sbb
rolb
inc
or
dec
lcall
ds
xor
fidivl
movsl
mov
loope
repz
jp
dec
js
sub
mov
leave
xor
xchg
pop
popf
cmpl
test
add
lods
sub
clc
pusha
test
mov
sbb
clc
test
or
jno
sub
leave
push
push
scas
pop
push
push
fdiv
xchg
xchg
shll
push
inc
out
sbb
mov
jno
pop
dec
fisttps
mov
addr16
mov
insl
test
mov
add
ror
xchg
xchg
sub
idivl
stc
cmc
mov
xor
sub
repz
outsb
jnp
xchg
sbb
sbbb
mov
xchg
fldenv
push
jle
jl
add
ljmp
bnd
arpl
std
xchg
movsl
or
cli
into
cmpsb
dec
addr16
xchg
adc
dec
shl
sbb
pop
dec
lods
lds
add
mov
mov
je
ja
lock
aas
addr16
pop
sahf
push
mov
int3
jb
sub
insb
mov
mov
cmpsl
xchg
cmp
rcr
inc
or
adc
ficoml
popf
ret
out
nop
push
xor
lahf
mov
cmp
icebp
cltd
movsl
lea
dec
mov
mov
dec
pushl
pop
mov
aam
xorb
int3
lock
cmpsb
or
out
mov
mov
mov
insl
ja
add
lea
scas
mov
test
sti
jns
jge
or
out
sub
lahf
xor
fdivs
or
mov
fnstcw
and
aaa
sbb
jmp
pop
lret
sar
mov
stc
rclb
out
cmp
mov
ss
outsl
mov
pushf
pushf
das
mov
mov
in
mov
xor
xchg
inc
mov
jnp
and
sti
add
sti
std
cmc
movsb
mov
sbb
jmp
fnstsw
pop
pop
fldl
cmp
lcall
sub
ret
out
outsl
inc
pop
cltd
jl
or
dec
shl
inc
sbb
scas
pop
insl
in
sbb
sbb
scas
faddl
sbb
std
push
adc
dec
movsb
mov
aad
sub
testb
sub
in
push
scas
fwait
jae
mov
jbe
mov
icebp
mov
mov
cmc
testb
arpl
add
arpl
outsb
mov
jecxz
mov
stos
jb
std
lahf
add
or
sar
or
mov
ret
dec
int3
ljmp
pop
and
adc
sahf
shr
dec
adc
xchg
push
xor
pop
and
add
jns
sahf
push
or
dec
stc
xor
mov
xchg
xor
lock
inc
aas
rorb
outsb
dec
lahf
mov
mov
imul
cmp
pusha
sub
mov
fwait
jle
mov
sti
out
add
sub
int
push
and
cmp
nop
cmp
out
fisubrs
mov
movsb
fcoml
sarl
and
sub
push
fidivl
imul
adc
out
mov
sub
sub
ss
inc
repz
mov
int
jge
xchg
sbb
out
and
push
sbb
mov
mov
gs
mov
push
push
clc
addl
mov
fisubl
out
and
sbb
mov
lcall
inc
cmpsl
push
pop
mov
or
push
cmc
aam
shlb
clc
test
fucomip
lods
enter
aam
inc
jge,pn
cltd
jge
jbe
mov
loope
push
dec
in
xchg
pop
shrl
imul
or
leave
in
pop
dec
sbb
mov
pusha
adc
lret
sbb
mov
mov
leave
and
pusha
push
jg
inc
lock
pop
aaa
jae
inc
test
int
mov
clc
sbb
fbstp
les
bound
jb
jmp
jnp
fbld
jns
ja
xchg
js
test
adc
enter
mov
test
fsubl
inc
push
jge
iret
sbb
rcrb
sub
scas
jb
sahf
mov
mov
mov
dec
jnp
push
dec
pop
sarb
xor
dec
das
fldenv
insb
test
in
mov
mov
insl
xor
pop
mov
and
lcall
pusha
jae
ret
and
adcb
jno
dec
out
mov
and
mov
cltd
loop
leave
mov
mov
mov
or
xor
out
mov
pop
aam
testb
adc
out
jecxz
inc
pop
loopne
out
insl
div
pusha
xor
mov
push
js
xor
jb
sbb
outsb
hlt
push
jo
test
push
movb
mov
jnp
enter
pop
ret
clc
and
shlb
lods
psrad
hlt
lea
lea
pop
pop
xor
mov
lcall
les
pop
xor
cmp
mov
pop
cs
fcoml
sbb
xor
sbb
test
fsubs
xchg
fucomip
mov
ret
jne
or
and
inc
inc
fmul
and
cmp
pop
or
jp
xchg
std
test
stc
lods
mov
cmp
in
repnz
pop
xchg
inc
jmp
pop
jnp
inc
mov
pop
cmp
cmp
mov
cld
cmpsl
xchg
inc
add
aam
stc
adc
cmpsl
test
loope
xor
loop
fs
sbb
or
mov
push
mov
loopne
loopne
mov
add
pop
ret
or
mov
pop
adc
lret
scas
lods
or
sbbb
repnz
add
mov
notl
xchg
out
mov
inc
sub
addr16
mov
cmp
ljmp
xchg
mov
not
mov
cltd
std
xchg
jo
ficoml
subb
dec
icebp
addb
dec
pop
repz
popf
daa
int3
out
cmpsl
add
mov
mov
jl
fwait
or
lock
lods
cld
js
ja
xchg
pop
and
mov
xchg
sub
je
test
xchg
jecxz
in
cmpsb
sarb
imul
cmp
pop
leave
sub
inc
fidivrl
adc
xor
mov
outsl
andb
inc
adc
adc
cmp
pop
sub
mov
pusha
cmp
cmp
cmp
xchg
ret
cmpsl
std
pop
sbb
iret
mov
mov
mov
lret
push
mov
fsubrl
jne
jae
dec
pop
pop
adc
xchg
sub
jne
xor
pop
scas
push
fwait
pop
test
shlb
rorl
sub
add
or
dec
insl
outsb
mov
shll
bswap
adc
mov
jo
mov
jge
lret
push
addl
stos
scas
mov
mov
ds
mov
jle
push
jbe
jmp
sbb
sub
loopne
xor
xchg
into
mov
add
ret
cwtl
and
ret
xchg
in
push
pop
int3
mov
adcl
ljmp
lods
jnp
jne
mov
in
das
xor
shrl
fisubs
cli
ret
cmp
lock
scas
xor
outsb
loopne
out
add
arpl
ljmp
lret
out
fdivl
pop
test
jle
addr16
jmp
adc
dec
lock
pop
dec
adc
mov
and
push
xor
test
dec
xor
imul
dec
dec
push
fwait
inc
ret
lret
loope
dec
cmpsb
and
add
dec
test
dec
sbb
and
jno
cltd
dec
xchg
xor
mov
js
inc
jge
xchg
push
into
icebp
push
cs
and
gs
xchg
out
jmp
out
push
cmp
cmp
or
jo
adc
ljmp
arpl
sbb
fnstcw
fwait
ja
mov
leave
sbb
mov
clts
in
adc
nopl
iret
xchg
enter
adc
xor
iret
cmc
cwtl
sub
ret
loop
adc
xchg
cwtl
inc
inc
jne
mov
add
insl
cmp
adc
adc
push
xor
stc
nop
pop
or
fisttps
fcomps
aad
xchg
fidivs
push
sahf
push
inc
push
movb
xchg
dec
dec
xchg
call
int3
xor
pop
or
jne
sub
lock
pop
mov
push
add
pop
jl
rorl
enter
into
mov
movsl
lds
dec
cmpsb
mov
mov
das
lock
xchg
repnz
add
ljmp
mov
xorb
lahf
cmc
lahf
leave
test
dec
jae
lods
insl
shll
pop
jle
xchg
inc
aas
shlb
inc
mov
adc
push
cmpsl
fiaddl
jecxz
push
jl
cmpsl
lods
pop
inc
jmp
mov
jnp
cs
mov
xchg
lret
mov
sbb
daa
test
movsl
fimuls
adc
fld
pop
cmp
aaa
push
nop
and
adc
in
fstps
xor
adc
adc
leave
dec
js
aaa
repz
jmp
out
push
push
gs
nop
add
loope
hlt
lret
stos
push
jp
sub
fistpll
pop
outsl
xlat
mov
imul
and
mov
nop
or
iret
sub
insl
pop
dec
js
mov
inc
scas
cmpsb
pop
adc
mov
inc
or
mov
aad
daa
sub
in
mov
movsl
ss
pushf
mov
repnz
and
outsb
sbb
daa
je
cmp
call
cs
xchg
insl
sahf
lret
inc
pusha
sub
rcrl
inc
sub
or
stos
pop
jp
add
lret
sub
repnz
pop
mov
mov
mov
inc
and
cmp
inc
sahf
inc
inc
xor
in
mov
inc
ljmp
xchg
test
loopne
add
and
xor
imul
lea
lret
cmpsb
loop
jae
xor
adc
inc
int3
push
testl
repz
iret
lcall
clc
lea
fcomi
inc
cld
mov
add
jns
iret
push
outsb
jae
fwait
cmp
jmp
xor
jmp
test
push
rolb
dec
lods
mov
jne
dec
xor
push
in
pop
jns
lcall
mov
and
in
pop
notl
notl
mov
cmpsb
dec
xchg
jae
ja
or
pushf
ja
jns
movsb
aad
jmp
sub
fistpl
jb
cs
test
mov
rcrb
aas
mov
cmpsb
dec
or
dec
pop
mov
or
ficoml
add
and
cld
outsb
repz
aaa
dec
hlt
in
dec
subl
pop
adc
in
data16
test
out
setnp
add
mov
mov
mov
dec
sbbl
mov
stos
jmp
out
repnz
xor
or
xor
cmp
push
adc
es
jbe
and
and
movsl
and
insl
mov
mov
dec
sub
call
cmp
nop
out
add
mov
or
mov
adc
dec
sub
lret
cmc
push
fs
adcl
pop
jge
mov
fsubl
sub
xor
and
outsl
out
mov
and
or
xor
fisttps
outsb
xchg
add
lret
in
and
in
outsb
sbb
add
cli
cmpsl
imul
push
loop
loope
pop
mov
les
and
lods
sub
leave
aaa
in
rcll
aam
mov
std
sub
out
push
fsubrl
xchg
push
jmp
enter
jb
imul
push
movsl
imul
jno
out
jmp
jp
mov
xlat
mov
scas
push
js
mov
xor
xor
addr16
mov
add
sbb
jne
out
int3
shlb
hlt
mov
cmp
pusha
fs
rolb
aaa
mov
adc
sbb
icebp
ds
dec
and
shll
fidivrs
jp
int
mov
sbb
inc
dec
pop
inc
mov
ret
shlb
xchg
cmp
scas
adc
imul
fstpt
push
fisttps
or
sub
scas
and
dec
lods
aas
inc
mov
push
inc
cmpsb
aas
and
fwait
jge
dec
movsb
jae
add
int
push
out
loop
mov
and
push
xor
push
mov
mov
sbbb
scas
mov
mov
repnz
and
or
loop
fbld
int
ret
outsl
push
shll
and
dec
ja
ljmp
call
push
cltd
lds
pop
mov
test
push
cwtl
sub
sbb
ficomps
ljmp
stc
cmc
xor
popa
mov
sub
pop
mov
add
and
xchg
scas
stc
arpl
nop
imul
cmp
mov
or
lods
std
outsl
je
push
jns
hlt
shll
outsl
cli
sbb
xor
inc
cltd
icebp
pop
sbb
fcmovu
fwait
cmp
enter
fs
out
call
out
leave
imul
or
insb
int3
aad
mov
scas
add
mov
mov
mov
in
cmp
cmpb
sbb
ret
xchg
cmp
cmp
mov
js
xlat
imul
ja
test
repz
pop
out
scas
push
sbb
notb
jns
shlb
lods
pop
movsl
shll
cmp
dec
jb
lret
cmp
js
enter
in
in
inc
mov
inc
sbb
into
pop
cmpsb
xchg
nop
sbb
cmp
adc
mov
loopne
rorb
dec
lock
cld
cmp
ret
xchg
scas
cld
mov
jmp
xchg
movsb
dec
add
test
fcoms
out
push
cmc
lret
mov
cltd
fidivl
adc
mov
imul
testl
repnz
ljmp
das
jmp
adc
daa
xor
imul
or
sub
les
xor
sbb
dec
jae
mov
or
ja
es
in
idiv
push
rolb
sub
jno
sub
cs
push
xchg
push
data16
adc
dec
sbb
dec
or
out
aaa
adc
xchg
cmpb
ljmp
pop
adc
mov
mov
xor
mov
sbb
scas
movsb
cmp
sub
dec
fs
xor
mov
jnp
adc
std
or
cld
inc
scas
es
cwtl
subb
cmpsl
pop
or
mov
les
add
or
ss
loop
add
cmp
enter
icebp
xor
imul
enter
jl
jl
mov
repz
jae
cmc
enter
jmp
ja
pop
jecxz
cmpl
xor
pop
inc
testb
jle
xor
sbb
addb
mov
popa
jmp
xor
mov
dec
push
clc
es
mov
mov
mov
pop
push
adc
popa
int
nop
out
sbb
inc
mov
shl
cld
adc
lcall
lahf
fdivr
xor
cmc
pop
sub
lds
xchg
adc
xor
stos
das
cmp
mov
mov
push
adc
adc
xlat
sti
and
sarb
rclb
cltd
cmp
cmp
xchg
lds
fistpl
outsl
nop
test
jl
divps
std
stos
arpl
into
addr16
or
and
mov
or
cmp
je
inc
push
mov
push
or
sbb
das
pop
mov
mov
out
sub
cmc
dec
fwait
inc
sbb
or
inc
jmp
and
xor
mov
loop
imul
inc
mov
lret
cmp
hlt
jp
xchg
sub
or
adc
decl
cmpsl
imul
jge
mov
in
cmp
mov
sbb
push
mov
xchg
xchg
push
lods
pop
mull
jns
pop
add
hlt
or
in
js
int3
sbb
and
add
xchg
sbb
mov
sub
xor
test
push
scas
xorb
jbe
adcl
mov
dec
sti
dec
sbb
pop
adc
push
mov
lock
mov
out
inc
aad
adc
push
cli
fidivrl
nop
jnp
jp
hlt
inc
pop
jne
pop
scas
push
jmp
std
outsb
ret
scas
mov
jb
iret
loope
out
xchg
cs
addr16
sub
push
xchg
xor
ds
dec
in
mov
sub
loopne
mov
loope
mov
movsb
inc
sarb
jne
pop
movsb
aas
jo
xchg
mov
ja
fwait
stc
sbb
sub
arpl
lds
cmpb
frstor
push
je
or
ror
fwait
cmp
cwtd
push
inc
adcl
mov
fdiv
arpl
xchg
mov
out
fs
cmp
pop
cwtl
loopne
lahf
and
xchg
shlb
xchg
or
mov
pusha
inc
fucom
es
adc
fwait
add
lahf
bound
mov
jae
sbb
pop
push
out
fildll
stos
mov
sbb
sbb
sbbl
stc
cwtl
clc
adc
mov
call
out
mov
xlat
pop
fildl
arpl
sahf
mov
pop
mov
and
and
sub
pop
push
xchg
add
mov
add
xlat
xor
in
dec
jecxz
xchg
xchg
int
enter
nop
sub
xor
stos
adc
js
mov
add
jg
sbb
jnp
daa
movsl
fildll
outsb
sub
cmp
push
xchg
andl
jbe
or
stos
pop
xchg
jne
decl
lea
pand
fldcw
cmpb
imul
pop
mov
cmc
out
and
xor
pop
shl
dec
in
cmp
movsl
sahf
sbb
xchg
not
jge
pop
cmp
dec
pop
jmp
ds
pop
sub
pop
jle
push
insl
fwait
ss
mov
bound
cwtl
lds
lods
mov
inc
mov
fsubp
and
xor
push
ret
repnz
xchg
pop
jb
lret
cmp
add
in
testb
scas
roll
mov
fwait
dec
pop
cltd
mov
insl
je
clc
sbb
inc
pop
jg
test
adc
push
add
sti
adc
add
pop
cs
inc
cmp
mov
add
mov
mov
and
and
jl
push
cmpl
cwtl
jl
cmp
mov
repnz
pop
or
or
mov
data16
hlt
jg
hlt
push
insb
jne
xchg
mov
iret
inc
xchg
lret
scas
inc
and
fisttpl
mov
push
out
cwtl
or
mov
fcmovne
xorl
mov
fidivrl
pushf
cmp
and
ss
push
mov
dec
adc
jl
lds
mov
and
into
cli
dec
in
jl
lcall
pop
sub
mov
mov
add
roll
and
ret
push
sbb
sbb
cmp
jnp
add
and
cmp
push
and
or
adc
rorb
push
xchg
mov
sbb
sbb
and
adc
rcrb
inc
jp
sbb
aam
mov
or
dec
enter
ja
jmp
ret
dec
inc
scas
test
push
adc
lods
xor
adc
pop
mov
xchg
and
in
push
or
aaa
sub
xor
movsl
xor
jg
sbb
and
cltd
lcall
and
pop
popa
pop
mov
push
mulb
sbb
adcb
xlat
sbb
cmpsb
mov
push
cmp
imul
das
xchg
adc
cmp
imul
jl
out
xlat
jbe
adc
adc
add
push
mov
fdivs
test
pop
cmp
push
xor
ja
push
xor
adc
sti
adc
or
nop
rcll
cmp
stc
fbld
shlb
mov
mov
data16
xor
enter
sahf
gs
jne
rclb
mov
push
lds
inc
mov
add
lret
aaa
gs
or
push
add
mov
iret
bnd
pop
imul
jo
das
cld
mov
xchg
lea
and
clc
sub
pop
fs
jmp
mov
and
jb
dec
lods
ret
aas
cmp
imul
lret
pop
pushf
pop
pop
enter
sbb
jl
pop
test
notb
jle
test
int3
jne
pop
js
adc
popf
enter
jno
jae
and
les
cli
stos
mov
fiaddl
dec
in
adc
xchg
lock
lcall
add
or
es
inc
cmp
push
fidivl
cmp
sbb
or
add
out
mov
cmp
ja
xchg
outsl
cmp
cld
xlat
xor
mov
lcall
jp
loop
cmp
rolb
xchg
adc
xchg
xor
ljmp
pop
push
aaa
mov
xor
loope
repz
aas
dec
frstor
xchg
repnz
xchg
mov
fwait
inc
mov
fisttps
push
inc
add
inc
inc
xchg
jo
fidivrs
mov
cmpsb
into
pop
shll
call
cli
or
jb
aad
or
mov
lret
xor
aad
nop
cmp
fsubs
jecxz
push
jecxz
xchg
mov
xchg
scas
sub
psubd
lea
scas
sub
ficoml
push
and
ds
test
or
subl
fwait
leave
scas
jnp
int
xchg
mov
pop
xchg
neg
lea
inc
adc
xor
sbbb
sbb
in
fidivs
inc
jmp
fs
lods
xor
fs
mov
jmp
shlb
mov
iret
cltd
jo
adc
idivb
je
lret
dec
sub
int3
sbb
out
pop
cltd
fnstenv
negb
rorb
adc
fwait
std
sbb
mov
jne
insl
and
jmp
cltd
cs
aam
pop
pop
daa
dec
repnz
and
test
cwtl
add
xchg
fisubrs
cwtl
lods
sti
cli
cs
rcll
rolb
dec
repz
xchg
and
sub
cltd
leave
rorb
dec
xor
sub
jnp
jge
fisubrs
insb
add
mov
sub
fisubs
mov
and
ds
push
mov
test
aad
outsl
loopne
inc
push
dec
push
sahf
push
dec
cmp
jmp
mov
sbb
movsl
cwtl
scas
push
stc
mov
orl
mov
push
jmp
call
sbb
repz
jne
mov
ljmp
movsb
and
andb
mov
imul
js
idivl
cwtl
mov
mov
dec
adc
test
and
fld
cmc
pop
pop
mov
fucom
adc
inc
add
dec
pop
mov
xchg
das
mov
mov
fidivl
shrb
inc
stos
aam
lret
pop
fildl
xchg
mov
jecxz
aad
fs
shrb
sbb
fldcw
in
test
loope
in
sub
push
xchg
imul
push
jmp
setb
xor
mov
pop
jae
fldenv
xchg
daa
and
lcall
bound
jp
push
jne
lods
rorb
adc
das
push
insb
xor
pop
mov
push
loope
pop
push
scas
mov
ja
in
xchg
aad
sub
cmp
gs
loope
out
xlat
or
scas
mov
adc
loop
sbb
mov
sti
sbb
jo
mov
idivb
loopne
pushf
pop
push
daa
mov
loopne
rorl
push
mov
lret
pushf
or
call
iret
cmp
cmpsl
aam
adc
adc
lods
cmc
add
xor
pop
stos
add
pop
pushf
test
aaa
stos
das
repnz
pop
cld
sub
push
pop
call
push
dec
dec
aam
cmpsb
push
push
cmpsl
sahf
cmpsb
sar
shl
addr16
orl
mov
je
adc
shll
fisttpl
pop
out
cmpb
repz
addr16
dec
rcrb
add
xchg
xchg
jne
cmpsb
mov
xchg
pop
push
cmp
loop
fs
xchg
dec
push
mov
dec
in
mov
shrb
mov
mov
sahf
push
pusha
dec
jae
mov
mov
xor
movsl
imul
cmc
adc
adc
lcall
int3
dec
xor
iret
add
cmp
test
ds
push
mov
ret
pop
sbb
xor
pop
xchg
int3
pop
stc
xchg
and
xchg
data16
testl
jge
and
imul
pop
popf
push
or
sbb
mov
gs
in
subb
jns
jmp
push
mov
movsl
es
mov
push
lret
clc
sbb
fwait
inc
mulb
inc
jns
lcall
pop
stc
xlat
fst
repnz
xor
pop
jl
mov
jle
cmc
pop
in
jae
mov
xchg
xor
shl
aad
mov
sarb
fcmovnu
push
inc
cmp
jl
lahf
fs
xlat
into
enter
pop
or
lret
push
xor
out
les
jg
push
jo
jnp
aad
xchg
fnsave
pop
mov
icebp
push
jl
xor
jns
pop
aad
and
nop
jns
mov
mov
xor
negl
jg
stos
inc
add
cltd
ljmp
out
loope
adc
mov
lods
cwtl
cmpsl
push
or
outsb
mov
call
data16
test
clc
xchg
cmp
dec
movsl
jle
add
ret
xchg
pop
adc
insl
mov
xchg
push
push
sar
jmp
loope
jg
lds
inc
int
dec
fwait
outsl
idiv
xchg
mov
xor
add
sahf
pushf
inc
fstps
or
in
xchg
cli
jnp
jecxz
iret
inc
dec
fidivrs
pushf
sbb
out
fnstsw
add
test
adc
int3
cmp
iret
sub
add
ret
and
aas
cmpsb
adc
xor
jp
rcrl
ljmp
inc
leave
and
leave
test
pushf
movsl
dec
stos
lret
popf
and
loope
shrl
and
adc
es
adc
inc
std
and
sbb
dec
sbb
aam
inc
fs
mov
sbb
mov
dec
push
add
inc
test
cmpsb
sub
sbb
js
pop
jae
mov
mov
push
lcall
cld
icebp
outsl
dec
pop
dec
push
or
add
sbb
jecxz
cmpsl
push
enter
inc
xor
xor
lds
mov
inc
call
cmpsb
scas
pop
pop
icebp
mov
inc
ret
dec
cmp
add
mov
in
xor
push
dec
or
fidivl
push
in
or
mov
jnp
arpl
insl
sub
lcall
es
mov
leave
loop
bnd
insb
clc
adc
jle
outsb
pop
push
test
cld
addr16
in
adc
dec
add
mov
lahf
or
mov
test
cmp
mov
addr16
inc
xor
cmp
iret
shlb
inc
out
push
sub
xor
add
jnp
xchg
and
push
dec
pop
loop
pop
sub
js
addr16
xchg
jnp
and
xlat
enter
add
insb
cmp
mov
movsb
adc
addr16
add
test
jnp
push
or
addr16
int
add
mov
mov
mov
and
insl
or
xor
mov
repnz
mov
lods
xor
fbld
outsl
decb
mov
add
cmp
dec
ret
mov
fisubs
or
inc
jmp
mov
cmp
sbb
or
lods
sbb
leave
mov
fimull
lcall
je
test
aad
jp
adc
add
xchg
jmp
loop
out
dec
sub
mov
jmp
sub
jae
inc
jle
pop
xchg
mov
mov
mov
fisubl
popa
push
xor
insl
shlb
sub
and
imul
push
shl
mov
pop
fs
jne
in
push
sbb
jp
add
test
fidivrs
push
stc
mov
mov
jnp
dec
xchg
repnz
fs
lret
cld
jl
in
pop
int
and
sub
cmp
testb
or
fisttpl
cmc
mov
jnp
xchg
fistl
lcall
in
test
jno
stos
or
mov
popa
lret
mov
test
jnp
push
mov
sbb
mov
lahf
add
mov
je
xchg
dec
add
push
daa
jl
arpl
notl
sub
mov
cmp
cld
xchg
adc
shl
das
push
out
sbb
xor
inc
cmpsb
push
jmp
cmp
stc
loopne
mov
inc
xchg
push
jge
dec
cmp
xchg
test
sbb
push
insl
push
sbbl
adc
shl
dec
jo
scas
enter
les
mov
fistl
faddl
push
mov
push
push
out
jae
out
fcoml
cmpsl
cmp
lods
jnp
enter
add
mov
outsb
push
push
out
dec
mov
ret
nop
data16
ret
icebp
gs
jl
mov
mov
push
jbe
js
adc
pop
mov
stc
insb
stc
xchg
cmp
dec
xchg
add
ss
subb
test
sub
add
rcl
sbb
hlt
pop
jge
lods
mov
cmp
mov
daa
jmp
jne
xor
or
and
andl
push
repz
ret
out
fistpl
cld
mov
popa
push
mov
xchg
into
xchg
enter
ja
rorl
sbb
shll
in
mov
mov
or
ret
pusha
push
pop
mov
push
or
cmp
inc
xor
xchg
sbb
or
mov
mov
xchg
enter
das
pop
sbb
sbb
inc
outsl
sarl
xor
push
or
pop
aaa
sbb
add
add
jle
es
insb
mov
popf
sahf
or
mov
bound
sbb
add
movsl
loop
lds
sbb
jno
pop
push
sub
and
add
out
hlt
adc
lock
sbb
hlt
and
cmp
outsb
sub
out
cmpsl
pop
mov
mov
xor
mov
cmpsl
mov
push
fstpt
jnp
adc
aam
outsl
add
mov
xchg
pop
pop
push
inc
sub
fstp
xchg
jp
jg
into
mov
xchg
ja
jo
pop
fstps
aaa
pop
lcall
addb
mov
and
aad
rorb
ljmp
mov
push
fists
mov
push
or
cmpsl
jg
inc
xchg
cmp
std
dec
clc
imul
loope
jb
and
mov
ljmp
aam
xchg
inc
sub
cwtl
fisubrs
dec
cld
aam
addr16
adc
test
rcll
loopne
rorb
jge
pop
cmp
ds
subl
sbb
lahf
push
loop
adc
popf
adc
enter
xor
or
xor
sti
push
dec
sahf
jae
in
pop
aad
and
in
or
clc
cmpsb
cltd
adc
sub
cld
fmull
fdivrs
int3
lahf
push
adc
cmp
cmpsb
je
inc
insl
fs
xor
enter
sub
arpl
mov
jno
or
mov
movsb
jae
adc
or
insb
cmp
popa
lret
lock
sahf
xchg
cli
jbe
ror
cmp
data16
mov
dec
push
cmp
mov
push
nop
cli
lret
sarl
and
addr16
inc
mov
or
mov
add
in
ljmp
mov
jl
rol
mov
dec
mov
mov
push
push
or
pop
insb
xor
adc
ficompl
in
or
pop
or
mov
mov
jb
or
mov
ljmp
xor
xchg
mov
sbb
roll
mov
stos
mov
daa
imull
pop
test
rclb
jno
mov
mov
add
mov
add
insl
xchg
in
dec
and
add
inc
movsb
cmp
nop
sar
ljmp
push
stos
push
test
pop
xor
sub
cmp
sub
inc
add
mov
ret
loope
inc
mov
dec
xlat
fldt
insl
hlt
add
and
insb
cmpsl
arpl
aaa
repnz
xor
adc
mov
xchg
sahf
lret
fistpll
cmp
jmp
sub
push
outsl
fldcw
outsb
je
jbe
loope
cld
pop
enter
pop
xchg
add
cmpsl
cmc
jbe
push
push
push
sub
jge
lea
and
ficomps
xorb
pop
mov
inc
fimuls
add
repnz
jns
sub
mov
mov
dec
cmpsb
jecxz
out
xlat
cmpsb
jne
jg
mov
imul
fs
mov
mov
daa
and
jno
movl
mov
inc
xor
rorb
and
out
cwtl
hlt
jnp
push
mov
jp
or
mov
sbb
int3
xor
movsl
or
outsl
daa
xor
sbbb
lds
xchg
lods
adc
pop
push
repz
push
inc
es
das
push
sub
jno
pop
rcl
or
int3
sub
dec
test
rolb
rorb
scas
scas
pop
mov
push
xchg
and
cmp
add
dec
and
iret
push
push
shlb
sti
mov
cmpsb
test
and
mov
rcll
pusha
dec
sbb
mov
rclb
jno
fsubp
pusha
xorl
pop
mov
addb
loop
int3
aas
loope
mov
pusha
xor
aaa
jge
fmul
lods
xor
rcll
mov
shrl
repnz
cs
inc
rcr
push
imul
inc
xchg
xchg
dec
shlb
std
jecxz
out
jl
ljmp
or
mov
aas
rol
addr16
in
stos
push
sbb
xor
popa
and
aas
stc
movsl
xor
push
mov
or
ja
mov
mov
xchg
pop
jle
jl
leave
aad
data16
and
mov
sub
mov
xchg
jle
xchg
sbb
fldenv
xor
arpl
cmp
inc
xchg
iret
movsb
std
jbe
pop
push
movsl
nop
push
stos
jb,pn
mov
insl
in
ljmp
js
cmpsb
imul
sbbl
mov
aam
scas
inc
xchg
push
pushf
xchg
cwtl
jmp
and
out
or
je
sarl
loop
xor
fidivrl
loop
cmpsl
dec
bswap
push
or
push
xor
add
inc
stos
inc
add
mov
pop
cwtl
mov
mov
hlt
hlt
cmp
popa
int
mov
push
pop
pop
sahf
stos
fwait
jp
lock
es
call
jo
arpl
jnp
cmpsb
rcll
mov
test
fldt
sub
and
js
into
addr16
movsb
pop
mov
data16
test
mov
cmp
adc
jo
add
jmp
xchg
fwait
mov
imul
xor
pop
jae
push
fldenv
in
insb
lahf
xor
xchg
push
lret
inc
jmp
out
inc
scas
test
into
test
adc
mov
mulb
ret
sbb
es
iret
int
mov
cs
push
add
xor
or
push
push
lahf
imul
in
mov
xchg
mov
jns
es
subl
lock
xchg
mov
mov
push
int3
mov
mov
jle
xchg
xor
dec
mov
jne
jo
adc
xchg
nop
sub
cmp
cmpsl
xchg
call
pop
out
xor
insb
arpl
fidivs
decb
cmp
xor
test
or
pusha
or
loopne
pop
cwtl
clc
adc
bnd
fs
test
xor
dec
mov
or
popf
dec
mov
fwait
cmpsl
pop
inc
sub
add
gs
incb
ret
sbb
fcom
into
sub
aam
into
das
mov
sbb
cli
and
lods
out
hlt
xchg
add
inc
push
orb
mov
inc
mov
jo,pn
sahf
insl
mov
inc
pop
mov
stos
push
pop
psllw
imulb
mov
in
scas
jbe
mov
push
orl
fld
add
and
add
hlt
xchg
shll
push
jmp
jae
fimuls
push
sub
icebp
push
call
fiadds
adc
outsb
inc
sbb
cs
jae
aaa
cmp
xor
adc
jg
popa
sarb
sbb
and
mov
or
in
decb
inc
es
lock
subl
sub
pop
xor
and
xor
mov
cwtl
rcrb
lret
mov
mov
imul
subb
pop
sub
sub
sub
jno
scas
xor
fsubs
psadbw
adc
pop
mov
mov
add
fwait
jmp
pop
lret
pop
xor
shlb
xor
jmp
in
mov
jbe
movsl
push
or
jmp
xchg
ds
xor
xor
jbe
int
cwtl
lock
mov
cmpsb
outsb
and
sti
mov
push
mov
repnz
push
pop
cmp
push
scas
mov
inc
cld
xchg
jns
cmp
jl
mov
cmp
rcr
and
dec
aam
sbb
lret
notb
pop
xor
fldl
pushf
hlt
test
lret
or
xlat
icebp
fldenv
cmp
insl
adc
mov
arpl
mov
test
pop
adc
and
popa
mov
hlt
xchg
arpl
and
test
adc
adc
mov
dec
lahf
cmp
jns
mov
cld
pop
xor
fwait
mov
in
mov
jmp
out
mov
jo
inc
imul
lret
das
pushf
ja
repnz
or
rclb
push
mov
rol
and
add
out
or
xchg
sub
push
add
jge
fildll
add
adc
push
jne
fsubl
push
inc
out
jne
xchg
mov
add
push
xchg
or
je
stc
bnd
mov
add
cmpsl
inc
mov
sahf
xchg
sbb
aas
cmc
dec
or
mov
divl
imulb
ficompl
outsl
nop
mov
xchg
fmull
mov
jbe
mov
xchg
push
xchg
pop
fs
pushf
jmp
out
cmpsb
push
sti
dec
push
xchg
test
sbb
call
sub
cld
cld
cmpsb
insb
push
dec
js
fimuls
sarb
sub
cmp
psrad
add
and
scas
ficomps
stc
fstp
cmpsl
js
imul
stos
arpl
cmpb
dec
mov
pop
ror
cmp
div
add
jnp
mov
into
stc
sar
fistl
jp
pop
pop
mov
lods
or
pop
cmpsb
cld
test
sahf
adc
push
sub
inc
mov
mov
lahf
je
xchg
arpl
clc
test
rol
inc
ljmp
and
jb
mov
lea
sub
pop
mov
xor
imul
gs
sub
nop
shlb
add
push
jb,pt
hlt
js
xchg
push
mov
lret
dec
popa
in
push
inc
icebp
mov
lret
xor
arpl
jmp
and
mov
or
mov
lahf
lret
sub
ljmpw
fs
push
rcrb
mov
andl
adc
fimuls
arpl
cmp
xor
dec
inc
ds
mov
int3
push
outsb
cli
mov
into
jge
loope
sarl
int3
jns
xchg
inc
mov
cltd
mov
pop
mov
jbe
push
adc
sti
mov
es
dec
sbb
jle
xchg
jmp
pop
jns
xchg
inc
ret
inc
and
sub
and
les
pop
fmul
adc
jp
shlb
stc
sbb
fucomip
push
js
mov
mov
sti
dec
loope
out
sahf
divb
popa
stos
in
mov
lahf
mov
lahf
add
cmp
jae
cmpsb
mul
add
inc
mov
cwtl
sub
aam
inc
add
pop
ffreep
sahf
cmc
negl
push
hlt
clc
scas
fmuls
or
cmpsl
and
sbb
add
pop
in
outsb
dec
or
popf
adc
pusha
pusha
shll
popf
std
push
popa
nop
fwait
sub
push
inc
xor
shrb
mov
loope
or
in
inc
mov
ljmp
testl
jno
in
xchg
adc
loope
and
rorl
ljmp
bound
into
out
lahf
sahf
mov
pushf
and
pop
or
inc
ss
lods
mov
inc
sbb
dec
jg
pop
lcall
lock
mov
inc
mov
outsb
imul
xlat
inc
int
push
shrl
sub
hlt
pop
adc
cld
cli
push
imul
jle
and
ljmp
data16
mov
mov
add
arpl
mov
or
adc
insb
pop
add
and
fs
aaa
mov
xchg
inc
mov
ficompl
imull
dec
pop
jmp
clc
insb
imul
aad
add
pop
jae
aaa
push
push
jl
les
pop
cmp
cmp
pop
iret
lods
xchg
jo
cld
cmp
mov
push
notl
jo
and
xorb
stos
loop
pop
xchg
inc
mov
add
fistpll
mov
push
and
sub
div
inc
cmpl
xor
mov
aaa
mov
adcb
dec
lea
int
xchg
popf
add
mov
xchg
mov
xor
pop
lret
inc
outsl
cwtl
sahf
fs
sbb
jle
test
aad
or
ljmp
popa
and
hlt
shr
lock
gs
pop
push
jge
jl
in
add
mov
jb
mov
add
cmp
jne
push
js
jns
in
scas
push
push
jle
out
sbb
lret
cltd
mov
or
xchg
add
popf
adc
xor
sbb
adc
dec
xor
cmp
push
mov
mov
push
jnp
test
jbe
lahf
cmp
roll
jnp
cmp
rcrb
pushf
mov
pop
xor
cltd
dec
jge
ss
sbbb
push
xor
xor
insl
adc
addl
fwait
out
movsl
rol
in
shl
or
sub
xlat
adc
pop
adc
add
imul
sbb
cmp
je
out
push
ljmp
add
adc
adc
lret
sub
pop
lea
clc
cs
das
or
std
mov
lret
mov
daa
and
testl
pop
xor
jno
sti
pop
or
mov
xchg
or
xchg
xor
sti
stc
cwtl
loope
sbb
mov
mov
sbb
lock
in
xchg
adc
jmp
mov
ljmp
lret
inc
repnz
xchg
out
cmp
push
cld
mov
sbb
cmp
mov
xor
mov
ljmp
or
push
popf
dec
jge
cmp
inc
jle
pop
mov
icebp
cmp
ret
pop
dec
and
mov
sbb
stos
jne
mov
popf
or
js
daa
imull
push
inc
loop
cmp
loop
mov
imul
push
adcb
dec
xchg
add
fst
popa
push
adc
xchg
adc
sbb
in
mov
push
pop
pop
loope
fdivr
add
sub
popa
cltd
mov
fidivrl
or
stc
mov
leave
cmp
sti
or
daa
cmp
and
lcallw
imul
adc
and
mov
aad
test
xchg
aam
mov
dec
push
adc
xor
sti
mov
icebp
mov
hlt
push
arpl
jmp
int
sbb
outsb
in
cmp
stos
pop
jl
mov
addr16
pop
and
jne
or
in
mov
outsb
and
outsl
subb
out
cltd
or
jecxz
xchg
jmp
push
push
sub
jbe,pt
lret
sub
jb
cwtl
jg
or
cli
test
inc
mov
mov
and
lea
jmp
push
cmp
sbb
pop
xor
xor
fdivs
dec
mov
ljmp
movsb
hlt
cmp
fdiv
dec
inc
xor
insb
roll
adc
outsl
std
inc
lods
daa
dec
fisttpl
add
ret
nop
jnp
pop
loopne
sbb
sub
jmp
jne
pop
mov
adcb
jns
jecxz
jg
jne
and
adc
ds
lods
dec
and
mov
int3
jmp
fstpl
in
inc
repnz
in
or
cmc
cmc
iret
dec
mov
test
sbb
idiv
ljmp
push
imul
adc
cmpsl
stos
rcr
sub
or
lcall
push
cmp
adc
stos
sbb
sbb
call
adc
push
adc
mov
aad
and
js
test
addb
adc
jmp
aad
pop
pushf
mov
int
insb
imul
je
out
es
mov
setns
cmp
shrb
cmpsl
sub
push
leave
in
in
stos
cs
lcall
mov
bound
fwait
jo
push
or
sbb
test
pop
jno
pusha
int
rorl
cmp
test
sbb
cmp
sbb
outsb
pop
push
enter
out
nop
in
sbb
fnsave
sarb
shll
stos
inc
add
ret
shll
sbb
pop
push
mov
out
mov
addr16
iret
mov
push
push
or
add
std
adc
mov
lock
jg
gs
outsb
or
cmp
or
cmpsl
push
fmull
repz
inc
ljmp
popf
mov
lock
addr16
ret
mov
xlat
out
mov
xchg
dec
and
cmpsl
push
mov
inc
add
imul
cmp
ss
sahf
arpl
stc
fmull
popa
mov
enter
mov
inc
pop
cli
jle
imul
pop
add
and
js
mov
adc
mov
add
and
dec
call
std
daa
xchg
loopne
sbb
enter
push
sbb
addr16
mov
jle
loopne
adc
and
nop
lret
in
in
les
pusha
flds
loopne
ret
movsb
cmc
movsl
sub
icebp
lahf
or
lods
add
insl
sub
insl
xor
add
sti
outsb
inc
pop
out
inc
add
dec
cmp
lods
int
sub
aam
lcall
loop
fs
repnz
mov
sbb
in
out
bound
jl
je
daa
jle
imul
sbb
sub
adc
ja
mov
lret
aas
mov
and
shlb
push
or
js
sbb
fisubs
jecxz
jle
or
icebp
add
push
inc
xchg
add
ljmp
xchg
test
push
aam
sub
test
xchg
mov
cwtl
ret
mov
movsb
repz
inc
mov
dec
outsb
lret
adc
test
pop
xor
mov
inc
inc
mov
push
pop
mov
fcoml
pop
ret
and
sub
sahf
fidivl
sbb
jg
stos
inc
pop
mov
test
cmpsl
push
fwait
mov
mov
xor
insb
push
pop
imul
add
les
cltd
outsl
xor
sbb
pop
and
arpl
push
lret
add
adc
roll
sbb
psubb
out
in
cs
imull
xchg
jbe
fs
fnstcw
iret
lret
mov
dec
xor
mov
push
pop
mov
sub
dec
mov
sti
fistpll
mov
arpl
xor
repnz
adc
cmp
mov
mov
leave
cmp
push
daa
jle
shrb
into
jae
jb
mov
int3
xorb
adcb
sub
inc
xchg
and
or
xor
xchg
sub
add
pop
or
in
mov
mul
pop
out
pop
movsb
cmp
jp
into
sbb
xchg
dec
stos
lcall
xchg
pop
jmp
cmp
and
cld
cld
or
dec
ret
shll
sbb
ret
stos
sbb
push
arpl
inc
lock
popf
mov
pop
xor
adc
or
push
insb
lahf
pushf
adc
out
jbe
cmc
xchg
pop
shr
and
cmpsb
inc
fstl
movsb
sbb
and
int
repnz
pop
fiadds
and
out
arpl
out
imul
mov
std
xor
cltd
loop
lret
and
or
roll
add
and
lods
inc
xor
mov
dec
hlt
addr16
mov
js
int3
mov
cmp
cmp
pop
inc
jge
sbb
in
in
xor
sbb
fdivp
mov
inc
lock
inc
mov
das
mov
fistps
cs
mov
insl
lcall
push
or
bound
out
and
jno
xchg
mov
add
out
rcll
xchg
sbb
xchg
aas
testl
fcmove
push
pop
lods
adc
dec
shr
adc
outsl
test
and
mov
push
pop
pushf
addb
stos
out
enter
rcrl
add
inc
mov
sbb
jmp
add
add
sub
adc
cwtl
lret
cltd
mov
xchg
or
in
push
xorb
out
popf
arpl
out
movsb
push
sbb
imul
sbb
push
add
mov
inc
mov
mov
aaa
xor
cmp
lahf
cmpsb
pusha
push
jno
mov
mov
scas
pop
adc
mov
jns
jmp
and
enter
popf
loop
ja
dec
dec
jb
in
aas
inc
xor
or
mov
fcom
cwtl
sbb
push
ds
mov
insb
jecxz
sbb
mov
inc
fistl
stc
lock
outsl
test
scas
mov
lock
scas
pop
dec
jae
es
jp
push
jg
andl
ljmp
dec
mov
or
xchg
in
inc
push
inc
insb
cmpsl
push
fidivrl
sub
mov
test
nop
rorb
test
pop
loope
push
xchg
pop
lea
lret
and
sti
xchg
inc
or
sub
jmp
hlt
dec
sub
mov
lea
xchg
std
push
and
out
push
mov
cmpsl
add
pop
cltd
xorl
in
jle
ljmp
and
inc
mov
and
and
push
dec
popf
jmp
call
xor
incb
lret
add
adc
push
rorl
jo
inc
iret
push
or
dec
push
popf
pop
orb
aam
xor
cmpsb
or
stos
ret
outsl
push
popa
in
pop
pop
js
mov
add
pop
cmpsl
shrl
jb
sbb
jmp
ja
mov
fcomps
repnz
mov
stos
and
push
or
mov
es
ja
sub
int
cmpsb
movsl
loop
std
jg
js
out
movsb
aad
in
cmpsb
or
mov
dec
or
pop
out
jmp
in
xchg
or
xorl
lahf
es
addr16
cmp
in
jne
cmpsl
dec
jmp
or
and
paddq
cld
stos
adc
sub
int3
lcall
mov
jmp
movsl
insb
loope
mov
sbb
mov
sub
ret
dec
adc
out
xchg
adc
movsb
mov
sub
ficompl
lods
add
xchg
pusha
mov
pop
adc
ja
ret
dec
xchg
push
or
cli
inc
inc
ret
pop
pop
adc
inc
ds
aaa
cmp
sbb
ljmp
jmp
add
xchg
xchg
stos
push
xor
push
pop
fsubs
popa
imul
popf
sbb
mov
pushf
xor
push
or
adc
sub
popf
in
push
mov
sbbl
shr
jmp
mov
mov
mov
mov
je
cmp
fwait
xor
lods
cli
sub
and
test
adc
imul
movsl
out
push
xchg
sub
jmp
cli
adcl
push
mov
jp
jecxz
sub
retw
inc
adc
loop
ret
imul
mov
addr16
outsl
cmc
fmuls
movsl
mov
call
adcl
popf
jecxz
and
add
mov
adc
inc
and
les
test
dec
addr16
jbe
or
sbb
push
aas
or
add
push
jae
push
mov
das
rep
shll
and
jmp
stc
add
inc
outsb
dec
lock
cmp
push
and
inc
pushl
inc
inc
cmp
push
enter
outsl
dec
cwtl
bnd
je
or
in
push
ss
int
lock
and
cltd
jo
mov
pop
jecxz
fs
sbb
pop
push
xchg
mov
test
or
and
mov
inc
das
mov
nop
jne
and
mov
dec
sub
imul
arpl
mov
stos
cli
adc
adc
in
scas
movsb
mov
push
jmp
imul
inc
inc
popa
incl
adc
repnz
mov
rcll
les
push
xchg
test
pop
rorb
popa
lret
ss
xor
sahf
jb
xorl
in
jp
insl
test
outsb
pop
pushf
pop
ds
imul
add
ret
mov
adcb
inc
mov
dec
bndldx
sahf
and
adc
or
mov
jne
insl
std
xchg
push
scas
push
fsubrl
inc
loope
xchg
or
enter
js
popa
int
movsl
push
and
or
add
and
jbe
pop
or
lret
loopne
xor
pop
mov
lods
aad
pop
enter
or
add
jmp
push
jnp
jp
repz
adc
xchg
cltd
std
adc
ss
les
cmovnp
scas
cltd
or
xchg
mov
ja
jmp
in
leave
insb
add
mov
in
jbe
adc
mov
or
stc
cmp
lcall
push
sub
mov
dec
outsb
xor
shrb
cmpsl
sub
push
sbb
lret
pxor
dec
push
cmp
dec
fstpt
mov
mov
dec
xor
xchg
lcall
enter
cli
imul
lods
fisubs
cld
cld
movsl
sbbb
loope
int
je
cmp
xchg
insb
mov
sbb
push
in
lret
cmp
add
sti
xchg
add
jae
mov
decb
fimuls
testb
dec
mov
nop
lcall
dec
pop
push
popa
cmp
mov
mov
ret
pop
mov
and
mov
inc
je
pop
fildl
pushf
sbb
shll
xchg
inc
mulb
sbb
idivl
adc
call
cmp
sahf
lahf
cmp
xchg
push
mov
inc
xchg
xchg
cmp
lds
aaa
cltd
shlb
sbb
adc
rorb
mov
in
xchg
xor
hlt
inc
insl
sbb
xchg
rcrl
inc
and
jg
aaa
xchg
add
xchg
dec
nop
adc
or
test
and
mov
shl
mov
imul
mov
popa
push
fld
test
bound
repnz
test
lea
push
pusha
ja
inc
add
push
das
inc
sub
mov
xor
mov
add
mov
sbb
dec
pop
stos
rcll
xor
sub
cli
jo
dec
lret
xchg
push
fwait
sbb
push
scas
inc
out
fisubrl
mov
and
add
pop
cmp
ss
ja
push
test
fstp
ret
ljmp
mov
bound
mov
std
daa
loope
or
lahf
cmp
std
sbb
sub
dec
dec
adc
push
into
adc
cmp
inc
ljmp
shrl
mov
xor
lea
xlat
xchg
xor
stos
add
mov
vshufps
pusha
add
pop
and
aaa
dec
cmp
stos
std
mov
mov
pop
fs
data16
and
mov
je
mov
push
fdivs
xor
insl
decl
inc
cmp
xchg
push
jecxz
and
ret
out
aad
outsb
ljmp
xchg
je
fwait
jb
imul
sahf
sbb
mov
syscall
sub
ss
push
jae
lret
inc
mov
xorb
mov
push
xchg
mov
movsl
jmp
or
add
leave
cmp
sbb
mov
daa
mov
lcall
mov
push
pop
sbb
rol
push
cwtl
pusha
cmpsl
jecxz
push
repz
fstpl
incl
mov
adc
cmp
mov
push
shlb
mov
xchg
jg
lock
mov
adc
lcall
adc
or
jns
in
cmc
jno
ret
mov
jecxz
mov
arpl
sub
lret
jnp
imul
repz
push
call
fldl
xchg
iret
outsb
dec
mov
jne
dec
popa
xchg
orb
sbb
outsb
xor
push
in
inc
mov
adc
shld
loopne
notl
mov
xor
in
int3
mov
add
out
lcall
pop
dec
les
fldenv
imul
outsl
adc
pop
pop
sahf
push
dec
les
cmpl
add
es
mov
cmpsb
inc
incb
inc
pop
xor
int
xchg
and
int3
bnd
pushf
sbb
xchg
adc
sub
pusha
sarb
push
sbb
rclb
push
push
xor
and
jmp
std
jmp
lock
push
cltd
lds
movsl
rcr
inc
imul
mov
pushf
int3
mov
cmc
jmp
icebp
out
mov
cmpsl
hlt
sbb
jne
push
and
sbb
xchg
cmpsl
sbb
inc
push
jge
in
cmp
xchg
xlat
scas
mov
jns
sbb
jns
mov
das
shlb
lods
or
es
inc
mov
shrb
sub
jbe
push
mov
mov
icebp
rcrl
cmp
andb
add
hlt
pop
test
aas
pop
ja
fidivs
fwait
sub
jmp
or
popl
sub
into
mov
xor
jnp
jns
es
pop
add
test
fwait
cmpsl
inc
bound
ret
fmull
sub
out
mov
jle
stos
popa
sarl
lock
push
and
mov
dec
test
daa
icebp
xchg
mov
dec
xor
xor
and
mov
into
fcmovb
mov
dec
movsb
pop
push
inc
push
push
mov
adc
out
rcrl
add
inc
cli
mov
pop
cmpl
stos
jecxz
test
dec
and
icebp
jl
mov
push
cmp
cmpl
mov
cli
mov
xor
mov
cwtl
mov
dec
jno
bound
inc
cli
imul
add
xchg
inc
les
push
and
movl
scas
fwait
arpl
sahf
xor
out
xchg
js
push
lcall
lret
pusha
jg
ss
xchg
sbb
sbb
xor
pop
mov
sarl
sbb
xchg
dec
ja
int3
mov
mov
outsb
adc
ficoml
and
mov
ja
jmp
enter
cmp
mov
pavgb
push
inc
js
test
xchg
and
mov
cmp
adc
int3
mov
xorl
cli
mov
push
in
mov
fisubrs
daa
test
xor
adc
xchg
pusha
jle
xor
jecxz
push
inc
and
jno
cwtl
stos
add
adcl
pop
xchg
clc
and
dec
cld
dec
mov
sbb
add
dec
pushl
icebp
repz
into
push
dec
dec
push
and
pop
pusha
and
xchg
int3
push
sbb
in
cltd
mov
jns
sbb
imul
xchg
mulb
xchg
inc
cmpsb
cmp
mov
mov
adcl
jo
push
mov
insl
add
test
iret
push
push
xorl
mov
and
inc
push
jno
and
sub
push
push
jg
pop
rclb
mov
jmp
mov
cli
and
stos
mov
push
adc
xchg
nop
mov
int
popa
in
adc
push
cmp
mov
outsb
gs
int3
les
mov
jnp
aas
pop
xor
rcr
inc
inc
fdecstp
jo
jnp
insb
cld
loope
add
jecxz
cmpsb
leave
dec
aad
mov
dec
jl
or
loop
popa
popf
xchg
aaa
pop
pop
mov
add
xor
cmp
subl
mov
loop
stos
scas
sub
mov
xor
jg
jo
cld
int3
jle
dec
jle
mov
adcl
fwait
movsb
mov
dec
enter
inc
mov
sarb
insb
jo
cmp
adc
ljmp
inc
dec
loop
sub
clc
and
adc
sub
scas
cmp
lea
das
add
mov
mov
pop
sbb
adc
xchg
out
lea
int3
mov
nop
scas
mov
cmp
enter
fcomps
lods
xor
pusha
pop
shr
jne
sub
jb
xchg
outsl
xor
lock
push
data16
adc
mov
lock
repnz
jne
insl
inc
inc
push
xor
outsb
mov
pop
pop
and
adc
cmp
ret
adc
add
or
mov
cmp
and
movsl
cmp
or
push
hlt
mov
dec
xchg
mov
or
and
and
xor
loopne
xchg
clc
jae
fwait
sub
popa
pusha
shrb
call
pop
out
dec
jo
repz
dec
stos
lea
enter
inc
inc
rorb
xchg
xchg
xchg
mov
or
jp
jg
push
and
pop
hlt
mov
mov
mov
jecxz
cmpsl
inc
testb
dec
repz
hlt
mov
stc
stc
imul
pop
push
bound
mov
lahf
int
ret
sub
scas
sar
dec
cmp
inc
mov
ljmp
adc
inc
xlat
in
or
mov
mov
das
arpl
adc
fists
or
lods
pop
shlb
mov
xchg
push
lods
cmp
mov
cmpsl
add
out
ja
mov
mov
shr
jnp
sbb
push
lret
rcl
pop
xchg
adc
cmp
or
in
mov
shufps
add
fcomps
mov
pop
stos
mov
jle
mov
outsl
sti
imul
out
stos
dec
es
loop
dec
cmp
nop
pop
mov
pushl
mov
jne
pop
enter
jns
xchg
testl
mov
sbb
mov
add
cmp
jg
xchg
fwait
jmp
shr
adcb
lret
jnp
mov
dec
lcall
or
aam
cmp
daa
fldt
je
out
or
scas
push
lods
orb
jl
shlb
sub
pop
inc
dec
push
out
adc
cmpsb
jno
xor
mov
jle
mov
cmp
enter
lods
add
cmp
jo
ljmp
or
nop
pop
adc
test
jmp
push
inc
rorl
xor
inc
sbb
sbb
mov
add
push
mov
mov
mov
pushf
pop
out
jg
dec
cmp
push
xor
and
out
and
sub
outsl
jp
push
jnp
aas
ret
aas
mov
repnz
ljmp
xchg
gs
adc
lock
stos
jg
sbb
pop
jbe
xor
je
add
xchg
mov
jle
pusha
popf
insb
nop
mov
or
jns
fstpl
sbb
push
std
mov
cld
lds
cmpl
lahf
push
push
cmc
pushf
fisubl
fidivs
cmp
outsl
pop
xrelease
fildll
in
push
xor
fisttps
pop
pop
fldcw
ds
sbb
xor
cmpsl
outsb
adc
push
mov
cmp
rcrl
test
dec
movsbl
popa
cltd
or
add
out
add
xor
xchg
cmpsb
testl
loop
nop
xor
rcll
hlt
ss
add
jae
repz
or
arpl
out
mov
xchg
dec
out
pop
aam
inc
push
push
add
xchg
out
repnz
pusha
icebp
pop
pop
mov
mov
mov
add
cmp
test
por
scas
pop
pusha
icebp
ja
das
sti
aaa
mov
in
and
test
xchg
fs
mov
in
jne
lret
pop
test
push
sbb
adc
inc
incb
mov
jmp
lods
loopne
mov
jmp
pop
inc
mov
das
xor
pop
loop
std
orl
mov
das
loope
mov
fistpl
out
lea
push
or
arpl
cltd
pop
jno
push
imul
adc
dec
imul
push
mov
or
icebp
out
loopne
xchg
mov
pop
xchg
int
and
scas
mov
fnstcw
push
das
jl
pop
aad
mov
dec
repz
shlb
or
imul
pop
xchg
insb
cmpsb
jne
sub
sub
cltd
sub
stos
inc
loop
test
outsl
cmp
pop
imul
sbb
mov
inc
ret
push
stos
and
roll
movsb
dec
xchg
sbb
mov
ss
movsl
or
sti
xchg
mov
cmp
addl
or
jg
inc
repnz
sahf
out
xchg
push
iret
pop
cwtl
jo
jge
and
in
out
daa
sub
es
jno
enter
fcmove
sti
pop
xchg
or
call
xor
enter
mov
xchg
mov
and
xchg
cmp
mov
std
jo
rol
scas
jo
add
inc
pop
out
dec
xchg
xor
inc
pop
mov
mov
pop
mov
jle
mov
jmp
push
mov
mov
daa
repz
inc
jb
sti
std
cli
shll
pop
sub
and
mov
inc
loope
sbb
jle
fistps
shrb
jnp
js
loopne
fs
and
and
mov
lea
adc
mov
sub
sub
sub
lcall
fiadds
out
or
cmpsl
mov
out
push
inc
repz
sub
xchg
das
sub
fisttpl
push
and
pop
or
adc
addr16
xorb
inc
and
outsb
adc
shrb
inc
cmc
cltd
sbb
lret
into
cmp
fistpl
or
mov
xchg
mov
out
inc
jge
sahf
mov
jno
dec
push
ret
push
mov
xchg
and
xchg
out
xlat
pop
arpl
push
jae
subl
incl
repnz
les
mov
paddw
shrl
adc
xchg
test
push
out
addr16
add
jne
stos
das
add
jb
push
div
jg
imull
imul
cli
jae
mov
bound
pop
jg
adcb
xor
add
inc
xchg
xor
push
lcall
jb
cmp
xchg
ljmp
lahf
mov
mov
rcr
mov
test
fldt
orl
mov
imul
mov
dec
dec
ret
add
jecxz
movsb
push
jmp
stos
or
adc
and
fsubs
xor
inc
inc
imul
ss
cmp
imul
pop
movsl
cs
fnstsw
pop
pop
outsl
stos
dec
dec
xorb
rcrb
enter
xor
cmp
aam
and
or
decb
andl
sbb
lds
add
lahf
adc
es
ret
jb
jp
pop
ds
xor
pop
sti
adc
push
pop
sbb
mov
mulb
aam
js
test
cs
mov
mov
lock
cmp
pop
inc
push
jg
loopne
mov
std
fmull
imul
dec
add
jae
xor
push
fidivrl
cmp
xor
cld
push
jp
cwtl
les
jmp
jmp
addb
mov
mov
push
cmp
push
fildll
je
inc
fldt
mov
push
pusha
push
fwait
lret
push
imul
xor
test
xorl
cltd
push
jne
dec
dec
das
dec
arpl
in
inc
jecxz
add
clc
stc
in
jecxz
cmpsb
cmc
imul
les
sbb
add
mov
cmpsb
cmp
mov
scas
jnp,pn
je
mov
mov
cmp
shll
out
lea
ss
arpl
fstpl
jg
shlb
icebp
stos
pop
mov
or
or
lods
into
xchg
xlat
lcall
and
data16
insb
mov
push
jg
jne
in
xchg
or
insl
loopne
iret
lods
xor
push
jnp
or
rorb
inc
adc
mov
sbbb
cltd
arpl
inc
inc
test
sub
enter
imul
pop
out
xor
loope
mov
inc
clc
jge
jmp
or
repz
mov
push
jle
rolb
adc
mov
es
dec
xor
add
std
aam
imul
addl
into
out
mov
repnz
inc
jb
push
enter
lea
adc
xchg
dec
cmp
push
popa
push
and
jno
lret
cmp
inc
adc
shll
sbb
stos
dec
cwtl
cwtl
xchg
addb
pop
insl
or
dec
fistpl
inc
cltd
call
setbe
addb
int
stos
mov
or
add
jmp
add
es
fcmovnbe
mov
inc
sub
lds
lret
adcb
add
cld
mov
mov
into
cmp
andb
fwait
in
and
pop
mov
bound
or
stos
mov
sbb
xor
adc
addr16
sbb
jmp
and
fiaddl
sub
int
sahf
fnop
sub
rolb
dec
and
fdiv
cmpsb
sbb
jp
fdivr
clc
data16
xchg
cltd
stos
jb
mov
ds
mov
inc
adc
inc
mov
stos
xorl
mov
mov
je
add
jg
or
xchg
add
nop
or
adc
cmpl
fimull
icebp
jmp
fwait
insl
push
inc
mov
jnp
adc
pusha
jo
cmp
mov
gs
cld
cmp
sub
dec
push
push
sbb
fimuls
xchg
xchg
and
fxch
cltd
test
and
mov
lahf
daa
test
inc
mov
sbb
jmp
rcrl
lods
sub
mov
jmp
mov
pop
mov
add
aam
inc
push
icebp
addr16
sub
mov
xor
neg
fcomip
jnp
mov
stos
dec
pi2fd
aam
jl
fisubs
dec
icebp
push
push
pextrw
movsl
adc
inc
lock
mov
pop
mov
sbb
arpl
fs
xor
cwtl
push
cmp
push
push
shll
orl
cmpb
das
popa
xor
adcb
add
mov
repnz
pop
repnz
pop
cmpsb
and
sub
dec
jp
sbbb
mov
mov
and
and
jmp
fiadds
jns
icebp
dec
sub
adc
mov
ds
in
scas
sub
adc
inc
notl
sub
cwtl
pop
sub
popf
jne
scas
je
pop
add
mov
ss
dec
in
dec
adc
mov
or
out
fxam
xchg
add
inc
jge
cwtl
imul
pusha
sahf
inc
mov
mov
aas
cmp
pushl
outsb
xor
test
data16
rolb
sub
in
xchg
sub
dec
imul
pop
cwtl
xor
mov
in
push
shll
ds
subb
shrb
push
shl
mov
mov
mov
add
jecxz
lahf
push
add
out
aam
rclb
adc
push
in
inc
cmp
add
add
mov
into
add
je
xchg
jp
sub
mov
repz
dec
iret
ss
hlt
and
lahf
sub
pusha
sub
and
loope
fisttpll
pop
pushf
or
jmp
sbb
leave
jg
insb
or
dec
cmp
enter
stc
fs
jne
and
push
mov
jb
pop
or
nop
lea
adc
jne
lds
xchg
xchg
push
ret
jb
gs
xchg
pop
arpl
pop
pop
mov
jo
test
fsubrp
mov
add
fxch
icebp
jno
ret
shlb
lods
pop
jns
sub
mov
rcrb
sbb
mov
outsl
test
push
test
clc
shlb
lea
in
jecxz
js
mov
add
enter
insb
push
repz
xchg
rcl
sub
pop
addr16
ja
lcall
movsl
sbb
xor
pop
fldcw
sbb
jno
push
sbb
add
shll
stc
mov
sar
and
ljmp
sub
ja,pt
jmp
imul
es
cmc
sub
xchg
xchg
ja
jbe
rol
incb
jg
xor
notl
sbb
jecxz
inc
inc
pushf
pop
es
inc
stos
fidivrs
bound
xchg
dec
fwait
pop
mov
push
xchg
sub
mov
cmpsb
inc
aas
stos
pop
imul
mov
in
ja
inc
mov
jbe
scas
adc
std
pushf
shlb
movsl
xor
inc
fmul
xchg
incl
mov
mov
xlat
pop
add
push
and
dec
dec
mov
fnstcw
sbb
jbe
loop
add
mov
call
insl
mov
or
sbb
sbb
iret
fisubrl
pop
jb
cmpsl
or
shlb
std
incb
in
cmp
idiv
in
pop
jae
xlat
inc
xchg
aaa
je
ror
mov
lock
add
mov
add
insl
and
sti
dec
mov
subb
pop
in
xchg
cmp
inc
fdivrl
lock
ja
adc
pop
xchg
stos
jbe
mov
pop
arpl
push
ljmp
repnz
push
cmp
or
sub
test
out
ret
ret
sbb
xchg
fimuls
cmpsl
fwait
push
sahf
and
adc
testb
add
push
paddsb
inc
dec
fwait
or
test
pop
outsl
imul
push
xor
push
lods
pop
sub
pop
ffreep
test
dec
iret
jno
pop
mov
and
cmpsl
and
fstpl
push
add
jns
repnz
push
inc
neg
sbb
cmp
lds
mov
pop
loopne
mov
adc
orb
sub
sbb
int
flds
mov
xchg
cld
jle
xor
into
mov
mov
loopne
sti
rorb
mov
sbb
mov
ljmp
lret
clc
sub
jnp
inc
jns
inc
clc
int
mov
add
pop
imul
mov
cmpsl
lret
xor
fcompl
or
mov
in
xor
jae
lods
inc
cwtl
push
sub
inc
shlb
das
stos
push
jmp
in
arpl
pop
subl
mov
sub
popf
xchg
jno
lret
outsl
inc
nop
imul
fdivrl
je
jg
mov
sbb
outsb
mov
cs
sub
movsl
mov
xor
lods
mov
scas
push
sub
cwtl
adc
pop
inc
sbb
in
xchg
ja
mov
push
rep
pop
mov
jne
lahf
mov
popf
add
adc
ret
clc
stc
mov
mov
in
xor
insb
adc
adc
add
idivl
mov
cmp
sbb
sbb
inc
jo
lret
jecxz
adc
icebp
jmp
or
in
inc
flds
mov
sub
int
add
in
cld
jnp
pop
lahf
mov
inc
xor
repnz
push
xchg
ja
xor
dec
bound
xchg
in
ret
cmp
jno
in
sbb
sub
movsb
lcall
or
in
mov
mov
fistpll
aas
stos
pop
xlat
xor
cmp
jo
fsubs
push
adc
inc
arpl
push
sbb
mov
outsl
add
mov
movsl
ja
lea
pusha
jle
jnp
movsb
sarb
mov
rclb
adc
cmp
inc
mov
cmpsb
ja
call
sub
jo
insb
inc
jb
shrb
and
lret
into
push
in
sub
shr
jns
pop
mov
adc
inc
mov
sub
fxch
js
inc
scas
xor
pop
mov
sbb
icebp
dec
rorb
push
ret
imul
or
jno
adc
ja
dec
and
add
mov
jecxz
cltd
cmp
sub
xchg
and
aad
aas
and
pop
popf
xchg
add
jp
pop
loop
addr16
jmp
sbb
push
push
sub
mov
xchg
jg
jmp
jp
bound
xorb
cmc
add
js
inc
movsb
movsl
xor
push
and
ja
jo
fists
ret
ds
dec
sbb
pop
aas
scas
call
out
insb
mov
jbe
jg
jb
les
insl
pop
and
je
rcl
data16
push
stos
and
loopne
pushf
repz
inc
in
andb
outsl
shrl
add
xor
fldt
std
adcl
dec
add
push
lds
add
sbb
add
dec
pop
mov
jb
mov
fiadds
adc
je
mov
ficoml
cmpsb
rclb
fs
loop
gs
xor
xchg
sti
ljmp
mov
add
jae
and
sbb
psrad
mov
push
adc
push
add
lret
cmp
xchg
or
fistps
adc
test
jo
pop
loop
loope
sbb
xor
orb
stos
sub
xchg
arpl
clc
mov
jp
inc
js
ss
arpl
pop
ret
and
sub
push
mov
lods
mov
mov
cwtl
pop
lock
call
jae
push
xchg
jge
lret
into
add
pop
and
jnp
add
rorl
pusha
sahf
or
mov
subb
mov
pop
jecxz
xchg
jmp
movsb
or
xchg
out
jne
push
insl
cmp
in
stos
xlat
je
imul
jmp
sahf
ja
pop
pop
xor
inc
popf
adc
xchg
dec
pop
ret
inc
mov
movl
outsl
imul
in
xchg
pop
popa
inc
aad
leave
cli
std
mov
movsl
adc
rcl
ljmp
or
bound
addr16
xor
push
arpl
sub
dec
fisttpll
jae
mov
dec
add
addb
mov
test
movsb
out
scas
sub
shlb
in
data16
lret
inc
inc
std
jp
test
or
dec
sbb
popf
mov
je
push
jmp
imul
sub
call
and
cmp
out
test
imul
cltd
ret
add
in
repz
sbbl
jo
push
mov
les
xor
enter
dec
jge
jle
std
mov
inc
faddl
sbb
mov
gs
addr16
xchg
sahf
sub
loopne
in
leave
mov
ss
rclb
or
and
mov
rorb
push
xchg
push
inc
psubusb
es
and
rorb
fsubr
add
sar
aam
cmp
sbb
std
sub
rclb
mov
lea
xorl
fistps
imul
daa
adc
subb
fimull
dec
enter
xchg
jbe
call
int
shlb
aas
push
push
jno
mov
imul
dec
fucom
icebp
dec
fs
xchg
fs
call
bound
cltd
movsb
mov
mov
mov
cmpsb
jp
xchg
jo
fsubs
xor
mov
movsb
mov
push
mov
or
iret
movsb
add
jp
adcl
jo
lret
mov
sub
jns
dec
push
clc
jg
enter
pop
popa
ja
mov
sbb
rcll
fistpl
mov
pop
sub
adc
sub
jecxz
aaa
mov
xor
into
or
cmp
data16
in
in
mov
jp
jl
sahf
or
leave
into
sbb
add
int3
cmp
mov
gs
mov
cwtl
dec
lods
push
jge
jnp
sub
mov
cmp
pop
sti
lock
xchg
repnz
jmp
aam
dec
loope
sbbb
popf
sbb
es
xchg
push
clc
pop
bound
jae
sahf
sub
mov
sahf
enter
add
jmp
fisubrs
pop
push
push
aas
notb
cld
sub
mov
testl
mov
int
cli
cmp
orb
push
and
mov
pop
lock
out
add
add
rol
fwait
cmp
rcr
adc
mov
outsb
dec
movswl
mov
call
adc
sbb
lods
dec
stc
push
cli
xor
add
mov
call
pop
add
out
popf
and
loop
fisttpl
aam
pop
pop
inc
ds
pop
jo
pop
and
loope
iret
cmp
add
lods
adc
pop
lcall
into
jmp
push
pop
stos
inc
and
xchg
lcall
cmc
inc
xlat
pop
xchg
lret
mov
prefetcht2
mov
sub
mov
cmp
lds
ret
dec
imul
cmpsb
fisubrs
orl
outsb
out
movsl
repz
jae
xchg
and
sbb
adc
xor
out
test
sbb
lret
pop
xchg
and
pop
cmp
fadds
dec
clc
fbstp
and
loopne
pop
lods
scas
std
dec
idivl
or
testl
sub
lret
add
sbb
insl
imul
push
pop
xorl
dec
sbb
add
inc
jno
ja
jae
das
add
xchg
pop
lods
pop
lret
sbb
fcomps
outsl
icebp
movsb
fisttpll
pop
aaa
ljmp
sub
and
inc
fsubl
pop
or
xchg
mov
stos
std
inc
sbb
push
mov
push
add
je
pop
dec
sbb
jmp
dec
imulb
pop
pop
adc
add
imul
xchg
jg
ja
xchg
jecxz
hlt
mov
jle
xor
xor
mov
or
jp
cmp
mov
add
jmp
out
xor
jg
sbb
xchg
sub
out
xchg
pop
push
or
arpl
call
test
dec
in
mov
sbb
or
dec
lahf
dec
stc
and
push
fcmovne
xchg
pop
xor
repz
in
ljmp
jne
inc
int
add
jae
mov
xchg
into
notl
mov
stos
subl
push
dec
test
cwtl
pop
inc
lret
jne
jne
std
add
subl
fnstcw
cmp
dec
push
jmp
xor
mov
xchg
or
or
incb
xlat
inc
movsl
pop
loop
add
inc
or
jmp
mov
dec
out
int
clc
xor
sbb
xchg
adc
sub
sbb
adc
pop
jecxz
push
cs
mov
xor
repnz
mov
ljmp
cmp
enter
aam
fdivl
rcll
mov
std
xor
xchg
das
add
in
cmp
cmp
outsb
nop
aad
popa
in
jb
xchg
pop
push
mov
and
cltd
fists
xchg
mov
adc
pop
test
inc
daa
bnd
jb
cwtl
mov
push
lret
mov
sub
xchg
push
sub
lcall
dec
jmp
test
adc
call
cmpsb
push
mov
inc
loopne
andl
outsl
outsl
cltd
inc
push
rclb
adc
add
cwtd
test
les
and
mul
cmp
ljmp
imul
out
mov
and
jno
cmc
add
js
shlb
es
or
cld
jo
cmp
inc
testl
rorl
mov
lret
test
xchg
adcb
adc
jmp
je
cmc
sbb
notb
push
mov
cld
jne
jg
mov
push
push
int
test
inc
fistpl
les
test
daa
lahf
sub
out
dec
or
pop
mov
fmul
jmp
rcll
popl
aas
cltd
gs
cmp
inc
outsl
hlt
mov
lahf
leave
cmpb
ja
push
fdivrs
cmp
pop
jbe
mov
imul
ret
insb
cmp
mov
ficoms
and
fiaddl
sub
int
or
shr
outsl
fisubrs
push
test
call
pusha
jle
inc
xchg
int3
mov
mov
mov
cmp
inc
sub
das
add
sub
push
pop
jo
test
push
fdivl
daa
fidivl
mov
mov
cmpsb
insl
fld
xor
std
and
inc
dec
jae
into
lcall
test
mov
mov
jbe
outsl
jge
or
mov
cmpsb
testl
mov
jecxz
cmp
add
mov
add
jmp
sbb
sub
ret
je
jmp
fistpll
call
sub
jae
push
lahf
cltd
gs
adc
pop
mov
xor
out
xor
dec
stos
inc
mov
add
cmp
call
add
and
or
rcrl
inc
mov
ret
mov
fcomi
or
and
ljmp
stos
outsb
repnz
imul
out
add
movsl
jae
pop
push
mov
push
jno
mov
and
or
rorl
jl
std
cmpsl
add
arpl
out
push
call
adc
sbb
ss
pop
scas
sub
sbb
in
mull
lds
xor
or
subl
imul
dec
int3
outsb
leave
xor
cld
xchg
push
dec
in
hlt
mov
ljmp
int
pushf
stos
shll
xchg
xor
jecxz
lahf
repz
pop
and
jno
pop
xchg
xorb
cmpsb
mov
lock
mov
sti
bound
gs
sbb
xlat
adc
sub
rcrb
je
mov
add
mov
mov
js
and
in
or
push
andb
pop
ja
xor
idivb
sbb
addr16
mov
add
call
jmp
aad
adc
xchg
inc
clc
lods
cmpsb
push
cmp
jo
sub
sarl
mov
and
cwtl
xchg
clc
inc
popf
add
add
push
xor
icebp
imul
pop
in
sub
shr
shll
or
xlat
mov
cld
sbbl
test
sbb
add
testl
cld
jmp
andb
bound
jle,pt
cmpb
xchg
xchg
cmp
mov
popf
pop
mov
and
cwtl
movsl
or
jl
xchg
dec
gs
bound
sbb
call
dec
cmpsb
test
loope
dec
mov
cmpsb
xor
xchg
mov
dec
lret
xchg
jl
movsb
xor
mov
or
xchg
xchg
hlt
andb
add
xchg
jp
loopne
test
es
jns
jo
jge
inc
pop
lret
xor
push
sbb
pushf
jge
mov
push
icebp
ret
sti
roll
adc
cwtl
jp
mov
lcall
rclb
adc
insl
pop
jl
out
mov
lahf
hlt
inc
jmp
pop
icebp
dec
ss
das
or
pop
xor
sub
dec
out
movsb
and
sti
js
or
mov
inc
pop
and
lcall
leave
pop
scas
mov
stc
mov
xchg
fldl
sub
cltd
xor
jne
outsb
and
sbb
bnd
or
lock
mov
and
add
jo
cmpsl
push
add
xchg
push
iret
insb
sub
xchg
imul
jl
mov
xchg
fidivs
adc
nop
sub
pop
cmp
data16
jge
fsubs
sub
fdivs
bound
xchg
or
fdivrl
out
mov
cli
xor
hlt
cmpsb
idivl
push
cmp
and
data16
shll
mov
pop
in
jle
popf
scas
add
cmp
insb
cmp
js
loopne
sub
subl
jno
jl
mov
lock
cs
mov
xor
xchg
popa
pusha
in
imul
scas
push
or
jb
das
mov
cmp
aam
mov
dec
loope
push
ds
inc
xabort
sahf
mov
idivl
fisubrs
outsb
xor
addr16
or
loop
jl
jno
pop
xchg
inc
inc
es
mov
andb
pop
and
inc
inc
fwait
aas
pusha
orl
cld
and
xchg
jae
dec
jbe
pop
mov
scas
sbb
hlt
fwait
push
in
div
outsb
imul
sub
xchg
dec
mov
lods
dec
mov
cmp
mov
movsl
ret
xor
sub
int3
lret
sbb
popa
pushf
sbb
push
mov
jb
out
sbb
cmp
pop
stos
mov
ljmp
and
mov
inc
test
fstpl
ficompl
pop
cld
psrad
sbb
movsl
scas
xor
repz
rcr
xchg
jmp
sub
ljmp
in
inc
lods
