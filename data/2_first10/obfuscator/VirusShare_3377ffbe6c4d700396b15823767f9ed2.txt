jmp
sub
xorl
push
out
sub
mov
or
aas
filds
call
adc
inc
add
adc
and
or
test
adc
inc
test
push
addr16
insl
or
xor
adc
dec
and
push
test
pop
imul
xor
push
pop
jae
sbb
dec
pop
dec
not
data16
xor
adc
aaa
idivb
mov
sub
test
add
add
mov
sub
nop
mov
adc
sbb
lea
add
dec
nop
add
push
insb
imul
dec
or
push
outsb
fwait
adc
or
outsl
imul
movsb
rclb
mov
test
xor
test
incl
pop
add
inc
pop
pop
pop
ret
dec
mov
pop
ret
pop
pop
ret
mov
popa
xor
add
adc
add
insl
leave
sub
ds
idivb
adc
xor
pushl
mov
lods
std
decl
push
cwtl
inc
add
add
adc
add
ret
add
mov
cwtl
subb
adc
test
or
inc
mov
inc
cmpsb
jae
push
adc
fildl
ss
cld
add
add
sbb
mov
lcall
sub
inc
out
jmp
xchg
insb
push
add
movsl
neg
add
imul
mov
add
dec
and
jne
es
insl
jg
inc
pushf
add
mov
add
or
jl
push
inc
imulb
mov
adc
test
dec
jg
aas
dec
add
dec
sbb
insl
pop
dec
mov
jmp
dec
adc
jbe
jg
in
add
add
test
add
roll
xchg
add
jg
out
push
test
andl
dec
shl
cltd
stc
push
and
negb
in
fildl
icebp
or
int
or
add
jecxz
std
mov
push
in
pushf
movb
dec
pushf
fs
jg
mov
mov
sbb
dec
inc
mov
add
push
or
mov
cmc
xchg
mov
out
sbb
and
mov
adc
pusha
hlt
mov
adc
sbb
and
add
insb
scas
pushl
out
cltd
and
ffree
sub
test
outsl
jmp
sarl
fsubrs
push
sub
push
mov
das
or
add
imul
add
iret
add
add
or
xchg
xchg
jno
sbb
mov
add
add
lods
pop
inc
jge
add
jmp
cmp
sub
mov
loop
mov
cmp
pusha
mov
and
in
fwait
aam
fs
push
mov
mov
mov
in
lcall
jo
jmp
fcomps
dec
popl
hlt
mov
jg
mov
push
test
jle
dec
add
xchg
xchg
inc
adc
pushf
jl
mov
xchg
mov
icebp
neg
rol
ret
fidivl
mov
cmp
jo
mov
pop
or
sbbl
sub
stc
dec
and
or
add
ljmp
loop
xor
push
aad
cmp
scas
out
rcll
in
cmp
das
sub
sbb
mov
neg
fimull
cmpsl
sub
add
fisubrl
inc
mov
pop
mov
mov
mov
and
add
mov
decl
outsl
stc
imul
add
jno
outsl
clc
repnz
add
push
adc
mov
lret
adc
push
cmpsb
push
jge
js
sub
mov
jl
push
xchg
add
in
call
das
fdivl
sbb
sbb
add
data16
mov
and
sub
outsl
daa
shlb
jle
outsb
mov
mov
leave
icebp
fstpt
mov
push
aaa
add
subb
fistpl
xor
call
cmp
scas
in
lahf
shlb
jne
xor
add
sbb
clc
add
mov
in
loope
xor
in
pop
sbb
int
dec
ss
ret
add
cmpsl
imul
mov
and
fists
or
clc
arpl
sbb
popl
adc
into
push
push
loop
push
outsl
pop
add
jl
out
mov
push
mov
in
outsl
mov
push
jns
push
fildl
mov
mov
ret
mov
mov
inc
not
mov
and
and
int
es
int3
jne
mov
and
mov
jge
fucomi
int
sbb
mov
sbb
jmp
dec
mov
xlat
fdivrl
push
add
cmp
sti
fisttps
not
dec
mov
mov
enter
cltd
inc
insl
imul
or
div
sbb
push
pop
mov
mov
mov
mov
dec
inc
fldt
les
in
mov
adc
insb
aas
push
fistpl
xchg
in
adc
push
jnp
jle
adc
and
into
lret
sub
jecxz
dec
cmc
pop
cmp
outsb
rclb
iret
lretw
das
add
xor
les
mov
neg
ds
push
add
icebp
inc
popa
aam
aaa
mov
pop
es
inc
mov
pusha
ja
ljmp
cmp
popf
or
add
inc
imul
dec
call
jle
adc
mov
mov
stc
mov
repz
in
mov
lock
fbstp
xlat
pusha
jge
sbb
pop
sub
or
fdivs
push
call
mov
inc
loope
ds
mov
cs
in
xor
arpl
mov
jne
adc
call
mov
fimuls
add
sub
push
dec
or
fnsave
push
jne
sbb
xchg
mov
pslld
xor
fsubr
sub
mov
cmpsb
inc
in
imul
mov
push
push
add
ja
jge
mov
leave
push
xor
adc
mov
ds
push
adc
ljmp
mov
dec
cmp
mov
in
inc
xchg
ret
mov
xchg
jg
sub
out
jecxz
xchg
mov
inc
cmp
push
sbb
xchg
addb
enter
adc
loopne
push
add
add
inc
fwait
data16
out
bound
mov
repz
push
add
and
push
je
cli
outsl
mov
sbb
add
repnz
or
xchg
or
jns
stos
pusha
adc
cmp
mov
mov
fnstcw
push
mov
addr16
lods
mov
or
popa
jg
add
pop
js
dec
jl
add
in
shl
daa
pop
sbb
jl
hlt
or
into
stos
xor
sub
or
cmc
aas
jo
jno
jns
lret
or
int3
inc
dec
fidivrl
mov
pop
mov
adc
mov
xchg
mov
push
cmp
jle
mov
movsl
mov
cmp
push
adcl
inc
leave
fimull
inc
testb
and
loopne
lds
adc
adcb
cli
push
decl
xchg
dec
stc
add
cmp
icebp
idiv
jmp
dec
push
les
stos
add
add
xchg
das
ret
xchg
clc
das
jg
lahf
jb
movsb
adc
rolb
dec
and
jo
jg
in
adc
enter
test
jg
idivb
mov
push
stos
sar
xor
xchg
mov
add
mov
sub
stos
fnsave
add
scas
mov
out
pop
jns
mov
xor
jg
cmp
leave
pop
rcrb
es
xchg
pop
inc
insl
mov
and
insb
out
xor
or
push
jns
jnp
outsl
mov
mov
rorl
stos
nop
mov
sub
push
mov
fcomi
add
ret
call
or
es
mov
sub
push
xchg
cmp
push
repnz
les
add
cmc
repnz
negb
add
cs
daa
lods
jge
cmp
adc
sub
in
push
repnz
adcb
mov
pop
jle
out
out
xchg
mov
xor
sbb
cltd
icebp
test
cs
xor
add
push
pop
mov
aaa
hlt
sub
push
andl
xchg
sub
xchg
loop
aaa
cli
jmp
sub
dec
mov
scas
xor
and
fimull
add
add
adc
jmp
pop
mov
inc
test
adc
dec
js
pusha
shr
ret
inc
or
mov
pop
pushl
mov
push
popa
jb
add
push
dec
pop
jle
into
add
sub
adc
aaa
cs
pop
xor
xchg
xor
inc
popa
aam
mov
or
lret
mov
and
add
dec
mov
fs
add
lea
mov
fwait
loope
adc
sahf
mov
jg
push
mov
mov
xchg
jmp
iret
fs
insb
das
pop
adc
in
jge
sub
sarb
outsl
or
je
mov
mov
mov
and
ffreep
inc
mov
adc
hlt
sub
adc
fistpl
repz
lds
jle
fnstsw
lods
sbb
and
and
test
roll
sub
popf
push
lret
icebp
lods
mov
mov
jle
into
push
sbbl
pop
push
dec
xor
fistpll
inc
jg
pop
adc
and
daa
stos
mov
jb
cmp
shl
retw
dec
sarb
xchg
arpl
repnz
fnstcw
add
inc
sbb
mov
fimuls
inc
sti
call
push
xchg
mov
mov
movb
lret
dec
dec
std
and
outsl
mov
xor
aas
lods
adc
xorb
jle
cmpsb
or
cmp
adc
decl
cmp
aaa
and
and
jl
add
gs
mov
sbb
hlt
inc
mov
in
les
push
inc
mov
hlt
pop
push
adc
push
test
mov
in
mov
nop
lret
lret
nop
mov
sbbb
les
imul
sahf
add
xchg
and
push
movsl
subl
xchg
mov
andb
inc
and
aad
or
sub
pop
mov
mov
xchg
cld
rcr
mov
bound
pop
dec
jecxz
aad
insl
mov
inc
fldenv
sbb
or
js
or
push
cmc
push
loope
divb
rclb
out
push
loopne
ret
pop
mov
lods
outsl
mov
lahf
aam
xchg
mov
test
add
shlb
xlat
cmp
in
mov
sbb
or
mov
pop
outsb
aam
adcl
stos
cld
push
pop
enter
pop
sbb
add
push
xor
js
push
jecxz
lret
sti
pop
incb
push
or
jge
sub
push
push
inc
pop
lret
mov
std
outsl
daa
xor
and
movb
pop
stos
paddd
dec
lock
cwtl
or
mov
in
xor
adc
dec
sbb
scas
xor
aad
stos
fistl
mov
adc
xor
lea
imul
cmp
adc
lods
je
mov
or
push
in
jo
nopl
test
jp
jb
das
lock
lock
dec
insl
mov
xchg
mov
lret
push
into
mov
cltd
mov
and
sbb
jecxz
jo
movsl
fstpt
lods
push
inc
inc
or
cwtl
add
cld
cmp
incb
or
cs
and
dec
loopne
fs
mov
jb
xchg
test
aaa
lea
lahf
dec
pop
outsb
fisttpll
push
inc
test
mov
loope
mov
cld
sub
lcall
mov
xor
fwait
fs
xchg
add
xchg
push
mov
cmc
cmpsb
sbb
xor
das
adc
jo
jg
stos
and
mov
sbb
mov
test
jbe
in
add
jg
jecxz
imul
aas
addl
clc
xchg
jle
add
inc
xchg
mov
movsl
cmpsb
or
jno
cmp
test
fdivrl
dec
xchg
out
xor
cs
jg
mov
ds
mov
push
decl
inc
cwtl
popf
std
jg
out
inc
hlt
sub
mov
fisttpll
aad
test
dec
and
das
mov
mov
pop
xor
ret
or
sbb
add
mov
mov
dec
insl
mov
in
inc
das
and
shl
pop
lods
daa
cwtl
push
cli
leave
movsb
mov
mov
inc
in
mov
setnp
scas
and
inc
js
fistpl
fs
dec
ljmp
sbb
popa
jns
rcrb
lds
outsl
mov
fbstp
push
ret
test
xchg
popa
clc
xchg
push
insb
push
cmp
jg
aam
xorl
cltd
pop
pushf
inc
adc
inc
or
add
xchg
lea
fists
jno
ret
push
in
fistpl
mov
loope
push
stos
mov
adc
in
xchg
jecxz
pop
rcll
ljmp
push
dec
and
stc
push
xor
mov
xor
ss
fcomps
lods
dec
jecxz
sti
arpl
ret
add
inc
jl
add
movsl
decl
pop
int
loop
push
pop
pop
push
push
setp
enter
hlt
pop
sbbb
sub
dec
mov
pop
sbbb
in
mov
popa
imul
sbb
xchg
bound
cmc
or
cmp
fsts
sarb
loopne
xchg
sbb
movsl
sub
mov
sub
lahf
repz
mov
dec
sbb
ja
dec
gs
ja
insl
jmp
ficompl
pop
push
or
cmp
shrb
fdivs
mov
ljmp
inc
mov
add
cmp
xor
sub
xchg
div
mov
notb
add
or
inc
adc
loop
clc
push
loope
je
cmp
int
push
xchg
loope
xchg
outsb
add
sbb
jb
push
cmp
rolb
sub
push
adc
jge
fs
push
int3
push
mov
or
pop
push
test
stos
loop
and
pop
outsl
lods
mov
xchg
sar
pop
ret
mov
shl
inc
or
sub
popa
mov
xor
push
dec
pop
rcr
aaa
mov
xchg
cs
pop
daa
adc
fcmovu
fcmovu
jbe
lahf
mov
lret
out
cltd
mov
and
xlat
jbe
loope
lahf
ret
lds
sub
lret
fadds
loopne
xchg
fmuls
dec
mov
in
cmp
aaa
jle
addl
test
add
mov
shrl
imul
mov
jmp
imul
add
mov
pop
daa
sub
lods
mov
loopne
fsubs
sbb
mov
daa
fdivl
shlb
call
ljmp
testb
push
adc
xor
push
sarl
lret
mov
mov
sub
push
arpl
mov
push
pop
out
mov
xor
outsl
sub
loopne
leave
scas
or
inc
and
jle
inc
inc
lahf
mov
sarb
push
jge
test
rclb
outsl
pop
push
mov
dec
xchg
jg
out
call
dec
inc
pop
sbb
mov
scas
or
out
add
mov
pop
jge
add
cs
sar
fistl
insl
mov
faddl
mov
popf
inc
mov
dec
push
jg
dec
xor
or
push
imul
pop
sub
xchg
mov
insl
add
sub
inc
sarl
out
decl
das
insb
fadds
popa
jbe
dec
inc
dec
xor
sub
rorb
push
test
inc
xor
push
aaa
shlb
scas
mov
cmc
pop
lock
pop
push
pop
rolb
lret
sbb
pusha
pop
arpl
mov
addr16
dec
inc
stos
jp
pop
pop
inc
adc
aaa
mov
push
rol
stos
add
dec
mov
lods
cs
push
or
std
outsl
fwait
jecxz
sub
sub
dec
call
adc
adc
insl
clc
mov
popa
cld
insb
mov
test
add
xchg
jg
dec
jo
push
scas
rcrl
enter
sub
test
dec
adc
div
sbb
mov
xor
daa
mov
repz
rolb
inc
xchg
ja
dec
repnz
mov
or
test
push
js
std
loop
jmp
cltd
add
sub
lcall
inc
or
inc
cmp
mov
add
test
jg
mov
inc
mov
pop
or
and
adc
adcb
jmp
push
cld
xchg
sbb
es
mov
test
adc
jns
arpl
push
call
dec
xor
mov
sbb
mov
pop
mov
dec
stos
pop
cmp
adc
jg
frstor
jbe
xchg
stos
adc
rclb
clc
adc
or
lods
das
sbb
stos
mov
outsl
les
xor
push
push
xchg
fsubrl
mov
dec
add
out
xorb
push
push
lahf
pop
xchg
mov
xor
sub
jg
scas
jns
xchg
fisubrs
divl
jl
mov
inc
pop
adc
mov
sbb
add
sub
fldenv
inc
or
push
inc
or
push
loope
enter
mov
sti
pop
orl
sbb
jno
sub
cld
inc
frstpm(287
ja
daa
call
imul
sub
orb
push
jg
test
cwtl
xor
ficoms
mov
loopne
ret
bound
lahf
out
int3
stos
cmp
call
adc
mov
pop
push
add
xor
mov
outsl
orl
jg
adc
jmp
xor
push
jg
mov
stos
xchg
pop
dec
jne
adc
enter
pop
push
cltd
sub
test
lret
add
incl
data16
push
and
jnp
in
mov
or
lods
inc
pop
test
mov
dec
outsl
jg
mov
insb
out
mov
push
xor
movsl
lea
imul
int
adc
loopne
adc
inc
or
pop
popf
lock
adc
sub
mov
push
scas
cmp
xor
jne
add
pushl
pop
roll
pop
cmp
int3
andl
addb
push
or
icebp
decl
jmp
pop
orb
pop
cmp
xor
dec
lods
cld
inc
or
add
ret
add
xor
jmp
hlt
lods
dec
in
testb
test
xor
enter
lds
sbb
sbb
int3
mov
enter
cmp
fnsave
or
and
hlt
or
movsl
scas
icebp
rcll
clc
movsl
fbld
xlat
add
pusha
pushf
cwtl
adc
rcrl
std
push
or
and
pusha
dec
jno
das
int
jmp
clc
outsl
mov
cltd
mov
in
repz
sbb
xchg
pop
xchg
fcoml
js
subl
mov
aas
imul
imul
aam
je
inc
adc
shlb
add
repz
jns
aas
insl
xchg
mov
mov
cmp
push
ja
xchg
mov
int
xor
pop
mov
inc
cli
and
xor
jne
insl
xchg
pop
jae
test
jnp
cmpb
pop
or
jnp
addr16
insl
adc
in
mov
in
dec
mov
pop
cmpsb
or
cmp
push
movl
scas
add
stc
jae
nop
and
sti
mov
outsl
incl
pushf
rcrb
mov
inc
mov
mov
pushl
mov
pop
sbb
mull
shl
push
mov
jo
mov
cmp
ror
mov
enter
inc
jns
popf
jno
ss
mov
mov
in
adc
or
test
jecxz
std
loope
pop
aam
cmp
and
bound
inc
fldt
push
pop
std
rcll
pop
mov
lods
inc
in
addb
and
jmp
movsl
push
test
or
lret
lahf
pushl
dec
fstpl
repz
xor
sub
jecxz
or
loopne
sarb
cmp
mov
loope
or
dec
xor
and
orl
sbb
je
sub
test
push
test
or
mov
sbb
mov
mov
jmp
in
xchg
pop
incb
insb
mov
mov
or
js
push
push
int3
dec
push
mov
out
pop
pop
imul
mov
mov
push
xchg
stos
mov
push
mov
cwtl
jge
mov
jnp
mov
adc
test
sbb
push
fldl
mov
std
int
add
out
gs
inc
jo
lods
mov
and
or
repnz
pushl
cmp
mov
addr16
jbe
dec
fidivs
sub
and
jo
push
lret
dec
data16
les
jg
dec
jns
int
stc
in
fcomps
sti
pop
mov
imul
adc
addr16
jmp
pop
push
negl
dec
movsl
cli
cmp
add
adc
cmp
addb
xchg
mov
lods
jns
pop
pop
adc
clc
add
xchg
aam
cmp
mov
mov
push
add
std
push
test
idiv
imul
gs
test
push
cmc
mov
inc
into
mov
mov
cld
scas
fadds
testb
mov
or
mov
jbe
xchg
ja
mov
arpl
push
in
loop
or
adc
sar
and
push
test
adc
sbb
fcomps
lock
push
jbe
sbb
add
jg
cld
sub
xlat
pushf
mull
inc
dec
xor
mov
xchg
and
ja
inc
insl
jge
push
add
ret
mov
or
mov
icebp
incl
rol
inc
in
jae
fmull
sbb
inc
inc
add
pop
jno
rclb
rclb
sub
mov
push
cmp
adc
mov
xchg
add
movsl
js
adc
in
xor
xrelease
sub
dec
add
sub
ljmp
fcomip
filds
mov
xor
out
stc
and
orl
cmp
inc
mov
or
mov
mov
imul
stos
jbe
adc
adc
dec
adc
imul
loope
fdiv
in
push
fsubs
shlb
rorl
add
or
jecxz
mov
dec
mov
add
jae
or
add
mov
ljmp
mov
and
fsubs
imul
movb
inc
enter
mov
out
fistps
outsl
jp
push
sbb
inc
out
fdivr
cmpsl
add
popa
or
lret
out
add
push
fdivr
orb
jnp
adc
mov
ds
shll
mov
aam
shlb
rcrl
dec
scas
cmp
cmpl
faddl
xchg
adc
or
add
mov
cs
dec
jne
or
lods
or
cmp
dec
mov
insl
js
mov
enter
outsl
ret
and
mov
push
stos
in
ffree
gs
sti
cltd
repnz
and
cmp
sbb
mov
pop
xor
or
adc
arpl
jbe
mov
mov
lahf
add
sbbb
mov
or
dec
lods
bound
mov
cmp
lock
cmpsl
pushf
adc
sub
sub
sarb
shrl
add
dec
cwtl
inc
add
mov
jbe
pop
mov
fmull
jne
bound
cmp
push
xchg
ud0
push
call
insb
push
es
ds
ja
lret
push
clc
mov
or
adc
adcb
lcall
ret
negl
sbb
adc
ds
jl
adc
daa
enter
xchg
pusha
add
orb
inc
arpl
jmp
popa
mov
mov
sub
xor
pop
jg
ret
jnp
leave
ret
sbb
pusha
cs
sahf
sub
pushl
arpl
mov
jmp
icebp
push
xchg
fmuls
scas
cmp
aas
sbb
arpl
sub
movsl
aad
inc
inc
add
mov
mov
loope
sub
jb
add
add
and
iret
xlat
in
push
stos
jmp
xlat
cwtl
addr16
xchg
jno
icebp
sub
sahf
xor
lret
out
or
std
rorl
cmp
and
sub
and
ffree
mov
ds
jne
stos
int3
jae
xchg
cmp
push
adc
xchg
xor
xchg
sub
fildll
mov
and
adc
ret
notb
rcrl
dec
sub
push
sbb
or
andb
int
gs
adc
cmc
xchg
inc
aad
mov
popl
gs
gs
clc
gs
mov
loopne
sti
cs
jmp
adc
sahf
je
rcr
jne
mull
lock
cli
mov
inc
jns
std
lods
xor
loope
mov
leave
dec
lock
icebp
pop
xor
out
nop
add
mov
bswap
ret
add
out
fsubs
sbb
lds
fldenv
sub
popa
rol
outsl
jne
cltd
lahf
dec
out
mov
dec
push
aas
orl
or
and
imul
add
xor
out
push
scas
and
dec
cmc
sbb
xor
cli
ret
into
out
add
sbb
ss
add
test
dec
cmp
clc
or
je
pop
lock
push
hlt
sub
mov
mov
cmp
fisubrl
loope
stos
mov
jp
fcmovb
pop
cmp
mov
dec
xor
rolb
hlt
cs
pop
jp
rorl
repnz
and
cld
push
fldcw
and
jp
ficompl
dec
loopne
sbb
bound
add
mov
jbe
repnz
add
sub
aaa
cmp
push
in
mov
js
cwtl
inc
inc
adcl
stos
sbb
jge
jle
cld
and
sbb
sbb
mov
lods
pusha
rcl
adc
shlb
and
inc
inc
in
pop
divl
mov
mov
fwait
or
xchg
int
lock
mov
push
cmpsb
gs
fstpt
dec
cmp
cld
pop
pop
sbb
sbb
or
sbb
fs
add
xor
sbb
or
cltd
popf
fstps
cmpsl
jns
out
repz
mov
sti
ja
and
cmc
xchg
lods
dec
std
inc
sub
and
mov
jno
jecxz
push
ljmp
cmp
cmp
add
out
pop
popf
jp
sbb
in
in
jp
insb
dec
sti
bound
lock
mov
cld
aad
dec
sahf
xor
sub
or
cmp
dec
jae
hlt
adc
or
pop
daa
sbb
push
pop
jmp
mov
lods
cwtl
inc
xor
cmpsl
fcoms
push
test
inc
fisubrs
or
mov
inc
xor
popa
cmpsb
xchg
push
sub
xchg
xor
xor
sti
cld
frstor
mov
sbb
xor
mov
in
insb
add
in
jnp
mov
les
fwait
adc
adc
fcmovu
imul
popa
lahf
je
hlt
es
mov
inc
loope
or
ficomps
repnz
ss
jp
adc
in
hlt
add
rclb
addl
sbb
std
rcr
pop
cli
in
push
xchg
adcl
mov
mov
mov
pop
movl
pop
movsb
aas
xchg
loop
jmp
nop
push
test
add
jg
in
jmp
or
cmp
mov
dec
jns
ret
inc
inc
fildl
jns
mov
mov
pop
rcl
fimuls
int3
iret
filds
add
pop
adc
inc
ja
mov
add
add
xchg
jp
fucomp
add
add
and
ljmp
repnz
icebp
clc
stos
std
or
sbb
inc
jg
add
xor
add
rolb
cmpb
adc
push
sbb
stos
push
add
les
mov
mov
cmc
stos
add
into
xlat
cmpl
fdiv
mov
xor
inc
les
shr
iret
xor
lret
pushl
add
js
popf
jg
sbb
or
mov
aam
xor
cmpsb
and
sbb
stc
pop
mov
lret
dec
aas
lahf
mov
out
xchg
pop
cmp
jne
ret
push
inc
jnp
mov
and
and
cli
mov
push
push
addr16
cmp
cld
jge
xlat
lret
push
addr16
mov
sbb
int3
lock
and
cli
dec
jecxz
sbb
and
roll
mov
pop
or
imul
cmpsb
lock
lcall
and
cmpsb
mov
int3
lods
dec
or
xor
add
cmpl
or
xchg
test
xchg
pusha
or
cmc
cmp
jle
or
ljmp
or
ficoml
icebp
aad
sub
push
xchg
shrb
add
lahf
out
xchg
fldt
jbe
sub
das
add
sub
sarb
adc
pop
in
mov
andb
cmp
outsl
das
imul
hlt
ror
and
xchg
add
dec
pop
adc
mov
dec
out
lock
add
add
add
or
jecxz
sbb
adc
clc
inc
std
xlat
pcmpgtb
mov
push
outsl
or
pop
mov
xchg
pop
insb
xchg
fmul
pcmpgtb
add
cmp
xor
das
cwtl
inc
test
pop
jle
filds
fldt
and
ja
jl
fbld
mov
push
cld
inc
incl
inc
adc
add
add
repnz
jmp
sub
or
mov
adc
dec
cmp
jl
imul
pop
add
push
add
and
pop
pop
movsb
xchg
ljmp
jp
pop
shll
jne
pop
pop
ja
pushl
inc
jne
cmpsb
in
outsl
mov
cld
pop
push
scas
sbb
add
mov
inc
mov
push
ret
inc
jmp
dec
mov
mov
aad
std
jg
push
inc
mov
aam
ret
mov
mov
add
jecxz
lock
mov
adc
addr16
pop
cltd
rorb
nop
sub
cmp
addr16
mov
mov
repz
dec
add
ss
cmp
jbe
add
in
fldl
add
inc
and
sbb
sub
add
lods
inc
inc
push
and
jmp
insl
jo
decl
mov
mov
pop
sub
in
int3
test
xlat
loopne
cmp
lret
aaa
dec
adc
pop
jle
cmp
push
mov
es
je
dec
mov
out
fsubr
push
xchg
cmp
ret
js
add
andb
mov
xor
inc
outsl
leave
mov
daa
or
and
mov
mov
jb
sub
cld
jecxz
jl
dec
xor
adc
shlb
into
adc
cmp
nop
fcomps
rolb
add
ffreep
mov
xor
neg
outsb
loop
lahf
pop
insb
pusha
mov
not
movsl
or
xor
mov
mov
mov
mov
aam
sarl
and
bnd
inc
or
push
loope
out
ljmp
or
loopne
stos
mov
and
mov
imul
loope
pop
cld
filds
mov
mov
adc
or
sub
das
or
mov
cmpsl
sub
xchg
fisubs
push
cwtl
sbb
mov
subb
sti
outsl
lea
test
rcll
push
jmp
push
es
cs
loope
pop
fsubs
mov
ret
stos
mov
mov
popf
fdivs
jns
and
fwait
in
pop
mov
and
xlat
in
inc
add
mov
stos
hlt
cmp
add
mov
xchg
lods
orb
xor
add
cwtl
or
cmp
stos
mov
stos
pop
testl
jge
outsb
dec
sbb
jbe
cmp
mov
mov
in
adc
das
mov
mov
scas
jne
test
pop
add
outsb
dec
arpl
out
mov
adc
loope
sbb
push
insl
sub
jecxz
inc
mov
popa
and
std
outsl
add
and
mov
imul
outsb
jmp
mov
jl
jo
lea
stos
in
mov
clc
ret
adc
or
mov
std
std
sub
sub
mov
push
movsl
iret
sub
inc
outsb
pop
xor
cmp
xor
lods
mov
lods
jbe
and
mov
mov
adc
lahf
and
pop
adc
sbb
repz
test
push
js
pop
mov
in
out
fcomps
jns
int
rclb
addb
int
and
push
fadd
jmp
in
pop
sarb
sbb
dec
and
xor
add
scas
inc
loopne
adcl
mov
je
call
stos
testl
aam
loope
fmull
ret
cwtl
add
outsl
aaa
loop
xchg
js
jmp
pushf
sub
test
fneni(8087
cli
mov
push
sbb
lahf
and
push
insl
subl
jo
pop
jle
ret
in
jne
das
mov
and
lret
sbb
pop
int
in
int3
fldl
add
jl
and
jb
or
push
mov
mov
cmp
leave
ss
in
mov
stos
leave
clc
sbb
leave
movb
dec
daa
sub
loope
les
cmp
shrb
test
push
add
cmc
das
lds
std
out
inc
jle
push
adc
sub
mov
daa
xchg
loop
add
mov
repnz
cmc
lea
inc
nop
les
mov
sub
les
add
sahf
jg
mov
js
mov
sub
sub
push
mov
in
idivb
xchg
cmpsb
pushl
and
mov
sub
jns
ret
fcomp
inc
pop
ljmp
cmp
cmp
xor
pop
mov
ja
cmc
or
rorb
push
dec
idivl
xrelease
xchg
bound
pop
jnp
scas
into
sbbl
fidivrs
and
adc
or
dec
lea
cmp
xor
xor
jle
push
mov
aam
add
xchg
clc
cmp
sete
cmc
lock
mov
inc
mov
cmc
jle
adc
sahf
push
lock
dec
in
lods
bound
mov
mov
pop
inc
adc
aaa
jae
lahf
clc
adc
add
in
xor
push
push
inc
aam
jbe
add
mov
xor
lar
inc
push
push
clc
jl
inc
or
ffree
arpl
jle
cs
sbb
xchg
xchg
cltd
pop
fbstp
call
cmp
mov
movsb
adc
mov
pop
mov
jp
ffree
mov
fdiv
inc
sti
repnz
orl
lock
xor
test
push
mov
sbb
push
xchg
mov
dec
inc
add
dec
ds
insb
inc
mov
or
sarb
jo
cs
lock
daa
pop
insb
push
stos
mov
ljmp
cmpsb
call
mov
sub
icebp
ds
inc
add
loopne
fistpll
add
push
popa
sbb
jmp
and
inc
insl
xchg
cwtl
mov
inc
mov
or
push
pusha
jo
inc
adc
inc
loopne
dec
mov
cmpl
addb
push
fbld
fidivrl
imul
fidivrs
rorb
inc
push
adc
rclb
or
or
jge
mov
sbb
jg
call
or
mov
mov
scas
repz
into
inc
mov
xchg
test
adc
mov
xchg
inc
xorb
shll
nop
mov
addr16
fadds
fs
stc
xor
push
mov
pop
cmp
pop
nop
js
mov
shll
stos
sub
add
pusha
call
ret
xor
jns
or
and
ss
jno
aas
mov
outsb
mov
xchg
in
out
add
fdivl
mov
mov
js
inc
in
xchg
sbb
xchg
sub
getsec
enter
or
sbb
stos
outsl
lcall
popw
ds
inc
pop
mov
mov
push
push
mov
loope
adc
lods
xor
insb
and
out
fwait
rorl
mov
and
or
fwait
stos
cmp
in
sub
and
add
loope
in
and
push
xor
lods
sbb
in
pop
fisttpl
adc
into
test
ja
aam
imul
mov
adc
mov
sub
not
push
in
lods
inc
dec
insl
cmp
call
adc
popf
out
test
push
pop
cmp
je
adc
stos
out
add
imul
fidivrs
push
push
add
mov
ljmp
push
mov
es
leave
leave
loope
add
xchg
loopne
adc
xor
pop
cld
adc
sub
aad
jbe
mov
push
push
jb
adc
xor
inc
or
mov
mov
adc
adc
mov
mov
jmp
sub
scas
add
mov
into
and
jg
popa
mov
add
dec
dec
rclb
mov
mov
stos
jae
aad
repz
insb
or
pop
jge
or
pushf
sti
add
enter
inc
mov
repnz
cmp
push
pop
std
std
addb
and
xor
adc
and
mov
push
data16
cmp
stos
or
adc
movsb
mov
sub
add
cli
or
mov
je
out
sbb
movsb
sbb
cmp
inc
or
jecxz
loopne
sub
pop
loope
push
mov
test
or
inc
add
aaa
or
dec
xor
jecxz
ret
pop
orb
shll
sbb
push
push
enter
jg
and
adc
mov
xor
cmp
divl
ret
pop
mov
sti
sbb
mov
orl
into
fstps
cmp
inc
into
adc
xlat
xor
loop
dec
call
push
push
push
dec
lock
and
mov
loope
xchg
int3
loope
sbb
cmp
icebp
jecxz
dec
testb
lock
dec
fdivs
inc
xor
sub
rclb
cmp
jbe
mov
inc
xchg
mov
dec
loop
inc
sti
pop
mov
nop
sbb
adc
je
or
xor
in
gs
add
inc
cmp
lea
mov
xchg
dec
jg
mov
mov
xchg
push
sub
lret
lds
pushf
loope
rolb
insl
into
daa
mov
pop
cmpsl
adc
repz
push
pop
cwtl
punpckhbw
push
mov
push
xor
sarb
rclb
adc
or
adc
imul
imul
inc
popf
push
shl
mov
lret
dec
addr16
or
mov
gs
repz
lahf
add
aad
sbb
pusha
leave
adc
mov
jg
xor
or
inc
xchg
push
or
jo
inc
repz
add
push
add
xor
stc
mov
mov
jb
mov
jne
jmp
add
jnp
das
mov
sub
out
and
mov
and
adc
xchg
and
cli
jo
loop
sub
loopne
sub
xorb
sub
mov
mov
popfw
dec
insl
fistpl
loop
mov
add
sysret
flds
sbb
inc
add
outsb
push
add
addb
loopne
cld
or
dec
ljmp
mov
insl
or
mov
cmpl
loopne
ret
inc
nop
outsb
add
test
xchg
sub
add
cmpsl
push
mov
stos
mov
int
pop
loopne
inc
cmp
shl
or
bound
lcall
mov
xlat
lods
insl
clc
add
adc
sbb
repz
in
jl
cltd
int3
jbe
add
aad
rolb
rorl
ljmp
adc
sub
clc
cltd
mov
cmp
jg
vpaddsw
iret
shlb
aas
sub
mov
push
insb
xorl
xor
adc
pushf
push
cmpsl
cld
push
ffreep
shlb
xor
fmull
push
mov
aas
add
adc
ja
call
add
pusha
mov
fnstsw
cs
jnp
cmp
push
das
sub
outsl
cmc
pop
ljmp
dec
xchg
inc
mov
fwait
jno
mov
mov
or
call
xchg
mov
test
sbb
and
lods
std
incl
fs
icebp
sub
dec
dec
jnp
mov
hlt
mov
and
dec
ljmp
in
dec
xor
xchg
and
orb
mov
scas
xlat
enter
pop
add
lds
push
movsl
jbe
sub
cmpsl
pop
add
jg
pop
and
jl
sbb
push
mov
adc
jp
in
pop
jecxz
pop
and
insl
and
xor
sbb
xchg
popa
addr16
fdivrp
cmc
cli
cmp
dec
orb
das
jp
mov
inc
orl
push
loop
or
xchg
inc
and
jecxz
popf
lds
push
xchg
jne
sbb
shrl
push
inc
add
mov
mov
dec
or
pop
add
sub
js
lret
push
in
pop
pop
cld
xchg
dec
out
sub
stc
jns
mov
mov
push
sbb
fsubr
arpl
addr16
out
mov
clc
lea
jo
dec
shll
dec
idivb
mov
and
fstps
sub
cmp
mov
daa
jl
test
inc
in
sbb
ljmp
bound
imul
inc
popf
aaa
mov
push
icebp
outsb
aas
mov
pop
xchg
cli
cmpsb
fs
jbe
test
test
xor
icebp
js
push
hlt
iret
mov
leave
xchg
xchg
jbe
das
push
adc
mov
add
sub
inc
loopne
cmpsb
xor
pushl
pop
or
jno
mov
nop
popa
out
add
in
das
dec
lcall
jp
mov
xor
mov
mov
mov
jae
movsb
jg
adc
rcrl
push
mov
stos
in
jmp
cs
arpl
xchg
rorl
adc
or
fistpll
pop
sbb
pop
sub
fisubrl
enter
lods
cmp
pop
inc
mov
adc
xlat
bound
imul
cltd
or
imul
pop
aad
shlb
cli
mov
or
add
and
fucomip
mov
and
fs
xor
jl
leave
adc
add
add
aaa
loop
adc
std
push
xor
lahf
adc
pop
jge
sub
push
jb
add
push
call
iret
add
lods
jp
ret
inc
dec
adc
ret
and
inc
and
fdivrs
mov
shlb
cmp
add
mov
adc
fst
test
bound
fcomps
mov
mov
cld
into
enter
cmp
mov
outsb
aas
xor
add
push
and
push
sub
xor
jne
jbe
jo
ja
sbb
in
inc
fistl
add
pop
and
add
adc
sub
push
pop
addr16
inc
aas
dec
xchg
adc
sub
mov
test
push
dec
test
mov
stos
xor
stos
xchg
hlt
std
pop
adc
sub
jp
dec
into
inc
push
jle
push
dec
insl
lods
push
pop
mov
dec
push
and
jo
outsb
or
sbb
jb
ss
jg
pop
pop
or
fmuls
mov
outsb
outsl
xor
addr16
fcmove
jg,pn
add
xchg
daa
mov
lcall
int
sbb
shl
xor
and
sbb
xchg
cmp
aad
jl
out
js
sub
lock
or
mov
dec
mov
xchg
inc
in
adc
loope
push
mov
leave
mov
mov
jle
fisubl
mov
mov
in
test
xchg
jne
xchg
icebp
cmp
and
jo
mov
inc
mov
movsb
repz
pop
call
push
dec
ja
sub
xchg
leave
add
inc
js
xchg
lcall
pop
jbe
jae
push
loopne
out
inc
mov
xchg
and
icebp
cmpsb
jno
vmovupd
sub
and
lret
fldl
addr16
fcomip
outsl
stc
add
adc
ds
pop
aas
cmp
mov
pop
inc
xor
es
fucomip
inc
repnz
mov
mov
adc
sbb
outsb
fdivl
mov
or
jmp
loop
loopne
idiv
and
jne
movsb
push
add
inc
and
adcl
lods
inc
rcrb
das
pusha
and
and
dec
add
hlt
sbb
inc
push
testb
xchg
das
add
pushl
data16
add
iret
movsb
subl
xor
or
fisubrs
cld
fildll
shll
aaa
jb
xor
add
gs
adc
div
inc
adc
inc
cld
mov
mov
add
test
jge
mov
andl
xchg
fisttpl
gs
adc
jl,pt
jp
xchg
insl
lods
aam
in
and
movsl
sarb
outsl
and
pushf
xchg
mov
sbb
and
mov
mov
sub
jmp
jbe
fildll
xchg
rcr
lock
add
xor
fidivl
clc
jns,pt
add
push
hlt
or
cmp
iret
mov
mov
adc
outsb
add
mov
das
fnsave
in
aam
test
aaa
ficoms
fldt
sub
cmc
stos
mov
push
sbb
mov
leave
in
cmpsb
incl
mov
sbbb
fmul
imul
stos
push
loopne
lods
jo
loopne
dec
mov
mov
hlt
cmp
sbb
pop
jl
pop
hlt
out
push
lods
add
push
push
jp
dec
rcrb
lret
adc
std
lea
xor
in
add
or
inc
mov
int3
inc
mov
testl
je
mov
hlt
js
lcall
inc
sbb
push
jne
rcrb
sub
mov
dec
ror
jo,pt
ljmp
add
sbb
dec
les
xorl
les
std
adc
ja
add
ljmp
les
cltd
push
les
pop
or
xor
sub
test
mov
outsb
pop
or
aad
lods
hlt
push
dec
and
inc
inc
repnz
nop
not
dec
adc
inc
dec
pop
sbb
cmc
or
push
adc
and
imul
repnz
adc
out
pop
mov
mov
stos
adc
or
push
rcl
xchg
jp
stos
test
dec
sbbb
adc
dec
mov
or
inc
loopne
xchg
add
lods
ficoms
push
test
or
out
mov
add
sub
sahf
testl
daa
add
push
iret
add
clc
add
pop
sub
adc
adc
pop
int3
fstl
orb
dec
sub
sti
inc
and
inc
ret
push
pop
ret
push
push
in
gs
clc
adc
mov
sti
lods
cmpsb
stos
shll
cmp
faddl
push
xor
addb
sbbb
sbb
pushf
sub
out
movb
sbb
out
xor
cld
adc
int3
mov
into
mov
in
jne
stos
and
add
add
sbb
xchg
xchg
sub
scas
add
jle
rorl
loopne
or
mov
clc
and
add
mov
and
js
or
mov
add
movsl
and
and
jb
sbb
fstpl
lock
mov
sub
arpl
int
jl
push
int3
pop
add
or
rolb
push
movsb
or
icebp
xchg
mov
popa
fsubrs
flds
sbb
int3
add
lcall
dec
aam
push
inc
mov
pop
out
test
clc
or
push
stos
idiv
adc
daa
pop
hlt
xchg
bswap
add
jmp
push
xchg
pusha
sbb
rorl
inc
sti
rorb
or
adc
pushf
push
push
xor
shl
sbb
lock
add
sub
mov
sbb
ljmp
lock
std
clc
mov
mov
mov
shlb
inc
add
or
adc
add
into
add
rolb
and
hlt
add
cmp
sbb
jnp
adc
lret
mov
aas
fldl
inc
std
pop
test
xor
adc
inc
js
mov
xchg
cmp
cltd
mov
ljmp
mov
push
cmc
cmp
clc
dec
sbb
pop
mov
and
int
sub
add
xor
iret
into
inc
sub
push
sbb
push
mov
jge
lret
fstps
into
jbe
xor
sahf
addr16
fadd
push
mov
fcompl
jle
js
cs
inc
fmull
add
movsl
fstps
in
xlat
pop
and
filds
stc
fnstcw
jmp
test
movsl
cmpsl
xor
mov
add
dec
push
in
mov
mov
add
push
and
das
pop
sub
cmp
mov
dec
sbb
jmp
fldcw
int3
ret
adc
or
xchg
sbb
outsl
jbe
lods
sbb
and
mov
nopl
xchg
cmpsb
mov
js
das
das
sbb
mov
or
inc
sbb
out
and
xor
shrl
outsl
fcoms
sbb
iret
lea
fidivs
push
in
dec
cwtl
lock
jae
xor
roll
xchg
jmp
into
cmpsw
pop
add
aaa
xor
push
xor
mov
lret
inc
adc
or
scas
movsl
rcll
fxch
inc
lahf
repz
jno
pushf
mov
xor
sbb
xor
add
xchg
sbb
lcall
clc
aas
out
pop
mov
cmp
jne
xor
leave
ret
dec
les
rcrl
lock
in
adcb
ret
pop
jle
bound
inc
sbb
aam
ret
pushf
mov
and
aam
jne
cmpsb
scas
and
sbb
sbb
push
inc
aaa
mov
or
add
int
mov
xchg
mov
mov
fcmovnb
mov
sbb
inc
pop
pop
mov
pop
rcl
adc
mov
sbb
mov
mov
fmull
mov
outsl
lods
subb
xchg
andb
mov
sarb
push
add
popa
shl
adc
cs
sbb
push
icebp
mov
mov
push
inc
in
pop
or
notl
call
int
repz
sub
adc
push
sahf
or
sbb
mov
dec
xor
adc
mov
int
scas
xchg
fsubrs
loopne
add
cmc
lea
cmp
leave
es
add
popf
les
cmp
and
rolb
jnp
jns
clc
cmp
mov
cmp
and
ror
outsl
dec
shll
les
jg
inc
jmp
push
mov
mov
ret
and
ret
popa
add
daa
xor
ret
adc
cmp
push
test
repz
les
in
dec
mov
cmp
sbb
push
ret
xchg
add
xor
hlt
shll
out
imull
mov
xlat
iret
mov
xor
xchg
pop
mov
pop
or
arpl
pop
xor
xor
dec
mov
mov
xor
cmp
fdiv
sbb
mov
sbb
mov
enter
push
xor
pop
jmp
cmp
int3
int
int3
sub
ret
inc
scas
popa
ret
adc
or
movsl
and
push
lock
lock
xchg
sbb
daa
dec
call
mov
or
test
shll
pop
lahf
mov
es
pop
adc
clc
scas
sbb
in
int
pop
pop
cmc
ret
fldt
cmp
mov
test
or
mov
nop
jle
pop
mov
lock
push
sub
int3
ret
inc
mov
in
jbe
jl
jle
lock
lret
add
add
loope
xchg
js
es
fnstcw
jmp
adc
and
gs
sbb
sbb
sub
repz
pop
pop
sub
push
sahf
in
or
lahf
cmpsl
and
xchg
adc
cltd
xor
stos
scas
or
fmull
adc
fcompl
dec
leave
bswap
loopne
cmpsl
into
loopne
outsl
adc
xchg
or
xor
scas
fimull
and
or
mov
out
mov
sbb
xor
ficoml
test
xor
outsl
dec
add
ljmp
sub
push
or
push
sbb
push
pop
out
push
ret
xchg
dec
or
pop
les
add
daa
in
sbb
loope
cwtl
xor
repz
test
fidivs
xchg
sub
mov
sub
cmc
lahf
in
out
xorb
rolb
and
scas
test
adcl
xor
js
xchg
movsb
loopne
adc
pop
and
mov
shll
jp
call
leave
inc
mov
cwtl
pcmpgtd
add
and
jg
jae
nop
add
call
leave
jae
sub
loopne
mov
inc
js
push
mov
xor
xor
push
push
rcll
mov
call
test
ja
dec
xor
mov
or
das
xchg
ljmp
adc
jb
or
nop
cwtl
mov
test
jecxz
xchg
movsl
loopne
bound
jp
insl
adc
or
vpcomw
mov
mov
mov
mov
sub
add
or
mov
pushf
xor
inc
repnz
out
subl
sbb
push
xchg
and
fsubl
loopne
dec
aaa
pusha
pop
subb
nop
repz
add
xor
cs
dec
xor
gs
ss
xchg
loopne
in
aad
add
pop
cmp
out
push
repnz
mov
push
rcr
push
cmp
cs
ljmp
push
addb
push
addr16
test
jae
cmp
pop
adc
and
push
add
iret
lock
jle
add
imul
pop
add
cs
outsl
mov
sub
or
dec
clc
js
dec
mov
out
mov
adc
inc
mov
add
cli
loopne
pusha
rcll
orb
cld
mov
ss
fisttps
cltd
mov
add
call
mov
test
std
stos
test
add
int3
out
add
not
leave
mov
or
ds
test
idivb
push
scas
sub
cltd
or
cmp
ljmp
loopne
mov
ljmp
sbbb
sub
xchg
dec
orl
incl
out
mov
aam
add
pop
ljmp
xor
icebp
cli
add
jl
add
nop
mov
or
mov
mov
lods
xchg
aas
cltd
push
cltd
cltd
test
cmpsl
es
mov
test
mov
jno
add
ljmp
dec
and
adc
add
jns
or
in
lcall
jg
smsw
add
int
or
mov
adc
sbb
imul
sub
loope
lds
jle
sahf
xchg
ljmp
popf
stc
clc
shll
into
bound
add
add
xlat
add
daa
sub
ljmp
dec
cmpsb
repnz
out
jmp
dec
mov
sub
sti
stos
add
xchg
pop
mov
ret
xchg
xchg
int
and
imul
cmp
and
mov
mov
pushf
xor
lahf
inc
dec
cli
mov
mov
inc
mov
mov
loope
cmp
push
push
sbbb
jmp
and
sbb
and
sub
jmp
cld
adc
xchg
pop
jg
fisttpll
shr
mov
icebp
das
cld
mov
sub
add
lods
and
iret
mov
dec
test
outsb
dec
cld
test
jmp
divl
add
or
pop
mov
stc
ret
push
lds
inc
scas
mov
inc
push
add
aaa
mov
inc
insb
pushf
aad
pop
inc
mov
mov
xlat
orb
insl
pop
clc
mov
mov
sbb
mov
in
sbb
nop
inc
jge
das
cld
xlat
sti
sbb
lds
add
fiadds
insl
in
mov
loopne
mov
cmp
sbb
inc
ficoml
push
fbld
call
addr16
xor
mov
add
sarl
idivb
adc
jl
cld
outsl
pop
mov
add
add
xchg
push
incb
imul
jb
mov
outsl
repz
rol
and
data16
pinsrw
add
sbb
aam
fmuls
test
pushl
xchg
dec
add
rolb
mov
ljmp
sbb
ds
es
push
clc
mov
incb
adc
add
dec
xchg
fildll
add
push
add
out
inc
jge
sbb
enter
adc
pop
in
ret
rcrb
add
aas
rcrb
xchg
lcall
testb
imul
loope
push
mov
add
push
test
cwtl
shlb
das
cld
inc
xchg
push
test
cld
and
mov
test
inc
outsl
add
stos
pop
clc
ljmp
rorb
mov
add
ret
lcall
test
pop
and
and
out
jp
jae
fcmovnu
dec
push
call
mov
decl
mov
push
std
add
out
loop
mov
out
outsl
adc
mov
inc
movsb
popa
loope
fbstp
arpl
mov
mulb
jne
add
adc
jg
sub
nop
push
xor
mov
pop
rcl
or
js
and
add
inc
flds
push
addr16
mov
jmp
mov
add
or
std
jg
test
or
inc
mov
mov
and
int
and
aad
rclb
lds
fisubrs
xchg
notl
outsb
cli
sbb
jne
es
push
fs
btr
mov
add
mov
pop
jg
jnp
mov
push
inc
mov
out
fnsave
inc
adc
decb
dec
dec
pushl
xchg
jge
std
jg
inc
popa
xlat
loopne
or
stos
out
jbe
pop
pop
lcall
jno
lods
jnp
or
sbbb
out
and
test
jg
cld
mov
loopne
pop
rclb
jo,pt
push
out
leave
sub
fcomps
idivb
fsubl
shl
xchg
adc
adc
mov
shr
clc
insb
jnp
push
scas
int3
cwtl
lahf
jb
les
mov
popf
or
fisubs
inc
sub
movsl
cmp
mov
dec
cmp
cmp
fbstp
das
cmp
out
test
sbb
fidivl
cmpsl
lock
movl
and
adc
pop
insb
dec
ret
add
push
xchg
lock
add
ret
pop
push
jge
cmp
cld
pop
fistl
ret
add
std
test
loope
xchg
mov
ja
xchg
test
rorb
movsl
or
push
xor
inc
dec
push
ljmp
pop
add
jnp
mov
ss
add
dec
cli
pop
mull
pop
ss
icebp
test
push
data16
in
jae
clc
pop
or
jge
jo
andb
popf
rolb
inc
or
sub
sbb
cmpb
mov
and
push
dec
jp
pushf
sub
xchg
ss
cmp
cld
cmp
mov
aaa
jnp
fcompl
cmc
adc
adcl
inc
mov
icebp
mov
jecxz
inc
loopne
cmp
pusha
mov
inc
call
add
and
mov
mov
push
cmpl
pop
adc
call
call
stc
adc
enter
pop
rcl
notb
and
test
loop
and
dec
or
pop
dec
sbb
inc
out
addr16
sbb
add
push
dec
aad
shll
fbstp
mov
ss
cmp
mov
mov
or
loopne
lods
adc
pop
adc
inc
sbb
out
insl
or
ljmp
clc
fbstp
xor
sub
xchg
inc
dec
add
lock
and
sub
sbb
jae
fmuls
fsubrs
sub
cmp
adc
xchg
loop
pop
stos
rorl
out
sbb
adc
insl
sbb
lea
adc
or
push
push
mov
rcl
push
fiadds
enter
push
cmpsl
js
xchg
jbe
ret
mov
test
sbb
shl
mov
call
cs
jge
push
mov
daa
mov
out
mov
cmp
sub
arpl
add
bound
mov
or
and
fcmovnu
das
loop
adc
xor
bound
scas
jbe
test
and
push
inc
pop
mov
sbb
jnp
scas
dec
inc
lds
hlt
rcrl
decb
addr16
push
or
rcll
push
add
jle
or
add
adc
lds
dec
xor
or
mov
and
inc
and
insl
mov
xor
cmpsb
jb
jae
insl
xchg
ds
push
loope
insl
mov
and
fldt
cs
jmp
cmp
aas
stos
sbb
mov
imul
lock
mov
jns
arpl
inc
icebp
inc
xor
out
sub
xchg
ljmp
or
add
dec
mov
or
add
dec
enter
divb
xor
out
std
insl
scas
xchg
call
ror
and
divl
add
rolb
sar
xchg
sub
jmp
incb
arpl
call
lods
out
mov
daa
std
adc
stc
jno
inc
add
ja
mov
imul
cmc
xchg
xchg
add
outsb
pop
push
dec
mov
push
adc
and
cmpsb
bound
js
push
mov
pop
jmp
sub
sti
lods
cmp
fs
inc
push
xchg
sub
es
mov
int3
xor
outsb
sbb
mov
sub
std
incb
dec
inc
pop
test
push
out
inc
mov
fdiv
mov
adc
xlat
pop
and
daa
hlt
stc
inc
jne
movsl
sbb
imul
lea
inc
and
cmp
xchg
xchg
jp
pop
arpl
lret
test
sub
ljmp
sbb
aas
or
sbb
jnp
add
adc
inc
or
test
shlb
pop
adc
cmp
shrl
arpl
mov
cmc
mov
ds
xor
inc
pop
adc
les
adc
dec
mov
outsl
sbb
outsl
lods
cld
push
in
xor
sub
mov
cmp
jae
push
loop
or
dec
rclb
and
xchg
jge
inc
test
inc
flds
insl
cltd
sbb
neg
cmp
std
dec
xchg
cmpsb
sbb
xlat
fcompl
adc
push
lea
jmp
addr16
adc
and
and
mov
pushf
mov
stos
imul
sbb
cmp
add
push
xlat
push
adc
aas
ds
adc
cmp
mov
enter
adc
adc
mov
mov
mov
decl
add
jp
sub
emms
lods
fistl
sbb
shll
mov
mov
xchg
dec
mov
add
dec
test
mov
rorl
xchg
mov
hlt
sub
loope
insb
or
ret
pop
ret
sbb
rcrb
pop
fsubs
sub
sub
outsb
xchg
mov
xchg
xor
je
jp
or
jns
lods
sub
pop
push
jl
mov
lds
fnop
sbb
repz
popa
adc
in
lea
dec
hlt
test
fwait
repnz
cmp
mov
add
lret
out
cmp
inc
andb
daa
jp
add
leave
bswap
pop
js
and
push
add
in
adc
cmp
aad
mov
xor
loop
xor
jl
in
inc
mov
inc
popa
mov
inc
adc
cltd
jge
outsb
testl
and
push
je
ja
inc
inc
pop
shlb
outsl
das
inc
xor
sarl
adc
pop
xor
shl
movsb
jecxz
mov
add
outsb
xor
xor
sarb
test
push
mov
jne
stos
add
fiaddl
or
cli
in
popa
adcb
mov
jne
and
jo
js
jecxz
push
adc
push
and
or
stc
rcll
xorl
ss
cmp
pop
aad
shrl
and
sub
loopne
add
inc
pop
adc
jle
je
sub
cs
inc
mov
mov
sbb
daa
in
and
jge
sub
sti
ja
out
enter
add
dec
xor
or
loopne
or
mov
in
mov
pushf
hlt
cmpsl
mov
push
sbb
add
jnp
mov
imul
xlat
push
bound
ds
fs
xchg
push
aaa
mulb
test
fwait
add
add
stos
sub
dec
and
mov
pop
jnp
scas
xchg
jecxz
mov
mov
pop
sti
cmp
push
adc
and
and
mov
mov
mov
cwtl
clc
add
pushf
ds
idiv
xorl
adc
jle
repz
pop
js
lahf
subl
nop
or
pop
jae
dec
sbb
sbb
push
xchg
mov
jnp
pop
rcll
and
mov
cmpsb
jge
fadds
pop
mov
stc
or
fs
mov
cmpsb
lock
cmp
les
pop
ret
icebp
xor
iret
xor
in
pop
int
xchg
xor
test
sbb
fs
mov
adcb
js
sub
lock
sbb
mov
sbb
aas
sbb
addr16
push
lcall
or
sti
aas
mov
dec
cmpl
and
into
inc
hlt
cli
fdivrs
cmc
or
int3
lahf
fdivrp
in
test
test
push
mov
repz
icebp
out
icebp
loop
cmpsb
loope
xchg
sbb
enter
icebp
inc
mov
loopne
inc
movsl
sbb
fdivr
outsl
fldt
cld
ret
pop
test
cs
pushf
and
shlb
add
add
out
push
and
clc
popa
int3
es
pop
adc
fldt
and
push
std
inc
push
pushw
jle
xor
decl
leave
inc
sahf
mov
les
inc
mov
pushl
pop
add
cmpsb
pop
add
icebp
or
lods
jns
aas
lret
xchg
mov
addb
ljmp
lock
pushf
and
and
inc
insb
int
in
cmp
pop
jo
es
xchg
subl
dec
shl
in
fnstcw
adc
push
mov
jnp
stos
enter
jmp
push
cmc
xor
xchg
fs
fs
mov
fadds
pop
jne
subl
ss
sub
aam
lea
jb
call
popa
ret
sub
xor
out
inc
fisttpll
jg
sbb
jnp
adc
cli
inc
std
xor
mov
lods
mov
sahf
rorl
push
insl
sbb
add
fs
jae
push
fnsave
cmc
pop
pop
mov
fildll
or
inc
or
mov
push
mov
loop
pop
xchg
pushw
add
out
mov
addr16
push
mov
je
pop
sbb
cmpl
cmp
fsubp
nop
jp
mov
mov
pop
xor
sub
cmpsl
popa
push
and
cmpsb
mov
lds
ljmp
call
add
mov
sbb
jecxz
aam
das
sbb
fisubs
mov
mov
loopne
xor
rcrb
or
add
fdivl
lea
fsts
jo
fistps
or
sarb
stos
xlat
addr16
jbe
test
fnstenv
mov
and
xchg
pop
cmp
xor
or
mov
sub
jge
bound
ds
pop
in
push
jbe
sti
push
aad
mov
ss
inc
dec
mov
sub
sbb
stc
cmpsb
movsb
stc
mov
decl
mov
jno
lods
cmp
inc
pusha
push
data16
sbb
cmp
clc
aam
mov
imul
lret
and
lcall
daa
nop
lea
adc
cld
out
adc
int
xor
sub
sub
fwait
jne
push
test
mov
sbb
add
jbe
inc
fiadds
cli
mov
imul
jg
xor
jecxz
sub
jae
cli
outsl
sub
shll
sub
fmull
ret
fistpll
xor
and
push
nop
and
sub
cli
incl
ds
push
xlat
ja
clc
xchg
scas
orb
outsb
jecxz
adc
jmp
mov
pop
jo
xchg
or
inc
mov
inc
add
and
ljmp
xor
fists
je
inc
sti
jns
adc
pop
arpl
loopne
pop
pop
sbb
imul
pop
jp
jle
add
pop
lods
cmpsl
outsl
fisttps
inc
cmp
push
fucomip
stos
rcrl
loopne
pusha
leave
repz
jbe
fbstp
incb
jl
mov
add
icebp
lock
mov
roll
stc
clc
and
pop
fldt
shll
das
lret
or
insl
xchg
xchg
rcl
adc
jo
push
mov
add
adc
mov
mov
pop
mov
xor
icebp
out
icebp
ret
or
lods
add
repz
orb
jle
imul
mov
mov
fwait
push
movsb
or
add
adc
in
lcall
inc
pusha
popf
mov
cs
sub
shrl
mov
pusha
js
out
xchg
mov
sub
jnp
inc
dec
in
rclb
xchg
jecxz
push
add
pop
clc
fildll
mov
add
test
mov
aam
dec
bound
mov
fwait
pusha
hlt
or
dec
dec
or
ss
jg
mov
cld
inc
dec
sti
icebp
notl
xchg
or
or
cwtl
mov
std
pop
aad
push
add
push
xor
loop,pn
movsl
or
icebp
test
arpl
sub
fidivl
add
pop
mov
xchg
cmp
mov
sbb
loopne
cli
cmp
inc
into
insb
or
out
xor
jae
or
cmp
mov
in
mul
fistpl
daa
std
imul
or
clc
or
jb
mov
mov
mov
outsl
adc
rcl
mov
stos
lods
lock
aaa
or
push
mov
cmp
pusha
and
js
mov
clc
and
adc
js
faddp
popl
push
jnp
aaa
call
test
xor
add
lods
insb
jns
nop
dec
aas
pop
jo
aaa
decb
cmpsl
inc
xchg
lds
sub
mov
mov
mov
and
or
inc
lods
mov
xchg
push
mov
call
nop
jmp
cli
out
add
inc
sbb
idivb
jecxz
xchg
aaa
push
hlt
adc
repz
pop
test
pop
adc
ss
lea
add
into
push
fcomps
cmp
pop
stos
xorl
das
xchg
cmp
lods
dec
sbb
call
jg
ds
mov
fmull
cmc
out
adc
call
fldt
popa
add
clc
dec
mov
insb
dec
pusha
mov
pushf
xor
ja
mov
sbb
jl
xchg
add
sbb
jb
xor
push
das
mov
dec
cmpsl
in
mov
test
int3
sub
shrl
mov
jg
lret
pop
aas
xor
sub
insl
sub
jno
out
iret
mov
test
insl
jb
stos
decl
dec
outsl
aad
das
xor
add
ja
dec
cmpsb
ret
push
dec
outsl
mov
or
jae
mov
cli
mov
lcall
adc
jl
pop
ja
rclb
mov
addr16
mov
dec
data16
cmp
xchg
mov
jp
cmp
ds
imul
and
lcall
cmp
in
movb
mov
data16
js
insl
jl
inc
movsl
stos
aad
sbb
cmp
mov
push
ret
xorb
inc
les
call
pop
push
shrb
and
push
push
sbb
icebp
mov
pop
lcall
push
xorb
clc
pop
cmp
test
mov
jle
ja
or
ss
mov
loopne
stc
ljmp
shl
sub
dec
gs
loop
mov
push
sti
outsl
and
adc
divb
pop
outsl
or
mov
jae
xor
dec
imul
test
mov
std
insb
nop
stc
out
mov
call
or
dec
or
push
mov
and
call
mov
lcall
ret
pop
bound
les
pop
xor
inc
xchg
pop
in
mov
pusha
mov
ds
sbbl
aas
movsl
jp
int3
aam
mov
inc
test
inc
mov
mov
scas
lahf
mov
sarb
repnz
or
add
jmp
xchg
xor
sti
push
pop
push
ret
add
add
pop
and
and
xchg
mov
mov
inc
roll
pop
xor
out
sub
push
into
cmpb
repnz
shll
aas
push
ds
jmp
mov
fdivrs
clc
scas
inc
test
fwait
loop
adc
insl
cmpsb
stos
pop
add
gs
jle
jle
lret
test
pop
es
mov
mov
cmpsl
sbb
jno
add
xor
sar
push
aaa
sub
dec
dec
test
les
aaa
jmp
xor
xor
push
lret
aas
loopne
mov
das
mov
std
fistpll
pop
dec
out
jecxz
sub
push
scas
jae
pop
ljmp
push
jmp
inc
pop
call
rorl
jmp
cmc
arpl
imulb
inc
or
cmp
aam
cld
jo
xor
mov
cmpsb
fisubrl
das
or
or
mov
jg
push
popa
pop
lods
faddl
nop
inc
js
insb
cmp
push
jo
fwait
push
data16
cmp
movsb
dec
dec
mov
mov
dec
sub
xor
sub
pop
adc
aad
leave
in
stc
mov
xchg
cs
mov
pusha
shlb
adc
fmul
jl
pop
mov
mov
jg
pop
pop
dec
test
cli
fwait
xchg
cmp
pop
scas
jnp
sub
lahf
ret
loope
adc
sub
mov
xor
imulb
fs
lcall
arpl
xchg
and
adc
and
push
push
data16
mov
mov
cmp
pop
jge
cmovg
loopne
aas
mov
aad
iret
outsl
and
jl
outsl
hlt
sbb
mov
sub
push
pop
mov
repz
out
add
ffreep
cmpsb
adc
adc
test
mov
dec
cli
lahf
push
sub
std
push
mov
push
sbb
xchg
outsl
jmp
ljmp
sbb
stc
imul
in
stos
mov
push
repnz
sub
push
fdivrs
mov
xor
ljmp
push
cld
shlb
inc
out
inc
push
pop
lds
imul
ja
mov
push
push
out
mov
add
and
pop
cmp
iret
jmp
into
inc
jge
add
outsl
outsl
hlt
inc
push
adc
xchg
mov
fldcw
push
insl
cltd
dec
and
add
jmp
out
push
nop
inc
push
mov
arpl
outsb
jo
or
test
push
add
fiaddl
mov
push
scas
jno
push
cmc
or
imul
xlat
gs
das
and
mov
in
mov
shl
aaa
xlat
daa
fildl
jno
je
inc
pop
pusha
inc
jle
sbb
sub
sbb
cmp
mov
pop
adc
mov
jne
or
repz
std
adc
xor
mov
sbb
or
cmp
lcall
dec
fs
mov
hlt
mov
sub
sbb
push
pusha
fdivrs
mov
pop
cmc
testb
call
cli
rcll
pushf
sbb
es
leave
lcall
add
ret
int
hlt
dec
loope
leave
lock
fwait
add
push
in
push
xchg
sbb
and
test
xor
sar
enter
pop
cmp
fwait
clc
ret
in
test
test
inc
les
xlat
fdivrs
iret
mov
imul
jg
xlat
in
leave
jbe
and
loope
mov
inc
and
mov
das
stc
adc
xchg
shrb
outsb
loope
pusha
mov
add
and
jmp
push
pop
push
loopne
jmp
and
or
addb
push
dec
leave
jnp
jg
fsubl
inc
mov
adc
in
push
jp
mov
fsubrs
loopne
jne
mov
hlt
xor
lock
fwait
pop
int
in
jb
movsl
out
faddl
and
xchg
cmp
lcall
sbb
jge
daa
ds
sub
push
inc
or
mov
in
fmull
push
jns
rcrb
call
jno
stos
ljmp
cmpb
sbb
sub
pop
lret
pop
cmp
aaa
mov
mov
jl
sbb
pop
test
push
stc
out
mov
and
add
cmp
pop
sub
mov
cmp
inc
push
inc
pop
jbe
mov
lds
fwait
adc
cwtl
arpl
insl
xor
movsl
outsl
mov
mov
dec
cmp
mov
out
icebp
push
insl
adc
mov
repnz
cmovb
addb
cld
cmpb
xor
mov
test
hlt
sbb
pop
aaa
shll
sbb
dec
add
movsb
pusha
mov
lea
loopne
xor
pop
inc
jo
mov
aaa
fnstenv
lret
jns
mov
je
js
cmc
inc
arpl
xor
pop
xchg
add
jp
sub
adc
loop
push
pop
lea
inc
rcrl
mov
and
cltd
add
scas
push
scas
out
sarb
lock
lods
mov
xchg
or
clts
stc
cld
sbb
addb
or
and
cmp
adc
sbb
adc
aam
fwait
mov
add
mov
or
adc
les
mov
lret
add
inc
sarb
int3
fldt
pop
and
inc
mov
pushf
xchg
dec
sub
xchg
push
mov
or
inc
mov
mov
push
fstpl
add
aam
js
push
dec
fmull
call
and
pop
in
push
cmp
mov
jge
pop
mov
jle
ficompl
mov
inc
dec
sub
pushf
mov
sbb
xchg
mov
nop
popa
sub
xor
shll
push
push
idivb
or
sti
lds
mov
mov
mov
cmp
shr
and
and
mov
xchg
out
outsl
adc
and
loopne
insb
sbb
loope
cmpsb
sub
into
push
mov
insl
out
push
aas
push
add
shlb
outsb
ljmp
stos
fisttpl
pop
mov
xchg
mov
adc
je
mov
add
sub
test
in
data16
sub
pop
insb
or
dec
adc
daa
jne
popf
push
cmp
mov
pushf
imul
in
mov
lods
jae
test
jae
xorb
fistpl
fildl
or
or
add
ret
iret
mov
adc
aad
sbb
or
sub
sub
out
mov
mov
push
mov
cmp
push
mov
test
roll
subl
sbb
sub
sbb
cld
jmp
test
jbe
sarb
mov
jmp
cmp
xchg
stc
xchg
loopne
jns
add
or
mov
scas
andb
or
add
and
sub
orb
cld
int3
testb
inc
sbb
jle
pusha
push
jno
add
ja
dec
mov
mov
mov
adc
xlat
xlat
xchg
orl
sbb
frstor
cld
mov
mov
dec
ficompl
rol
int3
cld
mov
lahf
btr
sbb
mov
mov
and
insb
sbb
jl
mov
loop
mov
mov
hlt
jnp
dec
fnstsw
lahf
inc
dec
adcl
popa
das
jl
ja
and
nop
pop
imul
flds
enter
cmpb
test
push
mov
add
negb
mov
sub
sbb
adc
test
and
push
or
aas
sbb
mov
cltd
mov
xchg
cmp
jno
stos
pushl
dec
push
mov
call
xor
aam
inc
loope
push
outsl
es
mov
fistl
push
je
outsb
icebp
sub
cltd
shlb
cmp
test
ret
sbbl
test
mov
loopne
and
repz
jmp
mov
cmp
push
mov
icebp
add
clc
lds
outsl
rcrb
push
pop
add
and
mov
outsl
inc
mov
push
sbb
mov
stos
mov
cmpsw
in
clc
mov
and
cltd
pop
push
jp
mov
lods
xchg
jge
ret
repz
cmc
sbb
sub
inc
cld
xor
dec
jns
push
jle
test
mov
lock
test
ljmp
pop
mov
ds
pop
dec
jmp
sbb
cmp
mov
in
xor
xor
mov
aam
decl
jne
xor
leave
fnsave
fldl
mov
jnp
jae
jne
or
add
adc
sarb
xor
fwait
clc
cmpsb
jae
push
and
sub
jo
cld
sub
dec
adcb
sbb
mov
or
mov
aas
cmpsl
gs
xchg
adc
int3
cmp
mov
dec
xor
push
mov
or
xchg
fists
jnp
ud1
rcrl
out
loope
rcrb
sarl
js
iret
test
in
ret
jg
jns
dec
sub
clc
cmpb
and
loopne
mov
mov
test
bnd
xchg
cmp
cmc
mov
scas
stos
ret
cld
xchg
and
xor
fistl
jle
push
jle
jns
xor
push
jns
nop
notl
push
and
sub
loop
or
xchg
mov
or
sub
mov
rcrb
push
rcr
xchg
lret
lds
xor
push
cld
jg
push
adc
out
test
stc
gs
clc
outsl
loop
in
pop
push
jge
cmpsl
dec
gs
xchg
sarb
mov
jmp
xchg
testb
inc
sbb
mov
stc
rclb
rorl
arpl
test
dec
mov
rcrl
lea
stos
lcall
cld
dec
cwtl
inc
and
mov
push
xchg
hlt
stos
lret
cmpsb
add
pop
cmpb
andb
mov
pop
adc
std
je
push
loope
sub
or
test
push
add
ret
dec
pushl
test
cmp
sub
adc
inc
push
jle
ds
jo
sbb
scas
rclb
dec
stc
mov
nop
lret
pop
mov
jo
mov
xchg
sbb
cmp
push
jecxz
mov
xchg
test
dec
jmp
pusha
ja
add
es
inc
sti
fmul
inc
hlt
test
aam
cmp
mov
rorb
dec
ljmp
pop
mov
or
mov
popa
clc
sbb
push
loope
xchg
icebp
fdivrs
sub
cs
or
outsl
insb
in
aaa
xchg
and
mov
bound
xchg
lret
aam
add
jge
and
les
cli
popa
fdivrs
loop
jo
cltd
cwtl
add
xor
std
dec
xor
xchg
pop
adc
mov
into
andb
xor
sbb
add
inc
faddl
shll
pop
fsubrl
clc
shlb
pop
fldenv
mov
jno
fildll
out
add
imul
sbb
mov
xor
inc
push
call
push
xchg
nop
xchg
dec
sub
outsb
ja
stc
sub
mov
popa
les
dec
adc
les
or
adc
jmp
aaa
mov
jmp
insb
dec
call
or
data16
sbb
cmpb
lret
out
fcompl
js
dec
orb
stos
lret
pop
and
fldenv
or
in
stc
push
arpl
outsl
add
pop
mov
ficoms
or
int3
jg,pt
mov
int3
sbb
orb
and
out
push
subb
mov
and
push
mov
les
test
inc
mov
aas
shlb
xlat
inc
in
mov
inc
dec
call
rolb
mov
call
jmp
aas
sbb
test
rcll
jbe
imul
mov
or
adc
pop
call
push
roll
sub
int3
add
jae
xor
xchg
or
adc
call
add
jl
test
push
jno
add
aam
jo
bound
sbb
fistpl
push
test
jl
push
mov
dec
divl
outsl
pop
xor
add
imul
mov
jo
nop
mov
nop
mov
xor
jg
and
inc
adc
dec
lret
test
xchg
cmpsb
sub
jns
mov
adc
push
mov
or
out
rcll
fsubl
dec
push
pop
xor
add
movhps
add
xchg
mov
mov
sub
fwait
or
inc
in
fwait
sub
mov
test
int3
cs
or
out
mov
outsl
or
mov
arpl
xor
inc
addb
sub
inc
ret
xor
push
lods
xor
mov
jecxz
sub
inc
sbb
aam
les
cs
js
outsl
aad
xor
jbe
fs
dec
stos
or
adc
xchg
sub
push
adc
inc
adc
fistpl
mov
push
rclb
inc
mov
inc
fsqrt
test
popa
out
dec
ds
cmpl
push
jb
addr16
pop
xor
inc
mov
jp
push
push
lea
push
ja
sub
out
pop
sbb
and
cld
inc
mov
inc
or
xor
ret
lods
xor
les
neg
pop
popf
jnp
jno
pop
sbb
call
add
or
mov
xor
xchg
sbb
cmp
enter
dec
addr16
in
xor
sbb
enter
jo
iret
loopne
or
pop
rolb
lcall
inc
insl
push
jge
push
jge
mov
xor
adc
mov
bound
test
and
loope
dec
jp
fadds
out
add
icebp
pushl
jns
hlt
arpl
stc
cwtl
fs
in
enter
insb
data16
sub
xor
cmc
mov
add
sub
push
popa
adcb
add
ss
jp
adc
cmp
jmp
dec
insb
call
pop
push
lcall
mov
push
mov
inc
movsb
xchg
mov
cmp
cmp
dec
push
insb
mov
out
mov
sar
add
cmpsl
sub
jge
mov
sbb
adc
in
mov
or
shrl
and
dec
out
mov
pop
mov
or
pushf
adc
sbb
movsb
fcoms
push
enter
cli
push
jae
inc
xor
add
stos
cmp
sbb
dec
adc
jbe
rorb
addl
test
call
cs
xchg
dec
jmp
mov
push
xchg
in
push
jmp
clc
mulb
sub
lahf
jp
repnz
jb
movsl
mov
push
jnp
adc
add
lock
jg
movsb
xchg
pop
inc
add
gs
jo
push
mov
push
jne
fcoms
push
sbb
or
mov
jo
and
pop
js
xor
ret
test
xchg
inc
push
fwait
jno
push
rclb
inc
enter
int3
dec
inc
mov
mov
daa
add
sbb
or
ret
jle
ja
call
sbb
sub
sbb
add
inc
call
sub
adc
decl
in
mov
or
sub
cmp
and
sbb
cld
and
adc
adc
sub
sarl
sub
adc
pop
lret
and
sbb
lea
std
mov
xor
push
ljmp
and
enter
mov
pop
lock
jge
dec
fucomp
cmp
lds
or
sbb
inc
popa
dec
nop
mov
add
xlat
imul
xchg
and
cs
jne
stos
sub
push
and
sbb
mov
rcrl
add
cld
mov
sbb
addl
mov
xchg
call
push
inc
adc
imul
call
xor
data16
cltd
jno
jne
add
lock
xor
aas
jnp
stos
stc
xlat
sbb
push
fiaddl
inc
pop
inc
fwait
jmp
fs
mov
jmp
and
jae
push
outsl
cmc
pop
andb
push
aaa
out
add
or
push
mov
inc
ljmp
call
movsb
sub
xchg
jno
imul
mov
test
or
pop
test
push
pop
add
jp
xor
pusha
das
sub
and
jg
adc
push
sarb
roll
in
fidivrs
loopne
xchg
or
fildl
mov
mov
outsb
fcompl
imul
add
pop
add
aad
incl
sbb
mov
add
cwtl
push
mov
sub
js
in
fisttps
push
add
clc
pop
test
cmp
or
push
mov
sub
je
inc
and
test
rorl
popf
pushw
fstpt
test
push
mov
arpl
call
outsl
repnz
inc
mov
in
and
lea
movsl
scas
mov
test
aam
cmp
lds
sub
push
dec
orb
add
mov
aam
fwait
or
push
dec
inc
push
fimull
dec
popf
or
dec
sub
and
fidivrs
test
in
into
popf
add
repz
rclb
cwtl
rcll
and
xor
movsl
jge
inc
loopne
in
in
fbstp
dec
cwtl
mov
mov
push
cmc
scas
or
inc
inc
pop
test
add
xor
pop
xor
inc
out
loop
fwait
cwtl
push
cmp
or
inc
loopne
leave
jb
cld
out
cmpsl
push
push
sub
or
lea
ficoml
dec
push
add
cmp
outsl
test
sub
pop
pop
add
sub
cld
test
mov
aam
or
insb
call
cmpb
pop
mov
js
shll
sbb
cmc
adc
and
or
xor
mov
dec
xor
lods
testl
cld
aaa
or
shll
or
mov
lea
push
and
ljmp
jnp
cwtl
repnz
enter
rorb
hlt
xor
popf
fistpl
fadd
dec
icebp
pop
popa
adc
negl
inc
aam
cld
out
push
jb
shrl
and
dec
add
dec
pop
adc
sbb
or
or
rclb
and
or
in
xor
lock
int
lcall
ret
mov
mov
pop
loope
cmp
out
or
cmpsl
dec
add
jl
xor
dec
jb
outsl
sub
cmp
mov
mov
mov
sub
jnp
icebp
jae
inc
hlt
mov
add
adc
mov
push
ss
cli
rclb
jnp
xorl
fistpl
push
cld
add
and
rclb
repnz
cmp
aam
fucom
and
mov
scas
mov
mov
jbe
into
sbb
bound
loopne
dec
scas
not
pop
out
pop
xchg
mov
cmp
pop
adc
add
sub
mov
add
mov
call
enter
aam
rolb
out
scas
clc
mov
jne
sbb
mov
ficompl
out
inc
jne
lods
push
loope
arpl
loop
add
inc
mov
cmpsl
nop
xor
lcall
jb
repnz
cmc
call
xor
sbb
jns
add
jb
lret
in
sahf
xchg
imul
ss
sub
sti
jb
dec
mov
imul
lahf
pop
test
push
outsl
std
add
pop
mov
lods
aas
cmc
add
push
iret
fldl
ja
lods
in
sub
rcll
mov
adc
inc
fcoml
loopne
sti
cmpsb
sub
mov
nop
push
mov
sub
and
add
and
cltd
scas
dec
jl
ljmp
das
cltd
cltd
mov
or
mov
outsl
aam
add
aad
gs
xor
das
xchg
divb
incb
stos
bound
cmp
add
outsl
add
mov
push
sbb
mov
js
mov
stos
pop
mov
and
insb
lret
jl
dec
pusha
addr16
adc
sub
addr16
pusha
sbb
mov
sub
mov
pop
xchg
les
push
mov
sbb
sub
cmpl
mov
push
or
sub
call
mov
pop
addl
movsl
mov
xor
lods
lock
lret
jge
jg
subb
cmpsb
pop
or
mov
xchg
ds
or
stos
and
lock
inc
pop
jle
sub
mov
or
negb
mov
lods
add
push
jl
jp
adc
and
add
pushf
lods
jg
pop
and
jbe
dec
xchg
jmp
inc
rcl
mov
ja
aaa
pop
sub
popf
and
xchg
fists
movsl
loop
ss
jle
lds
xchg
lea
add
xchg
dec
xchg
sbb
cmp
cmc
push
pop
cmp
imul
and
pop
mov
push
lods
sub
mov
jg
stos
mov
loopne
sbb
push
lods
shl
sbb
icebp
fsubs
push
sub
sub
repz
adc
mov
adc
cwtl
leave
adc
ficoml
xor
movsl
aaa
or
jbe
je
cld
shll
sbb
jo
jge
inc
stos
ret
cmp
mov
ficoms
push
cmp
mov
sbb
adc
int3
xchg
sbb
lds
mov
in
sub
cmp
orb
mov
add
cmp
mov
adc
xor
mov
clc
stos
pop
mov
sbb
cld
xchg
cmp
fists
cmp
adc
add
add
mov
in
ret
in
jbe
into
movsb
push
xchg
mov
sbb
cs
xor
sbb
pop
add
ja
cmp
mov
add
aaa
lcall
push
mov
cmp
cmpb
jl
mov
xchg
loopne
dec
loop
iret
data16
lret
adc
stc
add
jb
movsb
sbb
jo
hlt
test
je
rorb
sbb
shll
inc
and
sub
out
flds
and
or
inc
test
pusha
aaa
inc
mov
xchg
pop
mov
popf
inc
mov
adc
and
sub
mov
mov
incl
das
shlb
repnz
push
and
insl
pop
std
fiadds
push
mov
insl
push
movsl
cld
inc
lea
sbb
outsl
push
pop
jbe
sbb
or
jg
mov
shl
lods
movsb
jnp
popa
sbb
jp
or
jge
inc
inc
cmpsl
iret
iret
add
add
ljmp
in
fnstsw
leave
out
xor
pop
adc
and
xor
inc
mov
push
jge
mov
mov
aaa
or
rolb
shll
pop
movsb
and
mov
aas
add
adcl
sbb
daa
add
mov
push
sub
xor
inc
scas
push
sub
mov
add
outsl
inc
out
into
lcall
mov
pop
mov
sti
cmp
loop
stos
aas
jns
pop
call
mov
mov
and
arpl
adc
or
fs
lods
gs
sar
mov
data16
je
and
adc
scas
mov
into
mov
dec
cmc
xor
outsb
mov
into
dec
xor
inc
incl
inc
mov
shrl
sub
sbb
cld
sbb
mov
mov
jp
inc
sub
or
mov
int
ds
mov
mov
or
fisubrl
jo
and
iretw
push
in
xor
jle
sub
andl
cmpsl
dec
adc
jg
sub
inc
adc
add
sbb
mov
lds
movsb
mov
ret
push
xchg
adc
pop
lret
dec
js
cli
in
mov
fstps
sbb
ret
add
sub
fldl
jbe
data16
orl
lock
cmp
push
xor
xchg
jnp
orl
or
shl
iret
push
jnp
inc
sub
mov
push
add
add
fiadds
in
fnstsw
jp
jp
je
inc
out
cmpsb
mov
clc
popf
les
prefetch
bound
pop
stos
lds
dec
pop
pop
mov
test
xchg
fsubrs
inc
adc
cmp
pop
jo
or
outsl
sarb
test
mov
or
adc
mov
pushf
fprem1
ret
push
dec
mov
xor
daa
push
lods
js
arpl
sbb
pop
lahf
arpl
outsb
repz
and
repnz
add
ret
cwtl
dec
push
fildll
add
das
test
lcall
lock
jo
and
sub
jecxz
rcrl
push
add
ljmp
movsb
fwait
adc
hlt
cli
insl
sub
filds
icebp
sbb
fwait
cmp
xchg
push
add
lahf
jmp
outsl
mov
dec
mov
mov
stos
jbe
loopne
or
xor
cmpsb
add
inc
fcos
sbb
xor
pop
inc
sbb
pop
std
sub
pop
mov
sbb
push
decb
inc
xchg
in
push
ss
or
or
fisubrl
push
jmp
add
jo
mov
sarb
lahf
into
dec
into
add
xor
inc
xchg
in
mov
scas
aad
push
jecxz,pt
les
imul
mov
arpl
out
xor
imul
jmp
incb
inc
arpl
inc
xor
sub
loope,pn
push
mov
jnp
fs
loop
idiv
inc
fstpl
push
inc
test
decb
call
nop
daa
push
mov
dec
add
and
xchg
in
fistl
mov
dec
insb
mov
in
pop
adc
push
in
add
decl
jns
andb
cmp
loop
push
add
xchg
xor
add
add
and
pop
aam
and
icebp
mov
mov
out
fstp
dec
xchg
xchg
push
cltd
lods
mov
push
das
mov
jo
in
xor
cmp
mov
in
and
push
movl
aas
sub
or
add
lds
add
mov
hlt
jmp
mov
call
pop
pop
repnz
out
test
lcall
mov
adc
stc
push
add
cmp
daa
cs
push
sub
xchg
daa
ds
pop
lods
sbb
inc
aad
jmp
mov
mov
mov
adc
push
aas
mov
xorl
mov
shr
shrl
test
sub
inc
pop
clc
jbe
or
aam
hlt
add
or
or
sub
xchg
xorb
adc
add
imul
or
jl
popa
and
push
orb
dec
add
aam
pop
jb
sub
push
push
pop
subl
std
mov
push
cmp
add
push
xor
ljmp
dec
movsb
sbb
cwtl
fcmovnb
inc
xchg
mov
pushf
push
and
shlb
fdivrl
mov
stos
sub
mov
cmp
mov
iret
sub
clc
add
push
out
js
pop
dec
sub
xchg
decb
popf
mov
adc
nop
inc
repz
sbb
cmpsb
mov
es
mov
pop
push
mov
mov
push
adc
fidivrl
push
outsb
inc
sub
mov
lods
mov
inc
insl
js
inc
cmp
or
xchg
fildl
mov
rcrl
mov
rcrl
lock
cmp
inc
hlt
pop
sbb
aaa
xchg
add
notl
add
aaa
scas
adc
push
sti
insb
mov
pop
call
or
adcb
inc
bound
pusha
adc
push
jnp
int3
add
pop
or
xchg
add
aam
adc
xor
inc
jno
mov
jmp
add
lahf
jp
icebp
inc
popa
or
push
adc
shrb
pushf
lcall
mov
rorb
jbe
roll
adc
mov
lret
subl
push
push
out
sbb
dec
jmp
push
arpl
ret
xchg
neg
or
ljmp
rorl
dec
jb
ja
push
mov
out
adc
daa
lcall
pop
jbe
fisubrl
pop
clc
add
push
pop
cmp
and
or
aaa
dec
mov
cmp
into
push
jns
sbb
mov
add
sub
fcomp
push
lds
sub
call
push
xor
jg
jne
movsl
sbb
jae
jae
adc
sub
jmp
enter
dec
pop
inc
cltd
lock
dec
stos
pop
pop
js
sar
push
rorb
mov
es
inc
mov
sbbl
inc
cmc
jg
xchg
push
lea
sbb
dec
std
das
adc
cmp
js
mov
fdivr
dec
add
loopne
fcompl
mov
dec
sbb
sbbb
jnp
ljmp
testb
not
aas
movsl
add
inc
xor
lods
mov
pop
in
outsb
lcall
pop
ss
cmp
cmp
xchg
repnz
in
cmp
xchg
stos
mov
add
and
imul
mov
push
dec
std
jns
add
mov
add
xor
jbe
popa
mov
movsl
adc
or
fisttpl
push
and
scas
aad
mov
loopne
add
push
subl
sbb
add
clc
scas
mov
mov
add
loopne
push
pop
lea
push
mov
jl
sbbl
lea
scas
mov
shrl
add
pop
adc
jae
add
stos
popl
mov
lods
sahf
je
adc
orl
pop
rolb
repz
add
add
add
insl
add
sbb
js
dec
in
jmp
adc
aaa
shl
mov
add
aas
jecxz
adc
sbb
pop
in
sahf
mov
push
movsb
dec
cld
or
subl
sub
xchg
notw
stos
lret
or
fisubrs
das
movhps
dec
lret
imul
or
imul
or
imulb
fwait
pusha
ds
std
cmp
stc
sub
daa
pusha
test
ret
and
in
cmp
faddp
decl
mov
in
mov
jbe
ret
inc
adc
mov
push
cld
adc
inc
xchg
mov
adc
enter
sub
fldcw
mov
xchg
icebp
mov
cmc
cltd
jnp
jae
out
xor
xchg
fstpt
outsb
push
ljmp
sub
repnz
pop
xchg
adc
aaa
mov
and
repnz
iret
scas
mov
mov
idivl
and
lret
sub
cmp
jl
push
out
pop
add
pop
leave
push
xor
push
js
dec
xchg
mov
divb
pop
add
add
bound
stos
mov
dec
fcompl
icebp
loop
pop
notb
push
xor
xor
push
int
cmc
rol
cltd
les
mov
sub
adc
loope
pop
jg,pn
test
sbb
cmpsb
cwtl
jb
les
jno
sub
xchg
arpl
sub
filds
sub
pop
fiadds
cmp
insl
aad
aaa
sbb
clc
fistl
sarb
xor
arpl
outsl
xor
add
xchg
mov
sbb
data16
xchg
in
inc
test
mov
mov
jbe
add
pushaw
or
jo
pop
add
test
clc
add
sahf
mov
mov
leave
add
imul
in
loope
arpl
mov
push
mov
sub
aas
xchg
aas
mov
int3
mov
rol
dec
push
addr16
push
es
or
rorb
mov
mov
jo
loop
push
aas
pop
and
xor
es
sbb
mov
arpl
push
loope
mov
sbb
inc
sub
push
jo
mov
sbb
test
test
insl
mov
repnz
lahf
add
pusha
and
or
mov
jle,pt
push
xor
push
mov
mov
aaa
ljmp
xchg
cmp
es
pop
sbb
insl
test
cmp
adc
mov
inc
mov
add
popa
sti
ljmp
test
lret
add
mov
mov
loopne
inc
lea
lods
push
mov
sti
js
mov
in
mov
xor
sub
aaa
cmp
cmp
push
pop
mov
mov
sub
adc
in
outsl
test
adc
mov
stos
stc
insb
scas
lcall
movsl
or
add
rolb
call
cmp
mov
dec
or
out
fidivrs
pop
pop
push
cmp
cmc
dec
fwait
out
dec
fisubrl
mov
sub
sbb
xor
cmpsb
movsb
and
pushf
xchg
hlt
popf
pop
jnp
rcrb
dec
ljmp
mov
or
ja
dec
lret
movsl
cltd
sub
jg
into
hlt
aaa
sub
lock
xchg
cmp
jg
mov
call
push
adc
test
mov
das
std
push
int3
test
clc
sub
xlat
xchg
fistl
dec
in
or
adc
popa
and
neg
shlb
dec
in
lods
jnp
data16
out
mov
fsubrs
or
xor
imull
adc
sbb
test
lret
cs
push
addb
adc
xchg
pop
pop
inc
sti
or
and
je
adc
dec
dec
rol
lea
xlat
add
adc
hlt
xor
cmp
cmp
and
pusha
jge
sbb
pop
add
inc
les
add
adc
xchg
jmp
dec
fdivrl
testb
imul
push
add
out
add
mov
inc
xchg
call
jge
cld
pusha
adc
int
dec
es
dec
inc
iret
sbb
add
mov
mov
aad
adc
mov
mov
mov
inc
pop
cltd
out
adc
popf
cmp
adc
mov
int3
lret
cmpsb
jp
lea
add
or
lds
adcb
jno
sub
push
cltd
ljmp
test
mov
add
dec
add
je
cmp
cwtl
sbb
outsb
daa
mov
in
cmp
dec
inc
lock
push
shll
cwtl
inc
pop
mov
or
push
icebp
es
aad
and
mov
aam
aam
lcall
inc
xor
or
push
pop
inc
mov
push
rorl
sbb
push
das
cmc
add
mov
dec
add
or
pop
test
push
aad
mov
or
and
mov
outsb
imul
mov
pop
sarl
lock
inc
lock
and
ja
cmpl
inc
nop
push
xchg
and
pop
shrb
stos
fs
push
add
push
pop
inc
mov
sub
cld
xchg
sub
ror
jge
pop
sbb
loope
ret
dec
cmc
add
add
dec
or
mov
pushf
add
cli
andl
dec
add
fidivrl
lds
insl
jecxz
add
sbb
inc
lret
dec
loopne
jl
cmp
inc
sbb
sub
jge
rcrb
addb
add
inc
or
mov
push
pusha
cmp
mov
dec
fidivl
test
cmp
jo
fiaddl
or
dec
add
loope
jp
inc
pop
std
lods
mov
cmp
rolb
xor
sti
shlb
jge
aad
ret
xor
jo
sahf
pop
jp
adc
add
je
inc
mov
sbb
gs
sahf
and
test
cltd
outsl
jle
cmp
mov
in
mov
data16
arpl
cmc
cmpsb
sbb
fs
jge
cmp
add
push
or
push
sub
mov
sbb
mov
dec
add
imul
hlt
sub
cmp
and
movsb
fmull
jb
shrl
roll
addb
sbb
push
pop
adc
movsb
jne
xor
pusha
inc
cwtl
push
dec
add
sub
sbb
mov
cwtl
lcall
mov
fadd
clc
frstor
in
cmp
loopne
mov
or
sbb
repz
add
paddsb
ja
andb
lods
fwait
hlt
adc
jge
jmp
mov
adc
pop
rorb
ljmp
sub
sbbb
dec
popf
add
loopne
clc
inc
mov
cmpsl
fldenv
push
je
or
in
aad
ret
testl
hlt
fsubl
inc
outsb
sub
mov
jb
push
movl
mov
das
xlat
loopne
dec
sub
loope
test
inc
and
loop
sub
or
fdivl
jecxz
mov
fistps
dec
inc
push
clc
fcmove
adc
pushf
repz
pop
loopne
imulb
xlat
or
mov
shlb
adc
mov
clc
and
mov
lock
sbbb
jbe
or
adc
out
mov
je
lds
mov
push
pop
imul
insb
add
ret
scas
cmpl
mov
inc
sub
and
fdiv
adc
pop
cmp
mov
push
mov
outsl
lock
adc
cs
and
popa
sbb
push
lahf
stos
cmp
mov
add
and
xchg
jne
not
add
mov
call
inc
dec
cmc
pop
dec
dec
lock
push
mov
jae
push
loopne
and
sbb
ss
js
ljmp
add
dec
addb
cwtl
and
aam
lock
gs
or
dec
scas
add
inc
xor
pop
data16
out
xor
jmp
xchg
subl
andl
sub
inc
movsb
fs
push
and
outsl
cli
incb
repnz
es
push
xor
cmp
pusha
add
dec
or
leave
adcl
out
dec
pop
xchg
push
mov
out
pusha
imul
mov
sub
lock
out
mov
add
cmp
addb
loopne
inc
mov
bound
cmp
popa
lock
lea
or
dec
js
ret
add
cmp
add
or
not
add
and
and
outsl
sub
fsubs
xchg
jb
inc
push
adc
pop
inc
mov
nop
test
xlat
inc
xor
fcompl
inc
pop
pop
pop
ret
and
add
push
shlb
fsub
and
sbb
cli
inc
jo
add
andb
test
das
js
push
cwtl
fwait
ret
pushf
jae
enter
and
fldenv
and
add
cld
push
lock
repz
push
add
and
inc
shlb
nop
jp
shlb
add
or
or
loopne
outsl
cld
scas
pop
pop
rolb
jp
jmp
loopne
cmp
movsl
xchg
int
vdivps
ljmp
jb
test
mov
and
add
or
mov
sarb
stos
dec
mov
cmp
iret
mov
jg
adc
les
and
daa
shl
add
mov
sub
cwtl
and
xchg
mov
add
pusha
inc
sub
xchg
xchg
ds
and
incl
mov
add
push
and
orb
lcall
jmp
hlt
push
lds
fistpll
or
lahf
jp
and
xchg
jp
push
jl
sub
fstps
stos
outsl
add
fdivr
add
push
and
add
cmp
std
pop
mov
dec
fstps
outsl
mov
xchg
add
sbbb
lcall
mov
cltd
ja
pop
add
mov
pop
pop
pop
xchg
lahf
jbe
out
push
jmp
out
jbe
mov
mov
icebp
xor
pop
jecxz
mov
inc
or
fsubl
call
int
xchg
mov
fimuls
jl
inc
or
enter
mov
rorl
mov
sti
out
adc
in
hlt
outsb
jnp
ret
xchg
push
jns
jl
or
call
cs
sbbl
cli
es
jle,pt
mov
jo
mov
sahf
sti
jl
or
fdivrl
loope
movsl
fdivl
sub
das
fwait
add
add
jle
fldl
mov
jle
cltd
jne
push
pop
cltd
add
pushl
int3
into
jbe
repz
sbb
jne
test
addb
inc
out
cmp
in
adc
lcall
insb
stos
inc
and
lcall
and
fbstp
add
jae
mov
push
push
adc
pusha
arpl
addl
imul
nop
add
push
jg
sarb
xor
jb
pop
dec
adc
mov
js
mov
push
arpl
xchg
adc
inc
std
sti
xchg
call
cmc
and
fidivl
out
sbb
push
adc
movsb
ret
ret
inc
mov
gs
das
dec
fists
lods
fildll
subb
mov
stos
daa
sbb
mov
xchg
test
xor
or
jg
loope
adc
inc
xor
add
push
lods
je
jg
das
adc
cld
pop
cs
int3
or
add
cmp
jg
push
fwait
jecxz
ss
adc
repz
adc
sub
mov
and
inc
adc
and
sub
fwait
hlt
arpl
mov
daa
ret
pop
lock
sbb
test
sbb
pop
aas
cli
fucomip
add
imul
rol
bound
pop
sti
adc
adc
cmpsl
add
cli
aam
pop
clc
das
pop
sub
mov
fs
mov
mov
adc
sub
nop
jbe
cmp
rorb
fists
lods
test
in
sub
scas
mov
push
push
pop
fildll
add
or
add
add
mov
xchg
lcall
mov
call
jmp
and
mov
or
dec
adc
adc
sar
xchg
and
jecxz
js
addr16
inc
fnstsw
xchg
fisttpll
aas
or
int3
inc
pop
add
xchg
loope
pop
fidivl
push
or
xchg
fs
sub
mov
pop
cs
and
jno
cmp
fists
pop
jb
pop
cld
and
xor
iret
cmp
ret
nop
mov
xor
test
or
js
pusha
xor
add
sub
fsts
lea
dec
cli
insb
xchg
pop
push
mov
xor
out
pop
inc
stos
mov
jg
sbb
push
xchg
cmp
pop
lea
repnz
pop
xor
in
push
stc
lods
repnz
xchg
xchg
test
jnp
cmp
jg
and
cli
mov
lods
out
sub
test
test
es
les
mov
mov
loop
mov
xor
jp
mov
test
mov
scas
and
jge
sbb
and
orl
subb
pop
jg
xlat
insl
fstl
aas
cmpsl
mov
js
fwait
jbe
in
sub
pop
xor
lods
mov
mov
or
jae
int3
movsl
mov
or
dec
call
jg
xchg
cmp
pop
lea
icebp
mov
mov
xchg
mov
pop
ljmp
add
inc
lock
add
cli
jge
mov
add
xchg
mov
jmp
mov
xchg
mov
std
jg
xchg
scas
push
jecxz
mov
aaa
jno
add
ljmp
sbb
mov
outsl
stos
and
pop
mov
je
loop
add
outsb
add
push
jecxz
cld
data16
in
jg
mov
jg
arpl
roll
sbb
xchg
lcall
insb
mov
inc
pop
lock
into
adc
outsb
rclb
popa
pop
jns
int
fdivrl
call
pop
pop
jns
call
test
mov
in
jl
dec
add
mov
movsl
jnp
adc
push
idivl
ror
out
call
imul
jae
cmpsl
pusha
sti
sbb
test
cmpsl
repnz
nop
cs
ficoms
lock
mov
pop
js
cmp
scas
loope
lahf
fistpll
mov
pop
ret
stos
lock
mov
cmp
mov
xor
mov
jno
sbb
xchg
jp
stc
ljmp
sub
pop
dec
mov
das
sub
pushf
cld
pop
cld
repz
repnz
adc
add
or
mov
out
scas
or
jecxz
push
sub
cmp
jl
pop
add
insl
mov
sbb
mov
out
mov
decl
pop
cmpl
xor
xchg
xchg
shlb
icebp
dec
out
test
outsl
xchg
mov
mov
aaa
adcl
sub
push
or
add
andl
movsl
inc
icebp
outsl
add
jmp
mov
adc
or
xchg
push
cwtl
push
pushf
cmc
lods
jmp
jb
in
jnp
popl
push
fnstsw
adc
sbbl
cs
mov
nop
inc
or
sar
ss
add
sbb
push
ret
adc
pop
js
pushf
jge
fimuls
push
mov
add
sbb
into
jne
inc
and
out
shll
mov
mov
movsb
mov
mov
sub
loop
test
adc
sub
rorb
gs
pop
das
es
inc
or
mov
ljmp
sub
pop
add
xor
dec
inc
das
movsb
adc
loope
call
je
cltd
pop
test
ret
test
mov
adc
jo
mov
shl
dec
push
mov
fadd
rcrl
ret
shlb
setno
bound
lods
std
push
sub
jl
cmpsl
or
mov
std
sbb
or
cmp
xor
mov
fistpll
xorb
decb
and
jl
icebp
das
jle
and
repnz
daa
sbb
pop
xchg
insl
insb
jge
lock
cmpb
xchg
dec
push
sub
push
push
call
stos
nop
mov
push
inc
mov
dec
lcall
insl
shlb
xchg
push
mov
popf
or
dec
je
out
ret
adc
daa
xchg
orl
movsl
leave
pop
sti
pop
lret
add
xchg
mov
cld
fldl
loopne
stos
sahf
out
mov
xor
mov
fiadds
sbb
stos
xchg
jg
mov
dec
fbld
adc
inc
jecxz
lahf
sbb
sub
test
dec
out
incb
es
or
pushl
cmp
xchg
pusha
add
nop
mov
xlat
xor
mov
fisttpl
sarl
xchg
push
pop
data16
xchg
push
outsb
shr
addr16
push
mov
xchg
lcall
pop
xor
push
gs
pop
shrl
mov
jl
inc
add
inc
fdivl
fsubs
bnd
push
mov
sbb
test
jmp
push
hlt
ret
xor
inc
mov
sbb
mov
hlt
sbb
rclb
aaa
cmp
or
cmpsb
lods
test
fldenv
in
cmp
cmp
cmp
rol
mov
and
shlb
pusha
sub
cmpsl
and
jae
outsb
mov
adc
and
cmpl
adc
outsb
shll
cmpsl
dec
jmp
or
fwait
ret
adc
call
pop
xchg
pop
int3
lods
or
mov
or
mov
xor
stc
outsl
or
pop
out
xchg
aad
pop
mov
lods
jmp
cs
xchg
mov
and
sbb
adc
fnstsw
mov
arpl
mov
mov
mov
jo
mov
out
clc
push
lret
iret
xor
pop
push
cld
mov
jp
pushf
adc
sbb
insl
push
xchg
pop
idiv
pop
jle
jp
mov
dec
xchg
das
or
mov
sub
ret
sub
jg
sbb
pop
jo
addl
mov
xor
dec
mov
inc
mov
out
icebp
out
mov
mov
mov
sbb
outsb
lret
hlt
scas
add
cmp
ret
cmp
sub
and
cmp
imul
sub
lock
adc
pusha
pop
icebp
and
inc
scas
inc
loope
icebp
aas
push
mov
stc
hlt
mov
popa
or
xor
nop
repnz
movsl
outsl
push
mov
jnp
mov
push
test
mov
cmp
mov
xchg
test
mov
scas
aam
adc
in
ds
inc
popa
test
cli
inc
jl
das
jne
and
sbb
outsl
mov
shl
lret
sarl
lcall
sti
aaa
xor
shl
sub
sahf
and
adcb
popa
rorw
icebp
rcll
daa
hlt
rolb
cltd
aaa
and
test
mov
cmp
pop
lret
or
xchg
jg
insb
imul
data16
xchg
push
adc
sub
out
fsubrl
adc
add
inc
test
adc
sti
adc
mov
pushf
push
and
ret
mov
sub
pop
pop
fidivrl
lds
inc
xor
sub
push
dec
xor
in
add
and
das
rcrl
ds
les
pcmpeqb
ret
dec
jns
mov
leave
lods
xchg
cld
mov
adc
jbe
push
aad
bnd
int
adc
xor
sub
aas
push
sbb
aas
adc
xchg
hlt
andl
xbegin
lds
sbb
mov
or
mov
inc
or
out
int3
nop
aas
scas
iret
lods
jg
outsl
gs
int3
push
dec
data16
jl
mov
orb
or
imul
pop
cli
push
push
inc
addb
imul
dec
add
decl
addl
ret
push
add
cwtl
add
add
icebp
dec
loopew
lret
inc
add
inc
adc
sti
mov
lock
decl
jle
cmp
aad
mov
fistl
ret
es
mov
clc
pop
and
mov
mov
test
xor
jne
loopne
addb
fimuls
sahf
pop
dec
ljmp
cli
dec
jge
call
lock
jnp
inc
repnz
fwait
xchg
mov
sar
clc
movsl
roll
pop
and
lret
adc
push
push
pop
mov
push
inc
fmuls
aas
fcompl
aad
out
cmp
pop
popa
aas
lods
stc
jecxz
fdivr
stos
xor
scas
inc
pop
mov
je
les
arpl
out
repnz
push
jp
push
mov
ret
fisttpl
lcall
data16
popa
xchg
jmp
or
add
es
test
pop
jecxz
ljmp
int3
ljmp
int3
or
popf
std
out
lcall
pop
and
lods
xchg
test
sbb
add
fdivl
xor
pop
shlb
inc
add
jmp
or
rcrb
cld
testb
movsl
pop
mov
fiaddl
daa
adc
push
test
loopne
sub
sub
out
or
fbstp
add
pop
cltd
outsl
shrb
fisttpl
std
mov
jmp
mov
inc
push
je
and
mov
popf
pushf
add
push
jnp
sahf
xor
cld
loopne
pop
fcomip
lds
cmp
std
sbb
mov
out
hlt
cld
adc
mov
icebp
ret
cmp
xchg
mov
and
call
subb
inc
pop
mov
sbb
cli
in
jo
sbb
in
js
push
mov
push
sbb
dec
cmpl
lock
or
add
dec
les
ss
lods
test
out
adc
rcll
cmp
mov
fcomp
sub
mov
dec
cmp
cmp
adc
shrl
adc
mov
jb
aam
xlat
dec
clc
mov
add
pop
or
mov
loop
in
syscall
xchg
ja
loope
xchg
fmul
pop
shrl
leave
fildll
mov
iret
jno
mov
jg
das
or
mov
shll
dec
bts
les
hlt
push
push
nop
fdivrs
xchg
jmp
aam
out
aaa
ficomps
adc
or
xchg
dec
and
fcoms
loope
mov
fistps
sub
pop
sti
adc
inc
and
stos
mov
lcall
mov
push
in
movsl
jmp
stos
iret
mov
insb
jbe
sub
mov
inc
cmp
ret
std
es
iret
add
imul
inc
mov
pop
je
lods
ss
mov
cmp
inc
into
and
inc
test
and
mov
lods
jmp
add
push
cmpsl
cmp
push
out
aad
int3
dec
push
mov
mov
xchg
aaa
jne
mov
stc
cmc
insl
xchg
fisubl
inc
push
push
mov
sahf
xchg
imul
loopne
pop
sbb
fsub
adc
xchg
iret
mov
clc
int3
popa
insl
je
mov
decl
adc
xchg
xorl
sbb
push
mov
add
inc
nop
adc
gs
add
sub
les
pop
outsl
out
dec
xchg
push
iret
mov
mov
xchg
mov
inc
js
mov
jg
sbb
jno
and
sahf
mov
or
mov
jnp
iret
aam
and
or
cwtl
incl
or
aad
cmp
rol
incl
push
dec
ret
xchg
mov
sbb
fcomip
lods
adc
call
and
pop
cli
test
and
insl
jecxz
pop
push
aam
pop
cmpl
into
jg
fistpl
outsl
cmp
int
adc
fiadds
stos
lods
les
jl
ffreep
aas
xchg
mov
dec
mov
adc
lock
pop
rorb
das
in
int
and
push
pushaw
mov
loopne
fdivrp
inc
or
mov
int3
or
nop
push
sub
pop
sbb
bound
and
mov
push
frstor
xchg
into
popf
inc
mov
jo
jo
scas
test
rorb
scas
lret
in
shlb
xor
push
movsl
incb
lcall
cmp
pop
nop
lret
lock
out
pop
or
fnsave
dec
aad
clc
insl
pop
jmp
mov
push
test
or
add
or
add
mov
lods
adc
push
jnp
mov
decl
int3
addb
je
pop
sub
pop
popf
mov
jmp
sti
pop
lods
es
ret
mov
filds
xlat
outsb
sbb
push
outsb
add
clc
mov
jge
mov
xchg
leave
or
add
dec
lcall
icebp
fwait
inc
loope
pusha
xchg
inc
adc
js
mov
loop
stos
not
stos
lret
xchg
fs
mov
mov
jne
dec
aas
es
or
fdivr
sti
cmpsb
xorb
or
dec
cmp
push
and
ffreep
mov
and
testb
dec
mov
add
mov
test
sbb
aaa
std
xchg
sub
js
pop
insb
pop
outsl
pop
cli
ja
mov
lods
mov
insl
lods
popf
imul
rcll
sbb
cmp
push
add
outsl
jl
imul
xchg
push
ss
sti
popa
adcl
mov
adc
mov
clc
jg
outsl
cmc
dec
fs
ror
add
push
dec
aad
js
shl
and
fidivs
mov
mov
push
cmp
dec
int
in
push
sbb
test
jg
out
ljmp
movswl
push
aaa
cs
scas
mov
ret
loopne
movsl
push
clc
arpl
inc
sarb
add
dec
xchg
inc
outsl
lods
sarb
out
icebp
aas
push
incl
cmp
pop
aas
add
xchg
in
mov
loop
pop
sub
pop
call
xchg
icebp
xor
jmp
addb
sub
ds
and
lcall
mov
inc
and
mov
ljmp
inc
mov
mov
lea
fbstp
mul
adc
in
mov
dec
repnz
cmp
jle
sbb
pop
das
add
xchg
jne
subb
cmp
mov
pop
dec
mov
push
mov
out
lahf
dec
jnp
sub
xchg
movsl
pop
es
mov
mov
sbb
in
xchg
pushl
jl
or
cli
pop
mov
sbb
in
gs
xchg
lock
push
fwait
lock
jae
sub
stos
stos
jle
das
enter
fs
push
outsl
pop
call
sbb
pusha
pop
arpl
and
pusha
arpl
sbb
mov
add
stos
mov
jge
dec
enter
jmp
adc
or
ja
pop
rol
rcrb
les
icebp
out
push
mov
vcmpss
mov
mov
mov
push
out
xchg
aad
xor
out
repz
mov
cmpsl
mov
push
repnz
dec
and
inc
mov
add
adc
and
lahf
mov
fstl
mov
cmpsb
xchg
out
pop
xor
pusha
fmull
cmp
sub
xchg
and
sbb
pop
jmp
sbb
push
or
inc
mov
test
and
in
adc
inc
cwtl
imul
pushf
daa
xchg
adc
dec
jecxz
insl
aaa
fimull
jmp
adc
into
ret
or
lret
mov
cld
add
popf
dec
xchg
inc
sbb
jmp
stos
inc
je
ja
daa
or
cs
mov
dec
ficompl
add
or
and
add
sub
xor
lock
and
enter
es
das
movsl
scas
mov
fisubrl
mov
repz
inc
jl
inc
jmp
add
lock
aad
aad
sub
adc
push
lahf
push
dec
lods
xor
mov
cld
shrl
out
push
popf
add
mov
or
hlt
cmpsb
ljmp
js
mov
and
adc
or
enter
pop
mov
mov
mov
dec
sbb
sbb
notl
xor
jo
addr16
cmp
lods
mov
rcrb
ljmp
sti
pop
movsl
loopne
and
fiadds
ja
movsl
lcall
dec
cmp
fldenv
lcall
pop
push
jns
shr
or
adc
pusha
add
sti
sbb
enter
stos
rcll
xor
sbb
das
xchg
test
inc
xchg
movsl
xchg
stos
imul
int3
stc
jae
push
js
fwait
loopne
ljmp
outsl
add
lock
push
cld
test
xchg
mov
loopne
test
ret
and
lods
aam
or
and
sbb
repnz
nop
mov
clc
fiadds
movsl
xor
int3
incl
ret
add
int3
in
sarl
lret
add
adc
leave
out
aad
sub
scas
or
inc
ja
xor
push
dec
xor
or
adc
icebp
mov
aam
push
aad
ljmp
shlb
add
push
add
pop
enter
cwtl
push
jns
jecxz
stos
loopne
cli
sbb
fwait
imul
into
daa
and
loop
push
fcoml
add
int
add
xor
dec
xchg
pop
call
sub
dec
aam
mov
mov
adc
mov
xchg
out
fs
sbb
push
mov
dec
stos
cld
mov
mov
inc
inc
popf
lcall
add
rcrl
ror
adc
and
sub
mov
sbb
add
push
sbb
and
fbld
test
dec
mov
inc
xchg
adc
les
lret
popf
push
shrl
inc
call
stos
hlt
lcall
jbe
dec
and
mov
xor
flds
adc
mov
pop
int3
or
syscall
mov
and
cli
imul
mov
push
adc
or
fisubs
mov
bound
lock
dec
lock
jg
inc
rcll
and
shll
shll
es
push
outsb
or
notb
and
stos
push
sub
fdivrl
jmp
int3
mov
mov
orl
aas
loopne
cmp
sub
repnz
cmp
addr16
jecxz
dec
mov
add
iret
inc
loopne
mov
fucomip
shlb
fwait
repz
gs
mov
adc
imul
jl
or
jl
inc
jmp
cmpsl
sub
cmpsb
dec
mov
xchg
lcall
add
jmp
xor
cmp
in
rorl
rol
jbe
jmp
push
pop
mov
sub
outsl
test
jg
pop
ficoms
clc
xchg
jne
xor
das
and
notl
pop
pusha
xorl
test
xchg
and
xor
jmp
mov
addr16
cwtl
push
inc
pop
cmc
popl
cmp
nop
jp
and
cld
mov
js
cld
sbb
stos
std
sbb
lahf
mov
inc
inc
mov
lahf
and
in
es
std
adc
sbb
ja
mov
je
inc
sahf
xchg
sub
aam
cmp
push
mov
sbb
inc
rcl
das
ss
xchg
jle
mov
mov
shll
inc
rclb
push
push
lods
roll
jg
and
enter
testb
cs
and
sbb
ljmp
or
sbb
clc
xchg
lahf
mov
inc
stos
dec
fistpll
jg
int3
adcl
or
xor
mov
incb
or
push
mov
aaa
add
jg
lods
cmp
lret
sub
or
mov
out
clc
in
fisttpll
ja
xchg
in
add
hlt
sub
adc
jno
mov
xchg
mov
movsl
incb
jnp
test
fnstsw
fwait
cld
adc
xor
mov
inc
mov
xchg
mov
and
andl
or
ret
adc
jo
cmp
fsubrp
fbld
mov
or
sti
and
xor
loop
nop
add
mov
vmread
and
jp
cwtl
adc
jecxz
mov
dec
insb
push
ret
stos
je
add
push
xchg
cmpb
iret
loopne
adcl
in
and
mov
clc
stos
fldt
and
inc
dec
push
lret
lcall
pusha
mov
iret
add
lock
xchg
and
test
sub
adc
mov
repnz
pop
inc
xchg
dec
imul
stc
push
rorb
inc
jno
inc
dec
mov
addb
fcomps
mov
and
scas
adc
iret
push
fwait
push
lock
sbb
jge
sti
or
xor
xor
inc
xor
gs
and
loopne
cmp
pop
inc
pop
xor
pop
push
mov
jbe
mov
mov
jno
and
in
mov
std
adc
scas
lea
push
ret
loopne
sub
add
test
add
push
popa
int3
jne
stos
or
pop
addr16
andb
ds
loopne
clc
inc
dec
cmp
insl
pushf
push
mov
fimuls
or
xor
sub
faddl
fbstp
mov
les
lods
jno
mov
cmpsb
test
push
mov
lret
mov
ret
add
xor
jle
add
imul
push
hlt
and
mov
jne
push
sub
call
push
dec
add
lock
jno
add
jmp
test
jne
mov
xor
adc
add
inc
add
sub
movl
fsts
lahf
jnp
clc
jmp
sub
ret
adc
xchg
insl
fwait
int3
loopne
int3
pop
rorl
pop
or
mov
pop
sarb
inc
in
rcll
fcompp
repnz
adcb
rclb
subb
mov
imulb
sbb
adc
mov
inc
sbb
push
xor
xor
sbb
mov
or
into
inc
cltd
ss
add
lahf
sbb
ss
andl
ds
cli
inc
rcrl
stos
popf
imul
mov
mov
and
out
jecxz
cmp
ss
inc
xchg
fists
or
and
icebp
sahf
mov
mov
and
aaa
push
lcall
and
dec
clc
test
push
aas
js
add
xchg
mov
jl
sbb
pop
mov
cmpsb
dec
mov
mov
push
fbstp
jo
sub
sub
sub
loop
hlt
shll
dec
dec
jns
and
sub
lock
sub
cmp
repz
mov
insl
or
aam
push
in
mov
insb
inc
xor
test
push
push
xor
jl
jae
decb
inc
in
hlt
icebp
jle
pop
xor
xchg
in
xor
repz
jecxz
pop
int3
inc
sbb
inc
dec
sub
xchg
sbb
and
pop
mov
xchg
clc
test
sarb
rol
sbb
mov
out
add
fildll
cmpsb
jmp
repnz
stos
lret
or
scas
in
inc
aas
inc
dec
push
shrl
fldenv
cmp
inc
mov
mov
inc
cmp
pop
add
mov
inc
rcrb
repz
xchg
xor
cmp
mov
inc
xchg
sub
and
out
mov
sahf
lahf
loopne
push
icebp
pop
sub
std
jmp
sbb
sbb
mov
xor
loopne
or
cmpsl
push
aam
int
inc
dec
loopne
aad
and
mov
mov
scas
fists
fstl
imul
inc
inc
push
mov
fcmovu
movsb
sub
rcr
mov
scas
adc
movb
inc
and
loop
inc
xor
std
outsl
or
push
nop
sub
jmp
call
push
loop
stc
xor
outsb
cmc
movsb
loope
pop
pop
rcrb
xchg
mov
cld
fwait
add
ret
ret
add
and
std
ffreep
push
scas
inc
add
push
lret
jbe
or
das
les
xlat
xchg
addr16
mov
repnz
loopne
adc
in
sbb
push
loop
ljmp
jmp
sahf
inc
xchg
fsubrl
sar
pop
jl
ss
stos
or
adc
gs
add
jne
sbb
push
inc
add
adc
jg
sub
mov
rorb
dec
add
mov
shl
std
adc
pop
sidtl
movsb
jecxz
roll
stos
mov
xchg
adc
or
shll
xchg
aam
pop
or
inc
inc
add
cwtl
push
mov
ret
and
in
aaa
clc
pop
and
mov
int3
stos
xchg
and
pop
mov
filds
inc
mov
dec
xchg
mov
scas
cwtl
and
pop
out
mov
pop
xchg
or
outsl
adc
add
leave
mov
stc
mov
or
dec
stos
aad
push
stos
mov
push
enter
inc
and
rolb
stc
mov
mov
aaa
fiadds
inc
xor
push
xor
inc
add
lret
insl
sti
repz
mov
mov
mov
lcall
pusha
mov
ror
sbb
test
out
push
icebp
and
jbe
enter
test
pusha
aad
cmpsb
mov
xchg
cmp
push
orl
mov
mov
mov
or
cmp
inc
dec
jge
jmp
pop
xchg
jae
subb
inc
or
inc
mov
lds
jne
aam
xor
adc
es
push
pushf
stos
lret
std
push
xchg
jl
pop
nop
or
xchg
lret
dec
test
push
cs
xor
pusha
adc
das
jge
test
aas
push
test
mov
jmp
pop
jbe
and
sub
pop
std
sbb
and
sbb
jns
add
jle
clc
inc
out
jbe
xchg
pop
jg
pop
cmp
subb
adc
cmpsl
push
pop
inc
mov
inc
pop
flds
push
clc
pop
adc
cmc
stos
mov
lea
and
out
hlt
jp
xchg
push
jo
ljmp
jne
jg
and
pop
outsl
fwait
mov
mov
repz
mov
stc
mov
dec
cmpsb
je
repz
add
mov
lea
sub
outsl
pop
int
cli
pop
je
ja
bound
addr16
popf
jmp
adc
inc
push
ds
test
call
into
cli
fdivrl
out
xchg
sbb
push
mov
mov
cld
jo
out
loop
sti
outsl
mov
mov
mov
les
mov
adc
int
and
or
ds
push
sub
rorb
js
popa
in
out
enter
cmp
mov
repnz
dec
push
sbb
and
es
and
or
adcl
out
fimuls
ret
push
ja
jae
ret
inc
arpl
fiaddl
lret
mov
inc
mov
call
incl
and
push
sarb
imul
leave
or
je
jb
sub
sbb
in
insb
or
or
push
les
dec
inc
lret
or
inc
and
mov
stos
or
shlb
mov
mov
in
xchg
jl
pop
xlat
pop
xchg
jmp
mov
call
add
movsl
jno
dec
adc
ljmp
mov
add
and
test
insl
push
cmp
push
lock
jnp
mov
pop
fsub
int
adc
sbb
and
sbb
add
mulb
adc
es
jp
jnp
ret
dec
int3
enter
scas
mov
shl
lahf
inc
dec
std
mov
test
add
sbb
aas
test
cmc
adc
pushf
and
xchg
push
aaa
jnp
inc
nop
sub
cmp
pop
and
jo
loope
stos
mov
clc
push
xor
les
xor
push
popa
js
and
in
add
xchg
cmp
mov
out
jecxz
sub
pop
test
add
adc
cmp
push
roll
push
lds
jno
je
ret
les
add
mov
aaa
jnp
pop
pop
add
lret
loopne
std
add
mov
or
out
xor
adc
and
in
lock
lods
or
sbbb
js
sahf
and
test
fcmovb
mov
out
pop
push
mov
sub
and
and
sub
loopne
int3
cmp
scas
dec
movl
hlt
add
mov
shl
pop
call
push
aaa
add
dec
adc
sub
inc
inc
adc
mov
gs
mov
sbb
cli
adc
add
sub
ret
cmp
mov
cld
out
shlb
add
into
adc
add
inc
xchg
pop
push
sbb
and
mov
add
jmp
pop
loopne
imul
popf
je
and
or
push
cmp
pop
sbb
jbe
in
or
and
sbb
mov
aas
call
xor
jae
dec
xor
cmp
adc
xor
and
mov
lcall
mov
call
movsl
sub
les
orb
cwtl
add
xorb
aas
clc
push
sar
insl
cs
loop
inc
cmp
push
add
mov
inc
xor
cmp
cli
in
loope
andb
mov
jecxz
mov
aam
inc
imulb
and
rclb
aam
pop
imul
orb
mov
ret
mulb
jne
mov
insb
fistpll
push
dec
daa
lahf
or
adc
mov
pop
dec
or
xchg
xor
sub
mov
outsb
popa
jne
dec
dec
pop
clc
out
testl
paddd
add
add
xor
dec
adc
inc
outsl
outsb
loope
fcmovnu
add
mov
inc
inc
jg
push
pop
xchg
cmp
xchg
pop
and
inc
loop
and
sahf
lcall
call
mov
loope
mov
rorb
or
push
mov
shlb
test
xor
inc
mov
push
cmpb
and
mov
pushf
sbb
or
addr16
add
test
neg
jae
js
or
xor
sub
andb
adc
push
js
push
les
add
xor
dec
lods
pop
push
in
sbb
push
popf
adc
adc
mov
add
or
inc
mov
dec
and
loopne
inc
ret
ret
sbb
out
adcb
jnp
or
pop
stc
push
imul
xor
ret
or
and
shr
push
movsb
pusha
ror
arpl
sti
lret
xor
loope
mov
out
in
sbb
push
xor
xchg
lcall
xor
xor
push
dec
sbb
mov
inc
xor
xor
roll
push
adc
ds
sub
xor
sbb
xor
hlt
int
cld
aas
sub
bound
fsub
adc
mov
pop
mov
rcrl
scas
xchg
faddl
insb
out
scas
add
xor
sahf
mov
lcall
sub
mov
xorb
mov
jge
and
cmp
and
or
andl
shlb
inc
dec
jl
aam
sub
decl
js
pop
mov
jge
xor
inc
xor
loopne
mov
xor
out
fdivr
das
gs
mov
shl
jg
push
aas
enter
mov
cmp
in
or
or
or
data16
add
mov
dec
xor
inc
xchg
inc
adc
mov
adc
adcb
insb
test
aam
aam
xor
ret
jge
dec
rclb
mov
and
adc
adc
xor
inc
cmp
aaa
mov
sbb
xchg
adc
nop
jae
aaa
insl
out
movsl
test
into
push
xor
mov
ret
jae
inc
ret
filds
cmpsl
mov
inc
test
jnp
jnp
out
adc
xchg
mov
es
arpl
mov
and
test
and
lcall
scas
add
xor
jne
xchg
pop
mov
dec
xor
push
mov
cmp
push
lret
and
push
ret
shrb
daa
and
ljmp
sbb
sub
enter
push
insb
add
subb
addb
loope
inc
nop
and
adc
mov
xor
lock
xor
in
pop
inc
cmp
sub
lods
lds
pop
add
mov
and
sahf
inc
adc
jp
loope
jne
xchg
das
stc
sbb
adc
add
incb
aam
ja
notb
shrb
inc
xchg
cld
in
jg
ret
repnz
inc
push
add
and
add
push
mov
add
push
pop
stc
jnp
jmp
dec
mov
push
cltd
or
or
cmp
jo
sbb
jmp
inc
incl
inc
push
ds
jne
dec
gs
aad
jecxz
xchg
add
adc
popa
or
cmp
add
mov
jl
pop
jbe
icebp
adc
pop
stos
call
jg
movsb
add
pop
jecxz
mov
int3
into
sbb
ljmp
pop
push
inc
imul
test
test
jle
xchg
xchg
adc
das
les
in
add
outsl
mov
mov
xor
add
add
mov
sub
jno
xchg
jle
add
or
and
inc
and
mov
mov
pop
and
cmp
jmp
lods
add
add
push
inc
mov
sub
mov
inc
pop
or
mov
cmc
fistpll
jnp
pop
dec
stos
xchg
jno
mov
pusha
jp
mov
cmpsl
out
sbb
xchg
xlat
aam
lcall
jb
aaa
add
xor
xchg
xchg
pop
mov
fbld
mov
dec
xchg
inc
in
add
or
pop
sar
push
xlat
add
je
out
add
outsl
rclb
sub
enter
dec
test
dec
add
test
pop
add
jge
mov
test
shrl
mov
std
and
xchg
xchg
je
dec
insl
insl
adc
pop
inc
jno
jl
leave
and
imul
pushl
xchg
jecxz
sbb
in
scas
adc
lcall
mov
xchg
add
xor
cmp
jb
add
mov
mov
mov
aas
into
xor
in
mov
dec
cld
cmp
mov
popa
sbb
loope
pushf
cmp
decl
fcomip
cmpsl
imul
lods
add
push
addb
ficompl
mov
out
cld
add
call
imul
jnp
push
pop
and
icebp
xor
adc
push
lock
lea
rorb
lods
xchg
mov
andl
mov
mov
mov
mov
cltd
cmp
mov
pop
shlb
popl
xchg
push
or
cwtl
int3
push
adc
icebp
fildll
xchg
add
inc
xchg
out
and
std
int
or
fistl
arpl
mov
loope
ss
addr16
sbb
dec
lret
fisttps
jae
cltd
push
js
mulb
lahf
push
enter
mov
fistpl
or
loope
xchg
and
sti
imull
fnstsw
pusha
add
leave
push
bound
mov
xchg
iret
je
lds
push
lret
addb
pop
push
mov
gs
mov
das
sub
add
ljmp
bound
jg
pop
cs
xor
rolb
dec
jge
dec
pop
sti
fcoms
dec
movq
cwtl
rcrl
pusha
jecxz
mov
xor
adc
aaa
cs
inc
push
sbb
cmpb
adc
inc
enter
dec
push
sub
dec
or
mov
incl
add
lret
jl
sbb
push
jg
sub
sbb
icebp
test
call
push
pusha
sbb
dec
inc
or
adc
push
mov
push
sets
clc
jmp
add
loope
dec
cmpsl
insl
jo
xchg
nop
aad
push
mov
pop
bound
gs
ret
jl
add
orb
sub
mov
lea
setno
fcmovnb
ret
cli
dec
cs
mov
les
jne
and
insl
or
mov
mov
movl
and
pop
mov
sub
inc
outsl
fisttps
xor
mov
cmpsl
add
xchg
decb
lahf
jge
mov
idiv
xchg
mov
inc
cmpsb
ds
xor
out
clc
cwtl
jp
pop
mov
xor
shl
mov
xor
push
les
fptan
mov
or
in
inc
mov
sub
or
int3
adc
ljmp
pusha
sahf
or
xor
pop
xor
add
add
xchg
decb
push
sbb
pop
icebp
jg
leave
fstl
enter
xor
adc
call
and
push
add
fwait
push
loope
mov
in
xchg
cmpsl
pop
cld
bswap
lret
aam
xchg
xchg
test
push
lds
adc
notl
out
cld
pop
ss
repz
xor
cmp
push
shll
std
or
adc
push
popa
cmpsl
ret
jno
sbb
adc
xchg
sub
jg
cmp
fiaddl
or
jbe
sub
aam
mov
mov
scas
loop
lds
outsl
fcmovnu
sbb
in
popf
je
sbb
ret
subb
mov
int3
notb
sbb
clc
ret
cld
data16
cmp
push
mov
daa
jecxz
pushl
ss
and
adc
shll
outsb
rolb
sbb
call
push
lret
aam
mov
jecxz
ss
loopne
aas
in
data16
add
xor
rcr
push
xchg
adc
loopne
mov
repz
inc
nop
addr16
test
mov
mov
add
popf
mov
mov
iret
movsl
add
xchg
clc
sbb
push
stos
fucomi
lcall
and
outsb
mov
or
sub
scas
and
push
mov
rcrb
clc
jno
enter
outsl
mov
shrl
mov
jb
sub
ljmp
call
adc
sbb
addb
mov
je
addl
add
sbb
popa
das
sub
sub
and
iret
movsl
inc
add
test
or
add
test
cli
inc
ljmp
pop
mov
xchg
pop
xchg
dec
and
add
add
rolb
xchg
inc
or
add
push
mov
adc
lret
into
lea
mov
adc
mov
and
lret
mov
addl
enterw
mov
test
enter
test
add
mov
repnz
out
xor
xor
jno
dec
add
les
sub
rorb
cmpsb
pushf
cmp
jne
cmp
add
addr16
jbe
enter
repnz
push
mov
cmp
cld
and
jmp
pop
inc
cmp
call
add
dec
fneni(8087
fmull
push
test
sti
ret
stc
sahf
add
adc
jbe
inc
or
push
jo
jb
and
in
push
mov
sbbb
xor
shl
stos
mov
mov
and
xchg
dec
adcl
and
pusha
jge
xor
xchg
mov
inc
pop
in
pop
pop
lock
push
jnp
in
out
cmpb
es
pop
es
jl
xor
clc
add
xor
subb
pop
adc
andb
es
subb
cmc
pop
rcl
lret
push
subl
imul
into
scas
fdivl
adc
add
les
cli
inc
jecxz
or
pop
add
jb
test
push
cmpb
pop
xor
adc
xchg
xor
add
add
mov
pop
fs
sbb
mov
mov
sub
inc
lock
sbb
jecxz
jnp
mov
mov
xor
aaa
jle
repnz
pushfw
inc
inc
push
or
rclb
or
or
lods
sbb
xchg
sbb
add
and
shlb
adc
cmove
rclb
add
pushf
mov
fsubs
mov
mov
outsb
rcl
data16
mov
or
adc
fwait
and
push
in
mov
adc
data16
ret
mov
and
add
pusha
sbb
inc
mov
push
andb
enter
stos
mov
test
insb
or
mov
fists
pop
adc
push
rorl
add
movsb
push
popl
inc
andb
ficomps
add
add
pop
jo
out
js
push
mov
dec
bound
addr16
pop
in
dec
and
mov
out
add
sbb
adc
xorb
sub
jns
inc
mov
add
adc
repz
xor
in
or
xchg
inc
sbb
aaa
mov
jne
or
or
mov
sbbb
inc
int
add
pop
ja
xor
sbb
xor
fmuls
icebp
insl
lcall
test
fbld
sbbl
adc
jg
addb
das
add
je
sbb
add
pop
mov
mov
nop
rolb
adcb
roll
adc
pop
into
mov
xorb
or
sahf
jnp
pop
in
rolb
pop
jp
xchg
mov
cmc
enter
or
inc
sub
cld
or
loopne
inc
and
cmpsl
sub
xor
mov
loopne
push
fsubr
bound
jbe
jo
mov
pop
push
pop
mov
test
sbb
cli
test
pusha
jo
in
call
aas
add
les
sbb
sbbl
rclb
shlb
call
lock
dec
add
lds
xchg
jns
inc
or
call
lock
push
pop
push
sbb
adc
shlb
fcoms
inc
mov
mov
fiadds
add
mov
andb
and
adc
sbb
or
push
push
fcomip
adc
sub
rcrb
mov
xchg
add
add
fadds
sbb
lret
mov
fnstenv
or
psllw
or
xor
inc
subb
mov
inc
jne
cmp
fwait
stos
jb
fnstsw
and
dec
pushf
add
push
test
mov
push
andl
add
pushl
mulb
sbb
ret
push
aaa
cmc
or
inc
sub
cmp
cli
lods
and
test
add
jge
pop
aam
ds
test
inc
and
ljmp
xchg
or
xchg
mov
inc
cmpb
rolb
mov
and
fstl
je
pop
inc
mov
in
mov
mov
mov
sub
mov
sbb
jne
mov
pop
inc
fistps
cmc
dec
rclb
test
inc
sahf
das
dec
in
mov
lea
out
or
addl
cmp
ss
xchg
in
pop
int
test
outsl
aad
push
push
mov
aas
cmp
ja
mov
cli
adc
mov
mov
imul
das
add
cmc
fstl
insl
fucomip
pop
and
cs
in
rorl
jns
cltd
cmpsb
cmpsb
shlb
movsl
mov
xlat
sbb
das
inc
xchg
in
pop
mov
or
sub
scas
inc
enter
nop
outsl
add
sbb
push
or
outsb
mov
dec
push
out
mov
ljmp
lods
or
add
sbb
clc
adc
roll
mov
xchg
lahf
sub
es
pop
fadds
mov
dec
inc
sbbb
cvtpi2ps
or
pop
jo
lods
aad
jmp
xchg
xor
xchg
pushf
add
mov
fwait
incl
push
loopne
cmpsl
mov
mov
push
fadd
and
outsl
add
mov
out
add
fbld
pop
negb
or
or
pushl
imul
outsb
sbbb
or
pop
fmulp
push
add
test
cmc
cmc
fistpll
mov
std
es
xor
out
cmp
out
sub
add
xchg
inc
testb
addr16
test
loop
insl
jbe
jle
sbb
mov
adc
jne
mov
adcl
mov
inc
ljmp
sub
mov
mov
sub
xchg
mov
pop
inc
jae
out
stos
sub
dec
jg
lret
test
in
cmp
add
push
dec
and
xor
nop
push
std
or
add
add
test
jg
push
andb
test
test
in
gs
add
in
loope
inc
push
add
cmp
adc
sbb
test
nop
and
pop
clc
mov
mulb
add
cwtl
adc
in
xor
xlat
lods
cs
push
mov
mov
inc
jge
push
stos
addl
jbe
fmuls
xchg
std
pop
inc
inc
xchg
cmp
adc
add
sbb
fdivrl
dec
nop
je
cmp
mov
cwtl
dec
sahf
pop
ja
out
cltd
jb
in
aad
push
pop
mov
mov
sub
inc
and
test
insl
mov
pop
inc
rolb
imul
jb
fnsave
test
jne
sub
mov
test
outsb
xor
inc
pop
inc
fsubr
cmp
xchg
ret
mov
ss
outsl
sub
xchg
cmp
lcall
insl
icebp
add
xorl
lds
push
cmp
sbb
sub
mov
and
arpl
in
push
adc
filds
mov
xor
jbe
andl
mov
cmpsb
cli
pop
dec
xchg
lea
dec
dec
sub
adc
cli
outsl
inc
sub
iret
inc
test
testb
mov
add
bswap
ret
pop
ret
add
pop
sub
lea
mov
xor
jb
test
and
or
cmp
sar
cmovs
mov
jb
dec
aaa
mov
push
push
pop
add
clc
pop
lret
test
mov
or
pusha
lods
jle
stos
icebp
jns
notb
mov
mov
inc
add
adc
pop
mov
mov
mov
stos
insl
sub
movsl
lea
jnp
lock
scas
je
fildll
fistpll
es
push
and
push
test
lsl
loopne
dec
pusha
jo
daa
adc
in
popa
jmp
ret
jae
loopne
sbb
les
add
scas
mov
cmp
jle
sub
into
test
into
sahf
imul
cs
fbstp
mov
inc
aas
mov
cld
sbb
lahf
mov
add
aaa
cmp
shlb
and
sbb
add
sub
das
push
mov
fcoms
push
pop
pop
inc
popf
lcall
stc
adc
and
mov
ja
push
loop
jg
sti
movsl
lea
sub
into
add
movsl
pop
add
das
test
and
sti
mov
inc
mov
cmp
mov
dec
fucomip
lods
in
cld
push
roll
cmp
rep
outsb
push
pop
or
sti
mov
cmp
pop
iret
add
sbb
lea
xchg
sbb
add
xor
rcll
mov
push
xchg
test
ret
jmp
out
lds
xlat
sarl
adc
sbb
cli
int3
stc
pop
loopne
mov
mul
fs
in
mov
dec
pop
lea
in
es
adc
dec
outsl
pop
ret
push
std
stc
xor
divl
lods
fidivs
push
jp
lret
lea
sub
je
sub
dec
pop
cld
ljmp
or
cmpsb
les
mov
filds
pop
loopne
int3
lret
push
dec
out
xchg
incl
cld
adc
imul
movsb
pop
add
sbb
pop
inc
lahf
imul
dec
xchg
jae
or
sub
insb
addr16
inc
pop
push
add
xor
jmp
cmpsl
push
sti
push
add
pusha
sbb
roll
xor
lock
outsl
xchg
mov
lahf
and
rorl
mov
mov
mov
cmp
or
pop
xorb
and
test
mov
mov
inc
aam
xchg
xor
shlb
imul
enter
ficomps
ret
push
mov
shll
lock
adc
jns
or
or
mov
dec
jge
or
test
mov
push
sub
xor
cld
adc
ret
mov
pushf
add
neg
adc
sub
mov
andb
int
fistl
loop
stos
xchg
push
xor
xchg
and
cli
std
add
aaa
or
jle
sti
sub
ss
adc
adc
movsl
insl
mov
gs
push
xor
mov
popf
shlb
jne
sub
outsb
aam
add
or
mov
or
sbb
test
in
ret
js
test
repz
andl
adc
mov
stos
pop
aad
mov
jno
add
mov
xor
xchg
stc
inc
inc
and
jecxz
aad
lods
stc
adc
sub
or
mov
adc
add
test
xor
or
xor
xchg
sbb
or
daa
sbb
xor
inc
sbb
dec
mov
je
je,pn
jo
inc
mov
xor
leave
popa
push
hlt
or
psubd
les
ror
loopne
cmp
ss
lret
add
fistpll
std
pop
adc
add
cwtl
adc
nop
inc
leave
jns
xor
mov
test
add
jmp
dec
pop
rol
in
orb
dec
out
pop
mov
fisubs
stos
fadd
sub
push
dec
sub
mov
cld
jbe
xchg
shrb
push
push
mov
in
into
sub
add
mov
ret
mov
mov
push
sbb
lcall
push
mov
fwait
test
addb
shr
aad
sub
in
scas
pop
fcmovnbe
lahf
arpl
in
mov
push
test
shrb
cltd
jecxz
dec
aam
stos
inc
stos
add
fcomps
cmpsb
int
rcll
je
jne
push
cld
xor
adc
lret
dec
movsl
aad
addl
mov
lahf
mov
sahf
shrl
ds
mov
mov
mov
dec
sub
ja
scas
jl
mov
pop
push
xor
add
or
inc
lds
pusha
mov
dec
clc
pop
inc
repz
pusha
jne
add
pop
and
loop
aas
ja
stos
and
cmp
mov
sbb
fistpll
add
hlt
les
mov
mov
add
xchg
push
sub
push
xadd
push
xchg
ljmp
mov
pop
dec
jno
jnp
push
lea
sti
xchg
mov
sub
sub
popf
enter
inc
lock
mov
scas
add
insl
fiaddl
and
jnp
pop
adc
add
rol
adc
jge
movsb
add
incl
pop
adc
push
push
sbb
inc
xor
xchg
jg
mov
out
inc
pop
mov
mov
jg
mov
cs
loope
mov
pop
aaa
add
lock
jnp
push
xchg
fnstsw
sub
fidivrl
pop
xor
lret
movsl
or
insb
dec
adc
insb
fsts
cwtl
or
and
cmpsl
or
outsb
push
mov
rcrl
lds
sub
sbb
lock
into
clc
push
mov
and
push
xchg
fistps
mov
xor
out
clc
or
pop
in
test
leave
lods
mov
and
sub
xor
jge
fucomip
mov
dec
mov
add
dec
and
xor
sahf
popf
gs
clc
pop
mov
push
jnp
ljmp
xchg
adc
jle
mov
dec
sbb
movsl
repnz
test
orl
push
jmp
ss
mov
test
jo
sbb
xor
stos
stos
cmpsl
mov
lock
adcl
inc
push
les
jae
in
add
testb
lcall
scas
mov
mov
mov
inc
and
sbb
sbb
lods
sub
call
fucomip
lcall
ja
or
mov
jp
and
mov
arpl
mov
decl
icebp
ljmp
js
mov
jecxz
fiadds
hlt
jae
xchg
cwtl
mov
ja
push
cmp
addl
mov
cld
adc
xchg
xchg
adc
mov
ljmp
in
lcall
cmp
jno
or
adc
std
call
mov
sbb
xor
pop
arpl
jmp
clc
jns
jp
mov
sub
rcl
lahf
xor
push
mov
add
adc
dec
not
cmp
fildll
add
mov
mov
jmp
ds
in
mov
lea
shr
pusha
and
punpckhwd
pop
sub
cmp
cmp
sub
inc
popl
mov
lret
and
loopne
push
cwtl
xor
lock
pusha
outsl
hlt
xor
shll
int3
jno
inc
adc
cmp
mov
mov
faddl
sub
mov
or
cmp
sbbb
dec
sub
cmp
or
fs
inc
mov
mov
ret
mov
ss
push
mov
scas
fimull
or
cmp
mov
adc
sbb
adc
loopne
loope
add
pop
std
xor
or
divl
ds
fldt
dec
xor
mov
xchg
and
sbb
push
push
sub
inc
and
sbb
loopne
cmpsb
sbb
push
loopne
push
mov
fimuls
xchg
sbb
inc
cs
inc
hlt
push
cmc
push
rcr
sbb
xchg
jns
add
add
dec
inc
mov
push
fs
mov
mov
inc
pusha
fadds
pusha
or
push
sbb
mov
and
ds
xor
xor
add
xchg
sub
push
adc
add
inc
lea
sbb
inc
push
fists
fsubl
pop
add
rolb
inc
and
add
dec
testb
and
xor
mov
int
inc
push
adc
popa
pushf
push
arpl
fwait
repnz
push
mov
jecxz
adc
test
scas
cmp
mov
mov
clc
ja
imul
je
mov
out
push
or
push
add
xchg
stc
mov
or
dec
inc
xor
mov
or
dec
cmp
dec
pop
adc
push
cmpsb
jp
add
jp
push
les
das
xchg
movsl
or
popa
inc
test
repnz
sub
mov
test
pop
sbb
or
sub
mov
xchg
outsl
in
es
test
out
sub
cwtl
sbb
in
insb
mov
aaa
dec
xor
pop
xchg
loopne
mov
lret
sar
mov
roll
dec
jo
pop
mov
jmp
adc
cli
dec
add
pop
sub
and
in
incl
mov
cmp
test
cmpb
loopne
cltd
dec
cs
sub
push
es
adc
adc
sbb
or
pop
dec
aam
test
shll
fprem1
mov
push
jge
fcmovne
adc
in
adc
pop
jae
xchg
add
aam
jle
xchg
std
ss
xchg
out
das
rcl
lds
mov
pop
test
push
ss
and
lret
mov
pop
clc
push
inc
dec
aas
jge
sar
fnstcw
cmp
pop
clc
add
ret
popf
lret
dec
jle
push
inc
cwtl
sbb
and
and
sti
jmp
sbb
push
arpl
js
lret
push
pop
mov
xchg
cmpsb
test
mov
or
pop
mov
jle
aad
mov
loope
mov
mov
and
add
push
sbb
pop
fldt
sbb
or
mov
adc
add
mov
mov
cmc
scas
aad
cs
ret
sbb
sti
sbb
ljmp
call
scas
inc
sbb
cltd
xchg
jbe
add
sbb
jns
mov
orl
mov
push
in
sub
test
jb
hlt
inc
loopne
jg
xchg
into
inc
pop
imul
or
push
iret
shlb
ret
mov
inc
outsb
das
mov
push
cmpsl
loopne
xchg
scas
ljmp
jmp
test
popa
mov
mov
loopne
addr16
dec
mov
dec
shl
push
lock
mov
stc
leave
pushf
pop
jnp
jmp
jne
js
mov
add
mov
ljmp
jo
bound
or
popa
cmpsl
call
push
xchg
xor
les
popf
dec
int3
adc
jb
cmp
push
cmpl
shrl
cli
pop
jmp
xor
in
stc
pusha
stos
lods
push
roll
sbb
sub
ret
incb
sbb
xor
inc
imul
sti
mov
and
fistl
add
outsl
inc
incl
mov
stc
add
xchg
adc
mov
dec
inc
out
add
stos
sbb
push
mov
ja
ret
cmp
xchg
push
fisttpll
rcrl
ret
and
cld
pop
sub
movsl
xchg
inc
das
decb
in
icebp
das
inc
pop
in
lret
jecxz
in
inc
mov
out
cld
mov
rol
test
andl
xor
ret
les
aam
cld
lods
std
hlt
add
xor
in
bound
adc
dec
lret
leave
mov
mov
testb
jp
test
pushf
inc
push
sbb
das
out
mov
adc
and
add
add
xor
add
dec
adc
sti
inc
aad
pop
sbb
dec
test
out
xchg
je
in
xchg
xor
pushf
cmpb
cltd
and
stc
adc
push
xchg
mov
mov
fdivr
outsl
mov
xor
aaa
or
aaa
jbe
or
xor
jo
in
mov
cmpl
cltd
subb
js
in
mov
fadd
sub
xchg
add
test
test
mov
mov
fcoml
xchg
test
sbb
mov
movsb
inc
shll
dec
mov
xchg
add
jg
adc
aaa
mov
jg
outsw
cmc
xchg
pusha
sti
dec
pushf
and
scas
jl
mov
cltd
call
push
fiadds
cmp
ficoms
mov
pop
or
push
lret
dec
stc
inc
push
pop
jg
shlb
mov
or
mov
or
mov
xchg
or
dec
incl
cmp
add
mov
xchg
jno
push
mov
mov
or
pop
add
cmpsb
adc
aaa
adcb
jnp
push
ret
add
mov
fiaddl
mov
mov
pusha
aad
addr16
rorl
in
inc
sbb
adc
mov
sbb
insl
mov
sbb
mov
imulb
adc
mov
xor
cmpsb
rcrb
sti
sarb
pop
js
punpckhdq
rcl
lods
lods
call
sbb
mov
mov
call
lcall
cs
mov
mov
popf
dec
xchg
pause
sub
adcb
cmp
je
cld
pop
nop
cwtl
fldl
jae
outsl
insb
loopne
gs
andb
pop
icebp
lea
and
rolb
mov
stos
sub
pop
or
jge
popf
sub
mov
mov
stos
or
mov
xchg
incl
test
imul
jecxz
imul
adc
pop
pop
mov
aam
js
xchg
sub
incl
push
mov
cmp
mov
dec
mov
loop
arpl
push
pop
call
fucomp
test
mov
xchg
adc
sub
int
add
xchg
mov
and
adc
loopne
add
decb
cmp
sub
cltd
adc
lret
cmpsb
lods
sbb
add
lock
add
and
pop
movsb
aam
iret
inc
stos
outsl
cmp
rolb
test
lcall
decl
add
xor
sub
adc
loop
adc
fstpt
fimuls
adc
push
dec
inc
and
mov
test
add
adc
enter
lea
add
inc
push
adc
or
std
push
je
fadd
mov
pop
push
add
adc
push
test
or
sbb
call
xor
xchg
adc
iret
mov
adc
adc
fcomps
adc
xor
add
mov
lods
lods
jle
mov
inc
xchg
mov
xlat
jecxz
xor
xorb
scas
xor
rorb
cld
in
into
xor
rcl
enter
js
out
lahf
jg
loopne
bound
jne
mov
cld
stos
pop
push
xchg
jg
out
and
aam
inc
push
mov
adc
lods
push
cmp
fisubrs
dec
jecxz
mov
sbb
mov
mov
fsubs
mov
mov
xchg
mov
or
sub
cld
in
mov
out
xor
loopne
mov
pop
or
cmp
mov
and
nop
pop
sbb
mov
and
add
push
and
or
ret
pop
test
adc
mov
add
cli
jle
loopne
rcll
popf
jo
aaa
push
fnstsw
jp
mov
jge
ret
sbb
xchg
cwtl
adc
ljmp
stc
orl
aam
notb
or
xchg
cli
mov
adc
cld
lods
das
icebp
mov
xor
adc
push
je
mov
fs
add
cld
add
jmp
sbb
in
dec
and
xchg
push
jecxz
pop
dec
sub
aaa
lods
xchg
inc
inc
push
inc
outsl
mov
sub
scas
mov
mov
cmpsb
enter
pop
js
push
mov
sete
sub
push
lcall
jb
out
xchg
mov
jno
jnp
push
out
sub
aaa
lahf
enter
cmpsb
sbb
pop
jl
outsb
mov
mov
xchg
adc
add
push
push
push
push
rolb
push
out
outsb
aaa
andb
pop
cmp
cmp
lods
les
adc
jae
mov
jb
mov
jbe
sbb
inc
fistps
insb
mov
daa
cs
mov
lock
jnp
das
pop
loop
ljmp
sbb
inc
incb
and
xchg
or
jne
jecxz
jae
push
pop
adc
pop
mov
lds
sbb
push
scas
mov
or
insl
pop
sahf
fcmove
mov
mov
inc
mov
nop
in
xchg
out
ficompl
not
add
icebp
push
jl
jp
and
inc
pop
mov
mov
push
idivl
and
jbe
adc
jg,pn
sbb
andb
mov
push
mov
popa
out
in
hlt
scas
test
pop
mov
push
xorl
cmp
push
aaa
clc
nop
nop
inc
add
pop
and
enter
ret
lcall
rcrl
mov
mov
adc
and
pop
lcall
jno
jne
mov
out
sub
popf
dec
xor
test
call
faddp
test
cli
in
insb
loopne
add
ds
pop
xchg
out
add
xor
cmc
and
pop
int3
pusha
pop
push
mov
mov
int3
mov
inc
imul
addr16
mov
nop
adcl
xor
int3
pop
dec
fdivl
add
sub
fnstsw
or
push
out
inc
inc
popf
cmp
lea
sbb
mov
and
inc
jge
and
cmp
push
rorb
sbb
add
sbb
das
loop
add
jecxz
jle
je
cli
enter
xchg
mov
call
mov
dec
int3
insb
pop
lods
out
sbb
scas
aam
cmpsl
js
out
add
and
inc
jb
cmp
dec
loop
fdivl
es
daa
or
dec
mov
ja
sub
sub
push
daa
sbb
adc
clc
out
nop
insl
lock
gs
mov
pop
mov
lock
cmp
or
aad
orl
inc
es
stos
les
push
adc
lret
in
mov
fldenv
fidivrs
hlt
cmp
cmp
sub
sbb
push
inc
inc
into
fnstenv
shll
cmpsl
lret
incb
cltd
cmpl
or
fistl
mov
or
and
mov
mov
sti
mov
sbb
addr16
stos
push
and
insl
flds
mov
or
pop
xor
adc
hlt
add
scas
push
cmp
push
notl
dec
lahf
test
loop
sub
je
adc
push
xchg
movb
pop
mov
mov
cmp
enter
pop
mov
pop
sbb
mov
aam
push
xor
dec
cmpsl
je
or
pop
int
aaa
inc
je
lock
pop
sbb
cmp
jno
jbe
and
or
mov
cmp
or
scas
stos
pop
mov
push
cs
in
add
in
int
jo
jl
mov
xor
cltd
int3
mov
xor
add
or
cmp
test
mov
sub
shlb
xor
push
sbb
sbb
xlat
push
mov
xor
push
adc
ljmp
lea
add
ffreep
inc
andl
inc
add
fcmovnu
scas
xchg
push
andb
push
cmpsb
mov
jecxz
jae
aad
cmp
push
mov
jmp
xchg
adc
mov
movsl
inc
shll
stos
dec
xchg
lds
push
lea
mov
cmp
loop
cmpsb
aaa
enter
aaa
clc
mov
and
sub
hlt
mov
cld
mov
pushl
in
xchg
loope
adc
loop
add
dec
testb
decl
out
jno
xor
push
cs
push
xchg
subb
mov
jle
arpl
pop
loopne
sbb
or
dec
xor
inc
test
xchg
sbb
xor
ret
dec
das
adc
call
add
mov
incl
test
ficompl
mov
mov
incl
pop
add
into
adc
adc
and
pusha
mov
xchg
sub
sbb
int
adc
sbb
rclb
xchg
add
loop
push
lods
push
and
jl
push
mov
pop
pop
hlt
hlt
dec
jmp
roll
add
filds
dec
mov
ffreep
and
xchg
jbe
add
rorl
test
rcr
loopne
push
sub
aad
mov
mov
les
loop
mov
mov
gs
cld
sub
xor
mov
ljmp
mov
jnp
pusha
mov
jle
and
dec
gs
jl
cmp
mov
push
mov
inc
mov
test
icebp
xchg
test
popa
jae
pushf
cmc
jl
push
ret
js
orb
out
push
ds
nop
push
lret
sub
add
sub
push
mov
adcb
shr
cld
call
pop
mov
xchg
faddl
mov
dec
xor
fildll
popf
or
mov
das
adcl
jne
out
iret
push
mov
xor
lods
lcall
jb
jle
insb
out
sub
inc
pusha
and
mov
sbb
pop
xchg
insl
das
inc
inc
hlt
inc
push
pop
cmp
add
dec
and
and
sahf
or
stos
mov
aam
jno
scas
into
outsl
and
subb
push
lods
sub
push
icebp
jp
jecxz
or
sbb
xchg
add
cld
xchg
sbb
jb
scas
mov
out
push
adc
dec
add
fisttps
std
cltd
ss
std
mov
sbb
inc
pop
and
and
adc
jg
mov
adcl
ret
mov
xchg
pop
inc
inc
add
cmp
mov
sub
shrl
pushf
xchg
sbb
mov
add
dec
add
insb
insl
push
mov
mov
sub
pusha
or
jg
inc
loop
rcll
sbb
xor
inc
mov
sbb
mov
jnp
inc
out
cmp
lcall
pop
pushf
test
inc
fcoms
dec
mov
outsl
data16
xor
push
mov
repnz
jge
xlat
icebp
mov
test
ljmp
popf
mov
or
sarb
push
pop
movsb
jae
push
add
test
mov
xor
pop
mov
jecxz
mov
inc
cli
in
add
outsl
aam
fidivrl
dec
arpl
fildl
fildll
rcl
mov
dec
out
out
add
ljmp
fcmovu
pop
mov
sbb
cs
popa
cld
adc
das
cmp
decb
cmp
cltd
push
mov
inc
mov
loopne,pn
test
and
cmp
mov
ror
mov
jbe
mov
lea
lret
or
jns
jg
and
add
clc
jg
pop
imul
push
std
add
stos
lcall
adc
mov
dec
ret
push
cmp
and
sti
jecxz
sbb
or
lret
inc
sub
sbb
and
jnp
test
in
dec
popf
mov
das
std
mov
lods
mov
idivb
pusha
inc
lea
mov
ljmp
jp
push
xor
popf
iret
jp
mov
shl
cmp
shrb
rolb
jle
adc
jnp
test
aaa
loop
popa
xchg
cltd
leave
pop
ss
dec
outsb
push
push
aad
add
and
xchg
mov
cmp
xchg
sbb
xchg
jne
push
lock
fidivrs
and
sbb
insl
push
pop
xor
sbb
push
cmp
dec
je
int
dec
jno
sbb
jmp
add
push
dec
sarl
sbbb
in
push
pop
mov
adc
pop
ljmp
cmp
push
imul
xor
fstpt
fdiv
mov
or
ljmp
push
adc
cwtl
movl
iret
sub
or
fs
outsl
std
mov
or
ss
mov
sub
idiv
lods
mov
cmp
out
mov
divl
adc
fcomp
adc
push
cltd
cmp
test
loopne
shlb
pop
add
mov
aas
incl
aad
sub
xchg
push
xchg
mov
int
mov
xchg
stos
dec
cli
rol
inc
popa
sti
dec
pop
sbb
ljmp
js
mov
xchg
in
into
and
in
lods
jae
in
cmpsb
adc
add
sbb
push
xor
xchg
ficompl
fs
cmpl
push
cwtl
mov
cmp
pop
jg
sbb
mov
jno
push
jb
jbe
stc
out
push
fldenv
pop
std
dec
pop
test
enter
mov
gs
push
jle
dec
shrl
js
cwtl
push
jmp
data16
outsl
dec
push
push
inc
test
aas
jg
and
or
and
orb
and
pop
cli
dec
and
sub
xlat
outsl
outsl
pop
pop
enter
pop
ror
push
xchg
mov
sbb
fsts
dec
leave
incl
add
rcrb
dec
xchg
sbb
sti
add
mov
in
insl
add
cmp
int3
imul
pushl
fstps
dec
aas
jno
or
inc
addr16
and
mov
clc
ret
out
mov
lods
imul
loope
gs
dec
pop
xchg
mov
movsl
and
iret
adc
inc
cmp
pop
and
lods
fisubrl
ret
or
push
rcr
loope
mov
mov
rcll
cmp
outsb
push
in
add
dec
xchg
cmp
dec
decl
loop
dec
sub
ds
add
jge
lret
dec
insl
and
lock
mov
ss
pop
or
mov
xchg
sarb
insl
jg
arpl
push
xor
pop
and
lcall
lcall
mov
dec
adc
sbbb
add
fildll
sbb
or
lret
or
pop
adc
and
test
loopne
test
aas
dec
mov
add
inc
jge
sahf
and
xchg
pop
mov
lods
andl
inc
or
jns
xor
rorl
shrb
push
cld
push
jge
icebp
std
test
mov
xchg
push
cmp
pop
inc
dec
mov
inc
xor
and
sbb
mov
ljmp
adc
int3
add
adc
jo
lahf
stos
mov
punpcklbw
lcall
ss
ret
loopne
jo
vmovdqu
pop
adc
mov
adc
arpl
add
xchg
sbb
xchg
test
stos
scas
fbld
fcomi
lret
sub
cwtl
daa
cs
jmp
lock
mov
push
in
xor
fcompl
in
test
test
enter
movsl
push
and
sub
cmpsl
fisubl
and
lret
pop
and
in
pop
and
in
in
add
cld
mov
and
enter
push
stos
mov
inc
iret
insl
fnsave
mov
jne
and
outsb
fwait
imul
je
rcll
mov
in
pop
or
sbb
adc
add
add
or
fistl
add
add
pop
aam
jmp
and
inc
fdivrl
xchg
add
cs
mov
rolb
xchg
add
js
loope
inc
jecxz
jne
push
push
sarl
add
ficomps
ja
or
pop
xlat
jae
or
pop
fdivr
pushl
aam
adc
call
mov
pop
mov
jl
fisubrs
xrelease
jmp
ja
rcrl
xchg
or
push
dec
das
lds
pop
outsl
cld
ja
dec
jge
mov
push
fwait
leave
nop
fstpt
ret
sbb
mov
fs
mov
movsl
mov
add
daa
xor
sub
add
xchg
jl
jge
mov
test
and
sti
inc
pop
or
sbb
into
pusha
test
jle
xor
inc
add
lret
dec
jnp
in
rcrl
and
fsubr
sbb
int3
xchg
jp
xchg
pop
lods
test
mov
sbb
fstpl
stos
ds
mov
std
adc
or
stos
mov
out
jle
stos
out
movsl
mov
and
xchg
arpl
mov
fidivrs
or
mov
adc
icebp
adc
pop
imul
push
call
fscale
popl
js
clc
mov
js
test
lock
xchg
gs
lds
cmp
jb
adc
xlat
pop
dec
das
fdivrl
sbb
push
or
test
iret
inc
ds
or
adc
mov
push
push
into
xchg
inc
or
mov
ret
out
or
scas
sub
sub
loope
iret
sbbb
pop
push
pop
out
pop
pop
or
mov
shrl
push
or
cltd
xchg
movsb
jmp
iret
in
cwtl
aam
pushf
mov
lods
mov
cld
popf
pop
nop
test
jg
mov
in
sbb
inc
push
push
xor
insl
icebp
nop
sub
xchg
lods
data16
dec
aad
subl
cmp
mov
adc
push
or
test
xchg
push
mov
into
les
fadd
cmp
mov
jno
call
test
push
jbe
xchg
jl
mov
sti
iret
out
jbe
push
mov
scas
mov
lret
push
mov
js
iret
in
out
mov
jecxz
inc
movsl
dec
dec
mov
mov
dec
push
xor
ret
xor
push
in
outsl
add
scas
inc
test
sub
sbb
jmp
shlb
jmp
jmp
xor
ficompl
inc
pop
jns
and
subb
mov
das
adc
inc
dec
mov
mov
sub
adc
or
lock
lods
add
sti
ret
mov
cmpsb
or
dec
fildl
push
mov
push
int3
xchg
out
aaa
popl
mov
ljmp
mov
lds
in
jg
test
mov
mov
out
imul
jp
mov
dec
push
inc
sbb
push
mov
outsl
pop
sbb
stos
std
lcall
xchg
in
outsl
sub
push
cmpb
xor
cmpsl
sbb
pop
cwtl
xlat
push
insb
jle
and
stos
je
scas
push
xor
add
xchg
cmp
lods
or
sub
pop
pop
mov
or
push
js
sub
es
ja
mov
xchg
fwait
in
insl
fldt
inc
test
cld
pop
jl
jp
call
adc
xchg
mov
xchg
push
mov
test
icebp
mov
add
xchg
std
pop
inc
inc
cmp
pop
test
lea
frstor
lar
pop
sbb
or
fsubrs
les
clc
lea
adc
outsb
out
pop
sbb
lods
mov
sbb
push
fs
loopne
pop
clc
xor
fs
xor
cmpsl
mov
shrl
and
insb
xor
push
add
xor
and
sar
addb
insl
out
adc
add
push
addr16
cmp
sahf
scas
adc
or
push
loope
jnp
sbb
push
xor
add
add
pop
mov
jbe
clc
scas
mov
lds
push
hlt
mov
in
sub
mov
inc
adc
test
adc
js
cwtl
in
sbb
adc
adc
or
repz
or
push
lods
movsb
sbb
or
mov
sub
mov
push
rolb
adc
mov
xor
adc
dec
inc
test
adc
enter
into
add
sbb
cmp
test
bound
lds
jo
shll
inc
adc
mov
sub
xorb
xchg
sbb
pop
dec
xor
inc
xor
mov
ds
pop
imul
xchg
pop
shrl
push
cs
das
sub
add
cmp
pop
or
dec
hlt
dec
rclb
aad
loopne
add
push
scas
test
addb
daa
inc
push
inc
adc
inc
insl
pop
inc
adc
pop
mov
pop
push
push
push
je
lret
pop
and
ds
push
sbb
inc
pushf
push
shlb
loopne
xor
bound
test
adc
mov
loope
sub
sbbl
push
jne
xchg
in
or
sub
sbb
push
loopne
cmp
jb
test
lock
mov
dec
stc
mov
in
and
bound
aam
jmp
sbb
sbb
test
push
jo
cmpl
in
sub
aad
mov
dec
loope
mov
mov
adc
pop
adc
add
xor
adc
jno
fwait
add
nop
adc
loop
xor
jbe
aad
sar
icebp
fldenv
insb
xor
push
jge
and
or
test
mov
loop
xchg
sbb
pop
inc
adc
and
mov
loopne
cmp
and
and
mov
shrb
mov
xor
hlt
aam
jmp
out
add
cmpsl
push
ficomps
stc
jnp
add
mov
sbb
mull
pop
dec
push
sbb
int3
jnp
cmp
imul
testl
mov
fists
stc
ret
lods
cmpsb
clc
lock
inc
xchg
in
and
pause
adc
and
das
xor
and
lock
mov
adc
sbb
sbb
cwtl
adc
and
sub
clc
lods
and
xchg
sti
cmp
pop
lock
incl
inc
iret
in
in
jg
adc
mov
lcall
or
xchg
xor
icebp
fwait
mov
mov
js
incl
push
pop
iret
add
xor
scas
mov
shll
sbb
pop
jl
push
in
aaa
stos
std
int3
fidivs
shr
or
andb
cmp
dec
add
dec
cld
add
xchg
out
inc
and
movsb
jge
dec
test
mov
and
mov
xchg
adc
jecxz
dec
jns
loope
inc
adc
stc
pop
pop
push
push
test
mov
loope
loopne
lret
mov
jg
adc
shlb
push
mov
dec
push
stos
int
or
adc
adc
sub
pop
push
pushf
mov
ja
rcrb
gs
cmp
fstpt
cmp
pop
out
outsb
dec
mov
push
outsl
jecxz
mov
ljmp
dec
pop
mov
inc
inc
mov
movsl
ja
in
dec
mov
rcrb
pop
outsl
mov
mov
mov
inc
fimull
inc
add
pusha
loop
aam
fcoms
lahf
mov
cmpsb
mov
icebp
adc
hlt
cmpl
or
loop
rclb
add
sub
or
pusha
mov
or
cmp
popf
sub
mov
lret
hlt
mov
test
add
pop
nop
and
insl
cmp
cmpsb
cmp
fwait
imul
cmp
and
adc
jg
adc
out
aad
mov
pop
adc
adc
xchg
rol
xor
sub
movsl
mov
pop
fstpt
mov
jno
bound
fmuls
outsl
cltd
fcomip
pop
std
inc
repnz
repnz
dec
sbb
cli
ret
and
push
je
xchg
mov
push
outsl
std
dec
cld
and
popf
sahf
addl
outsb
xor
push
or
outsb
insl
pushf
mov
shll
cmc
mov
call
outsl
push
or
xor
movsl
mov
leave
in
cli
or
push
mov
fsts
push
outsl
push
mov
ja
lcall
jp
outsb
cmpl
out
dec
ss
aad
push
or
in
into
into
cltd
iret
inc
mov
dec
outsb
stos
popa
jno
arpl
xor
sub
int
jns
les
sub
ljmp
push
jl
test
ficoml
pop
movsb
mov
and
sbb
cmp
mov
lret
ret
in
out
push
loope
mov
clc
stos
mov
push
cmp
mov
out
pop
scas
cmp
add
sbb
xchg
mov
xor
and
cmp
test
fdivrp
mov
out
mov
or
rcrl
sub
jle
popa
push
outsl
pop
xor
leave
or
mov
jp
adc
mov
push
test
xor
les
in
pusha
cltd
test
adc
cwtl
add
adc
test
outsl
movsb
fdivrs
orb
insl
xchg
dec
adc
cmp
adc
mov
out
cltd
cmc
cs
ror
fwait
pop
std
call
scas
stc
adcb
inc
scas
shl
mov
outsb
xor
outsl
push
sub
test
cmp
lea
sbb
jmp
jo
pop
xchg
xchg
decl
shrl
addr16
into
loop
add
test
das
and
lret
jle
or
das
jge
repz
clc
or
mov
cmp
pushf
xor
inc
and
push
loopne
xor
roll
push
mov
xchg
ljmp
push
in
add
leave
dec
sbb
push
fnstsw
popa
xor
in
pushl
cli
push
adc
fildll
push
mov
lods
and
lods
lahf
addr16
xor
adc
dec
dec
jne
push
sbb
lcallw
movsl
inc
aas
movl
scas
in
xchg
in
lds
divl
pop
nop
add
jl
inc
test
adc
jg
dec
sti
cmp
pop
subl
stc
push
inc
pop
xchg
ror
jo
je
dec
insl
jl
lret
or
sar
mov
fwait
xor
cmp
clc
push
je
decl
roll
mov
in
and
repnz
addb
imul
stos
cs
pop
add
lock
sub
push
or
mov
loopne
mov
sub
std
xchg
insl
jl
push
xchg
push
movsb
in
add
jle
push
pop
cmpsb
pop
dec
ljmp
push
mov
push
dec
sbb
sub
push
xchg
pop
inc
xchg
mov
mov
sub
inc
lods
inc
cs
insb
nop
push
and
mov
rolb
and
addr16
inc
lahf
sbb
test
xor
mov
pushl
inc
scas
mov
add
add
cld
dec
fstps
inc
jo
jmp
cmp
xor
movsl
mov
xchg
and
int
pop
shll
stos
or
fwait
jnp
jb
cmp
lock
filds
push
out
fsubp
imul
imul
jne
pop
andb
pop
dec
addb
ret
test
mov
stos
mov
int
or
clc
jmp
aad
fs
lock
mov
mov
ficomps
push
mov
test
fbld
xchg
popl
xor
add
jge
call
and
loopne
pop
or
icebp
clc
out
add
pop
add
add
and
fiadds
adc
dec
and
pop
sbb
or
add
or
add
pop
sbb
jle
and
subl
pop
jge
daa
jl
dec
xor
loop
data16
repz
lcall
fmuls
jp
pop
cld
xor
add
adc
pop
or
arpl
ret
orl
inc
mov
add
pusha
push
adc
cwtl
gs
and
movsb
rolb
inc
and
or
scas
mov
add
repnz
or
jge
push
sbb
mov
cmp
jle
lea
xchg
cmp
and
jne
movsb
and
sub
rorb
outsl
imul
mov
cli
sbb
andb
sbb
lret
cmp
add
stos
inc
and
inc
pop
add
push
mov
mov
lock
jp
dec
push
shrb
jo
pop
push
push
arpl
push
inc
xchg
movsb
loopne
inc
les
loope
lcall
subb
rclb
inc
outsb
test
or
inc
iret
jmp
addl
sub
adcb
or
add
stos
call
adc
or
or
mov
or
inc
dec
pop
frstor
jl
lret
daa
movsl
sar
gs
pop
aam
sbb
pop
inc
std
dec
daa
pop
mov
daa
add
test
lock
rorb
xchg
int
sub
mov
cmp
bnd
inc
or
sbb
pop
mov
jp
icebp
andb
mov
cltd
mov
out
mov
cmp
sbb
test
and
aas
stos
and
jp
ret
xchg
gs
aaa
add
pop
adc
testb
scas
add
clts
push
sub
sbb
lods
add
inc
outsb
or
stos
scas
loop
test
inc
sub
jmp
shlb
mov
xor
sub
outsb
lock
fstpt
xchg
add
adc
dec
adc
js
and
inc
push
outsl
fdivrs
cmp
pop
pusha
pop
fsubrs
cmp
icebp
xchg
sub
inc
lds
lock
out
add
jbe
and
sbb
sub
fs
je
sub
pop
pop
hlt
add
out
nop
cmc
dec
bound
jecxz
push
shll
mov
mov
push
push
or
outsb
insb
push
jo
orb
mov
pop
pop
ror
or
sti
lods
sbb
mov
in
mov
sub
add
jg
aaa
adc
shll
jl
outsl
loop
and
into
or
lea
add
ss
mov
xlat
jnp
and
in
mov
adc
negl
push
jle
in
test
test
lcall
pop
pop
push
iret
ret
fucomip
das
sub
mov
cmp
dec
fsub
idivb
fucomp
add
leave
cmpsl
mov
sub
mov
stos
mov
addr16
add
sub
stc
cmc
mov
gs
adc
jp,pt
mov
add
sbb
pop
imul
gs
mov
xor
mov
.byte
jmp
sub
xorl
push
out
sub
mov
or
aas
filds
call
adc
inc
add
adc
and
or
test
adc
inc
test
push
addr16
insl
or
xor
adc
dec
and
push
test
pop
imul
xor
push
pop
jae
sbb
dec
pop
dec
not
data16
xor
adc
aaa
idivb
mov
sub
test
add
add
mov
sub
nop
mov
adc
sbb
lea
add
dec
nop
add
push
insb
imul
dec
or
push
outsb
fwait
adc
or
outsl
imul
movsb
rclb
mov
test
xor
test
incl
pop
add
inc
pop
pop
pop
ret
dec
mov
pop
ret
pop
pop
ret
mov
popa
xor
add
adc
add
insl
leave
sub
ds
idivb
adc
xor
pushl
mov
lods
std
decl
push
cwtl
inc
add
add
adc
add
ret
add
mov
cwtl
subb
adc
test
or
inc
mov
inc
cmpsb
jae
push
adc
fildl
ss
cld
add
add
sbb
mov
lcall
sub
inc
out
jmp
xchg
insb
push
add
movsl
neg
add
imul
mov
add
dec
and
jne
es
insl
jg
inc
pushf
add
mov
add
or
jl
push
inc
imulb
mov
adc
test
dec
jg
aas
dec
add
dec
sbb
insl
pop
dec
mov
jmp
dec
adc
jbe
jg
in
add
add
test
add
roll
xchg
add
jg
out
push
test
andl
dec
shl
cltd
stc
push
and
negb
in
fildl
icebp
or
int
or
add
jecxz
std
mov
push
in
pushf
movb
dec
pushf
fs
jg
mov
mov
sbb
dec
inc
mov
add
push
or
mov
cmc
xchg
mov
out
sbb
and
mov
adc
pusha
hlt
mov
adc
sbb
and
add
insb
scas
pushl
out
cltd
and
ffree
sub
test
outsl
jmp
sarl
fsubrs
push
sub
push
mov
das
or
add
imul
add
iret
add
add
or
xchg
xchg
jno
sbb
mov
add
add
lods
pop
inc
jge
add
jmp
cmp
sub
mov
loop
mov
cmp
pusha
mov
and
in
fwait
aam
fs
push
mov
mov
mov
in
lcall
jo
jmp
fcomps
dec
popl
hlt
mov
jg
mov
push
test
jle
dec
add
xchg
xchg
inc
adc
pushf
jl
mov
xchg
mov
icebp
neg
rol
ret
fidivl
mov
cmp
jo
mov
pop
or
sbbl
sub
stc
dec
and
or
add
ljmp
loop
xor
push
aad
cmp
scas
out
rcll
in
cmp
das
sub
sbb
mov
neg
fimull
cmpsl
sub
add
fisubrl
inc
mov
pop
mov
mov
mov
and
add
mov
decl
outsl
stc
imul
add
jno
outsl
clc
repnz
add
push
adc
mov
lret
adc
push
cmpsb
push
jge
js
sub
mov
jl
push
xchg
add
in
call
das
fdivl
sbb
sbb
add
data16
mov
and
sub
outsl
daa
shlb
jle
outsb
mov
mov
leave
icebp
fstpt
mov
push
aaa
add
subb
fistpl
xor
call
cmp
scas
in
lahf
shlb
jne
xor
add
sbb
clc
add
mov
in
loope
xor
in
pop
sbb
int
dec
ss
ret
add
cmpsl
imul
mov
and
fists
or
clc
arpl
sbb
popl
adc
into
push
push
loop
push
outsl
pop
add
jl
out
mov
push
mov
in
outsl
mov
push
jns
push
fildl
mov
mov
ret
mov
mov
inc
not
mov
and
and
int
es
int3
jne
mov
and
mov
jge
fucomi
int
sbb
mov
sbb
jmp
dec
mov
xlat
fdivrl
push
add
cmp
sti
fisttps
not
dec
mov
mov
enter
cltd
inc
insl
imul
or
div
sbb
push
pop
mov
mov
mov
mov
dec
inc
fldt
les
in
mov
adc
insb
aas
push
fistpl
xchg
in
adc
push
jnp
jle
adc
and
into
lret
sub
jecxz
dec
cmc
pop
cmp
outsb
rclb
iret
lretw
das
add
xor
les
mov
neg
ds
push
add
icebp
inc
popa
aam
aaa
mov
pop
es
inc
mov
pusha
ja
ljmp
cmp
popf
or
add
inc
imul
dec
call
jle
adc
mov
mov
stc
mov
repz
in
mov
lock
fbstp
xlat
pusha
jge
sbb
pop
sub
or
fdivs
push
call
mov
inc
loope
ds
mov
cs
in
xor
arpl
mov
jne
adc
call
mov
fimuls
add
sub
push
dec
or
fnsave
push
jne
sbb
xchg
mov
pslld
xor
fsubr
sub
mov
cmpsb
inc
in
imul
mov
push
push
add
ja
jge
mov
leave
push
xor
adc
mov
ds
push
adc
ljmp
mov
dec
cmp
mov
in
inc
xchg
ret
mov
xchg
jg
sub
out
jecxz
xchg
mov
inc
cmp
push
sbb
xchg
addb
enter
adc
loopne
push
add
add
inc
fwait
data16
out
bound
mov
repz
push
add
and
push
je
cli
outsl
mov
sbb
add
repnz
or
xchg
or
jns
stos
pusha
adc
cmp
mov
mov
fnstcw
push
mov
addr16
lods
mov
or
popa
jg
add
pop
js
dec
jl
add
in
shl
daa
pop
sbb
jl
hlt
or
into
stos
xor
sub
or
cmc
aas
jo
jno
jns
lret
or
int3
inc
dec
fidivrl
mov
pop
mov
adc
mov
xchg
mov
push
cmp
jle
mov
movsl
mov
cmp
push
adcl
inc
leave
fimull
inc
testb
and
loopne
lds
adc
adcb
cli
push
decl
xchg
dec
stc
add
cmp
icebp
idiv
jmp
dec
push
les
stos
add
add
xchg
das
ret
xchg
clc
das
jg
lahf
jb
movsb
adc
rolb
dec
and
jo
jg
in
adc
enter
test
jg
idivb
mov
push
stos
sar
xor
xchg
mov
add
mov
sub
stos
fnsave
add
scas
mov
out
pop
jns
mov
xor
jg
cmp
leave
pop
rcrb
es
xchg
pop
inc
insl
mov
and
insb
out
xor
or
push
jns
jnp
outsl
mov
mov
rorl
stos
nop
mov
sub
push
mov
fcomi
add
ret
call
or
es
mov
sub
push
xchg
cmp
push
repnz
les
add
cmc
repnz
negb
add
cs
daa
lods
jge
cmp
adc
sub
in
push
repnz
adcb
mov
pop
jle
out
out
xchg
mov
xor
sbb
cltd
icebp
test
cs
xor
add
push
pop
mov
aaa
hlt
sub
push
andl
xchg
sub
xchg
loop
aaa
cli
jmp
sub
dec
mov
scas
xor
and
fimull
add
add
adc
jmp
pop
mov
inc
test
adc
dec
js
pusha
shr
ret
inc
or
mov
pop
pushl
mov
push
popa
jb
add
push
dec
pop
jle
into
add
sub
adc
aaa
cs
pop
xor
xchg
xor
inc
popa
aam
mov
or
lret
mov
and
add
dec
mov
fs
add
lea
mov
fwait
loope
adc
sahf
mov
jg
push
mov
mov
xchg
jmp
iret
fs
insb
das
pop
adc
in
jge
sub
sarb
outsl
or
je
mov
mov
mov
and
ffreep
inc
mov
adc
hlt
sub
adc
fistpl
repz
lds
jle
fnstsw
lods
sbb
and
and
test
roll
sub
popf
push
lret
icebp
lods
mov
mov
jle
into
push
sbbl
pop
push
dec
xor
fistpll
inc
jg
pop
adc
and
daa
stos
mov
jb
cmp
shl
retw
dec
sarb
xchg
arpl
repnz
fnstcw
add
inc
sbb
mov
fimuls
inc
sti
call
push
xchg
mov
mov
movb
lret
dec
dec
std
and
outsl
mov
xor
aas
lods
adc
xorb
jle
cmpsb
or
cmp
adc
decl
cmp
aaa
and
and
jl
add
gs
mov
sbb
hlt
inc
mov
in
les
push
inc
mov
hlt
pop
push
adc
push
test
mov
in
mov
nop
lret
lret
nop
mov
sbbb
les
imul
sahf
add
xchg
and
push
movsl
subl
xchg
mov
andb
inc
and
aad
or
sub
pop
mov
mov
xchg
cld
rcr
mov
bound
pop
dec
jecxz
aad
insl
mov
inc
fldenv
sbb
or
js
or
push
cmc
push
loope
divb
rclb
out
push
loopne
ret
pop
mov
lods
outsl
mov
lahf
aam
xchg
mov
test
add
shlb
xlat
cmp
in
mov
sbb
or
mov
pop
outsb
aam
adcl
stos
cld
push
pop
enter
pop
sbb
add
push
xor
js
push
jecxz
lret
sti
pop
incb
push
or
jge
sub
push
push
inc
pop
lret
mov
std
outsl
daa
xor
and
movb
pop
stos
paddd
dec
lock
cwtl
or
mov
in
xor
adc
dec
sbb
scas
xor
aad
stos
fistl
mov
adc
xor
lea
imul
cmp
adc
lods
je
mov
or
push
in
jo
nopl
test
jp
jb
das
lock
lock
dec
insl
mov
xchg
mov
lret
push
into
mov
cltd
mov
and
sbb
jecxz
jo
movsl
fstpt
lods
push
inc
inc
or
cwtl
add
cld
cmp
incb
or
cs
and
dec
loopne
fs
mov
jb
xchg
test
aaa
lea
lahf
dec
pop
outsb
fisttpll
push
inc
test
mov
loope
mov
cld
sub
lcall
mov
xor
fwait
fs
xchg
add
xchg
push
mov
cmc
cmpsb
sbb
xor
das
adc
jo
jg
stos
and
mov
sbb
mov
test
jbe
in
add
jg
jecxz
imul
aas
addl
clc
xchg
jle
add
inc
xchg
mov
movsl
cmpsb
or
jno
cmp
test
fdivrl
dec
xchg
out
xor
cs
jg
mov
ds
mov
push
decl
inc
cwtl
popf
std
jg
out
inc
hlt
sub
mov
fisttpll
aad
test
dec
and
das
mov
mov
pop
xor
ret
or
sbb
add
mov
mov
dec
insl
mov
in
inc
das
and
shl
pop
lods
daa
cwtl
push
cli
leave
movsb
mov
mov
inc
in
mov
setnp
scas
and
inc
js
fistpl
fs
dec
ljmp
sbb
popa
jns
rcrb
lds
outsl
mov
fbstp
push
ret
test
xchg
popa
clc
xchg
push
insb
push
cmp
jg
aam
xorl
cltd
pop
pushf
inc
adc
inc
or
add
xchg
lea
fists
jno
ret
push
in
fistpl
mov
loope
push
stos
mov
adc
in
xchg
jecxz
pop
rcll
ljmp
push
dec
and
stc
push
xor
mov
xor
ss
fcomps
lods
dec
jecxz
sti
arpl
ret
add
inc
jl
add
movsl
decl
pop
int
loop
push
pop
pop
push
push
setp
enter
hlt
pop
sbbb
sub
dec
mov
pop
sbbb
in
mov
popa
imul
sbb
xchg
bound
cmc
or
cmp
fsts
sarb
loopne
xchg
sbb
movsl
sub
mov
sub
lahf
repz
mov
dec
sbb
ja
dec
gs
ja
insl
jmp
ficompl
pop
push
or
cmp
shrb
fdivs
mov
ljmp
inc
mov
add
cmp
xor
sub
xchg
div
mov
notb
add
or
inc
adc
loop
clc
push
loope
je
cmp
int
push
xchg
loope
xchg
outsb
add
sbb
jb
push
cmp
rolb
sub
push
adc
jge
fs
push
int3
push
mov
or
pop
push
test
stos
loop
and
pop
outsl
lods
mov
xchg
sar
pop
ret
mov
shl
inc
or
sub
popa
mov
xor
push
dec
pop
rcr
aaa
mov
xchg
cs
pop
daa
adc
fcmovu
fcmovu
jbe
lahf
mov
lret
out
cltd
mov
and
xlat
jbe
loope
lahf
ret
lds
sub
lret
fadds
loopne
xchg
fmuls
dec
mov
in
cmp
aaa
jle
addl
test
add
mov
shrl
imul
mov
jmp
imul
add
mov
pop
daa
sub
lods
mov
loopne
fsubs
sbb
mov
daa
fdivl
shlb
call
ljmp
testb
push
adc
xor
push
sarl
lret
mov
mov
sub
push
arpl
mov
push
pop
out
mov
xor
outsl
sub
loopne
leave
scas
or
inc
and
jle
inc
inc
lahf
mov
sarb
push
jge
test
rclb
outsl
pop
push
mov
dec
xchg
jg
out
call
dec
inc
pop
sbb
mov
scas
or
out
add
mov
pop
jge
add
cs
sar
fistl
insl
mov
faddl
mov
popf
inc
mov
dec
push
jg
dec
xor
or
push
imul
pop
sub
xchg
mov
insl
add
sub
inc
sarl
out
decl
das
insb
fadds
popa
jbe
dec
inc
dec
xor
sub
rorb
push
test
inc
xor
push
aaa
shlb
scas
mov
cmc
pop
lock
pop
push
pop
rolb
lret
sbb
pusha
pop
arpl
mov
addr16
dec
inc
stos
jp
pop
pop
inc
adc
aaa
mov
push
rol
stos
add
dec
mov
lods
cs
push
or
std
outsl
fwait
jecxz
sub
sub
dec
call
adc
adc
insl
clc
mov
popa
cld
insb
mov
test
add
xchg
jg
dec
jo
push
scas
rcrl
enter
sub
test
dec
adc
div
sbb
mov
xor
daa
mov
repz
rolb
inc
xchg
ja
dec
repnz
mov
or
test
push
js
std
loop
jmp
cltd
add
sub
lcall
inc
or
inc
cmp
mov
add
test
jg
mov
inc
mov
pop
or
and
adc
adcb
jmp
push
cld
xchg
sbb
es
mov
test
adc
jns
arpl
push
call
dec
xor
mov
sbb
mov
pop
mov
dec
stos
pop
cmp
adc
jg
frstor
jbe
xchg
stos
adc
rclb
clc
adc
or
lods
das
sbb
stos
mov
outsl
les
xor
push
push
xchg
fsubrl
mov
dec
add
out
xorb
push
push
lahf
pop
xchg
mov
xor
sub
jg
scas
jns
xchg
fisubrs
divl
jl
mov
inc
pop
adc
mov
sbb
add
sub
fldenv
inc
or
push
inc
or
push
loope
enter
mov
sti
pop
orl
sbb
jno
sub
cld
inc
frstpm(287
ja
daa
call
imul
sub
orb
push
jg
test
cwtl
xor
ficoms
mov
loopne
ret
bound
lahf
out
int3
stos
cmp
call
adc
mov
pop
push
add
xor
mov
outsl
orl
jg
adc
jmp
xor
push
jg
mov
stos
xchg
pop
dec
jne
adc
enter
pop
push
cltd
sub
test
lret
add
incl
data16
push
and
jnp
in
mov
or
lods
inc
pop
test
mov
dec
outsl
jg
mov
insb
out
mov
push
xor
movsl
lea
imul
int
adc
loopne
adc
inc
or
pop
popf
lock
adc
sub
mov
push
scas
cmp
xor
jne
add
pushl
pop
roll
pop
cmp
int3
andl
addb
push
or
icebp
decl
jmp
pop
orb
pop
cmp
xor
dec
lods
cld
inc
or
add
ret
add
xor
jmp
hlt
lods
dec
in
testb
test
xor
enter
lds
sbb
sbb
int3
mov
enter
cmp
fnsave
or
and
hlt
or
movsl
scas
icebp
rcll
clc
movsl
fbld
xlat
add
pusha
pushf
cwtl
adc
rcrl
std
push
or
and
pusha
dec
jno
das
int
jmp
clc
outsl
mov
cltd
mov
in
repz
sbb
xchg
pop
xchg
fcoml
js
subl
mov
aas
imul
imul
aam
je
inc
adc
shlb
add
repz
jns
aas
insl
xchg
mov
mov
cmp
push
ja
xchg
mov
int
xor
pop
mov
inc
cli
and
xor
jne
insl
xchg
pop
jae
test
jnp
cmpb
pop
or
jnp
addr16
insl
adc
in
mov
in
dec
mov
pop
cmpsb
or
cmp
push
movl
scas
add
stc
jae
nop
and
sti
mov
outsl
incl
pushf
rcrb
mov
inc
mov
mov
pushl
mov
pop
sbb
mull
shl
push
mov
jo
mov
cmp
ror
mov
enter
inc
jns
popf
jno
ss
mov
mov
in
adc
or
test
jecxz
std
loope
pop
aam
cmp
and
bound
inc
fldt
push
pop
std
rcll
pop
mov
lods
inc
in
addb
and
jmp
movsl
push
test
or
lret
lahf
pushl
dec
fstpl
repz
xor
sub
jecxz
or
loopne
sarb
cmp
mov
loope
or
dec
xor
and
orl
sbb
je
sub
test
push
test
or
mov
sbb
mov
mov
jmp
in
xchg
pop
incb
insb
mov
mov
or
js
push
push
int3
dec
push
mov
out
pop
pop
imul
mov
mov
push
xchg
stos
mov
push
mov
cwtl
jge
mov
jnp
mov
adc
test
sbb
push
fldl
mov
std
int
add
out
gs
inc
jo
lods
mov
and
or
repnz
pushl
cmp
mov
addr16
jbe
dec
fidivs
sub
and
jo
push
lret
dec
data16
les
jg
dec
jns
int
stc
in
fcomps
sti
pop
mov
imul
adc
addr16
jmp
pop
push
negl
dec
movsl
cli
cmp
add
adc
cmp
addb
xchg
mov
lods
jns
pop
pop
adc
clc
add
xchg
aam
cmp
mov
mov
push
add
std
push
test
idiv
imul
gs
test
push
cmc
mov
inc
into
mov
mov
cld
scas
fadds
testb
mov
or
mov
jbe
xchg
ja
mov
arpl
push
in
loop
or
adc
sar
and
push
test
adc
sbb
fcomps
lock
push
jbe
sbb
add
jg
cld
sub
xlat
pushf
mull
inc
dec
xor
mov
xchg
and
ja
inc
insl
jge
push
add
ret
mov
or
mov
icebp
incl
rol
inc
in
jae
fmull
sbb
inc
inc
add
pop
jno
rclb
rclb
sub
mov
push
cmp
adc
mov
xchg
add
movsl
js
adc
in
xor
xrelease
sub
dec
add
sub
ljmp
fcomip
filds
mov
xor
out
stc
and
orl
cmp
inc
mov
or
mov
mov
imul
stos
jbe
adc
adc
dec
adc
imul
loope
fdiv
in
push
fsubs
shlb
rorl
add
or
jecxz
mov
dec
mov
add
jae
or
add
mov
ljmp
mov
and
fsubs
imul
movb
inc
enter
mov
out
fistps
outsl
jp
push
sbb
inc
out
fdivr
cmpsl
add
popa
or
lret
out
add
push
fdivr
orb
jnp
adc
mov
ds
shll
mov
aam
shlb
rcrl
dec
scas
cmp
cmpl
faddl
xchg
adc
or
add
mov
cs
dec
jne
or
lods
or
cmp
dec
mov
insl
js
mov
enter
outsl
ret
and
mov
push
stos
in
ffree
gs
sti
cltd
repnz
and
cmp
sbb
mov
pop
xor
or
adc
arpl
jbe
mov
mov
lahf
add
sbbb
mov
or
dec
lods
bound
mov
cmp
lock
cmpsl
pushf
adc
sub
sub
sarb
shrl
add
dec
cwtl
inc
add
mov
jbe
pop
mov
fmull
jne
bound
cmp
push
xchg
ud0
push
call
insb
push
es
ds
ja
lret
push
clc
mov
or
adc
adcb
lcall
ret
negl
sbb
adc
ds
jl
adc
daa
enter
xchg
pusha
add
orb
inc
arpl
jmp
popa
mov
mov
sub
xor
pop
jg
ret
jnp
leave
ret
sbb
pusha
cs
sahf
sub
pushl
arpl
mov
jmp
icebp
push
xchg
fmuls
scas
cmp
aas
sbb
arpl
sub
movsl
aad
inc
inc
add
mov
mov
loope
sub
jb
add
add
and
iret
xlat
in
push
stos
jmp
xlat
cwtl
addr16
xchg
jno
icebp
sub
sahf
xor
lret
out
or
std
rorl
cmp
and
sub
and
ffree
mov
ds
jne
stos
int3
jae
xchg
cmp
push
adc
xchg
xor
xchg
sub
fildll
mov
and
adc
ret
notb
rcrl
dec
sub
push
sbb
or
andb
int
gs
adc
cmc
xchg
inc
aad
mov
popl
gs
gs
clc
gs
mov
loopne
sti
cs
jmp
adc
sahf
je
rcr
jne
mull
lock
cli
mov
inc
jns
std
lods
xor
loope
mov
leave
dec
lock
icebp
pop
xor
out
nop
add
mov
bswap
ret
add
out
fsubs
sbb
lds
fldenv
sub
popa
rol
outsl
jne
cltd
lahf
dec
out
mov
dec
push
aas
orl
or
and
imul
add
xor
out
push
scas
and
dec
cmc
sbb
xor
cli
ret
into
out
add
sbb
ss
add
test
dec
cmp
clc
or
je
pop
lock
push
hlt
sub
mov
mov
cmp
fisubrl
loope
stos
mov
jp
fcmovb
pop
cmp
mov
dec
xor
rolb
hlt
cs
pop
jp
rorl
repnz
and
cld
push
fldcw
and
jp
ficompl
dec
loopne
sbb
bound
add
mov
jbe
repnz
add
sub
aaa
cmp
push
in
mov
js
cwtl
inc
inc
adcl
stos
sbb
jge
jle
cld
and
sbb
sbb
mov
lods
pusha
rcl
adc
shlb
and
inc
inc
in
pop
divl
mov
mov
fwait
or
xchg
int
lock
mov
push
cmpsb
gs
fstpt
dec
cmp
cld
pop
pop
sbb
sbb
or
sbb
fs
add
xor
sbb
or
cltd
popf
fstps
cmpsl
jns
out
repz
mov
sti
ja
and
cmc
xchg
lods
dec
std
inc
sub
and
mov
jno
jecxz
push
ljmp
cmp
cmp
add
out
pop
popf
jp
sbb
in
in
jp
insb
dec
sti
bound
lock
mov
cld
aad
dec
sahf
xor
sub
or
cmp
dec
jae
hlt
adc
or
pop
daa
sbb
push
pop
jmp
mov
lods
cwtl
inc
xor
cmpsl
fcoms
push
test
inc
fisubrs
or
mov
inc
xor
popa
cmpsb
xchg
push
sub
xchg
xor
xor
sti
cld
frstor
mov
sbb
xor
mov
in
insb
add
in
jnp
mov
les
fwait
adc
adc
fcmovu
imul
popa
lahf
je
hlt
es
mov
inc
loope
or
ficomps
repnz
ss
jp
adc
in
hlt
add
rclb
addl
sbb
std
rcr
pop
cli
in
push
xchg
adcl
mov
mov
mov
pop
movl
pop
movsb
aas
xchg
loop
jmp
nop
push
test
add
jg
in
jmp
or
cmp
mov
dec
jns
ret
inc
inc
fildl
jns
mov
mov
pop
rcl
fimuls
int3
iret
filds
add
pop
adc
inc
ja
mov
add
add
xchg
jp
fucomp
add
add
and
ljmp
repnz
icebp
clc
stos
std
or
sbb
inc
jg
add
xor
add
rolb
cmpb
adc
push
sbb
stos
push
add
les
mov
mov
cmc
stos
add
into
xlat
cmpl
fdiv
mov
xor
inc
les
shr
iret
xor
lret
pushl
add
js
popf
jg
sbb
or
mov
aam
xor
cmpsb
and
sbb
stc
pop
mov
lret
dec
aas
lahf
mov
out
xchg
pop
cmp
jne
ret
push
inc
jnp
mov
and
and
cli
mov
push
push
addr16
cmp
cld
jge
xlat
lret
push
addr16
mov
sbb
int3
lock
and
cli
dec
jecxz
sbb
and
roll
mov
pop
or
imul
cmpsb
lock
lcall
and
cmpsb
mov
int3
lods
dec
or
xor
add
cmpl
or
xchg
test
xchg
pusha
or
cmc
cmp
jle
or
ljmp
or
ficoml
icebp
aad
sub
push
xchg
shrb
add
lahf
out
xchg
fldt
jbe
sub
das
add
sub
sarb
adc
pop
in
mov
andb
cmp
outsl
das
imul
hlt
ror
and
xchg
add
dec
pop
adc
mov
dec
out
lock
add
add
add
or
jecxz
sbb
adc
clc
inc
std
xlat
pcmpgtb
mov
push
outsl
or
pop
mov
xchg
pop
insb
xchg
fmul
pcmpgtb
add
cmp
xor
das
cwtl
inc
test
pop
jle
filds
fldt
and
ja
jl
fbld
mov
push
cld
inc
incl
inc
adc
add
add
repnz
jmp
sub
or
mov
adc
dec
cmp
jl
imul
pop
add
push
add
and
pop
pop
movsb
xchg
ljmp
jp
pop
shll
jne
pop
pop
ja
pushl
inc
jne
cmpsb
in
outsl
mov
cld
pop
push
scas
sbb
add
mov
inc
mov
push
ret
inc
jmp
dec
mov
mov
aad
std
jg
push
inc
mov
aam
ret
mov
mov
add
jecxz
lock
mov
adc
addr16
pop
cltd
rorb
nop
sub
cmp
addr16
mov
mov
repz
dec
add
ss
cmp
jbe
add
in
fldl
add
inc
and
sbb
sub
add
lods
inc
inc
push
and
jmp
insl
jo
decl
mov
mov
pop
sub
in
int3
test
xlat
loopne
cmp
lret
aaa
dec
adc
pop
jle
cmp
push
mov
es
je
dec
mov
out
fsubr
push
xchg
cmp
ret
js
add
andb
mov
xor
inc
outsl
leave
mov
daa
or
and
mov
mov
jb
sub
cld
jecxz
jl
dec
xor
adc
shlb
into
adc
cmp
nop
fcomps
rolb
add
ffreep
mov
xor
neg
outsb
loop
lahf
pop
insb
pusha
mov
not
movsl
or
xor
mov
mov
mov
mov
aam
sarl
and
bnd
inc
or
push
loope
out
ljmp
or
loopne
stos
mov
and
mov
imul
loope
pop
cld
filds
mov
mov
adc
or
sub
das
or
mov
cmpsl
sub
xchg
fisubs
push
cwtl
sbb
mov
subb
sti
outsl
lea
test
rcll
push
jmp
push
es
cs
loope
pop
fsubs
mov
ret
stos
mov
mov
popf
fdivs
jns
and
fwait
in
pop
mov
and
xlat
in
inc
add
mov
stos
hlt
cmp
add
mov
xchg
lods
orb
xor
add
cwtl
or
cmp
stos
mov
stos
pop
testl
jge
outsb
dec
sbb
jbe
cmp
mov
mov
in
adc
das
mov
mov
scas
jne
test
pop
add
outsb
dec
arpl
out
mov
adc
loope
sbb
push
insl
sub
jecxz
inc
mov
popa
and
std
outsl
add
and
mov
imul
outsb
jmp
mov
jl
jo
lea
stos
in
mov
clc
ret
adc
or
mov
std
std
sub
sub
mov
push
movsl
iret
sub
inc
outsb
pop
xor
cmp
xor
lods
mov
lods
jbe
and
mov
mov
adc
lahf
and
pop
adc
sbb
repz
test
push
js
pop
mov
in
out
fcomps
jns
int
rclb
addb
int
and
push
fadd
jmp
in
pop
sarb
sbb
dec
and
xor
add
scas
inc
loopne
adcl
mov
je
call
stos
testl
aam
loope
fmull
ret
cwtl
add
outsl
aaa
loop
xchg
js
jmp
pushf
sub
test
fneni(8087
cli
mov
push
sbb
lahf
and
push
insl
subl
jo
pop
jle
ret
in
jne
das
mov
and
lret
sbb
pop
int
in
int3
fldl
add
jl
and
jb
or
push
mov
mov
cmp
leave
ss
in
mov
stos
leave
clc
sbb
leave
movb
dec
daa
sub
loope
les
cmp
shrb
test
push
add
cmc
das
lds
std
out
inc
jle
push
adc
sub
mov
daa
xchg
loop
add
mov
repnz
cmc
lea
inc
nop
les
mov
sub
les
add
sahf
jg
mov
js
mov
sub
sub
push
mov
in
idivb
xchg
cmpsb
pushl
and
mov
sub
jns
ret
fcomp
inc
pop
ljmp
cmp
cmp
xor
pop
mov
ja
cmc
or
rorb
push
dec
idivl
xrelease
xchg
bound
pop
jnp
scas
into
sbbl
fidivrs
and
adc
or
dec
lea
cmp
xor
xor
jle
push
mov
aam
add
xchg
clc
cmp
sete
cmc
lock
mov
inc
mov
cmc
jle
adc
sahf
push
lock
dec
in
lods
bound
mov
mov
pop
inc
adc
aaa
jae
lahf
clc
adc
add
in
xor
push
push
inc
aam
jbe
add
mov
xor
lar
inc
push
push
clc
jl
inc
or
ffree
arpl
jle
cs
sbb
xchg
xchg
cltd
pop
fbstp
call
cmp
mov
movsb
adc
mov
pop
mov
jp
ffree
mov
fdiv
inc
sti
repnz
orl
lock
xor
test
push
mov
sbb
push
xchg
mov
dec
inc
add
dec
ds
insb
inc
mov
or
sarb
jo
cs
lock
daa
pop
insb
push
stos
mov
ljmp
cmpsb
call
mov
sub
icebp
ds
inc
add
loopne
fistpll
add
push
popa
sbb
jmp
and
inc
insl
xchg
cwtl
mov
inc
mov
or
push
pusha
jo
inc
adc
inc
loopne
dec
mov
cmpl
addb
push
fbld
fidivrl
imul
fidivrs
rorb
inc
push
adc
rclb
or
or
jge
mov
sbb
jg
call
or
mov
mov
scas
repz
into
inc
mov
xchg
test
adc
mov
xchg
inc
xorb
shll
nop
mov
addr16
fadds
fs
stc
xor
push
mov
pop
cmp
pop
nop
js
mov
shll
stos
sub
add
pusha
call
ret
xor
jns
or
and
ss
jno
aas
mov
outsb
mov
xchg
in
out
add
fdivl
mov
mov
js
inc
in
xchg
sbb
xchg
sub
getsec
enter
or
sbb
stos
outsl
lcall
popw
ds
inc
pop
mov
mov
push
push
mov
loope
adc
lods
xor
insb
and
out
fwait
rorl
mov
and
or
fwait
stos
cmp
in
sub
and
add
loope
in
and
push
xor
lods
sbb
in
pop
fisttpl
adc
into
test
ja
aam
imul
mov
adc
mov
sub
not
push
in
lods
inc
dec
insl
cmp
call
adc
popf
out
test
push
pop
cmp
je
adc
stos
out
add
imul
fidivrs
push
push
add
mov
ljmp
push
mov
es
leave
leave
loope
add
xchg
loopne
adc
xor
pop
cld
adc
sub
aad
jbe
mov
push
push
jb
adc
xor
inc
or
mov
mov
adc
adc
mov
mov
jmp
sub
scas
add
mov
into
and
jg
popa
mov
add
dec
dec
rclb
mov
mov
stos
jae
aad
repz
insb
or
pop
jge
or
pushf
sti
add
enter
inc
mov
repnz
cmp
push
pop
std
std
addb
and
xor
adc
and
mov
push
data16
cmp
stos
or
adc
movsb
mov
sub
add
cli
or
mov
je
out
sbb
movsb
sbb
cmp
inc
or
jecxz
loopne
sub
pop
loope
push
mov
test
or
inc
add
aaa
or
dec
xor
jecxz
ret
pop
orb
shll
sbb
push
push
enter
jg
and
adc
mov
xor
cmp
divl
ret
pop
mov
sti
sbb
mov
orl
into
fstps
cmp
inc
into
adc
xlat
xor
loop
dec
call
push
push
push
dec
lock
and
mov
loope
xchg
int3
loope
sbb
cmp
icebp
jecxz
dec
testb
lock
dec
fdivs
inc
xor
sub
rclb
cmp
jbe
mov
inc
xchg
mov
dec
loop
inc
sti
pop
mov
nop
sbb
adc
je
or
xor
in
gs
add
inc
cmp
lea
mov
xchg
dec
jg
mov
mov
xchg
push
sub
lret
lds
pushf
loope
rolb
insl
into
daa
mov
pop
cmpsl
adc
repz
push
pop
cwtl
punpckhbw
push
mov
push
xor
sarb
rclb
adc
or
adc
imul
imul
inc
popf
push
shl
mov
lret
dec
addr16
or
mov
gs
repz
lahf
add
aad
sbb
pusha
leave
adc
mov
jg
xor
or
inc
xchg
push
or
jo
inc
repz
add
push
add
xor
stc
mov
mov
jb
mov
jne
jmp
add
jnp
das
mov
sub
out
and
mov
and
adc
xchg
and
cli
jo
loop
sub
loopne
sub
xorb
sub
mov
mov
popfw
dec
insl
fistpl
loop
mov
add
sysret
flds
sbb
inc
add
outsb
push
add
addb
loopne
cld
or
dec
ljmp
mov
insl
or
mov
cmpl
loopne
ret
inc
nop
outsb
add
test
xchg
sub
add
cmpsl
push
mov
stos
mov
int
pop
loopne
inc
cmp
shl
or
bound
lcall
mov
xlat
lods
insl
clc
add
adc
sbb
repz
in
jl
cltd
int3
jbe
add
aad
rolb
rorl
ljmp
adc
sub
clc
cltd
mov
cmp
jg
vpaddsw
iret
shlb
aas
sub
mov
push
insb
xorl
xor
adc
pushf
push
cmpsl
cld
push
ffreep
shlb
xor
fmull
push
mov
aas
add
adc
ja
call
add
pusha
mov
fnstsw
cs
jnp
cmp
push
das
sub
outsl
cmc
pop
ljmp
dec
xchg
inc
mov
fwait
jno
mov
mov
or
call
xchg
mov
test
sbb
and
lods
std
incl
fs
icebp
sub
dec
dec
jnp
mov
hlt
mov
and
dec
ljmp
in
dec
xor
xchg
and
orb
mov
scas
xlat
enter
pop
add
lds
push
movsl
jbe
sub
cmpsl
pop
add
jg
pop
and
jl
sbb
push
mov
adc
jp
in
pop
jecxz
pop
and
insl
and
xor
sbb
xchg
popa
addr16
fdivrp
cmc
cli
cmp
dec
orb
das
jp
mov
inc
orl
push
loop
or
xchg
inc
and
jecxz
popf
lds
push
xchg
jne
sbb
shrl
push
inc
add
mov
mov
dec
or
pop
add
sub
js
lret
push
in
pop
pop
cld
xchg
dec
out
sub
stc
jns
mov
mov
push
sbb
fsubr
arpl
addr16
out
mov
clc
lea
jo
dec
shll
dec
idivb
mov
and
fstps
sub
cmp
mov
daa
jl
test
inc
in
sbb
ljmp
bound
imul
inc
popf
aaa
mov
push
icebp
outsb
aas
mov
pop
xchg
cli
cmpsb
fs
jbe
test
test
xor
icebp
js
push
hlt
iret
mov
leave
xchg
xchg
jbe
das
push
adc
mov
add
sub
inc
loopne
cmpsb
xor
pushl
pop
or
jno
mov
nop
popa
out
add
in
das
dec
lcall
jp
mov
xor
mov
mov
mov
jae
movsb
jg
adc
rcrl
push
mov
stos
in
jmp
cs
arpl
xchg
rorl
adc
or
fistpll
pop
sbb
pop
sub
fisubrl
enter
lods
cmp
pop
inc
mov
adc
xlat
bound
imul
cltd
or
imul
pop
aad
shlb
cli
mov
or
add
and
fucomip
mov
and
fs
xor
jl
leave
adc
add
add
aaa
loop
adc
std
push
xor
lahf
adc
pop
jge
sub
push
jb
add
push
call
iret
add
lods
jp
ret
inc
dec
adc
ret
and
inc
and
fdivrs
mov
shlb
cmp
add
mov
adc
fst
test
bound
fcomps
mov
mov
cld
into
enter
cmp
mov
outsb
aas
xor
add
push
and
push
sub
xor
jne
jbe
jo
ja
sbb
in
inc
fistl
add
pop
and
add
adc
sub
push
pop
addr16
inc
aas
dec
xchg
adc
sub
mov
test
push
dec
test
mov
stos
xor
stos
xchg
hlt
std
pop
adc
sub
jp
dec
into
inc
push
jle
push
dec
insl
lods
push
pop
mov
dec
push
and
jo
outsb
or
sbb
jb
ss
jg
pop
pop
or
fmuls
mov
outsb
outsl
xor
addr16
fcmove
jg,pn
add
xchg
daa
mov
lcall
int
sbb
shl
xor
and
sbb
xchg
cmp
aad
jl
out
js
sub
lock
or
mov
dec
mov
xchg
inc
in
adc
loope
push
mov
leave
mov
mov
jle
fisubl
mov
mov
in
test
xchg
jne
xchg
icebp
cmp
and
jo
mov
inc
mov
movsb
repz
pop
call
push
dec
ja
sub
xchg
leave
add
inc
js
xchg
lcall
pop
jbe
jae
push
loopne
out
inc
mov
xchg
and
icebp
cmpsb
jno
vmovupd
sub
and
lret
fldl
addr16
fcomip
outsl
stc
add
adc
ds
pop
aas
cmp
mov
pop
inc
xor
es
fucomip
inc
repnz
mov
mov
adc
sbb
outsb
fdivl
mov
or
jmp
loop
loopne
idiv
and
jne
movsb
push
add
inc
and
adcl
lods
inc
rcrb
das
pusha
and
and
dec
add
hlt
sbb
inc
push
testb
xchg
das
add
pushl
data16
add
iret
movsb
subl
xor
or
fisubrs
cld
fildll
shll
aaa
jb
xor
add
gs
adc
div
inc
adc
inc
cld
mov
mov
add
test
jge
mov
andl
xchg
fisttpl
gs
adc
jl,pt
jp
xchg
insl
lods
aam
in
and
movsl
sarb
outsl
and
pushf
xchg
mov
sbb
and
mov
mov
sub
jmp
jbe
fildll
xchg
rcr
lock
add
xor
fidivl
clc
jns,pt
add
push
hlt
or
cmp
iret
mov
mov
adc
outsb
add
mov
das
fnsave
in
aam
test
aaa
ficoms
fldt
sub
cmc
stos
mov
push
sbb
mov
leave
in
cmpsb
incl
mov
sbbb
fmul
imul
stos
push
loopne
lods
jo
loopne
dec
mov
mov
hlt
cmp
sbb
pop
jl
pop
hlt
out
push
lods
add
push
push
jp
dec
rcrb
lret
adc
std
lea
xor
in
add
or
inc
mov
int3
inc
mov
testl
je
mov
hlt
js
lcall
inc
sbb
push
jne
rcrb
sub
mov
dec
ror
jo,pt
ljmp
add
sbb
dec
les
xorl
les
std
adc
ja
add
ljmp
les
cltd
push
les
pop
or
xor
sub
test
mov
outsb
pop
or
aad
lods
hlt
push
dec
and
inc
inc
repnz
nop
not
dec
adc
inc
dec
pop
sbb
cmc
or
push
adc
and
imul
repnz
adc
out
pop
mov
mov
stos
adc
or
push
rcl
xchg
jp
stos
test
dec
sbbb
adc
dec
mov
or
inc
loopne
xchg
add
lods
ficoms
push
test
or
out
mov
add
sub
sahf
testl
daa
add
push
iret
add
clc
add
pop
sub
adc
adc
pop
int3
fstl
orb
dec
sub
sti
inc
and
inc
ret
push
pop
ret
push
push
in
gs
clc
adc
mov
sti
lods
cmpsb
stos
shll
cmp
faddl
push
xor
addb
sbbb
sbb
pushf
sub
out
movb
sbb
out
xor
cld
adc
int3
mov
into
mov
in
jne
stos
and
add
add
sbb
xchg
xchg
sub
scas
add
jle
rorl
loopne
or
mov
clc
and
add
mov
and
js
or
mov
add
movsl
and
and
jb
sbb
fstpl
lock
mov
sub
arpl
int
jl
push
int3
pop
add
or
rolb
push
movsb
or
icebp
xchg
mov
popa
fsubrs
flds
sbb
int3
add
lcall
dec
aam
push
inc
mov
pop
out
test
clc
or
push
stos
idiv
adc
daa
pop
hlt
xchg
bswap
add
jmp
push
xchg
pusha
sbb
rorl
inc
sti
rorb
or
adc
pushf
push
push
xor
shl
sbb
lock
add
sub
mov
sbb
ljmp
lock
std
clc
mov
mov
mov
shlb
inc
add
or
adc
add
into
add
rolb
and
hlt
add
cmp
sbb
jnp
adc
lret
mov
aas
fldl
inc
std
pop
test
xor
adc
inc
js
mov
xchg
cmp
cltd
mov
ljmp
mov
push
cmc
cmp
clc
dec
sbb
pop
mov
and
int
sub
add
xor
iret
into
inc
sub
push
sbb
push
mov
jge
lret
fstps
into
jbe
xor
sahf
addr16
fadd
push
mov
fcompl
jle
js
cs
inc
fmull
add
movsl
fstps
in
xlat
pop
and
filds
stc
fnstcw
jmp
test
movsl
cmpsl
xor
mov
add
dec
push
in
mov
mov
add
push
and
das
pop
sub
cmp
mov
dec
sbb
jmp
fldcw
int3
ret
adc
or
xchg
sbb
outsl
jbe
lods
sbb
and
mov
nopl
xchg
cmpsb
mov
js
das
das
sbb
mov
or
inc
sbb
out
and
xor
shrl
outsl
fcoms
sbb
iret
lea
fidivs
push
in
dec
cwtl
lock
jae
xor
roll
xchg
jmp
into
cmpsw
pop
add
aaa
xor
push
xor
mov
lret
inc
adc
or
scas
movsl
rcll
fxch
inc
lahf
repz
jno
pushf
mov
xor
sbb
xor
add
xchg
sbb
lcall
clc
aas
out
pop
mov
cmp
jne
xor
leave
ret
dec
les
rcrl
lock
in
adcb
ret
pop
jle
bound
inc
sbb
aam
ret
pushf
mov
and
aam
jne
cmpsb
scas
and
sbb
sbb
push
inc
aaa
mov
or
add
int
mov
xchg
mov
mov
fcmovnb
mov
sbb
inc
pop
pop
mov
pop
rcl
adc
mov
sbb
mov
mov
fmull
mov
outsl
lods
subb
xchg
andb
mov
sarb
push
add
popa
shl
adc
cs
sbb
push
icebp
mov
mov
push
inc
in
pop
or
notl
call
int
repz
sub
adc
push
sahf
or
sbb
mov
dec
xor
adc
mov
int
scas
xchg
fsubrs
loopne
add
cmc
lea
cmp
leave
es
add
popf
les
cmp
and
rolb
jnp
jns
clc
cmp
mov
cmp
and
ror
outsl
dec
shll
les
jg
inc
jmp
push
mov
mov
ret
and
ret
popa
add
daa
xor
ret
adc
cmp
push
test
repz
les
in
dec
mov
cmp
sbb
push
ret
xchg
add
xor
hlt
shll
out
imull
mov
xlat
iret
mov
xor
xchg
pop
mov
pop
or
arpl
pop
xor
xor
dec
mov
mov
xor
cmp
fdiv
sbb
mov
sbb
mov
enter
push
xor
pop
jmp
cmp
int3
int
int3
sub
ret
inc
scas
popa
ret
adc
or
movsl
and
push
lock
lock
xchg
sbb
daa
dec
call
mov
or
test
shll
pop
lahf
mov
es
pop
adc
clc
scas
sbb
in
int
pop
pop
cmc
ret
fldt
cmp
mov
test
or
mov
nop
jle
pop
mov
lock
push
sub
int3
ret
inc
mov
in
jbe
jl
jle
lock
lret
add
add
loope
xchg
js
es
fnstcw
jmp
adc
and
gs
sbb
sbb
sub
repz
pop
pop
sub
push
sahf
in
or
lahf
cmpsl
and
xchg
adc
cltd
xor
stos
scas
or
fmull
adc
fcompl
dec
leave
bswap
loopne
cmpsl
into
loopne
outsl
adc
xchg
or
xor
scas
fimull
and
or
mov
out
mov
sbb
xor
ficoml
test
xor
outsl
dec
add
ljmp
sub
push
or
push
sbb
push
pop
out
push
ret
xchg
dec
or
pop
les
add
daa
in
sbb
loope
cwtl
xor
repz
test
fidivs
xchg
sub
mov
sub
cmc
lahf
in
out
xorb
rolb
and
scas
test
adcl
xor
js
xchg
movsb
loopne
adc
pop
and
mov
shll
jp
call
leave
inc
mov
cwtl
pcmpgtd
add
and
jg
jae
nop
add
call
leave
jae
sub
loopne
mov
inc
js
push
mov
xor
xor
push
push
rcll
mov
call
test
ja
dec
xor
mov
or
das
xchg
ljmp
adc
jb
or
nop
cwtl
mov
test
jecxz
xchg
movsl
loopne
bound
jp
insl
adc
or
vpcomw
mov
mov
mov
mov
sub
add
or
mov
pushf
xor
inc
repnz
out
subl
sbb
push
xchg
and
fsubl
loopne
dec
aaa
pusha
pop
subb
nop
repz
add
xor
cs
dec
xor
gs
ss
xchg
loopne
in
aad
add
pop
cmp
out
push
repnz
mov
push
rcr
push
cmp
cs
ljmp
push
addb
push
addr16
test
jae
cmp
pop
adc
and
push
add
iret
lock
jle
add
imul
pop
add
cs
outsl
mov
sub
or
dec
clc
js
dec
mov
out
mov
adc
inc
mov
add
cli
loopne
pusha
rcll
orb
cld
mov
ss
fisttps
cltd
mov
add
call
mov
test
std
stos
test
add
int3
out
add
not
leave
mov
or
ds
test
idivb
push
scas
sub
cltd
or
cmp
ljmp
loopne
mov
ljmp
sbbb
sub
xchg
dec
orl
incl
out
mov
aam
add
pop
ljmp
xor
icebp
cli
add
jl
add
nop
mov
or
mov
mov
lods
xchg
aas
cltd
push
cltd
cltd
test
cmpsl
es
mov
test
mov
jno
add
ljmp
dec
and
adc
add
jns
or
in
lcall
jg
smsw
add
int
or
mov
adc
sbb
imul
sub
loope
lds
jle
sahf
xchg
ljmp
popf
stc
clc
shll
into
bound
add
add
xlat
add
daa
sub
ljmp
dec
cmpsb
repnz
out
jmp
dec
mov
sub
sti
stos
add
xchg
pop
mov
ret
xchg
xchg
int
and
imul
cmp
and
mov
mov
pushf
xor
lahf
inc
dec
cli
mov
mov
inc
mov
mov
loope
cmp
push
push
sbbb
jmp
and
sbb
and
sub
jmp
cld
adc
xchg
pop
jg
fisttpll
shr
mov
icebp
das
cld
mov
sub
add
lods
and
iret
mov
dec
test
outsb
dec
cld
test
jmp
divl
add
or
pop
mov
stc
ret
push
lds
inc
scas
mov
inc
push
add
aaa
mov
inc
insb
pushf
aad
pop
inc
mov
mov
xlat
orb
insl
pop
clc
mov
mov
sbb
mov
in
sbb
nop
inc
jge
das
cld
xlat
sti
sbb
lds
add
fiadds
insl
in
mov
loopne
mov
cmp
sbb
inc
ficoml
push
fbld
call
addr16
xor
mov
add
sarl
idivb
adc
jl
cld
outsl
pop
mov
add
add
xchg
push
incb
imul
jb
mov
outsl
repz
rol
and
data16
pinsrw
add
sbb
aam
fmuls
test
pushl
xchg
dec
add
rolb
mov
ljmp
sbb
ds
es
push
clc
mov
incb
adc
add
dec
xchg
fildll
add
push
add
out
inc
jge
sbb
enter
adc
pop
in
ret
rcrb
add
aas
rcrb
xchg
lcall
testb
imul
loope
push
mov
add
push
test
cwtl
shlb
das
cld
inc
xchg
push
test
cld
and
mov
test
inc
outsl
add
stos
pop
clc
ljmp
rorb
mov
add
ret
lcall
test
pop
and
and
out
jp
jae
fcmovnu
dec
push
call
mov
decl
mov
push
std
add
out
loop
mov
out
outsl
adc
mov
inc
movsb
popa
loope
fbstp
arpl
mov
mulb
jne
add
adc
jg
sub
nop
push
xor
mov
pop
rcl
or
js
and
add
inc
flds
push
addr16
mov
jmp
mov
add
or
std
jg
test
or
inc
mov
mov
and
int
and
aad
rclb
lds
fisubrs
xchg
notl
outsb
cli
sbb
jne
es
push
fs
btr
mov
add
mov
pop
jg
jnp
mov
push
inc
mov
out
fnsave
inc
adc
decb
dec
dec
pushl
xchg
jge
std
jg
inc
popa
xlat
loopne
or
stos
out
jbe
pop
pop
lcall
jno
lods
jnp
or
sbbb
out
and
test
jg
cld
mov
loopne
pop
rclb
jo,pt
push
out
leave
sub
fcomps
idivb
fsubl
shl
xchg
adc
adc
mov
shr
clc
insb
jnp
push
scas
int3
cwtl
lahf
jb
les
mov
popf
or
fisubs
inc
sub
movsl
cmp
mov
dec
cmp
cmp
fbstp
das
cmp
out
test
sbb
fidivl
cmpsl
lock
movl
and
adc
pop
insb
dec
ret
add
push
xchg
lock
add
ret
pop
push
jge
cmp
cld
pop
fistl
ret
add
std
test
loope
xchg
mov
ja
xchg
test
rorb
movsl
or
push
xor
inc
dec
push
ljmp
pop
add
jnp
mov
ss
add
dec
cli
pop
mull
pop
ss
icebp
test
push
data16
in
jae
clc
pop
or
jge
jo
andb
popf
rolb
inc
or
sub
sbb
cmpb
mov
and
push
dec
jp
pushf
sub
xchg
ss
cmp
cld
cmp
mov
aaa
jnp
fcompl
cmc
adc
adcl
inc
mov
icebp
mov
jecxz
inc
loopne
cmp
pusha
mov
inc
call
add
and
mov
mov
push
cmpl
pop
adc
call
call
stc
adc
enter
pop
rcl
notb
and
test
loop
and
dec
or
pop
dec
sbb
inc
out
addr16
sbb
add
push
dec
aad
shll
fbstp
mov
ss
cmp
mov
mov
or
loopne
lods
adc
pop
adc
inc
sbb
out
insl
or
ljmp
clc
fbstp
xor
sub
xchg
inc
dec
add
lock
and
sub
sbb
jae
fmuls
fsubrs
sub
cmp
adc
xchg
loop
pop
stos
rorl
out
sbb
adc
insl
sbb
lea
adc
or
push
push
mov
rcl
push
fiadds
enter
push
cmpsl
js
xchg
jbe
ret
mov
test
sbb
shl
mov
call
cs
jge
push
mov
daa
mov
out
mov
cmp
sub
arpl
add
bound
mov
or
and
fcmovnu
das
loop
adc
xor
bound
scas
jbe
test
and
push
inc
pop
mov
sbb
jnp
scas
dec
inc
lds
hlt
rcrl
decb
addr16
push
or
rcll
push
add
jle
or
add
adc
lds
dec
xor
or
mov
and
inc
and
insl
mov
xor
cmpsb
jb
jae
insl
xchg
ds
push
loope
insl
mov
and
fldt
cs
jmp
cmp
aas
stos
sbb
mov
imul
lock
mov
jns
arpl
inc
icebp
inc
xor
out
sub
xchg
ljmp
or
add
dec
mov
or
add
dec
enter
divb
xor
out
std
insl
scas
xchg
call
ror
and
divl
add
rolb
sar
xchg
sub
jmp
incb
arpl
call
lods
out
mov
daa
std
adc
stc
jno
inc
add
ja
mov
imul
cmc
xchg
xchg
add
outsb
pop
push
dec
mov
push
adc
and
cmpsb
bound
js
push
mov
pop
jmp
sub
sti
lods
cmp
fs
inc
push
xchg
sub
es
mov
int3
xor
outsb
sbb
mov
sub
std
incb
dec
inc
pop
test
push
out
inc
mov
fdiv
mov
adc
xlat
pop
and
daa
hlt
stc
inc
jne
movsl
sbb
imul
lea
inc
and
cmp
xchg
xchg
jp
pop
arpl
lret
test
sub
ljmp
sbb
aas
or
sbb
jnp
add
adc
inc
or
test
shlb
pop
adc
cmp
shrl
arpl
mov
cmc
mov
ds
xor
inc
pop
adc
les
adc
dec
mov
outsl
sbb
outsl
lods
cld
push
in
xor
sub
mov
cmp
jae
push
loop
or
dec
rclb
and
xchg
jge
inc
test
inc
flds
insl
cltd
sbb
neg
cmp
std
dec
xchg
cmpsb
sbb
xlat
fcompl
adc
push
lea
jmp
addr16
adc
and
and
mov
pushf
mov
stos
imul
sbb
cmp
add
push
xlat
push
adc
aas
ds
adc
cmp
mov
enter
adc
adc
mov
mov
mov
decl
add
jp
sub
emms
lods
fistl
sbb
shll
mov
mov
xchg
dec
mov
add
dec
test
mov
rorl
xchg
mov
hlt
sub
loope
insb
or
ret
pop
ret
sbb
rcrb
pop
fsubs
sub
sub
outsb
xchg
mov
xchg
xor
je
jp
or
jns
lods
sub
pop
push
jl
mov
lds
fnop
sbb
repz
popa
adc
in
lea
dec
hlt
test
fwait
repnz
cmp
mov
add
lret
out
cmp
inc
andb
daa
jp
add
leave
bswap
pop
js
and
push
add
in
adc
cmp
aad
mov
xor
loop
xor
jl
in
inc
mov
inc
popa
mov
inc
adc
cltd
jge
outsb
testl
and
push
je
ja
inc
inc
pop
shlb
outsl
das
inc
xor
sarl
adc
pop
xor
shl
movsb
jecxz
mov
add
outsb
xor
xor
sarb
test
push
mov
jne
stos
add
fiaddl
or
cli
in
popa
adcb
mov
jne
and
jo
js
jecxz
push
adc
push
and
or
stc
rcll
xorl
ss
cmp
pop
aad
shrl
and
sub
loopne
add
inc
pop
adc
jle
je
sub
cs
inc
mov
mov
sbb
daa
in
and
jge
sub
sti
ja
out
enter
add
dec
xor
or
loopne
or
mov
in
mov
pushf
hlt
cmpsl
mov
push
sbb
add
jnp
mov
imul
xlat
push
bound
ds
fs
xchg
push
aaa
mulb
test
fwait
add
add
stos
sub
dec
and
mov
pop
jnp
scas
xchg
jecxz
mov
mov
pop
sti
cmp
push
adc
and
and
mov
mov
mov
cwtl
clc
add
pushf
ds
idiv
xorl
adc
jle
repz
pop
js
lahf
subl
nop
or
pop
jae
dec
sbb
sbb
push
xchg
mov
jnp
pop
rcll
and
mov
cmpsb
jge
fadds
pop
mov
stc
or
fs
mov
cmpsb
lock
cmp
les
pop
ret
icebp
xor
iret
xor
in
pop
int
xchg
xor
test
sbb
fs
mov
adcb
js
sub
lock
sbb
mov
sbb
aas
sbb
addr16
push
lcall
or
sti
aas
mov
dec
cmpl
and
into
inc
hlt
cli
fdivrs
cmc
or
int3
lahf
fdivrp
in
test
test
push
mov
repz
icebp
out
icebp
loop
cmpsb
loope
xchg
sbb
enter
icebp
inc
mov
loopne
inc
movsl
sbb
fdivr
outsl
fldt
cld
ret
pop
test
cs
pushf
and
shlb
add
add
out
push
and
clc
popa
int3
es
pop
adc
fldt
and
push
std
inc
push
pushw
jle
xor
decl
leave
inc
sahf
mov
les
inc
mov
pushl
pop
add
cmpsb
pop
add
icebp
or
lods
jns
aas
lret
xchg
mov
addb
ljmp
lock
pushf
and
and
inc
insb
int
in
cmp
pop
jo
es
xchg
subl
dec
shl
in
fnstcw
adc
push
mov
jnp
stos
enter
jmp
push
cmc
xor
xchg
fs
fs
mov
fadds
pop
jne
subl
ss
sub
aam
lea
jb
call
popa
ret
sub
xor
out
inc
fisttpll
jg
sbb
jnp
adc
cli
inc
std
xor
mov
lods
mov
sahf
rorl
push
insl
sbb
add
fs
jae
push
fnsave
cmc
pop
pop
mov
fildll
or
inc
or
mov
push
mov
loop
pop
xchg
pushw
add
out
mov
addr16
push
mov
je
pop
sbb
cmpl
cmp
fsubp
nop
jp
mov
mov
pop
xor
sub
cmpsl
popa
push
and
cmpsb
mov
lds
ljmp
call
add
mov
sbb
jecxz
aam
das
sbb
fisubs
mov
mov
loopne
xor
rcrb
or
add
fdivl
lea
fsts
jo
fistps
or
sarb
stos
xlat
addr16
jbe
test
fnstenv
mov
and
xchg
pop
cmp
xor
or
mov
sub
jge
bound
ds
pop
in
push
jbe
sti
push
aad
mov
ss
inc
dec
mov
sub
sbb
stc
cmpsb
movsb
stc
mov
decl
mov
jno
lods
cmp
inc
pusha
push
data16
sbb
cmp
clc
aam
mov
imul
lret
and
lcall
daa
nop
lea
adc
cld
out
adc
int
xor
sub
sub
fwait
jne
push
test
mov
sbb
add
jbe
inc
fiadds
cli
mov
imul
jg
xor
jecxz
sub
jae
cli
outsl
sub
shll
sub
fmull
ret
fistpll
xor
and
push
nop
and
sub
cli
incl
ds
push
xlat
ja
clc
xchg
scas
orb
outsb
jecxz
adc
jmp
mov
pop
jo
xchg
or
inc
mov
inc
add
and
ljmp
xor
fists
je
inc
sti
jns
adc
pop
arpl
loopne
pop
pop
sbb
imul
pop
jp
jle
add
pop
lods
cmpsl
outsl
fisttps
inc
cmp
push
fucomip
stos
rcrl
loopne
pusha
leave
repz
jbe
fbstp
incb
jl
mov
add
icebp
lock
mov
roll
stc
clc
and
pop
fldt
shll
das
lret
or
insl
xchg
xchg
rcl
adc
jo
push
mov
add
adc
mov
mov
pop
mov
xor
icebp
out
icebp
ret
or
lods
add
repz
orb
jle
imul
mov
mov
fwait
push
movsb
or
add
adc
in
lcall
inc
pusha
popf
mov
cs
sub
shrl
mov
pusha
js
out
xchg
mov
sub
jnp
inc
dec
in
rclb
xchg
jecxz
push
add
pop
clc
fildll
mov
add
test
mov
aam
dec
bound
mov
fwait
pusha
hlt
or
dec
dec
or
ss
jg
mov
cld
inc
dec
sti
icebp
notl
xchg
or
or
cwtl
mov
std
pop
aad
push
add
push
xor
loop,pn
movsl
or
icebp
test
arpl
sub
fidivl
add
pop
mov
xchg
cmp
mov
sbb
loopne
cli
cmp
inc
into
insb
or
out
xor
jae
or
cmp
mov
in
mul
fistpl
daa
std
imul
or
clc
or
jb
mov
mov
mov
outsl
adc
rcl
mov
stos
lods
lock
aaa
or
push
mov
cmp
pusha
and
js
mov
clc
and
adc
js
faddp
popl
push
jnp
aaa
call
test
xor
add
lods
insb
jns
nop
dec
aas
pop
jo
aaa
decb
cmpsl
inc
xchg
lds
sub
mov
mov
mov
and
or
inc
lods
mov
xchg
push
mov
call
nop
jmp
cli
out
add
inc
sbb
idivb
jecxz
xchg
aaa
push
hlt
adc
repz
pop
test
pop
adc
ss
lea
add
into
push
fcomps
cmp
pop
stos
xorl
das
xchg
cmp
lods
dec
sbb
call
jg
ds
mov
fmull
cmc
out
adc
call
fldt
popa
add
clc
dec
mov
insb
dec
pusha
mov
pushf
xor
ja
mov
sbb
jl
xchg
add
sbb
jb
xor
push
das
mov
dec
cmpsl
in
mov
test
int3
sub
shrl
mov
jg
lret
pop
aas
xor
sub
insl
sub
jno
out
iret
mov
test
insl
jb
stos
decl
dec
outsl
aad
das
xor
add
ja
dec
cmpsb
ret
push
dec
outsl
mov
or
jae
mov
cli
mov
lcall
adc
jl
pop
ja
rclb
mov
addr16
mov
dec
data16
cmp
xchg
mov
jp
cmp
ds
imul
and
lcall
cmp
in
movb
mov
data16
js
insl
jl
inc
movsl
stos
aad
sbb
cmp
mov
push
ret
xorb
inc
les
call
pop
push
shrb
and
push
push
sbb
icebp
mov
pop
lcall
push
xorb
clc
pop
cmp
test
mov
jle
ja
or
ss
mov
loopne
stc
ljmp
shl
sub
dec
gs
loop
mov
push
sti
outsl
and
adc
divb
pop
outsl
or
mov
jae
xor
dec
imul
test
mov
std
insb
nop
stc
out
mov
call
or
dec
or
push
mov
and
call
mov
lcall
ret
pop
bound
les
pop
xor
inc
xchg
pop
in
mov
pusha
mov
ds
sbbl
aas
movsl
jp
int3
aam
mov
inc
test
inc
mov
mov
scas
lahf
mov
sarb
repnz
or
add
jmp
xchg
xor
sti
push
pop
push
ret
add
add
pop
and
and
xchg
mov
mov
inc
roll
pop
xor
out
sub
push
into
cmpb
repnz
shll
aas
push
ds
jmp
mov
fdivrs
clc
scas
inc
test
fwait
loop
adc
insl
cmpsb
stos
pop
add
gs
jle
jle
lret
test
pop
es
mov
mov
cmpsl
sbb
jno
add
xor
sar
push
aaa
sub
dec
dec
test
les
aaa
jmp
xor
xor
push
lret
aas
loopne
mov
das
mov
std
fistpll
pop
dec
out
jecxz
sub
push
scas
jae
pop
ljmp
push
jmp
inc
pop
call
rorl
jmp
cmc
arpl
imulb
inc
or
cmp
aam
cld
jo
xor
mov
cmpsb
fisubrl
das
or
or
mov
jg
push
popa
pop
lods
faddl
nop
inc
js
insb
cmp
push
jo
fwait
push
data16
cmp
movsb
dec
dec
mov
mov
dec
sub
xor
sub
pop
adc
aad
leave
in
stc
mov
xchg
cs
mov
pusha
shlb
adc
fmul
jl
pop
mov
mov
jg
pop
pop
dec
test
cli
fwait
xchg
cmp
pop
scas
jnp
sub
lahf
ret
loope
adc
sub
mov
xor
imulb
fs
lcall
arpl
xchg
and
adc
and
push
push
data16
mov
mov
cmp
pop
jge
cmovg
loopne
aas
mov
aad
iret
outsl
and
jl
outsl
hlt
sbb
mov
sub
push
pop
mov
repz
out
add
ffreep
cmpsb
adc
adc
test
mov
dec
cli
lahf
push
sub
std
push
mov
push
sbb
xchg
outsl
jmp
ljmp
sbb
stc
imul
in
stos
mov
push
repnz
sub
push
fdivrs
mov
xor
ljmp
push
cld
shlb
inc
out
inc
push
pop
lds
imul
ja
mov
push
push
out
mov
add
and
pop
cmp
iret
jmp
into
inc
jge
add
outsl
outsl
hlt
inc
push
adc
xchg
mov
fldcw
push
insl
cltd
dec
and
add
jmp
out
push
nop
inc
push
mov
arpl
outsb
jo
or
test
push
add
fiaddl
mov
push
scas
jno
push
cmc
or
imul
xlat
gs
das
and
mov
in
mov
shl
aaa
xlat
daa
fildl
jno
je
inc
pop
pusha
inc
jle
sbb
sub
sbb
cmp
mov
pop
adc
mov
jne
or
repz
std
adc
xor
mov
sbb
or
cmp
lcall
dec
fs
mov
hlt
mov
sub
sbb
push
pusha
fdivrs
mov
pop
cmc
testb
call
cli
rcll
pushf
sbb
es
leave
lcall
add
ret
int
hlt
dec
loope
leave
lock
fwait
add
push
in
push
xchg
sbb
and
test
xor
sar
enter
pop
cmp
fwait
clc
ret
in
test
test
inc
les
xlat
fdivrs
iret
mov
imul
jg
xlat
in
leave
jbe
and
loope
mov
inc
and
mov
das
stc
adc
xchg
shrb
outsb
loope
pusha
mov
add
and
jmp
push
pop
push
loopne
jmp
and
or
addb
push
dec
leave
jnp
jg
fsubl
inc
mov
adc
in
push
jp
mov
fsubrs
loopne
jne
mov
hlt
xor
lock
fwait
pop
int
in
jb
movsl
out
faddl
and
xchg
cmp
lcall
sbb
jge
daa
ds
sub
push
inc
or
mov
in
fmull
push
jns
rcrb
call
jno
stos
ljmp
cmpb
sbb
sub
pop
lret
pop
cmp
aaa
mov
mov
jl
sbb
pop
test
push
stc
out
mov
and
add
cmp
pop
sub
mov
cmp
inc
push
inc
pop
jbe
mov
lds
fwait
adc
cwtl
arpl
insl
xor
movsl
outsl
mov
mov
dec
cmp
mov
out
icebp
push
insl
adc
mov
repnz
cmovb
addb
cld
cmpb
xor
mov
test
hlt
sbb
pop
aaa
shll
sbb
dec
add
movsb
pusha
mov
lea
loopne
xor
pop
inc
jo
mov
aaa
fnstenv
lret
jns
mov
je
js
cmc
inc
arpl
xor
pop
xchg
add
jp
sub
adc
loop
push
pop
lea
inc
rcrl
mov
and
cltd
add
scas
push
scas
out
sarb
lock
lods
mov
xchg
or
clts
stc
cld
sbb
addb
or
and
cmp
adc
sbb
adc
aam
fwait
mov
add
mov
or
adc
les
mov
lret
add
inc
sarb
int3
fldt
pop
and
inc
mov
pushf
xchg
dec
sub
xchg
push
mov
or
inc
mov
mov
push
fstpl
add
aam
js
push
dec
fmull
call
and
pop
in
push
cmp
mov
jge
pop
mov
jle
ficompl
mov
inc
dec
sub
pushf
mov
sbb
xchg
mov
nop
popa
sub
xor
shll
push
push
idivb
or
sti
lds
mov
mov
mov
cmp
shr
and
and
mov
xchg
out
outsl
adc
and
loopne
insb
sbb
loope
cmpsb
sub
into
push
mov
insl
out
push
aas
push
add
shlb
outsb
ljmp
stos
fisttpl
pop
mov
xchg
mov
adc
je
mov
add
sub
test
in
data16
sub
pop
insb
or
dec
adc
daa
jne
popf
push
cmp
mov
pushf
imul
in
mov
lods
jae
test
jae
xorb
fistpl
fildl
or
or
add
ret
iret
mov
adc
aad
sbb
or
sub
sub
out
mov
mov
push
mov
cmp
push
mov
test
roll
subl
sbb
sub
sbb
cld
jmp
test
jbe
sarb
mov
jmp
cmp
xchg
stc
xchg
loopne
jns
add
or
mov
scas
andb
or
add
and
sub
orb
cld
int3
testb
inc
sbb
jle
pusha
push
jno
add
ja
dec
mov
mov
mov
adc
xlat
xlat
xchg
orl
sbb
frstor
cld
mov
mov
dec
ficompl
rol
int3
cld
mov
lahf
btr
sbb
mov
mov
and
insb
sbb
jl
mov
loop
mov
mov
hlt
jnp
dec
fnstsw
lahf
inc
dec
adcl
popa
das
jl
ja
and
nop
pop
imul
flds
enter
cmpb
test
push
mov
add
negb
mov
sub
sbb
adc
test
and
push
or
aas
sbb
mov
cltd
mov
xchg
cmp
jno
stos
pushl
dec
push
mov
call
xor
aam
inc
loope
push
outsl
es
mov
fistl
push
je
outsb
icebp
sub
cltd
shlb
cmp
test
ret
sbbl
test
mov
loopne
and
repz
jmp
mov
cmp
push
mov
icebp
add
clc
lds
outsl
rcrb
push
pop
add
and
mov
outsl
inc
mov
push
sbb
mov
stos
mov
cmpsw
in
clc
mov
and
cltd
pop
push
jp
mov
lods
xchg
jge
ret
repz
cmc
sbb
sub
inc
cld
xor
dec
jns
push
jle
test
mov
lock
test
ljmp
pop
mov
ds
pop
dec
jmp
sbb
cmp
mov
in
xor
xor
mov
aam
decl
jne
xor
leave
fnsave
fldl
mov
jnp
jae
jne
or
add
adc
sarb
xor
fwait
clc
cmpsb
jae
push
and
sub
jo
cld
sub
dec
adcb
sbb
mov
or
mov
aas
cmpsl
gs
xchg
adc
int3
cmp
mov
dec
xor
push
mov
or
xchg
fists
jnp
ud1
rcrl
out
loope
rcrb
sarl
js
iret
test
in
ret
jg
jns
dec
sub
clc
cmpb
and
loopne
mov
mov
test
bnd
xchg
cmp
cmc
mov
scas
stos
ret
cld
xchg
and
xor
fistl
jle
push
jle
jns
xor
push
jns
nop
notl
push
and
sub
loop
or
xchg
mov
or
sub
mov
rcrb
push
rcr
xchg
lret
lds
xor
push
cld
jg
push
adc
out
test
stc
gs
clc
outsl
loop
in
pop
push
jge
cmpsl
dec
gs
xchg
sarb
mov
jmp
xchg
testb
inc
sbb
mov
stc
rclb
rorl
arpl
test
dec
mov
rcrl
lea
stos
lcall
cld
dec
cwtl
inc
and
mov
push
xchg
hlt
stos
lret
cmpsb
add
pop
cmpb
andb
mov
pop
adc
std
je
push
loope
sub
or
test
push
add
ret
dec
pushl
test
cmp
sub
adc
inc
push
jle
ds
jo
sbb
scas
rclb
dec
stc
mov
nop
lret
pop
mov
jo
mov
xchg
sbb
cmp
push
jecxz
mov
xchg
test
dec
jmp
pusha
ja
add
es
inc
sti
fmul
inc
hlt
test
aam
cmp
mov
rorb
dec
ljmp
pop
mov
or
mov
popa
clc
sbb
push
loope
xchg
icebp
fdivrs
sub
cs
or
outsl
insb
in
aaa
xchg
and
mov
bound
xchg
lret
aam
add
jge
and
les
cli
popa
fdivrs
loop
jo
cltd
cwtl
add
xor
std
dec
xor
xchg
pop
adc
mov
into
andb
xor
sbb
add
inc
faddl
shll
pop
fsubrl
clc
shlb
pop
fldenv
mov
jno
fildll
out
add
imul
sbb
mov
xor
inc
push
call
push
xchg
nop
xchg
dec
sub
outsb
ja
stc
sub
mov
popa
les
dec
adc
les
or
adc
jmp
aaa
mov
jmp
insb
dec
call
or
data16
sbb
cmpb
lret
out
fcompl
js
dec
orb
stos
lret
pop
and
fldenv
or
in
stc
push
arpl
outsl
add
pop
mov
ficoms
or
int3
jg,pt
mov
int3
sbb
orb
and
out
push
subb
mov
and
push
mov
les
test
inc
mov
aas
shlb
xlat
inc
in
mov
inc
dec
call
rolb
mov
call
jmp
aas
sbb
test
rcll
jbe
imul
mov
or
adc
pop
call
push
roll
sub
int3
add
jae
xor
xchg
or
adc
call
add
jl
test
push
jno
add
aam
jo
bound
sbb
fistpl
push
test
jl
push
mov
dec
divl
outsl
pop
xor
add
imul
mov
jo
nop
mov
nop
mov
xor
jg
and
inc
adc
dec
lret
test
xchg
cmpsb
sub
jns
mov
adc
push
mov
or
out
rcll
fsubl
dec
push
pop
xor
add
movhps
add
xchg
mov
mov
sub
fwait
or
inc
in
fwait
sub
mov
test
int3
cs
or
out
mov
outsl
or
mov
arpl
xor
inc
addb
sub
inc
ret
xor
push
lods
xor
mov
jecxz
sub
inc
sbb
aam
les
cs
js
outsl
aad
xor
jbe
fs
dec
stos
or
adc
xchg
sub
push
adc
inc
adc
fistpl
mov
push
rclb
inc
mov
inc
fsqrt
test
popa
out
dec
ds
cmpl
push
jb
addr16
pop
xor
inc
mov
jp
push
push
lea
push
ja
sub
out
pop
sbb
and
cld
inc
mov
inc
or
xor
ret
lods
xor
les
neg
pop
popf
jnp
jno
pop
sbb
call
add
or
mov
xor
xchg
sbb
cmp
enter
dec
addr16
in
xor
sbb
enter
jo
iret
loopne
or
pop
rolb
lcall
inc
insl
push
jge
push
jge
mov
xor
adc
mov
bound
test
and
loope
dec
jp
fadds
out
add
icebp
pushl
jns
hlt
arpl
stc
cwtl
fs
in
enter
insb
data16
sub
xor
cmc
mov
add
sub
push
popa
adcb
add
ss
jp
adc
cmp
jmp
dec
insb
call
pop
push
lcall
mov
push
mov
inc
movsb
xchg
mov
cmp
cmp
dec
push
insb
mov
out
mov
sar
add
cmpsl
sub
jge
mov
sbb
adc
in
mov
or
shrl
and
dec
out
mov
pop
mov
or
pushf
adc
sbb
movsb
fcoms
push
enter
cli
push
jae
inc
xor
add
stos
cmp
sbb
dec
adc
jbe
rorb
addl
test
call
cs
xchg
dec
jmp
mov
push
xchg
in
push
jmp
clc
mulb
sub
lahf
jp
repnz
jb
movsl
mov
push
jnp
adc
add
lock
jg
movsb
xchg
pop
inc
add
gs
jo
push
mov
push
jne
fcoms
push
sbb
or
mov
jo
and
pop
js
xor
ret
test
xchg
inc
push
fwait
jno
push
rclb
inc
enter
int3
dec
inc
mov
mov
daa
add
sbb
or
ret
jle
ja
call
sbb
sub
sbb
add
inc
call
sub
adc
decl
in
mov
or
sub
cmp
and
sbb
cld
and
adc
adc
sub
sarl
sub
adc
pop
lret
and
sbb
lea
std
mov
xor
push
ljmp
and
enter
mov
pop
lock
jge
dec
fucomp
cmp
lds
or
sbb
inc
popa
dec
nop
mov
add
xlat
imul
xchg
and
cs
jne
stos
sub
push
and
sbb
mov
rcrl
add
cld
mov
sbb
addl
mov
xchg
call
push
inc
adc
imul
call
xor
data16
cltd
jno
jne
add
lock
xor
aas
jnp
stos
stc
xlat
sbb
push
fiaddl
inc
pop
inc
fwait
jmp
fs
mov
jmp
and
jae
push
outsl
cmc
pop
andb
push
aaa
out
add
or
push
mov
inc
ljmp
call
movsb
sub
xchg
jno
imul
mov
test
or
pop
test
push
pop
add
jp
xor
pusha
das
sub
and
jg
adc
push
sarb
roll
in
fidivrs
loopne
xchg
or
fildl
mov
mov
outsb
fcompl
imul
add
pop
add
aad
incl
sbb
mov
add
cwtl
push
mov
sub
js
in
fisttps
push
add
clc
pop
test
cmp
or
push
mov
sub
je
inc
and
test
rorl
popf
pushw
fstpt
test
push
mov
arpl
call
outsl
repnz
inc
mov
in
and
lea
movsl
scas
mov
test
aam
cmp
lds
sub
push
dec
orb
add
mov
aam
fwait
or
push
dec
inc
push
fimull
dec
popf
or
dec
sub
and
fidivrs
test
in
into
popf
add
repz
rclb
cwtl
rcll
and
xor
movsl
jge
inc
loopne
in
in
fbstp
dec
cwtl
mov
mov
push
cmc
scas
or
inc
inc
pop
test
add
xor
pop
xor
inc
out
loop
fwait
cwtl
push
cmp
or
inc
loopne
leave
jb
cld
out
cmpsl
push
push
sub
or
lea
ficoml
dec
push
add
cmp
outsl
test
sub
pop
pop
add
sub
cld
test
mov
aam
or
insb
call
cmpb
pop
mov
js
shll
sbb
cmc
adc
and
or
xor
mov
dec
xor
lods
testl
cld
aaa
or
shll
or
mov
lea
push
and
ljmp
jnp
cwtl
repnz
enter
rorb
hlt
xor
popf
fistpl
fadd
dec
icebp
pop
popa
adc
negl
inc
aam
cld
out
push
jb
shrl
and
dec
add
dec
pop
adc
sbb
or
or
rclb
and
or
in
xor
lock
int
lcall
ret
mov
mov
pop
loope
cmp
out
or
cmpsl
dec
add
jl
xor
dec
jb
outsl
sub
cmp
mov
mov
mov
sub
jnp
icebp
jae
inc
hlt
mov
add
adc
mov
push
ss
cli
rclb
jnp
xorl
fistpl
push
cld
add
and
rclb
repnz
cmp
aam
fucom
and
mov
scas
mov
mov
jbe
into
sbb
bound
loopne
dec
scas
not
pop
out
pop
xchg
mov
cmp
pop
adc
add
sub
mov
add
mov
call
enter
aam
rolb
out
scas
clc
mov
jne
sbb
mov
ficompl
out
inc
jne
lods
push
loope
arpl
loop
add
inc
mov
cmpsl
nop
xor
lcall
jb
repnz
cmc
call
xor
sbb
jns
add
jb
lret
in
sahf
xchg
imul
ss
sub
sti
jb
dec
mov
imul
lahf
pop
test
push
outsl
std
add
pop
mov
lods
aas
cmc
add
push
iret
fldl
ja
lods
in
sub
rcll
mov
adc
inc
fcoml
loopne
sti
cmpsb
sub
mov
nop
push
mov
sub
and
add
and
cltd
scas
dec
jl
ljmp
das
cltd
cltd
mov
or
mov
outsl
aam
add
aad
gs
xor
das
xchg
divb
incb
stos
bound
cmp
add
outsl
add
mov
push
sbb
mov
js
mov
stos
pop
mov
and
insb
lret
jl
dec
pusha
addr16
adc
sub
addr16
pusha
sbb
mov
sub
mov
pop
xchg
les
push
mov
sbb
sub
cmpl
mov
push
or
sub
call
mov
pop
addl
movsl
mov
xor
lods
lock
lret
jge
jg
subb
cmpsb
pop
or
mov
xchg
ds
or
stos
and
lock
inc
pop
jle
sub
mov
or
negb
mov
lods
add
push
jl
jp
adc
and
add
pushf
lods
jg
pop
and
jbe
dec
xchg
jmp
inc
rcl
mov
ja
aaa
pop
sub
popf
and
xchg
fists
movsl
loop
ss
jle
lds
xchg
lea
add
xchg
dec
xchg
sbb
cmp
cmc
push
pop
cmp
imul
and
pop
mov
push
lods
sub
mov
jg
stos
mov
loopne
sbb
push
lods
shl
sbb
icebp
fsubs
push
sub
sub
repz
adc
mov
adc
cwtl
leave
adc
ficoml
xor
movsl
aaa
or
jbe
je
cld
shll
sbb
jo
jge
inc
stos
ret
cmp
mov
ficoms
push
cmp
mov
sbb
adc
int3
xchg
sbb
lds
mov
in
sub
cmp
orb
mov
add
cmp
mov
adc
xor
mov
clc
stos
pop
mov
sbb
cld
xchg
cmp
fists
cmp
adc
add
add
mov
in
ret
in
jbe
into
movsb
push
xchg
mov
sbb
cs
xor
sbb
pop
add
ja
cmp
mov
add
aaa
lcall
push
mov
cmp
cmpb
jl
mov
xchg
loopne
dec
loop
iret
data16
lret
adc
stc
add
jb
movsb
sbb
jo
hlt
test
je
rorb
sbb
shll
inc
and
sub
out
flds
and
or
inc
test
pusha
aaa
inc
mov
xchg
pop
mov
popf
inc
mov
adc
and
sub
mov
mov
incl
das
shlb
repnz
push
and
insl
pop
std
fiadds
push
mov
insl
push
movsl
cld
inc
lea
sbb
outsl
push
pop
jbe
sbb
or
jg
mov
shl
lods
movsb
jnp
popa
sbb
jp
or
jge
inc
inc
cmpsl
iret
iret
add
add
ljmp
in
fnstsw
leave
out
xor
pop
adc
and
xor
inc
mov
push
jge
mov
mov
aaa
or
rolb
shll
pop
movsb
and
mov
aas
add
adcl
sbb
daa
add
mov
push
sub
xor
inc
scas
push
sub
mov
add
outsl
inc
out
into
lcall
mov
pop
mov
sti
cmp
loop
stos
aas
jns
pop
call
mov
mov
and
arpl
adc
or
fs
lods
gs
sar
mov
data16
je
and
adc
scas
mov
into
mov
dec
cmc
xor
outsb
mov
into
dec
xor
inc
incl
inc
mov
shrl
sub
sbb
cld
sbb
mov
mov
jp
inc
sub
or
mov
int
ds
mov
mov
or
fisubrl
jo
and
iretw
push
in
xor
jle
sub
andl
cmpsl
dec
adc
jg
sub
inc
adc
add
sbb
mov
lds
movsb
mov
ret
push
xchg
adc
pop
lret
dec
js
cli
in
mov
fstps
sbb
ret
add
sub
fldl
jbe
data16
orl
lock
cmp
push
xor
xchg
jnp
orl
or
shl
iret
push
jnp
inc
sub
mov
push
add
add
fiadds
in
fnstsw
jp
jp
je
inc
out
cmpsb
mov
clc
popf
les
prefetch
bound
pop
stos
lds
dec
pop
pop
mov
test
xchg
fsubrs
inc
adc
cmp
pop
jo
or
outsl
sarb
test
mov
or
adc
mov
pushf
fprem1
ret
push
dec
mov
xor
daa
push
lods
js
arpl
sbb
pop
lahf
arpl
outsb
repz
and
repnz
add
ret
cwtl
dec
push
fildll
add
das
test
lcall
lock
jo
and
sub
jecxz
rcrl
push
add
ljmp
movsb
fwait
adc
hlt
cli
insl
sub
filds
icebp
sbb
fwait
cmp
xchg
push
add
lahf
jmp
outsl
mov
dec
mov
mov
stos
jbe
loopne
or
xor
cmpsb
add
inc
fcos
sbb
xor
pop
inc
sbb
pop
std
sub
pop
mov
sbb
push
decb
inc
xchg
in
push
ss
or
or
fisubrl
push
jmp
add
jo
mov
sarb
lahf
into
dec
into
add
xor
inc
xchg
in
mov
scas
aad
push
jecxz,pt
les
imul
mov
arpl
out
xor
imul
jmp
incb
inc
arpl
inc
xor
sub
loope,pn
push
mov
jnp
fs
loop
idiv
inc
fstpl
push
inc
test
decb
call
nop
daa
push
mov
dec
add
and
xchg
in
fistl
mov
dec
insb
mov
in
pop
adc
push
in
add
decl
jns
andb
cmp
loop
push
add
xchg
xor
add
add
and
pop
aam
and
icebp
mov
mov
out
fstp
dec
xchg
xchg
push
cltd
lods
mov
push
das
mov
jo
in
xor
cmp
mov
in
and
push
movl
aas
sub
or
add
lds
add
mov
hlt
jmp
mov
call
pop
pop
repnz
out
test
lcall
mov
adc
stc
push
add
cmp
daa
cs
push
sub
xchg
daa
ds
pop
lods
sbb
inc
aad
jmp
mov
mov
mov
adc
push
aas
mov
xorl
mov
shr
shrl
test
sub
inc
pop
clc
jbe
or
aam
hlt
add
or
or
sub
xchg
xorb
adc
add
imul
or
jl
popa
and
push
orb
dec
add
aam
pop
jb
sub
push
push
pop
subl
std
mov
push
cmp
add
push
xor
ljmp
dec
movsb
sbb
cwtl
fcmovnb
inc
xchg
mov
pushf
push
and
shlb
fdivrl
mov
stos
sub
mov
cmp
mov
iret
sub
clc
add
push
out
js
pop
dec
sub
xchg
decb
popf
mov
adc
nop
inc
repz
sbb
cmpsb
mov
es
mov
pop
push
mov
mov
push
adc
fidivrl
push
outsb
inc
sub
mov
lods
mov
inc
insl
js
inc
cmp
or
xchg
fildl
mov
rcrl
mov
rcrl
lock
cmp
inc
hlt
pop
sbb
aaa
xchg
add
notl
add
aaa
scas
adc
push
sti
insb
mov
pop
call
or
adcb
inc
bound
pusha
adc
push
jnp
int3
add
pop
or
xchg
add
aam
adc
xor
inc
jno
mov
jmp
add
lahf
jp
icebp
inc
popa
or
push
adc
shrb
pushf
lcall
mov
rorb
jbe
roll
adc
mov
lret
subl
push
push
out
sbb
dec
jmp
push
arpl
ret
xchg
neg
or
ljmp
rorl
dec
jb
ja
push
mov
out
adc
daa
lcall
pop
jbe
fisubrl
pop
clc
add
push
pop
cmp
and
or
aaa
dec
mov
cmp
into
push
jns
sbb
mov
add
sub
fcomp
push
lds
sub
call
push
xor
jg
jne
movsl
sbb
jae
jae
adc
sub
jmp
enter
dec
pop
inc
cltd
lock
dec
stos
pop
pop
js
sar
push
rorb
mov
es
inc
mov
sbbl
inc
cmc
jg
xchg
push
lea
sbb
dec
std
das
adc
cmp
js
mov
fdivr
dec
add
loopne
fcompl
mov
dec
sbb
sbbb
jnp
ljmp
testb
not
aas
movsl
add
inc
xor
lods
mov
pop
in
outsb
lcall
pop
ss
cmp
cmp
xchg
repnz
in
cmp
xchg
stos
mov
add
and
imul
mov
push
dec
std
jns
add
mov
add
xor
jbe
popa
mov
movsl
adc
or
fisttpl
push
and
scas
aad
mov
loopne
add
push
subl
sbb
add
clc
scas
mov
mov
add
loopne
push
pop
lea
push
mov
jl
sbbl
lea
scas
mov
shrl
add
pop
adc
jae
add
stos
popl
mov
lods
sahf
je
adc
orl
pop
rolb
repz
add
add
add
insl
add
sbb
js
dec
in
jmp
adc
aaa
shl
mov
add
aas
jecxz
adc
sbb
pop
in
sahf
mov
push
movsb
dec
cld
or
subl
sub
xchg
notw
stos
lret
or
fisubrs
das
movhps
dec
lret
imul
or
imul
or
imulb
fwait
pusha
ds
std
cmp
stc
sub
daa
pusha
test
ret
and
in
cmp
faddp
decl
mov
in
mov
jbe
ret
inc
adc
mov
push
cld
adc
inc
xchg
mov
adc
enter
sub
fldcw
mov
xchg
icebp
mov
cmc
cltd
jnp
jae
out
xor
xchg
fstpt
outsb
push
ljmp
sub
repnz
pop
xchg
adc
aaa
mov
and
repnz
iret
scas
mov
mov
idivl
and
lret
sub
cmp
jl
push
out
pop
add
pop
leave
push
xor
push
js
dec
xchg
mov
divb
pop
add
add
bound
stos
mov
dec
fcompl
icebp
loop
pop
notb
push
xor
xor
push
int
cmc
rol
cltd
les
mov
sub
adc
loope
pop
jg,pn
test
sbb
cmpsb
cwtl
jb
les
jno
sub
xchg
arpl
sub
filds
sub
pop
fiadds
cmp
insl
aad
aaa
sbb
clc
fistl
sarb
xor
arpl
outsl
xor
add
xchg
mov
sbb
data16
xchg
in
inc
test
mov
mov
jbe
add
pushaw
or
jo
pop
add
test
clc
add
sahf
mov
mov
leave
add
imul
in
loope
arpl
mov
push
mov
sub
aas
xchg
aas
mov
int3
mov
rol
dec
push
addr16
push
es
or
rorb
mov
mov
jo
loop
push
aas
pop
and
xor
es
sbb
mov
arpl
push
loope
mov
sbb
inc
sub
push
jo
mov
sbb
test
test
insl
mov
repnz
lahf
add
pusha
and
or
mov
jle,pt
push
xor
push
mov
mov
aaa
ljmp
xchg
cmp
es
pop
sbb
insl
test
cmp
adc
mov
inc
mov
add
popa
sti
ljmp
test
lret
add
mov
mov
loopne
inc
lea
lods
push
mov
sti
js
mov
in
mov
xor
sub
aaa
cmp
cmp
push
pop
mov
mov
sub
adc
in
outsl
test
adc
mov
stos
stc
insb
scas
lcall
movsl
or
add
rolb
call
cmp
mov
dec
or
out
fidivrs
pop
pop
push
cmp
cmc
dec
fwait
out
dec
fisubrl
mov
sub
sbb
xor
cmpsb
movsb
and
pushf
xchg
hlt
popf
pop
jnp
rcrb
dec
ljmp
mov
or
ja
dec
lret
movsl
cltd
sub
jg
into
hlt
aaa
sub
lock
xchg
cmp
jg
mov
call
push
adc
test
mov
das
std
push
int3
test
clc
sub
xlat
xchg
fistl
dec
in
or
adc
popa
and
neg
shlb
dec
in
lods
jnp
data16
out
mov
fsubrs
or
xor
imull
adc
sbb
test
lret
cs
push
addb
adc
xchg
pop
pop
inc
sti
or
and
je
adc
dec
dec
rol
lea
xlat
add
adc
hlt
xor
cmp
cmp
and
pusha
jge
sbb
pop
add
inc
les
add
adc
xchg
jmp
dec
fdivrl
testb
imul
push
add
out
add
mov
inc
xchg
call
jge
cld
pusha
adc
int
dec
es
dec
inc
iret
sbb
add
mov
mov
aad
adc
mov
mov
mov
inc
pop
cltd
out
adc
popf
cmp
adc
mov
int3
lret
cmpsb
jp
lea
add
or
lds
adcb
jno
sub
push
cltd
ljmp
test
mov
add
dec
add
je
cmp
cwtl
sbb
outsb
daa
mov
in
cmp
dec
inc
lock
push
shll
cwtl
inc
pop
mov
or
push
icebp
es
aad
and
mov
aam
aam
lcall
inc
xor
or
push
pop
inc
mov
push
rorl
sbb
push
das
cmc
add
mov
dec
add
or
pop
test
push
aad
mov
or
and
mov
outsb
imul
mov
pop
sarl
lock
inc
lock
and
ja
cmpl
inc
nop
push
xchg
and
pop
shrb
stos
fs
push
add
push
pop
inc
mov
sub
cld
xchg
sub
ror
jge
pop
sbb
loope
ret
dec
cmc
add
add
dec
or
mov
pushf
add
cli
andl
dec
add
fidivrl
lds
insl
jecxz
add
sbb
inc
lret
dec
loopne
jl
cmp
inc
sbb
sub
jge
rcrb
addb
add
inc
or
mov
push
pusha
cmp
mov
dec
fidivl
test
cmp
jo
fiaddl
or
dec
add
loope
jp
inc
pop
std
lods
mov
cmp
rolb
xor
sti
shlb
jge
aad
ret
xor
jo
sahf
pop
jp
adc
add
je
inc
mov
sbb
gs
sahf
and
test
cltd
outsl
jle
cmp
mov
in
mov
data16
arpl
cmc
cmpsb
sbb
fs
jge
cmp
add
push
or
push
sub
mov
sbb
mov
dec
add
imul
hlt
sub
cmp
and
movsb
fmull
jb
shrl
roll
addb
sbb
push
pop
adc
movsb
jne
xor
pusha
inc
cwtl
push
dec
add
sub
sbb
mov
cwtl
lcall
mov
fadd
clc
frstor
in
cmp
loopne
mov
or
sbb
repz
add
paddsb
ja
andb
lods
fwait
hlt
adc
jge
jmp
mov
adc
pop
rorb
ljmp
sub
sbbb
dec
popf
add
loopne
clc
inc
mov
cmpsl
fldenv
push
je
or
in
aad
ret
testl
hlt
fsubl
inc
outsb
sub
mov
jb
push
movl
mov
das
xlat
loopne
dec
sub
loope
test
inc
and
loop
sub
or
fdivl
jecxz
mov
fistps
dec
inc
push
clc
fcmove
adc
pushf
repz
pop
loopne
imulb
xlat
or
mov
shlb
adc
mov
clc
and
mov
lock
sbbb
jbe
or
adc
out
mov
je
lds
mov
push
pop
imul
insb
add
ret
scas
cmpl
mov
inc
sub
and
fdiv
adc
pop
cmp
mov
push
mov
outsl
lock
adc
cs
and
popa
sbb
push
lahf
stos
cmp
mov
add
and
xchg
jne
not
add
mov
call
inc
dec
cmc
pop
dec
dec
lock
push
mov
jae
push
loopne
and
sbb
ss
js
ljmp
add
dec
addb
cwtl
and
aam
lock
gs
or
dec
scas
add
inc
xor
pop
data16
out
xor
jmp
xchg
subl
andl
sub
inc
movsb
fs
push
and
outsl
cli
incb
repnz
es
push
xor
cmp
pusha
add
dec
or
leave
adcl
out
dec
pop
xchg
push
mov
out
pusha
imul
mov
sub
lock
out
mov
add
cmp
addb
loopne
inc
mov
bound
cmp
popa
lock
lea
or
dec
js
ret
add
cmp
add
or
not
add
and
and
outsl
sub
fsubs
xchg
jb
inc
push
adc
pop
inc
mov
nop
test
xlat
inc
xor
fcompl
inc
pop
pop
pop
ret
and
add
push
shlb
fsub
and
sbb
cli
inc
jo
add
andb
test
das
js
push
cwtl
fwait
ret
pushf
jae
enter
and
fldenv
and
add
cld
push
lock
repz
push
add
and
inc
shlb
nop
jp
shlb
add
or
or
loopne
outsl
cld
scas
pop
pop
rolb
jp
jmp
loopne
cmp
movsl
xchg
int
vdivps
ljmp
jb
test
mov
and
add
or
mov
sarb
stos
dec
mov
cmp
iret
mov
jg
adc
les
and
daa
shl
add
mov
sub
cwtl
and
xchg
mov
add
pusha
inc
sub
xchg
xchg
ds
and
incl
mov
add
push
and
orb
lcall
jmp
hlt
push
lds
fistpll
or
lahf
jp
and
xchg
jp
push
jl
sub
fstps
stos
outsl
add
fdivr
add
push
and
add
cmp
std
pop
mov
dec
fstps
outsl
mov
xchg
add
sbbb
lcall
mov
cltd
ja
pop
add
mov
pop
pop
pop
xchg
lahf
jbe
out
push
jmp
out
jbe
mov
mov
icebp
xor
pop
jecxz
mov
inc
or
fsubl
call
int
xchg
mov
fimuls
jl
inc
or
enter
mov
rorl
mov
sti
out
adc
in
hlt
outsb
jnp
ret
xchg
push
jns
jl
or
call
cs
sbbl
cli
es
jle,pt
mov
jo
mov
sahf
sti
jl
or
fdivrl
loope
movsl
fdivl
sub
das
fwait
add
add
jle
fldl
mov
jle
cltd
jne
push
pop
cltd
add
pushl
int3
into
jbe
repz
sbb
jne
test
addb
inc
out
cmp
in
adc
lcall
insb
stos
inc
and
lcall
and
fbstp
add
jae
mov
push
push
adc
pusha
arpl
addl
imul
nop
add
push
jg
sarb
xor
jb
pop
dec
adc
mov
js
mov
push
arpl
xchg
adc
inc
std
sti
xchg
call
cmc
and
fidivl
out
sbb
push
adc
movsb
ret
ret
inc
mov
gs
das
dec
fists
lods
fildll
subb
mov
stos
daa
sbb
mov
xchg
test
xor
or
jg
loope
adc
inc
xor
add
push
lods
je
jg
das
adc
cld
pop
cs
int3
or
add
cmp
jg
push
fwait
jecxz
ss
adc
repz
adc
sub
mov
and
inc
adc
and
sub
fwait
hlt
arpl
mov
daa
ret
pop
lock
sbb
test
sbb
pop
aas
cli
fucomip
add
imul
rol
bound
pop
sti
adc
adc
cmpsl
add
cli
aam
pop
clc
das
pop
sub
mov
fs
mov
mov
adc
sub
nop
jbe
cmp
rorb
fists
lods
test
in
sub
scas
mov
push
push
pop
fildll
add
or
add
add
mov
xchg
lcall
mov
call
jmp
and
mov
or
dec
adc
adc
sar
xchg
and
jecxz
js
addr16
inc
fnstsw
xchg
fisttpll
aas
or
int3
inc
pop
add
xchg
loope
pop
fidivl
push
or
xchg
fs
sub
mov
pop
cs
and
jno
cmp
fists
pop
jb
pop
cld
and
xor
iret
cmp
ret
nop
mov
xor
test
or
js
pusha
xor
add
sub
fsts
lea
dec
cli
insb
xchg
pop
push
mov
xor
out
pop
inc
stos
mov
jg
sbb
push
xchg
cmp
pop
lea
repnz
pop
xor
in
push
stc
lods
repnz
xchg
xchg
test
jnp
cmp
jg
and
cli
mov
lods
out
sub
test
test
es
les
mov
mov
loop
mov
xor
jp
mov
test
mov
scas
and
jge
sbb
and
orl
subb
pop
jg
xlat
insl
fstl
aas
cmpsl
mov
js
fwait
jbe
in
sub
pop
xor
lods
mov
mov
or
jae
int3
movsl
mov
or
dec
call
jg
xchg
cmp
pop
lea
icebp
mov
mov
xchg
mov
pop
ljmp
add
inc
lock
add
cli
jge
mov
add
xchg
mov
jmp
mov
xchg
mov
std
jg
xchg
scas
push
jecxz
mov
aaa
jno
add
ljmp
sbb
mov
outsl
stos
and
pop
mov
je
loop
add
outsb
add
push
jecxz
cld
data16
in
jg
mov
jg
arpl
roll
sbb
xchg
lcall
insb
mov
inc
pop
lock
into
adc
outsb
rclb
popa
pop
jns
int
fdivrl
call
pop
pop
jns
call
test
mov
in
jl
dec
add
mov
movsl
jnp
adc
push
idivl
ror
out
call
imul
jae
cmpsl
pusha
sti
sbb
test
cmpsl
repnz
nop
cs
ficoms
lock
mov
pop
js
cmp
scas
loope
lahf
fistpll
mov
pop
ret
stos
lock
mov
cmp
mov
xor
mov
jno
sbb
xchg
jp
stc
ljmp
sub
pop
dec
mov
das
sub
pushf
cld
pop
cld
repz
repnz
adc
add
or
mov
out
scas
or
jecxz
push
sub
cmp
jl
pop
add
insl
mov
sbb
mov
out
mov
decl
pop
cmpl
xor
xchg
xchg
shlb
icebp
dec
out
test
outsl
xchg
mov
mov
aaa
adcl
sub
push
or
add
andl
movsl
inc
icebp
outsl
add
jmp
mov
adc
or
xchg
push
cwtl
push
pushf
cmc
lods
jmp
jb
in
jnp
popl
push
fnstsw
adc
sbbl
cs
mov
nop
inc
or
sar
ss
add
sbb
push
ret
adc
pop
js
pushf
jge
fimuls
push
mov
add
sbb
into
jne
inc
and
out
shll
mov
mov
movsb
mov
mov
sub
loop
test
adc
sub
rorb
gs
pop
das
es
inc
or
mov
ljmp
sub
pop
add
xor
dec
inc
das
movsb
adc
loope
call
je
cltd
pop
test
ret
test
mov
adc
jo
mov
shl
dec
push
mov
fadd
rcrl
ret
shlb
setno
bound
lods
std
push
sub
jl
cmpsl
or
mov
std
sbb
or
cmp
xor
mov
fistpll
xorb
decb
and
jl
icebp
das
jle
and
repnz
daa
sbb
pop
xchg
insl
insb
jge
lock
cmpb
xchg
dec
push
sub
push
push
call
stos
nop
mov
push
inc
mov
dec
lcall
insl
shlb
xchg
push
mov
popf
or
dec
je
out
ret
adc
daa
xchg
orl
movsl
leave
pop
sti
pop
lret
add
xchg
mov
cld
fldl
loopne
stos
sahf
out
mov
xor
mov
fiadds
sbb
stos
xchg
jg
mov
dec
fbld
adc
inc
jecxz
lahf
sbb
sub
test
dec
out
incb
es
or
pushl
cmp
xchg
pusha
add
nop
mov
xlat
xor
mov
fisttpl
sarl
xchg
push
pop
data16
xchg
push
outsb
shr
addr16
push
mov
xchg
lcall
pop
xor
push
gs
pop
shrl
mov
jl
inc
add
inc
fdivl
fsubs
bnd
push
mov
sbb
test
jmp
push
hlt
ret
xor
inc
mov
sbb
mov
hlt
sbb
rclb
aaa
cmp
or
cmpsb
lods
test
fldenv
in
cmp
cmp
cmp
rol
mov
and
shlb
pusha
sub
cmpsl
and
jae
outsb
mov
adc
and
cmpl
adc
outsb
shll
cmpsl
dec
jmp
or
fwait
ret
adc
call
pop
xchg
pop
int3
lods
or
mov
or
mov
xor
stc
outsl
or
pop
out
xchg
aad
pop
mov
lods
jmp
cs
xchg
mov
and
sbb
adc
fnstsw
mov
arpl
mov
mov
mov
jo
mov
out
clc
push
lret
iret
xor
pop
push
cld
mov
jp
pushf
adc
sbb
insl
push
xchg
pop
idiv
pop
jle
jp
mov
dec
xchg
das
or
mov
sub
ret
sub
jg
sbb
pop
jo
addl
mov
xor
dec
mov
inc
mov
out
icebp
out
mov
mov
mov
sbb
outsb
lret
hlt
scas
add
cmp
ret
cmp
sub
and
cmp
imul
sub
lock
adc
pusha
pop
icebp
and
inc
scas
inc
loope
icebp
aas
push
mov
stc
hlt
mov
popa
or
xor
nop
repnz
movsl
outsl
push
mov
jnp
mov
push
test
mov
cmp
mov
xchg
test
mov
scas
aam
adc
in
ds
inc
popa
test
cli
inc
jl
das
jne
and
sbb
outsl
mov
shl
lret
sarl
lcall
sti
aaa
xor
shl
sub
sahf
and
adcb
popa
rorw
icebp
rcll
daa
hlt
rolb
cltd
aaa
and
test
mov
cmp
pop
lret
or
xchg
jg
insb
imul
data16
xchg
push
adc
sub
out
fsubrl
adc
add
inc
test
adc
sti
adc
mov
pushf
push
and
ret
mov
sub
pop
pop
fidivrl
lds
inc
xor
sub
push
dec
xor
in
add
and
das
rcrl
ds
les
pcmpeqb
ret
dec
jns
mov
leave
lods
xchg
cld
mov
adc
jbe
push
aad
bnd
int
adc
xor
sub
aas
push
sbb
aas
adc
xchg
hlt
andl
xbegin
lds
sbb
mov
or
mov
inc
or
out
int3
nop
aas
scas
iret
lods
jg
outsl
gs
int3
push
dec
data16
jl
mov
orb
or
imul
pop
cli
push
push
inc
addb
imul
dec
add
decl
addl
ret
push
add
cwtl
add
add
icebp
dec
loopew
lret
inc
add
inc
adc
sti
mov
lock
decl
jle
cmp
aad
mov
fistl
ret
es
mov
clc
pop
and
mov
mov
test
xor
jne
loopne
addb
fimuls
sahf
pop
dec
ljmp
cli
dec
jge
call
lock
jnp
inc
repnz
fwait
xchg
mov
sar
clc
movsl
roll
pop
and
lret
adc
push
push
pop
mov
push
inc
fmuls
aas
fcompl
aad
out
cmp
pop
popa
aas
lods
stc
jecxz
fdivr
stos
xor
scas
inc
pop
mov
je
les
arpl
out
repnz
push
jp
push
mov
ret
fisttpl
lcall
data16
popa
xchg
jmp
or
add
es
test
pop
jecxz
ljmp
int3
ljmp
int3
or
popf
std
out
lcall
pop
and
lods
xchg
test
sbb
add
fdivl
xor
pop
shlb
inc
add
jmp
or
rcrb
cld
testb
movsl
pop
mov
fiaddl
daa
adc
push
test
loopne
sub
sub
out
or
fbstp
add
pop
cltd
outsl
shrb
fisttpl
std
mov
jmp
mov
inc
push
je
and
mov
popf
pushf
add
push
jnp
sahf
xor
cld
loopne
pop
fcomip
lds
cmp
std
sbb
mov
out
hlt
cld
adc
mov
icebp
ret
cmp
xchg
mov
and
call
subb
inc
pop
mov
sbb
cli
in
jo
sbb
in
js
push
mov
push
sbb
dec
cmpl
lock
or
add
dec
les
ss
lods
test
out
adc
rcll
cmp
mov
fcomp
sub
mov
dec
cmp
cmp
adc
shrl
adc
mov
jb
aam
xlat
dec
clc
mov
add
pop
or
mov
loop
in
syscall
xchg
ja
loope
xchg
fmul
pop
shrl
leave
fildll
mov
iret
jno
mov
jg
das
or
mov
shll
dec
bts
les
hlt
push
push
nop
fdivrs
xchg
jmp
aam
out
aaa
ficomps
adc
or
xchg
dec
and
fcoms
loope
mov
fistps
sub
pop
sti
adc
inc
and
stos
mov
lcall
mov
push
in
movsl
jmp
stos
iret
mov
insb
jbe
sub
mov
inc
cmp
ret
std
es
iret
add
imul
inc
mov
pop
je
lods
ss
mov
cmp
inc
into
and
inc
test
and
mov
lods
jmp
add
push
cmpsl
cmp
push
out
aad
int3
dec
push
mov
mov
xchg
aaa
jne
mov
stc
cmc
insl
xchg
fisubl
inc
push
push
mov
sahf
xchg
imul
loopne
pop
sbb
fsub
adc
xchg
iret
mov
clc
int3
popa
insl
je
mov
decl
adc
xchg
xorl
sbb
push
mov
add
inc
nop
adc
gs
add
sub
les
pop
outsl
out
dec
xchg
push
iret
mov
mov
xchg
mov
inc
js
mov
jg
sbb
jno
and
sahf
mov
or
mov
jnp
iret
aam
and
or
cwtl
incl
or
aad
cmp
rol
incl
push
dec
ret
xchg
mov
sbb
fcomip
lods
adc
call
and
pop
cli
test
and
insl
jecxz
pop
push
aam
pop
cmpl
into
jg
fistpl
outsl
cmp
int
adc
fiadds
stos
lods
les
jl
ffreep
aas
xchg
mov
dec
mov
adc
lock
pop
rorb
das
in
int
and
push
pushaw
mov
loopne
fdivrp
inc
or
mov
int3
or
nop
push
sub
pop
sbb
bound
and
mov
push
frstor
xchg
into
popf
inc
mov
jo
jo
scas
test
rorb
scas
lret
in
shlb
xor
push
movsl
incb
lcall
cmp
pop
nop
lret
lock
out
pop
or
fnsave
dec
aad
clc
insl
pop
jmp
mov
push
test
or
add
or
add
mov
lods
adc
push
jnp
mov
decl
int3
addb
je
pop
sub
pop
popf
mov
jmp
sti
pop
lods
es
ret
mov
filds
xlat
outsb
sbb
push
outsb
add
clc
mov
jge
mov
xchg
leave
or
add
dec
lcall
icebp
fwait
inc
loope
pusha
xchg
inc
adc
js
mov
loop
stos
not
stos
lret
xchg
fs
mov
mov
jne
dec
aas
es
or
fdivr
sti
cmpsb
xorb
or
dec
cmp
push
and
ffreep
mov
and
testb
dec
mov
add
mov
test
sbb
aaa
std
xchg
sub
js
pop
insb
pop
outsl
pop
cli
ja
mov
lods
mov
insl
lods
popf
imul
rcll
sbb
cmp
push
add
outsl
jl
imul
xchg
push
ss
sti
popa
adcl
mov
adc
mov
clc
jg
outsl
cmc
dec
fs
ror
add
push
dec
aad
js
shl
and
fidivs
mov
mov
push
cmp
dec
int
in
push
sbb
test
jg
out
ljmp
movswl
push
aaa
cs
scas
mov
ret
loopne
movsl
push
clc
arpl
inc
sarb
add
dec
xchg
inc
outsl
lods
sarb
out
icebp
aas
push
incl
cmp
pop
aas
add
xchg
in
mov
loop
pop
sub
pop
call
xchg
icebp
xor
jmp
addb
sub
ds
and
lcall
mov
inc
and
mov
ljmp
inc
mov
mov
lea
fbstp
mul
adc
in
mov
dec
repnz
cmp
jle
sbb
pop
das
add
xchg
jne
subb
cmp
mov
pop
dec
mov
push
mov
out
lahf
dec
jnp
sub
xchg
movsl
pop
es
mov
mov
sbb
in
xchg
pushl
jl
or
cli
pop
mov
sbb
in
gs
xchg
lock
push
fwait
lock
jae
sub
stos
stos
jle
das
enter
fs
push
outsl
pop
call
sbb
pusha
pop
arpl
and
pusha
arpl
sbb
mov
add
stos
mov
jge
dec
enter
jmp
adc
or
ja
pop
rol
rcrb
les
icebp
out
push
mov
vcmpss
mov
mov
mov
push
out
xchg
aad
xor
out
repz
mov
cmpsl
mov
push
repnz
dec
and
inc
mov
add
adc
and
lahf
mov
fstl
mov
cmpsb
xchg
out
pop
xor
pusha
fmull
cmp
sub
xchg
and
sbb
pop
jmp
sbb
push
or
inc
mov
test
and
in
adc
inc
cwtl
imul
pushf
daa
xchg
adc
dec
jecxz
insl
aaa
fimull
jmp
adc
into
ret
or
lret
mov
cld
add
popf
dec
xchg
inc
sbb
jmp
stos
inc
je
ja
daa
or
cs
mov
dec
ficompl
add
or
and
add
sub
xor
lock
and
enter
es
das
movsl
scas
mov
fisubrl
mov
repz
inc
jl
inc
jmp
add
lock
aad
aad
sub
adc
push
lahf
push
dec
lods
xor
mov
cld
shrl
out
push
popf
add
mov
or
hlt
cmpsb
ljmp
js
mov
and
adc
or
enter
pop
mov
mov
mov
dec
sbb
sbb
notl
xor
jo
addr16
cmp
lods
mov
rcrb
ljmp
sti
pop
movsl
loopne
and
fiadds
ja
movsl
lcall
dec
cmp
fldenv
lcall
pop
push
jns
shr
or
adc
pusha
add
sti
sbb
enter
stos
rcll
xor
sbb
das
xchg
test
inc
xchg
movsl
xchg
stos
imul
int3
stc
jae
push
js
fwait
loopne
ljmp
outsl
add
lock
push
cld
test
xchg
mov
loopne
test
ret
and
lods
aam
or
and
sbb
repnz
nop
mov
clc
fiadds
movsl
xor
int3
incl
ret
add
int3
in
sarl
lret
add
adc
leave
out
aad
sub
scas
or
inc
ja
xor
push
dec
xor
or
adc
icebp
mov
aam
push
aad
ljmp
shlb
add
push
add
pop
enter
cwtl
push
jns
jecxz
stos
loopne
cli
sbb
fwait
imul
into
daa
and
loop
push
fcoml
add
int
add
xor
dec
xchg
pop
call
sub
dec
aam
mov
mov
adc
mov
xchg
out
fs
sbb
push
mov
dec
stos
cld
mov
mov
inc
inc
popf
lcall
add
rcrl
ror
adc
and
sub
mov
sbb
add
push
sbb
and
fbld
test
dec
mov
inc
xchg
adc
les
lret
popf
push
shrl
inc
call
stos
hlt
lcall
jbe
dec
and
mov
xor
flds
adc
mov
pop
int3
or
syscall
mov
and
cli
imul
mov
push
adc
or
fisubs
mov
bound
lock
dec
lock
jg
inc
rcll
and
shll
shll
es
push
outsb
or
notb
and
stos
push
sub
fdivrl
jmp
int3
mov
mov
orl
aas
loopne
cmp
sub
repnz
cmp
addr16
jecxz
dec
mov
add
iret
inc
loopne
mov
fucomip
shlb
fwait
repz
gs
mov
adc
imul
jl
or
jl
inc
jmp
cmpsl
sub
cmpsb
dec
mov
xchg
lcall
add
jmp
xor
cmp
in
rorl
rol
jbe
jmp
push
pop
mov
sub
outsl
test
jg
pop
ficoms
clc
xchg
jne
xor
das
and
notl
pop
pusha
xorl
test
xchg
and
xor
jmp
mov
addr16
cwtl
push
inc
pop
cmc
popl
cmp
nop
jp
and
cld
mov
js
cld
sbb
stos
std
sbb
lahf
mov
inc
inc
mov
lahf
and
in
es
std
adc
sbb
ja
mov
je
inc
sahf
xchg
sub
aam
cmp
push
mov
sbb
inc
rcl
das
ss
xchg
jle
mov
mov
shll
inc
rclb
push
push
lods
roll
jg
and
enter
testb
cs
and
sbb
ljmp
or
sbb
clc
xchg
lahf
mov
inc
stos
dec
fistpll
jg
int3
adcl
or
xor
mov
incb
or
push
mov
aaa
add
jg
lods
cmp
lret
sub
or
mov
out
clc
in
fisttpll
ja
xchg
in
add
hlt
sub
adc
jno
mov
xchg
mov
movsl
incb
jnp
test
fnstsw
fwait
cld
adc
xor
mov
inc
mov
xchg
mov
and
andl
or
ret
adc
jo
cmp
fsubrp
fbld
mov
or
sti
and
xor
loop
nop
add
mov
vmread
and
jp
cwtl
adc
jecxz
mov
dec
insb
push
ret
stos
je
add
push
xchg
cmpb
iret
loopne
adcl
in
and
mov
clc
stos
fldt
and
inc
dec
push
lret
lcall
pusha
mov
iret
add
lock
xchg
and
test
sub
adc
mov
repnz
pop
inc
xchg
dec
imul
stc
push
rorb
inc
jno
inc
dec
mov
addb
fcomps
mov
and
scas
adc
iret
push
fwait
push
lock
sbb
jge
sti
or
xor
xor
inc
xor
gs
and
loopne
cmp
pop
inc
pop
xor
pop
push
mov
jbe
mov
mov
jno
and
in
mov
std
adc
scas
lea
push
ret
loopne
sub
add
test
add
push
popa
int3
jne
stos
or
pop
addr16
andb
ds
loopne
clc
inc
dec
cmp
insl
pushf
push
mov
fimuls
or
xor
sub
faddl
fbstp
mov
les
lods
jno
mov
cmpsb
test
push
mov
lret
mov
ret
add
xor
jle
add
imul
push
hlt
and
mov
jne
push
sub
call
push
dec
add
lock
jno
add
jmp
test
jne
mov
xor
adc
add
inc
add
sub
movl
fsts
lahf
jnp
clc
jmp
sub
ret
adc
xchg
insl
fwait
int3
loopne
int3
pop
rorl
pop
or
mov
pop
sarb
inc
in
rcll
fcompp
repnz
adcb
rclb
subb
mov
imulb
sbb
adc
mov
inc
sbb
push
xor
xor
sbb
mov
or
into
inc
cltd
ss
add
lahf
sbb
ss
andl
ds
cli
inc
rcrl
stos
popf
imul
mov
mov
and
out
jecxz
cmp
ss
inc
xchg
fists
or
and
icebp
sahf
mov
mov
and
aaa
push
lcall
and
dec
clc
test
push
aas
js
add
xchg
mov
jl
sbb
pop
mov
cmpsb
dec
mov
mov
push
fbstp
jo
sub
sub
sub
loop
hlt
shll
dec
dec
jns
and
sub
lock
sub
cmp
repz
mov
insl
or
aam
push
in
mov
insb
inc
xor
test
push
push
xor
jl
jae
decb
inc
in
hlt
icebp
jle
pop
xor
xchg
in
xor
repz
jecxz
pop
int3
inc
sbb
inc
dec
sub
xchg
sbb
and
pop
mov
xchg
clc
test
sarb
rol
sbb
mov
out
add
fildll
cmpsb
jmp
repnz
stos
lret
or
scas
in
inc
aas
inc
dec
push
shrl
fldenv
cmp
inc
mov
mov
inc
cmp
pop
add
mov
inc
rcrb
repz
xchg
xor
cmp
mov
inc
xchg
sub
and
out
mov
sahf
lahf
loopne
push
icebp
pop
sub
std
jmp
sbb
sbb
mov
xor
loopne
or
cmpsl
push
aam
int
inc
dec
loopne
aad
and
mov
mov
scas
fists
fstl
imul
inc
inc
push
mov
fcmovu
movsb
sub
rcr
mov
scas
adc
movb
inc
and
loop
inc
xor
std
outsl
or
push
nop
sub
jmp
call
push
loop
stc
xor
outsb
cmc
movsb
loope
pop
pop
rcrb
xchg
mov
cld
fwait
add
ret
ret
add
and
std
ffreep
push
scas
inc
add
push
lret
jbe
or
das
les
xlat
xchg
addr16
mov
repnz
loopne
adc
in
sbb
push
loop
ljmp
jmp
sahf
inc
xchg
fsubrl
sar
pop
jl
ss
stos
or
adc
gs
add
jne
sbb
push
inc
add
adc
jg
sub
mov
rorb
dec
add
mov
shl
std
adc
pop
sidtl
movsb
jecxz
roll
stos
mov
xchg
adc
or
shll
xchg
aam
pop
or
inc
inc
add
cwtl
push
mov
ret
and
in
aaa
clc
pop
and
mov
int3
stos
xchg
and
pop
mov
filds
inc
mov
dec
xchg
mov
scas
cwtl
and
pop
out
mov
pop
xchg
or
outsl
adc
add
leave
mov
stc
mov
or
dec
stos
aad
push
stos
mov
push
enter
inc
and
rolb
stc
mov
mov
aaa
fiadds
inc
xor
push
xor
inc
add
lret
insl
sti
repz
mov
mov
mov
lcall
pusha
mov
ror
sbb
test
out
push
icebp
and
jbe
enter
test
pusha
aad
cmpsb
mov
xchg
cmp
push
orl
mov
mov
mov
or
cmp
inc
dec
jge
jmp
pop
xchg
jae
subb
inc
or
inc
mov
lds
jne
aam
xor
adc
es
push
pushf
stos
lret
std
push
xchg
jl
pop
nop
or
xchg
lret
dec
test
push
cs
xor
pusha
adc
das
jge
test
aas
push
test
mov
jmp
pop
jbe
and
sub
pop
std
sbb
and
sbb
jns
add
jle
clc
inc
out
jbe
xchg
pop
jg
pop
cmp
subb
adc
cmpsl
push
pop
inc
mov
inc
pop
flds
push
clc
pop
adc
cmc
stos
mov
lea
and
out
hlt
jp
xchg
push
jo
ljmp
jne
jg
and
pop
outsl
fwait
mov
mov
repz
mov
stc
mov
dec
cmpsb
je
repz
add
mov
lea
sub
outsl
pop
int
cli
pop
je
ja
bound
addr16
popf
jmp
adc
inc
push
ds
test
call
into
cli
fdivrl
out
xchg
sbb
push
mov
mov
cld
jo
out
loop
sti
outsl
mov
mov
mov
les
mov
adc
int
and
or
ds
push
sub
rorb
js
popa
in
out
enter
cmp
mov
repnz
dec
push
sbb
and
es
and
or
adcl
out
fimuls
ret
push
ja
jae
ret
inc
arpl
fiaddl
lret
mov
inc
mov
call
incl
and
push
sarb
imul
leave
or
je
jb
sub
sbb
in
insb
or
or
push
les
dec
inc
lret
or
inc
and
mov
stos
or
shlb
mov
mov
in
xchg
jl
pop
xlat
pop
xchg
jmp
mov
call
add
movsl
jno
dec
adc
ljmp
mov
add
and
test
insl
push
cmp
push
lock
jnp
mov
pop
fsub
int
adc
sbb
and
sbb
add
mulb
adc
es
jp
jnp
ret
dec
int3
enter
scas
mov
shl
lahf
inc
dec
std
mov
test
add
sbb
aas
test
cmc
adc
pushf
and
xchg
push
aaa
jnp
inc
nop
sub
cmp
pop
and
jo
loope
stos
mov
clc
push
xor
les
xor
push
popa
js
and
in
add
xchg
cmp
mov
out
jecxz
sub
pop
test
add
adc
cmp
push
roll
push
lds
jno
je
ret
les
add
mov
aaa
jnp
pop
pop
add
lret
loopne
std
add
mov
or
out
xor
adc
and
in
lock
lods
or
sbbb
js
sahf
and
test
fcmovb
mov
out
pop
push
mov
sub
and
and
sub
loopne
int3
cmp
scas
dec
movl
hlt
add
mov
shl
pop
call
push
aaa
add
dec
adc
sub
inc
inc
adc
mov
gs
mov
sbb
cli
adc
add
sub
ret
cmp
mov
cld
out
shlb
add
into
adc
add
inc
xchg
pop
push
sbb
and
mov
add
jmp
pop
loopne
imul
popf
je
and
or
push
cmp
pop
sbb
jbe
in
or
and
sbb
mov
aas
call
xor
jae
dec
xor
cmp
adc
xor
and
mov
lcall
mov
call
movsl
sub
les
orb
cwtl
add
xorb
aas
clc
push
sar
insl
cs
loop
inc
cmp
push
add
mov
inc
xor
cmp
cli
in
loope
andb
mov
jecxz
mov
aam
inc
imulb
and
rclb
aam
pop
imul
orb
mov
ret
mulb
jne
mov
insb
fistpll
push
dec
daa
lahf
or
adc
mov
pop
dec
or
xchg
xor
sub
mov
outsb
popa
jne
dec
dec
pop
clc
out
testl
paddd
add
add
xor
dec
adc
inc
outsl
outsb
loope
fcmovnu
add
mov
inc
inc
jg
push
pop
xchg
cmp
xchg
pop
and
inc
loop
and
sahf
lcall
call
mov
loope
mov
rorb
or
push
mov
shlb
test
xor
inc
mov
push
cmpb
and
mov
pushf
sbb
or
addr16
add
test
neg
jae
js
or
xor
sub
andb
adc
push
js
push
les
add
xor
dec
lods
pop
push
in
sbb
push
popf
adc
adc
mov
add
or
inc
mov
dec
and
loopne
inc
ret
ret
sbb
out
adcb
jnp
or
pop
stc
push
imul
xor
ret
or
and
shr
push
movsb
pusha
ror
arpl
sti
lret
xor
loope
mov
out
in
sbb
push
xor
xchg
lcall
xor
xor
push
dec
sbb
mov
inc
xor
xor
roll
push
adc
ds
sub
xor
sbb
xor
hlt
int
cld
aas
sub
bound
fsub
adc
mov
pop
mov
rcrl
scas
xchg
faddl
insb
out
scas
add
xor
sahf
mov
lcall
sub
mov
xorb
mov
jge
and
cmp
and
or
andl
shlb
inc
dec
jl
aam
sub
decl
js
pop
mov
jge
xor
inc
xor
loopne
mov
xor
out
fdivr
das
gs
mov
shl
jg
push
aas
enter
mov
cmp
in
or
or
or
data16
add
mov
dec
xor
inc
xchg
inc
adc
mov
adc
adcb
insb
test
aam
aam
xor
ret
jge
dec
rclb
mov
and
adc
adc
xor
inc
cmp
aaa
mov
sbb
xchg
adc
nop
jae
aaa
insl
out
movsl
test
into
push
xor
mov
ret
jae
inc
ret
filds
cmpsl
mov
inc
test
jnp
jnp
out
adc
xchg
mov
es
arpl
mov
and
test
and
lcall
scas
add
xor
jne
xchg
pop
mov
dec
xor
push
mov
cmp
push
lret
and
push
ret
shrb
daa
and
ljmp
sbb
sub
enter
push
insb
add
subb
addb
loope
inc
nop
and
adc
mov
xor
lock
xor
in
pop
inc
cmp
sub
lods
lds
pop
add
mov
and
sahf
inc
adc
jp
loope
jne
xchg
das
stc
sbb
adc
add
incb
aam
ja
notb
shrb
inc
xchg
cld
in
jg
ret
repnz
inc
push
add
and
add
push
mov
add
push
pop
stc
jnp
jmp
dec
mov
push
cltd
or
or
cmp
jo
sbb
jmp
inc
incl
inc
push
ds
jne
dec
gs
aad
jecxz
xchg
add
adc
popa
or
cmp
add
mov
jl
pop
jbe
icebp
adc
pop
stos
call
jg
movsb
add
pop
jecxz
mov
int3
into
sbb
ljmp
pop
push
inc
imul
test
test
jle
xchg
xchg
adc
das
les
in
add
outsl
mov
mov
xor
add
add
mov
sub
jno
xchg
jle
add
or
and
inc
and
mov
mov
pop
and
cmp
jmp
lods
add
add
push
inc
mov
sub
mov
inc
pop
or
mov
cmc
fistpll
jnp
pop
dec
stos
xchg
jno
mov
pusha
jp
mov
cmpsl
out
sbb
xchg
xlat
aam
lcall
jb
aaa
add
xor
xchg
xchg
pop
mov
fbld
mov
dec
xchg
inc
in
add
or
pop
sar
push
xlat
add
je
out
add
outsl
rclb
sub
enter
dec
test
dec
add
test
pop
add
jge
mov
test
shrl
mov
std
and
xchg
xchg
je
dec
insl
insl
adc
pop
inc
jno
jl
leave
and
imul
pushl
xchg
jecxz
sbb
in
scas
adc
lcall
mov
xchg
add
xor
cmp
jb
add
mov
mov
mov
aas
into
xor
in
mov
dec
cld
cmp
mov
popa
sbb
loope
pushf
cmp
decl
fcomip
cmpsl
imul
lods
add
push
addb
ficompl
mov
out
cld
add
call
imul
jnp
push
pop
and
icebp
xor
adc
push
lock
lea
rorb
lods
xchg
mov
andl
mov
mov
mov
mov
cltd
cmp
mov
pop
shlb
popl
xchg
push
or
cwtl
int3
push
adc
icebp
fildll
xchg
add
inc
xchg
out
and
std
int
or
fistl
arpl
mov
loope
ss
addr16
sbb
dec
lret
fisttps
jae
cltd
push
js
mulb
lahf
push
enter
mov
fistpl
or
loope
xchg
and
sti
imull
fnstsw
pusha
add
leave
push
bound
mov
xchg
iret
je
lds
push
lret
addb
pop
push
mov
gs
mov
das
sub
add
ljmp
bound
jg
pop
cs
xor
rolb
dec
jge
dec
pop
sti
fcoms
dec
movq
cwtl
rcrl
pusha
jecxz
mov
xor
adc
aaa
cs
inc
push
sbb
cmpb
adc
inc
enter
dec
push
sub
dec
or
mov
incl
add
lret
jl
sbb
push
jg
sub
sbb
icebp
test
call
push
pusha
sbb
dec
inc
or
adc
push
mov
push
sets
clc
jmp
add
loope
dec
cmpsl
insl
jo
xchg
nop
aad
push
mov
pop
bound
gs
ret
jl
add
orb
sub
mov
lea
setno
fcmovnb
ret
cli
dec
cs
mov
les
jne
and
insl
or
mov
mov
movl
and
pop
mov
sub
inc
outsl
fisttps
xor
mov
cmpsl
add
xchg
decb
lahf
jge
mov
idiv
xchg
mov
inc
cmpsb
ds
xor
out
clc
cwtl
jp
pop
mov
xor
shl
mov
xor
push
les
fptan
mov
or
in
inc
mov
sub
or
int3
adc
ljmp
pusha
sahf
or
xor
pop
xor
add
add
xchg
decb
push
sbb
pop
icebp
jg
leave
fstl
enter
xor
adc
call
and
push
add
fwait
push
loope
mov
in
xchg
cmpsl
pop
cld
bswap
lret
aam
xchg
xchg
test
push
lds
adc
notl
out
cld
pop
ss
repz
xor
cmp
push
shll
std
or
adc
push
popa
cmpsl
ret
jno
sbb
adc
xchg
sub
jg
cmp
fiaddl
or
jbe
sub
aam
mov
mov
scas
loop
lds
outsl
fcmovnu
sbb
in
popf
je
sbb
ret
subb
mov
int3
notb
sbb
clc
ret
cld
data16
cmp
push
mov
daa
jecxz
pushl
ss
and
adc
shll
outsb
rolb
sbb
call
push
lret
aam
mov
jecxz
ss
loopne
aas
in
data16
add
xor
rcr
push
xchg
adc
loopne
mov
repz
inc
nop
addr16
test
mov
mov
add
popf
mov
mov
iret
movsl
add
xchg
clc
sbb
push
stos
fucomi
lcall
and
outsb
mov
or
sub
scas
and
push
mov
rcrb
clc
jno
enter
outsl
mov
shrl
mov
jb
sub
ljmp
call
adc
sbb
addb
mov
je
addl
add
sbb
popa
das
sub
sub
and
iret
movsl
inc
add
test
or
add
test
cli
inc
ljmp
pop
mov
xchg
pop
xchg
dec
and
add
add
rolb
xchg
inc
or
add
push
mov
adc
lret
into
lea
mov
adc
mov
and
lret
mov
addl
enterw
mov
test
enter
test
add
mov
repnz
out
xor
xor
jno
dec
add
les
sub
rorb
cmpsb
pushf
cmp
jne
cmp
add
addr16
jbe
enter
repnz
push
mov
cmp
cld
and
jmp
pop
inc
cmp
call
add
dec
fneni(8087
fmull
push
test
sti
ret
stc
sahf
add
adc
jbe
inc
or
push
jo
jb
and
in
push
mov
sbbb
xor
shl
stos
mov
mov
and
xchg
dec
adcl
and
pusha
jge
xor
xchg
mov
inc
pop
in
pop
pop
lock
push
jnp
in
out
cmpb
es
pop
es
jl
xor
clc
add
xor
subb
pop
adc
andb
es
subb
cmc
pop
rcl
lret
push
subl
imul
into
scas
fdivl
adc
add
les
cli
inc
jecxz
or
pop
add
jb
test
push
cmpb
pop
xor
adc
xchg
xor
add
add
mov
pop
fs
sbb
mov
mov
sub
inc
lock
sbb
jecxz
jnp
mov
mov
xor
aaa
jle
repnz
pushfw
inc
inc
push
or
rclb
or
or
lods
sbb
xchg
sbb
add
and
shlb
adc
cmove
rclb
add
pushf
mov
fsubs
mov
mov
outsb
rcl
data16
mov
or
adc
fwait
and
push
in
mov
adc
data16
ret
mov
and
add
pusha
sbb
inc
mov
push
andb
enter
stos
mov
test
insb
or
mov
fists
pop
adc
push
rorl
add
movsb
push
popl
inc
andb
ficomps
add
add
pop
jo
out
js
push
mov
dec
bound
addr16
pop
in
dec
and
mov
out
add
sbb
adc
xorb
sub
jns
inc
mov
add
adc
repz
xor
in
or
xchg
inc
sbb
aaa
mov
jne
or
or
mov
sbbb
inc
int
add
pop
ja
xor
sbb
xor
fmuls
icebp
insl
lcall
test
fbld
sbbl
adc
jg
addb
das
add
je
sbb
add
pop
mov
mov
nop
rolb
adcb
roll
adc
pop
into
mov
xorb
or
sahf
jnp
pop
in
rolb
pop
jp
xchg
mov
cmc
enter
or
inc
sub
cld
or
loopne
inc
and
cmpsl
sub
xor
mov
loopne
push
fsubr
bound
jbe
jo
mov
pop
push
pop
mov
test
sbb
cli
test
pusha
jo
in
call
aas
add
les
sbb
sbbl
rclb
shlb
call
lock
dec
add
lds
xchg
jns
inc
or
call
lock
push
pop
push
sbb
adc
shlb
fcoms
inc
mov
mov
fiadds
add
mov
andb
and
adc
sbb
or
push
push
fcomip
adc
sub
rcrb
mov
xchg
add
add
fadds
sbb
lret
mov
fnstenv
or
psllw
or
xor
inc
subb
mov
inc
jne
cmp
fwait
stos
jb
fnstsw
and
dec
pushf
add
push
test
mov
push
andl
add
pushl
mulb
sbb
ret
push
aaa
cmc
or
inc
sub
cmp
cli
lods
and
test
add
jge
pop
aam
ds
test
inc
and
ljmp
xchg
or
xchg
mov
inc
cmpb
rolb
mov
and
fstl
je
pop
inc
mov
in
mov
mov
mov
sub
mov
sbb
jne
mov
pop
inc
fistps
cmc
dec
rclb
test
inc
sahf
das
dec
in
mov
lea
out
or
addl
cmp
ss
xchg
in
pop
int
test
outsl
aad
push
push
mov
aas
cmp
ja
mov
cli
adc
mov
mov
imul
das
add
cmc
fstl
insl
fucomip
pop
and
cs
in
rorl
jns
cltd
cmpsb
cmpsb
shlb
movsl
mov
xlat
sbb
das
inc
xchg
in
pop
mov
or
sub
scas
inc
enter
nop
outsl
add
sbb
push
or
outsb
mov
dec
push
out
mov
ljmp
lods
or
add
sbb
clc
adc
roll
mov
xchg
lahf
sub
es
pop
fadds
mov
dec
inc
sbbb
cvtpi2ps
or
pop
jo
lods
aad
jmp
xchg
xor
xchg
pushf
add
mov
fwait
incl
push
loopne
cmpsl
mov
mov
push
fadd
and
outsl
add
mov
out
add
fbld
pop
negb
or
or
pushl
imul
outsb
sbbb
or
pop
fmulp
push
add
test
cmc
cmc
fistpll
mov
std
es
xor
out
cmp
out
sub
add
xchg
inc
testb
addr16
test
loop
insl
jbe
jle
sbb
mov
adc
jne
mov
adcl
mov
inc
ljmp
sub
mov
mov
sub
xchg
mov
pop
inc
jae
out
stos
sub
dec
jg
lret
test
in
cmp
add
push
dec
and
xor
nop
push
std
or
add
add
test
jg
push
andb
test
test
in
gs
add
in
loope
inc
push
add
cmp
adc
sbb
test
nop
and
pop
clc
mov
mulb
add
cwtl
adc
in
xor
xlat
lods
cs
push
mov
mov
inc
jge
push
stos
addl
jbe
fmuls
xchg
std
pop
inc
inc
xchg
cmp
adc
add
sbb
fdivrl
dec
nop
je
cmp
mov
cwtl
dec
sahf
pop
ja
out
cltd
jb
in
aad
push
pop
mov
mov
sub
inc
and
test
insl
mov
pop
inc
rolb
imul
jb
fnsave
test
jne
sub
mov
test
outsb
xor
inc
pop
inc
fsubr
cmp
xchg
ret
mov
ss
outsl
sub
xchg
cmp
lcall
insl
icebp
add
xorl
lds
push
cmp
sbb
sub
mov
and
arpl
in
push
adc
filds
mov
xor
jbe
andl
mov
cmpsb
cli
pop
dec
xchg
lea
dec
dec
sub
adc
cli
outsl
inc
sub
iret
inc
test
testb
mov
add
bswap
ret
pop
ret
add
pop
sub
lea
mov
xor
jb
test
and
or
cmp
sar
cmovs
mov
jb
dec
aaa
mov
push
push
pop
add
clc
pop
lret
test
mov
or
pusha
lods
jle
stos
icebp
jns
notb
mov
mov
inc
add
adc
pop
mov
mov
mov
stos
insl
sub
movsl
lea
jnp
lock
scas
je
fildll
fistpll
es
push
and
push
test
lsl
loopne
dec
pusha
jo
daa
adc
in
popa
jmp
ret
jae
loopne
sbb
les
add
scas
mov
cmp
jle
sub
into
test
into
sahf
imul
cs
fbstp
mov
inc
aas
mov
cld
sbb
lahf
mov
add
aaa
cmp
shlb
and
sbb
add
sub
das
push
mov
fcoms
push
pop
pop
inc
popf
lcall
stc
adc
and
mov
ja
push
loop
jg
sti
movsl
lea
sub
into
add
movsl
pop
add
das
test
and
sti
mov
inc
mov
cmp
mov
dec
fucomip
lods
in
cld
push
roll
cmp
rep
outsb
push
pop
or
sti
mov
cmp
pop
iret
add
sbb
lea
xchg
sbb
add
xor
rcll
mov
push
xchg
test
ret
jmp
out
lds
xlat
sarl
adc
sbb
cli
int3
stc
pop
loopne
mov
mul
fs
in
mov
dec
pop
lea
in
es
adc
dec
outsl
pop
ret
push
std
stc
xor
divl
lods
fidivs
push
jp
lret
lea
sub
je
sub
dec
pop
cld
ljmp
or
cmpsb
les
mov
filds
pop
loopne
int3
lret
push
dec
out
xchg
incl
cld
adc
imul
movsb
pop
add
sbb
pop
inc
lahf
imul
dec
xchg
jae
or
sub
insb
addr16
inc
pop
push
add
xor
jmp
cmpsl
push
sti
push
add
pusha
sbb
roll
xor
lock
outsl
xchg
mov
lahf
and
rorl
mov
mov
mov
cmp
or
pop
xorb
and
test
mov
mov
inc
aam
xchg
xor
shlb
imul
enter
ficomps
ret
push
mov
shll
lock
adc
jns
or
or
mov
dec
jge
or
test
mov
push
sub
xor
cld
adc
ret
mov
pushf
add
neg
adc
sub
mov
andb
int
fistl
loop
stos
xchg
push
xor
xchg
and
cli
std
add
aaa
or
jle
sti
sub
ss
adc
adc
movsl
insl
mov
gs
push
xor
mov
popf
shlb
jne
sub
outsb
aam
add
or
mov
or
sbb
test
in
ret
js
test
repz
andl
adc
mov
stos
pop
aad
mov
jno
add
mov
xor
xchg
stc
inc
inc
and
jecxz
aad
lods
stc
adc
sub
or
mov
adc
add
test
xor
or
xor
xchg
sbb
or
daa
sbb
xor
inc
sbb
dec
mov
je
je,pn
jo
inc
mov
xor
leave
popa
push
hlt
or
psubd
les
ror
loopne
cmp
ss
lret
add
fistpll
std
pop
adc
add
cwtl
adc
nop
inc
leave
jns
xor
mov
test
add
jmp
dec
pop
rol
in
orb
dec
out
pop
mov
fisubs
stos
fadd
sub
push
dec
sub
mov
cld
jbe
xchg
shrb
push
push
mov
in
into
sub
add
mov
ret
mov
mov
push
sbb
lcall
push
mov
fwait
test
addb
shr
aad
sub
in
scas
pop
fcmovnbe
lahf
arpl
in
mov
push
test
shrb
cltd
jecxz
dec
aam
stos
inc
stos
add
fcomps
cmpsb
int
rcll
je
jne
push
cld
xor
adc
lret
dec
movsl
aad
addl
mov
lahf
mov
sahf
shrl
ds
mov
mov
mov
dec
sub
ja
scas
jl
mov
pop
push
xor
add
or
inc
lds
pusha
mov
dec
clc
pop
inc
repz
pusha
jne
add
pop
and
loop
aas
ja
stos
and
cmp
mov
sbb
fistpll
add
hlt
les
mov
mov
add
xchg
push
sub
push
xadd
push
xchg
ljmp
mov
pop
dec
jno
jnp
push
lea
sti
xchg
mov
sub
sub
popf
enter
inc
lock
mov
scas
add
insl
fiaddl
and
jnp
pop
adc
add
rol
adc
jge
movsb
add
incl
pop
adc
push
push
sbb
inc
xor
xchg
jg
mov
out
inc
pop
mov
mov
jg
mov
cs
loope
mov
pop
aaa
add
lock
jnp
push
xchg
fnstsw
sub
fidivrl
pop
xor
lret
movsl
or
insb
dec
adc
insb
fsts
cwtl
or
and
cmpsl
or
outsb
push
mov
rcrl
lds
sub
sbb
lock
into
clc
push
mov
and
push
xchg
fistps
mov
xor
out
clc
or
pop
in
test
leave
lods
mov
and
sub
xor
jge
fucomip
mov
dec
mov
add
dec
and
xor
sahf
popf
gs
clc
pop
mov
push
jnp
ljmp
xchg
adc
jle
mov
dec
sbb
movsl
repnz
test
orl
push
jmp
ss
mov
test
jo
sbb
xor
stos
stos
cmpsl
mov
lock
adcl
inc
push
les
jae
in
add
testb
lcall
scas
mov
mov
mov
inc
and
sbb
sbb
lods
sub
call
fucomip
lcall
ja
or
mov
jp
and
mov
arpl
mov
decl
icebp
ljmp
js
mov
jecxz
fiadds
hlt
jae
xchg
cwtl
mov
ja
push
cmp
addl
mov
cld
adc
xchg
xchg
adc
mov
ljmp
in
lcall
cmp
jno
or
adc
std
call
mov
sbb
xor
pop
arpl
jmp
clc
jns
jp
mov
sub
rcl
lahf
xor
push
mov
add
adc
dec
not
cmp
fildll
add
mov
mov
jmp
ds
in
mov
lea
shr
pusha
and
punpckhwd
pop
sub
cmp
cmp
sub
inc
popl
mov
lret
and
loopne
push
cwtl
xor
lock
pusha
outsl
hlt
xor
shll
int3
jno
inc
adc
cmp
mov
mov
faddl
sub
mov
or
cmp
sbbb
dec
sub
cmp
or
fs
inc
mov
mov
ret
mov
ss
push
mov
scas
fimull
or
cmp
mov
adc
sbb
adc
loopne
loope
add
pop
std
xor
or
divl
ds
fldt
dec
xor
mov
xchg
and
sbb
push
push
sub
inc
and
sbb
loopne
cmpsb
sbb
push
loopne
push
mov
fimuls
xchg
sbb
inc
cs
inc
hlt
push
cmc
push
rcr
sbb
xchg
jns
add
add
dec
inc
mov
push
fs
mov
mov
inc
pusha
fadds
pusha
or
push
sbb
mov
and
ds
xor
xor
add
xchg
sub
push
adc
add
inc
lea
sbb
inc
push
fists
fsubl
pop
add
rolb
inc
and
add
dec
testb
and
xor
mov
int
inc
push
adc
popa
pushf
push
arpl
fwait
repnz
push
mov
jecxz
adc
test
scas
cmp
mov
mov
clc
ja
imul
je
mov
out
push
or
push
add
xchg
stc
mov
or
dec
inc
xor
mov
or
dec
cmp
dec
pop
adc
push
cmpsb
jp
add
jp
push
les
das
xchg
movsl
or
popa
inc
test
repnz
sub
mov
test
pop
sbb
or
sub
mov
xchg
outsl
in
es
test
out
sub
cwtl
sbb
in
insb
mov
aaa
dec
xor
pop
xchg
loopne
mov
lret
sar
mov
roll
dec
jo
pop
mov
jmp
adc
cli
dec
add
pop
sub
and
in
incl
mov
cmp
test
cmpb
loopne
cltd
dec
cs
sub
push
es
adc
adc
sbb
or
pop
dec
aam
test
shll
fprem1
mov
push
jge
fcmovne
adc
in
adc
pop
jae
xchg
add
aam
jle
xchg
std
ss
xchg
out
das
rcl
lds
mov
pop
test
push
ss
and
lret
mov
pop
clc
push
inc
dec
aas
jge
sar
fnstcw
cmp
pop
clc
add
ret
popf
lret
dec
jle
push
inc
cwtl
sbb
and
and
sti
jmp
sbb
push
arpl
js
lret
push
pop
mov
xchg
cmpsb
test
mov
or
pop
mov
jle
aad
mov
loope
mov
mov
and
add
push
sbb
pop
fldt
sbb
or
mov
adc
add
mov
mov
cmc
scas
aad
cs
ret
sbb
sti
sbb
ljmp
call
scas
inc
sbb
cltd
xchg
jbe
add
sbb
jns
mov
orl
mov
push
in
sub
test
jb
hlt
inc
loopne
jg
xchg
into
inc
pop
imul
or
push
iret
shlb
ret
mov
inc
outsb
das
mov
push
cmpsl
loopne
xchg
scas
ljmp
jmp
test
popa
mov
mov
loopne
addr16
dec
mov
dec
shl
push
lock
mov
stc
leave
pushf
pop
jnp
jmp
jne
js
mov
add
mov
ljmp
jo
bound
or
popa
cmpsl
call
push
xchg
xor
les
popf
dec
int3
adc
jb
cmp
push
cmpl
shrl
cli
pop
jmp
xor
in
stc
pusha
stos
lods
push
roll
sbb
sub
ret
incb
sbb
xor
inc
imul
sti
mov
and
fistl
add
outsl
inc
incl
mov
stc
add
xchg
adc
mov
dec
inc
out
add
stos
sbb
push
mov
ja
ret
cmp
xchg
push
fisttpll
rcrl
ret
and
cld
pop
sub
movsl
xchg
inc
das
decb
in
icebp
das
inc
pop
in
lret
jecxz
in
inc
mov
out
cld
mov
rol
test
andl
xor
ret
les
aam
cld
lods
std
hlt
add
xor
in
bound
adc
dec
lret
leave
mov
mov
testb
jp
test
pushf
inc
push
sbb
das
out
mov
adc
and
add
add
xor
add
dec
adc
sti
inc
aad
pop
sbb
dec
test
out
xchg
je
in
xchg
xor
pushf
cmpb
cltd
and
stc
adc
push
xchg
mov
mov
fdivr
outsl
mov
xor
aaa
or
aaa
jbe
or
xor
jo
in
mov
cmpl
cltd
subb
js
in
mov
fadd
sub
xchg
add
test
test
mov
mov
fcoml
xchg
test
sbb
mov
movsb
inc
shll
dec
mov
xchg
add
jg
adc
aaa
mov
jg
outsw
cmc
xchg
pusha
sti
dec
pushf
and
scas
jl
mov
cltd
call
push
fiadds
cmp
ficoms
mov
pop
or
push
lret
dec
stc
inc
push
pop
jg
shlb
mov
or
mov
or
mov
xchg
or
dec
incl
cmp
add
mov
xchg
jno
push
mov
mov
or
pop
add
cmpsb
adc
aaa
adcb
jnp
push
ret
add
mov
fiaddl
mov
mov
pusha
aad
addr16
rorl
in
inc
sbb
adc
mov
sbb
insl
mov
sbb
mov
imulb
adc
mov
xor
cmpsb
rcrb
sti
sarb
pop
js
punpckhdq
rcl
lods
lods
call
sbb
mov
mov
call
lcall
cs
mov
mov
popf
dec
xchg
pause
sub
adcb
cmp
je
cld
pop
nop
cwtl
fldl
jae
outsl
insb
loopne
gs
andb
pop
icebp
lea
and
rolb
mov
stos
sub
pop
or
jge
popf
sub
mov
mov
stos
or
mov
xchg
incl
test
imul
jecxz
imul
adc
pop
pop
mov
aam
js
xchg
sub
incl
push
mov
cmp
mov
dec
mov
loop
arpl
push
pop
call
fucomp
test
mov
xchg
adc
sub
int
add
xchg
mov
and
adc
loopne
add
decb
cmp
sub
cltd
adc
lret
cmpsb
lods
sbb
add
lock
add
and
pop
movsb
aam
iret
inc
stos
outsl
cmp
rolb
test
lcall
decl
add
xor
sub
adc
loop
adc
fstpt
fimuls
adc
push
dec
inc
and
mov
test
add
adc
enter
lea
add
inc
push
adc
or
std
push
je
fadd
mov
pop
push
add
adc
push
test
or
sbb
call
xor
xchg
adc
iret
mov
adc
adc
fcomps
adc
xor
add
mov
lods
lods
jle
mov
inc
xchg
mov
xlat
jecxz
xor
xorb
scas
xor
rorb
cld
in
into
xor
rcl
enter
js
out
lahf
jg
loopne
bound
jne
mov
cld
stos
pop
push
xchg
jg
out
and
aam
inc
push
mov
adc
lods
push
cmp
fisubrs
dec
jecxz
mov
sbb
mov
mov
fsubs
mov
mov
xchg
mov
or
sub
cld
in
mov
out
xor
loopne
mov
pop
or
cmp
mov
and
nop
pop
sbb
mov
and
add
push
and
or
ret
pop
test
adc
mov
add
cli
jle
loopne
rcll
popf
jo
aaa
push
fnstsw
jp
mov
jge
ret
sbb
xchg
cwtl
adc
ljmp
stc
orl
aam
notb
or
xchg
cli
mov
adc
cld
lods
das
icebp
mov
xor
adc
push
je
mov
fs
add
cld
add
jmp
sbb
in
dec
and
xchg
push
jecxz
pop
dec
sub
aaa
lods
xchg
inc
inc
push
inc
outsl
mov
sub
scas
mov
mov
cmpsb
enter
pop
js
push
mov
sete
sub
push
lcall
jb
out
xchg
mov
jno
jnp
push
out
sub
aaa
lahf
enter
cmpsb
sbb
pop
jl
outsb
mov
mov
xchg
adc
add
push
push
push
push
rolb
push
out
outsb
aaa
andb
pop
cmp
cmp
lods
les
adc
jae
mov
jb
mov
jbe
sbb
inc
fistps
insb
mov
daa
cs
mov
lock
jnp
das
pop
loop
ljmp
sbb
inc
incb
and
xchg
or
jne
jecxz
jae
push
pop
adc
pop
mov
lds
sbb
push
scas
mov
or
insl
pop
sahf
fcmove
mov
mov
inc
mov
nop
in
xchg
out
ficompl
not
add
icebp
push
jl
jp
and
inc
pop
mov
mov
push
idivl
and
jbe
adc
jg,pn
sbb
andb
mov
push
mov
popa
out
in
hlt
scas
test
pop
mov
push
xorl
cmp
push
aaa
clc
nop
nop
inc
add
pop
and
enter
ret
lcall
rcrl
mov
mov
adc
and
pop
lcall
jno
jne
mov
out
sub
popf
dec
xor
test
call
faddp
test
cli
in
insb
loopne
add
ds
pop
xchg
out
add
xor
cmc
and
pop
int3
pusha
pop
push
mov
mov
int3
mov
inc
imul
addr16
mov
nop
adcl
xor
int3
pop
dec
fdivl
add
sub
fnstsw
or
push
out
inc
inc
popf
cmp
lea
sbb
mov
and
inc
jge
and
cmp
push
rorb
sbb
add
sbb
das
loop
add
jecxz
jle
je
cli
enter
xchg
mov
call
mov
dec
int3
insb
pop
lods
out
sbb
scas
aam
cmpsl
js
out
add
and
inc
jb
cmp
dec
loop
fdivl
es
daa
or
dec
mov
ja
sub
sub
push
daa
sbb
adc
clc
out
nop
insl
lock
gs
mov
pop
mov
lock
cmp
or
aad
orl
inc
es
stos
les
push
adc
lret
in
mov
fldenv
fidivrs
hlt
cmp
cmp
sub
sbb
push
inc
inc
into
fnstenv
shll
cmpsl
lret
incb
cltd
cmpl
or
fistl
mov
or
and
mov
mov
sti
mov
sbb
addr16
stos
push
and
insl
flds
mov
or
pop
xor
adc
hlt
add
scas
push
cmp
push
notl
dec
lahf
test
loop
sub
je
adc
push
xchg
movb
pop
mov
mov
cmp
enter
pop
mov
pop
sbb
mov
aam
push
xor
dec
cmpsl
je
or
pop
int
aaa
inc
je
lock
pop
sbb
cmp
jno
jbe
and
or
mov
cmp
or
scas
stos
pop
mov
push
cs
in
add
in
int
jo
jl
mov
xor
cltd
int3
mov
xor
add
or
cmp
test
mov
sub
shlb
xor
push
sbb
sbb
xlat
push
mov
xor
push
adc
ljmp
lea
add
ffreep
inc
andl
inc
add
fcmovnu
scas
xchg
push
andb
push
cmpsb
mov
jecxz
jae
aad
cmp
push
mov
jmp
xchg
adc
mov
movsl
inc
shll
stos
dec
xchg
lds
push
lea
mov
cmp
loop
cmpsb
aaa
enter
aaa
clc
mov
and
sub
hlt
mov
cld
mov
pushl
in
xchg
loope
adc
loop
add
dec
testb
decl
out
jno
xor
push
cs
push
xchg
subb
mov
jle
arpl
pop
loopne
sbb
or
dec
xor
inc
test
xchg
sbb
xor
ret
dec
das
adc
call
add
mov
incl
test
ficompl
mov
mov
incl
pop
add
into
adc
adc
and
pusha
mov
xchg
sub
sbb
int
adc
sbb
rclb
xchg
add
loop
push
lods
push
and
jl
push
mov
pop
pop
hlt
hlt
dec
jmp
roll
add
filds
dec
mov
ffreep
and
xchg
jbe
add
rorl
test
rcr
loopne
push
sub
aad
mov
mov
les
loop
mov
mov
gs
cld
sub
xor
mov
ljmp
mov
jnp
pusha
mov
jle
and
dec
gs
jl
cmp
mov
push
mov
inc
mov
test
icebp
xchg
test
popa
jae
pushf
cmc
jl
push
ret
js
orb
out
push
ds
nop
push
lret
sub
add
sub
push
mov
adcb
shr
cld
call
pop
mov
xchg
faddl
mov
dec
xor
fildll
popf
or
mov
das
adcl
jne
out
iret
push
mov
xor
lods
lcall
jb
jle
insb
out
sub
inc
pusha
and
mov
sbb
pop
xchg
insl
das
inc
inc
hlt
inc
push
pop
cmp
add
dec
and
and
sahf
or
stos
mov
aam
jno
scas
into
outsl
and
subb
push
lods
sub
push
icebp
jp
jecxz
or
sbb
xchg
add
cld
xchg
sbb
jb
scas
mov
out
push
adc
dec
add
fisttps
std
cltd
ss
std
mov
sbb
inc
pop
and
and
adc
jg
mov
adcl
ret
mov
xchg
pop
inc
inc
add
cmp
mov
sub
shrl
pushf
xchg
sbb
mov
add
dec
add
insb
insl
push
mov
mov
sub
pusha
or
jg
inc
loop
rcll
sbb
xor
inc
mov
sbb
mov
jnp
inc
out
cmp
lcall
pop
pushf
test
inc
fcoms
dec
mov
outsl
data16
xor
push
mov
repnz
jge
xlat
icebp
mov
test
ljmp
popf
mov
or
sarb
push
pop
movsb
jae
push
add
test
mov
xor
pop
mov
jecxz
mov
inc
cli
in
add
outsl
aam
fidivrl
dec
arpl
fildl
fildll
rcl
mov
dec
out
out
add
ljmp
fcmovu
pop
mov
sbb
cs
popa
cld
adc
das
cmp
decb
cmp
cltd
push
mov
inc
mov
loopne,pn
test
and
cmp
mov
ror
mov
jbe
mov
lea
lret
or
jns
jg
and
add
clc
jg
pop
imul
push
std
add
stos
lcall
adc
mov
dec
ret
push
cmp
and
sti
jecxz
sbb
or
lret
inc
sub
sbb
and
jnp
test
in
dec
popf
mov
das
std
mov
lods
mov
idivb
pusha
inc
lea
mov
ljmp
jp
push
xor
popf
iret
jp
mov
shl
cmp
shrb
rolb
jle
adc
jnp
test
aaa
loop
popa
xchg
cltd
leave
pop
ss
dec
outsb
push
push
aad
add
and
xchg
mov
cmp
xchg
sbb
xchg
jne
push
lock
fidivrs
and
sbb
insl
push
pop
xor
sbb
push
cmp
dec
je
int
dec
jno
sbb
jmp
add
push
dec
sarl
sbbb
in
push
pop
mov
adc
pop
ljmp
cmp
push
imul
xor
fstpt
fdiv
mov
or
ljmp
push
adc
cwtl
movl
iret
sub
or
fs
outsl
std
mov
or
ss
mov
sub
idiv
lods
mov
cmp
out
mov
divl
adc
fcomp
adc
push
cltd
cmp
test
loopne
shlb
pop
add
mov
aas
incl
aad
sub
xchg
push
xchg
mov
int
mov
xchg
stos
dec
cli
rol
inc
popa
sti
dec
pop
sbb
ljmp
js
mov
xchg
in
into
and
in
lods
jae
in
cmpsb
adc
add
sbb
push
xor
xchg
ficompl
fs
cmpl
push
cwtl
mov
cmp
pop
jg
sbb
mov
jno
push
jb
jbe
stc
out
push
fldenv
pop
std
dec
pop
test
enter
mov
gs
push
jle
dec
shrl
js
cwtl
push
jmp
data16
outsl
dec
push
push
inc
test
aas
jg
and
or
and
orb
and
pop
cli
dec
and
sub
xlat
outsl
outsl
pop
pop
enter
pop
ror
push
xchg
mov
sbb
fsts
dec
leave
incl
add
rcrb
dec
xchg
sbb
sti
add
mov
in
insl
add
cmp
int3
imul
pushl
fstps
dec
aas
jno
or
inc
addr16
and
mov
clc
ret
out
mov
lods
imul
loope
gs
dec
pop
xchg
mov
movsl
and
iret
adc
inc
cmp
pop
and
lods
fisubrl
ret
or
push
rcr
loope
mov
mov
rcll
cmp
outsb
push
in
add
dec
xchg
cmp
dec
decl
loop
dec
sub
ds
add
jge
lret
dec
insl
and
lock
mov
ss
pop
or
mov
xchg
sarb
insl
jg
arpl
push
xor
pop
and
lcall
lcall
mov
dec
adc
sbbb
add
fildll
sbb
or
lret
or
pop
adc
and
test
loopne
test
aas
dec
mov
add
inc
jge
sahf
and
xchg
pop
mov
lods
andl
inc
or
jns
xor
rorl
shrb
push
cld
push
jge
icebp
std
test
mov
xchg
push
cmp
pop
inc
dec
mov
inc
xor
and
sbb
mov
ljmp
adc
int3
add
adc
jo
lahf
stos
mov
punpcklbw
lcall
ss
ret
loopne
jo
vmovdqu
pop
adc
mov
adc
arpl
add
xchg
sbb
xchg
test
stos
scas
fbld
fcomi
lret
sub
cwtl
daa
cs
jmp
lock
mov
push
in
xor
fcompl
in
test
test
enter
movsl
push
and
sub
cmpsl
fisubl
and
lret
pop
and
in
pop
and
in
in
add
cld
mov
and
enter
push
stos
mov
inc
iret
insl
fnsave
mov
jne
and
outsb
fwait
imul
je
rcll
mov
in
pop
or
sbb
adc
add
add
or
fistl
add
add
pop
aam
jmp
and
inc
fdivrl
xchg
add
cs
mov
rolb
xchg
add
js
loope
inc
jecxz
jne
push
push
sarl
add
ficomps
ja
or
pop
xlat
jae
or
pop
fdivr
pushl
aam
adc
call
mov
pop
mov
jl
fisubrs
xrelease
jmp
ja
rcrl
xchg
or
push
dec
das
lds
pop
outsl
cld
ja
dec
jge
mov
push
fwait
leave
nop
fstpt
ret
sbb
mov
fs
mov
movsl
mov
add
daa
xor
sub
add
xchg
jl
jge
mov
test
and
sti
inc
pop
or
sbb
into
pusha
test
jle
xor
inc
add
lret
dec
jnp
in
rcrl
and
fsubr
sbb
int3
xchg
jp
xchg
pop
lods
test
mov
sbb
fstpl
stos
ds
mov
std
adc
or
stos
mov
out
jle
stos
out
movsl
mov
and
xchg
arpl
mov
fidivrs
or
mov
adc
icebp
adc
pop
imul
push
call
fscale
popl
js
clc
mov
js
test
lock
xchg
gs
lds
cmp
jb
adc
xlat
pop
dec
das
fdivrl
sbb
push
or
test
iret
inc
ds
or
adc
mov
push
push
into
xchg
inc
or
mov
ret
out
or
scas
sub
sub
loope
iret
sbbb
pop
push
pop
out
pop
pop
or
mov
shrl
push
or
cltd
xchg
movsb
jmp
iret
in
cwtl
aam
pushf
mov
lods
mov
cld
popf
pop
nop
test
jg
mov
in
sbb
inc
push
push
xor
insl
icebp
nop
sub
xchg
lods
data16
dec
aad
subl
cmp
mov
adc
push
or
test
xchg
push
mov
into
les
fadd
cmp
mov
jno
call
test
push
jbe
xchg
jl
mov
sti
iret
out
jbe
push
mov
scas
mov
lret
push
mov
js
iret
in
out
mov
jecxz
inc
movsl
dec
dec
mov
mov
dec
push
xor
ret
xor
push
in
outsl
add
scas
inc
test
sub
sbb
jmp
shlb
jmp
jmp
xor
ficompl
inc
pop
jns
and
subb
mov
das
adc
inc
dec
mov
mov
sub
adc
or
lock
lods
add
sti
ret
mov
cmpsb
or
dec
fildl
push
mov
push
int3
xchg
out
aaa
popl
mov
ljmp
mov
lds
in
jg
test
mov
mov
out
imul
jp
mov
dec
push
inc
sbb
push
mov
outsl
pop
sbb
stos
std
lcall
xchg
in
outsl
sub
push
cmpb
xor
cmpsl
sbb
pop
cwtl
xlat
push
insb
jle
and
stos
je
scas
push
xor
add
xchg
cmp
lods
or
sub
pop
pop
mov
or
push
js
sub
es
ja
mov
xchg
fwait
in
insl
fldt
inc
test
cld
pop
jl
jp
call
adc
xchg
mov
xchg
push
mov
test
icebp
mov
add
xchg
std
pop
inc
inc
cmp
pop
test
lea
frstor
lar
pop
sbb
or
fsubrs
les
clc
lea
adc
outsb
out
pop
sbb
lods
mov
sbb
push
fs
loopne
pop
clc
xor
fs
xor
cmpsl
mov
shrl
and
insb
xor
push
add
xor
and
sar
addb
insl
out
adc
add
push
addr16
cmp
sahf
scas
adc
or
push
loope
jnp
sbb
push
xor
add
add
pop
mov
jbe
clc
scas
mov
lds
push
hlt
mov
in
sub
mov
inc
adc
test
adc
js
cwtl
in
sbb
adc
adc
or
repz
or
push
lods
movsb
sbb
or
mov
sub
mov
push
rolb
adc
mov
xor
adc
dec
inc
test
adc
enter
into
add
sbb
cmp
test
bound
lds
jo
shll
inc
adc
mov
sub
xorb
xchg
sbb
pop
dec
xor
inc
xor
mov
ds
pop
imul
xchg
pop
shrl
push
cs
das
sub
add
cmp
pop
or
dec
hlt
dec
rclb
aad
loopne
add
push
scas
test
addb
daa
inc
push
inc
adc
inc
insl
pop
inc
adc
pop
mov
pop
push
push
push
je
lret
pop
and
ds
push
sbb
inc
pushf
push
shlb
loopne
xor
bound
test
adc
mov
loope
sub
sbbl
push
jne
xchg
in
or
sub
sbb
push
loopne
cmp
jb
test
lock
mov
dec
stc
mov
in
and
bound
aam
jmp
sbb
sbb
test
push
jo
cmpl
in
sub
aad
mov
dec
loope
mov
mov
adc
pop
adc
add
xor
adc
jno
fwait
add
nop
adc
loop
xor
jbe
aad
sar
icebp
fldenv
insb
xor
push
jge
and
or
test
mov
loop
xchg
sbb
pop
inc
adc
and
mov
loopne
cmp
and
and
mov
shrb
mov
xor
hlt
aam
jmp
out
add
cmpsl
push
ficomps
stc
jnp
add
mov
sbb
mull
pop
dec
push
sbb
int3
jnp
cmp
imul
testl
mov
fists
stc
ret
lods
cmpsb
clc
lock
inc
xchg
in
and
pause
adc
and
das
xor
and
lock
mov
adc
sbb
sbb
cwtl
adc
and
sub
clc
lods
and
xchg
sti
cmp
pop
lock
incl
inc
iret
in
in
jg
adc
mov
lcall
or
xchg
xor
icebp
fwait
mov
mov
js
incl
push
pop
iret
add
xor
scas
mov
shll
sbb
pop
jl
push
in
aaa
stos
std
int3
fidivs
shr
or
andb
cmp
dec
add
dec
cld
add
xchg
out
inc
and
movsb
jge
dec
test
mov
and
mov
xchg
adc
jecxz
dec
jns
loope
inc
adc
stc
pop
pop
push
push
test
mov
loope
loopne
lret
mov
jg
adc
shlb
push
mov
dec
push
stos
int
or
adc
adc
sub
pop
push
pushf
mov
ja
rcrb
gs
cmp
fstpt
cmp
pop
out
outsb
dec
mov
push
outsl
jecxz
mov
ljmp
dec
pop
mov
inc
inc
mov
movsl
ja
in
dec
mov
rcrb
pop
outsl
mov
mov
mov
inc
fimull
inc
add
pusha
loop
aam
fcoms
lahf
mov
cmpsb
mov
icebp
adc
hlt
cmpl
or
loop
rclb
add
sub
or
pusha
mov
or
cmp
popf
sub
mov
lret
hlt
mov
test
add
pop
nop
and
insl
cmp
cmpsb
cmp
fwait
imul
cmp
and
adc
jg
adc
out
aad
mov
pop
adc
adc
xchg
rol
xor
sub
movsl
mov
pop
fstpt
mov
jno
bound
fmuls
outsl
cltd
fcomip
pop
std
inc
repnz
repnz
dec
sbb
cli
ret
and
push
je
xchg
mov
push
outsl
std
dec
cld
and
popf
sahf
addl
outsb
xor
push
or
outsb
insl
pushf
mov
shll
cmc
mov
call
outsl
push
or
xor
movsl
mov
leave
in
cli
or
push
mov
fsts
push
outsl
push
mov
ja
lcall
jp
outsb
cmpl
out
dec
ss
aad
push
or
in
into
into
cltd
iret
inc
mov
dec
outsb
stos
popa
jno
arpl
xor
sub
int
jns
les
sub
ljmp
push
jl
test
ficoml
pop
movsb
mov
and
sbb
cmp
mov
lret
ret
in
out
push
loope
mov
clc
stos
mov
push
cmp
mov
out
pop
scas
cmp
add
sbb
xchg
mov
xor
and
cmp
test
fdivrp
mov
out
mov
or
rcrl
sub
jle
popa
push
outsl
pop
xor
leave
or
mov
jp
adc
mov
push
test
xor
les
in
pusha
cltd
test
adc
cwtl
add
adc
test
outsl
movsb
fdivrs
orb
insl
xchg
dec
adc
cmp
adc
mov
out
cltd
cmc
cs
ror
fwait
pop
std
call
scas
stc
adcb
inc
scas
shl
mov
outsb
xor
outsl
push
sub
test
cmp
lea
sbb
jmp
jo
pop
xchg
xchg
decl
shrl
addr16
into
loop
add
test
das
and
lret
jle
or
das
jge
repz
clc
or
mov
cmp
pushf
xor
inc
and
push
loopne
xor
roll
push
mov
xchg
ljmp
push
in
add
leave
dec
sbb
push
fnstsw
popa
xor
in
pushl
cli
push
adc
fildll
push
mov
lods
and
lods
lahf
addr16
xor
adc
dec
dec
jne
push
sbb
lcallw
movsl
inc
aas
movl
scas
in
xchg
in
lds
divl
pop
nop
add
jl
inc
test
adc
jg
dec
sti
cmp
pop
subl
stc
push
inc
pop
xchg
ror
jo
je
dec
insl
jl
lret
or
sar
mov
fwait
xor
cmp
clc
push
je
decl
roll
mov
in
and
repnz
addb
imul
stos
cs
pop
add
lock
sub
push
or
mov
loopne
mov
sub
std
xchg
insl
jl
push
xchg
push
movsb
in
add
jle
push
pop
cmpsb
pop
dec
ljmp
push
mov
push
dec
sbb
sub
push
xchg
pop
inc
xchg
mov
mov
sub
inc
lods
inc
cs
insb
nop
push
and
mov
rolb
and
addr16
inc
lahf
sbb
test
xor
mov
pushl
inc
scas
mov
add
add
cld
dec
fstps
inc
jo
jmp
cmp
xor
movsl
mov
xchg
and
int
pop
shll
stos
or
fwait
jnp
jb
cmp
lock
filds
push
out
fsubp
imul
imul
jne
pop
andb
pop
dec
addb
ret
test
mov
stos
mov
int
or
clc
jmp
aad
fs
lock
mov
mov
ficomps
push
mov
test
fbld
xchg
popl
xor
add
jge
call
and
loopne
pop
or
icebp
clc
out
add
pop
add
add
and
fiadds
adc
dec
and
pop
sbb
or
add
or
add
pop
sbb
jle
and
subl
pop
jge
daa
jl
dec
xor
loop
data16
repz
lcall
fmuls
jp
pop
cld
xor
add
adc
pop
or
arpl
ret
orl
inc
mov
add
pusha
push
adc
cwtl
gs
and
movsb
rolb
inc
and
or
scas
mov
add
repnz
or
jge
push
sbb
mov
cmp
jle
lea
xchg
cmp
and
jne
movsb
and
sub
rorb
outsl
imul
mov
cli
sbb
andb
sbb
lret
cmp
add
stos
inc
and
inc
pop
add
push
mov
mov
lock
jp
dec
push
shrb
jo
pop
push
push
arpl
push
inc
xchg
movsb
loopne
inc
les
loope
lcall
subb
rclb
inc
outsb
test
or
inc
iret
jmp
addl
sub
adcb
or
add
stos
call
adc
or
or
mov
or
inc
dec
pop
frstor
jl
lret
daa
movsl
sar
gs
pop
aam
sbb
pop
inc
std
dec
daa
pop
mov
daa
add
test
lock
rorb
xchg
int
sub
mov
cmp
bnd
inc
or
sbb
pop
mov
jp
icebp
andb
mov
cltd
mov
out
mov
cmp
sbb
test
and
aas
stos
and
jp
ret
xchg
gs
aaa
add
pop
adc
testb
scas
add
clts
push
sub
sbb
lods
add
inc
outsb
or
stos
scas
loop
test
inc
sub
jmp
shlb
mov
xor
sub
outsb
lock
fstpt
xchg
add
adc
dec
adc
js
and
inc
push
outsl
fdivrs
cmp
pop
pusha
pop
fsubrs
cmp
icebp
xchg
sub
inc
lds
lock
out
add
jbe
and
sbb
sub
fs
je
sub
pop
pop
hlt
add
out
nop
cmc
dec
bound
jecxz
push
shll
mov
mov
push
push
or
outsb
insb
push
jo
orb
mov
pop
pop
ror
or
sti
lods
sbb
mov
in
mov
sub
add
jg
aaa
adc
shll
jl
outsl
loop
and
into
or
lea
add
ss
mov
xlat
jnp
and
in
mov
adc
negl
push
jle
in
test
test
lcall
pop
pop
push
iret
ret
fucomip
das
sub
mov
cmp
dec
fsub
idivb
fucomp
add
leave
cmpsl
mov
sub
mov
stos
mov
addr16
add
sub
stc
cmc
mov
gs
adc
jp,pt
mov
add
sbb
pop
imul
gs
mov
xor
mov
sbb
and
test
out
xchg
and
aad
gs
insl
ja
enter
adc
mov
clc
fdiv
mov
ds
lods
ret
cmp
sub
jo
push
in
jmp
inc
xor
cs
mov
jnp
add
adc
sbb
add
lcall
push
fwait
sbb
mov
ficomps
out
cs
daa
dec
xor
or
aad
dec
pop
inc
mov
jp
aam
push
mov
pop
and
mov
dec
adc
add
pop
pop
jnp
push
filds
pop
or
mov
xchg
sub
and
incl
scas
loopne
sub
mov
or
repz
lret
dec
jge
pop
int
lcall
inc
insb
sub
add
aaa
andl
outsl
mov
sbb
add
push
aam
loopne
cli
fmuls
push
push
out
clc
add
push
sbb
cmpsb
or
xchg
fsin
cmpsl
bnd
cmove
dec
xlat
hlt
xchg
push
add
mov
pop
and
gs
add
mov
outsb
lret
and
rolb
pop
push
add
mov
jbe
mov
push
mulb
clc
lcall
je
xor
jae
or
push
stos
and
sbb
ja
cmp
mov
inc
push
gs
lahf
push
in
adc
add
add
dec
sbb
xchg
push
push
and
mov
mov
sbb
notl
ss
scas
mov
testb
in
jb
les
mov
mov
out
int
dec
dec
mov
repz
mov
les
add
mov
and
mov
adc
mov
mov
in
push
shll
cmp
ret
inc
and
out
push
jnp
and
scas
loope
jp
popa
add
rcrl
shll
popa
lahf
ret
loopne
add
cwtl
aam
imul
sub
jle
test
mov
gs
xchg
into
add
adc
or
dec
xchg
adc
lock
ror
scas
cltd
pop
into
rol
movsl
loop
adc
xchg
xchg
jnp
bound
loop
out
and
jno
repz
add
loopne
push
cmp
jg
in
jmp
inc
add
or
mov
jae
add
aad
inc
icebp
ds
sub
push
lret
add
jnp
cwtl
daa
or
add
adc
and
lret
xchg
data16
sbb
xchg
mov
fwait
mov
lds
in
dec
xorb
test
fcmovnb
mov
xchg
adc
mov
sbb
cmp
push
lock
js
jg
mov
ss
test
mov
into
hlt
repnz
popa
sub
push
jge
dec
aas
notb
add
sub
shll
rsm
lcall
jne
dec
ljmp
out
subb
pop
jge
loop
or
mov
cmp
inc
mov
push
jp
lock
lea
ds
rcll
sub
dec
rorl
test
dec
jb
nop
arpl
sbb
push
mov
pop
dec
jl
in
lock
fcmovnb
inc
adc
fdivrs
es
loopne
into
inc
xor
push
inc
dec
es
push
imul
or
pusha
loope
push
jo
xor
ljmp
sub
mov
xor
and
inc
mov
rcll
push
adc
cmpsl
xor
fsubs
xchg
push
sbb
lods
pop
inc
sbb
or
jbe
hlt
dec
adc
loopne
dec
cltd
sub
leave
shl
push
jnp
jecxz
push
inc
sbb
adc
mov
sub
pop
aam
cmp
jmp
cmp
jmp
daa
sbb
es
in
xor
hlt
lea
sub
jne
in
push
mov
inc
sar
push
xor
iret
addl
or
lock
sub
cwtl
push
add
pusha
jp
enter
fld
insb
or
mov
cmp
fsub
xchg
and
lret
add
mov
pop
mov
fistpl
push
cmc
mov
xor
adcl
add
lcall
sub
and
inc
push
mov
lret
orb
mov
sub
jl
sarb
lcall
fwait
les
ss
aas
call
loope
cmpl
xor
out
sbb
enter
sahf
fbstp
stos
sahf
xlat
xchg
mov
stos
gs
or
adc
test
jne
pop
jg
or
sbb
push
sbb
xchg
ja
or
xlat
pop
sub
sub
je
mov
mov
or
jae
adc
mov
pop
fwait
pop
out
pusha
add
pop
cmp
sbb
rorb
pop
pop
mov
cld
shll
cmp
mov
adc
cli
sbb
dec
js
ja
sbb
les
xlat
aam
jae
insl
insl
pop
fbld
xor
jb
js
in
incb
add
jl
sbb
test
jmp
adc
pusha
cmp
mov
push
cmp
test
fstps
sbb
or
fists
out
push
and
insl
mov
add
loopne
insb
imul
and
cmp
dec
cmpsb
mov
in
sub
stos
and
and
daa
mov
inc
aad
add
orb
jmp
out
xor
pop
adcb
js
xor
push
mov
or
mov
push
jnp
or
testl
nop
jge
daa
pushf
mov
sub
lods
cmc
test
stos
popa
jg
aad
mov
add
loopne
out
aad
adc
mov
xor
out
popa
push
dec
js
ret
aaa
fsubl
ja
xor
cmp
testl
or
cmc
pop
xchg
pop
movb
sbb
sub
sti
sbb
addl
in
setb
call
in
inc
push
loopne
adc
aaa
xchg
inc
repnz
test
test
add
mov
pop
mov
mov
push
push
fistl
rorl
jb
pop
lret
jecxz
rcll
packsswb
xor
stos
adc
lods
aam
jmp
test
and
jmp
mov
pop
sub
arpl
pop
jl
mov
mov
jo
mov
jbe
cwtl
and
hlt
xor
stc
inc
pushf
jne
iret
mov
and
push
mov
xor
aam
cmp
add
mov
lahf
mov
sbb
ret
sub
dec
pop
loope
xchg
pop
aas
inc
jecxz
xor
or
insl
pop
ret
stos
adc
mov
mov
push
or
icebp
push
imul
test
and
addr16
mov
aaa
mov
repz
and
xorb
pop
dec
ja
int3
fimull
xchg
jmp
add
jp
adc
shll
add
js
rorl
or
dec
test
les
adc
xchg
push
outsb
add
inc
imul
push
inc
adc
hlt
cli
add
mov
dec
bnd
add
popf
mov
add
push
aad
xor
iret
cmp
mov
aas
pop
jmp
add
cmp
jae
ljmp
hlt
scas
pop
imul
push
int3
insb
loopne
jbe
or
sub
mov
sbb
jb
add
pop
jae
dec
iret
pop
dec
loope
dec
lods
xchg
sarl
aam
in
out
andl
js
xorb
mov
adc
xor
sarb
or
cmpl
inc
cltd
or
scas
imul
dec
jnp
int3
aas
adc
sbb
mov
xchg
and
mov
fsubl
sbbb
lahf
jbe
shll
sub
lods
aaa
sbb
push
adc
pinsrw
dec
push
ljmp
push
sbb
sti
push
mov
mul
sbb
mov
jbe
fidivs
jnp
lret
push
lahf
inc
xchg
cmp
push
icebp
cwtl
popf
movsb
cwtl
ret
int3
xchg
enter
pushl
jbe
adc
mov
loop
mov
add
fwait
pushaw
ret
out
add
mov
shll
add
fiadds
in
push
lods
sub
adc
xor
push
mov
xchg
loopne
push
jnp
cltd
xor
jbe
jecxz
rcrl
add
js
sbb
jp
pushf
mov
out
jne
sub
out
pop
cltd
lea
push
imul
jmp
fimuls
imul
xor
out
std
adc
js
jo
or
mov
cld
pop
push
out
cmp
cld
add
dec
addb
add
or
les
inc
or
mov
lcall
cltd
pop
push
adc
push
adc
fldcw
movb
sbb
mov
add
iret
sub
xor
incb
or
inc
in
adcl
subl
adc
sub
jl
mov
dec
leave
or
add
fdivrl
pop
jle
mov
or
add
das
fcoms
pop
int
adc
pop
out
or
icebp
in
and
xor
movsl
sub
dec
aam
dec
mov
cmp
jo
adc
jecxz
arpl
cmc
and
sbb
mov
xor
je
daa
add
cmp
adc
sbb
sbb
mov
xor
add
and
cmp
idivb
mov
adc
lods
data16
test
lret
sub
add
mov
pop
jge
sbb
test
sbb
pusha
mov
xchg
gs
daa
in
clc
es
into
inc
push
int
enter
or
xchg
push
mov
mov
lock
les
lcall
mov
sub
inc
hlt
and
add
daa
push
add
adc
sub
xor
add
call
inc
xchg
jp
jb
add
jo
sbb
or
aad
cmp
movl
jo
in
and
and
mov
test
outsb
pop
sbb
fdivs
pop
arpl
rcrb
inc
ja
xchg
roll
bound
jp
out
add
imul
loopne
mov
xchg
test
xchg
sahf
loopew
dec
in
aam
add
fmull
mov
push
push
in
sub
add
or
test
js
mov
test
inc
xchg
bound
pusha
mov
mov
stos
iret
rol
push
fildl
add
leave
lds
or
jbe
inc
push
das
das
or
movsl
mov
sti
inc
aam
add
and
lock
ds
sbb
movsb
xor
dec
pop
dec
shl
lret
sub
xorl
adc
mov
or
andb
loope
pop
sbb
or
mov
hlt
add
lock
je
jo
inc
and
mov
outsb
bnd
mov
das
xor
testl
xor
mov
inc
and
push
dec
insl
insl
aaa
sub
loop
push
jmp
add
xlat
jg
pusha
cmp
repz
out
js
jae
push
add
jl
hlt
add
xchg
jl
lret
into
fmuls
test
lcall
jle
out
sbb
mov
ds
jne
filds
xor
cs
and
and
adc
roll
incb
dec
insb
push
pop
repnz
add
pop
ljmp
adc
aas
push
cmpsb
test
mov
mov
xchg
addb
inc
mov
subl
push
cmc
inc
lahf
mov
lcall
popf
jmp
add
stos
or
pop
cmp
stos
jne
imul
add
adc
add
jne
les
adc
daa
xchg
push
and
jnp
lcall
add
add
push
js
adc
int3
sub
aaa
add
pop
push
test
es
ljmp
sbb
push
xor
repnz
rcll
int3
fdivs
pop
dec
push
push
push
dec
les
mov
or
xchg
add
pop
pop
sbb
into
in
or
push
insl
stos
imul
add
sbb
and
push
inc
out
xorl
cmp
loopne,pt
jae
test
or
inc
inc
shlb
jle
cltd
or
xchg
adc
xchg
test
fistl
lods
rol
pop
aad
out
adc
inc
je
loop
inc
xchg
pop
out
add
int3
push
adc
ss
ja
cmp
push
or
xor
jmp
jg
add
notl
add
lcall
les
jg
pop
inc
xchg
lret
pusha
inc
dec
mov
std
fidivs
or
mov
xor
xchg
iret
and
jge
mov
xor
or
insb
mov
mov
mov
roll
test
sub
arpl
scas
int3
call
movsb
call
and
js
nop
push
or
jmp
add
ja
xor
addl
rol
lock
fcoms
add
rorl
inc
je
arpl
add
add
popf
xchg
popf
loop
fisttpl
and
nop
popa
lods
mov
loopne
adc
mov
add
xor
push
iret
inc
dec
add
mov
pushl
loop
and
sub
sub
sbb
add
mov
cwtl
cmp
enter
sbb
data16
lock
and
jl
mov
and
or
sub
xchg
and
adc
imul
or
mov
rcll
add
adc
mov
lock
pusha
xchg
movsl
mov
pop
mov
dec
pushf
cmp
xor
dec
mov
movsb
loop
sbb
ds
inc
sti
lock
pusha
icebp
dec
adc
add
pushf
inc
dec
sbb
cmp
icebp
scas
mov
lret
in
add
inc
adc
sbb
mov
push
jge
jmp
add
inc
icebp
sub
jb
out
jmp
bound
data16
shrb
add
or
popa
fdivl
mov
lods
fsubrl
mov
scas
pusha
jo
in
sbb
or
adc
cmpl
into
jns
pop
stc
add
lock
or
add
jb
dec
cld
lock
mov
inc
and
mov
cmp
inc
pop
push
push
daa
int3
adc
mov
insb
mov
and
addb
jne
mov
cmpsb
jne
or
fimuls
ja
pop
test
orb
ss
pop
push
js
jne
add
add
adc
inc
fs
or
shll
push
lods
lcall
test
loope
push
icebp
cmp
cmp
mov
popf
push
fidivrl
fadds
xchg
aas
sub
inc
int3
ret
es
push
and
sbb
mov
data16
clc
xor
shlb
insb
test
inc
xor
pop
pop
mov
pushf
insb
sbb
sbb
or
ret
adc
ljmp
cmp
lods
mov
xchg
xor
mov
adc
loop
int
dec
jne
movsl
mov
ds
movsl
iret
jne
mov
cmpsl
sbb
mov
adc
dec
ja
add
jb
mov
mov
dec
shlb
inc
rorb
push
clc
test
and
aas
mov
loopne
stos
loopne
test
stc
xor
in
icebp
shll
fnstenv
rcrl
lcall
lods
lock
pop
adc
dec
or
std
addr16
xchg
loope
insl
pop
inc
fildll
adc
xor
lret
inc
adc
int
shll
cwtl
push
cmp
pusha
ss
and
test
mov
and
jg
imul
adc
xchg
push
push
adc
pop
pop
and
arpl
stos
sbb
and
sar
cmc
cs
in
jge
mov
mov
add
das
adcl
stc
push
sbb
and
fs
arpl
aaa
add
add
out
loopne
test
ljmp
cmpsl
pop
mov
stos
call
xchg
sahf
inc
mov
sbb
xor
inc
push
in
xor
loop
or
add
mov
push
push
add
adc
jne
mov
mov
push
jbe
adc
fsubrl
aas
fcmovnb
lahf
sub
das
mov
mov
mov
jnp
leave
out
or
ss
dec
lods
and
lods
or
dec
add
ret
sbb
pusha
add
jno
mov
adc
add
outsl
scas
cmp
stos
pop
mov
add
push
out
and
ja
xor
pop
inc
jg
test
cld
fadds
pop
stos
call
js
mov
mov
dec
mov
add
sub
decl
nop
rcll
shrl
mov
clc
inc
push
mov
outsl
add
jo
mov
inc
adc
xor
xchg
push
add
mov
outsl
xchg
add
or
out
jg
jns
dec
adc
add
icebp
sub
inc
les
test
je
push
push
mov
jns
pop
xchg
cmp
adc
incl
mov
cmp
jle
add
je
sarl
into
cmpsb
mov
sub
fcmovb
push
inc
jecxz
sar
fistps
aaa
jl
stos
sbb
movsb
lds
jo
xor
pop
jnp
and
sarl
xor
inc
cld
ljmp
data16
enter
ljmp
movsb
cmp
dec
push
ret
aam
adc
dec
cmp
xchg
repnz
pop
mov
or
ja
das
lds
pop
inc
test
lods
mov
loopne
mov
dec
cmp
pop
push
mov
fcomi
sbb
or
cmp
mov
cmp
pusha
test
adc
cld
xor
test
push
cmp
jl
jnp
pop
mov
sub
out
shll
testb
jmp
and
adcb
lea
jl
jl
push
xchg
lret
pop
lods
jae
or
outsb
sub
adc
cmp
pop
adc
adc
daa
adc
aas
loop
mov
jle
push
add
pop
nop
in
inc
jae
fnsave
mov
and
lds
pop
test
ret
cmp
insb
movsb
loopne
pop
fsubrs
call
inc
lcall
subl
orps
std
std
add
or
fwait
add
jle
xor
xchg
aam
aad
scas
jecxz
sbb
jo
cld
mov
or
les
xchg
rclb
jbe
jns
ljmp
fildll
fstl
jno
orl
and
mov
outsb
xor
mov
adc
mov
scas
mov
sub
iret
push
outsb
mov
mov
movl
dec
add
es
loope
xchg
out
ret
out
adc
jl
arpl
mov
test
lock
sbb
fildll
sbb
in
int3
xchg
je
pop
outsb
out
mov
arpl
out
and
adc
inc
mov
or
push
dec
and
add
jb
pop
add
xchg
jnp
lahf
inc
pop
call
inc
out
inc
addl
fwait
repnz
adc
xor
jge
adc
cmc
popa
adc
lahf
fwait
pusha
mov
inc
jbe
adc
add
prefetchwt1
sub
pop
test
outsb
icebp
jecxz
add
inc
or
push
mov
adc
stos
stc
or
inc
into
aad
xor
mov
or
sub
movsb
add
divb
testl
fistpl
jnp
mov
aam
cmp
push
test
mov
and
negl
or
cmp
call
mov
in
push
rorl
fstps
mov
push
pop
and
sub
pop
out
fcoms
sbb
ret
mov
sub
xchg
mov
call
push
and
aaa
pusha
push
push
xchg
mov
mov
sbb
sti
sbb
mov
and
inc
add
dec
push
adc
add
pop
and
adc
fisubs
mov
ret
jno
ljmp
int3
les
cmp
push
fidivrl
ror
or
fdivrl
pop
fisubl
sarl
movsl
jmp
mov
call
adc
jo
xchg
vmulsd
jmp
subb
add
mov
mov
jmp
push
adcb
lcall
fisttpll
pushf
sbb
add
sub
jae
or
xor
loopne
stc
jg
inc
add
mov
mov
jno
adc
jl
push
iret
add
pushf
sbb
cs
jle
mov
xchg
mov
add
sub
jmp
sahf
push
loopne
and
jl
imul
js
jecxz
mov
out
inc
sub
mov
mov
lret
fstps
push
loop
ja
inc
mov
jg
mov
in
icebp
mov
jge
dec
mov
jmp
sbb
pop
ret
mov
sbb
jae
bound
jmp
inc
add
mov
add
daa
nop
cld
aaa
push
add
cld
pop
jecxz
add
fstpt
inc
mov
bound
ljmp
aas
fildl
dec
jge
sahf
and
outsb
pop
mov
dec
inc
inc
dec
and
fmuls
faddl
cmp
into
hlt
adc
xchg
sub
sub
sbb
lods
mov
movsb
int
or
mov
jg
fldenv
mov
outsl
aam
popa
jae
dec
dec
cmc
test
mull
sub
jmp
xor
push
imul
inc
sbb
sbb
lret
pop
pop
clc
inc
addr16
fcmovbe
pop
dec
adc
stos
out
push
inc
jmp
sbb
mulb
in
maxps
pop
sbb
stos
orb
and
sbb
fidivrl
mov
pop
or
or
sub
pop
shll
push
pop
cmp
jge
lods
pop
adc
pop
jl
test
jne
divl
mov
mov
or
movsl
ss
add
mov
jg
test
dec
lock
xchg
adc
xor
sbb
into
dec
xchg
lock
push
jg
fistl
adc
pusha
icebp
pusha
fiadds
rcr
pop
mov
adc
enter
xchg
test
loop
test
and
and
or
popa
test
es
movsl
pop
push
outsb
outsb
ret
mov
mov
sbb
ja
pop
xor
xchg
lcall
inc
xchg
sarb
xchg
mov
xchg
bound
push
push
inc
dec
and
push
mov
aad
xlat
mov
jns
add
mov
ja
orl
sbb
xchg
lcall
mov
into
mov
or
aas
mov
test
shr
and
xor
imulb
cli
inc
popl
out
cmp
sub
lock
jbe
pop
cli
das
mov
xor
pop
push
inc
adc
sub
and
cli
push
mov
out
mov
test
or
mov
mov
jge
imul
or
push
push
pop
scas
or
push
fbstp
adc
inc
in
aaa
inc
shrb
in
call
or
loop
add
and
mov
fs
icebp
xor
insl
lods
xorl
pop
insl
adc
jne
pop
scas
fadd
sbbl
xchg
push
cmc
int3
pop
aam
mov
dec
mov
and
lds
inc
hlt
add
cmc
or
ret
aam
pop
or
mov
bound
inc
scas
lods
push
inc
mov
stc
pop
aaa
cmpsb
and
and
ret
add
sub
test
xlat
int
jl
pop
push
cmp
mov
outsl
fiaddl
or
in
mov
add
fldt
and
adc
jmp
data16
pop
hlt
idiv
lods
adc
adc
das
call
inc
icebp
out
and
jb
leave
outsl
pop
jo
inc
or
aad
shll
inc
aas
sub
adc
pop
xorl
out
jmp
mov
or
cmp
inc
inc
mov
idiv
test
mov
mov
rol
pop
xor
arpl
loop
in
rcrl
aaa
clc
push
iret
scas
cmp
fdivrs
sbb
inc
js
sarl
mov
ja
insb
adcb
pop
fiaddl
fnstcw
rorb
test
cld
fst
imul
dec
dec
insb
mov
pop
xchg
cltd
jbe
pop
adc
inc
mov
dec
aaa
cld
jg
sti
stos
push
mov
jp
push
lret
in
cmc
pop
and
insb
cmp
mov
adc
inc
rcl
and
adcl
shll
xchg
jnp
mov
inc
test
sub
mov
lods
bound
aaa
dec
enter
adc
jg
jl
pop
stos
mov
test
scas
vmptrld
or
inc
and
xor
es
cmpsb
jecxz
addl
add
add
iret
inc
jg
mov
push
fs
dec
push
movsb
and
int3
aad
mov
icebp
cmp
mov
mov
jmp
ss
sbb
loop
adc
stos
pop
dec
pop
js
enter
pop
jmp
fsubs
dec
aaa
xchg
iret
rcrb
mov
mov
push
mov
sbb
add
stos
inc
and
and
cmp
adc
sbb
push
sbb
insl
xlat
push
mov
mov
popf
cmpb
cmp
cmpsl
xor
fcompl
mov
or
lcall
sub
jecxz
add
jo
lea
mov
shll
in
xchg
cs
js
fucomip
push
push
scas
pop
decl
in
je
mov
jnp
cmc
loope
push
jb
insb
int3
inc
stos
and
adc
mov
test
push
push
icebp
cltd
mov
jl
or
xchg
int
and
pop
ret
lcall
xchg
mov
lods
and
mov
inc
out
adc
pop
cmp
ljmp
fldl
jecxz
or
mov
mov
jl
and
aam
jne
scas
ja
jp
aam
xchg
gs
cld
imul
cmc
cmpsl
gs
jmp
sbb
inc
aaa
mov
xchg
lahf
sti
adc
popa
loopne
dec
pop
ja
jecxz
fnstsw
iret
mov
or
cmp
jmp
sbbl
lds
aaa
call
add
lret
arpl
dec
add
adc
arpl
and
test
aaa
pop
lock
mov
dec
imull
xor
or
push
jo
xchg
cwtl
cwtl
mov
sub
push
xchg
sbb
cmp
test
stos
and
call
pop
adc
int3
sbbl
test
adc
cmp
push
addr16
xchg
mov
lds
ss
ret
inc
lret
pop
test
mov
cld
movsl
out
pop
outsb
outsb
xorb
ss
popa
test
dec
insl
insb
jg
insl
imul
adc
mov
push
cmp
cmp
adc
pop
fcoml
adc
cmp
or
and
push
xor
mov
test
test
add
cmp
lock
cmp
push
icebp
mov
or
outsl
push
add
test
mov
adc
int
and
xlat
sbb
fildl
ss
xor
cli
mov
stos
stc
in
or
dec
fldcw
hlt
mov
jg
push
xchg
ret
push
sub
jmp
xor
daa
mov
cli
fbld
xchg
andb
js
sub
je
mov
lods
jne
sub
mov
sub
lret
adc
das
sub
roll
leave
ffree
jo
in
push
adc
xor
mov
pushf
in
push
mov
push
inc
adcl
das
std
ret
inc
lea
pop
inc
fwait
pop
sbb
xchg
mov
adc
xor
div
mov
push
cmp
gs
xchg
insb
pushl
stos
jecxz
push
dec
notl
and
lods
pop
pop
mov
push
gs
push
sti
xor
cmp
push
cmp
mov
inc
mov
xchg
jnp
insl
sbb
jne
aaa
movsb
jnp
aad
mov
sbb
jnp
lods
ds
mov
cs
adc
addl
nop
lds
arpl
mov
insb
test
jnp
cmp
dec
push
sahf
adc
and
push
and
mov
xor
xchg
cmc
sarl
mov
popf
fsubrs
cltd
xor
dec
test
mov
pop
lock
cmp
xchg
cmpsb
sbb
or
lock
push
or
dec
pushl
cs
fs
add
push
xor
push
insb
jle
add
add
or
daa
mov
inc
mov
add
xchg
pop
cli
cmp
adc
or
sub
jge
adc
loopne
sbb
pop
mov
xchg
hlt
call
incb
or
pop
jnp
fst
and
js
push
adc
rol
clc
icebp
push
inc
int3
sub
add
mov
inc
and
mov
push
rclb
cld
lret
cmp
inc
scas
jbe
mov
test
leave
es
inc
outsl
inc
and
shrl
pop
addr16
je
and
clc
pop
mov
xor
aam
push
inc
fdivrl
incl
push
arpl
adc
fcmovb
fisubl
das
pop
lods
push
sub
sbb
jb
inc
shll
ret
inc
clc
mov
push
fnop
pop
fs
lret
push
sbb
xor
sub
call
jl
sbb
xlat
push
push
aam
and
adc
add
and
into
ret
xchg
into
lds
sub
orl
mov
mov
clc
dec
or
std
cmp
and
aad
adc
mov
andl
shrl
sarl
call
leave
movb
jbe
cmp
inc
subb
adc
sbb
test
xchg
dec
aam
xchg
cmc
mul
sub
and
inc
mov
xchg
hlt
in
in
sbb
pop
push
dec
inc
or
inc
inc
jo
in
adc
add
mov
subb
dec
int3
mov
loopne
jp
call
aaa
mov
xchg
or
sbb
and
dec
sub
enter
fnstsw
adc
cmp
xor
in
or
or
or
adc
cwtl
insl
test
int3
daa
loopne
leave
popf
sbb
and
adc
inc
pop
in
hlt
stos
sub
add
arpl
pop
lret
push
les
popa
lret
xor
or
enter
add
and
cld
fdivl
push
dec
sbb
dec
pop
sub
or
cld
sbb
fistl
mov
xor
mov
aas
stos
js
js
shlb
shll
call
loopne
std
pop
inc
insl
pop
movsb
clc
push
xchg
stc
mov
add
cmc
sub
or
dec
es
dec
or
xchg
xchg
add
xchg
xchg
pop
adc
mov
mov
orl
cld
inc
adc
sti
inc
inc
add
mov
push
jmp
adc
loope
fcoms
cmp
add
inc
sbb
imul
sbb
adc
call
bound
pop
sarb
cmp
loop
in
aaa
outsb
add
jl
fbld
jecxz
clc
nop
je
sbb
mov
aam
push
fbstp
enter
leave
or
lock
cli
sbb
xchg
pop
adc
sub
cmp
mov
push
or
sbb
lds
inc
xchg
test
test
and
loopne
imull
adc
jbe
mov
sub
call
sti
sahf
dec
dec
adc
sarb
inc
scas
jge
fwait
inc
sbb
loope
xchg
push
ret
add
int3
fisttpl
push
pop
dec
and
jnp
xorl
dec
and
push
xchg
or
movsb
and
mov
es
pushf
ja
insl
dec
cli
sti
push
add
inc
xchg
or
aas
add
mov
and
inc
or
mov
lods
sub
mov
inc
add
clc
push
cmp
in
jo
orb
cmp
or
aas
bound
xlat
cli
decl
mov
dec
jbe
in
add
adc
mov
xchg
cmp
xorl
movsl
add
movsl
dec
enter
bound
mov
adc
outsb
js
xor
outsl
inc
push
or
and
jno
fimull
cld
push
sbb
sub
pop
in
std
das
add
int3
rorl
and
inc
bound
mov
outsb
imul
mov
ret
mov
pop
jge
pop
fsubs
add
inc
sbb
push
sub
hlt
pop
std
add
jbe
outsl
aas
test
loope
or
cs
jne
push
mov
into
loopne
jo
scas
int
cmpsb
fldcw
and
notb
xchg
mov
enter
cli
adc
xchg
out
xor
mov
cmc
add
jg
mov
ja
sbb
xor
rcr
add
cmpsb
fdivs
jb
mov
xchg
jns
dec
hlt
outsl
and
mov
xchg
mov
loop
in
repz
std
or
insb
dec
scas
xchg
nop
icebp
sahf
push
push
pop
ret
or
sub
rolb
xchg
sbb
push
ja
mov
inc
pop
add
das
push
aad
int
jge
push
or
adc
pushf
xor
hlt
outsl
xchg
subb
sub
cs
or
mov
pop
orb
hlt
adc
loope
mov
pop
dec
mov
jb
xchg
pop
ljmp
lods
inc
jmp
add
sbb
inc
push
fisttpl
ljmp
ljmp
inc
pusha
add
dec
fimull
sbb
test
adc
loope
adc
je
das
rol
loop
adc
out
clc
outsl
sbb
rorl
mov
pop
lret
scas
lds
adc
outsb
and
push
mov
adc
xor
das
gs
inc
or
or
sbb
pop
or
adc
fsub
data16
mov
pop
xchg
aaa
and
sahf
sbb
decl
or
iret
cmp
insb
nop
bound
cmp
fwait
sub
mov
pop
fcoms
jns
xor
or
mov
and
cs
xchg
sub
movsb
in
and
js
test
imul
jae
ficoms
andl
adc
fldl
sub
mov
mov
mov
or
call
jl
mov
xorl
or
fiaddl
pop
int3
dec
nop
sub
jnp
add
pop
adc
out
inc
pop
xchg
push
hlt
sti
scas
mov
mov
sti
ficomps
ret
testl
fs
aas
lods
mov
rorb
pop
stc
cmp
in
jmp
aaa
es
stc
jmp
jbe
or
call
dec
push
mov
mov
and
pusha
outsl
mov
xchg
testb
push
jne
inc
dec
loop
sti
pop
mov
fnstenv
gs
xor
or
in
xor
pusha
sti
test
les
aam
mov
movsbl
dec
out
scas
lock
arpl
imul
pusha
cmp
xor
mov
jo
pushf
movsl
aas
outsb
outsl
pop
cmp
and
test
mov
push
fucom
push
add
jl
jne
mov
ljmp
fs
jbe
or
add
adc
xchg
mov
leave
or
xchg
test
cmp
jnp
arpl
outsl
mov
sbb
rol
addr16
loope
inc
xchg
or
sbb
test
or
ds
int3
fists
pop
sub
cmpsb
add
cld
bound
decl
inc
cmp
fs
sbb
fsubp
fldt
sub
imul
aaa
sbb
xchg
mov
push
cmc
arpl
ss
xchg
stos
mov
pushf
sub
sbb
xchg
xchg
add
jmp
fimuls
add
pushl
add
repz
and
inc
or
sbb
sti
pusha
inc
cmpsl
clc
mov
jle
lcall
fisubrl
sti
xchg
mov
sub
mov
jbe
xchg
std
stos
lahf
fisttps
shlb
push
mov
xor
add
mov
dec
test
jmp
repnz
sbb
mov
cmp
mov
adc
mov
rclb
or
xor
test
jo
das
ret
push
clc
mov
add
or
pop
sub
fildll
cmpsb
movl
pop
push
dec
mov
stos
rol
shr
bound
das
rcrl
xchg
adc
outsl
sub
jnp
fxtract
sbb
jle
inc
mulb
fadd
js
mov
movb
loope
jp
insl
jbe
mov
cli
inc
test
idiv
das
mov
incl
inc
mov
lret
testb
es
filds
fsubrs
pop
add
movsl
or
sahf
rcll
xchg
fildll
lock
add
xchg
insl
lds
or
fcmovb
adc
fildl
loop
pop
cmp
out
jge
sti
not
dec
lcall
clc
enter
pop
sbb
test
inc
divb
subl
add
jge
jge
and
stos
xor
pop
pusha
inc
mov
pusha
inc
lret
xor
xorb
data16
sub
das
sbb
rclb
outsl
add
cwtl
cmp
shrb
aas
inc
dec
neg
sbb
aaa
ret
sub
mov
pusha
test
psubb
mov
test
stc
outsl
aad
inc
daa
dec
adc
dec
jle
add
in
xchg
and
cmp
shll
ficomps
stos
dec
icebp
inc
lret
cmpsl
movsb
test
test
ret
pop
andl
xor
add
or
loope
and
adc
movsb
ret
adc
ss
mov
mov
push
es
callw
xchg
fidivl
cmpsl
sbb
xor
push
out
mov
sti
and
cmp
fdivs
inc
jnp
in
movsb
adc
ret
or
outsl
clc
jg
dec
push
adc
pop
pop
jge,pn
out
shll
push
adcb
pop
mov
clc
js
dec
pop
pusha
jecxz
loopnew
sub
icebp
arpl
mov
push
data16
push
sarl
mov
add
add
inc
test
inc
sub
decl
orb
jl
shl
or
xor
cmpsb
stos
inc
ja
js
ljmp
insb
cld
movsbl
stos
sbb
in
inc
xor
inc
xchg
incb
push
xchg
repnz
and
sub
adc
xor
mov
stos
mov
xchg
add
dec
movb
mov
or
cmp
cwtl
ret
es
outsl
jl
fmuls
xor
pop
cmp
orb
int3
lods
mov
aaa
incb
push
mov
and
cli
ret
sti
mov
sbb
xchg
push
add
lds
popa
jnp
inc
add
cld
dec
inc
push
clc
add
add
out
mov
outsl
cmp
inc
jb
mov
inc
lock
mov
push
nop
cli
sbb
sub
mov
ss
or
stos
in
sbb
push
or
loop
sbb
into
pop
mov
dec
jo
fs
pop
lea
and
shrb
and
in
xor
movsb
stc
loopne
adc
je
decl
out
clc
or
jns
addr16
push
jl
xchg
xor
mov
mov
mov
clc
adc
mov
pop
js
std
gs
into
addl
or
out
mov
sti
adc
lea
lahf
xchg
sbb
faddp
sbb
pop
add
or
leave
mov
das
shll
loop
push
mov
mov
pop
negl
push
mov
ret
push
int
fnstenv
gs
lret
cmc
scas
cwtl
mov
mov
jmp
pop
and
push
loope
mov
adc
mov
les
pop
pop
push
outsl
leave
cwtl
daa
test
lahf
mov
xchg
push
dec
mov
fistl
lea
adc
fcmovnb
jno
adc
inc
mov
lea
cwtl
pop
inc
inc
sar
mov
repnz
lret
sti
enter
aam
pop
inc
add
mov
mov
push
add
adc
scas
out
sub
js
jne
sbb
add
pop
je
mov
inc
pusha
inc
shrl
sub
mov
dec
push
push
xor
ret
cld
jmp
push
mov
push
testb
push
pop
call
or
je
nop
xchg
out
or
and
adc
in
mov
mov
inc
xchg
pop
repz
daa
ret
lret
mov
lcall
cmc
mov
adc
cs
or
stos
xor
rorl
or
push
mov
xchg
mov
std
push
insl
shl
fs
psubw
js
fstpt
inc
or
mov
enter
push
int3
pop
mov
loope
mov
call
das
or
inc
in
inc
dec
sbb
aad
mov
dec
mov
test
movsl
dec
pop
mov
sbb
mov
xlat
mov
insl
jg
xchg
adc
xchg
aaa
mov
or
cwtl
jle
xor
dec
add
sub
sbb
xorl
xchg
daa
dec
call
cmp
test
mov
dec
push
sbb
sbb
mov
movsb
mov
xor
or
push
clc
movsl
insl
add
sbb
or
xchg
call
test
icebp
jecxz
mov
jnp
xchg
sbb
orl
test
fmulp
movb
and
outsb
or
adc
mov
xor
jecxz
lds
data16
add
subb
cltd
jmp
leave
js
dec
xchg
dec
jno
inc
aad
cmc
das
push
mov
or
inc
xchg
sbb
add
add
bound
std
fwait
dec
pop
in
and
jb
mov
mov
or
push
push
icebp
out
dec
jl
cmpsl
push
mov
adc
lret
jne
mov
in
jl
cli
out
ljmp
arpl
push
les
sub
mov
cld
sub
aaa
push
mov
sti
jp
data16
xlat
nop
insb
pop
jl
xor
sbb
imulb
scas
das
ss
test
inc
xor
jnp
mov
and
sbb
dec
lea
sqrtps
scas
and
cmp
outsl
das
mov
cmp
inc
dec
test
sbb
outsb
or
shlb
mov
pusha
into
mov
movsb
cmc
xor
mov
addr16
mov
push
outsl
pushf
aad
imul
aaa
sbb
jnp
out
int
pop
sub
xor
repnz
clc
repnz
push
jmp
mov
and
inc
lahf
push
sbb
mov
xor
jg
pop
xor
and
dec
dec
imul
mov
pop
loop
aam
and
mov
inc
mov
lahf
jmp
movsb
iret
dec
cwtl
jge
loope
push
fiaddl
addb
cmp
sub
sbb
adc
and
clc
cs
clc
movsb
shlb
adc
aas
insb
rclb
fistpll
aam
xor
sub
push
push
adc
leave
popa
xchg
icebp
or
mov
pop
add
outsb
aam
mov
push
dec
mov
das
aad
xorl
jne
cmp
inc
outsb
jae
das
insb
cmc
sub
popf
data16
jne
xchg
dec
add
and
adc
inc
std
incl
adc
data16
iret
ret
sbb
call
out
ljmp
pop
cli
test
popf
inc
and
mov
stc
jge
ljmp
bound
pushf
cmpb
repnz
into
xchg
push
arpl
cmp
insl
mov
cmp
hlt
mov
ds
ret
adcl
call
lcall
outsl
ljmp
push
mov
mov
sbb
sbb
in
test
sub
xor
shl
cmpl
adc
imul
adc
push
fildll
xor
insb
dec
out
sti
mov
fsts
xchg
mov
rcrb
add
cli
aam
orb
dec
in
add
int3
sub
add
sub
or
jo
sub
push
inc
xchg
inc
lock
sti
sbbl
stos
mov
mov
fcomps
push
add
pop
dec
mov
sahf
pop
ss
das
xlat
xor
jno
scas
adc
call
add
lds
cmpsb
add
cmc
rcr
out
mov
cld
and
or
rcrl
or
dec
add
loop
cld
and
ret
add
out
push
add
sbb
mov
xchg
lret
add
push
shll
ror
push
push
stos
lods
out
test
xor
pop
mov
sbb
leave
shll
xor
and
in
mov
jmp
inc
sub
ret
shl
cmp
mov
mov
jbe
in
inc
add
push
cld
dec
cld
pop
aam
notb
push
add
add
add
sbb
sub
stc
mov
mov
push
adc
insl
mov
pop
jp
xadd
xor
or
fs
cmp
hlt
int
das
ror
aaa
add
stos
and
or
add
subl
pop
fwait
pop
dec
inc
and
in
fiaddl
sub
xor
mov
sbb
dec
inc
adc
inc
mov
lea
jne
ficoms
ror
mov
jge
fldcw
xorb
or
or
jl
pop
add
dec
push
notl
cmp
pop
xchg
jae
aas
jmp
jo
test
stos
push
pop
fadds
add
sbb
aaa
mov
pushf
push
sbb
dec
xor
or
cmp
ss
sub
push
outsb
fisttpll
sbbb
xchg
ljmp
mov
mov
lcall
loope
jl
adc
div
or
leave
push
stos
mov
fidivrl
ds
pop
add
jl
inc
mov
jns
and
int
dec
not
push
and
cli
iret
sub
adc
movsl
mov
and
inc
enter
xlat
cmp
shlb
xor
repnz
xor
mov
push
and
inc
xchg
mov
orl
cwtl
fadd
or
pop
dec
faddp
mov
inc
add
mov
stc
in
in
adc
sbb
sub
mov
mov
scas
dec
jb
lret
xchg
pop
fs
into
call
pop
shrb
xchg
ds
sub
fists
mov
xor
and
sub
dec
pop
mov
mov
fiadds
push
add
stos
add
push
adc
or
xor
scas
and
aam
int3
add
adc
daa
sub
rorb
xchg
and
ljmp
add
push
cmp
add
or
xchg
adc
mov
xchg
mov
test
sbb
insb
mov
adc
inc
mov
mov
sub
push
inc
add
mov
sub
test
add
stos
test
cmc
scas
aas
pushf
call
in
push
push
sbb
push
xchg
dec
inc
adc
adc
addr16
das
or
and
ret
fists
aad
add
adc
and
add
pop
aam
shll
dec
mov
push
fsubrl
push
shrl
shlb
popa
sarb
int3
hlt
fsub
pop
test
sub
hlt
mov
int3
lahf
mov
mov
mov
data16
or
add
sahf
or
cmp
add
ljmp
push
mov
cwtl
outsb
clc
push
inc
xchg
lret
scas
push
add
aaa
cli
cmp
jp
hlt
scas
and
aam
inc
hlt
push
sub
retw
pop
rcll
xor
jb
mov
mov
sbb
bound
inc
xor
mov
xlat
pop
ss
ds
clc
hlt
xor
lcall
popf
loopne
jp
jl
add
repnz
fisttpl
subb
xchg
rorb
push
rorl
inc
addb
xlat
sub
pop
add
cli
in
fs
movsb
das
push
dec
push
push
pop
push
sbb
adc
stos
das
sub
sbb
shlb
addr16
cmp
in
je
movsb
add
sar
sbb
popf
lods
mov
adc
or
add
rcrl
mov
pop
andl
or
xchg
in
sub
inc
cltd
fnsave
sbb
fdivr
rol
push
icebp
jbe
loope
sti
sbb
add
mov
imul
sub
popf
xchg
movb
lods
xorb
add
stos
cwtl
hlt
fldcw
cs
add
xlat
inc
rcrl
jo
pop
push
push
arpl
xor
lret
adc
lret
and
rorb
sbb
sbb
xchg
cmp
push
xor
mov
ficoms
stc
jo
shlb
clc
fsubs
scas
dec
cmp
out
push
inc
cmp
pop
adc
xchg
mov
add
dec
pop
and
xor
stos
shlb
jle
scas
push
or
or
sub
jle
cs
sbb
inc
sahf
add
fistps
xor
out
arpl
rolb
pop
aam
push
cmp
inc
cld
stos
das
lods
push
ja
push
xor
push
add
adc
incl
push
fwait
test
mov
imull
dec
loopne
mov
push
or
mov
inc
push
dec
mov
pop
inc
pop
mov
jae
std
or
test
xchg
jecxz
loope
cli
inc
mov
adc
std
and
sub
push
inc
mov
xchg
cmp
push
lcall
loopne
das
aad
adc
iret
leave
incl
mov
add
sbb
sub
fadds
icebp
fucomip
add
aam
jnp
ret
and
in
call
dec
mov
in
mov
popa
cs
mov
cmc
pop
lock
cmp
cmpsl
jb
jno
lock
xor
pop
out
lods
lock
ja
inc
mov
and
push
or
pop
dec
xchg
leave
es
rolb
stos
imul
ret
inc
mov
mov
pop
jg
add
add
out
xchg
stos
cmp
sbb
lret
sti
xor
push
sbb
outsl
cmc
jge
push
add
ret
sbb
dec
fs
sbb
out
in
sub
pop
add
jecxz
cwtl
inc
jecxz
ficoms
ficoml
enter
call
loope
mov
push
mov
stos
cmp
int3
sbb
sub
ret
stos
test
hlt
insb
mov
jl
add
inc
shlb
pop
mov
adc
or
mov
test
pop
xchg
jg
add
add
mov
test
sbb
push
lock
imul
mov
sbb
mov
mov
push
sub
loope
jl,pn
popf
pop
aaa
ljmp
push
shlb
or
xor
ret
push
icebp
xchg
outsl
and
and
cmp
add
fisubs
negl
xlat
ret
stc
xchg
sub
les
addb
adc
inc
sub
mov
mov
or
push
adc
jmp
test
insb
or
scas
out
dec
filds
jno
mov
jle
cld
lds
in
xor
adc
add
push
mov
in
je
mov
xor
adc
or
lret
dec
outsl
push
mov
cwtl
push
sub
sub
add
xchg
ss
jno
dec
out
scas
jge
lret
xchg
xchg
ret
sti
loopne
xor
ljmp
pop
mov
movsl
mov
push
je
push
push
mov
xchg
and
jo
xchg
repnz
mov
push
mov
aam
in
or
rorl
movsl
sbb
call
je
and
pop
add
sbb
and
call
aam
in
pop
hlt
or
sub
xchg
sbb
rcrb
pop
sub
aad
movb
lea
jp
sbb
imul
xor
or
xor
shll
pop
insb
das
cld
outsl
or
and
and
es
mov
rolb
mov
aas
and
stc
outsl
roll
sbb
xchg
cmp
ja
cmp
or
xor
sub
jo
es
mov
jo
lods
inc
mov
fmuls
in
mov
xor
mov
outsb
xor
sbb
mov
push
add
and
icebp
fmull
cmp
nop
push
and
test
loopne
notl
mov
aam
std
outsl
das
cwtl
sbbb
add
adc
jecxz
daa
clc
out
aam
sbb
jg
fdivrl
and
xor
divb
sub
pushl
or
add
imull
pop
mov
data16
repnz
and
ds
push
std
in
and
sbb
aaa
mov
cmp
aas
and
add
and
ret
movsb
insl
xor
push
push
inc
iret
add
sub
or
aam
lock
in
xor
mov
jle
cwtl
loope
lock
xchg
adc
fwait
jg
rcl
xchg
push
mov
mov
std
xor
and
dec
ror
mov
mov
sbb
jae
sub
push
mov
int
fwait
loopne
xor
jge
push
in
xchg
mov
fisubrl
mov
fst
test
jecxz
mov
enter
dec
mov
rorl
jne
int
cwtl
adc
mov
jbe
mov
out
das
sbb
cltd
mov
cltd
xchg
fildll
add
inc
push
pop
jecxz
cmp
pop
fdivs
xchg
lret
loop
sar
loop
dec
xor
lods
decb
push
adc
mov
stc
aaa
bound
imul
pop
gs
or
cltd
incl
stc
outsb
mov
mov
fidivs
lock
cld
and
shl
jnp
adc
filds
data16
push
daa
add
fcomps
mov
arpl
push
or
cmp
loope
lret
sbb
cmp
cmp
scas
fcoms
add
or
bound
inc
inc
add
pop
mov
bound
xchg
mov
call
add
lcall
in
xorb
mov
inc
addb
sbb
shll
ljmp
dec
sti
and
pop
or
or
cs
inc
rol
sbb
adc
lds
sbb
aaa
xchg
ja
aad
and
push
and
roll
call
sbb
mov
vsubsd
sbb
xor
push
cmpsb
faddp
pop
repz
iret
int
cmp
add
push
call
hlt
inc
fstpt
xchg
mov
pop
int
mov
mov
rolb
add
add
mov
fists
test
jge
cltd
popf
mov
jmp
mov
cmp
mov
and
ds
mov
mov
loop
loopne
dec
adcl
cmp
lock
loop
and
mov
lcall
iret
sbb
scas
jmp
ljmp
and
test
mov
call
or
adc
aas
mul
xor
xchg
lock
sub
inc
insl
adc
sbb
arpl
add
push
lahf
loop
mov
pop
pop
mov
incl
jo
adc
adc
adc
in
jnp
dec
addb
cmp
outsb
push
out
int
jg
push
xchg
sbb
dec
inc
cltd
rcrb
dec
xchg
shrb
pop
ds
mov
add
rcll
incl
mov
mov
inc
dec
iret
pslld
int3
jp
jne
subb
inc
jmp
mov
in
mov
jns
xchg
lcall
pop
inc
inc
inc
out
into
inc
mov
xchg
jo
jecxz
pop
loopne
mov
nop
and
cmp
fldl
jmp
mov
mov
fadd
loope
sti
pop
mov
ja
ljmp
inc
sbb
mov
inc
jmp
sub
scas
sub
and
mov
push
hlt
xchg
mov
imul
fs
sub
test
in
push
outsl
add
add
leave
filds
and
cs
test
daa
mov
or
loopne
sub
mov
sbb
icebp
les
les
inc
jp
pop
mov
out
add
scas
cmp
fistpl
add
dec
cwtl
jl
insb
sbb
stc
add
outsb
mov
xchg
mov
adc
sbb
cmp
xor
cmp
inc
sub
sbb
mov
inc
xor
mov
xor
jp
add
cmp
jle
xchg
fiaddl
jle
sub
jae
outsl
dec
je
mov
or
dec
adc
inc
lds
adc
incl
mov
cmpsl
dec
mov
faddl
fcomps
pop
mov
leave
iret
repnz
push
pop
push
hlt
cld
sbbl
loopne
loop
xor
jno
pop
mov
adc
or
jno
pop
inc
and
xor
pop
test
jns
sub
pop
pushf
push
pop
or
insl
fcmovnu
fwait
sub
pop
jl
aaa
ja
ds
sub
mov
push
aaa
lcall
push
push
aam
adcl
in
xchg
negl
pusha
lcall
gs
addl
inc
push
adc
xchg
shll
mov
dec
cmp
push
test
push
pop
call
in
lock
insb
push
add
dec
adc
and
cwtl
dec
jp
loop
out
shr
push
rclb
cli
cs
shlb
aas
test
jno
rolb
mov
orb
bound
mov
dec
inc
das
sarb
mov
and
or
inc
or
push
inc
addb
add
mov
mov
loope
cmpb
fistl
adcb
call
sbb
int3
das
mov
xchg
inc
je
repz
loopne
mov
dec
rclb
add
loopne
sbb
xor
and
jnp
sub
arpl
jp
pop
icebp
shrl
fdivs
into
pop
jno
in
in
inc
lds
int3
rclb
andb
out
sub
and
cs
push
mov
test
fildll
js
xchg
sbb
xor
jp
jno
jne
cmp
adcb
ret
out
test
and
cmp
adc
mov
incl
add
add
js
test
subb
inc
aas
add
push
jp
shrb
in
xchg
aam
shl
pop
jp
stc
dec
loopne
push
inc
mov
mov
cld
sbb
jg
jbe
push
addr16
pop
pusha
rol
lret
test
cmpsb
sarl
icebp
in
sbb
insl
xchg
in
loope
push
out
cli
sbb
xor
mov
mov
xor
test
or
push
inc
sbb
mov
dec
pop
popa
sbb
jne
push
add
mov
push
js
mov
adc
sub
lret
mov
stos
bound
fmuls
lcall
adc
sub
insl
imul
or
scas
inc
mov
loop
cld
or
loope
push
or
push
push
lock
faddl
fmuls
and
aam
ret
mov
mov
jge
push
movsl
push
mov
cmpsl
add
push
js
adc
pushf
inc
loopne
jo
cmc
pop
adc
inc
sbb
add
test
test
aad
xchg
mov
hlt
or
cltd
cmp
mov
mov
test
adc
lcall
cmp
daa
test
fistps
leave
in
lods
outsl
add
arpl
dec
mov
ds
icebp
pop
or
cmpb
iret
pushf
cmp
test
xorb
or
das
arpl
pop
cld
xor
xor
imul
clc
sysexit
or
push
push
mov
insl
outsb
mov
cwtl
cli
arpl
pop
sub
inc
sub
dec
shll
je
mov
sbb
xchg
test
es
jg
inc
inc
dec
mov
xor
pop
mov
or
or
mov
mov
js
into
jb
dec
insb
and
or
outsl
fs
mov
xor
sbb
jb
cmpsl
lock
jnp
scas
pop
cmc
mov
out
out
pusha
les
mov
cld
or
add
out
test
or
xor
es
pop
add
out
mov
lea
into
xchg
enter
test
xor
mov
daa
mov
lcall
sbb
lcall
mov
inc
cld
xchg
or
adc
jmp
mov
loopne
cmp
mov
enter
xchg
mov
lods
xchg
cmpsl
js
jnp
jg
xor
push
xchg
sub
cmp
or
loop,pn
or
push
xlat
cltd
add
sbb
fadds
pop
xorb
cltd
test
mov
mov
inc
mov
mov
jl
imul
adc
in
test
xchg
lods
aas
sbbb
std
dec
sub
mov
je
mov
loopne
hlt
icebp
sbb
cmp
adc
bound
lock
or
cmp
incl
mov
add
xor
sub
push
icebp
aas
nop
jns
mov
sar
or
xor
scas
sbb
test
insb
inc
out
and
std
rclb
xchg
outsb
xchg
or
sbb
call
aam
adc
inc
and
sbb
cld
adc
push
lock
ss
fsubrs
sub
mov
rorl
movsl
fimull
es
jg
jne
xor
sbb
rol
fadd
arpl
push
mov
xchg
push
jecxz
xchg
notl
sbb
push
rcll
pop
pop
xor
lods
mov
jnp
insl
decl
movsl
push
mov
pop
je
pop
shll
loopne
or
pop
arpl
in
mov
cmc
out
or
or
mov
push
int3
inc
dec
cmp
cli
pop
js
push
adc
mov
adc
sbb
addb
dec
lahf
shlb
mov
mov
mov
mov
jbe
cmp
addl
jecxz
or
xchg
ja
jne
xor
mov
and
lret
jbe
lcall
loopne
cltd
je
cmp
sbb
jg
stos
ljmp
xor
leave
in
js
pop
add
xchg
jo
mov
and
adc
shll
jmp
cld
loope
loop
adc
test
mov
aaa
jl
sbb
push
mov
sbb
dec
movsl
push
push
add
notb
jns
cwtl
stos
sub
cmp
dec
ja
xchg
jl
mov
outsb
ja
stc
pop
mov
adcl
rcr
or
or
cmpsl
mov
dec
out
bound
sub
test
icebp
jno
loopne
in
xchg
xchg
pop
add
or
adc
push
shrb
out
xchg
out
or
fdivs
call
xorb
jg
insb
rcrl
mov
inc
push
test
fstpl
xorb
xor
sub
das
jge
bound
es
leave
aaa
ja
push
mov
push
clc
xchg
sbb
push
fcmovnu
fimull
cmovnp
dec
addr16
pushf
push
jle
mov
ror
out
test
cmp
les
cmpsb
pusha
int3
mov
inc
jge
inc
jns
sub
aaa
sub
add
push
mov
xor
mov
les
loopne
xchg
jo
mov
sar
push
sub
jle
frstor
cmc
pop
lds
sbb
int3
cld
negl
inc
mov
mov
jo
js
mov
sbb
mov
sbb
aad
pusha
add
sbb
adc
int
fstl
aas
fbld
dec
loop
hlt
popf
repz
lcall
out
add
push
mov
aam
rolb
push
xor
add
and
test
cld
fsubr
add
add
movsl
lcall
push
out
inc
sarb
jge
pop
popf
call
pusha
push
mov
divl
sub
push
push
inc
xor
stos
or
test
sub
js
jno
adc
pop
test
jb
stos
test
jae
or
lods
inc
icebp
add
ljmp
jle
dec
fldcw
mov
mov
roll
dec
add
adc
jnp
or
sub
inc
jle
or
lret
push
dec
jg
dec
cmp
cmp
dec
outsl
or
test
mov
sbb
js
lods
test
sbb
ficoml
xor
push
cltd
mov
sbb
mov
out
mov
sub
mov
mov
mov
js
pop
das
sub
ljmp
inc
inc
fwait
push
inc
stos
loop
in
pop
jo
mov
dec
xor
mov
sbbl
sbb
push
jae
pop
adc
cld
sbb
cltd
daa
sub
lcall
dec
les
xchg
test
rcrl
push
into
pop
std
int
divl
mov
jnp
add
subb
mov
push
mov
push
and
inc
fmull
and
pop
dec
jb
loope
cmp
adc
lahf
sub
aam
sub
sub
xor
add
sbb
cmp
push
sub
add
rclb
mov
ljmp
test
mov
je
enter
or
lods
push
je
test
insl
mov
add
mov
jo
fistl
addr16
add
xlat
or
stos
sub
xor
cwtl
aam
loope
sbb
lret
lods
clc
inc
inc
rcrb
enter
mov
rolb
in
jne
mov
add
pop
mov
lahf
push
bound
loopne
arpl
lock
lods
dec
fldl
pop
enter
sbbb
dec
stc
cmc
add
into
lods
push
push
js
push
push
loopne
mov
push
xchg
cli
icebp
mov
enter
int
mov
adc
inc
fisubrl
mov
inc
int3
fs
fbstp
add
hlt
daa
push
ds
jno
js
add
sub
shl
in
fisubrl
scas
or
push
jp
fistpll
sahf
insb
roll
jo
mov
sub
push
cs
dec
rolb
mov
xchg
push
out
jp
xchg
xchg
and
aad
add
dec
gs
js
jo
sub
jns
ja
push
xchg
adc
mov
icebp
or
and
mov
jmp
mov
and
lods
shll
push
xchg
inc
adc
and
andb
icebp
daa
adc
lods
addb
sub
insb
je
in
xor
fwait
inc
adc
xchg
xchg
out
adc
and
nop
and
sbb
sub
les
scas
xor
dec
test
les
mulb
arpl
pop
adc
roll
dec
push
adc
add
sbb
test
lcall
xor
dec
lcall
scas
xor
shlb
inc
sbb
adc
xrstors
jmp
lock
stos
push
push
mov
xorb
xchg
ret
js
lock
dec
add
leave
cltd
unpckhpd
adc
or
sub
xchg
mov
cmp
push
test
add
sub
call
and
mov
and
fistl
loopne
dec
push
or
inc
and
add
or
jns
popf
mov
or
iret
cmpsl
popa
test
mov
mov
pop
mov
cmp
test
push
or
push
js
lea
rcll
add
aas
xor
mov
aas
out
mov
jl
dec
enter
pop
pop
test
mov
sbb
dec
lcall
xchg
repz
jnp
sub
lcall
hlt
mov
xor
mov
dec
sbb
dec
push
shll
mov
xor
and
enter
mov
pop
inc
test
das
dec
mov
scas
dec
nop
aaa
test
adc
xor
xor
mov
and
add
addb
rcll
inc
iret
cmp
cmp
add
lea
int
xlat
or
enter
bound
stos
psubsb
mov
rolb
adc
cld
mov
stos
test
popa
out
ret
mov
test
rcl
invd
inc
cmp
mov
jmp
add
test
xor
jge
mov
adc
jns
std
aam
inc
les
adc
je
loope
inc
xchg
int
iret
and
mov
adc
aam
mov
sub
add
arpl
into
es
and
push
aam
mov
xor
cli
int
add
les
xor
fwait
sub
das
sbb
xlat
fidivrl
pusha
jg
aam
or
incl
adc
add
pop
enter
test
add
je
filds
outsl
push
push
mull
xchg
rorb
mov
aam
dec
push
pop
pusha
or
ss
push
adc
sub
xor
aaa
inc
icebp
cld
mov
std
add
lods
inc
int
dec
imul
jg
sbb
in
and
idiv
cmp
aad
imul
xorb
shlb
test
lret
or
incl
insb
out
sbb
idivl
adc
popa
aam
xchg
cmp
fstpt
bound
scas
fidivs
sub
adc
sub
test
cmp
mov
pop
or
xchg
clc
cld
dec
xor
and
xchg
cmp
mov
sbb
jmp
pop
dec
add
push
jbe
push
cltd
dec
rclb
loop
adc
iret
es
sub
adc
cli
cmp
test
jg
cld
mov
mov
ret
lidtl
pushl
fidivl
gs
repz
push
mov
incl
mov
int3
mov
xor
hlt
stos
pop
call
jmp
mov
add
and
aaa
add
call
sub
jne
pop
sbb
repnz
pop
or
pop
push
icebp
lret
sbb
add
sbb
or
sub
mov
xchg
mov
lahf
mov
fstpt
iret
add
pusha
add
push
shl
mov
or
aaa
add
push
sbb
or
pop
movsl
clc
push
cmpsl
pop
ret
loope
ss
rcrb
popf
aaa
xchg
out
fidivl
lods
xchg
mov
ljmp
imulb
xor
add
das
adc
mov
xor
sbb
movsb
mov
test
push
or
icebp
add
mov
add
icebp
cmp
sbb
fdiv
mov
iret
lods
sarb
mov
int3
int
hlt
fwait
mov
addb
cmpl
movsl
ficoml
xor
xchg
test
pop
cmp
xor
or
sahf
loopne
sub
cltd
or
mov
sbb
lea
or
add
ss
mov
cmpsb
cmp
das
cwtl
sysret
inc
add
sub
xor
testb
jo
ret
dec
in
ja
lods
jne
push
hlt
and
jl
adc
out
push
jecxz
adc
fnstcw
and
test
cli
cmpsb
and
push
sub
adc
sbb
ror
cmp
add
aam
nop
aaa
sub
sub
roll
add
sub
fwait
push
les
mov
cld
or
lock
les
dec
sbb
inc
andb
imul
cmp
sarb
inc
pop
daa
adc
aam
mov
ja
mov
dec
movl
ja
ds
and
add
mov
or
jo
dec
mov
pop
inc
pop
enter
ret
mov
cltd
mov
mov
ret
or
orb
inc
loopne
mov
cmp
enter
mov
inc
inc
adc
in
inc
in
jne
fldl
hlt
mov
cs
mov
outsl
cld
test
mov
lods
rorl
lods
adc
or
lcall
js
iret
ja
hlt
mov
nop
push
add
leave
ds
fstps
cmp
or
shl
inc
shll
cwtl
les
shlb
int
je
mov
iret
shll
xchg
invd
les
jbe
test
les
enter
loopne
mov
add
inc
pop
mov
enter
shlb
aaa
xor
cmpl
aad
or
adc
loop
sar
sub
jl
sbb
adc
and
test
and
mov
or
das
push
lcall
sbb
std
addb
stos
cmpsb
sub
cmp
mov
sbb
shrb
sbbb
mov
negb
or
and
pop
es
pop
xchg
and
stos
pop
xchg
pop
cmpsl
jp
push
or
or
jbe
jl
or
repz
or
cld
or
mov
imul
insl
mov
leave
rorl
dec
mov
xlat
jg
mov
call
ds
jno
in
xchg
jmp
mov
ss
cmpsl
scas
add
cmp
decb
js
or
jae
leave
imul
inc
and
stc
movsb
jecxz
cmp
add
test
lcall
sbb
outsb
adcl
add
jl
ret
lret
outsl
repz
push
fistpll
jp
mov
sahf
adc
fldt
std
outsl
std
add
rcrb
pop
loop
add
add
jo
sub
jnp
add
in
test
and
mov
sti
sahf
pop
jo
loopne
add
push
mov
jbe
mov
push
mov
cld
pusha
jl
and
dec
mov
lret
cmp
sbbb
mov
ja
cmovl
adc
hlt
mov
mov
pop
mov
mov
aaa
or
rolb
outsb
pop
insb
push
sub
sub
push
mov
inc
cmpsb
into
imul
pop
inc
cld
imulb
rclb
aaa
lds
sub
fdivl
inc
in
mov
aam
ja
cld
xchg
test
cwtl
into
adc
enter
add
mov
out
push
frstor
movsl
xchg
insl
iret
loope
fildll
or
roll
adc
vfrczsd
push
popa
cmp
clc
rolb
inc
sbb
push
add
cli
int
push
add
inc
cmpsl
xchg
push
jo
push
movsb
pop
xchg
or
sbb
inc
dec
mov
test
cmp
push
aad
pop
mov
pop
sub
addr16
push
mov
cmpsl
insb
popf
addr16
add
cld
xlat
dec
add
sub
pop
ret
decl
bound
popa
xor
notb
pop
mov
cmp
inc
push
or
je
push
jge
xchg
sub
pop
loop
xchg
xor
std
in
inc
mov
out
loop
sbb
push
aas
mov
or
mov
loop
cmpb
push
mov
inc
cld
xor
add
mov
jg
lock
fisttpll
gs
pop
push
mov
test
inc
ret
xchg
lret
and
bnd
or
loopne
adc
add
aad
movl
adc
lcall
icebp
push
push
jne
pop
mov
call
jne
fdiv
push
pop
mov
xor
cs
ret
mov
and
out
pop
nop
mov
nop
and
mov
jb
popf
and
std
sbb
call
pusha
jge
ljmp
and
in
rorb
push
dec
push
test
mov
cwtl
arpl
mov
jp
roll
cltd
cmp
das
icebp
inc
rolb
inc
lds
jbe
sub
sub
jne
pop
mov
inc
cmpsb
test
leave
lock
fwait
mov
jns
addl
adcl
mov
pop
mulb
add
cmp
or
mov
push
xor
call
push
inc
jo
stc
cmpsb
jbe
pop
rcrb
inc
xchg
xchg
lahf
test
xor
test
adc
and
outsl
mov
mov
push
mov
push
sub
das
scas
push
jno
push
mov
js
bound
dec
jno
sbb
mov
sbb
push
sahf
rcl
adc
jns
fstp
std
shll
lret
sbb
fwait
repnz
sub
cld
hlt
out
js
notb
ss
mov
mov
cmp
sub
add
mov
sub
or
adc
roll
xchg
cs
les
mov
lahf
mov
imul
sbb
push
jmp
adc
mov
jmp
daa
pop
jb
mov
cltd
clc
inc
mov
fildll
mov
mov
pop
scas
or
rcll
sub
sub
xor
add
push
aad
push
aam
stc
pop
mov
mov
adc
in
xchg
sbb
jae
xor
ret
jge
jns
push
push
add
push
jge
lcall
mov
cmpsl
push
sub
popf
das
hlt
xor
aas
pop
xor
ds
and
jno
cmp
add
outsl
mov
cmp
mov
aaa
adc
lods
inc
jb
int3
lcall
pop
shl
mov
or
call
test
icebp
mov
or
ljmp
inc
outsl
pop
dec
inc
mov
add
mov
jecxz
in
das
adc
fistl
xchg
lock
fbld
or
push
inc
adc
stos
xchg
xchg
sbb
std
andb
inc
mov
sti
pushl
lock
gs
fucomp
mov
or
add
mov
add
ljmp
push
pop
dec
cmp
pusha
mov
gs
dec
repnz
jmp
dec
rcll
xor
cmpb
push
xchg
lock
mov
sub
sub
sahf
psrad
fwait
push
ret
decl
std
adc
aas
es
adc
and
dec
mov
fildll
mov
ficoms
sbb
repnz
xchg
nop
inc
push
outsb
adc
cld
out
cwtl
mov
lds
pop
ficoml
mov
pop
sub
cwtl
push
dec
or
movsl
stos
lcall
incb
xchg
test
add
mov
jl
cwtl
cmp
aas
inc
mov
aaa
mov
adc
cmpb
mov
loopne
jl
insl
pop
and
mov
mov
push
aas
or
roll
sbb
mov
mov
insb
fistl
cmp
and
cmp
add
pop
jbe
stos
adc
out
xor
push
aaa
sub
xchg
mov
cmpsb
push
mov
cmpsl
xor
jle
fiaddl
push
into
or
icebp
lcall
jmp
pushl
mov
bound
push
mov
inc
add
clc
mov
push
aaa
mov
pop
sub
test
aad
pushl
adc
xor
ret
jl
insb
scas
out
mov
sub
adc
ffreep
xchg
and
bound
jecxz
push
test
or
or
adc
outsl
les
sbb
into
push
es
sbb
mov
in
push
stos
push
mov
jg
daa
fistl
mov
icebp
rolb
bound
decl
push
rcl
outsb
jl
subb
cmp
xor
das
jo
or
pop
and
pop
mov
incl
sub
cli
push
fidivrl
mov
or
incl
ds
sbbl
in
and
xchg
outsl
cmpsl
or
fdivrp
cmc
lea
sbb
pop
lds
inc
jno
aad
call
xorb
add
outsl
test
dec
pop
add
inc
mov
lods
adc
xchg
add
mov
mov
jmp
insb
decl
jne
mov
sarl
rcll
hlt
add
in
repz
mov
inc
fsubrl
add
inc
sub
adc
cmp
add
inc
mov
sub
jns
inc
xchg
mov
lods
aam
orb
push
sub
in
add
jnp
jle
inc
mov
add
adc
in
or
mov
mov
shlb
mov
mov
and
inc
inc
jge
inc
adc
push
sub
mov
sbb
or
xchg
cmpb
or
in
dec
addb
aam
push
dec
repz
je
add
cwtl
inc
popf
fwait
cwtl
adc
jns
or
stos
lea
xchg
jb
adc
aaa
push
testl
inc
add
xor
mov
inc
pop
lea
sarb
mov
or
pop
fmull
and
or
push
add
jb
sub
push
int3
xlat
shr
adc
pop
cmp
pop
inc
or
daa
or
sarb
fcompl
jne
call
jb
and
mov
test
test
push
sub
jge
jg
cmpsb
hlt
jae
xor
and
pushw
mov
push
adc
mov
and
and
mov
stos
loopne
pop
pop
mov
sbb
pop
pop
cmp
push
pop
ljmp
ret
sbb
aam
jp
push
js
sbb
sahf
mov
mov
loopne
mov
cmp
fldenv
loopne
fimull
cmp
mov
push
sbb
jge
and
mov
sbb
aad
bound
sbb
jae
mov
add
inc
sub
push
lds
dec
loopne
xchg
in
pop
mov
test
scas
mov
int3
xor
stos
sbbb
dec
stos
ret
nop
mov
inc
aad
je
sub
aam
loop
add
dec
clc
sti
fnstsw
mov
cmpsl
es
dec
add
mov
daa
es
adc
cmpsl
and
mov
andl
cmp
lds
inc
fidivs
jne
jmp
jg
sbb
and
adc
inc
fidivrl
sbb
mov
sbb
push
cmp
cwtl
insl
xor
clc
loope
inc
cmp
jp
test
add
pushf
inc
fdivr
ja
in
and
arpl
pusha
popf
lods
cmp
push
adc
fldenv
movsl
sub
lret
das
mov
sub
mov
mov
sarb
jno
pop
aas
leave
and
and
push
sbb
and
sub
inc
shl
sub
jle
and
xchg
add
mov
mov
bound
out
xchg
jae
inc
adc
and
xchg
es
mov
xchg
mov
pop
lahf
out
cmp
lcall
inc
ja
nop
ficomps
pop
xchg
xchg
mov
mov
cmp
pop
enter
mov
sti
inc
adc
shlb
in
mov
sbb
aas
cli
aas
inc
enter
jmp
adc
mov
iret
enter
xchg
jae
aaa
push
pusha
iret
inc
test
pusha
and
pop
clc
or
mov
idivl
fs
adc
or
sub
outsl
outsl
out
mov
xor
adc
test
jecxz
ss
jne
sub
mov
mov
sub
inc
ja
jmp
sbb
cmp
dec
jl
js
mov
imul
push
mov
inc
loopne
js
out
fimull
idivl
cmp
and
mov
jns
sarl
xchg
sbb
inc
inc
cmp
jae
pop
cmp
mov
inc
mov
leave
mov
test
or
inc
xchg
mov
sub
inc
mov
insl
imul
popa
sbb
je
mov
fistl
mov
jecxz
imul
aaa
cli
jg
lods
inc
std
hlt
into
dec
shrb
sti
inc
inc
mov
orb
daa
fwait
rclb
sarl
add
addr16
sbb
xor
pop
mov
fs
fs
ret
loop
add
jecxz
pop
adc
loope
mov
sbb
push
sub
xchg
sarb
add
mov
push
jbe
mov
dec
cli
jo
cwtl
rcrl
cmp
imul
add
imul
adc
xchg
inc
add
rol
push
jg
dec
fnstsw
xlat
std
mov
mov
sub
jg
lahf
popf
incl
ss
jnp
inc
cbtw
mov
push
mov
loopne
hlt
das
cld
add
xchg
xchg
sarl
ret
mov
das
mov
pop
imul
add
jle
scas
and
lds
test
inc
or
test
outsl
push
outsb
hlt
push
sub
inc
imul
sbb
incl
cltd
jae
shll
push
dec
imul
mov
xchg
ss
aaa
adc
sbb
dec
jno
and
pop
ljmp
sbb
roll
adc
ret
mov
lcall
test
pushf
in
pop
xor
js
mov
sbb
dec
bnd
xor
or
lahf
je
ret
and
aad
das
mov
cs
add
fst
aaa
cli
testb
cltd
sbb
adc
stos
adcl
push
cmpsl
nop
stos
mov
js
pop
fists
lahf
dec
sarl
xchg
les
dec
and
ljmp
xchg
xchg
inc
fisubrl
pushf
iret
lods
je
pop
rcll
add
paddb
push
shlb
pop
adc
iret
and
rcr
stos
outsl
je
cmp
push
sbb
add
es
inc
call
add
test
pop
cmp
add
decb
jbe
push
mov
not
sub
push
sar
out
adc
sub
inc
sub
cli
out
mov
nop
push
pop
hlt
lea
loopne
adc
jmp
fs
push
stos
pop
pushl
pop
cs
jle
scas
xor
xchg
mov
scas
in
mov
dec
mov
mov
clc
in
or
fwait
mov
push
xor
ss
test
mov
push
push
stos
sub
jg
fildll
lahf
jp
adc
adc
adc
ret
shrb
das
fsubl
mov
mov
sti
out
mov
cli
sub
fisttpl
outsl
movb
incl
jg
adc
xchg
mov
test
decb
xchg
nop
enter
cmp
pushf
mov
dec
pop
outsl
jne
outsl
mov
push
movsl
sub
xchg
rcrb
and
or
out
adc
test
loope
jmp
push
pop
push
jno,pn
mov
stos
cmp
sbb
rclb
adc
xchg
pusha
cmpsb
ret
insb
insl
stos
mov
scas
pop
das
pop
mov
outsl
std
dec
push
jp
jno
test
sbb
inc
int
jecxz
sbb
mov
test
adc
std
push
and
adc
mov
xor
cmpsl
and
pop
fcoml
aad
dec
inc
sti
les
jl
add
add
or
negb
negb
je
in
data16
dec
call
mov
decb
lea
bound
stos
sti
xor
leave
test
dec
push
xlat
and
test
fistps
mov
xchg
xor
add
cmp
push
repz
rclb
xchg
dec
add
add
dec
roll
mov
jmp
sbb
pop
pop
and
sbb
or
andl
mov
js
aas
cld
mov
push
adc
cmp
pop
add
jp
jo
jg
cmc
das
mov
cmpsb
fisttpll
scas
or
lods
or
mov
xor
insb
repz
jae
shlb
mov
sar
aas
mov
jl
and
cli
fstps
dec
or
pop
outsl
jbe
jmp
push
sbb
pop
mov
and
imul
inc
push
inc
jg
fst
dec
dec
clc
or
lods
sbb
mov
or
mov
lcall
aas
mov
cmc
jne
ja
adc
jmp
sub
adc
add
dec
jl
clc
ja
pushf
ret
pusha
and
loop
je
movsl
jno
pop
sti
adc
mov
loope
sub
mov
cli
or
jge
sbb
push
push
and
pop
ret
pop
fbstp
loopne
adc
push
add
mov
pop
shll
xor
cmpsl
push
inc
sbb
fdivs
mull
cld
aam
push
add
outsb
cmp
adc
das
jg
push
xor
sbb
or
outsl
gs
adc
leave
pop
lahf
daa
push
inc
mov
mov
add
jmp
inc
or
fsubrl
add
subb
add
sbb
mov
test
add
sub
enter
in
inc
push
push
xchg
push
fwait
pop
push
fsubr
or
mov
inc
cwtl
add
dec
mov
push
push
inc
add
jg
and
mov
mov
mov
scas
pop
loop
sarl
in
cmp
sub
push
cmp
stos
pushf
ja
dec
jg
xchg
sub
mov
mov
sbb
fnstsw
out
ds
es
test
or
push
sbbb
insl
push
stc
call
push
add
sub
and
test
xor
nop
in
dec
add
int3
fcos
ljmp
rorb
pushf
sbb
lret
shrb
sbb
push
popa
stos
ljmp
call
jbe
adc
xor
add
or
jnp
pop
pop
xchg
sahf
hlt
incl
cld
je
pop
js
jmp
and
repz
push
lock
rolb
cwtl
test
cs
pop
das
in
fidivrs
mov
setg
push
jmp
dec
and
int
jno
shlb
push
stc
cmp
mov
mov
je
sbb
cwtl
bound
or
loope
clc
add
jl
push
add
jp
out
xchg
sub
mov
iret
movsb
mov
jb
adc
test
mul
cmpsb
outsl
jo
mov
xchg
rorb
adc
jp
dec
sti
pusha
dec
inc
push
or
cli
pusha
xchg
imulb
decl
into
xor
call
mov
adc
sbb
sarl
pop
mov
and
add
sub
mov
enter
xor
and
mov
dec
test
insl
call
divb
fistl
stos
inc
lds
cmp
inc
sbb
incl
outsl
inc
push
sti
testb
cs
mov
add
xlat
mov
inc
icebp
xchg
fadds
jecxz
clc
or
and
mov
mov
add
fdiv
xchg
mov
jle
fiaddl
jo
pop
insb
mov
cld
adc
push
or
or
ss
pop
mov
sbb
ljmp
test
mov
jo
add
and
mov
call
mov
outsb
inc
popf
xor
push
push
add
cmp
inc
mov
aad
je
pop
dec
sub
mov
js
das
std
call
pop
mov
mov
push
scas
rcll
das
out
jae
loope
or
mov
sub
ja
mov
push
inc
add
push
sub
push
aaa
loopne
jae
std
les
clc
add
cmpsb
and
fs
ljmp
xor
rcrl
pop
loopne
dec
insl
jbe
or
std
je
jo
test
jecxz
popa
xor
mov
movsl
frstor
xchg
jnp
ja
push
add
and
cld
add
inc
push
sub
add
pushf
pop
jmp
cs
cmp
or
jae
pusha
pop
xor
fbld
jne
or
mov
mov
adc
repnz
push
jecxz
mov
std
sub
pusha
mov
ret
jb
inc
dec
jnp
or
insl
add
mov
ret
icebp
incl
jp
call
lds
dec
xchg
jge
jne
or
push
jo
fiaddl
dec
cs
outsl
sbb
mov
sbb
scas
das
es
stc
push
jb
mov
enter
mov
jae
jle
jmp
pop
sbb
fidivl
test
mov
push
push
test
dec
and
xchg
clc
adc
cs
jl
adc
test
roll
shll
mov
cmp
loope
out
lcall
repnz
loopne
dec
rclb
subl
in
jge
mov
sbbl
cmp
rcrl
out
push
jbe
xchg
cwtl
lods
jecxz
stc
xchg
jle
inc
call
insl
adc
shlb
cmc
mov
aad
sub
pushf
jbe
repz
or
leave
dec
daa
push
fwait
pop
sbb
push
leave
push
mov
xor
jecxz
out
test
nop
cld
inc
xchg
xchg
comiss
scas
jnp
je
stos
test
cmp
push
shrl
and
jp
outsb
aam
insb
cmpsb
jge
xchg
sbb
xchg
fwait
loope
out
dec
push
aaa
rcll
mov
inc
pop
sbb
add
sbb
ret
lea
imul
add
cmp
frstor
mov
sbb
enter
rol
in
sbb
add
sbb
in
insl
cmpb
pop
std
cmp
std
dec
pop
and
int3
dec
mov
add
movsb
push
push
sti
or
dec
and
shrb
cli
test
das
pop
mov
repz
adc
add
cli
mov
inc
stos
aaa
xor
cwtl
mov
or
je
adc
sarl
mov
push
js
ja
xchg
flds
xchg
or
mov
popa
push
stos
lods
jecxz
adc
int
arpl
xor
adc
push
insl
push
and
push
pop
xor
insb
fsub
sub
adc
fidivl
adc
in
mov
pop
mov
xchg
fstl
push
inc
jo
push
pop
inc
call
push
inc
add
int
pop
in
insl
push
shlb
outsl
popa
in
adc
xorl
inc
xchg
adc
mov
cmpl
fs
adc
roll
push
or
addr16
sbb
inc
push
jb
lahf
mov
fimull
stos
pop
adc
scas
cs
adc
outsl
xchg
xor
sbb
dec
loopne
xchg
xor
popa
loope
or
out
sub
adcl
lock
push
xchg
xchg
ret
jg
mov
dec
dec
pop
int3
rolb
insl
xchg
adcl
fists
or
fldt
adc
pop
inc
rcll
and
bswap
sbb
sbb
mov
mov
jmp
and
pushl
in
imul
data16
pop
insl
mov
loopne
sub
ss
mov
ror
stc
nop
cmpsl
stos
mov
movsl
push
fwait
fwait
ds
leave
push
rclb
xchg
outsl
cmpsb
jge
enter
lret
cltd
or
gs
pop
nop
xor
sbb
sub
cmp
dec
cld
subb
xchg
jecxz
filds
aaa
jo
faddp
inc
adc
or
jl
dec
loope
mov
add
adc
pop
inc
stos
inc
adc
xchg
in
aaa
lcall
js
sbb
into
push
mov
mov
pop
mov
inc
je
jnp
and
fnop
mov
mov
sub
in
enter
mov
pop
mov
mov
ss
jbe
stc
mov
fidivrl
mov
push
loope
sbb
adc
lret
outsb
rcrl
pop
into
loop
mov
mov
frstor
or
fsubrs
xchg
lods
arpl
test
xchg
cmp
das
arpl
outsl
push
xchg
add
cmp
xor
aaa
arpl
adc
int3
es
add
push
jae
cli
xchg
sub
cli
pusha
push
jno
nop
pop
xor
and
sbb
repnz
addb
mov
mov
cli
jle
dec
cld
inc
jo
cld
pop
add
or
dec
jne
rcrb
push
and
mov
cs
mov
push
mov
mov
lcall
dec
dec
shlb
inc
sahf
jecxz
or
xchg
mov
ljmp
aaa
jo
arpl
adc
outsb
adc
add
sub
mov
dec
cmp
cmp
sbb
sub
pushf
adc
cmp
je
sbb
decl
add
pop
push
pop
xorl
cmp
ljmp
std
pop
jge
dec
cmpb
arpl
pop
mov
inc
and
jp
or
xchg
pusha
inc
rcll
or
rorl
faddl
cmp
mov
pop
adc
or
cmp
inc
jmp
xor
push
xor
lahf
jp
inc
repnz
sbb
push
lea
int
xchg
cmp
pop
push
push
in
adc
mov
sub
aaa
cld
add
pop
pop
movsl
mov
adc
add
repnz
add
mov
data16
cld
insb
pusha
mov
mov
push
mov
push
pop
fdivrs
fs
cltd
loop
push
pop
pop
dec
idiv
aas
gs
bswap
jo
inc
push
js
dec
outsb
add
clc
js
cld
or
mov
imul
test
sbb
xor
lods
sti
icebp
mov
rcrb
adc
andl
lds
or
test
adc
icebp
jle
mov
mov
call
jmp
cld
xchg
fidivrs
push
xor
fbstp
xchg
loop
cld
pushf
imul
inc
push
sbb
ja
lret
inc
repnz
cmp
ds
outsb
cmp
mov
sbb
push
rcll
std
clc
ffreep
loopne
jecxz
sahf
pop
mov
mov
and
push
push
pshufw
and
push
insl
push
or
sarl
inc
fs
dec
fistpl
outsl
dec
add
int3
mov
inc
addr16
loop
mov
fdivp
daa
js
inc
icebp
push
pop
int3
sbb
sub
dec
push
inc
or
dec
popa
arpl
pop
cld
xchg
push
jnp
mov
push
imulb
mov
xor
or
jmp
sbb
push
lahf
add
ds
shr
popw
push
cmp
sti
imul
test
sbb
es
lds
lret
add
jo
mov
scas
pop
sbb
pop
dec
icebp
repnz
adc
pop
inc
sub
xorb
add
cmp
pop
test
adc
dec
imul
outsb
add
push
inc
ss
jecxz
rorl
pop
clc
sti
jmp
mov
stc
call
fiaddl
test
jge
ljmp
add
jmp
adc
js
gs
in
xor
xchg
add
int3
mov
xchg
movsl
xor
outsl
cmp
jb
adc
cmpsl
xchg
movsb
push
add
sbb
mov
jne
pop
test
ss
push
cltd
inc
sub
mov
je
add
movsl
sahf
pop
cmc
push
sub
insl
icebp
xchg
dec
scas
test
jp
mov
in
mov
push
stc
dec
and
mov
shrl
cld
fiadds
sbb
pop
xor
ret
sbb
popf
inc
or
data16
dec
fsubrs
cli
sub
mov
sti
decl
adc
mov
pop
mov
test
cli
mov
and
pushf
sbb
sbb
shll
and
jle
or
out
lds
pop
mov
mov
test
dec
jl
mov
je
ret
ret
test
cmp
inc
cmpsb
push
pop
add
icebp
ss
ljmp
in
jp
shlb
loop
add
pop
and
mov
lret
cld
inc
push
clc
fiaddl
inc
sbb
sub
and
movsl
das
mov
movsb
test
aas
fnstenv
andb
xchg
in
adc
mov
mov
mov
dec
out
sub
mov
addr16
xlat
out
sub
in
ret
sbb
mov
mov
repnz
insl
mov
addr16
dec
sar
push
cmpsb
in
xor
imul
mov
aas
xchg
aas
inc
mov
fldt
fdivp
add
push
imul
pop
stos
mov
icebp
call
iret
or
sbb
jb
push
aas
mov
btsl
movsl
sbb
add
mov
add
sbb
push
fdivrs
xchg
or
insb
inc
iret
adc
sub
outsb
mov
dec
movnti
sbb
ret
subl
sarl
adc
mov
cmp
xchg
dec
inc
dec
push
sub
lock
rclb
xorl
jmp
mov
push
adc
aas
incl
fdivr
and
loope
int3
add
push
push
ficoms
roll
in
xchg
rcrb
jg
mov
cmp
jo
out
mov
sub
imul
loop
or
mov
jnp
sbb
add
popa
push
mov
mov
xchg
lret
add
sub
fdivr
sar
out
add
fiadds
js
add
mov
or
dec
push
jbe
mov
pop
xchg
mov
mov
outsl
imul
jno
push
sub
cmpsl
mov
aam
in
inc
and
or
mov
daa
int
xchg
mov
rcr
shl
ljmp
push
or
mov
mov
sbb
rorl
jecxz
fstps
sub
xchg
inc
mov
pop
mov
ljmp
adc
out
adcl
int
push
scas
or
inc
test
lock
adc
jmp
in
adc
in
popf
sar
mov
mov
dec
mov
inc
and
mov
mov
in
sbb
roll
pop
adc
scas
jp
mov
inc
adc
dec
jo
mov
pop
outsl
fcomps
cs
dec
in
jle
int
xor
movsl
mov
dec
xchg
sbb
xchg
push
pop
xchg
jb
sub
or
fnstcw
pop
xchg
clc
sbb
lock
popf
add
out
pusha
jecxz
xor
mov
inc
inc
rcl
jle
xchg
xchg
or
mov
sbb
sbb
stos
mov
js
loope
inc
push
mov
ret
cmp
or
add
popf
insb
fsubrl
xor
jle
jp
jp
push
or
sub
cwtl
or
clc
mov
faddl
mov
andl
adc
in
nop
push
es
stc
xchg
aad
or
pop
xor
sub
cmp
adc
das
hlt
call
bound
jne
inc
sti
fldenv
or
sar
jle
fstpt
inc
or
mov
adc
rorb
lods
aad
int3
loopne
iret
call
test
pop
es
je
lcall
loopne
lods
int
xor
adc
aad
das
icebp
jb
pop
pop
cmp
push
sbb
push
cltd
add
and
inc
loope
dec
cmpsl
fldt
outsl
cli
dec
push
xor
and
scas
add
mov
sti
popa
dec
loopne
mov
in
es
adc
xlat
mov
jbe
in
lea
xor
xchg
aam
lea
in
pop
je
sub
loope
dec
enter
aas
xor
fildll
sbb
ds
sbb
das
psrld
sub
into
arpl
je
xchg
mov
jns
mov
fdivrs
jo
icebp
and
aam
dec
xor
lret
and
call
loop
subl
add
imul
xlat
dec
pop
int
mov
push
xchg
cmp
or
mov
push
clc
ret
inc
mov
aas
add
mov
pop
popa
sbb
xchg
push
loopne
inc
movsl
loop
and
sub
loop
fsubs
or
daa
sub
xor
ret
and
aam
subb
lods
ret
sbb
test
out
pop
add
push
mov
pop
adc
fistps
or
insl
mov
push
xor
pop
orl
in
popl
das
faddl
data16
jae
dec
loope
inc
lds
and
add
dec
test
jnp
ljmp
or
or
adcb
lea
das
mov
mov
enter
loop
jb
out
test
pushf
cmp
vmovupd
inc
test
mov
pop
sub
iret
lock
pop
decb
das
jo
add
cmpsb
adc
dec
pop
nop
jecxz
mov
lret
or
aad
fldt
iret
ret
adc
or
sbb
sub
mov
out
je
iret
sbb
fadd
mov
dec
inc
pop
and
mov
stos
sbb
sarl
mov
stc
xchg
cwtl
jmp
and
lahf
jge
push
dec
push
jae
xchg
push
and
mov
test
fmuls
jp
pop
push
mov
dec
xchg
and
or
add
movsl
daa
cmp
sbb
add
mov
add
insl
inc
test
and
or
ss
cmpb
andb
mov
xor
imul
sahf
push
insl
out
mov
inc
and
mov
mov
push
adc
xchg
fwait
rorl
mov
lcall
loope
mov
sub
cmp
sbb
fsubrp
inc
sbbb
mov
xchg
lret
xchg
pop
xchg
dec
lock
cld
xor
addr16
das
cld
js
stos
ds
and
repz
push
add
out
sti
push
les
push
or
iret
push
sbb
je
aaa
and
inc
mov
inc
or
pushw
sarb
add
add
movsl
add
sub
jg
sub
popa
sub
imul
jl
mov
sbb
and
jg
test
xchg
dec
sbbl
addb
subl
mov
xchg
mov
ud0
pop
nop
decl
repz
scas
loopne
pushw
mov
sbb
fldt
loop
fisubrl
in
jo
push
sbb
pop
ljmp
fwait
or
xor
cmc
inc
and
mov
std
add
push
jg
push
repnz
cmp
nopl
push
js
mov
adc
cmp
pusha
push
mov
out
inc
iret
mov
imul
mov
add
mov
inc
int
push
mov
dec
lret
pop
dec
xor
inc
outsb
iret
arpl
xor
jl
pusha
add
inc
inc
pusha
mov
imulb
sbb
das
lret
sbb
in
sbbl
imul
push
sti
mov
int3
or
aas
add
outsl
aad
lahf
mov
rol
dec
inc
pop
insb
sub
mov
outsb
mov
add
xor
add
jmp
sbb
fstl
lods
push
das
jg
ljmp
scas
stos
inc
or
mulb
popf
imul
cmp
pop
xor
idivb
inc
mov
mov
inc
test
push
push
bound
push
cmpb
and
jle
repnz
les
aam
js
mov
jg
loop
enter
je
push
dec
dec
les
dec
fisttpll
pop
mov
mov
fldt
fdivrs
mov
sbb
or
into
and
xchg
jne
loop
jg
sbbl
leave
shrl
fildll
pop
out
iret
xlat
les
test
mov
imul
mov
lds
stos
jns
fcoms
js
rorl
mov
dec
test
xor
cmc
or
insl
stos
std
sub
sbb
shll
cwtl
add
out
insb
clc
add
adc
mov
enter
or
orb
or
add
pop
outsl
inc
mov
push
imul
fs
xchg
mov
sti
push
mov
dec
movsb
inc
mov
pop
push
xor
adc
pop
into
ljmp
insl
lret
push
roll
insl
loopne
push
inc
popa
std
add
cmp
sbb
adc
fwait
mov
or
and
cmp
jb
dec
pop
xor
pusha
test
nop
rcl
lcall
insb
mov
inc
stc
mov
add
fisttps
pop
aad
jbe
and
dec
push
test
mov
fdivl
or
clc
shlb
loope
push
inc
outsb
rorb
add
movsb
sbb
sbb
push
cmp
xor
inc
ffreep
inc
fnsave
movsb
pop
add
xchg
add
add
push
pop
pusha
jbe
std
lods
jp
jecxz
add
popa
or
pop
aad
clc
push
add
cmp
lds
das
or
sub
js
filds
lea
jns
popa
or
clc
out
mov
mov
pop
out
jecxz
add
out
fsubl
lret
test
adc
lds
clc
or
and
cltd
popa
mov
pop
mov
add
test
push
mov
add
jp
out
mov
popf
xor
mov
loope
les
or
mov
push
hlt
orb
and
stos
mov
lock
or
repz
loop
fidivl
inc
test
negl
pop
xor
or
or
dec
fidivl
or
sbb
cmp
fbstp
loopne
and
and
mov
xor
jg
xor
out
or
xor
aad
push
sbb
in
ljmp
add
sbb
cld
and
xchg
xor
pop
cld
test
mov
push
das
mov
lds
and
les
jle
or
jmp
outsl
movsb
mov
adc
and
das
mov
or
jp
je,pn
outsb
adc
pop
mov
lds
inc
mov
push
or
push
fisttps
mov
dec
mov
loope
dec
out
lea
mov
rcrl
pusha
push
mov
push
in
or
xchg
mov
dec
rcr
fcomp
mov
lea
adc
loop
add
test
mov
push
cmp
cmp
icebp
sub
push
push
movsb
in
aad
or
into
mov
movsl
add
loopne
adc
mov
xlat
and
add
pop
mov
and
test
mov
ret
cld
aaa
lock
and
pop
iret
jne
pusha
jle
jb
mov
cmp
mov
xchg
pop
stos
xchg
adc
outsb
and
outsl
outsl
pusha
sbb
fcmovbe
int
aam
sub
push
aas
rorb
xor
add
push
sar
lea
jo
mov
ss
jno
adc
inc
mov
mov
xor
inc
or
lea
and
mov
test
mov
mov
clc
or
mov
jo
icebp
stos
add
mov
cmpsl
or
out
mov
test
sti
out
mov
mov
push
sub
mov
push
ret
rolb
mov
add
ret
mov
sbbb
push
movsb
mov
adc
test
test
xchg
cmpb
int
ja
add
mov
inc
test
or
push
out
add
mov
ljmp
stos
jbe
negl
outsl
outsl
ja
js
adc
fnsave
push
cmpb
jo
inc
pop
dec
push
jle
pop
mov
pop
cmpl
pop
call
mov
testb
add
cmp
cmpl
cmp
ds
and
pop
mov
push
xchg
aad
subb
stos
inc
cmp
mov
dec
xor
ffreep
aad
iret
repnz
lods
jo
cmp
mov
les
call
sbb
sbb
fstpt
dec
sbb
mov
inc
mov
pop
mov
sub
jb
sbb
mov
lods
lahf
inc
std
sahf
subb
pop
mull
xor
cmp
js
cmp
scas
cld
jecxz
xor
inc
stc
xor
lock
fwait
mov
lcall
and
mov
dec
flds
xchg
hlt
lds
bound
mov
push
outsb
sbb
out
fwait
lds
jmp
add
push
test
add
dec
rcrb
push
movsl
add
test
mov
adc
rcl
inc
outsl
cli
sbb
cli
xchg
pushf
data16
sbb
jmp
outsb
xor
jge
std
or
hlt
and
inc
subb
mov
pop
hlt
mov
scas
outsb
sub
jo
fsubl
jae
lods
rolb
cmc
push
and
add
pop
jmp
mov
and
jmp
xchg
add
cli
push
pushf
rclb
xor
xchg
aaa
loop
andb
fadds
daa
mov
xchg
dec
dec
fstps
orb
aas
stos
add
aam
in
sbb
adc
sbb
test
pop
inc
inc
dec
cs
add
scas
ficoml
pop
lret
and
jbe
or
add
mov
or
and
lea
mov
and
xchg
push
cmp
and
fsubr
test
dec
add
push
pusha
dec
dec
mov
and
ds
call
vmwrite
les
aam
iret
jb
js
add
dec
mov
jns
jle
push
lcall
or
mov
fimuls
and
xchg
inc
inc
dec
push
dec
add
inc
mov
sub
lret
push
lock
add
push
mov
inc
inc
mov
mov
mov
adc
fs
add
sbbb
cs
xor
lahf
loope
daa
inc
adc
mov
pop
inc
add
push
inc
ret
xchg
test
aad
mov
add
xchg
jo
mov
sub
scas
xor
and
inc
sub
dec
mov
xor
enter
lods
dec
stos
mov
push
jno
out
inc
insb
xchg
and
or
xchg
mov
orl
mov
testb
jbe
xor
adc
rcrl
rcr
push
rolb
roll
iret
adc
cld
add
jae
lea
aam
mov
push
add
sbb
orl
ret
pop
sbb
add
stos
fisubrl
sub
or
fiadds
push
add
add
pop
aam
out
lahf
mov
xor
adc
xchg
push
xorb
daa
aaa
push
add
add
das
jne
pop
aam
stos
lahf
dec
lock
add
or
or
or
push
pop
fisttpll
sti
sbb
std
and
and
mov
into
out
jb
bnd
mov
push
fdisi(8087
lret
call
incb
jne
mov
lret
cvtps2pi
dec
rol
mov
adc
adc
and
aam
int
mov
mov
testb
add
mov
mov
pop
daa
adcb
or
add
xchg
xchg
xchg
inc
jo
adc
mov
insb
mov
dec
jo
int
mov
inc
push
inc
adc
sbb
jnp
stos
je
pop
call
mov
outsb
add
shrl
int
xchg
ret
rclb
out
jnp
inc
mov
add
and
ret
pop
int3
and
inc
and
ljmp
inc
fs
jno
cmp
int3
cli
mov
dec
xlat
mov
sbb
jns
mov
add
and
sbb
aad
or
or
xchg
cli
pusha
cmp
inc
add
add
inc
push
sub
push
add
push
sub
mov
jns
xchg
test
out
mov
nop
adc
mov
insl
xchg
in
out
mov
jg
loopne
or
add
cmp
dec
negl
jno
icebp
sub
mov
cmp
cmp
lahf
repnz
xor
xlat
pop
loop
clc
add
adc
movsb
sbb
inc
pop
sub
movsl
mov
lret
mov
shll
cwtl
dec
add
mov
cmc
out
fsubr
add
cld
mov
aam
or
and
ljmp
mov
mov
jp
or
mov
sbb
outsl
rorb
aaa
lret
rcll
repz
mov
sar
decl
push
fcompl
cmpsb
daa
xchg
add
outsl
decl
mov
and
pop
or
push
lret
clc
rclb
int
into
sbb
ret
js
mov
in
or
das
in
jbe
fwait
mov
xor
dec
lcall
dec
mov
sbb
add
fsts
cmp
lock
inc
mov
mov
adc
fimuls
adc
sbb
sbb
mov
push
pop
cmc
xchg
rclb
mov
int3
sub
vpmullw
mov
jle
pop
les
inc
aaa
mov
icebp
das
jl
mov
jne
imul
pop
mov
pop
xor
and
dec
divl
cld
mov
cmpsl
cmp
popa
xor
jns
aaa
and
mov
xchg
inc
pop
and
jb
mov
mov
dec
loopne
out
sbb
jns
sbbl
mov
add
ficomps
rorl
jne
mov
daa
pushf
push
and
test
decl
test
sahf
insb
or
mov
fadds
incl
mov
pop
shrb
dec
jl
lret
in
sbb
xchg
add
adc
sbb
add
mov
pushf
ljmp
push
sub
call
test
aaa
lds
call
sub
mov
and
pop
and
in
ret
pushf
cmp
ret
mov
lock
inc
aas
push
rorb
clc
dec
enter
addb
pop
cli
mov
sub
cld
mov
shrb
fisubrs
jle
gs
push
cmp
daa
pop
mov
cmc
ficoms
adc
in
lcall
push
dec
hlt
mov
fisubrl
fwait
mov
dec
out
push
adc
pusha
les
xchg
ficomps
lods
dec
dec
mov
lods
add
lret
inc
inc
insl
mov
add
mov
add
ds
push
add
adc
fnclex
in
test
dec
fwait
push
adc
push
xor
pushf
add
andl
popa
xchg
insl
js
mov
repz
sbb
test
dec
adc
mov
pusha
fists
xchg
outsl
sbb
cs
repnz
lret
lds
ds
adc
push
fistpl
mov
sarl
adc
mov
leave
adc
xor
push
inc
pop
push
inc
or
hlt
lea
cmp
pop
inc
mov
pop
mov
mov
mov
and
mov
jo
lcall
pop
sbb
insl
mov
movsb
push
cs
fstl
add
dec
in
nop
cmc
jns
jle
insl
leave
xchg
loop
mov
loop
mov
add
loopne
test
push
cmc
jl
jb
sar
jg
push
mov
into
add
inc
cs
xchg
pop
or
or
addl
or
and
mov
mov
jns
loopne
filds
add
and
andl
add
jp
movsl
sahf
pop
mov
lock
sahf
and
mov
adc
setp
in
scas
hlt
subb
sub
out
add
mov
rcrb
inc
or
stos
test
sbb
inc
cmp
xor
dec
pusha
dec
inc
sub
lock
push
jle
hlt
dec
cmpb
push
cwtl
sub
adc
jge
dec
pop
xchg
mov
xchg
icebp
fcoms
push
iret
cmp
loop
sar
cs
or
dec
shl
sub
add
andb
les
xchg
sbbb
inc
dec
in
fnstcw
je
adc
mov
sbb
dec
sub
xor
xchg
fidivs
push
mov
cli
mov
fcoms
cld
pop
add
clc
insb
loopne
test
sbb
cs
out
mov
add
add
or
stos
mov
adcb
mov
mov
push
jle
int
adc
ljmp
in
add
fcompl
fsubrs
jmp
cmp
mov
add
out
stos
pop
mov
sbb
insl
sbb
sub
hlt
jbe
xchg
add
xor
add
mov
ss
sbb
js
push
rclb
inc
add
and
loope
sarb
inc
popa
lods
and
sub
jo
pop
sti
add
cmpl
push
ljmp
jmp
and
mov
out
repnz
add
jg
sub
loopne
dec
lods
cltd
ljmp
jmp
inc
pop
push
dec
xchg
push
adc
and
jns
xchg
out
into
push
int
mov
ret
cmpsb
and
hlt
in
cli
lea
xchg
iret
int3
mov
fdivs
mov
es
lahf
cltd
cmp
mov
aas
shrb
jge
daa
cmp
or
popf
jb
out
outsl
jmp
aad
fildll
jge
arpl
cli
xor
jl
jmp
pop
test
sub
or
mov
pop
jmp
aam
pop
sbb
movsl
rolb
jecxz
hlt
mov
and
repz
xorb
mov
dec
mov
and
adc
cwtl
mov
roll
adc
cld
xchg
and
mov
push
sub
repnz
mov
insl
test
lock
sti
xchg
sub
pop
xchg
in
xchg
add
inc
aaa
ljmp
sbb
aam
add
icebp
sbb
in
dec
ss
xchg
sub
jecxz
lds
inc
sub
add
outsb
mov
or
xchg
mov
push
mov
pop
pusha
cmp
es
add
aaa
xor
and
xor
icebp
test
stc
bound
dec
mov
loop
hlt
push
mov
sahf
sub
das
push
mov
std
pop
xlat
data16
xchg
mov
jo
jmp
or
lock
mov
stc
jb
test
dec
inc
call
fidivl
outsl
ds
movsb
lret
adc
and
inc
add
movsb
psrad
aas
jbe
roll
sub
das
add
push
and
imul
mov
push
shll
outsl
cld
add
mov
adc
aad
arpl
dec
sbb
mov
into
ret
pop
and
sti
jg
fwait
outsl
stc
cmpsb
inc
mov
or
loop
mov
xlat
mov
pop
add
adc
scas
incb
mov
int3
mov
call
sub
insb
xchg
jb
jp
sbb
jecxz
pop
or
ja
push
inc
xchg
aas
jo
inc
incl
and
jmp
decb
xchg
mov
outsl
jecxz
xchg
nop
and
mov
xor
xchg
dec
dec
pop
pop
inc
push
inc
mov
arpl
test
or
xchg
addr16
jg
sahf
inc
dec
sub
mov
rolb
out
ljmp
xchg
pop
xchg
xor
loope
jne
andb
mov
adc
cld
fsubl
icebp
js
sbb
and
jl
dec
mov
mov
pop
insl
lods
jp
lea
fwait
mov
jg
repnz
pop
add
movsb
mov
call
sub
mul
loop
xchg
and
or
sub
mov
mov
push
lea
gs
push
rcrb
fsubrl
adc
aam
fisubrl
and
xor
pusha
into
scas
jo
and
jecxz
int3
aad
jns
mov
lock
outsl
jl
adc
stc
adcb
clc
sbb
mov
call
add
ljmp
leave
add
cld
push
data16
pop
add
mov
ja
xchg
dec
pop
cmpsl
pop
mov
xor
sbb
jl
iret
cltd
dec
jbe
mov
mov
aad
cmp
inc
nop
outsl
les
cld
or
inc
call
dec
lods
sbb
and
imul
test
mov
lea
out
lods
pop
push
dec
pop
dec
icebp
dec
adc
aam
push
scas
jp
sbb
cli
das
dec
shlb
icebp
outsl
and
or
das
std
dec
rcrl
orl
or
shl
jl
and
adc
cmp
scas
cwtl
push
test
ja
jg
ljmp
popa
enter
lcall
lea
cmpl
inc
xor
enter
cmp
jnp
mov
xorl
std
jg
sti
mov
imul
mov
inc
mov
add
mov
test
add
cmpsb
std
mov
jg
cmp
inc
mov
mov
cmpsl
fisubrs
push
mov
xchg
push
xchg
sahf
rcll
mov
inc
out
out
pop
aaa
xchg
subb
outsl
cmp
and
sbb
adc
insl
xlat
rolb
scas
sub
dec
jnp
jg
dec
pop
outsb
adc
das
sbb
and
xchg
jge
das
test
dec
push
inc
cmp
sub
xchg
cmpsb
incl
out
and
add
jmp
sbb
lock
or
ljmp
xor
loopne
rep
stos
add
bound
jl
mov
imul
or
push
jl
pop
push
or
cmc
mov
xorb
mov
push
test
shlb
test
pop
les
and
das
inc
rorl
pop
push
or
insb
push
add
fmull
jle
add
xchg
inc
push
jae
incl
icebp
add
sbb
incl
jo
inc
cmp
push
dec
fidivs
push
data16
and
push
cwtl
mov
scas
loop
adc
or
push
fidivrl
movsb
push
sbb
roll
xor
outsb
inc
lds
in
adc
jmp
mov
dec
pop
ltr
cs
loopne
pop
push
mov
pop
mov
pop
mov
add
fcomp
aad
pop
pop
dec
cmp
daa
add
outsl
shll
xchg
mov
mov
icebp
gs
adc
or
lods
sub
outsl
push
xor
mov
add
push
add
dec
cld
aam
add
movsl
ret
rcll
cmpsl
or
jne
pop
mov
mov
les
aas
xor
rolb
pop
enter
inc
out
jbe
call
shll
sub
pop
mov
popf
clc
ja
adc
pop
outsl
ljmp
clc
nop
pop
loop
add
or
jae
aaa
push
or
das
mov
fistpll
push
ficomps
jle
mov
adc
mov
insb
rcrb
mov
xor
pop
stos
sub
xor
sbb
cs
jb
fldcw
jne
stos
pusha
sub
clc
in
ljmp
xor
pop
jo
add
cs
sub
insl
insb
sbb
pop
lods
cld
incl
call
jne
into
in
pop
fcompl
leave
pop
or
inc
sbb
push
push
xchg
enter
mov
xor
mov
mov
jb
insb
jg
je
lea
push
rorl
jle
pushf
inc
popf
push
cld
jo
fwait
mov
int3
ret
or
pop
mov
pop
add
mov
nop
popl
sbb
pushf
sub
leave
call
ljmp
fildl
push
enter
mov
add
hlt
push
jg
xor
inc
jmp
add
ret
push
inc
inc
hlt
mov
xchg
jbe
mov
cmc
xchg
sbb
sahf
xor
ret
add
jmp
outsb
imul
add
adc
test
aam
pusha
mov
cld
adc
or
pop
jg
and
ja
test
pop
leave
in
inc
mov
mov
fistl
dec
in
push
inc
dec
daa
pop
dec
fadds
icebp
mov
test
roll
sar
sbb
mov
xor
nop
fcoms
mov
sbb
mov
pop
xchg
cltd
jns
push
das
jl
mov
xor
push
nop
jnp
dec
jecxz
and
mov
dec
mov
add
pushf
inc
sbb
in
dec
mov
cwtl
and
les
lahf
test
jl,pn
addr16
push
or
push
jno
aad
sahf
movsl
ljmp
cmc
fbld
add
pop
sbb
adc
fstpt
sbb
ss
fistpll
leave
jg
or
icebp
or
sahf
cmc
insl
popf
jb
insl
shlb
andb
int
aas
inc
mov
pop
sub
sub
stos
icebp
adc
das
or
rorb
sarl
mov
push
mov
add
push
lods
pop
pop
adc
mov
xor
sub
inc
decb
stc
movntps
daa
add
pushf
pop
sbb
roll
mov
hlt
call
lea
or
jle
jbe
pop
add
jle
xchg
outsl
mov
adc
xchg
mov
int3
out
cld
icebp
pop
loopne
add
or
lahf
push
aad
lods
push
adc
fs
add
push
add
mov
icebp
in
cld
bound
jg
pop
add
out
inc
xor
add
shl
je
add
xor
xchg
ret
pusha
stos
stos
cmpsl
mov
sbb
mov
ret
scas
sbb
inc
xor
inc
pop
jnp
ret
push
mov
cli
lret
je
addr16
test
mov
jge
mov
ljmp
cmpsb
test
ficoml
in
sarl
negl
jecxz
adc
jle
pop
dec
in
stc
mov
jo
fistps
iret
test
mov
and
mov
inc
notb
loope
cmp
fdivrs
std
mov
xchg
mov
ret
popf
pop
lret
and
repz
jecxz
mov
xchg
mov
lds
leave
cmpsb
xchg
add
cs
jg
insb
pop
call
and
cld
rcl
mov
bound
xchg
cmpsl
mov
outsl
clc
cwtl
inc
cmp
mov
jo
add
rcll
sub
pushf
and
insb
subb
and
sbb
sub
mov
enter
mov
add
loope
dec
mov
cmpsb
sub
pop
add
outsl
in
jl
outsb
mov
fsubrl
aas
mov
pop
ds
fmull
loopne
fwait
lret
pop
adc
or
sbb
xor
iret
dec
das
enter
test
fsubp
or
or
shlb
imul
jl
filds
xor
fstpt
mov
aad
jmp
insb
pushl
sub
xchg
into
inc
rorl
into
xchg
add
cs
pop
push
xchg
out
inc
jmp
cmc
xchg
test
cmc
popa
pop
push
mov
jmp
cmp
out
jne
pop
pop
pop
adc
outsb
insb
cld
add
and
scas
jno
inc
jno
and
or
ficoms
popa
jl
adc
test
xchg
ret
mov
and
subl
or
xchg
jno
or
jg
in
gs
stos
xchg
in
xorb
rclb
push
sub
mov
push
sbbb
addr16
outsb
cmp
push
dec
je
mov
mov
mov
pop
fstl
mov
popf
mov
pop
jo
or
pop
or
mov
out
mov
add
mov
aam
lods
insl
jmp
test
movsb
mov
jl
jmp
shl
pop
leave
ljmp
pop
hlt
shlb
dec
cwtl
js
xchg
adc
sbb
cltd
fnstcw
add
loopne
frstor
xchg
ljmp
inc
or
cwtl
ja
and
fwait
clc
notb
adc
rclb
cmp
and
aad
pop
or
pop
stos
popf
lods
and
xor
xor
icebp
jb
jb
and
insb
mov
ror
cwtl
shrl
rcl
jnp
xchg
inc
mov
mov
mov
lahf
jns
and
pop
clc
jmp
cld
imul
jge
jge
pop
in
xchg
xchg
faddp
and
push
movsl
mov
or
movsl
loop
inc
adc
xchg
das
dec
xchg
mov
notb
mov
ljmp
pop
in
or
jg
sbb
mov
stos
mov
loop
ret
enter
sbb
or
fs
xor
xor
xor
mov
sbb
jmp
pop
xchg
inc
movsl
and
int
fisubrl
arpl
sub
jo
add
cmpl
ljmp
rcr
addr16
cmp
add
rcl
inc
xchg
outsl
std
int
xchg
dec
fistl
push
popa
repnz
inc
repz
push
sbb
or
mov
test
adc
lods
push
rolb
ffreep
xor
cld
stc
popa
jns
or
mov
lea
pmulhw
pop
xor
scas
xchg
mov
or
das
rcr
test
adc
xchg
gs
fldt
icebp
sti
adc
lret
idivl
mov
add
pop
int3
repnz
lahf
clc
andb
ja
pop
js
rcrl
inc
in
push
mov
and
fidivrl
dec
hlt
cmc
fstpt
push
sbb
adc
pop
xchg
and
push
loope
dec
test
pop
pushf
dec
and
sbb
xchg
das
jecxz
sub
mov
ljmp
sub
lods
faddp
push
insl
test
jecxz
cli
ss
mov
andb
mulb
outsl
sbb
sub
pop
or
push
pusha
adc
fisttpll
mov
adc
outsb
cld
adc
pop
insb
int
icebp
iret
or
das
mov
outsl
repnz
sub
jne
push
add
les
xor
mov
test
or
pop
or
or
scas
rcr
je
scas
pushf
xchg
aad
cmpl
mov
mov
in
mov
or
or
cli
mov
scas
fcmovnu
outsb
mov
pop
daa
movsb
scas
cld
sbb
mov
inc
xchg
lahf
and
and
lods
dec
sbb
push
popf
and
call
sahf
aaa
or
xchg
fsts
sub
lahf
lds
xor
addl
mov
movsb
mov
mov
jne
ret
cmp
mov
pop
adc
inc
adc
adc
sub
fldl
shll
push
sarl
mov
cmp
int
push
mov
pop
jbe
movsl
mov
lea
fimull
adc
inc
lcall
in
loopne
sub
shll
add
mov
mov
clc
add
jbe
imul
fstpt
push
push
daa
loope
mov
or
fdiv
mov
addb
sub
xor
ja
insl
push
mov
jb
and
mov
push
sbb
psubb
cmc
test
shl
inc
or
inc
inc
lcall
push
xchg
mov
sar
jecxz
andl
shll
or
inc
ret
lds
cmp
es
or
lea
pop
clc
sbb
or
adcb
out
es
fsubrl
dec
add
pop
int3
xor
or
je
lods
addr16
rcrl
push
mov
das
jo
fldenv
sub
xchg
pop
mov
stos
cmp
mov
dec
lock
sub
mov
lahf
je
jne
jecxz
mov
dec
call
mov
mov
cltd
xor
sub
in
lea
test
jbe
sbb
repz
ret
jb
leave
pop
gs
jo
jl
fistl
cmpsb
jae
lret
push
std
add
mov
push
mov
lret
lea
fsubr
xor
adc
pop
loop
inc
lahf
adc
into
fwait
cli
pop
mov
fidivl
mov
dec
vpsubq
notl
aaa
sbb
or
jle
repnz
adc
push
sbb
sub
inc
sbb
loope
push
xor
mov
shll
iret
aas
adc
inc
inc
pushf
cs
insl
lds
push
dec
or
testl
mov
sub
xchg
fldl
outsl
jnp
int
sbb
lea
mov
add
or
lock
mov
mov
cwtl
and
ret
aam
or
xlat
mov
or
xor
mov
aad
mov
pop
xor
pop
aam
inc
dec
inc
and
insl
dec
sbb
mov
adc
icebp
push
in
sbb
mov
nop
push
std
aaa
sbb
or
pop
bound
ja
ret
fwait
in
fcoms
mov
mov
push
mov
repz
push
outsb
inc
jge
out
cs
xchg
inc
inc
adc
push
int3
cmp
xor
dec
loop
and
scas
cmpl
enter
loopne
in
xchg
pop
movsl
pop
adc
and
fbld
jns
push
dec
and
cmc
mov
bound
jbe
popa
adc
xor
jb
ja
cltd
add
test
mov
jl
pop
fucomip
mov
lret
mov
pusha
hlt
repnz
sbb
sbb
out
or
cmp
and
and
adc
incl
addb
bound
dec
sub
ja
inc
ror
mov
lcall
sub
jmp
adc
in
sbb
pop
fcomi
test
jnp
add
repz
dec
mov
push
fists
jg
xchg
popa
push
outsb
jo
sbb
cmp
aas
push
pop
aam
ret
into
mov
cs
cmpsb
push
inc
test
adc
mov
push
outsl
push
mov
fsts
das
jmp
sahf
push
int3
fsubrs
xchg
push
xchg
add
lods
or
mov
test
push
ds
pop
ljmp
cmc
xor
jg
dec
ret
movsl
mov
inc
popa
movsl
lods
js
push
adc
lahf
imul
js
fcomi
pop
ret
pushf
adc
clc
fstl
lcall
das
mov
rcl
aam
and
ret
hlt
or
xor
popf
adc
pop
pushl
inc
jbe
repnz
or
sbb
cmp
or
lods
rolb
pop
aam
rorb
insb
inc
roll
adc
add
ret
icebp
cmpsb
fidivrl
and
jle
icebp
add
and
int3
xor
add
xchg
es
int3
sarb
and
stos
sbb
cmp
shlb
int3
mov
repz
lret
rcrb
leave
adc
fstps
xchg
jle
lds
sbb
nop
subb
out
fsubs
mov
add
scas
and
adc
push
scas
push
push
lock
adc
xchg
mov
loopne
add
add
fs
sbb
mov
jecxz
sbb
js
add
mov
mov
jb
stos
loopne
push
xor
arpl
hlt
gs
orb
add
popf
aaa
jb
pop
lds
xchg
dec
test
sub
add
xor
cmp
mov
cmp
adc
xor
pop
push
jl
popf
sti
mov
shlb
mov
and
add
inc
rclb
adc
fiadds
and
xlat
inc
mov
in
push
push
lea
push
sub
adc
mov
and
icebp
andb
mov
sub
push
fisttpll
cmp
jo
xchg
or
shrl
mov
mov
gs
adc
mov
insb
dec
dec
or
shrl
mov
xor
notl
les
js
or
sub
and
pop
loopne
daa
push
aam
jo
mov
mov
nop
or
add
sahf
sbb
hlt
pop
or
clc
mov
test
jge
xchg
cmovb
mov
jecxz
ss
pop
add
testb
lock
jno
sarb
je
pusha
arpl
loopne
cmp
es
fdivrs
sub
jecxz
popa
sbb
push
mov
sar
adc
std
cli
cmp
inc
js
and
push
inc
jnp
dec
push
adc
xor
cmp
lock
cwtl
xor
pop
inc
xchg
insb
dec
adc
inc
sub
or
sbb
mov
cmc
add
js
aas
adc
inc
clc
xchg
mov
hlt
imul
inc
mov
movl
push
mov
adc
daa
out
or
dec
dec
lds
mov
cwtl
add
int3
test
jbe
xchg
movsb
sub
mov
je
ret
ret
call
mov
stos
push
adc
pop
adc
addr16
mov
xchg
and
in
xorb
adc
andb
sub
int
push
xchg
int3
loopne
mov
add
subl
pop
push
lds
inc
int3
push
mov
enter
es
popa
bound
add
out
repz
lcall
lcall
scas
mov
mov
adcb
cs
iret
sub
jmp
test
dec
add
and
mov
in
or
or
mov
xor
addb
sub
lds
push
fisttpll
dec
or
mov
sub
mov
data16
mov
fisubrl
or
fwait
je
add
fisttpl
inc
push
cld
add
test
inc
dec
addr16
shrb
pop
inc
push
dec
adc
mov
and
sbb
mov
add
test
add
call
cmpsl
fsub
stos
push
mov
dec
cmp
sbb
fdivr
and
out
xlat
mov
push
inc
arpl
into
jo
out
in
hlt
ljmp
ss
cmp
push
mov
mov
mov
inc
loope
xor
gs
lea
arpl
cmp
imul
push
dec
mov
xor
xchg
pusha
stos
lret
aaa
xchg
sarl
lds
das
cs
inc
inc
mov
xor
leave
push
scas
pushl
bound
mov
adc
dec
inc
jge
mov
adc
loope
cmp
test
loope
pop
loop
cmpsl
xchg
hlt
insb
test
int3
push
outsl
sar
ja
lret
mov
test
stos
stos
std
imulb
add
adc
cmp
adc
push
sub
clc
es
out
cwtl
cltd
adc
inc
sbb
push
sarl
add
inc
mov
mov
fs
push
sbbl
pop
mov
inc
cld
mov
cmp
call
mov
insb
decl
aad
les
outsb
push
add
sub
movsb
jl
dec
mov
pushl
gs
shr
scas
cmp
pop
xor
cs
sub
and
ds
pushl
jp
aaa
aad
clc
lods
xchg
mov
sub
pop
jle
add
out
add
testb
sbb
xchg
xchg
adc
pushf
in
push
leave
mov
aaa
out
and
shll
lods
out
pop
adc
es
sbb
mov
iret
jns
xchg
sbb
or
ss
call
xchg
lcall
sbb
fidivrl
add
sub
sub
xorl
stos
xor
das
mov
stc
test
jle
mov
mov
sbb
mov
decl
pop
and
mov
jbe
jp
std
test
popa
ljmp
push
jmp
decb
repnz
sbbb
or
or
arpl
and
inc
adc
push
aad
clc
mov
lret
pop
enter
cmp
movsw
add
mov
mov
out
xchg
push
je
stc
imul
adc
sti
scas
pop
cmp
in
adc
xorb
push
popa
mov
push
inc
scas
pop
insl
cmpl
jmp
jns
test
enter
fists
es
push
lcall
lods
repnz
cli
or
mov
psubw
pop
ja
lret
sti
xchg
cltd
xor
dec
and
mov
xor
inc
mov
xor
mov
pop
mov
xlat
mov
lret
sub
int
dec
cwtl
jbe
add
inc
lcall
jp
jb
outsb
mov
idivl
pushf
in
orl
shrb
bound
sbb
mov
cmp
mov
bound
shrb
pop
or
out
mov
add
mov
incl
fistpll
loopne
mov
mov
fstpt
push
add
ljmp
or
adc
mov
xchg
subb
pop
push
mov
flds
rcl
lds
repnz
insb
mov
jecxz
lods
cs
or
adc
pop
icebp
fldenv
or
xchg
out
sbb
ret
sub
adc
sbb
and
pop
pop
pusha
cmp
xchg
adc
cmp
sbb
data16
imul
fcmovb
jns
ret
sti
cmp
mov
sub
pushf
iret
je
push
cmpsb
dec
std
add
lcall
jnp
rclb
lret
jge
push
adc
pusha
sub
rcr
filds
inc
inc
scas
stc
aaa
mov
sbb
ret
pop
sahf
push
mov
xchg
mov
movsl
pop
into
dec
cli
enter
lret
sub
cld
scas
mov
xor
mov
push
or
jbe
adc
sbb
inc
dec
in
jo
jg
adc
scas
mov
negb
mov
out
lahf
jge
mov
scas
pop
sub
incb
aas
movsb
push
fistpll
outsl
cmp
lahf
and
xor
xchg
inc
fistpll
inc
add
push
cld
push
mov
push
dec
enter
inc
sbb
std
outsl
cli
subps
and
add
xchg
in
add
dec
inc
mov
sar
stos
sti
xor
in
fidivrl
lods
sbb
add
ficoml
adc
cld
roll
xor
divb
xor
xor
movsb
stos
es
outsb
fdivrs
mov
sbb
std
call
cmpb
push
xor
push
sbb
cmc
lret
out
cli
jg
mov
pop
stos
aas
mov
inc
xor
lahf
leave
cmc
xorb
pusha
in
sbb
push
push
lret
fwait
std
jg
adc
inc
ljmp
dec
push
add
xor
aaa
inc
rolb
mov
in
das
shlb
push
jne
outsb
cmc
aaa
fildl
cli
jnp
xlat
add
mov
jmp
and
out
insb
ds
pop
shlb
clc
pusha
adcb
jae
stc
leave
sbb
ja
jns
mov
lock
cltd
lcall
or
dec
lock
aaa
inc
aad
cmp
cmp
mov
push
int
iret
mov
add
ljmp
sbb
jmp
xor
push
cltd
js
push
pushf
xchg
xchg
inc
stc
or
push
je
xor
pop
mov
fsubrl
notb
pushf
nop
and
jns
sub
test
dec
inc
push
xor
push
loopne
add
mov
mov
and
cld
add
mov
js
push
roll
add
pop
mov
adc
idivl
lock
cmc
pop
stc
sub
call
inc
mov
int3
lods
sbb
pop
jb
push
mov
dec
push
jno
push
dec
inc
mov
pusha
xchg
lock
mov
pop
jge
sbb
inc
clc
push
jno
pusha
adc
das
popa
adc
push
and
ficoml
cltd
inc
test
or
fsin
mov
adcl
or
out
sub
hlt
in
adc
ljmp
add
jg
sbb
lret
add
and
pop
push
pop
cwtl
ljmp
pop
insb
je
add
push
fidivl
cmp
out
loope
test
fnstcw
adc
dec
loope
and
fbstp
dec
int3
sbb
dec
xchg
inc
and
mov
cmp
repz
cltd
pop
jnp
insl
jge
or
loop
add
rolb
add
sbb
sbb
sbb
fistpll
lahf
xchg
iret
stc
add
pop
ja
xor
data16
daa
imul
aaa
adc
cmp
or
loope
repnz
ljmp
sbb
pop
xchg
push
adc
test
xchg
bound
jecxz
fcomps
pop
cmpsl
lcall
sub
mov
out
outsl
pop
loopne
test
decl
adc
cmp
add
or
cld
pop
rcll
je
aas
adc
xchg
fstp
push
jecxz
mov
adc
and
loop
mov
pop
shll
add
xchg
inc
sbb
nop
and
add
outsl
test
fs
or
negb
add
test
pop
adc
fbstp
aaa
jl
fidivs
sub
ss
mov
mov
jo
and
inc
jecxz
cmc
inc
adc
mov
jnp
lea
adc
dec
adc
repnz
aad
pop
imul
add
sar
clc
jg
fisttpl
call
jecxz
push
pop
rcrl
or
std
jle
loop
mov
insb
fists
xchg
test
adc
andb
aas
int
cli
outsb
and
orb
xor
xor
fistps
call
loop
push
pop
dec
pusha
aaa
rcr
or
mov
test
xor
mov
mov
adc
iret
test
mov
lock
fbstp
jge
adc
mov
fmull
xor
outsl
mov
inc
mov
lahf
lret
fisubs
pop
jl
aaa
and
mov
mov
movsb
mov
mov
sbb
popf
in
or
insb
mov
adc
or
loope
aaa
xlat
xchg
mov
and
adc
nop
jp
jecxz
sbb
push
rclb
push
sub
push
push
mov
fs
add
push
fs
in
insl
mov
std
jl
add
jnp
int3
pop
cmp
fistpll
cld
jl
pusha
fstps
je
jecxz
pop
jo
rorl
xor
ror
jnp
mov
add
outsb
jge
outsl
imul
add
inc
dec
test
vpshufhw
shl
jnp
test
dec
in
or
addr16
mov
sbbb
movsl
jbe
jmp
shl
inc
cli
jno
dec
repz
push
or
shlb
call
mov
es
cmpsb
ffree
lea
or
test
es
mov
xor
les
in
je
fs
loope
js
rcl
or
in
add
mov
int
dec
sub
mov
xchg
call
pop
shrb
jecxz
ljmp
lahf
std
ficoml
dec
sub
dec
outsl
scas
jae
and
nop
hlt
push
mov
or
jae
add
icebp
ss
sbb
imul
out
xor
mov
adc
push
and
add
mov
bound
shll
and
stos
les
mov
cmp
xchg
adc
inc
and
adc
push
jle
inc
mov
mov
stc
add
xor
mov
inc
and
jge
mov
out
js
loope
loope
xchg
cmpsl
sbb
sub
push
mov
jae
sbb
sub
add
and
sbb
mov
adc
pop
or
or
dec
adc
rol
stos
or
fsubl
lea
mov
inc
rcrb
add
in
xchg
aaa
mov
and
inc
hlt
and
es
int3
mov
cmp
and
pop
add
outsl
cld
push
cmp
mov
out
fs
adc
insb
mov
popa
dec
idiv
cld
fs
mov
xchg
sbb
data16
and
xchg
xor
xor
cs
stos
mov
insl
push
cmp
fwait
push
jnp
push
xor
mov
mov
dec
add
stc
pop
push
adc
adc
sbb
insl
mov
pusha
add
sub
pop
sar
dec
sbb
cmp
cmpsb
mov
lods
fildl
sahf
iret
daa
or
jns
push
jge
mov
mov
lea
pop
inc
mov
jle
xor
sub
sti
inc
mov
inc
in
ret
sahf
cli
dec
addl
je
imulb
mov
jne
or
pop
fcoms
jns
adc
sub
mov
push
and
loope
push
popf
imul
mov
out
push
insl
push
adc
lods
les
fdivrp
jmp
and
imul
dec
inc
xlat
jge
add
jg
mov
sub
mov
mov
mov
push
call
add
dec
lret
push
sbb
pop
out
mov
cwtl
xor
xchg
dec
jno
push
add
loopne
jg
jmp
dec
bound
rcrb
and
loope
or
movsb
inc
add
std
lcall
xchg
lock
push
cltd
adc
leave
outsl
inc
and
jp
jge
or
push
addr16
xor
or
jmp
nop
insb
fcoms
les
push
stos
pop
pop
test
jmp
jmp
push
mov
adc
arpl
push
ss
dec
dec
cmp
push
mov
pop
push
cmpsl
pop
or
fcomi
ljmp
out
movb
nop
and
mov
imul
jle
stos
lods
mov
jecxz
inc
pop
test
stos
or
in
incl
sbb
loope
xchg
push
call
lret
pop
lods
int
mov
and
adc
xor
xchg
leave
lods
test
pop
adc
adc
cli
loope
cmp
xchg
nop
jmp
push
int
data16
mov
dec
push
inc
in
pusha
adc
popf
loope
and
inc
loope
mov
test
rcl
scas
jg
pop
pop
adc
cmc
outsb
or
adc
fdivrl
pop
push
sahf
clc
idiv
mov
push
sub
push
sub
adc
dec
sub
inc
mov
pushf
sub
imul
bound
mov
sub
daa
in
inc
pop
fistpll
sbb
rcrb
popa
mov
dec
add
sub
add
call
mov
and
test
inc
adc
lods
std
idivb
and
adc
nop
adc
or
sbb
decl
dec
test
inc
and
push
and
add
test
add
mov
test
dec
mov
add
and
dec
inc
inc
mov
insl
sti
add
adc
inc
push
and
sbb
inc
in
mov
mov
cmp
gs
or
test
or
lcall
inc
inc
jae
and
and
xchg
fbld
and
add
pop
inc
outsl
inc
push
ja
fstp
mov
and
addl
adc
outsl
pop
mov
adc
and
dec
inc
and
mov
outsl
inc
and
pop
jnp
mov
push
and
or
int
xlat
nop
inc
inc
add
imul
lods
mov
sbb
adc
pop
jnp
add
pop
and
out
mov
add
sbb
ja
insb
test
pop
imul
test
aam
mov
mov
and
movsl
pop
imul
in
push
or
pop
fisttpl
dec
mov
fstpl
nop
lds
inc
subps
test
sub
pop
rcll
insl
pop
xor
pop
and
sub
xor
or
mov
lret
aaa
outsb
lods
mov
xor
mov
and
push
xchg
lods
mov
mov
mov
scas
adc
push
inc
movsl
jl
mov
int
push
mov
push
pop
ja
dec
adc
sbb
adc
push
inc
xchg
mov
loopne
jo
mov
or
adcl
daa
adc
mov
fisubs
pop
fs
add
cmp
dec
or
flds
imul
pop
jns
lods
insl
lods
loope
aas
xor
and
push
int3
adc
imul
sbb
push
or
jmp
scas
sbb
shl
push
cmpsb
mov
sbb
inc
xor
pop
jmp
mov
lea
nop
ret
mov
adc
negl
pushf
mov
sub
out
xchg
add
rcrl
mov
sbb
je
and
pop
imul
and
jo
xlat
cmp
sbb
xor
jmp
fcmove
rorb
lods
ja
es
clc
jae
mov
add
pop
movsb
jae
xor
cmp
aam
sarb
iret
outsl
fwait
mov
sbb
jo
adc
push
fistpl
test
add
sbb
mov
dec
pop
pop
inc
fistpl
mov
adc
inc
adc
or
ja
sbb
dec
add
test
jp
xlat
rcrb
pop
fadds
sbb
xor
imul
xor
and
cld
and
adc
add
and
aaa
adc
pop
xor
xor
inc
ja
xchg
adc
push
sbb
es
jae
mov
filds
or
imul
imul
addr16
mov
aam
fwait
jbe
test
inc
add
popa
insb
ss
pop
fldt
loopne
add
nop
loop
push
imul
add
stos
sub
cmp
push
adc
ljmp
test
add
aas
loopne
shl
mov
stos
into
jecxz
int3
mov
lds
mov
loopne
xlat
call
add
pop
jbe
pop
mov
xor
mov
jl
inc
and
jmp
adc
add
jl
push
xchg
sub
dec
adc
xor
jno
cli
add
aas
arpl
aam
decl
add
fwait
mov
roll
cld
nop
inc
pop
test
push
inc
dec
add
movups
dec
dec
push
hlt
adc
sub
and
add
outsl
jg
mov
imul
mov
sub
inc
inc
cmp
inc
add
popf
cmp
pop
flds
je
cld
or
sarl
jns
push
or
incl
fs
xchg
fnstcw
jg
sub
inc
xchg
out
add
fcomps
fsubs
add
or
test
lods
xchg
xchg
cld
lods
roll
or
add
jns
pop
adc
push
into
pusha
jmp
repnz
jl
mov
pusha
fildll
dec
inc
add
idiv
imul
inc
dec
scas
and
fidivs
les
cld
jne
cmp
adc
and
pop
push
mov
and
sbb
lahf
jp
dec
sar
filds
fs
stos
outsb
stc
addl
push
push
mov
rclb
mov
loopne
xchg
push
add
fldt
jmp
add
inc
lret
into
popf
test
cmpsb
dec
push
cmc
lcall
addb
sahf
push
fadds
ss
pop
xchg
es
fldln2
jecxz
mov
nop
shl
lret
dec
in
lcall
add
arpl
into
clc
addr16
fwait
add
loope
data16
mov
or
scas
xchg
jo
shlb
enter
pop
rorb
std
pusha
lods
cwtl
mov
aaa
mov
lds
gs
fisttps
lock
xchg
incb
and
popf
mov
mov
adc
inc
dec
lods
stos
cmp
in
and
rcr
test
insb
xchg
and
add
int
test
inc
push
lock
sbb
enter
adcb
sbb
xchg
cwtl
sbb
xor
xchg
adc
pop
cmp
jg
xchg
ret
test
sub
cwtl
add
int
mov
jne
sub
mov
std
jne
or
test
mov
adc
xor
adc
sbbb
arpl
adc
push
je
jle
cmp
outsb
push
xchg
rcl
sub
ljmp
sbbl
add
inc
stos
add
dec
mov
adc
cmp
push
push
cwtl
std
mov
bound
inc
iret
popa
fs
pop
add
adc
or
add
sub
outsb
pusha
mov
mov
hlt
in
dec
sbb
dec
movsb
inc
cmp
outsl
jo
adc
mov
cld
sub
loope
inc
out
lret
jnp
jae
xor
xchg
out
xchg
dec
xchg
in
stos
cltd
popa
xor
pusha
xchg
or
dec
mov
es
lods
in
vmwrite
mov
sub
add
xor
repnz
jnp
push
mov
push
daa
incl
xchg
hlt
hlt
push
or
xchg
add
jmp
cmpsl
pop
dec
test
das
stc
fsts
xor
push
push
test
loope
out
lods
mov
jmp
xor
sar
push
cmc
mov
pop
out
or
ret
lock
inc
adc
cmpsb
mov
push
lret
divb
loope
js
fldl2e
rcr
adc
cld
xor
pop
push
xchg
lahf
lret
jbe
in
es
ja
push
push
and
lock
sub
or
out
pushf
lahf
icebp
mov
lret
add
out
push
mov
mov
cwtl
ja
fcompl
outsl
mov
aaa
push
mov
mov
nop
sbb
jecxz
jl
fbstp
add
xchg
pop
sbb
push
cmp
fsubrs
idiv
lret
cmp
aas
aaa
mov
mov
pop
mov
add
outsl
sbb
jp
or
in
test
lahf
and
int3
or
cmc
call
aad
ja
daa
clc
test
add
popa
sub
scas
lods
sub
notb
jmp
outsb
fsubl
pop
idivb
sub
mov
add
jecxz
jmp
outsl
add
out
push
pop
add
cmp
add
and
push
pop
xchg
cli
or
inc
icebp
inc
movsb
fldt
jecxz
xchg
sub
mov
flds
icebp
fcmovnu
out
mov
rclb
rorb
out
xlat
fnstcw
mov
ljmp
mov
pusha
adc
mov
add
ficompl
add
or
fcomps
mov
inc
jle
lcall
mov
pop
push
aad
dec
out
cltd
stc
sub
add
fcomp
mov
mov
pop
adc
les
cmp
icebp
aaa
sub
in
mov
sbb
adc
sti
pusha
mov
dec
cmp
arpl
mov
mov
ret
cmc
push
jle
mov
add
repz
adc
cld
jmp
inc
add
pop
and
cmpsl
nop
mov
inc
aam
enter
insl
sub
jb
add
xchg
outsl
sub
aam
add
jle
pop
lock
lcall
test
aam
mov
dec
test
push
sti
je
fwait
add
jmp
outsb
adc
nop
test
loope
ljmp
jmp
lret
dec
aas
lock
jns
icebp
sbb
xchg
push
dec
push
test
sub
mov
sub
mov
data16
jne
aaa
inc
cltd
and
cmc
jno
sub
out
mov
enter
xlat
pop
xor
mov
inc
test
adc
pushl
push
lcall
pop
rorl
pop
add
fs
hlt
scas
mov
clc
mov
aaa
arpl
loope
inc
and
add
shlb
out
push
push
aas
in
add
std
mov
lods
sub
or
jl
push
sbb
sub
sub
push
jmp
aaa
divb
mov
sbb
sbb
mov
arpl
adc
fists
or
sub
sub
je
sti
fcmovne
ss
movsb
push
test
mov
flds
cmpsb
xchg
and
xchg
mov
fstpt
sbb
jo
bound
push
lods
sub
loope
xlat
cltd
dec
jl
scas
sub
jp
jecxz
and
or
pop
add
inc
pop
push
cs
pop
sti
in
ret
rorb
outsb
or
sub
mov
repz
dec
fdivr
xor
cmp
mov
xor
or
pop
inc
mov
adc
mov
sbb
imul
decb
fistps
jg
pop
and
mov
and
or
mov
imul
mov
cmp
lcall
popa
lods
fdivrp
jl
xchg
cmc
mov
cmp
push
fstps
cld
or
mov
jl
int
stc
or
icebp
outsb
cmp
aam
mov
inc
push
sbb
jo
jno
push
cmc
pop
mov
test
insl
enter
or
aaa
fisttpll
mov
orb
int3
fistpll
and
add
jns
jae
testb
arpl
mov
fs
pop
adc
mov
jbe
les
jecxz
sub
fisttpl
jae
adcl
dec
mov
xor
and
pop
mov
out
cs
pop
js
inc
inc
cli
add
ja
cmc
roll
andl
xlat
out
pop
push
ds
fsub
pop
popa
int3
add
mov
sub
je
pop
aad
mov
mov
push
push
cmpsb
inc
testl
ljmp
xchg
inc
or
fwait
jmp
add
jnp
out
mov
cli
imul
or
popf
sarb
pop
add
repnz
movsl
add
mov
dec
pop
and
pushl
xlat
aaa
sub
addr16
xchg
daa
cs
mov
std
and
sbb
cmp
ja
rol
sbb
outsl
insb
int
add
xchg
orb
pop
fmull
pop
cmpsl
and
jmp
sub
push
mov
loopne
inc
sbb
out
movsb
clc
mov
idivb
xchg
pop
inc
sbb
adc
push
in
jmp
cmpb
icebp
movsb
add
outsl
cwtl
lahf
in
pushf
and
nop
fistps
ss
push
jecxz
jbe
jp
and
push
cmp
clc
or
adc
fstpl
pop
add
fisttpl
or
cmp
ja
dec
sub
push
xlat
pushf
pop
cmp
jbe
hlt
notl
jl
pop
loope
pop
mov
cld
cmp
or
push
pop
out
call
push
inc
inc
mov
mov
lock
fxch
push
adc
add
xchg
shrb
fdivrl
xchg
stos
add
xchg
sub
iret
testl
push
pop
addb
ss
dec
aam
je
call
int3
or
sub
pop
pop
decb
xchg
jne
nop
roll
popa
fdivl
loopne
lock
xchg
out
ret
push
leave
jb
fstpt
push
stc
outsl
push
mov
sub
imul
mov
mov
inc
stos
lahf
andb
neg
incl
or
push
jp
nop
jmp
xor
fildll
and
jne
inc
sbb
pop
cmpsb
outsl
in
jg
test
notb
fiaddl
inc
inc
add
sbb
pop
add
repnz
repz
fildl
push
inc
jo
loope
outsb
mov
xchg
ss
mov
scas
pushf
xor
pop
or
mov
inc
stos
insl
fnsave
adc
cli
jl
pop
pop
loopne
lcall
mov
outsl
mov
gs
les
movsl
fdiv
push
shrb
dec
and
jb
mov
cltd
xchg
mov
jl
mov
or
movl
orb
fwait
cs
or
shr
stc
jmp
sub
sbb
lods
mov
dec
add
movsb
icebp
jbe
dec
scas
or
fldt
sti
sbbl
pop
pop
jl
stos
jle
fistpll
mov
xor
ret
pop
and
mov
pop
push
cld
std
std
lahf
mov
sti
inc
fs
je
xlat
cmp
mov
test
cmp
aaa
call
ficomps
jbe
dec
ss
xchg
pop
hlt
out
cmp
push
aad
test
js
sub
xor
xchg
cmp
aad
or
in
sub
arpl
cmc
scas
mov
pop
adc
outsl
lahf
nop
xor
mov
subb
pop
std
push
push
stos
jle
adc
mov
insl
test
mov
rolb
sahf
nop
insb
adc
mov
cli
fstl
dec
bound
add
std
fmull
das
cmc
orl
sarl
mov
popa
loope
adc
adc
addl
pop
frstor
pop
lcall
and
insb
ljmp
ret
mov
xchg
fistpll
jbe
rorb
shl
iret
jmp
or
adc
aaa
inc
sub
lods
jae
push
jg
jno
sbb
xchg
fs
cli
inc
mov
cmc
push
lcall
jp
add
inc
jecxz
cli
push
pop
roll
pop
mov
dec
roll
sbb
fdivl
add
cli
fadds
dec
adc
rorb
push
out
aaa
sahf
test
sub
cli
pop
pop
mov
js
xorb
mov
fcmovu
mov
fldt
push
push
and
mov
xchg
lock
pop
mov
mov
aas
mov
jns
add
addb
divb
scas
add
push
or
mov
sbb
jl
or
shrb
test
das
nop
mov
in
mov
add
mov
adc
cmpsl
and
pop
je
loop
outsl
mov
sbb
mov
mov
fisubs
movsl
pop
and
int3
xchg
frstor
call
pop
add
jge
stc
push
fidivl
sbb
push
push
daa
in
dec
sarl
das
icebp
mov
movsb
arpl
mov
push
call
xor
xchg
mov
cwtl
arpl
mov
push
or
inc
dec
insb
jg
jns
into
mov
out
inc
mov
sti
dec
mov
push
mov
mov
ljmp
popa
js
nop
in
xor
pop
or
jae
iret
add
outsl
mov
add
push
fisubs
ss
ja
jge
out
daa
jg
mov
fisttpl
or
and
and
aaa
push
pushf
loope
mov
mov
aad
or
add
adc
jb
mov
or
mov
or
loopne
xchg
cmp
mov
add
add
clc
cmpsb
mov
adc
adc
adc
push
dec
fildl
mov
push
mov
rolb
push
stos
jg
xor
std
jg
adc
mov
add
mov
test
and
icebp
pop
iret
sub
or
push
scas
ror
jmp
outsl
popl
xchg
mov
jnp
hlt
push
mov
das
fdivr
sahf
cmpl
and
mov
popa
icebp
out
decl
lcall
mov
push
andb
sbb
ret
cwtl
xor
pop
dec
push
cmp
icebp
out
clc
pop
out
clc
testb
lds
pusha
stos
mov
call
jb
xor
pop
mov
loope
pop
push
aad
js
pop
in
sarl
jo
sti
xor
pusha
ret
icebp
aaa
bound
sbb
or
cs
sbb
sbb
inc
mov
ret
pop
cmp
jmp
xchg
dec
jne
fs
aaa
fldenv
adc
ljmp
jno
in
ss
jo
pop
xor
mov
pop
mov
call
jl
aas
push
dec
xor
sub
fisubl
inc
inc
push
das
inc
adc
mov
xlat
push
aad
stc
out
sub
xor
pop
adc
dec
fsincos
mov
aaa
pusha
insb
mov
aam
pop
sbb
dec
lods
stos
fnsave
and
cmp
mov
inc
rolb
sub
jnp
sbb
call
test
mov
fcomi
mov
and
jmp
mov
push
pop
in
sub
std
push
add
outsb
lahf
jo
loop
dec
dec
cmp
std
repnz
jge
cmpsl
lods
pop
insb
in
inc
sbb
dec
cmp
dec
aaa
fdivrl
in
adc
pop
js
in
mov
mov
lret
xchg
xchg
inc
mov
sar
out
jmp
inc
or
sub
mov
push
lods
cmpsl
adc
pop
in
jno
adc
mov
and
cmp
bound
loopne
movsb
mov
jle,pt
mov
test
inc
test
jne
in
outsl
jp
hlt
xchg
mov
jbe
mov
ret
fldt
loope
sub
pop
xchg
aaa
shlb
scas
repz
fidivrs
in
pop
jns
pop
or
lods
xchg
mov
arpl
dec
mov
lods
dec
std
call
inc
movsl
or
sbb
jo
mov
sbb
or
aaa
push
push
sub
dec
insl
insb
jb
push
or
jp
orb
dec
xchg
in
dec
fdivs
adc
cmp
insl
arpl
push
mov
test
xchg
mov
push
outsl
mov
xchg
pop
punpcklwd
sbb
sets
push
jne
out
push
es
xor
dec
shl
xchg
mov
in
es
cmp
xorb
sub
outsb
sub
adc
cmc
sbb
pushf
mov
icebp
imul
mov
push
nop
xor
inc
ds
mov
sub
in
jmp
out
xchg
lret
mov
xchg
repz
sub
xor
mov
add
mov
clc
inc
fadds
dec
pop
mov
push
jge
out
mov
aas
jns
jo
out
fwait
mov
js
jmp
pushf
or
out
pop
lods
sbb
inc
das
dec
inc
add
pop
sbb
xor
push
jmp
nop
inc
mov
pop
sub
jbe
mov
and
pop
or
jmp
mov
mov
jns
pop
jl
jg
mov
jge
shlb
icebp
mov
les
fisubs
adc
pop
xchg
sbb
lea
jl
aaa
ss
int3
das
cmc
je
mov
sbb
cwtl
add
ret
adc
fbld
or
dec
arpl
sbb
xor
mov
or
add
test
lods
icebp
jl
out
jne
clc
hlt
lods
inc
adc
mov
mov
mov
pop
das
out
ljmp
int3
sbb
adc
das
loope
or
enter
insb
adc
inc
sbb
sbb
push
xorb
jp
cwtl
xchg
mov
jp
sbb
adc
fdivs
jne
or
pop
jg
ja
mov
out
daa
push
outsb
cmp
aad
push
sub
lods
decl
jae
sbb
mov
dec
push
mov
mov
shll
fcoms
scas
inc
push
and
mov
popf
or
and
mov
push
adcb
pop
pop
xor
xor
mov
leave
xlat
mov
arpl
decb
push
test
imul
jmp
fisttps
lret
ret
push
adc
cmpsb
in
cmpsb
andl
push
xchg
loope
pop
mov
pop
sub
gs
icebp
jb
cld
nop
add
mov
ret
js
inc
cmp
mov
js
aam
push
add
push
ret
rcl
ljmp
gs
push
inc
test
jb
inc
pop
cmp
out
fsubrs
stos
popa
stos
push
xor
adc
orb
add
mov
movsl
sbb
loope
imul
adc
inc
mov
mov
add
pop
cmp
insb
adc
push
pop
mov
fs
xor
add
js
aas
pop
push
jge
cmpsb
sub
popf
push
mov
pop
mov
and
adc
hlt
subl
mov
xor
lods
mov
xchg
or
and
cmpsb
fwait
test
scas
jg
dec
inc
and
cmp
das
or
sub
call
insb
int3
cmc
roll
push
push
test
pop
xchg
mov
pop
clc
lds
xchg
mov
mov
iret
jns
test
lret
andb
add
insw
test
mov
push
mov
stos
lds
fisubrl
or
nop
adc
lock
into
imul
mov
xchg
xchg
cltd
sbb
pop
and
pusha
sti
in
jae
orps
outsl
aaa
cld
mov
pop
mov
fucomp
mov
popa
add
in
bound
sbbb
cmpsl
and
push
ljmp
into
divb
or
sub
rorl
cmp
xor
cltd
insb
push
fisttpl
xchg
out
data16
addl
addl
popa
pop
and
push
xchg
push
push
pop
jecxz
into
es
cmpb
in
imul
cmc
dec
add
lea
repz
jecxz
mov
adc
and
insb
cmp
pop
insl
jno
clc
inc
and
or
inc
sub
test
jg
clc
push
and
subb
int
inc
sub
adc
adcb
dec
mov
xor
xor
cmc
inc
icebp
rolb
test
or
in
ljmp
inc
call
push
jecxz
fcmove
lea
insb
fldt
bound
pop
cltd
lods
sbb
xor
push
add
adc
xchg
cld
push
fadd
or
popf
cmpsb
shl
xor
pop
call
and
pop
sbbb
adc
aam
clc
outsl
add
jle
cwtl
sbb
add
lock
rolb
fs
das
fnsave
mov
lcall
xchg
mov
enter
push
in
popf
cs
push
cld
sub
sar
scas
clc
sub
pusha
out
addr16
cmc
mov
pop
stos
or
rcr
or
cmpl
test
fs
xchg
jmp
xor
lcall
sbb
andl
cmp
xchg
xrelease
mov
mov
xchg
lods
or
pop
cmp
lahf
pushl
in
adc
fidivrl
pop
into
ss
cmp
add
mov
mov
jle
or
into
lods
dec
in
xor
jecxz
cwtl
test
add
insb
inc
hlt
rcll
lock
imul
decl
in
ss
insl
lods
pop
cmp
adc
cltd
cli
dec
sarl
sahf
add
idivb
push
mov
lods
packuswb
mov
xchg
mov
je
addb
sbb
inc
xor
stos
test
inc
pusha
push
mov
test
subl
sbb
call
cwtl
enter
and
jb
and
outsb
and
cmp
and
push
enter
jp
push
notl
clc
pushl
lret
insb
test
test
mov
push
decl
push
ficoms
fmulp
mov
push
cmp
mov
mov
and
mov
sub
pop
loope
push
mov
pop
pop
repnz
lods
or
es
out
mov
mov
add
aaa
mov
mov
lods
in
out
out
pop
push
jno
xchg
int
xor
dec
enter
stos
cli
dec
lock
mov
mov
adc
add
aaa
sub
mov
outsb
inc
jbe
ljmp
mov
retw
add
jl
aas
mov
aad
cli
loope
mov
mov
xchg
in
stos
inc
out
inc
fisubl
sbb
or
mov
or
mov
jo
adc
stos
jge
xchg
outsl
neg
and
pusha
inc
lds
enter
mov
mov
js
out
or
push
pop
rolb
sbb
add
push
imul
and
insb
adc
ss
nop
inc
outsb
cli
mov
aaa
fiaddl
adc
in
ss
mov
jo
inc
xor
lock
lods
incl
stos
shrd
add
xchg
jo
xor
xchg
add
pop
cmp
mov
mov
xor
imul
daa
cltd
std
pop
inc
or
mov
loope
xchg
or
inc
call
or
fsubl
js
add
pop
cmc
aam
mov
fwait
mov
loope
xor
and
xorb
outsb
sub
pop
mov
cmpsl
inc
fcoms
into
incl
pop
or
ds
xor
lock
xchg
scas
aam
hlt
cmpsb
stos
and
sbb
iret
jp
clc
jbe
insb
insl
xlat
iret
loope
sbb
mov
imull
adc
mov
push
stos
jno
scas
push
xchg
psubusb
add
sbb
mov
adc
inc
cltd
jl
mov
iret
pop
add
rcl
xchg
insb
out
scas
mov
sbb
push
shlb
xor
inc
jns
or
inc
mov
adcl
mov
lock
jmp
insl
sbb
jae
add
cmp
jb
xchg
imul
add
jecxz
sbb
mov
mov
and
mov
mov
ljmp
hlt
jns
sarb
gs
outsb
pop
push
mov
sbb
pop
xchg
add
and
fdivr
ret
sbb
mov
lods
and
add
sub
jle
push
subl
push
ret
test
jecxz
dec
jg
cmpsb
cmpsb
loope
cmp
das
mov
movsl
inc
shlb
icebp
mulb
jo
cli
gs
int
std
mov
sbb
and
push
inc
mov
push
aaa
mov
cltd
je,pt
and
fsts
test
or
xchg
and
rcrl
aaa
sbb
out
fmul
mov
out
adc
mov
outsl
fldt
icebp
adc
movl
lods
or
and
and
xlat
mov
and
aad
mov
sahf
pushf
ret
cmpsl
jbe
push
call
mov
out
sub
pushf
repz
mov
or
jmp
sub
sarl
xchg
or
sub
loopne
or
lods
daa
es
adc
pop
repnz
inc
cs
cmp
test
test
sub
inc
or
inc
stos
cwtl
int3
mov
mov
repz
aad
fstps
sub
aaa
or
mov
clc
jne
jge
imul
call
push
adc
xchg
bound
shlb
push
push
mov
jge
push
loop
jo
jg
std
pop
jle
and
inc
outsb
mov
je
jbe
push
add
dec
push
pop
mov
jmp
cld
movsb
xchg
inc
imul
idiv
adc
sahf
pop
sbb
sbbw
and
mov
cmp
fisttpl
and
adc
icebp
adc
sub
inc
insl
mov
cmpb
push
cmc
mov
lret
lret
jg
loope
xchg
aad
clc
push
in
cli
push
pop
call
pop
js
mov
repz
aam
sti
lcall
jecxz
mov
aad
jne
insb
mov
jns
adc
test
or
mov
and
movsl
fstpl
add
sub
jecxz
dec
lahf
insb
mov
push
fbstp
enter
pop
lock
dec
sbb
lds
loopne
mov
inc
dec
xchg
inc
inc
leave
mov
cmc
and
cmp
dec
in
sbb
in
outsl
push
cmp
xchg
fwait
adc
adc
sub
mov
add
mov
mov
rorl
mov
in
call
push
cmp
or
loopne
ss
dec
mov
adc
clc
push
pop
fcompl
sbb
aaa
mov
scas
pop
mov
cltd
add
jge
jns
xchg
andl
and
xor
loop
invd
jecxz
add
xor
dec
fcoml
sbb
mov
ds
fildl
push
mov
movsb
mov
pop
sti
sub
add
or
mov
in
pop
jecxz
xor
mov
jne
fidivrl
pop
push
into
mov
test
xchg
xor
jl
inc
jl
ret
out
movsl
mov
imulb
sub
jge
xor
pop
mov
mov
mov
pop
pop
es
xchg
push
mov
insb
push
jl
sub
mov
push
stc
push
andb
cli
or
jbe
incl
outsb
das
movsb
jo
cmp
mov
inc
inc
lods
cli
dec
std
and
xchg
test
jecxz
pop
jp
sbb
call
lret
mov
xor
add
clc
cwtl
mov
mov
cli
dec
or
test
bound
ficomps
aas
jg
lods
sbbl
cmp
frstor
push
negb
mov
xchg
jg
jle
jne
sbb
jle
jbe
xlat
repz
xchg
lahf
call
and
add
pop
cld
pop
xor
inc
mov
and
or
xor
push
or
idiv
pop
lret
scas
mov
insl
out
push
cmpsl
movsl
push
cld
outsl
mov
sub
inc
adc
jno
in
lret
jmp
pop
inc
notl
and
push
cmp
std
fs
xor
enter
test
push
add
fdivrp
das
call
popf
pop
je
aam
inc
cltd
cmp
mov
rcl
js
jmp
inc
sarb
xchg
enter
out
and
dec
mov
loop
pop
popa
add
sub
add
fcmovb
inc
scas
loope
mov
cmp
stos
jecxz
mov
and
inc
test
sbb
pop
pop
mov
loope
in
into
out
iret
or
ljmp
jae
sbb
lret
push
lods
ffree
mov
push
js
jmp
es
inc
sahf
xchg
push
and
jecxz
push
pop
dec
test
sub
and
adc
dec
and
inc
sub
flds
mov
test
xlat
jmp
loop
cs
xor
jmp
pop
and
mov
call
dec
test
and
jle
movsl
test
xor
sahf
daa
test
lret
cmp
add
jle
fldenv
xchg
xchg
mov
or
mov
ja
jns
pop
ja
idiv
aaa
loopne
ret
gs
sbb
clc
mov
in
jmp
out
je
push
and
pop
scas
mov
mov
inc
in
js
mov
shrb
pop
push
ljmp
or
rcll
xchg
push
and
or
jno
cmp
mov
mov
stos
xlat
std
outsb
jge
mov
imul
push
jnp
loop
into
and
decb
mov
pop
mov
mov
adc
mov
mov
notb
in
stos
stos
arpl
in
xchg
rolb
clc
or
mov
out
inc
pop
push
fs
mov
xor
lods
lcall
mov
xchg
iret
sar
je
sub
inc
inc
push
xchg
xor
pusha
jecxz
push
mov
out
sbb
and
jle
scas
into
push
xchg
xchg
pop
push
fs
js
cmpb
xor
inc
aam
test
stos
adc
xchg
decb
cld
and
outsl
xchg
addb
test
bound
je
push
xor
mov
movsl
and
mov
mov
cmp
in
and
fstpl
and
stc
gs
or
faddl
and
fisubl
mov
adc
and
or
ljmp
imul
mov
stos
inc
dec
fistpll
mov
fs
adc
lds
shll
data16
js
pop
loop
or
add
fnstsw
rorl
imul
adc
push
jbe
mov
jnp
xchg
xchg
cld
cli
jb
xor
xchg
xchg
inc
repnz
jnp
mov
mov
pop
cli
sbb
add
repz
sbb
sbb
aad
push
pop
cld
pop
sub
jae
fdivr
lods
sbb
lods
adc
cld
push
jecxz
outsl
shrl
lods
stos
inc
push
rcrb
and
cmp
out
cs
mov
hlt
mov
loopne
popl
sbb
mov
mov
mov
std
inc
sahf
cmpl
les
inc
inc
das
std
add
sbb
hlt
es
mulb
xor
mov
cmp
arpl
push
clc
pop
adc
mov
nop
or
jl
sbb
sbb
push
dec
xchg
sub
push
outsb
mov
addb
xchg
fbld
jg
lds
ja
je
dec
mov
lea
lds
jno
leave
in
jmp
lcall
adc
add
push
and
push
fldt
fs
jb
shlb
mov
js
mov
in
jle
je
repnz
scas
scas
fists
and
or
hlt
call
fsubp
dec
inc
and
push
pop
push
dec
cli
push
mov
xor
aaa
xlat
lods
insb
adc
xchg
ror
lea
stc
or
ljmp
pop
test
aam
dec
je
ljmp
xor
mov
das
gs
sub
inc
leave
xor
sub
jo
inc
cld
mov
nop
out
cwtl
gs
sub
filds
cmp
and
repz
sbb
pusha
inc
repz
lock
ljmp
js
mov
mov
idiv
sub
pop
negl
mov
xchg
xchg
push
xchg
inc
add
mov
cmp
in
in
incl
in
lcall
sub
rolb
iret
movb
mov
and
push
mov
jg
out
mov
jne
out
ret
fistpll
aad
pop
xchg
push
mov
das
insl
mov
pop
jecxz
sbb
push
shrl
mov
jb
adc
enter
pop
stc
pop
cwtl
mov
std
pop
jp
fdiv
xor
or
dec
nop
mov
jb
movsb
xchg
pop
stc
cmp
in
in
jg
ret
fbld
mov
sub
rcrb
adc
jbe
cld
jno
push
popf
clc
dec
aam
xchg
or
gs
decl
jnp
push
cmp
loopne
outsl
jg
mov
cltd
nop
and
mov
cwtl
xchg
je
add
push
fadds
cmpb
xchg
pop
pushl
add
pop
cmp
dec
inc
inc
shll
movsl
cmpsb
loope
inc
push
adc
and
jmp
push
clc
dec
pop
xor
jp
ja
sahf
ret
ficoms
stc
in
test
mov
in
lea
arpl
xchg
sbb
mov
or
push
pop
adc
cs
stc
add
push
dec
clc
inc
jp
lds
pop
sahf
icebp
dec
sbb
mov
sbb
dec
sbb
or
add
xor
repnz
cli
jg
int3
jecxz
jmp
loope
and
inc
out
aam
adc
xor
lret
push
or
mov
ret
xor
leave
les
lret
xchg
xchg
icebp
or
incl
mov
sub
orl
test
insl
or
lahf
inc
xlat
mov
add
adc
jae
jle
pop
icebp
idiv
cmp
pop
pop
xlat
lret
movsl
push
imul
push
sub
inc
xchg
or
lea
cld
decl
jp
imul
ds
sbb
inc
mov
mov
mov
mov
inc
fnstcw
xchg
popf
push
jmp
mov
jne
daa
stc
xor
pop
pusha
mov
inc
adc
movsl
lods
into
mov
push
outsl
hlt
outsl
mov
std
ljmp
je
and
je
or
icebp
lods
sahf
cmp
xor
or
cmp
sub
inc
mov
jne
aaa
mov
subb
mov
loopne
stos
sub
aaa
xor
sub
inc
jmp
inc
mov
push
mov
fiaddl
lahf
mov
pop
mov
stos
pop
push
and
mov
pop
fdivr
fucomip
loopne
dec
add
cli
push
out
inc
or
insb
pop
in
pop
cwtl
stc
out
xor
aaa
jne
jge
jmp
cli
idivb
icebp
xor
jmp
ljmp
jns
adc
lret
mov
or
mov
ret
push
cs
cmpsb
xchg
in
sub
dec
push
and
movsl
xor
sub
mov
js
push
sbb
pushf
out
mov
sub
out
sbb
icebp
pop
pop
xchg
sbb
sub
imul
decl
data16
repz
or
in
test
xor
daa
dec
dec
mov
movsl
outsb
cmc
ljmp
sbb
sti
movsl
jle
mov
aam
inc
jno
iret
daa
fcoml
push
cld
xchg
into
jo
sbb
js
call
sbb
imul
iret
lcall
aam
call
pusha
ret
cmc
push
xchg
ss
mov
aad
fcompl
insl
movsl
pushl
scas
xchg
bound
xchg
push
push
outsb
jge
out
call
dec
lcall
aaa
and
ljmp
pop
subb
push
jbe
out
mov
pop
dec
aaa
dec
jo
inc
enter
dec
or
push
pop
call
dec
mov
mov
sahf
in
sub
insb
inc
sbb
addl
push
jnp
test
insb
mov
and
dec
xchg
out
inc
push
xor
xlat
fistpll
dec
mov
cltd
std
stos
or
add
aaa
jle
out
cwtl
pop
clc
mov
sbb
lret
daa
jge
cld
rolb
shl
add
je
xchg
adc
iret
jns
and
mov
mov
jae
pushf
dec
mov
lds
jae
dec
test
push
xor
repnz
sub
fistps
mov
mov
cmp
sub
sbb
lahf
lods
sar
or
push
push
fbstp
adc
sub
sub
lcall
and
adc
cli
aas
push
call
loop
mov
cwtl
out
jns
pop
add
stos
sbb
pop
hlt
push
sahf
lock
test
outsl
les
ljmp
lds
cmovno
mov
xor
and
clc
sbb
aad
js
xor
pop
push
rcr
mov
inc
outsb
jg
mov
and
mov
mov
mov
test
jae
aas
loope
xchg
fidivrl
inc
hlt
ss
cmp
dec
xchg
mov
outsb
jnp
push
push
cmp
insl
stos
incb
xchg
dec
daa
mov
imul
cmp
mov
sub
lahf
pop
add
in
pop
loope
lahf
sub
ja
mov
mov
out
mov
push
or
add
xor
lds
lea
aaa
inc
test
ret
xchg
mov
das
pop
test
xor
shlb
mov
mov
dec
divl
pop
repz
push
outsl
inc
mov
hlt
or
es
out
in
stos
fildl
jle
lea
cmp
mov
xchg
pusha
adc
mov
sbb
mov
fcoml
xchg
sub
mov
call
cmpsb
cwtl
andl
lea
loope
cwtl
push
adc
jnp
dec
and
notb
mov
add
lods
mov
sbb
add
insl
push
push
mov
pop
adc
hlt
notb
aas
loop
inc
cmp
or
adc
js
loopne
push
daa
in
push
test
xchg
sbb
or
inc
insb
shr
dec
inc
mov
mov
into
inc
dec
mov
sti
fisttpl
inc
sbb
xor
add
loope
js
sub
jbe
push
pop
std
orb
mov
cmc
aas
pushf
ljmp
xchg
mov
mov
mov
mov
xchg
int3
push
jmp
decl
sub
or
stos
adc
ret
pop
lret
and
xchg
rcll
jmp
data16
sub
lods
add
or
xchg
or
test
pop
cltd
push
aam
aad
jp
subl
xchg
or
or
mov
pushf
fstp
add
shrl
sarb
push
inc
jne
push
or
in
stos
test
addr16
sbb
inc
mov
dec
jb
pusha
sub
scas
insb
push
xchg
xchg
pop
add
jg
out
push
xchg
mov
call
out
sub
add
mov
or
cli
fistps
lahf
xchg
imul
xor
inc
mov
adc
shl
jb
rolb
xchg
pop
fiaddl
add
sub
sahf
sbb
in
mov
incl
insb
loope
mov
fcmovne
cli
mov
or
mov
rorb
cld
or
pop
mov
stos
xchg
popa
in
jbe
mov
clc
aas
cmp
fstpl
int
lock
inc
mov
sti
mov
or
std
pop
enter
fwait
ss
stos
add
inc
mov
push
xchg
mov
outsl
and
lcall
out
cmpsl
and
pop
add
or
icebp
rolb
xchg
cmpsl
lods
push
push
cld
das
lock
sbbl
sbb
and
outsb
loopne
lods
fldl
enter
dec
sbb
addr16
dec
cmc
lret
outsb
fldenv
jg
cli
mov
jbe
xchg
pop
pop
jb
gs
mov
jecxz
sbb
or
and
frstor
nop
bound
push
shlb
cmp
fnstenv
sub
mov
mov
pop
add
fs
mov
jno
jmp
or
roll
sbb
mov
mov
push
jno
jb
imul
xor
inc
mov
insl
pop
clc
lods
fdivrp
int
xchg
xchg
sub
inc
popa
imul
repz
inc
outsb
mov
mov
cmp
xchg
cmpsl
je
push
das
jno
pop
clc
popf
cmp
lds
sar
sbb
add
enter
and
jl
dec
sbb
fwait
test
cli
sbb
sub
imul
cmp
pushl
push
adcl
and
js
cmp
imul
xor
jg
jns
mov
pushf
lcall
loope
scas
xor
adc
xchg
jecxz
call
sub
dec
push
adc
cld
cwtl
test
cld
lea
mov
pushf
xchg
mov
mov
out
jle
dec
jg
dec
add
xor
dec
cli
fdivr
push
loopne
inc
dec
js
mov
in
loope
push
pop
adc
jo
fcmovu
scas
leave
xchg
mov
sub
sub
lret
pop
mov
notl
roll
das
nop
dec
pop
fsubrs
test
cld
lahf
sub
dec
mov
mov
jno
stos
sbb
sbb
inc
fmull
pop
sub
adc
in
es
call
or
jle
addb
sub
test
hlt
movsl
incl
orb
sub
aas
mov
add
push
sarl
dec
push
cld
ds
aam
ret
sub
and
repnz
lret
push
push
push
cmp
shlb
int
gs
loop
pop
and
mov
or
nop
lods
clc
jecxz
adc
sbb
adc
mov
mov
lds
mov
push
je
jg
or
dec
pop
das
fnstcw
ret
dec
aam
pop
sti
js
jb
mov
hlt
pop
stos
sbb
dec
lret
call
movsb
push
sub
fsubrs
hlt
pop
push
subl
pop
fdivr
inc
imul
jo
push
jo
mov
push
xchg
add
add
xchg
movsl
fcmovnbe
xchg
and
sub
loope
xchg
mov
adc
ljmp
popa
cmp
insl
push
dec
mov
mov
and
push
adcb
and
and
add
cmc
fildl
aad
shll
push
stos
push
sti
mov
xchg
lea
lods
mov
mov
incl
pop
push
sbb
fidivl
mov
mov
cs
mov
xlat
decl
add
or
lret
pop
lds
add
or
pusha
movsl
call
pop
testl
push
out
pop
jg
lahf
stc
push
fists
add
push
and
cwtl
std
das
sub
mov
and
jmp
jg
or
call
testb
lods
imul
or
inc
pop
adc
test
loope
dec
ja
sub
jp
xchg
dec
or
pop
cmp
xchg
cmp
mov
js
cli
push
inc
push
pop
mov
mov
mov
outsb
push
mov
cs
or
lcall
cli
jg
mov
daa
inc
dec
dec
movsb
push
sub
add
jecxz
pop
in
push
add
cmpsl
incb
mov
mov
fcoml
aaa
cmp
sub
dec
add
fists
hlt
cli
mov
mov
mov
shlb
andb
rclb
push
jmp
sbb
adcb
lret
lret
rcrl
push
mov
adc
adc
out
insl
mov
mov
movb
inc
fnstsw
adc
add
sub
dec
mov
loopne
loope
inc
cmp
push
mov
jge
or
pop
lock
inc
std
or
leave
ret
mov
pop
stc
rcrb
jo
jb
cmc
in
jg
mov
loop
sbb
icebp
mov
xchg
inc
and
psrlq
test
aam
xor
cli
mov
mov
rclb
mov
adc
testb
incl
stos
mov
popl
test
pop
fdiv
jmp
cmpb
xor
icebp
push
insl
dec
loope
andps
fsubrs
xchg
mov
jp
jl
dec
loopne
jne
js
dec
fists
xchg
jbe
fs
mov
ljmp
jecxz
ss
mov
cmc
xor
sar
ficoms
sbb
push
test
dec
dec
cmp
jg
ror
push
mov
loop
add
jge
mov
xor
add
adc
and
sbb
add
adc
push
rcrb
pop
pop
aam
jno,pn
pop
fldt
and
mov
fdivr
in
push
addr16
popa
pop
push
sbb
and
dec
sti
pop
pushf
lret
mov
outsl
jle
inc
out
insl
insl
lret
mov
jg
xchg
xor
mov
popa
mov
push
dec
in
insl
outsl
xchg
fadds
push
int3
shll
and
das
mov
xor
mov
ss
pop
loop
mov
clc
cmp
mov
dec
cs
pop
jl
imul
mov
lcall
lock
cmp
pushf
sub
jno
or
push
aam
mov
ds
loop
inc
jb
mov
in
adc
test
leave
add
and
ja
jl
iret
or
repz
jecxz
and
jg
xchg
je
xchg
adc
xor
call
sub
sub
inc
jb
cmp
cld
scas
mov
ret
mov
in
mov
jne
sbb
inc
dec
mov
sbb
sub
xor
fwait
and
mov
mov
xchg
pop
xchg
pop
pop
or
or
mov
fidivl
jne
andl
int3
test
cmc
dec
xor
mov
or
cmp
idivb
add
lea
add
in
std
pop
fisubrs
cmp
in
xchg
mov
mov
dec
mov
and
fadd
test
dec
shr
push
jmp
fldcw
mov
mov
dec
push
std
imul
push
pusha
jecxz
dec
add
xchg
int3
call
loope
mov
adc
and
divb
mov
sti
imul
and
add
in
mov
xor
xchg
cmp
lret
push
and
test
xchg
fwait
jmp
cmp
fldenv
lcall
cmpsb
sbb
and
addps
sub
pop
mul
cltd
hlt
ljmp
mov
add
jne
mov
notb
je
cmp
repz
jecxz
push
add
pop
jae
and
or
and
scas
jns
add
and
outsl
inc
pop
imul
mov
push
or
and
mov
xor
adc
les
ss
push
jge
mov
dec
int
cmp
inc
pop
jmp
addr16
mov
sub
push
inc
pop
stc
sub
add
jno,pt
sahf
mov
mov
xchg
loope
iret
std
jl
cmp
outsl
shr
bound
arpl
in
push
aaa
pop
and
adc
mov
xor
test
pop
xchg
gs
hlt
neg
cld
movsb
mov
adc
lcall
loope
add
lcall
fcoms
orps
or
pop
call
dec
dec
jbe
shr
test
inc
movsl
xor
add
add
cmp
aad
scas
pop
or
xchg
aad
rcr
jo
icebp
mov
insl
jge
sbb
mov
iret
test
push
aas
inc
cmpsb
mov
cs
xchg
mov
sbbb
mov
test
out
sbb
mov
loope
mov
inc
icebp
mov
jle
jl
dec
xor
sbb
sub
pop
cmp
inc
mov
mov
outsl
jge
sub
and
aam
push
pop
lret
or
inc
mov
out
mov
outsl
pop
and
mov
xchg
mov
repz
sub
outsb
pop
mov
hlt
adc
pop
push
mov
xchg
pop
push
add
loope
popa
mov
hlt
popf
xor
aaa
lds
add
lcall
jge
sbb
add
mov
mov
xor
pushf
cltd
aam
fcompl
mov
leave
inc
mov
subl
insl
mov
aad
or
xor
inc
cwtl
pop
mov
std
lea
ret
sub
mov
jle
and
sbb
inc
inc
sub
mov
out
fwait
popf
mov
adc
push
fdivr
adc
in
andl
mov
mov
lret
mov
or
lods
pop
iret
ljmp
cltd
cli
loop
ret
mov
xor
cmp
ret
roll
ret
shl
sahf
inc
ret
ljmp
sbb
push
movsb
daa
ljmp
pop
jbe
sub
test
mov
mov
ja
shl
ss
ffreep
push
mov
ljmp
das
insb
jno
fidivrs
jae
lret
xchg
lahf
pop
insb
sarb
fwait
insl
lcall
push
aaa
push
mov
test
mov
mov
jbe
test
test
out
sbb
adc
xchg
xchg
js
aad
stos
ret
push
data16
add
out
aas
mov
scas
cmp
ret
add
inc
rcrb
mov
lods
add
or
xor
pop
mov
dec
pop
sub
mov
movsb
fbstp
out
jb
and
insl
lea
mov
clc
movsl
fidivs
xor
adc
mov
imul
stos
xchg
mov
xchg
and
fwait
loopne
push
mov
xchg
inc
xchg
fwait
push
lret
icebp
pop
pop
push
aaa
loopne
lea
imul
lods
xor
aad
sbb
daa
ss
test
or
lea
dec
pop
and
lods
dec
or
call
and
xor
xchg
lret
mov
sbb
rol
cmp
leave
jecxz
out
inc
decl
insb
or
mov
andl
outsb
push
es
and
dec
sbb
scas
jns
addr16
mov
jbe
xor
inc
aas
dec
ds
test
xor
testb
fldenv
inc
jbe,pt
sub
cmpsl
fdivr
jecxz
xorb
inc
pusha
outsb
repz
jmp
fildll
lcall
sub
lods
testb
sub
adc
ds
outsl
jecxz
cmp
ljmp
jmp
or
or
dec
mov
outsl
fistpl
or
mov
mov
add
cwtl
test
xchg
divb
mov
cmpsb
pop
mov
icebp
mov
sbb
sbb
or
fcomi
xchg
popl
sarl
mov
stos
xor
or
mov
cmp
mov
dec
lock
lock
dec
add
sarl
sbb
and
mov
push
fdivrs
sub
mov
push
jbe
in
insl
mov
ret
sub
fildl
cmpb
jp
loopne
sub
insl
mov
adc
xor
or
pop
mov
push
inc
fnstsw
cmp
out
jecxz
push
arpl
pop
cmp
roll
dec
pop
jbe
jae
xor
jmp
out
inc
xchg
and
sahf
out
rolb
testl
mov
ret
push
xor
js
inc
adc
pop
pop
fwait
mov
sub
mov
bound
inc
inc
mov
mov
mov
dec
ljmp
loopne
rcll
sarb
adc
mov
xchg
gs
and
shrl
jmp
das
scas
jbe
andl
clc
add
rcll
push
cs
inc
out
in
jg
lods
and
pop
loopne
faddp
push
push
lods
movsb
cmp
shlb
push
xor
mov
outsl
stos
clc
or
cmp
insb
push
sbb
xor
es
xchg
cmpsl
in
mov
adc
stos
or
pop
push
add
xchg
clc
call
sub
cmp
inc
inc
xchg
adc
sarl
xor
pop
sbb
sbb
mov
jnp
sub
mov
ret
hlt
aaa
or
jno
hlt
das
ror
inc
pop
mov
xchg
sub
add
fnstsw
jo
gs
sahf
lods
stos
jne
fstl
sbb
mov
repnz
mov
inc
or
repnz
dec
in
jbe
and
jbe
push
test
leave
push
sub
cmp
jecxz
cmc
xor
jns
pop
faddp
mov
mov
shrl
inc
das
xchg
cld
stos
pop
fsubrs
aaa
ss
adcl
push
scas
mov
cltd
xchg
orl
imul
jecxz
mov
jbe
push
inc
jecxz
fstpt
push
cmp
lcall
xor
dec
mov
dec
inc
test
shl
aaa
lahf
mov
in
mov
popf
icebp
sub
jne
das
pop
push
inc
mov
lret
inc
push
aas
ficoml
out
add
shll
xchg
ficomps
sub
stos
std
jge
repz
cs
adc
or
test
push
cltd
pop
movsb
das
imulb
and
push
rcll
push
mov
testl
inc
into
push
inc
ds
ror
add
add
outsb
imul
out
sub
incb
insb
mov
fwait
arpl
mov
and
aaa
jno
in
sbb
out
or
push
clc
data16
push
xchg
loope
jns
jns
mov
jle
bound
and
mov
xor
sbb
pop
sub
or
sbbl
inc
inc
cmp
iret
popf
xchg
pop
adc
je
movsl
imul
mov
cmp
loope
and
or
pop
outsb
lahf
insb
out
or
and
lahf
xlat
pop
fcomi
nop
mov
js
dec
push
rolb
push
and
xchg
or
dec
cmp
dec
push
sub
in
pop
push
sbb
shrb
fucomi
inc
pushf
sbbl
les
outsb
sub
and
lret
jl
mov
out
and
push
js
pop
push
stc
dec
jecxz
jg
lcall
fnsave
es
clc
imul
sti
mov
stos
loopne
jmp
enter
movsb
xchg
jle
adc
int3
decl
inc
popl
push
lret
push
xor
mov
std
mov
in
push
mov
xchg
or
jns
movl
inc
jge
out
scas
push
mov
xor
outsb
pop
and
inc
mov
loope
pop
sbb
std
loopne
outsl
xor
ljmp
cwtl
sub
fldcw
push
out
pop
lock
out
xchg
push
loop
mov
cld
sbb
pushl
test
xor
rcll
inc
cmp
cmp
dec
cltd
loop
je
fnsave
adc
jno
popf
xchg
xchg
aaa
rcrb
mov
inc
std
push
jg
sbb
hlt
adc
fs
mov
mov
push
testb
inc
popf
or
fmull
pop
mov
push
sbb
jbe
cmp
mov
popa
mov
or
arpl
mov
int
aaa
inc
rolb
mov
stos
jg
stos
call
in
data16
adc
and
icebp
subb
pop
clc
sbb
and
dec
xchg
or
addl
rcrb
fs
imul
cmc
cwtl
pop
jo
bound
dec
and
pusha
das
adc
push
jno
or
jbe
and
scas
testb
pushl
pop
mov
cmp
orb
xor
daa
jne
inc
or
jg
rcr
les
inc
push
mov
cli
pop
mov
push
jmp
and
pop
dec
stc
or
outsb
jno
add
inc
or
arpl
pop
fiaddl
mov
test
mov
and
adc
jne
push
loopne
clc
stc
adc
mov
mov
addb
push
gs
loop
mov
ljmp
or
ja
ljmp
add
inc
inc
popf
test
jne
jle
jecxz
iret
shll
fs
xchg
in
mov
outsl
leave
cli
call
movb
ret
mov
sub
aaa
cmp
scas
scas
mov
and
cmpsl
ficoml
in
jnp
mov
mov
sub
mov
sti
jle
cmp
scas
pushf
cmp
aam
inc
add
out
inc
adc
push
and
mov
xor
push
pop
fstl
fisubl
inc
jbe
cmc
mov
sbbl
mov
xchg
test
adc
mov
mov
adc
mov
jb
inc
mov
cmc
testl
xchg
adc
dec
loop
adc
fwait
sub
and
and
int3
inc
movsl
push
jbe
and
add
and
mov
pop
popf
subb
adc
dec
push
xchg
mov
imul
imul
add
rcr
pushl
sub
xor
jae
jnp
bswap
xchg
sub
adc
testl
fsubr
pop
add
pop
stos
jg
pop
inc
add
sbb
dec
ljmp
outsl
or
test
addr16
jg
pop
and
stos
push
xor
jmp
insl
push
jo
inc
sbb
jo
xor
mov
mov
call
or
aas
mov
xchg
lods
or
lcallw
sub
pop
or
into
mov
or
sbb
or
lods
or
or
mov
das
into
pop
rcrl
insl
add
fcmovnb
add
ret
out
push
sbb
xchg
push
dec
outsl
lea
sub
mov
mov
mov
out
aas
jl
mov
inc
jmp
imul
pop
fcomps
outsb
fimuls
mov
lcall
lcall
jge
jecxz
add
adc
daa
in
xchg
mov
mov
cmp
cld
test
push
xchg
xor
mov
aad
mov
xor
pop
push
rcl
xchg
in
lods
mov
sbb
dec
icebp
ret
mov
das
shlb
adc
mov
pop
pop
test
or
les
mov
pop
push
xchg
mov
push
pop
clc
js
or
sub
in
lcall
jno
stos
sub
testl
push
addr16
icebp
arpl
icebp
sub
mov
nop
mov
shlb
out
sbb
or
adc
ss
das
inc
mov
push
and
scas
jl
nop
sbb
mov
js
jle
idivl
add
push
push
mov
outsb
jnp
push
cli
scas
dec
xchg
push
push
xor
pop
cmp
push
pushf
mov
pop
pushf
test
push
jl
pop
or
aaa
pop
popa
jp
cmpsl
inc
or
pop
dec
aas
cld
mov
lds
inc
add
outsb
sbb
or
push
mov
fld
hlt
sbb
dec
leave
orb
jno
or
inc
jle
fisttps
scas
adc
stos
pop
insl
inc
adc
inc
sbb
pop
mov
sub
hlt
lds
mov
arpl
ficoml
sbb
sbb
pop
popl
mov
mov
clc
inc
aaa
into
mov
sbb
cmp
sti
sub
pop
mov
insl
loopne
rcll
cmpsb
loop
test
aaa
jg
cmp
fwait
call
xor
sahf
stos
addr16
pusha
jecxz
bound
add
mov
out
xor
inc
inc
shlb
test
mov
ljmp
or
pop
dec
dec
lods
enter
mov
push
push
mov
dec
aas
sub
cli
test
dec
or
and
sti
mov
or
addr16
iret
out
xlat
or
in
fucomip
daa
inc
stc
mov
pusha
stos
mov
or
loop
push
scas
lret
mov
ds
push
out
dec
push
jmp
add
push
popa
bound
inc
add
outsb
sahf
loop
or
xchg
loope
cmp
cs
ret
xor
inc
cmp
fiadds
sbb
push
je
ja
popf
call
sti
or
ret
push
pusha
ret
and
pop
cli
jg
mov
repnz
xlat
pop
lret
xor
dec
je
jo
pop
icebp
addb
cmp
jp
mov
loopne
movsl
pop
aad
sub
sub
dec
mov
push
dec
dec
lahf
add
push
aad
pop
cmpl
shll
mov
push
mov
sbb
xor
mov
je
cmpsb
pop
sbb
pop
cmp
icebp
or
mov
outsl
insb
xchg
sbb
pushf
mov
loope
pop
push
push
mov
shlb
jbe
hlt
test
mov
fcoms
inc
test
xchg
or
mov
pop
jo
cmp
mov
xchg
cmc
mov
sar
das
std
mov
push
lods
push
out
out
xor
cmp
jo
pushl
push
lcall
add
ss
fbld
xor
into
ds
jl
iret
dec
dec
aad
js
xchg
jno
lret
sbb
in
mov
rclb
les
repz
fistpll
js
inc
es
test
cli
sbb
xchg
imul
stc
xor
xchg
js
outsb
sub
in
fistpll
in
jp
jns
cltd
or
stos
repz
aam
xchg
mov
sub
dec
stos
popf
in
mov
mov
cld
adc
in
hlt
bound
lret
nop
dec
rorb
sbb
ljmp
in
and
jge
and
and
xchg
mov
mov
inc
push
cmp
cmpsl
cltd
push
mov
outsl
sbb
movb
fidivs
xor
xchg
adcl
test
pop
call
pop
push
jne
outsb
mov
in
dec
movsl
and
aam
pop
jp
shll
add
and
xor
xlat
int3
push
pop
push
and
ja
cmpsl
add
ret
aaa
mov
pop
xchg
jg
imull
out
fdivr
fists
and
mov
movsb
add
in
adc
push
das
inc
icebp
cld
into
fdivs
adc
adc
push
cld
push
mov
jp
mov
or
ljmp
imul
add
and
mov
xor
add
sbb
sbb
dec
outsl
mov
sbbl
and
sar
fcmovnb
mov
and
sar
sbbb
test
mov
mov
loope
ffreep
loope
push
xor
je
cmp
push
arpl
sbb
pushf
daa
iret
cli
xor
mov
lods
lds
inc
sub
lds
fnstsw
out
enterw
cmc
dec
sub
cli
lcall
int
ret
lahf
mov
cmp
loopne
clc
mov
sarl
xchg
mov
mov
std
lcall
fadds
les
and
hlt
push
xor
cli
or
mov
push
aaa
testb
jg
outsl
mov
fnstcw
push
sbb
into
movzbl
dec
call
pop
jl
in
das
lret
jo
xor
push
lods
jne
adcl
dec
mov
fsub
clc
xchg
mov
pop
add
mov
mov
xorb
pusha
mov
cmp
in
nop
mov
add
sub
sti
cmp
outsl
dec
xor
lcall
sti
mov
push
lret
ss
std
xchg
mov
dec
sarl
or
rcrl
sbb
mov
sbb
jo
pop
xchg
call
xor
sub
mov
in
sbb
int3
push
dec
inc
sub
cmp
push
movsb
clc
cld
inc
ret
jo
ds
rcl
cltd
push
fwait
outsb
pop
in
push
xchg
and
and
xor
xchg
leave
add
mov
or
jb
mov
icebp
push
mov
xchg
lcall
cmp
mov
push
inc
push
sub
stc
aad
imul
xchg
andl
adc
out
and
pop
andb
inc
inc
inc
xchg
hlt
mov
shl
call
loop
ret
jl
sbb
out
insl
lods
jbe
sbb
pop
xor
pop
sub
pusha
xchg
test
scas
dec
and
sbb
mov
fnstsw
xor
push
jns
ds
cld
inc
sbb
rclb
or
pushf
rclb
jo
sti
add
xchg
fs
mov
inc
cmc
sti
outsb
je
add
rclb
add
fidivl
fistpll
data16
shlb
push
jnp
loop
ss
add
icebp
lret
movsl
mov
sti
add
mov
jno
pop
jp
shrl
push
xchg
adc
bound
jle
mov
sub
or
sub
dec
inc
cmpb
fwait
mov
mov
scas
or
gs
sbb
mov
add
adc
imul
mov
xchg
cmp
imul
or
mov
es
dec
stos
sbb
jecxz,pt
fldt
lea
xchg
icebp
adc
add
out
test
sbb
or
shl
jnp
loopne
loope
pusha
lock
jp
out
leave
add
xor
pop
fistpll
loopne
sbb
or
or
jmp
je
fdivs
ret
enter
xor
dec
ljmp
mov
aas
andl
test
push
das
mov
fldt
mov
cs
rolb
das
std
pop
mov
and
mov
mov
adc
rclb
aas
push
cmp
jo
jo
xchg
shll
sub
jno
scas
xlat
ss
fwait
icebp
pushf
int
inc
stos
push
push
icebp
aaa
push
or
cmc
push
mov
jo
mov
add
out
ud2
cld
mov
testb
and
mov
lea
or
sub
xchg
push
mov
iret
cmp
pop
mov
int3
add
mov
je
mov
gs
icebp
jl
xchg
addb
pushf
outsl
sub
gs
push
xchg
or
stos
in
push
repnz
stos
repnz
jns
int3
xlat
fcompl
sti
cmpsb
outsl
into
cli
dec
xchg
mov
in
pop
pop
jns
iret
cmp
cvtps2pi
pop
push
aam
push
inc
jo
push
push
fisttps
fcmovb
dec
adc
inc
ja
out
mov
stc
and
gs
inc
fldt
ljmp
adc
std
in
xchg
inc
int3
jne
lods
test
push
sahf
mov
sbb
lock
or
lods
std
dec
sbb
fmull
adc
sub
out
xchg
jg
or
les
adcl
push
jb
insb
lcall
cli
ret
int
js
sbb
fistl
cmp
inc
dec
inc
outsl
sub
xor
ret
aad
idivb
lods
imul
mov
and
test
stos
sbbb
cmp
add
push
jae
xchg
fsubl
fsubrs
lret
nop
pop
push
cmc
mov
sbb
add
leave
pop
mov
sbb
cmp
pop
sbb
inc
sahf
cmc
push
pop
pop
aam
jmp
mov
xchg
dec
mov
clc
jmp
mov
lret
fwait
inc
aam
mov
and
sbb
int3
aas
fdivrs
lds
jge
push
push
xchg
pop
testl
cmp
xchg
fwait
out
push
xchg
cld
cltd
ja
dec
cmc
fmuls
lock
das
inc
xchg
movsb
arpl
orl
aam
shrb
out
sub
mov
or
xchg
imull
stos
ss
mov
mov
adc
sub
ret
in
cmp
fsts
inc
xchg
fsubrl
push
cli
pop
imulb
lds
cs
mov
jecxz
fldt
loope
arpl
popf
inc
bound
dec
shlb
sbb
pop
js
xor
sbb
dec
jp
xchg
jmp
pop
ret
push
ds
add
mov
movsl
test
pop
xchg
movd
daa
jmp
es
js
cld
jl
cmp
ficoml
shr
popa
xor
sbb
mov
int3
mov
push
adc
dec
sub
fwait
in
call
or
pop
add
repnz
lock
lahf
lahf
js
mov
daa
adc
push
pop
mov
mov
dec
add
xor
lods
xchg
cmp
adc
rorb
and
test
les
fbstp
jecxz
add
or
pop
pop
loop
mov
loop
pusha
xor
mov
jmp
stos
or
push
cmp
fdivrs
movsb
fdivrs
sub
mov
adc
sbb
pop
jle
shll
xor
cli
les
sbb
mov
cli
mov
adc
hlt
mov
push
adc
sbb
cld
imulb
icebp
adc
sub
pop
and
into
fxch
aas
sub
adc
aas
sahf
jl
mov
lock
lcall
inc
sbb
push
mov
jb
daa
xchg
ja
xchg
std
add
or
sub
cmpsl
and
in
stos
iret
push
popa
pop
std
ret
scas
inc
ja
dec
jl
and
cltd
or
decl
fdivrl
push
jg
xor
push
pop
or
scas
mov
loopne
mov
pop
xchg
and
lahf
loope
nop
fwait
int3
sti
sbbb
sub
ds
out
push
repnz
mov
mov
lcall
mov
xor
pop
sub
sbb
sbb
ds
aad
jmp
pushf
push
mov
push
push
add
es
fadds
xchg
cmp
adc
mov
cld
mov
imul
mov
push
mov
inc
sbb
or
jecxz
inc
and
add
cli
and
sub
mov
cs
dec
jle
movsb
xchg
outsl
out
test
pop
dec
sahf
sub
adc
jbe
rcrl
push
bound
roll
outsb
jo
rorb
xchg
xchg
and
mov
and
enter
inc
std
or
or
clc
data16
ds
mov
sbb
add
inc
aad
mov
or
inc
fldt
arpl
popa
and
mov
dec
mov
pop
jnp
in
dec
sbb
and
icebp
in
sub
test
dec
push
pop
out
xchg
push
jns
cmpb
xor
sub
das
push
jb
add
or
add
bound
cs
outsl
insb
lods
xchg
push
adc
and
neg
cli
pushl
pop
xor
sbb
push
sub
mov
loope
pop
ror
sbb
mov
bound
rcll
or
in
inc
pop
in
cmp
and
jnp
pop
xor
loop
pop
insb
mov
mov
bound
xor
sub
sub
pop
cli
xchg
xchg
js
or
test
xlat
xor
test
fcmovnu
jp
ds
or
xor
mov
push
jecxz
add
cmp
inc
fs
mov
add
fnop
pop
or
dec
std
cmc
in
jg
ficoml
mov
movsl
mov
jbe
lcall
cmp
xchg
and
test
jo
mov
push
stc
in
mov
sarl
mov
push
rcrl
xchg
xor
mov
push
cli
pushl
cmp
jl
rorl
mov
jecxz
fwait
cmp
mov
shlb
enter
mov
mov
or
das
push
mov
mov
loope
xlat
out
cli
mov
rclb
lret
shll
lods
mov
sbb
outsb
inc
xor
fld
add
sub
push
fimuls
lods
ja
add
xor
sub
cmpsl
iret
les
mov
jno
gs
das
dec
ja
mov
ror
mov
in
add
jb
jbe
add
or
mov
pop
movsb
inc
sbb
sbb
lcall
jge
xchg
mov
popf
dec
push
aaa
xor
or
adc
mov
lret
or
stos
sahf
inc
lods
loopne
jne
and
pushf
scas
rcr
outsl
std
fcmovne
test
and
lret
dec
or
loop
jmp
push
adc
mov
data16
lods
xchg
addl
pop
cli
ljmp
sub
cld
lds
push
outsb
insb
push
fidivl
and
in
rclb
shr
and
insl
mov
cmp
dec
adc
lock
push
mov
mov
cli
je
pop
adc
jo
ljmp
scas
xor
sbb
adc
stos
out
sar
in
or
dec
leave
stos
cmp
or
pop
sub
mov
adc
mov
jno
lcall
mov
test
mov
xchg
xchg
sbb
int
sar
mov
and
fsts
inc
xchg
icebp
push
pop
mov
mov
xchg
orb
loopne
shll
cmp
sub
xor
rcr
cli
fistps
adc
dec
mov
push
imul
stos
es
outsl
sub
stc
dec
xor
mov
sbbb
fcmovu
mov
jno
push
ret
push
fdiv
outsl
cld
sub
cmp
fcomp
mov
aam
inc
pop
mov
aas
popf
add
lea
push
mov
setle
cmp
sub
adc
inc
xor
clc
xor
decb
sbb
and
mov
repnz
push
push
sub
xchg
push
call
cmp
sbb
add
sbb
lret
hlt
pop
pushl
sub
repnz
fbstp
mov
out
lret
mov
and
or
test
sti
lea
out
ficompl
push
sahf
mov
shrb
mov
pusha
stos
lahf
cmp
sarb
mov
push
pop
clc
lods
icebp
mov
ret
pushf
repnz
adc
xchg
stos
cmpb
cld
test
pop
les
test
xor
adc
inc
sar
sti
jg
xor
movsb
aam
sub
gs
arpl
pop
cli
inc
fistps
mov
xor
pop
ds
jmp
negb
ss
daa
or
add
push
popa
test
jmp
mov
xorb
aad
std
xor
cmc
lods
test
push
inc
sub
gs
add
scas
mov
xchg
adc
pop
cmpl
push
pushf
outsb
push
cmp
dec
and
and
mov
ss
push
pop
icebp
jg
std
outsl
fidivrs
mov
addb
lock
and
inc
add
sbb
push
test
fisttpl
mov
shrl
rolb
insl
stc
hlt
xchg
std
cmp
dec
or
xlat
mov
sub
add
sub
jmp
sub
push
or
fdivr
fstpl
and
inc
sub
out
out
mov
int
popf
rcl
mov
and
int3
adc
xchg
sbb
rolb
cmc
cmpsb
into
adc
add
fnstcw
sbb
push
sub
lret
xchg
jg
push
in
fisubl
mov
dec
xchg
cmpsl
lret
sarb
xor
adc
lahf
test
add
sub
pushf
rcl
cli
outsl
mov
scas
outsb
inc
mov
and
lea
mov
aas
or
fistl
cmp
adc
sahf
stc
comiss
mov
or
adc
or
inc
fisubl
jge
std
jg
pushl
cmpsb
or
or
add
pop
inc
pop
mov
mov
ljmp
pop
sub
sar
mov
test
jae
incb
ljmp
pop
mov
xchg
pop
mov
mull
outsb
mov
fsubl
cli
sbb
int3
adc
fsubs
incl
or
rclb
adc
mov
out
or
or
out
test
int3
xorl
pop
test
add
mov
mov
fs
inc
adc
cld
lret
push
inc
leave
fistpll
adc
sbb
stos
ret
sbb
loopne
mov
push
jp
dec
jmp
cwtl
xor
stos
jne
call
cmp
sub
outsb
mov
xor
fstpl
aad
lahf
iret
mov
push
jmp
fdivl
pop
jbe
xor
or
pop
stos
pop
fwait
dec
pop
into
and
sbb
in
rorb
outsb
pop
clc
lea
cmp
pop
xor
ret
sub
sbb
xchg
out
pop
xor
lea
push
push
push
mov
fidivrs
pop
clc
mov
mov
es
ret
rolb
mul
or
iret
int
test
mov
ljmp
lea
sbb
and
push
sub
push
loope
orl
in
mov
mov
je
aaa
push
mov
out
or
mov
test
mov
mov
xchg
mov
mov
jb
es
fbstp
jl
clc
dec
incb
dec
loop
mov
push
pop
mov
lock
inc
inc
or
sbb
out
jns
ja
add
inc
add
and
dec
or
pop
incl
mov
inc
xchg
fsubrs
ret
aas
icebp
inc
push
mov
test
pop
or
icebp
jg
push
xlat
push
and
loope
shll
pop
in
jp
mov
jmp
mov
jle
stos
mov
pop
insl
addb
cmp
inc
ret
inc
mov
inc
das
mov
or
lock
xchg
push
xchg
into
outsb
enter
ret
rcr
inc
pop
lea
call
pop
mov
in
pop
ljmp
dec
pop
dec
out
js
inc
inc
and
sbb
inc
aad
in
and
cwtl
outsl
fstpt
sbb
or
pop
mov
ss
in
xchg
sub
mov
and
pop
js
jns
inc
sbb
lret
push
mov
push
mov
xchg
dec
jo
outsb
call
addr16
enter
lods
and
or
ss
je
add
jmp
inc
add
adc
cmpb
adc
jg
mov
enter
pop
cmp
lret
and
push
add
adc
aam
aaa
mov
dec
subb
pop
push
lock
mov
or
mov
popa
jbe
cltd
pusha
inc
fadds
sbb
sbb
addr16
xchg
into
mov
sub
in
insl
sbb
test
clc
iret
aad
pop
clc
add
imul
stos
xor
fmuls
cld
rcl
xor
testl
add
stos
fisttpl
rcl
cmp
sti
adc
scas
cmp
cs
dec
pop
ljmp
pop
pop
pop
ljmp
sbb
inc
push
jne
call
pop
adcb
jo
and
adc
gs
test
mov
cld
div
push
xchg
ja
out
sbb
sbbl
xor
mov
call
test
sub
pop
add
out
frstor
outsb
mov
mov
push
mov
pop
pushl
push
mov
lcall
jns
cmp
mov
xchg
dec
add
repz
aaa
mov
pop
ja
mov
sub
and
cmp
call
mov
outsl
xchg
and
stos
arpl
int3
rcrb
loopne
or
push
stos
xorb
mov
mov
outsl
test
shrb
cmp
dec
fwait
clc
lea
testb
sub
aam
rorl
push
sub
cmpsb
pop
std
or
call
fneni(8087
pop
nop
sbb
fsubrp
call
js
pop
adc
xor
imul
ljmp
pop
sub
loopne
mov
pop
sar
lcall
call
pusha
push
cmpsb
cli
push
cmc
pop
dec
mov
loopw
mov
dec
dec
mov
xchg
shrb
inc
popf
cmc
push
sbb
mov
out
std
test
sti
lock
add
adc
in
mov
dec
jmp
insl
push
fisttpl
mov
insb
mov
fists
out
gs
mov
mov
fistl
nop
in
add
mov
xchg
ljmp
test
icebp
cmp
aas
rorb
rcrb
ret
dec
sub
stos
jle
mov
jg
into
js
call
mov
pop
nop
sub
das
or
jle
and
jbe
js
es
jge
aaa
cmp
jns
mov
push
push
xor
pusha
sub
shr
arpl
jo
stc
mov
out
int3
out
adc
adc
pop
add
mov
xchg
sbb
mov
jg
pushl
cld
pop
aaa
push
out
pop
ss
dec
sbb
sub
outsb
xchg
mov
bound
les
mov
scas
push
loope
inc
pop
pop
loopne
xchg
xor
or
push
cld
jmp
xor
mov
mov
mov
push
and
cmp
mov
daa
mov
xchg
mov
inc
hlt
nop
xor
inc
pop
and
push
pop
add
sti
pushf
testl
push
bound
mov
mov
cmp
stos
mov
push
test
fsubl
push
pop
cltd
call
ljmp
sbb
ffree
dec
lods
push
mov
xor
fs
fwait
jl
sub
jno
add
cwtl
js
mov
add
mov
loopne
pop
out
shlb
xchg
sbb
lret
jo
out
call
xchg
cmp
mov
outsb
inc
call
adc
in
mov
dec
or
inc
icebp
jecxz
test
in
cmc
fists
xchg
or
xor
inc
cmp
call
and
mov
cli
jbe
add
mov
lds
push
dec
sbb
push
insl
xor
mov
or
push
cmc
xor
cmpsb
jno
inc
jp
insl
add
sbb
cwtl
push
pop
push
ficompl
aaa
xchg
inc
incl
and
push
mov
sub
ss
xor
xchg
test
nop
shlb
aad
mov
mov
pop
lods
xchg
inc
or
loopne
loope
sub
cwtl
jecxz
frstor
rcr
adc
mov
mov
inc
add
test
xor
sub
add
fists
mov
add
test
aaa
enter
ret
inc
clc
loopne
or
icebp
adc
jnp
aaa
mov
dec
nop
lret
fsubl
int3
or
ret
movsl
cs
popf
mov
push
je
mov
cmpsb
bound
mov
pop
loopne
mov
rclb
sub
inc
xor
sbb
loop
andl
mov
jl
push
push
sbb
daa
xor
test
test
shlb
pop
mov
je
inc
or
sarb
pop
or
out
jle
mov
cltd
sbb
pop
loopne
inc
or
js
aaa
ljmp
pop
in
push
mov
jg
orl
push
push
int3
jns
outsb
or
out
popf
ret
push
jl
loopne
test
mov
mov
sub
shll
mov
xchg
cli
clc
repnz
pop
mov
xchg
pushf
pop
out
adc
lcall
negb
aad
inc
or
repnz
inc
out
jl
sbb
push
out
mov
sbb
out
mov
clc
jnp
lds
sub
data16
push
push
xlat
mov
pop
jle
and
sub
aad
addr16
rol
insl
pop
out
mov
pop
call
mov
loopne
nop
inc
aad
jmp
lds
inc
jns
adc
stos
sub
scas
arpl
imul
scas
sbb
mov
clc
mov
icebp
adc
addb
xor
and
or
clc
mov
adc
aaa
sti
jmp
add
cld
imulb
sbb
mov
leave
aam
pop
mov
xchg
inc
lahf
xor
jle
movl
mov
mov
mov
adc
pop
ljmp
lret
push
lret
mov
push
jmp
and
imul
and
jle
sub
push
mov
call
test
cmp
leave
cli
mov
ljmp
sub
pop
inc
jne
push
pop
lret
pop
movsl
pop
xchg
sub
lahf
popf
mov
popa
sbbl
xor
dec
into
cld
or
rep
iret
pop
iret
mov
roll
pop
mov
shrb
jle
mov
bound
mov
push
call
fs
stos
xchg
xchg
inc
stos
push
push
pop
add
mov
push
jns
ljmp
push
icebp
or
or
jecxz
mov
add
fs
orb
test
add
mov
mov
std
sub
call
insl
and
es
and
add
repz
stos
std
ja
add
lahf
adc
cli
in
sbb
pop
adc
adc
mov
sbb
pop
sbb
iretw
and
icebp
adc
dec
mov
repz
test
pop
outsb
add
fbstp
inc
mov
paddd
and
orb
cmp
sub
mov
mov
jle
scas
fwait
stc
popf
test
add
mov
cltd
hlt
inc
icebp
push
push
in
add
lret
or
in
push
or
mov
push
or
inc
repnz
sti
mov
testb
insl
sar
cmp
out
int
rorb
sbb
pop
or
popa
xchg
aad
in
lods
jbe
push
std
dec
sbb
cli
dec
dec
xchg
in
jb
add
popa
mov
aad
fdiv
jo
daa
add
mov
xor
add
mov
loop
lahf
cld
scas
loopne
and
aad
or
cmpsl
xchg
jo
jae
jbe
inc
xor
rolb
inc
aam
add
fdivrs
xchg
sbb
sub
push
mov
lcall
mov
es
inc
sub
pop
imul
jge
arpl
ret
adc
push
int3
push
add
dec
adc
movsb
stos
adc
rol
inc
mov
mov
in
push
mov
xchg
or
loopne
jecxz
mov
adc
rorl
sbb
and
jecxz
cld
fisttps
ficomps
ficompl
decb
iret
dec
lcall
adc
push
or
xlat
xor
sub
jl
inc
ficoms
sti
xor
lock
imul
sbb
and
pushf
nop
sti
mov
dec
push
outsl
and
jmp
cmp
out
add
or
ffreep
add
add
rcrb
mov
lods
dec
out
ret
push
iret
lods
sub
push
popa
push
fldt
or
xor
add
mov
pop
mov
jp
and
rcll
jnp
jbe
push
push
push
leave
mov
inc
mov
fistps
outsl
scas
movsb
icebp
clc
push
jl
pushf
dec
dec
and
dec
or
insb
xorb
in
hlt
pop
lods
scas
jo
cli
adc
adc
inc
sub
dec
lds
cmpsb
jae
cmpsb
lret
push
es
add
lahf
inc
push
call
in
or
and
pop
and
cwtl
cli
enter
push
push
fmull
adc
pop
ljmp
das
push
mov
sbb
and
inc
mov
lds
xor
fildll
cmp
dec
ret
das
mov
or
test
int
xor
pop
js
or
push
mov
lahf
or
cmpsl
or
test
jno
pop
std
mov
adc
push
icebp
sbb
ret
in
inc
les
pushl
sub
push
in
pop
dec
daa
test
out
cmp
mov
outsl
mov
data16
xor
sti
cld
lcall
lret
addr16
inc
in
test
adc
xor
and
push
lods
scas
scas
in
dec
sbb
mov
out
fisubs
nop
inc
pop
mov
jo
and
repnz
ljmp
fisttpll
xor
sub
decb
mov
ss
xchg
clc
xchg
decb
jmp
inc
int3
std
fs
sarb
mov
sbb
aas
sbb
pop
xchg
mov
pop
sub
test
sbb
xchg
add
cmpsb
test
xchg
cwtl
cs
push
add
call
fadds
or
cmp
fstp
mov
inc
sbb
inc
clc
dec
jno
lods
std
adc
inc
scas
push
sbb
adc
mov
test
or
fwait
stc
mov
repnz
push
cmpsb
aam
imul
add
mov
push
xor
lea
fwait
loope
and
hlt
dec
push
mov
mov
pop
mov
mov
lret
sub
adc
rolb
cmpsl
jge
repz
push
fimull
mov
cli
mov
xchg
pop
out
aaa
movsl
fildll
faddp
inc
lock
xchg
inc
data16
xchg
in
fdivl
add
or
stos
fistpl
rcr
jne
adc
les
repz
sahf
sub
jo
adc
xchg
lcall
in
mov
les
mov
lock
mul
hlt
lds
mov
push
or
std
fildl
mov
inc
mov
mov
jbe
ljmp
jnp
outsl
lods
shll
mov
jg
outsb
sub
adc
outsl
xor
push
and
arpl
bound
lds
pop
popf
fcoms
mov
pop
sub
stos
loope
push
lods
pop
mov
lcall
hlt
jecxz
sub
cmc
fadds
insb
enter
out
xchg
pop
fsubrl
fnstcw
insb
lret
in
cmpsl
icebp
pop
cmpsl
dec
dec
rorb
cli
stos
icebp
push
divl
push
and
jp
adc
xor
outsl
lock
in
dec
in
mov
lret
jnp
inc
mov
add
pop
je
filds
sub
ds
add
popf
test
fdivrs
push
mov
xchg
mov
push
cli
xchg
jge
sbb
sbb
mov
cli
cltd
pop
dec
push
jns,pt
mov
adc
dec
sub
arpl
fdiv
dec
xchg
mov
stos
jecxz
push
fwait
cwtl
mov
xchg
ret
mov
add
nop
mov
xchg
mov
cli
out
cs
inc
mov
xor
or
push
lock
cmpsl
fadd
testb
mov
outsl
mov
dec
add
sarl
mulb
mov
out
aad
push
adc
mov
sub
adc
mov
xor
test
test
mov
ljmp
rolb
add
fsubr
negb
and
pop
jl
push
and
mov
mov
and
add
sbb
or
jo
adc
arpl
cld
sub
cwtl
cmp
mov
arpl
daa
lods
push
lcall
add
test
pop
mov
pop
jno
adc
adc
fwait
jge
dec
incl
mov
or
ds
or
iret
adc
push
xor
mov
test
mov
pop
jp
and
imul
and
and
stc
push
cmpsl
fsubl
push
stos
test
iret
adc
pop
cmp
mov
cmpl
or
and
cltd
mul
inc
test
dec
mov
in
inc
fnstenv
dec
and
bound
cmc
test
dec
or
pop
aaa
adc
faddl
xchg
sahf
xorb
ror
scas
adc
ja
xchg
xchg
outsb
mov
mov
out
cltd
add
outsl
sbb
aam
mov
or
leave
push
push
mov
pop
test
ret
xor
ret
jne
jne
and
jg
pop
inc
inc
testb
adc
pop
cli
lods
movb
leave
fldlg2
fwait
xor
pop
xchg
ljmp
fwait
std
push
mov
xorb
nop
fwait
cmp
je
mov
lea
cmp
jb
mov
aad
lret
cmp
aas
mov
int
lret
push
jg
cmpsl
aad
sub
or
push
sarl
call
shrb
pop
pop
shrl
push
std
test
shll
aaa
mov
lock
adc
pop
dec
ret
mov
push
rcr
das
pop
push
lret
idivb
inc
rcrl
or
mov
movsb
mov
add
xor
dec
sbb
push
movsb
push
mov
inc
mov
mov
xadd
or
ss
xchg
stos
add
loopne
push
dec
popf
pushf
orb
rol
adc
and
loop
cmp
mov
out
orb
aaa
jle
shr
jmp
sarb
aaa
out
mov
xor
jmp
mov
jnp
jnp
mov
cli
pushf
in
mov
sbb
das
fmull
enter
sbb
mov
push
inc
sbb
mov
pop
or
sbb
mov
cwtl
dec
fsub
scas
test
daa
testl
jbe
inc
imul
gs
pusha
adc
pop
aad
jb
cmovo
test
sub
dec
fs
cmp
mov
xor
dec
das
dec
aaa
sub
cld
inc
cltd
jge
mov
dec
bound
jmp
orb
daa
rorb
dec
sub
lcall
js
xchg
stos
mov
lods
xor
jp
loope
popa
ret
cmpsb
inc
add
and
clc
fistpll
pusha
daa
orb
adc
repnz
mov
lods
cli
outsb
and
adc
clc
sahf
sti
fadd
movsl
icebp
lods
sub
inc
add
clc
lea
shlb
sub
and
and
mov
push
cmp
das
lock
outsb
or
movsl
adcb
lahf
sub
and
jnp
cld
hlt
shll
js
sti
jb
adc
nop
adc
das
aaa
dec
mov
cld
lea
std
mov
push
ja
movsl
lock
mov
add
sti
inc
xor
add
push
nop
fildll
inc
pop
mov
push
lock
repz
lds
inc
xchg
test
cld
popa
in
icebp
rclb
lcall
pop
call
out
dec
imul
adc
enter
pushl
ja
aad
adc
cmc
cmp
lock
in
adc
inc
jl
mov
loop
or
or
and
ss
arpl
sub
inc
loope
xor
rcrb
in
pusha
fstp
cmp
jno
js
push
or
dec
aad
es
and
and
adc
outsb
mov
jb
jge
mov
xlat
icebp
mov
sub
jb
test
jle
test
or
shrl
mov
adcl
sub
mov
sbb
mov
testl
mov
enter
js
test
hlt
add
or
loopne
ret
jne
push
sar
jbe
and
xchg
andb
sbb
std
mov
xchg
mov
lds
pop
sbb
mov
jmp
jb
into
nop
mov
ja
inc
xchg
mov
sub
daa
add
mov
fwait
pusha
or
and
repz
push
mov
in
adc
xchg
loop
loop
mov
mov
fstl
push
pop
cli
push
xor
inc
pop
mov
push
xchg
add
movsb
mov
sbb
incl
icebp
push
jbe
inc
jbe
mov
push
popa
cli
nop
or
fidivs
lea
aad
inc
adc
movsl
and
push
int
outsb
add
in
movsl
sub
cmp
xchg
dec
sub
xor
jae
outsb
pop
dec
test
mov
aaa
mov
mov
and
mov
aaa
fidivrs
insl
es
aaa
sbb
sbb
loop
shlb
mov
mov
aad
xorb
push
add
insl
cwtl
call
jg
sbb
sub
in
xor
cmpxchg
sub
aaa
inc
sub
repnz
fcmove
cwtl
ljmp
jmp
mov
test
dec
mov
jge
dec
lcall
mov
jmp
bound
out
les
addl
mov
adc
imul
mov
pusha
lods
rclb
sbbb
movsb
adc
and
testb
mov
mov
int
jno
cmpsb
push
add
push
cld
test
les
rcr
repnz
pop
xor
and
jl
mov
jbe
adc
lock
sti
movsl
push
pop
pop
add
push
stos
popf
xchg
iret
lahf
adc
shrl
add
mov
cmpsl
mov
repnz
enter
lret
jae
adc
in
pusha
test
fimull
out
inc
pop
sarb
push
adc
mov
xor
ja
dec
adc
test
jecxz
sti
pop
sbb
or
mov
adc
jge
mov
xchg
push
lahf
sub
sbb
pop
adc
or
sahf
mov
hlt
in
ret
inc
scas
out
or
addl
int
stos
jae
mov
jmp
and
jns
dec
or
mov
add
lods
lods
inc
cmp
or
in
ss
imul
lods
repz
movsl
mov
xor
das
mov
insl
add
mov
sub
movsl
sub
inc
sti
or
clc
or
and
inc
data16
insl
jecxz
sbbb
jecxz
call
push
inc
ret
sbb
ret
dec
push
sub
pop
inc
xchg
and
movsb
jae
call
mov
jl
xchg
lret
fwait
adc
add
and
mov
call
xor
lret
cmc
sub
loopne
cmpsl
mov
out
in
cmp
mov
adc
inc
push
or
inc
push
and
les
pop
je
mov
aad
fdivrs
enter
fwait
sub
sbb
int3
jnp
stc
das
cmpb
call
push
and
xchg
out
outsl
cmp
fdivr
mov
subb
clc
jp
insb
test
popa
inc
dec
aas
xchg
and
jnp
cmp
xchg
and
rorl
enter
jb
test
pop
sbb
push
lret
mov
rcr
mov
stc
nop
fcmovne
jo
arpl
inc
sahf
fsubs
sbbb
lock
jne
add
ss
test
icebp
dec
xor
jl
mov
mov
sbb
sbb
push
xchg
pop
int3
and
lea
lock
push
fsubrl
aad
inc
pop
xor
aas
out
jl
add
add
add
mov
lcall
xor
mov
stos
sub
pop
cmp
push
or
sub
xor
xchg
mov
hlt
mov
xchg
jecxz
push
pop
cmp
jecxz
dec
int
dec
addb
test
xchg
repz
cmp
inc
in
mov
sahf
fs
mov
test
mov
call
dec
jbe
rolb
shrb
sub
outsl
sarb
fldt
pusha
lods
mov
icebp
ret
pushf
dec
cwtl
je
testl
sub
dec
sbb
cmp
mov
xor
lock
int3
or
inc
xchg
int3
jae
enter
inc
mov
adc
lock
jecxz
sarb
stos
in
ffreep
adc
lahf
mov
ss
cmpsl
adc
loope
or
test
xchg
cmp
mov
fidivs
or
shll
test
sub
test
mov
lea
or
sub
mov
pop
pushl
iret
inc
outsl
stos
push
adc
add
sbb
cli
lret
hlt
sbb
insl
rcl
pmovmskb
pop
pop
add
leave
hlt
pop
mov
sbb
push
jnp
lds
jg
push
mov
inc
repnz
pop
mov
cmp
pop
mov
hlt
mov
pop
sbb
dec
inc
push
cld
negb
mov
mov
xor
shr
push
ret
call
rcrl
out
add
and
or
lock
icebp
sbb
clc
jecxz
mov
mov
test
inc
aad
xchg
jae
lea
cltd
test
sbb
movsb
inc
cmp
mov
fnsave
adc
adc
xchg
test
dec
test
shl
addb
xchg
cmp
hlt
push
mov
outsl
js
pusha
stos
sbb
je
es
dec
inc
ret
aaa
ja
popf
and
pushf
mov
add
movsb
mov
int
dec
dec
call
sbb
sbb
pusha
cli
inc
and
pop
iret
pop
cli
gs
adc
mov
mov
pushl
mov
mov
in
pop
fdivrl
push
fadd
pop
jp
or
fsubrl
std
jg
mov
loope,pt
xchg
loope
adc
sbb
jo
mov
push
lds
fisubl
ds
jo
arpl
movsb
inc
adc
cwtl
int3
mov
incl
sub
test
mov
rcll
or
and
mov
test
neg
or
xor
fiaddl
cmpsl
adc
add
fisttpl
outsl
adc
push
lret
push
inc
adc
sbb
mov
test
inc
sub
fidivrs
adc
scas
ret
jmp
adc
insb
mov
fbstp
pop
fsubl
jnp
inc
fstpl
mov
call
ja
data16
pushf
mov
movsl
xchg
cmp
test
fwait
sti
mov
inc
fisttpl
or
pop
cs
dec
outsl
pusha
mov
inc
mov
push
push
clc
dec
outsl
test
mov
and
fists
lods
data16
jle
dec
shlb
fimuls
lods
cmove
push
dec
mov
aam
jae
dec
jo
and
pop
jp
add
push
ficompl
and
add
or
in
cwtl
cmp
mov
dec
sti
jb
fmul
lock
icebp
cld
pop
push
cmp
lods
xchg
mov
lcall
outsb
push
fdivrl
push
in
hlt
mov
in
leave
xor
clc
das
xchg
or
loopne
les
inc
jae
jmp
dec
sbb
cmp
inc
sti
push
jno
sbb
test
rol
rclb
test
push
cld
or
inc
repnz
ret
movsl
mov
cmc
outsl
sub
cmp
gs
andb
ljmp
pusha
mov
test
popf
aam
aaa
mov
jmp
ljmp
xchg
pop
jg
add
popa
cmpsl
neg
test
push
inc
or
das
int3
pop
jecxz
add
add
mov
cmp
push
sub
fidivs
cmp
mov
xorl
and
ret
shl
or
dec
out
jb
shlb
xchg
les
add
mov
ja
addb
and
sub
mov
xchg
xchg
sbb
sbb
mov
outsl
shl
insl
cmp
jmp
flds
scas
cli
cmp
push
push
push
mov
adc
pop
repz
mov
sahf
or
es
fistps
std
fs
fs
scas
jns
inc
add
pop
aad
inc
clc
aad
cld
xor
lock
mov
mov
aaa
xchg
cs
lock
jl
inc
fsubrs
subb
mov
jl
imulb
adc
aad
icebp
stos
xchg
pop
cmpb
lahf
fidivs
test
and
or
mov
mov
jo
mov
or
push
mov
mov
mov
xchg
rol
jge
mov
dec
mov
fisubs
pop
push
mov
shll
rcl
insl
movsl
dec
xchg
test
and
sub
subl
dec
arpl
xor
scas
add
les
lods
out
sbb
pop
sub
aad
aaa
mov
pop
cvtps2pi
xor
movl
mov
mov
std
icebp
and
inc
push
shr
out
xchg
jmp
pop
push
pushf
inc
add
push
out
or
jb
cmp
fists
push
sub
or
mov
push
xorl
loope
rcll
sbb
aas
mov
test
les
fnstsw
mov
dec
arpl
fidivs
cmpsb
push
insb
sbb
clc
or
mov
cmpsb
adc
pop
mov
jg
sbb
or
shrb
add
icebp
mov
lods
lahf
test
jo
dec
lds
sub
add
mov
daa
hlt
xor
jae
rcll
cmp
cmp
ljmp
jno
ja
jns
add
mov
sub
cmc
popa
loopne
cmpb
jle
cltd
dec
pop
pusha
out
fisttps
jecxz
cmpb
loope
enter
testb
ds
out
xchg
or
aad
mov
push
ret
sub
mov
mov
icebp
repnz
dec
test
shll
leave
sarl
xchg
int
mulb
mov
sbb
outsl
pop
push
xchg
mov
test
test
cs
outsl
jmp
subb
push
cmp
cmp
call
cmc
jmp
xor
adc
sti
ljmp
data16
movsl
ret
testb
insl
or
adcb
xor
and
mov
fdivrs
add
mov
push
cmp
decb
push
loop
push
or
mov
mov
push
ret
jno
imul
icebp
loopne
or
scas
lret
xchg
imul
je
enter
jecxz
pop
hlt
or
out
jge
xchg
push
inc
mov
lods
and
jns
ficoml
xor
stos
adc
and
outsb
in
aas
pop
xor
shlb
test
adc
fbstp
inc
mov
insb
pop
xchg
push
ljmp
pop
xchg
popa
mov
cmc
fcmovnu
ljmp
aad
rolb
ja
jge
xchg
sbb
pushl
aas
jb
hlt
push
sti
pop
insl
jno
out
and
daa
sub
das
mov
popf
cmc
dec
call
mov
std
sbb
jo
iret
movl
pop
test
lock
dec
mov
divb
xlat
fsubrs
xchg
pop
popa
lock
dec
das
hlt
mov
jno
jns
inc
pop
cltd
and
loopne
cwtl
int
ds
cli
call
nop
adc
add
daa
ret
in
or
sbb
es
rorb
xor
movq
addb
aam
std
jne
add
clc
ds
mov
addl
mull
mov
mov
out
adc
jno
sbb
arpl
mov
ret
das
lock
push
outsb
xorl
jle
mov
daa
adc
xlat
mov
jp
adc
insl
inc
punpcklwd
dec
fs
cmpsl
mov
ret
data16
fdivrp
divb
cmpsb
adc
mov
and
sbb
insb
ljmp
sbb
jo
pusha
mov
sbb
rcrl
cmpsl
fmulp
stos
push
and
add
aaa
outsb
sub
sbb
in
mov
mov
rcll
aas
mov
inc
mov
push
icebp
mov
decl
xchg
or
test
iret
test
sbb
repnz
mov
jl
ljmp
push
xchg
jle
call
imul
push
mov
cmc
or
popf
pop
mov
xor
push
mov
fdivr
inc
mov
hlt
pusha
test
push
mov
inc
push
push
jb
push
and
in
sbb
adc
pop
shlb
or
or
stos
les
in
xor
into
push
or
shrb
dec
call
sub
adc
data16
sbbl
jmp
xchg
xor
adc
test
dec
ficomps
mov
into
and
jle
cmpb
mov
jl
dec
push
pop
push
and
pop
jg
or
loopne
jo
xchg
pop
xor
add
fcoml
cmp
lods
fdivrp
decl
sbb
lods
out
mov
dec
xor
out
mov
decb
xchg
mov
mulb
adc
sbb
sbb
loope
sub
lock
inc
mov
jo
jnp
lret
scas
pop
mov
sbb
pop
stos
add
ljmp
cltd
ret
lods
stc
cltd
testb
loope
js
cmp
js
in
push
pop
scas
jnp
shll
inc
jle
mov
push
push
test
pushf
push
mov
ud2
add
dec
dec
xchg
fsubrl
movsb
adc
jecxz
shrl
sbb
cli
fwait
movsb
mov
mov
andb
cwtl
xor
dec
sbb
rol
inc
xor
jp
cmp
rcll
icebp
iret
xchg
stos
fadds
mov
add
aaa
int
dec
inc
adc
sub
and
jge
fisttpl
xor
or
mov
and
and
fisttpl
lds
add
arpl
or
in
inc
std
arpl
mov
add
les
insb
or
pop
pop
popa
lock
xlat
and
ror
loop
fs
push
fcomp
sahf
out
jle
fmulp
cwtl
and
popf
pushf
fisttpll
jne
rclb
mov
sub
add
mov
push
cmpb
xchg
sub
sbb
mov
sub
or
aad
out
test
aaa
push
adc
and
xchg
movsl
xchg
mov
push
in
sub
movsb
dec
arpl
inc
jae
sub
inc
or
push
pop
jp
jno
js
test
lea
ss
shlb
fsubrs
inc
push
les
icebp
aam
aam
xlat
fiadds
rorb
lods
jo
cli
xchg
xchg
add
fisttpl
push
push
inc
mov
insl
ror
mov
dec
mov
out
fwait
in
jae
repz
push
adc
pop
pop
in
inc
adc
addb
mov
ds
sbb
movsl
and
ret
jae
roll
pusha
dec
inc
inc
jecxz
fwait
sub
repnz
mov
lahf
pop
push
push
or
push
push
dec
adc
mov
ljmp
ljmp
xor
sbb
stos
push
in
aaa
fdivl
gs
outsb
aas
pop
stos
mov
ret
pop
aad
sub
and
cmp
xchg
mov
dec
and
sbb
icebp
or
jae
add
js
cmpsb
aaa
mov
insb
xchg
sbb
icebp
mov
in
lcall
mov
iret
jb
insb
inc
xchg
test
aam
je
inc
repnz
fcomi
mov
sbb
out
rcr
sahf
int3
jp
in
pop
call
test
xchg
lea
jb
push
dec
mov
insl
mov
lcall
cld
cmp
pop
push
repnz
mov
xor
icebp
jno
mov
test
mov
pop
or
icebp
dec
sub
jo
mov
lock
loopne
xor
jp
pop
testb
test
jbe
orb
and
lea
mov
dec
shlb
pop
pop
lret
bnd
repz
stos
mov
in
gs
sub
sbb
jle
mov
push
inc
mov
int
mov
jo
js
or
sbb
push
or
lods
mov
and
sub
cmpsl
push
out
inc
jl
cmp
ret
and
mov
insl
outsl
scas
stos
xchg
xchg
adc
mov
idiv
push
and
and
dec
sub
pop
jo
or
push
jle
jno
xor
xor
xchg
fsubrs
sub
js
fcoml
mov
clc
push
pop
incl
scas
lock
lea
mov
js
cmc
shlb
in
add
adcl
inc
mov
in
dec
iret
dec
inc
sub
jnp
mov
dec
jbe
lods
or
pop
xor
xchg
imul
dec
cli
and
cmc
fnclex
xchg
cmpsb
or
insb
sub
jae
sbbb
mov
popf
fdivrs
lret
pop
xchg
mov
fistpll
mov
in
xchg
in
sarl
int3
pop
cmpsl
jg
fs
fcomip
jb,pn
pushf
lcall
int3
add
sub
mov
push
cld
fiaddl
out
mov
mov
push
mov
and
push
aam
inc
jo
lahf
out
sbb
inc
or
inc
movsl
xor
lret
pop
sarb
das
pop
mov
lcall
xor
xor
fistpl
jo
idivl
popf
xchg
je
mov
hlt
sbb
stc
rcl
jno
dec
dec
clc
or
or
je
xchg
pop
movsb
stos
and
and
adc
or
fbstp
mov
in
sub
bound
inc
xchg
mov
fldt
inc
sahf
sub
pop
inc
pop
aad
push
mov
push
cld
cwtl
push
sub
fucomip
or
mov
pop
mov
inc
hlt
dec
outsl
xor
mov
mov
lods
idivb
fwait
pop
pushf
xchg
inc
adc
iret
jl
mov
cmp
cmpb
adc
call
incl
jo
ret
mov
or
lds
popa
shll
push
jecxz
jp
inc
insl
cmp
rolb
shll
std
mov
mov
mov
clc
add
mov
lret
or
rclb
jle
jle
and
dec
ja
inc
rolb
xchg
sti
mov
adcb
cwtl
add
xor
lock
and
arpl
mov
xlat
fildll
push
add
bound
xchg
push
sub
mov
mov
ret
test
dec
inc
pop
aam
aad
mov
add
cmpsl
mov
and
loop
xor
mov
sub
cmp
loopne
pushl
bound
jb
shl
push
cmpsl
adc
mov
mov
fldl
in
js
add
push
cmp
push
leave
lahf
movsl
cld
out
or
cli
add
inc
add
sbb
pop
shl
mov
sub
roll
cmpl
dec
inc
std
pop
xor
push
jb
or
push
xchg
daa
mov
mov
mov
mov
das
xchg
loope
or
fs
or
popa
arpl
pushf
cmp
inc
jmp
imul
testb
jg
mov
xor
outsb
jns
iret
mov
inc
mov
das
xchg
adc
xchg
jno
arpl
fistpll
jo
inc
inc
inc
cld
or
faddl
std
hlt
xchg
mov
decl
scas
sub
call
jno
lret
push
mov
stos
mov
hlt
enter
xlat
pushl
jge
repnz
movsl
fs
cld
mov
dec
cmc
lret
js
lret
stos
fsubs
das
xor
test
test
mov
dec
aam
add
hlt
push
or
adc
jg
addl
mov
dec
in
rorb
fwait
test
mov
sub
jnp
inc
scas
xor
and
repnz
xchg
das
sub
and
jb
pop
popf
pop
fwait
test
rclb
adc
jecxz
in
dec
es
lods
add
dec
and
mov
lods
lods
inc
dec
ljmp
dec
arpl
pop
adcb
inc
leave
adc
aam
push
loopne
mov
loop
cmp
clc
pop
cwtl
clc
incl
sub
mov
cmp
or
jge
push
sbb
or
pop
fnstcw
arpl
cld
or
loop
gs
pop
sbb
cmp
and
or
lret
gs
or
hlt
mov
sbb
dec
xchg
add
lock
mov
mov
vpmaddubsw
mov
sbb
test
inc
das
std
out
les
into
xchg
mov
dec
ja
cld
test
mov
pop
ret
dec
fbstp
adc
jae
pop
loopne
and
test
add
mov
or
or
jns
cltd
pop
cmp
pop
dec
test
pushl
inc
push
rclb
cmp
stc
jo
add
arpl
pop
sbb
mov
mov
sub
add
es
cmp
mov
or
mov
imul
and
pop
imul
dec
insb
add
cli
pop
lret
lea
in
push
loopne
sub
stos
add
insl
std
test
popa
sbb
addr16
call
dec
mov
adc
lock
out
xchg
add
jle
hlt
sub
cwtl
aad
subb
and
or
imul
mov
rcrb
jo
mov
je
mov
inc
mov
mov
push
xchg
jnp
adc
push
dec
jl
stos
cltd
ds
call
mov
movsl
fldt
arpl
mov
nop
decb
nop
xchg
pop
aaa
pop
insb
fs
movsl
push
lods
pop
out
pop
adc
adc
cmp
adc
call
stc
xor
out
jne
mov
loopne
fwait
cmpsl
pop
pop
jp
cmp
call
or
mov
test
or
mov
jle
sub
test
push
outsl
insb
loop
insl
mov
inc
and
mov
test
cwtl
fldt
test
incb
movsb
test
vpextrq
int
push
jl
mov
into
mov
out
shlb
aas
mov
arpl
in
pop
rclb
or
test
mov
aam
ficoms
lcall
xor
pop
movsl
test
int
push
mov
lcall
xor
pop
jl
aas
jge
xchg
jg
mov
imul
mov
test
cmpl
clc
push
lods
mov
ret
mov
orb
cmc
pushl
jno
aam
push
mov
xchg
mov
movsl
pop
fmuls
mov
dec
mov
inc
push
mov
cmpsl
dec
test
movsl
cmpsl
test
sbb
inc
push
jno
mov
repnz
sub
jae
clc
jmp
inc
push
addb
dec
or
xor
outsb
push
jecxz
jp
in
jl
lods
mov
sbb
adc
movsb
rcl
push
or
push
out
or
mov
ja
jns
outsl
or
call
dec
lret
stos
mov
pushf
add
scas
mov
test
ljmp
test
and
pop
sub
adc
shr
pushf
adc
jg
pop
cwtl
or
mov
lahf
mov
or
sub
xchg
adc
jb
aam
rclb
bound
dec
sbb
stos
push
mov
jne
outsb
out
sbbl
jb
jo
loope
cmp
nop
mov
inc
cmp
sbb
imull
fwait
xchg
imul
jmp
push
xchg
xchg
mov
aam
pop
mov
push
push
push
jne
push
jb
mov
rcr
das
or
mov
arpl
jae
inc
or
adc
cvttps2pi
or
sti
dec
inc
andl
test
mov
dec
fwait
sub
mov
rcrl
push
cli
jno
and
stos
lcall
cli
in
inc
pushf
dec
xor
insb
dec
clc
dec
xlat
jg
jg
aam
scas
adc
popf
shrl
jge
lods
mov
jno
scas
mov
inc
fcomip
stc
scas
fiaddl
mov
push
jb
cs
and
and
aaa
add
sbb
lods
aaa
xchg
mov
repz
rorl
sub
jnp
fstpt
add
idivb
dec
sarb
fwait
test
sar
xor
jle
mov
adc
add
and
mov
jmp
mov
shrb
cld
in
sub
rclb
pop
mov
int
and
sbb
ss
or
jae
and
ljmp
push
inc
nop
and
xor
xchg
mov
jnp
or
mov
inc
repnz
call
sub
nop
cs
jmp
mov
hlt
lret
adc
mov
pop
cld
sahf
stc
sub
leave
sbb
sub
jge
rorb
push
inc
cmpsl
scas
cmp
int3
daa
mov
cmp
js
fistl
push
xlat
and
pop
sub
xchg
push
mov
mov
cmpsb
cmc
shll
xchg
sub
inc
ljmp
pop
mov
lcall
scas
jg
lret
add
imul
lock
push
jle
rcrb
fwait
pusha
loop
mov
xchg
inc
cmp
inc
adc
sub
fidivs
and
popa
lods
xor
test
leave
rolb
xor
mov
jl
jge
popa
lea
dec
xor
xlat
stos
xchg
inc
test
pop
fidivrs
and
mov
out
loop
std
int
adc
add
pop
repnz
mov
pop
aam
and
cwtl
out
sbb
outsb
add
stc
stos
mov
inc
testb
out
sbb
and
lret
xchg
cli
fbstp
nop
ss
cmc
jp,pn
mov
pushf
clc
movsb
mov
std
pop
ss
sbb
loop
xchg
mov
inc
aam
testl
in
lret
xchg
cld
adc
mov
data16
fistpl
mov
jns
rcl
shll
mov
aaa
mov
jle
and
cmp
cmp
out
cmpsl
sbb
push
xchg
jle
pop
push
in
dec
cltd
test
outsb
mov
mov
test
cmp
stos
dec
data16
sub
lock
cmp
icebp
ss
push
xor
movsl
sub
insb
aad
std
adc
xor
repnz
pop
mov
sub
movsb
xorb
mov
enter
add
mov
push
push
mov
aas
popf
jbe
out
lret
sbb
and
pop
icebp
filds
and
xchg
or
add
test
xchg
mov
push
jl
push
insl
add
sysret
xchg
push
add
ror
inc
cltd
test
outsl
pop
adcl
fisubrl
roll
clc
xor
cmp
hlt
scas
push
mov
outsb
and
dec
or
and
aam
push
cmpl
mov
mov
xlat
aam
jp
neg
xlat
and
sub
jne
xor
movsb
aaa
shl
mov
jae
xor
xor
insl
pop
cli
sahf
dec
jge
pop
jg
aaa
lret
sub
add
cmc
mov
mov
inc
std
das
and
cmc
fldl
xchg
mov
repnz
pusha
jno
sbb
sub
cmc
shrb
imulb
faddl
loopne
mov
ljmp
xchg
mov
sbb
rcrl
xor
mov
movsl
jp
cmp
pusha
int3
stos
jno
clc
ljmp
add
stos
fs
pop
pop
jno
ja
lds
add
jmp
ljmp
push
push
data16
inc
movsl
pop
jecxz
jecxz,pt
out
loopne
lea
xchg
add
call
pop
stc
and
adc
pusha
jl
aaa
pop
pop
mov
sub
sub
push
rcrb
mov
sbb
enter
or
sub
ja
jne
or
cli
jg
add
xchg
aas
scas
roll
loopne
pop
push
pop
fsubrl
imul
ret
enter
mov
mov
cmp
or
das
mov
cmp
mov
mov
mov
add
cmc
pop
or
test
and
pop
inc
jbe
pop
xor
addb
in
pop
mov
push
jge
aad
gs
das
push
xor
popa
fwait
das
adc
lcall
xor
testb
dec
and
rorb
and
add
mov
dec
in
ja
ficomps
pop
cld
sbb
pop
fidivl
push
je
inc
sub
and
jle
cmp
mov
push
jecxz
push
mov
loop
and
addr16
lock
mov
bound
lds
or
xchg
adc
or
mov
fdivrs
mov
mov
cmp
sbb
outsl
sbbl
mov
mov
ja
pop
mov
mov
into
int
popf
inc
loope
ret
xchg
loop
push
push
cltd
cmp
dec
mov
std
jge
inc
mov
outsb
jge
mov
data16
xchg
loopne
push
mov
test
sub
rclb
sbb
sub
aas
xchg
xchg
adc
int
pop
das
insl
fbld
notl
pop
inc
cmp
mov
ffreep
adc
cmc
pop
mov
xchg
dec
daa
cmpb
cmp
shll
cld
jecxz
sbbb
loope
adc
or
push
jg
add
mov
mov
or
sbb
jae
adc
mov
rorl
es
sub
mov
pop
pusha
jg
pop
add
cmp
cwtl
dec
orl
cli
and
sbb
jae
outsl
jg
cli
lcall
fs
mov
popf
out
mov
addl
mov
push
xchg
xchg
sbb
jmp
mov
hlt
stos
repnz
stc
bound
sbb
lock
mov
xchg
xchg
aad
cmpsb
outsb
movsl
fidivl
notb
in
xchg
or
or
add
in
lcall
xchg
dec
call
int3
inc
jb
bnd
in
mov
sbb
fcoml
and
sub
mov
dec
fisttps
xor
in
jle
push
push
or
push
mov
inc
pop
adc
repz
pop
xchg
lcall
loope
add
adc
jp
stos
data16
jae
dec
fadd
fwait
push
xor
mov
sar
mov
push
dec
sbb
icebp
hlt
lcall
xchg
popf
sub
fists
pop
adc
inc
mov
imul
in
cld
xlat
clc
test
mov
popa
cmp
mov
rclb
ja
cld
inc
es
sub
movsb
jns
ljmp
out
popa
xor
fs
cld
cmpsb
or
movsl
adc
cld
out
jg
mov
loop
mov
mov
shrb
inc
fsubs
mulb
xchg
pushf
xor
fdivs
aas
pop
jp
mov
jle
iret
push
pop
jno
jo
pushf
call
pop
jp
pop
add
sbb
inc
mov
pop
incl
pop
mov
dec
out
inc
sarl
mov
int3
and
test
add
outsl
or
rcrb
mov
test
mov
inc
insb
jg
inc
sub
mov
sarb
out
fidivl
push
push
sbb
add
sub
mov
jnp
call
in
ret
or
ret
cmc
and
and
mov
push
fldenv
dec
loope
dec
cld
add
mov
jae
out
ret
loopne
push
cli
shrb
or
divb
pop
addl
in
out
clc
ljmp
jae
repnz
push
and
cli
call
rcr
fidivrs
xor
jmp
mov
loop
clc
push
call
aad
lret
cmp
popf
and
and
movsb
inc
pop
push
aam
lods
mov
arpl
call
jne
lock
mov
xchg
jge
pop
fbld
xorl
rcr
in
inc
outsl
clc
jnp
popa
or
adc
mov
orb
dec
adc
push
pop
inc
daa
dec
xchg
das
add
or
xchg
or
loopne
dec
cmp
mov
insb
testl
push
loope
imul
push
jno
sbb
pop
jae
ds
call
stos
bound
add
hlt
icebp
mov
lds
push
sbb
jg
out
sub
outsb
jl
mov
clc
adc
cmp
sbb
cmp
inc
in
mov
dec
movl
les
mov
rorb
shlb
std
out
and
lock
cmp
pop
dec
shll
mov
cmpsb
sub
outsl
aam
jbe
filds
adc
push
push
add
push
movsl
ret
cli
sbb
jle
mov
dec
mov
call
outsl
rcl
push
call
add
movsb
insb
pop
jmp
aad
jecxz
dec
sub
pop
test
loop
sarb
cmp
lcall
pusha
and
pop
xlat
lret
lock
lahf
jnp
mov
jne
sbbl
cld
jmp
out
mov
popl
and
lods
sbb
or
scas
mov
mov
adc
insb
lret
mov
inc
sbb
jmp
dec
ret
sbb
add
mov
mov
fcmovu
pop
mov
sub
sbb
ror
outsl
mov
pushf
in
addb
push
shrl
mov
rcl
movsl
push
and
mov
filds
bound
push
mov
and
xlat
push
arpl
repnz
xchg
or
mov
repz
rcr
adc
stc
push
adc
pop
jle
inc
into
cmp
sub
sbb
dec
aaa
mov
and
jmp
xor
rolb
pop
dec
pop
add
cmp
fmuls
test
xchg
stos
clc
popa
xor
lahf
nop
xorb
sub
loopne
testl
xchg
nop
cltd
jb
xor
imul
xchg
inc
in
pop
add
stos
jns
cmc
inc
call
or
jmp
pop
xchg
xor
push
or
outsl
ljmp
pop
ss
jecxz
sub
cmp
cmp
loop
cwtl
inc
ss
or
push
adc
sbb
gs
cmp
xchg
push
andb
dec
jnp
pop
mov
push
nop
int
rcr
jbe
clc
aaa
out
icebp
fcomps
aas
xchg
push
push
and
pop
cmc
scas
mov
mov
call
popa
mov
add
sbb
lds
mov
cmp
std
xor
pop
movsb
adc
and
in
rcrb
lods
mov
dec
rcl
pop
xchg
fdivrp
stos
and
in
xor
lcall
clc
lahf
cmpsl
xchg
jb,pt
lcall
imul
insb
cmpl
push
push
xchg
outsl
push
std
jg
adc
jmp
mov
sahf
popf
sub
mov
pop
popa
jmp
jne
loope
xor
dec
jg
hlt
je
dec
clc
frstor
dec
out
test
insl
repz
push
mov
enter
aam
mov
loopne
jge
jg
xchg
out
test
mov
fcomps
mov
and
xlat
sbb
cmpsb
cwtl
iret
inc
ret
in
out
mov
jne
dec
mov
sub
and
int
adc
push
dec
adc
sbb
scas
adc
push
sti
fnstsw
nop
mov
push
dec
into
add
sbb
mov
jmp
imul
push
mov
test
sub
je
adc
lods
sbb
sub
mov
adc
cmpl
movsl
rorl
loopne
cmp
push
mov
std
adc
lret
pop
scas
lock
jbe
leave
arpl
lds
sbb
cmpsb
movsl
clc
movsb
jnp
xchg
bnd
or
xchg
push
lock
jmp
mov
inc
cli
fwait
or
xorb
out
sbb
inc
jae
push
cmp
imul
mov
or
mov
imul
sub
sbb
out
sub
xchg
pusha
push
mov
imull
xor
xchg
stc
mov
fs
adc
cmc
int
jnp
push
push
dec
repnz
pop
dec
rcr
movsl
fwait
cmp
dec
daa
sarl
cwtl
adc
nop
inc
jle
test
inc
mov
mov
or
xchg
in
ficoms
loope
inc
rclb
es
subb
jle
mov
ret
fimull
pop
adc
imul
outsl
mov
int3
enter
repz
sbb
and
mov
xchg
sub
or
outsl
cld
mov
and
ror
subl
adc
lret
iret
aaa
cwtl
fnsave
stos
inc
inc
popl
xor
push
fwait
inc
push
jae
clc
aad
arpl
mov
cld
cmpsb
loop
mov
pop
stos
inc
cmp
adc
fcoms
imul
cwtl
loopne
hlt
nop
or
mov
filds
xor
add
dec
xlat
push
sarb
in
mov
cmp
and
addr16
mov
mov
jg
gs
inc
shlb
fwait
or
popf
icebp
decl
fistpll
pop
push
addb
mov
inc
gs
xlat
popl
push
cltd
imul
aaa
divb
popa
icebp
loope
lock
rcl
outsb
rclb
lcall
lcall
sarb
push
adc
add
aam
cltd
jecxz
or
test
cmc
dec
pusha
and
xchg
cld
pop
out
pop
ja
push
adc
add
ljmp
icebp
pushl
or
cmpsb
inc
or
iret
lret
inc
push
mov
push
adc
cltd
ds
jno
aaa
insb
mov
push
mov
push
sbb
fisubl
pusha
and
in
mov
out
mov
gs
test
fdiv
and
adc
enter
loop
rorl
roll
inc
icebp
adcb
fdivrl
mov
push
ds
push
outsb
repz
rolb
sub
ret
xchg
dec
cmp
mov
push
push
cmp
filds
or
call
mov
ss
push
aad
adc
popa
loopne
and
enter
adc
add
pop
rorb
sbb
push
mov
rorl
jecxz
sbb
mov
ljmp
je
dec
inc
inc
lahf
sti
jecxz
xchg
arpl
js
cmp
sbb
cmp
mov
sbb
xor
adc
xchg
ds
adc
ljmp
adc
dec
pushf
nop
pop
adc
ret
xchg
sbb
test
jnp
lret
clc
dec
jnp
cmpb
scas
push
aad
jle
cmp
inc
push
add
jg
adc
sbbl
rcrl
sbb
xor
or
dec
inc
fsts
cwtl
and
movsl
test
push
mov
xchg
bound
sbb
rorb
call
cwtl
cmc
or
je
stos
sub
push
xor
add
mov
add
or
inc
fcmovb
popf
push
mov
pop
orl
aad
dec
lea
push
mov
push
fdivrs
aaa
sahf
add
stc
nop
and
test
cmp
dec
js
sbb
push
mov
out
and
cmc
pop
lret
mov
test
fs
sbbl
icebp
pop
lret
pop
out
lea
rol
fsubs
je
mov
loopne
andl
or
imul
call
jno
pop
fimuls
lock
mov
xchg
xchg
dec
ret
xbegin
daa
pop
cld
idivb
jle
mov
xor
push
xor
int
stos
test
pop
and
cmp
jge
loopne
push
sub
push
insl
insl
cmpsl
mov
mov
mov
sub
sbb
cmp
mov
cwtl
and
cmpsb
lods
mov
and
pop
filds
jge
aad
push
daa
sub
and
xlat
enter
mov
out
cli
mov
leave
pop
sbb
push
imul
xor
cli
outsb
pop
mov
sbb
and
xchg
mov
imul
push
sbb
stos
mov
cmpsl
dec
mov
sub
cmp
shlb
add
scas
and
mov
aad
sub
clc
adc
clc
ret
mov
mov
test
mov
loopne
fucomi
popa
pop
ja
pop
jl
mov
fists
or
or
jb
jns
cltd
and
bound
adc
pop
mov
xchg
decl
ljmp
rol
fwait
mov
aam
adc
fisubrl
cwtl
imul
scas
outsb
dec
jg
fidivl
nop
add
out
or
xchg
dec
or
add
pop
jbe
mov
enter
repnz
xor
arpl
add
mov
cmp
xor
xor
pop
mov
int
les
ss
and
out
sbb
sub
mov
jecxz
aaa
ficoms
or
rorl
push
mov
jp
xchg
stc
call
mov
push
fcoml
mov
cmc
push
loopne
jg
mov
orb
mov
or
aas
pop
stc
inc
pop
stos
jo
inc
mov
adc
jecxz,pt
push
xchg
or
fmul
cmp
mov
mov
aad
stos
inc
mov
or
test
je
mov
jne
nop
mov
push
sete
xor
lret
ja
pop
lahf
mov
sbb
rcr
sar
subb
subl
mov
pop
dec
bound
jb
incl
cmp
xlat
loope
les
icebp
cs
fistl
pop
mov
mov
shlb
dec
jecxz
mov
in
add
mov
cmp
add
inc
leave
rcr
sub
xchg
push
arpl
mov
add
movsl
mov
jbe
cmpsb
shrb
mov
jbe
inc
push
je
mov
mov
pop
clc
in
ficoml
jl
out
push
add
bound
fcomip
cwtl
sbb
arpl
inc
jo
sub
add
xor
loopne
pandn
add
stos
je
jb
les
loop
jg
jg
hlt
xor
add
jbe
call
mov
jp
pop
dec
inc
fcmovnu
xor
or
out
and
push
aad
xchg
cmp
outsl
sbb
cwtl
aam
enter
jl
getsec
inc
push
and
mov
jnp
inc
sbb
addb
xor
ret
inc
jecxz
push
imul
call
in
cld
push
adc
pop
cld
ds
push
movsb
test
fnstsw
stc
mov
insl
jmp
repz
mov
pop
mov
movsl
shl
fwait
push
dec
lahf
lock
imul
jmp
sbb
fiaddl
daa
inc
mov
lods
in
add
shl
fidivrs
incl
pushl
arpl
outsb
rcr
cmp
in
push
rolb
push
add
inc
mov
ds
inc
scas
xchg
adc
xchg
jmp
or
sub
jbe
fstpt
lods
stos
ljmp
sbb
es
adc
cmpl
notb
add
addb
outsb
insl
test
imull
cmc
jg
xchg
or
jmp
sbb
outsl
call
outsl
sbb
add
push
pop
mov
and
inc
dec
sbb
sub
lds
mov
mov
in
inc
mov
stos
mov
dec
add
sti
adc
ja
push
es
xor
xchg
xchg
mov
sub
fisubs
inc
push
arpl
mov
inc
and
push
roll
add
rclb
mov
and
jno
and
dec
xchg
sbb
mov
or
pop
or
popa
pop
mov
mov
scas
mov
clc
and
test
cmpsl
xchg
xchg
push
and
ja
inc
aas
jno
cmpsb
cmp
clc
mov
lock
cmp
add
shll
jle
pop
adcl
jge
clc
mov
pop
or
push
fstp
xchg
cmp
add
orl
cltd
pop
xchg
adc
add
sub
jg
test
or
sti
loope
xchg
lds
xor
pop
cli
sbb
ds
mov
lea
pop
jns
ret
cld
fcomi
inc
ret
xor
xchg
stos
hlt
popl
test
mov
pop
lea
jg
inc
in
fldt
fisttpl
pop
sbb
pop
xchg
mov
ljmp
arpl
add
leave
pop
sbb
in
push
pop
stos
test
mov
xchg
ja,pn
mov
jmp
jnp
mov
cmp
dec
cmc
movl
jmp
add
adc
daa
popa
jmp
and
daa
adc
sbb
nop
out
test
cli
shll
xor
dec
dec
mov
outsl
bound
shrb
sub
jmp
gs
outsl
mov
shlb
fistpll
and
jns
xchg
pop
jo
or
mov
sub
adc
sti
fimuls
inc
pop
das
mov
fnstsw
std
push
push
mov
inc
jmp
add
mov
cmpsb
add
das
jp
cmpsb
cmp
dec
in
dec
aam
icebp
loopne
sbb
stc
xchg
xor
mov
cltd
and
xchg
aaa
push
stos
mov
dec
jne
dec
les
jp
or
push
xor
mov
mov
rcll
inc
jge
xchg
shlb
add
scas
xchg
inc
mov
repz
mov
or
adc
mov
or
mov
filds
xchg
xchg
and
fdiv
pushl
lret
sub
pop
xchg
sti
mov
jb
out
faddl
fstp
sbb
incb
mov
sti
push
xchg
mov
pop
sub
or
mov
aam
insl
sti
push
or
mov
adc
je
jecxz
mov
or
stos
imulb
clc
adc
cs
sbb
jb
mov
sbb
std
sub
imul
and
movsl
popa
jg
adc
in
jecxz
mov
jp
xchg
xor
pop
loopne
inc
shlb
lock
push
aaa
cmp
in
idivb
notb
popa
or
push
mov
jl
es
test
in
inc
adc
es
ror
and
mov
fisttps
dec
aaa
add
inc
lock
adc
sub
inc
adc
xor
cmp
filds
or
push
or
cvtdq2ps
xchg
faddp
cmp
mov
jb
xor
xchg
dec
and
es
cmp
shrb
push
and
cld
dec
mov
xor
mov
mov
daa
xor
inc
dec
fisttps
mov
and
movsb
inc
es
roll
xlat
insl
inc
sub
pusha
addl
stos
outsb
loope
sbb
inc
nop
xchg
pop
adc
mov
dec
leave
addr16
insb
test
incl
lods
insb
xchg
leave
xchg
out
les
xchg
adc
sub
loope
test
xchg
dec
mov
lods
mov
insl
add
loop
ljmp
pusha
mov
pop
fsubrl
cmpl
das
and
cltd
es
inc
jnp
mov
fs
sbb
ja
sub
call
add
dec
icebp
clc
lret
add
daa
sbb
cld
mov
sub
push
and
repz
pop
jecxz
dec
mov
decb
popa
pop
pop
xchg
pop
cwtl
inc
mov
xchg
mov
loop
and
repz
in
outsl
sub
aaa
adc
cwtl
call
out
add
or
mov
shr
mov
add
int
mov
push
add
jl
push
xchg
mov
mov
out
inc
and
outsb
push
jle
inc
in
bound
pop
sbb
loopne
mov
dec
xchg
add
cld
stc
shrd
in
andb
rcll
xchg
out
mov
xor
xchg
dec
sbb
fsts
xchg
movsl
icebp
mov
xor
jge
rcrl
in
mov
xor
and
mov
xchg
jmp
cmpsb
stos
sub
sbb
mov
dec
add
ljmp
inc
out
xor
dec
push
in
in
xor
faddl
stc
push
jb
shrl
pop
add
or
test
pop
push
and
out
inc
dec
pop
mov
jno
clc
neg
shrb
or
in
test
scas
inc
ljmp
movsb
inc
cs
call
es
jle
push
adc
adc
xor
and
add
xchg
ret
mov
mov
push
adc
ds
fmuls
adc
add
aaa
out
incb
inc
mov
test
shll
push
int
std
add
mov
pop
xor
mov
sub
pusha
loope
mov
test
mov
test
jmp
xchg
mov
test
xor
popa
daa
xor
push
push
sub
ja
jle
mov
int
jmp
pushf
push
insl
or
add
adc
xchg
pop
ljmp
imul
pop
inc
or
xchg
and
fwait
aas
lcall
and
bound
pop
movsl
push
repz
sbb
sahf
push
loopne
inc
gs
arpl
int
pop
or
mov
adc
cmp
mov
jno
in
aas
push
bnd
add
or
test
mov
fildll
mov
call
movsl
outsl
or
push
mov
lcall
cld
inc
rcr
push
rorl
cld
cmp
dec
inc
std
mov
pop
jnp
push
cld
jmp
sub
jae
dec
xor
stos
stc
mov
xchg
pop
dec
aad
int
or
inc
mov
sbb
test
add
imul
sub
pop
clc
xlat
aad
insb
mov
movsl
out
aas
subb
out
mulb
dec
push
outsl
dec
push
or
xor
dec
xlat
es
xchg
enter
push
jns
inc
push
lods
inc
loop
cmp
rcrb
lea
add
test
dec
inc
ret
aaa
dec
int
dec
loopne
rolb
mov
jp
mov
adc
mov
mov
test
or
sub
jg
mov
shlb
sbb
test
cld
repz
xchg
mov
sbb
mov
and
seto
jmp
cmp
dec
adc
and
std
push
movsb
mov
mov
iret
popa
fwait
jle
push
mov
out
adc
mov
push
mov
pop
mov
dec
inc
mov
aas
push
or
mov
lock
push
sub
mov
lock
mov
loope
aad
and
ret
inc
subb
daa
inc
xor
mov
pop
es
aam
ljmp
pop
mov
out
sub
std
dec
aam
dec
cltd
jle
add
shll
shlb
ret
fisubrl
add
shrl
cwtl
ficomps
hlt
pop
sahf
sbb
jmp
je
inc
inc
mov
and
pop
iret
in
xchg
test
outsl
cmp
sub
dec
or
add
mov
cltd
adc
jb
icebp
loope
sub
movb
test
rcrb
jbe
test
decb
pop
cmp
fisubrl
jbe
mov
bound
scas
mov
inc
sbb
mov
int
aas
pop
adc
aam
mov
and
or
insl
sbb
out
jle
inc
mov
js
adc
or
pop
push
std
sbb
mov
xor
xchg
dec
and
cmp
call
popa
inc
jp
push
xchg
jbe
aam
xor
cwtl
lcall
std
or
push
pop
lds
sbb
mov
inc
jle
push
jecxz
stos
mov
add
fisttps
xchg
push
ja
setae
fimull
and
cmpsb
pop
sbb
ffree
mov
cmp
jno
jmp
pop
push
stos
data16
shrl
hlt
fiaddl
lds
outsl
fildl
out
pop
push
pop
or
fcomps
rolb
sub
stos
out
ljmp
jmp
fldenv
mov
inc
scas
jmp
adc
and
xor
out
push
fadd
orb
push
daa
movsl
out
int
jmp
aad
in
cmpsl
test
cwtl
mov
jecxz
mov
ud0
pushf
xchg
mov
or
rclb
movsl
push
cmp
jl
adcb
enter
pop
mov
push
pop
repnz
mov
lds
jg
add
xor
loop
jl
mov
dec
inc
add
nop
sub
mov
mov
pusha
jl
mov
adc
shlb
dec
daa
jo
fbstp
insl
mov
shrl
dec
int3
call
cwtl
ficompl
lret
sbb
xchg
fcmovnu
fdivrl
sub
add
mov
jp
jle
pushf
push
adc
call
dec
mov
push
push
sbbl
cld
outsb
in
and
pusha
xor
popf
mov
push
xor
push
mov
inc
jne
xor
je
loop
xor
sbb
jae
xchg
dec
add
mull
mov
out
mov
fcom
push
pusha
sub
mov
insl
shlb
sbb
mov
mov
das
insl
jle
add
and
les
test
cli
add
jecxz
and
orb
push
jo
sbb
shl
sub
or
dec
push
and
mov
dec
jno
cld
lcall
push
int3
shlb
xor
aaa
or
pop
aad
fisttpl
scas
mov
dec
add
loopne
sbb
and
mov
dec
cmp
add
lods
sub
and
ret
jno
fsubrs
lods
and
stos
push
xor
push
push
mov
test
mov
pop
push
push
pop
ljmp
ss
ds
xor
sub
or
enter
sbb
mov
pop
mov
xchg
andb
repnz
mov
outsb
dec
iret
mov
mov
add
icebp
shufps
repz
loopne
push
ret
pop
push
jmp
inc
enter
pop
clc
ja
sti
jg
sti
rorb
aas
faddl
inc
clc
cmp
xor
dec
je
outsl
sbb
ret
pop
sbb
insb
out
cli
out
xchg
mov
and
aad
lds
test
js
movb
mov
test
pop
mov
test
xor
fisubrs
arpl
push
mov
push
or
cmc
add
mov
test
mov
or
jmp
test
fdiv
mov
dec
add
add
jbe
push
mov
dec
jb
aas
fidivs
and
in
and
lcall
out
push
aas
inc
mov
pop
loope
adc
std
xor
lret
std
gs
arpl
nop
out
rolb
loope
mov
ljmp
adc
lods
ss
mov
cwtl
addl
mov
sbb
out
xor
add
orb
mov
ds
push
mov
pop
jecxz
pop
std
test
mov
and
or
inc
adc
sub
scas
cmc
xor
sti
and
mov
mov
and
and
hlt
xchg
pusha
jmp
jae
fildl
insb
loop
pop
loopne
mov
or
and
cwtl
ds
js
lock
push
loope
sub
inc
jg
mov
cmc
lock
ds
arpl
or
dec
sarl
popl
cmc
es
mov
mov
pop
sbb
out
and
pop
mov
pop
jl
push
aam
bound
outsb
dec
xchg
ss
ja
ret
sbb
fwait
lods
aaa
loopne
lock
pusha
lods
xor
fcomip
fidivrl
jmp
sub
inc
iret
push
push
inc
and
mov
out
cmp
add
mov
aaa
cmp
inc
dec
push
insl
pop
inc
test
xchg
fsubrs
hlt
dec
lret
jge
insb
aas
gs
mov
idiv
leave
sbb
iret
fidivrs
pop
dec
vmread
iret
dec
ja
adc
xchg
cld
mov
xchg
arpl
sbb
dec
dec
cmp
cld
mov
xchg
fs
test
xchg
push
fdivrp
xor
cmpsl
xor
and
lea
aas
push
add
pop
int3
fsubrs
push
jl
test
stc
lret
cmpsl
push
push
push
sub
jmp
add
imul
add
and
pop
test
outsl
push
scas
xor
xchg
xchg
enter
pop
lret
xlat
xchg
dec
int
mov
inc
mov
push
je
jg
jmp
pop
add
mov
inc
mov
pop
adcl
mov
mov
sti
jae
dec
jo
xchg
scas
and
ljmp
icebp
mov
jne
in
rcll
fcomps
aas
stos
lcall
pop
xchg
inc
or
and
and
notb
sbb
fcompp
push
xchg
jnp
cli
cmp
pop
or
add
mov
aaa
mov
daa
xor
xor
ljmp
mov
sub
cltd
pusha
sub
cmp
or
or
pop
push
lods
mov
movb
cmpl
inc
insl
shlb
and
xchg
push
rorl
loop
xchg
jno
cmp
les
es
dec
aam
mov
pop
fcmovb
loop
push
add
into
push
mov
gs
push
pop
pop
icebp
jo
adc
mov
es
loopne
bound
in
mov
push
mov
mov
ret
mov
fisubs
lods
push
sub
mov
xor
xor
jnp
outsb
jne
jecxz
insl
mov
testb
jns
cli
lcall
cmp
jmp
lods
shr
ja
mov
dec
xor
cmpsl
mov
pop
dec
enter
andl
mov
popa
and
pop
cltd
mov
fildl
repz
test
decl
add
mov
cmc
mov
loop
push
sub
mov
inc
aas
inc
sub
push
bound
mov
xchg
mov
in
insl
inc
in
arpl
dec
xor
lds
add
cmpl
loopne
shll
rorb
jno
call
mov
test
enter
and
inc
cmp
leave
int3
pop
and
ljmp
nop
push
or
sahf
faddl
ret
clc
xor
push
and
cmc
or
flds
stc
mov
cmp
dec
lods
mov
mov
enter
xchg
sbb
aam
push
sbb
imul
scas
add
xor
inc
mov
push
les
pop
insl
das
std
sbb
push
jae
mov
pop
fdivr
cs
ljmp
pop
or
rcr
mov
aaa
pop
xchg
adc
or
inc
push
stos
lea
mov
out
cmp
aaa
int
insl
xchg
jl
in
ret
mov
pusha
or
std
subb
xor
cmp
add
or
xor
cmp
insl
movsl
testb
test
xor
es
push
add
inc
frstor
lds
or
xlat
xchg
sub
mov
ljmp
call
test
stos
dec
rorl
inc
test
push
test
in
push
sbb
es
outsl
mov
dec
mov
ljmp
int
or
mov
movsl
call
push
fcomp
ret
or
lahf
and
stos
push
or
stos
in
lcall
mov
sub
push
scas
setl
call
adc
loop
xor
loop
adc
fwait
mov
in
aad
sbb
sub
out
jge
fldenv
loop
cmc
add
sub
sbb
jecxz
mov
cmp
dec
ds
or
xor
cmc
rcrb
xchg
insl
and
xor
add
adcb
add
test
push
int3
dec
inc
mov
pop
cltd
mov
aam
ffreep
repz
jno
jmp
addl
js
ja
int
xchg
lds
stos
out
lods
add
pop
mov
in
pop
cwtl
mov
push
pop
orb
subl
repz
push
in
pop
sbb
jbe
mov
shr
addl
sti
cmp
mov
jno
adc
mov
gs
or
clc
es
mov
outsl
cs
push
je
pause
lahf
cwtl
mov
dec
nop
cmc
shrb
mov
fsubl
mov
jne
loopne,pn
pop
xor
flds
pop
inc
pop
adc
mov
outsl
test
outsl
sti
fisubl
push
out
stc
stc
nop
cmp
aaa
fidivrl
popf
cmp
push
fsubrs
inc
mov
jns
jle,pn
xchg
cmp
jno
fs
mov
mov
pop
mov
jno
lods
aaa
and
push
pop
pusha
inc
and
mov
sub
fldt
inc
push
and
and
rolb
push
lret
hlt
out
add
das
cld
pop
mov
cmovnp
dec
sub
ss
xor
and
call
xchg
xchg
jo
and
mov
lret
jo
mov
xchg
inc
lret
jae
adc
sub
sub
bound
dec
jns
sbb
aas
repnz
daa
jle
rorl
mov
imul
xor
rcr
sub
fst
mov
jmp
cmp
dec
aaa
cmp
mov
jnp
ror
aam
shl
push
jge
gs
insl
xchg
push
mov
push
insb
lock
scas
jge
gs
in
ret
fwait
imul
test
mov
adc
push
xor
lock
das
aas
mov
push
insb
mov
sbb
std
or
rclb
imul
mov
out
sbb
aaa
push
adc
ficoml
insb
rol
push
adc
popf
addr16
pop
repnz
std
mov
push
dec
dec
add
or
orb
add
mov
movlps
jnp
subb
adc
imul
mov
ficompl
and
les
mov
les
cld
daa
push
lods
mov
ss
loope
cwtl
sti
mov
or
popf
sbbl
cmp
int3
lock
lods
push
ljmp
push
or
insl
sub
in
mov
push
sub
icebp
in
pop
insl
popa
cwtl
sti
aaa
mov
mov
sbb
add
and
push
outsl
mov
inc
stos
popf
jmp
xor
adc
sbb
mov
dec
mov
add
lock
clc
ljmp
hlt
cmp
sbb
jg
mov
mov
test
mov
inc
hlt
aaa
mov
and
dec
pop
fsts
mov
xchg
sbb
adc
lods
std
enter
mov
dec
rep
cwtl
jg
das
subb
cwtl
lcall
xchg
imul
xor
daa
sub
loop
or
inc
xchg
xchg
sbb
out
test
cmp
ret
repnz
xchg
outsb
das
sarb
jecxz
jb
xchg
or
outsl
lock
scas
push
cmp
pop
fnstcw
jne
bound
sti
incl
fnstcw
mov
jns
mov
inc
loop
or
rclb
test
adc
imul
sbb
push
xchg
scas
xor
push
lea
xor
adc
xchg
js
test
pusha
jp
xchg
xchg
sahf
aad
mov
push
call
inc
sub
aad
addr16
repz
cmpsb
fdivr
adc
movsl
mov
and
or
mov
imul
xchg
xchg
imul
push
aas
cmp
shrb
push
xor
cltd
imul
sahf
scas
pushf
ret
shll
jbe
test
lcall
decb
push
add
and
idivb
fbstp
fdivs
push
pop
mov
sarl
xor
sub
jecxz
cmpsl
pop
or
mov
push
ret
sahf
cmp
add
xorl
mov
test
imull
push
lahf
aam
mulb
mov
subl
addr16
dec
mov
push
hlt
dec
add
in
jne
jge
pop
dec
loopne
lcall
sahf
jne
mov
pop
and
movsl
sbb
jne
gs
xchg
sbb
jo
mov
mov
mov
pop
out
testl
clc
add
jbe
push
inc
fldcw
or
call
lock
decl
pop
jecxz
dec
sbb
in
add
mov
jp
adc
andl
adc
mov
hlt
mov
fwait
dec
inc
push
test
xor
pop
shrl
push
lahf
and
inc
mov
fimuls
es
lret
and
scas
add
pop
push
jg
pushl
sub
inc
and
xor
inc
and
push
jbe
clc
popaw
mov
inc
lock
loopne
sub
xlat
pop
cmpsl
pop
push
and
sbbl
push
sbb
xor
jge
add
stc
push
jnp
fwait
inc
or
pop
pusha
mov
cld
pusha
out
jmp
std
mov
and
dec
pushf
pusha
pop
aam
rcll
mov
mov
outsl
xchg
xlat
daa
xchg
xor
gs
pop
std
outsl
mov
or
mov
inc
xor
iret
test
fnsave
mov
movsl
ja
fdivs
or
fstpt
subb
xlat
jns
inc
inc
je
adc
enter
add
aaa
or
jbe
mov
js
or
add
insb
mov
or
mov
push
outsl
or
sub
jge
jge
adc
out
mov
sbb
sti
imulb
xor
jge
sbb
in
add
mov
into
cmc
push
ret
xchg
sbbl
xor
popa
sub
xor
pop
movsb
dec
pop
or
test
sub
xchg
jg
fsqrt
or
pop
js
push
adc
iret
jl
addr16
loop
int
scas
add
out
push
enter
ss
mov
adc
imul
paddw
jns
inc
jecxz
mov
jmp
lahf
jae
hlt
xor
ret
mov
test
xor
mov
iret
and
in
fistps
xchg
popa
adc
xchg
cmc
shrl
aaa
inc
mov
mov
xor
push
push
mov
int3
or
fbstp
pop
mov
stos
lea
pop
sub
je
cld
movsl
mov
les
mov
aas
sbb
mov
addl
rcrl
str
inc
mov
lret
cmpsb
mov
daa
push
jge
pop
es
xchg
push
and
loopne
ljmp
mov
les
dec
push
shrb
push
or
push
daa
push
inc
inc
rorb
and
hlt
push
inc
add
sub
in
pop
stos
test
jae
mov
pop
subb
fiadds
and
cmp
rcl
mov
stos
mov
push
aas
add
cmp
inc
pop
lret
mov
clc
pop
push
nop
jo
fxch
mov
adc
pop
vpsubq
sub
xchg
les
cmp
pop
mov
cmc
or
push
int
mov
jge
add
negl
pop
mov
and
jl
loopne
push
push
lea
cmp
xlat
test
inc
or
stos
add
mov
xor
inc
jmp
mov
pusha
cmp
xor
fs
mov
dec
outsl
mov
mov
sahf
pop
cwtl
jl
or
daa
pop
push
cmp
out
pop
cli
test
test
popf
add
mov
cmp
sarl
xchg
add
lea
imul
xor
adc
or
or
push
push
dec
dec
pop
add
mov
cmpsl
clc
or
addr16
je
mov
jmp
lock
jmp
insb
push
inc
aam
mov
fs
sbb
lds
hlt
inc
cltd
xchg
jg
pop
insl
imul
add
mov
xchg
push
inc
lock
popa
adc
movsl
jns
and
jle
cmp
sarl
fcmovnu
rcr
mov
aad
push
adc
pop
jecxz
mov
in
pushf
test
or
pushf
push
ret
sub
js
add
dec
pop
jge
or
mov
loop
lock
rorl
les
inc
pop
or
jmp
popf
fnsave
ds
leave
aad
icebp
hlt
subb
mov
subl
and
das
mov
jmp
fcomip
xor
decb
pop
fdivrl
mov
add
or
repnz
es
insl
sub
mov
sbb
or
adc
add
fnsave
push
or
ss
inc
nop
dec
and
push
mov
lahf
insb
fldl
das
xchg
mov
pushl
push
pop
call
mov
or
xchg
roll
leave
push
adc
or
xlat
mov
scas
mov
pop
hlt
pop
pop
and
cmp
clc
mov
scas
test
jbe
cmpsb
lcall
shr
xor
adc
add
jmp
xor
negl
dec
or
mov
push
lret
push
pop
aam
cltd
sbb
aam
mov
pop
nop
or
dec
xor
dec
fidivrs
lods
sbb
cwtl
lea
pop
push
aam
mov
jmp
or
mov
sub
lahf
dec
pop
inc
pop
inc
mov
pop
repz
sub
std
shll
pop
les
or
movsl
fistpll
lock
sub
sub
imul
dec
lock
in
sti
int3
push
mov
xchg
stos
insl
or
pop
mov
arpl
cli
inc
rcrl
lar
fistpll
in
std
or
sti
cmp
mov
adc
movsl
popa
xorl
inc
sbb
shlb
je
je
jno
inc
cmp
mov
leave
mov
or
add
testb
sahf
lds
xchg
ret
pop
cmp
ja
add
shlb
push
fdivs
push
xchg
fildl
cld
ljmp
dec
xchg
mov
and
jp
cmp
jne
outsl
je
push
sbb
pop
lock
insb
je
sub
jecxz
data16
data16
ficoms
push
lods
xor
daa
sbb
pop
clc
push
lock
mov
dec
scas
mov
sbb
rcl
jg
int
cmovp
pop
out
mov
mov
pop
into
lock
bound
lahf
or
frndint
xlat
push
cmpsb
aaa
ljmp
sbb
push
inc
pop
inc
lcall
jno
lret
push
push
scas
and
lret
xor
lds
mov
mov
xchg
call
ficoms
lahf
xchg
pop
fcmovbe
cmp
orb
fdivl
roll
decl
movsl
or
in
outsb
ret
inc
cmp
pop
sub
cmpsl
ja
popa
add
inc
jne
mov
sbbb
stos
pop
xor
jecxz
inc
jle,pn
sbb
jmp
and
xor
addr16
jecxz
rclb
loopne
push
cmp
pop
mov
stos
mov
clc
incl
pop
push
cli
mov
std
push
sti
bound
lret
or
and
add
mov
adc
call
mov
sbb
fldl
imul
push
cmpsl
jle
ja
in
add
dec
pop
pop
sbbl
test
xchg
xor
sub
icebp
movsb
push
push
add
pop
jp
mov
or
sbb
sbb
mov
pop
addr16
lcall
pop
je
mov
lahf
sub
xchg
mov
dec
push
mov
sub
es
int3
loopne
pusha
leave
popa
adc
ljmp
das
and
in
jl
das
cld
jo
jecxz
lcall
fdivl
imul
or
jb
into
fwait
push
test
sti
or
das
and
jo
sub
mull
jmp
and
std
mov
adc
sarl
push
inc
nop
or
in
pop
push
insl
in
pop
in
inc
popf
shlb
sub
pop
mov
arpl
cld
movb
jo
or
clc
repz
or
loop
jmp
inc
lods
lods
lret
outsl
mov
test
mov
mov
in
push
mov
arpl
lds
mov
xchg
pop
add
cld
push
nop
xor
fldl
jne,pn
adc
scas
lahf
ljmp
inc
or
imul
jp
dec
or
icebp
cmpsl
outsl
sub
inc
push
repnz
push
std
lret
xchg
dec
loop
mov
pop
push
dec
push
sbb
enter
inc
inc
das
insl
mov
adc
and
mov
xchg
ds
push
filds
pop
pop
add
std
enter
xchg
cltd
stos
mov
aam
dec
outsl
lods
subb
lock
push
nop
pushl
mov
aad
pusha
pop
sbb
mov
ret
xchg
lods
and
sbb
xchg
insl
xor
cmp
mov
adc
out
mov
mov
and
jecxz
sbb
pop
inc
aaa
mov
add
dec
aaa
dec
and
xchg
mov
adc
inc
adc
xchg
xchg
add
adc
xlat
adc
inc
jl
hlt
sub
pushf
outsl
dec
mov
loopne
push
test
add
mov
cwtl
and
and
or
mov
lds
push
bound
scas
push
scas
adc
cmp
icebp
mov
das
dec
out
xchg
adc
mov
adc
inc
fwait
pop
sub
lcall
inc
js
sahf
hlt
add
inc
out
cmp
das
daa
ss
lods
xchg
mov
cld
jo
or
lods
rol
add
adc
mov
jmp
mov
shrb
repz
xor
loopne
jg
dec
insl
and
push
loope
aaa
pop
dec
add
outsl
or
push
push
inc
mov
and
addr16
lds
pop
andb
icebp
mov
movsl
push
push
in
ss
and
insl
xor
mov
pop
xor
lods
outsb
test
stc
fdivl
icebp
fucomp
or
pop
sti
je
fs
pop
aam
jecxz,pt
aas
or
cld
scas
int
push
jecxz
jl
dec
mov
lcall
jg
fildl
push
cmp
add
decl
data16
cmp
popf
push
jo
and
push
add
push
aad
xor
shrb
xor
in
addl
cltd
scas
gs
aam
pushl
push
dec
lret
mov
push
mov
xchg
orl
mov
lock
mov
push
add
xchg
inc
mov
xor
mov
lret
insb
dec
pop
daa
test
movsb
stos
and
sbb
and
mov
pop
stos
push
mov
fdivs
shrb
mov
push
test
sarb
add
push
sub
aad
rorb
incl
mov
mov
movsl
xchg
xchg
inc
mov
cmc
adc
ror
inc
mov
leave
pop
notb
fidivrs
dec
imul
cmp
jo
jmp
movups
jge
lcall
les
adc
xchg
lods
jl
cmp
js
xor
mull
rorl
stc
push
out
fimull
or
clc
popf
push
mov
jge
aaa
shrl
dec
sub
mov
pop
sub
cmpsl
mov
out
movsl
orl
int
jge
or
xchg
sbb
fsubs
mov
cmpsb
dec
test
mov
jmp
in
jmp
and
adc
push
outsl
mov
push
cltd
pop
pop
icebp
jnp
pop
aas
push
push
mov
push
sub
jl
inc
rcr
push
inc
lret
xchg
das
mov
xlat
ret
cmc
filds
sbb
gs
dec
rcrl
test
add
jge
movsb
inc
les
sbb
std
fucomip
xor
jo
jp
and
rcll
jl
jge
imul
mov
adc
nop
orl
lock
lret
mov
xchg
xorb
icebp
fiaddl
and
insb
mov
repz
scas
and
cmp
loop
mov
in
mov
pop
subl
leave
lods
xor
in
cltd
jb
pop
int
push
fidivrs
xor
xor
mov
xor
popl
shld
sbb
pop
lock
xchg
loop
movsb
insb
mov
loope
idivb
adc
aaa
xor
rcll
das
aam
pop
sub
inc
jne
adc
pop
dec
sub
idiv
adc
dec
jmp
cmp
jmp
push
push
cmc
jl
inc
adc
inc
sbb
pusha
and
loopne
xchg
insl
dec
xchg
fsubrp
jmp
mov
incl
lret
push
jo
ret
mov
sbb
mov
out
push
mov
mov
jge
cmp
iret
xchg
aam
adc
mov
pop
scas
out
mov
sbb
lret
les
dec
ja
into
sbbl
and
mov
fbld
lret
bound
cmc
fbstp
outsb
test
pop
arpl
xchg
sub
add
push
jb
loop
cltd
push
jmp
xor
lods
inc
outsl
add
lods
xchg
out
loopne
push
hlt
icebp
push
addr16
daa
lock
popf
sbb
fidivrs
fistpll
pop
xor
and
jecxz
icebp
call
fnstcw
jae
mov
pop
stos
push
das
mov
mov
pop
outsl
and
mov
jecxz
adc
sbb
mov
arpl
cmpsb
sub
loopne
jecxz
call
jae
std
jg
repnz
iret
sbb
shll
inc
pop
rorb
cmp
lock
outsb
xchg
pop
scas
dec
cli
or
inc
jg
mov
ds
xchg
push
ja
daa
push
mov
add
decl
xchg
nop
sub
jno
mov
sahf
lret
orb
repz
inc
push
imul
mov
push
dec
xor
mov
jns
mov
in
insl
cld
outsl
inc
push
dec
adc
jmp
dec
aaa
fidivl
outsb
mov
testl
icebp
aaa
icebp
adc
push
adc
mov
cmp
adc
cld
or
lcall
dec
mov
push
repz
test
call
jg
cmp
rclb
fmuls
es
jbe
rcll
movsb
xor
decl
les
jmp
xchg
sub
adc
xor
dec
push
cld
outsb
push
stos
sahf
neg
mov
scas
js
fwait
mov
pop
add
cs
fdivp
push
xchg
fwait
push
aaa
cmp
shl
outsb
lret
lret
push
fnsave
adcb
or
dec
lods
incl
dec
js
jae
or
and
mov
shrb
jno
inc
jle
test
xchg
roll
mov
xchg
mov
or
lods
push
in
mov
pop
fmuls
push
rorl
jle
int
push
cld
xor
push
pusha
loope
jne
cwtl
jae
or
push
xchg
outsl
scas
inc
in
mov
mov
scas
cmpsb
dec
mov
push
repnz
bound
sub
xor
clc
jb
in
fwait
scas
and
mov
lock
loopne,pn
adc
ljmp
decl
sbb
adc
xchg
mov
xor
cs
push
xor
sbbb
in
dec
cmpsl
mov
inc
call
filds
clc
ljmp
add
push
repnz
or
sub
jno
pop
jg
push
xchg
xor
cmp
filds
add
fildl
daa
dec
loop
das
sbb
rolb
inc
popf
dec
push
xor
imul
add
in
or
lea
pop
cmp
rclb
adc
mov
fistpl
add
int
neg
cli
stos
icebp
jo
stos
fildll
jns
jmp
xchg
repz
fcompl
mov
fs
cwtl
mov
lods
lcall
mov
mov
cmp
sub
test
push
pop
adc
adc
add
cltd
xor
imul
fwait
cmc
lret
cmp
dec
pop
pushf
jp
rorb
pop
jl
lret
sbb
test
aam
mov
mov
outsl
int
cltd
jg
jecxz
bound
dec
mov
jne
jmp
ljmp
test
rcrb
test
decl
call
mov
nop
aas
push
inc
sarb
popf
fs
mov
push
mov
pop
roll
inc
shld
out
xor
subb
std
ret
jmp
pop
lds
jg
sti
jae
and
test
es
mov
cmc
cmp
or
push
shlb
fisttpl
out
clc
or
stos
push
add
push
pop
out
xor
in
insb
dec
push
movsb
pop
push
nop
mov
loop
jg
sub
jmp
push
and
xchg
cmp
arpl
xchg
lds
ds
inc
lcall
xor
mov
and
sub
std
mov
ret
lock
int
or
inc
ja
mull
adc
xchg
orl
lcall
push
dec
and
mov
xchg
stos
or
cmpsl
gs
outsb
repnz
xor
nop
mov
sub
out
in
test
sub
insl
call
sbb
inc
cmpsb
adc
push
aad
lods
nop
xchg
push
sbb
les
jmp
mov
test
mov
add
jle
jl
fcmovnbe
movsl
test
pop
xchg
in
test
dec
out
out
popf
nop
fsubl
push
andl
incl
push
jb
rcr
cmpsb
xchg
decl
sub
xchg
lock
scas
loop
fwait
inc
lock
hlt
call
enter
add
xor
not
push
sbb
std
dec
mov
mov
cmp
mov
mov
lahf
adc
dec
jno
mov
xor
jnp
cmp
cli
push
sti
lea
mov
add
push
push
adc
mov
int3
cmp
jbe
fs
fwait
push
xchg
mov
mov
movsl
daa
cmp
test
mov
jge
icebp
into
cmp
add
dec
std
rolb
test
mov
negl
mov
or
iret
pop
mov
mov
and
pop
jmp
push
dec
mov
dec
push
pop
and
cwtl
sub
fs
pop
lea
sbb
or
bound
mov
pop
cmc
or
das
js
cs
popf
inc
xchg
jns
ljmp
push
xor
sti
popa
sarb
pop
sub
push
and
stos
sub
dec
int
mov
fildl
jne
in
pop
sbb
mov
and
mov
push
call
fildll
mov
fistpll
aad
jo
xchg
movsb
mov
pop
dec
gs
adc
shrl
scas
xchg
decb
dec
insb
movsl
das
std
pusha
cwtl
sub
pop
or
mov
xor
push
out
pusha
cmp
push
lock
and
mov
mov
insl
adc
or
call
pop
js
add
fstl
mov
inc
push
or
aas
sub
mov
add
js
outsl
loop
out
scas
ljmp
adc
pop
or
outsl
pop
mov
insb
adc
mov
rcrb
jge
and
jle
mov
jno
gs
test
mov
pop
loopne
inc
mov
fdivl
cmpsl
add
push
sub
adc
and
lock
outsb
je
adc
imul
xchg
dec
sbb
push
lock
jnp
lret
push
sbbb
xor
pusha
dec
dec
int
aaa
jmp
rcll
adc
mov
movsb
inc
hlt
arpl
xchg
pop
ss
fucomip
call
test
icebp
mov
test
jne
scas
mov
cli
mov
sub
movsl
popl
sub
fwait
push
or
pusha
js
inc
mov
cmp
pushf
jmp
lahf
outsl
push
mov
cmp
cltd
test
xor
es
push
repnz
jmp
sti
testl
outsl
cwtl
mov
idiv
call
mov
cmpsb
jo
adcb
inc
jne
sub
arpl
add
inc
push
mov
cmc
pusha
dec
insb
ljmp
fcoms
mov
mov
xor
xor
pusha
mov
fdivl
fnstenv
test
xchg
je
lock
insb
mov
loopne
fcoml
hlt
mov
cmp
xlat
or
push
or
sub
aas
lds
mov
pop
lock
sbb
inc
rorl
sub
fisttps
sub
in
arpl
andl
jne
cwtl
mov
inc
mov
xchg
push
dec
dec
scas
out
mov
xlat
movsb
pop
push
lock
loopne
inc
ficomps
into
mov
push
sbb
jl
outsl
sub
cmp
mov
fistpl
stos
nop
jecxz
pop
movsb
je
ud0
add
clc
lods
adc
jbe
lds
dec
test
mov
mov
das
cmp
jp
aam
out
incl
mov
fistl
ficoms
flds
testb
pop
mov
sbb
pushw
fnstenv
out
jmp
or
adc
xchg
mov
enter
jecxz
insb
out
idiv
fisttpl
mul
aaa
xor
popf
jge
inc
jmp
jno
pop
je
fcomps
lock
dec
mov
push
and
mov
xchg
fcmovb
das
mov
push
and
dec
sub
jl
out
mov
add
decb
inc
push
test
testl
icebp
mov
pushl
fists
dec
or
ret
lret
outsl
std
ret
mov
into
fs
xor
sti
test
push
clc
clc
pop
aaa
rorl
jg
xor
aam
cmpsl
sub
pop
movsl
xchg
idiv
push
enter
sbb
mov
popa
add
jo
jp
in
mov
jne
sub
pop
sar
bound
adc
mov
pop
xchg
cltd
test
test
sbb
pushf
pushl
mov
stc
xor
rorb
mov
insl
pop
out
icebp
jmp
adc
decb
add
lahf
and
mov
sbb
jb
ljmp
nop
rol
incl
icebp
or
xor
xchg
sbb
cli
js
frstor
sti
jbe
incl
push
pushf
lods
xchg
add
cmp
sbb
clc
lods
test
mov
sbb
cmp
aaa
stos
inc
shr
mov
lea
jnp
pushf
and
and
cwtl
push
test
pop
movb
jecxz
and
das
cld
sbb
loope
shrb
into
out
fisubs
std
outsb
jmp
or
rorb
sti
outsb
lods
std
fcomip
movsb
xor
lcall
lock
jle
pushf
and
ja
xor
ja
aas
int3
jl
mov
jne
sbb
mov
pop
rcrl
add
xor
icebp
mov
pop
pusha
cmp
mov
ret
adc
jl
sti
aaa
add
icebp
xor
shll
or
pop
mov
bound
add
mov
loop
mov
pushl
inc
push
xchg
xchg
cmpsl
rclb
loop
jno
shl
jge
out
enter
test
ret
fildl
lods
cmp
arpl
cmpb
pop
mov
incl
or
or
or
sti
je
jge
test
cmpsb
inc
adc
jbe
sub
xor
decl
in
pop
loopne
push
pop
and
sub
insl
arpl
enter
jle
add
cmp
pop
clc
dec
idivl
cmp
push
push
aam
enter
lods
or
popa
ret
jnp
xchg
inc
mov
mov
and
fimuls
stos
pop
imul
sub
pop
and
cmc
xor
cltd
mov
imul
mov
mov
pop
shrb
sub
xor
ds
cmp
data16
insb
pop
dec
shr
in
int
jmp
clc
xchg
pushf
xchg
movl
clc
fists
push
inc
cmp
push
stos
xchg
pop
or
jnp
int
jmp
or
jl
mov
notb
in
hlt
jle
popa
adc
mov
add
pop
pop
in
stos
clc
pop
add
xor
and
mov
cmp
sar
adc
cmc
push
mov
xor
push
out
and
aam
cmc
push
push
pushl
pcmpgtw
jbe
nop
jl
jb
or
xor
mov
xchg
xchg
stos
jge
cld
push
push
loope
mov
cmp
xor
xchg
outsb
mov
adc
xchg
dec
jno
idivb
xchg
stos
jg
fucomp
sbb
push
jbe
clc
aaa
adcb
push
jae
inc
and
push
cs
ret
xor
out
fcmovnb
xchg
push
call
adc
decl
xchg
iret
mov
dec
pop
jne
pop
in
jl
push
movsl
dec
push
inc
lods
testl
adc
mov
cmp
scas
push
test
inc
add
push
add
test
pop
shr
mov
xor
insl
push
ljmp
mov
mov
das
out
shrb
or
cmp
cli
mov
loop
popaw
imul
mov
or
outsl
shll
or
or
cmp
push
or
push
pop
xor
faddl
or
mov
incl
mov
stc
dec
scas
pop
lock
fstps
inc
je
pop
inc
mov
subl
aam
into
test
stc
shlb
xor
cmp
popf
and
lret
jle
mov
cs
add
in
aam
jmp
fdiv
jg
adc
dec
aam
and
mov
fistpll
dec
notl
jne
cltd
daa
jle
dec
mov
loopne
fimuls
add
dec
xor
mov
pop
push
lock
cmpb
adc
inc
or
ja
mov
hlt
mov
ljmp
cld
sub
sbb
subb
lods
ret
sbb
push
popf
mov
inc
xor
fisttpl
aam
xor
imul
pusha
ja
lock
in
sahf
in
mov
adc
jbe
mov
inc
fbstp
psraw
cltd
arpl
aaa
jns
aas
mov
outsb
mov
repnz
test
mov
sbbl
adcl
pusha
or
add
pop
test
cmp
inc
rcr
cld
outsl
pop
xchg
in
minps
inc
nop
xchg
inc
fistpll
std
movsb
lret
cmp
pop
stc
and
mov
lcall
insb
add
out
or
add
jbe
pop
hlt
js
push
add
inc
pusha
sbb
mov
fwait
push
cmp
jmp
add
inc
pop
sbb
dec
cmp
ljmp
iret
fdiv
mov
adc
sub
je
push
pusha
test
sti
or
or
dec
int3
out
int
fsub
inc
pop
adc
aam
imul
jnp
add
dec
arpl
fiaddl
sub
jns
dec
push
sbb
test
mov
stc
dec
pop
mov
mov
mov
inc
pop
pop
mov
xchg
jns
sti
inc
sti
or
xlat
call
in
cmp
pop
xor
test
mov
hlt
ljmp
outsl
push
mov
xlat
mov
cltd
push
andl
in
and
call
int3
out
fwait
mov
lods
or
pop
cmp
xchg
fsubrl
jle
subb
rcll
fst
mov
addb
inc
aas
cmp
aaa
jle
push
or
loope
xchg
ds
in
and
in
movb
cmp
dec
add
and
outsl
cltd
roll
rcrl
ljmp
lcall
arpl
movsl
aaa
add
mov
adc
js
sub
sbb
scas
je
jecxz
idivb
loope
fwait
mov
addr16
inc
xor
xor
cwtl
inc
adc
decl
movsl
repnz
mov
xorb
xchg
fwait
inc
das
jl
cs
xchg
insl
adc
and
pop
iret
shl
or
push
cltd
dec
insb
add
jb
das
cld
cmp
repz
loopne
shrb
imul
mov
mov
les
popa
cmp
pop
loope
or
add
test
bound
xchg
pop
pop
push
inc
repz
aas
aad
leave
cmpsl
pop
subl
shlb
out
push
mov
out
cmp
inc
test
ret
mov
add
je
enter
nop
or
ds
mov
test
mov
jmp
lods
fsubrs
adc
mov
xor
mov
push
test
test
xlat
dec
daa
lds
arpl
insl
andl
test
mov
sbb
xchg
xchg
inc
stos
sti
imul
decl
jmp
pop
cmp
pop
enter
rcrb
aaa
mov
fimuls
xor
and
cmpsb
ffreep
das
insl
pop
sub
test
jmp
add
icebp
jmp
stos
mov
jg
test
jecxz
pop
jg
sub
aaa
call
dec
cmp
and
outsl
hlt
sub
call
jg
pop
cld
pushl
lock
inc
mov
popa
xchg
cmp
cli
call
cmpsl
outsw
push
adc
mov
call
push
push
xor
jbe
test
jge
push
fistpll
mov
les
or
divl
inc
jae
stc
pop
std
filds
in
jbe
xor
leave
aaa
xchg
pop
push
adc
mov
daa
mov
lret
pop
lret
test
out
cwtl
mov
cmpsb
stc
sti
pop
std
or
xchg
fcmovnbe
dec
ja
adc
jge
mov
xor
push
cmc
mov
aaa
inc
test
sub
jge
pushf
pop
or
mov
sbb
ja
fildll
and
lods
push
pop
xchg
bound
aad
imulb
stc
add
pop
stc
loopne
pop
sub
int3
popa
in
mov
in
sub
cld
add
sbb
and
xor
testl
push
nop
sbb
pop
and
add
lds
xor
push
or
es
jmp
mov
jb
jb
lret
fildll
inc
push
push
pop
pop
sbb
sub
mov
js
lcall
scas
gs
mov
imul
in
dec
int
iret
mov
jmp
xchg
fbld
sarb
div
stc
outsb
adc
jecxz
xor
hlt
scas
movsl
mov
incl
ret
sbb
pop
das
aas
sbb
test
rcl
addb
imul
ljmp
hlt
and
mov
or
mov
pusha
mov
mov
push
cmpsl
mov
subl
and
cmp
jnp
int
call
js
mov
mov
sub
jno
or
push
mov
mov
fs
xor
push
stc
jmp
mov
movsl
push
xchg
sbb
test
sbb
repnz
je
lock
jnp
sub
jg
xchg
dec
lods
fbld
fidivrs
jge
push
clc
inc
js
js
fcomi
or
clc
call
jp
mov
sub
xchg
and
cmp
aaa
cli
fdivs
in
sbb
push
jg
mov
ljmp
lcall
std
decl
fwait
es
repz
test
xor
xchg
pop
add
jae
mov
jg
stos
xlat
pusha
in
dec
imul
mov
pop
and
fwait
cld
decl
inc
jne
js
fwait
test
xor
stos
lock
xor
daa
cmp
loope
or
cmpsb
outsl
xchg
scas
sti
push
dec
pop
test
mov
sub
sahf
gs
call
sbb
js
jg
mov
pop
lods
jecxz
push
mov
lcall
jg
dec
cs
ret
cmp
hlt
or
jns
bound
decb
std
call
ss
jge
fsubs
inc
sub
push
flds
pushl
sub
in
imul
jle
pop
ds
xor
das
cmp
arpl
addr16
call
jns
out
cld
negl
insl
sbb
pop
xor
ds
and
sub
fmuls
and
out
adc
in
xor
cld
repz
bound
fists
popf
push
popa
cs
sub
or
decl
mov
mov
fwait
in
scas
cltd
les
outsb
inc
imul
in
into
ror
inc
outsb
test
ret
dec
js
sub
fwait
cltd
mov
in
cmp
stos
inc
sbb
fcmovnbe
in
sar
jmp
push
xor
mov
mov
int3
push
repz
les
lcall
push
dec
leave
mov
add
jns
data16
and
mov
xor
ljmp
mov
lahf
sub
push
popf
adc
xor
pop
xor
fcom
data16
push
jae
push
js
std
call
pop
jbe
jg
lcall
aaa
lret
pop
dec
loope
jnp
ret
cmc
jb
adc
pusha
jg
mov
mov
aaa
fs
add
pop
xchg
lock
js
sbb
iret
add
inc
aad
xchg
ret
test
std
ljmp
hlt
and
sti
das
lcall
add
ret
ljmp
outsl
test
and
cltd
cld
aaa
dec
pop
imul
les
xchg
mov
insl
xor
fidivrl
std
jo
lret
push
xor
pop
or
inc
les
sbb
in
lcall
dec
test
add
iret
cmp
mov
mov
jg
adc
sub
ljmp
cmpsb
mov
xchg
call
andb
xchg
lock
inc
icebp
dec
push
fldcw
jp
shlb
in
pop
dec
push
mov
loopne
outsl
cmp
mov
bound
test
ret
adc
hlt
push
jl
ljmp
mov
mov
aad
jle
ss
inc
cld
incl
sbb
cmp
mov
out
mov
lock
dec
cmpsb
mov
adc
fnsave
cld
jno
negl
dec
addr16
iret
aaa
repnz
dec
pop
xchg
push
cld
outsl
cld
pushl
pop
stos
add
or
rorl
push
es
imul
mov
xor
xor
outsb
loope
cmp
subb
je
pop
mov
ljmp
cs
inc
movl
mov
xor
ja
jmp
outsb
cmpsl
shll
cwtl
inc
dec
xchg
js
or
cmp
clc
push
xor
outsl
hlt
ljmp
xchg
adc
mov
add
out
or
das
gs
std
pop
and
inc
push
dec
dec
rorb
mov
inc
popf
jecxz
push
pop
inc
or
or
lcall
pop
insb
movsb
mov
cli
std
cmp
ficomps
in
or
outsl
aad
xlat
fcomp
mov
pop
xchg
sbbb
decb
std
negb
repz
push
and
enter
test
or
clc
sti
icebp
xor
xchg
rolb
ds
lods
mov
decl
pop
fwait
das
iret
scas
or
or
pop
xchg
popf
mov
fisubrl
mov
and
jle
shll
inc
call
stos
pop
cmpsb
add
dec
and
jecxz
ja
push
and
loop
pop
cmp
mov
adc
or
cmp
data16
faddp
cmp
pop
inc
jg
lods
fsubr
jmp
or
cwtl
jns
cmp
loope
out
cld
jnp
cmpl
mov
lcall
add
jbe
cwtl
jg
jmp
ret
mov
cmp
push
xorl
std
out
mov
aam
lods
ljmp
cld
fistpll
lcall
ret
test
loop
push
imul
fnstsw
lcall
dec
cmc
enter
add
dec
repz
mov
ljmp
fcmovnb
int3
adc
fimull
cmp
lret
cmp
pushl
cmp
ret
pop
jo
xchg
fisubrl
loopne
mov
and
rep
cmc
dec
xor
mov
dec
xchg
clc
imul
xchg
je
into
sbb
std
push
insl
and
xchg
xlat
lret
xchg
xchg
je
dec
add
xchg
cmp
daa
sbb
jecxz
leave
mov
inc
or
lahf
inc
or
jno
dec
loop
mov
addr16
ret
mov
mov
xor
and
jmp
fcompl
loope
fldcw
repz
jl
mov
aas
clc
xor
xchg
xlat
decl
ja
add
rcr
adc
pop
int
test
mov
insb
cmp
xor
outsb
push
dec
inc
mov
xor
jmp
dec
icebp
into
cmp
loop
sbb
or
jbe
adc
fcomps
xchg
imul
pushl
mov
jg
inc
xchg
fs
cmpsl
cmp
adc
cmpsb
pmullw
outsl
mov
jmp
push
out
or
std
and
cmp
into
and
iret
nop
aad
push
sti
push
lret
ljmp
stc
outsl
lods
cmp
jns
out
out
dec
fnstsw
push
inc
ljmp
jmp
jg
jno
scas
ss
lahf
mov
or
imul
aas
and
lcall
fnstsw
das
lock
sub
pushf
cli
aad
rorb
cmp
cs
jecxz
test
incl
inc
inc
jmp
push
shlb
call
lods
loope
sahf
dec
fdivrl
push
in
lret
pop
stos
stos
sbbl
ljmp
inc
out
hlt
jecxz
test
pop
imul
cmpsl
dec
sar
mov
clc
leave
es
lods
mov
lahf
pusha
cld
cmp
gs
sub
je
sub
jnp
aas
int
lcall
jne
or
stc
fdivrl
jo
and
pop
sub
pop
add
lret
cs
pop
cmp
mov
mov
stc
cmp
mov
mov
mov
xchg
popa
testl
les
fdivl
ljmp
push
shrl
jecxz
add
rorl
inc
pusha
add
movsb
xchg
test
call
leave
inc
pop
cmpsb
add
sub
or
jmp
jns
out
sub
lret
into
out
mov
or
jmp
push
and
popa
pop
sbb
ret
in
pop
pop
add
jae
ret
fwait
inc
dec
sub
jmp
sub
mov
push
dec
sbb
pop
mov
ficoms
fwait
pop
out
decb
cmp
adc
mov
inc
lea
arpl
daa
dec
cli
push
lcall
push
sbb
inc
mov
push
cmp
or
into
jbe
bound
in
cmpl
out
movsl
sbb
mov
or
pop
pusha
jecxz
jg
popf
js
in
cmp
pop
add
mov
xor
rclb
mov
mov
mov
es
mov
clc
fcos
incl
push
pop
push
fs
sbb
push
cmp
loop
jb
xchg
xchg
mov
rcll
lcall
xorb
jge
push
sbb
bound
lods
arpl
xor
incl
daa
push
imul
push
xchg
mov
jge
stos
adc
outsl
cld
inc
int3
or
dec
int3
xchg
fs
test
fldt
stos
push
mov
loopne
repnz
dec
and
mov
out
stc
mov
call
js
loope
push
sbb
pop
cmpl
lds
xor
push
out
std
pushl
movsb
ret
mov
int3
lods
or
ja
fsubl
pop
ljmp
xor
mov
dec
fnstcw
lds
loope
arpl
out
pushf
inc
dec
add
std
fistpll
mov
xor
pop
mov
jle
xor
out
ss
mov
int
xchg
cs
mov
mov
xor
mov
sub
jle
cmc
jle
mov
pushf
lods
data16
xor
pop
jmp
dec
dec
add
xchg
test
jecxz
add
push
jmp
xchg
lods
xor
in
mov
push
xchg
insb
nop
mov
cld
in
in
push
sahf
inc
mov
mov
pushl
repz
jno
ljmp
dec
jae
out
pop
hlt
cmpl
adc
int3
adc
cmc
stos
inc
add
or
lea
or
ret
sub
outsl
jmp
xor
jg
cmp
mov
ret
addr16
cmp
lret
aad
int3
sbb
lcall
mov
loopne
ja
shr
dec
jnp
and
fbld
mov
mov
sub
fcmove
xchg
xor
mov
add
gs
lods
ror
push
orl
nop
sbb
icebp
xchg
js
xchg
test
dec
shrl
mov
loope
jbe
movsl
jmp
cmp
test
pop
pusha
sub
gs
jp
pop
cmpsb
in
hlt
int
negl
pushl
iret
push
mov
fdiv
fimull
adc
mov
scas
out
aaa
cs
ljmp
push
notb
push
push
gs
jle
dec
aad
icebp
movsb
in
das
icebp
jmp
aad
cmp
sbb
sarb
sbb
cmp
stos
jno
adc
dec
call
fdiv
lea
and
dec
mov
inc
insl
inc
out
jno
pop
std
xor
sub
dec
lret
ljmp
iret
pushl
adc
arpl
sub
xlat
outsb
jl
push
ja
mov
add
mov
jge
mov
out
jge
fcomps
test
xchg
and
les
sub
xor
call
ret
out
scas
push
pop
mov
pop
loopne
sub
out
lock
loope
sub
ljmp
mov
mov
clc
lret
arpl
jmp
outsb
ret
cmp
out
and
dec
out
js
scas
sub
jmp
fs
xlat
call
inc
sbb
std
pop
pop
mul
sar
test
push
push
movsl
in
pop
push
rcrb
lcall
pushf
push
popf
lds
test
inc
call
or
fidivrl
cmp
adc
lods
addr16
lds
inc
rol
pop
sbb
cmp
mov
pop
arpl
jg
call
loop
sub
mov
sti
mov
inc
es
xor
sti
sbb
clc
mov
add
out
movl
sub
add
decb
scas
dec
cmc
hlt
mov
scas
sbb
pmulhw
jne
scas
stos
repz
add
lahf
inc
call
fs
repnz
mov
pop
push
push
xchg
cli
into
inc
mov
pop
ljmp
cwtl
mov
add
cmc
lea
lds
inc
mov
xchg
lret
out
push
mov
xor
lret
xchg
mov
cld
lea
test
loopne
call
push
cmp
js
pop
call
ljmp
xchg
mov
add
popf
xor
mov
nop
sbb
jg
shr
lds
dec
aaa
push
xor
inc
push
jp
stc
inc
out
fistpl
or
data16
scas
pop
in
out
sti
sbb
in
cld
iret
or
push
or
rcr
or
decl
inc
cli
mov
mov
push
jecxz
out
mov
or
ljmp
sbb
or
cli
repnz
mov
ljmp
mov
push
out
enter
sti
fistpl
and
mov
int
push
js
xor
dec
cld
xor
and
mov
and
add
push
cmp
lcall
mov
scas
movsb
push
clc
adc
mov
sahf
test
enter
ret
dec
jg
ljmp
out
fmul
sahf
xor
sbb
out
int3
cmp
jbe
daa
popa
test
rol
sbb
inc
sub
jo
xor
fistps
pushf
repnz
add
add
inc
ljmp
sub
cmp
mov
cmpsl
in
sbb
out
dec
jb
je
cmpb
mov
ds
ja
and
pusha
adc
call
cld
int3
and
mov
lahf
or
leave
sbb
or
in
pop
ljmp
push
sub
sbb
cmp
xor
dec
jmp
inc
and
jl
mov
incl
jg
xor
loope
push
push
ss
cmp
mov
ljmp
in
aaa
ja
subl
movsb
xor
lcall
sarl
fistps
addl
lahf
mov
sbb
nop
cwtl
pop
sub
hlt
incl
mov
adc
jge
cmp
in
call
das
cli
rcrl
flds
outsl
mov
push
cmp
jle
scas
mov
imul
fdivrs
cs
push
pop
fs
mov
pushl
ror
imul
mov
call
fidivl
inc
mov
shrl
ljmp
pushf
enter
insb
rol
adc
cs
fldl
and
mov
mov
or
cs
cmc
subl
cli
leave
daa
xchg
xchg
jg
dec
inc
call
jle
mov
mov
xchg
xchg
in
push
scas
jge
adc
cmp
dec
outsl
cmp
and
push
clc
decl
xor
mov
icebp
xchg
sti
pop
push
in
div
clc
decl
addl
lcall
jl
fildl
add
fstp
inc
dec
scas
or
mov
dec
pop
fbstp
push
lahf
jne
dec
imul
das
pop
inc
adc
sbbb
inc
sbb
pusha
add
lods
xchg
les
aam
xor
cmp
mov
and
lods
or
bound
incl
lcall
xchg
cmp
fimull
xor
aad
inc
outsb
repnz
incl
jo
rolb
stc
adc
push
movsl
insl
xchg
mov
push
pop
sarb
and
pop
inc
xchg
pop
popa
add
cmc
int
push
cltd
popf
inc
push
mov
push
mov
push
dec
add
and
xor
jg
inc
mov
out
jle
push
lret
loope
cmp
xchg
movsb
daa
cs
pop
call
mov
inc
cmp
jmp
mov
bound
inc
lcall
sbb
xchg
cmpsb
xor
or
insb
pop
lcall
pop
fs
adc
sbb
aas
aaa
out
std
mov
dec
sub
sub
jae
aaa
push
adc
push
mov
sbb
std
cmp
push
fwait
xchg
xor
pop
xchg
popf
xchg
mov
loop
cwtl
push
dec
aad
sti
sub
lcall
jp
fwait
push
call
in
mov
lods
out
test
mov
sarl
lea
pop
fsubr
push
adc
sarl
mov
ljmp
sbb
jb
cmp
xchg
test
jb
dec
adc
jp
popa
mov
sub
test
incl
push
mov
sub
fcoml
dec
pushl
das
nop
sbb
pop
movsl
xchg
cmp
cmp
sti
add
das
jae
ja
cmpsl
sar
mov
push
add
mov
inc
mov
lock
dec
int
mov
loope
jl
inc
xor
out
sbb
call
clc
adc
mov
fistl
and
cmp
in
and
push
aaa
cli
jns
mov
out
push
and
fldl
jae
cli
add
jno
in
lods
seta
jecxz
popf
sub
or
call
or
imul
mov
adc
push
ljmp
lcall
mov
jae
aas
inc
repnz
xchg
push
call
jb
pop
pop
sub
cmp
push
out
nop
cmp
and
mov
sub
inc
sti
cli
sarl
inc
je
out
sbb
push
cld
push
fs
pop
insl
jg
incl
insb
orl
xor
cwtl
lods
or
out
push
dec
mov
incl
aad
xchg
lret
xchg
mov
and
repz
imul
jne
or
or
add
shl
call
fstpt
mov
mov
add
cld
aaa
xchg
jns
std
mov
push
mov
test
jge
xchg
decl
and
add
add
cmpsl
aaa
push
mov
in
mov
mov
lcall
das
push
les
adc
push
cli
rolb
lcall
repz
jbe
popa
flds
mov
aam
mov
mov
ljmp
sarb
sub
jnp
inc
xchg
clc
mov
pop
sub
lods
lret
lods
dec
xor
rcl
test
decl
repz
sti
jno
mov
jg
incl
aaa
jbe
sbb
mov
int
fadd
lock
mov
shrb
nop
scas
xchg
stos
adcb
fldl
push
shlb
mov
sbb
mov
cld
rolb
adc
clc
cmp
mov
fisttpll
mov
ds
loope
cmp
adc
pop
clc
sahf
cmc
imul
rcl
dec
dec
incl
mov
test
push
shlb
or
or
movsb
push
pusha
dec
ljmp
cmp
ljmp
scas
inc
or
shl
fimuls
lods
pop
ljmp
movsl
mov
mov
mov
adc
cmpsl
cld
pop
cs
movb
std
pop
mov
in
dec
testl
incl
mov
push
sbb
inc
test
ds
rclb
fcomi
xchg
movsl
inc
ss
lock
cmp
jle
subb
or
or
ljmp
stos
xor
cmc
pop
inc
dec
inc
lods
iret
inc
pop
and
jecxz
jl
dec
push
mov
mov
sbb
adc
jecxz
lret
jmp
jno
jmp
mov
push
ret
and
cmpsl
or
ljmp
mov
lret
lahf
jle
mov
ljmp
mov
shl
mov
mov
cmpl
dec
test
sbb
jg
mov
fisubrl
inc
bound
enter
in
jge
fwait
and
cltd
or
fs
pop
daa
fwait
hlt
adc
cmp
cmp
fsubl
pop
push
imul
inc
pop
dec
pop
stc
data16
cmpsl
hlt
mov
sbb
jnp
arpl
insl
jmp
cmp
jns
ljmp
mov
mov
sbb
fs
push
adc
sbb
incl
cmp
lods
outsl
into
sub
test
or
scas
arpl
sti
jne,pn
leave
gs
mov
or
fistpll
xchg
popa
mov
xor
jmp
mov
push
mov
mov
push
call
or
inc
ljmp
dec
pop
in
sub
cmpsl
sti
xchg
hlt
je
fistpll
jbe
jae
xchg
cltd
pop
or
or
jp
push
dec
pop
inc
push
test
aad
xchg
repnz
inc
dec
pop
dec
sbb
clc
jae
mov
push
mov
cld
fs
jl
and
cltd
mov
aam
lcall
decl
pop
shrb
and
ds
mov
ljmp
incl
fs
add
mov
fadds
sbb
ljmp
movsb
xor
mov
out
mov
mov
mov
aas
push
dec
dec
inc
or
and
jae
push
aam
or
cmp
sbb
push
je
insb
call
jns
test
jp
stos
mov
lock
andl
adc
loopne
repnz
outsl
cmc
ljmp
mov
inc
out
insl
enter
jnp
aaa
mov
jmp
mov
fcomi
jge
in
sub
pop
jl
push
pop
cmp
jnp
aam
outsl
lcall
jne
stc
xor
daa
pop
stos
lcall
insb
ds
push
cmp
cwtl
enter
fisttpl
test
int3
rcl
jg
inc
mov
dec
int
iret
divl
mov
fwait
out
cld
push
decl
mov
adc
fcompl
sbb
mov
pop
stos
jp
xchg
cmp
pusha
mov
jg
push
pushf
fnstenv
ljmp
rorb
xchg
sahf
aas
mov
xchg
dec
das
sti
out
pop
jo
insb
pop
js
outsl
jl
push
repnz
arpl
mov
bound
ret
xor
push
stos
cli
jmp
stos
push
mov
jo
repz
sbb
push
add
push
mov
enter
cli
insb
push
cld
fdivrp
incl
mov
insb
cmp
rolb
insl
aad
imul
push
jo
loop
outsl
mov
mov
sbb
sub
dec
sahf
lahf
xchg
jmp
fiaddl
setle
or
lock
push
mov
jmp
xchg
insb
nop
adc
xchg
call
pop
mov
ds
int3
popl
add
jle
xor
jge
nop
jg
iret
call
xor
sub
mov
and
enter
pushl
jmp
dec
movsl
inc
and
imul
pop
mov
clc
cmp
pop
js
mov
popl
inc
fsubl
mov
and
dec
jmp
xchg
ljmp
pushl
xchg
or
mov
or
fstps
sahf
test
lret
and
adc
sbb
fdivl
nop
arpl
rorl
call
decb
clc
sub
xchg
push
add
ret
test
mov
inc
rcr
pop
pop
xchg
xchg
mov
popa
inc
xchg
loop
jl
push
or
and
xchg
pop
pop
inc
hlt
jmp
fsqrt
cmp
shlb
mov
pushf
ret
call
pop
sar
decl
cmp
adc
dec
xor
ja
cmp
out
test
scas
stc
mov
or
ret
mov
xchg
and
jno
push
cmp
lcall
jbe,pn
std
sub
pop
subb
and
clc
fstps
pop
adc
cli
bound
add
scas
ficompl
sti
dec
mov
and
push
lods
mov
ljmp
mov
rcrl
rclb
jno
shlb
mov
adc
push
pop
cmp
scas
test
xchg
mov
popa
xor
jo
push
stos
mov
lret
lret
xchg
mov
sbb
xor
jge
icebp
notl
inc
xchg
mov
out
mov
in
add
incl
mov
cli
addr16
rcrb
mov
sub
std
mov
xor
scas
cmp
mov
sbb
dec
push
call
decl
fcmovne
dec
or
scas
or
arpl
adc
xor
decl
mov
xadd
loop
mov
std
mov
js
add
pop
call
xchg
cmc
test
adc
cltd
repz
jbe
ss
shll
rep
or
aad
lahf
sbb
sub
mov
adc
fistpll
test
ss
mulb
push
pushl
cli
lods
sbb
xlat
cli
dec
dec
stos
testb
add
push
mov
sub
xchg
ror
arpl
cmp
xlat
aad
mov
mov
pop
imul
mov
sub
mov
stos
mov
sub
jmp
xor
and
cmp
push
xchg
pop
movaps
test
or
dec
outsb
pop
ficomps
jns
jns
mov
mov
mov
jg
repnz
adc
ficoml
push
adc
hlt
xchg
and
incl
loope
mov
inc
jno
pop
scas
repz
mov
incb
inc
dec
jbe
push
decl
xchg
pop
incb
adc
or
lea
mov
in
clc
jg
sbb
xchg
sti
or
insb
loop
add
ljmp
std
push
call
xchg
scas
lock
pop
pop
pop
adc
mov
or
aas
out
repz
dec
test
out
int3
hlt
loopne
into
enter
and
clc
push
cmpsb
popa
stos
mov
repnz
fists
push
mov
cvtps2pi
ret
call
jl
jae
test
and
add
roll
std
das
sub
or
mov
or
xor
incl
cmpl
xor
push
aad
leave
lahf
jge
pop
fs
dec
imul
movsl
cmpsb
sbb
or
add
fs
xchg
xchg
cwtl
cmp
test
decl
adc
inc
mov
cmpsl
pop
dec
lcall
or
dec
and
dec
sbb
xrelease
rolb
xchg
add
clc
jo
fcomi
and
mov
icebp
jmp
popf
mov
cmp
pop
push
imul
and
mov
mov
jno
pop
sub
sub
insb
jae
dec
inc
cld
mov
lea
sbb
incl
mov
ja
lods
sub
cld
out
test
mov
aaa
je
push
fadds
xlat
jg
jg
xchg
mov
imul
mov
mov
stos
add
jmp
mov
jae
mov
lahf
ret
jl
pusha
pop
jg
jno
and
aas
ret
outsl
inc
icebp
dec
pop
adcl
sbb
mov
jnp
xchg
es
call
int3
mov
lret
out
cld
inc
jl
fisubrs
hlt
jl
leave
loope
add
and
jb
mov
std
inc
mov
mov
repz
dec
adc
sarb
loop
dec
test
add
sub
inc
jmp
sbb
repz
cmpsl
push
push
mov
xchg
or
int
gs
test
inc
pop
ljmp
icebp
mov
stc
popf
imul
sub
xor
sbb
fwait
divb
cmpsb
daa
mov
in
in
lahf
ljmp
cmp
xchg
sbb
xor
dec
loop
sbb
inc
mov
mov
cmp
xor
cs
sub
dec
inc
add
test
ja
jle
cmpb
xor
dec
xor
loope
scas
loopne
addr16
std
pushl
jo
pop
ss
or
adc
jge
or
adc
test
scas
jecxz
mov
into
jno
jb
shr
ds
xchg
pop
jg
jmp
lods
int3
xchg
call
xor
push
das
test
mov
int
cli
ljmp
mov
dec
dec
data16
mov
cld
ret
call
cli
cs
inc
cltd
aas
dec
jo
xchg
lret
pop
dec
lds
mov
mov
scas
add
xor
sbb
mov
hlt
mov
scas
jno
cmc
dec
mov
nop
fwait
push
inc
gs
ljmp
cmp
clc
outsb
add
cmp
lds
pop
ret
bound
sub
dec
sub
mov
rcr
jbe
jg
lods
inc
push
fimuls
xor
in
fistl
jge
mov
lcall
dec
jnp
dec
mov
jnp
mov
add
andl
addr16
push
std
cmp
js
adc
mov
cmp
pop
jo
cmp
mov
and
add
in
es
in
sar
ljmp
jns
cmc
add
jl
sbb
pop
pop
add
sbb
mov
mov
add
int3
ja
or
mov
jbe
pop
icebp
mov
sub
pop
push
mov
les
xchg
jmp
mov
adc
bound
or
lret
iret
in
cmp
pop
lods
inc
repnz
sbb
pushl
inc
pop
push
lds
aam
push
int3
daa
lret
lret
mov
mov
adc
push
add
or
inc
xor
xor
mov
insl
xlat
incl
rclb
mov
mov
cmp
stc
rclb
pop
loope
imul
ljmp
sub
dec
inc
cld
lods
jmp
dec
push
loopne
push
push
fimuls
jns
loop
int3
enter
mov
pop
xlat
fdivl
lcall
jne
lea
stos
and
lds
aaa
xlat
in
and
mov
xlat
adc
cmpsb
pushl
imulb
test
mov
jg
xor
jp
or
incl
fstpl
mov
aas
scas
movsb
idivb
sbb
nop
inc
adc
int
std
jle
or
inc
cwtl
cmpsb
icebp
dec
fadd
inc
xchg
out
mov
pop
insb
mov
das
stc
test
mov
xor
cwtl
mov
lock
and
cli
dec
aad
push
jnp
sbb
or
jno
das
sub
dec
incl
fisubl
lret
scas
push
lods
stos
test
push
loop
dec
inc
fildll
sub
arpl
out
xchg
lcall
pushf
cmp
dec
out
jb
jb
jp
push
mov
out
mov
test
mov
sbb
call
ss
sbb
sub
mov
nop
inc
arpl
jae
test
pushl
in
xchg
add
add
jb
test
fs
fimuls
inc
out
stc
lods
fildl
pop
mov
and
lods
into
xchg
xor
fs
bound
xlat
icebp
jmp
lahf
call
into
pop
add
ljmp
cld
mov
insb
loopne
mov
xor
sahf
or
jge
add
cmp
jae
sub
jle
call
xor
add
test
push
ljmp
insb
cmc
dec
jnp
sub
loopne
xor
inc
xabort
adc
out
fcomp
lods
stos
lret
icebp
mov
ss
lock
jb
push
sub
sbb
mov
int
or
mov
ds
mov
pusha
xchg
loopne
test
daa
dec
or
jp
iret
in
pop
jns
push
xchg
aad
or
js
call
cs
ja
pop
jo
pushl
push
jecxz
ss
pop
rolb
fbld
loop
pop
xchg
fnstcw
jb
jno
push
test
decl
mov
jb
stos
decb
imul
int
shl
ljmp
and
sti
and
mov
rcrb
sub
ret
mov
push
mov
jae
push
and
add
mull
inc
mov
call
pop
pop
push
push
adc
pop
stc
mov
test
mov
lea
push
dec
outsl
jecxz
call
out
sbb
pop
mov
sbb
jg
and
aam
and
fstps
cs
jmp
popf
sbbb
jae
jp
xchg
in
mov
mov
sbb
stos
sbbb
inc
inc
and
hlt
jg
jns
mov
scas
push
jle
xchg
das
pop
cmp
clc
ljmp
dec
js
int3
adc
pop
call
inc
dec
movups
pop
jmp
mov
and
call
popa
push
push
in
pop
mov
fwait
fs
insb
push
cld
filds
lcall
and
mov
shlb
mov
in
insl
imul
push
add
jnp
outsb
cmc
mov
das
movsb
or
inc
icebp
outsb
mov
sbb
fs
pushl
lds
insl
call
lock
jmp
adc
or
in
out
xchg
push
movsl
inc
adc
ja
dec
dec
mov
dec
adc
lcall
adc
cmpsb
mov
lds
mov
jl
sbb
in
stos
sar
mov
movsl
mov
sub
enter
xchg
repnz
std
outsl
std
cmp
push
mov
xor
inc
imull
xchg
shlb
adc
mov
call
xchg
loop
jecxz
pop
fwait
mov
and
push
into
lea
lea
jbe
mov
lock
call
js
shll
or
mov
mov
andb
inc
cmp
ljmp
addr16
sub
sub
hlt
nop
cltd
mov
in
sbb
int
adcb
dec
lods
mov
dec
dec
xor
and
pop
sub
add
cmp
adc
and
sbb
jae
lods
xor
inc
rol
lods
fldt
hlt
insl
push
cwtl
jp
mov
xchg
and
sub
adc
rcll
and
adc
lcall
xchg
inc
fwait
lahf
push
jo
jl
xor
cmpl
outsl
jo
lahf
and
mov
movsl
mov
ret
cmp
movsl
ja
or
ret
jg
sub
sub
xor
test
popf
clc
into
and
mov
jecxz
xor
jb
ljmp
jle
push
push
iret
inc
iret
mov
pop
shrl
add
cmc
ljmp
pop
mov
cli
push
outsb
mov
lods
push
rolb
mov
popf
andl
inc
mov
adc
scas
cmp
jl
sub
cli
decl
and
cltd
push
bound
inc
push
add
inc
out
inc
add
popa
xchg
pop
outsl
mov
pop
arpl
inc
inc
data16
imul
enter
rcrl
inc
inc
push
pushf
mov
cmpb
jns
repz
lock
inc
loopne
xor
jg
mov
leave
bound
or
ja
je
push
adc
jno
aam
push
hlt
arpl
push
adc
fadds
push
pop
das
pop
lock
add
outsl
icebp
decl
in
push
repz
cltd
xor
and
jg
outsl
inc
jne
cmpl
mov
lea
cmpsb
cmp
xchg
int3
mov
popf
sbbl
push
cmp
loopne
sbb
jne
sbb
out
icebp
pushl
addb
mov
cmc
nop
mov
xchg
cmp
mov
jmp
shlb
pop
cmpsb
iret
or
or
lret
xor
int
sbb
pushl
imul
aaa
fisubrs
xchg
les
or
lods
testl
das
mov
cli
arpl
in
mov
mov
mov
pushl
incb
jns
lret
rcr
xchg
xchg
jno
sbb
or
mov
xchg
pop
inc
das
xor
xor
lret
push
sub
ljmp
decl
cmp
test
ret
mov
cmovs
int
pop
sbb
movsl
ret
fmull
ret
push
cmp
mov
push
cmp
jnp
and
mov
inc
or
je
ljmp
push
imul
loop
clc
adc
ret
cltd
js
stc
out
movsb
pop
ljmp
jae
ds
dec
xchg
sub
repz
test
or
xchg
outsl
icebp
pushl
inc
mov
mov
sbb
xchg
cwtl
sub
aaa
clc
inc
js
and
das
inc
addr16
ss
cwtl
or
rcl
pop
cmp
loop
and
xor
and
hlt
pop
xchg
pusha
jp
shll
xchg
scas
add
frstor
outsl
mov
rep
in
jg,pt
jl
jg
sti
mov
xor
push
cmp
bound
insl
shlb
jge
fidivl
push
pop
jmp
adc
outsb
push
mov
mov
inc
lods
push
push
loopne
fdivrs
aaa
clc
jno
push
mov
add
ror
cld
or
loope
cmp
pop
clc
fnstsw
sahf
or
lahf
mov
fmul
fs
cmp
inc
mov
pushl
dec
push
xchg
imul
xor
jecxz
add
arpl
ljmp
xorl
mov
clc
push
addr16
mov
fsubr
ja
xchg
add
and
decl
std
ret
aas
ds
push
dec
mov
xchg
addb
sti
fwait
push
sbb
insl
xor
call
popf
movsb
loopne
xchg
sbb
xchg
fwait
add
arpl
sub
push
pop
aad
std
pop
sub
pusha
out
lret
mov
test
jae
test
or
pop
mov
fstl
or
daa
std
pop
clc
lcall
aaa
fldl
testb
mov
mov
add
mov
dec
push
icebp
mov
push
outsb
add
pop
jae
or
push
ljmp
or
mov
mov
push
mov
inc
xor
adc
fdivs
in
sbb
imul
movsl
pop
mov
or
pushf
scas
loopne
dec
dec
es
cmp
dec
sub
lds
push
gs
loope
pop
cltd
daa
das
lods
mov
xor
jg
xchg
mov
in
xor
faddp
and
lcall
imul
cmp
mov
rol
int
lock
or
jo
out
inc
push
jmp
cmp
outsb
repz
push
cmp
mov
fisubs
push
or
jmp
jnp
or
mov
ljmp
xor
sub
sub
cld
pushf
stc
aaa
mov
data16
jb
or
outsl
mov
mov
and
cwtl
cmpsl
jge
jns
push
mov
mov
mov
addr16
xchg
call
sub
push
repnz
and
jg
ljmp
mov
or
out
jae
inc
incl
inc
nop
fstpt
pop
jns
xchg
sub
mov
fmuls
push
sub
mov
sub
pop
sub
push
nop
sub
jg
mov
stc
mov
jle
and
rcll
mov
sti
insb
lods
pop
outsl
push
es
xchg
les
cli
decl
xchg
ss
cmp
sub
add
push
fistps
inc
xor
icebp
lcall
into
mov
mov
leave
pop
add
or
add
cli
decl
lods
arpl
cld
rol
loope
stos
lods
cwtl
ljmp
mov
push
dec
jl
icebp
cmpsb
pushf
cmp
mov
sarb
fdivrp
insb
xchg
jbe
lock
test
xor
jnp
in
cld
das
and
xor
call
mov
push
shrl
xor
mov
insl
hlt
mov
mov
jmp
cld
mov
sbb
or
movsl
decb
mov
adc
jbe
mov
jmp
out
or
ds
xchg
mov
pop
inc
jle
popf
xchg
int
add
xchg
clc
mov
mov
mov
fsts
dec
dec
sub
fldcw
xlat
cltd
in
sub
jmp
mov
movsl
inc
out
iret
stc
shll
fldt
mov
or
adc
daa
adc
xchg
movb
iret
incl
fbstp
or
cmp
fs
add
cmpsb
addr16
dec
cli
fistl
imull
divb
popa
fmul
sti
pop
stc
arpl
jg
aaa
adc
testl
test
shlb
push
adc
mov
scas
inc
ret
or
sbbl
mov
adc
xchg
lcall
mov
or
push
adc
mov
lret
adc
jo
mov
mov
push
movsl
call
cmp
imul
jecxz
mov
mov
rclb
and
sbb
inc
or
call
cli
push
cmc
pop
dec
push
aam
pusha
jbe
popf
and
push
repnz
xchg
mov
in
inc
sar
sbb
into
clc
adc
mov
cmp
decl
or
mov
mov
in
in
jns
out
mov
clc
ljmp
int
clc
das
and
dec
push
xchg
jo
jge
into
pushf
decl
sub
sbbb
mov
movsl
inc
add
inc
mov
dec
push
repz
cli
cmp
xchg
outsl
ds
jae
dec
lret
iret
inc
or
cmc
jg
ret
push
fbstp
sbb
pop
ret
in
out
cli
adc
insb
push
push
fucom
test
out
cli
sub
sub
dec
xor
xchg
mov
mov
stos
and
sbb
dec
mov
gs
lret
adc
out
sub
fldt
mov
inc
cmc
xlat
mov
mov
mov
sbb
pop
pop
mov
adc
add
ja
es
mov
cmp
inc
inc
dec
pop
mov
cwtl
fdivrl
cld
jmp
insb
in
sbb
jae
add
sub
cmp
and
mov
clc
add
pusha
mov
lcall
pop
xchg
ja
andl
adc
lock
ret
int
push
ljmp
outsb
jge
xor
push
adc
cmp
lret
adc
test
ja
push
dec
pushf
fidivs
xchg
push
lods
sbbb
jl
test
roll
cwtl
loope
sbb
imul
ret
mov
jo
mov
hlt
shrb
sti
jle
fdivrs
xor
bswap
cmc
cmpsb
rcrb
jge
lret
pop
clc
add
lret
int3
jmp
or
mov
data16
ja
add
call
fcomi
orl
sbbb
cltd
add
lcall
or
orb
xor
arpl
pop
mov
call
cmp
jmp
cmpsl
mov
neg
ss
outsb
mov
mov
in
push
incl
out
add
call
sbb
cmp
js
std
or
repz
aaa
lods
inc
jns
fdiv
aaa
mov
mov
inc
pushl
ret
ror
mov
fs
pop
shll
cli
mov
roll
xor
subl
aaa
incb
jne
scas
inc
pop
subl
out
jmp
repz
nop
xchg
dec
movzwl
lcall
add
fisubs
das
sub
jb
xchg
movsl
nop
sbb
xchg
jns
xor
sbb
mov
loope
les
repnz
fdivp
mov
ljmp
mov
push
xchg
pop
pop
scas
inc
in
imul
dec
fucomi
sahf
dec
movsb
fidivl
xchg
or
in
call
mov
je
push
dec
xchg
test
inc
arpl
xor
pusha
into
repnz
dec
incl
pop
push
fsts
jnp
imul
neg
dec
pop
popf
imul
sub
outsb
adc
cmc
cmpsl
pop
dec
push
iret
leave
cli
in
dec
sbb
hlt
call
mov
scas
xchg
imul
cmpsb
mov
lods
xor
and
or
sbb
cltd
scas
adc
decl
cmp
xor
xchg
mov
rorb
jnp
xlat
rcll
mov
pop
movlps
scas
loopne
gs
cmpxchg
and
test
pop
addl
ja
ljmp
inc
mov
adc
mov
cmp
std
shr
pop
adc
outsl
xchg
clc
mov
push
inc
leave
push
insb
inc
xor
stos
sbb
inc
movsb
dec
adc
lods
int3
cmp
clc
out
ret
xchg
aaa
xchg
mov
cli
loope
aam
adc
xchg
in
leave
filds
mov
in
aas
dec
jg
ss
popa
je
add
icebp
or
mov
pushl
and
cmovp
loope
inc
test
jnp
xorb
in
js
xchg
mov
dec
nop
lcall
mov
push
rol
mov
shr
cmp
jecxz
aam
cwtl
test
push
fldenv
ljmp
pop
ljmp
xchg
xchg
and
rcrb
andb
fs
outsl
aaa
lret
jg
jmp
aam
hlt
out
sahf
imul
fcompl
xchg
and
sub
inc
add
inc
stc
dec
sbb
leave
mov
mulb
cmp
jne
sti
daa
gs
call
dec
bound
xlat
dec
in
rcll
push
mov
push
pop
add
lcall
movsb
fs
sbb
ret
sub
and
cli
xor
jmp
xchg
jae
pop
inc
stos
mov
int
cmc
stc
pop
iret
sub
jge
gs
jp
shl
mov
pop
mov
jl
jp
gs
fsubrl
sbb
js
mov
push
xchg
jb
cmp
xlat
sbbb
jb
popl
push
ljmp
mov
loopne
jae
jg
sub
mov
daa
jecxz
daa
sbb
jmp
es
in
out
mov
inc
dec
sti
jg
mov
jg
sbb
sub
lea
cmp
pop
lret
icebp
incl
xor
icebp
lods
mov
push
stc
cs
mov
mov
sbb
icebp
in
repz
dec
adc
inc
mov
cmpsl
dec
das
mov
incl
jmp
mov
bound
push
loop
pop
jp
inc
or
jg
ljmp
aam
inc
mov
js
push
fcomps
mov
mov
push
push
and
hlt
in
adc
xchg
stc
cmp
addb
lret
mov
leave
in
cltd
ret
push
xchg
aam
orb
jg
mov
xchg
cmp
lods
icebp
addr16
call
mov
add
test
arpl
call
xchg
sbb
mov
jge
xor
imul
lea
xor
sub
pushl
inc
mov
pop
adc
sbb
imul
inc
mov
push
lods
in
push
sbb
push
or
fsubrs
lahf
xchg
jo
pop
cmpsb
pop
stos
imul
ljmp
loop
insb
ret
jbe
jmp
cs
inc
aam
jb
adc
adc
mov
popf
cmpsb
ds
adc
xlat
mov
std
mov
sub
repz
sbb
mov
xor
xchg
jg
movsl
xor
aaa
or
and
cmpsl
out
sbb
push
nop
lock
mov
xor
jp
cltd
insb
push
pavgb
stos
xor
ljmp
push
dec
and
xchg
enter
call
or
inc
jp
jmp
jl
push
outsl
adc
repz
mov
notl
mov
add
adc
int3
dec
or
dec
xor
insl
repnz
jnp
fimuls
cmpsb
add
decl
jno
das
jo
inc
pop
xlat
call
sub
cmovl
jmp
add
mov
xchg
repnz
decl
pop
in
or
popf
mov
lret
icebp
dec
imul
sbb
jle
stos
leave
add
mov
jle
movsl
out
sub
lods
add
xchg
mov
mov
repz
clc
mov
pusha
cmp
ljmp
mov
xor
fadd
xchg
push
es
xorl
das
outsl
fisubrl
adc
lcall
dec
repz
dec
arpl
fimuls
lcall
stos
ljmp
mov
adc
aaa
fcmovu
mov
mov
dec
jne
jbe
mov
add
fidivl
xlat
iret
sbb
xchg
rcrb
leave
or
adcb
inc
cmpsb
mov
mov
das
pop
cwtl
push
lods
dec
enter
pop
imulb
mov
jg
xchg
clc
cs
adc
push
dec
or
fcomp
dec
cs
gs
lcall
hlt
ror
lods
jns
add
les
ljmp
in
mov
in
dec
js
aam
mov
cmp
call
test
adc
add
mov
jnp
mov
ret
adc
call
sub
dec
cmpsl
int
std
ljmp
inc
out
xchg
mov
bound
dec
jne
mov
push
lret
lock
add
mov
mov
fisubl
pop
pop
sbb
mov
sub
fbld
dec
leave
add
adc
sbb
xchg
add
jecxz
inc
aam
repnz
in
inc
cmp
sub
or
and
incb
and
or
adc
adc
jle
lock
cmp
les
mov
sbb
cmp
xor
and
inc
sar
add
inc
scas
push
xor
adc
rclb
jecxz
cwtl
mov
lar
and
push
outsb
push
add
pop
push
mov
mov
pop
push
shl
sahf
cmpsl
add
and
lea
bound
movsb
dec
mov
cmp
lods
std
outsl
subb
int3
enter
jle
mov
cs
sub
or
ss
push
inc
mov
add
mov
cwtl
jle
idiv
cwtl
mov
jp
mov
out
pop
adc
mov
fwait
es
cmp
iret
les
add
jecxz
or
std
lea
fistl
in
cmp
clc
add
fcompl
sbb
sbb
pop
jne
mov
addb
test
ja
cwtl
sub
jmp
subl
mov
outsb
cld
stos
add
in
icebp
aad
add
test
push
sbb
adc
std
push
icebp
cmp
push
adc
add
stos
fimuls
push
and
push
insl
cld
sbb
xor
push
add
ret
mov
les
inc
dec
xchg
pop
xorl
movb
ret
jg
enter
mov
mov
scas
pop
cmpsb
mov
jo
sbb
aas
aaa
insl
mov
adc
lcall
inc
in
add
aad
clc
pushl
lret
fcompl
xchg
adc
in
adc
adc
or
sbb
jmp
adc
or
pop
add
xchg
mov
inc
aad
movb
into
cld
mov
aas
adc
mov
lods
test
es
pop
stos
jb
mov
out
pop
add
push
fadds
push
adc
cli
or
xchg
int3
mov
and
and
cmc
mov
aad
push
fstp
lcall
cmpsb
lcall
add
gs
out
ret
push
ja
jb
sub
push
xchg
or
xchg
repz
mov
shlb
stos
adc
inc
add
mov
outsl
add
jle
test
sbb
push
inc
ja
andl
fucom
sub
add
test
daa
mov
xor
stos
add
mov
rol
add
xchg
fwait
add
push
test
mov
mov
mull
inc
mov
decb
adc
fbstp
stos
pcmpgtd
add
push
and
jno
ficoml
xor
jnp
mov
jg
notl
sarl
test
call
sti
add
sti
clc
cmpl
mov
lcall
jae
lods
sub
mov
lea
js
idivb
ljmp
sbb
scas
push
and
lahf
mov
std
ret
or
inc
lret
sub
mov
mov
mov
shrb
inc
adc
fstpt
cs
inc
mov
es
jmp
sbb
add
and
insl
jbe
out
pop
loope
in
shll
add
mov
movsb
cld
add
sub
and
pusha
lock
push
or
cmp
or
pop
repnz
out
outsb
sub
insb
and
mov
push
imul
and
mov
jno
imul
pop
fcoms
sti
fisubrl
xor
aad
dec
rolb
add
ljmp
bound
dec
mov
xor
gs
mov
sub
in
cld
das
adc
sbb
cld
adc
fistps
je
push
adc
pop
jecxz
or
decl
xor
add
sti
mov
add
sti
sub
lret
add
les
sahf
inc
hlt
fnstsw
lahf
sub
mov
or
lret
add
in
ja
or
pop
rorb
in
gs
pop
pop
fbld
push
test
out
pop
cmp
and
sub
lea
jp
mov
insl
idivl
scas
jge
andl
fwait
rorb
js
pop
mov
push
or
adc
testb
mov
mov
xchg
addr16
mov
sahf
out
mov
push
or
mov
scas
jl
push
pusha
sbb
mov
jo
ret
fdivs
dec
int3
gs
lcall
lods
mov
or
in
inc
in
js
insb
fistpll
je
push
imul
daa
pop
xor
ss
cmp
test
leave
out
push
inc
pop
jno
add
xchg
lds
cmp
sub
sub
push
sub
nop
add
mov
push
jge
add
adc
sbb
mov
mov
jl
sbbl
test
or
and
lds
sub
mov
ljmp
push
test
adcl
ret
and
jge
out
lret
test
enter
mov
sbb
int3
mov
mov
sub
mul
jp
xchg
inc
jecxz
je,pn
cmp
cld
cmpl
push
and
cmp
adc
jno
movsl
add
add
pushf
cwtl
or
mov
insl
cld
nop
adc
sub
mov
orb
or
rorb
shll
pushw
test
inc
jge
pop
pop
ret
aad
fadds
push
es
outsl
jg
mov
or
cmp
xchg
add
push
jno
xchg
jle
outsl
lcall
or
or
outsb
mov
aas
mov
cmp
fsubrl
and
push
sub
jg
ret
add
sub
add
cmc
sbb
dec
lock
sbb
or
push
call
xchg
pop
cmp
xor
test
lea
mov
add
jg
fildl
inc
add
int
rorl
addr16
push
test
iret
mov
orb
pop
adc
or
lahf
arpl
rcl
xchg
lcall
pop
xchg
jle
cmp
xor
jecxz
inc
push
aas
cwtl
repz
test
xor
sub
clc
insl
sub
fcompl
adc
or
add
lret
insl
rcrb
shll
test
pop
add
movsl
inc
pop
mov
or
btc
aad
dec
add
pop
pop
push
hlt
push
push
insb
sarb
mov
mov
xchg
push
shll
imul
in
sub
cmp
outsl
mov
setne
xor
jmp
adc
inc
or
xor
mov
or
jl
jmp
fwait
sbb
pop
jmp
rcll
iret
out
push
out
pop
mov
push
loopne
jle
repz
sti
pop
loopne
add
push
roll
cmp
sbb
clc
jbe
jg
xchg
negl
rorb
rcrl
int
pop
and
jno
das
pusha
xchg
adc
push
hlt
add
lea
das
negl
mov
incl
push
push
inc
jmp
inc
mov
in
sbbb
push
sbb
aad
and
fs
jno
outsl
or
or
jbe
loope
mov
sbb
incb
xor
sbb
cmp
xchg
sbb
insb
or
testl
mov
mov
imul
push
jle
outsb
scas
imul
inc
inc
das
jne
lods
int
inc
shrl
insb
sti
push
int
mov
sbbl
jbe
or
add
sbb
orb
cmp
sbb
or
mov
sub
sbb
inc
into
dec
dec
fistps
sub
gs
push
push
icebp
add
push
mov
mov
cmp
std
jne
out
aaa
and
stos
xor
xor
add
data16
dec
dec
pop
jge
or
sbb
or
and
sbb
push
mov
pop
sub
lods
rcrl
clc
xor
mov
insl
mov
or
stos
icebp
push
loopne
mov
in
inc
enter
lock
dec
xchg
sub
test
cmp
cltd
sbbl
xlat
mov
push
xchg
cld
jbe
push
adc
push
mov
or
std
out
mov
xchg
mov
arpl
jle
cli
xchg
sub
cld
sbb
jne
fistpll
outsb
test
in
cmp
and
outsl
inc
mov
inc
add
fs
pop
cli
push
and
in
xor
popa
cmc
jnp
popa
mov
in
xlat
adc
cld
or
add
jbe
jg
adc
add
sbb
lods
mov
wbinvd
scas
and
lods
in
lcall
cmc
adc
push
adc
call
mov
clc
out
dec
and
and
sub
nop
enter
sub
pop
mov
mov
icebp
sub
push
sbb
xor
outsb
mov
dec
insb
or
sub
dec
bound
pop
fstpt
jmp
xchg
mov
xchg
adc
das
cld
inc
out
xchg
cmp
notl
cli
scas
jmp
dec
roll
popf
out
push
xchg
or
leave
adc
dec
mov
loopne
std
decl
scas
cmc
sahf
stos
and
sbb
push
mov
mov
inc
xor
inc
adc
dec
imul
jge
pop
mov
mov
jbe
or
and
lock
outsb
inc
fsubl
das
call
push
add
js
jb
repz
loopne
mov
cmc
adc
nop
sub
decl
mov
xchg
loopne
sbb
mov
push
mov
pushf
popa
lods
outsl
ss
test
pop
sbb
and
orl
inc
pop
sbb
loopne
popa
aaa
mov
or
push
mov
imul
pop
aam
sub
ljmp
mov
lahf
sahf
mov
ds
mov
push
xor
inc
push
sti
ret
ss
jno
mov
sbb
adc
adc
push
jle
cwtl
jmp
jbe
in
ja
ds
xor
push
and
jno
xchg
jle
ljmp
leave
pop
mov
aas
mov
pushf
or
cwtl
jmp
push
test
cmp
mov
and
inc
aad
mov
cmpb
add
mov
lea
dec
xchg
lahf
xor
add
aam
push
loop
push
std
test
sub
add
lret
adc
cmp
les
and
and
insl
or
daa
subl
jb
pop
jl
dec
xchg
adcb
nop
dec
scas
stc
cwtl
sbb
push
js
jns
mov
clc
inc
inc
testb
push
mov
xor
std
ffreep
test
add
icebp
call
sbb
fwait
or
sbb
hlt
pop
xchg
hlt
shrl
xor
push
imul
fidivl
daa
cld
jg
std
or
mov
mov
mov
lock
inc
jl
call
aam
es
sbb
fldcw
sbb
cmc
inc
mov
pop
xchg
mov
ss
xchg
cmp
lahf
push
nop
fiaddl
pop
adc
inc
xor
clc
ret
test
mov
in
mov
pop
xchg
jl
push
adc
icebp
jl
bound
in
inc
lcall
jo
push
push
unpcklps
jne
adc
sahf
cli
jbe
jmp
adc
test
and
loope
pop
fidivrs
lds
mov
sbb
icebp
mov
jg
test
mov
idivl
mov
sub
in
mov
cmp
xchg
add
hlt
test
lock
mov
push
sub
cmc
scas
idivb
push
shl
mov
out
cs
sub
mov
in
jl
and
push
repnz
mov
jne
mov
ror
test
adc
cli
aas
mov
test
js
inc
or
inc
sbb
lcall
push
inc
mov
push
push
push
mov
xchg
icebp
subl
pop
sbb
and
mov
inc
inc
jne
icebp
iret
or
inc
push
pop
fimull
push
subb
rorb
add
test
fidivrl
jae
sub
mov
push
or
mov
pop
subb
lret
mov
scas
sbb
sbb
mov
orl
mov
xchg
js
fldcw
shrb
shll
jmp
bound
add
clc
outsl
push
das
push
push
ret
lret
jp
push
or
ljmp
daa
pop
shll
movsl
loope
aam
push
adc
lods
mov
out
sub
data16
enter
mov
mov
mov
jbe
sahf
inc
inc
mov
mulb
sbb
sub
add
stos
cltd
push
add
jge
shll
pop
clc
adc
adc
push
call
stos
mov
push
mov
pop
je
mov
loope
call
rol
and
pop
nop
test
mov
pop
clc
sbb
stos
in
sub
mov
inc
ror
push
call
dec
sbb
jbe
pop
test
aad
pop
or
or
insb
mov
xor
jmp
dec
pop
mov
push
fsubs
ficoms
inc
insb
xchg
jp
mov
lret
mov
jg
add
sbb
movsb
push
inc
lods
or
dec
pop
dec
fs
mov
push
aaa
dec
mov
inc
mov
negb
xchg
mov
push
add
stc
dec
call
sub
cli
xchg
add
xchg
mov
lods
hlt
sbb
out
cmp
push
std
jmp
push
clc
inc
pop
dec
mov
push
js
xchg
add
or
out
adc
sub
xor
or
icebp
pop
mov
push
inc
mov
sub
inc
cmpsb
in
sbb
add
jno
into
lret
outsl
insb
fwait
cli
es
fisubs
loope
add
outsl
stos
fdivp
or
push
lcall
pop
pop
push
mov
xchg
inc
popf
or
test
dec
sub
jae
mov
inc
sbb
add
jne
inc
xor
cmp
sub
adc
jns
inc
push
jle
add
out
loop
sub
xchg
idiv
shr
mov
push
add
mov
lea
mov
mov
pusha
fwait
sahf
notb
jno
sahf
pop
or
xchg
decl
dec
or
inc
je
cmp
hlt
in
inc
mov
xor
xorb
test
aaa
and
icebp
ss
cmpsb
es
lods
jmp
mov
aaa
rcll
imul
jle
call
lahf
sbb
filds
ud0
outsl
xor
add
test
mov
and
lock
lods
outsb
loopne
out
and
dec
sbb
adcb
mov
nop
fadds
pushf
pop
mov
push
rcrb
xor
mov
pop
mov
sti
cmpsl
mov
fwait
pop
fistl
mov
xor
lret
lret
xchg
mov
iret
fiaddl
out
pusha
adc
jnp
shr
push
push
inc
das
into
sub
fcmovnu
push
cmp
mov
fisubrs
xchg
insl
repz
cmpsb
repnz
mov
je
jl
mov
shrb
cmp
and
mov
add
scas
cmp
xchg
pop
jo
xchg
jp
leave
sub
test
mov
cs
stos
pop
inc
sbb
insl
adc
je
test
imul
jg
in
cltd
mov
sub
into
aas
lds
lods
js
js
add
mov
and
adc
cwtl
mov
jecxz
insl
popa
adc
fidivrl
inc
inc
test
mov
idivb
xchg
cld
mov
fimuls
fwait
inc
enter
pop
subl
mov
stos
and
sub
je,pn
xchg
sub
and
daa
pop
sub
pop
push
push
cld
and
pop
aaa
pusha
imul
add
xor
daa
inc
inc
pop
shrb
xor
mov
mov
rcl
mov
pop
lods
adc
cs
ds
inc
ret
cmp
mov
lods
mov
psubd
inc
cmpsb
push
mov
mov
and
mov
loop
frstor
insl
and
or
jg
aad
adc
mov
mov
shrb
cmp
cmpsb
mov
inc
add
sbb
adcl
adc
insb
xchg
and
not
mov
shlb
add
mov
push
jnp
push
sbb
les
mov
cmp
push
mov
add
fadds
dec
call
pop
cmpsb
xchg
aam
iret
mov
dec
sub
outsb
sbb
ror
movl
aaa
inc
xor
jae
push
fisttpl
mov
pop
stos
ss
inc
xor
lods
mov
sub
cmp
fisttps
arpl
push
ljmp
dec
cmp
inc
nop
mov
dec
ljmp
dec
jo
icebp
and
ds
sbb
ljmp
mov
jp
ret
or
into
outsl
mov
sbb
cli
cmp
gs
pop
das
sbb
dec
scas
int3
adc
xor
push
clc
and
jl
popf
not
movsl
and
fstpl
sub
inc
je
jnp
sub
movsl
inc
rep
hlt
leave
fldcw
mov
xchg
pop
sbb
in
add
mov
xchg
pop
cwtl
and
or
push
and
pop
push
fcmovnu
fidivl
das
push
or
and
push
inc
rorl
jmp
cli
cltd
js
rorb
cmp
incb
outsb
lcall
mov
enter
ret
mov
push
push
fnstsw
push
mov
mov
dec
push
jg
or
fidivrs
les
fstp
sti
and
test
mov
xchg
xor
outsl
mov
arpl
dec
out
int3
xlat
subb
add
fistl
ja
lods
pop
outsl
push
ficoml
icebp
andb
js
mov
aaa
loope
inc
imul
cmpb
and
add
push
call
xor
in
ss
jnp
adc
xor
and
in
or
mov
ds
jne
or
xchg
imul
sarb
or
inc
xlat
mov
cltd
inc
dec
sar
cmp
cld
lods
aaa
mov
mov
movsl
pop
dec
mov
pop
call
enter
sbb
pop
sub
and
pop
bound
sub
and
mov
mov
and
mov
cmpsb
lcall
pop
test
push
cs
mov
jo
pushl
add
fimuls
shlb
clc
push
fdivs
cwtl
lret
sbb
push
call
lods
add
ja
sub
cmpsb
inc
mov
pop
mov
pop
aad
jo
decl
rcrb
popf
cld
inc
lods
aam
jne
sub
adc
shrb
jg
imul
mov
nop
sbb
jmp
lods
inc
enter
sti
xchg
sbb
push
fdivr
mov
ficomps
jle
sbb
jg
imul
cltd
outsb
andl
jge
loop
cmp
cmp
subl
mov
push
js
fnsave
icebp
mov
cltd
test
movsl
lahf
mov
in
jle
or
mov
push
movsl
test
inc
or
pop
xor
and
xor
fistpll
iret
repz
stos
pop
xchg
mov
popa
loopne
stc
out
pop
cwtl
lds
mov
xchg
incl
xchg
jnp
stos
or
and
mov
and
ljmp
jae
cld
pop
lds
outsb
lods
js
shrb
incb
inc
test
xlat
push
mov
pop
push
dec
cmpsb
jl
imul
jge
shlb
outsl
dec
jg
stos
xchg
xchg
pop
imul
mov
push
jge
dec
mov
xor
cmpsl
pop
mov
ret
test
mov
in
cli
mov
mov
jbe
orb
into
sub
and
jo
and
outsl
aas
mov
std
stc
xchg
mov
sub
mov
out
push
js
popa
sub
xchg
clc
hlt
rolb
xchg
fildl
out
and
aam
mov
fbld
shll
nop
call
xchg
xchg
mov
in
add
xchg
lret
insl
pop
sti
mov
sub
and
xor
fwait
pop
fdiv
outsl
les
mov
rolb
cmpsb
in
mov
out
flds
iret
sub
sbb
addl
mov
outsb
mov
fildl
pop
xchg
leave
xor
insb
outsl
cmpsb
mov
mov
scas
xchg
lcall
xchg
lcall
jnp
and
lock
ds
mov
gs
mov
dec
rol
push
fdivrp
push
cli
test
popf
adc
mov
mov
mov
sub
bnd
xchg
inc
pop
jl
cmp
xchg
cmpsl
and
rcrl
fucomip
mov
call
in
mov
push
add
or
js
mov
lods
mov
xor
and
jmp
push
aas
in
daa
sti
bound
lret
dec
mov
adc
add
xor
mov
xchg
and
scas
xchg
stos
xchg
inc
and
cmp
outsl
mov
and
out
pop
nop
rcl
jne
sub
inc
addr16
adc
or
aad
cli
push
jb
pop
insb
js
pop
test
mov
mov
xchg
push
bound
push
mov
sub
pop
jbe
rorb
adc
pushf
adc
fisttpl
clc
mov
lret
fildll
lret
xor
dec
inc
cmp
rorb
mov
mov
xchg
sub
ret
fistps
mov
pop
push
ss
jns
jle
jae
mov
outsl
pop
pop
cmc
jne
repz
sbb
rolb
sti
outsb
daa
shl
ret
cli
or
add
jecxz
or
and
in
scas
cmpb
insb
jg
lcall
lock
pop
add
mov
adc
xchg
cs
test
icebp
rcrb
or
in
pushf
outsl
call
fwait
sbb
inc
mov
jo
sti
push
in
push
add
push
sbbb
and
inc
push
divb
jl
in
fdivr
mov
das
inc
pusha
cmp
lods
mov
mov
jne
sub
out
xor
incb
pop
adcb
test
jg
lock
xlat
cli
loopne,pt
test
push
das
dec
jge
int
xchg
xchg
adc
movsb
xchg
movsl
fnsave
js
xchg
int
ss
cmp
mov
or
inc
test
and
pop
jp
les
add
aad
sbb
mov
stc
ja
rcrb
fidivrl
aaa
jle
push
mov
lea
sub
jge
out
in
popf
and
cwtl
inc
xchg
adc
inc
inc
xchg
ljmp
dec
pop
push
push
mov
xor
adc
inc
inc
ljmp
je
xchg
stc
mov
lds
inc
sar
mov
arpl
sar
adc
into
inc
sti
fcoms
lret
mov
jl
and
mov
add
dec
dec
xor
mov
aaa
fwait
push
sub
mov
lods
sub
arpl
nop
cmp
mov
sub
dec
fldt
cld
jg
sub
inc
xchg
test
enter
mov
leave
mov
or
shrl
xchg
push
icebp
jbe
idivb
mov
sbb
xchg
shrb
ja
mov
push
and
cmp
stc
mov
std
inc
jne
mov
test
incl
in
dec
cmp
callw
xor
cmpsb
push
xchg
adc
cli
xchg
lret
push
mov
mov
or
int
jp
lret
popa
mov
xor
xchg
mov
sub
push
pushf
push
xchg
scas
mov
jl
data16
das
faddl
cmp
sbbl
jge
xchg
call
cli
mov
aas
pop
mov
ficoml
cli
jecxz
mov
cli
lea
push
fcmove
inc
andl
sbb
push
mov
pop
cli
ret
testb
push
inc
test
adcb
movsl
test
inc
pop
out
add
add
prefetchw
or
mov
inc
xor
jnp
pop
mov
mov
pop
adc
lods
shrl
fists
add
push
in
cmp
adc
sar
push
jnp
sahf
ds
arpl
pop
lcall
push
repz
fmuls
push
mov
ffreep
ljmp
imul
jmp
subl
sbb
insb
adc
cmp
inc
js
jg
mov
mov
aad
imul
stc
movsb
aas
es
xor
les
fmulp
cli
or
loop
gs
jp
mov
jle
sbb
jns
aam
mov
add
mov
icebp
push
jno
ret
sbb
sub
and
out
iret
push
lcall
lea
and
sbb
loopne
mov
js
pop
push
decb
pusha
cmpsb
mov
xchg
pop
lret
jmp
ret
lcall
in
cmpsl
pop
sub
jecxz
shlb
ficoml
fs
sbb
or
sbb
pop
fdivr
adc
dec
jb
fbld
and
mov
lods
adc
jno
jbe
pusha
mov
or
cmp
mov
xlat
mov
in
or
inc
push
shlb
insb
inc
bound
mov
jmp
jnp
std
and
scas
mov
pushf
outsl
fucomi
out
repnz
or
push
int3
xor
cltd
inc
outsb
insb
sub
dec
loopne
scas
and
mov
push
icebp
fmull
pushw
repz
push
xchg
add
outsl
or
fistpl
push
inc
push
rolb
dec
inc
jo
mov
inc
fst
push
push
imul
cli
lods
xor
aas
bound
xchg
int3
rcr
xchg
mov
adc
out
test
mov
sub
and
mov
aaa
mov
movl
push
sahf
mov
dec
mov
xchg
fcomp
add
add
push
and
and
movsl
mov
xlat
cmp
xchg
je
lods
mov
in
adc
sbb
lcall
and
and
cmp
cmc
outsl
and
or
aas
stos
repnz
cmp
push
mov
dec
mov
dec
cld
push
mov
and
loop
mov
adcb
ss
mov
mov
std
fldt
fidivrs
push
mov
orl
pop
push
in
fwait
loopne
insb
popa
sub
rcrb
or
mov
fwait
shll
or
mov
pop
mov
xchg
das
in
sub
sbb
idivl
popa
or
adc
and
cld
jnp
sbb
or
adc
stos
cmp
jp
add
dec
adc
out
aad
xor
lcall
sub
xor
cmpl
lods
scas
sub
fwait
call
cld
lea
ja
scas
std
xor
pop
mov
inc
add
pusha
ljmp
out
cmp
dec
out
and
lahf
scas
cmp
xor
jge
adc
and
mov
stos
sbb
xchg
jge
lahf
in
adc
mov
jae
sbb
jnp
sbb
cmp
pop
cmc
pop
fwait
xchg
mov
inc
xor
mov
out
sub
push
lock
add
gs
movsl
pushf
mov
dec
call
sub
mov
ss
cmp
mov
xchg
imul
mov
add
xlat
mov
gs
shrl
dec
leave
notb
stos
fisubl
insb
add
jae
cmp
loope
pop
mov
decb
add
in
mov
call
dec
hlt
jmp
movb
mov
mov
dec
cmp
jb
xchg
sbb
adc
inc
jl
or
cwtl
jmp
call
adc
dec
in
xor
lea
ss
pop
and
cmpsb
lcall
sbb
mov
stos
mov
xor
push
stc
dec
xor
mov
mov
lcall
add
hlt
dec
icebp
sub
and
in
mov
sti
cmp
pop
ret
jg
stc
mov
stc
jge
and
push
bound
testb
iret
dec
imul
aas
xor
outsl
jg
insb
push
xor
cmp
cmpsb
aad
add
es
sbb
outsl
loope
add
fcmovnb
sbb
cmp
sbb
loopne
jg
lcall
mov
sbb
ds
fsubl
pop
mov
sub
mov
dec
sarl
xchg
dec
ljmp
clc
sub
xchg
jb
jl
fimull
pop
std
mov
sbb
xor
addb
sbb
scas
insw
outsb
fstpt
out
and
cmp
pop
test
mov
cmp
mov
mov
sbb
out
sub
sub
loope
test
stc
int3
ss
in
jge
xchg
mov
sbb
mov
xor
test
cmp
sbb
cld
xchg
mov
js
xor
push
sub
leave
pop
xor
dec
mov
mov
adc
sti
lret
inc
adcl
mov
bswap
adc
jae
pushf
mov
hlt
pop
push
push
sub
or
insl
jmp
sub
mov
dec
ss
push
cmp
pop
loop
dec
out
push
inc
pop
popa
aaa
das
ret
pop
inc
fucomi
push
out
lock
int
stc
movsl
cs
push
ret
add
aam
mov
mov
fnstsw
jno
ss
push
add
idiv
mov
add
jb
scas
or
dec
mov
and
jecxz
mov
lods
mov
je
movsl
adc
mov
fstl
scas
mov
or
cmc
mov
mov
jp
mov
fmuls
rcl
mov
mov
into
push
test
in
or
mov
mov
out
cmc
pop
jp
and
mov
cmp
push
mov
jmp
xor
adc
jl
hlt
pop
clc
fstpt
mov
cltd
jp
pop
repz
pop
ljmp
fs
xchg
fwait
psubq
mov
inc
lods
sbb
aaa
pop
cmp
test
inc
or
mov
lock
sti
rorl
movsb
or
sub
jbe
jb
inc
lcall
ljmp
test
aam
fcomip
xchg
cmpsl
cmp
popf
cwtl
xchg
ds
ret
test
sbb
and
pop
push
push
clc
inc
dec
lods
xchg
fs
push
sbb
push
mov
rcrl
dec
add
fisttps
sub
sbbl
and
lcall
or
sbb
mov
lahf
mov
int
js
in
sbb
sub
add
das
xor
push
push
test
cwtl
pop
sbb
cmp
sti
scas
dec
push
push
in
shl
push
dec
inc
push
pushl
pop
jp
dec
lret
push
xor
mov
push
scas
cwtl
pop
xchg
pop
and
out
jae
incl
ja
mull
push
inc
pop
jmp
push
decl
sbb
arpl
pop
inc
out
es
pop
mov
in
sbb
loope
ret
sub
mov
addr16
sbb
ja
jne
sbb
aaa
aam
and
mov
sbb
adc
clc
inc
scas
data16
repnz
adc
add
test
test
ljmp
pusha
mov
push
add
add
jbe
test
mov
in
fcoms
andb
sbb
fucom
fistpll
test
vmread
or
in
cs
sbb
aam
movsb
fwait
aaa
inc
aam
add
mov
pop
iret
test
xor
adc
push
and
sbb
and
xor
movsb
insb
inc
push
mov
es
and
stc
push
pop
shrb
and
ja
inc
ja
loopne
and
jg
inc
xor
shll
jne
shrl
call
lret
pop
rcrl
pop
sbbb
out
mov
jb
cmp
rcrl
les
jge
or
push
pop
xchg
and
in
add
ja
push
mov
mov
sbb
cwtl
jge
loope
aaa
or
lcall
lcall
or
or
inc
xchg
jae
orl
and
dec
cld
mov
jbe
int3
inc
pop
testb
mov
sub
not
push
add
icebp
mov
jmp
les
sbb
and
mov
sbb
clc
adc
aad
pushl
dec
push
sbb
sub
mov
dec
mov
gs
adc
mov
jle
add
or
and
int
jne
ss
sub
int3
test
subl
call
mov
sub
fwait
aad
sbb
fnstenv
inc
mov
mov
aas
cld
aas
aam
inc
inc
jmp
push
fwait
loop
lock
insb
dec
jecxz
adc
ja
pop
lret
clc
add
pop
test
jg
mov
xor
push
xor
mov
mov
adc
scas
das
daa
lock
xor
mov
out
lock
fdivrp
jg
leave
or
inc
xchg
dec
adc
push
vpcmpgtd
ds
xorb
lret
lret
xorb
jp
push
je
pop
push
mov
adcb
mov
mov
or
fisubl
or
loop
and
mov
xchg
andb
aad
mov
push
andb
mov
in
or
sbb
add
mov
dec
in
xor
jbe
and
js
sub
fcomi
xchg
leave
out
lret
lea
ds
je
repz
mull
adc
sub
cmpsl
push
mov
inc
inc
enter
sar
push
push
ljmp
adc
inc
fstl
mov
cmpsl
std
decl
mov
lcall
jo
adc
cmp
outsb
mov
inc
jbe
push
add
das
hlt
pop
xchg
and
and
rorl
fildl
loopne
or
xchg
dec
adc
int
decl
rcl
xchg
sub
mov
and
ss
pop
adc
out
jg
inc
lock
ficoms
sub
cwtl
pop
sub
mov
jmp
push
imul
xor
sti
mov
inc
push
push
in
mov
addl
ljmp
lcall
adc
shlb
movsb
pop
icebp
ja
out
fimull
icebp
push
mov
xchg
sbb
lods
outsb
adc
mov
and
mov
jle
cmc
ret
sub
aas
gs
or
jns
xor
push
inc
andnps
das
jge
lahf
dec
out
add
mov
inc
test
ja
lcall
mov
mov
xlat
cmpsl
mov
jo
pop
repz
jne
movsl
out
stos
pushl
sbb
sub
adc
xor
or
jno
jge
inc
mov
push
mov
add
sbb
and
loopne
fisttps
jle
and
loop
or
mov
insw
mov
xlat
sub
and
jg
mov
sub
fsubp
xchg
js
jle
jb
ljmp
jmp
orl
sahf
push
ret
xchg
ja
subl
daa
push
repz
fdivrs
insl
and
pusha
es
sbb
mov
lods
mov
cmpsb
ss
jnp
xor
push
jno
fiaddl
sbb
pop
xchg
mov
incb
mov
or
aas
sbb
cmp
sbb
push
adc
sbb
dec
push
mov
sbb
jg
adc
lock
and
or
notb
ljmp
jo
jecxz
sub
jl
dec
xchg
scas
ljmp
cmp
push
lds
popf
dec
xchg
mov
or
cmp
and
ret
adc
out
imul
pop
inc
jmp
iret
jg
dec
std
or
rol
mov
jecxz
shrb
lods
repz
push
in
dec
fistpll
adc
test
js
loop
nop
ret
xlat
mov
ss
imul
mov
or
mov
jg
aaa
push
add
iret
scas
xchg
jbe
mov
xchg
in
filds
push
decb
add
jecxz
mov
push
ja
push
sahf
ja
pop
jg
pop
push
xchg
and
cwtl
shll
mov
cmp
and
dec
out
xor
gs
or
dec
or
dec
addr16
cmp
xor
loopne
mov
dec
mov
scas
jp
push
testl
pop
or
scas
or
push
lcall
mov
mov
fstl
sbb
lahf
cmc
outsl
or
mov
pop
sub
mov
decl
cltd
jbe
and
arpl
movsb
mov
pop
push
outsb
test
test
mulb
lahf
dec
jp
mov
dec
cmc
or
add
or
sub
push
adc
sbbb
add
in
popa
test
sbb
xchg
push
mov
and
lret
clc
fistl
sbb
scas
adc
test
add
mov
out
gs
fstpt
icebp
lahf
scas
add
cmc
pusha
push
arpl
mov
adc
loopne
nop
fs
addr16
in
shrb
push
add
sti
push
or
les
out
adc
test
ss
inc
js
xchg
aaa
mov
cmp
ds
mov
out
push
inc
enter
mov
xchg
hlt
gs
loop
iret
das
adc
xorb
in
lea
mov
mov
ljmp
ja
dec
jp
dec
std
jb
jge
cmpsb
cmp
xlat
cli
insl
insb
add
jg
sti
push
xor
jl
pop
mov
ljmp
mov
jl
fiadds
or
mov
add
aaa
dec
leave
aam
mov
imul
mov
dec
pusha
xchg
fmuls
cmpl
sub
mov
inc
lods
dec
jno
cmp
std
push
ja
jbe
stc
mov
pusha
jle
mov
cld
xor
popa
push
clc
add
jns
or
call
shll
or
jnp
mov
xchg
ret
sbb
adc
std
outsl
js
xchg
fcmove
sub
sbb
aaa
cli
mov
cmp
mov
bswap
mov
int
xor
pop
mov
loope
xchg
jnp
adc
add
sbb
int3
lods
adc
ss
pop
sbb
ljmp
loop
push
cmp
pop
lods
insl
aaa
outsb
fsubrs
xchg
pop
rcll
ret
lock
cmp
aam
nop
jle
push
mov
icebp
push
add
fadds
int
cmp
jb
pop
lret
lds
aam
iret
lret
ljmp
dec
sub
mov
out
push
mov
jb
int3
mov
idiv
hlt
scas
imul
aas
mov
inc
and
outsb
lcall
mov
xchg
cwtl
iret
and
faddp
sbb
clc
xchg
rcll
cs
push
and
popa
lods
sbb
std
pop
cld
mov
sub
loope
aam
cmc
cmp
fwait
inc
xor
rcrb
icebp
xorw
or
xchg
rcrl
je
xchg
clc
xchg
or
jne
xchg
xchg
pushl
sbb
inc
push
cmpsl
xchg
in
daa
stos
add
movsl
sbb
dec
and
adcb
mov
inc
sbb
and
hlt
int3
xchg
add
movsb
pop
add
rcl
dec
jl
lahf
inc
je
or
and
andb
add
loope
jo
cmc
popf
cmp
push
or
mov
das
mov
ret
dec
xchg
sarb
mov
push
or
push
ficompl
lcall
je
test
test
pop
ja
sub
add
clc
xlat
push
cmpsb
pop
std
lods
mov
aad
push
cmp
dec
or
or
fbstp
inc
test
dec
lock
adc
and
outsl
mov
mov
ret
loopne
lret
lea
cmp
or
or
das
faddl
mov
shl
xor
fisttpl
icebp
clc
xchg
and
test
and
fistl
pop
icebp
mov
dec
pop
sub
loopne
pushl
lret
sti
xor
gs
pop
sbb
sbb
scas
adc
and
or
or
loop
and
rorl
std
outsb
outsl
icebp
mov
pop
mov
loop
xor
mov
xchg
jl
bound
jp
cmp
js
inc
mov
pop
loop
popa
insl
jo
sub
call
mov
mov
fstps
xor
mov
inc
neg
xchg
cmp
test
mov
aam
pop
mov
xchg
inc
lea
rclb
int3
cmp
decl
mov
cld
pop
cmc
enter
jp
rorl
adc
and
jecxz
fst
jle
outsb
cld
dec
lahf
int3
sub
shr
or
sub
mov
or
jo
mov
test
pop
xchg
imul
xchg
icebp
arpl
idiv
jbe
sub
ret
jg
mov
pop
outsl
jl
pop
push
loopne
jg
sub
and
cltd
int
mov
in
xlat
out
cs
jbe
arpl
pop
xor
outsb
daa
cmpsb
fistl
push
addr16
xor
mov
imul
jne
and
inc
xchg
fiaddl
inc
adc
push
dec
movsb
inc
std
xor
gs
pop
sub
imul
inc
ret
push
mov
outsb
add
jmp
pusha
mov
mov
out
mov
out
pop
ljmp
test
xorb
orw
mov
lea
fwait
mov
jbe
push
pushf
push
shlb
mov
dec
sub
les
pop
xorl
xor
sti
daa
pop
loopne
mov
xor
or
inc
jmp
pop
fdivs
cltd
add
jle
xor
mov
sbb
or
push
jmp
xchg
or
sbb
push
add
pop
pop
sbb
push
pop
pop
push
mov
push
movsl
daa
rol
or
mov
cmpsl
dec
lods
js
out
repz
incl
pop
mov
mov
push
dec
nop
push
push
add
mov
cs
arpl
mov
adc
pcmpgtd
dec
adc
push
mov
or
mov
xchg
push
ja
mov
iret
stos
fimull
lahf
aam
repnz
into
mov
test
mov
sbb
cld
pop
clc
xchg
sub
mov
sub
dec
outsl
pop
test
or
imul
sub
js
xchg
stos
enter
cmc
adc
mov
ljmp
mov
and
outsb
dec
pop
dec
call
outsl
lock
inc
push
pop
hlt
fistpll
jo
pusha
jne
mov
xor
nop
add
je
sub
dec
xchg
cmp
xchg
imul
pushl
inc
push
xchg
test
cltd
or
aas
mov
pushf
int3
sub
mov
stc
mov
cmpsl
dec
inc
pop
jl
sub
xlat
out
je
xor
inc
jecxz
aaa
cmp
xchg
adc
dec
cld
mov
fists
nop
adc
mov
xor
iret
clc
or
cmp
adc
rcr
sbb
clc
mov
push
repz
es
mov
jg
adc
pushf
cmp
inc
push
push
pop
and
fidivl
shr
enter
dec
fcompl
add
in
xchg
cld
out
lret
jbe
jmp
in
test
xor
adc
adc
add
cld
test
cld
incl
mov
std
lcall
pop
test
test
push
lock
clc
aaa
addl
lea
nop
pop
outsb
jecxz
push
mov
adcl
cmc
or
xchg
xchg
mov
test
pushl
mov
mov
sti
sub
pushf
stc
enter
xchg
andl
inc
mov
orb
push
out
mov
adcl
shlb
or
fsubrl
inc
popf
push
scas
dec
xor
fs
fisttpl
jg
adc
shlb
mov
jecxz
pop
loope
jbe
jecxz
pop
pop
ds
je
mov
jno
sub
stc
in
sbb
enter
movsb
aas
xchg
lods
mov
sub
mov
decb
repz
mov
ds
les
jle
xchg
xchg
pop
imul
dec
adc
push
pop
add
xchg
cmp
jg
popa
jmp
roll
je
fnstenv
inc
mov
lods
aam
movsl
test
cli
aas
es
sbb
lret
pop
hlt
or
cld
scas
mov
push
dec
fildl
inc
mov
cmc
insl
xchg
jb
mov
ret
push
cmp
outsl
mov
xor
pusha
mov
push
in
adcl
aam
inc
pop
sbb
pop
enter
mov
fildll
fcompl
or
sub
pop
std
sub
push
pop
rcrl
cli
fbld
adc
int3
or
rcll
dec
insb
jl
xchg
flds
pop
imul
jbe
mov
add
enter
or
add
data16
sub
xor
jecxz
xor
cmp
pop
inc
mov
je
in
push
andb
inc
lock
or
mov
out
xchg
add
unpckhps
mov
fstpt
inc
ja
shrb
bound
outsb
incl
mov
inc
test
push
push
mov
lea
out
pop
test
sub
pop
dec
mov
aam
and
jl
mov
shl
mov
jae
loopne
ret
xor
or
xchg
cmpb
jo
aam
loopne
xor
jp
mov
cmp
std
ret
push
fisubrs
insl
jno
jo
arpl
fistpll
aas
movsb
add
jge
aaa
les
pop
cs
sbb
sub
gs
sbb
sbb
clc
mov
adc
and
in
push
add
lret
icebp
xchg
push
inc
dec
out
in
mov
fwait
call
mov
add
mov
arpl
mov
mov
sti
or
pop
loopne
jle
pop
xchg
inc
pop
fisubs
pop
push
aaa
inc
sahf
sub
push
push
dec
lock
sbb
cmpsl
or
sub
dec
push
das
sub
mov
shrl
cmp
jmp
in
mov
pushf
pop
and
add
loope
arpl
adc
mov
sbb
mov
test
xlat
and
daa
lahf
std
lcall
jmp
in
ljmp
sub
pusha
inc
mov
mov
add
mov
shr
test
dec
sub
mov
movsb
aaa
inc
inc
push
into
adc
test
sarb
mov
jg
insb
fildl
es
xchg
pop
pop
dec
mov
cli
or
add
add
mov
lret
mov
jmp
ret
in
ret
pop
push
pop
or
das
test
shll
jbe
pushl
inc
push
or
outsl
aaa
cmp
sbb
in
xor
mov
pop
push
add
iret
xor
movsb
enter
add
mov
cltd
pop
dec
daa
aam
sti
incl
test
pop
jbe
inc
aas
inc
jo
out
hlt
imul
jbe
push
jo
scas
js
inc
cmc
scas
mov
inc
pop
sbb
pushf
gs
dec
into
cmp
mov
add
adc
std
jg
xor
mov
cmp
or
aas
enter
inc
mov
fmulp
jg
mov
test
mov
xor
mov
push
add
mov
mov
sarl
outsl
loopne
dec
cmp
jb
and
adc
out
loopne
lret
loopne
dec
in
mov
clc
adc
ret
or
xor
fisubrl
jl
cmp
adc
icebp
std
cld
cmp
enter
xchg
sti
push
popf
pusha
dec
test
mov
rclb
std
dec
mov
ret
sbbb
jno
or
sbb
sub
mov
incb
sub
je
pushf
jnp
daa
js
adc
or
jnp
push
push
fmuls
ret
popa
push
jns
pushf
push
imul
js
and
test
shrl
jnp
fs
jp
fistpl
mov
ds
rol
mov
rcrl
add
stos
jno
lahf
add
add
inc
cmp
mov
xchg
hlt
orb
mov
xchg
or
adc
sbb
push
fistl
mov
stos
call
in
xchg
inc
fdivr
dec
scas
add
mov
mov
mov
mov
sub
pop
imul
je
and
in
mov
jmp
loopne
xor
adc
mov
insb
jo
stos
or
xchg
mov
popa
add
jle
lods
clc
adc
clc
cli
sbb
fcmovb
incb
subb
add
add
xor
mov
mov
pop
jmp
clc
int3
pop
jb
and
mov
ja
mov
loopne
dec
in
test
mov
fcoms
add
or
xchg
jb
jbe
xchg
inc
add
mov
dec
pop
and
xor
xchg
cmpsb
mov
inc
mov
fsubrl
mov
push
hlt
mov
and
mov
pop
pop
sbb
mov
enter
test
das
mov
shll
fistps
sub
and
mov
enter
push
push
test
out
mov
push
in
lret
mov
or
ret
mov
push
ljmp
imul
pop
pop
jg
or
es
jmp
roll
inc
jne
cmpsb
nop
and
jmp
in
adc
out
jbe
xchg
push
inc
sbb
inc
add
into
aas
in
pop
pop
pop
mov
inc
rol
cmp
testl
daa
sbbb
and
sub
xchg
dec
and
mov
das
pop
aas
cmpsb
out
pusha
ret
or
outsl
fsubrl
ficoms
xchg
or
pop
stc
push
shlb
lods
icebp
jmp
xchg
push
in
jne
push
mov
and
paddusb
jne
loopne
scas
jecxz
inc
pop
inc
stos
dec
pop
fs
repz
or
push
push
sbb
mov
pop
ljmp
leave
cmp
jae
lock
rcrb
stc
in
std
sbbl
ljmp
jns
sbbb
inc
lods
aad
push
icebp
stc
sub
jns
mov
sbbb
rcrl
lea
mov
add
mov
test
pop
mov
test
ja
int3
sbb
mov
pop
mov
test
pop
mov
adc
inc
adc
lods
addl
shl
movsb
adc
sti
fcomip
jg
mov
mov
js
daa
sbb
test
insb
int
insl
popa
xor
or
es
xchg
je
pop
into
mov
add
add
mov
ficompl
test
and
adc
stos
push
movsl
jp
pop
mov
into
inc
mov
cltd
aam
fistpll
mov
pop
daa
add
and
jbe
cli
xchg
jbe
cmp
test
mov
mov
mov
lock
in
and
or
and
dec
or
mov
xchg
and
jp
sub
subb
xor
cmp
out
iret
cmpsl
inc
gs
xor
inc
mov
pop
mov
mov
or
mov
and
and
pusha
jle
lea
rcrb
repz
popa
out
pop
test
dec
xchg
fimuls
enter
add
push
fidivrl
xchg
rolb
int
shll
or
xchg
xchg
mov
call
lock
fisubl
aas
jmp
incl
inc
insb
sbb
adc
mov
sub
and
mov
mov
dec
pushl
mov
scas
inc
mov
pop
flds
jp
lea
scas
and
mov
add
mov
xchg
sbb
mov
or
mov
std
es
jo
je
adc
mov
sahf
icebp
or
add
inc
popf
lahf
jmp
sbb
mov
mov
shl
loope
or
jne
mov
lahf
cmp
xor
xor
mov
cmpsb
or
adc
cs
xchg
cmp
stos
jns
cld
inc
jle
fists
push
push
mov
mov
pushf
cmp
sub
dec
dec
dec
cmp
cmp
jl
mov
cmp
push
enter
std
adc
stos
jb
xchg
jno
leave
sub
push
or
and
gs
cmpsl
in
adc
jl
clc
movsl
aaa
pop
add
sbbb
testb
outsb
test
and
fcoms
outsl
scas
push
xchg
or
pop
inc
inc
arpl
leave
inc
or
test
mov
or
inc
gs
jae
stc
push
test
lds
mov
push
dec
or
iret
loopne,pt
cmp
xor
push
repnz
loopne
das
into
jo
jne
inc
fwait
outsl
fisttps
mov
jbe
aaa
or
dec
dec
ja
push
sub
jg
mov
sbb
push
pavgb
imul
or
ss
sbb
sub
push
pop
push
jbe
cs
in
push
or
stos
or
loope
cmpsb
clc
add
lea
stos
dec
mov
loopne
sbbb
add
pusha
or
sub
pop
imull
insl
add
addr16
out
push
loop
sbb
call
mov
mov
dec
push
adcl
inc
jg
jmp
inc
data16
jb
jmp
aaa
pop
in
cltd
mov
cmp
cmp
ljmp
mov
mov
mov
sub
add
das
mov
mov
pusha
push
inc
inc
pop
xchg
mov
or
mov
into
mov
insl
outsb
add
pop
mov
insb
lods
bound
jg
pop
cli
call
sub
jae
sub
cmpsl
cs
scas
psubq
cmp
cmp
mov
sbbl
add
loop
decl
push
cmpsl
fs
sbb
xlat
and
sti
fldlg2
sbb
add
cmp
jmp
divl
out
mov
mov
pop
ret
jne
test
xor
mulb
push
push
sbb
mov
loope
mov
test
fcmovnu
rolb
sti
push
shl
dec
fs
xlat
ljmp
das
cmp
rorb
mov
push
cmp
xchg
and
mov
mov
sbb
fsubrl
aad
les
mov
cmp
mov
scas
inc
loopne
jmp
sub
mov
insb
insl
mov
rcrl
lcall
sti
punpckhbw
stc
jg
inc
xor
add
dec
pop
js
ds
je
inc
enter
hlt
fildll
icebp
jb
fimuls
adc
xor
mov
fcomip
xor
lock
xchg
or
sub
adc
or
sti
and
lahf
xchg
in
or
push
outsb
adc
add
pop
lock
cmp
sbb
fcomps
scas
pop
inc
push
std
mov
hlt
cwtl
push
xlat
adc
inc
clc
or
icebp
xlat
sahf
lret
adc
adc
or
decl
cmp
clc
pop
pop
cmpsb
push
in
call
adc
ds
scas
dec
jb
ret
inc
xorl
jle
add
aas
inc
out
or
mov
mov
pop
sbb
imul
inc
test
mov
xchg
cli
push
add
in
xchg
xchg
pop
jmp
jmp
mov
or
cli
test
xchg
inc
out
bound
push
xchg
popa
xchg
inc
mov
stos
sub
mov
inc
aam
xor
aaa
jle
addr16
jb
jo
bound
scas
push
lods
fsub
jne
pop
jne
and
pop
call
lods
fs
inc
and
fwait
enter
insb
addr16
insl
shll
fildl
jl
adc
sbb
out
scas
loopne
mov
or
pop
les
test
scas
jg
push
pusha
rorl
jl
add
inc
mov
mov
pop
mov
imul
add
push
jnp
jb
cltd
adc
hlt
das
mov
push
fisubl
jge
and
fwait
add
or
sub
dec
jg
jne
cmp
jmp
inc
idivl
test
ficoms
in
into
dec
mov
scas
ljmp
je
inc
add
adc
aaa
cs
cld
lea
arpl
xchg
mov
pop
jp
ret
mov
ljmp
adc
ss
pop
bound
gs
sbb
sub
movsl
ja
pusha
jge
or
cmp
xor
test
lret
lret
ljmp
mov
fnop
outsl
add
pop
loopne
mov
icebp
lret
xchg
es
stos
sub
mov
sub
or
test
jmp
and
and
and
add
add
push
hlt
inc
mov
adc
and
mov
adc
mov
sub
inc
dec
dec
and
push
stos
mov
inc
add
sub
dec
adc
outsb
and
and
sub
imul
cmp
sub
add
pop
sbb
mov
inc
add
and
arpl
mov
fldl
and
jp
sub
fcmovu
aaa
out
jbe
mov
adc
push
add
and
imul
imul
adc
mov
mov
push
mov
add
lods
xchg
orl
lods
xor
aam
mov
inc
stos
fcmovnbe
pop
sti
and
inc
movsb
or
subb
inc
nop
dec
and
mov
add
and
imul
adcb
mov
pop
cmp
mov
sbb
repz
fiaddl
scas
and
out
scas
sub
test
test
test
pop
push
add
pop
dec
adc
test
and
sub
adc
and
insl
imul
outsl
adc
add
scas
fistpl
add
lret
push
imul
lcall
mov
sbbb
mov
imul
push
inc
mov
or
mov
lods
rcrb
sbb
and
insl
lods
loopne
and
iret
jp
nop
xor
arpl
aad
add
test
nop
push
mov
int
fwait
popa
nop
sbb
pop
inc
imul
or
inc
sub
pop
sbb
xchg
lahf
adc
adc
dec
push
lods
adc
adc
pushw
mov
rcrl
mov
mov
insl
int
jo
nop
js
lahf
jg
adc
arpl
xor
pop
push
dec
add
mov
pop
fistpl
inc
out
out
mov
add
imul
mov
sbb
bnd
out
sbbb
adc
and
scas
imul
dec
inc
pop
test
jo
roll
and
out
sub
fxch
ret
inc
pop
fcoms
dec
cmp
xlat
mov
inc
repz
jmp
mov
inc
in
sbb
sarl
icebp
sbb
add
lcall
nop
mov
mov
mov
inc
cmp
dec
add
sbb
mov
imul
imul
push
xorb
jl
pop
mov
jg
rolb
cmp
dec
cld
inc
cmp
out
xor
lods
adc
pop
sbb
imul
xor
mov
nop
lcall
push
push
xlat
rclb
sbb
imul
add
dec
xchg
push
xor
sub
xor
cmpsb
push
xchg
mov
test
inc
and
adc
sub
lcall
pop
testb
xchg
aaa
movsb
test
rorl
xor
test
push
push
sahf
adc
mov
and
arpl
imulb
push
xor
int3
arpl
adcb
inc
les
fstpl
sub
xor
xchg
lcall
mov
lods
aam
push
pop
inc
inc
mov
inc
push
inc
xor
shll
lods
jne
jecxz
test
or
or
andl
push
adc
xor
add
jg
fbld
push
addb
mov
add
xor
add
adc
mov
adcl
or
or
fstl
mov
jl
or
or
push
sub
dec
mov
add
call
or
jl
or
push
or
add
adcb
mov
sub
addl
adc
pusha
jb
sub
shlb
sub
sub
sbbb
mov
cmp
mov
push
mov
and
or
inc
mov
push
mov
adc
inc
or
xchg
mov
add
test
pushl
nop
or
test
adc
push
cwtl
orl
add
jno
inc
mov
pop
insl
sub
and
nop
inc
push
xor
mov
or
ljmp
adcl
or
filds
inc
nop
adc
fiaddl
push
mov
jp
xor
or
cmovb
rolb
int3
and
cmp
andb
push
adc
rolb
out
or
pop
fidivs
ljmp
addb
aad
in
mov
or
or
mov
add
push
dec
push
push
add
mov
inc
mov
jbe
add
pop
mov
outsb
mov
sub
jo
push
jg
adc
shlb
add
adc
lock
imul
dec
loop
fisttps
mov
cmpsb
cmp
add
or
test
sub
or
add
mov
loope
jnp
jno
inc
ret
inc
mov
dec
add
addl
push
sbb
mov
push
ljmp
and
fs
mov
in
orb
sub
fidivrs
add
comiss
nop
and
orl
outsl
mov
or
push
adc
add
jl
add
dec
inc
mov
pop
lods
add
and
lret
mov
inc
in
xchg
test
pop
pop
lsl
pusha
or
mov
insl
jmp
addl
ficompl
push
popa
add
xchg
popa
pop
jl
aam
pusha
insl
inc
ficoms
add
adc
push
mov
adc
inc
stos
mov
mov
mov
cmp
pop
repnz
mov
jp
push
jae
sub
loopne
test
jb
nop
xor
leave
aad
fwait
addl
out
mov
push
rorb
ret
lods
punpcklbw
inc
sub
inc
mov
adc
mov
xchg
push
dec
inc
inc
xor
dec
and
dec
push
push
add
insb
xchg
pop
ljmp
ja
mov
and
push
push
nop
push
call
inc
popa
push
cmp
add
rolb
outsl
roll
fs
or
mov
lods
mov
cs
push
xor
pop
int
xor
inc
push
test
ss
fstp
dec
dec
xlat
and
and
dec
fdivrp
cs
add
loope
xorl
adc
inc
mov
and
roll
and
das
mov
fildl
jl
adcb
pop
adc
imul
addb
inc
lret
lds
mov
mov
sti
add
xor
push
fcmovb
xchg
pusha
push
push
or
or
xor
rorb
or
mov
or
adc
or
pop
aam
sub
popf
jl
dec
or
ret
sar
add
popa
popa
mov
inc
mov
imul
loopne
cmpl
ss
inc
xchg
and
addb
and
rolb
dec
add
and
inc
add
mov
sub
test
pusha
sub
daa
push
cmp
mov
push
adc
adc
repz
sub
mov
mov
adc
sbb
adc
and
test
sub
inc
adcl
clc
or
and
push
cmp
daa
and
sub
loope
push
push
and
jp
test
insb
pop
add
sub
xor
and
adc
xor
adc
dec
push
or
addl
outsb
add
in
fisttpll
fisubrl
add
or
sub
xor
mov
mov
ret
adc
push
add
scas
xchg
sub
sbb
mov
push
sub
fsubs
add
inc
imul
xchg
shl
xchg
fidivl
and
add
gs
adc
mov
or
adc
or
xor
outsb
sbb
add
adc
adc
fldt
xor
push
out
push
call
add
insl
test
test
xchg
fiaddl
sub
and
and
icebp
or
mov
inc
xchg
imul
xor
push
int
out
and
pop
sub
push
cmp
or
dec
test
dec
xor
nop
dec
inc
in
mov
pop
loop
inc
add
andl
inc
mov
adc
xor
add
stos
and
dec
adc
push
sar
xchg
bound
mov
add
and
and
and
add
push
xor
and
push
sub
test
rorl
stos
hlt
test
pop
add
mov
mov
mov
mov
push
or
nop
dec
inc
cwtl
push
jns
mov
pop
rorb
outsb
and
lods
push
popf
mov
into
jne
enter
pop
cmpsb
inc
lods
mov
insl
sbb
inc
test
insl
inc
roll
fistpl
add
andb
lods
insl
int
xchg
hlt
fsts
push
inc
movsl
add
add
lods
add
adcl
imul
pop
sub
or
test
pop
jp
pop
nop
jae
fdivl
imul
jge
mov
pop
imul
push
jb
orb
fidivs
mov
lods
adc
pop
ficompl
mov
mov
inc
lods
add
int
fistpl
roll
dec
add
push
mov
lea
or
sub
pop
imul
adc
add
orb
rorb
lahf
or
rclb
xchg
add
inc
push
nop
push
or
push
pop
sub
mov
inc
dec
jl
lods
mov
inc
xchg
or
call
and
adc
mov
dec
inc
sbb
lods
adc
or
cwtl
sbb
dec
aaa
sub
cltd
mov
aaa
loop
ret
out
repnz
nop
jno
inc
out
pop
fimull
nop
inc
out
loopne
push
add
cmp
mov
sbb
dec
sbbb
sub
push
add
and
push
in
je
fstpl
loopne
inc
sbb
test
je
jbe
out
and
scas
nop
sahf
inc
outsb
pop
sub
imul
mov
cmp
fisttpl
mov
movsl
nop
sbb
stos
xor
push
push
inc
mov
sbb
add
push
jo
cwtl
jno
mov
pushf
imul
push
jmp
shrb
or
out
arpl
mov
push
jle
mov
push
into
rolb
cmp
xorl
inc
mov
add
test
mov
lea
jmp
je
or
push
add
ret
shlb
jae
or
pop
push
aad
or
mov
int3
pop
push
out
xlat
inc
scas
test
pop
nop
or
sub
and
imul
loopne
pop
xlat
pop
and
add
push
adc
push
test
or
int
lahf
push
mov
jbe
sbb
cltd
sbb
in
sbb
out
push
rcl
mov
inc
adc
or
inc
dec
mov
lcall
sub
mov
test
pop
xor
inc
xlat
pop
jmp
cmpsb
inc
mov
adc
xlat
cltd
ficoml
or
push
test
inc
fwait
jae
leave
add
popa
jle
adc
inc
xor
arpl
cmp
inc
cmpsb
cmpsb
out
arpl
pop
dec
add
pop
shll
jbe
pop
inc
add
push
js
lahf
mov
adc
hlt
add
lods
sbb
lods
test
sub
imul
in
inc
cltd
pop
shl
imull
dec
xor
mov
leave
mov
push
jno
lods
rorb
lahf
sbb
je
pop
mov
mov
and
lcall
push
sbb
cmp
in
mov
cltd
arpl
sub
sub
inc
sub
leave
adc
aad
push
scas
push
xor
jo
add
and
scas
and
push
push
inc
jg
and
pop
loopne
pop
cs
test
nop
mov
xor
sub
pop
ret
rcl
imul
mov
data16
xchg
lods
movsb
or
mov
mov
test
add
push
cmpl
imul
mov
and
lods
xchg
ret
xchg
test
lods
mov
add
mov
sbb
shrb
dec
lods
iret
push
cs
pop
adc
pop
adc
lods
push
shlb
fndisi(8087
inc
xor
mov
or
lea
je
dec
int
es
ret
out
insb
leave
push
inc
mov
push
pop
add
and
lods
adc
inc
adc
push
aam
sbb
add
push
xor
subl
dec
or
add
adc
xchg
adc
xchg
inc
push
dec
stos
inc
sub
pop
add
mov
imul
nop
cmp
rorl
push
sbb
and
xor
dec
mov
xor
lods
jnp
mov
rol
sbb
mov
iret
mov
mov
arpl
hlt
or
mov
data16
addb
and
push
xor
mov
in
aam
adc
cmp
jno
insb
lods
xor
adc
mov
xor
sub
inc
lock
lods
cltd
sbb
xor
int3
mov
testb
bound
and
jo
scas
sbb
and
xor
lds
shll
out
add
cmp
jb
pop
cmpsb
inc
pop
aam
rcl
or
push
or
ret
outsb
nop
adc
testb
jo
lcall
and
adc
mov
jg
push
popa
or
insb
jae
jle
cld
je
arpl
inc
dec
outsl
pop
insb
inc
jb
or
je
in
mov
sti
imul
jne
gs
adc
jb
mov
je
jb
adc
insl
jo
jb
mov
sti
popa
insl
gs
js
inc
and
cmp
pop
push
je
jb
jne
dec
outsb
outsw
inc
insb
outsl
bound
imulb
mov
arpl
outsl
jb
sub
popa
addr16
jne
mov
outsl
fs
dec
popa
outsb
fs
in
fs
jns
je
push
imul
testl
cmp
jns
in
jbe
in
inc
imul
push
jne
jns
add
mov
mov
dec
xchg
mov
xchg
popa
inc
ficomps
sti
mov
cmp
imul
roll
popa
jo
outsb
aaa
imul
jae
rsqrtps
je
hlt
jne
pop
or
mov
jns
dec
mov
out
arpl
jo
outsb
pop
pop
insb
sbb
sbb
divl
neg
imul
imul
idivl
fs
mov
ja
or
insl
jnp
in
in
dec
jo
dec
gs
dec
or
push
out
fistps
sub
sbb
lret
dec
loope
dec
mov
into
les
inc
mov
or
repz
bound
xlat
push
out
imul
test
or
jne
or
mov
add
adc
fdivl
data16
xor
test
xor
fs
cmpsl
flds
in
fldt
arpl
rcrl
mov
xchg
xor
or
jbe
cmp
add
inc
xor
dec
insl
xor
inc
outsl
js
push
mov
imul
popf
xor
sbb
out
push
lods
push
inc
cld
jg
jg
add
add
add
add
add
mov
add
inc
push
jmp
or
or
out
mov
faddl
add
pusha
push
add
outsl
pusha
addr16
pop
push
add
pop
jle
aam
js
rolb
sbb
aas
nop
jne
push
aam
je,pn
js
jnp
data16
pop
adc
nop
sub
or
cs
sub
xlat
cmp
push
clc
add
add
inc
js,pn
addr16
inc
daa
mov
es
fwait
add
add
shrb
dec
sahf
jl
mov
shld
or
rcrb
dec
rcrl
je
and
orb
lock
rcrb
xor
add
add
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
