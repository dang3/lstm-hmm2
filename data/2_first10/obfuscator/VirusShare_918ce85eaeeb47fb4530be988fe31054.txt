push
call
ret
ret
jl
dec
sbb
adc
mov
cmp
mov
divl
ret
fimull
inc
pop
sub
cmp
fisubrs
sub
in
add
sbb
and
and
lods
mov
rorb
stos
dec
add
xchg
push
mov
dec
mov
jbe
add
repnz
dec
jmp
ja
scas
or
jg
jl
out
push
sub
insl
fwait
ret
jmp
leave
add
mov
mov
lock
ret
cwtl
jns
jge
imul
sub
and
pop
andl
jecxz
in
xchg
mov
or
insl
sub
dec
push
mov
jno
push
jne
or
out
cmp
mull
adc
cmp
into
sbb
sbbl
test
cmp
pop
outsb
sti
imul
int
minps
insb
pushf
mov
fwait
insl
fwait
cmpsb
mov
sbb
or
and
pusha
jle
sub
mov
inc
andl
mov
pop
outsb
mov
jbe
mov
jge
cmp
lcall
or
leave
mov
jl
aas
pop
xchg
pop
jg
sbb
call
jo
sub
push
xor
sbb
in
mov
cmp
xchg
sbb
nop
xor
fwait
jmp
addr16
subl
shrb
pop
adc
hlt
add
ficoms
es
sti
sar
mov
lret
push
imul
sbb
and
mov
mov
pop
sbb
mov
push
jnp
jle
out
bound
imul
pop
iret
push
loopne
mov
je
mov
test
mov
xchg
sbbl
fs
mov
mov
out
dec
push
ja
mov
mov
mov
push
sahf
adc
nop
jno
outsl
push
sub
out
pushf
pop
dec
add
mov
je
and
lret
into
mov
into
add
sbb
xchg
inc
push
sub
dec
imul
and
mov
mov
idivl
loope
dec
sub
std
movsb
jmp
inc
or
mov
hlt
mov
shll
and
jge
push
cs
ret
lret
adc
add
mov
adc
push
movsl
data16
mov
push
xor
int
pop
push
fsubl
sbb
jne
jne
out
dec
jns
mov
mov
jae
loop
xor
dec
call
loope
cmp
enter
mov
sbb
push
clc
test
imul
dec
shlb
jno
push
cltd
fstpt
mov
daa
xor
push
mov
xor
in
inc
jb
arpl
pop
push
decl
xor
loope
std
movb
iret
aas
push
mov
mov
pop
sbb
pop
jnp
decl
pop
xor
ja
xor
sbb
adc
shlb
ficomps
iret
in
dec
push
popa
add
adc
and
dec
mov
push
out
jecxz
push
jmp
mov
inc
in
or
and
ds
sub
sub
dec
clc
lods
cwtl
pushf
sub
mov
xchg
call
stos
pop
xor
mov
rcrb
ja
mov
push
sti
dec
adc
jg
out
enter
or
loope
xor
inc
out
pushf
xchg
sbb
inc
in
test
daa
mov
push
les
stos
ret
lds
das
jmp
inc
pushf
xchg
pop
iret
push
scas
mov
xor
xor
les
or
das
sub
sub
xchg
cmpsl
pop
and
aas
push
icebp
sbb
idivl
mov
les
and
mov
mov
or
fwait
inc
loope
add
rclb
and
jmp
jp
or
cmpsl
mov
pop
sub
dec
shll
adc
ret
mov
adc
pop
pop
xchg
enter
mov
dec
cwtl
xchg
pop
mov
fidivrs
add
repnz
mov
adc
push
sub
iret
lret
les
shl
dec
push
dec
mov
pop
insb
lret
movl
push
jge
adc
sti
out
push
aas
mov
mov
je
ret
add
push
jb
sub
imulb
cmp
push
cs
sbbb
pop
or
scas
or
std
add
mov
add
jb
and
jne
mov
add
stos
aad
int
call
sub
fwait
adc
xlat
das
xor
shrl
dec
sub
mov
adc
jo
fwait
lods
mov
loopne
push
pop
aad
call
das
nop
rorl
aaa
in
xchg
fdivl
sub
and
sahf
pop
mov
cwtl
cmp
out
arpl
das
loop
push
and
jae
movsl
jnp
cmpsl
int
outsb
cmp
ret
test
cmpsb
push
dec
notl
inc
fcmovbe
lret
mov
clc
sub
faddl
dec
mov
das
xor
int
in
stos
sti
pop
mov
push
push
push
adc
loopne
in
pop
imul
pop
mov
and
jne
ss
jo
iret
add
sahf
add
icebp
sti
lea
lahf
stos
repz
jl
push
or
mov
xchg
and
push
inc
stc
imul
or
into
or
imul
js
loop
xor
and
add
out
add
aam
pop
lret
jecxz
arpl
jb
or
xchg
cmpsl
dec
lock
sub
les
cmpsl
and
mov
dec
add
daa
and
mov
gs
faddp
xchg
or
ficoms
addb
adc
cmp
lret
inc
dec
arpl
jg
jecxz
cmc
sbb
mov
and
jnp
stos
and
cmp
add
sbb
and
leave
flds
dec
popf
xchg
push
adc
inc
mov
mov
xchg
clc
add
mov
shll
mov
xor
adc
xor
addr16
aas
xor
or
stc
lret
mov
popa
mov
mov
sbb
and
mov
fmul
int3
xchg
add
sbb
jl,pt
dec
loope
and
les
cmpsb
mov
gs
jge
sbb
int3
xlat
stos
and
mov
push
sbb
xor
pop
ret
or
ljmp
ret
inc
lods
imul
inc
mov
xchg
sub
pop
int
aas
scas
call
stos
mov
xchg
xchg
cmp
imul
xor
push
adc
pop
out
dec
xchg
cwtl
or
push
pusha
aam
sbb
loope
inc
pop
fcompl
mov
idivb
adc
leave
nop
jno
pop
addr16
inc
push
call
repz
pushf
cmc
shll
mov
jb
dec
push
xchg
jno
mov
in
pop
nop
dec
dec
mov
or
ja
sub
dec
cmp
dec
pushf
add
out
in
addr16
mov
jbe
in
mov
sbbl
push
cmp
fsubrp
add
push
adc
out
pop
fsubrl
rorl
lock
test
clc
xor
aad
dec
push
jo
in
jo
dec
insl
mov
sub
mov
test
stos
nop
sbb
into
push
aam
jg
and
imul
pop
sub
negl
pop
cli
insl
mov
push
lahf
mov
dec
mov
scas
out
out
push
xchg
in
dec
es
cli
adc
fbstp
sbb
sbb
imul
dec
fwait
enter
loopne
mov
sahf
pop
decl
push
ljmp
adc
mulb
bnd
xchg
cwtl
sub
repnz
pop
ffreep
push
std
addr16
jae
push
xchg
add
mov
sahf
pusha
or
lea
movsl
lcall
and
jne
add
cmc
or
xchg
pop
testb
jg
lea
push
outsb
pop
cmp
inc
rcrb
adc
or
or
xchg
mov
or
dec
push
sbb
cli
mov
scas
mov
and
cs
cmpsl
jmp
addr16
xchg
lock
xchg
lgs
enter
rcrl
jg
and
clc
dec
sbb
or
xor
add
xor
lret
sub
sbb
xor
inc
cmp
sbb
fidivl
sbb
pop
mov
push
aam
add
push
adc
imull
insb
por
adc
push
mov
sub
mov
ret
into
rcrl
adc
push
adc
jmp
shrl
push
mov
cwtl
lret
enter
lret
adc
pop
std
mov
or
lea
je
mov
push
cmp
js
das
add
mov
push
add
js
mov
int
into
lahf
xorl
repz
rcll
es
imul
jge
inc
jnp
jp
fsubrl
cli
dec
in
out
mov
dec
xor
and
out
cmp
push
stos
rcl
comiss
pushf
insb
mov
mov
pop
cmp
mov
xor
mov
xchg
stos
push
jne
adc
push
push
bound
xchg
outsl
fsubl
and
sbb
subb
cmp
mov
mov
and
das
pop
fbstp
enter
and
xor
fdivs
in
mov
insl
inc
mov
pop
sub
cwtl
mov
xchg
ss
pop
in
jbe
cmp
mov
aaa
shld
cmpsb
stc
cmp
sar
xchg
or
out
fildll
sbb
inc
test
in
jae
inc
and
lods
add
inc
bound
andl
mov
std
dec
xchg
ret
mov
pop
jbe
ljmp
or
popa
movsb
fdiv
scas
lea
sbb
bound
inc
mov
insl
cmpsl
xchg
dec
ja
push
fs
aam
mov
push
cmpsl
inc
mov
imul
mov
iret
xlat
push
inc
out
adc
loopne
outsl
dec
and
out
jno
in
jp
or
xlat
int
out
add
cmp
mov
addr16
mov
orb
stc
dec
cmp
mov
adc
dec
lock
xchg
sbb
xchg
cmpsb
int3
and
cmp
mov
dec
mov
ljmp
fimuls
xor
pop
repnz
inc
imul
je
jmp
bound
mov
xchg
sysenter
nop
push
cld
pop
sbb
xchg
lret
clc
sti
mov
pop
insb
or
insl
xchg
sti
dec
cmpsb
clc
shll
fnstenv
sbb
jae
xor
and
cld
mov
into
iret
in
lods
mov
mov
xor
mov
mov
das
test
mov
sbbb
rcll
push
mov
cmp
sbb
iret
inc
ss
flds
push
inc
lret
and
or
adc
mov
ss
add
ret
xchg
insb
mov
sbb
mov
dec
cld
mov
sahf
nop
add
xor
std
sbb
lcall
scas
or
mov
iret
jns
divl
bound
out
test
fidivrl
add
movsl
das
adc
lock
push
loop
dec
mov
or
sbb
and
mov
mov
jmp
mov
bound
inc
pop
aas
pop
scas
iret
jne
jnp
jnp
mov
mov
mov
cmp
and
jecxz
pop
mov
push
jg
pusha
frstor
test
or
mov
icebp
test
insl
aam
popa
sub
and
imull
inc
push
push
add
subl
push
outsb
mov
sub
lcall
outsb
mov
xchg
or
mov
pop
and
jecxz
sbb
in
sti
jns
daa
mov
xor
popaw
lods
pop
xchg
ljmp
lds
mov
jo
xor
scas
dec
leave
inc
test
test
scas
inc
or
fldcw
add
sbb
xchg
and
sub
aam
fdivs
int3
xorb
rcl
cs
adc
cmp
in
jmp
add
mov
insb
fwait
insl
adc
or
mov
mov
mov
jbe
out
sub
lcall
pop
into
or
sar
sbb
imull
mov
add
into
mov
pop
daa
jne
push
push
sub
mov
sub
mov
dec
clc
sbb
xor
jnp
fidivrs
cld
sub
ret
out
xchg
jae
int3
out
pushf
fyl2x
mov
testb
stc
push
ret
rolb
fadds
push
inc
inc
xchg
pop
das
stos
enter
cmpsb
lahf
pop
pop
cs
push
rsqrtps
lea
mul
fdivrs
mov
push
inc
das
fdivs
mov
push
pop
mov
ret
and
addl
popf
ror
jge
hlt
ljmp
cmp
pop
mov
jno
or
and
adc
push
or
xchg
enter
push
cmc
fisubl
add
repz
sub
jle
icebp
ret
mov
jo
outsl
in
adc
pop
daa
xor
decl
sub
fwait
movsl
imull
and
xchg
mov
push
sbb
fisttpl
rol
imul
mov
stos
sub
lahf
pop
out
inc
cmp
mov
stos
jp
or
lret
xchg
cmpsl
movsb
jo
rorb
xor
lcall
cwtl
fcompl
mov
mov
xchg
shlb
lret
enter
mov
fimuls
sbb
push
ja
pushf
loopne
push
lods
lea
mov
or
leave
and
inc
cmp
lret
mov
inc
cmp
iret
push
andl
fsubs
inc
add
cmp
ja
add
cmc
and
int
push
pop
insl
or
jmp
xchg
mov
arpl
pop
pusha
pop
stc
or
mov
and
call
xchg
push
or
sbbb
sub
sbb
or
push
jge
orl
clc
xchg
inc
mov
outsb
sub
pusha
cs
mov
cmp
stos
loope
std
sub
loopne
cmp
inc
js
mov
xchg
fildll
cmp
insl
inc
fnstenv
fildl
addr16
les
test
pop
jl
mov
sub
push
mov
jp
mov
sub
cmp
mov
je
ds
pop
xor
mov
lret
mov
xor
lret
ret
mov
popa
popf
in
lods
in
lds
out
in
std
and
pop
mov
xor
sti
jnp
fnstsw
sbb
push
xchg
push
cmpsl
inc
inc
add
adc
jle
mov
jge
out
call
push
pop
nop
mov
or
xlat
out
add
test
dec
mov
jae
clc
lahf
sti
push
jmp
mov
sbb
lods
pop
xor
mov
jnp
push
rcll
or
sbb
testb
stos
test
xor
push
inc
xchg
inc
pop
out
mov
adc
lret
sub
orb
jle
scas
cmp
loope
jp
pushf
sub
lock
cmc
dec
movsb
mov
adc
mov
or
cmpsb
inc
negl
push
sub
cmp
adc
cmp
sub
movsl
mov
add
xor
pop
aad
jecxz
shrl
mov
xchg
mov
jnp
pop
mov
jo
cmp
adc
ret
inc
xor
out
mov
jo
cltd
jp
js
jo
add
out
imul
cwtl
stos
dec
sub
sbb
xchg
ljmp
mov
pop
data16
xor
lahf
mov
shll
ljmp
sahf
adc
mov
hlt
push
sbb
in
scas
push
ljmp
add
dec
imul
shlb
cwtl
das
leave
shll
add
repnz
lock
mov
mov
lods
inc
rorb
xchg
inc
or
jg
cmp
clc
lret
fcomps
add
xor
and
lea
mov
leave
dec
out
pop
lahf
cs
mov
push
or
mov
sub
and
es
stos
sahf
add
out
or
into
insl
and
add
enter
xchg
dec
adc
ja
dec
shrb
jp
jle
xchg
add
ret
xor
mov
or
mov
mov
mov
xor
push
fsubs
rcrl
mov
mov
sbb
inc
cmp
pusha
xchg
xchg
mov
fcoml
xchg
sbb
adc
push
mov
scas
pop
test
fcoms
dec
mov
inc
clc
xor
aaa
push
test
shlb
xor
popa
cmp
push
pop
movsl
adc
xor
xor
adc
adc
test
inc
repnz
rclb
fiadds
jp
sbb
mov
addr16
lcall
roll
cmc
movsb
ja
sub
pop
mov
add
mov
cmpsl
xchg
add
imul
adc
test
add
or
add
cwtl
mov
out
mov
xchg
inc
pop
out
cmp
mov
xor
inc
jl
dec
mov
mov
mov
mov
lret
sarl
dec
push
pop
fisttpl
mov
fidivrs
pusha
or
mov
pop
adc
mov
int3
lods
sub
pushf
movsl
and
adc
and
int
lds
adc
and
mov
mov
xchg
push
sub
mov
cmpsb
mov
shlb
icebp
ficompl
dec
xchg
dec
lcall
cs
movsb
ja
ja
cwtl
pop
jp
ret
xorl
out
jo
mov
scas
inc
cmp
mov
std
rorb
fnstenv
inc
fmulp
and
and
data16
dec
mov
jecxz
sbb
push
xchg
add
sbb
cmp
loopne
pop
lcall
xchg
negl
xlat
fcmovnb
and
iret
and
dec
es
movsb
mov
inc
bound
inc
ret
dec
adc
mov
mov
and
ja
fst
insb
mov
leave
in
in
stc
in
repz
ret
adc
cmp
sbb
outsb
sub
pop
xchg
ds
jns
inc
cmpsl
jmp
jae
in
xchg
pop
mov
xchg
fbld
fnstsw
add
and
cmpsl
sub
das
or
icebp
mov
jne
cmp
ds
jmp
sub
mov
pop
jecxz
sahf
lock
add
icebp
add
mov
arpl
mov
push
add
and
mov
lret
jno
xor
sbb
sub
xchg
push
gs
insl
movsb
std
inc
jmp
xchg
pop
push
gs
jmp
ficoms
data16
jbe
pop
ja
sbb
xchg
cli
lret
xor
clc
shll
fimuls
cmp
mov
subb
cld
shr
or
out
jnp
inc
and
leave
movsl
or
aas
cwtl
mov
mov
jge
les
scas
loop
lret
jae
mov
dec
fwait
lret
push
cmpsl
cmp
aas
shrl
xor
push
das
popl
push
push
ds
outsb
push
gs
mov
jbe
mov
push
fcoms
pop
xchg
and
pop
leave
aad
mov
jbe
mov
jo
popa
sub
pop
mov
add
stc
inc
mov
test
sarb
jnp
and
pop
inc
fdivr
cmp
imul
sahf
sub
mov
cwtl
mov
push
push
sahf
fcmovnbe
ret
sub
outsb
inc
or
cmc
and
ljmp
scas
pop
loopne
adc
mov
xor
int
mov
pop
or
out
xor
mov
ja
fldcw
mov
mov
in
adc
rcrb
cmpsb
dec
add
in
pop
sbb
movsb
cmp
sbb
mov
or
xchg
mov
pop
xchg
inc
pop
call
in
mov
inc
imul
je
enter
push
inc
mov
push
dec
fcmovb
add
rorb
pop
mov
in
enter
jle
rol
scas
ss
not
in
js
push
jecxz
ret
loop
repnz
cli
mov
jge
sbb
jne
or
shlb
aas
outsb
mov
mov
aam
outsb
inc
nop
shr
mov
pushf
sbb
inc
dec
inc
push
or
repz
mov
enter
cmp
les
cmp
jno
pop
push
mov
lods
xor
lods
subl
lods
dec
cmp
add
test
pop
add
icebp
mov
inc
mov
nop
jp
push
pop
gs
cmc
or
pop
pop
sbb
xchg
xchg
mov
dec
jmp
test
jl,pn
push
dec
lret
and
cli
in
dec
fldcw
les
fmul
pop
outsl
cvtps2pi
jb
cmp
ret
out
cld
jbe
cmp
push
mov
test
addb
jns
pushf
pop
ficoml
push
int3
jl
or
adc
xchg
lahf
lods
loopne
and
mov
xchg
jne
adc
loopne
ret
mov
fistpl
fwait
pop
icebp
xchg
mov
xchg
mov
cmpsl
movsb
and
iret
inc
jnp
sub
lods
pop
leave
data16
sub
in
and
lods
cmp
movzwl
lcall
xchg
lea
cmp
cltd
adc
xor
lods
adc
pop
dec
add
dec
test
enter
mov
stos
cmp
inc
xchg
pop
lret
adc
ja
aad
mov
call
dec
push
mov
popa
adc
pop
enter
inc
sbb
test
xor
adc
cld
dec
sub
out
mov
mov
inc
lcall
mov
dec
dec
in
iret
dec
and
loop
std
jle
pop
in
scas
adc
iret
mov
pop
jno
or
sbb
jg
jo
ret
xchg
dec
ret
movsb
mov
cmc
shl
pop
add
arpl
fnsave
rolb
and
std
xchg
jne
pop
cli
push
mov
push
data16
clc
andl
xchg
mov
iret
adc
shll
push
test
subb
and
js
cmp
jge
mov
dec
dec
sub
std
mov
fwait
xchg
push
push
pop
jns
jp
mov
push
aaa
mov
sbb
sub
or
scas
mov
inc
cwtl
dec
or
rcll
adc
stc
jno
mov
sti
scas
mov
out
pusha
mov
dec
testl
pop
or
sub
gs
add
mov
repnz
subl
or
pop
rcrl
mov
push
lock
out
les
adc
scas
push
jecxz
pop
int
sbb
inc
enter
cmpsl
les
ds
ljmp
mov
enter
adc
mov
or
mov
or
das
jae
xchg
lock
fnstenv
push
push
add
cmp
push
std
std
jle
sarb
repnz
lds
push
sub
in
xor
cwtl
cwtl
push
mov
arpl
leave
xlat
cmpsb
mov
sbb
cmove
roll
aam
rolb
push
std
enter
imul
out
int3
push
ret
nop
pushf
nop
xabort
or
test
mov
push
jnp
aas
inc
push
mov
enter
xorl
pop
lea
mull
mov
stos
dec
mov
rorb
jae
out
mov
test
push
cmp
out
nop
sahf
adc
in
and
lcall
gs
mov
jne
stos
loopne
imul
or
push
cvttps2pi
lcall
ja
xor
xor
xchg
jnp
adc
mov
sbb
popa
sbb
pushl
jmp
je
insl
dec
mov
dec
out
pop
popf
adc
movsb
sub
jne
inc
inc
mov
clc
fbstp
lret
sub
pop
jecxz
and
shl
mov
in
loope
sub
push
dec
mov
jns
or
pop
add
stos
dec
fsubs
pushf
jae
xor
and
stos
sub
imul
xor
adc
scas
outsb
push
es
aam
call
xor
outsb
fdivp
test
into
mov
negb
sbb
xchg
rol
sahf
sar
sarl
dec
test
mov
movsb
push
xchg
insl
and
jl
and
and
sub
cmp
pop
inc
stc
cmp
sbb
js
dec
shrl
xchg
movsb
mov
push
bound
call
pop
sub
test
push
pushf
add
push
es
jb
fimuls
xor
xor
jb
insl
jnp
sbb
and
push
push
out
mov
pop
in
fists
std
jmp
cld
lea
dec
xchg
pop
test
xchg
xor
in
aas
and
es
mov
or
insl
aam
gs
cmp
dec
sbb
nop
clc
imul
loopne
jnp
dec
pmuludq
dec
mov
mov
adc
pop
je
mov
ret
outsb
mov
push
pusha
and
jns
adc
aam
mov
add
imul
sub
cwtl
das
insb
pop
test
push
lret
sub
or
push
andb
data16
js
stos
test
aas
jo
inc
push
cmp
sbb
cmp
push
or
lcall
in
cld
fimull
jmp
push
jmp
push
add
divl
dec
ret
jmp
add
and
call
push
fiaddl
mov
pop
fcomp
mov
pushf
fcom
fnstsw
pop
pop
jne
insl
inc
inc
sti
loope
stos
xchg
jo
jle
stos
cltd
or
lods
xchg
jg
data16
and
int3
rorb
push
mov
das
cmove
mov
inc
cmpsb
rorb
test
test
sub
cmpsl
cmp
and
mov
pop
mov
mov
outsl
push
mov
sbb
dec
and
mov
stc
cmp
jmp
mov
mov
sub
in
pop
mov
leave
add
and
adc
repz
xchg
xchg
lcall
dec
ljmp
mov
sbb
fistpll
mov
cwtl
negb
pop
stc
cmp
and
push
mov
loop
jae
std
sti
cmp
inc
sbb
cli
mov
sbb
mov
xchg
std
cmpsl
clc
mov
inc
lock
sbb
jb
add
std
xor
cs
ret
in
movsb
or
mov
jae
ficompl
pop
bound
jg
das
ret
sbb
nop
sub
stc
shl
mov
jp
pop
push
jle
icebp
ljmp
insb
enter
jne
sub
aaa
mov
inc
push
out
push
adc
mov
add
and
lock
inc
push
cmp
mov
xor
js
push
gs
push
in
xor
insb
inc
lret
mov
testl
jmp
or
pop
inc
test
mov
shrb
push
mov
incl
dec
mov
mov
iret
dec
add
push
lea
loopne
xchg
imul
ljmp
pop
mov
enter
dec
sbb
fs
cmp
rcll
mov
adc
jecxz
cmpsb
xorb
jg
adc
ljmp
notl
sub
sti
rcll
jg
addr16
and
fwait
aam
pop
jae
push
mov
cmp
arpl
shll
sbb
cmp
stos
dec
and
sbb
or
push
mov
pusha
mov
fwait
lcall
repz
test
pusha
rcr
inc
cmp
mov
jb
add
mov
int
and
jnp
bound
xor
sarb
leave
out
imul
add
pushf
pushf
int
lds
add
xor
sbb
sbb
lods
mov
insl
fcmovnu
test
aas
mov
fxch
popa
popa
loop
xor
dec
sbb
pop
inc
in
jnp
pushf
ja
out
stos
or
xchg
idiv
bound
fmuls
jb
pop
cs
std
push
cmc
popa
dec
inc
test
test
inc
jmp
div
pop
insb
sahf
adc
sti
cmp
fucomi
xlat
push
cmp
push
mov
pmaxsw
loope
stos
imul
cmpsl
mov
dec
loope
sbb
adc
out
jge
pop
divb
pop
dec
ljmp
arpl
and
ret
pop
ja
adc
loopne
xor
or
add
mov
stos
out
mov
test
std
or
test
jg
lret
fwait
mov
add
ss
mov
fsubl
jb
dec
js
cmp
addr16
into
hlt
inc
call
fnsave
cmp
in
shl
ret
popf
jne
jno
adc
ret
fld
xor
push
push
pop
add
xchg
inc
mov
inc
jbe
pop
and
mov
clc
sub
jne
sub
mov
daa
mov
mov
frstor
or
lret
xor
pop
jge
add
jle
or
cwtl
xchg
adc
into
cwtl
dec
or
adc
repz
xchg
or
adcb
jns
int
lcall
out
or
loopne
xchg
ja,pn
imul
negb
das
xchg
inc
pusha
or
inc
xchg
add
loop
arpl
je
jl
les
dec
imul
jg
push
inc
cmp
hlt
mov
insb
mov
cli
xorl
dec
add
fxch
xor
cmp
mov
push
xchg
mov
mov
or
cmp
in
mov
out
scas
xor
mov
out
xlat
mov
xchg
inc
adcb
in
cmc
push
daa
sbb
sub
fwait
xor
cmp
mov
cltd
push
add
in
mov
xchg
sahf
nop
out
dec
icebp
mov
push
mov
cltd
push
outsl
push
aam
and
icebp
outsb
ja
test
xlat
jb
inc
mov
sbb
add
inc
dec
imull
cmp
pop
dec
enter
or
iret
arpl
sbb
xor
dec
sub
adc
xchg
in
mov
stos
mov
bound
jp
push
movsl
int
mov
push
ficoms
out
jne
ret
jle
fisttps
aaa
xchg
push
dec
xchg
push
cmpb
push
inc
sbb
inc
call
mov
clc
cmp
xor
push
push
in
cmp
mov
cmpsl
push
jmp
sub
fmull
jp
and
cmp
sbb
scas
stc
add
lret
ror
iret
and
jbe
sbb
adc
adc
jecxz
test
imul
shlb
ja
test
xchg
dec
mov
das
loopne
cwtl
dec
sub
or
cmpsb
push
cwtl
stos
out
sahf
scas
cmpsb
fsubl
sahf
out
scas
mov
xchg
mov
inc
fnstenv
lahf
int
add
cltd
push
jmp
leave
inc
sub
pushf
and
add
push
xchg
leave
mov
hlt
sti
or
addr16
pop
or
jno
push
push
or
js
mov
jge
cmp
dec
je
pop
jecxz
orb
mov
cmp
jno
push
mov
aad
movsb
ficompl
outsb
fidivrs
xor
mov
or
fs
and
popf
int
and
ds
and
outsl
inc
pusha
aam
xchg
pop
ret
push
pop
sub
mov
in
js
push
stc
jo
sbb
adc
dec
ret
out
out
push
pop
cmc
inc
push
je
ret
sbb
xor
fwait
ljmp
sbb
jmp
fldt
adc
ror
push
aaa
popa
push
and
and
mull
pop
lret
mov
sub
cwtl
jns
sbb
and
icebp
ds
jecxz
pop
pop
std
push
adc
mov
dec
jbe
insl
cmp
sbb
adc
push
into
rol
aas
jl
inc
jbe
cmpsb
stos
sbb
inc
movsl
movsl
fisttps
in
cmc
das
inc
dec
lret
mov
stos
enter
sub
push
jecxz
rcl
or
ljmp
dec
in
lret
popa
lahf
dec
add
xchg
in
fistpll
push
pushf
dec
mov
sarl
lds
mov
jmp
jb
and
les
adc
mov
lcall
rcll
inc
outsb
movsl
push
mov
cld
mov
lock
add
pop
push
mov
mov
pusha
and
pop
in
loopne
and
and
mov
imul
test
imul
cmp
pop
loop
addr16
fdivl
jne
fisttpl
loope
pushw
xchg
add
sbb
insb
pop
ret
cmp
icebp
lds
fcoms
lret
jbe
int
dec
push
aad
adc
les
xor
outsb
stos
sbb
loope
adc
adc
sub
repz
xor
mov
inc
idivb
jae
data16
mov
or
ss
jo
and
pop
cmpb
arpl
cmpb
lods
repz
ret
test
loopne
push
xor
fsubrs
enter
add
cmc
scas
xor
mov
dec
or
lods
ljmp
bswap
add
mov
ds
xchg
lcall
adc
add
mov
cwtl
lods
rcrl
loop
es
sbb
xchg
sub
dec
call
jecxz
ret
dec
in
pop
aaa
loope
mov
xchg
outsb
jg
sti
inc
rcl
and
mov
pop
shrd
push
rolb
loopne
add
and
cmp
fistl
cmp
inc
push
sbb
cltd
dec
outsl
test
dec
out
sbb
scas
movsb
lret
mov
rolb
mov
jle
sub
inc
xchg
add
mov
movsl
dec
call
arpl
in
push
out
sub
jle
bound
out
ds
mov
pop
daa
inc
imul
sahf
inc
mov
mov
enter
and
cs
xchg
popa
lahf
sub
mov
sbb
cmp
ss
cmc
add
push
and
mov
lret
mov
pop
adc
insl
jo
or
sub
ret
adcl
test
cmp
push
sahf
das
lock
and
jns
out
lcall
jbe
sahf
int3
mov
add
cli
hlt
fstpt
aad
cmp
mov
xchg
xor
mov
jp
rolb
ret
lret
mov
or
std
enter
imul
insl
jl
adcl
adc
jo
mov
sub
in
sub
cmp
inc
aaa
mov
push
insl
push
sahf
test
imul
ljmp
daa
or
push
mov
aaa
adc
movsb
in
and
lret
mov
lock
cmp
cmp
xor
jb
lahf
popa
jb
mov
outsl
pop
add
inc
add
jmp
sbb
dec
jns
ud0
aas
test
and
lods
stc
fcoms
rclb
test
sbb
add
dec
test
push
push
std
test
mov
jno
paddusw
subb
sub
sbb
mov
jle
add
test
sbb
xor
jbe,pn
pop
xchg
mov
xor
lret
imull
jne
cmp
cmpsl
cmp
and
xchg
pop
adc
push
pop
repz
and
mov
pop
adc
ljmp
fldcw
into
add
xor
icebp
or
sub
pop
scas
cmpsb
loopne
cli
adc
arpl
jb
inc
pop
lods
movsb
xor
mov
inc
icebp
nop
pop
add
xor
ffreep
mov
pop
jae
add
fwait
imul
jo
jbe
lcall
fistps
dec
fwait
cmp
cmp
cmpsb
dec
push
insb
sti
xchg
stos
scas
add
mov
xor
sarl
outsl
mov
pop
and
popf
jne
icebp
aad
in
pop
mov
movsb
mov
push
mov
or
scas
xor
mov
jg
xor
add
scas
mov
push
fmuls
pop
mov
addr16
dec
cmp
sbb
jb
rorb
jo
cmp
iret
cmc
out
sarb
into
out
lods
sarl
or
int3
int3
inc
std
or
pop
and
adcb
mov
sahf
xchg
sub
pop
or
fsub
dec
das
std
mov
mov
cmp
sti
push
inc
dec
fld
cmpb
mull
in
inc
inc
xor
shl
cltd
inc
popa
and
bound
mov
xor
int3
xchg
xor
popf
xchg
sbb
push
stos
setns
mov
xchg
adc
test
jmp
test
cmpl
sbb
test
pop
cmp
pusha
std
int3
sub
mov
cmova
mov
jb
jg
jg
lret
hlt
insb
lahf
out
add
push
int
fldt
push
icebp
hlt
sarl
fdivrs
call
mov
clc
jo
rolb
sbb
rol
cmp
outsb
pop
push
std
inc
or
lcall
loope
inc
addb
jno
mov
xchg
stos
push
cli
clc
jnp
jmp
sub
cmp
sti
mov
and
scas
mov
add
aaa
push
pop
outsl
sbb
cmpsb
lret
mov
fisttpl
mov
mov
and
repz
jae
cli
filds
stos
negl
pop
inc
xchg
pop
pusha
aad
mov
dec
dec
or
sub
daa
sub
dec
or
and
or
pop
push
adc
xor
clc
mov
adc
popa
aas
sbb
cld
or
outsb
cmpsl
mov
adc
fidivs
mov
mov
dec
push
dec
mov
jns
ss
out
xor
cmp
pop
cld
dec
sarl
or
push
loop
cmp
mov
jbe
mov
inc
lcall
add
xchg
adc
mov
mov
punpckldq
dec
orb
cmp
int
lods
mov
sub
xchg
pop
fildl
out
mov
pushf
pop
out
pop
out
add
and
daa
xor
int
outsl
push
mov
std
js
fstl
mov
sbb
mov
leave
scas
cmp
cmp
ss
push
adc
icebp
imul
movsb
cmpsl
les
adc
cs
push
or
jmp
push
and
lcall
lret
scas
or
stos
cld
outsb
push
sahf
mov
sbb
push
pop
lock
pop
or
sbb
cmp
int3
in
push
pop
imul
outsb
inc
lret
imul
aam
sbb
aad
mov
push
aad
bound
fdivrl
xor
lcall
adc
mov
pop
lods
cmp
and
pop
push
add
sub
js
push
aas
cmp
popa
daa
dec
shr
mov
gs
mov
jo
pop
mov
mov
outsb
test
mov
sub
test
jns
cmpsl
lcall
fldcw
repnz
out
add
or
mov
aaa
shll
fmull
sub
cmp
orb
dec
popf
hlt
inc
mov
add
in
and
jg
mov
leave
inc
je
add
jnp
mov
sub
adc
loopne
scas
sahf
xchg
push
ret
inc
or
nop
jg
shl
cwtl
enter
cs
idiv
add
loopne
mov
mov
jne
inc
xchg
jl
fcompl
test
mov
sbb
cmp
push
dec
jae
cmp
cmp
mov
push
pop
xchg
imul
add
mov
and
add
add
and
loope
fcoms
xorb
repz
fsubrl
outsl
sub
lods
shl
inc
push
aad
sbb
or
adc
xchg
ficompl
or
adc
mov
and
add
lcall
xor
pop
or
sub
or
and
outsl
push
adc
push
aam
ret
pop
jecxz
std
pop
cmp
dec
sarl
popa
inc
aas
dec
fcomi
push
add
outsb
push
jo
add
pushf
fstpt
xchg
test
pop
inc
pop
inc
jmp
xchg
arpl
jle
roll
push
push
mov
sahf
jno
xor
mov
arpl
add
jmp
jb
sti
mov
mov
loop
jecxz
push
pop
insl
jne
aas
pop
lods
in
inc
mov
stos
test
jmp
jmp
adc
jge
xchg
jnp
jne
xor
pop
popf
mov
das
jnp
mov
xor
adc
fmuls
mov
data16
mov
add
imul
frstor
lahf
lret
sar
xor
dec
jmp
and
rcrl
pop
dec
shl
lahf
fs
and
scas
push
add
add
ja
push
inc
ret
out
shll
enter
adc
mov
or
mov
inc
adc
adc
mov
ret
xor
popl
int3
xchg
push
cs
mov
sub
jl
stos
in
adc
and
mov
jns
rclb
mov
dec
push
out
icebp
push
xlat
movsb
push
cmp
lds
push
js
mov
inc
rcr
or
and
ljmp
mov
in
arpl
xor
push
and
hlt
sbb
sub
adcl
hlt
add
je
add
sub
call
dec
fidivs
call
rol
fidivs
xchg
mov
mov
lods
stc
cmp
flds
xor
xor
add
or
cld
repnz
inc
mov
rcl
dec
cmp
outsl
xchg
pop
inc
incl
push
scas
fidivl
push
adc
mov
rclb
inc
cmpsl
ror
sbb
cld
ret
insb
cmpl
imul
mov
test
pushw
test
stos
ljmp
ja
xchg
fiaddl
mov
mov
jecxz
ja
lret
out
inc
or
adc
cmpsb
stos
sbb
adc
or
incl
sub
lods
mov
jp
cmpsb
fcmovb
adc
sbb
cli
int3
push
cmp
pop
or
lea
xor
sbb
push
sarb
adc
adc
xor
dec
in
xchg
jo
xor
pop
les
ret
inc
xchg
repnz
subl
mov
pop
jle
mov
stc
sbb
jmp
xchg
cwtl
cltd
or
ret
and
jl
fwait
sub
inc
and
test
inc
inc
mov
jns
cmp
xchg
js
push
push
in
into
lods
aaa
ret
inc
mov
ret
mov
cmp
pop
dec
xchg
subl
stos
mov
and
push
subb
lock
arpl
popf
cmp
sbb
mov
xor
cmp
lock
mov
call
or
sub
jecxz
add
divl
into
xchg
jp
test
sub
out
stos
add
and
jmp
mov
mov
ss
or
jmp
mov
adc
sbb
sub
popf
add
jo
xor
sbb
jns
jmp
in
loop
mov
dec
dec
adc
js
adc
lret
leave
dec
add
aas
lods
mov
pop
rcrl
aam
enter
jl
and
cmp
adc
pop
jne
cmpsb
inc
shrb
test
add
in
mov
adc
outsl
add
clc
rorl
pop
sub
push
xor
dec
ss
icebp
jae
push
mov
pop
adc
xchg
mov
iret
xor
cmc
or
movsb
dec
adc
sbb
xchg
xor
cmp
scas
jns
mov
xor
jmp
sub
add
lds
test
into
out
test
cmc
fdivl
or
mov
pusha
test
mov
and
or
lods
mov
jns
repz
sub
imull
dec
and
ds
dec
and
leave
int3
cmp
mov
jp
lods
pop
movsl
cmc
das
cli
inc
adc
pop
idivl
xchg
inc
ret
jmp
mov
in
pop
rcl
shrb
and
mov
icebp
pop
inc
in
xchg
rclb
mul
pop
pop
dec
repz
repnz
inc
stos
and
daa
scas
push
sub
sarb
xlat
add
inc
push
mov
mov
or
mov
jecxz
push
pushf
out
mov
push
xchg
insl
pop
inc
daa
pop
mov
in
push
or
or
and
xlat
xchg
jle
mov
ret
test
sahf
int3
stc
leave
mov
arpl
fcoms
dec
inc
xchg
out
test
fwait
inc
inc
xchg
add
adc
sub
mov
or
jmp
cmp
int
das
jbe
aad
jge
arpl
ljmp
add
aad
adc
loop
cmpsb
add
sbb
and
push
xor
pushf
imul
ffreep
and
or
mov
mov
sbb
or
jae
add
int3
xor
mov
jno
stos
adcl
sbb
lret
sbb
icebp
test
pop
aas
cwtl
outsl
push
out
push
pop
jecxz
push
push
dec
jl
jns
lock
pop
pusha
sahf
cwtl
ficoml
push
sbb
mov
push
cwtl
xchg
ss
and
mov
pop
subl
inc
call
jnp
aad
out
arpl
mov
mov
or
sbbb
lods
divl
in
mov
xchg
jno
mov
sahf
sbb
mov
bound
mov
imul
xchg
fcomps
sbb
pushf
idiv
xchg
pushf
and
jg
jmp
xchg
test
ja
jno
mov
add
xchg
das
add
dec
aad
ret
sarl
fdivl
out
pop
add
xchg
cmp
sub
in
std
repz
sbb
inc
mov
cmp
ljmp
xor
fdivl
pushf
ret
adc
movsb
sarl
add
icebp
adc
movl
jb
jno
lds
add
adc
lds
adc
mov
adc
mov
adc
and
or
dec
adc
sbb
push
lcall
inc
push
fistpll
pop
aad
pop
inc
insl
pop
add
inc
jecxz
adc
shlb
mov
mov
adc
inc
stos
mov
or
sbb
xor
ret
mov
mov
mov
pop
mov
xchg
cmp
pop
out
or
incl
inc
testb
cwtl
push
mov
outsb
push
imul
adc
push
xchg
ds
sbb
mov
xchg
lods
ja
sbb
imul
inc
das
inc
lret
adc
sub
mov
inc
sub
sub
jecxz
pop
or
sarl
push
cli
test
dec
mov
inc
lods
addr16
les
mov
sub
adc
repz
enter
push
xor
vpcomuw
ljmp
lcall
pushf
int3
inc
xchg
or
dec
mov
or
ds
or
aas
mov
rcr
jecxz
jge
add
loopne
add
mov
pop
js
adc
popf
mov
push
imul
add
xchg
cltd
outsb
nop
pop
pop
dec
inc
inc
imul
aaa
mov
fwait
movsl
addr16
jnp
cmpsb
sbb
lods
jp
xchg
adcb
jbe
cmp
loopne
mov
mov
dec
or
mov
jns
daa
subl
mov
jne
js
mov
scas
mov
and
nop
mov
insl
pusha
pop
adc
std
mov
scas
xor
mov
das
ret
inc
paddsw
bnd
sbb
dec
fistpll
and
lahf
xor
pop
repz
or
test
cmp
mov
xchg
movsb
test
cli
lcall
daa
lret
jg
fstp
jp
or
jbe
push
outsb
scas
xchg
cmpsb
pushf
xchg
pop
int
mov
notb
inc
loopne
repnz
cmp
shll
jns
loop
jb
xorl
fdivr
fstl
sbb
or
or
bswap
jbe
add
rorb
cmpsl
ljmp
rorb
adcl
inc
int3
jne
pushf
add
pop
or
sarl
mov
popf
xor
mov
pop
jl
mov
mov
dec
add
jo
negb
fcmovu
inc
push
xor
rol
pop
cmpb
fsubs
jmp
cmovo
pop
movsl
sub
fistl
push
cmp
cs
sbb
andb
pop
cmp
jno
sub
cli
movsl
jne
mov
leave
or
loope
add
mov
mov
lea
xchg
or
stos
dec
push
adc
lds
sar
add
ret
mov
popf
add
mov
sbb
xchg
and
fistps
lret
inc
loopne
je
sar
clc
lret
mov
or
loope
mov
cwtl
jb
and
in
add
cmpsl
jb
insb
sti
cmp
or
pop
loopne
popa
out
lock
pop
sub
push
cmpb
imul
xchg
push
arpl
xor
test
lods
pop
cmp
jecxz
sbb
add
enter
mov
push
insl
cmp
sahf
pop
sbb
stos
dec
xlat
cmp
insb
add
mov
mov
cmc
stos
adc
dec
mov
icebp
test
cltd
push
stc
mov
insl
sub
inc
sub
out
cmp
pop
cmc
and
jg
movsb
cmpsl
mov
sti
adc
lods
out
mov
or
pop
dec
jns
jl
insb
sbb
xchg
xchg
jmp
loop
push
inc
dec
cmp
push
inc
mov
push
sub
sbb
mov
cmp
popa
out
test
adc
add
cmp
aaa
outsb
xchg
ror
jge
cltd
test
jns
aam
aas
cmp
xchg
lods
or
hlt
push
int3
cmpsb
std
xor
in
insl
push
loope
popa
mov
add
repnz
lock
icebp
aaa
push
jns
mov
adc
bound
pop
xor
sbb
lock
mov
or
nop
test
mull
lods
add
adc
sub
arpl
daa
aad
imul
add
je
imul
jp
fucomp
xchg
pushf
add
cwtl
stos
faddl
pop
fstl
cmp
push
and
or
sar
sbb
xchg
cmc
or
mov
shl
repz
mov
hlt
lds
ret
aaa
dec
dec
mov
popf
shlb
test
pop
mov
sti
test
orl
xchg
paddusw
xorl
dec
xor
cld
or
mov
push
and
mov
inc
shl
idivl
fsubrl
iret
cld
repnz
fstpt
xchg
cmp
add
cwtl
pop
mov
dec
stos
ret
arpl
and
adc
xorb
cmp
sbb
pop
adc
jge
fcmovbe
push
push
xchg
sbb
xchg
push
sbb
lret
push
adc
mov
in
test
data16
ja
push
mov
adc
xchg
data16
popa
dec
in
and
test
outsl
push
or
shlb
xor
jb
pop
fildl
das
sbb
dec
cmpb
ss
jp
and
dec
sbb
popa
jb
jne
fsubs
out
inc
ret
fsubl
lret
jb
mov
add
xchg
adc
jno
sub
out
mov
mov
inc
stos
inc
cmpsb
hlt
ds
and
outsb
sub
fcoml
mov
or
inc
in
inc
repnz
sbb
jecxz
out
add
jo
aad
push
stos
cmp
and
std
xchg
rcrb
test
xchg
in
ret
mov
insb
sub
cwtl
xlat
std
mov
dec
lods
cmpsl
or
inc
inc
imul
fisttpll
cmp
mov
test
idivb
lcall
test
mov
popf
push
addl
andb
flds
mov
subl
cmp
and
jne
inc
cmp
mov
mov
loop
inc
mov
scas
add
sbb
idivb
mov
aad
les
or
cld
cld
daa
inc
dec
jnp
adc
lcall
sub
outsl
jle
sti
ror
push
and
bound
and
push
mov
fidivrs
hlt
mov
push
push
mov
mov
xchg
insl
sbb
dec
push
pop
mov
add
imul
or
fcomip
cwtl
sar
and
xchg
or
push
mov
adc
cld
jbe
xchg
imul
mov
ljmp
push
shl
loope
shlb
add
sub
adc
xchg
pop
arpl
test
or
aaa
xor
and
pop
mov
scas
jns
mov
dec
cld
js
mov
loope
ljmp
lock
faddp
mov
inc
data16
repz
dec
inc
cmp
xchg
lods
out
mov
popa
arpl
jo
cmp
clc
cmp
cmp
jl
les
sahf
adc
mov
dec
leave
lret
sub
dec
pop
arpl
repnz
stc
or
inc
sub
xor
xchg
mov
nop
xor
popa
xchg
fistpll
sub
addr16
imul
dec
shll
xchg
adc
jnp
scas
out
pop
inc
push
lret
movsb
jp
add
cmp
out
pop
aad
sub
mov
mov
inc
adc
dec
mov
stos
xor
jns
aas
inc
cmp
pop
jp
and
xchg
ds
or
arpl
cli
xchg
jle
test
cltd
outsl
jmp
mov
fs
xchg
dec
shr
push
popa
sarb
call
and
xchg
add
pop
push
cmp
mov
lods
mov
mov
cmp
inc
shrb
or
sarl
fsts
push
sub
cmc
hlt
mov
shrl
xchg
lods
mov
xor
mov
inc
cmp
pop
data16
fidivrl
loop
xchg
adc
mov
imul
daa
aad
jg
test
movsl
pop
gs
pop
sbb
fisttps
jp
pop
fcmovne
enter
test
fidivl
add
mov
loop
adc
insb
add
sbb
mov
inc
push
adc
loopne
lods
js
lcall
cld
xchg
fisubl
fwait
loopne
in
scas
std
mov
scas
sbb
push
arpl
add
pusha
pop
push
movsb
xor
pop
push
add
outsl
dec
mov
and
pop
loopne
test
bound
cmp
fsubrl
stc
fimull
rorl
mov
xor
out
xor
sbb
rorb
in
cmp
repnz
sbb
adc
and
repz
inc
adc
or
popa
jno
mov
outsl
lods
fstl
jo
loop
jne
fisubl
xchg
fdivrl
pop
mov
subl
sar
mov
inc
pmaddwd
lods
push
cmpsl
popa
int
mov
xor
in
daa
repnz
lcall
mov
cltd
sbb
test
insl
mov
cmp
pop
movsb
lcall
add
test
pusha
clc
and
xor
pop
dec
inc
mov
pop
lret
sub
test
aam
pop
mov
lcall
es
fidivl
add
and
mov
push
popf
popf
scas
xchg
out
adc
xchg
aam
in
aaa
call
stos
mov
mov
out
add
inc
push
sarl
mov
add
push
repz
jb
mov
xor
std
popa
or
jge
adc
jae
mov
das
inc
or
ret
mov
push
orl
clc
add
inc
mov
iret
and
cltd
repz
movsl
dec
mov
push
es
pop
cli
test
push
int
ljmp
mov
leave
mov
xor
sarb
pop
fisubs
sub
pusha
mov
pop
pop
adc
pop
jl
pop
push
decb
mov
mov
stos
in
jg
in
jns
mov
adc
mov
fdivrs
test
push
repnz
ja
dec
insl
pop
das
pop
mov
in
dec
out
sub
inc
rcl
js
int
cmc
push
mov
test
out
addr16
jno
pop
mov
and
dec
insl
pop
or
pop
lods
iret
and
std
mov
stos
pop
and
jmp
xchg
popf
hlt
bound
xchg
or
mov
ljmp
std
cmc
add
inc
jo
dec
sbb
and
push
or
adcb
adc
push
lea
sub
cmpsl
cmpsl
js
mov
pop
sahf
mov
addl
jp
pusha
icebp
lods
fsub
sbb
dec
std
sub
jl
arpl
xchg
and
out
ret
xlat
cld
cli
push
sub
testl
in
mov
jl
push
xchg
outsb
imull
cmpsb
xor
jb
dec
or
lock
push
xlat
ljmp
pop
imul
cli
ret
xor
out
mov
int3
fs
lods
icebp
rcll
mov
sbb
int3
cmp
lea
cmp
jns
push
xor
mov
inc
lret
xor
ret
push
xchg
xor
aas
cmp
nop
stos
sbb
dec
dec
insl
jne
and
ja
js
pop
mov
fstpl
add
in
xchg
lahf
jb
popa
push
arpl
jle
mov
std
andb
add
dec
add
lret
mov
xchg
pop
xchg
xor
fwait
xchg
sub
and
loopne
pop
lretw
jns
lea
lods
mov
movsl
into
jp
insb
subl
add
mov
cltd
push
jns
sbb
push
data16
orb
mov
lret
mov
mov
cltd
push
xor
insb
mov
fs
push
test
ret
add
nop
cld
mov
dec
sahf
into
mov
cwtl
orl
shll
lcall
pop
test
mov
xchg
or
fsubrs
imul
xbegin
mov
mov
popf
mov
xchg
fidivrl
outsb
push
lret
repnz
and
enter
loopne
iret
data16
pop
rol
xor
mov
mov
mov
adc
fs
inc
sbb
jecxz,pn
pop
mov
jl
adc
in
scas
out
in
cs
loop
jp
int
mov
es
cmpsl
push
xor
ds
fidivrs
push
outsb
dec
ja
out
mov
and
mov
daa
fdivs
ret
cmpb
mov
jmp
cli
decl
imul
cmc
fnsave
push
inc
shrb
in
sbb
xchg
dec
sahf
repnz
test
imul
mov
fisttps
add
mov
test
icebp
jns
stos
ja
and
fildll
jnp
jb
sub
sub
daa
ds
loope
movsl
jbe
or
daa
pop
fmull
mov
mul
dec
lods
les
test
imul
test
adc
nop
loopne
call
pop
xchg
in
ret
dec
xor
mov
leave
dec
and
cmp
mov
std
mov
xchg
js
jbe
jge
mov
fldcw
mov
jae
movsb
mov
ss
cmpsl
andl
pusha
mov
ljmp
inc
adc
sub
or
fisttpll
fsts
sbbb
out
jecxz
ljmp
mov
pop
cmp
pop
mov
mov
lods
sub
cld
int
inc
or
imul
inc
push
pop
push
dec
push
imul
aad
ret
cmp
push
in
mov
adc
pop
insb
mov
jmp
imul
imul
mov
sbb
cld
xchg
nop
and
fldenv
xor
dec
imul
mov
imul
popf
pop
xor
xchg
adc
aad
push
pop
inc
add
js
xor
mov
jle
outsb
mov
mov
scas
pushl
dec
inc
ljmp
sbb
fs
mov
mov
cltd
push
in
jp
popf
jnp
inc
sub
in
push
push
push
fstps
cwtl
mov
mov
jo
insb
ljmp
add
aam
movsl
pop
jbe
outsl
cmpsl
jecxz
ds
cmc
loop
push
rorb
popf
and
pop
js
and
mull
sub
or
and
dec
lock
push
inc
push
frstor
int
dec
repz
push
repnz
lgs
int3
in
sub
sahf
dec
inc
lods
cmp
repz
fidivrl
neg
adc
cmp
daa
bound
iret
add
xlat
and
daa
shl
sbbb
and
lret
jnp
add
push
xor
adcl
xchg
jecxz
pop
dec
jae
adc
fmul
enter
outsb
pop
xchg
aas
mov
xor
cmp
push
jmp
push
dec
add
pop
enter
xchg
je
popa
mov
dec
stos
sub
jb
sbb
sbb
inc
jle
push
inc
cwtl
cmc
push
in
push
sbb
jo
popa
mov
cmp
adc
addr16
and
push
inc
fsts
pop
loope
std
rol
out
repnz
out
fs
and
std
fcomi
std
or
cmc
or
std
cltd
mov
enter
xlat
xlat
ljmp
and
pop
sub
dec
xchg
je
lret
mov
xor
cmpsl
imul
pusha
sbb
bound
pop
xchg
arpl
add
inc
int
je
sahf
sbb
rcrb
outsl
rcrb
mov
inc
mov
in
cli
sub
mov
in
faddl
iret
lds
push
add
rcl
je
in
ja
cld
lock
mov
fadd
adc
pop
int
inc
xchg
lcall
inc
insl
cmp
aas
push
mov
loop
push
mov
mov
insb
mov
mov
mov
rcl
cs
fs
incb
sahf
lret
sbb
mov
jmp
adcl
jae
xlat
movsb
pop
mov
and
cmp
jb
or
shll
ret
cmpsb
cmc
cmp
or
ret
std
aas
leave
xor
scas
in
inc
iret
cmc
nop
rorl
sub
adc
mov
jbe
dec
mov
aad
imul
stos
push
jae
jmp
fldlg2
cmp
mov
jne
sbb
xchg
cmp
sub
push
cmpl
dec
pushf
adc
sbb
movsb
pop
and
jecxz
notb
xchg
rcll
fstps
jmp
mov
mov
cwtl
mov
xchg
aaa
add
mov
cli
mov
xchg
pop
mov
shll
pushf
mov
jge
cmp
and
jle
or
mov
inc
pushf
adc
mov
mov
lods
dec
xorps
es
jae
es
testl
fucomp
add
xlat
mov
push
invlpg
push
jnp
loope
inc
mov
push
fdivs
add
sub
sbb
mov
add
es
jmp
xchg
sbb
je
sbb
ss
push
pop
dec
and
insb
movb
hlt
cli
xor
xchg
mov
push
in
loope
mov
lock
xchg
in
mov
fwait
cmp
push
stc
out
mov
pop
outsb
ds
rcrb
mov
test
inc
adc
pop
rcrl
fsubs
mov
cwtl
inc
cs
int3
push
or
dec
push
iret
sub
sbb
inc
ss
xor
lods
into
sbb
push
sahf
and
mov
push
hlt
popf
lea
jno
pop
arpl
loop
filds
push
inc
inc
loop
aas
addb
sbb
sar
or
push
cltd
sub
push
das
inc
push
xlat
sub
inc
dec
inc
test
push
mov
xchg
sti
pop
data16
push
cmp
fwait
rcrl
add
xor
xchg
mov
cmp
aam
add
js
test
mov
mov
mov
imul
aam
stos
test
pop
xchg
push
jle
pop
es
push
bound
mov
stos
jae
lds
or
and
or
cltd
cmp
leave
adc
call
mov
je
test
aad
cmp
ljmp
jge
int3
mov
push
mov
pop
sub
clc
mov
shrb
mov
sbb
jl
mov
sub
hlt
mov
clc
in
std
pop
icebp
pop
ja
pop
jmp
jae
mov
jo
cmp
mull
sar
sahf
mov
jp
outsl
aam
pop
das
fdivr
in
shr
dec
idivl
ret
lahf
cmpsb
inc
sub
shrl
sbb
xchg
xchg
mov
pop
enter
cmc
mov
sti
cwtl
lds
sub
movsb
or
aam
in
out
mov
cmp
jbe
test
lods
adcl
jnp
loopne
sub
xchg
xor
xchg
or
push
loope
shrb
mov
inc
mov
mov
add
inc
xchg
sbb
jno
and
insl
pop
sbb
std
je
xor
xchg
inc
sub
xchg
in
shrl
jle
sub
in
cmp
lods
fisubrs
cmc
ret
scas
out
mulb
pop
mov
mov
pop
popf
cwtl
push
pop
or
sbb
ja
pop
in
mov
sarb
outsb
mov
cmp
idivb
int
sub
nop
loopne
dec
xchg
jns
mov
sbbl
inc
inc
mov
mov
jo
rcrb
inc
pop
or
iret
cmp
clc
push
mov
xchg
mov
or
test
mov
cltd
fwait
mov
push
leave
jbe
aad
mov
insl
pushf
pop
std
mov
ret
jns
bound
inc
cltd
xchg
fdivl
mov
imul
aaa
cmp
jg
push
aas
imul
loope
xor
addb
dec
push
sbbb
add
int
mov
or
cmp
jp
pushf
cltd
mov
aaa
dec
ja
xor
push
shrb
test
pop
dec
lods
sub
mov
inc
sbb
sbb
mov
bound
mov
mov
cwtl
jnp
cmpsl
mov
lods
sbb
push
sbb
mov
movsl
dec
mov
mov
jb
fisubrs
cmp
cmpsl
jle
int3
bound
dec
iret
xchg
imul
popa
mov
pop
lret
cmc
aam
add
js
hlt
insl
dec
lock
lret
mov
dec
jnp
xchg
push
jae
loope
and
scas
pop
and
add
and
stos
adc
cmc
roll
cli
sub
pop
adc
pop
ja
adc
clc
out
push
sti
and
pushl
test
test
fidivrs
add
pop
sbbl
mov
xchg
cs
xor
fidivrs
js
jne
dec
push
lods
fwait
shl
jnp
sbb
push
xchg
cs
mul
sahf
outsl
or
cmpsl
jge
repnz
lret
xor
lea
cwtl
inc
cld
cmp
mov
jno
xor
fsubl
aas
daa
add
mov
jge
sar
rcrb
xchg
mov
jbe
cmp
fsubrs
rclb
loop
hlt
lcall
cli
or
xchg
into
ret
pop
or
adc
xor
push
xorb
clc
xchg
lret
pop
mov
rcrb
fisubs
or
inc
xchg
jbe
cmp
push
xchg
cs
cmpsb
push
daa
dec
cltd
scas
push
mov
pop
mov
and
dec
add
pop
pop
jne
jl
mov
add
cmp
imull
mov
fmuls
mov
jne
lods
loop
add
add
pop
cmpsb
cmc
pop
jbe
sub
pop
adc
lret
fidivrl
lods
hlt
pushf
aaa
mov
inc
ja
sub
sub
arpl
aad
popa
jno,pn
pop
and
mov
pop
xor
mov
fdiv
das
jne
mov
mov
cmpsl
jo
cltd
adc
dec
les
mull
xchg
push
rcr
cmc
and
mov
and
fwait
sub
adc
outsb
cmc
fstpt
movsb
mov
dec
add
outsl
in
lods
aas
fisubrl
jg
xchg
incl
push
sub
shl
push
in
and
xchg
xchg
mov
shrl
fs
adcb
sbb
jp
mov
add
adcl
mov
xor
jecxz
adc
pop
int3
out
sub
imul
lcall
gs
int
push
jp
push
mov
mov
sub
into
shl
shlb
in
add
mov
leave
xchg
jp
adc
jne
clc
movsl
fsts
sbb
pop
outsl
sub
xchg
push
xlat
scas
pop
add
arpl
cld
lds
dec
icebp
pop
pop
fldl
pop
lds
add
out
add
aam
lret
push
gs
rorb
loope
pop
das
inc
mov
ffree
mov
inc
orl
pop
je
mov
xor
sub
or
test
sbb
inc
scas
movsl
xor
cli
stc
insl
add
das
pop
int3
sub
incb
out
mov
jae
ljmp
mov
imul
xor
ficompl
cmp
jg
icebp
pop
je
jg,pn
and
rcrb
rcl
fcoml
sub
jecxz
mov
fs
xchg
mov
or
ficoms
pusha
mov
les
out
lea
mov
dec
jmp
shll
orb
sarb
adc
jnp
ja
call
add
mov
lahf
rcll
loop
jg
inc
mov
out
loopne
mov
inc
or
push
mov
inc
testb
mov
push
loopne
xchg
inc
fisttpll
lret
out
mov
hlt
cmp
les
rcr
xor
lahf
stos
jbe
mov
dec
fcoms
repz
inc
cmp
dec
cli
dec
dec
into
dec
jb
pop
xchg
roll
fidivl
mov
fs
test
imul
xchg
or
fildll
xchg
jg
lret
les
pop
scas
mov
out
nop
mov
dec
cmc
into
mov
add
stos
test
cld
in
mov
or
adc
xor
sbb
rcl
sub
sub
cmp
cmpsl
sub
mov
arpl
sbb
mov
sub
fwait
adc
repz
mov
inc
sbb
das
xlat
mov
inc
mov
add
loopne
add
pop
sbb
fmull
and
or
in
cmp
test
push
pop
js
sub
mov
pop
jp
push
sbb
jl
mov
inc
jecxz
pop
jmp
push
loope
pusha
mov
mov
mov
sub
mov
idivl
jns
jbe
sub
test
in
loop
andb
cmp
in
adc
mov
sbb
inc
aaa
and
xor
or
and
repnz
xlat
nop
push
add
fadd
and
xor
dec
push
mov
cmp
inc
sbb
ja
aad
jl
psrlw
es
test
adc
mov
xchg
mov
xor
je
push
loope
push
pop
test
inc
push
out
enter
cld
call
inc
ret
psllw
imul
out
cmp
mov
stos
push
out
cmp
negl
pushl
sbb
fbld
cmp
imul
aaa
movsb
xchg
out
xchg
or
lds
inc
scas
jae
arpl
mov
cld
jl
jne
in
inc
inc
lods
into
cli
fidivrs
test
sbb
je
mov
sub
xor
push
mov
gs
sub
cmc
imul
sbb
into
hlt
mov
stos
fwait
loopne
xor
or
dec
popf
test
faddl
pop
sub
scas
xchg
sbb
rep
mov
outsl
lahf
negl
in
mov
pop
lcall
push
pop
pop
jo
les
arpl
adc
dec
mov
loope,pn
jg
fnstsw
add
arpl
mov
gs
repz
adc
mov
mov
dec
int
cltd
imul
in
xor
jbe
mov
push
sbb
xor
xchg
xor
clc
imul
xlat
loop
cmp
xchg
fwait
xor
dec
and
sbb
out
ret
ds
mov
inc
mov
cwtl
negl
je
mov
add
repnz
pop
fadds
cmp
in
jne
dec
popa
pop
ja
adc
in
mov
xchg
mov
daa
fisttpll
pop
int3
dec
lahf
xchg
mov
fdivrp
pop
je
mov
insb
dec
mov
pop
jle
scas
hlt
and
adc
push
sub
into
fstpl
pushf
mov
mov
and
rorl
arpl
gs
stos
mov
cli
jno
xor
mov
cmpsl
push
lret
mov
shrl
mov
or
or
nop
pop
mov
mov
pop
ss
rorb
xchg
shll
cltd
mov
push
add
loop
xchg
ja
jmp
and
sbb
add
loope
add
xor
xor
sti
add
sbb
xchg
fwait
mov
dec
push
in
and
xor
sbb
or
push
jmp
movsl
xchg
aad
dec
inc
jge
inc
sub
add
andl
decb
push
cmp
xor
les
movsl
jg
scas
lods
inc
sahf
add
inc
sub
cltd
dec
dec
mov
add
cmpb
lds
or
lds
mov
push
jge
lods
push
aad
movsl
out
jae
xlat
cld
inc
xor
das
or
sbb
mov
in
xchg
jp
outsb
ljmp
scas
out
cwtl
push
dec
xor
xlat
sub
sbb
cltd
lcall
jmp
imul
cwtl
mov
cmc
sub
dec
pop
jecxz
pushf
test
loopne
xchg
iret
inc
jo
jg
xor
or
mov
jmp
les
std
nop
pop
xor
int
pop
int
sti
js
cmpsb
sbb
fs
jnp
dec
xchg
js
sbbb
imul
iret
lds
mov
subl
fucomp
cmp
cmp
or
mov
inc
scas
jnp
imul
mov
lds
loope
add
sub
jae
stc
test
pusha
loop
sbb
out
mov
scas
cs
lcall
push
jae
fadds
mov
cwtl
ds
sub
cli
or
inc
cs
adc
mov
nop
add
add
popa
adc
adc
inc
lds
in
jge
dec
adcl
arpl
lods
int
mov
sbb
mov
push
insb
jns
cltd
scas
adc
sub
cmp
cmp
and
dec
insb
mov
xchg
clc
pop
cmc
jns
push
into
cmp
fmull
stos
add
push
arpl
popa
jne
imul
add
fwait
mov
std
lods
adc
gs
cld
cmp
mov
ret
push
xchg
fldcw
xor
dec
add
pop
and
or
and
stos
aam
xor
pop
inc
and
adc
adc
imul
mov
push
mov
mov
mov
pop
out
or
daa
cmp
outsl
mov
xchg
in
inc
jne
mov
inc
in
mov
mov
pop
push
xchg
xchg
loope
rcrb
push
sub
or
xor
cmpsl
imul
adc
mov
fnstsw
mov
mov
pop
xchg
pusha
mov
pop
fs
aas
mov
adcl
inc
mov
xlat
addb
out
cmp
or
xchg
push
sbb
mov
push
inc
mov
daa
orb
mov
lds
mov
mov
idivl
inc
and
stos
jo
adcl
and
shl
xchg
mov
push
lea
inc
cmp
xor
mov
pop
xchg
lock
in
lods
iret
lcall
daa
add
dec
in
fsubrl
adc
fwait
push
test
dec
ficoml
pop
mov
and
add
fdivl
mov
aad
add
add
inc
fimuls
add
add
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
inc
fimuls
add
add
add
add
addb
add
inc
fimuls
add
add
add
add
add
add
addb
add
loopne
add
inc
fimuls
add
add
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
inc
fimuls
add
add
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
inc
fimuls
add
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
inc
fimuls
add
add
add
add
addb
add
inc
fimuls
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
cwtl
add
add
add
add
mov
add
add
add
add
add
add
test
add
add
add
inc
fimuls
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
enter
add
add
inc
fimuls
add
add
add
add
fadds
add
add
add
mov
add
add
add
add
add
add
call
add
add
mov
add
add
add
add
add
add
clc
add
add
add
add
mov
add
add
add
add
add
add
or
add
inc
fimuls
add
add
add
add
sbb
add
inc
fimuls
add
add
add
add
sub
add
inc
fimuls
add
add
add
add
cmp
add
inc
fimuls
add
add
add
add
dec
add
add
inc
fimuls
add
add
add
add
pop
add
add
inc
fimuls
add
add
add
add
push
add
add
mov
add
add
add
add
add
add
js
add
add
add
inc
fimuls
add
add
add
add
add
add
add
mov
add
add
add
add
or
add
add
add
mov
add
add
add
add
or
add
add
add
mov
add
add
add
add
or
add
add
add
mov
add
add
add
add
or
add
add
add
inc
fimuls
add
add
add
add
add
add
add
inc
fimuls
add
add
add
add
add
add
add
inc
fimuls
add
add
add
add
add
add
add
inc
fimuls
add
add
add
add
add
push
add
add
add
inc
fimuls
add
add
add
add
add
push
add
add
add
inc
fimuls
add
add
add
add
add
push
add
add
add
inc
fimuls
add
add
add
add
add
push
add
add
add
inc
fimuls
add
add
add
add
add
add
add
add
inc
fimuls
add
add
add
add
add
add
add
add
inc
fimuls
add
add
add
add
push
add
add
mov
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
mov
add
add
add
add
add
add
add
in
add
add
add
int3
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
aad
add
add
add
add
cmc
push
add
add
in
add
add
add
and
push
add
add
in
add
add
add
dec
cmc
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
pop
cmc
push
add
add
add
add
add
add
add
add
add
in
add
add
add
push
add
add
add
add
add
add
push
add
add
in
add
add
add
je
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
inc
inc
adc
add
inc
push
dec
and
push
loopne
add
push
jbe
push
mov
add
add
inc
dec
adc
add
sbb
add
add
add
add
add
add
adc
adc
add
cmp
add
rorb
sar
idivl
add
add
dec
dec
push
push
mov
add
jae
jb
jae
jb
cmp
add
jbe
fs
dec
inc
and
add
add
inc
sldt
add
add
add
add
pop
add
adc
add
jae
jb
push
add
add
add
add
add
add
or
add
add
sarb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
jbe
fs
add
add
dec
dec
enter
dec
dec
push
push
jbe
add
insl
outsl
jbe
xor
arpl
pop
add
decl
decl
decl
decl
decl
decl
decl
decl
or
sbb
or
add
pop
add
add
add
add
or
add
pop
add
add
add
add
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
les
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
or
or
or
or
or
or
or
or
or
or
or
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
ret
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
ret
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
add
ret
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
add
ret
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
or
rorl
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
invd
add
rorb
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
invd
add
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
add
or
add
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
invd
add
rorb
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
add
or
add
pop
ltr
sldt
add
rorl
add
sldt
add
or
add
sbb
add
or
add
or
add
or
add
or
add
pop
sysret
sysret
add
sldt
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
pop
ud2
pop
sysret
adc
add
add
les
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
pop
invd
or
sysret
add
sldt
or
or
add
les
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
pop
ud2
or
pop
pi2fw
sldt
or
sldt
or
or
or
or
or
or
or
or
or
add
add
add
or
or
or
pop
sysret
add
sldt
or
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
add
pop
invd
or
or
sysret
add
sldt
or
or
sysret
invd
or
or
or
or
or
or
add
or
add
pop
or
or
or
sysret
add
sldt
or
or
or
or
or
or
or
pop
add
or
add
pop
sysret
sysret
add
add
or
or
add
sldt
sldt
pop
or
add
or
sldt
add
rorb
add
adc
add
pop
invd
pop
or
add
or
add
pop
add
or
add
pop
or
add
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
xor
arpl
add
add
add
add
add
add
and
add
add
add
add
and
add
pop
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
sldt
sldt
pop
add
pop
add
or
add
add
add
add
sldt
push
add
pop
add
or
add
add
add
add
sldt
push
add
pop
add
pop
add
add
add
add
adc
add
add
add
or
add
pop
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
pop
sysret
pop
add
add
add
add
add
sysret
pop
add
add
push
add
sldt
pop
pop
or
pop
add
add
or
add
add
add
or
add
sbb
add
arpl
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
and
add
add
add
add
add
and
pop
add
add
add
and
pop
add
add
add
and
pop
sgdtl
add
add
add
add
sgdtl
add
add
add
pop
add
sldt
add
add
add
sgdtl
add
add
add
pop
add
sldt
push
add
pop
add
pop
add
add
add
add
sbb
add
add
add
add
pop
add
add
sbb
add
pop
sldt
lsl
add
add
sbb
add
add
add
pop
add
add
sbb
add
add
or
or
pop
pop
incl
add
add
add
pop
or
or
incl
add
add
add
add
or
arpl
add
add
and
add
add
add
and
add
add
or
add
add
add
or
add
add
add
add
add
pop
invd
or
add
add
add
add
add
sldt
pop
invd
or
add
add
sub
add
add
add
add
add
sub
push
pop
add
add
add
sub
push
sgdtl
add
add
add
and
add
add
push
add
sgdtl
add
add
add
and
add
add
add
add
pop
add
add
add
sbb
add
add
pop
add
add
pop
add
add
add
push
add
pop
invd
add
or
pop
add
add
pop
add
add
add
push
add
pop
or
or
or
pop
addb
add
pop
add
add
add
push
add
add
add
ud0
sgdtl
add
add
add
push
add
pop
add
or
sgdtl
add
add
pop
add
or
str
sgdtl
add
add
pop
add
or
add
pop
sldt
lsl
add
add
add
or
sysret
pop
pop
add
add
add
add
pop
add
add
add
add
pop
add
xor
arpl
add
adc
or
add
add
or
sysret
invd
or
add
add
and
add
pop
add
add
add
pop
invd
or
add
add
and
add
pop
add
or
add
invd
add
add
add
and
add
pop
rolb
pop
pop
add
add
add
and
add
or
add
add
pop
add
add
add
and
add
or
add
or
add
pop
add
add
add
and
add
or
add
add
pop
sgdtl
add
add
add
and
add
or
add
add
add
add
add
pop
sgdtl
add
add
add
and
add
add
or
pop
add
add
pop
sgdtl
add
add
add
and
add
add
or
pop
add
add
pop
sgdtl
add
add
add
and
add
add
add
add
add
pop
sgdtl
add
add
add
and
pop
add
add
pop
sgdtl
add
add
and
pop
add
add
pop
sgdtl
add
add
and
add
jo
add
add
add
or
sysret
pop
pop
add
add
add
or
pop
pop
pop
add
add
add
add
or
add
add
xor
arpl
add
add
adc
add
or
sub
or
sub
push
or
daa
add
or
add
daa
add
add
add
add
add
sub
or
add
pop
invd
or
add
add
add
add
or
add
add
sysret
invd
or
add
add
add
sub
pop
or
add
pop
invd
or
add
add
add
add
or
add
or
add
add
add
sub
or
str
sgdtl
add
add
add
sub
or
str
sgdtl
add
add
add
sub
or
str
sgdtl
add
add
add
sub
or
str
sgdtl
add
add
add
sub
or
str
sgdtl
add
add
add
sub
add
str
sgdtl
add
add
sub
add
add
pop
jo
add
add
sub
add
add
add
sldt
lsl
add
add
aaa
add
or
sysret
pop
pop
add
add
aaa
add
add
pop
add
add
add
add
pop
add
xor
arpl
add
add
ss
add
xor
pop
or
xor
or
xor
push
or
xor
or
add
add
add
or
add
add
add
add
xor
or
sysret
invd
or
add
add
add
xor
or
pop
invd
or
add
add
add
pop
add
add
add
add
pop
add
add
add
add
xor
add
sldt
add
add
add
add
or
str
sgdtl
add
add
add
add
or
str
sgdtl
add
add
add
jo
add
add
aaa
add
or
str
sgdtl
add
add
aaa
add
add
add
sldt
lsl
add
add
aaa
add
or
add
pop
sysret
pop
pop
add
add
inc
add
add
pop
addb
add
inc
add
pop
add
xor
arpl
add
add
add
add
add
or
add
or
aas
add
add
add
or
add
add
add
add
inc
add
sysret
invd
or
add
add
add
inc
add
sysret
invd
or
add
add
add
push
or
add
add
add
add
inc
add
or
add
add
add
add
inc
add
or
sysret
pop
pop
invd
add
add
add
push
or
sldt
add
add
add
add
add
inc
add
or
sldt
lar
add
add
add
inc
add
or
add
pop
jo
add
add
inc
add
add
add
str
sgdtl
add
add
inc
add
or
add
pop
ud0
lsl
add
add
push
add
or
sysret
pop
pop
add
add
push
add
add
pop
add
add
add
add
add
xor
arpl
add
add
dec
sbb
add
dec
add
or
dec
add
or
dec
add
add
dec
add
or
sysret
sldt
add
add
add
dec
add
pop
invd
or
add
add
add
push
add
add
add
add
add
push
add
sldt
add
add
add
add
push
add
ud0
sgdtl
add
add
push
add
add
add
add
push
add
sldt
add
add
add
add
push
add
sldt
lar
add
add
add
add
push
add
or
add
pop
jo
add
add
add
push
add
add
add
jo
add
add
push
add
or
add
pop
sldt
lsl
add
add
pusha
add
or
sysret
pop
pop
add
add
pusha
add
add
pop
addb
add
pusha
add
pop
add
xor
arpl
add
add
add
add
add
or
pop
add
or
add
add
or
sysret
or
add
add
add
add
pop
add
add
add
add
add
pop
add
invd
or
add
add
add
or
jo
add
add
add
pop
add
sldt
sidtl
add
add
add
pop
add
jo
add
add
add
pop
add
xadd
sidtl
add
add
add
pop
add
add
add
add
pop
add
or
sldt
lar
add
add
add
pusha
add
or
add
pop
str
sgdtl
add
add
pusha
add
add
add
ud0
lsl
add
add
pusha
add
or
add
pop
sysret
pop
pop
add
add
outsb
add
add
pop
add
add
add
add
add
xor
arpl
add
add
push
add
add
or
add
add
add
imul
add
add
pop
or
add
add
add
add
or
add
pop
invd
or
add
add
add
or
add
pop
invd
or
add
add
add
or
add
pop
sldt
add
add
add
or
sldt
sidtl
add
add
add
imul
or
sldt
sidtl
add
add
add
imul
or
str
sidtl
add
add
add
insl
add
or
sldt
pop
add
invd
add
add
add
insl
add
or
or
pop
add
add
insl
add
add
pop
jo
add
add
outsb
add
or
add
pop
sldt
add
add
add
outsb
add
add
push
pop
sysret
pop
add
add
outsb
add
or
add
sysret
pop
add
add
jle
add
add
xor
arpl
add
add
add
add
add
add
add
or
add
add
add
add
add
invd
or
add
add
add
add
invd
or
add
add
add
push
or
sldt
add
add
add
push
or
sldt
sidtl
add
add
add
ja
add
add
add
add
add
add
push
or
add
add
add
add
add
add
str
sidtl
add
add
add
js
add
sysret
pop
add
add
add
add
invd
pop
incl
add
add
add
add
sldt
pop
or
add
add
add
add
or
lar
add
add
jle
add
sysret
pop
or
add
add
sysret
pop
add
add
jle
add
add
xor
add
add
add
add
jnp
or
add
jnp
or
or
add
add
add
jnp
or
invd
or
add
add
add
jl
pop
or
invd
or
add
add
jl
pop
or
sldt
add
add
add
add
jl
or
sldt
add
add
add
add
jge
pop
or
ud0
add
add
add
pop
or
jo
add
add
add
jge
or
jo
add
add
add
jle
pop
or
sldt
sidtl
add
add
add
jg
push
or
jo
add
add
add
addl
or
xadd
pop
add
add
addl
or
add
add
or
incl
add
add
add
add
pop
add
add
xchg
add
pop
add
xor
arpl
add
add
add
add
add
add
add
add
add
or
add
add
add
add
push
pop
invd
or
add
add
addl
or
invd
add
add
add
pop
pop
invd
add
add
add
test
or
invd
add
add
add
test
or
invd
add
add
add
pop
invd
add
add
add
add
sldt
add
add
add
add
test
or
add
pop
ud0
add
add
add
add
test
or
add
pop
ud0
add
add
add
pop
add
add
add
add
add
xchg
add
or
add
add
add
nop
add
or
add
pop
sysret
incl
add
add
add
add
pop
add
xor
arpl
add
add
cltd
and
add
add
add
add
add
add
add
lea
add
add
or
add
invd
or
add
add
add
add
add
add
or
add
or
add
add
add
mov
or
invd
or
invd
or
add
add
add
or
invd
add
invd
or
add
add
popl
or
invd
add
sldt
add
add
popl
or
invd
add
add
add
add
nop
add
or
invd
add
add
add
or
invd
add
add
add
add
sldt
add
add
add
add
xchg
add
or
sldt
add
add
add
add
xchg
add
or
sldt
add
add
add
pop
add
add
add
add
add
cltd
add
or
add
add
add
add
add
lcall
add
add
sysret
add
add
add
xor
arpl
add
add
movsl
and
add
add
add
add
add
pop
add
add
add
add
cwtl
add
add
or
add
invd
or
add
add
add
xchg
add
or
add
invd
or
add
add
add
xchg
add
or
invd
add
add
add
add
add
add
xchg
add
invd
add
push
sidtl
add
add
add
cwtl
add
or
invd
add
add
add
add
cwtl
add
invd
add
sldt
cltd
add
or
invd
add
add
add
cltd
add
or
add
pop
invd
add
add
add
lcall
invd
add
add
add
or
invd
add
add
add
add
sldt
add
add
add
fwait
add
sysret
addb
add
pushf
add
or
sysret
add
add
mov
add
pop
incl
add
add
add
sysret
add
add
movsb
add
sysret
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
pop
pop
add
addb
add
movsl
add
or
add
pop
invd
pop
pop
add
add
add
mov
add
sldt
add
add
mov
add
sldt
sldt
pop
pop
pop
add
add
mov
add
sgdtl
add
add
mov
push
pop
sldt
add
add
add
add
push
pop
invd
or
add
add
sldt
add
add
add
movsb
add
or
ud0
sidtl
add
add
add
movsb
add
or
jo
add
add
movsl
add
or
sldt
add
add
add
sldt
add
add
add
cmpsb
add
or
sysret
add
add
add
push
pop
sysret
add
add
cmpsl
add
or
sysret
add
add
cmpsl
add
or
add
sysret
add
add
test
add
add
add
sysret
add
add
test
add
add
pop
add
add
sysret
rolb
add
test
add
add
pop
add
add
stos
add
or
add
add
add
stos
add
or
arpl
add
add
add
add
mov
or
pop
pop
add
addb
add
mov
add
add
push
add
or
invd
pop
pop
add
add
add
scas
add
or
add
pop
sldt
add
add
scas
add
or
sldt
sldt
pop
pop
pop
add
add
scas
add
or
str
sgdtl
add
add
lods
add
or
str
lar
add
add
lods
add
or
add
or
add
add
add
lods
add
or
sldt
add
add
add
or
sldt
add
sldt
add
add
scas
add
or
sldt
add
pop
sldt
scas
add
sysret
incl
add
add
or
sysret
sldt
add
add
scas
add
sysret
sldt
add
add
mov
or
sysret
sldt
add
add
mov
pop
or
add
pop
sysret
sldt
add
add
add
add
pop
add
add
add
add
mov
push
or
add
pop
sldt
add
add
mov
add
add
or
add
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
arpl
add
add
leave
sbb
add
add
add
add
add
add
pop
pop
or
pop
pop
add
addb
add
mov
add
add
or
invd
pop
pop
add
add
add
mov
add
sldt
add
add
mov
add
sldt
sldt
pop
pop
pop
add
add
mov
add
str
sgdtl
add
add
mov
add
str
lar
add
add
mov
add
str
sgdtl
add
add
mov
add
str
sgdtl
add
add
mov
add
sgdtl
add
add
mov
add
sldt
pop
sgdtl
add
add
mov
push
pop
sldt
add
add
add
or
sldt
sldt
add
add
mov
or
sysret
sldt
mov
or
sysret
sldt
add
add
mov
add
sysret
add
add
add
add
mov
add
add
pop
add
add
add
add
mov
add
add
pop
add
add
add
add
mov
add
add
pop
add
add
add
mov
add
add
add
xor
add
add
add
sbb
add
add
add
add
add
add
pop
pop
or
pop
pop
add
addb
add
leave
add
add
pop
invd
pop
pop
add
add
add
enter
add
add
sldt
add
add
movl
pop
sldt
sldt
pop
pop
pop
add
add
movl
pop
str
sidtl
add
add
add
movb
or
str
lar
add
add
lds
or
add
pop
str
sgdtl
add
add
lds
or
add
pop
ud0
sgdtl
add
add
les
or
str
sgdtl
add
add
les
or
sgdtl
add
add
les
or
sldt
pop
sgdtl
add
add
les
or
sldt
add
add
add
add
or
sysret
add
add
add
add
lds
or
sysret
add
add
add
add
or
add
push
sgdtl
add
add
movb
or
add
add
add
add
add
movl
pop
add
pop
add
add
add
add
enter
add
or
add
add
add
add
leave
add
add
add
or
arpl
add
add
ficomps
add
add
add
add
add
add
pop
pop
or
pop
pop
add
addb
add
add
or
invd
pop
pop
add
add
add
aad
pop
or
sldt
add
add
add
add
aam
pop
or
sldt
sldt
pop
pop
pop
add
add
aam
push
or
ud0
sidtl
add
add
add
roll
pop
or
ud0
lar
add
add
rolb
pop
or
add
add
add
add
add
or
add
add
add
add
add
or
add
pop
sgdtl
add
add
roll
pop
or
add
pop
sgdtl
add
add
roll
pop
or
add
or
add
add
add
roll
pop
or
sldt
add
sgdtl
add
add
roll
or
sldt
add
add
add
add
or
pop
add
sgdtl
add
add
rolb
or
add
add
add
rolb
or
add
add
add
roll
or
add
add
add
aam
pop
or
add
add
add
add
add
add
add
or
arpl
add
add
add
sbb
fldl
or
add
faddl
or
xadd
add
add
add
add
faddl
or
sldt
sldt
pop
pop
pop
add
add
fildl
or
str
sidtl
add
add
add
fiaddl
or
str
lar
add
add
fiaddl
or
str
sgdtl
add
add
flds
or
str
sgdtl
add
add
flds
or
str
sgdtl
add
add
flds
or
str
sgdtl
add
add
fadds
or
ud0
sgdtl
add
add
fadds
or
str
sgdtl
add
add
fadds
or
xadd
sgdtl
add
add
flds
or
add
add
add
fiaddl
or
add
add
add
fildl
or
add
add
add
add
add
faddl
pop
or
add
add
add
add
add
fiadds
add
add
pop
add
add
add
loope
add
arpl
add
add
out
add
out
add
or
or
pop
add
add
add
add
out
add
add
pop
ud2
or
pop
or
add
add
add
in
add
invd
or
pop
or
add
add
add
in
add
ud2
or
pop
or
add
add
add
in
push
or
or
pop
add
sgdtl
add
add
in
pop
or
or
or
add
add
add
in
or
pop
add
sgdtl
add
add
jecxz
or
xadd
add
add
sgdtl
add
add
jecxz
or
add
add
add
jecxz
or
sgdtl
add
add
loop
adc
add
add
add
loop
or
add
pop
add
add
add
add
in
or
add
add
add
add
out
pop
or
jmp
add
add
add
or
arpl
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
in
add
add
sldt
add
add
add
add
add
add
in
add
add
sldt
add
add
add
add
add
add
out
add
pop
add
add
or
add
add
add
add
add
sti
add
sidtl
add
add
add
out
add
add
or
incl
add
add
sidtl
add
add
add
out
add
add
or
pop
add
or
add
add
add
add
add
in
add
push
or
or
or
add
pop
add
add
or
add
add
add
add
pop
add
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
lock
invd
add
add
repnz
add
add
hlt
add
or
add
add
testl
xor
arpl
add
add
add
xor
add
add
add
js
mov
xor
add
add
add
sub
add
xor
arpl
add
add
add
push
add
add
xor
add
add
add
push
add
add
xor
add
add
add
push
add
add
xor
add
add
add
add
xor
add
add
add
pop
add
add
xor
add
add
add
add
xor
add
add
push
add
add
add
xor
add
add
adc
add
add
xor
arpl
add
add
add
and
add
xor
arpl
add
add
add
add
xor
arpl
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
push
add
cmp
add
xor
arpl
add
add
sbb
add
add
xor
arpl
add
add
add
test
add
xor
arpl
add
add
sbb
add
xor
add
add
add
add
xor
add
add
add
jb
add
xor
arpl
add
add
add
add
xor
add
add
and
add
add
add
xor
add
add
and
add
add
xor
arpl
add
add
add
add
add
xor
add
add
add
add
add
xor
arpl
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
add
incl
add
add
add
add
add
addb
incl
leave
add
add
add
push
scas
mov
add
add
pop
push
dec
add
add
in
add
add
incl
add
incl
dec
jle
xchg
sti
mov
dec
or
mov
push
dec
push
scas
mov
xor
arpl
add
inc
add
inc
add
add
add
dec
add
add
xchg
out
push
in
add
mov
call
xor
add
add
mov
add
add
xor
add
incl
add
add
push
pop
add
add
incl
add
incl
push
movsl
arpl
push
sub
mov
push
scas
mov
pop
push
test
push
call
imul
and
sbbb
or
es
sbb
pop
lds
push
pop
ljmp
xchg
add
orl
testb
lds
cwtl
movsl
arpl
push
sub
dec
push
scas
mov
xor
add
add
push
mov
mov
xor
push
add
add
add
incl
add
add
sub
add
add
add
add
add
incl
add
add
sub
add
add
add
add
incl
add
add
add
add
add
addb
icebp
add
add
add
xor
mulb
testb
add
or
nop
add
xchg
add
push
pop
add
ljmp
add
incl
xchg
gs
ds
jg
arpl
push
xchg
dec
test
dec
outsb
jg
xor
add
add
add
or
add
incl
add
add
push
mov
add
add
or
add
incl
mov
add
add
sub
add
add
add
push
jg
xor
add
add
add
incl
pop
add
add
add
add
add
add
incl
insl
add
add
add
incl
add
add
add
add
add
addb
or
pop
add
add
add
testb
or
nop
add
xchg
add
add
push
pop
add
add
incl
add
incl
push
xchg
testb
add
add
add
add
add
or
add
incl
add
add
push
add
xor
push
add
add
add
incl
add
add
sub
add
add
xor
push
add
or
add
incl
nop
sub
add
sub
add
add
add
xor
push
add
add
add
incl
add
add
sub
add
add
add
add
incl
add
add
add
add
add
addb
add
add
cli
add
add
add
arpl
push
add
or
nop
add
xchg
add
add
push
rolb
add
add
add
add
add
incl
insl
sub
add
sub
add
add
add
add
add
add
add
incl
push
shlb
push
add
add
add
add
add
add
or
add
incl
add
add
push
pop
add
add
add
add
add
incl
push
sbb
push
or
testl
add
add
push
pop
add
add
or
add
jae
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
inc
add
outsb
add
jb
imul
add
add
add
add
or
add
jns
jae
inc
add
imul
je
add
add
add
add
jae
add
xor
add
add
add
incl
add
add
add
add
add
addb
add
add
add
add
add
shlb
push
add
or
nop
add
xchg
add
add
push
rolb
add
add
add
add
add
incl
insl
sub
add
sub
add
add
add
add
add
add
add
incl
push
shlb
push
add
add
add
add
add
add
or
add
incl
add
add
push
pop
add
add
add
add
add
incl
push
sbb
push
or
testl
add
add
add
add
incl
add
add
add
add
add
addb
add
add
add
add
dec
push
add
or
nop
add
xchg
add
add
push
addl
push
add
or
add
incl
push
sub
add
sub
add
add
add
add
add
incl
jle
add
add
sub
add
add
add
mov
or
add
incl
add
add
push
or
xor
push
add
add
incl
add
incl
push
out
in
jle
add
add
add
mov
nop
jmp
dec
pop
pop
ds
push
xchg
dec
test
testb
add
add
and
add
add
add
dec
and
and
add
js
jbe
jp
xchg
loope
outsl
pusha
xor
lea
xor
add
add
jl
jle
insl
outsl
pusha
cmp
and
and
xor
add
addr16
xor
bound
xchg
test
lea
add
es
push
mov
add
add
add
gs
shrb
xor
fs
dec
sti
jl
jle
jbe
jb
loopew
outsl
pusha
add
or
test
pop
push
push
dec
xchg
testl
add
add
or
loopne
aad
sbb
pop
jecxz
mov
jg
jle
jp
xor
add
add
inc
add
and
xchg
dec
loopne
dec
add
push
add
mov
pop
loope
add
or
loopne
aad
hlt
cmp
jbe
push
cmp
xor
pop
lds
mov
bound
push
sub
and
add
inc
add
add
push
sub
js
jbe
jp
xchg
test
lcall
mov
mov
or
gs
fisttpl
testl
jp
hlt
xchg
or
ss
push
push
push
sti
push
sbb
int
aad
sbb
bound
push
sbb
push
mov
and
nop
cli
push
mov
mov
jp
pop
add
adc
dec
cmp
gs
add
testl
cmp
es
pop
pop
sub
adcb
push
cltd
push
add
adc
lds
cwtl
pop
arpl
dec
cmp
lea
jmp
push
mov
and
xor
add
gs
hlt
data16
xchg
dec
cmp
jg
popl
add
adc
loopne
aad
mov
insl
enter
stc
pop
fisttpll
add
jo
add
sbb
loopne
aad
mov
insl
enter
stc
pop
fisttpll
add
push
add
add
add
add
add
add
add
xor
add
sbb
pop
fisttpl
cmp
and
add
add
gs
push
sbb
loopne
cmp
and
and
add
arpl
jl
jle
jbe
jl
pop
subps
xor
inc
bound
xchg
test
lea
xor
stos
mov
dec
push
add
xor
imul
pop
orl
outsb
add
add
jae
and
cmp
xor
add
outsb
add
add
jae
and
dec
add
add
add
add
add
add
add
add
add
add
hlt
data16
test
fs
dec
sti
jl
jle
xor
add
add
add
gs
push
sbb
add
add
outsl
add
inc
add
add
add
jae
sub
sub
and
sub
bound
push
jo
and
and
add
xor
lea
xor
push
std
addb
add
add
sub
jbe
add
add
jo
popa
add
imul
add
add
add
sub
or
xor
add
lds
imul
outsl
add
jae
and
cmp
xor
bound
add
imul
outsl
add
jae
and
dec
add
add
gs
sbb
pop
sbb
and
and
pop
cmp
pop
lds
pop
or
add
and
and
add
inc
add
add
jp
hlt
xchg
fisttpll
jne
push
jno
test
push
add
and
or
xor
pop
scas
mov
push
out
in
jle
pop
lds
lret
gs
push
inc
bound
xchg
test
js
jbe
jp
xchg
add
or
or
das
es
out
in
jle
add
add
push
push
add
outsb
add
add
jae
and
xchg
dec
cmp
gs
push
sbb
add
add
sbb
add
add
jl
jle
push
in
xchg
cmp
and
dec
add
add
push
add
outsl
add
add
jae
push
add
imul
add
and
cli
push
sbb
dec
add
add
jl
jle
push
in
xchg
cmp
and
inc
add
add
jae
je
push
add
imul
add
push
add
imul
insb
add
add
jae
and
cli
push
sbb
dec
add
add
jl
jle
push
in
xchg
cmp
and
inc
add
imul
imul
outsl
add
jae
inc
add
and
cli
push
sbb
loopne
aad
shlb
push
xchg
dec
add
mov
push
std
subb
xor
dec
test
pop
or
add
jne
dec
movsb
dec
bound
testb
sarl
jp
hlt
xchg
or
add
bound
add
inc
add
and
xchg
dec
repnz
pop
arpl
add
pop
add
jp
pop
loopne
aad
mov
push
jno
test
push
add
sub
test
push
pop
push
add
or
sti
jl
jle
insl
outsl
pusha
cmp
and
and
xor
add
jp
pop
loopne
aad
jle
xor
push
and
and
add
inc
add
add
push
sub
js
jbe
jp
xchg
test
lcall
mov
mov
or
gs
fisttpl
testl
jp
hlt
xchg
or
ss
push
lea
mov
xor
add
jp
pop
out
push
std
xor
pop
arpl
add
testl
or
pop
test
dec
xchg
pop
inc
push
push
cmp
add
sbb
jge
in
dec
mov
nop
jns
in
mov
insb
sbb
cs
gs
sbb
jge
in
and
das
add
add
adcl
loope
outsl
pusha
add
insl
add
in
dec
mov
nop
jns
cmp
or
or
das
add
and
sub
add
shlb
jns
pop
lds
or
or
or
das
add
add
data16
insb
add
add
popa
add
add
add
add
add
arpl
gs
pop
dec
xchg
dec
cmp
decl
add
add
add
and
sub
add
add
dec
and
das
add
add
sub
add
dec
push
pop
xchg
dec
shlb
push
xor
arpl
dec
cmp
xor
add
add
add
cmp
cmp
inc
add
add
add
add
add
pop
gs
dec
add
dec
test
pop
lds
add
or
and
lds
cwtl
int
mov
das
push
test
mov
addr16
std
cmpb
test
mov
pop
jne
add
or
or
das
es
mov
sub
xchg
mov
das
push
test
mov
addr16
add
add
add
sub
dec
mov
and
and
testb
test
push
add
push
sub
add
das
es
rorb
test
push
sub
aas
add
add
gs
jle
xor
testb
and
xor
add
add
test
mov
mov
test
jnp
je
push
inc
addr16
xchg
add
sbbb
or
jne
jnp
je
push
rorb
call
jp
pop
loopne
aad
arpl
js
pop
lds
add
adc
xchg
dec
cmp
and
and
push
or
das
es
sbb
pop
in
xchg
dec
cmp
add
add
sub
dec
mov
and
and
testb
test
push
add
push
sub
add
das
es
orl
outsl
push
sub
aas
add
add
and
and
testb
push
dec
test
test
add
imul
outsl
add
jae
and
dec
jb
addr16
pop
add
sbb
add
sbb
dec
add
pusha
mov
addr16
jl
jle
dec
test
testb
and
add
or
pop
add
add
add
add
cmp
outsl
outsb
gs
push
inc
inc
add
add
aad
add
add
add
add
add
add
add
add
add
rolb
add
inc
add
add
inc
push
add
add
add
add
cmp
jae
add
xor
gs
add
in
call
jge
sbbb
lea
adc
add
add
add
add
cs
loop
out
out
out
out
out
out
out
out
out
out
out
ja
ja
ja
ja
ja
add
nop
xor
add
add
xor
mov
sub
add
xchg
addb
test
roll
pop
jo
adc
testl
add
add
and
xchg
jl
mov
cld
std
fbstp
mov
addb
pop
add
cmp
add
stc
jmp
addr16
pop
clc
xchg
cmp
add
add
push
jno
insb
pusha
bound
insl
pusha
outsb
insl
pop
jae
popa
jno
insl
je
pop
fdivr
cmpsl
mov
mov
xchg
adc
jg
and
jg
lret
sti
push
xchg
je
pop
adc
movsbl
mov
jg
sub
pop
jmp
andb
push
dec
lock
jg
arpl
test
jg
iret
incb
push
jg
add
sar
mov
xor
call
mov
sbb
cld
cli
adc
lahf
jmp
pop
xchg
cli
mov
out
cli
icebp
jg
jo
daa
jo
std
scas
cld
out
lcall
dec
mov
jmp
pop
push
jo
aas
pop
insb
mov
lcall
std
pop
nop
call
icebp
ljmp
scas
dec
lods
add
es
call
icebp
mov
pop
fwait
pop
inc
repnz
lea
lret
jmp
out
xlat
xchg
mov
push
mov
mov
ret
pop
ja
fdivl
nop
into
mov
in
xchg
in
mov
mov
adc
sbbb
or
inc
cmp
mov
mov
lret
jno
and
ds
dec
les
pop
sbb
jb
ja
aaa
and
push
xchg
inc
mov
xchg
cmpl
fs
pusha
pop
xchg
inc
pop
jne
fstl
lods
aas
imul
sbb
lret
pop
or
inc
cmp
mov
dec
daa
fwait
cmpsb
xchg
pop
cmpsl
jge
repnz
inc
mov
pusha
mov
or
push
mov
fs
jo
pop
push
pushf
dec
rcr
inc
lret
subl
popf
xlat
and
loope
scas
pop
mov
sbb
pushf
ret
imul
xlat
jecxz
and
mov
jle
pushf
mov
out
aad
mov
push
cmp
imul
lock
and
xchg
mov
notb
cltd
movsl
int3
jae
popa
nop
or
jo
add
stos
dec
mov
and
lods
fcmovnu
fdiv
loope
push
jo
pop
test
stc
dec
fidivrs
shl
les
pop
xor
mov
ret
je
fistl
or
push
push
mov
inc
sub
mov
fistl
pop
mov
dec
inc
push
dec
sbb
dec
andb
xchg
push
jo
mov
or
testl
ret
testb
or
ret
push
inc
cli
les
lcall
cld
dec
hlt
xor
add
pop
into
je
cs
fisttps
sub
and
jnp
mov
inc
jl
jge
push
std
pop
aaa
sarl
inc
or
mov
dec
leave
in
push
inc
rcrl
push
jns
sbb
insb
mov
pushw
das
mov
jnp
jns
jl
sti
push
hlt
lock
lret
ss
cs
jecxz
movsb
in
dec
push
cmp
sti
arpl
fcomip
xchg
out
xchg
push
lahf
adc
cli
mov
xorl
xorl
cmc
jg
mov
mov
push
insl
push
test
scas
cmp
lret
mov
dec
arpl
roll
shrb
mov
pop
pop
je
jge
or
aam
jae
fildl
repz
gs
daa
xchg
and
cmpsl
aam
daa
mov
or
aas
lock
jno
jbe
jp
cld
push
xor
je
icebp
pop
ror
pop
dec
stos
jge
mov
adc
loop
imul
loopw
dec
das
inc
das
popf
jl
jo
aas
or
into
add
das
cmpl
push
inc
fwait
pop
lret
dec
mov
mov
fwait
or
std
push
xchg
orb
mov
dec
push
fimuls
and
sbb
push
inc
adc
sbbl
loope
fxch
mov
xchg
sbb
out
mov
scas
mov
fadds
lret
int3
idiv
add
jnp
ljmp
pop
das
out
insl
addl
mov
cmpsb
test
inc
movsl
and
xor
aaa
push
ret
sarb
xor
insb
je
xchg
shrb
andb
out
enter
es
std
mov
sub
aad
dec
xchg
xchg
dec
jmp
mov
push
fwait
xor
push
push
js
lds
cmpsl
pop
mov
vmptrst
xchg
push
cmpl
in
aam
xchg
pop
ficompl
adc
mov
popf
cwtl
and
shll
pop
or
cmp
dec
inc
push
int
pop
or
cld
mov
and
xchg
lds
int
cmp
xor
dec
rolb
ds
mov
jmp
xchg
shll
adc
mov
lret
mov
jl
and
in
sub
dec
xchg
jle
lods
sarb
int
aaa
not
rcl
out
out
popa
out
xor
repz
lock
cs
orb
dec
cmp
clc
jb
inc
ret
sarl
sub
out
aaa
mov
mov
jg
fists
test
pop
fldl
mov
dec
orl
int3
jns
inc
insb
push
scas
sbb
roll
mov
aam
cmp
shll
cmc
nop
inc
iret
repz
aam
scas
bound
ja
scas
pop
shll
push
push
insl
cmpsb
sbb
mov
push
aad
loop
jmp
xchg
insl
pop
ja
movsb
dec
test
bnd
sti
lods
xchg
lds
push
mov
add
jg
cmp
popf
popa
imul
cwtl
push
arpl
sbb
xor
lock
ffreep
mov
pusha
mov
aad
adc
sub
cltd
flds
movsl
mov
xchg
lret
xor
inc
test
fbstp
push
mov
dec
xchg
mov
sub
test
pop
mov
iret
xor
lahf
clc
addl
aam
push
icebp
mov
or
out
dec
or
adc
pop
inc
jmp
lcall
dec
xor
and
sbb
stc
jb
adc
add
js
xor
pop
shlb
push
sbb
subb
fsubrl
pop
cmpsb
stos
fsts
sbb
stos
jle
in
jb
xchg
loop
mov
ror
sahf
add
fucomi
sub
shl
std
ds
daa
adc
scas
ds
dec
mov
push
sub
inc
or
test
mov
pop
pusha
data16
stc
addr16
ss
out
xor
push
jne
jbe
lret
cmp
out
push
pushf
push
popa
mov
test
xchg
arpl
leave
adc
outsb
pop
roll
or
iret
out
iret
pusha
imul
sbb
adc
pusha
or
lret
mov
jno
cmp
xchg
or
xchg
cld
jnp
xchg
mov
into
cmp
stos
jne
rcr
lea
cli
cltd
xor
fs
cs
or
cmp
mov
fmull
lock
popf
insl
mov
or
addb
push
mov
sub
mov
sub
mov
sbb
cmp
cmpsb
fidivs
pop
adc
xor
cli
adc
in
addr16
std
aas
data16
sbb
cmp
fsubrl
dec
pop
popf
adc
mov
out
outsb
in
cs
hlt
frstor
sbb
inc
dec
ficoml
stc
shlb
sti
stc
lds
int
inc
mov
mov
cli
add
push
pop
fadds
enter
xor
add
xor
lods
mov
cmp
and
mov
lret
sbb
out
jae
xchg
loopne
inc
fstp
cmpsl
sbb
add
das
lcall
or
test
xor
stos
mov
rcr
mov
lahf
sub
fisttps
roll
xor
sti
fcoml
pop
inc
ffreep
add
inc
xchg
pop
sbb
adc
dec
cmp
mov
lret
pusha
adc
push
orb
fidivrs
inc
push
adc
jno
popf
cld
jnp
mov
leave
lock
xchg
push
sub
aam
leave
fcmovbe
add
cld
sahf
push
push
sub
cmp
call
aad
mov
fildl
push
mov
scas
nop
andb
cmp
sar
outsb
lret
call
inc
jo
or
adc
scas
jo
ret
xchg
inc
pop
test
pop
and
test
lock
std
js
dec
cmp
mov
cmc
jbe
ljmp
dec
jo
and
in
subl
mov
int
int
dec
arpl
cltd
xor
loopne
or
adc
pusha
sub
dec
stos
sbb
mov
xchg
or
dec
jno
push
icebp
es
and
cmp
push
xor
cmpsb
negb
out
ret
pop
dec
pushf
inc
pop
sti
jmp
ja
xchg
repz
xor
pusha
fdivrs
or
add
xchg
dec
mov
lea
movl
movsl
lds
adc
popa
ja
imul
mov
js
pop
and
sarb
negb
popa
or
mov
xchg
ret
call
pop
mov
dec
and
mov
push
shlb
cs
lock
cltd
cwtl
lods
dec
cli
loop
repnz
adc
out
cmp
sbb
stc
jns
dec
inc
imul
fistpl
or
pop
clc
and
xchg
out
imul
fimull
mov
mov
arpl
mov
out
cltd
sbb
sub
bnd
ja
fs
and
in
outsb
push
mov
imul
xchg
popf
call
ds
cmpsl
mov
outsb
mov
cmp
lret
hlt
mov
dec
cwtl
cmpsl
pushf
hlt
push
inc
aas
dec
add
push
sbb
in
mov
add
inc
mov
adc
data16
push
pop
push
movsb
fimull
cli
inc
push
out
and
mov
adc
mov
out
jnp
hlt
xchg
and
aaa
lret
mov
pushf
mov
sbb
fsts
popl
inc
lret
sbb
movsl
and
xchg
sub
sbb
leave
add
cmp
clc
push
cmp
xchg
pop
cltd
sbb
sub
ror
mov
mov
mov
aaa
push
aad
nop
mov
xor
stc
mov
dec
xor
rolb
or
insb
in
xchg
push
push
subb
or
in
adc
pop
fimuls
divl
adc
js
jle
xor
cmpsb
sbb
sbb
adc
dec
fs
dec
int3
and
in
enter
repz
inc
icebp
pushf
jecxz
dec
mov
mov
call
sar
std
push
repz
sbb
push
jnp,pn
es
xor
ret
popa
jge
cmp
aas
xor
cmpsb
bound
icebp
test
insl
jno
out
test
out
jne
add
or
dec
cltd
fcmovb
loop
call
cmpsl
in
roll
out
sub
push
stos
push
dec
jbe
push
ficoms
push
adc
mov
cs
lahf
lods
push
sbbb
push
jnp
enter
push
data16
icebp
push
push
mov
xchg
cmp
rcrb
fxch
shlb
aad
std
sbb
stos
scas
jbe
push
xor
std
rolb
sub
das
inc
scas
or
pushf
sub
or
fildl
cmp
scas
xor
out
ja
movsl
xor
movsb
leave
movsb
xchg
push
ss
jp
movsb
and
xchg
iret
shll
hlt
mov
add
f2xm1
and
push
and
adc
clts
fxam
mov
lods
xchg
stc
mov
stos
imul
gs
push
shr
mov
pop
insb
pop
bound
pop
cmpl
bound
cmp
jp
inc
outsb
sub
inc
mov
ret
xchg
fisubrl
inc
fcmove
fwait
int3
cld
roll
sub
xchg
repz
and
test
pop
fs
xchg
mov
ds
roll
cmpsb
sub
jl
mov
lea
data16
les
daa
mov
cmp
push
fstpl
sbb
mov
and
pop
mov
aad
icebp
sbb
and
jo
jo
fs
bound
adcb
int3
cmpsb
jge
insl
movsl
cmpsl
adc
fidivl
jae
sbb
out
mov
enter
call
sub
sub
mov
fdivr
lahf
push
cmpsb
lret
jno
call
and
je
push
repnz
das
je
shrb
jl
aam
xor
inc
add
sbb
cmpsb
cmp
dec
rcll
cld
data16
outsl
std
mov
insl
movsl
inc
cmp
adc
int
movsb
push
leave
arpl
and
js
jl
int
das
xlat
test
sub
add
push
sub
shll
jmp
mov
es
rcr
sbb
mov
int3
mov
xchg
pop
iret
mov
cmp
addr16
adc
in
mov
mov
std
jmp
mov
int3
add
out
rorl
xlat
add
fcomps
pop
mov
repz
pop
mov
jg
jo
add
and
mov
sub
or
ret
sar
pop
inc
jo
int3
loope
xorl
int
test
or
or
dec
mov
pop
jb
dec
in
dec
sbb
pop
sahf
mov
arpl
jnp
push
fsubrs
aad
icebp
lret
xchg
adc
out
lahf
inc
loopne
mov
dec
cmp
cmc
std
xor
lcall
ror
push
lock
pop
fsubrs
mov
mov
fcom
add
sub
add
sub
repz
movsb
out
call
rorl
std
or
dec
mov
sub
adc
fdivs
mov
adc
rcr
inc
inc
idivl
aam
std
mov
addb
aad
mov
fwait
dec
jns
movl
pop
sub
push
xor
loop
push
insl
lret
or
in
pushf
jmp
push
xor
loop
scas
outsl
cwtl
xlat
jg
mov
xor
insl
rcrl
addr16
mov
xor
mov
xor
rolb
clc
add
fldt
lahf
lods
dec
neg
testl
pop
or
mov
xor
pop
subb
xchg
sbb
and
sahf
push
leave
icebp
addr16
sub
mov
inc
insb
imul
ss
loopne
or
movsb
mov
adc
jo
mov
ret
add
data16
pop
ljmp
adc
in
je
inc
cmp
cs
out
loopne
rolb
adc
popa
cmp
es
ret
into
or
rcll
aaa
push
andb
mov
cltd
test
xor
cmp
mov
in
jp
fdivrs
icebp
mov
mov
sbb
bound
jmp
repz
add
test
call
xor
inc
push
movsl
mov
test
test
inc
xor
jno
lahf
xor
fisubs
in
aad
cwtl
pop
push
cwtl
lcall
inc
adc
mov
cmpsl
pusha
dec
and
hlt
in
inc
gs
idivl
icebp
sbb
ds
loop
lret
hlt
add
in
add
and
xor
outsb
jge
xchg
fldt
call
jns
xor
imul
shll
enter
sbb
pop
in
jecxz
jge
aam
mov
addb
addb
testl
sti
and
and
push
nop
xor
pop
pop
out
mov
dec
lods
inc
mov
lcall
insb
jo
jl
pop
and
arpl
dec
jbe
push
stc
movsb
in
add
xchg
loopne
mov
imull
push
adc
mov
scas
leave
ret
sub
jbe
dec
out
pop
add
ret
dec
sub
ljmp
pop
mov
add
loope
das
jns
lret
inc
fsubrl
cld
jmp
jns
ja
fdivr
mov
push
dec
fdivrs
das
shll
cmp
cmpsb
sub
scas
push
pop
mull
repnz
std
loopne
mov
cmp
xor
xor
mov
inc
leave
divl
sub
sub
lret
mov
test
imul
fcompl
pop
xor
push
dec
sbb
add
jns
popa
fcmove
xlat
cmpsb
pop
out
insl
lods
fs
or
or
pop
xchg
lock
sub
aad
stos
push
or
inc
leave
cmpsl
or
jns
mov
cmp
adc
lea
add
lret
and
sub
inc
sbb
in
jle
xchg
xlat
xor
mov
sbb
jg
sbb
add
enter
lds
into
fsubs
loopne
movsb
ljmp
aas
push
shrl
push
mov
mov
ret
jp
push
pop
inc
xor
ljmp
and
sti
fwait
jp
inc
mov
jmp
push
add
sarb
push
fildl
idivl
mov
loope
pop
ds
stos
loop
or
add
mov
cmp
jo
sbb
fildl
push
ljmp
inc
daa
pop
mov
sti
pop
insl
imul
test
adc
pop
cmp
ret
andb
and
jl
sbb
bound
enter
arpl
mov
call
or
dec
xor
jno
and
sbb
add
aam
cmp
test
fildll
pop
stos
xchg
mov
xchg
adc
shlb
mov
xchg
cmp
jb
dec
adc
out
mov
inc
pop
in
ret
pop
bound
iret
mov
daa
pop
icebp
push
loop
cmp
pop
cli
and
fiadds
not
pop
push
in
pop
push
add
fildll
or
int3
int3
je
loope
into
in
int
ss
lret
inc
lcall
inc
shlb
inc
lea
dec
mov
stos
enter
xor
cwtl
jle
sti
push
xor
lret
into
xor
jl
lret
stos
mov
loop
xchg
cmp
xchg
js
shl
clc
outsl
mov
mov
data16
pop
add
mov
repnz
pop
repz
mov
es
imul
mov
ljmp
mov
pop
inc
mov
nop
je
mov
sbb
popa
jmp
es
push
ds
pop
stos
je
xorl
addr16
fwait
sub
adc
and
sbb
push
dec
add
aad
xchg
stc
mov
mov
inc
mov
xor
cld
xor
lods
xchg
out
adc
xor
push
popa
mov
imul
mov
into
sub
fnstcw
xchg
push
enter
mov
mov
cmpsb
jne
lahf
out
cmp
push
jp
mov
push
dec
jle
inc
jns
jo
ja
and
fsubrl
xor
incb
jns,pt
push
xor
xchg
addb
fnstsw
cmpsl
xchg
popa
adc
cmp
push
mov
mov
mov
push
out
cmovge
and
inc
cmp
cmp
mov
pop
push
adc
mov
xor
mov
mov
push
push
pop
lcall
fwait
movsb
and
xchg
inc
push
cld
xor
std
mov
fcomps
lahf
out
les
pop
xchg
cmpsb
dec
aaa
lds
and
cltd
add
jl
adc
or
add
inc
and
jo
sbb
push
push
aad
fsubs
clc
jmp
lods
cmc
cmc
mov
jg
fistl
pop
fidivl
shll
es
push
lock
sbb
push
add
cmc
inc
or
in
mov
outsb
jne
std
xchg
cmc
push
imul
shr
mov
test
pop
jle
rorl
pop
mov
aad
mov
mov
dec
mov
imul
jecxz
cmpsl
clc
call
adc
add
std
xchg
mov
sahf
out
movsb
movsl
or
outsb
inc
or
fstpt
out
icebp
scas
and
cli
js
out
or
sub
stos
pusha
inc
jge
or
out
das
stos
push
add
mov
out
mov
movl
leave
mov
ficoml
add
push
jns
jge
idiv
movsb
lahf
ret
popa
pop
pop
fwait
sahf
and
ret
cmp
incl
jmp
adc
outsl
jg
mov
pop
lahf
loopne
pop
push
sbb
mov
add
dec
rcrl
fdiv
mulb
out
mov
nop
lods
mov
movsl
sub
sub
xor
push
movsb
pop
xchg
inc
lods
sbb
sub
jns
push
subl
xor
push
mov
in
cmp
xchg
jmp
or
nop
das
jle
mov
or
jne,pt
jb
fs
lahf
daa
movsl
mov
xorl
pushf
outsl
je
mov
fidivrs
scas
xchg
fdivl
inc
pop
pushl
inc
imul
mov
add
test
or
sti
sub
inc
add
rcr
cmp
fisubrl
dec
jmp
or
mov
xchg
jl
push
repz
bound
mov
in
arpl
add
bndstx
add
or
jns
outsb
jo
setle
ja
xor
mov
adc
xchg
or
lret
cmp
sarl
aad
jo
repnz
idiv
ljmp
lods
jae
xchg
push
orl
mov
movsl
inc
dec
mov
and
imul
stos
cmp
and
mov
enter
xchg
sub
stc
jnp
gs
jno
xor
leave
mov
filds
push
jb
adc
insb
dec
mov
mov
mov
lods
out
inc
xchg
cs
lods
icebp
dec
in
or
mov
inc
sbb
push
jo
lods
mov
imul
fidivs
cmp
rclb
jo
pusha
loope
aad
ljmp
je
ja
call
data16
sub
and
cmp
sub
hlt
push
aas
dec
jae
xor
adc
jmp
xlat
int3
and
aad
cmp
fsubs
enter
mov
lret
iret
xor
gs
scas
xchg
sbb
pop
cmp
aaa
lods
xor
flds
inc
aaa
popa
scas
pop
xor
jne
cli
mov
sbb
or
das
pop
or
and
jno
xchg
mov
fisttpl
sbb
stc
jb
aam
jnp
bound
shll
cld
lret
sbb
aad
dec
add
adc
mov
or
repnz
xchg
mov
and
xlat
mov
push
loopne
and
leave
dec
mov
push
dec
les
mov
adc
sub
adcb
je
mov
cmp
leave
lds
lret
mov
scas
imul
dec
sub
sub
adc
int3
push
bound
outsb
iret
lods
jmp
std
or
jmp
mov
clc
lods
mov
rol
cmp
push
mov
mov
sbb
hlt
mov
rcrl
pop
mov
push
xchg
push
repnz
xchg
fdivrs
sub
add
les
aaa
cmpsl
and
and
das
adc
sbb
mov
push
test
in
stos
ljmp
jecxz
insb
cli
jo
and
xchg
push
inc
cmp
nop
test
rcll
xchg
cmpsl
aam
scas
lcall
mov
lret
sbb
inc
stos
sbb
lahf
inc
push
mov
scas
xchg
jo
xorb
std
adc
gs
dec
das
add
jb
lret
jnp
pusha
popf
insl
mov
popf
push
sbb
push
movsl
jae
ljmp
in
dec
ds
jl
mov
pop
push
jecxz
in
mov
xor
lret
pop
or
orl
add
jge
cmp
add
push
in
loopne
mov
psraw
rcl
lock
mov
xchg
jl
pop
xor
dec
insl
jg
sarb
sub
add
mov
movsl
and
inc
call
rorl
cs
inc
mov
popf
xorb
cmp
and
lods
imul
bnd
push
push
push
push
cmp
jl
sbb
movsb
test
inc
sbb
insl
icebp
test
cmp
cltd
movsb
testb
test
xchg
dec
mov
and
jp
mov
xor
leave
or
cmp
mov
sbb
dec
adc
out
push
lock
fldenv
or
cmp
lret
sub
mov
popa
adc
mov
lods
imul
scas
sub
jbe
dec
push
mov
sub
addb
dec
lods
xlat
inc
dec
ja
out
sub
and
in
or
ljmp
dec
inc
and
fstpl
xchg
sbb
scas
mov
add
push
decl
out
out
roll
rorl
in
shr
inc
cmp
dec
mov
fldcw
adc
ds
and
lds
jmp
jbe
pop
lcall
push
call
jno
ss
jae,pt
xor
imul
in
scas
clc
mov
mov
mov
xor
test
pop
orl
lret
cmp
mov
ret
aam
xchg
xchg
inc
push
mov
iret
stc
pop
sub
mov
adc
fwait
add
stos
shll
cwtl
cmpsl
inc
add
and
cmp
mov
loopne
mov
pop
test
mov
jmp
jmp
aas
cmpsl
mov
ljmp
push
xchg
rorb
xchg
lock
outsl
or
sbbl
or
sti
mov
lahf
enter
ds
notb
cmpsb
pop
push
sbb
in
and
sbb
ret
insb
popf
stc
arpl
lahf
jg
movsl
jle
inc
xor
mull
idivb
cs
test
incl
pop
mov
dec
pop
dec
hlt
das
stos
push
mov
maxps
movsl
mov
test
je
jecxz
arpl
adc
loop
jns
jo
sahf
jge
xor
aaa
mov
pop
cld
mov
add
dec
add
ss
jecxz
mov
repnz
clc
pop
cmp
fimull
js
aas
or
dec
call
mov
cmp
mov
js
jne
inc
cmp
sub
sbb
inc
stos
gs
sub
push
jo
pusha
sar
or
scas
mov
imul
fcom
cmpsl
dec
cmpsl
imul
mov
dec
es
sbb
sub
aas
rol
cltd
jle
loopne
push
and
mov
dec
sub
in
gs
mov
xchg
mov
cmpsl
sar
int3
pop
xchg
or
pop
inc
push
pop
jno
sub
ljmp
mov
cmp
insl
jno
mov
jg
aam
sbb
in
stc
aas
out
addr16
sub
mov
aaa
sbb
or
pop
das
mov
jp
cltd
sbb
mov
imul
pop
fidivs
mov
ja
data16
inc
inc
out
pop
dec
or
push
add
mov
pop
jns
mov
js
push
add
mov
fwait
lea
je
add
adc
into
push
movsl
rorb
fdivrs
fistpl
lret
mov
pushf
sti
xchg
xor
inc
push
outsb
and
pusha
data16
out
jae
lret
sub
daa
leave
mov
xor
push
js
mov
outsb
ljmp
mov
push
aad
pop
lods
cmp
add
mov
or
inc
or
mov
mov
adc
data16
in
outsl
pop
xchg
mov
ficomps
sti
stos
in
inc
and
xor
imul
addr16
xor
sub
jns
mov
mov
pop
mov
adc
or
sbb
inc
inc
cmp
jb
sbb
dec
dec
mov
into
cmp
cmpsl
jl
push
add
add
leave
jle
and
test
and
and
daa
out
cmpsb
sbb
bnd
mov
mov
cs
push
push
cwtl
out
test
lock
mov
idivl
add
rcr
xor
push
test
xor
adc
mov
nop
dec
xchg
sub
mov
add
lret
movsb
int
je
cmpsb
pop
cmp
lahf
ret
push
cltd
jle
enter
aad
xchg
sti
ja
xchg
lods
flds
ljmp
add
je
xor
rcr
cmp
aad
movsb
mov
cmp
lret
mov
lock
aam
dec
mov
xor
xor
loopne
push
sub
adc
fdivrl
sahf
addr16
aam
imul
enter
xchg
emms
cmp
sbb
jecxz
mov
or
imul
pusha
lret
or
pop
mov
and
push
xchg
inc
xchg
das
xchg
mov
sarb
out
dec
dec
faddl
enter
adc
cs
orl
inc
leave
ljmp
pusha
push
hlt
rcrl
data16
dec
inc
xchg
scas
push
jmp
jbe
lock
shlb
call
mov
stc
add
ljmp
add
sbb
test
aas
stc
int3
push
mov
jp
into
add
and
loope
in
pop
jl
call
mov
stos
mov
or
stc
xchg
cwtl
xor
stc
out
jo
lahf
sub
mov
pusha
jp
iret
aas
sub
lea
jp
lods
cmpb
mov
jp
sub
sti
leave
push
fs
arpl
inc
cmp
cmc
cmp
clc
sub
sub
outsb
cli
adc
xchg
inc
sbb
neg
fwait
cmpsl
arpl
lea
pop
test
icebp
push
data16
stos
xchg
and
lret
jmp
clc
pop
sti
sbb
and
inc
aas
cmpsl
cmpsl
sub
sub
dec
mov
or
into
mov
clc
stos
gs
sub
call
out
sarl
jmp
push
int3
mov
push
pushf
scas
cmpb
sbb
repnz
in
mov
cmpsl
test
sub
pusha
sbb
rclb
adc
nop
roll
and
inc
mov
testb
xchg
xchg
sub
outsl
mov
iret
pop
jo
jnp
mov
or
sub
push
shlb
mov
xchg
jl
adc
in
mov
rolb
jae
jecxz
jl
js
push
sbb
xchg
lds
outsl
push
outsb
xor
adc
fisubl
sarb
mov
out
xchg
and
clc
jmp
cmp
sbb
cmc
in
rolb
call
push
insb
add
inc
inc
push
mov
push
inc
add
ret
lods
ret
jge
or
les
jp
fstl
int3
fildl
push
mov
push
push
jp
jbe
push
adc
pusha
push
xor
adc
jnp
insl
push
xor
rcl
jno
rclb
fistl
imul
xor
push
and
imul
push
dec
dec
xchg
jl
sarl
ret
ljmp
imul
lods
int
hlt
movsb
xchg
adc
fldl
leave
dec
dec
cli
in
cli
movsl
ljmp
in
scas
into
xchg
shlb
push
insl
orb
pop
int3
adc
outsl
xor
loopne
in
xor
dec
pop
lret
dec
ficoml
lahf
loopne
adc
outsb
xor
ret
test
insb
add
inc
xchg
mov
mov
call
or
xchg
fsubs
pop
data16
pop
push
jmp
popa
sub
cmp
push
mov
popa
fidivs
jb
lret
lods
xor
jecxz
add
pop
or
pop
inc
pop
cmp
roll
in
test
ss
mov
xor
fwait
lods
mov
mov
jnp
jge
push
jmp
xchg
in
xchg
int3
test
out
mov
jl
sbb
sbb
je
mov
pop
or
ss
popa
mov
adc
xor
sub
movsl
int3
movsl
out
xchg
mov
out
int
aad
dec
sbb
enter
push
push
adc
test
or
or
sub
jmp
and
iret
popa
out
int
idivl
shr
push
nop
addr16
jb
and
or
xchg
lret
xchg
shll
lahf
js
and
out
movsl
ds
jecxz
pop
inc
mov
mov
addr16
out
dec
and
xor
adc
mov
or
hlt
xor
jecxz
scas
push
xchg
jbe
push
mov
xchg
cli
out
ret
push
fcmovnu
cltd
in
cli
sbbb
mov
loopne
sbb
xor
mov
pop
imul
mov
xor
cmp
sub
jo
into
mov
jns
sub
dec
pusha
mov
and
mov
test
and
mov
mov
inc
mov
xor
out
out
aam
xchg
lods
leave
jg
push
jno
je
gs
je
aas
mov
sub
sub
fldenv
scas
sbb
mov
and
dec
enter
dec
fldenv
cld
fldt
dec
xchg
mov
sbb
and
mov
dec
frstor
mov
int3
mov
sbb
fisttpll
mov
sub
adc
mov
repnz
fdivrs
add
repnz
cmp
mov
in
xchg
pop
aam
xor
sbb
hlt
pop
lods
imul
sbb
cmp
push
daa
cmp
lretw
pop
adc
sbb
add
clc
sub
lret
xor
mov
xchg
dec
xor
cli
test
add
test
xchg
mov
ljmp
stos
jl
pop
subb
fs
adc
shl
int
aaa
out
sbb
roll
add
fcmovu
arpl
inc
stos
sarb
notb
mov
cli
call
setne
addb
xchg
add
leave
lods
fisubrs
stc
imul
movsb
clc
adc
lods
jmp
mov
mov
dec
xor
les
ja
scas
clc
push
adc
rolb
mov
bound
cmc
in
int3
dec
faddl
pop
inc
and
and
mov
xor
sbb
popf
stos
sbb
popa
mov
iret
aas
adc
sub
daa
sbb
or
cli
mov
enter
aad
dec
inc
lods
or
outsb
out
jbe
push
imul
mov
add
sub
fisubrl
push
sbb
dec
call
mov
insb
mov
pop
jl
dec
or
das
sbb
jg
mov
pop
shlb
icebp
fistps
xchg
pop
dec
sub
ret
push
lret
jne
lret
int
jg
stos
mov
mov
add
sub
dec
enter
js
rcrl
pop
dec
in
call
sub
fsubrs
out
iret
adc
jbe
pop
mov
push
push
int
xor
pop
add
mov
push
js
addl
jp
cmp
fdivrs
ss
sbbl
scas
aas
pop
push
pop
mov
sub
lahf
pushf
repnz
mov
pop
mov
jmp
inc
and
scas
jnp
mov
inc
push
and
addr16
sbb
jl
mov
sbb
cmovne
push
mov
cmp
repnz
insb
push
aas
sbb
jge
pop
mov
xchg
cmp
pop
adc
sub
or
enter
cmp
vpmacssdd
pop
xchg
cli
mov
pop
adc
push
imul
push
inc
rcr
xchg
pop
mov
pop
adc
mov
in
push
iret
xchg
fdivrs
imul
inc
xor
fnstsw
addr16
test
fnsave
push
jno
mov
jnp
out
cmpsl
xlat
lret
repz
mov
push
sbb
sub
outsb
adc
inc
cmp
jb
pop
gs
mov
sub
xor
stos
push
push
mov
in
cs
cmp
outsb
pop
das
je
xor
or
cli
out
dec
outsl
adc
jno
stc
add
cmovae
scas
testl
or
je
mov
inc
lret
out
dec
loopne
dec
pop
xchg
fmulp
push
dec
pop
daa
adc
out
push
cld
sbb
push
adc
mov
leave
ret
xor
jmp
loope
push
add
lahf
imul
movsl
repnz
mov
jmp
fs
fistps
in
xchg
dec
mov
cmpsl
mov
jle
pop
mov
mov
rclb
out
out
cld
ja
cmp
mov
pop
enter
sbb
jmp
dec
sub
or
adc
mov
mov
repnz
decb
inc
repz
and
outsb
pop
mov
mov
fisttpl
or
stos
add
lock
or
sub
add
mov
inc
std
mov
aam
rcr
mov
push
loopne
repnz
fsubl
test
xchg
xor
je
fldenv
adc
movsb
andl
or
push
fsubl
xchg
dec
jp
or
adc
xchg
xchg
xchg
repnz
aad
cmp
cmp
ss
lahf
test
test
aaa
shrb
sbb
and
loope
dec
add
mull
jge
lahf
lds
das
lods
add
ja
xchg
mov
mov
sbb
rcr
sbb
xchg
ss
sbb
cmp
inc
cs
pop
imul
pop
fstps
inc
stos
push
xor
call
add
ljmp
inc
cld
xor
test
popa
stc
sarb
dec
mov
call
insb
inc
test
fsubrs
cmp
mov
adc
cmp
mov
loopne
inc
dec
push
int3
addr16
or
xchg
pushf
out
cli
fcomip
lods
adc
mov
inc
repnz
jo
or
outsb
les
test
ret
addr16
idivb
cmp
jo
fidivrl
mov
xchg
and
mov
ja
add
push
and
jecxz
cmp
into
stc
imul
jecxz
sar
xlat
push
mov
mov
mov
xchg
scas
test
aaa
pop
xchg
std
push
jbe
cltd
sarl
sbb
pop
pop
call
mov
push
push
je
mov
pop
dec
jb
jg
arpl
sbb
sti
loope
adc
mov
in
jp
lock
pop
sti
xchg
adc
adc
and
imul
in
sbb
dec
enter
clc
std
iret
pop
fldenv
movsl
add
add
sti
or
std
jp
jp
pop
cmpsb
and
or
test
mov
hlt
popa
push
push
sub
or
fs
testl
aad
lcall
popa
fnstenv
in
pushf
lock
jge
cli
repz
in
stos
jbe
lret
push
jle
shll
ficoms
jecxz
inc
add
and
sub
bound
mov
aas
xchg
outsb
loopne
jmp
or
shr
ljmp
in
sbb
arpl
popf
xor
pop
arpl
jmp
pop
out
xor
cld
cmp
pop
shl
inc
sub
repz
sbb
lcall
add
out
int
inc
mov
mov
imul
test
push
bswap
mov
push
mov
fistpl
lret
cmp
sub
mov
sbb
jg
push
jp
clc
test
inc
mov
hlt
fucom
daa
and
add
popa
loop
and
push
or
lock
fiadds
repnz
dec
xchg
sbb
test
mov
pop
aas
loop
les
and
lret
cli
cmp
mov
pop
or
mov
pop
cmc
outsl
mov
das
xorl
sub
call
xor
shrl
pop
sub
clc
test
lahf
or
movsl
ljmp
out
cmp
mov
mov
dec
push
lcall
xchg
push
sub
sub
dec
pop
in
sub
xchg
icebp
cmc
mul
xor
xchg
push
xchg
fimull
test
add
punpckldq
sub
or
insl
sbb
ficoml
or
jp
cmp
or
test
and
fistps
in
mov
sub
repz
push
pop
or
jbe
cmc
and
scas
and
xor
xchg
imull
jne
cmp
outsl
scas
ret
sub
scas
sahf
sbb
test
outsb
int
mov
push
xor
sarl
scas
iret
pop
ret
fadds
in
mov
mov
int
mov
pop
ljmp
jmp
int
jnp
pop
cli
fadds
sti
add
jb
mov
outsl
ret
fcmovne
mov
jecxz
lods
or
lds
cld
arpl
lret
adc
hlt
insb
cmp
jg
incl
xor
or
mov
arpl
stos
xchg
push
mov
mov
testb
cmc
mov
mov
rcrb
fcomps
push
jge
mov
jl
lahf
xor
dec
pop
std
sti
lret
out
mov
popf
ljmp
or
push
push
mov
pop
xor
adc
inc
pop
bound
in
rolb
mov
mov
call
fbstp
call
sbb
mov
sahf
add
sbb
xor
cmp
je
mov
loop
scas
movsb
jmp
into
pop
mov
lahf
dec
cmp
adc
or
pop
xchg
xchg
add
mov
dec
mov
mov
xadd
push
adc
ja
pop
inc
push
std
ss
inc
sub
subl
xor
sbbl
jno
fisubs
xchg
pop
push
xchg
dec
out
dec
inc
addr16
stos
hlt
sbb
aam
aas
cltd
dec
push
orl
lahf
jge
mov
pop
adc
or
ret
jbe
lea
sbb
subb
aas
lcall
fs
imul
test
add
mov
mov
test
lds
repz
call
push
and
js
mov
aam
test
and
jne
lcall
mov
imul
hlt
lods
add
pop
mov
cmc
fprem1
lahf
in
xorl
inc
shlb
xor
int3
adc
fcompl
das
lods
ds
pop
add
mov
adc
call
addr16
jle
mov
add
push
pop
lea
loopne
xchg
sarb
pop
lock
arpl
out
enter
xchg
mov
inc
and
repz
push
icebp
inc
jecxz
push
xchg
fnsave
xchg
push
das
push
les
cltd
out
rorl
fistps
shll
push
xor
sarl
inc
mov
inc
mov
test
mov
cmp
idivb
lods
lea
or
mov
xchg
arpl
pop
xchg
imul
inc
mov
mov
jp
loope
divl
or
leave
ljmp
sarb
mov
bound
popf
in
sub
fsubrs
subb
sti
sbb
push
daa
cmp
sarl
inc
jecxz
mov
mov
cld
fadd
xor
inc
cmp
xchg
stc
popa
incl
jmp
aaa
jbe
cmp
outsb
imul
aaa
push
leave
ljmp
mov
and
gs
fidivrs
jl
xchg
movb
mov
notb
xlat
fucomi
bound
xor
add
outsb
pop
sahf
add
mov
sbb
or
jbe
in
int3
dec
mov
or
repnz
insb
cmp
hlt
and
xor
add
sbb
test
xchg
adc
sub
test
push
lret
xor
inc
sahf
int
cltd
jle
mov
nop
or
add
or
sar
pop
ret
sbb
dec
mov
inc
into
cwtl
jmp
loope
mov
into
lods
ret
pop
mov
imul
mov
pop
add
pusha
push
jge
ja
cmc
addb
xor
dec
cmp
lods
adc
test
mov
hlt
in
push
lds
add
mov
stc
mov
adc
jecxz
insb
mov
lock
sub
mov
mov
out
cmp
ljmp
sahf
cs
inc
pop
add
sub
lret
xchg
jle
mov
lcall
or
arpl
lahf
add
arpl
inc
jmp
mov
aad
adc
ja
cvtdq2ps
movsl
outsb
sub
test
gs
inc
or
xor
jne
mov
mov
jmp
imul
xchg
aaa
add
mov
insb
xchg
mov
push
push
cmp
push
mov
push
dec
mov
inc
sbb
sub
cli
mov
dec
std
aas
push
cmp
sub
xchg
das
jle
orb
push
inc
lea
xor
das
mov
or
jl
cmp
daa
repnz
xchg
xor
lahf
lock
add
nop
je
push
xchg
ficoml
rolb
or
pop
sub
jg
mov
or
inc
int
cld
mov
xchg
jl
sbb
cmc
icebp
hlt
cmp
sub
jnp
roll
xor
or
mov
fdivrs
push
dec
cmc
outsb
out
mov
sub
daa
add
shlb
or
sbb
imul
outsl
jbe
pop
push
popa
mov
cmp
adc
fdivp
push
inc
or
add
or
lret
dec
dec
push
ja
push
popf
sahf
xchg
outsb
mov
outsl
jo
inc
cmc
pushf
jnp
ret
sarb
ja
push
cld
mov
decl
xchg
xlat
outsl
les
push
mov
mov
popf
pop
rcl
js
and
sbb
ljmp
pop
and
pop
hlt
add
lods
and
ficoml
sti
push
cld
ja
cmp
cmp
push
cmc
test
sbb
and
push
lds
hlt
je
mov
leave
pop
rorl
cld
imul
mov
mov
jl
fxch
lret
mov
sbb
xchg
loopne
ret
inc
mov
test
sti
test
pop
push
popa
mov
mov
sbb
and
sbb
and
test
and
push
addr16
and
cmp
xchg
mulb
incb
push
xor
popf
iret
add
dec
dec
pop
loopne
dec
ficompl
pop
jno
fstpl
and
mov
cmp
jno
je
iret
cmc
xor
add
cmpb
dec
insb
sub
push
imul
sub
dec
jmp
addb
jns
stos
cmp
scas
test
mov
lahf
adc
jmp
lock
xchg
scas
inc
push
jbe
mov
pushf
std
mov
mov
shll
push
jne
and
and
pop
imul
test
cmp
dec
adc
jge
lock
stos
xor
and
test
jle
test
repnz
xlat
shl
nop
fnstsw
sar
mov
or
ja
lahf
xor
push
adc
enter
dec
into
xchg
adc
jo
test
mov
jp
sub
jbe
dec
jo
jo
mov
xor
mov
mov
pop
pusha
pop
fsubs
pop
push
jns
mov
addr16
test
rclb
imul
and
das
adc
cld
or
push
sbb
push
loop
push
ljmp
push
int3
mov
out
inc
insb
adc
lds
mov
mov
loop
loopne
or
shrb
shll
in
fucomip
cmp
sub
in
repnz
jb
roll
filds
ljmp
sti
int3
xor
push
pmaxub
mov
push
xor
push
inc
fcompl
out
imul
pop
jns
mov
daa
subb
add
out
decl
add
lcall
imul
ds
xor
shl
cmp
into
lret
dec
pop
adc
mov
cmpsb
inc
lock
jmp
cmpsl
dec
jp
inc
xor
imul
addb
mov
push
stos
pop
cmp
and
lods
sub
test
mov
xchg
mov
out
sub
fwait
ja
xor
pop
jns
dec
nop
cwtl
pushf
pop
dec
mov
or
add
or
inc
sbb
or
mov
call
out
adc
mov
push
out
cld
pop
loope
add
outsl
pop
xchg
dec
push
jmp
rclb
and
add
movsb
lret
and
rorl
pop
decl
rcr
mov
or
cmpsl
adc
clc
aaa
adc
pop
xchg
jg
dec
mov
jle
movsb
repnz
push
mov
push
mov
into
out
scas
adc
add
dec
je
lahf
ss
idivb
pop
mov
jno
insb
scas
xor
stos
xchg
in
dec
arpl
mov
in
sti
stos
dec
pop
mov
push
push
into
xor
cmp
icebp
add
fwait
cmp
push
dec
cmc
testl
xchg
mov
and
lods
popa
andl
das
loopne
scas
notb
jbe
ds
cmp
or
rcrb
test
sub
cmc
js
add
in
xchg
jbe
push
repz
mov
sbb
fsts
sbb
cmp
push
je
mov
cwtl
rol
fcompl
decb
out
push
ror
mov
jae
incl
imul
jne
sub
pusha
movsb
loop
xor
arpl
cmp
jp
push
insb
ljmp
mov
aaa
scas
pop
pop
mov
inc
pushl
cmp
pop
mov
sbb
ret
cld
pusha
mov
lods
sahf
and
push
xor
fcmovne
je
add
divb
lret
shlb
outsl
dec
inc
dec
stos
adc
cmp
sbb
add
xchg
or
push
popf
add
popa
subl
mov
xchg
or
mov
mov
sub
idiv
xchg
ja
fcomps
icebp
push
and
ret
call
pop
sahf
push
aam
pop
stos
jns
ds
ret
pop
ss
mov
mov
mov
pmulhuw
xchg
push
insb
add
mov
inc
and
in
lock
addr16
in
pushf
shr
jns
int3
mov
xor
mov
std
adc
inc
jo
enter
pop
push
test
or
mov
idivl
aas
push
fcmovb
fwait
dec
sub
aaa
or
subl
pop
push
mov
popf
and
or
popf
add
repz
in
insl
sub
test
idivb
lds
add
or
js
xchg
cmp
dec
out
and
inc
mov
pop
or
stos
dec
push
dec
add
jns
sbb
xor
cmp
jl
add
movsl
mov
mov
fwait
cs
inc
mov
push
dec
dec
test
xor
mov
addb
adc
xor
into
hlt
scas
and
in
faddl
add
das
jae
out
add
lds
pop
mov
hlt
jmp
loop
aad
pushf
dec
xchg
imul
popa
fstpt
sub
sbbl
inc
fsubl
sbb
mov
pop
mov
sub
mov
addr16
adc
or
and
insb
fldl
stos
std
xchg
fadds
sbb
lret
add
sahf
std
push
xchg
es
jle
adc
mov
xchg
xchg
xchg
jmp
js
int
insb
loop
mov
adc
ds
xchg
xchg
sbb
mov
push
and
or
inc
in
pop
mov
rcr
pop
xchg
lret
test
mov
inc
xchg
repz
mov
stos
pop
sub
jbe
les
adc
xor
fwait
mov
mov
dec
dec
dec
cmp
pop
stos
mov
enter
push
dec
dec
loopne
pop
cmp
sbb
fldenv
fisubl
add
pop
je
insb
fsubrl
int3
mov
mov
shl
sbb
inc
adc
and
je
in
aas
popa
out
xor
sub
pop
mov
fbld
jae
mov
jl
bound
adc
shll
cld
mov
xor
adc
cmc
je
push
xchg
int
imulb
and
mov
ljmp
pusha
push
dec
stc
pop
cmc
dec
jns
dec
push
lods
push
lahf
addr16
and
jnp
gs
sbb
sub
xchg
dec
add
mov
jmp
das
mov
jecxz
xchg
repz
jno
lds
inc
mov
les
adc
ret
fsubrs
dec
sarl
or
adc
inc
sahf
and
push
pop
aaa
mov
cmp
mov
pushf
mov
cmp
cmp
popf
lea
inc
sub
pusha
pushf
call
adc
jmp
xchg
lods
iret
push
pop
and
jmp
mov
test
push
jecxz
in
fs
mov
sub
adc
mov
inc
adc
sub
xchg
or
aam
std
adc
pop
ja
mov
xor
ss
insb
cld
insl
jnp
icebp
je
rorl
pop
cmp
mov
or
add
mov
test
scas
sub
mov
lret
test
cmpsl
sbb
jl
int
cmpsb
sub
sarb
and
jmp
mov
arpl
in
cli
das
push
push
rorb
mov
lahf
push
fadd
push
out
fwait
les
xlat
rolb
dec
fildll
jae
dec
mov
into
fwait
fs
add
xchg
fisubl
test
out
lods
cmp
jl
in
repnz
cmp
xchg
adc
push
push
cwtl
mov
bound
jne
outsl
idiv
scas
adc
jo
xchg
fistpll
jno
dec
lahf
push
dec
dec
loop
jbe
popl
xor
int3
adc
jp
add
pop
cmp
lds
popa
pop
test
dec
adc
adc
pushf
push
mov
ret
mov
icebp
mov
or
lea
lods
fistps
pop
rolb
pop
mov
xchg
and
sub
adc
inc
in
fnstcw
inc
clc
es
or
mov
imul
fucomp
xor
fnsave
arpl
loopne
add
xchg
mov
dec
mov
pop
loope
mov
movsb
cmp
sbb
popa
xacquire
sub
pop
xchg
popf
clc
inc
pop
rolb
mov
arpl
mov
jbe
sub
fdiv
in
and
fs
xor
dec
clc
call
fidivrs
inc
sub
inc
add
cmpsb
push
bound
mov
test
lahf
scas
int3
hlt
dec
push
lods
jb
xchg
xchg
loop
and
mov
jge
in
adc
add
dec
out
cwtl
pop
xor
addr16
jnp
aas
lods
push
or
imul
adc
in
or
push
add
std
stc
xchg
inc
or
jp
jns
jo
inc
mov
ret
lret
pop
xor
in
mov
loope
jle
std
in
cmpsb
xchg
adc
lahf
sti
cmpl
fsubrl
inc
test
push
jmp
pop
cmp
enter
das
mov
mov
cmp
daa
mov
popf
and
fs
dec
jb
loopne
push
sbb
adc
das
repz
pop
inc
sbbb
jp
int3
or
push
jb
and
add
push
lods
out
cmpsl
jmp
fistl
pop
mov
pusha
fwait
add
iret
pushf
fcmovnu
fisttpl
iret
jb
out
inc
sub
sub
int3
sahf
out
cmp
cmp
mov
fdivl
and
dec
jbe
je
les
jns
mov
ficomps
pop
and
shlb
fimuls
test
or
sub
addr16
in
mov
sub
pop
pcmpeqw
pop
aaa
negl
mov
or
stos
test
mov
aaa
pushf
mov
xor
fidivs
sub
leave
add
test
jnp
insb
or
out
jns
movsb
bound
and
mov
in
out
xchg
xlat
inc
aaa
mov
cmpsl
jmp
subb
test
add
inc
pop
jmp
fwait
cli
dec
jmp
mov
mov
mov
sbb
dec
popa
pushf
fistpl
std
ds
ficoml
rcrb
mov
mov
add
mov
jno
push
cmp
ret
iret
pop
int3
mov
adc
lods
xor
popa
add
mov
jmp
bnd
sti
pop
inc
ds
fadds
repz
cwtl
adc
mov
add
iret
js
mov
or
push
and
pop
aaa
push
sbb
dec
arpl
ja
out
sub
mov
adc
rorb
lahf
int
push
adc
jmp
or
and
cmpsb
or
insb
outsb
inc
inc
mull
cli
pop
or
pop
jbe
lret
loopne
shll
test
sbb
loop
divl
dec
das
jo
daa
popf
clc
test
xchg
je
sti
or
push
cli
mov
xchg
repz
in
cmp
int
fmull
data16
mov
jne,pt
xchg
pop
push
lret
fs
test
mov
jnp
push
lret
pop
add
jmp
mov
jp
gs
pushf
jno
jge
mov
int3
test
out
lahf
lahf
mov
mov
push
adc
xlat
mov
and
ret
dec
sbb
ljmp
lock
inc
xchg
cmc
dec
sbb
push
inc
sub
mov
nop
daa
add
add
pop
iret
mov
shrb
loop
dec
inc
mov
sbb
rcl
jmp
ljmp
pop
imul
pop
popa
add
cltd
cltd
mov
frstor
and
and
xchg
cmp
mov
cli
xor
fistl
ficoms
ss
shr
insb
pop
and
ret
insl
push
icebp
inc
movsl
sbb
gs
rolb
call
fildl
pop
sbb
and
aaa
jmp
jmp
in
sub
xor
stos
adc
xchg
into
mov
repz
cwtl
mov
push
pop
in
cwtl
incl
sbb
out
call
cmpsb
into
jge
sti
add
push
sti
lahf
cmpsl
inc
out
mov
dec
push
es
or
or
fwait
adc
sti
sbb
pop
in
dec
ja,pn
test
test
daa
push
add
mov
cmp
pop
in
mov
add
jle
pop
cmp
and
idivb
repnz
sub
mov
adc
inc
ljmp
push
aam
sbb
and
stc
mov
mov
scas
dec
push
pop
rolb
sbb
out
sub
push
test
fisubs
cmp
test
push
push
hlt
dec
cmp
mov
je
rclb
bound
paddusw
jl
mov
les
andb
ret
or
push
inc
xchg
sub
into
sbb
mov
mov
leave
adc
in
faddl
outsb
cltd
jnp
dec
dec
xchg
pop
aaa
daa
fsubl
pop
into
leave
dec
add
sbb
lea
ret
mov
mov
add
scas
popa
imulb
filds
aad
pop
xchg
xchg
jmp
repnz
or
push
adc
sbb
jb
sbb
sub
mov
shl
div
and
mov
dec
cmp
pushf
flds
mov
ja
pop
jnp
repnz
lcall
xchg
pop
and
push
imul
subb
mov
test
cltd
popa
mulb
fstl
mov
out
mov
push
mov
mov
int
jle
shl
push
jp
and
xchg
sub
xlat
dec
ret
mov
cmpsl
adc
sub
and
lea
jp
push
je
inc
jl
adc
cmp
ss
inc
jle
test
xchg
xor
jb
jo
les
je
int
pop
iret
and
cmp
inc
clc
rcl
and
mov
inc
decl
sti
cmpsl
mov
lock
icebp
out
into
ljmp
jmp
mov
mov
push
out
lret
dec
or
stos
popa
adc
dec
bound
sarb
xchg
xorl
or
loop
imul
jmp
cld
or
add
in
inc
imul
and
sahf
jb
das
aaa
cmp
mov
mov
jle
rorl
test
scas
ja
pop
aas
jns
xchg
test
sbb
pop
shll
and
mov
sti
idivb
inc
arpl
in
loop
aad
jmp
cmp
and
mov
push
out
pop
and
push
mov
fimuls
out
mov
aas
bound
testl
lahf
inc
jge
aam
mov
add
aad
jge
sarb
scas
or
mov
xor
fucomp
pop
aam
sbb
jecxz
xchg
lods
dec
dec
pop
test
fcoms
in
mov
std
mov
addb
mov
out
xchg
je
dec
mov
cmpsb
xchg
std
sbb
out
sarl
rcrl
pop
sub
or
dec
test
mov
in
pusha
testl
loopne
push
lahf
lock
adc
inc
inc
mov
rcrb
or
xchg
pop
jne
push
ret
mov
mov
cmp
lret
add
jl
push
repnz
sbb
or
stos
shlb
pusha
in
ret
ds
xor
leave
jne
aaa
lock
inc
jmp
test
adc
adc
adc
sbb
dec
pop
pop
test
cmpsb
out
add
and
enter
pop
mov
fs
sub
mull
pop
stos
dec
cltd
fdivrs
loopne
mov
gs
xchg
lret
ret
scas
pop
bound
pop
ret
nop
inc
in
cmp
pushf
pop
jp
push
or
repnz
movsl
je
lcall
cltd
and
sbb
mov
mov
dec
ljmp
xor
je
push
pop
out
jecxz
lcall
add
xchg
es
or
fistpl
cs
test
cltd
mulb
dec
popf
call
mov
sub
jecxz
pop
fisubrl
sbb
sbb
in
pop
xor
adc
xor
lcall
lret
sub
cltd
mov
sub
popa
adc
mov
xor
mov
mov
into
ds
jp
movsl
ror
adc
fucom
shlb
test
jns
mov
xor
xor
pop
jbe
inc
js
sbb
dec
xor
dec
fs
ficoml
ljmp
and
imul
in
add
sub
inc
lods
sbb
inc
out
inc
iret
das
xchg
test
cli
pop
push
mov
jmp
or
push
dec
adc
inc
sub
pop
sub
mov
lds
insl
add
sbb
out
cmp
or
and
insb
xchg
cmp
and
outsb
xchg
popa
lock
and
mov
or
adcl
pop
xchg
dec
sub
ja
push
mov
out
mov
scas
aaa
xlat
cli
push
mov
andl
inc
xor
cmp
jae
fucomi
cltd
lahf
and
mov
mov
pop
cmpsb
sbb
push
ds
and
cld
in
jp
and
jg
daa
sub
ljmp
mov
aad
lods
and
dec
aad
adc
nop
addr16
and
loope
mov
cli
mov
aad
jo
fstpl
xchg
add
fldenv
adc
jbe
xchg
lds
inc
iret
test
jb
add
xlat
popl
jns
dec
cwtl
add
rcll
repz
out
in
jno
lods
pop
cmpsl
sub
jb
jp
je
popf
hlt
xchg
sarl
fsts
ret
mov
xchg
dec
mov
aaa
ret
out
lds
in
sub
out
pop
pop
clc
sahf
inc
ss
mov
lods
cmp
xor
repnz
adc
ss
jecxz
cbtw
outsb
loope
mov
push
xchg
hlt
imul
mov
dec
sub
data16
ljmp
fs
negl
push
pusha
jmp
je
insl
and
sub
dec
xchg
cmpsl
lds
fcos
adc
out
dec
gs
clc
adc
add
mov
data16
jecxz
sbb
add
and
jle
push
fidivrs
push
jle
jg
imul
and
add
mov
mov
mov
cli
dec
negb
mov
pop
icebp
leave
jae
mov
cmp
rcl
mov
loope
shrl
inc
pop
mov
les
or
mov
daa
sbb
pusha
mov
data16
pop
cmp
out
pop
adc
inc
jb
les
in
popl
test
and
ss
push
repnz
jae
inc
ret
sub
mov
frstor
stc
dec
in
jmp
scas
dec
div
xor
sbb
sub
xor
in
enter
lcall
xlat
std
aam
test
aaa
mov
mov
xor
adc
addb
push
stos
or
lock
jp
ljmp
add
mov
pop
xchg
or
sbb
xchg
push
add
or
push
arpl
out
pop
cs
push
add
sub
iret
pop
leave
sbb
jbe
sbb
push
pop
movsl
jbe
sbb
decl
cmp
inc
jp
mov
call
leave
xchg
popf
sub
mov
into
mov
jae
jae
xor
push
push
frstor
sub
push
inc
jne
test
cmp
mov
xor
lret
scas
fdivrl
jmp
ljmp
add
sbb
xor
lods
dec
stc
into
aaa
jns
aas
imul
ja
fmul
dec
or
jecxz
pop
mov
pop
scas
add
outsl
pop
dec
and
mov
pushf
xor
push
mov
add
cmp
cmp
dec
in
cmp
ret
iret
mov
dec
loopne
push
mov
jle
push
ja
adc
inc
daa
bound
andb
cld
test
sbb
mov
cld
stc
sbb
icebp
cmpsl
in
test
mov
bound
test
fs
cmp
insl
sbb
cmp
pop
sbb
cwtl
cwtl
pop
and
inc
lds
repnz
orb
mov
push
insl
aaa
lods
std
inc
or
sub
mov
cmp
and
mov
mov
cmp
jl
popa
jmp
insb
dec
and
inc
or
add
push
cs
jae,pn
or
adc
mov
add
xlat
es
pop
adc
stos
adc
lea
jg
enter
js
cmpsb
js
int
aad
stc
cmp
out
fnstenv
aam
int
push
sbb
adc
fcoms
dec
add
push
mov
out
mov
adc
mov
jb
hlt
loop
lods
popf
sbb
mov
cmp
lock
addr16
mov
stos
int
cmp
aaa
sbb
xchg
inc
aas
inc
lahf
hlt
add
jbe
fmull
xchg
push
dec
mov
call
push
mov
fnstcw
jmp
icebp
stc
pushf
dec
inc
lret
jbe
fisttpll
test
rcll
std
in
lea
inc
jl
fidivrl
xchg
jmp
shll
xchg
and
std
and
inc
mull
xchg
rcrl
ret
jns
aad
xchg
ja
add
out
lods
adc
les
add
enter
lahf
cltd
fidivrs
out
and
popf
sub
mov
sub
loopne
mov
push
xchg
fidivs
sbb
aad
xor
add
push
xchg
ljmp
inc
rcl
jbe
xchg
push
adc
popa
scas
cwtl
sbb
push
addr16
cmpsb
shlb
mov
push
js
push
cmpsl
test
test
pop
and
mov
pop
push
xchg
inc
inc
inc
push
xlat
mov
mov
adc
in
adc
cmpsb
xchg
or
jg
call
adc
dec
cltd
icebp
pop
xor
repnz
int3
mov
xor
sarb
cmp
cmp
fucomp
pop
cmp
cmp
rcl
sbb
je
mov
lods
dec
inc
das
inc
in
ficomps
daa
lock
dec
push
stos
jg
imul
mov
in
cmp
adc
das
cs
cli
sub
xor
xchg
adc
pop
sub
rol
pusha
pop
mov
popf
cmp
imul
fdivrs
imul
push
testb
jmp
ljmp
rcrb
pop
pop
lods
adc
or
jbe
int3
mov
jge
hlt
fmull
in
sub
xor
sbb
jg
xor
cwtl
jmp
jle
hlt
div
iret
sbb
xchg
cmc
cmp
mov
dec
adc
xor
add
das
xor
push
or
mov
mov
test
dec
jne
jge,pn
cmp
mov
inc
jo
in
xor
cmp
sub
stos
push
std
lahf
dec
mov
add
jmp
xchg
fcompl
hlt
test
push
test
and
push
mov
iret
call
fisttpl
and
cwtl
mov
ret
sbb
int3
jle
not
pushf
outsb
dec
int
sahf
stc
xor
push
dec
push
xchg
ret
nop
or
aam
xchg
lret
mov
cmp
fld
aas
test
add
cmp
int
sbb
jl
jnp
bound
lret
ljmp
sahf
mov
lret
pop
or
icebp
movsb
cmp
rcrl
cmp
sbb
cmp
sub
fs
inc
sub
mov
xchg
rcl
je
sub
add
mov
gs
mov
pushf
sbb
repnz
incl
insl
xchg
sbb
inc
jl
push
lcall
int3
arpl
push
sbb
mov
mov
mov
insb
daa
out
push
sub
inc
cmp
das
cli
cmp
push
pushl
cld
repnz
jg
fwait
jle
cmp
push
lret
cmpsb
test
dec
mov
sbbb
dec
add
hlt
rorl
sub
dec
sub
xor
inc
mov
pop
jg
inc
scas
mov
test
sub
xchg
add
and
push
insb
out
lods
cli
cmpsl
lret
lahf
sar
imul
xor
movsb
jne
inc
insl
mov
push
mulb
inc
notl
ror
xchg
mov
sub
sub
lods
sub
mov
dec
pusha
mov
jg
jmp
push
cmp
test
std
dec
lock
mov
jmp
sti
lret
mov
jg
fdivrl
bound
popf
dec
lods
cmp
in
jnp
dec
push
mov
adc
test
hlt
imul
xor
push
shrl
xchg
pushf
enter
scas
repz
jns
cmp
ret
test
sbb
arpl
mov
and
ret
mov
mov
xchg
std
aas
dec
outsb
or
push
xchg
leave
fwait
cmpl
lock
xor
xor
jge
pop
cmp
cwtl
ja
sbbb
imul
test
jns
push
test
or
xchg
into
pushf
cltd
mov
dec
dec
mov
pop
sub
sbb
mov
imul
cmp
fcoml
push
push
mov
pminub
jle
pop
fldenv
mov
stos
push
ja
pop
cmpsl
jecxz
fnstenv
pop
mov
inc
mov
inc
inc
fcmovbe
shlb
sbb
iret
test
push
jmp
lretw
sub
sbb
and
mov
jmp
lcall
mov
sbb
push
pop
inc
ret
clc
jne
lahf
dec
scas
sbb
lods
pop
out
movsl
mov
ja
iret
data16
in
cli
movsb
mov
jg
stos
lods
adc
dec
clc
pop
rorl
cltd
lahf
insb
sub
outsb
sbb
pop
inc
daa
add
into
leave
ss
push
xchg
adc
cwtl
cmp
dec
aas
push
fsubrp
add
xchg
scas
stc
cmpsb
inc
and
xor
cmpsl
leave
imulb
push
test
dec
push
push
jl
mov
ljmp
pop
sbb
lea
sbb
hlt
shl
clc
mov
call
int3
js
mov
mov
xchg
int3
fisttpll
jmp
mov
ret
loopne
leave
lret
cwtl
bound
ret
fists
movsl
fidivl
sub
mov
jbe
shl
cmp
xor
mov
les
bound
mov
repnz
jp
inc
cmp
stc
sub
sarb
lret
adc
out
or
and
mov
mov
insb
les
jmp
pop
adc
lock
sub
out
jl
pop
add
mov
idivl
aam
sub
shlb
mov
gs
fcomps
jg
scas
scas
iret
pop
stos
or
hlt
subl
pushf
inc
mov
shl
negl
test
push
mov
add
adc
enter
ror
movsl
test
into
test
add
mov
lock
pop
jp
pop
fcoms
mov
or
sahf
dec
stos
dec
test
icebp
jns
jnp
fs
pcmpeqd
arpl
adc
pop
inc
xlat
arpl
sbb
push
mov
jle
mov
add
and
lods
pop
scas
inc
pop
js
inc
ret
inc
loope
out
lret
imul
idiv
ret
bound
sub
sub
testl
movsl
jl
imul
sti
sbb
test
cli
adc
jl
mov
push
push
out
pop
pop
in
xor
mov
mov
je
aad
jecxz
das
out
mov
sahf
dec
fucomi
xchg
add
addb
xchg
inc
xchg
lahf
sbb
test
lock
lock
xchg
std
mov
sbb
lds
fists
mov
out
fiaddl
or
rorb
mov
mov
pop
mov
pop
pop
ja
mov
jecxz
sbb
loopne
lcall
imul
jns
mov
idivl
sti
pop
lock
add
fs
adc
cmp
sub
jns
add
jne
xchg
imul
sub
xchg
ljmp
cmpsl
add
adc
pop
inc
lret
icebp
int3
movsl
mov
push
sub
cmp
lcall
icebp
add
testl
mov
daa
dec
leave
out
xchg
xchg
push
test
pop
inc
adc
mov
mov
aad
pop
icebp
shll
cli
jbe
stc
jnp
in
cmp
cs
dec
mov
mov
jl
sarb
pushf
clc
out
fnstcw
push
in
rcl
jmp
fwait
mov
imul
sar
outsl
mov
scas
test
adc
add
inc
es
sti
les
pop
lock
iret
testl
lret
ds
mov
inc
pop
aas
jecxz
cmp
lahf
xchg
mov
dec
stc
sbbl
stc
xor
mov
adc
arpl
jg
adc
rolb
or
sti
aas
sub
js
jmp
mov
imul
push
dec
and
dec
xchg
mov
ljmp
sub
test
mov
popf
loope
push
inc
test
icebp
and
fistpll
enter
sub
push
and
or
sub
mov
scas
aam
jmp
fwait
imul
mov
ret
rolb
iret
add
test
jge
mov
mov
sub
push
outsb
cmp
and
adc
sbb
sub
mov
movsl
jge
jge
je
dec
subb
stos
and
add
les
mov
push
mov
outsl
jmp
and
das
mov
jne
xor
adc
adc
mov
lds
jne
pop
lret
cld
popf
push
cwtl
je
jge
mov
adc
jle
adc
cmp
push
xlat
or
es
lahf
add
add
repz
xchg
in
in
adc
xchg
sub
add
add
push
jp
add
daa
aaa
aas
rclb
mov
sahf
jbe
mov
and
mov
xchg
mov
mov
cs
movsb
and
xchg
insl
in
into
ss
sbb
lret
call
push
push
movl
jbe
scas
pop
fnstenv
clc
inc
addr16
dec
adc
sub
cs
push
xor
push
rorb
pop
decb
push
mov
dec
je
fldenv
jne
mov
push
push
test
xor
fisttpl
push
cld
mov
outsb
fsubs
xchg
adc
call
out
mov
sub
das
ljmp
movsl
pop
lret
scas
hlt
jge
js
stc
loop
push
xor
out
fs
cmpsl
fwait
scas
push
dec
jge
shll
jae
and
pop
lahf
add
or
leave
cmp
fistl
fiadds
lret
adc
xchg
outsb
push
add
jl
jp
add
jp
scas
fidivl
lret
jbe
xorb
lcall
popa
fistpll
cwtl
test
mov
mov
mov
jp
popf
xchg
dec
pop
push
pop
push
mov
imul
aaa
xchg
jl
in
xchg
fimull
lcall
mov
shll
mov
sarb
push
xchg
adc
es
xchg
ja
cs
pop
sub
xor
pop
test
pop
fdecstp
xor
clc
cld
in
add
ljmp
adc
sub
sub
push
jne
mov
lds
pop
inc
ret
in
or
push
sbbb
aam
orb
aad
and
stos
jb
cmp
jae
sub
stos
xchg
stos
cmpsb
xchg
sahf
les
jg
fldcw
cmc
mov
clc
pushf
fstps
lcall
mov
stos
mov
adc
scas
leave
xchg
mull
mov
lods
push
xorb
pop
js
adc
loope
movsl
dec
adc
sub
adc
fisubs
add
mov
arpl
inc
xor
jbe
movsb
sub
mov
add
cmc
xchg
fdivs
inc
fdivrl
mov
lret
mov
inc
lods
fdivp
into
mov
adc
and
jmp
mov
je
es
lods
outsl
push
lcall
pop
repz
fcomps
pop
xlat
adc
mov
sbb
lcall
xchg
fstl
shll
dec
das
xchg
or
insb
les
outsl
or
and
adc
push
mov
jae
inc
inc
das
sbb
movsb
dec
enter
mov
int
cltd
aas
cmp
dec
dec
popa
or
or
jae
xchg
push
insb
jnp
inc
jns
lock
hlt
pop
testb
push
in
inc
dec
ficompl
test
out
std
std
mov
push
lahf
fcompl
push
inc
mov
pop
jno
add
inc
jle
cmp
sahf
daa
push
mulb
icebp
stos
lds
and
sbb
ret
and
in
std
out
xor
movsl
movl
ret
adc
jnp
xor
mov
into
test
pop
fidivl
adcb
scas
clc
movl
or
push
pop
mov
add
js
mov
push
pop
mov
enter
out
push
sbb
xor
cli
repnz
xchg
push
or
pushl
loop
stos
gs
add
xor
cli
mov
sbb
out
hlt
daa
pusha
insl
mov
test
out
lock
add
pop
aas
ja
xchg
lahf
jns
insb
test
out
inc
jns
jecxz
mov
push
jnp
lret
pop
xchg
jae
int3
xchg
or
mov
xor
or
mov
cwtl
cld
and
push
xorb
mov
rorb
mov
sub
xchg
stos
push
lea
into
or
lea
mov
sti
sarl
neg
jle
jmp
outsb
inc
rcrb
sbb
ss
insb
xor
scas
sbb
dec
mov
ret
addr16
jle
mov
xchg
idivl
cmpsb
int
or
mov
or
sahf
lret
stos
inc
sub
mov
jbe
inc
cld
mov
jecxz
push
mov
aaa
inc
pushf
sbb
cli
push
push
je
mov
stos
cmpb
jl
popf
and
leave
adc
xchg
ja
std
cmp
movsb
xchg
sub
fnstenv
dec
sub
jl
gs
mov
aad
sbbb
fstps
outsl
xchg
aad
gs
dec
adcl
and
jne
or
movsl
sub
test
lcall
out
xor
pusha
xlat
adc
xchg
or
pop
push
inc
call
add
xor
mov
push
xchg
cmc
adc
rcrb
and
packuswb
inc
sub
ja
sbb
push
loope
das
ss
insl
cmp
incl
mov
add
outsl
addr16
jnp
cmp
xchg
push
push
jp
jecxz
push
adc
cmp
sbb
mov
jg
dec
and
sbb
inc
outsl
iret
mov
cmc
gs
insb
sahf
idivl
sub
movsb
push
into
imul
movsb
sub
mov
or
js
xchg
insl
xchg
jns
xchg
inc
jbe
test
pop
cmpsl
and
or
mov
stos
pushf
ss
iret
xchg
loop
mov
or
lret
push
iret
jae
cmp
fdivl
pop
ret
sahf
push
mov
insl
sbb
sub
mov
xor
jo
or
xchg
mov
shrb
out
mov
sub
test
shll
insl
mov
xor
cwtl
inc
movsl
cwtl
ds
xor
pusha
clc
xchg
mov
sahf
js
xchg
outsb
loop
xor
cmp
mov
mov
stc
xlat
rep
test
push
mov
dec
pop
pop
jnp
xlat
into
bound
cmpsb
int
xchg
push
sbbb
stos
outsl
mov
and
shll
xchg
xor
test
test
jecxz
fdiv
lahf
push
outsb
in
mov
ret
ljmp
and
hlt
addr16
dec
mov
and
mov
add
outsl
add
mov
clc
pop
dec
je
lahf
scas
pop
add
cmp
push
or
jnp
loopne
jb
les
fldt
or
in
or
cpuid
into
ss
clc
clc
lret
add
inc
push
xchg
cli
jl
fildl
jge
jnp
call
rcl
adc
outsb
pop
sarl
sbb
xchg
out
push
bound
mov
mov
lds
jmp
add
lret
mov
lea
add
and
or
stc
arpl
pusha
test
subb
lods
leave
ds
aam
xor
nop
mov
push
mov
dec
xchg
cmp
stc
sub
push
mov
push
je
fisubrl
xor
lret
xchg
mov
mov
stos
inc
paddsb
mov
pusha
repz
aad
loop
sbb
jnp
mov
cmp
sub
cmp
and
or
sbb
in
into
je
inc
jae
stos
jno
arpl
fcmovbe
in
dec
stc
es
data16
and
pop
and
jp
xor
mov
icebp
xchg
push
add
lahf
sub
and
xor
cltd
fstl
into
inc
mov
mov
mov
cmp
xlat
dec
rolb
shr
xchg
andl
loopne
jnp
stc
int3
push
aam
das
jbe
jnp
sbb
mov
and
dec
cmp
notb
mov
scas
inc
jns
dec
and
data16
std
sbb
push
pusha
out
xor
sbb
ret
and
cld
jg
mov
pop
sbb
mov
fcomps
daa
push
sub
ljmp
cmp
cmc
leave
cmp
pop
push
pop
scas
divps
xor
inc
test
gs
add
das
popa
and
cli
shr
mov
add
mov
xchg
leave
cmp
loop
pushf
sub
decb
push
xor
shll
fcmovnbe
xchg
cmp
mov
stc
jo
lcall
pusha
out
fcoml
fsubr
clc
add
outsl
stos
push
mov
push
inc
shll
daa
or
inc
std
mov
test
ret
and
cmp
mov
adc
xchg
push
ret
xor
cmp
push
jne
mov
push
loop
add
and
addr16
popa
insb
jno
mov
clc
add
inc
mov
fists
inc
and
jbe
lret
outsl
mov
xchg
test
mov
add
neg
cltd
add
cld
cmp
test
xchg
dec
fnstcw
int3
scas
in
xchg
shlb
bswap
xor
add
imul
int
inc
dec
out
and
das
out
outsb
add
push
mov
inc
sub
imul
in
sti
sub
sbb
stc
jg
or
int
dec
mov
sbb
adcl
out
rcrl
das
jecxz
clc
test
out
loope
test
in
cmp
xor
std
stos
push
pushf
pop
jne
and
mov
iret
mov
push
jecxz
in
inc
stos
xchg
sub
mov
lcall
xor
xor
adc
jl
adc
adc
jo
test
mov
dec
xor
xor
push
test
mov
adc
enter
and
fisttpl
or
mov
mov
fs
push
std
pop
add
inc
insl
int3
xor
add
pop
js
jbe
cli
popa
pop
sbb
pop
jmp
cmpsb
and
adc
jmp
in
rorl
sbb
sbb
cltd
push
or
and
mov
cmp
inc
jbe
enter
cmp
popf
dec
je
add
aam
mov
pop
bsr
shll
mov
xchg
aas
aaa
adcl
mov
jmp
cmp
aam
and
xor
sbbl
xor
data16
dec
loop
xchg
lds
jbe
nop
jns
scas
sub
xchg
ss
mov
js
notl
test
in
aas
cmp
and
xlat
fwait
cmp
sahf
sahf
pop
iret
jge
je
repz
mov
cmp
fs
ret
ret
arpl
inc
lcall
aas
shl
push
mov
adc
loope
ret
fldt
push
dec
xorb
jmp
scas
rorb
sbb
cli
inc
mov
sahf
or
cmp
xchg
sbb
lock
adc
or
push
push
sahf
cs
xchg
pop
mov
fsubr
xchg
pop
jl
add
dec
fnstenv
sub
jne
clc
push
sbb
pop
mov
hlt
xchg
mov
xchg
rcrb
add
cmp
mov
mov
push
mov
sub
je,pt
jo
dec
shlb
in
pop
lahf
adc
mov
hlt
jmp
test
test
nop
jne
xchg
cmp
icebp
cld
push
mov
cltd
push
mov
add
stc
or
ret
mov
xchg
stc
test
xor
jb
xlat
mov
shlb
orl
and
sbbb
lea
leave
mov
mov
jno
and
pop
jp
aad
inc
xchg
mov
int
cmpsl
cmp
data16
hlt
shr
insb
mov
insb
aam
push
rcl
add
or
aaa
fcmovnbe
fs
and
je
lock
inc
xchg
outsl
in
outsb
or
in
cmp
popa
aaa
push
cmpsl
fsubr
sub
xlat
pop
popa
cli
jmp
mov
inc
add
test
cmp
xor
mov
pushf
push
mov
lds
fisubs
mov
sbb
fsubrp
inc
sub
int3
jge
mov
cmpsb
xchg
push
out
bound
das
cmp
pop
enter
push
mov
outsb
jbe
je
lods
mov
add
dec
repz
jae
dec
pusha
mov
cmpsl
mov
ja
pop
ficompl
and
xchg
outsb
mov
je
pop
push
xchg
out
sbb
leave
adc
push
cmp
cmpsl
sub
leave
aaa
xchg
sbb
aam
data16
in
sbb
and
loop
dec
imul
lret
jp
cmp
pop
mov
pushf
sbb
sbb
or
mov
jb
sbb
and
andnps
lcall
inc
dec
loopne
adc
addr16
pushf
fists
push
out
scas
iret
je
and
jne
sahf
vaddsubps
daa
cmpsl
je
xor
notb
and
adc
stos
sub
clc
mov
inc
push
xor
add
jns,pn
repz
sub
in
mov
enter
or
sbb
cmpsl
pop
push
mov
mov
popa
leave
jne
aas
mov
mov
xor
inc
jle
push
cmc
dec
xchg
ja
lret
testl
pop
out
cmp
sbb
mov
in
sbb
leave
push
or
into
imul
mov
ret
pop
fbstp
fimuls
call
pusha
add
insl
mov
outsl
insb
test
cmp
add
out
nop
js
lods
shr
jb
inc
cmp
in
inc
repz
mov
imul
jg
lcall
xchg
and
es
imul
push
mov
in
sbb
xor
pop
in
ljmp
adc
loop
aad
xchg
jb
div
xchg
mov
jb
sarl
pushf
xor
xchg
sub
adc
aam
ds
jns
iret
cmp
xchg
cmp
cmp
mov
mov
and
pop
inc
mov
push
mov
scas
mov
iret
stos
and
in
int
inc
inc
cmp
mov
bound
enter
mov
inc
adc
decb
mov
sbb
mov
pop
jne
rolb
mov
mov
lods
mov
fsub
pop
cmpsl
rclb
test
dec
mull
cs
inc
in
sti
sbb
jl
and
ret
push
jnp
cs
clc
jmp
xchg
ds
or
or
and
sub
int3
jg
inc
cs
jnp
cmp
mov
or
mov
xor
iret
mov
fwait
icebp
xor
cld
sub
in
out
rorl
cld
cmpb
rcrb
mov
inc
and
ret
cmc
cmc
and
adc
data16
jmp
pusha
push
hlt
xor
bound
incb
into
scas
inc
push
pop
cmp
or
pop
inc
scas
fwait
out
repnz
or
pop
mov
dec
iret
mov
stc
push
sub
dec
clc
dec
dec
mov
ja
push
cs
push
push
jecxz
sub
xchg
movsl
or
sti
out
scas
xor
mov
shl
rclb
setno
rorl
sub
jge
in
rcrb
dec
out
stc
mov
sub
aaa
add
xchg
push
outsb
call
dec
jo
adc
xor
lret
xchg
xlat
sub
int
dec
int3
pop
ret
aas
cmpsl
sbb
aad
push
xchg
mov
dec
jns
lea
clc
jns
out
mov
into
push
icebp
jns
ret
sar
or
int3
loopne
sbb
hlt
push
pop
sti
xchg
inc
dec
lea
fsubl
movsb
int3
dec
imul
notl
out
in
insl
cmp
std
lods
add
std
xor
aad
jmp
mov
sub
dec
jo
push
loop
and
cmp
orl
adc
xchg
fsubl
test
dec
push
repnz
sub
adc
data16
jnp
into
mov
xor
cld
mov
lods
bound
mov
scas
je
stc
cmp
add
add
push
mov
mov
mov
push
push
sbb
fisubrl
imul
insl
pop
pusha
mov
mov
or
ds
aas
add
in
cmpsl
cmp
sbb
cmp
sti
pop
mov
mov
push
push
aam
dec
sbb
inc
xor
out
jbe
jns
out
das
cwtl
out
test
std
push
mov
rcrl
jae
xor
mov
xor
push
sub
jecxz
mov
xor
mov
fiaddl
adc
bswap
mov
imul
push
inc
xor
lods
enter
add
outsb
in
aas
outsl
out
lock
jmp
jmp
cwtl
add
repnz
mov
pop
popl
pop
and
and
mov
lea
test
sbb
inc
pop
adc
dec
sub
dec
or
arpl
adc
mov
push
dec
dec
addb
or
add
cmpsl
fists
cmpsl
sub
push
xchg
fisubrs
out
scas
das
mov
adc
clc
ret
imul
mov
ja
inc
repz
jb
xchg
jmp
ret
and
ret
lret
sbb
cs
xor
fwait
jle
cmp
and
mov
inc
lret
jle
adc
xor
xchg
dec
sti
mov
iret
pop
or
pop
dec
dec
mov
and
ja
and
std
outsl
stos
xchg
pop
int3
cld
dec
mov
je
test
andb
jle
pusha
ljmp
scas
arpl
mov
je
push
insl
mov
or
lock
cmpsb
fsubr
mov
cmp
mov
lock
mov
leave
pop
sub
adc
mov
xchg
xchg
repz
pop
inc
das
xchg
sarb
loop
scas
test
mov
dec
lea
mov
pop
pushl
rcrb
ret
lcall
mov
pop
mov
adc
add
adc
test
ds
jb
cmp
pop
scas
imul
clc
mov
mov
jmp
js
pop
outsl
xchg
jg
pop
mov
imull
pop
outsl
cmp
dec
std
lea
imul
mov
and
mov
jmp
sbb
test
dec
loope
mov
into
mov
xor
push
cmpsl
insb
mov
jmp
add
lods
rcll
and
fldl
mov
decl
mov
push
lea
and
push
adc
ja
push
pop
xor
mov
ja
jecxz
jl
std
xchg
jno
roll
mov
push
cli
fs
dec
hlt
lods
cli
pop
js
lods
sbb
xchg
xor
sarl
xlat
shll
jmp
dec
fisttpll
pop
rcrb
loopne
add
jb
mov
adc
dec
jb
repz
cmpsl
or
jo
sbb
in
sub
sub
rolb
fwait
dec
lea
cmpsb
push
mov
mov
cs
stos
jno
fucom
mov
jns
sbb
outsl
rcll
xchg
aaa
or
add
lahf
and
mov
popa
push
mov
insb
fstps
ds
dec
mov
scas
xchg
pusha
dec
pop
add
out
cmp
cld
jmp
loop
mov
imul
jns
or
int3
nop
clc
popf
ror
xor
push
pop
xorl
add
adc
sub
and
incb
aaa
es
pop
decl
pop
xorb
out
test
mov
das
incl
cmp
pop
shrl
or
arpl
add
loope
jp
lock
movsb
inc
popa
in
arpl
bound
icebp
sub
sub
call
iret
cmp
xchg
xchg
or
lcall
and
cli
sub
sub
aas
je
shrb
dec
ss
jmp
mov
pop
movsb
rcrl
mov
adc
out
or
scas
fadd
hlt
push
adcb
lcall
sbb
imulb
mov
cmp
repnz
sub
adc
jb
inc
xchg
test
int
push
les
fiadds
test
into
cltd
mov
xchg
sbb
xchg
insb
and
pusha
daa
xor
ret
sbb
cltd
test
test
movsb
seta
xchg
push
clc
negb
js
shrl
lret
popa
dec
cwtl
adcl
mov
inc
mov
and
shl
int
test
xor
add
inc
out
lds
ljmp
sub
shll
dec
add
jecxz
iret
sbb
cmp
movsb
stos
pusha
jle
inc
push
aas
in
addb
cwtl
mov
std
or
daa
sar
fisttps
push
out
sub
xor
data16
popf
fmuls
jecxz
sarl
seto
nopl
xchg
jne
shl
mov
add
popf
xchg
sbb
repz
sub
sub
push
pop
add
xchg
ret
jp
cli
stc
nop
lret
mov
lret
push
out
inc
pop
imul
fs
int
jg
mov
dec
fildl
mov
jg
inc
test
xchg
pushf
imul
int
jp
jnp
pop
lds
mov
dec
sub
js
leave
stc
sub
fs
cmpsb
or
jno
adc
in
int
pop
sarb
mov
pop
and
xchg
push
xchg
jb
lret
cs
movsb
mov
loopne
cmp
inc
cmp
repz
xor
jle
test
outsb
mov
mov
mov
shrb
adc
imul
cmp
jle
or
and
add
notb
scas
cwtl
nop
in
push
xor
inc
mov
adc
aaa
fadds
das
jle
cmp
aas
mov
fsubrs
sub
pusha
clc
mov
ja
xor
add
std
jb
inc
std
sbb
mov
push
jl
sub
jmp
xchg
fadd
jb
pop
fbld
xchg
aad
jmp
cli
clc
insb
mov
push
and
jmp
mov
push
xor
cmpsb
sahf
push
ret
inc
jg
roll
cs
push
cs
idivl
ficoms
jo
and
pop
dec
jmp
sarl
hlt
je
sbb
stos
dec
or
mov
xlat
inc
pop
push
movb
push
in
test
out
mov
outsl
or
imul
out
inc
pop
mov
mov
mov
psllw
mov
fadd
inc
clc
mov
mov
jo
mov
scas
hlt
push
je
data16
cmp
mov
out
out
cs
push
push
je
test
dec
and
or
sub
sbb
cmpl
fwait
dec
cs
add
rclb
cmp
jg
cmp
cmp
repnz
jbe
fsts
add
fisttpll
cmp
mov
test
ret
adc
sti
daa
aam
xor
jnp
in
push
inc
arpl
int
jg
mov
subl
test
lock
adc
sbbl
add
shll
add
pop
or
sub
mov
xorl
std
mov
rorl
insl
les
push
lods
xlat
adcb
out
inc
adc
sarb
xchg
bound
imul
mov
mov
loope
pop
dec
rol
mov
sar
fwait
aaa
cmp
iret
mov
popf
fisubrs
mov
hlt
xchg
mov
mov
aas
into
es
push
jge
sbb
mov
inc
or
or
outsb
adc
inc
cmp
push
mov
cmc
loop
sbb
sub
adc
jne
nop
cmp
push
jae
rolb
cmp
pusha
pushf
mov
pop
xchg
sbb
add
cltd
and
out
push
movsb
movsl
mov
iret
test
popa
test
cmp
jecxz
popa
mov
xor
sbb
lea
dec
or
jecxz
dec
es
xchg
cmp
loop
addr16
dec
rolb
inc
jmp
pop
fs
jmp
mov
sub
push
push
rcl
jbe
mov
lcall
adc
hlt
jbe
insb
ret
arpl
sarb
mov
sub
cmp
mov
mov
sbbb
dec
xor
fnstsw
push
push
push
imull
loopne
inc
add
sbb
imul
adc
mov
ljmp
or
mov
dec
test
cmp
push
pusha
call
xor
lods
adc
cmp
mov
rolb
adc
cmp
jnp
add
or
sub
or
ja
mov
cs
out
mov
jge
adc
fists
lahf
out
push
stc
subb
inc
lret
push
sbb
jae
push
push
sub
repnz
add
fsubr
xlat
test
aas
xor
pushf
into
sub
arpl
nop
adc
xor
lcall
sub
adc
imul
pop
inc
dec
fdiv
addb
push
test
sub
xor
or
sbb
sub
xor
iret
cmc
and
cmp
sbb
les
dec
adc
jmp
pop
xchg
sbb
push
cmp
movsl
pop
insl
jmp
int3
out
repnz
cmp
scas
das
mov
dec
loope
sub
xor
fidivrs
cltd
das
in
mov
sub
out
mov
mov
scas
mov
inc
call
inc
fsub
lods
or
xchg
dec
push
out
movsb
xchg
push
push
or
push
add
rclb
ds
popf
inc
repz
decl
mov
xor
inc
lods
cs
iretw
jb
leave
push
sbb
or
loope
in
or
fdivrl
sbb
hlt
mov
inc
data16
cmp
in
jo
mov
push
das
lahf
cltd
enter
mov
cwtl
adc
sub
leave
rcl
mov
add
test
xchg
insb
mull
cld
mov
rcr
or
wrmsr
sbbb
hlt
outsl
sar
imul
push
xor
inc
insl
icebp
inc
gs
imul
jg
or
loopne
cmp
push
rorb
adc
add
jne
fldl
aam
push
popa
rcll
cmp
mov
ret
adc
inc
push
lret
xor
movsb
cmpsb
pop
cli
adc
imul
nop
idivb
cmp
es
lret
loop
adc
dec
sub
push
call
dec
dec
filds
mov
repnz
xchg
in
mov
mov
adc
pop
sub
sbb
test
negl
insb
out
mov
pop
cmp
mov
mov
insb
fstl
pop
mov
js
frstor
lock
adc
icebp
out
test
icebp
or
in
pop
pop
aam
sarl
pushf
gs
jp
jb
add
push
sahf
xlat
jbe
adc
fisttps
popa
xor
movsl
add
fdivrl
push
dec
cwtl
mov
icebp
mov
sbb
cltd
les
cwtl
outsb
xlat
lahf
mov
pop
mov
aad
jecxz
pop
pop
sub
lods
in
gs
mov
mov
and
int3
hlt
out
and
les
mov
inc
ret
test
jb
outsb
testb
cmp
jae
es
sub
sbb
cmpsl
dec
cmp
push
jo
hlt
add
lret
cmp
mov
lret
dec
inc
and
jns
aas
outsb
sbb
dec
ljmp
out
cmp
jl
mov
dec
in
mov
sbb
addr16
cmpsl
movsl
popa
xor
inc
repz
mov
mull
in
inc
jno
ss
adc
adc
mov
push
push
fcoms
das
call
add
pop
lods
shlb
xchg
nop
xchg
mov
dec
xchg
imul
repnz
or
sub
les
outsb
push
push
or
sbb
and
aas
movsb
xchg
cmp
dec
push
mov
icebp
sub
and
je
bnd
call
repz
mov
pushf
dec
movb
jnp
xchg
push
dec
cmp
push
push
fcompl
or
pop
lods
and
mov
push
mov
inc
test
int3
fsubl
jp
cmp
aad
mov
insb
push
push
push
jns
clc
inc
and
lea
fimull
xor
mov
dec
or
icebp
adc
cs
sub
mov
shr
push
or
fs
pusha
incl
add
lods
hlt
mov
push
add
mov
mov
call
leave
clc
loopne
and
loope
dec
mov
cmp
mov
lock
lds
push
xor
jb
push
xor
repnz
cmp
mov
sub
ret
lret
inc
inc
ds
aad
in
xor
or
xor
movsl
jbe
insl
inc
std
js
fcomp
adc
pop
aad
cli
int
dec
lock
and
hlt
std
adc
jmp
mov
xchg
inc
mov
push
adc
pop
loop
or
inc
cli
xchg
sbb
lahf
add
sub
imul
adc
ret
jmp
pop
ss
call
mov
add
in
push
jbe
cltd
xchg
jne
jno
fildl
adc
xchg
sbb
push
ret
stos
mov
test
arpl
mov
xchg
pop
dec
sbb
and
sub
out
loopne
int
cmpsb
sub
movsl
pusha
inc
adc
mov
inc
sbb
sbb
test
xchg
je
sbb
fnstcw
add
pop
xchg
call
adc
orl
sub
and
xor
and
pop
cs
jo
dec
fisubs
testb
cmp
sub
mov
insb
inc
decl
test
cmc
jb
ds
gs
push
mov
mov
jp
sti
mov
pop
inc
inc
cwtl
dec
lods
gs
cmpsb
push
fistpl
mov
jne
sahf
cmc
mov
push
and
lret
test
mov
and
fmull
xchg
pop
cmp
adc
dec
and
dec
and
or
cmp
out
pop
xchg
and
iret
aas
ljmp
jmp
movsb
out
cmpb
mov
mov
cmpsl
and
cmp
and
jb
push
push
data16
shll
clc
cmp
mov
push
ret
jp
mov
lret
repz
ret
pop
mov
in
mov
fwait
adc
xor
inc
daa
lods
incb
fwait
lods
mov
lock
pusha
je
and
aaa
mov
ret
jmp
shl
jl
repnz
test
int3
cmp
hlt
cmp
dec
xor
ficoml
int
mov
or
pop
iret
stos
inc
pop
test
push
xchg
xchg
arpl
mov
mov
xchg
clc
mov
cmp
xchg
movsb
jo
iret
mov
push
mov
jl
lret
test
dec
pop
mov
inc
push
xchg
inc
idivb
les
or
and
addl
fs
push
lcall
fs
add
jmp
inc
inc
jecxz,pn
xor
stos
addr16
mov
inc
add
xor
stc
jb
jb
adc
add
mov
xor
xor
movsl
cmp
add
out
pusha
push
mov
pop
sub
mov
push
push
cltd
aam
push
add
pop
lods
mov
aad
xchg
sar
xorl
inc
fcmovnbe
add
adc
pop
cltd
loopne
in
les
ret
gs
dec
js
xor
sub
xchg
outsl
js
ds
jns
je
push
cld
pusha
in
xchg
dec
int3
or
adc
faddp
cmp
lcall
adc
aas
adc
fsubs
mov
aad
adc
push
fildll
mov
rcrb
lea
or
cs
stc
fdivs
imul
aaa
pop
mov
lcall
loopne
nopl
jae
xchg
bound
push
or
pop
xor
or
or
inc
adc
mov
sbbb
test
mov
push
adc
insb
insb
adc
sub
cmpsl
and
push
inc
xchg
mov
mov
and
push
sti
sahf
dec
mov
mov
push
call
test
push
pop
push
lods
pop
out
enter
jle
push
loope
out
movb
test
hlt
xchg
mov
dec
add
repnz
xchg
inc
std
pop
frstor
xor
fdivrs
in
popf
aam
jecxz
cltd
mov
adc
iret
mov
pop
mov
inc
ror
aam
idiv
stos
das
sub
jge
repnz
test
sbb
xchg
cmp
mov
push
pop
daa
mov
dec
adc
out
mov
adc
mov
jp
pop
stos
idivl
add
out
cltd
imul
test
les
inc
fsubs
push
mov
out
fs
pop
shrb
mov
lock
adcl
jns
dec
rcrl
jle
push
lods
mov
or
call
sbb
mov
divl
cld
and
movsl
and
mov
fwait
sbb
push
je
dec
addl
sbb
jbe
xchg
iret
ljmp
mov
dec
das
ret
push
movsl
push
sbb
cmp
and
mov
imul
jle
or
mov
sub
jmp
out
outsl
adc
mov
pop
sbb
add
or
and
sbb
stc
insb
sarb
fisubrs
out
sbb
into
cmp
cmc
xor
fmul
xor
pop
lret
push
fidivs
repz
fwait
dec
test
push
lock
xchg
jbe
loope
sbb
mov
shll
movsl
bswap
icebp
jae
xchg
les
sub
scas
mov
shlb
mov
lahf
inc
jo
addb
out
outsb
lret
fldenv
adc
xchg
das
cmpsl
scas
outsl
mov
xorl
int
sub
mov
fnstcw
pop
cmpsl
ret
enter
fsubrp
clc
lds
sbb
addr16
and
popl
fists
lea
add
sub
and
int3
or
xchg
or
cltd
iret
adc
daa
pop
fmull
mov
jb
dec
call
ss
add
fadds
jne
jne
mov
cmp
int
add
jle
int3
adc
push
mov
mov
gs
mov
aad
cmp
push
sti
les
cmpsb
pop
lods
cwtl
push
add
jmp
push
jbe
call
sti
inc
and
test
aaa
mov
repnz
fwait
negb
mov
mov
ror
cmp
xor
cmp
in
and
and
ljmp
sbb
call
mov
xchg
mov
and
adc
movsl
pop
or
jge
pop
loopne
call
mov
test
sub
aaa
xor
testb
hlt
call
mov
in
out
sub
cld
fidivrs
push
jnp
fldl
xchg
shr
bound
inc
dec
adc
xor
call
push
loopne
daa
inc
xor
mov
fsubs
jp
adc
sbb
cltd
cmpsl
sbb
pop
leave
xor
ror
xchg
mov
cmp
addr16
sbb
jb
inc
in
in
inc
cmp
mov
es
lcall
cmpsl
ss
mov
cmc
nop
sub
or
dec
cmp
in
push
lahf
je
sub
cmpsl
or
or
mov
push
out
and
sub
dec
push
push
rcl
or
div
das
xor
popf
pop
cmp
and
inc
xor
fmul
mov
stos
mov
xor
loope
cmc
mov
xor
inc
dec
xchg
cmp
push
daa
outsl
jae
mov
mov
mov
sarl
jb
jb
movsb
cmc
imul
pop
into
pushf
fdivl
pusha
sbb
stos
cwtl
or
mov
mov
inc
mov
jge
sbb
aaa
push
mov
fnsave
dec
fsqrt
xor
push
mov
mov
cmpsl
or
pop
orb
repz
in
ror
rolb
mov
pushf
je
cmp
repz
push
xor
add
add
adc
adc
xchg
cltd
fs
cs
dec
rcr
scas
sahf
stos
jg
cmp
cmpsl
lret
sbb
pop
push
cmp
stc
stos
mov
or
sbb
sti
mov
and
xchg
inc
fwait
mov
add
mov
push
mov
adc
push
xchg
iret
cltd
dec
sbb
lahf
popa
mov
pop
js
or
sahf
cmp
mov
inc
pop
cmp
inc
out
cmpsl
pop
stos
or
mov
in
sub
out
lds
imulb
fsubrs
xchg
mov
sbb
mov
out
pop
jge
int
jmp
shr
shrl
jb
in
pop
cli
xchg
test
pop
pop
cli
ret
mov
pop
aad
out
repnz
sub
jmp
inc
lock
jns
mov
pop
push
ret
std
push
mov
dec
mov
ja
lods
jne
mov
mov
jmp
and
lret
mov
rolb
out
std
mov
movsl
push
cmc
mov
lods
imul
or
loop
cmpsb
add
cmp
jno
and
add
xor
xchg
pushf
pop
js
out
sbb
aas
daa
jns
popa
adc
xor
ss
imul
adc
ljmp
clc
or
dec
adc
test
xor
add
inc
sbb
lods
mov
or
rcrl
cmp
loopne
pop
and
inc
pushf
dec
mov
xor
xor
cmp
push
inc
push
addr16
imul
sbb
add
pop
popf
push
and
adc
sbb
shr
push
hlt
mov
sub
dec
lods
cmp
hlt
fldcw
fcoms
sub
into
adc
jl
sahf
mov
mov
lods
pop
or
cmc
stos
shlb
cmp
jmp
adcl
and
xchg
ljmp
add
and
mov
cmpsl
ja
mov
icebp
fnstcw
mov
push
imul
sbb
loop
mov
adc
add
push
popa
sub
lahf
push
addl
or
test
int3
or
iret
jge
clc
mov
mov
cmp
xor
addr16
imul
lds
popf
lock
outsb
sahf
popa
mov
movsb
insb
sub
scas
ficompl
mov
cmp
push
dec
jmp
cli
pop
add
or
or
pop
data16
adc
pop
fs
or
hlt
add
mov
jl
ret
out
xchg
adc
sub
imul
fs
shlb
or
add
loopne
dec
fs
mov
push
push
pop
ss
inc
jns
jno
shrb
xchg
push
jne
inc
es
xchg
add
pop
loop
fdivl
push
sbb
xchg
or
cmp
sub
int
xchg
imul
fnsave
jle
sbb
mov
pop
mov
cmp
in
mov
lods
jmp
push
sub
jecxz
leave
pushf
jae
pop
mov
or
test
sbb
ds
adc
sahf
add
fxsave
sahf
js
jno
inc
dec
add
test
xorl
in
mov
jnp
cmpb
push
loopne
out
mov
sbb
out
ljmp
aam
test
stos
push
iret
mov
clc
cmp
jne
sarb
in
cmp
imul
mov
aas
scas
popa
dec
dec
push
xchg
sbb
mov
jg
fucomp
in
cmpsb
cwtl
mov
mov
pop
inc
sub
int
add
addr16
push
imul
jbe
and
das
lods
mov
sar
in
inc
divb
jl
add
xchg
loopne
sub
mov
dec
out
inc
pop
lcall
add
inc
xchg
inc
jb
lods
jmp
imul
sub
inc
or
in
fstpl
mov
xchg
adc
shll
aas
jns
and
mov
lock
jo
sar
push
cli
cld
int
stos
les
xchg
and
pop
adc
cs
push
inc
mov
add
out
cli
and
jns
lret
movsbl
mov
fadd
jge
lret
inc
mov
add
xchg
in
push
dec
js
rorl
xchg
xor
outsb
and
cmc
cmp
mov
pop
dec
push
fiaddl
or
jne
pushf
jbe
and
pop
mov
in
rcrb
shl
ljmp
add
test
aaa
in
outsl
jae
cmp
outsl
out
clc
insl
fistps
push
std
jecxz
shl
mov
sti
test
inc
add
js
enter
mov
mov
mov
fcmovb
sub
roll
sub
jb
popf
sete
push
cmp
in
daa
lcall
mov
fcomps
and
pop
jl
cmp
in
inc
mov
lahf
cmp
push
xor
xchg
das
imul
and
lea
in
cmpsl
lret
je
inc
mov
sbb
inc
mov
add
stos
cmp
push
mov
shr
in
nop
in
mov
jg
fsubs
cltd
clc
pop
loope
xchg
lret
cmp
mov
into
mov
push
icebp
andb
clc
dec
xor
xchg
insb
cld
jne
gs
mov
cmp
mov
push
mov
lods
dec
add
rcrb
mov
push
push
fwait
jno
je
test
and
cmpsb
loopne
gs
lahf
add
jo
xor
frstpm(287
sub
pop
lods
xlat
mov
sub
cmpsl
push
mov
repnz
adcb
sub
jge
push
iret
cmp
insl
daa
push
pop
fwait
rcrb
jl
mov
sbbb
int3
fmul
or
inc
test
sub
movsb
inc
inc
mov
sbb
cmp
xor
loope
repz
adc
popf
sub
shll
cmp
xchg
sub
call
cwtl
lcall
rcr
ret
nop
cwtl
jmp
shlb
dec
lds
lds
fimuls
in
ret
adc
mov
lcall
dec
cmp
rcrl
stos
cmpb
fadd
jnp
cmp
add
stos
cltd
lcall
cmp
sbb
dec
scas
cmpsl
pusha
cmpsb
cmp
push
lret
mov
jl
out
movsb
cmp
fldenv
not
scas
aad
pop
pop
sbb
rolb
ja
sub
pop
iret
ljmp
lret
fmul
inc
test
fwait
sub
mov
nop
prefetch
xor
dec
or
push
js
xor
in
inc
cli
in
add
lcall
add
add
pop
fcmovnbe
in
push
dec
ret
cmp
shl
rol
lods
cld
mov
stos
jae
push
int3
jne
add
sbb
ror
test
addr16
outsl
rorl
nop
adc
and
popf
lret
addl
lods
inc
dec
inc
ljmp
dec
ss
mov
out
jmp
cmp
cmp
pop
pop
mov
inc
pop
div
loopne
xchg
ret
int
scas
inc
sub
fisubs
inc
rorb
jge
jno
push
xorl
adc
aam
in
popa
sbb
xchg
dec
test
push
inc
repz
addr16
xchg
and
mov
in
lea
mov
and
shlb
mov
rcl
cs
stos
jb
cmp
sub
les
xchg
in
clc
mov
stos
add
adc
or
pop
aaa
pop
sar
in
js
int3
cmp
pop
add
sbb
jb
jnp
push
pop
add
testb
cmc
pop
leave
add
jns
lret
sbb
xor
sbb
and
jmp
xchg
in
popf
xchg
fstl
ret
push
aam
jns
movsb
push
aaa
cmp
pop
leave
mov
aad
inc
popa
xchg
cmp
push
xchg
fldenv
pop
shlb
sbb
xor
in
mov
mov
shl
ja
xor
loopne
lds
sbb
adc
mov
push
das
out
test
pop
mov
clc
mov
sub
lahf
or
mov
xchg
stos
cmp
or
adc
popa
dec
popf
or
and
mov
sarl
stos
adc
xchg
xor
in
in
adc
daa
loopne
and
jg
orl
dec
sbb
daa
mov
cmp
outsl
cmc
mov
rcl
fwait
xor
mov
ret
dec
cmp
outsl
sti
adcb
xchg
or
data16
pop
jne
imul
xor
mov
pop
inc
lret
xchg
movsl
mov
scas
mov
out
dec
and
mov
ja
in
imul
stc
mov
fcoml
in
imul
pop
loopne
inc
or
push
dec
ficomps
dec
mov
and
call
test
pop
xchg
dec
push
pop
mov
mov
push
adc
jne
adc
cmc
pop
loop
and
ljmp
shl
and
popf
adc
daa
and
insl
stos
repz
iret
rcrb
stos
pop
mov
adc
test
inc
jl
dec
push
add
add
xorb
inc
push
xor
fmull
mov
sti
cli
sti
aaa
mov
xor
mov
push
cmpsb
push
lret
leave
mov
xchg
int
sub
fistl
popa
into
dec
jmp
mov
cs
fists
and
add
loop
jl
mov
sbb
mov
cli
popf
cmpsb
dec
and
cs
test
stos
aam
xchg
roll
scas
jl
xchg
subl
imul
cmp
subl
out
lods
mov
jb
aas
xchg
icebp
inc
insb
push
aaa
jnp
xor
out
sbb
inc
lret
cmp
mov
adc
sub
fwait
jns
lahf
sub
push
andl
rcrl
or
sub
mull
outsb
roll
scas
push
pop
jae
xor
pop
in
sub
out
rorb
xor
mov
nop
mov
popf
cmp
movsb
insb
xchg
add
xor
xchg
sti
mov
mov
push
fdivrl
jle
cmpsb
mov
mov
cmpsb
dec
mov
push
cmc
xor
fcmovb
jae
hlt
xchg
gs
push
push
cltd
mov
ficomps
mov
jp
adc
mov
stc
stos
es
mov
ret
add
mov
xchg
or
sub
pop
fsubrs
xchg
fucomip
jmp
outsl
in
aad
inc
addl
add
cmp
cmpb
mov
movb
xchg
mov
cmpsl
push
sbb
lahf
xor
cmp
cld
sbb
sbb
xchg
rcll
shrb
cwtl
sub
or
add
adc
cmpsl
cmpsb
lahf
add
cmp
pop
xchg
mov
cld
cmp
mov
ret
add
ret
sub
mov
jae
into
test
and
loop
aad
movsl
inc
mov
push
push
or
mov
sbb
lret
hlt
not
sub
and
cmp
or
out
mov
test
lea
pop
sbb
inc
jmp
and
sbb
ljmp
dec
inc
lahf
sub
ret
push
or
sbb
arpl
movsb
insb
test
sub
popf
add
pop
pop
mov
jl
push
inc
inc
push
test
movsl
pop
into
jmp
mov
jbe
imul
cld
in
add
cmpsl
dec
icebp
stc
jp
adc
in
mov
xchg
ds
js
mov
lods
mov
stos
pop
dec
dec
mov
cwtl
push
sti
subb
enter
cmc
ret
sub
xchg
ret
inc
iret
test
mov
cli
rolb
dec
in
xchg
fsub
mov
gs
imulb
mov
out
es
cli
lods
out
pop
lret
sub
push
test
sub
xlat
fadd
out
pop
pusha
cmp
je
mov
sub
xor
fidivs
repnz
out
es
jno
gs
jp
push
frstor
pop
ficoml
mov
dec
ret
outsb
pop
jecxz
dec
test
outsl
out
push
and
inc
fcoms
xor
out
into
stos
imul
jb
inc
xor
xor
insl
enter
push
cmp
push
loop
push
mov
or
inc
mov
pusha
pop
inc
adc
pushf
cmpsl
sub
and
xchg
cmp
xlat
jns
notl
add
xchg
push
imul
jle
cmpsl
add
xor
mov
rolb
cmpsl
addr16
mov
or
push
stos
pop
push
insl
jmp
iret
push
pop
addr16
sub
add
subl
sahf
fildll
mov
aas
mov
push
cld
loop
pop
scas
stos
cmpsl
movsl
out
es
repz
das
ss
aad
fistl
xchg
push
popf
or
push
xchg
xor
adc
pop
in
int
dec
data16
inc
inc
test
imul
fcmovne
xchg
dec
dec
mov
rcrb
add
imull
ds
inc
pop
add
insb
test
rorb
pop
stc
repz
outsl
clc
mov
sub
addl
xchg
mov
outsl
xchg
push
int
movsb
hlt
adc
pop
push
push
push
fmuls
stos
into
xchg
or
sbb
or
mov
es
mov
movl
dec
sbb
push
roll
lret
jl
or
or
andl
mov
cmp
jecxz
xchg
shrb
cmp
rcrb
addr16
mov
rcll
out
es
mov
loope
dec
pop
xchg
ret
jne
pop
jnp,pn
aad
mov
hlt
gs
mov
ljmp
repz
out
cmp
in
std
cmp
loop
cmp
das
jns
sub
pop
cmp
inc
jne
fiaddl
add
nop
fcomip
jp
je
std
dec
and
aaa
mov
push
dec
gs
lea
mov
xor
repnz
xchg
lds
xchg
push
push
jge
mov
das
ds
icebp
lret
inc
mov
and
mov
pop
or
cld
popf
test
shrb
data16
add
and
and
ds
sbb
dec
cmpsb
pop
in
std
lds
lods
push
fwait
adc
pop
mov
fstpl
xchg
cmc
insl
xlat
mulb
xor
inc
push
lds
lds
xchg
in
pushf
in
sarb
xchg
fisubrs
lahf
js
push
add
mov
in
xchg
xchg
and
jp
loope
leave
mov
cmpb
lea
neg
out
adc
mov
pop
mov
sub
adc
fimuls
mov
call
jg
inc
nop
xlat
cmpsl
fdivl
sub
sub
adc
loop
sub
mov
into
mov
jne
add
or
lret
adc
jmp
sbb
jne
mov
xchg
jmp
div
jmp
push
fs
pop
loope
mov
fcoml
cltd
and
cmp
mov
xor
das
jb
sbb
js
mov
scas
pop
push
sbb
jp
sub
jl
lea
stos
xlat
dec
aad
xor
fwait
mov
or
sub
mov
cmp
push
mov
mov
pop
mov
into
aaa
scas
aas
xchg
insb
lds
imul
dec
jae
fistpll
sbbb
mov
daa
cmp
data16
out
shrb
push
in
lods
xor
bound
inc
sub
pop
pop
xor
call
shrl
xor
inc
mov
lret
or
fsubp
in
out
scas
pop
cmc
aam
adc
jb
mov
mov
imul
mov
scas
push
fsts
mov
pop
mov
pop
jl
xor
in
xchg
pop
push
xchg
ss
push
and
sub
fwait
je
push
pop
pop
push
xorb
arpl
add
repnz
mov
push
push
sahf
pop
lock
inc
cmp
scas
mov
loop
pusha
jo
pop
mov
pop
jmp
int
mov
jp
fdivrs
fisttpl
aas
pop
mul
hlt
testl
inc
cld
imul
inc
jmp
jo
cli
inc
mov
rcll
sbb
cli
sub
mov
inc
push
add
cltd
testl
outsb
mov
cmp
imul
rolb
testb
xchg
shll
ret
aas
push
cmp
adc
hlt
jecxz
stc
fstpt
test
dec
mov
hlt
out
call
cwtl
stos
and
fwait
mov
sbb
pop
std
popa
mov
data16
cmpsl
push
pop
mov
out
movlps
movsl
out
cmp
adc
mov
out
cltd
fisttpll
out
ljmp
je
or
pop
cmc
std
out
lods
cmpsl
fsubl
rcrl
sbb
loope
ss
pop
int3
mov
xor
jae
dec
pop
adc
xorl
mov
and
sbb
adc
mov
iret
or
ljmp
testb
loop
jmp
add
xorl
sbb
xchg
pop
jmp
mov
ret
jae
dec
mull
xlat
push
lret
outsb
mov
cmp
mov
sbb
dec
push
add
lock
xchg
out
loope
sub
mov
push
dec
cmp
sbb
scas
ficoms
cmpsb
ja
inc
stc
insl
jecxz
xor
mov
xor
sub
test
mov
add
xchg
cmp
sub
into
xor
cmpsl
xor
pop
dec
pop
mov
xchg
pop
or
dec
and
fildl
cmp
sbb
scas
in
icebp
push
loopne
stos
cmp
dec
lahf
imul
into
cli
loop
and
idivb
pop
dec
dec
sub
sti
enter
fdiv
mov
incb
in
jle
cmpsb
add
in
sbb
xlat
mov
add
cmp
popl
dec
add
jne
pop
sbb
xchg
sub
out
sub
pop
xchg
cmc
pop
pop
mov
ljmp
testb
push
push
je
push
mov
push
repnz
test
sub
dec
mov
pop
and
add
aad
je
lods
push
jg
pop
cld
pushf
adc
enter
lret
mov
inc
sbb
sub
pop
jns
and
push
in
push
iret
test
sahf
sbb
dec
in
dec
andl
shr
ficoml
jmp
in
loope
or
add
jo
rcll
in
jmp
xchg
ja
adc
mov
fstpl
cwtl
ret
push
stos
pop
lret
adc
stc
pop
xor
bnd
jecxz
pop
aas
pop
fiadds
or
cmpsb
cs
outsl
jg
popa
pushl
xchg
lds
pushl
iret
jle
push
filds
in
pop
cmp
sbb
xchg
add
js
dec
push
stc
shlb
jo
mov
fmul
daa
test
ljmp
xchg
inc
adc
lds
and
dec
xchg
aas
lds
dec
test
orb
out
sar
outsl
sbb
mov
push
xchg
sub
pop
repnz
xchg
push
divb
ret
inc
rcl
movsb
fwait
or
sbb
idiv
mov
cwtl
aaa
push
fadds
mov
mov
ret
out
ret
xchg
mov
pushl
mov
adc
add
dec
jb
lods
addr16
clc
jle
xchg
push
inc
lret
aad
arpl
test
mov
adc
je
jbe
push
add
fadds
pushf
sub
push
cmp
insb
ss
fsubrp
sti
cmpsl
cwtl
mov
and
addb
imul
into
lods
pop
cmp
lcall
add
iret
add
lods
pcmpgtw
lock
inc
hlt
xor
lea
and
dec
fidivrl
fisubrs
pop
ljmp
mov
push
aad
movsl
rolb
xor
insb
sarl
sbb
sub
jns
xor
xchg
cli
call
and
lock
xchg
push
retw
dec
js
mov
xor
ljmp
add
aas
push
sbb
push
inc
inc
xchg
les
mov
sbb
pop
push
cmp
adc
jnp
dec
xor
mov
jecxz
dec
imul
loope
addl
pop
test
lret
scas
test
lock
aaa
fsubl
js
out
loopne
lcall
inc
cmp
cmp
dec
cmpb
push
aaa
jg
into
pop
rorl
test
es
insb
shll
mov
js
lods
pop
inc
andb
jno
mov
sub
iret
adc
and
push
cmpsl
dec
mov
movsl
adc
jge
test
xor
or
into
ljmp
xchg
loop
aas
or
pop
mov
inc
js
outsl
add
cli
sbb
mov
add
mov
popl
adc
cmc
add
add
xlat
scas
sub
std
jb
jle
lret
pop
dec
shlb
scas
ret
out
rol
loop
inc
pop
xchg
pop
loopne
aad
fildl
lea
sub
mov
hlt
or
push
int
out
out
imul
mov
adc
mov
test
je
cltd
fisttpl
sbb
movsl
loope
dec
jo
sbb
fs
lahf
fisttpl
and
mov
jae
enter
push
cmp
cmc
lcall
subl
mov
xlat
dec
jmp
and
cmp
add
add
pop
add
les
and
scas
mov
inc
imul
or
insb
xor
cmova
dec
outsb
inc
mov
pop
fsubr
arpl
stos
or
mov
inc
pop
lahf
andb
jg
pop
data16
aad
ret
mov
repnz
stc
jae
sar
fwait
xor
fistps
mov
imul
adc
inc
xchg
mov
out
sbb
jecxz
cwtl
ss
adc
add
sbb
mov
test
cld
rcrl
adc
sahf
ret
fldl
and
xor
test
pop
cli
pop
pop
pop
push
mov
rorb
dec
dec
or
mov
lock
mov
andl
in
outsb
das
push
inc
dec
jmp
ret
leave
cltd
adc
xor
push
rolb
rcrb
popa
lods
or
push
movsb
push
stc
push
test
inc
jns
sub
cmc
mov
bound
into
vcmpsd
loope
dec
jmp
sbb
jnp
add
iret
jns
add
icebp
dec
xchg
sub
sbb
test
les
xchg
fisttps
sub
sub
in
sub
and
repz
add
or
xchg
shrl
fmulp
mov
xchg
xchg
mov
push
xchg
xchg
jae
xlat
push
add
gs
jmp
cmp
or
stos
adc
testb
jae
inc
cmp
repnz
inc
xchg
movhlps
int
arpl
mov
aam
pop
inc
lods
or
jbe
adc
cli
js
daa
cmpsl
fdivrs
sub
lea
jne
fisttps
sub
into
mov
ret
add
mov
enter
xchg
xchg
fdivl
cltd
mov
push
es
test
add
mov
cltd
andb
mov
stos
jne
in
cld
fdivs
pop
cli
outsl
mov
xchg
adc
ret
lcall
shll
cmpb
xlat
bound
movsb
ds
popf
out
jl
and
lods
mov
fwait
cmp
push
int3
loope
pushf
out
add
repz
push
cmp
push
push
sbb
lock
mov
lods
mov
or
mov
mov
mov
mulb
fstpl
stos
cmp
movsb
xor
sahf
shlb
or
xchg
sbb
out
imul
cs
stos
cs
jle
jp
xor
push
ja
int
icebp
ss
cli
adc
ja
aas
icebp
movsb
addr16
dec
push
aaa
insb
fmulp
sarb
and
push
lds
push
mov
rcrl
jmp
and
ss
mov
sahf
or
cmpsb
ljmp
sbb
movsl
sbb
fistpl
add
or
xor
mov
pop
into
jmp
rorl
pop
subb
xchg
jbe
push
push
jle
mov
sub
sbb
cli
daa
mov
jge
mov
je
or
mov
mov
cmp
push
jmp
cmp
pop
outsl
ficoms
es
and
jmp
in
sahf
push
mov
xchg
mov
add
adc
iret
mov
les
test
push
and
test
fldcw
hlt
jo
and
cmpsl
adc
dec
and
cmp
mov
std
inc
mov
ss
sub
gs
jge
mov
jnp
sti
xor
fsubrs
popf
pop
nop
outsl
lahf
xchg
mov
push
lea
adc
lods
in
mov
jo
sub
mov
jge
mov
addr16
pop
es
sbb
aaa
or
mov
cmp
xchg
xor
lods
xor
add
adc
js
push
fistl
xlat
jne
imul
jb
out
popf
xchg
or
out
xchg
jecxz
inc
add
push
sbb
mov
sti
test
mov
xchg
mov
mov
jae
gs
cltd
aad
push
outsb
push
mov
xchg
shl
xchg
mov
cli
loope
mov
bound
in
outsb
dec
mov
and
gs
pop
cmp
mov
gs
aam
sbb
pop
in
mov
fisttpl
dec
xor
mov
xor
mov
pop
mov
cmp
in
mov
out
sub
popa
dec
aam
sub
xchg
ret
es
sahf
cmp
repz
mov
cld
add
lahf
popl
loopne
sarb
pop
push
mov
cmp
jg
sub
cmpb
test
imul
les
xor
addr16
repnz
out
mov
mov
dec
xor
pop
sub
xor
ljmp
inc
mov
lret
cli
hlt
pop
cmp
mov
hlt
ficompl
pop
or
mov
xchg
push
pop
test
bound
scas
add
sub
cmp
push
adc
pushf
mov
adc
xchg
mov
push
add
dec
add
mov
cmp
repz
and
jnp
mov
je
mov
or
mov
int
js
sub
test
mov
mov
adc
sub
pop
mov
adc
outsl
cmp
push
movsl
aad
nop
sahf
push
xor
sbb
outsl
ret
stos
jge
xor
mov
loope
arpl
insl
jne
repz
pop
leave
cmpl
and
dec
jno
pop
lds
pop
stc
ja
or
in
push
dec
pop
ret
movsl
or
xor
dec
jbe
test
sub
push
xchg
dec
and
stos
xor
add
imull
inc
push
inc
ret
sbb
orb
mov
rorl
add
ljmp
fwait
push
sbb
jns
data16
bound
jle
dec
inc
xchg
pop
pusha
xor
sbb
or
ret
cmp
inc
xor
rcl
adc
mov
daa
sbb
inc
outsb
adc
movsbl
pop
mov
push
hlt
pop
pop
cmp
sti
pop
inc
rcrl
xor
cwtl
mov
dec
shl
or
cld
jmp
xor
jge
fbld
cs
jge
mov
adc
dec
ds
sbb
fisttps
push
push
daa
or
pop
mov
fsub
je
jae
and
push
mov
add
popf
lret
pop
int3
sti
pop
in
je
pushf
sub
lahf
leave
out
je
lods
call
mov
jge
cmp
push
jl
mov
cmp
shrb
leave
fistpl
mov
sti
sbb
fldenv
xor
shlb
mov
pushf
and
out
mov
test
xor
insl
shll
movb
jno
jb
sbb
subl
int3
cli
add
ss
ja
xchg
jns
lret
test
cmpsl
push
in
gs
into
cld
sbb
clc
lea
movsb
jo
mov
cmp
test
out
test
add
xchg
pop
dec
and
inc
mov
xchg
xchg
leave
ss
pop
les
sbb
add
test
outsb
mov
dec
cmp
das
test
add
mov
inc
enter
loopne
mov
sub
add
dec
jb
rol
xor
push
mov
cmp
cmpsb
mov
jo
jmp
popf
mov
fiaddl
push
cmp
rcl
xor
sbb
jg
or
cwtl
mov
cmc
sti
cltd
shlb
nop
inc
fwait
mov
sbb
mov
or
leave
fcomp
inc
mov
mov
xor
sub
dec
test
push
nop
mov
jmp
push
push
dec
loope
dec
sti
in
cwtl
adc
aas
push
lods
cmpsb
mov
mov
outsl
notl
xor
daa
xchg
jns
int3
sub
inc
cmp
aas
sub
lods
sub
orl
std
pop
sub
cltd
sbb
mov
ds
ds
test
sbb
jne
mov
aad
lds
aad
mov
in
cmp
xor
cmp
inc
cmp
jmp
faddp
add
add
sbb
or
xchg
or
outsb
pushl
mov
xor
inc
xor
sub
enter
rcr
imul
jb
call
adc
jns
pop
mov
jne
in
inc
dec
aas
in
roll
psubusw
push
mov
mov
sahf
xor
sub
pop
jno
add
roll
std
sub
test
mov
sbb
aam
mov
mov
pop
cwtl
push
mov
sub
insb
ss
psllw
inc
shrl
cmpsb
inc
jl
cli
addr16
clc
fdivl
dec
jle
dec
into
push
iret
scas
mov
jecxz
sarb
loopne
das
sbb
mov
xchg
cmp
enter
scas
pop
fwait
clc
mov
call
mov
inc
in
addb
xor
jbe
gs
xor
addb
imul
mov
aas
fwait
sub
imul
xor
cltd
sub
xor
mov
cmp
adc
ret
jbe
shl
or
inc
sahf
aas
or
and
mov
dec
mov
add
add
cmp
mov
mov
stos
xchg
inc
hlt
lock
stc
push
ss
test
sub
mov
mov
je
jecxz
out
cwtl
mov
outsb
inc
mov
stos
aas
mov
jle
lcall
rcl
leave
cmp
and
xchg
dec
scas
push
inc
and
xchg
dec
pop
scas
pushf
call
jns
ret
or
ljmp
imul
xchg
push
dec
and
dec
pop
pushf
sbb
notb
fnsave
stos
ret
mov
mov
ret
mov
sbb
mov
and
ret
das
fwait
inc
push
imul
adc
cmpsl
jne
push
lret
iret
push
xchg
mov
jne
mov
push
xchg
mov
test
daa
add
push
and
add
cmp
sbb
mov
jb
xlat
aaa
and
hlt
test
xor
pop
xor
fists
mov
xor
ret
addr16
loopne
dec
xchg
push
lret
pop
mov
sahf
jle
xchg
nop
cld
loope
add
mov
cmpsb
lods
fsubrp
mov
pop
pop
inc
les
or
jl
jnp
push
imul
cltd
add
jbe
int
mov
xor
sahf
inc
push
cwtl
lds
adc
shr
mov
push
out
pop
cmc
clc
add
clc
mov
xchg
dec
ret
xor
sub
scas
jmp
mov
and
pop
cld
jmp
andb
ljmp
adc
das
pop
pop
stos
sti
inc
cli
repz
and
mov
mov
dec
aaa
xchg
insb
loope
xchg
and
mov
fcomps
pop
in
popa
push
mov
fmuls
pushf
xchg
test
jg
ds
jg
and
lods
ret
rorl
adc
sub
addr16
inc
xor
jg
add
lcall
rorl
jo
lods
jno
loopne
pop
adc
cmpsl
test
sub
pop
test
pop
ficompl
nop
jae
lods
jecxz
sbb
notb
sbb
adc
gs
mov
lahf
popf
in
jns
rcrl
mov
mov
or
ret
mov
mov
test
adc
das
mov
loope
push
mov
mov
int3
mov
adc
cmp
sarl
fistpl
outsl
icebp
rcrb
add
pop
push
pop
rcr
push
sub
pop
out
jae
mov
jp
push
inc
cmp
sub
imul
jmp
ss
xchg
jae
mov
insb
fwait
or
xchg
or
inc
lods
xor
mov
or
add
stos
pop
or
popa
adc
lret
into
stc
cmpl
xchg
inc
jb
pop
dec
adc
cmc
cmp
imul
out
mov
push
rcl
adc
pusha
mov
pop
pusha
out
cltd
aas
adc
lock
jle
in
dec
add
push
adc
jle
sbb
sti
mov
dec
out
pop
into
cmpsb
mov
pushf
mov
lock
dec
mov
subl
inc
jl
insb
cwtl
mov
out
in
jmp
inc
inc
pop
dec
pop
int3
mov
pushf
js
jl
jno
sub
xchg
in
push
inc
xor
nop
sbb
and
pop
add
out
pop
mov
mov
mov
out
inc
fidivrs
lods
gs
xor
clc
bound
pop
lret
sub
mov
stc
xchg
jb
mov
fnsave
and
clc
xchg
cmpsl
xor
testl
push
or
hlt
push
out
mov
pop
dec
fsts
daa
rclb
jmp
cwtl
adc
or
movd
xlat
mov
shrb
fwait
xchg
cmp
pop
jnp
call
cmp
push
sbb
pop
cmpsb
xor
lods
jnp
ds
loope
ljmp
mov
div
xchg
std
xchg
call
sbb
xor
mov
out
mov
cmpsb
pop
dec
xlat
dec
push
mov
lock
ds
dec
add
push
sub
sub
lahf
call
sbb
loope
arpl
scas
hlt
je
test
loop
push
ror
xor
loop
adc
aaa
fstl
jecxz
ds
and
inc
test
jae
into
jne
jo
pop
xor
insb
xlat
jne
add
mov
or
jb
stos
push
in
loop
cli
cmp
dec
push
ret
imul
dec
cmp
jne
je
sub
sub
incl
scas
cmpsl
lea
add
insb
xor
mov
movsl
jnp
in
enter
mulb
lods
jp
rorl
sbbb
pop
fadds
stos
dec
clc
jno
hlt
out
sbb
cmpb
cmp
jb
adc
mov
or
mul
in
jl,pt
and
pop
in
pop
push
cs
shlb
cld
lret
add
xor
scas
dec
lds
insb
add
pop
mov
stos
lret
ds
push
adc
cwtl
push
or
cwtl
sahf
push
imul
ljmp
inc
aad
fmul
lods
push
call
scas
cli
test
mov
pop
cwtl
mov
bound
cltd
stc
fisttpll
outsl
or
lret
jecxz
add
inc
mov
cld
and
and
mov
mov
in
xchg
pop
adc
and
cli
inc
fsubrl
pop
mov
fwait
in
popf
pushf
lea
insl
movsl
fisttpl
mov
sub
repz
jbe
shl
pop
data16
mov
mov
cld
rcrl
mov
incl
cmp
sbb
add
jnp
xor
in
and
inc
cmc
movsb
inc
in
popf
call
jne
movsl
lret
sti
or
or
lea
repnz
xor
lods
les
mov
add
sbb
pop
xor
das
lcall
or
aam
aad
rcrl
and
roll
jp
andb
mov
xor
mov
les
push
xchg
iret
hlt
lcall
leave
xor
cmp
cli
repnz
lahf
repnz
shlb
add
ret
aam
and
jmp
outsb
xlat
pop
dec
xchg
push
lods
cmp
sahf
repz
inc
int
or
pop
add
pushf
push
xor
test
je
sub
call
clc
sub
popa
jb
mov
daa
jno
push
out
sbb
scas
mov
lahf
aad
dec
fcomps
out
cltd
dec
jecxz
push
pop
test
scas
sbb
sub
insb
rcrl
mov
rolb
push
pop
xchg
dec
jns
or
lea
aad
mov
or
and
daa
sub
cmp
adc
xchg
inc
jmp
fsubrs
testl
and
pop
jp
cltd
mov
xchg
xchg
fistps
test
add
cmpsl
add
ja
test
push
pop
aas
xchg
lahf
fmull
inc
sbb
inc
int3
out
cwtl
adc
mov
sub
stos
shrl
in
dec
inc
push
cmc
adc
mov
mov
add
mov
xchg
sub
mov
mov
adc
rcll
mull
lret
xchg
test
xor
xchg
lods
pop
lds
sub
jbe
push
jge
out
push
dec
icebp
sar
mov
mov
lds
test
inc
fisubrl
xchg
adc
push
mov
push
das
enter
aas
ja
scas
jnp
add
lea
in
mov
js
jns
movsl
jne
lahf
push
scas
jecxz
xlat
add
imul
jecxz
mov
cld
jae
les
push
out
mov
lea
dec
sub
lret
cmp
pop
adcl
mov
sub
mov
pop
into
add
pop
daa
mov
mov
push
out
int
icebp
aas
mov
adc
mov
popf
cmpsl
movsb
fcomps
bound
push
insb
push
ret
call
inc
ds
popf
popf
xor
mov
inc
push
and
add
dec
out
ret
lret
arpl
and
jns
sub
notl
inc
xchg
aad
rcr
pop
jnp
clc
sub
je
mov
push
inc
sarb
and
push
test
shlb
add
mov
lret
adc
inc
and
cmpsb
mov
inc
cli
cld
xor
test
and
movsb
xchg
mov
adc
sbb
push
into
gs
mov
int
nop
in
icebp
jle
int
xchg
repnz
mov
xchg
imul
rcrb
xchg
sbb
jmp
out
movsl
addr16
dec
push
inc
call
or
sbb
fs
mov
xchg
out
jmp
pop
mov
movsl
xlat
push
adc
pusha
jbe
mov
mov
inc
xchg
mov
push
outsl
pop
adc
out
das
mov
jp
stc
sub
xor
mov
and
xchg
sub
setge
pop
or
jae
inc
mov
xlat
daa
xlat
or
cmp
and
std
push
es
sbb
pop
lahf
fwait
mov
or
and
xacquire
dec
adc
inc
scas
fdivrs
stos
mov
dec
sahf
rorl
xchg
mov
or
fwait
cmp
inc
adc
pop
ljmp
pop
jp
push
data16
sahf
adc
xlat
mov
or
loope
in
adc
rcll
or
jbe
mov
mov
ljmp
data16
add
add
mov
cmpsl
adc
fisttpl
add
jnp
xor
push
movsl
lret
mov
lods
addb
in
pop
and
xchg
mov
icebp
add
insl
jmp
dec
xor
rcrb
lock
jae
shll
popf
push
rclb
mov
push
lock
pop
sbb
xchg
push
pop
xor
je
int
das
and
mov
or
sarb
dec
mov
test
xchg
jb
out
dec
jecxz
inc
fnstenv
data16
push
cmp
jo
or
add
cmp
repz
or
push
push
nop
inc
sub
cmp
out
into
sub
dec
jo
out
or
cli
iret
fcmovu
lods
sub
pushf
push
int3
aad
jge
fistps
mov
adc
sub
cmp
out
push
xchg
jecxz
movsl
push
ss
jle
leave
shr
mov
js
call
jl
jns
int3
mov
jge
scas
sub
adc
leave
jo
and
dec
pop
sub
loop
jne
mov
test
or
xchg
loope
stos
or
outsl
push
shlb
js
outsb
dec
aaa
in
mov
inc
scas
adc
push
and
xchg
cmp
hlt
cltd
sub
fwait
cmp
sahf
mov
mov
rorb
into
jne
sar
pop
adc
sarb
jbe
xor
push
adc
incl
insb
les
cltd
cmp
repz
inc
ja
cwtl
fmuls
jle
addps
mul
faddl
sbb
cli
pop
inc
test
add
add
push
pop
stc
mov
xchg
lret
pop
dec
lea
and
cmp
mov
add
xor
ljmp
fidivrs
jecxz
cmpsl
mov
fnstenv
pop
stos
pop
mov
sti
inc
out
mov
mov
loopne
push
aam
mov
mov
shll
mov
push
and
test
ret
jge
dec
addr16
dec
pop
dec
or
icebp
sub
nop
pop
cmp
adc
xor
out
dec
mov
pop
mov
pop
adc
out
mov
test
scas
fs
enter
mov
and
stc
daa
gs
cmc
or
adc
in
push
dec
gs
rcl
push
dec
in
dec
sub
fnstenv
xchg
pop
jae
jmp
mov
enter
ret
xchg
push
xlat
mov
xchg
sub
or
repnz
les
dec
inc
paddb
inc
xor
test
jb
and
popa
fsubp
adc
je
mov
inc
inc
jp
inc
test
xchg
sti
mov
mov
jle
stos
orb
aam
fcmovnb
inc
pop
xor
lea
mov
ljmp
mov
aam
inc
fs
loopne
rcr
mov
cli
and
pusha
bound
adc
jne
fildll
fsubl
mov
mov
cmc
jne
out
out
fiaddl
mov
imul
sbb
xchg
or
cmc
cmc
jb
push
cmpsl
mov
jns
daa
vmwrite
jb
or
outsb
add
pop
pop
and
or
loopne
and
xchg
lss
in
ret
ljmp
jo
insl
xlat
sti
sbbl
cmp
xor
jge
xor
inc
ds
out
aam
fcoml
push
int3
mov
or
mov
jo
inc
mov
lea
push
pop
mov
and
pop
pop
xchg
xchg
lods
sbb
enter
dec
jmp
jne
xchg
fwait
adc
push
dec
mov
mov
xchg
inc
pop
insl
and
push
lock
or
out
add
cmc
mov
ss
jne
inc
iret
sbb
rcrb
cmp
jl
xchg
cmc
dec
sub
lret
sub
xchg
rcr
sti
mov
arpl
pop
sub
mov
mov
fcomps
scas
outsb
jnp
sbb
mov
push
loope
loope
dec
test
lea
popf
pop
aam
and
cmp
loope
mov
shr
fisttpll
xchg
outsl
push
xchg
mov
jb,pn
mov
cmp
mov
cs
add
notl
daa
push
fisttpl
call
jae
add
pop
mov
sub
out
cmpsl
xchg
mov
in
ficompl
fs
mov
fcompl
cmp
rclb
jle
fcompl
xchg
jl
lret
clc
je
add
in
jp
test
mov
shll
or
push
cmp
mov
jmp
xchg
cmpsb
fisubrs
mov
jp
push
cld
stos
cmp
test
inc
decl
or
leave
or
lock
sub
mov
mov
jl
shlb
mov
ljmp
sbb
fnstsw
outsl
repz
inc
test
in
push
imul
inc
lock
jp
lods
mov
popf
xor
push
mov
xorb
gs
sbb
lock
jmp
fisttpl
inc
ret
cwtl
lahf
push
mov
sub
xchg
xchg
xchg
xchg
and
mov
inc
mov
lods
call
xchg
inc
gs
sub
and
cmpsb
das
xchg
inc
test
push
loop
xchg
pop
jmp
inc
jg
in
jmp
add
sbb
or
aas
jb
movsl
add
fdivrl
je
rcrw
pop
push
test
ds
repz
fwait
popf
bound
mov
dec
jne
pmulhw
xor
test
and
or
push
icebp
xor
in
js
stos
call
notb
into
or
push
xchg
lret
rcr
push
loop
pop
push
call
insb
test
daa
sbb
into
arpl
fnsave
or
sub
xchg
outsb
rcl
iret
daa
ret
mov
and
pop
insl
imul
outsb
fsubrs
cmp
push
and
rcll
ds
std
fisubl
cmp
push
ljmp
std
push
mov
add
jnp
xor
std
and
ss
sub
ficoms
fildl
out
xchg
xchg
into
pop
add
mov
rcl
data16
jns
cmp
test
add
inc
mov
mov
xor
in
imulb
inc
dec
aas
decl
je
dec
imul
or
lock
cmp
out
outsl
inc
stos
jl
data16
mov
inc
pop
lea
ja
cmp
mov
and
stos
pop
add
dec
je
sti
pop
push
lock
pop
in
data16
aas
cmpsl
xchg
fistl
movsb
shrb
enter
xor
xchg
rclb
mov
adc
in
adc
mov
jno
mov
scas
enter
mov
add
stos
rorb
jo
push
out
adc
icebp
jle
cmp
inc
mov
pop
fwait
jge
les
sbb
adc
out
ss
cmc
adc
sbb
mov
cmpl
xlat
rorl
in
adc
inc
cmp
or
sbb
push
hlt
cmp
mov
push
shl
nop
cmp
push
lcall
popf
lret
iret
mov
aaa
xor
call
fnsave
mov
out
hlt
inc
cld
jl
sbb
inc
ds
pushf
dec
cmc
shrl
rolb
sbb
sbb
repz
cmp
jne
rcl
pushf
inc
mov
pop
adc
mov
or
fistpll
adc
imul
enter
push
mov
dec
mov
dec
mov
jle
lcall
jno
pextrw
or
test
sarl
and
mov
and
sub
sub
inc
sbb
mov
repz
push
ja
xchg
adc
dec
hlt
adc
sbb
push
add
andb
ds
jae
loopne,pt
loop
scas
add
cmp
in
cmp
divb
mov
sub
mov
xchg
mov
loopne
jns
aas
mov
mov
and
sub
je
gs
sub
jl
int3
xchg
pushf
mov
repz
pop
adc
int
scas
xor
out
inc
sarl
or
shlb
mov
repz
adc
aad
rcll
adc
mov
lcall
ja
shlb
clc
sub
mov
push
push
mov
add
jb
push
cmc
lret
jecxz
push
insl
mov
shr
pop
adc
sahf
xchg
or
cli
mov
int3
cs
jg
arpl
in
jp
mov
lahf
inc
cltd
fnstenv
sbb
adcl
adc
push
and
or
jg
push
pop
cs
daa
xlat
or
or
and
cmp
sbb
sub
push
popa
push
push
lods
and
dec
push
out
inc
mov
pop
xor
or
lea
jecxz
pop
pop
ds
mov
dec
insl
jge
test
mov
sub
inc
bound
add
int3
scas
fiadds
mov
or
jecxz
mov
add
andb
inc
sarl
test
mov
lock
hlt
jmp
addr16
mov
and
xchg
jl
sbb
add
ja
pop
int3
sub
sti
push
push
push
inc
adc
sbb
data16
mov
xchg
in
dec
xchg
push
or
ds
jmp
xchg
xlat
add
repnz
lods
mov
pop
cmpsl
lea
mov
sub
push
in
sar
sub
jbe
xchg
enter
mov
jg
movsl
jg
or
inc
push
popa
leave
push
addb
imul
psubq
push
sbb
push
leave
mov
mov
dec
outsl
scas
add
enter
out
movl
nop
mov
xlat
xchg
rorb
shll
addr16
cmp
rorl
and
mov
mov
push
push
xor
xchg
dec
dec
pop
cmp
pop
push
int3
dec
sbb
xchg
or
adc
inc
stos
and
ss
cmp
iret
gs
dec
ja
in
jbe
mov
xor
adc
push
adc
lods
scas
push
pop
add
shl
int3
lahf
adc
mov
sbb
popf
fidivl
xlat
stos
mov
outsl
ds
jecxz
or
push
sub
fnstsw
push
jmp
mov
icebp
scas
cwtl
je
pop
cmp
arpl
xchg
or
xor
adcb
push
les
rcrl
cmp
cmp
rcll
sub
out
nop
inc
jmp
push
dec
lahf
movsb
loop
inc
xchg
mov
inc
or
jl
inc
or
aas
xchg
test
roll
add
decb
cwtl
add
gs
pop
test
sahf
push
push
inc
xor
repz
hlt
lea
jbe
out
xchg
mov
ds
imul
pop
jl
enter
mov
xchg
and
mov
inc
clc
mov
fldl
and
push
sbb
mov
sub
and
sub
push
daa
fnsave
adc
jne
jbe
int
mov
and
sub
call
xor
ss
inc
popa
jle
pop
iret
ret
inc
test
dec
loop
mov
sbb
std
ja
jne
ret
pop
subl
xchg
mov
sbb
pop
cmc
mov
lock
and
lock
and
cmp
mov
insb
sbb
arpl
out
mov
in
shll
adc
mov
and
xchg
mov
xor
loope
jp
cmp
inc
mull
push
packssdw
jmp
icebp
and
nop
pusha
jmp
or
inc
mov
xor
test
jbe
rorl
rcl
or
add
mov
sbb
insb
insl
scas
jns
xor
fdivl
movsl
int
cmpsb
adc
cli
and
pop
sub
fiadds
push
jae
push
loope
in
dec
xor
je
shll
jbe
mov
xchg
stos
dec
mov
cmpsl
pop
mov
pop
inc
sbb
cwtl
scas
lea
iret
cwtl
rorl
loop
in
and
inc
and
mov
jb
adc
mov
xor
jno
sub
lahf
and
cmpsl
sbb
mov
pop
imul
jl
imul
outsb
adc
cmp
xor
fiaddl
push
mov
das
lcall
or
sbb
test
jbe
or
aas
xchg
push
stos
add
mov
push
add
lret
dec
sbb
dec
mov
jns
push
loope
cmpsl
int3
cli
sub
cli
mov
sbb
pop
mov
mov
cs
dec
pop
aam
add
imul
xor
jno
and
mov
and
and
mov
xor
pop
add
push
pop
push
mov
sub
pop
popf
mov
jge
pop
mov
addl
mov
jmp
jp
pop
icebp
fiaddl
mov
pop
test
xchg
jno
sbb
inc
in
xor
es
inc
in
dec
cmpsb
or
mov
jns
jns
dec
rorb
push
push
jno
in
lret
out
daa
pop
mov
jecxz
inc
in
mov
add
or
xlat
adc
push
dec
stos
add
arpl
repnz
xlat
add
xchg
fists
out
rcll
inc
jno
lcall
pop
pop
xchg
mov
cmp
sub
scas
sbb
scas
fdivl
out
mov
cs
mov
dec
int3
fsubl
inc
into
shr
pop
push
pop
xor
mov
dec
inc
ficompl
mov
and
xchg
dec
jne
in
movsb
in
inc
cmp
scas
in
jge
popf
adc
fwait
pop
dec
or
sub
cwtl
orb
xchg
test
push
mov
rcrb
pop
lret
mov
mov
inc
ljmp
inc
push
sbb
out
ds
negl
xor
and
jmp
movd
scas
repz
mov
aam
ljmp
test
int
arpl
arpl
and
add
ja
stos
inc
mov
sbb
mov
lods
sbb
mov
mov
jno
cmp
shrb
mov
xchg
rcrb
int
iret
ror
adc
pop
pop
dec
cs
pop
rcrb
xchg
add
stos
inc
testl
or
addr16
inc
and
fcmovbe
movsb
mov
enter
inc
cmp
and
cmp
leave
add
sbb
jmp
mov
daa
push
stc
cmp
xor
xor
xor
sahf
push
in
push
and
xchg
sub
push
add
xor
loop
or
and
call
sbb
pop
adc
ds
idiv
loope
lods
flds
fldenv
inc
movsl
mov
mov
rolb
leave
loopne
adc
adc
outsb
insl
push
sub
add
inc
xchg
inc
jne
cltd
or
fs
push
cmp
inc
out
sbb
lret
sub
fadds
popa
ret
push
loopne
jbe
out
repz
xlat
jmp
insl
adc
mov
repnz
std
pop
shlb
mov
jl
mov
les
push
fistpl
loope
add
mov
pop
adc
mov
and
sbb
mov
xchg
sbb
cs
adc
sub
pop
insb
ja
popf
mov
sahf
aam
repnz
lret
popf
sub
mov
in
or
imul
cmp
mov
dec
adc
hlt
es
cmp
fists
xchg
addr16
xlat
cmp
push
inc
mov
sbb
inc
mov
repnz
inc
jge
mov
inc
and
xchg
sbb
daa
fldcw
in
and
fsts
mov
jmp
sub
cmp
std
aam
sbb
jno
addr16
pushl
adcb
in
lcall
aas
push
sub
mov
je
aas
popl
or
and
fildl
or
sub
hlt
sbb
loope
adc
sti
popa
and
xlat
push
xor
jp
add
outsl
jae
insl
sbbb
push
addr16
and
mov
cmp
adc
loope
roll
mov
xorb
sub
sub
lahf
dec
punpckhwd
mov
mov
gs
data16
inc
cmpsb
sub
adc
repz
and
imull
and
loope
pop
jle
mov
adc
pop
repnz
cld
add
dec
dec
jbe
push
xchg
xchg
test
push
scas
inc
pusha
mov
pop
popf
call
xor
jecxz
icebp
fadds
push
inc
and
mov
mov
mov
test
mov
adc
jl
mov
test
adcb
and
xor
das
pop
out
loope
jo
or
xchg
mov
aas
test
aad
inc
outsb
mov
repnz
ja
popf
nop
sahf
in
fdivrs
mov
rolb
and
mov
push
add
xchg
pop
jmp
cmpl
xorb
out
sbb
pushf
dec
push
lea
add
mov
sub
push
cmp
push
in
cmc
gs
add
aas
sbb
fidivrl
clc
repz
pushf
sbb
data16
xchg
push
aas
in
fnsave
ret
jp
ds
mov
arpl
sub
xchg
fcom
lret
and
aas
inc
shlb
loope
adc
stos
fimull
into
xchg
adc
aad
mov
cmpsl
inc
dec
pushf
clc
xor
loopne
sub
dec
jns
sbb
pop
mov
mov
test
das
pop
mov
lahf
adc
fcompl
lods
pushw
xchg
iret
mov
sbb
popf
adc
mov
pusha
dec
xor
and
mov
push
scas
xchg
mov
popa
inc
cld
test
push
into
sbb
aad
sbb
pop
push
out
adc
idiv
addr16
mov
xor
rcll
mov
imul
inc
inc
or
add
pop
cmc
cmp
ja
mov
fstp
mov
mov
jmp
js
xchg
push
push
outsb
xchg
dec
jae
dec
rcrl
mov
cmp
test
stos
push
iret
leave
adc
fucomip
mov
icebp
lret
pop
outsl
cmp
cmpl
mov
mov
pop
cmc
loopne
aaa
bound
xchg
clc
xchg
aas
mov
mov
sbb
mov
dec
movsl
imul
jg
orl
push
pusha
xor
std
push
insl
sub
sbb
js
aam
add
jno
test
cltd
and
ja
mov
adc
sub
push
in
and
inc
add
cli
cmpb
mov
xor
arpl
add
dec
filds
pop
or
ds
bound
or
mov
pop
rcll
mov
jbe
adc
in
fadds
push
fisubrl
push
sub
mov
xchg
inc
outsb
cli
sbb
mov
sbb
fwait
add
es
es
jae
cmp
jns
in
shrb
cmpsl
pop
movl
pop
add
lds
inc
xchg
aas
stos
pushf
addb
jbe
loope
dec
fdivl
sbbl
dec
and
cwtl
jmp
fsubrs
lahf
jge
int3
dec
pop
in
fwait
ret
xor
sti
out
sub
push
jge
push
jns
dec
mov
std
lret
mov
std
inc
jnp
sbb
xchg
lds
cmpsb
scas
and
mov
fidivrs
push
pop
mov
mov
ljmp
jp
mov
lea
enter
subl
bound
dec
xchg
xchg
arpl
mov
push
test
ljmp
adc
in
xchg
inc
je
mov
mov
daa
sbb
mov
push
cli
in
fdivs
pop
imul
call
adc
int3
mov
adc
mov
repz
loope
das
xchg
jnp
jno
mov
xor
xchg
loop
sbb
sbb
cmp
inc
mov
pop
sbb
sbb
lcall
insl
xor
jns
ss
xchg
and
sahf
pop
int
push
jbe
or
pusha
pop
or
mov
ljmp
inc
adc
int
lcall
aas
pop
inc
adc
jb
jne
je
aam
and
sbbl
and
or
sti
add
lcall
xchg
xchg
ja
inc
fistpll
mov
xchg
js
sbb
jnp
out
lret
add
lods
jae
mov
sbb
repnz
xor
sub
icebp
xor
out
mov
dec
int
pop
test
adc
xchg
call
xchg
and
out
sub
shll
jmp
leave
hlt
shrb
jge
icebp
fucomp
aad
cmpsl
lods
pushf
fdivrs
or
push
sarl
xchg
pop
pop
inc
pop
mov
push
pop
cmpsb
decb
xchg
add
jb
lods
in
loopne
push
cmc
cmpsb
sti
repz
mov
sub
add
es
or
xchg
jmp
mov
leave
test
push
sub
je
sub
jno
xchg
fs
mov
pop
add
adc
in
push
mov
adc
jbe
mov
xor
pushf
lods
int
lahf
mov
mov
xchg
cmp
ja
push
es
dec
dec
fneni(8087
sbb
rcrl
xor
mov
ret
add
xchg
lods
ret
push
fs
or
enter
adc
rcr
outsl
mov
ja
subb
or
pushf
and
inc
call
xchg
inc
out
fildl
and
mov
shl
push
fisttps
jmp
popa
adc
js
adc
ljmp
jnp
push
add
jne
or
push
or
cmpsb
lahf
ret
push
push
hlt
dec
repz
outsl
inc
fdivrl
adcb
push
fsubs
add
adc
add
or
dec
xchg
xchg
jbe
xchg
jp
dec
mov
cmpsl
jp
dec
jle
sti
sti
jb
adc
aam
jl
jp
mov
push
imul
mov
repz
es
imul
mov
lahf
fdivrs
cmp
pusha
test
aas
jne
push
cs
add
popl
cld
cmpsb
jp
jmp
ds
inc
or
sub
lea
loope
xchg
out
cltd
aam
jns
ret
sti
inc
lock
out
test
mov
imul
add
adc
dec
out
mov
andl
stc
adc
insl
into
loop
mov
negl
mov
jno
cmp
inc
popa
pop
js
pop
xchg
pop
rcr
push
insl
gs
idivb
pop
xor
xor
pop
mov
push
lret
sti
shrb
xor
jmp
xorl
xchg
xchg
stos
popf
inc
mov
in
xchg
hlt
popf
int
lret
xchg
icebp
lds
push
jae
gs
test
in
xchg
add
mov
add
and
lds
decb
cmp
add
sbb
jnp
fldenv
fsts
das
jb
push
push
sbb
lret
xlat
jmp
imul
mov
sbb
and
repz
inc
dec
dec
sahf
cltd
jno
aas
orl
rcrb
dec
hlt
fcoml
cltd
and
cmp
rcl
add
push
adc
outsb
stos
jnp
mov
ret
mov
aam
outsb
hlt
or
cmp
inc
and
and
mov
jnp
ljmp
ds
and
scas
or
sti
loop
cmpsb
mov
jmp
frstor
inc
in
cmc
loopne
ljmp
jg
imul
pop
jbe
pop
add
mov
sahf
cwtl
dec
loope
jmp
pushl
and
or
repz
inc
aas
popa
mov
cmc
mov
leave
in
test
ret
fisubrl
repnz
dec
sub
rol
cmp
jb
cmpl
push
mov
mov
bnd
cmc
out
arpl
xchg
push
sbb
mov
aam
dec
ljmp
es
popf
insb
aad
faddl
lock
cmpsl
loop
bound
adc
sarl
test
aad
scas
or
int3
push
enter
pop
pop
dec
add
ss
or
cmc
mov
mov
popa
push
outsb
cmc
aad
orl
ficoml
jo
dec
imul
fs
push
test
lahf
and
insl
arpl
cmpsb
mov
adc
das
cmpsl
or
das
sub
sbb
xor
ja
int
and
or
dec
cli
ficoms
pop
push
leave
adc
bound
enter
or
orl
fisttpl
data16
jmp
sub
fwait
pusha
dec
jecxz
sub
sar
mov
shl
xchg
pusha
or
sbb
fdiv
inc
in
add
xor
aas
pop
or
mov
or
adc
mov
stc
push
dec
gs
inc
hlt
or
adc
adc
int
fs
push
loop
push
shll
aad
xor
xor
mov
jge
add
sub
test
and
call
mov
repnz
std
adc
mov
sbb
fistpll
in
xchg
push
in
lds
ljmp
decl
mov
mov
mov
es
adc
mov
push
inc
xchg
pop
inc
scas
push
mov
aam
pop
nop
movsb
fisubs
add
mov
out
xor
clc
xchg
push
jecxz
pusha
jle
jg
repz
inc
gs
add
or
es
jae
add
ret
jmp
loopne
ret
out
inc
mov
sbb
cmp
push
popa
cmp
xchg
aas
dec
pop
dec
dec
push
in
dec
push
and
adc
in
stos
bound
sbb
stos
xor
jmp
popf
mov
inc
test
inc
push
and
ljmp
aam
ret
int3
jecxz
ja
cmpsb
pminsw
ds
sbb
pop
dec
mov
rcrl
fiaddl
nop
movsb
mov
and
sbb
sbb
mov
scas
inc
sti
jb
flds
nop
fnstenv
stos
fwait
pop
loope
aaa
sub
dec
push
mov
jg
data16
aas
jecxz
test
sbb
les
sub
or
ret
push
stos
cmpsl
mov
icebp
mov
mov
loopne
pop
dec
xor
sbb
ds
cmp
mov
das
inc
push
sub
and
jmp
arpl
mov
xor
and
jle
insl
daa
push
or
jg
mov
mov
adc
pusha
xlat
std
loopne
push
notb
pop
imull
outsl
jb
aas
lret
mov
punpcklbw
push
mov
push
sub
out
push
pop
outsb
and
mov
pushf
divb
xor
or
sbb
push
ds
rorl
push
jne
stos
mov
push
pushf
call
popf
test
rolb
addl
jl
push
fcompl
lods
or
loope
cmp
cmp
or
pop
and
fdivr
cmpsl
fldt
pop
lock
add
xchg
mov
loopne
rcrl
push
js
movsb
sbb
arpl
jge
pop
dec
cmpl
and
cmp
push
bound
add
leave
repnz
dec
jnp
pop
cmp
test
push
push
pop
imul
call
dec
mov
int3
in
xchg
pop
outsl
or
out
loope
inc
and
lea
xlat
mov
movsb
adc
push
jmp
or
push
loopne
cmp
cmpsl
jae
xlat
cltd
out
out
cli
std
lods
es
and
dec
or
addr16
and
sti
sub
jnp
cmp
push
into
lcall
add
sbb
ficomps
cwtl
add
sbb
mov
repz
pop
lea
mov
mov
fninit
rcr
ficomps
jg,pn
js
in
add
and
cmc
insl
dec
add
jbe
mov
pop
add
jb
cwtl
cmpsl
lret
ljmp
push
add
int3
pop
and
in
push
or
jle
jge
jnp
jl
xor
jg
xchg
pushf
mov
mov
daa
xor
ret
int
mov
fisubs
into
mov
xchg
jns
sahf
int
jecxz
stc
aam
fcomps
dec
jnp
aaa
jge
sub
pop
insb
cmpsl
add
mov
movsb
lcall
rclb
adc
out
out
outsl
js
imul
xchg
addps
sub
mov
fidivs
into
sahf
adc
xchg
lods
xor
lret
lret
sub
int
sbb
je
or
addb
clc
icebp
xor
leave
lds
mov
sbb
or
arpl
fwait
subb
add
jecxz
sar
sub
inc
mov
xchg
inc
mov
pop
dec
fidivl
push
enter
push
jns
jo
push
fadd
shlb
push
cmp
add
mov
inc
jl
rorl
aas
cltd
sbb
js
movsl
fstp
sub
cwtl
mov
scas
or
movsl
xchg
fmuls
popf
cmp
xchg
mov
ja
frstor
mov
mov
mov
stc
jb
mov
sti
xorb
pop
mov
daa
mov
lods
aad
xchg
jmp
jb
repz
add
xlat
addl
popa
lea
popa
or
mov
cs
dec
pop
fsubr
addr16
sub
insl
push
inc
sub
fldenv
lcall
ds
out
pop
push
pop
add
test
mov
ss
mov
xor
push
pop
ret
push
movsl
sub
fcom
dec
inc
insl
loope
mov
and
out
jmp
inc
dec
cmpsb
lret
xchg
scas
dec
pop
mov
pop
lret
mov
mov
mov
pop
shlb
loop
cmp
lret
cltd
popf
lock
mov
dec
dec
nop
pushf
data16
mov
mov
std
cmc
push
fnstcw
mov
sub
pop
bound
jbe
mov
test
test
sbb
sbb
pop
gs
repz
xor
fstl
xchg
push
scas
in
idivl
std
add
fdivl
fwait
rcll
jo
jo
js
pop
adc
mov
adc
jbe
test
or
pop
mov
leave
cmp
iret
push
filds
testl
mov
mov
nop
jle
push
and
sbb
lret
pop
push
lds
mov
sub
adc
sahf
and
sti
push
xchg
pop
loop
dec
cli
jae
ret
add
xchg
jle
in
frstor
inc
or
in
dec
or
cmp
mov
dec
pop
fs
pop
in
cltd
pop
orl
lods
jno
sub
outsl
cmp
test
and
lahf
xor
call
dec
mov
loopne
pusha
add
nop
xchg
lods
testb
mov
js
outsb
adc
mov
or
ds
add
outsb
inc
clc
mov
adcl
cld
lcall
dec
or
cs
jns
adc
scas
arpl
or
add
lcall
mov
mov
fildll
mov
out
fstpt
out
push
dec
sub
idivl
paddq
inc
ja
data16
push
inc
leave
test
push
fbstp
shl
inc
flds
push
xlat
imul
mov
xor
mov
xor
or
push
cmp
aaa
mov
mov
mov
push
push
daa
add
xor
mov
cmp
pop
aam
sub
in
jne
js
call
and
rcll
inc
int3
aam
pop
cmpsl
loopne
into
inc
daa
mov
mov
sbb
insl
inc
xchg
or
lahf
push
stos
xorb
pop
das
sub
gs
sub
push
push
mov
xlat
loope
aad
mov
ja
mov
int3
and
js
rcr
leave
push
fwait
imul
js
imul
push
xor
sbb
xchg
repz
rcrl
inc
popf
fistpll
inc
xor
dec
leave
rep
adc
daa
in
pushf
mov
mov
cmpsb
movsl
or
sbb
adc
ret
in
adc
iret
push
je
test
pusha
decb
insb
gs
sub
sub
andl
in
dec
dec
out
lcall
mov
jl
dec
mov
movsb
mov
insl
xchg
cmp
sub
inc
jb
stos
icebp
pushf
int3
cmp
cwtl
lods
xor
lods
fs
mov
cli
ja
scas
sub
std
fst
pop
cld
fincstp
mov
out
fiaddl
lock
xchg
loop
pop
pop
add
mov
loop
push
mov
xor
aas
cmp
cld
lahf
lock
xor
mov
sarl
sbb
jecxz
cmpsl
aam
jnp
sub
mov
mov
sbb
pop
inc
rep
jg
adc
push
cmp
or
lahf
sub
push
pop
dec
xlat
jns
cmpsl
jbe
xchg
fdivrs
loopne
mov
push
mov
fwait
xchg
jg
push
and
test
jnp
mov
js
gs
int
out
xor
and
repnz
adc
pushf
jbe
push
mov
push
mov
test
aad
xor
daa
stc
mov
jge
aaa
subl
mov
sbb
fildl
sbb
andl
pop
aam
rolb
rol
inc
pop
mov
xchg
loop
jbe
jbe
lahf
out
sbb
je
mov
xchg
jecxz
hlt
xchg
cld
stos
jbe
fidivrl
aaa
fwait
push
shrb
sbb
mov
adc
dec
jg
fisttpl
in
cmp
aam
test
pop
cmp
inc
push
test
pop
cmp
nop
fdivrl
imul
mov
inc
or
and
loope
cmp
rcrl
sub
mov
rcll
jg
xchg
shrb
ret
aas
lods
iret
mov
in
aad
addb
dec
fadds
sbb
nop
pusha
in
jg
shlb
mov
clc
or
and
mov
icebp
inc
rorb
inc
repz
mov
xor
bound
pop
dec
pop
mov
xchg
inc
sti
jnp
cmp
pop
repnz
out
out
push
out
sbb
call
outsl
jp
push
cltd
aam
in
and
inc
cwtl
xchg
pop
insl
push
iret
sbb
mov
mov
xchg
inc
dec
inc
jne
fnstcw
out
push
fucomip
je
jnp
mov
cwtl
imul
jae
int3
cmc
icebp
add
push
xor
pop
xor
jb
ja
pop
xor
rorb
xor
bound
xchg
mov
add
je
pinsrw
addb
jecxz
jmp
add
mov
adc
inc
lcall
loop
insl
in
icebp
add
dec
movsb
call
pop
loop
divb
int
out
arpl
and
ss
mov
aaa
hlt
je
cwtl
jae
ss
xchg
cltd
notb
mov
stos
lret
dec
mov
xchg
pop
sbb
dec
andb
ret
xchg
mov
xchg
inc
dec
jne
xor
sbb
cmp
jb
inc
sbb
mov
addr16
ss
mov
in
lret
test
push
mov
jae
dec
std
mov
xor
shlb
push
leave
loopne,pt
mov
and
sub
repnz
out
cmp
fisttps
push
xor
sub
jle
pushl
inc
test
sub
in
dec
and
xor
push
xchg
lret
mov
int3
movsl
xchg
sbb
xchg
pop
lods
mov
jae
aam
pushf
data16
scas
in
lock
cmp
test
dec
jmp
sub
ret
mov
xchg
cmp
jns
fbstp
inc
imul
fwait
or
or
imul
xchg
popf
xchg
cmp
xchg
das
dec
fstl
adc
pop
mov
cs
sub
xor
inc
inc
cmc
loopne
mov
sbb
fidivrs
push
inc
mov
sahf
enter
and
pop
adc
out
mov
rol
adc
inc
shrl
cltd
arpl
and
cs
dec
hlt
arpl
aas
out
jb
fdivrl
push
and
ret
in
add
push
lock
leave
sbb
iret
in
dec
popf
add
inc
sub
aas
aas
inc
jns
jnp
sub
pushl
or
sbb
popf
in
into
xchg
jmp
inc
sbb
pop
clc
dec
adc
test
gs
imul
rclb
jge
scas
aaa
int3
outsb
sub
inc
sbb
outsb
test
shrl
mov
adc
shrl
cld
xchg
aam
js
dec
loope
xchg
loopne
idivb
adcl
adc
cltd
das
sub
cli
popf
inc
stos
sbb
adc
add
cld
cmp
test
popa
xchg
int
insl
xor
jecxz
inc
mov
lret
mov
mov
pop
adc
sarb
pop
cmp
mov
mov
aad
loope
cmp
mov
and
mov
jo
nop
mov
sub
or
mov
or
arpl
ret
xor
filds
adc
add
fs
inc
mov
inc
inc
jp
filds
cmp
mov
out
jo
fidivrs
das
cmp
cmpsb
adc
pop
push
cld
imul
and
sbb
lods
add
into
and
je
rol
shlb
sub
cmpsb
jb
add
mov
imul
mov
pop
pop
cmp
mov
cmp
pop
cmpsl
cltd
in
add
ja
mov
inc
sbbl
gs
push
adc
dec
repnz
clc
out
pop
adc
por
push
and
mov
xchg
inc
mov
mov
mov
pusha
jmp
hlt
jb
aam
push
mov
cmpsl
sbb
dec
xchg
push
mulb
movsb
imul
sar
adc
in
mov
and
dec
pop
push
pop
clc
fldt
push
clc
ljmp
sub
and
fcomp
lret
pop
dec
jge
rol
sbb
in
xor
push
dec
fsubrp
insb
sbb
mov
jne
nop
push
ljmp
enter
or
imul
fisubl
add
add
and
jo
rorl
mov
into
sub
push
dec
clc
movlps
push
xchg
cmp
sub
or
pop
cs
and
add
xchg
or
pop
cmpsl
inc
and
add
jg
cltd
or
mov
stos
xchg
test
and
das
jecxz
popf
idiv
mov
jle
mov
rcr
cli
push
stc
cmc
jnp
xlat
dec
in
cmp
pusha
jmp
stos
mov
repz
js
shll
inc
mov
lret
and
sbb
in
icebp
push
dec
fisttps
clc
push
loope
fcomps
jmp
push
and
xchg
enter
and
dec
lahf
adc
and
stos
inc
dec
fldt
pop
cmc
sbb
and
rcrb
in
inc
imul
clc
lahf
gs
in
cmovs
jmp
mov
movsb
pop
inc
xor
sarl
loope
push
popf
xchg
add
ret
ja
repnz
cwtl
lret
add
punpcklwd
movb
int
cmc
and
fldt
fadd
or
dec
leave
or
mov
test
shrl
das
xor
cmpsb
lcall
arpl
lods
cmpsl
add
jnp
adc
push
outsl
loopne
out
pop
ja
xchg
outsl
subl
sbb
jmp
adc
sbb
ffreep
cs
repz
or
aad
aas
or
js
cli
inc
dec
fs
sbb
out
mov
iret
or
push
pop
call
stos
sbb
push
and
mov
les
rorl
fmulp
scas
icebp
adc
xor
push
xchg
std
rcrb
std
ds
pusha
cmp
sbb
daa
xor
xchg
inc
mov
mov
int
cmp
push
leave
cli
in
adc
ljmp
ljmp
iret
or
ss
int3
sbb
and
std
push
int
and
sbb
mov
sbbl
cwtl
pop
cld
es
inc
lods
add
leave
hlt
mov
xchg
push
daa
imul
cld
repnz
lods
aad
inc
imul
fbstp
lret
cmpsl
inc
xchg
and
jge
jg
sahf
insb
cmp
dec
in
in
test
andl
xchg
cs
pop
mov
xchg
popa
cmpsl
mov
test
gs
push
dec
hlt
and
lcall
out
xchg
int
cmpsl
outsl
test
add
sub
mov
rol
and
cmpl
push
je
test
and
test
push
ja
adc
xchg
mov
cmp
jl
mov
ljmp
cmpsl
outsl
lcall
push
inc
cmp
add
jo
in
ret
dec
sahf
lods
mov
imul
xor
xchg
mov
je
pop
and
mov
push
sbb
sub
pop
jl
out
xor
enter
fwait
test
pushf
and
xchg
fists
or
xor
loopne
iret
in
sbb
fstps
jge
imul
inc
and
lods
cmp
xor
mov
sbb
cltd
sub
mov
adc
movsb
les
hlt
arpl
js
mov
add
or
mov
mov
xchg
xor
mov
push
leave
xchg
call
fsubl
cmpsl
mov
fs
andl
add
inc
mov
xor
aas
xchg
sub
bound
std
jge
cmc
dec
sub
popa
es
enter
roll
mov
dec
sarl
jecxz
mov
je
jle
fisttps
addr16
imul
push
and
repnz
and
xor
jle
stos
push
cmc
xor
call
mov
mov
xchg
xlat
lods
mov
rclb
add
xorb
popa
test
xchg
fwait
hlt
shl
jno
das
hlt
inc
popf
and
daa
repnz
xchg
cmc
mov
xchg
sbb
arpl
push
inc
pop
fists
out
loop
mov
or
cmp
call
je
fs
adc
shrb
and
aad
cld
push
adc
mov
push
xchg
lret
ror
sbb
fistpl
jo
dec
addb
pop
pop
data16
xchg
mov
cmpl
sbb
sbb
ja
sub
mov
or
add
addb
push
lods
loopne
in
mov
ret
dec
outsb
sbbl
jno
pushf
and
push
cltd
pop
sub
push
jp
pop
cmp
sbb
jnp
in
sahf
xchg
mov
cs
jno
and
jmp
lret
testb
adc
or
mov
pop
sti
cmp
inc
push
pop
xchg
rolb
clc
jne
xchg
fiadds
enter
mov
ljmp
mov
pop
movsb
inc
ss
aaa
iret
in
jae
or
push
xor
insb
mov
cmpsl
inc
pop
cmc
mov
sti
xchg
stc
push
sub
add
icebp
dec
mov
mov
and
sub
pop
test
or
xchg
inc
jg
lahf
pop
lods
imul
cmpsb
fcomip
push
lods
nop
xchg
outsb
pop
out
in
pop
add
aaa
andb
mov
mov
ss
fst
icebp
int
stc
les
into
pop
in
and
push
jns
pop
jmp
inc
lcall
lret
inc
shlb
mov
sbb
fdiv
mov
jg
pop
int
push
repnz
sarl
movsb
mov
mov
mov
out
mov
mov
add
fcom
xor
xchg
sbb
or
cmp
fcoml
lods
and
or
mov
fcompl
xchg
int
jge
or
and
and
jno
fcomi
js
xor
push
or
jb
or
push
sub
pop
xlat
lret
out
sub
lret
push
stc
in
push
lcall
pusha
stos
add
or
add
loope
loopne
mov
dec
jge
shlb
inc
push
and
cmc
andl
aas
add
sub
mov
clc
jg
jo
aas
dec
rclb
add
xor
push
cmpsb
sub
xchg
stc
add
push
adc
jecxz
out
mov
loopne
cltd
in
or
mov
es
dec
jb
and
xchg
into
sbb
stc
sub
xchg
insl
mov
push
jecxz
xchg
push
or
mov
sti
and
jg
mov
std
outsl
jmp
pop
rorl
les
jb
cmp
push
adc
gs
cmpsl
pusha
lcall
scas
repz
jo
dec
inc
int3
add
xor
or
cmpsl
out
cmp
lds
loop
lret
pop
in
xchg
pushf
arpl
push
mov
push
cmp
ficompl
pop
int3
fwait
pop
inc
dec
sub
push
xor
or
mov
int
lcall
and
push
rcrl
mov
xor
in
lea
pop
dec
cmpsl
sti
mov
xchg
jbe
ljmp
out
lds
xchg
fstps
sub
push
pusha
fxtract
cmp
les
jnp
fimull
adc
mov
jl
rolb
sub
loope
sbb
shll
add
fstpl
inc
inc
cwtl
adc
addr16
inc
pushf
movsb
scas
mov
into
clc
and
dec
hlt
jb
fst
and
push
inc
movsl
add
daa
cmp
ja
cs
or
cmpsl
out
cmp
sub
jnp
imul
add
xor
loop
mov
test
enter
fadds
lahf
shrb
mov
scas
ret
mov
lea
xchg
leave
mov
mov
jecxz
addr16
stc
outsb
outsl
mov
add
pusha
jl
inc
movl
out
cmp
mov
shrl
and
jne
sbb
inc
int3
pop
push
test
loop
jp
imul
and
jnp
sub
xor
fidivs
test
inc
jg
add
sub
scas
leave
sbb
es
sub
jno
cld
outsb
sub
js
in
cwtl
frstor
incl
stos
jno
sub
add
mov
sahf
aam
mov
push
dec
push
lods
dec
sti
mov
in
push
pop
cmp
iret
enter
out
jecxz
mov
lds
mov
pop
inc
pop
ret
dec
shrl
xor
pop
stos
in
ja
ja
daa
xchg
daa
xchg
leave
cmp
ja
jbe
lea
pop
jge
pop
mov
dec
std
add
push
dec
in
pop
sub
pusha
icebp
sub
jnp
push
es
jp
jo
push
lods
and
pop
les
mov
out
or
jns
pop
sub
mov
lds
sub
lahf
call
xchg
sbb
push
test
gs
jp
dec
pushf
stos
and
and
xchg
sub
rcrb
dec
pop
scas
ret
mov
scas
cmp
pop
mov
or
in
adc
call
into
cmp
xor
es
lcall
xchg
aaa
mov
mov
add
adc
dec
mov
sahf
stos
ljmp
cmp
xor
push
inc
sbb
aam
ret
and
xor
sbb
rdpmc
dec
sub
int3
test
sbb
jo
aas
repnz
mov
jmp
xlat
jmp
repnz
dec
dec
mov
in
xor
std
jp
and
popf
adc
movsb
imul
inc
sub
adc
push
xchg
mov
enter
add
pop
push
or
cmpsl
in
jp
lods
mov
sti
or
jge
cmpsb
sets
lds
mov
loope
enter
xor
or
and
jo
pop
dec
push
cli
rcrl
and
dec
daa
and
andb
dec
sub
mov
mov
cmp
sub
mov
jge
bound
insl
push
and
push
les
sub
jle
sbbb
call
sbb
jno
mov
cmpsb
add
xchg
in
xchg
xor
push
push
orb
xor
xchg
flds
sbb
jmp
test
ds
sti
divl
jmp
push
bound
lods
mov
leave
dec
xchg
push
cmc
jns
sbb
push
lret
rcr
clc
mov
cmc
adc
mov
mov
cmp
lret
xchg
xor
push
hlt
outsl
fisubrs
push
test
xor
xorb
aaa
mov
lea
cwtl
sbb
orb
sbb
test
jmp
mov
sub
jmp
icebp
mov
icebp
mov
jno
pop
andb
and
jo
daa
mov
jns
outsl
sti
bound
xor
or
in
sub
sbb
roll
outsl
cmp
stc
imul
lret
and
icebp
xchg
stc
push
es
test
iret
movsl
pop
push
sub
xor
adcl
pop
out
mov
pushw
hlt
adcl
and
xchg
stos
xor
xor
mov
push
insl
or
loope
ret
das
nop
loopne
ret
aaa
sbb
add
mov
inc
aam
or
scas
jnp
pop
mov
fimull
addl
hlt
mov
js
and
sub
xchg
in
popa
out
inc
jmp
mov
sti
xor
push
add
cli
dec
xchg
push
shlb
cmp
xor
psrld
mov
std
push
adc
faddp
xor
mov
cmp
inc
gs
jno
adc
lds
movsl
xchg
cmpsl
mov
sub
push
addr16
xchg
and
lret
and
aam
in
imulb
lahf
mov
xlat
or
mov
rcl
iret
ss
add
push
out
cltd
push
aaa
sbb
in
sub
ljmp
jno
push
inc
ret
jmp
les
icebp
mov
movsb
lret
lahf
cmp
jecxz
mov
jae
shrb
pop
inc
adc
mov
ds
xchg
jge
pand
jge,pn
sub
push
repnz
sbb
pop
mov
out
xorl
add
pop
lds
mov
outsb
xchg
mov
cmp
fnsave
scas
insb
xchg
pop
mov
push
dec
lret
aam
outsb
fstpl
sub
dec
jo
adc
rolb
outsb
fildl
je
pop
outsl
inc
in
sti
pop
mov
ret
and
cmp
std
fldt
das
pop
mov
push
mov
in
arpl
test
lock
inc
mov
or
or
lds
add
lret
out
and
push
pop
fcompl
cmp
adc
pop
add
mov
jcxz
fsubr
into
xor
nop
cmp
lret
rorl
dec
popa
adc
add
cmp
cmp
mov
sbb
js
loop
outsb
mov
loopne
mov
jne
cmp
or
es
cmpsb
adc
push
jae
push
jmp
fmulp
mov
loopne
outsb
push
pop
xor
xrstors
pop
pop
stos
movsl
outsl
mov
jne
imulb
ja
push
out
lds
lea
add
aas
mov
test
out
cwtl
daa
xor
mov
dec
xor
daa
mov
cs
imul
push
or
mov
call
mov
enter
pop
pusha
xchg
add
outsb
sub
push
inc
cmpsl
roll
xor
pop
cmpsl
addl
inc
into
test
pcmpeqd
xchg
jmp
fcomps
push
xor
test
js
jno
xor
pop
mov
push
add
jmp
notl
and
push
mov
push
cmc
test
in
inc
bound
xlat
mov
lahf
sub
push
push
sbb
out
xchg
jp
daa
jp
inc
or
sbb
iret
lea
adc
sbb
push
daa
add
cmp
pop
lret
or
fs
js
jno
roll
pop
arpl
loopne
push
add
sub
mov
ret
sbb
in
or
or
pop
push
cmp
sbb
mov
test
sub
ljmp
cltd
xchg
cwtl
pop
jo
sbb
loop
mov
lods
das
jp
push
jg
push
inc
or
call
xchg
dec
jne
xchg
push
push
xor
xchg
lods
push
mov
inc
jl
xor
in
cmp
push
xlat
push
cld
sub
dec
into
xchg
imul
into
stos
out
aaa
mov
neg
mov
in
icebp
cmc
or
add
push
mov
aaa
dec
add
mov
adc
inc
lds
or
fistpll
inc
in
mov
stos
mov
inc
out
push
iret
in
dec
aaa
xchg
das
lret
pop
cmp
mov
paddsw
inc
push
and
and
add
adc
orl
and
sbb
mov
int
outsb
and
jno
and
loopne
mov
sahf
inc
iret
shl
les
or
cmp
xor
pop
cmp
xchg
push
sub
ljmp
or
leave
xlat
loop
fldcw
data16
pop
cmc
out
inc
test
test
lret
xor
jmp
or
and
fs
pop
sub
js
adc
mov
xchg
dec
mov
xor
dec
inc
cwtl
lahf
xchg
rol
cmp
in
push
ljmp
sbb
mov
push
sbb
jnp
xor
lock
xchg
or
imul
push
aaa
lea
mov
popa
cmpsl
test
xchg
movsb
mov
or
dec
cmp
movsb
gs
into
inc
stos
into
inc
pop
fld
orb
cmp
fs
inc
sbb
das
push
jg
mov
out
data16
fs
enter
xor
xchg
add
cmp
fucom
pushf
mov
pop
mov
adc
js
xchg
sbb
rorb
lret
repnz
aas
dec
test
add
int3
inc
pop
mov
pop
popf
pop
push
dec
adc
jmp
pop
dec
enter
ss
pop
sub
sbb
inc
leave
ljmp
mov
mov
inc
dec
andl
iret
ret
fs
sti
cmp
cmp
pusha
call
and
pop
adc
lds
mov
insl
inc
cmpsl
push
rcr
push
cmp
fnstenv
xor
imul
push
xchg
stc
bound
dec
sub
cmp
int
arpl
std
adc
mov
lcall
adc
mulb
addl
loope
mov
cltd
stos
dec
or
nop
jp
or
loopne
dec
sbb
or
in
mov
pop
mov
push
xor
pop
dec
adc
shll
dec
pop
xchg
andl
push
hlt
leave
pop
cmc
std
cmp
aad
fld
movl
fdiv
addr16
sub
inc
addr16
mov
imul
arpl
or
mov
outsl
mov
aam
mov
nop
mov
mov
aas
adc
jg
cmc
out
push
xor
xor
test
push
mov
movzbl
mov
inc
inc
push
pop
mov
cltd
cmc
sbb
mov
xchg
mov
add
xor
stc
adc
cld
sub
inc
lods
xor
push
mov
das
dec
ja
and
mov
shl
jg
je
call
push
sub
jbe
std
rcrb
jmp
ja
fdivrs
ror
fwait
call
push
dec
adc
adcl
adc
xor
jge
lods
orb
mov
out
idivb
mov
xchg
xlat
lock
into
mov
xchg
sub
loop
in
pop
mov
outsl
loope
clc
xor
push
sub
fs
repnz
push
dec
daa
incb
cmpsb
cmpsl
enter
dec
xchg
pop
pushf
push
add
jl
dec
xchg
xor
or
pop
je
sbbl
push
xchg
jl
test
bound
xchg
fcoms
or
ljmp
ret
lock
add
sub
push
scas
push
cmp
push
pop
aaa
adc
xor
push
mov
push
in
jecxz
pushf
sub
mov
loope
inc
call
leave
pop
test
jnp
mov
inc
pop
cmp
inc
in
mov
dec
fisubs
sti
std
or
cs
rclb
jl
in
sub
sahf
mov
cmp
cmp
adc
adc
enter
jle
out
inc
hlt
dec
dec
mov
jp
push
addr16
or
popf
xchg
imul
sub
mov
cmp
imul
add
cmc
andl
push
call
adc
loop
mov
out
loopne
xchg
jnp
cmp
bound
sbb
in
cmpsl
mov
sbb
movsb
sbb
pop
cmp
cmp
stos
mov
cli
pop
repz
into
ret
jae
push
push
je
xchg
mov
cwtl
mov
lcall
cmp
inc
cmp
and
stc
mov
leave
mov
xchg
lcall
out
cltd
inc
adc
or
adc
cmp
cmp
xchg
sarl
div
fstl
insb
dec
rclb
add
sahf
fnstcw
in
sbb
jbe
rsm
cmp
mov
push
pop
push
in
add
adc
lret
stc
xorb
xchg
aas
push
idivl
mov
arpl
fstpt
int3
shrb
lret
cld
movsl
and
aaa
and
xor
or
ret
push
movsb
nop
jecxz
js
jg
inc
mov
int
xchg
sarb
loope
jecxz
and
iret
sub
mov
and
fisubl
jp
mov
fbld
push
push
insb
adc
add
in
cmp
pop
pop
inc
addr16
dec
hlt
or
pusha
dec
cmpsb
sub
rcrb
mov
in
mov
xorb
fstps
lock
or
stos
cmpb
test
and
mov
push
pop
cmc
mov
scas
sar
xor
std
push
and
push
iret
arpl
cmp
ds
movsl
xchg
push
mov
mov
test
adc
jg
and
aas
adc
or
out
cld
aas
sub
shll
ss
stc
ljmp
mov
sub
cli
lods
icebp
jbe
jb
lret
cs
enter
nop
mov
stc
push
ds
xor
push
mov
cmp
sbb
xchg
loopne
add
ljmp
fcoms
scas
sbb
or
mov
xchg
test
hlt
dec
icebp
fwait
pushf
push
add
xchg
xor
repnz
jne
inc
add
aad
fistps
bound
pop
sbb
ds
andb
pop
aaa
mov
sub
mov
xor
movsb
fstpl
stos
leave
cmp
clc
fwait
or
aad
sar
sbb
pushl
movb
pop
mov
dec
lahf
mov
lret
clc
addr16
movsb
push
loop
add
lock
jns
push
inc
aam
inc
imul
adc
sub
clc
mov
or
push
and
mov
sarb
adc
fcmove
xor
testb
jnp
into
jmp
xor
push
mov
mov
cmp
sahf
mov
mov
sbb
ljmp
decl
lahf
pop
jecxz
jge
ret
adc
cmp
loopne
aam
fldenv
int
stos
loop
loop
xchg
cmpsl
pop
xchg
xchg
pop
jmp
mov
jb
repnz
jle
add
arpl
cmp
and
cmp
hlt
clc
push
rorb
arpl
sahf
dec
lods
sub
aas
add
cmp
sarl
pop
pmaxsw
adc
insl
cmp
xchg
insl
rorl
jb
cmp
fdivrl
mov
insb
out
mov
dec
or
out
mov
shr
pop
fwait
cmpsl
into
imul
imul
mov
scas
jae
mov
mov
jno
jp
test
in
dec
pusha
out
lods
cwtd
sbb
or
pusha
xchg
stos
xchg
sahf
xorl
sub
add
push
js
jb
dec
fcoml
adc
rolb
dec
pop
loopne
or
pop
pusha
xchg
cmp
cld
lods
repnz
xlat
lret
out
scas
movsb
rclb
mov
xchg
jl
ljmp
xor
jg
hlt
divb
cwtl
dec
and
dec
push
push
movsb
imul
mov
cmp
push
inc
aas
push
pop
scas
mov
std
pop
or
imul
cmc
faddl
bound
fidivs
stc
rcrb
rorl
jo
int
andb
in
pop
inc
xchg
enter
jne
adc
int3
bound
add
add
push
idivb
or
rorl
int3
lahf
or
sub
js
pop
shrb
dec
cmpb
test
arpl
xor
mov
sbb
ret
scas
insb
mov
fwait
es
xchg
dec
xchg
mov
mov
push
outsl
test
adc
cmp
loopne
js
cmpsl
mov
push
mov
and
cmp
inc
mov
int
stos
ds
rorl
mov
sub
js
mov
sbb
scas
loopnew
fucomp
jmp
jns
lea
ret
xor
sbb
repnz
in
into
xor
pop
jge
xor
movsl
and
dec
stos
xlat
lods
cs
ret
movsb
mov
pusha
popf
jb
loope
pop
hlt
dec
shll
cmp
std
loope
inc
fcmovnb
mov
cmpsb
mov
xor
adc
icebp
mov
mov
stc
sub
fdivs
lret
adc
out
outsb
sarb
mov
aaa
cmp
mov
cld
bound
mov
dec
cmc
insb
sub
icebp
xlat
dec
jecxz
cmpl
jbe
out
faddp
subb
jmp
mov
lret
inc
dec
int3
jns
push
decb
push
dec
dec
sbb
pop
xchg
rcl
sbb
xlat
and
add
outsl
test
out
mov
int
pop
subb
das
jmp
jnp
imul
outsb
push
dec
sbb
das
jo
jl
jp
inc
mov
hlt
adc
movsl
xchg
dec
out
cmp
test
fdiv
es
sub
and
and
cmp
and
or
dec
pop
movsb
jns
or
add
pop
pop
shrb
jl
incb
scas
pusha
stc
gs
push
lock
shrb
popf
mov
add
stos
cmc
mov
add
mov
mov
push
xor
pop
pop
data16
sbb
outsl
jnp
cmp
xchg
jnp
and
ds
fisubl
scas
push
push
testb
ja
loop
idivl
push
les
pop
dec
jmp
xorb
push
xchg
pop
sub
dec
sub
cld
push
mov
aas
cwtl
pop
mov
mov
repz
jo
add
add
mov
out
push
repnz
shrb
push
adc
fimuls
push
xchg
call
dec
xchg
les
adc
inc
jno
mov
xchg
movsb
mov
cmp
xor
rorl
mov
push
jnp
imul
xor
loope
mov
sbbb
push
dec
xor
mov
fisttpll
fldcw
inc
cmp
jns
push
das
shrb
lods
cld
sub
popa
jg
stos
or
add
ds
mov
aas
push
mov
and
leave
push
fs
adc
outsb
ds
and
and
mov
lret
icebp
imul
inc
out
and
push
adc
lea
mov
scas
xchg
adc
addr16
roll
mov
jp
jle
pop
mov
clc
adc
inc
xor
or
xor
ljmp
ja
adc
add
lock
js
push
test
sbb
lret
or
mov
xor
mov
jno
jo
pop
sub
std
pop
loop
dec
das
adc
cmpsb
lret
cmp
dec
mov
outsl
push
dec
sahf
mov
mov
fisttps
bound
sub
adc
out
popa
pop
jp
mov
xchg
dec
xchg
sahf
add
stc
and
fnstcw
hlt
push
mov
movsb
pop
sahf
or
sub
pop
or
xor
adc
push
mov
xchg
xlat
pop
testl
dec
mov
and
mov
movsl
adcl
pop
or
inc
in
dec
adc
push
jne
idiv
mov
notrack
ret
mov
cmpsl
in
and
jmp
stos
mov
lahf
loop
inc
mov
push
out
mov
push
popa
in
pop
aas
adc
jbe
cli
hlt
dec
daa
mov
sub
inc
in
dec
out
xchg
daa
add
inc
arpl
es
aad
pusha
or
insl
jp
movsl
sub
stc
mov
ljmp
in
dec
dec
mov
xor
ja
mov
fwait
fwait
stc
xchg
xchg
imulb
out
xchg
aad
mov
pop
lret
pop
outsl
pop
cmc
push
jecxz
out
call
pusha
mov
xchg
jmp
test
add
jmp
es
pop
sub
mov
sbb
fidivrl
ljmp
or
lods
mov
mov
outsb
dec
push
jno
mov
xor
iret
mov
rcrl
mov
and
jmp
mov
fxch
dec
mov
sbb
pop
xor
or
addl
push
mov
push
or
lods
inc
mov
sti
adc
loop
sbb
push
pop
fistpll
mov
mov
sub
push
cmpb
jecxz
xchg
and
push
push
stos
mov
jae
pusha
imull
pop
es
xlat
test
repz
icebp
fs
xchg
adc
sub
pop
in
lcall
add
dec
mov
lahf
xor
pop
mov
outsb
pop
out
cmp
cmp
stc
push
pop
sub
fstps
loopne
outsb
out
pop
sahf
icebp
jecxz
sub
jmp
lret
rcll
jecxz
ljmp
test
inc
mov
mov
dec
push
xor
test
lock
adc
jns
ljmp
je
cmpl
or
in
popa
jae
cmp
int3
jo
out
cmp
adc
incb
push
jmp
xor
imul
mov
bound
das
push
cld
push
movsb
jl
jle
push
shll
test
data16
fwait
mov
or
xchg
insl
cld
pusha
sbbl
rcrb
pusha
dec
push
pop
xchg
daa
push
adc
lcall
cmc
xorl
imul
jmp
ljmp
fnsave
addl
mov
xlat
xchg
mov
push
jb
aas
fs
pop
mov
test
mov
mov
dec
je
pop
pop
out
or
xchg
jne
pop
or
mov
mov
sub
cmc
out
mov
clc
dec
push
xor
and
push
inc
inc
clc
push
repnz
xchg
loop
fisubrl
jb
pop
notl
lcall
mov
out
lahf
outsl
inc
lock
gs
lret
mov
mov
mov
stc
sub
ds
push
test
lods
test
aad
and
inc
inc
add
adc
inc
outsb
es
pop
xor
pop
insl
push
incb
add
mov
notl
adc
fstps
mov
inc
mov
loop
sbb
add
lret
or
pusha
les
xlat
jne
stos
pop
jl
push
jle
mov
es
insl
add
adc
jbe
in
imul
mov
cmp
cmpsl
pushf
xor
pushf
adc
inc
cmp
sub
pop
neg
sbb
shrl
jne
jb
clc
sbb
fcomip
mov
sti
out
jg
lods
nop
cld
loop
and
loop
rcl
sub
lea
je
pop
cmp
fisubrs
sbb
mov
or
pop
xchg
aas
cmp
loop
cmp
lret
pop
inc
cwtl
and
mov
jns
cmp
add
cmp
pop
mov
or
inc
aaa
lret
sub
test
js
mov
in
fldt
outsl
push
shr
repz
lds
fiadds
xlat
hlt
push
arpl
mov
and
jmp
dec
push
jno
pusha
hlt
xlat
in
jmp
out
rclb
inc
je
pop
insl
test
jge
les
mov
cmp
add
or
stc
repz
adcb
mov
aaa
idivb
mov
cmp
cmc
loope
jo
hlt
cld
adc
mov
lea
xor
outsb
mov
in
xor
mov
leave
enter
push
xor
lcall
dec
adc
mov
aas
push
xchg
sub
pop
and
insl
sub
jo
mov
ja
lahf
jne
cmpsl
mov
dec
pop
xchg
loopne
mov
in
leave
std
les
jno
mov
movsb
cli
add
xchg
mov
adc
add
rclb
push
mov
lret
cmp
loop
push
xchg
and
mov
sub
aad
add
movsl
cwtl
mov
and
repnz
das
xlat
repnz
mov
cltd
mov
out
lock
mov
inc
pop
xchg
xchg
imul
test
mov
xor
dec
jno
jb
sahf
dec
sub
cmp
adc
sbb
mov
bound
and
add
mov
or
add
adc
or
and
fstpl
dec
cmp
push
add
jmp
imul
pop
sub
sbbl
add
in
jns
mov
lret
sbb
jg
nop
aaa
push
mov
push
add
lea
push
cmpsb
jge
jno
xor
iret
sti
jg
decb
and
xlat
adc
popf
jne
pushf
xchg
out
imul
inc
loopne
je
adc
in
enter
cwtl
jne
int
mov
or
fmuls
enter
lods
lods
mov
cmp
mov
das
sub
dec
add
pushf
cltd
lret
insb
subb
std
pop
mov
int
push
or
mov
jo
mov
arpl
inc
or
lahf
mov
jnp
cwtl
gs
int
push
dec
ret
andb
mov
fistps
push
addb
addr16
push
adc
loop
inc
adc
cmp
mov
push
push
mov
out
std
cli
idivl
cwtl
xchg
pop
jge
iret
scas
mov
push
push
aam
shrb
cmp
push
lret
add
cmpsb
or
sbb
xor
addb
sub
push
pushf
fmuls
mov
jle
mov
fs
out
cmpl
jmp
popf
popa
out
jnp
mov
mov
aaa
inc
out
aaa
inc
fistpl
es
xor
outsb
or
flds
leave
repz
xchg
test
mull
outsb
mov
mov
pcmpgtd
push
push
stos
mov
cmpl
iret
sbb
push
js
ficoms
or
int
and
callw
hlt
jl
sub
ficoml
and
out
test
dec
js
mov
lock
xorl
push
fsubp
mov
cmp
int3
mov
in
or
out
out
pop
add
fst
mov
mov
addr16
add
out
stc
pop
jl
or
mov
out
dec
pop
mov
jbe
push
sbb
imul
insb
xor
pop
or
push
jae
out
jle
lret
test
sbb
xor
add
pop
pusha
or
arpl
pop
loopne
add
sbb
dec
jecxz
mov
cli
rcrb
loope
inc
jp
add
stos
cs
stos
and
mov
cld
nop
xchg
adc
mov
es
lret
adc
push
fcoml
dec
inc
test
bound
out
xor
add
ret
ret
pop
arpl
jmp
out
cmp
sbb
pop
cmp
adcb
mov
and
das
rolb
dec
rcl
inc
jp
loope
inc
xchg
xor
fdiv
or
movsl
xchg
push
dec
jmp
aad
in
hlt
xchg
mov
scas
or
mov
push
shlb
sbb
pushf
ffreep
push
imul
repz
fcompl
ficoml
lock
mov
retw
sub
test
mov
leave
hlt
popa
je
ljmp
loopne
mov
dec
fs
imul
lds
add
int3
outsb
xchg
fimull
mov
outsb
dec
xchg
push
inc
pop
ja
cmp
out
xor
addr16
mov
mov
lahf
add
aaa
pop
dec
jmp
dec
clc
in
fimull
jno
ds
test
jecxz
ljmp
aam
fstpl
in
aad
rolb
stos
jno
stos
cmpsl
sbbb
jne
xor
inc
test
stc
sub
mov
xor
test
scas
insl
in
nop
add
cwtl
sbb
add
stc
add
add
add
add
xor
sub
sets
xchg
cmc
and
faddl
add
sbb
test
pushf
aas
icebp
call
jmp
push
cmp
pusha
pop
jb
mov
addr16
sbb
fdivs
jnp
jp
test
mov
mov
or
adc
cmpsl
testb
inc
mov
fldenv
dec
inc
push
or
pop
daa
fmull
xlat
jbe
and
insl
pop
or
jo
std
jmp
outsl
imul
adc
add
or
aas
or
subl
fnstcw
dec
dec
cmp
push
mov
pop
mov
jae
scas
shrl
cwtl
or
and
push
dec
aad
fstpt
pop
sub
call
movsb
mov
inc
out
loop
and
jp
movsb
adc
in
stos
pop
push
jne
push
pushf
or
out
dec
xor
movsl
mulb
or
mov
jecxz
mov
in
mov
xlat
lahf
sbb
push
push
mov
add
scas
adc
popf
daa
enter
pop
data16
cmp
add
andl
mov
inc
xchg
fcoms
jp
ja
pop
fsubrl
shrb
fs
es
and
pop
jecxz
mov
cmp
sub
fstl
cltd
xchg
push
loope
push
test
test
call
nopl
mov
cmp
aas
fiadds
cmpsb
and
push
or
mov
mov
imul
add
adcb
adc
pushf
int3
cli
pusha
fiadds
sub
dec
loope
adc
es
stos
out
or
and
imul
test
fdivl
mov
daa
xorl
push
rclb
xor
mov
inc
rolb
mov
mov
mov
xlat
cltd
mov
dec
jge
pop
clc
dec
lock
cmp
mov
cmp
std
cmp
and
lcall
jne
das
pusha
mov
shr
xor
lea
js
jns
addr16
scas
outsl
cmpsl
mov
push
jmp
insl
mov
mov
dec
je
xor
jge
sbb
mov
lret
fwait
cmp
aad
xor
mov
mov
sbb
xchg
sbb
into
cmp
into
shlb
cwtl
push
sub
mov
dec
xchg
clc
pop
inc
jbe
test
sbb
jl
lock
xchg
or
jmp
mov
insb
ret
sub
sahf
cmp
in
arpl
cli
inc
fcompl
push
sbb
xor
scas
jp
inc
jno
aaa
mov
xchg
ret
lods
mov
sbb
xchg
andl
cmc
cmp
dec
xchg
adc
xchg
push
das
push
fcoml
cmpsb
pushf
jnp
fisubs
cmp
pop
cmp
jns
shl
stos
gs
adc
mov
pop
pop
lahf
fcmovu
xor
and
pop
aaa
nop
cmp
adc
xchg
cmp
mov
jge
mov
ljmp
mov
call
lahf
repnz
sub
and
or
xlat
inc
dec
sbbb
jae
jge
lret
test
sub
inc
jno
stc
movsl
out
jp
add
jbe
pop
orb
lret
pusha
cmp
lahf
push
sub
stc
into
das
pop
pop
rcll
xor
dec
cld
pop
lods
fisubs
sub
movsb
or
cld
sub
adc
mov
outsl
pop
xor
mov
out
cmc
in
mov
iretw
out
fldt
mov
xlat
dec
int
mov
fnstcw
sbb
loop
ror
shrl
cmp
inc
jae
subb
xchg
or
mov
jno
das
loop
pop
cltd
mov
stos
sub
outsb
aad
xor
sbb
fcom
sub
pop
pushf
ficompl
in
mov
sbb
sub
mov
xchg
nop
mov
repnz
pop
xchg
jns
imul
or
outsb
fucom
adc
sub
stos
dec
fidivrl
iret
aas
xor
adc
xor
inc
adc
popf
add
pop
jle
mov
jno
dec
mov
or
loop
cmpsb
sbb
movsl
mov
lds
adc
mov
jge
outsl
lret
gs
jmp
push
aaa
loope
test
das
in
mov
jecxz
lret
fsubr
int
xchg
je
dec
rol
xlat
xchg
mov
lock
push
es
std
and
out
sahf
xor
xchg
cmc
out
dec
mov
in
das
adc
sbb
hlt
cmp
shll
mov
out
pop
aas
in
cmp
mov
push
and
pusha
xor
lock
adc
cld
push
aas
jb
push
es
test
jb
pop
inc
into
mov
loop
out
or
fistpll
xor
jmp
inc
rol
mov
mov
fcoms
icebp
mov
or
inc
decb
jbe
pop
js
jbe
xchg
int
dec
add
in
fiaddl
jno
mov
mov
movsl
cs
push
mov
pop
push
xor
or
pop
aad
inc
jecxz
cmp
or
daa
js
lock
sub
ffree
pop
scas
repnz
mov
mov
xchg
std
mov
mov
mov
dec
jae
lret
lcall
cmc
ljmp
ret
cli
sub
fisttps
test
std
or
jp
scas
lcall
ret
inc
lods
mov
repnz
inc
sbb
outsl
xorl
push
cmpsb
sbb
testb
sbb
lods
test
sbb
test
mov
xor
fnstcw
popf
dec
cwtl
scas
sbb
jge
pop
or
bnd
and
insl
cltd
sbb
xor
add
xchg
pop
xor
lock
rcrl
es
into
mov
mov
scas
inc
dec
pop
pop
daa
mov
sbb
jmp
sbb
or
and
inc
xchg
ja
lret
dec
xchg
divb
jno
into
fldcw
add
jg
pusha
pop
xor
adc
leave
dec
ffree
push
jb
test
mov
sbbl
lret
in
add
cltd
sbb
adc
nop
mov
jl
insb
push
out
mov
lods
mov
dec
push
adc
std
push
scas
sbb
mov
jo
lds
cmp
in
sub
shll
mov
xchg
jno
push
sub
addb
sbb
push
cmp
std
sub
cwtl
ljmp
inc
and
mov
aam
jne
popa
fidivrs
and
mov
inc
mov
push
add
out
in
adc
mov
popf
mov
add
mov
pop
fisubs
notl
xchg
xlat
les
dec
mov
and
xchg
cld
add
inc
mov
xorb
std
add
cmp
add
inc
mov
leave
sbb
mov
into
cmpsl
inc
fstps
ror
add
out
xchg
sub
loope
jmp
hlt
push
nop
outsb
add
in
cmpsb
push
int
sub
mov
ret
dec
adc
mov
sbb
dec
cmpsl
and
jnp
or
mov
in
dec
adc
jecxz
xchg
inc
les
sbb
dec
dec
pop
fstpl
cs
lahf
dec
xchg
pushf
inc
inc
sub
call
and
lcall
xchg
lock
add
or
push
loopne
mov
sbb
out
or
sbb
jecxz
adc
sahf
pop
cmp
cmp
push
or
jno
sub
jno
aaa
test
scas
test
sub
or
in
outsb
xchg
and
out
mov
test
cmp
pop
fsubrs
pushf
sub
cmpsl
out
sub
hlt
mov
mov
idiv
lods
adc
push
and
mov
adc
xchg
mov
lods
fistl
lods
daa
jnp
lods
bound
and
lds
lcall
les
push
add
xchg
mov
jo
inc
xchg
sahf
shrb
pop
cmp
popa
mov
inc
push
repz
ds
pop
aam
shlb
mov
push
pop
mov
cmpsl
mov
addl
mov
adc
stos
data16
dec
dec
cmpsb
dec
mov
jmp
adc
mov
cmp
add
pop
adc
mov
xchg
stos
xor
mov
fscale
sub
in
mov
xor
cltd
sub
aas
dec
scas
mov
rclb
pop
xor
std
mov
xchg
or
pop
mov
pop
aaa
lods
mov
dec
stos
sahf
xor
popa
popa
cmp
hlt
xlat
cs
icebp
inc
pop
xor
das
inc
or
dec
dec
fs
out
ljmp
xor
mov
push
arpl
aaa
stos
hlt
push
mov
in
jno
and
fisubl
mov
sub
jno
test
jmp
pushf
dec
test
leave
rolb
enter
cmp
jae
mov
mov
or
mov
and
push
in
call
inc
lock
xchg
add
pop
adc
sub
push
movsl
repnz
rcl
call
sahf
sub
and
shrb
inc
push
dec
insb
or
mov
and
aam
xchg
push
daa
pusha
xor
mov
lcall
cmp
mov
adc
mov
das
repz
mov
pushf
stos
sub
imul
fwait
xchg
xchg
cmp
adc
push
ss
pop
shlb
push
jp
lods
pop
sub
ss
aaa
fsts
sbb
fiaddl
push
mov
jecxz
cld
outsl
jb
inc
xchg
adc
mov
lret
test
dec
mov
fs
xchg
or
dec
shll
and
pop
add
rolb
stos
outsl
mov
jo
fisubs
inc
inc
ret
scas
cmp
inc
cmp
pop
pusha
add
outsl
push
inc
or
loope
push
mov
frstpm(287
dec
jne
jnp,pn
xchg
ss
jne
xchg
mov
and
adc
jnp
jg
into
or
leave
xor
fnsetpm(287
pop
push
xchg
pop
push
mov
push
lea
cmpl
out
mov
push
mov
cmp
dec
movsb
xor
fsub
push
push
mov
and
jb
pop
repz
lods
lock
mov
or
leave
ret
xor
xor
and
mov
in
fsts
add
or
call
test
repnz
fwait
pop
popa
mov
cmpsb
mov
shlb
jb
mov
nop
sub
test
sub
pop
xor
nop
jno
mov
jno
sub
mov
cwtl
cmpsl
ljmp
pop
jno
or
sahf
loopne
sbb
out
rcrb
outsb
test
fsts
mov
stc
adc
dec
or
out
out
fldenv
loope
add
mov
outsb
adc
fnstenv
mov
mov
and
outsb
mov
xchg
sub
mov
int
jae
dec
daa
sbb
out
out
push
stos
pop
inc
pop
mov
cmc
ja
inc
inc
jne
fs
fildl
imul
adc
inc
sub
push
xchg
mov
mov
imul
arpl
fstl
andb
bound
adc
jnp
and
and
pop
jns,pt
mov
cmpsb
test
lahf
fisubs
and
or
sub
cmp
leave
js
iret
je
add
dec
stos
aas
shll
movsb
arpl
mov
arpl
cmc
mov
jle
aas
jp
xchg
icebp
mov
jbe
push
xchg
std
push
sub
scas
xlat
and
ja
push
je
jle
stc
popa
mov
inc
mov
mov
in
add
push
inc
and
push
cld
sti
imul
adc
mov
mov
sub
cwtl
ret
out
js
cmp
lahf
imul
sbb
insl
mov
mov
ss
ljmp
cmp
xor
sti
js
adc
xor
popa
pushf
mov
xor
mov
lahf
cmp
addr16
cmp
hlt
roll
push
mov
orb
cmpl
in
insl
jg
mov
pop
fists
cmp
mov
loop
mov
mov
cmp
cmp
scas
ds
and
adc
or
mov
subb
daa
insb
rol
xchg
pushf
adc
jl
in
or
xor
jno
mov
loopne
sbbl
jo
lcall
lea
adc
or
adc
push
imul
xor
leave
xlat
or
push
popf
cli
or
xor
into
or
ret
and
cmp
mov
repnz
mov
inc
ja
xor
inc
xchg
imul
cmp
repnz
adc
xor
lea
push
push
xlat
stos
mov
outsl
mov
add
push
xchg
je
pop
movsl
cmc
dec
push
sahf
leave
ret
sbb
es
jl
inc
movsl
loopne
mov
cltd
jp
loopne
insl
push
sub
mov
fwait
inc
movsb
out
gs
lret
push
aaa
push
unpcklps
inc
jl
enter
cs
insl
imul
aad
mov
mov
inc
ja
mov
mov
iret
cmp
stos
stc
mov
dec
pop
and
outsb
aas
arpl
and
xchg
jmp
ss
in
mov
add
cmpsl
dec
inc
mov
ret
int3
gs
icebp
xchg
cs
mov
adc
mov
ret
ja
pusha
sbb
add
std
ja
push
lock
dec
test
bound
pop
les
xchg
mov
std
fistps
sbb
andl
mov
rolb
sbb
in
lea
das
outsb
dec
push
out
nop
stos
sbb
int3
xchg
addr16
mov
lods
cmp
jge
clc
pop
xchg
pop
push
jae
insl
call
mov
cli
cs
sbb
fsts
cli
aas
andb
mov
loop
movsb
popa
add
mov
cmp
cmpsl
or
ljmp
lods
das
cmp
scas
cmp
inc
popa
dec
sbb
push
jnp
sbb
repz
sub
and
int
xchg
mov
and
jecxz
jp
inc
jnp
fnstcw
ds
push
sub
outsl
cmp
insl
inc
pop
mov
addl
xchg
fdivl
dec
cmp
out
push
inc
clc
in
xchg
or
xchg
fsubp
adc
mov
rorl
jb
imul
cwtl
sub
dec
mov
or
loopne
jmp
pop
scas
imul
out
lock
sbb
inc
mov
test
sub
test
stc
cld
mov
sub
jmp
es
out
mov
xor
or
into
jg
push
pushf
negb
inc
aad
jmp
vpaddb
test
inc
mov
cmpsl
in
mov
nop
test
mov
lahf
pop
out
daa
push
xchg
repnz
repnz
lcall
loopne
jg
int
repz
mov
outsl
or
adc
and
mov
cmp
leave
xor
mov
ds
imul
push
adc
aas
mov
mov
fsubl
lret
dec
mov
sti
fadds
popf
out
mov
sbb
xchg
pop
inc
outsl
push
sub
mov
leave
shrb
cmp
push
pop
aad
dec
sahf
stos
push
and
stos
testl
cli
inc
mov
xor
add
pop
jl
rclb
in
mov
imul
rcrl
add
add
sbb
pusha
jns
push
ljmp
clc
dec
orl
stos
push
fs
js
xchg
push
addr16
movsl
mov
cmp
jecxz
sub
bound
cmpl
mov
dec
xchg
dec
imul
pushf
and
mov
cmp
push
lcall
sbb
les
ret
push
call
jmp
jmp
add
test
into
sbb
push
jl
push
outsl
int3
ds
push
cmp
lods
scas
adc
outsb
sbb
inc
sbb
je
cmpsl
mov
insl
adc
imul
shlb
pushf
cmpsb
adc
sub
sysenter
cmp
icebp
fistps
cmp
dec
pusha
call
jl
hlt
push
fxam
xchg
rolb
lods
adc
imul
mov
mov
pop
inc
mov
aas
cmp
dec
adc
pop
mov
jge
jns
in
mov
ja
in
add
xor
pop
ficompl
jg
scas
nop
sub
pop
out
add
sti
mov
sarl
push
and
jnp
test
das
stos
adcl
jbe
jle
mov
lret
add
sbb
push
popf
rcll
pushl
push
lcall
loop
lret
mov
cmc
adc
mov
and
mov
aad
cmpb
mov
xor
fs
je
push
jb
divb
adc
and
cmp
xor
or
call
in
daa
lock
mov
fs
daa
outsl
inc
testb
inc
and
jno
cmpl
imul
testl
shlb
jp
xor
inc
xchg
xor
movsl
inc
xchg
xchg
je
mov
or
and
hlt
xor
les
cmp
fwait
popa
ja
push
lahf
leave
inc
jno
call
imul
movsl
pop
push
cmpsl
push
push
lahf
loopne
add
push
cmp
bound
les
bound
cwtl
or
stos
xlat
shrl
jns
fsubs
xchg
cmp
das
icebp
push
push
pop
jg
adc
push
jnp
movsb
push
pop
jno
jne
fcompl
pusha
xchg
nop
repz
dec
insl
int
jne
xor
mov
and
popa
jo
or
sub
ljmp
mov
jae
jnp
dec
and
loope
test
jecxz
call
dec
arpl
mov
shll
mov
sub
mov
dec
pop
stos
push
xor
int
xorl
cmp
cli
mov
pop
sub
jge
rcrl
test
les
ljmp
push
mov
popf
inc
mov
int
and
adc
iret
cmp
xor
paddd
bound
gs
lret
push
addb
in
je
adc
sbb
je
leave
jb
pop
cmp
mov
outsl
mov
pop
mov
popf
inc
in
loopne,pt
roll
orb
jo
loopne
mov
sub
sub
cltd
xchg
cwtl
int
jg
mull
sar
sub
test
xchg
cmp
xchg
xchg
int
lods
jb
loope
jnp
adc
lret
je
ficompl
test
xor
pop
daa
inc
mov
fs
sub
mov
pop
cmp
stos
pop
xor
pop
xor
mov
stc
mov
into
or
fildl
xor
fdivrs
xorl
push
in
aad
jmp
inc
mov
mov
iret
lret
mov
mov
inc
icebp
add
xor
lods
pop
xchg
dec
rorb
imul
fs
popa
ds
mov
push
inc
pop
lahf
je
cmc
imul
xchg
ds
test
push
cmp
js
xchg
pop
ficoms
push
or
or
pop
cmp
mov
push
mov
cltd
sbb
clc
push
jge
out
testb
mov
aam
xor
push
inc
xor
mov
gs
xor
shrb
orb
mov
push
or
std
loope
jnp
mov
lcall
push
std
xchg
adc
adc
je
mov
mov
scas
mov
imul
pop
inc
mov
mov
push
cmp
and
popa
negl
xor
or
dec
ds
pop
loopne
std
rorb
inc
jbe
cli
or
push
pop
ss
sbb
xchg
mov
ret
add
mov
outsb
add
mov
pop
push
sub
cwtl
pop
jmp
loope
ja
inc
mov
cmc
push
ljmp
pop
push
rclb
out
into
outsl
push
insl
xrelease
mov
push
nop
clc
mov
dec
mov
jbe
cmp
test
or
popa
inc
sub
int3
sub
outsl
cmp
andb
push
cmpsl
cmp
pop
aad
mov
insb
ss
dec
popf
jmp
and
dec
ds
jl
xchg
enter
sahf
mov
mov
repnz
sahf
setle
push
jne
push
xchg
ficoms
push
jae
pop
outsl
das
inc
aas
xor
xchg
mov
push
sti
mov
cmpl
push
into
sub
int3
rolb
inc
mov
mov
or
xlat
iret
pop
lahf
xchg
add
jmp
mov
mov
outsb
mov
inc
and
ficoml
test
inc
lret
fs
xchg
mov
loopne
ljmp
aam
andl
negl
icebp
cwtl
xlat
cmc
or
shr
xlat
lea
mov
jl,pn
dec
and
js
jmp
or
scas
sbb
xchg
mov
notb
pop
out
insl
addb
mov
test
mov
pop
pop
xchg
out
and
push
adc
pop
dec
ficomps
push
adc
jecxz
enter
out
test
dec
cwtl
ret
notl
mov
insb
cltd
pop
inc
lcall
scas
inc
clc
hlt
movsb
pop
fyl2xp1
fs
add
lock
int
cld
adcl
popw
jae
dec
lock
and
dec
inc
fstl
insb
cmp
pop
insl
and
xor
faddp
fldcw
or
xor
mov
sbb
fnstcw
pushf
es
imul
mov
and
fidivs
popf
and
mov
and
sarl
repz
iret
rol
shl
mov
sbb
loopne
mov
iret
xchg
or
cld
subb
iret
in
out
ds
sub
inc
adcb
push
xor
imull
out
jb
pop
sbb
scas
icebp
mov
dec
mov
jp
and
lret
repnz
fwait
popf
inc
ret
mov
sbb
pop
add
mov
sbb
or
addr16
adc
push
rorb
and
dec
lcall
mov
lods
and
xor
inc
mov
aam
xor
sbb
mov
lods
pusha
das
daa
mov
jle
cli
fstpt
mov
out
inc
enter
arpl
jb
hlt
nop
pop
out
xchg
or
xor
cs
push
and
bound
sub
ljmp
adc
pop
and
stos
jmp
in
clc
inc
adc
imul
out
ja
mov
ret
dec
es
xlat
imul
ja
mov
add
mov
and
push
std
adc
sub
test
addb
test
cld
ficoms
xor
aam
cltd
or
loopne
cmp
pusha
das
xlat
cmpsb
jae
insb
shll
out
out
push
scas
lcall
mov
sub
stos
add
test
jne
aaa
mov
xchg
and
xchg
sbb
cld
add
sbb
jp
or
jg
icebp
fistpll
dec
or
fistpl
aas
pusha
scas
scas
scas
and
cmp
lahf
movsl
mov
mov
pusha
xlat
subl
add
dec
mov
repz
xchg
push
outsl
and
fstpl
jecxz
jnp
pop
outsb
outsl
cmp
out
movsl
rcll
insb
jge
ljmp
test
mov
cmpsl
and
push
ja
ss
loopne
sub
push
sbb
int3
mov
mov
cmp
add
test
lret
mov
shrl
movsl
ljmp
mov
sub
out
int3
or
ficomps
aaa
or
adc
lret
cld
ds
sbb
add
fwait
cmp
das
faddp
mov
cmpsb
adc
or
xor
dec
lcall
push
xchg
pop
mov
mov
add
sub
pop
pop
sbb
int3
lahf
aas
test
xchg
or
inc
mov
cmp
mov
and
push
popa
adc
cli
sbb
sub
pop
push
mov
jae
xlat
les
mov
ret
mov
cmp
push
repnz
pop
shll
jno
test
call
pop
push
cmp
in
push
idivl
mov
xor
mov
std
in
mov
add
out
stc
xchg
pop
fbstp
fdivrl
fcmovu
scas
inc
and
popa
cmpsl
dec
andb
aaa
fisubl
mov
shll
jae
xchg
cwtl
test
push
aas
dec
xor
rolb
mov
mov
lods
adc
stc
dec
imul
lahf
sbb
test
and
jecxz
mov
inc
xchg
push
and
pop
popf
add
lods
popa
out
pop
push
in
pop
ja
aaa
jae
stc
add
jge
sbb
mov
icebp
xor
mov
jo
pop
jbe
dec
pushf
cmpsl
push
jno
rorl
add
divb
mov
ja
imul
das
jns
jae
and
cs
call
pop
decl
into
gs
shrl
stos
pop
in
sub
fsubl
fcmovnu
push
mov
mov
repnz
cmp
nop
loopne
fs
mov
inc
mov
out
sahf
mov
mov
adc
cmpsb
inc
js
in
mov
shl
mov
jp
aam
mov
movsb
adc
dec
sub
mov
push
sub
sbb
vpunpckhbw
mov
scas
pop
sub
xchg
and
dec
sub
or
bsf
movsl
mov
orl
clc
ror
push
pushf
mov
jne
ret
cltd
jno
xor
int3
xchg
imul
call
sbb
adc
xchg
pop
and
mov
aaa
sub
push
jo
lea
scas
repz
rcr
xchg
mov
dec
mov
iret
fwait
jg
mov
fsubr
add
insb
lods
aam
int
adc
scas
fnstenv
or
mull
call
jno
mov
mov
mov
sti
js
fs
or
lahf
push
push
pop
adcb
bound
outsb
js
xor
loopne
mov
sarb
ljmp
add
mov
scas
jecxz
insl
fiaddl
xor
inc
insl
dec
incb
cltd
sbb
int3
std
sbb
jne
popf
shll
clc
add
in
shll
or
push
jno
xlat
insb
flds
aam
loope
cmp
stc
xor
push
or
inc
jne
cmp
jno
sub
andl
ret
sub
add
xor
xchg
ds
in
popl
lods
mov
das
push
loope
mov
xchg
pop
outsb
lods
and
adc
lds
xor
mov
insl
ret
xchg
cmpsb
das
mov
out
shrb
push
xchg
mov
pop
xchg
inc
mov
lock
pop
daa
add
lret
dec
jae
xchg
ljmp
pushf
or
dec
fld
mov
cltd
mov
in
push
dec
sbbl
mov
sbb
lods
cmpl
lret
and
xchg
mov
mov
mov
or
xor
loop
bnd
fildll
sti
pop
push
lret
fwait
push
mov
mov
cld
cmp
mov
pop
mov
pop
cmp
pop
push
sbb
mov
cmp
cmp
inc
stc
dec
fcomps
inc
rclb
xchg
sub
sub
cmp
lock
pop
mov
push
cmpsl
scas
sarl
ret
outsl
rorb
mov
and
lahf
inc
lods
sbb
pusha
inc
jns
sti
inc
sti
xchg
call
jl
xor
ss
jo
dec
in
cmp
xor
xchg
jecxz
mov
and
negl
cmp
test
xchg
sbb
sbb
shrl
sub
test
loopne
push
out
imul
push
es
adc
in
sbbl
mov
or
sub
mov
mov
mov
xchg
lret
adc
fs
loopne
xor
es
mov
in
mov
je
lods
andl
push
fwait
mov
or
mov
push
dec
push
push
cs
es
cld
sub
dec
or
xchg
inc
add
int
sbb
and
cmp
jg
pusha
push
movsl
xchg
rcrl
faddl
adc
push
mov
mov
sbb
cmp
fdiv
sub
inc
push
sbb
mov
dec
outsb
mov
sbb
shrl
push
je
pop
push
fildll
xchg
lea
mov
movsl
rcrl
outsl
pop
xor
bswap
jle
sarb
cmp
outsb
daa
xor
aaa
push
xchg
jmp
inc
xchg
add
push
dec
push
xchg
mov
sti
adc
xor
jecxz
pop
adcb
mov
mov
std
push
jbe
in
sbb
mov
shrl
mov
fcomps
leave
lds
sub
mov
inc
aas
xchg
jb
mov
fldl
sar
stos
int
inc
int3
cwtl
cltd
jmp
or
jge
mov
out
xchg
gs
and
movl
inc
xor
xor
sbb
adc
add
ja
mov
dec
popa
lahf
sbb
insl
inc
jb
sahf
mov
fnstsw
mov
test
sub
mov
insl
out
sahf
out
xlat
fcomps
test
aaa
adc
fisttps
adc
pop
dec
and
test
lods
cli
scas
mov
push
jb
mov
ds
pop
push
and
mov
test
data16
imul
push
ss
out
rclb
pop
js
jne
fucomip
out
movsb
and
sbb
imul
lods
xchg
adc
idivb
push
cmp
pop
add
int3
addr16
sar
test
insb
mov
xor
mov
mov
or
xor
test
sbb
push
and
test
pop
inc
test
cmp
inc
push
jo
lcall
dec
inc
or
cltd
gs
jne
inc
add
xchg
or
mov
imul
adc
enter
adc
add
inc
jb
xor
mov
cmp
fsts
sub
fstpl
je
cmp
mov
in
jle
test
xlat
ja
aad
scas
dec
mov
pop
and
popa
outsl
and
aaa
xor
xchg
ds
lea
xor
pop
sahf
pop
xchg
mov
pop
das
cmp
loop
sub
bound
jbe
nop
pop
mov
iret
mov
push
and
cmpsb
sarl
pusha
leave
dec
cs
xchg
xchg
idivb
jg
jne
fs
mov
fst
mov
lock
sub
push
push
sbb
out
fidivrl
outsb
mov
lds
pop
cltd
sbb
sti
and
lcall
jmp
lret
in
jp
je
mov
insb
mov
mov
lock
fmuls
jge
shrw
mov
popf
jne
in
jecxz
push
imul
stc
xorl
add
lret
bound
sbb
push
aaa
and
or
push
sti
lret
shl
sarb
outsb
xchg
pusha
sub
das
in
stc
add
add
mov
fdivrs
mov
xlat
lret
fcmovb
xor
xchg
jp
adc
test
int3
sbb
cld
cltd
arpl
ljmp
cmc
cmpb
pushl
push
int3
mov
push
pop
pop
ret
out
mov
lcall
xchg
shlb
xor
and
fwait
outsb
outsb
in
daa
adc
jno
sub
cmp
dec
lret
mov
xchg
mov
data16
mov
or
insl
pushf
js
jbe
fwait
inc
cmp
pop
adc
or
nop
xlat
fisttpll
jle
sbb
popa
adc
lahf
stos
mov
dec
imul
sbb
fsubl
inc
enter
xor
cmpb
hlt
fs
pop
adc
adc
fisttps
sub
mov
lahf
and
outsb
ja
loopne
inc
loop
or
xor
lahf
adc
mov
and
inc
fs
dec
xor
jns
bound
mov
dec
das
jl
shll
jns
mov
mov
lock
int3
clc
push
pop
xchg
cmp
loope
jne
mov
mov
testb
jno
mov
notl
dec
jb
shl
test
movsb
mov
ret
xor
inc
add
cmpsb
mov
flds
dec
aas
fistpl
mov
loope
fstpt
dec
dec
inc
pop
arpl
push
test
in
stos
out
jbe
insb
cmp
push
hlt
pop
mov
shlb
movsb
test
test
pop
ljmp
fisubrs
outsb
rcll
sbb
mov
dec
imul
cmp
jle
mov
into
ds
jl
adc
popf
idivb
ja
icebp
push
movsl
repz
fisubrs
add
cmpsl
or
xor
xchg
sub
jne
movsb
imul
jl
ret
or
ljmp
mov
ljmp
or
lahf
jmp
arpl
pop
dec
jge
popa
xlat
mov
pop
dec
enter
stc
icebp
scas
jno
cltd
repz
xchg
cli
repz
std
mov
inc
in
fsubl
xchg
lret
add
inc
xor
fimuls
adcl
jp
xchg
cmp
and
push
pushf
jmp
insl
mov
insb
cmpsb
daa
cwtl
mov
add
cmp
cmpsb
cmc
push
adc
adc
push
fdivrs
dec
scas
mov
inc
sbb
xchg
adc
insb
inc
test
lods
negb
xor
mov
mov
in
mov
icebp
pop
add
dec
xchg
add
iret
dec
mov
repz
jge
adc
fs
dec
and
cld
mov
xor
movsb
xchg
fisttps
mov
mov
inc
push
in
and
inc
xchg
push
push
pop
inc
xlat
push
and
xchg
mov
sbb
xor
or
cwtl
dec
dec
aaa
pop
xor
xchg
imul
test
xchg
repnz
mov
cld
out
pusha
dec
or
shlb
ret
jbe
mov
fndisi(8087
in
ret
mov
mov
push
stos
fistps
pop
push
lea
push
push
scas
sub
dec
movsb
jle
addr16
or
push
gs
cmpsl
xor
ja
xchg
xor
mov
pop
sarl
and
add
aam
test
push
fldcw
fistl
stos
je
inc
jne
and
ficoml
xchg
xchg
retw
push
dec
mov
popf
in
add
aam
push
pop
mov
add
js
rcll
shlb
pushf
mov
dec
cmp
pop
insl
dec
ljmp
add
sti
jle
push
ss
pusha
ja
movsl
mov
out
jecxz
adc
stos
sub
int
out
test
sarl
ljmp
and
aam
rorb
xor
cmp
lods
stc
and
xor
or
inc
cmp
movsl
notl
stc
pop
lcall
out
mov
lock
add
sbb
fnstenv
test
sti
sub
jge
xchg
lea
mov
cs
or
bsf
stos
sbb
in
adc
pop
and
or
loopne
and
das
loope
xor
lods
cwtl
cltd
add
pop
clc
xchg
je
or
pop
xchg
ja
pop
mov
jns
iret
lea
cmpsl
mov
cld
shll
mov
lods
mov
jmp
mov
lahf
mov
lret
inc
pop
sbb
test
dec
sbb
sub
popf
std
and
lock
mov
xlat
int
repnz
jnp
imul
inc
dec
push
leave
loop
mov
sub
insb
sbb
arpl
cli
orl
mov
outsl
mov
ljmp
and
pusha
test
mov
icebp
mov
mov
and
jbe
fstpl
dec
mov
xchg
into
mov
xchg
mov
jno
push
adc
mov
push
sub
lds
sahf
stc
inc
lret
es
jge
adc
xchg
and
cmp
inc
fadds
hlt
orb
fldl
adc
fisubs
imul
add
in
lock
cmpsb
iret
sahf
pop
mov
xor
fwait
aas
in
push
pop
sahf
push
ds
fidivs
lock
mov
mov
mov
add
out
add
lret
sub
mov
lea
sub
lods
mov
scas
scas
dec
adc
and
daa
fcoms
xor
repz
rep
pop
ret
bound
dec
dec
pop
aaa
cmp
clc
pop
insb
fistps
mov
ss
test
dec
testl
imul
dec
loop
jecxz
loopne
imul
jmp
daa
dec
imul
cli
aad
cmpsb
mov
int3
push
push
push
ficoms
xor
ljmp
sti
fidivs
inc
or
cmp
shll
xor
add
cmp
or
push
adc
sub
sbb
push
imul
aad
in
in
pop
push
pop
bound
mov
lods
inc
and
xchg
jmp
mov
aad
push
data16
push
mov
jns
jmp
movsb
mov
push
push
mov
inc
cmp
jnp
inc
arpl
jp
adc
sub
outsb
aaa
aad
flds
mov
into
push
enter
xor
mov
es
and
ljmp
outsl
xchg
or
inc
rclb
popf
pop
js
push
mov
jmp
add
es
outsl
mov
push
xchg
jg
sub
call
fadds
jno
add
pop
call
xchg
jp
lea
add
mov
aad
out
daa
rolb
lret
sub
fxch
xor
imul
cmpsl
test
lret
sarb
out
jle
gs
sarl
cmpsl
daa
loop
push
inc
jne
push
pop
sti
mov
leave
mov
pop
jle
push
es
push
cs
pop
out
jmp
test
or
insb
rcrb
sbb
jbe
jmp
push
push
add
cld
fwait
xchg
sbb
cltd
pop
sub
mov
ds
xchg
mov
aas
cld
adc
into
push
xor
push
loopne
testl
jne
sahf
pop
repz
das
adc
or
sub
inc
push
adc
test
mov
pop
mov
leave
pop
dec
xchg
push
rcll
mov
inc
add
je
xchg
je
sbb
mov
mov
inc
push
loope
sbb
push
and
inc
dec
inc
imul
pushf
dec
xor
js
inc
cmp
popa
jmp
jns
subb
add
arpl
add
jmp
xor
addr16
fists
daa
mov
lahf
jns
push
xlat
mov
cmp
ljmp
add
jb
adc
mov
or
iret
jb
and
sbb
mov
add
push
insb
js
push
or
xchg
fadds
adc
xchg
push
jno
pop
add
mov
jmp
movsl
outsb
cmovp
mov
sbb
std
cmp
jle
fnstsw
cli
lock
mov
aad
push
push
and
sti
jecxz
cmp
icebp
bound
adc
add
lret
js
iret
dec
add
adc
add
icebp
mov
stc
das
or
and
ret
or
push
dec
nop
adc
ret
xchg
add
jns
cwtl
cmp
stos
dec
stos
sub
jl
int
lret
push
or
arpl
sub
pop
push
cwtl
into
les
aad
mov
dec
mov
or
mov
adc
cmpsb
movsl
sbb
jno
das
mov
mov
enter
repnz
pop
pop
movsb
xlat
push
iret
pop
bound
dec
ret
add
push
sbb
rorb
insb
push
movsl
js
lret
mov
lret
push
xchg
mov
cmp
int
dec
jno
inc
fimuls
into
dec
pop
sbb
stc
sbb
jg
dec
popf
fdiv
push
sbb
cmp
dec
jns
pop
sub
xchg
inc
mov
mov
es
sbb
ljmp
fstl
pop
fsubl
jb
push
stos
xor
js
test
pushf
sbb
mov
or
test
sub
lods
jg
mov
in
outsb
pop
lcall
pop
push
pusha
xchg
push
add
jg
push
sub
lods
es
out
pop
or
jg
ds
sub
push
mov
or
and
mov
adc
fadds
out
scas
dec
iret
add
cmpb
test
mov
xor
inc
test
es
into
cmp
repz
dec
arpl
adc
loopne
jb
cmp
in
cs
repz
jmp
push
mov
pusha
insb
sbb
shlb
sti
dec
ret
xchg
jge
roll
lds
jp
lahf
mov
adc
lret
add
lahf
dec
jecxz
or
and
jmp
pop
add
jge
jb
inc
ljmp
test
scas
inc
jge
sti
adc
add
sar
fldl
sub
cmp
mov
jp
ja
pop
pushf
pop
loop
pop
es
fadd
in
ja
ljmp
lods
aad
test
or
shl
lock
push
jecxz
stc
popf
sbbl
pop
jae
xchg
adc
lods
in
ficoms
mov
jbe
insl
or
lcall
test
xchg
outsl
jmp
mov
jbe
mov
ljmp
out
sbb
xchg
scas
fisubl
hlt
inc
mov
sbb
aam
adc
cmp
fadds
ljmp
rol
ja
sbb
inc
cltd
cmp
jl
xchg
mov
push
inc
fisubs
hlt
mov
dec
arpl
faddp
cmp
jb
push
cmp
cli
jns
sbb
es
push
inc
imul
inc
loopne
xchg
adc
das
aam
icebp
icebp
cld
idivl
inc
mov
jb
cmp
xchg
and
or
add
sub
pop
xchg
testb
in
add
push
add
mov
xchg
or
lahf
bound
push
je
cmp
add
pop
dec
jno
inc
hlt
sub
jo
mov
insb
cld
scas
pop
mov
jge
jmp
dec
mov
inc
mov
sbb
mov
mov
notl
fdivl
loop
xor
jmp
push
ja
je
cmpsb
mov
cmp
pusha
xor
cld
jno
popa
mov
sbb
push
inc
or
pop
mov
hlt
imul
dec
sub
ret
stc
or
or
inc
jne
mov
sub
mov
pop
push
lret
aas
imul
or
int3
cwtl
mov
out
pop
or
shll
sar
popf
adc
inc
ud1
add
paddb
inc
push
dec
ds
cltd
out
push
hlt
xchg
sbb
push
aas
and
mov
imul
jne
stos
push
push
mov
sbb
iret
jnp
mov
cltd
sbb
sub
dec
adc
in
je
cmpsl
cs
cmp
jmp
scas
ret
mov
xchg
jg
add
xchg
repnz
adc
scas
int
fwait
adc
mov
hlt
movsb
mov
cmp
xor
dec
push
cmpl
xchg
xchg
adc
in
cmpsb
incl
aam
shrl
cmp
jnp
js
sbb
sbb
bound
mov
and
daa
imul
or
out
aad
outsl
es
lds
test
movsl
stc
inc
inc
mov
out
nop
scas
jbe
jno,pt
insl
cmp
cmpsl
cmp
mov
xor
incb
jg
rcll
xchg
out
inc
or
shr
xchg
jo
push
cmpsb
das
call
daa
in
lock
dec
aas
mov
in
pushf
aaa
cmp
xchg
sub
ret
lret
inc
xor
pop
sub
and
pop
js
ret
int
mov
jb
lods
imul
and
dec
add
pop
loopne
aam
cwtl
rolb
pop
pop
xor
jbe
mov
rcrb
mov
add
imul
div
or
push
divb
mov
test
jl
sub
test
out
outsb
sbb
or
mov
inc
popa
xchg
ss
or
lds
incl
push
jnp
icebp
cmpsb
movl
sbb
lock
dec
sub
jl
int
mov
andl
gs
add
repz
jle
daa
jns
adc
pop
pop
sahf
xlat
cltd
rcrl
cltd
mov
fisttpll
push
in
adc
mov
pop
mov
stos
popf
push
jp
insl
xchg
xchg
aas
mov
or
mov
push
xor
and
xor
sub
pop
rorb
fldenv
jge
scas
cmp
sub
cmpsb
xchg
dec
mov
sbb
xchg
mov
out
not
in
sahf
xor
mov
or
pop
sbb
pop
or
roll
push
outsb
mov
cmpb
push
pop
xchg
xor
xor
add
movsb
and
sub
cmp
fcmovnbe
push
mov
jge
push
rorb
out
xchg
dec
xor
adc
int3
or
cmp
jnp
xchg
push
movsl
pop
popf
cld
mov
sti
sti
enter
test
dec
lock
loop
mov
lock
out
js
aaa
dec
pop
sub
and
mov
int3
pop
mov
mov
fisttps
adc
push
int3
leave
lods
mov
jne
aaa
imul
cmp
dec
es
popf
mov
mov
inc
mov
int3
mov
out
rclb
xor
push
pop
mov
mov
xor
and
clc
dec
inc
hlt
mov
jae
fwait
iret
jbe
push
frstor
inc
push
jg
das
stc
ljmp
mov
in
subb
aad
outsb
pushl
sub
and
and
outsb
repz
hlt
add
add
je
faddl
inc
test
jns
inc
pop
mov
push
push
lock
fadds
pop
xchg
insl
cmp
into
sti
mov
insb
pop
mov
push
dec
fmull
sub
popf
daa
mov
addr16
inc
js
or
popf
xchg
fwait
mov
insb
xor
pop
dec
inc
inc
addl
jne
gs
fists
les
push
lea
inc
int
or
data16
sbb
sbb
or
imul
sub
ficoml
pop
shr
fsub
jbe
xor
jl
push
sbb
out
push
outsl
stc
popf
adc
jo
bound
outsb
ret
cmpsb
push
adc
out
mov
int3
rcl
sti
sarb
sbb
xor
mov
mov
addl
xchg
cmp
pop
cmp
les
bound
lret
outsl
jnp
popa
not
fsubrl
xchg
call
xchg
std
scas
fcmovnbe
cmp
mov
stos
push
dec
fisubl
es
mov
mov
mov
and
cmp
sbb
arpl
adc
add
leave
iret
cs
adc
sub
mov
add
cmp
xor
dec
dec
inc
add
xor
leave
jnp
xchg
jg
stos
cmp
push
mov
bound
xchg
jl
jmp
or
mov
jmp
stc
mov
mov
mov
mov
cmp
and
inc
push
mov
das
jecxz
imul
ja
mov
mov
out
imul
adc
pop
stc
dec
in
int
jb
rolb
lret
mov
out
jnp
arpl
or
adc
pop
jg
pop
fidivrl
outsl
mov
push
in
add
testl
adcb
pop
mov
push
jb
jmp
in
data16
movsb
or
rorb
adc
add
ss
sub
add
call
lods
insl
cmpsb
cmpl
push
lret
popa
mov
xchg
adcl
jg
dec
dec
push
mov
daa
sub
fcomps
testl
mov
rorb
fwait
loopne
mov
les
sub
test
rcrb
and
jmp
adc
ret
icebp
mov
int3
outsb
imul
sbb
stc
mov
xor
insb
push
sub
jmp
cmp
icebp
enter
xor
and
jae
or
dec
test
dec
xchg
jbe
and
fwait
mov
loope
popa
push
ds
in
jg
inc
xchg
push
push
out
stos
aam
clc
pop
lret
movsbl
sahf
sbb
test
push
adc
imul
push
aad
push
fiadds
xor
jo,pt
addb
pop
cmp
pop
inc
mov
test
cmp
inc
adc
aad
aaa
in
xchg
gs
sub
imul
out
gs
jne
imul
aas
stos
outsl
sub
add
push
sbb
xchg
test
fnstenv
mov
and
aaa
scas
jl
inc
xor
dec
mov
je
push
into
add
sarl
pop
mov
fsubs
mov
cmp
jmp
rcrb
cmp
sbb
movsl
push
lret
push
ja
pop
mov
scas
mov
mov
fmull
sub
movzbl
aaa
jl
xor
hlt
addr16
std
loopne
pop
rorl
test
test
jle
xchg
xor
sub
leave
fmull
movsb
adc
insb
cltd
gs
ljmp
popa
outsb
push
inc
sahf
or
add
mov
jle
dec
cmpsb
sbb
iret
hlt
bound
adc
push
jp
mov
jne
je
dec
lret
push
cmpsb
jne
cs
xchg
and
mov
inc
or
cs
es
jg
jle
imul
adc
adc
sbb
jns
fadds
push
int
push
ds
pop
pusha
imul
mov
push
or
dec
mov
movsb
loopne
xchg
pop
xchg
lret
pop
jns
jns
cmc
lock
js
in
pop
sti
pop
inc
js
insl
dec
stos
lret
cmc
adc
mov
inc
pop
insb
in
adc
mov
pop
xchg
push
aad
lcall
jmp
mov
icebp
xchg
mov
movsb
mov
xchg
aam
and
pop
add
faddl
arpl
mov
stos
and
mov
mov
addr16
sarb
inc
jecxz
les
nop
fmulp
lret
sub
pop
and
pop
xchg
sbb
cmp
mov
cmp
addb
and
or
mov
test
das
stos
add
inc
pop
xchg
adc
xor
mov
out
jmp
out
push
shll
in
mov
cs
push
imul
jle
inc
jo
sub
int
xchg
out
test
cmp
adc
pop
and
rcrl
in
push
rcl
mov
addr16
xchg
gs
inc
xor
dec
fwait
push
jnp
adc
in
jnp
movsl
push
cmpsl
and
insl
mov
cli
mov
dec
and
loop
fisubrl
lea
xchg
cmp
mov
jle
jmp
das
aam
mov
mov
rcll
jg
pop
shlb
test
dec
push
mov
inc
mov
mov
jge
or
add
push
xchg
sbb
or
stos
popf
pop
xchg
dec
sub
xchg
pop
bound
loope
movsb
aam
push
fcoms
cmpl
push
push
movsb
or
pushf
hlt
jmp
jge
bound
data16
cmp
shl
or
fadd
and
sub
sbb
je
sbb
mov
sub
rclb
js
sbb
xchg
jle
sub
adc
and
jne
negb
pop
sahf
test
dec
dec
pushf
shrl
test
inc
aas
fsubrl
fnstcw
push
or
in
dec
cmpsl
int
push
lods
xchg
jae
adc
pop
enter
mov
flds
jnp
cmp
jno
mov
jo
mov
cltd
sbb
outsl
ss
ja
cmp
pushf
mov
and
ror
xor
adc
dec
cmp
in
or
out
jno
cltd
popf
icebp
lds
aam
lods
fiadds
sub
lret
xchg
out
inc
cmp
sbb
js
xchg
notl
test
std
mov
sti
mov
sbb
mov
vmovdqa
pop
jle
push
inc
adc
scas
xchg
imulb
pusha
rorl
mov
mov
jo
repz
pop
jmp
or
xchg
and
push
fnstsw
fiadds
imul
sub
push
sbb
outsl
sbb
mov
pushf
rcll
ret
aaa
xchg
jo
pushf
pop
fs
lea
out
mov
dec
in
cmc
jp
and
jge
fildll
shlb
shll
mov
dec
imul
inc
jl
lret
lahf
test
lcall
shlb
push
or
pop
hlt
outsb
fwait
data16
fwait
arpl
outsl
xor
lret
push
fwait
push
or
dec
cmp
je
test
sub
mov
jnp
xor
push
mov
rcrl
ss
sarb
cmp
xchg
sub
dec
pop
mov
cmp
mov
fiadds
cli
mov
jns
cmp
cmpsl
sarl
inc
js
call
or
lods
inc
jns
int
add
sub
cwtl
inc
xor
ja
in
pop
jb
jp
xchg
cmp
inc
or
idivl
lods
scas
int
ds
cli
xor
div
push
imull
cltd
lcall
xlat
flds
push
popa
ret
adc
push
sub
arpl
mov
aam
adc
mov
dec
cmc
cmpsl
pop
out
adc
leave
aam
roll
nop
hlt
mov
mov
pop
jne
cmp
icebp
mov
jbe
dec
gs
xor
outsl
add
sti
mov
out
popf
rcrb
sbb
cmpb
mov
or
dec
pop
rcrb
and
lea
ss
out
and
dec
push
stos
mov
dec
sbbl
push
loope
in
test
mov
push
cmp
pop
sub
mov
inc
xor
pop
aaa
lea
xor
pushf
jle
mov
or
scas
pop
add
and
push
dec
dec
xor
iret
or
dec
in
push
sub
out
adc
xor
push
inc
or
aam
sbb
inc
cs
enter
jo
rolb
mov
mov
cmp
pop
or
nop
lcall
mov
std
and
insb
and
lret
pop
int
dec
aad
pop
and
iret
jmp
adc
xor
jnp
adc
mov
lock
stc
filds
out
jp
jle
push
xchg
xadd
and
pop
xchg
add
movsb
clc
sbbl
and
popf
icebp
andl
rcrl
andb
push
aam
mov
hlt
dec
mov
cld
addr16
mov
adc
push
adc
mov
add
mov
popa
adc
mov
jns
arpl
sbb
aam
rolb
sub
mov
jmp
dec
xor
push
inc
xchg
clc
repz
incl
jmp
mov
in
pop
cmc
into
jl
outsb
lds
or
repnz
cmp
imul
pop
adc
rorl
sarl
sbb
mov
sub
mov
push
or
mov
into
dec
jae
mov
stos
push
in
ds
stos
xor
mov
mov
xor
jo
inc
lcall
cwtl
icebp
popf
push
ja
lcall
fwait
ss
inc
pop
pop
lret
or
cli
pushf
push
outsl
imul
sbb
popf
fadd
fsubs
jl
insb
cmp
insb
daa
push
sub
movsb
xchg
inc
jbe
inc
mov
lret
xchg
imull
cmp
ds
push
sbb
inc
outsl
and
aad
cmp
das
jl
dec
pop
call
inc
jmp
cmp
mov
pop
add
push
insl
xlat
fsts
shlb
in
clc
addr16
ret
test
or
leave
pop
or
int3
cwtl
add
pop
leave
pop
mov
xchg
push
xchg
lods
fildll
xchg
ljmp
test
imulb
dec
cld
sbb
xchg
movsl
xchg
or
push
popa
xchg
pop
adc
mov
icebp
in
subl
push
rorl
cwtl
fnstcw
lea
jg
adc
mov
cwtl
imul
imul
pop
xor
xchg
rcrl
xor
iret
rorb
icebp
xchg
call
das
out
cli
test
leave
je
std
pop
jg
cmp
push
ss
dec
and
pushf
daa
xchg
fdivs
mov
sub
jbe
in
lods
xor
pop
js
cmp
fwait
outsb
pop
pop
outsl
inc
in
jmp
pushf
hlt
mov
cwtl
jo
sahf
aas
inc
add
sbb
or
lea
mov
or
cltd
orl
and
sub
insb
inc
cld
mov
pop
cmp
gs
clc
and
xchg
xlat
mov
cltd
test
btr
cmc
push
jns
hlt
lea
dec
sub
jp
daa
cltd
in
stc
fisubl
loop
ds
add
pop
das
sbb
sub
hlt
insl
roll
and
mov
xchg
pop
push
movsl
jnp
insl
sbb
fadds
pop
mulb
cmp
scas
adc
pop
popl
jne
jecxz
sub
sub
or
xor
and
add
dec
mov
call
jae
jbe
ss
xchg
out
rorl
push
add
push
add
adc
test
rorb
sub
mov
xchg
ds
inc
nop
inc
in
ds
adc
aam
repnz
mov
push
insb
push
push
iret
cmpsb
cmp
fstpt
in
test
dec
test
out
mov
jl
and
inc
mov
xor
add
xor
cmp
stc
xor
sti
jo
mov
loope
mov
clc
xchg
ret
leave
push
or
mov
cltd
pop
or
cmp
and
cmpsb
push
pusha
xor
mov
aam
cmp
movsb
xchg
addr16
xor
push
cmp
je
inc
fidivrl
scas
push
jecxz
push
ja
push
jae
pop
cmp
aad
sub
sbb
push
mov
inc
xchg
pcmpeqb
mov
jnp
test
fisubl
enter
shl
sub
loopne
js
jo
cs
scas
rcrl
sub
cld
push
mov
sub
movsb
daa
dec
scas
clc
pop
smsw
fldl
pop
mov
popf
dec
fwait
xchg
lods
popa
dec
push
in
dec
or
jae
cld
add
scas
sub
lods
xor
bswap
lret
dec
outsb
int3
mov
imul
repnz
or
push
push
cmpl
jmp
cli
mov
icebp
bound
push
pop
pop
mov
sub
ret
cmpsl
rcll
loop
add
das
cmpsb
xchg
sahf
pop
adc
inc
mov
test
dec
jl
clc
push
adc
aaa
int
ret
xor
fs
adc
jbe
dec
lods
popl
cmp
ret
pop
and
mov
mov
imul
adcb
dec
sbb
and
aam
cmc
nop
cmc
cli
leave
push
outsb
iret
xchg
sub
cmp
test
stos
repnz
fcomi
lds
jge
xchg
hlt
adc
repnz
iret
addr16
ss
xor
aaa
call
out
sbb
into
xchg
mov
mov
nop
adc
lods
mov
mov
jae
dec
movsb
adc
clc
xor
pop
cmp
dec
cmp
ja
jl
pushf
movsb
shrl
sti
cmp
movsl
sahf
sub
mov
mov
add
xchg
inc
ja
xchg
scas
lcall
xchg
pop
xor
std
xchg
pop
inc
mov
outsb
cmpsl
jne
sub
int
xor
push
dec
faddl
lods
mov
cmp
pop
ret
int3
clc
sub
aad
jg
dec
pop
popa
mov
push
lret
mov
mov
gs
lcall
je
loop
mov
adc
movsb
jp
into
inc
sub
inc
test
leave
rcll
decb
jo
pushf
mov
sub
jmp
test
jae
mov
fcompl
sahf
test
in
dec
inc
outsl
out
mov
ret
jbe
sbb
sbb
imul
lea
decl
and
and
mov
fdecstp
push
insb
adcl
push
ror
mov
repnz
pop
cmp
xchg
outsb
aas
stos
pusha
lcall
mov
jns
xor
icebp
xor
cmp
enter
pop
arpl
dec
mov
push
sbbb
lods
xchg
xor
fiaddl
pop
mov
aam
imul
int
inc
sub
lret
je
and
mov
mov
out
int3
mov
push
cmpl
cmp
stc
mov
insb
sub
push
mov
pop
inc
arpl
mov
int
dec
cmp
movsb
fisubrs
jnp
pop
pushf
mov
cmp
xor
shll
sub
push
test
cmpsb
pop
mov
pop
pop
scas
pop
out
mov
outsb
es
cs
add
adc
nop
int3
jae
movsl
jno
dec
sub
rclb
add
pop
jecxz,pt
rolb
push
dec
xchg
add
fs
sub
rol
adc
js
das
stc
pop
sbb
adc
fistpll
and
sub
xchg
ljmp
or
xchg
pop
pop
int
push
out
bound
jno
mov
mov
mov
mov
loop
lahf
test
inc
ret
sub
icebp
mov
sub
sbb
pop
adc
outsb
test
jbe
sbb
xor
lret
test
mov
ja
in
rol
stos
adc
bound
cld
insl
lcall
cmp
lret
push
push
jno
cltd
adc
or
sub
or
test
jp
repnz
int
mov
lods
daa
insl
cmc
test
jne
and
dec
enter
pop
int
pop
aam
imull
sub
lea
and
testb
adc
and
or
fildll
shl
mov
rolb
jno
and
scas
mov
icebp
sub
scas
fsubrs
nop
mov
scas
mov
adc
mov
xor
dec
mov
mov
outsl
inc
daa
cmp
or
lret
out
rcrl
leave
jns
adcl
pop
pushf
push
mov
push
push
push
jbe,pn
loopne
add
mov
jbe
xchg
imull
out
lret
loopne
fsubs
insl
xchg
stos
xor
or
dec
imul
jp
cltd
mov
rorb
jno
lock
adc
cs
push
jo
mov
sub
push
lahf
loopne
push
or
stc
xlat
xor
jle
repz
add
pop
fs
mov
xchg
lahf
xchg
popa
mov
imull
mov
daa
bound
mov
ljmp
daa
cmp
dec
mov
and
lahf
mov
andl
mov
pop
push
mov
adc
sub
push
pop
xorl
in
push
repnz
jge
in
outsb
mov
rorb
aaa
data16
jl
dec
jge
hlt
pand
call
repnz
dec
sbb
xor
xchg
mov
add
xor
shlb
or
xchg
sti
sbb
jne
mov
mov
lret
push
or
loope
jbe
jns
push
fs
leave
aad
fcmovnb
test
pop
mov
sub
sbb
popf
pop
enter
cmp
lods
mov
sub
cltd
or
repz
shrb
xlat
cltd
sarl
xchg
jbe
mov
scas
data16
xchg
std
fldcw
add
xchg
ds
mov
subl
and
int3
das
fdivrl
cmp
aad
jne
xor
lcall
jae
cwtl
adc
xor
push
insl
lret
test
push
and
and
inc
bound
pop
shrl
sub
cmpsl
das
cmpb
or
ret
fcomip
pop
jl
fsubr
int
lea
fildl
sbb
dec
push
dec
mov
in
cmpsl
insb
pop
scas
ficomps
sub
sub
insb
bnd
lcall
cmp
adc
mov
nop
into
shld
test
incb
subb
and
out
or
cli
cmp
jns
add
insl
aaa
repz
es
cwtl
xchg
xor
lods
leave
cmp
add
jbe
mov
cmp
xchg
sahf
sub
int3
add
xchg
xor
pop
mov
mov
mov
std
mov
imul
cmc
rolb
jbe
pusha
aad
and
xor
lahf
and
mov
cmp
xor
outsl
jbe
ja
in
pop
out
inc
jb
mov
jge
sti
or
lret
lock
dec
dec
flds
push
sbb
nop
pop
jnp
or
push
pop
fildl
and
mov
inc
shrl
cmpsb
imul
test
adc
adc
ja
rcrl
inc
mov
add
mov
imul
sub
je
inc
shlb
stos
mov
icebp
dec
mov
gs
scas
mov
fld
sar
aas
in
pop
and
out
mov
jo
incl
shrb
popa
pop
jbe
mov
pop
mov
mov
mov
in
es
xor
sbbb
inc
cmp
fisubrs
push
mov
xlat
pop
or
xchg
mov
movsl
push
cbtw
add
sbb
push
data16
cmp
mov
fistpl
js
push
sbb
lahf
lahf
int3
fisubrl
cwtl
add
rcr
xchg
into
push
push
mov
xor
arpl
mov
lcall
inc
mov
and
lcall
stos
fisttpll
pushf
inc
pop
insl
test
andl
mov
pop
lock
call
push
jno
sbb
adc
sub
je
lock
fs
mov
xor
cli
dec
or
rcrl
je
push
lcall
jle
lods
in
sub
pop
pushf
cmp
sbb
movsb
pop
in
push
pop
adc
loopne
sbb
pop
mov
mov
cwtl
push
sahf
lock
dec
lods
or
lock
xchg
insl
inc
nop
adc
ljmp
fisubrl
pop
negb
incl
not
fisubrl
out
fstps
add
sbbl
in
loop
mov
out
les
stos
dec
imul
adc
and
sbb
es
bound
fisttpl
mov
lds
shlb
push
pushf
test
subb
cmp
xchg
xor
cmp
add
cmp
xor
das
lret
dec
sub
pop
and
stc
movsb
push
adc
mov
jo
movsl
divl
add
or
xchg
decb
aaa
or
popa
pop
add
lods
pop
and
push
dec
nop
and
scas
pushf
mov
dec
pusha
jo
ret
adc
out
stos
or
in
vmread
sbbl
outsb
aas
loop
out
lods
shll
xorl
add
js
arpl
sbb
rolb
adc
cltd
mov
gs
sarl
push
ret
test
xor
add
cmp
adc
out
std
jle
rol
mov
pop
fwait
sub
mov
and
xchg
inc
jmp
inc
es
cmp
adc
stos
lods
mov
mov
xlat
add
test
sbb
lahf
mov
xor
sbb
adc
cmp
imul
and
outsl
or
jns
stos
xchg
xor
and
aad
and
fistpl
mov
nop
push
ss
sbb
movsl
idivb
mov
sbb
or
dec
push
dec
push
aad
mov
xor
xchg
mov
in
and
jge
lahf
pop
pop
clc
lcall
cmp
jle
lea
sbb
ret
call
dec
xchg
pop
insb
push
shrb
and
scas
scas
xchg
sbb
lods
les
mov
mov
out
sti
push
movsl
sbb
ja
mov
dec
cmp
jmp
ficoms
xchg
or
mov
jl
sbb
mov
idivb
int3
cmpsl
xchg
cmpsl
pop
insl
jns
jbe
sarl
pop
push
lds
jae
push
fsts
xchg
clc
cmpsb
scas
jne
xchg
lea
test
orb
test
cltd
ja
mov
loop
sub
test
decl
popf
sbb
mov
jecxz
icebp
jo
cmpsl
pop
sub
cmp
and
rolb
jmp
mov
in
fwait
into
in
jno
enter
jbe
test
outsb
ss
and
or
mov
clc
push
or
add
dec
scas
adc
xchg
test
jge
sub
movl
out
sbb
mov
in
inc
push
aas
mov
lods
sbb
data16
mov
aad
es
popf
arpl
add
push
sahf
pop
xor
js
adcb
pusha
fwait
mov
fdiv
bound
xorl
cltd
mov
mov
jnp
fwait
push
xor
xchg
lahf
push
dec
ret
push
inc
cli
pop
leave
mov
scas
mov
scas
arpl
push
lock
add
orb
xor
push
mov
arpl
in
in
in
dec
daa
xor
das
sbb
out
bt
insl
mov
push
xlat
inc
into
cmpl
lcall
lock
popa
mov
testb
add
in
pop
inc
pop
push
pop
stos
sahf
testl
xor
xchg
stos
rcrl
scas
adc
notb
in
add
aad
jo
movsl
scas
mov
test
outsb
inc
and
ljmp
cmp
and
test
xor
push
test
stos
dec
scas
ficompl
add
ljmpw
sbb
xchg
cmp
sbb
mov
arpl
hlt
and
add
add
emms
add
adc
cli
mov
mov
clc
fnstsw
mov
enter
divl
rclb
add
scas
sub
dec
xor
hlt
and
push
sbb
xorps
lret
pusha
rolb
mov
xlat
fs
and
mov
dec
popf
data16
ss
sub
mov
fcmovu
adc
mov
mov
ja
cld
sbbl
xchg
pop
hlt
js,pt
pusha
adc
pop
pop
sub
stos
gs
add
pop
jmp
mov
jl
push
inc
fsubrl
xchg
frstor
jge
xlat
in
adc
push
or
mov
pop
stc
sbb
sub
add
scas
les
iret
and
arpl
xchg
aam
cwtl
mov
jg
cmc
dec
sbb
push
repz
adc
dec
cwtl
lcall
cwtl
sub
add
iret
xchg
ja
test
push
icebp
jge
adc
in
xor
mov
cmpsb
movsb
adcl
adc
pop
fisttpll
xchg
and
or
mov
leave
shrb
pop
push
fmull
sti
pop
jmp
xchg
mov
mov
mov
and
jne
cmp
jns
out
add
pop
sub
dec
jg
ljmp
xchg
mov
mulb
cmp
mov
or
cmp
popw
pop
lret
cmp
or
add
into
out
push
push
ds
pop
mov
in
movsb
leave
xor
in
dec
inc
aaa
jl
dec
xor
lcall
jno
enter
push
aad
cmp
lret
mov
sub
loopne
out
dec
stos
lds
cmp
push
or
les
mov
xor
sub
add
dec
lret
test
pop
into
rcr
xchg
ret
or
lretw
ret
lea
fcomp
gs
mov
pop
jge
or
stos
pop
outsb
push
cwtl
movsb
clc
cmpsl
fbld
ljmp
adc
or
jno
xchg
lcall
or
xchg
aaa
sbb
lret
sbb
mov
sbb
gs
pop
jo
lds
push
pop
ret
hlt
sub
mov
shl
xlat
jnp
mov
mov
shll
mov
adcl
imul
mov
pop
mov
cwtl
adc
push
mov
push
bound
xor
out
or
loopne
fnstenv
inc
cmpl
bound
dec
mov
not
lock
lds
jae
clc
xlat
clc
rcrb
cmp
xor
cmp
lods
in
mulb
les
out
inc
sbb
mov
xchg
mov
adc
sti
xchg
mov
mov
inc
lds
jb
and
jle
adc
repz
shlb
pop
xchg
les
cmp
xor
ljmp
push
pop
dec
push
push
lods
ds
icebp
mov
inc
testb
dec
push
fiaddl
or
sbb
pop
scas
repnz
jg
push
sub
imul
cmc
bound
pop
add
sub
int
mov
test
and
js
add
in
outsb
ja
das
aas
mov
and
cmp
rsm
xorl
subl
aam
push
fbld
out
mov
mov
mov
fiadds
and
mov
mov
mov
js
mull
xchg
push
sti
fcoml
aas
scas
sbbl
mov
and
fsts
js
xchg
shrl
adc
mov
in
jo
jae
push
cwtl
orl
pop
ret
dec
fisttpll
mov
gs
pop
dec
dec
jg
daa
cmc
and
dec
dec
jae
pushf
mov
cltd
sbb
sub
test
mov
pop
or
cmp
fcoml
mov
mov
push
stos
pushl
mov
fldl2t
in
adc
jb
lock
out
test
or
and
bound
mov
mov
sub
scas
stc
dec
repz
add
leave
jns
cmp
adc
fwait
and
sub
and
add
pop
inc
or
sub
loope
icebp
das
int
imul
test
aaa
jl
inc
xor
or
jne
arpl
jb
jno
clc
ret
adc
pop
scas
out
and
cmc
or
stos
pop
or
mov
fisubl
es
stc
loope
mov
in
movsl
movsl
lods
push
pop
out
outsb
xor
aad
fidivrs
adc
cmpsb
mov
push
ror
in
and
ja
xor
pop
cmpsb
push
out
mov
dec
mov
neg
ret
adc
pop
ror
inc
gs
lods
push
sahf
test
out
incl
data16
or
out
cmc
lods
sbb
adc
xchg
push
dec
mov
and
push
pop
push
jl
inc
add
mov
lods
lahf
test
and
sub
adc
xchg
insb
pop
les
jecxz
fucompp
std
hlt
and
mov
pop
mov
sbb
movsb
jno
arpl
sbb
loop
je
mov
mov
add
mov
stos
ja
xor
sahf
shr
sub
std
jmp
jae
or
mov
adcb
call
sahf
ret
xor
mov
push
pop
adc
into
out
sti
cmpsb
int
xchg
xlat
bound
mov
xchg
rol
mov
or
cld
mov
push
cmp
dec
aam
icebp
int3
inc
pop
xchg
sub
push
inc
je
movsb
repz
test
es
fstps
in
xchg
sbb
loop
or
aam
out
mov
pop
mov
mov
lods
out
jecxz
les
xor
xchg
and
es
pop
lea
ss
cmp
xchg
stos
arpl
movlps
loope
into
jnp
jbe
adc
lcall
mov
outsl
imull
jae
int3
subb
inc
aad
cmc
cmp
cmpsl
lods
xor
jg
dec
add
ffreep
imul
lret
push
push
in
in
cmpsl
mov
push
sub
xchg
cmp
push
insb
jo
inc
mov
pop
dec
loope
das
stc
outsl
fprem
mov
pop
aaa
cmp
add
jl
ds
ss
xchg
jnp
stos
popa
movsb
sbb
scas
add
pop
push
les
cwtl
cmp
cltd
add
arpl
mov
jp
cltd
iret
repz
aad
xchg
test
loop
dec
je
ljmp
mov
jno
inc
push
test
cmpsl
mov
sub
fdivrl
es
mov
dec
pop
sbb
popf
test
sub
xchg
lret
jle
pop
sub
daa
cwtd
cwtl
cld
mov
adc
adc
xor
movsl
pop
dec
loopne
dec
cmp
xorl
inc
and
inc
xor
mov
outsb
fsubr
lahf
in
pop
andl
testl
scas
mov
jne
out
mov
sbb
inc
or
cld
outsl
jle
mov
mov
jp
pop
jo
mov
xor
icebp
jno
push
xor
mov
fwait
inc
push
es
adcb
xchg
stos
jp
adc
or
pop
push
jae
pop
xchg
xor
outsb
arpl
cltd
dec
push
pop
or
sarb
adc
mov
mov
xor
and
mov
push
dec
test
std
sub
cs
jno
jmp
adc
enter
or
daa
cmp
or
aam
jne
scas
sub
hlt
mov
gs
adc
add
push
sahf
cmp
stc
mov
fidivs
leave
cmp
xchg
lret
scas
cwtl
test
add
aaa
cmpb
test
rclb
outsb
in
cs
mov
mov
mov
and
lcall
js
decb
lds
sbb
lods
nop
shrb
or
cltd
push
sub
add
aam
lahf
mov
mov
stos
iret
and
push
idiv
pop
jb
sti
mov
in
dec
ret
jb
adc
jmp
xor
xchg
xor
dec
cmp
rorl
xor
aas
push
dec
cmp
leave
dec
hlt
ficompl
shr
test
cmp
cmpsb
inc
adc
jg
pushf
or
sbb
sbb
outsb
mov
inc
rclb
sbb
pop
inc
je
and
out
cmp
sub
mov
add
aas
scas
jl
fs
std
mov
rolb
fmuls
jp
hlt
sub
scas
out
pushf
jb
sbb
xor
pop
mov
or
adc
push
loop
cwtl
sub
mov
xor
or
cmpsl
xor
pop
inc
mov
cmp
cmp
push
xor
fstp
mov
fisttps
mov
pop
xor
incb
and
inc
mov
jo
fldenv
push
rcrl
xchg
and
hlt
imul
out
pushf
dec
or
mov
xorl
jl
or
in
sbb
pop
imul
fwait
loop
xchg
jmp
test
sbb
jbe
sub
cmp
loop
bound
pop
int3
mov
popfw
dec
ret
fisubl
movsl
lods
popf
sti
sbb
push
push
scas
xchg
jle
shlb
pop
cmp
lds
cltd
into
mov
lret
sub
shlb
push
out
aam
xchg
jecxz
inc
jge
out
jle
push
inc
stos
into
mov
and
addr16
out
xchg
bound
xchg
inc
push
into
mov
jge
out
push
ljmp
jmp
mov
bound
in
fcompl
dec
les
xchg
mov
int
mov
sbb
inc
mov
and
gs
xchg
adc
repz
and
or
je
ja
or
out
inc
sub
dec
adc
lret
dec
adc
push
dec
addps
pop
leave
pop
nop
lret
mov
push
int3
nop
stc
push
jo
push
add
xor
fldenv
movsl
rolb
loopne
bound
sbb
and
sub
mov
jecxz
shr
jg
inc
es
add
test
test
dec
and
shlb
shl
fidivrl
xchg
or
jge
andb
int
cmp
and
pop
jmp
out
mov
adc
in
aam
and
xchg
rcl
mov
daa
fisubrs
sbb
pop
mov
xor
aaa
fldt
push
push
fstps
dec
fwait
sbb
daa
cli
xchg
sub
cmp
fsubrs
lock
xor
fcmovbe
sub
mov
sahf
dec
mov
and
loopne
cmpsl
movsb
andl
mov
int
out
lods
sbb
jle
and
mov
jo
daa
sbb
pop
mov
gs
les
xchg
lock
es
push
push
into
in
or
fcmovbe
in
xchg
vdivss
and
fadds
pop
ss
pop
inc
jb
dec
ret
sar
mov
cmpsl
rcll
cmp
adc
xor
ffree
insl
mov
ja
sub
std
mov
jle
dec
jns
inc
dec
jle
xor
sti
cltd
and
mov
sbb
push
and
xchg
cmpsb
pushw
push
clc
popf
cmp
jne
mov
rorl
pushf
dec
sbbb
jecxz
jl
cmpsl
repnz
nop
mov
mov
lods
rol
inc
push
sbb
into
mov
mov
sub
or
xchg
aad
jl
mov
add
iret
jb
cmpsb
jge
pusha
movl
inc
lret
cmp
push
xchg
pop
mov
or
adc
jg
repnz
add
pop
ret
cmp
push
xor
xchg
mov
int
push
jns
xchg
sbb
dec
add
and
sub
sbb
cs
in
cs
incl
insl
jno
inc
outsb
jno
stos
pop
xchg
push
dec
pop
icebp
repz
daa
mov
jns
orb
cmc
in
inc
stos
mov
sub
out
sub
mov
pop
dec
cmp
repz
jmp
arpl
in
push
mov
pop
pop
mov
rol
inc
icebp
mov
mov
mov
add
jbe
xor
and
push
icebp
mov
add
adcl
cwtl
push
inc
inc
dec
sbb
inc
xor
xor
sub
sbb
fucomi
jg
outsl
push
outsb
xchg
pop
pop
ficoml
std
inc
pop
xchg
addr16
test
pop
in
adc
in
loopne
mov
incb
adc
cld
dec
sbb
xchg
jmp
cli
comiss
or
xchg
divl
xchg
inc
cmp
mov
adc
xchg
cmp
xchg
scas
jno
push
inc
cmp
mov
pop
aam
jle
fnstenv
fwait
in
jne
inc
cmpsl
inc
stc
rclb
ljmp
lahf
xor
insl
jmp
test
arpl
and
xchg
mov
cmp
sbb
xor
sub
jmp
adc
cmp
mov
sbb
add
xor
loopne
aas
xor
call
out
cmp
dec
js
lret
pop
popa
inc
lds
or
popf
jb
dec
lcall
push
leave
push
lods
out
jge
cmp
pop
xchg
jp
xchg
aas
add
jp
dec
inc
movsl
cwtl
cmp
pop
xor
cwtl
in
xlat
push
push
xchg
adc
jecxz
sbb
hlt
gs
jbe
data16
enter
dec
adc
push
xchg
push
ret
cltd
loop
xchg
stc
daa
xor
sar
inc
sub
add
push
das
mov
icebp
jnp
xchg
cmpsl
xor
xchg
in
int3
mov
mov
push
inc
dec
sub
add
scas
sbb
stc
jle
pop
rorl
int3
lahf
popf
ret
xchg
xchg
add
adc
cwtl
or
scas
or
mov
out
push
daa
mov
jmp
sbb
or
daa
int3
jecxz
adc
into
shlb
sti
into
rolb
push
pusha
mov
jnp
arpl
jmp
push
and
addr16
adcb
add
mov
movsl
leave
pop
push
aam
push
aam
pop
jno
add
repnz
mov
pop
test
and
inc
sub
inc
push
add
sbb
pop
mov
flds
jg
push
fyl2xp1
shlb
les
add
xor
jp
push
les
xor
pop
cmp
rolb
lock
xchg
mov
mov
out
lret
stos
jnp
je
or
inc
xchg
es
or
ret
lret
cmpsl
mov
sub
stc
call
mov
pop
data16
xchg
and
call
lret
xchg
jne
adc
xchg
lock
xchg
mov
dec
xchg
fiaddl
dec
jae
loope
out
mov
and
ss
jno
push
outsl
ficoms
pop
shlb
sub
xchg
inc
jle
adc
ds
ret
arpl
jo
addr16
pushf
and
sbb
test
xlat
cmpsl
add
mov
cmp
pop
es
movsb
mov
mov
add
push
mov
and
scas
xlat
icebp
push
inc
mov
sbb
shlb
mov
adc
pop
decb
mov
inc
dec
or
mov
jg
neg
lock
add
int
cmpsl
movsb
jnp
pop
movsl
nop
xchg
mov
push
das
jle
ret
mov
shrb
mov
test
and
sub
lcall
icebp
xor
insb
aad
add
in
adc
sub
push
enter
stos
imull
mov
mov
lret
mov
adc
fidivl
call
sbb
mov
or
push
lock
or
std
je
jns
push
cld
sub
aas
stos
cmp
dec
mov
sub
dec
pusha
cmp
outsl
movl
rcrl
stc
push
bound
movsl
pushf
fisubrl
bnd
out
xor
jecxz
dec
adcb
push
setg
fisttps
add
sub
rcrl
pop
sbb
out
lea
xchg
lds
dec
divl
lds
mov
mov
sub
push
xchg
jl
es
mov
in
inc
mov
clc
rolb
jp
dec
mov
jge
lahf
pop
inc
pop
jo
inc
adc
loopne
sub
dec
js
pop
push
dec
nop
lds
js
insb
cmp
sub
shll
rcr
pop
aaa
sbb
pop
scas
and
pop
mov
cmpsl
sub
lock
cmpsl
push
mov
ljmp
daa
pop
movsb
add
xor
fidivrs
pop
sub
aaa
lock
inc
in
cltd
fs
imul
das
mov
jmp
xchg
lcall
std
pop
fndisi(8087
sub
movsb
aas
idiv
popf
call
xchg
dec
mov
sbb
arpl
out
outsl
pop
sbb
aad
lret
mov
dec
data16
rorl
cmpsb
mov
pop
sbb
mov
mov
jo
dec
pop
mov
mov
adc
cld
push
shrd
idivl
mov
xchg
cld
fisttps
cmp
adc
push
mov
mov
call
inc
insb
adc
repz
js
and
mov
xchg
xchg
mov
mov
pop
sbb
inc
imul
lods
sbb
add
jecxz
and
xor
dec
mov
push
std
push
addb
inc
lock
cmp
or
lds
movsb
sar
xchg
lcall
dec
cmpsb
jb
sbb
inc
incl
ja
loope
lahf
mov
shll
push
inc
cmp
or
aas
shl
or
xor
pop
in
lods
jns
inc
jle
xor
pop
jmp
rcl
lahf
lods
test
adc
pop
cltd
in
imul
mov
mov
cmp
or
inc
fs
dec
sti
xchg
and
loopne
lcall
int
add
jecxz
leave
jo
out
dec
xor
imul
inc
push
gs
pop
cmpsl
or
std
xchg
mov
and
adc
notl
mov
jp
je
mov
stos
cmp
or
or
pop
repnz
repnz
ljmp
dec
pop
xor
jnp
pop
sbb
inc
clc
xchg
jp
fnstsw
mov
sub
test
ret
push
mov
call
jg
add
jb
shll
loopne
insb
testl
outsb
push
popa
rorb
ss
ficomps
and
pop
pop
insb
mov
fstpl
adc
xchg
sarb
cmp
dec
scas
push
loopne
xchg
push
or
jne
icebp
arpl
xor
cli
loop
pop
aas
arpl
addl
arpl
nop
cmp
shl
repz
imul
icebp
je
out
scas
cmp
lds
ret
push
addr16
jns
pop
pop
dec
aaa
call
mov
dec
ljmp
mov
add
inc
xchg
aad
xchg
mov
sbb
mov
outsl
fisubrl
push
add
out
rorl
dec
mov
sub
sar
add
mov
ljmp
popf
jg
in
push
in
xlat
hlt
mov
fiaddl
add
cs
in
enter
jge
xor
lret
adc
xor
inc
outsl
xchg
xchg
and
in
dec
jbe
pop
sub
sbb
aaa
or
cmp
call
xchg
cmp
mov
adc
scas
add
lret
test
es
sbb
jl
push
repz
xchg
mov
hlt
push
mov
test
mov
inc
dec
fwait
cmp
dec
cmpsb
test
mov
stos
call
ficoms
and
test
es
insb
aaa
mov
push
das
nop
test
sbb
pop
leave
adc
stc
outsl
test
mov
and
mov
and
xchg
xchg
cltd
and
push
sar
dec
push
dec
fnstsw
arpl
push
sahf
arpl
out
jmp
sub
movsl
mov
out
insb
xchg
stos
sub
cmpsl
cmpsb
fucom
les
mov
xor
and
je
cmp
sar
aad
in
out
neg
sbb
xor
jecxz
stos
aam
fst
mov
call
fwait
xor
outsl
dec
lcall
or
xlat
mov
pop
jecxz
add
out
stos
lea
and
mov
lret
repnz
test
xchg
jbe
sbb
rcrb
bound
or
mov
jo
divl
pop
inc
lea
aad
xchg
ret
and
push
syscall
cmp
push
loope
daa
push
imulb
lret
sub
push
out
push
mov
ljmp
mov
mov
and
push
mov
xchg
lret
jl
mov
lds
add
jo
pusha
icebp
dec
mov
insl
cmp
cmp
xor
push
pop
xorb
dec
mov
jecxz
mov
test
and
lret
es
int
roll
ficompl
jns
cwtl
jne
arpl
adc
test
add
jno
push
mov
lods
jecxz
addb
inc
xor
out
es
out
adc
jmp
repnz
daa
test
imul
push
jg
mov
fs
fcmove
icebp
mov
shlb
xor
sbb
cmp
mov
roll
sahf
insl
movsl
fbstp
in
dec
cmpsb
lock
fwait
out
xchg
stc
cmp
mov
mov
ret
pushf
inc
add
push
js
outsl
sub
cmp
aas
sbb
iret
xor
ss
push
mov
lcall
xor
dec
bound
push
jg
arpl
dec
scas
mov
jge
ja
push
pop
nop
into
aaa
test
push
dec
sub
jb
fnsave
sub
dec
lods
mov
pop
inc
mov
divl
testb
sbb
fisttpll
sbb
stos
mov
enter
adc
jmp
incb
movb
pop
lret
test
es
push
mov
mov
sti
push
inc
xor
xchg
jg
fs
pop
sbb
jno
or
mov
imul
pop
jle
mov
popf
adc
and
or
aam
popf
in
jl
shrb
cmpsb
xchg
pop
mov
inc
cmpl
pop
mov
test
push
pusha
xor
test
pop
loopne
cltd
push
lds
scas
leave
jg
sbb
pop
inc
and
lea
dec
sbb
rcll
push
popa
mov
addr16
dec
mov
mov
cld
in
push
in
ss
mov
out
mov
fisubs
shrl
pop
aas
sub
xor
push
push
ds
ret
sbb
ss
loope
cmp
jb
jl
mov
jmp
add
sub
pop
jle
push
daa
clc
gs
fcompl
dec
push
dec
add
int
adc
mov
jecxz
imul
js
icebp
sbb
mov
dec
hlt
insl
stc
sarb
lods
jne
mov
mov
push
fisubrs
fbstp
aam
clc
mov
and
pop
add
adc
fucom
movsl
push
imul
outsl
xor
adc
movsl
iret
sahf
aaa
sbb
pop
mov
mov
mov
jno
jns
inc
out
jg
xorb
xchg
mov
aaa
mov
adc
mov
jecxz
mov
daa
dec
cld
aad
sub
insl
test
adc
cmc
pop
fs
adc
inc
pop
or
lock
add
push
arpl
aam
jnp
add
adc
cli
push
sbb
loope
inc
or
gs
lret
mov
xchg
and
mov
and
add
adc
pop
sar
jl
or
adc
inc
dec
js
xor
pushf
pop
shr
sub
and
pop
pop
icebp
xchg
jb
xchg
dec
test
aas
lds
cmp
push
pop
sub
fcoml
pop
rolb
xchg
xlat
enter
jl
push
mov
or
inc
fists
lret
mov
xor
rcrl
sub
cld
xor
cld
cltd
adc
sbb
cmp
insl
sbb
or
outsl
aad
ficoms
std
sbb
dec
insl
cwtl
rorl
aam
stos
cmp
jmp
icebp
dec
inc
std
push
jae
std
inc
inc
int3
outsl
and
popf
jecxz
jns
and
subl
xor
fnstenv
jno
cmp
ljmp
mov
mov
and
call
add
inc
int
mov
cmp
movsb
and
stos
sub
jne
sbb
cltd
jns
jmp
in
and
push
nop
mov
jle
xor
int3
cs
mul
mov
sbb
aas
fs
cli
or
xchg
sub
in
xchg
negb
push
setnp
fwait
jg
lcall
cmp
mov
pop
or
cmp
cmpsl
fbld
jmp
ds
mov
test
xor
lret
sub
sti
adc
mov
mov
and
out
shlb
adc
fdivp
pop
fadd
imul
mov
ret
pop
lcall
andb
push
pop
lret
fchs
or
aam
sub
inc
xchg
sub
orb
lret
pop
data16
pop
in
stc
adc
wbinvd
imul
add
cmp
or
mov
stos
mov
lret
ljmp
mov
xchg
arpl
jns
xchg
xor
lods
dec
fimull
pushf
jge
push
jmp
call
xchg
adc
push
pop
lds
sub
add
jle
mov
add
arpl
mov
movsb
mov
rclb
xor
js
scas
cltd
cmp
add
dec
sub
push
jle
jne
imul
xor
pop
inc
push
popa
push
push
andl
out
dec
pusha
rcll
out
push
call
push
dec
int3
inc
sub
inc
lds
arpl
in
mov
inc
xor
ja
cmp
in
jne
jno
stos
in
rcll
lret
pushl
xor
daa
stos
xchg
and
lods
arpl
lcall
test
push
sbb
or
dec
mov
push
dec
aam
jmp
mov
mov
or
push
inc
test
mov
mov
mov
push
pop
mov
xchg
push
stc
and
adc
pavgb
cltd
pop
mov
rcll
nop
dec
sbb
cwtl
in
aaa
lret
adc
inc
lea
mov
mov
popf
xchg
into
inc
add
inc
sahf
jb
mov
and
push
aad
inc
adc
insb
pop
cmp
scas
imul
xchg
or
in
ret
mov
push
jae
in
push
mov
dec
xchg
jle
shr
mov
in
cmpl
inc
mov
xorl
out
sar
inc
cmc
inc
jle
aas
inc
cmp
xchg
repz
jp
ret
inc
inc
adc
mov
cmp
rol
jb
xchg
add
repz
xchg
inc
pop
mov
test
popf
fs
cli
inc
xchg
push
inc
inc
and
pop
sbb
cltd
fimuls
sbb
jno
lret
test
dec
sbb
ret
pusha
jl
or
adc
mov
punpcklbw
jnp
sbb
sub
push
in
aam
mov
orl
jle
in
enter
addl
or
in
test
jns
dec
out
in
fadds
ret
and
fmull
loope
mov
mov
push
aad
mov
mov
sahf
sbb
xor
cmpsl
jge
dec
pop
xlat
jecxz
insb
mov
ret
into
popa
adc
aad
bnd
test
xor
data16
imull
pop
out
adc
test
lahf
cmp
fcmovu
repz
aam
jb
jg
mov
in
fs
mov
xchg
xlat
aas
push
or
xor
push
sbb
fwait
sub
movsl
js
ret
addr16
pop
mov
aaa
stos
addr16
mov
aad
cmp
popf
fldt
jl
es
cmp
push
cmp
mov
xchg
mov
repnz
dec
stos
int3
enter
or
jno
aam
lret
adcb
shrl
clc
push
cmp
inc
leave
push
subb
lods
xchg
xlat
sahf
int
vrcpss
inc
aam
rorl
fbld
mov
jns
mov
xor
lret
dec
xor
and
and
mov
out
ljmp
jbe
popl
xchg
dec
daa
arpl
adc
xor
les
cmp
or
xchg
or
mov
pop
or
push
xor
cmc
pop
rclb
push
jmp
nop
inc
negl
in
icebp
das
mov
or
xchg
fsubl
mov
scas
les
repnz
cmp
insb
scas
outsb
pop
push
les
push
test
stos
sub
jmp
fwait
mov
fisubl
mov
iret
adc
push
inc
adc
mov
push
adcb
jae
data16
std
aad
mov
jge
dec
and
ss
adc
aad
imul
cmp
adc
sbb
sub
fidivrs
paddq
aaa
loopne
jo
ds
push
das
xor
cwtl
movsl
mov
adcl
fcompl
in
pusha
bswap
cmp
les
mov
fmull
push
js
add
push
cmp
cs
adc
lods
fdivrl
pop
jp
cli
loopne
jo
addr16
movsl
cmp
mov
lcall
aam
and
je
sbb
jns
and
loope
mov
adc
icebp
mov
jb
adc
mov
stos
pop
aas
pop
and
pop
test
sti
stos
outsl
sub
or
std
cmp
rorb
adc
push
loop
mov
mulb
lds
xlat
sti
in
xor
jl
in
aaa
cmp
lahf
xchg
sbb
mov
ret
rcrl
popa
dec
inc
cld
sub
mov
jnp
mov
sti
arpl
cwtl
fistps
jg
mov
aam
adc
dec
cmpsb
cmc
das
inc
imul
mov
push
loopne
mov
repz
inc
in
fwait
dec
xor
stos
sub
sub
fisubrl
dec
aam
test
ds
sub
mov
add
xchg
mov
je
xor
cmc
or
mov
cltd
movsl
in
lds
mov
push
or
sub
jge
fnsave
sbb
scas
mov
adc
inc
fs
mov
mov
jmp
push
xor
stos
sbb
dec
sbb
test
aaa
xchg
inc
jns
cmp
jne
lods
scas
rcrl
mov
push
into
pop
hlt
movsl
lahf
sbb
push
enter
pop
jns
push
lods
jae
ja
jnp
rorl
into
mov
push
mov
movb
pop
fdivl
loope
fldcw
popl
movsl
adc
push
lea
mov
sbb
lret
fsubrl
lret
repnz
cmp
or
jge
sbb
xor
adc
in
pop
outsb
jo
and
subps
push
cli
xlat
ss
sbb
add
jns
adc
call
bound
push
les
nop
leave
push
and
sub
test
xchg
mov
and
cmc
les
into
jl
repz
adc
xor
pop
les
cli
pop
jb
push
les
sbb
sub
mov
cmpsb
dec
add
cmp
jecxz
sbb
push
mov
inc
xchg
daa
pop
test
and
xlat
in
dec
subl
adc
in
sahf
movsb
clc
adc
add
jle
xchg
shld
pop
pop
mov
cmpsl
loope
inc
cmp
sub
lahf
daa
push
push
jnp
sub
jb
jge
addr16
das
jmp
mov
movsb
and
mov
andb
cs
jp
jbe
loope
xor
test
mov
stos
ret
outsl
movsb
push
dec
les
xor
push
hlt
decb
and
fimull
ja
xor
call
movsl
sub
icebp
jmp
popf
adc
push
decb
jp
aas
pop
and
fldcw
fldt
cmp
shr
mov
xor
out
int
data16
add
lcall
pop
fwait
lcall
pop
cmp
and
push
sub
enter
mov
adc
add
cmp
data16
dec
jl
enter
shrl
aam
lods
inc
push
lock
insl
adc
xchg
into
jo
adc
fbld
sub
aaa
and
pop
cmp
sub
and
loopne
mul
pop
mov
mov
xor
dec
mov
dec
sarl
xchg
clc
das
xchg
dec
cmc
orb
arpl
aam
gs
jge
dec
or
mov
enter
or
adc
inc
ficomps
cmp
add
cmpsb
imul
in
or
ljmp
sbb
xchg
push
pop
inc
lahf
and
pop
push
and
lock
mov
shlb
std
and
nop
sbb
and
outsb
cmpsl
push
adc
cmp
movsl
ja
sub
or
les
lcall
push
xchg
jo
sti
repnz
test
or
xchg
inc
fadd
out
fisubrs
cmp
decb
sub
fistps
jecxz
mov
adc
in
iret
into
repz
popf
fxch
xor
mov
leave
cmp
xchg
mov
and
xor
arpl
add
ffree
rcrb
jle
scas
sub
and
cli
clc
xor
mov
adc
cmpsl
adc
ret
enter
mov
aas
adc
lret
push
adc
and
or
pop
and
fldenv
out
in
aaa
test
inc
push
lcall
je
mov
fnstenv
fs
js
clc
in
lods
pusha
push
xchg
jl
arpl
sbb
cli
call
psrld
adc
sbb
mov
add
outsb
xchg
icebp
iret
push
fdivr
cmp
sbb
in
int
popa
insb
cmp
mov
je
rcrb
sub
data16
sti
add
xchg
icebp
ret
add
decl
pop
pop
lcall
mov
fwait
lret
es
xorl
outsl
mov
sarb
mov
pusha
pusha
and
loope
jp
pushf
jns
in
pop
out
pop
stc
inc
xchg
fnstcw
sub
mov
inc
fsubp
nop
xor
hlt
in
jge
repz
cli
xor
mov
test
jl
mov
data16
sbb
sub
roll
add
pop
clc
xchg
add
fcoms
pop
mov
xchg
inc
xor
sub
cs
cli
sahf
adc
mov
xchg
dec
call
ror
push
call
jmp
sub
xor
xor
aam
mov
shrb
xlat
push
lcall
shl
pop
inc
ret
cli
je,pn
lods
arpl
push
or
sub
outsl
add
mov
pop
icebp
andb
pop
xchg
sbb
cli
icebp
pop
sbb
adc
mov
mov
push
inc
leave
and
mov
lods
scas
mov
sub
add
adc
or
dec
mov
pop
cmp
leave
push
sub
ret
out
pop
das
cmp
or
pop
push
out
movsb
lret
sub
xchg
push
and
and
xchg
cmc
push
jg
inc
adc
mov
shr
in
stos
xor
mov
dec
ret
test
mov
in
pop
cmp
and
inc
pusha
dec
ljmp
call
punpckhdq
out
dec
adc
mov
scas
outsb
mov
mov
jle
je
mov
in
add
lret
dec
push
mov
push
pop
cltd
mov
stos
fldt
stc
in
and
inc
mov
ds
jo
in
sahf
lods
cmpsb
xchg
les
add
mov
mov
daa
adc
enter
mov
or
and
adc
outsb
test
shlb
jnp
enter
cli
pop
push
jbe
shrb
mov
sbbl
add
shll
out
xchg
shrl
mov
xor
cmp
dec
rorb
inc
mov
not
gs
jl
sub
shr
out
jmp
xchg
nop
jo
es
js
push
mov
mov
adcb
fdiv
pop
dec
xor
or
addb
mov
imul
sub
hlt
mov
push
push
or
into
sarb
sub
mov
popa
dec
loop
ja
mov
sbb
jp
xchg
add
ret
in
adc
std
int3
mov
mov
sub
fcoms
insl
mov
icebp
in
or
xchg
pop
and
lret
dec
enter
ljmp
sub
push
jl
lods
cli
xchg
mov
xor
xchg
daa
popl
sub
out
xchg
shrl
jmp
subb
mov
sbb
addr16
pushf
sbb
fs
xor
in
fiadds
addb
sub
mov
popf
sahf
xchg
ja
or
int3
mov
in
ret
xor
dec
into
lods
ds
push
dec
cmp
test
pop
push
pusha
scas
xlat
ret
xchg
pop
mov
jnp
orb
mov
lods
ja
mov
out
iret
xor
decl
shlb
xor
adc
sbb
enter
stos
xchg
or
sub
cmc
sbb
fwait
add
dec
sub
jl
mov
ss
jbe
pop
aam
aam
in
xchg
stos
int
shlb
sub
pop
mov
out
sbb
fildl
test
dec
jge
mov
push
add
test
aam
je,pn
lahf
fld1
mov
xchg
xorl
in
cmp
xchg
arpl
dec
mov
addb
fnstcw
sbb
inc
sahf
lea
mov
jp
std
mov
pop
fstps
jp
movsb
mov
adc
fldenv
arpl
sti
and
mov
xchg
cmp
push
into
xchg
sbb
lret
mov
adc
or
xchg
or
mov
xchg
pop
pop
stos
ljmp
repz
dec
outsb
ja
and
cmp
dec
lods
andl
xchg
pop
and
in
mov
cmp
stos
jp
xchg
pushf
mov
sbb
pop
mov
sub
sub
pop
lea
dec
mov
cs
push
mov
or
sbb
out
cli
jl
negb
push
sbb
loop
in
decl
mov
lcall
shl
add
cmp
mov
test
outsl
cmc
imul
sbb
sub
inc
dec
ja
pushf
mov
in
insl
mov
fsubr
inc
pop
jbe
push
cmp
clc
mov
jecxz
mov
in
cld
xchg
mov
sbb
cmpsb
and
cli
fsts
ss
xchg
daa
call
cs
rol
sarb
sub
iret
loopne
inc
icebp
xor
push
jb
cltd
mov
add
push
add
stc
setb
mov
test
xor
stos
mov
je
aas
shll
dec
std
xchg
rcrl
cmpsb
ret
fwait
mov
scas
enter
cmpsb
xchg
mov
in
sarb
pop
pushf
repz
jnp
pop
push
mov
xor
cwtl
ftst
test
inc
and
mov
add
push
lock
ds
int
xor
aaa
dec
hlt
cmp
lcall
in
mov
cmp
int3
mov
test
movb
cli
mov
inc
sti
jg
ds
movsb
fbstp
xor
decl
shl
pop
pusha
mov
enter
js
loopne
sahf
outsl
push
lds
pop
mov
test
mov
sub
adc
lcall
cmp
mov
loopne
cwtl
pop
jo
cmp
xor
lds
mov
mov
nop
xor
iret
pusha
icebp
les
xchg
out
push
jae
jmp
lods
cmp
xor
ljmp
out
mov
jl
outsb
mov
mov
das
aam
mov
push
or
jb
jno
lret
push
adc
fmuls
movsb
das
and
cmp
pusha
push
lret
xchg
push
add
lock
or
arpl
daa
sbb
stc
push
push
fdivrl
fcomps
mov
pop
insl
xchg
xchg
jge
jg
dec
ljmp
and
mov
repnz
mov
loop
rcl
repz
pop
mov
pop
adc
or
jbe
rcll
add
jp
push
insl
loop
xchg
xor
bnd
xor
mov
ret
push
push
fnstenv
mov
sbb
pusha
mov
inc
test
jl
mov
lahf
cmp
push
lcall
push
clc
adc
mov
dec
mov
mov
daa
and
js
pusha
push
push
pop
test
loop
andb
pusha
jbe
aam
dec
mov
jno
dec
adc
mov
popf
mov
cmp
ja
filds
xlat
scas
mov
inc
decb
mov
pop
add
and
popa
popl
jns
loope
sub
pop
aas
fmul
loope
int
sbb
push
sub
inc
lods
cmpsl
orb
insl
dec
dec
ss
mov
enter
das
mov
dec
cwtl
cmp
lock
lahf
or
out
sub
xchg
or
out
addr16
jmp
mov
movsb
popf
mov
xchg
mov
sub
inc
insl
ss
mov
pop
fstl
mov
daa
add
mov
sub
pop
or
mov
out
push
mov
outsl
addr16
rorb
sub
bound
test
in
fdivrl
dec
pusha
inc
inc
dec
shlb
ds
rcr
jl
xor
sbb
pop
mov
jle
clc
jns
adc
mov
fadds
in
mov
idiv
mov
orl
and
pop
in
out
faddl
lahf
stos
test
movsl
sub
loop
adc
sbb
sbb
inc
cld
lret
xchg
sub
imul
sbb
jle
inc
mov
xchg
mov
jnp
divb
test
pop
lds
xchg
ljmp
test
jmp
es
lods
mov
dec
loop
int3
xlat
dec
sbb
xor
add
pop
gs
and
dec
cmpsl
sbb
pop
pushf
mov
xchg
jae
sub
and
adc
mov
xchg
mov
mov
add
push
mov
mov
aam
fcmovbe
mov
xor
adc
test
xor
xchg
pop
and
push
lods
push
inc
loope
in
repz
jb
fdivs
sbb
fdivrl
movsl
mov
sub
inc
sub
sbb
xor
call
fsubrl
icebp
xchg
outsl
or
iret
call
cmpsl
es
outsb
lods
sbb
mov
dec
roll
mov
fidivl
loop
repnz
decl
jne
dec
and
add
hlt
hlt
cmpsb
rcr
pop
dec
adc
test
pushf
jecxz
push
mov
cmp
jae
xchg
cli
fwait
insb
fsubr
xor
push
or
inc
push
arpl
mov
pop
xchg
leave
jmp
xorb
jno
mov
mov
insl
mov
repz
shlb
pop
jo
int3
out
or
lea
movsb
nop
fptan
mov
inc
divb
data16
cld
jg
adc
inc
ss
test
mov
imul
and
or
ljmp
lods
sub
in
mov
sbb
shr
pop
jae
std
pop
int
mov
push
push
and
push
pop
pop
or
leave
in
insb
xor
push
fidivl
cmp
xchg
dec
push
jle
sahf
push
sub
in
xchg
jmp
aas
in
xor
pop
mov
divb
xchg
movb
das
mov
inc
popa
ja
mov
ljmp
pusha
mov
in
adc
mov
dec
pop
fisttpll
in
fs
mov
cmp
xchg
cs
fmull
cmpsb
out
es
cmpsb
dec
jmp
fcoml
adc
idivb
ljmp
jecxz
mov
leave
sbb
lret
addb
pop
out
xor
push
mov
push
xor
xor
repz
mov
repz
fbld
nop
inc
in
xchg
les
add
xor
mov
in
push
int3
mov
sub
nop
jle
test
jecxz
sub
lret
push
cmpsl
adc
outsl
and
aaa
movsb
arpl
dec
cmp
xlat
jne
cwtl
insl
std
mov
repz
dec
ficompl
push
push
sbb
test
jnp
mov
movsb
push
mov
out
pop
stos
call
hlt
dec
js
cmp
push
rcrl
add
xchg
aam
push
imul
fwait
pushf
daa
jg
mov
dec
dec
jne
js
mov
rcrl
data16
mov
cmp
idivl
push
mov
fisttpl
mov
inc
push
rcrl
lea
scas
add
ficoms
andb
cmp
xchg
addl
xchg
cmp
jp
or
fisubrs
xorl
sub
push
shll
lock
icebp
inc
dec
insb
cmpsb
dec
adc
inc
orb
push
mov
adc
int
mov
call
dec
add
push
jmp
xor
movsb
lahf
adc
in
mov
stos
and
add
out
add
add
mov
stc
fcomps
sub
xor
imul
cmp
mov
ds
in
mov
cmpsb
in
in
lcall
jle
adc
add
dec
xor
push
pop
xorb
std
mov
call
dec
sbb
mov
shr
test
fldl
enter
lcall
pop
inc
sti
pop
add
inc
or
fists
jb
pop
xor
push
shlb
or
push
push
push
xor
push
ss
adc
fmuls
mov
icebp
adc
cli
shll
add
out
pop
cmpsl
dec
pop
scas
jne
repnz
dec
jge
xor
lret
ja
jne
jg
cmpsl
lahf
mov
xorl
xchg
inc
adc
outsb
inc
inc
sahf
test
jb
pop
jp
xor
add
xor
popa
push
subl
mov
push
fsubl
add
dec
xor
jp
flds
stos
jp
jns
daa
add
or
push
aaa
enter
in
cmc
mov
sti
dec
gs
xchg
gs
pop
mov
orl
lret
insl
iret
or
rorb
stos
nop
jmp
adc
mov
in
sub
xor
adc
jl
cmpsl
lock
int3
dec
dec
test
inc
dec
idivb
sub
and
pop
fildl
or
inc
mov
lahf
loope
jns
and
xchg
icebp
fcomps
sbb
pop
jle
jae
xor
xor
xor
je
in
sti
jle
inc
fcmovnbe
pop
mov
xchg
adc
or
ret
jmp
pusha
inc
out
mov
dec
cli
iret
xchg
push
out
dec
mov
mov
lds
cltd
scas
jle
std
ret
inc
das
jmp
adc
repnz
cli
or
or
addr16
jecxz
fistpll
cmp
push
add
jns
ret
scas
fs
cli
addr16
adc
pusha
pusha
mov
fdivr
fistpl
jmp
mov
jnp
mov
aad
shl
loope
push
jnp
test
dec
stos
inc
in
xor
xchg
jmp
pusha
fsubrl
outsb
add
repnz
xchg
and
in
push
mov
icebp
xlat
add
dec
cli
clc
pop
adc
xor
sbb
outsl
xor
jl
adc
pop
adcl
lcall
movsb
cmpsl
addr16
mov
mov
xor
lea
cmpsl
mov
add
mov
pushf
iret
std
je
rcl
mov
sub
addb
add
dec
insl
stc
push
xlat
sbb
sbb
outsl
jo
shl
leave
std
xor
shrl
cli
mov
jne
mov
push
mov
insb
mov
jne
jbe
mov
or
cmp
mov
or
jno
insb
cli
rolw
mov
dec
ret
imul
jmp
push
ficoml
inc
jb
cld
jecxz
dec
mov
pusha
jne
mov
sub
loope
out
sbb
in
pop
push
setnp
faddl
push
add
movsl
add
lods
pushf
sahf
mov
mov
mov
push
shlb
mov
dec
inc
push
in
xor
adc
pop
cmp
push
add
mov
ret
je
mov
dec
sbb
sbb
test
sub
mov
push
add
inc
and
add
pop
sbb
jbe
mov
jnp
push
adcl
cli
sahf
inc
xor
mov
jl
repnz
xor
dec
loope
aaa
jmp
pop
adc
movsb
push
aad
and
sti
or
sbb
push
dec
enter
ret
mov
stos
int
mov
mov
adc
inc
mov
in
xchg
dec
test
gs
dec
std
push
sbb
mov
lret
mov
xor
push
cmpsb
enter
xor
sub
mov
test
inc
push
jno
loopne
jnp
push
clc
test
dec
lods
sub
pop
lcall
mov
test
xor
cmp
imul
mov
in
mov
js
pop
imul
sbb
mov
movsl
cli
leave
fs
mov
dec
stos
notb
gs
cli
data16
insl
in
jbe
ret
neg
dec
mov
enter
push
into
pop
pop
aam
sbb
jle
pushf
jnp
mov
lret
mov
mov
das
insl
nop
adc
push
stos
imul
mov
pop
cs
pop
aas
test
lea
mov
shlb
dec
rorb
imul
mov
mov
cltd
test
es
or
or
mov
mov
in
and
daa
cmp
dec
addr16
mov
fbstp
jns
pop
xchg
ret
clc
xchg
scas
ficoms
mov
add
or
jae
insb
daa
sub
in
das
push
loope
ret
push
lret
jg
test
in
mov
cmp
das
xchg
add
jae
push
ss
ret
enter
cmpl
and
mov
cli
sub
inc
bound
std
jo
lods
cmpl
int
movsb
jae
pop
pop
xlat
cmp
sub
test
cmpsb
popf
push
dec
dec
fisubrs
sbb
add
xchg
or
stos
fcoml
leave
push
pop
pop
fidivs
jmp
sub
sbb
loop
outsb
dec
andb
lods
pop
sub
mov
jle
lock
adc
fwait
in
adc
leave
inc
xadd
dec
icebp
mov
js
and
push
pop
stc
sub
and
shrb
xchg
insb
xchg
cltd
jb
pop
sarl
jmp
lea
push
movsl
jl
lds
cli
dec
xor
pop
xchg
inc
mov
dec
jb
int3
jne
add
sbb
pop
test
adc
xor
fcomp
aad
and
dec
insl
ror
daa
mov
push
inc
pavgb
in
xchg
es
pusha
aam
push
or
lds
ds
repz
sbb
cltd
cmpsl
xor
and
stc
cli
pop
ret
dec
cmpsb
xor
iret
mov
int
imul
mov
xchg
ret
push
popf
fldl
xchg
mov
scas
pop
mov
fsubl
cs
xchg
outsb
filds
notb
push
pop
push
add
adc
icebp
hlt
shlb
into
jo
gs
cmp
cmp
push
or
jg
sub
imul
sub
in
fcmovnu
insb
pop
imul
js
lcall
sbb
mov
in
jp
data16
testb
and
jg
add
dec
mov
das
sbbl
repnz
adc
add
jl
push
in
jle
repnz
mov
adc
jb
cmp
mov
xor
mov
mov
sub
imul
pop
popf
push
pop
and
outsb
cmp
stc
jle
push
popf
add
fwait
inc
std
jle
test
cwtl
inc
mov
adc
sbb
mov
xor
inc
sbb
mov
or
mov
mov
fidivrs
aaa
mov
jo
mov
es
sarl
ds
sbb
mov
mov
mov
dec
xor
test
pop
push
push
or
mov
mov
int
pop
cmp
nop
loope
jne
xchg
cltd
fcoms
leave
pushf
dec
mov
fldt
shll
push
aaa
es
and
push
jmp
mov
or
out
testl
and
push
add
sbb
aas
cld
xor
in
pop
fucom
sub
enter
push
ds
inc
add
and
ja
adc
fnsave
sub
fisubrs
shl
out
push
xchg
fcoml
aaa
pusha
xchg
scas
mov
xlat
mov
xor
and
inc
xor
xchg
pop
pusha
xlat
test
movsb
jl
mov
loop
out
int
bound
mov
addr16
aas
bound
pop
in
filds
fdivp
cmpsb
call
sahf
pop
lcall
cmp
mov
addr16
addl
adc
daa
lods
and
sbb
dec
adc
mov
mov
push
ret
daa
test
or
mov
mov
rclb
fstpt
jmp
xlat
sbb
movsb
dec
sbb
das
xorb
push
das
pop
mov
cld
mov
test
sbb
addr16
loope
outsl
and
xchg
push
sbb
shll
mov
cmp
sub
jns
and
xlat
ret
adc
jmp
sub
out
pushf
clc
or
ljmp
xor
rcll
lods
sti
iret
lar
jmp
ljmp
push
outsl
xlat
mov
or
jo
mov
inc
jb
pop
mov
mov
stos
outsb
cwtl
cld
jbe
cld
ret
mov
loop
xchg
push
jge
xor
jmp
scas
adc
mov
sbb
mov
aaa
test
jmp
xor
ret
add
add
mov
mov
and
lret
sub
insl
call
pusha
mov
lahf
lods
cld
inc
cs
data16
cmp
nop
push
push
lcall
loope
pop
inc
scas
popa
adc
nop
and
fs
sbb
outsb
jmp
rcrb
addr16
lock
sbb
push
jle
jle
test
mov
push
dec
xchg
int3
imul
rcrl
es
aam
sti
push
jp
repnz
in
dec
push
pop
sbb
movsb
or
push
dec
icebp
and
mov
jo
inc
int
enter
jge
jge
jb
mov
cs
fimull
jb
mov
ror
cmpsl
and
add
lods
or
lock
xor
pop
add
pusha
cmp
outsb
cmpsl
dec
inc
jne
pop
add
sub
iret
adc
jmp
mov
adc
push
push
mov
jl
or
dec
imul
jle
scas
pusha
ds
lret
sub
inc
xchg
sub
jnp
ds
lahf
add
movsl
pop
cmp
out
pop
daa
pop
jle
dec
add
gs
lea
cmp
cmpsl
popa
sub
out
jno
add
pushf
dec
sbb
cli
xchg
fs
and
sbb
inc
rorl
test
sub
data16
pop
cli
and
cmp
icebp
movsl
test
lock
jns
scas
sub
out
stos
test
aas
xchg
xchg
shlb
add
jno
jl
cmp
das
das
mov
gs
sub
lcall
sbb
je
jmp
jle
mov
xor
jbe
test
int
xchg
lcall
jbe
xchg
mov
pushf
and
out
xchg
sub
pop
dec
cmpsb
mov
xchg
aam
leave
out
mov
push
mov
js
and
xor
mulb
icebp
loope
subb
cmp
shrb
lea
mov
imul
cmpsl
add
daa
insl
in
xchg
cmpb
movsb
sar
mulb
or
lret
xor
js
or
insl
dec
jo
lret
mov
sbb
sbb
add
cmp
cmp
dec
fisubs
mov
pop
or
jl
imul
and
daa
xchg
jb
je
aas
mov
add
dec
or
pop
hlt
movsb
mov
mov
adc
fsubl
mov
inc
cmp
adc
sub
addr16
and
pop
in
daa
xchg
lcall
push
inc
mov
xor
mov
inc
mov
mov
mov
xchg
mov
sub
scas
aam
or
push
mul
cli
clc
mov
jnp
imulb
lods
pop
call
adc
adc
sbb
pop
enter
inc
fidivrl
int3
xchg
cld
in
stos
xchg
pop
or
mov
in
shlb
push
push
dec
in
push
adcl
mov
loop
or
add
gs
sahf
cltd
movsb
imul
incl
push
sub
push
jae
loopne
in
in
mov
clc
ret
frstor
stc
push
lods
sbb
mov
js
movsb
sub
data16
sub
inc
jle
nop
pop
insb
and
daa
fsubr
sbb
test
mov
pxor
pop
cld
test
ds
int
cld
aas
addr16
inc
pop
push
xor
pop
add
pop
and
nop
negl
sti
call
xchg
sbb
mov
dec
xchg
in
dec
rcrb
sbb
movsl
fisubs
sbb
cmp
xor
push
jg
in
in
cmp
inc
xor
push
and
adc
or
sub
shrl
lods
xor
gs
popl
cmp
ds
cmp
int
sarl
out
adc
testb
ds
push
mov
and
js
rcll
aad
push
loope
xchg
cltd
lret
mov
or
and
ja
int3
jne
jg
xor
inc
push
lea
mov
in
out
pop
aam
cmp
imul
lods
xor
mov
sbb
lea
js
cmpsl
int3
int
mov
push
xor
outsb
inc
lret
cmp
push
or
das
pop
xchg
repnz
push
cli
mov
mov
jl
out
pop
aad
fsubs
ss
mov
int3
xchg
ret
cmp
lahf
dec
fwait
pop
fidivrs
pop
mov
sub
int3
dec
jp
jmp
inc
and
aam
xchg
test
cmp
je
das
mov
mov
movsl
lret
inc
popf
enter
pop
add
push
popf
dec
mov
push
adc
iret
xor
xchg
testl
loopne
xorb
imul
push
fwait
loope
cmpsb
push
pop
cltd
jmp
pusha
test
movsb
fwait
pop
push
fs
imul
pushf
pop
push
push
jl
mov
sub
ds
xchg
cltd
fildll
xchg
xchg
sbb
add
adc
fists
aaa
aam
pop
mov
jp
ds
xor
pop
mul
jo
pop
fdivl
push
pop
repz
test
or
scas
je
xchg
jecxz
push
or
test
sub
xchg
xchg
lock
cmc
clc
push
rcll
jb
aas
jecxz
adc
and
or
jno
gs
xchg
out
std
jo
stos
stos
mov
pop
jo
cld
rol
inc
ret
fisttps
mov
add
out
xchg
xchg
jg
xor
out
int3
adc
dec
xor
and
pop
pushf
cmp
or
fs
xchg
jns
jae
cli
pop
ret
das
nop
mov
inc
xchg
outsl
fwait
xor
mov
in
sub
scas
and
mov
cwtl
adc
movsl
cmpsb
jae
notl
mov
jno
divl
cwtl
in
sbb
pop
lods
adc
je
js
or
lea
pop
cmp
xor
mov
jg
or
mov
incl
adc
ljmp
out
and
and
add
dec
fdivl
in
aam
movsb
dec
into
add
xchg
mov
ja
sub
lds
xchg
imulb
sbb
push
lret
fbld
cmpsl
inc
loope
fsub
in
xorb
cvtps2pi
adc
sbb
xor
mov
sbb
lock
rorl
mov
inc
sub
mov
dec
sti
push
ss
push
daa
cmp
jns
mul
inc
gs
fiaddl
nop
jae
sub
sub
xor
lret
pop
rclb
xor
bound
mov
mov
push
inc
gs
aam
sbb
clc
mov
cmp
xlat
lock
stc
push
test
sarl
repnz
push
lock
xchg
xor
pop
and
cmp
push
push
xchg
xchg
inc
inc
mov
mov
add
or
stos
xchg
sub
mov
adc
movsb
inc
inc
mov
lea
sti
sbb
fstpt
pop
loope
test
inc
es
rcll
jmp
jle
mov
in
push
jbe
push
push
add
popl
mov
test
and
inc
mov
cmp
mov
mov
mov
outsl
shrl
pop
test
out
ljmp
xchg
ds
dec
or
arpl
test
jo
xlat
dec
test
jns
add
xchg
les
xor
jmp
hlt
testl
mov
rcr
dec
pop
movsl
or
jle
lods
cmp
mov
cmp
cwtl
sbb
mov
push
lock
jno
daa
scas
push
js
adc
add
adc
lret
je
pop
pop
adc
mov
mov
lahf
sbb
jge
jae
lcall
push
sti
lock
mov
pop
sub
cmpsb
mov
mov
xchg
mov
inc
sbb
cwtl
aam
sub
roll
andl
int3
pop
push
fcoml
or
test
mov
loope
mov
gs
bound
mov
adc
sub
test
in
push
push
push
mov
inc
add
in
out
pusha
jmp
mov
jne
jnp
cmp
xchg
sahf
jns
sbb
push
ficoms
test
decb
mov
mov
jle
dec
jle
sbb
scas
pop
dec
loop
sub
fisttpll
push
jnp
les
movsl
mov
jno
pop
push
test
lret
sbb
test
xchg
loop
sub
mov
insl
mov
jmp
cmpsl
scas
fucomip
dec
pusha
inc
pandn
insl
enter
outsl
pop
sbb
cwtl
push
inc
mov
repnz
cmp
inc
ficoms
inc
movb
fldl
xlat
dec
add
or
and
lock
ja,pt
call
mov
dec
mov
mov
jb
test
insl
test
std
loope
popf
arpl
dec
jno
and
add
lock
gs
adc
test
andb
jle
and
mov
je
adc
mov
enter
or
jge
gs
repnz
out
mov
jg
push
hlt
fdivs
ja
mov
jg
nop
dec
push
or
mov
sub
mov
in
aam
test
lds
ss
inc
aad
shrb
call
jg
out
sbb
adc
adc
fsts
push
pop
mov
or
aaa
stos
pop
xchg
sub
mov
xchg
pop
jno
pop
in
pusha
pushf
dec
lret
and
into
xchg
iret
jecxz
jnp
dec
mov
pop
dec
out
fs
popa
loopne
xchg
xchg
jno
cmc
adc
mov
dec
adc
nop
pop
or
cmpsb
nop
adc
inc
fs
cmp
stos
dec
dec
adc
sub
sbb
jbe
out
fimull
inc
popl
fcmovnu
add
and
fnstenv
mov
mov
out
dec
stos
cli
shrl
pop
movsb
stos
jb
subl
cmc
adc
xor
sahf
outsl
cmp
mov
mov
bound
gs
push
les
ss
lret
imul
insb
test
jnp
xchg
dec
cwtl
cmp
push
adc
sarb
pop
lock
inc
and
or
and
or
cmpsl
sub
out
push
and
idiv
mov
sbbl
inc
fisubrs
repz
cmp
fldl
push
lods
push
imul
and
cmp
or
sti
mov
sub
xchg
adc
sub
mov
xchg
fwait
repz
cmpsl
xchg
add
and
dec
orb
icebp
push
adcl
test
cmc
pop
or
push
cwtl
jmp
add
xlat
imul
add
scas
mov
int3
sbb
push
fimull
scas
pop
imul
call
push
xchg
push
pause
lret
sub
testl
arpl
or
lods
cmp
repz
ss
ss
in
xchg
std
dec
sbbl
cmp
ret
ss
shrb
push
aaa
xor
sti
sbb
aas
clc
mov
mov
or
sub
pop
inc
pop
cmp
cmp
scas
mov
push
mov
repnz
xchg
sbb
xor
fadd
mov
test
xor
adc
cld
pop
pop
push
and
cmc
sub
xchg
push
jle
mul
imul
cmp
cmpsb
cmp
inc
inc
insl
mov
add
jae
add
jns
pop
dec
add
hlt
hlt
popf
push
mov
mov
lahf
dec
testb
ljmp
jb
xchg
call
imul
dec
insl
mov
lcall
push
in
xor
inc
mov
dec
jnp
xlat
in
cmpsl
push
scas
fs
pop
js
cmpsl
repnz
mov
inc
sub
fnsave
jo
lea
mov
inc
ljmp
add
fcoms
mov
jbe
fsts
or
and
ret
and
test
lock
lds
orl
add
adc
or
ficompl
stos
frstor
lret
ret
or
cmovno
cmc
loope
mov
jns
in
shrb
mov
subl
stos
insl
mov
mov
hlt
xor
and
push
into
push
jne
fdivl
or
or
sbb
cmp
mov
pop
lods
test
pop
cli
jno
dec
cmp
xor
data16
rolb
add
push
mov
or
stc
xchg
push
lea
jnp
cld
sub
les
je
iret
add
xchg
inc
and
xor
std
cs
addr16
stos
add
mov
pop
xchg
in
stc
hlt
int
cmpl
lods
sbb
out
or
mov
mov
xchg
sub
popf
mov
das
push
sbb
pop
mov
cmc
jmp
sub
test
or
cmpsl
movsl
in
mov
aam
jno
and
jmp
ficompl
cmpl
inc
lds
push
add
pop
push
es
jecxz
jnp
movsb
ret
movsl
pop
scas
rcrb
invd
fcompl
inc
and
loopne
out
int3
es
pop
fwait
xchg
dec
adc
cmc
dec
sbb
lods
pop
mov
scas
mov
stos
mov
sub
xchg
sbb
pusha
sub
push
push
test
cmp
mov
xchg
bound
add
fcomip
scas
les
jb
mov
and
in
cmpl
das
call
iret
inc
mov
push
jmp
jmp
mov
add
andb
and
sahf
xor
cld
xor
gs
and
mov
lods
cli
pop
xchg
cld
ret
or
imul
or
xchg
cmpsl
or
leave
jnp
mov
aam
mov
mov
cmc
fwait
cs
jl
in
test
daa
sub
xchg
mov
fstps
dec
dec
hlt
xor
dec
les
push
iret
mov
mov
or
fildl
cmpsb
stos
pop
sbb
and
sub
adc
mov
inc
fcomi
xchg
push
mov
dec
mov
repnz
cmp
cmp
lock
jmp
dec
push
imul
jge
push
imull
repz
cli
mov
test
fstl
push
dec
mov
mov
jne
in
dec
ficoml
movsl
inc
lret
mov
mov
mov
enter
mov
adc
mov
push
addr16
stos
mov
pop
leave
rorl
rorb
shll
or
call
or
xchg
and
divb
test
pop
fimuls
inc
sbb
cmpsl
xor
add
movsb
inc
jb
nop
xchg
pop
repnz
add
orb
xchg
lds
cmp
es
cwtl
pop
xor
and
fldenv
icebp
out
ss
jo
push
dec
out
std
mov
xchg
imul
push
inc
clc
pusha
jmp
das
mov
pop
aam
das
idivl
cli
sbb
jp
loope
xchg
daa
and
into
ja
jg
push
mov
dec
cld
cld
sbb
push
mov
inc
vmovsldup
jo
sub
inc
mov
mov
subl
roll
cmp
lret
mov
sub
jge
repnz
dec
xchg
push
ret
pop
fmuls
js
loope
insb
mov
xchg
pop
push
addl
inc
xor
stc
jae
mov
ret
int
cmc
out
fadds
inc
jne
mov
push
jo
cmp
xchg
fxtract
pop
ret
pop
jecxz
in
loope
subps
jb
pop
push
cmp
add
pop
add
cmpsb
enter
or
fimuls
cmp
shlb
xor
rcrl
inc
jge
xchg
in
pusha
cmpb
imul
and
inc
pop
ss
push
cld
cmp
cmp
sbb
mov
cmc
sub
js
push
icebp
mov
pop
adc
pushf
xchg
adc
jne
sbb
pop
or
mov
test
mov
and
sbb
pop
std
dec
push
repz
mov
pop
push
out
mov
dec
scas
mov
ljmp
pop
xchg
mov
lret
clc
test
into
shlb
pop
loope
push
inc
jne
test
dec
nop
imul
mov
push
mov
in
cmp
mov
into
orl
inc
sahf
adc
inc
lock
js
xchg
push
push
popl
js
call
xchg
nop
and
push
in
push
cmp
add
mov
sbb
daa
push
pop
and
repz
call
xrelease
test
fcmovnb
xor
add
lods
cmp
dec
add
fldln2
ss
xor
test
nop
mov
outsb
cmc
arpl
mov
lds
mov
mov
add
push
inc
je
jns
pushf
mov
sub
jae
int3
push
jbe
cwtl
out
inc
insl
push
in
xchg
dec
sub
lret
mov
dec
mov
push
sbb
add
xchg
mov
hlt
jmp
cmovne
int
sub
andl
xor
je
pop
hlt
jge
xchg
sbb
or
inc
jae
add
cmp
or
mov
leave
leave
cmp
movsb
adc
jmp
icebp
sahf
notl
push
xchg
es
pusha
fdivrl
xlat
cs
or
and
leave
push
jle
mov
mov
sar
mov
cmp
xchg
mov
je
fdivrs
je
rorb
fnsave
clc
inc
sub
jle
and
imul
add
lock
add
and
dec
pop
imul
into
aad
xor
jp
scas
inc
ret
mov
sub
data16
xor
jmp
and
pop
push
shll
jmp
std
add
cltd
dec
sbbb
adc
outsl
clc
sbb
mov
push
adc
call
dec
sarl
and
pop
sub
xor
dec
cs
jmp
lret
sti
jns
sarl
lds
jg
mov
inc
int
mov
outsl
ss
pop
xchg
fcompl
and
shr
mov
cli
aaa
gs
fcompl
mov
xchg
xchg
jl
loopne
inc
xchg
addl
add
mov
pop
add
mov
out
outsl
in
mov
mov
cwtl
inc
xchg
lods
push
repz
out
addb
in
push
mov
stos
mov
mov
scas
testl
cld
pop
dec
sub
lret
fsts
and
call
push
jge
mov
aaa
cmpsl
ds
pop
sbbl
adc
dec
daa
test
inc
fidivl
dec
pop
cmp
mov
ret
inc
sbb
nop
outsl
mulb
add
loope
lret
pushf
fbstp
dec
push
sbb
test
aas
push
fsubrl
inc
jecxz
mov
fwait
or
es
xchg
and
fisubrs
movl
cmpsl
inc
xor
lret
fs
xor
xor
dec
adc
std
loop
gs
popf
jle
push
sbb
adc
lds
into
adc
daa
pop
sahf
dec
cwtl
mov
in
mov
lock
fstl
cmp
ss
lcall
mov
pusha
stc
jne
or
mov
inc
mov
mov
mov
cmp
shl
int
pop
pop
push
clc
xor
or
movlps
mov
mov
xchg
test
adc
xor
lock
add
leave
stos
mov
jno
add
lcall
mov
jl
fldt
cmp
out
not
mov
or
lods
adc
andl
stc
mov
clc
mov
fstps
inc
xchg
shrl
popa
lods
mulb
in
pusha
jbe
push
mov
cmpsl
mov
dec
cmp
push
test
pop
in
jo
sahf
pop
mov
sti
cltd
arpl
jmp
dec
roll
insl
icebp
or
inc
sti
fcoml
mov
leavew
call
out
or
jp
je
les
xchg
es
pushl
adc
repz
test
es
pop
add
movsb
hlt
cmp
cmpsl
lock
iret
arpl
xchg
in
or
cmpb
xchg
sbbb
fdivs
mov
mov
pop
xorl
movsb
add
lret
mov
es
jno
xor
loop
add
in
push
sti
cli
bound
mov
ljmp
fisttps
sbb
ret
mov
imul
cmp
or
bnd
sarb
ret
je
inc
and
mov
fisubs
inc
jg
jnp
mov
lret
and
fwait
xchg
push
mov
scas
mov
jnp
push
std
insl
add
mov
ljmp
or
mov
mov
and
dec
into
clc
sbb
and
xchg
add
sub
and
arpl
fists
xchg
bound
fnstcw
test
daa
test
and
inc
pop
mov
or
and
pop
lods
xchg
das
popf
test
stos
subl
aad
ret
and
mov
inc
mov
test
jnp
fisubl
das
and
lds
addr16
inc
pop
insl
mov
xor
adc
jno
hlt
test
je
fisubrs
jae
mov
jg
cmp
into
sub
mov
xchg
sub
ss
dec
xor
push
test
mov
fucomi
popf
mov
xchg
or
lea
mov
scas
clc
aam
in
andb
xor
cmpb
adc
data16
or
stos
push
int3
dec
jle
adc
and
repz
fsts
test
or
stc
dec
stos
xchg
in
int3
dec
or
push
lods
or
in
cmp
and
push
xchg
cmovb
cld
aam
xchg
xor
out
test
pop
lds
dec
inc
rcr
in
mov
add
push
rclb
adc
jle
ret
and
inc
push
popa
jno
mov
sbb
xor
dec
mov
and
and
mov
aaa
and
xchg
cmp
jg
mov
pop
jns
pusha
ss
cwtl
test
push
jl
cmp
cmp
pop
sub
lds
cmp
adc
xorb
mov
add
jl
fcompl
xchg
mov
sbb
dec
call
hlt
inc
mov
mov
divl
ljmp
stos
lods
popa
cmp
sbb
loope
ss
test
mov
fildl
push
mov
add
add
mov
mov
outsb
push
ret
pop
mov
push
adc
jecxz
inc
daa
enter
add
sbb
ret
fcom
xchg
xor
icebp
arpl
lret
sub
mov
xlat
inc
inc
es
movsl
rdpmc
inc
imul
xor
or
mov
push
je
xor
shl
push
subb
stc
in
pop
xorb
mov
lods
pop
loop
mov
insl
gs
xor
mov
jge
imul
das
push
in
cs
mov
push
pop
add
pop
std
imul
aam
xor
inc
gs
clc
stc
inc
das
sbb
shr
lock
xchg
cltd
mov
xchg
push
out
and
ret
jecxz
sbb
lcall
add
out
adc
add
xchg
xchg
mov
jmp
jle
cmpsb
push
and
push
jns
sbb
incl
inc
mov
in
flds
in
movsl
sbb
sbbl
in
in
jmp
jbe
lock
outsl
cs
inc
xorl
fadd
jnp
pop
pop
std
add
inc
jmp
dec
jb
out
adc
pop
shl
idivb
jnp
test
cmc
ja
fidivl
fisubrs
cmp
shlb
jle
pop
xchg
loop
in
xor
shufps
inc
sti
sahf
and
scas
or
iret
and
cld
cs
jbe
addr16
sub
adc
ret
xchg
fs
iret
subb
sbb
out
push
xchg
pop
scas
or
and
aas
and
adc
dec
mov
insb
mov
inc
pop
cmp
sbb
mov
adc
test
push
xlat
add
adc
lret
sub
cld
mov
repz
mov
xor
xchg
cltd
pop
outsl
xchg
scas
in
or
xchg
xchg
xchg
adc
xchg
and
cmp
jl
add
ret
cs
sub
xchg
jne
loope
dec
popa
jo
pop
xchg
stos
stc
adc
popf
push
pushf
incb
scas
adc
mov
mov
add
sbb
cld
jne
lods
mov
fcomp
inc
add
out
inc
sub
pusha
dec
jle
sahf
or
add
icebp
mov
mov
jge
imul
mov
call
sbb
pop
mov
in
shrb
or
sbb
mov
sub
cmpb
and
cmp
sbb
pop
xlat
adc
insl
push
pusha
js
sbb
and
sbb
jae
stc
push
push
inc
or
sub
adc
iret
pop
mov
inc
pop
icebp
mov
xchg
bound
enter
jnp
imul
mov
cmp
fldt
dec
adc
mov
roll
sbb
scas
xlat
inc
pusha
arpl
cmp
mov
or
inc
imul
adc
jmp
ret
pop
xor
lahf
fsubr
jecxz
lcall
mov
je
mov
hlt
inc
and
mov
shlb
int
les
jmp
xchg
jp
and
cs
mov
pop
out
mov
xor
sub
out
cmp
pop
shrb
jl
xchg
lret
pop
repnz
shlb
loop
fmulp
mov
add
test
mov
fsubl
out
dec
loope
xchg
pushf
fsubl
rolb
adc
xchg
dec
shl
fidivl
notb
nop
mov
icebp
dec
sti
adc
cmp
dec
add
or
clc
in
idiv
push
sarl
ljmp
or
in
rep
cmp
mov
add
xchg
cwtl
push
mov
jg
jg
cli
xchg
sub
cmp
inc
test
add
cmpsl
fldl
cmp
xchg
xchg
adc
movsb
or
fnstsw
pop
push
rorb
cltd
insb
out
push
je
movsb
pop
xor
jmp
mov
aad
push
lods
add
or
push
or
mov
push
jb
mov
add
inc
and
clc
or
or
inc
mov
lret
dec
jge
pop
ror
dec
shl
into
dec
cmovge
ret
mov
in
loop
mov
mov
xchg
in
icebp
in
or
sub
andl
push
mov
mov
pop
xor
data16
and
addr16
mov
adc
fs
aam
xor
and
sub
sub
adc
inc
rcr
call
in
push
sub
mov
testb
bound
in
fucomp
sbb
das
sbb
sbb
stc
or
fwait
xchg
mov
fdivr
sbb
jnp
mov
or
icebp
and
hlt
dec
fadd
jg
in
test
xchg
or
int3
jns
lods
ja
iret
in
into
in
mov
lret
add
or
dec
lea
popf
mov
into
movsb
jecxz
adc
mov
popf
stc
jb
fiadds
cmp
out
mov
push
nop
fdiv
insl
xor
into
cmp
into
pop
in
rol
mov
xchg
stos
mov
pop
pop
jno
cmpsb
and
loop
addr16
sub
cwtl
mov
es
mov
in
push
ss
fsts
xchg
jmp
std
push
and
push
jns
dec
movsl
inc
rep
stos
dec
jb
das
int3
sahf
dec
xchg
mov
rol
add
cwtl
imul
cwtl
cmp
mov
push
adcl
mov
add
add
sub
and
sahf
out
hlt
xchg
fs
call
dec
mov
sbb
cmpsb
mov
xchg
pop
jo
or
je,pn
es
or
push
or
push
push
pop
insb
into
repnz
les
imull
pop
push
test
cmp
or
js
adcb
insb
pop
sub
pop
insb
stos
andl
push
nop
and
scas
fcmovb
ret
out
js
sarb
pusha
cmpsl
push
push
add
push
rcr
das
clc
mov
xor
loopne
pop
clc
repnz
mov
sbb
mov
lret
rorl
mov
ret
aam
les
jle
lahf
mov
fildl
fwait
add
adc
rclb
popa
addr16
test
stos
negb
mov
mov
adc
mov
cltd
cmp
cmp
or
adc
adc
inc
mov
jo
addr16
fs
loope
js
lcall
mov
push
es
cmp
and
popa
imul
mov
gs
andl
stc
ljmp
sub
incb
in
cmp
imul
sbb
arpl
fsts
pop
pop
sub
xchg
das
les
loope
push
xchg
fwait
add
cmc
dec
in
leave
sbb
nop
bound
lea
data16
jo
dec
sbb
adc
adc
test
mov
sarb
cs
adc
jnp
in
lahf
push
dec
cli
push
xlat
mov
jne
dec
jne
or
push
ds
adc
adc
cli
icebp
jne
sbb
in
mov
add
in
dec
dec
or
cltd
mov
mov
cmp
lret
movzwl
inc
sbb
pop
and
fucomip
mov
xchg
ret
jl
add
mov
sub
call
in
or
pop
mov
and
push
pop
mov
sbb
jae
shlb
jg
test
loope
and
xor
ljmp
xlat
mov
popf
arpl
xchg
outsb
lods
sti
test
out
cltd
idivl
mov
cmpsl
jge
aas
xor
xchg
xor
sbb
add
leave
xlat
enter
jl
inc
mov
rol
push
push
bound
xor
cmp
fnop
and
test
dec
rorl
clc
insl
sahf
je
mov
es
push
movsb
sbb
and
pop
push
movsb
aaa
fcompl
lahf
push
sti
lds
ljmp
aaa
mov
or
sbb
inc
mov
lods
out
ret
fnstenv
movsb
sbb
leave
adc
inc
mov
cs
lods
mulb
jg
repnz
jle
mov
movsl
jle
cmp
adcl
fistl
out
int3
pop
rcrb
jo
pop
mov
cmp
or
leave
xchg
out
sti
sbb
mov
xor
jb
mov
jmp
and
repz
pop
in
mov
fsubrp
mov
shrl
xchg
mov
fsubs
bound
rcrl
lods
idivl
stos
cwtl
lds
inc
or
pop
call
dec
add
cmp
mov
push
jg
int3
std
out
mov
rcr
test
inc
xlat
out
and
arpl
scas
test
stos
lds
dec
out
xor
fldt
loop
adc
xchg
dec
and
ja
xchg
std
push
mov
stos
and
cmp
hlt
adc
mov
and
pop
test
lods
sub
fdivs
aam
mov
test
in
cmc
ret
mov
push
hlt
push
and
les
or
jno
push
push
imul
sub
cld
sbbl
insb
jmp
sbbb
cmp
lods
sahf
push
fxch
sbb
and
call
mov
scas
rol
movsl
sahf
push
test
mov
out
jge
push
movsb
testl
xchg
push
xchg
int3
pop
xchg
xor
mov
out
inc
add
cwtl
mov
sub
xchg
lea
sbb
jl
sbb
shlb
mov
filds
dec
sub
adc
movsb
mov
adc
mov
mov
hlt
dec
call
xchg
pop
pop
mov
mov
pop
push
cmp
push
bound
xorb
in
jns
jns
je
icebp
inc
or
mov
in
lods
outsb
mov
jg
push
jp
sub
cmpsl
int
pushf
cmp
cs
add
into
lods
cmp
pop
xchg
sub
mov
xchg
push
push
mov
fwait
mov
in
ja
dec
mov
iret
test
push
cmc
test
sbb
out
leave
and
imulb
jl
add
mov
insl
and
stos
pop
pop
dec
in
je
mov
mov
loop
cmp
movsl
mov
mov
cmpl
xor
lds
arpl
mov
xor
sbb
test
push
pushf
and
and
inc
popa
mov
outsb
sti
outsb
mov
inc
inc
test
sbb
sbb
xor
mov
push
adcb
into
pop
sbb
in
mov
stos
lea
out
call
pop
loope
sbb
lret
jae
lods
inc
cwtl
movsb
mov
jecxz
in
and
pop
cmp
push
ret
sbb
in
xchg
fstpt
cli
xchg
ds
lahf
jmp
mov
outsb
int3
mov
sbb
popa
add
pop
cmp
mov
add
xchg
sarb
pop
sbb
jle
int
push
aas
stos
or
and
jb
adc
cmp
imul
mov
stos
fldcw
pop
subb
pop
pusha
xor
xchg
mov
lock
sbbb
iret
rcrb
rcrb
pop
lret
mov
loop
or
mov
int3
out
inc
xchg
test
sub
aaa
push
cmp
mov
rorl
fsubrl
add
ds
stc
lcall
mov
movsb
mov
ret
enter
sahf
push
xchg
cltd
jo
ds
imul
mov
test
add
sbb
pop
inc
pop
dec
cmpsb
aas
in
xchg
or
in
pop
inc
sbb
xorl
push
repnz
inc
addb
jle
jo
dec
mov
mov
js
sti
mov
xchg
call
shl
clc
adcb
mov
fstpt
lock
pop
mov
lret
mov
jge
push
cmp
pop
fnstsw
int
or
dec
push
std
lods
bound
lea
shll
cmp
imul
rcr
inc
and
jnp
mov
movsl
cmp
jmp
push
pop
push
testl
clc
sbb
hlt
test
leave
mov
lret
rcl
inc
push
xchg
push
mov
add
mov
pop
push
je
mov
dec
push
fildll
add
cmp
inc
test
inc
jne
mov
sbb
mov
dec
das
mov
clc
insb
in
adcl
adc
jg
outsb
cmp
mov
jb
shl
mov
into
adcl
movsl
mov
adc
out
jae
cmp
jno
in
lock
xor
mov
xchg
test
add
jne
jge
push
les
xor
addr16
roll
cmc
xor
ret
jb
push
daa
fs
cld
fmul
push
lahf
add
inc
shll
daa
xor
idiv
jo
jl
add
and
jmp
mov
leave
inc
mov
pop
dec
jne
jle
jnp
add
xlat
push
xchg
mov
mov
in
add
sbb
mov
stos
addr16
adc
or
mov
in
into
xchg
cli
or
mov
jo
insl
jg
and
shl
inc
push
or
addr16
pushf
mov
clc
ret
repnz
daa
shrb
int3
sub
out
je
and
jge
cmp
sub
cmp
stc
inc
cmp
out
inc
out
out
and
cmp
das
xchg
scas
das
scas
call
mov
das
push
lds
jo
fsubrl
xchg
mov
mov
pop
dec
lods
pop
xchg
stos
adc
or
push
xor
adc
jg
push
out
fadd
xchg
pusha
cmp
inc
cmp
push
imul
inc
data16
xchg
icebp
shrl
lret
jge
push
mov
popf
pop
xlat
mov
sbb
in
jecxz
cmp
xor
xchg
pop
arpl
int3
repnz
sbb
mov
sbb
sub
int3
minps
mov
adc
iret
jne
jl
pop
movsb
or
das
daa
or
inc
mov
mov
inc
pop
int3
je
mov
cmpsl
loope
ficompl
inc
mov
mov
xchg
in
sbb
sub
aas
and
lea
inc
stc
out
xor
jecxz
adcl
inc
daa
std
push
repnz
sarl
xchg
mov
and
sbbl
dec
mov
aad
push
jle
lock
sbb
push
scas
pop
nop
pop
loop
sahf
sahf
fcmovnbe
jecxz
xor
add
mov
fs
call
adcl
or
cmp
jno
mov
imul
mov
popa
inc
xchg
fcoms
jge
sub
pop
cmp
arpl
mov
ja
mov
fldl
add
jge
mov
mov
movsl
pop
xchg
inc
adc
or
sarl
loop
inc
ja
test
push
jl
test
loope
cmc
add
push
push
sub
loop
push
and
das
iret
pop
dec
cmp
mov
hlt
enter
scas
sbb
gs
divl
jecxz
repnz
sbbb
jno
out
xchg
pop
push
lret
inc
mov
push
inc
leave
movsl
outsb
sbb
lds
rcll
jo
fwait
sub
mov
add
rcll
add
out
lret
imul
push
sbb
dec
jo
in
loope
pop
pushl
or
jle
call
test
mov
sti
in
adc
mov
fyl2xp1
lahf
push
mov
dec
sbb
fcmovb
ljmp
sti
or
cmpsb
pop
testb
add
mov
in
push
out
jmp
mov
cltd
or
lock
aas
mov
loop
leave
sahf
push
add
std
or
cwtl
push
or
mov
stos
pusha
mov
add
cmp
push
sub
mov
mov
dec
aad
lret
popf
mov
add
xor
sarb
jae
mov
jne
jbe
push
pop
jne
pop
fldl
mov
fdivl
cli
inc
fsub
test
mov
hlt
pop
test
mov
rcr
fmuls
mov
movsb
inc
xchg
popf
ljmp
cmpsb
sub
cmp
cs
popf
test
lret
cmpsl
roll
xlat
push
xor
dec
bnd
mov
dec
loopne
das
mov
arpl
repz
cmpsl
leave
pop
loopne
ficoml
or
pusha
outsb
or
cmp
mov
dec
addr16
cmp
fstpl
dec
add
mov
inc
xchg
push
sub
mov
rcll
les
imul
push
hlt
or
inc
dec
inc
das
outsb
mov
sahf
xchg
enter
mov
cmpb
mov
pop
and
xchg
int3
sub
jns
nop
dec
xor
lods
nop
lret
mov
ret
mov
test
cltd
js
xchg
insl
mov
div
mov
jle
cmpsb
mov
inc
pop
repz
dec
sub
jbe
cmpsl
xorb
adc
add
push
or
mov
fists
push
dec
mov
fistpll
mov
push
mov
pop
mov
mov
push
rcrb
adc
addb
mull
mov
mov
call
enter
sahf
sub
stc
in
inc
jo
mov
fs
dec
jp
mov
lods
hlt
fcmovu
data16
cwtl
xor
sub
xor
adc
cltd
jmp
sub
fimull
je
xorl
jns
pop
xorb
xor
sbb
cld
cld
cli
cli
xchg
or
mov
lods
cli
xlat
xchg
adc
icebp
cmp
lahf
enter
or
inc
mov
lock
andl
sahf
mov
rcll
mov
mov
cld
clc
popf
xlat
arpl
hlt
lahf
ljmp
mov
nop
adc
dec
in
cmp
loopne
test
cs
mov
dec
les
ret
lock
in
sub
in
and
xlat
cli
adc
nop
mov
roll
lods
loope
push
scas
std
fisubs
in
mov
dec
stos
push
dec
pop
cmpsl
jecxz
push
jge
xchg
or
insl
stos
aad
adc
pushf
test
lea
hlt
scas
fs
cmc
ja
pop
dec
mov
stos
outsl
pop
cmp
adc
mov
xor
lock
or
dec
sub
insl
xchg
add
pop
or
sti
rclb
sbb
pop
out
dec
adc
sub
mov
mov
lock
rcl
adc
jae
shr
or
out
data16
cld
je
sbb
add
shrb
mov
scas
sbb
cmpsl
stc
or
jl
jmp
pusha
shll
or
mov
mov
arpl
lcall
inc
outsb
pop
testl
xlat
lahf
dec
setno
pop
into
add
push
push
shlb
jp
dec
push
mov
inc
popf
gs
out
mov
sbb
loope
idiv
jo
sbb
ljmp
or
jle
sbb
orl
shl
repnz
movsl
and
leave
test
ss
stc
cltd
test
test
call
push
test
push
xor
cld
arpl
mov
lret
frstor
rclb
sbb
popa
or
adc
roll
cli
dec
stos
lods
test
aam
mov
loop
push
xchg
push
push
mov
and
aaa
cltd
cltd
cltd
sbb
push
and
andb
iret
sti
add
pop
rol
push
xchg
jno
ds
xchg
mov
outsl
dec
or
jge
test
adc
push
std
inc
pop
xchg
das
pop
push
cmc
aas
test
push
mov
imul
cs
enter
cwtl
cmp
dec
mov
je
pop
aas
stc
subb
loopne
pop
sarb
dec
lods
cltd
scas
adc
arpl
push
push
imulb
das
push
ret
sub
pop
jp
cmp
sub
jecxz
sub
jbe
dec
or
fisttpll
js
pop
test
pop
in
sbb
jmp
cmovl
push
idivl
push
pop
pop
shlb
cmp
fnsave
fbstp
push
lock
adc
pop
mov
mov
add
test
mov
pop
iret
xchg
add
mov
ljmp
push
pop
sbb
pop
aam
sub
jg
jmp
in
hlt
movsl
popf
repnz
ret
mov
inc
sub
pop
cli
sub
pop
mov
lods
fistpll
xor
test
mov
mov
rol
outsl
iret
into
cmp
in
ret
shl
enter
into
clc
shll
jb
jo
mov
jb
icebp
push
xchg
test
jbe
out
je
loope
mov
jecxz
or
jg
mov
test
jmp
out
sbb
cmc
xlat
xor
inc
xchg
mul
xor
xchg
loop
ret
xchg
adc
sbb
push
aad
popf
mov
or
add
popf
mov
arpl
sub
test
fsubrs
cltd
lcall
pop
inc
ljmp
xor
cwtl
mov
lods
movsb
push
mov
or
lahf
ret
lea
stos
mov
test
sbb
mov
inc
cs
pop
xchg
xchg
loop
gs
popa
adc
sbb
loop
jne
stos
cwtl
call
into
mov
imul
push
adc
loop
mov
sbb
xor
into
push
cmc
icebp
fsubrl
fidivrl
pop
cmp
jge
lock
add
rcrb
clc
pop
cmc
mov
rcll
push
xor
fstps
in
jmp
ljmp
out
push
adc
adc
pop
shl
orl
outsl
scas
rorb
or
push
dec
arpl
shll
jle
jae
pop
and
subb
xchg
mov
and
int
test
std
sbbl
dec
jbe
xor
jge
add
cmp
lret
pop
push
cmpb
addl
out
imul
mov
jl
push
arpl
clc
rcrb
mov
sub
ret
imul
adc
popa
dec
mov
ljmp
jbe
iret
cwtl
mov
cmp
inc
push
push
sbb
dec
push
mov
fsubrp
das
add
adc
dec
repz
in
notb
cmp
mov
int3
ss
cvtdq2ps
ret
lds
lea
xchg
mov
xor
mov
mov
dec
loop
push
sub
xchg
movsb
loopne
mov
aam
std
test
subb
mov
push
push
ret
jmp
jb
jne
stc
and
or
repnz
fisubl
sub
aad
push
xchg
testb
rorb
mov
pop
mov
mov
repnz
mov
pop
in
xlat
aas
and
out
sub
push
test
mov
xorb
add
pusha
mov
xchg
inc
aad
mov
test
inc
ljmp
mov
sub
inc
jns
push
in
or
cmp
ret
and
jnp
adc
loop
out
jecxz
lret
or
push
push
mov
sti
aam
daa
add
mov
cld
and
and
cmpsl
xchg
ds
out
dec
cltd
sti
inc
add
inc
and
int3
leave
push
ds
outsb
adc
dec
fdivrp
sub
stos
pop
sbb
xchg
faddl
addr16
jnp
xor
sbb
movsb
push
stos
or
int3
lea
out
mov
enter
push
dec
dec
push
xchg
das
ficoml
push
cmpb
mov
adc
shlb
in
lds
adc
cmc
vmovq
mov
push
loopne
sarb
adc
mov
pushf
aas
cmp
ljmp
inc
push
add
cltd
out
js
jae
shll
hlt
fbld
jns
pop
lret
aas
xor
or
in
data16
dec
cwtl
test
daa
lret
fadds
jmp
mov
enter
mov
in
cmp
or
ficomps
test
push
gs
test
lds
adc
mov
test
cmpsl
mov
or
imul
mov
incl
add
into
stc
insb
add
fs
jae
jmp
and
clc
lock
sub
or
outsb
dec
fwait
jmp
stos
pop
cltd
daa
adc
add
mov
imul
fs
cmp
mov
pop
fsubr
scas
mov
lahf
dec
insl
xor
push
push
lret
and
scas
xchg
in
shrb
pushf
je
inc
cs
pop
dec
inc
and
fisttps
jp
clc
sti
pop
cmp
outsl
fidivrl
mul
in
sbb
push
mov
dec
fildl
lea
jae
adcb
fistl
dec
ret
jl
aas
cvttps2pi
fs
dec
push
cmc
xchg
inc
sbb
das
xor
pushl
mov
pusha
aad
repnz
xchg
or
lock
jnp
pop
push
pop
pop
lfs
fcoml
lods
sbb
imul
insb
mov
inc
es
mov
clc
fsubl
mov
ficomps
or
xchg
nop
sub
shll
out
cmp
mov
cmp
cmp
push
xchg
testb
dec
sbb
cmp
stc
mov
gs
xor
testl
jl
fisttps
clc
pop
mov
repnz
clc
hlt
clc
xor
mov
fidivl
hlt
arpl
mov
mov
nop
add
dec
cmpl
test
mov
stc
imul
mov
xchg
stos
mov
arpl
aam
push
mov
or
imul
push
adc
pop
stc
mov
in
push
mov
xor
call
pop
adc
cltd
test
cmp
shll
mov
dec
xor
xchg
or
das
xchg
add
jl
pusha
jg
mov
fs
jns
xor
lret
imul
mov
jo
jmp
mov
jbe
fcoml
push
and
dec
cs
mov
push
imul
xor
jbe
ret
fcmovb
sbb
mov
pop
push
mov
das
shrl
pushf
jecxz
xchg
jne
stc
pop
cs
inc
cmp
adc
imul
and
in
movsb
inc
aad
dec
out
mov
sbb
xor
or
xchg
adc
or
shrl
mov
inc
jmp
movsb
daa
pushf
jmp
in
dec
insl
jne
test
stos
aam
jae
add
cmc
push
push
fsts
push
fmul
and
xor
cmp
dec
sbb
pop
scas
push
sub
in
ds
inc
mov
cmp
movsb
lock
mov
or
in
push
stc
frstor
stos
loop
ljmp
arpl
mov
mov
outsb
shll
sbb
mov
sub
inc
sbb
cmc
xor
mov
inc
dec
mov
int
and
add
cli
pop
mov
mov
inc
test
ret
or
push
add
adc
pop
add
out
lret
cmp
incl
imul
dec
fsubrl
test
int3
inc
inc
jo
fs
mov
jb
xchg
and
call
fsubrl
add
xchg
sbb
ficompl
xchg
rolb
loop
ja
sbb
stc
inc
lcall
outsb
dec
xchg
repz
lock
or
jbe
rcrb
adc
es
iret
sub
cmp
jb
dec
dec
pushf
into
pop
subl
mov
xchg
leave
das
fstps
pushf
xor
idiv
gs
mov
fcomi
mov
testl
aam
adc
dec
sub
dec
jmp
push
in
gs
jl
sub
jne
cs
icebp
out
popa
mov
rorl
xchg
rorl
jae
inc
ret
dec
shlb
lahf
push
mov
jge,pn
xor
dec
bound
cs
sub
rorb
fsubrl
scas
cmpsb
mov
cmp
and
mov
loopne
mov
cmpb
inc
mov
push
xchg
imul
cs
fiaddl
scas
inc
ror
or
jge
inc
lahf
addr16
shl
cmpsl
and
push
mov
or
mov
shlb
push
cs
adc
loope
push
stc
mov
and
sbb
dec
jg
fdivs
scas
adc
xchg
pop
in
sub
fcmovu
jl
xor
int3
nop
inc
stos
shl
cltd
repnz
jl
cmp
add
arpl
bound
test
fld
push
setl
and
scas
pop
ja
jmp
fwait
jmp
xor
call
sbb
pop
mov
aam
nop
pop
addr16
mov
or
test
je
ffreep
cltd
sbb
jno
mov
cld
ja
repz
jecxz
push
mov
or
mov
dec
sub
loope
ja
and
or
ror
cmp
pop
adc
dec
xchg
pop
andl
xor
lret
in
inc
jb
jecxz
and
in
pop
jecxz
fstpl
test
add
nop
out
push
pop
sub
cmp
insl
sbb
pop
and
outsb
leave
cwtl
arpl
xor
rcl
sub
and
aam
mov
add
mov
pushl
add
jae
arpl
lock
sub
call
xchg
sbb
icebp
add
pop
mov
je
js
in
sub
xchg
jle
call
xchg
rcrl
nop
fdivr
and
pushf
pop
mov
lret
lret
addl
ljmp
dec
outsb
jo
jns
in
and
mov
ret
and
mov
xchg
lods
sarb
std
scas
inc
popf
in
aas
pop
mov
outsb
frstor
mov
bound
jns
mov
adc
movsb
test
icebp
xor
sub
in
or
addr16
inc
iret
jns
ret
xlat
in
stos
mov
adc
fsubs
xchg
call
pushf
and
mov
in
test
xor
das
sub
sbb
and
rcrl
xor
mov
mov
and
jae
mov
stos
pushw
pop
sbbb
int
dec
adc
cmpsl
pop
lret
outsl
in
insb
movsl
bound
pop
mov
fwait
cmc
mov
insl
mov
xchg
sbb
xchg
fstpl
cld
ret
ret
mov
sub
sub
outsl
daa
pop
mov
cs
sub
mov
js
add
mov
jmp
insl
sub
and
rorb
cmp
std
rorl
sub
mov
scas
mov
int3
lret
out
sub
cmpsl
sbb
lea
jno
test
enter
js
jl
and
lret
repz
sub
mov
js
cmp
mov
int3
ffree
mov
lods
fimull
mov
mov
push
imul
rol
popf
leave
iret
lcall
jecxz
adc
cmp
xchg
fs
or
dec
cld
lret
mov
pop
nop
and
fwait
inc
ret
fadd
scas
fstpt
and
call
or
ss
pop
das
std
lea
jp
and
lds
shr
sti
xchg
or
cld
insl
mov
xor
call
movsb
xchg
outsb
dec
jecxz
push
dec
mov
call
dec
sbbb
jp
push
xor
loopne
sbb
dec
push
and
lods
fistps
rcrl
adc
nop
insb
pop
pop
dec
or
mov
dec
les
or
mov
inc
ds
cmp
mov
add
lods
jmp
sbb
cmp
jnp
call
inc
mov
aaa
mov
inc
mov
push
aaa
mov
xor
xor
jle
xchg
mov
jecxz
out
movl
mov
rclb
xchg
xor
out
cmpl
mov
cmp
cltd
jo
sbb
jo
repnz
cmp
pop
ret
push
les
pop
in
cld
icebp
scas
sbb
adc
sbb
push
cmpsb
xchg
adc
sub
daa
loopne
sub
or
push
jp
movsb
or
sbb
dec
dec
sbb
mov
pop
mov
sahf
insb
pop
imul
inc
out
fnstcw
rcl
sbb
les
movb
sbb
lods
inc
hlt
mov
je
sub
aaa
inc
jl
mov
stc
xchg
inc
out
ret
rcrl
sbb
sti
push
std
scas
mov
scas
sub
fistl
pushf
es
loope
loop
mov
push
and
xor
push
xchg
xor
mov
xor
xchg
js
test
jmp
in
nop
sub
push
xchg
cli
sbb
mov
dec
je
fwait
push
or
aad
sub
jbe
push
pop
jg
in
mov
push
lret
inc
pop
je
inc
daa
sub
or
adc
hlt
sahf
mov
or
ret
fldcw
int
dec
or
add
pop
fldenv
xor
jne
mov
nop
pop
cmp
dec
push
adc
push
imul
adc
cmpb
aad
sbb
pop
ja
push
sbb
outsb
fimull
cmpl
pop
inc
sbb
xor
repnz
stos
insb
jg
jb
add
mov
fadds
xor
adc
mov
fidivs
xchg
pop
icebp
or
mov
sbb
push
add
enter
fstps
data16
jp
or
jge
inc
movsb
or
shlb
arpl
out
divb
ss
jae
imul
mov
mov
sub
pop
rcll
shlb
adc
pop
mov
push
out
push
das
cld
jmp
es
pop
enter
push
jge
push
sahf
dec
aaa
jp
pushl
fcomps
jge
mov
sti
dec
mov
jns
addl
jbe
outsl
sub
mov
mov
decb
dec
sarl
adc
lock
test
fcomip
outsl
outsl
aad
push
xchg
inc
adc
mov
mov
insb
stos
add
or
dec
adcl
jne
in
cmc
test
dec
sbb
nop
jg
mov
addl
stc
sub
jl
out
pop
add
mov
cs
push
push
xchg
popa
nop
xorb
popf
and
popf
cmp
xchg
jg
mov
mov
or
mov
outsl
fs
cmp
mov
insb
fbld
outsb
cmp
adc
out
std
bt
or
inc
icebp
mov
mov
lds
out
shlb
sub
aas
push
aad
cmp
add
pop
sbb
mov
pop
xor
pop
xchg
es
in
jns
add
push
sub
insl
mov
xchg
mov
pushf
inc
xor
mov
add
incl
dec
xor
roll
add
push
std
sbb
inc
lods
jb
or
in
lea
dec
stos
dec
push
test
scas
shrl
mov
rorb
xchg
pop
rcrb
push
mov
adc
shr
dec
xlat
pop
std
pop
lea
daa
shll
shlb
or
jns
mov
add
hlt
add
outsb
hlt
sbb
add
shlb
stos
inc
pop
lahf
dec
pop
xchg
into
or
push
dec
sub
adcl
sahf
push
movsl
cs
enter
outsl
inc
push
and
xchg
fs
cli
dec
rcrb
pop
cld
push
xchg
mov
int
xchg
and
out
inc
mov
push
hlt
movsb
xchg
out
enter
out
enter
xor
lcall
rcr
shll
push
mov
inc
pop
pop
fucomp
mov
repz
or
pop
jno
fisubl
sub
sub
push
loope
inc
inc
add
adc
loope
xor
and
shr
je
popf
pop
out
imul
imul
push
push
in
les
or
movsb
adc
mov
cwtl
lds
mov
rclb
test
xchg
mov
shrb
mov
dec
push
ret
mov
clc
inc
inc
jmp
sbb
imul
dec
mov
mov
mov
sbb
push
jmp
imul
aad
jnp
rcr
adc
in
movl
adc
jl
addl
jne
xchg
testb
int
lret
sub
sbb
fimull
mov
push
aad
cmp
sbb
mov
sti
ret
xlat
arpl
adc
in
mov
adc
mov
mov
mul
sahf
add
in
popa
lcall
hlt
repnz
inc
xchg
ja
fwait
jecxz
test
in
sbb
out
ds
or
sarl
shl
mov
cs
add
cmpsb
pop
add
pop
in
xchg
push
xor
and
push
es
std
das
mull
test
dec
pop
addl
sahf
and
ja
in
jp
scas
pop
dec
ds
mov
movsl
mov
add
jae
cwtl
pop
adc
nop
mov
add
in
pop
xor
or
cmc
adc
popa
int
mov
mov
dec
mov
push
shrb
repnz
mov
xorl
mov
imul
cmp
jp
in
add
sbb
aas
pop
shl
je
or
pop
loop
das
or
or
loope
outsb
and
cmp
xor
push
imul
mov
jb
int3
add
dec
icebp
cmpsb
cmp
testl
jle
pop
inc
scas
fcmovnu
xchg
sbb
xchg
xchg
inc
sub
iret
inc
mov
cmpsb
cmp
add
dec
lcall
and
movsl
cwtl
out
pusha
lahf
out
jmp
pop
mov
jbe
xor
and
push
stos
sarl
mov
mov
jle
mov
xchg
push
out
cmp
xchg
sbb
pop
sbb
pop
insb
nop
movsb
cmp
xchg
hlt
mov
or
insb
and
mov
sub
cmpsl
aas
movsb
iret
pop
fldcw
dec
inc
rol
rolb
lock
adc
rorb
sbbb
xchg
pop
cmp
xchg
fimull
pusha
or
pop
xchg
sub
cmc
fsts
stos
and
insb
jae
lahf
repnz
sub
mov
daa
pushl
push
or
loopne
mov
sub
mov
xlat
dec
or
jle
aas
cmc
aaa
mov
jg
mov
pop
arpl
xchg
punpckhdq
or
pop
sbb
mov
popf
mov
negl
xor
xchg
cmpb
or
pop
pop
inc
jns
lea
addr16
fldt
lret
adcb
ret
dec
sub
mov
inc
cld
stc
mov
mov
enter
movsb
rcll
fcomps
idivl
adc
add
xchg
adc
mov
mov
leave
push
stos
outsb
xchg
bound
out
sub
mov
xchg
mov
cmp
push
or
ljmp
cld
andb
push
and
mov
xor
pusha
push
inc
mov
cwtl
mov
cmp
add
ret
sub
lea
js
mov
in
ds
jae
sets
andb
add
test
mov
sub
xchg
jno
aad
and
sti
test
push
pop
ljmp
jne
gs
sub
pop
mov
popf
jnp
movsb
mov
pushf
lea
mov
jo
imul
daa
and
push
iret
stos
out
outsb
sbb
mov
cmp
dec
xor
adc
jns
sbb
fwait
std
jl
iret
and
jg
adc
xor
jg
lods
stos
xor
pop
aas
hlt
inc
pop
ljmp
bound
ja
sub
repnz
and
cs
push
push
jae
fistpl
scas
rcl
pmaxub
push
jns
ret
add
cmpsl
jae
pop
rcr
rcrl
mov
push
add
jns
rol
jmp
pop
lahf
call
push
imul
out
daa
repnz
push
sub
inc
and
dec
ljmp
imul
adc
fisttps
div
or
test
pop
loop
push
orl
mov
shll
out
add
push
das
mov
adc
cmpsb
lret
test
jno
pop
dec
adc
adc
sti
fdivrs
and
sub
ss
mov
test
test
fbstp
jle
sbb
xor
stos
pop
loop
lcall
cwtl
stos
movsl
or
mov
mov
andb
popf
in
int
test
jae
mov
pop
aad
movsl
lods
into
mov
outsl
nop
fnsave
movsl
enter
pusha
icebp
in
pop
stos
or
and
fidivrl
stc
mov
jne
enter
scas
imul
push
mov
sti
and
add
push
adc
adc
xchg
pop
into
push
jb
clc
mov
mov
arpl
sub
shld
loope
sub
sub
fidivrs
fldt
jne
imul
mov
dec
loop
scas
sub
inc
dec
push
dec
repz
mov
and
mov
cwtl
xchg
ss
lret
sbb
mov
ret
jns
pop
aaa
push
pusha
std
scas
inc
in
int3
cmp
xor
or
scas
pop
aas
jb
xor
cmp
test
inc
sbb
negl
je
ds
add
xor
aad
cmp
jno
loop
dec
roll
sbb
dec
inc
cld
mov
es
and
and
test
xor
dec
pushf
push
addr16
scas
mov
shll
dec
inc
adc
or
mov
push
cmpb
in
pop
mov
aaa
lods
loop
in
push
dec
add
mov
adc
and
int3
sub
movsl
int3
cmc
xor
xchg
negl
orl
rcr
pop
mov
mov
inc
loopne
mov
adc
loop
mov
lods
dec
push
movsb
aad
or
movsl
and
xor
nop
pop
in
mov
ljmp
mov
xchg
sbb
xchg
jbe
and
pop
imul
fisttps
push
or
mov
jl
aam
jne
imul
or
mov
les
sub
push
xor
mov
mov
inc
mov
pushf
add
jmp
movb
std
adc
test
push
dec
ss
call
or
fldcw
push
dec
hlt
icebp
mov
push
pop
mov
push
mull
lahf
xchg
cmpl
adc
or
shll
xchg
add
cmp
mov
push
and
cwtl
jmp
jbe
mov
pop
ljmp
pop
dec
insl
sub
cmp
jle,pn
xlat
sub
rcl
out
pop
push
fstpt
add
loopne
ret
incb
xlat
adc
jle
sub
hlt
test
movsl
jecxz
out
enter
test
bound
mov
and
lock
cmp
arpl
xor
test
jecxz
les
dec
push
insb
pusha
mov
test
xchg
icebp
cmp
icebp
jp
lock
sbb
jo
cmp
cmp
and
jp
lret
sub
jmp
mov
lret
push
ror
pop
mov
popf
scas
mov
add
xchg
outsl
stc
movsl
out
lahf
pop
sarb
int3
dec
xchg
nop
rclb
sarl
fisttps
hlt
test
adc
pop
dec
cmp
int
sarl
cld
push
xchg
or
xchg
and
mov
mov
lea
loopne
std
pushf
out
cltd
add
bound
add
mov
scas
idivl
dec
add
jnp
rol
pushf
and
std
lods
outsl
ret
push
adc
lret
mov
lcall
movsb
or
inc
mov
shll
and
pop
out
out
daa
add
jle
adc
sti
pop
sbb
jne
or
jo
inc
pop
and
test
lds
mov
mov
push
loop
push
adc
xchg
lods
cli
lcall
jl
shrl
push
ja
and
and
in
pop
rcrl
pop
xchg
mulb
xor
in
mov
pop
iret
enter
mov
jp
lock
and
xchg
bound
xor
mov
jmp
mov
mov
cmp
bnd
cmp
mov
cwtl
mov
inc
lret
push
outsl
fstl
and
push
push
cmp
daa
mov
rcl
mov
andb
sti
shufps
and
cmpsb
jnp
jae
aas
mov
xor
jecxz
xchg
test
enter
add
jo
lret
dec
add
mov
mov
xor
shrb
sub
push
ret
inc
scas
pmuludq
pop
sub
mov
mov
and
idivb
mov
fwait
mov
fnstsw
fldl
fsubrl
push
pusha
test
outsl
dec
mov
ss
push
sbb
xor
aas
stc
cs
add
fsubrl
push
pop
inc
ror
xchg
addl
loop
jl
repz
call
ljmp
inc
add
push
dec
shlb
adc
dec
je
push
dec
xor
mov
push
sub
in
add
jl
adcl
inc
repz
sub
lret
add
or
stos
jo
cwtl
dec
pop
in
xchg
add
lea
ss
lds
push
jecxz
push
or
pop
movsl
xchg
in
in
nop
imul
in
iret
popa
xchg
lods
push
mov
push
cwtl
xorb
and
fcomps
jns
pop
xchg
scas
add
xchg
ret
inc
icebp
xor
and
pop
test
hlt
pop
jge
push
enter
mov
test
lcall
iret
cs
shrl
pop
insl
push
inc
jne
jae
imul
sbb
dec
sahf
leave
jns
rep
mov
pop
enter
pop
js
fxch
inc
pop
hlt
xor
call
fadds
sub
or
imul
stos
and
and
popf
mov
int
insb
push
loopne
movsb
add
cmp
adc
and
pop
xor
push
pop
lret
stos
fucomp
push
les
jp
test
mov
sbb
cmp
mov
cmp
or
fwait
sbbl
popf
mov
fs
xchg
dec
mov
iret
into
push
negb
not
daa
mov
popf
rcrb
enter
push
dec
pop
ss
jl
in
mov
add
mov
inc
jecxz
and
mov
sbb
out
push
mov
xchg
inc
popf
sub
xchg
test
pop
sub
pop
aam
ss
jno
lret
pusha
test
mov
push
sbb
or
test
aam
shll
sub
mov
loop
cmp
and
and
xor
mov
int
sahf
xor
roll
loop
mov
ss
lds
fwait
mov
sbb
ret
push
pop
pop
out
subb
leave
xor
bound
fisubl
ret
arpl
xor
adc
dec
adc
xor
sbb
rolb
or
xor
fstps
negl
aam
scas
cmp
nop
cli
sbb
dec
mov
fcoms
popa
mov
inc
pop
sbb
mov
mov
jno
das
mov
stc
lods
mov
mov
frstor
cs
out
rcll
arpl
push
cmpsl
mov
add
add
jmp
add
imul
dec
sar
or
dec
enter
sub
push
ret
inc
push
and
inc
out
mov
pop
sub
jle
mov
xchg
mov
loope
into
push
inc
iret
repz
add
jg
stos
cmp
add
mov
test
push
sub
lret
sahf
popa
add
je
stos
loope
push
sbb
mov
out
mov
repnz
or
xchg
imull
mov
ret
pop
mov
sub
into
jmp
inc
dec
mov
inc
sub
imul
add
adc
push
das
inc
in
pop
movsl
xorl
lahf
mov
dec
leave
mov
nop
pop
aaa
mov
add
aaa
add
sahf
xchg
je
test
push
jge
aad
inc
or
je
cli
aam
in
mov
push
xlat
push
xor
adc
mov
pop
aad
call
mov
xor
dec
test
out
iret
ja
mov
jp
imul
xor
clc
mov
or
push
fwait
sub
nop
push
push
jb
ffreep
adc
adc
cmc
scas
sbb
stc
or
inc
jae
mov
arpl
lahf
xchg
adc
stos
mov
xor
inc
int
mov
int
ret
mov
pusha
inc
decb
jnp
dec
pop
jl
pop
or
add
mov
push
or
push
and
jb
xchg
std
mov
xor
mov
je
psrld
imul
enter
test
or
divb
jo
ret
pop
in
ss
mov
pop
mov
das
xchg
push
filds
and
push
pop
push
mov
insl
add
hlt
sbb
scas
cwtl
mov
test
push
pop
fidivrs
pop
mov
jmp
jg
mov
scas
hlt
mov
test
pop
or
rcr
or
jbe
mov
jnp
sub
pusha
lcall
sub
push
in
mov
sbb
leave
mov
mov
aad
push
mov
les
mov
enter
mov
jnp
stos
outsb
push
mov
in
cmpsb
sbb
call
imul
gs
jmp
pop
adc
mov
cmp
data16
or
mov
sarb
mov
xchg
push
inc
lods
xor
scas
cmp
or
jne
repnz
fcoms
pop
jo
imul
addr16
xchg
arpl
sub
test
jne
sti
pop
and
test
lea
xchg
out
inc
xchg
movsl
ljmp
mov
push
inc
rol
mov
or
in
aas
int
mov
imul
stos
mov
iret
mov
mov
movl
fs
fdivrs
out
cmp
not
daa
cmp
sub
jno
adc
and
dec
cmp
repz
pop
in
mov
sbb
add
aaa
jmp
mov
lods
push
pop
mov
adc
sbb
lret
mov
loope
xor
out
lcall
rcl
addl
jae
je
inc
xchg
nop
sub
xchg
test
or
cmp
std
cld
sbb
mov
push
ja
fs
mov
mov
call
jecxz
aam
cltd
les
faddp
jno
test
mov
cs
or
das
sbb
push
insl
addb
lods
repz
shlb
xor
das
lock
loop
mov
dec
rcr
call
fs
xchg
sti
repz
mov
or
ret
lods
ds
and
pop
ds
in
mov
push
jmp
inc
mov
cmpsl
or
inc
mov
cmp
cltd
jl
in
popa
adc
xlat
test
cmp
jg
push
cwtl
aas
insb
or
insl
or
hlt
repz
sahf
psrlq
int3
mov
xchg
xor
add
adc
dec
ror
cmpsl
cltd
ret
jb
inc
mov
fisubl
out
cmpsb
mov
and
aam
daa
repnz
fistpll
loop
mov
xchg
int
sub
and
add
pop
jns
dec
dec
xchg
inc
cwtl
add
shll
cmp
insb
fcomps
dec
ljmp
push
scas
inc
shl
and
sub
int3
lods
out
xor
ds
je
cmp
jae
test
iret
adc
andl
hlt
insb
and
sbb
ds
inc
data16
call
push
aam
nop
cmp
dec
and
into
cld
jmp
dec
push
mov
cmp
jne
push
push
xlat
pop
lret
ret
jo
mov
in
arpl
mov
fdivp
sbb
mov
movsl
adc
or
aaa
shlb
jne
cwtl
mov
xor
nop
out
lret
aad
xor
ret
cmpsb
movsl
sbb
aad
push
adc
jnp
in
fimull
mov
xchg
ja
lcall
in
sub
xchg
js
mov
jo
adc
xchg
in
fdivl
adc
jle
imul
mov
dec
sub
push
and
inc
adc
repz
xchg
adc
mov
and
xor
and
mov
mov
jnp
mov
xor
and
scas
cli
mov
jo
dec
add
jbe
ret
sbb
mov
aas
inc
dec
dec
ds
push
into
and
jl
in
mov
popa
ja
fisubrl
or
xchg
out
ret
cmp
xlat
and
mov
call
mov
lcall
mov
xchg
out
es
in
lret
fiaddl
filds
mov
or
mov
dec
scas
and
rorl
adc
js
push
pop
mov
sti
nop
loopne
xchg
cmpsb
ljmp
inc
sbb
push
sbb
lcall
add
subl
jge
jno
mov
jae
inc
lock
movb
rorl
pusha
pop
sbb
addb
push
sbb
in
or
mov
adc
jmp
push
xor
mov
jle
sahf
jae
mov
pop
xchg
and
xchg
cmpsb
or
addl
roll
cmp
sbb
mov
mov
scas
ss
cmpsb
jae
loopne
pop
fmulp
outsl
and
shrl
aam
push
inc
in
scas
mov
xchg
stos
pop
bound
and
push
cmp
jp
jge
data16
push
cs
fimull
sbb
mov
imul
stos
or
aaa
cmp
dec
push
es
pop
sbb
out
add
enter
adc
mov
mov
jns
inc
mov
xchg
repz
xchg
dec
xor
out
out
add
pop
int3
or
shlb
xor
fincstp
lret
pushl
and
imul
pop
fisttpll
xchg
mov
fs
mov
push
xor
push
sub
inc
mov
cli
adc
adc
xchg
pushf
stos
fildl
stos
das
add
inc
xlat
idivb
rcrl
xor
mov
stos
ja
shll
sbb
dec
mov
cmp
imul
push
jge
mov
pop
or
insb
cld
fildl
fsubrs
ret
hlt
shlb
or
jge
cmp
ds
push
adc
repz
ficoms
dec
leave
gs
repnz
xor
ljmp
push
loope
mov
xor
sbb
fisubl
xchg
xchg
push
jmp
cmp
imul
fadds
jp
imull
pop
and
imull
out
sub
lret
cwtl
cmp
inc
lods
pop
and
jnp
push
xchg
arpl
xchg
into
pop
addr16
cld
cmp
push
stos
mov
ss
mov
mov
divb
dec
lret
data16
pop
add
push
gs
or
dec
sarl
fmull
in
adc
daa
loop
in
adc
push
mov
leave
aas
or
outsb
lret
call
pusha
dec
inc
or
pop
jne
inc
mov
xlat
or
adc
xchg
or
sbb
call
add
lods
cld
call
adc
dec
in
scas
sti
lock
enter
add
jb
inc
inc
sub
adc
xchg
cmp
gs
cmpsb
fucompp
mov
aam
cmp
in
and
xchg
clc
mov
adc
test
lcall
push
pop
movsb
lcall
jnp
xor
lret
sub
imul
notl
das
xor
xor
mov
mov
sarl
lock
jle
cmp
paddq
sub
add
pusha
in
jnp
lods
pop
fidivs
out
fwait
push
inc
inc
in
insl
js
flds
into
stos
push
pop
adc
jmp
js
das
inc
inc
shll
out
lahf
sub
mov
add
push
lea
sbb
mov
call
dec
dec
decb
xchg
cmc
push
roll
loope
cmpsb
arpl
dec
mov
xchg
fldcw
es
aaa
mov
xor
xchg
scas
stc
mov
push
setnp
pusha
sub
loop
push
popa
add
push
jge
movsl
inc
sbb
clc
out
lahf
lods
nop
cli
lods
push
adc
pop
push
cli
inc
or
scas
lahf
mov
or
push
mov
out
cld
push
loop
adc
pop
iret
push
push
pop
mov
xor
imulb
or
dec
faddl
insb
dec
xchg
aaa
sub
iret
test
les
testl
mov
add
jl
adc
jmp
in
pusha
jns
fstps
pop
xchg
sbb
mov
adc
or
cmp
daa
movsb
add
and
mov
xchg
insb
or
xchg
imul
std
inc
shl
in
pop
fisubrs
mov
pop
stc
mov
pop
sbb
xchg
stos
pop
jle
adc
pop
dec
stos
rcrb
call
or
push
add
int
ja
scas
fisubs
jl
sahf
and
mov
lods
in
jl
xchg
sbb
and
mov
cmp
divb
fs
sarl
js
jne
mov
int
push
pusha
jo
sbb
or
sti
or
call
aam
rclb
std
test
loope
popa
add
les
adc
dec
sbb
scas
imul
repz
into
pop
mov
sbb
adc
stos
aaa
std
test
dec
xor
dec
scas
mov
jp
adc
enter
subb
mov
inc
je
ficoml
stos
push
fldenv
sub
pop
pop
add
call
inc
fstl
sub
inc
hlt
ss
jecxz
xor
push
pop
repz
enter
mov
jb
push
mov
shl
test
outsl
int
push
dec
mov
popf
mov
mov
cmc
mov
lea
orl
jp
push
cmp
icebp
orl
xchg
outsl
stc
int
sub
adc
mov
mov
push
loope
xor
pusha
aam
mov
add
aaa
push
std
mov
push
push
xor
xchg
pop
aas
pop
ds
cmp
cmp
sub
enter
dec
stc
dec
mov
outsb
out
pusha
fldl
and
xchg
sub
xor
inc
and
fs
push
mov
and
repz
push
and
aad
aad
pop
cmp
sarb
jb
cwtl
clc
loopne
sub
dec
inc
jmp
xor
cmp
ss
adcl
lret
mov
push
aaa
pusha
sub
ljmp
or
xchg
aas
inc
add
mov
and
out
cmp
sub
aam
xchg
pop
jmp
cltd
or
insl
rorb
mov
and
insb
leave
add
std
sub
mov
mov
xor
gs
dec
mov
adc
inc
hlt
je
xor
fdiv
cmp
rclb
pop
movsl
repz
arpl
cmp
and
int
icebp
mov
xor
inc
cmp
dec
jne
mov
mov
es
in
std
dec
xchg
pop
ret
cld
jne
ret
xchg
fistpl
cmp
ljmp
fnstsw
or
jbe
roll
push
mov
xor
insl
jp
lea
mov
xchg
push
mov
jp
icebp
push
jle
sub
sbb
mov
clc
push
out
push
add
push
mov
push
mov
fisttpl
imul
das
movsb
punpckldq
add
and
inc
adc
pop
aam
fldcw
aas
cmc
xchg
fs
aas
or
lds
mov
movsl
dec
xchg
cmp
adc
lret
hlt
cmp
sbb
insb
scas
adc
mov
testl
add
pop
repnz
rcrl
fnstcw
cmp
or
pop
into
pop
imul
incb
gs
pop
popf
movsl
insl
lret
xor
push
jecxz
andl
mov
mov
jmp
lock
out
mov
add
or
icebp
rorb
into
int3
test
xchg
xlat
adc
stc
jge
xlat
cmp
sbb
pop
pop
int
jmp
lret
pop
xor
cli
lea
cmpsl
mov
pop
fsubs
and
lret
neg
clc
push
sti
adc
pushf
loop
mov
xor
sbb
fwait
enter
ficoml
sbb
lea
dec
lock
fisubrl
lcall
pop
arpl
lods
jmp
scas
sub
lret
sbb
in
fidivrs
hlt
stos
cmp
sub
shl
pop
pop
int3
sti
pop
stc
adcl
outsl
ja
xor
ja
popa
mov
fs
outsb
in
rcrl
lret
mov
xadd
cltd
xchg
push
dec
add
dec
lret
jne
cld
sahf
dec
jbe
and
jg
and
sub
repnz
push
dec
dec
repz
into
ds
cmp
fldenv
iret
jb
add
les
daa
cmp
insl
cmc
insb
in
dec
enter
cltd
xchg
or
aaa
dec
sbb
ds
out
inc
je
rcl
or
fdivrs
loope
stos
lods
or
mov
fstpl
and
xchg
movsl
in
or
push
lods
sub
mov
cmp
mov
ret
ljmp
imul
lods
rclb
sbbl
sub
lods
std
inc
daa
mov
push
pop
bound
nop
jbe
sub
xchg
mov
dec
pop
fisubl
loope
cmp
inc
dec
loop
sub
lcall
and
mov
in
pop
dec
xchg
popf
or
enter
xor
adcl
repnz
adc
daa
push
xchg
dec
pusha
ds
aad
push
in
rdtsc
pop
in
cmp
xlat
xchg
stos
sbb
fwait
jnp
adc
movsb
push
jp
or
mov
and
iret
add
popa
adc
add
mov
lods
js,pt
sub
dec
cmpsl
jnp
addr16
cmpsb
leave
adc
xor
push
movsl
jmp
loop
xlat
ds
push
pop
repnz
je
sbb
pop
cmp
dec
out
cwtl
mov
loope
into
sub
cwtl
imul
dec
popa
mulb
jmp
mov
sbb
insb
clc
add
pop
jge
push
push
sub
mov
call
int
sar
xchg
fdivp
xlat
pop
inc
data16
push
push
sbb
clc
inc
aam
pop
repnz
pop
and
int3
push
dec
inc
sbb
push
mov
xchg
rclb
mov
es
mov
cmp
mov
sarb
cld
stc
aaa
sbb
add
cltd
dec
cmc
or
mov
mov
shrl
or
aad
jle
add
mov
dec
inc
sub
sub
add
test
sti
add
cmc
xchg
adc
xor
add
sub
nop
xor
push
xor
mov
jae
ficompl
insl
sbb
adc
aam
pushf
sbb
cmp
into
mov
inc
int
pop
fstps
pop
in
pushf
lcall
xlat
inc
pop
popa
cmp
sub
lret
out
push
insb
call
sti
repnz
cwtl
ds
rclb
add
ljmp
and
daa
hlt
aas
aam
xchg
adc
std
stos
or
xchg
and
imul
mov
push
test
adc
lds
sti
sahf
repnz
lock
ja
in
int
sbb
testb
movsl
mov
dec
ret
mov
adc
out
xor
mov
lea
mov
pop
add
xchg
jns
sub
addr16
sub
push
les
leave
notl
fwait
loop
cld
add
in
jmp
enter
enter
aaa
in
in
xor
repz
inc
fs
lcall
shll
cmpsl
cld
out
mov
out
sbb
frstor
leave
mov
inc
jecxz
sub
je
push
mov
add
lahf
xchg
shl
xchg
xchg
jl
ss
dec
cmp
fldcw
ljmp
xor
mov
data16
outsl
lcall
inc
push
dec
fcoml
lcall
or
cmp
cwtl
sti
fwait
dec
ret
mov
pop
fwait
shr
mov
or
pop
scas
idiv
sbb
clc
in
loope
adc
fidivl
loop
dec
enter
pusha
push
mov
sbb
xor
out
test
xor
les
dec
sub
xchg
daa
rcrl
rol
aaa
lcall
lcall
or
mov
divb
cmp
loopne
mov
xchg
mov
push
rolb
aas
adc
fucom
sbb
jg
pop
negb
mov
faddl
mov
cmp
fwait
scas
mov
enter
xchg
mov
inc
cltd
fwait
loopne
xor
test
imul
andb
sub
xor
xchg
popl
lret
stc
movsb
fistpll
xchg
inc
and
sub
rclb
push
faddl
and
mov
mov
or
ss
in
adc
xorb
decl
xchg
jecxz
sub
dec
and
es
adc
xchg
idiv
dec
minps
stc
pop
dec
outsb
pop
jge
sbb
int3
and
scas
xabort
jecxz
mov
daa
sub
cmp
cmpsb
insl
cmpsb
xchg
sarl
adc
lods
int3
jae
sbb
imul
push
mov
xchg
xlat
das
rorl
pusha
mov
inc
and
xchg
jl
push
mov
cwtl
inc
sbb
or
out
in
das
jg
imul
test
dec
xchg
cmc
and
dec
dec
mov
loopne
inc
push
mov
rclb
inc
and
addr16
or
stos
adc
sub
push
pop
xlat
pop
out
aad
xor
fldenv
test
and
mov
mov
and
or
cld
outsl
lahf
pop
dec
das
push
test
out
push
xor
imul
iret
lret
clc
mov
cmc
imull
jae
or
xor
mov
mov
inc
pop
out
lock
add
push
mov
push
pop
add
jmp
xchg
jb
fld
out
lea
mov
js
clc
mov
sar
test
sbb
dec
mov
sbb
ljmp
aas
xor
aaa
cmp
push
xlat
pop
data16
add
mov
mull
mov
jne
jmp
mov
adc
sbb
mov
leave
jb
jbe
mov
loop
and
mov
ss
sar
mov
stos
orb
ret
mov
lds
ficomps
lret
into
xor
mov
jo
das
imul
mov
jg
adc
inc
das
cmp
pop
sub
je
rcll
mov
fidivs
push
lret
sub
pusha
and
lds
mov
sahf
pop
popa
pop
cmp
lret
loopne
or
sbb
ret
xor
add
inc
or
add
js
or
mov
cli
inc
inc
lret
mov
dec
aaa
inc
and
into
cmpsl
inc
mov
dec
mov
je
lods
lret
stc
cmc
arpl
xor
cltd
ret
ret
inc
ret
sub
push
mov
mov
movsb
into
out
ret
cmc
rclb
arpl
shrb
push
ljmp
outsb
movsb
mov
rorb
or
cmp
or
imul
nop
fadds
int
mov
leave
push
mov
jne
push
adc
imul
jecxz
jmp
jge
sub
or
shlb
data16
js
add
pop
stos
fucom
push
mov
mov
pop
mov
adc
sub
mov
fsub
pop
sub
aad
popa
mov
push
shll
dec
sub
lea
negl
lods
lcall
adc
out
xor
pushf
lock
and
mov
fnstenv
jecxz
push
cmp
test
jg
dec
or
lods
movsb
ss
mov
fs
out
xchg
mov
add
stos
mov
bound
mov
jb
push
cmp
pop
out
aam
cltd
pop
cmp
rcrb
cltd
shlb
in
pushf
push
call
dec
cmp
cli
cmp
add
or
pop
pop
mov
dec
mov
pop
jnp
lods
rcl
sbb
sbb
aas
or
push
cmpsl
sub
nop
aad
iret
pop
jge
ret
or
je
daa
cmp
push
aad
mov
lock
fiaddl
dec
pop
cmp
testb
sbb
mov
mov
stos
and
lock
and
aas
push
outsb
sub
out
shlb
jae
data16
mov
jo
push
lret
pop
outsb
in
jge
sub
jecxz
xor
lods
pop
test
inc
pop
out
or
xor
cmpsl
mov
xchg
movsl
cmp
push
mov
out
or
sbb
add
out
adc
add
mov
or
lret
mov
add
pop
frstor
push
pop
push
add
xlat
int3
xchg
in
ficompl
pushf
xorl
negl
pop
sub
loopne
or
inc
adc
sub
in
int
lahf
adc
jle
pop
stos
jnp
or
sub
cmp
jle
mov
nop
fcomps
in
mov
loop
xchg
incb
inc
xchg
mov
cmp
xor
insl
cmp
push
loope
sbb
movsl
call
out
sub
mov
and
inc
xchg
fstpt
mov
dec
adc
dec
add
rclb
test
jg
nop
jl
clc
sbb
sbb
push
push
rclb
sbb
test
out
loop
push
cmpsb
mov
stc
mov
cmc
scas
xchg
push
les
push
push
mov
push
out
hlt
out
mov
mov
or
aaa
or
dec
aad
xor
jecxz
mov
sub
out
xchg
adc
je
pop
inc
test
inc
ret
mov
lcall
pushf
push
jecxz
cmp
dec
ror
xlat
add
divl
push
out
into
nop
out
repnz
clc
or
mov
sbb
cmpsb
push
arpl
cmp
mov
clc
mov
mov
xchg
aam
clc
xchg
push
add
addb
cmp
stc
fnstenv
fs
outsl
aas
ja
or
ret
cwtl
sti
push
sbb
push
mov
outsb
lret
jecxz
add
mov
aaa
call
sbb
fnstsw
test
and
dec
xor
cmpsb
push
sbb
push
imul
in
in
mov
scas
lds
out
pop
call
hlt
leave
pop
in
in
mov
dec
mov
cltd
es
jbe
lock
push
ret
or
fcmovbe
out
pusha
push
xchg
movsl
cmp
xchg
and
mov
out
outsb
popf
or
out
sub
idivb
test
and
addr16
fcomp
or
cmp
sti
or
cmp
lock
movsb
fidivl
hlt
pop
inc
aaa
cli
rorl
mov
mov
jo
mov
push
add
and
add
dec
fstps
and
mov
jnp
mov
std
jne
aad
xlat
xchg
adc
rorl
adc
push
jbe
pop
outsb
ret
push
dec
mov
cmpsb
rol
mov
inc
lods
and
imul
cltd
sub
loope
cli
repnz
or
pop
push
test
push
clc
ffree
loope
or
test
pop
sbb
and
je
ffree
sub
mov
xchg
mov
jnp
dec
idivl
add
mov
jbe
inc
pop
jl
into
inc
sub
nop
xchg
mov
fbld
cld
jbe
sbb
enter
test
insl
mov
push
out
shrd
sbb
inc
pop
pop
outsb
imul
mov
xchg
inc
and
fistl
sbb
mov
pushf
jnp
outsb
in
sahf
loope
dec
push
mov
inc
dec
lds
setb
dec
pushf
hlt
or
test
adc
bound
les
jp
push
adc
xchg
or
mov
cmp
pop
enter
sbb
movsl
or
jns
sbb
loop
mov
dec
shrl
mov
cwtl
in
lods
popf
cwtl
cmp
fiadds
push
fnstenv
jl
cmp
sub
pop
mov
icebp
nop
out
out
sub
push
ja
repnz
inc
push
mov
shrl
inc
sbb
jmp
sti
ret
dec
fildll
jbe
push
mov
jo
sub
fs
push
aad
icebp
inc
sbb
xchg
stos
loopne
or
subb
jg
mov
xor
push
ret
mov
cltd
adc
fmul
and
xchg
es
push
push
ja
lea
mov
insl
lds
push
mov
push
pop
aad
push
test
xchg
repnz
lahf
leave
adc
test
cmc
xor
cli
jnp
push
add
adc
cwtl
lods
sbb
pop
insl
xchg
mov
clc
mov
jmp
mov
call
mov
fucomp
jne
sub
cli
jo
scas
mov
es
mov
jp
pop
aaa
cmp
inc
xchg
jg
negb
jae
inc
jnp
nop
xlat
or
aaa
sub
aam
scas
pop
je
and
push
and
rol
test
add
dec
cmpsb
out
cmp
jp
push
lds
stos
rorl
push
xchg
mov
mov
std
adc
push
lds
jg
and
push
inc
dec
aad
idivl
inc
xchg
lea
inc
je
rol
xorl
push
xor
lcall
call
adc
dec
shr
loop
cmp
in
adc
push
sti
mov
mov
lock
sub
mov
adc
imulb
rorb
lock
mov
cltd
pop
xlat
lock
std
mov
stc
out
hlt
mov
mov
bound
mov
in
or
add
lahf
push
sbb
dec
mov
sbb
mov
xor
inc
jo
sahf
jo
clc
jge
movsl
or
ss
rcll
push
test
iret
mov
push
mov
push
cmp
xchg
inc
incb
mov
dec
push
mov
ss
sahf
popa
in
daa
or
rclb
inc
push
jnp
stos
jo
stos
mov
push
push
loop
test
stos
sbb
stc
jmp
xor
fcmove
jne
into
in
push
shr
cmp
jnp
and
adc
add
iret
push
add
push
add
dec
fmull
ret
int
pop
repz
je
cmovae
out
scas
outsb
jp
lret
jne
int
dec
repnz
mov
sbb
daa
mov
xor
push
and
dec
lret
xchg
imul
and
out
ror
popf
stos
xor
shlb
sbb
xor
mov
fists
hlt
loope
inc
fwait
xchg
fidivrl
push
mov
call
std
and
popf
xchg
xchg
fstl
loop
int
aaa
jl
outsl
mov
ljmp
or
test
into
out
jmp
in
test
int
xchg
jo
dec
or
imul
mov
jle
xchg
clc
cmc
mov
dec
test
bound
pop
push
jg
nop
jge
std
push
cld
xchg
xchg
daa
iret
or
and
ret
in
scas
bound
call
ja
fwait
jecxz
mov
adc
pop
jmp
pusha
adc
xor
in
and
sub
rcrl
gs
inc
dec
cltd
mov
pop
adc
mov
xchg
push
int
inc
sub
push
jae
in
stos
pop
dec
iret
insb
push
dec
jno
loop
test
cli
and
cltd
rclb
jbe
test
push
sub
xchg
pop
and
incb
stos
stos
jmp
fisubrl
cli
add
sti
cmp
inc
or
rolb
push
cmp
shrb
js
into
mov
or
inc
je
mov
fwait
jo
insb
movsl
outsb
mov
and
pop
and
or
rorl
ss
movsb
stos
cmpsb
xchg
push
pop
mov
lcall
adc
add
add
or
and
adc
cs
jae
aam
lret
mov
jle
cs
subb
jne
or
xchg
je
cltd
push
roll
loopne
rcrl
loopne
dec
movsl
lret
nop
repz
xchg
push
fwait
fwait
sbb
cmpsb
dec
out
sar
rclb
push
pop
push
mov
testb
xor
fildl
pop
pop
decl
or
sbb
pop
dec
inc
sarl
dec
in
insb
out
sub
pop
cmp
lock
jg
jge
out
sti
inc
test
sub
xor
rorl
adc
mov
and
outsl
test
xchg
lret
stos
cltd
aas
cmpl
je
pop
jp
pop
ljmp
cmp
out
lcall
mov
jbe
dec
jmp
and
or
sbb
jl
lds
ret
cs
arpl
inc
ljmp
jmp
jnp
out
stos
in
out
shll
fldt
dec
push
jae
scas
orb
shlb
enter
popf
adc
test
fmull
sbb
aam
int3
lahf
aad
mov
jbe
jo
fildll
sbb
lret
mov
rorb
cltd
inc
cmp
jae
pushf
xor
pop
test
ficompl
cmpsl
aad
inc
add
nop
sbb
out
repz
add
adc
aas
or
popa
orl
mov
mov
mov
int
sbb
movsb
addr16
mov
loop
andb
addr16
scas
cmpsl
loope
mov
mov
xor
mov
or
iret
nop
jnp
test
mov
andb
divps
loop
mov
dec
movsb
xchg
mov
jg
and
test
cmp
adc
sarb
push
ss
jmp
or
mov
fiadds
fstps
cmpsl
or
ljmp
cmc
or
and
adc
insl
jne
sub
jle
popa
xor
lods
mov
inc
jno
outsb
imul
mov
rcll
mov
mov
lea
aaa
pusha
ds
jae
xchg
xor
mov
push
hlt
imul
sub
data16
pushf
inc
cmpsb
xorl
adc
pop
xlat
mov
and
dec
test
lea
or
imul
xor
data16
shlb
mov
push
lret
outsb
sbb
adc
cmpb
cli
ljmp
fiaddl
adc
lret
lret
mov
cmp
xchg
les
or
adc
fstpl
movsl
sub
in
pop
outsl
cs
mov
jmp
push
inc
sarb
ret
push
outsl
cmp
mov
push
fisubrl
mov
xchg
mov
loop
sub
add
xor
subb
cmp
xchg
int
pop
loope,pn
sbb
aas
inc
adc
cmc
jo
xchg
scas
lock
fsubrl
ror
push
pushf
cmp
mov
xchg
addb
add
pop
int3
lret
inc
imul
aas
or
daa
pop
cmc
cltd
js
jmp
repnz
daa
fldl
xor
sub
fwait
push
adc
inc
test
jge
movsl
loopne
cmp
test
xchg
mov
xor
xchg
nop
xchg
jbe
or
jg
dec
in
pop
out
stos
in
iret
push
in
xchg
movsb
sub
int3
mov
sub
rcrl
enter
push
xor
xor
mov
and
cmp
in
dec
fisttpll
cmp
fwait
enter
bound
pushf
nop
mov
int3
mov
decb
popf
ret
jns
scas
fsubrl
movsb
lcall
xchg
js
das
push
out
xchg
std
and
push
test
dec
and
cmp
loopne
scas
and
or
icebp
jg
pop
cltd
jno
sbb
enter
cmpsb
fisubl
nop
lods
aas
imul
jns
hlt
das
insl
sub
pop
sbb
test
cmpl
dec
stos
xchg
sub
aam
push
ljmp
pop
repz
out
daa
pop
movsl
xchg
test
cmc
jmp
or
mov
subb
mov
inc
mov
pop
test
and
shrb
adc
mov
cmp
and
sbb
arpl
das
loopne
xor
fistpl
dec
or
and
sbb
sub
mov
xchg
and
call
pop
or
cmpsl
jl
les
and
xor
dec
sub
ret
jg
xor
rcrb
in
insb
cmpsl
pop
inc
mov
into
or
adc
stos
and
iret
mov
idivl
lods
jns
adc
inc
mov
fildl
shl
sbb
stc
xchg
int3
mov
jnp
inc
in
push
dec
mov
mov
jnp
mov
jb
mov
movsb
shrl
cwtl
ret
aad
popl
lret
pop
push
jmp
sub
xchg
cmpsb
fstpt
fs
adc
pusha
ss
mov
std
insb
xchg
pop
jle
and
mov
pop
mov
mov
pop
mov
pop
mov
dec
pop
rol
cmpsb
sub
sub
dec
sub
push
xchg
shl
inc
outsb
adc
xchg
fisttps
cmpsl
push
inc
lcall
inc
cmpsb
inc
shl
cmpsb
fimull
cmc
cmp
xchg
jb
ret
xor
inc
adc
mov
mov
lcall
jne
mov
idivl
int3
and
sahf
and
loop
jb
cltd
mov
sbb
lods
das
mov
jge
into
jle
dec
outsl
les
dec
jp
cs
pushf
mov
fisttps
inc
jp
addr16
icebp
jle
xchg
cli
je
fimuls
pusha
push
icebp
lock
sti
ss
sub
jns
sbb
stos
out
push
mov
out
rolb
cwtl
mov
inc
lods
sbb
jo
fimull
faddl
inc
into
fwait
inc
sarl
test
in
mov
push
jl
xchg
lods
fiadds
cmpsl
lods
mov
clc
stc
stos
jg
es
mov
pop
xchg
test
jp
cltd
in
fs
jns
push
xchg
push
nop
inc
inc
in
cld
jne
and
aas
add
out
adc
xchg
push
testl
xchg
test
into
dec
movsl
ss
adc
jle
sub
inc
push
mov
movsl
mov
ret
test
jns
out
cld
sub
inc
xchg
push
sub
iret
loope
inc
jle
add
dec
pop
xchg
jg
aas
jne
adc
aad
xor
es
icebp
pop
lock
sub
rclb
jne
push
sahf
in
mov
or
sub
les
dec
mov
imul
lock
vxorps
dec
repz
std
sub
sbbl
cltd
adc
cmpsl
nop
aaa
pop
push
jl
cmp
jmp
lret
add
lea
sbb
dec
insl
cmp
mov
sub
dec
out
and
int
xchg
push
push
add
ret
out
mov
mov
and
call
lds
rorb
fstpl
sub
or
arpl
dec
jg
pop
lock
and
call
pushf
mov
movsl
inc
adc
pop
test
push
test
sbb
in
pop
jnp
or
je
bound
xor
fisubrs
mov
in
int
outsb
and
dec
jl
mov
add
mov
clc
pop
xchg
and
pushf
in
lock
jl
adc
add
push
dec
xchg
shll
sar
jnp
jp
arpl
push
adc
dec
outsl
push
lret
addr16
insb
enter
xor
js
subb
addr16
popf
jns
or
andl
push
ds
sub
notl
cmp
mov
clc
scas
loop
int3
loopne
jle
cmp
pop
mov
fs
adc
repz
jae
nop
rorl
jnp
sub
movsl
fildl
andb
and
pop
repnz
enter
out
loope
test
stos
stc
popf
xchg
adc
sbb
imul
scas
cltd
outsl
filds
xor
les
adc
stos
stos
adc
scas
inc
jmp
dec
jge
outsl
incl
shrl
andl
push
fistl
enter
push
xor
loop
xor
jge
mov
in
xchg
repnz
pop
int
loop
adc
push
stos
and
cmpsl
pop
fisttpl
popa
or
mov
or
cmp
data16
filds
sub
cmc
mov
shll
mov
mov
xor
add
inc
mov
adc
jno
add
popa
daa
xchg
test
add
lea
test
dec
xchg
mov
lock
jge
enter
ljmp
jge
mov
lods
popa
add
xchg
dec
jo
jb
scas
and
leave
sarl
vsqrtps
lret
sbb
call
int
fstp
push
add
cltd
inc
stos
in
pop
mov
adc
dec
gs
or
nop
ljmp
and
shufps
rcll
mov
int3
push
xchg
cmp
sbb
push
pop
ret
movswl
cmp
in
cmc
adc
adc
sbb
jg
push
mov
adc
leave
popf
shrl
sub
jp
lea
xor
cmp
js
fisubrl
fadd
scas
mov
or
cmp
xchg
cmpl
xlat
outsb
cmpsb
or
mov
lods
pop
cmpsl
out
sub
outsl
cltd
cmpl
clc
jno
fsubl
mov
add
sti
ljmp
xor
ss
call
pop
add
test
iret
cmp
mov
push
push
inc
xchg
rcrl
cli
xchg
mov
stos
loope
mov
dec
xor
sahf
rorb
push
lret
sbb
pop
fildl
push
sbb
mov
sub
test
inc
mov
iret
pop
sbbl
xor
lock
pop
lahf
xlat
inc
sbb
and
or
mov
jg
insb
outsl
adcl
mov
push
sti
leave
pop
adc
xchg
jbe
out
pop
out
in
shlb
fwait
adc
subl
sub
mov
ja
push
das
es
inc
push
jbe
xchg
out
mov
addr16
fisubrs
push
loopne
mov
xchg
test
cmpsb
sbb
mov
mov
popa
and
das
test
push
in
scas
bnd
mov
mov
fwait
stos
sbb
mov
in
addr16
cmp
jp
roll
or
adc
or
mov
loopne
in
lea
xchg
sub
adcb
aad
mov
push
movsb
and
loopne
xorl
stos
aad
dec
icebp
lahf
bound
xchg
xor
add
in
out
repnz
cli
xor
dec
ror
jmp
add
rorb
pop
xor
push
or
xchg
mov
insb
mov
pushl
or
loopne
mov
ljmp
push
sbb
inc
leave
cmpsl
mov
lret
push
arpl
jo
enter
mov
popa
ret
in
dec
inc
adc
rcl
cwtl
xchg
dec
cmp
fcompp
sarb
jnp
fcoms
ret
lret
pushf
push
mov
stos
hlt
std
movsb
testl
movsl
pop
insb
test
xor
push
pop
outsb
pop
mov
ja
clc
dec
in
push
aas
insl
mov
popa
fimull
fisubrs
cli
sahf
sahf
and
xor
cmc
sbbl
dec
orb
insl
inc
loop
imul
cmp
or
les
or
cmp
push
mov
mov
clc
sbb
fnstenv
add
ljmp
inc
shrl
lret
pushf
daa
inc
add
mov
pop
jl
repz
add
jmp
fildl
in
lret
outsl
clc
jno
out
xor
jl
sbbb
popa
aaa
js
and
xor
xor
movhps
sub
cmp
outsl
lea
icebp
xor
xchg
ljmp
aas
jae
lods
loopne
and
pop
sbb
lods
inc
orl
sbb
fnstsw
push
ds
jb
pop
iret
pop
jl
lahf
push
negb
movlps
dec
je
inc
mov
mov
cmp
js
sbb
stos
test
lcall
add
xor
pushf
jmp
mov
idivb
hlt
mov
cmpb
insb
sti
jb
and
cmpsb
adc
fadds
insb
dec
push
cwtl
std
jge
cmp
jp
mov
xchg
popa
cltd
push
jp
jle
or
repnz
sbb
rcrl
jb
xor
jbe
out
mov
pushl
fs
jnp
pop
test
fcompl
icebp
xchg
call
incl
mov
insl
test
into
ja
stos
loopne
out
das
cmpsl
xchg
fisttps
xchg
stos
ret
fwait
test
jmp
popf
ds
sbb
mov
mov
cltd
nop
loopnew
aam
dec
cli
rolb
into
sbb
pushf
add
movsb
shr
xchg
jg
rolb
dec
pusha
ja
stos
in
bound
push
into
add
dec
mov
jno
ljmp
inc
scas
andb
mov
inc
and
pop
dec
test
inc
imul
cli
ret
pop
dec
add
and
pcmpgtw
xchg
jge
nop
subl
mov
lahf
adc
call
xchg
sub
icebp
clc
loopne
mov
fwait
pop
sub
mov
scas
pop
lret
stos
pushf
or
lret
sahf
scas
cmp
dec
jl
aaa
jns
push
add
fs
aaa
lahf
je
dec
adc
and
push
push
outsl
jnp
mov
cltd
mov
and
es
mov
arpl
jg
cli
and
iret
pop
mov
cmp
inc
xchg
dec
xchg
frstor
aad
mov
push
jg
cli
cmc
sbb
adc
scas
xor
push
or
insb
stc
icebp
out
subl
out
mov
nop
movsb
mov
xor
test
lods
inc
ret
jae
shr
sbb
sub
fs
shl
mov
xor
dec
push
rcrl
outsl
push
pop
or
mov
mov
das
shr
xor
call
repnz
test
jp
fcmovnu
shrl
lea
and
sub
lds
test
hlt
pop
mov
jle
ljmp
leave
inc
in
bound
ficompl
loopne
sbb
pop
jnp
mov
pop
xor
mov
jnp
push
cli
ret
jmp
adc
xchg
mov
lret
lods
int
add
jmp
aaa
ss
dec
fiadds
mov
adc
movsl
push
xchg
add
movsb
test
xchg
xchg
cmp
rclb
inc
mov
ja
mov
push
xor
jne
lea
call
int
in
cli
push
fst
outsl
pop
bound
jge
sbb
in
add
dec
fadd
mov
orb
mov
ret
mov
ss
mov
scas
xor
lods
xchg
pop
clc
bound
in
sbb
iret
push
nop
movsl
inc
and
mov
adc
cs
lea
lds
nop
sbb
mov
sbbl
sti
hlt
or
lahf
cli
icebp
icebp
inc
or
jns
cld
jb
or
mov
add
sub
ret
jns
push
cmp
adc
fs
lds
fs
jnp
frstor
inc
inc
lods
mov
sbb
push
test
lcall
je
stc
sub
adc
loope
loopne
shr
xchg
mov
cmp
rcr
xchg
ja
outsl
je
dec
pop
xor
push
cmc
lock
jg
push
add
xorl
popf
sub
fisubl
rclb
and
ds
xor
pop
pusha
fwait
and
or
jae
sbb
cmp
test
xor
mov
fadds
lds
adc
nop
daa
rcrb
xchg
add
pop
lret
or
les
mov
or
adc
jmp
xchg
imul
or
adc
aas
movsb
pop
fs
pop
inc
push
or
pop
cmp
dec
inc
sub
mov
std
push
jmp
pop
pop
scas
stc
fsubl
jns
cli
xor
cmp
das
push
outsl
aam
int3
jmp
jp
sbb
push
decb
in
outsl
mov
cltd
pushf
sbb
imul
xchg
xchg
in
and
leave
adc
cs
cmp
movsl
xor
xchg
imul
sti
or
scas
int
jg
push
ret
or
js
push
lea
fldt
cmp
popf
and
pop
scas
fsubs
xor
rcll
mov
ss
ficoml
sub
jnp
and
mov
iret
push
add
dec
sbb
sub
mov
jmp
pusha
add
jl
xor
sbb
rcrl
popa
movsb
mov
lcall
bnd
mov
inc
jns
ja
xor
mov
xchg
mov
sbb
jmp
mov
sbb
cltd
pop
xor
and
sahf
dec
add
icebp
in
or
lds
add
inc
pop
loopne
and
add
xlat
fdivs
popa
cmp
or
xor
ljmp
push
jge
push
call
test
fcoml
sbb
pop
into
inc
push
mov
mov
jne
push
adc
fwait
mov
dec
psrlw
int
add
repnz
xchg
daa
fs
xor
into
bnd
xchg
mov
popa
or
fists
pop
cmc
cli
sarb
shr
sti
repnz
sarl
inc
mov
loopne
clc
inc
outsl
rorb
adcl
sub
pop
imul
mov
mov
cli
lret
mov
cmc
imul
aaa
jle
mov
xchg
dec
cltd
dec
stos
pop
aad
sar
mov
shlb
jmp
sub
insb
sbb
out
fwait
ret
outsb
and
movsb
arpl
or
push
aad
leave
or
add
loop
push
cmp
xchg
shl
ja
int
push
movsl
test
mov
or
and
movsl
pop
shrl
rcrb
movsb
add
sbb
loope
pop
pop
cmpsb
cs
rolb
shr
fistps
add
inc
cltd
lret
int3
test
popa
jne
fdivrs
dec
push
mov
mov
gs
xorl
sbb
push
movb
jl
incl
push
or
fs
mov
out
das
adc
sub
pop
mov
psubusb
arpl
iret
cltd
push
imul
loope
in
mov
stc
cmp
pop
mov
arpl
cld
jbe
add
xor
jne
cmp
popf
scas
mov
jbe
add
xchg
mov
mov
stc
dec
xchg
inc
mov
inc
sbb
hlt
push
xor
insb
push
ror
cmp
cmp
mov
mov
cmp
mov
cmp
aas
mov
into
cmp
xor
add
gs
mov
mov
loope
mov
jl
bound
inc
push
cmp
sub
push
sti
outsb
push
pop
sarl
fistps
je
arpl
push
push
int3
daa
in
imul
and
mov
adc
bnd
sbb
fcompl
mov
jno
mov
nop
loop
and
cmp
pop
sub
in
sbb
jo
dec
pop
movsb
cltd
mov
aas
sbbb
push
loope
ds
fs
aam
cmpsl
push
inc
ds
pop
xchg
inc
mov
insl
sbb
cs
cmp
adc
pop
adc
ja
movsl
fisttps
hlt
mov
adc
mov
push
jmp
fmuls
mov
jo
fdivs
scas
push
subb
aad
loope
dec
lcall
in
sarl
dec
lcall
mov
addr16
xchg
pop
mov
cmp
mov
xor
cs
mov
aad
mov
dec
sahf
fsubp
movsb
mov
jo
fidivrl
outsl
xchg
adc
dec
insb
fldt
push
testb
sti
ds
idivl
push
jecxz
push
popf
gs
inc
jb
jo
xor
int
push
mov
push
push
ret
cmp
int
jo
test
mov
and
hlt
dec
fptan
fidivl
mov
mov
sarl
incl
rcrl
lods
add
mov
ljmp
sub
ljmp
xchg
dec
cld
lret
push
sbb
test
mov
mov
lcall
test
sbb
sub
cmp
fs
and
gs
dec
addb
ret
push
call
push
dec
sub
xchg
in
add
sbb
add
aam
lods
and
je
repnz
pop
sarb
mov
ret
mov
mov
xor
mov
add
inc
sub
pop
jne
xor
loop
lods
pushf
fdivs
and
mov
or
or
int
les
or
push
add
rclb
dec
test
cld
imul
test
sbb
repnz
sub
inc
test
add
jae
repz
add
push
sub
adcl
mov
imul
inc
aas
dec
fsubrs
inc
imul
jb
mov
pop
pop
and
cmc
in
repz
popa
loop
or
pop
pop
pushf
sti
jne
xchg
push
sbb
inc
sbb
or
outsb
sbb
mov
mov
iret
jbe
inc
pop
mov
in
mov
nop
imul
push
mov
xchg
push
iret
xchg
testb
pusha
loopne
rolb
xchg
push
or
inc
and
lcall
enter
jns
sub
fimuls
cmp
or
fdivs
pop
data16
or
dec
or
inc
cltd
cltd
pop
je
fiadds
fldcw
pop
fildll
dec
fidivs
addr16
loope
pop
jnp
jb
jo
sbb
addb
mov
imul
popl
push
test
or
decl
adc
dec
pop
and
mov
in
jmp
popf
xchg
mov
push
loope
or
xor
push
insl
out
fwait
mov
orb
xor
insb
push
adc
fsts
adc
pop
fadds
movsb
pop
mov
insb
pushl
jecxz
pop
mov
insl
lcall
fidivrl
push
dec
pop
xor
lods
enter
xor
cmc
subl
mov
aas
shlb
cmp
popf
jns
rol
ds
test
dec
push
mov
mov
push
fcomp
jg
xchg
jmp
push
scas
fwait
jo
hlt
addr16
cli
cmpsb
push
xchg
push
movsl
fstpl
mov
repnz
movsl
push
jmp
xor
enter
je
jmp
inc
add
xlat
sbb
lock
sub
mov
xchg
in
hlt
lcall
cmp
daa
loop
mov
js
gs
xchg
hlt
and
xchg
int
stc
push
jne
sub
xchg
or
pop
mov
int3
cmp
inc
add
and
popf
sub
clc
jnp
mov
lret
mov
or
mov
pop
dec
pop
jnp
mov
into
aaa
std
add
push
push
enter
dec
cmc
jae
xchg
cli
inc
sbb
movsb
scas
pop
xchg
dec
adc
or
xchg
call
pushf
dec
mov
pop
sbb
sub
xchg
and
jl
and
cmc
idivl
sbb
adc
out
inc
imul
push
xlat
jmp
frstor
filds
lock
mov
cmp
cmp
jp
pop
sbb
jns
inc
aad
lea
jge
jl
adc
mov
out
add
cmp
std
pop
ja
pop
mov
cltd
inc
push
mov
push
add
xchg
push
cmc
les
fcoml
idivl
popa
or
jle
fldl
pop
rcrb
faddl
sbb
sar
adcb
fucom
jns
or
shlb
rcll
jae
retw
je
adc
sti
cld
xor
sub
jle
sub
cmp
pop
popf
inc
fsubs
pushf
rcll
shrb
mov
test
xchg
xor
xor
pop
jo
xor
test
jbe
pop
jbe
das
add
dec
aas
int
fs
xchg
sti
inc
gs
jb
jmp
adc
sbb
jnp
xchg
stc
sbb
sarb
fwait
cmp
jp
sbb
and
ror
imul
or
jae
outsl
test
dec
pop
xchg
push
push
in
lds
mov
jbe
inc
add
jg
jae
mov
fdivrl
fwait
incw
push
je
bnd
fildll
rorl
mov
mov
mov
pop
fstps
push
out
mov
jo
pop
in
sub
sbb
xor
call
sbb
repz
pusha
adc
pop
rolb
pop
adc
cmc
fdivr
outsb
mov
scas
dec
push
mov
pop
fxch
insl
fsubs
sbb
push
xorl
outsb
lcall
in
fildll
or
fsubrl
mov
push
sbb
incb
sbb
inc
negl
adc
lds
out
pop
and
pop
loopne
ja
push
or
xchg
mov
leave
inc
push
jno
std
das
sbb
push
lds
mov
xchg
dec
out
aad
or
pop
loopne
lods
push
iret
fadds
add
pop
popa
or
push
jb
and
sub
test
stos
repnz
mov
scas
popf
pop
lcall
add
out
or
lds
add
pop
mov
mov
sub
push
fsubr
repz
int
ror
icebp
mov
roll
and
xor
cmp
int
cmpsb
shrb
cmpsl
dec
adc
cmc
jmp
icebp
inc
bound
xor
fcompl
mov
and
pop
inc
aas
dec
push
sarl
dec
mov
xor
fnstcw
cwtl
mov
out
cs
cwtl
mov
js
sar
inc
enter
arpl
inc
pop
dec
xor
sbb
add
dec
add
inc
int
inc
sbb
or
in
xorb
ret
mov
push
fsubl
sbb
mov
decl
loop
aaa
in
xor
xchg
pop
popa
stc
mov
fdiv
gs
push
inc
inc
inc
jl
out
out
clc
xchg
jnp
pop
inc
dec
pop
jmp
inc
pop
scas
in
push
ja
rcrl
es
sub
lret
mov
in
inc
dec
adc
cltd
pop
mov
cltd
repnz
push
out
cmp
movl
mov
sub
ljmp
cmc
sub
xchg
mov
add
enter
aam
inc
xchg
fsubl
cmp
addb
subb
shll
and
dec
mov
or
inc
ret
sub
jecxz
mov
sub
lahf
jo
push
adc
cmp
pop
adc
xchg
mov
push
cwtl
test
mov
dec
sbb
scas
shlb
push
out
or
jge
aaa
inc
test
or
aaa
xorl
push
sub
dec
cmp
frstor
mov
sbbl
pop
mov
in
jbe
and
int
mov
add
xchg
fs
call
inc
jns
xchg
mov
gs
out
mov
sub
mov
imulb
mov
cmp
test
mov
loopne
dec
cmpsb
xor
mov
mov
cmp
aaa
int
cs
fnop
adc
rclb
stos
and
fiadds
xchg
repz
adc
loope
or
ret
outsb
add
mov
les
cmc
adc
add
pop
iret
scas
mov
or
pop
icebp
mov
push
or
repz
cmp
es
addr16
arpl
cmc
mov
out
lds
cli
jp
fsubrl
mov
xor
jle
pop
and
pop
add
sub
inc
mov
in
in
jae
or
rcll
sbb
dec
aas
mov
addr16
popf
pusha
jecxz
sbb
or
pop
daa
mov
es
in
gs
and
cwtl
lock
clc
mov
inc
pop
dec
xor
jno
test
fiadds
push
dec
push
shll
cmp
sbb
jne
sub
push
sti
lock
and
aaa
pop
mov
jecxz
scas
xchg
or
sbb
inc
push
cs
pop
or
adc
and
push
and
cmp
mov
comiss
sub
mov
enter
sbb
out
cli
push
add
repnz
jae
loop
pop
inc
mov
stc
repnz
lcall
loope
mov
scas
cmp
adc
mov
mov
insb
test
ret
sti
cmp
inc
lock
rorl
and
jo
popa
sti
mov
push
rorb
push
addr16
cmpl
dec
dec
imul
pop
movb
mov
insl
xchg
adc
mov
xchg
addr16
sbb
dec
xchg
jne
fimuls
jmp
dec
pop
inc
icebp
sub
lret
fs
rolb
loop
int3
mov
rclb
xchg
clc
repz
adc
clc
mov
mov
sbb
loop
enter
gs
mov
fs
popf
lret
fsubs
mov
lods
dec
pop
mov
mov
push
leave
les
movl
sub
cwtl
jo
add
int3
xchg
xchg
jmp
xchg
scas
mov
scas
push
fcmove
sbb
call
gs
or
ds
inc
lea
inc
ret
scas
push
jne
repz
push
jle
pop
stc
cmpsb
jae
mov
popa
and
popa
fs
xchg
push
movsl
stc
push
cld
and
or
mov
push
cld
cmp
mov
add
in
ds
outsb
movsl
fisttpll
gs
sub
pop
fucom
test
xor
lods
xor
pop
xchg
and
lock
or
popf
pop
inc
jle
sbb
push
jbe
pop
and
lods
clc
unpckhps
loope
or
scas
ss
xor
fsubrl
ret
xchg
pop
addb
jmp
inc
push
xor
fsubl
or
add
lret
push
fimull
loope
sbb
and
xchg
dec
sarl
push
dec
cmova
out
cmpl
leave
das
xor
xchg
popa
jno
and
clc
fildl
push
ret
fcmovb
lds
push
fisubrl
adc
xchg
xorl
dec
jae
push
lods
mov
jno
out
popa
std
push
addr16
dec
imul
test
xor
in
movsb
fstp
fadds
outsl
subb
daa
jnp
pop
mov
or
lahf
sub
jb
je
inc
rclb
data16
cli
je
pusha
fidivs
inc
dec
adc
xor
dec
inc
mov
or
or
xor
dec
pop
xchg
test
add
hlt
mov
fnstenv
imul
xchg
lock
push
cmp
jmp
nop
sbb
push
imul
add
mov
fstl
cmp
xor
mov
add
sub
ja
dec
pop
lds
mov
shlb
sahf
mov
rcrb
jns
mov
dec
or
shll
fcoms
js
movsb
pushf
dec
push
jnp
jp
dec
jmp
jne
testl
adc
cmp
cli
ljmp
xor
jl
in
xor
xchg
pop
cmp
mov
xchg
js
add
mov
add
mov
mov
into
jo,pt
adc
push
xor
stos
pop
aad
test
iret
stos
mov
lret
popf
and
out
js
jg
and
pop
out
pushl
xor
xchg
or
dec
ret
test
adc
out
mov
jns
cmpsl
leave
inc
fs
and
sub
cltd
inc
sti
push
jb
and
mov
or
adc
cwtd
and
je
cmc
ret
cmc
shrb
arpl
movsl
dec
and
mov
lea
adc
in
cltd
insb
inc
sub
lret
inc
dec
mov
push
imul
rcr
inc
fsts
mov
xorb
lret
dec
lahf
scas
pop
outsb
nop
mov
jge
sbb
pop
mov
pushf
mov
xor
stos
pop
push
add
pop
pop
jo
mov
in
fstpt
loop
mov
lds
insb
cld
stc
mov
insb
mov
push
test
mov
inc
xchg
shrl
cmpl
aaa
popf
or
inc
jmp
jne
mov
mov
inc
add
popf
fisttpl
loope
ds
pop
pop
or
pusha
xchg
ss
jne
or
outsb
mov
add
pop
and
push
fisubrl
fs
xchg
movsl
cld
cltd
jecxz
fisttpl
lds
dec
insb
sbb
and
xchg
fbstp
add
sub
gs
mov
pop
sbb
adc
fsub
arpl
push
add
movsb
xor
cwtl
test
stos
sub
adc
aad
sbb
andb
orl
movsb
fisttps
add
outsb
insb
jo
int3
mov
push
push
rcrb
mov
test
mov
fnstsw
pop
icebp
pop
cmc
fldl
into
enter
sub
ds
mov
out
into
sbb
jg
adc
les
fs
cmpsl
mov
setns
test
int3
popf
mov
pop
pop
arpl
dec
outsb
jns
rep
mov
and
inc
ljmp
push
xor
cmp
or
call
push
push
lcall
repnz
fidivl
insb
sbb
mov
cmp
cmpsb
pop
jecxz
sahf
leave
push
fnsave
mov
xlat
mov
lcall
imul
test
rolb
pop
imul
insl
jecxz
jbe
fistpll
test
nop
loop
imul
arpl
subl
xchg
add
pop
sbb
cmpsb
cmpsb
mov
pop
jmp
cmpsl
sub
jmp
aad
sbb
out
imul
ljmp
cmp
jno
push
lahf
rol
dec
popw
sti
jbe
mov
adc
add
es
and
mov
out
loopne
sahf
dec
jbe
xchg
stos
movsb
mov
out
cmp
into
repnz
xor
xchg
pop
inc
sbb
mov
inc
mov
mov
mov
mov
pop
or
fdivrp
lock
ret
js
jne
jo
adc
fs
lret
cmp
aad
cmp
cld
mov
in
sbb
mov
push
mov
movsl
mov
add
sbb
stos
in
mov
into
sbb
rolb
cli
mov
call
fistpl
mov
add
or
push
daa
pop
xor
in
add
xor
inc
or
cmp
and
sbb
jge
pop
outsb
iret
gs
outsl
and
shll
lock
xchg
cmpsb
adc
pushf
inc
insb
out
or
cwtl
shrb
movsl
jne
pop
or
popa
jge
dec
aad
loop
cmp
fadds
dec
sbb
inc
jp
sarl
fwait
xchg
imul
xchg
insb
sub
cmp
mov
mov
add
je
rcl
mov
inc
fcmovu
int
loop
mov
xor
inc
out
int
div
inc
scas
dec
or
shl
jl
and
adc
sti
pop
test
cld
cmp
stos
mov
xchg
jbe
cmp
fcoms
and
lea
xor
std
pop
cmp
xchg
push
sub
in
mov
sub
mov
push
xor
cmp
adc
into
xor
data16
stos
in
mov
xchg
add
mov
push
into
icebp
cld
mov
push
lods
test
mov
pop
testl
lods
pusha
pop
hlt
pop
lret
roll
and
cwtl
andl
insl
pop
mov
adc
pushf
movsl
rcrb
out
sahf
adc
xor
fdivrs
sbb
jg
insl
data16
ljmp
sub
imul
das
hlt
fidivs
lcall
or
xor
pop
or
fwait
inc
jecxz
push
xor
hlt
sbb
mov
mov
mov
cmpsl
pushf
xlat
and
xor
add
xor
call
dec
loope
jmp
fldenv
cmp
arpl
out
mov
mov
ret
into
adcb
cmp
dec
and
inc
sti
icebp
negb
fwait
cmp
inc
clc
mov
sarb
pop
insb
sarb
xchg
and
nop
mov
xor
pop
xchg
xchg
or
in
lret
ss
adc
adc
sbbb
xchg
mov
push
xor
rclb
adc
test
adc
aam
push
dec
push
sub
add
sbb
cli
mov
sub
xchg
mov
pop
lods
data16
fsubrl
iret
mov
arpl
lcall
mov
cmpsl
jae
sbbl
rorl
add
scas
stos
add
in
das
sub
sbb
push
jns
out
xchg
sbb
push
call
std
test
ljmp
adc
xchg
dec
push
scas
je
cmp
clc
sub
xchg
cmp
push
int3
fwait
lret
mov
pusha
fsts
cltd
xchg
jge
mov
push
into
xor
jo
es
call
shll
repz
clc
stc
pop
insb
outsl
jno
pushf
stos
or
inc
or
test
and
repnz
xchg
mov
aaa
pop
pop
movsl
pop
es
dec
xchg
mov
push
push
in
pop
or
mov
sarl
sub
sbb
hlt
into
push
adc
mov
push
jge
andb
and
je
pop
pop
sbb
stos
xor
mov
sub
mull
or
mov
sbb
or
hlt
jecxz
lds
jo
xchg
fstpl
dec
movsb
dec
int3
arpl
inc
test
xchg
xchg
xchg
mov
test
push
add
xchg
jp
rcr
jno
pop
xchg
popf
mov
jmp
fsubrl
add
and
std
mov
and
xchg
mov
pop
cltd
sub
adc
xchg
xor
fsubrs
loop
push
dec
outsl
adc
addr16
shll
fdivl
lret
xchg
test
sbb
xor
mov
cmp
stos
lret
sub
jl
jb
add
jbe
xchg
pop
jge
mov
jbe
xlat
lret
inc
jecxz
push
lea
add
xor
mov
insb
xchg
mov
test
daa
ja
mov
scas
add
lahf
arpl
loope
lahf
gs
aam
sub
sub
cld
xchg
jo
jmp
hlt
loopne
and
leave
xor
mov
pusha
add
pop
add
xchg
sarb
mov
mov
fisubrs
push
outsl
arpl
mov
pop
dec
stc
and
fs
push
test
add
push
mov
out
testl
or
pop
cmp
mov
stos
sarb
push
jmp
mov
xchg
lahf
in
pop
cmp
add
ret
pop
add
test
mov
fisubrs
out
pop
cmp
fistpl
pop
sbb
dec
hlt
aad
js
sahf
dec
dec
xor
aas
les
pop
push
jae
ret
xchg
or
add
into
mov
inc
or
test
test
aad
or
cmpsb
jmp
jp
lret
popf
mov
cmpsb
stos
sbb
sbb
sti
jne
sahf
in
shlb
xor
adc
test
idivl
mov
push
ret
push
cmc
inc
push
mov
sbb
pop
and
pop
dec
cli
clc
inc
ljmp
push
repnz
loope
cs
fs
cld
loope
mov
sahf
insl
outsb
inc
mov
mov
movsl
flds
repnz
mov
jo
cld
pop
loope
mov
enter
mov
bound
repz
adc
xor
add
add
pop
push
loope
ficomps
mov
in
iret
js
cmp
cmpsb
ljmp
dec
stc
stc
xchg
mov
mov
or
adc
mov
pop
mov
out
cmp
fnstsw
fwait
xor
daa
movsl
mov
fs
jge
mov
add
mov
loope
mov
faddp
mov
jle
sbb
test
push
sahf
out
leave
ljmp
aas
xor
sub
das
das
or
das
xchg
cs
inc
jne
inc
aas
mov
imul
cmp
addr16
sub
cmp
lahf
push
enter
fldenv
outsl
pop
xor
push
dec
xchg
xor
add
mov
mov
int3
sub
adc
cmpsb
push
inc
ficomps
stc
cmp
mov
dec
sbb
jnp
sub
jb
push
jno
popa
lods
stos
nop
rorb
pop
and
jecxz
lods
idiv
sub
addl
push
jle
ret
lret
popa
or
xor
mov
int3
cltd
fwait
or
sbb
shlb
push
cwtl
lret
testl
push
test
scas
mov
fisttpl
sbb
mov
rep
or
out
push
cmp
pop
jp
icebp
int3
adc
sbbl
mov
mov
push
and
mov
inc
popf
cmp
mov
cwtl
jle
bound
shr
nop
bound
adc
flds
arpl
xor
idivl
ret
jne
mul
mov
pop
xor
dec
pop
test
dec
aas
sbb
mov
push
or
loopne
add
mov
rcrb
lcall
sarl
xlat
pop
mov
icebp
int3
cmp
sti
cwtl
mov
jne
ja
dec
das
add
fistps
cmpsl
lret
sub
mov
out
or
sub
scas
in
pop
xor
icebp
mov
xchg
je
scas
adc
mov
pinsrw
xchg
sub
jne
dec
sub
jae
dec
add
and
xchg
jno
clc
cmp
lahf
sub
gs
imul
lret
mov
les
pop
cmp
push
std
push
je
pop
mov
popa
jle
push
adc
inc
xchg
add
lea
aaa
lret
shrl
push
shrl
mov
cltd
loopne
push
das
cwtl
into
mov
cmp
xchg
pop
dec
jno
insb
cmp
adc
inc
and
scas
scas
loop
mov
add
jmp
xchg
inc
aas
or
inc
rcrl
ja
or
xlat
push
fldt
aaa
popa
idivl
popa
pop
jmp
aas
stos
xor
push
aaa
shlb
jecxz
adc
fdecstp
push
jl
dec
push
std
rcl
cmpsb
mov
sbb
mov
dec
sbb
lods
cmp
dec
fnstenv
movsl
sbb
push
pop
ret
pop
push
in
mov
mov
jno
dec
std
lock
dec
in
cmp
cmp
dec
jecxz
out
lds
bound
imul
push
inc
int
addr16
lahf
arpl
popa
out
dec
insl
mov
and
xor
inc
mov
push
lcall
lds
je
sbb
aas
les
call
push
notb
sbb
int3
ja
int3
lea
and
jae
cmpsb
fwait
imul
pop
adc
pop
mov
fwait
pushf
xor
jae
jmp
pop
jbe
les
mov
stos
jno
in
or
fwait
insb
pop
movsl
ljmp
and
add
stos
xchg
cld
and
ss
out
xchg
in
neg
xchg
push
add
mov
testl
jmp
xor
xor
push
test
dec
mov
xchg
adc
ja
pop
in
jno
dec
or
scas
adc
and
xchg
call
std
les
pop
cmp
push
mov
repz
mov
sub
push
sti
pop
cmpsb
add
jmp
stos
ljmp
xchg
mov
dec
lods
fwait
test
shl
dec
jmp
add
xchg
out
inc
ficompl
jb
and
mov
test
sahf
lds
adc
xchg
pop
movsl
dec
leave
imul
roll
aas
mov
adc
aam
mov
xchg
in
push
imul
jecxz
sub
test
jp
aas
std
cmpsl
fiaddl
pop
xlat
fisubrs
fisubrs
xor
fmull
jecxz
rcl
data16
mov
cld
fildll
or
lcall
mov
xor
jnp
bound
sub
test
jae
jmp
cmp
ja
adc
in
mov
sbb
add
and
cmpsb
out
shrl
and
test
pop
jle
jns
jg
inc
popf
jecxz
stos
scas
ljmp
dec
mov
scas
mov
pop
and
call
in
pand
push
data16
sti
xlat
mov
dec
movsb
fcmove
xchg
adc
daa
rorl
ss
mov
xchg
add
xor
movsb
ljmp
das
adc
imul
dec
mov
ljmp
fsubrs
aas
cs
pop
es
pop
leave
mov
push
out
ficompl
push
outsb
movsl
inc
inc
xchg
addr16
and
pop
enter
cs
inc
mov
stos
and
lahf
data16
mov
mov
jl
sub
loope
jmp
mov
arpl
mov
push
cmp
mov
jmp
into
push
xchg
mov
adc
xor
and
loope
call
das
sbb
stc
cmpl
jne
cmp
push
mov
in
daa
out
pop
cmpb
sub
dec
push
sub
leave
divl
mov
pop
pop
bound
mov
popf
cmp
insl
fmul
call
dec
into
hlt
mov
popa
jne
xchg
cmc
mov
dec
pop
ds
imul
imul
jmp
int
dec
adc
mov
add
push
lods
mov
sbb
and
fnstsw
jg
and
in
cmp
pusha
mov
fstl
sub
pop
adc
popa
cld
mov
fsin
fisubrl
or
adc
popf
out
loope
dec
sub
mov
add
pop
in
xchg
pop
rorb
mov
xchg
ja
mov
jbe
int
pop
dec
push
pop
mov
stos
pop
pusha
sar
sbb
adc
lock
mov
push
dec
mov
adc
nopl
loope
inc
mov
ljmp
dec
fisubs
cmpsb
out
sub
enter
clc
pop
fadd
cmpsl
dec
jns
test
mov
xchg
mov
daa
imul
out
insl
cltd
iret
test
imul
fdivr
inc
ljmp
sbb
add
lock
movsb
leave
fnsaves
mov
sub
test
jb
cltd
dec
adcl
test
sub
testb
cmp
pop
in
sahf
pushf
es
adc
sbb
dec
mov
adc
mov
fwait
mov
dec
xor
cs
add
dec
scas
in
pop
or
stos
push
adc
subl
test
lret
cmp
mov
inc
push
mov
add
insb
fcoms
pushf
shlb
lock
ds
lret
add
enter
push
mov
aas
xchg
push
push
and
pop
pop
adc
frstor
scas
cmp
pop
ret
push
push
loop
in
xchg
loop
out
mov
repnz
fstp
hlt
jo
xor
xchg
lret
sub
cmpsb
enter
and
push
and
dec
push
cmpsb
mov
aaa
or
inc
jecxz
clc
addr16
push
cmp
leave
in
daa
mov
jae
fistpl
inc
insb
pop
mov
cmp
xchg
lcall
movsb
out
lcall
sub
mov
jae
cmp
and
outsb
jge
imul
cmpsb
les
ljmp
test
adc
adc
fildll
push
inc
jnp
lret
pusha
mov
ja
scas
cmp
sbb
mov
cmp
addr16
or
cmp
aas
jo
in
aam
dec
rcrb
cld
scas
das
into
mov
insl
push
arpl
mov
sbb
or
and
sti
lods
and
add
push
and
mov
mov
addl
jno
aad
sbb
pop
lds
and
mov
dec
push
insl
jp
shll
inc
ljmp
popa
xchg
pop
fwait
gs
and
mov
xchg
push
xlat
xlat
lods
stc
out
xor
call
xor
pop
outsb
mov
add
push
mov
inc
bound
inc
mov
xor
in
jmp
jb
pop
add
out
cmp
mov
add
daa
jo
cmpsl
push
mov
sub
call
mov
xchg
stc
mov
scas
inc
jl
lods
push
push
fs
mov
and
test
cmp
push
jge
dec
xchg
sub
adc
mov
add
mov
lock
sbb
mov
int
loop
ret
and
lret
ret
pop
xchg
push
popf
xchg
cmpsl
dec
dec
lcall
xor
jae
add
sub
into
push
pop
lds
lods
mov
cld
push
aaa
lcall
outsl
pop
inc
sbb
sbb
xlat
mov
xor
fcom
jecxz
add
xchg
cwtl
ja
sbb
jmp
adc
pop
nop
cmp
mov
iret
mov
cld
lock
mov
push
aas
mov
xor
or
mov
adc
lcall
in
test
and
fsubs
dec
dec
fistpl
mov
aas
mov
sub
cltd
outsb
insb
lock
outsb
daa
fdivrs
push
push
add
fildl
mov
fs
bound
insl
lods
stos
sub
rcll
pop
je
jbe
lea
mov
lret
sbb
push
jno
das
out
sub
jmp
lahf
sahf
mov
int3
mov
adc
imul
pop
mov
xchg
mov
fwait
or
xor
jmp
xor
mov
cld
inc
or
jge
xchg
dec
cmp
movsb
lret
sub
loope
cld
jmp
aaa
popa
push
or
cmpsb
push
push
outsb
cmpsb
shrl
cmp
mov
adc
jnp
sub
sub
or
xchg
push
iret
jmp
mov
jmp
scas
sub
mov
cmpsb
in
inc
mov
daa
and
adc
inc
js
mulb
sar
fisubrl
cmc
test
xor
sub
xchg
mov
dec
xchg
aas
scas
sub
sub
in
in
xchg
in
aam
loope
in
mov
pusha
mov
pop
xor
mov
gs
and
and
cmp
bound
add
out
fcomps
mov
cmpsb
push
mov
rcrl
mov
in
cmp
pop
pop
adc
jmp
bound
mov
repnz
fstpl
dec
clc
dec
das
int3
sbb
ror
sahf
cvttps2pi
sbb
pushf
or
aam
jb
fidivl
dec
add
push
ja
test
xchg
scas
pop
daa
and
dec
stos
jae
enter
imul
shlb
push
push
push
mov
or
imul
xor
lret
xchg
sub
push
data16
xor
insl
or
pop
sti
add
filds
dec
lea
cmp
xchg
pop
bound
les
dec
dec
cli
jecxz
test
cmp
sbb
aad
cwtl
sbb
xchg
cmp
cmpsb
fdivs
xor
or
icebp
nop
addl
mov
or
shrb
xchg
stc
imul
jle
sub
fcompl
fisubl
and
and
out
and
imul
nop
mov
ja
insb
mov
inc
cmp
dec
in
ss
sahf
mov
or
mov
repz
jo
cld
sub
push
rcrb
push
sub
cltd
cld
and
outsb
xchg
fimuls
pop
xchg
in
je
stos
mov
pop
gs
pop
frstor
outsl
shr
adc
push
sub
in
ss
pop
orb
popa
lret
inc
pop
cmpl
or
push
mov
push
in
xor
xchg
jb
test
mov
repnz
or
mov
dec
and
test
pop
loopne
xor
adc
test
pop
lea
nop
sbb
pop
mov
outsb
mov
sub
nop
cs
dec
aad
sub
jb
or
mov
lahf
mov
push
sub
pop
aas
sbb
xor
cs
sbb
adc
clc
mov
add
fldenv
push
cmp
sarb
adc
add
loopne
fs
cld
push
jl
pushf
sub
add
jbe
inc
repnz
mov
inc
loope
dec
addl
inc
roll
adc
icebp
inc
mulb
and
icebp
leave
jg
popf
sti
or
mov
pop
addr16
xchg
lds
inc
jno
mov
jo
fcomps
inc
sub
sarb
mov
int3
test
and
imul
fmuls
insb
popf
out
cmp
loope
fs
sahf
push
mov
push
idiv
mov
test
mov
dec
popf
fisubs
inc
mov
js
loopne
xchg
in
mov
push
in
jl
mov
icebp
imul
mov
outsb
sub
pop
gs
pop
loope
pusha
div
and
cmp
and
add
add
xor
xor
out
ljmp
add
data16
hlt
scas
mov
jno
pop
lods
js
mov
loope,pt
xorl
mov
inc
sarl
xchg
inc
pop
popf
jns
cmpb
pop
lret
lret
scas
outsb
pusha
cmpsb
push
add
outsl
pusha
out
divl
mov
jno
or
cmpsl
push
fstpl
into
mov
idivb
xor
mov
les
xchg
decb
scas
fcmovu
sbb
push
xchg
fiaddl
adc
in
jecxz
push
xchg
cmp
test
cmp
adc
mov
or
fwait
outsl
stos
and
sub
data16
push
sub
rcrl
adc
push
es
hlt
inc
xchg
push
popf
out
pop
xor
mov
inc
clc
lcall
es
and
stos
add
popa
lret
mov
xchg
pop
in
pop
popa
scas
das
popa
sub
andl
jbe
mov
lcall
in
mov
pop
cmp
lret
lods
arpl
les
xchg
aam
jge
dec
jo
or
out
andl
xor
mov
mov
xchg
addr16
repnz
hlt
add
xchg
mov
loope
stc
xor
out
stc
lods
mov
test
jge
dec
hlt
mov
mov
inc
sub
mov
cmp
shrb
jmp
xchg
movsb
test
das
nop
leave
not
cmpsl
inc
adc
lahf
jp
pop
push
sahf
lods
setnp
int3
into
dec
movhps
jecxz
out
popf
push
add
pushf
inc
and
clc
mov
push
cmc
cmpsb
cld
mov
pop
mov
aas
push
movsb
inc
hlt
mov
js
fxch
push
aad
xchg
dec
test
xor
out
push
andb
mov
fwait
push
lock
gs
mov
mov
popa
xchg
iret
jmp
pop
inc
gs
notl
fwait
popf
ss
stos
sbb
inc
icebp
cmp
xchg
inc
jl
xor
hlt
xchg
data16
je
xor
sbb
push
mov
mov
cmpsl
pop
or
cmpsl
mov
sub
adc
push
adc
imul
add
lahf
pop
and
ds
mov
addl
xchg
mov
mov
das
sbb
pop
cmpxchg
in
xchg
mulb
mov
mov
fidivrs
scas
add
sahf
call
adc
addr16
enter
or
inc
cli
lods
pop
add
test
xor
xchg
sub
mov
fsubl
fcoms
inc
daa
pushf
imul
push
mov
bound
ja
jmp
sbb
or
mov
mov
rcll
rolb
test
int3
pop
test
jbe
cmp
xor
pop
fwait
lea
inc
decl
call
addr16
jbe
push
bound
ja
inc
jo
xchg
sahf
mov
mov
pop
inc
adc
push
js
dec
xchg
test
in
sbb
add
mov
pop
sahf
dec
xor
dec
pop
mov
stos
mov
mov
push
jns
dec
xor
cmp
sub
jp
ds
adc
das
lahf
rorb
and
add
addb
dec
ljmp
jo
mov
bnd
jno
aad
ret
cmpsl
push
out
push
scas
int3
pop
or
out
lret
fidivrs
loope
push
push
adc
xor
addb
xchg
cmp
jae
das
cmp
into
nop
pop
aaa
inc
fcoms
and
enter
daa
pop
sbb
cmp
pusha
std
pop
inc
lods
mov
mov
cmc
mov
adc
adc
ss
mov
inc
inc
jg
je
aas
xchg
adc
jl
pop
sub
into
and
pop
jae
or
out
cmp
mov
pop
cmp
push
push
data16
and
jp
loope
movsl
add
pop
fwait
lea
cwtl
cmp
sub
in
clc
pop
jmp
mov
sub
cmpsl
push
repnz
or
jl
cld
rcl
push
aam
vpshab
mov
xorb
fdivs
cmpsb
mov
fidivrs
shlb
and
xchg
movsb
inc
test
jmp
fs
lds
sub
imul
cli
filds
jmp
add
push
movsb
int
jecxz
fistps
adc
movsl
mov
inc
in
repnz
imul
out
xchg
shrb
and
aam
xor
in
mov
pop
aam
sbb
cmpsb
sub
push
xor
dec
sbb
into
addr16
jge
jmp
mov
mov
jne
outsl
jb
cmpb
cmp
and
and
jb
test
dec
xchg
jp
and
out
movl
mov
ret
add
lods
cmc
ret
das
jno
jae
mov
inc
out
loop
rcll
xor
and
xchg
daa
mov
mov
adc
jbe
ss
or
mov
ret
pop
and
sbb
gs
js
sbb
stos
fcmovbe
sarl
subl
sub
cltd
aaa
insl
in
cmc
popf
testl
icebp
clc
sub
pop
stos
ss
and
lahf
push
daa
rcl
jo
shll
jb
sub
fucomp
xchg
aaa
push
cmpsl
inc
and
adc
jno
fsub
add
inc
sbb
inc
ret
cmp
rcll
push
xchg
or
lahf
sbb
leave
or
cld
or
or
shlb
cmpsb
cltd
mov
add
rcll
inc
adc
jns
mov
iret
es
insb
rcpps
shrb
popl
fwait
shll
add
aaa
das
push
sarl
test
dec
pop
sbb
js,pt
js
inc
int
mov
ljmp
cwtl
test
mov
shll
movsb
mov
inc
push
rolb
and
add
xor
sbb
hlt
shrb
jb
jp
shrb
ja
test
loop
sahf
jge
addr16
pop
xor
add
xor
jo
push
push
in
mov
mov
test
push
fisttpl
loopne
dec
loope
inc
push
cmp
xor
test
nop
inc
jb
int
cld
test
movsb
cmp
sbb
movb
pop
les
in
loopne
pop
fdivl
jns
sbb
int3
daa
int
rorb
dec
xor
jns
scas
in
nop
cltd
gs
pop
dec
lods
cmp
lock
add
lds
mov
jp
inc
mull
rolb
decl
mov
sbb
fcompl
or
outsl
jne
cmp
cmovge
xchg
pmaddwd
scas
pushf
js
cmp
fdiv
mov
pop
ja
add
jecxz
mov
pop
xor
push
jl
and
ja
into
std
cwtl
cmp
mov
jno
inc
jecxz
cmpsb
mov
sbb
and
cmpsb
dec
mov
cmp
lea
dec
cwtl
aaa
adc
dec
mov
daa
push
sub
or
negl
test
dec
in
movl
mov
and
xchg
in
cs
dec
sbb
lahf
test
outsb
mov
xor
aaa
inc
sbb
sarl
sarl
cmp
xchg
mov
mov
orl
push
jns
sbb
jne
xorl
xor
lds
imulb
sub
in
cli
and
aaa
jle
cltd
fsubrs
mov
pop
in
lret
mov
inc
fistpl
adc
push
rclb
rorl
inc
mov
xchg
mov
stos
insb
out
cmp
ds
sub
mov
insb
inc
mov
cmp
addb
sub
push
lret
loop
sub
adc
iret
jbe
jbe
stc
ret
dec
aas
inc
scas
sarl
dec
pmullw
or
je
test
jmp
jne
mov
xchg
js
inc
sbb
xor
pushf
adc
push
lods
sbb
faddl
sti
push
cwtl
ss
sbb
cmp
lds
lret
mov
xchg
xorb
lods
insb
movsb
fisubrs
into
jg
cmp
addb
push
and
cwtl
cmp
xlat
hlt
outsl
stc
sub
loop
mov
arpl
dec
pop
lods
sahf
sti
je
daa
sbb
adc
aas
mov
mov
jns
add
fistpll
xor
cs
dec
es
mov
inc
jge
enter
rcrb
cmpsb
mov
mov
xchg
pop
push
enter
arpl
dec
es
repnz
out
xchg
stc
mov
dec
int
fdivrp
xor
push
mov
aam
das
mov
mov
pop
gs
xchg
js
push
negb
cmp
xchg
mov
sbb
loope
sub
jnp
sbb
inc
adc
or
inc
xchg
lretw
push
not
or
sub
xchg
rcl
je
fcoml
inc
sti
mov
jne
loope
mov
inc
dec
adc
rol
xchg
adc
adc
inc
pop
imulb
pop
hlt
fisubrs
ljmp
pop
mov
mov
inc
mov
pushf
mov
movsl
mov
pushf
rcrb
xor
insl
imul
fists
fstps
sub
int3
cmp
mov
push
bound
or
lcall
mov
popa
sbbb
jbe
and
cmpsb
test
xor
in
add
pop
fdivrs
inc
int
pop
test
mov
fs
xchg
movsb
out
pop
repnz
fidivrl
lcall
iret
ret
jns
es
mov
mov
scas
jns
sub
mov
mov
mov
sub
push
jo
imul
add
push
mov
lahf
test
negb
xor
leave
ret
jb
outsl
lods
ja
jb
inc
mov
sbb
add
in
xlat
test
iret
and
jb
bound
movsb
adc
cmp
cltd
xor
cmp
lcall
stos
xor
sbb
lret
jmp
mov
inc
fimull
mov
mov
or
ror
pop
push
and
cmp
inc
push
test
xchg
lds
add
jmp
lds
sub
inc
mov
mov
sub
cld
cmp
sbb
lret
cmp
sub
addr16
push
mov
stos
imul
outsl
and
pop
xchg
ret
rcrb
jbe
sub
mov
divl
push
cmp
push
ds
stos
scas
aaa
sbb
push
lea
jg
test
lock
out
lcall
int
mov
dec
icebp
jae
iret
addr16
leave
mov
lahf
xor
sub
adc
and
lea
push
sub
inc
jne
cld
sbb
nop
sub
int3
ja
mov
shrb
pop
dec
dec
mov
jecxz
into
aaa
iret
aam
fbld
sub
pop
popa
rcll
jl
jle
mov
and
outsb
dec
xor
push
adc
ds
pop
aas
das
fsubs
inc
jmp
imul
roll
adc
push
cld
imul
stos
shlb
cmpsb
jg
and
cmp
fwait
or
pop
mov
es
mov
add
cmc
and
imul
mov
mov
test
jo
jbe
jge
jb
ds
lods
movsb
int
rcrb
jae
add
cmpsl
xor
pop
mov
and
test
mov
inc
pop
neg
mov
fdivrp
xor
dec
pop
aad
adc
dec
jmp
dec
inc
sbb
jo
cmpsl
pusha
jg
mov
jno
aad
and
insb
dec
push
das
jae
mov
xor
inc
adc
cmp
mov
loope
icebp
leave
push
mov
nop
cmpsb
mov
push
add
imul
test
mov
fistl
jp
xchg
mov
pop
xor
shll
repnz
xchg
jb
hlt
mov
aad
and
pop
or
lods
adc
scas
lods
add
xor
lds
nop
and
push
ficoml
lock
pushf
add
js
adc
xor
xchg
sub
mov
and
jne
adc
cwtl
addb
jecxz
lahf
dec
adc
xchg
jl
jbe
mov
or
stos
aam
cmc
testl
add
push
into
in
inc
and
dec
in
insl
mov
jecxz
aad
add
jp
fiaddl
sub
sbb
xchg
and
testb
call
jns
fnsave
adc
std
repnz
sbb
sub
ljmp
imul
mov
in
les
scas
and
repz
mov
notl
jb
push
js
loope
mov
mov
dec
lods
push
es
mov
rorl
ja
add
jg
nop/reserved
jnp
pop
jg
lock
dec
xchg
cmp
ret
js
jnp
jecxz
push
arpl
movb
aam
ret
inc
fs
mov
lea
sbb
enter
hlt
xor
add
jmp
idivb
xchg
mov
xchg
fisubl
ret
or
clc
or
repz
dec
xchg
mov
mov
data16
stos
cwtl
mov
fimuls
fisttpl
push
xchg
movsl
xlat
loopne
stos
in
mov
push
mov
jo
ds
movsl
or
xor
cmp
push
scas
push
in
add
and
testb
push
jnp
jne
pop
inc
cld
enter
xchg
out
dec
adc
mov
add
sahf
pop
jb
inc
mov
inc
add
push
or
cld
jg
and
inc
sbb
adc
jb
sbb
add
or
mov
test
out
orb
pushl
or
movb
std
xchg
call
int3
fmulp
fimuls
in
rcrl
int3
cmpsb
pop
rorl
mov
xchg
pop
cmp
out
push
rorl
adc
mov
ds
ss
aad
ss
in
lock
adc
push
ja
ret
sbb
fistpl
mov
jl
jecxz
sarb
mov
push
jecxz
idivl
xchg
je
pop
inc
pop
notb
decb
imul
push
pusha
push
clc
jmp
mov
xchg
icebp
dec
cmc
bound
lahf
xchg
aaa
adc
or
xor
jne
dec
mov
push
lods
inc
pusha
jge
loope
stc
sub
adc
push
insb
lret
fcomi
and
ss
stos
iret
shlb
mov
das
adcb
and
sub
sub
popa
fimuls
rcr
cld
lret
stos
mov
lds
push
inc
push
cs
test
or
es
or
arpl
and
fistpl
inc
lock
in
or
sbbb
mov
add
sarb
mov
int3
in
push
push
mov
sub
jae
in
clc
testl
icebp
add
mov
add
xchg
lret
js
cmp
jae
fnstsw
push
es
inc
pushf
das
lods
push
mov
lds
sti
gs
sti
mov
dec
mov
pop
xor
insb
push
add
rorl
mov
add
cmp
aaa
and
add
inc
cltd
call
aaa
xor
jb
inc
jo
cmpsl
shrl
push
stos
aam
xchg
insb
das
xlat
add
dec
mov
dec
push
dec
add
add
addr16
inc
push
test
xor
in
ret
cmp
sarl
sub
daa
dec
pop
inc
add
and
jbe
xlat
fcompp
dec
out
rcrl
push
push
mov
add
adc
cmp
pop
jecxz
pop
mov
aad
mov
jns
xchg
fadds
and
jns
mov
mov
pop
add
xchg
outsl
ljmp
pop
test
inc
out
fdivrs
push
push
and
cs
test
mov
loope
gs
inc
jg
pop
mov
jge
push
ficomps
mov
push
cwtl
cmpsb
jb
inc
clc
mov
out
cmpb
inc
xlat
in
in
mov
pop
jb
and
jnp
xchg
xchg
ds
test
xchg
les
push
xlat
adc
adc
repnz
int
mov
and
mov
orl
lret
jecxz
roll
iret
test
or
adc
mov
pop
scas
sbb
pushf
dec
or
xlat
fwait
dec
sub
pop
hlt
push
mov
popf
push
mov
das
outsb
jg
push
xor
inc
pushf
nop
dec
add
loop
ds
rcll
in
das
or
adc
adcl
addr16
push
push
pop
adc
test
jecxz
sbb
push
popa
push
mov
xchg
pop
jnp
out
subl
mov
mov
shl
inc
icebp
scas
lods
sub
mov
and
and
push
dec
xor
call
fdivrl
xorb
lret
jo
sub
jne
mov
loope
inc
int3
dec
dec
or
daa
add
or
cmp
and
xchg
and
test
sbb
mov
addr16
dec
std
pushf
or
inc
xorb
icebp
jne
xchg
mov
inc
lahf
dec
stos
leave
jp
xchg
dec
xchg
ficoml
test
cltd
gs
pop
ljmp
adc
add
dec
mov
or
xor
jne
sub
inc
pop
mov
test
xor
add
std
push
into
pop
cmp
sub
adc
add
pop
cmp
jb
lcall
repz
xor
sbb
sbb
fbstp
repnz
jb
dec
pop
push
jmp
pop
fldenv
jb
push
inc
or
int
je
dec
ret
dec
test
jb
mov
push
subb
test
pop
aas
repz
mov
xchg
pop
gs
mov
fs
jmp
mov
add
xchg
lahf
mov
clc
mov
inc
into
jle
in
jne
jnp
hlt
mov
xor
xchg
and
scas
pop
mov
sahf
inc
stc
cmpsb
hlt
sub
xor
dec
movsb
push
rcr
hlt
mov
mov
lock
or
lds
or
scas
in
dec
fs
inc
mov
dec
in
outsl
pop
push
arpl
jg
out
lea
ret
adc
dec
sbb
pop
out
movsl
leave
arpl
movl
sbb
adc
dec
xchg
pop
clc
ret
sbb
int
fs
mov
imul
movsb
sbbl
nop
mov
pop
sub
test
cli
out
aas
inc
ds
insb
cld
add
shrl
in
sub
cli
and
add
pop
xor
imul
test
cli
mov
subl
lods
pop
mov
lods
push
and
ss
ret
aam
cmpsb
mov
inc
mov
lretw
ja
jbe
inc
loop
mov
adc
pop
mov
jge
and
cmp
sbb
xor
rcrb
inc
mov
push
inc
pop
push
cmp
stos
testb
adc
insb
mov
fwait
test
in
mov
lahf
iret
sub
les
inc
mov
jbe
or
stc
pop
imul
mov
stos
imulb
mov
and
and
int
test
xchg
cmp
pushf
cmp
and
pop
dec
mov
call
outsb
sti
xlat
push
fnstsw
and
mov
sub
sar
dec
int
int3
cmp
fld
xor
push
je
sbb
mov
cmpsl
sti
jg
or
cmp
sbb
adc
leave
aad
in
lods
jmp
mov
daa
inc
movsl
and
or
iret
add
repz
xchg
or
add
loope
adc
fcom
stos
nop
rorb
cmpsl
shrl
or
popf
hlt
lcall
stos
push
fiaddl
adc
mov
xchg
mov
fisubl
cmpsb
fimull
xchg
mov
inc
ret
lret
mov
ja
jmp
pushf
push
mov
insb
loope
imul
dec
es
sub
sub
int
stos
mov
xor
pop
mov
lods
jnp
inc
xchg
pop
pusha
cmp
dec
jo
data16
lods
push
and
add
xor
cld
mov
sub
pop
stos
lods
ret
add
mov
dec
push
push
iret
into
loope
out
add
mov
mov
ss
aas
sbb
daa
test
dec
sub
pop
enter
jb
test
js
fisubl
repz
popa
js
mov
push
sub
div
add
jbe
movsb
jecxz
popf
hlt
dec
sbb
and
mov
push
dec
imul
aaa
test
fsubl
xchg
fidivrl
xor
or
ja
fwait
shll
push
jp
iret
sub
xchg
cmp
sub
and
mov
arpl
add
in
or
cli
loop
and
mov
sub
sub
out
jmp
mov
lea
movsb
jecxz
inc
daa
lret
sbb
jno
adc
pop
dec
or
aam
push
dec
xor
jp
es
jne
ds
shlb
lea
jmp
insl
mov
inc
lods
cmp
dec
rcrb
lods
das
sub
jno
pop
ss
xor
mov
jp
sub
cli
lods
lret
repnz
pop
andb
ja
fs
mov
xchg
mov
fcomp
in
lds
mov
sbb
dec
cli
dec
push
and
add
js
in
mov
cmp
or
push
cmp
inc
inc
fs
xor
mov
mov
mov
shll
pop
lret
ljmp
jnp
inc
out
faddl
les
shr
js
jno
std
cltd
clc
pop
and
fistpll
shlb
inc
mov
dec
and
gs
fdivl
jl
sbb
cli
xchg
adc
add
es
mov
jae
fincstp
imull
sbb
pop
inc
mov
inc
icebp
mov
jle
pop
mov
dec
cwtl
dec
pop
mov
sbb
mov
shrb
mov
popf
push
or
and
cltd
out
sub
fldt
cs
into
aad
cld
sbb
xchg
lret
jle
cmpb
jno
test
outsb
mov
jne,pt
jae
push
iret
mov
inc
adc
push
mov
pop
xchg
jns
sbb
mov
xchg
sbb
mov
iret
fs
out
clc
cwtl
mov
or
inc
mov
xor
lahf
push
dec
adc
pop
cmp
aas
aad
fs
rcr
shl
jp
cmp
inc
push
in
js
aas
nop
pop
lods
xor
push
inc
or
int
cmpsb
jbe
test
outsl
ret
sbb
ds
and
push
ljmp
push
cmpxchg
adc
fsts
mov
pusha
xchg
mov
sbb
cmp
cwtl
in
lods
popa
push
mov
mov
push
cs
and
xchg
jbe
in
int3
push
sub
dec
pop
fistpll
stc
loope
gs
sbb
or
insl
rclb
mov
pavgw
cs
adc
sub
fsubl
push
sahf
dec
mov
lret
fldcw
pop
add
push
inc
enter
push
xor
sub
cmp
cmp
xchg
cli
push
loopne
movq
roll
mov
xchg
mov
jp
ret
adc
inc
cmp
pop
cmp
fsubs
mov
xor
xor
imul
xchg
or
cmp
add
xor
dec
jae
mov
xor
adc
mov
xchg
icebp
je
test
inc
iret
or
mov
mov
clc
xlat
ljmp
jge
ljmp
test
leave
ret
adc
xor
aam
es
sahf
mov
addr16
cli
pop
mov
test
or
push
mov
clc
test
add
mov
lcall
jnp
pusha
jno
mov
inc
mov
mov
mov
repnz
movsl
stc
mov
out
mov
or
inc
and
add
movsl
jns
xchg
jle
cmp
negl
insl
dec
pop
jmp
adc
mov
dec
shrb
adc
push
fistl
rclb
sbb
or
and
inc
and
into
xchg
add
movsb
add
dec
cmp
iret
fcmovnb
nop
mov
icebp
cmpsb
cmpsb
push
inc
sub
das
or
jo
pop
adc
cmc
aas
lods
mov
lcall
pop
cwtl
mov
jb
cmp
add
mov
jae
insl
dec
push
setle
lds
adc
cmp
mov
xor
test
jge
ret
fcompl
ret
shlb
and
por
lret
inc
push
aaa
adcl
loopne
mov
mov
int
adc
mov
cmpsb
lds
mov
in
sub
push
cli
push
aam
xchg
sub
pop
lret
int3
outsb
add
xrelease
add
jmp
mov
and
cmpsb
in
std
in
sahf
pusha
insb
enter
inc
aaa
jbe
push
lcall
in
mov
xchg
pop
in
sub
adc
arpl
mov
outsb
or
lods
inc
mov
mov
repnz
mov
aam
daa
pop
mov
push
adc
shll
loop
out
lods
jp
sub
jnp
sbb
repz
daa
cmpsl
mov
jb
cmp
les
push
dec
push
cmp
es
aas
fs
push
sahf
scas
xchg
mov
ret
adc
mov
push
jmp
cmpsb
repnz
nop
std
call
adc
std
push
cmp
outsl
or
int
std
push
mov
cli
sub
or
into
imull
push
loopne,pt
out
sbb
aad
add
es
adcb
xor
inc
fildll
loop
push
imul
fwait
cld
mov
adc
outsl
das
out
sbb
add
ja
mov
arpl
jo
test
xchg
insb
inc
stos
mov
cs
ljmp
cmp
push
push
lahf
cmpsl
cmpsb
das
in
xor
sub
ljmp
pop
sub
popa
mov
leave
mov
jo
into
loopne
lea
shrb
lods
aad
cwtl
lds
mov
sbb
mov
push
pop
sbb
or
iret
sbbb
adc
fs
popa
ret
rclb
adc
pop
fcompl
sub
std
sbb
mov
rcll
scas
out
and
js
in
sub
lds
ret
ljmp
sub
test
jno
ficompl
add
push
mov
mov
add
cmc
div
fisubs
cli
xchg
lahf
in
sub
stc
gs
scas
add
cli
inc
jae
xor
mov
sarb
add
je
sti
popa
or
jne
mov
mov
mov
xor
pop
xor
dec
cmp
sub
fwait
inc
cmp
adc
jle
pushf
cmp
repz
lods
jecxz
dec
jecxz
cmp
or
call
ds
inc
mov
pop
jb
and
add
push
adc
clc
jl
rolb
and
pop
or
test
sbb
push
out
loope
mov
insb
cltd
and
push
lds
addr16
lds
ss
jp
lret
stos
jge
xchg
cmp
imul
adc
sub
arpl
nop
xorl
push
push
icebp
add
pusha
inc
out
push
mov
mov
mov
popa
hlt
mov
add
stos
dec
out
shll
shlb
jae
xor
add
dec
xchg
mov
dec
imul
jp
daa
mov
push
stos
fists
adc
mov
mov
push
push
cmpsb
pop
in
cmpsl
xchg
icebp
dec
xchg
or
push
outsb
adc
push
xchg
cmp
jl
mov
fildl
mov
push
std
fidivl
sub
mov
cmpsl
insl
dec
dec
and
mov
movsb
repnz
jg
call
aad
pop
inc
pop
and
roll
pop
daa
inc
pop
sahf
ret
fwait
push
aad
cmp
stos
ss
push
fnstsw
pop
gs
mull
and
mov
xor
hlt
pop
incl
dec
daa
dec
dec
pop
and
jmp
cli
lods
push
pop
dec
dec
xchg
sbb
aam
add
stos
mov
call
mov
cmpsl
gs
sub
into
pop
mov
and
mov
in
out
mov
push
pop
inc
in
mov
cwtl
cwtl
shrb
sbb
faddp
xchg
mov
jbe
int3
jns
sarb
gs
arpl
iret
sbb
xor
xchg
sbb
xchg
test
add
fistpl
adc
sbb
data16
ljmp
mov
lret
aas
movsl
ret
fisubs
or
out
rclb
fcmovbe
filds
lods
cmp
pop
test
cmpl
mov
ds
pop
incb
inc
cmc
inc
pop
or
out
fwait
mov
lcall
repz
test
and
xchg
xor
cmpsb
pop
jno
sub
lcall
dec
mov
dec
scas
fcomi
nop
push
jb
sbb
add
fisubrl
std
cmp
sbbb
ja
adc
clc
mov
out
testb
jp
aas
popf
inc
aaa
sbbb
ds
jle
mov
addr16
adc
or
lret
into
or
lret
fs
pop
lret
cmp
stos
dec
inc
xor
notb
repnz
and
xchg
xchg
xchg
out
ss
lret
sbb
sbb
xchg
push
leave
aas
and
fimuls
fs
cld
sbb
lcall
rcll
mov
mov
call
cmp
mull
or
pushf
sbb
push
jge
or
mov
ljmp
sbb
dec
fwait
xor
sub
lcall
leave
mov
sbb
mov
pop
movsl
in
dec
sbb
sub
adc
loop
cmc
sbb
add
imul
mov
mov
sub
out
pop
sbb
sub
or
shr
stos
add
ret
fisubrl
jnp
inc
lret
jmp
mov
jo
and
outsl
xchg
shll
mov
cmp
loopne
jecxz
and
hlt
adc
mov
aad
outsb
xchg
in
cmp
fs
popa
sbb
mov
rcrb
mov
lret
ljmp
aaa
mov
sti
cltd
in
loop
mov
sub
jb
inc
lret
jns
xlat
push
or
or
lods
lret
add
sbb
jb
mov
hlt
adc
mov
aam
add
pop
repz
pop
packssdw
push
lods
jo
ja
jl
ret
xchg
xchg
aaa
cmpsb
mov
xor
popf
aam
mov
aaa
repnz
lods
push
mov
adc
sub
push
test
testl
rcrl
outsb
xchg
jae
int3
cmc
mov
or
sbb
jb
je
jno
ret
stos
cli
push
sub
bound
mov
push
test
mov
imul
dec
and
je
in
add
stc
pop
dec
mov
dec
mov
nop
dec
into
jl
pop
add
add
xchg
mov
in
sub
and
cmpsb
or
pusha
or
testl
int
jno
inc
mov
stc
mov
insl
mov
stos
mov
jmp
xlat
jne
cs
sahf
mov
scas
sbb
inc
gs
in
xor
dec
das
push
add
mov
and
out
pushf
xor
loope
jno
adc
push
xor
in
in
mov
loopne
jo
mov
out
ret
or
cmp
scas
das
rorl
out
dec
inc
xchg
repz
mov
cld
inc
xchg
jae
cmp
jnp
shll
xor
pop
je
jge
push
les
bound
rcr
aam
popa
xchg
xchg
cmp
cmp
push
ds
imul
mov
pop
sub
pop
in
aad
es
cwtl
imul
lods
std
sti
mov
adc
imul
and
or
jg
int3
aad
cmp
add
inc
mov
sbb
je
in
add
aad
mov
pop
push
jl
out
jae
es
inc
pop
pop
pusha
inc
cmc
push
push
mov
adc
mov
dec
push
adc
mov
add
xchg
imul
ror
fldcw
test
and
cld
xchg
out
arpl
inc
int
jge
hlt
cwtl
and
and
cmp
and
mov
mov
mov
sub
push
daa
js
sbb
stos
push
int
pop
ficomps
add
or
sbbb
and
mov
lahf
rol
xchg
xchg
lds
fildl
mov
pop
movsb
mov
outsb
add
stc
inc
add
clc
clc
sub
xlat
xchg
pop
dec
add
add
pusha
mov
out
rorl
bound
sub
mov
jle
or
jmp
sbb
cmp
dec
xchg
push
or
hlt
notb
add
lock
cmpsl
mov
xchg
sub
daa
lret
imull
pop
js
cmpsl
scas
cmpsl
pop
cmp
xor
and
inc
mov
xor
sbb
xor
mov
stos
sbb
sahf
jg
pop
call
clc
js
or
jae
sti
inc
nop
loopne
les
sbbb
sahf
fbld
pop
idivb
rep
shll
dec
ljmp
test
sbb
pop
mov
cmp
movsb
je
fsubrl
jo
mov
or
aam
sub
ljmp
ret
adcl
sub
mov
dec
and
stos
pop
aaa
or
pop
test
jnp
data16
fs
leave
pop
cmp
inc
mov
scas
call
mov
popl
lret
mov
add
pop
orl
pop
or
xchg
mov
add
mov
fcompl
xor
jge
repz
aaa
push
stos
movsl
pop
sahf
xchg
push
fiaddl
cs
mov
xlat
mov
cli
es
xor
sbb
push
pop
nop
sbb
insb
fsubp
adc
cmp
lret
cmpsl
out
stos
iret
test
sub
enter
mov
cmp
repz
loopne
lock
mov
sub
shrw
push
xchg
push
ljmp
sub
mov
mov
mov
push
lret
dec
inc
jmp
xor
insb
push
rcr
mov
pop
cmpsb
jb
nop
fnsave
jbe
adc
fcomps
shrb
xchg
push
lock
stos
xchg
inc
lahf
mov
aam
cwtl
ljmp
xchg
cbtw
jle
hlt
stos
mov
dec
sub
int3
sysenter
or
mov
add
dec
pop
xor
lcall
lods
aaa
clc
xchg
cmp
out
and
pop
and
push
lahf
pop
cmp
test
ret
je
in
movsb
imul
dec
mov
out
fsubrs
aaa
jbe,pn
lcall
jbe
mov
out
xchg
icebp
fsts
je
mov
stos
js
sub
fs
dec
add
jo
ss
icebp
hlt
mov
jnp
fdivrp
rorl
or
and
lret
and
stos
stc
fwait
xor
gs
insl
movl
hlt
add
dec
add
jo
mov
pop
lret
ljmp
mov
xlat
cli
mov
xor
dec
add
icebp
stc
incb
mov
int3
adc
mov
loop
sbb
mov
cmp
adc
or
sbbl
mov
daa
xchg
fdivl
push
lahf
xor
out
pushf
scas
mov
fdivrl
mov
fldpi
xor
sub
mov
enter
pop
cmc
push
aad
insl
sub
in
sbb
icebp
inc
add
pop
or
fndisi(8087
in
aas
pop
or
xchg
sti
xchg
fisttpll
cs
in
sbb
mov
xchg
mov
dec
mov
lret
std
xchg
sbb
ja
imul
inc
lock
mov
lcall
mov
outsb
adc
jl
movsl
aam
mov
and
fistpll
inc
inc
loopne
push
fcmove
sub
in
cmp
push
cmp
xor
movsb
test
dec
imul
mov
push
push
imul
xor
leave
sti
pop
scas
push
jmp
leave
mov
mov
and
mov
jle
mov
out
pop
mov
icebp
dec
pop
inc
test
jge,pn
xchg
sahf
add
jmp
pop
xchg
mov
push
sbb
push
dec
mov
lret
test
mov
and
data16
pop
mov
mov
xlat
mov
arpl
inc
outsl
jg
dec
mov
xorb
mov
or
push
stos
je
fsubrl
push
adc
das
std
dec
popa
push
outsb
fstps
lods
mov
and
pop
lds
sti
mull
or
push
xchg
lods
std
aaa
adc
or
jb
inc
bound
jb
das
jmp
push
jle
inc
jp
xchg
add
es
push
mov
mov
std
ljmp
jp
push
jge
jl
out
xor
add
dec
push
xchg
insb
or
xchg
cwtl
or
cld
push
pop
xor
sub
jl
shrl
lahf
test
inc
mov
xor
in
mov
xchg
add
loope
or
negb
int3
adc
and
sahf
rcrb
xchg
jmp
test
insl
mov
push
data16
jno
insl
jno
loopne
push
mul
js
inc
xlat
xchg
xchg
cmpsb
mov
mov
add
lea
push
int
sti
sbb
out
clc
test
xorl
rorl
cwtl
and
cmp
sbb
sbb
adc
aad
fwait
or
fisttps
xor
scas
adc
fstpt
mov
cmp
fbld
pop
push
pop
inc
jno
xchg
push
sahf
and
pushw
dec
mov
jmp
imul
pop
repnz
xchg
sbb
icebp
pop
cmp
sub
fcoms
mov
mov
pop
jge
jne
sub
add
sub
xchg
xchg
notl
sahf
jbe
adc
and
dec
cmp
mov
jnp
and
xchg
lea
fsts
pop
and
shrb
mov
add
inc
or
hlt
inc
nop
add
out
push
jle
add
dec
lds
cmc
add
std
pop
call
mov
sti
dec
incl
xchg
lock
cltd
mov
mov
mov
add
ljmp
imul
int
sarl
mov
jo
out
loop
push
idivb
popf
sub
insl
xchg
aad
scas
lds
mov
sbb
inc
jb
popa
mov
or
sti
lods
inc
pop
sub
xchg
test
adc
loope
cs
or
out
jno
outsl
fdivs
and
packssdw
mov
mov
stos
jmp
dec
jb
inc
xor
sub
adcl
xchg
lods
sahf
push
dec
mov
cmp
sti
or
xchg
daa
das
cmpsl
dec
lds
lea
xchg
and
aam
into
fstpt
mov
in
xlat
mov
outsb
dec
lcall
shrl
sbb
jne
mov
in
subl
inc
xchg
in
faddl
rclb
outsl
push
ds
jle
cmp
fstpt
pop
inc
popl
imul
inc
add
cmpsl
stos
imul
mov
sub
mov
dec
sub
mov
dec
cmpsb
or
push
lret
push
inc
fimull
rclb
repnz
inc
in
dec
jl
mov
scas
ja
out
cld
stos
push
lock
ficoms
xchg
insb
pushf
cmc
std
inc
and
lea
sahf
leave
insl
push
xor
pop
sbb
and
mov
mov
jp
ret
loope
addr16
adc
enter
push
xlat
fimuls
cmp
jmp
mov
push
in
ss
movsl
scas
out
clc
cmp
ja
mov
cmpsb
jns
sub
inc
mov
xchg
aaa
add
dec
push
out
cmp
sti
test
ja
nop
dec
or
cli
adc
sarl
push
jno
adc
fldenv
mov
inc
loopne
cmpsb
lock
jge
test
inc
inc
sbb
cmp
adc
inc
push
pop
lods
mov
mov
negl
pushf
scas
repz
cmp
jae
ja
movsb
mov
xchg
pop
xchg
shll
addl
xchg
add
movsb
fcmove
xorl
inc
cltd
jl
mov
cwtl
xor
add
fwait
addr16
pop
nop
lods
jns
xchg
out
test
out
inc
cmc
adc
mov
cwtl
fs
insb
jae
push
and
sbb
gs
std
les
cmp
mov
fsubl
and
lods
addr16
inc
sbb
pop
jmp
in
idivb
fucomp
movsl
in
jo
mov
mov
jbe
add
add
jecxz
sahf
pop
dec
enter
testl
inc
fisttps
mov
push
pop
and
fwait
push
ljmp
aas
jmp
out
aas
sahf
push
adc
outsb
lea
sti
hlt
jae
loop
lock
push
mov
int3
and
mov
mov
lahf
daa
push
call
sub
push
jge
mov
jmp
add
or
mov
jo
pusha
lcall
lahf
dec
push
int
into
cltd
or
xchg
cmp
dec
mov
dec
xchg
stc
pop
mov
add
jl
push
xorl
cltd
gs
sahf
inc
xchg
mov
jecxz
rcrl
or
adc
test
push
mov
stos
mov
dec
rclb
xor
dec
xchg
test
sbb
xchg
dec
add
add
xor
xchg
adc
jne
fwait
xchg
incb
fidivrl
mov
mov
mov
mov
scas
xor
movsb
inc
sub
cmp
psrlq
xor
jmp
daa
nop
or
cmpsl
pop
or
mov
push
pop
bound
sub
push
xor
js
push
fwait
or
ror
imul
loop
jo
test
xchg
or
xlat
push
ljmp
in
repz
into
xorb
insl
inc
inc
lods
xchg
sub
cld
lods
or
inc
mov
aas
loopne
jmp
inc
push
cmp
dec
jg
subb
lock
into
test
or
mov
jecxz
les
fcomps
jp
mov
adc
and
bound
repz
cmp
mov
and
pop
mov
jecxz
or
jg
mov
jle
lods
cmc
rcrl
lods
scas
push
rol
insl
jecxz
cmpsl
push
test
out
xorl
faddl
mov
out
sahf
mov
or
orb
dec
sbb
pop
hlt
call
aam
mov
lcall
in
testb
cmp
daa
lock
inc
mov
sub
mov
sub
fs
in
iret
leave
test
je
dec
jmp
sbb
sbb
push
rcll
cmp
adcl
pop
inc
fisttpl
mov
and
or
inc
xlat
in
sbb
push
aaa
cltd
notb
in
jl
dec
xchg
mov
jns
clc
sub
popa
fadds
cmc
test
dec
add
insl
cmpsl
dec
mov
lods
sarl
ja
pop
cmp
push
inc
pop
adc
sub
add
mov
add
scas
push
cli
fcomps
push
sbb
cwtl
xor
sbb
xchg
insb
sbb
xchg
imul
out
pop
popf
testl
fcoml
xchg
inc
dec
or
test
and
dec
pusha
es
cmpsb
push
mov
xchg
mov
popa
xchg
out
int3
mov
lret
xchg
insb
push
fists
lods
and
xor
mov
cmpsb
in
fnsave
cld
sbb
push
pop
push
jbe
mov
xchg
xor
cwtl
cmp
lea
inc
push
popl
stos
mov
mov
jmp
outsl
xchg
sub
sbb
xchg
repnz
cs
mov
jae
fisttpll
das
das
das
sbb
pop
ret
jns
adc
insl
mov
xchg
test
popa
sbbb
stos
and
mov
jno
out
in
mov
pop
add
xchg
jp
push
mov
mov
add
inc
cwtl
sahf
xchg
decl
dec
rolb
add
and
xchg
imul
push
add
aam
jnp
stos
inc
mov
jb
and
ret
lds
xchg
shl
aam
out
jbe
jg
sahf
movsb
pmaxsw
imul
fbld
in
add
or
mov
pop
sbb
cmp
xor
mov
xor
loopne
mov
sti
mov
leave
xorb
xchg
mov
pop
test
or
dec
aad
rcl
xlat
mov
xor
into
xchg
shll
call
cmpb
cmp
cmpsb
scas
pop
stc
fsubl
xor
mov
and
pop
push
xlat
shll
mov
mov
mov
push
ret
add
mov
mov
mov
sub
adcl
out
dec
bound
das
ds
outsl
inc
lock
std
out
jmp
pop
mov
push
xor
jne
insb
fmul
sbb
cli
and
fimuls
clc
stc
mov
imul
adc
sbb
int
lcall
inc
stos
pop
xchg
loop
insb
sarb
mov
jle
jmp
in
mov
push
mov
mov
adc
dec
fstpl
fucomp
idivl
icebp
jg
rcr
lea
pop
jnp
jmp
aas
and
inc
fcomi
mov
pushf
cmp
push
push
lret
cmp
adc
imul
sbb
filds
lds
pop
adc
notb
pushl
lcall
mov
jmp
and
fldenv
clc
mov
adc
out
add
cmp
lods
xor
jmp
out
cmp
dec
and
mov
ja
jle
jno
repnz
ds
push
mov
adc
fnstcw
shrb
lcall
push
nop
fucomp
movsl
or
sahf
call
push
repz
sbb
nop
dec
sbb
xor
dec
jbe
xor
jbe
pop
loope
js
out
flds
or
les
dec
ja
fimuls
jno
into
out
jbe
or
insb
dec
mov
jae
in
lret
pop
cwtl
fsubr
pop
out
loopne
mov
push
out
les
lahf
pop
push
jecxz
out
xchg
aas
shr
cmp
fistpll
out
dec
subb
mov
inc
lret
xlat
dec
sbb
sti
flds
jecxz
mov
jle
in
sbb
fs
outsl
loope
mov
js
sti
adc
stos
xor
scas
add
fdivrl
sbb
and
cld
lcall
mov
mov
lret
xchg
les
in
mov
sbb
repnz
or
add
les
iret
jp
test
popf
ss
mov
pop
dec
add
out
and
faddp
sahf
pop
and
fucomp
cmp
adc
inc
sub
and
cltd
xor
notb
dec
xor
hlt
ljmp
in
shr
mov
orl
stos
lret
cwtl
sbb
sub
cmp
fildll
add
scas
pop
xchg
xchg
les
ret
dec
sbb
inc
or
xlat
mov
push
xchg
adc
xor
sarl
out
ds
shrl
imul
pop
jp
std
sbb
sbb
mov
add
mov
inc
adc
xchg
loopne
cwtl
add
decb
ret
mov
rclb
and
push
add
xchg
mov
shll
daa
fs
rcll
stos
dec
inc
or
xchg
outsl
mov
arpl
andb
adc
cmp
repnz
adc
test
add
out
shl
dec
pop
and
gs
xchg
xchg
cmp
test
sub
mov
movb
inc
mov
pop
and
dec
leave
roll
sbb
sub
inc
addr16
or
adc
loope
push
aaa
cld
pop
mull
lret
pushf
pusha
add
ror
push
adc
pop
push
outsl
into
mov
clc
cmc
js
outsb
pminub
xchg
jl
inc
repz
and
stos
sub
faddl
mov
jo
pushf
dec
jmp
or
inc
push
mov
mov
push
in
mov
mov
push
stc
leave
and
ret
xchg
mov
aad
insl
test
jmp
gs
push
mov
jecxz
inc
xchg
in
iret
cmc
jecxz
or
aaa
pusha
icebp
pop
xor
movsl
je
stos
mov
mov
dec
xor
fsubl
imul
dec
es
mov
push
std
enter
inc
pop
and
xor
fcoml
or
push
in
ss
jg
add
xor
or
xchg
jmp
and
jo
mov
scas
push
and
fs
cltd
dec
in
adc
adc
shll
mov
scas
and
sub
xchg
sub
mov
mov
mov
mov
mov
flds
jno
inc
push
push
lea
pushf
push
add
push
adc
adc
aaa
pop
jno
movsl
inc
mov
adc
jbe
popf
test
push
mov
test
and
or
and
sbb
lea
in
and
push
cmpsl
pop
mov
inc
xchg
lcall
std
es
into
cmp
sub
test
ljmp
xchg
mov
rolb
push
jo
push
adc
cmp
push
enter
pop
xor
push
nop
neg
pusha
fidivs
in
jae
mov
sbb
mov
insl
push
mov
lret
inc
pusha
test
pmulhw
sub
pop
fwait
das
pusha
repnz
icebp
push
outsb
pop
mov
dec
lea
jae
es
dec
sbb
jns
or
xchg
lds
or
cmp
xor
inc
pop
mov
mov
iret
inc
in
jnp
mov
push
addr16
icebp
stos
inc
mov
sub
or
mov
xor
fnstenv
shr
dec
push
mov
stos
into
fsubrs
push
insl
and
pusha
jle
jbe
jecxz
jmp
add
mov
dec
subb
jecxz
jb
je
push
test
addr16
orl
fcmovnbe
lods
or
inc
inc
iret
mov
adc
outsl
jmp
pop
lds
movsb
jbe
cmpsb
or
xchg
jmp
sti
pusha
call
shll
sbb
inc
lods
adc
movd
insl
sbb
push
aad
xor
push
jmp
pop
fcmovnbe
mov
cmp
or
mov
xchg
add
in
push
mov
sbb
push
mov
xchg
add
or
inc
mov
fmulp
stc
jae
or
or
aas
xor
icebp
sub
mov
inc
fsubrs
mov
jecxz
std
sar
inc
cmpsb
daa
rorb
scas
mov
stc
push
in
pop
cli
sub
icebp
adc
les
lods
jbe
lock
pop
jno
cwtl
adc
int3
shr
adc
cmp
push
nop
fidivs
incl
xorb
insl
ds
ret
jg
mov
jo
push
cmp
inc
mov
cmp
loop
imul
mov
mov
les
mov
jno
dec
nop
mov
ljmp
adc
pusha
call
pop
mov
sbb
dec
jae
add
or
dec
insb
dec
ss
dec
jg
sbb
sarl
push
mov
int3
xlat
mul
in
mov
insb
jge
inc
fistpl
and
aas
push
sbb
jmp
insb
push
jmp
mov
mov
xchg
dec
lea
xlat
outsb
icebp
fwait
cs
cltd
lds
mov
dec
mov
daa
enter
cmp
sahf
push
xchg
gs
jg
inc
loope
addb
dec
xor
imul
sub
in
repnz
and
cld
xchg
lret
mov
cmp
out
push
sub
xorps
pop
addb
out
dec
inc
xlat
add
daa
mov
xlat
jecxz
mov
mov
pop
ret
mov
mov
mov
test
cld
fst
int
dec
pop
ja
cld
mov
imul
add
aaa
sti
xchg
jg
lret
inc
rorl
and
mov
adc
lock
imul
jo
shlb
fiaddl
sbb
out
or
lea
repz
popf
mov
mov
imul
or
shrb
icebp
iret
mov
adc
xchg
scas
outsb
cmp
stc
sbb
scas
mov
inc
xchg
loope
add
inc
in
fisttps
movsb
imul
lods
push
and
lock
and
and
cmp
inc
loop
lock
sub
in
test
push
lret
lods
pop
repnz
enter
gs
jp
icebp
idivb
or
dec
cmpsl
js
cmc
mov
fldl
loopne
sti
pop
loope
push
pop
and
cmp
push
xor
pop
into
ds
sub
stc
adc
enter
addr16
xchg
adc
movsb
push
xchg
jle
mov
icebp
imul
pop
lds
xchg
loopne
push
in
add
jne
fiadds
aam
sbb
test
ret
in
ret
sbb
lcall
jae
push
pop
sarb
mov
and
mov
xor
mov
pop
lret
lods
adc
aam
pop
ja
cs
std
in
rcll
mov
inc
mov
push
push
rcr
jbe
mov
xor
cmp
or
sahf
mov
pop
jp,pt
sub
sbb
xchg
dec
fcompp
jnp
xchg
pop
sbb
mov
loop
dec
sbb
dec
sbb
in
int
adc
fsubs
stos
cmp
outsb
mov
add
jge
imul
das
mov
dec
sub
sub
mov
shll
hlt
jl
xor
or
dec
and
dec
mov
jp
inc
pusha
rcrl
mov
dec
adc
push
mov
add
sahf
add
in
xor
setne
sub
cmp
cmc
dec
es
or
inc
int3
lods
pop
andb
xchg
cmc
in
push
js
call
pop
in
mov
push
xor
dec
jns
iret
dec
jmp
aaa
mov
push
scas
mov
clc
test
mov
push
aas
mov
mov
fucomip
in
fnsave
xor
mov
rcrl
sbb
testb
sbb
push
sbb
push
pop
xor
inc
lret
and
andl
jp
rolb
or
dec
stos
sbb
sbb
mov
arpl
and
cmpb
xchg
push
in
mov
fs
lods
pop
loope
stos
cmc
dec
cld
xchg
xchg
jecxz
xchg
dec
xor
xor
ret
jg
loope
mov
aas
inc
add
mov
aas
fsubs
mov
subl
push
loope
mov
xor
aad
mov
cmc
cmp
mov
jo
dec
andb
push
cltd
xor
daa
push
lret
aam
movsl
fadds
push
xchg
cs
mov
mov
pop
push
int3
push
pop
pop
ror
add
adc
jb
cmp
daa
jmp
jp
mov
aam
jp
push
fadds
mov
cmpsb
or
adc
inc
mov
dec
dec
adc
dec
jns
jbe
not
cmp
pusha
xor
test
ljmp
pop
or
sbb
aad
in
scas
test
icebp
xor
lahf
jmp
dec
nop
adc
jge
aas
fmull
push
adc
loope
fildll
test
out
push
dec
mov
fbld
xor
xchg
negb
mov
int3
movsb
jns
sbb
jg
repz
dec
inc
jg
sbb
dec
movsl
xchg
and
in
or
jne
lods
xor
add
iret
idivl
inc
fisubs
pop
dec
outsb
mov
adc
cmp
andb
xchg
push
cld
and
pop
addr16
mov
jge
stos
jb
inc
xchg
sub
jns
fadds
daa
das
lds
int
and
jns
nop
in
out
dec
push
ja
gs
jbe
add
cmp
test
push
sarb
sahf
jmp
adc
fiaddl
mov
add
fs
out
push
add
pop
vpackssdw
imul
in
dec
pop
mov
dec
aad
int3
rcl
push
cs
int3
jae
push
pop
lods
lret
test
sbb
mov
add
fnsave
lret
sbb
or
cmp
mov
sub
jl
pushf
push
jnp
xor
test
adc
sbb
xchg
mov
and
enter
mov
mov
pop
lods
ljmp
mov
adc
lods
xchg
paddq
inc
sub
in
xlat
aad
es
cli
jne
cmp
hlt
pop
orl
roll
enter
movsl
cmpsl
cmc
pop
push
jnp
in
icebp
loop
or
dec
mov
imul
push
lahf
leave
aad
or
aad
in
push
xchg
addr16
mov
sub
loope
ss
rcrl
mov
repz
push
and
and
aad
xor
sti
roll
jno
out
push
das
xor
stos
or
push
dec
inc
push
sbb
and
jle
mov
pop
sbb
fsqrt
sub
leave
mov
or
mov
je
lods
pop
das
in
adc
pop
dec
insb
jge
movsl
adc
xor
pop
fcmove
adc
cld
call
and
lds
add
dec
or
testb
popf
jno
shll
mov
ss
dec
xchg
sub
xlat
lods
ljmp
test
addl
rorb
cmc
pop
inc
cs
mov
xor
xchg
gs
lret
jecxz
mov
es
addr16
or
dec
pop
addr16
xchg
mov
adc
inc
push
in
jg
jae
push
cltd
inc
jge
lea
and
aaa
repz
pop
inc
lret
xor
add
stc
or
cmp
clc
cmp
iret
jno
push
loope
inc
stos
jge
pop
shlb
mov
scas
xchg
push
mov
lods
inc
leave
pop
or
push
cmp
mov
jmp
int
js
or
jmp
orb
gs
mov
adc
and
jb
mov
out
fldl
repz
mov
mov
mov
fnstenv
push
or
invd
mov
adc
std
imul
stos
push
insb
mov
jne
cltd
addr16
test
xchg
mov
add
out
or
dec
mov
mov
neg
ds
xchg
pop
sub
mov
mov
fs
in
xlat
test
sbb
fmuls
lds
pop
lods
push
push
mov
sub
xor
add
jmp
call
test
or
std
sar
mov
mov
xor
mov
jb
inc
out
fdivrl
testb
cmpsb
jno
lea
imul
fisttpl
test
lds
or
pusha
mov
inc
std
xor
lcall
lcall
push
scas
mov
fdivrl
lods
test
cmp
adc
push
mov
bound
insb
into
jmp
cmc
loop
cmp
in
ja
sub
push
insb
jmp
sti
lcall
sbb
scas
fisttpl
push
xor
xor
cs
addr16
dec
jbe
pop
cli
mov
outsb
wrmsr
aam
pop
ficoms
mov
pop
aas
lret
fnstenv
add
insl
lahf
movsb
jle
data16
inc
add
je
das
xor
insb
popf
arpl
sub
and
mov
and
sub
fmulp
inc
xchg
andl
add
pop
mov
fldl
adc
dec
mov
sub
and
stos
aas
push
push
out
andl
daa
sub
jmp
xchg
dec
inc
loopne
addr16
inc
mov
or
jmp
jo
mov
pop
mov
cltd
lea
cltd
mov
mov
mov
mov
sbb
and
leave
mov
push
jae
out
mov
fmuls
and
mov
sarb
jns
push
outsb
test
add
pop
ss
ror
add
mov
jne
cld
jge
dec
xchg
add
loopne
leave
jmp
outsl
cmp
push
hlt
mov
cmc
imul
ret
inc
and
dec
pushf
xor
push
mov
push
pop
mov
pop
rorl
inc
or
xor
pop
daa
dec
aas
mov
push
push
xchg
adc
rcl
aad
shl
jno
pop
ret
sti
insb
mov
pop
push
icebp
sub
mov
push
adc
pop
or
jp
sbb
movsb
scas
and
cmpsb
call
loopne
push
dec
repnz
shlb
push
xor
in
mov
pop
dec
loop
filds
push
push
leave
bswap
cmc
mov
pop
sbb
mov
in
repnz
xchg
and
mov
ja
inc
xor
xchg
sub
loope
sub
dec
inc
push
sahf
xor
mov
or
xchg
jmp
jns
sbb
data16
cmp
icebp
leave
in
add
arpl
sahf
lods
test
push
xor
xlat
test
xor
popf
mov
es
lds
jno
cmp
rcrl
cli
sub
pop
je
push
sbb
cli
test
daa
xchg
inc
dec
sbb
xorb
mov
pop
filds
lods
pop
xchg
arpl
jl
sbb
pop
cmp
push
adc
sbbb
sbb
add
jmp
add
insl
inc
sub
add
cld
das
test
adc
call
jle
or
aad
jae
ss
mov
sbb
lahf
xor
rcr
push
inc
pop
inc
ret
pop
xchg
jns
sbb
loop
mov
dec
push
add
sti
fcomi
insb
cmp
mov
enter
cwtl
xorl
sub
add
cwtl
out
mov
fwait
jp
dec
out
pop
mov
mov
int3
pop
loopne
adc
mov
out
xchg
mov
jge
iret
jo
jmp
inc
std
mov
adc
or
lcall
xchg
hlt
iret
xor
fmull
in
inc
push
and
int3
fadds
mov
add
pop
xchg
xor
jnp
movsl
negb
push
xor
lcall
imul
jge
mov
pop
cmp
xlat
xchg
aas
repnz
pushl
push
sub
fisttpl
popa
hlt
out
in
push
out
repnz
incl
daa
jge
stc
imull
dec
in
testl
xchg
arpl
push
nop
dec
xor
into
and
mov
hlt
pop
scas
adc
aaa
popa
aaa
cmp
mov
inc
test
push
fildl
cmpsb
cli
pop
add
popf
in
dec
push
movsb
pop
and
dec
loope
mov
cmpsb
cmpsb
mov
ljmp
cmpsl
jmp
mov
out
mov
add
clc
sub
mov
and
fs
jge
sbb
repnz
sub
add
dec
punpckhdq
fstpt
dec
pop
sbb
xchg
xor
xor
mov
loopne
xlat
fsubrl
mov
lret
push
mov
cmpsb
pop
push
xchg
add
cld
mov
push
jge
and
lods
xchg
mov
sti
fidivs
and
outsl
pusha
push
shl
jno
mov
lods
jge
and
push
loop
or
mov
in
popf
rolb
cld
xchg
popf
lcall
jle
pop
mov
cmp
mov
cmp
stos
push
mov
xor
or
or
or
add
mov
sub
test
jns
mov
sub
xchg
mov
jp
dec
xchg
lcall
mov
pop
push
imul
test
xor
add
mov
mov
inc
cmpsb
ja
or
arpl
out
xchg
popa
cltd
incb
push
stos
xor
lret
mov
inc
aas
pop
je
cmp
pop
xor
pushf
pop
jne
cmp
adc
lcall
and
imul
ja
mov
in
pushf
testb
pop
sub
data16
inc
jae
loopne
insl
jge
add
hlt
pop
pop
or
fstpl
shrl
jbe
push
test
pop
sub
ds
fcoms
or
mov
adc
test
mov
or
cld
xor
and
dec
jno
aam
scas
sbb
jecxz
adc
dec
jb
sub
dec
and
lret
sbb
mov
in
popf
fistpll
loope
cmpsb
sbb
cmp
dec
sbb
adc
mov
inc
dec
sub
mov
mov
sahf
add
jge
add
sub
or
push
stos
inc
andl
sub
xor
mov
stc
mov
mov
push
aam
jl
sub
enter
ljmp
lret
filds
nop
push
inc
aad
in
lret
adc
add
jg
out
imul
nop
xor
mov
scas
inc
adc
lret
jmp
idivb
arpl
sub
clc
arpl
aaa
out
int3
out
les
rcll
loope
xchg
mov
jmp
dec
and
imulb
arpl
pop
mov
xchg
popa
mov
xchg
ficomps
lods
movsb
lods
xor
xor
js
add
fisttpl
mov
imul
xchg
add
pop
std
sbb
pusha
lods
mov
addr16
mov
je
cmp
fs
dec
add
cmpsb
xor
cmpsb
dec
xchg
leave
jae
dec
xchg
sbb
xor
jnp
add
je
jbe
leave
filds
jno
negl
popf
pop
xor
addr16
add
ffree
imul
dec
arpl
mov
inc
jo
lock
push
out
mov
inc
imul
int
repz
shrl
call
in
in
mov
mov
or
jmp
mov
inc
mov
out
lea
test
rcl
mov
pop
push
rorb
insl
lods
aaa
mov
mov
stos
fldl
inc
xchg
arpl
xchg
inc
js
rorb
cmp
and
add
pop
daa
mov
cmp
and
mov
jle
call
subb
sub
cmp
jle
xorb
mov
or
pop
addr16
or
pop
call
lcall
mov
sub
pop
jns
ja
fucomp
jg
push
imul
cmp
fwait
sub
lods
mov
iret
cmp
pop
mov
xchg
xchg
push
mov
mov
mov
push
clc
jmp
aaa
xor
push
push
jp
fdivrl
leave
stos
jmp
dec
lods
je
ja
xor
xchg
dec
sbb
fcoms
mov
push
lcall
popa
bound
mov
adc
pop
mov
mov
insl
mov
xor
and
push
aas
lahf
add
jp
push
pop
inc
adc
pop
mov
sbb
imul
shll
test
push
lcall
or
jl
fcomps
xor
sub
in
lcall
xchg
and
or
and
in
into
cmp
dec
push
push
jo
xor
movsb
pushf
mov
mov
sub
idiv
pusha
mov
xor
outsl
jg
insl
dec
mov
jns
jb
mov
jge
aas
lods
aad
ficomps
inc
push
jg
out
and
lahf
or
call
push
xor
popf
mov
aam
sbb
mov
rcll
jb
clc
push
xor
imul
das
scas
dec
sbb
int
adc
add
mov
insl
sahf
shll
fbld
lods
dec
add
mov
adc
sbb
mov
add
jae
push
incb
cmpsb
aam
out
outsl
xor
fldcw
add
out
mov
ja
call
xor
imul
dec
mov
inc
inc
ds
push
mov
std
mov
js
mov
insl
movsl
paddq
and
cltd
sahf
mov
inc
cmp
and
add
or
pop
cmpsl
pop
dec
cmc
mov
mov
pop
sub
leave
mov
inc
dec
mov
xor
std
sbb
enter
sbb
pop
test
pushf
clc
into
into
mov
add
or
mov
rolb
ret
sbb
ja
iret
mov
dec
mov
jg
sub
jns
test
rcl
addr16
sahf
or
mov
dec
jmp
mov
and
xor
jle
test
pop
or
daa
inc
xchg
push
pop
cmp
test
rcll
adc
push
into
loopne
or
pop
xor
jbe
inc
data16
pop
lods
or
addr16
push
sahf
je
cmp
or
jecxz
cli
aad
adc
cmp
cmc
frndint
sbb
sbb
out
movl
mov
inc
iret
lods
outsl
fiaddl
or
das
mov
jecxz
pusha
and
adc
arpl
roll
mov
mov
xor
out
mov
sahf
push
sbb
add
push
jo
cmp
or
jne
dec
ret
fnstsw
int
mov
cmpsl
out
es
sbbb
sbb
out
xchg
aad
fdivrs
shll
shl
in
je
cmpsb
insl
mov
sub
push
popf
dec
mov
push
insb
movsl
push
inc
dec
push
cmp
mov
lods
and
push
faddl
push
movsb
ja
imul
pushf
data16
sub
daa
nop
into
repz
mov
and
idivb
push
mov
inc
test
jno
lods
xchg
or
jo
lret
in
mov
mov
pop
movsl
dec
lods
push
cmp
cli
xor
mov
push
cmpsl
and
jmp
cmpsb
cs
rcll
ja
je
mov
daa
in
fsubrl
dec
inc
mov
sub
in
aas
dec
inc
mov
jno
inc
sarb
sahf
cmp
test
dec
test
add
sbb
repnz
xchg
arpl
fmull
mov
and
idivl
insl
pop
mov
jg
mov
lret
je
sahf
ljmp
sbb
icebp
ja
adc
xor
movsb
outsb
mov
loope
dec
nop
sar
push
movsb
jb
sub
repz
outsb
clc
setge
mov
rcrb
cld
sub
or
hlt
jns
push
shlb
leave
int3
xlat
push
dec
cmc
lods
push
sbb
out
or
out
mov
mov
sbb
mov
shl
fimuls
ficompl
xor
shr
inc
push
leave
mov
jnp
enter
inc
cmpsb
jl
jp
in
call
mov
jo
fisubl
lcall
jno
or
in
lods
loop
addb
mov
test
test
add
pop
push
nop
inc
mov
jae
rorb
ficomps
mov
sti
add
push
mov
push
mov
push
push
ja
pop
xchg
xchg
das
iret
cs
or
dec
sub
ja
cmp
outsl
lret
sbb
int3
pop
test
mov
or
loope
pop
shrl
push
inc
mov
mov
jmp
inc
lods
pop
push
and
xchg
lods
mull
test
shrl
and
loope
mov
test
push
or
mov
mov
adc
fsubs
popa
scas
dec
dec
aaa
sbb
test
add
sbb
ljmp
sbb
mov
push
xchg
pop
mov
je
pop
xorb
xor
arpl
xchg
mov
pusha
xlat
dec
cld
out
mov
dec
jge
loop
stos
and
jecxz
fsub
lcall
outsl
pop
clc
in
xchg
mov
mov
mov
jecxz
xchg
ja
inc
fdivrp
xchg
mov
mov
call
inc
adc
jmp
sbb
gs
mov
pop
xor
enter
pop
xor
add
mov
in
movsb
mov
xchg
popf
adc
iret
mov
inc
adcb
clc
pop
mov
push
mov
dec
out
push
data16
add
jns
pop
lods
dec
scas
sub
add
int3
fdivp
lock
inc
orl
jg
and
xchg
rol
xor
cmp
xchg
push
adc
mov
mov
in
call
test
mov
xchg
dec
repnz
loop
out
push
popa
and
or
loop
jl
mov
adc
add
jl
insl
outsl
xchg
cmpsb
jg
loop
inc
fbstp
xor
inc
mov
cmp
mov
aas
test
repnz
cltd
jg
call
push
inc
or
icebp
test
arpl
pop
cli
fisttps
xor
aas
dec
sbb
xor
dec
jne
lcall
xor
aam
nop
shrl
lahf
fwait
mov
sarl
cmp
inc
push
dec
testb
test
xor
pop
push
mov
sbb
enter
adc
and
add
into
lahf
or
jns
sahf
push
test
aam
es
in
cmpb
pop
add
fistpll
lock
xor
dec
or
dec
je
mov
lret
lret
int
pop
outsl
pop
int
add
inc
icebp
mov
mov
jp
xchg
mov
pop
jecxz
fildl
es
mov
push
add
adc
push
test
popa
push
mov
fstps
mov
je
or
xor
js
mov
pushf
push
sbb
xor
bound
lea
inc
xor
adc
pusha
xor
mull
shrb
mov
xchg
movsl
push
cmp
das
sti
andl
repz
call
push
inc
sub
notl
mov
cmpb
xchg
cmp
xchg
pinsrw
xchg
nop
cli
rcrl
inc
aas
repnz
wbinvd
adc
cld
pop
popf
jnp
loopne
sbb
jmp
sbbl
fs
mov
bound
jg
and
cmpsl
sarl
add
cmpb
mov
int
insl
jle
repz
mov
repnz
xor
fldcw
iret
es
fsubs
jbe
clc
in
mov
insl
pop
ljmp
sbb
jns
pop
cmc
pop
push
lcall
addl
sbb
xchg
jecxz
dec
in
mov
repz
dec
out
je
pop
mov
or
fstps
in
cmp
shlb
leave
daa
sbb
imul
in
outsl
push
cmp
insb
adc
mov
outsl
or
aaa
sub
inc
dec
ret
sub
jmp
ficoml
push
out
lret
fwait
lea
xchg
movb
popa
daa
jae
xchg
cmpsb
lods
sbb
sbb
mov
aam
inc
inc
and
pop
push
dec
and
movsl
adc
decb
rorl
push
ja
push
movsb
mov
cmp
test
cwtl
mov
lds
xchg
sahf
shlb
shlb
inc
mov
lret
inc
outsl
outsl
daa
dec
dec
or
sahf
mov
ljmp
faddp
es
inc
push
sub
mov
scas
mov
xchg
and
out
lods
lods
cli
jae
or
push
mov
pop
outsl
repz
test
ljmp
addr16
jno
push
pop
lock
push
cmp
daa
cwtl
mov
jle
into
pop
mov
pop
lods
cmpsb
enter
shlb
and
pop
xchg
mov
lds
push
aad
movsl
xchg
lea
adc
mov
out
lahf
mov
imul
push
mov
rcrb
dec
in
mov
cli
outsl
mov
ja
mov
sbb
pushf
fcom
rdmsr
pop
mov
or
pop
xchg
push
adc
cmpsb
jae
jns
mov
shlb
int
push
das
sub
pop
jg
pop
out
das
std
enter
mov
sub
loop
mov
jb
mov
ja
jecxz
je
outsb
mov
xor
fdivrs
push
popf
dec
je
imulb
enter
push
add
movsb
hlt
imul
and
xchg
or
sbb
xchg
jge
dec
xchg
call
fstps
jp
test
sub
mov
fsts
les
and
out
pushf
jp
xor
stos
xchg
inc
int
pushf
xchg
sbb
mov
push
cmc
int
inc
jg
pusha
adc
inc
jle
scas
jmp
dec
push
in
jae
divl
and
das
in
or
dec
mov
add
rcrb
pop
scas
es
and
mov
dec
das
cli
or
mov
rorl
into
jbe
dec
mov
out
shlb
negb
testl
and
sub
and
xchg
mov
loop
xchg
ss
pop
jne
lahf
aaa
mov
adc
pop
and
inc
in
add
mov
dec
cmc
pop
imul
pop
rcll
add
or
mov
inc
fwait
xchg
movsb
aam
pop
jno
mov
pop
scas
inc
pop
cmpsl
add
mov
pusha
mov
or
sub
pop
into
mov
leave
adc
xor
xor
ret
outsb
push
sub
lcall
add
roll
jo
fucom
push
stc
or
lods
xor
cwtl
and
cmc
into
mov
xor
xor
push
xchg
ss
inc
loop
mov
lds
push
pop
push
gs
push
pop
popf
das
lret
jb
divl
adc
xor
xchg
ret
sbb
mov
sbb
jecxz
jg
imul
cmc
mov
jmp
sbb
mov
out
jbe
divb
lahf
xchg
inc
inc
fs
lcall
mov
loop
movsl
inc
xchg
jle
add
sbb
push
pop
jb
mov
repnz
pop
ret
mov
jbe
jae
dec
mov
leave
mov
mov
or
jae
call
out
test
pop
sub
sbb
je
xor
add
add
cld
mov
inc
pop
sti
cmp
add
aam
insb
daa
aaa
jns
fmull
stos
shrl
fmull
shll
dec
xchg
aam
lret
jnp
push
imul
or
ret
stos
jg
and
nop
and
mov
inc
icebp
sbb
jmp
and
pop
sub
push
push
jne
xor
imul
data16
outsb
test
dec
imul
adc
push
xor
shl
jge
jno
sub
sahf
mov
icebp
dec
mov
mov
inc
cmp
sbb
sbb
insb
mov
sbb
mov
sub
jmp
das
and
in
aad
scas
lea
inc
add
inc
in
mov
call
adc
fwait
jbe
aam
xor
icebp
lock
xchg
xchg
call
pop
lcall
mov
sub
add
xor
cli
sarb
lds
or
bound
mov
and
fwait
fwait
jmp
jno
sbb
cmp
outsb
jge
loopne
in
sbb
in
in
and
jns
je
xor
out
ficomps
dec
pop
sbb
iret
xlat
loop
push
test
scas
std
mov
fidivl
add
out
enter
mov
push
les
add
pop
cmp
incb
xor
xchg
add
cwtl
mov
xor
lock
cmpsl
xchg
push
xchg
pop
stos
movsb
fnstsw
pushf
cmpsl
inc
inc
jns
pop
adcb
es
cmpsl
pop
stos
pop
addr16
and
sub
pop
push
fistl
and
lea
inc
xor
push
cwtl
popf
fcomps
and
int3
add
adc
sbb
clc
in
je
in
testl
xchg
cmpsb
inc
jecxz
inc
adc
push
mov
pop
aad
lods
out
inc
cmp
cmp
dec
dec
aas
mov
mov
jle
fisubl
mov
and
cli
hlt
popa
jg
ljmp
lods
pushf
mov
xchg
jns
mov
in
mov
ss
stc
jge
out
aas
sub
adc
mov
movsl
dec
xchg
addr16
daa
mov
sysexit
stos
lods
cmp
sarl
fildl
pop
and
sbb
lods
std
push
push
jno
and
mov
ja
mov
icebp
fcomp
xchg
ss
mov
loop
gs
fcompl
popa
pop
xorb
dec
sub
adc
test
movsb
sub
rcr
mov
mov
cmpsl
sbb
adc
cli
adc
scas
jb
pop
divb
add
shll
movsl
xor
iret
adc
nop
je
pop
js
cmp
inc
aas
xchg
pop
mov
and
and
repz
popl
iret
data16
cli
out
orl
sarl
jae,pn
mov
mov
and
dec
ljmp
out
mov
xchg
test
nop
or
in
inc
push
push
mov
xchg
or
addr16
jae
outsl
inc
mov
jp
dec
lret
shll
nop
ds
sbb
inc
fs
sub
popa
mov
push
jne
repz
data16
loope
pushl
popf
add
out
xchg
jmp
dec
jb
mov
je
and
outsl
mov
stc
push
mov
push
cli
dec
push
in
cmp
test
push
les
enter
mov
sarl
ret
addr16
or
hlt
aam
hlt
jge
push
ror
dec
cwtl
arpl
sti
cmp
adc
mov
test
das
mov
in
je
inc
insb
xor
lods
jb
call
dec
andl
jns
insl
mov
cs
push
pop
adc
pop
pushf
sub
mov
popf
popa
xchg
pop
arpl
xchg
xor
pop
xchg
jmp
ret
repz
imul
fadd
or
mov
sub
jmp
aas
push
mov
pusha
add
and
dec
ss
pop
fwait
sbb
mov
lods
or
loop
inc
ret
xor
sub
sarl
popa
int3
daa
cmp
lea
stos
cmp
adc
leave
mov
hlt
or
mov
jbe
outsl
jle
cmp
out
mov
add
cmpsb
int
push
inc
outsb
or
mov
jp
iret
mov
add
pop
mov
mov
xor
dec
dec
sbb
or
fsts
sub
scas
cmp
arpl
loope
sub
into
dec
sub
mov
enter
and
hlt
mov
cmp
mov
and
xchg
imul
cs
cli
imul
leave
out
aam
fcompl
dec
sahf
and
loop
pop
mov
outsl
mov
xorl
sbb
das
xor
das
cmp
or
sbb
loopne
jle
lea
cmp
std
ja
or
dec
daa
or
pop
jp
test
adc
pop
call
inc
jle
gs
test
push
mov
sahf
mov
loopne
movsl
lock
mov
cmp
dec
cmp
roll
xorl
es
push
lret
mov
mov
or
xchg
jecxz
scas
dec
nop
fmuls
das
push
pop
pop
addr16
cmc
mov
int3
mov
ja
sti
roll
add
imul
shl
mov
mov
push
pop
aaa
lret
ljmp
cs
gs
aaa
arpl
sub
mov
lret
inc
or
push
aaa
repz
subb
stos
pusha
enter
and
mov
jge
push
xchg
cli
cwtl
pop
out
and
scas
bound
in
or
cmpsl
outsl
fs
push
mov
test
cmp
mov
mov
aad
mov
xchg
xlat
add
adc
sub
fs
push
mul
lods
aas
mov
sub
jp
int
jb
cmpsb
ret
ja
and
sub
jecxz
adc
mov
xlat
dec
into
mov
add
sbb
test
enter
jo
mov
push
xor
filds
into
add
cmc
sub
xor
scas
mov
pop
jl
shl
mov
mov
xchg
aas
xchg
inc
mov
or
push
xor
int3
enter
jne
mov
dec
or
iret
push
jno
mov
mov
fadds
into
add
jb
sub
shrb
mov
mov
inc
sbb
cwtl
jae
mov
sub
pop
aam
and
pop
xchg
push
sub
cmp
mov
sbb
cld
jle
push
cmpsl
fldenv
and
sbb
sbb
insb
stos
add
mov
push
jp
repz
aas
mov
mov
sbb
mov
cmp
ss
mov
rcrb
jmp
daa
or
mulb
jno
mov
insb
xor
adc
or
mov
idiv
dec
adc
dec
push
repnz
add
orb
dec
test
or
xor
insb
scas
jae
fs
mov
movsb
leave
enter
add
imul
test
les
mov
jp
cmpsb
dec
sbb
add
ss
enter
add
ret
dec
push
sub
lods
xor
repnz
outsl
or
aaa
fs
fistl
xor
std
adc
fimull
mov
sub
leave
pop
in
mov
fs
mov
mov
mov
iret
ja
mov
aas
out
mov
add
outsb
adc
scas
mov
push
xor
sub
xchg
test
pop
rolb
mov
add
es
aam
faddl
insl
mov
jne
pop
pop
xchg
xor
fmull
in
cmpsl
scas
gs
idiv
push
addps
sub
ret
and
imul
sub
push
jecxz
mov
or
ret
bound
fsubrs
lret
mov
dec
loope
std
inc
hlt
mov
sbb
or
jle
fnsave
punpckhwd
repnz
cwtl
jmp
sti
jp
aaa
jo
xor
mov
imul
pop
outsb
ret
lcall
sub
test
fwait
in
inc
lahf
cltd
sarb
xchg
cmp
insl
jp
jl
push
add
rcll
fistl
xchg
mov
mov
sahf
das
adc
aaa
pop
shlb
sub
popf
fcoms
or
nop
inc
iret
rcrl
jl
lock
jle
and
sarb
sub
xchg
fisttpll
xlat
repnz
leave
pop
fists
xchg
jbe
nop
jp
push
jg
and
ja
into
stos
xchg
add
dec
push
test
into
shrl
pop
cmp
ljmp
push
adc
jns
xchg
in
aam
repz
add
inc
imul
frstor
popf
movsl
dec
bnd
sub
stc
xor
test
mov
rcrl
jb
lock
call
inc
jb
xchg
add
fsubrs
inc
fsub
mov
or
cmpsl
mov
mov
dec
jge
mov
push
ss
push
ret
fisttpll
repnz
scas
push
mov
adc
dec
je
pop
fdivp
shll
std
add
adc
out
push
js
dec
cmp
xor
sti
xor
arpl
pushf
push
loopne
mov
pop
ss
bound
fs
repnz
xchg
adc
les
nop
hlt
loope
das
push
into
scas
divl
sar
xchg
andb
push
push
cmp
and
and
sbb
push
sbb
rcll
stos
cmp
xchg
push
ret
ds
sbb
xchg
pop
movsl
aaa
push
std
mov
sbb
into
int3
fisubrl
orl
loop
pusha
add
jp
popa
jmp
jb
stc
popf
push
outsl
xor
adc
test
push
cmpsb
mov
cmp
sub
push
jmp
lahf
and
gs
aad
xchg
test
leave
dec
jae
and
lods
fbstp
int3
mov
fwait
jecxz
push
and
mov
into
test
xchg
loop
cmp
inc
ljmp
int
mov
mov
aaa
fwait
xor
je
testb
xor
ret
test
xchg
and
ja
or
icebp
cmp
dec
xchg
pop
fmuls
test
add
mov
andps
mov
xchg
test
push
test
or
fimull
dec
jae
movsl
dec
push
cmpsb
iret
push
adc
pop
test
mov
out
mov
sbb
inc
jl
fnstcw
divb
aas
mov
xchg
fwait
mov
xchg
add
stos
aas
mov
dec
jmp
in
je
flds
lock
fwait
shrb
sub
jmp
cmc
mov
adc
push
xor
mov
xchg
jle
rolb
movb
or
xor
fsubrp
inc
nop
popfw
lds
sbb
jo
pop
xchg
sub
sbb
inc
fstp
gs
push
jmp
daa
lea
ficompl
push
pop
sbb
imul
loope
mov
jne
inc
aam
jmp
repnz
pop
ljmp
lds
pop
outsl
adc
lea
fdivs
mov
mov
sub
aam
sahf
rcll
inc
push
xchg
mov
inc
insb
xlat
pop
lods
arpl
sub
shll
shld
clc
neg
aad
sub
ret
adc
cmp
mov
enter
stos
or
cmpsl
jl
repz
test
adc
add
shl
mov
mov
outsb
fildl
mov
leave
ds
xchg
pop
movsb
cmc
pop
arpl
mov
orl
jno
jge
push
ss
or
mov
xchg
lods
and
inc
test
fnstcw
mov
or
aaa
lea
arpl
loop
mov
pop
cmpsl
inc
xchg
addb
jg
movsl
sub
in
mov
movb
pop
jmp
pusha
fdivr
scas
dec
sub
out
cmp
addl
loope
shr
xchg
xor
aaa
outsb
rclb
jno
mov
xchg
inc
mov
jmp
mov
or
and
xchg
xor
lcall
cmpsl
lds
fcmove
sbb
add
pop
subb
xchg
in
fisttps
xchg
mov
fdivs
mov
pop
add
lret
lods
outsl
movsb
cmpsb
and
or
sub
pop
cltd
les
pop
insl
imul
xor
xchg
mov
cs
rcll
or
dec
inc
sbb
outsb
mov
stos
fstpl
add
adc
or
out
faddl
insb
inc
jbe
push
mov
into
push
int
cmp
and
fnstenv
fisttps
in
lcall
fiadds
and
lret
imul
lea
cltd
inc
ja
movsb
mov
stos
dec
imul
rol
pusha
mov
movsl
jbe
sbb
lret
dec
and
mov
pop
int
inc
test
add
and
popa
mov
ljmp
cs
stc
stos
mov
jecxz
rcrb
das
mov
mov
iret
mov
fiaddl
pop
fs
test
cmp
sar
imul
sbb
or
xchg
push
cmp
stos
or
loopne
mov
xor
jmp
adc
cmpsb
sbbl
in
inc
imul
push
insb
push
insl
pop
cmp
cs
pop
mov
pop
icebp
leave
arpl
and
data16
jg
stos
jae
dec
cwtl
mov
jecxz
popa
jg
imul
pusha
jnp
mov
arpl
sbb
mov
lock
out
popa
cmp
and
scas
imul
push
leave
sbb
push
or
mov
mov
inc
outsb
shlb
cmp
xchg
adcl
inc
mov
ss
push
jmp
gs
inc
ss
adc
add
imul
or
in
lods
or
test
push
and
cmp
cmc
xor
mov
sarb
inc
shlb
leave
cmp
sbb
sbb
out
pusha
ljmp
pusha
mov
idivl
xor
cmp
sbb
or
testl
mov
pop
into
xor
jmp
insl
sbb
mov
imul
xor
cli
xor
orl
testb
lahf
mov
sbb
into
lds
out
int
das
xchg
imul
sub
mov
pop
jmp
gs
sub
xor
cmp
divl
pop
ret
out
ljmp
cli
pop
aaa
adc
jo
outsb
dec
ds
jne
lret
jnp
xor
add
test
out
push
sbb
lods
cmp
inc
stos
hlt
jae
pushf
pusha
add
mov
push
incl
flds
nop
sub
pop
lods
mov
aas
arpl
lock
outsb
sub
xor
add
jno
jmp
lods
mov
jns
push
adc
shlb
testl
inc
stos
dec
inc
fs
outsb
push
dec
in
mulb
test
les
mov
popa
repz
addr16
pop
sbb
push
femms
div
xchg
loopne
sbb
test
jmp
fbld
jg
dec
xchg
mov
xor
movsb
test
cmpsw
dec
int3
cltd
shl
mov
sbb
insb
movsb
inc
mov
aas
xor
push
lcall
ds
fsts
mov
xchg
aad
fstps
fiadds
add
sarl
fildll
pop
and
push
mov
stos
pop
loop
pop
push
lods
cmpsb
dec
mov
sbbb
xlat
ljmp
mov
int
jl
pop
pop
sub
fs
in
sub
mov
lcall
push
aad
add
jp
lret
add
mov
lods
daa
pop
push
or
cmp
test
and
push
aam
xor
add
shll
jle
fdivr
cmc
push
pop
rolb
lods
mov
stos
iret
inc
test
hlt
lret
mov
clc
stc
jle
push
mov
ffree
jp
daa
jb
leave
in
jb
daa
push
insl
mov
icebp
dec
mov
cmp
cwtl
or
jl
add
inc
rcll
or
jbe
std
repz
cwtl
jnp
xor
sti
lea
jl
icebp
push
add
xchg
flds
sub
sbb
cmp
sub
decl
jge
adc
gs
sub
scas
pop
sub
shll
iret
fld
pop
sbb
sbb
clc
fwait
in
test
mov
or
sub
push
mov
jae
ja
jbe
pop
sbb
in
sbb
xor
jne
test
cs
adc
int
movsb
popf
stos
mov
pop
nop
or
xchg
add
insl
pop
aas
dec
dec
lcall
dec
cmp
fadds
mov
in
loope
shlb
pop
mov
insl
add
push
mov
cmp
addb
pop
popa
rcl
or
mov
adc
nop
imul
aam
fsubrl
sub
add
add
cmp
cmp
push
nop
xchg
fcmovu
ficoml
lea
mov
test
cmc
jmp
imul
mov
adc
adc
cmp
pop
pop
out
mov
in
lods
aam
test
fsubp
out
jg
push
sub
pop
movsl
stos
mov
push
inc
loop
xchg
inc
add
or
push
leave
lea
lock
sub
or
lods
push
adc
out
jo
xchg
push
stos
int
cmp
add
das
mov
in
arpl
mov
sub
dec
pop
clc
sub
or
hlt
sub
mov
outsl
xchg
sbb
and
rorb
cmpsb
stc
mov
push
out
nop
jmp
mov
out
inc
mov
int3
sarb
out
push
adc
ljmp
mov
add
adc
sbb
mov
sub
lret
sub
fnstcw
xchg
daa
xchg
in
movsl
testb
pop
jo
dec
cltd
or
loope
adc
in
inc
pop
test
xorl
fistpl
cld
ds
mov
shlb
push
pushf
nop
xor
mov
stos
inc
gs
fs
cltd
lods
sub
dec
mov
mov
adc
adc
aas
scas
rorb
fiaddl
add
mov
cmp
inc
enter
test
pop
dec
ret
popf
repz
xchg
lds
outsb
mov
aas
pop
cmp
das
push
lods
sbb
stos
ds
repnz
mov
jo,pt
sahf
push
je
in
not
cmp
pop
or
dec
aad
fsubrl
lret
add
push
mov
imul
sbb
in
mov
jp
inc
sbbb
inc
pop
fdivrl
mov
and
and
cmp
jno
push
in
cmp
pop
mov
pop
fwait
mov
insl
jp
push
popf
jnp
xchg
in
subl
dec
out
push
fimuls
push
xor
cmp
jne
mov
dec
inc
jns
sub
in
and
xor
dec
sbb
mov
push
xor
lock
sub
and
push
sbb
pop
xchg
aam
sarb
int3
cld
fmuls
seta
in
sub
dec
adc
rol
and
sahf
fstps
std
ret
imul
xchg
sbb
lret
and
add
int
fimull
cwtl
push
aam
inc
jno
jecxz
lods
stos
mov
jmp
enter
push
mov
std
xor
incb
scas
ds
dec
pusha
jns
loope
jl
dec
sub
arpl
loopne
sub
dec
mov
adcl
popa
pop
in
fs
mov
push
scas
test
loope
add
lods
sub
jne
dec
iret
mov
shlb
push
outsl
ja
pop
loopne
pop
or
push
and
pop
jmp
cmp
cmpb
xchg
out
xchg
movsb
cmp
cmpl
mov
and
jno
xchg
mov
mov
andb
daa
test
insb
push
daa
shl
lock
and
inc
jns
in
lcall
adc
leave
lcall
imul
adc
mov
in
loopne
outsl
insb
add
inc
add
out
mov
fsubr
push
in
fistpl
ja
bound
sub
inc
jb
push
lods
push
lods
movsb
dec
xor
mov
das
fcmovbe
mov
xchg
addr16
scas
loopne
push
test
push
mov
jae
and
popf
jg
pop
test
or
loop
out
push
popf
xor
repnz
sbbb
cwtl
dec
mov
dec
mov
cmp
add
cmp
loop
dec
xchg
hlt
mov
jg
outsl
je
mov
aas
ret
movsb
lds
and
push
xchg
inc
jg
rcrb
fcoml
mov
flds
xchg
inc
inc
sub
mov
mov
rorl
cltd
test
xor
pop
xor
je
add
sbb
int3
int3
pusha
shl
add
and
xor
jbe
add
and
std
jne
scas
addb
or
mov
push
aaa
out
mov
sbbb
pushf
test
loop
popf
add
rol
jbe
mov
scas
inc
adc
cmp
cltd
ret
xlat
xor
lret
mov
shlb
pop
mov
fistl
fsubs
imul
call
outsl
dec
mov
push
test
sbb
add
xor
pop
aas
xchg
popf
pop
insl
add
jne
inc
into
paddsw
inc
jmp
mov
mov
adc
in
sub
fadds
pop
stc
xchg
sarb
mov
and
ficompl
fisubs
lods
inc
lahf
mov
lock
nop
and
pusha
mov
dec
xlat
icebp
data16
adc
test
imul
and
xor
jl
popa
jle
outsl
cli
mov
adc
shrb
inc
or
stos
cmove
push
pop
imul
dec
jge
stos
sbb
out
pusha
mov
call
mov
test
lds
mov
mov
scas
fcompl
push
cs
fxch
insl
xchg
push
jge
cmp
adc
lcall
pushf
sti
sti
push
add
jae
outsb
fisubrl
mov
mov
push
jo
jmp
insl
mov
ds
lods
dec
sbb
test
inc
scas
or
enter
push
testb
jb
add
outsb
hlt
xor
sbb
xor
add
fstpt
xor
fwait
loope
sbb
xor
add
out
pop
incb
in
push
clc
idiv
test
imul
aas
popa
pop
out
mov
pop
ret
and
jle
or
jmp
and
ret
dec
pop
mov
sub
movl
mov
dec
push
cmp
cwtl
sub
push
xor
pop
mov
dec
jge
sbb
inc
fsub
pusha
pop
pop
call
das
scas
or
sub
mov
loop
pop
iret
sti
mov
jecxz
xchg
dec
sbb
jmp
ret
cmp
movsb
es
in
js
mov
pop
sbb
divl
daa
push
push
push
and
dec
sbb
push
mov
push
xchg
dec
ror
push
add
stos
dec
insl
mov
push
das
icebp
or
sahf
push
enter
jb
int
sbb
lock
mov
dec
xchg
sub
mov
fucom
xor
sbbl
pusha
loope
xor
mov
shrl
xchg
dec
cs
adc
call
lods
or
daa
jns
int3
and
sub
xchg
in
les
mov
sbb
sbb
test
push
andb
dec
inc
jg
lods
into
mov
mov
cmpl
mov
xchg
xchg
js
xchg
call
fcoml
xchg
fadds
mov
loope
fst
jns
mov
test
call
iret
dec
adc
js
pop
mul
gs
cmp
inc
adc
fwait
xor
sbb
dec
mov
pushf
dec
test
fldl
adc
adc
or
into
sbb
in
xor
das
mov
js
and
sahf
outsb
cmp
xchg
mov
cmp
adc
lock
adc
out
dec
insb
xchg
pop
push
test
sbb
inc
jns
fadds
addr16
addr16
mov
pusha
inc
icebp
xor
outsl
idiv
inc
jb
sti
lret
mov
jp
dec
inc
insb
imul
gs
push
pop
repz
fwait
test
dec
adc
fcmovbe
pop
add
aam
dec
cmp
hlt
arpl
add
mov
jge
fucomi
into
cmp
lea
lea
sbb
cwtl
push
popf
out
lods
jge
and
leave
cmpsl
cmp
xor
xor
dec
test
jl
repz
ja
and
scas
cmpb
or
popf
mov
jge
mov
lcall
ror
jmp
xor
outsl
cmp
pusha
or
mov
jno
dec
pop
push
lods
loope
insb
ljmp
arpl
popa
pop
out
add
leave
ss
xchg
pusha
in
int3
push
mov
mov
enter
lods
jmp
leave
ljmp
in
adc
insl
in
push
adc
lcall
inc
inc
imul
mov
int
leave
in
xchg
pop
adc
hlt
out
stos
xchg
jmp
cmpsl
stos
mov
flds
fdivrp
adc
adc
lds
sbb
push
aaa
dec
pop
push
nop
or
cmp
dec
pushf
jg
mov
push
out
negb
xchg
bts
jns
cmp
es
dec
mov
cmc
pop
mov
aas
pop
jne
out
mov
adc
push
xor
sub
mov
jbe
rcrb
lahf
add
pop
push
xchg
inc
sti
sarb
out
adc
mov
dec
or
xor
dec
fs
dec
cmp
jmp
jnp
jle
scas
repz
fbld
rcll
pop
xchg
gs
mov
mov
jmp
out
jbe
mov
mov
idivb
jo
cli
arpl
outsl
stos
adc
sbb
sbb
dec
jnp
sub
outsl
adc
sub
ja
push
pop
fdivp
adc
fstp
js
aam
cmpsl
xchg
test
lds
repz
divl
movsl
jbe
add
xchg
dec
lods
push
scas
push
mov
das
or
out
push
push
fst
inc
xchg
mov
pop
mov
or
add
test
ret
cli
sbb
in
inc
addr16
call
xlat
mov
add
jns
data16
out
xor
lock
xchg
into
out
fisttps
xchg
sub
pop
push
scas
jns
add
scas
jb
mov
add
cmp
jo
xchg
lock
jge
xor
in
and
sbb
xor
test
mov
cmp
inc
or
out
or
clc
cmp
aam
xor
call
push
dec
testl
arpl
xchg
mull
cmp
xchg
xchg
cltd
cmp
popa
push
add
jle
adc
mov
xor
outsb
icebp
mov
iret
pop
orb
test
hlt
mov
jl
mov
sub
cmp
fstpt
imul
mov
or
xchg
jo
cmc
lock
je
scas
adc
jge
sbb
mov
add
imul
pop
and
jne
in
dec
rcr
repz
ja
lea
fldln2
push
xchg
xor
inc
ret
mov
inc
rcrb
cmp
insb
mov
cmp
sub
ss
ret
sahf
push
sub
pop
fdivr
mov
cmp
out
mov
in
fsubl
adc
cmpsb
test
scas
or
leave
sti
aad
scas
shl
sbb
mov
mov
sub
push
push
lods
sbb
pop
mov
ja
inc
testb
into
xchg
clc
ret
ret
lahf
push
jbe
aas
out
shrb
pop
jge
push
cmp
or
mov
dec
insb
mov
mov
or
aas
push
mov
adc
mov
inc
cmpsb
or
pushf
andb
push
and
scas
lods
lods
xlat
add
gs
push
pop
push
in
sbb
jno
xor
pop
arpl
fisubl
and
test
das
pop
je
je
push
jge
fisubl
icebp
cmc
rcl
cwtl
gs
pushf
insb
cmp
stos
mov
adc
dec
push
pop
dec
xor
xor
hlt
mov
lahf
push
sub
movb
jne
mov
call
add
addr16
cmp
or
ja
push
insl
scas
testb
sbb
das
sti
pop
push
jecxz
pop
mov
loope
and
mov
mulb
pop
sbb
mov
jmp
jnp
mov
add
repz
cmpsb
hlt
adc
call
out
in
cmc
shl
add
push
pop
xor
add
push
xchg
xlat
mov
mov
jnp
lea
xchg
mov
jl
stc
insb
or
sub
xchg
scas
loop
and
mov
inc
and
cltd
jge
inc
hlt
incl
test
lret
and
test
mov
push
adc
mov
data16
int
pop
jne
lret
jns
sbb
dec
fildll
enter
inc
cmp
push
popa
fs
xchg
mov
push
dec
mov
lret
xchg
pop
xchg
pop
xchg
fbld
stc
sbb
js
test
hlt
mov
or
and
jge
sub
cli
daa
cli
pop
or
jnp
and
fbstp
xchg
dec
pushf
pop
xor
shl
loope
out
add
inc
and
sbb
test
addr16
pop
jmp
adc
inc
out
xor
movsl
push
pop
mov
inc
mov
xor
xchg
lods
inc
cmp
sbb
ss
jecxz
dec
pushf
pop
fadds
fs
pcmpgtw
add
inc
mov
jl
ss
in
mov
mov
cmpsl
aas
das
add
push
lock
mov
mov
mov
nop
mov
xchg
ja
insl
mov
xor
cld
popf
lcall
in
inc
inc
sub
mov
mov
inc
out
sahf
psrlw
inc
sahf
test
ds
fs
pop
sbb
repnz
push
out
ds
ss
fwait
or
into
pop
xor
aad
push
jae
inc
sahf
int
or
sar
mov
pop
out
xchg
sub
add
mov
mov
scas
jno
sbb
sub
and
test
pop
clc
push
iret
pop
out
ds
and
push
add
sti
fidivs
push
aad
adc
mov
push
icebp
jne
scas
sub
cld
cmp
leave
cltd
jl
shrb
mov
sarb
leave
jb
mov
dec
push
or
cmp
pop
pop
dec
ret
lcall
mov
cmp
jne
cmpsb
imul
jle
pushf
sbb
sbb
cmp
xor
cs
inc
adc
pop
ja
add
add
push
inc
das
add
mov
xchg
fsubrp
outsl
inc
addr16
pop
mov
out
mov
sbb
xchg
or
lock
es
xor
lods
in
or
loop
xor
jg
and
jle
push
or
nop
fistpl
cmpb
xor
pop
mov
iret
mov
imul
mov
loop
mov
ds
stos
in
mov
dec
mov
scas
icebp
fs
xchg
loope
cmp
sbb
dec
mov
xchg
mov
lods
sub
movsb
loop
push
scas
hlt
movsb
add
in
out
mov
lds
shl
push
and
jne
pop
xchg
test
xor
add
jl
aam
mov
sub
in
test
xchg
dec
xor
mov
mov
or
push
xchg
inc
test
repnz
jl
adc
cmp
shlb
aad
cmp
mov
jne
sub
or
add
mov
mov
or
shll
in
mov
out
cmp
push
hlt
les
mov
sub
cmpsb
inc
repz
xrelease
pop
sbb
mov
leave
jno
xor
loope
push
js
lahf
ljmp
loope
mov
cmpsl
nop
push
xchg
ret
stos
xor
or
push
cwtl
adc
and
int
adc
pop
adc
and
mov
jl
aaa
jbe
pop
adc
cmpsl
frstor
mov
fnstcw
ficomps
ret
cltd
add
aas
or
xor
xchg
cwtl
enter
rorl
mov
dec
enter
psrld
jnp
gs
dec
orb
mov
in
lret
push
fnsave
mov
movsl
fildl
sub
ss
jge
mov
int
rorb
mov
imul
movsl
dec
or
cs
mov
xchg
fs
sbb
jg
mov
ret
test
ljmp
xchg
adcl
sub
inc
adc
mov
sub
ds
fldenv
adc
add
push
addr16
js,pn
loope
aaa
jecxz
xor
pushf
dec
movb
mov
jb
popa
sbb
loop
mov
jbe
add
adc
outsb
stos
add
xor
xchg
mov
mov
outsb
in
mov
cmp
insl
cmp
jno
pop
push
cmc
pop
mov
fstl
inc
add
ja
mov
xchg
add
or
inc
loopne
addb
pop
mov
out
xlat
cmpsl
xor
mov
push
js
out
lds
cwtl
out
lret
mov
mov
inc
jnp
sbbb
andl
insl
inc
shl
pop
mov
popw
shll
scas
dec
adc
sbb
or
mov
gs
jb
mov
std
movsb
dec
sbb
xchg
not
or
orb
and
mov
aad
nop
jle
imul
inc
dec
dec
or
dec
push
daa
out
mov
jg
adc
inc
aad
arpl
shrl
in
loope
push
lret
ficoml
lret
jp
sub
ss
xchg
imul
stos
test
ss
pop
xor
pop
out
xchg
xchg
push
fwait
sub
xchg
sar
mov
fadd
or
ja
add
push
adc
in
mov
je
sti
sbbl
adc
inc
std
and
mov
jmp
loope
or
push
gs
pusha
cmp
js
cmc
mov
ss
sub
cmp
cmp
lcall
sub
out
xchg
mov
sbb
mov
mov
out
call
je
sbb
idivl
lret
dec
in
jp
lock
cltd
sti
mov
andb
push
subb
aad
aam
mov
pushf
xchg
mov
pop
fiadds
mov
jl
pop
scas
xchg
xor
out
sub
pusha
adc
dec
xlat
sbb
push
xlat
enter
mull
mov
int3
sbb
es
jl
popa
xor
cmp
pushf
pop
lods
add
in
ljmp
xlat
sbb
fdivrs
sub
xor
out
into
mov
fs
pop
pop
ds
rorl
pop
fwait
xor
push
xlat
xchg
pop
ds
ss
sbbl
push
dec
push
mov
mov
dec
sub
push
add
adcl
int
and
inc
cmpsl
mov
lock
aad
cltd
mov
add
push
iret
orb
cmpsl
mov
or
jmp
je
pop
push
or
push
daa
inc
push
sbbl
mov
cmp
sbb
call
cmpsl
xchg
cltd
pop
cmpsb
push
jo
cli
cmp
fcompl
je
leave
sub
push
aam
sbb
mov
es
adc
sbb
lret
fidivrl
out
icebp
imul
loope
mov
xorb
sub
fld
lcall
dec
push
cld
sbb
lods
mov
add
add
sbb
mov
dec
pushf
or
lcall
iret
arpl
mov
imul
mov
in
lahf
dec
scas
enter
inc
les
push
ljmp
mov
and
xor
imul
adcb
test
ljmp
adc
cmp
sub
jae
mov
fucomp
cmp
pop
xchg
mov
sahf
xor
fnstsw
mov
mov
mov
enter
cmc
or
fcoms
sbb
and
lock
push
pop
add
cmp
dec
sbb
and
in
push
sbb
xchg
xor
addr16
sbb
nop
push
sahf
popa
sub
dec
mov
add
mov
inc
dec
inc
fadds
mov
pop
insb
shrl
cld
ret
out
pushf
nop
rorb
pop
icebp
cmp
dec
mov
mov
das
xor
jnp
nop
sti
dec
inc
dec
das
xor
test
int3
dec
cmp
mov
je
dec
out
fdivl
cmp
insb
xchg
add
mov
ret
push
pop
test
push
jl
push
in
and
inc
add
jb
movsl
enter
xchg
movsb
xor
adc
bound
inc
shl
mov
outsl
and
cmp
out
jb
and
bound
ja
mov
mov
out
pushf
outsb
cld
andb
mov
pop
cld
nop
push
in
pusha
cmp
shlb
pop
jecxz
add
push
lock
in
mov
ljmp
push
dec
imul
adc
add
xchg
lcall
int3
ret
and
test
pop
and
sub
pop
aaa
ret
repz
mov
int
out
jo
xor
mov
test
bound
sub
dec
pop
cld
adc
not
mov
cmpl
iret
or
xor
mov
adc
cmp
add
imul
jmp
add
das
or
popa
stos
jmp
daa
test
jnp
push
les
movsl
and
xor
inc
inc
dec
push
sbb
scas
dec
test
mov
or
xchg
and
ficoms
jbe
insb
dec
mov
push
jle
lods
adc
xchg
or
out
cwtl
bound
xor
and
es
sbb
psraw
insb
jnp
stc
lods
cmp
inc
sahf
int3
push
loop
and
inc
cmpsl
inc
dec
sti
pop
mov
inc
jp
add
lret
roll
jmp
ja
add
or
push
out
mov
adc
stc
jl
inc
in
insl
test
add
movsl
xchg
dec
sub
inc
inc
or
imul
sti
jne
cld
xrelease
adc
roll
push
push
repnz
jns
dec
bound
pop
mov
lods
pop
and
cmp
sub
sub
push
in
in
and
pop
pcmpgtb
scas
cmp
jo
add
pop
cmpsl
rcrl
mov
lea
je
lcall
xor
popf
outsl
sbb
dec
mov
pop
cmp
nop
data16
insb
mov
adc
fnsave
roll
addb
sub
pop
fildl
sub
dec
add
xchg
xchg
ficomps
cmp
aas
pop
movaps
inc
int
mov
pop
sti
pop
cmpsl
sbb
adc
pop
insb
mov
cwtl
shrb
cld
test
std
jg
scas
fisttps
lret
fidivs
jmp
fcmovbe
cmpsb
rolb
push
xchg
xor
fwait
aad
push
pop
imul
lret
cmp
scas
mov
scas
pushf
and
or
cmp
shrb
pop
movsl
adc
inc
mov
ja
inc
test
sub
cmc
mov
les
insb
mov
adc
mov
aas
cwtl
mov
bound
jns
xchg
movsl
lahf
add
xchg
cmc
inc
sbbl
ret
cltd
in
mov
dec
mov
jo
xlat
add
scas
scas
insl
jno
jmp
mov
faddl
imul
cmpsb
cltd
adc
cmp
or
add
cmpsl
mov
fbld
fs
ss
insb
shl
sub
xchg
mov
jns
int3
scas
inc
or
movsb
loop
sub
dec
in
sbb
cmp
push
ljmp
mov
dec
add
sbb
out
pop
cmp
sbb
js
sub
adc
push
bound
add
inc
cld
pop
push
add
jge
in
in
in
in
call
daa
cmp
sti
test
push
mov
xchg
gs
mov
jecxz
and
lcall
or
repnz
add
jns
gs
cmp
push
jg
lock
mov
movsb
fwait
adc
mov
insb
dec
shlb
decl
mov
lahf
sti
jb
mov
in
xor
cwtl
jg
stos
fistpll
fsubs
jge
shrb
decb
sub
jno
notl
cmp
push
cmp
xchg
lock
ror
mov
adc
fwait
sub
addr16
add
movsl
push
cld
mov
xor
sub
sub
inc
jae
testb
pop
hlt
xchg
cmp
jno
inc
xor
sbb
jae
pop
jge
sti
jg
jmp
in
sbb
cmp
add
rorb
mov
pusha
add
scas
xchg
dec
mov
orl
lret
out
adc
sbb
bound
add
and
inc
fmul
test
pop
dec
outsb
fsubl
mov
arpl
or
mov
in
or
mov
cmpsb
ljmp
cmp
and
jnp
mov
sbb
or
pop
sahf
imul
movsl
hlt
jle
ss
nop/reserved
xchg
aas
mov
lret
xchg
sub
fistps
mov
mov
sarb
jnp
mov
jge
repz
adc
cmp
outsb
mov
inc
in
xor
test
test
jne
and
sti
in
push
mov
test
enter
mov
imul
adc
pushf
addb
rcrb
jae
cltd
xsaves
dec
push
and
outsb
jb
sbb
movsb
das
dec
scas
sbb
lods
cmc
xchg
dec
in
and
inc
in
es
mov
jp
aam
adc
jmp
stc
pop
xchg
sub
mov
and
in
sbb
lods
pushf
sub
out
nop
stos
je
je
jecxz
mov
test
lods
lea
sub
hlt
loop
dec
ljmp
dec
lea
sub
push
sbb
push
xor
cmp
jbe
inc
dec
rclb
mov
and
adc
pusha
inc
std
mov
push
clc
lea
cmpl
push
adc
sbb
jge
sub
push
cmp
enter
fldenv
rclb
mov
bound
aam
jns
inc
daa
aad
sbb
adc
or
fs
daa
mov
and
clc
xchg
imul
dec
dec
mov
movsb
jle
pushf
lahf
fwait
cmp
adc
or
in
sahf
xchg
and
mov
push
and
insl
xchg
nop
femms
fdivrl
fwait
sub
jp
cwtl
test
daa
cmp
mov
dec
pusha
jbe
pop
mov
or
test
mov
xchg
dec
rclb
push
and
add
ds
cmp
lret
mov
cmc
into
inc
jl
cmp
ja
push
negl
lcall
dec
push
push
cmpsl
jne
jns
or
jge
dec
or
data16
arpl
push
movsb
insb
daa
gs
sub
push
testb
pop
xor
cmp
fs
shr
jno
jbe
cmp
jg
stos
inc
xchg
jno
push
add
shll
lcall
insl
sub
mov
xchg
loop
lret
cli
and
mov
xor
xor
femms
lock
cwtl
cmpsl
popa
xor
xchg
jnp
push
mov
repnz
les
mov
add
inc
addr16
dec
adc
pop
jb
cmc
test
push
pop
mov
fs
mov
call
in
pop
out
iret
sbb
or
jl
pop
aam
test
mov
add
pop
popa
add
dec
lds
or
pop
adc
push
xlat
or
xor
add
fisubrs
pop
movsl
pop
xchg
add
stos
and
inc
das
cld
add
leave
mov
mov
data16
or
and
sbb
cmp
mov
xchg
xchg
imul
add
xchg
or
repz
gs
hlt
and
pop
inc
dec
inc
add
and
mov
sbbb
sub
mov
push
data16
mov
test
sub
cmpsb
mov
or
cmpsb
in
aad
push
cmp
andb
push
push
or
jne
stos
test
push
sahf
loop
mov
daa
outsb
out
mov
fwait
push
push
inc
pop
pop
popf
jl
pop
leave
repz
add
mov
add
sahf
xor
jmp
pop
push
adc
fisubs
fdivl
icebp
jmp
icebp
mov
mov
inc
xchg
clc
js
roll
xor
pop
jnp
mov
sub
mov
pop
orl
adc
mov
sub
pop
push
pushf
dec
sbb
ds
adc
xchg
jnp
lret
call
dec
pop
add
dec
popf
in
xchg
pop
xlat
cmp
out
ss
stc
push
loopne
sbb
stc
std
fadds
or
fldl
lods
pop
es
add
adc
in
pop
mov
pop
dec
xlat
ss
cmp
adc
add
inc
jmp
fwait
adc
std
push
mov
je
mov
call
shr
aas
adc
mov
imul
adc
cmc
and
test
negl
inc
pop
push
lret
js
rol
loopne
jmp
nop
inc
add
mov
lea
push
ljmp
loop
js
add
add
addl
in
jne
in
call
loop
push
stos
push
push
add
xlat
dec
jmp
sub
adc
aas
sub
xchg
add
orb
mov
shll
xchg
jg
hlt
xor
adc
adc
dec
push
js
jne
arpl
jp
or
sarb
in
mov
addb
stc
push
addb
bswap
mov
aad
scas
sub
xor
push
mov
aam
aaa
push
cltd
stos
mov
fistpll
adc
in
rol
std
xchg
xchg
or
sub
cmpsl
push
out
dec
loope
dec
js
cmc
or
push
inc
pop
adc
shl
fcmovnb
out
mov
pop
and
movsb
and
clc
gs
cmpsl
jne
dec
cmpsl
js
xabort
repnz
sbb
xor
mov
in
and
fistl
sbb
fisubs
into
test
mov
dec
outsb
lret
fisubrs
mov
jl
stos
lods
hlt
aam
adc
mov
mov
pop
scas
inc
rcr
fs
mov
push
dec
into
inc
ret
inc
loope
iret
pusha
xchg
mov
push
ret
sbb
jne
push
fisubs
data16
xor
xchg
jge
mov
push
or
insb
pop
jg
lds
in
out
or
movsb
xor
ret
ja
lret
push
sub
outsl
lock
sub
cmp
scas
insb
in
xor
roll
jae
push
jns
mov
out
sarl
sub
shrl
sbb
adc
icebp
sbb
mov
cwtl
cwtl
pop
push
dec
icebp
mov
es
jle
mov
push
lea
and
jnp
testl
fucomi
sbb
push
add
dec
cmpb
mov
enter
imul
mov
dec
ret
insl
adc
shr
shlb
sub
aas
frstor
sti
aaa
xor
call
addr16
mov
cmp
out
xchg
mov
scas
inc
dec
es
xor
movsl
dec
imul
dec
lea
mov
imul
aaa
dec
jp
rolb
adc
rcll
mulb
sub
out
and
in
push
cwtl
push
mov
in
mov
imul
adc
dec
push
mov
std
mov
push
paddw
out
sbb
xlat
inc
push
loopne
into
xor
mov
aad
mov
data16
jns
aas
fadd
xchg
add
fnstsw
in
out
leave
lcall
add
mov
ljmp
cs
imul
popf
leave
mov
scas
fnstenv
xchg
dec
push
jo
shrb
movsb
mov
pop
add
js
and
negl
hlt
imul
pop
mov
inc
incl
mov
nop
shll
xor
rorl
stos
mov
fidivrl
xor
xor
xor
add
mov
pop
jg
lahf
cmp
aad
and
loopne
sbb
xchg
incl
inc
pop
fstl
fucomip
mov
pop
xor
pop
and
arpl
sbb
imulb
adc
mull
mov
push
jns
mov
push
movsl
loopne
dec
lcall
mov
add
daa
sub
jae
in
rcrl
loope
sar
out
sub
mov
test
sbb
sbb
inc
mov
jo
pop
jns
mov
jg
mov
mov
mov
push
fnstcw
adc
into
cli
xchg
insb
aaa
inc
mov
or
mov
imul
push
adc
xchg
or
daa
das
push
sub
cmp
lea
aam
sub
adc
jae
rcl
aaa
xchg
in
fsubl
in
hlt
pop
xor
push
fstpl
push
stc
or
sub
mov
loop
inc
loopne
cmp
in
enter
shr
cmp
in
adc
xchg
repnz
dec
jb
cmp
scas
push
inc
adc
in
adc
mov
leavew
ret
movsl
push
jmp
out
test
xchg
and
dec
int
mov
ss
hlt
scas
inc
out
xchg
pop
sub
mov
into
add
test
push
add
adc
sub
mov
xchg
loope
ja
cmp
adc
mov
mov
mov
mov
xchg
cmp
jne
jae
insl
insl
das
mul
imul
leave
and
push
mov
iret
add
das
ret
xchg
adc
xchg
mov
punpcklbw
push
ljmp
aad
pop
cld
sti
mov
inc
das
lcall
mov
add
ret
test
xchg
mov
xchg
adc
imul
sbb
test
push
lahf
push
div
imul
xor
mov
add
jp
fwait
add
adc
mov
xor
xchg
inc
jno
enter
pop
mov
aas
mov
loop
adc
lods
lds
push
fwait
and
dec
adc
imul
loop
mov
icebp
scas
and
cwtl
xor
mov
mov
test
and
dec
mov
inc
nop
and
adc
sub
mov
inc
aam
lcall
mov
dec
pop
or
and
sub
testl
loop
ljmp
adc
outsb
gs
jno
les
dec
adc
or
cmp
fmul
enter
xchg
push
push
fisttpll
or
xor
in
mov
push
mov
or
cltd
push
xor
sub
mov
push
pushf
xchg
frstor
nop
ja,pn
adc
sti
jl
ret
aad
push
xor
and
and
xor
inc
cmp
add
jb
enter
and
scas
pop
xor
pop
repnz
mov
push
std
int3
pop
icebp
jo
faddp
hlt
faddl
insl
cli
pop
stc
pop
jecxz
test
sbb
pop
push
outsb
push
popf
insb
clc
loope
imul
adc
fwait
dec
mov
push
jl
inc
ljmp
scas
mov
popa
cmpb
sbb
daa
push
mov
addr16
test
rolb
mov
out
sub
jmp
insb
xchg
dec
mov
imul
cltd
out
xchg
or
pushf
inc
mov
push
or
fsts
enter
mov
les
test
sub
insl
fdiv
icebp
aad
int3
adc
inc
and
stc
jo
or
adc
and
fcoms
ljmp
lods
xor
sub
or
jecxz
cmp
mov
sbb
push
inc
sahf
stos
or
or
movsb
imul
hlt
dec
mov
sbb
cld
mov
subl
jne
out
fisttpl
sarl
aaa
outsb
pop
sti
sbb
mov
data16
dec
pop
or
ficoms
ds
ljmp
adc
jb
xchg
test
fdiv
iret
fdivrp
popl
jno
mov
sbb
rcrb
daa
pop
push
fmul
scas
ss
pusha
push
enter
aam
dec
xchg
adcl
xchg
lret
push
mov
or
sub
sbb
ljmp
sbb
ss
lea
jp
pop
faddl
xchg
aaa
lret
inc
out
cmp
jae
hlt
fildll
cwtl
icebp
mov
inc
lret
jo
imul
pop
add
js
jno
adc
push
cmc
jge
add
cmp
shrw
xchg
pusha
cmp
xchg
stos
or
pusha
adc
pop
or
pop
sub
jge
dec
cmp
stos
mov
cmpsl
hlt
cmpsb
fdivl
mov
pop
in
pop
inc
mov
jge
and
and
out
rorl
dec
dec
cmpsl
into
scas
push
in
test
cmp
adc
or
arpl
push
pop
pop
cmpsb
decl
jmp
add
mov
ret
fsubr
ffreep
aas
shrl
mov
jo
adc
test
sbb
jnp
add
xchg
test
fxch
test
sub
push
jb
inc
sub
pop
or
xor
inc
shlb
sub
xor
shrl
add
or
and
jne
xor
or
rol
test
adc
cmp
jge
mov
imul
mov
add
mov
jge
fisttpll
mov
lods
fs
fwait
stos
inc
jno
rcll
push
test
ret
nop
mov
or
scas
int3
mov
loopne
movsl
sub
ss
inc
repnz
data16
mov
xchg
or
lock
stc
gs
fistps
xorl
cs
pop
shufps
jbe
mov
fs
lock
or
push
jmp
mov
mov
mov
shrl
mov
repz
daa
xchg
ret
fcmove
lcall
scas
inc
jns
pop
sub
mov
xchg
mov
jg
pushf
popa
jge
pop
test
dec
in
jg
sbb
repz
mov
jno
cmp
int3
jl
push
pop
add
dec
cmovno
pop
outsl
cmp
lahf
sti
fucom
pop
xor
push
dec
mov
sbbl
mov
shrl
in
mov
xor
inc
lods
mov
dec
xchg
mov
inc
dec
or
pop
mov
cmp
mov
mov
mov
and
add
pop
xor
shrl
push
and
jg
fsubrp
inc
sti
sahf
iret
inc
mov
adc
dec
arpl
push
lahf
adc
jp
sbb
push
xchg
mov
aaa
dec
in
inc
cmpsl
dec
jnp
stc
sbb
ljmp
shlb
cmp
add
jp
add
out
or
xchg
int
ret
ret
and
sub
sub
cmp
mov
ss
arpl
or
adc
or
imul
adc
ljmp
andl
push
xchg
pop
inc
dec
fs
jno
jns
lds
xchg
fwait
inc
pusha
psllw
pop
inc
or
int3
mov
push
push
adc
mov
outsb
xchg
and
push
xchg
nop
pop
fcoms
sahf
push
test
inc
inc
out
loope
clc
sub
adc
cmp
fadds
jb
push
fsubr
std
sub
daa
xor
repnz
xchg
mov
adc
sbb
aas
sbb
pop
adc
fstl
iret
push
inc
lcall
xchg
pushf
adc
jl
sbb
mov
pop
adc
jle
fcoml
in
imul
mov
and
cmc
pop
sub
mov
cmp
imul
loop
push
adc
idivl
pop
xchg
mov
jnp
test
and
adc
mov
dec
or
pop
clc
cld
mov
mov
push
mov
es
loopne
jge
fidivrl
jle
mov
js
dec
inc
cmp
es
lock
out
jbe
push
pop
pop
pcmpgtb
and
pushf
out
sub
cmpl
lcall
ljmp
add
or
push
xchg
pusha
and
xor
int
pop
sbb
fs
jl
fbstp
les
movsb
pop
xor
sbb
std
jbe
cmpsb
inc
lcall
scas
adc
sub
rcr
pop
fs
arpl
data16
lds
int
dec
mov
inc
dec
mov
jle
mov
inc
mov
push
sahf
lcall
pop
push
shll
cmc
aam
leave
cmp
adc
shrb
mov
insb
cs
adc
fst
test
push
insl
stos
cmp
mov
gs
add
in
leave
hlt
arpl
pop
mov
inc
sub
add
jmp
adcb
ret
fidivrl
in
adc
insl
outsl
jecxz
fsubr
adcl
xchg
movsb
vmptrld
or
hlt
pusha
lods
aaa
insl
scas
loop
inc
dec
cmpsl
addb
outsb
inc
inc
xor
mov
or
cs
pop
pop
or
mov
cli
add
xor
outsb
and
mov
add
mov
sub
mov
mov
aaa
std
lods
sub
pop
jp
aad
stc
jae
jb
enter
fdivl
fcmovu
or
fisubs
inc
adc
add
jno
or
sub
faddp
dec
lods
xor
dec
jbe
fistl
je
mov
push
in
icebp
int
mov
xchg
push
inc
adc
ret
sbb
push
lods
bound
xchg
loopne
scas
jns
popa
mov
lock
mov
xor
leave
fs
fmuls
data16
icebp
inc
or
mov
jecxz
add
inc
pop
add
ja
sbb
iret
mov
cmp
sti
pop
ja
sbb
sbb
in
add
sub
mov
into
cmp
test
psubsb
sub
and
arpl
aas
movsb
xor
sbb
xlat
pushf
in
int3
mov
aad
int3
fnsave
aas
lret
call
sub
pushf
and
loope
mov
pop
pop
inc
xor
cli
sbb
ja
mov
inc
aam
adc
push
loope
jp
je
adc
push
sbb
mov
es
sbb
sbb
push
call
mov
mov
int3
adc
push
stc
shr
icebp
jns
mov
aad
xor
and
lods
je
lcall
adc
adc
pusha
je
nop
test
push
cmp
cli
movsb
stos
cmp
adc
std
and
sbb
mov
test
cmp
mov
std
das
xchg
push
data16
cmp
mov
sbb
xchg
gs
mov
iret
addb
leave
cmp
int3
int
jmp
add
mov
sbb
pop
jle
gs
daa
pop
push
call
mov
and
xchg
mov
sbb
nop
lret
inc
mov
je
mov
add
add
enter
in
in
xchg
or
cmp
testb
in
sub
es
sub
ljmp
adc
sbb
aaa
jns
jecxz
adc
push
push
jl
packssdw
andb
inc
push
jp
mov
movsb
aas
xchg
clc
mov
push
loopne
jge
movsb
mov
rclb
jns
mov
fiadds
jge
stos
mov
jnp
cmc
inc
mov
jg
leave
sub
cmp
push
lds
pop
gs
frstor
aad
aam
test
adc
jmp
mov
rorl
and
mov
jns
dec
dec
jns
sbb
xor
adc
cmc
mov
xor
insl
push
roll
sub
or
outsb
add
xchg
int
or
mov
divl
aas
ffree
loope
das
and
arpl
push
pop
dec
push
and
sub
dec
adc
xchg
and
andl
lahf
out
and
mov
test
dec
divl
mov
sbb
loope
fistl
loopne
or
fnstsw
push
mov
inc
jmp
adc
inc
ret
cld
pop
or
push
jne
xlat
or
shl
add
outsl
test
dec
add
repz
mov
data16
iret
aad
fsubs
xor
cmp
test
lret
shll
and
push
pop
call
pop
test
xor
mov
bound
scas
push
dec
stos
out
sbb
mov
inc
arpl
lds
add
inc
dec
pop
push
pop
mov
sbb
pop
inc
test
or
repnz
fsubs
pop
push
ds
movd
lods
nop
sbbb
test
aaa
mov
and
orl
orl
jnp
xchg
fstpt
sahf
and
add
pop
dec
std
xchg
inc
aas
mov
loopne
xchg
cltd
mov
test
push
mov
push
imul
inc
dec
pop
dec
inc
jg
xor
mov
mov
lea
mov
inc
bnd
xor
popf
lock
popa
jnp
decb
xor
jecxz
xor
cmp
cmc
lds
jg
mov
fcompl
mov
je
shrl
or
aad
xchg
lret
sti
cli
sahf
imul
push
daa
lret
pop
outsb
fs
lods
push
shl
cwtl
and
push
push
incb
incb
aad
cmp
rcrl
dec
xor
mov
test
mov
in
add
adc
adc
or
clc
jmp
mulb
mov
int3
xor
cmp
mov
fcoms
pop
loop
xchg
cli
xchg
out
in
push
sub
icebp
push
lcall
mov
sub
dec
cmc
push
mov
test
push
arpl
mov
xchg
fcompl
insl
jecxz
mov
jl
imul
jle
sub
xchg
je
loopne
or
xchg
sbb
xchg
mov
sarb
xchg
sar
pushf
sbb
sbb
fs
xchg
mov
ret
out
push
fnstsw
adc
cmp
xchg
or
movsb
mov
sbb
imul
mov
adc
inc
mov
icebp
xor
out
pop
or
sbb
mov
xlat
fs
pop
imul
dec
cmpsb
cmpsl
fldl
add
fisubl
loope
pushf
xor
xchg
push
out
xchg
ja
bswap
xor
test
xchg
push
xchg
lret
push
push
jmp
outsb
jp
sub
in
jmp
fbld
sbb
out
rcr
dec
and
jns
ret
push
sahf
add
jp
or
pop
popf
pop
xor
jle
cmp
cltd
xor
out
cli
adc
mov
shll
jbe
hlt
inc
movl
push
push
jle
je
push
cs
repnz
fcom
fnstsw
sarb
mov
push
popf
mov
sbb
push
mov
test
xchg
cmpsl
aas
lods
js
push
loopne
and
sahf
fldenv
and
pop
out
scas
mov
adc
pop
scas
push
aad
jne
mov
hlt
fwait
hlt
mov
imul
or
adc
rclb
pop
lcall
adc
cmc
jnp
push
cmp
and
dec
bound
dec
mov
scas
or
pop
mov
out
cmc
push
enter
xor
sub
xchg
push
mov
xor
adc
xor
sub
bnd
in
and
lock
out
leave
dec
sbb
mov
adc
inc
pop
lret
mull
pop
sub
bound
xchg
and
mov
push
inc
xchg
lcall
sbb
push
addr16
lea
mov
mov
sti
rcl
loop
loope
gs
cmpl
mov
scas
popa
push
ss
inc
sbb
push
icebp
clc
pop
mov
roll
call
mov
imul
pop
pop
push
mov
cli
inc
fstpl
add
jbe
stos
lods
iret
jae
push
daa
fadds
or
jb
sub
shlw
and
xlat
bound
mov
rcrb
fadd
jno
aaa
lahf
push
pop
cltd
adc
lahf
jno
mov
mov
sbb
aad
and
mov
and
mov
pop
jae
ret
dec
mov
sbb
cmp
jecxz
push
pop
je
mov
push
dec
insl
cs
sbb
ja
leave
cmp
lea
sub
or
scas
sbb
jge
mov
xchg
xchg
push
fimuls
jno
jae
push
cs
fcomi
ret
jnp
and
add
adc
les
inc
insl
arpl
movsb
out
out
sbb
xchg
cmc
dec
fstl
xor
in
xorb
cltd
nop
mov
mov
mov
pop
push
outsl
ljmp
push
push
push
sub
cmp
loopne
inc
ficoms
ja
xchg
cmp
adc
outsb
imul
scas
mov
movsb
pusha
or
adc
push
jo
jp
popl
mov
ret
int
stos
sbb
inc
outsb
loope
dec
pop
cmc
dec
jbe
mov
inc
inc
mov
inc
lahf
jg
xor
stos
scas
cld
mov
in
dec
xor
and
lods
cmp
dec
bound
shr
push
or
adc
lahf
mov
out
xchg
adc
test
xchg
mov
or
sbb
leave
xchg
mov
or
or
into
aam
pushf
pop
daa
in
inc
mov
imulb
int3
push
insl
push
dec
lret
loop
bound
js
jbe
sbb
std
movsl
insl
add
out
and
std
cmp
jmp
fisttpll
jmp
jl
sbb
inc
dec
sub
in
loope
fnstcw
inc
pusha
stos
adc
mov
jmp
clc
jbe
sbb
mov
rorb
mul
js
popa
jne
push
gs
pop
movsl
sbb
jl
movd
inc
adc
mov
flds
sub
nop
outsl
jmp
add
lret
lret
or
mov
jnp
and
or
mov
push
cmpsl
push
ja
test
loope
nop
lret
les
push
std
mov
je
aam
sbb
out
xchg
or
xor
jp
out
stc
pop
inc
sti
push
movsl
lahf
pop
and
jmp
xchg
xor
cs
pushl
dec
fldt
test
cmp
out
loope
add
loopne
das
pop
dec
sub
repz
mov
dec
mov
dec
and
push
push
lret
xor
jg
imul
dec
test
mov
lock
inc
pushf
mov
pop
mov
les
mov
push
lret
ret
decl
mov
mov
sbb
cmp
jno
fwait
xchg
lods
arpl
ljmp
lret
cmp
ret
inc
jo
shll
push
movsb
mov
xorl
pop
or
cmp
add
jno
arpl
iret
lds
outsb
sti
mov
xchg
add
mov
sub
gs
sub
hlt
nop
cld
and
mov
ds
mov
xor
and
inc
and
sbb
jge
pop
push
dec
or
arpl
enter
dec
sbb
in
and
insb
inc
test
lods
sub
test
cmp
xchg
aas
js
mov
popf
mov
push
adc
push
andl
fimull
xor
mov
pop
aam
ds
inc
icebp
mov
xchg
jae
xchg
pushf
pop
sub
fwait
mov
clc
pop
loope
mov
ret
icebp
inc
sub
pusha
or
cmp
cwtl
pop
jg
cmp
or
stos
and
pop
or
xchg
add
test
shlb
cmp
fisubl
inc
add
mov
imul
leave
lahf
pop
add
jae
gs
addr16
cmp
mov
leave
sub
je
cli
je
test
inc
mov
add
fcoms
mov
pusha
pop
pop
mov
xor
adc
jno
imul
and
jno
adc
push
fdivrs
xor
and
inc
sub
dec
nop
cli
call
mov
push
inc
mov
iret
dec
dec
jle
rcrb
out
insb
out
mov
ljmp
fs
xchg
dec
sbb
pop
pop
push
cmp
insl
adc
push
xchg
jb
jmp
mov
fistl
jb
or
sbb
xor
out
or
rcl
popf
mov
and
or
xchg
mov
ror
jnp
jns
dec
mov
push
cwtl
pop
lret
aam
daa
pop
enter
xchg
out
xchg
sub
and
xor
dec
movsb
fidivl
xchg
adcl
dec
push
fiaddl
cmp
push
ss
popf
lret
movsb
popf
mov
mov
push
lcall
loope
out
insb
dec
sub
cwtl
iret
stos
xor
mov
inc
or
mov
fistl
imul
inc
lds
mov
mov
pop
lret
clc
clc
aad
push
mov
aad
lds
sub
test
pop
ficoms
xor
xchg
push
and
mov
push
add
pop
jle
and
fwait
sbb
jecxz
add
loopne
test
in
insl
xchg
sbb
or
sbb
pop
stc
or
mov
ds
mov
cwtl
xor
jp
sub
mov
out
sub
mulb
adc
inc
add
xor
mov
imul
add
inc
fnstenv
or
fcomip
cmp
leave
sarb
push
outsb
addr16
shr
les
rcrb
mov
test
mov
mov
dec
cld
inc
lods
das
mov
test
add
cmp
aaa
or
jle
xor
aad
push
xchg
fnsave
mov
adc
jge
jns
inc
in
add
sub
int
movsl
ret
adc
cmp
sbb
lahf
int
addr16
lds
lods
repnz
ja
data16
or
adc
pushf
pop
dec
cld
mov
mov
ret
pusha
dec
fs
push
push
mov
out
je
push
js
addr16
insb
xchg
jb
sbb
pop
push
xor
outsl
inc
test
lods
sbb
mov
mov
xchg
ret
fadds
cmp
jnp
in
inc
std
iret
xor
dec
outsb
clc
and
arpl
call
inc
arpl
sub
pushf
je
movsb
sarl
mov
xor
xchg
fiadds
int
push
add
es
push
cmp
mov
jecxz
sahf
js
fistps
pop
mov
dec
and
insb
mov
clc
decl
inc
pop
sub
push
imul
xor
ja
or
xor
jmp
push
mov
or
scas
mov
mov
pushf
add
mov
aaa
jne
xchg
lods
les
mov
outsl
test
popf
divl
subb
jle
mov
cmpsl
rcll
mov
sub
inc
xchg
mov
stos
xchg
push
dec
nop
fldt
cs
sub
out
mov
jp
fldenv
xchg
pop
sarl
pop
in
fistpll
gs
xchg
addl
push
cmp
lock
fisubrs
jb
jle
repnz
mov
and
adc
push
jbe
call
dec
shlb
xor
add
lods
jp
lahf
hlt
loope
outsl
imul
cs
bound
ljmp
mov
fistps
pop
mov
in
lahf
lds
pop
pop
or
lret
dec
cmpsb
jo
scas
push
imul
and
jecxz
scas
scas
pop
inc
popf
adc
sahf
data16
enter
es
ds
dec
movsb
leave
inc
mov
mov
pop
rolb
or
aad
push
xchg
add
std
fwait
test
in
sub
inc
popf
fadds
sub
push
xor
jle
in
int3
dec
xchg
inc
in
mov
jle
xor
xor
add
das
lea
out
lods
cmp
loop
sbb
pop
cmp
enter
enter
dec
mov
mov
inc
add
adc
sbb
xchg
ficomps
adc
jno
mov
sub
cmc
jnp
rcr
cmc
push
pushf
mov
bound
cli
roll
insb
sbb
fidivl
pop
sbb
jnp
inc
inc
fmull
aad
je
ffree
inc
fcomp
lds
outsb
insb
pusha
es
ret
pusha
xchg
dec
add
das
mov
adc
imul
sub
pop
jp
fadds
rorb
popa
mov
mov
mov
sbb
stos
xchg
jbe
shlb
xor
cmp
aam
push
cltd
mov
inc
fucom
dec
push
xchg
mov
dec
hlt
ret
and
jns
fdivrl
cmp
xchg
add
jne
popa
jmp
int
mov
xchg
paddd
mov
imul
add
outsb
cmp
leave
arpl
lea
cmp
lock
inc
test
inc
sahf
lods
xor
cmpsl
iret
cwtl
and
outsl
mov
mov
stos
sub
xchg
addr16
and
cmp
fmuls
push
loop
lods
outsb
cmp
dec
es
xchg
dec
inc
jns
lods
stc
mov
movsb
push
sub
aaa
and
jno
jmp
xchg
inc
mov
lea
or
bound
out
test
fcoms
enter
js
xor
nop
pop
lahf
pushf
pop
push
imul
fcoms
das
pop
mov
jns
xchg
cmp
sbb
xchg
dec
dec
ds
repz
std
sti
nop
push
arpl
pop
orb
enter
lret
xchg
ret
daa
ja
leave
sbb
inc
push
stos
dec
xchg
test
inc
inc
mov
jno
repnz
hlt
sub
ret
dec
into
sbb
cmp
mov
add
jp
push
sbb
mov
dec
push
sub
dec
add
xchg
push
add
dec
addl
sub
mov
scas
xchg
lret
sbbb
and
daa
shl
xchg
and
test
mov
push
inc
jge
jge
popf
or
pop
ss
stos
call
int3
movsl
xchg
icebp
rcrb
inc
sbb
addr16
outsb
push
jle
cs
stc
dec
das
lock
nop
mov
fwait
mov
jae
or
cli
mov
mov
cli
repz
fwait
mov
mov
and
repnz
cld
mov
and
fs
jmp
pop
mov
ds
imul
lods
push
mov
ret
push
or
or
in
int3
pusha
mov
out
cvtps2pd
mov
and
in
cmpl
mov
add
pushf
xchg
movb
xchg
xchg
mov
lret
fidivl
dec
fistps
xor
cmp
loopne
mov
xlat
adc
je
jne
daa
shl
jecxz
std
test
jmp
jnp
pushf
out
sub
mov
or
mov
enter
inc
pusha
stc
sbb
out
mov
addr16
jbe
mov
aad
push
and
mov
fdiv
sub
enter
jbe
out
sub
pop
popf
ss
jo
lcall
int3
inc
gs
mov
lcall
rcrb
xor
mov
mov
adc
push
mov
test
scas
mov
fldcw
inc
mov
fcompl
mov
testl
stc
jge
jmp
cmp
loope
imul
add
mov
cwtl
lret
jp
sub
jb
cli
jo
cmp
mov
sahf
mov
shrb
mov
dec
inc
sub
push
mov
adc
das
icebp
mov
andb
jge
enter
insb
jmp
add
xorb
lea
pop
in
dec
mov
mov
push
out
mov
sub
inc
or
cmp
dec
or
adc
sbbb
sbb
cmpsl
add
lea
popf
pop
lahf
mulb
push
inc
jno
mov
sub
cld
jp
sub
enter
adc
enter
push
adc
mov
jns
push
jecxz
mull
xor
inc
mov
pop
jecxz
adc
push
push
dec
dec
jge
enter
adc
pop
in
mov
xlat
daa
lea
call
lds
in
pop
rolb
push
jo
inc
push
fimuls
shlb
pop
xchg
out
js
imul
out
ljmp
inc
data16
in
jmp
aas
sahf
dec
arpl
xor
mov
fadds
jbe
mov
xchg
js
cmc
adc
inc
push
mov
push
insl
test
scas
add
mov
or
hlt
xchg
mov
mov
xchg
cld
jns
test
clc
icebp
bound
lahf
and
sarl
push
test
sbb
bound
push
fidivrl
test
xor
bound
fisubrl
sbb
mov
stos
xor
arpl
jle
cmp
mov
lahf
mov
pop
jno
or
inc
jne
sbbl
shlb
push
jge
cmp
mov
pusha
mov
cmp
out
int3
fimuls
xchg
das
ffreep
lods
cmp
sbb
fistpl
dec
in
or
popa
ds
jmp
sub
fldenv
out
jle
and
std
xchg
testb
mov
inc
xchg
in
addr16
mov
inc
pop
and
stc
xchg
pop
enter
mov
rorl
fsubrs
fiadds
loopne
mov
imul
adc
mov
and
push
add
punpcklbw
cmpsb
ret
and
fs
fs
sub
mov
out
dec
mov
add
push
push
mov
lret
popa
cmp
bound
cli
mov
sbb
stos
test
adc
lds
sub
popf
lods
fcmovu
and
cmc
mov
loopne
inc
sbb
pop
int3
lods
call
addb
or
mov
outsb
push
inc
inc
xchg
shrb
iret
adc
adc
mov
mov
mov
shl
leave
mov
mov
jnp
jp
push
scas
cmp
loope
sbb
in
popa
push
mov
rcl
cld
lret
or
mov
jg
or
mov
scas
and
mov
add
xchg
mov
xchg
xlat
jge
sahf
jnp
jns
mov
jmp
sbb
fstpl
ja
int
or
jo
orl
insb
popa
mov
or
sbb
and
daa
pop
xchg
in
xor
aam
xchg
and
or
dec
add
cmp
hlt
mov
je
mov
cmp
xchg
cmpsb
jo
push
scas
xchg
push
out
stos
mov
dec
in
andb
pop
leave
mov
cmp
sar
mov
dec
outsl
loop
xor
push
out
fbstp
xchg
pop
cmpsb
mov
xchg
ja
pop
jp
mov
popf
mov
add
mov
mov
outsb
sub
pop
push
pop
push
cmp
lret
imul
js
lods
inc
mov
aas
icebp
sbb
dec
aas
addr16
push
fbstp
stc
stos
jmp
insb
mov
arpl
mov
push
sarb
cs
cwtl
jle
inc
lods
cs
pusha
fisubs
in
sahf
decl
loopne
fsts
push
insb
add
push
mov
sbb
mov
decl
xchg
push
cld
scas
pop
dec
mov
push
jge
adc
in
cmp
dec
ret
sub
das
cwtl
adc
push
push
sbb
stos
xor
dec
sbb
dec
mov
lods
xchg
pop
push
jns
in
mov
and
es
push
pop
jmp
sar
mov
icebp
and
outsb
adc
jnp
jg
jmp
ljmp
outsb
dec
mov
mov
mov
jge
pop
cmp
push
ficoml
dec
ja
jb
dec
jmp
xor
pop
sub
addr16
adc
divl
mov
cld
arpl
fiadds
push
mov
insl
call
sbb
jle
cmp
popf
cld
pop
icebp
mov
cld
into
adc
pop
add
cltd
mov
or
mov
in
jge
adc
mov
lahf
mov
push
loop
out
sbb
xor
aad
mov
scas
xor
cwtl
push
add
std
les
cmpl
insb
adc
out
add
cmp
add
and
das
inc
sub
inc
cmp
mov
inc
jne
cmp
in
mov
jns
mov
mov
push
adc
xlat
in
cmp
dec
push
loopne
push
sub
jl
push
sub
add
jno
std
fisttpl
jb
sub
mov
mov
in
js
sbb
mov
lock
adc
sub
mov
dec
test
cld
xchg
sub
xlat
push
fistl
dec
lahf
and
bound
jo
and
popa
imul
mov
nop
xor
mov
or
cwtl
divl
mov
mov
dec
ret
cld
cmp
sbb
test
aas
cmp
sub
outsl
fst
in
push
and
popa
mov
mov
ficoms
xor
push
test
mov
mov
xlat
lock
les
or
jo
and
jmp
rcrb
add
enter
lret
jno
push
out
pop
jnp
add
mov
inc
xor
sbb
lea
leave
ret
jno
inc
sbb
shr
cmp
into
add
jp
xor
stos
gs
sub
ret
jno
aas
loop
hlt
es
jno
aad
lods
or
jecxz
mov
mov
lret
push
adc
sbb
inc
xor
push
add
add
fsubs
fldl
cltd
inc
or
movsb
lock
xchg
add
dec
aam
insl
stos
inc
es
mov
jae
add
ret
fld
pop
push
adc
mov
adc
jmp
jnp
nop
mov
icebp
pop
movsl
fs
xchg
cmp
jp
cli
movsb
cmpsl
lods
and
ror
jg
add
jo
xor
lea
push
clc
in
xchg
xor
and
cmpl
movsl
arpl
push
addl
jge
adc
push
repz
mov
mov
dec
or
jl
inc
jg
rcrb
xchg
rorb
jbe
mov
in
or
cli
add
arpl
movl
mov
mov
mov
fwait
movsb
xor
inc
leave
stos
mov
fwait
movsl
lock
les
in
sbb
add
xor
cmpsb
sub
sbb
idivl
xor
or
mov
xchg
mov
and
push
mov
das
inc
xchg
adc
pop
jbe
mov
push
push
in
aas
lods
mov
sarb
jge
jnp
push
inc
repnz
dec
arpl
icebp
data16
sbb
lret
aam
in
lds
pop
in
mov
dec
push
pop
shlb
fcomip
dec
xchg
rcr
push
dec
pop
mov
jb
xchg
mov
push
dec
cmp
stos
xor
jo
cmp
int
and
xor
xchg
insb
gs
pop
push
mov
decb
xchg
add
dec
adc
scas
leave
jnp
mov
add
xor
xchg
mov
imul
shlb
sarl
cld
dec
fldl
lock
lea
jnp
cltd
iret
jbe
push
mov
xor
push
sub
pop
in
std
dec
fsubrs
test
sbb
mov
jecxz
cmpb
into
negb
ds
lret
sub
dec
mov
sbb
or
xchg
inc
xchg
movsl
adc
jo
rol
aam
incb
add
loope
insb
add
pushf
cmp
enter
sub
adc
dec
push
pushf
repz
push
jl
cmp
dec
mov
push
inc
xchg
mov
mov
inc
push
or
pop
sti
mov
dec
pop
or
xor
pop
pop
sbb
inc
movups
arpl
mov
sar
hlt
sbb
cltd
lea
mov
sub
add
negl
pop
movsb
pop
adc
adcl
pushf
pop
shlb
rol
data16
aad
mov
mov
in
clc
in
add
je
cli
fwait
dec
int3
ja
insb
mov
pop
push
sub
sbb
mov
aam
pop
or
mov
mov
pop
jg
add
xor
dec
mov
push
cmp
addr16
xor
push
sub
jp
sub
mov
and
repz
daa
incl
cmp
cwtl
loopne
out
icebp
nop
inc
insl
aad
jne
shl
out
shrl
rorb
xchg
cmp
adc
push
fidivl
push
daa
scas
movsl
sub
rcll
movntps
inc
mov
push
dec
lret
dec
pushf
sbb
out
mov
pop
addr16
jo
enter
mov
mov
shr
sbb
adc
ret
insl
dec
pop
aas
ljmp
push
insb
out
fmuls
mov
or
movsb
cmpsl
sbb
test
aam
jmp
clc
ljmp
jl
mov
jo
xor
lahf
or
inc
sbb
fists
outsb
mov
jl
iret
shlb
jnp
cwtl
xor
cmp
add
mov
shl
pop
pusha
xchg
push
inc
scas
call
jmp
xchg
jb
out
sub
or
call
sub
sarb
imul
int
gs
ficoml
aad
add
dec
jno
jb
mov
std
cmp
or
mov
adc
xchg
xchg
stos
pop
call
icebp
in
jno
or
mov
push
or
jmp
clc
adc
jo
inc
add
mov
fs
mov
mov
push
ja
dec
mov
jecxz
fwait
fs
push
movsb
jae
aam
pop
mov
pop
mov
andl
xor
add
sub
outsb
in
xor
aas
pusha
repz
mov
or
mov
xor
jmp
sbb
or
rclb
movsl
sub
inc
fadds
sbb
outsb
dec
or
xlat
roll
mov
mov
popa
add
pop
mov
cld
cmpl
and
mov
test
mov
int3
adc
jge
das
mov
xor
jge
dec
xor
push
mov
adc
xor
mov
sub
repnz
or
pop
jnp
cmp
dec
sub
jle
add
movsl
test
test
sbb
adc
mov
daa
mov
inc
xlat
mov
mov
push
push
mov
or
xchg
inc
pop
sbb
in
adc
add
clc
mov
dec
dec
dec
jg
bound
cmp
ret
jle
and
aad
out
nop
lret
sub
faddl
mov
movsb
mov
push
and
mov
mov
xchg
aaa
cmp
aad
sti
xor
sbb
stos
call
pop
subl
scas
sbb
sub
popa
std
sbb
sbb
stc
mov
test
jmp
leave
bound
sub
jno
mov
mov
fildll
pop
push
mov
push
fwait
push
mov
movsl
mov
ljmp
and
or
push
jo
ss
xorl
cmpsb
in
mov
mov
lahf
add
adc
lock
das
es
sbb
push
mov
adc
pop
in
push
aas
sbb
lahf
imul
dec
loope
data16
mov
sti
cs
sub
xchg
lret
dec
arpl
xchg
adc
in
push
fnsave
nop
jo
sub
push
imul
sti
push
adc
cld
add
mov
jl
dec
es
loopne
std
inc
xor
mov
push
inc
mov
pushf
push
out
repz
lea
push
cmp
leave
inc
push
sub
adc
inc
gs
lock
in
enter
stc
sub
outsl
shlb
decb
xlat
nop
mov
pop
or
mov
fcoms
push
pop
push
mov
aad
pop
adc
and
shll
pop
andl
cld
mov
insl
pop
or
sti
enter
cmp
pop
cmp
call
mov
in
aaa
inc
mov
stos
sub
shrb
mov
xor
push
adc
jmp
cltd
dec
cmp
loopne
sub
inc
daa
pop
xor
inc
inc
jne
aad
mov
pop
ret
inc
nop
lods
stos
lahf
cltd
mov
mov
cmp
and
push
adc
add
cld
sub
add
add
add
fidivs
xor
xchg
rorl
pusha
dec
mov
psrlq
lds
sbb
aam
shrl
lret
ss
mov
cmp
loope
cmp
mov
scas
test
xor
adc
add
aam
hlt
sub
cmpsb
in
ljmp
mov
inc
dec
dec
mov
mov
xchg
mov
dec
in
andl
inc
mov
std
mov
adc
inc
mov
jb
jo
dec
mov
insb
fcoml
cmp
lods
adc
xchg
jb
xchg
jbe
jne
enter
inc
addb
mov
inc
xchg
shlb
aas
repz
mov
dec
mov
xor
loope
cmp
xchg
mov
js
add
mov
dec
ficomps
stos
addr16
es
push
adc
cmpsl
xor
in
pop
popf
xor
fwait
aad
xor
add
cltd
lcall
add
lret
dec
aam
pop
cltd
sub
cli
fldl
adc
int3
add
mov
dec
cmp
out
loop
dec
and
cli
idivb
sbb
jno
pop
inc
mov
mov
scas
testl
pop
push
leave
push
lret
in
push
es
dec
push
sub
call
mov
ja
sub
jmp
es
popf
sub
xor
lret
dec
xchg
lods
in
mov
dec
jmp
mov
fstl
xor
fdivrl
or
mov
aas
sbb
adc
insb
sub
sbb
inc
push
pop
int3
push
push
je
and
sbb
lods
and
add
sbb
mov
or
ret
lahf
repz
pop
push
stos
mov
mov
pop
test
popa
int3
mov
in
insb
pop
test
incb
and
lea
jno
test
into
aam
xchg
into
adc
lods
fiadds
shrb
push
das
pusha
bound
test
xlat
pusha
mov
jnp
iret
jge
lret
movsb
dec
adc
mov
mov
sbbb
dec
push
inc
push
icebp
cmp
lods
nop
cld
xor
jge
mov
fnstcw
leave
mov
les
xor
pop
fimuls
jae
push
cwtl
lock
mov
aas
dec
inc
jnp
scas
stos
adc
iret
ja
inc
xchg
call
sbb
je
ja
aam
rcl
fcompl
out
push
rcrl
and
inc
adc
sarb
and
xor
arpl
jl
pop
in
sbb
dec
filds
test
leave
fnstsw
and
out
jb
lcall
pop
sti
pop
iret
jge
adc
push
inc
loopne
psubsw
xor
xor
into
inc
ss
stos
adc
cmp
je
mov
flds
push
out
mov
out
ss
iret
push
aad
popf
lock
or
pop
js
jge
sbb
jecxz
jbe
nop
xor
adc
frndint
cwtl
test
xor
lea
adc
lods
jnp
jbe
repnz
fiaddl
mov
cmp
jne
mov
inc
repnz
iret
int3
mov
sbb
jle
xchg
sbb
xchg
push
shl
xchg
jo
cmpsl
sbb
daa
inc
jmp
adc
add
fdivl
test
mov
or
leave
lea
scas
mov
pop
mov
ja
add
scas
pop
sarb
mov
movsl
jecxz
lods
sar
fadd
mov
iret
jo
push
dec
add
sub
xchg
xchg
lcall
in
hlt
and
stos
cmc
dec
out
pop
xor
mov
sub
dec
cld
ret
mov
xor
mov
push
mov
xor
sub
push
add
das
lcall
jnp
mov
mov
into
in
into
fdivrp
jp
inc
add
mov
idivb
jp
in
xchg
mov
hlt
xchg
jge
out
ss
push
sub
push
jb
mov
adc
inc
adc
mov
sbb
int3
cmp
mov
jnp
push
cmp
in
nop
es
in
icebp
test
call
xchg
sbb
lret
enter
ret
inc
lret
testl
mov
dec
push
pop
mov
inc
adc
repz
sarl
ljmp
lahf
out
ss
xlat
hlt
test
ljmp
jp
jae
mov
dec
stc
jle
inc
mov
adc
iret
pop
std
leave
std
repnz
je
mov
or
jge
fdivs
shrb
adcb
pop
enter
fs
add
enter
cmp
subb
popf
testl
inc
cmp
cmp
pop
call
pop
cli
mov
pop
in
scas
insb
setnp
nop
cli
mov
jne
mov
iret
mov
cmp
cmp
call
cmpsb
lcall
mov
ljmp
pushf
loopne
loope
sbb
cmp
sub
push
push
add
lods
shlb
push
mov
pop
push
jno
les
loope
add
cmp
lds
xor
push
xchg
mov
les
test
loopne
imull
in
pusha
pop
stc
dec
add
fidivrs
sbb
xchg
push
add
mov
mov
dec
sbb
lret
xchg
xor
ret
push
out
inc
or
adc
movsl
and
xor
fs
push
pop
adc
popf
sub
test
dec
loope
test
scas
sbb
lods
inc
pop
mov
and
in
and
es
pop
stos
enter
jne
push
pop
lahf
call
rolb
repz
adc
lea
push
shlb
or
loop
mov
enter
pop
xchg
arpl
push
popf
rcrb
pushf
sarl
jp
mov
pop
lret
xor
xchg
into
or
mov
int3
dec
mov
mov
push
pop
in
xchg
stos
sub
in
in
xorl
sarl
call
push
push
sub
mov
rorl
and
push
mov
jp
dec
sbb
inc
inc
in
xchg
or
sbb
arpl
add
lea
sub
jo
push
daa
scas
loope
jbe
ds
outsl
push
jnp
test
inc
shll
hlt
cmp
jle
and
cmp
jne
and
sbb
gs
jo
cmpl
hlt
cmp
mov
scas
fisubrs
in
pop
xchg
xchg
das
or
and
add
jae
mov
cwtl
xchg
xchg
leave
mov
xor
repz
adc
cmp
dec
jecxz
notl
scas
stos
add
cli
add
imull
mov
fistpl
xlat
jecxz
ljmp
movl
leave
push
sub
dec
mov
add
jns
or
mov
cmp
inc
int
or
jecxz
jge
lret
cmp
mov
testl
pop
xlat
outsb
mov
ficomps
aaa
sarb
daa
int3
xor
xor
add
stos
mov
outsb
out
push
sub
call
add
fs
out
dec
xorl
jo
mov
pushf
cmp
nop
push
xorl
cvtps2pi
test
fadds
es
cwtl
inc
in
inc
iret
loope
mov
pop
mov
stc
pop
adc
in
push
cmpsb
mov
in
add
inc
rclb
inc
fsubrs
aad
adcb
or
jl
mov
jmp
mov
fs
stos
dec
mov
andb
adc
insl
in
ffree
mov
inc
mov
pop
loop
sbb
pop
jp
shll
rorb
inc
dec
jl
leave
into
mov
scas
pusha
mov
fistpl
test
and
pop
mov
ja
insl
call
xor
inc
mov
cmp
cmp
mov
rolb
adc
inc
sub
jle
xor
cs
rcrl
or
mov
xchg
bound
push
int3
data16
pop
sub
out
loop
andl
push
mov
aad
stc
mov
stos
fcompl
mov
xchg
adc
sbb
scas
dec
xchg
pusha
movsb
pop
add
dec
jne
adc
rcl
and
lret
pushf
xchg
inc
outsl
pop
data16
jle
dec
pushaw
jne
loopne
prefetch
sti
and
jle
scas
cwtl
push
cli
xchg
mov
inc
xor
add
cli
or
aas
enter
fnsave
dec
pop
loopne
outsl
rcr
loop
and
inc
add
loop
adc
jo
push
imul
jne
or
das
jne
pop
mov
adc
push
hlt
and
mov
mov
ljmp
std
test
repnz
in
dec
or
js
dec
pop
pop
inc
nop
and
fistpl
lahf
xchg
cmpb
lock
adc
mov
jne
pop
mov
bound
loop
test
aas
push
lods
jnp
mov
or
in
pop
push
dec
pop
jno
movsl
mov
dec
insl
adc
xchg
aaa
jge
cmp
jns
fdivs
add
out
std
rcrb
sbb
mov
leave
push
pop
cmp
jp
inc
pop
jne
push
fcomps
mov
jg
pop
lea
movsl
ljmp
imul
imul
addr16
mov
aam
in
hlt
cmp
push
out
mov
dec
pushw
stos
mov
inc
stos
push
sbb
lcall
fabs
sbb
pop
or
or
add
and
xor
or
pop
adc
mov
xlat
jle
inc
xor
movlps
xor
repnz
xchg
push
ret
mov
and
dec
imul
or
ret
add
push
cmp
and
test
js
std
aaa
dec
jnp
test
mov
in
stos
inc
push
cli
loop
mov
aam
xchg
push
push
or
add
js
lds
in
fdivs
data16
cmp
fildl
fistpl
loopne
sub
mov
aas
push
jl
inc
pop
cwtl
mov
push
jb
xor
adc
inc
sbb
insb
js
mov
or
xchg
xchg
out
and
ljmp
mov
fwait
mov
add
sbb
jb
shlb
ret
add
inc
mov
push
adc
jecxz
ret
aam
pop
pop
mov
ds
cltd
cmp
negl
pop
xchg
xor
xor
inc
testb
jmp
dec
xor
pop
or
imul
mov
pop
lods
mov
push
test
mov
popf
cwtl
and
movsl
js
pushf
ljmp
push
je
xchg
mov
pop
clc
sbbb
mov
loop
jnp
int3
push
test
xchg
lods
fistpll
inc
inc
mov
pushf
sbb
xchg
mov
push
idivb
mov
fwait
ds
mov
testl
in
or
xchg
add
popf
xchg
jnp
les
cwtl
movsb
add
add
loopne
or
inc
shlb
jnp
ljmp
fwait
inc
stc
add
add
cmp
ljmp
xor
xchg
mov
lahf
ja
loope
ljmp
xor
adcb
inc
sub
fcompl
fisttps
or
push
data16
pushf
imul
outsb
jae
push
js
cltd
mov
inc
ss
push
or
jne
dec
inc
std
inc
mov
stc
popf
push
and
or
push
mov
jmp
pop
cmp
jb
lcall
dec
ds
mov
movsl
js
fstpl
sbb
jmp
sub
push
int3
ja
push
inc
icebp
gs
jmp
inc
movsb
ja
xchg
scas
mov
movsb
movsb
bound
enter
cmpsb
xchg
orb
xor
pop
sbb
fwait
push
cmc
pop
jnp
sbb
movsl
daa
inc
lods
mov
mov
add
mov
add
xor
mov
inc
fimull
jg
das
inc
dec
ret
and
push
mov
xchg
pushf
loope
add
outsb
jo
mov
mov
mov
andl
sub
movsb
in
xor
call
testb
sbb
enter
and
fidivl
stc
xor
pop
cmp
cwtl
cld
stos
fabs
sbb
addr16
ds
inc
scas
fdivrs
shrd
mov
std
mov
push
dec
ret
pop
in
inc
add
je
rclb
aad
movsb
and
dec
bound
add
icebp
xchg
lods
mov
push
loop
cwtl
mov
pop
popf
mov
addr16
adc
aam
sti
jg
popf
lds
scas
in
lods
dec
orb
cmpsb
sar
cmp
jge
xchg
addb
jbe
mov
sarl
lret
or
aaa
sahf
icebp
fldenv
xor
aad
movsb
lds
dec
int
push
sub
adc
cmp
cs
std
mov
xchg
enter
mov
imul
jns
aad
cmpsl
xor
je
jl
mov
das
out
imulb
cmpsl
js
pusha
sbb
scas
sbb
push
repz
mov
das
xor
xor
jle
popf
sbb
in
out
loopne
fisubl
jae
enter
ljmp
out
in
sysret
sahf
mov
sub
cmpsb
pop
pop
push
aas
outsb
pop
fidivs
xchg
scas
xchg
add
pop
stos
push
jo
stos
cwtl
xor
insb
sub
lds
sub
and
xchg
and
xor
jp
int3
lea
sarb
and
dec
cwtl
daa
cli
inc
fbstp
subl
push
push
and
repnz
sbb
push
mov
mov
out
pop
cld
iret
std
and
shlb
or
lds
in
sub
cmpsb
dec
scas
cmpsb
xor
mov
inc
ja
fs
push
aad
adc
or
and
jno
xor
jb
lea
daa
dec
cmp
and
ljmp
out
push
mov
push
test
or
fdiv
jns
es
fld
mov
and
mov
xlat
loope
fbld
mov
pop
mov
push
dec
push
icebp
and
imul
les
mov
test
or
popf
and
adc
jg
xchg
xchg
dec
mov
adc
sbb
addb
cmp
pop
dec
js
repnz
idivl
data16
push
stc
ss
cmp
pop
bound
cs
clc
jbe
outsl
or
cbtw
ds
push
lods
stc
xor
cli
push
jmp
and
xor
pop
and
inc
sahf
xchg
jne
pop
mov
fidivs
jnp
lds
ja
xlat
and
cmp
bound
mov
imul
jge
sbb
aas
sahf
push
xchg
pop
sub
aaa
xchg
xor
xchg
xor
orb
adcl
rcl
pop
inc
ss
push
pushf
cmp
pop
in
mov
in
jns
adc
das
daa
inc
inc
jnp
inc
push
mov
in
xchg
pop
cmp
pop
cmpsl
test
jecxz
sub
mov
mov
scas
jl
test
repnz
pop
mov
mov
adc
mov
pop
aam
xchg
insb
mov
and
pop
in
iret
jno
fidivs
jg
dec
inc
inc
push
out
pop
push
mov
jmp
ror
out
mov
test
shlb
mov
xlat
dec
sti
cmc
and
jno
add
ds
data16
or
ss
fldenv
shr
xchg
insl
popa
jmp
lret
sbb
rorl
andl
mov
jg
int
sbb
lds
add
dec
sarb
push
and
cmc
pop
gs
cltd
push
add
les
mov
sbb
andb
aam
fstp
xchg
jne
arpl
mov
and
mov
xchg
xchg
adc
and
inc
fidivrs
test
jbe
adc
inc
shlb
pop
xorl
pusha
or
wrmsr
mov
inc
out
sub
and
pusha
or
adc
aad
je
movsl
movb
loopne
jp
sub
mov
jmp
hlt
pop
and
mov
inc
inc
ds
clc
push
pop
pusha
inc
aad
pop
sub
rclb
cmpsb
cltd
add
test
push
fneni(8087
add
cltd
pop
addr16
jecxz
push
out
nop
fs
dec
lret
dec
lods
es
pop
insl
test
lods
pop
ret
xchg
mov
inc
add
test
push
das
out
cwtl
push
and
je
aas
xor
sub
cmp
adc
icebp
cs
sbb
loopne
sbb
add
and
inc
ss
scas
inc
shl
arpl
inc
popf
cmp
ret
clc
mov
enter
pop
mov
ret
out
rcrb
pop
mov
lock
pushf
xchg
sbb
sbb
sub
xchg
daa
inc
xchg
pop
mov
cltd
pushf
insl
stc
mov
das
jae
mov
popa
shll
mov
push
and
mov
fadd
hlt
push
imul
das
push
lret
mov
jmp
stos
sbb
pop
loop
outsb
add
xor
in
fnstenv
mov
sarl
mov
inc
cmc
fisubrl
push
mov
mov
cli
loop
xchg
lcall
out
call
mov
mov
test
cmpsl
aam
sbb
incl
fsubrl
test
rorl
jbe
adc
imul
pop
mov
add
les
cmp
in
xchg
mov
leave
xor
movsb
andl
inc
or
outsb
xchg
subl
int
pusha
push
add
jg
scas
rcl
xchg
insb
inc
dec
dec
fwait
add
sub
aaa
and
push
lret
adc
pusha
dec
and
mov
pusha
std
dec
fcmovnbe
es
daa
in
pop
and
std
loop
test
call
lahf
ds
loope
cmp
dec
fidivs
jno
js
pop
fsubs
adc
js
jge
aaa
push
pop
jno
es
inc
jp
push
pop
test
test
add
sbb
mov
iret
fs
mov
fsub
xchg
adc
sbb
cld
adc
into
test
jne
mov
cld
mov
cmp
and
sbb
pop
lret
lock
test
xorl
into
push
and
loopne
popa
xchg
shlb
sti
ljmp
and
stos
pop
mov
clc
hlt
cmp
and
stos
jmp
lock
xlat
es
pop
xor
rcll
notb
jo
je
pop
cmp
insl
imul
stos
mov
add
xor
inc
jmp
dec
xchg
push
decb
inc
imul
add
add
or
jp
or
js
jo
mov
push
cmp
test
addb
mov
and
add
mov
push
dec
xchg
mov
loop
adc
and
lods
test
cmp
adc
add
enter
notb
and
xchg
mov
les
mov
pushf
cmpsl
mov
push
and
jae
pop
fiaddl
das
stos
mov
or
jno
popa
test
sub
movsl
push
mov
icebp
mov
mov
ja
push
push
or
or
loope
mov
jmp
fdivs
add
fstpl
pop
gs
mov
fisttpl
xorl
je
stos
stos
lahf
xchg
sbb
enter
xlat
and
jg
or
push
ds
xorl
in
je
xor
add
push
out
inc
and
rcll
sti
xor
inc
into
flds
pop
pop
gs
adc
push
stc
dec
xor
dec
cmp
addb
mov
dec
inc
cli
mov
aaa
mov
sub
pusha
sbb
cmp
sub
mov
mov
test
imul
bound
add
cmpsb
aaa
inc
sub
shrb
or
push
lods
out
cmp
cld
in
mov
popf
xchg
arpl
data16
dec
add
inc
insb
leave
cmp
push
cmp
mov
jo
das
add
adc
ret
stc
cmp
push
xchg
cmp
jbe
pop
lock
movsl
aaa
aas
cmp
adc
dec
rcr
fsub
inc
and
adc
rcll
pop
add
divl
inc
repz
or
jl
sub
lds
mov
sti
add
mov
lret
sbb
push
push
pop
sub
cmp
iret
lea
incl
mov
push
outsb
add
shrl
pop
sbb
aaa
popf
pop
cwtl
xor
cltd
in
xor
cmp
out
sub
xor
out
jmp
cmpl
push
sub
inc
adc
and
mov
xchg
push
sbb
lea
sbb
xchg
pop
cmp
int3
jmp
call
fidivs
or
jge
push
cmpb
sbb
add
test
cmp
data16
xorb
jbe
repz
pop
push
xor
xchg
out
push
cmp
fildl
dec
xor
shlb
pop
adc
dec
xor
sub
mov
pop
cmpsb
add
mov
vcvtsi2sdl
push
bound
test
mov
repz
out
pop
sub
cmpsl
sub
push
sub
fs
mov
jns
std
mov
mov
push
repz
jo
fnsave
xchg
push
adc
into
in
mov
ret
int3
mov
xor
mov
lods
test
xchg
das
fcompl
xor
sbb
sub
sahf
scas
fadds
dec
sbbl
int3
int3
rol
mov
icebp
testl
sub
jle
gs
jae
in
or
ljmp
mov
cmp
jge
repnz
movsl
inc
pop
addr16
loope
mov
mov
pop
sbb
test
jne
stc
stos
stos
imul
popa
mov
int
push
dec
ljmp
out
inc
incb
push
movsl
jmp
rclb
fsubs
mov
dec
cmp
imul
pop
test
pop
mov
jnp
adc
fcoms
sub
into
movb
cmp
sti
lret
call
stos
mov
ret
in
aad
daa
cli
mov
xchg
dec
mov
jno
jecxz
push
push
lea
adc
ret
xorl
fwait
dec
shll
xchg
sub
xor
jmp
fildll
in
lods
repz
pop
cwtl
or
jns
clc
pop
mov
call
out
arpl
fisubs
mov
mov
xchg
jno
mov
in
lock
addr16
pop
lahf
out
inc
xor
repz
ja
mov
insb
jge
ret
mov
lret
cmp
or
mov
xchg
sbb
cmp
jns
push
mov
jne
xchg
mov
out
repz
insl
cmp
fwait
jnp
push
jp
into
fisttps
jp
ja
aaa
sub
add
das
and
xchg
sbb
pop
sbb
xchg
daa
lods
xchg
jle
lret
cs
dec
inc
not
xchg
or
or
out
ja
or
xchg
call
pop
cmp
js
mov
enter
rcrb
scas
test
mov
mov
pop
mov
repz
enter
andb
addr16
lods
push
cwtl
out
push
inc
out
fidivrl
nop
idivb
outsl
das
scas
mov
js
psllw
sbb
fsubp
dec
negb
jge
frstor
and
jle
dec
lcall
pop
into
mov
jb
push
pop
fcmove
movsl
les
xchg
pop
jo
cs
pop
pop
pop
jmp
clc
or
push
sti
ds
repz
test
or
fwait
test
jmp
xchg
ret
loopne
cmp
pop
rcrb
js
push
push
mov
stc
jnp
jge
les
data16
pop
mov
mov
mov
jb
xor
pop
stos
lcall
xchg
lahf
sbb
or
push
sub
lcall
rcrl
sbb
xor
stc
sbb
dec
mov
pop
cs
sbb
mov
out
out
jecxz
std
insb
jae
sahf
or
dec
fstps
aam
pop
inc
jp
scas
lret
pop
outsb
je
jno
inc
stos
jge
dec
mov
inc
jo
js
mov
push
inc
mov
lds
xchg
enter
adcb
add
cld
lods
mov
dec
inc
pop
adc
mov
jge
lods
xchg
jl
jle
cwtl
pop
mov
inc
addb
jmp
xchg
push
loope
xor
test
call
imul
ss
sub
push
sub
jae
jb
sahf
std
xor
add
mov
lds
std
jae
pop
fdivrp
imul
imul
and
fsts
aaa
push
jmp
mov
lds
push
jl
fcoml
inc
pop
mov
xchg
inc
leave
add
mov
inc
aam
xor
inc
gs
fcoml
jl
mov
push
fxch
orb
pop
sbb
push
sahf
sbb
xchg
lahf
xchg
cmp
pop
cwtl
xchg
pushf
jmp
insl
sub
imul
sub
mov
and
test
sbb
pop
insl
jl
ret
jecxz
fst
inc
or
sarb
jle
push
sbb
ds
mov
lcall
push
mov
aam
insb
aas
fs
test
cmpsb
fmul
push
icebp
test
je
clc
roll
jg
dec
repnz
int
outsb
mov
shrl
pusha
aam
push
pop
cmp
int
or
pop
sbb
add
xchg
push
xchg
or
mov
xchg
movsb
ljmp
clc
fdivp
insl
or
push
push
push
outsb
inc
outsb
jb
adc
mov
insb
mov
xchg
pop
push
mov
inc
xchg
in
fwait
ljmp
mov
arpl
dec
aaa
cmp
jns
sti
mov
nop
sahf
gs
dec
aaa
lock
mov
sbb
data16
mov
mov
aam
xchg
cld
mov
mov
fwait
inc
es
sbb
rolb
jo
jmp
daa
incl
ja
pop
jl
lcall
test
or
sbb
lea
pop
xchg
daa
int
cmp
cwtl
inc
stos
data16
mov
mov
mov
lretw
in
pop
inc
inc
inc
lods
dec
mov
mov
push
std
lods
mov
mov
xchg
incl
loopne
movsl
cli
sbbb
mov
adc
orb
mov
imul
shll
les
push
push
pop
in
mov
psrlw
ds
fwait
js
stc
dec
ljmp
dec
insl
push
ljmp
xchg
dec
push
jg
add
pop
aas
mov
loop
push
das
insb
roll
stos
xchg
int
push
inc
ret
cmp
push
call
out
enter
std
mov
cmp
mov
cltd
add
push
js
xor
cmp
clc
cmpsl
inc
ss
pop
lcall
or
mov
in
xchg
push
pop
pop
test
adc
lock
fnstenv
lods
and
jle
or
rcll
pusha
pop
push
cmp
repz
push
movsb
adc
loope
fs
dec
je
adc
push
xor
pushf
jge
loope
loop
in
push
sbb
cmp
nop
adc
repnz
popf
pop
gs
lds
add
or
add
mov
push
test
in
repz
adc
mov
lea
xchg
cmc
faddl
sub
push
cmp
outsl
sbb
lahf
cmp
add
fwait
mov
sub
mov
test
dec
dec
std
mov
mov
push
aas
add
pusha
jns
sbb
aam
xchg
mov
mov
and
mov
fisttpl
loope
or
pop
push
pop
jmp
lods
mov
sti
pop
sbb
es
add
jecxz
jp
popa
push
fsubrs
rolb
ror
mov
push
jp
nop
dec
and
fs
jmp
sbb
cld
int
arpl
push
bound
das
shl
push
xchg
loop
push
mov
sub
jb
arpl
and
addr16
fimuls
and
mov
iret
inc
jecxz
sbb
push
mov
and
aad
test
inc
mov
push
push
pop
int3
push
out
stos
sarl
cmp
lods
outsb
xor
sub
pop
ja
dec
xchg
fistpl
les
mov
push
cs
and
inc
lahf
jns
jmp
mov
add
adc
mov
mov
pop
push
jge
jge
jb
scas
xchg
jae
xchg
adc
gs
ret
cmpsb
pop
int3
dec
mov
insb
sbb
sbb
pop
mov
insb
add
aaa
in
lahf
pushf
ljmp
xlat
sub
cmp
and
lret
imul
or
test
cwtl
dec
and
add
dec
insl
out
mov
push
adc
icebp
stos
clc
gs
dec
inc
lea
mov
cmp
jle
popf
loop
mov
sub
dec
mov
int3
adc
test
mov
ljmp
xchg
out
xor
push
daa
andb
lea
je
xchg
scas
and
xchg
xor
dec
movsb
insb
ds
xlat
jecxz
xchg
lret
out
insb
jne
sahf
fwait
cltd
sub
mov
sub
adc
inc
lcall
pop
mov
xor
addr16
ljmp
dec
ss
gs
or
dec
xchg
fsubs
stc
inc
adc
rolb
pop
xor
pop
std
out
stos
iret
inc
dec
jg
pop
rcll
clc
mov
les
mov
outsb
movb
adc
or
in
add
push
mov
clc
push
mov
dec
inc
scas
dec
sub
outsl
push
pusha
ljmp
sbb
push
fnstcw
mov
push
and
call
sub
flds
inc
lcall
cwtl
scas
xor
test
loope
pop
outsb
xchg
push
push
lods
stos
fsubrs
mov
xchg
mov
push
inc
sbb
andl
mov
gs
loop
shl
and
adc
inc
into
dec
pop
pop
ret
sbb
push
inc
repz
xor
stc
mov
or
lods
dec
lret
xchg
xchg
out
roll
xor
cli
mov
mov
add
sub
sbb
cmp
add
dec
ds
cmp
or
rcrb
mov
mov
imul
in
fwait
sub
mov
mov
aaa
jmp
lock
popa
pop
or
hlt
orb
mov
loop
cmovp
gs
push
xchg
push
cmp
and
cmc
and
push
cmpsb
shl
push
icebp
cmc
mov
push
add
cmp
out
push
mov
inc
mov
xor
jne
in
push
pop
loop
dec
hlt
pop
sbb
dec
shrl
sahf
test
aad
popf
and
pusha
mov
test
mov
shrb
fistps
mov
repnz
add
repz
lcall
bound
cli
test
test
cmp
mov
cmp
pusha
or
cs
icebp
repnz
stos
orl
lahf
mov
and
fsub
adc
push
cmp
cmpsl
mov
inc
bound
xlat
jg
pop
test
or
pop
mov
push
dec
xchg
sbb
jae
adc
mov
fmull
pmullw
jg
push
adc
outsl
inc
test
jl
xchg
js
enter
or
pop
cmc
xchg
mov
xor
lock
push
lcall
mov
rcrl
ljmp
aas
xchg
mov
and
inc
mov
setge
pop
mov
adc
cltd
fistps
sbb
les
sub
lret
adc
and
mov
imul
cld
xchg
rorb
and
mov
mov
dec
and
iret
jecxz
shlb
sub
and
mov
sub
push
clc
jp
negb
mov
dec
mov
pop
push
andb
test
cmp
popf
dec
lahf
negb
jnp
xor
repnz
mov
adc
sub
push
mov
mov
jecxz
fdivl
mov
icebp
mov
stos
sti
pop
sbb
dec
jne
sub
loop
pop
cmpsl
sbb
pop
jnp
sbb
sbb
fildl
icebp
pop
loopne
shr
ret
in
addr16
dec
add
mov
mov
jp
push
mov
rcrl
sahf
xor
aam
cli
cmp
sub
mov
icebp
out
sub
fwait
test
or
inc
cld
jo
bound
xchg
sub
mov
push
rorb
xchg
inc
cld
jecxz
ficompl
bound
jmp
mov
ret
jmp
sahf
testl
xchg
imul
mov
mov
pop
fildll
mov
rcll
mov
push
mov
xchg
xor
mov
push
test
push
ret
orl
mov
jl
jbe
mov
lcall
dec
adc
frstpm(287
pop
mov
mov
fdivl
xor
pop
mov
call
popf
inc
xor
fmull
pop
test
sbb
mov
mov
sarb
sbb
add
cmp
lock
xor
test
push
popf
cs
stos
cmp
ljmp
lds
cld
mov
movsl
mov
sub
and
mov
loop
pop
in
mov
mov
aad
cmpl
xchg
cld
dec
jbe
in
fldcw
jg
lea
subl
xor
lret
lods
mov
in
mov
inc
push
jb
inc
mov
stos
sbb
test
cmpl
push
inc
out
repz
das
stos
sbb
sub
or
fmuls
cmp
in
xor
mov
mov
insb
mov
jmp
idiv
or
sahf
lahf
loope
jo
mov
sbb
add
lds
ds
jmp
fwait
xchg
mov
andl
int3
or
and
pop
jle
sub
xchg
call
pmaxub
iret
pop
cmp
cmpb
mov
out
xchg
mov
inc
arpl
pop
inc
pop
add
cwtl
cmp
lcall
mov
ret
sbb
lods
movl
inc
sbb
rclb
cli
into
push
int3
and
pop
inc
inc
ficomps
mov
pop
mov
fcmovb
sub
aam
addl
push
pop
es
out
add
dec
fs
popa
mov
cltd
fistps
lahf
sub
sahf
push
fstpl
add
mov
xchg
mov
xor
test
add
stos
cld
stos
mov
sub
mov
jg
sbb
clc
adc
inc
decl
rcll
cmp
outsl
ljmp
sbb
dec
mov
stc
adc
jmp
inc
xchg
pop
jns
xchg
add
daa
adc
jnp
mov
aam
scas
sti
repz
les
push
adc
xchg
lcall
fildl
mov
fwait
jo
mov
dec
movsb
or
or
adcb
std
mov
repnz
adc
ljmp
dec
mov
daa
jbe
jecxz
jne
mov
and
loopne
mov
xor
or
cmp
lock
mov
jb
dec
out
cmp
cmp
mov
mov
xchg
push
xchg
add
ds
out
dec
insb
fistpl
jp
imul
js
adc
jg
popa
test
dec
mov
push
xchg
hlt
cmp
pop
lcall
jmp
jne,pt
push
adc
call
dec
fimuls
sti
outsb
je
leave
rorb
fstl
hlt
jmp
and
rolb
sbb
js
xrelease
sub
push
pop
jge
lock
lahf
cmp
sbb
xchg
cmpsl
jmp
cmp
mov
cmovne
cld
jge
imul
imul
sbb
sbb
and
clc
clc
sbb
and
xchg
jecxz
mov
outsl
push
and
mov
nop
mov
mov
lcall
dec
push
mov
push
ja
cmpsb
xchg
hlt
cmp
dec
div
mov
inc
adc
mov
imul
or
pop
pop
cwtl
and
and
or
inc
inc
mov
push
test
dec
lcall
repnz
add
sbb
mov
fimuls
sbb
sub
hlt
xor
push
out
test
sbb
mov
mov
jmp
je
std
daa
and
arpl
test
fs
jbe
cmc
rcrb
aaa
shlb
mov
loop
pop
arpl
movsl
or
adcl
cmpl
in
arpl
xlat
and
cmp
mov
push
cmpsb
lods
js
jne
orb
int
mov
out
pop
cltd
aad
cvttps2pi
fnsave
lret
int3
test
rep
push
test
inc
stc
pop
movsb
xchg
std
shr
and
jne
mov
incl
in
jecxz
sar
pushf
jne
loope
stc
inc
repnz
cli
lret
lods
xor
call
sti
mov
cmp
and
push
add
adc
mov
push
testl
out
insb
jmp
insb
cmp
notl
cmp
jb
jnp
jecxz
int3
sbbl
lds
cmpsl
mov
mov
fwait
push
out
mov
push
pusha
scas
cltd
adc
sbb
aaa
cmp
pop
sbb
pop
mov
lods
call
jns
and
pop
out
push
insb
das
arpl
mov
mov
mov
and
dec
pop
push
idivb
clc
pop
push
rorb
jo
mov
insb
lods
inc
xchg
xlat
jecxz
lret
and
cmp
inc
pop
scas
jb
test
and
in
push
mov
add
sub
and
lret
scas
mov
mov
and
mov
cmpsl
ret
in
adc
movsb
dec
adc
lds
sbb
mov
push
and
adc
stos
pop
xor
dec
inc
dec
fwait
pushw
adcb
loop
sub
pop
lahf
jo
mov
pushf
mov
mov
pop
xor
in
lahf
push
test
test
adc
andb
ja
dec
outsl
sbb
adc
sbb
jo
mov
jp
mov
or
adc
popa
push
sbb
sub
lret
or
fdivl
popf
sbb
jo
add
scas
dec
mov
hlt
clc
jb
test
aaa
aad
jae
mov
mov
jb
adc
xor
mov
adc
stos
lea
fs
loopne
pop
in
cmp
or
pop
imulb
test
ret
cmp
gs
std
pusha
pop
xchg
pusha
lds
xor
xor
mov
push
inc
mov
adc
xchg
call
cwtl
sbb
xchg
fs
and
mov
shll
cmp
xchg
lret
sub
sub
push
add
mov
push
mov
aad
fcmovbe
sti
pop
sbb
jne
jno
sub
xchg
lcall
add
stc
adc
jno
mov
loope
int3
xlat
dec
dec
test
daa
lahf
mov
add
xchg
imul
in
add
lcall
add
loop
popf
inc
clc
or
outsb
sbb
mov
int3
xor
enter
mov
sbb
inc
sti
inc
or
out
ljmp
mov
xchg
shr
pop
ja
into
lock
in
cmpsb
sub
inc
hlt
shrb
push
push
call
test
dec
mov
mov
sbbl
lret
and
pop
push
leave
dec
push
dec
dec
cmp
notl
xlat
mov
daa
jmp
sti
cli
hlt
std
xor
divb
lea
popa
movhps
scas
mov
push
jp
test
xchg
mov
test
daa
mov
adc
dec
std
pop
addr16
mov
inc
sahf
jnp
popa
scas
scas
aad
sub
fbstp
jecxz
lock
int
icebp
pop
movsl
or
scas
sub
lock
lods
jg
xor
inc
adc
push
dec
mov
jmp
push
push
pusha
sbb
jmp
test
dec
call
pop
push
popa
inc
sar
rorb
xchg
leave
lret
ljmp
iret
pop
pop
out
lret
aas
xchg
test
push
cmp
sbbl
jge
fisubs
mov
sub
adc
xchg
dec
movsb
test
pop
mov
inc
cmp
insl
or
out
fisttpll
in
sub
insb
and
lds
in
loop
pop
fdivl
jb
movb
ss
and
mov
sub
nop
and
push
xchg
xchg
fsubl
or
xchg
cmp
cld
jnp
cmp
or
push
jle
cli
and
mov
decl
cmp
out
in
out
rep
fucom
push
in
mov
mov
rorl
call
es
xchg
test
xchg
stc
jo
cmp
test
jns
into
fdivl
fisttpll
lret
mov
xlat
popf
fwait
aas
mov
fwait
mov
in
push
fimuls
aam
aas
mov
out
push
mov
cmp
and
insb
pop
cmp
or
in
int
mov
push
lret
mov
mov
inc
add
test
aas
in
out
add
aad
inc
fwait
gs
push
mov
movsb
xchg
pop
push
sbb
adc
shlb
mov
inc
inc
jle
push
bound
adc
lds
subl
daa
ret
xor
xor
repz
sahf
dec
mov
mov
or
insl
xor
arpl
pop
mov
imul
das
mov
clc
sbb
mov
stos
je
xor
jne
xor
rcrb
or
pop
adc
fadds
lock
scas
lcall
ljmp
int
add
mov
pop
sbb
adc
sub
and
cld
pop
mov
decl
in
pop
mov
push
fwait
ret
je
lea
out
std
sbb
rcll
xchg
and
std
xor
data16
push
cmp
pusha
add
out
sbb
mov
sbb
ja
inc
fbstp
out
imul
pop
mov
popa
aad
cmp
mov
mov
pop
repz
mov
jp
fisttpll
jns
xchg
enter
pop
and
xchg
inc
jmp
add
ss
jns
pop
mov
push
les
jle
data16
dec
pop
cld
and
ljmp
pushf
and
cmp
ror
inc
fsubr
cmp
divb
xchg
je
mov
fdivrl
sbb
mov
pop
pop
mov
adc
in
mov
adc
pop
inc
stos
and
cmp
lea
mov
ds
push
adc
cmp
call
pop
notb
ss
je
dec
lret
in
cmp
xor
pushf
sbb
cwtl
outsl
add
jmp
xor
idivl
sbb
inc
cmc
push
cmp
bound
inc
mov
push
dec
inc
cwtl
xchg
arpl
sub
enter
testb
shll
dec
loop
ds
icebp
adcl
test
sahf
stos
into
dec
bound
ss
cltd
rcrb
jmp
jg
or
xchg
mov
and
add
loope
insl
sbb
push
call
sbb
inc
add
xchg
mov
mov
or
inc
mov
dec
xorb
shrb
push
mov
addb
add
mov
shl
test
cwtl
in
mov
inc
lods
or
jle
mov
mov
mov
loopne
data16
int3
mov
mov
xchg
push
lea
fistl
faddp
xor
jecxz
cmp
xor
dec
lods
cltd
jno
mov
pop
inc
call
mov
jge
insb
ja
bnd
bswap
ss
les
push
rcrb
dec
cli
mulb
clc
dec
xchg
xor
testl
sbb
mov
xor
dec
movsb
xchg
mov
shlb
pusha
js
lret
lahf
cmpsl
add
scas
in
fisttps
jbe
dec
jl
ljmp
pop
ja
adc
imulb
outsb
cld
sub
je
scas
inc
adc
ds
xchg
xor
mov
sahf
xchg
and
lock
movsb
pop
xlat
rcrb
jge
lret
jno
xchg
dec
xor
aad
cmp
jne
pop
lock
cltd
fisttpll
lock
test
mov
inc
test
out
jno
mov
movsb
data16
insl
xor
xchg
mov
cmp
mov
mov
and
mov
xor
outsb
fcoml
call
inc
in
jle
pop
out
sub
int3
sub
fisubrl
mov
mov
sbb
addr16
xchg
mov
mov
jg
fists
jmp
sub
cltd
mov
xchg
out
and
lret
out
pop
add
mov
pop
ljmp
gs
gs
les
and
jbe
adc
shll
repz
test
and
scas
repnz
test
ja
lods
jne
pop
lods
aad
jmp
fidivl
dec
ja
shrl
inc
cmpsl
incb
out
dec
mov
xchg
sub
cmp
cmp
imul
pop
jnp
xchg
xor
or
mov
call
xor
pushf
es
loop
jge
std
cltd
mov
mov
js
mov
and
das
mov
and
fwait
jp
out
subl
jl
jecxz
dec
push
pushl
aas
aad
mov
mov
pop
pusha
pop
pop
mov
push
cmp
mov
in
dec
cltd
outsb
dec
mov
xchg
cmp
inc
mov
push
je
xorl
fistpl
nop
push
rcrb
clc
sahf
ret
sbb
fst
mov
nop
xchg
or
lods
repnz
ret
dec
out
fadd
mov
loop
push
inc
gs
push
aad
aam
xchg
mov
nop
or
and
fcomip
mov
leave
pop
push
adc
repnz
in
ds
mov
subb
dec
jecxz
adc
cmpsb
pop
xchg
xchg
dec
incl
stos
adc
dec
mov
movsl
std
inc
fisttpl
fimuls
pop
mov
js
jnp
cmp
test
push
jmp
int
clc
adc
imul
xor
in
lret
movsb
inc
mov
leave
sbb
and
pop
add
xchg
imul
movsl
mov
add
inc
clc
pusha
push
ret
jno
xor
pusha
jb
xor
jp
dec
inc
add
mov
mov
push
mov
push
jmp
scas
sub
les
mov
mov
std
jae
dec
jp
push
outsb
rorb
dec
and
dec
cmc
fidivrs
pop
js
scas
pop
cwtl
xchg
xor
icebp
dec
sub
pushf
lods
nop
arpl
inc
hlt
into
sahf
lea
nop
xchg
mov
xchg
sarl
xchg
mov
lahf
xchg
aaa
ficompl
shl
popa
repz
pop
je
jp
insl
xor
lods
mov
cmp
or
test
dec
rclb
sub
push
xor
in
ljmp
mov
add
mov
xor
cmp
inc
sar
jnp
add
push
jns
clc
mov
mov
mov
jnp
pop
add
adc
mov
rcll
roll
int
lret
jne
mov
adc
outsl
shl
and
jbe
mov
push
mov
jnp,pt
leave
fs
inc
inc
ffree
mov
add
ret
mov
loop
push
push
cltd
add
xlat
cs
cltd
shrl
lock
icebp
movsbl
lret
xchg
mov
adc
aaa
gs
ljmp
inc
out
aaa
out
and
arpl
add
jmp
sbb
push
sysret
das
xchg
push
xor
lea
shlb
clc
loopne
or
and
lock
push
cli
xchg
push
dec
testl
cmp
aas
pusha
cmpsb
call
inc
sub
xor
mov
mov
mov
add
outsb
push
cmpsl
jmp
sahf
jmp
das
mov
fisubrs
mov
rcrl
xchg
and
cmp
cmp
mov
iret
xor
nop
fiadds
xor
cs
notb
lods
es
test
or
nop
rcl
sbb
outsl
adc
push
fstpt
xchg
cld
mov
and
jne
push
cltd
bsr
sub
fisubrl
push
stc
pop
into
aad
inc
dec
sbb
lds
dec
dec
xor
xlat
dec
mov
aas
cmc
stos
outsl
cltd
pop
or
and
sbb
stos
add
incl
sbb
inc
mov
or
out
je
imul
jmp
mov
cmp
and
sbb
jns
das
les
stos
push
shlb
fldenv
std
push
push
xor
push
dec
aad
bound
mov
rcrb
leave
jne
addr16
mov
test
inc
jbe
adc
dec
cltd
inc
jmp
sbb
mov
fadd
pusha
in
outsl
fisubrs
jbe
jae
cmpsb
fistps
mov
push
call
xchg
out
repz
jge
mov
add
mov
inc
ljmp
adc
xor
mov
mov
fstpl
test
jmp
outsb
sbb
mov
mov
inc
adc
mov
cmp
jle
adc
movsl
push
loop
enter
xor
in
dec
cmp
fmul
mov
pop
add
jmp
fcompl
jle
push
push
iret
addr16
inc
std
fcoms
or
pop
jne
test
ret
pmaddwd
xchg
mov
adc
fists
and
repnz
mov
push
sub
pusha
scas
ret
pop
lea
addr16
sub
rcl
scas
fsubrs
lret
jmp
pop
sbb
scas
xor
out
jno
and
mov
repz
sbb
fisubs
inc
sbb
or
mov
pop
imul
xchg
dec
push
pop
mov
cmp
mov
rclb
jl
insb
dec
cli
inc
lcall
in
mov
in
bound
nop
test
inc
movsb
inc
loop
gs
inc
fmull
test
push
xchg
xor
or
pusha
or
xor
popf
mov
sbb
push
cltd
add
clc
or
fistps
push
mov
add
push
add
fisttps
clc
and
fwait
cvtps2pd
mov
repz
int
repnz
inc
cmp
subl
into
pop
mov
std
cmp
gs
mov
in
pop
adc
cltd
push
add
mov
mov
out
or
es
fcmove
fwait
sub
pop
jbe
imul
fdivs
out
mov
cmp
in
xchg
adc
push
cmp
pop
in
lods
ret
arpl
sti
ja
inc
outsb
je
adc
movsb
imul
aas
stos
cwtl
inc
inc
mov
mov
fdivs
sub
add
adc
rcrb
loopne
lods
push
push
cmp
mov
int3
xlat
inc
mov
pop
cmp
push
sbb
stos
test
adc
inc
scas
mov
inc
mov
dec
std
int3
ret
pop
dec
rolb
flds
or
mov
xchg
outsb
js
int
cmp
mov
xorl
cwtl
stc
xlat
rol
sub
fsts
addl
test
push
jns
jne
mov
jecxz
sub
mov
mov
cli
cmp
jmp
mov
mov
cltd
adc
xlat
cld
cmp
loope
jne
popf
das
scas
dec
div
adc
jmp
jmp
test
pushf
xor
xchg
sbb
decb
int
pop
and
mov
cmc
sub
sub
scas
xchg
movsl
push
inc
cmp
mov
movsb
fidivrl
insb
lret
xor
pop
div
cmpsl
and
pop
mov
test
inc
rclb
jns
mov
xor
or
cmp
push
pop
sbb
mov
or
divl
push
xchg
push
aaa
jbe
fwait
or
xor
out
and
add
xor
and
jmp
sbb
pop
les
xor
pusha
icebp
push
dec
and
out
and
jecxz
xor
jmp
repnz
insl
iret
push
rcll
out
push
mov
and
xchg
and
stc
mov
pop
stos
push
lret
pop
out
or
cmp
sti
movsb
or
jmp
fwait
lea
rcrb
jne
rcll
out
adcb
jmp
orb
movsb
cmp
mov
mov
push
adc
test
imull
dec
and
dec
mov
iret
fwait
push
xor
aas
call
xor
mov
sbb
xchg
adc
cmp
xor
movsb
in
xchg
popf
hlt
adc
rclb
sbb
jnp
pusha
gs
xor
dec
adc
lahf
pop
cltd
data16
or
mov
adc
fstpl
push
push
jmpw
jle
xchg
test
sar
cmc
mov
mov
rclb
jecxz
pop
xor
push
dec
rorb
je
cs
or
stos
dec
mov
dec
or
fwait
testb
pop
cmpsb
jge
les
aas
jns
cmp
add
xchg
inc
sub
mov
sbb
jle
push
leave
jae
repnz
clc
testl
xchg
movd
cmp
out
cmp
les
and
cmpsb
cmp
jecxz
xchg
adc
or
jg
int
test
dec
stc
inc
fbstp
int
xchg
daa
push
push
mov
popf
xor
push
cmp
jnp
add
std
clc
aas
adc
mov
xor
lock
je
inc
js
and
ss
inc
cmp
pop
imull
inc
inc
pop
test
and
jl
mov
test
lret
sub
insl
pop
mov
ja
mov
stc
xchg
add
fiaddl
jmp
lock
push
mov
jo
xchg
outsl
data16
xor
addr16
or
fistpll
stos
aad
mov
push
or
xor
xor
sar
out
xchg
movsl
push
mov
inc
add
xchg
add
push
dec
fisttpll
and
scas
dec
dec
repnz
jmp
dec
aaa
cmpsb
xchg
sahf
pop
xor
jo
pop
rcll
xor
adc
sub
cmp
mov
ficomps
andl
lahf
rcr
imul
push
rcll
xor
inc
ds
mov
ljmp
jmp
int
ror
insw
jbe
test
pushf
orb
fs
cmc
fs
insb
in
sti
pop
fisubs
sahf
mov
popa
test
pushf
in
and
sub
sub
jle
shlb
mov
lds
inc
inc
je
inc
sub
add
stc
addl
adc
jo
jb
movsl
into
cmp
and
and
outsb
cmp
outsl
adc
adc
out
out
call
mov
arpl
jns
lahf
or
shll
aaa
sti
push
insb
dec
in
lret
das
pusha
mov
loop
cmp
add
pop
dec
mov
cmc
dec
in
out
mov
hlt
je
sbb
iret
mov
or
loopne
push
cwtl
pushf
repz
mov
js
pop
mov
pushf
mov
cmp
xor
in
repz
pop
pushf
push
add
add
mov
xchg
xchg
repnz
jg
insl
mov
shl
xor
jge
clc
insl
push
xchg
xchg
ret
sbb
in
ficompl
pop
popf
outsb
ja
sbb
mov
negb
mov
inc
fisttps
daa
xor
sub
jo
xlat
hlt
jno
xchg
vmovshdup
imul
inc
dec
mov
pop
nop/reserved
outsb
in
pop
inc
mov
dec
pop
repz
pop
dec
outsb
cmp
leave
mov
pop
cmp
jno
jmp
mov
mulb
adc
mov
mov
sbb
or
dec
mov
mov
jle
test
xlat
or
out
xchg
inc
aaa
jg
outsb
lcall
dec
orb
push
add
fs
or
rorb
mov
mov
in
imul
inc
aad
mov
pop
jo
hlt
mov
mov
xchg
scas
add
mov
mov
aad
lock
mov
orb
add
inc
addl
xor
pop
adc
sbb
dec
mov
out
decl
aas
call
mov
ret
popf
in
dec
cmp
hlt
repnz
mov
cld
mov
daa
aam
xchg
push
cwtl
xor
push
lret
pop
push
ja
jmp
mov
mov
repz
cmp
sub
fiaddl
imul
out
imul
mov
mov
inc
bound
loop
lret
rolb
add
adc
xchg
lods
add
mov
ds
test
sub
sahf
mov
sub
jne
lret
test
adc
mov
or
inc
jle
popf
fsubl
pop
dec
inc
jl
fistl
jp
lock
jnp
xlat
call
fidivrs
cmp
scas
mov
jb
xorl
mov
mov
pop
sbb
xchg
pop
and
dec
out
pushf
aas
or
or
jmp
out
addr16
or
repnz
popf
pop
jns
addl
into
sub
xchg
cmc
lea
es
fmull
loopne
imulb
lahf
out
jbe
pop
ret
pop
out
mov
call
mov
cmp
adc
pop
insl
cld
sbb
push
push
push
mov
mov
sti
ffreep
rcrb
dec
xor
and
ljmp
push
sub
outsb
add
enter
insb
lea
in
push
test
sbb
mov
push
fmull
lods
pop
mov
xchg
and
cmpsl
inc
adc
xchg
push
nop
lahf
popf
pop
bound
bound
fwait
adc
cli
and
fbstp
fmuls
lods
lcall
sub
mov
outsl
sarl
xchg
jno
leave
push
test
pop
fs
clc
adc
addr16
in
imul
iret
sbb
hlt
or
bound
lret
mov
imul
test
jle
insb
mov
mov
pop
mov
sbb
popa
pushf
jae
std
aad
add
lea
pop
xor
test
pop
lret
fs
inc
xchg
cli
jns
sub
adc
rorl
cltd
cmp
adc
addr16
loop
div
xchg
add
push
into
push
das
push
dec
imull
adc
call
mov
pop
scas
mov
repz
out
dec
fnstsw
js
push
inc
cld
bound
clc
repz
leave
cmp
into
push
mov
fwait
inc
mov
test
sub
fs
pop
xchg
sbb
pop
mov
gs
jecxz
xchg
push
test
mov
lahf
repnz
mov
xor
mov
iret
push
push
vpunpckldq
xchg
inc
insl
iret
rcl
xchg
pop
jmp
paddusb
lods
bound
loopne
and
arpl
lahf
or
cmpsl
pop
and
in
jg
jmp
ds
mov
push
dec
pop
sub
dec
fmul
xchg
pop
inc
sub
out
stc
loope
fists
mov
leave
sbb
mov
lock
jne
push
scas
mov
mov
and
xor
jmp
popf
rcll
repz
in
ljmp
or
sarb
mov
xchg
lret
daa
cmp
cli
jmp
push
icebp
sub
push
mov
jbe
xchg
js
inc
sbb
xor
in
jp
lret
add
lods
adc
loope
ss
stc
dec
divl
shr
add
stos
addr16
jno
cmpsl
mov
xor
imul
cwtl
mov
insl
pop
xor
gs
add
sbb
fwait
inc
push
pop
jle
ret
adc
sbb
xchg
cmp
inc
jmp
enter
mov
sbb
fisttps
jecxz
jmp
ljmp
lock
repnz
stc
xchg
cli
loope
inc
push
xchg
inc
mov
out
lea
xchg
into
cmp
mov
xor
cmp
test
xor
lds
decl
out
jbe
outsb
daa
int
mov
add
fisubl
fnstenv
rcrb
fsubrs
mov
ja
mov
scas
dec
jg
fcom
jl
sarb
xchg
in
shlb
jbe
hlt
add
cmp
or
outsb
xchg
cmpsl
cmp
jecxz
movsb
mov
mov
in
ss
sub
and
shlb
dec
pop
xlat
mov
test
and
into
mov
mov
mov
xchg
inc
lahf
in
mul
data16
jp
jne
mov
cltd
xchg
add
mov
hlt
dec
add
sbb
mov
mov
adc
fadds
push
je
dec
int3
mov
lods
and
mov
cmpb
scas
sbb
cmc
mov
push
sbb
fcomps
inc
loope
and
cmp
jp
roll
inc
cs
in
in
notl
and
sub
dec
pop
enter
pop
in
fcoml
and
cmc
mov
out
jae
mov
jmp
mov
pop
in
stos
mov
fadds
push
sbb
push
mov
cmp
movsb
sbb
mov
aaa
inc
push
stos
sbb
mov
mov
sti
mov
jne
test
dec
xor
cmp
xor
sub
jae
scas
xor
xor
xor
or
dec
mov
rcl
in
sub
pusha
jg
push
hlt
das
pusha
je
enter
test
cmp
sub
pop
or
adc
mov
and
sbbb
shlb
inc
ja
adc
push
pusha
lock
pop
sbb
xor
outsb
daa
fs
jbe
push
dec
mov
ja
ffreep
adc
cltd
xor
jl
push
adc
das
or
int
mov
xor
mov
fistpll
xchg
cmp
lret
mov
push
inc
mov
mov
mov
jnp
ds
test
aad
adc
or
cmpsb
mov
adc
adc
inc
jae
or
mov
pop
sbb
pop
dec
adc
pushl
shl
xor
add
pop
jl
sbb
xchg
xor
ret
jl
imul
das
lret
and
int3
push
jmp
clc
lret
out
mov
xchg
out
or
pop
loop
std
mov
lahf
shll
add
mov
jle
les
mov
xchg
cltd
add
jmp
sub
inc
lret
fsubs
fldt
loop
jns
jle
jge
filds
mov
das
sub
or
lcall
dec
insl
out
sbb
in
adc
and
pop
mov
mov
lds
jo
xor
mov
cmp
lds
dec
lret
mov
into
in
shrl
and
mov
xchg
std
lahf
fs
sti
sub
fwait
cmp
xlat
mov
in
lret
jecxz
pushl
movsl
push
mov
fcoms
mov
mov
pop
mov
mov
mov
mov
lcall
iret
push
mov
mov
xchg
mov
testl
lds
inc
jl
arpl
cmp
jae
arpl
jg
mov
xchg
add
adc
mov
dec
jge
gs
lods
mov
ror
or
fnstsw
imul
movsl
xor
ss
rcrl
sbb
mov
adc
mov
out
push
stos
xchg
cltd
xchg
jo
cmp
or
into
out
push
ss
xchg
or
rep
fcoms
je
pop
xor
cs
and
cmpb
pop
jle
xchg
mov
xchg
jb
jo
imul
push
sub
mov
or
or
add
push
and
mov
xor
push
and
lock
jo
sub
mov
and
mov
jnp
test
jne
or
arpl
and
lea
aam
in
scas
xchg
out
inc
aad
out
lock
icebp
jl
frstor
and
pop
ljmp
div
mov
sbbl
sbb
aas
or
xchg
or
pop
ja
test
add
dec
loop
insl
sbb
out
sub
sbb
clc
test
pop
dec
mov
dec
mov
es
mov
jle
cmpsl
outsb
and
pop
imul
clc
jl
test
test
dec
dec
sub
adc
push
ss
mov
loopne
pop
es
adc
in
lea
repz
js
or
ds
movsb
mov
push
and
xchg
xchg
jmp
arpl
jl
push
andb
or
popa
stos
inc
cmp
imul
mov
mov
nop
add
inc
loope
adc
fisubs
jae
add
in
lods
push
push
mov
iret
je
in
adc
dec
iret
inc
andb
mov
jmp
cwtl
xchg
sub
jmp
stos
mov
and
hlt
push
div
dec
xchg
push
pop
out
xchg
adc
rcl
data16
dec
shlb
into
cwtl
jg
cmp
sub
adc
loope
rcll
loopne
push
inc
jg
lret
sysret
pop
pop
out
add
cmp
xor
scas
cli
nop
dec
sbb
icebp
stos
inc
adc
stos
xchg
fcoms
mov
hlt
bound
pusha
rcrb
in
outsl
xor
es
xor
int3
pop
shrl
outsl
icebp
or
adc
pop
insl
leave
adc
and
insb
outsb
and
jge
jmp
repnz
jle
xchg
mov
fmulp
and
in
sbb
mov
sbb
icebp
pop
aam
xchg
sbb
lea
lds
mov
loopne
aas
adc
cltd
cmpb
cmp
sbb
dec
aas
pop
mov
lds
imul
sub
lret
ljmp
lods
push
or
add
xor
sahf
lods
test
sub
js
data16
or
xor
mov
fdivr
sub
and
fwait
leave
repz
cmp
mov
jge
mov
push
insl
add
add
xchg
mov
ret
xchg
mov
or
mov
cmpsl
popa
sti
push
movsl
int
xor
mov
lahf
or
sahf
and
fsts
inc
and
ds
and
xlat
jno
popf
dec
shlb
jbe
fisubs
mov
xor
inc
push
cs
dec
mov
stos
inc
icebp
sub
sbb
lods
cmpsl
dec
cs
sub
sbb
andl
shlb
inc
cmc
into
pop
mov
xor
fbld
inc
add
jg
xchg
cwtl
jg
adc
xchg
ds
push
cmp
mov
iret
adc
ja
adc
adc
mov
dec
xchg
add
adc
icebp
pop
jp
jae
lods
ja
out
jbe
sub
ja
mov
ja
dec
mov
pop
pop
jno
rolb
popa
jle
jecxz
ljmp
push
ss
add
dec
leave
add
sub
repnz
mov
popl
push
pop
sub
fcmove
or
std
iret
ret
lds
mov
mov
loope
or
mov
out
imul
sub
popf
mov
imul
pop
leave
pop
and
and
arpl
loop
mov
adc
lahf
out
mov
aas
cmp
adc
fldenv
cmp
sub
loop
mov
movsb
rcll
xchg
subl
push
jle
sarl
lds
femms
leave
sbb
js
leave
xchg
xor
mov
mov
cmp
leave
bound
lea
aaa
fildl
lods
enter
xchg
lods
hlt
sbb
arpl
iret
out
stos
xchg
insb
shrl
rcrb
aas
aaa
dec
xlat
push
fwait
lret
ds
mov
xor
imul
testb
jmp
lret
aaa
sub
xor
mov
and
test
loopne
dec
outsl
hlt
scas
ss
inc
xchg
xor
lgs
lea
ja
mov
mov
fisubl
sbb
sub
sub
mov
add
adc
int
pop
mov
xor
and
pop
push
xor
jno
fstps
aam
sbb
call
out
dec
cmp
aas
sub
mov
ds
scas
lret
pushf
stos
mov
inc
inc
cmpl
xor
xchg
jmp
push
aad
sub
add
arpl
popa
leave
pop
fiaddl
cmpsl
pop
in
fmull
lea
add
imul
lds
sub
movsl
dec
sarl
xor
testb
hlt
jno
sbb
enter
mov
cmc
ss
and
mov
xor
js
mov
and
push
mov
fucom
lcall
daa
adc
loope
jecxz
mov
iret
xor
test
je
js
test
hlt
dec
icebp
mov
jno
xchg
add
push
ss
sub
jbe
jmp
cmp
push
xchg
ljmp
aam
add
mov
mov
cmc
inc
mov
push
cmpb
dec
aaa
sub
and
sbb
lea
fisttpll
pop
imul
cltd
fcmovbe
or
xchg
inc
add
movsl
add
cs
xchg
in
fldcw
cwtl
lret
scas
jno
add
bound
je
cmc
add
or
jecxz
cmc
and
icebp
sub
xor
int
add
lock
mov
imul
loopne
faddl
lea
xchg
jo
fsubs
jmpw
and
pop
mov
stc
sub
push
mov
jmp
mul
push
repz
sbb
into
pushf
mov
lret
popa
rorb
mov
call
xor
lret
cmpsl
jo
jmp
mov
std
scas
mov
pop
into
adc
dec
je
push
clc
or
out
test
inc
cmpsb
into
adc
out
scas
xchg
push
bound
mov
test
icebp
pop
pop
insl
sub
and
mov
jle
pop
xchg
pop
js
arpl
pop
mov
pop
test
jb
shrb
mov
cwtl
xor
lds
js
mov
fdivrs
mov
gs
sbb
xchg
or
in
stos
jns
pop
popf
sbb
push
adc
inc
jne
xor
cltd
pop
push
sahf
mov
sti
lods
aas
rcrb
out
icebp
int3
cmp
in
add
movsb
clc
test
sbb
sub
out
insb
divb
int
aad
lock
pop
lods
rcrl
cwtl
insb
xchg
cmpsl
sbb
loop
cld
sub
jg
imul
clc
mov
cmpsb
in
mov
dec
addb
in
jle
mov
pop
add
out
sub
aam
hlt
inc
fisubrs
sar
test
add
std
imul
das
gs
adc
fidivrs
pop
push
mov
adc
lods
mov
jb
das
and
lock
nop
mov
cmpsl
xchg
xchg
jecxz
adc
nop
add
jmp
int3
jo
roll
call
pop
outsl
cwtl
mov
push
dec
xor
imul
and
mov
je
insb
in
iret
ljmp
js
lret
mov
cmpsl
lds
cmp
mov
pop
or
aaa
sbb
add
jmp
shlb
pcmpgtw
aaa
mov
daa
or
mov
fcomp
jmp
xor
jno
xchg
loop
jns
in
dec
cmpsl
fisubs
add
adc
and
int3
les
int3
icebp
lock
xchg
inc
xlat
jne
xchg
in
dec
adc
dec
push
cmp
adc
inc
or
std
in
cmp
mov
jp
pop
f2xm1
mov
push
movl
stc
xchg
sbb
cmc
xchg
cmp
sub
adc
and
pop
cmpl
add
rorb
in
xor
bound
sub
push
call
testb
add
mov
ret
pop
mov
sahf
cmp
sbb
shlb
fwait
pop
fwait
rcrb
dec
add
pop
pop
push
outsb
mov
scas
adc
xor
push
xchg
xchg
out
push
mov
insl
sbb
or
je
stos
out
push
dec
mov
movsb
stc
lea
xchg
in
inc
es
xor
mov
int3
mov
stos
jb
inc
pop
pop
pop
xor
sahf
das
out
mov
mov
fisttpl
sub
jnp
ds
mov
pop
cmp
addr16
adc
stos
sub
cli
pop
test
mov
add
mov
data16
je
loop
fwait
call
mov
jl
inc
xor
push
loope
ljmp
adc
jo
push
add
jae
cld
out
jbe
mov
lret
test
adc
and
or
sbb
mov
jle
jge
movsl
stc
aaa
pop
and
xor
adc
cli
iretw
mov
pop
adc
lods
dec
js
int3
ss
lahf
adc
ret
xor
mov
inc
pop
movsb
xchg
add
push
test
sbb
std
sub
lods
imul
or
aad
clc
hlt
addr16
fwait
fwait
pop
test
inc
mov
test
lcall
scas
rorb
test
xor
push
ljmp
lods
add
cmpsb
cmpsl
dec
inc
scas
add
ret
xchg
enter
and
loopne
scas
repnz
leave
in
adc
inc
ja
loop
movsb
push
stc
leave
add
daa
xor
xor
sbb
cmp
push
or
hlt
push
fcmovb
mov
or
inc
std
xchg
and
sbb
fdiv
sbbb
lods
and
cmova
int3
daa
lcall
mov
jae
in
mov
mov
add
jno
cmp
mov
sti
or
jnp
dec
int3
lock
mov
test
xor
in
jno
test
inc
in
pop
out
in
sbb
mov
lret
and
sarb
lea
xor
decb
push
cmp
add
dec
cmpsl
aas
or
sahf
pop
sbb
mov
xor
push
dec
sub
mov
push
jmp
xor
lcall
in
sbb
or
jp
adc
addr16
cmp
mov
out
in
sbb
fdivrl
das
fidivl
sbb
das
mov
inc
cmc
fiaddl
clc
insb
popf
iret
iret
inc
sbb
mov
daa
and
fldenv
xor
sub
mov
jecxz
mov
sbb
xor
dec
push
cltd
loope
mov
mov
dec
test
push
dec
imul
ljmp
ret
stc
push
mov
nop
mov
sbbl
clc
adc
and
popf
adc
jns
push
loopne
mov
in
adc
add
or
adc
sub
fists
push
stos
xor
sub
sbb
push
aas
inc
pop
lock
testb
push
dec
xor
and
xchg
push
mull
add
adc
sbb
push
inc
lret
add
push
lret
and
fidivl
inc
jb
mov
jno
sti
fimull
hlt
fists
adc
push
pop
jl
int3
in
imulb
outsl
mov
push
repz
in
push
and
mov
outsb
push
adc
mov
sbb
jmp
loopne
inc
dec
rcrl
insb
lea
imul
lods
insb
out
mov
pop
jp
faddl
mov
add
xchg
rcl
std
mov
mov
movsl
hlt
dec
push
ljmp
or
out
rcrb
add
dec
sub
dec
cwtl
jle
xchg
xlat
ret
jno
mov
ja
xchg
adc
and
das
fnstenv
data16
xor
xchg
jle
sahf
xor
addr16
scas
loop
pop
sbb
bound
fmull
sbb
xor
sbb
push
jnp
xchg
sbb
mov
fistl
pop
ficompl
adc
adc
in
sbb
pop
lods
mov
push
xor
js
pushf
jp
loopne
lret
roll
and
negb
test
out
adc
and
lock
ja
mov
fistl
fs
xchg
cwtl
pop
push
inc
dec
rol
dec
dec
xlat
xchg
repnz
pop
addr16
push
jne
pop
jae
jne
pop
xchg
pop
dec
mov
loope
loope
jnp
and
test
fildl
out
and
mov
cmpsb
jp
mov
push
ljmp
sub
enter
cmp
mov
test
adc
xchg
fbld
pop
jnp
xor
fidivrl
in
mov
movsl
push
std
and
mov
jle
cmc
gs
push
inc
into
popa
lock
shll
xor
xor
and
imul
ljmp
shlb
xchg
adc
add
jmp
das
fidivs
daa
aad
in
icebp
pop
leave
xchg
mov
cmp
fisubrl
test
fyl2xp1
mov
mov
out
push
dec
jmp
in
push
cmp
push
cmp
or
cmpsl
out
lods
pushf
ficomps
mov
and
loopnew
sub
hlt
dec
jo
dec
mov
cmp
dec
dec
adcb
aad
mov
lahf
xchg
inc
lock
and
xor
mov
pop
loop
cld
in
dec
xor
in
push
inc
cmp
push
sti
into
add
mov
push
test
sub
or
addl
push
out
dec
xor
cmp
daa
add
push
shll
loope
rorb
xor
repnz
pop
or
stc
test
je
xchg
cli
xlat
and
inc
movsbl
in
push
sub
addr16
pop
ret
fdivrs
jno
movsl
outsl
cltd
inc
ja
cmp
rcr
dec
ljmp
cld
pop
inc
or
push
xor
push
sbbl
xchg
les
cmpsb
loopne
repnz
gs
lea
push
cmpsb
mov
and
jno
out
inc
mov
sbb
inc
or
push
lret
push
push
mov
in
test
push
mov
cmp
jl
add
ja
loope
add
inc
and
arpl
push
mov
dec
xchg
sbb
lods
push
stos
xchg
or
sbb
jno
lods
aas
lret
in
ja
jg
in
aad
stos
sahf
testb
adc
fdivs
mov
and
lock
sbb
hlt
add
pusha
dec
xor
adc
cmp
call
sub
jmp
push
mov
and
sub
out
mov
outsl
subl
lcall
fwait
in
nop
jl
pop
mov
dec
mov
pop
loope
lock
inc
mov
and
aas
fisttpll
aaa
and
std
popa
fdivp
cmpsl
cmc
frstor
aad
cli
mov
jno,pn
fistl
pop
or
ret
cmp
mov
cmp
cs
sbb
or
ret
ljmp
adcb
icebp
inc
mov
xchg
pop
stos
int3
roll
lds
jo
add
out
int
or
dec
mov
adc
and
mov
push
mov
cmp
cmp
mov
cltd
push
cmp
pop
aad
dec
inc
and
cmp
in
jnp
fmull
jne
push
out
inc
add
push
test
lods
es
adc
pop
fildll
movsb
mov
sub
sti
scas
lods
and
adc
out
aaa
int3
sbbb
push
and
fsubr
or
push
repz
in
sub
insl
leave
hlt
inc
insl
push
fbstp
push
dec
and
fildll
push
inc
xor
aaa
lahf
les
sahf
add
push
cmpsl
mov
xchg
pushf
divb
enter
adc
sbb
pop
leave
into
xchg
cmc
dec
in
mov
hlt
or
in
js
cmp
or
jmp
pop
cli
jno
mov
jno
pop
sub
mov
es
repnz
push
xchg
popf
xchg
popw
subl
enter
testl
xor
cmc
mov
insb
add
adc
adc
out
fwait
movb
out
pop
sbb
hlt
pushf
inc
bound
push
sub
dec
or
inc
jae
mov
lds
mov
lds
inc
push
xor
xchg
popf
mov
lret
pop
cld
fs
pop
decb
mov
ficoml
mov
cmp
std
loope
adc
hlt
push
mov
push
push
pop
xchg
jns
repz
mov
bound
xchg
or
jno
popf
jae
stos
inc
inc
mov
shl
iret
aam
in
into
mov
jae
xorl
lods
push
pop
ljmp
out
mov
int
int
je
mov
sub
loop
xchg
sbb
fdivs
loop
sahf
cli
icebp
in
and
ret
dec
and
adc
sbbl
sbb
inc
mov
mov
xchg
or
sbb
ds
xchg
dec
inc
mov
mov
mov
popa
pop
inc
fcoml
xchg
in
push
fcmovne
pushf
aad
cmp
sub
std
mov
pop
push
loope
mov
andl
call
js
inc
pusha
decl
cmpsl
orb
stos
adc
divl
outsb
jmp
stos
sub
cmp
xchg
iret
gs
mov
lds
sub
xchg
inc
add
scas
xor
dec
inc
mov
inc
out
stc
add
repz
roll
pusha
jns
and
jno
jb
je,pn
mov
cmc
mov
test
push
dec
xchg
jne
xor
mov
or
dec
rolb
push
and
fs
test
std
xchg
insb
add
xor
shll
or
test
or
dec
es
mov
or
sbbb
loopne
negb
sbb
stos
add
cltd
adc
and
mov
or
mov
mov
pop
stos
int3
fstpl
push
loopne
push
mov
cli
pop
popf
sub
scas
mov
xchg
xchg
insb
sbb
jns
outsl
movsl
mov
cmpsb
rcr
arpl
imul
mov
dec
lcall
pop
inc
push
sbb
sub
notl
fdivrl
sub
mov
cltd
test
fmuls
pop
ds
push
jae
xor
xchg
and
and
je
insb
xchg
int3
jecxz
dec
jp
int
adc
add
jae
movsb
xchg
adc
in
mov
test
adc
rorl
gs
adc
push
push
cmp
lea
sbb
mov
and
out
add
clc
aas
mov
xor
mov
fsts
clc
mov
add
pusha
cs
fcompl
cmp
pop
stc
bound
inc
daa
mov
cltd
cmpsb
enter
in
data16
pop
xchg
cmp
lahf
push
inc
movsl
insl
add
dec
cld
mov
sbb
sub
in
jmp
cwtl
movsl
popf
loopne
iret
test
insb
xor
sbb
rorb
mov
push
iret
adc
xor
out
push
into
xchg
sti
adc
dec
das
or
and
pop
or
dec
sbb
clc
add
push
lods
test
ret
out
gs
fcomp
push
lcall
dec
add
and
stos
pop
mov
adc
jle
je
negl
sub
dec
push
lods
out
sub
adc
or
ret
movsl
int3
pop
fisubrl
mov
jmp
pop
jns
cmc
jge
mov
dec
mov
cmp
mov
scas
and
aam
mov
pop
jg
insl
xchg
test
pop
ficoml
aaa
jns
sti
push
testl
inc
xchg
jnp
jno
fcoml
adc
clc
xchg
imul
pop
xor
xchg
dec
or
xchg
adc
js
push
int3
out
jns
nop
fistpl
adc
into
cmp
popf
sub
fwait
push
dec
mov
dec
in
adc
pop
jecxz
jecxz
jnp
lahf
push
sbb
loope
inc
sbb
aaa
out
icebp
int
addr16
mov
dec
xchg
aad
lret
lahf
mov
or
ja
pop
in
xchg
arpl
ja
sub
pusha
fnsave
jno
cmp
pop
cmp
inc
cmp
inc
shll
xchg
xchg
or
les
rcrb
mov
fstl
mov
add
lret
sarb
mov
ja
push
add
xorb
dec
roll
xchg
je
pop
aaa
shlb
mov
push
mulb
gs
mov
cmpl
fsts
push
xchg
loopne
xor
mov
lret
mov
or
rcrl
mov
push
xor
mov
gs
dec
adc
jle
fnsave
pop
bnd
xchg
add
add
leave
out
test
je
sbbb
dec
arpl
mov
cli
fcoml
sbb
xchg
sbb
jne
add
xchg
jmp
mov
push
sub
pop
loopne
leave
jb
adc
adc
out
scas
idivl
enter
and
inc
loop
mov
loopne
dec
cmpsl
lock
mov
xchg
push
out
inc
dec
fistps
push
neg
sbb
mov
and
mov
daa
pop
mov
fs
lock
xchg
add
test
xor
add
jo
pushf
not
es
xchg
stos
sub
out
lds
ffreep
fldenv
add
jmp
mov
fwait
adc
add
mov
jg
add
divb
sarl
rclb
lcall
push
xchg
int
lds
cmp
testb
in
cmpsl
cmp
testb
stos
xchg
or
mov
jne
lock
cmp
fcmove
jno
hlt
rcrl
inc
fidivrs
repz
mov
imul
data16
out
mov
out
lods
push
sub
lret
sub
clc
pop
clc
mov
and
shrb
sar
inc
and
mov
ss
jnp
dec
and
mov
jg
xchg
cmp
or
pop
jl
push
xchg
pop
push
mov
loopne
add
adc
nop
push
dec
pop
mov
xchg
aam
int
cmp
sti
scas
es
push
pop
mov
xchg
insl
mov
add
push
andb
mov
cli
mov
jge
xor
ret
xchg
sbbl
push
cltd
push
adc
and
pop
call
sbb
xchg
and
sub
jmp
mov
aas
testb
or
ret
mov
popf
mov
lock
mov
stc
lods
add
shll
mov
cmp
das
fs
je
dec
or
ljmp
lea
hlt
mov
aam
jp
fidivs
rorb
mov
inc
and
mov
jmp
inc
popa
add
sahf
dec
xchg
lock
or
cmp
lock
and
push
push
cltd
push
jns
xor
fcomi
in
xchg
inc
xchg
in
aaa
mov
inc
inc
ljmp
xor
and
addr16
add
mov
loop
sbb
mov
adc
push
push
sti
popa
mov
xor
push
mov
les
xchg
jb
push
repnz
call
push
arpl
sbb
sar
cmp
test
sahf
adc
pop
lcall
pusha
xchg
pop
testb
mov
insl
cli
cltd
pop
jns
jecxz
sub
ret
leave
clc
push
and
mov
cwtl
insb
aas
les
je
movsl
and
push
adc
cmovbe
add
leave
outsl
mov
mov
jo
fadds
cli
test
cmp
xchg
std
stos
add
pusha
stc
iret
addr16
xchg
mov
mov
add
xlat
inc
xor
or
pop
xchg
vmread
and
dec
pop
or
xchg
mov
and
ds
cmpsl
insb
xchg
add
dec
sbb
roll
testl
sti
mov
into
mov
and
jo
adc
or
fs
fsubrs
lds
test
lahf
je
pop
test
adc
lds
xor
imul
and
lcall
mov
in
xchg
je
pop
rcr
xor
jp
adc
xor
sbb
jne
loop
sbb
mov
jbe
out
xchg
jo
mov
inc
out
and
jns
xchg
xchg
ficomps
jp
lods
test
ja
xchg
cmp
subl
adc
sbb
hlt
push
inc
lahf
out
inc
mov
jge
aam
test
mov
adc
aam
push
int3
scas
leave
pop
sahf
sahf
or
cmp
es
jb
fbld
mov
dec
pop
sub
pop
adc
imul
cmp
fnstcw
xor
std
fmull
mov
or
dec
jbe
test
xchg
sub
hlt
dec
testb
jge
lcall
inc
add
pop
je
ja
bound
dec
cmpl
fwait
mov
cli
jae
pop
ror
jmp
imul
xchg
mov
out
mov
loop
outsl
lret
loopne
pop
lods
out
xchg
mov
sbb
dec
test
mov
dec
or
sub
sub
pop
sub
jne
imul
adc
lcall
jle
roll
out
iret
push
js
cltd
leave
push
and
outsb
testl
jae
movsl
cmp
outsl
stos
mov
addr16
cmpsl
pop
aad
fistl
test
or
and
pop
shll
stos
and
mov
add
and
fwait
stos
push
fdivr
aaa
push
dec
jle
and
xchg
cltd
inc
sbb
ljmp
jp
sub
mov
adc
lret
aas
push
push
mov
loop
mov
jno
call
mov
cs
and
mov
stc
mov
js
adc
and
add
push
int3
enter
dec
push
push
mov
sahf
repz
scas
fcoml
lea
loop
std
push
lcall
stc
xchg
xor
cmp
rcrb
xor
push
push
add
jno
insb
sub
fbstp
pop
jb
sbb
push
jmp
pop
cmp
cmp
roll
jae
pop
inc
push
mov
add
cltd
popl
addb
and
jne
mov
or
add
xchg
pop
test
xor
repnz
enter
mov
daa
push
xor
repz
mov
andb
cmpsb
int3
pop
mov
in
dec
cmovbe
insl
ja
cmpsb
inc
subb
lea
cs
jno
xchg
or
sub
fistpll
sbb
stc
add
outsb
clc
mov
jnp
fildl
pop
mov
and
or
jb
popa
mov
lcall
arpl
loopne
push
push
fwait
je
jnp
cmp
dec
sti
sbb
and
xor
stc
sbb
adc
fsubs
dec
repnz
test
sbb
xor
mov
inc
rol
stos
hlt
fs
xor
enter
faddl
inc
or
outsw
movsb
and
push
lahf
push
xchg
pop
lds
push
aaa
stos
jl
sbb
lock
mov
int
cmpsl
addr16
sti
inc
push
adc
sbb
cwtl
hlt
pop
push
mov
scas
pop
mov
pop
repnz
in
add
lock
xlat
sub
scas
push
xchg
movsb
fwait
mov
cmp
daa
aad
in
ljmp
daa
or
mov
mov
dec
mov
loope
inc
sbb
jb
push
xor
arpl
ret
jp
pop
xchg
adc
lahf
fcompl
mov
mov
xlat
dec
sub
jecxz
imul
repz
ss
xor
sbb
inc
adc
repnz
push
xchg
call
addr16
and
mov
cmp
hlt
sub
pop
jge
addb
or
inc
call
push
or
mov
or
cli
xor
push
adc
pop
test
pusha
leave
fstps
push
mov
mov
mov
and
fwait
imull
xor
mov
jg
inc
lahf
add
jge
cmp
sbb
adc
inc
inc
jmp
add
push
xchg
or
xchg
mov
test
icebp
gs
ss
test
xor
out
inc
in
iret
push
flds
and
cmpl
int
mov
rcr
mov
daa
imul
mov
add
xchg
push
roll
sub
adc
outsl
movsl
stos
bswap
movsl
sbb
fnstenv
xchg
repz
dec
cld
mov
out
and
add
mov
and
fildll
sub
mov
pop
mov
and
shl
xchg
push
mov
lret
test
lods
testb
mov
imulb
in
aam
das
sub
lods
xchg
mov
add
and
sbb
hlt
arpl
int3
scas
call
test
cmpps
aas
mov
push
pop
je
mov
pop
and
add
jo
sub
push
pop
imulb
push
in
aas
test
lods
push
pop
addr16
mov
inc
cmpsl
scas
popf
mov
pop
mov
inc
insl
test
cmp
xor
push
push
or
std
pop
push
das
lods
jbe
push
mov
sub
pop
sbb
sub
push
sti
jmp
sbb
cld
loopne
mov
test
aam
je
adc
ret
int
jp
pusha
decl
add
xchg
xchg
scas
test
adc
sub
sahf
mov
sar
xchg
mov
xchg
xchg
xor
and
cmp
fnstenv
or
fidivs
psubsb
aaa
mov
xlat
fldl2e
push
lds
push
adc
ret
je
fdivr
test
dec
aad
cwtl
push
and
fisubrs
dec
or
bound
pop
push
mov
test
rcr
pushf
pop
shl
xchg
lods
sbb
loopne
cs
inc
mov
test
cmpsb
xor
xchg
outsb
xchg
out
pop
cmpsl
pop
neg
add
pusha
jmp
push
add
jecxz
sti
dec
push
xor
fsubs
test
or
inc
lds
sbb
adc
in
test
sub
pushf
cmp
dec
lcall
xor
pop
mov
fsubrl
sahf
aas
xchg
mov
mov
dec
roll
insb
test
mov
xor
sbb
dec
add
pop
dec
xchg
cmp
cld
xchg
jo
movsl
js
dec
cmp
ljmp
es
xlat
cmc
cmp
inc
adc
scas
jmp
lret
cmp
loop
inc
cmpsb
mov
add
daa
mov
fs
addl
dec
test
shlb
and
pop
cmp
or
push
xchg
mov
xor
mov
mov
mov
push
hlt
sub
sbb
sti
mov
push
xchg
cs
add
xor
mov
jmp
pop
stc
testb
pop
or
lods
push
inc
rol
movb
or
cmp
push
adc
inc
cmp
in
ss
adc
xchg
ficoms
jnp
test
je
jl
lods
sub
jae
fdivrl
pop
jl
aam
pushf
and
xor
push
mov
mov
in
or
aam
push
fldcw
lret
jne
js
inc
cs
push
cmpsb
decl
add
dec
xchg
push
daa
and
cwtl
mov
jbe
repz
mov
jmp
pop
in
andps
xor
push
lods
xor
pop
popa
inc
rolb
push
jbe
ret
push
aaa
jl
mov
push
lods
and
sbb
in
aam
negb
mov
mov
sub
push
xor
mov
test
lahf
jl
dec
sahf
movsl
fwait
cmc
into
cmp
stos
lock
push
addr16
mov
push
test
or
adc
faddl
shll
mov
mov
loopne
imul
andb
sub
add
cltd
test
bound
pop
scas
cli
test
cmp
pop
sub
pop
in
xor
insl
sub
jno
aaa
jl
sbb
mov
nop
dec
jnp
testb
xchg
xchg
sbb
popf
mov
jl
insb
notb
xchg
call
xchg
in
jecxz
cmp
xor
add
outsb
push
jmp
popa
cwtl
imul
dec
dec
scas
inc
lcall
add
shrb
cmp
adc
xor
nop
sahf
push
jmp
lahf
imul
mov
std
arpl
xor
or
gs
pop
jbe
mov
mov
shl
sbb
pushf
loopne
popa
pushf
sbb
cmp
dec
fst
out
lret
bound
push
mov
push
xchg
sbb
fcoml
xchg
lret
push
pop
lock
inc
aaa
pusha
jb
push
sub
mov
xchg
xchg
clc
ret
mov
in
out
in
cmc
cmp
sub
add
sbb
push
sbb
jecxz
ds
fmul
inc
add
sbb
add
ds
sub
xchg
daa
mov
les
adc
testl
jae
lock
mov
mov
mov
inc
and
push
pop
imul
das
fsubl
fisubrs
lods
in
push
jp
pop
mov
je
in
ret
ja
jle
mov
dec
jp
sbb
sub
jo
rorl
jb
mov
add
sbb
push
add
jae
or
or
dec
cltd
sbb
shll
scas
out
inc
daa
lcall
jns
or
sbb
push
fcmove
outsl
out
fldl
jae
pop
dec
sub
addr16
rcll
xchg
mov
jmp
xchg
mov
rorb
lcall
xor
loop
inc
pop
lcall
iret
inc
ja
imul
pop
bound
std
pushf
outsl
movsl
lret
inc
loop
filds
xor
pop
xchg
dec
mov
repz
aas
push
nop
jae
into
lret
aas
push
or
cs
mov
pop
loope
pusha
add
push
cmp
jle
ss
jno
jle
cs
lods
imul
push
cmp
cmp
xlat
jno
push
push
sti
out
hlt
ss
sarb
loop
push
int
rcrl
push
jb
jbe
jl
xorb
ror
xor
mov
lods
xlat
push
pushf
mov
mov
sub
xchg
add
popa
mov
pop
jbe
movsb
pop
push
into
sbb
xchg
les
movsl
js
jnp
sbb
sbb
sbb
repnz
lahf
in
into
ret
sbb
mov
xchg
pusha
or
sti
daa
xchg
bound
or
filds
and
and
inc
les
dec
sbb
pop
std
dec
cmpsb
pop
xchg
dec
sar
inc
cwtl
fldcw
out
ret
daa
loopne
sbb
arpl
in
shl
fiadds
inc
mov
rcr
push
sbb
inc
add
xlat
mov
pop
fs
jno
and
mov
addr16
xor
ljmp
insb
jmp
ljmp
adc
mov
jb
js
test
adc
jmp
sbb
mov
xor
pop
das
mov
movsb
pop
arpl
add
shrl
push
imul
les
shl
stc
xchg
inc
pop
or
cltd
pop
ja
and
or
mov
out
and
int3
mov
imul
je
add
jns
testb
mov
nop
xchg
loopne
stos
movsb
xchg
lods
ret
lds
mov
nop
xor
cmpsb
add
inc
cld
xor
xor
stc
push
push
sub
push
sub
jne
xor
loopne
dec
push
loopne
mov
inc
gs
scas
lret
xchg
mov
popl
sub
enter
outsb
xlat
mov
stos
sub
rcll
pop
into
test
and
ja
cltd
cmp
loop
mov
mov
repnz
fnstcw
jmp
mov
dec
fsubs
inc
inc
insl
xor
jae
jge
cmp
movsb
shll
pushf
jae
mov
jmp
and
js
lret
or
js
sub
inc
cmp
mov
fiadds
pop
sub
loope
mov
jecxz
dec
insl
popa
push
pushf
int3
mov
loope
dec
scas
stc
jg
loopne
dec
mov
mov
pop
js
sbb
movsl
mov
cmp
mov
jno
inc
pop
xor
xor
iret
hlt
mov
adc
std
inc
iret
push
out
sbb
mov
adc
jno
pusha
fcoml
iret
sub
xchg
sub
test
enter
xchg
mov
into
jnp
ss
dec
and
jl
cltd
mov
imul
std
jecxz
lret
rol
xor
repnz
pop
and
adc
mov
cmp
lcall
ds
fcmovnu
fsubr
push
mov
pushf
sti
mov
sbb
je
stos
push
les
pop
stc
mov
pop
enter
mov
nop
lea
arpl
das
es
xor
mov
fstps
lea
dec
cmp
adc
repnz
xor
inc
push
sub
pop
jecxz
imul
xchg
mov
jnp
or
lods
ret
loopne
sub
divb
ljmp
mov
data16
dec
stos
mov
into
nop
sbb
ja
bound
push
in
decb
inc
fidivrs
and
cld
shrl
push
pushf
gs
out
mov
sbb
cmpsb
fwait
dec
xchg
lcall
cs
dec
dec
sub
js
pop
rorb
fdivrs
fwait
int
ljmp
insl
pop
push
dec
and
ja
outsl
and
int3
inc
xchg
jmp
lds
shrb
or
pushf
ljmp
enter
cmp
ds
mov
mov
int3
cmp
loop
pusha
jne
icebp
fisttpl
dec
out
inc
scas
push
push
xor
cmc
in
rcl
mov
in
push
sbb
pop
sbb
ds
lods
push
loop
sub
in
mov
cmp
cmp
mov
cmpsl
jnp
ret
xchg
and
inc
xchg
or
jecxz
and
fcomps
pop
push
pop
mov
sbb
sti
adcb
jns
push
xchg
dec
dec
or
or
fstpl
unpckhps
aad
mov
insb
jg
mov
subl
lret
subb
fidivl
xchg
lcall
push
sub
jns
or
int3
loope
int3
shll
pop
add
cmc
es
loop
iret
xor
mov
sub
or
enter
mov
pop
aaa
xchg
addr16
inc
outsb
pop
add
pop
cmpsl
jbe
or
xor
add
je
cwtl
adc
pop
int3
gs
mov
pop
lret
push
and
flds
sub
add
test
out
pusha
dec
out
push
cmp
int
ds
insl
jae
jle
jne
mov
cwtl
xor
jmp
inc
test
sub
mov
enter
mov
movsl
or
cs
push
lret
movsb
dec
sahf
movsl
adc
stos
and
sub
es
int3
sub
adc
and
aad
sbb
add
adc
scas
scas
pop
xor
mov
daa
xorl
and
das
sub
stc
stos
and
movsl
icebp
jae
fs
dec
ja
mov
sub
test
out
or
imul
push
adc
jle
je
pop
fbld
sbb
cmp
sbb
xchg
pop
push
add
lcall
outsl
inc
aad
mov
xor
inc
icebp
in
cmp
xlat
aam
pop
push
pop
orb
subb
dec
jae
or
adc
jge
daa
jbe
test
imul
mov
dec
or
stos
enter
and
cwtl
mov
mov
or
dec
daa
ret
std
fs
push
pop
imul
mov
lods
jl
mov
sub
lahf
cltd
xchg
rcl
mov
cld
mov
mov
jle
js
loop
sahf
clc
int
outsb
lret
jb
enter
dec
jg
cld
adc
aam
jns
test
aaa
xor
jge
sub
sub
mov
jns
fmull
mov
mov
push
xor
sub
pop
push
aad
xchg
jmp
std
mov
hlt
loopne
add
jbe
fidivrs
fists
loope
mov
push
sub
sbb
in
lret
sub
mov
jle
stos
add
popa
nop
jg
cmp
hlt
stos
sbb
mov
adc
imul
jecxz
pop
inc
data16
mov
lods
mov
adc
or
sbb
sub
inc
inc
adc
cmpsl
push
fcmovnb
push
call
test
cltd
mov
sub
mov
aas
mov
jbe
dec
popw
stos
addb
das
jb
mov
fisubrs
sbb
jge
xchg
mov
mov
mov
cld
loopne
int
push
lcall
cmp
mov
icebp
stos
pusha
jge
lret
sbbb
lret
ja
in
mov
and
std
push
cwtl
pop
dec
mov
pop
out
lock
dec
mov
lcall
popa
push
sbb
cmp
adc
mov
sub
lods
dec
mov
movsl
pop
sub
sahf
dec
xlat
pop
or
test
mov
gs
xchg
mov
cmpb
in
pop
inc
mov
jp
fisttpll
mov
popa
pop
push
adc
cs
jae
jb
xchg
ljmp
or
jmp
sbb
cs
adc
adc
dec
cmp
mov
or
and
add
pop
mov
test
xor
mov
movsl
shlb
cli
out
sub
mov
mov
loopnew
imul
rcrl
dec
push
mov
aaa
sub
aad
out
rolb
les
lea
iret
pusha
and
insl
dec
and
xor
pushf
std
push
loop
xor
pusha
jnp
xchg
sti
mov
push
adc
add
out
dec
pop
test
cld
sub
cmp
jg
fnstcw
leave
sar
rcl
jbe
adc
loop
xlat
pop
test
push
into
cmpsl
sbb
dec
into
fucom
ret
stc
adc
test
popa
mul
das
xchg
jle
mov
arpl
pop
mov
sub
ds
sbb
cltd
lahf
popf
or
jmp
mov
mov
jno
adc
outsb
out
arpl
enter
mov
sbb
add
sub
dec
or
dec
cwtl
nop
pop
mov
push
scas
inc
add
addr16
add
lcall
ja
xor
or
jle
aam
mov
cmpsl
push
xor
add
sub
or
dec
rclb
mov
pop
sahf
enter
sbb
and
sbb
in
pop
dec
mov
pop
inc
cmp
loope
loope
scas
jb
fidivrl
insb
popl
pop
bound
mov
pop
dec
test
sti
dec
je
dec
addb
inc
ljmp
dec
pop
jne
mov
cmpsb
das
sbb
addr16
pushf
sti
xor
out
out
es
or
mov
inc
cwtl
jnp
mov
jae
aam
or
out
mov
sbb
push
jg
cmc
rcll
popf
inc
jo
xchg
sbb
mov
and
push
insb
shlb
aas
movsl
aas
mov
sbb
adc
insb
ds
xchg
test
cmp
dec
test
out
lret
dec
mov
std
dec
sub
xor
cmp
stos
ja
popl
adc
inc
xor
and
and
dec
mov
xor
sub
add
daa
repnz
fistl
nop
maxps
pop
scas
int3
fbstp
testb
mov
mov
popa
ret
dec
adc
push
fcmovu
inc
mov
in
shlb
aas
outsb
sbb
xchg
dec
inc
push
or
push
ljmp
subl
movsb
test
cwtl
cmpsl
inc
ret
sub
cvttps2pi
fdivrs
pop
jne
or
ja
es
mov
inc
out
mov
mov
dec
es
or
call
sub
or
sahf
xor
cmp
xchg
ss
mov
push
xor
xlat
xchg
out
mov
inc
fbstp
je
ds
sahf
sub
lret
jmp
push
scas
stos
pop
pop
push
gs
inc
sbb
add
jno
pop
repz
adc
notb
jno
popl
pop
mov
push
into
push
loopne
dec
lods
in
fmull
inc
test
test
rclb
inc
add
mov
subb
shlb
test
push
leave
mov
mov
int3
call
jmp
pop
incl
nop
fcomip
xor
push
lods
test
std
push
int
sub
icebp
aad
mov
adc
imul
cmp
out
adc
pop
mov
mov
cmp
sub
lret
icebp
idivl
mulb
das
sub
xor
aaa
popf
pushf
int
inc
movsl
pop
pusha
test
push
dec
in
stos
rcr
enter
jl
xor
fisttpl
pop
ljmp
xor
jne
sub
cwtl
sub
add
xchg
mov
pop
cmp
into
pop
dec
jb
push
inc
push
iret
push
fucom
out
adc
dec
enter
xchg
push
sub
movsl
jmp
dec
mov
stos
jns
sbb
cmc
mov
or
sbb
mov
dec
add
mov
fiaddl
movsl
cmp
sbb
push
cli
insl
add
ss
xor
mov
xor
into
adc
fdivp
pop
cltd
mov
imul
sub
sbb
sub
jae
pushf
add
pop
mov
lock
stos
pop
inc
push
cmp
hlt
imul
out
and
or
andb
iret
call
pop
insb
daa
inc
ror
jmp
cltd
xchg
or
mov
jge
les
std
mov
cmp
mov
xchg
mov
sarb
add
fldcw
movsb
out
push
lods
push
dec
push
ljmp
leave
xor
xchg
cwtl
and
jo
insl
adc
push
lret
mov
dec
xor
test
jl
ret
and
jo
movsb
nop
daa
fs
mov
lods
push
int3
pop
jnp
ljmp
std
adcb
jnp
in
push
aaa
test
add
outsl
sub
aaa
pop
xchg
mov
mov
and
cmp
fucomip
xchg
int3
mov
test
push
pop
and
sbb
and
or
repz
sbb
je
dec
outsb
push
flds
pop
mov
or
pushf
das
lret
mov
jecxz
cmp
scas
inc
icebp
sbb
cltd
repz
lods
dec
or
jns
orb
mov
or
pop
mov
cmpsb
in
mov
xorb
les
cmpsb
and
dec
in
add
test
dec
mov
repz
push
nop
pop
dec
and
mov
test
sbb
pop
test
jge
dec
aas
jae
push
sahf
mov
pusha
xor
sub
jge
iret
or
hlt
xchg
jmp
mov
add
xchg
and
jmp
push
pop
add
clc
cmpsb
pop
add
and
adc
ds
xchg
ss
or
in
data16
cltd
cli
cltd
sub
or
js
xlat
add
jle
cmc
jg
mov
xor
fimuls
lret
lods
movsl
xchg
jbe
in
xor
les
in
dec
fs
pop
in
pop
or
cmpsl
out
xchg
rclb
xor
jecxz
mov
mov
and
imul
mov
cmp
test
sub
xor
jmp
js
div
fmuls
fwait
add
lret
shlb
pop
xchg
sbbl
cmpb
mov
inc
popf
fdivp
outsb
sbb
movl
vmovaps
push
jbe
shrl
cmc
sub
repz
mov
stc
rorb
inc
cwtl
inc
fnstsw
xor
dec
pushf
or
sub
adc
cmpsb
idiv
dec
jns
rclb
aaa
dec
fwait
pop
or
testb
lea
push
jmp
push
cmp
hlt
inc
jle
hlt
mov
pushf
fiadds
mov
incb
je
dec
xchg
shll
sbb
sub
adc
sub
pop
xor
push
sbb
mov
outsb
push
and
arpl
movsb
dec
fcoml
push
mov
sahf
dec
xor
stos
sbb
dec
jne
stc
push
dec
lods
cs
fs
lock
dec
call
sahf
pop
inc
mov
int3
cmp
sbb
jp
push
jg
cmp
sbb
mov
lods
call
pop
adc
notb
sbb
mov
aad
loope
and
fiadds
jo
jg
push
cmp
jnp
mov
int
xchg
add
xor
mov
outsb
adc
adc
movsl
test
mov
add
cmp
jns
inc
inc
sbb
push
aaa
cli
jecxz
dec
pop
stc
add
xchg
mov
call
js
rcll
jle
mov
mov
jne
aas
mov
jg
pop
xchg
stc
rcll
mov
imulb
sbb
mov
movsb
sbb
sbb
or
sub
ret
mov
mov
adc
xor
test
ret
int3
jp
mov
or
dec
or
inc
aam
mov
add
sub
fldt
cld
cmp
sub
lahf
test
mov
ret
inc
frstor
mov
inc
sahf
and
xor
repnz
mov
in
dec
mov
push
ret
sbb
adc
icebp
lock
jnp
inc
or
daa
lods
jge
clc
cli
mov
and
icebp
lods
dec
cmp
scas
pop
xchg
in
aaa
int
enter
gs
adc
in
sbb
add
inc
mov
jecxz
and
xor
jge
cmp
fldt
add
lock
cs
sbb
jnp
xor
add
insl
push
icebp
scas
call
jle
and
mov
cmp
dec
jae
in
loope
jns
and
iret
inc
pop
jno
or
mov
adc
sbb
daa
adc
sbb
and
dec
cmp
cmc
sub
in
mov
sub
jno
test
fsub
ret
out
aaa
jne
ret
add
repnz
jl
mov
mov
push
sbbb
les
in
jb
call
cmp
je
ljmp
movsl
daa
iret
jle
mov
mov
ja
fmul
xchg
xchg
dec
push
pop
adc
xor
inc
xchg
cmp
aaa
sub
data16
mov
loopne
popa
scas
pop
push
gs
dec
shll
pop
jp
arpl
pushf
ljmp
xchg
lahf
xchg
cltd
sub
dec
stc
inc
mov
stc
mov
loope
test
jecxz
ss
hlt
lods
push
test
mov
inc
fbstp
or
add
xor
push
pop
scas
cli
stos
push
xlat
in
pmovmskb
inc
lods
ret
hlt
xorl
es
push
out
cmpsl
and
pop
mov
pusha
in
lea
enter
xchg
pop
adc
xor
inc
rclb
aad
stos
xchg
fsubs
leave
ret
cmpl
lret
lock
int
jl
xchg
cmpsb
movsl
push
outsl
iret
in
mov
dec
push
andb
cwtl
mov
bound
movsb
test
pop
test
idivl
repnz
sub
leave
and
popa
cli
xchg
mov
lcall
jo
sbb
call
dec
pushl
out
cli
mov
imul
repz
je
rorl
popf
loopne
repz
icebp
sti
stc
stc
jp
mov
mov
lret
je
sbb
inc
adc
in
cmp
pushf
lcall
mov
inc
sar
or
nop
mov
lea
sub
shl
or
inc
mov
stos
cmc
inc
mov
in
addr16
bound
sub
sub
shlb
hlt
mov
mov
cmp
or
add
pop
jbe
push
rorb
pop
adcb
or
dec
xchg
imul
and
in
leave
js
sti
mov
cmp
sub
imul
adc
rol
jbe
push
and
pop
adc
push
push
cli
pop
cli
adc
sbb
insb
repz
cmpsl
into
mov
push
nop
rorl
ss
cmpsl
xchg
push
js
aad
inc
mov
push
popa
pop
mov
sbb
cmp
popf
mov
xchg
punpckldq
inc
cmp
xchg
dec
xchg
mov
mov
arpl
in
cmc
pop
mov
cwtl
pop
mov
shll
repz
lock
adc
imul
sbb
mov
xor
aaa
push
test
dec
xchg
pushf
je
xchg
clc
mov
pop
xchg
mov
or
out
in
cmp
sbb
test
and
jnp
cli
aad
xlat
mov
xchg
mov
scas
adc
push
out
adc
fs
or
sub
cli
mov
lea
mov
mov
xor
insb
push
aam
xchg
xchg
jmp
pusha
rcrb
jg
sbb
das
lods
sbb
mov
push
loopne
push
xor
hlt
pop
inc
aam
add
arpl
mov
xor
in
adc
mov
sbb
push
mov
mov
lea
daa
inc
inc
inc
push
mov
xchg
in
xchg
sbb
idivb
lcall
jle
lcall
mov
mov
dec
push
fmul
sbb
jae
subb
xchg
cmp
dec
push
lahf
lods
sahf
dec
in
aad
popf
out
sub
mov
or
sbb
mov
push
adc
sbb
lea
push
mov
lds
or
cmpsl
lret
outsb
mov
lcall
divb
in
out
cmc
mov
dec
stos
popf
mov
test
outsl
lods
cld
cs
mov
loopne
pusha
pop
pop
popa
enter
add
out
movsl
ljmp
test
idivb
xor
fwait
add
and
ljmp
inc
cmp
iret
inc
cltd
lahf
mov
xchg
fdivl
fwait
inc
out
jmp
mov
add
shll
jecxz
and
hlt
jmp
daa
xchg
movsl
outsl
sub
test
in
mov
loope
pushf
xor
cmpsl
mov
fdivs
mov
mov
jl
jno
sub
jle
lods
sbb
mov
pop
lods
outsb
out
scas
into
push
pop
pop
cmpsb
sub
fstpl
lcall
inc
adc
test
testl
jbe
ror
cld
bound
mov
imul
mov
xchg
jle
shll
aaa
xor
dec
pop
leave
adc
lcall
dec
shll
and
sub
mov
js
lds
and
aaa
test
or
loopne
adc
ret
mov
sarl
or
inc
pushf
jp
sbb
dec
push
pop
inc
sarb
aas
dec
xchg
jge
out
mov
sbb
sbb
nop
sbb
dec
stos
in
push
xchg
mov
fwait
inc
sub
adc
test
adcl
dec
add
sub
and
lahf
mov
in
std
xchg
imul
mov
sti
sub
adc
jns
push
fidivrl
cmpsb
dec
dec
adc
inc
mov
outsl
inc
fwait
jns
xor
aad
lcall
push
bound
push
xor
notl
in
cld
push
xor
xor
lods
mov
mov
mov
mov
jle
mov
sbb
cmc
push
fisttps
loopne
fwait
lahf
pop
jne
jo
push
mov
sahf
scas
mov
jb
mov
xor
cmp
sbb
cmp
and
andl
or
in
les
pushf
repz
loopne
mov
lret
mov
testl
movb
je
xor
mov
and
cmpsb
jo
loopne
adc
jae
hlt
mov
inc
jns
dec
dec
xor
stos
imul
adc
mov
nop
js
dec
lods
lahf
daa
xor
pop
mov
mov
pushf
adc
movsl
jp
test
push
mov
jo
flds
dec
push
xor
cs
xor
mov
dec
push
shll
or
jns
adc
jg
xor
push
xlat
stos
cwtl
add
xor
sbbl
xlat
flds
jne
repnz
insl
sar
movsb
not
sarb
lock
push
xchg
sub
lods
push
bswap
and
push
loopne
pop
mov
es
clc
insl
data16
cmpsl
mov
pushf
pop
dec
out
push
pop
nop
popf
pop
dec
lock
out
cltd
cmp
mov
neg
jge
inc
xchg
cwtl
adcl
negl
cmp
loopne
loopne
mov
or
leave
lods
arpl
ds
std
mov
sbb
jo
lcall
nop
in
imul
jae
mov
mov
jecxz
in
cmp
addl
stos
fisubs
jg
cmp
xor
out
cmp
movl
jns
std
adc
jl
std
mov
sbb
mov
mov
xchg
hlt
inc
insl
inc
sub
test
mov
jg
xchg
mov
push
mov
imull
sbb
pop
popa
lds
push
ror
jb
add
repnz
fadds
shll
dec
xchg
jmp
in
inc
out
les
mov
dec
aam
mov
fsubrp
push
int3
jns
push
shl
inc
dec
mov
mov
outsb
xchg
int3
mov
jns
mov
jp
addr16
xor
dec
push
jne
fldl
sbb
mov
insb
loop
jmp
mov
cmp
mov
mov
rcrl
movsl
rolb
push
aad
cli
adc
push
negl
xchg
leave
insl
adc
out
adc
jne
fs
xchg
lock
xor
adc
call
movsb
popa
cmc
push
push
add
cld
pop
out
scas
roll
incl
sahf
push
xor
loope
aam
sbb
iret
test
adc
xchg
xchg
inc
pop
dec
fdivrs
dec
aad
das
add
jmp
vphaddbw
movsl
mov
shll
mov
xor
cmp
push
cmpsl
jne
mov
jge
test
cli
add
sbb
ficoml
iret
inc
xchg
and
dec
dec
add
aaa
flds
outsb
and
jmp
insb
sbb
xor
adc
lods
sarb
mov
aam
das
arpl
jmp
or
aaa
arpl
push
inc
mov
data16
sub
ss
mov
push
sbb
dec
testl
pop
imul
negl
cli
arpl
add
out
lcall
mov
cmc
fimull
xchg
mov
jmp
lahf
mov
adc
enter
push
repz
sub
xor
xchg
in
shl
sbbb
repnz
inc
imul
dec
pop
mov
inc
hlt
scas
gs
call
aad
jge
mov
int
call
add
insl
dec
xchg
orb
sub
mov
inc
jmp
push
pusha
aas
pop
pop
or
adc
lret
test
adc
cmpsl
sti
dec
das
cmp
imul
cmp
xchg
fwait
pop
push
sarl
dec
icebp
loope
push
push
and
sub
pop
js
les
push
xor
cmp
es
jno
sbb
cmp
mov
in
xor
loope
rcl
mov
dec
jno
push
jecxz
inc
jb
icebp
adc
sbb
pushf
das
sub
mov
scas
sub
mov
jg
je
out
mull
sarb
inc
mov
mov
jb
push
push
and
or
stc
imul
pop
mov
push
mov
mov
imul
sub
stos
lret
mov
push
push
xchg
hlt
jl
dec
sub
add
mov
pop
int
in
push
popa
iret
in
xor
loopne
xor
pop
scas
lcall
pop
test
dec
adc
jo
cwtl
jno
push
into
pop
negl
add
pushf
or
mov
jl
shlb
push
mov
mov
ljmp
adc
mov
add
out
bound
popf
lds
loope
cmp
jmp
test
mov
dec
add
push
stos
add
jns
jns
orb
sub
mov
nop
pushf
in
jns
sub
or
popl
pop
pop
inc
jne
cmpb
push
and
mov
and
mov
mov
mov
push
dec
out
lock
adc
in
ss
mov
pop
popa
scas
aad
insb
lods
push
mov
dec
and
adc
lods
push
dec
mov
aad
in
mov
mov
pop
inc
and
iret
fcomps
aad
xchg
lods
mov
xchg
push
dec
fistps
fdivrl
scas
mov
sti
cltd
jo
add
jno
enter
and
sbb
inc
int3
or
push
inc
imul
xchg
mov
jb
repz
sub
loope
nop
jno
jp
sub
ja
cli
lods
and
enter
stos
fisubrs
mov
movsl
loope
mov
inc
add
pusha
mov
dec
insl
test
mov
mov
inc
push
movb
out
lret
in
scas
lahf
popf
loopne
push
jg
dec
outsl
xchg
aam
aas
les
push
push
movsb
jns
mov
lods
fs
xchg
jo
shll
mov
inc
jge
inc
mov
dec
shlb
and
xchg
mov
mov
xor
mov
addb
xchg
mov
sahf
xchg
int3
movsl
arpl
inc
rclb
inc
mov
pop
outsl
je
cwtl
push
mov
pop
sahf
das
xlat
pusha
adc
add
adc
xchg
dec
sarb
mov
mov
sub
imul
les
repz
inc
and
dec
sahf
xchg
mov
in
lret
mov
in
add
push
mov
mov
xchg
mov
daa
ja
push
orb
pop
xchg
mov
or
int3
fidivs
xchg
cmp
add
pop
push
loop
mov
cltd
xchg
xchg
jecxz
insl
pop
mov
sbb
or
push
enter
mov
jmp
aad
push
sti
jne
xchg
sarb
mov
cld
xor
dec
inc
or
hlt
mov
pop
xchg
dec
push
es
lcall
jmp
xor
xor
movsl
push
jae
in
xchg
imul
shll
das
inc
cmpb
add
and
xor
jge
adc
mov
inc
push
hlt
push
adc
fidivrs
fidivs
scas
les
xchg
arpl
cmp
xor
pop
mov
mov
and
or
clc
movsb
push
arpl
mov
jb
pusha
mov
cmpsl
or
addr16
in
cld
jl
leave
cmp
in
test
sbb
add
mov
in
inc
arpl
addr16
mov
int3
incl
mov
mov
pop
in
mov
or
out
sarb
mov
dec
lcall
sub
sbb
xor
jmp
mov
jae
addb
sti
das
out
dec
ja
ret
push
pop
loop
cmpl
icebp
retw
mov
pop
icebp
xchg
xor
nop
clc
inc
xchg
push
or
fwait
adcl
push
adc
inc
pop
repnz
sbb
xchg
leave
push
mov
movsb
mov
iret
iret
sub
imul
pop
jp
pop
add
outsb
dec
outsl
pop
add
imul
leave
sbb
cmpsl
cmp
cmc
pop
mov
cld
pop
cmp
xchg
ss
add
call
jmp
cld
lds
insl
push
repz
das
shr
mov
rcrb
xorb
pop
dec
jl
nop
xchg
mov
mov
sbb
xchg
jge
mov
rolb
movsl
enter
and
xor
sub
sub
movsb
jns
pop
and
mov
ss
ss
cmpsb
pop
fisubrs
jg
insl
lods
cmp
sbb
aad
aad
in
dec
dec
rcrl
ret
fimull
or
adc
out
jl
pop
mov
pop
xchg
lock
pop
orb
into
daa
mov
jns
dec
lret
jo
inc
out
push
pop
dec
nop
or
or
fstps
imul
dec
clc
ja
movsl
push
leave
inc
and
addb
dec
in
jne
mov
xor
div
sub
push
cmp
stos
jle
repnz
aas
repz
cmpsb
cmp
and
inc
pop
jnp
loopne
or
fsub
ftst
push
lret
add
cwtl
dec
push
stos
sbb
fsubrl
inc
xchg
dec
push
mov
js
inc
xchg
jb
jg
adc
popa
jbe
jns
out
push
fnstcw
xchg
je
pop
addr16
pop
dec
out
outsl
in
addr16
into
lods
ret
pop
orl
jmp
inc
add
aas
mov
adc
out
int3
ljmp
aad
adc
add
daa
imul
fisubrs
les
sbb
ds
push
adc
hlt
cmp
movsb
loope
pop
dec
je
dec
sbb
cmp
mov
addr16
inc
test
adc
or
sub
inc
or
sar
and
fsubs
jb
into
aaa
scas
fidivrs
jle
xor
lods
js
jb
or
mov
jbe
jl
aad
popa
sub
outsl
push
ja
xor
adc
cmpsl
aaa
adc
lea
jno
sbb
lods
mov
pop
xor
jecxz
jmp
lds
shl
or
adc
and
and
sub
push
adc
and
push
push
mov
sub
test
jmp
into
xor
movsl
dec
and
enter
lret
mov
or
cwtl
dec
jae
push
dec
scas
pop
movsl
ffree
pop
insb
out
enter
pop
mov
pop
mov
xorl
mov
test
pop
out
xchg
push
enter
xor
aad
sub
icebp
pop
repz
lods
arpl
lahf
fs
lock
pop
out
sub
fstl
scas
adc
pop
sahf
push
cmp
push
mov
pop
jae,pt
out
jl
sub
test
xchg
fistps
loope
xchg
xor
jo
bound
leave
ljmp
xchg
fidivrs
mov
lahf
cmp
rorl
sti
sub
mov
in
mov
aam
jmp
pop
jb
xor
adc
push
and
jno
and
mov
out
jmp
sub
push
rcrb
fcompl
or
mov
or
ret
mov
dec
int
mov
push
mov
mov
xor
mov
xor
je
aam
jp
push
jae
mov
dec
mov
adc
fisttps
dec
sub
fwait
lahf
sahf
js
xchg
pop
dec
mov
out
adc
add
fs
ds
dec
repnz
hlt
stos
sar
dec
sbb
push
repnz
mov
test
adcl
cmp
enter
adc
into
stos
test
andl
push
pushf
pop
icebp
cmpsl
mov
mov
sbb
out
test
insl
daa
mov
repz
and
push
int
pop
ficompl
fdivr
xor
xor
sti
stos
out
mov
pushf
orb
and
test
call
popa
and
inc
cmp
addr16
faddl
jge
jle
lods
mov
subb
cmp
cmpsl
jle
hlt
ja
add
icebp
mov
pop
jle
push
lds
nop
shrb
hlt
sbb
aas
loop
nop
cwtl
imul
push
dec
cmp
fs
cmp
mov
cmpsl
xlat
mov
cld
push
test
lret
push
push
dec
adc
insl
lret
pop
je
mov
xchg
xor
inc
je
insl
ret
test
mov
ret
je
mov
inc
clc
dec
out
pop
pop
shlb
push
jecxz
sbb
loopne
or
pop
aam
jae
scas
in
mov
in
cmpsl
fwait
push
ss
dec
in
push
fistps
jl
jae
test
and
leave
scas
push
shll
loope
or
xor
push
or
fiaddl
test
and
add
adc
sub
sbb
mov
lret
icebp
fbstp
mov
push
jmp
mov
stos
xchg
xchg
jle
push
cmpsb
nop
and
inc
pop
test
mov
jmp
cs
cmp
andb
stos
insl
std
jne
in
aam
jl
ljmp
ljmp
ss
adc
lahf
negb
aas
mov
loop
inc
xchg
mov
xchg
push
sbb
ret
xorl
adc
lret
jg
xchg
push
sbb
inc
xor
or
pop
xchg
xchg
lcall
mov
adc
loopne
mov
sbb
call
faddl
mov
push
add
lahf
and
xorl
xor
cmp
ja
aas
js
ljmp
pop
shlb
and
hlt
iret
dec
pop
xor
lcall
adc
je
mov
and
popf
mov
mov
sub
mov
push
mov
jp
fimull
lret
mov
mov
je
xchg
aaa
push
xchg
rcrb
lea
mov
hlt
jno
mov
sbb
mov
sub
ret
xchg
and
add
push
andl
xchg
mov
cltd
and
lds
pop
pop
test
daa
testb
push
xor
xchg
push
xor
in
mov
sbb
sarb
push
stc
ja
cmp
inc
mov
repnz
test
pop
inc
lcall
call
mov
loope
mov
lods
loopne
data16
mov
add
rep
in
ror
push
cld
ja
jmp
inc
clc
mov
in
js
mov
or
cmc
out
inc
adc
xchg
inc
stos
cmpsl
push
push
aaa
mov
loop
mov
imull
dec
sbb
mov
inc
dec
ficoml
xchg
sti
push
pop
pop
test
mov
inc
jl
test
jbe
xor
in
jp
fldcw
les
push
push
sbb
jne
lea
or
sbb
sarl
mov
out
fistl
cmp
ja
xchg
clc
mov
xchg
mov
or
dec
aas
scas
mov
hlt
xchg
ffree
shrb
inc
and
pop
outsb
ret
ror
stc
insb
test
xchg
and
sbb
xchg
call
lret
in
mov
decl
sub
dec
sbb
xchg
pop
ret
inc
inc
inc
jmp
imul
pushf
mov
dec
int
arpl
addr16
scas
xor
hlt
xlat
stc
dec
jae
aam
pusha
ljmp
push
add
ds
xor
jmp
fdivrs
sub
inc
shrl
sub
push
movsl
mov
xor
and
jmp
or
out
vcvttpd2dq
pcmpgtd
arpl
sub
mov
pop
test
xchg
xchg
aas
push
push
lcall
incb
cmpsl
mov
adc
mov
mov
sahf
out
fsubs
test
aas
mov
and
dec
js
jmp
xchg
fucomi
stos
sarb
push
mov
push
repz
iret
sub
int3
dec
jle
js
nop
loope
sub
in
sbb
inc
mov
fs
push
jnp
ljmp
and
leave
dec
add
add
push
and
pop
add
daa
add
dec
jecxz
xor
fisubrl
mov
adc
inc
sti
sub
mov
pop
xor
and
sahf
jl
pop
fidivrs
leave
mov
cmp
in
pusha
push
js
fadds
test
inc
mov
push
push
inc
cmpsl
and
inc
adc
ljmp
cmp
mov
out
or
or
cwtl
popa
or
shl
pop
xchg
and
stc
leave
pop
lret
pop
add
cltd
add
dec
rcl
in
jb
cmp
mov
adc
jno
and
sbb
push
ljmp
mov
sti
push
shlb
insb
and
xchg
xchg
sbb
fmulp
add
xor
sub
outsl
dec
shl
outsl
divb
je
push
mov
in
hlt
cmpsb
inc
jns
add
or
scas
xchg
push
mov
lcall
push
push
jle
pushf
push
xchg
add
ficomps
inc
sbb
dec
out
iret
pop
mov
mov
sub
or
out
pop
repnz
cmpsb
shr
fdivp
or
pop
mov
push
xor
jge
lret
xchg
sbb
fmuls
ret
andl
jno
lock
cmp
stos
aas
mov
shlb
or
inc
les
cmpsl
in
inc
jmp
mov
sub
adc
fmulp
aad
das
cmp
push
cli
popa
cmp
mov
call
and
xchg
adc
lcall
stc
xor
cmpsl
ja
stos
insl
mov
add
push
mov
xchg
daa
pop
js
ds
ret
xchg
xchg
adc
cmpsl
inc
mov
bound
or
fldcw
loopne
ds
xchg
jae
mov
dec
and
jle
out
lods
test
pop
fwait
mov
or
adc
lods
and
scas
mov
iret
mov
dec
pop
push
adc
stos
out
sti
sbb
clc
lods
jl
mov
sbb
out
ja
sub
loop
sti
in
ja
jecxz
xchg
andb
xor
imulb
inc
cmpsl
es
cmpsl
scas
fdivrs
add
adc
mov
push
in
fstl
dec
mov
leave
mov
shll
xorl
mov
imul
dec
jecxz
jle
inc
sub
cmpsl
inc
jmp
xor
pushf
sbb
in
ds
pop
fmuls
pop
add
clc
inc
int3
xchg
leave
dec
push
lods
fs
and
sbb
adcb
dec
jno
inc
sub
push
ja
xchg
std
test
sub
lods
sar
rorl
pop
lods
daa
sub
pop
dec
lret
add
push
fdivrs
jmp
bound
dec
fcmovne
jae
xchg
lret
loope
mov
adc
lods
push
popa
mov
test
sbb
adc
ja
xchg
adc
xor
push
jns,pn
add
jno
mov
mov
push
and
inc
scas
cwtl
cltd
mov
ficomps
dec
into
dec
mov
mov
push
mov
rolb
dec
and
inc
mov
lods
xchg
cwtl
cs
rorb
aas
xor
cmp
xchg
movsl
filds
repz
stc
push
mov
imulb
loope
inc
cmpsl
cmc
aas
pop
aaa
xor
jl
lods
fisttpll
sarb
outsb
dec
pushf
xchg
xor
lcall
cwtl
xlat
pop
cmp
outsb
mov
dec
gs
mov
push
ficoml
scas
push
daa
adc
sti
repz
xor
adc
push
fstp
es
lahf
cwtl
mov
arpl
cmp
cmp
push
imul
dec
dec
mov
mov
enter
das
add
lods
push
ss
jge
ret
mov
pop
cmc
add
dec
xor
mov
daa
shl
fistpl
pusha
out
lret
mov
cmpsb
or
es
dec
clc
xor
xor
out
jle
push
xor
cltd
sbb
fsubs
js
adc
es
pop
cmp
inc
int
in
iret
xchg
insl
cli
bound
xchg
mov
sub
pop
and
lret
fs
and
inc
lods
adc
cmc
call
push
nop
inc
cmp
pusha
jmp
xor
xor
nop
cmpl
and
or
gs
jp
fsts
lods
add
inc
scas
incl
cwtl
cmp
jnp
jle
mov
nop
mov
mov
mov
mov
add
xor
mov
mov
mov
adc
jno
mov
shlb
jg
inc
dec
sarb
push
je
shrl
loope
jp
sub
frstor
imul
addl
sbb
rolb
mov
sub
daa
cld
out
push
cmpsl
cmp
es
sub
fdivs
cmp
lods
popf
addr16
cmpl
sbb
sub
fucomp
jne
inc
push
and
adc
lret
cs
or
dec
jnp
mov
xchg
jne
xor
sbb
popf
repz
cvtdq2ps
mov
out
push
cltd
adc
pop
adc
pop
movsl
enter
scas
repz
lds
cmpsl
enter
incl
adc
push
add
int3
sbb
push
mov
pop
cwtl
xor
dec
iret
mov
sti
divl
leave
movsl
rol
pusha
stc
std
sub
das
mov
sub
fwait
lods
mov
icebp
sbb
lahf
insl
xor
fbstp
add
xchg
mov
adc
lock
outsb
dec
jbe
iret
pop
sbb
cmp
cmp
or
cmpsl
stos
jle
je
popa
test
clc
xor
inc
jo
loope
es
scas
mov
dec
adc
enter
fiadds
dec
mov
lods
ja
inc
cs
add
mov
inc
sti
cwtl
jmp
imul
jecxz
aam
int
fcmovbe
jne
sarb
xchg
xchg
mov
cmpsl
and
fmuls
orb
movsb
xchg
je
ret
daa
xor
call
cmpsl
xchg
shlb
cmp
ret
sahf
dec
add
cmpb
push
lods
cli
insl
add
dec
add
mov
xor
add
lcall
fldcw
popf
adc
push
and
sub
aas
movsl
fwait
clc
sbb
ljmp
fs
pushf
push
cld
mov
jb
imul
adc
and
jl
sbb
pop
lock
iret
add
sbb
mov
jmp
ret
lds
push
xchg
xchg
std
xchg
leave
les
movsl
jno
adc
fisttpll
pop
sbb
pop
cmp
mov
mov
ds
lret
div
adc
sbbb
aam
cmpsl
adc
and
sbb
sub
sub
or
popf
inc
xorl
outsb
xorb
pusha
cs
test
addl
out
lods
test
adc
ja
clc
cmp
dec
mov
xor
sub
test
sbb
stos
inc
pop
aad
dec
xchg
sbb
or
js
cltd
mov
xlat
loopne
mov
andb
jae
xor
xchg
sarl
addr16
testb
pop
arpl
gs
incb
aam
sti
enter
aam
dec
push
out
sbb
movntq
sub
adcb
and
xchg
or
andb
enter
scas
pusha
test
xor
pcmpgtd
push
stos
xchg
cltd
xor
pop
addr16
xchg
push
mov
pop
cs
cmpsl
pop
jle
xor
xchg
js
sti
filds
rcll
inc
jmp
pop
imul
imul
out
ss
imul
pop
in
jne
mov
mov
mov
jmp
gs
sbb
push
jp
mov
sbb
sub
les
cmc
xchg
xchg
hlt
cmpsb
shl
sbbb
in
cli
ljmp
in
out
aas
adcl
lds
xchg
sub
xlat
xlat
rolb
popa
orl
inc
jo
lds
dec
arpl
sbb
out
sbb
and
xor
ss
icebp
pop
xchg
sub
shl
xchg
int
insb
pop
inc
scas
out
jbe
xor
pop
mov
adc
dec
and
popa
addr16
hlt
xchg
push
pop
into
sbb
mov
repnz
pop
ret
jns
mov
inc
dec
outsb
pushf
je
icebp
mov
jecxz
test
jp
pushl
mov
xor
gs
adc
dec
lds
es
mov
sub
daa
popf
adc
outsb
icebp
sbb
bound
stos
in
dec
xchg
mov
or
sbb
imul
adc
cli
loope
mov
shrl
add
imul
push
shrl
pushf
add
inc
scas
cmp
dec
or
stos
cmovle
pop
dec
imul
jp
fdivrp
fiaddl
mov
stos
shll
push
cmp
cli
mov
ljmp
into
popa
insl
subb
cltd
sbb
jl
rolb
in
lods
push
out
add
cmp
add
cmp
je
mov
sub
jmp
push
sub
sbbl
fs
jp
inc
mov
pop
inc
push
insb
jnp
inc
sub
lcall
add
mov
and
fstl
sub
pop
fisubrl
imulb
pop
push
inc
popa
aas
mov
pusha
sub
lret
shll
and
sub
icebp
shlb
xchg
inc
lcall
rolb
jbe
push
sbb
xor
scas
int
out
push
sub
xchg
push
ret
xlat
inc
shll
test
dec
add
push
pop
mov
fwait
xchg
push
aaa
fs
xchg
lea
sbbb
inc
inc
out
lahf
or
mov
scas
out
xchg
cmp
pop
or
clc
sub
fmull
dec
xlat
mov
adc
dec
out
cmp
in
or
stos
lahf
iret
out
or
stos
icebp
pop
dec
mov
out
push
scas
dec
cltd
hlt
dec
aam
xor
test
scas
jns
jae
mov
js
cmp
xchg
jo
int
add
xchg
adc
out
inc
xchg
movsb
inc
pop
popf
sbb
fnstcw
mov
xchg
jne
inc
aas
fdivrs
out
imul
mov
adc
mull
arpl
jbe
mov
inc
mov
out
push
aam
xchg
orb
and
lock
fcmovu
fcoml
dec
jg
notb
fld
int3
push
cmpsl
pop
mov
shrb
lds
sarb
push
test
inc
push
dec
rclb
jne
xor
pop
std
in
jge
and
fs
add
jne
loopne
mov
pop
pop
inc
fldl
lea
mov
leave
cmp
mov
aam
push
or
imul
test
lret
leave
sub
roll
nop
dec
scas
inc
adc
movsb
icebp
sub
int3
enter
popa
cmp
mov
orb
dec
out
xchg
push
pop
fwait
mov
push
int3
ret
jl
dec
aas
xchg
cmp
dec
fldenv
jns
mov
dec
add
aaa
jae
ljmp
jno
addb
lds
pop
inc
push
push
jge
sahf
dec
push
pusha
xor
push
push
je
scas
gs
adc
or
aad
push
sbb
and
aad
negb
lods
rcr
movsl
jl
adc
inc
sub
scas
pop
and
fimull
repnz
test
or
out
cld
lret
dec
lret
sbb
es
test
test
pop
adcl
fs
mov
or
pop
out
xchg
push
pop
fcoml
sub
enter
push
mov
sub
leave
ljmp
and
das
dec
sub
repz
rcr
dec
icebp
aam
and
mov
cli
sub
pop
inc
xchg
push
mov
ljmp
imull
cmp
rdmsr
arpl
cmc
inc
dec
mov
sub
or
lea
jecxz
mov
adc
rcll
jae
aam
icebp
push
push
and
mov
stc
or
sahf
mov
push
loop
add
add
push
push
xchg
fidivrl
loop
cs
jns
divb
mov
repnz
xlat
arpl
mov
mov
add
test
outsl
jl
push
xchg
mov
shrl
icebp
cmp
dec
stos
mov
push
dec
lods
adc
mov
aas
loope
sti
cmp
dec
push
ja
iret
adc
rcrb
xor
gs
nop
xchg
push
enter
push
pop
mov
dec
and
cmp
shlb
pusha
cld
imul
cmp
pop
cmp
xchg
arpl
and
mov
pop
mov
hlt
xor
mov
ja
cmp
add
in
repnz
rcrb
mov
xchg
jns
icebp
and
pop
ja
iret
add
popa
mov
mov
sub
inc
ja
negl
sub
cmpsb
sub
jo
iret
push
xlat
and
dec
and
add
hlt
ret
inc
aam
mov
add
mov
pop
ljmp
ds
call
pop
cmpl
stos
push
mov
xor
mov
test
xchg
lea
fmul
inc
pop
xchg
hlt
adc
call
rcrb
jg
and
cmp
jb
inc
mov
mov
mov
scas
pop
imull
pop
fwait
inc
sahf
sti
sub
adc
jbe
shlb
cmpxchg
bound
cmp
push
push
mov
fs
add
ss
adc
cmpsl
bnd
cld
shll
in
cmp
aam
dec
ljmp
adc
stos
cli
or
ret
xchg
scas
fcoms
out
cmp
jb
aaa
movsl
out
lahf
lods
push
adc
mov
imul
xor
jl
xorl
icebp
jle
rcr
ret
jge
mov
data16
pop
cmp
pop
test
aas
cltd
jo
scas
lret
xor
fsts
lret
dec
cmp
ds
dec
push
subb
jnp
aaa
sub
or
cmpsl
sub
adc
push
inc
xchg
or
jmp
mov
push
cmp
mov
inc
push
int
xor
xchg
jg
xchg
pop
jmp
pop
mov
xor
push
out
push
je
movsb
and
movd
pop
sub
or
ss
push
inc
push
les
push
xchg
dec
jbe
rclb
mov
int3
or
inc
jne
xchg
pop
imull
add
add
in
dec
mov
push
cmp
pushf
dec
test
mov
adc
add
dec
dec
inc
xor
or
cvtps2pi
scas
cmpsb
xchg
je
dec
add
or
or
sbb
mov
dec
pushf
outsl
outsb
test
pop
sbb
jmp
sub
or
jle,pt
mov
xchg
lret
jns
sub
jae
mov
pop
and
sbb
xor
fisttpl
ja
xchg
psubd
in
pop
push
adc
adc
int
inc
sarb
test
cmc
fdivrs
in
pop
pop
pop
pop
stos
sub
push
ret
sub
hlt
push
cmp
pusha
xchg
mov
push
sbb
mov
pop
and
das
sar
cwtl
outsb
xchg
add
adc
out
roll
xorl
or
and
clc
adc
ret
sbb
ret
sbb
mov
push
pop
jmp
clc
test
lods
mov
and
incl
hlt
enter
mov
add
mov
cld
mov
cmp
sbb
js
push
cmpl
push
dec
pop
xchg
cld
insl
mov
inc
jo
xor
insb
xchg
arpl
lret
xchg
sbb
inc
nop
or
sub
bound
cmp
test
mov
xchg
out
inc
movsb
mov
mov
jnp
xor
dec
mov
cld
sub
cmpsb
test
xor
xor
popl
xor
loop
push
int
push
xor
fs
pop
xor
mov
enter
push
roll
or
xchg
xor
add
int
jbe
inc
adc
fmuls
cltd
aas
inc
cmc
sti
cwtl
add
pop
lahf
movsb
cwtl
push
pop
jmp
jo
fwait
push
xor
outsl
add
fwait
xchg
adc
cmp
cmp
and
xlat
popf
inc
sbb
cli
dec
push
fstps
rcrl
ret
cmc
dec
mov
xor
lock
nop
pushf
ret
adc
sbb
insb
enter
push
cwtl
shlb
je
push
stos
rcll
push
mov
jecxz
xlat
jno
leave
outsl
push
sbb
mov
sbb
in
push
lods
je
pop
xchg
push
add
dec
jbe
aas
outsl
xchg
xor
and
sub
cmp
add
movsb
and
pushf
xchg
jp
mov
mov
ljmp
cmp
xor
sarb
dec
mov
fadd
mov
fisttpll
push
pop
dec
cmp
int
dec
pop
xor
mov
shll
out
test
mov
test
sbb
xchg
shr
shlb
push
dec
mov
ja
lea
xchg
or
andb
in
jl
mov
data16
lds
cltd
cmc
xor
fdivr
mov
data16
clc
leave
rorb
iret
sub
ret
lret
cmp
and
loop
push
inc
dec
gs
inc
adc
scas
mov
jecxz
rcrb
fisubrl
xor
ljmp
icebp
stos
jmp
test
mov
daa
mov
ret
iret
or
ljmp
lret
imul
dec
xor
sbb
push
in
xor
push
movzwl
jns
inc
movsl
add
or
mov
jmp
pop
jmp
adc
js
add
add
push
shrl
mov
jo
push
ret
dec
xor
push
push
sbb
and
jbe
mov
sub
push
add
mov
mov
push
les
fwait
ret
mov
xor
shlb
push
push
and
mov
out
clc
shr
pop
mov
jmp
lret
xor
add
sahf
lret
leave
jns
mov
pop
sbb
addr16
cs
pusha
pop
das
lea
in
push
push
mov
mov
lods
dec
lds
pop
ret
insl
out
lahf
or
aas
add
cwtl
ljmp
lret
pop
inc
mov
mulb
lea
add
ret
jo
mov
mov
or
push
sbb
mov
cwtl
xor
movsb
lahf
push
std
pushf
or
fisttpl
push
jmp
dec
jno
adc
sub
mov
pop
scas
xchg
add
cmp
push
xrelease
push
in
lret
and
popa
push
xchg
out
jmp
jns
test
mov
int
mov
xor
and
lock
xlat
je
or
pop
repnz
sub
mov
mov
cmp
fstpt
cmp
divl
add
cmpsb
push
scas
dec
aad
mov
push
insb
fwait
add
lock
iret
es
sub
sahf
lret
inc
sbb
jae
and
or
inc
jno,pt
add
out
jecxz
cli
cwtl
ret
add
inc
xchg
jle
into
mov
addr16
sub
sub
xchg
or
and
out
add
aas
maxps
fimuls
ss
test
ret
or
push
leave
orb
mov
push
xchg
repnz
fs
sahf
pop
dec
add
cmp
call
add
xchg
enter
jmp
lods
dec
hlt
inc
js
mov
dec
and
push
cmpsb
insl
pop
cltd
movsl
push
adc
sbb
fisttps
push
js
testl
mov
dec
fsin
pop
jecxz
jecxz
arpl
jno
js
lcall
or
iret
mov
imul
fwait
adc
scas
mov
js
xchg
xacquire
into
stc
xor
outsl
aam
or
daa
mov
test
movsl
cmp
xchg
mov
add
pop
push
mov
xchg
mov
das
cmp
mov
cltd
enter
in
mov
js
push
cld
ljmp
mov
fs
jae
jge
daa
sbb
fsubrl
dec
xor
hlt
mov
dec
out
icebp
sbb
mov
stos
andl
xor
cltd
or
jno
ret
jle
nop
sti
lret
lods
mov
jnp
imul
movsb
outsb
test
cmp
sti
aad
push
flds
leave
es
ss
jecxz
mov
mov
push
mov
test
rcrl
cmp
fists
out
in
ret
dec
jmp
xor
and
sub
mov
pushf
cs
pop
pop
inc
jnp
movl
jecxz
ret
test
mov
scas
jl
mov
test
pop
sub
or
push
aas
pop
test
pop
cmc
or
jg
sbb
ljmp
xchg
cmp
xor
lods
jno
inc
lret
sub
aad
movsb
aam
pop
cltd
shr
xchg
scas
mov
jnp
movsb
outsb
and
hlt
mov
nop
ftst
xor
lock
imul
pop
bound
xor
cmp
sbb
imul
popf
inc
mov
dec
push
cld
jl
iret
in
imul
das
sbb
fisubrs
js
rolb
fdivs
ret
mov
push
pushf
and
insl
sub
outsl
call
jo
gs
push
sbb
rclb
push
ret
insb
stos
fwait
scas
sbb
inc
push
xchg
inc
repnz
inc
in
repz
jns
pop
in
jae
push
or
das
lret
sub
in
dec
scas
stc
mov
xor
pop
jle
mov
sbb
adc
and
movsb
icebp
jle
lret
cmpsb
ret
jg
jge
push
sub
jecxz
outsl
and
mov
fcompl
bound
add
sub
dec
test
pop
jmp
subb
ret
inc
and
cmp
out
gs
test
mov
add
or
mov
dec
pusha
xchg
stos
mov
sub
pop
scas
in
mov
push
test
sahf
mov
ja
ja
gs
lret
test
xor
xor
es
es
inc
nop
bound
out
or
push
pmaxsw
pop
mov
std
insl
inc
or
dec
loope
and
inc
push
xchg
bound
and
pop
inc
mov
sub
popa
js
into
in
add
insb
jns
mov
repz
push
subb
mov
stos
rolb
xchg
sub
push
arpl
cmpsl
inc
xchg
mov
cli
out
mov
adc
inc
cmpsb
aaa
je
negl
push
insb
dec
cltd
stos
addl
enter
inc
addl
test
push
mov
ljmp
pop
jp
insl
dec
ja
jle
dec
in
in
lods
hlt
add
es
lret
arpl
das
jae
xchg
sub
jmp
mov
stc
sti
lahf
push
mov
insb
xchg
mov
xor
adc
jecxz
rcr
push
roll
pop
or
and
dec
sbb
hlt
mov
sbb
xor
pop
mov
adc
into
in
scas
lret
and
push
je
ja
stos
sub
push
xchg
je
cmp
push
push
jp
or
fildl
jo
les
mov
add
sub
adc
lcall
pop
mov
imul
cmc
jl
mov
xchg
fcompl
jmp
repz
pop
popa
icebp
adc
negl
push
add
push
mov
xlat
mov
vmovsd
mov
ret
pusha
fadd
mov
jmp
outsb
loop
hlt
and
leave
insb
scas
push
divl
mov
cmp
fsincos
into
addl
lods
testb
fisttpll
jnp
jl
dec
xchg
cmp
inc
imul
mov
dec
jb
mov
mov
outsb
xchg
jmp
push
scas
gs
pop
xchg
ljmp
loopne
xor
mov
fildl
jae
movsl
testb
xchg
fmulp
imul
xchg
adc
pop
jo
jae
cld
adc
adcb
adc
negb
and
pop
jmp
daa
xlat
push
fmuls
sub
adc
add
mov
xchg
das
aaa
test
aaa
cmp
and
inc
and
dec
jg
dec
xor
aam
aam
mov
stos
jg
fwait
lea
jg
daa
cmp
lcall
inc
filds
repnz
xchg
iret
cmp
fstl
push
push
mov
dec
lods
test
push
out
cmc
jmp
movb
mov
add
std
mov
sahf
dec
cli
out
cmp
add
lock
pop
scas
jns
inc
xor
outsl
enter
or
pop
adc
cmp
lock
movups
pop
movsb
ficoml
mov
push
loopne
js
pop
pop
and
insl
adc
adc
mov
sub
out
aam
sub
lahf
jp
out
loope
add
aam
ljmp
pop
jmp
lea
sbb
push
mov
rclb
addr16
movsl
subb
inc
mov
jnp
xchg
mov
and
dec
movsl
pop
imul
xchg
xchg
pop
push
pop
pop
cli
icebp
lret
imul
jmp
js
pusha
mov
test
cli
and
pop
cmp
push
push
ss
fisubrl
shll
in
test
loop
loope
sbb
jns
add
mov
jne
popa
popf
fldcw
mov
xor
popf
sbb
sahf
adc
movsl
or
icebp
add
in
sbb
popa
cs
push
sub
jnp
dec
fists
jecxz
and
outsl
adc
andl
test
sub
ficoms
push
mov
popf
dec
js
sub
xchg
movsb
dec
jbe
jl
nop
inc
xchg
fidivrs
xchg
push
cli
push
and
adc
push
push
add
mov
pop
out
test
push
arpl
lcall
stos
popf
sub
mov
lods
dec
js
adc
ss
lds
mov
in
cs
sbb
jle
cmp
xor
jae
loop
xchg
mov
ds
sbb
int
sub
add
call
cli
jno
sub
daa
jle
inc
lea
cmp
stc
stos
scas
cmp
sbb
cmpsb
aas
shl
imul
das
scas
call
popl
inc
iret
iret
jge
push
loopne
hlt
or
ficomps
lret
in
sub
cmp
popf
in
test
inc
mov
sub
adc
and
lcall
mov
jl
cmp
movsb
fwait
nop
test
sbb
or
jne
dec
cmp
dec
xor
pop
mov
jle
aaa
mov
pusha
adc
mov
mov
repz
ret
dec
lahf
add
mov
and
cli
or
or
popf
jnp
cmp
cs
push
pop
mov
lret
pop
dec
lods
xchg
dec
mov
or
pushf
adc
mov
in
cmp
mov
mov
pop
mov
xchg
inc
adc
xchg
mov
sbb
sub
jge
idivb
jnp
or
dec
iret
xchg
or
mov
lds
ljmp
sub
jno
loope
push
inc
decl
iret
mov
or
xor
popf
sub
xlat
mov
stos
jns
xor
and
shlb
inc
xchg
inc
int
in
xor
push
jae
fsub
cmpsb
repz
and
stos
add
xchg
test
sbb
in
fdivl
repnz
stos
imul
xchg
or
adc
loop
xor
sub
pop
push
stos
inc
fiaddl
jo
movsb
pop
xor
std
pop
decb
jp
fmuls
pop
into
sub
mov
jmp
xchg
insl
scas
fcmovnbe
mov
xchg
or
jg
inc
subl
xchg
sti
movsb
jg
mov
orb
enter
jb
jecxz
lea
movsb
stos
and
add
rorb
xchg
shlb
sub
int3
inc
dec
mov
mov
int
sub
shrb
mov
test
or
push
jmp
fsubrl
cs
outsl
pop
cmc
pop
adc
and
xchg
aam
dec
mov
dec
xchg
sbb
ja
adc
repnz
adc
dec
fsubr
inc
pop
xorl
mov
ss
daa
inc
and
ffreep
mov
inc
and
mov
cli
outsb
test
sub
popa
pushf
cmp
xchg
out
lret
stos
fadds
dec
shlb
loopne
leave
paddusw
daa
loopne
std
leave
pop
lods
sahf
movsb
push
stc
add
jmp
mov
into
add
xchg
subl
cltd
lods
movsl
push
movd
stc
cmp
mull
cmp
shrl
das
cli
addr16
jno
fildll
shl
jmp
fnstsw
addr16
out
imulb
sbb
adc
mov
adc
out
push
and
inc
loope
lret
sbb
adc
or
pop
mov
add
sbb
test
dec
xor
or
add
pop
inc
and
not
ss
xchg
mov
hlt
jne
pop
rcll
andl
pop
push
jmp
out
sub
stos
movl
adc
stc
sarl
cmp
sbb
lret
push
call
iret
cmp
fcoml
rolb
pop
pop
inc
xor
cmpsl
cmp
sbb
add
out
fwait
dec
les
cmp
leave
movsl
shl
mull
or
scas
pop
fsubrs
aaa
inc
sub
js
and
or
fmuls
or
lods
cli
inc
pushf
sub
punpckhbw
dec
lahf
and
jge
add
adc
lahf
sbbl
and
xlat
or
roll
mov
cmc
stos
mov
repnz
add
cwtl
pop
std
notb
mov
insl
pop
subl
push
das
xchg
in
sub
test
movsb
fstpt
popa
in
push
out
jmp
sub
in
mov
in
imul
inc
push
sub
fisttps
cmp
jae
xor
arpl
sub
insb
dec
in
sbb
adc
lret
xlat
insb
rclb
add
sarl
iret
test
push
or
scas
fcoms
and
pop
dec
fcoms
sbb
sbb
jno
jbe
xor
cmp
inc
mov
sub
stos
call
cmp
fs
push
addr16
and
or
in
popa
ret
cmp
mov
aaa
lods
or
stos
test
jg
in
fsub
lods
pop
or
bound
jmp
pop
inc
shrb
dec
mov
lods
cmc
mov
in
out
mov
out
sub
pop
and
add
or
cmp
push
pop
cmp
mov
xor
sub
mov
mov
ficoms
int
out
hlt
sbb
adc
cmp
dec
and
scas
addl
sti
out
jge
mov
cmp
fldcw
add
ret
jns
addb
dec
ret
jp
xor
in
loop
xlat
sbb
xor
jecxz
pop
mov
je
js
mov
sbb
add
pop
hlt
sub
orl
mov
cmp
adc
mov
aam
pushl
lret
scas
adc
loope
mov
pop
sub
xchg
loopne
idivb
sub
in
xchg
rclb
mov
ja
xor
xchg
xchg
adcb
and
pop
xchg
insl
mov
or
nop
sub
push
inc
inc
adc
add
push
nop
xchg
jo
mov
movsb
sbb
ljmp
rcr
adc
cltd
or
adc
arpl
mov
cmc
pushf
pop
push
arpl
mov
inc
lods
fiadds
shl
mov
push
scas
cli
and
mov
gs
cli
sbb
sbbb
jae
inc
es
nop
xchg
shl
jg
inc
int3
sbb
test
inc
cli
xchg
movsl
repz
dec
mov
jge
es
inc
cmp
cld
sub
lds
ljmpw
push
outsb
leave
fimull
jne
shrb
gs
imul
scas
dec
insl
mov
movsl
mov
les
hlt
pop
bound
fbld
rcrl
jg
nop
lods
cmpb
pop
pop
cltd
xchg
into
cs
mov
dec
shlb
outsl
dec
sti
stc
jg
aas
scas
fdivrs
xchg
pop
mov
jae,pn
sub
filds
outsb
push
stos
xor
adc
out
add
and
mov
cmpsl
jns
lret
mov
jecxz
inc
adc
mov
fs
push
stos
jle
push
in
dec
out
pop
pop
adc
mov
shl
jecxz
sbb
sbb
leave
mov
jns
dec
xchg
and
lahf
xchg
push
pop
cs
cltd
pop
mov
nop
daa
dec
ret
dec
pop
adc
in
fs
jge
insb
lret
or
add
dec
in
enter
loope
dec
test
testl
aas
jns
andb
insl
je
cmp
mov
addb
jecxz
xor
pop
cmp
repz
or
push
jb
jb
scas
or
mov
mov
cltd
cld
fadds
sub
mov
mov
sti
in
cli
add
cmp
sbb
andb
sbb
pop
ja
js
repnz
or
xlat
mov
xchg
test
mov
jb
mov
mov
jne
call
jmp
sub
in
jmp
push
js
push
jecxz
dec
sti
sbb
cltd
in
clc
xchg
add
push
imul
push
lods
xchg
inc
lret
dec
adc
jg
subl
push
adc
gs
mov
xchg
ret
add
add
mov
lret
inc
int
mov
pop
stos
pop
jbe
lahf
rcll
mov
jp
loope
popf
pop
xchg
cmp
mov
or
subw
clc
sbb
jnp
lods
pop
mov
mov
inc
push
outsb
mov
mov
xchg
mov
aam
sbb
push
xorl
inc
or
call
loope
stos
cmc
scas
jb
or
icebp
jno
popa
mov
push
leave
and
lcall
shl
sti
xchg
dec
inc
call
repnz
xor
mov
pop
mov
lcall
loopne
jecxz
les
pop
mov
cmp
aaa
div
fwait
push
push
push
mov
adcb
stos
call
xor
dec
jge
xor
xchg
cwtl
pop
cmp
clc
in
pusha
mov
fsubl
ja
test
lcall
xchg
push
lahf
into
jnp
and
out
cltd
or
jae
lret
imul
and
mov
lea
fadds
and
dec
add
dec
adc
cmpsb
fwait
hlt
push
sbb
adc
movsb
in
ss
sub
ljmp
xor
jp
push
data16
movsl
adc
xchg
dec
cs
xchg
sub
push
dec
cmp
insl
orb
ret
xor
dec
xchg
fcoms
int3
and
lods
int
sbb
cwtl
gs
inc
or
rcll
jae
pop
lret
jecxz
add
xor
and
xor
push
notb
add
aad
xchg
xor
test
push
jecxz
pop
mov
cmp
mov
xchg
mov
lret
xor
popa
jle
imul
xor
imul
test
shlb
add
fistps
in
in
popa
pop
cmc
orb
nop
int3
cmp
rorl
jmp
xchg
sbb
ja
inc
jecxz
mov
mov
scas
jp
lret
jb
ret
pusha
sbb
ret
jae
inc
out
pusha
clc
lods
push
xor
stos
or
mov
cmova
pop
add
ret
xchg
xor
adc
stos
or
mov
inc
cmc
out
xchg
daa
fimuls
xor
pop
inc
ret
js
test
leave
arpl
xor
aaa
add
faddl
cwtl
jle
push
push
sbbl
pop
push
or
test
sbb
cltd
add
je
insb
out
popf
mov
fs
mov
jbe
inc
or
push
lods
cmpsl
dec
fstpt
jg
sub
imul
or
xchg
push
jbe
imul
push
insl
int3
bound
push
or
and
out
jne
test
daa
and
dec
repnz
out
test
outsb
sbb
andb
stc
jb
sbb
pop
push
hlt
pushf
sub
pushf
mov
xchg
cs
rorl
sbb
in
mov
sbb
xor
sbb
dec
mov
jb
std
and
mov
add
ss
mov
pop
sub
and
fs
xchg
notl
mov
mov
jge
mov
push
sbb
pop
sub
pusha
fdivl
and
jb
lods
repnz
cwtl
mov
dec
shll
pop
sbb
shrb
ljmp
stos
or
bnd
push
jp
sub
jge
jno
or
loopne
notb
add
add
iret
or
out
insb
cmp
push
outsb
cmpsl
pop
push
imul
push
jbe
orl
sub
mov
outsb
jmp
xchg
lret
fwait
push
jecxz
insb
xchg
les
into
cmp
test
and
adc
imul
pusha
add
inc
inc
sub
enter
into
xchg
cltd
inc
es
pop
les
mov
xor
out
fsubl
cld
xor
clc
dec
pushf
ror
xor
push
sub
das
jmp
mov
out
shlb
ret
xchg
imull
and
pushf
mov
push
mov
out
dec
inc
pop
xchg
nop
jns
lret
add
sub
sub
mov
lcall
das
mov
sub
insb
sbb
idivb
nop
iret
jmp
adc
or
push
pop
nop
setle
or
push
insb
xchg
jb
icebp
inc
mov
xchg
lea
push
sub
cli
push
and
movsl
out
divb
cmpsb
fcoml
js
es
fs
mov
sub
aaa
sbb
loope
das
sahf
pushf
cmp
sbb
jb
outsb
jg
popa
mov
es
std
xchg
jo
fsub
fdivp
cmp
movsb
xchg
rclb
fsubr
sahf
fsts
add
sub
xchg
loope
jmp
imul
sbb
mov
fldl
mov
push
syscall
shll
pop
in
int
addr16
mov
stos
and
inc
and
sahf
lock
pusha
lods
and
sarb
push
push
cmp
mov
jmp
sub
sbb
adc
cmpsl
and
loop
and
fsubp
mov
push
pop
or
imul
and
arpl
xchg
mov
dec
sub
jo
push
xor
sbb
vsubsd
push
fistps
inc
daa
inc
jle
sti
rolb
mov
fwait
int3
pop
lret
loope
lret
bound
add
jo
add
pop
movsb
lcall
cmp
adc
or
fstps
add
out
mov
push
xchg
mov
xlat
pop
lock
jle
inc
xchg
or
popa
dec
sbb
lcall
out
in
push
push
inc
test
js
xor
inc
daa
cmp
movsl
stc
add
gs
pop
ret
aad
stc
mov
jge
outsl
testb
mov
lds
jns
enter
insb
addr16
dec
jl
jns
cmp
jo
iret
jle
out
in
scas
insl
mov
cli
aam
repz
call
push
pushl
out
and
inc
dec
movsl
add
adc
scas
xor
pop
sbb
jae
and
add
sbb
das
push
addr16
dec
lret
mov
loopne
pop
ljmp
fcompl
push
push
rcrl
imul
xor
sub
fisttps
loopne
out
roll
jno
inc
adc
in
scas
scas
pop
cmp
outsl
dec
aam
jecxz
inc
mov
xchg
mov
loop
xchg
pop
jbe
sub
jne
les
mov
out
and
sti
or
jg
insl
mov
push
cmp
jl
lock
xlat
and
std
movsb
out
adc
iret
data16
sbb
inc
inc
std
mov
sub
imul
cmp
and
xor
sub
xor
out
and
mov
insb
out
pop
xlat
xchg
imul
lahf
sub
jmp
outsl
outsb
xorl
xor
dec
xor
sahf
in
aad
pop
xchg
xchg
xchg
pushf
jge
add
push
sub
jmp
pop
js
xor
pop
out
mov
or
sarb
rorb
icebp
sbb
xor
arpl
outsl
adc
jp
add
arpl
push
push
xchg
add
unpcklps
fwait
imul
mov
addr16
les
sbbl
lcall
stos
adc
add
pop
adc
cld
inc
call
inc
dec
dec
jns
jge
pusha
sbb
jle
mov
adcl
cli
popf
sarl
std
lods
dec
adc
inc
aaa
scas
jbe
or
inc
pop
xor
xchg
loopne
push
fwait
pop
test
popa
inc
movsb
adc
pop
add
stos
repz
rorb
sahf
mov
popa
pop
sbb
icebp
inc
iret
into
cmp
stos
push
test
mov
mov
push
icebp
cli
adc
dec
out
insl
and
daa
les
sbb
aaa
ret
imul
or
fidivs
mov
or
ljmp
mov
out
dec
add
and
rcr
rcrb
movsb
sbbb
sahf
lcall
fwait
jge
xchg
mov
push
clc
popf
sub
int
aam
test
xchg
xor
add
xchg
fldl
lds
xchg
cmp
in
pop
jge
out
out
jp
aas
xorb
ret
mov
ss
jno
jmp
mov
das
dec
ds
xor
or
outsl
inc
mov
aam
push
jo
dec
aam
popa
jbe
xchg
lock
arpl
push
mov
call
hlt
enter
push
pusha
or
stc
pop
pop
loop
jo
pop
iret
aaa
mov
aaa
aas
out
or
cmpsl
sub
mov
bound
mov
jbe
mov
ret
jb
ds
movsl
loop
lea
inc
mov
popa
imul
xchg
cld
mov
and
xor
or
sub
lock
adc
cld
or
sbb
ss
cmp
loope
testl
bound
leave
daa
jae
jmp
or
jecxz
adc
sti
and
and
not
xlat
mov
std
rorl
jmp
sahf
pushf
push
fimuls
push
mov
xor
add
mov
lret
mov
inc
mov
inc
std
gs
push
xchg
clc
cmp
pop
add
lret
cmpsb
arpl
lea
push
push
je
insb
sub
push
inc
aaa
pop
xchg
sbb
pop
add
in
pop
add
sub
or
inc
jmp
xchg
arpl
movsb
or
scas
hlt
ds
aaa
mov
fs
mov
and
pop
or
pop
es
loopne
in
and
adc
std
xchg
cmp
mov
jl
bound
sbb
mov
mov
adc
pop
lds
mov
add
mov
xor
or
lret
dec
imull
adc
push
sub
rcr
in
mov
insb
mov
lds
pushf
adc
push
cmp
adc
mov
pushf
test
sub
or
popf
or
inc
jg
cmpsl
data16
movsb
loopne
xor
loop
movsb
insl
test
push
fimuls
test
dec
fsts
lcall
ljmp
push
fstp
fwait
pop
mov
ds
mov
push
and
cmp
jnp
mov
les
add
mov
jecxz
add
mov
movsl
data16
add
mov
movsl
push
jle
mov
cli
adc
loopne
pop
gs
jns
push
xchg
or
cmp
je
int
or
inc
mov
dec
xchg
imul
mov
xchg
sub
fisttpl
dec
inc
push
mov
imul
aad
cmp
lock
jge
xor
pop
call
dec
sub
es
add
mov
or
mov
sub
adc
xor
das
inc
or
popf
and
lret
push
push
icebp
shll
jmp
loop
lods
outsb
fimuls
inc
leave
ret
and
testb
mov
push
leave
rcrl
lock
xor
mov
xchg
mov
outsl
scas
gs
rol
sbb
xor
sub
addr16
sbb
imul
scas
or
cwtl
jb
sahf
lods
sbb
dec
and
pusha
ljmp
icebp
cmp
inc
and
gs
icebp
mov
cli
insl
into
mov
xchg
cmovno
mov
dec
fcom
or
sbb
add
xchg
sub
or
scas
xor
xchg
pop
fs
scas
je
pop
pop
mov
arpl
in
cmp
sbb
lods
icebp
ss
dec
shrl
aad
jb
outsl
jmp
add
out
pop
jbe
push
popl
cwtl
sbb
sub
lahf
mov
inc
mov
insb
sbbl
xchg
jno
jg
data16
outsl
mov
xor
sar
movsl
cmpsb
xor
shl
mov
leave
sti
push
pop
cmc
enter
cli
cmp
lock
pushf
jp
jl
fcmovbe
or
inc
sub
jbe
arpl
push
xor
dec
int
out
cmpsl
test
or
popf
jne
push
mov
and
ficomps
push
mov
test
clc
test
fwait
mov
enter
cmp
or
push
mov
add
add
add
lcall
or
push
pushf
inc
xor
lahf
pop
cmp
outsl
lea
xchg
cli
sbb
mull
pavgb
mov
out
push
bound
ljmp
insb
cli
dec
pop
xor
xchg
fstpt
cmpsl
push
aaa
jmp
jb
jmp
lock
movsb
adc
imul
add
loop
dec
and
icebp
xor
movsl
fbld
lods
add
mov
in
imul
inc
shll
pop
aam
sbb
xor
cmp
dec
dec
cmc
mov
ljmp
jne
ss
push
xor
lods
stos
and
mov
xchg
out
adc
dec
iret
jne
pop
mov
cmp
rcr
pop
int
rorl
rorl
xor
sub
inc
aas
fstp
daa
roll
fsubrl
xlat
pop
jg
aaa
in
jnp
cltd
push
sbb
test
mov
push
pop
sbb
aad
mov
sbb
sbb
lahf
push
fs
hlt
adc
mov
scas
cwtl
cld
inc
stc
jmp
ds
faddl
push
mov
and
rol
hlt
stc
push
stos
loope
mov
inc
mov
inc
cmp
or
rcll
sub
and
cmp
repz
aad
aaa
test
cmp
jge
sub
lock
pop
lds
mov
pop
xor
pop
fs
rcll
adcl
xor
push
pop
addr16
dec
push
ljmp
push
out
pop
cmpsl
cmove
xor
xor
pop
lds
mov
syscall
outsb
push
mov
cltd
inc
sbb
adc
fcomps
push
mov
sbb
hlt
mov
xor
data16
mov
jl
jno
imul
push
push
outsl
adc
lahf
pop
ret
mov
mov
push
fidivs
lret
fimull
or
pop
jb
pop
in
push
in
adc
push
lret
enter
je
inc
mov
stc
notl
imul
fisttpl
jne
sub
adc
cmp
mov
mov
call
xchg
out
sbb
out
cld
or
lret
repnz
aam
outsl
xor
aaa
jnp
push
mov
out
jl
outsb
insl
pop
push
incb
jle
pop
cli
sub
lret
and
fs
arpl
aad
clc
rcrl
sbb
xor
loopne
cmp
mov
or
outsl
inc
ffree
push
jno
xchg
xchg
sub
jnp
sahf
pop
in
popf
lahf
adcl
loope
and
lcall
leave
jnp
inc
dec
fcmovbe
mov
or
mov
push
push
add
scas
fucom
insb
dec
fmull
out
loop
test
and
lock
lahf
pusha
repz
sbb
orb
adc
test
bound
jecxz
mov
xchg
xchg
jnp
arpl
mov
lods
pop
test
dec
and
mov
fiaddl
test
pop
pusha
ficoms
sub
xor
ss
js
sbb
sbb
push
fnstcw
lock
add
dec
add
lods
shll
in
jae
dec
rorb
xor
dec
loopne
adc
inc
cwtl
icebp
test
notb
push
ja
fnstcw
inc
dec
push
jl
das
push
push
xchg
jecxz
jmp
in
pusha
or
sub
xchg
mov
inc
lretw
enter
hlt
or
fbstp
popa
into
call
mov
int3
loopne
test
and
sub
dec
addr16
cld
ljmp
dec
sbb
mov
jp
push
mov
jmp
movsl
ds
xchg
outsl
sahf
sti
mov
out
bsr
adcb
push
test
sarb
fwait
fists
daa
add
pop
and
call
add
call
dec
or
xchg
ret
movsl
into
and
jmp
std
xchg
lods
push
mov
sar
test
jmp
movb
fst
popa
aad
les
out
sti
cmc
aam
lret
ds
movsb
add
test
push
mul
lcall
jmp
or
lret
bound
mov
dec
es
ror
jae
lods
pop
mov
enter
inc
int
decl
pusha
scas
sub
sbb
lods
mov
sub
shrl
data16
dec
lock
add
pop
in
or
popf
stos
insl
ljmp
jge
pop
xchg
sbb
jl
cltd
nop
shl
sub
rolb
xor
ret
insl
notrack
popw
mov
mov
mov
pop
les
pop
mov
shlb
in
js
test
sub
mov
push
imul
out
mov
sbb
push
cmpl
int3
cs
fcmove
jbe
mov
imul
mov
mov
mov
dec
inc
aam
cmc
pusha
pop
pop
mov
lret
ss
jg
test
xchg
outsb
sub
xorl
das
test
rcr
and
lahf
sbbl
ljmp
inc
das
in
xor
jae
ret
sbb
out
pop
das
rcll
push
arpl
add
sbb
sbb
cmp
mov
sbb
lret
inc
jnp
cmp
or
les
inc
nop
xchg
adc
addl
mov
add
loope
lods
mov
inc
icebp
xor
movsb
das
stos
cmp
pop
and
add
pop
outsb
push
out
mov
loope
push
sub
aam
scas
test
pop
lea
push
sub
or
add
scas
sub
jno
cmp
jo
or
out
insb
daa
mov
add
inc
mov
and
push
loopne
fdiv
aas
push
pop
pop
filds
cmp
js
int
test
sti
cmp
push
push
sbb
xor
adc
inc
mov
les
sbb
mov
dec
neg
clc
cmp
jb
inc
inc
addr16
xchg
jno
fs
jle
mov
sti
xor
std
jl
jne
sbb
adcb
sbb
enter
fadd
cld
push
out
arpl
in
add
add
jne
clc
cmp
pop
stc
or
push
nop
test
and
cmpsb
fisubrs
pusha
in
jl
cmp
int
int
dec
rclb
mov
xor
test
xchg
sbb
jns
cmpsb
xor
jbe
push
dec
push
push
gs
mov
lahf
shlb
dec
bound
xchg
out
mov
xlat
clc
hlt
out
out
pusha
xor
and
stos
pop
test
add
cmp
in
dec
mov
daa
add
mov
pop
fistpll
push
pop
dec
sbb
jb,pt
divl
add
dec
out
pop
xchg
insl
pop
dec
mov
scas
inc
imul
fidivs
push
mov
into
scas
mov
mov
inc
mov
mov
xchg
sarb
lret
and
movsb
fsubrs
das
loope
cmc
insl
cmpsl
inc
mov
mov
mov
icebp
das
add
insl
orl
sub
stos
iret
push
adc
fsubs
adc
dec
pop
fnstenv
xor
lret
popf
sbb
dec
mov
in
loopne
dec
mov
addb
push
pop
sbb
mov
cmpsb
jl
mov
nop
push
push
fdivrs
aas
daa
or
lahf
loopne
daa
data16
adc
xchg
mov
dec
mov
fistpll
jg
arpl
ds
mov
mov
iret
jmp
dec
cmp
mov
lret
push
mov
pusha
loope
out
jae
mov
mov
test
mov
scas
insl
adc
mov
mov
cli
add
mov
jmp
add
sub
cmp
dec
loop
subb
and
dec
cmp
bound
aam
negl
sub
lret
mov
sahf
jnp
jmp
xchg
pop
repz
dec
addr16
or
repnz
jae
enter
cmpl
enter
or
xchg
mov
scas
dec
mov
and
ljmp
int3
jno
loop
mov
dec
arpl
mov
mov
stc
data16
mov
push
lret
aam
shlb
sub
xor
sti
inc
and
push
icebp
testb
jmp
push
jg
lret
inc
out
cmp
orl
mov
sahf
push
dec
mov
add
dec
mov
or
push
mov
ja
cpuid
ficompl
rorb
bound
cli
es
dec
imul
push
mov
inc
movl
insb
mov
add
outsb
xchg
stos
loop
and
std
mov
sbb
shl
push
mov
jae
dec
int3
stos
sbb
fdivl
std
testl
pop
test
dec
ja
add
adc
pop
lock
mov
paddb
mov
jg
jle
test
mov
and
loopne
cmp
mov
adc
push
or
out
mov
lods
leave
popl
cmp
std
movsl
sub
xchg
je
hlt
mov
loop
outsb
fs
mov
mov
cmp
jmp
cmc
fucomi
psllw
dec
lahf
rcrb
stc
mov
shlb
cmpl
pop
sub
mov
lock
xchg
fsubrp
push
sub
dec
dec
int3
mov
adc
push
mov
xorl
sbb
sahf
adc
movsl
jl
cmpsl
cld
sahf
lock
loopne
cwtl
or
lcall
pop
fnstsw
jb
dec
cmp
xchg
es
imul
ret
jg
mov
jge
inc
add
clc
sub
test
out
int3
das
mov
and
loope
repnz
xlat
fimull
shrl
mov
xchg
or
mov
xchg
adcl
ljmp
mov
mov
testl
inc
fwait
into
aam
sahf
pop
or
jno
ja
push
movsb
cpuid
jbe
sbb
pop
jb
push
fisttps
pop
mov
ucomiss
xor
test
push
fidivrl
ret
andb
sub
sub
sbb
das
out
pop
or
ljmp
push
fdivrl
idivl
pop
mov
fldenv
andb
dec
sbb
shl
dec
pop
sarb
cs
xor
adc
scas
imul
pmaxsw
mov
ret
jne
inc
aad
stos
mov
aaa
les
add
add
out
cli
addr16
or
mov
jge
cltd
push
cmp
sbb
dec
mov
test
test
inc
xchg
cmc
hlt
mov
pop
mov
fcomp
fidivrl
inc
push
xchg
sti
mov
bnd
or
sbb
mov
push
loope
ret
ret
int
mov
inc
enter
nop
imul
repnz
rcrl
call
lods
mov
hlt
mov
fnstsw
insl
fdivr
mov
popa
stos
dec
es
sub
mov
inc
sbb
push
lds
push
repnz
rclb
sbb
jmp
lock
push
idivb
into
in
outsb
adc
fisubrl
aad
repz
imul
push
jp
repnz
outsl
xchg
dec
shrb
xchg
dec
mov
add
cmp
insb
add
xchg
or
mov
or
cld
push
add
loope
cwtl
xchg
roll
adc
in
lcall
mov
rcrb
lods
sub
pop
out
cmp
cwtl
dec
add
movb
xor
aad
mov
add
jge
pusha
inc
imul
inc
sbb
cmp
ljmp
es
push
incl
popa
adc
mov
pusha
and
inc
loop
cli
les
xlat
rolb
clc
mov
iret
imul
add
pop
or
popf
jecxz
leave
sbb
aaa
lahf
inc
add
movsl
pop
xchg
fwait
dec
push
mov
jl
push
clc
fsubs
mov
mov
jae
mov
std
add
dec
cmpsl
mov
xorb
xchg
in
sub
adc
es
push
sbb
movsl
ljmp
mov
lds
out
ret
xor
pop
mov
inc
cmpl
push
mov
mov
mov
hlt
sub
fiadds
jecxz
mov
cmp
in
js
add
in
or
inc
add
lock
xor
jmp
lea
fnsave
addr16
sbb
aad
lods
lock
rcrb
test
fsubl
xchg
pop
cmp
in
add
mov
sarb
test
xor
cli
or
gs
and
call
xchg
xor
sbb
out
testl
aad
pop
cwtl
sub
into
test
pop
cwtl
std
idiv
in
cmc
sbb
and
mov
rorl
xchg
sbb
mov
or
mov
or
push
jl
mov
popa
adc
cmp
test
addr16
nop
aam
in
popa
hlt
jb
sbb
and
lods
sub
aas
xchg
and
mov
rorl
adc
rcrb
je
jne
imul
push
ja
xor
popf
hlt
and
in
dec
inc
sbb
dec
xlat
xor
jmp
scas
push
cmpsl
aam
push
and
xor
das
repnz
sbb
sub
loope
clc
out
rcl
lcall
mov
shld
add
push
lret
mov
daa
inc
or
push
sub
pop
fsubp
jo
fwait
add
icebp
or
cmc
mov
sub
cmpsb
movsl
xor
cs
cli
das
sbb
pusha
ja
outsb
out
push
pop
pop
sub
ljmp
jecxz
clc
es
lea
dec
cld
xchg
sbb
insl
jae
sbb
repz
push
pop
shld
and
dec
and
fildl
mov
outsl
jle
dec
stos
sbb
xchg
jae
xchg
call
cmpsl
shlb
sbb
rcl
xchg
add
in
dec
cmpsb
push
sarl
es
jl
jg
sub
pop
loopne
sub
and
insb
inc
dec
nop
leave
mov
xchg
sub
dec
call
pop
fiaddl
push
adc
adc
inc
inc
mov
and
fbld
addl
add
cmp
push
lret
movsb
dec
clc
add
pop
adc
and
jg
jle
inc
into
push
lahf
nop
fidivrs
xor
push
push
xchg
das
sti
sub
mov
ja
pop
cmp
pusha
inc
jl
inc
outsb
mov
inc
roll
fisttpl
cmpsb
sub
test
stc
enter
test
jo
mov
inc
stos
sbb
imul
sbb
add
push
dec
or
add
sar
fisubl
in
push
sbb
fisubs
out
movsl
mov
cs
push
aad
xor
mov
rcll
jb
loop
mov
scas
cmp
add
testb
scas
push
mov
adc
lea
movsb
stos
das
push
pop
pusha
mov
inc
lds
fdivrp
mov
mov
mov
pop
icebp
jmp
pop
cld
sub
mov
jmp
lahf
pop
pop
inc
iret
dec
or
nop
fs
mov
sub
arpl
xor
lret
cmpsb
rcrl
jl
cld
leave
cmp
imul
mov
jae
std
loope
test
or
inc
mov
fstps
jns
loopne
call
pop
in
fildll
push
inc
jns
shlb
xor
jmp
push
mov
dec
xorl
rolb
and
or
addr16
jle
mov
ret
subb
mov
mov
popa
insb
xor
arpl
xor
iret
sbb
lods
dec
xchg
mov
mov
fmuls
push
xchg
jnp
pop
sub
mov
fdivrs
push
out
adc
outsb
shll
jns
icebp
dec
add
mov
inc
lea
push
push
dec
arpl
xchg
push
jno
sub
push
fs
sub
xor
cmp
push
inc
aas
adc
lds
movsl
jmp
sub
cmp
fucomp
adc
sbbb
pop
xchg
lea
call
adc
mov
xchg
cmp
xchg
ljmp
inc
in
div
lods
fisubrl
repz
add
mov
arpl
iret
inc
cli
push
cmpb
lea
gs
ret
icebp
js
cmp
cs
in
stos
loop
mov
jle
repz
inc
movsb
pushf
mov
loop
adc
adcl
xor
lahf
mov
ds
ret
je
and
outsl
fmull
popf
sub
inc
sub
inc
jo
hlt
adc
testl
push
inc
adc
jae
or
mov
test
or
cmp
stos
jp
sub
data16
sub
sbb
dec
push
xchg
fdiv
cld
cld
adc
jno
sub
in
scas
add
pop
inc
outsl
mov
std
push
mov
sub
stc
out
clc
sahf
outsl
icebp
push
xchg
sub
std
les
je
dec
test
lods
out
les
loope
mov
dec
in
add
sbb
enter
cmp
test
and
loop
repnz
mov
fdivrl
xor
imul
out
imul
sbb
adc
push
mov
xchg
lret
loopne
fcomi
addl
add
xchg
mov
xchg
stos
pop
jp,pn
fcoms
pop
xchg
cmp
sbb
jns
mov
sbb
ss
xlat
les
insl
testl
es
fdecstp
xor
stos
mov
sbb
pop
or
outsl
pop
inc
mov
mov
hlt
fisubrs
lret
jmp
mov
jg
mov
cmp
test
mov
xlat
inc
sub
or
out
xchg
int
mov
mov
hlt
add
aam
negb
lods
je
inc
loopne,pn
add
mov
adc
mov
push
test
mov
dec
mov
sub
orl
leave
mov
leave
mov
adc
shrl
sahf
andb
push
push
cwtl
and
outsb
jae
pop
or
sti
ljmp
push
outsl
xchg
stos
pushf
fwait
jnp
cltd
inc
orb
xlat
adc
mov
jl
jge
mov
aaa
xchg
cmc
fs
push
fsubr
pusha
jo
or
in
rol
outsb
in
test
test
shr
daa
fwait
int
js
inc
sub
ret
and
xchg
jecxz
or
out
shrl
adc
and
lods
push
lahf
or
ss
xchg
loope
rclb
add
clc
lcall
pop
in
push
scas
popa
lods
imul
into
iret
pop
pop
fiadds
fldenv
pop
in
daa
cmp
sti
xchg
lds
adc
sbb
test
xchg
stc
push
pop
adc
adc
adc
sti
sahf
call
cld
cli
mov
mov
out
negb
into
xchg
jle
jne
dec
imul
add
cltd
fbstp
nop
out
lods
or
inc
add
push
mov
fs
lods
das
jle
or
and
xor
dec
sbb
gs
pop
pop
jge
sub
mov
int
mov
push
xchg
mov
and
lea
insb
mov
lahf
insl
sarl
adc
mov
xorl
cwtl
xchg
cmpsl
movsb
and
mov
mov
call
imul
sbb
les
mov
das
sub
mov
insl
nop
insb
cld
cs
imul
mov
push
jb
mov
adc
subl
inc
mov
testl
push
sbb
fs
cmpsl
or
lret
sub
mulps
add
in
into
ret
fcoms
jnp
mov
icebp
je
mov
sahf
jb
mov
lea
fists
mov
inc
out
repnz
mov
ficoms
sbb
data16
sbb
lods
scas
xchg
movsl
mov
repz
imul
fwait
repz
sub
mov
adc
lods
sub
jnp
and
out
sbb
add
jno
test
mov
test
out
jmp
cmp
push
or
in
das
push
sbb
pop
dec
int3
aaa
push
and
decb
jb
pcmpgtb
mov
ret
sub
mov
inc
dec
push
dec
push
fistl
adc
xor
push
sub
or
and
pop
inc
je
jb
into
xchg
data16
cmpsl
xor
int
arpl
or
or
dec
incb
clc
in
inc
daa
jg
stos
xlat
pushf
sarb
lcall
loope
mov
outsb
call
repz
aam
sbb
push
int3
jle
xchg
ss
test
push
mov
fdiv
ss
ret
xor
scas
call
test
sbb
test
xchg
xchg
fidivl
sub
enter
xor
neg
push
xchg
mov
pushf
inc
dec
cmc
or
cmp
pop
nop
sbbl
adc
icebp
add
popfw
pusha
cli
pushf
mov
sub
ret
dec
cmpsb
jnp
imul
insl
mov
imul
pop
fisttpll
test
mov
push
aas
jae
mov
mov
xlat
push
dec
test
pop
loopne
push
int3
fstl
repz
js
addr16
lds
inc
das
sub
pop
xchg
movsb
mov
cwtl
inc
je
out
test
loop
enter
mov
daa
dec
cli
pop
loopne
aam
inc
ret
pushl
call
in
pop
xlat
mov
in
pop
imul
xchg
mov
lea
ret
out
mov
icebp
add
dec
pop
mov
movsl
xor
je
jo
mov
jg
cltd
sbb
mov
mov
mov
lahf
mov
enter
xchg
jbe
gs
sbb
fnstenv
cld
call
std
push
and
push
std
and
loopne
push
sti
push
cmp
scas
cmpsl
aas
dec
lcall
add
ja
or
pushf
push
stos
outsl
jmp
push
rorl
mov
arpl
sahf
insl
mov
add
mov
inc
lea
icebp
jp
and
int
mov
dec
ds
mov
loopne
das
out
lcall
jmp
rolb
sahf
push
cmp
add
push
lcall
call
mov
add
inc
pop
rcrl
repz
mov
cmpsl
jns
nop
cmp
sbb
cmp
nop
out
jmp
loope
test
xchg
ds
push
pushf
cmpsb
clc
pop
and
xor
and
cs
xchg
push
mov
add
jae
mov
dec
sbbb
sbb
addl
dec
push
push
sbb
adc
in
enter
sbb
mov
gs
mov
mov
mov
xchg
mov
pop
loop
mov
repz
inc
add
dec
in
fsubl
inc
andb
add
cltd
xor
je
idiv
or
dec
call
pop
push
insb
repnz
adc
ds
mov
fldenv
jnp
cmp
cmpsb
add
cmpsl
xor
mov
aaa
sub
imull
in
sbb
adc
dec
push
lods
in
pop
adc
fmulp
ja
jo
jge
push
mov
jp
mov
mov
mov
mov
xor
in
loopne
xchg
je
lea
lock
decl
adc
daa
stos
sub
mov
push
out
fildl
in
push
mov
push
pop
mov
addb
jbe
lods
adc
cmp
mov
fwait
popa
cmp
and
pop
mov
test
xor
adc
rclb
or
enter
lcall
movsb
push
cmp
aam
dec
dec
push
mov
pop
lahf
push
bound
sbb
daa
ja
lods
gs
lcall
roll
xor
dec
lods
sub
mov
shll
or
sbb
pop
and
stc
out
int
clc
cs
sbb
push
ss
jbe
jo
enter
mov
loopne
add
pop
ss
xor
adc
cmpsl
cmpsb
fwait
cmpsl
insl
ljmp
insb
mulb
lods
dec
inc
mov
leave
rcl
pop
inc
scas
adc
aad
stos
popa
incb
scas
sub
sbb
xchg
inc
inc
lcall
push
mov
mov
lods
int
ret
cmp
jno
iret
cltd
xor
mov
addr16
jg
in
test
test
pop
das
sti
dec
or
mov
jnp
sub
dec
in
cmpsb
push
cs
sub
pop
nop
loope
test
testb
add
cmp
mov
js
mov
ret
popa
mov
or
mov
adc
sub
popa
mov
lahf
pop
push
dec
scas
fs
stos
mov
fimull
nop
mov
or
pop
push
pop
pop
adc
mov
push
fidivrs
arpl
filds
cmp
xchg
push
sbb
sbbb
mov
cmp
test
xchg
lahf
jl
fimuls
add
sbb
fcompl
aas
adc
enter
mov
xor
sarb
dec
cltd
lods
imul
stos
ljmp
clc
ljmp
out
js
push
xor
test
add
or
xchg
imul
push
pop
jae
leave
fildl
pop
add
lds
arpl
sti
jg
cmp
and
xchg
mov
jp
inc
cmpsb
sbb
pop
xchg
je
and
cltd
mov
adc
sbb
out
dec
ret
clc
pusha
lret
adc
mov
ret
dec
mov
dec
insl
and
gs
or
dec
loopne
inc
add
sbb
lods
nop
cmp
ss
mov
rcll
xchg
push
pop
adc
inc
mov
imul
outsl
xlat
jp
adc
cmpsb
and
aam
inc
or
xchg
outsl
push
sub
mov
pop
in
iret
pop
ds
add
add
outsb
mov
daa
dec
mov
inc
push
scas
and
push
pop
out
lods
add
push
jmp
xor
test
xor
push
cmp
loopne
scas
aas
out
mov
mov
scas
dec
lods
jecxz
push
out
dec
lea
push
inc
rorl
test
aas
mov
jmp
xor
xor
or
scas
pusha
push
and
adc
mov
jne
add
push
pop
and
daa
cmc
push
out
xor
mov
jnp
jl,pt
subb
movsb
adc
jbe
andl
or
cmc
sahf
cwtl
adc
pop
and
xor
out
out
lods
or
mov
pop
pop
cmp
das
and
inc
jns
popl
xor
bound
and
lret
jno
xchg
mul
je
stc
inc
testb
push
fwait
xor
loope
cli
loopne
add
out
mov
and
stc
inc
push
mov
movsl
aam
mov
jb
pop
jle
std
daa
adc
scas
insl
dec
popa
stc
test
ds
test
mov
jmp
aaa
mov
in
ret
mov
in
gs
scas
sbb
sbb
aad
mov
sahf
or
stos
mull
dec
jg
icebp
push
sub
int3
mov
cld
adc
or
mov
into
repz
adc
push
ds
mov
enter
jle
cmp
fldl
mov
testl
loope
mov
mov
adc
inc
and
inc
hlt
cltd
jnp
pushl
push
mov
mov
sbb
inc
daa
push
jne
cmc
lods
and
xchg
mov
enter
hlt
cmp
mov
pushf
orb
and
hlt
add
jnp
inc
enter
cmp
mov
pusha
or
in
adc
add
aad
rcll
xchg
add
mov
call
gs
xlat
icebp
and
jl
gs
pop
inc
xor
lret
cmpl
cmp
cmpsb
fs
dec
scas
and
inc
flds
push
nop
ss
sbb
jp
push
lret
daa
pop
stc
cmpsb
adc
ja
nop
xchg
xchg
fists
sbb
aad
iret
subl
push
xor
jae
out
cs
outsb
and
pop
movsb
cwtl
xor
sub
loopne
addr16
imul
cmc
xor
les
faddp
fcom
mov
addb
aam
xor
inc
dec
or
or
leave
or
dec
push
test
jnp
cmc
popl
data16
ja
and
ret
xchg
mov
push
jl
int3
js
jl
fs
cmpl
adc
fmuls
cwtl
lds
mov
stc
insb
clc
arpl
inc
test
scas
push
outsb
ret
mov
int
popf
mov
push
or
ffreep
mov
sahf
dec
sbb
js
dec
fwait
cmp
test
mov
shl
loopne
dec
sbb
outsb
sub
fistpll
orl
xchg
mov
popa
or
xor
and
sarl
insb
mov
cmp
subl
xchg
sub
sub
jle
loop
jle
mov
jns
call
in
ds
sub
mov
loopne
add
push
test
sbb
sub
jmp
stos
lahf
pop
jb
mov
sbb
adc
cli
call
sub
mov
rcll
jmp
ret
in
mul
loope
mov
jbe
fbld
adc
inc
add
pop
ret
pop
data16
nop
and
dec
loopne
sub
add
mull
nop
pop
mulb
test
aaa
rcll
inc
xor
outsb
scas
mov
pushf
out
adc
pop
outsl
jns
xor
xor
clc
adc
cmp
pop
xor
push
pusha
mov
lock
pop
fisttpll
subb
or
idivb
cmp
leave
fs
insl
xor
push
ss
xchg
push
xlat
cmpsb
loopne
push
in
data16
pop
lret
rol
bound
insl
and
jle
sbb
xlat
clc
cmp
add
and
in
jb
jmp
sbb
add
push
sub
and
test
xchg
test
inc
and
pop
cmpsb
gs
scas
enter
push
and
addr16
dec
inc
or
xchg
cmp
leave
fsubs
cmc
pop
repz
add
xchg
adc
push
sbb
mov
xchg
test
xchg
rorl
nop
sbb
push
test
xor
mov
imul
shl
jae
sub
int
stos
loope
lret
inc
cmpsb
addr16
adc
sbb
stos
xor
fnsave
adc
push
enter
and
ljmp
stos
out
xchg
sub
shll
mov
mov
xor
pushf
mov
cmp
pusha
mov
pop
lods
add
pop
addl
sarb
sub
pop
iret
in
and
std
in
repz
sub
jno
daa
rorb
adc
hlt
jb
sub
enter
dec
jg
push
xor
sbb
and
fcompl
call
and
jmp
imul
bound
and
jbe
adc
xor
inc
hlt
lock
std
jb
movq
cmpb
push
mov
mov
inc
lods
xlat
aas
gs
fmul
jbe
mov
bound
or
rcl
pusha
in
push
dec
ret
add
jbe,pn
cmp
push
cwtl
scas
mov
mov
call
mov
or
cmc
pusha
mov
cmpsl
push
jge
pop
hlt
repnz
imul
pop
inc
popa
orb
nop
push
pop
lods
push
or
rcl
movsb
adc
mov
imul
movsl
sub
cld
mov
add
inc
into
lea
shll
pop
add
mov
sub
push
out
movsl
mov
lret
mov
mov
sbb
mov
mov
or
mov
out
pop
int
mov
xor
setle
jl
inc
adc
xchg
ja
or
fnstcw
and
or
stc
inc
leave
lea
xor
jbe
cmpsb
sbb
jb
mov
inc
jmp
pop
ret
iret
push
test
in
adc
dec
lcall
and
stos
lods
fwait
jl
inc
arpl
xchg
sbb
repnz
cmp
rorl
mov
mov
and
cwtl
sbb
mov
mov
daa
and
clc
clc
pusha
cmpsl
out
jp
push
ds
adc
push
push
aad
cmp
xchg
push
pop
mov
cmc
icebp
ds
out
pop
das
popa
jge
pop
rcll
scas
mov
push
mov
jne
cmpsb
push
and
pop
and
jbe
js
push
lret
pop
das
inc
mov
mov
pop
pop
xchg
dec
dec
int3
add
cmp
roll
aad
add
push
test
movsl
mov
and
lods
aad
sbb
stos
fistl
adc
jmp
and
dec
jge
adc
lret
enter
dec
xor
std
pop
inc
mov
inc
jl
jb
fiadds
xlat
inc
idivl
xor
roll
stos
cmc
mov
dec
dec
cmp
out
fiadds
mov
sbb
faddl
jl
mov
lods
test
lret
int3
xchg
or
mov
adc
imul
pop
sbb
cltd
xchg
mov
imul
cmp
movsl
inc
xor
push
jp
cwtl
gs
rclb
sub
ret
jp
xchg
int3
jmp
and
repz
push
arpl
or
stc
stos
dec
xchg
push
outsb
test
xchg
jns
rcrl
push
and
dec
adc
cmp
pushf
pop
push
push
or
lock
int
lcall
add
mov
inc
icebp
inc
inc
test
xchg
lods
cmpsl
cmp
sub
dec
cmpsl
gs
daa
call
fistpll
int
pop
lret
dec
and
add
pop
sti
mov
cltd
orl
inc
cmc
push
dec
sbb
clc
jne
lret
push
push
and
cmp
inc
das
adc
pusha
sub
cwtl
ss
push
lods
inc
fwait
inc
fidivrl
pop
int3
jl
mov
and
in
pop
add
sbb
stos
popf
jmp
fists
icebp
icebp
mov
jp
cmp
dec
outsb
xor
scas
call
push
leave
les
test
sbb
xor
mov
xor
loopne
movsl
and
arpl
fwait
sub
jnp
mov
pop
ss
xchg
sub
push
sarb
test
scas
negl
or
enter
xchg
and
stc
gs
adc
mov
into
pushf
push
cmp
insl
add
mov
adc
shlb
push
ror
paddsw
adc
aad
rcrl
pop
lret
in
and
lods
cwtl
xor
pop
jne
fcomi
mov
mov
out
mov
jmp
sarl
dec
in
dec
xorb
jnp
pop
push
pop
rcrb
enter
shrl
jg
aad
ja
ja
mov
cmp
popf
or
and
bnd
push
jnp
mov
adc
push
fbstp
jmp
jmp
out
xchg
adcl
divb
push
inc
out
std
adc
mov
push
mov
or
xchg
stc
sbb
push
lock
mov
aaa
pushf
cld
jmp
pop
jmp
daa
xchg
jmp
adc
or
shlb
cmpw
and
imul
jnp
mov
lock
test
or
mov
or
cmc
pop
nop
fs
and
shrb
rorb
add
inc
jb
xchg
lds
lea
js
adc
dec
mov
hlt
rcrl
mov
aaa
fwait
xor
pop
push
push
movsb
aas
test
mov
adc
aam
aaa
aad
rcrb
mov
aas
rcl
cmpsb
jge
inc
mov
xchg
ds
push
lock
out
hlt
and
bound
or
sub
mov
cmc
sub
out
cmpsl
call
test
movsb
sbb
ds
stc
fnstenv
mov
adc
sbb
push
sub
xor
mov
adc
mov
insb
sahf
push
sub
and
mov
popf
fsubs
mov
or
stc
loope
mov
cmp
mov
mov
fstps
pop
jl
outsl
ror
pop
outsl
adc
loop
pop
cmp
shl
xchg
lods
pop
lret
fxch
adc
jnp
test
leave
ljmp
push
ret
lcall
mov
daa
iret
addr16
out
mov
push
lds
mov
and
xor
mov
fsubrl
cmp
or
cmc
lahf
lahf
test
test
and
fildll
adc
aad
into
addl
push
fscale
rolb
ljmp
mov
pop
adc
push
pop
enter
fisubs
xlat
and
test
sbb
outsl
mov
xor
pop
push
jne
jo
inc
std
pusha
les
insb
in
or
jae
push
pushf
pop
or
xor
jb
add
mov
popa
rorb
push
jo
aas
fisttpll
sub
fnstcw
dec
and
mov
test
sub
jmp
push
cld
test
ljmp
xchg
inc
push
pop
lods
sbb
xchg
mov
dec
dec
xchg
adc
or
jne
mov
out
int
mov
aam
js
and
jle
mov
fldl
stos
or
sub
aam
xchg
mov
jle
xor
cmp
dec
mov
cli
out
jne
stos
clc
mov
pop
jp
jno
dec
mov
out
xor
test
aad
andb
clc
cmp
inc
cmpsb
sbb
aaa
stc
das
push
loopne
cltd
push
fildl
dec
es
push
cmp
xor
cmp
sub
cmp
cmc
test
lock
test
pop
lahf
pop
idivl
cmp
jg
xchg
push
sub
pushw
mov
rorl
je
jae
ja
es
pop
aad
ds
xor
rcll
lret
xchg
jae
sbb
add
add
dec
pop
jbe
cmpsb
and
stos
mov
push
jne
xchg
ret
dec
xchg
push
stos
loop
pop
and
jg
sub
dec
ret
orb
insl
pop
leave
mov
rcrl
lahf
in
in
leave
and
int
xor
fstpt
sarl
mov
inc
inc
test
fs
lcall
hlt
inc
inc
into
or
cmp
movsb
stos
lret
gs
loop
clc
mov
outsl
cmpsl
jae
push
inc
mov
dec
mov
out
sub
imul
je
inc
outsl
loopne
repz
es
add
icebp
shlb
mov
add
jno
lea
imull
pop
adc
scas
fimuls
push
loop
lret
incl
jl
cld
loope
adc
or
sub
add
enter
ret
mov
ret
test
mov
sub
ret
dec
xchg
inc
leave
sub
popa
push
mov
mov
lcall
rclb
je
in
stos
mov
mov
jno
outsl
xor
das
das
sub
inc
jo
sbb
incl
push
mov
ja
mov
scas
out
repz
ret
test
jl,pt
and
movsl
push
test
push
aam
jnp
das
inc
ja
enter
in
rcll
and
sbb
jmp
and
aas
add
sti
xor
div
lret
rclb
mov
sbb
xchg
xchg
cmp
sub
cmpsb
jno
fisubrs
mov
pop
fimuls
inc
lcall
jmp
cwtl
and
iret
xor
push
and
push
mov
out
loop
add
out
test
aas
xchg
push
dec
sahf
or
lahf
or
add
insb
mov
cmp
jmp
cmp
mov
mov
add
and
and
and
push
add
sbb
lock
mov
add
into
mov
das
jno
fldl
ret
std
cmp
add
stc
pop
xchg
xor
dec
xchg
jecxz
push
xor
shlb
cmp
cmp
mov
mov
push
loop
xchg
movsl
sahf
xor
test
lods
addl
pop
xchg
in
xchg
subb
adc
adc
cltd
lea
test
xchg
xchg
test
in
mov
sbb
es
pop
nop
in
inc
adc
sbb
rcrl
lds
mov
or
push
jg
outsb
and
cs
rolb
dec
adc
cmpsb
rcl
movsl
icebp
arpl
popa
popf
inc
lret
pop
xor
sbb
out
cmp
xchg
add
rcl
or
das
mov
mov
mov
xor
cmp
sbb
shll
sub
in
xor
out
cmp
mov
pop
xchg
lea
loopne
cmp
pusha
inc
movzbl
add
sub
add
popa
mov
push
test
mov
mov
es
shrb
loope
test
in
add
stc
add
faddl
inc
jns
pop
out
cmp
xchg
cltd
cli
add
push
je
pop
sbb
out
mov
shlb
mov
aas
jb
shll
mov
rcrb
lcall
jb
inc
or
stc
xchg
add
mov
popf
or
loop
imul
push
mov
out
pop
stos
push
fmul
xor
inc
out
jg
imul
mov
sub
adc
sub
xchg
jns
and
xchg
scas
das
mov
push
cmp
jge
mov
xor
mov
xor
ret
and
cs
sti
outsl
fldl
jle
icebp
cmpsl
repnz
push
inc
jbe
je
int3
cmc
xor
jecxz
mov
out
lock
jbe
push
inc
int3
mov
adc
add
push
cmc
out
xor
add
add
sub
jg
sub
and
add
push
adc
pop
push
iret
mov
mov
push
leave
and
xor
jae
mov
xchg
bnd
sub
lahf
mov
sbb
dec
xchg
or
addl
cmc
je
dec
popf
sbbl
into
xor
into
movb
dec
popf
sub
mov
lods
imul
xchg
sbbl
or
or
aad
popf
mov
stos
add
ret
scas
sbb
lret
sbb
jg
inc
cltd
call
dec
insl
imul
sbb
push
stos
or
cwtl
cli
fst
push
add
repnz
movsl
push
gs
pop
cmp
sti
lret
mov
aad
out
xchg
push
in
bound
inc
xchg
dec
push
jle
jmp
lahf
sub
daa
jg
mov
icebp
enter
xchg
cmp
pop
int
push
insl
adcb
adc
mov
push
mov
jp
jne
dec
mov
or
insb
jle
add
shlb
ss
inc
cmp
pop
std
rcll
mov
aas
stc
pop
enter
ljmp
cmp
cmp
aas
and
mov
lret
dec
xor
or
aaa
fistpll
xchg
hlt
inc
and
mov
mov
mov
xchg
add
and
dec
jp
jb
mov
in
imul
jb
stos
les
or
fldt
shrb
adc
xchg
pop
int
sub
filds
cmp
inc
test
add
out
dec
outsb
pop
adc
or
push
lods
inc
inc
mov
jae
xlat
jg
mov
rorb
pop
pop
dec
addr16
jle
ffree
xchg
and
jnp
inc
jnp
sub
sbb
popl
rcl
dec
enter
jg
test
mov
data16
in
cmp
popf
leave
hlt
imul
loopne
inc
bound
dec
dec
into
lock
adc
enter
inc
arpl
movsb
andb
test
loopne
cmp
pop
repnz
inc
add
insb
pop
mov
dec
sti
dec
inc
pop
mov
sbb
inc
or
sub
add
sti
jb
cmc
ja
jmp
cld
loope
ror
inc
sub
jb
add
or
or
push
xchg
ljmp
inc
dec
pushf
jno
stos
sar
add
ret
add
mov
pcmpgtb
sub
sub
mov
mov
popf
mov
push
nop
xor
roll
mov
lcall
ret
cli
pop
outsl
std
repnz
lods
lahf
adc
jno
and
decl
push
ljmp
jno
mov
std
push
xor
shlb
stos
popl
and
popa
mov
in
jge
push
stc
add
into
push
add
xor
movsl
mov
mov
or
stc
stos
cld
xchg
jl
addl
jle
fs
repz
mov
idivl
jne
dec
nop
mov
fstl
hlt
cmp
pop
fs
dec
dec
inc
dec
divps
push
push
dec
test
jmp
daa
xlat
sub
stc
int
fcmovbe
sbb
inc
mov
inc
test
sub
cli
pop
frstor
std
xchg
nop
js
push
mov
pop
mov
xchg
jo
jns
mov
enter
mov
out
inc
add
jg
inc
cld
in
jl
lahf
jg
arpl
shrb
dec
xchg
add
xchg
es
pop
mov
jne
dec
mov
mov
jp
dec
and
out
pop
lods
movsb
test
push
sub
xor
shlb
outsl
add
call
lock
push
ss
pop
mulb
sbb
mov
scas
daa
jmp
mov
cmpsb
daa
ret
mov
movsl
sbb
dec
insb
lret
pop
sbb
cmpsl
push
movsl
and
dec
or
xchg
rcrb
pop
add
insl
dec
push
jae
push
mov
mov
cli
pop
cwtl
jo
cmp
nop
sub
call
mov
push
out
fcoms
imulb
lcall
dec
in
cmpsb
sbb
fldt
adc
pop
jle
ret
imul
iret
or
inc
pop
cmp
aad
jo
mov
stc
sub
pop
and
loop
mov
inc
faddl
mov
jns
sahf
cmp
add
mov
imul
test
pop
xchg
lret
push
jmp
or
mov
and
cltd
push
mov
lea
lods
das
movsb
mov
dec
loop
sti
or
dec
js
cmp
xor
in
adc
out
addl
mov
adcb
jb
adc
adc
dec
inc
cld
in
mov
cmp
scas
decb
mov
xor
scas
inc
rolb
sub
loop
clc
lds
sub
mov
lret
fbstp
rcr
mov
fs
aad
ja
pop
fs
jno
aad
xor
pop
gs
dec
mov
enter
adc
pop
fistpll
out
cmp
ds
pop
add
inc
repz
lcall
push
mov
repnz
iret
call
xor
imul
dec
cmp
aas
xor
pushf
out
and
cmp
or
sub
push
jp
arpl
and
repz
adc
mov
mov
loopne
sbb
cld
shll
out
mov
je
xchg
adc
and
xchg
dec
dec
adcb
pop
push
lahf
inc
jp
mov
lds
and
xlat
nop
or
xor
mov
cmovno
lcall
insb
mov
out
cmc
xchg
push
lea
ret
test
xor
jle
mov
mov
push
dec
mov
cmp
and
mov
mov
sub
dec
push
inc
shll
pop
lods
pop
cmpb
inc
jle
out
mov
inc
and
mov
mov
add
fists
ja
and
add
push
and
push
imul
xor
repz
mov
aas
aas
sbb
and
mov
sbb
add
sbb
andl
mov
or
ds
stos
xchg
outsl
mov
cmp
lods
lods
ss
aam
sarl
mov
cmp
fwait
cld
ret
jg
fs
aad
scas
adc
mov
pop
pop
adc
outsl
je
mov
adc
ljmp
xor
in
mov
dec
and
fucomip
jp
pusha
xor
push
je
push
cmp
hlt
inc
data16
xchg
jp
mov
adc
icebp
dec
mov
mov
cmp
mov
cmp
mov
mov
enter
cmp
cmpsl
mov
mov
and
nop
stc
jno
xchg
add
add
xor
rcl
cmp
sarl
ja
cltd
dec
packssdw
sub
xchg
js
dec
pop
nop
ja
mov
rcr
test
ficoml
jecxz
xchg
iretw
cmp
cmp
insb
xlat
lods
cs
ficompl
or
dec
ja
jg
pop
fs
arpl
xor
or
mov
xchg
stc
jecxz
pop
xchg
xor
fnstenv
outsb
leave
push
pop
aas
fcomps
cmpb
cmpsl
xor
in
fisubs
sub
inc
mov
dec
lds
mov
aas
fbstp
hlt
xchg
or
mov
data16
nop
pop
ja
sbb
mov
xchg
mov
jno
inc
inc
xor
into
cmpsl
fstpl
pop
push
mov
loopne
inc
fs
and
ljmp
push
sub
jp
and
cmp
stc
pusha
xorl
stos
cs
inc
mov
test
scas
xchg
ret
cltd
add
sti
inc
adc
jmp
jp
mov
mov
fisttpl
pop
idivb
mov
cli
push
push
inc
dec
shrl
scas
mov
fidivrl
push
or
sbb
mov
stos
jmp
shl
dec
lahf
testb
test
test
lods
loopne
adc
out
in
sbbl
mov
in
cmp
mov
cmpl
sub
mov
mov
addb
pop
addr16
nop
inc
sbb
dec
les
cmp
add
push
jp
and
xchg
repz
insb
insb
adc
xchg
pop
iret
jecxz
xchg
and
dec
insb
fwait
jbe
mov
push
or
in
add
mov
mov
in
mov
lods
inc
test
mov
enter
jae
aad
xorl
sub
inc
jge
pop
daa
cmc
sar
lods
mov
push
sbb
add
stos
inc
push
or
jmp
shr
popa
enter
scas
or
sbb
rcrb
sub
lret
push
adc
imul
mov
negb
shrl
aad
and
mov
xor
add
pop
scas
push
out
pop
dec
mov
mov
repnz
in
fwait
pop
sbb
rcll
push
scas
lods
es
movsb
pop
adc
sbb
jle
push
imul
enter
or
popa
push
jno
lods
xor
pop
fs
cli
dec
cmpsb
push
imul
data16
mov
xchg
nop
fs
xchg
pop
out
daa
dec
les
pop
movsl
pusha
shl
subl
cmpsb
add
jbe
xchg
lods
dec
lahf
jnp
cld
push
lret
out
mov
lds
outsl
pop
iret
lret
cwtl
inc
sub
int
test
dec
test
push
xchg
push
and
mov
out
outsb
inc
jns
cmpsl
cmp
insb
and
ret
fstl
mov
jecxz
mov
jns
pop
xchg
mov
aas
push
shll
xchg
rcl
clc
stc
nop
fsts
out
mov
push
call
arpl
cli
scas
dec
pop
fdivrl
adc
das
es
jp
xor
pop
jl
pop
or
movsb
xor
inc
or
fsub
cmpsb
xchg
or
int3
pop
test
mov
jge
out
loopne
aas
inc
nop
xchg
push
pusha
jge
mov
dec
movsl
mov
shlb
int3
scas
mov
sbb
shl
lock
jo
sbb
cs
or
or
xor
sub
push
in
pop
adc
ret
mov
leave
out
test
pop
icebp
mov
inc
insl
and
mov
lcall
test
mov
faddl
ret
mov
sub
push
add
ret
mov
adc
pop
pop
mov
aas
adc
jb
jno
test
and
dec
fnstsw
and
sbbl
sub
push
data16
adc
mov
sub
add
pop
xor
xlat
xor
cli
stos
je
data16
or
mov
data16
and
stos
jnp
mov
ljmp
movsl
adc
mov
lods
loope
bound
or
fcomps
xchg
mov
mov
jle
dec
outsb
sub
lds
pusha
cmpsb
mov
int3
stc
mov
cltd
mov
xor
add
cmc
xor
cmp
xchg
mov
dec
lret
and
mov
mov
aad
je
xchg
lea
fxch
adc
sbb
push
enter
dec
push
cmp
adc
inc
jmp
push
test
cli
sub
cmp
lret
js
fnstcw
test
mov
jmp
and
out
pop
push
cld
inc
test
cmp
dec
or
xchg
lds
pop
adc
and
negl
xor
pop
shll
xchg
xor
fildll
mov
outsb
jo
stc
hlt
mov
cmp
orps
shl
pop
dec
cld
jmp
pushf
pop
pop
mov
rolb
movsl
enter
inc
sbb
or
aad
sti
test
cmp
push
out
or
je
aaa
push
test
pop
mov
nop
pop
and
xlat
inc
pop
repz
xchg
push
jnp
outsl
dec
jle
mov
mov
les
xor
andl
dec
out
pop
or
test
cmc
push
aaa
add
adc
push
add
mov
popa
sub
fwait
in
cwtl
imul
cld
bound
sbb
rcrb
dec
inc
xor
andb
rorb
adc
insb
and
test
gs
or
sahf
or
sti
les
push
mov
gs
ds
nop
add
mov
sub
rcrb
jae
jg
gs
jg
stc
loop
andl
in
jle
pop
nop
mov
lret
into
push
inc
lods
ret
jge
test
test
xlat
pop
cmpsl
lret
mov
sti
cmp
dec
inc
or
jmp
ffree
aaa
aam
inc
clc
or
aas
adc
loopne
cmp
rcl
cmp
gs
xor
cld
and
insl
jp
inc
adc
sbb
ss
das
jae
outsl
and
push
hlt
imul
mov
push
pop
addr16
and
and
add
mov
ja
xchg
mov
insb
daa
stos
or
lock
gs
shrb
xor
lret
std
jae
icebp
xor
loope
mov
cmp
mov
in
sub
adc
repz
push
cmp
mov
dec
hlt
mov
in
cmp
mov
cmc
add
jmp
push
xor
xor
lock
ret
test
sub
cmpsl
xchg
mov
xor
pop
adc
xor
popa
pop
mov
bound
mov
test
pushf
bound
pop
scas
shrl
or
into
fsubl
sbb
and
push
mov
adc
test
or
stos
fdivrs
fsubrs
sbb
stc
fcoms
cmp
sti
repnz
int
clc
jns
lock
mov
test
cmp
rorb
inc
sub
loop
or
inc
mov
stc
cwtl
pop
lcall
lods
out
aad
loopne
sar
sbb
or
repnz
xchg
arpl
push
cmp
lods
mov
cmp
icebp
adc
mov
scas
mov
inc
hlt
inc
test
jmp
dec
lcall
jns
aam
dec
xor
mov
inc
push
inc
fs
pop
cltd
adc
test
test
lret
inc
pop
mov
psubsb
mov
push
push
sbb
das
add
out
or
jl
mov
mov
scas
cmpsl
icebp
fldt
or
cmpsl
daa
pop
cmc
mov
jecxz
dec
pop
into
pop
dec
push
in
dec
sub
in
mov
cmp
outsb
std
shl
pusha
xchg
test
pop
jg
test
dec
xor
push
sbb
xor
or
mov
push
jns
fnstcw
ret
sub
lods
mov
sahf
cs
gs
jno
repz
sbb
lahf
mov
and
inc
jns
jge
js
push
cmp
in
pop
adc
iret
addb
sbb
lahf
or
jo
movsb
xchg
jmp
outsb
xchg
iret
xchg
xchg
sbb
push
pop
mov
ret
or
jns
in
fcomp
xchg
pop
mov
outsl
add
setge
movsl
xchg
adcl
popa
and
mov
pop
adc
stos
sub
dec
push
push
in
push
or
inc
fnstenv
jo
mov
icebp
lea
and
xchg
test
mov
mov
test
mov
push
sbb
outsl
and
test
xchg
pop
cmpsl
stc
and
lret
gs
inc
lea
sahf
les
sub
cmpsl
aam
sbb
jo
adc
daa
jmp
add
xor
stc
adc
push
loope
fst
xchg
in
arpl
inc
sbb
rcl
pop
hlt
dec
push
mov
push
insb
insl
stos
sbb
push
or
add
mov
pop
into
lcall
into
mov
jns
push
sbb
shrb
mov
push
and
xchg
pop
mov
pushf
add
idivb
jae
push
xchg
fadds
dec
and
loop
fcmovnb
popf
fnstcw
inc
std
outsb
stc
fsubrs
pop
sbb
leave
cwtl
loop
dec
jl
cmp
dec
and
outsb
sbbb
mov
lods
mov
insb
shlb
ja
fdivrs
imul
inc
push
add
mov
out
pop
aad
fcompl
or
mov
jne
test
sbb
cmp
push
push
shrl
ss
push
mov
int
jle
nop
movsb
in
cmp
mov
jbe
adc
sub
push
lcall
fwait
sbb
jge
inc
jbe
daa
sbb
mov
mulb
mov
fnsave
and
push
or
cmp
out
test
mov
loop
inc
loope
lods
mov
pop
aaa
call
jl
sahf
jl
dec
jns
es
cmpb
cmc
jmp
lock
imul
xor
adc
mov
sbb
test
xor
dec
xchg
mov
pop
insb
xchg
cmp
lret
lret
jl
or
test
and
out
cmc
stc
jg
loop
ficompl
add
flds
mov
stc
mov
stc
cmp
inc
cmp
aas
addl
mov
pop
cmp
rcrl
jmp
das
aas
arpl
xchg
lret
cmpsl
push
js
jl
cmp
notl
mov
sarb
or
cld
pop
mov
nop
int3
into
mov
repz
or
lds
push
xor
cltd
test
dec
inc
pop
out
rcll
jbe
xchg
into
sbb
mov
add
xchg
mov
mov
int3
mov
scas
into
in
pop
out
xlat
lret
xchg
cmp
dec
adc
xor
insl
icebp
test
push
sub
and
sub
outsl
xchg
push
sbb
sub
mov
or
aad
mov
lods
daa
cwtl
dec
or
or
xchg
dec
rolb
outsb
jg
iret
add
test
int3
xor
addr16
lret
mov
mov
pop
nop
push
pushf
mov
cld
jge
cmp
xor
adc
sub
pop
adc
push
mov
cld
daa
out
mov
adc
imul
xlat
xchg
mov
xchg
push
mov
push
fsubrl
pop
gs
or
jae
adc
into
or
in
lahf
fmull
into
lods
mov
push
jmp
push
lea
mov
cmp
pop
ret
jbe
mulb
cmp
or
xchg
lret
add
xlat
xchg
ret
std
or
loope
subb
mov
add
mov
jne
loope
out
mov
pop
or
movsb
xchg
sbb
scas
lcall
out
and
adc
mov
cmp
jno
addb
mov
mov
push
xchg
scas
idivb
stc
mov
nop
push
lcall
fidivs
xchg
stos
dec
sarl
scas
push
lock
stos
js
sub
aam
jge
subb
pop
and
scas
xchg
stos
rcll
aad
pop
lock
push
mov
lret
pop
mov
psadbw
bound
aam
aas
stos
cmpsl
clc
mov
shll
in
cmp
and
cltd
adc
xchg
dec
sub
sbb
pop
mov
cmc
xchg
jb
lahf
sub
jecxz
push
and
inc
adc
insl
or
xchg
fimull
mov
sub
divl
cltd
bound
add
add
push
jge
mov
insb
imul
mov
xchg
inc
pop
out
mov
rcrl
loop
jae
push
or
mov
add
pushf
pop
mov
jns
shll
xor
cmp
xchg
jle
or
pusha
jno
fiadds
xchg
mov
mov
movsl
mov
inc
orb
lods
jle
repnz
cmp
repz
cwtl
popa
imul
data16
movsl
dec
sti
lods
adc
dec
adc
test
push
stos
imul
lods
mov
subl
mov
mov
push
inc
jecxz
cli
sbb
and
cmc
sub
popf
and
mov
xchg
repz
or
idiv
scas
dec
inc
mov
imul
lods
or
movsb
std
mov
dec
cmpsl
clc
idivl
lea
jmp
ja
jmp
out
scas
dec
pop
not
in
sub
jo
dec
out
fldl
jl
sbb
rolb
stos
pop
push
mov
pop
mov
fmul
ss
jae
xchg
mov
jmp
inc
std
jge
or
orl
rclb
and
adc
jle
in
cmp
mov
jp
xor
bound
cmp
inc
loopne
imul
mov
add
mov
loopne
pop
jmp
sti
cmp
rolb
jmp
xor
ja
std
mov
sub
and
xchg
iret
aas
repz
in
adc
sahf
scas
loope
test
cli
cmpsl
add
mov
mov
add
adc
pop
dec
jbe
adc
movl
adc
sahf
inc
push
xor
fisttpl
push
ds
mov
add
ret
test
push
mov
pushf
aaa
or
dec
int
cmp
hlt
stos
mov
add
lcall
addl
cmpsl
mov
pop
xor
sub
out
outsb
and
movb
not
test
xorl
addb
mov
test
out
mov
je
push
push
stc
pop
push
shr
jnp
sub
adc
pop
sbbl
jo
das
in
mov
out
xor
fildll
leave
jp
mov
xchg
cmp
imulb
mov
dec
movsl
dec
int3
mov
and
jae
popf
repz
repz
lret
mov
in
aad
das
jge
pop
inc
jg
push
sub
mov
mov
push
add
jl
aam
fldln2
loop
pusha
pop
cmpsl
inc
fsubrp
cmp
lahf
push
cld
test
jecxz
lret
cltd
add
adc
rcr
ljmp
insb
call
xor
cmpsb
xchg
addl
or
pop
xchg
imul
or
push
scas
movsb
and
adc
hlt
and
pop
sbb
int
adc
cmp
cmp
stos
sub
adc
pushf
and
sbb
paddusb
dec
imul
scas
mov
mov
xor
out
push
repnz
pop
jno
fnstsw
mov
sti
test
mov
dec
mov
push
mov
imul
add
lret
jmp
mov
mov
popa
cld
dec
or
mov
mov
pop
testb
insl
adc
into
mov
push
cmp
flds
add
sub
lock
xor
ss
mov
and
enter
int
sbb
adc
mov
mov
sbb
fisttpll
movsl
xor
pop
mov
sbb
mov
jne
xor
les
sub
xchg
cmovs
sbb
pop
fisubl
pop
lret
dec
inc
dec
mov
cmp
lods
shrb
imul
fs
cld
xor
daa
int3
call
fwait
push
lds
and
dec
dec
or
into
sub
jb
loopne
lock
dec
dec
push
mov
repz
stc
adc
in
push
movsb
cmpsl
out
mov
xchg
sub
inc
or
fwait
adc
aad
xor
jbe
stos
jmp
mov
sahf
and
mov
jecxz
inc
mov
mov
push
push
push
aaa
mov
test
push
inc
sub
repnz
sub
fwait
in
pop
xor
loope
scas
je
jle
pop
lock
jp
adc
xor
imul
jbe
jne
jmp
inc
icebp
sbb
sbb
icebp
xchg
dec
popa
rorb
scas
push
test
fnop
insl
test
mov
bsf
and
push
outsl
mov
nop
jmp
xchg
sub
insb
cmp
cld
sub
pop
sub
push
sub
sbb
rcrb
test
les
jnp
or
sbb
lock
daa
mov
sbb
mov
sahf
movsb
xchg
mov
test
into
fildl
ljmp
inc
mov
repz
dec
push
js
cmp
pop
xor
fs
xchg
loopne
add
sti
xbegin
mov
pop
mov
outsl
push
aaa
mov
and
outsb
fs
cld
xchg
xor
push
sbb
js
inc
out
std
cmpsb
lods
push
aaa
xor
fcoms
push
cmp
popf
aam
push
cwtl
dec
jno
or
adc
jle
outsl
andb
or
test
dec
lods
cmp
jl
and
mov
mov
push
pop
fwait
mov
test
push
push
or
mov
cli
shll
pop
idiv
pusha
push
sub
dec
inc
mov
pop
jecxz
inc
outsb
cltd
loope
bound
xchg
aas
int
rolb
ret
leave
out
sbb
fsub
lods
dec
add
mov
add
outsl
dec
sub
int3
in
cmp
imulb
sarl
call
lods
fwait
pop
loop
pslld
adc
pop
adc
ds
sub
xchg
insl
or
sub
push
add
repnz
test
push
dec
dec
mov
and
xchg
adc
pusha
push
es
shll
jae
in
cmp
or
jb
inc
and
push
cld
xchg
out
adc
and
jno
loop
into
jle
in
repz
rorb
sbb
movsl
sarl
scas
mov
pushf
lret
ffreep
sub
pop
mov
dec
add
xor
dec
pusha
cli
daa
stos
out
shr
lret
sbb
pop
mov
pop
aam
xchg
xchg
fdivs
add
dec
and
push
adc
jo
cwtl
jl
inc
jae
aad
cli
add
sahf
fst
cwtl
inc
popf
dec
push
jecxz
gs
mov
push
mov
mov
dec
nop
lock
mov
inc
popf
xor
imul
out
test
cmc
xchg
sub
or
mov
into
xchg
sbb
insl
ja
iret
xchg
cmp
loope
imul
cltd
lods
xorb
es
pushf
xchg
mov
mov
mov
mov
cmp
push
arpl
jmp
dec
rolb
and
xchg
xchg
xchg
and
cmp
mov
out
clc
mov
jecxz
loop
sub
es
push
sahf
xchg
jecxz
icebp
cmpb
sti
and
sbb
mov
cmp
lcall
or
imul
or
mov
data16
xchg
push
jno
adc
test
data16
sub
dec
jge
xchg
xor
push
xchg
pop
jmp
mov
nop
pusha
dec
push
popa
test
movsb
dec
cs
insl
xchg
jne
mov
fists
rcl
das
cli
sub
dec
xchg
rolb
fstps
xchg
adc
jnp
mov
aam
in
sahf
int3
push
adc
js
jp
scas
faddp
pop
das
xchg
lods
push
call
adc
ret
push
mov
cmp
jae
pop
xor
icebp
jnp
loop
ss
stc
scas
ja
int3
jae
inc
and
dec
mov
adc
xchg
lret
adc
mov
mov
mov
aam
mov
punpcklbw
cld
in
imul
data16
xor
aad
lods
xchg
int3
push
cmpsb
mov
mov
mov
xabort
jle
and
bound
arpl
mov
es
in
and
pop
cmpsl
arpl
into
lcall
data16
cld
ret
setns
mov
inc
sbb
insl
mov
ljmp
jg
insb
orb
mov
or
fwait
jp
jnp
add
clc
insl
jp
ret
popf
in
call
and
jne
lock
push
and
test
inc
push
cmpsl
negl
loopne
jmp
daa
jg
and
mov
push
xor
out
sti
into
xchg
dec
inc
orb
jmp
xor
push
adc
sbb
movsb
xorb
inc
sub
mov
rolb
aam
mov
inc
cmpsb
arpl
cmp
pop
xchg
push
in
sbb
mov
cld
jnp
ja
cmc
loopne
mov
jle
shrb
mov
sub
cmpsl
ja
or
ja
xlat
imul
push
xorb
aaa
jmp
jbe
push
imul
mov
inc
jecxz
mov
out
fnstcw
dec
into
and
mov
mov
xor
jns
or
push
pop
stos
aad
xlat
sahf
ret
ja
xchg
cwtl
push
pop
adc
xchg
cmc
cmp
sbb
and
or
in
movsb
loop
mov
dec
sbb
pusha
cmpsl
sbbl
dec
sub
mov
loop
or
add
mov
sub
mov
push
pop
insb
ss
cltd
ret
jg
mov
mov
mov
stos
movsl
movl
push
pushf
jno
stos
dec
lahf
pusha
int
mov
jp
movsb
mov
jne
sub
pop
xchg
ret
mov
mov
in
add
into
inc
adc
rcr
rorl
imul
out
test
fwait
repnz
mov
ffreep
cli
rcrl
xor
adc
cmp
test
jb
adc
bound
jp
jle
pushf
dec
insl
test
and
dec
repz
sbb
sahf
daa
inc
cmpl
jp
push
popa
or
sub
xchg
xchg
js
xchg
jbe
add
sbb
push
repnz
mov
jp
lock
sbb
mov
push
jnp
mov
in
js
popf
mov
dec
or
leave
in
sub
clc
sti
inc
cmp
cltd
imul
pop
sahf
cmpsl
bnd
outsb
addr16
mov
mov
sub
loope
mov
mov
arpl
cmp
leave
add
es
and
fildll
es
mov
mov
mov
shll
push
jmp
jbe
insb
xor
imul
mov
mov
cli
sub
adc
lea
out
mov
push
ss
aam
pusha
movsb
sti
cmp
loopne
pusha
jb
cld
mov
shl
lahf
or
filds
imul
jmp
inc
rorl
into
xchg
mov
cmc
int
push
xor
cli
jbe
js
adc
inc
mov
pop
and
sbb
jne
or
pop
iret
andl
and
jnp
adc
stos
mov
dec
mov
shrl
sub
add
cmp
add
in
fxam
imul
push
jge
sti
adc
xor
jns
loop
mov
cmp
xor
out
push
es
push
je
in
jle
adcl
stos
sbb
fcmovnb
imul
xchg
dec
negb
cwtl
loop
sbb
int
imul
or
xchg
sbb
outsl
cmp
aas
ss
or
out
jg
xor
xchg
fdivp
sti
daa
push
cmpsl
sub
fidivl
mov
test
and
je
sahf
loope
mov
popa
mov
cs
ret
out
pop
ss
ror
inc
add
mov
loop
xor
mov
mov
adc
cmp
in
aam
aas
mov
sub
ja
div
scas
test
jmp
xchg
jmp
call
xor
and
lods
jg
mov
mov
jle
jb
hlt
imul
int3
and
inc
and
and
arpl
add
ja
pushf
mov
adc
lcall
insl
clc
jbe
insl
jo
dec
testl
lret
adc
dec
xor
dec
sub
fmul
adc
imul
test
xchg
adc
or
rolb
add
xchg
adc
mov
push
popf
int3
and
pop
lret
sub
xchg
add
mov
mov
rolb
xchg
push
xor
in
push
jne
in
sub
cmp
or
insl
insl
mov
xchg
mov
cmp
pop
fdivl
pushf
jge
lods
sub
data16
jno
add
call
rorb
mov
lods
jns
cmp
clc
pop
aas
mov
addr16
in
call
pop
add
xchg
mov
inc
movsl
sbb
enter
lret
sbb
and
mov
nop
cli
pop
sbb
and
call
pop
mov
inc
xlat
mov
xor
imul
int3
repnz
jbe
mov
inc
dec
xor
inc
mov
fpatan
clc
iret
js
inc
and
neg
mov
and
mov
inc
jmp
cld
adc
xchg
push
push
xor
popf
add
sbb
arpl
jno
push
push
jo
pop
adc
xor
pop
mov
daa
movsb
dec
xlat
or
adc
pop
sbb
cld
mov
fsubl
dec
fwait
xor
movsw
ret
sub
iret
and
jle
fcmovne
scas
sbb
outsb
push
test
jmp
rcrb
jb
xchg
int3
ljmp
in
test
fsts
lret
ljmp
push
and
jo
test
push
sub
pop
nop
out
andb
insb
fcoml
test
lods
mov
loopne
mull
cmp
mov
aam
mov
faddp
fdivp
movsl
std
fstpl
loopne
sbb
nop
lret
push
sahf
xor
adcb
push
sti
sub
cmc
in
scas
mov
lea
sub
cmc
pop
fdivrs
add
mov
add
ss
dec
cmp
add
cli
mov
dec
cs
imull
leave
and
jb
ret
xchg
pop
bound
fcom
in
pushf
or
cs
lcall
xorl
lods
xchg
int3
sti
iret
mov
arpl
cmp
xlat
inc
mov
push
ja
push
mov
and
not
jae
dec
daa
mov
sub
and
fsts
inc
flds
add
outsb
sub
inc
mov
add
std
inc
pop
scas
dec
mov
push
shlb
and
es
mov
cltd
adc
sbb
cmp
es
popaw
sub
push
addb
pop
into
sbb
test
enter
leave
cli
sbb
iret
adc
stos
rorb
callw
pop
jle
cmp
lret
jge
loop
dec
lods
out
mov
jecxz
loopne
adc
clc
xchg
pop
fsubrl
mov
pusha
xchg
aas
imul
addr16
sbb
xchg
jne
cmpsb
lret
repnz
fisubrl
lds
insl
lds
jns
sbbb
mov
xchg
inc
inc
int3
jbe
into
adc
cmp
mov
daa
test
outsl
push
sbb
out
outsb
shlb
push
dec
rolb
adc
jae
cmp
je
cmp
push
fs
push
xchg
mov
pop
out
rcrb
fcmovnbe
xchg
sub
shl
push
fbstp
inc
ret
and
and
lahf
push
testl
lret
out
xor
push
push
xchg
push
in
addr16
sbbb
inc
ret
add
scas
mov
xor
or
outsl
add
ret
shlb
sahf
shll
and
idiv
xlat
mov
and
or
dec
daa
lock
push
mov
jno
scas
sbb
scas
lret
lock
pushf
fadds
cmp
mov
mov
bsf
or
loop
cmp
daa
push
popa
xchg
push
lock
cld
jne
and
adc
mov
aaa
push
cmpsb
add
shrb
fcomps
or
cmc
stos
lock
mov
fnsave
xchg
fistpll
test
jne
je
or
xchg
or
insb
iret
shl
fadds
fldl
arpl
int3
jle
ljmp
pop
pop
or
jb
pop
nop
inc
sub
lods
mov
fwait
in
xchg
mov
int3
cmpsb
jge
ljmp
je
mov
pop
mov
insb
xchg
cmpsb
pop
movsl
dec
push
xor
push
fsubl
sti
add
test
jle
xchg
lret
mov
movsl
xor
mov
js
mov
in
enter
inc
sub
ss
jmp
jp
cli
cltd
add
mov
or
fidivl
ficomps
stos
jmp
in
pop
xor
mov
int3
fildl
mov
and
pop
lds
cs
push
jge
push
cmovns
pmuludq
adc
cmpsb
inc
nop
or
pop
sub
outsb
push
std
mov
gs
int3
xchg
cwtl
push
pop
add
lock
cmpsb
repnz
cmp
push
push
cwtl
sarl
jle
test
xchg
add
xchg
mov
push
flds
stos
mov
mov
mov
lea
jmp
sub
repz
jns
mov
int
ja
pop
es
jmp
push
mov
rep
mov
or
or
sahf
je
mov
jbe
bnd
test
cmp
xchg
fstpl
and
lret
mov
xor
out
fisttpll
add
mov
lock
jno
ja
jno
inc
scas
xor
jns
adc
adc
ficoml
lock
mov
xchg
and
inc
div
lret
lock
insb
inc
orl
gs
mov
mov
les
jns
add
add
cmpsb
ja
mov
dec
push
xor
sbb
cmp
lods
xchg
push
jle
outsb
insb
push
xlat
or
cmp
addr16
xabort
sbb
out
and
push
inc
mov
sbb
xchg
fildl
sub
sbb
jl
push
ljmp
xchg
rorb
mov
or
adc
cmp
notl
inc
pop
sbb
dec
sbb
outsb
push
jecxz
icebp
push
add
mov
nop
or
pop
out
dec
clc
movsl
clc
or
sub
cltd
mov
pushf
mov
sub
aaa
fucomi
mov
cmp
xchg
push
cmp
cmpsl
mov
ret
icebp
xor
out
mov
cmp
jle
arpl
pop
repnz
jae
pop
fidivl
sub
repnz
jns
test
shrl
int3
inc
inc
sub
fstpl
lcall
sbb
sub
cmp
xor
jmp
mov
daa
mov
pop
loope
dec
mov
add
dec
mov
clc
lods
mov
repnz
add
out
repnz
and
jnp
dec
pop
test
jmp
dec
movsb
inc
sub
cs
fdivrl
sub
movsl
xchg
insl
aaa
lea
lock
inc
jg
jecxz
cmp
testb
pusha
aam
dec
mov
or
mov
ja
cmp
jo
xchg
pop
stc
arpl
jbe
ja
pusha
cmpsl
jmp
enter
enter
daa
xchg
cmpsb
push
push
test
xchg
stos
jno
dec
incl
mov
jl
das
into
mov
imul
int3
in
xorps
add
pop
mov
xchg
mov
push
xchg
fsubrl
cltd
loop
loopne
fcoml
mov
push
loop
mov
dec
sub
fwait
mov
add
in
ret
inc
loop
mov
pop
mov
shrb
popa
pop
shll
int3
jmp
jb
out
pop
xchg
das
sahf
add
ss
idiv
lock
pop
or
and
and
scas
jae
fadds
test
inc
bound
cmpsl
or
jmp
nop
addr16
sbb
fst
xor
cwtl
mov
push
cld
clc
cltd
xor
lods
cmp
add
jl
xchg
sbb
enter
out
loope
cli
aad
pop
pop
cwtl
push
pop
jns
jae
lahf
pop
stos
push
fcmovnb
sbb
push
or
jl
gs
test
cmp
dec
add
mov
jne
lock
mov
in
push
out
add
fwait
adc
ficoml
cmp
out
test
push
rorb
stos
dec
mov
inc
dec
test
test
js
outsb
jmp
xlat
push
fidivrs
es
inc
or
cs
mov
icebp
push
pop
jnp
mov
jnp
mov
inc
xor
lea
sub
jae
stos
pop
pop
xchg
lds
xchg
mov
test
out
cmp
jae
cli
sub
inc
xchg
shl
rorl
inc
xchg
mov
xchg
jl
cmp
fldenv
xchg
jno
or
sub
push
ds
mov
inc
ficoml
hlt
shlb
fsubrs
mov
int
mov
ret
nop
out
icebp
je
jge
gs
call
or
int3
pop
out
lock
dec
sahf
xchg
es
add
mov
jno
jg
push
aad
mov
pop
out
xor
jne
cltd
int
mov
and
mov
adc
mov
pop
push
mov
lahf
adc
int
and
in
lds
cmc
addr16
mov
inc
test
mov
lea
in
out
ljmp
dec
lcall
mov
mov
movsb
mov
fidivs
scas
push
xor
leave
out
sahf
mov
dec
cld
add
xchg
insl
test
fisubrl
insb
mov
shlb
push
mov
repz
push
les
imul
in
dec
test
and
mov
jp
xchg
iret
data16
dec
jl
mov
adc
sbb
inc
inc
and
cmc
mov
icebp
pop
in
ds
in
neg
xchg
or
ret
jbe
inc
divl
imul
xchg
call
outsb
mov
inc
and
loop
xchg
inc
push
inc
push
dec
andb
inc
shll
mov
and
jno
test
lahf
mov
xor
mov
adc
stc
in
push
and
push
into
jmp
adc
or
sbb
add
xchg
cmp
or
vmwrite
cld
roll
lea
mov
cmc
sbb
jae
in
leave
pop
jp
arpl
inc
iret
and
adc
sbb
mov
dec
sbb
aad
ret
inc
sbb
sbb
sub
test
loop
lea
in
fwait
push
sbb
mov
mov
xchg
dec
inc
mov
cli
dec
push
ljmp
out
jae
xchg
ret
or
inc
pop
adc
mov
xchg
pop
sbb
cmp
and
sbb
mov
mov
popf
hlt
inc
lds
push
xchg
out
dec
outsl
sarl
outsb
int3
fstl
push
pop
dec
mov
xchg
in
pop
cs
jmp
sbbl
jp
mov
sub
pop
push
sbb
jns
cs
and
daa
ja
out
pop
divl
add
xchg
sub
cmpsl
punpckhdq
adc
cmp
pushl
arpl
inc
jbe
jbe
ret
addr16
sub
cmc
fmuls
outsl
jp
aas
loope
mov
out
jno
xor
test
fucomp
aam
aam
push
sub
and
dec
je
mov
out
sub
leave
ljmp
pop
lret
pop
xchg
outsl
lcall
inc
bound
sbb
adc
movsb
mov
sarb
push
addr16
mov
lods
ficomps
mov
xchg
cmpsl
xchg
std
data16
outsl
pusha
xchg
mov
jl
stc
mulb
jmp
je
lret
mov
dec
andl
rorb
cmp
and
adc
leave
dec
mov
mov
inc
adc
cmpsb
mov
sti
and
cs
loope
xchg
stos
fmull
sub
iret
xchg
rclb
cmpsl
out
sub
jmp
mov
adc
lods
shlb
iret
sub
jg
in
pop
out
adc
mov
cli
xchg
orb
and
xchg
jne
in
nop
dec
push
lret
xor
into
add
dec
ds
cmpsl
inc
repnz
inc
add
imul
cmpsl
lock
test
repnz
adc
stos
cmp
or
data16
xchg
xor
ljmp
into
sbb
sub
add
or
jb
rorb
lahf
js
sub
mov
mov
push
add
or
cmpl
popa
adc
add
xchg
popa
fs
mov
int3
cltd
adc
repz
les
addb
or
inc
mov
ret
insl
aam
mov
test
push
enter
enter
shll
ss
mov
lods
bound
push
in
pop
bound
cmp
jns
icebp
repnz
lahf
pop
or
and
call
fsubl
mov
cmpsb
add
insb
add
fs
mov
ja
filds
rcl
xor
mov
stos
fdivrs
je
in
fs
mov
mov
xor
std
sub
repnz
xor
add
dec
cmc
push
inc
addr16
rcl
xchg
dec
stos
add
xor
inc
sbb
mov
pop
negl
jecxz
mov
scas
xor
adc
dec
fsubrs
test
cli
adc
xchg
mov
mov
inc
mov
ljmp
xchg
pop
inc
stos
shll
in
jnp
jl
adc
jo
xor
jno
cmpsb
jle
lock
pushf
cltd
cmpsl
in
inc
aas
pop
mov
xor
cltd
cmpl
mov
ja
int3
cmc
pop
push
dec
inc
xchg
hlt
or
outsl
test
mov
loopne
cmp
adc
bound
daa
orl
popf
push
add
test
and
jp
xchg
mov
pop
jbe
adc
sbb
pop
aas
push
push
xor
inc
mov
inc
daa
or
push
mov
pop
xchg
and
push
std
ljmp
xlat
dec
dec
test
mov
push
negl
das
cmpsb
dec
sbb
lcall
stc
adc
pop
sub
stc
mov
mov
mov
scas
adc
pop
xor
repz
pop
push
loope
push
cld
mov
addr16
mov
push
mov
pop
bound
and
movsl
pop
enter
les
mov
add
jno
out
call
mov
sti
pusha
sbb
ret
out
lret
jle
addb
push
mov
aaa
icebp
movsb
jae
loopne
add
xor
in
mov
mulb
pop
orl
sub
adc
xchg
add
sub
sbb
cmp
pusha
inc
cmpsb
sub
add
pop
cmp
repz
mov
pop
insl
sbb
movsb
movsb
dec
cmp
fdivs
sub
int3
sub
ficoms
and
fiadds
xor
hlt
loope
clc
jge
in
sub
icebp
aas
mov
out
ret
in
insb
inc
fstps
pop
in
imul
and
mov
xchg
insl
mov
das
or
ret
test
jg
sarl
mov
sbb
call
xor
jae
pop
add
inc
mov
adc
ja
aam
arpl
repz
jns,pt
dec
rcrb
les
jne
ds
inc
xchg
gs
int
fs
ja
pop
cmpsl
jns
in
mov
hlt
jb
add
add
loope
sbb
mov
out
popf
rolb
push
lret
mov
mov
outsl
push
pop
imul
push
sbb
inc
js
add
mov
cmp
int3
jae
xchg
and
in
test
out
jl
ds
bound
notl
sub
push
dec
dec
mov
mov
xchg
xor
notl
cmp
js
push
xor
popf
xchg
inc
clc
pop
call
push
repnz
leave
jmp
cli
out
sti
jge
movsb
add
jp
pushf
out
mov
mov
rcll
or
sub
lcall
std
bound
sub
or
mov
in
mov
jbe
cmp
jmp
mov
flds
jae
repnz
lods
imul
push
das
fisttpll
divl
and
ljmp
pop
outsl
gs
nop
nop
push
out
fistps
out
push
and
and
je
js
pusha
mov
xchg
pop
jmp
mov
arpl
lea
fbstp
ret
mov
mov
or
test
mov
adcl
jne
fildl
pusha
add
cltd
mull
xor
xchg
flds
xchg
in
mov
xchg
jno
adc
mov
cmpsl
mov
jbe
addl
mov
xchg
lea
jne
shll
loop
jmp
shll
push
mov
lret
jno
nop
lret
stos
lcall
mov
scas
add
je
insl
fwait
nop
add
std
leave
xchg
rcrl
bound
addps
adc
dec
das
mov
jns
dec
and
es
divb
int
mov
ficoms
push
mov
pop
mov
xchg
mov
inc
sub
shll
sbb
jnp
stc
xor
test
rcrl
lods
push
jecxz
dec
out
jge
jl
pop
std
ds
sarl
pop
test
pushf
sbb
jmp
jl
into
mov
cli
ljmp
mov
adc
lret
nop
hlt
insb
xor
push
mov
lcall
jmp
inc
xchg
scas
mov
adc
or
mov
bound
ljmp
add
jns
mov
sti
sbb
push
mov
mov
pop
sbb
clc
dec
jns
push
pusha
insl
lods
dec
sbb
inc
mov
jne
daa
adc
arpl
xor
jle
imul
xchg
mov
and
dec
push
fbld
mov
sbb
jp
icebp
scas
imul
push
cmpsl
sbb
push
shrl
imul
mov
insb
test
stc
adc
mov
pop
shll
scas
or
lods
mov
pop
inc
insb
repz
jae
xchg
pop
mov
cltd
lods
mov
cwtl
sub
dec
ljmp
jae
mov
cmp
fst
jno
mov
push
jle
mov
pushf
stos
ficomps
mov
cld
adc
xor
shrl
mov
push
mov
addr16
sbb
out
int
lahf
jl
inc
pop
fisubrl
pop
jno
push
xor
mov
aad
pusha
mov
jmp
rep
adc
adcl
lea
loop
inc
popf
out
inc
idivb
pop
int3
adc
repz
and
xchg
insl
movsl
aaa
xchg
mov
xor
mov
cmp
stos
das
mov
add
mov
mov
cmpsl
fimuls
jge
xchg
cld
mov
mov
das
cld
idivl
daa
ret
xchg
rcr
sub
pop
cmp
ds
mov
add
nop
lea
daa
rcrl
xor
push
loope
mov
and
pop
jle
and
in
add
dec
push
js
and
cs
insb
add
pushf
int3
push
adc
movsl
xchg
bound
xor
jne
ds
cmpsl
shrl
jl
stc
into
out
hlt
adc
adc
call
and
add
stos
in
cmp
pushf
sbb
cmp
std
icebp
mov
dec
rcr
sbb
sbb
jg
call
jp
imull
imul
mov
push
sbb
stos
loop
mov
xchg
cmpsb
test
adc
les
inc
or
inc
fsincos
inc
cmpb
jbe
mov
and
lcall
push
insl
sbb
dec
aaa
lret
pop
add
xor
lds
jmp
dec
data16
les
sub
sbb
and
mov
into
push
ret
insb
scas
jns
call
mov
enter
leave
cmpsb
add
mov
or
inc
and
stos
dec
mov
lret
lret
inc
fistps
xchg
mov
push
xor
rcl
rcr
jbe
ret
jns
lods
les
sbb
mov
pop
fmul
aad
testl
sbb
pop
int3
xchg
cwtl
sub
inc
pop
mov
xchg
ror
test
lahf
fidivl
jbe
outsb
out
xchg
mulb
adc
mov
jbe
rcl
leave
mov
cmpsb
into
mov
and
gs
rclb
dec
movsb
cmp
jmp
pusha
jmp
scas
daa
ljmp
hlt
pushf
cmp
data16
dec
mov
jno
daa
iret
mov
in
dec
jl
imul
test
stos
xchg
cltd
pushf
dec
xor
pop
add
fs
nop
jbe
mov
fdivrl
push
in
rcrl
or
iret
lcall
movl
hlt
add
jns
fistl
shlb
push
sbb
cld
mov
xor
mov
xchg
mov
cmpb
in
popa
mov
mov
inc
xchg
or
add
add
cmpsb
cmp
sbb
or
jecxz
jns
rcrl
jne
xchg
stc
ds
jo
lds
jmp
in
lea
mov
divl
push
or
jge
bound
dec
sbb
mov
mov
cmpsb
shlb
das
xchg
jge
sbb
pop
pop
mov
loop
fdivrs
pop
popf
es
fnstenv
es
xchg
movsb
cmc
sub
sub
stos
mov
jp
mov
outsl
jne
add
push
pop
xor
dec
push
xchg
ds
sahf
call
xchg
dec
cmp
enter
xchg
xchg
xor
xor
es
dec
pop
mov
jmp
mov
movl
and
inc
inc
push
jg
in
cmpsb
adc
repnz
push
jo
mov
cwtl
push
leave
shlb
push
loope
xor
cmpsb
pop
insl
fistpl
xor
inc
ja
push
mov
push
push
inc
fildll
cmp
addr16
ret
pop
fists
and
xchg
mov
dec
std
jno
cmp
mov
cltd
jo
and
fidivl
mov
fstl
push
shlb
divl
mov
xchg
inc
pushf
push
dec
stc
mov
aas
xchg
xchg
insb
cmc
cwtl
and
iret
jne
cs
aaa
sti
shll
mov
push
mov
ja
dec
or
jb
popa
add
in
push
jl
sti
or
repz
dec
stos
fisubrs
xor
inc
cmp
mov
dec
jp
and
push
jg
pop
push
test
in
imul
push
shlb
mov
lret
pop
in
sub
repnz
xor
in
lock
pop
gs
xor
shlb
mov
inc
dec
push
and
data16
jb
aaa
and
data16
hlt
mov
aad
cmp
pop
or
int
dec
call
sbb
mov
mov
int
aam
push
push
push
push
push
mov
andl
adc
shrd
neg
ret
push
add
xlat
jb
xor
pop
or
sub
adc
add
in
mov
push
shrb
adc
arpl
or
dec
mov
dec
push
ficomps
pop
je
imul
inc
fimull
pop
sbb
out
and
aad
jge
adc
and
rcll
cmp
or
jmp
insl
or
mov
mov
movsl
out
inc
inc
jo
into
adcb
and
arpl
adc
pop
test
jae
ss
in
sarl
icebp
test
adc
aas
lahf
inc
adc
mov
mov
sbb
cmpsl
inc
movsl
xchg
sbbb
sub
push
leave
aas
dec
jnp
and
or
xchg
or
mov
test
rclb
or
push
mov
xor
pop
pop
mov
sahf
pop
aam
lock
jb
roll
mov
cmpsl
adc
insb
dec
dec
syscall
in
sbb
fstpl
lea
cmp
pop
shrb
inc
or
js
inc
bound
cmp
sbb
cs
aad
sbb
cltd
imull
fcmovu
int3
xor
clc
cmp
lods
cmpsw
lds
adcl
les
mov
mov
lods
rclb
lods
xchg
jge
or
pop
lock
mov
xchg
hlt
test
inc
adc
nop
sbb
mov
inc
mov
pop
sti
fidivs
out
mov
adc
add
out
sbb
shll
std
popf
lods
insl
mov
push
faddl
test
lahf
push
notb
out
aad
fildl
ret
ret
add
shll
or
adc
mov
arpl
negb
into
test
pop
cwtl
xor
out
aas
movsb
mov
in
shl
inc
pop
lea
add
mov
mov
iret
push
imulb
mov
sbb
jb
mov
pop
fucomi
xchg
pop
cli
dec
push
addr16
mov
fadds
scas
stc
pop
pusha
test
xchg
push
xor
pop
test
mov
or
inc
call
out
std
or
outsl
mov
js
in
enter
mov
mov
xchg
mov
insl
ret
fsubl
inc
add
stc
ljmp
or
cmp
jb
jge
or
ja
fiaddl
add
xor
inc
je
shr
inc
pop
adc
push
or
or
out
ds
out
fidivrs
or
sub
xchg
arpl
add
bound
mov
inc
dec
mov
test
dec
add
xchg
cli
cld
test
push
add
mov
and
cmpsl
sbb
in
js
adc
jb
ret
mov
sbb
mov
subb
inc
cmc
or
fucomip
mov
cmpsb
lret
xchg
xor
xor
mov
aam
in
xorb
xor
adc
sti
xchg
inc
popa
adc
fildl
shll
mov
mov
xchg
xor
es
mov
jo
jo
dec
pop
pusha
stos
mov
mov
int
and
sahf
gs
push
mov
icebp
hlt
popa
out
add
sahf
rcl
rorb
xlat
imul
sbb
test
or
sub
pop
shr
adc
mov
or
imul
test
movsl
cmp
mov
and
out
addr16
push
mov
loopne
xchg
mov
in
into
cwtl
out
ja
mov
xchg
call
nop
sti
out
mov
test
pop
jno
sub
mov
xchg
mov
int
lods
add
std
or
test
xor
es
aad
inc
movsl
popf
push
lcall
arpl
sti
lret
or
push
cli
mov
jo
mov
xor
and
roll
jl
dec
clc
sub
scas
out
xor
push
cld
lock
xchg
fisubrl
sub
push
mov
push
jl
cmc
imul
or
push
pushf
in
xchg
mov
out
pop
xchg
mov
jle
decl
sbb
aam
fs
stos
xchg
into
test
push
into
mov
mov
adc
incl
adc
sub
enter
jmp
sti
adc
bound
mov
inc
les
movsb
mov
outsb
cltd
mov
stos
xchg
hlt
std
xchg
mov
dec
dec
ja
and
and
dec
push
xor
insl
inc
addl
push
add
push
stos
pop
jno
cmp
clc
mov
addr16
fbstp
daa
xchg
dec
add
push
add
cs
bound
mov
lcall
pop
rcrb
or
aaa
lahf
lea
sub
sub
cmc
jp
movsl
add
ss
cmpsl
pop
pushf
inc
inc
test
jne
aad
fs
push
sbb
pushf
inc
sub
xor
stos
push
push
popa
inc
mov
popa
es
dec
sub
lret
add
negl
aam
cmp
fldcw
and
test
sub
adc
mov
adc
cld
test
divps
pop
fsubl
xor
mov
or
sbb
xchg
push
mov
cli
sub
sub
xchg
jbe
sub
sbb
in
ds
addr16
ret
hlt
and
pop
bnd
shr
out
or
mov
xchg
adc
adc
pop
inc
jl
xor
and
xchg
mov
repz
push
into
pop
or
inc
lret
nop
mov
pop
ret
xor
jno
mov
xchg
add
pusha
mov
pop
xor
jle
pop
loope
and
and
xchg
out
sbb
clc
jnp
jg
adc
add
inc
mov
push
pop
repz
jnp
xor
adc
lcall
arpl
lret
pop
sbb
in
mov
xchg
xor
popa
je
out
mov
ds
mov
pop
andb
xchg
movsl
ja
sub
loop
cmp
fstpl
add
call
dec
outsb
xchg
repz
enter
pop
loop
cmpsb
rclb
fisttpll
jno
outsl
not
sub
in
pop
loope
fstl
das
out
cmp
in
inc
and
jno
push
or
jle
xchg
sarb
loopne
xor
push
mov
ficoml
xchg
mov
pop
xchg
sub
dec
push
sbb
mov
push
cmp
dec
fisubrs
xor
sbb
push
fwait
and
roll
nop
out
in
mov
lret
jmp
mov
arpl
jmp
scas
dec
pop
shlb
testl
aaa
push
add
mov
sahf
push
push
cwtl
mov
into
pop
mov
add
insl
iret
pop
mov
cs
in
mov
push
push
mov
sub
sub
iret
pop
push
xor
sarl
add
cmpsl
inc
out
dec
push
sub
or
adc
sub
inc
pop
xchg
ret
in
loopne
js
add
jnp
imul
cmc
les
push
xchg
inc
notl
jns
shlb
scas
rcll
jge
sub
push
shl
lahf
mov
sbb
xor
in
cmp
add
pop
cmp
jge
mov
push
or
into
fstpl
pop
scas
ficoml
pushf
adc
mov
mov
out
cmp
sahf
sbb
hlt
lods
shl
hlt
inc
lock
jle
cmp
push
cltd
scas
mov
sbb
cli
mov
push
fiadds
xor
insl
xor
or
repnz
call
pushl
cmp
inc
or
rcll
push
rcr
xor
mov
in
movsb
mov
bound
pop
sbb
rcll
or
dec
arpl
ljmp
push
ss
pop
scas
fstpl
mov
sbb
sbb
pusha
and
popa
xor
xchg
xchg
aaa
jnp
mov
add
repnz
dec
sbb
mov
out
mov
arpl
xchg
cmp
mov
out
inc
xchg
sub
and
mov
dec
xor
or
xor
jp
xor
cmp
dec
es
ret
cmp
mov
dec
fdivr
ret
pop
imul
addb
push
aad
cmp
fldt
jnp
repnz
xchg
loope
jge
xchg
subb
dec
ret
mov
pop
fimuls
xbegin
add
pop
jp
ja
out
stos
lods
mov
mov
mov
rol
or
es
out
jle
lahf
imul
cwtl
fisubl
in
repnz
mov
xor
sub
xchg
dec
movsl
mov
mov
popf
inc
xchg
xor
pop
xor
xchg
or
cmc
cwtl
sub
or
jmp
jmp
mov
mov
push
adc
fidivrl
sub
ffree
je
jnp
and
sbb
dec
scas
movsb
cmpb
rorl
xchg
aas
xchg
bswap
icebp
pop
lods
jge
and
hlt
icebp
xchg
xor
sub
pop
ret
jl
xchg
cmp
xor
test
pop
cmpsb
lahf
add
mov
lods
mov
push
sahf
mov
cmp
jecxz
adc
pushf
test
daa
and
adcl
mov
icebp
mov
cmp
fstps
lods
rclb
ds
jb
xchg
xlat
sqrtps
aas
testl
int
aam
gs
bound
xchg
in
or
sub
cmp
push
push
inc
leave
pop
fiaddl
cmc
sub
lods
mov
pushf
cld
jne
stos
or
mov
cld
and
and
sub
sbb
push
cld
cld
sbb
ja
shll
jb
mov
push
dec
dec
mov
scas
std
data16
js
xorl
cs
add
fmuls
lds
pop
insl
mov
xchg
ficoms
idivb
mov
ja
add
cmp
es
adc
jns
cltd
imul
pop
out
jmp
mov
cltd
insb
daa
rolb
in
aam
aam
leave
lods
dec
mov
xor
cmpsl
imul
loop
pusha
aas
cmp
in
int
jbe
lea
and
int
sub
add
lods
lods
daa
mov
sbb
js
mov
stc
push
or
imul
fnstenv
fcomps
push
stc
mov
lret
jle
mov
mov
fists
pushf
xor
mov
jae
adc
and
cmpsl
pushf
les
lahf
sarb
cmp
xchg
and
into
add
mov
arpl
cltd
mov
xor
rcrl
xor
mov
cld
andl
ret
cs
dec
cltd
insb
xchg
mov
orb
sub
sub
aad
gs
cmp
out
shrb
or
test
lods
lds
packssdw
xorl
out
sub
pop
dec
pushf
sarb
ficomps
or
lcall
shrl
lods
fwait
dec
loopne
xchg
sbb
dec
aam
outsb
jnp
push
add
mov
xor
cmp
cmpsl
jmp
mov
dec
xchg
stos
sub
push
push
ret
fiadds
fs
jae
mov
pop
xlat
mov
lcall
add
mov
test
lcall
mov
adc
adc
mov
stc
push
mov
pop
sahf
xchg
sbb
xor
sub
nop
mov
cmp
pop
fidivs
xchg
inc
fmull
sahf
jge
pop
fdiv
test
cmpsl
inc
aam
pop
dec
dec
arpl
dec
and
push
int
xor
imul
mov
pop
adcl
pop
adc
xchg
mov
adc
out
pushf
inc
in
xchg
or
jle
bound
inc
cs
push
fisttpll
addr16
das
mov
sub
and
push
jne
or
pop
sbb
filds
dec
sbb
popa
inc
in
push
sbb
rorb
push
dec
popa
or
in
inc
mov
jg
lods
jnp
scas
mov
stos
mov
inc
sbb
or
dec
loope
out
and
mov
fsts
int
cwtl
mov
sub
sbb
push
xchg
imul
mov
xorl
rcr
loope
lea
mov
pop
fs
clc
cmp
hlt
scas
cmp
jb
rol
lahf
mov
and
cmp
push
or
shll
fisttpl
iret
loope
fs
les
in
jle
sub
test
ljmp
fld
dec
xor
sub
cld
icebp
push
insl
flds
jnp
shld
cmp
mov
outsb
xchg
mov
pop
cmp
aad
cmc
std
daa
sarb
loopne
pop
cltd
inc
and
xchg
hlt
sub
sbb
jg
push
mov
jmp
push
out
jl
mul
xor
dec
packuswb
lahf
mov
imull
enter
shll
or
jmp
xor
lods
fcoms
pop
sahf
cmp
add
inc
push
ret
sarb
jne
and
sub
adc
mov
outsl
cmp
jo
addl
jnp
lret
mov
adc
in
cmpsl
mov
aam
mov
mov
xchg
xor
test
pop
xor
and
fcmovnbe
out
loop
into
jmp
fists
pushf
bound
fidivrl
rol
push
mov
jae
pop
xlat
pusha
and
daa
mov
lds
movsb
inc
jb
data16
loopne
je
jmp
jp
filds
xor
insb
jge
enter
mov
fwait
in
out
std
andl
jle
xchg
or
mov
or
enter
mov
out
in
je
cmp
xchg
js
mov
fwait
add
rolb
sub
jo
popa
daa
dec
xchg
in
mov
add
loopne
in
in
dec
add
jno
test
inc
iret
repz
scas
mov
jns
mov
and
in
cmpl
push
adc
lea
inc
pop
movsl
xchg
inc
mov
scas
mov
in
dec
scas
mov
aas
cmc
test
stos
lods
add
rol
into
cmc
mov
xchg
cld
cmp
out
rclb
push
test
cltd
mov
xor
push
out
add
inc
repnz
insb
aaa
pop
xchg
imul
xchg
xchg
and
incl
xchg
les
xor
addr16
dec
subl
enter
push
push
in
mov
mov
sbb
adc
jae
cmp
sbb
and
xchg
lahf
push
push
cli
jbe
or
out
adc
adc
test
adc
xchg
mov
clc
cmpsl
xchg
pushf
cmp
jg
sbb
sub
cwtl
mov
pushf
sub
jge
sub
inc
fwait
cmpsl
loopne
or
xchg
xchg
inc
mov
aaa
enter
jp
fs
addr16
loope
dec
lret
pop
pop
or
adc
and
push
sti
mov
arpl
mov
dec
or
xor
mov
pop
imulb
cmpsb
paddd
shlb
push
xchg
jl
sub
pop
dec
jmp
add
test
outsb
push
repnz
dec
ds
in
mul
jge
xchg
arpl
rcl
jmp
jp
das
lcall
std
or
mov
lea
sbb
les
or
js
into
inc
mov
pop
xlat
xor
repnz
inc
mov
into
jg
idiv
jo
incb
std
pop
and
push
es
clc
callw
into
fwait
xchg
out
loopne
je
lods
pushf
mov
sbb
sysret
xchg
xlat
pop
sub
cmpb
inc
pop
pop
sub
outsb
scas
mov
out
add
cli
gs
jmp
add
lea
pop
sbb
mov
int3
cmp
sub
adc
xchg
xchg
xor
in
add
repz
adc
mov
fdivrs
pushl
fwait
dec
dec
and
pusha
arpl
test
xchg
mov
jmp
pop
dec
ret
pop
cmp
sbb
pop
mov
jno
pop
dec
cltd
and
adc
mov
push
dec
cmp
cli
and
pop
lret
mov
add
popf
adc
leave
jmp
inc
sub
std
xor
out
pop
and
outsl
sub
sub
push
sbb
jmp
mov
mov
stc
xchg
rorb
adc
sbbl
ss
xor
in
mov
sub
xor
pop
dec
int
jl
push
daa
cmp
mov
scas
or
out
jl
cmp
clc
or
dec
les
test
loope
ss
mov
push
xchg
fabs
cwtl
fiadds
bnd
push
les
out
sahf
cmp
lret
jge
inc
imul
mov
mulb
pop
xor
das
or
cmp
testl
and
dec
aam
or
dec
cmp
mov
in
les
jmp
inc
cmp
scas
push
cmp
pop
adc
inc
adc
std
xorb
push
fisubrl
push
jb
or
lods
iret
addr16
je
jl
mov
shll
jmp
or
cmp
testb
fidivs
adc
dec
testl
addr16
sbb
int3
add
xchg
ds
pop
mov
add
stos
subb
sysret
repz
repnz
orb
jl
and
enter
dec
daa
lret
mov
or
sub
sub
and
repnz
add
lret
aad
push
xor
daa
sub
bound
roll
sbb
sbb
mov
sub
xchg
push
dec
sbb
nop
and
push
cltd
cwtl
xor
stc
adcl
mov
mov
mov
mov
mov
dec
cli
and
sbb
daa
push
ja
mov
mov
ror
fwait
loope
ret
mov
mov
cwtl
sbb
xchg
sub
sahf
fldl
jg
in
rorl
xor
into
das
sub
cmpsb
leave
pop
xchg
cmp
int
fwait
add
pop
pop
jge
addb
js
fstps
sbb
jb
and
cwtl
sbb
imul
fcomip
mov
pmullw
xchg
add
push
and
dec
mov
push
push
repnz
inc
gs
fwait
fadd
ffree
cli
push
sub
daa
fwait
dec
mov
push
lret
inc
scas
ljmp
test
ljmp
add
stc
sbb
ss
add
int3
pop
adc
into
cmp
imulb
out
mov
add
sbb
dec
sti
rcrb
push
cmp
dec
xchg
call
cmpsb
pushf
mov
shll
movsb
inc
add
mov
dec
add
add
mov
or
int3
cmpsl
pop
int
sub
pop
data16
stos
leave
lds
mov
stc
sahf
push
in
popa
cmp
xchg
scas
mov
adc
add
bound
jle
dec
jmp
ret
mov
insl
adc
je
mov
scas
sub
push
bound
insl
test
pop
enter
jp
xor
popf
loopne
jbe
pop
inc
into
mov
test
lcall
mov
roll
jl
mov
mov
gs
lods
cmp
mov
jo
mov
aaa
jmp
pop
mov
pop
pop
bound
cmc
xchg
jmp
pop
adc
aaa
stc
jnp
daa
mov
in
and
scas
stc
add
and
or
je
sbb
mov
in
and
jmp
fisubs
test
dec
out
dec
jp
push
inc
lea
xor
or
push
pop
cmc
popf
std
push
push
push
lret
daa
push
aam
mov
xlat
cmp
jno
xchg
loope
push
cwtl
xchg
cmp
and
nop
divl
mov
xchg
mov
xchg
adc
bound
lret
xchg
jne
mov
mov
sub
cmpsb
jnp
in
movmskps
hlt
idivb
jge
call
dec
sub
ja
jnp
cmp
xor
push
jg
out
nop
and
dec
fidivrl
subl
mov
sti
sti
inc
mov
hlt
pop
mov
in
out
push
push
jo
mov
adc
mov
test
sbb
sbb
xchg
dec
cs
push
nop
xor
cltd
scas
mov
jno
or
out
scas
mov
cmp
repnz
sub
iret
cld
cld
aad
aas
mov
push
std
pushf
adc
ror
fdivl
xor
or
xchg
ret
mov
mov
xor
xor
cli
lock
inc
or
adc
pop
push
xchg
and
mov
jg
fs
hlt
adc
movl
cmpsl
faddl
mov
out
test
push
ja
ret
enter
fbld
jb
lds
or
jo
sbb
mov
repz
xchg
or
mov
adcl
pop
sti
movsb
loope
lea
repnz
mov
mov
cmpsb
enter
loop
and
xor
cld
push
movsl
sub
or
test
mov
flds
test
sbb
cwtl
pushf
mov
adc
dec
push
stos
pop
xchg
pop
inc
fidivrl
fbstp
ds
xchg
adc
or
js
cmp
push
mov
stos
mov
inc
sub
pop
cmc
stc
stc
mov
es
sbbb
mov
cli
stos
in
lds
dec
push
jg
rcrb
outsb
inc
arpl
cmp
xor
mov
lret
push
inc
dec
pusha
mov
pop
xchg
pop
lods
stos
fstpt
push
dec
jecxz
jle
leave
push
test
sahf
pop
mov
sub
sbb
xchg
push
mov
adc
xchg
arpl
dec
dec
or
mov
mov
aaa
mov
xor
add
ss
mov
mov
mov
inc
xchg
sub
xchg
mov
mov
push
fldt
ret
pushf
loop
mov
sbb
add
pop
pop
fdivrs
or
pushf
fisubs
fdivr
cli
lea
inc
aaa
js
inc
outsl
mov
xchg
popf
inc
xchg
sbb
xchg
inc
push
and
add
int3
push
cmp
push
lods
inc
jbe
mov
sbb
and
pop
subl
sub
cmp
clc
test
xchg
xchg
push
jle
ja
stc
stc
or
adc
xor
int
and
add
cwtl
test
jbe
or
pop
ret
cmp
pop
ljmp
imul
mov
outsl
std
arpl
mov
pop
cmp
dec
jecxz
shll
pushf
and
hlt
sti
sub
jp
mov
cmp
jge,pn
xor
sub
xchg
test
pop
cmpsb
outsl
sbb
jae
enter
scas
pop
iret
mov
add
mov
xor
jnp
jge
pmulhuw
inc
sub
pop
add
sahf
daa
lods
adc
cmp
repz
aad
jbe
jle
xchg
sbb
or
leavew
cwtl
jmp
stos
inc
xchg
pop
mov
lock
mov
sbb
dec
ret
jp
pop
jle
sbb
fdivrl
mov
or
pusha
mov
mov
cli
mov
or
shlb
aas
jbe
addb
outsl
popf
pop
in
cmp
push
xor
add
and
inc
fsubrs
aam
in
lcall
jbe
stos
fstl
out
fwait
mov
inc
rcrl
push
mov
adc
and
mov
mov
mov
jbe
push
jl
jmp
adc
pusha
insl
push
jo
imul
xchg
cld
jno
lock
add
add
jae
xchg
xor
push
mov
cli
out
sbb
or
cmpsl
xor
mov
adc
in
loopne
sub
cmp
out
mov
sbb
daa
inc
pop
xor
fcomps
or
and
push
dec
movsb
leave
gs
jns
xchg
cli
stc
dec
cmp
add
jmp
stos
cld
inc
arpl
mov
sub
loop
inc
push
cmp
sbbl
js
in
lock
sarb
scas
cmp
pushf
add
xor
mov
lret
jmp
inc
aam
jmp
push
cmp
mov
popa
mov
and
rcrb
daa
push
push
dec
repnz
push
lods
pop
les
pop
ficomps
fwait
xorb
aaa
pop
mov
xlat
and
out
push
sub
inc
jbe
xor
xchg
fidivrs
adc
mov
stos
aas
dec
add
ljmp
std
mov
out
xchg
bound
or
jbe
and
sub
leave
add
stos
sbb
jge
add
push
lea
cwtl
jmp
aam
fabs
movsl
jg
xchg
aaa
sub
js
std
lods
lock
repz
mov
cmp
mov
xchg
mov
test
lret
xor
dec
pop
ret
or
decb
pop
not
sbb
lret
std
dec
jb
subb
shl
cmpsl
inc
and
cmpsb
push
enter
loop
adc
mov
sbb
sbb
fiaddl
xlat
dec
mov
mov
ja
cs
lds
decl
dec
cmp
fnstcw
les
or
addb
pop
xlat
mov
insl
sub
dec
enter
or
outsl
stos
xor
xchg
sub
xorl
mov
pop
jbe
int
jnp
push
test
xor
jb
aam
cmpsl
inc
push
pop
outsl
ds
je
pushf
mov
or
jp
scas
test
adcl
lret
jne
add
lcall
iret
add
push
sbbl
stos
xchg
jmp
ficoml
jle
dec
cs
and
rorb
mov
xchg
mov
sbb
stos
push
cwtl
insb
push
inc
lock
aaa
or
bound
fldenv
frstor
lods
test
ds
jge
pushf
js
cmp
jbe
movsb
or
mov
xorb
call
cmp
jp
push
inc
aaa
enter
and
icebp
jne
adc
sbb
iret
aad
cmp
cli
outsb
mov
or
push
fucomip
aam
add
cltd
int
in
ret
push
push
fimull
mov
loope
sub
xor
mov
pop
xchg
adc
mov
or
sbb
xchg
rcrb
int3
loope
scas
in
das
xabort
and
hlt
nop
mov
lret
icebp
push
inc
mov
adc
cmp
int3
shr
pop
into
dec
xor
xchg
aad
dec
xchg
sti
neg
sbb
daa
repz
data16
add
js
xchg
jp
push
popa
jbe
and
xchg
cmc
push
lcall
xchg
sub
xchg
rcr
enter
dec
push
test
fs
inc
jae
jg
outsb
test
call
push
and
xchg
xchg
or
dec
cmp
adc
enter
mov
jp
outsb
std
cmp
sbb
inc
hlt
dec
sarb
stos
sahf
test
subl
add
sbb
inc
pop
call
in
push
sbb
xor
or
sub
out
ret
cwtl
repz
or
pop
push
and
test
xchg
xor
lret
xor
imul
repz
cld
in
inc
inc
mov
aad
into
and
movsl
ret
les
xor
and
cmp
xor
xor
mov
nop
mov
sub
inc
jnp
push
lock
mov
pop
lcall
inc
pop
jecxz
push
push
cmpl
cmpl
lods
idivb
push
dec
adc
pop
cmc
addr16
icebp
loope
xor
jecxz
mov
inc
push
cmpb
push
sub
and
loop
xlat
decl
xchg
jnp
sub
test
in
mov
mov
es
sahf
jae
int3
push
sbb
or
xlat
mov
ret
idivl
adc
jno
scas
test
xchg
aas
into
sahf
xchg
fwait
shlb
sub
add
or
xchg
cmp
mov
mov
jbe
sbb
sub
push
popl
adc
and
cmp
add
and
stc
lcall
scas
insl
jp
int3
jle
stos
andl
sub
lret
test
mov
pop
cmp
aaa
jecxz
cmpsl
mov
xchg
dec
pusha
pusha
ds
and
movsb
xchg
test
inc
xchg
cltd
push
and
mov
add
jbe
bound
stos
jp
pusha
jmp
xchg
fstpt
mov
jbe
rorb
sti
cli
or
or
les
ljmp
out
repnz
and
jb
dec
xor
pop
add
orb
dec
out
lods
xor
repz
mov
fnsave
mov
cmp
jge
push
in
fcomp
cmp
mov
in
xchg
push
aaa
sub
inc
popa
xor
inc
sub
inc
iret
in
cmc
in
mov
subl
fadds
push
cmp
mov
out
popa
mov
xchg
dec
xlat
xchg
mov
rorl
ror
insb
mov
cmp
adc
ret
jl
add
or
rclb
lock
data16
rcll
jl
xchg
xchg
fs
inc
adc
sbb
adc
add
popa
std
movsl
inc
in
cli
cli
cltd
psraw
adc
mov
insb
divl
in
push
mov
or
stc
push
mov
pop
out
cmpsl
test
fwait
cmp
jge
insb
popf
pusha
outsb
inc
insl
mov
mov
mov
out
push
xchg
push
or
push
insl
jb
int
dec
loope
sbb
pop
fildl
xchg
and
fidivrs
lahf
call
inc
adc
in
scas
sbb
movsb
push
fsubr
cmp
push
sbb
daa
cmpsl
cltd
jae
and
mov
cmp
lcall
daa
mov
fadds
jecxz
cmpsl
jae
xor
pop
das
push
xchg
mov
fs
jge
filds
xchg
xlat
pcmpeqb
mov
mov
stos
ret
cmpsb
pop
outsb
cmp
scas
mov
sub
cmp
fstpl
xchg
sub
xlat
js
dec
cmp
mov
fwait
cmc
fcmovnb
push
loope
lret
lea
sub
xchg
jge
xchg
fstpl
aam
cmp
enter
leave
pushf
pop
inc
testb
lahf
xchg
xchg
js
pop
jns
mov
orl
mov
xchg
movsl
dec
movsl
cmp
jae
push
pop
out
or
iret
xchg
icebp
out
adc
pop
aam
lods
add
xor
xor
call
or
ljmp
insl
push
in
out
push
and
xchg
xor
mov
aaa
mov
or
sub
or
das
shlb
jae
loope
push
js
loopne
mov
jne
pop
mov
push
lret
mov
pop
and
mov
dec
xlat
inc
inc
aam
lfs
sbb
popf
sbb
test
jp
das
push
sahf
insb
sub
push
add
push
mov
lods
xlat
jo
int
sbb
dec
sbb
jae
adc
data16
jb
pop
xchg
enter
sbb
xchg
icebp
and
sbb
aas
mov
lea
add
imul
cli
inc
stos
mov
and
adc
subb
insl
inc
ret
inc
xor
adc
sub
adc
add
int3
or
cmp
pop
bound
js
inc
inc
add
dec
aad
mov
jo
sbb
aam
adc
test
icebp
push
fs
jg
scas
dec
adc
push
and
test
jo
pop
jl
inc
test
lret
divb
pop
into
dec
mov
push
mov
mov
fisubs
imulb
jnp
js
or
pop
jle
mov
nop
push
or
clc
dec
mov
cmp
or
popa
push
lods
pop
popf
sbb
jmp
movsb
mov
in
fsubrs
es
jge
xor
xor
xchg
inc
mov
stos
xor
dec
inc
es
ret
lods
or
adc
sbb
or
shll
jmp
mov
xchg
xchg
cmp
add
clc
stos
pop
lds
xorl
jle
jne
rcr
cwtl
icebp
sbb
jmp
ret
leave
das
adc
sti
or
mov
leave
xchg
cmp
and
sahf
mov
lock
sub
popaw
mov
jb
jae
push
cmp
daa
cwtl
sub
out
add
mov
xor
push
mov
or
mov
mov
dec
xor
cmp
ss
jo
cmp
jae
mov
inc
push
out
sub
cmovno
add
and
lods
inc
movsl
stc
scas
fs
scas
cmp
mov
imul
xor
ja
ret
insb
iret
pop
jge
in
push
push
aad
cmp
lret
stos
paddusw
or
mov
mov
xchg
sub
sub
cs
sub
outsb
cli
dec
fisttps
in
sbb
add
cmc
cmp
icebp
ds
or
mov
ret
dec
pop
lret
sub
mov
mov
mov
add
in
and
inc
mov
push
mov
test
mov
fsubp
call
aad
add
test
bound
nop
jg
sub
and
mov
leave
mov
xchg
mov
aad
ret
or
nop
scas
pushf
cmp
es
push
or
push
aaa
and
leave
jnp
pusha
cwtl
nop
or
in
xlat
sbb
add
in
repnz
lahf
mov
rcl
and
sbb
negb
out
daa
sbb
push
lods
dec
movsl
mov
xor
loopne
and
dec
in
push
xor
pop
mov
mov
or
and
inc
inc
mov
int3
sbb
jne
mov
mov
sbb
and
push
pop
lods
adc
sbb
clc
cltd
mov
adc
repz
mov
repz
dec
push
mov
dec
inc
cwtl
out
xchg
jns
aaa
sub
dec
xor
or
mov
idivl
rorb
or
in
pop
inc
lret
jbe
push
push
jecxz
fs
mov
sbb
andl
xor
cli
nop
xor
in
and
dec
push
or
sub
aad
std
lret
inc
mov
mov
pop
movsl
ja
add
ret
sbb
sub
ja
jne
xchg
rorl
jae
pop
mov
and
mov
shll
lods
gs
xchg
nop
sub
cmc
jl
mov
xchg
addr16
pop
dec
pop
or
adc
popa
rcll
push
mov
cld
dec
mov
loope
mov
or
mov
inc
pop
xchg
hlt
inc
test
lea
dec
js
cmp
push
and
cmp
adc
cld
rcr
mov
xor
fiadds
js
mov
pusha
loopne
mov
aam
testl
out
cltd
stos
xor
in
lods
dec
cld
repz
cs
and
stos
lret
enter
mov
test
xchg
push
add
dec
mov
cmpsb
and
and
movsl
test
dec
mov
bound
sbb
xchg
inc
ja
pop
and
dec
mov
xchg
sub
push
mov
jp
jl
pushf
add
shr
xor
int
jo
sbb
shl
jp
push
or
mov
in
aad
and
adc
in
das
ss
scas
or
cwtl
pop
push
jmp
sar
sub
xchg
sub
dec
movsb
test
test
jle
xchg
lahf
loope
aam
pop
hlt
or
lods
pop
adc
enter
mov
xor
cmc
mov
xor
xorl
sub
adc
xlat
lods
add
jecxz
mov
jae
lea
ror
mov
inc
or
dec
mov
inc
stos
mov
in
aam
popf
xchg
pop
gs
mov
insb
push
out
out
and
in
jb
mov
into
mov
movb
mov
mov
push
push
pop
xor
add
mov
ljmp
xor
xor
inc
lock
jne
xchg
xchg
or
jbe
pop
int3
repnz
repz
shr
lea
jmp
iret
loopne
inc
lcall
or
outsl
add
jecxz
aaa
mov
or
into
sbb
cmp
adc
push
js
addr16
movsb
add
stc
movl
cmpsb
xchg
push
sbb
lods
sbb
aam
push
sbb
mov
int3
lods
pop
and
jl
pop
adc
bound
jge
and
aam
or
outsb
adc
mov
jae
dec
inc
daa
add
dec
je
mov
adc
mov
xchg
jge
mov
mov
push
jmp
repnz
jo
add
in
or
or
dec
js
xchg
sub
dec
mov
inc
xor
lahf
mov
add
and
mov
imul
push
push
fstpt
pop
mov
out
in
dec
mov
inc
popf
xor
rclb
or
jb
sub
push
jge,pt
dec
je
cmc
push
mov
sub
jb
inc
adc
add
lea
in
mov
dec
mov
mov
jp
fs
xchg
cmp
repz
gs
push
sbb
mov
sub
push
aad
push
mov
out
adc
std
or
jnp
push
bound
jne
aam
adc
jmp
dec
dec
cmp
cli
out
pop
sub
pop
jp
test
pop
sbb
sub
and
sub
xchg
pop
repnz
idivb
jae
call
sub
push
lret
jp
clc
jne
insb
sahf
scas
inc
push
jg
hlt
cltd
cmp
mov
shrl
stc
and
jecxz
mov
mov
addr16
xchg
jmp
add
jmp
lret
jmp
lds
pop
mov
pop
dec
add
out
pop
push
pop
mov
jg
xchg
xor
cmp
or
sti
jmp
out
mov
lret
push
imul
addl
pop
jno
mov
mov
mov
xor
adcb
and
imul
ss
push
or
subl
pop
pop
or
mov
test
ds
cmc
aaa
xchg
data16
jne
jb
sbb
ds
stc
push
and
sub
out
es
jbe
jbe
jne
push
mov
rorl
subb
sub
inc
sbb
fdivrs
mov
mov
mov
push
std
xchg
jmp
jne
and
inc
shl
subb
lea
xchg
xor
mov
or
xor
aam
xor
mov
call
in
jns
pop
ja
call
mov
fstps
fs
push
mov
mov
and
loopne
adc
notb
xorb
into
lds
movsb
mov
cmp
cmp
loopne
mov
sbb
add
jnp
mov
add
mov
daa
das
arpl
shlb
sbb
adc
cmp
rcll
pop
pusha
scas
jp
jo
xchg
repnz
or
imul
push
test
out
add
jge
movsb
leave
aas
mov
push
ret
fwait
mov
mov
dec
mov
cmp
dec
fwait
das
js
add
bt
or
loop
fwait
and
popf
ds
jb
adc
out
and
imul
mov
or
rolb
out
pop
mov
repz
or
rclb
stos
xor
dec
test
movsl
inc
imul
mov
sbb
in
cld
cwtl
push
mov
out
int3
sbb
insb
popa
lods
and
push
jg
or
repnz
and
jmp
sub
mov
clc
popf
pop
test
cmp
mov
ja
and
aas
in
push
decb
stos
jo
push
cmp
arpl
xor
pop
popa
dec
mov
loop
bound
leave
fisubl
sahf
or
out
loopne
icebp
push
or
std
mov
lea
clc
loop
in
lods
inc
fs
test
in
fsts
or
fxch
ret
inc
add
jmp
xchg
cmp
push
pop
pop
push
push
aaa
cmp
sub
in
repz
outsl
pop
repnz
cmp
push
sub
divl
mov
push
mov
jge
bound
das
cmpsb
in
out
jl
cmp
add
xchg
ficoms
addr16
push
movsb
loopne
and
push
test
push
rcll
int
testl
mov
add
mov
inc
aas
cli
inc
mov
std
xlat
cmpl
int
loope
pop
mov
inc
mov
jno
sub
adc
rcr
adc
les
xchg
jmp
dec
jmp
mov
mov
jno
push
pop
mov
je
lcall
out
mov
dec
mov
mov
loopnew
cmpsb
in
jmp
outsb
aaa
add
push
andb
fdivs
xchg
mov
mov
call
mov
push
out
sahf
leave
sahf
ljmp
push
fdiv
lock
mov
cmp
or
call
data16
cmp
mov
pop
out
icebp
cltd
pop
mov
inc
leave
data16
lret
loop
in
outsl
in
mov
jns
inc
cmp
cmp
in
pop
fwait
pop
bound
or
mov
negl
pop
ret
repz
lret
data16
clc
sub
mov
lret
addr16
adc
out
mov
repnz
shlb
shrb
cltd
jbe
add
sub
fsubs
adc
icebp
pop
loopne
pop
pcmpgtw
loop
jecxz
and
push
ret
clc
shrl
outsl
lcall
sbb
ret
jl
dec
push
out
pop
push
sbb
dec
dec
insl
pop
cmp
repz
outsb
cmp
sub
pop
sbb
testb
repz
cmpsl
push
bound
mov
sbb
scas
jns
mov
fldl
test
xchg
mov
or
fisttpll
psubusw
mov
mov
push
roll
xchg
mov
mov
aam
cltd
arpl
and
enter
pop
mov
rol
or
sub
lret
mov
insb
mov
adc
inc
push
in
outsl
out
andb
jnp
out
push
pop
pop
test
xchg
sub
cmp
test
pop
ja
xchg
clc
loope
push
aad
outsb
xchg
fcmovu
jge
test
test
ljmp
vsqrtsd
addr16
xchg
inc
imul
sub
mov
lret
das
daa
xchg
and
clc
ret
mov
aam
mov
push
sub
or
pusha
in
push
int3
idivl
aam
xchg
inc
mov
in
imul
or
jbe
inc
arpl
mov
pop
mov
ljmp
mov
iret
mov
mov
mov
mov
rcll
cmp
adc
jns
jae
sbb
push
mov
fwait
imul
cmp
dec
add
xchg
and
stos
icebp
sbb
mov
cmp
mov
or
imul
sub
and
bound
lcall
std
mov
cmp
dec
out
mov
mov
flds
sub
mov
out
jp
ljmp
inc
scas
das
int3
inc
add
add
push
and
dec
mov
jmp
outsb
pop
icebp
mov
add
nop
call
jb
negb
rcr
fs
in
in
mov
test
stos
add
shr
enter
dec
adc
stc
mov
fdivl
push
dec
mov
inc
mov
jg
dec
xor
push
and
ja
xchg
xor
loopne
shlb
insl
in
lods
push
lret
pop
or
into
nop
out
sbb
sti
push
add
pop
fdivrl
xchg
pushf
xchg
inc
push
add
add
orl
mov
into
inc
repz
adc
mov
add
inc
faddl
pop
add
mov
cmp
hlt
cmp
fistpll
fisttpll
mov
mov
inc
je
int
dec
jg
jnp
jnp
xchg
add
push
movsb
mov
arpl
outsw
pop
cwtl
mov
push
mov
mov
adc
mov
sub
je
js
sbb
inc
cltd
cmp
xlat
rclb
mov
lods
mov
mov
mov
mov
fisubl
cmp
out
dec
int3
and
cmp
xchg
fsubp
inc
push
push
adc
mov
dec
pop
test
lahf
push
mov
lcall
lret
out
or
pop
add
adc
loop
inc
push
adc
stc
es
test
outsl
lahf
cmp
jb
cmp
out
addr16
dec
mov
stos
pushf
jge
repz
sti
or
sub
enter
test
rcll
fwait
cmp
cmp
out
cmp
add
lahf
daa
add
xor
into
out
xchg
adc
add
sub
fisubs
mov
jg
add
fdivrl
or
mov
jecxz
lret
imul
arpl
aaa
shll
cmp
push
das
mov
cmpsb
aaa
test
fs
lret
xchg
sub
insb
add
cld
lahf
add
dec
cltd
jae
dec
loopne
loopne
ds
mov
sub
cmp
hlt
xchg
hlt
lock
clc
aad
out
xor
mov
mov
mov
aad
xchg
inc
mov
cmp
add
cwtl
pusha
add
shlb
pop
and
movsb
xchg
pop
inc
lods
push
add
jns
add
icebp
nop
xor
jnp
aaa
repnz
test
sub
mov
mov
push
jmp
push
mov
xor
in
aaa
loope
out
test
mov
jnp
jecxz
jbe
dec
or
mov
shlb
repnz
out
rcr
sbb
fnstsw
shlb
push
pop
add
popa
loop
push
mov
call
int3
mov
movsl
out
repz
and
data16
jg
mov
out
lds
nop
aaa
pop
dec
xlat
fnstcw
pushf
cmp
in
dec
aad
in
adc
or
inc
jbe
jp
shrl
and
or
mov
ds
movsb
into
ljmp
shr
sbb
mov
aaa
mov
lods
mov
and
push
das
add
mov
stos
jbe
leave
jbe
icebp
inc
and
ds
in
dec
add
xor
cmpsl
mov
cwtl
sbb
xor
scas
push
jp
subb
cltd
sbb
jecxz
push
mov
aad
push
loop
or
jmp
pop
rorb
mov
and
pop
sbb
inc
faddl
call
jnp
dec
cld
push
jns
inc
and
xor
aas
xchg
pusha
scas
cmpsb
ret
aad
jmp
in
or
sti
sbb
inc
or
and
sub
inc
adc
fwait
xchg
xlat
fwait
inc
fbstp
pop
out
lods
fsub
setne
repz
je
stc
sbb
dec
mov
test
pop
mov
sub
lds
mov
imul
or
sbb
jmp
and
lods
push
pop
adc
mov
add
shr
faddl
push
fisttps
mov
mov
push
ficoms
rclb
dec
or
lret
jno
lcall
aam
in
shlb
push
push
xchg
out
outsl
or
lahf
mov
enter
stc
fldt
pop
loope
clc
mov
jmp
clc
loop
push
mov
xor
cld
in
cmpsl
mov
add
repnz
aam
pop
or
insb
sub
shl
mov
cld
cmpl
jg
add
ret
frstor
fucomip
fcoms
mov
lock
adc
imul
and
push
out
xchg
pop
pop
mov
mov
jb
jmp
mov
jbe
aas
pop
inc
xor
jbe
and
jne
int
loope
rolb
cmpsl
enter
pushf
inc
dec
int3
xor
ljmp
orl
adc
dec
cmp
cmp
fistpl
push
push
push
push
mov
lods
xchg
dec
imul
mov
enter
jl
addr16
mov
inc
and
mov
push
adc
xlat
sahf
pop
sub
and
mov
pop
ljmp
imulb
add
pop
hlt
xchg
add
xchg
mov
cmp
mov
lahf
int3
sahf
xchg
gs
mov
adc
fdivs
mov
ror
mov
sub
jo
es
aaa
test
fimull
jb
and
and
outsl
test
out
out
mov
call
cmp
clc
adc
xlat
pop
fcoms
stc
sbb
pop
int3
and
adc
jnp
imul
int
push
or
add
ljmp
std
daa
adc
inc
mov
movsl
mov
xor
and
cmc
subl
dec
jae
jecxz
pushf
pop
xor
jge
ret
in
adc
dec
or
push
je
mov
cmc
sbb
jo
out
pushf
xchg
int3
push
push
add
lahf
push
inc
sbb
out
mov
ljmp
loopne
fidivl
data16
mov
pop
add
xchg
addb
pop
inc
inc
nop
fwait
pop
push
mov
inc
lea
and
clc
decb
cmpb
jge
nop
pushf
xor
js
jge
or
lock
repnz
dec
addr16
xchg
call
fwait
adc
mov
or
iret
mov
xchg
and
mov
stc
jns
inc
push
jne
stos
add
mov
mov
mov
mov
in
imul
arpl
in
jne
xor
dec
jnp
add
iret
xchg
jno
mov
fwait
clc
mov
ret
mov
push
bound
mull
int
fdivl
mov
nop
inc
adc
push
repnz
shrb
ds
push
and
cmpsl
pop
xchg
addb
xor
cmc
cmp
xchg
cli
fcoml
sub
int3
mov
les
aas
nop
in
dec
add
inc
aas
mov
jg
cwtl
and
imul
xor
out
mov
jmp
clc
lret
cmp
xchg
idiv
shll
push
popf
xchg
mov
test
leave
or
and
aas
or
movsl
lea
sarl
pop
dec
aas
mov
push
dec
add
pop
lret
dec
mov
mov
push
or
jmp
and
lahf
push
push
push
in
mov
xchg
push
mov
mov
push
add
xchg
loopne
push
xchg
mov
stc
sub
cmp
mov
mov
mov
call
cmp
and
movsb
pop
pop
sub
xchg
inc
pop
xchg
jl
lret
mov
aaa
mov
mov
in
addr16
test
xor
into
adc
call
sbb
cwtl
or
lods
mov
dec
pusha
and
push
adc
rolb
pop
rorb
fildl
pop
mov
cmc
xchg
rclb
ljmp
mov
sub
mov
rcrl
jle
add
xorl
jo
dec
xchg
sub
cli
mov
xor
sub
sub
add
stos
sbb
enter
xchg
js
out
or
idivl
push
into
jo
cmp
xor
scas
or
or
push
insb
pop
pop
enter
jl
add
je
xor
pusha
aaa
sub
cmpxchg
and
cmc
lods
mov
pop
sbb
pop
xchg
sub
ja
cmp
es
hlt
xchg
decb
inc
pop
adc
leave
pop
pop
lock
xchg
rcrb
push
add
jno
out
ret
sub
out
insl
adc
into
lret
repnz
push
jns
movswl
mov
cmp
sub
outsb
push
cltd
push
lahf
add
out
or
adc
mov
aas
lods
imul
test
lea
sbb
mov
pop
xor
jmp
lock
out
jmp
outsl
or
xchg
xchg
cmp
sub
cmpsb
jl
xchg
fisttpl
sub
xor
add
ss
add
lret
adc
jno
dec
stc
mov
and
test
inc
aas
mov
lret
aam
sub
out
repnz
and
cs
rolb
std
xchg
into
loop
cmp
add
sbb
in
aam
pop
dec
pop
xchg
dec
add
mov
aad
rcrb
push
push
or
cmp
inc
int3
xchg
movsl
xor
gs
jecxz
and
mov
adc
sbb
hlt
scas
push
or
addl
call
push
int
sub
jne
add
mov
mov
adc
push
jno
insl
leave
ja
add
aas
test
jge
and
push
sub
cs
lcall
inc
pop
cmc
dec
mov
pop
mov
pop
mov
push
movsb
dec
and
cmpsb
ja
and
out
or
mov
mov
icebp
mov
dec
mov
stc
inc
jno
mov
das
dec
mov
clc
cmp
je
adc
pop
ljmp
mov
mov
or
jl
push
jecxz
rcl
mov
out
mov
jl
jns
pop
adc
jp
mov
test
inc
cli
cmp
fisttpll
inc
push
dec
lock
and
fcmovb
sti
fcoms
cmp
mov
cmpsl
shl
mov
das
movsb
adc
loop
cmpsb
sbb
ja
maskmovq
divl
push
xchg
push
xchg
xchg
sahf
adc
pop
scas
in
push
aas
xchg
xchg
arpl
mov
jb
fwait
roll
stc
pop
pop
xchg
ja
movsb
add
mov
xor
push
add
mov
add
inc
mov
lods
push
inc
push
out
adc
jns
sub
leave
pop
sub
cwtl
mov
xor
dec
lcall
sysret
and
inc
lock
mov
bound
fwait
pop
sbb
push
jle
ja
jle
nop
cmpsb
fidivrs
enter
dec
sbb
orb
pop
sub
jmp
or
pop
push
lret
stos
mov
fptan
sub
adc
hlt
cmpsb
inc
in
dec
shrl
sbb
inc
sbb
insb
add
inc
mov
cmp
push
in
pop
and
loopne
push
inc
mov
pop
insl
ret
lods
insb
cmp
adc
ret
in
pop
lret
cmp
pop
sbb
ret
jno
andl
leave
fsubs
adc
aaa
mov
mov
cmp
xchg
sahf
stos
lahf
xchg
mov
ror
pop
push
shrl
add
lcall
cmp
xchg
loopne
cmp
mov
push
adc
cltd
call
sub
mov
lea
mov
dec
and
repz
mov
test
pushf
push
sbb
mov
mov
inc
test
arpl
or
mov
sti
lods
dec
repz
out
daa
call
pushf
xchg
push
mov
sbb
mov
sbbb
int
shr
rorb
xchg
lcall
cmp
add
data16
sub
repz
jge
dec
sbb
jecxz
jecxz
or
jmp
lock
shll
loopne
je
or
xchg
mov
test
add
inc
outsb
stc
pop
enter
insb
mov
mov
adc
or
daa
mov
orl
dec
lea
mov
iret
pushw
fdivs
xchg
push
pop
adcb
adc
lahf
sbb
inc
jle
shrb
pusha
inc
mov
adc
std
lret
add
std
fdivrl
outsl
mov
sbb
or
xchg
addr16
ljmp
rcr
icebp
push
daa
mov
jno
jbe
pop
push
push
jnp
and
jne
sub
push
lret
mov
push
sbb
insb
test
shrl
or
ljmp
cmp
imul
bound
aaa
fwait
inc
dec
jmp
dec
out
lods
push
and
jb
insl
mov
les
aam
sbb
loope
lret
ret
enter
out
pop
dec
mov
pop
pop
jb
inc
inc
icebp
adc
fldl
mov
cmpsl
out
jge
pop
vpmovmskb
stos
aam
pusha
cmpsb
rcr
dec
xor
std
cmp
or
pop
jmp
les
pop
jecxz
pop
jg
mov
cmp
sbb
mov
or
les
imul
jg
aad
jae
push
aad
cld
popa
pop
mov
loope
add
movsb
rorl
negb
mov
pop
cs
out
jae
stc
xchg
cwtl
inc
sbb
pop
jle
je
cli
aaa
fsubp
adc
inc
adc
dec
repz
jmp
xchg
cmpsb
and
jb
ljmp
ljmp
xchg
inc
adcb
dec
add
fisubl
fwait
xchg
and
xor
ljmp
in
inc
ret
ss
negb
dec
jmp
xchg
jp
xchg
hlt
mov
cmp
pop
mov
xchg
fdivs
dec
mov
pop
mov
mov
into
or
lods
push
test
and
mov
inc
test
jns
xchg
stos
pop
xchg
loope
in
cmp
and
mov
or
jl
xor
cld
pushf
dec
int3
dec
pop
adc
int3
cs
mov
call
push
fisubl
cmpsl
jge
xorb
jp
bound
rcll
dec
repz
fistps
mov
scas
fnstenv
insl
outsb
insb
cmp
cmp
outsl
icebp
imul
popf
rclb
pusha
cmpsl
inc
or
jl
xchg
dec
cmp
jmp
jecxz
dec
push
sub
iret
jl
mov
xorb
adc
mov
jbe
fadds
push
dec
out
push
js
repnz
sub
js
jne
daa
mov
sub
jl
pushf
fsub
aad
dec
ret
xlat
xchg
adc
mov
pusha
jmp
in
lods
cmp
cli
inc
mov
pop
outsb
add
shrb
jns
lret
adc
js
out
loopne
adc
xchg
scas
lahf
inc
and
mov
mov
movsb
pushf
push
pop
les
xchg
sbb
lret
and
sbb
cmc
repnz
insb
cmpsb
jo
cmp
popf
pushf
aad
in
jecxz
mov
xchg
shlb
adc
mov
cmp
repnz
mov
mov
shrl
fldenv
ror
sti
sub
or
dec
pop
sti
xor
jbe
dec
cmp
cmpsb
shlb
mov
test
adc
cli
int
jmp
xchg
lock
mov
mov
mov
popa
jb
in
ror
adc
mov
sbb
inc
cmp
adc
add
or
jo
vpmuludq
fwait
shlb
sahf
lcall
test
xor
sub
loopne
inc
test
cwtl
test
mov
aad
cs
mov
fcmovbe
cmp
fcmovb
jae
fs
mov
sahf
out
adc
loop
das
fs
daa
mov
and
jnp
idiv
mov
jae
dec
xor
pop
in
outsl
mov
sub
fucomip
divb
push
pop
inc
jge
imul
mov
imul
cmovo
push
int
fiadds
sub
jmp
mov
mov
mov
nop
xor
cmpsb
pop
test
repz
mov
push
xchg
cmc
mov
dec
stos
and
mov
imulb
cmp
iret
pushf
in
and
call
sbb
repnz
loop
unpcklps
xor
xchg
cs
xor
jb
test
cwtl
daa
pop
mov
xchg
sbb
addr16
pushl
cmp
pop
pop
fisubrl
jl
nop
test
xchg
loop
shrl
lock
popa
pusha
mov
fistpll
push
test
daa
sub
pop
imulb
xorb
mov
loope
xor
nop
mov
es
push
ja
cmp
cmpsb
xor
xor
clc
jge
jb
ret
adc
in
adc
xor
ficomps
fcomi
add
cmpsl
xchg
out
xchg
shl
push
test
in
or
push
sbb
xor
push
cmpb
adc
in
cli
inc
mov
add
mov
xchg
out
cltd
es
cmp
sub
loope
cs
or
aad
and
cmp
xorl
adc
mov
lcall
pop
sbb
push
inc
jnp
xchg
jnp
in
dec
aaa
pop
movsb
sub
dec
adc
lret
inc
push
mov
add
mov
subl
xor
testb
jb
cld
xor
insb
in
push
fs
jmp
lock
dec
mov
mov
cltd
jne
loop
sbb
mov
pop
lahf
xor
sti
maxps
or
push
add
imul
pop
dec
or
stc
mov
sub
pop
sub
scas
outsl
xor
push
cmp
aaa
lods
scas
aas
fs
addr16
faddl
xchg
adc
dec
scas
xchg
xchg
mov
add
sbb
fst
adc
inc
cld
sar
mov
cmc
das
inc
pusha
mov
std
mov
rcrb
hlt
push
xor
divb
aam
insl
insb
out
iret
repz
mov
pusha
subb
inc
dec
pop
xchg
mov
push
mov
sbb
adc
sbb
push
je
dec
repnz
shlb
aas
add
lcall
in
std
mov
xchg
repnz
mov
xor
add
xor
jp
icebp
xchg
push
jbe
and
pop
aaa
pop
fisttpll
cmp
xchg
sarl
mov
negl
pop
pop
pop
popf
mov
sbb
adc
sbb
enter
in
push
push
ljmp
dec
fstpt
orb
fsubrl
cmp
sub
aas
jmp
nop
xchg
arpl
mov
xchg
add
sub
sbb
lret
xchg
xchg
cli
lahf
outsl
jno
and
faddp
popl
cs
push
and
dec
jle
clc
mov
arpl
in
stc
in
mov
mov
in
in
cmpsl
and
push
xor
ds
decl
sbb
inc
jns
sbb
fadd
mov
enter
roll
repz
pusha
ret
jae
fmuls
cmp
jp
sbb
jnp
mov
and
lret
xor
mov
mov
hlt
pop
call
jo
and
or
pop
pop
sarb
push
ret
dec
push
and
and
test
imul
les
addr16
mov
sub
std
add
jp
out
jge
and
out
fdivl
sbb
movsl
pop
imul
loope
fldcw
les
jne
icebp
cmp
xlat
loope
mov
std
fwait
mov
sub
gs
xchg
xor
jbe
shl
rcl
sbb
pop
aaa
sub
xchg
inc
sahf
pushf
clc
push
cmp
jns
xlat
cld
aaa
arpl
sub
xchg
leave
std
push
add
fcompl
mov
lds
xlat
loop
jbe
mov
test
inc
ja
jb
aas
mov
inc
and
sub
inc
dec
leave
xchg
ret
mov
adcb
pop
std
in
and
stc
xor
jg
in
sbb
sti
push
pop
jnp
mov
jb
movsb
sti
or
jl
mov
inc
pop
ret
inc
sbb
lds
lods
stos
lods
loope
mov
cmp
push
dec
inc
pop
popa
dec
shll
insb
sub
js
sbb
out
and
pop
and
lahf
push
adc
loop
xchg
dec
cli
into
ret
jecxz
adc
and
stos
hlt
xchg
stc
mov
pop
insb
dec
movsl
mov
cmc
dec
sub
push
add
mov
xchg
mov
add
mov
inc
scas
push
imul
pusha
out
mov
iret
orb
push
jl
loope
jg
inc
xlat
fsubrl
mov
xlat
xor
fidivrl
add
ret
cli
lret
xlat
sbb
xor
push
and
push
clc
nop
add
inc
mov
outsb
mov
aad
add
cmp
jae
popa
jecxz
dec
int
leave
ja
pusha
into
or
and
fstpl
mov
out
ficoms
das
les
dec
sbb
mov
popf
fildl
inc
mov
mov
imul
xchg
add
fisubrl
xchg
inc
call
stos
ret
pop
test
mov
loop
jae
loopne
neg
fs
xchg
adc
mov
int
mov
or
mov
out
adc
mov
ds
mov
push
mov
mov
sbb
xchg
stos
pop
and
test
sbb
mov
sbb
loop
inc
mov
ret
out
jmp
jb
mov
sbb
scas
jle
rclb
and
xor
repz
or
inc
xchg
xchg
jne
shll
lds
cs
xchg
andl
or
mov
jae
aas
push
les
out
pop
sbb
jle
aas
inc
mov
sbb
lret
push
jae
pop
jge
mov
xchg
dec
inc
xor
push
adc
mov
ret
decb
fstpl
adc
call
daa
popf
ret
lahf
push
mov
insl
inc
repnz
push
lds
adc
mov
push
jg
dec
fcmovnbe
mov
mov
mov
insb
ret
aad
or
shll
mov
out
scas
fists
fs
inc
pop
repnz
cmpl
iret
jmp
mov
xor
dec
push
jle
dec
test
cmpsl
in
cmp
mov
dec
xchg
add
lret
mov
adc
popf
sbb
add
sbb
xor
lods
add
mov
mov
lahf
pop
or
es
jns
jg
fdivs
jmp
dec
mov
xchg
adc
ds
mov
stos
lock
popa
gs
repz
into
out
and
push
int3
cmp
mov
lahf
je
jecxz
incl
int3
push
jb
xor
aaa
fistpl
pop
aas
insb
std
rclb
mov
jge
shlb
out
push
rclb
inc
fdivl
sub
sbb
in
mov
push
lcall
add
into
wrmsr
or
mov
sbb
ficomps
dec
cmp
adc
mov
and
dec
jno
mov
dec
inc
jbe
mov
cltd
cltd
out
adc
ret
jnp
popa
adc
jnp
jnp
test
sub
pop
jno
sarb
negb
push
call
insl
mov
sarl
jns
sbb
call
icebp
inc
dec
jae
es
push
mov
sub
cmp
adc
add
pop
pop
call
xlat
pushf
adc
rolb
inc
loop
lds
arpl
and
inc
loopne
sbb
sbb
fisttps
cmp
jmp
in
out
test
stos
adcb
sti
and
insl
or
stos
je
stc
mov
dec
mov
cmpb
repnz
bound
incl
sub
pop
xchg
dec
adcb
fs
pop
xchg
inc
shll
js
ret
mov
mov
shll
add
adc
popf
ret
mov
es
dec
imul
xor
repz
pushf
sub
shl
mov
shrb
lret
stos
sub
inc
outsb
adc
pop
bound
iret
mov
lret
or
call
jge
jmp
test
fiaddl
je
sub
stos
sbb
test
mov
in
ja
mov
or
mov
fnstenv
and
xchg
push
fcmovu
mov
adc
xchg
jecxz,pn
dec
mov
mov
out
movsb
adc
test
cmp
cmp
int
sarl
mov
jbe
cmpsl
xor
ret
jl
sub
and
xchg
add
scas
ds
data16
push
addl
sbb
stos
insb
sub
hlt
mov
xorl
in
lea
and
in
mov
mov
ds
data16
popa
testl
rcll
cli
cmpsl
jmp
and
ja
test
lret
test
xor
dec
ja
dec
insb
in
ja
test
pop
add
cmc
or
adc
mov
and
xchg
and
push
xlat
xchg
rcrb
insb
imul
add
mov
and
jg
mov
xchg
flds
push
cli
rsqrtps
sbb
jns
mov
cmp
fwait
jae
iret
or
outsb
dec
add
xlat
sbb
cmpsl
mov
cli
jb
aas
pop
add
loop
pushf
push
push
adc
push
xrelease
mov
enter
xchg
arpl
icebp
fidivs
popf
popa
insl
popf
daa
stos
cs
jmp
pop
fs
jnp
push
test
mov
out
inc
sub
mov
lret
jmp
add
scas
add
inc
movb
fcomip
jmp
or
adc
imul
jb
iret
ljmp
out
mov
mov
pop
mov
into
jmp
popa
int
jp
push
popa
mov
push
js
jge
or
fnsave
insb
popl
adc
pop
mov
lahf
ret
sub
pop
push
sbb
orl
addr16
adc
mov
popf
pmaxub
arpl
sub
insl
xchg
into
jmp
xchg
stos
push
stc
add
adc
adc
sahf
or
jo
jbe
arpl
rcr
and
jb
addr16
ljmp
mov
mov
sub
add
cmpsl
cmp
mov
popa
jmp
outsb
or
mov
test
ja
dec
outsb
popa
sar
add
xchg
mov
add
ja
dec
push
repnz
popa
sbb
push
rclb
push
jno
jnp
cmp
add
shll
jg
xchg
jae
loopne
pop
jae
mov
mov
dec
pop
lea
ret
pop
ljmp
dec
dec
push
cltd
inc
jno
push
inc
mov
ret
xorb
gs
sub
jmp
orl
out
loop
pushf
and
pop
rcrb
setae
je
rol
notb
mov
ja
inc
mov
das
mov
ss
lret
aam
sub
sbb
xchg
movsb
push
pop
mov
mov
sub
sbb
faddl
ret
mov
out
roll
fwait
or
clc
subb
mov
cmpsl
lahf
xchg
sahf
mov
addb
in
aaa
cld
cli
push
iret
into
push
addr16
push
lahf
push
jle
inc
test
jge
or
lods
imul
fs
cmp
dec
mov
sub
cmpb
lds
xor
push
xlat
cmp
aam
jl
rorb
ficompl
inc
jne
cmp
in
inc
push
jb
mov
hlt
sar
and
mov
mov
mov
jl
int
lds
push
xor
nop
sub
inc
nop
les
ljmp
jnp
dec
jns
lods
test
push
decl
gs
mov
sahf
sarb
inc
adc
mov
cltd
push
insl
sti
out
rcrl
pushf
pop
cmp
jo
adc
icebp
inc
mov
and
sti
adc
call
into
subl
xor
dec
fistl
subl
xor
bound
mov
adc
dec
lcall
js
adc
lea
sub
mov
jmp
movsl
dec
gs
add
mov
jo
mov
push
xchg
mov
push
cmc
std
push
sub
mov
xor
xchg
lahf
aam
add
dec
test
sub
clc
cmp
add
inc
mov
scas
scas
add
test
call
scas
aad
sub
inc
and
jl
mov
enter
mov
aaa
dec
pop
cmpl
jns
xor
movsb
add
xor
xchg
mov
lret
jmp
xchg
iret
pushl
sahf
push
push
aas
cmp
stos
cli
cld
mov
sbb
ss
clc
in
sahf
negl
lea
cmp
and
xor
jecxz
add
xchg
daa
jmp
cmpsl
lret
test
out
subb
imul
xchg
mov
xchg
in
add
bound
paddsw
setae
push
cmp
lret
mov
jecxz
out
out
lods
mov
pop
dec
movsb
and
inc
mov
cmpsl
inc
inc
inc
cmpsl
jb
pop
lahf
leave
insb
xor
lods
sub
push
into
add
xchg
outsl
xchg
dec
mov
pop
xchg
pop
stos
xchg
int
enter
cld
or
inc
fildll
rcll
jecxz
sub
insl
push
adc
pushf
sbb
xchg
into
xchg
jecxz
xchg
mov
cmp
jle
js
pop
cltd
jnp
shrb
mov
push
movsb
xchg
gs
mov
loopne
dec
bound
xchg
fdiv
imul
mov
out
repz
add
aaa
sahf
stc
dec
cs
popa
fs
mov
mov
scas
hlt
xor
inc
fisubrs
rolb
xor
icebp
xchg
sub
aaa
addl
mov
push
and
xor
mov
mov
or
cmpsl
ljmp
inc
in
dec
andb
push
xchg
call
in
daa
mov
ja
inc
pop
stos
insb
pushf
mov
scas
lret
adc
xchg
dec
sub
cld
je
js
jno
mov
mov
out
mov
pusha
lods
or
lods
rcrl
sbb
inc
lret
shl
xchg
pop
dec
mov
lods
imull
adc
pop
inc
subb
fsts
and
push
pop
lahf
inc
xor
add
stos
fisttps
adc
fwait
cs
stos
inc
push
dec
mov
fadds
inc
cmpsb
mov
sbb
int
xchg
or
lods
mov
enter
push
insl
jecxz
sub
sbb
div
push
sub
lret
mov
jbe
pop
inc
ss
insl
ret
in
inc
lret
or
fwait
sti
pop
fucomp
ja
dec
adc
jo
jbe
pop
sub
aaa
lret
dec
hlt
cmpsb
sarl
inc
xor
mov
dec
daa
cmpsl
xchg
mov
out
sub
push
push
aam
fcompl
daa
fwait
adc
mov
fstl
movsb
repz
mov
add
mov
scas
pop
sub
jmp
mov
rcll
add
addl
lods
fldenv
mov
cwtl
insb
repz
sub
out
cwtl
callw
push
dec
out
pop
dec
or
stos
push
add
sarb
mov
jae
mov
mov
and
jns
dec
jno
mov
add
imul
cmp
and
xchg
mov
ret
test
mov
insb
xor
aaa
adc
dec
jns
jae
or
fcoms
ds
dec
popa
add
in
mov
pop
fstpl
jmp
jb
jnp
invd
sub
test
sbbb
lahf
push
bnd
mov
mov
loope
aas
jbe
pusha
adc
or
mov
xor
and
xor
fmull
data16
fisubs
imul
or
cmp
pop
into
ret
mov
or
dec
ret
lds
shrb
jno
out
leave
sbb
and
pop
jle
inc
ljmp
mov
repnz
and
lds
bound
push
fwait
shr
inc
push
lea
ljmp
pop
push
sbb
fmull
rolb
loope
push
xchg
xor
or
cld
inc
neg
cli
push
xor
add
arpl
sar
int3
negb
enter
add
dec
push
jl
shrl
mov
sti
shrb
pusha
cmp
loop
adc
gs
mov
xor
adc
xor
jb
adc
lret
add
mov
aaa
andnps
es
sbb
xorb
jecxz
fisttpl
xchg
into
cltd
inc
lods
or
push
xor
hlt
call
inc
out
or
das
jae
dec
cmc
ss
mov
call
push
pop
leave
ror
xchg
out
dec
test
fcoml
out
mov
adc
mov
jo
cltd
adc
mov
scas
push
in
sbb
and
pop
mov
jge
mov
hlt
mov
nop
scas
push
and
lret
jns
fiadds
jnp
push
aam
int3
mov
mov
sti
push
cltd
cli
fiadds
gs
dec
shll
lods
daa
subl
dec
jmp
cltd
fwait
or
ja
and
and
adc
mov
cld
add
inc
lret
jb
nop
inc
subb
jp
adc
sbb
scas
inc
or
rorb
notb
inc
jae
adc
cld
dec
add
inc
mov
gs
insb
hlt
jmp
cmpsb
inc
inc
popa
test
fidivs
jns
adc
jecxz
cmp
jl
fsubs
leave
adc
sub
test
fcomp
sti
ret
jo
mov
cmp
jae
inc
sbb
sbb
jae
xor
es
testb
insb
movsl
loope
xchg
int3
add
cli
add
adc
test
cmpsl
sub
cltd
sti
mov
lahf
inc
out
aaa
xchg
ja
adc
daa
mov
rcl
cmp
out
insl
inc
out
jmp
adcb
fisubs
adc
call
cmp
cltd
jno
jp
push
mov
imul
aas
mov
cmp
add
sub
jmp
test
fisubrl
pop
add
inc
loopne
lcall
in
mov
ret
mov
cmp
push
xchg
cmp
mov
push
out
ljmp
add
pop
or
cli
dec
popa
data16
or
insl
insl
jns
stos
and
ret
and
mov
cli
lds
rorl
insl
in
cltd
fmull
daa
sub
or
and
mov
lcall
dec
jno
and
lods
mov
pop
jne
iret
push
add
push
out
mov
jae
in
mov
dec
dec
pop
shr
add
cwtl
jecxz
mov
push
mov
or
call
lret
mov
in
outsb
jb
mov
loop
push
pop
dec
pop
adcl
daa
pop
sarl
inc
leave
inc
add
xor
xor
stos
in
sbb
stos
js
mov
sub
nop
icebp
pop
mov
lods
sti
mov
push
out
pop
rcrb
mov
mov
lret
inc
sub
inc
pop
test
out
ja
or
cmpsl
jne
jmp
xor
mov
je
mov
lock
scas
outsl
add
push
std
and
push
fisubl
add
mov
nop
stos
dec
mov
lock
inc
jp
into
shr
cs
out
pushf
add
repnz
xor
cmp
adc
push
sbb
pop
imul
out
stos
mov
cmp
dec
push
mov
mov
aaa
andl
mov
pop
loop
sub
fdivr
cmp
dec
repz
pop
aam
sbb
fnstsw
or
data16
pop
shlb
mov
jbe
outsb
push
and
sahf
sbb
and
popf
test
sbb
or
call
mov
jns
loop
test
and
mov
in
or
push
sub
cmp
loop
and
push
int3
aas
xchg
iret
jmp
aad
cmp
jne
mov
notb
push
fsts
addr16
into
dec
or
cmp
xlat
int3
push
mov
addr16
in
nop
rorb
out
jno
xor
shld
inc
xor
and
cwtl
and
xchg
mov
divl
arpl
push
int3
add
gs
adc
adc
jle
xor
jbe
dec
inc
loope
add
imul
into
loope
iret
mov
push
dec
adc
loope
mov
iret
popf
popf
mov
icebp
jp
push
xchg
push
xchg
test
arpl
lods
fadds
out
dec
xor
mov
ljmp
outsl
and
repz
ss
inc
or
mov
inc
jp
mov
daa
or
fdiv
std
scas
and
out
js
sub
dec
fucomi
push
add
adc
fisubl
mov
mov
mov
scas
adc
dec
out
mov
cmpsb
daa
sbb
xor
jge
dec
testl
lcall
xchg
inc
in
test
in
adc
stos
cli
and
mov
push
cmp
jge
jecxz
out
cltd
push
inc
stos
pop
inc
int3
pop
xchg
or
push
idivb
ss
jp
xor
cmpsb
popf
repz
add
test
and
mov
mov
xor
xor
sub
rcrl
xchg
lcall
or
jle
insl
stos
xor
mov
push
jg
xor
lret
dec
subl
lods
lods
divb
inc
arpl
nop
cli
repz
bnd
test
push
mov
iret
lods
push
cmpsl
pop
dec
xor
fcmovne
int3
ret
inc
mov
ljmp
ss
pushl
out
add
lods
jns
sub
mov
xor
push
mov
mov
ljmp
add
mov
inc
dec
cmp
inc
mov
inc
xchg
les
rorl
popl
fwait
popf
inc
pop
xchg
adc
test
add
sub
jge
or
and
add
push
sub
cmp
and
icebp
xchg
inc
mov
sub
js
shl
push
stos
dec
nop
fldt
adc
jne
fwait
xchg
fbld
inc
pop
fisttps
jns
or
xor
aaa
jmp
mov
or
xlat
iret
rcr
jne
dec
rolb
sub
inc
fbld
sbb
mov
pop
sub
or
cmp
addl
ret
cmpl
push
mov
icebp
inc
inc
adc
repz
rorb
adc
fsubrl
in
popf
mov
in
dec
fnstenv
loopne
cwtl
scas
iret
xchg
dec
ljmp
cltd
and
in
or
sub
orl
sbbl
lods
sub
pusha
push
idiv
jo
jge
repz
cmc
adcb
sbb
lahf
jle
ljmp
insb
clc
xchg
jg
in
xchg
loop
push
inc
imul
pop
sub
inc
iret
lods
test
outsl
sub
in
jl
shl
jbe
lock
jl
insb
inc
pop
pop
in
je
cmp
hlt
xor
imul
mov
pop
sub
fucom
lea
outsl
aam
bound
mov
sbbl
pop
in
lret
stc
mov
inc
and
jns
ljmp
add
xor
in
push
clc
and
or
inc
xor
icebp
out
push
lea
jbe
or
xchg
ja
movb
pop
cltd
ret
aad
pushf
adc
fstl
dec
rcr
repz
xchg
push
lds
xchg
cmp
sbb
adc
jne
ds
xor
pop
aas
mov
mov
std
out
sbbw
es
pusha
mov
lahf
mov
xor
mov
fdivl
inc
xor
daa
aas
pop
inc
xchg
adc
cs
pop
popa
lods
dec
jns
sbb
adc
ss
jno
stc
cmpsb
lahf
insb
sbb
out
iret
or
stos
cmp
cmpsl
ss
and
dec
adc
pop
xor
sbb
sub
call
lods
and
bound
push
or
idivl
addr16
adc
sbb
pop
xlat
dec
and
jmp
fistpl
mov
das
je
and
xor
jge
fisttpll
icebp
arpl
cmp
pop
inc
inc
pop
pop
mov
sti
outsb
mov
pop
lods
push
jmp
js
and
imul
dec
jmp
pop
movsb
movsl
dec
jnp
inc
mov
mov
ficoms
dec
adc
lea
adc
sub
push
std
cmpsb
insl
add
cli
inc
test
test
dec
sub
mov
pushf
scas
in
mov
jg
lahf
dec
add
sbb
push
inc
mov
pop
repnz
mov
pop
jns
fiadds
adc
loopne
push
or
pop
xchg
ficomps
insb
sbb
jnp
adc
xchg
inc
mull
mov
mov
std
rcll
test
lods
js
outsb
and
inc
add
bound
test
adc
sub
mov
push
jae
aaa
into
sub
mov
mov
push
scas
mov
jp
lahf
dec
les
ret
add
jp
gs
out
add
into
cld
aaa
stos
ljmp
sarb
or
push
aad
mov
and
pop
call
or
sub
or
lahf
sbbl
mov
addb
enter
data16
or
popa
gs
xchg
stc
adc
fdivp
into
popf
ljmp
subb
adc
push
sub
pop
out
mov
mov
imul
cs
scas
xchg
lods
add
inc
adc
aad
lcall
je
xor
add
lret
popa
popa
dec
push
cli
shrb
xor
dec
out
or
add
fstl
mov
adc
mov
jg
inc
in
mov
and
imul
mov
mov
ret
arpl
out
imul
pop
add
mov
mov
lods
icebp
add
sub
mov
xor
ss
fs
dec
fwait
cwtl
xchg
or
xchg
repnz
mov
invd
lea
cmpsl
mov
sbb
dec
test
xlat
mov
add
cmp
or
jl
into
std
fmuls
mov
adc
out
test
xchg
out
push
in
sbb
popf
aam
imull
xchg
cmpsl
jne
cmpsb
and
fidivs
cmp
cmc
xlat
dec
out
ljmp
or
shll
push
shrb
aaa
in
dec
mov
inc
insb
js
mov
and
inc
jbe
or
adc
ljmp
decb
aad
fisubrl
add
sbb
lods
enter
std
call
addr16
jp
mov
mov
mov
mov
add
inc
test
jo
jne
addb
ds
sbb
or
in
inc
jecxz
sbb
pop
in
psrlq
ror
sub
test
aas
or
ja
adc
jno
outsl
pop
std
aaa
mov
inc
outsb
data16
lahf
aas
clc
sahf
sbb
fadds
je
je
pop
sbb
in
fisubl
dec
pop
std
mov
mov
add
mov
dec
pop
mov
dec
popl
push
adc
js
das
or
stos
in
xchg
xor
sub
mov
push
loope
arpl
mov
push
js
xchg
adc
fstl
xchg
sbb
in
repnz
loop
xchg
jg
lahf
leave
stos
mov
mov
mov
lahf
andb
mov
lock
ret
cld
aam
dec
fwait
sub
cwtl
pop
sub
and
lock
mov
add
sbb
mov
test
jno
aam
lahf
mov
into
test
cltd
mov
xchg
icebp
inc
sbb
rcl
mov
dec
testl
cmpsb
js
push
jmp
mov
into
out
paddd
jg
dec
test
sbb
and
sbb
cmpsl
cmp
xlat
test
or
jge
add
add
leave
and
sti
scas
addr16
or
push
mov
mov
stos
popf
inc
xchg
iret
lret
leave
aam
xchg
nop
sbb
push
and
dec
pop
mov
in
cmpsl
leave
data16
outsl
xchg
fcoms
imul
in
or
xor
outsb
cmp
pop
dec
and
add
loop
xchg
js
cltd
adc
popf
inc
imul
shl
mov
cmpb
imul
test
int
fstpl
les
sbb
test
mulb
scas
lcall
fxch
js
inc
fiadds
cli
cmp
pop
inc
aam
pop
and
dec
push
mov
addr16
ret
call
cmpsl
dec
and
inc
and
xchg
repz
cmp
ja
add
ret
dec
movsl
mov
imul
mov
sar
fisubl
rcrb
adc
imul
lods
jne
mov
mov
xlat
cmp
or
sub
xor
dec
cld
mov
mov
fisttpl
jl
jo
stos
push
xchg
test
rcrl
or
add
nop
inc
sbb
and
loopne
bound
add
imull
cwtl
test
insb
push
cwtl
lret
sti
cltd
int
cld
das
push
xchg
decl
xorb
dec
stos
and
inc
call
fcompl
pop
cmpb
push
pop
aam
loop
pop
and
sub
stos
aas
call
dec
cmp
cltd
cmp
and
pop
setp
mov
fcoml
nop
fbld
stos
jne
cmp
xchg
outsl
sarl
sbb
cmpsl
jns
jnp
ficompl
cli
mov
jp
mov
in
inc
jl
and
lods
or
test
pop
cmp
call
push
movsb
in
hlt
mov
push
xchg
pushf
shrl
cs
rclb
scas
xor
std
mov
rcll
scas
nop
hlt
xor
aad
cmp
cmp
xlat
movsl
fucomi
and
insl
out
inc
neg
pop
xorb
test
xchg
lahf
adcl
mov
lods
xor
lea
sub
nop
gs
sbb
or
pop
cmpsb
bound
or
shrl
ret
dec
jae
ljmp
das
arpl
loopne
sbb
add
sbb
mov
and
test
xor
and
and
mov
push
and
ficoms
xor
scas
sbb
or
rolb
cltd
in
fwait
lods
jmp
mov
push
push
mov
push
popf
pop
std
cmp
rcrb
lea
lock
inc
push
fsubrs
mov
pop
add
jo
and
sbb
mov
aam
jle
mov
dec
imull
and
loope
lock
aaa
mov
pop
in
xor
mov
stos
pop
mov
daa
mov
cs
sub
fisubl
adc
xchg
lock
or
ror
pop
mov
push
xchg
pop
pmaddwd
fcmove
adc
jp
push
out
jno
pop
mov
jl
movb
stc
jl
cs
sbb
mov
lahf
fcmovu
jl
xchg
mov
xchg
cmp
pop
loop
fistpll
fs
lcall
pop
ret
push
pushf
jle
or
sbb
and
ret
adc
mov
fdivrs
push
orl
and
cmp
popl
movsb
fbld
test
push
fisttpl
dec
mov
mov
dec
lret
add
dec
ja
sbb
pop
fldt
dec
jmp
lcall
mov
andl
mov
mov
test
jg
inc
sarb
or
dec
idivl
pop
xor
std
stc
cmp
mov
ljmp
fsubrp
mov
or
mov
je
outsb
pop
inc
and
mov
fnstcw
xor
xor
mov
pop
jns
fisubrs
mov
dec
sbb
push
cmp
in
std
repnz
dec
and
pushf
mov
push
push
fadd
negl
leave
fcoml
xchg
jg
or
jmp
daa
dec
lea
mov
lahf
enter
lock
rorl
cmp
mov
dec
imul
lret
xchg
sbbl
popa
dec
sub
test
addr16
lahf
int3
xchg
adc
jmp
je
nop
xor
rclb
dec
mov
pop
mov
iret
lea
insb
xor
pop
call
fisubrs
into
in
mov
int
bound
cmp
push
pop
pop
hlt
push
clc
arpl
fbld
xchg
push
push
inc
cmp
adc
dec
nop
clc
sbb
std
dec
push
scas
xchg
adc
xor
int3
in
decl
and
ds
movsb
push
in
mov
pop
scas
mov
mov
sbb
daa
add
lods
pop
lods
ja
subb
in
fildll
jbe
mov
push
ds
fnstcw
mov
jne
sahf
mov
cmp
pusha
xchg
pop
pop
or
sbb
loop
inc
jb
push
sahf
popw
movsb
int3
into
pop
pop
add
in
loope
shrb
add
mov
pop
adc
xor
movsl
push
dec
sarb
mov
adc
add
subb
push
add
js
add
sahf
int3
stc
jl
int3
in
mov
mulb
xor
lret
pop
outsl
jg
and
fwait
pop
adc
sub
fcompl
push
lret
jno
jge
mov
call
or
mov
jae
add
pop
or
rcll
test
jns
sbb
ret
popa
call
add
push
inc
in
out
dec
cmp
test
lcall
stos
xchg
xchg
mov
addl
sti
pop
dec
dec
int
jns
movsb
mov
jbe
mov
push
jo
out
cmp
repz
jne
cld
popa
jne
add
negb
mov
cmpsb
push
pushf
sub
fidivrs
fsubl
pop
pop
or
out
and
aaa
cld
aad
stos
icebp
das
cmp
dec
xchg
mov
inc
push
xor
pushf
dec
movb
dec
stos
dec
pop
fsts
fs
inc
push
pop
call
add
sbb
inc
pop
cmpsl
stos
adc
xchg
and
push
scas
loopne
js
subb
inc
and
lret
stc
adc
fisubl
mov
test
inc
pop
sub
inc
mov
out
jge
or
pop
xorw
sbb
cli
jnp
xor
adcl
sub
dec
sub
and
jecxz
test
mov
int
imul
loopne
rclb
adc
cli
mov
cwtl
or
popf
sbb
popf
loope
mov
fstl
dec
rol
mov
xorb
and
and
test
sbb
sti
addr16
adc
stos
lea
xchg
cmp
lds
push
add
xchg
imul
jmp
xchg
or
pop
jmp
pop
and
dec
or
cltd
and
cld
sbb
fs
repz
lock
movsb
xor
nop
in
dec
cltd
or
mov
cmp
pop
das
inc
dec
xchg
push
sbb
adc
jbe
les
sbbb
sbb
outsl
add
xchg
sub
pop
lret
pusha
repz
or
add
inc
cltd
fidivl
add
jge
in
int3
je
movl
add
test
nop
movsl
xor
mov
fdivrp
jle
ret
jmp
jg
mov
lcall
stc
sub
das
xchg
pop
inc
in
pop
jo
jge
mov
xorb
ljmp
data16
jge
mov
hlt
inc
outsl
repz
and
push
cmp
or
das
movsb
mov
ss
pop
jne
push
xchg
push
repnz
mov
shrl
fdivrs
and
aad
add
daa
or
shrl
adc
sub
in
ja
fisubrl
push
das
push
iret
mov
sbb
enter
out
movb
push
jg
mov
lcall
xchg
pop
sub
movsl
imull
xor
das
fs
or
bound
dec
or
xor
sti
imull
fstpl
jge
jg
loopne
neg
cwtl
inc
sbb
xchg
sbb
inc
addr16
cmp
gs
sti
push
and
cmpsb
pop
adc
sti
xchg
push
fs
fchs
sub
jecxz
imul
jnp
mov
cmp
sub
sarb
add
sbb
mov
push
add
mov
mov
pop
jmp
inc
and
ljmp
mov
lahf
sub
sub
dec
scas
jg
inc
jp
add
push
aas
sti
xor
fcomps
imul
lods
jns
nop
dec
stos
shll
add
sti
mov
scas
inc
mov
xor
fisttpll
mov
cmp
pop
push
or
mov
or
sub
fisttpl
inc
lret
xlat
jnp
testb
lods
mov
ret
mov
sbb
lahf
xchg
add
push
rclb
in
mov
pop
lds
cmp
mov
aam
dec
pusha
ds
pusha
mov
xchg
jecxz
repnz
das
stc
aaa
mov
vphadduwd
adc
inc
cmpsb
mov
lea
es
and
sbb
jbe
jge
mull
jge
sbb
sub
push
bound
xchg
mov
push
xor
rcrl
orb
sub
mov
les
mov
cmc
shlb
sub
push
mov
mov
imul
sub
add
stos
pop
cmpsb
xchg
push
xchg
cmp
out
fisubl
mov
pushf
sarl
test
and
dec
imul
adc
xchg
lods
mov
sub
inc
daa
adc
stos
mov
add
das
adc
test
cmp
mov
insl
adc
and
std
push
xorl
in
loopne
rcl
xchg
cmpsb
ret
pcmpeqd
movb
mov
add
lds
es
pop
aas
push
and
add
dec
je,pn
ret
and
rol
and
push
lret
test
push
sub
xor
jge
insb
adc
inc
adc
jp
lret
xchg
mov
push
add
dec
inc
push
cmc
xor
call
out
test
cmp
cmp
pop
sbb
test
mov
xor
or
inc
decb
cmc
movsb
cmp
lods
mov
fsubl
mov
in
lret
arpl
shl
cli
mov
lods
xchg
or
rorb
xchg
aaa
push
add
mov
aam
adc
adc
fistpll
cltd
pop
adc
test
dec
stos
cli
das
mulb
imul
pop
fidivrs
dec
mov
repz
push
push
daa
jno
addr16
mov
dec
jne
repz
movl
mov
lret
nop
int3
popa
insb
push
pop
add
inc
loopne
adc
xchg
cmp
mov
filds
jae
pop
sub
xor
je
mov
incl
out
xchg
cmp
cltd
mov
jge
mov
shrb
dec
cmpsb
add
push
mov
sbb
fidivrs
xor
repnz
lock
sub
xchg
mov
sub
jmp
xor
pop
push
and
jl
adc
movl
les
testl
pop
dec
sub
cltd
dec
sub
invd
inc
shlb
mov
inc
pusha
pop
loop
sbb
gs
stos
leave
mov
repz
out
leave
stos
cmp
pop
fcomps
xchg
in
fsts
add
add
aam
or
neg
push
int3
in
and
and
xchg
ljmp
ja
hlt
xchg
push
add
lahf
ja
popa
arpl
cs
or
in
test
xorb
js
imul
lods
rcrl
inc
dec
sub
jns
xchg
mov
inc
adc
pop
rcrl
or
xchg
sbbb
push
xchg
mov
jno
mov
repz
jbe
xchg
inc
mov
mov
gs
and
in
jne
jmp
popf
jo
cmp
mov
and
jnp
in
leave
popf
aas
sbb
mov
hlt
movsl
push
sub
xchg
xor
mov
pop
lods
shll
and
cmp
nop
sub
insl
mov
push
notl
lods
mov
push
hlt
outsb
xor
loope
test
add
imul
movsl
dec
xchg
add
sbb
movsl
or
fstpl
jae
dec
mov
mov
xchg
mov
fcoms
scas
jb
lods
jle
mov
or
dec
ss
mov
sahf
mov
ljmp
inc
add
mov
aad
cmpsl
sti
jns
jnp
iret
aad
fisubl
aaa
push
sbb
xor
dec
jl
sar
xchg
mov
xor
add
and
inc
xlat
jae
or
out
fsubrl
lret
pop
dec
sbb
clc
sub
sub
aad
adc
in
inc
lea
cwtl
xchg
sbb
adc
int
mov
into
and
pop
fldenv
add
or
pop
data16
jl
jo
stc
sbb
in
fnstsw
mov
add
jle
xchg
cli
pop
xchg
repz
imul
add
fcom
and
test
cmp
repnz
sbb
or
jmp
das
test
cmp
test
clc
jmp
ljmp
mov
in
aad
insl
shrb
sbb
inc
mov
add
shll
pop
adc
add
pop
cmpb
insb
cmp
mov
jecxz
sub
hlt
arpl
leave
push
and
sbb
iret
pushf
lods
push
clc
xor
ss
jnp
add
mov
pop
lret
mov
jbe
adc
xor
rorl
testb
cmc
add
pushf
jae
out
in
mov
mov
int3
xor
inc
mov
sub
push
inc
dec
ljmp
xchg
cmp
xor
cwtl
and
mov
cwtl
inc
jo
fimuls
iret
sub
and
aad
dec
ss
stc
in
mov
jns
or
adc
cwtl
dec
pop
out
sbb
jb
cld
sbb
in
ret
add
dec
inc
inc
ret
lret
dec
loop
jp
mov
and
je
pop
iret
jne
jg
jnp
sbb
pop
mov
and
lcall
and
and
cld
add
orl
jl
cmpsb
lea
mov
ljmp
fimuls
nop
mov
in
xchg
jb
sub
sub
lret
nop
movsl
and
xor
xchg
cmp
inc
jnp
xchg
or
xchg
push
nop
icebp
dec
push
or
lea
rcl
imul
leave
mov
in
das
sti
xchg
push
lcall
mov
scas
subl
add
cmp
test
into
adc
ficoml
loopne
or
das
call
sbb
imul
add
mov
in
fadds
dec
lcall
std
aad
hlt
sarl
mov
lds
data16
int3
adc
add
mov
adc
mov
and
lahf
sti
inc
cvtpi2ps
leave
jmp
orl
or
loopne
lret
xchg
into
lret
fiadds
cmp
lea
mov
mov
icebp
pop
inc
pop
dec
aaa
insl
rclb
cmp
pusha
dec
and
mov
das
adc
fldcw
cmp
imul
loope
inc
pop
jmp
ret
scas
push
ja
outsb
add
in
xchg
frstor
mov
xchg
insl
xor
into
addl
test
pop
shlb
insb
inc
mov
rorb
fucom
clc
clc
add
lods
arpl
hlt
ficoms
out
test
test
pop
psrlw
cld
repz
jle
mov
jl
jmp
js
bound
pop
sti
sbb
call
inc
test
dec
mov
inc
sub
pushf
sahf
adc
mov
pop
std
mov
push
add
and
rorb
gs
das
movsl
loopne
xchg
xchg
call
and
sbb
aad
and
inc
cmp
push
sbb
dec
and
lahf
jbe
in
imul
sub
mov
aam
xchg
cltd
pop
push
mov
int3
or
add
inc
jle
pusha
ds
or
popf
mov
mov
fsubr
test
jo
jge
filds
ja
mov
jmp
mov
into
into
push
jmp
call
and
stc
movsl
movsbl
and
and
outsl
ljmp
sbbb
lcall
and
pop
int3
sbb
push
inc
sub
xchg
push
mov
xor
and
inc
or
inc
cmp
ret
fcomip
mov
inc
add
lods
push
dec
mov
inc
nop
add
jnp
jg
hlt
scas
cmc
les
insb
inc
les
mov
adc
hlt
sbb
decl
clc
into
rcrb
inc
das
and
xchg
in
sbb
mov
leave
dec
push
inc
xchg
inc
sbb
mov
push
cmpsl
cwtl
jmp
sub
jl
pop
push
jecxz
filds
mov
fimull
pop
jo
dec
loopne
pop
cmp
fxch
fwait
sub
aam
and
lret
mov
sbb
std
jmp
arpl
pop
push
addr16
push
or
add
mov
add
jb
insb
sbb
sbb
jns
cmp
mov
es
std
lea
mov
subl
lret
cmp
pop
scas
xor
cmp
and
out
jbe
cmp
mov
xor
lds
les
push
jnp
imulb
jo
push
loope
jae
test
std
orb
mov
sbb
decl
aad
bound
sbb
orps
movsb
mov
mov
mov
pop
and
cld
mov
jbe
incl
push
sub
pop
repz
add
addr16
pop
cwtl
jl
ret
call
inc
in
rcrb
cmp
add
inc
aaa
pop
cmp
nop
lret
setge
arpl
cmp
mov
push
or
movsb
sbb
daa
pop
adc
jbe
repnz
jns
lret
jg
cs
movsl
xor
inc
fcmovb
mov
pop
pop
mov
andb
leave
cmp
adc
push
xchg
les
insb
in
mov
stos
in
arpl
ljmp
insl
jns
icebp
imul
add
adc
movsb
bnd
hlt
mov
jmp
lods
fildl
and
cmpsl
scas
mov
pop
rcrb
push
fisttpll
int3
rorl
leave
mov
pop
int3
inc
add
xor
and
mov
xor
mov
stos
loop
movsb
xchg
cwtl
je
inc
outsl
popa
fcomip
into
call
fsubr
test
dec
adc
jmp
clc
mov
imul
lods
push
sbb
fcompl
imul
push
lea
and
cmp
mov
dec
cmp
dec
add
adc
jbe
std
incb
popf
loopne
jl
add
mov
pop
fadd
lcall
jmp
xlat
movsl
xor
sub
imul
dec
popa
insl
or
fwait
add
movsb
xchg
xchg
xor
jbe
gs
sbb
cmp
mov
xchg
packssdw
cmp
mov
iret
cwtl
xchg
ljmp
fisttpl
imul
scas
jns
clc
js
js
in
mul
add
and
sbb
push
cmp
out
inc
sub
xor
ja
xor
leave
sahf
ret
dec
add
dec
ds
lods
andl
sbb
sub
mov
mov
je
shll
rcll
movsl
aaa
push
sti
xor
cwtl
into
xor
jno
add
xchg
icebp
movq
add
test
push
mov
cld
popa
xorl
fcomps
cmc
addl
pop
pop
push
jl
add
adc
jp
cmp
pop
outsb
pop
and
cld
jp
xor
push
mov
lea
leave
sti
and
pop
fs
sar
in
push
shl
bndldx
sub
test
in
cltd
add
movsl
dec
jmp
lret
loop
push
xchg
sub
sub
push
xchg
stos
sub
xor
sbb
cmp
xor
mov
in
ss
ss
cmp
sub
gs
mov
mov
push
and
mov
mov
shrl
dec
jle
cmp
or
js
ljmp
push
add
movsb
mov
popw
add
loope
jo
pop
clc
rcrb
cmp
xchg
fiaddl
pushf
push
cmpsb
ja
mov
jo
inc
cmp
mov
jle
pop
enter
sarl
sbb
pop
jae
in
or
and
rcrb
pop
sub
aaa
mov
in
test
das
shlb
in
scas
add
sbb
pop
pop
xchg
mov
pushf
sbbl
and
dec
add
scas
bound
cwtl
xchg
data16
xor
adc
lds
cld
push
jno
fidivl
test
mov
cmpsb
mov
xor
mov
xor
add
inc
movsl
jae
scas
inc
or
xchg
insb
add
xchg
push
pop
inc
fcmovnu
cmp
stos
aam
test
push
lods
iret
lret
inc
fs
in
lods
xchg
xor
jne
js
iret
addr16
js
fs
out
ds
loopne
sub
mov
dec
and
pshufw
mov
ljmp
mov
dec
lret
push
xchg
dec
testl
fs
fsubrs
add
dec
mov
movlps
sub
mov
mov
out
mov
das
or
negl
xchg
xchg
cmc
in
xchg
aad
dec
fstpt
push
iret
push
adc
jg
cmp
fidivl
dec
xchg
xchg
push
mov
lahf
sti
rorb
test
dec
dec
xor
loope
sub
ds
int
rclb
movsl
gs
cmp
icebp
std
fs
push
sub
aam
shlb
enter
sbb
mov
shlb
push
mov
xorl
sbb
arpl
adc
dec
and
jmp
test
xchg
in
xor
into
imul
test
cmp
es
ds
sahf
xchg
sbb
mov
jb
jle
lods
les
sarb
addl
xchg
enter
and
inc
jmp
mov
fistpll
push
lea
ret
mov
addr16
and
pop
test
cmp
xlat
sub
mov
aaa
jp
fwait
in
ret
mov
out
jge
inc
in
jge
or
js
push
mov
daa
outsl
pop
cmp
lcall
imul
and
incl
add
xor
sub
sub
fadds
push
mov
xchg
xchg
cli
jo
inc
test
mov
pop
push
fs
outsb
daa
repz
rclw
sub
stos
add
add
cmp
xchg
gs
shl
mov
jl
cltd
push
adc
inc
pop
fwait
mov
and
ret
shlb
cmp
pop
mov
scas
hlt
fisubl
add
sbb
stc
adc
mov
jbe
and
mov
repnz
ja
lods
xor
out
fidivrs
inc
daa
stos
dec
test
repnz
mov
test
xor
sarl
mov
jb
ja
xor
std
loop
je
insl
and
cmp
jl
sbb
in
hlt
sbb
scas
push
stos
lds
sti
dec
cltd
popa
dec
fsubrl
adc
fsubrl
aad
dec
dec
pop
dec
push
int3
imul
xor
pop
test
cmp
aaa
adc
jae
cld
mov
push
jno
adc
into
dec
jno
lcall
dec
inc
dec
cmp
and
lds
gs
enter
push
pop
xchg
sbb
negl
adc
inc
inc
in
mov
int3
test
aas
les
fisubl
mov
sub
shll
adc
ret
adc
loope
pusha
jns
in
loope
xchg
inc
jmp
imul
cwtl
aad
jge
in
std
lret
cli
jp
inc
dec
mov
push
xchg
mov
pop
mov
cmp
cmc
jg
jecxz
sub
and
aaa
test
je
addr16
rcrl
rcr
jge
leave
mov
cmp
xchg
xor
add
imul
imul
mov
inc
xor
cld
mov
dec
outsb
jecxz
mov
cmp
int
jp
cs
outsb
jo
loop
shlb
cmp
mov
ret
push
cli
cmp
xchg
or
lret
inc
js
sub
mov
mov
and
xchg
push
fwait
leave
ftst
or
ret
push
sub
test
mov
cltd
mov
lds
iret
stos
cltd
clc
cmp
lods
stos
pop
cmpsb
jne
dec
lret
orb
psrad
call
jne
fadds
mov
lahf
pop
sub
in
xchg
es
in
sbb
mov
fs
lahf
shrb
xchg
stos
mov
cmpsl
fsubs
inc
mov
mov
ret
xor
pop
adc
mov
out
mov
imul
inc
mov
daa
stc
repz
rclb
push
cmp
mov
out
pusha
outsb
lret
stos
shl
pop
cmp
mov
xchg
movsb
ror
outsb
popa
pop
inc
dec
test
sub
flds
aam
mov
lret
mov
dec
xor
push
outsl
adc
popf
sub
mov
js
popa
aam
adc
dec
outsl
andb
cmpsw
mov
cmpsl
mov
jns
jo
or
movsb
dec
mov
inc
jle
int
pusha
das
loopne
lcall
fdivl
mov
orb
in
sub
addl
sti
adc
out
dec
bound
dec
and
pop
std
in
test
lock
outsb
daa
repnz
mov
pop
shll
mov
mov
push
ficompl
leave
inc
inc
inc
icebp
or
dec
mov
xor
bound
inc
push
mov
add
jne
fcoms
out
dec
inc
sbb
in
pushf
xchg
mov
lea
lods
mov
daa
bound
xor
es
dec
jecxz
xchg
into
fs
mov
clc
roll
stos
das
xlat
push
insl
mov
sbb
jmp
mov
cmp
mov
xchg
test
cli
jb
mov
cmpsl
sbb
aas
shl
fisubs
std
daa
icebp
repnz
mov
dec
dec
data16
sbb
mov
out
sub
jge
clc
and
into
pop
xchg
add
mov
sbb
ljmp
addl
mov
subb
ljmp
sub
mov
sbb
shlb
xor
negb
fsts
lock
sub
xchg
jnp
xlat
stos
mov
fs
push
jno
sub
jg
add
mov
lock
dec
bound
stos
inc
lods
adc
or
adc
sub
aam
push
into
xor
sub
mov
lea
push
or
in
pop
icebp
les
push
pop
adc
loop
sti
xchg
inc
pop
mov
into
call
push
xchg
inc
jl
cmp
jl
adc
movsbl
fimuls
jae
in
aam
pusha
push
jno
icebp
pop
dec
pop
cmovns
cmp
jno
sub
or
sub
push
add
in
mov
mov
cmpsl
repnz
mov
lret
out
lahf
dec
ret
or
sub
fucomi
inc
sahf
lret
mov
js
mov
mov
daa
movsl
gs
or
xor
fcmovnbe
loopne
aaa
and
mov
inc
sti
and
cmp
insb
imul
aaa
dec
sbb
incb
cli
fstl
jg
xor
rol
add
sbb
mov
leave
or
sahf
fdiv
ss
aam
xor
fiadds
mov
insl
adc
insl
das
addr16
xor
das
pop
jne
push
andl
cmpsl
testl
shrb
shl
xchg
sbb
sbb
adc
fdivl
outsb
or
and
or
outsl
cmp
arpl
xor
in
mov
or
leave
mov
mov
scas
lcall
mov
sbb
xchg
cwtl
jne
lret
pop
mov
aam
jb
add
fdivl
filds
jmp
out
repnz
inc
pop
movsl
adc
pusha
popf
xchg
out
fsubrs
xchg
ljmp
jns
mov
jb
in
shlb
bound
leave
pushf
aas
inc
xlat
mov
les
sub
sub
jmp
loopne
lcall
test
shlb
and
daa
negb
movsl
or
jae
scas
out
and
cmp
mov
jle
jle
nop
jb
or
rolb
test
cmpb
mov
pop
adc
lret
ret
mov
push
xor
int3
int
aam
mov
pop
in
pop
push
andb
pop
xor
mov
mov
or
add
sub
xchg
xchg
mov
jnp
push
and
ret
jg
bsr
pop
pop
adc
cmp
mov
rol
xchg
push
cmpsb
jge
es
jo
sub
mov
push
lret
aam
and
test
and
sahf
inc
cmp
loop
std
pcmpgtw
mov
xchg
inc
out
mov
pop
gs
xor
add
mov
mov
add
pop
xor
pop
add
sbb
fwait
rcll
jecxz
mov
rcl
les
sbb
xor
pushf
jno
ret
jnp
cmc
jl
xor
jle
xor
loope
cmc
push
cmpsb
jmp
lock
popf
mov
jp
cli
test
xchg
test
cld
loop
jge
xor
mov
jns
aad
push
or
mov
push
addr16
push
gs
add
mov
insb
ds
sub
xchg
mov
push
xor
aad
mov
inc
mov
push
xor
jl
lret
add
outsb
and
jb
adc
xchg
aad
lcall
lock
popa
dec
out
cmp
outsl
inc
mov
orl
cmpsb
ljmp
cmpsl
mov
loopew
mov
jg
sbb
or
test
das
sahf
add
imul
xor
mov
js
int3
jl
das
sub
leave
pop
mov
pop
cmp
aaa
dec
mov
push
dec
pop
bound
and
cli
xor
pop
insb
sub
leave
in
fs
lods
adc
cmpsl
sub
enter
addr16
imul
in
loope
or
daa
xor
sbb
jns
inc
xchg
mov
lret
ret
cs
mov
jns
movsb
pop
pop
or
push
dec
dec
adc
out
arpl
or
jmp
fs
mov
or
dec
mov
inc
outsl
test
push
mov
loopne
inc
jp
fistl
mov
cmp
in
in
rclb
add
adcl
ljmp
or
dec
es
xchg
pop
repnz
jp
push
and
sbb
repnz
lcall
xchg
xor
lds
jle
cs
scas
push
mov
mov
jne
mov
push
dec
aaa
inc
push
mov
dec
pop
or
mov
iret
cmc
xchg
ds
jmp
icebp
out
icebp
lcall
xchg
xlat
insl
into
cmpsb
test
cmc
lods
xchg
add
in
add
inc
mov
sbbl
nop
scas
inc
push
cmp
mov
cs
fimull
pop
and
mov
test
cmp
cmp
mov
cmp
push
int3
sub
sbb
imul
mov
test
sub
jge
aaa
jns
dec
mov
inc
adc
pop
mov
mov
das
mov
mov
jp
addr16
cmp
lahf
fwait
mov
mov
mov
aad
jne
lahf
mov
mov
sbb
mov
dec
popf
addr16
pop
subl
pushf
add
push
mov
inc
ljmp
mov
insl
and
mov
mov
jl
sbb
mov
fdivrp
and
sub
movsl
mov
fwait
sti
push
push
pop
rep
pop
popa
mov
bound
push
sti
pop
mov
out
jl
xlat
ja
ret
loop
adc
sbb
pop
mov
pop
idivl
fisttps
and
pop
das
jnp
scas
insb
sti
jl
ret
inc
mov
push
xchg
adc
mov
sbb
pop
lds
fs
aad
js
sbb
push
ret
das
ljmp
addl
mov
xor
cmp
test
dec
insl
sub
repnz
pop
fnstsw
xor
push
jmp
mov
fsubrs
test
in
dec
lcall
inc
push
dec
mov
dec
jnp
pop
adcl
cmp
les
add
dec
inc
rolb
cld
lea
jmp
xor
out
stc
or
ds
pop
daa
mov
mov
inc
and
sub
or
adc
mov
xor
inc
mov
cwtl
jg
lods
fisubrl
pop
cmpsb
mov
adc
iret
xchg
stos
sbb
xor
aas
or
push
es
andb
xchg
call
cmp
es
jb
sahf
mov
setg
adc
add
sbb
rcr
push
hlt
jecxz
add
fistl
rorl
mov
push
dec
xchg
test
roll
ljmp
in
ret
sbbl
sub
std
dec
xor
jle
adc
pop
iret
xor
pop
xlat
adc
mov
sub
lret
shlb
scas
call
mov
mov
mov
sti
and
aaa
insl
ljmp
in
lahf
xor
sbb
mov
xor
testl
lret
bswap
popf
and
int3
je
mov
pop
dec
iret
or
jne
leave
or
sbb
pop
setp
jmp
xchg
sub
xchg
push
cmpsb
adc
add
loope
cmp
push
das
dec
push
sbb
push
rcrb
imul
jecxz
add
inc
sbb
clc
xor
add
mov
mov
mov
push
in
repz
out
into
adc
outsl
lahf
mov
xorb
enter
repz
stos
ss
je
cmp
mov
ret
pop
inc
cld
push
hlt
xor
mov
popa
push
fildll
mov
pushf
mov
mov
mov
jg
jle
addr16
sub
pop
mov
xchg
pop
stos
mov
loopne
pusha
add
lahf
mov
lret
xchg
fbstp
ja
addr16
pop
push
pop
jb
xchg
or
mov
icebp
and
scas
dec
fisttpl
push
xor
aam
rorb
jb
stc
mov
sti
cmp
sub
mov
mov
xor
mov
jbe
push
adc
fbld
xchg
inc
pop
xchg
cmpsl
loope
aam
aam
sub
dec
jmp
lcall
mov
pop
lret
sbb
push
testl
int
sbb
in
insb
jne
out
test
cmpb
sbb
mov
dec
adc
sahf
xchg
xchg
sahf
into
sbb
mov
fsubrs
dec
out
je
or
shr
mov
faddl
push
stc
lock
inc
and
lds
or
mov
xchg
loopne
add
lods
pop
rcrl
rcl
out
cmp
lods
test
fs
or
in
pop
adc
gs
jmp
or
wbinvd
js
or
gs
mov
les
jae
mov
std
mov
cli
in
fbstp
xchg
or
push
jne
icebp
push
inc
loop
sub
incl
sbb
dec
fcompl
clc
mov
mov
inc
scas
cs
pushf
push
repnz
jns
es
movsb
sbb
xchg
push
nop
xchg
scas
cmp
add
adc
js
pop
stos
sbb
adc
mov
pop
adc
mov
sub
sub
icebp
add
fwait
and
leave
movsl
xor
mov
icebp
xor
sahf
inc
je
mov
test
and
ret
mov
dec
sbb
movsb
pop
jnp
mov
add
jb
adc
jnp
and
push
pop
int
sbb
jmp
lods
mov
push
mov
in
jae
pushf
movsb
xchg
test
loop
inc
aam
sbb
mov
dec
in
test
sbb
mov
sbb
or
xor
gs
pusha
pop
rcrl
pop
cld
scas
js
outsb
fucom
sbb
sub
fisttps
lods
dec
and
into
mov
fimull
inc
fsubrl
mov
jge
lds
pusha
ljmp
pop
fiaddl
adc
cmp
sbb
gs
stc
push
in
pop
insl
test
mov
ljmp
push
ja
mov
mov
mov
add
insb
xchg
imul
mov
adc
sbb
fwait
loope
dec
lods
repz
cmp
lds
lods
out
and
sub
pop
sub
fistpll
out
divb
jg
scas
mov
push
jge
in
stc
dec
rcrb
dec
push
xchg
xor
repz
inc
lret
outsl
scas
xor
add
inc
sbb
mov
push
xchg
push
aam
or
imul
dec
scas
pop
fldcw
imul
dec
sarb
rcl
sbb
rclb
sbb
ds
sub
cld
and
pop
pop
enter
mov
fs
jge
cld
das
pushf
sub
jbe
jo
sub
test
cmp
push
fldenv
xlat
jg
jnp
adcb
popa
inc
inc
mov
int3
scas
out
xchg
pop
movsb
in
xorl
int
int3
add
sbb
add
mov
mov
dec
mov
iret
lock
sub
imul
popa
cli
setnp
js
imul
ja
out
das
sahf
ljmp
add
stc
add
push
test
add
ss
stos
pop
mov
mov
push
or
adc
xchg
fdivp
fs
std
mov
cmp
out
mov
mov
xor
stos
cmp
xor
lret
xor
sbb
mov
loope
or
into
xchg
xchg
andl
mov
shr
and
cmpsl
xor
int
scas
lahf
sub
push
mov
cltd
out
fdiv
xchg
sbb
sbb
cmp
mov
cmpsl
cmpsb
sbb
cltd
cmp
adc
push
hlt
push
lret
in
bound
scas
mov
mov
jo
mov
sti
pop
dec
sbb
push
xor
jb
test
push
cmpsl
jp
xor
movsb
and
jo
stc
out
jno
inc
mov
mov
mov
ss
in
sbb
pop
cli
xor
xorb
and
xchg
xor
sbb
sgdtl
sar
xchg
cmp
xor
clc
pushf
mov
inc
sub
mov
jmp
mov
push
inc
lret
push
mov
lret
jbe
loope
scas
mov
add
adc
or
push
add
pop
inc
add
nop
push
lods
setp
mov
sub
sub
addl
es
mov
aaa
sub
outsb
movsl
sqrtps
out
cmp
jp
inc
dec
fildll
dec
in
and
sarb
xchg
sub
dec
lock
rorl
xchg
popa
mov
dec
les
sahf
mov
xchg
mov
enter
test
loop
aas
inc
adc
mov
cmc
je
jb
cmp
dec
push
popf
daa
add
xor
mov
pop
fisubl
lds
push
xchg
add
inc
xchg
data16
cmp
ret
int3
xchg
sti
sbb
ret
cli
jecxz
push
jp
jmp
jl
testb
js
add
inc
adc
lock
cli
or
mulb
mov
fisubrs
mov
pop
pop
xor
stos
or
and
xchg
scas
fisubs
in
add
adc
in
dec
pop
sahf
xor
and
arpl
outsb
data16
add
push
pop
and
out
adc
int3
les
and
sti
sbb
fwait
es
cmp
adc
push
pop
bound
inc
out
lahf
jg
aam
dec
scas
or
xor
mov
xchg
adc
mov
out
xchg
jl
mov
cs
sbb
outsl
in
jle
mov
mov
test
cltd
or
in
fisttpl
and
pushf
dec
jne
pop
mov
pop
loopne
and
loope
jno
add
push
mov
pop
mov
cmovle
mov
push
arpl
icebp
out
xchg
in
dec
inc
cmp
lea
jnp
jne
lods
mov
add
std
push
xor
pusha
int
incl
fcomi
lcall
rol
push
mov
sarb
cli
jnp
sub
leave
mov
pop
sbb
xor
dec
in
inc
pop
adc
adcl
inc
push
lahf
out
inc
sahf
fldcw
inc
lahf
mov
push
out
xchg
jge
push
stos
pop
xor
jg
inc
and
xlat
aaa
lret
push
mov
dec
outsb
stos
addr16
fcmove
and
lahf
aas
rclb
or
imul
in
fdivrs
in
in
iret
lods
inc
adc
mov
je
loope
dec
mov
mov
xor
sbb
adc
xor
es
lock
push
sar
dec
and
in
push
int3
or
push
or
fmul
js
fidivs
outsb
or
pop
cltd
lahf
add
ja
jmp
adc
inc
out
push
movsb
adc
mov
push
add
iret
inc
pop
xchg
and
mov
xchg
loop
push
and
lods
rcrb
mov
jmp
jne
insl
test
cmp
mov
fdivrs
cli
lds
xchg
cmp
ja
or
sub
push
mov
aam
and
pop
pop
cmpsb
push
sbb
push
dec
mov
sub
xlat
stc
sbb
ret
push
jl
xchg
leave
fcompl
test
xor
jae
dec
xchg
popa
xorb
in
ret
cmp
push
mov
popa
outsb
clc
mov
icebp
enter
inc
push
mov
xchg
xlat
loope
pop
stos
cmpsl
mov
sub
ja
mov
mov
cld
jns
push
cmp
inc
pop
lcall
mov
sbb
sbb
gs
xor
push
shrb
sbb
roll
push
pop
xor
mov
xchg
push
xor
xchg
xchg
inc
and
fistps
mov
call
adc
or
mov
out
cmc
popf
jb
sub
decl
sub
sbb
enter
dec
jp
loopne
in
mov
cmp
add
adc
stos
mov
jmp
jle
push
mov
push
lods
sub
int
mov
sahf
fldl
pusha
adc
arpl
js
adc
sub
mov
fnstcw
arpl
jae
jmp
setbe
sbb
and
add
push
out
adc
jo
imul
push
out
push
or
ljmp
push
and
js
fildll
mov
pop
es
mov
lret
cmpsl
addr16
int3
pop
test
fucomi
mov
aaa
das
test
gs
inc
push
mov
inc
sbb
arpl
loopne
push
jg
shlb
pop
ret
mov
lret
sub
cmc
fnsave
push
cs
or
pop
pop
dec
movsb
xor
lret
shrb
cld
outsl
push
jmp
pop
std
jo
mov
push
out
jns
pop
dec
shrl
cmc
test
incb
and
push
xor
movsl
sub
add
fildll
cwtl
ret
and
mov
inc
mov
repnz
push
jge
jns
mov
je
pop
outsl
test
and
mov
fisubl
or
stos
jg
fbld
inc
sbb
push
dec
cmp
sbb
test
lcall
xchg
sub
push
mov
add
sub
mov
inc
mov
mov
push
loopne
add
cmp
pop
push
stos
jl
xchg
lds
xor
sbb
cltd
cmpb
cld
test
insb
iret
fstps
imul
add
jl
iret
or
jle
sbb
adc
lcall
int
jecxz
mov
pop
sbb
pop
inc
sbb
jmp
mov
xor
or
or
jecxz
xor
mov
and
mov
mov
stos
xor
jae
sbb
mov
sub
cwtl
jg
add
fildl
dec
repnz
mov
push
mov
mov
pop
push
aad
fdivrl
in
shl
flds
mov
es
inc
mov
mov
iret
repz
test
sub
xchg
pop
xor
or
mov
pop
outsb
add
loopne
divb
daa
inc
inc
pop
push
pop
inc
adc
sub
dec
daa
dec
movl
add
or
mov
jge
cld
cmpsl
dec
cs
cmpsl
scas
pusha
fstps
les
mov
loope
sub
jle
cmp
jno
bound
lea
in
jb
outsl
push
push
fwait
mov
pop
push
cmp
loop
popf
sbb
movsb
push
jecxz
and
rorl
xor
shll
add
mov
sbb
push
popl
sub
mov
mov
jmp
inc
add
subl
mov
and
fdivrl
push
add
scas
insl
sbb
sbb
mov
lds
sub
imulb
cltd
pop
push
mul
adc
push
add
and
pop
dec
clc
bound
pusha
inc
ret
sbb
mulb
in
pusha
pop
and
addr16
lods
out
jle
mov
mov
lcall
and
dec
dec
in
xchg
les
out
fsubr
or
js
inc
cli
hlt
xchg
xor
imul
cld
dec
xchg
sbb
shlb
mov
inc
dec
mov
test
xchg
cmp
aas
xor
dec
jno
xchg
icebp
add
and
lcall
push
cwtl
cmp
out
mov
sub
push
repnz
les
sub
std
jne
xlat
dec
les
inc
stos
inc
loopne
push
sub
test
adc
inc
push
popf
xchg
mov
arpl
adc
pusha
dec
test
and
add
pop
dec
cs
sbb
mov
cwtl
jecxz
movl
sarb
fidivrl
cmc
aas
xor
adc
pusha
mov
jl
push
sahf
aad
cmpsl
sbb
mov
mov
pop
pop
mov
clc
or
aad
adcb
xchg
fbstp
clc
mov
cltd
enter
stos
mov
out
js
jl
imul
pop
sub
movsl
adc
sub
rcl
cmp
inc
and
inc
lcall
mov
cmp
std
gs
dec
add
mov
idivl
mov
mov
lcall
adc
jo
aas
dec
dec
cmpsl
add
xchg
push
xlat
mov
mov
cmp
aas
xchg
aad
or
dec
cld
cmc
movsl
test
std
and
pop
jmp
dec
inc
stos
sub
stos
dec
push
dec
test
pop
scas
mov
or
dec
js
aaa
inc
mov
in
fwait
les
aaa
lods
into
xor
out
in
mov
mov
and
jmp
xchg
cmpsb
mov
cmp
lods
cmp
mov
fldl2e
dec
into
pop
sbbb
shr
sti
pop
jle
jg
sbb
xchg
push
push
pop
xor
pusha
mov
cmc
fidivrs
out
push
cwtl
inc
xor
decb
scas
pop
pushf
or
cmp
cmpsb
push
inc
inc
mov
dec
out
das
xor
xchg
or
cltd
push
addr16
pushl
incl
inc
push
xchg
mov
xchg
daa
xor
hlt
shlb
addr16
cli
cmp
mov
outsb
insb
mov
nop
movsb
inc
add
mov
leave
add
and
jne
adc
jecxz
hlt
xor
shlb
lret
andb
xor
dec
xchg
mov
xchg
jno
add
mov
outsb
stos
cmpsl
fcomip
adc
adc
cs
mov
dec
shrl
insb
xchg
xor
xchg
loop
inc
fsubl
rcl
dec
adcl
adc
mov
pusha
jne
jg,pn
outsb
adc
inc
jecxz
inc
inc
push
push
inc
ret
stos
mov
mov
shr
call
dec
adc
mov
scas
outsl
sbb
ret
or
adc
lret
loop
fisttps
test
hlt
jne
cs
outsb
xchg
arpl
sbb
sub
dec
push
xor
push
cwtl
inc
mov
or
and
repnz
ret
sti
test
and
xchg
fcompl
xchg
bound
clc
rcr
pushf
insl
stc
ss
lock
jle
test
mov
out
sub
ja
popf
loop
push
scas
mov
mov
sbb
xchg
les
test
loope
xor
or
in
cmpsb
dec
enter
cmpsb
cmpsl
enter
sarl
push
in
movsl
and
pop
sub
scas
stc
daa
into
jecxz
insb
pop
cmp
div
or
dec
xchg
stos
aad
pop
call
sub
loope
sarl
cmp
xchg
pop
push
dec
imul
cmp
mov
fld
testl
jmp
jns
dec
orl
js
jo
pop
cmp
push
inc
cmp
jmp
clc
movsb
in
mov
test
add
inc
stos
ror
push
outsl
push
and
xchg
mov
dec
mov
lods
idivl
cmp
loope
push
stos
jmp
pop
outsl
bound
xor
and
test
cmc
mov
repnz
inc
mov
jo
inc
jle
mov
imul
gs
leave
lahf
xchg
outsb
sahf
jp
sbb
ja
mov
pop
xchg
fdivl
test
in
sbb
mov
push
mov
inc
mov
leave
push
adc
sbb
pop
stos
mov
sub
mov
je
dec
dec
hlt
or
and
jmp
pop
and
ret
frndint
ja
andl
sbb
mov
mov
mov
test
cmp
rcrl
mov
and
test
or
push
fldt
setbe
loopne
in
push
sbb
shlb
mov
inc
dec
xor
or
pop
sti
lock
aam
xchg
dec
push
mov
add
xor
insb
jecxz
sub
adc
cmpsl
adc
inc
sbb
enter
lret
or
add
movsl
or
mov
in
push
xchg
ds
xchg
jne
movsb
faddl
push
sahf
pop
pushf
jmp
lea
stos
in
sub
popf
hlt
or
pop
and
jnp
xchg
filds
stos
inc
rol
int
push
lea
push
and
dec
ljmp
mov
xchg
mov
cmpsb
rclb
out
push
pop
cmp
int
pop
es
mov
adc
das
int3
pop
mov
adcl
sbb
iret
rolb
lahf
push
sub
lock
outsb
js
sbb
mov
adc
push
aas
imul
xor
adc
ljmp
dec
sub
and
inc
repnz
inc
idivb
and
inc
imul
sub
sbb
lods
lret
repz
das
xlat
mov
dec
add
shr
ffreep
addr16
les
rolb
jmp
pusha
mov
push
popa
mov
and
jne
hlt
cs
ret
fistpll
xchg
ljmp
xor
inc
push
and
cmp
xchg
inc
cltd
pop
dec
cmp
pop
sahf
push
mov
cltd
jnp
push
inc
stos
ret
and
fdivp
and
ficomps
out
xchg
gs
dec
cmp
push
aam
jecxz
jecxz
mov
dec
adc
movsb
xchg
pop
cmc
inc
lea
xchg
lods
loopne
inc
jmp
mov
idivl
cmp
cli
push
jl
cmp
js
jbe
out
or
rcrl
into
push
adc
mov
dec
and
xor
sbb
imul
add
test
decb
ret
jae
std
sahf
daa
jl
test
jns
inc
imul
pop
pop
mov
mov
mov
iret
xor
jb
pop
int3
add
andb
push
scas
jmp
stc
dec
lret
icebp
ret
fcoml
xor
test
leave
in
outsl
rcll
jp
test
cmpsl
mov
sub
stos
fnstsw
lea
pop
enter
sbb
pop
dec
xchg
and
pop
jb
outsl
clc
lds
sti
scas
lahf
lcall
pop
jae
das
repz
mov
sub
dec
inc
ficoms
sarb
in
sub
add
adc
imul
sbb
pop
cmp
repz
loopne
rolb
imull
mov
pusha
lret
add
std
mov
pop
out
rcrl
xor
lret
or
add
and
sahf
pop
xor
cmp
lahf
out
ret
aam
sub
test
mov
add
jge
dec
mov
scas
inc
mov
lods
push
and
loope
push
lret
sbb
dec
sbb
xor
dec
repnz
sub
push
jne
fcompl
mov
add
add
mov
fneni(8087
hlt
sbbb
cmp
jb
rcrb
xadd
dec
jg
add
pusha
mov
sbb
mov
idivl
xor
ljmp
pop
lds
cs
nop
fsubl
fwait
adc
jnp
in
mov
ja
jecxz
loop
jmp
sbb
push
sbb
add
stc
stos
inc
jg
fnstsw
movsl
imul
xchg
cwtl
divl
adc
sub
cmc
sub
jle
push
cmp
stc
out
xchg
loop
mov
sub
push
xor
pop
adcb
sbb
test
jne
xor
test
add
loop
or
loop
cmp
add
dec
jg
xchg
and
sbb
mov
mov
mov
fisubs
arpl
add
aam
jae
cs
or
and
mov
mov
sbb
ret
orl
pop
ds
push
ljmp
out
xor
mov
lret
mov
scas
jle
mov
dec
ja
test
push
mov
out
movsb
fwait
andl
cmp
mov
rep
addr16
sub
addr16
test
icebp
nop
xlat
out
loopne
sbb
sarb
in
inc
jno
xchg
sub
jmp
jmp
lods
jp
mov
push
and
pop
inc
xor
fbstp
ds
cwtl
pushf
pushf
xchg
lea
push
jge
test
pop
sub
stos
or
fisubrs
lods
loop
and
jno
jecxz
subl
pop
dec
imul
inc
sbb
lock
aaa
cmp
sub
sti
movsb
push
pop
cmp
inc
in
pop
sub
ret
dec
pminsw
fwait
jae
mov
lahf
adc
pushf
add
push
repnz
lcall
xchg
pop
jecxz
push
adc
cmp
mov
decb
shll
jno,pt
inc
push
xchg
sahf
repnz
lea
lret
fadd
cmp
sti
pop
push
psraw
dec
stos
das
aaa
leave
push
pop
arpl
scas
shll
sub
jno
cmp
nop
xchg
aaa
movsb
pop
inc
popl
inc
aad
negl
test
insl
inc
jno
jne
pop
fstps
mov
into
adc
xchg
xchg
fwait
and
pop
pop
outsb
cltd
sub
les
aaa
inc
inc
sar
push
inc
mov
xchg
repz
fs
fwait
push
inc
pop
adc
neg
sbb
or
jmp
or
push
and
popa
shrb
int3
mov
cmp
aaa
lret
mov
addl
xchg
adc
arpl
mov
jle
jge
aad
dec
lds
enter
lds
aas
cltd
jae
movzwl
out
fcoml
xchg
jno
dec
xchg
scas
cld
adc
mov
out
dec
sub
orb
jl
cwtl
inc
push
ficoms
fucom
mov
mov
cltd
sub
arpl
pop
aas
loope
sbb
mov
mov
xchg
icebp
sbbb
mov
repnz
aam
xor
xchg
fidivs
ss
mov
xchg
stos
cmpsl
mov
mov
enter
and
sbb
xor
ljmp
xchg
dec
push
push
ret
adc
sarl
loope
loopne
xor
sub
ret
xchg
imul
fst
imul
add
orl
push
out
or
xorb
into
in
mov
cmp
pop
jns
jnp
mov
out
mov
sub
adc
push
pop
aaa
jecxz
ljmp
mov
stos
icebp
lret
pop
inc
dec
arpl
lahf
pop
cli
pop
sub
xor
sbb
das
jns
or
bound
insb
or
push
cmp
xchg
xchg
mov
sub
sti
xchg
outsb
repz
gs
stc
test
outsb
ret
aaa
sub
xchg
push
xor
adc
xchg
stos
push
inc
lahf
nop
test
fiadds
sub
sbb
adc
insb
loop
aad
adc
hlt
out
sub
test
add
mov
adc
and
pushf
loopne
jbe
jmp
inc
out
xor
lods
fisttpl
stos
jb
mov
xchg
icebp
mov
iret
jmp
inc
lea
int3
and
pop
std
subl
test
jmp
stos
mov
dec
fcomps
add
sahf
cmc
mov
xchg
add
sarb
cs
xchg
dec
jne
data16
cmp
or
inc
sbb
movsl
jle
push
scas
insb
and
bound
out
in
mov
xchg
push
sti
loop
fnsave
cltd
repnz
outsl
in
gs
pop
pop
xchg
cld
adc
pop
lock
enter
daa
cmp
fbstp
mov
outsl
daa
or
out
repnz
idivb
loopne
stos
imulb
ds
xlat
xchg
cmp
ret
adc
mov
aaa
fwait
stos
cmc
dec
and
add
adc
jecxz
je
mov
or
push
data16
leave
adc
inc
sbb
mov
sbb
sbb
jae
orb
dec
out
hlt
aas
adcl
mov
pop
dec
push
addr16
push
sahf
sbb
sub
pusha
inc
pushf
jecxz
jge
rorb
call
push
lahf
push
lret
daa
je
movsl
mov
jo
mov
addr16
fwait
inc
push
shrb
or
aam
cltd
outsl
push
arpl
xchg
ret
push
sub
mov
iret
lock
jle
cmp
pop
cmpsb
pop
shl
cwtl
jb
pop
mov
jne
pop
sub
repnz
xor
lods
testl
fdivs
sub
mov
push
or
sbb
mov
push
cmp
or
and
leave
in
movsb
fsubrs
lods
cmp
sub
mov
inc
subl
or
mov
xor
jle
push
cmp
fs
jmp
icebp
out
icebp
rcll
jecxz
push
push
outsb
dec
out
inc
clc
add
std
or
lock
add
jmp
inc
lcall
mov
add
jnp
push
aas
arpl
xor
rolb
hlt
cmpsl
scas
std
movsl
mov
movsl
fldl
lock
xchg
ljmp
push
lods
pop
xor
movsl
sub
repz
jne
mov
xchg
sbb
mov
ljmp
int3
bound
out
enter
or
jmp
jg
jmp
pop
mov
test
es
pop
mov
and
dec
cmp
or
je
arpl
in
push
test
xlat
mov
pop
lods
insl
lods
dec
pop
cmpsb
divl
rorl
fptan
xor
inc
xchg
data16
mov
leave
jge
lret
jmp
push
nop
and
xchg
dec
stos
cs
adc
popa
dec
push
sub
adc
cmpsb
fstl
xchg
push
in
in
xchg
bnd
es
cli
inc
jne
data16
or
ret
dec
jb
push
mov
sti
jle
daa
adc
push
cmpsl
fistl
cwtl
pop
in
mov
add
sbbb
lock
lret
push
dec
xor
jle
sub
rcl
nop
dec
or
das
adc
call
fisttpll
call
xor
out
push
out
repz
out
mov
sbb
fnstenv
cwtl
mov
ljmp
jmp
mov
and
popf
adc
inc
loopne
or
leave
pop
scas
ret
es
cmp
mov
mov
hlt
jmp
sub
adc
xchg
fwait
push
pop
mov
sub
movsl
hlt
inc
leave
test
cwtl
jmp
pop
adc
imul
call
ret
xchg
dec
pop
dec
imul
mov
xorb
mov
add
xchg
popf
mov
test
xchg
mov
inc
xchg
sbb
mov
mov
addr16
cmp
sti
inc
mov
loop
outsl
data16
cmp
mov
xchg
repz
mov
add
f2xm1
pop
mov
scas
in
adc
dec
add
ret
das
push
cmp
xor
or
mov
fcoml
lods
fstpl
xor
pop
dec
shrl
call
xchg
int3
das
mov
cmpsl
mov
sbb
push
mov
mov
fpatan
out
push
jmp
fidivl
xchg
out
mov
mov
push
cmp
mov
xor
push
ja
mov
pop
iret
daa
xchg
xor
lds
mov
cmp
mov
push
inc
pop
iret
dec
js
pop
imul
mov
or
and
notb
gs
sbb
dec
cmpsl
cmp
jl
adc
jno
lahf
mov
aad
xchg
gs
xorl
into
lods
xor
and
out
mov
push
push
push
xor
cmp
mull
or
imul
fdivrs
cmpb
aad
stos
aad
fidivl
push
dec
mov
fdivs
mov
xchg
testl
int3
call
cmc
dec
xchg
sub
imul
pop
imul
xchg
imul
ret
insl
jns
jp
push
test
mov
xor
aaa
jecxz
dec
int
jnp
pop
or
stos
cmpsl
movsb
and
jg
aaa
adc
clc
fs
fnsave
xchg
xchg
leave
mov
and
pop
int
shufps
lods
add
iret
mov
dec
imul
mov
ss
dec
pop
inc
test
jecxz
cmp
movb
fucomip
or
xchg
js
addr16
pusha
clc
das
outsl
xchg
aas
call
aas
lea
inc
fsubrl
je
add
loop
ljmp
adc
xor
mov
sub
scas
mov
mull
loop
aam
lock
and
push
sahf
ds
and
and
lea
and
and
inc
inc
mov
pushf
scas
xor
ds
ss
adc
test
cmc
ret
js
test
inc
lret
inc
dec
push
arpl
jnp
lods
in
sub
ds
fistps
sub
mov
cmpsb
loop
pusha
ja
pop
xchg
jmp
ljmp
call
mov
scas
jo
ja
aam
fsubrs
test
inc
mov
clc
fs
xchg
adc
stos
insb
and
ljmp
mov
adc
dec
cmp
mov
enter
mov
sahf
lret
push
and
cmc
cld
inc
push
mov
cmpsb
mov
arpl
mov
test
mov
push
jmp
pop
jmp
enter
sub
xchg
fmuls
sbb
call
cs
imul
insb
lds
add
mov
neg
adc
dec
ret
or
inc
ficomps
sub
in
cli
lret
sar
loopne
fs
cmpsl
add
filds
imul
movl
inc
mov
outsl
fistpl
push
mov
jg
pop
jle
xor
mov
pop
push
repz
shlb
push
pushf
lret
mov
cli
pop
sbb
sbb
xchg
inc
test
and
clc
xchg
xlat
aaa
jecxz
in
insb
sub
push
pop
sbb
adc
or
popa
pop
out
sub
mov
stos
sbb
push
out
mov
inc
inc
btrl
cmp
rcrb
ss
popa
clc
xchg
rcrb
into
addr16
and
jge
cmp
fdivl
xchg
lds
sar
roll
fxch
mov
sbb
andb
gs
dec
stos
lcall
xchg
jo
test
into
sbb
or
pop
scas
movl
add
xchg
inc
or
push
inc
repz
jo
in
push
insl
dec
ljmp
pop
andb
std
enter
adc
std
lock
in
cmp
sbb
mov
add
ret
shrl
cmp
push
dec
stc
cwtl
lods
push
jbe
mov
pop
push
lock
pop
jae
insb
fdivrs
xchg
add
fwait
lods
push
inc
lahf
std
into
mov
das
mov
sub
stos
mov
sbb
loopne
insl
rcrl
sub
and
stc
jge
push
or
aad
jae
pop
fs
mov
adc
push
mov
dec
mov
or
jg
adc
adc
jbe
pop
icebp
lret
bound
sbb
xor
int
addr16
hlt
sub
jle
mov
daa
cmp
gs
and
pop
or
push
inc
cmpsl
repnz
lea
stos
mov
shl
iret
cmp
mov
inc
in
jp
mov
pop
mov
scas
ljmp
cmp
adc
test
iret
mov
loopne
or
adc
subl
mov
jbe
pop
jecxz
scas
mov
ret
es
cld
xor
repz
rorl
dec
fcomps
and
xchg
mov
adc
ret
xchg
or
andb
arpl
jns
lahf
or
lret
or
jb
rolb
cld
das
rorb
mov
lret
mov
inc
stc
das
cli
dec
leave
sub
setb
mov
aaa
inc
outsb
sbb
in
cli
adc
xlat
fcmovb
lret
mov
xor
ficoml
inc
or
and
xor
das
fucomip
add
pop
push
fistpll
or
mov
std
dec
or
loop
sbb
loopne
push
xchg
ja
cmp
jecxz
les
sbb
fdiv
lcall
movsl
cmp
sbb
add
inc
in
dec
mov
repz
xor
imul
add
fcmovnu
xchg
int3
adc
sarb
mov
dec
or
or
rcl
cmp
inc
in
pushf
ss
mov
pop
clc
or
testl
fcmovu
sti
and
call
popa
push
fs
mov
push
aam
xchg
pop
divps
xchg
jb
mov
mov
mov
lods
cmp
mov
cld
xlat
jmp
add
sub
iret
das
sbb
or
cmp
xchg
test
mov
jbe
int
ja
fildll
xchg
aad
xchg
icebp
cli
imul
jae
ret
sarl
inc
mov
mov
fsubl
ljmp
repz
inc
sub
xorb
subl
mov
add
dec
add
movsl
pop
out
nop
sbb
pop
lods
popa
rcrb
fidivl
lock
jmp
or
xchg
mov
mov
and
pop
xor
loop
movsl
cmp
into
loop
mov
pop
aaa
hlt
gs
jmp
pop
push
pop
es
and
sbbb
out
push
inc
aas
outsb
push
jb
mov
mov
mov
fisubs
dec
inc
pusha
loope
mov
mov
push
lods
sbb
mov
sub
mov
inc
pop
call
fcomp
dec
mov
push
sub
or
adc
push
stc
inc
pop
lods
or
adc
sub
jg
inc
test
and
divl
and
pop
fstl
pop
push
xchg
out
test
cmp
adc
mov
xchg
test
pop
pop
inc
or
inc
xorb
mov
stos
test
int
mov
jne
aad
in
inc
aad
lods
sub
or
in
sbb
js
xchg
xchg
inc
jg
imul
pushf
jge
pop
arpl
in
repnz
call
dec
insl
out
push
mov
mov
sbb
popf
scas
int
testl
xor
mov
jecxz
imul
ljmp
sub
shlb
mov
sahf
outsl
dec
cltd
and
and
cmp
mov
ficoms
push
loop
test
add
gs
adc
clc
inc
subl
mov
rol
imul
pop
aam
sbb
mov
imul
jno
add
inc
int
mov
or
in
dec
in
outsb
mov
and
sub
adc
stos
sub
fwait
mov
scas
lahf
sbb
dec
and
xchg
push
add
xchg
push
push
test
dec
sub
mov
arpl
xchg
ret
mov
dec
fwait
mov
cmp
jl
sub
icebp
cwtl
jne
iret
mov
rorl
leave
push
push
fs
int3
or
stc
fcoms
pop
mov
insl
sub
in
inc
dec
or
shlb
lock
adc
pop
out
sbb
iret
xor
movsl
sbb
jne
dec
clc
cmpsb
mov
xlat
cwtl
inc
bound
lods
push
ljmp
notb
das
dec
mov
push
or
push
cmpb
mov
jns
ds
jno
xchg
jne
and
out
rol
sbb
or
jmp
test
lcall
push
inc
ds
adc
dec
cs
cmp
pop
pop
call
lahf
fs
adc
mov
jg
push
dec
xor
jl
mov
sub
lea
cmp
jmp
lea
sbb
push
pushf
mov
aaa
ds
cmp
clc
inc
js
fldcw
inc
out
jne
adc
pop
jns
push
lods
adc
rcrb
loopne
add
shlb
lahf
cmp
fwait
sub
xchg
shl
dec
cmpb
and
sbb
iret
cmp
sbb
loop
shl
adc
cmpsb
cmp
cmp
dec
adc
cmp
jle
inc
push
aas
push
sub
xchg
js
fsub
push
hlt
int3
or
out
out
out
xchg
les
nop
mov
mov
out
in
adc
cmpsl
test
push
cltd
mov
push
out
jne
es
subb
sbb
ds
and
pop
jge
ret
sub
xlat
addb
cmp
mov
cmpsl
ljmp
add
negb
jg
dec
subb
sub
shll
fmuls
lret
adc
sbb
outsl
fnstcw
push
aam
xchg
or
mov
add
inc
mov
or
in
pop
test
sahf
add
push
mov
push
je
rolb
and
jp
stc
lret
inc
mov
and
ds
xor
pop
push
add
xchg
jbe
out
sbb
ss
pop
iret
adc
aaa
cs
or
cmp
jg
mov
mov
add
sbb
in
aad
ret
shr
cli
mov
xchg
inc
jnp
push
and
inc
insb
shll
adc
push
mov
cmpsb
dec
cld
cmp
ret
es
sbb
fadds
imul
int
jbe
pushf
push
arpl
andb
mov
jbe
mov
das
in
jle
jb
and
popf
adc
mov
or
mov
sub
mov
mov
and
push
xlat
mov
sub
js
test
lcall
mov
std
outsb
inc
stc
pop
sbb
dec
fcom
or
imul
sarb
adc
arpl
in
pop
movsl
push
frstor
jne
xchg
sbb
push
cmp
xor
jae
or
notb
movsb
jae
mov
dec
jl
ds
lods
pop
push
out
pop
ret
pop
icebp
xchg
dec
gs
pusha
or
jno
xor
adc
and
dec
pop
lds
add
sbb
dec
inc
push
or
scas
jmp
out
xor
xchg
mov
div
adc
es
cli
aad
pop
dec
stos
add
fiaddl
arpl
push
mov
jp
inc
in
cmp
gs
mov
xlat
mov
add
push
jg
add
xchg
dec
rclb
mov
or
or
out
pop
pusha
stos
and
push
repz
adc
sbb
push
pop
or
mov
into
popf
fiaddl
loopne
dec
dec
leave
xchg
mov
js
cmp
pushf
aaa
aaa
lcall
icebp
mov
add
dec
xchg
das
dec
and
fidivrl
adc
cli
inc
push
call
iret
add
fyl2xp1
movsb
cmp
fistpll
sbb
push
cltd
add
xchg
fs
cmp
inc
lds
fsubrl
fildll
cmp
inc
xchg
adc
ret
mov
scas
aaa
cmp
xchg
push
mov
js
hlt
mov
ret
and
iret
lcall
add
fisttpll
mov
outsl
lret
add
inc
ljmp
rol
sbb
aam
adc
push
pop
xchg
xor
adc
cmp
sahf
mov
inc
cmp
imul
orl
mov
orb
push
xchg
sub
leave
js
jle
mov
add
sub
inc
pop
loop
mov
cltd
loope
mov
adc
fs
sub
clc
gs
jmp
aad
push
pop
mov
aas
add
sbbb
andl
sbb
mov
jns
cmpsl
xor
imul
inc
loopew
mov
js
mov
push
std
push
pop
out
dec
push
adc
jbe
cmp
icebp
clc
sub
fs
je
ret
pop
clc
inc
add
outsl
ret
mov
fcomps
test
fistpl
scas
cmpb
ljmp
stos
add
sbb
cmp
adc
xchg
outsl
add
mov
xchg
add
adc
xor
or
push
decb
test
aaa
aaa
les
cmp
push
inc
popa
adc
and
test
mov
testb
hlt
cld
mov
shl
sahf
xchg
or
mov
mov
dec
shll
sub
xchg
mov
and
pop
pop
adc
jle
adc
inc
and
or
shr
pop
mov
adc
clc
pop
shll
movl
aas
pop
xor
imul
fs
loopne
pusha
loope
sub
cmpsl
imulb
scas
inc
scas
cltd
xor
repnz
xor
pop
rorb
dec
xor
rcrl
fidivl
lock
cmpsl
mov
cmpb
inc
jle
mov
cli
fnstsw
add
mov
decb
test
pop
iret
mov
pop
dec
mov
dec
xchg
movsl
rcrl
pop
adc
cmpsl
jle
jne
xchg
sbb
jmp
pop
add
inc
in
outsl
inc
enter
cmp
jo
out
dec
add
mov
sbb
test
fildll
dec
lcall
push
push
in
aas
cwtl
push
jbe
dec
jae
call
cmp
rcrb
adc
pusha
jb
mov
mov
in
cld
xor
inc
test
je
fs
jns
or
jle
movsb
aas
jge
mov
or
ret
cld
sub
fwait
outsl
test
mov
xchg
in
ja
outsb
std
roll
loopne
inc
pop
pop
push
adc
fmulp
insb
pushf
inc
dec
mov
mov
das
sbb
mov
cmp
es
mov
or
inc
iret
rcrb
inc
jecxz
insb
insl
mov
dec
adc
mov
pop
mov
sub
ss
cltd
sub
les
push
mov
stc
lcall
inc
dec
xchg
int
inc
mov
ror
dec
sub
pushf
xchg
dec
clc
popa
push
push
divl
and
xchg
add
and
adcb
mov
dec
fisttps
out
imul
mov
clc
or
cmp
add
push
sub
mov
sub
xchg
ret
jecxz
add
and
daa
test
push
cmp
ss
push
push
mov
jmp
shll
xchg
roll
orl
inc
jle
clc
sbb
outsl
aad
pop
cmpl
lds
aas
sbb
out
sahf
xchg
cwtl
or
mov
mov
inc
jg
lahf
sub
mov
stos
fs
push
rcpps
or
sub
jp
pop
xor
mov
and
push
pop
into
jo
push
outsb
jge
fdivrs
testb
dec
add
inc
dec
adc
stos
je
movsb
or
or
pop
mov
jb
push
repnz
addr16
hlt
subb
imul
or
addl
imul
xchg
imul
lret
loope
or
aad
pop
add
mov
fadd
pop
dec
popa
mov
pop
rolb
pop
sahf
jecxz
addl
out
push
std
je
leave
or
or
adc
dec
xchg
adc
rcl
bound
ds
daa
jo
sahf
xor
fcomps
clc
jnp
inc
mov
imul
leave
push
cli
cmp
dec
mov
mov
cmc
xor
inc
pop
dec
jnp
sbb
or
rorb
bound
fimull
cltd
xchg
jmp
repz
jo
xor
jmp
icebp
jmp
nop
mov
lds
lods
fmull
imul
mov
and
add
push
xor
xchg
jb
testb
inc
bound
sbb
stc
push
dec
stc
push
lock
dec
jmp
popa
xlat
movsb
xchg
pop
inc
addr16
aaa
pop
push
movsl
xchg
xor
out
imul
enter
lods
jge
pop
xchg
mov
and
int
loopne
xchg
imul
movsb
in
fistps
cmp
ss
shl
outsl
sarl
aam
inc
mov
mov
cld
shl
pop
test
pop
rol
mov
jae
mov
mov
sub
or
dec
mov
add
add
add
add
addr16
cmpsb
aam
sbb
jecxz
mov
divb
movsb
fildll
leave
adc
push
in
pop
adc
fisubrl
es
aas
out
sarb
xor
rclb
mov
jmp
pop
and
pop
aas
jmp
mov
and
daa
jb
in
adc
iret
mov
mov
mov
int3
dec
xchg
popw
mov
sbb
cmc
divl
imul
inc
jbe
or
mov
ljmp
cmp
adc
lods
and
fistpll
loope
or
das
inc
data16
lret
inc
mov
mov
mov
jmp
jne
lcall
jno
in
std
loop
in
mov
dec
jnp
cmp
push
es
xchg
add
rcrl
xchg
sub
push
sbb
stos
aaa
rcr
cmpl
jp
repnz
into
cmp
cmp
test
subb
mov
sub
xor
addr16
xor
ret
pusha
dec
int
push
add
shl
insb
or
adc
call
scas
sbb
mov
daa
jb
inc
xchg
push
mov
push
and
add
mov
rcrb
sub
pop
push
cs
mov
outsb
or
push
lods
repz
incl
sub
aad
adc
movsl
data16
inc
lods
mov
mov
adc
mov
sbb
push
fimuls
aad
pop
mov
mov
loopne
mov
xchg
arpl
into
cmp
adc
aad
sahf
inc
gs
les
repz
xchg
ret
inc
inc
xchg
jmp
mov
in
dec
sahf
mov
in
xlat
mov
ret
pop
adc
fldenv
xchg
xchg
mov
mov
inc
loope
mov
or
dec
mov
into
loope
out
pop
mov
js
push
and
movsb
mov
and
shl
jmp
movsb
sub
pop
addl
inc
shrl
nop
iret
fadds
add
mov
mov
pop
push
push
mov
mov
cmp
push
enter
leave
fcoms
mov
pop
add
pop
pop
fs
jge
xchg
dec
in
pushf
inc
sti
sub
xchg
shlb
push
push
cmpsl
jnp
mov
push
cmc
aad
shrb
pop
das
pop
or
fsubrs
lcall
lock
inc
jnp
jmp
pop
rol
aam
lea
inc
xchg
pusha
dec
push
fsubl
lret
cmc
jle
jle
xlat
dec
dec
xor
adc
xor
cmp
cld
test
in
or
xchg
lock
int3
sub
scas
xor
mov
mov
pop
pop
or
vunpcklps
imul
imul
lret
lret
mov
leave
outsl
movsl
pop
cmp
mov
pop
cmpsl
jp
sbb
pop
aam
sub
sahf
out
ss
mov
push
out
mov
imul
loopne
xchg
jo
push
cwtl
fcmove
xor
push
movsl
lahf
cmp
scas
in
test
xor
cmp
cmpsl
test
jg
pop
pop
out
int
cmp
loop
jg
fwait
js
push
popf
and
inc
popl
loop
mov
adc
repnz
cmpsb
inc
jge
lods
cmp
adc
inc
clc
push
out
jp
out
or
mov
je
aad
xchg
jae
daa
add
rorl
cmp
add
les
cmp
outsb
sarl
clc
xorb
adc
jg
in
in
xchg
leave
cwtl
addr16
jne
mov
cwtl
push
in
sub
in
xchg
inc
sub
stos
fs
out
add
out
movzbl
add
jl
sarb
and
loope
jns
fwait
subb
add
loop
test
cmpsl
divb
and
inc
inc
and
cmp
add
leave
das
pop
int3
jp
pop
loopne
shr
pop
mov
pop
repnz
push
test
adc
imul
or
jne
dec
in
popa
xchg
xor
repnz
pop
xchg
sbb
insb
lods
fs
sbb
push
loopne
out
mov
mov
iret
repnz
mov
mov
fiadds
pop
push
scas
fucomi
mov
loopne
nop
and
icebp
test
add
lds
or
pop
outsb
push
add
lea
sbb
mov
fimuls
sahf
xor
es
lret
xchg
jno
decl
into
testb
inc
ds
push
push
pop
dec
lock
push
fistps
cmpsl
mov
or
pop
cmc
jne
push
mov
cmp
stc
sbb
inc
notb
mov
scas
mov
xchg
into
jg
mov
sub
and
adc
mov
subl
in
sub
imul
or
sub
imulb
clc
test
jnp
scas
movsb
or
std
cmpsl
jae
adc
rclb
sub
inc
sub
fs
movsb
and
mov
sbb
rcll
scas
push
xchg
data16
lea
pop
pop
arpl
pop
cmp
insl
shrl
jo
add
push
sub
mov
push
or
xor
adc
ds
lret
jno
mov
and
mov
adc
repz
imul
ja
cmp
mov
scas
shll
test
sbb
and
sub
jg
lret
push
fcmovbe
xchg
notw
aad
xchg
push
and
ljmp
lock
xor
mov
les
mov
jnp
jns
lret
mov
mov
push
mov
xchg
pop
push
add
jns
ret
lds
xchg
cli
in
xchg
and
dec
push
or
and
stos
stos
fidivl
cmpsl
scas
mov
in
mov
or
jmp
jg
pop
insl
push
mov
nop
sbb
cmp
fbld
pop
das
inc
shll
out
shll
daa
ss
add
or
sub
push
rcrl
ss
mov
out
lret
fs
lcall
xor
jp
push
dec
jnp
and
dec
ljmp
nop
add
shll
pusha
insl
mov
jo
or
andl
js
pop
sbb
pop
add
jo
push
mov
rcll
push
into
xchg
xchg
dec
shrb
arpl
stos
das
mov
lcall
cmp
cs
out
sub
lret
pop
jne
gs
in
jo
adc
xchg
cmp
xchg
push
push
push
xchg
mov
cmp
insl
ss
arpl
sub
mov
xor
jge
aad
sbb
inc
and
pop
or
inc
in
mov
adc
or
rcrl
jae
cmp
lahf
and
inc
jo
push
mov
ljmp
jae
rorl
in
aaa
fdivr
push
jge
sbb
push
or
nop
std
dec
dec
test
cmpsl
insl
mov
pop
adc
ficompl
cmpsl
out
dec
mov
jo
imul
ss
in
scas
stos
push
imulb
shlb
or
or
cmc
pop
sbb
xchg
push
xchg
aas
mov
icebp
repnz
adc
pop
out
roll
pop
sub
cmp
and
push
inc
dec
xor
or
mov
sub
and
mov
sbbb
daa
inc
cmc
mov
pop
and
xchg
pop
lret
adc
and
pop
adc
movsl
and
mov
sub
mov
adc
call
xor
ficoms
out
xchg
mov
push
dec
mov
cltd
xchg
xchg
fnstenv
jne
jle
mov
mull
dec
fdivrl
xchg
aas
in
dec
pusha
dec
sti
adc
pop
outsl
shrb
mov
addr16
sub
xor
mov
idivb
adc
bnd
les
adc
mov
mov
sub
pop
or
aad
std
rol
cmpsb
js
or
aam
and
add
cld
outsb
sbb
decb
push
dec
sysenter
test
pop
pop
xor
pop
mov
push
dec
sub
lock
test
fucomi
add
movsb
mov
icebp
shll
pop
mov
and
xchg
xchg
add
pushl
add
add
xlat
add
sbb
mov
lahf
cmp
int3
insb
int
sub
aas
insl
sbb
shl
pop
fstpl
add
nop
jmp
sbb
jmp
fildl
rcll
scas
ds
adc
sbb
data16
mov
mov
sbb
les
dec
daa
mov
pop
sub
stos
ljmp
mov
adc
jnp
mov
xor
xchg
mov
or
imul
mov
icebp
sub
and
rep
jecxz
sbb
inc
pop
or
xor
pop
inc
out
pop
jmp
int
xchg
pop
out
dec
into
inc
repnz
lock
loope
mov
mov
imul
adc
jbe
and
imul
fisubrs
cmp
pop
aaa
mov
sub
cmp
out
sub
add
test
gs
mov
scas
bound
pop
cmp
and
cmp
mov
stos
dec
fildl
test
jg
pop
out
xor
jns
xor
js
xor
mov
and
jmp
cmpsl
insl
push
mov
movsl
jo
xor
and
popf
fs
into
xor
out
aam
aam
fsubs
add
icebp
and
jg
mov
popf
aad
xorl
or
xor
or
arpl
fbstp
or
rcl
scas
fistps
jl
xorb
add
inc
mov
sub
mov
jo
cmp
je
or
lock
data16
lock
fsubl
lock
mov
cmp
xor
xor
dec
adc
out
cmp
push
pop
mov
jle
nop
dec
lret
rorb
roll
push
sbb
in
and
xor
fldt
hlt
addr16
jbe
inc
dec
sti
adc
adc
addl
jecxz
stos
lahf
mov
lcall
les
shrl
mov
mov
leave
rcl
mov
xchg
or
jb
leave
aad
stos
in
jl
and
mov
inc
mov
int
sarb
mov
cwtl
test
std
or
cmp
addr16
adc
sbb
repnz
dec
sub
xor
pop
dec
sarb
sahf
xchg
inc
dec
subl
or
jp
pop
rcl
rclb
push
ret
jmp
mov
add
or
pushf
aas
in
dec
mov
sbb
dec
fwait
inc
pop
or
or
std
sbb
mov
xchg
orb
push
sub
mov
push
pop
or
lret
xchg
or
or
jmp
xchg
push
jp
adc
adc
hlt
outsl
push
dec
sbb
xchg
cld
push
xor
mov
sub
mov
add
aam
mov
sahf
push
insb
dec
aaa
jp
mov
jl
test
sbb
fcmovbe
dec
in
sub
and
xor
pop
outsl
cmpsb
dec
shl
or
cld
gs
mov
and
xchg
fidivrs
stos
outsl
sub
ret
inc
or
movsb
mov
mov
ss
sub
jns
pop
hlt
mov
int
cmp
loop
pop
adc
int
mov
stos
ljmp
push
jb
lret
mov
and
adc
jmp
out
pop
jmp
cmc
orl
dec
bound
hlt
ficomps
sbb
outsl
push
test
mov
ret
ror
cmp
popf
sahf
pushf
sbb
fisubl
jecxz
stos
pop
test
pop
push
loopne
jb
lret
push
inc
push
push
je
out
pop
cmp
push
xchg
xor
scas
in
xchg
cmp
outsl
mov
es
jne
cld
popa
dec
jae
mov
push
andl
lea
cmp
mov
dec
lret
pop
mov
push
or
sub
sbb
fmul
rcrl
stc
sbb
loopne
mov
adc
sub
test
add
aam
inc
sub
fldcw
mov
das
lds
bnd
call
out
out
cmp
popa
dec
inc
divl
adc
dec
mov
stos
sbb
xor
sahf
scas
stc
test
xor
fldlg2
and
push
or
repz
xchg
cs
sbb
mov
push
shlb
mov
out
movsl
ret
or
or
jae
pop
mov
dec
js
sbb
jne
pop
mov
sub
data16
add
call
sbb
outsl
and
push
mov
insl
inc
outsb
stos
lcall
sti
mov
lret
pop
jp
daa
stos
outsl
arpl
int
dec
lods
insl
xor
aam
adc
js
mov
jp
jb
stc
xchg
shrb
pop
xor
ret
xor
add
xchg
mov
out
cwtl
fisttpll
pop
adc
nop
movsl
inc
sub
outsb
jecxz
popa
repnz
ficoml
adcb
cmpsb
loope
sub
imul
mov
ss
in
push
add
or
movsb
add
test
jge
jbe
clc
mov
mov
jns
in
inc
loop
insl
xchg
sub
jne
cmp
mov
and
cmp
shlb
pop
lds
insl
push
dec
pop
mov
nop
lds
push
jns
fldenv
cli
dec
dec
add
jne
cmp
lahf
aad
xchg
int3
fnstsw
mov
ljmp
imul
adc
cld
fnstenv
xor
daa
mov
stc
stos
movsl
push
xor
cmp
add
xchg
aas
adc
jno
cmpsl
xor
pop
xchg
mov
in
sbbl
mov
sbb
mov
mov
xor
lcall
add
mov
pop
mov
sbb
pop
jno
cmp
daa
sub
aaa
mov
les
test
cmpsb
mov
cli
loopne
mov
nop
ja
mov
dec
fnstcw
jg
cmp
aam
addb
sti
leave
add
insl
adc
jl
addr16
mov
jns
aaa
jle
shrl
xor
xchg
cmp
xor
dec
push
fldcw
jmp
aad
and
push
lods
ror
push
lods
lahf
cltd
pushf
mov
invd
add
pop
shr
mov
inc
push
shlb
test
jge
lock
push
into
rolb
ret
push
mov
daa
clc
int
sub
pop
mov
add
mov
cmp
cltd
enter
popa
add
cmp
mov
cmp
xlat
les
stos
pop
inc
sbb
sub
add
loope
loopne
mov
adc
aaa
ret
pop
movsl
mov
mov
push
je
push
pop
pushl
push
sbb
jnp
adc
mov
push
xchg
jecxz
lods
pop
push
xlat
enter
inc
das
sub
jecxz
mov
lods
lcall
jns
mov
pop
pusha
push
xor
jb
imul
and
cwtl
fnstcw
sbb
ret
scas
fmuls
push
movsl
add
jecxz
xchg
out
icebp
outsb
adc
pop
gs
inc
lea
nop
mov
mov
jl
cmp
lcall
xor
aad
ret
loop
into
add
movsl
das
pop
cmp
xor
dec
mov
xchg
out
pop
scas
imul
ret
add
jmp
add
test
jg
adc
sti
dec
cmpsl
jns
lahf
cmpl
cmp
sub
cmpsl
stos
js
sbb
mov
aam
je
adc
and
or
xor
inc
sbbb
cmp
adc
mov
xchg
repnz
repz
dec
mov
addl
sbb
lods
jecxz
into
jmp
pop
lock
push
leave
xor
mov
and
clc
pop
out
pop
fisttpl
or
js
pop
shl
pop
repnz
movsb
xor
test
test
add
mov
addr16
scas
roll
mov
lds
out
xchg
sahf
mov
in
int
pop
mov
xlat
insl
cld
xchg
ss
movsl
jge
es
xlat
jb
pushf
insl
jg
call
lcall
jmp
cwtl
cwtl
mov
or
cs
icebp
pop
xchg
dec
inc
pcmpeqd
mov
loop
call
xchg
sbb
sub
pushf
or
jge
inc
loope
sub
jle
mov
xchg
dec
orl
inc
jmp
pop
leave
xor
pop
inc
mov
jb
je
jnp
push
or
es
jmp
test
in
test
stos
sbb
aam
mov
pop
inc
cmc
data16
xchg
mov
call
inc
fs
cltd
sub
cmpsb
cmpsb
or
adc
and
xchg
pushf
out
insl
mov
bound
dec
cmp
xchg
push
nop
shlb
arpl
mov
and
lea
ja
push
and
imul
movsl
dec
xor
mov
and
pusha
sahf
ss
push
js
cmpb
sub
sbb
mov
enter
jb
sub
scas
mov
jno
ret
cmp
jnp
inc
aas
loope
sbb
cli
mov
cltd
arpl
jne
xlat
mov
iret
es
movsl
int3
adc
push
clc
addr16
or
cmp
mov
mov
xchg
push
adcl
inc
lds
les
push
mov
sbb
cmp
cmp
js
mov
fdivrl
in
xor
ficomps
dec
les
mov
lods
adcl
cs
enter
loopne
adc
pop
or
add
fnstsw
push
shll
inc
fwait
xor
push
mov
lret
sub
jecxz
imul
mov
mov
push
and
xchg
mov
lea
add
jbe
dec
jmp
test
and
aas
push
dec
in
mov
xchg
sub
aas
xor
adc
outsl
mov
dec
hlt
or
pop
mov
int3
mov
loop
pop
pop
sub
inc
sbb
xchg
xchg
mov
lods
pop
or
cmp
adc
and
in
push
orl
and
popa
lcall
pop
loopne
shrb
pusha
dec
and
frstor
push
cli
xchg
cmp
call
lret
cltd
mov
sbbb
xor
jnp
lret
lcall
aam
sub
pop
mov
or
sub
stc
xchg
mov
ss
data16
and
mov
xchg
push
stos
jg
inc
fnstenv
dec
sbb
enter
cmpb
test
es
or
subl
sbbb
test
into
js
cwtl
shll
lods
inc
push
mov
mov
jp
jle
xor
xor
push
out
out
sbb
or
roll
sbb
sub
xor
mov
repnz
clc
mulb
jne
sbb
cmpsl
std
cmc
xor
xor
pop
stos
pop
int3
xchg
jo
inc
mov
inc
lock
or
les
mov
push
dec
stos
iret
lock
aaa
aas
mov
scas
stos
or
addl
dec
stc
push
imul
rolb
xchg
pushf
mov
adc
sbb
clc
xor
mov
jns
insl
iret
pop
popf
xor
jle
add
into
sub
pop
roll
mov
mov
xchg
in
inc
or
cli
mov
shrl
inc
mov
cs
sbb
outsb
mov
popa
and
jo
icebp
dec
shr
dec
pop
rcrb
xor
lods
fcompl
fnsave
jno
xor
aaa
cmpsb
out
push
out
sub
gs
mov
ret
repnz
mov
sbb
adc
mov
std
dec
sbb
std
ja
sahf
and
add
cld
ljmp
xchg
leave
xchg
inc
xchg
inc
pop
lods
cmpsb
add
pop
mov
sahf
sbb
dec
lret
movsl
mov
int
mov
lahf
jmp
cwtl
mov
popf
roll
mov
inc
movsb
inc
sahf
jbe
push
xchg
lea
mov
add
mov
mov
jle
mov
lea
xor
mov
test
in
pop
pop
push
mov
sbb
jnp
sub
imul
dec
imul
fsubl
and
xlat
mov
xor
mov
push
aaa
repz
dec
push
lret
sub
dec
mov
dec
ljmp
add
dec
dec
mov
sub
sbb
adc
jae
pop
xor
jae
xchg
frstpm(287
popa
stc
sub
add
test
and
xchg
sub
mov
das
fnstenv
out
pop
stos
outsl
push
pop
dec
insl
mov
and
xor
dec
mov
mov
sbb
xchg
push
sbb
add
dec
inc
lahf
xorl
mov
imul
loopne
pushf
mov
movsl
hlt
das
and
clc
mov
pusha
cltd
out
test
pop
push
jmp
xchg
aam
jo
imul
add
stos
stc
js
fldenv
and
pop
fyl2x
add
cmp
cltd
and
push
jbe
or
jg
rol
mov
adcl
and
mov
cmp
add
gs
mov
add
mov
jbe
mov
out
mov
sub
mov
jp
mov
sub
repz
sub
call
mov
clc
push
gs
ss
dec
repnz
mov
mov
fcomps
or
cltd
jg
imulb
mov
das
popa
jb,pt
cltd
or
fcomps
enter
das
pushf
or
outsb
dec
mov
and
test
sbb
xor
jge,pt
popf
mov
mov
mov
pushf
pop
xchg
xchg
adc
call
stc
adc
out
mov
xchg
fs
ljmp
pop
fisttpl
leave
sbb
jmp
push
aas
jmp
inc
add
add
frstor
nop
aaa
pop
icebp
stos
outsb
inc
mov
cmpsb
mov
push
dec
dec
dec
cltd
push
cmpl
mov
repz
xchg
into
sbb
jns
or
xchg
xchg
pop
push
inc
mov
insb
outsl
push
mov
arpl
jo
adc
mov
jo
add
sub
mov
adc
daa
mov
cmc
bound
cwtl
mov
cmc
push
xor
dec
icebp
test
sub
pop
sbb
in
and
mov
les
cld
cmp
fldenv
es
push
scas
adc
jecxz
sbb
pop
aad
mov
xchg
mov
popa
test
cmpsl
cwtl
pushf
pushf
cmovp
cwtl
loope
mov
test
lret
lcall
pop
jge
mov
cmp
shl
popf
sbb
aas
push
and
mov
gs
scas
cmp
fs
mov
fldcw
movl
cmp
out
das
pop
xor
popf
ficompl
in
sub
ret
jge
sbb
cmp
inc
adc
repz
cs
jne
mov
jns
fnstsw
sub
mov
xorl
subb
cld
into
shll
roll
icebp
xchg
leave
je
shrl
push
cmp
sub
mov
mov
mov
adc
and
cmc
stos
cmp
jns
sti
fst
out
stos
pop
xchg
jp
mov
sbbl
and
icebp
in
adcl
dec
push
and
dec
roll
out
aad
cmp
fisttpl
mov
jle
mov
xchg
cmp
test
jo
cmp
rcll
inc
inc
jecxz
or
cld
jne
push
int3
in
sbbl
roll
out
sub
pop
inc
ficompl
loopne
mov
cmp
sub
aas
add
dec
daa
ror
push
mov
or
daa
lahf
jnp
inc
jge
mov
psubq
out
sbb
bound
subl
jg
inc
dec
ljmp
lahf
jbe
pushf
sbb
daa
add
out
repz
int3
cmp
cmpsl
aam
mov
push
jmp
clc
cltd
push
daa
sbb
fmull
into
sbb
push
into
mov
jb
popf
adc
mov
mov
pop
out
dec
jle
icebp
fwait
out
xchg
sbb
or
insl
daa
push
out
mov
and
mov
dec
cmp
inc
xor
add
or
ficoms
cmp
insb
leave
in
bound
lds
sbb
and
mov
mov
cs
inc
aas
or
cmp
sbb
add
and
lahf
pusha
push
mov
call
sbb
scas
xor
pop
outsl
xchg
gs
jmp
adc
push
loopne
rcrb
sbb
hlt
adc
push
stc
and
adc
dec
sbb
out
jp
icebp
xor
test
dec
cld
mov
lahf
jecxz
mov
inc
jnp
mov
mov
scas
mov
add
jg
cmp
and
stc
xor
xchg
mov
pop
and
jle
outsb
std
shll
stos
sbb
dec
pop
pop
push
arpl
sub
fcmovu
push
ljmp
ja
fs
divl
add
push
jmp
mov
push
cmp
and
ret
gs
mov
dec
mov
xor
std
lock
sub
and
imul
add
adc
dec
cltd
or
or
jp
mov
cmp
fcomi
dec
aad
cmp
xor
xchg
fadds
ss
sbb
or
loopne
fs
xorl
mov
mov
and
jns
popa
add
pop
jmp
sub
cmp
mov
cli
mov
cwtl
sub
addb
adc
cli
cmp
push
add
jmp
lds
mov
xchg
add
sarl
pop
cld
mov
sti
in
data16
mov
push
inc
xchg
aad
les
adc
mov
push
jl
lock
xchg
push
push
add
fnstcw
cs
rcrl
xchg
inc
in
xor
add
mov
outsl
or
in
loop
inc
out
in
xchg
cs
push
iret
lock
sub
push
pop
xchg
push
mov
and
push
std
push
fs
repz
sar
adc
adc
bound
and
stos
lock
flds
cmp
mov
testl
adc
repz
dec
fwait
lret
std
jmp
bound
cmp
xchg
lds
adc
test
push
mov
cmp
hlt
mov
enter
iret
push
mov
pop
dec
pop
test
pop
xchg
test
and
or
mov
push
inc
imul
and
inc
sbbb
shlb
out
cs
push
xlat
mov
dec
push
test
jbe
mov
mov
push
xlat
push
xchg
mov
and
fwait
pushf
inc
cmp
xchg
mov
xchg
aad
jl
bswap
inc
push
pop
test
mov
xchg
mov
fidivrs
jbe
adcl
xchg
insl
mov
cmp
dec
jge
aaa
mov
inc
mov
mov
aam
scas
jg
jb
arpl
or
std
jg
jne
adc
inc
into
fdivrl
dec
adcb
push
fsubp
inc
cmp
cmp
call
sahf
scas
into
insb
dec
jb
mov
cmp
add
test
jg
xlat
adc
mov
mov
jnp
sub
lods
adc
or
jge
inc
fs
or
add
add
shl
outsb
and
inc
aam
jl
das
lret
test
out
inc
nop
jecxz
jge
sarl
and
iret
rolb
lods
mov
mov
push
ret
fldl
mov
mov
jb
mov
add
pop
nop
das
xor
push
mov
push
sbb
in
sbbl
pop
sbb
fwait
pop
stos
or
push
scas
add
test
adc
push
sbb
insl
std
bound
cmp
sub
mov
mov
adc
pusha
cmc
adc
leave
mov
mov
imul
jp
mov
sbb
pusha
pop
pop
push
mov
sub
xor
mov
movsl
cwtl
hlt
insl
and
xlat
inc
mov
hlt
sbb
inc
push
iret
call
imull
and
inc
dec
out
and
xor
jl
fadds
fistpll
xor
scas
fidivrl
adc
jge
enter
and
les
pop
sub
jmp
stos
push
ret
jae
jmp
jae
add
pop
cmp
sbb
in
mov
std
leave
shll
in
in
lea
or
xor
movsb
negl
dec
aaa
int
int3
cmp
push
fcomps
fs
pop
into
jno
jnp
pop
sbb
push
js
addr16
dec
sar
enter
push
mov
insb
sub
sub
or
paddb
sub
stc
and
lods
adc
ret
xor
test
push
adc
in
mov
cmpsb
or
leave
loopne
xchg
pushf
adc
jle
fmuls
cmc
jb
pop
push
xchg
cs
cli
xor
insl
mov
pop
fisubl
push
sbb
das
xchg
jecxz
ret
cmc
lret
dec
jg
mov
cmp
lods
ret
ret
call
pushf
jp
cmp
fcoml
jne
inc
addb
mov
or
pop
lcall
out
mov
pop
outsl
shlb
int
jle
cmp
popl
lahf
ss
jne
xchg
add
enter
imul
jne
fs
jge
mov
pop
std
lret
loopne
out
pmaxub
out
fs
dec
xor
xor
mov
or
mov
xchg
lret
stc
push
cmp
imul
jbe
scas
out
jmp
push
and
xchg
mov
jno
clc
out
mov
xchg
std
jb
fisubs
pop
pop
je
add
nop
test
je
lds
icebp
cmp
pop
cmpsb
mov
call
sbb
pop
ljmp
enter
add
adc
cli
ss
jno
popf
ficoms
enter
adc
adc
aaa
add
imul
sbb
rolb
cmp
sarl
rdtsc
popf
mov
add
lret
dec
sarb
pushf
and
jg
leave
pushl
fimull
lods
popf
addr16
shrl
cld
call
loopne
push
jns
or
int3
mov
lods
adc
mov
fndisi(8087
push
mov
or
imul
divb
jl
push
xchg
in
aaa
jl
ficomps
cmp
mov
movsl
xchg
jmp
ds
in
mov
dec
cli
popf
pop
pop
jge
cwtl
sub
xlat
adcb
pushf
push
aas
stos
xchg
cwtl
clc
add
addr16
dec
add
xor
mov
mov
push
inc
daa
rcrb
fadds
push
add
fs
in
adc
add
cmp
mov
fimuls
jp
sbb
inc
enter
cmp
testl
push
adc
inc
movsb
pushf
sarb
adc
pop
sbb
pop
and
inc
pop
loope
sub
aaa
dec
dec
or
popf
cmc
es
bound
divb
mov
addr16
inc
ret
adc
fnstenv
push
arpl
xor
add
inc
movsb
pop
out
in
xchg
and
inc
pusha
out
pop
mov
and
daa
sub
loope
or
cmp
int
loope
fwait
or
mov
std
call
xchg
dec
mov
push
and
xor
lods
xor
mov
inc
mov
addl
mov
int
cmp
popf
test
and
push
lods
inc
outsl
mov
cmp
xchg
jo
push
sbb
negb
inc
fisttps
xor
insb
push
fimull
inc
in
mov
stos
mov
test
add
ss
pop
je
xchg
imul
push
pop
jecxz
cld
mov
roll
pop
xchg
add
loope
hlt
out
add
bound
imul
xchg
jno
or
int
ja
lds
pop
jno
xchg
mov
jp
push
adc
cmp
movsb
cmc
cmp
cltd
test
push
mov
test
out
jmp
cmp
pop
and
mov
inc
lret
aas
xor
xchg
and
lock
sbb
mov
movsl
daa
inc
jo
rorl
cmp
lret
das
out
bound
scas
loop
in
lret
pop
inc
addr16
xchg
icebp
adc
lea
jb
mov
repnz
mov
das
pop
sbb
jg
cmp
lods
std
xchg
mov
es
cmpsb
cmpsb
fiaddl
push
test
cmp
bound
mov
or
dec
xchg
xchg
dec
lcall
sub
out
sub
jo
fldcw
and
das
jo
xchg
jp
mov
adc
push
add
jo
sub
clc
lret
sub
inc
xchg
mov
mov
add
or
es
mov
pop
sbb
and
push
push
std
dec
mov
insb
mov
add
iret
faddl
sbb
xchg
jg
or
notb
scas
inc
mov
cmpsb
cli
jno
mov
push
insl
fsubl
push
pop
movl
adc
jns
shlb
pop
mov
orl
jno
inc
inc
les
popa
outsb
mov
leave
loopne
movb
fldt
xchg
pop
in
xor
popa
sahf
es
cmp
stos
or
push
inc
or
std
cmp
sub
cmp
fiadds
cmp
mov
jg
mov
inc
ret
sub
out
mov
fisubs
sahf
xchg
je
mov
into
mov
bound
orl
adcl
cmp
adc
xor
aam
rcrl
jg
or
lcall
mov
test
dec
cli
out
inc
mov
jbe
xchg
mov
dec
cmp
sarl
stc
stos
cmp
shl
xchg
or
popa
fs
sahf
mov
mov
xchg
xchg
mov
out
bound
xor
lcall
int
mov
adc
sbb
adc
outsl
inc
lret
in
movsl
push
movb
lret
enter
pop
lret
xchg
aas
loop
mov
cli
sbb
lret
outsb
mov
mov
repnz
dec
jne
dec
mov
cmp
fld
mov
mov
add
outsb
and
fsts
outsl
adc
fwait
push
and
fstps
lods
filds
jno
push
jmp
or
test
inc
xor
pushf
xor
dec
mov
cmp
mov
ja
js
push
dec
xor
xchg
int
outsl
lcall
pop
cld
negl
mov
fs
ret
test
lret
nop
insb
call
or
hlt
jle
lds
jbe
mov
or
push
mov
cmp
int3
sahf
shll
push
xor
cltd
push
lods
mov
sti
dec
lods
dec
add
js
cmp
lcall
test
xchg
ds
imul
mov
leave
fistpl
fsub
popf
repz
popf
push
movsb
fnsave
cmpsb
enter
test
cli
or
mov
inc
jbe
fs
inc
das
xchg
lahf
rcrl
sbb
js
sti
cmp
aas
add
adc
xchg
adc
mov
jp
xor
fisttps
test
adc
dec
mov
mov
cmp
outsb
subb
ret
stos
arpl
mov
pushf
mov
jl
ret
mov
jmp
or
in
bound
dec
xchg
cmpsl
mov
imul
pop
lahf
into
jns
adc
pop
mov
shl
or
cs
mov
inc
out
pop
fidivrl
push
test
clc
inc
pushf
xlat
loop
jle
push
inc
js
fcomps
bound
pop
mov
pop
mov
push
cmpsb
adc
mov
push
movsb
push
adc
call
out
push
pop
inc
sahf
orl
mov
fdivrs
xorl
sarl
and
cmpb
out
jns
push
iret
push
jle
push
mov
lahf
xor
cmp
mov
push
pushf
jmp
je
divl
lods
lret
pusha
ret
test
call
mov
ljmp
sub
sub
pop
or
cltd
or
mov
int
pushf
push
lods
ljmp
jle
nop
mov
cmp
cmpsb
cmp
rcl
sbb
inc
mov
mov
adc
xchg
outsl
int
inc
adc
xor
jno
sti
aas
shrl
cmp
jg
shlb
stos
dec
cs
xchg
and
jmp
push
pop
and
sub
cmp
ja
lods
sub
or
repnz
or
sbb
cmp
cwtl
push
insl
pop
rcrl
mov
jge
mov
iret
xchg
lret
pop
scas
xor
sbb
sub
sub
pop
enter
scas
cmp
es
fnsetpm(287
add
xchg
and
add
sub
xorl
or
adc
cmp
adc
cmp
dec
stc
cmpsl
aad
jecxz
test
adc
inc
mov
lock
xchg
fists
testb
repnz
loop
dec
fstpt
int3
sub
roll
out
shl
jge
cmp
scas
shr
mov
repz
jo
mov
adc
sub
ja
inc
lea
mov
xchg
add
orb
aad
xlat
jle
scas
fs
stos
mulb
jbe
repz
jecxz
mov
xchg
add
in
jmp
add
sub
daa
adc
xlat
adc
rcrb
inc
jmp
lock
sub
inc
shlb
cld
cmp
jb
pushf
idivl
mov
push
dec
movsb
lds
or
jb
clc
decb
jns
push
cwtl
mov
loopne
fidivs
jae
sbb
inc
adc
jb
add
clc
loop
jp
ljmp
mov
inc
outsb
push
leave
mov
xor
jae
pop
lds
adc
fisubs
inc
add
lahf
dec
aaa
call
mov
cltd
scas
out
data16
aam
push
pop
stos
dec
daa
cli
cmpsl
sbb
pop
cwtl
mov
or
jge
sbb
sub
cmpsl
pop
xlat
cmp
enter
dec
dec
inc
lahf
call
push
xor
pop
jmp
fdivrs
xchg
sub
subb
cmpsl
xlat
arpl
aas
adc
pop
jnp
mov
mov
sub
mov
mov
xchg
mov
fwait
pop
dec
mov
inc
les
cmp
scas
jmp
shll
ljmp
jb
push
inc
add
popa
inc
addl
addl
xchg
jae
dec
mov
mov
sub
scas
cmp
out
pop
pop
popl
add
je
movsl
cmp
xor
dec
rorl
inc
mov
add
jecxz
xor
add
insl
mov
xchg
jg
aad
and
mov
stc
adcb
xor
mov
aaa
push
sub
xchg
push
mov
popf
ss
jmp
out
mov
pop
inc
subl
in
int
jge
call
jecxz
xor
pop
ja
fmull
loope
push
mov
out
andb
stos
mov
mov
xor
cmpl
int3
fildll
dec
out
lods
inc
out
daa
pop
pop
lock
in
mov
loopne
testb
ret
rcrl
mov
xchg
jo
sbb
mov
xchg
nop
stos
dec
or
lods
jle
or
scas
sbb
dec
fnstsw
das
xchg
repnz
adc
aam
push
hlt
pop
jnp
mov
xor
dec
cmp
sub
dec
sub
xorl
dec
imul
out
fucomip
jecxz
jg
test
sarl
mov
test
pop
shll
mov
dec
insb
shlb
rolb
fadds
xor
jp
clc
sbb
sub
mov
pop
mov
movsb
pop
inc
pop
jo
cli
testl
aad
jbe
in
push
aam
cwtl
push
test
cmpsl
lret
das
mov
in
cld
mov
mov
outsb
inc
adc
rorl
ljmp
notl
mov
pop
inc
pop
mov
repz
je
mov
dec
mov
sti
sbbl
jmp
in
pop
and
fstpt
fs
fistl
test
negl
inc
dec
rolb
cmpsl
movsb
scas
test
ds
jb
int
shlb
outsb
test
mov
frstor
xchg
cs
cmc
xchg
inc
imul
dec
or
dec
lods
add
test
inc
xor
xchg
push
add
jne
ss
adc
jl
xchg
inc
adc
lock
test
clc
add
stos
movsl
in
or
icebp
jl
xor
pop
stos
pusha
mulb
dec
cld
xchg
jmp
aaa
into
stc
jne
xchg
inc
stos
repz
adc
cmpsb
cmp
testl
pop
or
jge
outsb
pop
in
jmp
daa
clc
shl
cmpsb
cmpsl
imull
xor
adc
sub
jp
xchg
cld
lea
repnz
adc
das
sub
pop
ljmp
push
dec
outsl
jge
sahf
adc
pop
add
stos
dec
nop
fldt
pop
xchg
fdivr
test
xor
sahf
dec
lock
push
ret
shl
mov
pop
iret
push
enter
mov
or
rcl
inc
and
outsb
stos
pinsrw
push
jb
call
call
mov
pop
and
jg
jne
sub
movsl
and
addr16
in
xchg
or
inc
sbb
sbb
pushf
cmp
sarl
xor
mov
icebp
mov
leave
mov
cmp
adc
adc
adc
fmuls
mov
or
movl
outsl
mov
push
and
arpl
loope
imul
mov
dec
int
lea
ret
or
pop
cltd
jno
leave
mov
dec
jl
pop
and
mov
adc
pop
icebp
jno
push
sbb
je
or
lcall
inc
push
adc
aaa
xchg
and
cltd
xchg
fcoms
mov
sub
cwtl
cmpsb
push
or
jne
popf
insl
mov
fbstp
sti
sbb
mov
loope
es
xor
sarb
or
ds
pop
dec
ss
lret
scas
dec
rorb
loop
jg
xchg
pop
in
adc
mov
mov
test
dec
xchg
shr
pop
ja
jne
lret
jl
push
adc
and
mov
push
cwtl
lret
xchg
xchg
xchg
sub
stos
sub
test
and
mov
jbe
and
and
xor
add
lea
cmp
stos
es
jge
ja
sbb
lahf
push
pop
testb
sub
or
andl
add
jnp
in
flds
aas
stos
sahf
mov
fwait
xchg
les
cli
lret
scas
xchg
push
cmp
dec
cmp
push
movsb
in
mov
mov
push
pushf
sub
ret
imul
test
xor
jecxz
xchg
add
hlt
jnp
nop
and
mov
scas
ljmp
ljmp
ret
aaa
pop
nop
mov
lds
loope
aam
stos
push
inc
test
nop
std
repz
icebp
addr16
notl
mov
xor
push
cwtl
xchg
sbb
jnp
lcall
xchg
cmp
pop
cmpsb
bnd
aad
and
adc
xor
scas
mov
ds
jmp
jno
loop
incb
es
rolb
scas
call
int3
cmpl
and
push
fnstsw
cmp
repz
jecxz
push
inc
pop
lods
dec
movlps
addr16
jb
cmp
and
xor
sbb
cmp
xchg
jnp
leave
mov
xor
pop
mov
or
pop
loope
lds
jne
dec
add
ret
add
jb
mov
cmp
mov
lods
mov
jmp
sub
dec
adc
sub
stos
lock
in
fiadds
sarl
xor
pop
sarl
dec
and
insb
push
sub
cmp
lret
cli
gs
add
inc
xor
repz
addb
jo
in
pushf
add
mov
int3
in
les
sub
adc
ja
cmp
mov
push
push
mov
out
dec
cmpb
test
and
adcl
push
and
mov
sub
mov
mov
ror
xor
push
lea
cs
pop
loopne
jo
dec
ja
ljmp
cmp
add
pop
jo
enter
scas
mov
cmpl
dec
sub
fs
movsb
add
sbb
sahf
xchg
or
cmpps
sbb
inc
test
push
jp
clc
pop
jp
test
mov
dec
imul
pop
or
in
add
test
add
sbb
dec
jmp
sub
push
mov
xor
hlt
clc
dec
call
jmp
cmp
jp
mov
cli
and
out
sbb
dec
and
cmp
lds
mov
enter
das
mov
into
test
mov
pop
xor
lock
jnp
mov
es
addr16
sbb
adc
hlt
in
repz
and
or
inc
jge
or
bound
mov
push
daa
jecxz
test
dec
xlat
pop
cmpxchg
ljmp
lret
sub
lds
out
lret
fnstsw
push
sti
ret
mov
mov
enter
xchg
mov
aas
xor
xor
sbb
inc
aaa
aam
test
adc
and
fidivrl
cmp
add
jl
cmp
test
mov
push
js
xchg
pop
sbb
sub
pop
insb
fstpl
mov
sub
mov
cmp
jne
push
inc
cld
lcall
push
push
inc
and
es
jmp
jbe
mov
lcall
addb
in
pop
fimuls
pop
inc
sbb
pushf
adc
push
fwait
lods
pop
test
mov
lcall
mov
test
xchg
std
scas
cltd
into
and
out
lret
cmp
xor
fnstcw
fsubrl
lods
add
push
movsl
jnp
sub
ret
repz
ret
bound
lds
jb
dec
stos
sti
push
cs
adc
fidivs
out
pop
js
outsl
imul
scas
out
repnz
jae
aad
xchg
push
outsl
cmc
out
mov
int
pop
shll
lds
jne
int
pop
or
mov
popaw
dec
xor
jmp
sub
cmpl
pop
mov
ret
icebp
adc
push
xor
inc
lahf
andl
pushf
push
pop
xchg
es
insb
add
jne
jecxz
push
movsl
lds
sti
adc
and
jo
mov
stos
leave
xor
xor
pop
pop
mov
ljmp
jl
cmp
cld
push
mov
cvtpi2ps
data16
mov
jmp
push
and
movsl
daa
mov
imul
shlb
mov
call
xor
jmp
repz
mov
jo
xchg
idivb
pop
nop
mov
leave
fldcw
sahf
cmpsl
add
cs
test
and
adc
push
jbe
out
insb
mov
adc
es
jnp
sbb
insb
sbb
nop
sub
popf
outsb
scas
add
mov
adc
imul
cli
pop
push
mov
jg
loope
notl
add
xchg
pushf
and
dec
add
subl
inc
icebp
pop
pop
pusha
aad
push
rcrl
js
insl
inc
decl
xlat
inc
adc
dec
lea
lds
push
inc
jnp
push
loope
mov
repnz
in
fimuls
ss
test
loop
push
mov
jnp
in
clc
stc
in
pusha
xchg
mov
mov
es
sti
sti
aaa
pop
in
fadd
xchg
dec
push
push
adc
addb
lods
cmp
out
push
dec
pop
mov
aaa
xor
sti
mov
ljmp
cld
and
cwtl
jmp
add
cmp
mov
mov
add
jne
rolb
aaa
shll
in
jno
mov
int3
sti
das
stos
bound
stc
inc
es
dec
push
pop
jno
popf
fisubl
or
test
lds
mov
arpl
adc
add
xchg
xchg
fimull
add
adc
cmpsl
mov
push
adc
test
push
test
push
test
aam
movsl
test
lret
push
mov
xchg
cmp
jle
in
mov
inc
mov
jne
mov
add
out
mov
lds
sub
add
push
or
pop
out
pop
or
fcmove
fnstcw
jmp
cmp
movsb
data16
sub
mov
shl
into
bound
cltd
or
mov
mov
dec
les
inc
aaa
pop
stos
mov
sahf
xchg
inc
loope
sti
xchg
xchg
mov
xor
inc
cmpsb
cli
pop
add
and
add
push
xchg
popa
addr16
jne
enter
repnz
sbbl
jnp
fcmovnu
and
out
stos
xor
repnz
mov
shrb
inc
add
and
jp
push
loope
test
or
or
jecxz
pop
das
mov
aad
mov
jns
in
sub
notb
adc
add
pop
movsb
fistpl
jecxz
xor
mov
or
add
and
mov
jmp
sbb
dec
nop
jl
sbb
push
dec
movsb
jo
sbb
sub
aad
jmp
addr16
cmc
fisttpll
jg
arpl
loopne
enter
xor
inc
dec
xor
sbb
mov
repnz
dec
pop
mov
sbb
clc
sub
push
outsl
sub
xor
mov
lea
cmp
outsl
repz
add
cmp
and
fnstenv
ror
push
insl
mov
dec
addl
out
add
inc
xor
cld
hlt
andb
jmp
sahf
dec
ficoms
sbb
cmp
sti
and
insl
cwtl
push
add
das
dec
incl
scas
and
fdiv
ret
scas
dec
sarb
adc
jnp
jae
pop
inc
lret
mov
mov
pop
xor
lahf
inc
add
rorl
xchg
lea
xchg
cltd
testb
imul
pop
popf
data16
or
adc
mov
push
int
xchg
cli
xchg
jge
jno
sub
dec
cs
push
mov
inc
pop
pop
mov
jp
xor
sti
rcrb
dec
pusha
sub
incl
or
xor
adc
and
shrl
mov
sbb
std
push
das
push
xor
dec
leave
xchg
mov
add
inc
cmc
mov
pop
or
mov
and
sub
adc
scas
pop
fidivrs
popa
mov
sub
or
stos
add
aad
fwait
and
jmp
mov
fdivrl
arpl
in
test
jns
cmpsb
mov
into
psubb
mov
lods
jo
into
or
mov
push
popf
cld
jae
shlb
mov
mov
rcr
sbb
pop
dec
sub
xor
xchg
sbb
jns
mov
enter
int
gs
cld
fnstsw
xor
cmp
add
subl
sbb
pop
push
gs
cwtl
movsl
inc
push
pop
or
bound
lods
loop
cwtl
mov
mov
aaa
xor
call
jg
xor
arpl
out
push
mov
inc
mov
lock
push
pop
mov
sahf
pop
add
stos
fisttpll
mov
mov
lods
insb
std
xchg
xchg
pop
out
shll
out
mov
add
hlt
popa
mov
pusha
fistpl
dec
lret
inc
inc
mov
dec
sbb
fnstsw
mov
pop
out
cmpsl
fistpl
dec
mov
push
cld
jmp
out
inc
add
lods
stos
xor
jbe
test
cmp
lock
lcall
jle
jno
data16
sub
push
sti
jb
insb
xchg
out
cmp
fnstsw
xchg
mov
mov
mov
cltd
sbb
cmp
adc
cld
add
bound
mov
insl
test
push
sarb
bound
push
jns
aas
mov
lds
adc
inc
in
out
xchg
mov
daa
mul
lods
cmpl
pop
xchg
mov
xor
cld
insb
dec
mov
dec
push
dec
xchg
addr16
pop
sub
or
push
xor
arpl
leave
mov
dec
dec
adc
jl
ror
cmp
or
mov
and
jno
bound
stos
stos
and
mov
adc
mov
inc
gs
pop
add
dec
jle
imul
sub
aaa
sub
rorb
dec
call
sti
pop
lods
jg
mov
jne
pop
inc
cwtl
cmp
pop
stos
mov
scas
pop
bound
add
and
mov
cli
lods
cmpsb
add
push
and
inc
leave
ljmp
stos
fwait
jp
mov
mov
shr
repnz
aam
insb
shrb
repnz
dec
cmpsb
push
call
lret
in
div
mov
mov
nop
push
sub
scas
lods
mov
and
rcr
insb
movl
dec
push
pop
repz
mov
jle
sub
jo
loopne
jl
sbb
jmp
test
fs
mov
lea
sarl
pop
leave
out
dec
sbb
out
adcl
lea
shrl
adc
imul
sub
mov
push
das
enter
adc
jmp
and
loopne
sarl
pop
or
or
lahf
xchg
mov
out
cmp
pop
fs
xor
decl
push
pop
int3
push
cld
push
adc
jl
mov
xor
bound
jecxz
xchg
hlt
in
mov
notb
stos
jbe
jecxz
pop
mov
aad
mov
mov
push
mov
out
cmp
lock
sti
pop
pop
pop
test
xor
in
lock
fucomi
loopne
lds
stc
push
cmp
cmpsb
cmpsb
add
mov
lea
mov
stos
pop
xor
push
icebp
adc
jecxz
push
cmpsl
ret
fsubp
and
aas
lret
lahf
dec
jns
jecxz
lea
mov
mov
push
pop
dec
mov
or
cltd
imul
jl
adc
scas
cmc
add
test
test
pop
cld
or
in
pop
sbb
popa
lea
inc
sahf
lock
in
sub
out
je
dec
adc
shll
adc
pop
out
adc
push
mov
jbe
lock
test
xchg
repz
popf
fsubs
xor
call
sub
push
gs
sti
inc
xlat
mov
out
outsb
adc
pop
mov
lods
enter
cmp
pop
mov
mov
adc
xchg
sbbl
mov
dec
pop
add
nop
xor
pop
fmuls
rol
jno
or
frstor
int3
xor
fisttps
lds
dec
jo
into
cmp
jl,pn
jb
push
cltd
jp
xor
or
ss
xor
aad
push
sub
push
fwait
pusha
cmp
xchg
orl
add
fiadds
push
arpl
bound
push
or
inc
in
add
pushf
js
fiaddl
pop
test
sbb
cmc
shlb
ds
out
mov
ljmp
jp
arpl
lods
dec
aas
mov
int
aam
mov
in
inc
mov
lahf
nop
mov
mov
scas
add
dec
outsl
aaa
into
fneni(8087
xorl
cmp
js
sbb
adc
testb
leave
int3
mul
push
cltd
sbb
mov
ret
hlt
cmp
aaa
rcll
xchg
sbb
mov
pop
cmp
addr16
sbb
jmp
push
cltd
inc
sti
mov
lds
sub
pop
xchg
dec
popa
dec
xchg
add
mov
sbb
adc
mov
mulb
add
imul
jecxz
add
mov
call
push
sub
test
repz
loope
push
test
addr16
movsl
mov
shufps
mov
cmc
dec
sarl
in
mov
stc
loopne
lock
out
movsb
jmp
and
jnp
in
pop
jno
push
pop
jb
and
xor
andl
adc
imul
leave
movsl
daa
pop
sar
mov
mov
ret
sbb
cmp
lds
lods
sbb
inc
cmp
mov
xchg
mov
jnp
lods
dec
jae
xchg
adc
push
and
xor
pop
push
enter
add
xchg
imull
mov
popf
mov
les
icebp
loop
push
cmp
pop
popa
push
out
pop
movl
imul
mov
mov
sbb
imul
jnp
or
xchg
lock
stc
xchg
in
aaa
lea
out
sub
xor
pop
xorl
lcall
jmp
out
out
cmp
mov
cmp
push
stc
repnz
sub
pop
mov
dec
test
ret
mov
xor
mov
mov
push
mov
mov
and
repnz
es
dec
std
inc
insb
sub
add
sbb
xor
inc
es
sub
jmp
cmc
inc
add
and
cli
cwtl
inc
mov
pop
stc
xchg
inc
call
inc
test
ficomps
pop
mov
mov
xchg
mov
adc
fisubs
inc
and
mov
add
int
ret
dec
and
sub
jle
mov
movsb
mov
mov
ja
int
cmp
mov
jge
dec
cltd
xchg
push
push
lock
jmp
mov
loop
sbb
loopne
or
dec
dec
mov
scas
out
xchg
outsl
pop
inc
mov
push
mov
inc
inc
out
mov
insl
mov
dec
movsl
pop
nop
cmp
call
movb
ds
mov
xchg
mov
movsl
xchg
cltd
pop
add
lahf
jbe
sbbl
sub
mov
mov
mov
mov
popl
mov
sub
call
xor
mov
mov
inc
push
enter
sti
mov
pop
imul
push
sbb
fcmovnu
test
leave
jle
mov
rolb
xchg
push
and
int3
ljmp
jp
sbb
jb
popa
addr16
imul
hlt
jae
in
xchg
inc
adc
in
pop
lahf
mov
pop
movsb
xchg
cmp
ret
adc
ds
pop
ja
stc
xchg
sub
mov
ljmp
jae
pop
test
fstps
mov
mov
sbb
mov
gs
sarb
cltd
in
mov
jno
lret
leave
popa
inc
cmpsb
gs
dec
jp
fiadds
cmpsb
fisubrs
sub
lret
fwait
pop
push
gs
pop
int
xchg
cmp
jmp
enter
push
push
popa
add
inc
mov
sub
icebp
fstpt
js
jle
or
fmull
mov
jmp
mov
fildl
je
and
in
icebp
inc
or
pop
nop
push
mov
inc
cmpb
adc
xchg
movsl
and
movsl
cmp
popl
jecxz
dec
mov
jle
lock
adc
dec
jmp
and
add
push
stc
movsl
lds
and
jne
sbb
push
jne
insb
imul
pop
in
dec
xchg
mov
and
add
sub
sbb
or
divb
out
jle
loope
dec
mov
push
add
xchg
test
or
es
dec
std
jmp
dec
push
mov
dec
jnp
mov
adc
xor
mov
mov
pop
cs
addr16
cld
adc
repz
mov
icebp
mov
mov
nop
sbb
pop
bound
pop
mov
into
arpl
popa
jb
mov
rolb
adc
inc
cwtl
jb
pop
mov
nop
mov
jne,pn
fcomps
xchg
add
add
mov
sub
in
mov
ljmp
clc
jnp
movsb
push
movl
jbe
test
xor
sub
psllw
lods
cmc
xchg
scas
movsl
xlat
dec
enter
sbb
movaps
icebp
fwait
push
mov
sbb
aad
add
stc
mov
inc
xor
in
int
inc
and
insl
pop
push
hlt
test
mov
dec
fcmovnb
jp
xchg
jae
into
pop
test
stos
xchg
push
add
lds
ret
pop
mov
lods
lahf
push
pop
lds
xor
mov
xchg
paddsw
jecxz
push
lret
ljmp
hlt
sahf
mov
icebp
jno
push
and
or
in
repnz
icebp
stos
icebp
or
or
jne
int3
jno
aas
sbb
mov
int
xchg
mov
xchg
fwait
jge
test
lock
ret
fisttps
rclb
iret
scas
aad
push
jl
push
dec
dec
shl
insl
das
push
mov
test
or
mov
xor
out
sub
push
or
jmp
int3
cmp
xchg
shrl
mov
mov
fildl
pop
xor
cld
jmp
es
test
shll
or
push
repnz
aaa
xor
outsb
or
push
adc
ret
and
push
xor
imul
cmpsl
dec
mov
xor
aas
repnz
into
das
je
fldl
push
xchg
cmp
in
ss
or
insl
sub
pop
cwtl
cmp
repnz
push
aam
jge
fs
pop
loopne
fnstenv
movsb
inc
nop
inc
xchg
shll
shl
es
mov
sbb
shr
push
push
movlhps
cmp
shlb
mov
xchg
dec
adc
fst
xlat
cli
incl
jge
xor
fimuls
jb
aas
dec
sbb
cmp
sub
xchg
xor
ret
or
ffreep
out
f2xm1
sbb
loope
jp
dec
stc
push
das
sub
mov
inc
inc
int
aas
xchg
lret
jecxz
pop
stos
ja
dec
mov
mov
test
mov
cld
dec
jmp
push
cwtl
aam
popf
pop
js
xchg
mov
sar
js
les
ljmp
xchg
ja
lock
adc
mov
lret
je
movsl
cmpsl
fstpl
mov
cli
jo
sub
int
nop
adc
add
and
cmp
cmpsb
adc
outsb
dec
stos
imul
dec
lret
adc
popa
fwait
dec
inc
imul
test
cmc
pop
fdivrp
in
adc
jns
mov
sbb
popa
xchg
xor
cmp
sub
push
push
inc
in
cmp
jne
push
addb
sbb
int3
out
inc
and
lahf
fnstcw
icebp
iret
pop
push
xor
push
imul
test
sub
test
fsubs
jle
out
arpl
pop
sarb
loop
cmp
fs
pop
test
sti
leave
gs
xchg
fidivs
pop
test
mov
lret
stos
push
pop
pop
movsl
lds
pop
lods
hlt
jnp
lds
or
xchg
int
sub
jo
push
add
pop
mov
xor
mov
and
stos
mov
jmp
and
fnstenv
test
lds
repz
inc
pop
test
and
test
jmp
lock
repz
mov
fisttps
sbb
push
fiaddl
cld
xorl
lcall
mov
push
jnp
mov
in
out
jnp
pusha
push
or
xor
or
and
xor
ljmp
in
mov
or
mov
sbb
sub
dec
adc
or
sub
dec
cmp
xchg
gs
sbbl
xlat
leave
cmpb
call
dec
sarl
or
sbb
aaa
xchg
out
popf
sub
out
and
cs
adc
cmp
test
pop
or
dec
cmc
jge
dec
test
pusha
cld
loope
inc
jl
jmp
mov
in
xor
push
lret
fidivrs
mov
push
cmp
lea
adc
mov
test
and
lea
sub
es
sub
aad
xor
clc
insl
push
sbb
daa
cs
and
mov
loop
push
push
pop
cmp
test
rclb
lret
sbb
pusha
dec
sub
cld
lret
repz
jns
sbb
push
mov
pop
test
pop
inc
adc
pop
push
mov
cwtl
xchg
aad
and
pop
lret
sbb
cmp
out
popa
fs
mov
inc
dec
pop
adc
das
cmp
out
xor
outsb
dec
pop
xlat
imulb
mov
ffreep
into
gs
int
pop
outsb
icebp
jnp
idivb
dec
ss
adc
adc
bound
push
pop
shlb
sbb
push
and
shl
add
push
xchg
addr16
cltd
not
inc
daa
sti
andb
gs
fisttps
inc
adc
push
test
sbb
pop
inc
xchg
sub
decb
movsl
aas
mov
test
fbstp
cmp
jecxz
inc
ds
push
mov
mov
pop
push
inc
jp
cmp
or
mov
dec
jne
cld
or
jl
fcmovnbe
fsub
aaa
ret
int3
mov
dec
lret
ror
or
dec
ja
and
fdiv
sbb
rcrl
ret
movsl
cs
inc
and
lea
sbb
int3
sbb
rcrb
jns
repz
jle
inc
flds
mov
and
add
inc
inc
inc
push
js
testb
lret
dec
out
ss
in
jns
jecxz
mov
mov
adc
pop
fldt
int
inc
insl
dec
mov
jp
jnp
xor
cld
out
sbb
jmp
push
out
inc
sub
in
lahf
into
pop
jp
test
mov
into
in
pop
mov
xlat
sbb
dec
xchg
pop
and
repz
into
rclb
pushf
sub
ficoms
test
mov
inc
pushf
mov
daa
scas
cmp
adcb
nop
stc
xchg
scas
mov
pop
push
test
jo
fildll
jo
das
sbb
fists
adc
jns
fcmovnbe
cs
and
mov
xor
mov
inc
sarb
jmp
sub
pop
jne
xor
add
push
pop
xchg
sub
cli
dec
cmp
pop
inc
push
clc
cmp
scas
int3
std
sub
or
xor
xor
push
dec
jecxz
jb
shl
popa
push
and
imul
jns
and
mov
scas
jg
call
push
loopne
std
mov
and
mov
sbb
cmp
stc
xchg
mov
fstpt
je
cmc
push
orb
std
in
xchg
insl
mov
lods
jmp
daa
xchg
mov
mov
lret
xor
testl
mov
fmull
mov
xchg
jg
cli
add
mov
mov
leave
and
call
add
xor
adc
xor
jmp
jne
ret
mov
pop
int3
scas
enter
outsb
mov
and
popf
mov
arpl
inc
fdivrl
pop
push
das
int
cmp
out
adc
popa
ja
ret
push
test
in
and
call
mov
sbb
std
sbb
rol
sarl
pop
hlt
jl
sahf
adc
xlat
inc
lods
push
enter
stos
call
lret
push
xor
mov
jns
scas
in
add
inc
call
test
stc
pop
enter
sbb
jo
jns
aas
or
xor
pusha
pop
inc
lret
cmp
pop
push
sahf
xor
dec
mov
loop
mov
sbb
inc
je
aam
xor
sbbl
mov
sub
push
call
test
rclb
mov
repz
add
push
fstl
fcompl
pop
pushf
cs
subb
sub
jle
cwtl
jmp
lea
mov
not
pushf
sbb
adc
pop
sbb
inc
jge
jg
ret
hlt
inc
and
clc
stc
push
mov
bound
fcomip
mov
ja
sbbb
iret
stc
push
mov
test
xor
push
mov
add
jne
aad
adcb
jb
sbb
int
mov
add
stos
mov
sub
add
push
sub
adc
pop
andl
data16
icebp
fmull
jnp
imul
inc
test
loopne
jmp
or
pop
push
add
je
jge
lcall
xchg
dec
push
xchg
inc
mov
popf
pushf
xor
pop
cmpsl
sbb
in
pop
andl
loope
xor
xchg
inc
sub
or
lods
int
sti
aas
repz
in
daa
xchg
pop
add
dec
movsl
mov
jbe
mov
or
fildll
sahf
jnp
or
loopne
push
mov
sahf
in
jmp
repz
sahf
inc
jge
mov
push
dec
cmpsb
xchg
int3
and
add
inc
mov
sub
jbe
lahf
or
loop
inc
push
lea
jle
and
cmp
ljmp
push
pushf
mov
jp
jmp
mov
mov
jmp
wbinvd
movsl
jb
bound
cmp
test
js
into
push
mov
fwait
iret
ret
stos
addr16
andl
push
xchg
out
or
movsl
into
into
xchg
loop
xor
xor
outsb
xchg
insl
sbb
divb
dec
and
cwtl
ret
add
sahf
inc
sub
pop
add
mov
fwait
pop
outsb
in
pmaddwd
pop
jmp
loop
popf
and
jg
mov
jns
push
movsb
stos
jnp
int
arpl
mov
push
out
stc
push
repz
sbb
xchg
sbb
push
cmp
jge
sbb
cmpsb
xchg
fsubrl
or
cmp
xchg
ja
and
jnp
arpl
adc
fstps
pop
xchg
jecxz
dec
cmp
xlat
jmp
add
lahf
mov
jl
in
xchg
xor
and
imul
cmp
mov
jb
int
ljmp
movsb
ret
xchg
stos
test
mov
pop
mov
inc
sbb
pop
aad
jecxz
jmp
jl
jns
ficomps
xchg
pop
push
sbb
stos
pop
or
movsl
mov
sbb
pop
or
mov
xchg
mov
lock
insl
lret
mov
ss
cmpsl
jge
mov
or
cmp
cmc
inc
sub
pop
and
repz
mov
adc
fstl
xchg
imul
sahf
sub
pusha
sbb
outsl
loopne
or
add
pop
add
cli
mov
mov
lea
lea
movzwl
dec
mov
or
je
movzwl
or
je
push
push
pushl
push
call
push
push
push
mov
add
mov
mov
mov
shr
cld
rep
mov
and
rep
pop
pop
mov
mov
add
call
pop
push
pushl
push
call
add
dec
jne
mov
or
je
add
and
add
ljmp
jl
les
xchg
jae
icebp
pop
rol
je
out
dec
sub
stos
push
stos
xchg
pop
mov
dec
cmp
in
int
insb
mov
div
mov
pop
pop
inc
xorl
sbb
xlat
movsl
jb
pop
push
popa
jle
les
mov
add
in
sub
dec
es
je
sahf
or
pop
aaa
xor
mov
mov
not
mov
jb
jmp
fdivs
mov
cs
lret
dec
dec
je
push
mov
rclb
pop
jmp
inc
hlt
and
pop
or
adc
iret
shl
addl
adc
jnp
sti
outsb
cltd
out
push
sub
test
add
test
adc
sbb
jecxz
mov
pop
add
or
xorl
xor
cmc
decl
and
mov
or
xchg
xor
cmp
iret
jne
push
enter
rclb
dec
outsl
cmp
in
mov
adc
loope
or
iret
dec
xor
cmp
test
enter
xlat
add
in
xchg
in
sbb
xchg
mov
pop
lahf
sti
or
xchg
or
mov
fwait
js
sbb
cmpsb
int3
popa
adc
scas
sbb
jne
hlt
or
pop
pop
shll
jecxz
pop
pop
xor
cmpsl
mov
mov
cld
jge
jae
arpl
pushf
sbb
insb
xor
rcll
dec
xor
or
xor
and
stos
imulb
pop
or
jbe
cmpsl
scas
xor
in
jg
test
out
cs
stos
cmpsl
sbb
sbb
loopne
and
in
jg
cmpsl
dec
clc
push
rolb
shrb
xchg
jo
mov
and
dec
cmp
jle
or
push
sbb
fidivrl
mov
mov
mov
out
dec
out
inc
cmp
mov
dec
fmul
sbb
jmp
mov
and
jl
pop
mov
insb
aas
std
inc
and
stc
std
and
xchg
int3
enter
shlb
inc
aaa
lods
mov
fsts
push
movsb
not
out
mov
iret
xor
jbe
ss
insb
lret
mov
jl
jbe
cld
sub
rolb
cmpsl
lods
lods
ficompl
insb
lcall
mov
xor
sub
data16
xorb
cli
cmpsl
mov
mov
mov
and
mov
xor
sub
adc
fldenv
test
shrl
and
pop
sbb
xlat
sti
dec
hlt
inc
insb
cli
adc
cmp
jae
and
loope
dec
push
mov
pop
js
sti
pop
movsb
adc
test
sbb
mov
jg
pop
rcr
adc
out
es
jle
cmpsb
jecxz
pusha
cmpb
jl
push
cmp
out
sub
jg
mov
dec
sarb
loope
loop
add
es
sarb
fidivl
sbb
mov
data16
popa
sbb
out
mov
mov
into
mov
mov
sub
pop
cmpsl
in
add
out
sbb
aam
xchg
loope
leave
stc
cmp
lret
dec
adc
or
test
dec
lods
iret
mov
in
or
sti
jno
mull
fs
imul
cs
stos
jne
or
push
or
cmp
clc
out
ljmp
push
test
or
mov
dec
popf
mov
leave
sub
inc
subb
jmp
jns
sub
add
mov
inc
or
jb
jecxz
adc
pop
xchg
mov
arpl
in
icebp
push
lcall
sub
ficomps
je
dec
xor
aam
sbb
or
mov
push
rorb
arpl
sbb
or
xchg
pop
mov
rolb
add
fs
push
mov
and
xor
xor
popf
ret
push
or
imul
test
mov
xchg
aaa
fnsave
in
mov
mov
push
imul
mov
or
mov
push
cs
out
push
mov
shlb
mov
cltd
gs
lds
roll
daa
imul
mov
jne
out
mov
pop
ret
and
ja
add
xor
and
out
pushf
adc
aaa
sbb
dec
sbb
pop
sub
xchg
aam
pop
shl
rorb
pop
imulb
mov
push
dec
cmp
insl
fildll
out
shll
insl
push
cmc
insb
or
fists
ss
rcrb
call
sbb
mov
ret
ljmp
add
insl
mov
cmp
cmc
orl
dec
push
mov
shll
xor
movsb
mov
push
push
fimull
sub
std
push
xor
inc
cmp
push
and
cmc
imul
dec
aas
sbb
or
cld
sub
ret
xor
lods
out
sub
xor
add
pusha
cmpb
xor
icebp
lcall
cwtl
addr16
pop
mov
or
lods
insb
cmp
fsincos
mov
or
pop
int3
inc
mov
inc
inc
inc
inc
inc
inc
jl
pop
subl
add
lea
dec
es
inc
mov
addr16
rclb
push
push
push
push
push
push
push
push
push
push
push
push
mov
cmp
ds
adcb
adc
adc
pop
inc
cmp
sub
mov
dec
lds
cwtl
je
xchg
ficomps
stos
push
loope
jae
mov
ja
sub
mov
sub
dec
push
fiaddl
movsl
xchg
leave
andb
int3
dec
dec
push
mov
enter
mov
jb
mov
cwtl
or
mov
jle
adc
inc
daa
sub
pusha
add
mov
add
inc
and
jae
idiv
imul
mov
push
pop
mov
ljmp
test
imul
add
mov
jecxz
int
test
out
add
fcmovu
aas
adc
in
xor
test
adc
cli
repnz
popf
pop
xchg
stos
xor
cmp
aaa
sbb
inc
pop
xchg
sbb
mov
loop
sbb
mov
clc
das
push
cli
repnz
inc
ficoml
push
rorb
bound
std
and
sbb
repz
fs
ljmp
dec
adc
fisubrl
push
push
pop
mov
jb
pushw
xor
pusha
pop
shrb
notl
add
adc
icebp
aam
imul
pop
int
dec
enter
cmp
push
scas
or
cwtl
xchg
movsb
xchg
ret
test
add
iret
add
inc
adcl
and
lods
push
mov
loop
jmp
fwait
cmp
insl
xchg
popf
or
stos
lea
xor
cmp
push
into
test
rorb
xchg
outsl
addb
dec
or
enter
mov
sarb
add
sbb
pop
xchg
jnp
loope
fs
sar
int3
or
in
repnz
mov
dec
push
and
stos
inc
sti
or
aam
rcrl
dec
add
loope
sbb
add
push
push
scas
cld
push
add
mov
push
notl
inc
mov
add
xor
push
push
cmp
lcall
enter
daa
pop
jae
xorl
cld
mov
mov
imul
cs
stos
aas
cs
add
int3
mov
addb
pusha
sbb
jno
push
mov
scas
test
cli
sub
shrb
rorl
loopne
push
xchg
and
popa
or
movsl
mov
cmp
xchg
cmpsl
and
shr
subb
ds
add
xor
pushf
push
fwait
push
mov
fwait
inc
add
sbb
aam
aas
mov
cwtl
or
out
cmc
fsubl
aad
aaa
xchg
add
and
and
enter
lock
rcl
aad
fs
inc
imul
popl
xor
and
push
int3
dec
xor
xlat
leave
pause
pop
sub
cli
movsl
or
mov
sub
add
xchg
push
push
pop
sbbl
fdivrs
fsubrl
inc
adc
pop
sbb
leave
js
iret
jl
dec
mov
jle
ret
gs
and
pushf
imul
sbb
lds
xor
adc
mov
sbb
aad
cmc
push
mov
or
dec
pop
aad
push
push
xchg
loop
mov
mov
mov
push
cmp
out
into
sbb
fdivrl
add
movsb
inc
push
inc
adc
push
cwtl
mov
int3
jg
push
rcrb
enter
ja
xor
inc
mov
ret
jmp
popa
jns
imul
pop
movsl
lods
push
in
mov
inc
inc
inc
inc
inc
inc
inc
jle
idivl
pusha
mov
xchg
inc
jae
jb
xchg
mov
cld
xor
in
es
mov
fisttpl
cli
sbb
aam
mov
sub
dec
flds
adc
pop
mov
aas
mov
xchg
clc
mov
mov
loop
push
setne
mov
jmp
dec
cs
adc
clc
rclb
jno
test
push
adc
pop
fsubl
pushf
dec
jae
ret
clc
pop
xor
mov
pop
in
adc
sub
push
sub
icebp
xchg
mov
cld
iret
scas
mov
jbe
daa
es
sarl
adc
xor
mov
shll
popf
jne
out
push
les
adc
adc
pop
gs
iret
int
push
sub
xchg
jecxz
in
pop
lret
inc
xchg
sub
mull
pop
dec
scas
xchg
pop
sbb
mov
jo
add
call
or
mov
cmp
sbb
pop
popf
out
stc
sub
cli
loopne
mov
ds
jp
push
enter
xchg
test
fistl
hlt
sbb
rolb
shll
mov
rcrb
lods
push
lods
push
imul
sbb
inc
jo
in
or
jnp
sahf
repnz
jo
or
out
sub
cmp
jns
loop
adc
f2xm1
adc
push
mov
pop
lcall
pop
sbbl
fs
inc
test
lds
jmp
add
cmp
lods
xor
push
mov
rorl
repz
dec
dec
fsts
les
lret
loope
daa
shll
sahf
stos
call
fwait
sbb
daa
bound
mov
out
lahf
mov
jge
ds
test
mov
lahf
push
xchg
into
repnz
es
shrl
or
fwait
daa
xor
lahf
push
mov
iret
pop
repnz
xchg
jge
pop
pop
repnz
lahf
int
outsl
ds
fmull
lcall
cwtl
dec
imul
push
es
sbb
bound
push
pop
daa
pop
imul
sub
push
mov
stos
fmuls
movsl
ljmp
push
pop
insb
sbb
ja
mov
in
mov
pop
cltd
dec
dec
mov
mov
xchg
and
fiaddl
movsb
rolb
fsubr
out
and
add
pop
popf
push
std
mov
add
ror
xchg
push
mov
movsb
inc
mov
out
xor
lods
dec
and
ret
out
dec
packuswb
int
arpl
jbe
sbb
push
mov
je
movsl
jmp
outsb
add
mov
inc
out
dec
mov
cmp
mov
xor
cmp
mov
pop
cmp
mov
lds
xchg
mov
adc
cs
aad
mov
insb
xchg
jmp
dec
pop
and
clc
cmp
clc
iret
imul
xor
cmp
fimuls
sub
inc
lcall
sbb
xchg
out
and
dec
or
fisubl
popf
test
loope
mov
testl
out
fs
add
sbb
inc
icebp
pop
ljmp
insb
mov
mov
movsl
pop
pusha
cltd
mov
scas
loopne
prefetch
xchg
pop
inc
lcall
cmpsb
fwait
rcrb
push
pop
add
xchg
scas
mov
mov
cmp
sahf
cli
or
pop
les
cmp
xor
cmpl
daa
rcrl
push
dec
cli
or
push
xchg
stos
cmp
js
decb
jecxz
clc
lea
cmp
pushf
aad
push
ja
or
mov
scas
jne
test
sti
lret
ret
test
cmc
adc
or
daa
xchg
jmp
jnp
fnsave
push
dec
mov
cmp
and
xchg
pop
inc
mov
daa
mov
mov
sbb
jns
mov
mov
bound
fcompl
stc
daa
mov
ret
sub
pop
sub
lahf
mov
xlat
and
in
ret
xchg
mov
cli
jbe
bnd
xor
int
jge
idivb
or
into
xor
fmul
or
enter
adc
sbb
dec
stos
adc
cmp
loope
cmc
pushl
sub
leave
out
int3
out
icebp
inc
ja
adc
adc
rcl
call
mov
mov
sbb
lds
lds
out
aad
cmpsl
dec
stos
iret
adc
fsts
ss
push
int
fisubrl
aas
gs
clc
push
push
xchg
mov
xor
fcmovnbe
inc
in
xor
fcmovnu
imul
test
xlat
test
cmp
sub
ds
aas
push
jns
add
aas
jg
jbe
mov
sbb
pop
ja
test
mov
data16
outsl
repz
inc
xchg
ja
sbb
or
movsb
pusha
sbb
mov
jo
xlat
inc
lods
xchg
or
adc
and
pop
fs
call
imul
popa
xchg
addl
or
push
sti
popa
dec
push
xchg
mov
cmp
mov
stos
insl
jns
fstl
ja
outsl
and
test
push
inc
imul
ljmp
shlb
lret
or
mov
add
ja
push
and
add
in
stc
mov
std
jb
imul
into
stc
sub
fimuls
icebp
in
sbb
cmpsl
jns
in
jp
nop
scas
cmp
imul
jp
pop
cmpsb
xchg
or
sbb
fstl
out
sub
xorl
filds
xchg
aad
aad
out
push
pop
pop
adc
pop
test
push
stos
mov
pop
jmp
in
hlt
mov
xchg
or
xchg
and
mov
jecxz
stos
clc
push
mov
cmp
cmc
movsl
jmp
mov
inc
push
xor
mov
lret
adc
rcl
xor
sahf
ret
fisubrs
inc
loope
cli
mov
jge
xchg
push
imul
xchg
lea
jns
es
pop
push
pop
iret
jae
and
adc
push
jne
lods
mull
imul
sarb
pop
sbbb
rorb
sbb
pusha
xorl
jbe
mov
sbb
repnz
scas
sbb
test
dec
pop
xchg
add
popl
pop
and
push
das
orl
dec
shlb
ja
push
mov
mov
int
ljmp
sub
cmp
test
sahf
out
xor
rorb
out
je
icebp
cwtl
push
push
js
dec
test
jp
cmp
push
pop
dec
pop
xor
ds
in
and
leave
cmp
pop
cmpsb
repnz
movsb
push
ret
lahf
fidivrs
int3
push
xchg
out
mov
adc
jbe
hlt
push
in
test
add
fbld
cmp
push
jae
clc
mov
test
mov
jne
fwait
cmp
mov
sub
mov
out
test
jmp
sahf
mov
xchg
je
sahf
gs
pop
mov
insb
mov
cld
movsl
inc
sti
lea
or
xchg
cli
and
push
aad
lock
lret
enter
adc
pushf
mov
popf
ja
hlt
ljmp
int3
lret
xorb
mov
adc
dec
aad
or
pop
test
notl
pushf
and
cli
mov
popa
mov
aad
insb
in
movsl
mov
push
sub
add
xorl
inc
out
cltd
mov
xchg
rorl
jecxz
pop
test
push
jo
cmpsl
add
lods
repnz
xchg
insl
movsl
push
or
mov
in
lock
add
fdivrl
xor
aas
mov
lods
adc
roll
test
mov
test
mov
jb
ja
add
mov
loop
push
shlb
pop
ss
mov
sahf
fldt
aas
sub
test
pop
xchg
inc
out
mov
xor
mov
cli
adc
aas
mov
sub
mov
dec
mov
jb
call
push
and
gs
cmp
jmp
ficomps
dec
fldl2t
and
int3
insb
pushf
mov
enter
aas
icebp
shrb
cs
int3
cmpsb
gs
outsb
jmp
cmp
mov
push
jns
dec
fisttps
hlt
ss
iret
test
ficompl
jecxz
fldt
xchg
orl
aad
adc
out
pop
fnstcw
cld
stos
mov
sbb
pop
outsl
adc
leave
push
jg
jbe
mov
jns
dec
push
push
lcall
xchg
and
mov
push
jmp
push
insl
jge
js
cmpsb
xor
stc
push
xchg
outsl
clc
dec
inc
and
jle
mov
mov
hlt
and
adc
in
push
inc
mov
cmp
mov
sbb
ja
mov
out
push
xorl
insl
ret
jbe
xchg
mov
push
mov
mov
jg
ljmp
das
cli
mov
test
inc
mov
mov
dec
hlt
sub
sub
sub
cmpsl
das
pop
das
push
mov
rcl
lret
mov
xchg
adc
popf
scas
lods
sbb
lret
add
add
xchg
add
fstpl
xor
stc
dec
cltd
repz
cltd
pop
jae
jl
out
int3
cltd
xor
int3
addr16
lahf
addr16
loop
inc
add
inc
add
xor
out
ja
xor
and
stos
jne
lcall
mov
adc
push
jg
dec
mov
add
add
adc
imul
sti
xchg
xchg
dec
frstor
outsl
jbe
ret
add
jp
jl
clc
xor
test
push
push
mov
stc
sbb
dec
xchg
sbb
das
rcrb
pop
jg
int3
aaa
mov
pop
insb
jge
test
ja
in
cmpl
adc
mov
sti
cli
inc
cld
xchg
push
hlt
call
mov
or
dec
test
push
setb
fsubs
lret
std
pop
repz
xchg
ss
decb
jae
call
fwait
call
xor
inc
sti
repz
imul
pop
push
push
jbe
push
jg
cmpsb
cli
mov
jg
or
sbb
push
dec
push
in
xchg
pop
lret
hlt
push
les
hlt
repnz
roll
adc
xchg
aas
cmpsb
adc
dec
ret
into
hlt
inc
arpl
push
push
dec
scas
stc
adc
and
fwait
movsl
jle
out
mov
cmc
pop
lods
cmp
ret
mov
push
lcall
pop
mulb
jmp
mov
dec
jb
stos
hlt
push
frstor
lods
add
and
mov
add
xchg
sbb
push
add
mov
lods
push
xor
dec
push
inc
xor
addr16
ds
push
aas
shll
pop
jp
mov
xchg
sub
call
cld
mov
call
and
dec
inc
adc
into
or
sbb
stc
pusha
aas
mov
pop
adc
mov
cmpsb
lds
add
test
popf
push
test
or
inc
adc
jp
mov
sbb
imul
test
lea
jnp
div
fbld
in
jnp
and
mov
jle
mov
adc
pop
mov
testb
imul
dec
cmp
sub
mov
out
das
scas
fistl
ljmp
mov
jle
sysexit
fs
mov
pop
cmp
dec
divl
jg
in
insb
add
adc
cmp
sarl
test
movsl
or
xor
mov
xor
or
decb
hlt
sbb
cmp
subb
push
sub
and
push
rcrl
aam
lea
fs
scas
sarl
xlat
outsb
pop
std
rcr
pop
jg
or
adc
jbe
push
lret
js
cli
decb
push
movsl
out
mov
xchg
jecxz
and
insl
push
movsb
in
loop
dec
imull
pop
movsl
stc
hlt
mov
enter
adc
or
test
int3
dec
xor
rclb
pop
shl
or
mov
xchg
xchg
xor
ja
movsb
jl
out
xchg
int3
jle
test
xchg
mov
aam
loopne
js
pop
xchg
enter
shll
enter
jo
aam
ss
sbb
dec
cmp
and
cmp
cld
sbb
ret
pop
bound
jecxz
fwait
cmp
inc
mov
pop
or
jbe
push
imul
add
fadd
mov
xor
pop
mov
xchg
cwtl
jg
loope
neg
jb
jb
in
cmp
iret
jns
pop
adc
and
dec
mov
sbbl
xor
xchg
jg
dec
jge
fisubrs
aam
xchg
add
xor
imul
mov
xchg
lret
mov
or
adc
andb
movsb
or
push
inc
sarb
jnp
or
lods
das
repnz
test
aam
out
or
jo
push
jp
jnp
mov
sbb
insl
shl
pop
int3
aam
sti
imul
mov
push
cwtl
ss
in
cli
mov
jle
and
dec
daa
adc
xchg
push
push
pop
xor
cld
and
and
or
stos
rol
push
mov
add
mov
repz
popa
fsubrp
cmpsb
pop
rorl
push
rclb
out
inc
inc
jnp
bndstx
push
jge
shl
jmpw
cld
xchg
sbb
pusha
lods
xlat
mov
mov
dec
fdivrp
mov
mov
xor
clts
adc
sub
add
xor
int
cmp
or
adc
dec
fistps
jb
sub
mov
jge
scas
scas
dec
notb
pop
xchg
out
gs
outsl
je
xchg
cmp
in
cmp
int
pop
adc
enter
test
cmpsb
push
mov
xchg
int3
mov
sub
lret
arpl
cmpsl
lret
insl
sti
out
sbb
dec
sbb
inc
dec
jmp
lods
pop
pop
inc
mov
ss
inc
cwtl
imul
adc
cmpsl
mov
pop
outsb
mov
fistl
rep
ret
add
repz
inc
outsb
mov
cmp
das
xchg
stos
in
clc
das
fcompl
loop
add
int
cmpl
fwait
dec
push
or
outsl
adc
xor
inc
sub
ss
and
adc
push
cmp
inc
lds
xor
cmpsl
rolb
test
fmul
sbb
pop
movsl
pusha
push
jl
dec
mov
cmp
jns
inc
sbb
dec
movsl
mov
pop
js
lods
jno
rorb
lea
jg
push
sub
aad
mov
outsl
push
mov
loope
mov
lock
cmpsb
pop
movsb
xor
xlat
or
bnd
repnz
add
xchg
xor
bts
inc
xor
or
mov
jmp
fwait
or
xchg
mov
cli
pushl
pop
aad
sarb
sbb
scas
inc
outsb
xlat
add
iret
fnsave
jno
mov
imul
jns,pn
fisttpl
mov
movsl
scas
lock
lret
inc
cmp
xchg
outsb
inc
and
out
insb
or
cmp
out
pop
pop
fcmovnu
or
mov
pop
mov
pushf
xor
cmp
call
inc
iret
fwait
cmp
out
mov
sub
ror
aam
lock
pop
lea
push
enter
popl
int3
mov
pop
add
push
pusha
test
xchg
xchg
dec
rol
adc
dec
fnsave
jle
lret
into
lea
hlt
out
mov
data16
xchg
jg
dec
or
push
inc
fs
push
out
imul
rcrl
adc
dec
jp
xchg
loope
cmp
lahf
jne
cli
scas
sbb
fwait
push
jg
mov
icebp
inc
movsl
lcall
inc
inc
push
lds
mov
cmp
fld
movsb
push
out
test
pop
mov
cli
popa
aad
in
fsubr
test
xchg
test
call
mov
out
xor
xchg
inc
cld
xchg
sti
clc
dec
mov
jb
cmp
jg
lods
rep
xchg
popf
loopne
jge
bound
addr16
dec
addr16
sar
mov
orl
sbb
pop
dec
fnstenv
orb
cld
lods
pop
sbb
inc
daa
push
rcrl
lcall
cwtl
sarl
ret
cmp
repz
adc
pushf
push
std
push
pushf
movsb
adc
cwtl
push
lock
loopne
imul
stc
dec
mov
sub
or
and
cs
or
pop
cmp
popa
mov
jecxz
vpmullw
dec
popf
loop
test
out
jge
enter
mov
es
push
adc
ja
aam
fld
daa
sub
cmp
loope
push
jbe
or
xor
ret
imul
aaa
cld
lds
int3
fdivs
push
bsf
int
xchg
shrl
aad
push
bound
bound
bnd
pusha
jo
repz
xchg
adc
push
scas
sub
xchg
pop
mov
mov
ljmp
clc
hlt
mov
mov
sub
fdivrl
jns
jge
shl
xorb
inc
dec
pop
ss
mov
cmc
out
outsl
idivl
ds
dec
sahf
std
aad
fdivl
lret
sub
mov
imul
ljmp
nop
push
jbe
pop
xchg
mov
sbb
scas
jns
bound
adc
mov
mov
imul
call
int3
push
int
xchg
xor
int3
jbe
lcall
adc
fnstenv
push
push
ret
adc
stc
flds
dec
xchg
aaa
lods
clc
es
cwtl
xchg
sti
sbb
and
sbb
sti
test
je
mov
xlat
leave
pop
and
cmp
fcoml
cmp
cmp
pushf
iret
insl
lods
rcrb
and
mov
stos
jge
arpl
add
mov
fwait
dec
or
jns
mov
push
pop
mov
les
stos
in
cmpsl
jmp
call
dec
pop
jmp
lret
std
xor
mov
mov
push
mull
mov
aad
ret
shlb
fnstenv
mov
jo
lock
mov
push
jnp
and
sbb
cld
fwait
or
mov
sbbb
fists
mov
cmp
xchg
ret
xchg
roll
mov
dec
lods
mov
jno
lret
das
rcrl
push
shrl
mov
movsb
xlat
imull
jbe
in
popl
iret
notb
sbb
insl
xor
cli
jnp
mov
jle
outsl
mov
imul
jecxz
sti
ds
cs
or
xchg
data16
or
rcrl
mov
jo
add
sbb
inc
sti
jle
mov
or
pop
fcmovbe
lods
addr16
pop
xchg
aaa
or
push
or
fdivp
adc
test
cmp
fsubl
repz
xchg
inc
lods
outsl
scas
idivb
push
es
fisubrl
lods
dec
mov
push
scas
cmp
cli
pop
push
movsl
push
push
mov
int
jnp
dec
lret
je
addr16
push
mov
xchg
mov
lret
andb
shrb
xor
test
js
cmpsl
sbb
push
pop
inc
inc
xor
popa
pop
lds
lods
bnd
shrb
add
je
cmpsl
inc
jecxz
sbb
data16
outsl
mov
pusha
push
idivb
stos
inc
cld
in
sbb
mov
int
pushf
lret
jl
or
scas
aaa
in
adc
jg
jo
pushf
notl
sbb
sahf
push
fs
mov
jmp
cmpsb
clc
out
fistl
insb
jno
imul
cmp
pusha
push
mov
sbbl
mov
loope
jmp
lods
adc
jo
dec
leave
or
or
xchg
pop
inc
loope
lcall
stc
test
fdivrl
jg
mov
loope
xlat
push
jle
rcrl
mov
xchg
xchg
sbb
pop
dec
xor
push
xchg
shlb
push
pop
dec
ficoms
shlb
ret
jns
xor
xchg
jae
cmc
cli
and
pop
xor
repz
in
inc
xchg
roll
xchg
std
push
cmp
mov
mov
cwtl
lods
fadds
xchg
cmp
in
push
cwtl
add
call
iret
ret
xchg
fstpl
out
imul
xlat
imul
and
cmpsb
adc
loopne
mov
push
add
sahf
pusha
cmp
xchg
imul
leave
adc
adc
dec
pop
int3
adc
sub
dec
loope
icebp
sbb
mov
loop
clc
inc
sti
scas
mov
mov
pslld
fs
sahf
pop
push
pop
mov
inc
dec
mov
sarl
aas
cmp
cmp
data16
mov
outsb
sub
ss
stos
ljmp
dec
movsb
aas
insl
int
aad
xchg
push
push
pop
or
movl
pop
jb
sub
dec
xlat
lock
stos
dec
adc
sbbl
stc
nop
fadd
leave
push
pop
popf
stc
js
inc
push
inc
and
out
mov
mov
inc
dec
adc
mov
loop
repnz
cmp
xchg
xlat
inc
dec
sbb
fbld
cmp
daa
add
jge
lret
das
ret
out
adc
pop
or
test
push
lods
mov
cli
xchg
add
cwtl
xor
dec
lods
in
lock
push
faddl
div
flds
hlt
sub
inc
std
adc
lahf
out
mov
mov
sub
lret
in
push
jge
push
push
and
adc
pop
rcrl
loope
into
stos
cmpsl
addr16
movsl
cmpsl
addr16
jno
sbb
mov
cld
lahf
pop
add
sub
jo
cmp
dec
cmp
lods
movsb
inc
sbb
std
sbbb
cli
pop
jne
xlat
std
mov
sbb
adc
cmpsb
fs
inc
dec
dec
and
stc
mov
bound
pop
mov
cmp
shll
push
jge
pop
nop
imul
xchg
cmp
mov
int
sbb
mov
mov
cmp
mov
out
iret
adc
fld
push
int3
xchg
arpl
xlat
jl
xor
push
add
push
or
sub
repnz
mov
scas
fsubl
jmp
repz
or
les
mov
mov
ljmp
jo
hlt
cltd
add
es
push
lahf
shlb
mov
push
gs
repnz
cli
int3
xchg
dec
add
sub
dec
repnz
sahf
icebp
sbb
test
es
sbb
pop
flds
cmpsl
cmp
rcrl
mov
pop
lahf
jno
push
jecxz
outsl
sbb
hlt
push
jg
repz
out
inc
jb
push
mov
cmp
fs
lds
cmc
arpl
push
outsl
mov
flds
inc
inc
cwtl
jnp
jbe
pop
mov
or
sti
cltd
out
leave
push
out
cmpsl
and
mov
in
ret
adc
pusha
mov
jg
or
adc
sbb
cmp
pop
inc
mov
pop
sub
sub
aaa
pop
inc
fs
push
shlb
xor
inc
ret
outsb
arpl
nop
in
lds
inc
idivb
sbb
lahf
jmp
outsl
inc
sbb
jo
nop
adcb
mov
rclb
into
jnp
dec
sub
xchg
jmp
lret
sahf
or
std
out
jp
ljmp
jl
sub
sbb
pop
push
ss
mov
sub
push
mov
sbbl
push
inc
inc
int3
sti
or
out
cwtl
inc
jnp
jb
cmc
std
jg
inc
or
mov
popf
iret
dec
nop
aad
mov
add
das
mov
dec
lret
in
jge
std
daa
push
imul
cmpsl
mov
movsl
mov
int
or
stos
test
xor
mov
lods
cld
popa
mov
test
pop
mov
mov
scas
adc
addb
in
into
or
mov
sub
inc
mulb
mov
aaa
adc
push
popf
mov
mov
sub
jl
mov
fst
dec
pop
aad
cmp
ficoms
pop
mov
ljmp
cmc
aad
sbb
jmp
lods
or
daa
inc
lahf
mov
jbe
sbb
adc
popf
and
movsb
sbb
cmp
pop
xchg
mov
ja
push
loope
stc
rclb
mov
lahf
fidivrl
sbb
aad
push
pop
mov
inc
jae
test
in
mov
sbb
mov
test
scas
push
mov
lret
push
or
jae
dec
push
and
ficompl
cs
mov
inc
sahf
subl
lahf
adc
pop
dec
xchg
add
cmp
lcall
sbb
push
fwait
movsl
addr16
divl
xor
add
mov
fcomps
push
mov
fadds
shrl
pop
iret
enter
pop
add
imull
sub
aas
dec
cltd
dec
push
loop
push
mov
pop
cs
cmpl
sub
scas
inc
ss
shll
push
stc
jno
cmp
mov
in
jl
add
ret
jmp
fs
pop
add
test
sub
stc
pop
in
and
mov
repz
and
popl
xor
movsb
rorl
test
ret
sbb
int3
and
aaa
cmp
mov
popa
cwtl
arpl
xor
pushf
imul
pop
jmp
cmp
fdivrs
add
pop
cmc
andl
sbb
mov
adc
insb
vpandn
sbb
pushf
scas
push
or
mov
call
mov
and
mov
push
lock
mov
adc
daa
test
in
rcr
mov
mov
xchg
leave
rclb
jnp
out
push
leave
inc
mov
rolb
fdiv
jmp
or
pop
mov
ret
sub
imul
push
sbb
aam
mov
ljmp
mov
clc
mov
push
loop
fistl
pop
xor
push
test
fcmove
xchg
push
ljmp
xor
outsl
mov
int
ja
mov
bound
mov
hlt
in
cmp
mov
test
mov
sbb
das
int3
outsb
rorb
test
mov
negb
iret
fnstsw
push
fcompl
and
cmp
dec
fsub
sub
mov
rolb
popf
mov
icebp
fisubrs
sub
push
sub
mov
mov
pop
pop
daa
fimuls
xchg
mov
shrl
jns
pop
jne
add
ss
js
out
lds
or
mov
push
insl
fcom
testb
and
js,pn
inc
push
jecxz
loopne
loopne
call
pushf
and
xchg
dec
add
xchg
in
push
pop
xchg
gs
mov
or
sbb
lret
jge
or
inc
and
sbb
and
in
inc
pop
push
adc
lds
mov
jno
and
out
mov
gs
aas
xchg
dec
mov
lock
test
outsb
dec
mov
loopne
mov
movsl
bound
lock
in
jle
inc
mov
dec
ds
and
push
call
push
dec
data16
rclb
icebp
adc
das
cmp
mov
inc
cmpsb
mov
testl
loope
mov
lret
fldt
xlat
sub
jb
jns
dec
and
mov
outsl
scas
and
sti
adc
mov
sbb
andb
push
or
push
sbb
sub
and
jmp
lahf
jo
sub
int3
sbb
jg
push
les
and
loope
add
adc
xchg
push
cmp
mov
xchg
shlb
lret
gs
hlt
jmp
js
xchg
dec
pop
lods
jp
sbb
dec
div
or
lret
cwtl
mov
call
cmp
and
mov
aas
std
cmpsb
cld
xlat
xor
mov
sahf
into
xor
mov
std
push
fisubl
fstpl
and
cmpsb
es
add
decl
pop
andb
pop
jg
subl
filds
mov
test
push
ss
mov
imul
mov
in
cmp
push
fdivrs
mov
cltd
dec
sub
sub
insb
sub
movsb
mov
in
loop
and
ret
dec
push
mov
js
xlat
and
ss
jae
sub
or
mov
sub
incl
lret
movsl
test
mov
jae
jmp
cwtl
pop
xor
mov
std
mov
pop
xchg
pop
or
iret
push
movsl
xor
xor
or
test
lea
mov
push
pop
mov
dec
shr
cwtl
push
inc
jmp
mov
int3
bound
sahf
lea
idivb
sbb
stos
dec
cmp
mov
pop
clc
dec
lret
mov
iret
lock
dec
in
cmc
adc
mov
daa
dec
jbe
test
or
xchg
out
insb
inc
jge
rcll
mov
test
and
cld
rcl
push
aaa
jb
scas
jb
ret
jmp
mov
sub
sarl
lcall
ljmp
mov
cltd
mov
inc
fstps
movsl
int3
dec
negb
sub
pop
int
sbb
insl
mov
leave
leave
mov
sbb
lock
mov
icebp
lods
cmp
lea
outsl
arpl
pop
pop
testl
cmpsb
leave
sbb
fwait
pop
shrl
jno
mov
inc
movsb
pop
movsb
in
cmpsl
negb
in
cld
jnp
or
lods
and
cwtl
sbb
mov
ret
bound
movsl
outsb
jmp
xchg
ret
mov
xchg
ss
mov
and
ds
fdivrl
mov
rclb
and
inc
xchg
jb
mov
shlb
mov
sbb
inc
xor
ss
xor
jnp
imul
loope
jnp
lock
and
testb
sub
push
data16
add
nop
jmp
paddw
sarb
cmp
pop
idivl
in
ljmp
dec
sub
ret
xchg
rcll
in
jp
pop
xchg
and
jl
mov
rcll
jb
fistl
jns
imul
movsb
cmp
daa
push
stc
dec
pop
pop
ds
cmp
outsb
enter
cld
repz
fsubp
xor
dec
pop
int3
fimuls
jmp
mov
xor
xlat
in
mov
add
dec
mov
std
into
outsl
ja
das
push
sbb
ds
fcoml
std
xchg
xor
jmp
fmulp
int3
dec
mov
xchg
inc
jle
iret
test
adc
fs
and
sbb
dec
mov
and
cmpsb
mov
jecxz
repz
add
mov
jg
cmpsl
pop
add
leave
insl
push
ret
or
out
pushf
lods
ljmp
orl
xor
mov
stos
and
aam
mov
in
pop
addr16
sub
jb
movsb
jo
sub
cs
insl
jbe
lds
xchg
out
daa
pop
lds
stos
mov
aam
jne
bound
mov
pushf
ret
daa
and
lea
mov
adc
scas
mov
sub
mov
nop
imul
cwtl
hlt
pop
fmul
stos
mov
fs
xchg
shl
outsl
in
test
cmp
add
gs
cmpsl
xlat
or
hlt
xchg
flds
jne
stos
call
loopne
arpl
pop
in
aad
push
fidivs
sti
pop
cmpsl
imul
leave
cmp
mov
out
out
jecxz
cmp
jp
sbb
mov
push
sbb
xchg
dec
je
sbb
xor
cmpsb
lret
dec
hlt
jae
sub
lret
bound
sbb
pop
sub
sub
push
hlt
ret
outsl
mov
pop
fldenv
push
aam
xchg
ja
or
sub
push
arpl
push
inc
daa
xor
or
loope
pop
lods
inc
call
push
fs
xchg
lods
inc
jecxz
sbb
stos
pop
push
popa
xchg
mov
mov
add
pop
test
jno
cmp
jne
pop
fisubrs
lods
rol
call
aaa
push
repnz
jmp
dec
into
xchg
data16
cmc
cmp
xor
jns
add
pop
in
pop
mov
inc
fnstsw
add
int
mov
jnp
mov
push
leave
mov
imul
sub
add
or
xchg
jnp
jno
int
lea
and
fstpl
dec
or
adc
or
xchg
jge
call
push
mov
dec
jb
imul
pushl
dec
jge
pop
inc
ljmp
or
push
cmpsl
cmpsl
push
loope
hlt
jl
push
adc
outsb
add
ljmp
mov
inc
lcall
push
xchg
data16
js
pop
jo
or
push
js
lock
ret
test
mov
mov
jbe
xchg
ret
pop
and
mov
and
in
bound
loope
mov
mov
out
iret
popa
cmp
popf
xchg
jg
aad
out
inc
les
add
push
iret
add
fiadds
mov
jl
ret
pop
data16
xor
lret
std
adc
cltd
xchg
jbe
cmp
fwait
jns
xor
mov
jns
lcall
push
add
xchg
int3
cli
jne
jae
call
cmpsl
mov
cmp
lods
xor
orl
leave
cltd
iret
lock
cltd
loop
dec
cmp
shr
test
nop
mov
andb
add
add
in
cmp
ja
lahf
sbb
push
jne
dec
pusha
mov
jnp
adc
lds
jge
push
xor
or
jp
xor
outsl
sub
cmp
pop
or
pop
subb
subl
pop
sub
xchg
push
ljmp
xor
js
and
call
or
out
lcall
ds
push
mov
inc
adc
xchg
mov
xor
pop
jmp
inc
mov
sub
out
and
jle
shrb
sbb
orl
jp
rorb
aad
mov
pop
ljmp
lret
xorl
xor
ds
xchg
jns
popf
or
jne
jo
cmc
sub
cmc
cli
jbe
pop
and
lock
out
out
les
mov
sub
jge
fs
adc
out
jns
inc
jl
mov
repnz
out
xchg
lret
out
outsl
les
scas
lods
mov
clc
stc
pop
mov
test
push
jne
lods
adc
sub
ss
test
xchg
enter
lock
pop
adc
aas
mov
pop
popa
push
dec
mov
inc
or
aad
push
adc
jne
xchg
xor
dec
pop
add
flds
out
jp
cltd
inc
xchg
clc
jl
test
sbb
sub
mov
dec
mov
call
fdivl
inc
pusha
dec
mov
in
inc
push
aas
movsl
in
ror
push
aad
mov
loopne
daa
addr16
xor
rcll
inc
cmpsb
loopne
std
into
pop
add
dec
mov
scas
out
daa
and
test
push
push
jnp
add
shll
adc
mov
mov
divb
ret
sbb
sub
sbb
lahf
jg
jae
sbb
jl
jg
outsl
pop
pop
imul
fsubrl
test
imul
aam
adc
arpl
orl
xor
mov
and
stos
ds
push
int
mov
cmp
add
inc
jb
push
rcll
data16
xchg
aaa
xchg
dec
cli
incb
xor
out
or
cltd
mov
push
push
and
scas
shlb
pop
push
pop
adc
dec
xchg
sahf
loop
sbb
cmp
mov
push
out
and
jp
into
mov
stc
jns
or
scas
daa
ds
mov
cmpsl
fs
addr16
mov
jge
out
xchg
mov
push
or
pop
popa
ret
inc
sub
sahf
xor
add
les
outsl
minps
sub
fpatan
xchg
bswap
add
int
mov
aam
out
sub
hlt
inc
test
cwtl
xchg
aad
jb
insb
add
pop
jno
dec
fdivr
jo
fdivl
push
iret
push
stos
pop
pmaxub
loopne
cvtps2pi
fchs
inc
adc
outsl
mov
mov
imul
adc
mov
push
negl
xchg
mov
xchg
lds
es
es
mov
ss
loop
dec
and
add
cmp
mov
out
sbb
mov
lods
ret
push
cmp
shl
mov
push
repnz
dec
xchg
js
jns
mov
stos
xor
punpcklbw
hlt
lods
gs
ljmp
mov
jg,pt
daa
das
xchg
sub
test
mov
cmovle
call
inc
pop
decb
test
sub
in
loopne
sbb
and
jnp
cmc
ror
adc
outsl
xchg
leave
test
mov
xor
les
cltd
adc
fcoms
mov
adc
push
lahf
xchg
lds
es
jl
insb
jnp
adc
mov
aaa
in
dec
fxch
and
jl
popf
cmp
sub
ss
loopne
push
aad
enter
pop
xchg
aam
sub
add
mov
incl
ss
clc
and
ret
jmp
jp
sub
xor
jmp
sub
xchg
jecxz
stos
jle
mov
ffreep
jl
nop
sbb
lcall
loope
pop
fldl
cs
ja
pop
gs
movsl
fnstenv
inc
scas
sti
dec
add
int3
mov
pop
xor
sub
adc
xlat
cmp
test
outsb
or
pop
jecxz
xchg
outsb
out
add
pop
inc
jne
fs
adc
add
or
xor
push
ljmp
into
mov
xor
inc
pushf
ficoms
push
rcll
mov
xlat
jbe
push
stos
dec
insl
add
int3
adc
push
lock
mov
divl
fnstsw
push
inc
jbe
std
dec
gs
pop
call
ljmp
mov
or
or
fidivrs
iret
ljmp
mov
mov
cmpsl
and
sahf
sahf
sbb
sub
lret
fwait
out
lret
pop
mov
xchg
inc
sub
cmp
and
iret
add
test
lahf
filds
imull
arpl
cmp
xchg
push
mov
pop
sbb
cmpsb
test
hlt
add
dec
cltd
rcrb
pop
xchg
xchg
lahf
push
outsl
push
popf
or
ja
lds
les
cs
lss
rcrl
or
test
lea
push
into
xor
push
outsl
adc
test
xchg
xchg
bound
fwait
push
pushf
test
cmp
sti
loopne
or
shlb
mov
lds
pop
xor
fs
or
mov
xchg
cli
push
pop
jge
bnd
adc
aas
aad
push
cmp
sub
cs
pop
scas
cmp
or
add
movsb
flds
call
fidivrs
jp
movsl
mov
cmp
lret
cmc
adc
pop
daa
fstpt
test
pop
xchg
stos
sbb
fimuls
or
xlat
xchg
cs
mov
int
pop
dec
aas
int
push
mov
iret
popa
lea
add
ljmp
xlat
inc
cmc
inc
adc
mov
mov
jmp
das
fstpt
mov
int
push
push
jno
fsub
jbe
mov
pop
pop
jne
push
lret
mov
fbld
test
aaa
cmp
adc
mov
imul
in
xchg
clc
inc
not
shl
das
jl
mov
nop
xchg
iret
jno
mov
pop
bnd
sar
stos
push
dec
jl
pop
jp
pop
push
inc
fildl
adc
push
jbe
jmp
mov
jl
dec
xchg
mov
dec
int
mov
lods
arpl
mov
cmp
sbb
fstp
aam
rcr
mov
shlb
sub
or
lret
pusha
stos
jg
cmp
test
addl
mov
das
mov
rorb
popa
cltd
nop
adc
test
iret
addb
pop
repnz
push
adcl
pop
int3
int3
mov
jle
pushl
sbb
sbb
jmp
imul
andl
repnz
std
mov
nop
addr16
fmul
comiss
mov
js
push
ja
and
in
lods
repz
adc
jbe
pop
popa
shl
fldcw
and
nop
sub
repnz
mov
out
mov
je
scas
repnz
in
imul
fsubp
adc
ja
mov
nop
iret
adc
push
sub
les
jb
jl
push
lods
sub
loop
imul
mov
mov
add
mov
cmp
ds
dec
sub
sbb
sbb
insl
add
dec
scas
pop
push
jns
ljmp
aad
add
in
scas
cltd
and
test
lahf
xor
movsb
scas
push
cmp
insb
sub
aaa
sub
repnz
subb
call
pop
jns
pushf
arpl
popa
dec
sarl
sub
push
sub
adcl
push
pop
or
and
out
dec
jecxz
nop
xchg
xchg
mov
outsl
cmp
stc
outsl
jecxz
adcb
mov
mov
leave
cwtl
test
cmpsl
xchg
icebp
in
push
mov
xchg
jnp
cltd
cli
loop
lds
repz
mov
jo
lret
sbb
add
jns
gs
fidivs
leave
mov
push
es
pop
mov
push
adc
mov
sbb
and
jge
or
scas
hlt
int
idiv
push
xchg
xchg
adc
dec
fsubl
mov
test
and
decb
inc
push
mov
dec
in
jmp
lcall
pop
es
mov
mov
dec
jp
enter
mov
mov
addr16
xor
mov
sub
outsb
adc
fcmove
cld
xchg
add
sbb
jne
stos
sub
lock
pop
and
pop
fsubl
stos
mov
repz
push
xor
flds
outsl
xchg
and
lret
xor
dec
pop
loopne
jp
rcrl
or
std
inc
stc
jmp
out
fwait
ss
out
lcall
sub
xchg
xchg
ficomps
or
les
push
xchg
outsl
cwtl
sbb
popf
fwait
xchg
arpl
sbb
rorl
imul
mov
adc
mov
call
fldt
in
cmp
cmp
rcrl
jne
sarb
mov
lret
pop
inc
mov
call
fsts
mov
aad
or
repz
arpl
push
rcrb
es
add
repnz
lret
push
pop
pop
jl
es
dec
xchg
pop
movsl
xor
xchg
push
clc
push
push
into
mov
fwait
insb
arpl
ror
iret
cmp
cmpb
into
push
adc
into
adc
lds
leave
xchg
pop
xor
adc
movsl
pop
cwtl
setbe
jmp
adc
lods
inc
xchg
inc
test
mov
pop
rorb
dec
insb
cmp
cs
sahf
in
mov
inc
into
push
xor
and
mov
mov
inc
cli
jne
inc
je
int3
sbb
mov
xchg
or
adc
pop
and
xchg
lcall
rolb
and
xlat
ljmp
xchg
insl
outsl
in
mov
shrb
imulb
enter
push
add
inc
ret
or
notb
adc
sub
and
add
jp
aad
adc
lret
sbb
sub
loope
ds
pop
aad
and
push
insl
out
movsl
push
cmp
xchg
mov
mov
adc
pop
sbb
push
push
xchg
push
push
sbb
mov
movb
adc
cmpsl
and
enter
test
xor
dec
inc
adc
sbb
popf
cmp
adc
mov
inc
xchg
je
nop
xor
int
aaa
add
jne
in
dec
stos
pop
sub
cmp
out
push
pop
sbb
test
xchg
cmp
sbb
es
fisubrs
mov
insl
dec
divb
hlt
das
into
sub
inc
cltd
adc
std
cmp
adc
or
pop
lret
pop
pop
lods
cltd
and
test
or
das
addr16
jp
movsb
aad
jmp
dec
push
and
in
pusha
xchg
push
lcall
sub
cs
mov
mov
or
das
dec
push
or
push
pop
xchg
xor
aas
or
js
ja
ret
lret
fisubrl
jmp
shlb
inc
xor
hlt
aam
jb
adc
or
std
data16
mov
stos
roll
hlt
mov
push
js
xchg
fldcw
addr16
mov
pop
jg
sbb
push
ss
icebp
xchg
ret
ret
js
nop
jno
arpl
fstpt
dec
outsl
in
scas
jle
ja
push
cwtl
xchg
jbe
icebp
insb
jp
sarl
dec
add
jp,pn
fwait
mov
les
inc
call
jg
pop
mov
gs
xor
call
scas
lret
xor
arpl
pxor
xor
out
test
in
cmp
or
dec
inc
dec
sub
or
scas
adcb
aam
clc
adc
in
push
add
fisttpll
pop
jl
pushf
mov
scas
pusha
jno
xchg
cmp
mov
or
lret
xor
jns
and
push
jge
pop
out
lahf
rcll
ljmp
push
stc
pop
dec
popa
mov
xor
int3
jns
or
pop
push
or
cwtl
and
ds
ljmp
lods
jp
mov
dec
inc
sbb
cli
xchg
inc
dec
lods
and
loope
sahf
pop
mov
mov
mov
jo
sbb
jp
mov
ja
in
loope
mov
mov
fidivl
loopne
pop
adc
ficomps
mov
inc
xor
flds
cmpsl
mov
push
cs
out
ljmp
mov
js
stc
inc
sbb
jno
cmp
xor
outsl
test
inc
sbb
add
jg
std
jno
lods
inc
shrl
and
jg
push
sbb
ud2
adc
push
sub
xor
mov
and
jbe
dec
mov
shr
fbld
cwtl
jmp
pop
addr16
xlat
aaa
or
sbb
scas
xlat
outsl
cs
movsb
ds
lahf
dec
int3
ljmp
mov
aad
xor
push
lock
cmp
mov
xor
pop
xchg
test
adc
lock
insl
mov
mov
jle
push
xor
push
mov
mov
cltd
lods
out
mov
add
mov
cli
dec
push
lods
bound
shlb
sbb
repz
subb
into
mov
and
ret
into
les
jle
cltd
out
cs
xchg
xchg
outsl
fs
push
dec
popa
adc
outsb
mov
stc
bound
je
cmp
ljmp
jge
jnp
sbb
cmpsl
mov
shrb
jns
ljmp
stc
es
inc
imul
fsubrl
inc
jp
jl
aad
dec
sub
inc
push
outsl
mov
sbb
out
cmp
or
inc
shrl
mov
jb
inc
stos
sbb
jae
or
gs
aaa
movsl
sbb
cmp
cld
aas
imul
or
lret
popa
sti
loope
xor
xorb
xor
cmc
sbb
fstps
sub
enterw
dec
hlt
mov
jge
fs
xor
sbb
push
fdivr
or
in
push
and
push
lock
and
cmp
or
add
gs
ljmp
lahf
es
pop
aam
jle
pop
stc
xchg
xlat
into
adc
inc
jmp
in
aad
mov
inc
dec
sbb
sbb
std
dec
pop
sub
pop
shrb
scas
loopne
mov
popf
sub
shufps
clc
bound
or
sub
cmp
fmull
xchg
lds
imul
push
dec
fstp
or
pop
inc
push
div
push
pop
pop
inc
pop
lods
push
add
mov
mov
push
ja
mov
jecxz
movsl
cs
jo
add
mov
cmc
or
adc
and
push
pop
sub
push
xor
cmp
cmp
pop
dec
mov
iret
mov
inc
out
icebp
push
xchg
mov
and
in
int
cmp
or
movl
sbb
mov
cmpsb
cmpsl
mov
shrl
inc
fsubs
push
pushf
ss
stc
xor
jo
std
ljmp
ds
xchg
pop
xchg
fadds
add
xor
popf
ret
in
pop
lock
int
addr16
dec
call
out
sahf
xchg
sub
mov
movsl
or
in
and
repz
mov
jb
cmp
xchg
jae
ljmp
out
jmp
mov
movsl
xchg
push
jbe
subb
test
add
pop
xor
add
bound
adc
pop
add
aam
sarb
xor
jns
cmp
mov
cmp
push
cli
mov
xchg
mov
sbb
jno
leave
mov
push
pop
push
cmp
repz
push
fbstp
jg
arpl
adc
mov
lea
dec
push
push
sub
inc
jb
mov
pop
insb
dec
pop
inc
dec
stos
fisubl
cmp
outsl
call
pushf
dec
push
shll
xchg
clc
jl
js
bnd
sbb
push
das
sub
addl
mov
call
pop
mov
aaa
dec
fdivl
jne
je
iret
xchg
add
test
stos
or
jae
xchg
outsl
lods
adc
je
push
mov
dec
das
jnp
jns
sub
push
daa
pop
xor
or
aas
mov
cmp
pop
fwait
cs
test
stos
aas
repnz
addr16
fnstsw
dec
sahf
push
test
cmc
outsl
jno
dec
sti
aaa
repz
daa
pop
cltd
jl
push
push
pop
pop
cmc
push
roll
xchg
icebp
push
out
jo
in
iret
fwait
rdmsr
test
mov
dec
xor
out
or
mov
es
xchg
cmp
push
mov
leave
pop
sti
test
andl
mov
cmp
es
cld
in
ds
adc
mov
or
jns
pop
in
lock
stc
enter
inc
test
out
lock
adc
xchg
loop
negl
mov
inc
pop
aad
mov
pop
add
lods
mov
jns
pusha
or
inc
shll
sbb
shl
js
adc
xor
lret
mov
xchg
inc
xorb
pop
arpl
bound
push
leave
cmp
movsb
mov
or
push
dec
ja
out
pop
jmp
push
lret
mov
push
outsb
jns
in
jae
sbb
pushf
mov
cmp
daa
jo
repz
movsl
ret
mov
jo
sub
gs
mov
aaa
aas
imulb
test
mov
neg
iret
mov
mov
popf
xchg
stos
xchg
ja
mov
add
sti
push
cmp
stc
loop
mov
cmp
cmp
rorl
je
mov
std
mov
mov
cmc
adc
push
inc
xor
mov
mov
mov
addb
add
stos
jno
loop
inc
repnz
mov
daa
and
xchg
cmp
push
and
sarl
or
push
popf
adcl
push
in
jno
fwait
sbb
mov
mov
arpl
fsub
popf
data16
xlat
add
add
shlb
fsubrl
int3
fs
fucom
dec
inc
jge
cli
insb
pop
lods
mov
andb
aaa
jmp
movsl
in
push
sbb
movsb
inc
sub
jg
ret
jmp
test
mul
std
loop
jge
xor
sub
sub
cmp
aas
pop
sub
aaa
sti
out
movsb
sub
jbe
loopne
lret
mov
loop
push
sahf
mov
xorb
loope
sbb
jp
call
mov
jns
mov
push
bound
hlt
fnstsw
sub
xchg
hlt
mov
pop
sti
lahf
push
jle
sti
pushf
outsb
dec
lea
cmp
mov
repz
mov
jnp
in
test
mov
rclb
rcr
sub
in
and
in
in
insl
jecxz
test
or
mov
and
jg
xchg
int3
mov
mov
ficompl
and
jne
mov
dec
dec
int3
inc
mov
mov
fistpll
cld
and
aad
leave
push
mov
jecxz
out
add
fnstsw
pop
mov
xchg
pushf
and
push
cltd
mov
enter
push
sub
sub
push
inc
and
inc
je
push
push
es
jmp
test
mov
std
jne
dec
int
clc
std
sub
divl
mov
push
sub
fdivr
or
int3
in
lds
xor
inc
mov
mov
xor
repz
xchg
pop
aaa
xor
push
frstor
pop
jbe
iret
push
push
pop
inc
jmp
pop
pushl
out
cld
lods
popf
int
stos
jae
pop
cmp
pop
jg
mov
test
jle
sub
insb
cld
mov
push
inc
jl
sbb
mov
mov
push
add
sub
mov
arpl
movb
out
cmc
subb
stc
stc
mov
mov
mov
sub
es
ss
sti
push
dec
rol
jl
xchg
dec
dec
pop
pushf
mov
insb
xchg
pop
xchg
pusha
inc
and
hlt
rorb
aaa
shlb
dec
outsb
int3
jge
dec
sahf
adc
pop
out
or
fcmovb
test
das
aad
lods
data16
push
mov
jl
mov
push
push
ficompl
push
repz
pop
stos
add
inc
push
cmp
mov
pop
mov
bound
mov
cmpsl
int3
push
cmpsb
jo
pop
leave
sbb
cmp
lock
jmp
sbbl
ret
out
shll
test
pop
jle
xchg
nop
sbb
dec
test
cmpsb
xchg
loope
les
inc
outsb
and
roll
dec
jl
push
dec
xchg
dec
test
push
mov
and
rep
repnz
fs
jmp
loopne
jne
xor
pushf
mov
les
fidivs
fstpt
js
inc
xor
push
in
out
push
cmp
test
xchg
aad
xchg
and
shlb
ljmp
jl
lret
xlat
push
shr
sbb
mov
arpl
inc
filds
lds
lds
xorb
push
aas
movl
ljmp
ss
sub
lcall
sbb
ret
out
cmp
xlat
push
mov
jge
xor
add
int
xchg
mov
xor
lcall
shll
fsubl
dec
sbb
cmpsl
or
lret
push
in
pop
pop
mov
dec
stc
int3
xchg
int
inc
pop
jo
sub
scas
jmp
cmp
mov
aaa
int3
and
data16
mov
popa
jb
in
lock
out
stos
pop
fildll
or
test
dec
mov
xchg
aas
cmp
mov
out
into
dec
sub
jmp
push
lcall
cmc
push
ret
dec
push
sbb
in
outsl
jmp
mov
mov
out
arpl
aad
pop
dec
fs
in
out
cmp
mov
rclb
pop
pop
pusha
xor
xchg
ds
adc
cmpsl
push
int
sti
lods
cmp
jle
fstps
lds
mov
movsb
mov
mov
test
inc
dec
ljmp
mov
xchg
mov
pop
mov
stos
stos
fnsave
sbb
sti
adc
xchg
pop
pusha
pop
ret
xchg
dec
je
call
in
fwait
pop
pop
jns
xor
sub
cltd
call
test
mov
shrb
adc
push
jg
mov
outsb
test
popa
add
mov
out
and
out
sub
cmpsl
sub
rcrb
adc
add
mov
add
ficomps
ret
mov
sti
pushf
and
lea
add
fdivrl
into
and
mov
jg
jbe
out
cli
lcall
sahf
lret
jecxz
inc
inc
pop
movsb
repnz
adc
dec
cmpsl
pop
into
sub
fwait
pushf
dec
pushaw
add
imulb
push
pushf
out
fnsave
dec
mov
in
push
jle
popa
push
adc
icebp
lock
fdivs
jne
test
lea
mov
add
mov
and
das
iret
or
or
clc
out
adc
shrb
ret
jl
js
sti
int3
or
cmc
push
mov
es
push
daa
xchg
mov
orl
dec
jmp
fnstenv
mov
mov
push
xchg
sub
das
lahf
test
xor
arpl
popl
lret
push
inc
mov
and
xor
dec
loopne
dec
mov
nop
cmp
cld
andb
es
cmpsl
mov
cmp
or
mov
dec
sbb
jmp
pushf
les
mov
sar
pop
notl
aad
mov
inc
andl
cmp
sbb
push
mov
dec
add
cs
sub
movsb
xchg
shlb
pop
pop
jo
repz
scas
lods
popf
pop
jmp
mov
mov
ror
insl
push
movsl
sbbl
clc
cmpsb
xlat
pop
jae
pop
dec
add
cmp
les
mov
movsb
bound
xor
push
xchg
jnp
arpl
outsl
cmp
xchg
push
push
inc
lods
xchg
mov
sbbl
mov
call
push
or
outsb
inc
rorb
ud1
rol
jecxz
lock
push
cld
ret
lahf
fisttpl
cmp
lds
mov
loop
popa
movl
lret
dec
or
pop
outsb
shrl
pop
adc
xorb
jmp
adc
push
or
lret
jne
loopne
js
xchg
nop
arpl
mov
pushf
outsb
pushf
mov
push
test
and
push
cmp
inc
iret
adc
push
fsubs
inc
cltd
mov
jno
xchg
pop
loope
hlt
das
rcrb
mov
push
aad
inc
sub
cmpl
icebp
fbstp
pop
pusha
push
dec
ljmp
inc
test
insl
ror
lcall
xchg
mov
adc
fists
inc
sbb
andb
test
les
mov
jo
or
xchg
jb
int3
aad
add
inc
xor
mov
lret
addb
or
add
sub
xor
cmpsl
jge
dec
dec
pushf
rorb
loop
insl
pop
ljmp
out
xchg
mov
pop
push
dec
sub
add
cmp
push
loop
jecxz
loopne
in
ss
clc
sub
es
out
inc
mov
setg
mov
pop
xchg
addr16
es
lea
js
cmp
insl
cli
jmp
popf
xlat
out
xor
push
mov
lret
sbb
xor
dec
xchg
out
and
fs
xchg
insb
mov
cs
and
jbe
mov
xor
test
xor
push
jp
cwtl
push
lret
popf
pop
rcrl
out
sub
cld
cld
jp
std
fisubrl
mov
xor
sub
sahf
fstp
or
mov
and
out
popa
popf
or
jo
dec
mov
js
inc
lret
mov
orl
sbb
jp
popa
divl
adc
dec
mov
nop
xchg
mov
push
lock
imull
fwait
adc
xchg
and
and
push
xor
pop
add
pop
xchg
mov
pop
pop
les
push
cmc
lods
sub
movsl
lock
movsb
dec
daa
inc
cmpsb
or
and
int
movaps
or
std
popf
jmp
push
das
xchg
mov
mov
jmp
mov
test
adc
sbb
mov
or
or
cmp
jne
into
in
dec
mov
jno
mov
es
adc
mov
jo
mov
imul
push
addb
in
lcall
mov
and
push
pop
dec
dec
mov
jns
fisttps
inc
in
into
mov
pushl
cmc
sub
js
jmp
jmp
push
loopne
cltd
mov
unpcklps
mov
jbe
xorb
and
mov
or
mov
je
sub
outsb
fsubr
or
jb
loopne
jne
xchg
stc
aaa
and
jl
mov
adc
aas
mov
pop
jl
out
jno
adc
inc
mov
imul
je
pop
ret
fiaddl
dec
and
test
dec
or
xor
and
pop
rcrb
jne
gs
cmpsb
adc
mov
scas
fs
xchg
int3
ror
out
xchg
dec
ljmp
pushf
dec
inc
mov
jl,pn
test
insb
je,pn
xlat
repz
leave
xchg
cmpb
fnstenv
pop
pop
xor
dec
or
into
xor
ret
mov
cmp
sbb
xchg
ljmp
ret
orb
push
cmpl
sub
out
jle
cmp
or
repnz
pop
jg
orb
xchg
out
dec
int
filds
ret
out
ss
sbb
mov
out
ja
push
dec
fbld
and
bound
fisubl
sahf
pop
add
gs
cs
pop
mov
xchg
bound
mov
sub
addr16
jmp
lahf
mov
mov
or
testb
xchg
jecxz
fbld
jp
inc
scas
fcom
cmpsl
inc
shll
lods
push
dec
loopne
out
xor
ret
dec
pop
fisubrs
out
mov
push
scas
jmp
cmp
data16
xchg
add
shll
push
test
jmp
mov
push
movsb
push
cmpsb
dec
xchg
sbb
fldl
adc
cmpsl
int
push
mov
adc
cmp
aad
cmpsl
push
xor
cltd
and
jge
sub
lods
cmp
clc
sub
loop
pop
jge
adc
scas
lods
aaa
fsubs
jb
iret
sub
inc
and
mov
add
pop
fdivrl
push
das
xorl
mov
movsb
stc
mov
stos
dec
sahf
sbbl
sub
cmpsl
out
mov
adc
std
out
mov
jmp
js
pushf
cmp
out
shlb
mov
mov
enter
out
xor
scas
mov
mov
xor
push
nop
adc
lock
lcall
add
ss
ret
fs
jo
js
and
mov
dec
stos
jne
push
hlt
mov
mov
adc
daa
mov
sub
mov
es
xchg
inc
or
stos
mov
shrb
iret
push
mov
sahf
pop
jbe
and
pop
ss
dec
test
push
mov
sbb
cli
and
jge
fisubs
sub
jb
push
dec
movsl
aas
xchg
mov
mov
sub
xchg
mov
ret
and
stos
xorl
xor
in
out
push
adc
test
mov
pop
xchg
pop
in
jg
bound
or
psubw
scas
mov
add
in
pushf
inc
jecxz
sbb
mov
cs
rorl
lock
clc
lret
jle
rclb
sub
imul
xchg
xchg
jg
subl
fsts
popa
insl
ljmp
or
mov
xchg
adc
cmp
jno
cmp
out
jae
fsubrs
int
mov
out
icebp
lahf
add
sub
jmp
pop
les
insl
adc
mov
insb
sbb
mov
pop
xor
sbb
pop
and
loopne
xchg
xchg
and
and
push
sub
fdivrs
xor
cmp
aaa
jecxz
push
and
dec
pop
gs
sub
dec
nop
jmp
out
sub
nop
incl
push
cmpsb
insb
sahf
and
testl
dec
lods
outsb
sub
or
adc
insl
fs
cmpsl
enter
stos
mov
jmp
repz
outsb
test
div
rolb
fidivrs
mov
in
ret
pop
sub
sbb
jae
scas
iret
inc
out
andb
xor
inc
push
mov
mov
and
fwait
adc
lret
insb
xchg
in
into
ljmp
ficompl
sti
dec
dec
call
push
pushl
mov
jne
rorl
mov
jp
push
pop
mov
cmp
ret
sub
mov
out
push
push
lcall
test
popf
movsb
sti
jge
cmpsb
dec
ret
and
jne
mov
pop
cmp
divl
add
out
mov
ficoms
sbb
jp
rorl
jmp
out
iret
lods
push
mov
push
ljmp
lods
shr
aam
inc
inc
fs
loop
jle
jmp
sbb
in
mov
pop
xchg
fsubl
in
cmpsl
mov
inc
xor
sbb
por
out
cmp
mov
addr16
dec
cmp
pop
xor
test
iret
inc
jae
leave
xchg
icebp
and
mov
adc
outsl
cmp
dec
pushl
cmc
mov
mov
jne
mov
xor
jle
lret
fs
pushl
lods
fadds
adc
addr16
sub
mov
test
repnz
jns
mov
dec
xchg
sbb
xchg
aad
pop
js
addr16
inc
scas
lret
mov
mov
shlb
mov
push
xchg
bound
pop
fwait
xor
imul
daa
cmpsl
aas
call
shll
lea
pop
mov
add
mov
xchg
push
mov
jb
cmpsl
sub
scas
dec
xor
xchg
sarl
pop
nop
clc
and
dec
sti
jmp
push
out
adc
cli
fisttpl
sub
xchg
and
mov
adc
jmp
idiv
sbb
mov
jge
jle
lods
icebp
mov
pop
lret
jnp
mov
and
pop
loope
push
mov
ds
xor
test
negb
push
inc
cmp
pop
gs
aam
fsts
addr16
mov
hlt
ja
mov
shrl
pop
push
mov
pop
lods
and
jae
fs
adc
cmpsl
lret
mov
mov
ljmp
push
or
pop
sub
cmp
xor
push
cld
ss
cmp
mov
ret
je
mov
movsb
adc
out
xchg
icebp
sbb
mov
fdivl
sub
add
xchg
pop
adc
jbe
jl
jne
xchg
lods
daa
mov
frstor
ljmp
movsb
mov
or
ret
xchg
push
pop
xchg
lock
mov
testl
push
sub
notl
jnp
pop
fcoms
stc
pop
mov
inc
jae
sbb
out
cmp
cmp
or
test
mov
xchg
dec
or
popa
int3
sahf
stos
test
lret
call
inc
xor
push
mov
dec
stc
sbbl
jns
inc
pop
iret
xlat
push
or
cmpb
leave
sbb
sbbl
jbe
fidivrl
jle
and
mov
out
cmp
mov
xchg
push
pop
test
mov
aaa
cmc
jo
enter
in
shrb
push
adc
cs
push
arpl
shll
gs
fdivs
call
insb
arpl
cmp
aam
jbe
fsubrl
sbb
jbe
dec
loopne
sbbb
mov
rcll
mov
ficompl
mov
sbb
jbe
aas
fidivs
dec
pop
lcall
inc
test
or
testl
jp
sar
icebp
push
fstl
add
rep
mov
sbb
es
repnz
test
repz
xchg
movsl
lahf
mov
notl
jb
aas
push
adc
ret
test
sahf
ss
or
out
imul
sbb
lds
pop
xchg
fstpl
in
mov
mov
sub
or
dec
cmp
mov
dec
dec
jl
fcoms
je
enter
test
mov
cmp
pop
cld
adc
adc
xlat
scas
loope
push
bound
testl
jp
decl
or
rcrl
or
cwtl
jge
fs
sub
dec
sarl
xchg
pop
mov
xchg
bnd
into
inc
ds
fistps
aaa
sbb
fstl
mov
or
dec
ret
push
scas
fistpll
or
sbb
sub
lcall
and
sbb
ss
out
outsb
or
xchg
and
pop
inc
inc
mov
cmpsl
scas
adc
jno
stos
push
daa
cs
in
dec
fsts
or
movsl
and
cmp
imulb
push
ficoms
test
or
stos
mov
cmp
in
jg
mov
aas
das
cmp
jge
push
xchg
nop
and
sub
jae
jg
and
push
mov
cmc
ror
in
fwait
dec
ljmp
shl
push
sti
lds
inc
ljmp
js
jae
mov
fsts
jae
xor
lods
fidivl
mov
es
jl
push
rol
loopne
push
sbb
sti
out
cmp
out
popa
in
jle
add
sbb
sub
loopne
xchg
outsb
imul
jmp
jno
mov
sahf
ret
in
lods
xor
popa
dec
pop
in
jmp
daa
sub
xchg
mov
insb
out
fcomip
inc
dec
inc
aaa
dec
sub
mov
push
pop
or
cmp
into
push
pop
push
mov
movsl
and
cmc
fisubrl
insb
xor
cli
int3
sarb
out
dec
outsb
sti
and
mov
and
jno
pop
xor
xorl
or
mov
inc
mov
mov
dec
push
mov
mov
adc
and
cmpsb
mov
mov
mov
cmp
xor
movsb
roll
push
mov
out
out
iret
rorb
mov
pop
push
gs
data16
pusha
movsb
mov
jecxz
sub
mov
mov
pop
fmuls
pop
push
movsb
push
sub
insb
scas
iret
push
leave
jb
jnp
cli
jne
push
cli
sbb
jl
fs
leave
lret
pop
sub
cmpsl
jns
les
push
int3
jmp
test
and
in
mov
test
lcall
sbb
push
xchg
cld
xor
into
cmp
ss
jge
push
pop
ja
push
loop
ret
lods
mov
test
outsb
mov
test
rcl
aam
lods
test
enter
iret
lods
mov
scas
imul
xchg
rep
out
stos
adc
hlt
jns
outsb
inc
shr
pop
dec
jns
clc
adc
stc
bound
xchg
inc
sti
adc
push
mov
sbb
and
or
xchg
test
fwait
and
cld
inc
stc
mov
pop
mov
push
dec
inc
gs
push
jnp
push
scas
mov
arpl
sbb
sahf
imull
cltd
insb
rolb
nop
pop
xchg
push
xor
mov
mov
push
inc
push
mov
cli
xchg
or
mov
lock
mov
repnz
mov
inc
mov
in
mov
xor
xorb
dec
xchg
fwait
sub
push
mov
daa
adc
scas
js
dec
aas
xorl
jecxz
and
fcomps
gs
mov
test
push
imul
mov
cmp
sub
jb
and
imul
fisubrl
jns
loop
pop
cmp
mov
push
int
frstor
aam
lea
es
push
mov
sbb
movsl
and
xchg
push
into
and
cli
rcl
dec
cmp
cltd
outsl
lcall
insl
jmp
rorb
clc
jne
lods
jecxz
cmpsb
sahf
inc
xor
sub
mov
lea
aad
and
cmp
pop
lock
sub
jns
rcr
sub
dec
and
and
das
scas
lcall
jecxz
push
push
jnp
jnp
ret
mov
adc
js
cmp
mov
scas
pop
pop
cld
mov
xchg
dec
pop
lods
cmp
js
mov
jl
push
shll
push
mov
mov
icebp
lods
xchg
xor
fldcw
orps
adc
scas
jmp
rcrl
scas
dec
fmul
fnsave
inc
pop
xor
lods
dec
dec
ret
test
add
inc
jl
jae
push
inc
push
lea
ja
mov
in
int3
xchg
push
sub
sub
fsubs
idivb
cmp
push
mov
mov
dec
pop
sub
fwait
cmp
add
push
sub
adc
mov
adc
mov
inc
lea
pop
sbb
push
ficompl
repz
cmpsb
gs
fiaddl
stos
dec
dec
pop
dec
xchg
jecxz
inc
sub
cmp
std
mov
adc
push
cmpl
xchg
out
ja
loop
mov
stos
mov
fwait
test
fmuls
hlt
ret
movsb
ret
mov
jecxz
pop
into
aaa
cld
mov
shrb
jg
sbb
sbb
lret
and
xchg
adc
stos
repz
into
jns
cwtl
adc
or
xor
push
lret
int3
jnp
push
sbb
shlb
push
sbb
push
stc
cmp
rcrb
push
fistps
scas
lcall
mov
scas
xor
rcrb
ror
jbe
push
pushf
push
pop
loopne
mov
cwtl
loop
je
ljmp
sbb
push
xor
xchg
xchg
sbb
mov
xchg
jae
test
and
insl
aaa
cmp
or
push
xor
jle
mov
lret
push
shrb
cmp
lret
test
divl
fistpll
mov
mov
std
dec
arpl
punpcklbw
cld
jle
repz
xchg
adc
cwtl
test
mov
adc
mov
push
sti
pop
sub
mov
jbe
stc
rdpmc
or
dec
push
or
xchg
in
mov
arpl
into
and
sti
clc
decl
push
inc
lods
jl
aaa
push
mov
daa
aad
mov
clc
sub
cmp
sub
mov
hlt
jnp
inc
icebp
in
mov
test
mov
cmp
clc
push
inc
pop
push
dec
mov
sub
push
in
jnp
inc
fxch
gs
movsl
js
js
das
jb
and
loope
push
ret
jb
pushl
sub
pop
out
pop
push
push
xor
cmp
push
gs
push
clc
lret
sbb
mov
inc
and
imul
fwait
std
xor
xchg
or
or
xchg
lcall
mov
xchg
pop
call
or
cwtl
sbb
mov
sbb
pop
daa
and
push
add
sub
mov
xor
lcall
adc
or
adcb
sub
jp
push
adc
sub
fdiv
jae
sub
mov
sbb
adc
arpl
push
leave
and
pushf
xchg
aaa
sub
mov
mov
jb
mov
jo
sbb
jno
loope
in
rolb
add
fcoml
mov
movl
lcall
or
inc
in
sub
push
data16
adcb
push
rcl
icebp
bnd
shll
inc
jl
pop
mov
mov
ja
jge
mov
mov
cmp
mov
xor
dec
aas
in
fnstsw
imul
testl
cmc
aam
push
stos
cmp
addr16
sbbl
add
xor
das
lret
pop
adc
push
das
popa
imul
js
cmc
cmc
test
in
ss
call
pop
xchg
cld
leave
sbb
dec
mov
cmpsb
xor
in
es
adc
shr
scas
repz
stc
gs
rol
jo
mov
lahf
add
int3
out
xchg
push
dec
imul
adc
inc
clc
out
testb
mov
mov
mov
mov
xchg
test
push
out
sti
sti
in
cli
mov
xor
cmp
stc
ja
add
mov
fstl
xchg
inc
jg
out
pop
sub
sbb
pusha
dec
fbld
jg
mov
mov
les
mov
lea
loop
sub
into
sub
sbb
in
sub
xor
out
inc
sbb
xchg
ljmp
xor
dec
mov
ret
jecxz
cwtl
xor
arpl
mov
add
sbb
sbb
jmp
loope
adc
aad
push
pushf
addr16
mov
je
sub
push
scas
pop
loop
dec
pop
push
mov
or
lret
inc
pop
nop
xlat
mov
mov
dec
rep
das
fdivrl
dec
add
jo
mov
pop
mov
stos
push
jmp
xchg
push
scas
stc
stos
stc
dec
test
push
imull
jne
jbe
add
ficompl
xchg
fwait
mov
push
jge
inc
cmp
mov
rcrb
into
fiadds
cmp
inc
test
int
repz
les
adc
lret
mov
jmp
jge
not
jo
in
hlt
mov
and
sub
sub
fsubrl
or
sti
pop
test
inc
pop
mov
das
test
imul
lea
fs
ficoms
xchg
in
or
mov
ja
cmpl
cmpsl
push
stos
out
push
scas
shl
cmp
popa
sbb
movsl
inc
xchg
cwtl
aad
fidivs
jmp
repz
mov
ja
inc
ret
movl
dec
rclb
mov
pop
fs
fimuls
jno
and
fstl
pop
pusha
aaa
stos
clc
jno
cmp
jns
repz
cmpl
xchg
inc
fs
mov
loop
or
or
adc
xlat
cmp
movsb
jp
ret
mov
imul
movsb
xor
xchg
push
stc
lret
pop
or
cli
and
testb
in
push
jbe
ret
lds
je
jg
inc
fidivrs
dec
imul
in
lahf
mov
lret
js
sbb
cmpsb
inc
sub
jg
mov
pop
cld
ds
cmp
push
jmp
fistl
push
pop
push
pop
xchg
fidivrl
mov
loope
jp
insl
lea
pop
jnp
nop
icebp
push
clc
cmc
clc
aas
push
sub
pop
ja
push
jns
jle
jae
pop
push
ds
or
xchg
loope
inc
popa
sbb
cmp
inc
fiadds
inc
xchg
or
mov
les
pop
push
rcll
jmp
sub
xor
mov
jae
notb
mov
iret
sbb
cmp
test
cmpsb
mov
sbb
jmp
sahf
xor
outsb
movsl
jmp
inc
mov
adc
lods
sti
nop
pop
mov
testb
add
jmp
dec
push
lahf
sahf
jne
sub
and
add
sbb
rclb
test
je
daa
cs
stos
mov
mov
jmp
sbb
sub
in
jo
xchg
mov
test
mov
mov
std
or
loopne
ret
ret
int3
jmp
mov
cmp
lods
or
xchg
decl
lds
test
in
inc
mov
inc
loop
int3
mov
cs
cmp
mov
inc
jecxz
adc
xchg
scas
sbb
inc
sbb
fmuls
jne
add
jp
or
adc
shll
andl
inc
mov
push
cmc
repnz
push
int3
int3
push
in
add
mov
dec
xchg
sbbl
movsb
push
or
rol
rorb
and
test
xchg
push
imul
mov
and
sub
sbb
shll
movsl
mov
dec
and
mov
jb
aas
jnp
pushf
loope
fdiv
add
xchg
loop
xchg
sti
cli
add
lds
or
mov
pop
mov
mov
fsubp
xor
pop
loop
in
mov
xchg
aas
dec
imul
in
test
dec
mov
xchg
iret
push
xor
test
or
or
pop
scas
jg
and
inc
sbb
push
pushf
jbe
mov
jbe
cmpsl
sahf
sti
and
insl
mov
xlat
out
and
sbb
es
js
jmp
ss
fndisi(8087
xor
mov
lret
rcll
add
fmul
clc
push
int
insb
arpl
mov
int3
dec
test
sbb
pop
sahf
or
lods
lcall
mov
aad
mov
rorb
jb
iret
sbb
stos
insl
fiadds
scas
mov
xchg
mov
mov
outsl
lret
or
mov
loope
push
lcall
daa
cmp
aam
cld
je
enter
jns
jge
aaa
clc
pop
fdivrs
sub
pop
subb
aad
cs
inc
rcpps
mov
or
es
cwtl
sbb
jb
pop
int3
mov
icebp
shlb
fs
loop
dec
xchg
dec
jg
cmp
xchg
sbb
fidivrs
loop
cmpsl
hlt
fnstsw
pop
pusha
in
jb
into
les
mov
aad
je
andl
mov
jne
jne
xchg
sti
xchg
ret
cmc
xor
sbb
cmp
rolb
sbbb
std
aas
into
loop
xlat
pop
mov
pusha
push
push
jno
ja
rcrl
push
sbb
repnz
adc
mov
ja
aaa
push
loop
sub
mov
mul
jle
xchg
inc
mov
mov
inc
adc
andb
mov
addr16
sub
fisubrl
pop
in
mov
sbb
and
bound
mov
in
cmp
add
inc
push
insl
lock
fsubl
jno
mov
pop
loop
push
test
popa
xor
sti
loop
sarl
push
inc
jb
jns
in
adc
shrb
mov
xorb
add
in
push
jo
mov
hlt
nopl
xor
pop
idivl
das
leave
fcoms
cmp
out
andl
mov
test
cmpsb
arpl
or
adc
orb
xchg
addl
into
xor
scas
inc
dec
jne
cmp
push
movzwl
inc
cmpsl
sub
or
data16
outsl
mov
test
lahf
inc
mov
mov
ret
lds
jle
movl
sbb
scas
daa
dec
sbb
dec
pop
and
push
in
jg
sub
iret
xor
ficomps
push
repnz
fs
adc
arpl
jne
scas
pminsw
mov
je
aad
jecxz
into
xor
sbb
pop
xchg
jno
hlt
sub
addr16
add
pop
clc
sub
inc
cmpsb
ja
bound
or
xchg
mov
inc
add
add
push
leave
sbb
jnp
or
mov
xor
push
mov
push
aas
cmp
les
pop
scas
jne
add
dec
adc
cmpsl
inc
aas
jecxz
xor
inc
repz
xor
xor
and
fxch
dec
imul
and
dec
scas
data16
xor
push
add
add
repz
loop
xor
jae
cmp
sub
mov
dec
scas
mov
scas
je
push
repnz
mov
sub
mov
adc
and
push
insl
sub
imulb
test
pop
rol
adc
mov
or
in
inc
mov
push
inc
pop
cmp
xor
ljmp
jb
lcall
and
aad
repz
mov
aam
loopne
jo
leave
push
fnstenv
ret
scas
sbb
int3
and
es
sub
and
add
mov
pop
jmp
pusha
add
pop
fldl
and
add
push
out
imul
inc
cmp
ds
sti
mov
ficompl
mov
jmp
lods
pop
lock
adc
inc
rorb
push
push
push
orb
lret
pop
cmp
ficompl
jno
xchg
sbb
mov
int
xchg
add
sub
fcomi
out
xchg
shr
adc
xor
mov
mov
xchg
jmp
or
cmp
mov
adc
lcall
arpl
and
xchg
cltd
nop
in
test
fnstenv
outsb
inc
sbb
loopne
xor
or
or
outsb
xchg
into
sarl
in
lret
cmp
scas
mov
fdivrs
cmp
and
pop
ja
xchg
pop
xor
fnstcw
into
jmp
mov
mov
push
pop
iret
adc
xchg
lods
ret
push
pop
inc
out
xchg
add
xchg
into
pop
out
push
int
xchg
sub
pop
test
enter
ss
imul
cltd
sbb
in
or
std
sbb
js
jge
dec
jmp
dec
mov
imul
lea
popa
jle
int3
lds
push
push
int3
xchg
or
cmc
or
sbb
ss
push
dec
add
pop
inc
jmp
clc
dec
cmp
xor
xor
outsb
or
dec
mov
scas
es
iret
inc
mov
in
cwtl
ljmp
push
jl
cmp
inc
les
mov
mov
mov
outsl
cmp
inc
adc
pop
jl
mov
ret
scas
ds
gs
lcall
adc
nop
inc
and
jecxz
sahf
ror
and
jmp
sbb
das
pop
mov
push
fs
ffree
xrelease
mov
and
sbb
add
pop
dec
out
imul
call
out
enter
cld
or
mov
lods
push
sub
aaa
pop
push
push
xor
pop
cwtl
sbb
cmc
jo
adc
dec
xor
mov
ror
cs
das
push
xor
pop
sahf
adc
inc
lock
clc
in
leave
add
sbb
jb
sub
xchg
xor
mov
call
mov
les
jno
or
cli
mov
shrb
or
push
push
cmpsb
xchg
jo
lock
adc
mov
xor
adcl
pop
rcll
pop
cmp
push
xchg
mov
iret
fs
jns
mov
pop
jp
dec
push
in
inc
sbb
jnp
sub
cmpsb
or
add
filds
iret
outsl
popl
pop
enter
out
jb
fiaddl
jmp
repz
movsl
call
jecxz
addl
xchg
inc
into
std
aaa
or
pop
bound
sub
mov
je
push
inc
shrl
push
xchg
daa
mov
ljmp
sub
movsl
pop
mov
push
enter
lret
sbb
adc
mul
dec
mov
mov
lock
sahf
add
in
lods
insb
lea
ret
dec
lret
xchg
push
iret
or
xchg
and
mov
dec
dec
shlb
ss
dec
sbb
mov
rol
iret
or
or
cmp
cmp
dec
aad
cltd
test
sarb
xor
and
xchg
pop
adc
mov
daa
insb
aam
sub
les
or
aam
aaa
dec
xchg
das
dec
daa
or
stos
scas
mov
or
push
or
hlt
pop
or
dec
inc
mov
in
hlt
ljmp
adc
pop
je
mov
mov
out
fisubl
dec
mov
scas
mov
mov
inc
scas
or
js
aad
cmp
ret
daa
popf
lret
aad
sub
sub
dec
adcl
pop
push
lock
lods
mov
icebp
icebp
xchg
out
dec
dec
fisttps
mov
fildll
out
pop
jo
xor
xor
jl
scas
loop
mov
or
or
pop
movsb
imull
out
ja
pop
gs
lock
inc
pop
xlat
push
inc
xchg
sub
pop
out
faddl
mov
push
mov
movsl
shlb
mov
sub
aam
push
dec
cmp
add
xor
pop
dec
fcoml
shld
xchg
nop
xor
or
mov
leave
test
test
mov
test
xchg
inc
lds
mov
insb
dec
fbld
push
mov
hlt
movsb
mov
xchg
push
jnp
in
sbb
inc
mov
imul
xchg
inc
inc
aam
out
es
cmp
mov
push
outsb
stos
lds
lods
jg
roll
or
dec
inc
das
xchg
out
mov
arpl
pop
fiaddl
cmp
mov
fs
movsb
fisubrl
nop
xor
icebp
imul
dec
mov
vmovntdq
lds
add
inc
adcl
stc
bound
push
lahf
stos
test
in
adc
fcomps
jl
and
stos
cmp
pop
lcall
nop
stos
xor
dec
clc
imul
cltd
mov
lret
popa
loope
int
adc
xchg
sti
inc
dec
xchg
les
data16
or
add
inc
adc
cmp
aam
add
push
cmp
in
xchg
fbld
mov
jb
push
sub
xchg
pop
scas
adc
in
xchg
sbb
or
mov
jo
rcll
mov
push
mov
sbb
xchg
test
mov
hlt
adc
push
rcrl
movntq
push
adc
push
sub
lds
or
and
xor
xor
sub
lret
cld
xchg
xchg
adc
loopne
std
pop
cmp
mov
sub
jmp
jg
inc
loopne
or
clc
cld
add
popa
push
test
scas
dec
mov
adc
push
es
dec
push
inc
test
add
loopne
mov
push
sub
outsb
jge
es
mov
dec
fs
out
movsb
push
dec
std
filds
xchg
xchg
js
dec
into
push
cmpsl
or
dec
mov
jne
loope
add
test
mov
add
and
cmp
mov
xchg
out
loope
repnz
dec
xor
mov
daa
jg
pop
push
dec
sarb
arpl
aad
les
repnz
pushf
cmpsl
pop
pop
iret
sbb
fsubrp
adc
lahf
xor
in
out
repz
lock
push
lea
xor
adc
push
mov
xlat
out
adc
in
test
and
adc
cmp
or
dec
loope
ficompl
pop
add
mov
les
imul
sti
dec
and
and
mov
and
js
scas
xchg
mov
ljmp
xchg
stos
mov
mov
mov
push
mov
aam
adc
subl
push
jmp
inc
push
sub
xchg
outsl
adc
mov
addr16
mov
add
mov
rolb
adc
inc
pusha
imul
loope
push
mov
xchg
mov
xor
jb
dec
gs
loope
in
popf
aaa
or
aam
push
dec
mov
or
dec
ss
push
mov
cmp
inc
mov
movsb
push
xchg
enter
jb
jbe
lods
out
iret
loopne
mov
test
mov
dec
in
sbbb
out
fs
aam
scas
inc
out
mov
push
xor
in
rorl
mov
cmp
push
adc
push
pop
bound
stos
mov
in
scas
pop
or
xor
adc
pusha
shll
push
ljmp
pop
icebp
sti
daa
jp
enter
cmp
push
cmpsb
push
cmp
mov
ds
das
adc
leave
cmp
dec
fsts
les
outsb
sbb
incl
ret
push
fs
pop
add
cmp
or
xchg
les
popa
or
xor
xchg
mov
add
inc
mov
frstor
xchg
fnstsw
jle
loope
loop
js
icebp
mov
sub
stc
fisttpl
out
rcll
push
in
andb
pusha
push
add
outsb
pop
in
add
jle
negb
dec
in
xor
scas
in
insb
mov
sbb
hlt
dec
ret
out
jo
lea
or
icebp
mov
cmc
data16
xchg
xchg
rcrb
dec
fwait
mov
xor
test
andl
cmp
cmp
xchg
addl
xchg
and
lahf
addr16
inc
xor
push
in
pop
dec
pop
mov
push
sub
mov
ja
xor
adc
int
lods
inc
les
das
js
clc
cwtl
test
add
pop
mov
cmp
test
mov
aas
sub
inc
cmpsl
outsb
push
test
push
gs
inc
int
push
arpl
int
in
jg
outsb
cli
adc
add
and
add
mov
inc
mov
xchg
nop
push
add
iret
pop
rcrb
insl
mov
and
and
sbb
xor
sbb
cli
ret
cmp
mov
sbb
xchg
cmp
dec
push
test
aam
out
push
scas
dec
sbb
mov
push
inc
dec
rcrl
pop
push
int
lds
pop
addr16
aas
test
and
add
mov
fmuls
and
and
xchg
loope
fisubl
xchg
pushf
mov
mov
push
icebp
add
std
xchg
inc
rolb
sub
aam
sub
xor
shlb
jb
xor
shll
lcall
adc
repz
jae
fstpl
lods
jle
jno
hlt
xchg
adc
ljmp
or
pop
sbb
and
sbb
jno
lea
lock
inc
fisttps
dec
push
hlt
movsb
das
out
xor
pop
faddl
out
and
adc
and
jns
mov
mov
cwtl
jmp
add
inc
mov
in
lea
aad
pop
dec
inc
or
test
lea
mov
jbe
mov
pop
jge
cmp
out
rcrl
mov
sahf
add
negb
push
rol
ficoml
xchg
in
es
xlat
fwait
mov
fwait
testb
push
aad
xchg
mov
xor
not
sbb
lods
imulb
mov
arpl
test
outsb
loop
cmp
dec
push
mov
ja
insl
pop
in
loop
inc
add
leave
daa
movsb
pop
cmp
mov
sub
std
sbb
xchg
iret
cmp
dec
dec
lahf
das
dec
test
into
jle
iret
lds
and
push
divb
loope
jl
xor
repz
dec
mov
add
xchg
dec
adc
adc
out
sbb
push
add
adc
or
mov
sub
inc
sbb
cmpsb
aad
mov
sub
sti
mov
shrb
fildl
loope
rolb
mov
test
fcmovnbe
movsl
add
mov
pop
test
inc
lahf
cli
sub
iret
mov
shl
xchg
inc
scas
cmp
clc
in
push
and
add
push
enter
and
mov
imul
addl
or
jne
mov
ret
jle
or
mov
sahf
inc
cmpsb
adc
cld
xchg
push
inc
lcall
mov
repnz
inc
sarl
sahf
xchg
mov
out
roll
dec
jmp
mov
xor
sub
push
retw
xchg
jge
pop
xor
push
popa
repnz
push
jp
push
jecxz
insl
test
jl
popa
fucomp
aam
or
icebp
repz
insl
mov
sbb
xor
mov
lahf
mov
sub
popf
sub
stc
scas
jl
or
mov
call
aas
aaa
aaa
mov
outsb
in
sub
outsb
jl
fmulp
bound
ret
imul
or
cltd
lds
dec
pcmpeqb
push
add
pop
fisttps
mov
jecxz
mov
ds
pop
lock
fnstenv
mov
pop
push
inc
xchg
inc
lahf
sahf
daa
mov
mov
mov
mov
decl
jnp
imul
jno
xchg
out
daa
and
adc
adc
idivb
out
push
push
bound
aad
cld
in
imull
xor
lret
out
hlt
lock
mov
imul
sbb
fsubs
or
jnp,pn
adc
jmp
bound
or
add
pop
add
pop
cmpl
fs
adc
sub
clc
call
jbe
call
out
testl
js
push
loop
rolb
pushf
dec
dec
sub
pop
pushf
repnz
mov
daa
aam
lcall
xchg
xchg
divl
jo
and
out
clc
inc
rcrl
bnd
mov
jmp
xlat
repz
and
cli
mov
ljmp
shrb
sub
shrl
or
cmpsl
adc
pop
into
jne
jp
fbld
pop
cmp
fcomps
jge
push
pop
shlb
je
arpl
loopne
pop
xchg
pop
outsl
pop
inc
xchg
jne
jp
inc
mov
pop
fidivrl
jno
sbb
ficoms
pusha
xchg
insl
movsb
push
mov
scas
iret
sahf
cmpsb
sub
pop
pop
jbe
stos
outsb
add
lret
decl
aaa
test
add
das
scas
xor
mov
mov
xlat
xlat
lds
aad
repnz
push
aaa
mov
fs
xor
xorl
lcall
inc
push
imul
es
cmpsl
pop
addr16
lds
sub
shrl
sti
fwait
lahf
cli
dec
fs
pop
mov
out
adcl
out
loopne
cmpsl
fdivs
push
dec
repz
mov
lods
shlb
icebp
adc
push
sbb
pop
sbb
and
movb
jle
xchg
sub
decb
fstl
in
inc
push
aas
lret
in
jns
push
in
jge
inc
fs
sti
push
adc
fst
aaa
es
aam
xor
ret
enter
dec
insl
mov
fiadds
cmp
mov
cltd
lcall
sarb
jge
pop
and
push
dec
loopne
pop
testb
jecxz
hlt
aam
cmpsl
mov
pop
mov
daa
push
push
pop
mov
ret
test
lods
insl
scas
lret
std
xlat
fidivrs
mov
scas
pop
cmp
fldcw
push
xor
sbb
ja
insb
push
xchg
inc
sbb
movsb
lods
test
test
shlb
dec
aad
insl
xchg
call
mov
cmp
fs
jb
fidivrs
lock
int3
aam
mov
sbbl
hlt
or
imulb
pop
std
movb
pop
ljmp
mov
adc
imul
xor
mov
add
jp
push
and
mov
insb
sbb
cs
call
xchg
or
xchg
mov
pop
insb
adc
mov
sub
cld
adc
adc
inc
dec
fdivr
jl
mov
or
or
xorl
push
push
jl
sahf
addr16
clc
xor
add
mov
sub
lret
adc
pop
mov
not
jae
pop
xchg
pop
xor
sub
int3
lret
pop
call
push
lods
inc
cmp
jne
outsl
cmpsb
or
or
xlat
in
cmp
mov
cmp
insb
out
or
aaa
mov
push
sub
ss
or
bswap
lock
dec
ljmp
cltd
xorl
sbb
in
frstor
jno
jnp
xor
adc
xlat
adc
push
cmp
inc
cmp
sbb
xchg
div
jno
mulb
lcall
adc
call
clc
out
mov
ja
lret
sub
mov
cmp
xor
sbb
push
jne
mov
mov
rcr
push
jnp
push
inc
cmp
out
add
mov
mov
mov
cli
sbb
int3
inc
inc
xor
insb
daa
out
or
out
repnz
lods
movsl
insl
sub
into
das
movsb
mov
pop
movsl
out
inc
xor
movsl
pusha
mov
adc
mov
inc
sbb
repz
aad
cli
add
mov
addr16
or
divb
jns
inc
test
cmpsb
and
pop
shlb
push
fs
sub
jp
stc
shll
sbb
rorl
mov
lods
imul
xchg
push
cmp
lock
ffree
push
je
outsl
orb
mov
out
push
fadds
dec
test
rcr
aam
mov
into
callw
nop
ds
fwait
test
stos
pop
lahf
sub
mov
push
add
call
int
xchg
stos
jmp
dec
mov
mov
lods
xchg
insl
fidivl
test
push
cmp
mov
inc
rolb
lret
sbb
push
push
sub
repz
sahf
dec
aad
xchg
mov
inc
jo
shrb
setbe
sbb
inc
push
lea
cmp
mov
pop
adc
fs
out
mov
test
icebp
inc
or
shl
or
fwait
insl
lods
cld
pop
adc
inc
pop
in
fucomi
loopne
sahf
dec
sti
mov
pop
cmpsb
jo
mov
and
sbb
dec
jns
je
aam
gs
fistl
jp
inc
mov
loop
pop
pop
jecxz
mov
mov
mov
ret
jp
cli
fiadds
mov
adc
enter
aas
adc
lods
xchg
mov
sbb
cwtl
lcall
sbb
pusha
shlb
fs
push
pop
xchg
lods
mov
call
and
sbb
jge
dec
inc
in
loope
pop
sbb
mov
addr16
stos
dec
jne
mov
push
mov
jbe
sbb
imul
loop
sbbb
fsubs
leavew
popf
mov
pop
pop
das
fwait
push
loop
popf
sbb
icebp
arpl
loop
cmpsb
sub
mov
in
rcl
insb
lods
jg
or
inc
mov
das
fldt
lock
inc
mov
add
testl
push
mov
testl
popa
pop
sub
push
xor
sbb
popf
cmp
jnp
into
cmp
insl
fcomps
fstpt
xchg
dec
adc
scas
xchg
das
mov
xor
adc
sub
lea
nop
xorl
xor
or
iret
jle
orl
sub
dec
push
popf
ja
loop
jae
sar
dec
cwtd
mov
push
js
push
mov
insb
cwtl
std
add
fcom
jge
adc
mov
in
divb
fucomi
jecxz
sub
mov
push
lods
cmp
out
xchg
and
inc
aam
movb
or
or
icebp
cmp
lods
cmc
mov
adc
das
popf
mov
or
lahf
sete
xchg
jecxz
mov
mov
mov
add
adc
dec
decl
adc
jae
ficoml
add
fidivrs
or
int3
ljmp
sbb
push
dec
jb
aaa
iret
stc
pop
fbld
push
insb
lcall
in
cmp
scas
test
mov
inc
fstl
inc
mov
xchg
mov
dec
xor
stos
pop
aam
incb
xchg
push
loope
cmp
pop
sarb
aad
pop
imulb
pop
jmp
xor
test
out
scas
mov
push
xor
lret
scas
cmp
test
push
xor
ret
inc
cmp
add
les
imul
dec
pushf
insb
mov
jge
or
mov
adc
mov
cmp
xchg
push
jmp
sbb
movsl
or
sub
push
aad
jl
cmpl
rclb
bound
jecxz
mov
sub
lock
dec
cmp
mov
gs
push
cmovl
repz
repnz
std
lret
sbb
std
cmp
inc
dec
mov
incl
flds
jne
dec
xchg
mov
movsb
mov
mov
mov
sbb
clc
dec
xor
mov
xchg
mov
pop
push
pop
lods
pop
dec
pop
es
imul
xor
out
mov
add
jge
test
pop
sub
imul
pop
aaa
push
xor
ja
push
mov
dec
mov
dec
sbb
push
dec
xor
loopne
fs
mov
ss
mov
mov
dec
cmp
sahf
cs
test
repnz
xor
xchg
or
into
jecxz
mov
outsb
dec
lret
pop
push
mov
push
fisttps
jnp
lds
lds
adc
mov
pop
pop
es
jmp
push
movsb
jns
lret
fidivrl
insb
lods
aaa
mov
fsub
dec
and
dec
out
in
loopne
adc
aas
jb
jg
xor
inc
fldenv
cmp
push
mov
add
add
xchg
add
add
add
add
add
mov
add
add
add
add
inc
push
add
outsl
outsb
gs
dec
outsl
outsb
gs
add
add
outsl
outsb
gs
add
add
xor
gs
add
add
add
xor
xor
add
cmp
outsl
outsb
gs
dec
outsl
outsb
gs
add
add
add
and
add
add
call
add
adc
add
add
sub
add
add
push
inc
xor
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
insb
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jno
mov
call
sub
pop
shlb
int3
adc
add
adcb
test
adc
add
jns
jmp
push
xlat
les
add
add
pop
jge
xor
sbb
pushf
pop
jns
or
dec
push
or
pop
sub
push
mov
pop
push
mov
popl
ja
call
lahf
in
mov
mov
test
xor
imul
or
movb
fstps
pop
sub
movzwl
sub
jne
jmp
push
mov
pop
lods
jne
jnp
mov
jmp
mov
scas
dec
fsub
mov
inc
je
adc
adc
sub
pusha
imul
add
or
test
mov
movsb
adc
xchg
adc
xor
out
mov
cmp
mov
test
add
repz
pmullw
push
inc
in
jl
push
cmpsl
cmp
scas
adc
imul
das
daa
lock
ret
adc
push
out
rclb
test
push
xchg
pop
add
popa
push
jl
hlt
pop
test
pusha
xlat
adc
mov
jl
fsubrl
imul
out
fbstp
mov
pushf
cmp
lods
jmp
dec
sbb
out
inc
inc
incl
xor
sbb
dec
testl
enter
push
gs
inc
mov
adc
fistpll
and
in
fldl
sub
test
inc
mov
sbb
fsubrs
xchg
jne
lret
pop
pop
cmpsl
out
lret
and
cmp
mov
sbb
pushf
into
sbb
out
inc
and
inc
test
out
mov
in
mov
ficoms
inc
mov
pop
or
jo
jecxz
inc
rcrb
aaa
sbb
dec
jnp
mov
add
xor
dec
inc
leave
bswap
or
sbbb
pop
and
jmp
cmpl
xchg
add
das
fldt
jae
clc
lret
lahf
mov
push
push
pop
addl
push
imul
push
imul
fwait
dec
mov
add
iret
ja
push
mov
leave
lret
inc
shlb
shll
lods
rolb
orb
rcrb
shll
xchg
stos
mov
xor
popa
mov
inc
movsl
ds
rorb
xchg
hlt
mov
jne
sbb
in
pop
loop
ret
inc
rcrb
enter
mov
pop
mov
sub
sub
dec
xchg
mov
repnz
in
push
pop
stos
xchg
mov
sub
xor
mov
popf
mov
pop
cmc
pop
fs
dec
aas
and
sub
mov
jmp
xor
pusha
push
out
outsb
and
mov
jmp
cmp
sbb
dec
mov
add
shrl
pop
pop
or
mov
lods
sbb
inc
insl
mov
adc
sub
jmp
cmp
stc
arpl
and
das
out
and
das
cli
adc
stos
pop
gs
add
sub
mov
or
imul
fs
in
lds
push
test
dec
incb
mov
xchg
push
test
rolb
clc
inc
xor
addr16
test
insl
and
xchg
push
test
shlb
stc
arpl
stc
arpl
and
daa
cmp
inc
mov
push
test
sbb
dec
movsl
movsl
aam
xor
mov
stc
arpl
or
adcl
iret
shll
or
stc
or
push
test
loope
stc
arpl
stos
clc
add
stc
arpl
inc
in
push
test
leave
push
stc
arpl
test
push
pop
mov
arpl
mov
arpl
pop
xchg
push
test
fs
rol
push
test
adc
stc
arpl
inc
jmp
xor
lods
stc
in
lret
push
pop
sbb
inc
jmp
gs
inc
popa
xchg
push
test
and
dec
test
out
adc
sub
xchg
xor
test
jmp
push
gs
dec
out
gs
test
call
aam
xor
outsb
mov
lods
cmpsb
shlb
addl
nop
aam
std
inc
in
push
test
out
idivl
gs
push
xor
test
adc
mov
arpl
mov
adc
hlt
pop
in
dec
pop
gs
outsl
insb
insb
xor
xor
dec
mov
out
movl
mov
and
test
jg
fisubl
lods
mov
test
fs
test
stc
arpl
stc
arpl
xor
xor
cwtl
dec
gs
inc
add
xchg
or
pop
push
jbe
insl
cmp
push
imul
cmpsl
xchg
dec
pop
pop
push
jbe
test
arpl
push
imul
xor
xlat
jne
lods
xlat
xlat
ret
push
mov
xchg
dec
pop
pop
push
jbe
dec
movsl
aam
adc
pop
pusha
or
shlb
lock
push
test
xlat
xlat
ret
push
mov
xchg
dec
pop
pop
push
jbe
jl
add
pop
push
gs
test
xlat
xlat
ret
push
mov
xchg
dec
pop
pop
push
jbe
jl
ss
lock
or
pop
add
arpl
test
stos
push
std
push
das
gs
test
gs
stos
out
jbe
inc
xlat
jne
lods
xlat
xlat
ret
push
mov
stc
call
shrd
cmp
mull
or
pop
sar
push
inc
icebp
jecxz
mov
movsl
adcb
lock
pop
push
push
in
movsl
test
insl
xchg
add
xchg
xor
sbb
push
add
test
dec
shr
fsubrp
dec
push
and
push
test
push
push
cltd
stc
xchg
push
test
arpl
lods
stc
fs
and
aas
jp
xor
cmp
test
out
rcrb
adc
lods
pop
int3
outsb
loop
test
pop
gs
sub
test
cmp
test
stc
arpl
int
and
in
add
cmp
das
movsb
mov
sbb
stc
arpl
int
and
ss
pop
push
test
movsb
std
lahf
pop
mov
jo
sahf
test
test
pop
fs
pop
in
push
mov
mov
movsl
aam
cmpsl
aad
icebp
out
aad
jbe
jmp
inc
movsb
dec
scas
jnp
pop
mov
pop
jo
cltd
mov
jmp
lds
fnstcw
test
stc
arpl
stc
arpl
stc
arpl
stc
arpl
stc
arpl
stc
arpl
sub
push
std
push
push
test
outsb
push
test
arpl
stc
arpl
stc
arpl
stc
arpl
stc
arpl
jns
push
test
arpl
stc
arpl
stc
arpl
stc
arpl
sbb
sbb
jae
mov
test
xor
dec
rcrl
cwtl
jae
pushw
sbb
iret
jge
fcoms
enter
out
aas
push
insl
cmp
push
testb
popl
cs
push
xor
mov
in
jnp
fiadds
repz
repz
out
repz
bound
dec
insl
push
clc
mov
add
dec
fcmovb
cltd
xor
rolb
push
dec
and
xor
std
jge
pop
mov
mov
movhps
popa
cmp
data16
and
rcl
mov
lock
push
in
mov
mov
sub
cld
sub
jecxz
pop
lret
fnstsw
jo,pn
mov
cmpsl
xor
and
mov
jl
cld
mov
clc
enter
sbb
lret
mov
js
push
sub
jg
cli
js
nop
pop
je
call
or
insb
int
cmp
std
leave
dec
jae
push
inc
inc
in
out
push
xchg
jns
clc
mov
mov
in
movsb
push
mov
sub
movsb
jp
in
jo
add
add
xchg
ja
call
ss
dec
add
fistl
pop
fdivl
xchg
push
jmp
pop
dec
fadd
dec
imul
lods
mov
cmp
mov
fsts
push
rcl
fs
enter
add
mov
mov
fistpl
sbb
lods
stos
icebp
mov
test
push
ja
dec
sub
cmp
jle
jo
sti
fbld
pop
xchg
cmp
jecxz
imul
fstpl
sub
div
xchg
lahf
out
imul
mov
jnp
dec
xor
repz
add
xchg
push
test
sbb
push
cs
into
les
xchg
fcoml
jmp
out
iret
sti
sti
adc
xchg
adc
sub
test
lods
push
xchg
rcrb
imulb
notl
xchg
repnz
jl
mov
xchg
pop
imul
fstps
cltd
mov
imul
lods
stc
and
lret
xchg
cmpsl
cli
xchg
xchg
mov
imul
and
andb
sub
cli
daa
std
add
test
in
or
push
fisubrl
shll
pop
lret
push
into
xlat
mov
adc
rorb
iret
mov
adc
sbb
mov
inc
popf
or
adc
and
add
add
add
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
or
add
pop
add
or
pop
add
or
pop
add
or
pop
add
or
pop
add
or
pop
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
pop
add
add
add
or
add
fisttps
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
icebp
add
add
add
add
aas
xchg
add
cmp
mov
hlt
sbb
jbe
inc
sub
lock
cmp
cltd
inc
leave
lret
dec
mov
cmp
iret
push
aaa
fnstsw
dec
into
lea
mov
ret
fidivrs
mov
shll
in
dec
imul
je
hlt
sub
fcomps
shl
mov
inc
mov
xchg
pop
dec
or
cmp
or
fmuls
pop
stc
push
or
dec
jge
imul
jle
inc
adc
push
mov
icebp
mov
inc
dec
test
mov
mov
and
add
jmp
push
dec
out
xor
mov
mov
cmpsb
fstpt
sbb
or
mov
fcoms
adc
test
test
pop
lahf
xor
scas
in
lods
mov
test
add
sbb
xchg
add
xor
sti
jl
test
dec
xchg
jp
jne
xor
cmpsb
mov
xor
es
jl
xor
mov
loop
xchg
nop
pop
ds
movsb
ss
int
xchg
pop
ret
jno
push
fistpl
into
ror
pop
add
xlat
outsb
mov
arpl
mulb
sbb
inc
jae
inc
jl
mov
in
inc
xchg
pop
xchg
mov
dec
repnz
lods
xchg
and
das
push
shll
dec
sarl
and
sbb
adc
ss
shll
inc
or
dec
cmpsb
fadds
out
in
pop
test
leave
jnp
int
mul
mov
stos
push
pop
jae
fstpt
jo
adc
imul
push
lret
fimuls
mov
lret
push
and
xlat
negb
mov
std
mov
sub
adc
fidivrs
mov
cmp
pushf
xor
stos
or
sbb
push
lea
test
bts
mov
sbb
jae
ja
and
lret
lahf
jno
cmc
push
pop
repz
rcr
lea
dec
jo
les
mov
sbb
ret
faddl
and
jl
mov
fmuls
in
or
jl
jle
rcl
jge
push
xchg
lret
je
cmpsb
xchg
sarl
movsl
lds
mov
add
test
jl
mov
or
inc
or
test
adc
out
repnz
leave
clc
lea
jl
xchg
xchg
pop
cmp
repnz
in
cli
lcall
jo
stos
push
push
out
xchg
mov
fwait
mov
js
add
mov
sti
inc
inc
and
xlat
shlb
lock
outsl
in
movsb
ljmp
lret
or
loopne
cmp
add
cmpl
lock
jl
filds
popf
inc
loope
lret
push
fsubp
and
adc
ja
fistpll
into
test
xor
popa
outsl
and
pop
dec
inc
ja
shll
or
push
fdivs
pushf
pop
and
pop
std
rcl
mov
jecxz
sub
cld
bnd
mov
out
mov
sbb
mov
rcl
mov
and
dec
sub
test
mov
mov
cwtl
stos
hlt
or
sub
popf
insl
rclb
push
ss
fnstcw
dec
mov
jl
enter
push
cmp
scas
or
dec
nop
cmp
sub
pop
mov
cmp
into
sbb
mov
jnp
jp
std
mov
cmp
push
mov
aad
aad
dec
in
out
shlb
xor
popa
pop
lods
icebp
or
mov
push
add
adc
mov
mov
enter
test
xchg
pushf
mov
mov
shl
dec
aas
mov
shlb
or
cmp
test
xlat
rcrb
sub
xchg
sub
inc
jecxz
adc
mov
into
mov
lret
dec
adc
js
sbb
outsb
sbb
lea
loope
lret
nop
mov
pop
mov
int3
in
inc
and
clc
add
adc
cmp
sub
lret
gs
push
xchg
jnp
fsubrl
xlat
inc
mov
pop
fbld
mov
int3
sbbb
je
sbb
shll
jp
js
cltd
or
pushf
shlb
out
mov
and
adc
in
dec
lret
inc
popf
mov
mov
push
in
gs
add
ds
pusha
data16
pop
xrelease
loopne
stc
je
jle
adc
push
lea
out
xchg
pushf
dec
scas
or
sub
mov
shlb
xor
in
sbb
add
scas
stos
clc
ljmp
and
icebp
pop
mov
nop
aam
adc
loopne
pop
ret
sub
sbb
jmp
pop
jno
adc
and
xchg
mov
push
mov
dec
jno
jmp
mov
mov
fs
scas
fwait
xor
sahf
mov
loope
xchg
pop
andb
int3
outsl
stc
test
test
test
inc
cmp
sbb
inc
ljmp
outsl
sub
test
cmpsl
xchg
sbb
xchg
xor
push
xchg
js
add
cwtl
mov
push
adc
insb
mov
test
jl
mov
jecxz
iret
faddp
repnz
popf
xor
lea
and
sub
dec
stos
inc
test
dec
dec
ret
iret
insb
xchg
xchg
adc
enter
xchg
add
sti
iret
das
jae
addl
xchg
xchg
mov
sub
sti
pop
cwtl
roll
stos
rcrb
and
in
dec
jo
sahf
iret
mov
cli
ss
pop
and
shll
jno
jo
or
mov
sub
aas
mov
cmpsb
cltd
mov
dec
and
jecxz
inc
addr16
xchg
out
rclb
js
mov
ss
or
jne
and
in
xchg
cld
lret
imul
add
pop
les
insb
int
test
add
popf
mov
inc
pop
ds
xchg
jo
mov
and
rclb
ret
mov
mov
loope
sbbl
popa
xchg
jne
mov
stos
or
mov
inc
push
in
push
mov
fsubrl
xchg
mov
add
mov
ss
call
nop
xor
mov
xor
popf
popa
pusha
pusha
xor
movsl
es
mov
das
jle
mov
div
add
mov
pop
add
jmp
test
pop
sub
cmp
lcall
and
leave
push
or
push
mov
and
sti
sar
cmp
mov
jecxz
sti
inc
inc
daa
add
pop
mov
mov
xchg
pop
sahf
dec
or
push
sar
insl
pushf
mov
lds
int
shl
sbb
xchg
pop
loope
shrb
mov
popa
pop
xchg
dec
mov
xor
test
jg
scas
adc
xchg
pop
cltd
test
push
int3
cmp
enter
ds
xchg
aaa
fsts
fucom
jmp
sahf
mov
xchg
repnz
icebp
push
jg
adc
lock
xor
and
mov
dec
fadds
xchg
shll
or
icebp
mov
lcall
sub
push
daa
sub
mov
hlt
xchg
jl
add
into
push
ss
ss
sbb
cmpsl
pop
mov
sbb
incl
frstor
inc
xorl
ja
mov
xor
xor
or
lea
nop
push
jecxz
mov
adc
pop
cld
push
cmc
pop
add
push
je
fldcw
inc
pop
in
sub
mov
mov
push
iret
lret
mov
adc
xorb
add
das
jno
shll
sub
cmp
add
xor
imul
jns
out
xor
cmpsb
nop
jp
imul
push
dec
jae
cmp
mov
mov
add
xor
fdivs
xor
push
pop
aas
clc
rolb
adc
adc
push
lahf
ljmp
pop
jle
mov
mov
pop
jl
mov
add
loope
ljmp
mov
insl
gs
lcall
adc
cmp
lods
ja
ret
iret
aam
adcb
mov
outsb
repnz
push
mull
cli
mov
pop
fdivl
mov
call
decb
fs
ret
sahf
insl
mov
icebp
negb
clc
push
fcmovne
addr16
pop
xor
jle
lcall
and
push
sbb
dec
iret
in
sub
lock
inc
mov
or
nop
sti
xchg
jmp
movsl
mov
fisubrs
cmc
aaa
cwtl
push
dec
orb
pop
test
xchg
imul
jp
or
or
leave
aam
mov
ds
push
sbb
imul
cmc
push
xchg
sbb
xlat
mov
jo
in
and
popa
jno
shll
sarl
dec
popa
xor
mov
inc
pop
jae
fidivl
repz
push
add
add
jmp
lret
cli
xor
or
pop
roll
mov
fdivrs
sbb
jecxz
mov
aaa
mov
out
adc
test
sbbb
mov
inc
add
dec
rorb
or
inc
int
xchg
stos
jmp
cmp
lods
roll
jns
mov
push
pop
jbe
mov
pop
addl
mov
std
out
jecxz
jge
inc
int3
repnz
enter
movsl
jmp
cltd
jmp
sahf
mov
mov
es
add
jmp
in
jecxz
push
add
mov
xchg
push
fsubrs
or
popf
or
fisubrl
add
xor
push
or
push
mov
call
divl
arpl
shlb
insl
adc
and
fcmovb
cmp
test
inc
js
test
pop
addr16
inc
mov
mov
jp
sub
lcall
mov
fdivrp
out
mov
lcall
pop
mov
mov
stos
mov
je
clc
loopne
mov
xchg
xor
xor
mov
cmp
or
and
jl
inc
js
mov
pop
push
and
or
aaa
fbld
push
repnz
lds
push
scas
int3
mulb
xor
and
inc
pop
outsb
jg
jmp
sahf
xor
scas
cwtl
or
pop
add
lods
push
mov
mov
cmpl
adc
jp
push
lock
ljmp
push
ror
mov
sarl
sbb
jl
jns
loopne
je
cmp
add
je
xor
sub
stc
add
pop
clc
mov
lods
jl
pop
sub
loop
jp
data16
ss
mov
popf
xor
aam
inc
lcall
pushf
call
and
fwait
lock
cmp
loopne
jae
or
pusha
adc
dec
lcall
mov
cmp
push
loope
sub
ja
xor
loopne
out
mov
and
rolb
sbb
pop
mov
insb
fcomi
cmp
pop
movsl
pop
scas
cmp
mov
xchg
js
shl
mov
jge
add
inc
push
pop
dec
mov
popl
adcl
cmp
clc
inc
ret
jne
iret
mov
loope
loope
mov
ljmp
add
mov
out
mov
pop
push
push
adc
lahf
pop
imul
add
mov
clc
out
sub
push
push
cmpsb
andb
sbb
jb
iret
lock
insl
lret
addb
dec
hlt
int
mov
imul
xchg
adc
sbb
pop
jecxz
inc
js
shrb
mov
shrl
xchg
jns
xor
sub
mov
push
jle
mov
pop
xor
outsb
pop
rcr
dec
sbb
fidivrs
repnz
lea
repnz
mov
sub
decl
jg
and
scas
sub
adc
cltd
cmp
add
jecxz
pop
inc
ja
aam
idivl
cmpb
subb
lock
push
mov
adc
daa
sub
hlt
iret
pop
xor
cmpsl
sahf
jo
mov
imul
ja
fwait
push
nop
push
and
popf
mov
cmp
fdivl
lret
mov
subl
and
cmp
ds
mov
movsb
mov
mov
enter
add
and
cld
and
adcl
xchg
add
push
frstor
mov
in
sahf
scas
ficompl
mov
xlat
or
shl
adcl
popa
jns
movsb
cmc
jae
add
inc
ss
cmp
jbe
pop
lcall
push
scas
dec
fucomip
ja
jo
setle
mov
pop
jle
and
dec
fucomip
sub
mov
aam
sub
inc
xchg
push
inc
adc
sub
in
xchg
xchg
lret
es
cmp
sahf
enter
shr
loopne
jg
jle
and
mov
imul
or
js
loop
jnp
or
push
and
mov
sbb
xorb
pcmpgtd
push
std
xor
mov
mov
dec
loopne
frstor
jbe
cmpsl
lret
pop
xchg
in
movsl
jmp
inc
cltd
jae
iret
ss
test
daa
pushf
lea
mov
fs
mov
call
cmc
or
cmpsb
pusha
cwtl
in
mov
outsl
xchg
popf
flds
ljmp
jle
addr16
lds
sub
jge
insl
out
cmp
pop
stos
mov
inc
inc
cmc
dec
out
outsb
mov
sub
adc
push
sbb
out
movsl
push
lods
push
push
push
shlb
aas
cld
lea
cmpsl
fisttps
xchg
test
mov
inc
into
es
mov
push
mov
test
mov
push
or
nop
int
mov
outsl
movsl
mov
and
clc
test
and
xor
xor
pop
pop
sti
cmc
ret
sbb
dec
dec
and
and
sub
xor
sbb
jne
es
mov
sbb
mov
jo
mov
cmp
cmc
insb
clc
adc
xchg
out
or
mov
jl
test
in
mov
sti
mov
sahf
mull
or
inc
icebp
sbb
comiss
pop
push
aas
std
jge
ljmp
test
iret
dec
test
clc
xchg
fldcw
gs
mov
lret
pop
int
pop
loopne
mov
fldt
inc
push
sbb
mov
dec
xor
jo
sub
fistpl
add
and
test
jecxz
cltd
cld
call
lods
pop
out
mov
push
jecxz
imul
and
and
adc
popf
mov
xor
and
lret
dec
lret
jle
add
mov
iret
inc
hlt
jb
jbe
negl
sub
jmp
pusha
repz
fdivs
and
cmp
lret
cmc
push
xor
jecxz
arpl
push
rclb
mov
lods
icebp
mov
jnp
into
cmp
fidivs
and
test
aam
and
aas
xor
dec
imul
push
fneni(8087
testb
mov
imul
mov
and
int
mov
dec
adc
paddb
daa
sbb
popa
out
inc
jg
xor
add
pushf
dec
lcall
js
pop
inc
add
ds
adc
into
enter
test
loopne
push
mov
mov
adc
jl
orb
sbb
sbb
shrl
add
jmp
rolb
jnp
mov
push
imul
adc
testb
out
daa
ret
int3
add
int3
dec
and
imul
cwtl
test
push
pop
mov
or
xchg
jge
call
ja
ret
and
test
mov
addb
cld
lock
jae
cmp
mov
movsb
sbbw
cmc
repz
ja
jno
iret
dec
dec
adc
loop
mov
aaa
dec
cmp
clc
sarl
sub
jno
and
in
dec
sub
adc
stos
into
lret
add
bound
pop
cwtl
scas
pop
out
into
cmp
xchg
mov
insl
xor
mov
pop
mov
clc
or
lcall
jmp
adc
mov
mov
std
ret
xchg
mov
cwtl
adc
pop
leave
xchg
shll
mov
cmp
call
jmp
mov
stc
push
push
mov
fcoms
xor
sbb
or
xchg
repz
out
xchg
or
popf
negb
loope
test
jae
lahf
test
jne
lahf
sar
hlt
xchg
xlat
test
iret
lret
cmp
std
mov
jmp
dec
push
lahf
inc
popf
loopne
and
jle
inc
pop
mov
jno
lods
cltd
jnp
je
dec
imul
sbb
pop
jae
notl
jecxz
pop
inc
pop
stc
xchg
lds
jno
adc
inc
mov
or
sar
fstp
or
or
sti
pop
mov
or
sbb
adc
lret
xor
mov
cwtl
jb
cli
push
popf
xchg
and
mov
xchg
bound
je
pop
xor
inc
and
xchg
xchg
fs
pop
mov
or
outsl
pop
lods
or
pmaxub
mov
loope
int
jno
fstpl
xlat
dec
fcomps
pop
je
add
xacquire
fnstenv
jae
nop
clc
gs
gs
std
int3
in
out
cmpsb
cmp
push
mov
lea
push
jl
adc
cmc
jle
pop
xchg
mov
pop
lds
cmp
out
jecxz
loopne,pn
and
movsb
xlat
lret
xchg
sbb
mov
jo
in
cmpsl
jb
rol
adc
lcall
jg
adc
sub
test
pop
lret
negl
inc
daa
fs
fistps
addr16
lea
mov
mov
jg
and
loope
aam
and
mov
je
outsb
xor
cmc
test
adc
dec
ljmp
and
push
jg
push
jns
or
xchg
push
inc
mov
rcl
addb
mov
add
jmp
out
rorl
fsts
aaa
cld
cmp
sub
fwait
popa
daa
aas
lret
add
xor
lock
jno
sahf
lea
stos
in
sub
enter
xor
and
insl
rorl
mov
adc
shr
popa
movsb
in
sub
loopne
test
imul
mov
lcall
stos
mov
sahf
daa
lahf
inc
aad
shrb
adc
lcall
inc
lahf
insl
rolb
movsb
xchg
ds
call
int3
push
int3
aas
add
xchg
mov
inc
ficompl
movsl
pop
xchg
jo
lea
cmp
cmp
inc
lret
xchg
add
sbb
test
push
pop
rcrb
inc
xchg
sbb
lcall
sub
lock
rclb
mov
cmp
inc
add
and
jb
mov
push
mov
lcall
lea
js
and
insb
jmp
lcall
test
enter
xor
mov
clc
mov
mov
leave
inc
inc
sahf
std
push
out
scas
sbb
fstps
fwait
pusha
jne
or
xor
adc
sub
das
mov
repz
push
lret
pop
lret
xchg
rcr
mov
enter
bound
adc
aam
sbb
icebp
add
nop
lods
aaa
gs
xchg
mov
int
xchg
pop
addr16
mov
and
psllw
jno
test
repz
mov
das
popa
dec
adc
ret
jnp,pn
movsb
xchg
loop
pop
sti
popa
cmpl
cld
mov
nop
cltd
mov
adc
in
inc
je
mov
inc
scas
jg
jne
cmp
repz
push
popa
fwait
xor
push
sub
cmp
inc
int
sbb
fsts
ss
mov
push
out
pop
add
loop
stos
stc
sub
icebp
rcl
inc
scas
push
std
jmp
jl
fstl
mov
lret
comiss
cmpsb
inc
gs
sahf
xor
fs
cmpl
fnstenv
add
lods
test
dec
xchg
push
rcll
pop
mov
inc
push
cmp
ficoml
pusha
xchg
mov
push
cmpsb
jb
mov
enter
and
imul
xor
or
leave
lods
or
jp
dec
jb
pop
ds
push
stos
xchg
rep
repnz
sub
jecxz
adc
mov
mov
outsb
or
pop
lret
clc
loope
or
mov
jbe
xchg
andb
fstpt
ret
inc
rol
push
divb
mov
mov
mov
lret
mov
add
ja
mov
cmp
xor
ret
sahf
jp
mov
mov
pop
adc
popa
push
pop
out
lock
adc
sbb
cwtl
in
inc
jg
fdivrp
jmp
and
jge
aam
sbb
and
pop
in
mov
stos
loope
push
shr
cmp
sbb
push
int
lret
sub
pusha
test
push
inc
xor
and
push
push
scas
movsl
inc
mov
rcrl
mov
mov
lret
inc
sub
call
push
fists
into
outsl
mov
or
lock
and
cmp
das
cli
mov
rcr
mov
in
int3
mov
adc
sub
pop
jns
jg
mov
sbb
pop
cmp
push
or
xchg
and
pushf
insb
jmp
push
popf
jns
or
mov
mov
rorl
cwtl
cwtl
mov
sbb
dec
int3
pop
jns
decb
lret
test
cmp
adc
shl
pop
jmp
sbb
stos
push
subl
sbb
int3
mov
inc
shlb
rol
into
pop
push
cltd
js
js
mov
cmp
repnz
test
test
sbb
aaa
ja
negl
insb
add
push
out
std
lea
mov
fs
or
les
ss
fildll
fidivrs
jnp
sub
mov
imul
push
xchg
xlat
data16
pop
int3
cltd
cmp
push
out
xchg
adc
sbb
push
push
ud1
push
ljmp
mov
fstpl
push
fdivr
fiadds
movsl
lds
xchg
divl
psubq
repz
xchg
out
push
shrl
add
cmc
es
mov
cmp
pop
mov
lahf
sub
sbb
rclb
fisubrl
outsl
push
mov
sbb
inc
dec
jns
shlb
xor
push
scas
into
int3
pop
stos
mov
and
adc
adc
mov
imul
in
fisttps
out
in
lea
cmovbe
inc
xchg
cmp
mov
lds
aam
outsl
test
les
mov
out
xchg
mov
mov
mov
adc
and
mov
xor
pushf
aas
ret
adc
imul
das
pop
dec
jo
imul
loopne
pop
stos
out
xchg
mov
add
stos
mov
and
adc
cmp
pushf
shl
fs
inc
jne
out
adc
cld
aad
dec
jnp
std
stc
pop
int3
in
sub
pop
dec
mov
ds
or
cmp
push
ljmp
push
int
test
mov
ds
loop
call
aam
xor
xchg
add
cmp
ljmp
push
mov
dec
and
mov
lea
shlb
push
xor
ret
jo
push
in
inc
in
or
xor
inc
mov
and
sbb
xor
pop
scas
dec
subl
mull
scas
in
dec
ss
je
fwait
movsb
push
cmc
movl
inc
dec
sbb
popl
jmp
sahf
lret
rcrb
push
in
lret
xchg
nop
aaa
in
insl
mov
or
mulb
sub
pop
mov
repnz
or
mov
outsl
add
pushf
push
mov
outsb
xchg
dec
dec
scas
cmp
cmp
or
sub
je
dec
icebp
vphaddubd
jne
lea
movsl
inc
jbe
add
shlb
cs
test
inc
cmp
dec
aam
inc
es
fwait
js
mov
jl
or
mov
loope
out
mov
inc
pop
push
pop
mov
data16
inc
clc
cli
cmpsb
and
and
sti
inc
in
jo
pop
loopne
call
mov
ljmp
std
pop
ds
xchg
outsl
faddl
xchg
insl
data16
sub
push
loopne
lahf
push
test
adc
and
inc
sub
aam
jnp
jo
int
cmpsb
jge
aad
sahf
push
aas
mov
sahf
popa
add
aas
jle
mov
and
adc
cmp
test
xchg
adc
cld
div
jnp
clc
pop
rcll
push
adc
sub
mov
shrl
in
cwtl
lds
sahf
pop
adc
fmuls
out
sahf
xchg
push
inc
fistl
xchg
push
sbb
js
pop
mov
popa
xchg
pop
shll
repnz
dec
lods
fisubl
xlat
dec
out
jecxz
fcompl
test
repnz
add
les
sbb
loop
mov
xchg
cmp
subps
ja
jle
cmp
fstps
insb
mov
fsubp
or
mov
int
mov
fnstsw
add
xchg
lret
pop
inc
and
mov
adc
jae
sbb
inc
movsb
pushf
mov
outsl
lock
popa
mov
in
incl
pop
mov
push
fimuls
mov
mov
cli
cltd
shlb
xor
add
cmpsb
and
xchg
test
roll
xchg
mov
movsb
dec
cltd
faddp
inc
push
mov
mov
jne
sbb
push
xchg
hlt
fmuls
pop
push
lcall
xchg
cwtl
push
sahf
add
bound
and
or
push
jo
adc
mov
leave
lea
and
icebp
cmc
sub
out
stos
mov
out
add
cwtl
or
fs
in
pop
aaa
mov
es
es
cmp
mov
mov
lock
imul
fwait
gs
mov
pop
pop
rclb
jb
inc
inc
lods
lods
mov
outsb
push
jne
arpl
mov
xchg
dec
sbb
mov
mov
sub
std
or
cltd
push
mov
adc
push
xchg
push
in
pop
cmp
ss
mov
cli
enter
jns
or
pop
sub
enter
jp
in
nop
stc
push
xchg
orl
and
adcl
jl
push
out
pop
jno
in
rolb
jge
out
pop
pusha
mov
adc
mov
pop
xor
mov
add
mov
pop
arpl
inc
mov
loop
bound
lret
xor
fstl
imul
sub
std
out
pop
ret
xchg
cmc
sbb
les
lcall
es
xchg
mov
xchg
stos
mov
js
lea
dec
xchg
cmp
stos
in
inc
es
aas
cld
xlat
cmc
dec
or
pusha
jge
pop
push
push
dec
out
xchg
imull
nop
and
mov
mov
or
sbb
cmp
das
ret
xchg
add
jmp
sarl
in
les
aas
sahf
jne
stos
mov
mov
sti
out
jl
subb
imul
pop
inc
js
mov
test
push
or
popf
imul
and
stos
les
and
ljmp
and
xchg
or
adc
sub
pusha
call
enter
mov
lea
or
push
sub
mov
aaa
jmp
adc
test
push
xor
js
aam
lods
pop
shl
and
push
sbb
lcall
fwait
pop
cmp
sub
inc
pop
push
inc
jge
xchg
das
popa
mov
int
mov
xor
iret
mov
call
daa
cmp
sbb
icebp
lods
xor
mov
test
xchg
lods
push
push
movsl
iret
repnz
xchg
dec
dec
pop
aam
scas
inc
cmp
mov
aam
jp
add
icebp
lods
mov
add
ss
cmpsl
mov
jg
and
mov
adc
imul
aas
sbb
shll
lret
mov
cmc
pop
push
loopne,pt
mov
cmpsl
movsb
xor
mov
daa
shlb
cmp
pop
inc
int
paddq
jp
xchg
loop
push
mov
inc
mov
lods
lret
sarb
lock
push
cmc
repz
pusha
aad
inc
add
cs
mov
cmpsl
rcr
or
jb
std
ja
ljmp
xchg
in
int
sub
pusha
adc
adcb
hlt
cmpsb
lods
mov
int
xchg
dec
xor
imull
cmp
sbb
mull
int3
dec
movb
movsl
xchg
out
add
xchg
repnz
jg
mov
cmp
data16
rorb
pop
scas
mov
cld
sar
scas
sub
fdivs
inc
gs
xchg
add
fmull
shlb
shlb
or
push
pop
push
cmp
inc
mov
lahf
sarb
mov
and
dec
sub
mov
fildl
jge
movsb
sahf
stos
xchg
in
fcoms
es
call
popw
fbld
ret
push
leave
jns
lods
adc
pop
dec
jne
lret
jmp
mov
and
jae
push
cld
jge
das
cmp
jecxz
jecxz
push
ljmp
jo
push
sub
push
insb
and
jnp
lret
call
fisubs
mov
addr16
cmp
add
inc
push
pop
sub
mov
in
fidivrs
dec
lcall
or
mov
cld
mov
lds
and
pusha
inc
pop
push
jecxz
jns
cmp
shlb
outsl
inc
cmp
pop
adc
mov
or
xchg
jle
addr16
cmp
fcmovb
push
sbb
outsb
lock
push
sti
mov
fs
xchg
ja
push
xor
jp
out
enter
mov
test
mov
or
rcrl
icebp
push
jp
fidivrs
push
into
lock
inc
ret
or
mov
pop
push
outsl
xor
jae
int3
mov
outsl
xor
ds
imul
lahf
push
movsb
jns
jnp
aas
sbb
dec
add
icebp
fwait
std
mov
pusha
sub
imul
out
ljmp
jae
and
in
sahf
mov
lds
nop
cmpsb
test
mov
addr16
sub
test
jecxz
xor
mov
mov
movsb
xchg
rolb
pop
dec
inc
inc
mov
cltd
xor
call
or
mov
mov
push
and
dec
mov
cmp
in
leave
test
lcall
add
adc
jno
sbb
push
push
outsl
inc
ret
and
inc
jmp
mov
rol
cwtl
jno
lods
movsl
enter
cmpsb
cwtl
cs
pop
jg
push
dec
out
add
lods
ret
aas
mov
cmp
dec
ffree
mov
sub
cs
sub
pop
jp
shrl
inc
popa
cmp
cmp
or
pop
fs
jge
mov
fwait
inc
cmp
adc
pop
and
xchg
dec
pop
or
dec
mov
sub
not
insl
popf
int3
cmp
adc
xchg
jo
scas
inc
out
pusha
mov
repz
jg
scas
daa
pop
add
cld
movsl
cmp
movsl
or
adcl
aas
pusha
ret
xchg
jecxz
fld1
push
adc
ret
sub
imul
fisubrl
mov
lock
mov
mov
xchg
aas
sub
addr16
xchg
xchg
inc
mov
mov
pop
sub
adc
fidivrs
cmpsb
rcr
mov
das
add
lods
cmp
addr16
jl
out
lret
ficomps
mov
push
in
and
push
or
fiaddl
push
mov
test
sbb
cs
jl
adc
fistpll
cmp
jp
fbstp
xor
addr16
adc
fsub
into
or
sarl
pop
cld
fdivr
pushf
stos
ja
test
or
pop
push
out
jo
and
and
pop
orl
xchg
xor
cmp
popf
sbb
or
push
sbb
sub
pop
xchg
aaa
cmp
or
push
and
clc
sub
test
pop
rorl
test
loop
lret
mov
maskmovq
imull
mov
adc
aaa
mov
bound
test
xchg
inc
xchg
xor
insb
inc
mov
xor
outsl
push
xor
cmp
dec
test
inc
cltd
cmp
bnd
dec
lcall
adc
sbb
sub
lods
and
mov
imul
xor
idivl
fcmovnb
mov
jle
fwait
mov
cmc
scas
js
cmc
or
pop
sub
cwtl
movsb
push
push
cwtl
sbb
add
pop
jns
xor
loop
scas
enter
push
or
stos
test
fstps
mov
jb
mov
int3
dec
mov
xchg
in
xor
add
js
movsl
mov
lods
pop
repz
mov
jae
fldt
cmp
mov
mov
push
mov
inc
lds
out
imul
cmpsb
popf
lds
fucom
cli
aad
push
push
cli
in
jl
insb
inc
and
or
lcall
negl
mov
jae
jnp
cli
fs
and
test
sbb
mov
xor
aam
movsl
ret
inc
pop
into
flds
xchg
int
iret
outsl
cmp
sarb
mov
inc
push
jg
jo
lods
cs
add
ds
ret
int3
xor
mov
mov
roll
mov
out
cli
movsl
jge
bound
lahf
mov
xchg
sub
inc
fs
ficomps
ret
mov
aad
jo
cmc
mov
push
bound
dec
cmp
push
sbb
or
xchg
sub
xchg
cmpsl
xor
arpl
push
sub
cli
sub
push
scas
movsl
dec
out
mov
fistps
mov
icebp
mov
ljmp
mov
and
xlat
fldenv
xchg
dec
add
dec
icebp
js
or
xchg
push
jo
insb
adc
adc
push
lahf
pop
xor
movl
lds
cmovl
mull
push
xor
mov
inc
es
out
and
dec
pop
or
pop
lods
sub
js
mov
dec
sub
add
mov
inc
xchg
sub
ds
sti
sub
mov
sub
adcl
sub
lea
das
jecxz
mov
into
notl
aaa
add
mov
jo
imul
test
push
movsl
pop
lret
lock
jo
sub
loopne
shlb
push
insb
sbb
loopne
adc
jp
test
sub
add
jle
es
pop
xchg
movl
insb
xchg
das
cmp
dec
inc
adc
jb
mov
mov
jo
movsb
push
divb
mov
cmp
test
mov
mov
adc
push
out
jmp
sbb
adc
add
pop
js
es
sar
cli
test
jge
fwait
xchg
fisttpl
adc
fldcw
fbstp
jb
in
mov
icebp
dec
in
popf
sub
and
sub
push
sub
inc
scas
fwait
mov
daa
lret
outsb
and
idivb
add
lret
mov
cltd
movl
xor
in
fwait
daa
popf
mov
insl
repz
pop
cli
mov
mov
popf
lock
pop
push
dec
push
adc
cltd
aas
xor
loop
or
jle
add
call
xchg
add
mov
mov
fwait
out
mov
loop
inc
ljmp
xor
inc
fsubrl
sbb
mov
inc
dec
push
jne
repnz
cmp
sarl
cwtl
in
xchg
add
or
cs
xchg
mov
push
int3
lods
push
and
jo
push
push
mov
pop
cs
mov
out
std
popa
and
insb
xor
jl
xor
push
xor
sub
insl
outsl
mov
daa
push
in
test
jne
rcl
jae
jge
push
adc
popa
imul
mov
fs
xchg
pop
sbb
mov
inc
imul
push
ret
dec
into
mov
test
scas
push
loope
nop
jbe
cld
mov
push
repnz
jmp
shll
ret
js
jmp
stos
mov
fldl
aas
mov
inc
lock
xchg
push
or
fsubs
imul
jno
ficomps
fadd
insb
push
mov
mov
outsb
out
movsl
lret
or
out
arpl
mov
mov
vpackuswb
lcall
dec
addl
inc
leave
dec
xchg
cmpsl
repnz
pop
xor
int
pop
and
cld
mov
testb
mov
enter
mov
outsl
push
fs
iret
sbb
sti
mov
dec
add
aam
mov
data16
cltd
out
lahf
out
mov
and
fisubrs
cld
mov
mull
add
aad
mov
push
xchg
lret
lea
test
mov
int
mov
jecxz
mov
ret
dec
mov
js
loopne
dec
aad
push
sbb
nopl
or
xor
push
stos
bound
stos
mov
mov
push
push
and
pop
es
pop
xor
or
dec
pop
dec
js
adc
pop
sub
pushf
lcall
enter
pop
das
lahf
das
xchg
adc
cmpsl
mov
imul
and
inc
sub
dec
xchg
mov
movsb
jns
sub
cmp
pop
into
stc
jno
es
rcr
inc
jecxz
jo
mov
xchg
mov
fstpl
jne
mov
call
mov
xor
jno
popa
mov
cli
jecxz
outsb
inc
movsb
mov
aaa
arpl
fwait
aam
aad
cmp
loopne
and
push
mov
loopne
fsubrs
ja
xchg
leave
fucomp
in
sub
jo
loop
and
sub
lods
mov
xor
das
sarl
pop
bound
mov
mov
in
sbb
push
pop
out
jmp
and
in
sbb
sub
xorl
ss
fistpll
ss
dec
into
out
mov
xchg
test
fidivrs
jmp
es
jb
jno
xor
sub
adc
and
jmp
arpl
cmpsl
repz
jmp
les
nop
les
xchg
cmp
mov
push
sahf
sbb
movsl
pop
dec
mov
sub
imul
add
jg
cwtl
xor
ss
cld
jno
rorl
clc
cmc
mov
dec
movsb
insb
cld
ror
xor
and
adc
lea
cmp
bound
loopne
bound
sti
sbb
daa
sbb
loop
aam
mov
xchg
and
jmp
jl
dec
pop
fincstp
or
subb
mov
insl
cltd
out
arpl
or
aam
repz
repnz
inc
arpl
xchg
outsl
sub
jp
popf
fcompl
insl
inc
mov
push
arpl
loope
mov
fsubs
sti
mov
pusha
outsb
lock
in
jb
mov
leave
mov
inc
jbe
cmp
sbb
in
shlb
mov
rcrl
cmp
cmp
xorl
mov
adc
dec
lds
mov
mov
pop
data16
mov
jge
jbe
mov
cmp
popf
cwtl
lret
out
sub
stos
sub
dec
and
out
ret
or
fiadds
int
aas
cmp
mov
pop
ja
sub
cmpsb
fs
jae
jle
sbbb
nop
faddl
inc
imul
and
andl
sbb
add
cs
xchg
repnz
xchg
cld
or
dec
lock
hlt
cmp
mov
inc
and
test
jecxz
int
out
push
div
popa
hlt
sbb
mov
insb
adc
mov
inc
cmpsb
xor
sahf
mov
and
sub
cmp
mov
popaw
shll
fwait
cmpsl
subb
add
sarb
int
or
hlt
bound
xchg
mov
add
mov
gs
fcomip
popa
sub
pop
dec
aam
jns
mov
inc
mov
inc
cwtl
pop
pop
jl
icebp
lods
rolb
jo
clc
shrb
fwait
leave
clc
dec
int
aam
mov
lods
je
movsl
outsb
cs
dec
mov
fidivrl
in
lcall
pop
mov
not
push
mov
add
mov
mov
pop
pop
rcrl
inc
ss
gs
andb
frstor
inc
pop
data16
enter
cmp
leave
lcall
sub
push
mov
jg
div
push
adc
xor
sbb
fisttps
xchg
and
mov
arpl
sub
cmp
sbb
fwait
fs
xchg
pop
jnp
mov
xlat
xchg
leave
fs
xchg
xchg
cli
inc
jmp
xorps
sub
adc
outsl
out
outsl
mov
cmc
adc
es
nop
push
leave
xchg
inc
jnp
ret
test
mov
pop
xchg
mov
jmp
scas
popf
push
xchg
mov
rcll
add
fdivp
dec
add
lock
jmp
pop
jne
movsb
mov
jae
lcall
movsl
or
or
adc
mov
push
out
pop
xor
xor
xor
lahf
inc
ret
push
movsb
add
ss
xlat
insb
aam
loope
movsl
jle
xor
cmp
shrl
sbb
cmp
mov
push
lods
hlt
xor
xchg
mov
les
lcall
mov
inc
repz
ss
pop
out
int
inc
aas
xorb
adc
jbe
nop
out
mov
pop
and
rcrb
mov
mov
fwait
inc
fstpl
gs
jl
jnp
imul
sahf
sahf
jle
lcall
push
or
or
aad
pop
shlb
jo
mov
pop
xor
xchg
test
cs
mov
mov
mov
jge
mov
adc
and
sbb
notb
or
rcrl
es
adc
test
xor
repnz
and
int
jle
fwait
xor
sub
sbb
sbb
insl
fwait
mov
add
dec
sub
cltd
cmp
xor
or
inc
mov
push
xlat
pop
fcomps
sub
inc
lcall
sub
jae
and
stc
cmp
xor
imul
push
popf
cld
stos
mov
out
mov
icebp
aam
mov
adc
pop
cmp
incl
shl
and
dec
sub
roll
pop
mov
mov
mov
lds
xchg
or
xor
es
lret
lods
aam
outsl
shrl
inc
mov
jne
out
pushf
test
clc
arpl
movb
gs
jne
bound
popf
mov
je
shlb
loopne
scas
push
ret
dec
pop
aas
add
push
push
jbe
lods
xchg
stos
inc
pushf
mov
cltd
push
push
rcll
sti
adc
mov
cwtl
adc
int
mov
jecxz
lcall
repnz
sbb
aad
inc
push
lock
adc
xor
add
clc
popa
inc
rclb
adc
movsl
jecxz,pt
fdivrl
mov
dec
mov
inc
jge
clc
push
lahf
call
dec
mov
add
jmp
push
pop
jge
ljmp
jnp
jns
push
xchg
movsb
or
into
mov
enter
jp
mov
dec
icebp
insb
cmp
mulb
dec
out
es
pusha
xor
dec
cli
xchg
jl
pusha
push
push
jno
xchg
ja
pusha
sub
xchg
ret
sub
test
mov
das
xlat
loopne
jle
cmp
mov
je
out
xchg
cs
cmp
sbb
jbe
cmp
fs
cmp
pop
insl
cmpb
push
imul
xchg
mov
cli
movsbl
inc
xor
pcmpgtd
adc
std
push
xor
fcoml
loopne
and
xchg
fst
mov
adc
push
into
sahf
cs
inc
pop
inc
scas
leave
scas
pop
outsb
fidivs
cmp
aam
out
ret
ret
popf
enter
fstpl
xchg
sub
xchg
mov
sub
sbb
pusha
dec
cltd
sub
adc
mov
push
aam
cmpsl
cmp
pop
and
add
lds
testb
sti
daa
mov
jbe
lods
mov
xchg
movsb
pop
out
das
pop
jmp
jo
xchg
in
or
out
xor
dec
cwtl
jecxz
mov
push
add
cli
stos
jp
xor
xchg
push
icebp
push
lret
add
jmp
pushf
adc
push
cld
decb
push
fcomps
subl
rorb
push
repz
or
pop
mov
mov
in
test
mov
cmp
es
cld
sbb
hlt
sub
lahf
scas
movsb
add
xchg
jl
scas
pop
addr16
xor
mov
jmp
lods
js
push
jp
sbb
jb
popa
lcall
mov
cli
in
test
jl
jmp
lahf
xchg
out
das
sbb
testb
pop
shl
inc
mov
shlb
test
daa
stos
jo
adc
xchg
test
mov
mov
add
cmpsl
popa
ss
sbb
shl
ficoml
xchg
xor
jae
call
ret
cmpsl
jge
mov
cmp
adc
out
mov
pop
loop
xor
lret
in
pop
orb
sbb
or
addr16
insl
jp
das
rcl
mov
fbstp
push
dec
cmp
call
or
mov
addb
xor
out
les
ljmp
aaa
pop
sti
mov
stos
mov
in
insb
jno
test
dec
push
cmp
shrb
jne
test
inc
sub
pop
inc
adcb
in
loope
test
sub
rcl
test
testb
jno
test
repnz
push
jge
or
pusha
push
scas
gs
adc
addl
pop
cmp
pop
inc
ja
or
lret
outsb
mov
push
xchg
sbb
push
insl
push
stos
xchg
test
pop
push
cmp
cmp
mov
sbb
int
mov
scas
rorl
pop
int3
leave
sti
cmp
adc
inc
into
xchg
cmc
inc
dec
mov
mov
enter
mov
sub
and
movsl
sub
sub
out
pop
test
test
mov
push
jno
jmp
or
add
je
fucomp
daa
popa
loop
sti
mov
pop
xchg
jb
dec
mov
jnp
mov
jp
xor
out
jg
dec
scas
aad
mov
cmpl
test
and
xchg
aad
pop
push
mov
in
rcrl
add
xchg
lods
xor
out
test
hlt
sub
rol
mov
sahf
jbe
shlb
popl
pop
jnp
imul
jp
jle
pop
movsl
jg
push
les
sub
or
lock
mov
fwait
adc
jmp
std
sbb
mov
sbb
mov
test
xor
aas
push
popf
sbb
das
insl
std
stos
lods
and
jg
jns
ss
push
inc
or
jbe
mov
push
inc
pop
mov
jns
pop
or
popf
jmp
scas
pop
notl
movsl
mov
sbb
out
aad
jo
inc
push
mov
pop
notb
dec
in
lcall
test
sub
addr16
and
enter
lret
add
je
pop
leave
and
fidivrs
scas
inc
cmp
lcall
out
ret
mov
ljmp
in
fisubrs
fldcw
fld
sbb
movsb
gs
cmc
movsb
adcb
pop
ljmp
jle
ficomps
sbbb
jp
int3
or
mov
clc
rolb
pop
mov
inc
test
jnp
ret
jmp
stc
xchg
push
fbstp
aad
push
adc
or
sbb
mov
stc
cs
mov
cmpb
or
lcall
push
aaa
push
jb
mov
sbb
lret
ljmp
jno
lret
jl
imul
call
push
hlt
into
pop
add
movsb
or
stos
or
xor
outsl
enter
icebp
fiadds
sbb
jg
xchg
cmp
sarl
into
and
inc
mov
clc
push
stos
sbb
insb
mov
jge
pusha
es
in
faddp
add
ret
fmul
cmpsl
cmp
push
xchg
aas
pop
mov
test
mov
cltd
shlb
repz
add
add
test
hlt
adc
or
sbb
jmp
mov
lcall
ret
outsb
stc
clc
sarb
das
idivl
cmp
mov
imul
outsb
mov
iret
out
push
in
mov
negb
push
dec
adc
jmp
xchg
sbb
leave
pop
stos
xchg
test
aas
in
repnz
push
xchg
icebp
mov
iret
xchg
std
xchg
ret
das
je
frstor
inc
imul
add
dec
pop
mov
cmp
mov
adc
mov
sbb
in
adc
movsl
cltd
out
fcoms
jo
mov
xchg
out
push
test
nop
xchg
xchg
jne
jb
pop
or
sbb
xor
or
fsubrs
aas
mov
xor
push
pop
imulb
mov
mull
cmp
mov
mov
lret
mov
jecxz
rcl
mov
sub
sbb
adc
jnp
xor
arpl
roll
clc
andb
jne
cmp
clc
and
movsl
dec
ret
jle
pushf
xchg
and
xchg
into
jge
out
ja
scas
notb
fidivl
mov
frstor
movsl
loope
das
adc
inc
test
mov
repnz
repnz
adc
and
cld
cld
daa
mov
leave
bound
inc
lret
es
in
lret
test
lock
mov
xchg
mov
repz
ret
cld
push
shld
lds
stos
mov
add
ret
movsb
sbb
push
sbb
pop
notb
push
dec
cmc
inc
dec
addl
push
das
es
mov
outsl
movsl
sub
cmpsl
dec
jge
lds
push
rcrl
jle
pop
sbb
adc
push
loop
fsubl
repz
dec
push
gs
xorb
xor
push
int
pop
add
rorl
xchg
aaa
shll
xchg
sbb
or
loop
mov
fwait
aaa
mov
add
sbb
out
aam
mov
add
or
dec
push
rcll
pusha
sbbb
push
imul
dec
call
or
andb
or
cmp
shr
pop
cmpsb
and
scas
loop
pop
cmp
xor
repnz
cmovl
stos
cmp
jmp
mov
mov
loope
mov
or
cmp
cmpsl
xorb
in
fs
sbb
shll
mov
ret
out
inc
push
rol
inc
cli
loop
pop
add
inc
sub
jo
mov
jl
dec
jg
pushf
lds
and
loopne
aaa
push
loop
adc
inc
xor
inc
and
aad
pop
lahf
cmp
xchg
add
out
mov
int
jg
add
adc
fsubs
stos
cmp
orl
movsl
or
not
xchg
rorl
and
sub
loop
sub
push
stc
and
lret
mov
je
in
jno,pn
pop
sbb
sub
xchg
rcr
das
cli
mov
inc
fdivs
and
push
mov
enter
push
ffree
dec
cmpsl
add
hlt
mov
sahf
stos
call
add
cwtl
test
pop
insl
mov
mov
dec
dec
aas
stc
mov
in
push
lods
push
xchg
test
push
icebp
cwtl
inc
in
mov
stc
test
sahf
cmpsl
test
orb
popf
in
jl
clc
inc
insb
gs
daa
clc
aad
test
loopne
out
rorb
leave
jp
in
xchg
movsb
scas
mov
inc
fisubs
fldenv
js
push
xchg
mov
xchg
bound
scas
in
push
jp
testb
pop
push
pop
fimuls
xchg
fsubl
pop
dec
inc
dec
xor
jns
in
repz
aaa
lea
test
popf
shrl
jb
cmp
xchg
and
mov
aam
loopne
lret
push
xchg
dec
push
dec
mov
push
ljmp
ljmp
repnz
push
sahf
lods
sbb
add
pop
repz
sub
adc
ss
iret
pushf
mov
in
int
pop
jbe
std
jg
aam
aaa
xchg
add
sahf
sub
jl
gs
adc
lret
stos
jnp
stos
push
iret
in
ljmp
subb
and
jcxz
pop
outsl
or
mov
jbe
jp
cmp
mov
sbb
inc
sub
mov
push
invlpg
scas
insl
icebp
push
jb
aam
bnd
movsb
movsl
mov
and
imul
lret
xchg
cmc
and
inc
cmpsl
sub
jl
addb
dec
les
jg
push
or
ss
adc
xor
in
in
negb
inc
mov
cmp
xchg
je
xor
sbb
dec
stc
cs
cld
lods
pop
loop
mov
inc
test
sbb
inc
cmc
pop
popa
int3
test
sbb
mov
push
jnp
push
mov
add
outsb
js
aaa
inc
ja
mov
pop
popa
stos
dec
adc
cmp
mov
jne
cmp
dec
popa
fsub
pop
repz
xlat
dec
xchg
pop
les
dec
pop
loopne
pop
pop
sub
loopne
xchg
adc
adc
pushf
adc
xchg
fwait
push
pop
sub
xor
or
and
int3
mov
pop
dec
push
aad
pusha
addr16
or
ljmp
aam
push
inc
mov
mov
cmpsb
cmpsl
jns
arpl
popa
lret
mov
mov
int3
test
sub
shll
mov
mov
xor
push
ret
sub
js
jne
pop
fwait
jno
dec
sub
bnd
lods
ror
pop
cmp
mov
sbb
push
cmpsb
outsb
xchg
inc
fs
mov
call
push
xchg
push
jae
inc
call
mov
lea
test
inc
sbb
jmp
les
dec
imul
movl
js
stc
fidivl
pusha
jbe
movsb
stos
ja
leave
fsubp
or
in
push
and
push
cld
lret
xor
fs
mov
and
lock
jecxz
movsl
mov
mov
movsl
ret
aam
inc
mov
push
into
fcompl
xor
or
xorl
push
lcall
sub
repnz
imul
and
roll
pop
insb
std
sub
push
and
dec
mov
or
xchg
cmc
or
pop
sti
outsl
jbe
fcomps
inc
xlat
and
fwait
sarl
mov
stc
dec
push
pop
add
pop
rcll
sub
loop
loopne
or
es
jo
mov
out
dec
jmp
cltd
adc
mov
dec
add
sbb
pusha
stos
mov
loop
xor
dec
cmp
ret
sub
jne
das
lds
lea
test
cld
push
mov
inc
adc
jo
call
ja
jl
pop
int3
dec
sbb
sub
add
lods
ret
mov
or
xchg
fmuls
xor
je
mov
daa
sbb
lahf
sub
mov
pop
mov
dec
mov
icebp
daa
lret
faddl
or
pusha
xlat
mov
lret
xchg
fisubl
dec
or
jmp
iret
or
push
mov
iret
jge
je
mov
or
ficomps
sub
and
rcll
add
cld
sti
pop
and
push
mov
mov
aas
push
mov
rorb
outsb
adc
dec
and
test
insl
in
cmp
loopne
and
mov
call
inc
xor
imul
nop
pusha
cmp
xchg
ja
nop
add
repz
ret
es
aas
sub
xchg
or
in
cmp
mov
popa
mov
pop
push
adc
icebp
add
mov
mov
push
call
jno
cmpb
out
pop
and
dec
cltd
andb
ret
or
xchg
mov
movsl
cmpsb
mov
sbb
adc
adc
mov
adc
push
sub
pop
aad
mov
xchg
cmpsl
aam
push
mov
cltd
adc
scas
subl
movsb
jl
push
sbb
loope
aaa
sub
and
xlat
jle
hlt
mov
cmpsb
xor
mov
int3
add
in
loop
out
jnp
sub
jecxz
jb
push
lods
not
jo
clc
test
sbb
sub
in
mov
push
xchg
adc
mov
inc
call
inc
sbb
ret
dec
insb
xchg
mov
movsl
and
out
jmp
rcr
and
lds
sub
andb
enter
lahf
cmp
pop
clc
inc
inc
pop
addr16
stos
jbe
jl
mov
mov
cltd
testb
movsb
sbb
xchg
pop
in
jne
sub
xchg
inc
lcall
daa
and
sbb
add
gs
nop
mov
int3
jmp
mov
aaa
mov
imul
sbb
push
repz
out
jae
inc
mov
shll
or
ja
mov
xor
fldt
xchg
and
adc
testb
loope
and
mov
lahf
test
cmpl
mov
dec
or
inc
imul
or
aaa
xchg
frstor
xchg
jp
arpl
fildl
jns
aad
pop
adc
adc
sub
in
dec
xor
mov
xchg
cld
mov
inc
pop
pxor
sub
mov
cmpsl
add
or
sti
sub
mov
jg
imul
jecxz
das
das
sbb
insl
pusha
test
mov
mov
data16
stc
lcall
cld
sub
push
das
adc
addl
and
sub
out
ss
leave
cltd
sbb
ljmp
xor
cltd
xchg
icebp
pop
jg
pop
jp
rolb
xor
sbb
sti
daa
sub
mov
pop
testl
and
shll
or
sub
cmp
cmp
xchg
adc
push
dec
mull
jae
ds
adc
push
dec
add
aaa
mov
out
jbe
sbb
adc
lcall
push
adc
mov
xlat
mov
mov
enter
dec
movsl
push
jnp
or
cmp
aaa
pop
push
mov
rclb
in
mov
adc
mov
cmp
in
inc
ljmp
mov
jnp
aas
lahf
lahf
dec
aas
icebp
sti
or
jle
imul
jg
adc
mov
and
lcall
lcall
sub
fadd
mov
inc
loop
inc
cmp
out
or
mov
add
neg
push
mov
std
adc
mov
cltd
idiv
or
cli
or
sbb
mov
inc
dec
in
or
pop
pusha
dec
push
lcall
lcall
ja
loopne
xchg
movsb
sub
pop
mov
pop
cmp
xchg
mov
jg
jns
jl
inc
xchg
aad
pop
pop
add
jno
cmp
pushf
popf
xchg
jmp
jg
popf
addr16
push
pop
in
aaa
mov
cmp
inc
rorb
push
dec
aaa
sbb
jmp
fmull
inc
mov
outsl
ljmp
dec
notb
mov
nop
inc
adc
test
mov
jno
test
stc
jne
xor
add
add
jecxz
fistpll
push
sahf
pop
jae
inc
sbb
aad
lcall
out
and
sahf
adc
shrb
inc
xchg
mov
rolb
jns
and
mov
je
mov
jbe
mov
jnp
mov
and
and
mulb
div
test
xchg
std
cs
cltd
insl
jb
fiaddl
in
test
lahf
pop
mov
add
addb
or
push
dec
ss
adc
dec
cmpl
mov
pop
out
fmuls
out
cmc
fdivrl
dec
xchg
dec
cld
push
shl
jnp
movsb
movsb
arpl
outsl
xor
loopne
mov
cltd
loop
pop
rolb
jne
and
js
icebp
lret
call
sub
jne
mov
cli
icebp
mov
pushf
imul
js
jmp
xor
add
mov
push
mov
ss
enter
call
mov
pop
ret
xor
fdivrl
outsl
popa
jns
push
xor
or
mov
fcmovb
sbb
adc
fistpl
inc
insb
cltd
test
add
faddl
call
sbb
jo
popf
lods
and
and
mov
lret
sub
and
or
xchg
lea
cmp
stos
mov
mov
lret
arpl
fildl
push
xor
repnz
jb
xchg
ja
ret
cwtl
loope
lcall
mov
push
or
call
cld
sbb
dec
sbb
cmp
jl
pop
lods
inc
ss
mov
mov
fmuls
dec
out
xchg
adc
xor
adc
jb
sbb
in
rcl
insb
icebp
loopne
inc
movsl
adc
xchg
xchg
scas
hlt
or
mov
mov
add
push
dec
fidivrs
jg
in
lea
mov
inc
dec
mov
mov
sub
js
push
push
stc
subl
je
push
aad
jg
pop
aad
mov
out
lock
ja
mov
into
mov
bound
inc
addr16
or
xor
sbb
sbb
lahf
cwtl
sbb
pop
cltd
pop
mov
xchg
outsb
mov
inc
push
in
cmp
cmpsl
insl
and
cld
mov
fcoml
push
out
dec
mov
fcompl
into
mov
pop
lret
xor
cmp
in
and
mov
shlb
or
inc
inc
ret
loopne
jle
mov
adc
xor
cmp
xor
test
popf
adc
sbb
repnz
dec
arpl
adc
xlat
dec
and
rcll
cmc
sub
lret
push
lock
lret
pop
mov
push
add
mov
call
xor
minps
sarl
imul
jge
repnz
push
loop
lods
ljmp
push
outsb
gs
pop
ja
outsb
xor
in
dec
dec
xor
jne
xchg
mov
scas
cwtl
das
add
push
cld
sti
xchg
fstps
fcmovnbe
stos
lods
push
xlat
xchg
push
xchg
ret
inc
dec
test
pop
mov
jb
movsb
shlb
sbb
inc
mov
std
mov
adc
sahf
sahf
xor
pop
int3
mov
dec
mov
or
stos
inc
out
jl
fildll
daa
mov
adc
add
leave
adc
je
add
pusha
in
out
add
out
pop
imul
pop
push
repz
fcoml
sbb
in
in
sub
adc
test
data16
push
lret
js
mov
mov
lcall
mov
stos
lods
fwait
clc
jns
mov
mov
mov
sub
movsb
cmpsl
push
mov
add
ja
add
cmp
pushf
hlt
js
xor
push
mov
addr16
inc
fstl
sarb
jns
cli
xor
sti
mov
sbb
mov
addr16
xchg
or
mov
sbb
aad
lods
dec
xchg
aad
insl
aaa
jae
lahf
inc
push
stos
cltd
insl
insl
dec
and
jo
shlb
popa
inc
cmp
push
daa
fwait
repz
add
lock
dec
jg
mov
insl
imul
xchg
mov
movsb
mov
ja
cs
sub
std
int3
lret
repz
loopne
js
repz
cmp
insb
into
jge
pop
inc
jp
push
lcall
loop
mov
mov
xchg
loope
popf
mov
xchg
dec
ljmp
push
mov
out
xchg
cmp
insl
lea
and
and
imul
and
fimuls
lret
insl
js
insb
pop
stos
lods
add
scas
in
sbb
or
pop
push
mov
lahf
sub
adc
int
push
cmp
mov
out
scas
out
repnz
jl
out
add
lret
push
push
mov
out
stos
fstl
xchg
jle
pop
push
add
jb
mov
push
mov
jo
test
arpl
mov
cli
sub
or
orb
mov
pop
xor
add
out
mov
test
sub
imul
jg
vcomiss
mov
aam
popf
add
in
xchg
ds
pop
dec
add
and
mov
ficomps
push
sbb
inc
insb
insl
pop
jae
push
imul
push
sbb
xor
mov
leave
lea
mov
xlat
rcll
dec
data16
mov
xchg
push
lods
fs
fwait
pop
jmp
ja
stos
xor
sbb
mov
ljmp
push
fisubs
int3
adc
lods
mov
inc
ds
jp
das
jmp
pop
mov
lahf
or
lahf
sub
fildl
dec
out
lds
aam
and
jle
popa
xor
sbb
mov
push
inc
shlb
or
mov
pop
mov
sbb
pop
push
adc
sub
sbb
or
lcall
mov
ds
std
loop
add
test
xor
inc
stos
cmp
dec
add
xchg
fimuls
test
roll
lds
mov
jae
mov
out
int3
push
and
shll
or
mov
xor
dec
sti
not
fs
push
arpl
ret
roll
xor
push
scas
sbb
lret
lret
das
outsb
xlat
xor
movsb
pop
test
jae
fwait
or
adc
gs
or
scas
push
in
xchg
push
push
pop
cmp
cmpsb
push
cmpsl
enter
gs
cmp
sub
das
hlt
inc
add
je
push
ffree
and
testl
push
roll
xchg
adc
push
cmc
int3
cmp
jbe
popa
add
pop
xchg
push
mov
sahf
popa
ljmp
jecxz
add
adc
shll
and
xor
mov
xchg
mov
ljmp
cmp
lahf
out
cltd
xchg
scas
xor
inc
nop
in
push
jns,pn
cmp
pop
roll
sti
xchg
in
loope
cmp
fistl
push
xchg
xchg
cmpsb
and
ret
cwtl
into
push
dec
pushf
jmp
xchg
xor
popf
adc
clc
sub
js
lea
addl
leave
es
fadds
je
imul
es
fisubrl
push
movsl
add
xor
mov
mov
mov
pusha
cmpsb
xchg
sbb
dec
int3
addr16
pop
test
jle
xchg
inc
pusha
cmpl
pushf
xchg
loope
stos
mov
push
pop
cmpsl
jno
hlt
push
xchg
fcomps
sbb
push
add
inc
movsl
leave
sahf
decl
ud0
hlt
push
sub
mov
ljmp
pop
lahf
or
and
ljmp
cld
xor
push
repnz
push
cwtl
dec
loopne
cmp
xchg
xor
mov
pop
add
test
ficoml
testl
sub
push
cmp
sbb
and
jge
add
imul
dec
and
inc
sahf
push
adc
imulb
pusha
arpl
in
jae
xchg
test
ds
xchg
jmp
sub
mov
les
jns
lds
xchg
rcll
imul
jns
data16
add
xlat
pop
inc
xchg
cmc
testl
add
rcll
push
cmp
loop
mov
jp
mov
and
test
loope
je
das
jmp
addl
mov
out
adc
inc
mov
push
mov
sbb
js
sbb
xor
push
lea
fnsave
adc
in
neg
xlat
push
jle
cmp
or
lods
arpl
popf
scas
xchg
mov
mov
mov
rorl
pushf
xor
sub
sbb
das
lcall
sbb
or
enter
mov
mov
dec
and
and
sub
bound
scas
movsl
outsb
xchg
out
push
adc
pop
loop
aad
xchg
fwait
popa
into
les
or
lret
mov
stc
xchg
andl
ret
stos
or
es
sub
sti
test
sbb
cmp
jae
cltd
mov
dec
adc
and
mov
or
ja
mov
xchg
inc
xchg
ljmp
sub
adc
loope
push
jmp
scas
popf
out
lds
ret
cli
mov
jno
or
mov
int3
jge
mov
cmp
popa
push
stos
arpl
icebp
mov
xchg
inc
jnp
cmc
sbb
jmp
push
adc
xor
test
mov
add
dec
xor
out
xor
jns
leave
cmpsl
test
and
xchg
push
mov
lods
test
popa
xlat
pop
lds
js
decl
outsb
lcall
pop
lods
sub
or
ja
and
lods
pop
lret
dec
imul
inc
push
test
out
ljmp
push
sti
in
lea
push
cmp
inc
aas
push
xor
push
sbb
in
in
stc
lods
jne
lds
mov
pusha
jnp
xor
mov
ljmp
std
pop
xchg
mov
jne
sbb
mov
inc
inc
rclb
in
adc
pushl
int
mov
popa
inc
loopne
inc
int
push
push
inc
std
cli
lds
jecxz
sub
xchg
sub
repnz
outsb
push
dec
xor
xchg
xor
pop
and
mov
and
sub
pop
fcomp
xorl
xor
ret
mov
in
adc
out
cmpsb
adcl
jmp
gs
inc
lcall
inc
orl
je
sub
cmp
jp
scas
enter
daa
ds
aad
add
inc
push
push
inc
sub
negb
mov
bound
dec
cltd
jp
adc
imul
out
shl
ret
adc
aad
push
scas
bound
fwait
add
mov
add
mov
xchg
cmp
sub
fidivl
mov
adc
out
inc
popa
xor
mov
sbb
or
pop
daa
cli
xchg
mov
pop
cwtl
inc
fidivl
lret
out
xor
cli
int
cli
cld
js
shl
imul
loope
push
pop
pop
je
sub
xor
cmp
sub
lret
enter
rcl
rorb
aam
ss
cltd
movsb
mov
ja
dec
cmp
jne
pop
psraw
rcl
movl
xchg
inc
ret
pusha
roll
cmpsl
dec
xor
repz
stc
incb
xchg
rcll
cwtl
fsubl
cmp
iret
lret
or
es
lahf
jmp
outsb
xor
xchg
xor
mov
test
push
push
test
push
inc
pop
loope
fwait
mov
push
out
in
aas
es
lret
jnp
dec
sbb
das
outsb
jo
cmp
push
out
inc
popa
mov
std
jb
sub
in
popa
stos
gs
or
mov
lret
sub
dec
push
xchg
out
jb
lcall
sbb
cmpsl
insb
arpl
add
in
dec
lcall
lea
pusha
out
dec
mov
pop
cmpsb
mov
dec
sub
cld
idivl
enter
jnp
sbbl
adcb
fwait
jle
fdivrs
xor
cld
decb
push
fmuls
or
inc
mov
das
arpl
mov
bound
movsb
sbb
inc
sub
sub
out
sti
inc
bound
arpl
or
in
das
sti
mov
push
neg
dec
mov
pop
int
pusha
or
clc
mov
push
jo
and
mov
add
outsl
lock
adc
iret
mov
sub
dec
sti
cmp
fsubrs
adc
les
cwtd
shl
mov
cmpsl
cmpsb
cmc
rsqrtps
dec
rcl
lds
dec
push
shr
mov
add
test
out
shl
mov
lds
sti
test
aad
pop
mov
popa
out
cmp
mov
push
xorl
xor
and
sub
mov
adc
jae
sbb
sub
jl
call
push
sbb
or
fisubrl
or
xchg
je
popa
dec
pusha
sbb
and
cltd
aas
mov
dec
rclb
insl
in
pop
jp
xor
pushf
sub
jmp
mov
add
idivb
and
adc
mov
mov
add
pushf
ljmp
loopne
cs
add
fimuls
jnp
scas
dec
jns
outsb
jne
outsl
cmp
shll
jg
test
sbb
arpl
loop
loop
arpl
mov
mov
cmp
fsubs
xchg
or
or
cmpsb
ljmp
jno
and
adc
popa
in
adc
stos
mul
inc
cli
add
in
add
pop
xchg
push
mov
pusha
inc
dec
or
lret
decl
sub
mov
js
dec
mov
jno
jp
mov
int
mov
jno
add
daa
out
xchg
enter
lock
mov
popf
je
push
sti
xor
cli
repz
xchg
push
jge
mov
add
ficomps
cmpl
clc
les
adc
inc
lods
add
mov
cmp
das
push
mov
in
or
stos
mov
outsl
inc
and
sti
mov
xchg
sbb
fistpl
mov
imul
and
mov
jns
inc
adc
jle
ljmp
outsl
adc
mov
sbb
lods
push
pop
xorl
sbb
scas
jp
inc
into
xlat
mov
mov
pop
push
movl
or
mov
mov
xor
je
pop
jns
fld
stos
insl
xchg
adc
pop
pop
lahf
mov
or
jp
inc
mov
and
xchg
xchg
xor
mov
sti
idivl
std
xor
sub
gs
inc
js
outsl
out
adcb
addr16
or
mov
mov
repz
jbe
out
cwtl
out
cmp
cmp
sub
dec
inc
loopne
gs
adc
xor
inc
andl
jne
icebp
sbb
jge
scas
fs
mov
movsl
je
push
ror
loope
aad
push
xchg
adc
lock
jl
push
mov
imul
xchg
sbb
popf
pop
fildl
rcl
imulb
adc
and
mov
mov
push
push
inc
fistl
das
shll
cmpl
add
call
xchg
rolb
arpl
adc
and
and
daa
inc
sti
xor
arpl
imul
flds
mov
lret
ljmp
in
insb
mov
hlt
sub
sbb
jae
push
inc
fwait
dec
mov
stos
jle
push
mov
in
ja
movsl
ljmp
aad
xchg
sahf
cmc
and
xor
push
mov
outsl
cmp
idivl
sbb
push
repz
into
xchg
mov
cmc
repz
out
jo
inc
ds
or
ja
and
clc
mov
jns
jne
mov
mov
sbbl
cld
sbb
out
aam
orl
ficompl
dec
orl
out
mov
mov
fcoml
fdivrs
fs
in
inc
fsubrs
inc
scas
adc
jns
icebp
jmp
daa
scas
ljmp
sbb
mov
mov
mov
cmp
jle
jns
cltd
mov
xchg
pop
cltd
subl
add
insl
and
jne
add
arpl
nop
in
inc
adc
mov
daa
popa
inc
stos
std
fistps
cmpsb
jle
pop
inc
mov
daa
xchg
test
fmulp
arpl
bound
and
sbb
add
jns
movl
push
xor
push
rclb
xor
hlt
sbb
and
into
add
outsl
mov
and
jno
jbe
roll
imull
mov
icebp
adc
sub
cmp
jnp
je
sub
xchg
lret
jge
xor
fcmove
pop
out
daa
cmp
pop
cmp
push
in
push
jecxz
jnp
add
outsl
xchg
push
sbb
movsb
dec
test
or
dec
or
loope
pop
sahf
mov
fmul
aam
mov
das
and
cmp
xlat
lret
outsb
jecxz
loope
out
push
and
jecxz
movsb
insb
repz
loopne
leave
out
std
xor
gs
xor
cmp
notb
sub
lret
push
js
and
call
leave
or
sub
xor
xor
fprem
movsl
fadd
lret
xchg
imul
sub
scas
sti
mov
pusha
lahf
nop
mov
int3
aam
jae
loope
cmp
das
add
pop
aaa
inc
cli
cmpsb
dec
mov
inc
aad
cwtl
mov
hlt
and
and
pop
stos
roll
or
icebp
push
xchg
out
mov
and
sbb
mov
mov
xor
jae
push
fildll
outsb
cmpsl
fs
adc
movsb
adc
ljmp
leave
jmp
mov
movsw
push
aas
sbb
outsl
xchg
mov
cli
fcompl
inc
mov
jl
mov
xchg
or
sub
mov
mov
fsubp
in
mov
xchg
ja
lcall
pop
dec
lahf
stc
jmp
push
lds
jecxz
mov
adc
add
xor
inc
cmc
push
cmp
outsl
idivl
insb
test
push
pop
sbb
pop
dec
jl
jne
sahf
cmp
mov
fs
inc
mov
sbb
xor
ret
sub
mov
mov
idivb
jb
insl
jecxz
adc
cwtl
ficoml
or
in
dec
imul
xor
lds
lods
xor
bound
add
cmpsb
decb
and
sub
wrmsr
nop
jl
shll
inc
cmp
push
cmpsb
cmpsb
fcmovb
mov
adc
pop
into
sbb
cmp
lret
xor
mov
pop
lods
sub
aaa
and
cld
outsb
xor
add
or
nop
stos
mov
cld
push
aaa
cmp
xchg
push
addr16
pop
stos
jmp
cmp
push
dec
loope
cmp
dec
ja
ffreep
add
aad
pop
sahf
xchg
push
sbb
cmpsb
ret
dec
adc
mov
sti
lock
fcmovnu
rol
sbb
add
dec
hlt
mov
icebp
add
cs
xchg
pop
pushf
bound
loop
out
or
out
xchg
stos
pop
std
cmp
pop
add
bound
addl
bnd
cmp
neg
xchg
loop
jbe
xor
in
lds
push
or
aam
enter
daa
scas
out
mov
mov
pop
cwtl
stc
rclb
push
push
bound
popa
xchg
pop
repnz
divl
xor
jbe
or
cli
stos
xor
inc
xor
in
dec
mov
pusha
popa
jp
ret
push
imul
mov
shll
popa
push
loop
out
stos
arpl
cmpsb
icebp
outsl
pop
sahf
inc
mov
fnstcw
stos
inc
and
xchg
adc
fmull
dec
xchg
subl
push
js
mov
icebp
insl
mov
test
jecxz
inc
mov
mov
xor
mov
inc
ja
push
outsb
mov
popf
mov
sbb
in
pop
imul
cmpsb
out
and
xor
rclb
lret
cwtl
jmp
mov
fstps
jne
xor
rep
cmovs
mov
inc
sub
cmp
testb
in
fwait
xchg
bound
xor
push
pop
das
ret
icebp
aad
lahf
jecxz
mov
shll
ljmp
mov
dec
dec
into
cli
cs
orl
sub
out
inc
inc
mov
loopne
jne
or
std
cs
cltd
and
sbb
adc
sub
imul
fwait
mov
fnstenv
daa
mov
rcrb
xchg
inc
push
ss
mov
in
mov
test
je
out
arpl
mov
cmc
movsb
ds
adc
aam
daa
jno
pusha
in
outsl
adc
leave
lods
cmpsb
shlb
cli
or
mov
xchg
fs
fnstenv
pop
xchg
popa
cmp
add
add
ja
cmpsl
icebp
lret
cmp
sub
lock
cmpl
mov
lock
arpl
mov
adc
xchg
je
jmp
add
das
push
adc
aam
jnp
jne
frstor
jg
jnp
aad
sub
push
cmc
into
outsb
xchg
out
imull
mov
movsl
test
dec
xor
in
loop
add
adc
fucomi
lea
sbb
mov
out
andb
imul
cmp
in
fcmovnu
mov
fs
add
rclb
cmp
sti
movsb
enter
inc
adcl
xchg
jl
and
cmpb
out
std
cmpb
inc
imulb
int3
bound
xor
cmpsb
incb
and
pop
iret
xchg
pushf
or
lds
jno
or
sahf
push
ret
in
xchg
rcll
or
ds
jp
pop
cld
insb
cmp
mov
add
out
and
in
add
jne
jle
cmpsb
mov
js
cmp
sub
outsl
fs
mov
insl
fisttps
aaa
jno
sti
mov
mov
mov
repz
in
lods
mov
jg
mov
ss
mov
jl
in
fistps
sub
dec
lahf
push
std
mov
sub
push
mov
push
xchg
push
movsb
mov
sbb
xchg
adc
dec
add
imul
ret
xchg
lcall
sti
jle
or
mov
repnz
mov
mov
and
loope
dec
testb
clc
xchg
scas
mov
jae
sub
adc
test
test
inc
es
jl
into
rolb
xorl
in
dec
jns
pop
int
push
nop
lds
cmp
mov
mov
bound
insb
sub
in
dec
sub
xchg
mov
cmp
call
ljmp
push
pusha
aaa
in
xor
adc
fwait
sbb
into
int3
add
adc
loopne
andb
scas
outsb
add
aam
mov
sti
scas
insl
or
frstor
mov
std
in
xchg
mov
shl
aaa
in
sbb
sbb
lret
pusha
std
addr16
clc
jge
pop
lea
push
mov
jl
or
push
sbb
sbb
sbb
fbstp
mov
inc
in
push
and
stos
mov
pop
push
repnz
mov
in
out
ja
dec
fneni(8087
cs
jae
adc
mov
lcall
lcall
fisubs
lods
add
int
test
mov
int3
dec
add
jge
int3
pop
bound
enter
stos
jp
sub
subl
repnz
dec
into
sbb
hlt
add
dec
add
jp
jge
sub
push
frstor
mov
pushf
mov
cmp
shrb
sarl
fidivl
repz
ret
add
and
mov
mov
icebp
mov
jo
mov
nop
insl
push
mov
jp
push
adc
aam
pusha
xchg
jb
ret
dec
xlat
cmpsl
cmpsb
fldl
jle
and
das
jns
mov
stc
sar
push
add
lods
inc
push
lahf
push
scas
add
mov
xchg
push
rolb
fmull
xchg
jns
dec
jmp
fwait
stos
subb
adc
push
jmp
sbbb
adc
sub
inc
repz
dec
dec
mov
imul
test
pop
xor
mov
add
popa
cli
mov
cltd
cli
rcr
mov
cmp
mov
notl
mov
mov
pushf
lods
dec
aaa
into
push
mov
sbb
hlt
and
xchg
sbb
lds
in
jg
jns
xorb
jne
pop
push
cmc
popf
outsl
add
fistpll
pop
aaa
mov
mov
push
mov
outsb
cmp
fwait
loope
in
fistps
pushl
mov
and
mov
in
shlb
pop
out
gs
pop
dec
rcrb
les
fs
xchg
add
imul
lahf
loopne
sbb
sub
out
cmpsl
clc
movq
fidivl
sub
mov
xor
adc
sub
repnz
vcvttsd2si
sti
sub
push
clc
push
push
lds
xor
sub
add
inc
adc
pop
mov
shll
add
sbb
and
add
cmp
xchg
repnz
insl
std
mov
fnstsw
fdivrl
sbb
js
mov
xor
pop
jg
push
call
scas
xor
push
mov
in
xor
mov
aas
fsubs
pushf
pop
fdivl
sarl
inc
inc
pop
add
gs
mov
xchg
xlat
and
inc
mov
adc
xor
push
pop
test
push
and
inc
fildl
cwtl
sub
xor
mov
cli
sbb
dec
ds
loop
inc
in
mov
ss
shl
movsb
mov
pop
xlat
fwait
and
adc
sbb
mov
or
rcrl
movsl
jo
insb
je
jge
cmp
xchg
pop
outsl
sbb
es
xor
in
inc
ljmp
es
ret
cmp
fwait
aaa
mov
pop
cmp
ss
sarl
mov
je
pop
add
repnz
repnz
sub
xor
xor
into
xchg
faddp
lret
out
aaa
adc
jmp
repnz
loopne
and
cmp
jb
mov
add
outsb
imul
movsb
jns
cmp
push
fldenv
cwtl
inc
imul
adc
mov
xor
inc
mov
fsts
cs
mov
imul
shlb
mov
xor
mov
xchg
mov
lds
cli
mov
and
das
mov
add
xchg
and
mov
ds
imul
pop
shrl
mov
sbb
imul
mov
mov
mov
mov
daa
cli
stos
das
je
mov
xor
sbb
sub
outsb
cld
fcompl
lds
jnp
ja
dec
fsubl
sbb
add
in
cld
rcl
sub
call
push
mov
sub
and
ficomps
lods
inc
cmp
jl
cmpsb
and
jb
jne
or
xchg
fs
push
pop
into
ja
xchg
repz
mov
aam
scas
xor
insb
ret
pop
addr16
xor
cltd
fildl
int
fildll
inc
mov
and
std
aaa
pushf
rcl
lea
mov
lds
dec
dec
mov
es
pop
cltd
lret
insl
sub
imul
pop
mov
xor
popa
dec
dec
andb
jecxz
jge
aam
jno
dec
sti
das
mov
cmp
fldenv
aaa
je
in
lock
daa
ret
dec
jne
add
xor
cmp
repnz
lods
hlt
rorb
or
shll
cmp
add
insb
bound
aaa
cmp
xor
addr16
mov
or
mov
lret
fwait
jecxz
xchg
scas
or
xor
shrl
sbb
mov
into
stc
pop
test
xor
mov
lea
sarb
in
shlb
imul
or
lret
and
xor
jo
jno
cld
mov
xor
inc
pop
notl
cltd
stos
add
jle
add
popf
cmc
jno
push
mov
inc
jecxz
rolb
es
cmp
jne
mov
push
cmp
xchg
fs
dec
push
sbb
aas
hlt
mov
sbb
and
mov
cmc
cmp
cmp
cs
orb
cltd
test
dec
test
jmp
daa
in
cmp
push
mov
test
out
aam
in
cmp
cmp
xor
push
sub
or
stc
xchg
stos
shll
adc
mov
icebp
in
outsl
push
mov
dec
xor
lcall
sbb
out
cmp
sub
or
add
cmp
fcmovnb
push
push
les
cmp
mov
push
xor
xor
sbb
pusha
les
jg
or
mov
push
jne
movsb
sbb
mov
ds
inc
pop
mov
gs
xchg
filds
test
stos
mov
and
and
int3
or
dec
js
mov
aam
jecxz
lahf
push
jp
ss
ret
cmpsl
ret
dec
insb
dec
cli
stc
jns
mov
cld
cltd
or
inc
pop
popl
mov
cmc
jmp
out
cmp
and
xchg
rolb
push
repz
mov
pop
xor
xchg
int3
ss
stc
and
scas
vmovups
sbb
lods
inc
adc
jnp
mov
inc
outsb
adc
nop
aad
xor
sub
and
add
push
mov
cmpsl
out
lods
dec
sbb
orl
cmp
pop
jne
roll
lahf
jae
xchg
jne
int3
stc
andl
xchg
cmp
imul
sub
sub
jnp
fnstsw
lahf
nop
xor
jno
stos
and
push
sub
fs
xlat
andl
inc
jp
movsb
add
clc
test
test
pop
mov
pop
pop
stos
push
inc
cmp
test
je
aad
sub
push
inc
dec
pop
outsb
jmp
mov
fisubrl
icebp
fsub
mov
jg
pop
fincstp
cmc
add
gs
jecxz
dec
mov
xlat
jle
ret
shlb
ss
jne
mov
and
xlat
sti
push
jo
mov
xchg
mov
shr
dec
adc
leave
jns
pushf
adc
sbb
mov
test
scas
loopne
dec
fldenv
adc
imul
mov
lret
mov
add
push
std
stc
hlt
lods
das
mov
arpl
stc
imul
shl
in
icebp
popf
dec
rolb
icebp
scas
arpl
inc
lods
add
pusha
popa
test
shl
pop
loope
xchg
or
out
pushf
lds
popf
adc
xchg
cmpsl
jb
or
push
cs
lods
adc
mov
imul
jge
movsl
and
ret
sub
add
out
sbb
mov
jae
adc
inc
mov
std
xor
mov
xlat
sti
pop
cmp
jl
cmp
pusha
push
add
mov
nop
rcr
and
and
mov
mov
in
setle
repnz
push
fsubl
cmp
jno
pop
les
mov
lods
mull
jb
xor
mov
inc
pop
mov
mov
mov
jmp
mov
movsl
lret
push
les
xchg
ja
enter
or
jne
adc
dec
push
adc
ljmp
sarl
out
test
rolb
fwait
mov
sbb
xor
cmc
movsb
xchg
pop
jb
lock
sbb
scas
call
push
jb
decl
sahf
out
cwtl
cmp
test
js
inc
test
ja
cwtl
and
cltd
xchg
leave
clc
rcrb
lods
jle
pop
into
shlb
test
popa
add
aaa
lret
inc
add
hlt
aas
lods
or
into
rolb
xchg
pop
push
cmp
pop
stc
or
mov
and
xor
cld
fdiv
push
mov
testl
cmp
es
mov
add
jg
dec
push
sbb
insb
aas
arpl
and
mov
shrb
daa
out
stos
lcall
cmp
sbb
add
fimull
add
loopne
pop
lods
das
lret
hlt
and
mov
push
mov
or
pop
add
pop
lock
into
sub
adc
iret
xorb
xchg
popf
sub
and
jne
pop
cmpsl
test
popf
loopne
add
nop
cmc
xor
pop
adc
or
inc
jg
js
in
fcoms
pop
scas
xor
mov
stos
sbb
popf
pop
cmp
push
xchg
popf
sbb
or
and
xor
negl
dec
xor
nop
ret
mov
fwait
mov
mov
xor
push
inc
outsb
add
pop
inc
lcall
pop
mov
xchg
pop
push
xchg
in
stos
jp
add
movsl
mov
xchg
push
out
movsb
lods
mov
jmp
movsl
cs
orb
or
int3
and
js
call
sub
insl
inc
int3
fwait
push
push
cltd
push
jb
or
js
jae
mov
inc
adc
jo
rorl
xlat
push
push
adc
addb
ficoml
jle
dec
outsb
test
sbb
lcall
xor
loope
aad
or
push
into
lods
test
sub
mov
and
jmp
in
jmp
sbb
jo
repnz
inc
rcr
leave
sbb
and
insb
mov
mov
aas
or
popl
aaa
jb
jmp
inc
push
mov
repnz
cli
sub
cmc
outsl
lock
inc
push
sbb
loop
mov
mov
jno
pop
stc
inc
das
xor
mov
loop
aas
inc
mov
inc
pop
stc
mov
cmc
jp
xor
fldl
push
cmp
scas
cmpsl
or
push
sbb
cmp
in
idivb
add
push
inc
xchg
or
pop
add
lret
stc
icebp
and
pop
insb
pop
cmp
or
dec
fisubrl
in
sub
push
aas
icebp
mov
arpl
ss
sbb
xchg
mov
sub
repnz
rolb
mov
mulb
dec
push
sub
adc
rclb
push
and
ljmp
fsubs
bound
add
bound
lahf
mov
test
scas
out
pop
mov
mov
mov
aam
scas
or
jmp
pop
pand
mov
fnstcw
outsb
lcall
mov
cmpsl
loope
loope
popa
pushl
xchg
popa
in
imul
jle
mov
bound
xlat
sbb
sbb
jmp
daa
jecxz
cwtl
cmpsb
jg
mov
leave
adc
xlat
push
mov
jns
cli
aam
je
adc
ret
or
push
push
out
pop
add
sub
cmpsl
add
adc
loopne
ret
ja
fmuls
dec
and
add
mov
jnp
or
test
mov
dec
dec
sti
push
fists
jp
movsl
xor
and
hlt
gs
xchg
push
mov
in
jno
pop
aaa
sbb
xor
fists
jg
mov
xchg
popa
jmp
outsl
jge
push
mov
sarl
mov
arpl
arpl
pushf
rorb
lret
inc
add
adc
xchg
dec
cltd
mov
jno
adc
iret
xchg
xchg
cmp
cwtl
fst
jle
cwtl
jbe
movsl
sbb
dec
std
xchg
js
push
addr16
xor
jmp
imul
inc
xchg
and
push
and
xor
repz
mov
movsl
jb
jg
test
xchg
fs
adc
dec
mov
push
and
push
mov
and
xlat
push
lahf
movsl
cmp
ficoms
icebp
push
leave
imul
pop
mov
sub
inc
jl
loop
mov
loope
mov
adc
jge
pop
fs
xchg
int3
sub
sub
insl
cmpl
arpl
js
mov
and
das
jp
dec
jg
xchg
or
das
mov
outsl
dec
test
sub
push
hlt
ss
cmp
dec
sub
push
int
inc
mov
das
popf
stc
mov
fbld
cmp
push
shl
and
mov
and
mov
mov
sub
sbb
jnp
add
pop
out
sub
inc
fidivl
jbe
leave
js
cmp
sbb
stos
pslld
outsl
iret
pop
rclb
inc
and
and
and
push
push
push
fdivs
sbb
sub
push
pop
jns
ficoms
pop
push
inc
mov
xchg
adc
xlat
and
or
ss
pop
xchg
or
or
jb
ds
jecxz
and
loope
inc
enter
jp
jg
push
adc
roll
cs
push
sarl
sub
sbb
pop
add
sbb
mov
into
insb
test
loopne
push
out
mov
rcll
lahf
std
jp
or
inc
rolb
lahf
or
cmp
addb
leave
cmpb
sbb
xchg
jb
repnz
sub
repz
push
lret
test
pop
lcall
push
lcall
xchg
mov
into
cwtl
sub
or
inc
movsb
pop
les
std
leave
cmp
sbb
cld
mov
stos
jp
cmc
fnstsw
lods
xchg
cmp
lret
pop
and
jo
jg
mov
add
lock
push
push
pop
cli
cwtl
xchg
cmp
inc
or
fwait
lds
icebp
inc
enter
push
xchg
sbb
lret
mov
out
sbb
es
fldenv
mov
mov
ljmp
inc
out
xlat
cmp
xchg
fidivl
pop
test
xor
lea
fcomps
jo
nop
data16
fnclex
aad
mov
outsl
int3
aas
call
sbb
add
mov
out
adcb
arpl
mov
cmpl
call
div
mov
xor
xchg
or
loope
cmc
or
in
insb
into
jp
sub
scas
jns
ror
dec
test
inc
mov
rcll
add
and
fwait
iret
fnstsw
add
mov
push
or
popf
lea
inc
push
aas
gs
cmp
and
roll
js
fisttpll
jbe
inc
sub
jne
stc
shlb
jbe
xchg
ljmp
xchg
adc
mov
xchg
aaa
movsb
cmp
xor
call
mov
xor
lock
mov
lcall
popa
aas
xchg
decl
and
fisubrs
cli
or
fstl
dec
aaa
mov
fstpl
mov
inc
inc
inc
ret
add
test
hlt
icebp
lahf
je
ficompl
sti
xchg
es
andl
lods
leave
mov
das
cmpsl
and
insb
mov
cli
jmp
icebp
xchg
mov
js
pop
xor
xor
loope
cmp
add
inc
jg
or
xchg
icebp
xchg
gs
mov
sbb
mov
adc
int
roll
insb
jl
dec
and
fwait
inc
or
lods
add
dec
dec
cmp
sub
xor
ljmp
pop
sub
pop
gs
adc
and
adc
inc
ljmp
pop
aam
push
xchg
adc
testb
cld
cmp
add
lret
push
xor
jge
pop
inc
add
orb
mov
mov
jg
shr
jmp
lcall
and
les
imul
pop
mov
repnz
jno
leave
push
cmc
mov
jg
and
mov
jnp
pop
mov
shll
popf
or
mov
roll
push
divl
pop
cmpl
mov
mov
mov
sahf
cwtl
cmp
pop
pusha
les
bound
ret
popf
mov
nop
out
mov
push
jb
lods
pop
sti
cmp
cmpsb
mov
push
mov
jle
fmull
fdivr
xchg
out
cmp
mov
sub
shlb
call
daa
dec
cmp
fwait
inc
sbbb
cmp
jmp
mov
inc
iret
stos
imull
daa
fsts
inc
push
lcall
dec
aaa
pusha
jecxz
nop
decb
cmpb
movb
lret
imulb
cmpsb
xor
movsl
cs
outsb
out
cmp
aad
adc
fwait
test
jl
dec
sub
cld
loope
cwtl
in
add
cmp
jg
lcall
sub
nop
add
mov
push
add
jns
out
inc
jge
push
jb
bound
mov
fidivrl
jl
int
stos
lcall
lds
icebp
in
add
xchg
ret
in
ljmp
in
jae
add
lahf
sub
xchg
mov
jbe
inc
dec
xor
mov
jge
leave
shl
xchg
jmp
mov
adc
arpl
xor
test
popf
lret
jns
mov
sub
lahf
mov
jmp
pop
sub
pop
and
push
dec
xchg
or
add
mov
add
and
enter
mov
pop
loopne
jne
pop
xchg
mov
or
subl
orb
jge
add
es
jg
xchg
scas
js
into
pop
adc
cmp
mov
fcoms
inc
lret
loope
stc
xchg
xchg
imul
inc
outsl
pop
in
stc
sbb
scas
out
push
jmp
mov
dec
cmp
add
and
cltd
test
shlb
gs
aad
or
xchg
jae
push
mov
sbb
int3
ss
test
jo
and
fstpl
pop
lcall
mov
mov
inc
mov
je
and
mov
jbe
sbb
pop
push
mov
js
adc
rcrl
fistpl
out
outsb
xchg
sbb
cmpsb
ds
add
in
cmp
pop
sbb
or
in
sbb
icebp
aas
add
lahf
xor
leave
iret
mov
jbe
int3
sbb
orb
aam
jge
jno
cmp
mov
and
pop
cmp
pop
and
ds
lcall
fistl
ret
arpl
addr16
rorb
outsb
iret
shll
int3
cmpsb
push
xorl
sub
movsb
rcl
jmp
sub
mov
rol
cmp
sub
pop
movsl
loope
and
int
jl
lret
or
mov
bound
xchg
icebp
pop
inc
scas
icebp
push
mov
sub
int
xor
notb
ds
push
mov
in
cmp
xor
imul
andl
loop
lret
movsb
dec
or
scas
fwait
int3
mul
rolb
in
push
cld
push
sti
scas
pop
push
jp
imul
pop
insl
rep
cmc
ja
mov
add
sbb
sbb
dec
push
in
rcr
mov
scas
lods
mov
aam
fwait
movsb
dec
scas
sbb
cmp
pop
add
sub
push
pusha
pop
add
mov
inc
xchg
aaa
mov
testb
shlb
mov
lods
scas
mov
xchg
test
inc
dec
repz
cmp
adc
mov
dec
or
loop
sar
addr16
sbb
sub
scas
int
mov
jns
shl
inc
dec
stos
in
push
jns
shll
dec
xchg
insl
insb
mov
subb
inc
es
push
jbe
ret
out
call
push
push
cmpsl
add
stos
xchg
pop
lods
xor
pop
test
cmp
std
jnp
or
push
add
jne
mov
mov
add
push
or
into
lcall
outsb
lock
mov
fsubr
movsb
xchg
inc
dec
ret
xor
jo
scas
out
js
shlb
pop
insb
mov
jl
fistl
sub
jno
cmpsb
push
add
jnp
aas
iret
stos
rorl
add
lret
in
jl
scas
xchg
mov
mov
and
sbb
add
lahf
sbb
in
cmp
mov
cmpsl
into
fadd
dec
dec
lea
jge
leave
push
movsl
jo
xchg
pushf
out
aas
adc
mov
fists
shrl
dec
and
jle
hlt
pop
jb
out
pop
pop
jne
out
pop
shr
nop
mov
daa
fiaddl
shlb
fcmovnb
or
sti
and
dec
push
sti
cs
repz
inc
xchg
xor
inc
scas
ja
jo
je
pop
and
js
aaa
inc
loopne
sbb
mov
and
stc
xor
mov
inc
add
fsub
test
pop
xor
fwait
xchg
aad
out
inc
mov
add
mov
das
adc
pop
stos
lret
adc
cmpsl
hlt
mov
pop
das
test
fmul
imul
or
out
dec
js
and
bound
and
xchg
xchg
cmc
push
cld
das
cmp
sub
movsb
add
gs
clc
xchg
fists
in
cli
daa
out
ss
out
cld
scas
push
push
fidivl
push
push
shrl
mov
or
push
mov
fsubrl
test
pop
shlb
jno
std
std
inc
rclb
cmpsl
sub
ret
inc
jb
popa
je
lcall
imul
add
arpl
push
aam
sub
pop
xchg
sub
mov
add
leave
std
mov
movsb
enter
mov
jb
pop
out
nop
mov
cmc
pop
std
ficompl
xlat
pop
inc
xchg
sbb
mov
mov
enter
mul
push
ljmp
push
ljmp
mov
imul
xor
sub
dec
roll
fimuls
insb
addr16
jle
sbb
aam
iret
or
push
pop
pop
sbb
addr16
cli
insb
stos
dec
mov
insl
sbb
pusha
aam
pop
cmp
adc
mov
sti
iret
sbb
pop
fcoms
adc
mov
repz
cmp
aam
shll
mov
or
push
mov
and
push
dec
mov
push
and
mov
push
iret
int3
insb
or
add
sub
aaa
les
push
cmc
test
cmp
pop
insl
lock
mov
fistps
cmp
xor
cs
mov
les
mov
adc
rep
push
lock
mov
add
lret
out
pop
aaa
stos
je
sub
mov
jno
ret
sbb
xor
pushf
xor
xchg
sbb
xchg
dec
mov
or
scas
and
lret
notb
not
adc
add
cld
xor
scas
mov
xchg
and
inc
outsl
xor
sbb
or
push
out
aaa
clc
push
push
jmp
inc
xor
mov
jmp
ljmp
ret
mov
testl
adc
adc
repnz
test
mov
mov
pushf
je,pt
pop
mull
and
cmpsb
aad
cmpsl
lds
dec
jno
pop
dec
cmpsl
ja
adc
push
sub
sarl
dec
aas
cmp
and
test
sbb
test
fwait
inc
bound
xor
push
call
fidivl
xlat
xor
outsb
sbb
in
add
and
lods
mov
cmp
sbbb
or
outsb
imul
fucom
lods
xchg
sub
mov
add
inc
insl
xor
and
imul
loopne
das
icebp
jns
jmp
xchg
mov
dec
clc
aad
pop
loopne
in
icebp
in
in
push
test
rcr
rorb
lods
add
adc
and
xor
mov
pusha
adc
scas
sub
es
pop
inc
loop
jmp
or
lret
and
scas
inc
repnz
cmp
dec
and
cmp
sub
mov
push
xor
enter
pop
add
ja
mov
inc
cmp
inc
jb
adc
in
pmulhuw
adc
pop
lret
enter
adc
cmp
das
sbb
xchg
loopne
push
into
leave
stos
dec
xchg
test
ljmp
and
jno
xchg
je
fs
bound
jae
hlt
cmp
enter
movsb
mov
or
cmp
lock
pop
jae
pop
push
pushf
jp
sub
gs
jp
jae
push
jae
or
mov
filds
jno
lea
cmp
adc
or
rorl
orb
pop
mov
daa
adc
aas
fstl
xchg
andb
lret
mov
loope
test
lret
add
cltd
jmp
mov
add
xlat
nop
cmp
jmp
sbb
jle
in
mov
sbb
scas
push
xlat
or
in
popf
xchg
mov
das
dec
dec
mov
cld
es
mov
jge
cld
xor
cmpsb
jl
sub
mov
xlat
test
lcall
subb
stos
mov
test
out
push
ljmp
mov
add
mov
push
fimull
jae
mov
inc
rcll
fstps
fwait
inc
test
mov
cmp
mov
cltd
scas
scas
jge
xchg
movl
shll
cmp
mov
roll
lahf
dec
and
lret
inc
aaa
pop
push
xor
pop
mov
jbe
pusha
push
jg
shll
movsb
shll
rcrl
rcrb
xchg
mov
xchg
mov
mov
sbb
sbb
popa
push
mov
lret
cmp
flds
or
ror
stos
out
mov
out
mov
je
inc
fcoml
out
add
xchg
vpperm
orl
mov
sbb
inc
rorl
loope
ds
das
sub
jecxz
aad
cmp
adc
and
xchg
lret
mov
icebp
sarb
adc
popa
repnz
ficompl
pop
sbbb
ljmp
and
loope
adc
in
push
dec
fyl2x
adc
and
dec
push
xchg
jnp
popf
dec
cmpsb
es
popa
in
mov
stos
sub
fs
imulb
sbb
lods
pop
out
sbb
aad
in
push
repz
es
mov
stc
popf
div
cmc
xorl
push
fisubl
fisttpll
xlat
int3
xchg
inc
lds
xor
mov
sub
fmulp
xchg
jmp
push
mov
in
sti
push
movaps
add
hlt
roll
daa
mov
test
popf
stos
fucomi
arpl
or
roll
icebp
das
xchg
lret
mov
pusha
jge
jns
lcall
std
xor
lret
sub
and
fadds
xchg
push
jo
pop
or
in
stc
pop
in
adc
add
gs
fstpl
dec
pop
movsl
adc
lock
cmpsl
adc
add
xchg
shl
mov
jae
fisubrs
jne
sbb
xchg
sahf
add
adc
sub
cmpsb
push
sbb
mov
mov
lret
out
popf
cmp
test
add
adc
cmp
pop
dec
cli
mov
mov
bound
jecxz
mov
je
push
rorb
arpl
adc
inc
xor
shll
dec
fistpl
push
cmp
lods
xchg
pop
std
mov
sbb
movsb
shll
and
in
popa
push
int3
mov
inc
aas
push
mov
sub
jbe
pop
and
ds
sub
cmp
lods
adc
cmp
outsl
push
jecxz
arpl
repnz
addr16
xlat
sbb
mov
xor
pop
insb
cmp
xchg
adc
dec
adc
lret
lds
pop
es
in
cmp
imul
and
inc
dec
xlat
int3
cmp
cltd
sub
popf
xchg
xor
leave
or
rcr
and
push
pop
and
jo
mov
inc
leave
addr16
cmc
jge
clc
mov
sub
arpl
cld
lds
fdivl
jg
dec
out
sub
jno
pop
xor
fcoml
lock
aas
push
lret
push
xor
mov
pop
dec
out
xchg
out
pop
cld
cmpsl
rorb
vpmuludq
or
mov
incl
popf
fwait
xlat
xchg
xchg
adc
rorb
shlb
sbb
push
or
push
out
xlat
popf
push
out
mov
insl
ds
repnz
test
mov
xchg
cmp
lret
or
test
pop
lcall
or
sub
inc
insl
test
inc
and
dec
cmp
inc
xor
dec
xchg
jno
ret
push
sub
push
inc
imul
mov
mov
push
mov
arpl
fcoms
notb
fdivrs
cmpsl
and
arpl
xor
and
out
inc
add
int
je
sti
arpl
sbb
and
frstor
incb
sub
jecxz
enter
scas
sbb
enter
mov
sbb
xor
jp
push
loope
push
fsubrs
sub
push
rcl
stc
pop
in
je
pop
gs
cld
adc
dec
fs
xor
test
xor
das
push
dec
ret
int
orl
push
and
mov
andl
sbb
jmp
mov
mov
push
pop
lock
jns
jl
stc
pusha
iret
out
in
jecxz
iret
pop
jbe
sar
push
mov
gs
push
lods
out
aam
or
loopne
insl
push
mov
push
hlt
fmuls
xor
mov
lds
sbb
jmp
inc
gs
xor
dec
push
cli
test
xchg
mov
insl
rcr
pop
stos
arpl
ficoml
and
imul
mov
mov
adc
dec
mov
jb
icebp
iret
sub
fcmovnbe
xor
jle
inc
add
ja
sub
mov
rorb
xchg
stos
mov
xchg
mov
xchg
inc
addl
lock
xor
fcomip
xchg
xchg
dec
mov
repz
sbb
adc
xchg
jne
fldenv
cmp
cmp
push
sub
jnp
hlt
xchg
mov
push
cmp
xor
mov
mov
sbb
leave
imul
adc
mov
or
xor
cmpsb
xchg
cmp
jne
dec
mov
aas
push
push
xchg
into
popl
lock
pop
mov
pop
repz
pop
and
adc
data16
icebp
cmpsl
cmpb
inc
imul
xlat
sbb
xchg
scas
ljmp
inc
cmc
stos
int
adc
jl
pop
cmpsb
stos
lcall
or
lea
das
stos
and
xchg
or
jo
xchg
sti
fwait
push
cmp
mov
xchg
push
mov
icebp
push
and
leave
cmp
mov
lods
out
fisubrs
xchg
xchg
mov
pop
and
xor
jl
lcall
xchg
mov
aas
xchg
pop
xorl
cmp
cmpsl
bound
xchg
jp
out
cmp
arpl
std
mov
into
xor
mov
jge
out
xchg
push
mov
es
sbb
cmp
pop
mov
pushf
add
aaa
pop
gs
xor
mov
int3
ficomps
push
push
clc
push
repz
ljmp
mov
sub
push
jnp
fcompl
dec
mov
mov
jp
mov
xchg
add
scas
cmpsl
jle
jmp
pushf
mov
mov
test
sub
jp
xor
jo
loop
jle
xchg
mov
fs
pop
int
mov
call
inc
jno
xlat
push
inc
mov
cli
cmp
pushf
sbb
inc
jecxz
mov
inc
jg
xlat
rorl
call
mov
push
or
test
cld
push
pop
mov
movsb
es
push
inc
pop
cli
mov
daa
mov
add
xchg
jmp
and
add
dec
or
imul
mov
cmp
in
add
or
js
or
call
and
loop
icebp
xchg
fists
lret
ja
outsb
add
xchg
cmp
clc
daa
push
lods
dec
sar
dec
mov
inc
xor
mov
sub
adc
inc
mov
js
inc
repz
mov
pusha
pop
ret
inc
repnz
lds
adc
jg
sub
imul
js
mov
mov
lods
nop
sbb
cmpsl
jmp
shll
jg
in
dec
test
xor
addb
pusha
mov
and
mov
or
add
dec
hlt
js
fwait
imulb
inc
sub
and
filds
xor
js
push
adc
mov
lcall
adc
adc
js
incl
orb
mov
or
jmp
xchg
enter
repnz
mov
dec
lds
das
je
btr
or
xchg
mov
mov
push
add
mov
inc
push
sbb
mov
je
shll
lds
das
les
fidivrs
bound
imull
jne
lret
lock
movsl
shll
enter
mov
loope
push
out
mov
daa
mov
push
pop
negl
lcall
mov
mov
push
and
or
pop
adc
mov
mov
jg
ljmp
jbe
mov
sub
lods
cmp
ret
nop
rcrl
mov
cmp
mov
imulb
adc
idivl
xchg
aad
push
push
imull
jne
mov
mov
inc
inc
pop
jmp
out
push
int
dec
shll
out
cli
dec
inc
and
bnd
daa
add
inc
jae
cmp
mov
js
dec
mov
out
stos
mov
jns
out
out
cli
lea
dec
faddl
add
mov
cli
and
lock
mov
push
xchg
hlt
clc
lock
mov
movsl
cmp
sti
fsts
js
push
enter
fwait
lcall
push
xlat
sub
pop
mov
leave
xor
jl
stc
lret
fucomp
aad
inc
xchg
les
or
mov
pop
popf
fimull
andl
cmp
xor
cmp
lcall
fwait
push
jg
lret
movsl
sbbb
in
aas
mov
loopne
cmp
adc
xchg
jl
test
adc
mov
imul
xchg
sub
imul
cmp
cmp
insb
push
mov
dec
sbb
jmp
mov
sub
es
xchg
sbb
mov
incb
jbe
add
cld
insb
stos
adc
pop
inc
mov
dec
loopne
stos
gs
mov
jb
cmpsl
jp
pop
pop
xor
mov
mov
xor
inc
jmp
insl
jno
jle
xor
adc
cmp
mov
repz
daa
dec
mov
push
cvttps2pi
dec
jmp
testl
in
dec
inc
add
sub
xor
imul
add
fcomp
ret
lods
repz
sarl
sub
mov
ficompl
mov
fsubs
or
jp
or
aam
dec
jnp
int3
jne
jecxz
xchg
xchg
fwait
loope
add
filds
div
mov
push
mov
mov
cs
cld
mov
xchg
fsubl
cmc
jge
pop
xchg
xchg
jae
mov
mov
mov
cmp
add
add
sbb
xorb
js
scas
cmp
test
lock
mov
pop
mov
jno
jns
pop
pusha
je
popa
repz
cmp
scas
fwait
xor
adc
filds
aad
sbb
jge
cmp
push
popf
cld
jecxz
shlb
pop
fs
popa
mov
xchg
sbb
xor
sub
mov
out
es
leave
fsubp
push
push
push
xchg
xorl
and
sub
jl
inc
mov
arpl
mov
idiv
sbb
and
inc
aad
scas
cmp
ret
jae
int3
cltd
into
push
out
ja
add
sahf
xor
mov
pop
lods
xor
addr16
jl
cltd
cmp
inc
loopne
fldt
jns
mov
cltd
xchg
push
repnz
push
repz
dec
mov
stc
add
gs
mov
mov
dec
aam
int
pop
adc
je
mov
rorb
push
inc
push
insb
mov
inc
jge
or
mov
add
outsl
daa
mov
mov
insb
ret
out
cmpsb
mov
or
add
mov
add
dec
dec
jbe
jmp
mov
test
jle
call
fstpl
imul
mov
pop
addr16
pop
into
rolb
or
xchg
pop
or
adc
out
mov
std
sahf
cwtl
xchg
push
sbb
cmp
and
dec
repnz
jns
inc
and
push
mov
jle
outsb
pandn
adc
xor
popf
idiv
popa
adc
fwait
ljmp
sbbb
sbb
ljmp
push
mov
lods
mov
push
push
subb
js
mov
lret
push
xor
mov
call
pop
iret
jmp
adc
imul
outsl
jge
out
push
nop
or
bound
dec
mov
dec
jg
stos
add
arpl
and
xor
int
dec
in
sub
sarb
ficompl
mov
aas
mov
lea
push
test
adc
xor
clc
fdivr
jmp
lods
and
fcmovnb
push
imul
popa
js
sahf
shlb
lds
pop
mov
outsb
pop
and
xor
jg
aaa
or
andl
jb
arpl
push
loope
or
mov
shlb
aam
add
mov
mov
in
mov
dec
scas
shll
loopne
mov
or
rcrl
inc
mov
das
fildll
popa
cltd
imul
test
enter
sub
xchg
sub
hlt
add
push
push
pop
clc
dec
jle
adc
add
dec
mov
xchg
dec
mov
and
xor
insl
loop
inc
jne
fwait
popa
xchg
sti
movl
push
js
fadds
pop
push
mov
jg
test
in
jecxz
popf
rolb
fnsetpm(287
adc
jge
mov
add
ja
sbb
popa
and
sub
scas
loope
fcomps
mov
out
cli
cvttps2pi
adc
cmp
test
push
lret
movsb
out
fsub
popl
xchg
popa
adcl
adc
pop
mov
sub
push
imul
rcr
or
subb
test
dec
enter
inc
iret
sub
mov
cmp
xor
sbb
sub
push
xchg
pusha
andl
dec
push
xchg
inc
xor
pop
imul
push
mov
icebp
dec
stos
lea
cli
ret
fimuls
pop
in
push
int
add
cwtl
adc
mov
fstpl
adc
mov
bound
fsubl
push
nop
inc
pop
pop
in
push
inc
sbb
mov
test
std
xor
insl
jmp
stc
adc
fwait
popa
imul
rol
ljmp
add
rcrl
pop
adc
loop
add
push
or
dec
movsl
mov
ljmp
cld
xor
or
leave
das
dec
sbb
pop
scas
inc
sub
and
cmp
jb
mov
or
daa
sbb
les
xchg
loope
mov
mov
cmp
lods
dec
mov
jmp
shrb
test
subb
fnsave
and
jge
cmpsl
roll
xor
and
iret
jb
lcall
push
lods
in
aad
hlt
notl
mov
loopne
iret
ret
sbb
xor
xor
rcr
imul
xchg
jmp
aad
ret
pop
cmpsb
bnd
popf
push
scas
mov
scas
int3
dec
jnp
inc
nop
adc
push
enter
inc
mov
jo
les
ret
xchg
mov
mov
rcrb
xchg
xchg
jae
dec
pushf
daa
call
pop
pop
jmp
adc
pop
aad
fsubl
jne
push
pop
add
push
xlat
out
ljmp
and
mov
arpl
fldenv
inc
cmp
adc
cmp
jnp
pop
lock
movsl
in
and
jo
insb
fdivrl
aad
push
mov
inc
mov
xlat
jle
cli
scas
in
int3
mov
cmp
cmp
pop
les
loopne
adcb
jae
push
popf
lret
sti
in
in
int3
pop
push
mov
xchg
scas
pop
mov
clc
loope
std
inc
roll
test
and
mov
xor
sub
inc
adc
cmc
push
dec
pop
lds
mov
add
add
adc
xchg
shll
pushf
dec
push
mov
lods
adc
mov
add
movsb
push
xor
dec
push
dec
lret
out
insl
sar
imul
or
sbb
cli
inc
dec
shl
jnp
sbb
lea
imul
fidivrl
cli
jnp
sub
ss
xorl
outsb
je
cmpsl
mov
xor
outsb
jge
or
outsb
add
sub
jo
sbb
data16
cwtl
fwait
pop
adc
sub
test
inc
mov
push
in
pop
xor
in
push
lret
mov
idiv
sub
gs
pop
stos
mov
pop
jnp
jo
xchg
dec
inc
movntq
mov
mov
mov
push
in
jne
and
pusha
mov
rcll
inc
dec
fldcw
jg
mov
xor
push
pop
enter
jb
sub
sbb
sarb
out
fmul
cmp
ret
push
or
jbe
mov
testl
testb
jns
dec
sti
addl
pop
push
mov
cmpl
in
mov
jg
dec
sbb
leave
mov
fnsave
xchg
cmp
add
and
scas
adc
outsl
mov
push
addr16
cmp
dec
std
std
inc
clc
sbb
xor
lods
push
imul
and
lods
lods
mov
dec
inc
cmpsw
stos
scas
cs
cmpsl
sbb
pop
rclb
mov
les
pushf
sti
lea
rolb
or
hlt
dec
fwait
loop
pop
addl
rorb
inc
lea
in
adc
mov
mov
mov
sahf
movsb
xor
js
test
mov
mov
rcrl
and
xchg
std
lock
and
xchg
mov
or
push
mov
popf
ljmp
bound
cmp
add
dec
xchg
mov
cmc
test
jmp
mov
pop
push
xor
mov
shl
insb
sub
roll
adc
push
inc
sbb
dec
mov
rcr
mov
or
out
js
movsl
dec
mov
xchg
icebp
or
cmp
rorb
inc
fiadds
adc
cmpsb
roll
ss
pop
psrlw
ljmp
adc
addw
inc
movsb
fnsave
bound
pop
call
push
sub
push
fcmovbe
mov
mov
or
xchg
int3
push
xor
add
adc
pop
push
adc
gs
int
jbe
inc
mov
sbb
les
sub
jl
in
and
in
dec
jo
lds
jne
dec
mov
xchg
ljmp
inc
in
stc
dec
jp
mov
xor
sti
push
mov
subb
subb
je
sub
and
and
stc
and
fstpt
fisubrl
jo
out
in
mov
push
cwtl
jmp
push
arpl
jle
pop
sarb
push
call
xor
mov
negb
mov
fwait
add
mov
push
neg
push
sahf
pushf
stos
leave
xorb
das
inc
and
sub
add
xor
mov
sub
ljmp
inc
inc
leave
cli
movsb
arpl
inc
addr16
mov
mov
adc
push
int
jl
and
xchg
sbb
imul
push
insb
adc
mov
int
push
cmp
xchg
jae
add
or
sbb
mov
mov
xor
lcall
push
xlat
sbb
mov
pop
imul
dec
movsb
pusha
pop
in
cltd
push
mov
push
pop
daa
mov
pop
add
and
jb
dec
mov
dec
ljmp
inc
sahf
addb
pop
gs
sti
jl
lcall
fstpt
fsubrl
outsb
fidivrs
sti
hlt
daa
sub
sti
mov
pop
mov
xchg
dec
fmull
outsb
dec
lock
pop
or
mov
ss
jno
mov
sub
adc
lahf
adc
stc
xchg
pop
sbb
and
lods
das
jp
jne
xchg
negl
sub
cli
test
clc
cmpsl
push
fsts
dec
out
les
lahf
test
orl
nop
push
dec
jp
test
pop
cwtl
fs
bound
push
pop
xor
mov
das
cmpl
fsubp
out
nop
mov
and
in
jmp
in
pop
mov
cli
push
lret
inc
adcb
stos
jbe
int3
test
idiv
xchg
loope
rcr
jbe
xchg
jmp
sub
stos
pop
leave
test
mov
and
pop
push
add
mov
jno
pop
mov
in
push
dec
jg
aas
das
or
sbb
cmpsl
mov
pusha
cltd
pshufw
in
mov
or
adc
or
mov
shll
xchg
dec
ss
pop
xchg
outsb
sub
sbb
sbb
test
add
xchg
dec
not
sbb
inc
mov
cmc
push
bound
imul
push
dec
ja
arpl
repnz
xchg
nop
push
add
jne
sub
pop
xchg
mov
xchg
imul
lret
popf
and
call
mov
adc
movsb
xor
inc
dec
mov
mov
mov
mov
push
ret
dec
xchg
pop
not
inc
adc
gs
jg
pop
mov
xchg
das
sahf
jno
cld
pop
adc
rol
and
mov
or
mov
sub
imul
pushf
rorb
cmp
sub
adc
jmp
fidivrs
mov
xor
push
insl
push
into
jnp
rol
jge
xchg
mov
roll
jl
dec
fisubs
sbb
mov
ret
add
mov
fcomi
fdivr
and
mov
cwtl
test
adc
iret
cmp
adc
movsl
insb
push
sbb
int3
pusha
or
or
mov
repnz
jae
sbb
push
test
adc
addr16
mov
inc
imul
cli
fsubrs
push
dec
ljmp
mov
scas
adc
out
jb
or
push
sub
mov
or
xor
jne
inc
cmp
pop
inc
pop
push
hlt
jge
cmpl
out
sti
push
ss
mov
mov
divl
push
pop
dec
sbb
leave
xchg
cmp
sti
in
adc
sub
fsts
xor
mov
sbb
rorb
imul
mov
cld
lods
sbb
fsts
mov
imul
push
mov
fsubrl
xor
fs
mov
in
scas
pop
fwait
mov
and
jle
or
bound
dec
sbb
jg
in
add
imul
sbb
inc
mov
aaa
popa
lahf
shlb
imul
mov
shlb
jmp
xchg
inc
mov
roll
xchg
push
cltd
inc
int3
mov
ljmp
pop
addr16
out
daa
jge
outsb
xor
decl
mov
out
jp
cmp
pop
shlb
or
xor
mov
mov
dec
jb
loop
loop
dec
pop
adc
or
pop
sarl
xor
btc
loopne
sub
add
shlb
inc
pop
or
jecxz
mov
andl
jo
rcrb
aaa
inc
sbb
icebp
fsub
pop
mov
adc
stos
push
lcall
adc
dec
cmp
jae
pop
mov
pop
lret
push
inc
icebp
shrl
pop
lret
cmpsl
mov
daa
rorl
cmp
ja
js
mov
mov
xlat
jle
mov
mov
fisubl
sbb
push
jmp
scas
in
xlat
lahf
scas
xchg
mov
pop
sarl
dec
jbe
jmp
jns
out
jmp
push
adc
dec
xchg
jns
xor
cltd
dec
jecxz
addr16
sarl
lods
jbe
mov
rcrb
mov
js
jl
or
push
dec
xchg
std
xor
stos
cmp
daa
out
out
xor
jno
cmp
into
mov
sbb
xchg
enter
xor
xchg
or
mov
in
pop
imull
fistps
jge
js
pop
pusha
ds
test
sbb
shl
xor
aad
sahf
xchg
push
stos
loope
lret
pop
fadd
xchg
jae
test
dec
mov
in
xchg
inc
test
dec
adcl
addr16
jmp
cltd
in
inc
jmp
adc
out
add
or
out
add
frstor
pop
in
popa
or
push
push
ds
lock
mov
mov
hlt
mov
bound
pop
sub
lahf
jns
fists
sbb
adc
jno,pt
sahf
and
xor
mov
mov
inc
or
mov
push
enter
xor
lds
int
movsl
dec
enter
pop
jno
pushf
pop
mov
cld
push
and
out
mov
and
sub
faddl
jge
mov
add
stos
sbb
es
in
sbb
in
push
outsl
sbb
icebp
dec
inc
adc
xor
jmp
sub
push
push
out
xchg
sub
add
mov
clc
cmp
xor
sahf
cmpsl
fs
sub
jb
testl
pop
rcl
pop
icebp
mov
jne
jnp
cmp
dec
jl
fldt
fnstenv
loop
aad
adc
mov
and
jns
sub
scas
dec
jno
lock
daa
stos
mov
daa
lock
repnz
xor
xor
sti
aaa
mov
movsb
xor
in
mov
mov
mulb
mul
inc
lds
orl
imul
js
ss
rclb
sbb
repnz
sub
iret
pop
pop
pushf
scas
sbb
xchg
cmp
push
and
xor
mov
xchg
xchg
lret
push
mov
outsl
les
mov
loopne
push
imul
mov
xor
add
jno
in
ret
in
xlat
xchg
mov
ret
adc
jl
ljmp
and
bound
push
in
cld
mov
aas
sahf
mov
stos
mull
adc
dec
or
xor
jg
in
leave
lock
cmp
stos
jl
cmc
pop
movsl
je
or
jg
jns
push
stos
jg
sub
cmp
inc
add
nop
gs
cli
fdivr
jb
add
and
sbb
xchg
movsl
mov
ret
rolb
cmp
mov
btr
leave
push
add
pop
gs
shlb
std
xchg
icebp
outsl
loop
cltd
ficompl
or
int
repz
mov
mov
jo
mov
jo
shrl
sbb
mov
jmp
dec
js
sbb
jb
push
ja
test
sbb
fcmovb
and
in
mov
pop
or
pop
movl
test
inc
ds
das
cmpsl
mov
push
pop
sbb
cwtl
stc
mov
xchg
and
sub
sti
add
mov
dec
es
xchg
popf
outsb
jg
pop
sbb
ss
mov
pop
mov
mov
mov
or
add
divl
rcr
lods
sbb
mov
dec
pop
and
or
inc
adc
mov
lret
cs
sarb
mov
add
jmp
jle
or
xor
aaa
loop
int
repnz
jmp
fistps
or
xchg
cld
adc
sbb
addr16
stos
in
fcmovnu
pushf
inc
sub
add
outsl
jecxz
unpcklps
or
add
pop
pop
imul
negl
push
xor
outsl
push
mov
out
fadds
dec
or
jne
imull
hlt
mov
xlat
loopne
das
sbb
and
mov
lock
push
cmp
icebp
ficoms
sub
hlt
insl
lret
shl
stos
mov
into
jge
jmp
cli
loopne
shrl
and
dec
mov
mov
cmp
mov
sub
cld
enter
enter
aad
jnp
mov
imul
or
or
sub
xchg
sarl
test
adc
cld
mov
imul
push
jmp
jecxz
jb
dec
ja
mov
jecxz
aas
xchg
xor
sbbl
sarb
xchg
and
out
iret
ret
andb
cmpb
imul
or
pop
arpl
aas
or
add
rcll
pop
inc
das
in
jmp
dec
out
stc
mov
push
jge
cld
xor
notb
test
outsl
push
fsubp
out
mov
loope
lods
iret
insb
jmp
xchg
fidivrs
xchg
and
insb
int3
mov
fwait
sbb
pop
pop
addb
cmp
popa
jle
mov
or
adc
mov
add
mov
push
jg
adc
xchg
repnz
ja
repz
sarb
movsb
inc
xorb
scas
je
fsubr
fimuls
imul
popa
ss
xchg
lock
push
test
fsubl
push
and
pop
cltd
pop
pop
cmc
cmp
mov
out
fdivp
sahf
test
push
shl
ret
out
ret
fcmovb
ss
out
mov
inc
flds
mov
or
cltd
movsb
lcall
push
push
inc
stos
outsb
mov
cmc
pop
mov
rorb
icebp
aam
dec
adc
ret
xchg
jl
sahf
or
fisttpll
sahf
lret
mov
mov
xchg
pop
pushf
jo
out
mov
mov
icebp
imul
fadds
cmpsl
xor
fwait
add
sahf
jbe
punpckhdq
inc
lods
sub
fisubs
fnstcw
push
repnz
jge
sub
icebp
inc
repnz
jp
lods
mov
push
sub
dec
ljmp
popa
outsl
daa
xchg
test
adc
cs
ja
lea
in
mov
les
dec
xor
dec
mov
nop
jo
mov
sbb
sub
mov
jbe
aas
cmp
pop
fnstenv
xorl
inc
adc
add
test
jge
cwtl
pop
movsb
inc
movsb
insb
sub
mov
pop
cmp
add
or
jo
adc
adc
xor
mov
test
sbb
cwtl
data16
xor
repz
inc
call
ja
ss
aas
sub
das
add
das
add
mov
inc
jecxz
scas
ljmp
bound
mov
movb
sbb
xor
xor
mov
test
jmp
es
mov
cmc
mov
addr16
cmp
sub
movsl
cmpsl
mov
xorb
fdivrl
sbb
or
push
jp
and
pop
pop
mov
sub
pop
mov
mov
cltd
sahf
lret
inc
fidivl
hlt
das
out
test
inc
xchg
aas
jbe
inc
jo
inc
test
dec
pop
in
xchg
xorb
dec
cltd
dec
sub
sub
jle
mov
lret
xor
loopne
pop
ljmp
imul
or
sub
test
divl
mov
cmpl
sub
call
xchg
add
test
inc
loop
and
cld
adc
cmp
out
or
jmp
push
cmp
test
lds
or
ret
les
popf
fisttpll
sub
and
jns
mov
push
push
ljmp
inc
popa
cmpsl
and
outsl
inc
xor
mov
movsb
lret
test
add
dec
insb
rcr
fsubr
outsb
scas
movsl
jae
stos
and
mov
inc
xor
xor
mov
mov
inc
pop
sub
popa
je
add
test
imul
sub
or
sbb
test
or
dec
jb
push
bnd
or
stos
push
icebp
test
lock
imul
push
hlt
je
add
out
cltd
dec
cwtl
clc
adc
leave
pusha
xchg
jmp
cmp
inc
es
enter
mov
in
stos
in
or
stc
arpl
in
xchg
pushf
inc
repz
jle
std
inc
fildl
jle
mull
xor
jb
addb
adc
lds
imul
push
sub
jp
mov
stos
iret
imull
mov
lret
cwtl
out
hlt
xchg
les
stc
xchg
movsb
pop
subl
add
add
call
dec
inc
mov
lods
sbbl
aad
fdivs
add
dec
inc
add
cmc
push
sbb
repnz
ja
out
add
mov
setp
xchg
xor
out
adc
jecxz
fdivrl
test
and
sub
test
inc
cwtl
outsb
cmc
movsb
hlt
cmpsl
gs
int3
and
lahf
dec
mov
lods
pop
aaa
aaa
mov
and
in
sub
cmp
je
jno
add
lret
sbb
and
adc
divl
jns
movsb
lea
dec
push
mov
clc
fdivs
in
addr16
pop
insl
div
daa
push
xlat
lds
nop
xor
icebp
lea
into
or
mov
in
mov
ds
jmp
hlt
jnp
inc
mov
in
xlat
aas
test
jge
cmpsl
mov
push
das
or
fsts
dec
daa
jp
xchg
inc
xorl
loopne
sbb
pop
pusha
xchg
mov
add
sub
das
pop
mov
ret
getsec
out
jmp
ja
pop
sti
jbe
jb
inc
pop
pop
inc
push
mov
xor
xchg
cmpsl
test
mov
cmpsb
jb
fdivrp
out
push
lea
push
jge
xchg
inc
into
in
mov
adc
sar
mov
repnz
lds
adc
int3
sbb
movsl
push
cli
jns
icebp
aas
push
fsubp
fdivrl
or
pop
mov
out
add
pop
mov
and
inc
inc
push
lock
pop
movsl
adc
mov
jb
shl
repnz
and
fisttpl
jnp
xor
mov
in
clc
cmc
jns
into
repnz
sarl
cmpsb
pushf
pop
fcompl
mov
ret
mov
dec
or
fdivrs
inc
shlb
push
add
stos
loopne
les
cld
out
inc
push
jp
dec
cmpsl
leave
pop
inc
push
mov
mov
mov
and
inc
xor
sti
aas
repz
dec
mov
mov
testb
pop
push
daa
jne
inc
fs
push
leave
iret
divb
jbe
sub
xchg
dec
cmp
sub
ljmp
mov
or
sarl
cltd
sub
data16
push
ds
xlat
test
test
mov
jne
sub
lock
stos
iret
fistps
or
cmpsb
mov
sbb
pop
inc
hlt
cli
xor
loope
jno
pop
shll
rorb
mov
popf
icebp
test
je
dec
lock
mov
mov
xor
xchg
addr16
dec
lock
sbb
outsb
xor
add
movsb
adc
jmp
mov
sub
mov
sub
or
push
cs
pop
stos
pop
mov
out
lods
xor
and
stos
loopne
loope
cmovb
setp
imul
ret
je
jmp
cmpsb
mov
push
aas
int3
inc
pop
inc
sbb
stc
sub
test
testb
leave
inc
push
lahf
prefetchw
or
dec
cmpsb
xor
jge
and
cmc
sub
dec
lds
cmpsb
fwait
jbe
cmp
and
xchg
outsb
fcomps
stos
inc
mov
jg
enter
movsl
shl
ficoml
jge
leave
testl
jmp
cmpsb
dec
imul
add
pop
aaa
sbb
inc
stc
xchg
jb
fucompp
add
mov
push
adc
rorb
mov
icebp
mov
pop
ljmp
test
sti
push
pop
dec
pushf
in
pushf
pop
mov
mov
adc
xchg
mov
mov
push
scas
push
into
sub
xchg
pop
jecxz
test
add
daa
mov
ljmp
lea
and
mov
ss
pop
jecxz
cmp
mov
jp
clc
nop
scas
in
pushf
mov
fcomi
mov
sub
add
test
shl
lret
test
hlt
das
ret
pop
jecxz
arpl
mov
in
fcmovu
xchg
mov
shlb
dec
adc
addr16
movb
mov
mov
loopne
pop
out
int3
stc
jnp
in
int3
dec
cmc
icebp
push
push
dec
loope
loop
and
mov
adc
ret
leave
xchg
in
xchg
sbb
push
dec
pop
aaa
and
cmp
xor
fdivl
fildl
int
sahf
pop
push
addb
cs
sarb
or
iret
stos
inc
scas
cmpsl
dec
cmp
add
xchg
and
jl
push
add
ja
popf
int3
cwtl
or
sub
adc
jne
sub
ss
scas
pop
fiaddl
mov
or
sbbl
pop
pop
lret
mov
xchg
repnz
aaa
int
daa
xchg
inc
adc
pop
mov
jg
mov
wrmsr
push
pop
addb
inc
aam
push
bound
sbb
jns
dec
mov
testb
scas
or
pushf
mov
aas
fisubrs
addps
mov
mov
insl
mov
jne
and
cmp
jmp
jae
dec
in
jae
add
add
add
xchg
mov
jo
fildll
jge
pop
sbb
push
lahf
popa
adc
mov
les
ljmp
sbb
push
fildll
insb
jge
or
loope
imul
jns
mov
mov
add
and
adc
or
cmp
mov
scas
loop
mov
cmp
outsb
roll
shl
shll
mov
or
scas
cmp
xchg
lahf
int
ja
jl
fcmovb
aad
xor
loopne
cmpsb
xorl
jl
mov
divl
in
xor
push
jb
xchg
ss
call
dec
sbb
insl
xchg
jnp
jo
test
ret
je
xchg
dec
test
cmp
sbbl
inc
dec
adc
popf
xchg
lahf
push
ss
daa
repnz
imul
dec
insb
xchg
sbb
or
cwtl
add
adc
adc
fiadds
cmp
push
dec
xchg
cmp
inc
loop
ss
in
xchg
mov
js
shr
out
outsb
out
cmp
mov
cmc
xchg
into
mov
push
in
outsl
push
das
push
scas
lods
int3
cwtl
mov
sub
dec
push
scas
mov
mov
lock
push
sbb
popf
cmp
divb
xchg
fsubp
nop
sub
insb
popa
mov
pushf
imul
mov
inc
sahf
lods
dec
sub
lahf
les
mov
fmul
push
adcb
xchg
addb
mov
ror
and
fwait
sarb
mov
xchg
insb
mov
sbb
sbb
or
pushf
mov
repz
cmpsb
sub
jl
ret
add
repnz
cmp
int3
inc
mov
mov
hlt
out
sub
push
adc
sbb
gs
ret
daa
mov
sbb
mov
push
aas
je
or
sbb
cmp
gs
int
lea
fnstcw
daa
in
pop
mov
shl
lds
int
popa
out
jnp
cwtl
sub
das
pop
cltd
add
sub
jno
pop
pop
xor
xor
movsl
push
jno
jbe
xchg
jae
or
out
xchg
fs
inc
add
stos
int
mov
in
jecxz
xor
mov
sti
add
add
rcrl
jae
pop
ds
cmc
fnstenv
mov
bound
sub
mov
test
ds
test
shlb
push
les
or
cmp
addb
lcall
sbb
jno
and
inc
jmpw
outsl
fiaddl
sub
sub
mov
mov
xor
xchg
insb
cltd
outsb
mov
jae
and
jmp
sub
fsts
loop
push
xor
inc
shlb
pop
ds
mov
ja
loope
loop
pop
mov
dec
add
call
dec
mov
movsb
jl
aas
push
gs
iret
pop
ljmp
decl
and
clc
sbb
xlat
mov
sti
jecxz
hlt
mov
fwait
aad
add
and
js
loopne
mov
adc
dec
mov
out
xchg
or
into
inc
add
jg
mov
push
roll
xor
cmpb
mov
jo
test
inc
xchg
movsb
shrb
js
loopne
dec
or
dec
sti
cmpsb
sar
jbe
popa
ds
out
dec
pop
cmc
or
mov
jmp
jae
push
out
xor
push
call
push
daa
andb
cmp
sarb
adc
out
xor
hlt
enter
mov
aad
enter
and
shr
addr16
leave
sbb
paddb
jmp
loopne
int3
imul
dec
popf
pop
mov
dec
int3
call
cmpsb
cwtl
ds
movl
jae
fidivl
mov
mov
mov
imul
adc
jno
bound
push
push
repnz
in
add
movsl
jge
je
dec
dec
fsubs
int
pop
sahf
fwait
push
sbb
imul
test
push
das
pop
stos
fwait
pop
cmpsl
ja
stos
xchg
push
nop
xchg
repz
adc
push
or
rcr
xchg
fdivs
inc
mov
sarl
add
inc
pop
imul
rcll
outsb
jno
out
rcl
mov
push
xchg
mov
jge
out
mov
gs
clc
or
repnz
sbb
xchg
out
xchg
push
cwtl
data16
adc
ret
jle
scas
and
pop
add
jg
xchg
or
mov
js
pop
inc
dec
rclw
aaa
ja
fsubrs
cmpsb
test
cmp
dec
flds
cld
sbb
fcmovnb
pop
push
add
adc
dec
add
sahf
lods
sbb
xchg
js,pt
dec
push
xor
pop
and
pop
insl
stos
mov
adc
mov
mov
lods
arpl
pushf
bound
xchg
imul
inc
add
mov
cmc
pop
loop
mov
mov
rol
in
daa
pop
rorb
inc
push
jae
aam
lret
cmpsb
mov
mov
add
daa
cmp
fwait
gs
dec
xchg
inc
xor
call
pop
mov
jbe
lock
clc
das
mov
pop
xor
sub
add
push
cmp
pop
mov
jge
pushf
lcall
sbb
inc
outsl
mov
or
jbe
nop
and
fidivrs
incl
xchg
jb
lahf
mov
cmpsb
addr16
push
call
adc
mov
pop
push
sub
inc
cmp
sub
pusha
jb
jo
mov
fsts
into
inc
roll
sbb
pop
fstpl
out
data16
cli
aad
out
jo
popa
rol
xchg
mov
pop
dec
test
es
adc
addr16
mov
pushf
out
cmp
js
adc
xor
add
aam
test
sbb
ficomps
push
stos
cld
inc
pop
out
fisubs
loopne
and
icebp
xor
mov
aam
push
or
xchg
aam
or
push
adc
fistps
iret
fwait
lret
xchg
pop
movsb
pop
jb
adc
lret
shrb
sub
xchg
cli
push
mov
enter
popf
ret
pop
pop
jecxz
cmp
and
outsl
mov
bnd
lcall
push
ljmp
mov
dec
mov
inc
mov
or
ljmp
fdiv
cs
cmp
das
sarl
jne
lock
dec
into
in
cmp
mov
push
idivb
xchg
hlt
in
cli
or
push
mov
mov
cmp
test
xlat
push
rcrb
in
mov
inc
push
insl
imul
dec
adc
imul
xchg
icebp
xchg
popa
xchg
push
lock
fistps
aas
mov
pushf
dec
hlt
mov
mov
lret
les
or
pusha
inc
jns
pop
in
xchg
lds
inc
lea
mov
call
pop
push
mov
ret
cmpl
sub
sbb
sbb
xor
loop
sbb
mov
mov
rolb
xchg
mov
std
shlb
xchg
xchg
sub
data16
adc
cmp
test
xor
loopne
inc
and
repnz
icebp
and
jp,pt
and
arpl
pop
ror
pop
pusha
push
cmp
jecxz
sti
out
xchg
test
mov
mov
imul
out
mov
xchg
ja
std
test
lods
mov
pop
push
add
dec
andb
es
in
aas
xlat
mov
test
clc
fdiv
and
xchg
test
js
lds
sub
or
rorl
insl
clc
pop
lret
aam
sub
xchg
sub
lcall
imul
pop
fiaddl
and
lods
dec
mov
add
or
jb
call
dec
xchg
fiadds
and
les
shlb
or
loopne
inc
xchg
dec
xor
xchg
sub
jmp
mov
jl
in
out
xchg
cld
inc
pop
aam
jle
test
data16
xor
out
xchg
fimull
pusha
movsl
ds
test
xor
bound
mov
and
lcall
cltd
xor
aas
pushf
xchg
push
std
out
andb
aaa
test
sbb
pop
xlat
xchg
in
insl
sar
mov
pop
or
fcomp
js
inc
sub
lds
sahf
int3
adc
bound
inc
mov
clc
push
pop
cltd
adc
aam
popf
sahf
rcrl
xorb
push
cs
test
push
push
inc
pop
xchg
ljmp
xor
mov
mov
jnp
mov
out
nop
test
sub
repz
adc
lds
add
xchg
pop
in
data16
mov
imul
cs
push
out
repz
ss
out
insl
aas
cltd
repz
insb
test
mov
es
nop
or
mov
add
push
sub
sub
iret
or
stc
jp
jmp
pop
outsl
loopne
pop
into
je
mov
jmp
rorl
push
inc
xchg
cmp
jge
aam
or
sahf
sbb
or
stos
repnz
loope
mov
aad
hlt
sub
sarb
mov
adc
xchg
dec
jnp
pushf
xor
pop
cmp
mov
jne
sbb
loope
cmpsb
xchg
sbb
pop
push
dec
stc
sahf
out
popf
movsb
mov
jns
and
mov
jge
push
jp
xchg
sahf
pop
adc
cmc
xchg
jmp
push
mov
sbb
cli
mov
ret
les
jae
add
lret
push
std
inc
adc
or
mov
or
xchg
jnp
arpl
out
pusha
das
decl
cmp
repnz
dec
lret
sub
imul
in
out
mov
repz
cmpl
das
mov
push
fldcw
outsl
fwait
int
mov
ja
mov
movsl
sub
xchg
mov
rolb
pop
dec
pop
mov
dec
imul
imul
shrl
push
add
loope
outsb
clc
stc
cmp
invd
xchg
movsb
xor
pop
scas
mov
daa
dec
mov
loopew
cmp
popf
imul
cmpsb
mov
mov
in
sbb
inc
stos
sub
xor
fwait
xchg
loopne
hlt
mov
dec
mov
sub
mov
dec
add
das
xchg
push
pushf
mov
push
xchg
jmp
mov
jmp
and
repz
and
incl
xor
cmc
or
shl
in
lock
call
push
push
les
test
xchg
movsl
xchg
mov
adc
push
subb
cmp
jle
or
mov
je
ret
or
f2xm1
fwait
notb
push
loop
dec
mov
push
xor
or
jp
push
mov
cmc
bnd
loope
jnp
cmp
xchg
daa
jecxz
xchg
dec
mov
push
lods
les
jg
sub
das
int3
mov
in
cmp
stc
es
dec
push
movsb
xchg
cmc
mov
mov
stc
stos
daa
push
sbb
mov
cmp
and
adc
clc
clc
or
xchg
and
pop
add
and
in
fdivrl
add
dec
and
outsb
inc
xchg
xchg
push
pop
fwait
add
xlat
lret
ljmp
jbe
or
shr
daa
andb
and
ds
adc
push
dec
pop
sbb
cmp
push
ret
mov
call
decl
mov
sarb
data16
leave
or
xchg
fstps
jmp
subl
dec
hlt
dec
insl
std
fs
out
pop
movsb
push
insb
jge
jae
in
jb
mov
clc
cmc
cltd
mov
ret
cltd
or
sbb
dec
push
or
inc
or
mov
stos
push
and
mov
dec
inc
and
ret
stos
int3
mov
sub
xor
mov
js
cli
jne
sbb
lahf
idivl
or
rcr
xchg
jmp
cld
movl
inc
push
divb
pop
adc
ja
dec
in
jns
fdivs
gs
lret
inc
nop
cmpsb
push
shl
or
aas
adc
sub
mov
jae
mov
inc
das
add
out
adc
aaa
adc
mov
sbb
lahf
dec
mov
sbb
out
adc
dec
cmp
and
mov
popf
jle
adc
push
andb
stc
push
adc
mov
movsl
in
jmp
xchg
mov
std
enter
je
jnp
pop
push
pop
lods
push
xchg
shr
inc
aam
lret
cmp
xchg
sbb
pusha
mov
push
dec
mov
fbld
pop
xchg
sub
push
mov
push
inc
and
or
pop
xor
stc
in
sub
ficoml
in
cs
jmp
fs
test
test
out
lret
adc
daa
dec
cmp
mov
or
gs
das
ja
sbb
jl
pop
loope
fmull
jge
add
add
add
mov
test
mov
ret
sub
push
lock
cli
push
jae
xor
adc
fmuls
lret
and
mov
test
sub
xor
aaa
gs
repnz
and
xchg
cmp
adc
sub
lock
sbb
mov
xlat
push
daa
sub
mov
sbb
js
pop
mov
outsb
lret
das
push
imul
xor
and
orl
ds
mov
xchg
addr16
jb
inc
cmpsb
stc
test
inc
inc
jmp
dec
lret
and
lock
bound
and
cmc
inc
mov
mov
mov
adc
test
push
inc
sti
fldt
sbb
shrl
repz
mov
ret
roll
add
and
dec
fnsave
xchg
popf
lcall
sbb
pusha
mov
add
or
loope
or
sbb
js
into
cmp
pop
inc
xchg
inc
sbbl
xor
add
pop
enter
xorb
sar
gs
lcall
fists
subl
out
cmp
xchg
push
pop
xlat
adc
out
dec
bound
sar
mov
fwait
adc
pop
jle
xor
addb
adc
mov
cmc
or
push
out
mov
sub
popa
and
movsl
aaa
add
fdivrp
lea
xchg
pop
jno
aas
xchg
cli
adc
sub
lahf
push
addr16
pop
xor
mov
hlt
sbb
clc
xor
dec
mov
inc
or
les
lahf
aaa
insb
shlb
fistl
or
fs
push
dec
mov
lods
lcall
das
movsb
test
std
mov
sbb
dec
jbe
xchg
pmaxsw
sbb
loop
aam
sbb
xlat
cmp
addr16
shlb
js
bound
shll
test
in
movsl
imul
xor
push
adc
sub
icebp
fsubr
adc
fisubl
xchg
mov
int3
test
fs
adc
push
dec
add
mov
lret
pushf
and
iret
or
jge
mov
std
mov
adc
xor
out
fidivs
fldcw
pop
in
cltd
jl
pop
loope
out
insb
loope
inc
in
in
cmpsb
sarl
pop
fldl
xchg
and
fsts
xchg
imul
ret
jns
lds
int
jp
add
xor
adc
movsl
jb
repz
insl
push
mov
push
out
out
shrb
pop
pusha
or
je
mov
pop
xor
mov
les
or
mov
stos
lret
sbb
cld
stos
out
sbb
fsub
sahf
sbb
sub
mov
cmp
or
lea
jg
frstor
pop
xlat
xchg
shrl
out
or
js
lahf
push
leave
adc
je
imul
mov
addl
in
inc
adc
es
bound
pop
test
adc
fdivs
xlat
je
int
adc
fists
aas
rolb
nop
leave
sub
les
pop
js
xor
mov
adc
or
bound
add
pop
mov
jge
push
lea
push
or
sbb
sub
gs
mov
ss
adc
mov
add
add
out
xor
sbbl
outsb
outsb
sbb
in
lea
lods
sub
mov
adc
into
mov
xchg
pushf
jl
xchg
rcll
fbld
xor
jo
vdivpd
stos
dec
jp
testb
inc
mov
xor
add
pop
pushl
jae
mov
bound
lahf
dec
gs
mov
sahf
and
push
mov
jge
cmp
lar
dec
test
jnp
cli
std
jne
adcl
inc
jns
insb
shl
and
ret
sbb
push
push
in
leave
dec
out
xchg
adc
aas
movsb
clc
sub
push
xor
dec
es
jae
push
popf
incl
ret
xchg
jge
arpl
int3
subl
add
dec
push
pushf
mov
in
inc
and
dec
sbb
xor
mov
subb
rorl
push
out
mov
lahf
lea
xchg
decb
out
fsubs
xchg
cmp
pop
mov
in
loope
and
fisttpll
or
push
sar
mov
jns
les
mov
dec
sbb
dec
xor
jae
ljmp
adc
cmp
popa
sbb
jne
enter
sub
sbb
cmp
mov
rorb
xor
push
cmp
add
ret
mov
inc
or
fldenv
lds
call
xchg
int
es
in
ljmp
push
andb
cmp
cli
hlt
faddp
fdivrl
test
cltd
andb
mov
inc
cmp
mov
and
inc
adc
xchg
sbb
scas
fstpt
dec
xchg
dec
int
shl
mov
sbb
mov
in
mov
inc
push
test
xor
das
mov
dec
pop
jbe
push
outsb
lock
nop
out
push
or
adc
adc
jo
cld
das
mov
call
fmul
lock
int3
out
pop
inc
out
mov
xchg
clc
cli
dec
gs
and
pop
lods
es
lods
jge
or
pusha
fcmovne
in
mov
iret
outsb
or
callw
xchg
cwtl
sub
push
cmpsb
rcll
cmp
call
movsl
in
jg
lods
and
sti
aad
adc
mov
call
es
pop
inc
mov
into
bound
inc
sub
adc
in
aam
movsb
dec
add
adc
ret
dec
cmpb
aaa
repz
and
clc
lock
push
dec
mov
add
dec
ljmp
mov
mov
imul
jge
lcall
nop
inc
dec
cmp
icebp
push
xor
or
jecxz
inc
sub
pop
xchg
mov
adc
test
fwait
int
mov
push
out
mov
mov
insb
cltd
sbb
lea
pop
out
mov
mov
or
inc
xor
pushf
fmull
xor
dec
pop
jle
and
push
jo
out
in
push
xchg
inc
mov
mov
xorl
push
inc
xor
pop
xchg
stos
dec
shr
mov
mov
jl
mov
js
mov
or
rorb
push
rcrl
and
sahf
mov
lock
shlb
mov
inc
pushf
clc
rolb
pop
arpl
loopew
mov
add
insl
jns
inc
mov
sub
ja
sahf
mov
jae
sbb
rolb
mov
push
test
jmp
push
movswl
xchg
sbb
cmpsl
test
or
nop
sub
orb
shll
insb
addr16
pop
and
adc
mov
dec
mov
push
fsubr
and
and
xchg
xchg
pop
leave
nop
repnz
push
rcl
jne
inc
shrl
inc
fstpt
adcb
sub
jle
and
arpl
inc
movsb
sub
and
or
arpl
mov
pop
cs
and
and
cmpsb
fdivr
xor
ljmp
jnp
sbb
pop
es
repz
pop
cmp
and
inc
cs
lea
cmp
and
inc
lock
jle
inc
in
jmp
movsb
ret
shlb
add
pop
loop
cld
pop
lods
push
and
sbb
daa
mov
mov
mov
shll
mov
pop
pushf
ja
jns
sbb
not
cmpsb
jnp
mov
mov
sti
inc
rorb
loop
mov
daa
add
testb
or
xor
test
outsl
add
adc
adc
push
iret
mov
and
sbb
xchg
jne
repz
into
lods
sub
sar
sahf
sbb
push
test
cltd
mov
aas
sti
lret
jbe
pop
sub
mov
jb
loop
in
das
ret
mov
mov
mov
mov
fistps
es
sub
fwait
stos
adc
imul
outsb
leave
mov
push
sbb
cs
mov
add
out
adc
pop
int3
in
add
lods
lock
jle
outsb
sti
lods
cmpsl
jle
ds
xor
fildl
mov
aad
jbe
dec
push
das
push
insl
adc
inc
adc
hlt
insb
fisubl
clc
jl
add
in
scas
out
add
inc
push
out
mov
pusha
mov
pop
xchg
inc
rcr
movsb
mov
cld
xchg
or
ja
pushf
bound
sbb
loope
mov
test
push
dec
cld
in
lea
cmpsb
push
inc
dec
mov
xor
subb
cmpb
outsb
stos
aaa
mov
dec
jge
adc
js
lea
cmpsb
mov
in
iret
loopne
addr16
repz
mov
add
cmpsl
test
push
in
pushf
adc
test
inc
xchg
cmp
pop
cmp
scas
std
lret
fsubrs
xchg
ret
fadd
nop
outsl
add
loop
mov
aaa
or
dec
test
xlat
mov
mov
push
dec
lods
divl
sbb
xor
aam
mov
push
dec
enter
mov
mov
mov
lahf
jo
or
cld
xlat
add
xor
mov
movsl
pop
xchg
dec
call
int3
dec
dec
sti
cwtl
out
hlt
hlt
adc
shlb
test
outsl
jge
xor
gs
lahf
test
in
inc
push
push
add
push
push
pushf
push
js
clc
hlt
xchg
outsl
xchg
cmovs
clc
xor
xchg
xchg
lods
sbb
stos
bound
addr16
outsl
xchg
sbb
ret
push
mov
inc
dec
pop
mov
pop
cmp
mov
lds
subl
inc
cmp
xchg
sub
jns
mov
xor
push
test
shlb
pop
enter
cltd
xor
or
rorl
loopne
insb
add
push
push
push
ret
xlat
aas
test
ljmp
daa
add
shr
jbe
push
jnp
xchg
sbb
dec
jecxz
sbb
scas
xchg
cmc
stc
or
daa
mov
and
movsl
jmp
inc
push
sbbl
shlb
sti
pop
mov
mov
pop
bound
subb
leave
cmpsb
icebp
mov
enter
ret
xor
test
stc
cmp
repz
add
sbb
movsl
cmpsl
adc
push
movsl
mov
dec
push
pop
les
outsb
inc
cmp
push
lods
nop
jp
cmp
mov
out
inc
xchg
xor
or
ja
and
cmp
inc
fildll
sub
jnp
push
decl
iret
ja
adc
mov
pop
rcl
fldcw
lret
test
fxch
aam
lock
ja
xor
ret
int
testl
mov
jo
out
pop
icebp
cmc
into
sbb
jl
ds
in
js
jge
scas
xor
cwtl
sbb
or
movsl
addl
fnsave
xor
xor
inc
lahf
jno
test
out
adc
stos
sahf
or
jg
xchg
lods
out
jle
stc
imull
xchg
adc
dec
ds
fcmovbe
xchg
cvttps2pi
js
shl
std
jbe
test
pop
mov
and
cmp
jmp
and
push
xor
imul
sub
xor
cmp
mov
or
gs
cltd
jne
mov
mov
mov
cmp
lock
shlb
ret
shll
outsb
sbb
mov
adc
xchg
orb
sarl
les
cmp
push
jp
shl
cltd
insb
cmp
push
and
movsl
jge
dec
xor
mov
sbb
rcll
lret
dec
mov
or
push
ror
dec
jmp
mov
cld
mov
repz
push
jmp
xchg
icebp
jmp
sarb
aam
test
pop
cwtl
rcr
sbb
mov
sbb
mov
xchg
rol
iret
cwtl
mov
mov
rcrl
mov
sbb
hlt
test
mov
mov
cmpsl
push
insb
ret
mov
xchg
das
lods
mov
cltd
decb
fistps
mov
dec
push
push
sub
and
pop
insb
pop
sub
cltd
xor
insl
xchg
jl
xchg
dec
xchg
aad
fcomps
jmp
ljmp
frstors
mov
adc
movsb
fadds
push
hlt
or
xor
pop
jno
adc
or
push
dec
adc
into
dec
dec
mov
int
sbb
or
xlat
jbe
ss
iret
or
pop
lods
or
adc
stc
loop
jle
or
and
pop
and
push
mov
xchg
gs
adc
and
mov
push
mov
inc
and
mov
nop
jmp
lds
mov
movsb
outsl
les
cmpsb
test
push
mov
outsb
sbb
pusha
push
cmp
imul
jns
cmp
fnstcw
scas
sahf
stos
jae
dec
adcl
shlb
les
out
leave
pop
add
inc
in
xor
jp
sbbb
cmp
mov
mov
xchg
xor
inc
adc
mov
pop
sbb
pop
cmpsb
adc
mov
jmp
fsubr
push
xor
inc
xchg
push
int
lods
ss
dec
inc
loope
inc
push
push
jne
push
je
movsl
mov
dec
add
jecxz
mov
sbb
mov
fs
incb
aad
test
pop
add
in
mov
enter
pusha
js
push
test
dec
jno
jnp
sub
psraw
mov
inc
cmc
xchg
xchg
push
aas
lcall
mov
je
test
mov
rcl
cltd
xor
push
cwtl
push
mov
out
jecxz,pn
push
insb
lods
punpcklwd
xchg
lahf
dec
sbbb
xor
jo
subb
mov
mov
mov
test
popa
jbe
addr16
mov
adc
test
mov
xor
pop
lcall
cmpsl
sbb
mov
inc
loope
pop
jl
cmpsl
std
cmpsl
cwtl
inc
pop
and
xchg
loope
and
movl
add
sti
jo
js
cmp
gs
sbb
cmc
fnsave
dec
ja
test
adc
lods
xor
stos
test
cmp
cmp
ds
ret
pushf
jge
cmpsb
inc
push
jo
add
cld
mul
jmp
fwait
sub
mov
xor
jb
scas
shl
mov
push
add
cmp
or
lds
stc
jb
jecxz
sub
repnz
es
xorl
or
add
mov
sub
inc
adc
xor
loopne
in
dec
pop
fidivrs
xchg
inc
sarl
es
sbb
lods
jge
repnz
dec
arpl
out
ds
lods
dec
sbb
cmc
mov
aam
inc
inc
jnp
cs
jge
pop
and
addr16
jb
inc
mov
xor
dec
sub
cli
inc
mov
int3
or
and
stos
and
adc
lock
test
movsl
inc
jle
mov
push
in
jno
mov
sbb
pusha
dec
and
jbe
dec
xchg
mov
xchg
or
push
pop
dec
popa
ss
push
insl
push
jmp
xlat
inc
cmp
xchg
mov
scas
sbb
xchg
addr16
out
adc
lret
jae
mov
ret
pop
ss
hlt
mov
jmp
daa
cmc
xchg
push
out
es
str
daa
cmpl
push
jle
in
inc
dec
out
push
adc
lcall
popa
loope
sahf
add
cwtl
enter
ljmp
idivl
xchg
loop
cltd
lret
inc
movsb
sbb
xchg
outsb
sti
dec
cltd
cmp
mov
fldl
cs
mov
gs
dec
dec
jo
xor
pop
jecxz
sahf
cld
std
lods
aad
xchg
sbb
push
ss
lcall
div
adc
push
xchg
imul
or
mov
mov
aas
aaa
sub
jecxz
xchg
inc
jns
jae
loop
jno
mov
push
int3
out
dec
xor
nop
jg
adcb
inc
pop
push
ljmp
in
stos
mov
mov
and
jns
sbb
fists
mov
add
sub
test
xchg
fwait
sahf
adc
mov
xorl
jo
imul
inc
leave
inc
mov
jns
loope
addr16
je
fdivs
pop
xchg
jg
repnz
call
push
push
loopne
push
andl
fmuls
push
adc
dec
test
mov
dec
in
xchg
dec
inc
outsl
dec
jae
int3
int
aaa
inc
jl
lea
jge
jae
cli
xchg
fcoml
xchg
xchg
cli
out
adc
xchg
jl
clc
or
pop
add
push
mov
stc
lcall
sub
imul
push
fldcw
clc
dec
loopne
pop
test
arpl
xchg
adc
add
xor
in
loope
xchg
test
fdivs
lods
mov
incb
adc
sbb
cli
imul
out
lret
aas
add
dec
mov
mov
loope
lock
rol
nop
inc
cwtl
sub
sbb
xchg
xchg
in
fstpl
mov
xchg
int
adc
lods
and
pusha
mov
roll
inc
aam
stc
insl
cmp
xchg
das
mov
xchg
mov
lds
sbb
es
pop
std
pop
aad
sbb
fistpl
insl
lcall
mov
daa
mov
xchg
cli
xchg
mov
aaa
in
frstor
inc
shr
aas
stos
sti
jp
push
adc
aad
daa
inc
sub
lods
pushf
xchg
or
xchg
and
push
adc
mov
popa
daa
notl
cmpsb
cld
inc
and
push
and
sub
repnz
sbb
shl
icebp
fisttpl
pop
cltd
fnstcw
cmp
xchg
jnp
dec
ret
cwtl
xor
negl
mov
pop
push
xor
jns
xor
mov
lods
and
inc
pop
cmc
mov
push
ret
shlb
fidivs
sbb
push
inc
or
add
scas
dec
stos
mov
push
sbb
push
pop
sub
cmp
sti
and
stc
add
xor
dec
ficomps
fs
ja
in
stos
mov
jle
xlat
sub
push
pop
ret
push
mov
jae
fwait
mov
loope
adc
or
in
pop
popa
jge
jb
shrl
insl
push
repz
iret
hlt
xor
lods
ficoms
bound
fdivrl
xchg
push
xor
mov
xor
outsb
aam
mov
iret
fldl
sar
out
xchg
sbb
jbe
mov
fdiv
cli
ds
pushf
lcall
cmp
sbb
lea
pop
cmp
fldt
add
aaa
push
add
xchg
xor
cs
mov
aam
fidivl
repnz
out
mov
mov
lcall
lock
mov
sub
sbb
and
dec
rorl
xor
aaa
andb
jo
aam
pop
sahf
push
std
pop
or
xor
mov
mov
sub
jl
add
dec
stos
incl
xchg
lret
cmp
fs
or
pop
push
lods
jle
int
pop
dec
jo
dec
or
ficoml
or
cmp
add
sbb
add
sub
push
fstpt
cmp
dec
sti
mov
in
in
mov
xor
in
in
jp
ds
xor
push
andl
movsb
movsb
sbb
stos
add
and
sub
or
cmp
xor
sarb
sti
or
test
int3
fisubs
mov
inc
pop
mov
ja
xlat
jnp
fisubl
shrb
jp
sbb
xor
sbb
mov
jo
push
orb
scas
mov
fsubl
push
loop
rcll
rcll
push
shlb
xchg
or
inc
jmp
lcall
loope
ja
add
pop
xor
mov
in
dec
xchg
or
mov
aas
add
outsb
xlat
rorl
inc
sbb
xor
xor
vpcmpgtd
dec
iret
dec
inc
mov
int
sub
sahf
mov
xbegin
or
aam
fcoml
out
out
lock
sti
mov
push
ficoml
xor
aas
in
stc
pop
frstor
pop
popa
into
mov
and
mov
push
and
in
adc
stos
std
jbe
imul
push
and
mov
lcall
dec
pop
adc
and
sti
push
inc
jmp
insl
and
mov
sbb
cmp
pusha
pop
insb
xor
pop
sub
adc
inc
sti
outsb
and
xchg
js
insl
lock
xchg
lcall
push
and
shl
mov
jg
cwtl
movsb
push
andb
popf
dec
std
call
xchg
jecxz
mov
outsl
popa
pusha
bound
mov
repnz
mov
or
mov
into
dec
jbe
rcrl
imul
mov
pop
aam
or
movb
hlt
addb
and
scas
je
xlat
dec
fsts
and
mov
sub
ljmp
fcomps
call
xor
xchg
jnp
adc
fstpl
jl
mov
xchg
rorl
push
aad
fbstp
fnsave
mov
cmp
pop
sahf
outsb
stc
insb
pushf
mov
xchg
in
adc
sti
jecxz
mov
push
das
pop
xchg
sbb
sub
js
int
in
push
movsl
movsl
cltd
cmp
push
push
pop
sbb
iret
sbb
and
sub
jmp
add
cs
stos
dec
push
push
in
jg
pop
imul
dec
lods
mov
mov
outsb
xor
mov
jo
cwtl
xor
mov
scas
pop
divb
and
mov
inc
jnp
sahf
xor
test
sbb
add
xorb
adc
aaa
fsubrl
adc
add
jmp
nop
mov
dec
mov
dec
inc
dec
jmp
inc
sub
push
fdivrs
ds
add
and
and
rorl
jge
mov
sbbb
fmul
sub
mov
das
inc
pop
sahf
cld
pop
cmpsl
jle
fidivl
vphaddbw
pop
mov
mov
inc
pop
mov
shl
jge
popf
sahf
es
outsb
push
or
fists
mov
cltd
nop
sbb
sbb
cmp
test
outsl
in
daa
pop
push
push
dec
popa
jnp
inc
je
iret
and
mov
mov
xchg
stos
cltd
jge
fstpl
insb
cli
mov
jmp
leave
lret
push
xchg
js
sbb
pop
mov
xorl
cltd
lret
pusha
int3
mov
cwtl
adc
sub
and
push
fdivl
mov
cmp
frstor
outsl
repnz
mov
sub
cmpsl
cmp
lds
or
sbb
push
les
in
lcall
das
mov
ds
cmp
add
xchg
out
ljmp
sub
lods
mov
stc
push
mov
cmp
movsl
sub
dec
cli
add
sbb
xor
test
mov
cmpsl
divl
ljmp
dec
inc
jg
or
push
xor
and
push
and
add
add
jnp
lea
cmp
adc
push
out
call
iret
dec
cli
cmp
rcrb
dec
push
js
std
add
lcall
dec
nop
cltd
add
fnstcw
jg
loope
pop
popf
adc
rcll
xchg
push
js
adc
push
xor
or
pushf
sbb
sub
lahf
in
out
mov
sub
mov
or
fwait
xor
cmp
pushf
cmp
mov
sbb
fistpl
push
iret
mov
inc
lret
jbe
push
rcrl
rcll
mov
push
add
dec
ljmp
stc
dec
stc
mov
mov
pop
xchg
and
pop
cmp
test
mov
stc
sub
add
xchg
ss
scas
and
mov
stos
jb
adc
inc
mov
and
pop
stos
adc
pop
mov
inc
dec
xchg
enter
or
cwtl
sub
daa
mov
push
inc
sbb
push
adc
ljmp
push
incl
pop
inc
push
cmc
inc
push
and
and
lock
push
xlat
sub
jb
stc
rcl
mov
adc
outsb
and
push
mov
cmp
sub
mov
arpl
pop
dec
das
pusha
movsl
adc
mov
clc
and
cwtl
in
shr
repnz
mov
xchg
mov
cltd
aad
dec
js
jnp
in
xchg
shlb
js
stos
cmpsl
or
cmp
in
scas
int3
mov
xchg
roll
or
mov
and
jle
xor
jae
cmp
mov
loopne
and
xor
vpshlq
repz
fmuls
test
hlt
aad
iret
cmpsl
push
imul
scas
pop
jl
fcoml
adc
pop
xor
jmp
dec
test
mov
data16
add
jns
fs
and
lock
inc
push
divl
mov
shl
movsl
shrb
ss
adc
icebp
add
ss
mov
fists
sbb
inc
in
in
int
mov
push
pop
sub
mov
mov
lret
inc
inc
popf
aam
in
mov
pop
incb
jno
orb
daa
add
loop
fstpt
fidivrs
cmp
fldt
push
inc
das
mov
ficoms
cmc
repnz
cmc
mov
mov
xchg
int
ja
inc
movl
iret
shrb
enter
xor
pop
test
scas
push
xlat
jns
push
or
push
push
adc
repnz
cmpsb
or
aas
or
inc
or
pop
call
jno
and
jle
popa
add
jl
in
xor
and
add
lahf
sbb
rcrb
xchg
repnz
and
test
mov
popl
or
or
add
nop
sbb
mov
and
jnp
lods
xchg
xor
std
outsb
adc
ja
out
jecxz
cmc
adc
je
jnp
or
jbe
es
das
dec
sbb
fs
xchg
mov
sahf
xchg
push
ljmp
loopne
or
testb
nop
cmp
mov
in
scas
popf
cmp
pop
push
fbld
lcall
mov
add
lods
and
mov
xchg
repnz
jle
fcoms
jnp
test
nop
xchg
inc
loop
je
dec
push
or
xchg
into
xchg
in
mov
jmp
ret
push
sbb
sub
jl
mov
jmp
cmp
mov
iret
sbb
fiadds
inc
cmp
gs
sub
shrl
mov
xlat
dec
pop
movsb
cmpsb
add
out
xchg
xor
and
push
xor
push
push
sbb
sarb
jecxz
or
scas
xchg
inc
and
xchg
cwtl
loope
in
enter
dec
add
mov
jmp
mov
insl
addr16
sub
testb
pop
mov
nop
mov
mov
div
in
inc
insb
icebp
daa
aas
test
cmpsb
int
lock
popf
or
lods
stc
jge
mov
pop
mov
shrl
xchg
xlat
xchg
add
pop
fimuls
push
dec
mov
sarb
mov
and
push
add
xchg
pop
sbb
addr16
fistl
mov
cmp
ret
jae
adc
mov
ljmp
adc
dec
jbe
pop
sub
inc
loope
dec
fisubrs
js
aad
mov
and
cmpsb
jg
xor
test
mov
shll
ret
gs
imul
mov
cmpsl
int
push
push
adc
je
loopne
out
sub
mov
mov
xchg
subl
push
movsb
pop
ret
push
cmpsl
aam
or
subl
divl
inc
and
sbb
mov
push
mov
call
xchg
ss
aad
mov
xchg
popa
pusha
adc
mov
sbb
xor
shll
mov
daa
insb
lods
stc
dec
fwait
adc
or
mov
aas
pop
dec
pop
add
shll
and
rclb
ror
ret
ss
cltd
pop
dec
sub
push
es
xchg
cmovp
ret
popa
sbb
pop
xor
sub
cmpsl
mov
stc
mov
and
mov
jle
xchg
lods
lea
in
ss
jns
sbb
cmpsl
and
mov
lock
or
xchg
or
pop
lahf
cmpb
enter
movl
push
lret
and
fisttps
dec
inc
nop
push
xorb
leave
insb
outsb
add
popf
daa
in
xchg
add
dec
dec
mov
sahf
pop
pop
fs
call
call
andb
xorb
rep
add
loopne
xchg
add
repnz
flds
mov
dec
adc
fisttps
ds
mov
stos
test
stos
cmpsb
and
push
fs
and
js
push
push
in
push
xor
lahf
lds
gs
imul
fmuls
jne
xchg
add
rclb
dec
ss
shll
push
inc
mov
imul
out
cmpl
or
xorb
jb
pop
add
or
into
stos
testb
mov
cmpsb
inc
imulb
lods
testl
cmp
mov
adc
and
fidivl
inc
mov
out
inc
call
cmp
ljmp
or
jge
cli
scas
cltd
cmpsb
not
xchg
iret
mov
bound
les
cmp
mov
int3
clc
ret
xchg
sub
and
lahf
out
out
repz
xchg
movsl
cmp
es
shll
or
insb
jno
jmp
cmp
iret
repnz
sbbl
jge
sbb
and
mov
jmp
lock
dec
xchg
mov
inc
in
imul
lods
sbb
xchg
lods
cmp
mov
sub
lods
cli
xchg
pusha
pop
int3
test
cwtl
cmc
out
out
pushf
adc
sub
mov
mov
sub
sub
inc
pop
mov
and
dec
sbb
mov
dec
jg
fists
xor
sbb
sbb
dec
lea
xchg
xchg
mov
sub
xchg
shrb
shrb
and
jae
xor
repz
fwait
mov
mov
mov
bound
leave
xor
cld
daa
loopne
fwait
cwtl
xchg
or
cld
lea
insb
iret
shl
js
inc
xchg
mov
repz
sbb
or
sbb
add
lret
lcall
mov
xorb
loopne
loope
cmpsl
sub
andb
aam
popf
sbb
testl
scas
daa
ret
dec
cmc
dec
push
and
cmp
or
sbb
testb
pushf
jle
sbb
popf
push
adc
negb
xorl
repz
lcall
sbb
shlb
andl
fadds
jle
pop
mov
je
xchg
jo
add
fs
enter
ret
std
stc
push
pop
pop
je
mov
cmpsl
jne
imul
sub
or
xchg
and
test
rcrl
and
stos
add
fnstenv
mov
sar
lcall
jnp
fsts
mov
stc
and
rolb
hlt
clc
imul
sbb
jg
scas
repnz
mov
fisubrs
fists
bound
pushf
ljmp
hlt
into
xchg
fwait
inc
outsl
adc
sti
mov
adc
sbb
jle
xchg
adc
or
iret
mov
xor
int3
loop
rcr
mov
pop
outsl
mov
push
loop
lods
push
outsb
xor
outsb
sarl
sbb
jl
or
and
scas
in
cltd
shl
ljmp
mov
dec
add
movsb
pushf
xchg
xchg
or
pop
or
outsl
and
imul
ja
or
inc
mov
test
or
push
pushf
std
xchg
aaa
divb
xor
cld
push
cmp
stos
cmp
xchg
xor
insl
aaa
int3
pushf
out
pop
inc
mov
inc
mov
hlt
in
cs
or
pushf
mov
and
jecxz
xor
xor
cmpsb
test
shrl
lea
jo
fbld
push
sub
cmp
rolb
cs
repz
rorb
and
shlb
mov
in
fs
fcmovnb
xor
les
sahf
jo
xor
mov
push
push
jb
mul
mov
es
and
or
sar
cmp
dec
lahf
push
ja
lret
add
xor
pushl
aad
mov
cmc
sbb
adc
scas
jmp
insl
mov
fchs
sbb
push
out
sub
insb
sti
fwait
call
mov
cmp
sbb
or
mov
mov
fsubr
adc
xor
mov
ja
mov
pop
inc
dec
ss
mov
out
cmpl
pop
lcall
shl
mov
insl
mov
push
xchg
nop
cmp
mov
pop
push
filds
pop
mov
adc
aad
xchg
loop
mov
add
out
int3
xchg
jb
jne
out
popa
cmp
push
cli
cmc
jg
out
lcall
fistps
adc
mov
cmp
out
mov
adc
sub
popf
mov
push
xor
daa
fs
adc
push
icebp
dec
scas
mov
xchg
push
adc
sub
mov
xorl
lahf
pop
or
mov
cmpsb
adc
push
xchg
push
sub
je
jb
lcall
jmp
out
pop
jmp
push
sbbl
imul
lods
iret
gs
jnp
hlt
popa
adc
and
enter
ds
push
lods
mov
das
xor
cmp
push
rcr
adc
iret
pop
repnz
pop
loopne
mulb
lock
pop
xchg
adc
test
lods
ret
std
xchg
mov
pop
jge
pop
nop
mov
jge
mov
mov
mov
dec
filds
jp
sub
cmp
jecxz
das
mov
enter
xchg
sbb
ds
bound
inc
cli
cs
mov
jp
and
add
or
or
mov
jmp
loope
incl
xlat
cmpsb
xchg
rol
mov
mov
in
push
pop
xchg
inc
xchg
pop
push
jno
jge
jl
pop
fisubrl
jmp
xchg
rclb
fistpl
movsb
addb
sub
push
icebp
mov
xor
push
dec
dec
jae
mov
mov
out
aaa
test
and
rcrb
popa
aam
insl
xchg
sub
dec
hlt
leave
test
imul
mov
add
inc
dec
push
xor
mov
dec
imul
insb
mov
lahf
xor
daa
loop
xor
jae
xchg
dec
cmp
les
outsl
and
or
dec
loop
pushf
out
insl
lret
jle
and
xchg
aam
adc
inc
mov
cltd
fsubs
out
xchg
jmp
inc
or
and
push
lods
shll
jns
aaa
cmp
loope
aaa
mov
out
push
push
outsb
lahf
pop
push
jbe
jle
xchg
mov
scas
scas
xor
je
mov
outsb
and
shll
push
test
call
int
sbb
or
jbe
jns
jl
mov
mov
ljmp
jns
repnz
mov
test
jo
xor
or
out
movsb
lret
lods
pop
mov
sbb
cmpl
mov
add
jae
sub
rcll
jmp
mov
or
scas
or
mov
loopne
sbb
xor
mov
sti
movb
adc
inc
je
xchg
enter
mov
jno
popf
jmp
rol
dec
incl
xchg
scas
add
popa
shr
enter
faddl
dec
and
jbe
shl
cmc
int3
push
in
jmp
stos
jmp
mov
jno
cmp
pop
insl
jge
sub
inc
adc
cmp
sub
add
inc
and
repnz
mov
mov
cmp
add
dec
inc
sbb
cmp
fcmove
and
inc
cmpsb
pushf
ret
cmp
inc
lods
call
push
loopne
pop
push
mov
push
outsl
cwtl
jbe
je
mov
test
adc
pop
addr16
cs
adc
shll
pop
or
jae
mov
adc
fidivrl
insb
sti
cmp
sarb
stc
xorb
push
jecxz
fistl
adcb
popl
clc
mov
sub
jp
cmpsb
cmp
xlat
sahf
fnstcw
ficomps
jo
sarb
sub
lds
dec
fsubs
xchg
repz
cmp
add
sbb
arpl
fisttps
sub
dec
sub
sbb
xchg
inc
notl
fldt
lock
in
insl
adc
jnp
mov
inc
lods
popf
or
lods
jb
adc
mov
aam
and
insb
iret
push
pop
in
jae
fiadds
pop
xor
mov
aas
mov
popf
sub
sub
loop
call
aad
or
pushf
xchg
dec
xchg
jo
push
add
jg
jmp
rclb
das
lret
outsb
xorb
rcr
in
dec
jae
repz
mov
inc
fdiv
mov
popf
or
movsb
and
sub
add
or
sbb
mov
outsl
and
mov
fndisi(8087
mov
sub
mov
xchg
jne
and
test
dec
sub
or
ret
adc
adc
repnz
pop
sub
mov
adc
fistpl
lea
outsl
add
xchg
inc
call
adc
lock
sub
imul
aas
xchg
sbb
push
lods
mov
push
or
jae
les
aaa
pop
ja
cli
hlt
adc
mov
lods
jl
or
das
in
adc
mov
jne
aas
stc
xor
sarb
insb
rcrl
cmp
js
cmp
mov
sbb
lea
push
pop
fcompl
lahf
xchg
add
xor
mov
punpckldq
and
sbb
inc
jg
enter
jle
inc
dec
into
jecxz
shlb
jb
ljmp
cltd
out
cmp
ljmp
push
into
sbb
ret
in
adc
aaa
ficompl
sbb
cmpl
fcompl
sbb
leave
mov
xor
sti
mov
and
mov
sub
and
fstps
loop
enter
jle
sub
pop
mov
clc
xor
jns
out
into
lock
xchg
clc
cmp
and
mul
mov
lock
pusha
insl
xchg
leave
xchg
add
pop
popa
insb
gs
movsb
xchg
pushf
cli
mov
out
pop
stos
push
divl
leave
jnp
test
movsl
mov
and
mov
push
add
out
fs
jmp
lock
xchg
push
push
cld
and
sbb
mov
lret
mov
hlt
pop
xchg
ret
xchg
lods
xor
aaa
xor
adc
lds
subl
aas
clc
push
cmp
repnz
daa
xor
inc
insb
xor
dec
ss
jge
jo
jnp
push
xorb
pusha
sub
aas
mov
mov
adc
lret
push
rcl
jecxz
fcoml
mov
test
ds
movsl
fyl2x
loope
jle
sahf
adc
stos
lcall
fsubrl
add
adc
ds
and
add
push
cmp
loopne
cwtl
mov
push
xor
sub
test
dec
and
xor
add
fwait
out
rcll
jl
dec
add
xor
push
cmp
scas
lahf
inc
push
jbe
addb
sbb
jo
cmc
outsl
jne
loopne
mov
lea
jmp
adc
inc
push
pop
cmp
inc
xor
inc
cld
xchg
push
cmc
and
sahf
fsubl
test
loope
xchg
lahf
mov
loope
ret
or
aaa
repnz
pop
inc
popf
dec
dec
push
mov
hlt
xchg
ds
mov
cltd
and
cmp
cltd
shrl
sahf
mov
and
cmp
or
hlt
fisubrl
loopne
cli
fistl
pop
mov
jno
ficomps
ljmp
pop
out
lcall
xor
pop
ret
dec
fisubl
shl
xor
push
pop
jns
mov
push
xor
mov
aaa
mov
xor
sbb
inc
daa
xchg
aas
in
jge
fists
or
or
pop
pop
or
lret
enter
into
bound
in
jb,pn
pop
pop
cmp
pop
scas
dec
cmpsb
or
dec
test
and
movsl
sbb
push
ret
pop
sbb
cmc
lret
insl
in
cmp
mov
repnz
sarl
push
movswl
mov
mov
jo
add
mov
cli
test
xchg
xchg
and
add
push
stos
mov
push
stc
lahf
mov
mov
clc
das
hlt
stos
daa
ja
pop
loop
jmp
inc
mov
repz
aam
cmpsb
jnp
pop
fwait
jle
movsl
pop
popa
push
mov
sahf
sarl
aas
out
loop
jno
outsb
mov
and
sbb
and
fldt
imul
nop
imulb
adc
mov
push
enter
dec
jae
jb
mov
subl
dec
mov
sahf
push
aas
mov
xor
mov
in
mov
adc
lret
adc
lods
enter
and
mov
add
push
mov
aaa
pop
jmp
test
dec
leave
test
xchg
jae
insl
fadd
jae
jns
ds
xor
mov
and
les
jns
ds
sahf
cmpb
mov
and
stos
sar
pop
xchg
xor
pop
jb
mov
mov
stos
dec
add
orb
sub
emms
mov
hlt
lods
jnp
mov
add
clc
xchg
jp
jnp
add
inc
push
jo
cmpsl
sbb
adc
xchg
adc
xchg
mov
jmp
cmp
cmp
xor
xlat
movsb
repnz
idivb
cwtl
js
push
sbb
xchg
or
out
pop
push
inc
cmpsl
sbb
or
push
in
push
into
lcall
lock
jns
mov
jno
jbe
or
stos
enter
lret
stos
add
xchg
xchg
and
mov
mov
mov
scas
cs
inc
out
mov
add
or
mov
divl
xor
icebp
and
decl
rclb
js
lret
popa
fmull
push
mov
stc
fldt
and
int
add
enter
jnp
xor
cmp
mov
test
cmp
aad
scas
mov
lahf
insl
xchg
popa
and
enter
sbb
add
lock
push
mov
and
sahf
mov
push
cmpl
add
sbb
jno
loope
shl
inc
push
xchg
enter
mov
scas
adc
xor
fsubrp
daa
std
arpl
call
aas
jl
repz
inc
sbb
loop
or
jb
mov
cmpsb
test
lock
gs
int3
mov
fs
and
icebp
cmp
mov
inc
cmp
jbe
cmc
fidivl
cmp
xor
iret
aam
hlt
and
outsl
clc
cwtl
push
mov
insb
in
and
jmp
jb
sbb
push
mov
adc
cltd
stos
loopne
rorb
pop
bound
push
xchg
mov
cmp
dec
mov
sub
test
mov
repnz
or
sbb
std
inc
and
push
ret
rorb
stos
movsl
xor
imul
add
jp
add
xor
jg
dec
in
adc
lea
std
mov
gs
xchg
pop
xchg
loop
icebp
popa
loopne
push
outsl
outsl
out
in
cwtl
dec
xor
aas
sub
and
dec
je
pop
adc
dec
adc
xor
in
mov
and
inc
add
bound
inc
xchg
sub
in
xor
notl
mov
sbb
mov
xlat
or
popa
xchg
lock
add
xchg
cltd
dec
mov
xchg
outsl
out
xchg
loopne
inc
xchg
push
jge
inc
pop
fists
dec
inc
in
lods
clc
pushf
mov
cltd
xlat
aaa
leave
add
sbb
or
mov
ss
or
jp
stc
in
call
pop
dec
roll
xor
outsb
or
rclb
mov
cmp
out
std
cmp
movsb
or
rcl
mov
and
cmpsb
mov
pop
lea
adcl
mov
subl
ds
cltd
pusha
adc
ds
inc
sbb
pop
pop
inc
xlat
mov
bound
cltd
inc
lock
adc
fmul
jecxz
mov
clc
cmp
inc
sub
or
ret
cwtl
sahf
and
ljmp
sbb
ja
xchg
leave
ss
mov
inc
sbb
sbb
lods
lahf
mov
cld
inc
push
pop
imul
adc
sub
and
xor
loopne
cmpsl
push
andl
lds
cmp
daa
roll
xor
andb
fisttpl
scas
add
and
mov
xorb
pop
pop
adc
push
imul
ss
test
xchg
jbe
ficompl
xor
inc
jne
or
or
xor
popa
jecxz
test
xchg
data16
xchg
or
and
addl
sbb
stc
xchg
jle
imul
movsl
cmp
xor
outsb
mov
mov
and
push
mov
int
rclb
dec
push
inc
lods
loop
jnp
dec
lahf
mov
sti
iret
clc
push
push
jnp
rclb
addr16
xchg
je
daa
popf
cld
cli
push
sti
arpl
fwait
add
addr16
in
int
inc
cmpb
add
pop
popa
or
pop
adc
gs
mov
in
pop
scas
mov
push
push
jne
mov
bound
movsb
pop
orb
sbb
ret
filds
out
cmp
cmp
add
and
dec
sub
inc
ret
sub
and
stos
mov
push
adc
bound
pop
add
scas
mov
sbb
xchg
lods
fists
loopne
and
ds
sbb
or
push
test
xor
clc
pop
addr16
xchg
enter
outsl
js
scas
pop
andl
fninit
in
pop
xlat
int3
lret
sbb
jl
lock
sub
out
sbb
inc
popa
insb
cmp
push
or
imul
vpslld
push
inc
les
jae
xchg
xchg
out
jmp
or
sbb
enter
pop
test
xor
hlt
std
add
mov
xchg
pop
cltd
dec
jnp
fcoml
out
test
icebp
mov
test
cmp
adc
outsl
push
addr16
and
push
fnstsw
jl
cmp
lret
fwait
mov
lea
out
addr16
xchg
ja
fidivs
hlt
imul
jo
sub
cltd
icebp
xchg
insl
xchg
adc
cmp
jmp
sbb
fcoml
pop
adcb
jle
je
scas
shlb
push
dec
shrb
js
inc
cmp
clc
jmp
mov
lea
iret
xchg
add
and
out
pushf
dec
cmc
dec
inc
mov
xchg
sti
inc
jbe
push
loop
pop
rclb
das
cmp
and
pop
sbb
push
popf
out
jae
sbb
hlt
out
jns
out
ficoml
aam
adc
cs
mov
mov
push
in
mov
mov
xchg
daa
stc
or
daa
arpl
imul
ja
lds
pop
cmp
lret
fstl
inc
or
sbb
pushf
cmp
dec
adc
adc
ja
out
pop
xor
sub
clc
stos
cmp
outsb
leave
push
cmp
inc
jle
xchg
fucomi
mov
sbb
dec
pop
mov
cmp
adc
or
sti
std
add
mov
imul
mov
or
es
sbb
es
pop
lods
xchg
push
xchg
outsb
push
jae
test
ret
sbb
jp
movsl
adc
mov
hlt
sbb
shlb
ljmp
cmp
push
out
daa
push
pop
sarb
xor
mov
pop
ret
fisttps
scas
mov
out
cs
out
cmp
repnz
mov
fwait
std
sbb
mov
or
mov
lods
aad
jae
sbbb
inc
and
lock
shl
add
cwtl
das
sbb
mov
adc
in
pusha
scas
shll
movsb
scas
cs
push
addr16
movsl
and
inc
fsts
rorl
lahf
sbb
push
iret
push
and
and
loop
dec
cmp
inc
xchg
loop
outsl
adc
scas
jno
jo
xchg
dec
push
xchg
pop
in
pop
and
lods
ds
jne
icebp
imul
incb
pop
adc
mov
xor
push
inc
lock
jle
movb
fistpl
popa
scas
pusha
mov
lock
mov
aam
inc
call
outsb
lds
and
testb
cmp
fdivrl
fsubrs
pop
test
push
cmp
aam
mov
int3
roll
cmpsb
pop
cmc
mov
push
in
in
rolb
cmp
jecxz
lcall
xorl
push
shll
sbb
adc
pop
cmp
inc
or
lods
adc
sahf
jo
out
insb
lock
xor
add
dec
ss
mov
pop
add
aam
test
mov
mov
jge
sarb
push
pusha
mov
cmpl
nop
ficompl
mov
into
movsl
pusha
into
sbb
and
loop
push
iret
dec
into
das
xchg
add
int3
int
fsubrs
sub
jo
aad
mov
imul
push
push
pop
jmp
jb
ljmp
adc
mov
add
adc
adc
gs
jmp
cld
ret
daa
jo
stc
inc
jecxz
xor
shr
lods
stos
dec
scas
or
flds
test
and
or
cld
push
lret
mov
pop
pusha
addb
xchg
dec
fsubrs
cmovl
es
fisttpl
cmc
mov
inc
addr16
dec
sub
push
cmpsb
xchg
xor
aam
and
push
mov
jns
mov
fs
push
leave
dec
cmp
cmc
add
es
out
inc
fstpt
mov
jl
jle
in
addr16
lods
fwait
in
fstps
pop
push
sbb
notl
icebp
mov
cli
mov
es
xor
add
adc
mov
xchg
sub
movsl
in
test
inc
arpl
fsubl
jmp
mov
mov
inc
add
test
jp
mov
mov
mov
fs
jp
mov
xor
pop
sub
lcall
insb
cs
mov
sbb
jb
mov
lock
pop
loop
dec
mov
push
into
xchg
popa
push
dec
movsl
add
sbb
aaa
popf
cli
pxor
arpl
or
jle
dec
mov
cwtl
and
push
jne
inc
mov
xchg
mov
xchg
jge
inc
fcmovbe
pop
mov
inc
in
into
mov
rolb
and
mov
ret
sub
fmul
and
jecxz
push
sbb
lret
push
sub
pop
fs
ds
or
mov
out
and
leave
and
cmp
mov
inc
test
shl
and
adc
xor
or
xor
popf
cmp
inc
jbe
pop
clc
ljmp
in
fadds
sarb
neg
mov
dec
test
jno
leave
dec
roll
les
stos
faddp
bsf
push
into
jns
cs
mov
inc
adc
lods
test
cwtl
mov
dec
jle
pop
sarb
fcomps
pushf
mov
jb
test
je
mov
xchg
xchg
cli
xchg
int
push
sbb
adc
lods
sbbb
or
sbb
mov
fadds
sbb
popa
lea
pop
mov
add
and
cwtl
ss
sbb
jns
push
mov
mov
xor
sbb
mov
xchg
pop
cmp
imul
xchg
les
ret
lea
pop
cli
fcomps
and
incl
add
or
mov
rcrb
pop
mov
pushf
sbb
test
xchg
or
or
aas
mov
xchg
add
xchg
aam
hlt
pusha
jp
pop
mov
adc
addr16
ja
popa
in
pop
adc
dec
mov
and
or
xlat
jle
out
js
mov
out
adc
or
imul
adc
pop
inc
sub
jno
xor
lock
pushl
xchg
cmp
js
pop
sub
ret
decl
pushf
ljmp
int
mov
mov
add
repz
add
adc
js
popf
mov
cld
popl
test
cld
add
fstl
push
loop
cmp
push
cwtl
cmc
adc
lds
sub
scas
xchg
sub
xor
xchg
dec
xor
xchg
shll
ja
adc
call
loopne
lods
inc
jae
fstp
test
pop
les
inc
test
je
xor
adc
movl
cwtl
pop
mov
in
cmc
movsb
pop
sti
je
xorl
or
cmp
xchg
xchg
jbe
push
pusha
les
stc
add
test
orb
push
nop
lods
cld
mov
jmp
push
mov
sub
or
jp
mov
shll
cmp
fidivs
imul
cwtl
pusha
call
mov
jno
imul
push
test
loop
adc
xor
push
dec
movsl
sbb
jge
jne
fistl
imul
es
pop
test
or
push
nop
push
sub
add
fiadds
int3
jbe
adc
jg
fsts
es
push
rclb
add
adc
lock
inc
push
or
aam
roll
mov
clc
sbb
out
sbb
test
ds
jnp
cmpsb
lea
mov
pop
fucom
cmp
add
out
mov
and
pop
or
pop
pop
scas
sbb
ret
dec
fisubrs
lret
jo
mov
psrld
sub
ret
inc
push
and
subl
mov
mov
cli
in
in
push
lods
and
repz
leave
pop
sti
imul
mov
and
sub
scas
inc
cwtl
xlat
dec
das
sub
sarl
xchg
lret
mov
js
sub
lahf
lahf
and
mov
imull
mov
adc
test
mov
shl
inc
pop
ljmp
flds
ljmp
fcoms
mov
loope
lcall
addb
xchg
push
mov
xor
ljmp
sub
das
sub
fdivl
aad
fs
arpl
jns
adcl
cmpsl
jne
dec
pop
loope
mov
fmuls
loop
cmpsl
push
mov
repz
xchg
jb
mov
mov
mov
inc
scas
sti
lahf
and
adc
pop
scas
adcb
dec
dec
lods
inc
mov
repnz
pop
add
jp
xor
sub
sbb
push
dec
cli
out
not
sar
sarl
cmpsb
sti
ret
aas
pop
arpl
imul
out
xchg
fmul
mov
mov
xor
dec
sbb
sbb
dec
add
test
add
lea
or
call
stos
mov
outsb
mov
jo
push
jbe
leave
mov
and
shl
test
pop
cs
movsl
sbb
cmp
aad
fmuls
dec
fildll
cmc
icebp
call
cmp
lret
loopne
lods
call
inc
jmp
push
and
add
ds
mov
push
xchg
fists
test
ror
mov
les
add
mov
in
mov
test
inc
jmp
adc
mov
repz
push
in
mov
sahf
dec
data16
fisttpl
aad
mov
push
mov
insb
shl
xchg
jp
icebp
jno
dec
mov
dec
add
jmp
cmp
pushf
push
lahf
stc
adc
mov
arpl
mov
or
outsl
or
pushf
icebp
imul
inc
gs
or
bound
dec
scas
idivb
push
insb
shrl
xchg
xchg
rcrl
jbe
cmp
push
cmpsl
mov
pop
leave
fcompl
pop
pop
icebp
sub
xor
or
dec
add
test
ret
xchg
xchg
shlb
ret
arpl
push
cmp
xchg
ret
data16
add
adc
cmp
ret
fsubrp
ficompl
xchg
mov
jbe
jg
stos
xchg
or
and
mov
mov
inc
or
jns
ret
outsb
pop
test
insb
filds
cmp
cmp
cmp
mov
add
pop
mov
jle
cltd
testl
iret
or
xchg
dec
or
call
jge
insb
int3
add
pop
into
pop
fnstenv
jmp
repnz
cmp
fcmovnbe
pop
test
mov
std
stc
out
pop
pop
inc
push
sub
dec
inc
stos
stos
imul
mov
lret
xchg
rorl
mov
popf
leave
test
stos
bound
xor
hlt
xchg
xchg
xor
mov
add
xor
fdivl
ljmp
cmp
xchg
sub
xchg
test
dec
test
nop
mov
aam
or
repnz
fldenv
lea
test
pop
inc
mov
sub
xor
inc
sbb
mov
xchg
rorl
sbb
mov
ficoml
or
sbb
xor
inc
mov
xor
lock
adc
rclb
or
mov
test
insl
in
decl
popf
fsubrl
jb
je
xchg
xchg
mov
rorb
add
mov
idivb
cli
mov
dec
cmpsb
sub
daa
icebp
mov
sub
nop
pop
scas
out
mov
mov
mov
pop
mov
not
dec
test
addr16
loop,pt
and
adc
les
xchg
jo
sbb
xchg
lretw
pop
into
push
ficoms
lods
in
mov
ret
push
add
dec
push
add
pop
repz
or
frstor
aad
lahf
in
xchg
fcmovb
mov
push
inc
cmp
xchg
sahf
cmp
fldenv
pop
repnz
mov
xchg
dec
and
mov
adc
sbb
jae
into
insb
add
clc
lret
sub
push
sub
fisttps
add
lock
push
loopne
ss
sahf
xor
jle
imul
pop
jae
or
cmp
mov
cmp
sbb
ds
jl
inc
mov
cwtl
ror
int
in
jl
out
aam
mov
stc
mov
pop
es
int
imulb
cmp
adc
shl
or
jp
test
sarl
mov
dec
push
stos
ret
out
mov
aam
test
pushf
aaa
jno
lock
push
xor
dec
fucom
xor
sbb
js
inc
out
mov
loop
pop
push
mov
push
push
add
das
mov
scas
cli
or
cmp
mov
hlt
jmp
xor
clc
xchg
ret
or
roll
cmc
pop
mov
or
mov
add
xchg
sbb
and
xchg
aas
adc
mov
mov
push
xchg
int
add
mov
sbb
push
insb
push
dec
push
sub
out
jmp
and
sti
iret
mov
dec
mov
adc
mov
aaa
fdivrl
fdivrl
les
rorb
dec
popa
xchg
cld
sub
sbb
repz
sbb
rcl
mov
sub
cmp
cmp
adc
jae
fcmovb
sti
or
das
and
lahf
dec
arpl
mov
push
inc
and
cs
sbb
adc
daa
add
fucomi
fs
fisttps
fdiv
jne
into
jne
pop
dec
outsb
hlt
fprem1
mov
xor
adc
iret
fwait
push
jl
inc
movsl
mov
xchg
clc
mov
movsl
into
cmp
dec
xchg
dec
lds
insl
fcomi
mov
hlt
sub
pop
jmp
mov
fwait
stos
sbb
add
repz
inc
lret
scas
push
mov
pop
jbe
insl
pusha
ja
add
xlat
rcrl
cmpsb
shlb
cmpb
mov
ret
and
push
and
out
jle
sub
test
in
inc
bnd
mov
je
jle
dec
call
sbb
pop
cltd
dec
xor
sarb
andl
outsl
inc
mov
sub
sbb
inc
ss
in
mov
and
or
pop
push
adc
dec
in
push
add
mov
xchg
inc
mov
fnstenv
mov
shl
adc
sub
push
testb
dec
sbb
adc
xor
lcall
cmp
in
mov
push
in
data16
mov
jmp
mov
mov
sbb
movsb
fists
adc
cmp
lock
bound
jle
mov
pop
jo
mov
mov
push
dec
and
pop
sbb
jns
inc
pop
mov
incb
cmp
cs
xchg
add
cmp
roll
mov
fisttpll
or
int
mov
lcall
add
push
and
xchg
pusha
pop
jnp
pushf
sbb
mov
xor
or
jno
sbb
cmp
daa
sbbb
fucom
std
cmp
mov
call
mov
jge
adc
ljmp
mov
push
xorb
cs
loop
mov
push
adc
sub
adc
lods
dec
push
aas
cmp
lret
mov
jle
aaa
add
inc
pushl
sub
jmp
pop
scas
xchg
arpl
xor
xlat
stc
ds
mov
pusha
and
xchg
gs
fwait
shrb
out
sarl
push
dec
mov
into
cmp
outsb
fwait
or
repz
jnp
mov
xor
cld
jmp
fdiv
xor
rolb
scas
ret
mov
mov
add
mov
in
pop
push
jge
or
pop
dec
in
repz
xor
mov
or
leave
lods
fwait
xor
ljmp
ficoms
and
lods
xor
adc
dec
add
mov
sbb
push
repnz
xor
mov
jp
mov
aas
cmp
decl
mov
jo
fsubrl
adc
or
dec
mov
pusha
rorb
inc
sub
sub
outsl
sbb
es
jmp
push
fsubp
or
aaa
jae
pop
xchg
push
repnz
lds
lcall
test
jb
push
cld
xchg
inc
je
outsl
mov
sbb
test
rolb
call
jmp
sub
mov
dec
cwtl
dec
sub
fstpt
cmp
adc
cmp
cmp
hlt
hlt
out
sub
movsl
test
jp
inc
out
lcall
sbb
enter
pop
pushl
nop
cmp
or
pop
jge
jne
lret
lret
popf
daa
inc
popf
mov
cmpsb
mov
in
jecxz
sub
sbb
adc
repz
or
sbb
add
pop
dec
sub
jmp
mov
inc
icebp
repz
rcl
cmp
jp
push
xor
cs
aaa
rorb
mov
pop
dec
sar
imul
add
repz
and
in
sub
fdivs
je
jp
clc
mov
xchg
repz
jns
cli
push
xor
push
lds
cmp
gs
dec
test
popf
hlt
sub
fstl
xor
aam
sarb
or
xor
add
fmull
in
add
jo
pop
fidivs
inc
ljmp
mov
cmc
insl
jg
xlat
movsb
sbb
das
test
es
xchg
mov
mov
push
arpl
insl
push
add
push
test
push
sbb
pop
aad
push
mov
xchg
lds
jo
fsts
cwtl
pop
jecxz
mov
push
sbb
aad
jns
out
cmp
jbe
das
sbb
add
sub
sbb
adcl
add
ds
and
negb
out
aas
je
mov
imul
ret
lahf
inc
mov
mov
sbb
push
lods
nop
dec
add
or
xchg
mov
add
loop
fwait
pop
sbb
mov
mov
inc
xlat
or
mov
outsb
sub
fsubs
mov
mov
push
lods
xor
das
out
jmp
xor
ficomps
arpl
xor
adc
loopne
and
in
daa
sub
test
push
int3
dec
out
push
sbbb
imul
add
dec
lret
test
filds
pop
cmp
addl
xchg
out
mov
dec
or
xchg
sti
jle
arpl
aad
leave
adc
in
aam
mov
jo
insb
nop
fnstenv
and
out
sbb
repnz
jmp
fwait
clc
ret
jmp
pusha
pop
push
and
int3
lods
mov
xor
out
add
mov
testb
xor
lret
fstps
cmp
cmp
xchg
repz
test
loope
dec
jbe
push
aad
jo
pusha
aad
and
aad
scas
dec
xchg
int
inc
sbb
mov
push
jno
les
dec
lods
dec
daa
push
add
push
stos
push
dec
test
insb
mov
pop
popa
sar
or
cmpsl
add
in
sti
test
pop
sub
xchg
xchg
pop
ds
in
xchg
mov
icebp
fsts
into
jnp
mov
daa
xchg
outsl
les
dec
pop
pop
lret
pop
xor
pusha
sti
testb
cwtl
jo
add
fdivrs
mov
push
stos
xorb
dec
inc
and
cwtl
fwait
pop
aad
add
out
inc
je
testl
ret
fistps
pop
xor
jmp
push
mov
decl
lds
mov
shrb
mov
daa
addr16
rcll
jecxz
inc
sub
cwtl
outsl
and
xchg
enter
push
xor
rcrl
gs
xchg
add
fistpll
fcoms
xor
mov
cs
jbe
adc
arpl
xor
mov
pop
mov
idivb
cmc
negl
push
dec
daa
std
add
mov
xor
xor
or
fdiv
pop
jo,pn
xchg
and
mov
clc
sarl
mov
jg
xchg
mov
ds
loope
jge
addr16
mov
xlat
int3
mov
iretw
mov
adc
adc
aam
loope
iret
inc
push
adc
lds
lcall
adc
in
das
stos
inc
mov
cmpsb
data16
movsb
push
pop
fs
mov
xor
insl
push
sbb
push
fdiv
stc
cld
repz
fwait
mov
and
aaa
add
xchg
shll
jle
and
cmp
cmpsl
adc
push
sub
and
xor
mov
push
cmp
mov
movsl
popa
sbb
and
mov
pusha
pop
dec
lea
pop
pop
dec
movsb
fdivl
fisubrs
add
sub
lods
push
shll
jne
push
inc
jp
mov
pop
pop
jns
xorb
adc
popa
add
arpl
pop
fldl
jns
lret
sbb
pusha
ds
xchg
mov
sbb
xchg
sbb
mov
test
out
aaa
sti
cli
inc
shll
loopne
mov
fldt
repnz
test
dec
cmp
aam
dec
push
xor
lods
adc
sarb
outsb
test
dec
mov
xlat
push
dec
repz
inc
push
fimull
repnz
cmpsl
lcall
fidivrs
mov
loop
push
fdivrs
mov
stos
dec
addr16
push
stos
mov
mov
popa
pop
cmp
jl
push
fwait
cmc
xor
outsb
and
pop
dec
and
fbstp
movsb
les
imul
dec
jl
lret
mov
subl
and
jge
push
inc
mov
xorl
shl
rorb
subl
add
das
cmpsl
fisubl
dec
cmc
pop
fwait
mov
call
sbb
mov
xor
xchg
sahf
jge
lea
mov
bound
mov
xchg
push
ljmp
mov
testb
test
hlt
push
mov
push
or
repnz
lods
xchg
outsb
ja
lcall
sub
std
cmc
aaa
adc
je
xchg
leave
sbb
pop
mov
popf
pop
sub
lret
hlt
loopne
fldenv
insl
into
repnz
insb
outsl
arpl
dec
mov
jno
dec
pop
xchg
pop
push
ljmp
sub
aas
idivb
and
xor
cmp
hlt
into
cmpsb
fnstsw
xor
mov
mov
mov
fistl
aam
in
push
jecxz
push
push
ljmp
orl
jg
subl
mov
test
cmp
jl
ljmp
cmp
lods
add
inc
lock
push
jle
jnp
jns
mov
les
jbe
ret
fdivl
inc
jbe
jb
inc
jp
fs
popa
cmp
mov
adc
cwtl
cmp
fisubrs
mov
stc
scas
mov
mov
daa
int
adc
sub
jge
mov
inc
aad
ret
ja
cmp
scas
and
sbb
pop
sub
test
outsl
push
dec
add
test
push
rorb
push
fs
imul
dec
cmp
aam
sbbl
push
insl
daa
jge
cmp
es
xchg
in
es
repz
scas
xor
or
mov
adc
test
pop
or
int3
lea
mov
sbb
addl
ret
push
stos
icebp
push
fsubs
es
repz
pop
aaa
cmp
imul
test
sbb
in
sti
mov
sbb
add
ret
je
mov
xlat
jge
cltd
xor
scas
and
clc
push
ss
je
mov
std
mov
fidivl
mov
push
lahf
lea
jmp
ret
jl
pop
nop
daa
mov
cmpsl
fwait
mov
int3
xor
inc
xchg
add
adc
not
lea
sub
jge
jo
pop
mov
mov
stos
rcl
stos
dec
movsb
pop
push
cwtl
and
pop
add
aam
in
leave
fwait
or
cmp
stos
xor
xor
sar
jb
push
inc
nop
xor
add
xchg
popl
notb
jl
dec
sub
mov
xor
jg
pop
inc
jbe
int3
sub
test
pop
add
lret
mov
pop
outsb
andl
jecxz
add
or
jmp
aaa
jne
loope
push
add
ficoms
cmpsl
and
fisubs
xor
pop
dec
fisubrl
pop
add
int
das
sbb
ficompl
outsl
jle
inc
cmp
sub
pop
mov
mov
xchg
in
adc
jnp
push
test
sbb
push
loope
push
or
rolb
cltd
setbe
fstpl
outsb
push
fbstp
pop
nop
clc
stc
mov
gs
mov
daa
dec
popa
xrelease
cmp
jbe
popa
cmpsb
sub
push
or
xchg
bound
pop
out
insl
nop
cmp
leave
xor
lods
out
mov
cmp
push
cmp
cmp
pop
mov
and
lahf
xor
mov
push
jp
pusha
push
add
stos
rorl
arpl
mov
out
xor
movsl
cltd
fdivrs
pop
push
mov
fimuls
lcall
sbb
xor
xor
repz
mov
cmpsb
adc
lahf
cmp
and
xchg
add
sbb
lock
sub
and
push
dec
repnz
mov
out
pop
cld
stc
cmc
test
movsl
or
inc
mov
and
loopne
cmc
fiadds
xchg
andb
add
pop
dec
lcall
mov
in
fildl
bound
xor
mov
sub
movsb
enter
arpl
pop
mov
popf
cmpsl
jmp
pusha
cld
mov
ja
pop
fldl
hlt
or
pop
fldcw
popa
mov
loope
cmpb
jmp
int3
jge
scas
add
add
ret
icebp
sub
and
es
add
test
icebp
push
and
aam
cli
jbe
repz
mov
push
in
movsl
jno
pop
and
dec
pop
out
int
sub
mov
mov
adc
inc
mov
nop
popf
popa
mov
clc
sarb
es
push
cmc
ss
cmp
shll
int3
rcr
loopne
sbb
clc
testb
push
test
sub
jae
and
cmpsl
mov
les
mov
jge,pn
push
adc
sbb
mov
dec
daa
jb
ja
mov
ds
mov
rolb
bound
mov
adc
sub
ljmp
aaa
cmp
and
xor
and
ret
pop
pop
dec
or
out
xchg
sbb
repz
stc
pop
add
add
loope
cmc
negb
push
inc
pop
fsubrl
xchg
cmp
pop
mov
xchg
or
jmp
inc
lods
cltd
orl
cmpsb
cmp
or
or
jl
xchg
xor
mov
test
xor
adc
lret
push
imul
jp
aad
int
cs
sub
dec
in
loop
and
int
add
xchg
mov
andl
imul
add
add
mov
js
mov
push
lea
adc
les
fldenv
jmp
or
pop
xor
xchg
jmp
leave
lcall
nop
dec
mov
pop
int
cwtl
std
aaa
fwait
lret
sub
enter
and
inc
imul
xchg
aas
inc
add
loopne
ret
sti
jnp
adcb
xor
xchg
sub
mov
in
adc
fnsave
pop
ja
mov
sti
xor
dec
movsb
shlb
stos
sub
mov
sbb
rcll
inc
jo
pop
jae
jnp
cmp
scas
pop
sub
add
cmp
lods
mov
fisttpl
or
hlt
push
adc
ja
call
pop
jmp
mov
sbb
fwait
sbb
loope
dec
loope
xor
adc
je
jo
ljmp
outsb
mov
jnp
lods
js
pop
popa
mov
jne
loopne
loop
push
aaa
pop
push
jb
aas
mov
mov
push
in
in
add
mov
lahf
add
dec
mov
test
adc
imul
inc
ret
fisubl
jle,pt
stos
inc
push
in
jno
sub
inc
and
sbb
push
inc
sbb
xchg
cs
aaa
push
pop
popa
mov
fimull
ja
ret
lock
hlt
push
sub
cmc
test
push
sub
or
mov
js
into
mov
stos
cli
and
ror
repz
inc
cmp
rcr
mov
sbb
jl
rep
cmp
add
cli
cld
stc
mov
addr16
mov
add
inc
sub
mov
lahf
mov
fidivs
xor
fcoml
fstps
jl
daa
insb
movsl
pushl
push
movsb
lds
mov
repz
pop
subl
inc
addb
adc
orl
adc
mov
pop
popf
out
scas
mov
movb
popa
repnz
lods
xor
xchg
inc
xor
out
xchg
mov
sti
std
int3
sub
adc
xchg
jecxz
or
pop
dec
mov
xchg
xchg
aaa
andb
in
aas
rcrb
add
sbb
test
fmuls
fstl
call
or
adc
sub
in
mov
stos
mov
xlat
push
inc
loope
jmp
sti
fstpt
mov
jne
mov
sbb
int
ret
mov
add
push
lds
add
ss
fadd
call
dec
lock
shrb
xor
test
cltd
cmpsl
push
inc
sbb
sbb
stos
cmc
dec
popf
loope
mov
or
je
add
shr
in
shl
cmp
inc
jno
ds
dec
and
pusha
push
mov
mov
aaa
pop
outsb
nop
mov
inc
mov
inc
adc
aaa
repz
inc
inc
mov
sbbb
sub
add
insl
jg
dec
rorb
mov
push
andb
push
adc
lods
inc
cmpsl
pop
mov
pushf
fcoml
xchg
lahf
push
cmp
jp
mov
cmp
cwtl
sub
outsb
jns
xchg
in
or
lret
imul
daa
cwtd
mov
rcr
and
pop
pushl
xchg
shrl
or
gs
sbb
pop
mov
cmp
adc
and
push
sbb
xchg
sub
mov
in
test
loope
dec
push
movsb
xchg
mov
loop
int
mov
sub
sub
test
test
rcll
cmp
or
jns
sti
mov
adc
fcomps
cmpb
daa
nop
cmp
int3
lods
pop
or
leave
fimull
xchg
cmp
inc
inc
xchg
aaa
xorb
popf
aam
add
stc
leave
test
lds
pop
cmpsb
inc
mov
lea
push
inc
dec
fdivs
push
adc
jecxz
mov
jecxz
cmc
test
mov
xchg
cmp
pusha
int3
xchg
sub
xchg
pop
pusha
sbb
addr16
cmp
repnz
or
out
and
pop
cmp
pusha
in
mov
pusha
add
add
jo
push
xor
mov
pop
loopne
cmp
jg
sub
mov
push
movsb
push
jge
fisubrl
pop
sbb
adc
dec
add
clc
ret
push
lods
rcll
inc
mov
jecxz
adc
lea
test
andl
cmp
cmpb
push
shlb
cwtl
aas
xorb
jbe
cld
mov
rcl
add
stos
shll
stc
shl
ret
mov
push
jo
add
mov
decb
xlat
jno
scas
lods
pop
cmpsl
lret
and
adc
je
movb
cs
in
cld
stos
and
fidivs
imull
add
cs
mov
xchg
cmp
repnz
pusha
out
incl
gs
testl
jnp
imul
addr16
fistl
stos
insl
adc
pop
inc
xchg
add
int3
push
lcall
loopne
cmpsl
pop
and
das
es
iret
cmp
insb
push
jge
mov
and
inc
adc
bound
bound
jmp
es
jl
rolb
lret
cwtl
orl
add
test
aad
push
jne
inc
inc
scas
test
cmp
dec
and
add
icebp
adc
cmp
adc
jbe
cld
adc
scas
dec
xor
pop
insl
roll
xchg
mov
lcall
fistl
mov
ja
imul
and
nop
inc
xor
icebp
daa
sahf
icebp
daa
sahf
adc
cltd
cmpl
fwait
mov
repz
ucomiss
jo
cli
popa
sub
inc
sbb
test
mov
mov
pop
sbb
icebp
sbb
incb
push
pop
jo
sarl
mov
adc
jae
dec
xchg
std
jp
xchg
xlat
imul
out
lods
neg
mov
xor
push
pop
or
ljmp
sub
mov
lods
ret
add
or
xchg
mov
inc
insl
push
outsl
repz
popf
out
jp
in
dec
out
dec
cmpsl
lcall
xchg
loop
mov
dec
adc
sbb
push
es
loope
push
into
add
in
jmp
call
push
xor
test
jnp
lahf
out
fsubr
cmp
inc
sbb
aaa
jecxz
dec
idiv
test
dec
loopne
dec
mov
and
jge
daa
in
int
loop
jns
stc
inc
and
inc
pop
pop
inc
mov
add
sbb
fs
adc
sub
cmp
int
clc
sub
lea
pusha
xchg
jo
cs
sti
lds
mov
enter
inc
cmp
sub
mov
jecxz
push
pop
sbb
inc
fwait
lods
movb
and
push
fwait
dec
mov
jb
cli
js
push
lods
aam
adc
xchg
stc
fbld
lahf
int
push
hlt
pop
adc
jnp
push
js
and
fnsave
dec
cmpsl
or
icebp
es
repz
mov
mov
sbb
mov
in
xchg
jo
adc
das
xlat
cmp
imul
repz
xor
xor
in
inc
dec
popa
int3
sbb
cmc
xlat
stos
push
fcmovne
xlat
jle
js
scas
mov
xlat
into
jl
or
push
xchg
push
mov
and
jmp
sarb
std
xor
test
mov
pop
cmpsb
popf
pop
xchg
pop
lods
popf
mov
dec
xchg
jne
mov
arpl
inc
fld
in
pop
bound
sub
lret
les
inc
imul
mov
icebp
xchg
in
andl
xchg
inc
lds
ret
sbb
lods
andb
dec
aad
xor
push
rcr
in
pop
mov
sub
mov
ficoml
mov
cmpsb
call
js
adc
test
ror
push
dec
jns
xchg
mov
mov
and
inc
ja
xor
dec
daa
xchg
inc
lods
xor
outsb
out
push
fldl
iretw
test
pop
rclb
test
xchg
pop
outsb
mov
int3
mov
push
shll
fnstcw
jge
jo
add
mov
std
xchg
aas
in
ljmp
mov
pushf
push
pop
xchg
adc
xchg
sahf
sbb
pop
cmp
mov
test
mov
mov
popa
loop
xlat
arpl
cmpsb
xor
or
int
imull
adc
sbb
mov
out
repz
fdivr
mov
in
imul
sbb
int
bound
cli
loope
push
cmpsb
fcompl
jecxz
mov
push
push
or
std
int
cmp
mov
mov
fucomi
push
push
out
fsts
gs
adc
sbb
xchg
jno
jo
dec
lock
dec
lock
pop
mov
mov
inc
pop
push
or
shrb
fsubl
sarb
psllq
adc
movsb
cmp
jl
stc
add
icebp
testl
fs
add
mov
scas
sub
cmp
or
setb
int3
fisubrs
sub
jmp
mov
sbb
cmp
adc
sub
bsr
test
xor
divl
fwait
push
or
stos
loopne
lds
js
jns
test
imul
notb
popf
pop
lahf
mov
jp
adc
aad
fldenv
xor
jp
pop
jno
leave
stos
fdivs
in
out
jno
stc
rolb
aad
daa
das
push
stc
mov
sub
add
jp
pop
aad
gs
xor
pop
xlat
mov
test
adc
das
fnstcw
mov
pop
dec
imul
bound
mov
mov
clc
push
ja
loopne
pop
mov
or
jns
fadds
push
xchg
shlb
rorl
push
or
leave
fs
add
cwtl
lds
mov
lret
mov
call
or
mov
enter
mov
gs
and
in
pop
sbbl
push
bound
cmp
sbb
dec
mov
outsl
ja
in
not
jnp
lret
cmp
hlt
test
lea
mov
movsl
pusha
mov
addl
xorb
and
jb
aad
mov
lock
fiadds
push
sub
imul
in
sub
sbb
jae
jg
mov
mov
dec
xchg
sbb
cmp
subl
fstpl
seta
rcrb
lods
inc
sub
in
movsl
imul
repz
push
cmpsl
hlt
push
or
inc
in
in
outsl
test
pop
lock
jae
imul
sub
sub
jno
mov
lea
sub
jle
scas
outsl
jg
push
icebp
frstor
adc
push
xchg
jg
sub
add
and
mov
cmp
lds
cmp
sub
mov
daa
filds
filds
mov
add
sbb
cltd
arpl
mov
adc
cmp
dec
or
adc
fdivrs
lret
push
sar
mov
mov
push
mov
xchg
mov
mov
pop
sbb
jnp
aaa
repz
adc
fs
cli
stos
sub
mov
enter
call
xchg
xor
xor
cmp
outsb
stos
push
dec
nop
in
addr16
divb
push
dec
xor
and
inc
mov
mov
shlb
or
lret
mov
xchg
mov
mov
in
cmp
push
inc
push
or
inc
inc
push
inc
aaa
xor
lods
sub
test
pushf
xchg
dec
ret
push
cltd
inc
mov
lods
into
push
cs
lock
push
sbb
adc
test
mov
inc
repnz
dec
test
push
xlat
jo
mov
push
lods
or
jmp
lret
add
leave
jno
pusha
mov
loope
pop
scas
repz
cwtl
xchg
ret
cld
adc
xor
inc
lcall
les
push
lret
fidivs
cmp
mov
pushl
xor
and
add
in
xor
sbb
xorl
lret
movsl
or
pop
lret
adc
pop
adc
add
shlb
push
sti
dec
mov
push
pop
lcall
lock
addr16
daa
dec
mov
dec
sub
xchg
pusha
iret
pop
xchg
add
dec
mov
shrb
jge
aaa
imull
jae
movsl
mov
leave
and
or
mov
iret
repz
fadds
cltd
lcall
add
daa
ret
fcoml
dec
js
aaa
cltd
and
push
mov
cmp
sub
mov
movsl
in
adc
add
popf
fisttpl
jle
sub
cmp
ficoms
ja
dec
idivl
dec
in
dec
xchg
out
sahf
lock
push
sub
loop
in
aas
and
aam
add
sbb
inc
mov
out
sbb
test
pop
pop
add
shl
cli
push
and
xchg
lahf
xchg
gs
rclb
mov
imul
or
mov
push
test
fwait
push
dec
jno
push
test
push
in
add
or
movsl
push
jg
lods
orl
movsl
jp
lcall
sbb
mov
pushf
arpl
mov
mov
xchg
mov
stc
push
push
arpl
hlt
test
ret
fs
dec
add
xchg
fstp
cmpb
push
cmp
imul
jge
or
into
cmp
push
inc
xchg
ret
scas
push
andl
mov
lret
inc
xor
push
inc
lcall
fwait
loope
pop
push
jle
imul
js
jne
xchg
fsubl
mov
cmc
xchg
cmp
int
sub
cmpps
pusha
push
scas
mov
ffree
jne
mov
mov
mov
jle
jns
push
add
pop
jge
mov
xor
mov
lods
push
call
inc
or
adc
int3
dec
out
push
aam
cld
ja
ret
dec
ret
or
or
inc
sub
lahf
lcall
aaa
push
ret
xchg
push
push
jo
fwait
repz
push
xchg
pushf
push
pop
push
adc
les
xchg
cs
enter
sbbb
loop
gs
scas
sbb
mov
rcrb
xchg
adc
shrl
fwait
or
bnd
and
xchg
sub
pop
adc
push
lods
ret
push
and
insb
sbb
mov
dec
repz
dec
int3
andl
popa
jecxz
repnz
or
cmc
sarb
popf
cmpsb
push
enter
int
mov
push
scas
mov
mov
push
inc
test
and
cmpsb
xor
and
sbb
push
outsb
xchg
jne
addr16
daa
adcl
and
mov
lret
scas
fstpt
into
xchg
and
inc
pop
rcrb
cwtl
lock
mov
xchg
test
cmpsl
fistl
clc
loope
decl
rol
adc
or
add
mov
and
fisubrs
pop
jb
das
xor
sbb
loop
icebp
xchg
insl
cmpsl
test
lds
arpl
ficoms
clc
adc
inc
mov
fcmovnu
dec
and
leave
sbb
dec
shll
inc
mov
inc
icebp
mov
shrb
out
jo
das
pop
in
dec
mov
lock
push
movl
sahf
enter
mov
or
pop
xchg
clc
insb
add
rcll
sub
loopne
push
sub
inc
in
or
fnsave
sub
sub
int
ficomps
cs
test
xor
and
pusha
cwtl
shll
push
test
push
pop
sbbb
or
pop
arpl
sbb
es
repz
jns
add
pop
xlat
scas
adc
insl
scas
adc
gs
lea
ret
sub
out
inc
mov
roll
mov
lcall
in
pop
fcmovnbe
popf
cmc
mov
cmp
das
ret
gs
aaa
lret
xor
les
sti
fnstenv
pop
sbb
jno
jnp
loope
mov
fs
dec
push
cwtl
aam
and
inc
call
es
adcl
sub
daa
xchg
lea
and
enter
xor
add
mov
sub
push
in
imul
cli
pushf
in
push
ja
sbb
jp
mov
mov
data16
or
es
add
jl
cmp
mov
pop
test
sbb
push
mov
sub
jbe
scas
mov
ret
lods
add
arpl
loopne
out
dec
lret
int
insb
cs
mov
inc
sarl
loopne
xor
je
test
xor
and
in
lret
lock
xchg
lahf
mov
inc
mov
add
push
mov
stos
sub
test
push
mov
cmp
outsl
rcrl
sbb
orb
lcall
or
shrl
inc
outsl
nop
ja
or
mov
out
mov
adcl
push
or
fistl
movsb
js
adc
pop
push
mov
adc
cmpsb
std
ret
mov
xor
jo
in
sbb
and
aad
js
ljmp
mov
popf
mov
lods
dec
enter
addb
out
sbbl
sub
scas
fcmovne
cld
pop
mov
in
ret
aad
leave
out
cmp
adc
dec
mov
pop
ja
xchg
icebp
loop
push
mov
mov
insl
jno
stos
or
mov
push
or
inc
scas
dec
fimuls
pushf
jmp
pop
mov
sub
lds
xchg
in
shlb
jmp
mov
pop
stc
mov
pop
inc
add
jo
and
insb
sub
xor
mov
cwtl
add
pop
lds
push
inc
jp
addr16
movsb
adcb
xlat
loopne
push
push
ljmp
stos
fcom
insb
push
xchg
nop
pop
in
xchg
lcall
outsb
push
subl
push
mov
xor
das
inc
in
sti
lods
repnz
sbb
std
add
loop
icebp
adc
cltd
sbb
dec
add
or
arpl
sbb
cmp
insb
scas
cwtl
scas
mov
adcb
fisubs
ljmp
cli
xor
repz
adc
das
ret
sbb
scas
xchg
stos
mov
adc
xchg
in
sub
fsubrs
push
daa
sbbb
lods
fcoms
popa
and
mov
lock
in
and
lods
sbb
in
pop
inc
mov
adc
scas
push
add
fwait
nop
push
cld
xchg
cmc
add
xchg
test
xchg
test
fcoml
mov
aaa
push
jp
roll
gs
cmpsl
out
idiv
bound
inc
lret
sub
scas
push
ror
fbstp
rorl
adc
sarb
cmp
jmp
in
orl
movl
inc
add
adc
push
dec
xchg
aas
lea
sbb
dec
cltd
sub
subl
jge
mov
mov
push
mov
xchg
add
clc
and
push
fdivrp
add
pop
push
fdivrs
push
push
lds
sub
inc
xchg
jns
ret
movsl
pusha
std
push
pop
test
icebp
rcll
pop
stc
dec
je
and
mov
dec
mov
test
lret
and
ljmp
jle
sbb
adcb
movl
stos
mov
jns
addl
sub
sub
aaa
fisttpll
es
adc
in
mov
in
out
lods
test
pop
aaa
inc
dec
or
ficoml
popa
cs
push
pusha
cli
ja
jne
xchg
notb
xor
incb
mov
add
sub
adc
jo
loopne
jno
xchg
pop
mov
and
cmpsb
in
push
aaa
xchg
imul
inc
int
out
aaa
ret
aaa
push
aam
push
xchg
mov
sbb
aas
dec
jp
sbb
fisttpll
push
and
lods
cmc
mov
jg
pop
fistpll
mov
and
and
imul
in
xor
adc
mov
loop
repz
mov
jge
mov
cmpb
pop
adc
lock
mov
pop
mov
insl
add
push
insl
sub
mov
xorb
int3
pop
fildl
xchg
fwait
sbb
cmpl
sub
cmp
icebp
dec
movb
mov
pop
add
fld
lahf
mov
rolb
test
mov
hlt
mov
repnz
dec
mov
lahf
cs
xor
cld
xor
ffreep
xchg
leave
repz
or
inc
popa
cwtl
jmp
dec
loop
leave
out
cmc
lcall
mov
dec
dec
push
leave
and
xchg
repz
mov
mov
add
jmp
add
out
fldt
fs
push
dec
ljmp
xchg
in
push
movsl
js
aam
sub
mov
enter
dec
pop
movsl
mov
fucomp
jb
fucomip
push
add
flds
jle
imul
roll
addr16
push
adc
sti
stos
cmpsb
xor
out
xchg
sub
flds
inc
dec
popf
imul
add
daa
pop
ds
xor
or
dec
inc
or
sub
and
into
push
mov
jne
repz
repz
mov
xor
push
icebp
sub
shrb
xor
adc
hlt
vcvttps2dq
lock
and
cmp
jmp
gs
mov
inc
movsb
and
push
daa
in
test
pusha
aaa
sub
in
and
enter
add
pop
jo
pushf
or
xchg
pop
loopne
lea
adc
inc
lods
cmpsb
inc
xchg
add
mov
lcall
scas
movsl
cmp
aam
fdivl
jecxz
jl
mov
dec
fsts
clc
dec
movsl
mov
jg
sbbb
std
jnp
or
or
not
jg
push
repz
mov
pop
pop
gs
adc
and
xor
mov
sbb
mov
jg
pcmpeqd
mov
push
mov
adc
fdivrl
add
jns
cs
xchg
call
flds
lcall
jo
out
inc
lret
inc
in
inc
push
insl
mov
ja
sbbb
clc
imul
and
jnp
or
xorl
xor
push
out
and
xor
in
jmp
ljmp
mov
push
jmp
lods
xchg
arpl
lock
fisubs
dec
sub
int
movsb
rorl
cltd
out
addr16
mov
std
ds
lret
ja
mov
mov
sub
add
ficompl
mov
mov
inc
addl
fldpi
push
adc
in
jg
push
ds
stos
das
mov
mov
inc
outsb
pusha
jnp
jb
js
dec
pop
idivb
jne
in
bound
dec
scas
push
xchg
push
ljmp
mov
push
rcrl
pushf
dec
cmp
clc
subl
mov
loopne
xlat
cltd
daa
xor
lds
mov
xor
out
inc
pop
dec
sarl
cwtl
xor
add
fs
jo
lcall
cli
aas
test
mov
popf
jb
fmul
dec
sbb
adc
icebp
lods
push
push
jg
pop
push
jge
mov
jne
ljmp
out
sub
xlat
dec
jp
shll
and
jns
insl
mov
xor
jnp
or
sar
cmp
add
mov
hlt
mov
xor
shrl
out
jo
and
push
mov
fmul
sub
icebp
sub
out
movsb
call
scas
in
out
sub
and
scas
sbb
andl
push
sub
xor
xchg
push
popa
jge
fbstp
push
add
adc
out
adc
inc
decl
outsb
push
popl
rclb
nop
xor
je
test
push
mov
fdecstp
push
cmpsl
ss
adcb
pop
mov
por
push
mov
push
daa
dec
adc
adc
sub
and
in
inc
sti
mov
aaa
cmc
test
mov
ds
stos
lods
mov
cmp
int3
fildl
jb
cltd
je
fisubs
adc
dec
add
outsb
and
jns
add
adc
mov
int3
mov
jnp
sbb
mov
scas
adc
xor
lcall
adc
xor
sbb
inc
pop
and
or
mov
sub
jae
mov
mov
cltd
dec
sub
popf
cmp
rorl
je
test
and
mov
dec
dec
push
out
jle
imul
sbb
mov
xorl
inc
fildl
xchg
or
jmp
ret
mov
hlt
push
gs
or
stc
xor
mov
add
mov
pusha
dec
xorl
test
decb
ret
inc
mov
add
xchg
pop
in
shrb
psrld
jmp
jne
in
sub
push
pop
push
sbb
jp
xchg
and
call
int3
mov
rcrb
or
mov
and
or
into
jns
out
std
orb
jne
call
mov
jp
ror
dec
jo
addr16
jbe
dec
mov
jo
bound
mov
push
xchg
jg
inc
push
or
mov
es
mov
pop
scas
pop
ljmp
mov
cmp
sbb
push
popf
lods
push
stos
push
mov
push
popa
jge
stc
dec
adc
mov
call
out
mov
mov
bnd
mov
ljmp
mov
ret
je
jne
add
out
out
fs
iret
jp
cmpsl
jmp
movsb
arpl
rorb
inc
mov
stc
sub
push
sub
cmpsl
inc
and
mov
rclb
push
bnd
ljmp
negl
fcoml
mov
dec
xor
sti
daa
or
bound
sbb
imul
std
pop
xchg
jbe
lock
jns
notb
sbbb
fmuls
jno
ds
ss
dec
jne
les
adc
add
pop
data16
aas
clc
mov
jmp
shr
lret
fiadds
int
sbb
xor
mov
jae
adc
cmp
mov
es
imul
inc
add
mov
pop
jne
arpl
imul
xchg
pop
mov
loop
xor
pop
out
sbb
fdivrl
pushf
mov
adc
or
mov
sahf
push
adc
mov
cmc
repnz
pop
xlat
mov
sub
in
dec
jno
jecxz
cmp
pushf
push
sti
jbe
xlat
inc
xchg
pop
ljmp
or
dec
ljmp
andb
inc
xor
insb
push
out
mov
mov
sub
into
imul
scas
dec
mov
mov
je
incb
push
ljmp
out
mov
mov
adcb
xchg
ficoml
nop
sub
out
ljmp
jecxz
jb
sbb
mov
jmp
sub
jg
cmp
fnstenv
aad
imul
dec
cmpsb
pop
add
or
in
push
push
out
jae
push
rcrl
scas
mov
xchg
pop
cmpb
pusha
jo
push
in
aad
sub
ret
pop
pop
lea
repnz
fucom
movsb
push
or
and
inc
lods
inc
or
inc
push
xlat
adc
imulb
ljmp
dec
pop
mov
pop
jbe
mov
or
dec
sbb
leave
mov
inc
xor
pop
adc
jae
faddl
push
lea
sarl
jnp
push
mov
pusha
push
test
jmp
arpl
pop
mov
imul
cmpb
ja
loope
or
cmp
out
dec
add
data16
shlb
repz
jb
and
fisttpll
not
iret
outsl
idivb
lods
bound
fdivp
test
dec
pop
cmc
dec
add
test
pop
fptan
or
lock
cli
or
mov
mov
aad
orl
repnz
mov
pop
scas
out
aas
dec
ds
xlat
mov
or
xor
push
es
loope
adc
rcrl
jo
jmp
inc
dec
loop
xchg
sbb
mov
cmp
jne
pop
aaa
adc
push
imul
jl,pn
lahf
sahf
leave
fs
lods
add
sub
jnp
mov
push
lea
rorl
popf
lds
les
pop
xchg
xchg
ja
out
push
jg
pop
sahf
pop
popa
push
dec
jge
dec
test
pusha
push
adc
pop
jns,pt
mov
sub
pop
mov
xchg
rcrl
fcomps
xor
dec
sbb
dec
xor
movsl
jne
mov
sub
nop
addr16
imul
and
dec
or
inc
sbb
mov
mov
mov
loop
jbe
xchg
push
lds
scas
mov
push
icebp
push
es
orl
adcl
das
outsl
stos
pusha
jb
lock
fsts
sub
adc
mov
cmp
int
xor
aad
aad
push
jbe
xor
leave
shlb
xor
rcr
pop
pop
jecxz
int3
lods
mov
scas
add
adc
cmp
aam
dec
movb
cmp
mov
mov
cs
and
push
mov
inc
push
nop
lea
and
dec
iret
out
mov
jmp
pop
sub
jmp
mov
inc
cwtl
leave
inc
cs
xchg
or
cli
into
ljmp
stc
adc
add
mov
int3
inc
adc
fnsave
adc
cmpsl
mov
push
hlt
xor
adc
sbbb
sbb
jns
in
and
pop
inc
cltd
inc
lahf
dec
popf
fistl
xchg
imul
and
adc
jmp
out
in
dec
cmp
idiv
das
in
stos
jmp
popa
loop
jmp
push
incl
fmul
imul
sub
xlat
dec
mov
sbb
pop
dec
out
cli
sbb
repz
in
dec
loop
ja
rcl
scas
push
aaa
or
adc
or
enter
mov
ljmp
repnz
lds
mov
outsb
mov
mov
sbb
adc
inc
add
and
inc
hlt
xchg
lcall
in
movsl
shrb
pop
sub
cld
add
inc
inc
int
cs
mov
je
xlat
fldl
push
sbb
cmpsb
cmp
fwait
jle
push
mov
pusha
adc
jmp
adc
lds
gs
pusha
and
insb
jnp
nop
or
and
mov
insl
not
xchg
add
fld1
clc
fstl
cmc
adcl
lods
or
or
inc
pop
movsb
iret
loope
mov
imul
lahf
add
enter
mov
gs
add
add
pop
add
or
les
stos
add
mov
jmp
sbb
inc
push
orb
loopne
nop
cmp
dec
sbbb
add
outsl
nop
adc
addl
stc
add
outsl
or
out
sti
in
in
jns
scas
and
gs
jnp
mov
aaa
scas
xor
dec
jb
mov
cmpsl
push
push
xor
fdivrs
inc
jp
inc
sub
mov
adc
inc
inc
pop
pop
cmpsl
xchg
mov
add
dec
sub
test
xor
inc
scas
mov
mov
bound
outsb
xor
lods
in
imul
cltd
mov
xor
jb
lods
addb
jle
es
mov
div
sbb
js
cli
adc
clc
mov
rcll
int3
outsb
cmpb
add
mov
sub
lret
lock
mov
inc
je
sub
pop
add
mov
jne
mov
push
faddl
cmp
cmp
test
fnstsw
ret
pop
add
loope
ret
aas
out
cmp
xor
and
adc
call
out
xor
pushf
loopne
inc
arpl
cmp
in
mov
xlat
movsb
dec
mov
xlat
ds
xchg
daa
out
imul
repnz
sti
movsl
dec
stc
fsubrl
xor
out
data16
clc
xor
pop
stc
pop
jmp
mov
mov
adc
inc
and
jo
cmp
fnstcw
cmpsl
xor
imul
jnp
imul
mov
lret
data16
data16
insl
push
sub
ret
add
loopne
inc
test
loopne
jbe
fisubs
fst
jl
pop
mov
cmpsb
dec
dec
lods
sbb
dec
mov
adc
adc
mov
stos
stc
push
and
fucomi
sub
icebp
xchg
movsb
into
aaa
mov
and
fwait
stos
stc
leave
dec
in
repnz
iret
adc
pop
dec
cmp
xor
ret
sbb
movsl
cmp
les
lahf
adc
std
xchg
jl
xchg
das
fldl
fnstsw
scas
mov
cmp
xor
and
or
jge
out
sub
and
xchg
lods
cmp
xlat
sahf
and
ds
call
xlat
jge
out
shlb
and
and
add
and
add
stos
push
pushf
push
std
pop
pop
and
inc
cmp
push
mov
adc
lods
sbbb
repz
in
mov
mulps
rorb
fnstcw
dec
sbb
roll
sbbl
jg
jnp
sbb
inc
or
and
mov
les
mov
xchg
mov
mov
jg
cmp
mov
jle
xchg
xor
int
inc
adc
and
inc
lret
push
dec
fisubs
js
leave
insl
adc
insl
sub
jmp
dec
into
mov
ds
inc
lea
sahf
push
movsl
test
add
lods
xchg
popf
pop
mov
shl
lds
dec
movntq
nop
cli
loope
js
jg
leave
pop
xchg
out
cwtl
push
pop
fwait
jnp
or
sbb
pop
testl
xchg
es
cwtl
cld
stos
jecxz
dec
in
or
pop
sarl
lcall
call
sub
inc
jns
dec
sub
scas
not
out
into
lret
cltd
adc
cld
andl
fs
bound
adc
call
sbb
hlt
mov
jb
add
stc
push
dec
adcl
cwtl
icebp
cli
push
sbb
stos
out
adc
scas
add
xchg
in
cld
mov
xchg
xchg
cmpsb
and
mov
icebp
add
and
out
stos
gs
xor
subl
sub
in
nop
jmp
lods
ja
push
int3
mov
movsb
cltd
jne
sub
xchg
or
dec
push
and
mov
std
stos
xchg
cmp
js
mov
xor
dec
int
call
jmp
xor
jecxz
fmull
cmpsl
popa
cmp
jg
ficoms
in
pusha
inc
dec
xor
push
jae
scas
mov
dec
repnz
mov
dec
inc
inc
mov
lods
or
jne
lds
push
sbb
sbb
mov
inc
cmp
fdivrl
jp
mov
scas
loop
pop
xchg
inc
or
rolb
and
xchg
ja
lret
stc
mov
jg
mov
sbb
mov
movd
mov
xor
sbb
movsb
mov
adc
and
testb
shll
jo
aad
mov
mov
jle
mov
jecxz
dec
mov
and
clc
cmp
sarb
ret
mov
adc
xchg
or
add
rol
dec
or
push
pop
dec
sub
mov
adc
sub
sub
xchg
mov
aad
and
sahf
and
mov
popf
lock
lods
out
hlt
enter
std
cwtl
xchg
loopne
arpl
sub
sbbl
pushf
sahf
xchg
push
mov
shl
movsl
call
lcall
out
jg
fisubs
xchg
popf
stos
cli
out
dec
pop
sbb
push
scas
popl
rorb
push
testl
loopne
sub
scas
jo
stc
stc
cmpsb
adc
repnz
sbb
push
cld
mov
mov
push
sahf
or
cltd
fiaddl
cmp
mov
mov
push
xor
jmp
dec
lret
xchg
cli
push
ljmp
inc
inc
fdivs
xchg
push
or
dec
pop
cli
testl
leave
mov
out
jb
push
and
or
loop
insb
insl
pop
fdiv
sbb
pop
test
pop
divl
imul
cmp
fdivrs
test
pusha
mov
cmc
cmc
arpl
shl
mov
sub
push
xor
jg
test
arpl
xor
fstp
ds
je
sub
xor
inc
add
adc
sbb
loopne
inc
mov
outsb
mov
sbb
add
shrb
cmp
insb
sbb
xor
scas
cmp
add
loopne
inc
ljmp
and
inc
loopne
out
aam
test
jb
aas
jmp
dec
jmp
push
sbb
and
into
ljmp
sbb
sub
inc
adc
xchg
std
pop
fwait
dec
jae
sbb
hlt
outsl
push
inc
or
call
mov
aas
pop
cld
test
jnp
inc
int3
mov
or
mov
sbb
insb
xor
xchg
sbb
imul
add
lahf
hlt
lock
mov
jecxz
jnp
les
mov
jg
repnz
outsb
shlb
push
in
mov
or
and
and
jmp
in
pop
and
lea
or
and
pop
xor
jecxz
or
mov
push
pop
sbb
popf
js
pop
mov
loop
stos
hlt
sti
xor
inc
nop
sub
mov
stos
adc
pop
aad
mov
sbb
push
inc
jnp
out
lods
aam
hlt
cmp
push
xorl
adc
enter
bound
or
scas
fnstsw
loop
xchg
pop
sti
push
adc
aas
cmp
jmp
insb
mov
xor
lds
xchg
inc
adc
and
pop
add
popa
mov
mov
push
mov
nop
or
aaa
lea
daa
shrb
push
aas
xchg
ret
cld
dec
notl
rcrl
in
or
jbe
xlat
popf
mov
das
mov
inc
jle
jae
nop
sub
scas
outsl
bound
add
jae
lods
xchg
add
pusha
cmp
mov
push
test
adc
lahf
push
mov
repz
out
stos
mov
subl
fmul
rcl
jbe
std
outsl
aas
fidivrl
cltd
inc
setge
pop
sarb
outsl
lds
cld
cmp
inc
out
clc
push
movsb
jae
loop
mov
rcl
inc
jae
sbb
imul
movsl
cli
mov
ds
mov
push
ja
mov
inc
and
lods
mov
xor
das
push
imul
inc
cmp
mov
dec
cmp
pop
jmp
adc
out
mov
jae
push
jne
repz
aas
stc
cmpsl
xchg
popa
outsb
stc
rcrb
push
mov
lds
and
sbb
daa
arpl
cmp
pop
mov
or
daa
push
shrb
out
fwait
mov
add
jle
fwait
mov
cmp
test
jecxz
idivb
mov
inc
icebp
daa
pop
mov
out
sbb
fiaddl
cli
sti
test
lret
inc
int3
stos
cltd
test
sub
or
popf
nop
ja
xlat
xchg
push
test
mov
pop
jmp
xchg
mov
rclb
fbstp
popa
sbb
adc
or
fidivrs
xor
jbe
xor
ja
test
sbb
or
insl
jl
push
mov
pop
or
mov
jl
call
inc
push
jne
pop
xchg
adcl
mov
jno
xor
call
cli
test
pop
repnz
jg
and
adc
aad
lcall
jno
hlt
outsl
sbb
lahf
xor
fdivs
and
popa
inc
cld
lea
les
inc
xor
cli
sbb
push
xchg
repz
mov
insl
adc
inc
cmp
or
push
enter
jle,pn
sub
lods
jb
rorb
xchg
mov
or
lret
dec
in
add
pop
les
push
scas
sub
lods
rorb
cmp
les
inc
enter
roll
fstps
jl
xor
cmpsb
outsb
and
jmp
and
leave
or
fcmovb
fs
dec
unpckhps
xchg
pop
mov
push
cmp
pusha
jnp
cmpsl
mov
mov
pop
jne
or
push
flds
out
cmpsl
inc
add
sub
cmp
nop
cmp
lcall
andb
pop
ret
imul
test
jl
gs
int3
mov
fs
push
fcomp
insb
xchg
push
and
inc
xor
xchg
dec
xchg
pop
loopne
cli
cmpsl
mov
mov
mov
pop
push
mov
outsb
fildl
aaa
sub
shrb
outsl
aam
ret
dec
fstps
aaa
pusha
jns
xlat
sti
sbb
mov
out
sbb
sbb
daa
mov
test
mov
fcompp
aaa
aad
loope
cltd
jle
scas
mov
sbb
stos
inc
fbld
pop
sahf
inc
dec
adc
orb
dec
xchg
mov
test
push
cld
cmp
stc
lret
push
dec
leave
mov
push
inc
jge
shrl
paddq
ljmp
cs
mov
pop
movsl
mov
sar
fmuls
xchg
in
test
mov
int
fs
and
jmp
mov
loop
stos
add
add
and
dec
out
cmp
jb
mov
mov
lods
icebp
mov
sbb
sub
adc
fldenv
jae
mov
and
push
xor
nop
adc
pushf
scas
xchg
mov
inc
leave
pop
add
mov
adc
test
cmp
clc
pop
push
jb
test
pop
jge
sbb
popf
cmpsl
iret
in
jno
aam
iret
xchg
lds
mov
adc
sahf
push
fstps
bnd
imul
sub
test
sbb
pop
sbb
fcomp
mov
jns
jle
mov
xorl
es
cmp
mov
xor
jno
xchg
push
mov
aad
add
push
mov
mov
or
aas
scas
push
mov
sub
aad
in
fsubrl
fwait
or
adc
insl
les
call
repnz
xchg
out
roll
pusha
push
pop
nop
in
rclb
pusha
mov
stc
divl
or
les
fdivs
dec
sbb
sub
dec
andl
popa
lods
cmp
aam
lret
xchg
sub
cwtl
mov
mov
jno
out
pop
cmp
enter
lods
pop
in
sti
fs
data16
jae
out
shrl
push
add
iret
cmpsl
nop
js
xor
dec
divl
cld
and
cmpsb
dec
dec
xor
xor
mov
cs
ret
bound
std
or
iret
lds
int3
lea
push
xchg
sbb
sub
pop
hlt
adc
cmp
xchg
loope
or
add
sarl
or
subb
into
xchg
push
push
push
pop
shl
lods
mov
into
shlb
fildll
dec
and
mov
dec
pop
mov
or
mov
int
xor
or
int3
testb
mov
xchg
mov
adc
dec
mov
push
mov
adc
jle
jae
fwait
sti
add
aas
shr
imul
jns
sub
arpl
push
hlt
outsb
ds
xor
pop
add
das
dec
mov
mov
test
inc
xlat
mov
sbb
test
mov
pop
aad
pop
rcll
fucomp
js
and
or
xchg
int
mov
cmpsb
and
push
jns
fldcw
jns
int
adcb
test
or
cmpsb
inc
es
or
adc
xchg
in
ror
bound
hlt
in
cmpsl
pop
mov
pop
cmp
add
push
ljmp
inc
pusha
xor
mov
and
jae
xchg
inc
pop
and
cltd
or
cld
outsl
xchg
add
mov
inc
les
inc
mov
inc
mov
sti
das
das
rcl
adc
cwtl
daa
test
inc
call
mov
jae
mov
pop
mov
pop
sti
dec
popf
xchg
insb
jl
xchg
sub
pop
pop
jmp
fistpl
test
fcoms
sbb
stc
add
iret
xor
inc
bound
shlb
push
movsl
push
in
cmpsl
pop
das
testl
sub
or
mov
sub
sbbb
xchg
int
push
push
insl
jge
sbb
jmp
xchg
cmpsb
mov
mov
movb
cmp
mov
push
addr16
dec
xchg
mov
es
mov
inc
arpl
mov
jno,pt
push
pop
xor
repnz
xchg
or
out
in
add
enter
iret
xchg
rcll
ljmp
and
push
jecxz
mov
xor
cs
mov
pop
jge
int
sbb
pop
and
int3
stc
and
sbb
pop
ja
jne
mov
push
fwait
or
inc
call
dec
pop
push
out
jae,pn
loope
subb
xchg
xchg
rcll
addl
icebp
loopne
scas
mov
ret
push
cmp
mov
repnz
xchg
jmp
cmpsl
aad
jle
jp
jg
rclb
and
mov
sub
mov
cmpsb
adc
adcl
sahf
mov
aaa
pop
pusha
test
or
inc
push
bsr
outsb
dec
jmp
jmp
pusha
ret
cltd
mov
popf
mov
outsb
and
test
inc
add
sti
and
mov
adc
push
jo
ret
xchg
sbb
sub
push
push
popa
test
dec
add
loop
mov
pusha
add
jbe
xchg
sub
xor
push
push
fnstsw
shlb
pop
xlat
call
lret
enter
push
mov
mov
test
cs
out
and
sti
imul
ljmp
jbe
iret
and
and
je
mov
push
daa
jge
negb
loop
mov
rorl
pusha
leave
cmpsb
cmc
jmp
mov
ds
xor
jmp
aaa
xchg
enter
cmp
imul
xchg
lods
pop
insl
or
inc
mov
testb
adc
jae
test
notb
enter
aad
cmc
or
pop
adc
pop
adc
in
fstp
repnz
xchg
xor
jne
mov
aas
loope
jle
dec
pop
outsb
in
ss
push
insl
mov
xor
stos
cmp
mov
cmp
xor
cs
dec
jmp
cs
test
aaa
mov
mov
mov
jnp
scas
mov
xor
loop
push
fildll
insb
push
mov
xor
ds
pop
jge
mov
sub
std
mov
add
inc
push
jae
ds
xor
dec
int3
in
or
add
out
xor
mov
test
sarb
pop
vphsubdq
in
mov
ljmp
bound
adc
push
movsb
xchg
jp
gs
cltd
in
jbe
rcl
mov
sbb
push
xorb
je
xchg
jp
mov
or
cld
aaa
scas
sbb
addl
push
xchg
cli
mov
fcomps
lahf
cmp
push
es
sbbb
ud1
nop
jp
nopl
mov
push
mov
insb
sbb
inc
xorl
xchg
and
adc
dec
in
inc
inc
stc
cld
into
cmpsl
lret
dec
sub
and
out
pop
pop
adc
pop
cmp
pop
jp
inc
ds
cld
pop
rcrb
mov
pop
fisubl
jge
lds
or
mov
cmp
and
out
imul
mov
aas
mov
xchg
insb
cmpsl
jbe
gs
push
cwtl
xor
mov
stos
cmpsb
ss
cmp
aas
cmp
dec
add
shrb
fdivrs
and
jle
push
int3
push
mov
mov
xor
xchg
insb
mov
dec
xlat
in
mov
test
lea
clc
push
mov
divl
mov
and
cmc
rcl
mov
or
and
not
or
in
mov
mov
and
dec
addb
push
loopne
mov
int
aaa
icebp
inc
inc
pand
dec
scas
add
mov
pop
cmp
shrl
out
mulb
cli
mov
iret
jns
push
jno
rolb
repnz
cli
mov
inc
lcall
push
dec
lea
les
or
and
lret
add
mov
mov
cmp
dec
sub
shll
push
push
xchg
out
jo
enter
ss
adc
push
pop
xchg
sub
out
lods
in
jecxz
sub
mov
jecxz
lea
jle
test
lods
push
test
in
adc
dec
pop
pop
jb
bound
fidivrl
idivb
sbb
clc
out
cmp
jb
dec
pusha
shlb
rcl
xchg
adc
mov
imul
daa
inc
mov
xchg
lret
in
int
push
fldcw
out
xchg
ds
lret
aad
dec
lds
jnp
pop
je
es
push
ret
lcall
dec
add
cltd
mov
add
mov
stos
scas
or
xchg
push
or
add
mov
xor
hlt
inc
sub
push
es
dec
inc
mov
fs
push
add
sahf
sub
jne
into
sahf
int3
aad
daa
in
out
clc
pop
pop
icebp
cmc
in
xor
dec
xlat
pop
aaa
and
mov
xor
int
pop
pop
push
mov
mov
mov
hlt
sub
mov
mov
jae
lods
lcall
fdivrp
jl
fcomps
test
pushf
lods
scas
inc
rolb
aam
ret
rcr
inc
test
aam
movsl
enter
test
xchg
fisttps
out
aas
jl
mov
mov
js
pop
adc
pop
jne
jg
add
mov
dec
cmc
sarb
xchg
bound
push
loopne
cmp
jg
gs
jo
hlt
push
in
test
mov
jo
inc
xlat
lcall
outsl
out
jmp
xchg
adc
push
add
popf
mov
ror
cmp
cmp
inc
xor
sub
outsb
mov
pop
lret
inc
fcos
dec
lahf
stos
cmp
cmp
dec
mov
xor
mov
sbbb
daa
sbb
loope
in
inc
dec
sbbl
lret
mov
cmpsb
inc
and
decb
mov
mov
and
ret
out
fstl
js
pop
mov
jnp
cmp
fisubs
inc
mov
inc
xchg
sub
lcall
test
and
fcomps
jne
mov
ljmp
cvtps2pd
bswap
std
in
enter
in
mov
and
scas
mov
mov
pusha
inc
and
pop
mov
nop
push
pop
jnp
jo
bnd
mov
pop
ja
ficoml
pop
subb
xchg
stos
hlt
dec
mov
ja
pop
mov
sub
pop
in
mov
scas
xchg
xor
lahf
insl
xchg
mov
test
xor
sti
xchg
jo
push
enter
dec
mov
xchg
push
test
fwait
mov
add
in
aas
cmp
decl
add
loopne
xor
mov
arpl
popa
insl
jo
mov
data16
arpl
sub
and
push
pop
jmp
stc
leave
xor
and
xchg
pop
inc
lods
mov
sbb
test
jmp
add
inc
push
mov
inc
test
fsubrp
or
movsb
stos
inc
sbb
mov
enter
or
pop
popf
jecxz
xchg
fs
add
jno
jnp
jbe
dec
and
jle
mov
shlb
rcrl
push
fiaddl
xchg
add
or
dec
cmc
xchg
jno
inc
imul
daa
arpl
xchg
push
addr16
call
sbb
imul
inc
xchg
mov
movsl
inc
in
je
out
loop
gs
rol
aaa
or
jp
pushf
dec
push
scas
in
add
fistps
out
push
or
mov
fstl
jge
scas
subl
mov
add
add
mov
adc
xlat
clc
xor
sbb
pop
jns
xchg
popf
shl
ficomps
fs
push
or
jg
pop
jecxz
imulb
and
sbb
or
aas
mov
push
test
repz
sbb
gs
and
outsb
xor
repz
push
mov
nop
lods
mov
mov
mov
fs
pop
xor
lods
xchg
lret
andl
les
push
fs
stos
or
pop
fisttpll
sbb
and
cmp
fdivrp
jno
lret
jmp
das
add
push
lret
inc
lret
mov
subl
loopne
xlat
xchg
xorl
sarl
and
fisubrs
jle
or
sbb
add
adc
movsl
ss
mov
in
mov
int
shrb
xchg
scas
outsb
push
cmp
int
fcomps
xchg
sub
add
push
push
mov
lea
cmp
fcmove
loop
push
fnstcw
scas
sbb
mov
ja
fwait
and
jbe
mov
out
jbe
loope
aas
iret
orl
lock
movsl
mov
cmpsb
adc
mov
out
cmp
mov
mov
sti
adc
shll
movsl
sub
mov
lea
cld
adc
or
mov
cmp
loop
fisttpll
cmp
repz
scas
inc
imul
sub
add
int
and
sti
adcb
add
lods
call
add
enter
lea
fcmovbe
addr16
stos
push
or
sbb
pop
sahf
inc
jnp
icebp
test
and
inc
mov
in
repz
xor
pop
dec
mov
add
mov
stos
dec
out
jns
and
mov
xor
pop
sub
int3
push
ficoms
shll
inc
mov
adc
inc
mov
in
inc
lock
inc
adc
mov
and
and
cmp
push
add
cmpb
outsl
add
stos
or
movsl
or
call
scas
fadds
xchg
pop
cmp
into
ds
nop
add
ret
dec
mov
cmp
xor
add
mov
frstor
mov
pop
sbb
out
pop
orl
push
sbb
int
and
mov
sub
fimuls
mov
mov
jl
add
jnp
mov
in
hlt
adcb
loopne
sti
gs
xchg
jno
outsl
fiaddl
lods
cltd
shll
adc
pop
dec
enter
mov
inc
push
mov
ror
je
inc
mov
fisubl
mov
nop
xchg
mov
sahf
adc
icebp
shr
jo
sub
in
nop
jnp
adc
mov
lahf
aam
mov
sbb
push
daa
test
cmp
cmpsb
psubq
adc
mov
dec
jl
cmpsl
mov
in
rolb
adc
lret
sub
cmpsb
scas
push
ljmp
push
jbe
int3
movsb
insl
jbe
and
xor
or
mov
std
xor
mov
cmp
divl
insb
fxch
xor
dec
dec
shlb
gs
jb
dec
incl
insl
sbb
mov
clc
test
adc
addr16
movsb
fnsave
mov
clc
add
fcoml
pop
inc
push
pop
jo
fsubp
pop
jnp
cld
stos
inc
or
ljmp
mov
adc
jecxz
in
push
or
xchg
pop
inc
cmc
scas
pop
lods
popf
dec
ret
add
aad
cmp
sbb
addl
insl
mov
in
pop
lret
lret
xor
cmp
cmpsb
ljmp
mov
out
sti
dec
add
fldcw
push
les
jnp
jle
jg
xchg
jnp
add
movsb
jns
pop
movsl
outsl
xor
dec
push
pop
flds
popa
faddl
xchg
xor
inc
lea
aad
jno
push
inc
inc
push
xchg
mov
sbb
call
inc
ss
mov
sbb
push
in
xchg
and
hlt
rorl
ljmp
or
pop
test
inc
sbb
dec
mov
loop
inc
mov
mov
out
and
adc
xchg
xor
ds
sbb
addl
cmpsb
sbb
or
dec
scas
decl
xsaveopt
cld
mov
popf
push
jo
mov
sbbb
jmp
mov
jb
out
xor
ret
cwtl
test
int3
scas
sbb
js
mov
cmp
push
pop
mov
xor
mov
sub
mov
and
add
xor
adc
pop
cmp
push
clc
push
push
sbbl
dec
mov
cmp
xchg
test
push
sub
insb
ret
push
mov
aas
inc
or
shlb
dec
adc
mov
fldl
cmp
ds
lea
icebp
leave
rcrl
imul
sbb
inc
sub
lret
nop
icebp
adc
loopne
mov
fwait
mov
or
cmp
xor
cmp
dec
dec
inc
subl
jl
rsm
insb
je
pop
aam
in
in
inc
mov
sub
pop
push
adc
inc
call
out
sub
loop
push
mov
cmp
push
mov
cmp
lcall
mov
and
shlb
cwtl
std
jmp
in
push
mov
data16
sub
ficompl
daa
imulb
or
pop
int
and
sub
add
jno
data16
jbe
mov
scas
test
or
dec
in
jmp
fisttpl
xor
dec
shr
loope
imull
sub
pop
pop
and
push
out
xchg
mov
xchg
movmskps
and
test
negb
mov
fstpl
stos
push
dec
cmpsl
mov
xlat
inc
jg
notb
mov
mov
mov
out
iret
inc
subb
imul
insl
lret
in
mov
push
lahf
adc
cli
fbld
icebp
popf
pop
cmp
cltd
adc
fadd
inc
adcb
imull
push
cmpsb
add
fcomps
fnstsw
mov
dec
sbb
jnp
shl
xchg
dec
pop
fdivrs
ljmp
nop
adc
ds
inc
in
jmp
pop
int
in
sti
and
mov
sub
test
insb
addb
push
lcall
cltd
mov
sub
push
mov
mov
push
sar
nop
leave
mov
xchg
lods
add
dec
les
imul
mov
pop
cmp
xchg
jno
aaa
cltd
lock
add
aaa
adc
shll
in
fnsave
jne
iret
popa
sub
insb
jge
call
pop
imul
pop
outsb
fwait
outsb
es
rclb
mov
push
pop
cmp
out
sahf
jbe
inc
adc
xor
sub
test
inc
jle
jg
daa
mov
loop
xor
adc
fs
jp
inc
mov
sbb
mov
out
into
sub
popf
add
fs
dec
hlt
cmp
imul
aas
fadds
push
cli
fcomps
fsubl
inc
inc
lahf
mov
dec
out
xchg
arpl
inc
aam
pop
jb
inc
push
movsl
add
out
sahf
pop
repz
fwait
push
fisubrs
pusha
sub
sti
lods
sbb
jg
mov
add
aad
cmp
loopne
mov
stc
jne
icebp
ljmp
add
lock
push
and
and
ret
subb
push
push
inc
xchg
insl
in
mov
bound
push
and
push
lret
xor
aaa
out
mov
lea
adc
sbb
xchg
imul
scas
mov
add
aad
repnz
hlt
xchg
inc
push
sub
xchg
stc
push
loope
pop
daa
and
sub
mov
mov
dec
mov
pop
lret
sbb
out
rcrb
jl
mov
mov
xchg
cmp
movsb
mov
mov
and
fbld
bound
daa
loope
aam
test
push
pop
shrl
sahf
iret
add
pop
mov
pop
xchg
mov
xor
ds
mov
sub
push
adc
nop
andb
stos
aam
out
in
outsb
cmc
adc
pop
data16
or
push
inc
xchg
in
mov
iret
cmp
aaa
mov
insb
inc
enter
fildl
inc
subb
emms
mov
daa
jl
cmp
out
mov
subl
jbe
in
cmp
je
jnp
outsl
shrb
xor
cmpl
rcrb
lods
addr16
lds
add
and
insl
mov
fnstenv
mov
gs
movl
stos
ljmp
mov
pop
aam
lds
test
xchg
jnp
fisubs
aas
fisubs
lret
mov
jne
or
add
mov
jae
push
pop
jge
push
les
fcmovb
jo
cmp
and
xchg
sub
imul
stos
xor
stos
mov
xor
or
fisubs
scas
insl
inc
js
in
into
xchg
sbb
mov
xchg
aaa
or
or
rclb
lahf
icebp
sahf
rclb
pushf
fwait
out
out
testb
push
out
and
test
lahf
or
imul
clc
ret
popf
push
add
push
aam
aad
xchg
ja
imul
inc
jmp
hlt
sub
js
orb
shl
cmc
lds
sbbb
add
sbb
pop
fwait
push
xor
mov
enter
mov
das
cmpsb
loope
mov
mov
rclb
lahf
or
push
sbb
enter
dec
jo
fisttps
jl
jp
or
cmc
jns
mov
jecxz
cltd
pop
repnz
idiv
mov
add
shrl
push
xor
lret
lcall
cmpsl
test
cmpsb
pusha
jns
fs
fcmovnb
ficompl
imul
mov
out
cmpsl
arpl
clc
notl
repnz
outsl
test
cmp
push
test
jmp
popa
ret
xchg
cmpsb
jne
leave
popf
jno
jp
sbbb
dec
mov
pop
lret
xchg
je
in
dec
dec
cmp
push
leave
sti
and
push
jnp
fsubp
jnp
les
mov
pop
es
lock
divl
or
in
mov
js
hlt
dec
ficomps
lock
hlt
arpl
jae
pushf
pop
leave
add
dec
xchg
fdivs
xchg
call
in
mov
add
adcl
mov
dec
aad
xchg
and
loopne
push
fnstsw
cmpsb
scas
ljmp
in
sbb
adcl
cld
or
mov
lahf
enter
cld
cmp
popa
repnz
pop
inc
push
xor
jbe
aaa
std
aad
jp
sbb
test
dec
insb
sub
call
inc
mov
gs
cmp
and
test
aam
xchg
sti
daa
mov
pusha
fisttpl
mov
xchg
inc
insl
jns
mov
push
mov
inc
mov
cltd
es
fidivl
push
je
jl
sbb
adc
scas
sub
sar
adc
sub
push
jle
fisubl
cli
xchg
mov
mov
xchg
mov
pop
push
es
cli
xchg
je
sub
mov
inc
add
testl
inc
jg
push
cmp
loope
cmpsb
cmp
call
pop
cmp
pusha
and
fwait
pop
pop
sub
jmp
sub
out
mov
iret
sub
ret
mov
dec
or
add
push
repnz
int
push
outsw
mov
outsl
push
mov
movsl
and
ds
movsb
cld
sub
xor
es
dec
and
ret
cmpsl
or
pushf
mov
or
jno
sbbl
enter
push
rol
xchg
dec
xchg
call
sub
mov
aad
pop
xchg
jb
in
push
sahf
test
and
add
lods
jp
iret
sahf
imul
es
or
mov
push
mov
lcall
scas
inc
push
xor
mov
fstpt
fmuls
into
roll
out
shlw
in
jecxz
jecxz
xchg
js
stc
sbb
dec
jo
mov
xor
notl
xor
ds
and
mov
sub
scas
stos
mov
push
movsl
ret
mov
sub
cmpsb
mov
pop
inc
mov
ret
iret
lgs
outsl
mov
or
leave
std
das
mov
jbe
jae
iret
cwtl
xor
cli
cmp
sbb
add
idivl
rcrb
lods
mov
pop
dec
xchg
rclb
dec
sarl
orb
int
cmp
mov
dec
sbb
mov
pusha
mov
mov
jle
push
test
adc
leave
gs
inc
outsl
dec
fistl
mov
mov
mov
adc
jp
dec
adcl
lods
outsb
imul
sahf
mov
xchg
or
jmp
push
inc
cltd
call
iret
addr16
add
notb
shl
imul
sub
insb
call
mov
pop
jle
test
adc
adc
push
xchg
pusha
add
cmp
push
repnz
xchg
das
add
fdivrl
into
add
jle
push
adc
adc
aam
sub
mov
loope
stc
jne
pop
and
jne
xchg
orb
data16
jmp
sub
sbb
xchg
nop
aaa
popf
fistps
call
cwtl
scas
fwait
pop
jb
pop
sub
or
or
sub
cwtl
jl
and
xor
scas
sbb
xor
mov
sbb
scas
pusha
mov
sub
push
inc
shll
pop
fimuls
fwait
mov
xlat
faddl
int
in
push
push
and
aas
inc
cmp
lods
adc
mov
mov
and
dec
mov
or
std
lret
mov
xchg
lret
and
xchg
sbb
mov
shr
sbb
nop
popf
xchg
and
das
sub
int
mov
call
les
nop
mov
outsl
add
ljmp
push
fmuls
pop
jns
or
out
popf
mov
mov
imul
mov
jmp
test
pushf
sbb
je
xchg
push
lahf
out
js
lcall
fcomps
push
xchg
out
dec
sbb
adc
push
addr16
jmp
mov
stc
push
movsb
jp
sbb
and
xadd
cmpsb
push
add
out
and
sti
loop
movsb
jo
cmp
mov
jns
loop
adc
pop
or
gs
rcr
cli
mov
out
mov
adc
mov
fsubr
insb
outsl
xor
dec
dec
ret
jb
mov
and
sbb
or
int
in
dec
cmpsb
dec
add
repnz
push
cs
pop
rorl
dec
lret
xor
stos
cltd
aam
xor
push
ljmp
sub
out
cmp
push
loop
mov
mov
jns
or
mov
subl
xchg
bound
cmp
popf
sub
pop
jl
lahf
xchg
outsb
add
pop
xor
and
push
lret
loopne
mov
or
and
add
sub
cmpsl
lods
xor
loop
rcrl
adc
stos
mov
xchg
ret
cwtl
jmp
fs
mov
and
fs
xchg
hlt
sub
clc
mov
pushf
jecxz
pop
and
pop
sbb
dec
lret
stos
mov
loope
push
sub
into
cmp
push
aaa
dec
sub
aam
jmp
div
je
mov
mov
dec
xlat
clc
iret
aam
sbb
out
dec
lahf
mov
scas
sbb
loope
insl
filds
movsl
or
sbb
pop
imul
out
mov
sub
jmp
xor
push
inc
fildll
cwtl
movsl
roll
xor
es
jae,pt
push
mov
pop
mov
and
mov
sbb
push
push
or
fisubl
adc
bound
pop
aas
mov
ret
xchg
std
fadds
mov
inc
pop
xchg
aaa
lcall
sub
or
je
sbb
adc
or
andb
cmp
dec
and
inc
stc
mov
call
test
xchg
jns
xchg
pop
scas
jle
not
pop
mov
insb
dec
pop
xchg
inc
popa
cmova
in
lea
dec
js
mov
out
in
mov
xor
imul
push
jl
jge
mov
and
push
rolb
xchg
mov
xor
test
int
jo
pop
sbb
sbb
jno
lods
out
or
pusha
cmc
mov
test
sti
cli
movl
orb
adc
test
mov
in
jno
pop
pop
dec
cmp
jmp
loop
xor
and
enter
mov
xchg
add
jo
and
incb
aaa
inc
mov
push
mov
in
xchg
pop
int3
push
ret
mov
mov
sbb
mov
jp
imul
ret
js
inc
xor
and
or
inc
sbb
arpl
adc
mul
dec
xchg
and
lahf
rol
sti
mov
aaa
sbb
mov
popa
jg
hlt
or
sbb
sbb
push
dec
and
aam
clc
dec
cs
mov
lret
fdivrl
bound
sbb
fs
push
fists
outsb
roll
repnz
pop
sub
faddl
int
aas
fstpl
into
adc
xchg
rcll
xchg
test
adc
sbb
jecxz
jne
push
int3
dec
xorb
mov
xor
lds
sbb
lret
dec
repnz
pop
cmp
jmp
mov
fisubl
leave
call
popa
pop
lret
test
jbe
call
push
cmpsb
jg
xchg
mov
pop
adc
jecxz
mov
jp
jo
dec
mov
pop
cmp
cltd
mov
mov
jp
sbb
arpl
hlt
sbb
or
jl
pop
pusha
push
xorl
xchg
insb
dec
mov
aas
dec
jae
jo
jmp
repnz
pop
mov
xor
dec
daa
jae
cld
sub
sub
es
dec
xlat
xchg
xchg
and
push
repz
adc
popa
lahf
mov
mov
sahf
dec
inc
loope,pn
cmpsb
jbe
jecxz
and
repz
in
hlt
int
add
adc
push
sbb
pop
xchg
test
sub
addb
jge
mov
push
mov
out
inc
dec
sbb
dec
sub
add
js
data16
std
push
adc
sbb
and
fldenv
jecxz
js
sbb
sub
hlt
jmp
push
or
or
ret
push
push
dec
sub
xor
inc
jp
dec
fiadds
push
mov
dec
sub
rol
inc
mov
ret
mov
subl
inc
je
pop
sbb
aam
rcll
pop
pop
test
icebp
outsl
shrb
es
jmp
cltd
xchg
add
pop
mov
in
push
or
cld
and
push
int3
insl
pusha
dec
sbb
add
add
les
dec
mov
xchg
out
xor
push
jo
cmpsb
jge
and
jbe
dec
xchg
push
sub
lahf
push
mov
lock
nop
inc
addr16
icebp
shrb
out
sbb
mov
scas
mov
cmp
dec
rcrb
fsubs
into
in
inc
and
in
fs
ljmp
daa
data16
xlat
xor
mov
jo
lock
and
cmp
jo
lahf
out
imul
imul
mov
cmp
adc
iret
ret
mov
rcrl
pop
sub
pop
jmp
mov
je
add
subps
or
sub
jo
xor
in
add
add
sbb
push
add
icebp
mov
mov
aas
fmull
fdivrs
adc
xor
or
pop
inc
lahf
xchg
adc
iret
pop
pop
pusha
xchg
int3
ss
jnp
or
and
pushf
pop
into
lret
xchg
rcll
adc
dec
daa
addr16
insl
jns
pop
imul
lock
jns
je
pop
pushf
or
jle
push
in
fiadds
jbe
cmc
shl
jae
or
cmp
in
cmovb
outsb
sarb
ljmp
jb
adc
sahf
mov
inc
daa
jbe
cmp
adc
aad
jbe
cmc
iret
xchg
ljmp
jecxz
jle
xchg
cmp
push
jge
xor
xor
push
pop
jnp
adc
mov
xchg
icebp
push
js
pop
xchg
cmp
mov
sti
jb
mov
sahf
imul
addr16
pop
stos
movb
into
sahf
ss
mov
or
mov
jp
test
das
or
xchg
fists
sbbb
mov
pop
mov
dec
in
popf
popa
adc
jb
adc
xor
arpl
imul
jp
cmp
nop
push
xchg
xor
jp
push
stc
dec
orl
push
sub
enter
push
push
xchg
scas
mov
dec
push
pop
or
fsubl
sahf
int
xchg
xor
std
xchg
ja
aaa
pop
shll
cmpsl
pusha
test
cmp
mov
fisttpl
dec
lret
sbb
int3
pop
mov
xor
mov
inc
sub
cmc
call
stc
and
xor
lret
data16
mov
shll
jl
and
inc
jmp
jmp
les
pop
shlb
mov
int
mov
sub
pop
sub
addr16
lahf
pop
sbb
int3
test
inc
bound
cmp
roll
popf
fucomp
enter
sub
or
jae
lahf
popf
dec
cwtl
sti
stos
mov
mov
fidivs
gs
dec
clc
sub
sbb
lock
gs
mov
into
mov
push
mov
out
loope
sub
es
in
int
or
popf
xor
mov
outsl
mov
je
xchg
clc
pop
icebp
fisubrl
adc
mov
enter
scas
icebp
loope
push
cs
loopne
aas
adc
in
into
xor
push
loop
insl
sbb
dec
push
es
inc
jbe
std
cli
cmp
sub
pop
inc
sahf
jmp
mov
iret
sub
outsb
insl
jb
mov
icebp
sbb
idivb
sbb
and
push
cmp
xor
ret
lcall
movsb
scas
in
mov
js
add
xor
pop
js
outsl
sub
je
pop
inc
fcomi
icebp
jo
ret
repnz
repnz
add
mov
lea
rcrb
mov
and
popf
enter
adcl
testl
xchg
jecxz
push
orl
mull
loop
cld
mov
adc
push
adc
push
push
mov
mov
pop
dec
mov
clc
movsl
out
test
mov
dec
xchg
or
cld
xor
pop
sub
mov
mov
and
lcall
mov
testl
aam
sti
jo
ficoml
and
sahf
sbb
mov
je
adc
iret
xchg
pop
inc
adc
xchg
lret
imul
paddusw
push
roll
stc
or
add
inc
sti
xor
mov
xchg
lret
cwtl
mov
lock
pop
mov
cld
dec
mov
xchg
add
push
mov
iret
cmp
test
rorl
push
inc
add
pop
adcb
fwait
jnp
dec
push
iret
rorb
xor
insb
clc
js
int
daa
lods
aaa
lods
bound
iret
ljmp
ret
push
adc
push
or
movsl
add
test
in
test
sbb
mov
xor
inc
shrl
mov
mov
popf
insl
sbb
rorl
mov
xor
je
push
hlt
in
or
jae
mov
fbld
inc
repnz
loop
mov
cs
add
sub
mov
rolb
jle
ret
xchg
int
cld
dec
pop
sub
arpl
out
movsb
mov
push
add
xlat
push
loopew
dec
bound
jl
fcomip
aam
incb
sbb
sbb
mov
fadds
jle
add
sub
lods
sti
test
popa
pop
fstl
xchg
in
roll
sub
mov
mov
cmpsl
es
repnz
add
xchg
mov
pop
sbb
movsb
xchg
sub
cltd
into
addr16
cwtl
int
repnz
pop
imul
dec
int3
xor
fisubl
xchg
mov
shll
mov
cmc
jle
add
mov
addr16
int3
mov
lds
sub
es
push
adc
inc
xchg
ss
cmp
outsl
adc
cmpsb
lea
push
cwtl
aas
scas
adc
sub
sub
push
mov
repz
lods
dec
add
jp
inc
push
mov
xor
add
les
mov
jp
imull
int
xchg
mov
popa
mov
lret
out
mov
push
or
jnp
push
fs
cmp
cmpsb
add
int
cmp
inc
push
sbb
pop
xchg
out
clc
or
or
or
dec
push
sbb
insl
jbe
inc
addr16
and
xchg
or
jmp
mov
jb
shll
mov
adc
pop
out
rorl
add
pop
cmpsl
pop
xor
dec
cmc
cli
sub
sbb
inc
stc
je
int3
aas
inc
mov
scas
xor
mov
pushf
mov
arpl
pop
loopne
shlb
leave
or
popf
jp
mov
into
out
xchg
jb
add
and
xchg
ret
pop
jae
ret
leave
mov
cmpsl
and
gs
mov
icebp
fbld
popl
f2xm1
xchg
gs
pop
mov
ret
fs
sbb
cmp
fidivs
lret
mov
lock
daa
adc
sarb
push
xor
sub
sbbb
mov
test
lds
cld
pop
ja
mov
mov
sub
mov
gs
aam
push
hlt
jge
aaa
xor
rcrl
mov
insl
sbb
loop
shlb
inc
inc
dec
outsl
cli
pop
or
xor
rclb
or
data16
iret
orb
stos
inc
es
dec
sub
test
lahf
clc
rclb
inc
mov
ljmp
arpl
mov
js
inc
sub
popf
leave
mov
mov
mov
stos
cmp
add
adc
cmpsl
inc
sarl
push
jge
dec
test
scas
sub
jno
imul
mov
scas
aas
mov
stc
mov
pop
in
hlt
jns
mov
and
fwait
xchg
in
push
push
push
dec
loop
push
xchg
add
push
ds
in
movsb
fdivs
loope
out
pop
and
js
movntq
add
testl
and
push
push
push
xor
mov
sub
scas
out
iret
sar
into
adc
pop
adc
inc
inc
adcl
push
inc
cmp
pusha
insl
stos
xchg
adc
mov
hlt
clc
rolb
push
cmp
scas
loopne
cmova
push
sbb
nop
sbb
pushf
das
pop
push
andl
sub
or
sbb
pop
add
mov
cmp
dec
lahf
les
imul
fwait
test
cli
xchg
cltd
fistl
or
testl
mov
pop
xorl
scas
sub
lea
in
outsl
xor
sub
sub
mov
pushl
nop
jl
outsb
mov
sbb
mov
adc
sub
mov
clc
ret
andl
or
jns
xchg
mov
icebp
ja
jns
jb
jnp
ds
clc
pop
ret
scas
adc
test
lahf
push
sbb
dec
sbb
mov
ficoms
add
push
mov
push
popa
jmp
ficoml
pushf
sbb
cs
mov
xchg
loope
dec
popa
repnz
mov
int3
cmp
push
jmp
iret
scas
lods
loop
inc
inc
push
mov
pop
lcall
das
push
xchg
insb
sub
sub
daa
imul
pop
or
imul
shll
dec
pop
mov
in
leave
push
cld
mov
stc
inc
xlat
fdivs
daa
mov
jge
lret
mov
adc
sbb
xchg
std
adc
fbstp
xchg
mov
addr16
add
jmp
jo
fwait
cld
test
xor
pop
pop
das
test
push
xchg
jae
xor
ljmp
mov
cmp
jg
xlat
mov
push
mov
inc
mov
cmc
cmpsb
adc
dec
cmp
mov
in
xchg
in
push
mov
mov
mov
roll
sahf
xchg
jmp
xor
adc
inc
outsl
cmc
xchg
dec
popf
mov
jo
iret
sbb
mov
leave
lock
push
lds
loopne
test
push
mov
xor
or
shl
sbb
in
rcll
cmp
lret
jbe
jnp
fidivs
adc
sarl
push
fwait
inc
fs
mov
add
imulb
adc
mov
jmp
and
push
ret
cmp
pusha
test
adcl
pop
mov
rclb
xor
stc
aad
add
xor
cmpsl
mov
mov
jg
fdivrl
sub
cmp
or
aad
sub
add
lock
mov
jns
cld
jle
fsubs
lods
icebp
mov
ffreep
mov
and
mov
mov
adc
pop
insl
or
dec
inc
cmc
adc
inc
rcrl
fildll
in
pop
mov
add
xchg
push
xor
and
sub
xor
loop
fwait
data16
dec
cmpsb
popa
sbbb
cmp
adc
xor
mov
xchg
mov
sub
mov
aam
adc
push
adc
xchg
or
xchg
adcb
int
lods
dec
in
lea
inc
jo
mov
sub
xor
mov
inc
inc
mov
xchg
ror
daa
dec
mov
push
pop
push
gs
shlb
jle
fwait
dec
cs
iret
jne
mov
inc
push
mov
aam
or
adc
dec
push
les
adc
jecxz
aad
fimull
leave
lahf
jp
into
mov
scas
nop
mov
int
or
sub
inc
and
cmp
and
fcompl
aaa
mov
je
cs
push
orl
js
faddl
lods
sbb
insl
insb
add
icebp
adc
shl
or
out
push
push
mov
out
add
sti
rcll
addr16
stc
mov
out
cmp
pop
out
sarb
sahf
sub
adc
dec
xchg
rcl
add
mov
adc
and
sub
add
add
push
mov
dec
shlb
idivb
jl
inc
dec
jp
push
repnz
ret
add
jp
inc
into
dec
int
xchg
jl
xor
or
cmp
jmp
inc
lahf
ret
vpand
mov
enter
add
dec
lret
sub
push
ss
arpl
js
ror
dec
sti
roll
lcall
xor
push
jle
mov
xor
cmp
mov
iret
loop
pop
cli
sbbb
notl
xchg
int3
push
push
push
inc
sbb
out
mov
movsb
push
icebp
lods
dec
es
aas
dec
test
jmp
push
data16
sarb
inc
test
fidivrs
iret
movsb
xor
clc
shlb
lret
out
movb
subb
push
adc
xor
inc
cld
rcpps
sbb
adc
fisubrl
iret
loope
inc
test
out
jp
in
std
jp
ljmp
push
mov
adc
cmp
mov
pop
dec
insl
mull
test
mov
dec
jne
jl
mov
mov
je
lret
push
cmpsl
pushf
mov
stos
daa
or
push
cmp
cld
or
inc
stos
dec
or
jg
int3
leave
adc
ds
repz
sbb
sub
sub
addl
int
into
cmpsb
ds
push
ss
leave
jb
inc
imulb
jnp
inc
mov
inc
mov
jl
aas
add
xchg
sub
jg
sti
cmp
push
xchg
inc
or
ret
lods
xor
xchg
xchg
add
inc
cmp
and
mov
aas
stc
pop
in
add
add
cmp
and
mov
adc
xchg
pop
push
lret
mov
mov
popa
faddl
adc
stos
shrl
adcb
xor
shrl
push
push
sbb
jb
sub
and
mov
enter
add
jo
idivb
mov
mov
xor
ficomps
adc
xchg
popl
in
mov
outsl
stos
push
in
and
jb
loopne
dec
mov
dec
xor
sahf
pusha
and
ficomps
add
mov
lcall
lcall
add
xchg
cli
or
shr
jl
pop
push
ja
and
std
es
mov
lret
in
xchg
mov
add
xlat
das
js
xchg
sub
js
jnp
add
es
cmp
iret
cli
cmp
adc
mov
add
loope
inc
pusha
inc
mov
in
sub
insl
pop
mov
outsl
mov
into
mov
mov
mov
adc
paddusw
ljmp
jne
lret
movsl
and
lds
sub
ret
jnp
lock
fdivl
pop
dec
insl
shlb
in
inc
call
test
jle
inc
mov
sub
into
jnp
jnp
aad
loope
rcrb
xchg
mov
mov
and
inc
stos
sbb
sub
pop
ss
fisubrs
and
cltd
mov
inc
push
dec
xchg
enter
pop
aaa
andl
cs
lds
add
fidivl
jmp
or
cmp
int3
shll
xchg
shll
or
andb
push
icebp
int3
cmp
jmp
sahf
into
adcb
testb
orl
jno
and
mov
xlat
cmp
pop
movsb
add
out
xchg
push
or
mov
cmp
cmpsl
or
xchg
rcrl
out
cmp
pop
dec
es
dec
int
insb
scas
pop
pop
insb
out
stos
jo
pop
push
stc
pop
cld
jo
mov
repz
pushf
jp
pushf
pusha
or
inc
daa
stos
movsl
mov
xchg
je
fdivrl
add
mov
mov
stos
int
push
ja
pop
sbb
pop
sbb
push
in
jno
xchg
test
lods
jo
repnz
push
mov
ds
stc
es
pop
das
sbb
mov
sub
aad
mov
icebp
in
mov
ret
push
dec
jbe
mov
and
movsl
mov
mov
adc
movl
lcall
test
sbb
popl
cs
mov
fdiv
shll
xchg
dec
fdivs
clc
in
mov
inc
mov
or
popf
push
fsub
add
shrb
sbb
cmp
aam
lahf
adc
hlt
xor
stos
fisubrs
pop
push
jmp
pop
bound
push
pop
adc
add
mov
stos
call
inc
add
lret
mov
sub
sahf
mov
loopne
pusha
ss
fstps
push
sbb
push
sbb
xchg
sub
pop
cld
ja
dec
push
inc
aaa
jmp
mov
dec
shll
mov
pop
sbb
lock
mov
mov
add
sub
pop
ss
lahf
mov
jl
sub
jecxz
pop
xchg
shll
test
mov
mov
stos
mov
lahf
xchg
push
pop
and
aad
mov
pop
add
or
lret
lret
cmp
outsb
fsub
sub
cmp
xor
lret
push
adc
mov
cmp
jno
in
mov
jp
adc
imul
insb
jp
addr16
pop
shrl
jmp
cmp
addr16
push
in
out
rcrb
shll
fidivl
out
aaa
scas
hlt
jge
mov
iret
sub
cmp
repz
ljmp
add
loope
xor
in
sbb
dec
fldenv
out
int
dec
fs
cltd
mov
ljmp
push
inc
std
xor
mov
adc
insl
cld
pop
scas
or
pop
data16
fsubrp
sub
outsl
scas
cltd
hlt
cmc
push
int3
sbb
popf
je
insb
fstpl
movsl
push
fistpl
call
sbb
cli
ja
add
mov
hlt
in
xor
in
mov
cld
xor
nop
fwait
mov
enter
mov
aas
stos
sub
inc
pop
inc
in
mov
cmp
outsl
pop
pop
cmc
pop
icebp
std
push
lahf
pusha
mov
pop
push
pop
movhps
pushfw
cmp
scas
hlt
and
scas
lds
xor
sti
test
sub
dec
inc
push
in
jo
insb
add
and
dec
or
mov
jge
stos
fs
xchg
push
roll
mov
lods
stc
int
stos
xchg
sbb
push
xchg
in
out
cmp
mov
mov
cmp
push
push
es
cmp
lea
sbb
xchg
push
mov
sbb
jl
push
jg
mov
cmp
inc
sbb
cmpsl
mov
insl
ja
xchg
xchg
sahf
bound
movsb
std
mov
adc
mov
or
adc
dec
gs
dec
lahf
inc
or
hlt
mov
add
ds
push
fistpll
sub
hlt
dec
mov
insl
fidivrs
mov
xlat
mov
inc
or
pop
pop
mov
push
mov
cmpsb
inc
popf
inc
mov
adcb
je
add
loopne
in
or
cs
adc
scas
fs
jp
insl
or
and
xchg
out
push
mov
hlt
sahf
sbb
push
sbbb
mov
pop
jno
push
in
jecxz
ljmp
popf
stc
iret
lret
aad
pop
lock
add
cs
repz
add
int3
push
mov
sub
inc
cs
aas
or
push
imul
mov
sbb
inc
aas
push
pop
dec
lock
leave
fsubrs
mov
daa
sahf
dec
xlat
adcb
xchg
clc
mov
mov
xor
in
fdivp
adc
ss
add
rol
rorb
sbb
fidivrs
add
jbe
mov
xadd
adc
mov
dec
gs
dec
std
call
shrl
shr
jnp
test
xchg
mov
sbbb
aaa
loopne
fcomps
dec
jne
jno
mov
mov
lock
loope
inc
inc
dec
movsl
pop
aas
pop
push
mov
sbb
aad
bnd
jae
out
cli
jne
outsl
inc
lret
mov
cmp
lock
mov
out
dec
ss
xor
or
mov
mov
mov
loope
cmp
sbb
daa
pop
fsubl
arpl
or
lock
inc
out
push
adc
lds
jns
insb
push
out
add
push
aam
add
push
out
xchg
popa
push
jno
dec
xchg
mov
je
sbb
cmp
mov
imull
aaa
movsl
outsb
cmpsl
cmp
pop
hlt
mov
test
stos
clc
push
or
jns
scas
jmp
xor
int
push
repz
loopne
fldt
xchg
push
push
push
cwtl
sbbb
or
xor
aas
add
arpl
in
incl
mov
icebp
test
mov
or
pusha
addr16
and
mov
dec
cmp
sbb
jecxz
or
or
icebp
into
ror
jl
inc
gs
inc
ds
sbb
fdivrp
mov
jp
push
xor
and
mov
mov
push
mov
test
lret
jge
xlat
ror
sbb
out
int
addl
incb
inc
push
fwait
push
jb
push
dec
out
cmc
iret
in
mov
sub
sub
mov
pop
mov
adc
xor
pushf
out
in
bound
sub
mov
icebp
into
hlt
dec
mov
add
pusha
andl
lret
mov
dec
lahf
ljmp
xor
adc
subb
xchg
fwait
sub
mov
mov
sbb
push
rcll
inc
cmp
out
movsb
dec
stos
mov
idiv
jge
idivb
sarb
out
ret
test
pop
adc
push
push
mov
flds
ret
jecxz
mov
xor
inc
push
fimull
push
fwait
cwtl
popa
mov
imul
pop
xchg
leave
push
in
mov
sar
lahf
push
inc
and
cs
jecxz
cltd
mov
push
cmc
xlat
in
aad
adc
pusha
and
cs
push
sub
lret
not
lock
loopne
mov
mov
inc
dec
repz
fidivrs
out
lea
sub
dec
push
cmpsl
and
jp
push
adc
sbb
test
mov
fsubrl
cmp
lds
xchg
mov
imul
push
adc
cmpsb
jle
sbb
push
and
shll
es
stos
out
mov
or
fldt
fistl
adc
jb
repnz
shll
nop
xchg
xchg
test
cwtl
adc
or
pop
mov
push
sbb
icebp
out
scas
push
xlat
iret
dec
test
push
ss
jnp
jae
xchg
mov
xchg
movsb
test
rclb
cld
fldt
mov
or
outsl
sbb
adc
fs
dec
inc
sbb
repnz
adc
jmp
pushf
inc
and
mov
dec
jl
sub
subb
mov
xchg
repnz
rcl
shr
sbb
std
pop
cmp
lock
repz
or
scas
outsb
aad
sbb
mov
push
jne
xor
add
ret
xchg
nop
push
inc
push
xchg
push
ljmp
fwait
int
out
fists
scas
pop
das
inc
nop
arpl
out
pushf
xchg
enter
jno
les
mov
cmp
adc
xor
inc
xor
outsb
fiaddl
and
lcall
hlt
outsb
inc
fwait
into
add
into
js
in
cmp
in
mov
add
stos
xchg
sbbl
hlt
mov
inc
or
xchg
pop
cmp
ficoms
xor
in
aas
xchg
pop
fcomps
js
test
inc
dec
pop
xchg
in
cwtl
mov
xchg
lcall
xor
lds
ljmp
xorb
jecxz
inc
gs
mov
shlb
cmp
popa
lock
xchg
sbbl
push
mov
sub
pop
inc
and
or
adc
cmp
stos
adc
cld
pop
scas
or
and
xchg
jge
or
int3
test
dec
sub
xor
jne
incl
sbb
push
pop
insb
cmp
andl
shll
xchg
add
ljmp
jg
lods
push
testb
sahf
dec
fsubp
lcall
call
cmp
or
or
inc
add
mov
movsl
lar
ja
outsb
pushf
xor
sub
lahf
jmp
sarb
add
pop
add
push
jecxz
mov
cmp
dec
cmp
fnstcw
xorl
mov
cltd
mov
cmpsb
es
xor
movsb
jecxz
pusha
mov
mov
cmpsb
ss
inc
daa
insb
mov
fildll
js
pop
lods
jecxz
popf
mov
addr16
insl
imul
adc
popa
xor
adc
sub
pushf
in
cmpsb
loop
test
orb
scas
cmp
mov
push
loopne
inc
call
jae
jo
in
rcll
jnp
mov
xchg
insl
fisttps
testb
les
and
test
ds
sbb
scas
cwtl
fildll
sub
shll
sub
jle
imul
fwait
mov
lds
xor
jg
dec
es
inc
popa
stc
cli
out
call
cmp
leave
or
sbb
pop
mov
sbb
movsl
insb
push
movsb
mov
lahf
std
push
xchg
xchg
cmp
es
jo
pop
add
sahf
add
mov
mov
test
cs
and
lock
mov
mov
lock
dec
testl
test
mov
je
jge
into
pop
mov
push
ss
sub
inc
cmpsb
xchg
leave
jl
out
sbb
stos
subb
in
ljmp
inc
sub
dec
mov
cld
popa
outsb
out
out
sub
shlb
adc
lds
hlt
pop
push
fidivrl
stc
ss
in
arpl
mov
fimull
xchg
push
outsl
xlat
inc
dec
or
cmp
and
adc
xchg
add
subl
mov
jg
push
jnp
loopne
jmp
add
aas
js
add
xchg
bound
push
bound
out
cmp
sub
add
in
jg
pop
fsubrs
push
les
test
xchg
mov
test
mov
jmp
sbb
cld
popl
jae
ds
or
mov
mov
shll
je
cmc
adcl
push
add
and
fldt
jmp
aas
and
clc
xchg
sbb
pop
lret
or
loope
mov
iret
adc
pop
bswap
add
adc
adc
mov
xchg
and
outsl
call
lcall
ja
or
push
pop
cltd
sub
ljmp
fld
gs
inc
sbb
cmp
cld
mov
xlat
mov
icebp
inc
and
imul
mov
js
test
sbb
sub
sub
int
adc
js
aad
repz
subl
mov
bndstx
xchg
xchg
mov
adc
push
jmp
xchg
adc
iret
sti
aas
add
js
sbb
test
bound
xorb
imul
sbb
hlt
imul
out
or
dec
jae
enter
sbb
popl
ret
push
mov
xor
mov
out
out
sbb
add
js
cmp
outsl
jbe
pop
popf
dec
fisubrl
dec
mov
mov
mov
add
xchg
out
iret
lahf
push
add
loope
xorb
bnd
inc
mov
in
stos
icebp
mov
into
dec
popa
jmp
jge
pop
sbb
arpl
dec
js
andl
adc
les
jns
out
jb
push
jno
cmp
movsb
mov
jae
fistl
loope
dec
fcoms
sbbb
cmp
inc
or
pop
or
pop
pop
sub
bound
pop
push
pop
fldl
jnp
sbb
sahf
and
xchg
aaa
or
lret
xchg
sub
je
stc
int
stos
jge
add
mov
idivl
cmpsb
aaa
das
mov
pop
cli
add
andb
xlat
int
inc
popf
adc
test
int3
mov
clc
popa
xchg
xor
andl
mov
movsb
stos
or
out
adc
add
ja
scas
add
and
pop
push
or
jnp
and
imul
mov
out
popf
pop
jge
dec
mov
ss
arpl
dec
pop
or
dec
sar
xor
mov
push
xchg
aaa
adc
mov
jo
dec
jge
jge
sqrtps
push
out
test
in
cwtl
cltd
lds
fyl2xp1
loop
fs
data16
outsl
arpl
inc
inc
lret
mov
mov
sbb
stc
add
xlat
mov
mov
mov
outsl
loop
add
push
daa
js
mov
push
or
mov
sbb
add
sahf
fstl
lea
mov
imul
add
rorl
test
mov
xchg
stc
dec
adc
scas
addr16
mov
aaa
ja
das
pushf
pop
lods
stos
cwtl
stc
mov
rcrl
insb
aad
push
cmp
mov
dec
fcmove
dec
cmp
cmp
andl
shlb
cmpsb
test
dec
inc
xor
pop
sbb
inc
pushf
cmp
pop
mov
jle
das
push
or
mov
fadd
sub
cmpsl
andb
jb
sti
cltd
negb
lahf
subb
in
or
push
fidivl
sahf
xor
pop
xchg
add
sbb
sbb
xchg
push
loopne
lret
inc
and
xchg
xchg
adc
inc
outsb
ljmp
jge
rdpmc
and
pop
jecxz
xchg
inc
aaa
jge
jns
dec
xchg
scas
dec
sbb
push
mov
push
xchg
pop
mov
ds
sbb
rcr
fdivl
mov
sbb
adc
bound
lret
flds
fwait
outsl
sbb
loopne
cmc
jecxz
mov
shlb
or
sbb
call
fistpl
sub
xchg
sahf
test
cmc
cmp
add
iret
gs
sbb
in
mov
or
aas
movsl
outsb
lock
pop
or
cld
in
mulb
out
lret
sub
sub
pushf
jg
sub
mov
js
jecxz
xchg
sbb
arpl
cmpsb
mov
mov
push
ret
mov
aad
ror
into
adc
out
cmpsb
arpl
out
dec
xchg
dec
lcall
ret
ja
jmp
jae
mov
dec
pop
cmp
push
mov
push
test
push
push
dec
push
push
in
ljmp
cmp
xor
dec
mov
and
js
mov
lock
cmp
jo
dec
cmp
int3
repz
or
jp
pop
inc
out
mov
sbb
mov
cwtl
dec
test
data16
push
cmp
mov
int
jns
aas
test
pop
push
fs
xchg
icebp
mov
insb
roll
rorl
cs
or
cmc
mov
push
push
cmp
dec
lds
pop
fldt
dec
inc
adc
fldenv
mov
cmp
enter
stos
jge
adc
fsubrl
jb
pop
outsb
sub
add
mov
repnz
out
addr16
pop
aaa
push
and
lahf
or
sbb
mov
jge
mov
inc
jnp
pop
mov
iret
jns
xchg
push
cli
jo
xchg
inc
mov
jmp
sbb
xchg
into
sub
fsubl
decb
xchg
in
pop
sarl
outsl
xor
dec
mov
cli
jge
cli
out
jg
daa
pusha
aas
cmc
mov
insb
mov
mov
leave
stc
push
xchg
out
mov
lcall
push
mov
mov
xor
jmp
push
inc
fnstenv
arpl
cmc
data16
lods
xchg
dec
sbb
inc
divl
in
pushaw
mov
addl
bound
or
loopne
dec
outsb
fidivl
mov
je
aam
rorl
test
lods
in
push
jbe
cmp
loopne
fadds
xor
daa
out
sub
xor
js
xchg
push
cmp
or
xchg
enter
pop
nop
sbb
mov
popf
adc
insl
cmp
pop
aas
jp
mov
add
xchg
dec
mov
dec
cli
sbb
int3
sahf
xlat
pop
dec
cli
cmpsb
jnp
leave
out
xor
add
push
inc
add
xchg
sti
and
shll
mov
daa
rcll
sub
loopne
mov
nop
mov
int
mov
aaa
out
lahf
cltd
mov
mull
jno
fwait
xlat
int
push
xchg
sub
cs
dec
sarl
mov
push
lock
and
mov
xchg
jle
sub
adc
int
stos
push
stc
jmp
into
in
or
fcos
je
mov
dec
mov
mov
or
adc
mov
pop
xchg
push
sbb
je
jns
dec
or
lcall
mov
stos
mov
adc
push
add
inc
divl
out
push
inc
pop
dec
xlat
jecxz
flds
fwait
sbb
mov
ds
xchg
push
xchg
xchg
mov
mov
and
int
push
stos
dec
push
or
xchg
push
add
sub
and
call
shll
inc
mov
sbb
cmpsb
pushf
int3
nop
mov
sub
sub
movsb
mov
aas
dec
js
rclb
push
adc
xchg
mov
or
outsb
stc
in
outsb
je
out
mov
xchg
das
push
jg
xchg
and
xchg
jge
cmpsl
sbb
ficomps
gs
jae
aaa
rclb
mov
in
shlb
scas
fisttps
jl
or
and
andl
nop
lea
pop
out
inc
dec
cwtl
sbb
xchg
pop
repz
mov
inc
jmp
pop
sub
mov
ja
xchg
dec
lahf
enter
mov
cmp
daa
mov
dec
cmpsl
or
add
arpl
mov
popf
dec
mov
ret
xchg
or
add
mov
aaa
mov
mov
cmpsb
sub
pop
push
pmaxub
pop
push
and
test
loope
aam
out
popa
mov
cs
cmp
mov
movsl
stc
dec
pop
lcall
out
test
lea
in
fildl
loope
cmp
sahf
insl
or
daa
mov
pop
inc
push
in
pop
data16
mov
movsl
dec
cmpsb
insl
inc
test
ds
inc
pop
xchg
mov
fidivrs
loope
ret
movsb
xchg
imul
and
cmpsl
push
jmp
fimuls
lods
cmp
lret
xor
lcall
ss
cmpsb
loopne
cmp
mov
jecxz
cmpsb
sbb
sbb
mov
jg
insl
sbb
mov
mov
cld
jecxz
dec
add
mov
inc
sbb
pop
fdivl
push
inc
ds
push
mov
mov
jp
push
jbe
push
add
fwait
aaa
push
imul
ds
add
adc
rcrb
test
and
mov
andb
and
aaa
call
stos
out
dec
popa
pop
xchg
notl
jecxz
cmp
in
xor
insb
es
push
or
cmp
filds
add
or
and
mov
dec
pop
test
jbe
push
into
inc
not
inc
pop
add
loopne
inc
imulb
xchg
xlat
in
cmp
push
pushl
sbb
sbbl
into
in
imul
mov
je
std
lods
sti
mov
xchg
or
fbstp
and
sbb
or
test
dec
mov
push
xor
sahf
cmp
mov
test
hlt
scas
stc
sub
mov
push
push
test
jmp
lds
stc
in
and
xchg
mov
xor
xor
rcll
idivb
pop
sarb
fsts
xlat
and
scas
push
gs
push
inc
jnp
adc
lcall
add
es
pop
movsl
adcb
add
jecxz
les
jns
sbbl
push
xor
iret
mov
es
add
pop
loop
and
fists
fcom
scas
add
ret
cmpl
push
jecxz
ljmp
cmpl
jecxz
hlt
push
inc
ja
sub
add
test
mov
jg
mov
cli
push
mov
mov
pop
popf
subb
clc
sub
lahf
mov
mov
push
xor
mov
mov
les
mov
dec
call
fs
or
test
sub
sbb
pop
push
in
mov
cmp
xchg
xchg
bound
jp
sti
enter
inc
sub
int
sub
mov
push
mov
fldcw
cmpsb
xor
fimull
mov
lock
add
pop
and
ja
testl
inc
rcr
xor
inc
sub
data16
fdivrp
paddusw
cmp
pop
jae
mov
push
pushf
pushl
jecxz
shl
in
pusha
lcall
adc
bound
push
push
push
jle
and
adc
or
lcall
outsl
je
in
mov
push
cmp
mov
js
stos
std
push
shll
out
xor
cli
int
pop
cmp
fsubp
adc
jecxz
mov
stc
jae
pop
mov
roll
mov
add
sbb
ret
dec
es
sti
cmp
dec
in
fs
sbb
jno
push
in
cmpsl
jno
and
push
sti
jns
add
cmp
cmp
fstpt
fnsave
lret
push
rcrb
mov
shlb
push
jns
mov
mov
ficomps
fcmove
adc
sbb
mov
ror
add
lahf
or
sub
pusha
mov
call
movsl
xchg
xlat
faddp
sub
and
sahf
inc
out
loope
push
dec
arpl
scas
icebp
sbb
mov
insl
stos
dec
push
shlb
stos
jno
mov
or
pop
daa
add
or
sti
fucom
movsl
mov
rcll
pop
add
adc
mov
mov
mov
sbb
js
lods
popa
push
cmp
xchg
dec
insl
mov
outsb
and
bnd
push
sbb
inc
loopne
push
xchg
sbb
cmp
aad
hlt
movsl
lods
cli
dec
loopne
cmovne
xor
mov
gs
aam
daa
jmp
jne
lcall
in
mull
inc
in
mov
pop
fidivl
inc
push
mov
cltd
loopne
push
pop
cs
dec
test
rcl
dec
add
push
mov
fxch
push
in
sti
out
cmp
and
pushf
xchg
ja
push
jb
dec
mov
cmc
adc
movsl
push
cmp
sbb
pusha
fwait
jl
sub
adc
sarb
xor
sti
imul
cs
nop
int3
adc
push
in
std
aaa
out
mov
inc
jmp
movlps
mov
or
mov
lock
jb
jmp
mov
call
push
icebp
repnz
fdivrl
inc
sub
mov
lahf
mov
test
mov
push
mov
fstl
jp
cmp
in
cmp
inc
dec
inc
xor
xchg
or
scas
pop
xor
dec
mov
cwtl
or
xchg
adc
fs
insb
iret
popa
jnp
ret
jo
es
subl
push
cmp
leave
divl
test
syscall
mov
cmpb
gs
mov
add
mov
mov
mov
clc
orl
ja
lock
fisttps
xchg
ret
pop
mov
push
xchg
inc
xchg
sub
sbb
xor
mov
fnstenv
xor
aaa
arpl
mov
outsb
mov
dec
out
nop
mov
cli
jb
or
mov
gs
test
push
add
cmpsl
scas
cmc
or
cltd
cmpsb
xor
std
aaa
lds
mov
or
jae
jns
lods
ret
in
jmp
cmp
iret
imull
inc
push
repnz
inc
test
sahf
dec
push
jbe
pop
xchg
nop
or
loope
pop
dec
scas
mov
dec
jns
neg
arpl
rcr
inc
test
sarb
test
idivb
icebp
xor
push
jecxz
xchg
cmc
pop
sub
imul
or
mov
test
outsl
movsb
ljmp
sbb
mov
insl
dec
pop
js
lahf
icebp
pusha
sahf
roll
xchg
pop
jmp
add
fwait
mov
or
push
or
mov
sbb
rcl
push
mov
inc
test
inc
cmp
dec
jecxz
sub
jo
data16
jl
sti
xor
stos
pop
lcall
fisubrs
aas
cld
jns
mov
gs
shlb
pusha
icebp
repnz
jg
cmp
adc
jno
mov
ljmp
jl
jge
in
lcall
xchg
mov
mov
push
mov
pusha
enter
jbe
and
notl
in
cld
gs
jns
je
fs
push
xorb
add
xlat
pop
out
insb
inc
sar
mov
xlat
fs
gs
add
mov
pop
jnp
dec
mov
in
inc
and
mov
sahf
pop
and
cmpsl
sbb
dec
call
cmp
sti
in
xchg
popf
push
sbb
cmp
rclb
mov
xor
lret
pop
jae
shrb
cmp
fldcw
push
imul
cmp
mov
pop
xor
sbb
shll
sub
mov
aas
inc
xor
lahf
dec
mov
dec
fldl
dec
cmc
loope
push
cmpsl
fsubrl
fldt
jne
sti
push
mov
fs
int3
lods
cmpsl
pop
fcompl
enter
cltd
out
lods
test
push
into
dec
fnstcw
out
fwait
push
mov
push
xchg
mov
xchg
icebp
sbb
fidivrs
xchg
xchg
repnz
dec
sar
or
and
sbb
into
dec
aam
ljmp
inc
insb
mov
adc
in
lea
cmpsl
add
mov
pop
dec
inc
aas
jae
gs
inc
into
mov
or
jne
scas
xchg
lcall
dec
pusha
mov
scas
lret
or
cmpsl
std
int3
sbb
ss
mov
xor
pushf
cwtl
push
sub
ljmp
mov
fsubr
sti
pusha
test
pop
popf
jbe
sti
test
or
jno
cmc
adc
lret
popa
in
and
ret
xchg
mov
adc
mov
or
jnp
out
inc
imul
sahf
mov
xchg
inc
mov
rclb
cmpsl
mov
or
bound
icebp
adc
movsl
dec
int3
movl
cltd
shrd
mov
insl
sbb
jbe
jle
jle
arpl
pop
and
sub
push
or
sar
popa
or
cli
cmpb
and
shlb
or
out
adc
insb
or
je
enter
insb
ret
dec
fwait
int
insl
decb
cmp
sbb
aaa
in
jecxz
out
or
test
xchg
insl
fucomp
cltd
ror
sbb
xchg
jno
sub
dec
fs
es
push
jp
adc
cmp
dec
sbb
cltd
mov
adc
lret
xchg
adcb
xchg
inc
daa
stos
xor
dec
stc
mov
or
xchg
sti
ret
jo
dec
lcall
sub
pop
or
xor
outsl
stc
sbb
jnp
js
fisttpll
sub
xor
adc
xchg
and
and
rolb
outsb
jns
ljmp
int
imul
pop
sub
test
aad
imul
mov
pop
addr16
addr16
cmp
xlat
or
jge
mov
push
ret
jbe
add
jbe
lock
xorl
sub
movsb
inc
push
cmp
pop
mov
mov
rcrl
xchg
dec
std
inc
jge
adc
pop
test
lods
loopne
test
int3
dec
dec
adc
mov
loop
jge
test
jno
aaa
xchg
sarb
out
icebp
adc
add
xor
pop
test
into
imul
je
mov
adcb
popa
jmp
and
inc
sub
jmp
jp
and
cmp
in
push
push
jae
fnstcw
testl
fwait
out
stos
push
dec
movsb
sbb
inc
xchg
mov
adc
cs
mov
out
sbb
mov
cwtl
aam
jo
add
mov
or
stos
and
outsl
enter
out
mov
sbb
jl
pop
sahf
pop
mov
ja
xor
xor
out
mov
dec
xchg
scas
dec
iret
fisubl
out
adc
mov
xchg
andl
icebp
jbe
jb
lcall
jb
jp
and
inc
out
push
shl
push
mov
cmc
jno
cmpsl
xlat
in
sub
and
push
dec
mulb
pushf
rclb
mov
aaa
pop
sbb
js
lahf
stos
pushf
sbb
dec
jno
aaa
xchg
xchg
adc
es
lock
push
arpl
mov
sbb
jo
ljmp
or
push
sti
jl
shrd
ljmp
sub
mov
in
pop
add
add
sbb
faddl
ret
pop
fbld
imul
push
inc
mov
mov
scas
lods
ds
sahf
xchg
orl
aad
call
inc
sar
sahf
xlat
dec
loopne
xor
sbb
shl
cli
cmp
in
dec
lahf
sbb
sub
push
gs
test
std
jmp
jle
push
clc
xor
add
cld
stc
popf
or
test
sub
cltd
cmp
idiv
mov
inc
jns
jmp
pop
sbb
jae
popa
adc
jl
mov
jae
xchg
dec
pop
push
adc
push
insl
xor
aam
outsb
xchg
push
out
jo
shl
pop
es
lret
out
push
or
jo
dec
fidivrs
mov
cmp
loop
das
fmull
sub
mov
insl
sub
cmp
lcall
fidivrl
cmpsl
repnz
loop
jne
sbb
adc
pop
mov
xchg
add
xor
in
xchg
pushf
hlt
sbb
inc
add
mov
mov
add
jle
fs
gs
scas
inc
popf
sub
inc
insb
ljmp
cmp
iret
inc
insb
xchg
or
adc
jecxz
outsl
sbb
sti
inc
pop
test
mov
pop
enter
call
push
fwait
jns
jg
or
mov
lcall
mov
out
cmc
mov
loope
add
mov
stos
jbe
dec
mov
inc
inc
cwtl
aaa
sbb
orb
xor
push
dec
mov
pop
push
push
ss
push
ss
dec
lret
cmp
mov
push
mov
xor
jo
inc
insl
push
cmp
push
or
insb
in
xchg
sbb
jne
mov
push
mov
in
aas
sub
sti
push
mov
cmpl
out
outsb
das
xorl
call
aaa
adcl
jmp
or
leave
rcll
adc
sbbl
lea
ja
xchg
ds
adc
mov
sub
jo
or
clc
xor
sbb
imul
lret
cli
push
rorb
or
xchg
xor
test
dec
jecxz
int3
out
mov
and
jo
cmp
cmpsb
fsubs
cli
pop
addr16
ret
and
push
jge
aas
add
sahf
xor
lock
adc
daa
push
mov
cmp
dec
mov
adc
xor
xor
enter
shll
xchg
pusha
and
mov
pop
dec
cmp
adc
xor
sarl
js
inc
lret
pop
inc
dec
inc
pop
clc
inc
dec
fmul
stc
enter
out
and
sbb
and
std
aaa
push
inc
dec
lods
pop
sub
pop
das
or
lock
int3
inc
jmp
push
add
add
jl
pop
dec
sub
imul
adc
inc
ss
dec
pop
add
push
mov
inc
or
lret
fidivs
ja
mov
dec
or
sub
daa
push
cmp
dec
frstor
cli
stos
xchg
sub
out
mov
cmc
dec
cmpsl
mov
test
rcrl
jge
cmpsb
sub
cmp
pop
jns
fimull
xchg
adc
pop
into
ficompl
push
lods
aaa
xor
sub
aad
fsubs
arpl
xchg
jne
mov
aam
shll
out
lahf
fmul
lret
scas
das
frstor
loop
sti
xchg
add
and
shll
jno
daa
inc
data16
jg
icebp
fs
pop
jb
lds
jmp
int3
aaa
shrl
dec
es
pop
xlat
push
test
cmp
xchg
cltd
xchg
mov
shlb
ss
fdivs
mov
leave
es
xchg
sti
lahf
fisttps
and
mov
bound
stos
pushf
fnstcw
xor
mov
mov
xchg
aaa
cli
test
mov
stos
or
xor
out
les
lods
mov
push
mull
enter
and
mov
adcl
loopne
ja
jnp
xchg
sti
out
inc
sbb
xchg
sarl
push
xchg
dec
fucom
fs
cmp
jge
enter
mov
cmpsb
xor
scas
push
xor
push
sub
decb
in
jmp
cmp
imulb
lds
jae
pop
push
fidivrl
push
pop
lea
dec
jno
fstl
movl
pop
mov
sbb
daa
lcall
dec
lds
cmpsb
jnp
loop
int3
rolb
mulb
aam
add
cld
xor
fildll
cmp
icebp
outsb
push
cmp
das
arpl
arpl
xchg
stc
push
in
adc
xchg
cmp
popf
movsl
cmp
int
out
aaa
cmp
scas
test
fmuls
cmpsb
pop
pop
inc
cld
mov
push
call
mov
mov
push
cwtl
nop
dec
inc
jo
movsb
mov
jl
add
es
addl
xchg
jne
cmp
aam
jne
mov
scas
and
jo
jnp
adc
mov
insl
cmpsb
jne
xchg
idiv
xlat
testb
inc
sti
int
fcompl
pop
js
fdivp
cmp
sbb
sahf
sub
add
inc
in
mov
cwtl
adc
jbe
or
add
add
lea
cwtl
mov
imul
mov
inc
cmp
adc
ret
add
inc
pop
outsb
pushf
jl
fisttps
into
add
xchg
push
cmp
loop
shll
jmp
xchg
cmp
mov
jg
and
push
je
rol
pop
dec
cmp
repz
adc
nop
mov
dec
jae
fstpt
jl
mov
lods
int3
icebp
sahf
pop
icebp
hlt
pop
in
das
xchg
sahf
rorb
minps
jb
jp
add
out
cmp
cwtl
xchg
xchg
mov
sbb
int
mov
push
xchg
loop
je
stc
popa
scas
ret
imul
xchg
and
mov
sahf
aaa
test
divps
mov
sbbb
xor
pop
or
lret
pop
inc
pop
push
adc
cltd
fldt
rcl
je
and
out
mov
pop
sub
push
std
mov
push
lahf
sub
loope
jmp
sub
xchg
pushf
pop
jno
jle
xor
mov
or
push
dec
mov
mov
leave
movl
mov
jg
out
mov
imul
popa
insl
call
ret
push
mov
inc
lock
sub
insl
aas
jo
mov
js
xor
ret
enter
mov
xor
in
mov
jbe
hlt
sub
popa
popa
scas
pusha
mov
cmc
mov
mov
rcr
xchg
data16
mov
add
aam
cmp
xchg
clc
mov
stos
pop
in
push
addr16
sbb
xchg
decl
fisubl
int3
mov
out
xchg
push
bound
scas
jne
sbb
ss
daa
and
lret
cmpsl
inc
mov
rolb
jg
inc
push
sti
test
cmp
xchg
into
jle
jg
ds
aam
jge
int3
test
mov
arpl
cmp
sub
xlat
inc
je
icebp
cmp
sbb
mov
std
pop
mov
sbb
jne
ret
inc
insl
iret
in
shl
icebp
je
add
ljmp
or
add
mov
roll
cmp
pusha
xor
aad
mov
outsl
fdivrp
ret
je
rcll
jne
adc
xor
outsb
xchg
lods
mov
pop
cmp
dec
push
mov
hlt
mov
xor
mov
outsl
repz
pop
mov
push
mov
push
jb
or
stc
jecxz
pop
push
jno
loop
xchg
mov
ljmp
cli
sti
add
pop
adc
sub
fnstsw
in
mov
loop
or
or
xorb
jo
sub
jl
push
imul
repnz
jmp
fcompl
xchg
pop
hlt
js
lret
mov
push
int
xchg
sbbl
shlb
and
inc
inc
mov
and
mov
cmp
idivl
or
arpl
test
hlt
sahf
sbb
cmp
ds
dec
push
call
mov
push
mov
in
push
nop
add
into
lock
fs
gs
or
repnz
sub
xor
mov
add
push
imul
js
or
int3
push
cmp
sbb
dec
icebp
hlt
cmp
gs
adc
mov
mov
aad
jno
sbb
jo
pop
fsub
stos
dec
sbb
divl
xchg
loopne
jno
add
push
repz
mov
pop
addr16
sbb
adc
adc
fnstsw
pusha
ss
outsb
add
cli
or
stc
insb
push
adc
repnz
xor
dec
rcll
xchg
xlat
and
sub
call
xchg
cli
xor
and
call
movsb
fists
stc
sbb
mov
pop
adc
add
sub
arpl
dec
mov
cli
sti
xor
in
into
aad
fidivrl
inc
xchg
jo
data16
scas
rclb
cwtl
icebp
add
lods
sbbl
mov
mov
in
dec
wbinvd
xorb
pushf
cmpsb
push
and
aaa
test
inc
jnp
stos
into
ja
jmp
push
dec
les
mov
daa
mov
or
add
pusha
lds
mov
scas
dec
xor
jae
pop
push
into
mov
cmp
inc
cmp
mov
outsb
orb
out
arpl
lret
push
fidivl
or
insl
xor
mov
gs
cmp
sbb
add
inc
jp
or
scas
sbb
hlt
lret
imull
iret
mov
dec
xor
push
test
fdivs
inc
inc
sbb
outsl
push
or
pop
pop
hlt
pop
aaa
and
push
inc
cmp
adcb
or
inc
or
cmpsb
scas
dec
inc
pop
repnz
fs
push
fistl
jb
fimull
test
hlt
imul
mov
or
and
pop
insb
pop
push
cmpsl
mov
out
cmc
mov
iret
mov
xor
sub
sub
cmp
push
bsf
test
inc
push
mov
push
sbb
ss
pop
sbb
insl
je
mov
pop
pop
push
mov
test
cwtl
cltd
mov
outsl
imul
dec
subl
dec
push
rclb
in
push
mov
roll
mov
and
cmc
ljmp
jl
popa
and
and
xor
daa
fwait
dec
xchg
incb
xor
hlt
pop
ss
jb
pop
dec
or
or
mov
or
das
int3
cs
xorl
fxch
js
ret
out
mov
add
push
mov
mov
daa
adc
sub
pop
xchg
call
xor
sbb
imul
cmp
gs
xchg
fwait
decl
sbb
mov
push
inc
int
pop
push
lods
add
push
cmp
pop
jmp
inc
int3
icebp
out
stc
dec
push
xchg
mov
loopne
push
jae
xchg
sbb
enter
out
sbb
cmp
clc
or
jno
jns
loope
mov
adcl
mov
cmp
loop
sbb
jbe
cmc
add
lods
mov
adc
push
clc
scas
xlat
or
mov
divb
sbb
mov
lock
xchg
add
fs
fwait
aas
out
scas
test
push
pusha
xchg
andb
or
xchg
repz
outsl
das
fisttpll
sbb
aam
xor
jmp
dec
data16
mov
frstor
ds
mov
mov
sti
in
test
push
hlt
xor
dec
ja
push
xchg
pusha
std
imul
imul
shl
sbb
cmpsl
xchg
mov
xor
or
fxch
or
in
repz
sub
notl
in
mov
scas
push
and
adc
jnp
and
mov
lds
imul
sbb
inc
test
mov
ret
loope
ret
movsb
add
leave
mov
jle
mov
out
data16
inc
mov
lahf
or
addr16
xchg
xchg
add
aam
cmp
insl
iret
mov
sub
fldcw
and
jbe
jmp
jecxz
lea
mov
jmp
jp
xor
rorb
jg
movsl
popa
xor
mov
dec
loop
clc
dec
xor
ja
fwait
xchg
in
inc
stos
cmp
in
lret
mov
mov
lret
sti
mov
add
pop
xchg
mov
roll
lock
ret
es
pop
sbb
dec
sti
and
sbb
in
jbe
cmpsl
pop
mov
outsb
mov
or
sbb
and
push
dec
jbe
das
inc
inc
out
push
int3
sbb
sub
cwtl
divb
xor
pop
push
repz
xor
data16
dec
dec
in
cli
jecxz
adc
jge
popa
xchg
insb
cmp
cld
inc
test
test
fsubrs
jp
call
inc
popa
popa
push
xchg
in
and
les
mov
fs
pop
xlat
int3
xchg
dec
fnsave
cltd
xorb
inc
into
sub
adc
int3
mov
notl
inc
mov
repnz
mov
stos
xchg
jmp
imul
adc
pop
push
inc
lds
popf
xchg
add
movsl
fimull
jl
dec
push
xchg
mov
in
ret
rcll
into
repz
leave
mov
mov
sbbb
and
call
mov
lds
cmp
in
loope
inc
inc
mov
ror
sbb
fimuls
pop
pop
xchg
lcall
mov
jle
push
je
pop
mov
jle
xchg
fmuls
leave
lcall
or
jg
sub
add
xchg
xchg
es
out
inc
mov
ret
fs
sbbl
adc
pop
sub
aam
out
sub
lret
push
or
dec
nop
add
testb
jle
mov
mov
mov
fs
scas
cmpsl
mov
mov
lcall
in
jl
decl
hlt
test
ds
push
decb
sub
andl
dec
mov
decl
addr16
xchg
loop
add
stc
add
cld
movsl
mov
test
xabort
or
mov
and
dec
out
mov
shlb
pop
push
pop
int
rorl
mov
cli
test
mov
add
inc
xor
mov
lahf
fimull
fdivr
push
jp
jle
pop
mov
jno
or
bound
cmpsb
mov
adc
hlt
and
pop
pop
and
mov
icebp
sbb
mov
jbe
dec
xchg
and
lcall
and
dec
je
inc
jbe
dec
push
mov
add
xor
cmc
mov
in
pusha
popa
movsb
loop
jp
sbb
lret
scas
jbe
inc
cltd
pop
int3
lea
and
arpl
insl
ss
xchg
dec
or
mov
out
and
push
mov
add
jle
add
sbb
mov
movsl
push
faddl
out
hlt
popf
pop
shr
test
mov
movsl
jp
pop
cmpsb
jp
jmp
jbe
and
adc
mov
ds
popf
in
push
loope
inc
jg
std
adc
pop
inc
xchg
jle
shrl
inc
or
hlt
orb
mov
fcomip
imul
pop
arpl
xor
mov
lcall
insl
ss
lock
mov
out
sahf
icebp
flds
icebp
rorl
mov
sub
int3
scas
ja
in
inc
ffreep
dec
mov
loope
sahf
out
out
adc
imul
cmp
ss
ficoml
mov
das
loope
fldl
sub
pushf
mov
and
sahf
data16
ss
pop
mov
jb
leave
jae
nop
andl
mov
rolb
cmc
stos
mov
in
cmp
and
mov
fs
fld
fidivrl
pushf
inc
or
sub
add
outsb
adc
lea
imul
xor
adc
push
loope
rorb
mov
dec
call
repnz
loop
shrl
push
imulb
divl
lods
repz
cmpsb
push
mov
add
mov
mov
sbb
sub
js
clc
movsl
jne
in
fisubrl
rolb
push
stc
cld
out
repz
ds
daa
mov
js
push
lds
mov
mov
or
jo
mov
lock
bound
jo
jle
icebp
push
fucom
sub
lods
xchg
fcoms
push
lea
mov
mov
or
jne
cmp
jno
ds
inc
sub
xchg
mov
cltd
in
pop
push
ret
stos
sub
mov
arpl
aaa
mov
jne
shrb
mov
mov
stos
jl
xchg
cs
dec
cmp
and
scas
push
clc
das
xor
mov
dec
sub
mov
out
rcrb
jmp
fcom
js
popf
lods
clc
xchg
ljmp
ret
out
cmp
jne
shll
arpl
test
jo
dec
jbe
out
jmp
cmp
ja
orb
inc
mov
repz
loopne
popa
dec
lahf
cld
ret
cmp
scas
lret
outsb
cmp
mov
pop
add
jnp
or
dec
xchg
and
mov
pushf
dec
push
shlb
push
lret
xor
xchg
pop
stos
outsl
inc
sub
cmc
shlb
repnz
jno
cmpsl
pop
sti
test
mov
std
mov
and
divl
xchg
cmp
fsubrl
pop
sub
pop
leave
jp
fwait
dec
add
lea
iret
je
leave
jp
cmp
pop
fdivl
lret
xor
aaa
sbb
cli
and
cmp
mov
jb
das
xchg
mov
sahf
lret
and
add
rorl
std
test
je
movsl
bound
enter
push
jg
arpl
inc
jbe
or
aas
scas
xlat
dec
sbb
and
sub
popf
mov
ja
jb
and
jb
or
jnp
add
sbb
jno
outsb
ja
dec
shr
jp
xchg
pushf
pop
pusha
orl
xor
cmc
ds
xchg
pop
xor
inc
imul
jle
scas
lea
fldl2t
test
or
cmp
inc
adc
test
inc
pop
sbb
stos
sbb
mov
jecxz
les
jno
jecxz
popf
ja
pop
fwait
mov
add
lock
in
mov
mov
cmc
fisttpl
clc
and
xor
outsl
or
in
sbb
cmc
xchg
mov
mov
jp
pop
in
imul
dec
jbe
lret
cmpsl
or
lahf
cmp
xor
mov
xor
push
cwtl
sbb
int3
fildl
push
fs
push
cmp
jge
xchg
jecxz
push
or
push
jecxz
arpl
cmpl
fsubl
loope
addb
push
stos
inc
iret
faddl
andl
mov
mov
jle
fnsave
xor
fdivrl
test
out
add
adc
dec
adc
mov
jp
insb
std
inc
cmc
add
jp
bound
xchg
lods
xor
mov
mov
lcall
addr16
sub
sub
scas
fiaddl
in
sar
add
inc
push
push
sub
mov
sbb
fcmovb
data16
stc
xorb
add
push
pop
push
fisubl
push
es
or
pop
push
lcall
idivb
and
xlat
sbb
ja
ret
mov
xor
cltd
dec
mov
jnp
flds
xchg
lahf
sub
mov
cmp
loopne
cmpsb
test
cmc
jns
inc
pop
inc
add
or
push
loope
inc
adc
jmp
pop
mov
nop
inc
fistps
in
cmp
das
dec
push
sarb
icebp
repz
mov
mov
adc
mov
stos
mov
sbb
mov
xchg
cmp
mov
pop
xchg
out
sbb
enter
fists
cltd
aad
shrb
and
dec
jmp
das
gs
push
add
cmp
adc
mov
negb
push
mov
rclb
stos
dec
mov
cmp
pop
mov
lds
test
sahf
push
sarl
test
jbe
lahf
pushf
cwtl
mov
pop
dec
pop
inc
jg
aad
and
push
and
cmc
xchg
sbb
and
les
mov
fistps
xchg
aam
xor
inc
jge
movsl
fdivrl
or
and
xchg
and
fisubs
jb
mov
inc
fisttps
repnz
ds
push
cwtl
xchg
ret
stos
mov
mov
leave
nop
gs
mov
test
pop
xchg
mov
add
mov
pop
cwtl
and
push
fdivs
mov
test
cmp
xchg
jnp
cmpsl
sub
rclb
jg
stc
in
adc
into
sahf
or
fwait
fs
jle
add
fdivrl
mov
push
in
ret
rcll
dec
fwait
mov
mov
aas
imull
mov
in
out
add
push
lods
out
push
jbe
sub
data16
push
imul
stos
std
fmuls
mov
in
cmp
mov
pop
sub
add
add
mov
sub
dec
stos
or
out
cmp
xchg
bnd
ret
dec
add
mov
stos
add
gs
push
outsb
in
sbb
inc
stos
push
call
cmpsl
push
sti
das
frstor
mov
mov
sbb
add
or
orl
mov
mov
or
lods
inc
in
cli
repz
aaa
les
cmp
mov
jo
xchg
stos
sarl
sub
push
pop
push
hlt
in
movsb
pop
pop
xchg
rclb
shrb
mov
cmp
fs
cmp
xor
lcall
int3
ss
int3
xchg
jnp
rcrl
les
iret
and
pusha
fstpt
xor
lock
repz
mov
mov
or
cmp
mov
xchg
adc
addr16
test
scas
out
xchg
or
sub
les
shrb
mov
dec
or
cli
cli
inc
dec
loopne
aaa
jo
sarb
cs
leave
ds
sub
testb
fwait
movsl
out
rcrl
fwait
xchg
xchg
aad
test
inc
out
sahf
test
stos
int
xor
mov
cmpsb
shll
xchg
push
add
bound
dec
into
outsb
nop
and
push
adc
iret
dec
pop
and
xchg
pop
dec
dec
idivl
push
mov
outsl
sbb
sub
je
test
and
data16
aas
mov
or
cltd
addr16
sub
pushf
mov
jl
js
xor
insl
and
jno
out
call
xor
call
xor
xchg
mov
ret
sti
insl
cs
dec
gs
icebp
jge
int3
popf
ja
scas
and
lahf
jae
mov
js
push
test
jns
cltd
cmpsb
popa
inc
fisubrl
or
jbe
call
jg
xchg
mov
inc
pushw
xor
sub
stc
in
or
mov
mov
xchg
sbb
mov
test
or
dec
not
push
je
scas
sbb
pop
sahf
orl
fldt
push
fwait
iret
cs
jns
add
xchg
add
fucomip
inc
roll
add
xchg
shll
adc
sub
arpl
sbb
xor
jl
std
push
cltd
mov
repnz
and
add
sbb
jp
add
push
add
fisttps
sbb
stos
not
mov
xchg
mov
jns
mov
push
mov
xor
mov
icebp
fsubl
adc
push
movsl
dec
shr
aad
add
lods
in
mov
mov
je
test
add
push
sub
pop
out
pop
pop
int3
repnz
subl
inc
sub
jle
inc
sbb
pop
outsb
lret
lods
inc
cwtl
add
mov
push
rep
inc
mov
stc
dec
mov
jb
popf
out
into
mov
scas
push
andl
enter
sbb
adc
dec
out
mov
pop
pusha
cltd
pop
and
push
dec
xchg
test
outsb
addl
cmp
loopne
jbe
aas
f2xm1
mov
lods
dec
push
stos
movsl
lcall
stos
xchg
sub
loopne
into
imul
sub
xor
lock
and
cmp
jbe
pop
test
or
ljmp
idivb
lahf
xchg
push
xchg
cmp
rcrb
mov
adc
fwait
imul
xchg
into
xor
mov
adc
xor
sub
frstor
pop
in
fs
xchg
push
repnz
push
mov
mov
xlat
scas
fisttps
loopne
insl
mov
add
push
imul
add
sbb
sbb
mov
lahf
test
mov
or
inc
pop
test
pop
test
js
test
adc
mov
addr16
mov
lret
stos
mov
dec
and
pusha
inc
aam
dec
in
pop
mov
inc
pusha
xor
and
and
shll
out
push
xor
arpl
mov
incw
push
jne
in
arpl
dec
loope
mov
sti
scas
mov
lea
cwtl
inc
and
pop
test
add
or
in
loop
pop
add
jno
mulb
push
jl
push
xchg
cmp
xor
ret
mov
add
xor
jne
xor
js
mov
adcl
inc
sti
out
dec
ss
ficoml
jge
sub
xchg
outsl
out
daa
std
jp
mov
sbb
mov
mov
std
ljmp
mov
sbb
mov
jo
xor
adc
sub
push
dec
push
scas
and
mov
ret
sub
mov
sbb
into
icebp
icebp
fwait
das
test
inc
pop
jl
sbb
sti
int
add
outsl
push
add
xchg
adc
pop
out
mov
push
movsl
imul
push
pusha
mov
sub
xor
adc
xorb
lods
jnp
sbb
lahf
lcall
out
mov
mov
test
leave
mov
mov
adc
out
out
ljmp
scas
and
mov
js
mov
hlt
xlat
sahf
or
mov
arpl
mov
mov
mov
les
mov
pop
rcl
decl
or
xor
fsubrp
iret
out
add
ficoml
dec
repz
shlb
sub
pop
imul
gs
mov
adc
and
pop
cmp
cmp
mov
mov
fidivl
into
and
cmp
cwtl
std
cmp
pop
dec
inc
cld
enter
nop
push
jnp
sbb
xor
cld
mov
scas
adc
adc
adc
xchg
xor
test
popa
mov
and
test
push
stos
mov
cmp
dec
es
mov
repnz
xchg
call
push
out
loop
clc
adc
push
xor
cmp
ja
fcoms
xor
decb
pop
data16
or
arpl
xchg
loopne
jp
lods
stos
into
ret
mov
xor
stc
outsl
jg
push
inc
rclb
sbb
dec
fiadds
xchg
nop
fstpl
xchg
push
test
les
std
or
pop
pop
and
add
loope
pop
mov
jnp
push
dec
adc
lods
jo
mov
sbb
out
aas
fbld
or
mov
loop
jne
mov
inc
push
dec
insb
pop
sub
pop
dec
repnz
sbb
ja
fists
adc
pop
outsb
int3
xor
sub
push
dec
dec
enter
push
xchg
je
jo
leave
icebp
in
sahf
enter
ret
add
outsl
outsb
mov
js
aaa
jg
call
fisubl
push
ljmp
xchg
inc
mov
xor
dec
ret
dec
pusha
hlt
jp
int
addr16
xchg
xchg
and
add
and
cwtl
popf
jo
test
iret
fidivl
cld
lock
or
push
mov
dec
cmp
dec
lock
int
xor
adc
stos
loopne
jne
jb
aas
xor
loop
ljmp
sub
aas
nop
sahf
xor
out
pop
mov
push
imul
outsb
rcll
mov
adc
dec
jmp
dec
call
shl
shrl
mov
cmp
stos
push
jmp
inc
adc
mov
aam
mov
jo
movsb
adc
jo
inc
shl
cs
mulb
es
call
sti
fsubr
add
out
shl
mov
pop
cmp
je
rolb
and
or
insl
dec
pop
dec
inc
cmp
out
inc
inc
scas
lods
sbb
xchg
pop
xchg
fwait
xchg
lods
mov
int
mov
sub
adc
sbb
mov
jg
bound
in
sbb
mov
popa
insb
or
or
jmp
das
push
insb
imul
call
out
add
loopne
cwtl
lahf
pop
outsb
inc
or
pop
jge
cmpsb
or
mov
outsb
and
xchg
mov
leave
stc
incb
sub
cli
js
lock
cmp
push
mov
pop
jl
cld
imul
daa
test
lock
adc
mov
jns
xchg
dec
fcomi
pop
push
xchg
mov
push
or
shlb
cwtl
mov
out
push
xchg
dec
aas
pop
mov
mov
dec
outsb
int3
fcoms
mov
jo
xchg
jp
jg
sub
cmpsb
lret
jns
mov
mov
dec
test
adc
push
enter
cmpsb
sbb
mov
lret
idivb
rolb
outsl
lods
sub
fsubl
mov
nop
loopne
xor
in
push
xchg
dec
xor
insb
mov
xlat
cmp
mov
pop
cmp
aaa
rorb
mov
inc
loope
cmpsb
decl
xchg
or
dec
test
ret
pushf
out
out
xor
rclb
fimull
fs
mov
add
push
test
push
sub
sbb
in
or
xchg
dec
sbb
int
inc
dec
fcmovbe
xchg
and
adc
imul
cld
pop
in
popf
xlat
pop
pushf
es
rorl
stc
in
mov
sbb
sbb
inc
or
add
adc
mov
mov
dec
and
bound
dec
jns
aas
in
lahf
fistps
jmp
lret
movsl
push
hlt
stos
sub
cld
clc
xchg
pop
inc
pop
scas
xor
ret
outsl
adc
and
stos
aas
xor
xlat
cmp
jb
imul
jnp
je
dec
sbb
push
imul
cmc
sub
addr16
fcmovnb
test
and
cltd
jecxz
shl
cmc
call
or
jnp
sub
ja
and
mov
or
pop
push
es
mov
sub
mov
mov
mov
cwtl
xchg
xor
cli
fcompl
xchg
or
cld
les
jb
mov
notl
adc
out
dec
leave
inc
cmp
scas
xchg
sub
mov
or
cmp
scas
loopne
xchg
out
fs
lahf
adc
je
jle
push
add
test
mov
outsb
xor
icebp
pushf
add
add
mov
pop
jl
lock
mov
outsl
xor
push
test
and
test
sbb
pushf
lods
sbb
jmp
int
and
pop
pop
mov
pop
imul
pop
sbb
adc
ret
fnstsw
popa
subb
pop
or
insb
fbld
adc
sbb
mov
inc
xchg
inc
push
lahf
clc
ja
ficomps
lods
out
gs
in
rcl
sub
outsb
and
in
sbb
fwait
stc
xchg
jmp
fisttpl
jb
decb
int
mov
jb
iret
insl
cmp
jle
xchg
xor
cmp
mov
fcmovnu
xchg
jp
insl
and
sbb
stos
add
mov
stos
inc
ds
push
out
mov
mov
inc
and
dec
and
xchg
scas
stos
mov
mov
push
and
sbb
inc
pop
movsl
lds
lea
lahf
cmpsb
sahf
aaa
inc
adc
pop
sarl
frstor
into
mov
add
mov
out
xchg
push
add
jl
sub
pop
movsl
ds
mov
divl
pop
and
cmp
ja
xor
stc
xlat
inc
mov
fildll
jge
jg
aam
sti
push
sub
les
int
mov
push
addr16
xor
cmp
xchg
pop
popf
jno
bswap
push
out
dec
mov
outsb
cwtl
push
es
inc
push
and
sti
and
push
stos
mov
push
add
jns
in
mov
dec
cmpps
lock
out
dec
movsl
idiv
mov
or
inc
xchg
insl
sbb
stos
xor
mov
sub
rorl
outsb
push
imul
or
lret
je
cmp
mov
js
dec
outsl
xchg
mov
inc
push
addr16
push
push
dec
push
and
xor
sub
pop
cmp
sub
mov
arpl
jecxz
and
or
xchg
lock
sbb
stos
cltd
es
push
add
in
and
subl
cwtl
rorb
lcall
lods
sub
icebp
lock
je
pop
je
scas
cmp
lock
xor
out
jle
addr16
adc
dec
mov
clc
pusha
cltd
and
shr
je
push
cmp
jo
daa
mov
pop
addl
lock
or
ret
mov
cmp
inc
aas
fs
fnstcw
cmc
pop
jo
mov
pop
mov
mov
fimull
lcall
inc
imul
pop
dec
lock
sbbb
lret
xchg
loop
xchg
mov
mov
cwtl
dec
movsb
mov
movsb
mov
icebp
jns
jmp
mov
popa
jns
inc
pop
inc
jge
and
dec
loope
jnp
xchg
cmp
jnp
xor
mov
xchg
aam
cmp
sub
push
push
cmp
lods
xlat
stc
in
mov
jb
adc
aas
cmp
and
pop
scas
aam
shlb
cmp
stos
in
fimull
ret
push
ss
jae
inc
jge
cs
push
add
cmpsl
inc
mov
add
lret
inc
fs
dec
mov
cmp
pushf
sbb
out
fnstcw
rcll
or
ficompl
popf
mov
aam
in
push
mov
push
jl
pop
mov
adc
repnz
stc
mov
mov
stos
jbe
ds
sti
loopne
xor
andb
cmp
jle
cld
xchg
jmpw
mov
jp
mov
xchg
popf
add
mov
adc
jp
add
stos
movsl
xchg
lahf
xchg
cld
int3
fistl
sbb
dec
xchg
sub
sti
clc
pop
and
sti
fdivs
xor
sbb
and
out
dec
gs
pop
jnp
push
int3
shrb
jle
mov
cmpsb
mov
or
jne
mov
mov
cmc
dec
in
mov
xor
out
mov
outsb
popf
inc
popa
push
sbb
jno
fdivr
mov
xor
mov
addl
out
aaa
adc
pop
bound
inc
nop
jae
dec
icebp
push
sbb
sub
xor
or
dec
insb
rcr
arpl
arpl
fs
dec
repz
adc
add
jnp
xchg
in
jbe,pt
sub
out
xor
lock
or
call
shrb
add
jb
pop
add
shlb
mov
xchg
les
push
lods
and
xor
fstp
or
xchg
add
push
inc
sub
adc
aad
inc
jl
push
repz
inc
adc
lcall
test
pop
rcll
cmpsb
shl
mov
stc
dec
inc
in
jb
imul
add
lea
pushf
push
loop
mov
mov
dec
dec
loope
lds
repz
es
das
test
stos
sbb
xchg
loope
jle
jmp
jecxz
out
iret
sub
sub
sbb
stos
inc
jbe
insl
mov
cld
xchg
mov
jp
sub
mov
sahf
lcall
outsb
movsl
jb
stos
xchg
aas
pop
cld
jge
push
and
insb
or
jg
lods
mov
ja
addr16
sete
fcmovbe
imul
sbb
ret
push
xchg
cmp
js
inc
ror
bound
pop
jl
ds
js
pop
jne
in
cmpsb
shll
pop
cwtl
addb
mov
jno
out
add
xchg
jb
mov
jecxz
lret
mov
mov
cltd
or
lock
dec
aam
inc
faddl
pop
pop
inc
mov
das
in
push
testl
mov
add
addb
mov
mov
js
ret
les
int
adc
pop
and
imulb
mov
jmp
sbb
shll
push
dec
mov
std
xor
sbb
push
jb
and
lcall
pop
add
inc
sti
testb
icebp
lcall
adc
loop
outsb
jg
popa
xor
repz
cltd
jns
leave
push
stos
cmp
aas
rol
lret
scas
mov
cld
cs
leave
push
cmp
sbb
sub
test
sbb
and
pusha
add
sbb
lea
call
test
inc
out
leave
xchg
and
jecxz
jecxz
lret
aas
mov
mov
lods
adc
xchg
cmc
ss
fstp
andb
sub
push
xchg
cwtl
in
xchg
mov
push
jno
jle
cmp
ja
pusha
bndldx
lret
inc
ja
es
test
sbb
fdivrl
clc
pop
rcll
cld
pop
les
and
aad
bound
mov
xchg
jns
bound
add
lds
arpl
pop
mov
inc
sub
add
addl
shrb
dec
addr16
lcall
dec
lcall
rcrb
outsl
je
mov
shr
mov
mov
out
pop
out
jns
dec
out
jbe
ja
or
dec
lret
and
xor
pop
xchg
adc
sub
popa
stos
idivb
jle
mov
sbb
out
stc
mov
rol
mov
pop
insb
negl
ret
add
ror
jnp
mov
jbe
arpl
pusha
cmp
stc
mov
xchg
push
mov
mov
adc
jle
cld
adc
call
lret
inc
add
shlb
insb
aaa
xchg
lods
push
out
cld
sbb
add
sbb
ljmp
or
mulb
xor
jns
inc
lret
mov
test
xchg
sub
ja
jmp
aas
mov
or
xchg
mov
pop
xor
pop
jae
adc
inc
popa
loope
fst
or
cmp
es
push
in
pop
cmp
xor
les
and
mov
xchg
in
adc
pushf
idivb
call
dec
jns
jb
movsl
int
stc
bound
sti
out
cmpsl
xchg
gs
or
into
icebp
and
lock
jp
test
sbb
lret
jne
aaa
dec
orb
push
push
ja
insb
inc
xor
dec
jmp
jecxz
push
and
pop
push
insb
jl
fists
cli
fisttps
shll
xchg
jecxz
dec
mov
jae
or
test
xor
add
add
sbb
pop
jp
or
cmp
sub
mov
add
dec
sub
nop
filds
es
jg
inc
lcall
lcall
or
inc
xor
sub
rolb
scas
lds
outsl
and
mov
ss
dec
stc
add
cmpsb
mov
icebp
mov
mov
xor
cltd
pop
mov
outsb
or
jo
pop
mov
mov
or
leave
sub
aad
insl
call
jno
xor
ja
lahf
test
push
sub
inc
xchg
mov
mov
mov
js
adc
cmp
pop
test
mov
xchg
jmp
decb
and
out
push
icebp
xchg
fsubl
call
nop
add
dec
xlat
fwait
addl
fsubr
je
incl
int3
cmp
dec
fildll
jne
add
jecxz
mov
push
loopne
xchg
cmpsb
in
or
je
jmp
jcxz
push
mov
add
push
mov
scas
popf
shrl
popa
push
bound
rorl
pop
or
cmp
dec
mov
push
add
mov
out
icebp
jecxz
arpl
and
sub
ljmp
adc
repnz
popf
aas
inc
sti
xchg
imul
xchg
adc
shll
push
jnp
adcl
and
push
jle
jecxz
clc
xchg
popf
inc
mov
out
adc
ds
push
sub
sub
loope
jae
test
mov
loopne
jb
iret
lock
push
into
jne
int3
jnp
aas
repnz
sbb
cmc
push
pop
jb
loopne
push
add
mov
dec
repnz
insl
js
pop
push
cmp
fwait
aaa
test
and
leave
xchg
int
mov
scas
mov
pop
fcomp
push
cld
cmpsl
mov
fistps
clc
mov
xchg
stos
cltd
aaa
ficoml
mov
jle
dec
jnp
mov
pusha
stos
aaa
stc
ret
jl
dec
fstpt
clc
lea
dec
lock
out
scas
xchg
and
xor
fnsave
add
fbld
xchg
vandnps
mov
cmp
sub
mov
xor
mov
ret
xchg
pop
xchg
clc
scas
imul
push
fidivl
xor
scas
xor
mov
inc
dec
mov
jecxz
scas
stos
sub
push
dec
mov
add
or
fcmovnb
loope
and
andl
adc
xchg
jo
pop
lods
popa
fstps
mov
cli
movsl
push
cmpsb
push
lock
push
mov
lds
jecxz
std
mov
lock
push
mov
mov
sub
or
loope
sarb
mov
cltd
fdivl
push
xchg
enter
cmp
or
fdivl
std
int3
aam
cmpsl
jl
outsb
fwait
dec
aad
ror
movsl
add
sbb
add
xor
fucomi
push
mov
xlat
xchg
dec
and
cli
aaa
cwtl
add
cld
sbb
lcall
and
flds
ret
lret
bnd
pop
aad
xchg
lods
cltd
imul
repz
mov
data16
xor
lcall
sub
add
xor
add
in
cmp
daa
jno
dec
insl
jae
add
mov
dec
adc
xor
imul
add
sbb
or
lahf
xchg
xor
mov
and
mov
jae
lock
mov
call
and
shufps
sub
stc
mulb
mov
pushf
out
repz
sbb
repz
fldcw
pop
mov
test
mov
loopne
pop
arpl
in
mov
or
outsl
xchg
cmpb
in
fistl
mov
adc
dec
cmpsb
lret
pop
inc
push
adc
test
xchg
mov
push
mov
sbb
test
insb
and
outsb
std
in
sarb
fists
mov
sbb
mov
enter
mov
xchg
in
comiss
in
cmpsb
mov
loope
shll
sub
xchg
mov
sbb
jmp
call
lea
mov
movsb
das
mov
inc
or
cwtl
mov
mov
dec
adc
inc
push
push
mov
xorb
add
shll
xchg
cmpsl
mov
leave
ljmp
cmp
xchg
or
xor
jecxz
outsb
sub
mov
cmp
and
repnz
cmp
pop
jg
mov
rclb
jno
lds
fcompl
pop
push
add
cltd
std
mull
imul
movsb
dec
xor
std
or
sub
push
sub
dec
mov
mov
push
mov
ljmp
sbb
fadds
hlt
jp
fnstsw
sbb
pop
stos
aad
mov
lret
mov
cwtl
mov
loop
mov
sub
pushf
dec
cli
or
ja
call
test
push
loope
das
cmpsl
loope
jno
cmp
mov
cmp
sub
adc
jb
divb
xchg
popl
sarl
pop
jne
frstor
xchg
js
jae
mov
divl
je
pop
fdivr
sub
ror
xchg
push
jp
xchg
mov
arpl
cmpsb
mov
insb
cmc
outsl
rcll
xchg
das
scas
add
stc
es
mov
pop
cmp
jg
je
add
inc
ret
mov
fcom
mov
es
test
scas
and
sbbb
fstps
xor
and
xor
cwtl
sbb
in
mov
dec
inc
scas
nop
int
sbb
shr
dec
js
push
mov
repnz
pop
js
gs
lock
xchg
fiadds
jnp
jl
addb
cld
add
call
xorl
or
hlt
xor
in
mov
ret
fiaddl
sbb
or
adc
adc
add
dec
cmp
jae
lock
or
int3
jae
fcmovnbe
jmp
cmp
jne,pt
insb
test
notl
xchg
jne
dec
cmpl
push
or
mov
ficoml
repz
cmpsb
and
test
push
xor
xchg
mov
dec
jns
out
jbe
aas
pushf
cmp
loopne
mov
mov
cmpsb
outsb
imul
adc
push
sar
xor
push
push
movsl
popa
shlb
sub
cmp
ret
sbb
xchg
xorb
out
loop
adc
pop
mov
add
dec
lret
push
adc
lods
xchg
xchg
jg
xor
sub
or
imul
cmp
ficoml
in
scas
enter
adc
jle
sbb
adcb
push
pop
stc
mov
movsb
pop
movsb
mov
pop
gs
jo
mov
sub
loopne
or
lcall
jbe
mov
xchg
out
lock
divb
or
movsb
lea
in
mov
test
mov
rcl
les
ret
negl
add
mov
dec
xor
mov
in
loope
dec
fiaddl
imulb
xor
sar
mov
rcl
repnz
add
aaa
mov
add
sub
sbb
mov
lahf
es
adc
lea
jge
xor
cwtl
aaa
pop
xor
dec
mov
mov
cmpsb
mov
idivl
xchg
stos
jmp
in
pop
push
data16
pusha
or
in
cs
ficoml
pop
mov
std
pop
cld
ret
inc
jp
mov
push
lock
outsb
in
test
lret
dec
add
adc
call
imul
mov
and
sahf
pop
mov
scas
mov
push
je
xor
rcrl
pop
sub
add
adc
jg
jae
and
add
repnz
adc
and
sub
cmpb
pushf
push
scas
int
addr16
insl
lea
xchg
mov
inc
lods
adc
out
sahf
pusha
into
mov
mov
add
cld
dec
push
push
insb
jecxz
push
add
jecxz
icebp
lret
push
call
push
ret
mov
mov
out
fmull
jo
fstpt
dec
adc
jp
out
bound
adc
in
lock
push
or
hlt
stc
xchg
clc
rcll
and
push
inc
mov
mov
inc
pop
adc
adc
xor
addb
daa
jmp
pop
pusha
pusha
push
xor
js
xchg
inc
mov
es
and
gs
xchg
pop
jo
mov
pop
sub
fs
sarl
test
or
adc
loopne
jmp
xor
jns
and
xor
stc
mov
push
movsb
sbb
push
mov
sub
ss
out
adc
xchg
cmc
je
and
push
and
mov
pop
mov
jle
subl
mov
push
scas
sti
push
inc
stos
aam
pop
cli
jl
push
cmpsb
popa
aam
rolb
gs
stos
andl
jns
pop
in
shl
mov
lret
or
pop
jecxz
in
js
and
add
sub
xchg
mov
leave
int
inc
scas
mov
dec
les
push
stc
inc
jno
mov
stos
das
popf
outsl
xor
push
xchg
cltd
popa
push
add
mov
lea
sti
cmpsl
dec
jg
daa
fwait
cmc
mov
pop
dec
and
jns
mov
imul
subl
cmpsl
inc
outsb
aaa
aad
jmp
xchg
ret
jp
int
push
add
repz
xor
stos
test
xor
mov
fidivl
scas
jp
arpl
out
push
pop
xchg
add
xor
ficomps
jecxz
insb
cmpb
or
rcrb
mov
push
out
sti
sbb
lods
loop
sti
fcoml
cmpsl
mov
sarl
push
and
jmp
sbb
jae
ds
dec
stos
fwait
and
push
insl
dec
movsb
fmull
loopne
mov
dec
sbb
add
mov
add
sub
imul
out
mov
inc
xor
stc
sarl
adc
cli
lret
stos
and
xchg
inc
pop
jne
sbb
xor
subb
xchg
and
lahf
cld
jecxz
mov
inc
lock
repz
lods
movsl
andl
aad
cltd
and
push
add
stos
lock
and
sbb
sti
outsl
out
lea
push
lock
fiaddl
mov
test
ja
xor
pop
xchg
stc
nop
outsl
outsl
fidivrl
test
mov
and
mov
cli
imulb
sti
mov
mov
sbb
stos
push
mov
das
out
je
add
adc
inc
fsub
movsl
inc
les
cmpsb
xor
lret
add
mov
movsb
or
dec
pushf
add
inc
sbb
leave
insl
out
add
jns
add
and
pop
sbb
ret
testl
pop
bound
add
loope
dec
fs
std
adc
sbbl
mov
or
jl
pop
in
loop
push
push
cmpsl
cmp
ss
test
xor
aad
cmpsl
cli
lcall
xor
sbb
dec
in
push
loop
mov
leave
clc
jo
es
popa
in
xor
call
xor
sub
mov
jo
pushf
dec
push
jmp
bound
push
mov
cmpl
dec
in
je
pop
in
inc
mov
inc
test
mov
xor
push
and
shlb
es
push
mov
adcl
ficoml
inc
pusha
jne
bound
lods
iret
je
and
push
into
mov
loop
sahf
in
fwait
insl
or
mov
int3
cmp
xchg
arpl
mov
test
adc
mov
and
fmull
cmc
mov
ds
fisubrs
mov
stc
lock
pop
sub
push
push
pop
fucomip
jo
jp
mov
pop
shll
add
or
and
mov
jo
aas
jnp
sbb
mov
mov
mov
xor
jle
inc
ja
stos
cli
push
xor
mov
mov
mov
rorb
aas
dec
or
sub
xchg
dec
sahf
inc
ficomps
out
cmp
adc
mov
xlat
fwait
sbb
jb
pop
test
insl
pop
push
scas
xor
mov
adc
mov
mov
fldenv
mov
cwtl
push
jge
pop
mov
movsl
lahf
vmread
addl
mov
nop
repz
xor
mov
mov
rcl
xchg
hlt
shlb
pop
mov
pushf
cmp
push
rclb
das
sub
jmp
mov
pop
adc
add
stos
xchg
fs
push
insl
enter
adc
repz
push
sbb
bound
pushf
cmpsl
inc
jb
mov
mov
lds
cmc
or
sar
daa
into
xchg
xchg
add
data16
inc
loop,pn
xchg
mov
negl
pop
mov
movsl
shll
adc
add
out
mov
mov
jge
int3
imul
aaa
cmp
add
xchg
outsl
add
call
mov
push
ret
xor
jne
popf
mov
repnz
push
jno
adc
js
in
sub
adc
int3
les
xchg
push
pop
sbb
push
or
inc
nop
div
add
cmp
adc
pop
lds
adc
loope
mov
lods
or
pop
jnp
xchg
or
adc
ror
mov
sub
cld
mov
jae
into
sbb
fstpl
xchg
xchg
sar
jns
rolb
lods
mov
cli
inc
ss
xchg
das
mov
jbe
testb
mov
sbb
fnstsw
and
test
movsb
and
or
mov
pop
lret
outsl
sub
pop
add
call
and
adc
out
out
int3
cmpl
pushw
push
cmp
outsb
inc
scas
imul
fiaddl
aas
sub
dec
int3
cwtl
in
sbb
inc
psrad
xchg
jecxz
icebp
pop
mov
add
addb
jmp
ficoml
mov
sti
pop
daa
mov
jnp
stc
cwtl
jge
das
aad
repz
jno
push
cwtl
xchg
iret
scas
jns
sbb
add
sub
jo
enter
sbb
or
fwait
xor
iret
xchg
pop
push
jmp
jo
lcall
in
mov
pop
sub
movsl
insb
or
subb
repz
sbb
loopne
test
std
mov
xchg
jbe
xchg
inc
icebp
out
pop
push
in
push
push
rorb
xor
adc
xlat
sub
call
icebp
call
insb
and
ret
out
mov
dec
stos
cmp
insb
subl
push
es
push
dec
push
xor
push
mov
push
je
xor
lret
mov
bound
cmpsl
ret
or
xor
or
ret
xorl
out
je
cmp
fnstsw
test
push
lea
idivb
cmpsb
jmp
and
sub
cmp
sub
lea
adc
cld
push
cmp
xor
into
stos
mov
mov
scas
jge
out
imul
jne
push
cmpsl
fst
xchg
jbe
pop
into
lcall
dec
pop
andb
and
pop
je
cwtl
subl
xlat
pushf
aam
mov
inc
cwtl
xchg
mov
pop
xchg
rcrl
pop
xchg
mov
pusha
dec
inc
aad
add
sbb
out
cmp
inc
in
pop
idivl
inc
dec
nop
push
aas
lock
hlt
divb
jnp
cmp
mov
fisubl
in
mov
sbb
idivb
daa
psrlw
insb
sub
inc
mov
mov
jb
ja
jl
dec
adc
dec
push
jl
mov
insl
loope
sti
call
cmpsb
sub
dec
arpl
idivb
dec
mov
sbb
push
xchg
rolb
mov
das
push
or
mov
in
dec
ret
pop
push
xorb
add
in
cmp
mov
repz
out
cmp
jbe
xchg
and
bound
adc
xchg
pushfw
pop
push
movsl
out
sbb
push
add
out
nop
push
lea
jmp
xchg
leave
adc
fstpl
push
daa
add
xchg
into
jle
std
jmp
pop
mov
rcrb
jne
sti
dec
mov
addl
mov
stos
fadds
aas
adc
lahf
pop
adc
dec
jmp
sbb
or
xchg
std
shlb
jnp
pushf
sub
cli
ret
adc
mov
je
sbb
call
xchg
inc
fistl
stos
pusha
fadd
push
mov
mov
cli
lret
das
pop
jo
dec
jae
fidivrs
cltd
into
and
dec
daa
ljmp
dec
rcrb
push
arpl
and
daa
add
stc
inc
sarl
ds
repnz
lds
jge
push
mov
add
fisubrs
cltd
int3
out
jmp
jb
mov
rcll
bound
dec
clc
jl
jne
and
js
fidivs
sub
js,pn
repnz
pop
cmp
popf
arpl
data16
lods
loopne
push
add
jmp
xor
and
and
rorl
or
push
sbb
add
mov
xchg
adc
fcomp
iret
add
lods
aas
adc
lret
sub
push
pop
in
xchg
mov
xorb
fidivs
popa
mov
jae
dec
mov
imul
cmovl
add
sar
aad
sbb
inc
fs
dec
js
jns
mov
push
bound
push
xor
inc
jns
xchg
out
hlt
pop
fcomps
rcll
push
loope
ret
test
or
cld
or
sbb
dec
fnstsw
mov
push
stc
test
movsl
xor
sub
push
ljmp
sbb
xor
inc
loop
fs
pop
jmp
sahf
movsb
mov
mov
pop
jmp
lcall
xchg
mov
mov
cmp
shrl
pop
cmpsl
loop
repnz
cld
arpl
sbb
loopne
cmpsl
cltd
test
xor
xchg
iret
aas
fstps
pop
rcr
cmpsb
pushf
push
and
mov
out
xorb
xor
inc
in
mov
dec
adc
push
add
pop
scas
ret
jecxz
xchg
mov
jecxz
and
fisubs
cmpsb
es
cmc
jnp
addl
js
fadd
mov
jle
lock
lret
sbb
aad
add
loop
aas
lods
icebp
and
jg
enter
incb
push
test
xchg
dec
mov
std
lret
aas
orb
icebp
sbb
jno
loope
lret
fists
mov
jmp
das
pop
push
sbb
or
int
test
adc
and
jecxz
push
cld
sahf
loope
imul
jl
xor
popa
mov
inc
xor
mov
fbstp
dec
leave
xor
xchg
push
mov
dec
sbb
in
ret
xor
aam
ficompl
aaa
sbb
mov
mov
int3
mov
ds
xor
or
pop
icebp
mov
xchg
xor
xchg
sub
xor
sbb
jno
sahf
or
aad
push
cld
mov
mov
out
or
mov
adc
push
ljmp
aas
sti
call
push
orb
iret
xchg
add
out
sbb
inc
in
cwtl
xor
repnz
lret
sub
dec
sub
sbb
aas
aad
mov
inc
lret
pusha
sbb
cwtl
xor
pop
push
mov
pushl
fbld
mov
dec
fldt
mov
lock
mov
dec
dec
rorb
mov
dec
mov
inc
xchg
xchg
movsb
mov
das
adc
int3
mov
push
aad
test
and
xor
test
push
sarb
push
out
sub
mov
xchg
lret
cmc
lods
clc
cltd
data16
pop
insb
cltd
and
push
push
push
mov
icebp
push
dec
cmp
adc
jb
cmp
sbb
das
test
mov
mov
loope
cs
scas
std
and
test
shlb
loope
gs
mov
pop
xor
mov
js
mov
aam
imul
inc
cmp
or
dec
js
div
adc
xchg
out
mov
test
or
stos
dec
insl
ja
fistl
mov
out
mov
ss
jnp
xor
out
push
fsts
stos
jno
pop
mov
shl
je
cmp
mov
mov
cmp
push
jmp
add
icebp
sbb
aaa
fwait
arpl
dec
sti
ljmp
jo
pop
cmc
icebp
push
sub
add
jno
js
gs
jo
jb
insl
dec
cmc
fadd
outsb
popa
mov
scas
push
testb
cmp
inc
nop
xorl
cmp
mov
gs
jo
sbbb
test
pop
adc
and
dec
stos
je
aam
lret
adc
add
xlat
into
arpl
repnz
and
inc
xor
mov
cmpsb
loope
sub
shll
stos
fs
je
repz
sub
ljmp
cmp
dec
and
sar
ss
cwtl
sahf
xchg
cmp
xchg
cmp
dec
iret
iret
lock
cmpsl
sub
mov
fwait
push
inc
jge
int
nop
int3
and
xlat
bound
hlt
fldt
idivl
adc
push
fcompl
cs
cmp
jbe
iret
push
sarb
mov
mov
push
jae
arpl
add
test
jg
adc
pop
icebp
std
bound
ret
pushf
xchg
pop
cmpsl
bound
inc
push
mov
inc
sub
cmp
push
int3
add
mov
lods
pushf
pop
fistps
mov
mov
js
jl
mov
insl
add
aad
mov
js
jl
inc
pop
or
dec
push
mov
xor
adc
or
in
mov
xchg
insl
arpl
push
aaa
imul
js
ss
js
push
out
push
mulb
jbe
pop
dec
cmp
jp
inc
dec
push
popa
pop
push
das
movsl
inc
pop
jecxz
out
push
jnp
xchg
jne
leave
paddusw
mov
fldl
fdivs
frstor
cmp
stc
inc
movsb
xchg
mov
mov
movsl
imul
cmpsb
inc
test
cmp
nop
cmp
dec
sbb
ljmp
push
pop
xchg
repnz
pop
aaa
xchg
sub
and
mov
aad
inc
sbb
adc
jb
xlat
push
sub
push
outsb
xor
lods
lahf
dec
jae
jle
call
push
and
leave
add
mov
xchg
negl
lcall
jae
mov
mov
ficompl
mov
sbb
stos
cld
jl
and
or
fwait
leave
cmp
mov
sti
shrd
mov
push
xchg
adc
fdiv
push
adc
add
repz
sbb
ss
mov
xor
cld
aaa
jecxz
dec
jbe
adc
sbb
bound
push
sarb
ret
ret
out
sbb
adc
stc
stc
cmpsl
mov
push
mov
push
sahf
adc
repnz
mov
jmp
sbb
mov
dec
leave
out
lret
mov
mov
insb
cmpsb
repnz
outsb
adc
loop
cs
and
gs
repnz
lret
inc
sbb
or
add
xor
das
push
inc
jecxz
ljmp
test
adc
popf
dec
dec
jl
hlt
hlt
daa
rol
xchg
mov
rorb
fstpt
ja
push
call
pop
scas
loopne
push
shlb
in
mov
mov
aam
imul
into
push
test
dec
push
imul
mov
out
or
xchg
shlb
cmp
scas
push
fidivrs
mov
xor
mov
mov
aam
xchg
cmp
pop
sub
adc
enter
sub
mov
push
jne
dec
int3
cmp
or
ret
adc
arpl
cmpsb
and
pop
xor
std
xchg
inc
push
cmpsl
aad
lcall
pop
or
test
lods
das
arpl
in
and
out
lods
push
mov
test
mov
xchg
fwait
inc
loop
push
popa
mov
mov
or
test
insl
hlt
jl
sarb
or
cmpsb
sahf
xchg
inc
hlt
dec
arpl
dec
xor
enter
xor
jo
sbb
jno
mov
add
and
icebp
cli
xlat
ds
inc
cwtl
popf
mov
jmp
aam
ret
xlat
lcall
pop
loop
outsb
out
dec
mov
fsub
fldl
addr16
out
arpl
leave
adc
cmp
idiv
sarl
pop
fcmovnbe
lock
test
jge
adc
cmpsb
mov
sbb
mov
pop
in
cmpsl
cmp
xor
andb
gs
mov
imull
mov
sti
loope
adc
insb
adc
sbb
push
cmpsb
adc
rclb
jne
dec
cmp
push
iret
arpl
insb
jae
push
aaa
xchg
xchg
cmp
out
jg
loopne
and
enter
out
sub
xchg
out
stos
rcll
fldl
and
or
jns
fldt
dec
bound
cli
cmp
std
xchg
cmc
or
scas
popf
test
pop
mov
ds
rol
das
and
andb
jns
scas
daa
xchg
std
shrl
add
jne
sub
ret
daa
push
jno
movsb
xor
enter
pop
loope
inc
jmp
aam
enter
sub
mov
jns
je
test
and
mov
loope
sub
int
int3
lahf
insl
lock
pop
xchg
mov
ficompl
lcall
adc
add
fs
inc
clc
imul
imulb
in
aas
ret
push
push
lret
sarb
arpl
jno
cmp
pop
adc
enter
pop
jnp
out
inc
ret
leave
ss
loop
aas
or
fs
stos
xchg
and
mov
pop
and
loop
lret
lods
insl
jne
mov
mov
fsubr
popa
shll
bound
push
mov
call
lret
xchg
push
fisttpl
ljmp
push
add
sub
dec
sub
lcall
cmp
loope
or
call
in
leave
les
loopne
mov
hlt
mov
adc
cmp
jns
test
js
inc
js
in
mov
movsb
icebp
cmp
stos
adc
and
repz
aad
mov
sub
xlat
sti
jns
xor
add
and
test
push
and
cmp
jb
mov
or
inc
and
fcmovnb
stos
or
cmp
jne
cmpsb
loopne
push
cmpsl
or
mov
inc
add
dec
es
pop
or
lahf
mov
push
roll
pop
jecxz
mov
out
mov
enter
xor
sbb
into
stc
fwait
or
leave
pop
nop
test
jge
pushf
jne
xchg
test
push
xor
add
xlat
mov
xchg
fldcw
lret
cmp
scas
insl
push
adc
out
enter
loopne
aad
cmpsl
mov
fucom
int3
rcll
lods
add
sbb
jmp
mov
movsl
push
pushf
ljmp
and
add
sub
pop
cwtl
mov
mov
sahf
lea
cmp
mov
pop
jmp
enter
cmpsl
dec
fnstcw
mov
nop
and
f2xm1
pop
xchg
mov
imul
mov
adc
movsb
loopne
push
mov
pop
sub
cmpsl
stos
mov
lods
std
pusha
jge
outsl
push
jne
jno
fisubrs
scas
xchg
sbb
shrl
aas
dec
arpl
icebp
mov
dec
sahf
inc
mov
mov
test
mov
leave
cwtl
adc
cmpsl
pusha
push
cwtl
ljmp
sbb
mov
test
pushf
int3
pusha
out
lret
inc
or
adc
fstps
leave
jne
add
imul
or
shrl
push
jne
and
mov
outsl
or
mov
inc
sahf
fisttpll
imul
xor
or
pop
lds
mov
bound
and
xchg
cmp
add
or
xchg
divb
mov
push
insb
insb
sbb
jl
jns
mov
and
mov
sti
inc
cmp
das
scas
jae
lock
insl
imul
sahf
mov
jge
adc
inc
cltd
rorl
vmovd
inc
xchg
fwait
mov
data16
xchg
pushf
or
test
dec
sub
jbe
mov
pop
xor
pop
repz
sbb
dec
cmp
outsl
sbb
es
lods
pop
div
pusha
or
ret
bound
xchg
adc
aad
std
movsb
dec
negb
bound
aad
pop
clc
es
cmp
cld
test
jmp
nop
xor
jecxz
push
mov
mov
jmp
fsubl
std
cmc
imul
or
arpl
clc
cli
pop
jle
sti
scas
pop
push
lods
sub
pop
pusha
cwtl
shl
mov
sti
movsl
lds
fsubs
insb
jns
int3
jae
fwait
push
lock
add
stos
or
fdivl
gs
and
loopne
loop
jo
sub
inc
push
xchg
push
mov
add
das
adc
movl
sti
xchg
das
loope
push
cmpsb
push
rcrb
xchg
fnstsw
sbb
cmp
insb
int3
push
sbb
mov
and
test
dec
xchg
mov
xchg
push
aam
sbb
aas
bound
inc
mov
enter
xchg
sbb
mov
mov
jp
cmpsl
rolb
jbe
aam
cwtl
sbb
xchg
es
std
xor
out
mov
daa
ss
jno
test
sbb
pop
push
daa
fcoms
scas
mov
fs
ficoms
mov
cltd
cmp
data16
xor
jge
mov
lods
mov
adc
fcoms
pop
inc
sbb
je
xor
popf
push
sbb
js
mov
ret
adc
icebp
jmp
inc
xor
cmpsb
fstps
cmpl
rclb
cmp
subl
out
jno
lds
and
sbb
sub
mov
jnp
cmp
jne
enter
jge
jne
cmp
mov
insl
call
jle
pop
pop
addr16
sub
in
cmpsb
les
pop
lret
push
mov
ret
xchg
adc
jae
gs
insb
push
add
adc
cli
mov
jge
cwtl
fwait
lret
jo
loop
xor
and
lret
pop
jg
and
sbb
push
data16
jo
imul
mov
sti
in
sbb
jle
arpl
icebp
add
dec
nop
add
dec
popa
add
mov
lcall
scas
or
pop
inc
mov
jno
cli
jl
mov
xchg
and
or
in
mov
mov
push
mov
mov
add
inc
pop
aas
mov
sub
fcom
push
add
adc
xchg
xchg
pop
fisubrl
or
pop
push
test
adc
push
push
sahf
push
push
inc
sbb
mov
bound
cs
or
daa
inc
ficoms
lahf
mov
cmp
add
add
frstor
jnp
jle
ret
orl
fwait
in
xchg
push
lock
sarb
add
xlat
push
loope
shlb
fstps
sbb
and
push
adc
cmp
cltd
mov
ss
jne
add
or
loopne
cmp
data16
imul
jge
mov
cmp
lods
into
and
sbb
mov
das
int
mov
sbb
in
add
mov
mov
shll
sub
test
cmp
test
sbb
sub
test
ds
clc
movsb
notl
mov
stos
test
pop
in
sbb
sti
jb
ja
test
push
in
cltd
xchg
frstor
and
and
sbb
lea
out
dec
push
fcompl
fisttps
push
push
mov
out
movsl
xor
xor
xor
test
lods
cmpsl
pop
int3
sbbb
pop
mov
fsubs
push
jns
push
leave
lods
mov
pop
cmp
xchg
sbbl
xchg
inc
jbe
pushl
lods
sbb
pop
mov
jg
pop
repnz
cmp
out
std
cs
les
loope
push
in
push
xor
mov
clc
int3
or
jo
sbbb
scas
push
imul
sub
xchg
mov
ja
sbb
test
insb
xor
mov
shlb
xchg
xchg
mov
ljmp
and
clc
xchg
in
cs
cmp
je
sti
jns
push
lods
xchg
test
or
ljmp
cmpsb
xor
or
cltd
into
xchg
mov
inc
dec
cmp
lods
and
pop
inc
push
out
pop
mov
mov
xchg
dec
or
and
filds
jns
dec
add
push
inc
xor
adc
test
sbb
lret
xchg
jge
insb
cmp
test
mov
out
sub
push
imul
or
bts
jg
incl
aaa
mov
cltd
jae
push
mov
test
sbb
adc
clc
mov
decb
xchg
popa
loope
std
sub
ljmp
rcl
mov
mov
repz
cltd
xchg
aas
ffree
dec
js
mov
test
pop
mov
sbb
enter
jbe
aas
push
cs
fbld
imul
test
sbb
push
mov
jecxz
xchg
xor
add
mov
jmp
and
inc
imulb
or
adc
in
rolb
lret
repz
push
rolb
sub
adc
add
cmp
scas
out
xchg
jle
fisubrs
inc
ds
mov
add
mov
aaa
outsb
js
sub
inc
dec
lret
mov
xor
shr
mov
pop
mov
dec
imul
lahf
call
cwtl
pop
dec
xchg
mov
sbb
xor
mov
xchg
aam
lock
icebp
push
pop
loop
mov
out
popa
int
jbe
mov
dec
shr
imul
out
pop
pop
push
sub
subl
push
je
mov
xchg
clc
adc
sub
lea
adc
scas
jl
xchg
lods
jl
sub
cmpsl
push
lea
jg
pushf
inc
call
push
imul
js
rolb
pop
js
xor
pop
sub
fcomps
adc
fstps
mov
cli
popa
pop
mov
mov
in
popf
xor
lds
call
inc
movsl
cmp
sub
jns
cmp
inc
or
dec
fists
push
xchg
and
test
mov
cmp
iret
mov
jp
dec
pusha
daa
pop
push
scas
adc
inc
lahf
rorb
loopne
lahf
call
jge
sar
push
cmc
into
mov
push
fiadds
and
adc
jne
add
push
jecxz
mov
shrl
pop
call
pop
iret
sahf
sarl
xor
pop
sahf
add
ds
pushf
leave
mov
inc
and
push
xchg
push
dec
outsl
cmp
mov
and
xchg
mov
and
push
stos
cmpsb
aad
xor
stos
repz
cltd
ss
test
xchg
sub
push
and
pop
xchg
mov
push
rcrw
sub
aaa
adc
xchg
std
lahf
sub
mov
push
mov
shll
mov
test
test
in
jae
and
inc
mov
shlb
aam
and
test
mov
mov
lods
es
arpl
loop
xchg
cli
pop
inc
cmp
cwtl
rcrb
stc
and
icebp
out
ja
xchg
rol
test
fs
xor
movb
push
cs
out
repz
and
xor
aas
out
pop
jecxz
testl
and
add
lea
jb
rclb
sbb
mov
enter
xchg
neg
mov
mov
scas
push
xor
test
push
or
jb
pushf
mov
ljmp
movsl
fmulp
cmpsl
stos
jge
aaa
add
hlt
in
sbb
out
fwait
cli
dec
cmpsl
out
pop
pusha
mov
xor
out
mov
push
push
loopne
push
aaa
cmp
ret
jecxz
cwtl
imul
adc
enter
sub
sbb
mov
into
or
mov
push
aad
jle
sub
adc
sbb
xor
pop
cmp
adc
adc
mov
xor
xor
cmp
jbe
cld
xchg
ljmp
dec
repz
outsl
push
fbstp
dec
sub
out
inc
int3
dec
xor
cmp
adc
dec
and
sbb
or
adc
aad
jecxz
pop
mov
leavew
add
in
inc
or
das
adc
sbb
icebp
in
mov
inc
fildll
dec
aam
ss
inc
adc
fs
jnp
test
pop
push
movb
sbb
mov
xchg
out
loope
cmc
roll
test
xchg
fistps
jno
inc
inc
nop
popa
jbe
aam
pop
or
or
daa
rolb
xchg
fldt
xchg
das
dec
push
sub
adcb
inc
pop
jmp
pop
cld
scas
mov
xchg
xor
push
cmpsb
call
or
ja
shl
fdivl
cld
or
xchg
dec
add
and
imul
and
fistps
stc
dec
jbe
sub
push
int
mov
dec
lea
loope
adc
data16
ret
fs
push
dec
mov
stc
loop
xchg
pop
into
push
pop
dec
fmuls
sbb
rcrb
sub
xor
adc
into
daa
xor
lods
ds
rorb
stc
jns
mov
fidivrl
fwait
xchg
cmp
and
pop
pop
cmp
xchg
ret
pop
fisttpl
sbb
jmp
add
jp
aaa
sbbl
xor
or
mov
test
lods
pop
or
and
mulb
dec
aad
leave
cmp
scas
ficomps
nop
cmp
mov
mov
inc
cmp
mov
sbb
lods
lret
sub
enter
xchg
jl
push
pop
js
stc
pop
adcl
push
mov
inc
int3
add
sub
mov
in
push
pop
daa
or
shll
fistpll
adc
ja
and
iret
pushf
sub
inc
mov
mov
and
jl
add
gs
push
popf
mov
mov
cmpsb
xor
fidivrl
lret
or
xchg
sub
push
out
leave
lods
movsl
out
xchg
lret
and
inc
mov
and
sbb
jne
push
cmc
or
imull
imull
jo
or
out
arpl
dec
lods
iret
movsl
or
insl
aas
xchg
mov
repnz
mov
mov
push
inc
cmpsb
cmp
jbe
rcrb
sbb
test
jp
xchg
add
in
sbb
int
sub
xchg
cltd
sbb
push
fiaddl
js
roll
fdivr
sahf
rclb
cs
pop
loop
push
scas
push
dec
dec
lea
mov
mov
in
lods
push
fidivrs
sub
xor
fwait
mov
jl
add
sti
and
dec
dec
loop
ss
push
and
int3
sbb
push
pop
mov
in
mov
push
mov
test
das
mov
push
add
adc
fwait
int3
stos
sbb
dec
jmp
lcall
mov
mov
jb
cmp
je
ljmp
mov
shl
sub
ja
insl
mov
jno
xchg
pop
jl
adc
jecxz
jmp
popa
push
aas
sbb
enter
outsl
rclb
pop
and
xchg
ss
lcall
js
lret
fwait
pop
rcrb
dec
jae
out
push
push
mov
add
faddl
jge
pop
xor
call
adc
in
and
inc
pushf
cmpsl
push
lret
push
test
lods
dec
je
or
xorb
xor
in
out
pusha
inc
jo
or
dec
adc
lcall
mov
mov
push
mov
adc
jge
fnstenv
aaa
int3
mov
pushf
cli
loop,pt
mov
cmpsb
and
mov
bound
jno
or
repnz
leave
and
gs
ds
xlat
out
inc
negl
xchg
mov
outsl
dec
iret
mov
out
hlt
int3
add
jmp
cltd
cld
popf
xchg
shlb
jle
or
cld
aas
sarl
hlt
or
stos
ds
cmp
pop
ja
add
xlat
pop
aad
pop
pusha
pop
faddl
dec
add
lahf
pop
ds
push
in
jl
add
push
js
inc
scas
mov
and
jnp
mov
in
mov
adc
dec
inc
fcoml
lds
jnp,pn
rcll
fbstp
out
and
xor
icebp
pop
pop
popf
cmp
test
pop
rep
leave
pop
cmc
bound
mov
mov
dec
sbb
sub
leave
cmp
jecxz
enter
icebp
icebp
jg
ds
aad
pop
jo
lods
fldt
mov
gs
inc
jnp
roll
jnp
clc
jmp
mov
lods
clc
rcl
lahf
mov
cs
pushf
cmpsb
ret
dec
pop
inc
and
jae
sbb
dec
aam
rcrl
and
push
mov
outsb
push
pop
jnp
jo
aam
test
pop
adcb
inc
sub
outsb
pop
out
je
mov
dec
pop
dec
jns
and
fadds
and
pop
pop
imul
clc
lock
test
loopne
imul
inc
mov
jns
adc
dec
xchg
mov
aam
cmpxchg
cmc
jbe
and
and
dec
jbe
xchg
jnp
pop
ret
jp
jbe
mov
dec
cli
in
and
repnz
outsb
shr
jl
xchg
insl
das
in
jl
outsb
mov
jbe
jae
jb
xchg
jg
in
testb
cmp
mov
test
test
lods
les
xor
stos
adc
hlt
scas
in
shlb
fisubs
sbb
sahf
gs
mov
jb
lods
fcomp
jno
mov
fildll
mov
cmp
cmp
cmp
std
or
cli
lcall
scas
push
pop
xchg
sbb
subb
test
ss
lods
std
push
andb
imul
sub
sbb
mov
mov
jl
xor
dec
add
sub
aam
sahf
and
mov
cli
jb
inc
mov
xlat
sbb
cmpsl
lret
jl
sbb
scas
or
in
fistpll
xchg
lock
popa
sub
jne
iret
sub
mov
xchg
mov
push
imul
sub
js
or
xchg
jg
ljmp
rorl
inc
add
fbstp
repnz
out
jp
icebp
fcompl
push
test
push
add
push
xor
pop
add
mov
cli
pop
ljmp
ret
jmp
imul
test
mov
mov
inc
jae
pop
jmp
arpl
mov
or
iret
js
jno
scas
sti
xchg
jo
dec
aam
aaa
repnz
inc
sub
arpl
adc
add
push
ss
sub
cli
pop
shll
lcall
add
pop
pushf
inc
call
in
pusha
rclb
push
icebp
jo
adc
mov
fsin
and
je
add
sub
cmp
mov
cmp
sub
or
cmpb
xor
outsb
gs
cmpsb
or
push
sbb
xor
inc
aad
es
cmp
dec
jae
cwtl
fldl
fistpl
push
mov
cltd
pop
jnp
xor
dec
test
outsb
cmp
jp
mov
xor
jnp
jo
repnz
push
fnsave
add
sbbb
pop
aaa
pop
scas
enter
sub
xor
mov
lahf
xchg
out
ret
mov
sub
out
xlat
inc
std
sbb
dec
sbb
aaa
jno
mov
movsb
jp
icebp
pop
xor
push
mov
in
mov
lock
or
test
test
mov
or
mov
lock
lcall
xchg
fwait
pop
outsb
dec
stos
cmp
inc
push
stc
in
fs
int
shll
jmp
js
fldcw
pusha
inc
or
jge
enter
call
push
incb
or
sbb
mov
xchg
addr16
mov
in
push
stc
sbb
push
and
dec
aaa
add
in
cmp
sbb
mov
cli
aas
pop
std
test
mov
xlat
int3
sub
jae
mov
xor
bswap
out
scas
add
xlat
dec
inc
xchg
into
sahf
addr16
enter
pop
mov
or
insl
xor
sub
jns
out
test
jp
imull
cli
mov
or
mov
in
and
lahf
xchg
sbb
pop
and
stc
imul
fmull
pop
xchg
outsb
inc
shlb
mov
fs
enter
push
push
std
fdivr
inc
sbb
or
cmp
pop
xor
lds
mov
ficompl
pop
in
mov
adc
xchg
js
ljmp
push
fcomps
imul
sbb
xor
shlb
dec
mov
pop
imul
xchg
jae
xchg
insb
pop
mov
mov
test
jae
popa
or
enter
or
adc
cmp
xchg
mov
inc
pop
popf
adc
push
dec
push
pop
jl
cli
popf
mov
dec
lods
leave
mov
aas
rol
movl
cmp
in
out
inc
cmp
jmp
push
stos
and
xchg
mov
xor
push
sbb
cli
jbe
fiaddl
adc
dec
ret
clc
cmpl
stos
push
jo
mov
cmpsb
call
cmp
dec
std
jecxz
sub
scas
mov
jb
add
mov
push
pop
insb
adc
sahf
inc
in
mov
out
jle
jge
or
and
mov
mov
dec
and
mov
scas
sub
sub
and
int
inc
das
push
shrl
dec
push
xor
jne
xchg
sbb
adc
sub
leave
sbb
mov
mov
out
cmp
pushf
cmp
mov
xchg
mov
out
lcall
and
adc
ljmp
movsl
sub
aam
pop
mov
mov
dec
mov
roll
jnp
dec
pusha
cs
int3
cmp
insl
cltd
jl
fwait
test
jbe
sub
sub
pop
popf
adc
pop
pop
push
pop
jnp
mov
or
or
mov
mov
inc
xor
jns
fbld
mov
insl
add
loopnew
cwtl
jo
and
mov
xor
and
jp
movsb
and
enter
aad
nop
out
lods
test
popf
mov
fcmovu
ds
repnz
in
inc
movsb
jb
scas
hlt
mov
jp
inc
loop
in
outsb
js
xchg
enter
mov
aas
push
adc
js
inc
xor
ficoml
pop
testb
aam
fildll
and
test
daa
adc
test
push
or
repz
ret
jge
nop
pushf
repz
fildl
xchg
mov
in
imul
mov
push
int3
and
cmp
addr16
mov
dec
jne
jmp
std
sub
movsl
pop
mov
dec
and
pop
and
ds
pop
cld
sub
adcl
fwait
xor
arpl
lahf
shl
sub
fwait
or
xlat
rclb
sub
cmc
xor
mov
movsb
push
mov
out
inc
lret
insl
sbb
adc
cltd
nop
cmp
cmc
int
xor
xor
adc
xchg
loop
push
push
sub
in
dec
add
jno
lods
push
sub
add
xchg
fiadds
sub
sub
in
lds
dec
and
xor
test
lcall
mov
cwtl
outsl
dec
dec
daa
pop
pop
loop
inc
xchg
cmpsb
int
scas
xchg
cmpb
int3
or
lds
cs
fsubs
rcll
int
call
mov
sub
stos
out
movsl
fldcw
hlt
and
cld
xor
adc
dec
shll
int3
jp
lock
loop
rolb
clc
fcompl
inc
and
lret
dec
jno
cmp
negl
pop
stc
and
push
les
and
out
mov
dec
mov
out
clc
into
ja
push
pusha
inc
clc
scas
addr16
adc
jle
insb
fdivr
loope
or
ret
std
popf
call
std
push
lock
sub
mov
or
or
repnz
add
add
inc
inc
clc
xor
cmp
insb
add
dec
test
ljmp
bound
lock
jo
lea
int
or
sub
adc
lods
test
dec
hlt
dec
xor
add
jne
jbe
xchg
jne
loop
mov
fwait
lods
jle
push
lret
sbb
inc
stc
iret
enter
gs
sub
xor
pop
jo
adc
jge
jae
loop
sub
sbb
sarb
xchg
and
popa
popf
xor
in
push
sahf
adc
sbbl
ret
into
popl
cmp
jnp
sahf
inc
and
or
or
sti
cltd
xchg
pop
sbb
sahf
repz
mov
aas
mov
aad
in
xchg
cltd
mov
dec
and
int
out
push
test
test
sub
into
fwait
xchg
data16
icebp
jns
lods
jnp
jecxz
or
push
or
mov
aaa
mov
ss
insb
div
stos
out
in
push
xchg
push
inc
leave
cld
aaa
adc
add
mov
aaa
hlt
data16
cmc
push
rcll
add
dec
adc
adc
enter
and
xchg
pop
inc
mov
addr16
pop
inc
enter
xor
and
jno
push
popa
ljmp
mov
push
inc
dec
loop
xor
test
xchg
fistpll
mov
or
out
or
mov
insl
inc
int3
mov
call
jnp
sub
adc
jbe
addr16
popf
dec
xor
in
js
and
roll
mov
mov
mov
cmp
xchg
fsubl
mov
mov
pop
push
jge
cmp
jg
test
inc
in
mov
movsl
xchg
mov
pop
mov
aaa
xor
mov
sbb
ficomps
pop
sub
ret
mov
jecxz
sbb
add
test
add
movsb
mov
sbb
xchg
or
push
xchg
mov
jg
js
idivb
xchg
push
sbb
mov
add
sbb
mov
sbb
enter
addb
jns
or
dec
jnp
mov
mov
pop
add
lea
jle
cmp
mov
jp
adc
push
inc
xor
and
into
ret
inc
pop
xchg
cmp
iret
xchg
lods
in
roll
or
xor
imul
adc
cmp
testb
addr16
xor
push
mulb
movups
xchg
jbe
ljmp
pop
sahf
dec
xchg
xchg
xor
pop
xlat
jl
push
cmp
xor
das
xor
cmpl
pop
pop
leave
lret
pop
or
rolb
push
push
xor
push
or
sti
fwait
xlat
sub
movsl
dec
setg
int
cmp
aaa
aad
dec
sub
int3
imul
xchg
jle
into
or
adc
push
dec
xchg
popf
adc
icebp
je
mov
mov
inc
pushf
mov
xlat
cmpsl
pop
and
shrb
push
shrl
cwtl
mov
outsb
ljmp
xchg
cwtl
cmc
pop
lods
cmc
insb
or
imul
push
imul
jb
add
xlat
cmp
jnp
int3
push
mov
jp
add
xchg
xor
cs
fsubrl
mov
sti
lret
push
jns
test
loope
rol
xchg
test
mov
loopne
pop
sub
popa
pop
jbe
fistpll
call
arpl
xor
lcall
adc
leave
sub
sbb
dec
jl
pop
push
jns
sbb
jo
jbe
jmp
push
adc
push
mov
cli
scas
mov
bnd
add
cmp
into
lods
sbb
adc
mov
imul
lds
mov
mov
mov
ss
mov
aad
mov
mov
jns
xor
cmp
jno
mov
sub
rolb
ds
mov
pushf
iret
shlb
sub
xor
sbb
out
pop
cmp
fildl
out
cmp
popa
repnz
cmpsb
outsb
fld
jl
mov
xor
fistl
adc
mov
sub
int3
stos
sbb
cmc
cmc
xchg
icebp
mov
add
scas
fs
scas
aam
jne
inc
call
jge
mov
mov
xchg
dec
mov
fcomi
or
popa
outsb
dec
jle
lahf
or
push
xor
sbb
daa
into
ror
call
fidivs
jne
cmpsl
cmp
out
mov
xor
sub
outsl
repnz
sbb
adc
mov
int3
seta
push
or
or
repz
popf
push
sub
sub
test
loope
mov
int3
movsl
es
jns
and
ds
lret
mov
sbb
nop
fnsave
in
lock
mov
das
cmp
push
lcall
in
push
mov
push
les
dec
add
add
xor
test
mov
sbb
dec
fwait
pop
sbb
mov
mov
shll
pop
das
cmp
sbb
test
mov
fstl
inc
push
mov
and
adc
mov
lods
sbbl
incb
cmp
push
lfs
add
jl
int3
jp
out
cld
or
or
lret
pop
sbb
mov
shll
fisttpll
cmpsl
loop
mov
das
movsl
sub
mov
iret
dec
call
rcr
sbb
inc
mov
shll
rcr
out
mov
cld
out
cmc
into
ljmp
daa
push
out
push
lods
es
pop
jno
cmpsl
jmp
clc
stos
add
xor
jl
ficompl
mov
jmp
aad
jae
add
cmpsb
add
call
mov
roll
cmpsb
cmpsl
push
es
or
push
je
cld
pop
pop
das
xor
into
aaa
push
inc
xchg
das
jo,pt
aas
inc
mov
shll
popl
clc
mov
fwait
adc
and
push
adc
push
cmpl
mov
jecxz
push
xchg
shrb
and
test
pop
or
sub
push
adc
imul
mov
ss
aas
iret
ljmp
je
sbb
sbb
imul
mov
cmpb
cld
and
pop
outsb
lret
cmp
into
add
push
dec
sarl
andl
cs
add
faddp
hlt
push
insl
mov
aad
sti
xchg
lret
lret
jmp
jmp
xchg
cmp
jnp
xorb
sub
lret
pop
pop
repnz
rolb
push
dec
jne
fsub
xchg
mov
xor
sub
cmp
push
jmp
dec
stc
sub
jecxz
test
mov
mov
nop
jecxz
xor
push
sub
gs
xor
jae
outsb
pop
cld
lret
dec
mov
jbe
xchg
adcl
jle
pop
mov
mov
add
arpl
mov
or
push
clc
call
mov
cmp
pop
dec
mov
dec
bound
lcall
aaa
mov
sbb
mov
inc
lret
outsl
cmp
and
xor
cmp
sbb
lcall
pop
scas
adc
jmp
sbb
and
mov
hlt
xchg
outsl
dec
push
mov
push
js
jae
mov
adc
dec
sbb
pop
sti
or
ror
xchg
rorb
dec
fbld
or
inc
movsl
jle
lods
lret
dec
add
inc
adc
mov
xor
sub
hlt
in
sahf
dec
or
jne
mov
ja
test
mov
inc
push
add
push
sub
daa
inc
gs
cmpsb
leave
xor
pusha
pop
test
mov
or
cmp
loopne
dec
pop
mov
adc
sub
and
out
add
sarl
mov
jns
cwtl
notl
adc
cmpb
adc
jnp
jno
xchg
xor
adc
jnp
je
xchg
mov
push
cmp
inc
cmp
pop
idivb
arpl
loope
jbe
mov
jnp
aam
sarl
rcrb
add
xor
adc
adc
sbb
cmpsl
xchg
iret
or
fs
cmp
out
push
and
mov
inc
mov
xchg
xor
xor
enter
mov
popf
add
sbb
xchg
ret
addr16
outsl
adc
dec
in
push
cs
repz
inc
aad
mov
fidivrl
xor
aas
mov
jb
sub
lds
dec
call
adc
pop
mov
pop
adc
dec
daa
dec
cmp
mov
dec
fisubl
adc
jl
sbb
adc
stos
addr16
in
inc
inc
jp
addr16
push
repz
adc
loope
pop
fmull
mov
pop
pushw
mov
sbb
mov
dec
jae
mov
mov
sbb
sbb
jmp
js
jae
cltd
xchg
dec
push
cmp
mov
mov
jp
jo
mov
inc
sbb
gs
dec
mov
ret
jno
nopl
mov
test
adc
test
sbb
std
ss
lcall
clc
pop
fisttpl
add
int
sbb
pop
mov
push
inc
or
js
lock
and
xlat
into
cmp
imul
out
dec
mov
push
inc
mov
push
clc
ljmp
repnz
aam
push
mov
jle
dec
dec
and
push
in
nop
insb
sbb
mov
add
pop
shrb
xor
stc
loop,pn
or
inc
push
push
jecxz
mov
test
pushl
push
mov
pushf
popa
lret
jmp
es
push
adc
xchg
std
scas
or
ja
stos
popa
or
iret
or
xor
add
je
cmp
fcmovbe
outsl
mov
sbb
sbb
adc
fimull
xorl
pop
lods
rsm
mov
setb
pop
aam
testl
insl
xor
xchg
add
mov
add
cwtl
dec
inc
hlt
pop
mov
sbb
mov
xor
dec
mov
mov
hlt
push
cld
cli
mov
movsb
cmpsb
lock
push
shlb
cmp
jg
in
jns
or
mov
mov
mov
mov
bound
addr16
lret
mov
movsl
jl
aas
add
in
nop
icebp
mov
pop
push
insb
lods
or
sub
sbb
pop
imul
xchg
mov
and
ljmp
xchg
ss
add
push
push
xchg
dec
fld
dec
faddl
jno
insl
dec
cmp
outsb
mov
pop
iret
fsubrl
pop
addr16
in
sub
pop
fs
mov
testl
mov
and
pushf
sbb
pop
dec
xorb
ja
push
in
inc
test
les
and
loope
mov
cmp
push
dec
xchg
adc
mov
xchg
mov
mov
mov
das
rclb
inc
mov
or
push
aad
jne
sbb
popf
mov
push
jp
pop
and
push
dec
pop
or
lret
pop
xchg
fistps
add
jle
imul
push
xor
push
adc
mov
xchg
dec
mov
outsb
scas
jmp
sub
lock
mov
mov
mov
jl
pusha
inc
out
mov
adc
pop
adc
add
test
out
adc
mov
or
pop
cmp
mov
sbb
jns
fists
inc
subb
xor
jo
or
sbb
dec
mov
dec
xchg
shrl
cli
test
cmp
cmp
pop
push
out
pusha
scas
stc
ja
adc
fs
dec
mov
xor
popf
icebp
je
add
aad
xchg
xchg
inc
dec
jb
mov
xlat
cmp
push
test
mov
xlat
pop
xchg
int3
lea
mov
lock
in
arpl
jp
push
addr16
pop
rol
adc
and
shlb
outsl
inc
fmuls
and
jmp
stos
pop
sub
add
pop
test
daa
rcrl
inc
test
pop
shll
mov
mov
movsl
aad
sub
cmp
mov
add
adc
and
int3
in
push
or
dec
mov
pop
cmpsl
sub
lods
addr16
ficompl
push
mov
fdivs
jmp
rcrl
mov
fcoms
mov
test
inc
xor
out
dec
xor
xchg
and
stos
jecxz
mov
leave
je
or
pop
arpl
out
sti
les
cs
fsubr
lret
mov
mov
in
mull
cmc
sbb
and
adc
cmp
jp
push
cmc
scas
mov
test
data16
sbb
lcall
adc
ss
add
push
insl
push
xchg
mov
ljmp
je
repnz
dec
test
test
cmp
push
movsb
outsl
je
ljmp
packsswb
cmpb
or
jnp
inc
lods
push
or
sbb
mov
dec
mov
adc
inc
mov
pop
clc
jp
fists
mov
out
xor
std
adc
adc
pavgb
mov
pop
mov
nop
or
inc
inc
mov
jl
xorb
test
xchg
insb
lea
frstor
inc
movsb
or
shl
nop
into
test
or
and
cmp
pop
inc
dec
and
cmp
adc
leave
lret
jo
inc
orl
dec
enter
and
call
in
int3
daa
fidivl
jnp
incl
ljmp
xor
push
push
andl
sbb
push
je
ss
fidivs
int
jnp
dec
lods
std
out
pop
sub
jno
test
stos
outsl
xorb
idiv
sti
xor
pusha
orl
mov
scas
js
data16
inc
xchg
pop
mov
in
mov
daa
ficompl
jg
jne
or
mov
in
cwtl
fiaddl
pop
and
pushf
push
jp
sbb
pop
into
sbb
jl
or
fsubl
xchg
mov
jns
outsl
stos
stos
or
cld
jne
les
jge
leave
adc
je
mov
sub
jno
lods
jbe
push
out
das
rclb
inc
xchg
cmp
mov
movsl
pop
xchg
js
test
imul
mov
mov
mov
std
iret
les
bound
mov
daa
pushf
fmul
mov
push
call
add
add
lret
mov
mov
sbb
lcall
pop
xor
pop
test
shll
pop
daa
jle
lock
in
stos
jb
stc
lret
mov
daa
outsl
int3
jno
in
shrl
pop
sub
rcr
stc
testb
sub
imul
test
push
dec
int
push
into
dec
imul
sahf
roll
repnz
mov
js
dec
add
loope
jnp
in
ljmp
xor
filds
in
arpl
mov
int3
jno
scas
pop
jg
add
push
push
incb
mov
jns
push
push
xchg
cmp
js,pt
fstpt
mov
add
xchg
inc
andl
and
push
aaa
push
fnstsw
mov
jg
popf
mov
lahf
fcmovne
mov
jae
push
enter
lahf
mov
jns
movsb
imul
dec
repnz
pop
clc
inc
ret
stos
jmp
movsb
mov
ljmp
sti
xor
js
les
int3
add
aam
sub
add
inc
in
push
in
push
out
jo
outsl
inc
mov
stos
es
cmp
xchg
test
test
lods
aas
shr
xchg
pmulhuw
fucomp
movsb
xor
test
pusha
push
dec
sbbl
int3
xor
jp
stos
inc
lret
fisubl
jne
mov
mov
push
xchg
call
out
mull
jb
or
jg
and
xchg
out
mov
adc
push
mov
and
sbb
enter
push
push
mov
inc
sub
out
jo
daa
jno
jl
or
lcall
or
inc
or
sbb
jns
mov
and
push
int
loope
or
dec
sub
aaa
ja
out
dec
outsl
mov
lea
ja
icebp
orl
push
pusha
push
xchg
repz
xor
adcb
pusha
icebp
jle
or
lcall
das
cmp
fcoms
xor
ljmp
jo
data16
dec
add
push
and
adc
push
or
and
adc
lock
fidivrl
int
pop
sbb
mov
jg
pop
punpckldq
cmp
gs
xor
jns
sti
int
cmp
enter
mov
ljmp
pop
xchg
mov
hlt
in
jne
xchg
jne
popf
mov
xchg
das
or
mov
sbb
push
sbb
fidivs
fistl
cwtl
shll
push
add
mov
or
stos
out
mov
add
ret
add
mov
xchg
cwtl
inc
div
in
push
movsl
cmp
pop
out
adc
cmp
inc
repnz
mov
mov
aam
insb
loop
aam
push
repz
jne
mov
jno
std
test
mov
inc
pop
inc
adc
fistpl
cli
mov
dec
outsb
mov
cmp
pop
lds
and
pop
and
mov
in
mov
mov
mov
push
adc
mov
mov
ds
in
test
popa
int3
xorb
aaa
stos
mov
ret
inc
cmp
xor
stos
push
sub
scas
sub
or
call
pop
jmp
pushf
lock
cmpsb
inc
push
out
push
mov
xchg
mov
std
loope
out
jecxz
or
adc
ret
dec
lds
or
jge
aas
add
mov
mov
pop
ss
fmul
cmp
dec
add
stos
icebp
arpl
sub
mov
rclb
lcall
mov
cmp
rol
repnz
call
pop
daa
out
cltd
cmp
push
cmp
loopne
inc
aam
adc
shrl
sub
adc
std
das
fdivrl
test
hlt
sbb
xor
enter
sar
out
sbb
and
adc
mov
adc
gs
in
dec
aam
adc
pusha
add
push
inc
sub
ror
sub
arpl
cmp
rol
sub
dec
insb
add
das
inc
pop
and
push
cmp
lahf
dec
leave
imull
fcmovne
mov
or
and
dec
jns
mov
inc
mov
pop
pusha
jmp
jb
add
popa
cs
scas
or
icebp
pop
aas
fisttpl
in
ror
mov
mov
mov
addr16
add
mulb
sbb
scas
shrl
cmp
xchg
popf
jns
in
dec
pushf
int3
rclb
insb
dec
xchg
mov
in
mov
xor
icebp
sbb
not
and
push
sub
push
push
cmp
int
popa
xchg
loopne
repnz
sbb
fucomip
sti
mov
loope
mov
lret
shlb
push
stos
es
and
ret
jne
mov
cmp
lret
sbb
or
and
mov
dec
pop
push
mov
xor
push
xchg
test
leave
lret
out
adc
inc
test
in
inc
enter
insb
hlt
je
xor
dec
mov
lret
hlt
add
mov
in
sbb
xorl
fs
inc
push
mov
and
cwtl
cmc
loopne
pusha
iret
or
xor
push
insl
sub
pop
fs
jns
pop
ljmp
bound
adc
jns
mov
insl
sub
insl
pop
mov
pop
mov
sarb
xor
fisubl
push
mov
jmp
pop
repz
mov
stos
cltd
in
aam
outsb
jo
ss
adc
push
cmp
mov
jae
lcall
movsl
adc
roll
cmp
sar
mov
mulb
mov
pop
fcoms
push
aam
or
lods
fiaddl
jnp
loopne,pn
rcr
sahf
push
mov
push
cld
int
andb
movsb
xchg
add
lahf
dec
in
and
sbb
pop
icebp
fmull
mov
jnp
out
pop
cmpsb
and
mov
mov
pop
xchg
loope
adc
and
stc
test
or
adc
test
loopne
xlat
fsts
xor
addr16
mov
lock
jl
testb
push
inc
xchg
lahf
jp
mov
pop
pop
hlt
fistps
test
mov
pop
lret
xchg
popf
xor
ljmp
mov
bound
aas
jnp
ds
sbb
jns
adc
gs
pushf
mov
int3
cs
popf
dec
xchg
insb
and
pop
fstcw
adc
cmpsb
movsl
mov
lret
dec
jle
int3
inc
dec
xchg
jl
mov
lret
fucomp
mov
xlat
pop
cmp
fisubrs
inc
or
or
pop
out
out
ds
es
ds
push
nop
jp
aad
gs
cwtl
jnp
and
sbb
ljmp
dec
jmp
ja
data16
mov
mov
test
insl
insl
cmp
push
popf
pusha
or
hlt
pusha
mov
mov
inc
addl
sbb
cmpsl
or
imul
adc
mov
cmp
test
fnstenv
mov
in
mov
lock
mov
lcall
adc
xor
aas
inc
and
adc
add
push
xor
mov
repz
in
aam
mov
andb
mov
xchg
outsb
or
leave
aas
jae
cli
out
in
mov
inc
adc
push
cld
loop
adc
jne
pop
dec
mov
lret
std
sub
nop
aaa
inc
jb
js
mov
mov
mov
mov
mov
mov
inc
fwait
pop
pop
dec
ret
fimull
add
repnz
js
scas
adc
pop
std
fs
and
pop
call
adc
rcrl
adc
cld
mov
fistl
gs
mov
or
lds
and
lods
xchg
xor
int3
pop
shlb
jle
mov
cli
mov
adc
pop
add
jae
mov
add
icebp
sub
imul
push
pop
out
mov
popa
push
outsl
add
rcrb
cwtl
jae
add
push
sub
jp
add
push
jbe
mov
pop
clc
repz
dec
push
loope
lret
scas
xor
das
mov
jle
ds
and
ficompl
stos
in
enter
push
pop
incb
xlat
add
mov
cli
test
and
insb
mov
int
movsl
scas
cmp
adc
add
jae
sub
cld
clc
pop
sbb
pop
mov
decl
dec
es
js
cli
js
lcall
add
mov
dec
dec
mov
clc
dec
add
das
aad
dec
test
sbb
leave
adc
loope
scas
cmp
xchg
mov
lock
mov
outsl
shlb
mov
testb
cmp
inc
adc
inc
mov
enter
lock
lock
dec
decb
mov
xchg
sbb
adc
push
sti
mov
aas
test
or
mov
call
or
and
push
pusha
daa
dec
gs
iret
repz
in
mov
mov
jb
test
jecxz
push
mov
sbb
xor
out
inc
cltd
inc
mov
jno
cmp
imul
lock
push
mov
sbb
cli
test
pusha
cmp
pushf
inc
mov
add
sbb
fs
xchg
and
adcl
arpl
in
incb
lods
lock
test
lcall
push
cs
in
or
jge
cmp
mov
out
lods
mov
lock
aam
jnp
xchg
push
loop
jb
repnz
adc
fs
or
nop
lahf
shll
jmp
les
fwait
sbb
cli
jae
sub
dec
or
adc
gs
mov
loopne
sub
xchg
sbb
pop
push
pop
mov
hlt
into
mov
loopne
int
hlt
push
mov
cmpsl
pop
xor
fmull
adc
and
mov
mov
test
stos
icebp
fld
mov
push
or
negl
fdivrs
aas
lds
std
mov
mov
cwtl
arpl
or
add
xor
rorb
dec
hlt
push
cmpsb
in
gs
clc
xor
mov
push
test
hlt
dec
cmp
cmp
xchg
jns
mov
enter
cmp
sbb
lds
xchg
lret
lea
imull
pop
mov
iret
std
pop
popa
orl
lds
orb
inc
std
and
stc
inc
mov
mov
add
add
fsubs
ja
repz
addl
jg
mov
inc
or
push
sub
insl
jmp
mov
and
xchg
dec
lods
inc
fimull
mov
push
lock
xchg
inc
addb
jge
pop
xor
out
mov
mov
push
jno
lods
sub
cli
push
xor
pop
adc
pop
popl
call
mov
addr16
lret
mov
aaa
fs
cmp
push
pop
xchg
lods
adc
and
dec
cs
mov
call
dec
out
test
and
mov
loopne
xorl
mov
int3
xchg
out
xor
mov
aaa
inc
sahf
xchg
xlat
mov
jl
shlb
push
into
mov
mov
rol
mov
sub
fsubrs
xlat
sbb
lcall
jae
outsb
xchg
scas
out
xchg
sub
and
das
and
es
es
jns
int
push
sti
and
xchg
aas
mov
xor
cmc
xlat
jo
adc
dec
jo
cli
dec
inc
adc
lods
test
movsl
bound
mov
xchg
out
add
les
pop
sub
mov
ret
jno
cmp
addr16
test
hlt
aad
cmpb
push
xchg
idiv
ljmp
insl
ss
aad
and
xchg
pop
cmpsb
leave
xorl
dec
arpl
fstl
and
movsb
les
push
lret
mov
push
rcrl
jo
pop
test
mov
push
and
sub
cmp
sub
sti
lds
push
add
pop
xchg
fldl
cld
xlat
fldenv
ret
rorb
jle
inc
ret
push
cmp
popf
xchg
mov
pushf
sub
jb
fucomip
pop
ja
push
or
and
jns
mov
jp
and
sub
out
outsb
mov
push
xchg
movsb
mov
pop
jge
push
sub
andb
insb
jp
lds
nop
loopne
xchg
movnti
lods
sar
cwtl
mov
dec
xchg
dec
push
in
and
mov
adc
scas
cmpsb
inc
fimuls
sub
in
and
dec
ret
aam
sbb
pop
ds
popa
orl
pushf
in
loopne
mov
sbb
movsb
add
insl
mov
pop
fcoms
rorb
sbb
adc
cmp
loopne
test
mov
sarl
push
mov
insb
push
and
popf
vpackssdw
mov
lods
aaa
iret
and
inc
push
xor
and
mov
shl
adc
sarl
les
jle
mov
push
test
cld
insl
push
xor
mov
out
pushf
sub
add
pop
fwait
mov
push
lcall
dec
adcb
jmp
pop
jg
lock
int
int
mov
mov
adc
push
xchg
xor
xlat
sub
inc
testl
fwait
cmpsl
sub
in
pop
mov
inc
ret
pop
cwtl
inc
cmpsb
leave
push
out
pushf
andb
jg
adc
push
js
leave
push
mov
push
add
jg
push
cmpsl
and
sar
and
mov
xor
pop
sbb
bound
lods
cmc
pop
xchg
movsb
stos
das
mov
sub
push
add
and
nop
lret
mov
cmp
aaa
jecxz
mov
int3
or
xor
inc
push
adc
or
rorb
dec
xor
popa
push
clc
shrl
dec
jmp
ret
inc
lods
fcompl
lcall
ljmp
push
nop
imul
dec
jle
sub
push
clc
pop
xor
sbb
jb
push
leave
cmc
ljmp
add
jbe
cmpsb
lods
xor
mov
stos
rclb
pop
data16
pop
mov
inc
dec
clc
adc
popf
sub
xchg
add
jo
cli
lods
xor
add
xchg
add
lret
insl
xor
adc
dec
sub
nop
cld
jne
out
test
mov
mov
mov
cmc
mov
and
out
lock
jb
iret
mov
int
push
add
jb
nop
ret
mov
pop
sbbb
cmc
xchg
xchg
pop
cltd
outsb
sub
std
or
ret
add
icebp
and
and
aad
cs
xchg
cmp
jge
les
mov
cmp
adc
push
xor
mov
sbb
inc
add
fcomps
aaa
notl
push
and
test
int
repnz
lods
stos
inc
mov
leave
movsb
or
jno
mov
and
lock
cwtl
in
jno
test
xor
mov
xchg
push
outsl
imul
sub
jno
cltd
pop
insb
cmp
adc
subb
jae
out
mov
sub
test
outsb
jmp
rolb
adc
fstp
out
adc
push
shll
fildl
addr16
insb
dec
out
xlat
pop
add
add
sub
fdivp
ret
adc
xorb
and
les
dec
lret
movsl
jmp
subb
xchg
fistpl
addl
ficoml
in
movsb
jmp
pushf
cmp
adc
cltd
repz
mov
test
ljmp
imul
test
dec
push
jno
jae
pop
xchg
push
ds
lods
pusha
sub
imul
shll
xchg
jle
fstl
add
mov
iret
test
xchg
mov
cmp
add
ljmp
jno
jno
test
lcall
inc
xor
add
ret
dec
test
lods
sub
fdivrl
stc
into
test
jecxz
push
xor
mov
xorl
imul
jmp
div
push
add
xor
lret
out
rorl
pop
dec
aaa
mov
in
sbb
mov
mov
sahf
sbb
dec
popf
xlat
pusha
add
pcmpgtb
test
mov
jns
shl
test
outsl
mov
lods
lods
xchg
les
mov
sub
push
bound
pop
mov
aaa
or
push
mov
inc
xor
and
jl
pop
stc
mov
dec
push
jae
js
out
push
cmp
sbb
or
movsl
std
nop
adc
cmpsb
aas
lahf
sbb
sbb
test
fisttpl
mov
mov
popf
ficomps
jo
mov
mov
jmp
add
xchg
or
movsl
cwtl
push
adcb
mov
je
mov
movsb
fstl
cmpsb
push
je
mov
pushf
pop
out
mov
mov
test
and
or
xchg
lret
fisubl
in
hlt
call
test
dec
cmpsb
push
pushf
repnz
sti
loop
push
movsb
stos
jb
xor
aam
xchg
inc
pop
adcb
sbb
test
pop
mov
jmp
movsb
or
add
jmp
stc
xchg
xor
ficoml
sub
push
js
xor
xchg
pop
outsl
daa
lods
mov
mov
fs
mov
dec
push
and
jae
test
test
xlat
add
gs
sbb
jne
leave
sbb
jge
in
scas
cmp
jb
fsubl
fisubrs
cmp
xchg
pop
cmp
xor
jno
lods
cmpsb
and
mov
xchg
pop
mov
xchg
cmp
aam
xchg
add
adc
push
push
movsb
xchg
call
xor
in
enter
loope
or
jmp
mov
and
jl
push
pop
mov
outsb
and
rorb
sbb
xchg
adc
in
in
jle
dec
push
dec
jecxz
push
push
in
adc
mov
pop
xchg
inc
xchg
int3
mov
testb
enter
sahf
jno
pop
cwtl
mov
push
mov
into
jns
ret
mov
add
add
test
xchg
xchg
cwtl
xchg
push
jecxz
icebp
test
jp
ja
jg
loope
and
std
push
dec
sbb
jg
cwtl
dec
pop
mov
xchg
adc
fmuls
and
call
mov
cwtl
insb
xlat
sbb
das
das
pop
adc
ja
pop
outsb
mov
outsl
pop
icebp
dec
jae
test
jno
repnz
andl
mov
js
std
cmp
mov
xchg
xchg
mov
inc
dec
aas
das
xorb
lods
sub
leave
call
sub
adc
das
mov
dec
std
jge
xor
and
pop
pop
pushf
and
or
mov
test
or
loope
mov
pushf
loope
in
pop
popa
cmc
test
stos
setns
jb
sbb
inc
ret
cmp
mov
cmp
test
fldcw
stc
lahf
jb
aaa
mov
enter
and
outsl
jne
mov
loope
or
aaa
xor
int
dec
sbb
cmp
xor
sbb
xor
std
xor
fdivl
jl
inc
dec
pop
js
leave
xchg
mov
or
lock
xor
dec
sbb
sub
ss
outsl
pushf
cmp
push
inc
push
lcall
mov
mov
dec
insb
and
fsubl
inc
push
shlb
divb
sub
fstpt
jnp
pop
ja
jg
add
test
or
in
jae
or
or
push
in
pop
lds
jns
pop
add
std
add
push
inc
jle
sbb
xchg
xchg
arpl
inc
nop
filds
inc
and
cmp
push
cli
mov
jp
iret
or
insb
push
mov
pop
cli
jns
push
pop
sub
and
cmc
sub
jmp
xchg
fsubl
xor
out
mov
setne
dec
cmp
mov
mov
int
in
xchg
sahf
mov
push
sar
hlt
lods
fs
pop
xor
in
out
out
into
push
jns
mov
or
fcoml
hlt
sbb
gs
jb
test
sarb
flds
fiaddl
cli
or
cmp
or
pop
xchg
std
inc
into
jo
insb
pusha
lret
mov
xchg
sahf
or
into
aaa
mov
adc
xor
inc
std
xchg
daa
data16
cmpsb
jmp
shl
jo
cmpl
movsl
in
mov
enter
nop
xchg
mov
xchg
cmpsb
ror
xlat
jbe
push
add
fbstp
dec
push
and
dec
dec
sti
cmp
add
fnstenv
lds
dec
mov
dec
fs
jae
pop
mov
jno
and
popa
icebp
adc
pop
sbb
ret
fnstsw
xor
sub
cmp
sub
imul
mov
jo
push
ret
imul
pop
cmp
shlb
sub
ljmp
dec
pop
or
xor
mov
in
push
adc
xchg
enter
not
notl
dec
jbe
int
stc
dec
push
xchg
xchg
or
subb
jecxz
pop
xchg
adc
push
ja
stc
and
inc
mov
jbe
sbb
adc
les
fs
ds
outsl
push
or
push
test
adc
dec
dec
xchg
sub
orl
mov
into
out
sub
mov
jle
jb
add
cld
cltd
out
js
rcrl
lret
cmpsb
jne
aam
mov
sub
adc
fmulp
jl
movb
ds
inc
adc
cmp
dec
fdivs
out
xchg
stc
cltd
xor
mov
fs
movsl
arpl
aam
nop
jle
add
mov
das
jecxz
jno
int3
mov
add
and
cmpsl
cmp
cmp
xchg
repz
test
pop
sbb
ret
ljmp
sbb
lea
inc
fadds
sti
add
sbb
sbb
adcl
or
inc
stc
daa
cs
gs
jle
stos
ret
mov
cmpsb
hlt
mov
pop
stos
cmp
out
repz
jo,pn
test
cmp
mov
adc
mov
mov
adc
cmp
jle
mov
out
shl
or
fs
daa
adc
scas
and
xor
dec
mov
lcall
in
clc
push
dec
out
mov
jmp
int
mov
sub
fwait
jo
push
mov
lret
xor
sbb
stos
cmpsl
xor
pop
fwait
test
out
cld
jle
sub
insl
mov
mov
fistpll
jo
push
pop
xlat
jbe
and
lcall
ljmp
push
fs
std
inc
arpl
dec
pop
mov
mov
daa
add
push
pop
mov
test
xor
ljmp
imul
sti
int3
mov
notl
cmpl
xchg
push
cli
mov
outsb
fidivrl
xchg
push
aas
arpl
push
mov
pop
jnp
mov
add
push
sub
aam
jmp
cmpl
mov
dec
ja
jnp
and
sbb
std
add
pop
cmp
icebp
aad
scas
mov
out
and
or
iret
lods
and
mov
mov
iret
mov
jns
scas
sar
jecxz
outsb
mov
push
bound
jmp
je
dec
xchg
sbb
dec
mov
aam
scas
sbb
xor
push
dec
or
in
shll
lret
in
xchg
aam
cmp
xchg
xor
lar
pop
xor
sub
sub
jmp
mov
inc
dec
jge
cwtl
xor
mov
pop
insb
dec
das
adc
dec
mov
lcall
push
adc
xchg
repnz
inc
inc
push
mov
sub
test
mov
push
shr
mov
add
nop
add
int3
push
add
push
mov
pop
adc
jmp
lret
sub
add
repz
lea
test
inc
iret
adc
pop
sbb
test
xchg
xsha256
mov
jecxz
sub
push
fs
outsb
sbb
fdiv
jno
pop
out
in
cmpsb
in
jnp
inc
jo
fdivrl
testb
mov
cmpsl
rcll
repnz
imull
push
negl
or
mov
pop
xor
test
xchg
push
sub
inc
xacquire
cmp
js
int3
aad
push
ror
data16
hlt
sbb
mov
mov
ret
xchg
add
test
sbb
icebp
xchg
hlt
jmp
pop
cmp
adc
lret
cmpb
es
test
xor
inc
jne
mov
scas
std
mov
pop
popa
pop
mov
test
jae
stos
fisubrs
lahf
stc
jmp
je
loopne
outsb
out
enter
ds
out
sbb
push
fadds
sbb
push
mov
jl
push
pop
dec
push
or
xchg
ret
ret
sub
or
push
icebp
outsb
jmp
xchg
pop
jmp
loope
dec
lcall
shl
ljmp
sub
jno
rorl
sbb
sbb
mov
rcll
xor
mov
jne
push
sbb
les
mov
mov
sar
dec
aas
jmp
jne
add
fs
shrl
lcall
sbb
mov
jno
decb
mov
dec
dec
add
sub
xor
inc
stos
ja
aaa
push
pop
pavgw
xor
addr16
cmc
imul
dec
or
inc
out
jl
push
lahf
adc
push
mov
mov
mov
int3
pop
lods
popa
pop
gs
cmpsb
jns
cmp
mov
mov
fwait
pop
imul
jnp
out
std
in
cmp
cmp
xchg
push
pop
mov
in
cld
mov
out
jmp
inc
jb
cld
sub
and
shr
into
pop
jle
scas
stos
insb
test
pop
sti
lea
ss
js
or
cmc
or
jo
cmc
cmpsl
roll
outsl
cmpsb
mov
shl
ficoms
mov
mov
xorb
push
pop
ljmp
sub
clc
repz
push
mov
mov
add
or
jbe
inc
dec
scas
movhps
and
xor
cltd
cltd
mov
jne
xchg
or
push
adc
mov
je
cmp
pusha
fsubrl
sti
movsb
mov
mov
ljmp
fsubp
das
mov
rcll
clc
xchg
xchg
xchg
pop
je
bound
fs
aaa
cmp
inc
push
sub
cmp
adc
subl
and
faddp
pop
clc
mov
lds
inc
inc
mov
es
mov
ret
xchg
inc
call
fisubl
mov
or
or
xchg
hlt
mov
push
lea
pop
push
sbb
gs
mov
cmp
inc
mov
jecxz
int
stos
fcmovnb
sub
gs
mov
jg
push
shr
xlat
movsb
sahf
mov
sbb
movsl
sbb
scas
mov
mov
mov
mov
outsl
roll
push
xchg
outsl
jge
aam
push
out
jle
test
insb
out
pop
xchg
popa
or
insl
cmp
jge
push
les
inc
rorl
xchg
ficoms
lret
daa
push
adc
pop
cmp
fisubrl
pop
stos
and
mov
insl
pop
xchg
aas
scas
ret
aas
icebp
push
add
lods
adc
cvtps2pd
push
push
dec
jnp
push
sub
pusha
adc
ds
addr16
pop
call
enter
fs
xchg
and
movsl
test
loopne
arpl
sbb
ret
push
loopne
or
mov
aam
and
ficoml
popf
lods
sbb
call
int3
lret
ja
mov
jae
cmpsl
jno
add
cmc
xchg
lea
adc
xchg
add
xchg
or
cmc
nop
rcrb
dec
lcall
imul
adc
xchg
adc
jns
mov
movsb
pushf
idivb
gs
mov
push
and
movsl
and
cwtl
jecxz
mov
movl
inc
and
xor
inc
sarl
hlt
jo
pushf
xchg
jae
fimuls
and
push
js
xchg
cmp
mov
push
out
and
and
push
out
adc
dec
mov
mov
rorb
jp
test
sarl
xor
mov
and
sub
sbb
insl
xor
jp
mov
ljmp
ds
and
dec
lods
out
mov
out
mov
stos
mov
add
add
xchg
scas
popa
movl
imul
clc
pop
or
xchg
cmp
cwtl
iret
cmp
loop
mov
cmp
fs
mov
sub
xchg
push
jle
mov
ss
jo
popa
xchg
inc
mov
cld
adc
divb
rcrb
mov
sbb
in
xchg
cmpsl
pop
mov
popf
comiss
xor
adc
xrelease
imul
pop
and
inc
and
mov
jns
repnz
addl
dec
jbe
sub
vpsubd
xlat
push
xor
lahf
mov
jbe
jge
mov
repz
ljmp
in
in
ds
lods
xchg
sub
inc
cmp
jne
in
xor
sti
sbbl
lock
loope
sbb
xor
sarl
mov
cmp
je
gs
jne
ss
lcall
enter
mov
xchg
cmp
int
in
in
add
lcall
sub
popa
pop
outsb
sti
adc
add
xor
sub
sti
rep
ficoml
sbb
adc
les
xchg
jle
add
in
popf
cmc
lahf
push
cwtl
adc
enter
out
cmp
sahf
push
imul
cli
icebp
daa
pop
arpl
popa
inc
xchg
lea
cli
push
test
adc
sbb
mov
int3
ds
push
push
imul
ret
scas
pop
mov
scas
js
addr16
mov
xchg
aas
pop
lds
inc
incl
push
clc
jo
mov
in
nop
jl
push
int3
jecxz
sub
cmp
inc
repnz
pop
pop
shll
decl
mov
jnp
repz
lods
test
adc
dec
shl
sbb
dec
insl
enter
xchg
popa
iret
sub
lahf
add
movsb
mov
fildl
mov
dec
lcall
imull
stc
mov
jge
jg
cmpsb
imul
mov
aas
loopne
mov
dec
jb
or
fcomps
sub
out
into
and
sbb
cmp
fcom
or
pop
ficomps
shr
inc
movsl
jnp
mov
push
add
jno
or
enter
lcall
pop
mov
sbb
mov
xchg
aas
jl
fdivrs
and
dec
imul
mov
test
add
das
or
mov
mov
daa
pop
test
push
aaa
filds
push
add
outsb
xchg
ret
ljmp
loope
sub
addr16
ftst
leave
sahf
sti
shr
xchg
hlt
outsl
xchg
sub
fistl
cmp
or
out
sub
mov
mov
faddl
mov
outsl
sbb
mov
jbe
push
mov
mov
lcall
bound
ret
inc
push
xor
addb
sbb
push
loop
aad
imul
sbb
lcall
mov
ret
mov
pop
and
loop
adc
fs
fistpl
rolb
push
mov
and
inc
jns
pop
mov
sub
stos
iret
dec
popa
inc
outsl
int
lcall
and
jo
lret
jl
add
pop
jbe
gs
test
and
mov
fcomi
push
mov
dec
or
ret
sbb
lods
mov
cwtl
fstpl
jbe
jno
out
inc
pop
shl
jl
insl
pushf
push
cmc
loope
std
orl
push
mov
sbb
fcoml
push
pop
cmp
mov
rolb
push
outsb
repz
mov
or
sbb
cwtl
sbbl
lods
aaa
or
aaa
enter
movsl
sbb
hlt
fisubl
rorl
jmp
inc
outsl
pop
aad
mov
xor
pcmpeqb
push
jmp
insl
xchg
cmpsl
jge
imul
test
loope
or
push
inc
daa
mov
scas
mov
imul
into
leave
pop
dec
or
ret
add
cli
pop
lcall
add
jno
xlat
jmp
pop
add
enter
loopne
loop
add
mov
rcrl
dec
aas
pushf
aam
pop
repnz
subb
lcall
cmc
push
add
sarl
andl
cltd
adc
xor
xchg
mov
push
imul
push
pushf
test
jns
cmp
cli
gs
dec
sub
jecxz
sub
aaa
xlat
cld
stos
push
xchg
popa
in
mov
pop
ficompl
mov
es
mov
mov
pop
xchg
das
shl
or
loop
mov
je
adc
stos
fimull
push
inc
jmp
pop
fnsave
aaa
fadds
xchg
xor
sbb
jle
xor
jecxz
dec
mov
mov
push
jg
stos
mov
outsb
js
mov
mov
xchg
jns
cmp
outsl
loopne
daa
add
mov
in
test
imul
repnz
idivl
mov
orb
pusha
lods
and
inc
mov
into
pop
inc
popf
icebp
and
sub
pop
popf
xchg
jmp
jnp
sbb
leave
repnz
sub
and
movsl
cmp
push
stos
jp
or
adc
jmp
push
sbb
mov
adc
pop
lret
outsb
mov
xorl
mov
mov
mov
xchg
cwtl
negb
jns
hlt
fsubrl
int
fisubrs
int3
jg
pusha
cli
inc
fs
jbe
adc
in
mov
sbb
xchg
xor
push
test
mov
pop
push
cmp
mov
pushf
lds
pcmpgtw
push
pop
jecxz
fstps
cmpsb
out
jnp,pt
dec
aaa
jae
rcrl
je
xor
mov
testl
push
pop
xchg
out
das
adc
mov
nop
mov
adc
xorl
jne
movsl
outsl
lret
push
and
sub
sub
push
pop
pop
add
fs
pop
loope
inc
imul
andb
xchg
inc
aam
pop
push
add
es
mov
test
aas
shll
adc
xor
loop
lods
leave
sub
pop
and
add
push
shl
pop
test
add
popf
or
pop
stc
insb
pop
dec
gs
pop
push
in
add
sub
stc
js
mov
mov
pop
aas
movsb
sbb
lea
or
or
adc
and
cli
rorl
aas
inc
lret
sti
mov
out
jo
and
mov
xor
mov
pop
fisubrl
push
cmp
cmp
mov
scas
stos
mov
xchg
mov
arpl
pusha
loope
inc
pop
jno,pt
lods
xor
jmp
das
ret
testl
jo
cmp
xor
push
sub
clc
add
xchg
arpl
xor
mov
inc
sbb
push
test
sub
jnp
mov
pop
mov
or
leave
push
and
mov
mov
or
add
das
push
mov
xchg
shrb
lods
clc
das
std
add
addr16
fiadds
in
add
and
cltd
mov
pop
xor
jae
xor
xchg
dec
lock
rcll
inc
cli
mov
xchg
mov
stos
cmp
fsubs
aaa
fbstp
fucomp
loopne
fistpl
jns
xchg
mov
mov
pop
push
inc
in
cwtl
ds
lods
or
cmp
push
lahf
push
lods
popf
das
rcll
adc
xor
jle
pop
fstpl
mov
inc
push
cwtl
shl
mov
mov
cltd
notl
sbb
xor
and
pop
dec
pop
push
pop
push
test
ret
out
sti
jne
mov
cmp
pusha
lcall
mov
cltd
test
cmp
and
cmp
inc
cmpsl
rcrl
mov
ja
and
notl
push
sub
or
idivb
je
jne
iret
or
mov
mov
das
mov
in
sbb
insl
test
xchg
aaa
loope
dec
jmp
mov
jb
sub
in
enter
and
popa
mov
jae
sbb
inc
mov
xor
mov
shlb
cld
push
mov
add
jl
push
sahf
sub
cmp
testb
mov
fs
movsb
cli
mov
xor
push
add
andb
lret
mov
aam
push
sub
xchg
repz
pop
int
jp
mov
push
fisttpl
sbb
jmp
sbb
mov
sub
cmp
je
fnstcw
imul
and
mov
les
or
pop
add
cltd
daa
pop
xor
mov
hlt
aad
adc
or
push
xchg
mov
shll
add
mul
mov
notl
aas
test
add
scas
leave
pop
shrl
jmp
pop
push
xchg
cmp
xchg
mov
jb
scas
hlt
notl
xchg
fnstenv
xchg
push
adc
push
jmp
xor
lods
mov
ret
pop
dec
into
decl
add
push
orb
dec
sti
jp
lcall
int3
data16
dec
mov
repz
shrb
or
adc
daa
hlt
and
insl
fisttpll
pop
aaa
mov
push
xchg
xchg
in
into
push
loop
cmc
cltd
adc
or
ljmp
adc
stc
mov
fdivl
lahf
outsl
stos
mov
sbb
popf
dec
scas
mov
mov
out
aas
add
and
mov
push
in
es
in
in
lret
jg
mov
stos
add
lret
xor
jmp
fwait
pop
movsb
xchg
iret
outsl
repz
mov
data16
test
mov
push
mov
enter
in
inc
mov
imul
aas
mov
fcom
cmpsl
fstpl
mov
xchg
sub
outsb
push
cmp
xchg
insl
call
mov
cltd
sub
mov
jle
gs
and
out
dec
icebp
sbb
jae
dec
test
or
xor
iret
sbb
adc
pop
or
shlb
imul
jl
in
jge
adc
xchg
xor
jb
faddl
ds
stc
lods
sub
xor
lea
pop
outsb
sub
aaa
aaa
int3
mov
sti
rorb
lahf
repz
pusha
xor
sti
fistpll
cmc
xor
in
fwait
dec
jmp
scas
add
mov
or
call
cld
jge
pop
bound
ds
dec
negl
fwait
cmpsb
push
mov
aam
and
loopne
in
fnsave
imul
sbb
dec
fcos
pushf
cmp
mov
int3
cltd
decl
push
cmp
push
add
sahf
pop
mov
test
xor
icebp
pop
cmp
lret
pop
test
xor
jge
pop
mov
adc
bsf
cld
das
imul
cltd
push
mov
out
dec
or
fs
adc
push
adc
cli
mov
lret
push
xor
inc
inc
pop
mov
pop
or
mov
mov
jle
sub
mov
adc
les
fcomps
test
js
shrb
out
mov
jbe
ja
inc
adc
cmpsb
cmc
mov
mov
lcall
sub
sub
adc
pusha
arpl
jno
addr16
adc
push
shrb
pop
mov
fsubrl
inc
bound
mov
add
test
out
mov
inc
cmpsb
mov
mov
jmp
jge
push
push
xchg
lock
in
out
stos
into
sbb
nop
fmuls
mov
lods
lcall
mov
mov
jno
xlat
imul
adc
lahf
out
icebp
mov
xchg
adc
lret
add
popf
outsb
mov
dec
jno
sbb
fcoms
sub
xchg
adc
push
shll
push
jb
leave
repz
lock
pop
ja
dec
lea
test
cli
into
adc
mov
iret
jp
mov
xor
jns
jmp
mov
in
lds
sub
aaa
daa
dec
mov
adcb
popa
sarb
scas
cmc
lahf
pop
jnp
sub
shll
mov
xor
daa
cmpb
ljmp
lahf
push
mov
or
push
ljmp
adc
jb
push
push
pop
mov
cs
jo
sub
insb
mov
lods
jmp
adc
lcall
mov
adcl
push
outsb
pop
xor
push
xor
test
outsb
das
gs
lods
mov
jno
adc
and
or
das
add
pop
pop
inc
lods
lods
notl
jp
add
pop
push
adc
repz
mov
mov
stos
test
mov
mov
jmp
repz
imul
lds
ds
dec
jmp
in
out
sub
sahf
inc
in
fsubrs
mov
rclb
mov
addr16
mov
sub
frstor
jmp
movsl
stos
fisttps
iret
cs
lea
mov
hlt
fwait
lds
sbb
das
ss
hlt
or
fsubl
and
mov
dec
scas
dec
cli
jne
and
mov
outsl
adc
lds
btc
cmp
pop
or
push
xchg
stc
insb
sbb
imul
lock
xor
pop
push
cmp
inc
inc
push
fisubl
cld
inc
or
pop
loop
jecxz
fs
mov
cwtl
rcrl
xor
push
cli
dec
inc
mov
shrb
cmpsl
push
xchg
movsb
mov
mov
mov
stos
mov
dec
das
cmp
repnz
or
sbb
adc
or
sub
push
and
cmpsb
dec
sbb
adc
cld
icebp
in
sbb
mov
ficoml
clc
inc
rorb
in
sbb
xchg
jge
aaa
xor
sbb
nop
xchg
rcr
mov
rclb
jns
push
jnp
rorb
jo
inc
cmc
in
jb
mov
stc
loope
xor
ret
mov
ret
add
notl
push
mov
es
inc
xchg
cld
pop
mov
lods
inc
in
push
hlt
fst
xor
lds
in
adc
or
lret
jp
cmpsl
fldcw
fs
jmp
sub
loop
fdivrl
mov
cmc
sbb
mov
ss
inc
or
sub
push
bnd
lret
cmp
jnp
cltd
sub
aam
and
pop
jo
and
lcall
cli
ss
xorl
mov
mov
lods
pusha
cwtl
ljmp
cmp
adc
cmp
dec
mov
test
dec
sbb
scas
or
mov
jb
icebp
jle
mov
fsubrs
mov
outsl
fs
or
mov
mov
jae
push
xor
movsb
push
aaa
cmp
fdivrs
sbb
and
jae
loopne
pushf
sbb
xchg
jmp
mov
xchg
jp
jl
ss
leave
mov
xchg
push
pop
rol
and
hlt
adc
inc
movsb
nop
sbb
daa
fucomi
inc
sub
lods
mov
pop
lret
jecxz
ljmp
imul
or
mov
cs
sbb
jp
cwtl
fs
jo
fucom
repnz
dec
pop
sbb
sbb
imul
in
pop
push
inc
fidivrl
xor
sub
loopne
mov
lcall
sub
mov
dec
sbb
push
outsb
or
push
shll
mov
adc
pop
jp
sbb
pop
push
sbb
enter
rolb
cs
dec
in
mov
je
repnz
xchg
aaa
mov
ret
aam
lret
and
outsl
repnz
sarl
xchg
mov
fcompl
ret
mov
jns
jb
loop
jb
pop
mov
inc
mov
repz
mov
xchg
jmp
mov
push
in
xlat
push
lahf
adc
sahf
pop
push
dec
mov
mov
lds
gs
out
js
or
cmovp
outsb
fwait
jmp
sbb
dec
or
fsub
pop
shlb
jecxz
test
rclb
mulb
xchg
andb
sub
mov
lods
push
leave
dec
xor
push
or
lcall
ss
sub
inc
xor
lahf
xor
popa
cmpsl
sub
into
jge
and
sahf
in
icebp
xchg
sbb
int3
mov
movsl
inc
iret
xor
mov
jmp
std
push
aas
mov
lret
add
xor
insb
das
ficomps
push
sbb
jmp
iret
scas
movsl
data16
pop
iret
jl
arpl
pop
xchg
sub
das
cmp
mov
addr16
jnp
adc
xor
mov
push
or
push
cmp
dec
rcl
fbstp
inc
or
in
push
add
stos
movsb
cmp
cltd
sub
mov
ret
dec
hlt
jge
loopne
movsb
jle
je
mov
inc
mov
das
fucomp
aaa
mov
push
mov
cltd
sahf
sbb
shr
inc
push
mov
xor
aas
sti
addr16
push
mov
jne
adc
bound
cltd
cmc
jne
mov
aaa
mov
dec
inc
sbb
inc
imul
cwtl
sbb
insl
fistl
inc
xor
repnz
mov
inc
jo
mov
icebp
cltd
hlt
add
sub
adc
sbb
pop
clc
sub
mov
pop
and
push
push
sbb
xchg
addr16
mov
outsl
mov
mov
scas
sub
mov
jle
xlat
add
push
jb
mov
mov
adc
xorb
jl
adc
iret
mov
stos
addb
adc
inc
xlat
loop
push
xor
addr16
push
fadds
leave
xchg
cmpsb
fidivl
stos
mov
or
sbb
or
or
sub
lods
loopne
ja
push
sbb
mov
jb
inc
dec
outsb
push
aas
imul
or
popf
sti
xchg
or
mov
loope
fwait
push
mov
mov
leave
data16
mov
add
sahf
in
orb
xor
push
loopne
out
jl
mov
mov
loop
sbb
roll
adc
arpl
add
pop
lret
xchg
mov
xlat
testl
mov
push
movsl
xor
jno
or
adc
lods
push
or
pushf
icebp
xor
xor
scas
mov
loopne
xor
xchg
sbb
xchg
pop
inc
mov
js
pop
cmp
cltd
pop
xchg
data16
mov
imul
out
jne
sub
or
mov
cmp
mov
popf
push
add
dec
mov
dec
sbb
push
adc
int3
xor
jecxz
lods
jbe
xchg
fimull
jbe
pop
sbb
push
dec
in
adcl
fildll
or
push
jg
push
pushf
mov
add
mov
push
or
imul
lds
negb
jle
imul
push
test
lcall
cmpsl
xorl
push
xchg
mov
mov
dec
jbe
lahf
xchg
and
sub
jg
push
enter
inc
mov
icebp
xorl
or
roll
int3
lcall
xchg
adcl
mov
shrl
mov
push
inc
adc
jecxz
or
rclb
dec
mov
nop
sub
out
sahf
inc
xchg
mov
jle
rep
add
sti
push
lcall
aad
cmp
push
cmp
inc
addr16
jne
sub
nop
pop
lods
add
out
push
jae
xor
mov
dec
fcomps
add
inc
std
push
loope
xchg
orps
aam
fwait
cld
xchg
xorl
sbb
enter
mov
jg
or
loope
nop
jo
xchg
xor
in
dec
pop
dec
call
xlat
or
lcall
mov
sbb
shrb
and
lcall
xorl
pop
xlat
lret
outsl
fs
jle
add
xlat
cmpsb
push
xchg
cld
insl
fidivl
jp
aam
aaa
jne
mov
xchg
mov
shr
mov
sbb
mov
adc
sahf
scas
imul
xchg
push
ss
rcll
sbb
or
insb
sub
fdiv
into
repz
push
int3
idivb
inc
hlt
adc
mov
push
push
iret
les
mov
add
inc
cs
mov
movsl
xor
addr16
dec
enter
add
inc
divb
mov
out
scas
ja
js
and
xchg
sahf
mov
mov
iret
jbe
mov
pop
rcrb
sbb
xlat
and
pop
dec
sub
das
xlat
mov
inc
sub
sarl
movl
pop
and
pop
out
pop
or
pop
insl
jg
inc
repz
pop
and
push
ret
and
fsubrs
jo
push
xorb
inc
arpl
inc
in
and
fiadds
dec
lahf
pop
cld
xor
pusha
pop
mov
mov
cmpsb
jns,pt
inc
ret
popf
xchg
lea
popl
popa
loopne
add
xor
out
pop
mov
out
mov
jns
jg
in
pop
lods
or
mov
pop
popw
cmpsb
inc
xchg
xchg
push
xchg
inc
rcrb
sahf
imul
push
movl
jmp
xorb
jo
cmc
mov
arpl
jo
sbb
sbb
fsubl
pop
test
xor
loopne
xchg
rcrb
popa
mov
jno
add
test
xchg
jo
xchg
imul
int
ud0
ret
filds
or
in
fisubrl
call
mov
cli
sarl
es
adc
xor
sbbl
inc
leave
ret
addr16
cmp
pushf
shll
fdivl
sub
std
leave
jge
js
aad
inc
mov
xchg
push
xchg
cmp
cmp
push
inc
shrb
movsl
imul
decb
mov
int3
aaa
out
fucomp
inc
ljmp
adc
push
loop
pop
pop
sbb
nop
and
orl
nop
rcl
in
aam
and
push
sbb
mov
testl
xchg
inc
test
lea
loopne
sbb
inc
mov
and
cmp
cmp
mov
cmp
mov
fimuls
dec
mov
in
add
adc
xlat
push
jae
fwait
dec
push
loopne
cltd
int
cmc
aas
jae
pusha
and
mov
xor
add
hlt
enter
jle
mov
dec
loope
sub
lcall
out
mov
and
mov
cmp
inc
lds
cmp
push
lods
fdivs
add
test
cmpsb
int
mov
dec
xchg
sti
rcll
cmp
xchg
adc
addb
test
cs
push
gs
push
out
std
ret
adc
cs
xor
lods
add
movsl
push
into
sahf
and
cltd
dec
lahf
sub
lret
pop
out
ret
int
add
inc
dec
loope
pop
sub
xlat
mov
pop
call
mov
enter
push
into
aad
mov
xchg
es
sbb
sbb
mov
xchg
cmp
cld
inc
mov
dec
enter
je
adc
dec
and
fisubrs
into
movsb
inc
ja
rcrl
bnd
or
mov
jle
cli
stos
lahf
loope
cmp
push
mov
mov
xor
imul
sbb
dec
mov
ret
pop
popa
sbb
repz
lock
add
mov
mov
ljmp
stos
lock
jb
js
jb
out
mov
int3
icebp
or
xor
ljmp
sub
shll
inc
hlt
dec
in
jbe
jge
mov
fcmove
xor
xchg
mov
sar
xor
xor
adc
fst
ja
push
in
jge
mov
shl
dec
clc
mov
or
bound
push
push
xor
pop
ffree
and
hlt
movsl
xor
icebp
lea
insb
in
inc
lahf
pop
loope
fmull
mov
fisubrs
fisttpll
test
inc
lods
mov
inc
lods
sbb
mov
jcxz
lret
mov
ss
xlat
pop
pop
adc
push
dec
fwait
int
sahf
stc
adc
ror
popa
sbb
dec
int
addr16
rorb
dec
in
inc
insl
xchg
pushf
sub
scas
lods
jp
pop
mov
xchg
mov
jmp
xor
dec
and
adc
sbb
lret
arpl
jne
adc
outsl
mov
xchg
or
pop
cwtl
ss
jl
pop
scas
add
out
xchg
mov
fmul
sbb
and
mov
int
mov
ret
bndstx
xchg
fwait
in
sbbl
push
cmc
lea
enter
pop
in
out
mov
adc
stc
push
jle
mov
jno
mov
inc
test
mov
add
sbb
cwtl
xor
or
stc
bound
jbe
lret
stos
fdivs
sbb
out
stc
push
sub
push
push
xchg
mov
cmp
dec
or
adc
adc
shll
pushf
dec
cmp
bound
sub
insb
fisubrs
std
inc
adc
pushf
popf
sub
fmul
shll
insl
outsb
pop
fs
clc
ja
mov
arpl
xchg
xor
stos
adc
add
inc
inc
and
dec
lods
punpckhbw
adc
cmp
xchg
lret
jne
mov
gs
jb
les
scas
sub
insb
jmp
mov
pop
subl
clc
sbb
jns
stos
sarl
test
sbb
pop
xlat
aam
dec
out
outsb
pop
dec
or
les
lods
inc
push
cmpsb
dec
mov
add
subl
cwtl
aad
push
adc
pop
and
cmpsb
pop
lds
mov
add
dec
adc
xchg
mov
and
xchg
adc
dec
je
pop
mov
shll
pop
das
lret
verr
xchg
pop
mov
jnp
mov
ficompl
cmpsl
jne
stc
jmp
mov
stos
cli
ds
mov
mov
lahf
adc
int
mov
cmp
or
icebp
adc
mov
adc
fxam
mov
aaa
cmpsb
xor
xchg
inc
add
mov
or
adc
mov
jmp
sbb
nop
ret
fsubl
jecxz
imul
push
into
fists
test
lods
mov
push
jno
or
adc
push
push
out
sub
into
notl
adc
std
subl
mov
or
sub
push
mov
cmp
adcl
and
adc
jbe
jge
add
pop
clc
dec
loope
data16
cmp
and
mov
mov
pop
lods
pop
mov
or
lock
repnz
shl
push
jge
mov
sahf
outsb
lahf
scas
insl
sub
adc
dec
or
cvtpi2ps
and
and
xlat
sub
mov
out
push
jecxz
mov
mov
lea
add
add
mov
gs
push
rcrb
push
out
mov
pop
cld
xlat
push
sbb
insl
rclb
pop
jnp
inc
test
mov
add
in
fsts
in
xchg
in
xor
jae
fwait
daa
ret
inc
xchg
and
sahf
adc
ret
add
cmp
mov
inc
cmp
popf
aas
mov
repnz
lcall
cmp
inc
jle
shlb
and
adc
cmp
popa
adc
mov
inc
adc
dec
jp
cmp
cmpsb
pop
and
jb
scas
cmpsb
pop
pop
in
out
push
cmp
shll
fisttps
out
out
adc
lcall
loopne
addl
rorl
mov
pop
cmp
push
addl
push
imul
popa
shll
dec
ror
mov
and
decl
scas
push
lds
push
dec
fsts
jge
mov
outsl
fcoml
test
das
pop
jmp
popf
das
xlat
xor
inc
mov
movsl
xchg
push
pop
addr16
cld
jg
dec
xchg
xchg
cmp
push
mov
adc
xchg
in
test
stos
mov
add
nop
rorl
test
pushf
dec
mov
cmp
pop
dec
and
inc
mov
addr16
and
rcll
repz
jle
cmp
in
stos
dec
jmp
lods
lret
push
arpl
inc
aad
dec
mov
push
test
stos
sub
sbb
xor
test
nop
mov
mov
idivb
xchg
xor
jge
xchg
notl
lahf
xor
outsb
mov
or
dec
ds
leave
push
cld
psubsw
jmp
cmpsl
test
inc
test
adc
mov
imul
in
lea
ja
idiv
icebp
std
lock
shlb
xchg
or
push
sbb
mov
shl
jle
in
inc
sbb
jge
sub
leave
mov
repnz
push
sub
xchg
xor
fucom
adc
sarl
jno
fisttpl
xor
and
push
mov
or
and
cmp
or
xchg
sbb
jmp
pop
dec
shrl
dec
insb
mov
test
mov
lds
xchg
xchg
jmp
rcr
mov
pop
negl
nop
pushf
fsubl
jbe
in
pop
xchg
dec
sahf
pop
sbb
jge
and
bound
sub
push
js
ror
aad
xor
mov
or
or
mov
test
arpl
cli
loopne
pusha
or
dec
mov
jl
pop
push
adc
sti
push
mov
pop
orb
inc
fwait
loopne
pop
stos
es
les
decb
adc
and
adcb
clc
xlat
in
aas
ret
pop
lea
cmp
xor
dec
mov
imul
es
push
mov
movsl
insb
dec
fisubrs
push
pop
fcomip
outsl
or
adc
pop
jp
or
jle
pop
and
cld
add
popa
adc
mov
pop
in
mov
mov
pop
mov
xchg
push
xor
xlat
jl
xchg
pop
dec
and
pop
lds
mov
adc
push
or
andb
cltd
ucomiss
lea
pop
push
pop
les
mov
cltd
test
add
or
pop
fwait
adc
in
jne
pop
cmpsl
fwait
clc
movsb
testl
jbe
pop
xor
add
cmpsb
test
int3
enter
pop
aaa
stos
rol
pop
enter
ds
arpl
xchg
jb
jg
xchg
add
adc
ja
stc
in
jo
sub
rclb
mov
inc
xchg
xor
and
jmp
xor
cli
fcoml
out
jae
pusha
sub
popl
enter
jl
jb
int
adc
adc
and
rcrb
pop
push
decb
cs
icebp
mov
cmp
pop
or
mov
test
mov
rclb
xor
les
xchg
mov
xor
cli
pop
pushf
aam
icebp
push
je
mov
mov
rolb
std
imull
mov
add
repz
adc
push
sub
shrl
mov
cmp
mov
aad
js
pushf
out
jle
pop
push
fists
mov
clc
aam
shll
sbb
xor
mov
push
pop
dec
cwtl
or
ret
cmpl
sbb
add
int3
lods
or
add
or
mov
aam
das
repnz
mov
xchg
pop
xchg
jl
push
xchg
je
dec
fs
dec
dec
jmp
shll
enter
rcll
mov
sar
dec
hlt
fwait
or
cs
push
inc
popf
or
fldt
lahf
sub
repz
loope
pop
pop
mov
add
cmc
mov
xchg
stc
lock
push
xor
push
adc
scas
xchg
insb
sbb
ja
pop
jmp
sub
sbb
fists
jecxz
xchg
inc
fcmove
scas
pushf
dec
add
and
js
mov
mov
inc
call
or
xchg
jle
int3
pop
push
scas
icebp
jb
adc
or
test
pop
cmp
hlt
sbb
lea
xor
mov
addr16
push
mov
push
rclb
jl
and
dec
cltd
mov
mov
fmuls
push
out
push
jmp
rcll
push
pop
xchg
sbb
mull
cmp
lcall
test
scas
rol
repz
push
in
cltd
xor
jne
ret
test
sub
push
and
xchg
addl
xor
jge
fbstp
imul
mov
sub
and
xchg
xor
jp
out
mov
repz
jg
adc
inc
mov
xor
test
clc
jle
sbb
in
outsl
loopne
fcmovbe
adc
enter
dec
jnp
or
out
lea
mov
daa
add
cmp
fimuls
or
cs
out
mov
sarb
movsl
stos
imul
scas
xchg
pushf
xchg
jecxz
add
xlat
push
pop
mov
lcall
je
mov
gs
add
lock
push
clc
fidivrs
adc
and
in
inc
fidivrl
xchg
cld
sbb
dec
dec
movsl
rcll
add
push
mov
popf
mov
cmp
add
rcrl
loope
pop
daa
bound
xchg
mov
mov
xor
ret
push
add
aaa
sbb
fidivl
jne
rorb
in
inc
sahf
jl
pop
icebp
pop
mov
mov
cli
fsts
cmp
jge
xor
fcoml
bound
push
push
sti
xacquire
mov
cmp
add
inc
jp,pn
jle
es
sub
pop
inc
add
dec
sarb
pop
sub
data16
jg
inc
pop
daa
mov
and
dec
sbb
mov
jno
in
shrb
jge
loopne
add
das
xchg
in
fldl
fs
aaa
movsb
shlb
fs
sub
cmp
lret
rcr
jne
into
or
enter
mov
subb
xchg
xchg
loopne
pusha
mov
xchg
xor
adc
push
imul
clc
jb
test
mov
xor
sti
inc
push
ds
mov
or
push
stc
test
push
imul
js
cmc
mov
xor
cmp
fnsave
ljmp
sub
mov
cmp
and
xchg
not
xor
call
sbbl
add
xor
add
xchg
rclb
sahf
out
xor
shll
out
inc
hlt
dec
cmpsb
in
scas
test
loopne
inc
mov
adc
rorb
data16
xchg
push
mov
out
adc
cltd
lret
movb
enter
jge
lods
mov
cmp
sahf
leave
jo
cmpsb
es
outsb
add
and
pop
in
addb
ret
into
sub
icebp
adc
or
out
xor
icebp
pop
dec
jecxz
int3
jl
inc
insl
int
lret
dec
push
cmpsb
push
xlat
inc
out
mov
xchg
mov
cmp
lcall
cmp
mov
mov
movsb
mov
and
xchg
shlb
mov
stos
cltd
inc
xchg
inc
cmp
ret
das
cltd
or
imul
test
mov
jns
test
int
insb
mov
movsb
in
pushf
cld
mov
mov
sahf
xchg
es
outsl
outsb
iret
push
add
pop
pushf
push
stc
pop
pop
popf
dec
aad
or
and
dec
pop
loopne
js
arpl
or
pusha
pop
scas
and
mov
xor
ljmp
stos
jmp
adc
divl
add
movsb
icebp
pop
dec
jecxz
movsb
sub
push
xor
into
adc
clc
hlt
pusha
ja
inc
mov
into
mov
mov
nop
stos
lds
insl
mov
jge
imul
mov
mov
sbb
push
xchg
or
enter
jmp
inc
push
cs
jo
inc
int
ja
pop
push
ret
xor
mov
int3
ja
lcall
fmuls
sub
sbb
push
mov
scas
sti
ljmp
pop
push
mov
leave
add
es
inc
aam
sub
mov
inc
call
dec
mov
in
sbb
rolb
sub
imul
cmp
mov
mov
xor
in
xchg
fwait
iret
movsb
cmp
repnz
jae
jge
lahf
adc
out
loope
push
push
fcoml
lods
es
es
int
popf
mov
fldenv
addl
mov
rol
xlat
out
aad
dec
xchg
mov
cli
aad
inc
xchg
inc
sti
dec
pop
in
inc
daa
and
inc
repz
int
rolb
repnz
dec
pop
int3
hlt
sbb
or
xor
and
xorl
fimull
or
scas
lret
adc
gs
pop
push
test
mov
xchg
or
aad
cld
leave
cmp
or
pop
aad
fisubs
mov
rcrb
push
fists
cmp
xchg
out
jmp
or
fadd
cmp
std
xchg
jg
adc
adc
loop
mov
das
and
adc
or
adc
ret
fistl
js
loopne
out
or
fstl
popa
push
dec
xlat
jns
dec
popa
dec
sbb
fisttpll
inc
jne
imul
mov
or
pop
cmp
lea
cmc
in
xchg
gs
nop
sbb
hlt
pop
ljmp
sub
leave
rcrb
xor
pop
adc
in
fwait
pop
sub
push
out
mov
pop
mov
test
xchg
adc
in
pop
loopne
pop
in
push
inc
pop
jno
nop
aad
and
bound
sub
push
sbb
out
cmp
repz
sti
ja
pop
fimuls
insb
mov
mov
cmp
ret
in
xor
pop
mov
addr16
sub
xor
testb
sbb
test
sub
rolb
out
es
inc
jmp
mov
xor
adc
pause
and
testl
dec
add
mov
mov
les
and
fwait
bound
iret
rcr
lret
or
mov
bound
mov
cmpsb
ja
add
mov
shrl
and
cwtl
imulb
daa
pop
fsub
es
mov
jno
sub
gs
lcall
pop
cs
jnp
incb
push
push
nop
pusha
adc
dec
shll
stos
mov
mov
pop
test
aas
es
mov
movsl
loop
fisttpll
jp
lock
xlat
fwait
shrl
inc
or
sbb
dec
out
out
mov
adcl
sti
fbstp
sarb
andl
fisttpll
sub
push
lcall
mov
or
fisubl
lds
xor
cmp
push
flds
gs
mov
scas
or
mov
ds
and
jbe
sub
push
rcrl
aad
pop
stc
cmpsl
aaa
int3
iret
xchg
and
mov
push
sbb
rcrb
fiaddl
fs
mov
pop
jp
sub
popa
push
fdivl
pop
fcomp
inc
mov
cmp
push
or
rorb
nop
mov
sub
clc
imul
add
ret
clc
sahf
lock
sbbb
sub
sahf
xchg
mov
sahf
and
mov
sbb
adc
pop
adc
push
push
xchg
into
adc
loopne
mov
popa
dec
pop
cmpsb
shlb
jb
insl
jne
int3
ds
mov
sbb
and
pop
cmp
adc
xor
adc
lcall
sbb
in
or
fiadds
ljmp
jle
or
or
jmp
loopne
cs
pop
fcomps
scas
repz
and
push
and
add
pop
and
iret
xlat
scas
mov
pop
loopne
bound
jnp
ret
xchg
loope
and
jae
xacquire
jo
mov
push
iret
xchg
cmp
fisttps
add
adc
jge
lret
aas
jb
aad
pop
fdivs
add
pop
mov
xchg
lahf
call
stos
repz
aam
jb
jl
mov
pop
fs
mov
sub
mov
xchg
mov
shll
push
popa
mov
xlat
jae
mov
fidivrs
dec
insb
insl
jo
mov
movsl
xchg
lahf
arpl
mov
jmp
xchg
cmp
mov
fcoms
mov
pop
mov
add
mov
ja
lds
xor
add
jge
push
pop
pop
pop
mov
lea
cmc
pop
lods
adc
xor
sbb
jbe
shlb
sub
lea
lock
stos
and
jg
out
mov
sub
add
adc
roll
mov
xchg
cmpsb
wbinvd
cmpsl
mov
adc
insb
arpl
shl
pushl
ficomps
inc
dec
popa
fmuls
inc
mov
sub
test
add
stos
inc
or
je
mov
flds
jmp
add
and
shl
imul
add
cmp
cmp
sbb
popa
xchg
xchg
scas
inc
orb
mov
aam
mov
jecxz
outsl
and
sahf
shlb
push
test
inc
aas
fildll
loop
dec
xchg
pusha
loopne
lcall
or
stc
jb
leave
repz
lock
mov
in
mov
xor
jbe
dec
xlat
int
mov
cmpl
push
fidivrs
movsl
sbb
jmp
pushf
mov
sti
fcoml
push
es
rolb
pop
lea
add
add
lods
mov
stc
stc
mov
dec
fistpl
int
insb
inc
jl
addb
inc
mov
sub
xlat
cmp
lcall
xchg
and
inc
aaa
outsb
sub
insb
dec
mov
xor
lret
mov
pop
mov
ficomps
lods
add
or
insl
push
in
hlt
push
leave
push
xlat
xorl
out
lock
repnz
xchg
lock
cmp
or
lret
addr16
xchg
scas
std
inc
addr16
ret
fadds
inc
push
arpl
imulb
add
aaa
ja
xchg
cwtl
cmpl
push
shll
mov
enter
pop
rcll
inc
and
pop
push
cmp
mov
test
jmp
cmpsb
or
jae
pop
fcomip
and
jl,pn
mov
lods
sbbb
or
and
push
pop
mov
sub
loop
ss
sub
test
jae
jl
bound
mov
and
mov
xor
into
imul
nop
mov
xor
add
cmc
sbb
inc
out
and
or
mov
and
scas
iret
test
mov
movsl
cmp
js
in
and
fs
rolb
sahf
xchg
sub
pop
xchg
and
ror
lahf
cmpsl
xor
push
dec
int3
sub
popa
clc
btr
scas
fnstenv
out
leave
jp
jmp
mov
add
mov
es
adc
in
roll
rcrb
sub
data16
repz
inc
sub
gs
mov
cmp
arpl
sub
clc
cmp
sbb
add
adc
and
mov
test
jmp
fisubrs
mov
enter
lock
test
sub
push
push
sti
insb
incb
xlat
and
shl
loopne
sbb
jle
push
mov
aad
in
push
rcrl
mov
out
shlb
mov
jae
dec
and
sbb
call
lea
sbb
pop
jmp
xchg
movb
cmpsb
and
ret
aaa
aaa
add
pop
xor
lret
xor
sbb
dec
imul
fsubrs
and
nop
mov
pop
and
inc
jmp
notb
les
add
pop
dec
pop
std
add
pop
sbb
sti
lds
cmp
push
out
sbb
pop
aad
out
xor
lret
jbe
mov
jb
or
jae
cmp
pop
and
pop
mov
movsl
enter
inc
inc
cmp
dec
clc
xor
pusha
fiaddl
mov
outsb
idivb
in
push
test
cwtl
pop
dec
and
push
cmpsb
jge
lock
out
push
into
sahf
mov
test
inc
add
and
xchg
cld
repz
fidivrs
cwtl
mov
lea
sbb
pop
mov
sub
inc
jmp
ret
shr
cmp
clc
cs
cmpsb
or
and
xchg
or
cmc
xor
and
add
test
inc
pop
sbb
mov
pusha
jl
or
or
mov
lock
dec
lea
lods
les
mov
mov
aad
iret
orl
xchg
das
adc
loop
dec
pop
sbb
push
popf
push
aas
lods
sti
out
xchg
pop
xchg
inc
and
rorb
or
cli
inc
xchg
adc
rclb
in
mov
call
dec
jge
push
sbb
test
fildl
xchg
sbb
ret
not
xor
ljmp
fwait
pop
iret
fsubs
pop
dec
cltd
xor
push
fmulp
fldenv
cmp
mov
sbb
fs
push
mov
jp
popf
and
nop
ljmp
mov
rcll
lods
mov
fstpl
cwtl
dec
and
scas
xlat
lds
daa
or
inc
rcll
xor
mul
lock
daa
push
mov
jns
js
sbb
jbe
in
push
movsl
cmp
and
mov
shlb
sub
dec
loopne
xchg
mov
mov
aad
jae
add
add
jbe
jl
sti
xor
xchg
mov
push
cli
imul
int3
mov
cli
xchg
add
test
mov
push
inc
sbb
pop
mov
mov
sbb
xchg
pop
push
mov
jae
rorb
push
scas
pop
jge
or
nop
rcr
lret
jo
mov
rol
rcll
lret
cltd
pop
addb
sub
and
jle
cmc
cmp
insl
pop
xchg
cmp
dec
data16
movsb
loopne
in
adc
and
adc
icebp
aam
aam
dec
xor
mov
dec
je
adc
push
fwait
loop
push
test
dec
mov
stos
pop
sbb
xor
xchg
inc
and
cmp
cmp
jae
aad
and
or
jns
cmp
dec
jns
xchg
ret
pusha
jno
mov
scas
lret
pop
pop
stc
adc
pusha
repz
and
mov
adc
push
addr16
jae
or
jmp
add
out
push
fimull
sahf
sbb
and
jb
add
std
dec
cmp
test
mov
rorb
mov
dec
xchg
adc
leave
xchg
divl
stos
xchg
and
or
fcmove
add
inc
sar
sub
aas
and
mov
out
mov
ret
xor
clc
call
add
idiv
int
mov
out
mov
jecxz
mov
out
cmp
and
and
imull
mov
imul
jle
xchg
pop
xor
adc
cmp
cwtl
inc
popl
popa
sbb
mov
sub
push
testb
inc
lahf
test
imul
idivb
bnd
pop
pop
imul
and
sti
push
inc
das
and
sbb
jmp
movsl
mov
xchg
hlt
jno
decl
leave
push
out
or
adc
inc
xchg
ss
in
in
fadds
cmc
pop
ret
inc
dec
inc
shrl
outsb
ret
lea
test
mov
pop
imul
test
inc
sbb
cmp
cli
push
mov
rol
out
cs
mov
fcmovnu
test
mov
add
mov
sub
dec
cmpsb
pop
mov
push
in
lahf
cmpsb
inc
mov
scas
repz
inc
sbb
dec
pop
sbb
pop
mov
es
cmp
cltd
or
test
rcll
and
cld
dec
orl
push
out
xchg
outsb
adc
sub
test
cs
movsl
cmp
aaa
add
or
adc
sti
add
fwait
and
and
or
dec
lret
addr16
mov
pop
cs
inc
subl
adc
push
lds
popf
mov
dec
mov
pop
cmp
jl
out
jns
and
rorl
mov
mov
pop
out
xchg
cmc
mov
pusha
mov
sbb
adc
mov
xor
pop
mov
imul
into
adc
add
dec
pop
fsubl
cmp
inc
loope
dec
push
push
scas
pop
movsl
les
orb
je
mov
outsb
pop
xor
or
mov
pop
or
movsb
add
jbe
negl
cmp
mov
outsl
das
dec
xor
dec
mov
jmp
push
cs
aam
push
outsl
nop
sbb
in
and
dec
jl
cmpsb
pop
adc
jg
adc
subl
jb
ret
mov
add
jbe
icebp
mov
adc
fstps
sbb
mov
cmp
in
add
mov
out
or
jecxz
mov
inc
aas
or
lret
sub
xchg
stos
cmp
and
aad
jns
jecxz
maskmovq
idivl
sbb
lahf
sbb
mov
rorb
testb
xor
adc
push
into
insl
push
rcll
addr16
xchg
fs
sar
pop
xchg
jno
inc
in
pop
repz
push
mov
sub
sarb
dec
mov
ficoms
or
add
in
jns
fsub
out
inc
sbb
and
mov
enter
adc
pop
adc
daa
xor
sti
xchg
push
cld
les
js
cli
cmpsb
lea
loope
dec
sub
fwait
cmpsl
pop
outsl
call
sbb
sarl
icebp
pop
rorl
inc
mov
out
fcmove
rolb
out
popa
movl
mov
in
inc
cmp
sarl
daa
std
icebp
in
cltd
xchg
adc
xorb
lock
cwtl
test
pop
insb
aaa
mov
pushf
dec
pop
mov
push
subl
out
daa
std
add
lret
dec
repz
pop
dec
or
les
inc
dec
shll
cld
inc
cmp
mov
stos
push
fdivrs
rorb
jo
mov
dec
insl
jl
arpl
lret
cs
bound
outsb
fwait
push
sbb
adcb
fcoms
daa
xchg
sbb
dec
add
pop
jnp
aaa
xchg
cmpsb
movsb
pop
addr16
and
or
xor
mov
push
aas
mov
push
adc
jge
inc
inc
dec
mov
stc
ss
mov
cmpsb
xor
pop
adc
pop
and
pop
int
js
test
or
mov
pushf
inc
pop
add
xlat
add
scas
aam
pop
shll
mov
sahf
xor
jp
call
push
push
out
pop
aaa
pop
pop
mov
les
dec
sub
loope
cmp
push
cvtdq2ps
push
push
push
addr16
mov
dec
test
xchg
sub
jle
jbe
leave
leave
arpl
cs
test
mov
mov
pop
push
inc
cmp
mov
sti
or
inc
sub
popf
push
out
movsb
dec
pop
fcoms
movl
jo
test
push
cltd
ds
aad
and
inc
jb
in
add
clc
push
sub
sahf
push
sti
sub
jmp
xorl
jp
andl
fstpl
cmc
inc
or
cli
pop
dec
aad
add
andl
imul
mov
pop
sub
lods
movsb
dec
jae
insl
jle
ljmp
lock
push
addb
xchg
cmp
add
cld
dec
mov
pop
inc
xchg
adc
pop
imul
push
add
pop
cmp
jg
jl
jmp
aad
loop
jbe
inc
inc
stc
mov
or
pop
into
push
icebp
aaa
lcall
bound
movsl
nop
inc
fs
mov
fimull
das
mov
lret
dec
js
in
cmpsl
jbe
cmp
push
insb
sub
and
cmp
add
ss
jl
test
cmp
and
or
xorl
jg
mov
out
testb
and
pop
dec
imul
xor
aad
inc
popa
mov
lahf
and
mov
addr16
mov
roll
iret
mov
loope
xchg
lods
out
arpl
in
loope
outsl
push
loope
out
xor
xor
lcall
xor
vpblendmb
cmc
and
sub
data16
jecxz
and
and
pop
lret
dec
repz
pop
cld
inc
mov
cli
inc
mov
stc
aaa
or
in
pop
mov
xchg
mov
push
xor
add
or
mov
add
divl
out
sub
pop
stos
dec
jmp
mov
inc
loope
jne
les
inc
cltd
add
cltd
pop
lods
jge
jge
outsl
dec
cmpb
dec
cmp
push
out
ret
or
lods
mov
and
popa
stos
mov
int
inc
scas
ds
pop
lret
xor
aaa
or
mov
lea
leave
mov
ljmp
jp
ja
mov
nop
pop
adc
cs
add
cld
loop
xchg
scas
sbb
inc
jge
addr16
aaa
add
cmp
in
iret
xor
mov
in
dec
test
sahf
mov
inc
mov
mov
gs
push
mov
mov
mov
dec
xor
mov
jns
lcall
cmp
sahf
xor
in
xor
mov
aas
lahf
scas
mov
xchg
sub
movsl
xor
jae
mov
push
jns
fs
addr16
fisttpll
pop
or
in
scas
test
cmp
psraw
or
lret
and
or
adc
cmp
adc
fs
das
and
fdivr
adc
sub
xchg
dec
movsb
sub
cmpsb
jecxz
fbstp
add
out
popf
test
daa
adc
fisttpl
pushw
scas
xchg
inc
pmulhw
sahf
les
mov
movnti
mov
xor
rep
scas
jno
mov
sub
fucomi
aad
cmp
adc
mov
mov
or
jns
loopne
xchg
movsb
test
sbb
cmp
out
out
pop
jecxz
leave
sbb
divl
xor
and
dec
push
cmp
lods
sbb
jo
aam
jle
sub
out
insl
cld
loope
getsec
aad
pop
repz
int
in
dec
repz
or
adc
push
ret
addl
repz
lahf
ja
sub
stos
mov
loopne
pushf
sbb
sub
lret
in
dec
pop
cwtl
add
mov
xchg
call
rclb
cmpsb
ss
pop
fnstsw
adc
rorb
push
push
sahf
push
dec
pop
andl
cmc
inc
and
push
into
out
stos
ret
inc
and
bound
cmp
ds
xchg
cli
aad
xor
adc
lock
fistl
test
rcrb
stos
mov
nop
out
xlat
repz
ljmp
add
mov
fwait
outsl
and
add
ss
mov
stc
clc
mov
lret
push
cld
push
fbstp
and
mov
mov
mov
jns
cld
shr
dec
stc
push
adc
andb
cs
js
mov
aam
cmp
cmc
mov
cli
adc
sub
sub
sbb
icebp
out
test
ret
popf
adc
iret
xlat
and
sbb
fidivrs
das
lds
dec
dec
pop
dec
jo
jmp
xchg
test
sbb
test
mov
outsb
or
cmpsb
pop
pop
add
mov
xchg
loopne
insb
inc
test
pop
das
mov
jne
lods
or
add
sbbl
push
sarb
xchg
mov
adc
sub
pop
stos
aam
clc
push
jecxz
js
fldenv
mov
stc
loopne
xor
in
inc
imul
sbb
fisttpll
stc
sub
into
pop
mov
or
jns
jno
outsb
mov
pop
in
cmp
stos
test
nop
cltd
out
mov
mov
in
aam
icebp
sub
xor
daa
cmp
jle
xor
xchg
js
sbb
sbb
sbb
lock
in
int3
adc
sti
lods
int3
xchg
or
std
push
xor
es
lock
jae
inc
cmpb
mov
stos
xchg
lret
les
mov
inc
into
js
mov
imull
add
adc
js
push
xchg
iret
enter
jne
orl
imul
fistl
enter
jno
cmpl
lds
insl
dec
ficomps
pop
jbe
iret
xor
pop
mov
cmp
cltd
pop
enter
mov
fs
fstpt
jecxz
cmpsb
add
pop
leave
ret
orl
or
cmp
lahf
stos
xor
and
xchg
mov
fbld
loop
into
xlat
pop
dec
fildl
hlt
ret
cmp
or
leave
jp
jb
enter
mov
cmp
sbb
fdivrs
rclb
iret
icebp
test
icebp
aad
lahf
fdivl
into
xchg
xchg
add
push
xor
cltd
mov
xor
test
jno
rcr
cmc
dec
xchg
sti
out
jns
sahf
mov
sahf
in
sbb
rcrb
sbb
insl
data16
rcrb
xor
adc
mov
loope
divl
add
call
sti
out
pop
adc
mov
ja
out
roll
add
lahf
into
scas
mov
inc
xchg
rcl
idivb
mov
adc
outsb
es
std
mov
mov
cmova
cmp
and
dec
add
jb
sahf
sbb
pop
pop
test
shl
push
push
dec
lahf
ljmp
and
cmp
lods
lea
and
inc
movb
mov
or
mov
lea
jb
adc
push
cmp
aad
or
fcmovne
dec
sbb
inc
cmp
sti
or
mov
les
jns
pop
sahf
aas
mov
imul
ljmp
sbb
ret
mov
mov
inc
rolb
xor
xchg
fmul
lahf
sbb
push
cmp
call
fwait
sub
gs
cmp
test
js
fwait
mov
enter
and
dec
xchg
sbb
mov
aas
sub
adc
in
jns
inc
std
jnp
push
adc
aad
inc
lret
jmp
sbb
sti
dec
cmc
incl
ds
mov
jae
inc
jg
int
push
pushf
sub
inc
mov
and
outsl
push
aam
out
dec
dec
mov
mov
mov
pop
pop
inc
push
fistps
test
push
dec
pusha
or
mov
push
jb
mov
test
jnp
mov
xchg
imul
nop
pop
or
aad
xor
ret
jnp
hlt
mov
cmpsl
jo
in
mov
dec
inc
fs
sbbl
or
xor
inc
fcoml
das
inc
jge
xorb
in
mov
lea
out
insb
mov
or
mulps
xor
and
or
cli
sub
jp
jnp
fists
ret
mov
les
xchg
pop
pop
sbb
dec
cmpsb
je
inc
gs
sbb
rcrb
sub
mov
das
test
out
push
lret
inc
or
fsubs
cmp
xor
mov
ret
mov
test
icebp
lret
outsl
mov
pop
jmp
daa
ds
dec
adc
popf
sahf
xor
popf
xor
popl
lret
test
fidivs
outsb
ds
and
nop
inc
mov
jno
cld
xor
popf
dec
mov
and
insl
scas
mov
lcall
enter
jp
or
xchg
test
sub
mov
mov
mov
mov
call
dec
jecxz
jbe
lret
in
out
jmp
cmpb
ret
mov
dec
ljmp
sub
inc
jle
int3
js
mov
xor
pop
add
jle
sub
imul
movsb
shrl
push
lods
and
jno
jae
leave
cmp
mov
pusha
cmpsl
outsb
cmpsb
aam
test
sbb
sbb
cmp
or
imul
cmp
inc
loopne
mov
mov
js
push
mov
dec
lods
ret
mov
movsb
lock
push
or
shlb
mov
push
or
mov
movsl
and
jno
pop
sub
in
pop
sub
cwtl
int
push
pop
adc
xor
mov
out
outsb
fwait
insl
pop
add
sbb
movl
add
jmp
out
add
sub
jl
inc
mov
cmovno
xchg
mov
cmp
iret
fdivrl
and
xchg
ret
outsb
cmp
add
and
es
imul
inc
jg
mov
sub
add
mov
cmp
push
popa
and
push
push
sub
call
adc
push
push
cli
clc
int3
sbb
test
sub
dec
lock
xor
ret
jp
daa
loopne
jmp
jnp
adc
and
xchg
inc
sub
mov
xchg
dec
inc
adc
jge
mov
outsb
add
or
jmp
lds
lcall
bnd
mov
in
xor
dec
push
mov
mov
movsl
xor
mov
and
mov
in
pop
loopne
mov
pop
pusha
rorb
xlat
in
push
inc
int3
sub
scas
enter
xchg
sbb
mov
sarb
xor
movsb
add
pop
fistl
js
lods
jne
gs
cmp
push
cmp
push
ljmp
fwait
sbb
sbb
inc
dec
fwait
and
push
dec
dec
and
and
jge
xchg
decb
jne
mov
pop
test
push
xchg
ja
scas
mov
loopne
push
loop
and
push
mov
aad
imulb
aas
popf
and
lret
and
test
pop
out
out
movsb
cmpsb
hlt
push
cmp
pop
jle
lock
adc
in
leave
imul
xchg
mov
cmp
push
adc
aad
sti
mov
mov
out
in
jp
out
imul
jp
repnz
aaa
dec
int3
jbe
int3
and
jle
adc
fmul
xrelease
or
xorb
dec
jae
out
cmp
int
loop
sbb
inc
xor
enter
test
stos
cmc
int3
das
div
test
cmpsl
rorb
enter
mov
ret
cli
cmp
jnp
inc
fstps
and
je
imul
pop
stc
add
inc
dec
call
jecxz
mov
jno
rcrb
xchg
je
pop
out
pop
push
adc
int
pop
ljmp
pop
enter
cltd
or
aad
dec
or
nop
jno
push
sbb
sub
xor
js
ror
mov
push
cmp
mov
push
push
adc
test
xchg
or
dec
pop
and
adc
sbb
add
dec
pop
adc
shrb
dec
jle
mov
sahf
push
and
xlat
adc
jo
dec
bound
leave
mov
adc
lock
adc
sbb
mov
jge
xlat
out
addr16
outsb
mov
xor
das
xor
test
mov
jns
ljmp
cmp
and
jmp
jae
jmp
mov
sub
inc
mov
data16
sbb
jge
int3
push
xor
add
xorl
adc
jnp
mov
mov
addl
daa
cmpsl
cmpb
pop
push
xchg
push
push
loope
sbb
cmpsl
sbb
xorl
jmp
mov
xor
out
push
cmp
jmp
adc
sti
mov
pop
dec
mov
ljmp
stos
mov
ss
push
cmp
push
xor
scas
daa
sub
mov
je
sti
jnp
ror
pusha
mov
push
out
cmp
or
mov
cmp
fdivrs
sbb
push
mov
push
xchg
sbb
jns
xor
repnz
cwtl
std
test
adc
inc
cs
stos
push
rorb
push
dec
scas
xchg
addr16
insb
flds
xchg
mov
add
pop
push
aas
movsl
mov
nop
xchg
andl
jbe
stos
cwtl
xor
shlb
sbb
jae
test
lret
dec
shlb
jle
call
mov
mov
inc
out
sub
lret
pop
push
fdivr
test
inc
jo
pop
scas
pop
lahf
sbb
and
scas
js
pop
and
insl
in
cltd
notl
shll
arpl
sti
mov
dec
in
dec
sbb
fimuls
sti
stc
lcall
ror
cli
jns
xor
gs
adc
add
insl
ja
xor
pop
mov
dec
addb
xlat
add
sub
sbb
mov
rolb
push
loop
pop
mov
fwait
in
mov
loop
adc
lock
stos
adc
inc
sub
mov
jns
in
scas
xchg
movsb
mov
flds
rcl
enter
mov
pop
inc
add
lcall
pop
and
in
pop
xlat
inc
int
add
jo
mov
aaa
sub
clc
dec
js
icebp
xchg
pushf
cmp
sub
aad
pop
jns
mov
sub
adc
dec
sahf
sub
loope
jno
xchg
inc
pop
adc
subl
push
clc
sti
aad
adc
mov
stc
mov
das
dec
dec
adc
incb
mov
mov
int
mov
mov
cmpl
hlt
fidivs
mov
xchg
daa
and
push
mov
shlb
sub
cmp
lods
or
jae
push
outsl
jle
adc
leave
in
and
mov
mov
xchg
nop
pop
jg
adc
fwait
xchg
sub
out
sub
pushf
fldl
addl
xchg
xor
pop
sbb
add
or
mov
in
add
dec
jae
push
jae
xor
je
fildl
cli
adc
shlb
in
adc
leave
pusha
pop
adc
es
cmpl
cld
pop
xor
sarb
cmc
pusha
lds
sarb
enter
fwait
dec
std
cs
push
or
dec
out
mov
cld
push
mov
or
es
fsubrs
mov
add
repz
mov
ret
push
hlt
ja
dec
fisubl
xchg
dec
sub
adc
in
lock
test
push
shl
cltd
push
mov
imul
pop
mov
xor
pushf
cmp
aad
cmp
rcrb
adc
pop
enter
push
cmp
push
scas
ss
in
out
aad
shlb
sub
mov
push
adc
push
mov
movsb
mov
xor
adc
xchg
mov
push
shlb
push
loop
dec
jns,pt
dec
jbe
jecxz
mov
fisttps
call
loopne
popa
cmp
and
mov
inc
and
fldt
xchg
ja
mov
and
push
ljmp
jnp
adcb
mov
stos
out
movb
push
cld
aam
fs
jp
jb
push
inc
dec
data16
mov
push
xlat
dec
mov
push
push
ljmp
xchg
push
pop
outsb
out
fisubl
ss
pop
das
jns
scas
mov
fstp
dec
xor
adc
xchg
xchg
sub
cmp
xchg
sbb
jl
test
push
nop
push
pop
gs
and
lret
shlb
sub
mov
cli
cmp
xor
inc
add
add
adc
lahf
mov
add
pop
xor
push
loope
lea
mov
cmp
fmulp
into
mov
popf
or
arpl
sub
loop
cmp
lods
ret
jmp
fcoml
dec
adc
arpl
std
sub
addl
xchg
bound
fstl
call
dec
lret
jne
bound
dec
sub
sbb
daa
cltd
js
push
sub
fld
pop
pop
adc
mov
das
sti
or
xor
xor
sbb
lret
out
inc
inc
jnp
adc
fdivrl
lret
jns
jge
int3
push
loopne
push
jbe
sbb
pop
sbb
jbe
jo
pop
dec
mov
or
mov
lock
cmpsl
cmp
jnp
inc
das
mov
inc
pushl
push
jmp
mov
int
js
dec
mov
data16
jnp
cwtl
mulb
mov
xor
cltd
insb
shrb
sti
clc
mov
inc
dec
shr
jne
dec
inc
hlt
bound
mov
dec
pusha
jbe
or
or
mov
dec
cmpl
inc
insb
lcall
cmp
nop
mov
and
mov
cmc
ljmp
jmp
jp
push
jp
dec
mov
pushf
adc
xor
mov
cwtl
fcompl
shlb
mov
mov
xor
inc
dec
push
and
mov
pop
je
push
dec
testl
jle
ret
dec
pop
imul
fiadds
pushf
xchg
push
and
sbb
cmp
popa
mov
sbb
sbb
pop
mov
ret
aam
int3
mov
or
xorl
mov
jno
clc
clc
jbe
or
lret
xor
jnp
std
cmp
pmaxub
sub
mov
adc
adc
mov
inc
sbb
imul
in
repz
mov
cmpsl
dec
vpmaxub
add
xchg
jl
lahf
test
or
inc
mov
mov
rcll
cld
repz
jecxz
sarl
pop
prefetch
xlat
jp
clc
daa
outsl
and
pop
imul
jno
sti
jo
imul
ret
sbb
or
cli
mov
cmpl
or
push
test
mov
add
lret
int3
inc
les
dec
xorb
test
arpl
xchg
jecxz
cmp
mov
aad
daa
loope
push
add
das
mov
lcall
push
xchg
pop
imul
and
lea
repnz
outsb
or
or
inc
xchg
inc
sub
hlt
cmp
cmp
cltd
jnp
push
arpl
push
jne
mov
xlat
sahf
add
cmp
scas
inc
and
mov
add
daa
cmp
adc
ljmp
mov
lock
pop
mov
neg
jbe
xor
and
sbb
sbb
ja
push
cltd
movsl
call
fmulp
or
and
xchg
push
mov
mov
adc
mov
add
sbb
cmp
jae
lret
out
and
adc
mov
jle
pop
or
inc
pushl
cmp
ret
nop
or
fxch
push
mov
mov
sub
ret
mov
js
adc
in
jmp
push
jmp
fcomps
mov
adc
inc
dec
pop
addr16
push
push
mov
sbb
mov
and
scas
outsb
jb
or
cmp
adc
xor
push
nop
dec
movsl
mov
fldl
lods
sarl
jp
push
mov
add
jle
pop
aad
imul
sub
xorb
outsb
subb
add
dec
xchg
int3
pop
mov
je
aas
cltd
test
rorl
or
xchg
and
repz
add
mov
test
mov
arpl
xchg
cmc
mov
xlat
adcl
in
repnz
xchg
fmuls
scas
loope
adc
pusha
cs
push
dec
mov
dec
loopne
inc
mov
clc
cmc
xchg
popf
pop
mov
or
fwait
cmp
nop
dec
adc
into
fisttpll
addb
lods
or
icebp
pop
and
sbb
push
loop
std
cmp
push
movsb
pusha
stos
inc
mov
adc
push
aas
lea
add
mov
cmp
mov
hlt
scas
enter
imul
push
addb
cmpsl
jns
jo
daa
or
out
sub
push
sub
stc
dec
aam
cmpsb
xor
dec
psubw
ret
fisubrs
pop
mov
enter
insl
fdivp
xchg
cmpsb
ret
mov
and
inc
mov
jmp
push
cli
push
adc
cmpl
fimuls
adc
es
stc
push
add
mov
dec
icebp
pop
sbb
adc
scas
gs
rcrb
cmp
xchg
sahf
gs
rclb
mov
sahf
outsb
stos
adc
xor
push
pop
cmp
sti
pushf
nop
sbb
push
mov
cmp
jecxz
mov
in
aaa
loope
xchg
pop
out
gs
adc
sarl
imul
pop
gs
adc
xchg
add
add
shll
jno
inc
xor
aaa
test
push
ljmp
mov
call
repz
or
cs
mull
push
and
stc
rclb
add
pop
dec
mov
leave
dec
jo
jo
ret
lods
fidivs
lcall
jbe
or
or
mov
in
jl
scas
es
scas
sub
repz
push
sub
gs
insb
loop
int
cli
out
and
outsl
jo
int
jle
js
data16
pop
xchg
cmpsl
cmp
fisubrs
mov
aaa
flds
cwtl
add
outsl
adc
sub
aas
xlat
cwtl
test
cmp
into
cmpsb
leave
pop
or
xchg
jle
xor
je
and
jle
inc
dec
sbb
in
mov
loope
bound
out
dec
fs
les
setns
in
xorl
mov
jmp
xchg
sub
pop
xor
aam
cmp
xchg
jno
clc
ret
lock
pushf
testl
cmp
leave
insb
pcmpeqd
cltd
sbb
xor
and
ds
dec
mov
push
cwtl
gs
xor
jle
push
in
inc
jp
jnp
repz
cmp
mov
mov
mov
adc
mov
arpl
sbb
pusha
insl
stos
loopne
lods
adc
idivl
xchg
xchg
lds
pusha
jmp
jbe
ljmp
out
mov
mov
jecxz
outsb
sbb
mov
sbbl
out
cmp
cmovle
ss
iret
mov
lds
dec
cltd
sbb
push
cmc
iret
enter
call
fistl
out
cs
add
and
jg
jno
inc
fwait
test
scas
adcl
push
mov
xor
adc
xlat
rcl
inc
and
test
idivb
and
cld
ja
out
sub
pop
sbb
mov
xchg
push
jp
stc
cmc
leave
or
lods
jmp
jg
or
push
adc
jnp
dec
enter
sub
and
inc
je
imul
mov
dec
adc
push
lret
lods
maxps
or
or
inc
pusha
ret
or
inc
mov
push
fs
ds
inc
sub
cmc
mov
adc
insl
jp
test
in
divb
push
rcrl
adc
in
jb
inc
xchg
inc
je
pop
fldenv
out
push
clc
adc
pop
inc
jbe
fs
js
arpl
push
jbe
mov
inc
lods
nop
mov
push
add
xchg
bnd
adc
fs
cmp
xor
mov
push
repz
mov
adc
mov
mov
lahf
ds
adc
stos
mov
sbb
lret
out
push
pop
jns
pop
xor
insb
adc
lret
lcall
inc
imul
sub
dec
jecxz
adc
mov
or
imul
test
arpl
ja
and
push
lcall
mov
loopne
jne
or
dec
jmp
push
sbb
pop
mov
in
dec
leave
fcom
lock
aad
mov
lds
ja
mov
mov
mov
xchg
and
push
jae
mov
xchg
out
loopne
pop
nopl
mov
sub
jl
pusha
mov
dec
pop
dec
fistpll
mov
cld
jle
jnp
nop
jl
xchg
pusha
dec
mov
jecxz
jg
cmp
fs
popa
loop
gs
popa
rcrl
mov
adc
iret
inc
aad
and
call
pushf
mov
shr
test
pop
adc
ret
rcll
pop
dec
sbb
or
lea
and
jmp
push
lahf
fildll
mov
push
sbb
daa
push
addb
cmp
addr16
jbe
out
jb
dec
insb
dec
clc
jae
push
xchg
xchg
fidivl
fnstcw
iret
xchg
mov
int
sti
pop
push
nop
jae
sti
and
push
push
mov
and
mov
movl
jb
test
jl
fs
xchg
push
lret
int
cmc
aam
imul
gs
mov
jecxz
repz
sub
das
or
jae
js
and
outsb
mov
jno
dec
roll
sbbb
jl
inc
pop
mov
popa
and
decl
xor
cmpsl
and
dec
mov
les
movsl
cmp
ljmp
mov
add
shlb
jns
mov
xlat
mov
push
push
or
lcall
hlt
jno
sbb
daa
mov
or
xor
xchg
inc
loope
xlat
dec
arpl
xchg
jmp
pop
lcall
fs
inc
paddusw
lcall
negl
add
fs
dec
xor
stos
cmp
sub
imul
mov
shll
jle
fisttps
repnz
fistps
ret
cmp
dec
cmpsl
popf
cmp
mov
xor
outsl
sub
jge
mov
mov
mov
push
sbb
sbb
mov
jp
lock
lcall
mov
jle
fstl
test
stos
inc
pop
test
jno
adc
add
and
aad
inc
jns
fldl
pop
and
xor
pop
les
pushf
push
jne
mov
xor
jb
adc
sbb
jo
sahf
int
daa
dec
inc
das
jo
in
enter
stos
add
nop
push
jns
jae
dec
xchg
loope
enter
push
jecxz
in
ds
push
rcl
or
int
mov
mov
iret
xchg
and
rclb
jp
pop
loope
ja
jle
lods
mov
call
xchg
pop
mov
sbb
dec
sahf
sub
xor
rcll
mov
stos
mov
add
stos
and
fmul
fwait
pop
and
or
lret
pslld
orb
and
jmp
push
sbb
cmp
fsubrs
add
sub
sbb
jle
bound
dec
add
ljmp
xchg
xchg
push
push
fidivrl
cmp
aad
ds
out
jmp
pop
lcall
jge
and
xchg
mov
mov
pop
shl
hlt
test
shrl
inc
push
xchg
jns
xor
mov
push
mov
mov
inc
shlb
mov
test
scas
cs
lret
push
xor
dec
inc
dec
add
int3
roll
xchg
scas
mov
inc
add
fidivs
push
add
pop
xchg
mov
test
jae
stos
mov
push
ret
pop
scas
inc
in
subb
jl
pop
inc
jno
fbstp
mov
push
arpl
push
mov
icebp
test
cwtl
push
iret
xorb
mov
xchg
fldz
jbe
or
jle
cwtl
fwait
sub
push
cmp
movsl
fwait
and
xchg
cmp
pop
xchg
mov
mov
subb
inc
push
xchg
inc
mov
andb
sbb
cwtl
sub
sub
jmp
lret
mov
rcll
pop
fistpll
fmuls
addb
fistpl
cmp
fwait
lea
loopne
popf
pop
jne
sub
stc
or
icebp
jbe
js,pn
aad
shrb
cmp
cmp
fsubrl
xchg
sbb
out
push
mov
loopne
xchg
filds
jl
jns
shlb
rclb
inc
insl
mov
test
sbb
mov
aaa
dec
aam
and
loopne
pop
push
xor
jmp
adc
adc
insb
xchg
add
pop
fdivrp
add
shlb
push
adc
std
cli
mov
dec
call
push
ss
sub
inc
pop
scas
adc
repz
outsb
cltd
inc
push
call
ret
cli
add
inc
sub
mov
push
in
addr16
mov
mov
inc
jmp
loope
jp
mov
orb
cmp
cld
push
pop
cli
imul
dec
pop
loopne
cmpsl
repnz
mov
xor
adc
push
lds
fstps
mov
aaa
inc
fsubrl
out
pop
pusha
push
push
lea
mov
dec
out
add
test
insb
xor
aas
cld
sbb
push
leave
jl
and
std
inc
xor
imul
insb
or
push
shl
mov
inc
cmp
push
adc
jne
popl
mov
push
popf
call
or
stc
js
aam
hlt
popa
ret
xlat
push
pop
and
idivb
lods
push
push
cmp
adc
fs
mov
das
mov
or
idivb
test
push
inc
pop
dec
jb
cmp
inc
push
out
mov
out
jmp
pop
mov
pushf
aaa
lds
cmc
mov
adc
in
xchg
cmp
push
push
and
fwait
lret
lods
ss
stos
and
out
inc
adc
dec
xor
dec
push
add
inc
mov
inc
test
push
scas
xor
repnz
sub
lret
dec
repnz
iret
push
adc
es
cli
push
pop
cltd
outsb
or
inc
mov
lahf
pop
and
add
cmp
in
xor
jp
sbb
pusha
adc
sub
mov
fs
mov
cmp
adc
dec
pop
cmp
pop
pushf
sub
jo
lock
bound
fstpl
push
gs
push
pop
push
dec
rcrb
arpl
gs
dec
mov
imul
xchg
cmpb
test
lahf
dec
jl
cs
jg
mov
ss
shl
pusha
out
xor
or
or
jle
pop
mov
roll
xchg
aam
mov
sub
in
mov
call
dec
jno
cli
xor
ja
fnsave
fs
dec
orb
dec
je
lret
jmp
xlat
fidivrl
mov
stc
xchg
nop
jae
inc
xor
pop
in
sbbb
lret
adc
inc
les
adc
jg
cmp
lret
xchg
jb
decb
mov
sub
fistl
dec
mov
push
cmp
mov
rcl
pop
insl
xor
pop
sub
pop
pop
repz
iret
jmp
std
sahf
addr16
and
cmc
dec
inc
les
push
es
jnp
and
cmp
mov
xor
jge
adc
scas
mov
arpl
inc
jnp
stos
jbe
push
push
cmp
or
imul
popl
test
ss
jg
rorl
scas
sbb
mov
xchg
dec
mov
jnp
pop
sbb
sti
or
mov
xor
cpuid
clc
mov
hlt
cmpsb
push
adc
fsubr
sub
dec
cli
jbe
cmpsb
sahf
jne
add
xchg
push
sbb
adc
sub
iret
in
dec
in
inc
sahf
push
or
add
mov
incl
movsb
sub
xchg
je
mov
fimuls
mov
movb
xchg
dec
sub
mov
call
repz
push
sub
mov
mov
inc
out
mov
xorl
imul
jge
fldlg2
lret
pop
mov
pusha
sbb
jns
and
ds
pusha
push
in
or
addr16
and
dec
int3
lret
fisubrl
pop
mov
jge
sbb
out
and
cmpb
push
xchg
xchg
jl,pt
nop
cmc
call
push
adc
and
jge
mov
out
ret
imul
inc
xor
loopne
lret
add
adc
xor
jae
pop
aam
and
xor
mov
mov
inc
mov
xchg
mov
push
sbbl
sbb
push
xor
push
push
lods
out
and
fcmovbe
cmp
and
scas
mov
inc
jae
fdivrs
fimull
out
push
int
jmp
ret
out
lods
out
and
lods
jne
pop
sbb
nop
jl
loope
ja
lds
loop
leave
into
and
sbb
out
lea
sarb
jmp
stos
sahf
sbb
andl
icebp
mov
jecxz
xchg
stos
push
push
add
popa
dec
xchg
pop
loop
jg
push
pop
data16
mov
jnp
sub
fwait
test
mov
cs
les
arpl
jno
mov
andb
push
scas
inc
les
jl
stc
add
scas
mov
pop
daa
loop
ds
scas
adc
mov
daa
mov
push
imul
mov
and
push
add
lods
xchg
repz
lcall
clc
mov
fimuls
test
inc
jl
inc
mov
sti
jge
sbbl
test
fmul
push
cmp
bound
jno
jg
in
mov
mov
and
jp
fwait
daa
xor
out
push
fimull
pop
inc
filds
dec
sbbb
out
out
fidivl
push
add
add
imul
or
xlat
or
inc
scas
push
je
jge
adc
test
pusha
inc
repnz
inc
aaa
push
clc
add
pop
out
jnp
icebp
stc
push
int
xor
fwait
cmpsl
or
jge
lock
shll
bound
push
mov
xor
pop
xchg
inc
xchg
rcr
imul
imul
movsb
sahf
sub
out
jbe
lock
lcall
push
xor
sub
cwtl
fwait
push
js
mov
or
pop
jl
sub
pushf
pop
push
sbb
icebp
dec
int3
arpl
popa
out
pop
xchg
dec
xchg
fsubrl
cmpsb
push
and
stc
rol
loop
sbb
sub
repz
fidivs
mov
jnp
xor
out
loop
rcl
or
addr16
pop
cli
stos
xor
rcll
bound
ret
cmp
xchg
mov
arpl
inc
fisttpl
cmp
mov
xchg
xchg
lret
repz
inc
mov
fsubl
push
push
decl
xor
insl
mov
add
pop
lods
xchg
xor
hlt
pop
push
jle
es
dec
and
into
sbb
lock
xchg
dec
mov
imul
mov
ja
insb
fwait
ds
pop
cs
lahf
cmp
or
shll
lret
pop
fildll
lods
jle
outsb
xchg
mov
mov
mov
mov
les
lret
out
xorb
inc
inc
ret
mov
adc
dec
test
imul
lcall
out
call
adc
shrl
sub
inc
or
jg
lods
dec
loopne
scas
sbb
cmp
jae
mov
std
cmp
out
xor
jne
into
and
jnp
mov
cmpsl
fbld
scas
test
mov
add
sbb
mov
xor
dec
pusha
xchg
xchg
inc
mov
mov
iret
insl
fcomps
mov
fs
adc
imul
pop
push
add
mov
sub
loop
gs
pop
fwait
jmp
test
adc
stc
jo
into
test
loop
rclb
pop
push
jne
out
aam
in
fisttpll
mov
push
leave
xchg
cmp
pop
push
cmp
add
adc
xor
hlt
or
xor
jne
sbb
mov
ret
andb
rcrl
hlt
dec
mov
jle
lds
add
add
mov
inc
rcll
pop
cmp
ret
out
lahf
xchg
scas
add
jmp
loope
mov
ficoms
gs
aas
addr16
push
cmp
cmc
rol
xchg
xchg
mov
stc
sub
sub
clc
sbb
inc
lcall
jle
lods
in
adc
lret
loop
push
push
pop
cmpl
pusha
test
out
mov
into
rcll
addr16
or
mov
sub
mov
std
insb
jns
in
mov
sub
xchg
fcompl
sbb
test
in
jbe
inc
stos
cmp
stc
xor
push
xchg
subb
loop
lret
mov
dec
popf
mov
inc
out
les
add
aad
and
mov
add
jns
ja
aam
fsub
popa
mov
nop
add
sarl
rorb
dec
mull
in
filds
adc
xor
inc
jne
cmp
leave
insl
xchg
pop
je
rcll
sub
test
dec
and
ss
xor
mov
scas
pusha
pop
add
push
xorl
es
popa
cmp
sub
or
lea
popa
or
cmp
aaa
mov
push
lds
push
mov
subl
mov
popf
xor
shll
dec
mov
cmp
pop
adc
sbb
and
cmp
scas
ret
scas
dec
jle
daa
xchg
dec
ret
nop
scas
push
loopne
scas
outsl
cltd
in
adc
xchg
xor
lods
lods
imul
cmp
loope
fs
sub
push
jae
mul
xchg
stc
insl
out
scas
faddl
jne
add
scas
stc
cmc
nop
and
xchg
push
popa
add
sbb
push
leave
mov
sbb
mov
rcrb
lds
divl
nop
sbb
cwtl
cld
pop
insb
loop
stc
or
cli
addl
push
movsl
insl
popf
lea
fnstcw
insb
mov
add
jl
aaa
loop
sub
pop
aam
mov
pop
movsl
out
subl
and
lahf
subb
add
xchg
out
fdivs
ret
xor
jmp
push
insl
or
fs
push
lods
jmp
lret
push
fildll
pop
or
enter
add
xor
in
adc
daa
test
sarb
cmc
out
xchg
add
pop
mov
loopne
sarl
lcall
xlat
pusha
sub
push
mov
imul
dec
mov
iret
int
pop
fcoms
scas
dec
cmp
xor
cmpsb
dec
mov
add
jge
add
ret
adc
mov
and
icebp
xor
lcall
shl
inc
xor
fcomps
shll
xor
loopne
inc
test
scas
cmp
cld
enter
fwait
shll
xor
push
imul
xlat
lds
stc
imul
and
js
mov
jno
mov
sbbb
mov
inc
mov
fsubrl
and
je
or
xor
cmp
and
cli
dec
xchg
daa
and
fsub
push
pop
push
std
xor
xchg
adc
or
push
int3
out
sti
pusha
sbb
xor
outsl
inc
cmpsl
xchg
mov
xor
and
sti
stos
pop
adcb
add
movsl
sub
adc
or
scas
xchg
adc
call
insb
ficoml
mov
ljmp
repz
push
cltd
jge
dec
push
jl
inc
inc
mov
jl
pop
test
test
push
sbb
int3
add
arpl
push
pop
aas
mov
pop
cwtl
popa
cmp
jb
mov
sub
xchg
stc
aad
mov
xor
dec
out
xchg
ret
mov
mov
scas
xchg
mov
pop
push
inc
test
push
mov
jno
lods
add
sub
jle
or
pop
pop
les
mov
pop
fdivrs
push
inc
aaa
std
add
push
adc
lret
mov
mov
aam
cld
je
mov
dec
sub
jge
aam
lods
cltd
and
scas
cmp
scas
xor
testb
fidivl
and
adc
pop
push
ja
into
sahf
mov
inc
sub
icebp
xlat
pop
popa
ss
pop
cs
sbb
sub
loopne
fldenv
movsb
dec
push
cmc
insl
sbb
push
pop
sbb
hlt
xchg
sbb
arpl
cmp
dec
xchg
test
add
insb
adc
ja
xor
inc
push
mov
pusha
cmpsb
sti
fcoml
jb
pop
test
lahf
int
fidivs
sub
xor
repz
lahf
test
aam
jne
push
in
dec
aad
out
jecxz
pop
and
mov
leave
push
sub
xchg
stos
fs
movsl
jbe
inc
xlat
ds
jno
in
pop
and
fwait
xor
or
movsb
sbb
mov
not
sub
dec
sti
cmpsb
fwait
or
xchg
dec
mov
lock
stos
cwtl
int3
movsl
xor
jno
push
adc
movsl
dec
and
sbb
mov
adcb
inc
inc
fwait
rcll
push
iret
int
xor
daa
bound
int3
jne
in
clc
popa
fwait
imul
cld
inc
push
mov
push
ja
insb
imul
or
negl
out
adc
repnz
hlt
xor
mov
or
push
fidivl
in
mov
xchg
nop
cmp
mov
jae
iret
mov
insb
loope
pop
roll
je
cld
bound
in
mov
addr16
cltd
arpl
out
push
jbe
xchg
ljmp
xchg
cmp
push
aas
out
push
lcall
sti
test
data16
enter
stos
mov
ljmp
jge
sub
popa
iret
insl
aaa
sbb
stc
cmp
call
push
dec
and
mov
fsubrp
mov
loopne
lahf
jle
cs
sbb
and
cld
scas
loopne
shrb
adc
add
je
pop
add
fmulp
popf
push
ja
int3
cltd
mov
cmp
pop
pop
cs
mov
rol
test
enter
cmc
and
inc
arpl
and
cmpsb
out
sbb
dec
and
mov
out
js
xchg
ja
in
pop
xchg
jbe
mov
mov
jmp
inc
add
sbb
sub
imul
stos
lahf
in
jae
jnp
and
fidivrs
xor
xchg
fstps
outsl
in
pop
lods
mov
adc
add
cs
jb
fcoml
cwtl
aam
popa
push
jnp
ja
popa
adc
fwait
clts
scas
pop
fwait
dec
clc
lahf
aas
dec
push
sub
cmpl
pusha
sti
push
lahf
lret
mov
mov
mov
fsub
dec
repnz
movsb
pop
in
mov
loope
in
jns
pushf
inc
pop
or
test
pop
fs
xchg
pmulhw
fdivl
jecxz,pn
fstpt
dec
jne
add
push
loope
nop
and
inc
popf
out
jl
stos
aam
adc
fisubrl
sbb
scas
stos
jae
dec
in
dec
cmpsb
cmp
pop
out
xchg
add
push
fdivrp
out
repz
dec
shrb
adc
dec
inc
cli
hlt
cs
push
pop
shlb
lds
outsl
add
in
outsb
xchg
jne
or
dec
mov
int3
inc
jp
push
clc
and
call
jl
pushf
hlt
into
sbb
and
lods
push
fnsave
and
push
jecxz
mov
loop
jae
mov
push
daa
cmp
cmc
js
imul
push
in
iret
repnz
outsb
mov
or
xchg
pop
push
or
stos
rcl
mov
mov
les
fldl
xlat
sbb
mov
bound
and
out
and
push
and
jae
into
clc
testb
fstpt
sub
les
inc
stos
jge
push
icebp
test
or
xor
inc
dec
or
push
out
xchg
mov
pop
ret
xchg
in
xchg
lret
sub
call
sbb
inc
cmp
jecxz
pusha
data16
inc
xchg
arpl
jnp
mov
stos
xor
aas
loopne
fldcw
ljmp
mov
iret
rolb
faddl
lahf
dec
adc
fnstcw
sub
test
sub
outsl
sub
icebp
imul
cld
and
rcrl
adc
inc
lret
addr16
pusha
rorb
inc
orb
pop
push
adc
ret
lahf
pop
pusha
xchg
clc
xchg
cmc
sbb
xchg
leave
jmp
sbb
pop
mov
xchg
dec
scas
rcll
xchg
loope
mov
add
jae
iret
mov
sbb
xor
xchg
mov
adc
cmp
andb
sbb
push
adc
insb
test
and
arpl
aaa
mov
das
add
lcall
sub
pop
bsr
adc
xor
and
fisubs
ljmp
test
mov
xchg
test
cmp
adc
into
fsubrs
inc
pop
cwtl
aam
out
loopne
inc
mov
out
mov
icebp
rorb
jmp
lahf
dec
mov
pushf
cmpsb
and
punpckldq
jge
je
pop
cs
inc
out
sahf
mov
dec
xchg
in
or
mov
xor
mov
xchg
imul
push
xchg
mull
lock
test
mov
dec
callw
pop
push
and
popa
stc
dec
pop
mov
push
lahf
das
push
push
add
popf
iret
lea
xchg
jmp
mov
add
mov
shll
ljmp
inc
sbb
add
daa
jnp
call
dec
sbb
add
inc
hlt
adc
into
add
inc
mov
or
sub
fildll
jb
ss
fcoml
lds
mov
lock
mov
outsb
pop
enter
std
or
imul
outsl
out
pop
aaa
ds
sbb
mov
cmpsl
sahf
add
xchg
out
push
push
cld
insb
scas
jge
gs
sbb
aam
mov
fdivl
xchg
out
mov
cmp
out
jnp
mov
out
cmp
movsb
mov
jle
cs
sub
pop
sub
push
xor
repz
lcall
inc
add
sub
sub
xor
xor
mov
dec
sbbl
rorb
pushf
fnstsw
dec
and
mov
or
push
cmc
jbe
jmp
sahf
sbb
mov
add
shrl
and
call
je
xchg
in
dec
mov
aaa
dec
mov
xchg
adc
add
xor
insb
in
sbb
mov
int3
jns
xor
repz
aad
xor
ss
frstor
push
cmpsl
testb
mov
aam
testl
mov
xchg
dec
idivb
cmc
push
bound
je
adc
mov
movaps
lret
int3
mov
fbstp
adc
push
outsb
mov
pop
jle
ja
test
lods
mov
in
cli
popa
mov
and
cmpsb
xchg
xchg
inc
and
insb
push
adc
cs
cltd
lcall
jae
test
scas
mov
repz
cmpl
inc
mov
lods
mov
inc
push
loopne
hlt
packuswb
pop
sahf
mov
mov
xor
sahf
sub
and
pop
nop
jg
push
cltd
pop
adc
pusha
dec
adc
and
int3
xchg
sub
stos
push
aaa
cmpsl
jb
jne
inc
mov
cli
mov
xchg
fs
daa
cli
cli
fincstp
sbb
push
fidivs
push
adc
mov
addr16
clc
je
sbb
mov
mov
cmpl
fistl
add
repz
mov
adc
sub
rolb
lods
sub
loope
dec
jo
mov
pusha
cs
xor
aaa
push
mov
jg
loop
cltd
mov
xchg
pushf
cmp
xchg
ds
mov
jg
mov
insl
insl
cld
push
insl
scas
mov
cmp
mov
daa
gs
lret
mov
clc
pop
out
outsb
dec
add
push
jo
aad
inc
jno
add
xlat
rolb
or
int
xchg
sarb
sti
mov
inc
or
mov
out
pop
mov
popa
clc
jns
sbb
or
or
fisttps
adc
and
xchg
xor
push
jp
xor
inc
mov
mov
or
popf
or
mov
sub
push
xchg
into
inc
push
pop
into
push
pop
jp
mov
mov
add
xor
popf
gs
int
sub
out
and
pushf
cmpl
lret
pusha
mov
test
fildl
js
inc
pop
stc
imul
jbe
divl
xchg
test
ljmp
or
cmp
fnsave
cwtl
add
in
adc
pusha
stc
int3
lock
or
bound
push
push
cld
test
out
mov
jne
sbb
dec
cmp
sub
movsb
loopne
push
push
lcall
push
fmulp
push
pop
fadds
dec
and
mov
xor
xchg
inc
ss
jbe
rorl
out
jg
adc
or
or
lcall
add
cmpsl
cmp
pop
rcrl
icebp
fisttpll
pop
mov
mov
fwait
aad
imull
pop
imul
je
ret
xor
pop
sub
inc
subl
cmpsl
xor
mov
jbe
mov
dec
clc
sub
pop
hlt
nop
movsb
jp
lret
leave
jns
test
call
cmp
jle
push
shrl
inc
nop
xor
stos
mov
xor
xlat
movsl
in
pop
addr16
xchg
xchg
fbld
enter
inc
loop
pop
sbb
loop
push
icebp
mov
arpl
add
insb
cmpsb
lret
mov
mov
mov
call
loope
test
push
in
test
sbb
test
pop
fisttpll
sbb
or
stc
mov
jmp
push
pop
mov
aam
arpl
out
push
xchg
jecxz
iret
out
out
test
adc
cmp
jne
adc
cmpsl
std
jle
mov
sti
push
mov
jl
ds
pop
movsb
dec
sub
xchg
push
fcompl
dec
into
xchg
pop
bound
pop
aad
xchg
cltd
adc
rorb
popf
mov
inc
data16
aam
popa
ss
mov
nop
shlb
sbb
jmp
int
mov
sbb
adc
push
inc
cltd
jecxz
pop
adc
scas
adc
in
mov
ljmp
ret
sub
mov
stos
mov
popa
iret
sbb
ror
mov
jae
adc
xor
sub
pop
movsl
int
jns
add
push
jl
dec
push
cwtl
dec
addr16
jge
xor
dec
pop
cmp
or
jns
test
orb
push
out
inc
cwtl
and
cmp
in
xchg
stc
mov
push
jno
mov
adc
or
jl
rcrb
xor
arpl
ds
cmp
lret
popf
imul
roll
dec
xchg
jnp
int3
movsb
fdivrl
clc
test
fdivrl
mov
test
sbb
inc
xchg
mov
xchg
cs
inc
sub
mov
push
cmp
aam
cwtl
popf
xchg
mov
jle
loope
stos
andl
aas
sti
jecxz
sub
sbb
stos
ret
xor
mov
mov
adc
mov
sarb
lods
sbb
mov
mov
add
xchg
mov
lahf
loop
and
xor
push
lret
or
lcall
jnp
lahf
add
sub
repnz
or
adc
adc
cli
push
cmp
fsubl
xlat
and
cmp
mov
ss
lds
jae
mov
sub
mulb
into
test
pop
or
pop
add
arpl
add
pop
test
pop
nop
insl
xchg
je
mov
faddp
cmp
outsl
inc
fistpll
adc
out
test
repnz
int
sub
cmp
push
sbb
inc
insb
lcall
pop
sbb
adc
jmp
cmpsb
stos
dec
push
sbb
pop
les
push
xchg
and
mov
lock
jmp
xchg
pop
jp
cmpsl
fbstp
js
testl
sti
pushf
fs
test
xchg
push
mov
ljmp
cmp
add
sub
inc
int
clc
ret
sbb
lods
jns
push
sub
pop
sbb
push
and
imul
jle
cmp
mov
lahf
lahf
add
jmp
lds
popa
sub
fs
and
sub
sbb
aaa
sarl
jae
mov
filds
test
cmp
icebp
dec
mov
and
stos
sub
dec
cmp
xor
lret
jae
add
jmp
hlt
dec
ds
mov
dec
xchg
das
fld
popl
jge
and
gs
dec
lret
in
dec
mov
mov
and
adc
xor
imul
mov
pop
test
mov
jo
and
aad
xor
adc
pop
cmp
jmp
mov
xorl
inc
shrl
sbb
aaa
sbb
xchg
mov
clc
add
xor
leave
pop
and
sbb
popf
dec
mov
mov
and
and
push
daa
and
int3
loop
mov
push
mov
int
sub
cmc
mov
aaa
movsb
cmpsl
xlat
or
addr16
sbb
fcomi
clc
cli
sbb
ds
sarb
ret
js
mov
bound
push
daa
push
scas
push
lods
js
mov
lret
mov
xchg
icebp
adc
mov
cltd
shll
cmpsb
insl
fistl
repz
in
aad
dec
sub
jnp
fcoml
insl
adc
inc
insb
fimuls
push
into
pop
cmpsb
adc
jmp
add
sub
insb
and
cmpsl
add
outsl
fistpll
cli
cs
mov
mov
mov
cmpl
mov
and
pop
xchg
hlt
mov
je
addr16
lcall
push
fsubr
pop
add
pusha
mov
mov
es
lret
mov
lods
mov
gs
leave
cmpsb
jecxz
mov
xor
push
movsb
loopne
add
mov
sub
xchg
je
sbb
mov
push
ror
fwait
xchg
pop
std
fucomp
xlat
sbb
cld
sbb
lret
enter
mov
lahf
pushf
sub
pop
ljmp
rcrb
xchg
jne
mov
in
or
pop
adc
mov
ds
add
mov
ret
into
mov
dec
xchg
xorl
shlb
push
add
test
ja
dec
aas
xchg
imul
ds
sbb
shrl
or
fidivrl
std
pop
das
pop
or
pop
les
lods
imul
shl
pop
sbb
fisttpl
sub
gs
sub
xlat
jne
inc
mov
enter
xchg
xchg
subl
imul
fisubl
xchg
arpl
inc
out
jecxz
mov
fisttpl
pop
xchg
xchg
mov
sbb
jbe
enter
out
sub
stos
orb
minps
jl
pop
rorl
test
notl
jbe
mov
or
gs
inc
iret
or
pop
pop
add
xchg
andl
mov
push
stos
push
push
ds
xor
ja
cmp
xchg
pop
lock
popf
iret
sbb
xor
cli
aaa
mov
jmp
dec
test
pop
mov
inc
pop
into
adc
es
push
popa
push
xchg
repz
lea
stos
mov
test
sub
hlt
mov
test
cwtl
repnz
cmp
xchg
clc
je
movsb
std
test
push
insl
hlt
mov
cmpsl
dec
push
or
jl
jne
pop
xchg
mov
or
cltd
add
movsl
repnz
push
mov
mov
aad
jo
pop
xor
je
cld
push
lcall
add
jae
in
lods
mov
lret
adc
sub
std
add
shrb
jb
cmp
mov
popf
cmp
pop
inc
out
pop
jl
xor
jnp
jb,pn
call
inc
xor
pop
fnstenv
and
adc
sub
add
jo
sub
mov
pop
imul
inc
xor
fistpl
mov
sbb
mov
jns
popa
jl
ret
repnz
push
push
cmp
aam
inc
mov
xlat
in
mov
ret
adc
outsl
lahf
add
mov
cmp
loope
lcall
inc
sarb
es
adc
sbb
push
pop
addr16
sbb
push
cmp
xlat
jbe
dec
in
add
cmpb
or
sub
je
in
cmpsb
add
sbb
xor
fistl
sahf
decl
dec
sub
gs
das
lods
jns
arpl
mov
adc
into
mov
adc
pop
push
push
xchg
pusha
in
xchg
pop
dec
sbb
mov
rep
lea
jae
push
dec
mov
jns
mov
lods
loope
xor
pusha
bnd
pop
imul
movb
fs
add
scas
pop
jns
call
hlt
repz
sarl
fstps
add
loope
mov
rolb
push
cmovl
xlat
cmp
ret
push
lcall
into
decl
push
and
in
incl
sub
insl
call
jns
popf
pop
out
mov
fisttps
push
xor
xor
dec
adc
cmp
repz
mov
sbb
stos
stos
push
xor
mov
das
dec
and
ret
jl
cmp
test
jbe
cmc
and
pop
or
push
jl
xor
sbb
rorb
add
mov
push
push
test
pop
adc
cwtl
mov
test
lods
adc
jnp
mov
test
cmpsl
sub
or
fs
xchg
stos
sub
in
dec
pop
dec
vpmuludq
popf
adc
cmpsl
mov
mov
push
inc
xor
add
inc
je
pop
inc
pusha
mov
add
mov
jp
push
out
adc
mov
mov
dec
dec
push
rcll
add
mov
pop
cmp
xchg
sub
lret
dec
xor
push
mov
mov
or
outsb
mov
cmp
cmp
std
cld
addr16
push
ret
je
mov
push
mov
mov
repnz
xlat
sbb
loop
push
add
push
xchg
push
enter
lods
pushf
mov
jo
push
aad
addr16
or
dec
cmc
test
iret
daa
repz
cltd
adc
sub
push
pop
jno
shrb
icebp
cli
or
push
or
sarl
push
sarb
fsubp
clc
sar
lds
jnp
int3
push
push
lods
lret
cli
data16
stos
popa
ficoms
cmp
push
lahf
jge
sbb
je
push
repnz
rclb
test
ds
xor
movsl
shll
xlat
inc
sbb
shl
fisttpll
cmp
loopne
sub
xchg
dec
pop
decb
mov
out
imul
push
xchg
jl
decl
cmp
jmp
xchg
and
mov
sub
ret
xor
pop
adc
inc
test
sub
push
pop
icebp
push
dec
dec
into
ret
std
push
or
or
popa
dec
add
fsubs
cmpsb
dec
xchg
xchg
icebp
mov
gs
es
fwait
inc
xchg
pop
pop
out
or
pop
inc
pop
scas
ja
xor
lret
ljmp
push
cmpsb
adc
scas
mov
push
fmuls
test
call
inc
lcall
and
inc
lea
xchg
push
mov
addl
inc
push
int3
mov
loop
xchg
nop
mov
sub
adc
jb
push
cmp
cmpsb
mov
push
cmpsb
xchg
ficomps
mov
inc
jmp
jo
ds
lds
imul
in
movsb
push
mov
scas
aaa
adc
shl
jo
mov
subb
sbb
repnz
out
ja
fs
shrl
scas
stos
in
and
lds
adcl
sbb
cmc
addr16
js
je
xor
dec
ss
push
xor
mov
pop
insb
sbb
mov
test
add
or
push
mov
pushf
dec
into
or
iret
or
popf
testb
enter
adc
jecxz
cmpsb
fsubs
mov
ret
inc
pmaxsw
test
out
xor
or
cmp
mov
vmovdqu
leave
stos
or
out
cmp
jmp
mov
inc
sti
xchg
push
dec
imul
jnp
movsb
fs
xor
fsub
or
push
stc
bound
mov
clc
add
inc
xchg
jbe
push
nop
lock
jmp
clc
repz
mov
insl
ret
popa
xchg
imul
adc
xchg
sahf
fisubs
jecxz
cmpsl
icebp
cmc
lcall
sbb
cmp
lret
and
adc
add
pop
pop
adc
mov
jnp
fdivs
mov
and
jnp
rcrb
push
or
mov
push
out
int3
daa
xor
pop
cmp
mov
mov
add
xchg
push
xor
jae
xor
lret
addr16
pop
fiadds
push
or
shl
push
xlat
xchg
and
sti
sub
enter
adc
scas
jecxz
add
in
fdivs
gs
into
add
inc
dec
jmp
cmc
pop
mov
push
lds
jo
mov
movsb
fwait
out
dec
ret
cmp
gs
pop
jb
jne
loopne
dec
jae
aam
mov
ljmp
push
push
pop
add
and
lods
jno
mov
sub
mov
out
cmp
jmp
mov
insl
ret
xor
push
std
adcl
cwtl
jae
xor
jl
dec
repnz
fisttps
xlat
and
inc
in
add
ds
pop
hlt
xchg
sbb
lock
cmp
cmc
or
popf
or
cld
push
dec
subb
push
arpl
jbe
outsb
sub
insl
cwtl
imul
andb
out
cmp
and
adc
push
lods
fidivrs
or
scas
shlb
jp
mov
push
decb
in
mov
sti
push
or
and
jae
movsb
jle
mov
jecxz
cmp
out
je
push
fsts
stos
adc
insb
or
mov
int
xchg
mov
sti
lahf
es
sbb
push
das
sbb
es
push
inc
xchg
sar
cltd
vhaddps
jo
sar
sub
xor
cltd
pop
jbe
lahf
aas
lahf
mov
leave
scas
push
enter
jae
jp
push
div
cmc
mov
sub
jae
addr16
fcompl
sbb
movsb
in
daa
add
in
fwait
aad
sub
cld
mov
sbb
hlt
clc
pop
in
or
mov
xor
push
xor
loopne
xor
js
push
pop
cli
aam
pop
nop
mov
mov
sti
leave
mov
jb
stos
dec
push
mov
push
pop
dec
leave
mov
ja
stc
jns
aad
lods
pop
rclb
or
inc
and
dec
pop
fistps
cmp
stc
pop
inc
push
mov
and
outsb
rol
push
adc
stos
jg
sub
pop
inc
mov
lods
add
mov
xor
sbb
xchg
mov
dec
rcll
pop
xchg
pop
insl
mov
and
ljmp
aad
or
fs
inc
dec
ja
std
mov
adc
repz
cmp
mov
dec
cmp
xchg
das
fimull
xchg
jge
fidivs
ret
das
lea
idiv
and
adc
xor
mov
xor
ja
xchg
test
pop
push
xchg
xchg
adc
test
sub
pop
jle
push
rcrb
sbb
sub
add
push
fs
pop
addl
test
mov
push
mov
scas
dec
jp
addr16
aaa
lock
rorl
adc
sub
and
neg
ljmp
add
jle
mov
dec
jns
repnz
cmp
dec
lcall
sbb
mov
fldl2e
push
mov
dec
pushf
ja
loopne
movsb
push
nop
shll
mov
fsubl
cmp
loop
inc
adc
jnp
jecxz
inc
das
xchg
out
sbb
mov
popf
lahf
mov
sbbb
mov
mov
imul
lret
lcall
stos
jecxz
addr16
jne
movsb
bound
pop
mov
lods
xchg
mov
cmc
inc
hlt
fimuls
jmp
dec
pop
xlat
repz
cli
dec
addl
rorb
xor
flds
adc
adc
push
inc
iret
mov
jnp
inc
jno
leave
imul
nop
pusha
sbb
adc
sub
push
dec
sub
fldl
xor
cwtl
stc
xor
in
sarl
jns
shlb
lahf
ror
pop
aaa
dec
mov
jp
inc
xchg
jnp
addr16
lods
add
loop
out
xchg
pop
sub
addr16
xchg
ficomps
jb
iret
out
andb
loopne
mov
sti
fnsave
cld
mov
mov
mov
loopne
and
mov
jae
fistpll
in
jne
mov
popf
sbb
or
mov
js
pop
shll
cmp
add
bound
dec
notb
jp
insb
daa
push
push
std
pop
ret
dec
dec
xor
les
push
sbb
scas
je
jnp
nop
mov
insl
dec
arpl
or
aaa
jl
iret
sbb
mov
arpl
rcrb
gs
aaa
int
out
pop
sbb
aam
jp
out
push
scas
push
push
sub
mov
insb
popf
aas
in
fisubrl
pusha
popf
jno
sbb
jg
xlat
cmpsl
mov
cmp
dec
stos
jno
aad
insl
mov
mov
push
or
aad
push
loop
mov
lret
inc
mov
mov
jecxz
cld
mov
pop
imul
hlt
push
pop
filds
or
add
sub
mov
sub
stc
push
in
push
fimull
jge
jns
mov
sbb
les
hlt
mov
jbe
sti
xlat
xchg
adc
data16
pop
imul
push
sbb
pop
sbb
push
push
inc
fcomps
adc
cwtl
jns
dec
pop
out
repz
test
push
shlb
add
push
cmp
movsl
rorb
insb
jnp
movsl
dec
cmp
jle
push
jp
sbb
arpl
ljmp
icebp
insb
lcall
pop
lods
pop
nop
sub
pop
enter
imul
adc
testb
ds
imul
push
sbb
in
xchg
adc
adc
sbb
lcall
test
lcall
sbb
xchg
and
dec
fcoml
insb
sahf
call
xlat
jl
mov
cmpsl
or
orb
cmp
int
cwtl
mov
xor
shl
sbbb
mov
sub
aas
dec
dec
sbb
sahf
sbb
dec
in
push
push
jbe
roll
add
dec
bound
xlat
sbb
jo
ja
movsb
pop
mulb
mov
in
add
jno
out
negl
and
jae
sbb
sbb
lds
popf
stos
mov
inc
jnp
dec
fwait
add
cmpsb
scas
sub
int3
pusha
orl
sub
or
or
dec
sub
shll
iret
sahf
and
push
cmc
fadds
arpl
fnsave
adc
push
mov
int3
sbb
mov
jp
lods
sbb
lret
in
mov
jno
nop
dec
cmc
out
fld
imul
push
inc
aad
mov
mov
test
xchg
cltd
adc
jo
mov
push
add
and
and
inc
adc
subl
lds
adc
jno
out
inc
not
pop
sbb
jl
mov
sarl
arpl
out
and
popf
adc
aas
ja
mov
inc
addb
mov
call
ds
shlb
decl
pushf
jmp
dec
fcompl
mov
push
jo
dec
sbb
in
lds
mov
es
mov
xchg
jmp
enter
loop
imul
mov
push
cmp
mov
and
mov
sbb
mov
repnz
hlt
int
xor
iret
addr16
mov
add
adc
bound
xchg
in
pop
lods
push
push
psubb
xor
stos
push
cmp
pushf
repz
cwtl
xor
movsl
js
in
sbb
mov
mov
mov
sub
pop
sar
xchg
add
repnz
adc
inc
push
mov
jns
push
add
cmp
xchg
dec
icebp
cld
dec
dec
pop
incb
adc
or
imul
xchg
xlat
xchg
xor
jno
push
inc
jmp
and
aas
add
cmc
lods
loope
cltd
cltd
mov
ret
xchg
jp
iret
shl
notb
orb
xor
lret
fidivl
imul
dec
xchg
hlt
xor
mov
push
mov
xchg
inc
stc
ret
cwtl
push
idiv
hlt
int
ss
daa
mov
cmp
mov
or
std
adc
mov
pop
int3
pop
or
xor
sbb
leave
xchg
jle
test
loope
clc
pop
shll
and
or
cli
fsts
mov
dec
dec
orl
lods
data16
cmpsb
stos
pushf
fsubr
push
add
add
inc
jb
mov
or
xchg
sub
push
jne
mov
mov
sbb
xor
or
pop
pop
inc
js
add
or
jge
stos
pusha
mov
rol
push
xchg
inc
imul
inc
push
orb
xor
imul
mov
xlat
enter
fcoml
jmp
jno
int
cwtl
out
icebp
cmp
insb
shrl
push
arpl
pop
mov
filds
insl
mov
mov
or
pop
or
movl
push
lret
and
mov
dec
pop
loopne
sbb
inc
and
dec
jnp
xchg
fimuls
xor
pop
jmp
gs
adc
cltd
iret
pop
mov
arpl
or
mov
inc
mov
je
cmp
adc
or
fsubrl
int
adc
lcall
cmc
adc
orl
mov
in
cmpsb
or
hlt
cld
bound
fstps
ss
adc
outsb
inc
out
xchg
enter
adc
xchg
inc
lock
jp
jb
xor
scas
mov
fisubrs
xor
mov
mov
xchg
imul
adc
rol
mov
clc
cwtl
inc
ret
jbe
loop
and
mov
pop
xchg
mov
add
in
cs
icebp
xchg
mov
sbb
and
xchg
test
loopne
js
fildl
push
out
js
lret
stos
das
and
data16
mov
mov
mov
xchg
lret
call
mov
fwait
ss
out
sti
jns
stos
jae
push
push
fchs
sbb
lods
inc
pop
mov
or
mov
mov
adc
lret
push
inc
insb
rorb
repnz
shll
in
outsl
imul
jo
jns
popa
jmp
pop
fs
add
and
orb
out
cmp
push
and
sahf
fildll
dec
lahf
lods
mov
jbe
add
loopne
data16
dec
mov
jns
cmp
mov
mov
push
into
je
jmp
sbb
lahf
mov
loop
cmc
lcall
sub
xchg
int
stos
jbe
cltd
loopne
inc
xchg
pop
mov
jmp
dec
in
xor
push
loope
out
test
jle
in
sub
or
inc
repnz
add
jle
sbb
scas
adc
sbb
dec
data16
and
add
push
in
ljmp
out
dec
int
outsb
ds
inc
rorb
push
sub
or
sub
imul
or
or
xchg
xor
fnstcw
jp
dec
mov
sbb
out
cmpsb
or
xchg
or
cs
decb
mov
push
jp
cmpsb
enter
xchg
repz
int3
mov
push
jnp
or
jo
clc
mov
in
sub
inc
jg
fidivrl
inc
xor
movsb
or
adc
dec
and
sti
add
mov
xchg
je
pop
jge
neg
das
cltd
add
adc
xor
xchg
lea
bound
jns
jbe
jl
mov
aas
sarl
push
adc
mov
icebp
mov
xchg
xor
pop
test
mov
loop
push
nop
inc
lods
pop
loopne
mov
dec
jns
jne
data16
pop
push
mov
mov
out
arpl
add
lock
sbb
dec
insl
mov
push
adcb
xchg
in
shl
xor
push
and
add
jecxz
js
fs
in
test
ljmp
fwait
cltd
jp
aas
aam
pop
fucomi
inc
test
ja
mov
jb
aaa
scas
adc
jb
inc
out
bt
das
mov
push
js
and
push
or
mov
movsl
pop
pushf
push
mov
movsb
aad
or
mov
decb
icebp
or
dec
push
push
imul
pop
gs
loopne
push
lahf
xchg
cmp
pop
sub
push
lods
xchg
fs
or
int3
imul
clc
mov
add
adc
inc
mov
jno
faddl
pushf
sub
inc
mov
pop
lods
scas
adc
int3
les
xor
jecxz
xor
cld
mov
or
pop
or
inc
scas
inc
mov
fisubrs
adc
cmpsl
nop
cmc
mov
inc
mov
sub
inc
cltd
lret
pop
inc
fstpl
shrb
inc
mov
push
push
testb
test
xchg
scas
and
adc
jo
or
sbb
shll
repz
push
pop
add
pusha
jge
push
or
jmp
out
test
aad
or
hlt
pop
fisttps
mov
pop
or
dec
andb
pop
ja
mov
add
pop
xor
mov
out
std
and
pop
ret
xchg
mov
inc
mov
lds
aam
or
pop
mov
xchg
fadds
mov
add
inc
xor
fisttpl
subl
lahf
sub
push
stos
xchg
incl
mov
lock
les
add
repz
int
dec
jle
cmc
insb
mov
dec
subps
or
xchg
jge
sub
int
insl
jge
pushf
xor
repz
pop
adc
mov
push
in
enter
dec
push
jmp
test
cmp
and
insb
orb
sbb
cmp
clc
mov
sbb
sbb
jbe
mov
jo
pusha
ljmp
or
push
popa
jbe,pt
movb
hlt
jno
mov
jns
add
jae
dec
add
xchg
out
push
mov
shlb
push
mov
in
xor
sub
fstpt
jmp
ss
mov
icebp
xchg
ds
pop
test
iret
dec
sub
das
dec
dec
inc
cwtl
xchg
mov
lea
sbb
in
pop
out
mov
out
sbb
or
sub
add
cmpsb
mov
shrl
into
out
mov
cwtl
dec
xchg
mov
xor
aaa
jg
lret
cli
xchg
push
jmp
inc
sbb
out
call
clc
mov
inc
mov
jg
xor
mov
mov
cmpsb
fnsave
in
mov
lods
cwtl
rcll
xor
xor
enter
mov
or
aas
and
cmp
fdivl
cmpsb
fiadds
mov
cmp
sti
jns
out
dec
out
push
xor
jbe
or
pop
or
sub
outsb
js
hlt
std
daa
ljmp
push
push
test
dec
fstps
std
int
pop
enter
pushf
add
insb
xor
push
xor
stos
bound
int3
cs
imul
jge
sbb
xchg
xchg
xlat
mov
outsl
insb
icebp
xchg
jmp
sbb
nop
dec
das
icebp
push
icebp
es
aad
rclb
dec
add
xorl
mov
inc
repz
lods
ret
jmp
sbb
mov
inc
lret
scas
ja
mov
das
test
bound
and
faddl
fucomi
pop
in
cmp
mov
stc
out
lods
or
test
sahf
inc
repnz
into
sahf
add
ret
sbb
loope
cmp
lods
mov
dec
or
xchg
mov
mov
adc
mov
inc
sub
aas
cltd
fsubr
add
das
insb
shrb
stc
fcoms
push
adc
cmc
mov
sti
std
push
dec
outsb
push
add
arpl
inc
sbb
mov
jle
adc
cmp
iret
mov
or
inc
sbb
iret
movsl
mov
aaa
repnz
xlat
sub
push
sub
testl
adc
js
iret
ds
xchg
and
lcall
push
mov
sbb
jge
dec
xor
arpl
mov
add
sbbb
adc
out
add
mov
push
pop
ficoml
sahf
scas
dec
dec
test
or
or
cmp
inc
and
mov
aaa
and
xchg
inc
pop
mov
fildll
loopne
jnp
xchg
pop
and
aas
cmp
mov
dec
xor
fwait
or
push
movsl
push
pop
sub
ljmp
add
es
or
icebp
mov
jne
mov
addl
shll
and
mov
loopne
aas
sbb
fmul
int
pop
jl
dec
lods
in
jmp
movsb
test
push
push
xchg
push
push
push
mov
sub
add
cltd
dec
pusha
xchg
push
popa
inc
pusha
sbb
clc
push
arpl
pushf
pop
jl
jo
fstpl
sub
mov
pop
mov
ret
addr16
push
cmc
inc
dec
mov
cmpsb
sbb
cmc
xor
jb
movsb
xchg
pop
mov
mov
out
.byte
push
