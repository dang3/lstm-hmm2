jg
xchg
add
iret
sub
mov
add
jmp
add
int3
dec
sub
add
mov
dec
add
mov
adc
outsl
pushl
bound
data16
add
and
jnp
fldl
repnz
pop
mov
shll
sti
divb
js
sbb
inc
cmp
add
push
leave
dec
mov
inc
leave
imul
push
aaa
push
add
jmp
inc
cs
mov
add
add
add
mov
push
dec
xor
push
sbb
mov
leave
ret
add
mov
sub
arpl
xor
mov
dec
mov
dec
push
push
lea
adc
and
orb
jns
mov
mov
dec
mov
jp
xlat
mov
ljmp
fists
xlat
sub
mov
mov
cmp
arpl
cmp
decl
inc
pushf
cmp
or
js
inc
inc
or
je
add
je
insb
xor
dec
mov
pushf
inc
jl
ljmp
jns
push
mov
inc
dec
and
pop
inc
outsl
mov
or
mov
sub
dec
push
orl
sarb
mov
add
dec
insl
add
ret
aaa
arpl
lret
fmull
xor
dec
bound
push
add
inc
dec
inc
cvtdq2ps
in
fbstp
dec
inc
mov
idiv
adc
dec
mov
aaa
push
xor
rorb
mov
mov
or
gs
test
outsl
aam
ss
jmp
dec
mov
ja
test
inc
mov
add
pop
push
push
jb
mov
mov
or
out
mov
jae
testb
das
bound
testb
push
mov
jno
xor
mov
call
push
stc
filds
loope
pop
pop
aaa
dec
mov
pop
imul
dec
mov
inc
and
aaa
inc
add
push
out
outsb
das
sub
mov
sbb
adc
dec
imul
ss
xor
mov
mov
mov
lret
into
add
mov
mov
iret
or
jo
ss
repz
inc
jle
fists
cmp
sbb
ja
mov
mov
jae
xor
push
dec
adc
repnz
xor
pop
fsubs
xchg
ret
cmp
in
xor
dec
xor
fmuls
mov
fcmovu
push
cli
inc
jo
dec
outsl
sub
push
fsubr
lret
sti
xor
inc
arpl
mov
fiadds
pop
lods
inc
xor
into
sbb
xchg
inc
xor
ss
outsl
dec
xchg
leave
xchg
dec
add
sub
add
push
sub
xor
outsb
call
outsb
dec
dec
xor
fs
push
push
dec
cmp
popa
mov
add
mov
push
xor
or
inc
dec
xor
ret
insb
imulb
or
push
add
ficompl
sbb
outsl
pop
sti
out
push
aaa
inc
dec
mov
adc
dec
loope
pop
loope
pushl
es
dec
mov
jno
fdivrs
inc
xor
inc
aaa
mov
outsl
mov
fmuls
inc
push
inc
inc
dec
pop
lods
popa
fidivrl
call
push
inc
bound
fistl
outsb
dec
add
mov
sbb
bound
ficompl
mov
cmc
jns
inc
repnz
mov
jmp
push
inc
mov
arpl
inc
push
je
popa
leave
in
out
push
outsb
into
dec
mov
mov
loope
dec
mov
ret
jbe
cltd
dec
cld
test
add
arpl
shll
xor
ficompl
gs
pop
xchg
das
sub
lods
mov
ja
dec
outsb
push
je
out
xchg
mov
mov
arpl
push
adc
cld
pop
jnp
mov
popa
popa
dec
xor
out
fcoml
inc
inc
cmova
push
popa
lahf
lret
fstpl
call
push
outsl
insb
and
inc
push
mov
mov
push
push
ja
gs
mov
mov
mov
jno
clc
jo
dec
xlat
fistpll
mov
mov
int
enter
jne
dec
mov
pop
pop
arpl
add
mov
out
data16
push
or
lcall
sbbl
imul
dec
jne
inc
imul
dec
inc
addr16
pop
or
xchg
or
enter
loope
fistpl
or
add
push
gs
xchg
lret
mov
pusha
xor
inc
or
push
push
sub
xor
dec
mov
xor
mov
mov
rorl
inc
testb
inc
inc
or
sub
rolb
dec
mov
and
mov
jo
jne
push
iret
hlt
push
mov
push
dec
jns
sbb
out
lret
jmp
xor
insb
inc
ja
or
hlt
ss
addr16
dec
push
imul
xor
call
lret
dec
inc
fnsave
ret
fstpl
dec
dec
jb
push
jnp
je
mov
add
stc
test
push
sbb
ds
inc
pop
jbe
loope
xchg
je
jae
dec
mov
outsb
mov
mov
js
fs
mov
cmp
inc
stc
mov
sti
mov
push
dec
imul
jnp
mov
mov
inc
jno
sbbb
out
dec
push
add
inc
lret
repz
jbe
adcb
inc
mov
in
inc
xchg
aam
mov
push
out
pop
bound
lret
push
jo
sbb
pushf
pop
pushf
dec
sarl
push
dec
inc
mov
push
outsl
imul
insb
notb
adc
add
adc
nop
add
jbe
inc
or
add
les
enter
xchg
leave
pop
mov
jl
push
ss
imul
mov
or
pop
push
je
cmp
dec
les
rclb
jl
ds
adcb
in
in
stc
push
in
pop
loope
jb
lret
ss
xor
add
dec
sbb
in
xchg
in
rorl
les
stos
xor
in
push
or
xchg
jmp
mov
sbb
xchg
out
add
adc
les
or
jbe
leave
and
push
call
daa
push
mov
jbe
cmp
or
pop
flds
fs
jge
aam
sbb
jo
pop
in
add
test
adc
fstpl
sbb
into
leave
sbb
in
sti
push
int3
pop
pop
jecxz
sahf
mov
es
dec
or
and
fwait
pop
sbb
jmp
sbb
jne
adc
nop
xchg
pmulhuw
xchg
les
les
and
nop
jb
mov
xchg
dec
mov
mov
mov
pop
add
xor
jne
sbb
jb
popa
leave
mov
pop
lret
shlb
jle
jp
add
push
cmp
testb
add
out
ljmp
adc
adc
xchg
or
cltd
insb
test
xor
sbb
outsb
mov
jg
lcall
aaa
stos
jecxz
sub
ss
lods
adc
ja
lret
pop
xor
aad
cli
pusha
les
pop
sub
lret
sub
les
or
mov
out
lds
mov
add
jl
test
push
lcall
test
in
xchg
jns
adc
push
in
dec
loopne
xchg
pop
cmp
fstps
cmp
cmp
add
sbb
mov
or
push
mov
jmp
mov
push
fbld
stc
cli
iret
jge
adc
adc
cmp
and
and
cmp
xor
aas
cwtl
lret
xchg
and
insb
sbb
add
push
insl
js
popa
enter
fcompl
sub
adc
les
and
nop
lcall
adc
sub
and
adc
enter
std
pop
xor
and
and
sbb
adc
pop
call
addr16
mov
and
add
pop
mov
or
xchg
test
sub
pop
pop
push
aaa
inc
lret
js
jb
inc
add
adc
inc
sahf
outsl
adc
dec
pushf
in
inc
xor
inc
les
jecxz
loope
sbbl
sub
cmp
pushf
push
mov
in
sbb
mov
lret
inc
xchg
dec
pusha
inc
cmp
fldenv
jbe
sbb
loope
add
cmp
mov
add
sub
out
pusha
dec
fcoms
inc
jnp
add
fldlg2
sbb
ret
cld
pop
xor
dec
dec
add
icebp
ljmp
adc
imul
push
outsl
fldlg2
imul
jmp
xor
sbbb
inc
outsb
sbb
and
pop
les
xorl
push
fsts
arpl
mov
adc
pop
pusha
add
insl
psraw
orl
sub
fcom
jne
push
cmp
mov
lret
les
xor
mov
enter
dec
adcl
into
pop
inc
out
outsb
enter
pop
mov
repnz
cmp
dec
fmull
insb
inc
sbb
aam
sub
or
xor
cltd
test
sbb
mov
aad
mov
sbb
jno
jecxz
prefetch
push
jae
popf
movsl
nop
or
lret
lahf
iret
fsubrs
jecxz
sahf
int
mov
dec
sbb
jle
and
pop
es
mov
xchg
les
fs
minps
lea
in
push
mov
dec
mov
dec
xchg
xchg
scas
push
mov
xor
inc
add
aad
movsb
mov
mov
cmp
push
push
xchg
adc
jmp
arpl
sbb
push
adc
mov
sbb
and
lahf
fs
nop
lds
or
dec
enter
jg
stos
and
add
or
mov
rolb
jo
outsb
insl
xlat
sub
xor
push
xchg
mov
shll
fs
adc
push
clc
push
outsl
or
insb
nop
and
sbb
lret
pusha
or
out
in
dec
insb
out
xchg
push
add
jnp
inc
xor
fldenv
rclb
cmp
sbb
jo
inc
adc
mov
jbe
and
add
adc
rcrb
and
or
push
or
stos
fcomp
and
imul
xor
jl
jnp
leave
pushf
jecxz
add
push
push
sbb
push
imul
inc
cwtl
mov
inc
inc
mov
push
les
jbe
adc
fs
je
test
and
test
scas
ret
rorb
incb
mov
mov
adc
pop
leave
int3
add
lea
std
outsb
orb
test
mov
stc
dec
out
xor
mov
push
aaa
add
adc
jb
jo
add
push
pushf
mov
xchg
push
or
aas
adc
and
mov
fcmovbe
mov
push
pop
or
xchg
int
and
add
sbb
gs
ss
inc
cs
or
sub
or
jnp
cs
xchg
sbb
and
cmp
xorl
andb
xor
sbb
aaa
xor
jmp
popf
push
dec
movsb
loope
dec
add
imul
mov
mov
mov
shl
pusha
nop
jo
xchg
pop
popa
rcrb
xor
je
push
rolb
sub
sbb
jb
adc
lds
inc
push
xchg
jmp
adc
inc
dec
call
dec
and
addl
push
jl
and
imul
add
add
and
shlb
push
jb
pusha
cmpb
into
inc
inc
dec
roll
add
stos
std
or
adc
cmp
mov
js
cltd
aaa
mov
jl
idivl
fcomps
lahf
cmpsl
idivb
rolb
lods
or
push
jle
mov
bound
insl
dec
out
dec
mov
inc
mov
and
in
mov
mov
rsqrtps
mov
mov
push
mov
adc
stc
pop
pop
dec
les
inc
adcb
pop
leave
ret
dec
push
or
add
inc
nop
lds
dec
addb
jae
xchg
xchg
inc
pusha
rolb
test
lcall
and
push
dec
or
in
dec
mov
push
fbstp
xchg
and
or
orl
cmp
adcl
cmp
lret
mov
jmp
mov
fs
icebp
xchg
mov
cmp
push
call
or
pop
xchg
sbb
jmp
out
ss
rcrb
sub
sbb
adc
xchg
ds
or
push
and
sub
arpl
pop
and
das
inc
xchg
xchg
ja
xor
and
rclb
mov
ret
scas
sub
inc
mov
in
xor
mov
push
xor
or
aam
jnp
movsb
test
mov
fs
jge
mov
xchg
push
adc
mov
push
adc
rcll
fstpt
mov
inc
fists
sub
or
cmpsl
enter
and
adc
cmp
mov
and
add
test
xchg
sahf
lret
dec
aad
and
jbe
add
ja
les
mov
aam
xor
push
mov
test
push
jnp
nop
cmp
xor
repz
ljmp
repnz
inc
dec
lcall
nop
outsl
and
mov
add
and
dec
enter
pop
es
roll
mov
nop
call
outsb
lea
or
in
test
add
or
jmp
andb
pop
cmp
and
inc
and
cmp
xorl
cli
cmp
xor
adc
mov
mov
lods
push
aad
sbb
pusha
inc
mov
mov
cs
pop
push
aam
inc
mov
test
adc
popf
cmp
leave
sbb
jp
sbb
in
lcall
cmp
xor
pop
fsubs
fwait
dec
stos
adc
pop
sbb
xchg
and
mov
les
lret
mov
or
out
je
shll
add
fs
aad
sub
or
adc
sbbl
sub
je
cmp
mov
xor
arpl
mov
loopne
and
inc
sbb
rcrb
add
xorb
mov
cld
lret
lahf
gs
andb
insb
add
dec
dec
je
fiadds
add
mov
orb
or
push
mulb
xchg
push
pusha
test
adc
das
inc
xchg
pop
mov
outsb
sahf
inc
dec
sbb
out
dec
push
imul
ror
adc
or
xor
shr
mov
test
or
shll
dec
movsb
dec
or
test
cwtl
ss
and
lcall
fdivl
dec
into
mov
imul
jne
cmpl
cmp
int
xchg
icebp
stos
xchg
mov
sbb
mov
xchg
and
aad
popa
adc
fs
mov
fldcw
cmp
push
dec
mov
shlb
cs
nop
push
fs
add
les
sbb
mov
xchg
cmp
dec
jo
je
mov
mov
mov
pusha
push
sbb
mov
sbb
popa
add
inc
mov
and
sub
int
xchg
adc
filds
add
jg
add
dec
pusha
cmp
jp
jns
inc
das
mov
add
push
jp
sub
in
inc
shll
inc
mov
xchg
in
and
sar
icebp
xor
test
dec
mov
ret
sti
jbe
dec
push
and
les
pop
jb
or
and
insb
xchg
xor
push
adcl
dec
sub
add
cltd
pop
cmp
sbb
jbe
mov
jb
imul
shrl
ret
and
ss
icebp
adc
fsubl
dec
pusha
and
cmp
or
push
xor
mov
sbb
jbe
test
xchg
mov
imul
nop
push
add
dec
ds
ret
mov
adc
cltd
mov
lock
jne
and
and
push
add
dec
add
in
clc
mov
push
jae
xchg
lcall
sahf
test
movsb
and
adc
xchg
stos
sub
pusha
jo
and
or
inc
sbb
add
loopne
add
imul
jae
popf
dec
mov
loopne
movsb
adc
or
sub
test
add
xor
insl
lods
daa
ret
xor
xor
mov
inc
enter
ficompl
sbb
nop
lods
xchg
jno
dec
push
jl
jae
sbb
and
into
mov
sub
push
cmpsl
adc
lock
push
push
mov
dec
mov
jns
sbb
jo
repnz
inc
adc
xchg
push
lods
jne
sbb
ss
loope
xchg
mov
popf
fwait
xchg
sarl
push
push
push
xor
adc
add
inc
and
in
jns
or
inc
inc
adc
je
test
sub
dec
xchg
sub
icebp
mov
add
cmpsl
xchg
push
mov
xor
or
push
pushf
cmp
adc
mov
pop
mov
pop
dec
or
mov
aas
fs
and
mov
fldcw
sub
aad
stos
xor
sarb
mov
je
lret
or
pop
pop
pop
hlt
nop
rol
in
out
leave
and
lret
xchg
xchg
and
dec
sbb
jns
or
push
repnz
adc
leave
dec
mov
mov
sub
lret
hlt
xlat
addb
sub
movsb
inc
sub
imul
push
in
adc
loopne
sbb
push
jo
test
enter
mov
bound
or
dec
rorb
cmp
jo
ljmp
add
popa
dec
add
leave
xchg
daa
mov
pop
sbb
push
xchg
loop
add
aad
mov
dec
lcall
mov
lret
std
or
xchg
xor
je
lods
add
add
cmp
cmp
stc
stc
mov
out
mov
dec
sbb
rolb
adc
nop
cli
aaa
sub
popa
test
stos
xchg
add
daa
test
popa
mov
dec
ljmp
jmp
inc
add
and
xchg
add
xchg
mov
sub
nop
push
popa
xchg
rorb
loopne
dec
or
xor
test
adc
dec
and
add
pusha
dec
pop
jmp
xor
repz
es
lea
cs
push
mov
aas
aas
lods
pop
popf
movsb
loopne
stos
jno
dec
sahf
pop
mov
pop
mov
dec
mov
push
sbb
cmp
or
push
insb
push
and
dec
pop
mov
mov
mov
adc
inc
inc
xor
addl
xchg
mov
push
adc
and
ret
fwait
xchg
or
adc
jmp
sub
mov
mov
cmp
xchg
aad
pop
sub
push
pop
sbb
dec
sbb
jbe
shll
aam
je
data16
test
or
add
jne
fs
and
sub
mov
inc
push
imul
and
rolb
mov
jle
pop
and
cmp
cmp
addr16
xor
sub
int
or
test
mov
fdivr
cs
add
xor
lret
xor
cmpsl
test
sbb
cli
arpl
les
outsl
gs
lahf
mov
adc
sar
in
push
lods
pop
lea
es
lcall
test
jb
or
dec
push
inc
xchg
xor
jp
and
lock
adcl
test
cs
xchg
xor
push
mov
and
and
test
addb
nop
xchg
lret
dec
push
or
jno
push
mov
or
and
mov
ljmp
pop
or
cmp
push
dec
mov
gs
dec
rclb
sub
mov
ljmp
inc
jmp
xor
adc
js
mov
mov
or
add
movsb
mov
push
adc
or
mov
and
jmp
flds
sbb
sub
jmp
push
xchg
mov
subb
or
and
fs
in
sub
add
push
xchg
decb
xchg
dec
in
or
les
dec
cmp
pop
in
xchg
les
fimull
loop
lret
sbb
inc
stos
mov
mov
addr16
lods
jno
and
mov
cmp
sahf
push
lret
std
test
or
xor
cmp
and
leave
add
pop
pop
lds
pop
popa
add
dec
mov
dec
aaa
dec
cmp
mov
inc
and
mov
mov
push
mov
add
jecxz
dec
sbb
inc
mov
push
imul
and
xor
mov
adc
jne
adcl
xor
incl
xor
adc
shl
dec
ljmp
inc
dec
xor
xor
push
push
xlat
xchg
push
pusha
addr16
mov
sub
orb
and
pop
inc
dec
sbb
pop
pop
rol
js
ret
jns
inc
movsb
mov
loop
jns
dec
and
mov
repnz
enter
xor
mov
pop
shr
inc
sarl
push
xor
add
and
fxsave
mov
rolb
mov
das
sub
mov
sub
cltd
shrb
xor
push
cmp
lock
jl
inc
inc
xor
nop
xchg
inc
xchg
ret
popa
jne
out
pop
es
mov
call
popl
xchg
jbe
xor
daa
rorl
loope
adc
js
push
and
and
dec
dec
xor
inc
push
xor
lcall
add
add
and
test
insb
sbb
jl
cs
mov
or
jae
fdivs
and
and
movsl
cmp
jno
push
or
push
inc
inc
jp
jecxz
pop
shl
inc
mov
addl
inc
or
push
pop
xor
enter
out
roll
xor
add
pop
daa
int3
adc
orl
ret
push
adc
or
lds
in
mov
jge
cmpsb
jl
mov
or
jnp
shll
mov
jno
into
dec
inc
test
aaa
sub
xor
sbb
cmp
andb
and
insb
gs
add
mov
jo
sub
movsb
subb
pop
inc
dec
je
push
jne
sbb
sbb
movsb
inc
mov
mov
leave
push
mov
sub
adcl
xlat
xchg
adc
dec
push
or
and
pop
jmp
cmp
out
dec
or
mov
pop
xchg
cmp
insl
push
mov
popa
adc
pop
test
xor
dec
xor
out
popfw
lods
push
inc
aad
push
mov
test
insb
lds
push
js
jmp
pop
es
mov
push
orb
cmp
push
icebp
xor
and
dec
adc
add
or
and
inc
jl
je
xchg
mov
lret
es
insl
jmp
roll
mov
sub
orl
dec
jo
xor
ds
rol
jns
ds
les
adc
test
stc
orb
cltd
iret
test
mov
mov
lret
call
mov
cld
subb
rcrl
xchg
jo
or
adcb
test
test
pop
push
xor
inc
inc
inc
inc
push
jmp
xchg
inc
and
or
inc
mov
mov
dec
and
sbbb
nop
mov
sub
xchg
or
stc
das
out
subb
mov
jno
call
jnp
or
xor
inc
fnstenv
mov
sub
mov
pop
inc
and
adc
xor
jns
xchg
sbb
nop
sbb
and
dec
mov
xchg
mov
jp
xor
xchg
and
cmpsl
inc
sub
sbb
or
xchg
push
enter
push
and
sahf
sbb
adc
or
push
jbe
das
out
pop
sbb
gs
fnstsw
pusha
pop
sbb
pop
sbb
or
jns
inc
dec
sub
ds
stc
jno
bnd
jns
stc
sub
mov
es
or
inc
out
adc
fwait
std
mov
fsts
and
sbb
aaa
ret
rcl
xorb
jmp
xor
fsubs
sahf
xor
out
pop
int3
sbb
mov
fcoml
adc
scas
movsb
nop
das
lods
nop
out
add
icebp
inc
mov
movsb
addb
in
cmp
adc
loope
push
xor
loop
sbb
mov
adc
adc
or
dec
adc
or
or
daa
cltd
les
pop
repnz
jecxz
cmp
out
add
mov
shlb
add
and
cmp
and
sub
orb
or
or
call
add
push
dec
push
adc
cwtl
add
daa
xchg
orl
inc
push
je
cld
cmp
and
gs
mov
in
fsts
xor
notl
roll
rol
or
add
xor
stos
xchg
push
pop
inc
dec
test
adc
and
push
push
addl
loopne
fcoml
popa
add
pop
dec
pop
or
or
fs
enter
xchg
dec
je
adc
int
insb
aaa
cmp
ret
add
sub
push
test
movsb
xor
sub
xor
mov
aam
cmp
xchg
jno
push
pushf
pop
inc
xor
imul
in
hlt
adc
push
inc
pop
gs
pop
lds
xchg
pop
xor
pop
aas
sbb
inc
xor
dec
mov
pop
xchg
and
insb
or
ret
xchg
pop
cmp
adc
push
lods
mov
add
lret
shll
mov
cmpsb
xor
push
mov
mov
dec
sbb
and
mov
inc
hlt
push
icebp
addr16
add
movsb
mov
loope
add
cs
mov
and
and
je
popa
or
rol
dec
loopne
xor
xchg
cld
or
inc
mov
sbb
stc
xchg
xor
xchg
hlt
in
cli
pop
dec
cld
and
adc
dec
addr16
push
mov
push
inc
mov
out
pusha
in
cmpsb
lret
sub
mov
scas
jb
in
cwtl
in
sbbl
aam
mov
inc
push
cmp
clc
adc
pop
aam
xchg
dec
xchg
or
shlb
fmuls
add
sbb
jnp
add
mov
loop
adc
shll
dec
rcll
aad
pop
inc
add
cmp
loop
stos
pop
enter
out
mov
and
in
cmp
push
push
xor
mov
push
and
inc
cmpsb
in
scas
adc
or
enter
push
add
mov
and
mov
adc
loope
sub
push
popf
inc
inc
jmp
lea
add
inc
dec
push
cs
sub
pusha
ret
xchg
add
jbe
jns
mov
mov
mov
xchg
and
dec
fcoml
xor
out
jne
sbb
lds
mov
mov
mov
dec
fidivrl
cwtl
nop
test
mov
mov
popf
sbb
in
loopne
push
cmp
cltd
inc
or
frstor
inc
xchg
in
mov
add
or
or
jecxz
xchg
mov
mov
push
imul
add
jl,pn
xchg
cs
adcl
xchg
arpl
inc
pop
mov
repz
pusha
dec
add
mov
in
xor
adcb
pop
lods
nop
push
cmp
rorb
mov
or
aam
xchg
mov
cli
sub
call
sub
imul
shlb
adc
sub
pop
sbb
pop
cmp
mov
data16
xor
xchg
rcll
sub
or
adc
outsb
mov
lods
ja
add
cld
lcall
bound
sub
fincstp
jo
and
insl
sbb
or
push
int
add
add
nop
push
addr16
mov
pop
test
pop
rolb
jns
mov
cmp
in
jle
adc
jne
xchg
pop
lret
inc
inc
push
adc
scas
je
jo
adc
call
pop
movsb
fists
aam
int3
cmp
sbb
push
arpl
mov
adc
dec
cwtl
xchg
or
jl
enter
movsb
jl
int3
xor
imul
sahf
adc
mov
adc
mov
xor
add
cs
push
dec
gs
and
stc
iret
inc
jne
inc
or
and
call
ret
mov
cmp
sbb
ss
mov
jne
pop
and
ja
lcall
inc
shrb
popa
push
push
mov
or
cmpps
dec
pop
ret
lahf
mov
je
jb
jb
add
cmpsb
insb
bound
mov
popa
nop
jns
xchg
sub
inc
add
movsl
mov
cmp
stos
pop
sbb
push
xchg
jno
jae
mov
add
cmpsb
xor
lods
mov
std
lahf
xor
adc
popa
jne
add
adc
adc
sbb
shrb
inc
sbb
inc
sub
lret
sub
sbb
sub
add
rcll
fidivrl
mov
sub
nop
out
push
or
inc
xor
push
and
inc
cmp
sbb
adc
mov
aam
xor
lods
lods
ret
and
fadd
mov
sub
ss
dec
push
mov
jne
and
imul
adc
sbbb
inc
js
xchg
add
outsl
pop
add
or
pop
push
jne
xchg
xor
ret
or
cmp
shlb
dec
movsl
dec
xchg
xor
dec
inc
pop
push
mov
xchg
add
arpl
test
xchg
hlt
mov
xlat
mov
push
inc
cmp
andb
ret
repz
xor
aaa
stc
xchg
xchg
lcall
sub
or
ret
push
add
nop
inc
xchg
inc
push
push
aam
popa
or
out
sti
mov
sub
mov
add
and
xchg
push
and
add
in
jp
sub
mov
dec
cltd
pop
popf
sub
or
aas
outsb
inc
add
in
loopne
mov
daa
pop
enter
scas
fsubrl
adc
and
pop
push
sub
les
pop
push
cmp
cmp
ljmp
adc
mov
sub
pop
leave
leave
dec
fistl
and
clc
cmp
lds
dec
or
pusha
push
in
nop
sahf
aad
push
fwait
and
sbb
push
xchg
push
mov
add
mov
cmc
inc
push
das
scas
loopne
dec
mov
aaa
loop
add
mov
enter
in
les
imul
addl
or
flds
movsl
sub
dec
inc
jb
inc
lret
pop
cmp
push
cmp
add
mov
test
iret
xchg
cmpsb
movsb
cmp
and
imul
sub
test
fwait
xor
sub
and
orl
nop
rolb
add
xchg
push
xor
shlb
xchg
lods
popl
mov
and
imul
inc
mov
das
bound
std
sub
stos
pop
fsts
fsubs
mov
mov
xor
adc
lret
add
xchg
mov
ret
mov
cmp
mov
ret
sbb
mov
into
cmpsl
in
jno
sub
sbb
mov
add
add
add
enter
or
ja
stc
test
add
data16
repz
mov
rolb
mov
gs
mov
push
xor
pusha
adc
nop
sub
jo
nop
add
xlat
cwtl
pop
and
mov
sarb
mov
add
into
sub
arpl
adc
jo
test
outsl
call
jne
pop
sbb
add
xor
inc
nop
loop
es
xchg
push
sub
int3
scas
add
adc
pop
enter
ds
rclb
scas
cs
ljmp
fwait
shrb
xchg
xchg
jb
call
jbe
push
ret
pop
adc
popa
add
add
and
and
jg
xchg
adc
arpl
push
shl
pop
or
dec
andb
mov
mov
bound
jecxz
rcll
inc
inc
xor
popa
push
push
xchg
aad
dec
pop
lcall
xor
mov
fs
mov
push
leave
xchg
fdivs
add
movsb
sub
adc
jg
fchs
add
add
sbb
jmp
adc
dec
pop
xchg
enter
sbb
test
push
dec
push
xchg
cmpsb
iret
movsb
imul
xor
and
adc
mov
xor
dec
inc
dec
xorb
add
out
adc
mov
dec
xchg
imul
push
clc
add
arpl
jb
push
call
daa
push
jo
mov
cld
mov
add
clc
dec
rcll
push
push
sbb
xorb
fildll
adcb
shlb
nop
loopne
push
rolb
psllw
loop
or
xchg
or
xchg
xor
hlt
sub
add
adc
enter
rcrl
and
negb
ja
pop
mov
mov
test
sbb
loopne
pushf
cmpsb
ss
inc
ss
mov
ret
mov
arpl
inc
sbb
or
int3
add
add
xchg
mov
push
sbb
ret
and
rcll
push
jp
xchg
xchg
cld
inc
jmp
xchg
ret
jmp
sbb
sbb
or
xchg
jmp
adc
test
nop
test
clc
dec
xchg
les
inc
inc
sbb
pop
loope
pop
or
out
add
mov
jb
inc
adc
sbb
loopne
cmp
inc
daa
lea
pushf
mov
es
repz
pop
xor
call
orb
push
movl
xor
dec
xchg
andl
testl
push
push
and
add
arpl
dec
pop
or
stc
adc
sub
loop
lret
or
mov
mov
sbb
mov
jp
push
rclb
scas
pop
mov
imul
dec
fisttpl
jbe
xchg
inc
pushf
adc
leave
dec
test
pop
and
xlat
adc
and
inc
push
outsl
dec
xor
dec
shlb
je
inc
jp
sub
iret
call
push
xchg
ret
lods
bound
addl
and
andb
push
mov
ret
orl
and
addb
lahf
addb
sub
jge
push
or
jae
jo
in
mov
insb
dec
dec
xchg
lea
ss
inc
pop
les
dec
aaa
roll
inc
sub
pop
or
xchg
or
adc
lock
sbb
push
mov
inc
pop
mov
dec
mov
in
mov
mov
xor
inc
jp
adc
outsl
adc
push
dec
inc
inc
push
adc
stos
and
xchg
fistl
mov
xor
aas
or
cs
pop
adc
sarb
nop
lods
push
jb
hlt
or
dec
pusha
xor
adc
dec
cmp
mov
inc
add
test
xor
sahf
mov
loope
xchg
add
push
adc
xchg
movsb
out
push
pop
leave
test
sbb
rcll
mov
inc
push
push
lret
xor
or
add
add
inc
mull
pushf
jp
add
sub
pop
push
add
add
add
cmp
inc
push
jne
lds
add
sbb
or
cmpl
jns
inc
inc
or
sub
xchg
cld
sbb
lret
shrb
incb
cmp
cs
inc
ret
mov
xor
stc
andl
lahf
add
aam
fmull
and
adc
xchg
or
inc
pop
inc
mov
sbb
into
add
cmp
aaa
repnz
push
jecxz
sub
fadds
fwait
mulb
inc
cli
pushf
adc
sbb
adcl
dec
enter
stc
adc
dec
mov
adc
fmull
pop
adc
inc
inc
sbb
dec
xor
or
mov
jg
movsb
loopne
inc
jbe
ret
sbb
sbb
inc
add
add
add
sbb
dec
je
pushf
popf
mov
aam
or
aas
fcoml
call
inc
lods
pusha
nop
xchg
mov
lds
add
mov
cmp
ljmp
lods
cli
sub
or
sub
mov
and
adcb
subb
or
sub
mov
dec
mov
lcall
sub
pusha
or
mov
add
adc
sub
mov
push
pop
aad
arpl
mov
add
sbb
sub
lock
mov
mov
adc
sbb
lds
sub
dec
adcb
leave
mov
xchg
mov
add
push
push
and
push
in
jg
daa
arpl
add
pop
inc
push
xchg
punpcklbw
add
lods
rorl
nop
scas
or
add
push
mov
pop
add
pop
bound
and
daa
test
and
pop
and
hlt
sbbb
add
test
out
pop
pusha
inc
and
repnz
mov
mov
inc
movsb
aad
xor
dec
mov
fs
in
dec
jne
and
mov
or
and
cmpsb
mov
add
and
jmp
lcall
inc
push
lods
out
je
xor
jg
popa
and
push
mov
xchg
lods
xorb
mov
addb
pop
push
in
ret
mov
idivl
jo
mov
sub
movsb
sub
push
ljmp
mov
mov
andl
xchg
test
adc
lahf
dec
jno
push
xor
cltd
sub
push
sbb
xor
call
mov
or
sub
adc
mov
pop
add
or
enter
dec
xchg
cmp
adc
or
pop
adc
fsubr
mov
mov
adc
dec
test
scas
je
clc
enter
stos
les
dec
xor
mov
pop
dec
and
adc
add
decb
push
and
andl
or
lret
fsts
gs
adc
inc
xor
arpl
pop
shll
pop
and
add
outsl
lods
loopne
add
es
mov
je
inc
pop
fdivrs
js
xchg
imul
adc
inc
pushf
lret
inc
xchg
push
mov
and
and
jae
stos
icebp
dec
mov
mov
and
bound
bound
dec
mov
dec
dec
bound
imul
adc
sbb
les
mov
dec
xor
sbb
pop
fwait
sub
push
or
dec
mov
enter
pop
daa
mov
inc
sbb
stos
sub
and
mov
and
adc
cld
push
movsb
mov
lret
push
xor
inc
leave
sbb
divl
addl
mov
dec
jae
rol
cwtl
pop
and
sbb
dec
and
pop
fs
dec
nop
dec
mov
jns
shlb
mov
or
sbb
inc
not
or
icebp
sbb
pop
ds
sub
mov
or
cs
and
sub
jno
fs
stos
ljmp
xor
mov
insb
lods
push
xchg
push
pop
xchg
jno
arpl
rolb
in
and
fwait
jne
ljmp
xor
and
cmpl
sbb
xchg
pusha
inc
pusha
les
and
push
jge
sbb
mov
stos
fsubrs
fcoml
dec
pop
int
orb
or
pop
test
orb
or
stc
jo
and
xchg
sub
iret
fldenv
sbb
add
out
mov
dec
sbb
addr16
enter
cwtl
mov
je
pop
aam
mov
out
loopne
add
cmp
iret
ss
cwtl
xchg
lcall
pop
lds
rcll
dec
mov
lret
lcall
adc
add
sbb
cmp
adc
dec
pop
pop
mov
add
xchg
insb
fs
insb
mov
and
add
sub
add
push
jmp
inc
sub
nop
nop
add
cmp
shl
ret
arpl
sbb
sub
xchg
add
xchg
sub
mov
test
lods
dec
test
daa
test
inc
sbb
iret
popa
sbb
cmpsb
inc
inc
and
and
adc
mov
add
or
scas
mov
add
xchg
icebp
sub
sbbl
dec
or
nop
or
sub
inc
adc
xorl
fwait
add
test
sub
bound
adc
aam
push
sbb
sbb
orl
push
and
incb
dec
mov
or
push
and
insl
dec
lcall
xor
and
inc
sbb
loopne
dec
cmpsb
imul
push
and
aam
test
pushf
inc
ss
pop
hlt
dec
std
sub
inc
enter
sbb
xor
ret
pop
in
popf
les
xchg
test
xchg
lock
jge
test
push
inc
movsl
sbb
lret
nop
in
leave
sarl
cmp
mov
sbb
insb
push
rolb
mov
roll
add
xchg
xor
dec
push
inc
mov
popa
or
pop
mov
and
rol
inc
je
push
rcr
push
lock
cmpsb
and
ja
mov
lods
inc
push
sub
icebp
jmp
orb
dec
neg
cmp
and
jno
shrl
shrb
pop
add
add
pop
jb
popa
mov
and
sbb
dec
add
sbb
and
test
adc
sub
cli
ret
mov
or
xchg
add
mov
and
stc
pop
pop
roll
out
pop
and
shl
push
roll
sahf
adc
and
es
sbb
andb
lret
shll
pop
inc
inc
pop
or
shlb
pop
aas
xchg
roll
sbbl
cld
clc
adc
dec
mov
mov
fcoms
and
inc
repnz
mov
mov
inc
shll
mov
adc
dec
and
test
mov
rclb
inc
add
dec
mov
bndldx
mov
push
xchg
pop
and
xor
xor
mov
adc
dec
adc
subb
aaa
roll
hlt
cltd
jne
sub
and
xchg
dec
pop
scas
cmp
cmp
add
stc
push
sbb
addb
sbb
push
and
test
jp
inc
and
dec
mov
or
sub
pusha
lods
inc
xor
and
add
add
cmp
mov
sub
or
dec
in
inc
sub
mov
inc
pop
sbb
cmp
sub
stc
outsb
add
add
orl
sbb
push
pop
mov
loopne
lret
or
in
dec
orb
mov
bound
and
jnp
add
mov
or
and
mov
jo
and
ret
in
inc
or
push
jb
sbb
jmp
data16
sub
sbb
inc
lcall
cltd
adc
xor
jns
pop
sbb
mov
pusha
pop
adc
and
adc
insl
add
clc
xor
xor
stc
cltd
stc
mov
and
and
or
pop
jo
xor
sti
xchg
rolb
cs
jbe
and
push
mov
sub
adc
adc
and
in
add
cmpsl
and
xor
add
and
outsl
xor
dec
jne
add
adc
fisubrl
sub
mov
dec
fs
pusha
add
sbb
push
aas
sub
sbb
sbb
adc
leave
sbb
jno
aam
push
xor
or
jo
ret
add
cmpsl
push
aad
xchg
adcb
rclb
push
push
jp
out
push
jno
xor
roll
add
fucomip
xor
add
les
clc
in
pusha
xchg
adc
cmp
test
xchg
lret
inc
or
mov
cmp
sbb
jg
jecxz
in
pusha
add
mov
and
jne
imul
push
sbb
or
js
test
inc
loopne
pushf
pop
incb
enter
call
sub
lret
imul
xchg
repnz
in
xchg
cmp
aaa
xchg
add
mov
sub
pop
shlb
add
add
xchg
add
or
mov
mov
ds
in
dec
push
enter
adc
rol
flds
xchg
sbb
adc
or
push
mov
subl
inc
dec
mov
ss
adc
dec
std
mov
inc
je
or
popf
inc
pop
and
pushf
mov
js
add
repnz
mov
push
nop
lea
fcomps
imul
pop
pop
lock
and
nop
push
inc
pop
cmp
orb
mov
test
sbb
cmp
jle
add
movaps
aas
mov
in
sbb
dec
loopne
mov
xchg
mov
orb
and
xor
sub
mov
clc
loop
aam
lret
add
and
pop
adc
or
sbb
push
mov
or
std
adc
inc
push
repnz
das
shrb
stos
cmp
push
inc
jb
add
push
inc
pusha
inc
leave
pop
dec
sar
dec
dec
add
subb
outsl
lret
xor
sbb
push
push
loope
test
loop
cmp
jmp
test
mov
rcrl
mov
inc
or
pop
mov
je
sub
nop
add
inc
cs
out
or
les
sub
jmp
nop
pop
in
addl
push
pop
addl
imul
in
addl
and
sbb
or
xor
and
and
add
call
outsl
push
jmp
or
push
adc
or
in
fadd
adc
xor
push
movsl
xor
rcll
xchg
push
jo
outsb
clc
adc
cmc
loopne
mov
sub
subl
pusha
xor
sub
inc
sbb
rcrb
bound
inc
add
dec
sbb
sub
ret
push
inc
pusha
sub
adc
es
fs
add
dec
xchg
or
xchg
inc
pop
push
push
test
inc
gs
adc
mov
add
mov
sbb
adc
scas
dec
and
dec
out
add
test
xchg
push
jns
fs
inc
test
push
call
fisubs
add
sub
mov
mov
cmp
pop
dec
add
cmp
add
mov
add
dec
dec
mov
sub
sbb
inc
out
test
sbb
mov
push
or
push
xor
and
pop
fadds
mov
adc
rclb
add
inc
or
and
mov
inc
pop
or
add
es
cld
imul
push
daa
nop
mov
or
popf
or
cmc
inc
nop
addb
inc
and
inc
pop
and
jno
data16
adc
inc
add
mov
inc
pop
dec
stc
in
cmp
inc
jb
dec
dec
cmp
mov
fs
testl
or
fcoms
mov
sub
rcl
inc
inc
mov
xor
std
or
or
jecxz
mov
nop
addr16
add
sbb
test
or
inc
sbb
jb
add
pusha
sub
pop
mov
into
jge
adc
add
push
inc
pop
and
outsl
mov
add
les
cli
sbb
mov
stos
loope
and
or
xor
pusha
push
sbb
xchg
scas
inc
and
inc
inc
and
rorb
stc
push
push
sbb
icebp
jnp
mov
adc
xor
mov
nop
push
or
push
test
scas
pop
rorb
sbb
into
cs
push
xchg
or
cmp
cltd
aad
and
pop
cmp
push
addl
xor
push
jl
addr16
cli
sub
js
xor
jbe
add
jae
mov
pop
xchg
or
out
xchg
or
dec
xorb
cltd
sub
stos
enter
and
xor
add
sub
or
add
lods
xor
mov
adc
cmpl
add
adc
ljmp
xor
adc
lahf
xchg
repnz
push
lea
dec
jp
add
and
sbbb
ret
or
push
les
fmuls
add
sbb
insl
rcll
and
insb
test
push
cmpsb
ja
xchg
mov
cmp
add
aam
je
mov
fnstcw
imul
into
cli
or
adc
mov
push
sub
mov
vpcmpeqb
sub
adcl
cs
push
xlat
adc
mov
add
xor
cmp
imul
mov
inc
and
xchg
fs
mov
mov
jno
pop
lahf
leave
xor
shr
cmp
sub
adc
int3
call
mov
dec
mov
cmc
push
adc
or
add
repnz
mov
loopne
dec
into
stos
mov
fcomps
push
xorl
or
push
je
rorl
and
add
push
jbe
or
pop
test
rorb
add
out
adc
mov
sub
subb
mov
xor
xor
or
repnz
add
add
in
andl
sahf
or
mulb
pusha
and
mov
inc
pusha
xor
push
aad
dec
add
push
push
mov
in
sbb
aam
push
inc
mov
sbb
jae
xchg
or
or
sbb
and
inc
pusha
push
xor
addb
outsl
sbb
gs
add
dec
scas
les
test
inc
inc
lcall
sub
adc
jbe
mov
jno
inc
clc
vrcpss
gs
sub
and
adc
and
lds
push
sub
inc
mov
pop
inc
pusha
enter
mov
es
pop
out
enter
dec
mov
popf
es
loope
add
aad
xchg
mov
fnstsw
andb
push
push
flds
lcall
and
loope
push
sub
scas
test
test
rol
jb
adc
push
fiaddl
inc
xorl
shll
xchg
add
les
cmp
aam
jo
mov
dec
xchg
adc
xchg
fs
mov
lea
xor
push
mov
sub
add
mov
and
and
sub
cmpl
sbb
popa
push
lret
adc
sub
add
adcl
sbb
popa
adc
pop
rolb
xchg
or
push
and
lret
add
testb
jmp
xchg
je
and
lret
adc
xor
scas
add
inc
or
nop
xor
stc
or
insb
push
add
inc
jb
jne
dec
push
xchg
pushf
adc
inc
push
pusha
sub
cmpsb
loopne
or
add
xchg
inc
push
mov
add
leave
inc
loopne
xchg
outsl
dec
pusha
mov
repnz
inc
bound
push
rorb
test
je
ret
add
inc
and
nop
faddl
mov
inc
and
sbb
push
pop
and
and
nop
lds
addb
cmp
lods
mov
mov
adcl
movsl
imul
mov
int3
nop
nop
sbb
mov
pop
aaa
decl
shlb
push
lds
push
push
jp
popa
dec
add
and
in
inc
addb
pop
add
add
adc
mov
in
jl
push
jbe
add
xor
and
fimull
pop
mov
add
ror
movsb
push
sbb
pop
and
int
dec
fs
stos
push
xchg
adc
cmp
adc
stc
xor
add
sub
adc
jbe
fwait
pop
add
rclb
xchg
jbe
or
and
adcb
fs
adc
pop
lret
test
push
aad
adc
xor
jmp
adc
adc
pop
aad
push
lret
inc
shlb
sbb
cmp
push
test
and
xorl
push
inc
dec
inc
mov
push
or
xor
lds
xchg
movsl
les
dec
and
aas
sbb
adc
in
mov
dec
shrb
mov
js
sub
push
rclb
add
xchg
leave
es
add
insb
add
pushf
dec
les
push
stc
add
xor
add
xorl
mov
xchg
adc
sbb
pushf
int
icebp
les
add
xor
pop
add
add
adc
xor
andb
fidivs
and
mov
mov
nop
jl
repnz
push
push
addb
sbb
add
pop
icebp
xchg
xor
cmc
push
push
scas
push
insb
and
add
or
jl
adc
les
sbb
repz
dec
push
push
push
pop
adc
prefetch
ja
pop
add
nop
lods
xchg
push
xor
inc
ljmp
bound
push
mov
lods
push
movsb
sub
add
enter
in
ljmp
les
and
push
add
mov
xchg
add
pop
and
fcom
ret
push
add
pop
sbb
orl
bound
push
mov
test
fs
mov
rorl
lahf
outsb
or
insl
out
sub
and
add
test
add
ss
or
jo
in
sub
lret
xor
or
ret
pop
sub
or
scas
xchg
add
shll
cmp
enter
pop
add
mov
in
lds
imul
xchg
or
movsb
aam
lods
mov
lods
lcall
lret
fbstp
and
mov
sub
push
add
add
ja
repnz
gs
inc
repnz
ret
inc
adc
add
jne
mov
lods
imul
inc
mov
clc
inc
mov
xchg
ja
add
fwait
scas
adc
test
mov
adc
inc
cltd
into
loop
push
test
loopne
int3
mov
loopne
lahf
loope
pop
fists
jp
andl
mov
les
or
dec
sub
and
mov
imul
cmp
imul
xchg
xchg
sub
xor
leave
dec
pop
push
cmp
aas
jl
push
inc
je
inc
inc
test
and
push
dec
mov
xchg
xchg
cmc
inc
push
mov
mov
scas
jne
sbb
add
cmp
enter
mov
dec
leave
inc
repnz
rorb
int3
mov
dec
jns
jb
add
insl
sbb
adc
icebp
mov
jo
cmp
les
and
je
aad
jns
addr16
or
or
dec
jo
lock
inc
fcoms
das
inc
push
je
daa
aam
inc
sub
pop
dec
or
gs
sbb
jnp
xchg
xchg
dec
xor
mov
stos
cmp
sarb
lods
push
test
push
sbb
and
and
bound
lods
add
or
mov
adc
xor
cmp
gs
and
inc
call
cmp
mov
and
nop
push
dec
arpl
push
pop
pop
adc
lods
and
pusha
gs
scas
dec
orl
data16
inc
xchg
dec
dec
add
pop
dec
and
jecxz
cmpl
push
lcall
cmc
cmpl
outsb
jb
orb
loop
pusha
inc
inc
addr16
out
mov
inc
xor
sub
cmc
xor
xchg
add
xor
fimull
adc
jp
test
sub
push
add
dec
inc
dec
or
add
add
js
xchg
shlb
into
mov
loop
shll
shlb
pop
dec
out
add
andb
cltd
xchg
ljmp
cmp
push
testl
frstor
and
aaa
adc
cwtl
nop
pop
push
cwtl
and
or
stos
xchg
lods
mov
cltd
or
lahf
gs
push
test
movsb
sahf
sbb
and
sti
shrb
subl
push
dec
jnp
sbb
inc
or
cmp
or
in
inc
repnz
push
jbe
les
punpckldq
adc
das
sbb
cmp
fcoms
cmp
pop
or
jg
dec
mov
dec
push
mov
add
loopne
mov
sub
movsl
mov
add
mov
arpl
cmp
inc
fnsave
add
xor
shr
push
ss
dec
arpl
sbb
xchg
rolb
call
push
cmp
pop
add
dec
lcall
mov
nop
les
cld
les
mov
iret
pop
or
and
nop
dec
pop
dec
les
fsubrs
jne
sbb
mov
xor
and
push
clc
in
mov
sarb
cwtl
lods
ljmp
xchg
xchg
push
clc
test
pop
xchg
push
icebp
push
add
mov
jnp
out
sub
push
or
subb
add
and
inc
rorb
xor
adc
add
mov
and
xor
andb
cmpl
inc
cmpsb
jae
mov
sub
xchg
and
mov
xor
mov
mov
and
sbb
cmp
xchg
pop
sbb
adc
pop
leave
pop
or
push
rolb
sbb
inc
sbb
cwtl
adc
dec
mov
test
inc
sbb
xchg
add
sahf
test
mov
inc
lret
cmpsb
pop
push
or
fisttps
add
mov
movsl
add
in
cld
flds
mov
xchg
and
shlb
cltd
xor
and
dec
pop
xor
or
add
dec
add
nop
add
dec
mov
and
or
xor
adc
or
push
aad
inc
or
sti
xchg
pop
inc
enter
add
orl
cli
add
sti
shl
repnz
mov
sti
in
xor
push
cmp
rcl
mov
mov
dec
inc
inc
pop
mov
mov
mov
test
imul
testb
sub
push
sub
dec
xor
add
bound
mov
xchg
sbb
sub
xor
int
cmp
imulb
jmp
xchg
cs
xor
repz
and
dec
repz
and
and
mov
xor
pusha
scas
jle
jno
test
fwait
in
int
jg
pushf
cwtl
or
jg
push
xor
mov
inc
int3
mov
fdivl
lea
fcmovnbe
mov
clc
mov
pop
loope
int3
faddl
out
and
mov
call
std
xor
mov
and
mov
lods
flds
loope
mov
popf
lret
xor
enter
add
inc
xor
push
leave
mov
enter
push
or
test
cmpsl
ljmp
inc
and
call
repnz
xor
mov
mov
add
inc
test
test
icebp
adc
jge
jb
inc
ss
mov
cmp
push
or
push
mov
inc
and
xchg
mov
cwtl
mov
add
ret
out
xor
andb
or
jmp
sarl
fsubrl
aam
dec
ja
sub
and
enter
xchg
cmpsl
fnstenv
sbb
xchg
jo
call
mov
orb
int
xor
repz
fucomp
lret
bnd
shr
jmp
loope
jbe
shll
in
xchg
jecxz
sarl
xlat
fxch
rcrl
pop
fsubs
dec
ja
xor
mov
in
call
cmp
pushl
arpl
xor
add
int3
mov
mov
std
dec
push
mov
push
mov
pop
mov
cmpxchg
push
cmc
loop
mov
int
xor
in
ljmp
xor
test
scas
fidivs
cmp
js
add
das
icebp
cmp
push
xor
inc
int
xor
mov
dec
cmp
inc
lret
mov
pop
pop
pop
push
inc
mov
adc
pop
cmp
fs
outsl
mov
add
cmp
pusha
call
mov
pusha
fdivl
push
mov
jmp
int3
enter
mov
data16
pop
adc
sub
mov
outsl
add
clc
nop
mov
jo
jae
jmp
inc
or
out
ret
fldt
add
pushf
sbb
js
fldt
dec
std
add
mov
mov
jmp
adc
cmp
cmp
adcb
lods
and
cmp
outsb
sbb
pusha
test
or
fcmovnbe
sub
inc
test
sub
mov
mov
jecxz
xor
iret
mov
add
or
std
notl
dec
fdivl
mov
inc
xor
mov
jo
cwtl
cmp
scas
sar
xchg
pushf
mov
out
std
std
repz
cmp
mov
mov
aad
or
mov
ret
stc
fcompl
add
popa
jmp
xor
dec
push
push
mov
push
xor
xor
and
mov
insb
xchg
loop
push
xchg
cmc
dec
lods
sub
mov
push
mov
repnz
lea
notb
jmp
lods
jmp
xor
mov
or
imul
mov
mov
test
xchg
loope
jnp
icebp
xchg
je
fsubs
sbb
pop
or
mov
loop
je
dec
adc
lds
xlat
hlt
data16
inc
xor
mov
jle
sarb
mov
js
loope
add
sub
cmp
dec
jne
outsl
cld
fs
or
and
cwtl
lds
mov
enter
movsb
jnp
rclb
or
cli
pcmpgtb
in
test
pusha
fs
test
fs
test
flds
enter
jo
leave
add
push
mov
mov
push
lahf
sub
jnp
xor
inc
dec
mov
out
shll
pop
and
sbb
mov
sbb
and
dec
sbb
sbbl
sub
scas
push
jle
cmpsb
mov
imul
ja
xchg
mov
pop
mov
lods
rclb
sbb
or
sub
sub
out
adc
int
inc
std
mov
xor
push
clc
mov
cmp
mov
inc
call
leave
push
ret
inc
jg
push
or
cmpsl
adc
add
pop
fs
mov
sar
inc
mov
pop
dec
int
inc
lret
test
flds
cmpsb
inc
ret
test
lds
insb
cmpl
and
mov
mov
xor
mov
and
mov
aad
mov
int3
incl
mov
dec
cmp
popl
js
dec
mov
or
jae
add
cmp
testl
mov
push
mov
mov
mov
mov
pop
mov
xchg
fstpt
cs
mov
lds
std
ja
pusha
push
mov
movsl
xor
movsb
cmpl
inc
das
lret
mov
fnstenv
mov
cwtl
push
mov
xor
inc
test
xor
add
aaa
pop
std
fidivs
js
xor
ljmp
xchg
xor
mov
xchg
imul
lea
mov
stos
mov
into
mov
jns
mov
lret
in
pop
outsl
cld
ret
cmp
jmp
mov
mov
int
cli
mov
or
and
fldt
rcrb
repz
push
xchg
iret
out
xor
push
mov
pop
dec
cmp
outsb
fbstp
dec
out
mov
mov
hlt
pushf
mov
inc
test
repz
mov
push
mov
rcr
xlat
xor
push
outsl
or
mov
xor
add
popf
xchg
jl
xchg
jb
add
or
and
pushf
lods
mov
dec
inc
or
scas
jo
sub
ss
rorb
aas
pop
pushaw
sub
jo
std
sahf
jae
fildl
clc
and
xchg
cmp
sub
xor
adc
enter
adc
ja
cmc
adc
js
lods
push
inc
testb
push
cmc
stos
dec
or
mov
jo
ss
jmp
mov
sbb
mov
push
adc
lods
jne
outsl
jo
mov
jbe
pop
popf
cmp
aas
xor
ja
cmp
xor
clc
lcall
mov
dec
loope
xor
mov
dec
cmpsb
mov
fcom
int
test
or
and
mov
and
xor
or
and
jno,pn
add
xchg
push
sub
js
jae
fs
mov
or
scas
adc
push
stos
dec
and
adc
pop
and
and
scas
hlt
hlt
ss
jae
cmpb
addr16
repnz
push
in
push
repnz
cmp
mov
push
leave
test
or
and
mov
push
add
push
push
cmpsl
mov
mov
mov
or
flds
adc
push
ret
inc
aas
sbb
jbe
inc
sub
push
jge
mov
push
out
test
sub
in
push
leave
push
add
lcall
push
inc
fldcw
scas
and
and
inc
mov
push
dec
sub
mov
or
subb
mov
mov
adc
and
mov
fldenv
ljmp
cmp
mov
imul
sbb
loopne
xlat
popa
addb
dec
sbbl
add
scas
in
faddl
add
in
add
sti
jg
sti
add
neg
add
mov
add
sti
fwait
add
notl
fisttpll
in
ss
push
fcomip
lahf
pop
sbb
daa
jnp
not
and
paddd
filds
xor
repz
movntq
out
fnsave
repz
daa
std
repz
jnp
cld
pop
dec
incb
pop
lods
cltd
lods
jns
sti
mov
mov
ljmp
inc
and
jae
mul
or
mov
mov
pop
aas
fcomip
scas
mov
xor
pop
lahf
fstpt
int3
mov
jge
fcmovnbe
pop
std
sti
lahf
lahf
jmp
scas
sti
imul
fwait
setg
mov
negl
sti
dec
repz
and
mov
jnp
pop
fistpll
dec
xchg
pop
fs
testl
fstp
fistpl
inc
xchg
inc
clc
das
fwait
or
fbld
add
pushf
imul
pop
idivl
aaa
mov
das
inc
out
cmp
jg
sti
scas
out
lock
cmpsl
pop
cmp
mov
mov
cld
insl
in
cmp
pop
cmpsl
dec
incl
and
xor
imul
jnp
es
jg
pop
scas
jo
ret
loope
sub
mov
push
xlat
divl
jecxz
inc
add
pop
scas
jnp
notl
out
mov
xchg
lahf
comiss
mov
arpl
mov
bound
repz
das
js
mov
pop
pop
addr16
xchg
iret
negb
pop
daa
out
add
loope
mov
ja
sbb
pop
pop
aas
inc
mov
xchg
sub
fwait
scas
fsub
icebp
js
ret
pop
jg
in
int
xlat
inc
mov
arpl
cmp
psrlq
fdiv
and
scas
xlat
or
jp
push
mov
sti
adc
in
imul
xchg
loope
out
fcompl
pop
and
divl
das
cld
repz
aaa
ja
bound
inc
addr16
decl
mov
push
lahf
add
mov
filds
aas
inc
decl
scas
and
call
sub
leave
xlat
mov
rcrb
ljmp
rcl
xchg
std
cltd
cmc
inc
mov
jecxz
pop
sti
sub
stos
mov
fists
push
out
pop
sbb
leave
push
daa
mov
outsb
insb
fdivrs
sbb
mov
loop
js
xchg
dec
push
mov
mov
pop
inc
dec
jge
fstpt
mov
test
mov
outsl
lret
pusha
dec
and
lcall
push
mov
into
or
call
lods
leave
cmpsl
movsl
sbb
dec
cmpsl
ret
cld
ret
mov
xchg
inc
enter
xor
repnz
pop
daa
lds
repz
cmp
jne
xchg
repz
sbb
incl
shlb
ja
loop
mov
sub
xor
out
inc
fldenv
shll
pop
pushl
aam
mov
test
sbb
stos
jmp
mov
push
mov
cwtl
jg
jb
xorb
or
or
lcall
cmp
lret
pusha
adc
hlt
or
xchg
sub
das
iret
push
in
xor
inc
popa
outsb
arpl
dec
outsl
pushl
mov
imul
jns
gs
je
jb
je
push
popa
sti
fnsave
add
push
push
outsl
adc
insb
popa
jae
cmp
insl
jo
jb
push
je
outsb
addr16
and
fs
pop
sti
insb
outsl
push
fs
gs
inc
outsl
push
and
out
aas
ss
adc
dec
outsb
outsw
inc
js
inc
outsb
jne
push
jns
mov
insl
dec
outsl
arpl
jae
push
jbe
aaa
jmp
int
outsb
insl
outsb
je
pop
pushf
gs
mov
divb
popl
insb
inc
mov
jle
jb
jo
and
inc
gs
outsl
jns
dec
popa
in
mov
imul
dec
lcall
mov
inc
mov
mov
cmp
cld
imul
js
xor
inc
cld
test
insb
gs
xor
mov
jnp
push
outsl
mov
sahf
xor
pop
insb
mov
lods
mov
pop
mov
dec
jae
inc
inc
or
cmp
adc
out
jmp
pop
stc
xchg
push
xchg
adc
cmpl
dec
jnp
not
lahf
ljmp
stos
lods
insl
pop
fsubrl
pop
ss
or
dec
sub
es
adc
adc
imul
int3
sbb
and
loop
call
lock
outsl
ja
push
in
or
or
in
pusha
cli
push
jae
push
push
test
sbb
push
inc
xor
xchg
inc
imul
inc
or
sub
je
fnsave
push
or
jns
jae
sub
out
pop
outsb
jae
arpl
mov
dec
add
into
loop
jo
dec
xchg
outsb
pop
std
pusha
fcomip
lock
dec
inc
jnp
les
cmp
test
cmp
push
out
arpl
push
jne
push
out
dec
lcall
mov
ja
outsw
adc
mov
popa
test
push
or
addr16
int3
pop
add
push
ljmp
or
push
adc
or
jbe
push
dec
fs
dec
mov
jnp
je
inc
imul
jg
popa
mov
or
pop
sbb
outsl
imul
jecxz
jns
jecxz
cmp
pop
in
xlat
push
dec
addr16
inc
hlt
pop
inc
imul
sahf
loop
test
mov
xchg
scas
dec
gs
sahf
std
sbb
repnz
bound
inc
lock
jne
sub
pop
xlat
pop
loope
xor
pop
out
jb
int3
pop
fstpt
jo
or
divb
mov
sub
insl
lods
mov
imul
mov
fs
inc
pop
aaa
and
inc
daa
bound
xor
mov
movsl
xlat
data16
outsl
jae
jo
xlat
out
push
sbb
xor
jo
xchg
mov
cld
pop
inc
dec
mov
or
add
sbb
repnz
imul
lods
push
mov
mov
push
pusha
push
inc
movsl
mov
jle
push
outsl
insb
les
jne
or
and
push
inc
cmc
and
dec
js
stc
testb
scas
aaa
lods
aam
cld
lahf
inc
xchg
das
inc
nop
and
push
inc
xor
jne
inc
lret
call
dec
sbb
dec
or
xchg
inc
dec
repnz
into
sbb
add
push
outsl
in
cs
arpl
imul
sahf
int
leave
insl
outsl
push
ja
sbb
fs
dec
add
test
mov
push
push
jae
fdivs
mov
adc
adc
pop
dec
adc
xor
bnd
gs
mov
fistl
js
add
mull
je
testb
in
dec
pop
dec
sub
insb
pop
push
jb
dec
mov
fidivs
daa
or
jae
mov
loopne
pop
push
scas
ss
mov
mov
push
dec
adc
push
outsb
aaa
inc
bound
dec
cwtl
jmp
imul
lods
mov
dec
and
negl
xchg
es
mov
pusha
cmp
test
jns
mov
mov
add
sarl
repnz
dec
arpl
insb
addr16
je
push
push
xor
or
dec
outsl
mov
sarb
dec
ds
jbe
jecxz
imul
mov
test
push
popa
outsl
inc
pusha
push
sbb
lea
es
push
mov
push
pusha
dec
movsb
jecxz
or
test
cmp
ret
inc
inc
xchg
dec
cmpsl
fld
es
inc
mov
lcall
push
dec
mov
inc
enter
sbb
ret
xchg
push
jno
xor
mov
inc
mov
push
lods
lahf
shl
or
into
loop
push
inc
xchg
or
push
adcl
inc
inc
insb
stos
and
cmpsl
cwtl
mov
xor
push
arpl
jecxz
add
sub
sub
xchg
mov
jmp
andl
int
xchg
rol
das
xor
subb
push
xlat
mov
fwait
or
cwtl
popa
inc
sti
adc
and
les
dec
push
rcrl
outsl
adc
or
sbb
int
mov
addr16
inc
test
outsb
push
fbld
xor
jl
insl
inc
nop
mull
insl
or
jp
je
push
in
adc
or
jmp
int
ret
dec
popf
mov
iret
les
es
or
cmpsl
inc
dec
mov
int3
jecxz,pn
inc
add
and
nop
dec
and
fs
add
push
stos
adc
jge
pop
ja
jae
or
loope
test
mov
orl
push
shlb
test
add
jle
pop
ret
in
xchg
mov
xchg
xor
mov
cs
pusha
or
and
mov
push
bt
cmpsl
ss
aaa
jne
in
cmp
pushf
fidivrs
test
mov
aad
ret
jp
movsb
lock
popa
or
sysenter
pop
xchg
xchg
ret
xor
dec
add
mov
ror
stos
and
lds
add
jns
cmp
jecxz
rolb
jne
sahf
push
inc
add
dec
add
inc
loopne
sidtl
add
test
test
adc
mov
mov
push
or
xchg
cmp
or
into
add
cmp
xor
pop
push
add
imulb
inc
or
cmp
and
add
je
pop
ret
ret
nop
jmp
and
stos
add
jo
popa
sti
mov
into
jbe
mulb
sbb
inc
add
jb
push
push
rolb
dec
inc
push
daa
es
mov
jl
adc
xor
sub
dec
leave
cmp
dec
or
add
add
scas
lds
dec
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
