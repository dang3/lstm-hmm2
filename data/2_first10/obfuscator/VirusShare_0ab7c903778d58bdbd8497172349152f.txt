add
in
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
mov
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
orb
add
add
add
mov
push
mov
sub
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
add
xor
pop
push
lea
adcl
mov
mov
bswap
pushl
pop
shr
sub
mov
cmp
jb
cmp
ja
pop
jmp
incl
add
sub
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
add
sub
push
pushl
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
mov
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
add
mov
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
push
push
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
push
push
push
call
add
pop
sub
mov
add
ret
add
add
add
mov
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
mov
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
add
add
sub
push
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
in
pop
mov
push
mov
push
mov
push
mov
call
push
pop
mov
mov
mov
sub
dec
and
mov
mov
sub
sub
push
pop
xor
sub
or
adc
add
mov
pushl
sub
sub
pop
bswap
add
cmp
jne
mov
call
sub
ret
add
mov
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
add
add
mov
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
sub
push
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
add
mov
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
sub
push
pushl
pushl
push
push
call
add
pop
sub
mov
add
ret
add
add
add
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
mov
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
add
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
add
add
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
add
in
into
mov
les
imul
xor
ficoms
bswap
jne
xor
int3
push
push
stos
stos
inc
cmp
mov
dec
nop
int
mov
inc
mov
stos
mov
outsl
hlt
in
cmp
pop
sbb
test
stos
and
mov
call
pop
fldl
iret
mov
and
mov
test
loop
xor
and
movsl
xchg
and
inc
cmp
sbb
in
dec
cmp
test
sub
jno
jo
loopne
in
sahf
push
lret
sbb
jl
xor
sub
adc
orb
jge
ficompl
sub
cmp
sbb
xchg
sbb
cmp
int3
shl
jge
push
lods
push
jnp
mov
lods
push
and
shrl
ds
inc
je
mov
xchg
jae
mov
xchg
mov
jge
imul
or
iret
sbb
inc
inc
dec
iret
push
mov
mov
adc
mov
scas
inc
into
fistl
xor
sub
movsl
loopne
lods
cmp
jge
adc
test
into
xchg
adc
and
xor
iret
movsl
in
lret
jl
adc
add
xlat
cmpl
cmc
inc
pop
out
clc
sbb
or
inc
pop
sbb
sbb
in
inc
imul
out
cmp
data16
mov
xchg
sbb
movb
mov
insb
push
out
pop
mov
pop
mov
pop
decb
mov
decb
dec
mov
and
lea
arpl
push
loopne
loop
pop
sbb
insl
call
lock
mov
sbb
jno
cs
popa
mov
cld
rcll
mov
idivb
lret
adc
inc
data16
adc
lods
add
push
mov
scas
cmpsl
xor
mov
scas
cmp
xor
or
push
scas
lods
add
and
push
into
in
popa
sahf
and
and
stos
in
ljmp
fs
mov
out
test
lds
iret
addr16
pxor
jl
stos
ds
jne
dec
mov
out
popa
cmp
popa
pop
push
movsl
fildll
das
pop
mov
cltd
push
xor
adc
mov
push
jns
in
gs
lcall
jge
push
cmp
fwait
xlat
push
cmp
adc
fisttpll
aaa
lcall
lret
jb
xchg
mov
xor
pop
sbb
cmpsb
mov
sbb
sub
inc
inc
jno
sbb
sub
pop
cmp
fwait
xor
int3
stc
repnz
jp
pop
cmpsb
push
xchg
daa
jns
fldt
jmp
call
fsubrp
fdiv
gs
dec
jnp
push
arpl
rep
xchg
aas
in
mov
imul
mov
cmp
push
jle
lcall
mov
mov
addr16
or
mov
jne
fisttps
sbb
fisubs
pushf
mov
pop
mov
fs
jns
adc
cltd
jmp
mov
enter
stos
aas
push
fwait
enter
sarb
pop
pxor
pop
adc
js
jae
outsb
pop
mov
lret
dec
jle
mov
push
or
shrb
dec
repz
rcl
push
push
mov
add
cmpsl
ss
aam
and
insl
cmp
xchg
es
mov
jmp
imul
int3
aad
fstl
insb
and
jnp
lret
xor
fimuls
je
add
test
mov
stc
addr16
push
lds
mov
xchg
dec
xchg
cmp
xchg
imul
mov
nop
outsl
fisttpl
xchg
int
shrb
and
mov
fstl
mov
in
push
jmp
out
xlat
sub
pop
repnz
sarb
adc
mov
arpl
loope
mov
fisubrs
xchg
inc
push
addr16
repnz
cmp
gs
gs
adc
and
es
sub
iret
cmp
mov
cmpsb
or
repnz
int3
fsubrl
mov
in
or
je
mov
cmp
stos
shrl
dec
rclb
or
shl
cmp
xor
xor
pop
jne
test
int
mov
mov
xchg
xor
icebp
arpl
jg
imul
sahf
mov
js
xchg
ror
cmc
add
mov
push
outsb
in
rorl
imul
test
push
dec
mov
sub
push
push
jp
loope
cli
rolb
adc
in
scas
stc
into
adc
push
gs
pop
mov
mov
or
inc
sbb
pop
cli
add
rol
jno
inc
mov
cmp
in
bound
ja
dec
std
dec
push
pop
sub
shl
adc
lahf
inc
daa
mov
mov
jae
mov
pop
push
mov
call
divl
jno
mov
rorl
fstpl
or
or
mov
mov
int3
sbbl
cmpsl
leave
movsl
pop
cmpsb
pop
ss
push
push
fucom
in
jp
mov
outsl
sbb
mov
xlat
sbb
pop
leave
int
xor
mov
fsts
dec
mov
stos
les
stos
push
pop
mov
out
mov
jge
dec
sub
fisttpl
ret
cwtl
push
int3
xor
movsb
in
lods
dec
insb
push
cmp
dec
mov
add
mov
mov
jle
movsl
add
push
scas
add
in
insb
add
cld
ljmp
inc
adc
shrl
and
sub
and
std
int3
ret
xchg
and
scas
imul
xchg
jno
daa
xchg
test
inc
mov
and
pop
inc
lea
mov
dec
sub
stos
jns
scas
scas
pop
sbb
dec
or
fdivp
imulb
xchg
les
add
call
and
rorl
mov
inc
rorl
mov
cmp
fld
roll
sub
sub
jmp
sub
cmp
das
rcr
shll
outsl
jecxz
addr16
add
stos
mov
repnz
.byte
popl
