push
call
ret
ret
aas
jg
dec
and
pop
cmpsl
mov
mov
adc
xchg
xlat
lods
stos
and
pop
or
aas
xor
sub
shr
mov
lcall
xchg
dec
bound
mov
push
out
testb
negl
sbbb
add
cmp
pop
dec
jnp
lcall
xchg
ret
repnz
cmpsb
pop
scas
insb
xchg
lods
push
or
fildll
aas
dec
sub
orl
fcoml
and
add
test
js
jns
sti
js
add
shl
pop
sbb
mov
cmc
sbb
paddw
in
aas
sbb
cld
pop
test
pop
push
fdivs
pop
scas
mov
test
cmovae
adc
xor
cltd
jmp
mov
dec
test
mov
in
fbstp
push
mov
cmc
mov
int3
xchg
sub
dec
lock
inc
mov
es
sti
fnstcw
pop
rcrl
jbe
out
mov
cwtl
cmp
inc
clc
imul
cmp
cmp
pop
out
int
push
mov
cmp
les
sbb
lea
lcall
mov
fs
inc
and
or
cli
shlb
fcoms
mov
js
sub
adc
mov
cwtl
int
sarl
mov
cmp
push
cmpsb
and
lret
imul
call
dec
sub
jge
sub
adc
icebp
cmc
je
xor
in
push
mov
lock
mov
mov
ret
adc
mov
hlt
sti
mov
sub
les
mov
push
sub
sub
aad
in
push
ljmp
xchg
jmp
shrl
sub
fisubs
pop
fldl
fs
dec
lret
outsb
dec
sti
test
or
mov
inc
sbb
sub
add
sbb
out
gs
js
cld
push
jo
add
mov
or
push
pop
mov
lods
je
mov
xor
cmp
mov
xchg
cmp
enter
mov
jae
xor
dec
cmp
js
jae
jp
scas
cmp
mov
and
mov
iret
mov
inc
or
scas
icebp
cli
imul
roll
in
loopne
mov
pop
pop
jl
pop
ja
inc
mov
lock
andl
loope
pop
push
dec
xchg
mov
das
sar
call
and
insb
ret
mov
mov
leave
fs
pushf
scas
daa
cli
jbe
mov
out
push
or
ja
outsl
jecxz
push
sbb
pop
movb
int3
mov
sahf
jns
leave
cli
sub
movsb
inc
lds
dec
rolb
jae
loop
out
stos
inc
and
xor
jle
das
lahf
inc
pushf
dec
mov
shlb
xor
adc
cmpsb
lahf
sub
popf
hlt
jmp
call
jb
stos
mov
movsb
push
movsb
sub
mov
fs
xor
cmpsl
das
loope
test
sbb
fcomp
push
lret
mov
and
loope
jle
aad
loop
mov
push
jne
cmc
shrl
xor
or
mov
mov
inc
pop
fdiv
enter
std
fs
je
cli
dec
mov
cmpl
out
jae
cmp
inc
push
xlat
fcomps
or
mov
fidivl
ud0
int
popa
aas
hlt
push
ss
call
pop
scas
fs
movsl
mov
sub
adc
mov
ret
mov
data16
ja
lret
fstpl
jbe
pop
out
cmp
mov
lcall
pop
jb
faddl
or
sub
mov
lcall
rol
push
xor
popf
clc
cmpsl
mov
inc
pop
push
sub
mov
test
pusha
lods
push
out
ja
add
fadd
adc
cmp
and
call
adc
cmpsb
cmp
dec
dec
in
pop
pop
scas
shlb
pushf
push
or
push
push
jg
cmpsb
xor
cmpsb
sbb
and
popa
popa
ljmp
into
cmp
rorb
xchg
stos
stos
lods
mov
pop
mov
push
push
push
add
into
dec
adc
xchg
inc
cmpsb
xchg
mov
or
iret
ljmp
ret
loope
repnz
and
xchg
pop
test
nop
push
fwait
jle
repnz
push
mov
jo
mov
xor
or
mov
loop
mov
and
and
pop
loop
xchg
add
mov
jnp
fldcw
xchg
mov
sub
mov
adc
lret
mov
rorl
dec
fiaddl
test
les
push
cltd
pusha
inc
pop
insb
xchg
test
mov
or
xor
pop
pop
popf
cmp
adc
ret
loop
xor
and
xchg
jne
enter
inc
mov
stc
shll
insb
fsub
add
jmp
mov
xchg
push
insb
aaa
jb
fmul
sub
mov
lea
scas
lea
inc
jg
cmpsl
adc
mov
shlb
cltd
or
outsl
neg
je
lods
sub
sub
ss
fidivrl
insl
in
jns
mov
cmpsl
aas
jno
and
test
xchg
aas
fs
lds
xchg
jle
sbb
add
adc
xchg
sbbb
and
je
jge
dec
xor
jns
adcl
out
mov
test
adc
iret
mov
pop
cmp
repz
dec
mov
inc
xchg
push
inc
sbb
mov
push
fcomp
in
fmull
stos
jbe
xchg
mov
push
popa
enter
insb
mov
and
pop
pushf
add
aaa
imul
fsubl
aam
mov
jecxz
ja
les
fisttps
xchg
sub
pop
add
dec
pusha
push
cs
sub
clc
cmp
mov
repz
in
ror
jne
fcoms
mov
or
xchg
mov
mov
push
push
pop
mov
sub
cld
int3
lret
jge
sbb
sti
pop
sub
rcpps
es
cmpsl
adc
insb
popa
adc
outsb
and
je
addr16
push
mov
out
dec
xlat
jo
cmp
loope
out
das
jno
xchg
jno
adc
push
xor
mov
dec
stos
test
mov
dec
into
insl
pushf
mov
cmc
gs
daa
out
dec
shl
out
inc
inc
pusha
cld
sti
dec
bound
push
rcr
mov
notb
xor
flds
push
cld
fcmovb
and
xor
test
and
or
sarb
mov
push
sub
adc
ljmp
jmp
repz
mov
push
bound
arpl
sbb
repnz
adc
dec
or
mov
xor
arpl
scas
aam
mov
mov
and
pop
imul
jg
pusha
mov
es
popf
out
add
sub
adc
aad
out
addr16
push
gs
pop
icebp
push
pop
cs
lds
xlat
xchg
push
frstor
cmpsl
jge
sub
mov
xchg
mov
mov
in
cmp
iret
in
and
cld
push
add
dec
jae
fdivr
ret
mov
cmp
sbbl
sbb
bound
xor
out
stc
xor
out
dec
xor
sbb
ficompl
insb
cmp
cmp
fsts
mov
mov
enter
fwait
push
imul
subb
lahf
fistl
fcompl
orb
mov
icebp
pop
add
loop
imul
adc
xor
and
insb
fistps
xor
adc
adc
shll
mov
and
mov
mov
xchg
push
add
insl
fisttpll
jge
cmp
sbb
bswap
hlt
stos
test
dec
ljmp
cmpsl
jae
mov
call
jl
dec
es
and
leave
outsl
inc
mov
imul
mov
or
push
add
setl
aam
aam
rcrl
sbb
clc
or
clc
outsb
push
mov
fcomps
push
jle
loopne
mov
scas
add
xchg
mov
push
xchg
and
jle
adc
icebp
aaa
xor
pop
pop
inc
pop
pop
sub
cmp
or
negb
push
mov
mov
js
movsb
push
jp
addb
lcall
sub
mov
std
imul
ljmp
lret
stos
sub
adc
and
adc
je
inc
sbb
and
cmpsb
loope
sub
xchg
mov
mov
shll
ss
cwtl
outsb
cmc
rcrl
cmc
pushf
sahf
shlb
add
xlat
or
dec
sarl
sahf
mov
adc
push
idiv
cmpsl
mov
mov
pop
sub
ds
stc
mulb
pop
ljmp
push
lret
iret
adc
movl
inc
adc
mov
sbb
fdivs
sub
dec
pop
push
repnz
push
js
and
cmp
xor
inc
cmc
jbe
bound
add
inc
ds
in
sbb
addl
push
insl
stc
loope
fld1
sti
fstl
pop
enter
dec
lock
add
xlat
sti
push
fildll
add
into
dec
inc
les
and
push
xor
insl
movsl
mov
inc
add
les
or
jmp
xor
sbb
push
xchg
push
pop
mov
xchg
lods
mov
std
xor
jge
loop
cwtl
sarl
or
or
mov
repnz
dec
loopne
xor
pop
in
fwait
mov
lcall
fs
jne
xchg
aaa
and
fildl
jb
mov
xlat
pop
xor
loope
add
adc
xchg
jbe
adc
testb
fs
jnp
movb
lods
repnz
mov
and
stos
sub
mov
movsl
and
incb
test
addl
je
out
sub
les
lods
xchg
out
adc
fwait
adc
scas
inc
adc
movsb
out
insb
lahf
or
push
xchg
pop
ficompl
arpl
es
mov
sti
and
pop
cmpsb
subb
xor
and
mov
fmuls
pushf
inc
rcll
mov
xchg
pop
and
insl
nop
mov
push
xchg
pop
hlt
push
xor
push
jp
xlat
dec
inc
xlat
in
clc
scas
enter
pop
inc
cwtl
mov
xor
es
inc
add
movsb
jmp
push
pop
add
idiv
and
fs
xchg
pop
mov
out
xor
dec
stc
movsl
mov
sbb
mov
mov
pop
dec
cmp
adc
lret
arpl
inc
int
mov
sbb
fcompl
mov
add
mov
or
int
ss
inc
sbb
scas
jecxz
pop
inc
and
inc
jp
push
xchg
push
popa
ret
iret
sbb
fistps
jae
inc
aaa
arpl
pop
cmp
xchg
in
popf
cmp
ja
inc
and
and
movsb
sub
imul
mov
push
inc
dec
inc
xor
and
jne
dec
jge
sub
jno
adc
leave
jg
mov
mov
xor
andb
je
out
pop
lods
lods
jb
cmp
dec
xchg
adc
adc
push
mov
push
dec
xor
loope
flds
xor
adc
out
pusha
mov
fldenv
loop
cs
mov
xor
cmpb
jno
loop
loop
hlt
stos
inc
call
bound
sti
imul
inc
add
scas
test
mov
jmp
cld
jo
dec
sub
xor
mov
test
sbb
shll
leave
and
lret
or
lock
pop
mov
push
cmovg
add
out
push
mov
sti
cmpsl
sub
add
jbe
dec
adc
lock
cmp
out
jno
jae
ds
and
xchg
xchg
cmp
lret
das
ret
lods
in
lahf
popa
sub
mov
mov
fwait
aam
xchg
stos
mov
fistl
scas
push
addl
insl
dec
fcmovb
out
cld
insb
insb
jne
fimuls
out
xor
cmpsb
xchg
dec
aam
int
jb
add
cs
xchg
fimuls
shlb
xchg
loope
push
enter
sbb
mov
jbe
daa
inc
shll
adc
mov
sbb
outsl
sbb
fistps
inc
pop
int
and
mov
clc
sub
sub
push
mov
testl
inc
cmp
sbb
aad
mov
jl
jp
dec
cmpsb
xchg
pop
push
arpl
or
lds
sub
shlb
pusha
adc
dec
pop
adcb
ret
mov
pop
outsb
push
jl
jmp
sbb
jns
adc
stos
push
aad
push
cmp
mov
scas
push
sbb
push
cli
sub
fldcw
in
test
inc
int
test
sub
inc
outsl
or
cmpl
sbb
sbb
ficomps
add
sub
and
das
inc
cwtl
xchg
jae
jecxz
dec
shll
shrb
pushf
cmp
hlt
pop
adc
pop
jns
popf
mov
mov
jl
out
jge
ffreep
mov
inc
mov
pop
xor
pushf
pop
sbb
pop
gs
mov
mov
repz
into
fdivrs
inc
xlat
xchg
insb
lds
add
pop
rcrl
fstl
outsb
stc
lret
and
jmp
test
jns
fildl
jmp
decb
scas
and
imul
xor
lahf
fldl
into
sub
lret
and
and
jmp
cmc
pop
xor
dec
add
dec
lret
dec
daa
into
sbb
add
insl
test
adc
push
pop
js
push
mov
popa
cmp
jecxz
addl
adc
repnz
fmuls
xchg
leave
pop
dec
lds
shr
push
ret
add
lock
pop
fs
loopne
jp
cmp
jne
scas
sub
iret
idivl
sbb
jne
test
push
or
aas
jle
push
mov
daa
negb
adc
mov
mov
fimull
psrlw
dec
pop
mov
sub
aad
test
cs
cmp
dec
xor
aas
sbb
loopne
ljmp
cltd
icebp
loopne
dec
mov
adcb
jae
mov
xchg
adc
dec
pop
jecxz
hlt
jae
int
pop
or
das
push
into
xchg
into
outsb
add
inc
mov
aaa
and
pop
add
pop
insb
push
mul
jno
mov
fcompp
lock
dec
sbb
test
inc
dec
adc
xorl
popa
mov
or
push
sti
xor
dec
and
mov
adc
jnp
push
pop
scas
outsb
mov
into
dec
arpl
xchg
pop
push
dec
or
out
inc
jg
fs
xchg
bound
ficomps
insb
adc
add
imul
jo
sub
adc
mov
mov
shll
jo
push
clc
lods
lods
mov
push
dec
fnstsw
push
ljmp
movb
mov
rcrl
jge
adc
in
xchg
mov
xor
repz
out
jecxz
dec
and
iret
mov
test
adc
pxor
aas
ds
imul
out
push
rclb
jecxz
leave
mov
iret
mov
pop
test
mov
andb
jno,pn
push
sbb
mov
xor
les
in
shr
daa
mov
stc
mov
mov
nop
jle
loope
scas
movd
out
add
and
dec
loope
and
cwtl
pop
fbld
shrb
mov
ds
shll
scas
popa
dec
movsb
gs
frstor
and
or
mov
lods
jmp
push
push
js
std
ret
xchg
mov
mov
mov
int
cmpsl
in
shlb
inc
fcompl
idiv
loop
imul
sub
and
pop
mov
mov
xor
lock
fldl
mov
cmp
mov
mov
pop
xor
cmp
xchg
je
push
shll
aad
sahf
or
pop
incl
rorb
dec
stos
sub
test
cwtl
or
mov
mov
les
es
mov
or
sub
sub
adc
pop
dec
decb
mov
out
loop
adc
mov
mov
movsb
pop
lea
insl
jge
or
cltd
or
repz
or
jp
jg
and
fmul
test
xor
push
lahf
push
xchg
pop
dec
jmp
push
adc
in
mov
cmp
mov
mov
es
js
pop
push
mov
adc
data16
rorl
roll
jns
pushf
movl
orb
mov
sti
incl
ss
push
cmp
push
fs
mov
or
imul
loop
xor
xlat
fcoms
cmc
inc
xor
and
push
mov
fcmovu
mov
addr16
xor
xor
push
call
sub
and
or
notb
lret
adc
idivl
movsl
adc
ds
cld
sbb
push
xor
mov
inc
jp
add
dec
xor
orl
jmp
or
cli
inc
js
mov
pusha
dec
leave
clc
mov
mov
inc
or
lahf
xlat
xchg
jbe
inc
hlt
sub
push
pop
add
or
jecxz
adc
cwtl
adc
mov
jg
nop
jmp
mov
inc
flds
mov
aad
popf
inc
pop
jmp
pop
hlt
pop
mov
inc
mov
pop
dec
sub
test
les
xchg
push
das
or
xor
and
es
jo
subb
movsl
movsl
add
xlat
inc
js
enter
rcrl
jo
inc
jno
pop
pop
jnp
push
es
je
orl
inc
loop
sti
lret
sti
scas
es
lcall
gs
lahf
or
xchg
scas
cmpsl
dec
test
fmulp
dec
faddl
insb
push
ficompl
movsb
leave
or
jp
mov
jo
sub
nop
int3
fstpl
loope
testl
das
sbb
shrd
xor
lods
ds
mov
outsb
sbb
out
roll
adcl
mov
mov
testl
addr16
mov
fnsave
mov
push
add
bound
jnp
inc
mov
imul
xor
addr16
pop
scas
push
aad
xchg
into
push
mov
xor
sbb
loop
inc
cmpsl
fs
xor
test
add
loop
das
outsl
add
sub
fisubs
mov
adc
ret
cmpsb
inc
inc
push
dec
test
clc
pop
mov
mov
jbe
add
andl
jae
sbbb
sbb
jno
adc
call
mov
daa
jno
sarb
lock
cwtl
insl
jge
movsl
dec
aas
mov
jmp
push
push
adc
repz
or
xor
and
push
mov
mov
xlat
movsl
push
dec
adc
mov
pop
push
lahf
cld
fadd
ret
sarb
cmp
cmp
movsb
loop
jns
jmp
pop
mov
cmp
dec
jne
in
bound
mov
mov
sub
jb
mov
lods
mov
mov
add
inc
mov
inc
mov
popf
loopne
xlat
ficoms
xor
jl
xchg
fmull
mov
push
dec
int3
jl
push
jae
fucomp
push
sbb
mov
push
test
arpl
push
pop
adc
cmp
and
cltd
stos
imul
sbb
in
push
xchg
je
sbb
fsubrl
jno
push
cmp
jmp
movsb
add
dec
sub
lcall
out
push
sbb
mov
repz
pop
inc
pop
xor
scas
lret
or
push
inc
jecxz
out
cltd
jecxz
fmull
repnz
int
ficomps
ret
and
femms
mov
mov
gs
sub
gs
jne
aad
mov
push
cld
or
add
mov
popf
jge
cmp
push
or
sub
lock
je
jg
and
stos
pop
aaa
fistpll
test
mov
push
dec
inc
pop
dec
mov
insl
mov
add
pop
scas
das
scas
xchg
jno
js
add
aas
lock
mov
frstor
mov
push
mov
sub
mov
xor
pushf
imul
lahf
out
cmpsb
cltd
hlt
shr
jns
add
lret
fiaddl
adc
fldenv
je
and
jne
out
jle
cltd
xor
repnz
out
ds
push
setge
sbb
xchg
cli
mov
and
sbb
or
dec
mov
pop
loopne
fs
dec
xchg
addr16
test
movsl
daa
lods
lahf
aas
dec
aad
xchg
cltd
mov
mov
jp
cld
and
vmovhps
xchg
jle
mov
jecxz
inc
push
ss
mov
std
aad
sub
dec
jle
add
pusha
sub
decl
sbb
pusha
rcrb
in
jge
ret
imulb
daa
push
int
loopne
lock
xor
loope
xor
in
stc
sti
or
pop
jp
enter
fadd
push
fldt
dec
shrb
adc
add
jge
mov
fnstenv
and
cmp
cmp
push
test
jnp
pop
and
jno
push
test
rcrb
mov
sti
pop
sbb
dec
adc
xchg
shlb
adc
leave
lahf
sbb
mov
movsb
sub
xchg
ja
or
sbb
leave
cmpsl
scas
pop
rcrb
scas
inc
jno
rcl
sub
stos
scas
xor
dec
push
add
sub
in
insl
repnz
popf
sub
loope
dec
sub
mov
push
out
jnp
inc
xor
hlt
jns
pusha
lods
xchg
imul
push
stc
sub
jb
jle
mov
and
rcrl
scas
movsl
inc
push
and
jns
mov
push
mov
dec
sbb
mov
in
xorl
outsb
aas
sbb
mov
sti
mulb
xor
mov
lods
xchg
fstl
outsb
int
inc
lret
push
push
and
and
jle
pop
push
sbb
test
in
aad
push
push
mov
ret
outsl
jae
lods
and
mov
jne
cltd
lahf
cltd
ljmp
pop
test
subl
xor
addr16
pusha
insl
enter
fwait
cwtl
or
add
into
sub
sbb
fdivs
or
mov
xchg
adc
push
push
or
sbb
addb
mov
or
pop
lds
jnp
push
pop
shlb
mov
fcomp
inc
or
push
dec
call
sbb
inc
pop
cmp
inc
aas
in
cmpl
jne
push
jno
es
dec
pop
pop
inc
mov
out
pop
inc
orl
into
fidivrl
jmp
loope
int3
cmpsb
push
int
dec
adc
hlt
jae
sbb
inc
xchg
mov
fldt
data16
movsl
push
ret
add
je
jecxz
out
jnp
out
pop
int3
inc
divl
sbbb
push
imul
or
inc
add
mov
dec
add
hlt
sbb
lcall
xchg
jg
andb
xor
shrl
test
dec
cld
inc
dec
mov
mov
leave
es
xor
lsl
jae,pn
enter
popa
and
pop
sbb
pop
scas
xchg
out
outsb
pop
cmpsb
push
add
xchg
mov
dec
in
bnd
pushw
push
pop
out
mov
inc
and
ret
inc
pop
dec
pop
scas
ret
dec
sti
or
xchg
or
or
xchg
cmp
jae
ds
imul
and
mov
cmc
push
out
cmp
lock
pushf
aad
cmp
jb
cmp
sbb
mov
mov
outsl
mov
xchg
jg
test
into
or
call
add
sbb
pop
or
sbb
xor
andb
call
lret
pop
into
rcrb
insl
fdivs
inc
mov
and
jno
je
mov
shlb
jle
mov
call
shll
push
orb
rclb
xor
jo
sub
pusha
mov
inc
fxch
or
mov
lahf
bound
imul
sub
mov
cmp
xchg
push
push
shrl
sarl
push
xchg
push
xor
push
mov
mov
push
xor
add
xchg
in
cmp
push
jmp
jmp
in
cmc
aam
repz
fs
fistps
mov
nop
dec
ja
jb
xchg
dec
jmp
test
iretw
imul
pop
and
sbb
mov
mov
adc
sub
sarl
sbb
frstor
push
rclw
mov
nop
add
pushl
iret
dec
mov
sbb
sbb
dec
mov
cmp
and
push
jl
test
jl
sub
push
adc
bsr
test
jecxz
inc
cs
dec
aas
mov
cmp
adc
mov
mov
mov
insl
ret
and
aad
mov
rorl
mov
add
sbb
ret
jnp
pop
push
sbb
in
sbbb
adc
leave
pop
aas
lret
xchg
je
jl
or
shrl
xchg
jo
sbb
gs
fdivl
scas
mov
sub
inc
aad
mov
insb
jp
ds
xor
daa
cmp
cmp
pushl
fdivrs
mov
std
outsb
adc
push
cs
leave
xor
mov
adc
rcrb
xlat
jp
mov
lods
pop
iret
int
loopne
mov
or
fs
rcl
xchg
and
lahf
jge
fwait
aad
jae
mov
mov
jg
call
push
les
jne
cmp
call
mov
les
sub
add
push
jge
sub
pushf
test
xchg
xchg
loop
stos
repnz
mov
xchg
xlat
adc
daa
or
jecxz
cmpxchg
mov
xlat
sahf
add
inc
fwait
pop
sahf
cmp
repz
mov
pushf
clc
pushf
dec
xor
adcb
jb
xor
popf
mov
inc
popf
add
psubsb
or
xorl
push
cmp
fcmovu
repz
popf
addb
test
or
jne
loopne
jnp
lods
inc
sbb
pop
in
repnz
mov
sbb
mov
popa
mov
xor
icebp
fdivrp
test
cltd
mov
ret
std
cld
push
out
inc
or
test
sub
jns
mov
jg
push
xor
js
in
or
leave
mov
movsl
mov
mov
jb,pn
mov
xor
mov
repz
push
pop
pop
xchg
int3
xor
insl
jge
jl
mov
sub
les
cld
ss
fisttpl
jnp
push
popa
mov
pop
cmc
cmp
jno
or
mov
fwait
mov
pop
xchg
and
and
pop
adc
fisubs
jb
or
mov
ret
mov
or
jno
arpl
in
add
add
add
add
inc
subb
outsb
addr16
lods
loop
cmp
jecxz
and
je
out
loop
inc
pop
pop
cmp
push
or
adc
jecxz
pop
lret
xchg
xlat
xchg
call
xchg
mov
movsl
add
es
inc
iret
popa
out
push
loope
mov
add
pop
cmpsl
gs
push
mov
or
or
test
out
or
loop
testb
mov
pop
mull
sbb
aad
stos
iret
sti
bound
cmp
cmp
das
sbb
adc
or
loope
testb
aad
lcall
jne
adc
fiadds
pop
xor
adc
imulb
xor
leave
ret
idivb
mov
gs
arpl
sub
push
jne
inc
flds
cmpsl
enter
mov
add
jecxz
xorl
or
leave
dec
repz
push
fmull
in
inc
adc
fisubs
int
stc
mov
mov
adc
pop
in
fwait
mov
loop
pop
inc
mov
push
fdivrs
mov
or
sahf
pop
mov
lods
scas
push
xor
sub
popa
and
add
mov
mov
push
mov
das
fildl
cmp
pushw
xchg
bnd
dec
mov
inc
daa
cmp
fidivrl
pop
out
stc
fwait
dec
xchg
sbb
dec
fdivs
dec
push
lret
xchg
addr16
inc
dec
popf
xchg
push
or
mov
dec
and
sbb
jp
add
adc
xor
lock
jb
adc
and
leave
clc
push
add
das
fcompl
test
mov
jne
repz
inc
movsl
xchg
cmp
in
or
add
ss
cmp
dec
dec
bound
xchg
fwait
scas
xor
cmpsl
testl
xor
fimuls
lret
xor
shlb
rcl
inc
cs
mov
ljmp
js
push
ret
jecxz
jo
andb
cltd
push
mov
jle
addr16
cmp
mov
sbb
jge
inc
les
paddsb
dec
rorb
pop
and
dec
in
inc
push
xchg
pop
inc
xor
inc
xorb
xchg
daa
sbb
inc
mov
push
inc
repnz
mov
iret
mov
hlt
out
push
jle
cltd
pop
mov
adcl
fsub
sub
inc
adcl
xchg
inc
sub
lret
mov
int
fs
xchg
loopne
fadds
ret
shlb
lahf
pop
shrb
outsl
inc
daa
and
sbb
inc
push
mov
sub
inc
cs
or
mov
xchg
push
sar
leave
or
pop
bnd
mov
stos
arpl
mov
bound
insl
cmc
inc
addr16
xchg
push
testl
xchg
mov
and
push
mov
idiv
and
movsl
ret
inc
rol
xchg
mov
out
push
cs
sub
and
adc
pushf
ret
lcall
in
mov
jo
or
dec
lods
loop
daa
add
ss
bound
and
lds
cmp
shll
andl
scas
jl
popa
cmp
push
scas
sbb
cmp
mov
mov
lret
test
pop
jnp
mov
out
xlat
aad
hlt
rcrb
ret
sub
sti
adc
xor
je
push
mov
icebp
notl
pop
add
in
sub
loope
cmp
mov
pop
push
loope
repnz
hlt
jbe
sbb
push
pop
lahf
xchg
add
pop
inc
jp
test
xor
test
aam
mov
pop
mov
jmp
mov
nop
mov
mov
lahf
lods
add
in
scas
cwtl
fcom
in
dec
mov
int
mov
fadds
cmpsb
je
les
xor
lahf
xchg
mov
cmp
mov
mov
sub
movsl
stos
ds
dec
mov
hlt
add
pop
test
leave
jne
mov
in
in
lea
jmp
stos
pop
jnp
inc
jg
out
stos
mov
std
add
jno
mov
cmp
adc
mov
xchg
lret
addl
cmc
int3
sub
test
dec
aas
pop
repnz
sbb
cli
mov
rclb
insl
decb
mov
jmp
insb
out
jl
test
jne
and
es
les
push
jg
cltd
push
push
jg
sub
fsubl
mov
scas
cmp
lods
cmp
mov
std
push
in
jb
mov
inc
mov
adc
shrl
push
mov
mov
push
pusha
mov
ds
daa
and
jmp
sub
sbb
mov
int
xchg
shll
cmp
ret
jge
stos
in
adc
je
leave
hlt
test
lods
out
mov
bswap
adc
pop
scas
jae
xor
popf
push
add
xor
shll
imull
and
mov
add
and
xchg
jb
ja
lret
sub
ljmp
aaa
pop
adc
sub
adc
orl
sahf
add
pusha
mov
sti
cmp
cmpsl
sub
shl
xchg
pop
mov
or
sbb
stc
push
decl
sbb
nop
gs
iret
fidivrs
enter
jbe
mov
data16
mov
sbb
add
lds
adc
cmpsl
inc
add
dec
mov
jb
out
dec
aad
ds
xor
inc
mov
cmpsl
out
dec
mov
add
xchg
jns
lock
sub
pushf
xchg
fistps
loope
fldenv
ss
iret
lods
and
nop
inc
in
cli
add
jnp
inc
repnz
or
das
clc
dec
dec
inc
mov
imul
pop
sbb
repnz
adc
xor
fcmove
mov
fnsave
or
xor
aam
mov
mov
pop
mov
in
pop
sti
jnp
add
rcr
dec
pusha
shlb
xor
push
adc
in
dec
cld
scas
dec
and
cld
fmull
mov
and
js
stc
imul
in
push
jecxz
clc
push
xchg
js
push
push
push
cmp
aaa
sarl
and
sub
outsb
stos
jo
push
lds
add
andl
sub
jl
rol
fs
stos
ficoms
jo
mov
out
jge
cmp
add
sub
lods
out
rorb
rcl
clc
push
cmp
sbb
fs
or
sbb
sahf
add
dec
int3
jecxz
sub
inc
clc
fiaddl
setno
shlb
mov
jne
loopne
insl
mov
fldl
daa
dec
fisubs
pop
nop
sbb
xchg
dec
mov
push
mov
out
insb
pop
sub
pop
pop
jo
ljmp
les
xor
negb
xchg
test
cmp
pop
orl
int
push
addr16
jl
leave
pop
mov
cmp
pop
in
test
loope
mov
cmpsb
cmpsl
xor
shrl
cmc
ret
jns
sbb
jg
loop
gs
roll
scas
xor
movsl
or
fbld
ret
mov
sub
pusha
push
andb
inc
mov
jp
pop
fsubr
pop
std
ret
cwtl
sub
ds
gs
cld
int
jge
adcb
out
and
in
and
xor
xlat
jo
mov
lcall
cmp
inc
fs
stos
jns
insl
mov
inc
sahf
std
mov
icebp
adc
adc
lahf
xor
in
xchg
dec
push
mov
lahf
cmp
add
incb
je
jne
data16
enter
das
sbb
fadd
xchg
nop
mov
mov
or
fmul
add
shrb
dec
jae
push
sub
lods
fmul
and
jle
cld
sbb
sti
add
leave
and
inc
sbb
bound
iret
or
repnz
rcrl
lods
loopne
jp
jns
dec
jne
xchg
sbb
pop
xor
jne
cli
pop
iret
jl
movsb
pop
fisubs
mov
movb
shrl
stos
aad
xor
das
jbe
jp
enter
repz
or
and
sub
mov
jp
and
pop
dec
add
and
pop
jno
sbb
inc
dec
xchg
mov
mov
push
or
pop
into
std
sbb
push
inc
sub
sbbl
aaa
enter
pop
addr16
dec
mov
xlat
dec
inc
stc
lds
add
dec
pop
dec
cmp
hlt
dec
cmp
in
repz
popf
mov
jo
mov
call
mov
repnz
add
sbb
dec
inc
xor
xor
lods
inc
push
sahf
dec
mov
fldt
dec
out
imul
pop
insl
jns
hlt
lret
push
add
rolb
pop
jb
jno
shlb
xchg
scas
imul
or
das
stos
xchg
and
mov
lock
mov
lcall
and
lea
dec
and
push
pop
mov
adcb
push
xor
aaa
bound
fistl
or
fsubp
aas
add
lods
bound
loopne
in
sbb
mov
mov
shll
inc
outsb
xchg
mov
mov
out
mov
add
jb
cmpsb
sbb
insb
sub
mov
jbe
jb
adc
mov
mov
dec
sub
popa
fldl
add
push
in
inc
sub
cs
shrl
cmp
xor
call
das
fdiv
cmovp
adc
mov
mov
or
jecxz
mov
dec
jne
and
test
mov
jge
daa
sti
sbb
imul
mov
stc
xchg
ds
lret
inc
stc
out
in
dec
popf
jmp
imul
jp
push
popa
inc
pop
mov
jp
jmp
dec
push
and
in
outsb
out
sbb
divb
add
sub
mov
sub
sub
sub
adc
cmp
mov
xchg
inc
cmp
xchg
cmp
fsubrl
xor
dec
test
fcoms
mov
mov
dec
sbb
in
loopne
xchg
sub
sub
ljmp
loope
rclb
mov
jmp
xchg
mov
call
xchg
push
lcall
adc
inc
push
pop
xchg
xchg
inc
pop
push
test
hlt
scas
or
lds
cltd
mov
inc
adc
push
into
std
inc
rcrb
into
sub
aad
mov
mov
shr
pop
push
mov
mov
push
test
jmp
inc
pop
push
inc
add
mov
lret
pop
dec
bound
mov
cs
xchg
push
fwait
pop
ss
mov
lahf
cmp
inc
xchg
mov
clc
int3
sub
mov
das
notl
in
lds
mov
ret
icebp
or
dec
push
movsl
dec
or
xchg
lcall
imul
add
rclb
into
jne
inc
push
outsb
sbb
or
cmp
repz
add
or
sub
xchg
out
mov
pusha
dec
pop
pop
xor
adc
mov
and
xor
mov
add
push
outsb
shl
mov
cmp
pop
scas
push
mov
lods
jg
xor
xor
adc
pop
lret
jmp
dec
add
xchg
xchg
mov
aad
xchg
int
stos
in
dec
mov
ret
shll
jnp
shll
hlt
sub
xor
inc
lahf
pop
sbb
mov
push
jle
jmp
stos
pop
xorl
cmp
adc
lea
stc
pusha
cmpsb
adcl
repz
test
sub
jb
dec
ret
add
adc
pusha
js
push
mov
es
cmp
test
fnstcw
pushl
pop
mov
and
jnp
xchg
xor
je
ficoml
stos
mov
cmp
les
mov
pop
cwtl
push
xchg
mov
sub
cmp
lret
daa
xchg
and
js
and
adc
rcrb
fs
test
pop
and
outsb
adc
and
call
jge
sub
push
fwait
lea
mov
or
add
jp
cmp
and
xchg
and
mov
jecxz
dec
add
stos
and
lret
lcall
loopne
pushf
arpl
xor
cmp
mov
leave
mov
mov
outsl
scas
outsl
jae
or
aas
aas
pop
sbb
push
out
mov
pop
dec
pop
dec
ret
cmp
stc
lds
lds
insb
jbe
aaa
mov
or
inc
sbb
and
in
clc
sbb
jge
dec
push
fsubrs
lock
movsb
out
dec
xor
insb
fcomps
gs
call
sbb
xchg
jns
pop
mov
bound
insb
sbb
adc
mov
je
cmp
cmpsl
lds
fnsave
in
jnp
jns
mov
gs
xor
mov
ds
and
inc
sub
stc
cltd
push
aas
lret
and
and
mov
sub
adc
inc
hlt
jbe
dec
addr16
sbb
pop
das
adc
int3
in
arpl
test
dec
pop
mov
push
or
mov
sahf
push
push
aad
jg
cmp
and
cmp
cli
dec
sbb
repz
sbb
jl
dec
test
push
add
xchg
leave
cli
sub
jo
fs
arpl
push
push
pusha
fiadds
dec
orl
mov
stc
test
loopne
push
mov
in
add
inc
sbb
or
and
nop
or
mov
xchg
adc
and
sahf
mov
jl
pop
aad
mov
lahf
subl
mov
push
jg
sub
dec
mov
xor
cmp
push
outsl
cwtl
mov
cld
dec
or
inc
cmp
sbb
jo
dec
pushf
jmp
mov
mov
mov
adc
mov
cmc
shl
in
inc
add
mov
jns
and
inc
push
aas
xchg
and
mov
in
int3
pop
push
cmpsb
stos
adc
mov
mov
aas
sahf
repz
xor
jp
mov
popf
add
inc
sub
xlat
adc
and
int
add
push
cmp
rorb
jb
pop
push
add
cmp
sbb
push
sbb
adc
add
cmp
mov
cmp
notl
xchg
adc
pushf
mov
fs
dec
jle
out
cld
into
cmp
xchg
cmp
mov
ljmp
mov
scas
xor
sbb
inc
imul
xor
cli
sub
adc
inc
add
xor
jbe
stc
sbb
push
fcoml
jo
inc
xor
sbb
jbe
inc
dec
push
jmp
fcmovne
ljmp
dec
inc
mov
scas
jmp
sub
pop
dec
movsl
add
jmp
or
notl
and
sub
dec
mov
hlt
push
pusha
pop
filds
cmpsl
les
les
dec
into
or
lods
jb
xorl
jae
insl
pop
pop
call
mov
cmp
add
out
fwait
aaa
sbb
aaa
ret
lods
jg,pn
mov
add
lret
in
mov
lods
xchg
push
movb
aam
xchg
jl
das
and
movsb
pop
iret
stos
xor
sbb
sti
push
adc
gs
pop
and
mov
stc
mov
movsb
mov
cmc
inc
or
jmp
jp
divl
or
std
xchg
ffree
adc
xchg
mov
mov
xor
ret
and
js
mov
out
jns
loopne
sbb
jae
xchg
outsl
dec
sarb
sub
scas
mov
push
fwait
aas
mov
negb
cs
adc
mov
xadd
jmp
mov
cmp
arpl
fidivs
dec
mov
xor
or
fcmovu
inc
insl
cmpeqps
pop
jl
out
or
addr16
jnp
out
or
add
test
test
jp
mov
fwait
jge
repz
imul
movsl
fcom
movsb
enter
repz
jmp
aam
pop
push
sub
imul
fimuls
adc
mov
aad
jb
dec
sti
add
aas
cmpsb
xchg
pop
add
adc
dec
jge
mov
jp
or
xchg
dec
movsb
cmp
mov
sbb
or
icebp
mov
pop
add
mov
lea
nop
add
sti
iret
add
inc
fdivl
jecxz
subl
jg
sub
xchg
xchg
mov
sbb
mov
ret
stos
inc
frstor
add
xchg
call
cmpsl
iret
pop
xchg
xchg
loopne
jp
dec
push
mov
and
push
imul
insl
out
into
scas
repnz
adc
sti
movsl
lods
mov
lds
hlt
and
jl
mov
incl
jg
cmp
test
adc
xlat
lret
cmc
nop
movsb
aas
negb
aam
add
data16
inc
jns
ljmp
adc
adc
xor
push
js
cmpsl
in
jns
stos
dec
rorl
push
adc
icebp
mov
mov
ret
cmp
scas
xor
movsb
inc
fs
mov
aam
ljmp
jecxz
adc
jp
jmp
inc
imul
sbb
pop
cmpsb
fstps
dec
call
inc
mov
loopne
sbbb
imul
sahf
fidivrs
push
sbb
out
push
and
aam
stos
les
cmp
adcb
sbb
jge
cmp
rcrb
mov
or
pop
flds
lock
fstl
jbe
push
sar
pop
xor
scas
pushf
repz
std
lret
scas
std
cmp
stc
les
icebp
push
iret
mov
push
xchg
pop
loop
jnp
lock
inc
mov
pop
lock
out
or
sbb
in
jo
div
push
je
mov
cmp
and
out
push
push
sub
push
ret
mul
scas
push
and
out
xchg
test
sbb
in
fwait
jp
mov
mov
mov
fistpl
mulb
pusha
mov
or
insl
fisttpl
pop
cmpsl
xor
pusha
testb
push
test
dec
shll
lea
rorl
test
inc
sahf
ret
imull
std
fisubrl
jae
and
pop
push
push
shlb
push
mov
inc
scas
mov
mov
testl
aas
iret
add
jg
nop
jnp
fsubs
clc
xor
ds
pop
fcompl
mov
cmp
dec
shlb
ss
mov
in
test
aaa
cmp
mov
enter
fcomps
cmp
or
mov
inc
mov
mov
mov
pushw
dec
fcompl
xchg
clc
pop
es
xchg
gs
inc
push
jo
movsb
xchg
xchg
dec
or
lcall
in
pop
push
add
add
mov
repnz
dec
mov
push
leave
fisubrl
or
jecxz
jle
push
arpl
aaa
pop
nop
dec
dec
incb
push
pop
test
js
insb
ja
lds
sbb
inc
jle
cmc
xchg
imul
imul
lods
inc
jns
out
mov
add
loope
arpl
les
test
mov
mov
ret
cmc
fidivs
fcompl
inc
dec
and
inc
out
pop
ds
add
aas
push
shll
cmp
mov
sbb
mov
addr16
adc
jecxz
xor
push
push
repz
dec
jmp
test
sahf
or
out
in
xor
mov
out
dec
inc
and
lcall
cmp
pop
mov
pop
mov
xor
sbb
xchg
cwtl
loop
fcmovnb
sbb
cli
iret
jae
dec
fdivrs
xchg
dec
faddl
or
add
mov
sub
notb
or
xchg
aas
pushf
jbe
xor
dec
lret
add
std
mov
jle
or
arpl
lods
pop
xchg
mov
cmpsb
movsb
shl
mov
iret
jmp
lret
and
mov
aaa
fidivrl
psllq
jecxz
fstp
jmp
mov
into
mov
mov
push
fdivl
into
xchg
aas
in
push
lret
jecxz
push
mov
pop
cmp
in
out
fstl
nop
xchg
dec
or
imul
hlt
clc
into
and
fisttpll
popa
xchg
icebp
fldl
adc
jo
mov
loope
mov
or
mov
nop
xor
arpl
push
fisttpll
push
sahf
add
lahf
sub
fstps
fwait
pop
movl
es
lret
leave
sub
dec
sbb
loope
mov
mov
xor
pop
mov
movsl
aam
jo
cmp
repz
pop
jbe
test
loope
or
and
jl
mov
xchg
sbb
mov
push
sub
leave
adc
jno
adc
aas
cli
ljmp
lock
mov
sbb
jnp
cmc
sbb
and
inc
stc
out
dec
pop
sahf
push
dec
push
sbb
pop
jle
dec
insb
dec
in
and
lahf
lcall
loopne
pop
in
or
sub
dec
bound
xlat
pusha
cmp
add
cmpsl
mov
xor
sub
test
leave
sbb
shlb
aas
xlat
push
sbbl
addr16
popf
test
imul
mov
cs
mov
or
pop
ljmp
ja
pop
ret
lret
testb
mov
testl
test
cwtl
add
dec
pop
mov
dec
int3
arpl
mov
and
push
xor
lcall
imull
or
sub
stos
lds
mov
lods
insl
popf
pop
or
in
mov
insb
jnp
jecxz
jecxz
xor
jge
mov
leave
out
cmc
pop
cwtl
pop
leave
jae
cwtl
les
pop
pop
jnp
mov
push
ja
cltd
rorb
fbstp
bnd
ret
daa
lds
jmp
or
popa
test
jbe
movsl
xlat
out
jno
mov
add
adc
imul
cmpsl
popf
sub
out
push
ret
mov
fbld
fs
jmp
mov
jp
icebp
pop
push
das
xchg
sti
shl
sbb
mov
mov
mov
scas
add
stc
les
xor
add
inc
ja
fdivrl
xchg
and
lods
sub
les
jmp
or
mov
leave
fs
mov
xchg
scas
shrl
add
jns
enter
jmp
adc
cmp
fstl
jnp
int
jmp
dec
fwait
rcl
jne
in
loope
pop
hlt
xor
push
dec
mov
orb
adc
and
adc
xchg
adcb
subb
scas
add
popf
mov
lds
int
pop
addr16
cwtl
inc
or
inc
repz
and
and
xchg
rcrb
xchg
add
test
daa
testl
test
mov
sahf
sbb
sbb
int
push
jp
out
or
dec
stos
dec
fwait
sarl
pushf
in
mov
bound
xlat
leave
stos
in
int
clc
std
ret
xor
les
jbe
mull
leave
dec
imul
pop
xor
bnd
in
push
daa
lds
inc
mov
jl
add
and
sub
sbb
call
das
dec
add
daa
jp
xchg
into
jmp
leave
aam
fistl
sub
jbe
sti
push
into
movsb
aad
inc
loopne
sbb
sti
rcrb
push
popf
inc
pop
test
rclb
fidivrs
jmp
sbb
jbe
divl
clc
dec
les
es
mov
repz
enter
ds
cmp
mov
cwtl
xchg
xor
ficompl
out
push
hlt
jnp
into
fcomip
idiv
cmp
int3
hlt
adcb
inc
jbe
leave
scas
or
push
xchg
inc
adc
adc
and
jae
out
adc
pop
test
stos
push
std
stc
into
add
lret
jecxz
mov
sbb
sti
xadd
sahf
or
fs
dec
sub
ljmp
int
pusha
mov
sub
inc
mov
stc
mov
mov
inc
jmp
fnstenv
jo
cmpsb
hlt
clc
jns
insb
les
scas
aad
popf
fcoml
mov
and
cmc
or
repz
inc
jmp
rorb
mov
cmp
sub
and
pop
call
dec
push
jl
jne
ljmp
or
xor
sbb
jg
cmp
sahf
xor
or
lods
push
popf
push
xchg
call
repnz
divb
pop
out
int3
and
aas
mov
jecxz
lea
lahf
hlt
cli
push
mov
lret
jge
jbe
jecxz
inc
push
clc
divl
and
sbb
movsb
xchg
inc
cwtl
pushf
xchg
push
add
or
test
push
mov
mov
sbb
sbb
out
mov
or
fwait
test
xchg
aam
packuswb
repnz
and
in
out
push
add
cmp
and
daa
outsl
sub
bound
or
mov
mov
repz
adc
sub
sub
movsl
push
adc
fcmove
push
xor
xor
lods
push
cltd
or
sbb
or
mov
popa
repz
xchg
jns,pn
mov
push
xor
scas
int
sti
mov
rolb
aaa
adc
sbb
dec
inc
dec
sbb
int3
lret
xchg
adc
stos
sub
in
sub
jbe
cmp
out
sbb
push
jnp
inc
sahf
arpl
mov
pop
cmp
pop
adc
fisubl
orb
cli
cmp
rclb
std
sbb
mov
sub
notb
mov
mov
popf
popf
lock
es
jb
gs
popa
daa
insb
mov
lock
mov
imul
adc
pop
leave
xchg
aad
dec
ljmp
hlt
sub
pop
pop
loopne
mov
xchg
mov
bound
xor
imul
test
mulb
inc
mov
scas
push
nop
sbb
jl
pop
fs
push
xchg
sbb
fwait
push
push
arpl
enter
jno
xor
enter
stc
inc
call
mov
cmp
jp
lahf
adc
orl
das
add
call
or
and
jbe
sbb
fisttps
aad
mov
lahf
popf
out
push
or
sub
sub
cmp
stc
out
mov
stc
pop
or
or
cmpsb
mov
mov
pop
jns
mov
sbb
loope
ficoms
sbb
jp
leave
jne
mov
pop
loopne
pop
mov
push
lahf
ljmp
and
stc
inc
lret
movsb
imul
leave
pop
xor
mov
aad
xor
push
fwait
push
cld
test
jnp
or
fidivs
cmpsb
sub
and
sub
sbb
negl
mov
sub
jns
adc
rcl
popf
pop
mov
mov
aam
and
xchg
lcall
aam
jmp
pop
add
in
ret
pop
add
mov
or
xchg
pushf
mov
xadd
test
sbb
out
or
push
inc
mov
loope
jno
fwait
out
jbe
nop
fcmovnu
sub
mov
cmp
cltd
shlb
push
push
cld
pop
in
jge
jle
ret
push
xchg
inc
sbb
loopne
mov
add
add
sbb
xchg
incl
outsb
clc
jae
arpl
js
mov
jecxz
push
and
jle
icebp
or
icebp
jo
aad
add
jno
push
imul
pop
and
xchg
xchg
mov
daa
dec
sahf
push
addr16
ret
pop
sbb
or
dec
ljmp
test
mov
imul
inc
imul
js
fstps
mov
shl
repz
xor
mov
int
or
sti
flds
inc
jmp
int3
fs
loope
and
shll
jmp
cmp
out
std
repnz
cmp
mov
sub
mov
mov
jb
ja
aam
aaa
xchg
andb
hlt
out
sub
pop
cli
cmp
out
inc
out
iret
imul
xchg
add
lock
sbb
lcall
shlb
pop
xchg
sbb
fucomi
cmp
sarl
call
icebp
jp
iretw
sub
into
imul
jle
sbb
fidivrl
mov
ret
out
push
push
and
sbbl
decl
popf
ljmp
call
aaa
adc
mov
enter
adc
mov
sub
movsl
lods
sbb
out
push
aaa
dec
mov
inc
cmc
jmp
int3
or
mov
scas
dec
mov
sbb
dec
mov
or
push
push
mov
add
sub
or
movsl
jno
into
jae
xor
cmp
lahf
shll
bound
mov
xor
pop
lcall
mov
das
jmp
xlat
dec
mov
cmp
cltd
jne
xchg
push
insb
mov
adc
dec
xlat
ds
leave
sahf
loope,pn
lods
movsl
sbb
jnp
mov
push
addr16
fwait
addb
sarl
and
push
test
sbbb
cld
add
rolb
and
mov
or
gs
and
dec
xor
push
addr16
or
push
jmp
fwait
push
xor
adc
mov
xchg
pop
iret
leave
or
loope
and
jb
mov
cld
xchg
xor
inc
ss
sbb
pop
push
shrl
jo
jbe
fstl
mov
scas
gs
ficomps
inc
cmc
cli
mov
imul
xchg
mov
daa
cld
enter
and
shlb
sbb
loope
outsb
call
push
fdivs
mov
mov
push
jl
sbb
loop
mov
and
dec
pop
cmp
jnp
ret
out
bound
out
push
insl
dec
icebp
xor
aad
jno
mov
dec
pop
cmp
dec
in
sahf
rorb
xor
daa
sti
push
lret
mov
add
push
xchg
jne
xlat
lock
mov
cwtl
sahf
jno
shrb
sti
jbe,pn
out
mov
sbb
add
mov
push
sti
sub
jb
sbb
nop
cmp
addr16
sub
or
or
xor
ret
inc
add
lahf
cmp
mov
andb
mov
mov
and
out
stos
xor
sbb
outsl
mov
mov
into
lret
fxch
icebp
push
stos
mov
sahf
pop
lea
call
lds
jg
jmp
inc
inc
into
or
outsl
dec
inc
stos
into
and
or
fwait
dec
jge
dec
repnz
sub
cmpsl
adc
mov
sbbl
movsl
push
push
inc
mov
jle
push
sbb
ret
xor
cltd
dec
pop
jae
icebp
fcmovnb
jno
cli
ret
arpl
pop
hlt
push
sub
inc
xchg
mov
ja
ja
fiadds
lahf
pushf
popa
cmp
or
fcompl
les
dec
push
mov
xlat
loopne
mov
pop
inc
andl
out
adcb
pop
mov
dec
mov
loope
sub
xchg
and
lcall
dec
in
xchg
icebp
lret
jo
data16
adc
je
add
xlat
rolb
mov
jnp
imul
push
inc
dec
les
cwtl
xor
pop
fstpt
imul
int3
daa
or
adc
inc
xor
js
dec
aaa
pop
add
jne
rcll
dec
repz
cmpsl
inc
rorb
cmc
rcr
inc
jecxz
sub
push
mov
add
jl
test
fldenv
push
pop
das
mov
push
loopne
mov
pop
pusha
or
push
push
or
cmp
push
mov
adcl
mov
jecxz
rorb
int3
lock
mov
adc
aaa
clc
ficoms
jp
notb
lcall
push
pop
loope
psllw
ds
insl
xchg
xchg
subl
sub
sar
ljmp
fistpl
scas
int
insl
xchg
repnz
imul
js
fidivrs
jmp
push
mov
push
lock
mov
clc
push
lods
subl
rol
or
xor
imul
xchg
push
stos
jg
pop
mov
xor
adc
pop
in
push
push
scas
aaa
push
lock
pusha
and
mov
xor
add
movsl
xchg
loop
add
pop
adc
call
mov
pop
jge
and
inc
sub
push
push
sub
push
mov
js
add
lods
icebp
mov
sbb
arpl
jmp
add
jne
mov
lcall
pop
dec
sub
cmp
dec
out
in
bound
push
loop
popf
mov
mov
inc
cmpsb
shll
lods
cmp
mov
andb
push
or
int3
or
xchg
jb
ret
mov
test
mov
xchg
pop
repnz
mov
adc
aad
cwtl
cs
mov
jne
sahf
dec
xlat
xor
out
js
mov
dec
jge
std
inc
cmp
push
sahf
xchg
or
shlb
insb
ja
jns
mov
jl
lods
je
arpl
loope
icebp
or
push
sub
dec
mov
jmp
xchg
inc
icebp
jo
pop
mov
lds
push
mov
enter
cs
mov
mov
add
jmp
mov
lds
dec
push
inc
pop
mov
in
add
cmp
pop
jns
ss
cli
mov
sub
sti
jbe
iret
ljmp
decb
int
cs
test
push
insb
repz
imul
add
les
loope
cwtl
popf
int3
mov
sub
xchg
inc
sarl
sarl
lcall
push
mov
lcall
mov
or
add
inc
or
fwait
mov
outsl
mov
mov
pushf
sahf
cwtl
mov
push
mov
mov
std
xchg
dec
jns
mov
in
cmpsb
xchg
add
pop
cld
loop
sbb
mov
mov
push
fs
sbb
rcr
cmp
xchg
add
add
add
and
xor
out
cld
sub
dec
leave
shlb
inc
clc
clc
mov
ss
mov
jecxz
inc
pop
pop
subl
inc
ret
das
mov
push
push
in
imul
push
pusha
fstp
jl
call
iret
mov
out
sbb
push
fnstsw
stos
testb
stc
test
int
dec
pop
mov
or
jne
je
or
aam
sub
jne
ja
mov
dec
loop
sub
dec
mov
repnz
or
imul
jl
jns
jne
pop
inc
mov
add
mov
les
sub
pop
stos
pop
jo
add
je
scas
je
inc
insl
in
or
dec
leave
sahf
js
push
adc
pop
xchg
inc
aam
push
stos
pop
popf
push
mov
sub
jp
in
push
adc
add
imul
popa
out
lret
pop
cmp
push
lods
into
push
and
mov
test
xor
pop
cmp
mov
mov
ret
mov
stos
fwait
test
inc
dec
inc
int
dec
mov
inc
cli
not
scas
hlt
xor
lock
mov
jbe
sahf
jg
fstpl
mov
dec
push
lret
sbb
mov
xchg
mov
add
cltd
xchg
push
rcrl
inc
cmc
fstpl
lret
push
mov
in
xchg
xchg
push
fwait
or
mov
push
leave
fistps
cwtl
test
popa
adc
icebp
mov
mov
cmp
loope
pushf
stos
pop
jbe
sub
sbb
into
push
movsb
xchg
adc
mov
jae
ds
jl
add
ja
push
aas
sahf
in
cmp
aam
jb
lcall
xchg
pushl
push
cmp
insl
cld
xchg
lods
inc
dec
xchg
popa
pop
pop
xor
lea
mov
pop
out
in
jecxz
out
loopne
divl
fs
xlat
and
movl
or
mov
mov
pop
push
sub
movsl
or
sbb
icebp
lods
hlt
mov
test
mov
rcll
sub
test
jns
mov
ret
xchg
push
js
sarl
jno
xor
nop
aas
in
cmp
dec
mov
nop
pop
push
mov
and
cmp
jle
hlt
xor
inc
or
dec
or
sahf
xor
fcom
aaa
and
jno
in
or
je
inc
inc
mov
lcall
fistl
ficoml
adc
cwtl
stc
daa
ret
xor
xchg
in
cmp
scas
jo
cwtl
and
cmp
sbb
ficomps
in
adc
out
imul
fdiv
xor
scas
push
xor
xchg
loop
shrl
jae
dec
sbbl
loop
jecxz
test
dec
push
mov
loopne
rorb
data16
lret
imul
test
add
imul
xorb
int3
sbb
fldl
outsl
out
add
push
or
outsl
mov
mov
pop
lods
mov
lock
scas
cmpsb
add
add
js
or
jg
repz
inc
xlat
mov
stos
inc
mov
sbbl
jbe
add
lcall
mov
sub
mov
mov
adc
into
mov
stc
sub
loop
ds
frstor
push
dec
adc
xor
sti
jmp
xchg
adc
mov
xchg
out
andb
ds
mov
int
subb
and
xchg
dec
and
movsl
add
dec
push
pop
mov
mov
push
pop
rcl
cmp
jl
sub
jecxz
xor
cmp
lahf
pop
jge
cmp
xchg
popa
add
dec
or
mov
movlps
stos
or
out
push
mull
and
dec
mov
sbb
push
dec
jno
ja
arpl
in
loope
sub
and
arpl
cmp
loopne
hlt
and
je
loopne
sub
xor
cltd
jle
leave
nop
sub
push
ljmp
push
je
lcall
rorl
stc
mov
jge
pop
arpl
mov
sub
jge
es
mov
push
je
jg
fs
sub
lret
into
out
xchg
cmpb
dec
daa
int3
inc
pop
hlt
sbb
out
jmp
out
sub
jns
loopne
and
inc
mov
insl
push
test
sbb
repz
mov
cmp
ss
sti
inc
aaa
push
out
lods
mov
jno
ljmp
xchg
imul
sub
pop
das
lock
add
ds
fildll
test
jns
outsl
mov
sarl
jns
sbb
add
movsb
mov
xchg
cmpsb
sbb
lods
fucomp
rcll
cmp
stos
lea
mov
cmp
int3
loop
lods
outsl
stc
aas
mov
andb
pop
out
push
mov
or
das
sbb
push
cmp
jns
popf
pop
and
nop
mov
pop
push
push
mov
sbb
add
aaa
mov
inc
and
sahf
xchg
pop
push
dec
lock
jl
adcl
aam
lods
push
mov
dec
or
aam
dec
jle
mov
mov
jo
cs
jns
sbbl
fs
fdivs
out
out
hlt
dec
test
and
jno
sub
ja
sbb
es
or
xor
cmp
or
aad
add
movsb
test
jp
in
mov
sbb
mov
out
cmp
pop
jnp
sti
hlt
jecxz
adc
or
sub
add
fucompp
lret
out
test
jae
gs
xchg
sti
cmp
ljmp
or
mov
rcll
mov
cs
xchg
js
jl
hlt
pop
xor
pop
loope
jge
or
in
xor
and
push
in
xchg
aad
cmp
xor
shll
sub
andb
xor
andl
or
pop
dec
addr16
mov
test
xchg
jge
xchg
xchg
mov
mov
adc
std
inc
mov
xlat
mov
jmp
push
jnp
or
pop
aaa
std
pop
imul
xchg
mov
xor
push
xor
loope
ret
cld
in
inc
sub
sbb
mov
cltd
decl
xchg
shlb
mov
push
scas
inc
lea
lods
repnz
popa
enter
pop
mov
test
pop
ds
push
cli
nop
cmp
ljmp
lahf
inc
mov
je
aas
arpl
jae
mov
cmp
mov
hlt
dec
pop
daa
adc
jg
data16
lret
pop
xchg
rolb
adc
ljmp
sarl
pop
sbb
daa
mov
cmp
inc
lods
and
cmc
in
or
xchg
js
dec
dec
mov
pop
scas
xchg
je
and
popl
sbb
push
jp
jl
nop
int3
jo
fstps
push
sub
in
mov
mov
mov
rorb
test
sar
lods
pop
enter
pop
movsb
js
test
ret
out
add
jne
test
xchg
setne
mov
inc
mov
push
pushf
negb
pop
sbb
lcall
mov
ja
nop
pop
mov
adc
sbbb
int3
shl
mov
sub
int3
sbb
pop
and
inc
mov
insb
or
push
inc
pop
fcomps
dec
sub
add
fcom
fwait
mov
jae
jnp
aas
hlt
cmpsl
or
push
sbb
cmc
in
lret
clc
cld
sarb
cmpsl
in
adcl
mov
cmpsl
mov
cld
or
xchg
cmp
fldt
data16
cmp
xchg
scas
and
pop
sub
pop
ret
push
inc
int3
ja
xor
xchg
pop
jo
pop
lock
.byte
push
push
adc
xor
nop
add
add
test
mulb
mov
mov
jns
cmp
xchg
sbb
dec
xor
and
addr16
and
cmp
lea
test
test
nop
mov
int3
cmpsb
std
xchg
adc
pushf
xchg
sub
rorl
call
es
push
pop
imul
pop
and
lret
adc
jge
aam
add
lock
mov
or
cmp
or
xchg
hlt
addr16
test
pop
sub
daa
pop
mov
push
out
sbb
sub
int
nop
xchg
out
xor
dec
lds
sahf
hlt
addr16
cld
ret
das
or
adc
rorb
movsl
inc
into
or
or
cmpsb
push
out
or
pop
into
sub
and
jo
pop
sbb
mulb
mov
sbb
ficompl
push
pop
push
mov
and
cmp
in
pop
test
lahf
push
xchg
or
xchg
jb
xlat
sbb
and
gs
dec
and
jmp
int3
lahf
pop
or
aam
sbb
insb
sub
iret
inc
jle
adc
push
xchg
inc
outsb
daa
and
lods
lahf
loopne
push
testb
adc
jne
push
xor
mov
sub
jnp
push
adc
jae
jno
push
jb
push
addl
pop
jmp
push
push
lock
rcrb
sub
movsl
mov
insb
mov
xchg
rolb
fdivrl
jno
adc
adc
ljmp
sbb
xchg
lds
stos
scas
fisubl
mov
ja
push
mov
out
adc
mov
jbe
ja
xor
mov
or
rcrl
lahf
fistps
fs
mov
jnp
dec
lret
jge
clc
pop
cmpsb
data16
sub
push
pop
loop
xchg
clc
or
xchg
add
add
pop
mov
add
add
add
add
addb
addb
add
pop
add
addb
add
lock
orb
add
xor
add
mov
add
pop
mov
add
add
add
add
mov
add
addb
add
pop
mov
add
add
add
or
add
add
loopne
add
clc
add
addb
add
adc
add
sub
add
inc
add
addb
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
adc
add
add
add
push
add
pop
add
mov
pop
add
rolb
add
call
pop
add
add
add
sbb
add
xor
add
pop
mov
add
add
add
push
add
add
add
add
pusha
add
orb
add
add
nop
add
adcb
add
add
add
add
addb
add
pop
mov
add
add
push
add
add
add
subb
add
or
or
add
loop
add
testb
adcb
addb
add
and
add
inc
or
sbbb
add
or
or
add
loopne
add
clc
add
adcb
add
pop
mov
add
add
add
add
mov
add
add
pop
mov
add
add
add
add
add
add
inc
add
add
pop
mov
add
add
add
add
add
add
push
add
add
pop
mov
add
add
add
add
add
add
pusha
add
add
pop
mov
add
add
add
add
add
add
jo
add
add
add
pop
mov
add
add
add
add
add
add
addb
add
adc
add
add
add
add
add
add
nop
add
add
pop
mov
add
add
add
add
add
add
mov
add
add
adc
add
add
add
add
add
add
mov
add
add
add
pop
mov
add
add
add
add
add
add
rolb
add
adc
add
add
add
add
add
add
rolb
add
pop
mov
add
add
add
add
add
add
loopne
add
add
add
pop
mov
add
add
add
add
add
add
lock
add
pop
mov
add
add
add
add
add
add
add
add
add
add
pop
mov
add
add
add
add
add
add
adc
add
add
add
pop
mov
add
add
add
add
add
add
and
add
add
add
pop
mov
add
add
add
add
add
add
xor
add
add
add
pop
mov
add
add
add
add
add
add
inc
push
add
add
add
pop
mov
add
add
add
add
add
add
push
push
add
add
add
pop
mov
add
add
add
add
add
add
pusha
push
add
add
add
pop
mov
add
add
add
add
add
add
jo
add
add
add
pop
mov
add
add
add
add
add
add
addb
add
add
add
adc
add
add
add
add
add
add
nop
push
add
add
add
pop
mov
add
add
add
add
or
add
add
add
adc
add
add
add
add
or
add
add
add
adc
add
add
add
add
or
add
push
add
add
add
pop
mov
add
add
add
add
or
add
push
add
add
add
pop
mov
add
add
add
add
or
add
push
add
add
add
pop
mov
add
add
add
add
or
add
push
add
add
add
pop
mov
add
add
add
add
or
add
pop
add
add
add
pop
mov
add
add
add
add
or
add
pop
add
add
add
pop
mov
add
add
add
add
or
add
pop
add
add
add
pop
mov
add
add
add
add
or
add
pop
add
add
add
pop
mov
add
add
add
add
or
add
add
add
add
pop
mov
add
add
add
add
or
add
add
add
add
pop
mov
add
add
add
add
or
add
add
add
add
pop
mov
add
add
add
add
or
add
add
add
add
pop
mov
add
add
add
add
add
add
addb
add
add
in
add
add
add
clc
mov
add
add
in
add
add
add
adc
add
in
add
add
add
call
add
add
add
add
add
add
push
add
add
add
add
add
or
add
add
add
add
add
imul
add
add
add
add
add
and
add
add
add
loopne
push
add
add
add
add
add
push
add
add
in
add
add
add
lods
pop
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
pop
pop
add
or
add
in
add
add
add
pusha
pop
add
insb
add
add
add
add
add
add
pop
add
faddl
add
in
add
add
add
test
add
aam
add
in
add
add
add
jl
add
inc
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
xor
add
add
add
add
in
add
xor
add
in
add
add
add
and
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
shl
add
add
add
add
add
add
loop
add
add
add
add
add
add
add
loop
add
add
in
add
add
add
in
add
add
add
add
add
add
loop
add
add
in
add
add
add
lock
add
add
add
add
add
jecxz
add
add
in
add
add
add
add
add
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
sub
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
or
dec
fcoms
sbb
mov
je
fcom
popl
shll
incb
sub
jnp
seto
daa
xchg
sbb
mov
out
call
push
mov
or
int
jb
mov
int3
cld
adc
lcall
xchg
rolb
loop
mov
pop
push
fistl
dec
aaa
mov
jae
orl
inc
push
ror
in
xor
mov
repz
call
arpl
mov
frstor
repz
mov
testl
fists
idiv
cwtl
int
adc
xchg
mov
out
test
inc
rclb
fiaddl
mov
push
cmp
sti
push
out
ret
mov
inc
jno
xchg
es
push
cmc
pop
adc
scas
scas
sub
iret
jl
or
aas
add
jns
add
or
js
mov
sbb
lock
loop
pop
and
xchg
dec
push
ret
ds
dec
push
mov
dec
loopne
or
call
rorl
inc
dec
shl
out
xor
push
mov
jns
stc
xchg
cmp
sbb
pop
aas
loopne
xchg
sub
add
sbb
loop
xchg
fistpl
in
and
ret
insl
adc
and
repz
jle
inc
pushf
sbb
in
pop
jle
sbb
jae
jmp
jle
cltd
icebp
mov
dec
xchg
or
int
ret
jbe
cwtl
in
arpl
sbb
mov
pop
xor
jecxz
mov
sbb
xor
jnp
pop
stc
add
and
mov
mov
sbb
add
pop
add
add
fcmovnbe
pop
and
push
pop
scas
adc
pop
hlt
aad
pop
push
or
sarb
out
pusha
push
lcall
or
loopne
cmpsb
ret
sbb
jmp
fbstp
lret
inc
and
pop
jne
dec
aas
test
xchg
insl
and
bound
int
xchg
mov
test
repnz
dec
xchg
in
mov
rolb
sti
mov
aad
adc
inc
and
mov
cli
in
mov
sub
jle
adc
lods
fucomip
inc
mov
into
dec
test
aam
enter
fs
sub
arpl
popf
or
dec
mov
sbb
fs
leave
popa
inc
cld
jmp
push
subl
mov
ds
pop
dec
jg
mov
add
daa
inc
lds
dec
cs
leave
aam
aas
test
cmp
mov
test
xor
aam
mov
jno
les
popf
and
in
mov
xchg
nop
andb
dec
loope
fistps
push
into
ljmp
out
ret
jle
xorb
enter
mov
adc
cmpb
sub
pop
and
pop
push
push
xchg
inc
and
movsb
stc
shlb
cmp
test
cli
push
mov
mov
lahf
jmp
cmpl
mov
cmc
sub
aad
add
pop
cltd
xchg
push
fistpll
sub
jecxz
pop
nop
mov
mov
inc
enter
rcll
aad
pop
mov
dec
pop
and
mov
gs
dec
mov
lret
mov
inc
daa
rorb
xchg
outsb
in
xor
out
sahf
sub
xchg
out
pop
das
cmc
lahf
pop
push
adc
test
lret
into
hlt
outsb
sbb
test
fisubrl
fmuls
leave
push
je
mov
rclb
xchg
fsubrl
mov
into
mov
aas
movsb
scas
hlt
out
mull
mov
add
sahf
pop
push
das
push
dec
adc
ret
or
lret
jns
jmp
lret
jne
jle
testb
fsubp
mov
inc
mov
loop
movsl
ljmp
testl
ss
or
je
cmp
fisttpl
sub
imul
mov
cmp
repz
mov
hlt
lods
ljmp
cmpsb
push
or
mov
push
mov
movb
xchg
shll
ret
pop
scas
mov
mov
jno
call
decl
dec
insb
sbb
loope
insb
add
loop
dec
stos
ret
cmp
sbb
loope
inc
jbe
lock
int3
or
and
jg
fstl
sub
xchg
cmp
jle
mov
movsb
ds
push
mov
xor
jns
jge
or
xchg
jp
js
pop
push
add
bound
adc
push
scas
fisubs
jle
xacquire
xlat
push
cmpsl
insb
inc
std
or
mov
sbb
dec
lds
pop
pop
in
cmpsb
mov
mov
jle
xor
cli
cmp
inc
xorl
lahf
lcall
inc
out
test
jle
cmpsl
pop
sub
rol
push
out
lahf
xchg
movsl
lcall
push
in
cmc
mov
call
scas
inc
jns
ret
leave
add
jecxz
xchg
xchg
add
cld
lret
xchg
pop
jp
shrl
adc
pop
jbe
xlat
ret
enter
stc
pop
pop
rcl
cmp
cli
jns
dec
ret
cmp
cmp
cmpsl
leave
out
sbb
jae
mov
notb
jnp
xor
mov
push
inc
add
and
sbb
dec
or
cmp
ret
sub
lea
dec
jp
and
dec
notl
xlat
call
adc
fcoml
imul
xchg
fistps
xor
sub
sbb
mov
imul
sti
mov
jp
adcb
sub
add
out
fbld
cld
shl
inc
push
or
aam
jo
movsl
mov
cltd
add
stos
jne
repz
xchg
test
xchg
or
sahf
lcall
mov
mov
popa
lea
mov
xchg
add
imul
inc
outsl
push
out
dec
cli
pop
inc
dec
es
cld
jae
addr16
dec
mov
test
adc
sub
cmpsb
dec
mov
or
or
frstpm(287
adc
lret
and
aaa
add
test
pop
pop
or
mov
add
jg
add
imul
inc
jb
in
dec
dec
into
negl
mov
xchg
sbb
frstor
aam
sti
sub
mov
pushf
lahf
sti
and
and
leave
push
lock
jecxz
jne
sub
xor
cmp
cmpsl
push
std
jb
inc
mov
mov
sub
sbb
mov
cmp
push
add
popf
pushl
outsb
mov
icebp
iret
stos
popf
cmpsl
out
dec
movb
fidivs
pop
xor
inc
push
push
nop
lods
xchg
outsb
cmc
xchg
orb
mov
shll
in
fisttpll
or
imul
in
mov
push
push
lods
loopne
xchg
dec
inc
lods
iret
jg
lret
in
xlat
cltd
aad
xchg
sbb
push
xchg
cli
dec
ljmp
add
not
adc
movsb
jmp
loopne
xchg
dec
out
stc
pop
pop
mov
je
or
xchg
xchg
pop
and
sub
mov
leave
lcall
mov
negb
ljmp
dec
lds
out
test
jle
sbb
fnstenv
or
mov
out
mov
mov
stos
xor
add
xchg
inc
ljmp
mov
push
dec
lds
cmp
mov
jo
push
mov
adc
sbb
lcall
daa
pop
jbe
and
sbb
lret
ret
int
gs
mov
cld
rcrb
es
push
dec
fidivrs
mov
mov
push
insb
int3
inc
aam
ret
clc
mov
andb
sub
in
aad
outsb
cmp
jmp
pusha
xor
in
jmp
imul
push
mov
jns
adc
xor
push
fwait
adc
ljmp
cmpb
fildl
movsl
fmull
push
data16
inc
jnp
iret
xor
ret
hlt
push
jnp
cwtl
push
icebp
ret
push
out
jns
aaa
mov
fdivrs
dec
and
pop
add
pop
fwait
inc
add
cmp
dec
movsb
push
aas
sub
pop
push
in
push
inc
cmp
loop
or
add
and
lods
cld
dec
daa
adc
outsb
mov
fnstsw
push
sub
es
shrl
sbb
sub
cmp
pop
clc
mov
ffreep
retw
dec
aad
inc
push
xchg
popf
icebp
lahf
dec
lea
dec
mov
pop
pushf
frstor
and
push
xchg
fwait
popf
and
jmp
jp
pop
jns
mov
mov
push
daa
movsb
adc
pop
jp
or
fwait
jp
pop
rolb
scas
sbb
or
xchg
sub
sub
inc
lock
pop
test
jle
sub
mov
fsubr
sub
add
stos
xor
ficompl
sub
stos
add
cli
push
mov
idivl
fiadds
push
adc
out
mov
or
mov
fneni(8087
push
xor
mov
stc
in
push
lods
leave
fnstsw
adc
lea
xchg
or
sarb
sbb
xchg
stos
cwtl
les
jp
push
ud2
pushf
lods
adc
out
mov
dec
pop
sbb
mov
cmpsl
push
sbb
or
ror
cmpsb
mov
xchg
mov
cmp
mov
faddl
xlat
out
mov
jl
sub
stos
loopne
fldcw
movsl
inc
ja
or
clc
out
cmp
add
jno
xchg
cmp
fmul
sub
cmp
loopne
inc
pop
jg
mov
fs
adc
mov
sub
mov
dec
xchg
arpl
push
js
out
jmp
ss
push
lock
mov
cmp
adcl
and
loope
in
adc
xor
pop
pushf
lds
into
popa
subb
dec
inc
adc
sahf
fildl
push
mov
ljmp
sbb
imul
mov
sub
sbb
push
stos
mov
add
icebp
cs
push
cmp
in
jle
scas
jo
adc
mov
mov
mov
in
dec
mov
fistl
bound
cwtl
mov
adc
cmp
ss
scas
or
pop
adc
mov
clc
pop
bound
xchg
cmp
and
pop
shr
pop
mov
mov
test
sbb
jbe
push
sbb
shlb
iret
pop
cltd
and
scas
fsub
aas
std
mov
lret
pop
ret
ja
rorl
xchg
ret
add
aas
sub
inc
movsb
mov
data16
push
aam
rclb
aas
jl
jmp
in
jbe
popa
dec
xor
lret
imul
je
xchg
add
fs
cltd
repnz
pop
in
mov
xorl
lcall
lock
out
and
stos
in
adc
mov
dec
dec
pop
daa
imul
insl
mov
cmp
mov
dec
inc
xchg
mov
mov
fbld
outsb
je
add
out
or
popf
jge
mulb
lods
outsl
scas
xor
adc
mov
cmpsb
hlt
icebp
fsubs
loopne
jl
push
pop
xchg
and
inc
into
adc
mov
data16
int
pop
sbbb
shrl
jno
mov
sub
mov
push
std
jb
arpl
dec
popf
pushf
sahf
cld
or
cmp
inc
mov
inc
push
jns
imul
lret
pusha
push
add
mov
stc
jb
adc
xor
sbbl
jbe
lock
mov
and
ljmp
push
mov
cmpsl
out
inc
push
or
ret
mov
test
mov
jle
out
sti
adc
pop
xchg
xchg
ss
pushf
and
cmpsl
inc
std
dec
adc
mov
inc
ja
mov
andb
push
out
push
test
imul
push
sub
mov
cli
and
lret
aam
stos
push
and
sub
xchg
popf
faddl
loope
xor
mov
mov
push
sub
or
sub
xchg
inc
adc
jmp
xchg
add
imul
aaa
ja
jl
loop
mov
jl
mov
and
push
xchg
mov
mov
add
mov
stos
lock
pop
or
mov
push
stos
cmp
xchg
stos
pushf
xchg
ds
mov
adc
mov
out
pop
sub
xchg
inc
loop
push
icebp
sub
daa
and
fs
push
pop
jp
jle
cmp
push
mov
adc
push
rorb
xor
hlt
or
imul
popf
in
cltd
shll
orl
es
out
push
aaa
push
xchg
or
xchg
jns
pop
inc
inc
xchg
into
adc
adc
ljmp
cmp
pop
popf
mov
icebp
insl
stos
mov
mov
add
sahf
mov
rcl
xchg
sbb
sub
fdivrs
jo
mov
mov
mov
jle
or
lods
add
sub
inc
fbstp
repz
or
mov
adc
movsl
cmp
movsl
into
push
lret
xchg
popf
fst
mov
add
sub
push
cmpsb
or
push
out
imul
dec
test
pusha
mov
jae
insl
ss
xor
test
cmp
orl
push
sbb
clc
repnz
xchg
add
dec
clc
pop
lcall
push
lahf
inc
test
push
das
mov
jge
add
iret
fstps
ret
pusha
outsb
data16
or
adc
add
dec
sarl
and
mov
arpl
mov
or
stos
mov
sahf
pop
sub
cmpsb
pop
ja
mov
rclb
mov
inc
pop
mov
mov
push
loop
xchg
pop
daa
insb
pop
mov
imul
aad
mov
push
aaa
and
stos
imul
push
lret
xorl
pop
insb
movb
nop
addb
dec
fs
mov
cmp
sti
adc
add
and
push
int
repnz
hlt
cli
inc
aam
scas
push
rorb
dec
sbb
cmc
mov
jb
je
inc
add
jns
in
ss
fcomps
mov
xchg
xchg
aam
insl
jo
mov
push
fdivl
pop
testb
dec
inc
or
out
jecxz
sub
insl
xor
repz
in
adc
dec
dec
jne
cmp
leave
pop
out
sbb
repnz
sbb
lcall
sar
mov
mov
add
icebp
aad
xchg
jbe
mov
sub
adc
loope
arpl
adc
mov
imul
mov
push
push
sbb
aaa
loope
loope
ret
mov
inc
push
test
jmp
test
push
inc
pop
mov
lods
iret
sbb
pop
add
lcall
fisubrl
fldl
sub
jl
dec
xor
mov
push
xchg
insl
pusha
xor
ss
push
pop
js
xor
xchg
xchg
mov
pop
or
sbb
mov
mov
negb
pop
jno
jnp
adcl
mov
nop
mov
and
cli
popf
or
outsl
mov
loopne
icebp
pop
mov
popf
pusha
mov
mov
jl
jmp
cs
push
in
jo
mov
ret
subb
pusha
int3
sahf
das
sub
jae
mov
sub
or
mov
push
sub
ja
lahf
and
pop
cmc
pop
pop
jnp
rcr
dec
popa
jge
mov
adc
mov
adc
stos
mov
and
pop
mov
mov
xor
or
inc
push
les
sbb
jmp
mov
popf
push
and
adc
jle
lret
xlat
or
inc
jb
push
push
pop
leave
fadds
mov
pop
push
xchg
mov
repnz
stos
mov
mov
or
ret
cmp
popa
lods
mov
push
movsb
or
jl
mov
setno
inc
jns
fidivrl
xchg
lods
rclb
ljmp
inc
cmp
cwtl
int
movsb
repnz
loop
xor
mov
stos
mov
dec
les
or
dec
adc
repz
rcrb
loopne
adc
pop
xor
inc
ret
mov
pushl
cmp
lret
ret
pop
cli
fucomp
adc
adc
test
or
push
fildll
out
jg
mov
lock
adc
fildl
mov
and
test
push
lods
pop
or
sahf
inc
mov
dec
mov
movsl
dec
or
or
sti
adc
mov
ffree
in
arpl
cli
add
pop
shrb
dec
cmc
xchg
mov
shlb
mov
or
mov
mov
xchg
mov
sub
les
push
pmuludq
addb
lock
roll
pusha
cmp
scas
push
shrl
mov
mov
jb
adc
repz
jg
lods
xchg
outsb
cmp
shrl
not
popf
mov
les
and
dec
subl
ja
iret
mov
test
stos
mov
adc
inc
ss
arpl
fidivrs
inc
jbe
mov
mov
sub
in
dec
mov
and
push
jae
jp
lret
das
adc
cmp
rorb
pushf
mov
scas
loope
es
in
jno
lcall
inc
push
sbb
jnp
sub
push
sbb
mov
arpl
add
arpl
push
dec
ret
incl
fstpt
test
mov
sub
fs
stos
and
lods
pushf
mov
push
xor
adc
mov
clc
mov
mov
cltd
sub
xchg
adc
sbb
shlb
push
jecxz
adc
imul
add
sahf
mov
stos
mov
daa
add
outsl
roll
mov
mov
out
mov
pop
dec
je
sub
mov
outsl
lahf
adc
or
jecxz
mull
ja
adc
sti
add
out
jo
and
sub
cld
out
cmp
sbb
nop
loopne
pop
push
push
outsb
sbb
mov
mov
out
addl
push
sbb
sbb
or
add
loope
jae
and
int3
mov
pop
push
in
push
jg
and
jge
outsb
jnp
mov
in
inc
imulb
jns
cld
fdivrs
mov
mov
hlt
aaa
jb
xchg
xor
adc
pop
pop
push
out
fs
lret
xchg
sub
jle
push
push
aas
sbb
imul
pop
mov
push
dec
scas
inc
dec
inc
rcr
dec
add
sbb
std
dec
inc
adc
dec
lret
addr16
or
cmp
push
jmp
mov
loopne
int3
lahf
mov
push
mov
daa
loope
cli
dec
pop
jecxz
mov
mov
xchg
push
ret
push
push
inc
fwait
mov
push
out
repz
cmp
or
in
ljmp
ljmp
lea
fidivl
inc
sub
scas
test
push
sahf
fdivrl
mov
push
repz
enter
daa
lcall
sub
or
out
pop
add
pushf
popa
shl
insb
test
jmp
aad
test
mov
dec
sub
xchg
mov
in
pop
into
dec
inc
addr16
xchg
fildll
shrl
and
insb
xlat
daa
aas
or
adc
adc
jae
ja
dec
test
in
xchg
pop
cltd
repnz
jno
fsubp
dec
jb
adc
sti
aaa
fistpll
aaa
mov
orb
test
shl
dec
lods
bound
rolb
cmc
int3
push
rcrb
test
sub
icebp
add
roll
cmpb
movsl
pop
inc
push
xchg
jmp
out
fldcw
call
mov
in
shll
cmp
xor
push
jle
inc
sub
je
in
mov
jl
add
ss
sbb
jmp
scas
jns
rorl
popa
mov
inc
fisubl
adc
imul
imul
xor
xor
ja
loope
test
and
lods
lahf
out
mov
pop
test
fdivrp
pushf
and
mov
pop
xor
xchg
xchg
movsb
sbb
pop
pop
dec
cs
inc
fistpll
push
cltd
les
aad
shll
adc
inc
xor
or
push
in
lods
inc
inc
mov
loope
or
mov
mov
movsb
mov
push
in
je
out
xchg
enter
sub
sub
mov
adcl
jae
test
call
cmc
fs
mov
sti
push
sbb
cmp
push
adc
mov
int
lea
lods
movsb
inc
inc
shll
lock
test
icebp
lods
das
adc
mov
out
fcoml
push
pop
mov
imul
jp
shl
xor
pop
dec
call
dec
scas
cmp
cmp
cmpsl
xchg
push
pop
xchg
push
or
stos
shll
mov
dec
aad
dec
pusha
or
out
push
je
pop
push
mov
popf
pop
mov
dec
add
sbb
loopne
adc
xchg
cmc
or
lret
arpl
inc
mov
jbe
test
mov
cli
adc
dec
sbb
jge
adc
push
pop
xchg
in
test
mov
ret
daa
mov
sub
rcrl
or
test
stos
or
or
jmp
mov
fistps
adc
jg
mov
aad
lret
aad
test
test
aad
inc
cli
xlat
lods
push
push
inc
pop
icebp
mov
xchg
loope
sarb
test
sbb
in
mov
out
test
je
pushf
pop
pop
inc
pushf
int
mov
leave
jg
sbb
popf
inc
sti
or
shlb
pop
push
or
push
out
inc
out
fcomp
out
or
stos
push
and
in
and
test
sahf
jecxz
lock
mov
jg
add
loop
movsb
adc
sbb
xor
lahf
sbb
popa
sub
rcrl
mov
mov
stc
fs
mov
pop
jp
and
ret
outsl
or
test
ret
lea
push
leave
lods
sbb
and
mov
test
jns
xor
imul
mov
pop
in
fs
lret
shll
lfs
leave
dec
enter
jmp
add
out
subb
mov
popf
jns
jns
mov
or
mov
sub
int
roll
and
jg
outsl
mov
jp
pop
pushf
jl
xchg
repz
push
inc
neg
and
int3
sti
sbb
ret
negb
mov
push
in
addl
imull
clc
jmp
popf
out
pop
fucomp
stc
rcrb
in
sbb
popf
pop
push
jb
xchg
mov
inc
in
out
ret
je
adc
or
adc
push
repz
jnp
adc
dec
add
lret
popa
xor
movsl
test
and
insl
mov
scas
push
stc
data16
dec
in
push
or
xor
xchg
andl
orb
mov
loope
subl
stos
faddl
ss
mov
lds
sub
mull
mov
push
xchg
xchg
dec
test
xchg
fnstsw
mov
pop
xchg
orl
dec
insb
sub
dec
sub
lods
pop
and
or
sarb
or
or
insb
incb
adc
jo
xlat
dec
pop
mov
and
xchg
jp
add
stos
loopne
dec
jle
in
or
adc
xor
leave
dec
mov
pop
sahf
mov
sti
and
out
les
mov
pop
stc
std
insb
iret
sub
jecxz
adc
test
in
mov
adc
inc
xor
mov
cmp
dec
fistl
sahf
push
and
mov
cwtl
orl
push
add
sbbb
mov
or
fstps
popa
aam
outsl
sbb
dec
cmp
xor
dec
cs
lahf
insb
outsb
inc
scas
or
cmp
shrb
fcomps
test
push
jns
dec
jne
jle
lods
cmp
ja
test
aad
lock
jne
shrl
jnp
mov
pop
push
push
push
mov
outsl
fsubs
inc
subl
mov
ret
or
or
rclb
cmp
or
into
jmp
loop
mov
pop
xchg
in
xor
mov
lret
jo
dec
scas
es
add
sub
mov
or
mov
or
xor
loop
inc
push
imul
jecxz
std
decb
or
sti
repz
xchg
and
push
sbb
mov
stos
fimull
push
xorb
pop
sub
mov
int3
mov
cmp
dec
push
xor
je
call
adc
or
insl
mov
cmp
lret
adc
fmull
arpl
cwtl
xchg
adc
xor
inc
add
add
ss
cwtl
cmp
lea
add
push
xlat
out
and
fiaddl
cwtl
mov
xchg
lock
lods
add
inc
sub
or
jnp
jmp
iret
fs
jbe
adc
lret
hlt
push
rolb
sub
adc
cmp
lods
mov
dec
hlt
enter
loope
stc
test
loope
adc
mov
daa
dec
call
mov
pop
jecxz
addr16
shlb
add
in
fsubl
stos
fisubl
clc
gs
insb
cmpsl
movsb
adc
repz
mov
or
test
adc
out
out
aaa
mov
mov
adc
add
push
push
xchg
adc
xlat
aad
ja
push
inc
xchg
or
or
stc
loop
sub
pushf
imul
mov
jp
adc
xchg
negl
or
ds
negb
xchg
jle
sub
xchg
push
lret
jl
lahf
in
cmp
sub
mov
scas
or
inc
dec
sbb
jae
jp
adc
mulb
inc
lret
clc
xchg
pop
xor
aad
add
mov
mov
xchg
in
aaa
in
jg
inc
int
imul
outsw
ret
add
mov
mov
inc
push
pop
mov
push
push
cmpsb
pop
mov
add
sbb
sub
mov
arpl
cli
test
cltd
movsl
jmp
jnp
dec
test
mov
jne
das
add
in
and
roll
add
daa
lret
and
mov
out
and
jno
inc
and
fnstsw
xor
adc
bound
pop
xor
push
ret
pop
or
jno
inc
sbb
les
cmpb
icebp
mov
sbb
sub
push
fcomi
or
outsb
js
icebp
test
and
adc
andl
loope
ret
push
xchg
mov
pop
jno
sahf
add
in
stos
cmp
and
sti
mov
pusha
jne
insl
sbb
repz
mov
jb
cs
xchg
addr16
out
fdivrl
lods
mov
push
dec
and
and
or
in
test
outsb
inc
mov
dec
movl
sub
add
sub
outsb
dec
mov
add
icebp
mov
dec
loope
iret
lock
xor
cwtl
js
push
push
cmpsl
cmp
mov
mov
aas
lea
test
clc
xchg
mov
es
ret
in
sub
aaa
sbb
ret
jae
pop
pushl
leave
mov
sbb
imul
sbb
and
inc
fcmovne
loope
out
jmp
or
test
xor
push
cmpsl
lea
sub
jne
test
sub
dec
pop
and
addr16
decl
cs
inc
ds
sub
xchg
shrl
dec
imul
out
xorl
mov
pop
inc
pop
pop
and
rorb
lods
int3
out
push
dec
dec
and
pop
sub
mov
js
sbb
aaa
notb
push
insl
pop
or
sbbb
mov
xlat
xor
loopne
push
sbb
jne
jle
mov
sbb
test
jne
mov
cmp
arpl
pop
xchg
mov
and
dec
adc
mov
cli
into
and
push
inc
notl
mov
adc
xchg
cmc
push
aad
dec
sub
out
push
cmp
inc
mov
shrb
push
cmp
add
mov
orl
divl
pop
inc
sbb
lret
push
enter
orb
push
insb
inc
push
test
cmc
dec
xchg
frstor
xchg
push
test
lret
lahf
jge
loopne
imul
cld
push
aad
sub
mov
cmc
divl
cmpb
inc
in
mov
mov
mov
mov
xor
faddl
test
mov
lret
cmpsl
je
cmp
test
push
add
pop
ret
mov
xchg
lret
daa
sub
add
xor
xchg
inc
xchg
pop
adc
jmp
lods
je
in
rcl
adc
enter
ljmp
add
gs
jae
and
aad
pop
in
cmc
test
jo
xchg
pop
loopne
push
sub
outsl
movsl
jmp
and
scas
jnp
ljmp
out
jae
in
xchg
lret
out
test
lret
into
out
push
and
push
adc
mov
pop
stos
dec
jae
xchg
add
repz
xchg
fdivrs
cmp
fsubrl
push
xchg
aaa
cli
xchg
cltd
jnp
ljmp
or
fwait
popf
call
inc
scas
push
enter
insb
mov
aad
out
into
mov
in
hlt
sbb
es
hlt
mov
xor
and
pop
jge
test
dec
fcomps
sub
stos
stos
cmpsb
add
repz
xor
jnp
mov
stos
add
fsts
out
pushf
sub
fs
jno
mov
iret
jge
mov
aas
jnp
mov
adc
stos
push
mov
and
add
inc
das
sub
mov
test
ds
enter
push
and
mov
clc
dec
aaa
or
rol
xchg
rolb
dec
sbb
and
and
push
sbb
push
xor
push
xchg
and
in
fxch
fistpl
cwtl
push
bound
lods
loop
roll
pusha
cli
mov
fnstsw
push
inc
add
fsubrs
jp
adc
int3
scas
data16
lods
and
arpl
inc
mov
jnp
mov
push
push
cwtl
and
mov
xor
arpl
idivb
inc
cs
mov
sahf
pusha
in
ds
dec
std
xor
shr
lahf
push
cs
adc
and
cmp
nop
lods
jb
sbb
fildl
or
sti
dec
or
je
and
pop
or
aas
push
scas
movsb
pop
nop
bnd
mov
adc
sub
inc
mov
or
xor
push
pop
sbb
sti
add
adc
pop
outsb
add
imull
pop
aas
fnstenv
loopne
inc
cmc
inc
pop
xor
or
outsl
xchg
pop
icebp
pop
out
xor
xlat
fdivl
push
js
outsb
inc
xchg
sahf
cmc
loope
call
jnp
adc
stc
mov
inc
pusha
in
stos
insb
inc
lea
out
sbb
loopne
sbb
cli
insl
sbb
xor
cmp
sub
push
shrl
xchg
xchg
aaa
and
add
xor
lods
jae
mov
push
jmp
push
xor
adc
in
pushf
andl
imul
cmp
ljmp
es
pop
rcll
enter
aad
and
jns
cli
mov
in
insl
leave
daa
xchg
rol
stos
fs
jp
iret
pop
dec
lock
sbbb
bound
mov
loop
dec
push
inc
mov
push
test
sub
shll
mov
jmp
lea
mov
fmull
xor
mov
ret
jp
adc
pop
lock
xor
push
popa
pop
std
test
pusha
sbb
inc
shl
push
xchg
and
mov
mov
sub
inc
push
lods
adc
daa
fidivs
lret
shrl
dec
inc
mov
jno
mov
xchg
dec
jge
call
jo
arpl
mov
push
mov
test
push
add
test
fmulp
movsb
pop
inc
adc
pop
sahf
and
pop
fisttpl
push
push
mov
lea
fdivp
pop
push
ja
std
lahf
dec
movsb
lock
sbb
subb
cmp
xor
loop
mov
inc
push
or
jbe
adc
xchg
into
push
outsb
pop
cltd
xchg
push
outsl
adc
scas
cmp
hlt
lcall
enter
push
stos
adc
fldt
leave
mov
ret
int
dec
push
pop
insb
adc
dec
inc
outsb
out
mov
adc
nop
sub
mov
test
jge
lods
jmp
dec
sbbb
push
iret
ret
jmp
fsubrl
imull
xlat
mov
cmp
fisttpl
xchg
out
cmp
xchg
jb
repz
mov
inc
rolb
push
addr16
in
js
popa
in
shll
sub
movb
ss
push
movsb
or
sbb
and
jg
cmp
pushl
dec
cmc
lret
aam
jo
movsb
movsl
and
popa
pop
cli
iret
mov
push
in
cli
sarb
insb
in
sbb
add
int
cwtl
les
push
mov
pop
or
adc
xor
shrl
ljmp
push
and
out
aaa
mov
mov
les
and
jmp
scas
inc
fcomps
cld
loopne
data16
jecxz
mov
lahf
int
pushf
fists
cmpsl
enter
dec
jmp
sbb
inc
addl
or
flds
inc
xchg
and
aad
inc
lods
dec
and
loope
jle
mov
cmc
push
dec
mov
es
repnz
int3
outsb
adc
sbb
lahf
std
add
lcall
jnp
insl
mov
leave
les
in
jecxz
inc
hlt
cs
pop
aas
add
adc
sub
dec
mov
sbb
sbb
rcr
mov
insl
je
xor
xchg
subl
mov
js
call
clc
imul
mov
lods
xor
dec
cmp
sbb
and
ds
inc
les
daa
movsb
cmpsb
shrb
adc
xor
rcl
mov
cmp
pusha
mov
inc
mov
sub
inc
jne
cmpsl
mov
push
lock
pop
out
repz
sub
cmpl
test
add
push
jmp
lahf
sub
dec
testb
ljmp
ljmp
test
lret
cmp
gs
sub
pop
or
xchg
or
fisubl
jmp
or
cmpsb
mov
ret
dec
mov
and
jle
jns
push
jle
jae
test
sub
in
xchg
nop
adcb
loope
and
es
pop
xchg
add
ret
xchg
cmp
xchg
out
mov
jmp
daa
inc
sub
rolb
cmp
pop
sbb
push
add
ret
push
add
movsb
xchg
je
test
jb
mov
lcall
lods
cmp
inc
fisubrs
and
jp
in
notl
in
andb
mov
mov
adc
fwait
out
fcom
movsb
jg
xchg
out
mov
rcrl
and
mov
sub
xor
xchg
xchg
adc
in
push
loopne
jnp
push
clc
aam
mov
mov
lret
or
mov
xchg
or
mul
or
cltd
mov
push
subb
shlb
insl
xor
xor
sub
das
add
xchg
push
into
cmpsl
cmp
jmp
adc
scas
xchg
fnstsw
sub
dec
loopne
pop
lds
ljmp
loopne
in
adc
inc
mov
xchg
adc
mov
sub
es
or
xchg
outsl
or
sub
dec
bound
rolb
xchg
rcr
mov
in
sti
pop
jnp
sub
add
push
stc
in
jmp
movsb
arpl
mov
jle
mov
test
mov
jp,pt
push
mov
xor
mov
lock
mov
int
mov
jge
fists
xchg
or
inc
push
repz
dec
mov
scas
rorb
or
sub
jns
add
stos
clc
pop
mov
inc
sub
lret
movsl
mov
imul
adc
sub
mov
jmp
and
xlat
ret
fdivrl
inc
loope
dec
aad
sub
enter
push
cmp
push
iret
sbb
pop
gs
add
xchg
popa
ret
adc
and
test
ficompl
hlt
sbb
adc
xor
cmp
test
lret
jmp
outsb
imul
int3
add
ret
dec
dec
sbb
and
call
mov
aas
mov
mov
bound
pop
adc
fisttps
xchg
adc
les
mov
or
add
inc
das
add
inc
insb
or
xor
mulb
mov
mov
sbb
jle
adc
push
mov
inc
sbb
cmc
push
xor
mov
divb
mov
cmp
jb
in
ja
push
stos
push
es
add
mov
sbb
loop
mov
ss
push
sar
cmp
pop
gs
lock
ja
scas
pop
mov
dec
nop
es
test
mov
and
xchg
hlt
fisttpl
add
clc
mov
popa
mov
cltd
add
sbb
aam
mov
popf
mov
xor
cli
sbb
xorb
and
inc
ret
mov
fidivrl
rcl
add
or
lahf
in
add
dec
mov
or
repz
pop
daa
ds
loop
les
sub
mov
jp
sub
add
call
pop
inc
test
inc
and
in
decb
loopne
mov
or
fistpll
sbb
cltd
cmp
or
push
aad
sub
out
adc
and
imul
and
push
sarb
outsb
xor
and
push
bound
pop
jne
stos
insl
int3
or
cmpsb
ja
mov
lods
jge
sub
test
jmp
dec
lcall
xor
lahf
mov
sub
sbb
aam
scas
fnstenv
mov
add
dec
std
test
iret
mov
add
paddb
lcall
sbb
push
lods
sbb
js
pop
cli
ss
xchg
adc
outsl
inc
dec
add
pop
cmp
jp
pop
mov
dec
repnz
sahf
lods
sti
dec
adc
stos
sub
lods
or
imul
dec
out
fwait
sub
dec
inc
cmc
dec
insl
dec
pop
mov
lock
imul
jp
pop
rcr
test
cmpsl
cmpsl
sbb
subb
mov
pop
cmp
or
xor
or
or
icebp
insb
jae
sbb
mov
out
test
cmp
sub
sbb
lds
daa
push
outsl
fbld
adc
mov
test
jnp
ljmp
sti
or
stos
decb
in
mov
shlb
jecxz
cmp
sahf
lock
sub
xchg
test
arpl
inc
cli
push
subb
inc
icebp
inc
push
js
adc
sub
cld
aad
movsb
xor
cmpl
sbb
add
push
jbe
daa
repnz
inc
cmp
push
mov
jmp
sub
imulb
mov
sub
iret
jle
dec
mov
add
sub
in
mov
dec
std
and
out
iret
xlat
stos
aaa
cmp
mov
imul
lea
insb
mov
xor
test
and
ss
test
mov
push
add
ficomps
into
and
pop
scas
cmp
xor
inc
pushf
jno
xchg
inc
stos
insl
and
xchg
xlat
cmp
mov
mov
cmp
inc
add
aam
inc
push
std
loopne
les
or
in
addl
push
cli
mov
iret
icebp
out
cmp
sub
addr16
xchg
js
punpcklwd
ljmp
inc
sbbl
mov
repnz
xchg
mov
test
jmp
mov
sbb
mov
pusha
ss
in
add
cld
out
or
inc
div
fistl
mov
rcll
pop
mov
test
push
dec
push
sub
leave
mov
xchg
test
pop
lds
pop
mov
sbb
lea
push
fdivs
pushf
icebp
lock
add
cltd
sbb
cli
stos
fsubl
mov
stos
fmull
in
pop
fsubp
xchg
or
mov
pop
subl
clc
jecxz
lret
dec
fwait
ljmp
sbb
std
icebp
scas
xchg
das
cld
dec
push
cmp
in
xor
mov
scas
iret
pop
jnp
mov
and
inc
pop
push
nop
loope
mov
vpmacswd
imul
hlt
xor
rclw
adc
xorl
sub
lretw
aad
sub
xchg
aaa
je
and
lods
std
mov
pop
pop
and
xor
ret
movsb
mov
mov
sub
std
pop
or
cmpsl
pop
fld
adc
sbb
mov
iret
imulb
dec
jno
mov
scas
cmpsl
pop
stos
sub
xchg
in
push
mov
jmp
call
fildll
movsb
dec
add
mov
pop
fsub
adc
jno
aaa
daa
jmp
adc
dec
pop
not
mov
mov
lea
es
xchg
cmp
adc
inc
stos
mov
inc
ds
sub
pop
dec
inc
push
jnp
into
jne
dec
mov
loope
mov
int3
fcmovnbe
xchg
add
jmp
mov
jo
dec
sarb
push
dec
clc
push
dec
popl
mov
jle
pop
xor
test
lods
push
or
inc
jg
xchg
xlat
mov
and
sarb
fldl2e
stc
lods
repnz
push
jecxz
mov
jmp
adc
add
lret
pushl
sbb
mov
add
lret
mov
sbb
pop
add
sbb
inc
ret
add
fbstp
xchg
push
ja
ds
sbb
sub
dec
or
adc
clc
lods
mov
xchg
jne
xchg
fiadds
inc
and
loopne
jmp
mov
inc
pop
sbb
adc
mov
das
adc
popa
es
fsubrl
pop
jne
lea
sbb
lds
sahf
mov
mov
mov
out
jns
lcall
mov
nop
pop
dec
jno
mov
push
test
jnp
cmpb
bound
stc
or
cmpsb
sub
mov
pop
pushf
dec
cmpsl
pop
cmp
or
ret
popa
outsb
fstpl
xchg
mov
xor
jo
in
jns
jecxz
and
in
cs
js
mov
test
fadds
and
mov
pushf
sbb
mov
imul
xor
mov
sub
repnz
orb
inc
shrb
aad
pop
fisttpll
dec
ds
arpl
dec
fwait
lods
dec
sbb
adc
ds
mov
arpl
pusha
fisubs
test
xchg
inc
or
cmp
fistps
push
shll
mov
iret
sub
jle
cmp
cmp
out
ret
leave
inc
inc
andb
mov
addr16
xchg
and
idivb
mov
imul
lret
mov
int3
scas
pop
es
add
pushf
daa
js
fs
out
daa
cmp
hlt
pushl
test
mov
add
inc
jle
sub
cmp
es
cltd
mov
pushf
ss
xchg
out
or
fs
mov
arpl
divb
jp
pusha
pop
cmc
clc
push
adc
sbb
repz
cmp
mov
fsubrl
jb
lds
sbb
daa
adc
xchg
cs
clc
cmpsl
mov
mov
mov
cmp
fs
lds
push
lcall
pusha
dec
sbb
dec
push
dec
cli
ss
sbbl
stos
or
jg
sbb
mov
in
adc
pushf
push
div
xchg
add
add
jae
call
push
adc
jns
jne
hlt
std
pop
repnz
stc
icebp
frstor
mov
std
shrl
add
cwtl
fwait
lret
add
shll
dec
add
sub
dec
or
jle
dec
sbb
imul
xchg
adc
dec
movl
xlat
add
dec
iret
arpl
add
cltd
popa
cmp
clc
stos
pop
pop
jl
call
ja
das
push
mov
lcall
dec
push
sub
mov
fs
lret
mov
mov
je
iret
or
in
test
xor
or
sub
cmp
icebp
pop
or
xchg
addr16
cmp
lret
aaa
pop
fxch
lods
sbb
mov
xchg
jb
sti
arpl
xchg
sbb
dec
mov
movsl
loope
jl
lods
ret
jb
cmp
inc
popa
in
popa
mov
pop
sbb
std
and
pop
les
mov
fiadds
pusha
fwait
mov
out
add
xchg
ret
pop
std
dec
jle
enter
and
je
call
roll
xchg
adc
dec
jl
mov
mov
fwait
xlat
add
stos
mov
bound
or
push
pop
gs
test
notb
adc
ficoms
push
outsb
test
sub
and
jmp
aad
je
addr16
jns
pop
shrb
jmp
loope
sbb
fucomp
and
movd
cmc
iret
addr16
aam
outsl
loop
aad
xchg
sbb
cltd
and
fwait
insb
movsb
jbe
in
mov
adc
pushf
inc
or
sub
jo
jp
aam
ret
push
aad
jb
jp
mov
or
mov
iret
xor
mov
in
push
push
adc
pop
dec
fdiv
push
jbe
aam
movsb
out
inc
test
scas
push
std
push
je
rorb
call
xchg
in
test
gs
insb
cmp
push
ja
dec
push
push
clts
cmp
subl
pop
or
movsl
add
sbb
and
repnz
lret
sub
pop
mov
fldcw
push
dec
xor
mov
sbb
xchg
mov
add
pusha
jle
mov
arpl
inc
gs
xchg
mov
mov
push
xor
or
push
cwtl
add
sbb
adc
mov
dec
inc
les
mov
insl
cmpb
lods
jmp
jecxz
mov
mov
cmpsl
mov
and
push
jmp
push
bound
aad
xchg
inc
sub
rclb
js
mov
stos
aaa
lret
pop
cmpsb
movsb
call
mov
incl
pop
or
lods
jecxz
pop
cmpsw
pop
call
cld
outsb
push
lock
mov
divl
rolb
inc
jns
ret
cmp
jnp
or
xor
negb
xor
idivb
dec
sbb
daa
push
jecxz
add
and
pop
test
iret
mov
aad
fcomp
in
cmp
je
rcrl
stos
adc
in
fldcw
adc
cltd
pop
ljmp
mov
add
ja
pop
bound
cld
sti
ds
adc
push
and
fs
mov
cmp
inc
out
xchg
xchg
cmp
lcall
mov
movsb
pop
pop
lods
cmp
pop
mov
dec
push
ss
mov
cmp
ror
pop
cld
test
jle
insb
faddp
cmpsl
lods
jl
lock
jg
ja
mov
jl
call
xchg
xchg
sahf
cmp
out
popa
mov
orb
jnp
insb
jne
or
lahf
mov
mov
mov
lods
pop
aaa
addr16
push
cmp
ss
dec
loopne
mov
into
stc
in
lods
xchg
pop
or
ljmp
cli
dec
cs
inc
sub
push
add
hlt
neg
js
pop
ret
push
divb
xlat
cmp
and
dec
int
int3
push
data16
loope
repnz
mov
mov
mov
loopne
xchg
xchg
daa
mov
push
dec
loope
dec
mov
inc
cs
push
cmc
shlb
fisttpll
and
sub
xor
lcall
insl
add
dec
sbb
sub
add
les
movsb
ljmp
sbb
dec
fsubs
mov
ds
dec
pusha
push
sbb
and
shlb
ljmp
aam
or
imul
jmp
inc
cmpsb
and
xchg
mov
scas
dec
imul
cmp
cwtl
test
imul
out
jecxz
pushf
loop
shrl
pop
dec
xchg
movsl
rcll
movsl
xor
cmp
cltd
popa
push
mov
dec
stos
sub
fwait
loope
or
mov
leave
icebp
out
jnp
fwait
sub
jns
lahf
sbbb
lds
sbb
fsubrs
mov
ss
dec
es
adc
dec
loopne
inc
fistl
adc
data16
mov
cmp
lret
aam
sbb
loopne
sub
cli
shlb
or
mov
xchg
pop
push
jnp
add
push
jg
outsb
test
cmp
lods
xchg
flds
mov
sarl
xchg
stos
sbb
lea
imul
add
push
or
pop
rcll
xchg
leave
mov
xchg
inc
and
jecxz
and
pop
inc
lcall
jae
pop
ffree
std
push
cs
xchg
inc
or
int
xchg
push
jl
cmp
in
inc
aad
adc
xchg
mov
pop
push
jg
mov
outsl
jno
add
push
popa
imul
xchg
lret
ljmp
sub
in
cmp
add
push
inc
insl
es
out
cli
xor
std
fistpl
insl
mov
in
push
lcall
mov
adc
or
cmpsb
mov
cmc
sbb
sbb
mov
enter
cli
and
and
pop
mov
pop
lcall
and
insb
les
sar
xor
shl
mov
inc
push
adc
loop
out
and
hlt
stos
xchg
mov
in
push
idivb
mov
pop
sbb
add
jns
dec
mov
andl
in
inc
inc
xchg
dec
jmp
push
sub
shll
hlt
mov
xchg
cmp
push
lcall
cltd
mov
shlb
ss
shrb
rcll
jo
dec
xor
push
aas
insl
cli
and
gs
js
andb
and
or
cld
mov
adc
mov
dec
cmc
jns
inc
das
lock
jo
ss
out
push
rorb
mov
jne
loopne
popa
mov
push
into
sti
mov
mov
orb
int
inc
mov
jno
out
bound
sbb
jns
rol
jo
inc
idivl
movsb
test
dec
cmp
cltd
movl
call
inc
test
cld
adc
xchg
ljmp
mov
in
mov
cltd
iret
sbb
add
pop
in
mov
jmp
pop
sbb
jmp
repnz
adc
mov
nop
xor
pusha
je
cld
cmp
sub
test
xchg
movsb
addr16
fsubl
fdivrp
cmp
enter
aam
imul
enter
and
or
hlt
mov
inc
addb
jns
push
mov
nop
dec
xchg
add
in
mov
inc
pop
aad
in
push
aam
and
push
xchg
xchg
sahf
adc
ret
pop
xor
call
or
adc
inc
mov
inc
mov
sbb
lods
and
cmpl
insb
insl
mov
xor
popf
mov
xchg
pop
lret
test
out
add
rclb
fwait
mov
inc
or
ss
in
fcmovne
or
adc
cwtl
std
nop
sub
lds
pop
cmp
fwait
jecxz
fbld
pop
mov
dec
movsl
mov
jo
push
call
hlt
push
cmp
mov
cwtl
push
shl
fcmovu
jb
hlt
fwait
jmp
adc
fst
inc
test
shlb
icebp
pop
push
iret
cwtl
ljmp
mov
idivl
jae
addr16
enter
mov
insw
and
scas
mov
nop
rclb
jle
sub
pop
sub
mov
fcomp
cmp
xchg
mov
loopne
stos
xchg
out
pop
stc
enter
dec
pop
pop
adc
mov
jnp
shlb
lret
ficomps
mov
ds
sbb
mov
or
je
cmp
aaa
fistpll
out
xlat
add
mov
jg
adc
bound
jle
imul
enter
flds
orb
or
mov
or
in
jg
ss
sbb
xadd
mull
arpl
mul
xor
into
into
pop
sub
dec
xchg
mov
push
sbb
push
in
fwait
sbb
jl
push
mov
mov
loopne
xchg
imul
insl
sub
in
repnz
lock
jg
xor
popa
lock
cmpsl
sbbl
inc
lods
fnstsw
addr16
or
or
add
add
sub
scas
dec
movsb
mov
mov
adc
repz
dec
xor
push
pop
fcos
mov
xorl
js
out
sbb
lret
push
jp
sub
jmp
mov
mov
mov
rcrl
test
and
inc
xchg
js
jne
sbb
dec
mov
bound
lret
aas
ljmp
xchg
leave
mov
xor
xor
test
inc
orb
bound
xchg
add
fdivrl
aad
out
fstpt
sti
mov
and
push
push
sbbl
mov
pop
enter
fisubrl
orb
aaa
fsts
jg
adc
inc
call
stos
jl
ss
cmp
xlat
cltd
insl
lods
hlt
mov
or
sub
inc
aad
mov
adc
mov
dec
test
insb
stos
arpl
jle
das
lahf
jg
int3
pop
call
mov
push
ret
mov
pop
push
sbb
jnp
pop
inc
mov
xchg
aas
lcall
lods
dec
fdivr
xor
dec
stos
adc
xchg
mov
cwtl
or
ljmp
add
adc
pusha
mov
pop
xchg
rcrb
loope
xor
aad
rolb
adc
inc
jb
mov
cmpl
call
shlb
or
loop
das
xchg
cmpsb
mov
push
fcompl
or
addr16
push
psubusb
sub
out
adcl
rcrl
mov
or
insl
push
and
repnz
pop
sbb
push
mov
nop
sub
scas
push
sahf
inc
push
sbb
scas
xor
jge
std
test
sbb
daa
cmp
pop
outsl
jle
fldenv
inc
adc
dec
jo
inc
push
push
sbb
lds
je
int
aad
mov
aas
fcoms
sub
or
sub
push
jb
pop
pop
adc
push
pop
mov
push
mov
or
inc
test
out
pop
xor
je
lcall
test
das
xchg
test
adc
out
push
inc
out
push
pop
fdivs
push
mov
and
pop
aas
loop,pt
sub
ja
adc
dec
push
add
mov
js
sub
repnz
xchg
icebp
jl
leave
orl
or
mov
sbb
add
jmp
push
xchg
cmp
ja
stc
rolb
pop
popa
movsl
int
push
js
cld
sub
mov
and
mov
sbb
fimuls
mov
rclb
sub
add
adc
push
cmp
outsl
fmuls
xchg
cli
in
cmpl
hlt
mov
xlat
jno
mov
test
mov
jb
xor
in
or
cmp
les
fdivrs
outsl
mov
cmpsb
notl
cmp
or
sahf
outsb
xor
pop
jg
in
pushf
data16
push
pop
cltd
mov
icebp
xchg
stos
aam
push
dec
fisttpl
ljmp
lds
push
jo
and
loopne
enter
lahf
add
mov
ret
rclb
xor
fstps
sbb
cltd
imul
inc
fbld
fcmovnu
popf
sbb
sbb
xor
inc
or
jbe
xor
inc
xor
jmp
mov
adc
arpl
pop
fcomip
pop
in
dec
pop
lret
popa
add
xchg
sar
int3
or
add
inc
push
test
or
or
mov
push
mov
idivb
jne
or
call
scas
orb
lea
xor
insl
sub
cmpsl
shll
call
leave
inc
negb
outsb
push
push
clc
stos
inc
test
andb
fldenv
ret
aaa
fbstp
mov
addl
mov
enter
sub
xchg
clc
imul
sahf
push
xchg
ljmp
inc
addr16
cli
js
push
shll
cli
mov
push
sub
mov
imul
add
cmp
push
repnz
mov
sbb
into
cmp
out
dec
icebp
insb
or
popa
mov
iret
and
cmc
repnz
jl
pop
push
les
in
out
xchg
sbb
xlat
dec
sub
cwtl
outsl
cmp
jbe
mov
add
lea
out
cli
subl
add
imul
outsb
sbb
mov
xor
jg
or
mov
add
push
mov
outsb
mov
cltd
dec
adc
pop
les
pop
stos
jmp
pop
iret
dec
aad
mov
mov
ficoml
xor
adc
inc
mov
aam
mov
lret
ret
sti
lods
neg
jmp
xchg
or
scas
lcall
pop
sbb
and
cmpsl
fstps
mov
hlt
lds
ja
inc
int3
mov
jae
repz
test
lds
mov
jle
mov
movsb
adc
decb
ret
cmp
je
mov
xchg
pop
loop
xchg
out
imul
aam
aas
mov
loope
add
mov
test
jp
mov
xorb
mov
aam
jbe
cmp
popf
test
pushf
rcrb
sbb
xchg
cmpsl
pop
flds
mov
iret
jl
icebp
shll
movsl
dec
call
mov
shrb
popf
sbb
pusha
push
insl
pop
sub
and
xor
jp
sbb
adc
lea
mov
in
push
pop
push
inc
mov
pusha
and
mov
pop
aaa
adc
dec
and
jo
or
test
pop
cmp
lcall
inc
jns
push
cmp
je
dec
rorb
pop
rclb
mov
in
sub
dec
push
pushf
in
insl
popf
xchg
mov
test
sbb
pop
mov
sub
mov
inc
aas
lret
imul
push
ret
and
addr16
or
push
les
push
test
pop
inc
daa
shlb
in
pop
jg
inc
loopne
dec
fs
je
or
push
adc
std
jae
sub
call
mov
idiv
push
scas
push
mov
pop
sub
ret
stos
lret
sbb
outsb
sub
adc
shl
xchg
jge
and
mov
daa
adc
mov
and
loopne
and
pop
xchg
add
rolb
movsl
mov
fnstcw
push
in
icebp
fwait
add
jg
sub
adc
imul
mov
aam
shll
cmpsl
dec
or
movsb
or
adc
jge
cltd
bound
pop
inc
lea
sub
mov
add
out
nop
out
pusha
add
sti
xor
cmp
cmp
mov
adc
mov
inc
lret
clc
adc
call
xchg
loopew
mov
hlt
stos
ficomps
lods
stc
daa
nop
push
add
dec
xchg
jb
cmpsl
inc
push
pop
or
xor
sub
daa
xor
lods
add
nop
call
fcmovb
inc
cmp
push
aas
into
push
mov
xchg
out
and
insl
adc
cmpsl
sub
xbegin
inc
and
dec
test
mov
les
dec
movsb
or
mov
iret
cmpl
stos
inc
imul
jo
dec
xchg
js
popa
push
sub
xchg
lea
ret
jge
jnp
shl
aad
outsb
pop
mov
mov
into
jne
sbb
es
jp
xor
sbb
in
adc
fimull
mov
cmc
cmp
imul
adc
lods
es
stc
adc
in
fs
mov
insl
mov
int
out
cmp
pop
cmc
and
inc
insb
jecxz
inc
out
adc
mov
xor
and
and
adc
mov
test
clc
jg
in
fldl
mov
lret
popa
test
jbe
pop
cmp
test
orb
pop
inc
jb
sbb
jnp
inc
xchg
sub
lods
xchg
xor
pop
scas
je
inc
dec
cmpsl
sbb
inc
push
daa
jb
stos
adc
ss
xchg
push
mov
mov
icebp
stos
pop
leave
sbb
aad
rcll
inc
pop
arpl
inc
mov
pop
jle
out
dec
or
xchg
xor
test
pop
dec
jle
add
push
xor
cmp
icebp
inc
leave
xor
sub
ss
add
jmp
out
and
js
cmpsb
aas
and
lcall
cltd
pop
or
pop
lds
and
int3
ret
and
xchg
add
cwtl
adc
xchg
das
xchg
loope
cmc
das
in
cmp
jg
xchg
push
loopne
push
push
hlt
gs
mov
mov
jmp
adc
shrl
cmp
mov
pop
dec
push
push
sti
cmp
mul
xor
inc
jg
shlb
sub
mov
loope
cs
pop
and
out
mov
test
push
dec
inc
cwtl
movsb
lods
mov
test
xor
lret
xor
mov
jae
or
loopne
fucomp
dec
ret
lea
mov
inc
jg
inc
pushf
adc
movsl
insb
lods
into
cmp
push
adc
push
das
out
xchg
mov
loopne
daa
adc
and
and
xor
pop
aaa
adcl
and
icebp
mov
out
js
push
pop
xchg
shr
jl
and
test
clc
pop
and
xor
js
lods
mov
adc
out
movsb
add
cmc
or
push
pop
sbb
and
ss
js
ret
add
fsubr
daa
mov
popf
lock
or
and
mov
jnp
inc
and
jle
jne
pop
lahf
repnz
add
outsb
adc
mov
in
stos
or
pop
pop
dec
bound
inc
stc
cmpsb
push
jnp
sub
arpl
outsl
sbb
inc
inc
gs
pop
mov
and
insl
pop
mov
xchg
sub
sub
dec
rcl
and
lds
jbe
xor
lret
inc
mov
pushf
mov
js
xor
mov
jns
and
push
sbb
mov
and
pusha
xchg
popf
add
sbb
fwait
and
sti
cmp
or
repz
xor
adc
testl
mov
daa
movsl
pushl
jns
aaa
dec
enter
iret
sbb
cwtl
sbb
jo
insb
and
dec
mov
mov
fxam
jmp
mov
sub
jmp
rorb
jl
and
enter
out
push
mov
push
sar
test
push
sub
lock
pop
pop
sub
nop
stos
leave
push
fsts
lds
adc
addb
push
inc
faddl
push
mov
lea
repz
sub
mov
dec
outsl
stc
xor
xchg
call
adc
loope
sbb
ljmp
cwtl
pushf
push
jmp
rolb
push
test
in
and
sbb
out
outsl
inc
xchg
mulb
jb
call
out
inc
push
mov
adc
push
jae
mov
mov
ljmp
or
and
add
cmp
mov
in
add
out
inc
mov
jne
pop
addr16
cmp
add
mov
mov
mov
dec
daa
in
sub
cmpsb
xchg
sub
fdivs
mov
aad
ljmp
rcl
mov
push
jl
mov
mov
jp
icebp
arpl
sbb
fst
aam
daa
loopne
inc
xchg
or
loopne
dec
mov
nop
sti
adc
sbb
push
xchg
xor
lret
sub
xchg
aas
cs
jp
xchg
daa
xchg
mov
xchg
xchg
sbb
fiadds
xchg
dec
dec
mov
imul
call
pushf
hlt
xor
dec
je
sub
xchg
lret
fistl
or
or
pop
lods
cmpsl
fisubs
jb
sahf
in
imul
mov
xchg
repz
repnz
dec
jo
ds
loop
fadd
jge
es
aad
inc
jg
xlat
jnp
xor
fbld
lcall
fs
test
push
mov
icebp
inc
icebp
xor
jne
pop
sbb
jae
pop
pop
loop
in
mov
aas
add
out
sub
cmp
lret
hlt
dec
in
lds
pushf
pop
insl
loopne
aad
ja
aad
pushf
hlt
xchg
pop
mov
bound
jmp
add
es
vmread
push
in
shr
xor
xor
das
subl
lret
imul
fadds
arpl
mul
daa
mov
and
icebp
call
add
add
loopne
xor
repz
fsubr
ds
cmp
popa
adc
ds
mov
aam
adc
test
mov
mov
ja
push
imull
loopne
dec
stos
xchg
or
in
and
js
add
hlt
jecxz
faddl
stos
sub
sub
inc
les
icebp
xlat
push
popa
push
ljmp
jg
testb
pop
dec
popf
inc
dec
xor
dec
lcall
dec
ja
mov
daa
mov
cld
xchg
jp
sti
popf
pusha
popf
push
cmc
mov
ret
add
jb
das
icebp
xor
fwait
or
sub
aas
int3
sub
lcall
pop
out
adc
movsl
test
mov
ja
jae
insb
repnz
lret
out
cld
aas
out
push
dec
loop
xchg
adc
rclb
lea
jnp
test
imul
bound
xor
sbb
and
mov
in
and
loop
push
xchg
loop
rorb
jmp
sub
add
inc
imul
add
scas
push
test
call
inc
loope
das
adc
les
add
pop
fwait
jb
jg
arpl
push
cmp
jle
shl
jg
or
jo
scas
lcall
mov
adc
mov
cwtl
add
inc
cmp
mov
mov
xorb
push
sbb
jecxz
stc
fisttpl
lods
adc
sbb
xor
mov
inc
push
gs
subb
pop
xchg
inc
mov
shlb
mov
lahf
loopne
mov
add
aad
outsb
scas
xchg
push
lds
call
sbb
push
cltd
add
jl
or
sub
adc
push
jb
mov
iret
sub
xchg
push
push
faddl
mov
in
pop
push
push
inc
mov
out
xlat
hlt
fdivs
sbb
dec
fiadds
mov
popf
cs
mov
and
adc
mov
xor
cmpsb
mov
rorb
mov
mov
push
icebp
add
jmp
fldenv
xor
dec
fadd
mov
movups
shll
or
or
fwait
lods
test
mov
sub
xchg
or
imul
ret
int3
stc
stos
push
sub
pop
and
movsl
cmp
mov
js
fwait
jne
pop
mov
and
rorl
jp
or
subl
or
nop
add
mov
rcrl
sbb
xlat
cmp
ds
enter
aad
popa
mov
mov
xchg
popl
dec
out
lods
out
lods
in
out
test
cmp
jne
cmp
test
ss
sti
mov
out
inc
jmp
outsl
aas
icebp
aad
fsubrl
add
dec
mov
and
pop
fcmovu
cld
loopne
sbb
shlb
xchg
or
fisttpl
cwtl
cmp
pop
les
jecxz
sbb
cli
fsubp
sbb
push
ljmp
neg
inc
jns
sbb
and
mov
sub
mov
lods
xchg
mov
dec
fnstcw
push
lcall
lock
sub
pop
sub
fisttps
in
ja
test
mov
das
aaa
test
inc
lods
adc
pop
mov
add
dec
shlb
cmpl
enter
ror
and
dec
pop
sbb
mov
aas
jno
mov
inc
cmp
xchg
sbb
and
lret
dec
mov
sti
fstl
mov
cld
xchg
fs
lcall
pmulhuw
pop
shl
cwtl
flds
pusha
hlt
mov
xor
add
mov
xchg
and
push
outsl
inc
mov
mov
or
arpl
stos
pop
push
sbb
in
leave
xor
dec
popa
add
pop
dec
nop
mov
and
icebp
dec
and
push
add
mov
push
jo
dec
das
jmp
test
cmpl
pop
sbb
dec
repz
mov
out
mov
andb
ja
xorb
rcrb
adc
xchg
lret
add
mov
xchg
lea
push
mov
shlb
cmp
stos
sub
push
and
adc
test
mov
pop
cltd
mov
fsubr
cltd
fptan
repnz
and
aad
push
pop
xor
popf
dec
inc
push
in
push
jo
mov
pop
push
mov
mov
add
mov
cltd
repz
mov
out
adc
in
pop
loopne
pop
sbb
cmpsb
inc
or
bound
aad
stc
and
xlat
xchg
nop
cmp
ss
adc
and
mov
and
push
aam
lret
jnp
adc
cld
out
push
test
movsl
sub
fisubs
xchg
out
mov
daa
mov
add
inc
cmp
jp
xlat
rol
inc
sbb
mov
xchg
repnz
pop
mov
sbb
std
xor
ret
rolb
fwait
mov
sub
and
or
xchg
arpl
xchg
xchg
negl
sub
mov
out
shlb
mov
arpl
xor
arpl
stc
enter
ljmp
xor
orl
shl
sbb
outsl
fcmovnbe
sahf
fisttps
push
shl
arpl
sbb
mov
aam
mov
ja
mov
rcll
mov
enter
cmp
cmpsb
jmp
rcrl
jmp
loop
out
cmp
orl
sbb
push
mov
imull
out
dec
out
push
mov
mov
lcall
mov
sub
les
inc
jne
xchg
in
cmp
inc
and
not
sarl
hlt
push
and
aaa
jle
fs
mov
stos
pop
mov
int3
mov
aad
into
pop
ss
inc
in
sub
lahf
mov
or
dec
das
sub
jp
in
out
sub
mov
or
push
jg
lds
add
inc
sbb
xchg
sahf
mov
arpl
ret
inc
std
xor
xor
dec
lcall
fnstenv
out
and
fstpl
xchg
arpl
mov
cmp
mov
xor
mov
dec
push
fadds
dec
jmp
adc
jae
pcmpgtd
xchg
pop
rcrb
mov
fsubrp
test
or
mov
in
cmpsb
lods
or
roll
lcall
xchg
bound
add
push
cmp
sub
inc
lcall
filds
test
mov
cmp
dec
stos
add
cmp
jae
mov
xchg
mov
ljmp
enter
inc
sub
mov
or
adc
mov
mov
lods
iret
daa
test
in
or
arpl
mov
es
jo
cld
sti
jns
cmp
callw
jmp
mov
or
or
push
mov
jge
rcrb
push
mov
sbb
dec
mov
scas
sbbb
cli
cld
jmp
pusha
and
movsb
sbb
jae
xchg
sub
push
mov
hlt
xchg
int
test
mov
mov
cmp
add
mov
xchg
test
test
fsubrs
cmp
and
mov
lahf
mov
mov
pop
mov
std
push
in
cli
xor
iret
add
push
lcall
std
pusha
std
adc
scas
jge
aam
cmpsl
inc
and
jp
adc
xor
mov
cmp
or
jmp
add
xor
xchg
fdivrs
push
mov
inc
sub
add
jne
cltd
vmaxpd
arpl
negl
mov
cmp
arpl
and
leave
mov
aaa
and
dec
in
and
pop
cmpsl
imul
dec
es
inc
testb
je
push
sti
lret
ret
mov
mov
adc
mov
int
xchg
icebp
add
mov
aas
cmp
sub
xlat
loope
mov
cmp
xchg
loopne
sbb
das
sarl
loop
movsb
sbb
mov
andb
cmp
jne
js
movsl
add
gs
imul
push
cmp
sti
push
jle
sbb
sub
das
adc
sbb
cwtl
xor
jecxz
les
in
lea
mov
adc
mov
xor
shlb
xchg
jp
jo
insl
mov
or
pushf
rcrl
arpl
gs
fmulp
jge
mov
out
or
xchg
inc
sahf
mov
and
sub
clc
fsubrl
xlat
sub
aam
mov
cmc
jecxz
fld
rcll
addr16
push
negl
mov
gs
inc
imul
pop
loope
inc
test
mov
test
adc
cmp
pop
and
push
bound
add
ret
mov
sub
pop
fcoms
sbb
out
sbb
bound
cwtl
xchg
addl
ds
pop
dec
and
stc
cmp
in
inc
pop
adc
mov
ror
jns
cmp
loopne
cmpsl
fnstsw
dec
pop
jle
mov
scas
loop,pt
inc
aad
mov
aad
add
lds
aad
and
mov
cmpsb
cmp
nop
rol
jg
xchg
or
bound
pop
repz
daa
loopne
data16
push
push
and
dec
jb
add
aad
scas
push
cmp
and
test
cli
and
lock
inc
repz
insb
mov
mov
sub
mov
or
sbb
lahf
stos
scas
test
icebp
sbb
iret
jecxz
aaa
xchg
enter
push
xor
push
inc
out
adc
loope
push
popa
sub
lahf
xchg
push
dec
xor
pop
cwtl
inc
ljmp
sub
mov
add
mov
xchg
cs
sub
cmpsb
pop
mov
ljmp
xchg
xchg
mov
in
insb
push
jecxz
mul
mov
inc
cmp
fimull
xor
cmpsl
add
cli
mov
push
mov
popf
fnsave
jmp
lods
pusha
leave
inc
mov
inc
cmp
sub
pop
pop
xchg
push
int3
adc
mov
and
ss
fisttps
popf
ja
insl
pop
out
xchg
dec
test
xchg
out
push
aam
xor
inc
mov
lahf
aad
xor
sub
lock
test
xor
push
mov
mov
roll
repz
jg
lret
cmp
xor
test
xor
in
or
cwtl
add
insl
loop
shlb
cltd
mov
addb
xchg
adc
lds
jno
std
imul
shrl
movsb
aam
loope
stos
push
shl
aad
mov
clc
pop
dec
add
mov
jo
and
shlb
cwtl
rcl
push
xchg
fbld
loop
into
xor
mov
lcall
mov
sbbl
testl
into
aas
int3
in
cmp
rcl
sbb
loop
outsb
cmp
dec
push
pop
fists
add
sub
scas
dec
sarb
adc
mov
and
pop
int3
dec
mov
add
lret
xor
gs
lock
ss
sbb
and
sbb
push
aas
sbbl
cmp
shll
or
mov
arpl
xchg
pop
and
inc
fistl
xor
xchg
mov
ljmp
jne
mull
and
adc
cs
xchg
aas
push
adc
and
sbb
jecxz
pop
add
jns
addr16
cmp
and
add
ret
jp
add
jg
xor
xchg
cmp
cmp
xchg
insb
jae
add
movsb
and
add
pop
jo
scas
adc
jo
mov
push
sbb
sub
inc
andl
test
cld
push
test
xor
icebp
jns
ret
push
mov
jmp
sbb
jmp
or
addr16
jge
and
scas
and
adc
clc
rclb
ret
xchg
into
icebp
lods
ljmp
addl
icebp
pop
cs
mov
popa
mov
push
pop
rcll
inc
aas
dec
in
movsl
fistpll
jno
insb
addr16
ljmp
jno
into
or
in
nop
fisttps
hlt
lods
fs
ret
test
lods
xorb
and
dec
sbb
cmp
sub
es
js
pop
ss
call
push
xor
out
lds
dec
loopne
fucomi
das
mov
adc
jnp
adc
jl
add
inc
sub
stc
xchg
cmpb
and
xor
imul
mov
negl
in
int3
test
sbb
int3
popf
stos
xor
push
imul
jmp
ja
jecxz
add
and
sub
inc
push
repz
cmp
dec
mov
and
mov
push
out
mov
setl
sbb
cmpsb
ficoml
fdivl
mov
rol
popf
fsubr
inc
inc
sbb
mov
lret
mov
out
inc
push
mov
adc
enter
jl
fcoms
push
mov
aad
mov
ficoml
test
cmpsb
mov
add
ss
push
fstpt
and
fiaddl
gs
cmp
dec
mov
add
movl
add
pop
add
sub
enter
icebp
ljmp
cs
hlt
popf
fwait
mov
inc
jecxz
loop
imul
xor
aam
clc
leave
in
mov
cmp
sbb
and
imul
lods
jmp
ret
mov
push
sub
and
jnp
xor
or
jle
clc
push
sub
inc
fcoml
sbb
nop
movsl
shrl
fistpll
in
shrb
adc
mov
stc
gs
daa
fiadds
std
pop
mov
inc
test
js
jmp
mov
sub
fdivl
sbb
push
add
pop
mov
mov
iret
lea
push
sahf
fnstenv
int
in
adc
int
inc
cmp
data16
xchg
adc
mov
mov
test
cmc
mov
jnp
in
xchg
jno
mov
mov
es
push
jae
hlt
pop
fisttps
push
call
cvtpi2ps
xchg
movsl
push
sub
or
imul
ljmp
xor
xchg
out
mov
cmp
add
add
rorl
mov
les
xchg
lret
lcall
cs
jnp
add
in
sub
lock
test
dec
push
outsl
inc
push
cmp
movsl
add
push
sbb
xor
jo
lahf
inc
mov
push
pop
fadd
in
pushf
pusha
xchg
push
mov
cwtl
xor
xchg
js
jecxz
popa
int
addl
push
sbb
cmp
cmpsl
fiaddl
lret
mov
std
push
cwtl
movsb
mov
sub
push
and
cmp
loop
mov
in
cld
scas
cmp
and
cmp
add
mov
loop
jle
jmp
fdivs
push
imul
ja
push
faddl
leave
cwtl
dec
push
lret
out
pushf
enter
and
cld
or
push
in
aas
stos
ja
xchg
insl
or
jg
cmc
xor
call
loop
sbbl
les
outsb
aaa
mov
pop
fbstp
popf
shl
pop
pop
jp
lock
testb
stos
jo
mov
int
push
jo
mov
dec
and
push
enter
insb
push
xchg
ds
jb
cmc
mov
stc
loope
sbb
inc
loopne
push
lret
xchg
ljmp
int3
cmp
je
jnp
lods
fwait
cmp
jnp
sbb
sbb
jecxz
jno
stos
add
dec
int
stc
and
outsb
sbb
jge
or
fstps
cmpsl
fs
stc
js
sbb
push
faddp
test
ficompl
jp
sub
arpl
aam
adc
pop
mov
jns
daa
loope
mov
push
daa
subl
enter
sub
pop
fcmovnu
dec
leave
lahf
mov
popa
jbe
jns
mov
dec
clc
sbb
xchg
add
jle
mov
pusha
ret
push
cmp
je
iret
into
fs
mov
popf
pushf
or
ljmp
dec
testb
inc
adc
mov
mov
rcrb
es
mov
popa
aaa
mov
and
js
scas
aas
mov
rorl
or
stos
addr16
aas
sub
shlb
rorl
aam
cwtl
push
into
sub
adc
mov
cmc
mov
jg
nop
int
mull
cmpsl
jns
push
nop
pop
lods
nop
and
xor
cmp
sub
cmp
movsb
je
fsubl
add
pop
sbb
jns
inc
adc
and
and
inc
dec
scas
aam
insl
outsl
addr16
and
sti
lods
xorb
sub
jb
cmp
sbb
dec
sub
stc
xor
adc
mov
hlt
sub
add
movsb
lods
in
pop
pop
stos
xchg
adc
dec
xlat
loope
xor
cmp
sbb
int
inc
faddp
das
imul
fldcw
mov
popa
fidivs
sti
push
cmpsl
lcall
mov
pop
loopne
cld
xchg
aad
aad
xchg
insl
jecxz
pop
sbb
pusha
iret
cmp
xchg
scas
test
mov
fs
inc
mov
mov
lea
adc
lahf
inc
mov
cmp
popa
inc
andb
subb
sbb
push
sbb
data16
in
call
jp
xchg
mov
adc
addr16
outsb
rcl
das
bswap
pusha
and
inc
sbb
mov
lods
rcr
loop
add
insb
addr16
cmpsb
cmpsb
mov
fwait
push
mov
and
pop
xchg
out
pop
push
and
xorl
xor
repz
cs
add
push
push
icebp
test
inc
clc
stos
dec
cmp
ret
daa
or
xchg
cmp
ja
pop
adc
sbb
enter
pushf
jns
mov
jbe
adcl
adc
sbb
and
jnp
out
sub
in
mov
ss
adc
push
cmpsl
ljmp
cmp
mov
int
fs
mov
shl
dec
ss
fisttpl
pop
push
jmp
aaa
jmp
divb
xchg
sti
jle
inc
and
addb
dec
mov
sbb
push
test
insl
mov
mov
sbb
mov
xchg
jno
stc
mov
dec
mov
insl
bsf
push
mov
sub
repz
fcmovu
int
cmp
int3
dec
or
xchg
sub
add
mov
xchg
push
dec
fmuls
pop
inc
enter
imul
jno
outsl
icebp
lea
popf
adc
sub
in
std
hlt
clc
adc
ja
mov
loop
shlb
xor
sahf
or
or
mov
int3
movsl
pop
mov
sbb
iret
adc
mov
cmp
xchg
notl
rcl
fistl
cmp
mov
mov
push
inc
insl
rcrl
sub
add
in
fdivr
inc
lcall
dec
mov
outsb
shll
lods
fiadds
xchg
ja
jne
mov
mov
jg
and
inc
push
addr16
mov
cmp
dec
add
add
mov
fidivrs
xchg
call
imul
mov
mov
nop
push
jge
or
in
mov
adc
out
mov
sbbb
fistpl
xchg
mull
add
xchg
gs
outsb
rolb
scas
add
mov
pusha
scas
push
imul
loopne
aaa
cmp
lock
adc
ret
push
jae
das
cmpsl
dec
leave
pop
dec
movsl
pop
rcrl
cld
into
xorl
aaa
aaa
cmp
and
pop
ljmp
jno
mov
push
movsl
loope
dec
xor
roll
jnp
dec
mov
leave
add
in
dec
jmp
mov
aaa
int3
mov
mov
fsubl
repz
mov
xor
int
in
mov
fldt
jp
inc
mov
mov
push
xchg
aam
test
repz
sub
sub
cmp
and
push
pop
jle
in
sub
cmp
pop
fsubs
ljmp
mov
insb
push
lret
clc
lea
dec
push
test
stc
sbb
xchg
out
int3
les
dec
lods
add
mov
xchg
out
jecxz
andb
cli
outsb
lcall
mov
imul
fisubrl
out
mov
idiv
int3
cmp
mov
and
cmpsl
sbb
add
mov
icebp
dec
in
into
sub
jae
mov
sbb
inc
lock
les
pushl
loopne
sbb
add
rorb
sbb
xor
imul
fimull
in
fs
mov
nop
fidivs
sub
shll
int3
dec
daa
pop
and
pushf
ljmp
cli
mov
xor
xchg
cmc
jnp
add
sbb
jg
sarl
int3
mov
ja
fld
sbb
scas
sub
add
aaa
test
jno
out
lret
ja
sahf
mov
adc
daa
int
das
fcompl
add
rorl
scas
jae
jb
sub
sub
cmp
cwtl
jg
jp
inc
xchg
out
mov
cmp
pop
sub
fwait
push
mov
xchg
call
mov
lock
fildll
mov
inc
inc
in
mov
lret
lds
xchg
xlat
and
pop
loop
pusha
testb
xchg
shrb
shl
aad
ds
inc
lods
in
lcall
jbe,pn
ret
jno
xchg
mov
inc
popl
outsl
jge
push
push
mov
das
dec
insb
push
xor
or
ja
pop
dec
movsl
mov
jecxz
sbbl
inc
and
sahf
add
jae
dec
scas
jae
mov
xchg
add
dec
adc
xlat
inc
dec
push
sbb
js
sarb
test
xor
mov
mov
inc
dec
jae
out
mov
mov
and
adc
cmp
xor
movsl
gs
push
lret
sar
cmc
mov
into
test
sbb
mov
repz
pop
and
ja
pop
xchg
push
jbe
lods
jnp
fbstp
adc
ljmp
daa
jp
pop
pop
iret
and
push
add
ja
add
mov
fcoms
pusha
mov
in
xlat
jl
mov
scas
roll
lret
testl
cmp
addr16
xor
or
lods
addr16
pop
jb
int
leave
or
outsl
data16
aad
xchg
sub
aaa
stos
sub
lcall
xchg
pop
enter
arpl
inc
icebp
mov
mov
and
jp
aaa
fistps
jae
cmc
sub
daa
adc
enter
insb
aad
iret
pop
std
aas
out
mov
lock
mov
jb
push
or
inc
iret
jge
mov
lods
fs
bound
push
jne
push
imul
pop
enter
mov
icebp
xchg
cmp
mov
or
sbb
das
dec
in
mov
fisubl
cld
repz
or
sti
aaa
stc
adc
xchg
pop
xor
enter
cmpsl
mov
lods
adc
mov
in
push
pop
imul
mov
std
in
repz
jecxz
sbb
mov
mov
add
mov
lds
js
decl
and
cmp
jns
xor
icebp
ret
jle
fdivs
push
mov
jge
cltd
mov
fidivrs
dec
ret
adc
jge
sub
icebp
aaa
pop
mov
pop
out
icebp
cwtl
push
push
js
in
test
loopne,pn
jecxz
pop
xchg
inc
push
ficoml
pop
cmpl
push
mov
hlt
xchg
mov
aas
in
xchg
xor
in
fcomi
mov
call
jne
pop
loope
scas
clc
test
es
cs
adc
pushf
jno
sbb
push
je
mov
jle
scas
in
dec
mov
and
stc
sahf
jl
or
in
push
ret
mov
or
mov
inc
pop
ljmp
lods
das
sbb
stos
sbb
cwtl
enter
mov
in
insb
out
imul
sysret
push
in
std
pop
out
icebp
push
jb
mov
enter
aad
mov
or
scas
lcall
xor
mov
xor
ficomps
aad
adc
jle
push
inc
cmp
es
call
push
mov
stos
fs
sub
add
dec
xchg
cmpsb
data16
ds
fucomi
lds
jecxz
loope
repnz
cmp
xchg
jp
jmp
mov
in
xorl
out
xchg
inc
mov
fwait
enter
jns
mov
adc
pop
xchg
mov
push
push
push
mov
inc
test
xor
mov
dec
mov
xlat
jb
lock
js
or
shrb
xchg
addl
push
popa
lea
fidivl
push
mov
test
adc
ljmp
icebp
mov
fstpt
icebp
jnp
jge
out
in
jecxz
rclb
dec
ret
mov
lahf
or
xchg
dec
insb
xchg
movsl
insl
out
inc
dec
ja
jbe
jo
push
inc
or
mov
mov
out
mov
loope
dec
mov
insl
or
dec
sbb
xorl
sub
std
sub
mov
bound
or
mov
cmp
or
inc
bound
js
mov
inc
iret
add
adcb
fwait
mov
cmp
add
xchg
inc
jo
cmp
mov
jno
aad
ror
mov
lods
loope
dec
mov
sub
or
mov
fs
lahf
rclb
mov
mov
xchg
out
int
fs
push
pop
jnp
sbb
popl
mov
xchg
fwait
insl
dec
adc
cmp
rclb
loope
push
mov
lahf
jecxz
sub
sbb
shll
mov
mov
mov
leave
cmc
aas
inc
lods
jge
inc
pop
mov
and
mov
xchg
inc
mov
adc
sub
or
xor
jmp
xor
lds
or
lods
fwait
pop
or
int3
dec
lods
mov
pop
add
pop
nop
cmp
std
xor
and
mov
addl
mov
or
call
scas
repz
lock
sbb
xlat
enter
jp
inc
loope
sub
aaa
mov
hlt
cmp
push
inc
jl
idivb
push
inc
push
xchg
shll
push
mov
decl
mov
mov
out
add
push
daa
les
jge
mov
mov
sub
movsl
xchg
pop
roll
rcl
dec
aaa
imull
aam
sbb
push
into
adc
mov
xchg
fsubs
xchg
jmp
mov
fwait
ss
into
jl,pt
add
lods
imull
cmpsl
jns
inc
lret
mov
xchg
cs
push
test
and
emms
mov
jge
repz
adc
ljmp
jle
icebp
fcomps
je
sub
fiadds
push
push
mov
pop
adc
jns
sbb
fidivl
mov
es
pop
stos
push
mov
call
pop
xchg
cli
pop
sbb
xchg
lahf
dec
cmp
mov
inc
inc
push
pop
sahf
jb
insb
and
sahf
fcompl
ret
out
hlt
popf
je
es
test
fwait
lods
fimull
insb
add
out
pop
loopne
pop
hlt
mov
popa
push
sub
cmp
sub
cmp
dec
call
popf
nop
dec
call
and
out
jae
lock
out
add
mov
movb
lret
aam
stc
lret
inc
arpl
fstl
sbb
fistps
lahf
in
sahf
stos
mov
push
mov
lret
popa
and
aaa
sahf
xchg
in
cmp
cmp
stos
fdivl
daa
cmp
popa
cltd
lret
test
je
testl
js
push
orb
add
add
inc
pop
cs
pop
aad
pusha
xchg
cmp
insb
lods
fmuls
movntq
cmp
cmp
mov
faddp
and
sbb
adc
sbb
ljmp
or
jnp
jne
jle
movsl
fimuls
xchg
mov
jp
jne
jmp
push
inc
sbbb
mov
int3
jae
sub
loop
fistl
jg
jo
ror
leave
dec
js
int3
lret
dec
inc
inc
xor
mov
jmp
pop
mov
cmp
xor
loopne
fimuls
test
adcl
pop
loopne
xor
stc
daa
pop
sbb
mov
inc
mov
stos
pop
bound
insl
mov
sub
add
push
pcmpgtd
mov
or
mov
sub
jae
scas
push
cmp
cli
vcvtsi2sd
movsl
fxam
push
ficomps
mov
fisubs
not
inc
faddl
sti
or
push
stos
loop
popf
adc
jp
mov
js
mov
arpl
loop
lods
lahf
sub
xchg
pusha
sahf
clc
and
lods
movl
jmp
repz
filds
push
xrelease
je
stos
or
xor
jmp
mov
aam
mov
and
das
leave
cld
push
xchg
pop
xchg
push
jae
lcall
jno
aaa
repnz
ffree
xchg
mov
sbb
sub
xor
and
pop
jne
cltd
and
lea
cmp
pusha
jnp
cmp
loop
int
es
jl
sahf
mov
inc
pop
jg
xor
repnz
loop
in
rcll
int
lods
cld
movsb
gs
scas
mov
xchg
cwtl
js
das
mov
ret
stc
adc
cmc
cmpsl
and
rorl
inc
xor
cmc
push
outsb
into
push
mov
adc
mov
mov
xor
mov
and
xchg
aaa
cltd
leave
jbe
add
shl
cmp
xor
jl
sub
insb
sub
jbe
cmc
jb
leave
adc
inc
cmp
and
xchg
and
js
mov
pop
add
lret
movsl
inc
dec
fadd
jnp
divb
lods
mov
stc
or
aad
dec
or
cltd
xchg
pusha
cmp
ret
aas
das
js
data16
lods
aam
or
pop
mov
std
lret
and
add
out
mov
cmp
movsb
imul
sub
or
mov
push
dec
bound
imul
out
pop
jmp
push
jo
xchg
push
add
into
mov
and
mov
cli
jb
and
fists
cmc
int
sbb
bound
ja
addl
push
js
pop
pop
ficomps
fnsave
orl
repnz
loope
cwtl
iret
imul
andl
fwait
pusha
lea
lods
push
xor
cld
subb
pop
mov
mov
or
sbb
push
icebp
out
cmpsb
cld
dec
dec
rcl
outsb
rcl
pop
inc
pop
add
arpl
into
jmp
shlb
pop
push
dec
out
enter
or
in
subl
and
jb
dec
adc
xorl
mov
loop
xor
daa
push
mov
inc
dec
jecxz
mov
adc
int3
mov
in
sti
xchg
sbb
andb
mov
mov
adc
xchg
fldenv
mov
adc
insb
dec
cmp
push
xchg
fiaddl
inc
mov
xchg
xchg
sub
mov
mov
mov
movsb
data16
mov
loope
inc
sti
rol
dec
push
cld
lahf
sbb
shrb
leave
jne
adc
int3
lods
fcmovbe
js
push
jl
push
dec
lea
in
cmp
lods
mov
mov
lcall
xchg
jb
das
test
jbe
repz
bound
imul
ljmp
xchg
add
and
aaa
insl
int3
testl
sbb
inc
fisubs
sub
sahf
outsl
jle
push
xchg
or
dec
add
ss
ret
sub
test
lahf
inc
int
push
mov
imull
push
addr16
subl
and
sti
add
xlat
icebp
mov
cmp
jne
cmp
dec
dec
push
push
js
mov
xlat
imull
je
addr16
int3
jg
mov
jg
popa
lret
les
test
xor
mov
mov
ret
mov
inc
pusha
lahf
mov
sbb
jns
frstor
pushl
adc
andb
mov
loop
xchg
inc
mov
jecxz
jle
mov
mov
popf
jo
pop
push
adc
mov
push
cmp
inc
movsl
lock
in
add
pop
inc
push
out
jmp
shrl
ja
jno
popf
xor
pop
test
stos
add
cmp
inc
test
cmp
push
fstpt
aaa
pop
inc
adc
jbe
or
and
inc
mov
scas
sub
pop
mov
das
les
xchg
jae
xor
sbb
aad
aam
fisubs
sub
jne
ds
test
sbb
sub
ljmp
jno
mov
aam
insl
xchg
mov
sub
add
lds
das
pop
out
jge
sub
cmp
jge
push
mov
sbbl
push
mov
adc
push
pop
push
mov
xchg
insl
in
jo
je
sub
cltd
mov
mov
xor
pushf
jo
xor
fmuls
jl
sbb
or
xchg
btc
rcll
jae
add
fs
or
sbb
out
and
jge
lahf
adc
mov
data16
jmp
mov
jo
inc
imul
fwait
int3
aam
inc
aad
inc
and
addr16
decl
fiadds
dec
aam
lock
mov
sbb
daa
add
jle
fsub
mov
iret
adc
xchg
add
mov
test
es
and
mov
and
mov
adc
xor
sub
xchg
jb
setnp
lock
inc
insl
lret
sti
xor
adc
clc
push
mov
mov
pop
cwtl
and
sbb
int
cmpsb
jae
imul
pop
fiaddl
sbb
inc
movsl
hlt
outsb
cmpsl
mulb
fcmovu
lds
jge
mov
add
mov
sbb
xchg
ja
add
shl
dec
fucom
cltd
mov
mov
sub
mov
je,pn
fwait
stos
xlat
pop
jle
xor
lcall
mov
cs
shrl
cmovge
sub
adc
fmuls
idivl
jmp
out
push
lods
inc
mov
mov
sti
inc
lret
arpl
psubq
cs
xchg
xchg
sti
mov
into
pop
es
scas
adc
rorb
jo
dec
push
fadds
cmpsb
cmp
rolb
call
ds
sbb
cld
sub
pop
bound
cmp
jg
jmp
xor
lret
inc
test
mov
push
add
lret
pusha
fadds
aam
mov
loope
xor
jne
lcall
aad
xchg
repnz
cmp
sbbl
nop
ret
lods
cwtl
mov
ret
mov
ds
mov
or
xchg
sub
hlt
aad
push
lcall
push
aad
roll
inc
push
add
fs
xlat
or
mov
add
cmc
test
cmpsb
stos
bound
dec
and
add
jo
or
lret
sub
pop
adc
mov
push
shr
push
cmpsl
lcall
xchg
loope
xchg
pop
pusha
mov
push
aam
xchg
shrl
pop
daa
addl
add
and
cmp
test
add
std
sbb
js
out
mov
je
aam
xchg
ficompl
inc
call
loopne
dec
scas
inc
or
inc
loopne
arpl
adc
push
int3
out
sub
int
dec
andb
sti
push
add
add
push
mov
mov
dec
cwtl
daa
push
xor
mov
loopne
mov
add
pop
inc
mov
sub
insl
pop
inc
cld
bt
pop
jl
mov
cmp
sub
cmp
add
enter
cmp
dec
cmp
ret
sub
insl
iret
popf
mov
or
xchg
divb
mov
cmp
imul
or
or
and
out
and
adc
imul
scas
cmpsl
xchg
cmp
pop
push
xchg
ljmp
popf
test
jne
xor
xchg
pop
jb
dec
imull
loope
xchg
lock
dec
jns
mov
xor
jl
stc
mov
adc
mov
movsl
add
xchg
or
or
test
mov
jp
call
pushf
push
rcll
aad
sub
mov
xor
hlt
lds
and
imul
test
sbb
and
mov
lds
iret
lods
cmpxchg
mov
aad
xchg
rolb
inc
movsb
and
mov
mov
std
lods
js
cmp
xchg
xchg
jecxz
icebp
and
jbe
mov
mov
out
cmc
add
into
and
jecxz
or
inc
mov
and
add
jg
xlat
aad
addr16
dec
ficoml
call
mov
jg
nop
in
sub
adc
movsl
shlb
pusha
xchg
daa
mov
cmp
pushf
pop
mov
ds
js
loop
or
inc
inc
scas
stc
iret
push
dec
fistpl
fsubrl
adc
xchg
enter
inc
inc
imul
gs
add
loop
mov
loopne
out
lods
mov
cld
cmp
mov
pop
loop
jne
xchg
in
je
sub
cmp
out
xor
sub
dec
dec
push
inc
push
test
fcomps
addr16
ret
fwait
pop
loope
mov
cmc
add
subb
or
int3
lret
subl
xlat
stos
fwait
scas
loopne
loop
mov
push
or
icebp
xor
jb
sbb
xor
hlt
mov
xchg
imul
jl
imul
xor
popa
pushf
sub
jo
ss
sbb
imul
push
nop
lcall
jp
or
or
stos
popf
xchg
dec
call
sbbl
outsb
and
adc
mov
xchg
aad
mov
ret
nop
and
lret
xor
cmpsb
loopne
bound
rclb
pop
les
and
sub
aam
xor
rcrb
jge
popa
add
mov
aaa
leave
in
adc
jb
dec
arpl
mov
rcr
shlb
adc
dec
sub
ja
mov
mov
cmp
das
xor
shlb
or
mov
popa
lahf
jp
test
lret
stos
pop
repnz
pop
xchg
mov
and
stos
adc
jecxz
sub
ljmp
jp
xchg
xchg
xchg
xor
pusha
push
xor
daa
lahf
test
mov
sbb
das
jge
stc
sbb
xchg
inc
inc
dec
dec
mov
je
push
lret
lds
sti
push
fwait
pop
fstl
mov
cmp
popa
test
addb
mov
pop
dec
jl
sbb
mov
push
cmp
je
sbb
sbb
and
fstpt
out
lea
jb
mov
pop
push
les
fwait
dec
pop
pop
neg
push
js
js
mov
in
pop
cli
inc
sub
negl
xor
jecxz
push
fstl
mov
or
insl
add
mov
imul
lcall
mov
cmp
mov
cmp
int3
mov
sbb
inc
mov
cmp
adc
inc
inc
vshufps
sti
int3
cmp
lods
pop
rorb
les
jo
mov
fstl
pop
push
mov
mov
add
inc
inc
pop
mov
add
mov
xlat
test
test
jno
pop
mov
fiaddl
cmp
pop
pusha
and
shlb
xchg
sub
data16
cmp
nop
test
mov
adc
jl
xor
mov
icebp
out
ret
scas
xor
adc
dec
inc
in
ss
imul
sub
enter
adc
jnp
pop
mov
imul
sti
lret
cmc
int3
push
pushf
jecxz
stos
jb
or
in
outsl
into
jae
int
mov
mov
cwtl
sbbl
int
dec
in
sub
hlt
test
push
or
mov
mov
addr16
jo
cmpsb
mov
push
mov
cwtl
push
pop
mov
dec
push
not
repz
sbb
adc
jg
xorl
lock
lcall
pop
dec
mov
and
adc
and
jmp
mov
inc
xchg
pop
insb
aad
push
rolb
cmp
loopne
cmp
mov
jle
loope
mul
outsb
in
lahf
push
out
inc
xlat
pop
ja
inc
mov
dec
jbe
cmp
mov
nop
mov
mov
xchg
adc
js
and
push
inc
mov
scas
cmp
cmp
sbb
cmp
pop
pop
lock
push
outsl
sbb
lcall
sub
mov
inc
or
pop
out
jbe
mov
lods
mov
adc
mov
orl
ljmp
lahf
jp
adc
sub
fimuls
add
rclb
xchg
dec
outsl
inc
or
mov
or
xchg
or
fiadds
ljmp
lds
outsl
push
and
or
fisubs
cmpsb
mov
sub
gs
jl
or
in
push
in
and
mov
cmpsb
test
pop
incl
jp
cwtl
cmp
fiadds
outsb
dec
popa
adc
arpl
cltd
les
mov
addl
pusha
sarb
rclb
pop
mov
iret
es
xor
dec
pusha
jp
roll
sbb
mov
pop
mov
push
aaa
leave
push
pop
loop
sub
fcoms
push
xchg
ja
adc
or
pop
push
xor
cmp
repz
xchg
push
cwtl
mov
fdiv
add
out
adc
xorb
dec
in
popa
adcl
movsb
push
lea
jg
adc
push
stos
ds
lds
jp
test
jmp
enter
adc
xchg
pop
leave
data16
lea
aas
xchg
cmpsl
add
loope
jne
or
xchg
cmpb
movsb
mov
cmp
flds
sbb
cmp
rorl
out
arpl
cmp
pop
or
call
in
leave
mov
leave
pop
sub
adc
rol
lea
mov
outsl
ret
and
stos
xchg
lods
jge
mov
test
bound
push
and
mov
inc
setnp
ljmp
jbe
xor
test
js
cmp
repz
int3
int3
out
jae
mov
jg
int
ret
das
mov
popf
mov
xor
pop
lock
jbe
mov
or
xchg
orb
sub
in
je
inc
lods
cmp
outsb
mov
mov
inc
mov
sub
pop
mov
popa
shrl
lahf
popa
dec
fprem1
rolb
mov
push
xor
mov
and
lods
aam
inc
adc
pushf
repnz
int3
icebp
sbbl
jne
sbb
jl
mov
js
dec
sub
dec
mov
jge
mov
scas
or
xchg
loope
leave
test
pop
add
sub
jo
and
lahf
or
mov
sbb
or
test
push
stos
js
adc
ficoms
ja
jecxz
push
hlt
pop
and
cmp
inc
sub
pop
adc
jmp
xor
jno
cli
mov
pop
or
sbb
pop
push
xor
es
cmp
movsl
sbb
push
push
lret
ds
add
inc
jbe
mov
push
jle
orb
lods
mov
icebp
sarl
lret
fstps
xchg
insb
jbe
ret
insb
xchg
mov
ja
add
sbb
push
data16
js
lock
push
pushf
xchg
repz
add
imul
pop
adc
mov
mov
cmp
inc
cmp
popa
lret
scas
xor
into
jge
cmpsb
pop
mov
sub
ss
xchg
pop
shll
ljmp
and
repz
sbb
fstl
cmpsl
jp
push
fld
jae
mov
sti
pop
mov
orps
daa
xchg
adcl
call
je
pop
pop
bound
xchg
insb
mov
mov
push
fildll
movsl
and
jp
sub
sub
and
sbb
subb
cli
and
daa
adc
mov
xor
cltd
fdivrl
ror
jge
sub
add
add
lock
nop
inc
cmp
mov
inc
leave
cmpsb
pop
sub
out
and
xchg
push
sahf
negb
xor
ds
test
aad
repz
mov
xor
pop
fcmovbe
cmp
mov
pop
pop
push
push
inc
mov
cmp
adc
lods
lahf
mov
pop
mov
js
jne
add
pop
gs
ficoms
adc
or
movsl
dec
mov
imul
inc
cli
jp
xchg
jecxz
adc
push
loope
mov
hlt
adc
adc
pop
inc
jno
in
incl
and
pop
xor
adc
es
xchg
stos
imul
shl
cmp
sbb
xchg
xchg
aaa
jne
mov
xor
outsl
and
mov
mov
add
push
push
jnp
lods
ret
aam
cld
push
mov
jmp
mov
cmp
mov
shll
adcb
cmc
or
stos
inc
das
lds
inc
cltd
mov
push
popa
fwait
jmp
repnz
out
add
pop
scas
jg
sahf
stc
fstl
adc
stos
inc
outsl
scas
sbb
sbb
out
cmpsl
mulb
cli
cmpsl
or
incl
or
xor
sar
popf
mov
xlat
or
int3
cltd
loop
in
inc
mov
rcrl
ja
lahf
push
inc
lret
dec
out
mov
xor
data16
push
cli
imul
cwtl
mov
outsl
cmpsl
int
or
sbb
xchg
add
cwtl
sub
jl
push
mov
xlat
mov
fimull
or
push
ret
popa
fwait
pop
lcall
push
adc
loop
add
in
lret
inc
add
loopne
ret
push
mov
mov
es
gs
cmp
mov
mov
dec
cmpsl
mov
lahf
sbb
inc
mov
int3
loop
nop
pusha
mov
stos
dec
lds
xchg
mov
outsl
inc
stos
jo
push
mov
gs
call
jne
add
and
jb
mov
pop
sub
fs
push
in
jb
cmpsb
xchg
mov
sbb
xchg
dec
push
push
jns
faddl
pop
pop
or
rorl
fs
xor
dec
cmp
jg
out
jbe
push
pushf
xchg
mov
enter
lcall
xor
xor
and
scas
shrb
add
bound
xchg
lahf
sbb
pop
pop
lds
mov
jo
or
divb
and
adcb
out
addr16
mov
lea
inc
pop
mov
dec
test
xchg
xor
xchg
fidivrs
repnz
gs
fsubl
aaa
and
and
jmp
addb
testl
push
dec
mov
fistpl
cs
insl
adc
inc
mov
lahf
cmp
pop
mov
js
sbb
adc
loop
in
sub
add
enter
cld
lahf
pushf
lahf
aas
sti
push
arpl
in
insb
lret
sub
pushf
fldcw
inc
ds
sbb
mov
aas
movsl
popf
out
xchg
int3
ret
inc
add
dec
fdivs
adc
jmp
add
ret
xor
sub
sbb
mov
pushf
addr16
outsb
pop
fiaddl
dec
mov
push
jnp
sahf
lods
jb
mov
dec
sub
leave
rol
jo
dec
or
push
mov
push
loop
repnz
xchg
ljmp
xchg
outsb
xchg
fdivrs
sub
and
mov
aaa
outsl
into
mov
inc
push
ljmp
sarb
sub
out
cmp
sub
aas
add
jg
loope
rcrl
call
cmp
in
mov
sub
push
mov
jns
pop
mov
adc
xchg
pop
mov
fs
cmp
inc
ds
ret
out
fistpll
inc
xor
or
push
add
mov
stos
push
cmp
movsl
push
popa
add
xchg
divl
jl
daa
sbb
xchg
fs
cld
shlb
insl
or
pop
mov
das
shrl
outsb
enter
inc
addr16
add
in
aas
cltd
and
adc
mov
mov
jle
movsl
cltd
leave
clts
mov
pop
and
cli
push
loopne
adc
sub
fwait
pop
stos
adc
fmull
xchg
lret
inc
pop
xlat
inc
stos
mov
ss
xchg
call
outsl
hlt
fcmovnu
jp
leave
ljmp
and
cs
adcb
pop
sub
ljmp
jp
pop
cmpsb
iret
jp
cmpb
leave
push
outsb
xchg
add
iret
leave
lds
in
ficompl
mov
jge
dec
insl
xor
int
ja
xchg
repz
popf
mov
inc
std
cld
push
mov
movsl
inc
cltd
mov
aas
scas
icebp
cmovnp
mov
out
add
enter
call
adcl
fnsave
out
push
pop
fwait
add
fwait
jb
mov
push
jle
xor
push
or
jle
push
dec
inc
jb
test
pop
cmpsb
mov
addr16
popa
jns
jo
repz
xor
clc
iret
stos
jns,pn
mov
xor
xchg
mov
pop
scas
outsb
lcall
pop
xchg
pushf
inc
insl
testb
clc
popa
xchg
inc
mov
cltd
jge
jge
scas
mov
in
movsl
jmp
les
xchg
sbb
std
inc
leave
mov
inc
mov
ds
or
and
and
sbb
popf
lea
sub
mov
inc
cld
mov
adc
mov
xor
xchg
jmp
gs
adc
mov
shll
push
aam
adc
dec
in
xor
inc
dec
insl
push
jl
cwtl
cmp
push
ret
rcrb
mov
jns
push
es
cwtl
cld
mov
out
adc
popa
push
aas
aas
pusha
dec
sub
les
cmp
pop
loopne
popa
pop
sti
addr16
push
push
sbb
mov
xchg
ret
dec
pusha
sbb
in
movb
out
pop
xchg
pushf
cmp
mov
lods
scas
dec
out
push
lods
sbb
out
xchg
leave
call
xchg
lcall
ret
pop
shrl
dec
pusha
or
inc
les
sbb
mov
loope
mov
mov
adc
dec
pop
cmp
getsec
inc
outsb
in
and
sbb
lcall
mov
or
fcomps
in
into
sbb
add
or
movsb
int
lret
cmp
xchg
jbe
lods
pop
pop
sub
nop
imul
leave
pop
push
imul
and
loope
cmp
xor
sub
nop
lea
insl
sbb
mov
xchg
daa
pop
adc
mov
mov
icebp
dec
sahf
lahf
popf
mov
sbb
or
pop
ds
data16
mov
scas
insb
cmp
mov
int
xchg
sub
mov
mov
rorb
mov
xchg
out
xor
aas
ret
fmuls
xchg
fdivs
arpl
mov
dec
sub
ret
int
ljmp
or
xchg
add
mov
rcrb
repnz
cmpsb
daa
push
dec
shll
xchg
pop
ss
or
inc
inc
stos
or
jns
pop
clc
mov
xor
sub
popa
stos
push
popf
in
mov
and
xchg
cmp
pop
cmpsl
hlt
scas
push
loop
repz
jmp
pop
repnz
push
test
cwtl
adc
roll
xor
call
hlt
enter
mov
pushf
mov
cmpsb
fiaddl
and
out
shlb
pop
xchg
sbb
pop
mov
sbb
fwait
mov
xchg
cmp
push
nop
repnz
xor
aad
dec
pusha
pop
push
cmp
aad
test
jl
ljmp
repz
popf
call
or
rcrl
icebp
stos
std
test
sti
arpl
inc
inc
in
push
nop
xor
mov
inc
pushf
jno
or
pop
or
fbld
jle
jp
jne
movsb
cli
cmp
inc
sti
jns
lds
dec
xor
mov
call
jnp
mov
testb
mov
mov
psllq
and
or
int
flds
or
js
xchg
inc
pop
mov
loopne
fiadds
xchg
rcrb
mov
movsl
js
sub
cld
dec
into
lds
push
push
inc
jg
je
or
lods
into
jl
xor
lock
jg
or
movsl
jle
add
das
gs
mov
test
add
das
sbb
jle
insl
cmp
mov
clc
ret
mov
ret
sbb
aam
int
ret
push
sbb
inc
sbbb
push
movsl
dec
push
cmp
loope
ja
jbe
sbbl
push
xor
lret
lcall
cwtl
gs
jno
je
inc
fldl
add
stc
pop
xor
sub
xor
inc
out
cli
mov
dec
gs
push
xchg
jns
in
mov
dec
dec
and
mov
push
movsb
std
cmc
movsb
inc
xor
mov
test
loop
fdivs
fs
xchg
mov
jb
sub
and
cs
pusha
jnp
jp
daa
xor
fistl
out
mov
push
outsl
sahf
cmp
cltd
xor
gs
dec
push
test
lret
push
sub
sbb
mov
insb
in
mov
dec
std
mov
jg,pt
xlat
pop
fldt
jbe
inc
mov
inc
addr16
jmp
pop
int3
add
mov
daa
idiv
jae
insl
call
addl
sarb
scas
jmp
mov
daa
cwtl
mov
jmp
pop
les
addr16
inc
xlat
sbb
ds
and
mov
ficoml
push
outsb
jae
addr16
das
adc
mov
stos
or
mov
testl
ficoms
int3
jmp
lahf
js
aad
mov
xchg
dec
add
je
jl
ss
ljmp
xchg
pop
test
rol
andb
daa
xor
stos
call
fistps
scas
or
mov
ja
cs
stos
mov
pop
dec
aaa
pop
fcoml
jo
lods
jmp
mov
ds
out
dec
data16
inc
pusha
dec
outsb
pop
psubusb
inc
cmp
lret
push
mov
pop
in
lret
inc
fcmove
aam
cmp
xchg
iret
xchg
jbe
add
jecxz
jnp
mov
pop
cmp
jns
push
repnz
int3
xchg
and
mov
imul
lahf
dec
or
xchg
insb
cs
gs
mov
mov
push
jg
fs
adc
jle
pop
lret
mov
fs
jne
and
jmp
data16
xchg
movsb
test
nop
xchg
scas
ja
clc
out
adc
cmc
mov
out
out
imul
xor
in
popa
jns
out
xor
jmp
ror
fadd
jae
repnz
pop
mov
insb
in
in
movsb
jmp
fdivp
pop
outsb
in
cmp
cmp
aas
mov
inc
jbe
fnstsw
pop
push
inc
mov
pusha
insl
mov
inc
loopne
or
xor
aad
daa
sub
mov
bound
and
ljmp
cmpsb
jnp
pop
adc
in
fildl
or
xchg
mov
mov
jecxz
pop
jecxz
push
jo
adc
xor
pop
mov
je
pop
inc
xchg
movl
and
xchg
lods
xchg
push
cmp
bound
pop
jg
adc
push
mov
pop
rcr
xchg
stc
add
cs
loop
movsl
cmp
xchg
pop
int3
es
jp
popa
sub
stc
add
dec
fsubl
mov
es
mov
push
sbb
mov
mov
mov
push
cli
xor
push
movsl
push
mov
jo
cmp
mov
fbld
lret
push
mov
adcl
cltd
mov
shlb
daa
mov
cmp
sahf
repz
jecxz
pop
xchg
orl
repnz
js
das
xlat
xchg
test
in
inc
insb
lods
xor
mov
notb
push
loope
push
psubw
sub
cmpsb
subb
push
ss
cmp
mul
mov
add
adc
lods
add
cmpsb
lock
pop
add
fistl
push
sub
adc
or
cmp
or
inc
push
imul
fs
fstps
jmp
dec
mov
or
xchg
pop
add
fwait
inc
push
fwait
in
test
rclb
push
incb
ret
cld
mov
dec
inc
shrl
pop
push
cmp
insl
xor
cmp
gs
leave
dec
push
mov
divl
insl
push
xchg
push
and
mov
jmp
ret
inc
mov
in
int3
out
stos
fistps
pushl
out
rorb
loope
sbb
mov
inc
aad
fsubrs
enter
lds
out
das
xchg
and
jecxz
inc
dec
pop
das
adc
xchg
imul
imul
jno
fwait
and
icebp
test
mov
adc
and
insb
jecxz
ja
outsl
sahf
or
cli
pop
das
sub
sub
sbb
jp
adc
push
rcll
test
inc
ficomps
gs
jno
ret
mov
insl
dec
sahf
push
mov
ja
mov
int
inc
or
dec
js
dec
inc
adc
inc
outsb
xchg
daa
stc
movsl
dec
addl
jb
and
dec
xchg
mov
pop
popa
mov
int3
arpl
inc
fisubl
cmp
pop
fisubl
pop
mov
mov
mov
mov
and
inc
out
adc
push
or
cld
sub
int
jne
shll
xor
hlt
mov
ficomps
mov
jge
xchg
clc
frstor
cwtl
mov
daa
dec
stos
cltd
pop
orb
arpl
in
fldcw
pushf
adc
pop
repnz
lret
add
clc
stos
sub
push
sub
adc
add
xor
sbb
add
pop
xchg
or
loope
aad
lds
jbe
cld
imul
xchg
pop
stos
mov
dec
mov
xchg
push
mov
cmpsb
adc
mov
jbe
gs
adc
sub
cmp
add
cmc
sbb
inc
cs
subl
arpl
bound
mov
adc
mov
aam
dec
inc
repz
or
cmp
mov
jo
scas
aas
and
outsl
cld
into
shlb
aas
loopew
fsubp
pop
lods
cmp
bound
pop
and
push
xlat
testl
push
fabs
cmp
fidivrl
mov
cltd
or
imul
jp
or
push
mov
push
ret
cltd
xchg
inc
cmp
and
cli
aad
movsb
mov
lock
jb,pt
adc
dec
rep
mov
nop
gs
push
pop
cmp
xor
dec
and
lret
sahf
push
pushf
dec
mov
out
shrb
pusha
mull
sub
fistpll
pop
push
pushf
dec
les
xchg
lcall
or
je
push
xchg
or
cmp
jns
enter
mov
jae
hlt
inc
movb
xchg
clc
fcmovb
mov
jne
fwait
lods
inc
sti
sbb
sbb
out
push
push
xchg
les
arpl
sub
addr16
mov
into
fimull
pop
jl
in
add
pop
repz
adcl
dec
pop
out
jb
lea
mov
xchg
dec
jae
sahf
data16
outsl
out
jno
lret
pop
in
test
ds
cs
imul
test
rclb
sub
lock
or
loope
das
jbe
icebp
add
cs
mov
popf
fimull
xor
jl
xchg
mov
xchg
sbb
jle
js,pt
push
cmpsl
scas
mov
jo
je
xchg
adc
jbe
fwait
adc
repz
lods
sub
repz
lods
dec
inc
and
mov
in
xchg
and
xchg
hlt
fdivr
and
xchg
in
adc
orl
inc
jo
inc
repnz
addr16
or
pop
sbb
cmc
jbe
or
mov
xchg
div
sbb
push
mov
das
test
jge
xchg
rep
xor
pop
push
sti
test
int
jbe
adc
sbb
pop
adc
and
setae
mov
sbb
mov
dec
or
push
lret
ret
lods
stos
rol
shlb
push
cmpsb
jne
test
xor
movsl
mov
push
jo
and
push
popa
push
data16
pop
jmp
push
adc
and
imul
arpl
subl
mov
and
lret
mov
add
scas
lock
fmull
clc
xor
jecxz
mov
xchg
enter
mov
sahf
nop
push
shl
arpl
cmp
stos
fcmovb
subl
lods
jo
jg
xor
xor
jnp
shlb
mov
js
loope
lcall
fisubl
sbb
les
and
adc
jle
loope
push
test
dec
add
notl
jb
xchg
aam
repnz
mov
ja
cmp
adc
and
mov
xor
mov
pop
push
shlb
nop
out
test
xchg
adc
pop
and
sbb
and
ds
cli
test
ss
lock
xor
sub
fdivrl
cs
ds
cmp
int
sbb
imul
mov
or
stos
sbb
lods
mov
nop
nop
sbb
or
pushf
data16
mov
sarl
xchg
lock
loopne
add
ficompl
fs
orb
sarb
out
test
inc
imul
lock
clc
std
push
and
in
or
dec
pusha
pop
je
call
and
mov
push
dec
mov
out
aam
cli
in
sub
and
andb
and
bound
shll
fidivl
sbb
mov
imul
call
pusha
pop
or
cmc
ds
dec
es
std
pop
cmp
out
xchg
popf
mov
mov
adcl
mov
js
movsb
ja
cmp
push
sbb
push
ret
in
xchg
pop
and
cwtl
pushf
sarb
imull
repnz
fs
jecxz
or
scas
xor
pop
mov
enter
xor
jnp
lds
push
cltd
fwait
pop
sarl
enter
or
inc
les
dec
and
inc
and
lret
loop
aam
or
mov
sbb
data16
cmpsb
lahf
xor
imul
xor
jb
mov
or
lods
repnz
pushf
mov
das
pop
mov
mov
divl
push
in
mov
cmp
outsl
pop
pushf
bound
mov
pop
outsl
cmpsb
mov
and
sub
or
movsb
pop
mov
scas
pop
push
cmpsl
cmp
jno
add
pop
or
scas
cmp
dec
mov
subl
or
loopne
inc
push
pop
sbb
cmp
mov
lds
mov
and
cmp
je
mov
fcompl
mov
fsts
scas
xchg
ja
and
push
outsl
mov
lcall
movsl
out
pop
push
ret
insb
jl
dec
fisttps
mov
mov
jnp
aad
ss
test
dec
clc
data16
int3
testl
jno
fisttpl
jl
ret
ss
xchg
aad
shrl
sub
dec
aam
rcrl
xchg
pop
shl
mov
lock
aad
jno
fisttps
iret
xor
xlat
fdivrl
adc
jl
inc
dec
xchg
scas
mov
dec
push
mov
sub
inc
sub
xor
dec
push
pop
add
and
les
gs
dec
int3
les
dec
xlat
pop
gs
out
mov
addb
sti
xlat
addb
rolb
loopne
sub
lods
inc
or
jp
lahf
add
adc
lods
push
call
jo
mov
push
lods
shrb
sbb
jnp
and
out
jmp
push
fwait
pop
rcl
cmp
in
jl
fwait
scas
pop
leave
dec
pushf
shlb
add
jbe
sub
mov
mov
add
xor
xor
pop
outsb
popf
loop
pop
aaa
sbb
or
mov
push
mov
adc
or
mov
into
pop
ja
or
pop
out
lahf
jns
imul
ret
mov
mov
test
lods
addr16
push
pop
icebp
clc
movsl
cmc
sahf
fnstenv
xchg
xlat
lods
mov
insl
and
rcl
push
imul
imul
xchg
ficoml
pop
data16
inc
jecxz
fdivrl
lods
mov
cmp
lahf
cmp
jp
lds
adcl
dec
mov
xor
xchg
or
int
lcall
lods
addr16
gs
ljmp
cmpsl
ss
xchg
int
sbb
sbb
sti
imul
aas
inc
daa
hlt
iret
and
jp
push
arpl
pop
cmp
sub
mov
cmp
dec
and
and
in
mov
xchg
pop
in
push
dec
lds
sub
cmp
fldcw
inc
rol
or
add
mov
pop
mov
test
mov
pop
ljmp
adcb
mov
rorb
jo
and
movsl
adc
push
into
jecxz
mov
inc
adc
pop
inc
mov
pop
cpuid
mov
test
bound
out
gs
stos
lods
adc
loop
mov
dec
repz
add
fstl
mov
xor
add
mov
xchg
mov
and
sub
fwait
aam
les
sub
fwait
cmp
stos
repz
ljmp
fs
stos
stos
adc
nop
adc
and
cli
shlb
pushl
add
popf
cltd
int3
data16
aaa
mov
pop
and
dec
gs
sub
sahf
lods
adc
cmp
negl
sub
mov
inc
in
mov
nop
or
dec
sbb
shr
faddl
jecxz
dec
je
jl
add
hlt
mov
lret
mov
call
popf
adc
or
iret
inc
mov
or
and
pop
or
cmp
pop
mov
repnz
rcrb
xor
add
cltd
inc
sbb
jg
cmp
xchg
xchg
iret
mov
mov
shlb
das
push
push
lcall
pusha
xchg
xor
pop
cmp
inc
movsb
mov
cmp
data16
std
push
sbb
xchg
roll
mov
cwtl
mov
xchg
dec
es
jns
fwait
jno
bound
jne
iret
inc
movl
dec
jne
shlb
stos
adc
js
movsb
leave
into
popa
lret
lods
movsb
xor
dec
push
jp
and
mov
movsb
cmc
out
lret
out
sbb
cmp
push
mov
pop
mov
add
mov
xor
ret
cmp
xor
and
cmp
in
mov
sbb
jns
mov
cmc
in
inc
add
aas
fcmovnb
cs
fdivrs
bts
stc
scas
jp
mov
push
lret
lahf
loop
bound
or
adc
outsl
adc
popf
inc
out
adc
adc
jp
dec
aas
mov
xor
cmp
cld
stos
xor
mov
ficomps
push
cmpsb
and
popa
xchg
dec
pop
jmp
je
jnp
inc
mov
jmp
das
out
cli
lds
mov
cltd
add
divl
adc
adc
inc
repnz
dec
jg
sahf
sbb
cmc
inc
mov
enter
adc
jge
dec
lcall
add
je
mov
daa
cld
adc
scas
pop
pop
cmp
jb
sbb
cld
xorl
cwtl
test
jne
and
clc
push
mov
mov
jne
cmpb
push
adc
fistl
lds
scas
mov
mov
inc
out
jne
aas
mov
xchg
dec
dec
inc
or
vorps
addr16
js
fisubrs
daa
and
shlb
shl
je
dec
xor
sbb
inc
lcall
scas
mov
mov
mov
jns
xchg
les
pop
jg
clc
stos
lea
add
pop
movb
dec
lret
push
or
sub
jae
pushf
dec
stc
sub
je
out
push
push
pop
xor
faddl
or
inc
roll
idiv
scas
fidivrs
push
fdivrp
sub
xchg
out
adc
xchg
insb
mov
inc
pop
in
loope,pn
ret
push
je,pt
aad
jle
out
push
lea
lea
repnz
push
scas
inc
inc
jo
mov
cmp
sti
mov
xor
negb
cmp
popa
push
cs
pop
loope
mov
outsb
mov
inc
stos
sbb
sbb
into
rclb
out
pop
mov
jb
out
mov
ss
fnsave
lcall
scas
test
jne
imul
insl
popa
sub
imul
mov
idiv
movl
jle
add
mov
mov
pop
faddl
in
mov
outsl
dec
mov
inc
jle
nopl
adc
pop
dec
mov
dec
stos
in
hlt
adc
mov
xor
std
sub
jno
testl
pop
mov
jl
jbe
jne
pop
aaa
cld
mov
sbb
test
fildll
add
cmc
or
call
xchg
xor
jnp
ja
push
or
sub
pop
and
cwtl
pop
and
sbb
sar
arpl
sbb
in
mov
cmc
pop
outsb
jno
inc
mov
insb
mov
loopne
subl
and
hlt
and
jl
loopnew
pop
out
pushf
add
cmc
jl
in
mov
lock
xor
adc
push
aad
movsl
mov
in
ds
test
cmpsb
or
fdivl
stc
movsl
pop
outsl
notb
std
pusha
or
or
push
cmp
xor
sub
ret
pushf
or
jb
outsb
mov
lock
outsl
xchg
clc
mov
pop
sahf
lock
or
pop
xor
arpl
pushl
jg
call
js
je
add
lock
sub
sarl
jl
cmp
inc
rorl
dec
mov
add
pop
or
ja
pop
mov
jg
mov
loop
lods
cmp
mov
push
in
out
adcl
fdivs
xor
ret
xchg
jne
xlat
jbe
inc
xchg
shlb
cmp
mov
lods
mov
dec
dec
cmp
in
pshufw
fsubp
add
xchg
jbe
mov
adc
loope
pop
in
leave
cmc
xchg
push
cmp
popa
lods
neg
inc
jg
movsb
push
leave
push
aam
push
loope
dec
cmp
mov
xchg
lds
in
scas
movsb
hlt
pop
xor
pop
inc
dec
jp
or
mov
and
push
jb
mov
and
add
jae
into
repz
adc
mov
out
out
ljmp
jbe
pop
mov
adc
cmp
fld
lret
out
and
or
pop
inc
jecxz
out
push
cmp
js
test
es
push
into
outsl
mov
decb
rcll
imul
push
jne
jecxz
adc
pop
jb
mov
cmc
dec
int3
xchg
mul
lret
sbb
sbb
jae
sub
xlat
adc
pop
dec
movsl
lea
mov
mov
inc
mov
mov
fadd
pop
stc
fldcw
cmpb
test
sbb
rol
push
mov
adc
fidivrl
mov
mov
mov
cwtl
ficoms
mov
pop
arpl
sub
sub
push
fsubrl
stc
pop
inc
int3
inc
outsb
aas
mov
mov
sub
arpl
ljmp
enter
mov
lock
lcall
jnp
pop
js
ljmp
dec
enter
xchg
cmp
xchg
test
mov
adc
or
out
sub
std
and
push
lea
add
inc
ja
in
sbbb
xchg
leave
inc
adc
xchg
cmpsb
test
xchg
inc
or
mov
sbb
fiadds
dec
insb
movntq
mov
dec
xchg
sbb
push
mov
add
pop
in
pop
inc
test
aaa
inc
divl
and
add
mov
std
mov
add
lret
fs
mov
idivl
mov
popa
mov
ds
aas
push
inc
loope
lock
push
add
ret
fnsave
cmc
jmp
push
fstpt
enter
aas
xlat
mov
imul
insb
mov
sbb
inc
adc
jge
and
out
dec
cmpsb
xchg
idiv
lea
and
fsub
dec
ror
mov
sbb
xchg
dec
rcrb
sbb
push
push
dec
negb
in
rcll
les
push
std
dec
pop
addr16
push
inc
mov
adc
jge
call
stos
gs
adc
sbb
rorl
idiv
mov
add
pop
push
adc
jmp
lea
push
lahf
scas
adc
pop
mov
int3
mov
test
fstp
shll
lds
lea
insl
cmc
cmc
movsl
aam
inc
dec
insl
jle
sbb
ret
dec
test
cmp
pop
push
sbb
aas
outsb
or
icebp
mov
pop
cmpsb
fcomps
mov
stos
test
cmpsl
das
pushf
mov
cmpl
jl
repz
mov
orps
dec
sub
in
insl
pop
lahf
jne
and
mov
outsl
iret
sbb
insb
xchg
dec
xchg
inc
negl
data16
daa
xchg
xchg
xor
sti
scas
in
outsb
hlt
push
push
push
jae
fists
out
or
inc
jp
rep
repnz
stos
mov
inc
adc
rolb
pop
sbb
mov
push
hlt
gs
push
bound
rol
imul
fdivr
sbb
lret
test
bound
and
mov
mov
rclb
out
popf
lds
xchg
or
pushf
mov
fmull
int
jbe
inc
imul
cmpl
dec
jae
inc
ljmp
mov
ret
push
addr16
xor
jle
pop
imul
icebp
xchg
cld
cmp
sahf
xor
adc
push
xchg
sub
jo
mov
inc
dec
sbb
rcl
push
push
sti
fdivs
test
xchg
jp
and
aad
dec
xchg
jbe
pop
dec
push
lcall
insl
sub
xor
stc
pop
rcr
adc
add
lcall
mov
in
ja
pop
cmp
mov
lods
pop
xchg
jb
dec
push
mov
aas
xchg
push
sub
push
scas
lahf
pop
mov
loopne
aas
shrl
test
mov
fidivl
xchg
test
adc
add
aam
out
call
dec
sub
sbb
push
inc
pusha
push
jp
test
aad
cmpb
mov
js
int3
aas
pop
xchg
ljmp
inc
clc
xchg
xchg
xchg
ja
xor
into
mov
mov
cmp
mov
mov
pusha
rorl
sbb
push
stos
push
mov
sbb
adc
push
xchg
dec
sub
mov
pop
dec
in
int
xor
cmp
mov
mov
aad
cmc
xchg
inc
pusha
imul
push
mov
je
push
push
sbb
xchg
in
push
outsl
clc
xchg
mov
mov
mov
mov
in
fbstp
lret
mov
inc
insb
xchg
scas
movsb
out
sbb
and
sarb
insl
addr16
in
push
in
xor
aam
push
js
out
nop
bsf
inc
iret
pop
xchg
sbb
mov
int
out
enter
cmp
jno
ljmp
pushl
xchg
mov
mov
add
cmpsl
imull
mov
mov
mov
rcll
hlt
in
insl
mov
or
xchg
jmp
push
cmpsl
dec
push
dec
adc
jge
test
adc
popa
push
loope
xorb
adc
mov
push
ret
xchg
or
rolb
cwtl
adc
out
adc
dec
xor
test
xor
aas
pop
hlt
add
mov
out
jb
mov
cmpsl
test
cld
fldt
jle
addr16
xor
jmp
test
jge
out
lcall
xchg
xor
mov
pop
and
jne
pop
jmp
in
cwtl
add
test
mov
jne
aas
mov
cltd
into
inc
sti
add
daa
xor
pop
xchg
mov
cltd
cmp
add
hlt
sub
sbbl
push
jb
out
cmp
fbld
adc
lret
or
hlt
in
stos
mov
pop
jnp,pn
jae
pusha
fimuls
hlt
mov
xchg
pop
call
rcl
mov
arpl
mov
loop
xor
fcompl
push
shrb
lock
inc
sbb
sub
fsubl
push
out
or
sbb
movsb
nop
stc
cmp
mov
sub
jo
dec
push
in
into
jl
mul
jae
into
ja
testb
lcall
pushf
in
imul
sbb
mov
mov
sbb
sbb
iret
shrl
mov
jmp
dec
pop
inc
ret
sbb
mov
fmul
push
js
test
in
js
dec
xchg
adc
jmp
ja
outsb
or
mov
mov
adc
cmpsl
adc
cmp
les
sub
dec
and
cmp
jbe
test
push
xor
cmp
mov
mov
mov
jnp
mov
int3
jns
popf
loopne
or
cmpsb
test
cld
xor
xor
sbb
sbb
mov
dec
or
add
lock
adc
mov
out
cmp
fadd
lds
clc
pop
outsl
xorb
push
jb
sub
setno
jecxz
je
mov
addl
cwtl
cmpsb
mov
out
pop
pop
jo
bnd
in
mov
mov
and
xor
xchg
push
je
in
icebp
cld
popf
cmp
imul
ds
imul
imul
xor
adc
pop
cld
fwait
pop
fldcw
cmp
ret
adc
pop
pop
mov
fs
out
and
xchg
insl
call
push
mov
mov
xchg
test
pop
jnp
hlt
mov
les
adc
sub
sahf
or
dec
repz
out
cmpsl
dec
mov
stos
pop
jle
adc
loop
ljmp
cmp
jb
pop
mov
lock
xchg
xor
sahf
insl
les
cli
les
in
lock
xchg
and
addr16
ja
push
push
push
dec
push
push
addb
daa
push
mov
or
sub
aas
aam
mov
sub
cmp
sub
std
aad
xchg
outsl
xor
cmp
testb
xor
roll
mov
dec
mov
jl
push
mov
shlb
dec
mov
cmp
pop
stc
mov
and
fsubp
jo
decl
or
xchg
ret
into
dec
sbb
fisubrl
mov
sbb
pop
push
fs
lcall
cs
cmpsb
xabort
pop
dec
loop
mov
pop
push
cmpsl
sub
movsb
mov
in
roll
enter
sub
js
js
adc
jmp
mov
clc
xor
mov
insb
adc
add
es
lcall
sub
gs
jb
and
nop
xchg
sbb
push
mov
inc
sub
lock
push
jns
int
out
xor
nop
add
rorb
add
popf
add
and
sarl
mov
or
mov
mov
imul
xor
push
enter
aad
xchg
in
sub
imul
mov
bound
jb,pt
mov
dec
popf
lods
jnp
aas
imul
mov
sbb
adc
add
adc
ja
push
stc
xor
out
add
adc
cltd
and
dec
fdivr
pminub
inc
mov
and
pop
and
adc
xchg
mov
inc
in
call
into
imul
sahf
mov
push
or
jnp
arpl
ficompl
popf
pop
pop
stc
push
dec
xchg
pop
jmp
cwtl
dec
rcll
ss
add
xor
jns
sub
lods
leave
or
jle
lods
and
sbb
nop
aas
shrl
mov
and
lds
fadds
outsb
ret
out
ffree
xor
xor
ljmp
adc
mov
push
adc
insl
gs
mov
add
xlat
add
dec
fiadds
sti
dec
daa
mov
push
ljmp
push
incl
mov
jge
ja
dec
popf
inc
ds
jnp
mov
fsubrl
test
pop
ja
push
js
xchg
js
push
arpl
xchg
test
das
hlt
in
shlb
test
in
popf
outsl
sbb
cmpsb
pop
fnsave
push
sar
pop
xor
mov
iret
or
dec
shlb
int
leavew
out
xchg
das
inc
stc
sub
add
add
pop
ds
jecxz
ljmp
fucomi
pop
popf
pop
add
jle
mov
push
js
loope
adc
or
pop
insl
movsl
fmuls
addr16
jmp
dec
cli
ljmp
and
dec
pop
test
push
xchg
into
add
pop
loopne
mov
cmpl
pop
mov
test
int
fstl
iret
cmpsl
fcoms
push
and
push
jae
and
dec
adc
mov
stc
outsl
sub
jge
or
loope
pop
xchg
popa
sub
dec
mov
and
lcall
mov
push
and
cld
pop
add
nopl
xchg
mov
es
xchg
imul
arpl
js
push
xchg
push
add
orl
aad
js
inc
or
pop
jecxz
fdivrl
out
xchg
lret
adc
jnp
or
call
pop
hlt
ja
imul
jecxz
jne
les
ret
mov
je
out
add
loop
cmpsb
inc
mov
sub
ss
mov
sub
mov
mov
xor
repnz
imull
xlat
lcall
pop
out
inc
ss
lds
mov
push
inc
lock
xor
mov
add
mov
mov
or
outsb
push
cmp
imul
loope
lret
cmp
lret
or
lods
adc
mov
test
das
jb
test
dec
fs
in
imul
out
loope
mov
dec
adc
jnp
ss
add
lock
mov
dec
jno
ljmp
or
xchg
sub
push
pop
or
adc
loope
cmp
mov
das
jmp
xchg
loop
add
es
add
push
and
mov
ss
dec
dec
stc
xor
or
xchg
cmp
sub
test
div
aaa
sahf
aam
push
mov
pop
jns
lods
push
pop
mov
add
in
inc
mov
fidivrs
adc
mov
cmp
mov
movb
push
xor
fsubrs
jns
lret
insb
rolb
mov
aas
lahf
pop
iret
xor
push
xchg
dec
sbb
pop
dec
and
jge
in
push
jge
dec
iret
test
mov
test
ret
cmpsl
xlat
cmp
and
ss
fdivrs
shll
insl
fmul
out
pushl
shl
mov
lcall
sti
push
mov
aad
gs
and
mov
mov
adc
out
add
or
xchg
mov
ss
fs
xor
sbb
and
fidivs
rcll
sub
pop
lret
fistps
cltd
test
fstpt
divl
xchg
out
or
inc
jns
mov
sub
test
dec
mov
sbb
cmp
and
sbb
sbbb
cmpsb
pop
or
pushf
leave
sti
pushf
jb
and
xor
in
adc
cmp
into
push
xlat
mov
mov
push
sarb
ja
jp
push
int
xchg
mov
pop
js
mov
jecxz
aaa
xchg
arpl
outsl
mov
xchg
xor
setb
mov
and
mov
out
add
cmpsl
sbb
loope
push
inc
mov
cmp
stos
stc
test
iret
js
dec
sub
xadd
ljmp
ja
dec
pop
pop
push
push
xor
dec
or
push
and
jmp
mov
sub
cmp
icebp
std
sub
daa
mov
shlb
clc
repz
imul
das
mov
jecxz
mov
xchg
jl
push
add
pop
aas
dec
dec
addr16
hlt
mov
dec
mov
ja
sub
pop
iret
outsb
jmp
sahf
mov
jl
and
fnstenv
mov
pop
lcall
je
aad
dec
jae
push
mov
enter
in
jnp
cmpsb
lahf
cmpsb
rorb
stos
mov
sahf
push
cld
mov
cld
dec
test
es
pop
adc
pop
add
push
int3
and
lret
mov
scas
mov
ss
js
fiadds
adc
notl
pop
mov
mov
sub
jo
stc
push
jge
dec
fdivp
push
dec
push
add
in
outsb
out
shll
fs
mov
inc
or
jg
in
cld
gs
mov
sbb
push
or
shlb
adc
cmp
mov
sbb
mov
lret
ficomps
cmc
mov
sbb
xor
dec
cmp
xor
mov
aad
shr
fwait
jnp
scas
mov
jl
mov
sub
dec
pop
clc
imul
fwait
inc
push
int
lods
xchg
les
sbb
ret
xchg
pusha
inc
push
adc
gs
es
push
xor
jp
outsb
adc
add
mov
cli
test
pop
sub
mov
cwtl
popa
cmp
aam
lods
pop
adc
lcall
sbb
cmp
popf
xchg
jno
fildll
nop
mov
push
inc
and
sahf
dec
cmp
add
adc
inc
pop
leave
jbe
xlat
dec
mov
lock
pop
and
fcomps
arpl
shlb
dec
jg
ret
and
xchg
cmp
and
std
push
iret
xor
and
sbb
sub
insb
adc
iret
xor
pop
nop
mov
mov
xlat
loopne
pusha
cmpsb
dec
push
jle
lea
je
cs
mov
mov
testl
dec
fistpll
sbb
dec
cmp
mov
loopne
and
sub
push
mov
lods
scas
dec
cmp
pusha
mov
enter
sbb
xor
cwtl
testl
mov
fistpll
cld
jecxz
mov
lods
fmull
stc
out
cli
sub
test
daa
mov
int
jo
jg
fiadds
pop
lahf
dec
xchg
clc
idivl
jl
sbb
dec
push
inc
lea
adc
xchg
lea
sub
pop
add
aaa
lret
mov
push
dec
inc
aaa
imul
fidivrl
out
sbb
mov
sbb
fstl
lcall
jp
xor
sarb
push
lahf
xorl
adc
adc
insl
or
das
mov
loopne
and
mov
pop
aam
or
ljmp
fmull
mov
ja
lds
cmp
lock
in
sbb
ret
repz
je
inc
sahf
lret
ret
sub
xor
push
push
jp
and
loopne
and
imul
cld
lock
movsb
adc
jmp
ss
xlat
std
xor
adc
cld
adc
jns
adc
lcall
mov
pushf
notb
lods
mov
mov
es
push
in
mov
daa
rcr
test
iret
les
frstor
push
mov
movsb
adc
loopne
and
cmp
lea
or
fidivrs
sarb
jae
das
aad
push
insl
scas
outsl
rcrb
pushf
dec
lret
jge
movsl
adc
lret
insb
or
push
and
lock
negl
pop
repnz
sub
xor
push
xchg
data16
les
test
mov
mov
mov
mov
sub
jle
adc
shrl
pop
inc
or
test
cmp
mov
pop
adc
sbb
idivb
mov
inc
jbe
push
cmp
dec
add
mov
cmp
pop
xorl
mov
and
mov
xlat
xor
out
add
add
dec
mov
lret
out
js
add
repz
jnp
jge
mov
mov
cmp
mov
mov
lods
sbb
arpl
mov
scas
xor
mov
xchg
shl
add
sbb
and
pop
popf
add
sub
out
outsl
mov
jp
xchg
or
cmp
sbb
leave
ds
inc
pop
fiadds
xchg
shlb
rcrl
push
adc
jg
mov
or
imul
jge
das
inc
push
and
stos
lods
in
mov
scas
int
dec
pusha
push
xchg
jne
sbb
stos
out
xchg
mov
std
jecxz
es
out
dec
out
push
cmp
cs
or
mov
dec
jb
push
push
in
xlat
cwtl
sarl
vpand
mov
add
or
int3
movsl
jp
mov
cmpsb
mov
inc
and
xor
mov
mov
jbe
lret
loopne
sub
insl
rorl
imul
mov
adc
aam
sbb
jl
ror
mov
and
jnp
jne
js
mov
sub
push
push
sahf
cmpsb
loop
mov
cmp
popf
adc
cmp
dec
push
mov
jns
aad
out
gs
or
xchg
cltd
push
incb
not
mov
pusha
inc
inc
mov
mov
push
mov
pop
mov
and
mov
mov
mov
pop
fwait
popa
mov
rorl
push
mov
fdivl
and
xchg
pop
xchg
jl
sub
dec
sahf
add
data16
inc
mov
add
ret
fsubr
or
lcall
cmp
xchg
test
mov
jge
jl
or
mov
mov
push
bound
add
outsb
shlb
mov
mov
ss
mov
test
inc
lds
sub
jle
adc
pop
mov
push
cmp
cwtl
push
pop
ret
mov
or
shld
or
dec
lds
dec
add
arpl
int3
cld
pop
pop
nop
xchg
dec
mov
sub
fisubrs
outsl
mov
dec
lret
rclb
das
dec
rclb
popa
push
cmc
or
nop
int3
test
mov
cmp
fiadds
jg
loope
arpl
push
xchg
pop
xchg
cltd
push
sub
addr16
imul
push
imul
ret
jmp
and
leave
inc
ds
mov
xor
sti
mov
jnp
jo
and
or
pop
enter
hlt
stos
mov
xor
fneni(8087
mov
imul
push
sbb
shlb
dec
in
cmp
movsb
das
push
mov
add
fisttpll
pop
inc
mov
test
sahf
das
fisttpl
adc
mov
xorb
adc
fwait
push
mov
mov
aaa
mov
lods
xchg
sbb
push
pushf
push
mov
das
cmpsl
xor
jge
xor
sbb
jecxz
add
adc
xchg
pop
jg
pop
adc
out
ljmp
stos
movsl
adc
fisubrl
xor
bound
push
ljmp
popa
ss
or
mov
dec
jle
cld
ret
and
bswap
inc
xchg
out
test
xor
out
jp
sbb
lea
xlat
inc
add
xchg
fwait
lahf
add
jecxz
xor
movb
add
out
xchg
jo
xor
or
test
xchg
lahf
cld
sbb
dec
xchg
xor
stos
xor
iret
ret
push
jge
mov
lret
daa
fldt
fiadds
sbb
in
cmp
dec
mov
flds
or
sbb
jno
test
push
xor
add
push
mov
mov
xchg
andl
cmpsl
mov
sti
xor
popf
or
jnp
bound
cs
das
rol
add
mov
inc
pop
cs
lods
xchg
incb
mov
xchg
rorb
sbb
mov
push
pop
leave
pop
mov
jl
inc
and
and
rorb
into
scas
pop
mov
inc
adc
adcl
jno
vpsubsw
fcomps
dec
aad
loop
push
outsl
icebp
js
sub
rorb
mov
in
cltd
jl
inc
sbb
in
repnz
outsl
loopne
pop
mov
fs
pop
aaa
outsl
aad
insl
out
add
imul
inc
cmc
inc
mov
cltd
bound
xchg
adc
cmovl
stos
add
shrb
lods
jno
push
xlat
adc
add
jnp
mov
ret
icebp
aaa
xor
sub
sbb
xchg
xchg
sahf
and
push
xor
mov
fmull
loop
inc
stos
add
sbb
mov
cvttps2pi
popa
fmull
adc
inc
lret
int
je
or
xchg
adc
jp
add
arpl
mov
lods
ljmp
rolb
loopne
int3
xchg
in
in
xchg
sarl
int
or
push
stc
mov
sub
mov
add
xchg
repnz
inc
pop
and
cmpsb
mov
jp
add
fcompl
sbb
test
ljmp
test
inc
mov
cmp
jle
mov
fisttpl
rcrb
pop
pop
cwtl
inc
sti
iret
fwait
inc
jbe
xchg
repnz
cld
adc
cmp
ds
jmp
pop
cld
dec
mov
or
pusha
push
mov
fwait
loopne
push
fsubrl
pusha
repnz
push
fcoms
sbb
or
jae
sub
jb
shr
mov
repz
mov
mov
pushf
enter
jno
incl
jb
daa
andl
jg
scas
fldt
fnstenv
fbld
insb
ret
sbb
jp
mov
pop
or
and
jmp
lds
js
xor
jbe
add
xlat
fwait
push
nop
outsl
pusha
mov
js
xchg
aas
inc
mov
ficoms
or
std
popf
sbb
insl
ja
ja
jne
lret
test
cmp
or
decb
mov
dec
push
fwait
jno
jns
lret
loop
and
mov
bound
mov
add
push
pop
cmp
xor
mov
add
bnd
cmp
push
jnp
mov
lcall
cmpsl
jmp
out
or
test
add
xlat
sub
ret
inc
pop
pushf
inc
rorl
push
jno
popa
cltd
push
sub
mov
or
cmp
es
adc
in
or
mov
aad
jmp
aam
cli
enter
lret
test
insl
test
inc
cmc
insl
sti
gs
xor
adc
xchg
xchg
pop
jnp
repnz
add
test
in
jge
sub
add
pop
stos
pop
pop
adc
pop
test
cmpsb
mov
in
add
pop
mov
pusha
nop
daa
adc
cmp
in
add
mov
fs
movsl
sbbl
xchg
push
and
sub
sub
test
inc
gs
add
cmpsl
loopne
js
mov
mov
mov
or
add
mov
pusha
mov
inc
insl
sbb
pop
ficomps
cmc
pop
mov
mov
enter
push
int3
sub
cs
dec
sub
pop
pop
in
jo
daa
daa
adc
fnstcw
fidivrl
mov
stc
vcvtss2sd
jmp
icebp
add
add
xorl
mov
inc
pslld
popa
gs
push
in
mov
cs
dec
push
mov
addb
cwtl
jg
movsb
cmc
nop
jg
xor
stc
mov
mov
sbb
std
pop
mov
mov
pusha
popf
imul
sbb
into
jb
arpl
sbb
mov
xor
mov
dec
sbb
sbb
out
xchg
rol
pop
in
sbb
out
cmp
xchg
outsl
mov
lret
aas
loop
pusha
mov
mov
push
mov
pop
xchg
stos
mov
mov
push
rorl
daa
mov
lret
pop
mov
cmpsb
push
mov
pop
or
ds
cwtl
mov
scas
jbe
sbb
inc
mov
cmpb
test
xor
out
icebp
ljmp
mov
fdiv
push
pop
arpl
movsb
mov
push
fcoml
mov
mov
fwait
ja
push
not
out
test
decl
adc
stos
dec
fstpt
in
pop
aad
rcr
mov
inc
iret
sti
sahf
icebp
bound
or
mov
std
out
xchg
or
dec
insl
lret
jecxz
xchg
dec
push
cwtl
in
dec
stos
in
or
push
jge
outsb
rclb
je
jnp
and
imulb
pop
cwtl
sahf
fadds
cmp
addr16
in
std
lfs
mov
fists
mov
mov
sbb
dec
dec
fisubs
fidivrs
and
fwait
push
dec
xchg
movsl
pop
out
rcll
jne
aad
push
test
pop
sub
into
in
orl
pmuludq
pop
and
xor
out
sbb
pop
ficompl
adc
mov
xchg
adc
rorb
test
cmp
stc
out
mov
adc
leave
fdivs
xchg
fbld
sub
push
adcb
cmp
xor
dec
fldenv
movsl
out
daa
sbb
pop
add
loope
cmp
xchg
int
stos
sub
test
xchg
arpl
dec
orb
ficomps
cmp
cltd
call
test
jns
jnp
mov
aam
sub
cmp
popf
push
xor
and
imul
movsb
iret
fisttpll
lods
loopne
or
roll
xchg
pop
leave
adc
mov
inc
push
dec
cltd
addr16
sub
gs
ds
dec
mov
xor
push
std
cmp
movsl
sbb
pop
imul
imul
cli
in
jno
sub
push
movsl
pop
divl
insl
into
xchg
pop
mov
pusha
mov
sub
imul
sub
jo
negl
orps
ret
cmc
sub
loopne
cld
push
push
cli
xchg
gs
pop
jno
add
movsb
faddl
add
push
sahf
divl
mov
imul
push
jp
xor
xor
mov
or
imul
adc
inc
les
mov
mov
push
nop
seta
fsubrp
out
mov
jb
cltd
or
clc
dec
in
mov
pop
push
mov
pop
mov
cmpsb
or
sbb
cli
jne
push
jge
jg
inc
jmp
idiv
jo
inc
jl
pop
add
xchg
pop
mov
jo
xorb
push
jb
xor
cmp
pop
lock
pop
daa
negb
mov
jle
in
cmp
and
xor
push
push
stos
jg
std
fdivp
lods
clc
ret
and
shlb
and
lea
pushf
push
data16
lods
sarl
fstpt
fnsave
mov
push
repnz
jecxz
cmpsb
mov
push
mov
scas
cmc
or
adc
push
add
or
mov
into
stc
mov
jne
jecxz
pusha
fsubrs
mov
and
loopne
jno
les
xchg
mov
cli
push
stos
clc
rcrb
cltd
xlat
cld
out
add
pop
pop
or
dec
subb
xor
test
pop
inc
idivb
inc
in
add
jno
sub
inc
scas
outsl
mov
xchg
mov
or
mov
in
fwait
pop
sub
pop
shll
notw
xchg
sbb
popa
jp
mov
cmp
sub
xchg
insb
lahf
sarl
into
and
lahf
mov
arpl
xchg
repz
scas
fnstcw
or
push
divb
aam
push
repz
cmpsl
mov
mov
rcrl
daa
sbb
jmp
xchg
xor
xchg
mov
leave
adc
lds
mov
lret
pop
shl
pop
sub
bound
roll
in
int
insl
inc
cmc
add
loopne
jbe
pop
jge
ds
xor
loopne
adc
pushf
movsb
sub
pop
imul
xchg
stos
popf
bswap
inc
adc
scas
jb
cmpsb
dec
mov
dec
pop
aam
mov
cmp
les
adc
outsl
mov
inc
repz
test
pop
imul
sbb
lods
xor
mov
mov
inc
mov
or
inc
xor
sbb
imul
xchg
cmp
aas
popa
push
pusha
fstpt
adc
gs
add
mov
loop
pop
or
and
cmp
enter
mov
mov
addl
cltd
adc
xchg
stc
sarb
mov
mov
je
mov
mov
sti
sbb
jnp
and
mov
adc
push
cld
add
xchg
or
push
or
ss
and
stos
mov
aad
es
popf
pop
xlat
pop
movsl
insl
jl
mov
adc
or
fbld
cli
or
les
jb
cmp
add
out
mov
imul
pop
xor
xor
jmp
pusha
test
fnstenv
cli
sub
mov
add
pop
push
das
xchg
and
push
jmp
adc
xchg
dec
jl
jp
jmpw
into
jae
cmp
lock
loop
mov
ret
mov
loop
cmc
dec
sub
outsb
test
cld
mov
out
push
push
loop
out
dec
push
les
mov
sti
dec
push
mov
lret
lock
mov
dec
gs
fsubp
cmp
push
int3
add
sub
stc
mov
popa
pop
out
cmp
cmpsl
rcl
dec
inc
sbb
add
mov
mov
and
movsl
cmp
gs
inc
insb
movaps
cmp
ss
cmp
jg
shr
jmp
mov
repz
in
xchg
loopne
jge
pop
cmp
xchg
push
shrb
xchg
dec
mov
stos
add
data16
cmp
adc
pop
mov
jmp
sub
jae
arpl
xchg
fistpl
inc
mov
in
push
out
xchg
repnz
std
ja
add
ret
adc
jecxz
inc
leave
inc
gs
cmp
bound
sub
cmc
addr16
dec
mov
inc
pop
les
in
call
push
ljmp
jnp
notl
out
mov
and
mov
mov
scas
outsb
cmp
mov
mov
jbe
push
icebp
pop
aas
testl
aam
mov
loope
dec
adc
stos
xor
icebp
sbb
or
pop
or
mov
add
mov
lea
js
xabort
sub
insb
pop
leave
sbb
dec
dec
xor
mov
mov
nop
push
sub
sbb
xor
cs
mov
in
inc
roll
mov
sub
and
jp
jg
stos
pop
pusha
or
stc
loope
sbb
mov
cwtl
or
fisubl
outsl
jnp
cmp
fnstcw
lret
orl
inc
jno
xor
sbb
mov
inc
pop
xchg
jo
sbb
movsl
rcl
sub
aas
imul
arpl
inc
push
adc
outsl
mov
cwtl
jle
pop
into
icebp
mov
mov
xor
cmp
mov
and
cld
cmp
sub
mov
jno
fwait
push
or
ja
insl
test
add
addr16
cltd
pop
shrl
loope
aad
clc
lds
dec
insl
and
jnp
sub
mov
inc
jb
in
mov
imul
pop
insl
mov
add
jno
sub
xchg
sarl
clc
or
jecxz
adcb
ja
loop
shlb
lahf
mov
outsb
daa
dec
in
sahf
adc
xor
dec
ja
pop
jne
pop
jbe
sub
in
rcrl
mulb
loop
mov
mov
lea
out
leave
mov
mov
out
push
cmpsb
add
lcall
outsb
stos
call
mov
dec
inc
pusha
cmp
jo
lods
shrl
cmpsl
repnz
mov
xor
shl
push
loopne
and
or
cmp
pop
out
dec
and
adc
test
mov
xor
lea
jne
adc
negb
inc
orl
add
aas
dec
pop
lods
nop
add
add
or
lahf
rcr
jne
imull
pusha
mov
mov
loopne
aad
clc
dec
xor
loopne
ds
push
jl
or
andb
dec
cmp
mov
outsl
ds
sbb
es
add
adc
mov
xchg
push
lods
decl
out
daa
cmp
mov
pop
in
in
adc
cmp
add
jne,pn
enter
rorb
add
in
jno
outsb
repz
int
xlat
cmp
sub
adc
lock
jo,pt
test
in
xchg
jb
loope
pusha
lcall
xor
xor
xor
loop
sti
push
or
mov
call
mov
in
aad
aas
mov
sahf
imul
pushf
mov
cmpb
xor
add
mov
jle
sub
sub
lsl
cmp
xor
inc
int
mov
xor
mov
xchg
outsl
xchg
icebp
mov
sbb
or
pop
leave
stc
lahf
xor
popf
les
test
xchg
jmp
aas
ja
adc
pop
cs
adc
fcompl
sub
les
and
test
imul
cmpsb
popf
push
push
testl
jmp
or
int
daa
shll
in
enter
or
pop
lcall
stos
lods
sub
dec
inc
int
pop
ja
negb
push
and
inc
push
das
or
into
mov
ljmp
jmp
dec
and
aad
dec
inc
or
fildl
jecxz
js
xor
pop
and
xor
sub
push
in
lods
and
scas
sub
xchg
je
stc
lcall
loopne
mov
lds
in
add
sub
std
imul
inc
movsb
leave
xor
imul
mov
xchg
sbb
and
dec
sbb
scas
fsubl
les
xchg
imul
push
cmpsb
scas
pop
xchg
pushl
ds
aad
pusha
cmp
jp
andb
lea
jmp
jno
addl
cld
fsub
mov
scas
sti
and
lcall
lcall
mov
loop
inc
xchg
data16
push
pop
imulb
addr16
add
sub
mov
outsb
hlt
dec
sbb
insb
push
xor
mov
std
inc
pop
jge
fcmovne
push
mov
ss
dec
inc
gs
cli
mov
aaa
aam
push
stc
in
mov
mov
hlt
xchg
in
shll
cli
arpl
inc
gs
addr16
lret
les
cmp
xchg
insl
mov
inc
push
loope
les
and
pop
fwait
pusha
cmp
or
xor
cmp
and
cmpb
shlb
hlt
loopne
and
bound
push
loop
bnd
inc
cmp
lret
xor
pop
mov
mov
jae
cmp
mov
test
dec
cmp
xor
xor
mulb
call
xor
cmc
stc
or
pop
loop
jmp
rol
jg
es
ds
sbbl
fcmovnu
inc
ds
movsb
push
add
sahf
or
sti
inc
popf
sub
jp
cmp
in
cltd
out
stc
mov
cmp
or
push
movsl
nop
push
out
jnp
xchg
dec
mov
dec
xchg
xchg
jl
lock
repz
push
dec
imul
hlt
dec
fidivrs
rclb
add
add
adc
bnd
loopne
cmp
push
inc
dec
hlt
icebp
dec
dec
icebp
mov
mov
inc
fbld
sbbl
js
push
dec
test
push
xchg
add
jb
test
jecxz
lcall
stc
ja
fistpll
jno
push
xchg
std
ror
xor
into
inc
ficoml
das
dec
adc
sub
add
mov
or
jge
and
cmp
adc
lods
imull
shll
rcl
xor
cmp
inc
inc
shl
mov
hlt
imul
mov
add
push
mov
cmove
adc
das
push
fistps
inc
aad
int3
rorl
pushf
sbbb
jns
sarb
and
pop
shrb
ds
ret
loope
movb
lods
jns
sbb
jp
mov
inc
leave
adc
jl
outsl
pop
fisubrs
arpl
clc
jne
sbb
inc
cld
jbe
inc
jo
jno
mov
mov
lods
push
mov
xor
jecxz
fisubrl
ja
dec
testl
sbb
scas
push
xchg
xorl
pop
cwtl
movsl
jns
shlb
or
inc
jb
ret
jge
fiaddl
mov
movsb
pushf
mov
cld
and
mov
sahf
add
pop
fdivrs
bound
movsb
fldl
sub
mov
push
and
xorps
jnp
push
mov
sub
adc
lret
pusha
add
jge
fistpl
or
pop
mov
jae
cmc
pop
mov
popf
jae
loop
mov
stc
loopne
sbb
or
mov
imul
mov
add
mov
mov
les
out
sti
and
and
ficoml
movsb
movsb
repnz
mov
stos
test
inc
jge
sbb
aam
fisttps
xchg
rcll
push
push
mov
cmc
adc
mov
push
lcall
jge
xchg
insb
inc
shrl
xor
lods
cmovb
insl
test
lods
adc
shl
mov
bound
jg
lods
inc
adc
je
ja
sbb
je
push
ret
inc
js
xchg
or
sbb
mov
mov
adc
out
sbb
inc
pop
push
sub
mov
into
aad
push
mov
push
pusha
xchg
repz
sti
inc
xchg
clc
lods
mov
scas
push
fwait
cld
push
pop
pushf
xlat
mov
cs
rcr
add
int3
xchg
xor
shrl
sti
adc
mov
add
fldt
int
mov
mov
jo
xchg
call
ror
mov
pop
adc
cmp
std
or
mov
inc
cs
pop
in
stos
jmp
xor
sbb
scas
dec
dec
in
ret
mov
mov
ja
lcall
mov
les
pop
movsl
adc
aam
push
dec
stc
jg
sbb
pop
loopne
adcb
mov
ja
int
decb
out
jno
cmc
in
jae
movsb
xchg
mov
or
xchg
mov
insb
add
call
xchg
pop
push
fcoms
add
lods
in
sahf
mov
ret
subb
xor
jp
adc
mov
addl
mov
jecxz
test
xor
bound
fsts
inc
mov
mov
fucom
cmpsl
dec
fidivs
imul
scas
daa
mov
push
int
mov
arpl
adc
dec
divb
mov
xchg
adc
jo
sub
pop
fs
mov
push
cmp
js
popf
cmp
loope
in
adc
pop
cwtl
jne
sub
lods
jae
sub
dec
popa
mov
div
and
jne
lock
push
cli
in
ja
xchg
xor
in
cmpl
enter
es
and
sbb
cmp
sbb
sbb
adc
mov
mov
lods
mov
jl
inc
es
xchg
and
mov
pop
ss
mov
cmp
inc
xchg
dec
jl
stos
jle
mov
popf
mov
mov
jg
push
fsubr
lds
loope
xchg
movsl
sahf
and
add
adc
ret
push
add
data16
lret
mov
cmp
sub
sbb
jg
inc
adc
mov
aas
cltd
inc
push
cmp
push
xor
push
sub
pop
push
sub
mov
dec
cmpsb
dec
mov
jp
xor
lret
call
jge
outsl
sbb
mov
pop
jb
stos
out
int
mov
cmp
shlb
movsb
push
leave
jo
push
inc
jae
arpl
jnp
into
int
mov
add
jle
xchg
orl
push
gs
jno
add
sbb
addr16
inc
mov
and
rolb
pop
gs
ret
push
mov
pop
loope
fildll
lcall
ljmp
cmp
xchg
mov
movsb
mov
pop
inc
mul
sbb
das
jne
xchg
je
pop
scas
mov
jp
ds
rol
lds
ja
dec
arpl
pop
popf
stos
jnp
sub
xor
leave
or
aas
fistps
fsts
push
movsl
sarb
ficoml
bound
fadds
daa
cmp
add
insb
inc
dec
fidivrl
in
jle
sahf
sub
push
push
add
lret
sub
inc
loope
or
data16
or
es
test
inc
xor
arpl
pcmpgtb
ret
pushl
xor
aas
adc
push
pop
dec
xor
sub
aad
pushf
push
jne
pop
loopne
dec
inc
in
stc
inc
pop
ja
stc
pop
sahf
xor
ret
sub
push
mov
pusha
mov
pop
pusha
pop
in
imul
pop
mov
loope
mov
jmp
movsl
shrb
jne
outsb
cwtl
inc
fcomps
jo
loopne
cltd
sbb
data16
mov
ds
pushf
fnstsw
dec
dec
lret
jecxz
sbb
push
outsl
push
faddl
mov
stc
fsubl
movsb
js
out
mov
outsb
lcall
inc
xorl
push
ss
push
fldenv
dec
or
mov
ds
pop
inc
jo
or
stc
push
inc
insl
sbb
xor
das
sbb
and
fmuls
js
mov
in
cmp
dec
popf
icebp
sbb
mov
hlt
jg
adc
add
dec
xor
and
cmp
out
outsl
pop
bound
push
push
jb
loope
ds
aas
pop
lea
incb
and
dec
sub
shlb
test
std
pop
cmpb
daa
jo
dec
aaa
or
outsl
xor
or
sub
insl
mov
adc
sub
xor
sbb
sub
in
jl
ja
leave
or
cs
xor
or
jl
xor
arpl
sub
mov
fisttps
ja
leave
xchg
pop
jbe
ss
push
leave
cmp
add
lods
pop
push
fdivrl
push
adc
sbb
dec
out
add
aam
lods
enter
fisttps
fbstp
and
stos
fimuls
cmp
dec
push
mov
out
jg
add
xchg
fcompl
push
add
add
addb
orb
or
mov
sahf
repnz
mov
popf
sarl
push
sub
mov
or
movsl
aaa
fs
inc
dec
dec
sti
sbb
mov
je
add
insl
test
mov
sbb
dec
das
push
sbb
out
stc
lds
sti
mov
icebp
jne
and
test
xchg
enter
lret
popf
sbb
and
into
xor
cmp
inc
aaa
mov
ja
mov
adc
and
mov
enter
scas
roll
mov
dec
cmc
or
into
jbe
mov
xor
sub
push
jp
jns
push
js
push
xor
xchg
sbb
mov
jne
pop
push
cmpsb
into
inc
lods
push
jle
in
push
inc
jb
fs
jge
jnp
pop
leave
ss
mov
ljmp
popf
inc
cmp
mov
xchg
xchg
test
fldl
aam
pop
sbb
outsl
xchg
xchg
dec
pop
jns
and
cmc
js,pn
daa
adc
in
jmp
sub
inc
arpl
fildl
scas
ffree
mov
or
mov
push
jp
fwait
xor
dec
mov
xchg
mov
fidivrs
repz
cmp
enter
push
mov
push
mov
inc
xchg
mov
loope
fwait
mov
ret
pop
ja
push
push
out
pushf
mov
stc
aaa
or
int
aam
cmp
xor
cmp
sbb
lcall
jo
std
fwait
push
push
inc
orb
rolb
in
aad
mov
jae
les
add
out
xchg
lret
jae
or
lahf
or
shll
mov
ljmp
into
repz
xchg
leave
xlat
mov
fcoml
fstps
cld
cmpsb
int3
fstpl
cmp
dec
push
jle
std
inc
push
cmp
inc
sub
cmp
push
push
in
xor
xchg
addr16
popf
movsl
sub
idivl
jmp
js
xchg
pusha
mov
jo
andl
cmp
sbb
mov
in
push
iret
push
test
nop
bswap
push
std
lcall
mov
sub
pop
sti
fneni(8087
pop
xchg
jae
aam
adc
or
cmpb
in
repz
inc
jb
mov
mov
popf
pushf
pop
inc
loop
xchg
pop
and
out
or
rclb
inc
cli
neg
pop
das
cmp
fnstenv
into
cmp
cs
sub
mov
fsubrp
enter
in
cld
sti
pop
xor
test
dec
sub
loopne
and
pop
push
test
inc
push
lahf
test
cmp
sbb
std
sbb
cmpsb
sar
test
mov
movl
xor
mov
mov
inc
inc
adc
xor
and
mov
test
scas
out
sub
lret
push
sub
pop
mov
imul
loope
repnz
fsub
sbb
stc
cmpl
test
scas
and
fidivs
mov
std
add
mov
jecxz
iret
cmp
mov
push
xchg
xor
xor
idivb
xchg
jne
stos
push
and
mov
mov
add
faddl
mov
xchg
fdivp
jo
cmpsb
jno
fisttps
dec
out
inc
cmp
jo
ret
ss
ljmp
mov
data16
leave
bound
pop
and
dec
push
jae
mov
adc
push
popa
xchg
sbb
rolb
jae
cmpsl
sub
stos
aaa
rcrl
push
mov
jns
jmp
pop
imulb
and
or
xor
xchg
stc
cltd
lahf
lret
push
leave
ret
add
or
xor
push
loop
sbb
mov
arpl
pop
popf
jecxz
sub
xorl
jnp
dec
test
aas
adc
pop
loopne
sahf
sbb
lahf
test
mov
and
adc
cmp
dec
scas
cmp
jo
xor
jb
mov
jge
mov
cwtl
sub
ror
nop
gs
sbb
jb
in
cmp
enter
jmp
mov
fcomip
mov
je
out
and
push
push
iret
push
xlat
sub
or
add
out
ret
dec
lahf
mov
mov
mov
dec
mov
ds
jle
mov
lret
in
ret
test
and
rcl
push
mov
mov
ljmp
lahf
adc
iret
push
lahf
mov
xchg
cmpsl
mov
push
aad
clc
sub
adc
stos
mov
cmp
movsl
sbb
int3
lock
adc
lcall
inc
fimull
adc
cwtl
fbld
ret
push
and
add
or
andl
pop
loopne
scas
add
mov
movsl
ja
outsl
aaa
in
pushf
mov
sub
jnp
lea
jle
in
in
into
add
xchg
mov
stos
sbb
jp
sub
leave
cmp
inc
dec
xchg
jne
fcompl
push
push
shlb
or
sarl
jb
insb
cmp
or
cld
dec
dec
push
dec
xor
cmp
rolb
push
xor
arpl
repz
add
icebp
and
aaa
aad
and
ja
mov
out
xor
aas
mov
jb
or
aad
ficoml
out
mov
aaa
iret
ret
push
enter
bound
mov
adc
and
and
movsb
loop
push
das
in
xorb
push
repnz
mov
push
cmpsl
mov
cmp
rcl
out
sub
adc
push
rol
daa
das
push
pusha
out
adc
fiadds
nop
test
cmp
sub
xor
dec
xchg
sub
ljmp
ja
cltd
je
dec
adc
mov
mov
outsl
sbb
dec
ja
shlb
loope
sti
mov
push
inc
pop
fs
cs
sbb
cwtl
or
adc
inc
mov
hlt
xorl
aam
jl
pop
or
adc
lods
push
push
repz
fwait
and
adc
hlt
movsl
sub
sub
outsl
mov
loopne
iret
test
push
push
fs
xchg
sub
pop
jnp
dec
pushf
les
lds
in
mov
pop
movsb
adc
lret
aam
cmp
loope
stos
lds
add
outsl
lcall
push
pop
and
push
add
clc
cmp
jg
dec
mov
xchg
stos
enter
mov
aas
pop
jg
mov
add
mov
mov
sbb
lods
test
aas
pop
mov
shrl
xchg
js
push
dec
mov
adc
neg
enter
cltd
mov
pop
fcmovnbe
xor
inc
mov
fbstp
jb
movsl
cmp
or
mov
test
negb
sbb
mov
xchg
push
orb
pop
cli
mov
xchg
shlb
pop
in
int
xchg
mov
popf
push
lret
cmp
loop
mov
mov
xor
pop
xor
in
add
stc
loop
xchg
pop
push
push
xor
jne
cmp
adc
in
inc
cmp
nop
cmpsb
cmp
aaa
test
sahf
stos
in
stc
insl
push
mov
lea
mov
mov
pop
or
movsl
inc
pop
xor
mov
orb
sahf
sahf
je
inc
push
fcmovne
jns
push
addr16
push
jb
dec
insl
cld
pop
fidivl
push
idiv
enter
addl
int3
jecxz
push
and
rcrb
mov
pop
xchg
ret
sub
stos
ffree
mov
dec
mov
shrl
mov
or
rcpps
pop
push
adc
loop
cs
mov
nop
or
and
cli
nop
arpl
push
popf
and
imul
cwtl
jmp
popf
leave
std
and
dec
mov
and
mov
mov
ljmp
push
pushf
fs
clc
mov
push
sbb
inc
test
cld
jmp
mov
mov
in
imul
jns
and
mov
cld
xlat
push
inc
scas
pop
clc
push
pusha
mov
movsb
scas
sbb
or
inc
jb
cmp
jns
push
mov
xchg
adc
shr
out
dec
push
shll
out
xchg
xor
mov
mov
ss
push
and
rorl
mov
outsl
jg
fdivs
or
pop
shlb
inc
scas
je
mov
jl
das
add
push
or
repz
repz
test
cmp
imul
push
lahf
xchg
sahf
iret
outsb
or
incl
fs
sbb
push
inc
jnp
and
je
sti
test
adc
fs
lcall
mov
out
jae
leave
loopne
loop
mov
lock
adc
adc
rol
inc
push
xchg
mov
pusha
inc
cmp
call
cmpsl
mov
in
or
mov
stos
jb
fdivrs
aad
movsl
mov
bound
daa
aaa
cmpsl
fildll
adc
push
cmp
jb
add
sbb
mov
cmpsb
fdivrs
mov
xchg
pushf
dec
ljmp
cmp
or
arpl
ss
and
imul
imul
incl
inc
or
rol
push
mov
mov
scas
push
mov
dec
sti
out
push
aad
sub
sbbl
adc
loop
pop
lea
cmp
lret
cld
in
pop
les
xchg
cmp
outsl
xchg
out
xchg
or
divb
xchg
dec
pop
fwait
int3
imul
mov
xor
sbb
ljmp
test
stc
pop
mov
iret
xlat
jp
push
in
or
lods
add
lds
ret
in
cwtl
or
jp
adcb
not
add
loope
push
cmc
and
adc
inc
fstps
mov
lods
test
aaa
shrb
ljmp
jns
hlt
or
add
cmp
arpl
push
or
cmp
lds
inc
dec
lahf
icebp
xchg
ret
xor
out
cmp
fstps
fisttpl
cmp
or
mov
repz
out
sti
imul
cmpsb
roll
cmp
test
in
fcomp
ja
cld
xchg
ficompl
push
lods
sbb
nop
or
xchg
lcall
sbb
fmul
mov
lods
add
xchg
jp
ljmp
in
clc
bound
stos
inc
push
xchg
add
inc
mov
addl
inc
mov
push
mov
push
out
test
add
les
add
pusha
xor
and
xchg
dec
cmp
rorl
loopne
aas
rorb
xor
mov
pop
movsl
pusha
inc
xchg
inc
add
lods
daa
aaa
adcb
lcall
dec
dec
arpl
xchg
jmp
push
jbe
xor
sbb
pop
fisubl
mov
pop
push
sbb
insb
pop
and
jo
in
mov
mov
ffreep
sbb
movsl
pause
lahf
jg
aas
jmp
pop
imul
inc
pushf
xchg
mov
aad
inc
mulb
xor
cli
icebp
dec
xchg
mov
xor
jnp
ret
pop
repz
xor
sub
ret
xor
pop
outsb
mov
pop
pusha
inc
mov
sub
push
mov
cmp
and
add
inc
pop
jne
outsb
sbb
pop
orl
clc
push
sbb
popa
xor
scas
push
sbb
add
push
adc
std
cmp
or
cmp
setae
shlb
cmp
jae
aaa
lret
test
push
and
movsb
push
stos
fstpt
cmc
repz
mov
sub
out
adc
cs
xchg
outsl
lods
fs
pop
adc
out
clc
sub
movsl
ljmp
mov
fdivrl
sub
mov
mov
push
jg
push
das
sub
movsb
icebp
mov
and
add
or
push
fstpl
push
sub
add
sarl
ret
add
ret
stos
dec
mov
and
arpl
xchg
pop
xlat
int3
pop
inc
call
mov
shll
push
xchg
jle
aam
aad
mov
mov
rol
push
or
in
rorl
sbb
ret
mov
dec
addr16
cs
pop
std
sub
mov
das
cmpsl
jns
or
out
sahf
and
cmp
adc
in
outsl
stc
shrl
fisubrs
in
xor
shll
cmp
pop
mov
mov
xchg
rclb
push
sbbl
aaa
push
es
jle
andb
cmpsw
js
push
jnp
ficompl
cmp
cmpsb
sbb
lods
test
mov
mov
std
mov
add
cli
push
and
leave
sub
and
lods
lret
cmp
or
jmp
stos
movsb
inc
push
sarl
adc
sbb
icebp
or
cld
lss
test
mov
fistl
je
leave
adc
xchg
movsl
nop
dec
rorl
xor
lods
xor
add
mov
cmp
cmp
cmc
test
repz
repz
out
call
shll
fbld
jp
pushf
cmp
in
jo
in
in
cmc
mov
xchg
shlb
inc
cs
fucomp
cld
shl
lods
mov
dec
push
or
mov
out
lods
lods
mov
pop
add
inc
mov
clc
scas
inc
xchg
inc
xlat
adc
jle
mov
and
add
imulb
repnz
hlt
mov
inc
repz
loopne
mov
call
out
mov
test
inc
mov
dec
dec
mov
test
int3
jl
push
mov
jae
sub
fdivs
aad
xor
mov
repz
or
add
xchg
mov
arpl
mov
xchg
stc
sarl
xchg
or
sbb
jge
std
cmc
xchg
ficomps
jmp
cmp
lds
pop
cld
push
popf
adc
xchg
ret
mov
cmp
push
loopne
pushw
push
imul
push
loop
pop
mov
cmpsl
inc
int
jne
in
pop
out
sbb
das
mov
sub
insb
jb
sub
and
push
mov
cmp
movsl
pop
or
test
les
fiadds
mov
dec
xchg
jecxz
pop
loopne
ss
addr16
xlat
jecxz
shlb
in
jns
imul
pop
mov
call
lret
mov
imul
in
cmpb
pop
pop
dec
enter
bound
pop
jmp
scas
inc
cmp
pop
sarb
lret
lret
jmp
dec
mov
pop
xor
xchg
mov
push
cmp
daa
out
scas
sti
dec
aaa
mov
cmpsb
ljmp
andl
or
push
push
inc
ret
dec
cmp
xchg
and
mov
aas
mov
or
and
repnz
dec
test
xchg
in
std
or
rcrb
push
mov
sbb
adc
mov
mov
add
mulb
mov
and
lahf
jo
inc
movsl
sbb
fsubr
inc
out
or
loopne
inc
jg
xchg
int
mov
cmpb
nop
in
lret
iret
ret
lea
push
cmp
lahf
fisubs
test
gs
les
ficompl
lcall
xor
testl
sbb
test
push
push
rcll
aam
test
pop
xchg
add
imul
shrb
call
dec
sub
pop
test
pop
out
icebp
mov
lods
inc
xorl
and
inc
mov
aad
pop
dec
sub
test
xor
xchg
sarl
addr16
nop
push
test
jge
mov
out
repnz
dec
in
cmc
jae
and
fs
loop,pt
mov
fwait
pusha
push
inc
scas
xchg
push
test
cmp
lret
push
aam
pop
jae
sbb
inc
mull
sti
repz
xchg
rcll
mov
subl
pusha
cmp
mov
stos
dec
xor
sti
cmpsl
dec
push
jg
push
outsb
xchg
scas
mov
cmp
inc
js
push
mov
in
or
aad
int3
cmp
xor
leave
popa
jge
cmp
cmp
pusha
fldt
outsl
cli
fwait
mov
sub
ljmp
mov
xor
cmp
push
repz
iret
dec
orl
sbb
cmpsb
jno
and
jo
xor
pop
sti
push
xor
or
xchg
aas
jg
fdivr
xor
mov
xchg
mov
xorl
jnp
lret
sbb
cmp
mov
cwtl
bound
ret
inc
or
pusha
int3
loope
pop
or
loope
dec
inc
sbb
iret
popf
mov
push
insl
bound
mov
mov
push
or
es
ljmp
mov
das
inc
mov
arpl
sub
pop
add
cmp
push
pop
mov
gs
inc
dec
pop
loop
fidivs
addl
push
add
repz
rcl
ficoml
sub
dec
into
roll
lcall
cmpb
rorb
or
push
cmpsb
mov
out
jecxz
and
test
add
test
stc
jae
aad
dec
pop
scas
imul
mov
add
fsts
ljmp
js
les
insb
das
mov
ljmp
push
xor
mov
fcoms
mov
xor
insb
cmp
xchg
add
div
dec
xor
cmpb
fdivr
pop
leave
in
jg
sub
or
adc
xchg
mov
adc
sub
dec
dec
jno
sti
cmpsb
out
fiaddl
in
rorb
xor
sbb
mov
push
mov
aaa
insl
int
and
jmp
in
pop
ret
mov
mov
and
gs
sti
mov
pop
gs
jno
xchg
adc
jmp
jmp
mov
lods
xchg
cmp
mov
xchg
xor
cmp
dec
adc
xor
mov
and
fistpl
add
scas
sub
mov
sub
push
insl
mov
mov
lret
push
fbstp
aaa
and
adc
ret
add
dec
xlat
fcoms
adc
cmc
out
aad
outsw
dec
xor
stos
mov
shld
shlb
pop
adcb
in
cmc
outsl
sbb
push
jns
and
pop
idivl
xor
adc
cmpsb
push
add
out
xchg
cs
xor
xchg
push
fidivs
mov
cmc
jae
jge
xchg
clc
xor
cld
mov
sar
pop
or
jg
iret
ffreep
in
cmp
fcos
arpl
popa
add
dec
scas
or
test
or
pop
shll
imul
js
lahf
inc
sbb
jmp
mov
rorb
insb
adc
push
and
pop
shrb
cmpsb
or
xchg
and
cmp
popf
cmpsl
mov
push
add
inc
pop
mov
lds
icebp
inc
pushf
mov
sub
mov
adcb
lret
sub
imul
fistl
test
lock
push
movsb
das
cld
dec
cmp
repz
lret
or
cmp
lods
inc
cld
sahf
xor
and
or
mov
xor
outsl
ret
pop
es
lods
pop
push
mov
cwtl
and
lret
push
xchg
cmp
pop
jb
sti
pop
push
adc
xor
filds
rcl
xor
xor
xor
in
xor
xlat
stc
repz
ss
rolb
pop
inc
jns
out
lods
dec
adc
ds
or
jl
inc
fildll
test
mov
inc
in
xchg
out
jne
mov
adc
push
mov
jno
into
nop
cmp
xlat
stos
or
in
jns
xor
aam
pop
xor
inc
insl
fiaddl
sahf
adc
mov
orl
arpl
push
out
and
fnstsw
call
adc
outsl
adc
push
dec
out
mov
int3
mov
mov
pop
jb
dec
adc
pop
inc
sarb
ja
sub
out
mov
sbb
aad
add
in
adc
xchg
mov
ficompl
sti
mov
cmp
xchg
push
xchg
push
sahf
cmp
in
and
jae
out
lcall
xchg
sbb
int
jno
mov
addl
fnstsw
mov
sub
inc
out
sub
test
lods
shrl
push
cmp
dec
ja
inc
flds
shlb
pop
or
push
popa
xorl
out
inc
sbb
sbb
movsl
jns
dec
cmpsb
and
dec
or
push
les
test
push
push
mov
or
sar
adc
sub
inc
sqrtps
inc
sbb
movsb
sbb
jp
sub
sbb
push
xchg
xchg
ret
xor
ficoms
pop
dec
cmp
inc
jg
jnp
test
push
fwait
mov
mov
aam
sub
or
movsl
daa
cld
fisttps
add
ret
dec
jne
sbb
outsl
adc
repnz
add
repnz
ret
sub
in
cmp
jle
add
sbb
mov
lods
sbb
cmp
dec
sub
hlt
push
or
mov
cmpsb
pop
fidivs
add
in
pop
gs
cmp
aaa
sub
adc
push
inc
lock
fstsw
ficompl
mov
ss
adc
or
lahf
add
cmpsb
mov
call
push
inc
hlt
push
cmp
xchg
aam
sbb
pop
daa
cmp
ror
jb
mov
xor
ljmp
cmp
fimuls
out
sar
mov
jmp
jb
xchg
mov
je
pop
call
mov
sub
fistpll
add
ret
or
pop
dec
inc
jns
out
cmpsl
adc
pushf
mov
mov
shlb
add
push
mov
and
adc
sbb
dec
add
stos
jne
sub
scas
or
cli
jmp
int3
ds
inc
loop
mov
xor
add
sbb
add
in
xchg
scas
or
cmp
mov
bound
push
adcb
xor
xchg
fwait
push
mov
out
jecxz
push
add
aaa
push
xlat
lret
adc
mov
mov
inc
shl
sbb
cltd
xor
sbb
cmp
add
pop
inc
aad
push
jcxz
iret
add
hlt
js
rcll
or
aas
xor
sbbb
mov
push
mov
jg
out
scas
adc
xor
sub
xor
jmp
sahf
xor
mov
or
call
push
aam
fld
mov
addr16
fimuls
sub
addr16
inc
insb
movsb
mov
stos
inc
lods
push
das
divl
cmp
inc
push
iret
test
cmp
sbb
xlat
pop
mov
ror
pop
mov
mov
das
jecxz
xchg
jmp
stos
fisubrs
inc
mov
push
or
gs
stos
ds
mov
jecxz
sahf
jo
in
ret
js
inc
and
sahf
sub
insb
mov
test
aam
and
ja
jb
test
movsb
inc
add
or
test
or
outsb
lods
daa
adc
shr
imul
mov
insb
pop
pop
lea
adc
cs
mov
lods
and
add
jae
int3
into
pushf
stc
adc
push
or
sbb
rcrl
and
cli
cld
xor
add
ljmp
jecxz
movsb
pop
mov
push
push
arpl
sub
cwtl
jbe
aad
es
outsl
cmc
movsb
jecxz
jae
pop
lea
cmp
xor
sub
mov
xor
add
jno
jmp
push
gs
push
ds
flds
testb
int3
ja
inc
rcll
outsb
out
xchg
mov
mov
inc
mov
dec
mov
loop
test
imull
loope
inc
je
sub
out
sub
in
out
icebp
std
lahf
sub
out
jge
adc
imul
jo
jnp
ficoms
scas
and
and
dec
cltd
mov
cmc
mov
mov
popf
mov
or
or
push
or
out
inc
les
mov
mov
adc
inc
aas
notl
or
cmp
xchg
lea
pop
fsubs
mov
xchg
sub
cld
jg
xor
shr
mov
cmp
in
or
sbb
loope
jmp
push
cltd
arpl
rcrl
repnz
inc
jnp
aaa
sbb
outsb
rcr
dec
add
cmp
sub
loopne
xchg
xor
lods
out
cmp
jae
inc
pop
pop
pop
add
out
xchg
clc
loopne
or
fstpl
test
cltd
movd
lret
cld
or
sbb
adc
les
hlt
mov
dec
jbe
sub
sbb
in
mov
lcall
pusha
dec
xor
out
xchg
push
sbb
insl
fldt
out
pop
cmp
cmp
jl
xor
sub
lcall
cld
mul
out
loop
sub
inc
push
fldcw
xor
adc
cld
add
cmpsl
bound
std
popa
and
and
clc
xchg
fnstcw
xor
push
lds
add
daa
cmpsl
movsl
jmp
mov
add
popa
add
cmp
bound
xor
sbb
mov
sbb
orb
mov
or
xchg
pushf
mov
pavgw
sti
pop
arpl
cmp
mov
out
clc
dec
jg
gs
cli
mov
cmp
pop
gs
iret
dec
push
movsl
mov
push
pop
pop
inc
cs
andl
jecxz
cld
mov
inc
mov
stos
add
rcrl
fwait
xchg
jl
xchg
aad
and
jno
cs
jns
adc
aas
test
xor
sub
lea
test
pop
xchg
pop
stc
in
fstps
pop
jg
add
mov
or
pop
call
pop
clc
jg
sbb
sub
nop
rcrb
ret
call
sti
cmp
js
xlat
sub
sub
clc
cmpsl
lahf
mov
movsb
mov
cmc
shrb
in
int
repnz
sbb
ficompl
jmp
pop
mov
ds
je
or
pop
or
inc
inc
or
xchg
cmp
inc
lock
cmpsb
jl
mov
mov
and
or
push
mov
out
out
sbb
rcl
iret
orl
je
adc
jp
daa
test
aad
inc
pop
xchg
test
jp
hlt
sbb
pop
nop
aaa
mov
xchg
test
scas
and
inc
mov
or
call
inc
push
xchg
pop
in
mov
dec
ret
ficoml
or
dec
push
adc
xchg
xor
out
out
mov
int3
insl
pop
pop
xorl
mov
mov
loopne
incb
cmpl
mov
jne
insl
rcrl
lcall
cs
push
mov
iret
nop
int
jle
or
dec
outsb
rolb
movsb
das
sub
mov
lret
dec
adc
bound
scas
idiv
and
add
loop
add
mov
shrl
sbb
sbb
mov
subb
and
scas
jecxz
mov
inc
repz
sbb
enter
jle
and
sub
or
lods
loopne
pushf
sbb
mov
and
in
mov
and
push
and
int
push
xchg
enter
mov
imul
repnz
inc
jp
cmp
inc
fwait
adc
insb
call
adc
adc
dec
mov
lock
push
xor
mov
xor
roll
lret
iret
xchg
es
lret
or
dec
sbb
xor
sbb
jo
mov
sahf
sbb
in
movsl
add
mov
xchg
jns
adc
jl
jns
loopne
insb
mov
loopne
push
pop
push
cmpsl
fsubr
int
jge
or
scas
repnz
fwait
inc
popf
bound
inc
mov
add
xchg
jmp
jb
sbb
inc
es
adc
jg
sub
mov
data16
mov
iret
push
cmp
sbb
pop
ljmp
repz
ret
cmpsl
inc
fwait
cmpb
lahf
adc
pop
inc
mov
add
mov
mov
mov
lcall
lock
inc
scas
cmpl
pop
push
lods
rcrl
cli
inc
xor
testb
pop
and
ja
xchg
pop
jo
xor
cmp
dec
aam
or
mov
mov
inc
inc
nop
push
jbe
sbb
addr16
enter
inc
test
xchg
push
xchg
dec
test
mov
dec
xchg
pop
ficoms
dec
shl
sbb
and
sahf
sub
mov
loope
or
sub
es
push
xor
add
ljmp
push
sahf
or
cmp
test
xor
xor
ss
adc
ret
jle
mov
sub
stos
xor
imul
or
xchg
adc
shll
mov
cmpsl
loopne
sbb
xlat
and
pop
rclb
xchg
pop
push
fistpll
jno
lahf
ja
lods
in
cltd
outsl
popf
sbb
ja
cmp
adc
jge
xor
adc
fiadds
fmuls
fcom
pop
enter
pop
jge
dec
bound
insb
or
fdiv
pop
hlt
ret
mov
mov
sub
dec
pop
adc
jns
clc
sti
ret
out
testb
add
rcl
cmpsb
fsubrl
cmp
lret
insb
sub
iret
sbb
cmp
mov
push
mov
sbb
sub
stc
call
push
cld
arpl
cmp
hlt
sbb
mov
cmc
int
push
test
into
pop
insl
pop
clc
out
adc
push
inc
mov
mov
xchg
lret
cmp
in
push
cli
scas
shl
xchg
mov
mov
hlt
xchg
mov
jmp
add
shr
xchg
push
les
xchg
xchg
xchg
outsl
jnp
pop
mov
jne
mov
dec
mov
stos
push
lock
and
pop
inc
adc
aas
movsl
and
xlat
scas
into
pushf
sbb
sarb
xchg
sbb
test
stos
cmp
dec
xor
rorl
cmpl
cwtl
clc
mov
icebp
shll
xor
int
and
add
ret
movsb
nop
repnz
cs
lcall
jne
cli
fbstp
sarb
cmp
hlt
inc
movsb
adcb
mov
aam
popa
push
shll
mov
repnz
sub
cmc
andb
push
outsb
push
sbb
mov
and
mov
ja
cs
push
aam
jmp
mov
or
push
sahf
xor
das
sbb
mov
mov
mov
subb
mov
out
adc
negl
and
ds
push
mov
push
xor
xchg
sbb
sarl
es
adc
sbb
dec
fs
jo
nop
insl
js
je
cwtl
dec
cmp
xchg
mov
out
pop
testb
nopl
jno
sbb
in
bound
fiadds
mov
or
test
sbb
in
insb
sbb
push
and
popl
push
daa
dec
push
sub
jbe
std
push
pop
sub
adc
inc
ret
jp
mov
popf
mov
xlat
add
ds
sbb
in
out
jecxz
jb
inc
pop
dec
test
je
das
pop
pop
mov
out
les
pop
inc
jnp
inc
adc
out
pop
je
outsb
and
or
addr16
xchg
xor
leave
adc
adc
pop
sub
xchg
mov
das
sbb
hlt
mov
fdivrs
addr16
and
fwait
pop
lea
subl
pop
fimull
adcb
mov
and
loope
pop
mov
inc
and
xor
cli
sbbl
jecxz
cmp
push
subb
mov
inc
push
out
push
mov
add
sub
xchg
xor
jecxz
int
outsl
rorl
add
int3
les
and
jne
and
inc
jge
sub
ds
mov
int
out
adc
lret
or
push
xor
push
or
mov
push
mov
pop
js
push
push
or
lcall
pmaxub
mov
data16
lea
jns
mov
jl
shl
cmp
push
test
adc
sub
pop
jle
xchg
loopne
or
test
arpl
into
mov
jmp
push
ja
mov
notb
out
flds
das
fistps
dec
jno
inc
cmp
nop
inc
repnz
cmpsl
jns
aad
dec
xchg
mov
outsl
aas
inc
loopw
add
fs
lret
or
mov
sub
movsl
outsb
in
outsl
pop
sub
jne
das
loopne
and
lods
sbb
rorb
sbb
xchg
jo
stc
movsl
lahf
fildll
aaa
sahf
clc
cmp
jl
lahf
and
shlb
movsb
cltd
dec
addl
stos
adc
mov
roll
imul
xor
push
rcll
lock
mov
sbb
mov
out
pop
in
jno
inc
xor
ret
jbe
test
mov
sub
xor
adc
scas
mov
pop
daa
loopne
sbb
bndldx
imul
aam
dec
jmp
cmpsl
loope
cmc
or
push
outsb
outsb
xorl
mov
lahf
int3
rcr
cmp
cmp
aas
loopne
out
or
xlat
lcall
stos
inc
push
cmpsl
inc
inc
xor
pop
lret
int
in
in
adcl
std
inc
out
pusha
sahf
callw
add
aaa
ret
loopne,pt
scas
add
lret
xor
xlat
ret
push
js
fsts
rorb
cmp
fwait
mov
push
inc
popf
lret
lahf
cmpsb
out
xor
or
popf
mov
mov
jne
ss
mov
sbb
add
iret
ja
arpl
mov
test
mov
outsb
or
jge
scas
and
ds
lods
sbb
sub
out
lret
insb
xor
testb
mov
push
sub
inc
gs
addr16
fwait
adc
js
lds
mov
xchg
loope
rolb
xchg
pop
fstpt
ret
mov
fimuls
mov
fst
test
pop
add
pop
cmp
adc
sbb
sbbl
lock
pushf
test
ret
lcall
jecxz
pop
sub
ret
xor
pushf
sub
nop
mov
test
add
popf
mov
mov
nop
shr
push
sub
mov
testl
and
inc
stos
jns
jae
pusha
outsl
imul
adc
pop
or
rcrb
les
cmc
hlt
mov
jge
cld
sub
shlb
gs
sahf
mov
out
mov
mov
sub
sti
fldcw
enter
js
mov
shlb
loopne
cli
repnz
sbb
sti
movsl
popa
loope
dec
in
mov
adc
loop
inc
mov
pop
push
mov
inc
mov
pop
subb
inc
sub
fildl
cmpsl
stc
or
mov
cmc
aas
jle
pop
pop
adcl
loope
sbb
aas
jge
sub
cmpsl
adc
pushf
lea
or
dec
hlt
imul
js
stos
ja
js
and
and
mov
fwait
jbe
fadds
outsl
jmp
jp
std
push
inc
jbe
shrl
or
pushf
xor
andb
popf
xchg
adc
ffreep
mov
scas
cltd
fsubs
rcl
cmp
pushf
mov
sarl
or
or
mov
push
and
xor
or
out
inc
xchg
out
nop
sbb
sbbl
mov
push
outsb
jle
fistl
mov
jae
add
test
mov
xor
imul
lods
imul
je
montmul
cmpsb
adcb
mov
test
cmc
cmp
ret
loopne
insb
fwait
je
adc
and
jo
enter
pop
ss
pop
loope
sbb
sub
fisttpl
rcl
lods
aaa
push
xor
and
add
cwtl
test
dec
dec
adc
jb
test
data16
pushf
scas
mov
dec
xchg
cmp
and
scas
inc
or
cmp
fldl
sbbl
dec
inc
add
lock
loop
xor
add
imul
aaa
orb
leave
mov
rcrl
mov
test
out
into
or
mov
lcall
jnp
adc
dec
sahf
xchg
mov
sbb
loop
inc
pop
imul
mov
movsb
mov
cmc
pop
push
inc
sbb
xchg
push
mov
in
xchg
xor
sbb
lds
ds
ljmp
ljmp
ret
add
movsl
rcl
mov
dec
loopne
xchg
sar
fdivrl
jp
or
ljmp
xchg
add
jo
mov
jp
add
push
and
add
lock
dec
mov
xor
scas
aas
pop
mov
jb
fiaddl
mov
mov
mov
mov
iret
jnp
mov
dec
das
insl
mov
sbb
xchg
jbe
in
inc
popa
jmp
push
xchg
lret
sub
dec
dec
les
sub
frstor
arpl
lock
cmp
test
dec
insl
inc
adc
shrl
shlb
jno
mov
dec
dec
fwait
and
jne
pop
fdivs
scas
mov
mov
sbb
mov
jl
and
sub
lods
mov
test
or
mov
jge
jmp
mov
sbb
insb
sub
nop
mov
outsb
out
scas
cwtl
mov
pop
inc
jbe
fcompl
das
mov
loopne
in
or
fwait
push
add
aaa
mov
popf
scas
lock
push
inc
arpl
or
dec
dec
not
lret
jge
lock
dec
jmp
mov
leave
push
dec
sbbl
loope
sahf
mov
mov
mov
out
and
cmp
push
je
push
leave
push
push
jns
sub
ljmp
sub
adc
inc
sbb
push
xchg
icebp
pop
mov
in
mov
dec
adc
jae
xor
rcrb
xor
loopne
dec
push
in
scas
enter
int
subl
inc
inc
add
enter
in
outsb
cmp
movsb
fbstp
shrl
sbb
aam
jnp
fs
nop
xor
jbe
xor
push
cmp
les
test
ja
cmp
cwtl
push
sbbl
bound
shlb
jp
inc
xor
in
push
push
adc
or
xor
jmp
sbb
mov
sub
jne
and
mov
add
lods
addr16
add
lret
stos
jae
repnz
ja
xlat
notl
jnp
sahf
mov
mov
les
sbb
addr16
dec
in
sbb
lea
adc
xor
lahf
dec
mov
dec
fcomip
push
icebp
insb
xor
int3
lret
inc
lock
jo
add
sbb
xchg
rorb
popf
fmull
loopne
scas
orl
pop
sub
cmpsb
out
mov
mov
in
test
sub
fsts
inc
pop
mov
in
pop
imul
outsl
sub
mov
xchg
jg
fimuls
cmp
cmp
sub
popf
inc
jb
lds
jl
repz
adc
inc
fimull
adc
cmp
ss
push
jne
inc
adc
cmp
cmpsb
mov
icebp
sub
add
xchg
aas
lods
xlat
mov
xchg
push
test
cmpsb
lcall
mov
dec
xchg
or
in
push
xchg
popf
rorl
cmpsb
sahf
push
mov
lods
mov
pusha
and
cmpsb
cmpsl
repz
shrl
jl
out
sub
xchg
xchg
lock
and
sub
mov
les
xor
movb
cld
xchg
imul
shrl
lds
push
cmp
enter
xchg
push
xchg
loop
adcb
cs
notl
cmpsb
sub
leave
loope
ret
mov
mov
aad
push
daa
lret
in
les
out
rorb
test
sbb
pushf
int
rclb
lds
or
loopne
cwtl
mov
insb
jns
dec
cmp
lahf
std
lods
movsl
out
insb
inc
and
mov
cwtl
jae
jae
dec
push
push
cmp
and
dec
ljmp
jle
or
push
xor
or
sahf
rolb
nop
xor
lods
xor
js
fldenv
push
push
pop
cli
outsl
mov
aad
jb
fbld
testb
mov
leave
add
xchg
andw
jecxz
xor
mov
shrl
xchg
loope
sub
pop
ret
push
mov
mov
ljmp
mov
pop
lret
scas
lods
inc
in
pop
and
aas
sbb
and
jbe
jge
lret
movsl
add
adc
aad
in
ficomps
cmpsl
and
lret
or
mov
adc
mov
sbb
xor
xchg
and
pop
jl
inc
mov
in
xchg
shlb
dec
mov
add
lcall
sub
popf
mov
hlt
push
movsb
mov
stc
and
lcall
mov
dec
push
aad
jle
clc
pop
pop
popa
into
imul
mov
pop
outsb
dec
inc
arpl
data16
mov
cltd
and
dec
negl
pop
push
hlt
outsb
ret
or
nop
inc
adc
add
fisttps
pushf
ficomps
lods
and
popa
add
int
jnp
notb
ss
aad
jae
push
arpl
push
ret
pop
sarl
cld
call
mov
iret
inc
test
jle
je
rcrl
push
mov
jmp
adc
mov
sub
dec
int3
cmc
pop
jle
mov
scas
xor
xorb
cmp
cmp
pop
mov
mov
cwtl
cs
cmpsl
jp
push
lret
or
xor
lea
repnz
loopne
pop
xlat
jns
rclb
xchg
jmp
sbb
fldl
pop
arpl
lds
and
inc
into
adc
sub
jmp
std
mov
int3
cwtl
sub
cs
mov
mov
gs
int
jne
je
ds
xor
sbb
int
push
push
popa
sub
mov
in
mov
jo
cs
std
add
inc
dec
icebp
shl
mov
mov
gs
push
add
addr16
loopne
mov
ss
jne
mov
add
pop
out
mov
pop
add
aam
sub
test
fmull
fcoml
lea
adc
jno
cmp
sbb
mov
lods
xchg
mov
fldt
mov
fstpl
cwtl
push
lods
stos
fnstenv
sub
sbb
ss
out
scas
cmp
cmpsb
les
mov
loop
mov
xchg
call
insl
and
push
andl
sbb
cmp
jg
clc
sti
int
call
nop
popf
int
mov
or
ret
inc
dec
push
and
cmpsb
inc
push
and
mov
fistpll
push
xor
jb
in
stos
adc
push
push
jecxz
roll
mov
xchg
pushf
xchg
and
lret
es
xchg
insl
mov
popa
loope
enter
xor
or
xchg
cld
aam
ljmp
pop
xchg
push
mov
xchg
sub
ss
jl
jp
out
orl
xchg
cld
test
inc
jmp
sub
jecxz
dec
in
arpl
ret
xor
lret
movsb
jae
fwait
bound
inc
xchg
test
imul
testb
test
nop
xor
aas
fbstp
std
push
out
mov
icebp
xor
out
insb
iret
out
mov
inc
dec
in
cmp
push
lds
ret
imulb
jae
mov
adc
adcb
push
movsb
call
lret
or
dec
sarb
shl
xchg
mov
and
add
arpl
jb
push
inc
add
icebp
out
jg
mov
das
xchg
mov
imul
pop
mov
sarl
adc
inc
mov
dec
test
pop
mov
insb
icebp
sub
lds
adc
push
lcall
dec
jecxz
aaa
mov
push
push
push
add
mov
lods
movsb
add
addl
adc
dec
cltd
push
test
and
int
ret
sub
ficomps
movsb
mov
mov
in
hlt
movsb
cmp
aad
inc
shrl
mov
mov
int3
in
jne
popl
mov
icebp
mov
imul
pop
add
dec
jo
push
sub
cmp
idivl
xlat
or
jnp
ds
dec
lret
lods
in
push
cmp
lcall
movsb
adc
stos
jno
hlt
add
in
mulb
cmp
mov
jbe
cli
cwtl
xchg
in
add
mov
rorb
int
out
jmp
fstpl
in
jg
sub
lcall
add
jmp
jbe
xchg
mov
hlt
hlt
mov
jmp
leave
sahf
fiadds
pushf
pop
adc
dec
jmp
mov
mov
mov
adc
mov
add
pop
sub
adc
push
mov
pop
add
test
xchg
lret
hlt
jb
inc
push
repnz
cmp
cs
sarl
push
cwtl
push
pop
jno
gs
fiadds
push
pop
loope
sub
pusha
int3
das
inc
mov
sbb
into
out
fstl
jmp
clc
sbb
in
int
loope
sub
push
mov
clc
int
outsl
push
xchg
add
xor
mov
sub
stos
stos
dec
jne
pop
xchg
cld
sub
negl
xchg
xor
ret
stos
cmpsb
cmp
sub
mov
int3
and
mov
not
aaa
ss
pusha
add
dec
mov
jle
inc
or
xchg
jecxz
and
xchg
xchg
xchg
jle
mov
psubusb
out
sbb
bound
ja
pop
push
call
jb
movsl
outsb
fiadds
in
mov
add
lods
mov
push
lret
sbb
fnstsw
adc
outsl
shl
std
scas
and
jae
popf
push
jge
cmc
mov
adc
enter
lahf
jmp
js
jecxz
btc
sahf
sarb
in
dec
aam
out
out
call
les
lahf
mov
pop
add
loope
orb
ss
jae
out
mov
pop
inc
sub
mov
jle
repnz
shll
out
pop
imul
sbb
sbb
fs
lds
loopne
dec
mov
pop
inc
cwtl
hlt
xlat
adc
movsl
push
out
mov
inc
cmp
dec
sub
int
dec
leave
repz
repnz
push
inc
xchg
jle
pop
push
mov
lahf
add
or
xchg
jmp
jno
lock
pop
jecxz
pop
adc
jmp
or
push
jecxz
xchg
adc
fldenv
push
xchg
int
mov
je
adc
repnz
andb
orb
sbb
aas
xchg
jbe
pop
out
inc
in
adc
pop
testb
cmp
sbb
xorl
lock
loopne
hlt
cmp
mov
and
aaa
es
or
sub
add
bound
jg
lcall
repnz
mov
pop
lret
rclb
fwait
in
inc
dec
scas
stos
mov
sahf
rclb
push
xchg
outsl
xlat
mov
in
cmp
adc
cmp
out
dec
xchg
or
and
imul
or
cmp
loopne
dec
add
add
in
aam
ret
push
pop
cld
or
insb
mov
dec
dec
jnp
mov
adc
dec
push
mov
inc
add
inc
adc
lods
sub
nop
aad
clc
sub
orb
xchg
inc
cmc
jnp
pop
push
fisubrl
ficoms
inc
imul
lret
mov
pop
or
inc
and
cmp
sub
popa
out
sbb
adc
pop
outsb
test
cmp
jb
data16
movsl
dec
fidivrl
sarb
imul
push
cmp
mov
push
pop
clc
aas
push
xlat
pop
outsb
out
scas
or
enter
lock
cs
jl
mov
mov
cmp
mov
adc
mov
cld
fidivl
inc
xorl
repz
test
add
and
fcomps
in
xchg
ds
jle
jmp
xchg
cmc
lret
xchg
push
cmp
into
scas
adc
into
aas
je
mov
mov
sbb
xchg
stos
or
aas
test
leave
fsubr
andl
push
push
add
aaa
out
mov
dec
imull
pop
repz
xchg
scas
out
jp
cmc
xchg
or
push
jp
mov
and
lahf
dec
dec
test
shll
and
insb
dec
dec
add
lods
imull
pmaxsw
cltd
outsb
or
icebp
sbb
and
inc
xchg
or
lods
sub
or
in
repz
cmp
cld
cmp
add
mov
or
dec
fistpl
stos
sub
insl
xor
xchg
cmpsl
push
mov
inc
cmc
repnz
daa
push
test
enter
add
sahf
push
push
loopne
fs
ljmp
jns
xchg
addr16
addr16
mov
xchg
insb
push
fs
insl
loope
adc
test
scas
and
subl
and
dec
mov
insl
mov
xchg
xor
gs
mov
out
or
dec
je
fsub
out
sub
push
mov
mov
movsl
inc
imul
sbb
fwait
mov
mov
push
xchg
fisttps
mov
mov
ja
adc
shl
cmpsl
mov
movsl
mov
cmpsl
cmp
jle
or
mov
outsb
les
dec
inc
push
pop
xor
or
loopne
daa
frstor
jnp
cwtl
mov
mov
aas
jg
dec
cli
ljmp
dec
xor
lods
push
sub
inc
outsl
dec
add
unpcklps
rol
je
shrb
push
dec
inc
shlb
icebp
adc
in
lds
jnp
out
cmp
test
ja
iret
sub
call
push
test
lods
scas
cld
lea
sbb
pop
pop
fwait
aad
ds
xchg
xchg
xchg
int
lds
arpl
jg
dec
aas
std
add
jae,pn
pusha
adc
xor
lods
xchg
add
pop
testl
push
add
imul
les
mov
fildll
add
sti
fdivrl
mov
adc
add
aaa
repnz
or
cmpl
les
cmp
pushf
in
jl
ret
add
pop
addr16
mov
sbb
add
pop
popf
push
xchg
lods
clc
cs
push
xor
lds
std
ljmp
cmp
jmp
aas
ret
push
nop
xchg
or
divl
lret
fidivrl
xor
lcall
mov
xor
dec
add
stos
inc
lods
jns
ret
ss
jecxz
xchg
mov
lods
pop
dec
sub
subb
lods
lcall
jbe
push
mov
pop
shlb
rorb
xchg
in
xchg
push
in
jecxz
rorb
jo
push
test
add
roll
shll
dec
sub
insb
push
inc
icebp
or
pusha
sbb
and
std
sbb
js
xor
or
sub
ret
mov
aad
mov
pop
call
rol
mov
lds
adc
xor
pop
mov
and
sub
cmc
pushf
push
mov
xlat
ds
fidivl
hlt
lahf
lods
ljmp
fnstsw
or
pop
rorl
inc
shll
lcall
je
mov
dec
inc
outsl
int
fadds
pop
enter
xorl
inc
add
test
push
xor
shlb
insl
mov
outsb
fwait
lods
stos
iret
sbb
sbb
sub
adc
sbb
rolb
xchg
or
out
out
dec
push
bound
inc
cld
loop
inc
jbe
mov
sub
jbe
or
repnz
outsl
lds
repnz
cld
pop
jbe
add
sub
cmp
sbb
jg
decl
sbb
int
or
enter
push
mov
cmp
push
jp
mov
push
pusha
jb
mov
xor
dec
shl
push
cmp
test
jg
fildll
xorb
jl
repz
jmp
stc
pop
lcall
jg
rcrb
mov
jecxz
insb
mov
imul
push
mov
subl
dec
inc
aad
or
push
dec
jl
mov
or
enter
mov
gs
jne
jecxz
and
ja
cli
outsb
lahf
or
push
into
and
rolb
sub
jnp
xchg
mov
inc
pop
aad
test
pop
jo
popa
out
lock
loop
push
jge
mov
mov
and
movsl
in
and
pop
sbb
nop
sub
out
adc
mov
push
out
dec
push
push
je
push
lods
xor
test
call
mov
mov
bound
jno
mov
fadd
in
cltd
mov
jns
adc
mov
shlb
loopne
ficomps
mov
or
insl
jle
lret
pop
cli
loopne
fld
inc
cs
fsubl
inc
xor
push
negl
dec
jbe
push
ret
dec
in
xlat
stos
adc
pop
pop
aam
mov
adc
xor
jbe
adc
inc
push
bnd
incl
xlat
xchg
mov
mov
loope
rcrl
sub
add
cs
ljmp
sbbb
or
push
popa
shll
xlat
push
shr
xor
sbb
jns
pop
loope
push
add
loop
or
test
outsb
dec
movlhps
sub
in
pop
arpl
in
cmc
mov
sub
ss
jmp
xchg
int3
and
int3
jns
xor
testl
lods
loopne
in
fs
lcall
iret
js
and
in
mov
call
mov
jae,pt
insb
lods
push
inc
mov
incb
cmp
pop
scas
mov
out
adc
clc
xor
or
sarl
mov
aad
aas
mov
xchg
pcmpeqd
out
cmp
add
lods
int
out
bound
mov
mov
insb
rcll
data16
or
and
jg
sbb
or
scas
ficoml
das
sub
push
sti
lock
cmp
out
mov
daa
into
or
jmp
jnp
and
js
push
aad
and
mov
arpl
xor
pop
cltd
pop
add
jmp
leave
scas
fldpi
inc
mov
mov
sub
mov
push
rcll
jp
and
fldenv
mov
das
sti
mov
shlb
and
xor
mov
fmulp
mov
and
scas
cmp
das
inc
and
lods
sub
ficompl
jb
cmp
dec
lcall
inc
jno
in
mov
lret
cwtl
shlb
mov
in
jne
sub
sub
fdivrs
or
inc
fmul
xor
jns
aaa
test
cmp
xchg
popf
aad
mov
stos
push
test
fsubrs
pop
pop
or
popa
pop
jbe
mov
and
rcrb
jnp
mov
mov
mov
rolb
out
jns
xchg
xchg
cli
fmull
in
pop
sub
lahf
insl
jle
std
dec
jo
adc
mov
insb
dec
mov
xchg
std
and
inc
clc
mov
in
pop
aas
add
mov
adc
test
arpl
adc
adc
repnz
fcompp
pop
push
push
cmp
sti
mov
xchg
xor
add
xchg
mov
inc
pop
lea
xor
test
gs
add
outsb
stos
ret
sub
cmp
inc
cld
in
pop
push
xor
dec
and
push
loope
pop
lret
cmpsl
shlb
fiaddl
out
or
jbe
mov
mov
jb
bound
mov
mov
stos
mov
mov
cld
daa
jg
ja
adc
mov
sub
xchg
add
xor
cmp
push
jbe
and
sub
pop
mov
sub
icebp
sbb
imul
xchg
les
push
inc
into
pusha
jle
sub
les
into
movsb
bnd
dec
lock
int3
cmp
mov
push
dec
push
iret
inc
sarb
jmp
lds
jmp
mov
jle
dec
or
lock
sbb
mov
inc
ja
stos
dec
test
fnstenv
fwait
punpckhwd
orb
xchg
pop
out
or
adc
add
cwtl
xchg
pop
repz
int
adc
out
mov
sti
lret
push
cmp
fwait
or
ficoms
ss
out
add
ss
mov
jmp
arpl
cld
jnp
mov
mov
pop
ret
mov
repz
xchg
daa
aaa
and
repnz
insb
jp
clc
mov
xlat
jg
negb
addr16
xorb
dec
ljmp
pop
loope
sbbb
pop
test
gs
mov
mov
and
adc
sarb
nop
xchg
xchg
mov
lock
jl
std
roll
xor
inc
jecxz
dec
mov
add
in
movsb
sbb
lods
mov
cmp
add
mov
out
inc
add
pop
jle
mov
cmp
aas
inc
push
or
sbb
mov
nop
adc
leave
ds
call
jge
push
pop
jl
jl
sbb
adc
jb
lcall
das
and
push
and
and
mov
dec
ret
cmpsb
pop
sbb
enter
insb
push
out
mov
call
cld
daa
rcl
jg
push
arpl
cmc
add
test
mov
push
data16
jmp
mov
aas
sub
xchg
movsl
inc
pop
pop
mov
mov
sahf
pop
clc
inc
mov
cli
aam
ja
push
xlat
xchg
out
test
aad
xor
cmp
repz
repz
ss
cmp
in
mov
pusha
movsl
or
push
in
loop
xchg
lds
mov
pop
and
mov
mov
sub
insl
test
arpl
scas
stos
ljmp
mov
jmp
sti
call
inc
stos
xor
pop
mov
call
rol
and
ror
mov
xor
mov
out
mov
out
pop
cmp
in
dec
insb
stos
jno
inc
xchg
jg
daa
fwait
or
add
movsb
xor
int
xlat
sbb
stos
mov
test
lcall
jle
xchg
push
aad
push
inc
pop
into
inc
mov
dec
mov
sub
sbb
cmpl
and
shr
loopne
enter
rcrl
push
xor
and
movsb
mov
ret
and
and
mov
repz
clc
mov
mov
xchg
pcmpgtw
jl
jl
pop
movl
repnz
ficoml
push
cltd
test
in
dec
or
push
shll
mov
push
je
mov
xchg
in
test
aas
and
es
pushf
inc
dec
add
scas
add
push
adcb
add
insb
inc
dec
mov
cmp
jg
sub
sbb
imul
xchg
cmc
insl
sub
clc
fdivrl
imul
mov
mov
xor
fadds
cmpsl
pop
add
xor
hlt
add
or
or
stos
dec
sbb
add
imul
ds
push
jnp
andb
outsb
scas
xchg
jmp
iret
nop
xor
and
arpl
ds
jle
scas
cmp
movsb
adc
jmp
sub
das
push
pop
jecxz
pop
jae
fsubrp
cmp
mul
mov
lods
add
sub
xchg
sub
repz
shll
jae
xlat
addr16
fistpl
sbb
lods
iret
sub
loope
testl
xchg
add
dec
jg
dec
out
adc
jae
pushf
mov
push
xchg
jle
xchg
cmpsb
pop
add
cmc
daa
popf
mov
leave
sub
idivl
pop
add
lcall
mov
out
out
add
mov
xor
lock
add
dec
or
mov
lret
cmc
or
call
jg
leave
test
int
bound
mov
jmp
push
cld
aad
insb
add
in
sbb
sbb
pop
push
rorl
xchg
push
jae
repz
nop
scas
repnz
xor
add
push
dec
or
repz
xor
dec
inc
xor
mov
in
cli
sbb
insl
jmp
jle
andl
andb
sub
jge
sub
pusha
imul
mulb
fisttps
dec
arpl
cmp
loop
mov
inc
and
test
shlb
sub
and
popa
mov
adc
daa
push
mov
mov
pop
dec
addr16
jle
dec
mov
mov
and
sbb
mov
aas
mov
xchg
and
iret
lds
popl
cmpsb
adc
es
cwtl
lods
push
in
sub
in
lahf
lods
and
stos
clc
mov
call
jno
sub
mov
out
mov
imul
jnp
imul
and
mov
sub
xchg
popa
je
and
fwait
inc
iret
cwtl
and
mov
lock
mov
xor
inc
lret
fldenv
rcll
jg
aam
fmull
inc
mov
and
sbb
sbb
aam
aaa
push
sti
mov
xchg
outsl
push
into
inc
inc
test
mov
pop
imul
mov
mov
pop
push
pop
mov
or
fmull
lret
arpl
out
stos
mov
and
jmp
mov
mov
push
xchg
and
mov
push
dec
test
push
add
and
in
mov
xchg
mov
aam
ss
or
mov
int3
outsl
pop
mov
and
jg
dec
or
push
push
add
add
push
pop
add
arpl
jg
iret
pop
test
jb
push
nop
xor
xchg
xchg
or
xchg
test
inc
loopne
ret
movsl
dec
push
xchg
enter
aam
sbb
mov
pop
enter
adc
pop
std
lahf
push
xlat
mov
cmpsb
out
xchg
push
bound
pop
out
dec
jg
fbld
test
out
lret
xchg
xchg
mov
and
or
mov
push
outsb
xchg
and
js,pn
daa
out
adc
daa
fdivr
sub
aaa
cwtl
loopnew
sbbl
popf
mov
pushf
call
daa
sbb
push
xchg
jl
add
cs
aam
ret
or
or
sub
test
mov
cmc
mov
fimull
mov
mov
aad
test
sbb
loop
jl
adc
insb
ret
mov
outsb
mov
dec
pop
xor
adc
add
jp
cmp
sub
mov
push
mov
pusha
lret
mov
sub
pop
jmp
and
jmp
push
jns
pushf
adc
insl
sbb
cltd
xor
sbb
mov
loop
in
mov
pop
xchg
mov
cmc
mov
pop
lret
mov
jae
and
or
lods
mov
inc
cmp
and
sahf
fwait
loope
push
arpl
movsb
shrb
sub
sbb
aas
xor
add
loop
fstl
lahf
jne
std
mov
subl
nop
xlat
ret
push
xchg
cmpsl
adc
mov
ljmp
rclb
mov
pop
xor
enter
push
cmp
mov
dec
cmp
dec
into
pushl
int
aam
orb
fidivl
xor
cwtl
jp
out
aas
push
sbb
or
scas
jmp
xor
pop
ds
sbb
jmp
xchg
loop
sbb
mov
adc
popa
arpl
mov
stos
fwait
cld
mov
mov
sbb
add
jmp
adc
cli
arpl
out
xor
dec
sti
cltd
je
mov
cmpsb
mov
xor
xor
xchg
adcl
dec
aas
in
pop
add
push
shrl
mov
sar
xchg
or
test
cmpsb
xchg
icebp
xor
add
jecxz
xlat
outsl
fstpl
and
enter
or
jb
mov
mov
cmpsl
pusha
sub
xchg
shll
jbe
mov
jp
adc
je
mov
movl
out
aas
fcoml
push
test
or
pop
js
xchg
addr16
dec
lods
cmp
sub
das
popa
bound
clc
add
sbb
mov
ret
loop
scas
fnstsw
xchg
and
lret
lcall
push
cld
jns
sub
push
cmp
bound
inc
rorb
sbb
add
mov
out
pop
add
xor
dec
lods
pop
popa
ret
mov
int3
cmp
jae
aas
cwtl
push
pop
nop
aaa
popa
lock
dec
ja
outsb
lea
mov
add
mov
loope
mov
pop
xchg
push
ljmp
push
mov
and
das
sub
ljmp
rclb
fistpll
gs
fwait
daa
pop
push
add
in
fcmovnbe
bswap
gs
movsl
out
hlt
cld
mov
add
mov
mov
fnstenv
and
out
out
sub
adc
fdivrl
cmp
and
inc
out
loopne
mov
mov
xlat
xor
push
mov
pop
or
fmul
test
inc
movsb
add
sub
sub
or
adc
jb
jo
popf
fucomi
or
pushf
cmpsb
pop
shlb
std
sbb
mov
cmp
mov
sub
xchg
pusha
xchg
xor
sbb
add
pushf
xchg
jp
shll
lock
fcoml
orl
aas
xchg
push
cmp
loopne
adc
jae
subb
and
pop
lods
leave
cmp
lods
mov
mov
call
cmp
test
sbb
rclb
nop
in
cmp
outsl
dec
mov
lock
mov
push
sahf
mov
ret
clc
outsb
loope
push
pop
xor
js
jmp
fnsave
daa
inc
dec
push
sub
jg
int3
incl
inc
jecxz
mov
rcrb
nop
pop
decl
pushf
mov
ja
into
cmp
addr16
ret
ja
test
mov
push
push
pop
jb
repz
mov
sbb
push
hlt
cmp
xchg
sub
in
sub
movsb
inc
sub
nop
mov
aas
mov
sbb
mov
mov
popf
pusha
sub
mov
pusha
cmp
fwait
hlt
mov
lods
xchg
mov
dec
cli
xor
cltd
jne
std
test
or
lea
test
enter
cmp
cmp
out
ljmp
push
movsl
mov
in
in
faddl
sbb
jbe
imul
mov
inc
lods
loope
pop
cltd
xchg
out
jo
sti
mov
add
jge
lds
stos
je
ret
je
cmp
out
sbb
inc
mov
jb
xor
lea
jmp
inc
cmp
popa
lcall
fcoms
and
addb
mov
inc
rorl
std
inc
sbb
call
gs
lahf
pop
in
mov
and
xor
fbld
add
add
push
pop
adc
cmpsl
lcall
mov
lea
in
shll
inc
mov
out
inc
dec
call
inc
jbe
dec
or
push
inc
mov
sub
dec
and
rcrb
sbb
mov
jle
dec
int3
cld
jg
add
imul
ret
mov
pop
mov
rclb
push
push
mov
jbe
sbb
mov
stos
mov
js
or
push
jle
inc
rorb
xor
dec
dec
cmp
xor
paddw
xor
adc
shll
cmp
aas
pop
mull
cmpsb
push
and
test
movsl
push
adc
jp
sub
push
insl
ljmp
and
jge
mov
inc
lods
cmp
adc
add
mov
dec
das
ret
cmc
xchg
aaa
daa
mov
adc
pop
sub
js
fcomip
aad
or
cmp
cmpsl
mov
inc
std
in
pop
sbb
aam
aam
out
neg
orl
cltd
outsl
sub
daa
inc
bound
mov
fiadds
add
lods
xlat
pushf
jecxz
xchg
xchg
xchg
incb
fucomi
pop
call
add
rcl
sub
pop
cmp
mov
lods
push
aaa
loope
int
lods
pop
pushfw
sbb
or
int
sub
dec
xor
imul
cld
mov
fadds
sbb
dec
xchg
inc
out
inc
inc
aam
mov
lods
ja
mov
cmp
outsl
ljmp
xchg
cmp
mov
repz
por
xchg
mov
adcb
push
fldl
rcll
xchg
mov
gs
push
sahf
xchg
in
fdivr
xor
mov
or
push
iret
push
adc
int3
mov
pop
stos
xchg
insb
fs
cmc
mov
push
sub
push
scas
sbb
mov
and
mov
push
mov
cltd
insb
mov
inc
cltd
movsb
out
daa
xor
fdivl
popf
stos
loop
sbb
sbb
in
sbb
xchg
pop
in
jge
sub
mov
jb
mov
notb
add
jno
mov
sub
aad
fdivs
gs
and
outsb
je
sahf
imul
sbb
sub
faddp
jle
ds
pop
push
std
orl
test
test
push
stc
leave
adc
and
inc
pop
cmpsl
inc
ss
inc
arpl
shlb
xchg
aas
in
cmp
clc
fiaddl
out
aaa
fwait
jmp
inc
jmp
insb
lds
pop
and
mov
cld
and
xchg
aas
stc
iret
mov
mov
push
dec
lock
outsl
cli
dec
imul
repnz
sar
dec
and
cmp
fstl
or
insl
jg
leave
lcall
aaa
mov
cmpsl
mov
in
or
mov
icebp
iret
daa
sub
cmp
cs
or
xor
cmc
mov
add
push
jle
or
stos
stc
jo
les
popa
arpl
mov
pop
jno
fdivrs
inc
add
pushf
enter
lock
sti
push
sti
cmp
sahf
adc
les
jl
aad
in
bound
jl
sti
fadd
icebp
jo
and
ja
mov
imul
popf
push
xor
jbe
aas
mov
cs
pop
adc
or
sbb
adc
adc
fwait
pop
dec
mov
sbbl
pusha
and
fidivrs
sub
shrl
in
lea
cmp
outsb
lock
pop
lds
cmp
jno
enter
jg
dec
lret
fnstenv
adc
pop
xchg
loope
movlps
push
mov
jo
and
xlat
push
cwtl
jp
ret
sar
xchg
xchg
testl
and
out
std
arpl
adc
xchg
mov
dec
movhps
jb
push
dec
aaa
xchg
pop
test
hlt
cmp
and
push
fmuls
pop
test
xor
dec
mov
cmp
leave
push
xor
mov
and
lods
xchg
rcl
inc
loopne
cmp
adc
fcompl
mov
in
push
xor
jnp
neg
fldcw
push
cli
test
jae
jle
jl
sbb
mov
dec
std
data16
xchg
mov
inc
add
cmp
sbb
stc
out
xchg
sub
push
fs
fs
jecxz
stos
fldenv
fimull
pxor
adc
es
orb
pop
or
pusha
pusha
in
mov
add
cli
cmp
ret
leave
or
aas
xor
fs
fsubrl
adc
les
push
add
lret
jnp
push
xor
shr
fisttpl
sbb
fmuls
mov
les
push
xor
inc
sti
jmp
push
push
jle
sub
xchg
cli
adc
mov
jge
icebp
and
cmpsl
sahf
test
push
lahf
gs
stos
out
int
popa
mov
cmp
sbb
loopne
jbe
add
movsb
and
movsb
xchg
push
dec
xor
mov
sbb
push
fisttps
mov
out
shrl
mov
sub
jl
jns
mov
inc
repnz
ret
adc
ljmp
leave
pop
mov
xchg
sub
mov
mov
cmp
mov
repnz
dec
and
adc
push
pop
push
mov
mov
mov
incb
adc
sub
test
pop
add
or
test
arpl
push
not
rclb
aad
mov
lret
pop
dec
rorl
mov
dec
pop
shlb
xchg
pop
jecxz
mov
jg
push
dec
scas
popf
mov
out
xchg
imul
sbb
inc
in
cmp
bound
int3
out
or
shll
test
dec
inc
int3
pop
adc
out
mov
jnp
int3
mov
mov
push
add
fcmovnu
mov
fwait
subl
xchg
add
rorb
out
mov
jae
sbb
call
jb,pn
ret
mov
js
dec
test
jne
rcr
xor
pop
out
test
nop
icebp
ret
sub
ljmp
out
movsb
daa
fistl
pop
push
or
dec
jnp
adc
lock
mov
mov
and
dec
add
sbb
imul
pop
lret
sahf
repz
out
dec
dec
rcr
fistpl
mov
cs
push
out
push
xchg
push
sti
ljmp
cmc
push
sarb
push
aad
mov
lods
clc
inc
pop
mov
mov
push
jae
lret
xchg
movsb
jns
add
aad
cmp
jnp
xor
outsb
cwtl
imul
andb
sub
lods
dec
ret
pop
jns
push
not
xchg
adc
punpckhwd
hlt
mov
dec
push
loope
add
mov
mov
sub
lret
adc
jge
imul
cltd
mov
pop
in
push
pop
adc
int
ret
cmp
daa
pop
mov
pop
je
pop
dec
aas
test
outsb
ljmp
sahf
outsl
lods
aam
mov
xchg
stos
xor
sbb
and
outsb
cmp
add
push
add
jnp
sahf
movsb
sub
push
ss
repz
push
sbb
sbb
nop
and
arpl
jmp
jle
push
adc
insl
testb
sbb
loop
jb
push
and
pop
into
mov
adc
and
dec
test
icebp
xchg
nop
ja
cld
out
pop
leave
in
test
xchg
mov
mov
xor
cmp
in
je
cs
sahf
jl
sbb
xchg
sbb
mov
and
mov
cmp
mov
and
dec
clc
mov
sub
push
lahf
or
int
jmp
lods
cmpsl
jg
imul
test
int
mov
out
test
dec
cmc
call
cwtl
mov
xchg
inc
rcrb
outsl
push
lcall
mov
nop
mov
cmpsl
adc
push
mov
adc
fwait
mov
ret
jl
pop
ss
pop
daa
cmp
es
repz
mov
push
pop
in
or
push
cmpsl
fists
cli
and
push
stos
ds
divb
aad
pop
cld
mov
inc
mov
jb
push
les
push
xor
aaa
nop
mov
cmc
add
pop
cmp
mov
out
imul
sub
or
xchg
pop
insb
fistpl
xchg
in
adc
push
inc
mov
inc
outsb
js
inc
mov
sarl
or
mov
push
jno
cmpl
sbb
in
movl
xlat
fwait
pusha
jp
sbb
popa
inc
mov
inc
shll
jns
fidivs
or
decl
les
push
popa
xchg
inc
push
mov
and
outsb
popa
pop
lahf
repnz
rcrb
lret
mov
add
jmp
xchg
es
ljmp
xchg
jb
xor
mov
push
mov
inc
outsb
pop
xlat
cmpsl
sbb
adc
pushf
aas
repnz
fstpl
fwait
ja
hlt
jle
insb
and
ljmp
and
rcrb
jmp
cltd
mov
jecxz
sub
cmp
adc
adc
push
adc
or
divl
mov
loop
ljmp
cmpsb
arpl
or
mov
adc
out
je
inc
pop
push
mov
in
outsl
insb
push
and
shlb
loope
dec
lock
outsb
sub
das
mov
and
notb
mov
inc
sbbb
xchg
lea
cs
and
pop
scas
mov
jp
cmpl
and
inc
and
cmp
adc
xchg
addr16
lahf
aam
mov
das
mov
pop
cmp
rorl
in
pop
into
std
cmpsb
or
fmuls
repnz
movsbl
in
or
add
out
mov
test
cwtl
ret
mov
pop
loope
jmp
mov
loopne
sar
pusha
cmc
loop
add
pop
rclb
pusha
pop
mov
fldl
mov
inc
cmpsb
push
mov
xchg
and
pop
ljmp
xlat
xorl
out
sub
mov
lock
add
nop
inc
xor
sbb
dec
adc
jns
fbld
mov
dec
divl
in
das
je
iret
add
sub
sbb
push
dec
inc
lret
inc
or
mov
enter
nop
or
xlat
lods
xchg
repnz
movsb
repz
popa
orl
jge
shll
das
mov
aam
adc
dec
out
into
pushf
movsl
rol
orb
movsb
adc
sub
mov
sub
pop
jno
sub
lods
cmpl
int
pop
xchg
test
pop
je
inc
popf
rcll
aad
sub
cld
lret
test
bswap
lods
add
pop
dec
cmp
arpl
pushf
cmp
add
outsb
xchg
imul
shl
call
test
outsb
cli
int
xchg
sbb
dec
fsts
pusha
push
pop
pop
sub
iret
inc
mov
mov
cmc
call
push
xlat
jae
insl
pop
in
pop
cmp
loope
cmp
gs
stc
push
dec
lret
leave
loop
pop
das
cwtl
pop
scas
xor
test
ja
jp
mov
xchg
ja
jne
push
daa
and
push
jecxz
and
addb
or
and
or
shrb
xlat
and
pop
push
mov
into
test
lea
pop
push
imul
bound
sbb
dec
fwait
dec
xchg
pusha
lcall
test
lods
and
cmp
push
xchg
cli
nop
dec
mov
hlt
sbb
mov
jg,pn
daa
mov
pop
xchg
outsb
imul
out
dec
jl
mov
sub
jno
jg
aad
sbb
fstps
lods
and
fucomip
int
mov
idivl
mov
or
cmp
cmp
xlat
sub
daa
pop
inc
leave
sbb
pop
in
dec
add
lret
in
cmp
and
xor
lods
dec
dec
iret
and
pop
xchg
and
imul
es
aad
dec
inc
mov
dec
adc
sbb
enter
lret
loope
scas
sbb
mov
jmp
and
mov
cmc
aad
pop
adc
xchg
push
mov
sub
push
lcall
std
jo
adcl
or
out
cmp
mov
xor
cmp
ss
in
loopne
out
popf
mov
push
fbstp
scas
mov
adcl
pop
inc
jb
sahf
loope
cmpb
cmp
sub
push
xorb
into
xor
pop
fnsave
outsl
hlt
cmp
dec
xchg
cli
popa
popf
in
cld
sbb
test
sub
rorb
mulb
scas
add
lds
mov
sub
jp
mov
int3
fisubrs
push
pop
mov
into
js
mov
out
cmpsb
dec
mov
pop
popa
inc
popf
sub
daa
adc
or
or
cltd
sti
push
and
fld
or
dec
or
inc
jg
stos
mov
inc
inc
add
mov
pop
push
push
fisubs
bound
daa
lock
std
jg
dec
sbb
aaa
in
jg
pop
test
out
cmpsb
cmp
xchg
push
cmp
daa
jbe
push
aaa
rcrb
add
movsb
repnz
out
sbb
daa
xchg
rcl
jmp
xor
mov
mov
add
js
pop
fcmovnb
std
sbb
xor
loop
push
repnz
fwait
ljmp
inc
adcb
lcall
in
xchg
pop
stc
pop
dec
jo
sub
xchg
fnstcw
ficoml
pop
dec
pop
cli
ss
addr16
dec
sbb
mov
test
sbb
xchg
pop
enter
mov
add
out
sbb
adc
fcomps
ds
scas
fiadds
sub
sub
lahf
mov
xchg
sbb
es
dec
enter
cmp
rcl
mov
sbb
out
stos
jmp
sub
rcrb
neg
test
lods
add
mov
mov
inc
pop
mov
push
inc
jmp
cmpsb
out
sbb
xchg
jl
xlat
adc
mov
xlat
push
pop
sub
pop
jp
cmp
shrl
rcl
xchg
push
into
add
rcll
pop
repz
or
int
imul
inc
in
enter
push
add
mov
int3
jae
mov
mov
pop
repz
jae
pop
imul
pop
dec
jle
jg
mov
cmpsb
adc
imul
call
add
mov
dec
mov
rolb
fildll
cmc
out
movsl
or
jns
push
xor
aad
insl
mov
mov
adc
add
cmpsl
mov
iret
pop
push
in
dec
mov
xor
and
jg
jp
dec
sahf
rolb
sbb
ret
sbb
loopne
popf
jno
ret
mov
push
addr16
fwait
lret
fldt
xor
and
addr16
cmc
enter
jecxz
imul
mov
mov
xor
pop
mov
cld
ja
stos
push
test
loop
mov
xchg
lret
pop
incb
mov
es
lods
loop
loop
jmpw
sarl
and
data16
fldt
ds
test
lahf
xchg
sub
or
inc
and
fchs
push
sub
lock
and
push
cmpb
cltd
sti
pop
mov
and
jge
test
xor
sbb
mov
imul
jmp
inc
cld
sub
cmp
popf
xchg
ficoml
push
fldenv
inc
std
cmp
mov
push
xchg
out
call
add
jmp
mov
neg
and
dec
movsb
mov
in
mov
loop
sbb
fidivl
push
imul
scas
orl
cltd
call
enter
adc
push
movsl
aas
call
pop
cmp
push
addr16
inc
push
sbb
mov
add
cmc
shlb
xchg
pusha
cmp
ror
adc
out
push
insl
hlt
dec
mov
cmpsl
aaa
aas
or
adc
iretw
outsb
mov
into
mov
pushl
sub
and
xchg
mov
adc
cmpsl
or
popa
push
pop
or
fs
nop
xor
jmp
push
out
nop
xchg
stos
rolb
mov
lret
or
je
push
pop
mov
divb
jl,pt
cwtl
movsl
lret
cmpsl
jns
test
cltd
mov
cmp
xchg
add
ret
and
stos
and
cltd
jae
mov
pusha
mov
data16
dec
fdivrl
jb
cwtl
xchg
les
xchg
sub
leave
adc
popf
lock
mov
push
mov
mov
js
loop
inc
jae
pop
sbb
push
mov
mov
push
in
aaa
xchg
dec
clc
inc
adc
fisttpll
mov
into
hlt
loope
fstpt
rcll
dec
pop
in
sbb
das
arpl
out
stc
arpl
mov
mov
leave
xchg
pop
test
xchg
jb
adcl
mov
bound
fdiv
pushf
and
pop
fs
push
add
mov
ror
ja
in
inc
in
icebp
jge
mov
mov
sub
jnp
rcl
sub
pop
jecxz
cmc
and
mov
lret
cmp
inc
sti
repz
mov
inc
dec
dec
dec
aas
arpl
jmp
in
xor
imul
fwait
pop
pxor
lcall
stos
ja
add
mov
adc
mov
mov
mov
inc
cmp
aam
mov
shlb
push
push
into
in
sarb
loop
xor
jg
int3
movsl
dec
add
inc
dec
pop
aad
mov
int3
in
in
sbb
pop
lds
xchg
add
mov
jl
mov
scas
cmc
mov
jp
jno
add
jp
out
fildll
jle
jbe
arpl
sbb
lret
push
push
push
mov
xor
es
mull
rorl
out
in
fs
xchg
xor
push
dec
popf
daa
jno
loope
mov
mov
add
pop
and
fldl
mov
jmp
and
in
mov
lods
xor
lahf
rep
push
push
adc
movsl
xor
sub
insb
pop
sqrtps
dec
adc
add
mov
sti
inc
inc
fcmovbe
hlt
dec
out
mov
or
sub
mov
mov
xor
cmp
or
xor
push
lret
cmp
jbe
in
cmp
add
fcompl
push
cmp
stc
clc
jge
jle
xor
add
or
adc
adc
cld
mov
xchg
repnz
add
test
pop
or
rcl
dec
sbb
inc
push
inc
mov
xor
inc
loop
les
push
xor
movsl
insb
sbb
push
mov
push
xchg
cmp
xchg
pop
or
cmp
xchg
pop
cmp
inc
stos
xchg
js
lods
push
incb
sub
outsl
hlt
idivl
das
pop
mov
fidivrs
cmp
dec
cmp
les
inc
jg
loope
mov
mov
addr16
iret
test
lret
or
repnz
cmp
xchg
movl
lods
cli
mov
mov
clc
mov
call
fcompl
fistpll
xchg
or
sbb
cld
loope
lods
loopne
push
sub
out
inc
repz
pushf
inc
mov
pop
in
outsb
out
adc
imul
hlt
pop
push
jbe
scas
std
xlat
cmovbe
insb
add
arpl
aad
pop
xlat
sbbl
xchg
jp
sbb
ret
gs
das
push
or
bound
hlt
and
clc
fsubrl
test
repnz
sub
push
mov
mov
rcll
mov
and
mov
inc
pop
xchg
push
mov
push
not
adc
mov
xorl
test
loope
pop
mov
push
cltd
sub
adc
adc
push
jp
leave
into
loopne
sbb
in
jno
dec
fstpt
outsl
xchg
imul
ss
cmp
sbb
ret
mov
xchg
fstps
mov
in
push
arpl
sub
push
stos
mov
sub
pop
sbb
pop
and
addr16
icebp
and
fisubs
in
xchg
test
cmpsb
dec
mov
cld
jne
out
sub
mov
inc
into
push
pop
add
jb
mov
pushf
dec
jg
push
and
or
xchg
xchg
out
pop
push
je
daa
lea
aas
dec
and
mov
cmp
cmpsl
lods
addr16
or
pusha
in
sub
mov
rcrb
ret
sbb
inc
les
int3
adcl
outsb
cmc
sahf
loope
mov
push
add
sahf
mov
push
imul
mov
shrl
hlt
push
push
lds
xchg
or
cmpsb
jae
mov
sub
loopne
jge
jb
rorb
jno
insl
in
add
and
aaa
xchg
adc
mov
test
aaa
mov
aam
sbb
loop
jecxz
loop
dec
lock
ret
lahf
in
sahf
and
dec
push
fwait
jns
test
and
int3
insb
ja
cmc
call
loope
clc
and
test
mov
push
mov
test
stc
fsubrl
adc
fiadds
or
dec
and
in
and
cmp
cmpsb
out
in
out
lods
jge
adc
or
xchg
sbb
popf
mov
repz
cmp
xchg
push
pusha
adc
aad
cmp
std
inc
fstps
dec
cld
imulb
hlt
mov
xor
insl
adc
sub
cmpsb
aam
xchg
pusha
dec
jl
push
lds
inc
xchg
filds
and
icebp
cmp
cmp
imul
pop
andl
xchg
push
les
das
mov
lods
xor
leave
xchg
adc
mov
loope
out
outsl
and
stc
lret
jnp
shrb
outsb
pop
out
mov
mov
jnp
cmp
ficoms
popa
mov
enter
add
hlt
add
push
sub
mov
subb
arpl
test
jno
movsb
mov
jb
lea
lret
adc
shrl
push
pop
insl
repnz
adc
scas
xchg
sub
push
or
loop
mov
fsubr
cmp
std
jg
inc
lcallw
push
pushl
aaa
jmp
es
adc
in
cli
lods
mov
jecxz
test
fucomp
orl
jo
xchg
sti
xor
cmp
mov
int
lret
js
xchg
in
je
outsl
fidivrl
mov
scas
stos
jo
loope
lock
mov
cs
inc
fisttpll
std
rorb
lret
leave
pop
movsb
mov
sarl
jecxz
es
call
test
xchg
insb
addr16
add
sbb
int
out
add
outsl
fbld
cmpsl
lods
add
cli
repnz
mov
or
stos
test
bound
sbbb
and
lods
add
es
adc
mov
addr16
mov
xor
dec
add
mov
mov
cmpl
cmpsl
fsubrs
ror
pusha
adc
or
cmc
mov
or
mov
rcll
dec
lods
into
cld
ds
lret
mov
push
aad
cmp
aad
adc
mov
push
add
imul
stos
mov
shr
outsl
lods
jns
dec
arpl
out
loope
in
push
or
es
pushf
xchg
jecxz
jbe
sar
in
or
popf
jp
push
push
fsubl
or
test
stos
sbb
xor
es
jmp
psubusb
hlt
movsl
hlt
sti
aaa
sbb
xchg
sub
push
cmp
hlt
lcall
out
sub
ds
lret
gs
or
jg
sub
push
das
or
pop
inc
inc
mov
aad
mov
dec
adc
mov
pusha
lods
fsts
rcl
aad
inc
mov
push
inc
mov
ror
pop
ja
push
add
out
mov
sbb
cmc
cmp
mov
in
cmp
repz
xchg
loop
pusha
xchg
imul
inc
push
pop
add
ds
push
xor
jbe
push
or
in
hlt
mov
iret
je
cli
fiadds
fnstenv
fwait
jnp
ja
sbb
and
push
pand
dec
xchg
adc
dec
adc
clc
sbb
clc
mov
test
call
adcl
loopne
lea
imul
popf
mov
jne
outsl
shrb
inc
push
cmp
fs
push
add
dec
push
jmp
and
ficoms
sub
push
push
push
gs
xchg
or
or
pop
and
lock
inc
xor
jb
jo
in
dec
loop
mov
dec
loope
pop
mov
test
inc
jge
ficoml
int3
test
roll
out
jns
leave
sbb
mov
pop
and
pop
mov
div
jae
inc
aas
push
fmul
mov
fimull
add
push
pusha
gs
aaa
push
sbb
daa
push
sub
mov
adc
sti
jmp
xor
adc
push
lods
rolb
mov
mov
fstpt
and
dec
scas
aaa
mov
adc
sarl
xor
push
ss
jae
mov
xor
xchg
mov
sbb
jg
ficoml
or
push
sarb
jle
aad
sbb
jecxz
dec
int
shlb
pop
adc
mov
push
imul
test
mov
sbbl
pop
in
pop
add
dec
mov
test
loopne
xchg
cmpsb
fucomip
imul
scas
xchg
bound
cmp
sub
popa
arpl
shlb
push
mov
incb
push
lret
lock
gs
jb
add
idiv
andb
push
and
xchg
lods
sub
pop
mov
push
pop
pop
and
add
xor
push
fsubs
dec
mov
clc
inc
bnd
lods
cmp
das
or
push
shlb
inc
sbb
push
les
dec
jp
add
jmp
add
adc
fdiv
sbb
mov
jg
pop
lahf
pop
cmp
xcrypt-cfb
cmpsl
and
mov
arpl
ja
mov
mov
ds
pop
xchg
divb
test
inc
xor
sub
jne
jecxz
sbb
addb
mov
outsb
xlat
mov
adc
and
push
loope
icebp
mov
addr16
call
mov
scas
das
push
jg
test
add
aam
mov
xor
es
bound
or
inc
fsts
dec
cltd
or
xor
fwait
stc
dec
sbb
push
loop
xor
les
cmc
sbb
in
xchg
lcall
cmp
sbb
rcl
scas
loopne
aaa
int
xor
arpl
fldl
add
test
mov
cmp
decb
scas
inc
scas
push
mov
adc
addb
fmuls
pusha
adc
and
addr16
cld
subl
sub
aaa
shrb
push
in
pop
xchg
xchg
notl
jmp
cmp
loopne
push
je
aad
fldenv
ficoms
add
popf
dec
and
adc
dec
add
pop
lods
jecxz
and
test
mov
add
je
xchg
cli
pop
dec
cs
orl
gs
jb
das
rol
pop
loopne
push
mov
or
inc
push
jno
arpl
cmp
fucomp
sub
scas
mov
adc
movsl
jmp
stos
push
shl
sarl
mov
out
add
imul
push
aas
lret
or
mov
and
cmp
sub
pop
lds
fbstp
inc
jns
insb
test
loope
sub
out
addl
scas
fnsave
ret
mov
mov
dec
lahf
cmp
pop
aam
mov
jg
repnz
rorl
jmp
sub
in
rolb
mov
pop
ret
test
aad
es
fwait
mov
shrl
push
mov
daa
addr16
les
lods
fcompl
add
and
mov
stos
mov
mov
pop
dec
mov
loope
shrb
es
jle
je
add
mov
xor
dec
or
loopne
mov
aad
and
pop
pop
inc
pop
mov
or
mov
repz
call
mov
jp
mov
nop
inc
inc
sub
shll
xchg
out
adc
and
mov
push
icebp
xchg
pop
lret
xchg
shlb
cltd
movb
test
stc
sti
mov
icebp
mov
ss
lods
divl
xchg
mov
mov
xchg
pop
pop
aaa
xorb
dec
outsb
jne
mov
movsb
loope
les
into
dec
adc
cmp
mov
cld
pop
pop
cmp
adc
jg
clc
jmp
loopne
iret
outsb
and
or
adc
pop
pop
popa
dec
push
add
fnsave
inc
push
aam
adc
dec
dec
sub
fldcw
sahf
cmc
bound
jmp
xor
push
fadd
xor
in
and
fs
testl
sti
cmp
or
ljmp
mov
aam
mov
loop
jo
lret
xchg
outsb
mov
push
dec
lods
in
rorb
std
jno
rcrb
movsb
fldpi
or
jb
faddp
and
and
pop
movsl
aaa
call
pop
xor
push
cmp
push
aaa
push
imul
jg
mov
pop
fisttpll
imul
dec
aaa
andl
push
fbstp
cmp
xchg
or
mov
int3
ja
jnp
push
adc
das
stc
xor
data16
inc
dec
xor
enter
out
xchg
fiadds
push
xchg
cmp
cld
cs
adc
es
mov
js
iret
subb
gs
dec
mov
in
add
lahf
aad
push
pushf
push
xchg
insb
dec
lret
add
jae
adc
inc
dec
xchg
outsl
sahf
xchg
test
into
movsl
and
adc
mov
or
xor
nop
cwtl
mov
adc
mov
mov
cmp
push
addb
imul
test
jnp
fnstenv
xor
jp
mov
sbb
ret
dec
add
subb
sub
scas
inc
or
sbb
loop
ret
ds
xor
inc
inc
rcrl
adc
or
jno
dec
xor
and
and
inc
sbb
jmp
negb
repnz
aam
into
pop
xchg
jmp
mov
jae
shll
dec
pop
xor
pushf
pop
jl
std
and
iret
fdiv
pusha
inc
dec
gs
mov
jl
cmpsb
adc
pop
out
adc
lods
fsubs
shlb
inc
jmp
fimuls
or
sbbb
mov
out
inc
or
add
daa
mov
mov
lock
adc
nop
repnz
push
sbb
and
xchg
sub
and
fst
repz
add
mov
outsb
mov
fstps
cmp
int
sbb
mov
dec
or
jmp
cmc
icebp
cmpsl
inc
int3
or
les
jae
stos
mov
mov
mov
jecxz
xor
scas
cmp
cmp
sbb
out
hlt
and
addb
ret
adc
xor
adc
push
nop
jne
mov
imul
clc
xchg
nop
push
rolb
je
rcll
jbe
out
cmp
daa
mov
lock
repnz
jmp
lret
add
xchg
mov
flds
aad
inc
mov
fidivs
xchg
outsb
fnstenv
and
and
mov
lea
mov
jecxz
sub
jg
mov
xor
lds
mov
pop
hlt
mov
dec
enter
sbb
push
add
xchg
lds
xchg
sbb
fdivrl
rorb
andl
push
lahf
lcall
loope
jle
add
popa
mov
push
int
pop
sbb
mov
xchg
icebp
push
adc
mov
mov
mov
jno
pop
ficomps
mov
mov
jns
push
add
faddp
imul
cs
lods
addr16
mov
dec
mov
push
cmpsl
inc
fsubs
pop
xor
sub
scas
in
ret
cmp
adc
lods
lods
cmpsb
dec
cld
mov
xor
or
fcoms
push
loop
ret
clc
cmpsb
in
jmp
mov
std
mov
fiadds
fcomps
in
shlb
gs
mov
loop
sbb
icebp
xchg
jge
movsl
lods
fcmovu
inc
sub
mov
pop
push
add
je
int3
daa
xor
das
js
push
add
add
push
jmp
pop
fisttps
mov
xchg
xlat
push
push
les
xor
inc
add
adc
cmp
jge
cmc
mov
or
xor
gs
adc
mov
xorl
mov
xchg
pop
stc
and
arpl
dec
cmp
push
ljmp
adc
inc
loope
mov
or
movsb
mov
movsb
mov
sahf
jle
aas
or
push
push
enter
adc
scas
ds
lahf
repz
and
mov
sub
imul
dec
fldenv
sbb
xchg
outsb
cmp
jo
mulps
jne
adc
xor
adc
pop
dec
nopl
cmp
jno
or
mov
jmp
bound
mov
push
jg
pop
mov
jg
das
sub
mov
dec
mov
movb
jge
lea
inc
or
mov
dec
rcrb
xor
xor
subl
pop
std
lret
jl
add
pop
dec
inc
push
ficomps
xor
pop
xor
mov
add
sub
cli
outsl
ja
inc
xor
je
inc
jle
sub
push
mov
cli
flds
mov
push
and
cs
fs
popf
xchg
pop
pop
testl
test
mov
push
je
adc
sahf
sbbl
dec
int
dec
mov
push
xchg
pushf
jg
or
imul
mov
sub
rcrl
ljmp
or
mov
sub
subb
data16
push
mov
clc
popf
jmp
in
sub
loopne
push
mov
fildll
and
inc
sbb
add
jns
sub
sub
sbbl
psrlw
cli
pop
lods
pop
in
add
dec
mov
pusha
lods
gs
pop
outsl
int
or
lock
mov
rcr
pop
cmp
pop
sbb
pop
das
scas
jb
pusha
loop
jo
sbb
inc
iret
inc
mov
jae
adcl
daa
fs
inc
adc
lock
inc
fbstp
lret
and
pop
popa
or
sub
and
aaa
xchg
lods
test
pop
scas
mov
arpl
out
add
and
orl
mov
mov
rcrl
xchg
jb
cld
cwtl
or
dec
pop
xchg
mov
push
dec
lret
mov
lret
jmp
lret
out
fldlg2
mov
addl
int3
aas
insl
cmp
add
push
imul
mov
mov
mov
dec
mov
add
das
push
or
rorl
lods
jne
push
mov
push
adc
cwtl
sti
dec
jge
mov
cmp
push
mov
insb
jge
xchg
mov
xchg
sbb
pop
pop
mov
ficomps
xchg
jp
mov
mov
xor
push
mov
xchg
mov
outsb
inc
mov
fs
stc
mov
xlat
je
mov
std
lock
nop
push
jl
icebp
jg
cwtl
adc
cs
xchg
or
lods
fmuls
inc
into
cs
pop
mov
int
leave
sbb
and
ret
imul
cmp
clc
mov
sti
sub
mov
dec
and
lods
je
int3
mov
hlt
into
mov
les
bound
adc
adc
pop
push
icebp
lods
jg
cmp
clc
mov
jmp
mov
jle
jns
cmp
ljmp
ret
psubd
or
sarb
dec
adc
jge
jo
adc
jbe
cmc
sbb
divb
shlb
add
mov
pushf
mov
nop
push
das
arpl
jbe
test
or
push
adcb
pop
cmc
aas
lods
ret
sub
mov
xchg
push
sti
imul
pop
lret
dec
push
adc
out
jae
lock
outsl
push
adc
xlat
outsb
adc
mov
test
xchg
adc
sub
xor
test
sbb
xchg
cmp
ret
aas
add
mov
cltd
insb
pop
mov
roll
xor
cmpsl
pop
mov
add
jno
cmp
push
pop
sub
jne
lahf
mov
mov
lahf
jns
sti
ja
pop
cmpsb
mov
sti
out
sub
lahf
push
scas
pop
leave
inc
outsb
fdivs
sbb
aad
push
dec
sbb
jno
repnz
rorb
push
stos
lods
sub
mov
js
repz
mov
imul
inc
call
jp
or
mov
pop
jnp
or
mov
sahf
inc
nop
dec
dec
or
mov
addb
outsb
out
sbb
jnp
sub
adc
dec
lret
mov
xchg
punpckhbw
gs
add
lock
xchg
adc
cmpsb
insb
orb
in
sbb
push
pop
data16
push
jb
push
and
out
mov
gs
repz
xor
movsl
sarl
pop
outsb
mov
add
stos
lock
pop
outsl
rcll
jmp
rcl
adc
in
mov
fs
loope
dec
scas
in
pop
mov
inc
or
adc
call
or
or
stos
dec
mov
add
pop
testb
xchg
mov
dec
es
aad
lds
adc
or
mov
lock
loop
inc
scas
add
adc
sub
jne
cmp
pop
aam
jge
call
adcl
dec
mov
xchg
xchg
ss
jecxz
outsl
mov
pop
inc
ljmp
dec
shl
mov
dec
lock
ljmp
or
shlb
call
pusha
mov
fisttpl
mov
lret
cmp
cmpsb
addl
sbb
jmp
jnp
and
inc
adc
push
and
pop
cwtl
pop
loope
lea
add
repz
test
inc
pop
ds
adc
stos
lods
xor
ds
sub
adc
adc
dec
lea
mov
push
dec
aaa
mov
cwtl
aam
add
pop
xchg
push
adc
xchg
adc
movl
enter
fs
cld
mov
in
fidivrs
mov
insb
add
ss
loope
mov
hlt
shl
mov
imul
xlat
cmp
cwtl
cmp
mov
adc
cmp
clc
jmp
shl
and
xor
roll
jae
cld
int
push
mov
adc
addb
jb
icebp
mov
dec
dec
push
not
stos
scas
mov
sbb
sub
int
and
and
sarl
lods
push
aad
mulb
cmp
xchg
inc
aam
cmp
loop
leave
sbb
push
mov
les
dec
sbb
push
lcall
inc
sub
jge
bound
pop
imul
dec
sahf
dec
rcr
cmp
rcrl
scas
dec
lds
add
test
adc
push
popa
xor
fisttps
lcall
fs
mov
in
push
and
mov
sub
or
xor
pop
and
sub
adc
std
dec
sbb
rclb
xchg
sbb
jge
lcall
loop
loop
testb
int3
popf
add
jle
pop
mov
test
lahf
xchg
add
cs
leave
rcrl
jns
xlat
mov
inc
fsubrp
dec
and
loop
loope
adc
leave
xchg
movsb
xlat
inc
in
cltd
add
cmp
pop
xchg
inc
aam
mov
daa
add
inc
dec
and
inc
dec
in
and
push
or
adc
sub
in
cwtl
sbb
out
mov
sbb
push
pop
xchg
fistpll
mov
addr16
lret
pop
es
pop
sub
aad
fbld
ja
pop
pop
mov
nop
in
icebp
int
addr16
add
ret
repnz
xchg
into
hlt
jne
les
inc
mov
jbe
jb
pop
mov
dec
push
insb
aam
push
into
inc
mov
dec
leave
data16
add
add
movsl
mov
mov
daa
test
dec
ret
xchg
into
int
cltd
mov
insl
cmc
adc
sbb
iret
jbe
mov
dec
sub
push
add
imul
cmc
lret
jb
cmpsl
pop
loopne
sbb
sub
mov
movsb
inc
cmp
mov
shll
mov
xchg
jp
int
popa
mov
in
fldt
cmp
and
mov
cmpsl
xchg
sbb
mov
cltd
adc
aaa
add
in
pushf
arpl
xor
mov
pop
xchg
mov
sahf
cmp
repnz
cld
xchg
pop
xlat
mov
sub
in
xchg
xchg
push
xor
jae
fldenv
dec
repz
subl
mov
mov
inc
int3
lahf
sbb
xor
mov
xlat
aam
out
cmc
call
sbb
movsl
mov
jbe
lds
push
hlt
stc
lods
sbb
cmc
add
add
pop
sbb
pop
insb
sub
bound
sub
movsb
fwait
aas
orl
push
repz
cmp
gs
mov
iret
aas
or
push
popf
pop
lods
add
lret
mov
inc
or
outsl
jae
inc
inc
jb
in
out
xor
sarb
cmp
out
rolb
test
loopne
flds
fists
cmp
imul
ja
mov
lcall
add
xor
dec
cmp
gs
and
movsb
dec
sub
add
sti
mov
and
incl
iret
xchg
push
adc
sbb
clc
xchg
sti
orb
xor
adc
pop
push
pop
sub
cli
and
pusha
add
dec
add
sti
jno
insb
mov
pop
and
mov
lret
enter
ret
call
shrb
outsl
fcoml
sub
insl
mov
ja
mov
repz
lods
cmpsl
add
addl
fnsave
inc
loopne
xchg
add
push
popf
mov
cltd
add
mov
inc
cs
shll
and
sbb
sbb
shlb
jecxz
and
push
jp
pop
rolb
push
add
ss
ja
movsb
adc
mov
lock
pop
cmp
pop
sub
sbb
jnp
pop
inc
inc
jno
cmp
push
xchg
out
mov
loopne
or
mov
jl
xor
mov
imul
test
lods
inc
inc
xchg
inc
pop
je
xchg
jmp
popf
mov
dec
cld
xchg
insl
lock
rcrb
lahf
mov
dec
fidivrl
xor
sub
sahf
mov
outsb
jmp
mov
jle
aas
icebp
nop
add
fidivrl
jno
lock
rcrb
mov
push
push
mov
xor
xchg
sbb
jae
jmp
je
push
mov
ljmp
ljmp
mov
fsubs
mov
adc
mov
mov
adc
enter
or
lods
xchg
lock
jne
and
jo
cmp
cld
pop
aam
push
clc
shll
insl
bound
cld
push
cmc
repz
inc
dec
aam
sahf
mov
fstl
outsl
xchg
cmp
sub
mov
icebp
xchg
mov
lock
lcall
idivb
shlb
xchg
mov
movsl
mov
cmp
sbb
lds
ficompl
das
lods
movsb
or
movsb
cmp
cmp
pop
xchg
adc
lods
aaa
push
int3
inc
test
dec
andb
pop
inc
cwtl
ffreep
mov
leave
xlat
insb
in
mov
pop
imul
ja
xor
sahf
pop
in
fmulp
dec
add
stc
lret
lcall
pop
cmpsb
add
inc
ljmp
cli
dec
jecxz
shrb
stc
test
jecxz
push
mov
mov
cs
addr16
icebp
ret
sahf
std
dec
pop
int
lea
ja
enter
sti
movb
jne
repz
push
adc
iret
pusha
jo
sbb
mov
cmpsl
enter
mov
clc
ja
cmpb
js
mov
je
inc
out
fisubrs
push
lret
int
push
mov
cmp
fdivrp
lret
insl
cwtl
insl
int3
imul
fidivrl
mov
mov
adc
xchg
dec
int3
push
leave
cmp
ds
jo
insb
popf
push
dec
xchg
pusha
dec
fdivl
lahf
push
add
iret
ret
dec
fucomp
xor
fisubrs
cmp
dec
lock
mov
push
fistl
pop
hlt
dec
sbb
lret
sahf
jge
jmp
xchg
dec
call
cld
ret
fdivp
jbe
xchg
and
inc
inc
sbb
fiadds
mov
xchg
mov
mov
jbe
cmp
sbb
add
shrb
and
or
push
imul
setae
in
das
aas
xchg
gs
fs
sub
in
test
jnp
adc
bound
arpl
mov
ret
xor
jne
pop
or
cmpsb
lret
fadd
subl
mov
aas
pop
lods
add
and
or
cmpsl
ss
cld
sub
in
sti
pop
xor
mov
xchg
call
dec
mov
adc
adc
adc
stc
js
and
push
xchg
fistps
les
adc
ja
mov
cmp
in
scas
mov
and
idivl
mov
mov
inc
testb
scas
shl
mov
rclb
popa
scas
push
push
dec
lretw
mov
inc
jg
jnp
and
out
jo
sbb
mov
call
test
mov
cmp
inc
std
jns
iret
jmp
sub
pop
idiv
jle
and
out
mov
or
loopne
js
flds
clc
movsl
dec
pop
sub
pop
or
mov
and
and
les
jns
pop
daa
ljmp
cmpl
lret
in
ljmp
scas
sbb
xchg
sub
dec
fwait
sub
pop
sbb
cmp
inc
movsl
addr16
push
sub
addb
push
lods
fdivs
mov
jmp
les
xlat
outsl
stos
in
out
xchg
xor
fmull
xor
test
lea
xchg
ss
add
push
mov
push
aam
iret
adcb
push
outsb
out
adc
or
daa
mov
test
or
cmc
sbb
and
decb
add
popa
xchg
in
jno
mov
iret
sub
bound
jl
sbb
add
mov
aad
mov
sbb
stos
cmp
decl
cli
ret
xlat
mov
mov
jmp
test
pushl
adc
cli
mov
mov
push
xor
adc
int
or
adc
ljmp
addr16
add
jmp
stc
pop
xchg
and
aas
shlb
xchg
ja
cld
pusha
jno
add
or
repz
je
cmpsl
add
icebp
xor
fcomip
pop
insb
xor
inc
rcll
sub
pop
jo
lret
lret
adc
loopne
dec
cmp
aad
sarl
dec
xor
mov
out
ret
pushw
jnp
dec
lods
mov
jno
dec
popf
daa
rorb
or
stos
test
in
sbb
inc
insb
sarb
cld
xor
mov
pop
adc
lods
and
pop
cmp
loopne
pop
inc
cltd
fs
data16
in
sti
arpl
leave
lcall
js
das
test
fnsave
out
daa
sbb
mov
mov
divb
popa
xor
ljmp
pop
lock
arpl
mov
lea
mov
pop
or
xchg
dec
cltd
cmpsl
lds
iret
gs
imul
and
insl
movl
mov
shr
xchg
cld
pop
movsl
aam
aas
dec
cmpsl
and
or
mov
outsl
adc
sbb
arpl
jp
adc
bound
lcall
out
fildl
movsl
subb
mov
xor
into
inc
push
int3
and
xchg
mov
test
lods
xlat
mov
xchg
mov
jp
sub
mov
jnp
cmpsb
std
or
sar
dec
xor
lds
shll
cmp
das
movsb
rcll
lcall
mov
mov
sbb
mov
cli
xchg
sti
adc
jle
inc
xor
aas
mov
mov
cmp
pop
mov
ret
push
loope
ret
data16
loopne
push
rcl
adcl
sub
aaa
cltd
cmp
push
cmp
pop
sub
inc
popa
std
imull
sub
int3
dec
sub
and
push
jge
adc
test
je
sub
jbe
mov
das
sbb
icebp
sub
dec
stc
inc
rol
fwait
nop
add
dec
fmull
test
sbb
imul
mov
dec
in
push
cmp
insb
pop
jg
cmp
dec
aaa
ljmp
gs
jns
orl
adc
je
testb
ret
mov
mov
dec
and
push
xchg
pop
sbbl
push
jl
pop
mov
pop
test
pop
and
cmc
or
or
dec
in
sub
jecxz
out
mov
mov
gs
repz
xor
push
ja
dec
lods
xor
xchg
arpl
in
test
inc
sbb
ret
add
push
int3
stos
xchg
and
and
add
add
repnz
xor
insb
jnp
xchg
xchg
mul
add
ja
nop
mov
pop
mov
and
cld
lods
sti
aad
into
stos
jg
jmp
or
out
cmpsl
divb
fimuls
mov
test
xchg
or
cltd
cmp
ret
jae
add
popa
or
mov
fsubrl
cmp
loop
jns
sub
and
push
lahf
add
mov
mov
mov
negb
rcll
jbe
pop
sub
lods
arpl
scas
adc
ja
cmpsl
mov
pop
or
mov
rcl
in
out
clc
push
dec
add
arpl
sbb
jge
xor
test
cld
shll
pop
popa
mov
mov
shrl
push
dec
out
and
jae
arpl
adc
out
addr16
adc
cwtl
arpl
and
in
mov
imul
pop
pop
sti
addb
mov
jge
mov
lcall
inc
pop
rclb
outsb
rclb
aad
adc
push
fwait
sbb
pop
icebp
in
jnp
sti
xchg
std
cmp
xchg
dec
in
fnstcw
add
aaa
rol
jb
add
mov
sub
out
push
sahf
xor
ljmp
cltd
cli
insb
hlt
outsl
int3
insb
dec
gs
and
inc
push
xchg
add
in
shrl
outsl
lods
pop
scas
xor
xchg
scas
stos
in
ficomps
push
mov
test
dec
aad
icebp
xchg
inc
mov
mov
push
mov
mov
inc
pop
jne
out
and
or
adc
lret
add
cmpsb
add
int
test
negl
pop
sbb
and
rcrb
imul
dec
mov
inc
mov
mov
mov
mov
cmp
std
lock
jmp
ss
mov
out
sbbl
ret
outsb
xchg
movsb
in
out
cld
xor
notb
inc
sarb
mov
ja
scas
outsb
gs
cmp
sub
jo
fsts
arpl
pop
and
movb
fdivl
sbb
in
xchg
push
mov
shl
mov
adc
cmc
shrb
outsl
enter
cmpsl
aaa
pop
ss
inc
add
inc
leave
fisubrs
lret
and
xor
jle
sub
in
ficoms
fisubrs
xchg
je
push
lds
rorb
mov
repz
push
imul
repz
jl
aaa
push
pop
cmp
jl
scas
outsb
out
ret
bound
mov
ficomps
int3
and
add
sbb
jge
out
mov
test
shr
xchg
subb
and
push
ljmp
jl
fcomip
das
mov
ss
or
fisubrl
sub
fldenv
cwtl
xor
addr16
leave
popf
or
or
lock
adc
jbe
int3
dec
js
in
xchg
inc
and
popa
es
cmc
ja
or
add
inc
jecxz
push
icebp
cltd
in
int3
clc
inc
inc
xor
lret
cmc
jle
and
lds
and
mov
jo
mov
mov
rcrl
mov
sub
xor
bound
rorb
imul
xor
ret
pop
stc
jnp
into
xor
lret
jbe
into
stos
cmp
sub
pop
sub
mov
adc
faddl
or
jg
imull
or
in
pop
jne
push
mov
jg
cmp
mov
sub
mov
icebp
sbb
icebp
shlb
notb
test
jp
fdivs
fs
pop
pop
add
cmp
popa
jb
mov
add
mov
add
pop
lcall
jecxz
xchg
xor
lods
fdivl
or
andl
fsubrl
insb
fcmovnbe
xchg
iret
fisubrl
shlb
jnp
jle
sub
mov
mov
mov
inc
mov
stos
shl
mov
mov
loop
inc
dec
pop
pop
ss
pop
jb
adc
jle
orb
jbe
mov
sahf
pop
push
adc
aas
push
popf
xchg
push
cmpsl
inc
jmp
xor
ja
add
push
adc
xchg
pusha
pop
ret
out
cmpsb
lcall
iret
xchg
loope
xorl
mov
ficompl
xchg
and
xchg
pop
pop
and
lret
sub
stos
and
jnp
xor
push
daa
push
ret
adc
jl
xchg
lea
out
aad
inc
pop
jne
popa
in
mov
outsb
cmpsb
jb
adc
dec
ret
cmp
pushf
std
cmp
sbbb
and
jb
movsl
pop
daa
arpl
es
pop
std
stc
int3
or
xchg
cmp
mov
imul
std
popa
repnz
arpl
test
mov
dec
in
test
movsl
repz
sub
test
adc
imulb
mov
ret
add
js
fstl
pop
iret
jl
mov
pop
push
std
pop
dec
lock
jnp
ret
fxtract
push
and
dec
hlt
adc
dec
jmp
jmp
jbe
out
cmpsl
out
pop
orl
xor
cmp
mov
rol
sub
std
leave
inc
call
test
orb
add
ret
mov
ja
and
pop
push
shll
and
hlt
inc
push
inc
push
mov
ret
jns
jecxz
inc
ret
popa
daa
cs
mov
dec
mov
in
or
int
cmpb
in
pop
ljmp
into
scas
jmp
jne
gs
mov
add
inc
lea
div
ds
fwait
sbbl
push
add
dec
mov
push
add
mov
ja
mov
imul
jnp
cwtl
out
popf
ret
mov
pop
inc
and
or
les
mov
aaa
cmc
out
fsts
cmp
add
push
mov
push
or
cmp
and
movb
jne
mov
test
sbb
dec
int
cmp
in
cld
mov
pop
loopne
push
cltd
xchg
dec
cmp
push
js
adc
mov
lret
mov
xchg
call
into
inc
and
pop
push
aad
mov
clc
negl
xchg
dec
out
or
cmp
ss
dec
stos
mov
in
div
sbb
and
rcll
push
push
mov
inc
iret
fcmovnb
aaa
cmpsb
into
mov
mov
pop
sbb
mov
dec
aaa
lret
or
inc
mov
xor
xor
jbe
jmp
int
call
nop
fwait
daa
divb
jle
sarb
pusha
inc
out
test
jbe
pop
cmp
sub
out
out
ret
fdivs
in
aaa
movsb
fldl
cmp
dec
test
push
mul
push
lret
lahf
sub
dec
clc
or
fdivp
mov
pushf
out
mov
mov
or
mov
je
cmp
addl
xchg
xchg
push
xchg
jmp
push
and
enter
xlat
jmp
and
mov
xor
jg
add
xchg
adc
pop
popf
mov
pop
mov
mov
shll
mov
pop
pop
lods
mov
or
fcmovnb
jmp
pop
das
inc
pop
in
mov
jmp
das
pop
mov
xchg
aam
fcompl
xlat
data16
xor
fwait
pushf
ja
xchg
icebp
pop
addr16
fmull
shll
inc
or
cmp
jae
push
add
daa
jno
xchg
jne
pusha
push
xor
ret
cmp
push
sti
stos
jbe
adc
adc
ret
or
mov
inc
stos
lret
mov
lods
jne
ja
scas
loopne
adc
jl
xchg
lods
xchg
adc
scas
es
insb
jne
xchg
mov
xchg
xor
cmp
or
xorl
sub
jge
fimuls
scas
push
mov
sub
repz
mov
inc
les
aam
jns
mov
dec
xor
movsl
les
insb
ret
xchg
mov
sbb
and
enter
sbb
loope
mov
icebp
inc
jbe
aaa
mov
mov
repz
lret
addl
xor
xor
lret
mov
loope
adc
xchg
ss
cli
testb
and
pushf
mov
push
imul
movsl
sub
lretw
sti
in
movb
scas
movsl
push
add
mov
icebp
rcll
jnp
dec
cmp
sbb
ja
inc
add
push
inc
xchg
call
sbb
pop
or
xchg
movsl
add
jecxz
mov
clc
cmpl
push
cmp
cmp
pop
mov
shll
lret
ds
pop
inc
sarb
ficoms
mov
dec
fcompl
and
dec
dec
inc
inc
sub
xor
cmp
inc
mov
gs
fcmovb
daa
into
mov
ja
test
out
adc
sbb
xlat
dec
mov
popa
lahf
mov
cmpsb
mov
and
xor
lcall
stos
xor
cmpsb
xchg
dec
outsb
movb
outsl
jg
dec
sbb
jne
cwtl
adc
stos
movsl
mov
mov
daa
jbe
popa
ret
in
and
pop
sub
mov
ja
cmp
pop
dec
inc
sbb
jle
xor
xchg
out
scas
mov
or
ds
jl
repnz
inc
cmp
jnp
jmp
lock
xchg
ds
in
out
cmpsb
xchg
imul
bound
pop
mov
cmp
xlat
shl
in
pop
jge
mov
adc
jp
adc
inc
insb
jle
fs
sahf
iret
mov
xchg
loope
jl
cwtl
imul
or
add
sub
fistpll
mov
adcl
repz
inc
fldt
or
mov
or
dec
pop
inc
cwtl
imul
sahf
shr
shlb
aam
movsl
push
sbb
and
xchg
pop
cmp
mov
add
popa
jno
xchg
sbb
jecxz
xor
ss
mov
jne
into
and
cmp
push
adc
in
sub
aaa
ss
dec
push
lret
or
insb
das
sub
xor
ret
add
xor
sbb
adc
jg
or
stos
mov
xor
sub
pop
xlat
lock
sbb
xchg
aaa
insl
and
cmpsl
test
leave
and
jbe
movsb
sbb
mov
hlt
xor
add
lock
shlb
call
fstl
into
lock
stos
scas
jns
xor
lods
inc
push
push
loop
fwait
add
fdivs
std
popf
push
mov
sub
xchg
or
push
pop
lock
cmp
popa
xor
adc
xor
aad
ficompl
ss
dec
pusha
add
pop
imul
push
mov
cwtl
int3
out
adc
aad
aam
cltd
sub
dec
clc
mov
jae
in
lret
frstor
loope
pop
mov
lods
mov
xlat
lahf
and
lds
xor
es
fstpt
pop
int
add
les
int
test
jae
ret
xor
cmc
mov
mov
pop
mov
test
push
jo
orl
mov
fcmovnb
jne
pop
mov
sar
cltd
or
movsb
shlb
es
jnp
push
cmp
pop
imul
aas
or
aaa
mov
mov
ja
dec
sbb
mov
add
mov
scas
jae
mov
aad
cmp
mov
sub
jno
mov
add
mov
orl
and
xchg
dec
mull
pushf
inc
add
movsl
add
lret
sub
lock
push
in
jp
dec
mov
cmp
xchg
mov
xor
sub
and
jg
jns
fnstcw
mov
pop
sbb
sub
adc
leave
out
outsb
scas
mov
scas
fldcw
loope
stc
enter
hlt
xchg
pop
lret
push
imul
inc
push
je
rcrb
xor
stos
adcb
sbb
xor
aad
dec
xchg
ret
inc
dec
mov
inc
fnstcw
aas
lcall
clc
jge
int
lcall
add
sarl
xor
xlat
jne
lea
fisttps
lcall
mov
daa
pop
stc
ss
scas
pusha
in
sbb
inc
xchg
ljmp
xor
fisubrl
leave
and
xlat
in
lret
loope
pop
iret
xor
rorb
mov
fnstsw
xor
pop
pop
mov
mov
mov
dec
add
mov
pop
mov
xor
mov
outsb
jecxz
insl
adc
fiadds
movsl
insb
xchg
cmc
lcall
mov
pop
stc
mov
jae
gs
cmpsl
pop
notl
cmc
sbbb
pop
aad
andl
mov
test
idivb
outsb
push
in
imul
fimuls
daa
push
jmp
lods
stc
xchg
jb
or
push
test
pop
shll
sarl
sub
test
dec
popf
mov
sbb
pop
xlat
into
add
sub
bound
jmp
insl
test
test
xor
sahf
enter
inc
fs
add
test
icebp
xchg
jg
out
cmp
mov
test
mov
aad
pushf
clc
sahf
into
cli
mov
test
sarb
mov
icebp
stc
xchg
dec
mov
fstpl
cmp
jmp
pop
xchg
or
pushf
push
mov
ljmp
jae
fs
fwait
imul
or
mov
bound
cmp
add
adc
adc
jmp
sar
cmp
addr16
int
mull
dec
sub
stos
adcb
outsl
fisttpl
xchg
int3
bound
adc
cmp
mov
sub
stos
sbb
inc
inc
fidivs
jmp
cmpsl
xlat
fbstp
inc
shlb
lret
cwtl
mov
cmp
inc
add
scas
aad
mov
adc
jle
pop
addr16
sub
roll
mov
divl
or
icebp
push
or
inc
xchg
mov
and
int3
addr16
hlt
add
pop
andb
push
imul
in
dec
js
dec
pop
sbb
hlt
arpl
sub
ss
cwtl
push
lret
or
sbb
pop
add
pop
jle
push
fisubs
es
ljmp
mov
jo
cltd
push
cld
lds
ret
mov
sub
lods
les
mov
sbb
clc
cmp
iret
vpmaddwd
jl
test
dec
mov
jmp
call
addb
xlat
push
jg
sbb
aad
mov
das
mov
add
push
scas
sbb
in
xchg
cmpb
pop
sub
loope
xor
inc
leave
popa
sub
fildl
cmp
out
add
and
mov
or
std
inc
cmp
mov
pop
mov
jl
call
leave
mov
mov
fwait
loope
push
sub
sbb
mov
mov
jg
test
adc
mov
and
mov
mov
ret
loop
lods
push
jnp
pop
arpl
push
stos
imul
mov
add
push
inc
push
into
xchg
pop
lea
push
mulb
scas
insb
sahf
xor
pop
xchg
inc
outsb
mov
inc
stc
out
push
inc
xchg
dec
mov
js
pushf
fs
movsb
mov
push
push
or
mov
das
cmp
out
fwait
shl
or
sbb
out
dec
push
jge
hlt
xor
xlat
push
add
sub
aas
push
cmpsb
xor
aas
cmp
cmp
pop
adc
jg
js
push
call
repnz
mov
cmp
insb
loopne
push
je
hlt
xchg
outsb
push
clc
inc
pop
jg
or
flds
lcall
lret
jle
test
jg
jne
js
shlb
push
push
add
lods
fs
decl
pop
int
inc
adc
dec
inc
xor
leave
pop
mov
sub
pushf
xchg
sub
jne
fucomp
or
je
mov
cmp
mov
xchg
mov
and
fsubs
test
or
push
mov
negl
sbb
push
sub
lret
loopne
ret
addr16
sub
inc
mov
inc
and
repnz
adc
xchg
std
stos
pop
mov
jl
jp
hlt
data16
xor
icebp
mov
jnp
mov
incl
loopne
test
xor
mov
cmp
ds
xor
xor
cli
aas
pushf
sub
scas
mov
cmp
idivl
mov
inc
xchg
cli
xor
aas
push
out
ja
mov
sbb
inc
cmp
pop
mov
dec
ror
inc
stc
sbb
shll
xchg
enter
sarb
jmp
cmp
xchg
pop
push
imul
loopne
sub
aam
sub
sub
sbb
cmc
push
dec
jns
and
and
mov
and
cmp
jns
xor
bound
jnp
mov
xchg
xchg
out
mov
cmp
inc
adc
iret
stos
or
ljmp
xor
add
sti
add
int
jge
sub
or
push
add
ffree
test
call
gs
out
add
fidivrs
push
lret
mov
mov
mov
or
sub
xchg
jg
xorl
sbb
jge
mov
sub
mov
dec
cmp
ss
dec
mov
sub
test
sbb
shrl
pop
push
insl
jge
leave
or
lds
mov
es
out
stc
pushf
sub
mov
test
pop
mov
shl
sbb
jae
mov
jb
mov
dec
xor
ja
fwait
imul
pop
pusha
aas
push
adc
rclb
into
xchg
in
add
sti
repz
push
rclb
sbb
repz
lahf
sub
pop
lret
out
fildll
mov
popf
jle
aaa
jnp
in
imull
adc
jp
or
sbb
repz
fidivs
out
movsl
xchg
jecxz
js
pusha
jl
stos
mov
mov
jbe
fwait
push
adc
inc
adc
mov
stos
repnz
push
mov
adc
js
sub
outsl
and
mov
in
push
and
cwtl
sbb
sbb
push
vmwrite
js
add
cli
sbb
and
rcrl
xor
mov
and
mov
xor
inc
push
xor
leave
out
fnstsw
jb
and
xchg
lods
mov
push
jnp
and
or
xchg
popf
cmpsl
mov
pusha
lsl
ss
mov
cmp
mov
data16
mov
mov
jmp
fwait
sbb
pop
jae
movsl
out
xlat
scas
fstpt
cs
inc
stos
sarl
std
arpl
fidivs
test
push
insl
xchg
jmp
ljmp
jne
pop
lods
jb
sahf
out
inc
cmp
adc
hlt
fldl
cltd
orl
push
dec
nop
mov
cmc
xorl
mov
and
lds
idivb
mov
or
sub
jle
cld
and
out
hlt
jae
ja
repz
dec
mov
movsb
push
notl
adc
push
push
mov
cs
sub
rorb
jmp
out
mov
fldenv
pop
xchg
mov
and
xchg
cld
stos
xchg
jle
cmp
add
fldenv
sbb
lret
mov
xchg
popa
mov
mov
cmp
and
sti
mov
push
lods
lahf
xlat
leave
stc
hlt
repnz
xor
out
js
ret
jmp
inc
xchg
fwait
cmp
out
das
pop
jne
incl
addr16
pop
je
in
add
lret
and
pop
dec
cmp
data16
js
adc
mov
insl
pop
loopne
pop
push
cmp
mov
or
icebp
imul
sbb
out
psllw
movsb
bnd
inc
nop
ljmp
xchg
out
hlt
push
sub
xor
movsb
arpl
int3
dec
mulb
out
mov
jns,pt
xor
or
cmp
jecxz
adc
mov
sahf
push
mov
xchg
popf
pop
xor
out
mov
lods
mov
js
dec
fucomip
imul
mov
fs
mov
test
mov
sub
mov
mov
dec
adc
jl
es
fs
lahf
lret
gs
xor
jle
mov
jle
adc
cmc
aas
outsb
xbegin
push
push
test
hlt
out
adc
rorb
xchg
loop
movsb
mov
mov
add
in
fs
push
dec
add
push
ret
pop
gs
in
loopne
cmp
add
jmp
jb
push
adc
jb
les
cld
outsl
arpl
cltd
ja
sbbl
decl
lret
loop
mov
shlw
adc
scas
mov
ficoml
loope
daa
adc
fxch
mov
call
xor
sub
shr
adc
xchg
mov
movsb
push
daa
push
mov
lock
movsl
pop
pop
fisubl
pop
out
popf
adc
adc
repz
jecxz
add
cmpsb
rorl
inc
mov
xchg
enter
setle
std
ljmp
int
cli
std
fildll
addr16
jb
xchg
aas
negl
mov
popf
xchg
lahf
out
mull
icebp
lods
add
and
out
outsl
ss
xchg
sbbl
jne
jge
in
dec
or
cmp
iret
ret
enter
loopne
mov
jmp
call
mov
int
in
push
fstl
ljmp
rorb
mov
mov
pop
xchg
jl
ja
pop
test
aam
jl
jns
sbb
jne
ja
lret
fbstp
shlb
pop
sub
xchg
pop
push
test
mov
js
cmc
jl
shll
push
add
inc
popf
and
clc
cmc
add
jge
lds
cmpsl
arpl
pop
push
es
fs
andb
jmp
es
cwtl
jecxz
cwtl
cs
sub
or
or
xchg
mov
ja
pop
cmpsb
hlt
pop
add
bound
ljmp
jno
or
push
cmp
loopne
lret
dec
leave
adc
ja
sub
xchg
sub
dec
aad
insb
adc
fldt
das
jmp
fnstsw
inc
sub
cli
xchg
and
xchg
mov
test
fwait
stos
push
call
xorl
pop
clc
repnz
and
cmp
mov
lods
or
icebp
and
add
xor
loope
cmp
test
arpl
sti
pop
and
xchg
cli
mov
ret
or
insb
out
loope
aad
js
mov
sub
cmpsl
loopne
adc
push
mov
arpl
pop
mov
cmp
cmp
popa
jge
jle
dec
push
je
jne
xor
andl
xor
xor
daa
scas
ret
adc
push
cltd
mov
aad
jbe,pt
xchg
xchg
sub
xor
or
and
push
mov
lahf
and
daa
sbb
mov
in
xor
mov
jecxz
loope
sub
cmp
dec
cmp
and
jo
leave
pop
rcrl
clc
aam
xor
cltd
mov
push
xchg
stos
mov
xchg
scas
sbb
pop
movsl
adc
lret
mov
pop
in
mov
lods
cld
frstor
enter
adc
ret
jns
imul
or
fidivrl
movsb
daa
rcrl
js
arpl
mov
ja
push
or
repnz
lret
lods
out
mov
mov
imul
inc
outsl
cmpsb
jo
jo
lahf
ret
jmp
cli
and
cmp
gs
mov
fisubl
sbb
sub
mov
or
das
xchg
aam
push
idivb
cmp
movsb
jnp
lock
imul
pop
or
iret
xchg
cmc
ds
fwait
jnp
adc
cmp
mov
mov
pop
int
push
adc
movsb
adc
divb
repnz
sbb
fisubs
sbb
negl
scas
or
adc
xchg
xchg
add
ficompl
or
stos
mov
mov
xchg
add
xchg
xlat
test
pushf
jb
cmp
in
nop
sub
sub
fwait
jo
mov
pop
dec
jecxz
gs
pusha
mov
and
jecxz
cmpl
sub
aad
dec
mov
sub
cmp
sbbb
xchg
cmp
or
fsubp
mov
inc
loopne
xor
fcoml
fdivr
mov
test
xor
mov
mov
sbb
imul
iret
mov
aas
xor
or
shrl
dec
rol
mov
enter
loop
iret
mov
dec
cwtl
push
ds
leave
pop
out
mov
sub
nop
fdivs
aas
sbb
mov
pop
or
jmp
cmpsb
pusha
popf
mov
nop
notl
rclb
nop
js
incl
pop
lods
jo
add
jmp
repz
in
pop
pusha
cmpsb
mov
fcoms
loope
lods
mov
shrb
and
aas
sbb
jecxz
pop
lcall
and
and
ret
leave
xchg
iret
mov
scas
aam
add
sub
adc
xchg
into
lret
add
data16
arpl
cli
xorb
cmp
fldl
push
jb
mov
dec
movsl
xor
xchg
adc
push
data16
shrl
pop
ss
jae
rcr
or
adc
jo
xchg
addr16
mov
xchg
mov
js
scas
cmc
xchg
out
cmpl
sub
xchg
add
hlt
jg
mov
inc
testl
xchg
push
mov
fistpll
pop
dec
sti
or
gs
stos
scas
mov
mov
push
pop
push
cmpsl
and
dec
xor
dec
aaa
mov
sub
out
nop
call
mov
mov
out
dec
push
jp
and
pop
xor
iret
pop
inc
sbb
cmp
pushf
sbb
sub
test
int
jp
push
jge
lods
mov
rclb
lods
jl
imul
movsb
push
cld
into
dec
je
cmpsl
stos
or
push
jge
jnp
pop
mov
movsb
mov
xor
and
movb
stc
out
dec
sub
repnz
test
cmp
lock
xchg
jno
cmp
cli
and
adcl
sbb
subl
lret
pop
enter
scas
arpl
in
int3
data16
loope
setb
fsubrp
mov
cmpsb
adc
add
mov
cmpsl
mov
push
fs
cmp
sub
out
popa
ficoms
test
outsb
cmp
sbb
mov
xchg
mov
and
mov
call
adc
pop
lcall
xchg
sahf
mov
dec
icebp
sbb
aaa
fistpll
add
add
das
sbb
push
addr16
or
icebp
movsb
movsl
xchg
pop
push
rcl
loop
dec
enter
lds
adc
sub
jae
outsb
lods
xchg
pop
push
adc
add
cmc
xchg
mov
sub
and
lahf
push
cld
ds
push
sub
push
test
push
adc
andb
cld
inc
mov
mov
sbb
hlt
adc
cmp
push
xor
xchg
pop
lods
andb
sub
pmullw
sarl
leave
in
mov
push
fistl
adc
add
pop
rorl
bound
outsb
rol
mov
inc
pop
sbb
and
sub
cli
lret
cmpsl
in
xor
notl
mov
call
jb
int
inc
into
xchg
or
xor
std
push
adc
mov
dec
adc
push
fwait
out
out
inc
cld
sbb
push
addr16
js
xchg
pop
pop
push
sarl
pop
repnz
fnstcw
mov
testb
xchg
jae
or
jp
cmp
faddl
dec
fdiv
jbe
xchg
sub
add
call
cltd
or
add
test
adc
inc
roll
nop
and
and
and
xor
and
outsl
xor
sarl
xchg
sub
cmc
imulb
sub
ljmp
sub
loope
cli
lahf
pushf
mov
aad
roll
adc
lret
pop
test
lods
call
push
jl
js
jecxz
out
jl
shl
inc
and
rcr
xchg
lods
adc
adc
inc
xor
push
push
daa
dec
in
insl
test
in
sar
xor
outsb
aas
mov
and
sti
push
xor
xchg
mov
add
push
into
pop
icebp
sbb
mov
xchg
shlb
inc
sbb
data16
push
add
mov
je
or
sbb
dec
pop
fisubl
fs
test
lret
or
cli
pop
xrelease
jecxz
std
pop
inc
xor
push
jmp
rolb
in
pop
dec
gs
add
xor
shrl
call
sub
leave
pop
and
sub
fbstp
test
mov
clc
lods
xlat
pop
idivl
add
adc
adc
pop
sub
in
push
scas
sub
push
dec
fldln2
mov
sbb
fimuls
fwait
add
or
mov
jmp
push
mov
mov
xchg
sub
lods
and
mov
and
test
inc
lods
mov
lahf
loop
push
mov
idiv
std
les
cmc
int3
push
mov
insl
popf
cmpsb
stc
fwait
mov
imul
mov
and
stc
push
mov
xchg
push
pop
test
and
mov
shll
popf
dec
sbb
inc
loope
push
mov
sbb
jg,pn
jae
mov
and
xor
fwait
lret
sbb
repz
in
add
lock
and
push
inc
loop
jge
cmp
lds
fwait
pop
mov
pop
dec
mov
leave
aam
mov
mov
sub
fimull
into
test
cmp
jge
mov
dec
out
or
mov
and
dec
jb
stc
xor
ljmp
mov
and
jle
mov
sub
sti
mov
scas
shrb
sbb
and
jbe
add
daa
dec
test
jnp
mov
notb
cltd
ret
inc
or
icebp
sarb
scas
in
sub
inc
mov
inc
jge
daa
test
push
daa
das
fsubr
push
pop
in
mov
push
inc
scas
insl
stos
ljmp
lds
and
mov
xchg
xor
or
stos
mov
mov
cmp
mov
inc
dec
xchg
cmp
xor
cld
in
int3
ret
add
lods
push
lcall
push
stc
xchg
in
rolb
or
fwait
add
mov
hlt
mov
rcrb
fcmovnu
mov
push
push
movsl
pushf
bound
push
cmpl
lahf
lods
lret
xor
movsl
aas
xchg
cmpsl
inc
push
cmc
dec
inc
in
ds
testb
xchg
out
push
sbb
lds
sahf
mov
mov
lcall
and
sbb
fwait
sti
pop
jmp
aad
mov
out
xchg
jns
xchg
sbb
fsubrs
dec
jecxz
add
lea
pop
jp
jo
dec
inc
mov
test
out
adc
scas
xchg
xlat
clc
daa
in
and
lods
mov
pop
mov
enter
inc
sub
fimuls
push
aam
outsb
xchg
dec
sbb
fisubrl
mov
jbe
shrl
lahf
cmc
scas
add
rcr
inc
pop
insb
in
push
negb
movsb
push
lods
or
lret
ljmp
jne
sbb
jb
cmp
push
in
aaa
popa
repnz
fstl
hlt
adc
int
cmp
inc
dec
adc
cmpsb
push
rcrl
test
or
daa
out
sbb
dec
dec
ret
mov
hlt
jecxz
jo
add
xchg
and
mov
sarb
clc
pop
mov
xlat
jnp
xor
sarl
imul
mov
push
jae
push
sbb
xchg
jl
jmp
xchg
int3
xor
sbb
jmp
mov
xchg
lea
xor
leave
fsubp
icebp
fldcw
icebp
ds
jmp
pop
xchg
or
imul
popa
in
fnstsw
test
arpl
insb
lds
or
xor
mull
fisttps
ja
insl
into
sahf
mov
and
bound
pop
dec
mov
add
or
sbb
xchg
jmp
cmp
inc
mov
pop
xor
inc
push
mov
test
mov
and
cmp
inc
rorb
mov
fs
das
hlt
add
ficomps
jp
sbb
int3
push
les
negb
out
sub
sbbb
jae
test
fldl
pop
and
add
enter
pop
pop
inc
mov
int3
lods
inc
mov
or
xor
and
scas
stos
and
clc
notl
popa
iret
ret
dec
imul
pop
ficoms
pop
das
inc
dec
xchg
nop
leave
pop
pop
dec
mov
daa
iret
inc
notb
idivl
mov
call
ds
sti
ja
inc
andl
das
cmpsl
xchg
adc
negl
mov
cmp
sbb
test
call
xchg
popa
std
lods
mov
mov
in
jns
inc
call
sbb
dec
ret
test
mov
loopne
cmp
jns
shll
dec
pop
cs
ja
stos
imul
sahf
xchg
cmp
mov
cmp
mov
dec
fiaddl
push
pop
or
addr16
adc
or
mov
sahf
push
sbb
mov
pop
mov
pop
rcl
idivb
mov
movsb
ficoml
pop
lds
or
push
push
and
test
adc
pop
sbb
sbb
xor
pop
mov
mov
mov
aam
add
cwtl
stc
xor
cmp
or
adc
cld
leave
cli
movb
lods
push
pop
adc
and
rorl
add
loopne
rorl
xlat
xchg
xchg
ds
nop
mov
mov
and
fcmove
pop
inc
sti
mov
xchg
int
adc
add
push
mov
adc
pop
movsb
movsl
mov
lods
cmp
mov
lods
mov
inc
test
dec
fwait
pop
sub
jno
xlat
imul
cld
mov
mov
movsb
movsb
lods
jo
cmp
ljmp
mov
pop
jb
mov
cmp
out
inc
enter
ss
lcall
negl
aam
into
into
push
sub
fcoms
fsubrl
clc
inc
inc
adc
pop
inc
push
xchg
out
in
sub
adc
lahf
int
mov
imul
inc
or
mov
out
push
cs
fstpl
mov
fidivrl
daa
jmp
int3
icebp
push
mov
jmp
addr16
mov
inc
jo
dec
cmp
fwait
daa
sub
sub
push
notl
lahf
aam
xchg
dec
repz
and
bound
test
cs
push
loopne
leave
stc
std
push
mov
decb
mov
arpl
push
dec
jge
cmp
inc
jne
scas
mov
insl
test
cmp
jb
ja
aam
fnstsw
fidivl
inc
pop
mov
add
sbb
sbb
ja
shlb
or
out
lret
adc
lock
pop
fs
xchg
int
add
push
xchg
xor
jns
inc
enter
insl
sbb
dec
arpl
cmp
loope
or
pop
add
imulb
leave
sbb
loopne
sub
xchg
dec
in
sub
pusha
imul
push
pop
push
mov
or
das
add
fimull
pop
rcrb
das
push
sub
adc
sub
jb
and
cmp
mov
sub
cld
lds
popa
push
adc
shll
mov
inc
xor
daa
sbb
sub
fucom
mov
mov
or
sbbl
stos
aas
cmp
nop
fmull
test
push
fidivl
movsb
loope
push
inc
into
ret
and
les
fs
jmp
xor
xor
cmpl
inc
mov
fadds
adc
cltd
negl
inc
add
test
movb
push
gs
xchg
inc
dec
int3
sbb
mov
sbb
xchg
lock
dec
test
add
mov
dec
pop
mov
popa
addb
adc
or
decb
or
mov
xor
xlat
mov
jae
int3
fisubrl
xchg
xor
mov
xor
mov
out
mov
mov
popa
out
add
push
inc
out
fstpl
mov
leave
imul
push
dec
iret
out
jg
dec
xor
stc
mov
add
cmp
sbb
stos
je
fcompl
repz
dec
in
and
mov
in
add
or
pop
mov
cwtl
pop
scas
dec
cmp
mov
test
int3
lock
fnstenv
in
imul
push
push
pop
inc
cwtl
jns
in
add
or
lock
pop
mov
xchg
mov
mov
repnz
mov
jb
fxch
jmp
popa
push
mov
adc
cwtl
mov
loope
in
nop
jge
or
sbb
icebp
xor
mov
add
inc
lcall
add
out
es
notl
mov
xchg
mov
add
mov
jne
xor
jge
orb
and
roll
pop
dec
fs
or
pop
in
dec
ret
xor
ja
push
mov
xor
or
cld
clc
xchg
decb
movsb
pop
sarb
mov
add
out
jecxz
aaa
icebp
andb
add
das
dec
add
mov
les
repz
cmp
cld
push
mov
aaa
bound
bound
add
das
sub
mov
adc
dec
xor
cld
in
inc
cltd
icebp
arpl
cwtl
xor
outsb
int
mov
jo
jns
outsl
pop
aad
or
ss
inc
dec
test
pop
xchg
push
jb
add
scas
xor
lock
mov
andl
loop
mov
dec
sub
loope
xor
or
js
mov
fs
xor
xchg
mov
daa
aad
pop
dec
frndint
inc
scas
dec
lahf
mov
test
adc
sub
adc
sub
push
out
add
xchg
pop
out
fstp
pop
inc
lret
outsb
inc
fnstenv
pinsrw
mov
adc
push
popf
mov
std
mov
aad
arpl
add
inc
mov
add
mov
jmp
ret
dec
nop
mov
dec
add
stos
and
sub
and
hlt
aas
cli
call
scas
ret
fstl
or
xchg
adc
aad
fnstenv
lods
push
xor
sbb
add
aaa
push
pop
cmp
sarb
dec
or
cmpsb
or
inc
and
ss
mov
je
jg
ljmp
or
pop
adc
ja
add
push
je
popw
inc
pop
jl
sahf
btr
jp
sbb
mov
push
out
mov
xchg
mov
lret
dec
je
cmp
jne,pn
pusha
iret
ss
and
movsl
jne
inc
pop
mov
push
mov
adc
das
xchg
out
out
cmp
lock
ret
cli
shll
sbb
data16
imul
cmp
mov
mov
push
pop
xchg
arpl
inc
xor
inc
mov
dec
lahf
pushf
pop
int3
mov
iret
jle
movl
sarb
jno
sbb
sub
aas
jae
jp
aas
pushf
out
inc
cmpsb
rcr
hlt
add
ds
out
scas
out
pop
lods
inc
gs
into
mov
cs
lods
sbb
out
lret
mov
mov
mov
sub
mov
sub
sti
jmp
out
sub
dec
mov
pushf
inc
jecxz
jecxz
dec
in
mov
push
jne
movsb
ds
icebp
pop
mov
stos
adc
or
rcrl
pop
fucomp
fildll
xor
jnp
xchg
ret
jne
inc
in
or
dec
jecxz
paddsw
inc
jbe
inc
xlat
and
inc
pop
lret
rclb
jmp
pushw
ljmp
adc
and
lcall
cwtl
sbb
in
mov
mov
jbe
jo
jno
xor
push
inc
mov
mov
jmp
decl
or
dec
shll
mov
fcoms
mov
repz
mov
popa
dec
push
jl
dec
insb
and
das
ljmp
lahf
mov
aam
dec
fcoml
out
push
mov
test
aad
xchg
daa
push
test
cmpl
mov
sbb
inc
xchg
popa
ljmp
add
pushf
add
ds
push
aad
mov
cmp
adc
pop
sub
cmpsl
xor
or
xchg
cmp
inc
xchg
inc
lret
jle
sub
push
sub
mov
xchg
rorl
notb
xorl
fimuls
pop
loope
cmp
dec
adc
or
pop
cmp
out
repz
ret
bound
in
or
cltd
adc
xchg
sub
pop
imul
imul
or
inc
push
into
cmp
loope
lods
dec
incb
mov
imul
adc
pop
adc
jbe
cmp
test
sbb
icebp
jae
fwait
je
pop
out
cmp
cld
push
jno
jne
or
mov
cltd
es
shll
cs
cmp
ljmp
and
shrb
cwtl
les
push
aad
cwtl
aam
in
jae
loopne
rcrb
xor
cmp
out
ret
arpl
test
push
sub
sbb
aam
std
push
and
and
call
inc
inc
ds
jmp
xchg
xchg
lock
sub
icebp
inc
psadbw
scas
jne
repnz
ficomps
dec
or
inc
ds
stc
jecxz
es
pop
xorb
inc
pop
call
ret
addl
into
shrb
and
inc
sub
mov
or
addr16
loope
and
jb
icebp
adc
sahf
scas
push
retw
cmpsb
dec
sub
pop
or
fcomps
into
sbb
and
push
int3
mov
xchg
sub
lock
push
sub
fsubrl
mov
pop
movsl
dec
jno
ret
and
pushf
out
mov
pop
mov
mov
stc
cmp
add
pop
mov
insl
jmp
xchg
call
cmpsb
push
fchs
inc
jbe
jge
hlt
mov
or
aad
in
out
add
sbbl
cmp
or
jns
inc
mov
movb
jbe
add
outsb
push
mov
insb
xchg
mov
adc
xchg
stc
cmp
xor
lret
fnstsw
mov
mov
mov
mov
inc
mov
lods
fistps
in
aas
popa
pushw
push
stos
test
lods
js
inc
pusha
mov
mov
lcall
popf
dec
bound
ficompl
out
leave
sub
mov
adc
xchg
rcll
mov
mov
in
inc
cwtl
ret
fwait
jno
cmp
push
dec
out
sti
pushf
sti
test
sbb
sub
push
std
pop
popf
mov
xchg
adc
jge
aaa
aaa
sub
push
rclb
mov
jne
add
out
xchg
les
sub
sub
dec
das
arpl
jge
jb
sub
dec
and
xor
lds
inc
add
lahf
fsubrs
pop
out
loopne
sub
cmp
test
int
rorb
fisubs
mov
inc
push
pushf
mov
dec
add
test
cmp
push
nop
and
inc
xor
inc
lret
mov
dec
ljmp
pushf
stos
jl
inc
and
mov
pop
sub
rcl
or
popa
jmp
ret
jle
adc
in
mov
inc
dec
addr16
xchg
cmp
and
jg
adc
mov
ljmp
add
enter
cltd
sub
sbb
push
cmp
add
xorb
jl
outsb
repz
lock
pop
or
hlt
adc
dec
xlat
push
fistps
ljmp
dec
jecxz
cld
icebp
dec
out
aas
mov
sarb
into
ljmp
repnz
js
repz
daa
addr16
push
push
sub
and
aad
cwtl
movb
pop
mov
push
ficompl
jecxz
gs
push
fstps
jecxz
jo
pop
mov
jp
cmpsl
jno
adc
dec
sbb
cmpsb
jp
add
xchg
cmpsb
scas
mov
loopne
ds
out
jns
push
and
loopne
mov
mov
movsb
fidivs
push
mov
out
orl
pusha
lea
and
xchg
int3
adc
stc
cltd
or
pop
xchg
insb
in
mov
mov
ds
dec
mov
lret
cld
mov
adc
mov
add
cmp
xor
adc
sub
int3
insl
sti
pop
cmp
sar
test
jbe
aad
lds
repnz
mov
test
pushl
addr16
inc
cli
dec
scas
lret
jle
and
testl
cmpsl
out
cmpl
fidivrl
mov
cld
xchg
out
push
sbb
inc
ds
loope
in
adc
into
cmp
or
sbb
mov
lret
movsl
mov
rolb
cmc
adc
lret
out
mov
mov
sub
test
mov
fs
popf
mov
mov
or
shlb
dec
leave
insl
lret
jae
add
popa
sti
jae
notb
adc
jne
lods
nop
ret
dec
sub
jg
in
or
mov
xchg
cwtl
ljmp
out
aaa
add
loope
adc
xchg
negl
std
add
push
add
fdivrs
xor
pop
rolb
in
mov
repz
xchg
sbb
sti
fildll
lods
mov
fstps
cmc
insb
out
mov
lea
mov
aaa
aas
lret
or
roll
inc
enter
mov
push
adc
and
dec
test
fistps
jl
mov
aaa
incb
adcl
imul
jb
xor
xor
lret
or
mov
pop
fs
lods
fsubs
lds
cmpb
sarl
test
mov
sbb
rcr
lock
and
inc
fsts
mov
out
lock
test
mov
mov
jge
out
cwtl
sbb
movsl
popf
out
cmp
adc
dec
les
fwait
int3
jmp
cmp
aas
pop
idiv
sbb
divl
ss
sub
and
call
xchg
test
jecxz
xlat
adc
sub
cmp
push
xchg
or
push
jns
push
bound
lcall
not
ds
aas
in
out
fidivrl
mov
dec
out
ds
movsl
popa
sub
lea
shrb
clc
mov
dec
test
stos
mov
xlat
test
out
cmpsb
dec
bound
jecxz
iret
cmp
sti
jnp
xlat
mov
aad
lock
leave
repz
adc
cmp
mov
dec
arpl
cli
pushf
or
ret
shll
sub
mov
pop
jmp
cld
in
xor
scas
ja
mov
fistps
fdivrl
scas
mov
xlat
dec
push
xor
xlat
shll
js
push
aam
jecxz
mov
cmp
mov
aad
and
dec
and
les
mov
push
adc
mov
out
insl
outsl
cmp
imul
pusha
lcall
insl
shlb
out
gs
inc
repnz
test
mov
cmpsl
js
inc
cli
leave
add
xor
popa
cmp
dec
push
nop
push
xchg
push
sahf
rcrb
ljmp
scas
lods
push
iret
pusha
add
mov
ret
push
adc
outsl
dec
add
push
inc
fs
mulps
mov
mov
outsb
lcall
bound
cwtl
mov
leave
ret
out
pusha
pushf
add
xchg
fildll
mov
sbb
into
lock
fimull
dec
data16
adc
push
call
cli
lret
sti
dec
pop
cmp
inc
push
fimull
and
test
andl
sbb
jb
push
xor
xorb
add
pop
in
shrb
and
imul
pop
loope
lock
roll
fs
enter
add
cmp
push
add
shlb
jmp
add
stos
mov
sub
leave
inc
xor
xchg
fldt
jmp
and
jb
jmp
mov
aad
dec
mov
xor
push
adc
aaa
add
rcr
dec
adc
push
insl
cmpl
xor
xchg
xlat
xchg
shl
or
push
pop
scas
lds
in
in
mov
or
sub
jp
sar
xchg
and
test
sub
push
mov
insb
jg
and
cmp
add
lods
wrmsr
xchg
mov
add
sub
out
das
imul
enter
push
sbb
mov
das
roll
cmp
cmp
sbb
mov
cli
cmp
inc
bound
jle
or
pop
int3
mov
scas
testl
jl,pt
packuswb
xor
push
jo
dec
in
adc
dec
lods
fwait
mov
pushf
jns
sahf
push
ss
push
mov
insb
imul
push
xchg
addb
dec
sbb
loope
in
scas
jp
roll
cmpb
jmp
imul
or
mov
mov
rorb
jecxz
pushf
imul
inc
mov
gs
xor
lret
mov
mov
lds
outsb
adc
xor
sbb
ljmp
add
lret
popf
aaa
pop
jne
hlt
jmp
xchg
leave
sub
pushf
scas
adc
cltd
dec
mov
jg
hlt
fs
xchg
push
push
mov
addr16
andl
jmp
cltd
ficomps
jle
js
out
dec
cmp
add
pop
cmp
or
fbstp
bndstx
mov
not
in
push
xlat
mov
mov
lahf
jge
loopne
add
out
fs
xor
jmp
dec
mov
fstps
ja
push
scas
lret
in
je
xchg
or
cmpsl
sub
data16
insb
xchg
cmp
push
out
pop
sbb
sbb
ret
fbstp
mov
int3
inc
xor
imul
cmpb
mov
pop
stos
bound
pop
rol
pop
sub
into
addr16
sbb
mov
fistl
inc
les
mov
mov
mov
pusha
push
mov
jmp
pop
adc
lock
adc
add
loop
push
fimuls
jno
jnp
xchg
scas
shll
jecxz
xchg
push
inc
jle
mov
push
fadds
incl
shll
inc
mov
test
cwtl
fistpl
orb
mov
repz
movsl
ret
push
out
outsl
outsl
push
imul
ret
lock
repz
push
mov
data16
imul
call
xchg
xchg
xor
push
in
popa
lea
mov
cwtl
out
pushf
mov
mov
imulb
push
decl
dec
pop
or
out
insb
jbe
int
add
arpl
xchg
lea
mov
mov
jg
mov
dec
adc
adc
adc
dec
dec
aas
cld
iret
and
std
out
lea
dec
lahf
jb
xor
cld
jle
xchg
pop
jmp
xchg
shlb
or
fstl
repz
daa
mov
pop
mov
pop
cs
pop
in
mov
xchg
test
sbb
sbb
js
insb
jne
lock
sub
sarl
add
ljmp
repz
add
dec
xchg
lret
inc
popf
fcoms
jge
inc
sub
inc
mov
push
mov
int
xchg
adc
call
ja
das
in
movsb
xor
mov
cltd
mov
fsubl
xlat
hlt
pop
inc
lret
cli
movsl
out
iret
inc
inc
mov
sub
mov
dec
and
ja
imul
pop
hlt
ret
sub
mov
fwait
cmp
add
cmp
mov
mov
push
into
neg
dec
bound
clc
fisttpl
pmaxub
mov
mov
leave
push
adc
inc
sahf
out
stos
les
mov
dec
jbe
mov
cli
or
cmp
push
dec
fsubl
fists
adc
ret
fldt
das
shlb
ret
push
mov
mov
xchg
inc
lcall
sub
adc
out
rorb
push
and
test
into
add
in
or
adc
xchg
ftst
push
xchg
inc
xchg
push
mov
into
jge
push
shlb
cltd
jns
jb
cltd
xchg
shl
sub
or
pop
aam
outsb
jge
je
pop
in
cmp
jle
shrl
test
dec
adc
push
xchg
loopne
fadds
mov
sahf
pop
nop
mov
shr
mov
jg
ja
xor
divl
mov
ljmp
sti
jb
scas
push
mov
sub
fistpll
mov
adcl
das
ss
sub
dec
xor
test
cmp
call
mov
test
adc
mov
int
ret
add
mov
mov
aas
insl
ss
jae
ret
xor
pop
mov
push
hlt
call
cli
rorl
mov
sbb
sub
push
lahf
push
and
cltd
sahf
or
jl
shl
cwtl
aas
sub
outsl
and
imul
jno
push
movsl
repnz
cmp
cli
lds
dec
cld
xchg
add
push
mov
cmc
xchg
mov
loope
ret
jp
sbb
dec
mov
repnz
xor
and
jbe
jb
xchg
clc
push
push
mov
sub
push
cli
imul
in
inc
sti
adc
jno
scas
pop
push
shrb
jns
add
inc
cs
outsb
inc
stos
xor
stos
push
ret
pop
inc
jno
or
xchg
movsl
test
movups
xchg
cmp
pop
imul
js
fisttps
xor
inc
jp
lods
sub
idiv
xor
in
xchg
cs
ret
rcll
adc
inc
xchg
sbb
arpl
mov
push
test
add
ja
sahf
out
lret
scas
jmp
mov
les
pushf
js
lret
cs
xor
mov
lret
sub
mov
lea
xlat
aaa
sub
jmp
xor
imul
icebp
out
mov
in
sub
lret
cmp
adc
std
lods
pop
dec
clc
mov
loop
cmp
inc
pop
mov
pop
lret
jo
nop
pop
mov
mov
shrl
mov
add
rcr
pop
xchg
xchg
xor
add
mov
arpl
sub
mov
inc
aad
xchg
call
int
dec
enter
push
or
mov
jno
pop
aam
mov
xor
add
adc
insb
push
orl
inc
enter
adc
xor
mov
mov
and
jmp
aad
test
xlat
fisttpl
push
ret
into
in
dec
push
cmc
sub
or
aad
test
xor
rolb
or
and
xchg
loop
cwtl
gs
add
dec
sub
dec
or
stos
imul
aas
xchg
mov
cmp
inc
dec
mov
push
pop
sub
mov
sub
inc
jno
sbb
and
aad
comiss
int3
leave
push
inc
xor
or
xor
cmp
fdivl
adc
sarl
imul
fnsave
dec
inc
mov
js
cmpsl
add
cld
shrl
jbe
gs
pop
dec
cmp
test
adc
cmpsb
jmp
ret
mov
arpl
pop
std
inc
test
xchg
shrl
push
dec
mov
xor
push
ret
pop
lcall
adc
arpl
int
pop
jmp
icebp
adc
mov
out
ret
fdivrl
cmp
outsb
popf
mov
imul
insl
aad
leave
mov
mov
sbb
dec
ljmp
in
inc
pop
into
test
test
rorb
and
xorb
fnsave
mov
push
sub
scas
lds
push
push
sub
add
sti
mov
add
cmc
stc
push
dec
sub
pop
xchg
icebp
shr
ja
data16
call
iret
stc
pop
or
cmp
arpl
sahf
repnz
dec
inc
add
push
fwait
mov
cld
mov
cli
and
pop
mov
cmp
or
xor
scas
xor
cmp
js
add
negb
je
lea
push
in
decl
je
test
cmp
addr16
test
mov
xor
popa
iret
arpl
xchg
addr16
mov
adc
loop
or
sbb
sti
ja
mov
xor
push
cmpb
fcmovnb
mov
mulb
inc
adc
fstpl
or
add
sbb
sub
aad
fwait
adcb
cmpsl
jae
out
popa
loope
out
push
and
push
sub
icebp
add
icebp
push
es
scas
das
rcrl
filds
mov
push
pop
mov
inc
fisubs
ja
and
cmc
inc
inc
jo
mov
lcall
jp
nop
sub
xor
test
outsl
add
sub
adc
mov
sub
lcall
xchg
sub
ucomiss
lret
mov
and
cmp
lods
jge
add
xchg
fstl
fsubr
pop
jecxz
jl
mov
int
ds
jl
test
jp
jp
inc
cmp
repnz
dec
sub
pop
adc
inc
xchg
clc
or
enter
in
mov
jae
inc
pop
imul
and
fs
fst
cmp
js
cmp
jp
std
ljmp
xlat
mov
mov
inc
lods
sbb
jp
xchg
stos
sbb
dec
clc
and
out
jge
jnp
jbe
or
sbbl
rcrl
xchg
mov
add
pop
pop
pop
mov
testl
inc
or
rol
inc
lret
aad
pop
mov
inc
xor
push
imulb
add
out
xchg
lcall
push
imul
pop
loopne
jle
mov
ds
xchg
inc
pop
pop
repz
fisubrl
out
add
cs
adc
sub
sub
jmp
test
xchg
cmpsl
stos
aaa
sbb
sub
pop
int
outsb
or
dec
cmc
repnz
inc
mov
mov
iret
and
push
push
inc
pop
xlat
rorb
adc
mov
sahf
push
pop
repz
or
jno
adc
dec
fnstsw
sub
sti
xchg
push
pop
dec
xlat
fstpl
xlat
adc
inc
xchg
gs
out
sub
xor
mov
test
cmp
and
insb
arpl
mov
jbe
xlat
dec
add
xchg
mov
mov
adc
mov
aam
mov
xchg
cli
mov
mov
dec
adc
and
leave
jp
fdivs
sbb
movsb
sbb
dec
sbb
push
ljmp
sbb
xor
out
fcomps
xchg
push
xchg
jmp
arpl
xchg
adc
stc
dec
test
cmc
or
lcall
push
cli
imul
mov
push
rorb
adc
imul
dec
push
mov
in
xchg
mov
sbb
ss
lock
outsb
push
fists
lods
mov
scas
pop
movsl
inc
in
pop
push
test
add
mov
enter
adc
test
lds
dec
lea
scas
movsb
cmpsb
xchg
out
cltd
push
cli
xchg
push
lds
mov
add
clc
sub
fldcw
xchg
in
or
xchg
xlat
pop
test
stos
repz
ja
and
enter
pop
insl
and
push
ret
leave
add
push
ja
shlb
mov
cld
ja
dec
mov
in
push
lret
rcr
test
sahf
sbb
nop
mov
out
xor
jns
mov
or
gs
xchg
jge
inc
clc
fs
addr16
pop
mov
cmp
xchg
cld
jecxz
sub
mov
mov
pop
mov
jo
and
dec
lea
add
xchg
dec
or
mov
popa
pop
sbb
scas
arpl
lds
bound
add
bound
cmpsb
xchg
xchg
int
scas
lret
inc
push
pushl
cmp
enter
addr16
cmp
adc
add
repnz
outsl
arpl
cltd
jne
out
pop
xchg
jg
dec
xchg
int3
divl
test
roll
rclb
mov
ret
daa
sbb
pushf
jnp
push
repz
and
lret
icebp
js
test
divl
mov
rcrl
pop
add
out
lret
in
fs
sbb
out
jmp
mov
idivb
xor
cmpsb
addr16
jbe
fld
out
lret
or
push
and
dec
out
sbb
cmpsl
push
push
inc
lds
inc
cmp
loopne
add
xor
cmp
pop
bound
or
call
fiadds
pop
call
xchg
push
mov
test
dec
push
add
test
adc
mov
jmp
ljmp
or
cmp
and
aad
mov
sbb
rorb
jno
and
sbb
dec
push
in
lock
sub
jge
call
add
test
mov
xchg
jge
test
adc
cli
inc
inc
out
shll
xchg
jnp
mov
outsl
ror
add
sub
das
cmp
fldcw
and
aam
pushf
stos
ss
xchg
mov
pushf
add
cmc
ret
xor
cmp
mov
lods
gs
aas
adcb
adc
je
xchg
sub
lods
repz
das
aam
addr16
cmp
add
shrb
repnz
sbb
jge
jne
jnp
mov
mov
and
mov
xor
and
fnstcw
xchg
or
mov
enter
mov
xor
ret
inc
and
mov
pusha
sbb
es
sti
sbb
aad
mov
mov
clc
mov
ds
jns
push
fldenv
pop
sbb
js
aam
and
inc
std
push
pop
xlat
mov
lock
in
and
in
xchg
and
arpl
mov
popf
cmp
enter
push
std
into
sub
jg
add
inc
cld
lcall
enter
mov
mov
sahf
in
jo
enter
add
popf
jo
xchg
add
lods
push
push
pop
iret
outsl
popf
fimull
dec
test
ret
bound
loope
les
mov
int
mov
xor
clc
sub
sbb
out
push
gs
add
test
and
std
add
sbb
inc
xor
jae
fimuls
xchg
sub
ss
test
or
and
scas
pop
int3
jnp
lret
jbe
addb
ss
repz
loopne
jae
sar
lods
dec
loop
mov
and
inc
and
arpl
xchg
scas
mov
popf
push
add
sti
jne
imul
test
mov
mov
shll
imul
jmp
orl
lahf
out
xchg
fcoms
xor
push
fwait
test
xchg
ljmp
adc
push
sbb
addr16
jne
mov
hlt
pop
mov
call
mov
daa
imull
xchg
push
xchg
outsw
outsb
mov
pushf
out
cmp
icebp
ljmp
mov
in
lock
xchg
adc
in
jmp
into
xlat
inc
ljmp
testb
mov
or
scas
sub
and
sbbw
js
sub
xchg
or
hlt
shll
test
int
cmpsb
out
xor
test
in
sub
cmp
icebp
add
pusha
mov
pop
mov
and
aaa
xorb
leave
outsb
jmp
push
repnz
xor
sarb
pop
bound
inc
sbb
outsb
inc
xchg
add
gs
inc
fisubl
xor
or
in
adc
and
stos
add
add
aam
imul
dec
pop
pop
imul
and
inc
sahf
cmp
dec
and
data16
inc
mov
and
lret
enter
ret
sahf
sbb
inc
inc
push
jbe
add
xor
and
xchg
inc
adc
cmpb
lds
repz
jp
aad
pop
leave
jp
mov
mov
je
jo
push
or
pushf
sbb
dec
push
rclb
pop
sub
pop
sub
or
movq
pop
outsb
jb
popf
mov
mov
xchg
cmp
shll
dec
pop
aas
out
js
jae
mov
jp
out
push
xchg
push
aam
mov
das
sarb
inc
jbe
push
dec
enter
adc
or
adcb
shlb
xchg
mov
inc
and
movnti
adc
pop
and
out
into
or
sub
cmp
stos
sbb
or
mov
ret
xchg
lret
ljmp
cmc
push
andl
pop
int
push
fmuls
dec
test
cmp
clc
pop
mov
xchg
ja
cmp
dec
fdivs
push
scas
or
in
xchg
js
outsb
jbe
int3
dec
pop
add
or
jae
push
in
xchg
gs
imul
fidivrl
pusha
popl
push
ret
jecxz
push
fwait
test
sti
ficomps
dec
in
into
test
sarl
mov
push
in
ret
cmp
xor
clc
mov
clc
sub
ja
addr16
loop
test
push
xchg
jns
inc
mov
jbe
mov
into
das
ljmp
mov
in
into
test
fists
ja
fndisi(8087
pop
mov
shlb
jnp
xchg
push
int
sbb
jnp
negb
fs
mov
cli
ret
cld
and
sbb
cmp
cmc
movsl
mov
push
ret
add
fcoml
inc
outsl
daa
xchg
sub
inc
pusha
mov
popa
ss
movsb
out
outsl
test
pop
fs
push
andl
lods
mov
push
jne
cmp
mov
mov
packuswb
push
sub
ljmp
hlt
cmp
out
cmp
inc
lea
add
add
stos
fcompl
aam
jb
icebp
ss
sbb
push
aam
lock
repnz
dec
mov
test
pop
movsb
cs
push
jnp
les
test
scas
xor
pop
ret
jp
cmpsb
jp
movsl
sbb
loopne
pop
lock
ret
xchg
push
sbb
or
sub
movsl
xor
in
mov
xchg
jo
stos
in
mov
and
divl
imul
adc
mov
ret
xchg
lahf
push
or
aaa
adc
outsl
loope
jae
test
push
jg
push
cwtl
and
call
sar
mov
scas
xchg
inc
bound
sbb
mov
or
popa
push
sbb
test
nop
or
stos
xor
sbb
cwtl
pop
ds
and
inc
push
test
shlb
sbb
add
data16
pop
std
mov
aam
pop
adc
jg
mov
sub
loopne
ja
jno
jb
xchg
add
dec
jnp
rorl
aam
sbb
or
rol
shlb
fiaddl
cli
sbb
mov
in
or
mov
dec
loope
jbe
mov
int
mov
jg
push
outsl
sbb
dec
and
fcoms
pop
insl
lock
xchg
ss
or
jns
cltd
pop
or
xor
int3
push
inc
subl
fcompl
arpl
sbb
sahf
aam
roll
xchg
jns
push
ss
xchg
dec
sarl
mov
lods
mov
jmp
mov
outsl
ficompl
mov
es
movsb
dec
jle
mov
and
adc
sbb
add
in
out
mov
out
stos
cmc
clc
adc
fiaddl
jnp
fwait
jo
or
scas
out
std
inc
and
cld
xchg
mov
in
sahf
dec
jbe
stos
movsl
outsl
lods
sub
iret
and
test
fnsave
inc
stos
sbb
ds
cmp
not
sbb
adc
pushf
lds
lods
mov
mov
jecxz
cmpsb
dec
idiv
pop
lret
or
or
xchg
jbe
jmp
cld
enter
pop
add
aas
test
push
mov
push
push
push
ret
rcll
mov
imul
call
lods
lahf
cwtl
adc
rorl
in
and
mov
pminsw
ret
mov
or
stos
mov
cmpsl
iret
jg
sub
pop
adc
negb
mov
repnz
and
pop
insb
or
dec
pop
ljmp
xor
xlat
xchg
in
insb
and
andl
sbb
stos
fildll
dec
loope
test
jne
sbb
enter
jne
mov
jns
add
test
add
mov
jecxz
sub
inc
jmp
sarl
mov
out
repz
xchg
call
cmpsl
jg
fldenv
std
stos
mov
inc
hlt
jle
fldl
pop
insl
lods
idivb
out
je
pop
inc
push
mov
mov
fstsw
push
sbb
adc
inc
cmpb
mov
repz
sbb
test
sub
ja
sub
push
stos
enter
jne
xor
ret
pop
lds
out
cmp
push
jp
dec
cltd
jmp
vminsd
pop
jb
push
movsb
mov
and
lea
xchg
mov
aas
jns
mov
leave
pop
in
jg
xchg
pop
add
sbb
jbe
mov
mov
adc
rorl
dec
cmpb
cmp
push
icebp
push
xchg
mov
mov
push
sbb
int3
cmpb
adc
sub
mov
sbb
stos
popf
or
repnz
out
pop
mov
movsb
sarb
dec
xchg
mov
push
lods
fistps
lret
and
nop
testb
lea
pop
mov
lahf
jp
pop
push
mov
push
test
stc
and
jp
xchg
mov
loopne
arpl
call
mov
gs
daa
ss
call
into
in
jo
mov
bound
in
shl
push
test
jns
icebp
push
mov
xchg
jp
dec
and
inc
mov
dec
pushf
sti
mov
movsb
mov
xlat
rcr
daa
enter
js
mov
xchg
inc
stc
scas
xor
nopl
mov
arpl
sbb
sbb
and
dec
jb
inc
addr16
cld
stc
inc
es
cmp
mov
adc
roll
and
es
movb
fcmovne
sbb
cld
out
pop
lahf
or
cmp
out
ljmp
sub
cs
push
pop
shrb
sbb
push
sbb
mov
das
fisttpll
sti
pop
adc
sub
sbb
jae
jne
insb
les
push
ljmp
and
and
and
cli
test
xor
mov
popf
inc
inc
int3
icebp
enter
ss
and
sbb
pop
mov
movsb
ljmp
sar
xor
outsl
mov
int3
insb
jns
xlat
xchg
fisubs
xor
loopne
dec
stos
mov
ret
inc
insb
pop
out
mov
rorb
jns
aam
loopne
sbb
iret
ret
jecxz
iret
fwait
aad
lea
cmpsl
scas
xor
hlt
push
jmp
add
xchg
scas
jmp
fisubs
jbe
test
in
jle
mov
or
push
popa
mov
jb
decb
or
adc
jnp
fcmovbe
push
mov
insb
out
cmc
sub
mov
loopne
push
popa
dec
mov
push
sahf
mov
stc
lahf
xchg
add
gs
push
fisubs
std
out
ds
shll
jg
sarb
dec
dec
sub
pop
test
or
pop
cmp
xlat
xchg
push
inc
shr
sub
xor
mov
into
shlb
xorl
mov
mov
aaa
ja
fisttpl
jbe
mov
test
lret
add
insb
inc
test
mov
jecxz
sbb
inc
cmp
jno
mov
ficompl
push
data16
shrb
mov
cmp
dec
sahf
adc
mov
test
data16
inc
xchg
dec
add
xor
add
jae
pop
push
jno
bound
xorl
sub
mov
stos
fnstenv
push
loopne
repz
popl
in
add
aas
push
arpl
repz
mov
adc
xor
sbb
or
jno
loop
push
in
xchg
ret
push
push
adcl
fsubp
negl
pop
loop
push
or
mov
and
repz
pop
dec
test
dec
dec
aaa
push
dec
push
sbb
xor
xor
scas
or
jb
xor
sti
push
cmp
push
repnz
cmpsb
hlt
aaa
push
sbb
div
iret
adc
data16
call
clc
cmp
dec
arpl
stos
test
adc
jl
ljmp
pusha
inc
mov
pop
stc
mov
pushf
add
xchg
pop
in
in
loop
lock
lcall
fldcw
idiv
lea
add
int3
jne
pop
sahf
pop
xor
add
xchg
fldl
mov
lods
cmc
inc
sahf
js
incb
xchg
xchg
mov
mov
fwait
push
adc
jp
adc
push
add
les
push
or
cmp
push
rorb
call
fisubs
movsb
jne
pushf
jmp
mov
orl
adc
lock
cmc
stos
cwtl
mov
stos
scas
xchg
js
xor
inc
insl
cmp
inc
push
in
js
mov
out
xchg
icebp
repz
outsl
loopne
les
sbb
repnz
jo
test
nop
push
int3
mov
mov
int
scas
push
test
ds
jns
fwait
jmp
imul
or
and
outsl
pop
lret
addl
mov
ljmp
into
test
xor
enter
ficoms
movsl
push
cmp
xchg
out
dec
dec
xchg
aas
rcll
inc
dec
clc
es
mov
jne
test
fscale
rcr
push
mov
xor
push
pop
rcl
inc
subl
imul
jmp
bound
adc
ret
adc
mov
out
loopne
lcall
repz
push
push
mov
inc
das
dec
mov
mov
stos
push
pushf
icebp
popl
jb
scas
pop
std
enter
addr16
fcomp
jns
aam
ret
dec
ja
mov
mov
pusha
or
leave
es
loop
outsl
ds
lea
xchg
lcall
pop
jle
push
or
adc
aad
cli
jae
pop
cwtl
fstps
es
mov
gs
sub
or
mov
ljmp
fadds
pop
inc
push
push
fidivrs
mov
in
leave
add
popa
cmp
inc
arpl
sub
adc
test
adc
push
dec
mov
adc
push
sahf
cltd
das
aas
fcomps
addr16
mov
nop
or
fimuls
hlt
lret
push
orl
or
ds
fnstcw
push
inc
ret
pop
mov
add
xchg
inc
sub
lds
jnp
xchg
mov
movsb
ss
push
mov
cmp
cli
inc
cmp
movsl
sarl
add
jecxz
push
pop
sub
cmp
movsl
inc
cmpsl
cmp
and
sub
in
push
outsb
sub
outsb
add
adc
xchg
andb
jecxz
and
icebp
mov
enter
loop
outsb
ja
xchg
bound
scas
daa
adcb
xor
inc
adc
das
adc
add
rcrb
adc
dec
add
pop
adc
out
out
mov
jbe
das
ja
pop
xchg
add
add
test
sub
jmp
nop
fs
nop
cmp
sub
pop
xor
xchg
and
lret
cmp
or
insb
test
in
mov
int
xor
repz
sarb
jge
data16
leave
stos
aad
sti
push
add
mov
in
cmp
insb
or
dec
jb
or
lods
fnsave
test
xchg
pusha
dec
data16
xor
test
push
stc
ja
aad
pushf
pop
jno
mov
stc
mov
les
fwait
jl
mov
jb
jecxz
dec
lret
mov
and
loope
xor
popa
mov
sub
adc
call
sub
mov
repnz
xchg
inc
inc
test
or
popa
aaa
das
and
iret
add
add
push
jne
pop
mov
jp
rclb
push
sbbl
int
orb
das
andl
mov
repnz
push
and
xlat
data16
mov
lods
dec
mov
sub
ss
outsb
fidivrl
adcb
out
cmpsl
testb
dec
push
mov
mov
jno
loope
mov
data16
xlat
fsub
call
push
sbb
mov
xor
stos
andb
lea
clc
mov
xor
push
lods
shl
xchg
arpl
xchg
xor
hlt
icebp
inc
test
repnz
mov
mov
out
jae
in
mov
add
andl
push
js
push
and
jl
cmpsl
sahf
fs
je
daa
adc
push
fcmovne
paddq
adc
xor
xchg
pushf
movsb
in
loope
sarl
mov
and
ds
iret
imul
or
push
pop
jbe
jecxz
dec
push
jo
cmp
mov
movsb
int
pop
cli
popf
cmp
pop
fsts
push
hlt
imul
mov
out
mov
cmpsl
sbb
add
daa
jns
mov
add
int3
mov
fistps
xchg
adc
mov
push
pusha
adc
jge
dec
xor
or
test
rcl
add
mov
cmp
xor
dec
jnp
leave
cmpsb
jmp
and
mov
je
xchg
inc
xlat
testl
sbb
push
sub
pop
sub
xor
test
jo
mov
sti
mov
mov
push
dec
std
jo
shll
into
push
lods
jg
cmp
ljmp
cli
dec
sub
in
jmp
into
ljmp
inc
pop
in
es
test
in
push
scas
js
pusha
scas
scas
mov
xor
pop
into
and
push
popa
add
push
mov
add
mov
mov
insl
cmp
fsubr
mov
jmp
sbb
mov
mov
hlt
xchg
rcr
push
adc
gs
into
adc
dec
xor
hlt
mov
xor
test
add
or
call
jo
xchg
xchg
shll
out
pop
outsb
mov
xor
movsl
cmpsl
sbb
jmp
es
nop
sub
cmpsl
sbb
and
sub
jecxz
stos
push
push
stos
jecxz
test
mov
pop
pop
jbe
testb
and
popf
sbb
jl
xchg
test
dec
into
cmpsl
sub
mov
repnz
xor
ljmp
mov
or
jle
es
cld
data16
rol
push
ds
stos
fisubrs
bound
lds
jae
xor
mov
shlb
dec
xor
pop
jl
inc
dec
repnz
ret
push
cltd
mov
js
arpl
and
call
daa
lahf
popa
movsl
dec
or
jnp
stc
sub
xor
sub
xor
in
pusha
mov
push
or
test
pandn
mov
adc
outsb
mov
dec
js
cwtl
mov
pushl
mov
aaa
dec
outsb
lahf
arpl
xchg
mov
and
or
stos
push
and
or
cmp
out
stos
das
dec
adc
push
aad
xchg
insl
add
push
cmp
push
sub
ds
cmp
jns
xor
insb
push
push
dec
icebp
scas
or
add
lret
mov
test
ret
jmp
add
lods
and
jmp
inc
jg
mov
pop
add
xchg
jmp
cli
push
push
and
xchg
das
xlat
incl
inc
daa
xchg
hlt
notb
pop
xor
mov
lret
jmp
idivb
mov
dec
outsb
scas
cmp
out
mov
jb
push
sub
sbb
mov
pop
pop
cld
pop
pusha
fs
xchg
adcl
pop
xor
mov
repz
push
mov
data16
push
pop
out
call
mov
int
dec
push
xchg
cltd
andl
scas
flds
pop
sarb
mov
dec
ja
imul
filds
mov
cmpsb
setg
sti
pop
jmp
jne
inc
sbb
jg
pop
cmp
imul
inc
adc
adc
outsb
lds
or
bnd
sub
or
dec
ds
scas
push
mov
ss
lods
test
sbb
sub
out
fidivs
pushf
sub
int3
xlat
icebp
repz
mul
or
adcb
push
nop
push
add
dec
xchg
adc
imul
ja
shlb
sbb
call
mov
mov
pop
and
imul
ds
inc
cmc
adc
push
repnz
or
and
cmp
loop
orl
inc
mov
mov
cwtl
inc
sbb
jle
test
out
add
std
sbb
push
repz
clc
add
add
mov
jmp
in
mov
xor
adc
and
imul
outsl
test
xor
mov
mov
ljmp
sar
rolb
mov
pusha
pop
bound
cmp
std
rorl
xchg
pop
mov
mov
cmpsl
inc
mov
jne
and
es
mov
fadd
das
push
std
enter
pushf
jae
or
inc
imul
and
shr
jnp
lahf
cmp
dec
clc
outsl
xor
mov
call
mov
pmaddwd
xor
idivl
mov
ret
push
push
mov
cmp
push
int3
pop
mov
das
sahf
int
mov
loope
xchg
lahf
js
adc
push
pop
rol
mull
mov
leave
inc
ret
or
inc
add
pop
andb
mov
xchg
adc
jl
push
js
mov
mov
sbb
push
shlb
or
popa
dec
cs
sub
jg
insl
jo
inc
pusha
jmp
mov
sbb
shlb
rolb
in
insl
push
out
ret
sbb
sbb
fiadds
mov
mov
mov
sbb
outsb
outsb
out
arpl
pop
add
sub
mov
aaa
fsincos
int
mov
int
jecxz
cwtl
lcall
adc
sbb
enter
push
lret
dec
jne
mov
push
jne
add
xlat
clc
pop
jo
and
mov
jge
mov
and
test
loop
leave
leave
sbb
aam
pushl
push
test
sub
push
sti
sub
cmpsb
insb
int3
mov
inc
or
push
out
enter
cmc
jle
push
addl
js
pop
es
test
aaa
mov
outsl
jl
stos
pop
xchg
or
jb
mov
add
fnstcw
xor
in
sub
repz
lahf
sub
sub
mov
and
arpl
xchg
stos
insl
test
imul
inc
fstl
es
out
sbb
and
pop
pop
mov
rol
mov
es
aaa
jne
in
pop
sbbb
fnsave
mov
xor
nop
xor
push
adc
test
dec
mov
fcoms
in
scas
frstor
jne
adc
fldenv
les
pop
push
mov
rcrb
cmp
fmuls
cmp
into
cmpsl
adc
xor
scas
add
jnp
cmc
mov
sbb
add
int3
cmp
or
xchg
jmp
out
in
call
sbb
jae
cmovns
dec
popa
rcl
out
imul
mov
iret
adc
jecxz
pushf
add
ja
fldt
and
add
adc
mov
mov
inc
cmp
ret
loope
loop
or
mov
mov
arpl
mov
in
rorl
add
mov
lea
jno
bound
data16
add
or
xchg
mov
aad
jecxz
xchg
loopne
lods
fmull
mov
loop
jne
add
push
push
fbstp
sub
push
pop
lds
ds
insl
dec
push
es
gs
test
enter
out
mov
adc
xchg
cmp
lock
mov
cmp
mov
jmp
shl
pop
xchg
add
jns
cmp
and
sbb
mov
scas
pop
out
nop
cmp
sbb
sbb
cmpsl
mov
or
add
in
inc
test
shrb
adc
mov
std
mov
cmp
cld
jp
mov
enter
bound
int
pop
or
cwtl
jo
out
pop
test
mov
loopne
mov
jb
mov
scas
jbe
aas
jb
lret
sub
or
stos
xchg
das
iret
roll
adc
imul
mov
xchg
in
jge
pop
sub
xor
push
mov
imul
push
shll
or
xlat
cmp
das
lret
pushf
cli
add
inc
enter
in
fnop
mov
adcb
dec
pop
rcrl
and
mov
pusha
ror
push
testb
mov
mov
inc
jmp
adc
mov
jge
stc
shll
in
or
test
push
sbb
in
xchg
sub
jb
mov
jmp
xlat
dec
push
xchg
imul
insl
jecxz
push
or
aam
push
jecxz
int
pop
repz
cmp
jmp
adc
pop
add
mov
xchg
adc
sub
repz
xchg
sbb
popa
add
push
or
hlt
xor
mov
jle
adc
adc
push
lods
mov
push
add
inc
fisubrl
ret
push
fdivrs
add
dec
push
dec
lahf
dec
gs
sub
cmp
xor
repz
je
push
dec
or
dec
xlat
fwait
xlat
mov
push
sub
in
push
cmp
dec
add
pop
les
insb
rolb
sbb
xchg
cmc
push
pop
adc
adc
aas
nop
das
and
lret
repnz
out
mov
insb
aam
aam
add
movsl
mov
jg
icebp
sub
sbb
pop
ret
mov
mov
loope
cmp
out
nop
sbb
hlt
scas
sbb
enter
or
jb
dec
andb
push
xor
mov
test
mov
repz
sub
push
mov
outsb
adc
add
mov
xchg
inc
inc
mulb
aad
xchg
daa
insl
shrl
push
add
dec
xchg
mov
pop
pop
jg
cmp
or
out
and
stos
rcrl
stos
in
dec
lea
mov
cltd
add
das
lea
fs
pop
adc
std
dec
fildl
push
sbb
scas
cmpsl
inc
mov
aam
xlat
push
frstor
xlat
mov
cld
testl
loop
inc
add
sbb
jb
jge
popa
inc
pusha
aaa
jae
push
mov
js
cmp
out
mov
data16
adc
stos
mov
popa
and
shr
sub
pop
lea
cmpsl
test
mov
in
add
std
int3
push
mov
push
movb
out
cmc
xchg
adc
cmpsb
test
cli
mov
jae
add
idiv
and
mov
and
arpl
or
jp
movsb
movsl
xchg
clc
or
mov
aaa
fiaddl
add
and
insl
cwtl
js
xor
in
inc
or
xor
mov
shr
mov
jl
inc
add
sub
lea
and
mov
shlb
xchg
inc
xor
xor
out
movsb
xor
fiaddl
or
or
jo
inc
or
mov
insl
fwait
lea
jl
daa
es
enter
mov
xchg
test
push
addr16
add
fwait
adc
push
mov
xchg
dec
xor
pop
fs
push
clc
shrb
loope
adc
aaa
stc
mov
inc
lock
div
je
dec
pop
pusha
flds
pop
mov
fwait
lea
nop
outsl
cmpsb
jg
fwait
push
push
out
sbb
scas
mov
push
sbb
adc
lahf
out
sub
outsb
jge
popa
inc
sbb
outsl
js
lds
add
in
xor
pop
lcall
xchg
jno
mov
jnp
shlb
jl
jge
pop
dec
add
mov
sub
mov
push
mov
fildl
xchg
popa
inc
mov
cli
add
nop
jmp
sub
mov
dec
xchg
enter
jle
and
xor
movsb
or
arpl
cmp
movsl
scas
fndisi(8087
cwtl
fiadds
push
push
or
jl
push
push
sbb
jnp
jns
xor
sub
xchg
sbb
lods
sub
and
sub
imul
jl
shl
sbb
shrb
fdivrp
loopne
aam
out
mov
mov
sub
and
and
dec
and
dec
roll
xor
imul
inc
or
aad
in
mov
not
cli
ja
lahf
fwait
mov
mov
sbb
in
scas
jle
sub
cmp
jge
das
inc
mov
pop
mov
adc
lods
js
push
cltd
adc
bound
push
mov
shlb
push
jmp
dec
jb
jle
div
adc
leave
jnp
cli
sarb
jno
jecxz
lahf
das
lret
jae
xorl
shl
sbb
xchg
sbb
jnp
or
pop
push
cs
jbe
pop
xchg
jnp
xor
aaa
push
or
pop
adc
inc
mov
cmp
sbb
cmc
mov
cltd
pushf
test
mov
rorl
push
inc
add
push
enter
mov
loopne
jns
sub
push
cli
mov
mov
lds
arpl
int3
pop
or
hlt
lods
dec
jp
dec
test
cmpsb
shrl
xchg
repnz
mov
add
mov
out
push
arpl
sbb
stos
jne
dec
and
mov
xchg
push
xlat
push
das
sahf
cmpsb
and
popf
dec
aas
std
or
fisttpll
mov
popa
add
sub
push
sti
orl
inc
shl
nop
mov
push
xor
cmp
add
pushf
xor
sti
in
lea
jne
dec
sub
or
sub
js
rcrb
cmp
sub
fwait
dec
imul
and
mov
outsl
push
dec
pop
imul
inc
xchg
ja
inc
jbe
xchg
mov
loope
mov
xor
into
outsl
pop
cs
push
pop
fstps
psubb
push
push
push
cmp
cmp
repz
cwtl
inc
fildl
jb
shrl
aaa
jmp
mov
ds
and
xchg
cli
or
jecxz
shl
mov
ret
mov
lea
bound
sub
dec
add
bound
pop
pop
in
mov
in
data16
dec
mov
cmp
test
pop
pop
int
cli
pop
in
dec
das
lret
jne
pop
scas
xor
jmp
push
shl
in
pusha
mov
jae
sbb
mov
insb
pop
push
in
outsb
mov
sbb
dec
pop
in
aaa
daa
jae
cltd
pop
popa
nop
mov
ljmp
dec
test
in
mov
mov
or
test
cwtl
inc
imul
jge
mov
shll
mov
pop
dec
test
idivb
pop
repz
sbb
mov
push
pop
cwtl
loope
adc
loop
jo
enter
push
cmp
out
andb
imull
addl
cwtl
stos
repz
gs
dec
je
lcall
and
fadds
jbe
clc
inc
jbe
in
push
and
xchg
in
repz
or
push
int
addr16
dec
mov
data16
mov
movsl
jmp
fucomp
jb
sub
sbb
jnp
std
mov
push
test
dec
sub
inc
insb
out
ret
push
inc
in
cmp
gs
ret
dec
fadds
ss
cmp
stc
iret
adc
in
or
sbb
and
jmp
push
push
pop
inc
out
popf
pop
lods
or
insl
mov
adc
sarb
ret
arpl
loope
xor
cwtl
jg
sbb
stos
out
ja
pop
mov
xlat
rorl
mov
push
imul
mov
dec
adcl
pop
gs
mov
test
gs
jge
mov
add
ss
and
jmp
inc
enter
stos
xchg
inc
pop
in
add
loopne
orb
dec
pop
ret
sub
ret
dec
jmp
repnz
sub
dec
les
test
movsb
jmp
mov
mov
add
jecxz
fwait
push
or
or
cmp
or
sahf
outsl
ds
lret
sub
out
push
icebp
push
jl
cmpb
movsl
pusha
aaa
and
popl
jmp
nop
cmc
cltd
pop
es
iret
ret
cmpsl
jle
push
mov
pop
sahf
mov
fwait
stos
push
xchg
sti
dec
inc
pop
wbinvd
xor
gs
bnd
cmp
lods
les
cmp
jmp
cltd
mov
cmpb
jmp
add
sub
fst
stos
cli
out
aas
sub
mov
adc
cmp
xchg
stos
fadd
ret
mull
add
cmp
push
rol
into
lret
lods
ds
xchg
aam
repz
addr16
lcall
jl
sub
mov
test
xchg
fnstcw
sbb
icebp
push
negb
pop
das
scas
xorb
dec
das
inc
xor
data16
xor
aaa
shlb
jb
dec
es
jecxz
test
jge
pop
dec
push
mov
lret
sbb
push
xlat
mov
roll
test
pop
pop
mov
cltd
inc
fimull
and
xor
arpl
loopne
jmp
sub
mov
xchg
ja
sbb
cli
cli
cmp
mov
sub
fisubl
sbb
mov
mov
add
mov
xlat
mov
sti
inc
xchg
lods
jge
jge
jae
stos
shr
aas
imul
aam
fsubp
pop
mov
jb
in
mov
stc
bound
cltd
dec
sbb
out
mov
mov
push
call
ficompl
in
jg
inc
jno
je
xchg
inc
xorl
stc
pop
in
aad
cs
add
imul
xchg
fimull
stos
sub
pop
in
icebp
insb
mov
icebp
mov
call
add
lret
mov
pop
sbb
jae
mov
outsl
adc
adc
sarb
decb
shlb
jmp
mov
popf
inc
fdivl
popf
pop
aas
sub
mov
pop
fdivl
fidivs
fstp
sbb
inc
jp
mov
jne
xor
in
loop
inc
test
xor
div
int
stos
loopne
adc
daa
and
adc
stc
js
adc
dec
and
sarb
pushw
cmpsl
mov
aam
jle
shrl
bound
dec
add
cmc
xchg
out
mov
push
push
jb
mov
add
imul
adc
mov
stc
outsb
leave
aad
xchg
scas
repnz
xlat
cs
pop
inc
mov
mov
cmc
dec
leave
pop
movsb
je
add
sub
xor
sbb
imul
cmp
add
mov
and
inc
mov
xchg
std
repz
fimull
jb
dec
adc
cmpsb
sub
in
mov
xor
sub
std
popa
cmp
mov
das
sub
in
xlat
sub
and
shl
cmp
pop
pop
jbe
push
sahf
stos
mov
dec
enter
push
ds
push
sub
cld
fs
flds
ud1
add
xor
ficoms
pusha
lahf
xchg
mov
mov
arpl
negb
sub
add
jb
fs
dec
pop
dec
fdiv
add
fwait
iret
in
dec
mov
adc
adc
push
int3
ffreep
je
mov
push
cmp
std
inc
rorb
in
xchg
lock
cmc
or
out
jmp
dec
pusha
les
sbb
jp
mov
or
mov
xor
pop
je
stos
sub
rcll
jl
mov
movsl
lret
xor
daa
lods
push
orb
fstps
or
in
in
mov
fwait
stos
pop
and
cmc
cmpl
push
rolb
insb
push
adc
in
subl
xchg
mov
cmp
pop
mov
cld
adc
xchg
stc
and
and
xchg
jecxz
sbb
pop
cmp
cmc
cmp
mov
in
dec
push
sub
cld
fnstcw
cmpsl
inc
iret
negl
aaa
in
sub
add
enter
mov
mov
jge
lods
mov
sub
xchg
jmp
test
sbbb
sti
mov
notb
aad
sahf
in
out
push
and
jbe
inc
ficoml
rorl
into
ret
sahf
mov
adc
int3
pop
mov
out
push
pop
xchg
adc
pushf
mov
cmc
sbb
mov
test
lcall
cmpsb
js
cmp
outsl
dec
aam
pushf
sub
adc
int
std
cmp
loopne
sub
stos
bound
xor
xchg
lret
push
call
scas
mov
xchg
pop
xor
and
mov
std
mov
sti
aam
pop
xor
mov
and
push
add
pop
cmp
xor
gs
or
mov
xchg
pop
and
adc
icebp
pop
and
test
fs
and
mov
loop
jno
stc
xchg
or
push
jl
push
pop
lea
jg
int3
sbb
clc
jmp
add
or
and
sub
mov
mov
sbb
xor
sub
dec
loope
push
mov
cmp
add
and
movb
dec
sub
jno
push
xlat
fsubrp
adc
mov
int
and
test
jb
pop
pop
mov
mov
mov
pop
push
mov
out
test
outsb
or
push
inc
xor
jmp
mov
das
cmp
mov
push
cmpsl
xchg
arpl
pop
dec
cmp
jbe
dec
fidivs
stos
inc
xor
push
inc
repz
out
stos
cs
flds
cmp
test
test
mov
mov
je
out
sub
xchg
out
sbb
lret
out
or
or
jecxz
aad
sub
or
cmpsb
sbb
add
lret
lds
sahf
push
psubw
ss
loope
rolb
pop
sbb
loopne
xor
dec
or
call
test
pop
inc
mov
cs
popf
loop
add
ss
dec
movsl
ss
jg
jno
mov
or
test
push
aas
and
sub
cmp
dec
fs
mov
fistl
mov
bound
mov
xor
fs
jns
ret
sbb
lcall
xor
jae
xchg
fsubs
cmp
push
pop
and
mov
mov
xor
pop
mov
and
mull
icebp
and
add
push
bound
fs
xchg
xchg
inc
push
dec
insb
push
push
jno
repnz
add
leave
jns
sub
jge
aaa
pop
adc
daa
stos
lods
and
pop
push
arpl
xchg
imul
push
inc
jle
test
pop
out
xchg
addb
cmp
mov
sbb
jle
out
pop
inc
add
in
dec
adc
mov
mov
bsr
add
rol
sbb
jae
popa
les
cltd
sarb
fisubrs
and
pop
xchg
jge
data16
mov
inc
es
das
cmp
pop
out
xchg
mov
in
xor
mov
iret
sub
or
lahf
aas
aaa
jle
ror
push
pushf
cli
jae
pop
pop
sti
adc
data16
and
xchg
adc
pop
fucomp
inc
add
decl
cli
jno
dec
test
cld
dec
mov
imul
out
bound
inc
xchg
cmp
xor
lret
mov
pop
les
push
aaa
pop
dec
ja
xchg
inc
pop
adc
mov
int3
ret
clc
sub
out
popa
hlt
jae
xor
scas
jns
mov
sbb
sbb
in
adc
iret
ret
bound
jmp
insb
mov
test
xchg
cmp
mov
ret
leave
mov
mov
inc
dec
sbb
and
adc
mov
aas
into
adc
sub
mov
xchg
sub
pushf
inc
loop
outsb
jmp
mov
sbb
push
cmp
shl
dec
js
divl
clc
xchg
dec
imul
seto
aad
pop
decb
subb
xchg
shlb
out
loopne
mov
sub
ffree
sbb
es
mov
test
cmp
imul
cmp
cmc
push
mov
pop
xor
mov
mov
pop
and
inc
xchg
adc
mov
leave
into
out
dec
inc
ds
imul
fldcw
sarl
in
icebp
sahf
into
and
sub
out
xchg
outsb
sub
imul
icebp
inc
ret
jnp
dec
dec
out
bound
push
push
xor
cli
jne
insb
stc
lret
mov
mov
leave
sbb
jns
add
aaa
into
adc
fwait
jo
data16
sub
inc
arpl
sub
lods
arpl
or
es
push
imul
test
leave
je
jno
mov
inc
push
cmpsb
add
or
inc
xor
in
ret
pushf
jle
xchg
dec
fbstp
sub
mul
stos
dec
lret
ja
dec
out
pop
push
sub
addr16
pop
bound
mov
lock
mov
test
fistps
dec
fs
cld
lret
adc
mov
jnp
lcall
add
sub
repz
push
lahf
push
inc
fcomps
inc
dec
inc
fstp
or
mov
shlb
lock
and
lret
in
insl
inc
ret
leave
lods
ds
scas
or
push
aas
ja
push
and
xor
jmp
dec
adc
cmp
and
and
stos
jne
cmpb
jl
aam
mov
sbb
or
ljmp
cmp
pop
das
addr16
or
lods
push
pop
inc
pop
cld
in
lds
ja
push
cmp
pop
xchg
inc
out
sarb
aam
add
sbb
outsb
and
cli
mov
jecxz
lcall
dec
bound
adc
pop
shl
popa
cld
pusha
dec
push
jno
aaa
sbb
rcll
lret
mov
sbb
mov
jns
push
adc
rorb
xlat
icebp
inc
inc
adc
aaa
cmp
push
test
adc
mov
es
sub
sti
inc
repnz
leave
xchg
dec
shr
mov
loope
or
pop
fs
ficoms
jnp
aam
test
pop
inc
push
dec
xchg
push
imul
pop
sub
fstl
xchg
rol
inc
xchg
jmp
xchg
adcb
aad
jbe
push
cmp
mov
js
adc
dec
mov
sub
dec
pop
mov
outsb
mov
dec
xchg
cmp
jae
inc
or
roll
outsb
mov
xchg
inc
fsubr
cmc
stos
negb
aam
test
pop
cmp
imul
dec
push
mov
stc
sub
lcall
ret
jl
xchg
dec
push
leave
jae
rorb
gs
lock
jnp
xor
mov
pop
dec
mov
sbb
adc
ljmp
icebp
add
jle
sub
int
jbe
jb
decb
cmp
add
leave
pop
addr16
iret
or
and
add
pushf
icebp
fiadds
in
sub
mov
jbe
stos
mov
and
sub
fmull
iret
repnz
push
push
lahf
fstps
std
mov
lcall
xchg
mov
sub
add
xor
out
sbb
xchg
lock
xor
imul
dec
xchg
mov
xor
bound
loope
jns
cltd
jne
sbb
test
jb
cmpsl
cmp
sub
cli
ds
adc
out
lret
sbb
xor
scas
data16
inc
into
inc
push
es
in
xchg
es
adc
cmpsl
test
inc
scas
pop
xchg
stc
lret
mov
jb
loope
mov
sbb
ucomiss
imul
pop
push
dec
ja
loopne
test
jg
aas
sbb
sbb
stos
xor
mov
xchg
push
mov
lret
jnp
fucomi
xchg
pop
out
inc
notb
leave
push
test
js
push
mov
or
roll
pushf
xor
dec
jnp
pop
jp
xchg
outsl
xor
aas
push
xor
sbb
repz
fdivrs
fidivs
fstpt
mov
adc
push
pop
fadds
xor
mov
jo
lods
int3
xlat
mov
lret
enter
jle
jns
xchg
jb
stos
jp
mov
mov
test
sbb
mov
xor
lahf
jo
jno
popf
mov
sub
mov
es
call
push
outsb
mov
imul
xor
mov
cwtl
jno
rorl
mov
test
adc
xor
andl
jmp
lods
call
subl
and
jmp
xchg
adc
pop
mov
xchg
jle
rcrb
sub
or
cmp
aam
adc
lret
fcoml
imul
es
aam
sub
or
rorb
inc
mov
outsl
jns
and
push
or
ljmp
add
jmp
orb
scas
mov
hlt
xchg
push
fistpll
fildl
lahf
mov
call
mov
xchg
inc
mov
xchg
pop
clc
adc
pushf
push
xor
data16
xor
sbb
mov
dec
bound
out
jl
fcoml
push
cli
xchg
rcll
lahf
nop
outsb
pop
push
pushf
mov
push
shll
aaa
and
fsubl
dec
and
loope
sbbb
scas
aam
mov
push
rcrb
gs
adc
cwtl
sahf
insl
mov
fwait
repz
push
push
push
jns
mov
dec
or
mov
and
cmp
cmp
xor
test
adc
movsl
scas
dec
xlat
push
jmp
dec
or
cltd
out
xor
ficomps
add
inc
sbb
jmp
adc
subl
stos
xbegin
and
das
xor
mov
inc
cmp
xchg
nop
bound
xchg
xchg
xchg
lock
sbb
push
fs
adc
bound
flds
jbe
insl
rclb
push
sti
adc
mov
jb
cmp
inc
push
sbb
ljmp
dec
pushf
pop
sbb
mov
sahf
aad
xlat
mov
xchg
iret
xchg
in
sub
jo
addl
addr16
cmpsl
xchg
nop
mov
jb
es
lods
and
ficompl
xor
dec
sbb
or
cmp
fnstcw
incb
pop
std
fildl
cmc
xor
inc
add
cmpsb
inc
adc
adc
lar
icebp
lock
jg
bound
shll
jb
faddl
pop
subb
fcoml
jmp
pop
mov
dec
pop
jbe
pop
out
jnp
cli
sbb
xchg
out
push
nop
pop
cmp
out
lods
push
test
push
in
xorb
cli
sbb
push
rcrb
sbb
dec
subb
out
xor
lsl
dec
xchg
or
cwtl
push
imul
in
xchg
jnp
adc
sti
sub
pop
flds
jne
mov
sar
adc
xor
mov
movl
and
sub
xchg
mov
pop
fs
adc
inc
dec
push
out
and
into
cmp
xchg
imul
mov
popl
mov
pop
add
sti
or
lods
stos
inc
jl
jo
daa
xchg
dec
mov
or
daa
mov
mov
jle
aam
dec
adc
popa
test
inc
aaa
inc
fnstsw
pop
fwait
push
imul
xorb
fmul
mov
cmp
inc
insb
mov
stos
adc
pop
insl
dec
shrl
stc
cmp
add
push
rcrb
es
or
dec
pop
add
mov
and
pop
sub
lods
push
ret
mov
cltd
lds
lcall
adc
cmp
or
push
or
cltd
mov
or
jb
pop
push
loopne
inc
mov
lea
ret
sub
sar
insl
sub
out
lcall
insl
fcompl
in
fistpl
adcl
push
push
xor
insb
sub
and
mov
ja
sub
int3
arpl
sub
or
mov
or
push
jg
mov
push
mov
out
lods
loop
add
jecxz
cmp
in
imul
cmovbe
xorb
mov
aaa
or
and
mov
jge
and
jb
mov
cmp
nop
xchg
mov
mov
push
fs
cli
inc
push
bswap
aam
fiadds
shll
push
cmc
xor
sub
sub
push
arpl
xchg
mov
cli
lret
leave
mov
aaa
outsl
scas
popa
xor
add
pop
adcb
movsl
out
cmp
push
js
subb
in
mov
fwait
out
mov
lret
in
andl
lods
pop
stc
push
adc
inc
fcom
pop
mov
adc
cmpsb
ret
popf
adc
xchg
movsb
ss
jae
xchg
aad
stc
lock
imul
push
pop
lcall
inc
and
mov
pop
xchg
inc
popf
cmp
je
adc
lds
push
xchg
add
cli
adc
ret
pop
xchg
mov
das
cmp
inc
repz
mov
fidivs
insb
jl
lock
in
push
sub
and
sahf
add
movsb
inc
pusha
sbbb
mov
sub
sub
call
inc
add
mov
push
roll
loope
dec
lock
ja
mov
cmp
add
hlt
and
sub
mov
clc
lods
lods
orl
lods
fisubrs
cmpsl
shll
pop
xchg
int3
mov
inc
and
adc
mov
or
pop
bswap
mov
jmp
ret
xor
jle
aaa
fcompl
ljmp
aam
inc
stc
std
add
fnstenv
adc
xchg
ficomps
push
sub
mov
imul
outsb
leave
xlat
not
call
add
dec
pop
sarb
sbb
fst
aas
iret
lea
jo
mov
cltd
insl
and
mov
mov
cmp
pop
out
out
andb
pop
sarl
mov
inc
adc
jl
xor
add
mov
test
mov
jecxz
mov
xchg
pop
std
add
sbb
mov
popf
mov
ss
or
loope
add
jnp
movsb
pushf
mov
dec
or
mov
xchg
adc
sahf
or
lret
pop
fmul
mov
cwtl
call
pop
cmp
jecxz
outsl
ja
mov
jmp
cmp
push
inc
aaa
and
insb
mov
mov
ficoms
adc
jnp
jmp
mov
aas
push
xchg
pop
fstpl
cltd
das
mov
aas
inc
aas
ds
lds
test
pop
dec
aam
lock
lods
fsubs
push
fcoml
jp
insb
sub
ss
out
mov
iret
test
faddl
or
jge
imul
and
pop
rcl
sbb
loop
and
sbb
xor
popf
inc
out
and
jbe
mov
jmp
outsl
jb
fdivl
adc
pop
sarb
mov
cmp
pop
outsb
or
pop
add
adc
mov
sub
mov
cltd
ret
and
rol
xchg
fdivrs
js
dec
sub
daa
cmp
sbb
std
pushf
cmp
leave
daa
push
adc
test
inc
jge
hlt
mov
xchg
es
outsl
std
repnz
jnp
push
fadd
jae
mov
js
pop
clc
repnz
arpl
cmp
aad
mov
push
lock
lret
fisttps
ret
mov
mov
mov
cld
ret
mov
repz
add
imul
insl
pop
inc
mov
movsb
mov
or
pusha
add
jno
jecxz
out
lret
cli
push
jne
cltd
hlt
orl
sar
jb
or
sbb
mov
test
mov
mov
sti
sahf
dec
mov
fbld
push
in
pop
out
mov
and
sub
sbb
scas
sbb
jle
aas
fwait
icebp
adc
ds
adc
movsl
sub
mov
or
sub
sti
int3
stos
lahf
xchg
and
jmp
and
ret
jmp
in
xchg
adc
ljmp
jno
loopne
divb
and
lahf
cmp
mov
test
scas
data16
pop
xchg
loopne
rol
or
dec
addr16
insb
sbb
and
out
or
mov
or
int
sbb
clc
xchg
and
addr16
inc
sub
jg
mov
sbb
in
jne
and
pop
ret
jne
dec
add
mov
leave
adc
push
mov
icebp
or
jp
loope
adcb
and
pop
jne
sbb
aad
hlt
ret
lahf
pusha
pop
mov
mov
insl
jecxz
shll
in
rol
cmp
xor
add
inc
int3
rclb
lahf
inc
pop
adc
cmp
arpl
lods
cmpsl
cmpsb
pop
movsb
outsl
cwtl
cmp
fwait
psrlq
sbb
cmpsb
fwait
or
dec
mov
mov
jl
inc
inc
lcall
sub
sbb
nop
xchg
ljmp
sti
xchg
mov
sbb
insl
push
cmp
imul
pop
xor
pop
jp
mov
xchg
adc
xchg
shrb
xchg
jl
push
leave
in
cmpl
jno
mov
xor
std
inc
lcall
mov
testl
loopne
lds
call
mov
call
test
in
js
das
fcomi
lret
cli
cmp
pop
fmuls
cmc
jbe
scas
ret
push
out
ss
les
inc
shl
sub
lret
fwait
xchg
cmp
ret
jg
pop
lretw
inc
mov
cmp
mov
sti
jae
mov
add
dec
popa
nop
sti
in
push
sarb
lea
pop
rcll
adc
push
sub
jmp
pop
mov
aas
xorl
xchg
jmp
push
add
lock
cmp
ds
mov
fsubrs
popf
or
ret
add
pop
push
mov
mov
sbb
in
into
cld
fs
sbb
int3
popf
jae
sub
xchg
mov
dec
push
icebp
mov
aas
mov
mov
sbb
hlt
or
int
dec
jb
mov
clc
mov
mov
nop
pop
repz
pop
scas
xchg
out
cmp
clc
push
push
cmpb
push
mov
push
les
and
jbe
push
xchg
ds
sbb
ljmp
mov
push
jg
and
mov
sbb
aam
mov
dec
dec
out
mov
cli
mov
mov
pushf
xchg
lea
rclb
xorb
dec
or
adc
pop
mov
xor
cmp
and
xchg
inc
adc
ja
xchg
shrl
mov
fmuls
add
dec
sti
push
loop
lret
les
ret
loopne
rdpmc
lods
sahf
out
ljmp
test
cmp
mov
inc
mov
std
adc
mov
addl
je
out
pop
fstl
sbb
xor
add
mov
mov
icebp
in
repz
mull
stc
in
adc
lcall
outsb
hlt
leave
gs
stos
add
je
lret
pop
xchg
push
rolb
repnz
mov
int3
clc
cli
cld
jno
add
jns
imul
mov
into
cwtl
outsb
and
xor
and
sbb
xorl
mov
int3
mulb
mov
lea
pop
adc
cld
jmp
pop
mov
call
add
movsl
rorl
add
pop
mov
mov
lcall
aam
and
cltd
adc
cmp
cmp
sbb
xchg
xorb
push
fcoml
insl
ds
popf
jge
mov
jg
push
and
mov
pop
adc
fs
cmp
test
outsl
in
cli
push
pop
in
lock
mov
adc
mov
push
inc
stos
ljmp
subl
dec
ja
jl
jle
test
mov
push
add
adc
lcall
inc
aas
out
loope
popf
jmp
nop
xor
mov
sbb
push
fbld
adc
leave
push
js,pt
mov
in
inc
subl
jmp
test
dec
sahf
addb
mov
inc
in
jg
stc
icebp
in
jmp
xor
push
sbb
xor
inc
inc
jo
sbb
test
insb
cs
in
push
sbb
inc
pop
insb
push
test
jge
pusha
nop
ret
ljmp
push
jl
add
inc
xlat
cmp
arpl
fs
movsl
dec
mov
addb
pop
mov
or
sub
pushf
inc
lahf
mov
rorl
insl
push
rcll
les
sbb
fimull
mov
pushl
fdivl
and
pop
jg
int
outsb
cmp
shlb
xorb
out
jno
pop
adc
dec
nop
imul
or
and
push
ljmp
jmp
mov
les
fistpl
sub
and
push
sbb
sti
cmp
pop
lahf
outsb
leave
pop
dec
out
gs
xor
add
popf
sbb
ret
shlb
or
flds
add
adc
icebp
cmp
loop
pop
lds
cmp
out
imul
lret
xchg
fstl
and
push
int3
repz
mov
push
lahf
cwtl
test
or
lods
stos
jns
add
gs
xor
lods
mov
mov
cs
outsb
loope
ror
and
inc
xor
subb
dec
lcall
addb
mov
xor
fadds
nop
sbb
push
xchg
movsl
shrb
ljmp
push
int
bound
jae
adc
mov
adc
sarl
xor
scas
inc
jecxz
push
mov
sbb
and
mov
xchg
jae
xchg
std
rolb
adc
xor
mov
pop
fdivrp
mov
ljmp
push
arpl
pop
enter
lock
sub
and
inc
fwait
mov
cmp
ficoms
pop
sub
push
inc
lods
and
enter
rol
xchg
fstpl
gs
das
fisubrl
hlt
nop
das
mov
mov
xchg
sahf
cld
fnstsw
je
les
push
or
sub
test
push
xchg
mov
lods
push
push
insl
mov
or
gs
mov
sub
jg
enter
xchg
popa
loop
lret
mov
in
lahf
cmp
nop
add
sbb
cmp
loop
push
mov
push
or
arpl
stos
pop
insb
ds
sub
mov
movsl
pop
push
mov
jl
fadd
ret
inc
cmpsb
fidivrs
mov
mov
mov
test
and
pop
loope
lahf
jnp
adc
cmp
adc
lret
pop
es
test
aaa
lret
pushf
das
and
cld
clc
pop
rep
scas
or
stc
testl
sub
std
lahf
pop
aam
add
and
vfrczss
jmp
daa
mov
test
lcall
push
mov
jecxz
adc
xlat
and
loopne
cmp
push
scas
dec
call
mov
call
rcrl
xor
push
dec
test
outsl
repz
xchg
jbe
scas
movsl
repnz
call
jns
in
inc
mov
into
mov
dec
loope
jno
mov
repnz
jmp
jnp
lret
xchg
dec
les
lods
scas
sbb
jp
mov
mov
jbe
mov
sarb
sbb
sub
cmp
pop
pop
jmp
nop
enter
cmp
in
jecxz
popl
sbb
push
fs
mov
add
push
aad
int3
dec
ss
dec
adc
mov
add
sbb
mov
into
push
jle
neg
xchg
popa
cwtl
or
popa
xchg
push
cmp
aaa
cs
xor
jbe
adc
mov
jb
sub
fwait
xor
mov
cmp
cmp
aas
jne
out
test
jp
cmp
mov
add
inc
jns
inc
stos
int3
push
clc
xchg
pop
mov
repnz
into
into
fwait
add
mov
lret
sbb
out
jns
cmpsb
clc
lahf
cmp
xor
push
ss
mov
daa
cld
lods
mov
popf
rcll
jne
insl
pop
int
xlat
add
loopne
movsl
mov
iret
or
sub
cwtl
add
jb
mov
fs
inc
cmp
jle
dec
int
mov
shrl
call
adc
push
mov
jp
nop
dec
xchg
fidivl
jl
out
lea
xchg
lcall
gs
mov
into
mov
testl
or
aad
loopne
jecxz
cmpsb
mov
push
aaa
rcrl
mov
sub
sub
xchg
and
push
leave
pop
mov
or
pop
dec
and
icebp
pop
or
iret
or
aam
mov
call
dec
mov
jmp
pop
xchg
stos
inc
lds
adc
in
mov
jmp
mov
sub
adc
jno
jp
dec
dec
mov
mov
mov
scas
cmp
xchg
inc
movsb
es
fistl
inc
mov
sub
test
sub
fs
in
sub
or
fwait
daa
insb
xor
push
mov
int3
orb
out
jns
pop
jl
psubusw
mov
xor
lcall
add
mov
lahf
add
popa
cs
lret
call
into
xor
daa
mov
dec
push
mov
inc
in
ss
dec
mov
lods
jge
imul
out
inc
pop
sub
rolb
jmp
mov
xor
mov
mov
stos
cmc
xchg
aam
mov
nop
push
pusha
jg
push
subl
popf
cmp
leave
xchg
mov
ret
rdrand
rorb
adc
push
sbb
push
dec
jp
mov
gs
xchg
in
fdivs
es
aas
or
inc
ds
rcrl
fdivs
sub
xor
and
divl
mov
loopne
mov
out
fdivp
lods
imul
fwait
ss
push
sbb
scas
xchg
les
mov
push
and
jg
or
jns
and
mov
cltd
dec
fwait
les
icebp
fwait
adc
or
dec
shl
push
xor
cld
lret
xchg
lea
push
mov
popa
ficomps
shlb
sbb
aaa
mov
loop
mov
leave
mov
or
add
pop
pop
div
mov
jmp
leave
ss
jae
stc
sub
lods
inc
js
ss
repz
add
loope
sbb
popa
mov
sub
lret
pop
or
mov
or
ds
popa
adc
add
je
adcb
in
sbb
sahf
add
dec
mov
xchg
hlt
push
notb
dec
cmp
push
sub
in
inc
cwtl
mov
sahf
int3
stc
xor
pop
xor
movsb
daa
scas
ror
popf
push
adcb
mov
or
pushf
ret
push
or
add
push
inc
cmp
or
xchg
lret
nop
outsl
cltd
mov
push
std
mov
fisubs
fdivrl
imul
sbb
arpl
jl
mov
mov
pop
or
icebp
mov
push
sbb
in
test
or
mov
push
jecxz
or
adc
xor
loop
jg
mov
sub
ret
iret
mov
in
std
out
mov
imul
es
mov
bnd
add
dec
xor
ss
bound
adc
or
pop
gs
add
ja
jb
jg
inc
enter
push
aas
das
dec
ficompl
sbb
cli
out
int
pop
fiadds
mov
lcall
adc
pusha
ljmp
mov
dec
ja
out
jmp
mov
stos
or
in
std
xor
arpl
cmp
insb
sbb
hlt
mov
insl
das
xchg
insl
iret
stc
sbb
mov
lods
xchg
sbb
notl
lea
inc
cld
jecxz
inc
cmp
sbb
push
jns
inc
call
ds
loop
clc
flds
enter
popf
mov
fdiv
jecxz,pn
mov
icebp
and
aad
adcb
lcall
call
inc
mov
lret
push
push
int3
dec
jp
pushf
pushf
mov
and
and
lret
mov
xor
cmc
xchg
sub
test
icebp
add
sbbl
jae
adcl
mulb
inc
pop
dec
arpl
fsubp
pusha
xchg
xor
cmp
fdivrl
dec
xor
add
push
insb
xor
call
bswap
call
or
int3
dec
inc
and
sbb
in
in
test
push
push
call
jo
aam
int3
fwait
in
loopne
xlat
test
and
push
xchg
cmp
sub
jecxz
xchg
out
sub
cmp
test
imul
jbe
loope
aas
push
cmp
dec
add
add
mov
fcomip
pop
add
cmp
aaa
outsl
sub
mov
add
out
jecxz,pt
jecxz
jnp
ret
sbb
fiaddl
xchg
dec
cmp
dec
cmp
cli
jl
push
xchg
movsl
cmc
xchg
inc
mov
and
cmp
pushf
sti
pop
sbb
xchg
xorl
adcl
or
out
cmp
xorb
loop
sbb
mov
scas
push
mov
sahf
adc
push
and
arpl
pop
push
adc
or
lods
lret
lret
sub
cs
into
je
mov
xchg
adc
dec
addr16
jo
sbb
xor
sbb
jno
push
xchg
out
and
pop
mov
xchg
nop
sti
xor
cwtl
pop
jle
jge
xor
push
in
mov
shl
dec
pop
push
shrb
and
mov
sub
cmpsl
sub
mov
shrl
rcrb
xrelease
daa
sub
test
sbb
movsl
add
loop
mov
sub
jns
mov
jle
inc
shrl
adc
mov
pushf
mov
in
mov
jecxz
and
push
out
testb
xchg
mov
or
or
or
xchg
pop
mov
inc
push
pusha
scas
ret
nop
daa
inc
idivb
jge
cmp
sbbl
or
mov
pop
cltd
or
push
and
hlt
jg
or
call
sti
mov
sub
add
sbb
sub
push
std
popf
sub
push
mov
gs
inc
sub
add
cli
stos
cmp
lods
ja
fisubs
cli
mov
enter
pop
inc
daa
xchg
test
cmc
imul
cmp
and
clc
popf
mov
and
dec
xchg
and
mov
xchg
dec
push
icebp
es
in
ret
fdiv
push
jmp
sbb
dec
pop
loop
sub
mov
sub
std
inc
out
das
push
pop
stos
sbb
js
fyl2xp1
cmc
int3
mov
xchg
out
mov
repnz
lds
loopne
mov
cmp
das
mov
jns
scas
cmpsb
xchg
shl
push
ret
hlt
mov
xchg
pop
out
mov
cli
fcompl
nop
movsl
inc
arpl
ja
jg
jmp
popf
pop
xor
aaa
mov
loope
or
lret
fs
subb
dec
sub
mov
cmp
dec
dec
loope
pop
lret
ljmp
or
cmp
lret
xchg
cmp
pop
inc
lahf
xchg
mov
sbb
call
in
jmp
icebp
xlat
scas
and
fcompl
inc
in
mov
iret
in
imul
add
xor
cmpsl
jns
leave
hlt
push
xlat
mov
pushf
out
outsb
push
leave
in
xchg
lahf
mov
ljmp
pop
mov
pop
xor
clc
sarb
call
push
push
lahf
sahf
mov
ja
or
sbb
sbb
mov
out
sbb
es
mov
dec
cmp
jge
push
push
sbb
sar
jmp
mov
imul
mul
or
jl
adc
aas
pop
fwait
and
mov
xchg
ja
mov
mov
cltd
push
jbe
outsb
imul
ljmp
cs
sbb
icebp
into
orb
and
xchg
push
xchg
pop
xchg
popa
cmpsl
rclb
hlt
loope
sbb
das
test
insb
scas
push
jno
mov
jnp
imul
push
cmp
iret
xor
cld
fwait
sub
daa
insl
jp
pop
push
xchg
sub
xchg
fstp
cmp
and
inc
or
mov
dec
je
and
pop
pop
pusha
repnz
pusha
xchg
icebp
cli
leave
push
push
xor
in
cli
outsl
dec
adc
lods
cmp
or
call
adc
fldl
std
xor
sub
lea
mov
mov
sub
pop
mov
dec
dec
hlt
fsubl
mov
ficoml
add
dec
push
cmpsb
sar
jmp
jg
cwtl
pop
dec
int
dec
pusha
dec
fcomps
data16
dec
out
add
sbb
dec
push
push
add
pop
xchg
in
xchg
imulb
lock
cli
or
or
in
or
fldenv
insl
xchg
icebp
cmp
paddusw
xchg
stos
pop
mov
pop
adc
add
fwait
jmp
dec
ret
push
lea
cmp
mov
xchg
push
std
dec
sbb
insl
xchg
xor
mov
aad
js
sub
in
add
fdivr
hlt
mov
add
lret
dec
pop
adc
data16
push
loop
insl
sbb
mov
gs
and
push
gs
mov
movsl
jle
iret
test
pop
nop
adc
or
add
push
pop
pop
mov
sbb
jp
inc
out
xchg
sub
das
push
lret
stos
inc
pop
jno
and
lods
xor
jge
pop
mov
scas
icebp
mov
xchg
pop
adc
rcrb
test
sub
push
or
cmpsb
add
pop
push
lock
daa
ret
fnsave
xchg
in
xchg
lcall
ret
jb
loopne
in
xchg
pop
or
mov
loope
inc
add
sub
pop
dec
mov
mov
pop
cmp
test
push
mov
jno
es
out
jb
gs
shll
pusha
sbb
mov
push
xor
cwtl
dec
mov
fcom
adc
leave
inc
mov
ljmp
jbe
inc
mov
stos
mov
lcall
ret
mov
push
ljmp
xchg
test
cs
popf
fcoml
ficompl
stc
fmull
mov
es
scas
xchg
xchg
jcxz
sub
dec
adcl
cli
mov
jae
mov
stos
enter
jno
push
loop
sub
outsl
cmp
pop
outsl
ds
repnz
push
mov
pop
movsl
push
xchg
sbb
cmp
lock
push
and
stos
push
ds
loope
fldcw
fnstenv
pusha
outsb
xchg
adcl
mov
push
sar
int3
popf
xchg
sbb
push
push
fstpl
enter
pop
cmp
push
push
pop
jnp
comiss
lods
aaa
push
pusha
xor
out
out
out
cmp
pop
nop
fcmovbe
mov
movsb
pop
xchg
mov
pop
sbb
and
xchg
rorl
bnd
cmp
jl
mov
arpl
rolb
mov
or
outsb
out
dec
mov
xorl
jno
push
sahf
movsl
xchg
pop
adc
mov
adc
xlat
in
andb
add
cmp
in
xor
xor
xchg
and
pusha
dec
ss
iret
test
pushf
lods
xor
add
mov
jbe
in
jns
rol
test
pop
or
pop
adc
movsl
pusha
pop
add
call
mov
or
fldt
mov
mov
test
out
orl
inc
cmp
aad
mov
adc
mov
aaa
aam
jo
dec
out
stc
add
mov
dec
xor
mov
mov
outsl
xor
imul
out
shr
push
std
jle
or
nop
and
out
adc
mov
mov
dec
outsl
aam
pop
fnstenv
pop
dec
cld
add
stos
push
lea
push
test
cmpsb
repnz
cmc
xlat
repnz
test
adc
test
mov
and
int3
stos
sub
jge
xor
dec
pop
push
jb
imul
push
outsl
jne
jp
xchg
jg
xchg
mov
or
das
jb
mov
leave
outsl
xor
add
enter
push
jge
adc
jp
pop
mov
ret
add
sub
pushf
push
pop
xor
in
dec
dec
cwtl
add
inc
popa
or
dec
inc
pop
xor
sub
das
leave
aam
jae
mov
jno
les
out
mov
pop
jns
test
or
dec
sbb
jmp
jg
jae
fsubr
les
shll
rclb
lods
and
sbb
cmp
call
add
sub
sub
insb
mov
into
shlb
bnd
test
inc
popf
adc
add
addr16
in
in
sub
pop
scas
jns
pop
cmp
pop
popf
or
cmc
jns
add
pop
scas
jl
mov
mov
and
arpl
movsb
jne
xchg
adc
sub
out
dec
cmpsb
adc
lret
cmp
pop
loope
or
cli
lcall
sbb
and
add
lret
xchg
loop
mov
mov
loope
and
aam
mov
sbb
popa
xchg
inc
add
subb
fisttpl
dec
or
jb
cmp
dec
fdivl
addb
cwtl
sarb
lcall
xchg
les
dec
fmul
dec
icebp
out
and
je
cmc
add
sbb
imul
xchg
es
popa
in
pop
push
push
xchg
mov
cmp
les
stc
lahf
mov
scas
add
jg
cltd
outsb
cld
cmp
lods
hlt
pop
movsl
mov
mov
or
push
roll
rcl
dec
lock
inc
dec
cld
add
mov
dec
dec
aad
dec
sti
mov
es
xor
scas
fistps
jb
mov
cs
fs
mov
inc
cmp
xchg
jne
jmp
stc
push
jle
in
aaa
dec
les
adc
not
xchg
mov
cmp
mov
in
cmp
lock
push
loope
jle
lret
into
fwait
dec
cmp
movsbl
lret
dec
shlb
push
test
icebp
jnp
insb
std
add
jb
jae
adc
pop
fisubs
mov
notl
sub
xchg
jo
imul
add
push
js
lret
mov
mov
cmp
jp
pop
inc
jle
inc
repz
pusha
leave
pop
aam
not
adc
in
je
cli
pusha
sar
pop
imul
punpckhdq
rclb
or
mov
pusha
push
adc
pop
leave
add
popf
sub
ljmp
jmp
ds
lret
aam
and
jg
adc
lea
aam
push
mov
jne
adc
jecxz
fs
adc
ret
jmp
push
xchg
aaa
lret
sbb
imul
scas
push
arpl
jns
jle
shll
out
ficoms
jl
enter
dec
dec
and
mov
lds
or
jg
mov
sub
faddl
add
xor
mov
cmp
bound
sub
adc
movsb
fstpl
cmp
sbb
pop
mov
ds
add
in
into
clc
xor
movsb
inc
inc
lret
pop
jnp
mov
bound
out
jb
std
mov
and
sub
jo
xchg
adc
mov
lcall
sub
mov
xchg
cmc
sbb
cli
clc
ja
push
add
mov
add
adc
pop
pop
mov
imul
outsl
mov
mov
or
jno
mov
pop
sbb
and
push
mov
jmp
pop
insb
pop
repz
adc
int
push
shll
imul
lcall
das
mov
push
out
pop
dec
inc
int3
sbb
fnsave
mov
lea
pop
rcl
push
jl
dec
mov
in
loop
sbb
hlt
lods
ficoms
ljmp
data16
xor
mov
mov
ds
loope
fsubp
adc
neg
xor
ljmp
sar
ds
lret
xchg
mov
pop
enter
ret
pushf
mov
xchg
pop
cwtl
jge
xchg
sub
jp
inc
sub
pushf
mov
sbb
in
dec
sub
pop
ljmp
pushl
mov
or
sbb
popa
pusha
add
push
or
cmpb
cwtl
data16
adc
lods
sub
push
out
jg
cld
pop
dec
xlat
pop
pusha
sbb
std
mov
sbb
stc
insb
xchg
add
mov
lock
js
jns
std
lds
xor
adc
pop
imul
fs
out
inc
mov
std
rorb
popf
into
xchg
das
loopne
les
insl
loope
iret
dec
add
cmpsl
fisttpll
ficomps
adc
jnp
ss
enter
mov
push
rcrl
pop
aaa
rcl
movsl
mov
in
xor
lods
loope
repz
xchg
pop
popa
push
aad
push
xchg
mov
xlat
les
lret
jp
and
mov
daa
mov
outsl
loopne
and
push
sub
repnz
hlt
insb
mov
shlb
cmc
cmpsl
imul
loop
push
std
leave
push
out
outsb
mov
add
jecxz
dec
sub
sbbb
sar
fsubl
dec
test
and
pop
fldcw
sbbl
adc
jmp
pop
lahf
ret
xchg
add
inc
in
sbb
mov
out
or
mov
xchg
sbb
repnz
mov
mov
rcrl
daa
mov
ljmp
mov
jge
push
and
popa
rcll
inc
je
add
jno
mov
lock
sbb
ret
lret
js
scas
fldl
fisttpl
addr16
mov
jne
and
outsb
adc
enter
mov
outsb
sbb
repnz
xchg
aad
and
jnp
in
in
jl
mov
imul
int3
jle
fisttpll
mov
sub
jl
lea
lret
adcl
xor
aaa
sbb
insb
add
cld
add
dec
bound
sbb
cmp
cmp
mov
dec
stos
xchg
insl
adcl
jns
ss
test
add
mov
jmp
add
add
pop
xor
fildl
inc
bound
xor
xor
mov
fcmovb
sub
addr16
lahf
mov
xchg
dec
mov
out
inc
or
push
orl
adc
dec
out
insl
cmp
add
push
out
data16
cmpsl
dec
test
cmp
sub
pop
sbb
xchg
cmovae
sbb
js
decb
lahf
inc
repz
inc
hlt
mov
fndisi(8087
mov
adc
movsb
xchg
push
movsb
js
nop
adc
fs
fwait
cmp
dec
addl
sub
pop
cmpsl
dec
lock
add
shlb
sbb
insl
push
fidivs
mov
into
pop
mov
and
cld
pop
xor
rcr
fadds
jp
fcmovb
fldl
movsl
in
adc
or
push
inc
scas
xchg
push
pop
pop
mov
dec
add
setno
jecxz
lcall
andb
sbbb
mov
std
popf
mov
stc
mov
inc
sub
divl
or
inc
inc
rcrl
insb
cmp
add
into
mov
jle
inc
addr16
bnd
xchg
xchg
mov
xchg
test
xor
fwait
imul
iret
pop
jns
cmpsl
repz
pop
loope
mov
scas
jns
fdivr
sbb
adc
push
xor
push
jp
push
cwtl
test
outsl
jbe
pop
scas
jbe
popf
cs
in
mov
push
xchg
pop
dec
mov
std
xor
push
outsl
dec
scas
dec
mov
mov
pop
mov
aad
testb
scas
mov
mov
shrb
sub
mov
cmpsl
mov
popf
mov
clc
iret
test
or
mov
mov
add
fwait
mov
hlt
cli
loopne
sub
jnp
xchg
mov
push
out
xor
lahf
lret
in
lahf
out
push
mov
cmp
adcb
xchg
aaa
and
in
and
iret
lods
or
inc
imul
dec
xchg
mov
popf
add
pop
and
fs
xchg
cmp
and
inc
nop
push
cmp
test
adc
push
xchg
cld
mov
imul
cmpb
adcb
jmp
addb
sub
jnp
jmp
cmp
push
add
out
push
movsl
adc
repz
or
sub
xor
mov
mov
hlt
int3
iret
push
cmc
dec
jecxz
jl
xchg
xchg
add
ljmp
jne
jno
sbb
mov
daa
in
repnz
lods
sbb
ljmp
ljmp
mov
test
cmp
xor
cmc
les
mov
aaa
add
shll
subb
fs
fcoml
cmpsb
aam
js
cmpsl
sbb
fimuls
dec
sarb
mov
aam
in
cmp
data16
sbb
fwait
ds
xor
test
jno
push
push
arpl
dec
sub
mov
sbb
enter
repz
inc
cld
aaa
ljmp
movl
cmp
shrl
sbb
rol
sbb
mov
test
cmc
stos
lods
stos
enter
pop
push
movsl
add
mov
shlb
popf
lds
sbb
push
push
push
loop
shlb
and
mov
cmp
mov
shl
stos
mov
cmc
pop
adc
das
mull
mov
xchg
push
adc
fs
call
pop
nop
fnstenv
fs
aas
cwtl
out
rcrl
dec
das
jno
adc
int3
sub
pop
int3
xor
pop
pop
hlt
cld
in
mov
les
fs
jo
lds
in
ljmp
jbe
es
sahf
sbb
xor
push
out
pop
or
xor
mov
popa
lcall
stos
fldt
or
pop
push
jmp
out
fldl
mov
int3
mov
add
add
in
ficompl
or
shlb
cmp
shll
cltd
push
loop
fmuls
push
stos
subb
jecxz
popf
add
xchg
gs
imul
movsb
and
lds
out
xchg
jg
xor
dec
xchg
loop
out
test
insb
mull
daa
outsb
mov
and
pop
movsl
pusha
and
mov
jl
push
pop
or
add
sub
das
xor
nop
cmp
pop
repz
xchg
xchg
paddd
outsl
xor
or
leave
lret
dec
pushf
and
xor
and
mov
hlt
pop
pushw
imul
xchg
xor
bnd
mov
jne
test
sub
jb
lret
stc
arpl
mov
call
cmpl
cltd
cmpsb
mov
jle
mov
jno
fiaddl
inc
dec
lret
scas
inc
jge
push
outsb
pop
inc
and
mov
nop
rorl
dec
pop
cmp
mov
icebp
or
mov
clc
fwait
and
cmpsb
cmc
sbb
pop
add
iret
xor
mov
push
mov
cmp
sub
xchg
mov
dec
ret
adc
and
nop
pop
jmp
add
dec
addl
mov
xchg
cmc
jl
ja
loopne
sahf
mov
sub
push
repz
cmp
push
leave
jmp
push
pop
lcall
cs
mov
jnp
hlt
inc
mov
cmp
jns
ret
mov
and
hlt
and
mov
jno
icebp
fiaddl
push
jmp
aas
pop
cmp
rcrb
xchg
data16
fistpll
xchg
jle
ffreep
and
mov
push
mov
xchg
mov
imul
loop
or
push
pop
sub
fildll
push
xchg
pop
xor
or
decb
fiaddl
sub
pop
mov
lret
dec
dec
shl
stos
pushf
shlb
mov
pop
adc
jle
adc
rep
lods
pop
test
jge
leave
int3
test
fsubl
in
and
leave
sti
test
mov
inc
ds
subl
imul
subl
js
arpl
aas
sbb
mov
adc
out
jecxz
hlt
or
adc
into
push
das
pop
pop
lahf
xor
xchg
xlat
jmp
sbb
sahf
xor
sub
leave
jmp
sti
imul
add
mov
ret
mov
test
loope
insb
enter
int3
sbb
sbb
insb
xchg
dec
fisubs
js
pusha
cmp
xorb
popf
mov
mov
adc
insl
inc
fisubl
mov
daa
sbb
daa
sub
aad
imul
mov
out
call
mov
jno
jno
mov
xor
xlat
jbe
jo
imul
cmpsl
fsubs
sub
xor
pop
sbb
hlt
or
fs
jle
push
movsb
jmp
jp
cmp
xlat
or
adcl
cmpsl
add
int3
cmc
mov
lock
xchg
push
inc
aas
fiadds
out
cmpsl
or
js
stos
ja
call
sbb
mov
aad
or
gs
jecxz
add
insb
pmaddwd
int3
pop
or
aaa
jp
bnd
cmc
movsl
dec
insb
cmc
cltd
push
dec
inc
pop
in
outsb
fldenv
test
test
sbb
in
push
pop
pop
lret
es
mov
adcl
and
dec
or
ljmp
push
jno
int
testb
cmp
mov
add
sbb
das
lea
addr16
psubsb
mov
sbb
movsb
dec
out
pop
and
xor
mov
mov
pop
incb
sti
mov
int
fnstenv
ss
inc
mov
mov
hlt
out
outsl
insb
push
aas
cmovo
pop
jg
xchg
ffree
fs
int3
outsb
cld
add
fistps
aas
push
mov
or
xor
jecxz
mov
cmp
and
je
dec
inc
ss
xchg
iret
jp
pop
xchg
pop
jb
jae
jge
ret
add
aas
push
out
pop
in
mov
lods
xchg
sub
push
xchg
inc
lcall
cli
lock
aaa
adc
sub
push
jmp
mov
mov
push
sbb
adc
js
jmp
xchg
daa
jmp
jecxz
pushf
pop
int
loop
mov
std
xor
in
enter
sub
and
xchg
in
mov
mov
mov
dec
adc
pop
dec
xor
dec
mov
fcomp
repnz
adc
lea
add
ficomps
out
loop
sahf
or
and
mov
jae
push
mov
fs
jae
mov
out
fisubl
push
push
adc
lods
enter
out
push
xchg
add
and
pop
fwait
jmp
movsl
subb
push
cmp
cmp
mov
pop
and
xchg
lret
jb
outsb
lcall
std
xchg
pop
int3
add
sub
jnp
out
push
test
mov
int
ss
ja
inc
cmpsb
mov
insl
gs
not
stc
or
xchg
pop
inc
mov
dec
and
fwait
xchg
fcoml
jnp
les
lods
lds
or
andb
xor
jle
syscall
bound
add
outsl
cs
outsb
arpl
cmpsb
pop
mov
pusha
and
ljmp
std
test
and
fcmovne
imul
fwait
cwtl
mov
dec
and
out
frstor
fs
fisubrl
inc
lret
aaa
data16
jns
bound
stos
mov
or
je
movsb
ret
scas
test
andl
xchg
mov
icebp
sbb
loopne
xor
inc
fldl
pop
pop
pop
pop
orl
fisubl
inc
push
scas
sub
sub
lar
jmp
mov
enter
int
or
jns
cmc
clc
cmp
movsl
sub
arpl
or
add
and
mov
mov
xchg
lods
push
outsb
int3
push
dec
inc
fnstenv
int
xchg
data16
fs
dec
push
dec
ds
in
loop
ret
adc
in
inc
test
in
mov
divl
and
std
push
push
stc
jge
outsb
daa
inc
rcl
sbb
sub
sbb
test
les
jecxz
cmp
pop
cmp
add
into
add
je
stc
xor
test
rcrl
mov
repz
dec
repz
mov
ss
push
pop
ret
inc
out
push
std
adc
ja
shll
mov
xchg
mov
nop
jecxz
cmp
sbb
sub
aam
test
inc
cmpsl
int3
jl
xchg
jmp
shrl
pushw
leave
clc
mov
sub
jge
das
mov
sub
cmpsl
mov
push
pop
outsl
aaa
repnz
xchg
dec
ss
push
stc
xchg
outsb
repz
mov
pop
cmp
sub
sbb
int3
dec
dec
repnz
cmp
sti
insb
adc
lret
jns
jno
nop
xchg
adc
mov
inc
aas
cmp
popa
test
dec
iret
fstps
jge
adc
rcll
out
jns
sub
into
pusha
xor
push
inc
push
mov
fcoml
scas
or
repz
pop
jnp
ds
pop
sbb
xchg
mov
jg
sub
push
cmp
sub
push
push
es
jae
xchg
lcall
adc
jg
cmpsl
in
or
mov
mov
fstl
gs
mov
scas
mov
pop
shll
test
lods
mov
mov
pop
and
push
jmp
aas
add
mov
pop
push
or
popf
push
mov
cld
inc
add
out
dec
sbb
xor
pop
out
arpl
pop
scas
notb
sbb
mov
test
fistl
dec
inc
sbb
adc
movsb
xchg
lods
inc
pop
pop
add
pop
sub
mov
adc
lahf
movsb
sbb
dec
inc
je
push
add
insb
mov
cltd
adc
mov
sub
pusha
lahf
shll
cmpsb
push
mov
cmp
cmp
cmpsb
mov
fisttpll
mov
dec
push
lea
ja
int3
insl
pop
sub
or
push
push
fstps
push
cmp
mov
jo
leave
or
es
mov
mov
and
adc
cwtl
pop
hlt
loopne
cmp
sub
mov
xchg
data16
pop
mov
sbb
fs
fistpl
jo
addr16
ret
adc
push
les
sbb
inc
jmp
incb
into
movsb
push
aad
mov
mov
xchg
pop
xchg
or
pushf
cltd
cld
xor
cltd
sub
mov
mov
jnp
and
adcl
sub
pop
add
pop
pop
dec
lock
sub
out
out
jp
pushf
lock
imull
fsts
test
or
mulb
mov
sub
ret
push
dec
fcoms
fs
cmpsb
dec
gs
cmp
into
jp
repz
xchg
dec
adc
cmc
xchg
nop
cmpsl
icebp
rclb
cld
test
sahf
jae
fmull
sarl
cli
jg
adc
adc
mov
inc
divl
sti
or
les
pop
jmp
es
inc
call
inc
mov
jg
jmp
or
inc
mov
es
aaa
fldcw
cmp
xchg
ret
outsb
adc
loop
repnz
pop
cltd
fwait
roll
lods
lcall
push
and
add
adc
jp
jge
or
add
ja
xlat
es
test
push
repnz
in
or
cmp
sub
test
repz
pop
dec
pop
mov
dec
imul
sbb
outsb
push
test
jge
shrb
leave
sbb
or
xchg
movsl
addr16
in
mov
iret
pop
sub
scas
bound
andb
sarb
scas
out
xchg
mov
and
js
lcall
lea
push
add
jmp
adc
mov
pop
dec
xor
mov
pop
mov
lock
cmp
add
xchg
inc
in
jle
dec
and
stos
inc
fistpll
in
xchg
ljmp
mov
sub
push
hlt
jecxz
jmp
icebp
fwait
cld
dec
xchg
notl
mov
daa
ret
mov
xchg
pop
mov
xor
mov
andb
cmp
jge
mov
ss
mov
aas
ds
push
inc
xchg
add
and
mov
aaa
repnz
xchg
jo
rcrl
dec
xor
push
and
mov
cmc
add
and
js
add
dec
mov
push
inc
das
dec
jl
mov
mov
mov
mov
sahf
jp
push
movsl
adc
dec
movsb
sahf
mov
xlat
mov
orb
mov
loope
leave
into
clc
inc
sbb
shlb
aaa
and
and
int3
mov
pop
fbstp
cmp
or
insl
pop
lds
pushf
shrb
sub
xchg
lret
rcl
and
mov
es
pop
aas
ljmp
loope
lahf
push
push
xor
mov
mov
mov
aam
aas
jns
mov
out
test
loopne
xchg
dec
jge
mov
sbbl
sbb
addr16
or
xor
pop
stos
cmc
cs
mov
inc
daa
adc
cmp
imul
cmpsl
sahf
jno
add
stos
adc
pusha
aad
test
xchg
pop
xchg
scas
add
incl
push
push
jg
mov
push
adc
ljmp
popf
sahf
add
notb
mov
aaa
push
push
and
xchg
imul
dec
lret
mov
in
dec
addr16
popf
outsl
lcall
adc
jno
xchg
jmp
inc
jg
push
icebp
dec
faddl
in
addr16
loop
pushw
std
xchg
cmc
push
pop
or
jecxz
xchg
shlb
shlb
mul
adc
xchg
mov
mov
mov
cmpl
adc
outsl
in
shrb
shl
inc
cmc
shll
movsl
mov
jg
ret
nop
inc
dec
xchg
iret
xor
ja
jecxz
cmp
sbb
cltd
push
jp
sub
or
incb
dec
fdiv
mov
inc
mov
mov
loop
adc
jl
mov
xchg
sbb
xchg
sahf
lcall
arpl
loope
push
cmp
mov
add
mov
divb
mov
pop
imul
popa
lock
cmp
pop
stc
add
out
out
pcmpgtd
jbe
out
imull
test
jle
sub
or
je
push
fidivs
adc
movsb
iret
movsb
adc
test
jne
pop
dec
loop
xorl
mov
cmp
stos
fcompl
icebp
into
mov
mov
testb
rcll
in
test
cmc
xchg
jle
xor
mov
out
sub
stos
sbb
adc
or
scas
add
xchg
xchg
jno
xor
mov
add
or
mov
lods
xor
pushf
xor
fdivl
mov
xchg
inc
mov
jmp
popa
pushl
cmp
xchg
out
arpl
fdiv
mov
fs
mov
test
mov
scas
sarl
sub
call
testl
inc
sub
sub
mov
jmp
xor
rorl
add
out
adc
inc
div
scas
push
sbb
xorb
sub
lea
jl
mov
adc
icebp
imul
mov
cld
push
das
lods
xchg
fwait
push
cmp
xchg
gs
test
mov
lahf
jle
movsl
mov
pop
mov
sub
sbb
test
add
ja
inc
xchg
mov
rcll
push
mov
fwait
adc
dec
xlat
mov
jbe
adcl
sbb
mov
arpl
sbb
movsb
xor
ja
sub
pop
pop
mov
xor
icebp
mov
or
or
add
aaa
mov
enter
in
shrl
cmp
add
xchg
sub
sub
sarb
push
inc
les
jl
inc
out
outsl
lock
and
mov
pushf
jno
jae
pusha
xchg
inc
pusha
push
jg
xlat
cld
sbb
xchg
loope
clc
cmpl
jnp
mov
adcb
push
imul
pop
mov
lods
mov
add
add
aad
cmp
fsubp
push
nop
add
and
sbbb
sbb
loope
neg
pop
dec
lcall
adc
mov
imul
andl
mov
pop
sbb
jl
or
jg
pop
xchg
in
and
sarb
add
or
fstl
sbb
mov
adc
pop
sbb
stos
push
adc
push
jp
push
aaa
insb
loopne
mov
icebp
cltd
mov
dec
scas
adc
xchg
sbb
outsl
inc
pushf
orb
add
in
push
addb
jbe
push
fidivs
or
mov
sti
jmp
xor
inc
xchg
push
sub
dec
les
sub
xchg
fldl
push
stc
jge
push
ss
xor
dec
stos
xor
push
jge
int
sub
dec
adc
push
popa
dec
lret
xor
inc
mov
cmp
pusha
cmp
sub
aad
in
mov
ja
ljmp
inc
scas
jns
insl
and
ljmp
jo
addr16
std
push
mov
test
sbb
xchg
sbb
int
adc
imul
inc
mov
loop
loop
mov
pop
dec
mov
jb
jns
movsb
add
pop
dec
push
jmp
or
mov
rcr
and
repz
dec
cltd
add
test
ret
ret
in
jecxz
outsb
push
lcall
push
in
data16
inc
sti
mov
jle
std
dec
in
mov
sub
add
lock
jg
in
out
add
adc
xor
push
mov
or
movb
pop
jno
inc
fwait
mov
mov
jp
push
push
imul
or
xor
icebp
push
sarl
add
popa
mov
mov
shl
insl
imul
mov
loop
xor
arpl
das
cwtl
int3
inc
outsb
mov
orl
stos
cmp
pop
mov
push
adc
xor
add
push
xchg
lods
stos
inc
pop
and
test
int
ret
or
and
loop,pn
aad
sub
leave
mov
jne
test
sbb
out
cmp
mov
stos
daa
lret
jo
push
dec
push
pop
repnz
sbb
push
insl
dec
mov
orb
imul
sbb
rolb
inc
jbe
mov
adc
test
sbb
mov
inc
mov
push
in
xor
jnp
xchg
mov
inc
push
mov
in
mov
xor
or
xchg
icebp
xchg
or
sbb
add
dec
mov
jecxz
aas
mov
add
or
out
jns
insb
shlb
cmpsb
popa
repz
out
int3
in
mov
cmp
pop
mov
push
arpl
int
push
scas
leave
mov
aas
insb
outsb
add
pop
jnp
dec
pop
fsubrs
cmpsb
aad
out
mull
push
nop
les
dec
mov
cld
std
ret
bound
cmp
sbb
fmul
jge
adc
lea
and
jb
mov
jge
push
cmp
aam
sbbl
sub
and
adc
shll
mov
testl
inc
addr16
xor
jnp
inc
incl
and
cmp
cli
cltd
sbb
fs
lds
lret
pop
mov
add
jae
sahf
cmp
addr16
negb
inc
movsl
aam
hlt
pop
push
push
jb
xchg
addl
cwtl
pop
jl
sub
lods
adc
sub
xchg
fisttpl
fdivr
xor
push
mov
in
aad
sbb
sahf
mov
mov
leave
push
repnz
int
cmp
call
xor
pushf
xor
push
mov
jae
mov
xchg
sbb
xor
lcall
or
xchg
push
inc
xchg
sbb
push
pop
test
push
mov
mov
fs
adc
add
adc
cmc
inc
jl
jp
pop
push
xchg
ja
ss
stc
iret
and
loope
test
sbb
inc
mov
jg
cmp
or
aam
cmc
pop
push
in
pusha
xor
push
adc
ja
scas
into
cmpsb
jecxz
jge
jp
pushf
add
mov
es
xor
ljmp
rolb
cmc
sub
mov
pop
mov
mov
cmp
test
inc
jp
jae
in
push
pmaxub
xchg
push
aad
dec
fsubr
dec
lcall
cs
sub
cmpsl
push
stos
dec
out
xor
pop
xor
roll
shll
rcrl
jge
ficomps
cmp
jg
mov
popa
sbb
fiaddl
xchg
scas
and
popf
mov
enter
mov
aad
pop
or
sarl
xor
push
add
cld
xchg
outsb
sub
pop
xor
push
imul
or
lock
xlat
scas
dec
fwait
cmp
sub
repnz
incb
push
int3
and
sub
outsb
lcall
cmp
imul
mov
jp
popa
dec
pop
je
pusha
sub
cli
dec
lock
inc
jp
xchg
jg
mov
je
mov
mov
inc
or
push
push
jl
fs
and
in
dec
jo
in
lds
fcoml
int3
inc
xlat
flds
aas
mov
loop
into
ja
int3
inc
lock
out
outsl
std
test
outsl
mov
xchg
shrl
sbb
testl
pusha
sub
and
add
ss
jns
pop
sub
hlt
inc
mov
push
dec
cs
sbb
jp
les
pop
inc
fnstcw
repz
loop
jo
push
mov
dec
cli
adc
mov
ljmp
mov
cmp
imul
xchg
aaa
out
fcomi
push
jle
cmpsl
fmuls
outsb
jle
stos
aas
mov
lea
ret
or
incl
js
and
jmp
arpl
lcall
jno
sbb
aaa
loopne
jns
sti
sub
loop
inc
cwtl
pop
in
jmp
out
mov
add
addb
push
out
sti
dec
jo
shlb
add
fbld
xchg
orb
test
inc
repz
push
pop
xchg
repz
add
push
dec
rcrb
or
or
cmp
call
in
inc
shr
repnz
sbb
cwtl
sar
mov
and
mov
mov
test
fcomip
mov
in
jns
out
pop
dec
popf
dec
mov
and
shlb
and
xchg
jle
jae
and
shlb
fwait
lods
adc
fisubrl
mov
std
dec
mov
imul
jne
push
scas
xchg
pop
adc
pop
jne
jne
xor
jae
xchg
cmp
icebp
jne
out
leave
jno
cltd
aas
xor
out
pop
cmp
sub
arpl
lock
inc
aam
daa
mov
das
insb
test
je
mov
xchg
mov
stos
in
mov
ds
iret
adc
mov
and
imul
pop
xchg
xor
call
enter
and
cmp
pmaxsw
ret
push
ret
mov
shll
pop
jle
stc
mov
xor
dec
fs
mov
sbb
inc
adc
push
mov
rorl
xor
test
rcrb
sarb
add
sbb
jno
fldl
pop
dec
cmp
push
sbb
and
ja
lret
pop
fcomps
insb
mov
stos
in
ds
xor
mov
sbb
sbb
and
les
rcrb
adcl
mov
decb
mov
pop
lock
xor
jp
push
mov
mov
movsl
sub
or
out
add
cmp
xchg
push
lods
iret
pop
push
mov
cmp
lahf
mov
sub
inc
jno
jecxz
mov
or
out
push
jo
ds
sarb
fbstp
imul
leave
inc
ds
mov
aaa
sbb
sub
mov
jmp
test
mov
les
cmc
jl
cltd
int
jl
mov
and
addr16
iret
scas
pop
push
aad
sub
adc
mov
push
les
jmp
push
in
in
cmp
ret
xchg
add
pop
xchg
sahf
aaa
xchg
imul
jnp
sbb
cmp
ror
imul
mov
dec
xor
sub
jo
adc
and
es
out
ret
movsl
lea
out
test
out
cmp
jbe
push
pop
pop
jp
jae
jl
push
dec
pusha
push
call
fdivs
jle
mov
outsb
in
xchg
or
sarl
fnsave
pop
inc
in
aam
inc
inc
sbb
and
in
xchg
int
sarl
or
mov
dec
jnp
sub
mov
shrb
mov
iret
pop
sub
dec
imul
dec
shl
cltd
fsubrl
and
xchg
jmp
dec
daa
or
xchg
xor
dec
mov
fs
mov
jnp
ficoms
js
fstpl
je
test
test
jg
sub
shlb
dec
sbb
ljmp
js
add
nop
imul
mov
lds
inc
jg
sar
mov
fucomi
sbb
jnp
addr16
sbb
sbb
and
int3
lret
push
inc
xchg
sti
test
in
push
jg
fstps
mov
mov
adc
jmp
mov
out
pusha
inc
repnz
cwtl
das
and
xchg
mov
sbb
movsl
in
inc
jl
cmp
mov
pop
fldenv
int
nop
stc
sub
jecxz
and
adc
movsl
and
cs
mov
fwait
test
xchg
mov
ja
out
xor
adc
sub
and
push
pusha
test
mov
mov
xor
rcl
push
inc
std
mov
mov
jne
popa
ret
xor
jle
and
jno
bound
lods
cmp
push
pop
dec
cltd
arpl
or
jecxz
aam
sbb
jge
icebp
push
jp
and
into
xchg
test
add
in
push
fisttpll
adc
pushf
or
fwait
dec
or
fmull
pop
cmp
std
loope
aaa
pop
lahf
cltd
sub
or
ds
out
xchg
int3
scas
jp
sub
xor
aas
int3
inc
mov
int
jns
in
stc
jp
addr16
sub
push
pusha
arpl
in
ret
or
push
outsl
push
pushf
fcoms
jnp
dec
std
xchg
and
sbb
mov
sahf
lea
cltd
cmp
cs
mov
outsl
cmpsb
iret
mov
sbb
cmp
add
and
add
mov
sub
js
cmpl
mov
dec
inc
popa
sub
jecxz
push
addr16
ss
dec
pmaxsw
orb
movsl
sub
cltd
repnz
hlt
dec
mov
mov
sbb
add
push
mov
adc
mov
shr
in
add
cmp
add
in
mov
cmp
cld
imul
push
int3
shll
cmp
cli
sbb
call
sub
push
loopne
rolb
adc
sub
inc
hlt
jns,pt
sub
sub
xor
mov
ret
push
push
push
jns
xlat
ja
mov
arpl
out
rorb
xor
inc
enter
sti
pop
xchg
insb
cmp
imul
jg
das
cmc
enter
rcll
sbb
lods
stc
jno
mov
les
pushf
iret
cmpsb
lods
mov
fsubrl
lcall
roll
sub
xchg
lret
jle
stos
out
mov
sbb
popf
push
sbb
add
cmp
xor
test
cli
jmp
dec
imul
and
sbb
adc
xchg
pop
movl
repz
push
xchg
loope
outsb
xchg
pop
dec
or
adcl
xchg
test
inc
fcomi
push
or
inc
negb
dec
test
fcompl
les
adc
nop
scas
mov
cmp
into
sbbb
rolb
gs
in
clc
jo
imul
test
sbb
push
mov
pop
mov
cmp
test
out
and
xlat
cmc
dec
jge
adc
pop
and
insb
mov
push
daa
cmp
push
jnp
es
mov
push
xchg
loope
lret
jne
mov
jg
mov
cs
popa
jns
clc
arpl
xchg
jbe
ret
cmp
cmpsl
testb
in
cli
sbbb
shrl
ret
pop
mov
and
sarb
sub
leave
push
test
shrl
lds
mov
inc
inc
dec
jns
and
mov
xchg
fidivs
stc
push
test
stos
dec
cmc
sub
lea
jge
push
sub
ja
in
rorl
inc
cmp
jmp
jle
dec
stos
cld
fldt
push
arpl
inc
outsl
inc
imul
jo
repnz
out
inc
mov
push
cltd
sbb
pop
sub
pop
dec
movsb
arpl
fdivs
imul
pop
ret
in
aad
mov
int
cmp
cwtl
cwtl
aam
enter
std
inc
ss
stos
repnz
and
aas
scas
movsw
ja
insl
pop
push
dec
cmpl
repz
cmp
sbb
test
sbb
or
xor
mov
sub
dec
je
pop
adc
push
icebp
and
cmp
xchg
mov
daa
sbb
xor
test
adc
jmp
mov
mov
pop
push
mov
jnp
push
es
pop
xchg
mov
addb
imul
inc
rcr
add
pusha
fldenv
or
cmp
mov
lea
sub
js
jle
outsl
cltd
cmp
push
std
dec
sbb
in
xor
mov
in
in
aad
mov
out
xchg
mov
lret
outsb
mov
mov
daa
xchg
pop
sub
bound
xchg
pusha
test
push
mov
je
adc
mov
lods
xchg
push
repnz
outsl
out
xor
fldz
cmp
idivb
flds
das
jb
mov
push
movsb
xchg
call
mov
sbb
pushf
or
mov
mov
jmp
and
aad
bound
jne
ds
aaa
xor
or
or
and
adc
repnz
clc
lcall
stos
jle
mov
out
and
stc
add
jecxz
sub
and
hlt
and
test
pop
clc
sbb
jo
mov
test
lea
loop
cmp
out
fidivrs
scas
xor
mov
mov
pop
popf
in
ret
mov
add
xchg
push
jo
mov
cld
sub
scas
sub
movsl
adcb
and
lods
xchg
mov
divl
cmp
pop
push
cmp
popa
pop
mov
lret
sbb
fnstenv
push
rolb
mov
sbb
ljmp
daa
movsl
sbb
pop
icebp
cli
loopne
inc
pop
les
mov
lods
mov
insl
leave
das
push
out
mov
shrb
push
add
stc
lret
xor
outsb
adc
xchg
jecxz
pop
pop
xor
daa
sub
fbstp
repnz
add
mov
inc
incl
mov
dec
or
pop
ret
insb
adc
outsl
dec
mov
jl
mov
xor
adc
inc
decb
in
mov
and
jmp
lret
notb
jae
mov
dec
xchg
mov
fsubs
adcl
sbb
pusha
sbb
cmpsl
or
cld
dec
jle
movsb
dec
into
int3
decb
fcoms
lds
bound
movlps
inc
movsl
popf
xchg
jae
in
fidivs
scas
adc
nop
int3
and
cld
inc
fiaddl
mov
add
push
stc
or
cltd
adc
pop
fwait
sbb
sbb
jae
xchg
fldt
mov
jp
mov
dec
cld
mov
xchg
jns
jmp
sbb
lcall
cwtl
es
std
mov
pushf
inc
adc
push
cmp
sbb
movsb
or
mov
cmp
cwtd
insl
or
xchg
cld
xor
xchg
mov
ljmp
aas
gs
xorb
lods
jecxz
pop
cmp
out
out
push
aam
imul
mov
cwtl
pop
fcompl
stc
add
pop
scas
push
lahf
inc
pop
pop
lea
outsb
arpl
sub
cmpsl
fidivrs
cwtl
fimull
xchg
add
aaa
cmpb
pop
mov
push
add
scas
mov
jmp
mov
push
popa
stos
repnz
jg
cmp
inc
sub
xor
lds
fcoml
aam
sar
push
mov
cmp
jp
dec
sbb
nop
dec
pop
adc
mov
or
xchg
out
mov
adc
lahf
out
in
sti
add
in
inc
jb
fdivrl
fistpll
ljmp
xor
mov
shlb
cmpsl
cmp
divl
cmpl
sarb
cs
cmpsb
and
into
jge
in
or
and
aam
cltd
icebp
outsl
cli
mov
mov
call
mov
or
out
call
mov
jae
add
iret
shrl
sbb
pop
xor
sbb
repnz
inc
push
mov
mov
and
push
scas
xorps
movsl
jl
jb
loop
sub
fmull
fadds
or
inc
mov
aas
sbb
add
push
sbb
adc
or
out
ret
fdivr
push
dec
mov
push
movsb
mov
in
ds
jne
cld
add
mov
add
mov
cmp
scas
or
push
and
fisttps
xchg
push
xchg
sub
pop
or
pop
push
mov
insl
aad
mov
out
or
cmpsl
xchg
push
bound
fcomps
jle
outsb
shrb
jno
xchg
and
pop
cmp
ret
andl
jbe
and
inc
int
popa
pop
stos
iret
into
ljmp
jnp
xchg
jbe
sub
mov
mov
xchg
push
and
pop
test
ret
out
js
jg
loope
ja
sbbw
ds
test
sbb
insl
cmp
and
mov
arpl
imul
xchg
sarb
xor
divb
dec
in
inc
cli
ds
lods
test
arpl
xor
add
push
mov
std
pop
inc
inc
lea
or
jp
ret
and
scas
jo
mov
jae
push
movsl
jns
push
pop
jns
mov
push
xor
sbb
jmp
imul
or
mov
mov
or
mov
and
movsl
lock
sbb
cli
bound
xchg
rorb
sbb
mov
movsl
je
dec
ljmp
aam
je
cmpsb
decl
pop
aam
inc
das
call
test
jecxz
imul
aad
rcr
push
dec
loopne
addb
jmp
pop
and
cmp
mov
xor
dec
popf
hlt
icebp
add
lret
bound
dec
pop
dec
and
xchg
sub
inc
mov
js
test
les
cmp
sub
cmp
movsl
sbb
int3
mov
and
or
jo
add
scas
jb
pop
dec
or
test
negb
jl
add
add
ja
push
lods
subl
lods
xor
push
inc
sbb
xorb
xchg
xor
cli
sahf
das
add
jnp
or
into
sub
adc
and
inc
push
fdivs
xchg
clc
and
inc
dec
sub
loop
ret
and
aad
mov
xchg
jo
jbe
push
sbb
jo
scas
inc
push
leave
pop
add
pop
sarl
and
mov
imul
outsb
rcrl
dec
add
test
incl
outsl
divb
in
mov
bound
jg
mov
or
cmp
adc
pop
icebp
in
inc
xor
cwtl
push
loope
das
sbb
aaa
mov
sub
and
jnp
shrb
xchg
clc
pop
sbb
imul
stos
je
xchg
repz
lahf
or
add
xor
call
jle
cmpsl
dec
or
xchg
scas
sbb
outsl
cli
add
dec
vmovhpd
cmp
loope
xchg
sbb
push
test
lret
nop
decl
push
out
test
lea
push
and
fldenv
imul
cld
enter
adc
jg
insb
test
push
adc
outsl
sub
je
inc
out
mov
loopne
xor
push
adc
rorb
fisttpll
in
nop
inc
jns
ret
fs
out
iret
jno
ja
sbb
fistl
jbe
aam
sbb
popf
mov
mov
arpl
jno
lea
pop
fcom
push
cmc
xchg
loopne
add
lods
out
mov
call
xchg
pop
inc
or
cwtl
outsb
or
cmpsb
mov
mov
pop
lea
mov
push
mov
adc
sbb
sub
out
mov
int3
lahf
test
mov
and
dec
push
jecxz
pop
les
dec
out
xchg
rorl
mov
nop
sub
icebp
stos
into
ss
leave
push
xor
mov
mov
adc
popa
xchg
xchg
push
mov
pop
or
jns
xchg
push
daa
jge
adc
inc
das
lds
ss
gs
pop
out
sub
test
xchg
fldcw
imul
mov
arpl
push
xchg
mov
pop
jg
mov
xor
outsl
jae
and
push
test
jp
xchg
lock
lods
push
fsubp
pop
jno
cmp
inc
sub
pop
lea
cs
add
popl
gs
pop
lret
sub
mov
sub
insl
inc
sub
or
mov
cwtl
incl
mov
cs
ja
and
das
outsl
cltd
and
inc
pusha
jno
jecxz
sub
pop
insb
sti
and
mov
std
cmp
push
pop
shrl
and
pop
or
mov
insb
fsub
xor
sub
cmpsl
lcall
test
pop
xchg
sub
insl
jbe
jl
jne
sbb
mov
jns
jnp
clc
movl
cmp
pop
or
cwtd
sbb
loop
loop
das
xchg
in
lods
add
subb
sub
out
pop
mov
pop
sub
das
daa
xor
sbb
jl
sub
pop
or
add
int3
jo
xor
sbb
jp
push
out
test
jecxz
btcl
mov
fimuls
leave
test
aas
push
cli
mov
loope
jl
and
jmp
dec
xchg
out
int3
mov
std
rorb
iret
add
sti
mov
mov
stc
test
shll
or
addr16
mov
jle
cld
xorl
pop
into
pop
mov
mov
adc
push
test
movb
mov
loop
jecxz
loop
cmp
fistl
jns
lahf
loope
add
jbe
dec
pop
pop
push
cmp
sub
enter
mov
cmp
push
fdivrl
mov
sbb
inc
fisubs
xor
adc
push
pop
in
jmp
push
js
fnstsw
pop
and
dec
cli
dec
mov
outsb
aaa
ret
sbb
jo
jle
dec
inc
test
inc
test
insl
mov
inc
shrb
imul
sbb
fnsave
jmp
scas
cmpb
stos
das
jl
push
mov
cmp
mull
repnz
jg
adc
arpl
mov
sub
aad
sub
popa
sub
std
push
arpl
jne
je
or
popa
repnz
jno
jmp
jg
fdivrp
adc
and
out
arpl
in
int3
lods
jp
adc
cmp
stc
loope
test
test
in
xchg
add
push
adc
dec
insb
mulb
stc
push
fnsave
fdivrs
cmp
pop
pop
cltd
mov
jecxz
addr16
mov
sbb
inc
xor
aam
mov
and
repz
mov
and
adc
push
enter
push
addr16
mov
mov
jge
dec
push
dec
stos
in
sti
cld
mov
stos
mov
pop
push
ljmp
outsb
xchg
jl
in
cwtl
sub
jo
and
jle
call
sbb
sub
push
ja
and
push
mov
imul
sbb
mov
mov
aam
sub
jae
jp
ja
leave
xor
mov
jl
push
arpl
dec
xlat
or
imul
cmp
and
outsl
out
mov
inc
repnz
imul
or
ret
adc
movsl
sbb
inc
push
sub
jp
test
mov
inc
adcl
orb
loope
test
and
inc
leave
leave
adc
mov
mov
out
inc
xchg
jecxz
mov
lea
or
mull
bound
adc
xor
loope
add
or
mov
das
adc
xlat
subb
inc
lods
pushf
nop
lods
and
iret
lock
mov
out
mov
stc
cmpb
fisttpll
inc
imul
sub
in
adc
mov
jmp
ja
in
pusha
pop
inc
inc
xchg
xchg
cld
pop
xor
lods
loop
out
fimuls
and
loopne
sbb
add
sub
aas
jle
jmp
ljmp
fcomps
stos
enter
cmpsl
mov
mov
je
and
pop
fisubrs
xchg
sbb
out
fyl2x
mov
pusha
cmp
sub
ja
cmpsb
dec
aaa
mov
jno
repnz
decl
outsb
sbb
cmpsl
loope
jns
add
inc
fnstsw
aas
sub
dec
sub
lods
cmp
aad
aad
mov
movsl
cld
insb
scas
and
out
sbb
flds
cmp
sub
jecxz
insl
xchg
fdivp
leave
sub
jo
movsl
dec
mov
sub
mov
dec
push
test
iret
dec
ret
mov
icebp
mov
pusha
outsb
mov
cli
mov
cmpb
movsl
das
shrb
adcb
icebp
cmp
fiadds
pop
dec
add
mov
inc
xlat
fwait
ret
push
fiaddl
popf
lcall
cmp
jb
jmp
dec
and
xchg
cmp
mov
mov
lret
push
pusha
out
in
and
mov
cmpsl
fcom
cmp
jge
js
push
mov
pop
outsl
testl
dec
out
mov
bound
lret
xchg
pusha
push
data16
xchg
cmpsl
in
mov
pop
sbb
scas
and
popa
rcll
aam
mov
pop
test
bound
adc
test
cld
rorb
sub
adc
push
je
and
daa
mov
mov
mov
push
xor
jmp
fstps
repz
out
pop
or
push
jecxz
ret
sbb
mov
dec
add
ss
adc
and
push
int3
hlt
jne
stos
call
ret
inc
mov
cmp
popa
jbe
push
push
movb
out
stos
add
push
xchg
dec
andb
movsl
mov
inc
mov
dec
cmp
xor
mov
xor
push
clc
clc
imul
cmp
push
xor
cmpsl
xor
xchg
imul
xchg
fcomi
pop
and
shrb
push
ss
inc
test
jo
mov
sub
leave
loop
cmp
js
in
outsl
push
ja
add
inc
xorl
sub
pop
or
nop
jbe
cmpb
sub
scas
inc
lcall
mov
pop
adc
cmpsl
mov
lods
or
repnz
inc
fmul
sub
add
cmp
cmp
insb
enter
in
add
pop
mov
iret
mov
xchg
cmp
cmp
das
cld
hlt
cmc
xlat
mov
and
push
mov
cmpsl
inc
jns
cli
inc
xchg
stc
movzwl
pop
fdivs
xchg
sub
sub
mov
repnz
adc
push
and
inc
int3
push
cmc
mov
or
sub
and
mov
sbb
and
mov
ret
es
sti
shlb
jns
addr16
adc
arpl
test
push
or
push
insb
test
aam
roll
sbb
or
scas
dec
add
xor
add
test
aam
lods
roll
popa
sbb
or
mov
cmpl
pop
fiadds
sub
std
pop
dec
je
cli
xchg
jb
scas
cltd
mov
adc
inc
cmpsb
mov
jbe
sbb
mov
mov
add
rcrb
in
repz
xor
xchg
adc
lcall
shr
add
aaa
inc
dec
movsl
or
fsubrl
es
adc
push
jmp
cmp
xor
repz
divb
fildll
push
push
sub
lods
mov
loop
mov
int
pop
add
mov
notl
sub
sub
mov
bound
pop
push
dec
imul
test
mov
cmpsb
adc
mov
test
mov
push
and
inc
loope
sbb
repz
insb
sub
xchg
push
sbb
adc
lds
jg
pusha
sub
sbb
test
jns
sub
inc
adc
mov
cwtl
inc
arpl
pop
fwait
mov
and
leave
inc
mov
ficompl
and
jge
hlt
or
mov
inc
xor
ds
lock
push
adc
push
dec
lods
shl
adc
ss
std
std
loop
adc
movsl
adc
pop
mov
cmp
cli
gs
xor
test
rcrb
mov
fbstp
adc
xor
mov
outsl
adc
xchg
cmp
push
mov
daa
in
sub
stc
mov
cmp
int
daa
cmpsl
je
pop
adc
scas
insb
push
inc
movsl
jno
fcompl
adc
xor
inc
mov
gs
and
mov
cmpsb
mov
fcoms
inc
mov
mov
jno
fcmove
lahf
mov
xchg
mov
sub
lock
adc
sbb
sub
faddl
pop
push
jecxz
clc
or
pop
mov
push
or
outsb
xor
push
test
mov
pop
sahf
sbb
notl
sbb
fs
mov
xchg
loop
or
lock
add
call
fsubs
popa
cmp
adc
jbe
lods
repz
arpl
cltd
xchg
dec
andb
or
bound
popa
iret
jns
je
dec
mov
lret
gs
jmp
shlb
lds
jl
mov
ret
lcall
xchg
fdivrs
rorb
push
jmp
sub
loope
xchg
ret
mov
pop
jmp
movsl
je
mov
dec
or
and
mov
je
addl
dec
mov
add
mov
xchg
push
in
add
pop
cli
shrb
xchg
data16
lods
testl
test
aam
inc
mov
xor
cmp
mov
sbb
and
fxch
mov
ficompl
rcl
loopne
jnp
fisttpl
mov
cmpb
outsb
dec
pop
or
xchg
and
mov
pop
jp
mov
pusha
insl
call
ss
push
push
lret
ljmp
mov
cwtl
insb
mov
pop
in
fldcw
cmp
test
hlt
es
sub
jb
ds
sbbb
popf
push
pop
outsb
lret
pop
cmp
loopne
enter
insl
xor
into
push
int3
mov
inc
call
cmp
shlb
std
repz
aas
rcl
icebp
jp
add
pop
dec
shl
shll
xchg
hlt
cmp
out
addr16
mov
mov
mov
sarb
sub
or
scas
sarb
popa
sbb
rcll
mov
imul
rcr
out
test
mov
push
sbb
out
outsl
loop
and
ret
es
push
jne
int3
out
andb
mov
faddl
ret
fmull
cli
das
add
ret
cs
mov
leave
dec
scas
adcb
inc
repz
xchg
ret
mov
or
xchg
pop
mov
xor
out
je
clc
fbld
pushf
or
jno
inc
icebp
xchg
fiaddl
int
pop
jmp
stc
xor
sub
cmpsl
pop
sub
and
outsb
sub
pop
icebp
outsl
adc
xor
subb
pop
cli
push
mov
mov
sti
imul
push
icebp
pusha
lret
dec
pop
adc
rcl
jb
cmpsb
cltd
fsubl
or
inc
push
adc
push
fnstenv
mov
dec
les
lcall
adc
add
leave
ljmp
scas
pop
add
jl
push
dec
dec
movsb
in
xchg
pop
add
mov
and
std
jp
adc
sti
adc
in
outsb
std
pushf
mov
enter
add
fisubl
mov
pop
shll
xorl
pcmpeqb
inc
xchg
sbb
or
into
mov
or
cltd
xcrypt-ctr
cmpsl
lcall
loope
jge
mov
xlat
data16
loope
inc
fisttps
aad
cwtl
sub
lcall
sub
cltd
xchg
cmp
or
pop
xor
fldt
push
cli
mov
lahf
in
clc
sbb
pop
mov
jbe
mov
xorl
jp
push
out
ja
pushf
push
js
lcall
dec
and
daa
hlt
lods
mov
sbb
sahf
and
loop
pop
ljmp
xchg
shll
lea
jne
add
adc
sbb
rcl
pop
mov
dec
out
pop
dec
jne
and
xchg
arpl
mov
in
inc
ret
pop
adc
jae
mov
mov
push
mov
sub
rcrl
loopne
addr16
pop
mov
addr16
cltd
and
std
inc
test
imul
pop
loopne
rcrb
pop
stos
xchg
mov
pop
es
xchg
adc
cwtl
inc
aaa
jae
roll
insl
jle
popa
flds
sub
sar
cmp
clc
clc
arpl
sti
sbb
les
cmp
and
and
inc
dec
pusha
mov
jae
out
sar
mov
aaa
xchg
out
sub
movsb
leave
xlat
testl
mov
mov
movsl
add
cmp
push
mov
sbb
jbe
daa
pop
lods
mov
jmp
in
shll
in
pop
test
out
push
inc
test
mov
pop
and
xchg
cmp
fsubs
xchg
xchg
add
sub
leave
push
test
mov
jecxz
adc
and
hlt
mov
ja
int3
into
pop
mov
mov
test
call
addr16
jmp
into
sub
popa
pop
fs
imul
fisubrs
mov
sbb
in
sti
gs
xchg
push
mov
imul
jne
and
outsl
jbe
nop
out
btcl
pop
insb
lds
jae
xor
stos
jno
mov
push
cmp
pop
bswap
xchg
xor
stc
cmpsb
jo
xchg
dec
xchg
fildl
pushf
sahf
add
negb
in
jno
jecxz
mov
sub
and
cmp
icebp
adc
sub
mov
test
fbld
push
pop
mov
mov
push
xchg
add
xor
pop
cmp
pushf
jl
push
lock
flds
lods
mov
jbe
inc
jl
and
add
xor
rol
mov
pcmpgtw
jno
into
cmpsl
insl
adcl
jp
mov
fdivs
lahf
jo
call
repz
xchg
stos
ja
lea
sbb
fnstenv
loopnew
outsb
sub
sti
mov
push
lock
mov
mov
notl
rorb
pop
inc
mull
gs
xor
xchg
and
xchg
mov
pop
imul
out
jmp
xor
jb
mov
fsub
arpl
pop
add
xchg
xor
fistl
xorl
mov
popa
arpl
pop
mov
repnz
adc
in
jne
or
lret
xchg
push
inc
dec
mov
mov
xchg
addr16
pop
mov
icebp
jnp
clc
test
xor
push
imul
adc
insb
call
sbb
movsl
push
jg
ss
pop
out
lock
mov
testb
insl
stc
jmp
fisttpll
aaa
cmp
sub
mov
fwait
pushf
push
xchg
repz
jbe
ret
xchg
lds
mov
inc
inc
sbb
push
std
pop
roll
sub
icebp
jg
test
sub
aaa
adc
insb
clc
outsl
jnp
pop
dec
ljmp
dec
rcrl
sti
push
fistpll
push
sbb
xor
loopne
pusha
je
adc
jb
dec
mov
orb
jo
xor
mov
das
push
pop
mov
fcomi
data16
mov
xchg
test
mov
mov
out
insl
les
add
mov
and
stos
push
fstps
addr16
mov
dec
or
inc
add
sub
xchg
out
and
in
negb
cmp
dec
dec
loope
lret
nop
inc
mov
jle
xor
xor
or
bound
std
inc
pop
sub
outsl
add
jno
sbb
mov
outsl
and
sub
pusha
dec
stos
shlb
pop
fcoml
mov
nop
lock
push
mov
ds
xchg
inc
cld
or
repnz
pop
push
test
xor
bnd
push
lds
mov
pop
mov
mov
notl
int
arpl
xchg
xchg
cwtl
ret
mov
pop
jl
xchg
nop
filds
pop
and
pop
mov
out
andb
movsl
sub
daa
lods
insl
arpl
fwait
mov
jmp
sbb
pop
jl
pop
xchg
pushf
adc
jae
int
popa
pop
rcrb
mov
clc
ficomps
icebp
loop
jb
adc
std
cmpsl
cmp
dec
iret
add
ret
xor
test
ss
dec
mov
pop
jb
adc
scas
mov
scas
ds
loopne
insb
sub
fwait
cmp
adc
in
dec
popf
or
mov
mov
fdivl
cli
lret
adc
xor
push
fidivs
jne
or
outsl
addr16
cmp
adc
cmp
adcl
mov
insb
dec
add
dec
mov
mov
push
cmc
cmpsb
pop
jge
mov
mov
pop
dec
or
outsb
rolb
dec
subb
movsl
imul
gs
popa
pop
jae
push
pop
jnp
inc
testl
push
mov
in
int3
ds
stos
jge
addb
push
xchg
push
iret
sbb
xor
es
lods
lods
or
push
xlat
in
call
sbb
notl
pop
cmp
cmp
cmp
cmp
mov
jns
sub
dec
xorb
in
shlb
xchg
fndisi(8087
adc
dec
loop
es
inc
or
into
and
pop
inc
dec
jl
mov
or
mov
push
xor
mov
test
fldt
inc
outsl
subl
sbb
dec
xor
xor
mov
jle
push
test
push
data16
lret
fucomp
push
test
mov
dec
sti
in
in
arpl
dec
add
jb
or
loopne
sub
mov
test
cmc
and
push
repz
out
outsb
mov
and
rcr
mov
and
ja
mov
sbb
sub
int3
jns
dec
cmpsl
xchg
xlat
cld
and
cmpl
int3
into
mov
dec
jb
or
pushf
lcall
test
mov
push
adc
incb
cmpl
mov
rol
sbb
sub
out
cli
mov
aas
out
icebp
pop
xchg
mov
subl
iret
and
outsl
sbbb
push
sub
pop
jns
mov
les
xor
pop
sbb
mov
scas
loope
adc
aas
xor
mov
nop
inc
int3
stos
into
sbb
repnz
jae
dec
pop
es
arpl
std
std
xchg
xchg
es
pop
cltd
leave
cld
imul
adc
les
js
sbb
ret
lea
fwait
scas
push
push
and
inc
mov
lret
fstl
push
in
sub
rclb
addl
mov
rcr
xchg
sbb
inc
push
rcrb
mov
sahf
rol
cld
cmp
pop
cmp
out
test
and
fwait
andl
pop
cmp
mov
mov
sbb
fistpl
and
cmp
shrb
call
es
cmpsl
aaa
rolb
inc
idivl
addl
mov
mov
pusha
es
mov
ss
cmp
mov
mov
aad
cwtl
sbb
frstor
or
mov
mov
fadds
mov
js
pushf
testb
inc
js
out
mov
push
data16
xor
jae
push
or
pop
mov
rcrb
inc
imul
fdivl
pop
xor
jbe
les
cmp
mov
lcall
cld
dec
lahf
mov
and
lcall
xchg
repz
aam
cmp
int
dec
push
pop
xlat
xchg
dec
sbb
out
xor
xor
push
mov
xchg
sub
cmpsb
aas
es
or
outsb
rcl
outsl
ds
mov
imul
enter
xchg
out
or
cli
sbb
imul
sbb
orb
imul
jmp
idivl
jne
dec
lret
adc
sub
cltd
fldl
fisttps
ret
cli
pop
mov
movsl
adc
cmp
subb
les
lds
adc
pop
arpl
sahf
aaa
bound
xor
loope
jmp
mov
xchg
imul
push
loope
shll
mov
mov
mov
xchg
fisttpl
push
mov
mov
sbb
fldcw
es
push
xchg
rcrl
dec
test
out
stos
inc
stos
test
scas
mov
cli
xchg
sti
dec
lds
pop
lcall
out
data16
mov
xchg
mov
inc
dec
sbb
mov
push
jle
out
repnz
xchg
shlb
adc
std
mov
sarb
ljmp
mov
mov
or
xchg
hlt
pop
cld
push
ja
sbb
push
push
test
sub
adc
ficomps
xlat
mov
loopne
lods
adc
sub
fbstp
sbb
xorl
pushf
push
xchg
and
dec
aad
pop
jno
les
mov
fdivrs
pop
test
mov
fdivrs
ss
andb
shl
jno
sahf
lea
mov
mov
cmp
shrl
or
adc
enter
add
mov
inc
mov
ret
pop
fwait
xor
hlt
xchg
jge
je
shl
xchg
sub
or
stc
out
ljmp
pushf
or
xchg
out
adc
jae
imulb
pop
pusha
xor
inc
mov
rclb
jge
dec
xor
cmp
jle
pushf
nop
sbb
add
in
inc
fdivrs
inc
inc
decb
cmpsl
nop
pusha
jle
push
aas
sahf
mov
mov
ficomps
sub
pop
push
jmp
inc
cmp
data16
xlat
and
xor
lock
mov
dec
mov
dec
pushf
pop
cmp
cmp
mov
push
mov
hlt
mov
mov
aam
lret
cmp
mov
mov
sub
push
or
popa
pushf
rclb
xor
xor
ffree
daa
int
jl
clc
adc
push
int3
xor
shll
push
and
xchg
adc
sbb
das
mov
dec
lret
daa
fdivp
adc
data16
jnp
imul
mov
lahf
mov
cmpsb
decl
adc
xchg
lods
hlt
push
push
sub
das
mov
mov
mov
loope
push
int3
clc
sub
lds
push
sbbl
out
mov
subb
mov
sahf
jmp
and
mov
imul
stos
or
fimuls
jge
adc
rolb
mov
cli
sbb
mov
inc
inc
sbbl
xchg
outsl
dec
inc
insl
adc
adc
inc
mov
cmc
aam
or
pop
inc
jmp
cmc
or
cmpsb
inc
rcll
scas
pop
xchg
pop
push
loopne
mov
push
icebp
xchg
jbe
jge
xchg
mov
mov
cmpsb
clc
jae
jg
sbb
mov
shrb
jno
sarl
negl
out
les
cmpsl
js
sub
inc
pop
and
mov
shll
or
and
xchg
test
mov
mov
jecxz
or
stos
mov
clc
ljmp
dec
mov
enter
outsl
jnp
or
cmpsb
mov
inc
fidivs
add
fstpt
and
and
lods
daa
cmp
ret
stos
frstor
out
shrb
jecxz
sbb
inc
lds
xchg
xor
and
out
pop
stos
aas
pusha
cmpsl
pop
fwait
xor
int3
jmp
pop
push
dec
lock
cmp
pop
lock
int3
cmpsb
inc
fpatan
fstp
mov
lcall
ret
sub
ss
jge
stos
lret
clc
cmp
and
stc
or
push
out
mov
sub
push
dec
push
add
mov
adc
add
inc
js
mov
sbb
xchg
xlat
push
mov
pop
std
mov
repz
mov
aam
add
mov
cmpsb
cltd
mov
or
nop
icebp
inc
cmp
and
or
gs
mov
gs
lahf
mov
fisttpl
btc
adc
inc
mov
cmpsb
filds
push
rclb
bound
popf
push
cmpsb
out
lret
xor
sbb
out
hlt
dec
shlb
jo
jmp
mov
mov
test
js
movsb
pop
pop
inc
add
lret
fsubrl
xor
pop
inc
pusha
popa
mov
and
negb
loop
lock
dec
sub
mov
idivl
enter
add
xor
insl
out
mov
sub
insb
arpl
or
insb
rcr
loopne
xchg
mov
adc
data16
into
and
call
lea
xchg
mov
xchg
sbb
lret
mov
adc
xchg
sarl
mov
inc
mov
dec
add
push
adc
fs
pop
cmpsl
xchg
push
mov
vandnps
pop
push
adc
jmp
mov
cltd
lahf
add
shll
fs
sub
aad
jg
mov
repz
ja
clc
dec
jbe
stos
push
xor
pop
frstor
test
xor
adc
cmpsl
pop
dec
in
jnp
loope
aam
movsb
pop
out
test
push
xchg
stos
hlt
mov
xorb
in
scas
sti
push
fsubrs
sbbl
jmp
int
sub
inc
pop
adc
ret
xchg
repnz
mov
jg
inc
enter
out
sbbl
stc
nop
out
test
xor
jg
jle
jae
pusha
push
push
mov
cs
xchg
roll
dec
ret
in
outsb
mov
mov
xchg
inc
jnp
imulb
cli
lods
sub
stc
jge
insb
push
in
je
dec
jp
cmp
addr16
out
ss
and
icebp
stos
out
jne
aaa
aaa
stos
push
add
arpl
std
jecxz
jp
sub
push
xchg
imul
sub
lock
test
push
xor
dec
mov
into
stos
mov
lds
scas
mov
pop
jno
js
xchg
mov
xchg
scas
out
push
rcrl
add
xchg
pop
imul
leave
mov
mov
stos
pusha
sbb
je
mov
pop
cmpsl
lea
dec
mov
pop
inc
lods
inc
bound
or
xchg
nop
js
daa
jb
insl
fildl
sarb
lock
or
fiaddl
xchg
sbb
push
cmp
ss
or
inc
or
pop
xchg
sbbb
pop
out
ljmp
mov
push
xchg
add
aas
xor
or
ja
into
ljmp
test
cmp
dec
testl
mov
dec
loop
xor
shl
rorl
sbb
cmp
out
ljmp
push
bound
inc
add
xchg
mov
outsl
notl
add
mov
jmp
mov
xor
in
adc
aam
pop
push
jg
insb
int
mov
dec
repz
xchg
into
ljmp
jb
pushf
sbb
push
cmc
push
mov
out
addr16
adc
jns
lcall
pop
pop
mov
stc
pop
and
inc
add
imul
shl
das
mov
dec
rcrb
dec
mov
mov
lea
sar
mov
xor
call
push
xor
out
arpl
cwtl
xchg
push
xor
fnsave
mov
adc
sbb
cmp
push
lods
das
fcompl
ljmp
xlat
js
xchg
fwait
das
cmp
sahf
icebp
jae
xchg
sbb
sbb
insl
cmpsb
cmp
pushf
mov
roll
jl
ss
push
lcall
nop
lea
adc
ret
mov
addr16
insl
sbb
dec
mov
sahf
outsb
shrb
dec
movsb
dec
jbe
sbb
repz
in
add
dec
loop
jb
outsb
nop
push
andb
jge
daa
add
pop
mov
mov
lahf
insb
xchg
jno
sub
mov
adc
arpl
rcll
les
dec
and
not
test
es
fdivl
shrb
sarl
stos
mov
fstl
push
test
in
ret
gs
out
in
rorb
pop
inc
mov
ret
xchg
cmp
loope
lcall
cmp
dec
popa
repz
cs
or
les
or
js
outsl
sub
mov
cmp
add
int3
lods
cwtl
push
and
dec
dec
lahf
in
push
out
scas
mov
insl
decl
push
xor
mov
mov
or
push
adc
leave
jnp
or
fadd
addl
pusha
mov
mov
push
mov
inc
sub
sub
push
sub
sbb
dec
add
cltd
inc
ja
lret
add
clc
xchg
jg
sub
loope
inc
cli
fildl
insb
cmpsl
lds
sbb
pusha
jmp
addl
loope
test
addr16
scas
xor
orl
add
and
popa
mov
cmp
pushf
les
das
mov
fisubs
sub
adc
into
insb
je
dec
aam
sbb
je
dec
cmpsl
inc
je
repnz
add
mov
sbb
stos
mov
sbb
cmp
push
stos
xor
add
shrb
push
out
setnp
mov
es
gs
jge
push
jne
fldt
and
dec
gs
jbe
jp
jle
in
pop
jb
inc
jae
clc
add
in
and
imul
jb
fidivrs
pop
jle
mov
mov
and
sub
and
sub
xchg
dec
mov
popa
dec
jnp
lods
ljmp
add
adc
mov
sti
mov
stos
cmc
loop
mov
out
mov
inc
pop
inc
std
mov
les
xchg
addr16
es
insb
cwtl
shrb
or
lock
ja
mov
inc
cmp
mov
sub
cmpb
and
xchg
and
ljmp
push
xlat
add
loop
mov
and
imul
pop
cwtl
jb
inc
and
xor
cld
jecxz
in
jnp
test
cmp
aaa
data16
mov
lods
enter
sbb
dec
xchg
sbb
pop
bound
jb
and
push
mov
mov
insl
addb
jge
dec
rclb
sbb
sub
xor
loope
into
jp
je
and
jb
push
daa
sbb
dec
arpl
fwait
test
pop
xchg
pop
pop
pop
int
push
cs
and
bnd
ss
sbb
ficoms
jne
lods
mov
insb
outsl
ret
adc
mov
jbe
arpl
das
rcr
test
cmp
hlt
cmp
ja
lcall
push
xchg
pusha
icebp
es
fnstsw
or
adc
orl
shr
cmpl
mov
inc
or
rcll
ja
cmp
push
mov
mov
pop
nop
add
mov
es
lds
ljmp
and
ja
ret
test
jmp
test
sbb
insb
cmp
lret
mov
insl
sbb
fldenv
cmpsl
gs
mov
cmp
imul
jle
mov
jp
pop
inc
dec
mov
mov
dec
cmp
rcrl
ret
aad
and
fcoml
mov
cmp
pop
xchg
icebp
pusha
dec
mov
xchg
sub
inc
push
sub
gs
fmulp
dec
pusha
out
push
fcomi
sbb
fwait
cmp
xchg
sub
dec
aam
adc
shrl
mov
jmp
dec
mov
push
out
leave
shrb
and
mov
out
movsb
in
mov
les
test
loope
inc
adc
pop
arpl
sahf
das
jge
cmpl
push
jno
mov
ljmp
adc
jp
cld
or
scas
rcl
inc
or
push
in
sub
pop
dec
out
cmc
in
fisubrl
inc
push
inc
clc
and
ljmp
push
outsb
mov
rol
push
sub
rcrl
mov
mov
sub
add
push
shlb
mov
dec
pop
dec
roll
mov
sub
mov
int3
push
aam
and
lret
xor
fildl
pop
xchg
orb
pop
or
shlb
cmpsb
adc
push
jmp
into
or
mov
cmp
loop
cmp
daa
dec
stc
cmp
cmpsb
xchg
cmpsl
cmpsb
mov
sbb
mov
and
aad
jb
adc
lret
push
xor
mov
xchg
mov
add
push
mov
int
ja
mov
mov
jo
loope
cmp
and
das
scas
lea
cld
into
test
movsl
addl
mov
sbb
dec
stos
loopne
ds
ds
ret
sub
mov
mov
shrl
loop
mov
inc
or
or
add
shll
sub
and
xchg
sbb
pushf
sbb
cmp
cmp
mov
jb
cmpsl
in
pop
and
test
cmpsl
jp
adc
mov
xor
mov
pop
xchg
orb
lcall
adc
xor
pop
outsb
sbb
adc
pop
fstpt
sbb
push
ret
pusha
jnp
lods
inc
pop
adc
cmp
push
es
aam
lds
adc
or
test
mov
inc
jb
rcr
mov
out
lcall
mov
push
lods
cmp
imul
pop
and
dec
ds
int3
sub
adc
fistl
mov
cmp
outsl
aam
cmpsb
and
mov
xor
mov
add
pop
movsl
out
pop
adc
jb
mov
ljmp
sub
mov
lods
push
enter
shlb
sarl
pop
jns
sbb
imul
push
sub
stc
sahf
push
sti
cmp
sub
shl
je
dec
push
in
jmp
sub
sub
mov
ret
ljmp
test
cs
scas
cmpsl
xchg
jp
les
jecxz
jmp
pusha
or
mov
cltd
lods
fisttpl
pushf
xchg
jns
in
or
and
mov
insl
cmp
add
or
andl
xorb
fmull
dec
into
sbb
out
aad
sti
stos
and
mov
push
xchg
jmp
mov
inc
orl
pop
sbb
jb
jmp
repz
addb
popf
pop
push
inc
xchg
inc
push
and
jb
cli
push
jecxz
mov
mov
gs
aaa
xchg
ret
push
ja
out
test
out
xor
cmp
or
jo
dec
xchg
roll
mov
int
aaa
jge
jbe
xchg
jmp
add
cmp
sbb
mov
movsl
pop
dec
adc
repnz
outsl
jae
int
mov
decl
xor
jg
gs
ret
pop
bound
mov
lret
stc
push
cld
nop
rolb
cmpsb
prefetch
or
sbb
mov
xchg
mov
dec
mov
xchg
ss
sbb
push
daa
jle
xor
inc
mov
cmp
cmp
xchg
add
out
or
imul
inc
stos
adc
cmpsl
mov
lea
in
sbb
adc
les
loope
gs
jnp
ljmp
push
shlb
mov
shl
dec
push
mov
cli
adc
faddl
lahf
xchg
aad
mov
mov
or
sub
repz
out
push
add
pop
in
pop
mov
or
aad
dec
dec
inc
mov
xchg
icebp
sbb
std
pop
add
inc
inc
leave
loope
sub
fnstsw
int
adc
out
sbb
subl
adc
jns
mov
inc
jbe
push
movsb
nop
inc
xor
cmp
jb
fildl
repz
in
mov
pop
xchg
sub
lahf
add
adc
and
std
sbb
rorb
or
mov
mov
sbb
call
mov
in
sahf
adc
jecxz
fstpl
or
clc
dec
inc
inc
fldenv
aas
addb
call
pop
mov
dec
dec
xchg
es
cmpsb
dec
mov
fbld
add
inc
lret
in
xor
jl
scas
loope
or
aaa
pop
repz
mov
push
mov
cmp
loopne
adc
sbb
and
mov
pop
into
in
push
not
ret
aas
into
mov
aaa
or
mov
dec
xor
push
add
or
shl
jmp
in
dec
mov
sarl
lcall
scas
dec
jb
sub
js
jecxz
mov
rcrb
pop
ja
cmp
out
mov
jne
mov
cmp
xlat
xor
daa
xlat
xchg
inc
stc
stos
cmp
jmp
dec
scas
ljmp
mov
movsl
mul
push
push
jns
fxch
mov
mov
cmc
shlb
rorl
fistps
mov
adc
popf
or
lcall
mov
stos
fistpll
sub
pop
sar
and
rorb
jbe
mov
ds
dec
add
daa
aas
cmp
cld
mov
adc
mov
sbb
shl
sbb
pop
adc
xlat
std
in
mov
cmp
js
add
cs
xor
xchg
stos
mov
sbbl
lock
fdivrl
cmp
dec
dec
fisubs
ljmp
xchg
pusha
stos
mov
cs
sti
test
pop
jo
scas
into
test
mov
cld
push
jg
inc
in
inc
fisubrs
fsubrl
aam
pop
xchg
stos
and
test
mov
mov
mov
and
jge
cmp
dec
mov
or
hlt
adc
pop
and
mov
je
out
cmc
test
arpl
mov
xor
inc
sub
or
nop
mov
add
adc
insl
mov
push
and
pop
scas
jmp
jbe
in
lahf
fwait
sbb
and
cmp
shll
push
sar
jb
mov
inc
dec
mov
lea
mov
xchg
call
insb
inc
scas
icebp
fsubrl
sbb
cmpb
adc
ret
in
or
xchg
enter
push
inc
push
dec
insl
jecxz
jmp
sbb
hlt
jl
stos
das
sbb
sub
dec
enter
cld
cmp
or
pop
aas
adc
xor
push
outsb
push
or
scas
lods
mov
or
pop
movsl
xor
mov
sub
xchg
rclb
lcall
sub
sbb
addr16
cli
fstps
cli
sar
mov
lcall
int
sub
cmp
adc
adc
mov
mov
add
jb
push
cltd
and
inc
rorl
or
or
pop
call
shlb
orb
cmp
ljmp
cltd
mov
adc
pop
aad
dec
packsswb
jle
mov
fwait
adc
mov
or
jecxz
mov
sti
ljmp
dec
imul
mov
push
cmp
mov
repz
mov
cmp
mov
mov
or
xor
shrb
add
cmp
scas
mov
sti
sarl
sti
jle
sub
mov
lcall
jl
fisubl
push
pop
int3
mov
fadds
mov
outsb
add
mov
jae
mov
inc
pop
or
aas
xchg
pushf
inc
cltd
xchg
sub
fst
lret
jge
aad
out
push
addl
addb
test
mov
je
imul
jmp
cmp
stos
subb
push
std
orl
loop
xor
xor
push
sub
fisubrs
andl
ljmp
mov
outsl
imul
mov
sbb
in
stos
leave
adc
mov
xor
lds
sub
mov
mov
mov
add
mov
add
lods
imul
aam
jno
rclb
rorb
xchg
decb
xor
lods
popf
das
addl
mov
imul
mov
dec
pop
mov
out
fwait
insb
and
in
sub
adc
arpl
sbb
cli
std
lea
aaa
lds
loopne
xor
jl
clc
es
jecxz
sub
mov
jns
adc
mov
sbb
pop
dec
add
mov
mov
pop
sbb
fldenv
mov
outsb
dec
or
xchg
and
sbb
xchg
les
repnz
ss
xlat
lods
mov
dec
mov
xchg
sti
flds
sub
xor
mov
addb
mov
ret
in
scas
sahf
bound
into
mov
div
aaa
mov
daa
in
test
jno
sub
mov
out
aaa
cli
imul
outsb
xlat
mov
sub
inc
cmp
sar
adc
mov
pusha
test
pop
inc
sub
mov
cld
mov
cmp
adc
lcall
adc
repnz
inc
addl
cmp
test
insb
scas
arpl
dec
xchg
jbe
cmp
lock
lret
rcll
rclb
adc
pop
test
call
adc
pop
and
jmp
repz
lret
popa
xor
inc
lods
mov
xor
addr16
ss
and
xchg
jnp
sbb
dec
lcall
sahf
aas
add
push
addb
jns
jo
adc
dec
fs
aam
jns
lock
test
iret
dec
shll
mov
mov
enter
mov
out
and
lods
add
jno
jmp
ret
xlat
test
jae
jmp
shrd
adc
pop
adc
sbb
cmp
jo
xor
sahf
and
out
leave
mov
pusha
lock
xlat
aam
mov
and
out
jbe
dec
into
outsl
and
int3
pop
scas
and
cwtl
dec
jge
mov
mov
loope
sbb
xchg
jb
mov
adc
popf
mov
scas
outsb
les
repz
adc
imulb
test
clc
mov
sbb
ljmp
shll
or
scas
xor
inc
out
subb
xchg
mov
sub
inc
shll
inc
negb
sbb
cmp
adc
inc
inc
dec
mov
xor
dec
js
data16
das
pop
pop
imul
add
and
inc
scas
ds
roll
divb
leave
fisubrs
and
pop
or
xchg
xor
xorb
xor
add
stos
out
rcll
int
fcomp
push
jns
cs
movsb
or
pushf
sub
add
pop
cmp
bound
sar
mov
add
in
inc
sub
push
add
and
scas
wrmsr
scas
push
bound
jns
push
mov
add
std
stos
das
clc
stc
mov
fisubs
push
stos
call
jl
imul
jae
or
cmp
cltd
int
sub
lret
imul
cmc
pop
mov
js
mov
cli
mov
or
jg
jl
in
ds
mov
mov
add
mov
aas
pop
leave
pop
leave
repnz
mov
sbb
cmp
xchg
add
push
cs
lods
sbb
cmp
push
mov
or
mov
fists
sub
xor
mov
arpl
dec
je
lea
imul
out
aas
ja
fisttps
in
ds
in
jecxz
add
insb
dec
push
das
xchg
mov
jp
stc
mov
cmp
cs
jle
adc
fsubs
aam
jle
mov
xchg
cmpsl
mov
xor
cli
inc
test
and
testb
pushf
adc
pop
or
sarl
adcb
mov
cld
roll
dec
loope
add
fisubrs
mov
fsubl
sbb
ja
orl
mov
mov
or
nop
push
rorl
ret
adc
jmp
bound
sbb
push
xchg
je
js
loope
popf
dec
sbb
std
rorb
loop
loopne
fbstp
or
mov
fwait
out
xlat
call
lret
xor
divps
fisttps
call
clc
hlt
lock
and
push
aaa
ret
outsl
clc
xor
imul
jno
pusha
or
jno
aas
and
into
pushf
sbb
jmp
lds
cmc
pop
push
xchg
daa
ljmp
push
popa
clc
shrl
fistpll
outsb
fildll
cli
xchg
sarl
stos
mov
sub
notb
inc
sti
jle
cltd
mov
push
in
jnp
cmp
pop
les
test
lods
stos
push
xlat
cmpsl
fs
stos
xchg
fdivrl
mov
xchg
insb
dec
jmp
inc
xlat
mov
xchg
stos
sbb
push
inc
mov
xchg
scas
adc
inc
sar
fmull
jmp
fidivrs
or
ret
mov
adcl
subl
mov
and
mov
bound
inc
xchg
mov
and
test
mov
into
aad
mov
adc
mov
bound
jp
inc
cli
mov
out
mov
lds
pusha
imulb
in
xor
sub
dec
sub
arpl
das
xchg
dec
test
lret
or
inc
cmp
push
mov
nop
xor
das
lret
scas
dec
mul
push
cmpsl
sub
mov
xor
shlb
out
mov
nop
and
or
xchg
adc
cmp
int
addr16
sbb
test
ja
lahf
adc
es
mov
movsl
arpl
push
or
out
test
push
lcall
pop
add
sbb
push
lret
or
mov
jg
or
mov
addr16
stc
scas
mov
and
add
cltd
or
neg
xor
adc
fadds
pop
out
clc
cli
and
inc
std
outsb
rol
pop
inc
sar
enter
call
popa
xchg
decb
insl
jno
ss
jnp
test
cwtl
mov
shlb
or
adc
shll
jae
ljmp
cs
cmpsl
push
push
inc
iret
and
jp
xchg
push
cltd
mov
push
das
lret
into
mov
cmpb
pop
sub
push
mov
lods
popa
mov
cmc
push
fimull
lcall
std
enter
mov
out
loopne
xchg
xchg
xchg
sarl
mov
int
js
jb
ss
push
push
and
mov
dec
cmp
push
testb
icebp
cmc
in
lods
int3
pushf
insl
add
sbb
sub
inc
mov
in
fistl
xlat
add
out
lret
scas
sub
mov
mov
inc
sub
sbb
inc
in
aam
inc
insb
out
inc
mov
jne
jb
ficoms
inc
or
inc
testl
mov
xchg
dec
popf
pop
adc
push
sbb
cmc
subb
sbb
ss
shlb
mov
loop
jbe
adc
mov
cmp
mov
dec
ljmp
test
je
pop
sarl
xchg
push
pusha
andl
and
inc
fwait
cmp
insl
dec
jae
ret
cmc
les
push
mov
xchg
popf
sbb
flds
cs
decl
loop
test
xor
pop
imul
mov
push
iret
insb
roll
cmp
sub
in
adc
jge
and
mov
sub
lds
dec
pop
lock
mov
aam
mov
mov
scas
out
cs
pop
mov
and
loopne
sti
cmp
fs
sbb
repnz
loope
push
cmp
cs
int
les
cmp
xchg
mov
sahf
cli
xor
imul
subb
push
or
sub
nop
or
out
push
or
mov
mov
sahf
dec
mov
lods
mov
cmpsb
adc
rcrb
pop
pop
push
aad
xchg
xor
sub
hlt
stc
leave
lret
push
push
pop
in
xchg
mov
jge
adc
and
lret
or
jl
mov
imul
lahf
sub
mov
mov
lds
aad
inc
insl
icebp
fistps
inc
in
repz
and
cld
pop
sub
add
dec
rclb
icebp
sbb
roll
cmp
pop
jbe
outsl
adcb
jne
mov
enter
mov
mov
ret
add
or
test
inc
dec
xor
stos
or
mov
cmpsb
pop
sbb
sub
or
rcl
xchg
push
jae
push
mov
sub
insb
push
fcoms
repz
mov
iret
jmp
inc
dec
les
xchg
fldenv
popa
push
jae
scas
lret
in
cmp
test
pop
aaa
leave
mov
mov
call
mov
cmpsl
xchg
dec
add
dec
add
adc
enter
sbb
pusha
imul
arpl
inc
and
dec
pop
mov
rcr
sti
inc
sbb
pop
inc
pop
xor
mov
iret
ret
add
dec
pop
ret
out
je
shr
pop
push
mov
in
add
popa
addr16
mov
jmp
jno
cs
xchg
mov
imul
fcompl
outsl
sbb
fdivrs
xchg
scas
mov
pop
test
and
ja
push
mov
test
ljmp
cmc
orb
hlt
add
mov
gs
jbe
sbb
xchg
leave
sbb
stc
loop
and
outsl
or
adc
je
mov
aas
ret
cmp
or
ret
dec
sbb
cld
mov
scas
and
mov
pop
in
mov
add
jo
je
adc
lahf
inc
push
sub
pop
jne
shll
sbb
dec
jge
cmp
mov
xchg
movsb
mov
loopne
or
mov
pushf
push
cld
subl
pushf
aas
out
push
imul
jno
mov
movsl
push
jae
mov
add
icebp
sbbb
addr16
loop
pop
outsl
push
ret
scas
push
add
jns
xchg
popa
and
jle
movsl
or
daa
or
jecxz
arpl
movsb
inc
xchg
sti
lcall
mov
rorb
insl
push
mov
mov
xchg
dec
mov
in
and
sahf
mov
jp
out
and
jle
mov
inc
lret
xchg
les
gs
lahf
je
add
adc
in
push
out
mov
test
out
je
or
jp
pushf
and
mov
pop
jbe
inc
inc
push
push
scas
arpl
jb
sarl
jo
mov
xor
lret
or
add
popa
mov
sub
in
inc
ljmp
ret
add
sbb
sbb
or
and
iret
gs
loope
or
mov
push
testl
mov
jl
pop
pop
daa
adc
setns
adc
or
js
aas
test
or
test
inc
cmp
adc
add
les
inc
sub
sahf
push
andl
cli
lds
mov
movups
sbb
and
leave
outsb
ss
jg
notl
cmpsb
fnsave
sub
jae
jmp
jle
clc
nop
lret
pop
iret
std
or
scas
mov
scas
in
pop
mov
stos
xor
rcr
xor
xor
popa
cld
or
sbb
sbb
pop
ds
aam
mov
fsubl
dec
mov
outsb
push
adc
xchg
cmpsl
idivb
outsl
inc
repnz
cld
push
iret
pop
dec
shl
incl
adc
cmp
das
jnp
arpl
mov
mov
shrb
xlat
mov
add
xor
lods
sbbl
sbb
or
push
sbbl
xchg
nop
bound
repnz
cmp
cltd
lock
pop
push
push
rorb
data16
push
call
lea
movb
scas
fstpt
pop
pusha
js
add
and
fs
enter
pushf
hlt
pop
dec
cmp
sbb
mov
push
fcomps
add
sbb
negb
sub
pop
cmp
mov
adc
pop
fsts
fsubp
jb
fs
test
mov
test
and
test
mov
push
inc
adc
sti
or
ljmp
out
mov
cmp
push
xchg
cmpsb
les
jp
sub
je
dec
in
outsb
call
mov
out
xor
cmp
dec
or
mov
push
mov
inc
cs
jl
sahf
fists
jge,pn
ret
inc
cmp
in
fcoml
xchg
mov
dec
cmpsl
hlt
xor
cmp
iret
sub
pop
mov
xor
dec
loope
push
cltd
sbb
and
popf
nop
sbb
xor
imul
negb
pop
and
insl
cwtl
push
mov
sbb
lods
pop
fstpl
sub
jne
incl
pushf
dec
in
inc
push
mov
mov
xchg
bound
mov
int3
add
pop
sahf
and
sbb
mulb
xchg
pop
xchg
xchg
xorl
rcrb
fxam
mov
cmp
xor
int
inc
xlat
dec
sbb
lods
int
enter
cs
and
push
popl
dec
faddl
jecxz
loopne
jns
jnp
shll
adc
jp
sbb
std
movsb
push
push
fisttpll
xor
add
iret
mov
mov
jns
jmp
jle
movsl
mov
arpl
stos
pop
test
push
mov
sahf
lcall
xchg
subl
mov
mov
xlat
or
inc
mov
rorb
mov
mov
mov
xorb
pop
inc
and
icebp
mov
inc
push
xchg
lock
push
cmp
sub
lea
or
ds
or
mov
inc
or
fwait
jbe
mov
push
pop
jmp
in
aam
ljmp
aad
mov
movsb
lcall
and
gs
sbb
mov
xchg
adcb
push
sbb
in
or
repz
scas
mov
push
repnz
xchg
test
mov
push
fs
pop
jle
iret
das
xor
jg
test
add
sbb
adc
xor
insl
lret
add
sbbb
das
cmp
stos
mov
cmpsl
adc
popf
sbb
adc
pop
repz
jmp
jl
add
shrl
xchg
testl
sbb
pop
inc
mov
or
jne
in
incl
scas
mov
out
cwtl
cli
xor
xchg
test
mov
insb
add
out
cmp
call
mov
clc
sar
mov
jns
imul
push
aaa
xlat
push
pop
mull
inc
pop
fcoml
test
in
push
dec
sahf
lods
mov
xlat
arpl
xor
mulb
std
lcall
nop
pop
or
or
shlb
jae
test
mov
lock
sbbl
mov
add
and
ret
icebp
filds
dec
ret
clc
mov
pop
inc
adc
add
dec
mov
push
fdiv
or
sbb
sub
movsl
into
out
add
jl
cs
pushf
fsub
mov
cmp
inc
and
cmc
repz
js
les
mov
popl
shrb
int
stos
ret
shl
stos
sti
or
popa
sbb
fs
cmp
or
mov
loope
inc
addb
mulb
notb
and
shll
mov
xor
jl
cld
sub
jnp
call
aaa
mov
bound
cmp
mov
sbb
mov
adc
clc
test
xchg
stos
jne
stos
sar
mov
add
cmp
mov
cli
sub
mov
cmp
jg
clc
popf
in
icebp
incb
out
ret
xchg
ret
stos
dec
mov
xchg
adc
add
dec
jo
push
add
subb
mov
and
rcrl
push
xor
loopne
jecxz
xchg
mov
add
mov
out
jae
push
dec
xor
hlt
pop
je
lock
hlt
flds
mov
movsb
cwtl
adc
or
cmpsl
cld
cmpsl
in
lea
sub
ja
mov
pop
insb
push
pop
cmpb
cwtl
xchg
sub
ja
cmp
pop
pusha
sub
inc
adc
ds
or
jmp
ds
js
ljmp
inc
push
mov
mov
les
popa
int
xor
xchg
int
clc
xlat
movsl
push
adc
fiaddl
jp
xor
fsubrp
adc
jecxz
cmp
lret
push
fmuls
pop
adc
lcall
pop
cmp
popf
hlt
adc
fldenv
cmp
push
pop
sbb
xchg
add
adc
shlb
out
mov
or
dec
repz
ds
jb
xchg
inc
xlat
push
movsb
and
xchg
lock
add
jmp
cmp
or
or
pop
repz
cwtl
jnp
pop
mov
out
push
xor
push
addr16
push
push
pop
dec
mov
cmp
add
fwait
mov
jecxz
cltd
fwait
mov
adc
test
add
ds
or
dec
mov
sbb
jne
mov
aam
pmuludq
aad
andnps
cltd
mov
aaa
stc
inc
cmpsl
adc
jno
mov
jmp
mov
push
into
aas
cltd
imul
into
bound
cmp
xor
mov
outsb
cmp
jl
and
sarb
test
and
inc
out
sti
xor
push
mov
cmpsb
jmp
xchg
stos
popa
lahf
jl
sub
ret
and
xchg
mov
mov
add
cmp
pop
mov
push
nop
sub
stos
jae
aas
mov
cwtl
cld
fadds
daa
dec
fsub
push
jae
adc
jae
mov
xor
push
jo
out
push
sub
bound
outsl
inc
test
or
push
jne
daa
icebp
aaa
sti
pop
lcall
insl
inc
push
fidivl
sbb
add
dec
mov
xor
jle
rcr
cmp
aaa
fiadds
xchg
push
sti
xor
jl
loope
lds
mov
jmp
mov
aas
test
adc
ret
lea
ficomps
leave
int
and
mov
les
dec
movsb
in
in
sub
test
lahf
js
stos
fistpl
sub
cs
mov
mov
xchg
in
push
clc
fldcw
jno
ljmp
loopne
sbb
pop
sub
jns
sbb
pop
push
xlat
arpl
pop
cmp
mov
test
xchg
das
movsl
mov
mov
jo
scas
fstl
mov
in
push
mov
cmp
pop
mov
or
scas
mov
push
add
pop
xor
adc
ret
and
outsb
pop
inc
push
sbb
ss
or
pop
imul
rorb
cwtl
mov
inc
stos
pmullw
push
lods
mov
clc
out
fcmovnu
adc
sti
jbe
or
call
pop
popf
mov
scas
scas
dec
push
cmp
xchg
cmpb
mov
mov
mov
addr16
push
or
inc
xor
sarb
jne
ficoms
je
adc
arpl
pop
int
fwait
jp
jae
fsub
rcr
mov
xor
cmpsb
inc
mov
push
adc
and
jns
or
inc
nop
popf
out
cmpsl
adc
mov
and
je
mov
sub
xchg
sbbl
dec
shlb
std
push
mov
mov
add
push
loop
xor
jne
icebp
inc
cmp
imul
movsl
pop
cltd
add
vpsadbw
std
push
js
ss
call
movsb
mov
ds
sbb
outsl
sar
pop
pop
adc
inc
cmp
cmpsl
and
popa
pop
mov
ret
or
jl
pop
inc
sbb
fmuls
dec
and
pop
or
mov
stos
fwait
lods
jb
outsb
outsb
fisttpl
mov
sbb
jbe
insl
stc
filds
xchg
cmpsl
mov
xor
add
push
nop
push
pop
add
push
sar
cmp
mov
xor
jnp
sbb
lcall
mov
pop
shlb
pop
sub
xchg
fiadds
test
fadd
fcmovnb
out
les
mov
dec
testl
sub
shrl
sahf
loopne
jp
lret
mov
cltd
lcall
and
shlb
mov
and
push
push
les
cmp
mov
int
arpl
xchg
loop
mov
and
outsl
bound
sub
mov
outsb
mov
sub
stos
dec
pop
xor
push
stos
inc
repz
rorl
xchg
jb
mov
adc
leave
add
cmpsl
insl
add
xchg
hlt
leave
pushf
cmp
or
sub
push
pop
imul
pushf
pusha
lock
pop
fst
sub
push
add
lret
ja
fabs
jb
mov
xchg
xchg
jg
xor
and
into
shr
das
xchg
into
mov
adc
jmp
jb
shll
dec
or
into
cmp
jno,pn
enter
xchg
pop
jb
aad
popa
pop
xlat
ret
add
pop
sti
dec
mov
jecxz
sub
sbb
ret
xor
insl
andb
pop
or
inc
outsl
pop
add
jp
fcomi
fs
add
xchg
subb
xchg
stc
movl
paddsw
dec
sub
and
cli
mov
adc
jns
xor
out
sub
jbe
or
sti
lea
std
sbb
jge
cmp
lea
scas
jmp
addr16
or
fstpt
inc
push
mov
mov
cmp
sbb
lret
imul
jecxz
test
pop
inc
sbb
xor
inc
or
push
jp
or
mov
jecxz
shlb
popf
sqrtps
fisubl
jnp
adc
pop
mov
mov
push
jge
push
adc
sbb
sbb
rorl
pop
sub
mov
ss
divl
mov
sub
add
dec
ljmp
outsb
mov
xor
mov
mov
or
sub
jp
sub
inc
pop
pusha
and
leave
fwait
pop
jno
rorb
and
test
lret
sahf
xchg
repz
xor
xor
test
test
or
push
mov
mov
mov
cltd
shr
and
cld
pop
rcr
scas
enter
adc
leave
adc
loope
fisttpl
inc
jle
aad
and
loope
mov
cmp
jns
xchg
in
popf
mov
mov
mov
insb
adc
xchg
mov
and
ret
mov
popa
mov
lods
cld
out
or
mov
jae
pop
out
das
add
mov
outsl
or
je
arpl
mov
test
adc
jae
ss
mov
imul
test
sub
aad
aad
in
pop
pop
fwait
outsb
ljmp
cmp
cmp
stos
jo
aad
xor
xor
jle
iret
js
test
adc
nop
fwait
and
mov
pop
add
push
lcall
scas
adc
xor
jae
fstl
aaa
cs
stc
jg
or
aas
add
out
out
xchg
mov
scas
sbb
mov
pop
mov
jle
sub
cmc
sbb
dec
imul
test
outsb
add
dec
scas
dec
cmp
mov
xchg
mov
stos
cli
pop
dec
in
push
loopne
xor
push
das
inc
sbb
jmp
faddl
cs
lock
fwait
inc
stc
stos
add
sub
push
mov
jge
bound
cltd
into
or
shl
aam
loope
movsb
mov
stc
xchg
sbb
repz
mov
rorb
cwtl
sub
sti
insl
mov
xchg
push
lock
shll
or
and
int
push
jo
ret
sub
push
lahf
push
loop
xor
pop
push
fs
pop
inc
push
cmp
ret
bound
aas
jns
mov
sbbl
testb
jmp
cmp
push
or
mov
or
shr
sbb
mov
in
dec
insl
push
test
or
imul
aaa
cs
int3
lahf
pop
xor
sbb
pop
push
xchg
sti
dec
jmp
into
jle
pop
push
lahf
aam
call
popa
xor
inc
in
mov
int3
mov
int
sub
ja
or
sbb
push
mov
addb
fucomi
in
adc
pop
sub
roll
lret
pop
sbb
add
mov
push
lea
and
loopne
or
push
push
shl
push
adc
xchg
sbb
xchg
dec
mov
mov
push
outsb
hlt
lock
or
leave
add
or
roll
xor
mov
shll
sub
in
jmp
add
test
dec
lds
out
fldlg2
add
inc
xor
jge
fisttpl
or
and
inc
nop
cmp
test
mov
or
jno
fidivl
icebp
dec
xor
addb
daa
scas
xchg
repnz
imul
stos
je
push
xlat
cmp
and
push
mov
jbe
cmp
xor
xchg
mov
pop
outsl
xchg
lea
cmc
in
sbb
adc
add
xchg
add
and
icebp
shlb
mov
pop
lcall
inc
sbb
push
push
cmpsl
jmp
jle
mov
mov
and
push
adc
inc
push
pusha
push
es
test
shlb
add
sbb
or
xor
pop
pop
or
sbb
cmpsl
arpl
dec
ret
and
sub
and
fdivrs
push
fwait
pop
jg
iret
jecxz
arpl
rcrl
and
xor
sub
pop
jmp
in
xchg
inc
sahf
popf
cmc
jae
stos
add
ret
sub
or
xlat
inc
fs
jmp
rcr
int
add
es
lret
outsb
push
and
lcall
mov
sbb
sub
sbb
test
xchg
in
mulb
fcoms
pop
inc
cli
rcrl
and
cmp
adc
add
aas
insb
leave
fimuls
into
or
in
mov
pop
js
push
sub
les
mov
in
mov
pop
stos
les
mov
out
clc
push
pop
lret
addb
pop
mov
xor
icebp
in
xor
lret
jno
adc
mov
aad
mov
aad
mov
mov
jecxz
cld
jb
es
ss
and
out
push
sbb
or
jo
out
xchg
inc
mov
add
in
inc
mov
sub
lahf
mov
jmp
xchg
pop
lret
adc
lahf
out
jnp
pop
inc
sub
mov
dec
fwait
push
push
les
jns
rolb
push
mov
xchg
sbb
movsb
test
mov
insb
clc
add
jb
mov
sahf
ljmp
cmp
or
xor
and
mov
aas
sub
popf
sub
lds
je
andl
rorb
mov
movsl
call
and
push
xchg
scas
sub
fnstcw
add
jbe
push
mov
pop
cmp
sub
scas
inc
lods
mov
xor
sbb
push
aam
test
jge
mov
sub
or
add
nop
test
jb
cld
jbe
pushf
mov
sub
ja
bound
pop
mov
dec
and
in
pop
mov
test
fwait
jbe
xor
call
adc
nop
popa
push
arpl
add
xchg
shrl
daa
dec
repz
pusha
mov
jge
xchg
or
cs
push
clc
fidivrl
inc
xchg
mov
push
cmp
insl
stos
or
cwtl
and
test
dec
out
lahf
fcompl
and
jo
ljmp
ljmp
ficompl
mov
and
mov
mov
and
lock
cmc
out
pop
inc
insl
xor
pop
xor
dec
jns
add
inc
lcall
fcmovnbe
insb
pop
jae
jecxz
push
and
mov
in
or
insl
hlt
fmuls
xchg
aaa
mov
cmpsl
pop
out
cmp
cmp
inc
hlt
sub
movsl
push
cli
push
aad
ret
inc
xchg
push
cmp
shlb
mov
xor
aad
jg
outsl
fidivrs
inc
daa
clc
mov
out
test
in
jno
add
sub
sub
shll
cld
jno
or
mov
cmpsl
inc
frstor
cli
and
addb
ds
gs
pop
das
sti
sahf
into
into
out
mov
xor
cmpsl
mov
mov
cmp
mov
ret
out
and
out
fidivs
push
lock
lret
push
fbld
insl
lahf
movsl
es
ds
sar
andb
sti
adc
rolb
outsl
sahf
adc
mov
add
cmpsl
sbb
insl
mov
movsb
in
mov
fwait
icebp
gs
jnp
jns
stos
mov
testl
push
dec
fwait
mov
icebp
insb
imul
ljmp
inc
pop
jne
mov
hlt
jnp
fistpll
repz
in
dec
dec
cmpb
mov
pop
push
ret
pushf
das
dec
or
pop
leave
pop
mov
fistpl
push
cmpsl
sbb
pop
xor
or
lret
out
aad
leave
push
xor
mov
sub
mov
adc
xor
scas
fidivrs
jnp
movsl
pop
jnp
cmc
mov
dec
mov
stos
xchg
pop
adc
cli
dec
jmp
pop
shlb
sahf
inc
cmp
add
dec
xchg
ds
ja
and
fdivrs
mov
int3
mov
pop
bound
mov
mov
fiadds
or
mov
rclb
push
idivl
movsl
xchg
inc
clc
stos
fs
in
add
and
addr16
adc
and
or
cmp
mov
rclb
adc
cs
ret
sbbb
das
pop
add
sub
mov
fcomps
test
add
dec
pop
cmc
mov
lock
xor
jne
sub
inc
cmpsl
out
es
jnp
ss
movsb
cmp
into
rcll
sub
xor
sbb
aaa
add
outsl
or
es
stos
inc
aas
ljmp
or
and
pop
dec
jo
repnz
adc
cwtl
xchg
aaa
cld
stc
shrl
arpl
out
cmpsl
fsubl
addr16
sbbl
mov
fs
fwait
das
fistpll
mov
loop
pop
cmp
and
out
int3
movsl
int3
dec
ret
pop
movsl
cmpsb
pop
push
pop
in
add
or
pop
xor
out
mov
mov
insb
mov
rcl
pop
xchg
es
cmpsb
sub
jae
adc
cld
insb
cmp
push
push
ss
or
enter
cli
xchg
gs
and
mov
test
pop
push
jne
jle
loopne
test
dec
mov
fcom
filds
add
loopne
ss
fs
xor
outsl
inc
sub
bound
sub
mov
mov
loop
outsl
add
jge
mov
mov
fldl2t
push
hlt
out
jge
push
mov
sbb
mov
xchg
cmp
jns
xor
insl
mov
clc
addr16
lahf
add
imull
insl
popa
mov
sarb
dec
dec
xor
jo
xor
mov
cli
xchg
sub
sbb
push
add
jno
popa
sub
ficoms
out
aaa
jbe
xor
add
je
mov
dec
dec
add
sbb
adc
rolb
dec
and
mov
jg
test
xchg
pop
adc
int
mov
lcall
pop
int
inc
push
shll
xchg
xlat
inc
sub
ss
scas
jecxz
testb
icebp
cs
push
imul
flds
inc
sbb
es
cli
aad
mov
mov
ret
jl
mov
test
ja
push
pop
mov
inc
es
add
int
scas
push
sbb
mov
dec
mov
xchg
xchg
psadbw
mov
or
fdivrs
mov
push
fisttpll
bound
cmp
push
and
cmp
mov
cmpsb
out
fwait
lret
mov
jae
nop
mov
inc
outsb
out
es
jne
repz
jle
pushf
test
xchg
out
dec
jecxz
rolb
add
adcb
aas
pop
leave
js
lock
adc
inc
je
sahf
mov
insb
fiaddl
push
idivl
push
jne
testl
jp
ss
pop
jmp
cmp
add
jl
sbbb
imul
cmc
fwait
jmp
test
sbb
push
movsl
neg
subl
and
test
mov
xor
test
push
pop
pop
mov
adc
lcall
jae
outsl
sub
lret
sub
or
into
dec
ss
je
cmc
stc
push
jns
scas
pop
cmp
push
adc
pusha
push
adc
ret
xor
stc
dec
jno
daa
rclb
mov
cltd
repnz
jp
mov
jb
dec
outsl
push
push
and
aad
push
or
sub
cmp
insl
mov
add
mov
dec
add
pop
push
and
mov
xor
aam
std
in
fsubrl
or
jo
icebp
sbb
stos
jp
jns
mov
aaa
repnz
iret
iret
xchg
adc
gs
faddl
cwtl
cs
incl
xor
stc
xlat
mov
xchg
mov
inc
sub
adc
sbb
leave
lret
mov
aad
aaa
mov
xor
xorb
cmpsl
fwait
aam
test
sbb
sti
mov
adc
testl
insb
xchg
test
imul
push
arpl
push
aam
andl
call
adc
and
or
cmpsb
cmp
mov
sbb
in
psrlw
or
sti
pop
test
decl
push
into
es
lcall
pop
idivb
push
xor
or
pop
or
fucomi
jb
les
fcompl
sub
push
xor
xor
mov
scas
cmp
jmp
fistl
mov
jp
mov
mov
loope
ror
out
insb
pop
jns
dec
pop
sub
shlb
leave
ljmp
in
dec
xor
das
lds
test
and
mov
sbb
stos
jmp
lock
or
imul
cmp
dec
jbe
out
aad
push
shll
in
dec
das
fstp
ret
xchg
je
ds
jns
inc
push
scas
xor
cld
out
cmp
inc
fisubrs
cmp
mov
jns
cmp
jmp
scas
cmp
sbb
test
pop
adc
scas
cli
decb
fwait
sub
xor
sahf
adc
cmpsl
stos
out
sti
daa
mov
ror
rcrb
fsubrp
jmp
push
ds
sub
dec
add
and
and
sub
push
lret
and
add
shll
test
push
pop
insl
and
arpl
popa
mov
ret
xor
adc
mov
dec
pushf
xchg
xchg
mov
loop
and
cmpl
mov
hlt
dec
adc
leave
fldenv
scas
inc
mov
sub
data16
xlat
mov
scas
kunpckwd
mov
ret
jno
fwait
xor
int
pop
or
shlb
and
sub
fisttpll
and
sub
leave
daa
ds
test
loopne
inc
test
xor
outsl
cmc
mov
dec
and
xchg
loope
mov
xchg
filds
ja
push
and
das
outsl
in
out
mov
mov
daa
adc
loop
call
fst
dec
jbe
test
test
or
les
push
movsb
jbe
push
sti
int
mov
stos
cltd
dec
iret
xchg
mov
out
xorl
clc
mov
sarb
xchg
jo
popl
dec
xlat
aas
aad
jns
or
jb
mov
jmp
faddp
sub
and
mov
xor
imul
inc
and
hlt
and
jmp
xchg
mov
pusha
popa
int3
lods
jmp
mov
loopne
lods
lret
mov
loopne
lcall
jne
jp
jecxz
imul
mov
push
addr16
nop
rol
dec
dec
outsl
imul
sahf
fcompl
sub
orl
fstpl
in
cmp
dec
or
mov
cmpsb
js
sbb
arpl
push
dec
jle
mov
add
aaa
xchg
into
dec
mov
das
mov
mov
mov
aad
mov
or
les
imul
movsb
scas
lds
fsubl
insb
push
in
in
push
and
enter
fstpt
stos
into
mov
add
jp
popf
or
xchg
lcall
rcl
jl
sbb
lock
insb
js
sub
in
jne
xor
adc
pop
adc
cwtl
orl
and
leave
in
sub
imul
jae
and
in
sarb
push
lret
dec
adc
loop
push
push
jb
jp
adc
xor
jno
into
out
xchg
add
enter
pop
add
movsb
cmovp
scas
add
add
mov
pop
fldenv
popa
ljmp
in
cmp
out
sti
mov
call
jno
jb
sub
sbb
cmp
pop
xchg
and
fwait
cmp
lret
sti
mov
adc
test
out
jo
push
jecxz
jb
jg
jne
jl
and
cmp
jecxz
in
enter
jno
mov
push
lahf
add
push
xlat
push
or
shlb
dec
and
push
cmpb
sbb
dec
mov
aad
iret
data16
fisubrs
ret
insl
enter
xor
lea
adc
cmp
pushw
mov
cmp
xor
es
pop
jmp
imul
cld
in
inc
mov
adc
ss
aaa
push
push
jne
fnsave
pop
cmp
pop
inc
mov
xchg
lahf
sbb
and
pop
mov
jge
sahf
int3
inc
popf
xchg
fnstenv
xor
pop
fbld
mov
xor
mov
rcrb
add
psrld
arpl
xchg
jp
shlb
in
pop
mov
mov
inc
scas
imul
jecxz
cmp
inc
jae
adcb
pop
pop
scas
push
adc
stos
fisubl
add
outsl
dec
mov
mov
orb
aas
cmp
sub
loope
push
shlb
pop
shl
push
clc
lea
pop
cs
cmp
loopne
mov
xchg
lods
icebp
loop
aaa
sub
stos
xor
roll
jns
mov
sub
add
daa
enter
bound
add
push
jmp
mov
dec
adc
adc
mov
or
mov
mov
mov
movsl
push
mov
je
push
fstps
push
int
call
das
sbb
cmp
or
lea
sbb
out
push
pop
or
mov
stc
inc
adc
xchg
sarb
dec
dec
es
fcoms
jg
jne
jmp
pop
faddl
cmp
aam
stos
pushf
sbb
sub
in
and
cmp
fiaddl
xor
adc
in
push
int3
stc
cmpsb
dec
ficomps
adc
in
pop
sbb
pop
mov
dec
mov
out
nop
mov
scas
clc
pushf
xchg
and
leave
pop
or
xchg
int3
mov
pop
fidivrs
push
test
outsb
push
stc
and
icebp
in
mov
add
fdivrs
dec
lcall
xor
int
xchg
sahf
mov
verr
aad
scas
aam
mov
jge
sub
pop
inc
xchg
dec
push
popf
push
dec
sbb
mul
mov
das
or
pop
fldenv
lea
dec
xchg
jmp
mov
ss
mov
dec
fildl
mov
sbb
sbb
popa
lcall
test
pop
push
fsubr
push
adc
mov
add
lcall
iret
push
jle
mov
gs
xor
out
push
pushf
inc
adc
sbb
outsb
mov
fmul
lock
pop
ljmp
sub
dec
mov
sbb
movl
xor
enter
rorb
mov
jo
xchg
ja
icebp
inc
mov
add
out
fisubrs
xchg
loop
lret
sbb
jae
sub
test
stos
xchg
push
mov
xor
xlat
jo
imul
inc
add
fcompl
loope
add
mov
xchg
mov
inc
push
sbb
and
sbb
inc
xlat
cmpl
adc
data16
loope
push
adc
test
je
jge
loope
sbb
sub
mov
push
sarl
mov
cltd
stc
pop
xchg
bound
jle,pt
xchg
and
adc
ret
pop
inc
and
xchg
mov
cli
sub
lods
push
xor
clc
mov
inc
and
inc
repz
cmpsl
repnz
bound
fildl
cmpb
movsl
pusha
aaa
fdivrs
pop
mov
xor
mov
mov
movsl
iret
out
sbbb
addl
push
mov
js
adc
hlt
mov
movsb
call
out
jge
cli
lods
test
push
inc
mov
inc
out
push
mov
push
ja
xchg
sti
sbb
inc
fldpi
js
test
mov
cmp
rolb
adcl
jecxz
in
shll
or
mov
mov
sbb
dec
clc
insl
and
and
lret
dec
loope
adc
inc
popf
xchg
sub
sti
push
cmp
mov
loope
jl
push
jmp
pop
out
repnz
pop
rclb
sbb
pop
test
inc
mov
push
out
outsl
pop
push
pop
imul
icebp
jecxz
sub
ja
je
sbb
fmull
xchg
inc
or
sbb
sbb
mov
inc
or
stos
andb
dec
push
or
pop
testb
scas
shlb
leave
cs
jo
xor
or
popa
into
shr
push
or
pusha
sbb
push
fwait
and
sbb
cli
aad
push
pushf
ljmp
lret
ficompl
sti
xchg
jns,pn
cmp
dec
movsb
push
sti
inc
mov
add
jge
sbb
lods
add
xchg
push
fst
and
cltd
out
mov
mov
xchg
popa
or
or
stos
jne
dec
mov
cmp
test
outsl
cmp
test
xchg
or
or
mov
push
mov
and
or
cld
cmp
outsb
and
test
call
xchg
pop
push
xor
in
and
mov
jl
mov
lock
inc
sarl
inc
pop
sub
int
mov
lods
or
mov
and
test
xchg
add
js
test
mov
cmp
out
test
test
mov
jne
xor
int3
clc
out
lea
iret
daa
stos
ret
js
lods
jmp
iret
stos
jmp
fcomi
gs
ljmp
sub
fists
inc
inc
ffree
scas
popf
cmc
pop
pop
sub
cmpb
xchg
push
sub
ficompl
test
push
shrb
mov
cwtl
mov
addr16
imul
mov
fdivrs
repz
test
les
xchg
xor
mov
push
in
cmp
xor
mov
xchg
test
dec
mov
lds
or
outsl
movsl
ffree
pushf
lcall
jmp
andb
mov
jmp
mov
mov
cmp
lret
dec
sbb
dec
cmp
cli
add
mov
mov
xor
dec
iret
iret
shl
mov
mov
bound
in
sub
push
daa
rclb
sarb
lahf
js
enter
inc
push
push
das
and
sbb
pushl
pop
lods
pop
mov
lret
jle
xchg
ljmp
pop
adc
and
fdivs
push
rcrl
js
cmp
xchg
xchg
pop
jo
push
push
adc
jns
mov
pop
outsl
jne
lret
adc
test
fdivrl
std
inc
outsb
dec
dec
hlt
lods
inc
xor
fiaddl
xor
jno
add
jge
rclb
pop
bnd
adc
repnz
das
test
push
mov
mov
les
hlt
mov
rol
loope
push
xor
jg
adc
xlat
adc
xor
inc
aam
dec
out
aam
inc
mov
cmc
inc
sub
sti
stc
pop
pop
fwait
mov
adc
loopne
es
jb
test
sub
push
out
dec
dec
ret
sbb
jmp
mov
mov
clc
xchg
out
mov
pop
mov
ret
scas
lock
mull
or
pop
xchg
xchg
dec
and
and
adc
lods
sti
icebp
lods
mov
fs
pop
stc
jecxz
or
test
jg
push
popf
cmp
jle
mov
mov
pop
insb
inc
shl
xor
cmp
std
fwait
add
push
lea
hlt
test
or
imul
out
xchg
fwait
mov
push
testl
mov
in
cmc
aad
cwtl
lods
sbb
daa
ret
jae
loop
dec
jnp
out
push
or
mov
mov
int3
cwtl
stos
mov
leave
dec
into
adcb
mov
scas
aad
ret
and
ret
outsl
movsb
sbb
cltd
push
adcl
in
and
gs
in
hlt
or
mov
sub
pop
movsb
or
or
inc
icebp
insl
jmp
daa
into
popf
lahf
js
xor
jmp
stos
push
out
pusha
xchg
fdivr
dec
xchg
lcall
sub
daa
orl
adc
jns
push
xchg
jns
adc
mov
ret
inc
add
and
ds
daa
das
mov
lret
daa
and
mov
adc
and
sbb
sub
lds
dec
mov
mov
cmp
iret
adc
cmp
fldl
xor
daa
inc
pop
bound
add
stos
and
adc
or
inc
jno
inc
cmp
bound
hlt
mov
inc
pop
adc
xlat
popa
daa
xchg
rcl
cmpsb
insl
mov
mov
roll
inc
rcr
mov
pop
out
addl
lds
ret
mov
sbb
mov
mov
rorb
jmp
and
sbb
add
mov
dec
xor
pop
mov
ss
out
cli
adc
jl
jge
cmp
iret
lahf
mov
jnp
stc
xor
dec
mov
cmp
call
adc
aam
push
imull
jb
add
cmovo
imul
dec
pop
cmp
sbbb
pop
sbb
std
and
mov
ja
aad
test
mov
addr16
arpl
mov
clc
pushl
int
xor
cmp
icebp
popf
test
arpl
pop
lock
addr16
nop
pop
nop
call
repz
incl
jl
mov
dec
mov
or
pop
movsb
dec
rcrb
xchg
fsts
insl
push
mov
push
cmpb
xchg
xor
ss
shl
add
sub
leave
push
xchg
xchg
push
rolb
call
or
pop
mov
sbb
cmc
inc
iret
out
mov
and
xchg
jl
dec
push
mov
mov
cmp
push
test
jo
xor
pop
lds
jnp
push
out
xchg
mov
shll
fs
in
sub
daa
sub
shrb
mov
xchg
dec
or
push
cmp
jecxz
dec
sbb
cltd
cmpsb
icebp
xor
mov
movsb
cmp
stc
push
dec
imul
dec
lret
inc
mov
enter
jecxz
scas
mov
push
in
push
enter
mov
sub
inc
push
int3
xchg
repnz
test
movsb
and
fidivrs
dec
jno,pn
jnp
lock
loopne
add
push
adc
mov
ja
sbb
mov
in
dec
mov
cmpb
jbe
mov
mov
sbb
sub
mov
cmpsl
xchg
dec
mov
fmul
shl
bound
xorb
inc
jl
filds
inc
int3
mov
scas
imulb
test
jbe
mov
mov
mov
xchg
xchg
sbb
nop
leave
cmp
js
sti
mov
data16
not
sub
aam
xor
into
repnz
in
mov
or
xor
pushl
rclb
push
out
movsb
lret
jnp
pop
xlat
or
enter
add
std
xor
xlat
pop
mov
mov
aam
mov
xchg
insl
lea
pop
add
adc
lods
add
shrl
imul
inc
insb
inc
inc
call
stc
movsl
packssdw
push
stc
mov
aam
lcall
addl
add
shlb
mov
test
aad
arpl
cwtl
cmpsb
testb
jg
mov
dec
popa
stc
imull
jno
fsubs
insl
insl
inc
or
fsub
lea
jo
inc
and
jg,pn
inc
repz
cltd
outsb
fldcw
daa
mov
fidivs
es
imul
pop
mov
xorb
cmpb
fisttps
cmpsl
mov
pop
jecxz
cmpsb
sbb
lahf
aam
mov
inc
xor
pop
loopne
mov
in
lods
idivb
fwait
and
enter
pop
jnp
xchg
clc
jmp
jnp
cmp
outsb
jnp
sti
shlb
push
pop
dec
aas
movsb
jno
testb
mov
push
mov
adc
rorl
or
mov
add
pop
jnp
repnz
push
fldenv
mov
fdivs
lock
pop
ret
xchg
or
das
adc
jl
repnz
and
hlt
int3
shlb
hlt
pop
inc
cmp
mov
add
movsb
dec
test
pop
cli
fistl
add
lods
push
mov
adc
sahf
scas
ljmp
rolb
sbb
cs
imul
sti
rcrb
mov
clc
ja
inc
nop
stos
sbb
jmp
push
ds
std
push
adc
dec
add
mov
mov
rorl
test
mov
mov
aad
pushf
add
flds
ljmp
iret
mov
cld
shrl
lea
xor
lods
leave
inc
sbb
xor
out
aas
shrb
pop
fistpll
test
mov
rcrb
loop
jb
pop
adcb
outsb
or
jp
inc
dec
mov
out
inc
add
push
sbb
jp
das
inc
loope
je
mov
push
insl
or
xorb
pop
pop
shll
xor
shrb
mov
clc
cmp
fs
lcall
fstpl
sbb
push
sbb
jmp
sub
jb
pop
push
clc
out
mov
cmp
in
pop
movsl
jns
repz
or
into
mov
inc
xchg
ja
int
pop
inc
mov
loope
fcom
push
stc
inc
xor
in
icebp
adc
inc
call
insb
mov
jne
rcll
loope
cmc
xchg
adc
lea
out
data16
or
add
in
cli
jecxz
pop
xchg
jg
jmp
lds
mov
aam
cmpsb
int
dec
add
out
cmp
iret
xor
mov
add
push
xchg
mov
imul
orl
std
push
and
xor
subl
fwait
inc
pop
xlat
lcall
movsl
mov
pop
mov
xchg
jl
fstl
dec
ljmp
mov
or
dec
adc
jae
inc
and
jle
int3
mov
pop
or
insb
mov
les
push
mov
je
inc
sti
jge
lret
xchg
sbb
push
jne
pusha
jl
orb
int
mov
push
test
inc
mov
mov
sub
sti
or
pop
icebp
push
int3
out
sub
mov
push
or
pop
mov
add
sub
or
fmuls
pop
test
sti
sbb
mov
adc
jl
les
push
mov
push
push
pop
mov
cmc
lea
das
mov
ret
in
mov
and
fs
adc
inc
int3
gs
pop
in
outsb
repnz
movsb
ficoms
fwait
mov
push
idiv
adcl
dec
ds
mov
mov
mov
mov
insb
daa
stos
insb
stos
and
fs
ja
ja
je
movb
fdivrl
sub
popa
pop
popf
dec
mov
test
dec
popf
ret
inc
sub
fisubs
add
lret
ja
rorb
cmp
fwait
je
daa
or
in
rcll
mov
lea
out
aam
stos
scas
loop
sub
rcrb
ds
jg
sub
cmp
addr16
and
adc
jp
sbb
mov
adc
dec
lcall
adc
dec
jecxz
call
imul
outsl
xchg
rorl
out
push
pop
roll
scas
int3
and
pop
sbb
sbb
nop
aad
mov
shrl
push
sub
aad
and
or
or
inc
repnz
repnz
sbb
divl
fxch
xor
test
adc
push
subb
leave
push
fcmovnb
xor
sub
xchg
pop
push
hlt
aas
jb
inc
and
sahf
fistpll
pop
pop
inc
cmpsl
and
loope
and
jge
push
inc
mov
stos
xor
jb
mov
push
incb
mov
and
push
sti
push
lret
push
jle
add
mov
fucompp
jecxz
mov
lahf
mov
lock
fsubrl
idivb
sub
clc
ljmp
sbb
jle
xchg
sbb
pop
cli
mov
cwtl
pop
sbb
hlt
ret
jo
and
fs
popa
cwtl
inc
sub
jne
xchg
or
xor
cmpsl
xor
adc
mov
mov
push
adc
pusha
stc
xchg
cmp
in
or
ljmp
inc
aas
out
cmp
add
loope
lret
cmp
xor
xchg
pop
movsl
std
mov
les
idivb
pop
mov
movq
decb
mov
mov
mov
jl
push
std
into
sbb
clc
mov
push
dec
push
mull
stc
pop
mov
sarb
sbb
popf
popa
incl
lret
jae
xchg
lret
call
iret
dec
fs
or
mov
orb
cmp
in
mov
test
cmp
adc
into
repnz
sub
mov
sbb
mov
pop
aas
push
cmp
and
mov
lods
sbb
or
cmp
jmp
cwtl
mov
idiv
js
sub
push
movsb
pop
cmp
ret
cmp
mov
add
jns
push
sbbb
xchg
mov
mov
or
xchg
jl
jne
popa
or
stos
aaa
cmp
cmp
fists
push
subb
and
mov
mov
cmp
fmull
xor
leave
and
pop
dec
outsl
lods
push
xor
pop
pop
js
mov
arpl
shl
xor
jno
jbe
sub
rcll
popa
xchg
std
jl
hlt
out
aad
xchg
mov
sub
aas
mov
xchg
mov
xor
ret
out
divb
js
pushf
mov
ss
jbe
je
lods
sub
enter
sbb
xor
movsl
sbb
shrl
fnsave
addr16
dec
rcrb
inc
rcrl
push
push
out
xchg
in
jo
mov
clc
pop
int3
or
repnz
aad
and
lahf
dec
jae
lcall
frstor
xor
aas
jns
dec
test
outsb
add
mov
mov
push
icebp
jg
test
jmp
daa
adc
xchg
mov
aaa
jae
and
push
inc
mov
add
mov
dec
jle
pop
subl
add
mov
xchg
add
fsubl
daa
xchg
out
xor
dec
sub
xchg
shl
int3
xor
dec
jle
xchg
outsl
cmp
push
xor
cmp
sub
cltd
push
outsb
sbb
pop
lods
leave
jl
das
cwtl
sar
test
lahf
sbb
jnp
mov
push
adc
stos
aad
out
or
dec
push
in
int
push
fwait
jge
xchg
xchg
loope
inc
cmp
loop
mov
sahf
insb
pop
lods
jne
mov
adcw
inc
scas
out
fdivs
or
mov
les
and
inc
popl
cli
mov
aad
addl
xchg
cmp
dec
fdivrl
subl
push
or
aam
pop
mov
adc
fiaddl
rol
pop
xor
dec
clc
ror
lds
sub
add
lcall
icebp
push
adc
add
jo
xor
call
in
int
les
jae
rcl
mov
mov
outsl
jle
sbb
cmp
popa
cmpsl
xchg
fcomps
test
jp
sti
rorl
out
push
dec
shl
sbbl
mov
jns
jmp
cmp
and
sub
jg
pop
js
pusha
xchg
adc
mov
or
jg
sbb
cmp
ss
mov
test
fildl
mov
add
add
packuswb
adc
inc
lock
sbb
test
aaa
cmpsb
pop
mov
inc
jecxz
lret
pop
adc
xchg
fcmovbe
xor
jo
daa
cli
xchg
insl
xchg
mov
or
and
das
inc
imul
icebp
sub
mov
mov
jmp
aad
fnstcw
shl
ljmp
jno
inc
dec
cltd
lcall
cmovg
mov
mov
cmpsl
jp
mov
sbb
mov
jnp
fnstenv
stc
test
cmpps
lea
lock
bound
fs
addb
pop
add
dec
call
gs
jae
mov
push
push
inc
cwtl
ljmp
sub
pop
dec
repz
jb
js
les
push
movsl
push
push
aad
xchg
fidivl
xchg
fwait
or
or
call
cli
cmp
fisubrs
inc
dec
mov
add
mov
cmp
outsl
fsubl
scas
sub
sti
imul
movsl
sub
gs
int
sbb
cmp
sbb
loope
stos
jmp
mov
es
pushf
insb
pop
aam
aas
sti
pop
jg
cmp
aad
std
bound
pop
push
mov
xlat
xchg
fwait
mov
bound
xchg
adc
adc
jle
rcll
sbb
xchg
mov
xchg
push
sbb
and
notb
xchg
movsl
gs
enter
mov
or
inc
cmp
in
and
icebp
repnz
pop
pop
adc
inc
cmpsl
pop
lea
aam
jp
out
jns
bound
je
repz
sbb
ss
rclb
lock
cld
mov
into
jp
sbb
ret
mov
popa
fimuls
jns
pop
sbb
jns
data16
sub
cltd
out
test
pop
ss
push
add
enter
mov
and
out
mov
push
in
push
cld
mov
fsubrp
push
dec
fbld
fadds
cmc
cwtl
rol
frstor
test
cmp
pop
pop
push
sub
shlb
popf
pop
jp
int3
or
cmp
popa
mov
or
std
pop
arpl
cmp
sbb
cmp
outsl
cld
rcrl
sbb
cmp
addr16
mov
popa
mov
push
ret
mov
xchg
sbb
dec
sahf
in
pop
xor
imulb
jp
loop
xor
inc
sti
inc
mov
fsts
in
xor
mov
jnp
aas
push
push
enter
cmp
jnp
lret
or
arpl
stos
or
cs
nop
push
ss
dec
fistl
push
sbb
or
xchg
fisubs
push
xchg
mov
add
mov
cmc
add
sub
fwait
clc
xchg
jo
aas
pushf
cld
inc
outsl
icebp
mov
and
andl
inc
arpl
or
and
movsl
inc
cmpsb
adc
cmp
sahf
dec
pop
push
shl
insb
iret
xchg
mov
mov
aam
jmp
dec
stc
dec
push
sbb
or
lret
sbb
and
jl
shrl
into
pop
jne
inc
sarl
xchg
inc
imulb
or
cmp
dec
adc
ss
or
mov
xor
sbb
insb
mov
and
idivl
sub
mov
xor
movsl
jbe
into
nop
xchg
clc
sbb
mov
dec
aad
dec
fildll
iret
pop
pop
jne
fsubrs
popa
test
mov
cmpb
cwtl
jge
js
add
je
mov
adc
dec
fmull
pop
push
dec
in
shlb
mov
xchg
jae
jno
cmp
fcomps
outsl
sub
ss
movsb
sbb
fisttpl
insb
fbld
dec
bound
stos
ja
call
pop
inc
sub
xlat
dec
sub
fucom
mov
jns
outsl
add
idivl
jno
into
jne
int3
scas
jle
popf
cmp
sub
mov
mov
push
jl
fisttpll
add
jle
pop
lock
test
inc
shlb
loop
pop
add
sub
jmp
or
xchg
push
je
sarl
fucomi
mov
xchg
xor
js
out
add
clc
icebp
das
xchg
mov
cs
popf
pop
aaa
aam
sub
mov
mov
test
lret
iret
jae,pt
lcall
icebp
inc
mov
inc
std
call
out
mov
sbb
inc
aam
lcall
push
xor
push
cmc
stos
roll
jo
sbb
inc
xchg
fmuls
fs
xchg
test
xchg
jp
adc
cmp
jmp
cmp
xor
dec
aaa
imul
test
ret
frstor
jns
outsb
je
jno
jno
lcall
and
sbb
cwtl
dec
mov
dec
mull
div
jno
aad
pop
push
movsb
mov
enter
dec
cwtl
mov
jmp
mov
mov
mov
and
jbe
mov
mov
pop
fcomip
outsl
and
lea
add
shlb
cmp
scas
arpl
push
xor
les
dec
iret
in
jg
add
test
sbb
cwtl
lcall
pop
mov
fsubs
pop
adc
jne
inc
iret
aas
xorl
jo
shl
mov
dec
cmpsl
movsl
sub
pop
sub
pop
in
outsl
leave
loopne
fcomps
dec
xlat
lahf
and
cmc
mov
dec
add
add
and
xchg
jle
pusha
dec
sbb
scas
call
xor
enter
out
ljmp
test
in
rcll
fadds
imul
jecxz
stos
scas
pop
popf
call
cmp
cmp
lcall
jl
fisttpl
adc
xlat
sti
stos
fisttps
adc
push
mov
lcall
mov
imul
dec
out
add
scas
xchg
push
lret
sub
sbb
mov
or
ds
push
mov
push
sub
addl
pop
push
mov
outsb
in
mov
dec
or
sar
jecxz
gs
stos
mov
sbb
sub
arpl
pop
sub
xor
lock
dec
in
inc
cwtl
push
adc
stos
in
mov
mov
cltd
out
ja
mov
arpl
adc
in
add
add
mov
movl
mov
fstpt
mov
out
mov
insb
jnp
sbb
cld
xlat
push
pop
pop
pop
dec
insb
repz
fistps
pop
dec
fcomp
mov
insl
jo
sbb
xor
ljmp
in
test
fcomp
sbb
mul
mov
not
inc
xor
mov
push
sub
push
popf
movups
sub
insb
mov
push
dec
push
cmpsl
jne
cwtl
adc
shl
add
insb
pop
pop
or
dec
jbe
pop
push
or
cmp
clc
insb
mul
or
dec
push
jno
mov
cmpsl
test
outsb
add
xchg
js
and
pushf
das
outsb
stc
mov
lret
imul
xchg
cmp
cld
movsb
xlat
and
cli
add
mov
xchg
push
ja
pop
xlat
insl
pop
popf
push
fnsave
movl
ret
adc
push
or
add
je
xchg
sbb
sbb
mov
test
adc
sbb
add
dec
mov
pop
test
imul
pop
iret
orb
xchg
push
xchg
sub
mov
adc
sub
ja
xchg
call
xchg
push
mov
in
jb
test
push
mov
imul
repz
test
push
sbb
ret
add
fs
out
sahf
mov
mov
dec
dec
adc
and
adc
stc
imul
cli
cld
rcrb
push
popf
sbb
outsl
xchg
push
insb
push
aam
mov
push
popf
in
mov
cmp
xchg
insb
test
jl
mov
and
rcrl
test
push
mov
mov
add
jbe
mov
mov
jmp
fwait
cmpsl
aam
cwtl
fsubp
pop
jge
push
xchg
adc
cmpsb
scas
mov
sub
mov
push
pop
sub
adc
add
jmp
add
add
adc
xor
add
aas
jecxz
mov
cwtl
dec
dec
pop
mov
adc
mov
jmp
push
sbb
hlt
push
cmp
mov
jmp
int3
sbb
ja
icebp
xchg
stos
inc
loop
sub
nop
lahf
stc
jnp
xor
inc
mov
mov
jmp
sbb
outsb
arpl
jns
sbb
movsl
xchg
not
in
std
push
mov
xor
sub
mov
xchg
mov
sub
hlt
mov
repz
lret
or
sbb
sub
and
int
pop
repz
cld
add
mov
pop
cmpsl
add
sahf
arpl
lcall
xor
jl
sbb
in
imull
call
ljmp
push
jmp
xlat
movsl
fs
jne
in
jge
lret
imul
jnp
and
cmp
mov
cs
inc
aas
jns
mov
xchg
dec
outsb
loop
xor
and
pop
xor
xor
adc
add
mov
mov
xchg
cmpsl
test
out
jae
les
in
int
adc
mov
xchg
xchg
mov
or
pop
jecxz
mov
jb
sub
sahf
clc
xchg
sub
fisttpll
int3
call
and
lock
loope
popa
outsl
out
mov
lods
cmp
ja
sub
xor
or
aad
shlb
insb
leave
aam
enter
shll
cmpl
dec
shr
adcb
mov
mov
shr
cld
lock
pop
lcall
stc
push
mov
dec
pop
pop
sbb
push
sub
aad
mov
clc
in
ljmp
fdivp
rclb
push
in
mov
push
je
inc
push
orl
or
jno
mov
sti
jnp
xchg
sbb
mov
das
pop
test
fbstp
iret
inc
rolb
lock
push
outsb
js
stos
fcomip
push
repnz
dec
sub
mov
adc
jne
insb
or
mov
cli
cmp
std
jp
loop
pop
lret
rcrl
sbb
daa
fsubrs
sbb
outsb
mov
or
mov
stos
sarb
int3
dec
sarb
cmc
aas
mov
mov
test
fwait
sub
cli
or
mov
pop
out
mov
push
rcrl
sbb
out
sti
xchg
les
loope
shll
repnz
and
mov
mov
fstps
sub
mov
insb
loop
aaa
push
fildll
mov
pushf
xchg
fistpll
mov
xchg
mov
std
mov
aaa
inc
and
xchg
mov
sahf
adc
cmpsl
addr16
xor
out
arpl
in
hlt
mov
inc
js
inc
test
out
flds
sub
movsl
pop
mov
dec
in
cltd
in
insb
cmp
push
mov
lds
dec
pop
cmp
xchg
inc
mov
jb
mov
inc
ja
imul
fnstenv
int3
outsl
adc
sbbb
and
pop
in
sar
push
sbb
ds
add
es
inc
fdivrp
xor
rcl
out
into
enter
popa
repnz
adc
push
clc
push
cli
mov
in
push
imul
or
fsubs
mov
or
sub
jo
leave
test
stos
shl
pusha
adc
adc
or
jge
adc
sub
scas
pushf
int3
dec
mov
stc
mov
divb
push
lret
cld
cs
sti
pop
enter
sbb
hlt
mull
add
popf
test
lods
adc
jbe
or
leave
adc
je
pop
loop
les
and
xchg
stc
mov
rcll
aaa
addr16
jo
dec
mov
dec
repz
cwtl
adc
lret
out
xor
cld
adc
sub
cmp
cmpsb
xor
mov
lock
mov
iret
dec
or
mov
mov
fiaddl
out
mov
sbb
shl
lahf
pop
mov
inc
push
xchg
movsb
push
and
and
repz
subl
fsubrl
aam
pop
jae
mov
out
sbb
repz
nop
cmp
pop
push
fwait
cs
push
pop
pop
push
movsb
sbb
cmc
lea
jae
ds
scas
jns
sbb
icebp
inc
sbb
scas
sub
or
jle
jbe
nop
ret
loopne
out
or
inc
js
mov
xlat
pop
pop
lods
je
sub
outsb
inc
dec
gs
ret
lods
cmp
or
test
nop
in
push
je
pop
jns
jne
xor
jno
daa
test
ljmp
out
cmc
rcrb
cmp
sbb
sbb
cmp
fidivl
clc
fucomp
int
mov
and
add
daa
pop
adc
mov
lret
dec
pop
mov
aaa
lock
jo
xchg
sahf
ret
mov
loope
aaa
mov
pop
out
adc
dec
call
xchg
xchg
ja
xor
jo
xlat
mov
je
cmp
mov
mov
daa
sbb
sub
hlt
lods
arpl
pop
movsb
test
push
not
pop
std
loop
sub
sbb
push
sbb
push
cmp
lret
xor
test
inc
aaa
jo
ds
scas
test
lahf
xor
adc
shlb
jns
stos
xor
adc
or
fists
int
outsl
ljmp
in
mov
jnp
popl
fwait
lea
xchg
iret
jge
mov
ret
popw
in
sbb
sbbb
in
push
push
sub
pop
mov
adc
sahf
sub
ljmp
std
lods
ret
jbe
mov
adcl
sti
imul
lea
jae
push
add
inc
ljmp
rol
push
mov
jns
scas
add
inc
jb
fs
pop
lock
and
or
pop
and
pop
dec
jne
lahf
push
addb
sarl
jecxz
scas
mov
mov
cmp
inc
sub
add
sarl
push
mov
inc
sub
push
ljmp
xchg
loope
or
stos
test
xor
loope
adc
sbb
popa
rcrb
jg
cmc
rolb
dec
ljmp
mov
dec
andl
mov
pop
cs
cmp
pop
push
jle
sbb
and
sbb
call
mov
and
cmc
mov
aam
into
inc
dec
inc
mov
shlb
xor
aas
pop
pop
xchg
lock
loope
jne
ljmp
mov
mov
test
cltd
xor
stos
aad
sbb
xchg
das
jo
repnz
cltd
decl
shrl
lret
jge
or
push
jnp
in
push
das
imul
mov
fcomps
adc
jae
push
mov
inc
adc
mov
daa
dec
cli
jl
sub
sbb
mov
mov
inc
add
mov
aam
mov
sbb
addr16
fdivrs
cmp
jp
mov
js
in
clc
cmp
cmpb
inc
push
xchg
cmp
call
jno
sbb
mov
in
jne
ret
cmp
jl
sti
xchg
std
repz
inc
fistpl
mov
push
andl
outsl
clc
rcrl
jl
movsl
leave
ret
cmp
cwtl
pop
cltd
dec
scas
shlb
adc
out
movzbl
pop
cmpsb
stc
sbb
rcrl
daa
push
enter
outsl
jnp
pop
imul
pop
and
cs
xlat
outsb
rclb
daa
or
testb
xchg
outsl
inc
nop
mov
push
inc
push
pop
inc
cmp
xchg
inc
xor
fwait
dec
outsb
fnstsw
in
or
sahf
aaa
xor
mov
data16
xor
push
lea
mov
push
xlat
add
pop
add
inc
cs
addb
cmpb
pop
mov
adc
mov
jnp
mov
xor
cmp
xchg
mov
inc
xchg
lret
pop
invd
cltd
sub
sbbb
pushf
mov
in
pop
lahf
mov
ret
jmp
dec
xchg
ljmp
sbb
lods
inc
xor
lret
fistpl
cltd
push
adc
fwait
repz
call
or
movsl
pop
ja
repnz
xor
sti
sysenter
mov
scas
int
aad
ret
shufps
int3
mov
and
lods
mov
loopne
xchg
pop
or
les
ret
in
fists
xchg
mov
cld
ss
xor
or
sbb
mov
xchg
fcom
jae
xor
bound
adc
movsl
mov
subl
fistl
and
mov
pusha
jae
test
std
sbb
loop
jg
inc
push
inc
xor
mov
add
inc
cmc
or
das
out
int
jl
xor
xor
mov
lret
aam
das
xchg
rcll
pop
addb
sub
pop
sub
sti
int
ror
leave
ss
cmp
and
popf
mov
dec
aas
xchg
push
pop
fcmovu
lret
sub
mov
int
mov
in
imul
outsb
sub
adc
enter
lret
insb
ret
pop
rorl
frstor
das
adc
insb
mov
repnz
jne
ficoms
or
insb
fldpi
cmp
add
fwait
mov
mov
je
and
fldenv
mov
jo
pop
jns
popl
or
stc
cmp
aad
push
das
loopne
call
stc
dec
push
das
cld
test
add
movsl
gs
sub
xor
mov
fwait
pushf
mov
push
cmpsl
bound
mov
icebp
inc
add
sbb
icebp
std
push
jns
scas
popa
aad
cmp
push
ja
xchg
aad
add
sbb
scas
addb
add
test
out
sarb
outsl
cmpl
movsl
jecxz
in
sub
and
or
dec
in
clc
in
inc
xchg
int
lea
in
lods
inc
dec
cli
outsl
cmp
fs
pop
popa
xchg
sahf
icebp
push
jg
out
jnp
or
les
pushf
mov
jno
or
jmp
xchg
and
sbb
add
lahf
push
mov
repnz
sbb
into
imull
push
inc
loop
sbb
jl
orb
and
add
or
dec
cli
std
sbb
test
aas
mov
jle
dec
cmp
or
mov
dec
adc
test
movsb
mov
mov
and
mov
stos
mov
sub
lret
in
dec
xchg
cli
sahf
pop
inc
add
add
int
add
lds
out
int
push
or
jecxz
std
lods
sbb
lret
test
rolb
leave
xlat
mul
int3
xlat
cmp
push
cltd
jae
pop
insl
cld
iret
mov
sub
test
enter
dec
push
cli
into
insb
dec
mov
mov
push
sahf
adc
mov
lock
mov
jne
cmp
out
lods
pop
xor
xchg
loop
xor
scas
jno
mov
mov
xor
clc
je
and
je
out
add
dec
in
shl
rolb
mov
in
push
insl
lahf
mov
inc
adc
arpl
add
js
cmp
pop
jae
pusha
out
icebp
cmp
jns
scas
out
std
ljmp
mov
fiadds
mov
inc
inc
inc
ja
cmc
iret
push
cmp
les
jmp
stc
inc
sbb
add
int
push
mov
xchg
data16
sti
fs
les
dec
cld
sbb
push
fcomps
or
fisubl
jbe
outsl
mov
ja
imul
add
imul
leave
adcl
lds
pop
outsl
jmp
test
int3
in
sahf
cmp
fadd
fwait
xor
mov
jg
fisttps
push
xor
ret
push
arpl
test
bound
cmpsl
iret
dec
rol
sbb
test
dec
xchg
nop
cmpsb
clc
out
xchg
cmp
xchg
repz
stos
inc
sub
testl
push
mov
dec
jge
iret
test
or
iret
jge
cmp
xlat
shrl
ret
add
and
jno
out
addr16
adc
cmc
jle
into
arpl
lcall
aas
sub
loope
icebp
or
cmp
lods
jnp
ljmp
cltd
hlt
pop
xchg
jbe
ds
inc
jp
cltd
mov
shrb
rcll
movsl
inc
adc
aam
bswap
sbb
xchg
and
fists
fcmovne
xor
sbb
aam
adcl
mov
inc
push
dec
aas
lods
sub
mov
pop
ret
scas
inc
and
sbb
arpl
add
mov
inc
and
loop
outsb
xor
xchg
push
pop
in
jmp
jg
xor
inc
das
fimull
push
adcl
cld
cmpb
pop
idiv
aam
cld
push
push
cmp
cmp
outsb
iret
mov
pop
in
cmp
sub
gs
add
int3
fists
mov
stos
jo
lods
add
arpl
mov
push
push
sbb
cmp
mov
mov
add
cwtl
pop
or
fcoml
lods
jbe
sub
pinsrw
inc
or
inc
ret
pushf
sahf
add
push
sbb
sbb
cs
jbe
insb
scas
lds
jge
je
mov
adc
stos
xchg
pop
fldl
test
pop
cmc
mov
fld1
fisubs
addb
jge
cwtl
repnz
in
mov
jbe
dec
jl
sub
idivl
shlb
enter
or
push
xchg
js
mov
mov
sbb
arpl
hlt
rorb
mov
adc
jge
lahf
dec
movsl
inc
push
aad
mov
dec
adc
xor
cwtl
xor
push
jbe
rorb
and
leave
sub
push
fwait
push
add
push
aaa
gs
aas
lret
mov
xorl
rorl
inc
js
jo
push
movsb
push
push
ret
in
mov
cmp
dec
hlt
add
in
or
cmp
rclb
fstpt
mov
and
push
and
fsts
fs
dec
sub
testb
fbstp
pop
inc
gs
dec
sub
push
mov
jnp
cmpl
mov
ret
sub
std
mov
jecxz
and
or
negl
push
mov
or
cmpsl
xchg
adc
dec
mov
loop
pusha
cmp
addr16
adc
negl
add
or
jne
stos
pop
es
fabs
enter
daa
adc
and
mov
daa
jle
mov
push
adc
ja
sbb
pusha
loopne
add
pop
pop
inc
push
push
xchg
cs
les
aam
aaa
stos
and
cs
pop
imul
jp
lea
mov
or
enter
pushf
mov
push
pop
pop
lret
mov
push
cmp
cmpsb
pop
xchg
fst
inc
xor
and
fwait
xchg
clc
testl
sbbl
sbb
jmp
sbb
mov
push
cmp
and
int3
push
subl
cs
adc
addr16
or
push
shr
inc
fsubl
or
aad
push
add
pop
fdivrl
stos
cld
pop
repnz
pop
popa
in
repz
mov
sub
repnz
push
test
daa
fmuls
xor
xor
rorb
jle
mov
sti
insl
push
ds
arpl
push
arpl
cmp
mov
and
cwtl
pop
hlt
imul
es
test
outsl
xchg
jne
inc
add
dec
adcb
xor
sub
mov
cwtl
jno
fidivrl
xorb
lea
push
movsb
cmp
push
std
and
xor
cmc
mov
lods
cs
ds
imulb
mov
daa
fcom
bnd
mov
push
sti
rcll
push
xor
push
xchg
cmp
pop
push
cmp
sahf
repz
das
data16
test
insb
jp
rclb
scas
std
outsl
fstl
or
pop
out
adc
cmpb
or
adc
dec
addl
cmc
push
lds
adc
push
xor
cmpsb
add
lds
and
lahf
sbb
cmc
sub
jb
push
or
popf
outsb
test
pop
sbb
and
ja
push
pusha
jns
mov
popf
cltd
lock
cmp
sarb
decl
mov
push
pop
and
les
push
popf
jecxz
popa
mov
cs
push
sub
xchg
ficoml
fdivr
or
push
mov
test
ja
sub
push
sbb
in
ljmp
jo
jmp
test
mov
inc
dec
lds
cmpsb
fwait
insb
xchg
shlb
repnz
push
dec
or
cmp
stos
jnp
xchg
test
mov
mov
cltd
cmc
cmp
cmpsl
scas
pop
xor
stos
dec
sbb
imul
dec
shl
xor
pop
jmp
lock
mov
pop
movsl
mov
imul
lret
pop
add
iret
add
push
out
or
mov
aas
jnp
push
mov
dec
xor
aam
xchg
call
push
jns
aad
mov
add
aam
sbb
jne
pushf
xor
dec
mov
es
or
call
outsb
hlt
cmp
or
cltd
scas
aad
test
jo
sbb
mov
sbb
push
je
repnz
lods
jno
pop
pop
push
ljmp
pop
pop
cmpsb
sbb
bswap
int3
andb
or
cltd
xchg
or
sti
xchg
dec
pop
push
pop
mov
or
jecxz
aas
shll
cwtl
popa
cld
mov
xchg
leave
lea
inc
fidivrl
cwtl
aad
mov
fwait
jmp
jae
test
in
pop
push
lods
jge
into
popf
inc
push
cmp
icebp
inc
xchg
repz
es
orb
inc
add
jne
insl
cmpsl
es
shll
dec
rcl
insb
sub
xor
mov
xor
clc
insb
pop
mov
adc
repnz
xor
pop
mov
mov
repz
repnz
add
dec
movsl
sub
inc
jg
lahf
jmp
add
arpl
test
fidivs
outsb
jns
xchg
xlat
cmp
xlat
fcomps
cmp
lret
pop
lds
or
mov
dec
pop
or
jb
jo
ds
insl
or
mov
add
pop
in
rol
stc
xor
mov
loop
inc
mov
hlt
movsl
std
lds
xchg
xchg
fistpll
mov
scas
fisubrl
cmp
lods
mov
push
pusha
fistpll
mov
fidivl
shl
lds
add
loop
movsl
xchg
fdivrs
jecxz
sbb
pop
aas
mov
aaa
arpl
icebp
cld
lods
cmp
insl
pop
jmp
fwait
jno
cs
push
sbb
inc
je
arpl
pop
xchg
fwait
pop
in
test
pop
push
jl
stos
int
out
mov
xor
int3
inc
xchg
xchg
add
dec
iret
or
je
stc
repz
ret
js
or
stc
mov
xorb
push
sbb
xchg
enter
das
shl
or
lret
pushf
dec
xor
push
test
int
mov
sti
mov
sub
xchg
call
or
loope
shlb
shlb
pop
arpl
icebp
in
out
out
mov
sahf
add
jmp
dec
loope
mov
mov
and
js
cmpsl
cmc
cmp
push
test
je
aaa
push
fwait
movsb
push
push
dec
sbb
shl
xchg
mov
adc
cmp
pop
outsl
jbe
ret
int3
jp
adc
xchg
cmp
movsl
dec
fcomp
or
jne
or
in
push
xor
or
mov
mov
sub
rcrb
inc
in
xchg
cmp
lret
fucomp
les
sub
mov
jb
into
mov
pop
sub
or
lret
out
lcall
xchg
mov
add
lret
mov
push
ret
popa
sub
or
incb
loop
rclb
jo
hlt
mov
stc
fisttpl
mov
jns
mov
jge
mov
test
es
pop
mov
push
js
mov
pushf
jl
mov
xor
pop
in
dec
mov
sbb
in
xorl
mov
test
fistpll
jae
insb
js
mov
addr16
scas
sbb
mov
dec
mov
mov
or
ss
mov
ljmp
lea
or
inc
jg
pop
sub
stos
mov
mov
fsubl
mov
repz
xor
jl
gs
xor
movsb
call
mov
repnz
mov
pop
in
inc
xor
ja
pusha
sbb
mov
lock
push
cmpsb
push
cmp
sub
sub
fs
rcrl
pop
or
jnp
mov
mov
lahf
cmp
jnp
or
stos
xor
push
loopne
repnz
pop
adc
adc
je
daa
xchg
xchg
cltd
mov
lret
inc
jmp
je
rol
push
push
shlb
jns
movsl
ja
int3
mov
push
mov
and
mov
cmpsb
fcomip
subb
jbe
dec
push
cld
fnstcw
pop
cmp
dec
sub
movsb
inc
push
add
adc
daa
loopne
push
xchg
std
loopne
out
cld
xchg
bound
icebp
jl
xor
addr16
test
pop
jbe
push
imul
lods
les
pop
fldcw
dec
pop
fwait
mov
cmp
scas
mov
ret
push
mov
push
int
loopne
ret
inc
mov
push
push
lock
push
pop
adc
jne
int3
fistps
and
shlb
push
xlat
mov
and
mov
rol
sub
into
cmp
mov
mov
ss
mov
push
inc
jp
rcrl
jo
addr16
addb
push
jle
arpl
xorb
pop
addb
shrl
xchg
mov
popa
in
jmp
cmpsb
cmp
leave
mov
inc
sahf
xor
cmp
subb
mov
pop
fsts
xchg
jbe
cwtl
pop
cmp
gs
es
popa
add
dec
xchg
mov
push
mov
outsl
je
decl
dec
lea
inc
jbe
in
cs
cmc
or
aam
xlat
push
enter
fists
in
pusha
mov
xor
scas
test
dec
jns
push
cltd
out
mov
ss
fcoms
xchg
ljmp
add
lahf
or
inc
inc
push
mov
jbe
pop
and
data16
negb
leave
xor
cmp
and
fadd
rclb
sarl
lret
pusha
aaa
pop
cmp
mov
or
inc
adc
in
data16
icebp
push
divl
sti
shlb
add
cmpsb
insl
cmpl
sbb
push
fistl
stos
dec
icebp
les
clc
test
mov
mov
das
ja
test
cmp
cmp
repz
stos
pop
sbb
pop
int
ficoms
idivl
sbbb
add
or
scas
idivl
out
aas
mov
aad
mov
pop
dec
mov
clc
add
cmp
inc
in
mov
clc
js
jnp
cwtl
jmp
jns
stos
xor
out
cld
fbstp
or
fwait
dec
rcll
xchg
pop
les
cmp
jne
mov
mov
inc
rcrl
sub
daa
sub
ja
inc
inc
shlb
mov
inc
adc
adc
mov
jns
out
bound
mov
and
lds
lods
sbb
push
pop
fimuls
das
hlt
mov
pop
pop
push
dec
push
pop
ret
sbb
out
mov
testl
mov
xor
int3
mov
loop
sbb
push
repz
aad
outsb
cwtl
jb
mov
lock
mov
cmovbe
lea
jae
ficoms
mov
or
sbb
inc
pop
mov
adc
add
adc
bound
stos
lods
adc
pusha
mov
and
pushf
cltd
ficompl
bound
repnz
push
and
int
push
xchg
int3
lds
stc
adc
inc
movsb
cmp
fs
std
pushf
xchg
fidivs
mov
loope
mov
push
fs
popa
out
insl
cmpsb
sub
repnz
int3
sbb
add
fadd
and
jl
insl
xchg
pushf
div
push
mov
mov
xor
mov
xchg
xor
out
jb
fstl
push
pop
dec
push
jmp
or
mov
es
xchg
push
outsl
rorb
pop
hlt
dec
lret
cmpsb
or
jae
dec
push
out
xor
push
jg
jmp
bound
mov
xor
mov
or
sub
fcmovnbe
insb
inc
jns
test
or
add
mov
and
inc
clc
mov
sbb
and
xor
shlb
gs
repz
adc
cmpsl
push
imul
stos
inc
push
leave
or
cmp
adc
push
mov
das
or
cltd
sar
outsb
cmp
pop
cmp
pop
shrl
shl
test
repnz
dec
mov
mov
gs
xor
test
and
mov
jecxz
hlt
jb
stos
xor
gs
movsb
aam
mov
into
pop
or
gs
jg
negb
jno
cltd
out
mov
dec
push
adc
sarb
push
pop
ja
dec
lods
test
mov
push
xchg
test
popa
or
out
out
aas
pop
lods
cmp
cmpsb
cmpsl
push
loop
xchg
jle
or
pop
sbb
cwtl
aaa
fwait
jmp
rol
shlb
cmpb
mov
cltd
push
inc
mov
pop
mov
mull
mov
sub
fwait
jnp
mulb
call
xchg
clc
sbb
adc
repz
fbstp
or
mov
std
pop
sbb
push
mov
or
sbb
pop
mov
adc
cmp
mov
es
pop
and
dec
loopne
test
sbb
pop
imul
sub
in
pop
and
insb
sub
in
adc
jne
xchg
sahf
subl
dec
jecxz
es
mov
xor
adc
ds
sbb
lock
mov
sbb
and
js
jo
inc
jg
dec
aad
loop
jl
mov
das
popa
dec
or
jle
mov
inc
jg
push
pop
ss
pop
cmp
rolb
xor
in
stos
pop
scas
push
js
leave
addr16
mov
call
cmpsb
daa
and
dec
data16
stc
rcl
add
jmp
rolb
inc
inc
in
add
inc
xor
test
push
jecxz
cmp
jge
test
in
mov
mov
andl
cmp
loope
cmp
or
repz
inc
cmpsw
cmp
sbb
aas
adc
fcoms
ss
repz
fwait
add
mov
xor
jmp
imul
sar
inc
dec
lahf
loopne
aam
data16
sub
in
sub
push
or
or
fs
fldt
adc
jo
mov
push
and
cltd
dec
mov
outsl
dec
mov
aaa
aaa
sar
inc
or
inc
sbb
pop
push
pop
testl
cld
mov
int
jg
loopne
cmpsl
xchg
push
addr16
add
sbb
add
fnstcw
and
insb
aad
imulb
imul
js
insl
sbb
push
ffree
jle
pop
out
adc
dec
pusha
imul
jns
sahf
leave
stos
adc
int3
into
das
jecxz
cmp
repz
jmp
add
push
pop
sti
fcoml
rcr
outsl
in
cmp
sub
test
inc
dec
sub
and
pushl
insl
sub
in
daa
sahf
flds
int
sub
mov
cmp
cmpsl
jmp
sub
in
mov
mov
xor
and
mov
add
sbb
mov
pop
sbb
cli
scas
loope
add
addr16
push
add
xchg
mov
mov
and
xchg
inc
fidivrs
shlb
daa
xchg
lds
adc
mov
std
test
jp
andb
mov
test
mov
cmp
cli
sub
xor
dec
out
pop
pop
dec
xor
lods
lidtl
inc
mov
xor
fcmovnu
out
xchg
pop
ljmp
mov
pop
sub
mov
push
mov
and
pop
addr16
scas
jno
adc
xchg
and
arpl
jp
js
push
out
mov
cli
pushl
int3
lods
idivl
jmp
xchg
test
xchg
jno
jmp
jmp
and
rolb
jae
xchg
mov
scas
jnp
xchg
jmp
push
jecxz
add
je
je
daa
imul
push
sub
sbb
pusha
data16
jecxz
sbbb
push
cmp
je
inc
negb
imul
xchg
data16
pop
por
add
push
xlat
jno
inc
push
rcrl
push
dec
pop
mov
popa
lock
jno
jns
add
adc
mov
pop
aam
out
fimull
nop
and
fnstsw
add
fistpl
insb
sub
add
mov
subb
sti
jle
call
push
fldenv
dec
ds
sbb
or
push
divl
dec
and
adc
sbb
jp
xchg
xchg
test
push
dec
sahf
incb
fucom
outsl
xchg
sub
imul
inc
ret
aaa
dec
fsub
push
cmp
cmp
push
mov
enter
jae
inc
and
cmp
subl
stos
imulb
xor
in
xchg
adc
insl
adc
rorb
cli
dec
rsm
jmp
jno
mov
lea
jmp
sbb
dec
sti
insb
stc
test
jl
loop
lretw
sub
pop
pusha
gs
fsubr
aaa
lock
test
movsb
add
rol
pop
loop
xor
push
out
and
mov
jb
popa
dec
inc
inc
sub
mov
xchg
enter
pop
or
movsb
into
ljmp
pushl
lahf
lahf
sub
cmp
out
jae
jnp
dec
add
inc
in
push
push
arpl
or
mov
lret
aam
cwtl
cli
scas
push
out
pop
mov
in
inc
das
sti
inc
popf
scas
xchg
jae
repnz
xchg
repz
cmp
shl
mov
ljmp
sub
lds
lds
pushf
pop
iret
out
sub
gs
xor
cmp
sbb
dec
mov
inc
xlat
dec
push
scas
jno
insl
movsb
pop
pop
test
je
cld
lret
cmc
dec
inc
hlt
testl
cmp
dec
xlat
jle
sbb
sbb
int
sti
jmp
nop
pop
fistpl
jne
fs
rcll
fldl
rorl
or
or
and
and
adc
sti
shll
insb
dec
aad
push
jecxz
insb
add
insb
test
cmp
mov
push
jne
loopne
jge
aad
cmp
cmp
push
mov
out
fcmovbe
mov
pop
sbb
add
repnz
into
xchg
scas
push
dec
stc
pop
pushf
outsb
shrl
push
mov
movsl
push
sub
insb
jno
add
dec
jg
inc
loop
mov
adc
loop
rorb
lret
inc
sub
mov
out
mov
jo
lds
je
xchg
xor
add
fistpl
dec
jbe
sub
orb
into
jle
fcoms
lret
mov
mov
out
mov
hlt
sti
dec
lret
pop
mov
or
js
pop
push
rorb
sbb
sbb
lret
stc
jle
addr16
lds
add
sbb
sti
mov
inc
int
pop
rcrl
ror
js
addb
cmpsl
pop
cmp
adc
mov
out
mov
or
dec
sbb
xor
xchg
cmp
cmpl
lock
or
add
sub
push
clc
les
shrl
cmp
jnp
cld
add
or
and
leave
aam
cmp
cmpsb
pushl
xchg
test
pop
add
dec
orb
je
or
cltd
xchg
jp
sbb
pop
xlat
push
movaps
xor
pop
mov
lods
dec
or
nop
loope
inc
lret
or
dec
mov
and
iret
sbb
icebp
cmpb
push
and
sub
adc
jecxz
lret
sbb
std
mov
ror
pop
ja
dec
push
jo
pop
xlat
lds
mov
lods
pop
and
jne
cmp
iret
out
inc
fs
add
dec
mov
bound
lret
imul
jge
lods
dec
lret
add
ds
les
mov
lea
push
xor
mov
stc
mov
out
or
mov
pop
jl
int
mov
mov
cmp
jo
daa
fs
shll
mov
jl
sub
lahf
inc
mov
xchg
cwtl
int
and
mov
ret
cmpsb
aad
xor
ret
cli
jnp
out
sbb
jno
push
mov
in
dec
test
dec
xlat
mov
movsl
xor
or
cs
mov
mov
iret
jp
mov
fildll
xchg
cwtl
pop
out
sub
inc
sbb
mov
lret
lods
adc
les
test
inc
faddl
xchg
stos
push
cs
pusha
push
lea
ret
dec
inc
lods
arpl
fisubrs
xchg
inc
popf
inc
ud2
xchg
jnp
mov
mov
or
in
ja
push
dec
mov
adc
jo
leave
call
push
int
js
sahf
scas
pop
test
out
fdivs
sbb
pop
lret
push
cmp
cld
lret
ds
jle
fiaddl
test
adc
push
dec
xor
inc
mov
aad
fwait
mov
mov
mov
fs
xor
test
loope
lahf
stos
jns
inc
fdivrl
pop
jno
sub
sbb
std
and
gs
xchg
insl
cwtl
repz
fdivl
sahf
out
adc
dec
sub
leave
and
sub
mov
addr16
insb
xor
icebp
into
dec
sub
mov
data16
sub
ss
popf
nop
jnp
andb
mov
ror
xchg
push
pop
mov
mov
ljmp
les
addr16
mov
jp
pop
pop
mov
dec
js
sub
xchg
push
xchg
ds
jl
and
dec
or
out
shl
int3
add
jmp
push
lea
jge
mov
gs
or
out
and
sub
lcall
aam
je
lock
mov
cltd
sti
repz
inc
cmp
aaa
jmp
xchg
pushf
js
repnz
test
or
pusha
mov
push
push
adc
stos
mov
push
subl
cmc
nop
xor
inc
adc
push
sbb
lret
int
mov
sub
push
pop
mov
mov
dec
stos
pop
lock
pop
fidivl
bound
inc
lds
push
call
loop
je
call
xor
xchg
rclb
test
dec
mov
push
sbb
aad
loope
out
arpl
inc
push
or
jo
fsub
mov
andb
test
pushf
jl
pop
or
add
adc
jbe
cmc
push
cmp
push
in
jg
push
or
push
push
mov
fwait
pop
push
inc
sbb
xor
shl
xor
mov
mov
ret
pop
in
repz
sbb
push
in
frstor
push
add
lock
add
mov
mov
cmc
in
or
repz
lods
scas
push
push
subb
xor
mov
mov
cmp
pushf
fwait
mov
aaa
imul
cmp
jl
js
ss
cmp
mov
enter
test
mul
lea
push
lret
rorl
inc
into
mov
popa
inc
fisttpl
sbb
dec
sub
sub
sahf
in
xchg
popf
jl
push
sub
mov
test
push
mov
mov
pop
jecxz
mov
insb
in
xchg
outsb
sarl
outsb
sbb
sbb
cmpsb
jle
mov
cmpsb
rol
call
icebp
dec
lds
cmc
xor
jno
out
stos
std
lret
popf
and
jbe
pop
mov
mov
lcall
imul
out
int3
mov
sbb
iret
jmp
xchg
test
cltd
cmpsb
cmp
repz
inc
test
fdivl
insb
stos
popa
cli
mov
insl
fdivrs
movsl
mov
test
into
lahf
loopne
jb
or
cli
mov
repz
inc
in
outsb
cmp
mov
fdivl
cmp
in
call
aad
push
pop
stos
sub
pop
cmp
push
mov
rol
lods
cltd
cmc
out
xchg
call
xchg
and
xchg
popf
in
fisttpll
xor
loope
or
mov
or
dec
pop
mov
or
adc
push
pop
dec
clc
mov
push
pop
add
cmp
fs
shll
ljmp
inc
sbb
add
out
ljmp
sbb
cmp
xor
fistpl
mov
sub
xor
sub
sub
rcll
imul
outsb
jmp
jae
rcl
hlt
lods
orl
lods
xorb
fisubrs
cmp
fstpl
mov
adc
xchg
dec
popf
cmp
aam
mov
scas
out
xor
stc
sub
test
les
cs
subl
stos
xchg
mov
lock
pop
cli
push
js
push
stc
or
popf
jnp
and
mov
jecxz
ret
cld
cld
jecxz
fbld
mov
icebp
lea
dec
in
cmp
jp
mov
adc
adc
add
loope
inc
sbb
jne
add
lods
shl
mov
jmp
mov
cmp
cmc
and
orl
insw
cmp
popf
lea
mov
push
int3
add
jl
retw
sub
and
pop
mov
pop
cmp
inc
fdivrl
pop
inc
and
pop
std
mov
insl
mov
int
cltd
and
mov
std
imul
xor
push
mov
ljmp
sub
or
jmp
mov
addr16
inc
pop
lods
jle
mov
js
jp
mov
sub
xlat
xchg
in
push
sbb
jl
arpl
jns
push
imul
mov
jge
inc
outsl
repz
pop
insl
test
or
mul
sar
idivb
adc
sub
mov
outsb
xchg
add
loop
xor
popf
outsb
js
cmpb
scas
movsb
pop
mov
cmp
pop
mov
mov
daa
sbb
mov
cli
fucom
mov
mov
pop
or
xchg
out
push
lds
arpl
out
and
sti
and
push
xor
es
ficoms
or
cmp
mov
pop
sbb
and
divl
pusha
popa
into
xchg
adc
push
pop
mov
xchg
or
lret
pusha
mov
dec
orb
popa
call
mov
mov
pop
mov
fbld
dec
testl
jle
out
cld
jne
sub
das
cld
mov
and
out
scas
int
mov
dec
pop
outsb
jbe
mov
idivb
jno
sub
sbb
lds
les
aam
cmc
pop
out
xchg
adc
xor
dec
inc
cltd
jns
loope
mov
dec
das
mov
shrb
out
pop
loopne
dec
std
adc
test
sub
push
mov
lods
mov
out
cmc
dec
cmpsl
out
cmp
mov
mov
xchg
inc
xchg
rorb
jmp
movsl
shlb
xor
pop
mov
out
xor
insl
out
out
add
mov
nop
adc
std
pop
and
cmpsb
push
mov
es
cltd
je
call
sub
push
xchg
gs
orb
fdivrs
je
pop
int3
sbb
adcb
clc
mov
mov
adcl
aad
add
xchg
add
mov
stos
inc
xchg
sub
or
pop
outsb
mov
and
pop
mov
sbb
inc
cmp
fsubp
mov
jns
hlt
scas
adc
lahf
add
push
popf
lods
inc
setae
inc
and
mov
sub
pop
mov
add
stos
push
inc
mov
ljmp
lods
jno
dec
ret
scas
mov
cmc
cmp
sbb
mov
add
jnp
sub
mov
and
mov
jmp
stc
addb
mov
dec
fwait
inc
jge
sub
push
lods
cld
test
orl
xor
in
aaa
push
inc
call
mov
out
mov
clc
jo
sbb
pop
mov
jb
cmpsl
and
cli
cmp
dec
stos
in
push
jecxz
in
xor
mov
aas
xchg
fiadds
lahf
je
mov
pop
imulb
and
mov
pop
bound
jae
inc
cmc
lds
xchg
adc
sbb
pusha
and
in
and
enter
out
pushf
pop
test
xor
mov
aas
and
push
xchg
daa
pop
ds
rorl
jp
sbb
pushf
rcr
shlb
and
pop
inc
ret
mov
fidivrl
leave
sub
pop
cmc
adc
cmpsl
call
cli
scas
and
les
ret
or
pop
fldcw
rcrb
xchg
mov
shl
fsts
pop
jg
inc
pusha
notl
mov
dec
ret
les
jp
push
je
loopne
jo
into
mov
sub
cmc
pop
add
icebp
mov
dec
dec
mov
xchg
addr16
cmp
out
fiaddl
add
mov
insb
dec
xchg
mov
shl
pop
int3
insl
outsl
andb
aad
add
inc
xchg
sbb
orb
push
and
inc
add
xor
push
or
es
pushf
xchg
mov
test
jp
jo
fcompl
cmpsb
gs
aaa
repz
dec
adc
insl
push
mov
push
push
xchg
clts
sub
jmp
sahf
inc
jb
mov
test
insl
xchg
shl
inc
rcl
in
lds
sti
mov
mov
shr
push
xchg
popf
pop
repz
mov
andb
xor
push
jns
push
lret
sete
add
and
lahf
pop
or
adc
xchg
fcomi
push
rolb
mov
push
data16
gs
insb
test
pop
jp
and
aas
jne
mov
iret
std
jp
jo
cmpsb
xchg
cwtl
rclb
aam
inc
inc
in
repnz
xor
ds
shlb
mov
fsubl
and
and
mov
mov
andb
mov
ss
xchg
mov
push
push
or
jae
pop
lds
repz
xchg
cwtl
xchg
pop
test
pop
mov
fisttps
mov
rcll
jno
mov
lcall
rcr
add
arpl
movb
mov
enter
imul
adc
out
xchg
cltd
gs
push
pushf
pop
movsb
dec
hlt
aad
rcrl
mov
mov
lds
shrb
insb
mov
xor
jmp
sti
pushf
or
xor
vcmppd
bnd
mov
push
inc
mov
shl
xchg
pop
lret
shl
movsl
fcomps
inc
sbb
lock
out
lret
cmp
xor
ljmp
ficoml
sbb
pop
lahf
iret
cwtl
paddd
mov
addr16
fisttps
xchg
lods
push
xchg
outsb
int
xor
out
sub
inc
imul
imul
aam
int3
sub
xchg
insl
mov
push
dec
sub
in
aas
inc
cli
imull
lock
addb
inc
sbb
pusha
and
ficomps
push
addb
imul
les
add
or
mov
jbe
xor
mov
js
into
mov
lret
int
fdivrs
test
in
ds
or
out
or
shrb
dec
outsb
xor
pushf
ficoml
inc
loopne
mov
js
mov
xor
out
lret
adc
xchg
movsl
push
cmpb
add
or
mov
inc
sti
jecxz
rol
ds
test
cld
icebp
and
ja
and
cld
and
adc
or
push
lea
push
fisubrs
movb
test
call
mov
push
aam
add
mov
pop
xchg
push
push
scas
or
adc
mov
and
cltd
or
push
or
cli
lock
jbe
and
cmp
jnp
movsb
fsub
inc
cmc
vpsraw
xor
int3
sahf
popf
mov
sbb
into
out
or
xchg
cmp
aam
or
imul
imul
mov
cwtl
sti
adc
outsl
mov
cmpl
mov
imul
pop
iret
rorb
ret
cmp
in
jbe
jb
jg
nop
stc
aam
sahf
push
les
jnp
lods
rclb
xor
ret
push
sub
aad
add
xor
popf
into
xor
movsb
add
call
pop
add
or
int3
mov
mov
movsl
aaa
mov
sub
lret
jbe
cmp
push
add
insb
in
cltd
test
mov
fs
imul
inc
dec
fisubrs
cmp
movhps
push
jl
jle
pop
push
imul
rep
rorl
and
inc
pop
idivb
jg
popa
lods
push
jmp
in
xchg
repz
mov
xchg
pop
lea
pushf
cmp
divl
pop
inc
mov
in
mov
ret
jb
xorl
xor
xchg
btr
cwtl
fisubrl
shrl
pop
pop
mov
jg
cmc
mov
cmp
xchg
dec
ljmp
pop
incl
aad
sarl
addb
xor
jnp
xlat
sub
stos
inc
fnstsw
jne
hlt
sub
fnstsw
outsl
push
jns
in
adc
adc
enter
and
xor
scas
aam
sub
lret
mov
pushf
sti
outsb
shrl
jmp
incl
lret
repz
jge
cltd
fstps
loope
mov
repnz
stos
xchg
pop
mov
jle
aaa
aas
lea
aam
lds
pop
jecxz
lcall
push
mov
int
add
pushf
cld
jg
out
mov
outsl
jge
add
rolb
hlt
test
dec
js
dec
neg
mov
pop
insb
jae
sub
stc
jmp
shlb
jecxz
popf
pop
jae
insl
maxps
dec
jne
sbb
out
add
inc
adc
xor
cmp
repnz
push
lock
jmp
dec
pop
sahf
sti
loop
add
fldcw
inc
not
and
divl
in
pushf
scas
std
idivb
xchg
xchg
xchg
dec
inc
adc
xor
fcoml
lock
and
aas
es
daa
fs
out
icebp
mov
out
push
ljmp
sbb
aam
or
mov
xchg
mov
jae
xchg
jecxz
gs
cwtl
xchg
and
test
mov
add
mov
stos
scas
fs
xchg
mov
sub
leave
ret
pop
xchg
aaa
outsb
fwait
aas
push
testb
dec
cmc
or
dec
pop
mov
out
cmp
gs
ss
fincstp
xor
push
sub
push
xor
repz
xchg
cs
push
jmp
imul
or
xchg
mov
and
adc
xor
lcall
mov
cmp
xchg
mov
pop
cmp
lds
cld
mov
inc
pop
push
fisttpl
push
xchg
lcall
xchg
mov
and
and
sbb
sbb
mov
xchg
or
sub
cmc
adc
out
jae
leave
gs
lds
add
cmp
cmp
scas
fwait
xchg
mov
rorl
push
inc
push
adc
add
stos
aas
rorb
fnstcw
sbb
or
pop
pop
in
out
mov
or
push
lahf
fwait
pop
popf
adc
push
xchg
or
ja
fldz
adc
add
mov
jbe
test
lret
lock
or
add
leave
mov
pop
pop
in
pop
mov
pop
inc
fdivl
inc
push
in
xor
sarl
in
dec
cmp
hlt
lret
push
cmp
in
fwait
insb
sbb
sbb
std
and
xchg
mov
call
ret
lea
fsubl
ret
idivb
pop
data16
pop
mov
pusha
std
cld
push
ljmp
test
or
adc
ljmp
test
pop
jle
fimull
sub
push
arpl
shll
pop
xchg
cmpb
outsb
mov
mov
mov
adc
hlt
mov
loope
pop
fcomps
mov
and
mov
xchg
jnp
out
adc
leave
mov
sbb
jle
movsb
popf
ljmp
int
push
pop
das
or
xor
out
push
mov
clc
push
imul
cmp
in
sub
pop
enter
or
xchg
dec
mov
fcmovnbe
lret
es
aas
add
mov
data16
jb
int3
jmp
andl
cld
out
sbb
movsl
in
jp
sbb
addr16
idivl
cmp
mov
jge
frstor
add
shlb
loop
and
adc
inc
aam
aad
js
add
xchg
orb
std
and
push
cmp
loopne
sub
jns
push
jae
xlat
dec
loopne
dec
shl
lods
loope
test
movsb
mov
fwait
test
pop
movsb
out
iret
cmpl
pop
push
add
xor
cmp
lret
ror
push
aaa
ss
pop
ja
add
out
sbb
mov
inc
sbb
lods
inc
xor
rcr
add
shll
jle
je
pushf
xorl
sub
dec
inc
aad
or
sbb
ja
add
je
xlat
dec
xchg
jl
adc
pop
adc
xchg
fcmovne
jbe
pop
pop
jno
popa
lcall
mov
fldl
shll
fsts
inc
int
fimuls
les
aas
movsb
cmc
fadds
aaa
scas
mov
xor
mov
sbb
repnz
cmp
xchg
mov
or
inc
call
inc
lcall
ds
jecxz
loop
jnp
inc
in
int3
mov
call
movq
add
jb
daa
jge
inc
pushf
xchg
mov
inc
movsb
xchg
add
add
cmc
lea
and
fnsave
push
pop
jae
jns
bound
stos
enter
xchg
test
xorl
pop
movsl
ljmp
mov
mov
or
les
push
gs
xchg
cmpl
sub
stos
push
pop
inc
sub
add
ljmp
push
or
int
add
jb
cmc
mov
mov
scas
or
call
or
sahf
mov
sub
shlb
mov
jmp
pop
and
fisubl
call
fadds
outsb
int3
xchg
dec
xlat
daa
fldl2t
sarl
mov
je
cmp
and
jae
lock
push
lcall
pop
hlt
xorw
fucom
jbe
test
call
test
jb
lds
sahf
push
push
xchg
fmul
or
cli
mov
stos
sub
dec
loop
jmp
jns
xor
mov
movsb
int
xchg
jg
jge
rcl
scas
sub
add
in
call
flds
flds
lock
pop
in
movsb
cmpsl
or
loope
repnz
sbb
sbb
xchg
mov
or
mov
sub
xor
mov
data16
shrb
call
stc
jae
sub
pop
sub
add
inc
popa
adc
mov
or
xor
lahf
mov
pushf
fsubrl
orb
mov
pusha
adc
sar
stos
or
cmp
jg
inc
fdivl
scas
xor
ja
bound
mov
jmp
test
xchg
fwait
in
into
daa
ja
and
and
push
mov
addr16
push
mov
pop
ds
js
inc
mov
push
data16
lods
das
int
xchg
sbb
imul
ds
imul
std
enter
ret
mov
gs
lds
stos
daa
xorl
adc
bound
push
or
cli
mov
xchg
aad
mov
lds
dec
arpl
dec
outsb
lock
fdivrl
push
jbe
lret
aam
cmp
cmp
fs
outsl
add
fcoms
add
pop
or
addr16
mov
xor
pushf
dec
int3
adc
or
cmp
xchg
sahf
mov
out
push
dec
call
fldt
or
ja
xor
mov
adc
sub
mov
fstpt
pop
bound
cli
xchg
aas
pop
and
out
jecxz
mov
enter
insb
ljmp
or
xor
mov
fsubl
leave
xchg
mov
loop
fistpl
xchg
inc
cmp
into
adc
push
out
daa
movsl
push
jo
fldcw
lahf
call
and
js
pop
inc
dec
xor
repz
xor
add
xchg
cli
cwtl
stos
mov
into
movsb
ret
gs
mov
das
mov
mov
out
hlt
mov
adc
mov
pop
pop
out
adc
push
sbb
lahf
sub
add
icebp
mov
cli
jns
jb
mov
je
mov
jno
mov
adc
lcall
push
xchg
cmp
fisttps
pop
ficompl
sbb
cld
cmpsl
js
jg
pop
mov
jmp
xor
andb
push
mov
or
fsts
dec
or
push
testl
jb
xchg
inc
test
adc
and
jno
nop
or
cmp
addr16
mov
mov
push
mov
push
xlat
lcall
sbb
cmp
mov
inc
mov
jle
fcompl
jmp
fucom
sub
or
mov
out
sub
mov
leave
and
sub
mov
incb
iret
hlt
in
decl
cmp
int3
mov
jb
ja
pop
repnz
loopne
xlat
jnp
adc
jmp
jecxz
or
xrelease
add
leave
into
andl
fdivrs
inc
aad
xchg
adc
mov
xchg
scas
scas
mov
fstps
movsb
inc
rorb
add
push
std
xchg
push
fistps
call
call
mov
negb
scas
dec
or
ret
inc
loopne
mov
pop
add
xor
xor
mov
and
lea
notb
pop
sbb
pop
sbb
in
aad
in
les
lds
ror
inc
mov
es
jbe
xchg
ds
and
cld
adc
repnz
hlt
dec
mov
add
pop
into
mov
mov
test
push
cmp
mov
mov
or
cmp
mov
loopnew
jno
cmpb
mov
fdivs
fsubs
int
jp
xchg
imul
lret
cmp
in
aas
aas
cmp
imul
xchg
enter
push
pop
loopne
std
stos
push
cmpsb
push
lods
popa
popl
inc
sub
add
clc
cmp
movsl
in
gs
mov
push
ret
mov
icebp
into
xor
adc
jns
fwait
sub
or
lea
jmp
shlb
mov
pusha
in
push
movsl
test
mov
out
add
adc
adc
cmpsl
ds
cs
add
jl
jns
fwait
outsb
adc
push
je
int3
jl
pop
cmpl
cmc
shrb
cmpsl
daa
mov
lods
push
or
icebp
gs
mov
inc
sub
or
mov
dec
pop
pop
jnp
out
shll
fistps
mov
xor
or
lea
cmc
pop
push
imul
xor
xlat
cmc
enter
movsb
ficoms
lret
mov
mov
xchg
mov
imul
rcrl
fnsave
mov
bound
or
test
repz
jmp
jb
call
gs
sbb
mov
lcall
into
aaa
mov
mov
int
test
mov
orb
pop
stos
push
fsubl
add
cli
cmp
ret
adc
mov
push
das
xchg
ror
ret
addr16
scas
loope
and
inc
xor
mov
and
arpl
std
jnp
out
lea
pop
in
mov
fidivs
and
dec
jmp
scas
stos
iret
pop
add
enter
xor
pusha
mov
pop
push
sbb
rorb
cltd
outsb
loop
pop
mov
dec
and
aad
movsb
aaa
cld
sub
cs
xchg
stos
pop
rcl
lahf
notl
sbb
sbb
mov
out
jnp
xor
mov
push
lahf
pop
rolb
andl
repnz
xchg
daa
popa
sub
xchg
jns
sub
loopnew
outsb
push
shr
and
pop
add
sbb
fldenv
inc
and
mov
mov
in
mov
movsl
rolb
pop
mov
sub
inc
fdivrl
pop
aad
adc
mov
int3
mov
imul
fcmovb
int3
js
pop
loope
jno
xchg
mov
mov
icebp
ja
add
push
int
sub
nop
xchg
xor
das
shrl
pusha
push
iret
out
lahf
xor
mov
push
cli
xor
mov
shll
dec
daa
mov
gs
mov
or
fcmovbe
push
or
icebp
jno
pop
test
cs
fisubrl
jmp
jbe
adc
cmp
dec
and
mov
jnp
or
cmp
sbb
sarl
pop
push
cli
inc
inc
out
push
je
sbb
fldt
jl
pop
aaa
xchg
inc
movzwl
idivl
int3
int3
test
and
pop
shr
mov
pop
cmp
insl
xchg
mov
or
icebp
dec
nop
mov
orb
das
cmp
loope
lcall
jns
mov
cld
insl
inc
lea
test
mov
jne
pop
sub
rcl
jae
sarl
mov
pop
fnsave
stos
inc
push
pop
or
jg
sub
add
fldenv
push
shll
ljmp
or
xor
aam
movsb
pop
jbe
mov
fdivrl
leave
pop
cmp
leave
jmp
adc
jno
ficoms
int3
popa
inc
mov
test
rorb
cmpsl
dec
sub
fcomi
xchg
lds
mov
loopne
jg
int
sub
gs
nop
mov
andl
add
outsb
cwtl
in
in
test
mov
cmp
nop
inc
inc
popf
fisubrs
and
xchg
and
loopne
pop
les
leave
out
pop
push
cmp
push
jle
fdivrl
imul
sub
jns
sahf
add
nop
sub
mov
push
lods
sub
adc
and
sbb
dec
cmp
cmpsl
int3
mov
stos
cli
bound
cld
xor
jecxz
call
repnz
jbe
adc
outsl
mov
jb
fbld
mov
js
mov
movsl
dec
mov
lret
pop
out
leave
fistpll
jbe
fcmovb
cmc
nop
lock
test
mov
std
repnz
call
push
mov
dec
andl
push
adc
mov
mov
fwait
inc
add
ret
ljmp
in
sub
sub
add
loop
mov
lds
push
mov
int3
test
sbb
stos
sbb
or
push
in
out
lcall
xchg
jno
mov
lea
push
aad
jns
mov
daa
xchg
inc
fidivs
jns
pop
imul
cmp
push
dec
shr
and
push
movsl
mov
dec
push
jl
test
stos
or
icebp
arpl
mov
jle
subb
adc
pop
cmp
cmpsb
jp
mov
test
cmp
pop
and
mov
xchg
daa
sbb
push
imul
adc
scas
cmp
mov
xchg
cmpsl
mov
jecxz
shl
insb
fnsave
adc
mov
sbb
das
out
testl
das
inc
pop
aas
scas
aam
fstpt
ret
sbb
lds
jle
aad
cld
test
xor
or
xor
push
sbb
add
ret
cmp
sbb
xchg
mov
inc
push
xchg
lret
jnp
icebp
mov
mov
andb
mov
out
fwait
mov
jmp
in
std
lea
xchg
lods
pop
rcrl
sub
mov
repz
out
adc
mov
push
mov
jmp
out
aaa
fdivrp
inc
cli
push
push
lea
ljmp
imul
ss
call
inc
rcrl
cmpsb
mov
stos
scas
jp
xchg
mov
cmp
dec
pop
subl
cmpsl
xchg
out
sub
aad
mov
std
push
neg
push
mov
xchg
inc
xchg
adc
jp
pop
in
fcomps
fwait
mov
arpl
mov
mov
inc
std
cltd
or
sahf
movsl
xchg
leave
movsl
pop
push
cmpsb
sub
aad
mov
iret
sti
cli
aam
jb
sbb
xor
pop
int3
pop
repnz
dec
mov
cwtl
mov
fidivs
cmp
pop
and
insb
test
bound
fisttpll
sub
pushf
add
roll
xor
call
adc
jns
shr
push
pop
push
das
pop
jmp
pusha
push
fs
adc
sbb
push
sub
testl
inc
and
push
in
jbe
mov
inc
pop
pop
bound
lcall
sahf
or
div
lods
jbe
hlt
sbb
jge
inc
sbb
aad
into
movsl
aaa
jo
fadd
std
push
pop
adc
and
dec
imul
dec
inc
aad
cwtl
sub
int3
xchg
pop
mov
jae
cltd
sarl
sbb
jecxz
cmpsl
cmp
pusha
sub
cmpsl
in
in
add
stos
push
lahf
data16
arpl
pop
dec
outsl
pushf
cmp
mov
jnp
bound
xor
adc
push
ds
aaa
xchg
popf
in
lahf
adc
dec
int3
leave
out
sub
push
jp
into
mov
or
sahf
mov
and
sub
cmp
jmp
bound
add
shlb
push
sub
cmpl
push
add
notb
imul
xor
faddp
insb
out
pop
mov
ret
outsl
sarb
push
aas
push
loop
push
mov
test
cmpsl
inc
pop
dec
xchg
push
push
xchg
pop
shlb
jg
je
pop
push
adc
enter
mov
loop
pop
add
sbb
es
repz
fisttpl
mov
mov
in
or
or
xchg
fldcw
sarl
mov
mov
fmul
idivb
les
out
fs
push
fdivr
in
jae
subl
dec
add
cli
mov
int3
cld
jg,pn
repnz
rcrb
jle
sbb
into
push
call
inc
xchg
xor
loop
pop
inc
inc
out
mov
ljmp
pop
xchg
inc
jns
mov
xchg
xor
inc
call
notb
cmc
scas
or
jns
mov
inc
ret
pop
and
push
inc
sahf
sbb
jp
sbb
or
out
repnz
subl
dec
jo
hlt
loopne
xchg
add
pushf
mov
test
shl
push
push
xor
bound
in
sbb
mov
mov
jg
and
push
push
mov
and
and
cli
xor
sahf
or
das
fnstsw
lea
int
or
es
lcall
adc
pop
push
sbb
gs
or
inc
xchg
and
push
pop
mov
inc
scas
paddb
dec
outsb
das
insl
mov
pop
jb
push
jp
scas
mov
inc
jle
and
cmp
lcall
hlt
lret
push
pop
xchg
mov
pop
xchg
rclb
xor
stc
jnp
roll
test
and
jl
cmp
jle,pn
cmpsl
lods
test
push
imul
lcallw
fbld
mov
fwait
mov
gs
imul
inc
push
pop
cmpsl
inc
pop
mov
xchg
mov
mov
addr16
push
add
arpl
add
pop
lea
mov
xor
xchg
adc
pop
gs
iret
bound
jmp
test
rclb
iret
mov
mov
inc
insb
jno
loop
pusha
enter
sarb
pop
lea
pmulhuw
xor
dec
ficoms
in
je
scas
fstpl
or
jmp
pop
pop
insb
aas
jbe
shrb
cmp
aas
lds
mov
scas
inc
movb
mov
mov
loop
pop
lret
lock
call
mov
pusha
outsb
cmp
xchg
sbb
jle
jno
out
mov
cmp
ret
scas
mov
mov
fwait
pop
sbb
jecxz
push
cmc
lock
pusha
pop
inc
mov
jle
stos
mov
mov
or
stos
fiadds
mov
arpl
and
movsb
push
inc
pushf
fcoms
fnsave
and
sub
jp
push
jno
call
jmp
test
ret
loopne
ja
add
add
mov
pop
pop
pop
insl
fistl
jmp
mov
and
jo
pop
aam
stc
pop
push
jmp
pop
dec
jae,pn
mov
movsb
mov
dec
xchg
cltd
out
mov
mov
add
shl
mov
push
sub
js
arpl
pushf
push
sarb
inc
and
fstpl
xor
mov
add
push
fnstsw
lds
fisubl
mov
mov
push
fdivs
and
jns
xchg
in
into
js
mov
ds
loope
rol
std
es
cld
shlb
pshufw
and
out
and
arpl
out
mov
outsb
sbb
mov
add
inc
sbb
pushf
dec
hlt
pushf
cmpsb
fdivp
pop
sub
out
pop
and
cmc
mov
adc
movsb
cld
cmpsb
lds
jmp
dec
int
push
or
mov
dec
sub
into
mov
or
int3
sbb
fs
addr16
jmp
adc
jns
cmpsl
push
jg
rcll
sbb
shlb
out
out
js
minps
mov
test
xor
jmp
ret
mov
jnp
mov
mov
pop
push
fcomps
popf
mov
xchg
adc
es
into
cld
lea
mov
dec
fwait
cmp
push
cmp
inc
cltd
insb
add
dec
pushf
sub
inc
movsb
inc
inc
mov
std
sub
sbb
cmp
lea
frstor
pop
out
leave
mov
xchg
dec
lea
jno
cli
sub
mov
aaa
pop
jae
add
dec
mov
and
mov
and
out
cmp
leave
or
push
mov
dec
jns
js
add
aaa
je
movsb
dec
rorl
cmpsl
aad
mov
gs
cmp
arpl
in
insl
frstor
xchg
aad
cwtl
int3
pop
enter
xchg
push
jge
and
push
das
dec
adc
int3
sbb
or
adc
adc
cmp
aam
shll
push
sub
sti
sub
add
mov
cmc
pushf
stos
ja
out
or
jl
mov
jg,pt
test
sub
enter
mov
jl
mov
int3
cmp
dec
cmp
aam
mov
xchg
fcmove
ficoml
mov
in
mov
xchg
fisubs
mov
outsb
mov
inc
js
cmp
inc
jle
mov
xchg
repz
pop
insl
sub
adc
rcll
andl
adc
aas
xor
and
sub
jge
dec
fbstp
jge
outsl
mov
sbb
mov
imul
xor
shrl
sarb
sub
inc
data16
stc
mov
jecxz
mov
cmp
repnz
pop
fnstenv
ret
mov
sub
sbb
outsb
test
jbe
imul
call
cmp
out
ficoms
xchg
test
mov
out
aas
push
lds
es
jp
sub
lretw
add
mov
mov
arpl
stc
jg
add
enter
xchg
jge
mov
xor
repz
dec
test
mov
push
mov
jg
das
xchg
notl
imul
or
loope
into
movsl
add
push
in
mov
sbb
xchg
sub
jns
fdivl
aaa
or
sbb
inc
lods
jmp
cmc
aas
sti
add
add
pop
addr16
push
ret
xchg
lods
lds
imul
mov
add
data16
push
adc
loope
mov
rcrb
dec
fnop
cwtl
or
mov
hlt
pusha
inc
je
xchg
jns
mov
bound
jns
or
mov
ss
mov
inc
inc
mov
into
adc
pop
orb
sub
push
mov
inc
lea
dec
and
daa
addl
aaa
out
lods
ss
loop
xchg
in
inc
push
sub
shr
daa
sub
sbb
rorl
and
fiadds
xchg
or
lods
aaa
lods
pop
pop
outsb
das
bound
out
iret
dec
and
nop
cmp
inc
xor
mov
ljmp
loope
pop
les
xorl
mov
adc
mov
movsb
jb
imul
push
and
push
sbb
icebp
je
xchg
test
jbe
mov
cmp
iret
arpl
mov
adc
shll
mov
sarb
push
movsl
xchg
dec
add
mov
dec
mov
stos
xchg
sbb
cmp
insl
xor
sbb
xor
sbb
or
test
std
adc
insb
pop
dec
and
add
lret
xlat
lahf
ja
xchg
sub
loop
es
andb
repz
mov
dec
and
rclb
dec
das
call
sub
fidivrs
rcll
mov
cmp
aam
inc
outsl
clc
roll
sbb
push
fisttpll
xchg
loopne
mov
or
les
sub
mov
fisttpl
gs
adc
int3
sub
dec
inc
pop
xor
daa
cmp
sub
or
push
mov
ja
jo
mov
pop
xchg
test
sub
iret
stos
inc
mov
test
in
mov
fisubs
xor
clc
dec
fdivp
daa
pop
loope
hlt
sbb
in
mov
sbbb
out
pop
mov
xchg
hlt
mov
outsl
movsl
mov
cmpsl
ljmp
cmp
dec
aad
and
lcall
and
lods
mov
dec
mov
jb
xorb
outsb
ficoms
ret
xchg
mov
sahf
add
daa
sbb
lahf
sti
xor
push
or
sub
inc
bound
test
jecxz
push
sub
mov
xchg
and
dec
and
imul
ret
and
cmc
scas
or
fbld
adc
sub
push
lea
push
pop
or
ret
cmpsl
xchg
or
jno
dec
sbb
orl
fisubs
lds
ss
cmp
popf
imul
jo
jl
jecxz
and
adc
hlt
push
call
mov
and
in
out
test
mov
fstpl
movsl
bt
adc
mov
ret
pop
mov
mov
enter
or
push
mov
clc
mov
cmp
xchg
lods
sbb
iret
inc
or
outsl
sub
add
pop
xchg
or
xchg
divb
jp
add
sbb
mov
adc
sbb
jno
fldenv
mov
lret
mov
push
sbb
aas
enter
pop
aad
push
fistpll
scas
push
mov
test
mov
xchg
mov
mov
outsl
lret
push
mov
in
fwait
sbb
fwait
adc
jge
xchg
notl
dec
mov
ja
subl
pop
lret
pop
mov
cs
pop
je
adc
les
push
adc
ret
sbb
pop
adc
mov
xor
jns
stos
shll
std
jae
dec
in
pop
adc
loope
mov
sahf
jo
push
mov
push
das
or
inc
lcall
mov
enter
xchg
popf
ds
mov
sbb
push
repz
jp
sub
in
and
popf
ret
shl
sarb
mov
into
dec
mov
cwtl
lahf
fcomp
mov
pop
mov
push
add
adc
aad
sub
mov
sbb
add
repz
test
or
enter
lods
insb
scas
sub
add
addr16
stos
push
aad
dec
sahf
xchg
call
stc
gs
jle
lret
push
mov
mov
es
pop
mov
and
inc
dec
lods
enter
sbb
iret
mov
popa
sub
cwtl
sbb
inc
sbb
mov
pusha
cmp
mov
shll
repz
test
xor
ficomps
imul
call
neg
sti
mov
dec
insl
rcrl
scas
jae
fisubrs
aad
sub
ret
test
lret
sbb
add
daa
xor
xor
shlb
in
adc
xlat
loop
mov
negb
lcall
aam
add
sub
xchg
lods
js
sub
lret
in
xchg
and
jle
stos
jge
push
pop
xchg
lods
out
les
popf
push
push
xchg
push
test
xchg
jle
jns
jbe
testb
adc
inc
insb
std
cmpsl
jae
and
pop
hlt
and
clc
add
push
pop
das
arpl
mov
push
ret
and
pop
add
dec
jb
cltd
jne
push
call
jp
aas
dec
inc
inc
inc
mov
andl
pop
add
jecxz
aas
and
mov
lcall
cmp
mov
fistps
outsl
cmp
les
mov
loope
jno
xor
in
inc
stc
fstpt
bound
jl
mov
dec
pop
push
loop
out
adc
pop
fs
rcl
insl
sbb
or
lahf
add
pop
aad
lahf
imul
rcll
lock
out
mov
aas
adc
xchg
test
mov
repz
mov
cli
or
aam
dec
dec
xchg
lds
std
jp
arpl
mov
jg
add
jg
pop
stos
push
mov
push
pop
and
aam
adc
jmp
cmc
sahf
jbe
test
in
jnp
or
mov
popf
mov
and
push
in
jmp
ja
shll
ret
bound
push
jmp
jmp
popf
push
lods
es
mov
mov
movsl
outsl
data16
xchg
xorb
ret
js
iret
cli
je
arpl
dec
lret
mov
mov
jae
rorl
in
push
mov
cmpsb
pop
jmp
sub
lea
gs
mov
aam
xlat
daa
jge
push
sub
jne
xlat
fs
push
push
sub
push
pop
mov
nop
push
lret
pop
adc
lods
mov
adc
sti
jmp
xorb
pop
xor
jp
call
cmp
aaa
mov
test
mov
sub
xlat
lock
push
ss
pop
pop
popf
rcll
push
mov
aas
adc
mov
fildll
icebp
jne
arpl
push
xor
test
in
sbb
inc
dec
test
movsl
ja
xchg
loop
xor
mov
ret
cmp
mov
mov
push
fmuls
stc
fwait
or
addr16
andb
outsl
jns
cmp
mov
dec
or
cli
popa
cld
ds
ffree
dec
shrl
jbe
jns
dec
jmp
popa
aad
lock
roll
inc
pop
bound
data16
sub
sbb
mov
fnstsw
push
loop
cmc
ds
push
ret
lcall
ss
push
popa
xor
inc
mov
mov
xchg
and
aas
imul
xchg
add
rorl
push
xchg
cmp
movsb
add
cltd
sub
frstor
push
dec
jmp
js
aam
push
daa
mov
adc
pop
sbb
add
pop
rcl
jb
mov
mov
adc
ficoms
sti
mov
movsb
add
mov
orb
pushf
test
addb
or
push
fcmovnu
in
and
insb
jbe
addr16
mov
stc
xchg
adc
mov
mov
popf
dec
cld
inc
fldt
xor
cltd
fwait
mov
adc
add
add
js
test
xchg
lret
loopne
stos
and
loope
pusha
les
jl
rol
and
outsb
int
repnz
and
mov
mov
repz
push
sahf
rorl
inc
aad
xchg
jmp
imul
out
push
mov
mov
push
outsl
and
fs
cs
cmp
add
cmpsb
mov
push
mov
mov
mov
call
mov
adc
jno
dec
insl
xchg
inc
xor
std
add
clc
je
lret
mov
pop
pop
and
vpaddsw
stos
pop
jb
sbb
stos
out
mov
pop
subb
and
pop
sub
and
xor
add
sub
jg
rcll
cs
cmc
bound
adc
mov
pop
mov
lea
jge
xlat
ja
jecxz
dec
sub
test
mov
lahf
jno
paddusw
insl
or
and
push
fistl
bts
jns
hlt
mov
xor
call
mov
mov
cmp
pop
fcoml
xchg
sbb
pop
in
mov
outsl
push
add
dec
adcl
sub
in
in
sti
sub
shrb
cvttps2pi
sbb
cltd
sbb
cmp
mov
cmpsl
pop
and
call
mov
inc
insb
pop
out
rorb
in
cmp
xchg
or
aaa
jle
dec
dec
frstor
fucomip
imul
into
pop
dec
push
popa
shll
adc
cmpsb
sbb
cmp
xor
ret
mov
fsubrs
or
mov
and
inc
repnz
sub
lea
push
mov
jne
out
in
aam
mull
add
adc
and
fisttps
and
pusha
cld
les
mov
aas
loope
jl
jbe
dec
fdivrl
lret
sbb
and
mov
aas
stos
inc
out
in
add
shlb
xor
in
inc
je
movsb
sbbl
or
pop
cmc
dec
mov
add
loopne
in
pop
inc
dec
mov
jb
push
mov
dec
in
xchg
fidivs
mov
fstps
ljmp
aaa
lret
mov
fwait
dec
push
mov
test
adc
shl
pop
sub
and
sbb
cmp
xchg
stos
pop
inc
mov
btrl
push
ss
push
sub
les
call
mov
cmpsb
sub
add
and
test
add
shrb
and
stos
out
daa
in
aas
add
cmp
mov
inc
push
jbe
push
push
stos
shlb
xchg
out
cmp
add
or
or
in
cmp
mov
cwtl
mov
mov
push
push
cmp
xor
dec
ret
fistpl
and
shrl
lret
xchg
mov
inc
pop
cs
and
dec
imul
outsl
in
lret
jbe
xchg
add
ror
sahf
loope
js
lahf
idiv
inc
pop
inc
call
cs
arpl
insb
sub
roll
fdiv
adc
dec
inc
xor
out
or
jg
mov
call
lcall
sti
pop
js
mov
sub
sbb
test
imull
fcmovu
in
add
iret
dec
fisttps
ret
cmp
ret
dec
push
aam
and
jae
xorl
mov
nop
popf
imul
xor
shr
jle
pop
movsl
js
push
push
push
xchg
fcomip
dec
xor
mov
dec
adc
lahf
mov
pop
push
dec
subl
pop
mov
dec
push
shrb
ret
rep
fistpl
push
inc
mov
in
aad
cmp
orb
xor
mov
in
stos
mov
mov
sub
add
xorb
shrb
fcomps
nop
fxch
pop
call
icebp
push
mov
outsb
xchg
int
sbb
or
mov
dec
jno
arpl
scas
xlat
notl
shlb
lret
mov
mov
int3
push
out
mov
cmp
and
ljmp
adc
add
imul
rcrl
jb
push
subb
xchg
push
sub
setp
and
testl
insl
adc
push
and
mov
dec
xor
adc
mov
sub
pusha
fmull
inc
mov
xor
mov
les
in
enter
icebp
push
das
ja
inc
sbb
sub
frstor
outsl
jae
stos
daa
cmpsb
repnz
push
sub
fisubrs
or
arpl
shlb
pop
push
daa
shrb
out
sub
xor
sbb
jae
popf
sub
stos
pop
jne
outsb
mov
inc
and
lds
mov
roll
pusha
les
jns
sbb
imul
mov
mov
hlt
les
out
hlt
sub
pushf
hlt
push
xchg
mov
adc
sar
insl
je
xchg
cmp
data16
sbb
push
xchg
pop
leave
cltd
in
jb
xchg
jle
call
out
sbb
jecxz
rcrb
movsl
mov
shlb
sub
int3
sti
jno
cmp
push
insb
lods
fisubs
jle
leave
rcrl
out
inc
xor
jmp
addr16
pop
sbb
sub
add
popa
js
aam
outsl
push
pop
js
xchg
jecxz
popf
fwait
lret
into
das
repz
inc
xchg
lcall
fldenv
cs
notl
ja
xchg
add
jge
sub
cmp
lahf
cwtl
and
xor
pop
jecxz
cli
xchg
push
test
andb
cltd
jmp
dec
sbb
add
and
adc
sti
pop
arpl
imul
cmp
out
xchg
pop
sarb
aas
push
adc
mov
inc
icebp
and
aad
mov
pushf
mov
cmp
fs
dec
scas
imul
jnp
mov
add
sti
gs
jmp
xor
push
addr16
xchg
pop
cmp
in
aas
popa
enter
mov
icebp
loop
pop
pop
std
adc
fidivrl
or
insl
push
or
mov
pop
pop
outsl
cmp
popf
add
inc
or
rcrl
repnz
mov
and
lahf
popf
dec
xor
lsl
imul
jb
push
loop
mov
pop
subl
dec
cmp
jnp
pop
mov
fistpl
cmp
push
jl
cmp
push
jle
ret
xchg
jno
lods
out
xchg
mov
lea
inc
cwtl
rdmsr
lods
sub
cld
adc
xchg
ret
or
xchg
int3
add
andl
lock
pop
les
inc
in
pop
jecxz,pn
fstpl
adc
sbb
cltd
add
jle
sbb
cmp
bnd
xor
scas
lods
add
xchg
lcall
push
mov
xchg
insb
lock
jo
inc
rclb
addb
subb
daa
mov
sti
cwtl
sub
or
outsb
push
js
rorl
mov
int
pop
lods
mov
jno
ss
popa
sbb
ljmp
mov
rorb
pop
xor
dec
dec
out
push
jne
in
imul
iret
outsb
mov
cmpl
mov
out
aam
mov
imul
movq
mov
ss
xor
or
jle
mov
mov
aas
xchg
imul
xor
inc
xor
or
je
cmpsb
addr16
shlb
cld
xor
repnz
xor
scas
dec
mov
cmp
outsl
out
sub
push
insb
sbb
jo
movsl
mov
pop
out
fildl
inc
sbb
in
outsl
fnstsw
aad
ret
sbb
in
mov
adc
jg
xchg
jae
mov
pop
sahf
cmp
scas
imul
js
movsb
jge
popa
test
inc
jne
idivl
repnz
cwtl
ds
xchg
jg
adc
scas
leave
inc
fcmovb
rcrl
insl
mov
aaa
mov
mov
shr
sub
adc
iret
sbb
verr
movsl
sarl
hlt
out
fisttpll
add
flds
mov
insb
cmpsb
jb
mov
cs
adc
jp
dec
pusha
rcr
outsb
lret
cmp
adc
in
pop
ret
lods
adc
or
sbb
out
sub
and
mov
cmp
jb,pn
insl
sbb
add
xlat
mov
sub
repnz
and
pusha
repz
sarb
fidivl
or
cmc
test
andl
imul
pop
movsl
imul
ja
pop
ret
scas
fisttps
cli
loop
xor
and
lock
lcall
cs
mov
popf
les
mov
insl
in
fs
cmp
jg
jecxz
int
lds
out
push
inc
pop
movsb
cmp
xchg
inc
xchg
and
sub
test
leave
mov
fsubrl
pop
mov
insb
std
lret
fmull
fstpt
ds
out
push
and
lods
cwtl
mov
sbb
dec
adc
or
in
xor
xor
mov
mov
push
int
repnz
dec
and
rol
lea
dec
cmc
data16
mov
add
outsb
fistl
scas
lds
pop
test
or
cmpsl
mov
jae
lds
lods
icebp
mov
mov
loopne
enter
sub
dec
test
xchg
sub
jne
xchg
xchg
push
push
mov
cmpsl
scas
jne
xchg
or
out
icebp
repz
je
mov
add
add
or
xlat
lods
pop
int3
into
push
fwait
inc
negb
insl
adcb
fnstenv
dec
push
or
push
or
outsl
push
cmp
pop
sti
stos
pop
das
jne
sub
sbbb
or
or
into
mov
fnsave
push
inc
mov
and
cmpsl
xchg
dec
push
idivb
pop
jne
mov
push
fs
mov
mov
imul
dec
cmc
or
gs
or
push
popa
xor
test
cld
xchg
testw
out
jns
test
mov
out
mov
das
adc
out
pop
arpl
mov
ficompl
outsl
cli
mov
jbe
jmp
adc
mov
dec
loop
dec
mov
out
enter
outsl
push
jnp
jmp
jecxz
mov
mov
inc
rclb
pop
enter
mov
pop
mov
scas
ljmp
cltd
add
xchg
pop
fsts
sahf
or
xchg
xorl
sub
sub
inc
subb
enter
cmp
and
in
push
gs
add
shld
push
loopne
xorb
dec
stos
loop
sub
nop
lds
loope
mov
rorb
cmp
push
insl
daa
mov
push
mov
dec
popl
adc
mov
loopne
push
and
ret
cltd
mov
push
pop
inc
xchg
lret
xor
mov
mov
scas
inc
xor
mov
jae
xchg
popa
ljmp
sub
cltd
lret
popf
jl,pn
jnp
out
xchg
fxch
stos
aaa
enter
jmp
movsb
cmp
or
dec
sbb
push
cmp
push
and
ljmp
sbb
aaa
and
addb
or
adc
popa
out
or
jns
jl
jae
inc
enter
fsts
lods
call
pop
test
int3
fsubrl
pop
stos
dec
or
ds
add
push
cmc
test
mov
lods
into
out
add
and
push
aam
and
pop
pushl
push
cli
out
lret
jbe
mov
out
xchg
pop
int
jo
and
mov
jne
lods
insl
fcompl
push
cwtl
aam
sub
movsl
xchg
rcrb
std
push
das
movl
add
sti
push
sahf
sti
call
out
mov
std
mov
lds
pop
lcall
std
in
movsl
sbb
gs
jl
cmp
pop
test
xor
jle
push
xchg
pop
jne
push
cmp
jl
sub
mov
cltd
jmp
mov
and
lcall
jp
and
int3
je
push
xchg
and
cmp
mov
push
call
sub
adc
out
xchg
call
pushf
repnz
in
mov
jnp
mov
clc
jb
imul
xor
cmp
push
orl
mov
pop
xchg
mov
neg
andb
adc
popl
jne
ret
insl
data16
jno
lods
fstpl
xor
xlat
aam
nop
lea
aaa
in
pop
lahf
push
jp
int
in
das
mov
xor
jl
mov
cmpsb
repnz
fcom
mov
mov
jmp
pop
psrlw
jmp
loope
lahf
push
mov
sub
cmc
sub
jge
fwait
ror
sub
and
add
repz
or
ss
shl
push
or
lret
xchg
sbb
clc
or
xor
xchg
mov
pop
mov
ret
add
mull
cmpsb
stos
or
sbb
test
and
lret
mov
push
clc
xor
push
or
cmp
mov
xchg
rcrl
negl
lahf
cs
push
push
mov
push
test
inc
subb
adc
popf
inc
lds
gs
gs
jp
xor
imul
inc
clc
test
mov
fsubrl
shrb
jp
pop
push
addl
push
jno
push
jo
mov
rolb
daa
push
inc
rcll
ja
sub
movsl
mov
jge
inc
jp
mov
rclb
mov
jle
adc
mov
cmp
add
jl
mov
push
enter
fadds
xor
int3
inc
inc
sub
mov
addb
mov
xchg
mov
mov
mov
movsb
out
aas
stos
mov
popa
xchg
dec
addb
divb
pop
out
xchg
fistpl
enter
popa
cmp
lods
jp
lahf
popa
movsb
pop
dec
clc
imul
push
xor
int
fisttpll
mov
aaa
xchg
subb
lcall
mov
mov
pushf
sarb
xchg
mov
mov
or
add
call
push
shll
cli
sbb
enter
les
mov
jmp
shll
es
mov
adc
jb
adc
push
mov
in
sbb
arpl
pop
pop
push
movsl
or
xor
xlat
loope
aaa
cli
xchg
mov
mov
test
and
jne
inc
rcrl
popa
aad
pop
aam
dec
push
dec
mov
push
push
dec
rorl
dec
jae
out
pop
pop
xor
dec
out
out
outsl
arpl
xchg
sbb
add
add
jo
cmc
sbb
mov
push
cmp
cmpsl
mov
dec
adc
or
fcoml
mov
dec
mov
fs
into
js
pop
pusha
dec
pop
xor
test
inc
fcmovb
sbb
xchg
test
in
and
out
sbb
mov
xor
fadd
push
fldenv
mov
push
mov
dec
adc
push
sahf
add
jbe
loope
pushf
repz
pop
add
cmpsb
pop
movsb
adc
jecxz
jb
in
mov
lcall
sbb
cmp
pop
in
lahf
rolb
shll
mov
test
xor
in
add
out
jns
cmp
and
push
shrb
fsubr
xchg
cmpsl
push
jle
fimuls
mov
xchg
push
lock
xlat
fldenv
aas
or
mov
fistpll
nop
into
mov
sbb
cmc
add
sbb
leave
push
imul
negb
daa
int3
sub
add
dec
ret
mov
xchg
ds
or
pop
sub
pusha
in
mov
push
pop
xchg
push
int3
pop
fisubrl
rcrb
mov
es
fwait
les
add
adc
xchg
push
jbe
xchg
divb
ret
dec
imul
rorb
mov
and
push
xor
xchg
pop
inc
lods
les
or
outsb
xlat
jge
fildll
mul
dec
sbb
daa
and
adc
mov
rcl
jmp
jns
sub
in
dec
sbb
outsb
or
xchg
cmp
fiaddl
vpaddsw
sbb
or
incb
jb
mov
push
mov
mov
jnp
mov
pop
cmp
jns
jne
push
mov
nop
aaa
pop
cwtl
ss
xchg
int
mov
xor
pop
adc
xchg
mov
divl
test
daa
pop
mov
push
sbbb
popf
ss
lds
inc
pop
inc
sub
leave
shl
in
je
fsubs
and
adc
push
inc
stos
loop
add
jne
lods
add
cmp
gs
leave
rorl
test
shll
or
sbb
stos
jecxz
and
cmc
in
clc
fidivl
lods
xchg
ss
and
mov
cld
cmpb
aaa
sub
fdivs
mov
xor
sub
and
leave
inc
push
mov
aam
and
push
ret
ds
pop
push
dec
inc
cmp
dec
loope
movb
adc
aam
lock
mov
inc
call
test
cli
and
cwtl
xor
add
aaa
popa
pop
mov
pop
xor
mov
pop
adcb
mov
pop
popa
in
icebp
or
dec
mov
pop
cmp
jg
sub
pop
jecxz
int3
mov
lcall
jecxz
pop
mov
lcall
jo
lea
pop
xor
mov
jbe
cmp
mov
jmp
jp
iret
add
pop
test
jge
sbb
jns
mov
add
aad
adc
jmp
sbb
scas
mov
in
rcrl
add
sbb
mov
rcrb
xchg
popf
imul
jne
push
out
scas
dec
test
insb
add
mov
fdivl
fldt
int3
push
jp
adc
cmp
mov
mov
lcall
in
mov
adc
pop
loop
jno
fcompl
and
jae
clc
xchg
dec
pop
pop
in
sbb
adc
mov
jae
inc
sbb
jns
xchg
int3
das
fidivrs
jnp
xchg
ret
shl
xor
clc
std
mov
in
fwait
lret
pop
fstps
sbb
xor
and
pop
in
fnsave
and
jg
pusha
stc
or
mov
cmp
sar
je
out
add
arpl
jg
adc
das
pop
pop
or
xchg
mov
int3
push
or
pop
insl
xchg
cmpsl
repz
push
sub
ljmp
sti
mov
sbb
jne
and
adc
ret
mull
adc
movsl
inc
ds
sub
jmp
lret
aaa
jbe
in
mov
nop
test
or
push
out
out
aad
loop
fistpl
jg
dec
fisttpll
dec
add
fstl
test
adc
out
adc
xlat
ret
sub
dec
lea
enter
mov
xlat
adc
and
lret
sbb
popf
push
cltd
inc
mov
xor
fcomi
gs
mov
cmpsl
dec
xor
and
xlat
dec
sub
sub
mov
js
aaa
inc
cmc
and
repnz
and
cmp
mov
mov
and
mov
enter
int
lock
psubsb
out
js
sub
cmp
jnp
xor
arpl
in
imul
sbb
xchg
or
pusha
fisubs
ljmp
test
enter
repz
enter
mov
aaa
xor
clc
pop
or
dec
incl
add
inc
ds
in
std
mov
xchg
jmp
sbb
hlt
xor
orb
fdivrl
roll
ss
sbb
and
inc
adcl
outsb
pop
mov
push
lods
xor
xor
test
popf
dec
stc
shrl
in
imul
adc
stc
ss
cwtl
lods
clc
jge
add
je
xor
mov
cmp
jge
shlb
aas
or
std
lods
push
repz
sub
lds
mov
mov
dec
call
jne
ljmp
cmovle
stos
out
mov
insl
jmp
test
push
xorb
loope
cmp
sbb
jmp
sbb
movhps
or
xchg
ja
pusha
push
add
and
nop
xchg
sub
mov
mov
mov
inc
ja
mov
adc
stos
out
mov
lds
pop
std
mov
stc
dec
sub
sbb
popa
add
sbb
inc
into
xchg
mov
fwait
mov
mov
aad
push
push
mov
stos
clc
cli
call
imul
pop
fwait
jns
js
jmp
cmc
rcr
sub
sub
lret
outsb
xchg
bound
inc
jge
sub
mov
add
xchg
sub
outsb
jo
lods
addb
test
fchs
xchg
push
int
sti
repz
lahf
decb
or
pop
inc
push
cmp
aad
push
push
inc
ljmp
ret
minps
ret
xchg
imul
pop
mov
and
cmc
sub
jmp
jp
das
aam
add
in
dec
lock
dec
int3
movsl
subl
fdivrl
mov
std
filds
adc
mov
xchg
xchg
hlt
jnp
jge
pop
test
jae
jne
cld
mov
and
mov
mov
shll
mov
int
and
dec
xchg
inc
jne
mov
xchg
dec
jl
sbb
mov
imul
je
cltd
mov
std
lcall
call
shl
mov
sbb
shll
sahf
xlat
in
sub
xchg
cmp
pop
sub
adc
gs
add
imul
push
std
pop
add
pop
mov
test
pop
mov
xlat
xchg
jmp
and
aas
psrld
mov
add
out
dec
rep
xchg
xchg
push
rep
out
push
cmpsl
iret
push
mov
mov
jo
sbb
dec
gs
sbb
das
and
rorb
xor
rcr
cltd
test
and
sub
and
mov
cmpb
stos
lods
xlat
push
fdivrl
loop
push
lods
lret
aas
out
mov
sbb
nop
and
inc
dec
adc
js
stos
rorb
lret
or
sbb
lds
add
clc
pop
and
sbb
add
mov
jp
mov
rcll
fnstenv
mov
aas
pop
sbb
push
jmp
dec
mov
cld
addr16
xchg
mov
add
repnz
iret
iret
push
mov
movb
adc
shlb
adc
add
call
xchg
mov
dec
cmpsl
sub
and
inc
xchg
or
std
pop
sub
mov
pop
inc
es
inc
test
mov
cld
outsb
mov
pop
and
popf
adc
loop
jae
pop
cmp
lea
or
scas
adc
ret
das
fiaddl
bound
mov
stc
adc
hlt
scas
pop
mov
popf
movsb
ret
daa
sub
aad
adc
mov
iret
fwait
dec
pop
sub
aad
cmp
mov
or
xor
popf
outsl
les
cmpsl
cli
cs
jae
mov
push
add
insl
jle
cmpsl
jge
mov
in
test
movsb
mov
add
sub
adc
js
fwait
dec
mov
mov
push
fidivl
lods
jle
push
jmp
insl
jns
pushf
popf
jmp
in
out
ja
movsl
jo
gs
das
scas
cmp
push
test
sbb
push
inc
mov
shl
sbbb
mov
cmp
xchg
fcoml
stos
imul
xchg
aas
enter
lret
dec
ror
mov
iret
rorb
push
jb
gs
idivl
daa
loope
in
pop
ljmp
jns
mov
mov
sbb
inc
rcr
imull
jmp
and
xchg
xchg
pop
fsubl
out
add
xor
push
pop
fdivr
push
roll
or
pop
xor
inc
jno
fstps
stos
xchg
andl
cmp
xorl
mov
xorps
aam
test
jl
lret
aad
add
pop
xchg
mov
sbb
xchg
inc
hlt
adcl
enter
mov
jo
fdivp
ss
lret
cwtl
xacquire
ror
mov
or
mov
mov
mov
bound
jns
test
sub
fists
scas
pop
sub
adc
imul
nop
mov
fwait
xor
rcrb
stos
filds
mov
and
loopne
inc
lock
mov
mov
sbb
unpcklps
test
dec
mov
xchg
addr16
lds
jmp
mov
and
dec
loopne
cmc
ljmp
pop
je
or
mov
les
ficompl
orl
aas
icebp
insb
shl
mov
movsl
push
inc
outsb
sub
lock
daa
cmpsb
dec
addr16
push
pop
push
adc
push
cmp
or
loop
andb
sub
pop
dec
add
jp
mov
push
mov
add
xchg
pop
jle
cmc
lock
and
xchg
mov
pop
mov
mov
push
test
repnz
pop
loope
pop
popf
xor
sbb
sbb
xor
mov
jg
pop
or
add
ljmp
xor
push
ds
orb
sbb
andl
push
xor
pop
popa
inc
ret
ds
ds
push
jmp
inc
jg
jae
cld
push
adc
and
mov
dec
mov
cmc
inc
imul
xor
fcoml
inc
shr
insb
roll
sub
sbb
inc
inc
sub
dec
sub
shlb
std
mov
push
test
imul
xor
fcoml
mov
adc
and
or
adc
fsubrs
inc
insb
stos
sub
jo
pop
push
jmp
ljmp
iret
mov
mov
jbe
push
call
loop
addl
push
ds
xorl
pop
and
dec
xor
push
sahf
mov
lods
or
cld
aas
sahf
sub
ljmp
lcall
call
ljmp
mov
xlat
jnp
mov
push
adc
pushf
push
or
cmp
add
pop
das
outsb
adc
orb
ret
imul
pop
dec
inc
mov
push
cltd
adc
shl
popf
test
push
dec
sub
addb
sub
test
inc
movsb
int3
push
push
subb
mov
jns
mov
aad
call
gs
insl
loop
add
das
and
push
mov
inc
and
loopne
int
cmpsb
imul
in
mov
push
mov
push
mov
sub
sub
in
xor
add
fimull
in
adc
push
sbb
jge
aad
int
push
lret
outsl
outsb
insl
xlat
adc
scas
xchg
lret
insb
roll
xor
sub
enter
push
stos
dec
mov
clc
pop
divl
sbb
mov
mov
stos
int
loope
jecxz
std
xchg
jp
popa
dec
in
or
and
enter
or
rcrl
lcall
pop
icebp
adc
sbb
dec
jg
aad
pusha
or
pop
or
notrack
arpl
scas
in
add
add
cmp
push
lret
stos
repz
in
aas
je
jmp
jg
mov
repnz
std
or
sub
mov
xchg
mov
pusha
repnz
movsb
stos
fwait
out
xchg
lahf
mull
jmp
xor
cltd
or
testl
and
mov
out
andl
dec
es
cmp
inc
mov
ret
push
lods
xchg
fisttps
mov
fs
and
aaa
fwait
and
jl
adc
pop
fildll
add
hlt
lret
add
into
dec
pop
sbb
pushf
pop
jns
jb
rcr
cwtl
ss
in
fnsave
mov
aas
lahf
scas
mov
cmc
jle
jne
and
repz
and
push
fdiv
dec
cwtl
pop
dec
mov
inc
mov
push
sahf
cmc
push
push
data16
sbb
inc
leave
in
cmp
fcmovnbe
lock
mov
fwait
sti
dec
xor
jno
mov
out
iret
pop
push
pushf
pop
bound
mov
ljmp
mov
jg
rcll
xor
cmpsb
jbe
sub
movsl
enter
outsl
pop
cmc
mov
rcll
sbb
jg
push
icebp
out
and
or
pop
xor
aas
test
test
jns
mov
push
push
xor
push
faddl
and
sub
mov
or
rcrb
sbb
mov
je
test
xor
pop
sbb
or
cmp
dec
nop
mov
add
pop
data16
lock
push
or
arpl
mov
mov
mov
cmp
cmp
jmp
push
orl
push
stos
xchg
ficompl
dec
inc
out
sub
pop
ret
and
in
cli
insb
sub
and
sub
and
or
clc
xlat
out
pusha
mov
aaa
shrb
xchg
add
xchg
movsl
jecxz
sarl
xor
push
popa
xchg
repnz
mov
mov
nop
push
pop
sbb
xchg
mov
inc
dec
in
sbb
mov
je
imul
fstp
inc
xchg
jns
mov
imul
push
divl
scas
iret
les
or
mov
lahf
mov
mov
push
data16
popa
std
push
lods
pop
xor
fdivs
push
sbb
cli
pop
lret
stc
push
add
fsubs
call
sub
inc
xor
add
mov
rcrb
sbb
push
xchg
mov
xor
fwait
lods
repnz
and
ficoml
leave
dec
out
cmp
push
pusha
push
and
push
aam
inc
push
data16
test
cmpsl
push
xchg
and
mov
cmp
pop
cmpsb
xchg
lds
dec
jo
out
ror
fcmovnu
jbe
insl
add
jp
cli
cmp
cwtl
cld
fldenv
lds
stc
push
or
mov
cmp
arpl
cmc
cmpsb
jmp
in
add
out
mov
sub
stc
push
fldl
fmuls
adc
mov
xor
or
fiadds
dec
sub
xchg
and
adc
dec
mov
mov
mov
cltd
stos
push
pop
popf
push
xchg
fcoms
add
cmp
ficoms
es
icebp
and
or
push
fstl
lds
add
pop
cli
shll
dec
pop
into
jbe
mov
fistps
jmp
xchg
inc
repnz
dec
xor
aam
iret
ljmp
push
push
cmc
sub
xchg
les
fildll
or
mov
xor
jns
js
xchg
test
test
mov
out
lods
inc
int3
mov
cmp
pop
divb
dec
push
add
jmp
cmp
push
cli
enter
ret
aad
insb
add
lea
inc
xchg
and
pop
imul
sbb
dec
retw
incb
jne
imul
stos
int3
cmp
ret
pop
mov
mov
leave
mov
mov
ficoml
sbb
jb
xlat
pop
xchg
mov
cltd
sbb
xchg
notl
sbb
jge
fbld
lahf
push
sahf
mov
xorb
jle
popf
addl
sub
jb
mov
add
lcall
xchg
sbb
sbb
cmpl
movsl
mov
shrb
stos
lock
xor
mov
cwtl
mov
enter
or
push
scas
xchg
icebp
fnsave
repnz
push
or
ljmp
xchg
cmp
loop
xor
sar
into
lret
dec
aas
jns
fwait
sbb
scas
cltd
add
into
dec
jg
jge
clc
shr
shrb
cmp
mov
add
xchg
cmp
mov
cmpl
and
pop
xchg
xor
cmp
and
ss
add
in
adc
mov
lods
repnz
dec
jnp
xchg
mov
out
stc
lea
stc
adc
add
fsubl
test
sti
mov
mov
push
push
xor
dec
cmpl
pop
adc
mov
data16
fbstp
mov
ljmp
insb
pop
fcmovb
jp
shl
fsubl
pop
fidivl
mov
test
imull
cmp
adc
cmp
adc
stos
aad
inc
test
pop
push
aaa
in
sbb
push
test
cmp
rolb
mov
sub
xchg
push
add
mov
pop
add
loopne
es
jns
cmp
int3
adc
sbb
jno
adc
jge
rolb
add
js
jmp
mov
call
pusha
sti
cld
imul
or
xchg
cltd
mov
push
add
aaa
nopl
mov
xchg
mov
mov
adc
push
mov
ret
mov
pop
scas
push
mov
cmpsb
mov
pop
cmpsl
fdivrp
jns
jo
ljmp
sti
iret
xor
pop
jo
lcall
jecxz
xchg
test
ret
jb
dec
mov
es
imul
popf
fistpl
or
sub
or
xor
push
jo
out
cmp
push
jae
mov
mov
jmp
jne
jle
jmp
or
dec
jle
pop
sbb
stos
imul
pop
sbb
mov
js
insb
mov
or
inc
leave
mov
dec
cli
iret
cmp
popa
or
add
aad
std
pop
xor
push
xor
jnp
pop
fld
mov
mov
adc
adc
push
dec
notb
ss
loope
mov
jge
dec
out
push
mov
and
inc
cmp
stos
sub
loopne
ret
mov
sub
test
fisttps
mov
xchg
jbe
test
std
cmp
lret
dec
lock
sbb
cmp
pop
xchg
mulb
das
adc
in
cmp
test
stc
or
push
xchg
adc
lret
sub
je
sbb
shrl
add
in
mov
aam
and
insb
fcomi
or
jo
push
out
push
xchg
xor
inc
insl
js
and
mov
pushl
test
and
hlt
mov
add
adc
out
jns
push
xor
dec
and
pop
fdivp
sarl
daa
xor
shll
popf
rclb
fists
and
ret
shlb
inc
jns
notl
rcrb
daa
push
mov
andb
xor
out
lahf
daa
inc
add
pop
shll
ret
adc
rcrb
mov
jge
adc
push
push
scas
test
or
in
pop
mov
out
rcr
movsl
sub
pop
mov
imul
push
sub
and
add
dec
fdivrl
mov
pop
mov
mov
pop
mov
mov
out
pop
stos
mov
jg
decl
rorl
fsubs
push
jae
xor
sahf
add
pushf
push
xchg
popa
jle
sbb
mov
xchg
mov
and
jae
outsb
sub
xor
xor
adc
shr
flds
sti
xor
aam
enter
adc
repz
fldcw
pop
mov
lea
sub
stos
jmp
mov
mov
imul
cwtl
dec
test
in
repz
sarl
jecxz
mov
ret
cld
pusha
push
aam
mov
jo
ror
or
movsb
out
enter
mov
inc
sub
cmp
and
mov
hlt
or
adc
gs
std
int
fcompp
ljmp
hlt
sbb
inc
cmp
addr16
or
jl
jle
add
xchg
or
das
push
or
cld
pop
lods
mov
cmp
push
inc
das
sbb
idivb
lahf
icebp
dec
js
and
push
mov
sub
nop
ss
loop
mov
xor
adc
push
inc
pop
mov
dec
mov
nop
dec
cwtl
mov
pmaxsw
and
jno
mov
add
into
out
mov
test
mov
mov
rclb
lds
sub
jecxz
push
cmp
pop
sub
cmp
mov
and
sub
mov
imul
cmc
fdivrp
xchg
mov
shll
dec
add
lret
add
aas
lods
push
mov
repnz
out
xchg
addb
xor
call
sub
or
lods
rcll
int
pusha
jge
enter
inc
test
cmpsb
xor
int3
lods
push
out
xchg
ds
mov
cmp
inc
fsts
mov
std
loopne
mov
add
bound
and
aam
cmp
jnp
je
cmpsb
nop
decb
mov
push
mov
iret
pop
cwtl
adc
add
fadd
stos
testb
movsl
mov
mov
pop
into
les
or
icebp
xlat
les
jmp
inc
jg
mov
arpl
xor
push
xchg
aad
movsl
jb
lahf
or
xor
xor
jmp
in
imull
push
dec
cwtl
mov
sub
mov
sub
xor
popa
out
test
push
xor
mov
nop
pop
lock
insl
inc
pop
cmp
add
les
mov
pop
sti
fnstcw
jmp
popa
cs
pop
mov
popf
cmc
cmc
push
pop
xor
and
divb
test
cs
arpl
shrl
xlat
push
test
sub
int3
faddl
shll
or
jecxz
iret
test
jmp
pop
bound
in
lock
aaa
pop
mov
push
out
pop
icebp
addr16
fcomip
and
into
and
fdivs
roll
insl
shll
or
mov
loopne
cmp
imull
sarl
add
int3
jl
jecxz
lods
xchg
sbb
add
push
dec
movsl
adc
cld
push
ss
adc
sti
imul
test
ret
sub
mov
pop
ja
loope
call
xor
inc
add
bt
scas
jl,pt
sub
sti
dec
mov
inc
fwait
push
cwtl
sbb
and
scas
movsb
xchg
and
sbb
loopne
pop
cs
mov
sbb
inc
arpl
xor
leave
xchg
mov
cmc
add
notl
rcrb
inc
jbe
out
jg
addr16
cmp
shll
pusha
sub
jnp
int
mov
push
adc
lret
data16
mov
cmp
mov
mov
push
push
dec
ljmp
adc
xchg
xor
xchg
popa
stos
fisttpll
and
push
lret
dec
mov
imull
pop
lds
mov
repz
add
add
std
xchg
std
add
sub
bound
out
rcrl
test
cmpsb
cmp
xor
sbb
push
inc
add
mov
out
jne
jne
leave
fdivrs
sub
or
movsl
nop
dec
sbb
pop
mov
loope
or
mov
mull
inc
sbb
jl
rcll
lds
inc
or
enter
jo
and
lret
ss
ljmp
sub
or
clc
test
xor
jae
inc
push
pop
pusha
mov
hlt
mov
sub
adc
xor
loop
mov
icebp
dec
push
jg
xor
icebp
pop
leave
imul
mov
imul
sub
movsb
pop
or
inc
pop
mov
mov
add
orl
icebp
aas
addb
shll
push
pop
in
lret
negl
pop
pop
dec
imul
out
dec
out
push
push
jp
fcomi
inc
nop
mov
lds
fsubrs
stos
pop
lea
mov
addb
cmp
inc
push
jbe
inc
int3
lret
ljmp
pop
xor
call
add
xchg
nop
test
testb
fwait
mov
fisubs
jae
or
cmc
xchg
ficompl
mov
test
in
out
stos
arpl
aad
pop
jae
adc
push
pushf
xchg
xchg
inc
mov
push
js
dec
ret
lds
push
add
arpl
dec
mov
insb
xchg
sbb
mov
inc
repnz
mov
lcall
cmp
cld
scas
sub
or
mov
push
add
leave
in
rorb
mov
lods
fidivrs
add
push
jge
fnstsw
xchg
test
sbb
inc
sub
mov
cmp
mov
sbb
fldenv
mov
mov
jo
test
adc
outsl
in
call
xchg
ss
repnz
lods
arpl
mov
mov
add
and
test
js
mov
add
push
and
out
add
jl
mov
mov
fdivrl
bswap
cmp
mov
mov
data16
dec
sbb
fistps
je
rcrb
xorl
shll
sbb
data16
lods
hlt
or
ljmp
sub
cmp
scas
jae
mov
pop
xchg
insb
fcomi
repnz
iret
cli
aas
mov
inc
pop
stos
mov
outsl
sub
add
data16
mov
jno
adc
decb
mov
xchg
mov
or
jne
xchg
jo
adc
lods
fsubrl
cwtl
pop
mov
mov
leave
icebp
and
frstor
inc
adc
loope
pop
mov
mov
inc
inc
movsb
mov
mov
rorb
js
xchg
mov
adc
jle
mov
cmp
fdivl
mov
jno
lahf
lret
scas
loopne
adc
sub
cwtl
roll
sub
xor
push
adcb
ljmp
movsb
int3
jb
arpl
xor
mov
sub
fbstp
pusha
dec
shlb
enter
dec
rorb
rcl
or
div
sbb
cmp
pop
cmp
add
shll
pop
push
mov
nop
or
out
test
jne
popf
or
rcl
xchg
cmpl
in
push
add
dec
movsb
mov
insb
dec
lds
jns
fnsave
adc
scas
mov
sub
std
and
out
xor
jb
mov
je
mov
mov
add
leave
add
inc
xchg
fadd
sbb
fists
xchg
fisubrl
pop
push
mov
fildll
aas
pop
mov
xor
aaa
mov
push
mov
out
adc
xor
fisubrs
dec
jl
nop
cmp
icebp
das
ret
and
out
mov
xor
pop
pop
das
out
inc
in
inc
repz
mov
test
xchg
cmc
movl
jns
out
mov
xchg
adc
je
xor
mov
decb
mov
inc
sahf
std
xor
inc
test
mov
sbb
mov
mov
fnsave
dec
jp
popa
mov
add
mov
dec
in
inc
push
ja
or
pop
ss
xor
in
outsb
push
imul
pushf
stos
call
scas
push
pop
fwait
dec
xchg
and
pusha
es
mov
ret
lret
shrl
dec
mov
movsl
int
lods
mov
mov
cltd
lahf
add
mov
lods
dec
inc
cs
rorb
sub
mov
mov
sub
mov
dec
movsl
xor
mov
push
push
ljmp
jne
jne
int3
lods
fcmovnu
cmp
mov
sbb
inc
push
mov
cmp
jnp
inc
push
call
lret
lahf
cwtl
mov
mov
mov
pop
lea
xchg
push
ret
mov
pop
pop
testl
je
nop
ja
jno
cmp
mov
and
inc
cmp
jb
bound
and
fistpl
enter
cmpsb
inc
test
fwait
pushf
or
iret
push
int
rcll
idivl
push
sub
lods
clc
xchg
ljmp
lods
iret
cli
cmp
mov
jbe
mov
outsb
cmpsl
adc
lea
mov
frstor
push
test
mov
icebp
fisubrl
mov
je
fildll
ja
adc
iret
push
notb
addr16
xor
pushf
das
pushf
dec
jae
stos
dec
aam
scas
cwtl
mov
mov
mov
push
leave
js
lahf
pushf
imull
inc
daa
mov
cmpsl
adc
sbb
arpl
adc
nop
icebp
fists
jne
into
dec
sub
icebp
dec
fwait
ret
inc
pop
ret
dec
push
and
push
fsubl
fisttpll
in
aam
sahf
fsubl
incl
or
icebp
mov
dec
jmp
nop
mov
push
enter
aas
cmp
inc
dec
andl
mov
jmp
imul
loope
daa
fdivrl
test
dec
mov
loopne
aad
test
jp
cli
arpl
pop
xor
call
fsubrl
xor
lret
repnz
mov
cmpsl
sbb
push
mov
in
data16
pop
push
and
push
mov
stos
mov
lret
cwtl
push
sub
push
mov
cmp
xor
movsl
pop
cwtl
insl
inc
pop
mov
dec
or
mov
dec
notl
rorl
and
mov
add
xor
jne
leave
ret
popf
jge
js
cmp
clc
enter
jmp
fildl
jg
out
les
sub
div
movsl
inc
mov
rorb
jne
adc
rcr
xor
xor
dec
fwait
idiv
je
lcall
call
or
iret
add
mov
push
cmp
add
cmp
pop
add
inc
add
sahf
inc
xchg
cmc
or
add
adc
hlt
adcl
push
daa
pop
subl
sub
stos
incb
sbb
push
out
jbe
cltd
je
mov
add
int3
sub
mov
lds
xor
sahf
pop
pop
mov
mov
stc
ljmp
jl
sahf
mov
gs
cs
pop
nop
in
mov
adc
loopne
inc
lods
mov
cwtl
in
fsts
outsl
out
aad
and
adc
stc
pop
or
jg
add
maxps
pop
cwtl
shl
sub
ffree
mov
testl
movsb
jae
repz
xchg
xchg
and
aas
daa
add
push
pop
mov
lods
push
cltd
mov
into
jle
xchg
pop
fstl
scas
xchg
aam
xlat
mov
jg
test
pop
add
outsb
inc
scas
mov
and
imul
push
mov
cmp
pop
dec
das
dec
test
int
lcall
std
aas
jle
mov
add
mov
repnz
outsl
mov
mov
xlat
movups
xor
aad
pop
sub
mov
test
aam
dec
mov
incl
pop
test
sti
xor
mov
pushf
add
jl
sar
xorb
cwtl
aad
pop
in
or
lret
sahf
dec
fs
sbb
jne
xlat
xor
jae
stc
ficomps
mov
ret
and
pinsrw
daa
mov
adc
mov
push
rorw
jmp
add
jl
loopne
and
push
sub
sub
call
icebp
stos
pop
xor
or
xchg
sbb
or
pop
fdiv
or
rcrb
adc
pop
mov
gs
addr16
jo
ror
fnstenv
dec
daa
popa
and
pop
jmp
push
ja
sbb
aas
pop
leave
mov
sbb
jp
gs
xchg
push
or
in
cmp
pop
cmpsl
fdivrs
mov
out
jg
pop
jl
mov
sub
lret
outsb
mov
or
movsl
or
test
push
pop
addr16
lods
xchg
or
out
inc
or
dec
mov
mov
sbb
push
xchg
cli
inc
or
and
adc
in
cmpsb
daa
cmp
inc
orl
push
test
pop
pop
or
mov
jge
out
pop
cmpsl
ljmp
sbb
sahf
sbb
and
mov
push
cli
xchg
cs
dec
imul
outsb
clc
lock
jbe
std
cs
pop
test
stos
mov
movsb
mov
and
mov
and
inc
pop
jmp
in
and
pop
push
roll
adc
sub
inc
push
sub
dec
divsd
mov
and
fcoml
adc
pop
sbb
cmc
mov
mov
scas
push
insb
mov
pop
push
jecxz
pop
nop
mov
push
repz
repz
mov
pop
or
jnp
pushf
xchg
cwtl
gs
pop
daa
dec
xor
dec
xor
nop
aam
jmp
add
outsl
rcr
sub
adc
out
sub
add
imul
dec
sbb
mov
or
mov
rol
lds
push
movsl
add
ljmp
inc
push
jnp,pt
rclb
xchg
add
fsubrs
je
mov
xchg
mov
xchg
mov
das
into
bound
nop
cmp
jb,pt
jo
inc
addr16
ret
pusha
dec
es
push
fs
pop
mov
fwait
sti
pop
mov
xchg
subb
ljmp
out
lods
mov
cmc
sub
pop
xchg
cmp
jns
outsb
dec
sub
push
arpl
fisubrl
ss
lahf
cmp
cs
dec
je
cmp
aam
mov
icebp
mov
xchg
cwtl
aad
loope
pop
mov
sub
subl
cmc
lods
outsb
das
or
mov
jp
lret
pop
inc
and
jmp
cmp
dec
aas
outsb
aam
lahf
cmp
xchg
int3
add
cmp
push
mov
sub
lret
mov
jmp
pop
cwtl
int
ljmp
mov
push
xchg
pop
stos
cwtl
dec
xor
mov
jp
stc
mov
jnp
testb
cmc
ljmp
xchg
mov
stos
and
sub
in
xlat
and
aas
adc
test
inc
mov
cmp
inc
and
jbe
xor
in
push
push
cwtl
fildll
cmp
lahf
dec
or
push
lahf
nop
pop
dec
xor
jp
stos
imul
push
push
stc
jo
cmpsl
sbb
les
in
fimuls
popf
jg
xchg
js
ds
enter
and
or
test
rorl
xlat
dec
in
xchg
mov
dec
add
or
lret
repz
xlat
inc
jae
push
jae
enter
xchg
pop
inc
nop
gs
cli
lds
dec
insb
inc
lret
ficomps
outsb
fldt
dec
mov
dec
sub
fsubrs
push
pop
cld
adc
dec
js
xor
sti
pop
sbb
push
mov
push
add
mov
xor
push
add
dec
movsl
jmp
movsl
jmp
bound
sahf
movsl
imul
cmc
arpl
sbb
fimuls
outsl
mov
xchg
into
or
out
adc
lret
jbe
out
inc
mov
push
cmp
push
popa
push
or
fidivrl
jno
mov
sbb
ds
sti
test
cmp
add
or
and
xchg
mov
ds
lea
sub
enter
call
xor
pop
xchg
not
ret
test
aad
js
rcrl
ds
stos
xchg
test
fcoms
jp
jecxz
incl
sbb
inc
sbb
sbb
and
lahf
dec
scas
push
cmpsb
mov
jne
loop
xor
shl
pop
cmpsb
mov
stos
lret
cltd
je
fsub
pushf
jae
jns
movsl
stc
fldt
andb
ja
mov
cmp
jnp
andl
push
push
push
pop
andb
mov
sbb
nop
mov
out
test
bound
imul
cwtl
xor
add
imul
out
int3
aaa
jo
divb
push
pop
xlat
movsb
bound
in
sbb
cmpsb
inc
loopne
lahf
sub
mov
mov
movsb
pop
sbb
fstpt
out
enter
push
jge
push
pop
and
dec
cmp
into
and
fisttps
cmp
add
shlb
out
popf
jnp
out
fisttpl
mov
mov
in
jl
cmp
mov
sub
in
xchg
fdivp
jecxz
xchg
and
lahf
int
movsl
or
adc
sti
ljmp
lock
test
outsb
sbb
add
sub
pop
sbb
add
cltd
push
and
mull
push
shlb
cmp
xchg
fsubrs
xor
and
flds
lods
and
xor
les
sub
inc
adc
xor
jne,pn
pop
adc
jno
sbb
and
jl
les
sub
shll
and
lods
mov
lods
inc
jmp
sub
out
xchg
or
movsb
out
mov
cmpsl
or
push
daa
inc
sub
adc
mov
loop
pop
inc
mov
insl
push
xor
mov
fisubl
jne
inc
and
mov
adc
adc
ret
popf
mov
pop
push
popa
mov
jge
push
hlt
cmp
idivb
push
push
dec
dec
push
cs
jge
aas
adc
or
cs
ja
pop
mov
pop
jl
das
dec
sbb
cmp
sub
add
movb
icebp
sti
sub
push
stos
mov
bound
xlat
and
add
les
std
lods
jnp
adc
lahf
lret
mov
mov
outsb
add
lds
mov
shll
ja
lahf
add
call
mov
out
mov
inc
imul
rcll
sbbb
add
xlat
xorl
jl
inc
mov
add
inc
push
test
in
in
pop
aas
xor
cs
mov
xchg
or
mov
mov
out
jg
push
imul
cmp
popf
sub
pushf
dec
stos
push
fimull
sarb
mov
push
imul
dec
add
cmpsb
xchg
xor
out
ss
lret
jae
pop
add
sbb
imul
mov
xchg
cmc
xchg
ja
rcl
lea
pop
cmp
jge
push
jg
adc
rcll
mov
mov
popa
clc
dec
leave
loop
test
addr16
test
shll
loope
push
mov
sbb
cli
rorb
aam
mov
pop
xor
bnd
mov
insl
lret
outsl
loope
mov
jnp
mov
test
inc
sbb
mov
movq
and
sub
fnstcw
cmpsl
adc
stc
sbb
sbb
pushl
les
daa
repnz
or
xchg
jle
inc
sub
mov
xlat
lahf
mov
sub
cmp
cmc
popa
jg
pop
aas
adcl
inc
inc
cld
test
xor
shlb
mov
loop
movsb
sbbl
clc
mov
pop
stos
ret
mov
lret
add
push
orb
jo
mov
push
iret
cwtl
nop
sbb
xor
jae
and
rolb
in
pop
aam
aas
sahf
into
rolb
loop
scas
mov
jno
nop
fistps
repz
repnz
xchg
xorl
cli
test
call
dec
mov
jo
mov
stos
movsb
ret
and
sbb
lahf
cmp
out
mov
mov
out
add
std
ds
loope
cmp
mov
jmp
mov
add
jae
pushfw
in
imul
xchg
jnp
adc
mov
mov
inc
fwait
add
into
or
pop
xchg
sbb
clc
incb
fiadds
pushf
push
je
ret
xchg
bnd
mov
je
push
push
stc
mov
xor
inc
pop
aam
or
rcrb
addr16
sti
repz
jle
mov
xchg
push
cwtl
out
inc
jmp
ds
outsb
sahf
imul
test
add
inc
jnp
loopne
add
mov
in
pop
and
aad
mov
cld
in
aam
xchg
icebp
cmp
cmp
jnp
pop
sbb
mov
and
pop
sbb
jcxz
mov
mov
int
xchg
aad
pop
fcmovnbe
push
out
cmp
mov
xchg
cmp
lret
push
lds
pop
int
mov
or
adc
sub
adc
inc
and
lahf
lods
ja
mov
inc
xchg
stc
jo
ret
repnz
xor
arpl
repz
and
pop
fidivs
mov
iret
sub
push
and
rcrl
adc
test
jnp
popa
jg
cmp
sub
or
jbe
jle
add
fstpl
movl
add
xchg
sbb
dec
dec
push
xor
jl
jmp
sbb
aam
das
aas
fdivl
sub
jae
and
aaa
lods
test
sbb
jnp
ja
sbb
push
jle
sbb
sti
inc
mov
sub
xchg
or
cmp
test
push
fisubl
and
xchg
aas
cmpb
fldenv
pop
clc
jmp
ljmp
bound
mov
mov
psubq
and
lods
pop
dec
mov
ja
mov
add
adc
pop
repnz
popa
call
js
enter
jmp
adc
dec
lock
cmp
jae
mov
pop
push
xor
and
push
fisubrs
jns
jle
enter
cltd
pop
aaa
mov
cmc
das
and
movsb
xchg
das
xchg
pop
push
inc
sbb
jno
dec
fistpl
lea
inc
inc
vmovups
add
adc
std
dec
xchg
stc
aas
cltd
mov
mov
push
and
pop
movsl
lret
test
fcmovnu
jb
fnstenv
adc
movsl
mov
roll
pop
lahf
dec
rcr
sbb
and
mov
aaa
mov
int3
inc
or
adc
imul
push
out
or
lock
dec
leave
ss
xlat
adc
xchg
mov
sub
subb
dec
test
sub
mov
push
pop
testb
aad
pop
lock
pop
mov
xchg
adc
inc
jbe
push
add
sub
gs
fildl
stos
sahf
cli
bound
arpl
jae
adc
ror
xor
popf
gs
push
bound
add
push
dec
mov
hlt
mov
xor
out
fwait
popa
jno
icebp
mov
mov
mov
loop,pt
out
push
daa
push
repnz
inc
dec
mov
cli
lods
stos
xor
and
push
ret
roll
jae
and
je
add
out
sar
mov
cmp
add
fiaddl
mov
sub
mov
xor
or
cs
movl
push
in
jecxz
test
cmp
mov
cmpsl
or
cmp
mov
lods
add
cvtps2pi
les
and
dec
xchg
jp
loope
mov
in
addl
xor
inc
stc
sbb
aam
mov
jecxz
stc
imul
sbb
leave
repnz
jnp
or
cmpsl
push
lret
adc
popf
rol
cmp
cwtl
jbe
in
push
inc
mov
pop
jae
push
outsl
in
mov
xor
icebp
push
xchg
jae
stc
jns
mov
mov
mov
jecxz
mov
ret
enter
mov
gs
imul
decb
popf
mov
jnp
imul
xchg
mov
imul
sub
in
popa
add
inc
lret
add
data16
push
cs
in
xorb
and
push
clc
mov
mov
push
or
mov
adc
outsl
outsl
jp
add
divb
cltd
test
cmp
dec
call
mov
jae
pop
cmp
or
jecxz
sub
test
cltd
sub
mov
icebp
pushf
fwait
push
inc
lret
mov
int
push
dec
push
in
jno
xor
inc
leave
repnz
push
sbb
pop
sub
cmc
adc
ret
cltd
repnz
test
push
mov
or
outsl
push
push
pop
xchg
clc
call
mov
in
test
cmp
jp
inc
nop
leave
dec
inc
xchg
mov
ret
sbb
mov
xchg
andl
clc
sub
out
addr16
popa
bound
push
ja
jle
mov
test
in
or
push
xor
add
add
rcr
xchg
bound
scas
or
jbe
lea
outsl
dec
sub
in
cmp
mov
fisubs
inc
inc
daa
xchg
dec
mov
test
push
push
mov
inc
mov
add
xlat
add
movl
jmp
pop
add
in
add
or
xchg
add
lods
fwait
push
jnp
jnp
mov
mov
push
lods
adc
stc
fdivs
push
ds
je
jbe
lahf
pop
mov
mov
jo
push
add
jl
xchg
jae
mov
jns
mov
adc
and
dec
mov
into
fildl
sub
mov
es
sub
pop
sahf
add
mov
test
ret
call
out
fcmovbe
out
pop
cltd
fisttps
fimuls
jle
and
sbb
insb
rol
xchg
rclb
adcb
mov
fadds
or
gs
jne
and
sbbl
xor
mov
clc
roll
mov
out
mov
jmp
nop
dec
dec
push
pop
je
and
shl
inc
jp
mov
std
fstpt
add
cmpsl
push
das
xor
das
stos
sbb
std
popa
cs
fstpt
mull
mov
dec
in
loopne
cmpsl
fcoms
fnsave
and
popa
das
mov
inc
pop
jecxz
cmp
adc
fmul
mov
aaa
sub
pop
stc
jo
addr16
push
sbb
pop
enter
je
popf
lahf
pop
lret
in
mov
add
inc
push
dec
dec
leave
lret
push
lret
or
adc
jl
fucom
jnp
cmp
or
sbb
cmc
mov
adc
addb
ss
mov
shll
cmp
jmp
mov
inc
push
mov
popa
and
mov
add
adc
xchg
movsb
adc
ss
call
dec
sahf
add
in
add
xchg
test
mov
mov
adc
inc
addb
lock
and
icebp
mov
hlt
xchg
pushf
popf
jbe
cmpsl
rcr
cwtl
xchg
ja
fbstp
sub
inc
dec
xlat
add
mov
les
lock
stc
cwtl
inc
mov
popa
mov
lret
icebp
sub
fldl
xchg
gs
push
daa
mov
imul
clc
mov
outsl
mov
cmp
adc
mov
jne
jbe
sbb
fwait
ret
sub
in
shr
xor
int3
inc
fldcw
ret
loopne
pop
popa
push
mov
int
adc
sub
cmpsl
lret
cmp
adc
hlt
pop
in
inc
sbbb
inc
cmc
jne
lock
ja
pop
pop
jnp
inc
xorl
in
dec
adc
sub
cmp
js
push
and
jno
cmpb
das
fstpl
cmpsb
dec
js
imul
imul
add
xor
pop
rclb
fldenv
in
std
or
push
cmp
and
xor
and
lret
push
jne
xchg
add
mov
cmp
cmp
pop
sbb
pop
push
mov
and
aad
add
je
aam
dec
shll
mov
out
inc
adc
sub
popa
xor
mov
cwtl
adc
es
inc
mov
mov
or
ret
pop
push
jnp
push
cli
pushf
xchg
nop
movsl
pop
pop
adcl
push
inc
ss
adc
stos
push
push
pop
shll
mov
ficoms
hlt
sub
idivl
push
loopne
pop
outsb
rorb
adc
mov
aaa
add
mov
and
hlt
jge
in
cmp
insb
push
jg
pop
fld
dec
xchg
push
push
or
xor
push
sbb
jnp
outsl
into
pushf
fdivrs
es
adc
jbe
sub
push
divl
mulb
or
fwait
sbb
mov
xchg
add
sti
pop
dec
stc
mov
sub
adc
imul
push
arpl
not
aam
insb
inc
test
loop
jb
ss
movsl
adc
and
inc
stos
insl
xchg
jnp
nop
fimuls
cmpb
or
pop
cmp
jl
add
das
pop
sbb
fisubs
inc
xchg
mov
push
push
xor
inc
movsl
and
or
sub
ret
xor
and
dec
mov
mov
stos
ja
lods
pop
jle
jb
outsb
pop
gs
loopne
jo
test
fadds
lea
pop
cli
xor
sub
cs
add
sub
dec
jl
adc
flds
sub
add
clc
adc
out
add
mov
je
mov
mov
movsb
cltd
out
xor
mov
inc
add
test
adc
jnp
sbb
push
clc
xchg
aad
scas
outsb
insl
sbb
push
mov
push
sbb
icebp
xchg
or
in
push
cltd
jl
mov
mov
adc
fiaddl
into
bound
pop
adc
mov
lcall
lea
push
jle
xor
or
loope
jbe
sub
xlat
pop
gs
loop
sbb
cmc
hlt
inc
adc
enter
andb
adc
pop
mov
pop
mov
pop
mov
mov
inc
mov
outsb
pop
loop
adc
lret
std
add
and
pop
loope
push
and
mov
jnp
mov
adcb
and
and
insb
mov
pop
push
xor
icebp
lret
push
js
lret
xchg
add
xor
mov
sub
leave
out
in
mov
xor
outsl
pusha
lcall
and
mov
pop
std
mov
jbe
push
js
lods
fsts
cmp
mov
mov
mov
push
iret
and
xchg
hlt
adc
gs
dec
jns
mov
into
jmp
cmpsb
fwait
mov
mov
jnp
jbe
test
jecxz
repnz
xorl
mov
es
outsl
cmpsb
test
addr16
adc
pop
pusha
loopne
xor
dec
fadds
adc
push
je
jmp
pop
xchg
mov
insl
dec
push
cmp
pop
xchg
or
test
mov
add
pop
stos
subl
pop
or
pop
dec
mov
cmp
popa
lret
shlb
xchg
pop
dec
fildl
xchg
cmpsb
test
mov
adc
ret
fmulp
js
mov
aaa
push
inc
mov
int3
js
mov
mov
ja
adcb
push
arpl
out
and
or
add
or
xchg
out
jae
add
xchg
shl
out
lret
xchg
test
jl
lods
test
mov
cld
add
lods
ja
test
xor
cmp
pop
fisubl
mov
xorl
jge
mov
add
int3
test
mov
data16
xchg
les
pop
and
mov
mov
test
jecxz
test
ror
mov
out
aam
outsb
mov
mov
or
push
insl
loop
xorb
ss
xchg
pop
test
orb
mov
sarl
or
das
es
push
test
fadds
lods
imul
jg
std
fcoml
mov
pop
jbe
inc
sbb
repz
orl
sar
enter
nop
stc
mov
arpl
shll
aas
into
shll
cmp
push
or
ja
xor
sbb
lret
lret
lcall
or
mov
pop
aam
dec
jbe
loop
lcall
cmp
dec
sbb
cmp
cmp
insl
imul
cmpsl
aas
jge
loopne
js
xchg
mov
cmpsl
sub
pop
sbb
rclb
or
mov
and
dec
mov
mov
ds
shll
scas
cmpsb
xchg
shlb
or
xchg
insb
ja
imul
lds
les
stos
out
insb
andl
jge
sbbl
cmpl
push
lret
mov
sub
sub
ss
cmpb
clc
lcall
jge
jnp
stc
fwait
mov
cmp
dec
enter
fsubl
lods
jno
pop
ret
mov
data16
cs
mov
mov
adc
stc
push
sub
stos
inc
je
inc
mov
int3
jae
idivb
jmp
cs
aad
pop
xor
stc
xor
pop
inc
xlat
adc
mov
xchg
jns
rcll
lret
pop
xchg
loopne
xlat
push
mov
iret
and
sub
or
fbld
shrl
push
lods
ficoml
mov
out
cmp
fidivl
sbb
js
mov
xchg
fidivrl
out
inc
xlat
in
nop
out
cmp
iret
lds
push
lds
sub
push
lahf
lock
ret
cmp
cltd
out
imul
jae
push
push
sub
jo,pn
lea
push
es
jl
bound
mov
xchg
sub
adc
cmp
cmp
jg
mov
out
xchg
pop
or
dec
lahf
addr16
int
mov
andb
pop
inc
mov
das
mov
adc
dec
popa
fiaddl
ljmp
jae
movsb
push
jmp
push
mov
rolb
xchg
add
cmp
inc
adc
sbb
hlt
pop
in
push
cltd
adc
xchg
xchg
inc
test
daa
xor
xchg
sbb
xchg
cltd
xchg
test
notb
test
outsl
sbb
adc
inc
pop
hlt
inc
dec
sbb
sub
sbb
addr16
es
pop
ljmp
fldt
adc
cwtl
fstps
cmpsb
fbstp
ret
xor
cli
fwait
inc
or
xchg
jne
loopne
mov
mov
inc
aam
popf
push
xchg
adc
stos
mov
push
arpl
aam
stos
add
outsl
cmpsl
mov
popf
cwtl
ficomps
iret
lea
mov
dec
jl
stos
sahf
mov
pop
shl
aas
push
daa
mov
push
loopne
sbb
jmp
fwait
or
mov
dec
inc
aam
add
mov
fnstenv
adc
lds
leave
and
mov
mov
sbb
xchg
mov
add
pop
es
or
dec
insl
push
decb
pop
rclb
fstps
pusha
pop
loope
into
mov
push
sbb
mov
adc
push
xlat
sbb
pusha
test
adc
loopne
push
dec
pop
test
cmp
xlat
sub
mov
cmp
out
rorb
out
ret
lock
dec
lret
in
pop
inc
mov
sub
mov
or
orl
loope
or
imull
pop
push
lahf
jne
push
pop
cmpl
push
add
mov
xchg
xor
dec
add
test
mov
cmpl
add
jno
cmp
insl
scas
out
mov
insl
pop
add
and
xor
push
movsb
dec
mov
add
and
and
dec
and
outsb
xlat
mov
sbb
inc
aas
jnp
jno
inc
shlb
pop
cmpsl
pop
out
jmp
adc
pop
int3
xchg
dec
sub
fstpl
aas
sub
outsb
xor
out
ljmp
pop
cwtl
test
xchg
mov
orb
fisubrl
dec
or
iret
pusha
gs
cmp
outsb
les
push
xchg
lcall
push
pop
jmp
or
enter
popf
fs
jb
arpl
mov
inc
add
dec
in
test
xchg
test
call
mov
sub
aam
pop
cmp
jecxz
sahf
lret
xor
xlat
iret
sbb
call
dec
pop
mov
mov
or
stc
and
das
aaa
inc
pushf
std
loop
test
adc
aad
sub
mov
in
adc
out
lock
test
cs
incl
jb
push
jg
stos
and
jae
fistpl
xchg
sub
lret
ja
lret
and
add
aad
add
pop
das
cmc
loopne
mov
cmpsb
mulb
std
imul
lds
cwtl
xchg
insb
sbb
mov
cmp
iret
cmp
xor
jmp
sbbb
lret
outsl
lea
stos
xor
aas
push
pop
inc
test
mov
xor
sub
fwait
sub
popa
push
jbe
push
pop
or
data16
fidivrs
pop
int3
jae
and
repz
cmp
inc
fldpi
cmpsb
scas
lret
pop
jmp
fstpt
xor
aaa
cwtl
xor
hlt
inc
fidivs
cmp
fiaddl
ljmp
xor
jl
push
jle
inc
jge
sub
dec
out
inc
pop
jmp
inc
jle
xlat
es
and
mov
xchg
movsb
loope
dec
mov
imulb
add
imul
aas
stos
xchg
jne
or
mov
pop
cwtl
loopne
push
push
neg
lret
mov
mov
cmp
cmc
push
push
fisttps
shll
fsub
push
in
jns
cmp
sbb
mov
or
jo
shr
jb
cli
xor
fists
mov
cmc
jno
mov
in
dec
lods
mov
ret
adc
cmp
sub
neg
sub
xor
push
mov
pop
repz
aaa
outsb
jbe
scas
mov
and
mov
lds
mov
jns
push
insb
out
dec
mov
dec
aaa
cmpsl
outsb
jmp
dec
mov
pop
push
test
faddl
mov
rolb
sub
xor
lods
inc
int
faddl
pop
mov
sbb
je
dec
loop
adc
repz
iret
cmc
ljmp
add
push
orb
cld
push
pop
int3
je
call
sub
mov
pop
enter
xor
sarl
push
cmp
je,pn
ja
push
lret
jne
or
push
and
notb
testl
add
push
push
sarl
fwait
cwtl
js
and
orb
add
pop
fmuls
inc
pushf
push
mov
push
inc
dec
xor
mov
stos
sti
outsb
xor
mov
pop
jo
mov
dec
xor
and
pop
xor
cwtl
popa
sbb
sbb
test
sub
push
int
test
mov
aas
in
insb
mov
push
enter
add
cmp
mov
jne
addl
push
push
out
sub
and
lds
fistl
sub
insb
xor
inc
adc
xor
ror
lods
adc
in
outsb
xor
lcall
push
jbe
movsl
inc
sub
inc
sub
xchg
mov
nop
in
mov
mov
loopne
test
cltd
pop
sub
push
outsb
pop
pushf
cmp
xor
mov
cmp
adc
daa
subl
pop
xchg
sub
pusha
or
cmc
push
repz
cmp
adc
pop
aad
xor
cmp
in
jg
popa
ret
push
cmp
data16
aad
or
jge
pop
sarl
mov
inc
movb
in
cld
inc
inc
lahf
push
sahf
sbb
push
and
imul
scas
lds
xorb
mov
push
aas
popa
pop
loope
mov
movsb
xor
fcmovnu
bnd
scas
pop
xor
rorl
popa
xchg
fildll
inc
inc
jmp
dec
push
insb
ljmp
xor
mov
inc
add
out
out
or
adc
lea
inc
sub
and
lcall
cmpsb
or
aam
push
adc
or
arpl
rolb
xlat
xor
addr16
xor
mov
jbe
pop
clc
sbb
nop
negb
imul
jne
addr16
xchg
pop
jne
mov
lods
nop
outsb
jmp
pop
sub
sti
repnz
sub
cmpl
mov
cwtl
in
cltd
std
in
pop
ljmp
or
fisttps
mov
jge
pop
sbb
int
cmp
xor
inc
mov
push
cltd
xor
lcall
jno
imul
cmp
jne
add
stc
popa
pop
sti
jae
roll
mov
les
lea
and
loop
xchg
inc
sbb
cmpsb
lds
mov
inc
mov
cmp
inc
sar
hlt
push
fsubs
xor
movsb
jnp
in
es
push
pop
push
aad
inc
ljmp
lods
xchg
jecxz
jae
data16
and
mov
es
das
cmp
add
sbb
adc
sbb
or
mov
mov
mov
shl
and
repnz
rcr
aas
add
jmp
out
mov
sub
dec
enter
or
andb
jecxz
and
adc
cld
shl
or
xor
xlat
sub
je
roll
mov
inc
xor
out
jmp
mov
lds
lods
std
in
imul
jnp
enter
fdivrp
enter
cli
call
mov
aam
push
fnsave
lods
in
les
popf
push
std
mov
jbe
rorb
or
sbb
xlat
mov
insl
xchg
inc
in
push
sub
stos
jge
xor
scas
mov
mov
movsb
fisubrs
stos
sub
ss
ret
add
int3
dec
mov
lret
pusha
lods
arpl
mov
rcrb
lea
fimull
sahf
stos
jne
jbe
jne
iret
cwtl
int
inc
ds
dec
and
insl
or
mov
mov
pop
fstpl
lods
sbb
cmp
lds
xchg
push
shrl
data16
jp
push
and
scas
or
jge
mov
jecxz
arpl
push
and
mov
out
mov
sbb
int3
insl
lods
dec
fs
sub
les
or
sub
rcrl
xchg
push
out
std
adc
or
dec
mov
inc
mov
dec
cmpsl
cmpsl
outsl
ljmp
test
cli
and
ret
xchg
mov
dec
push
pop
insl
lods
leave
cmp
ss
xchg
mov
mov
ficoms
js
xor
dec
sarb
popf
stos
shrl
das
add
mov
sbb
adc
xchg
adc
mov
sub
pop
and
aaa
xchg
jns
inc
cs
mov
cmp
mov
ljmp
mov
aam
xor
std
push
movsb
or
cmp
rorb
xlat
fldl
in
cmp
xchg
mov
scas
mov
pop
pop
test
push
lock
jg
ja
stc
push
popa
add
stos
jnp
jnp,pt
jge
lcall
and
mov
aas
mov
push
sarl
cmpsl
in
cmpsl
dec
xchg
sbb
xchg
div
mov
dec
addr16
ret
and
fstpt
pusha
test
jl
lret
xchg
cmpsl
dec
xchg
enter
add
mov
hlt
ficoml
lret
ror
pop
fmull
mov
cld
enter
dec
pop
mov
mov
sbb
loope
std
mov
jne
mov
roll
dec
inc
test
out
lods
cmp
push
sbb
daa
int3
es
icebp
dec
pop
xor
movl
push
and
lret
daa
jnp
div
imul
lret
dec
cmp
out
inc
sbb
fwait
jmp
mov
pop
inc
jns
adc
repz
pop
sub
or
cmpsl
std
lock
add
adc
filds
add
les
enter
add
push
das
pop
inc
in
mov
mov
inc
testb
xchg
xchg
or
sub
add
add
mov
pop
mov
push
xor
call
xchg
incb
inc
or
lock
or
aaa
int3
out
jo
dec
out
xor
jecxz
xlat
mov
inc
mov
aam
xchg
adc
and
cmp
pop
and
jecxz
push
and
std
sub
das
adc
movsb
inc
pop
je
adc
daa
mov
inc
insb
pop
lcall
sub
mov
mov
sub
mov
pop
scas
sub
xor
dec
aaa
leave
add
mov
cli
pusha
fucom
popf
dec
or
lods
jae
lock
mov
jmp
push
jp
leave
mov
lcall
xchg
add
and
ljmp
sub
sti
jbe
popa
push
sub
repnz
or
stos
in
jecxz
push
hlt
sahf
frstor
shlb
ficoms
adc
les
mov
push
add
pushf
pop
mov
stc
cmp
xchg
testb
scas
or
sbb
movsb
shll
sub
push
cli
lret
fisubrl
mov
pop
fwait
mov
jne
movsl
bound
mov
xor
repnz
aam
push
mov
sub
dec
fisttpll
in
xchg
out
subl
mov
popf
and
adc
mov
jae
in
adc
cmc
inc
dec
lods
mov
pop
mov
cli
inc
pop
sbb
ljmp
fisttpl
ss
loop
lret
cltd
rcl
add
dec
mov
dec
push
mov
xor
outsl
fs
popa
rorb
push
cld
push
repz
cmp
mov
jnp
aas
mov
mov
pop
adc
test
cld
loope
or
test
pop
mov
or
movsb
inc
setno
imul
pusha
out
mov
pop
lds
dec
mov
js
inc
lcall
into
fiadds
mov
idivb
int3
mov
xchg
dec
sbb
push
data16
push
ret
sbb
cmc
jle
shlb
jecxz
test
nop
loop
mov
mov
jle
xchg
cmpb
or
sub
fiadds
add
lock
mov
imul
mov
mov
and
jns
lods
adc
or
jb
mov
andb
mov
cmp
fstpl
imul
mov
sub
ss
fs
notl
add
ja
mov
enter
push
jg
mov
loopne
dec
inc
call
sub
aam
call
icebp
outsb
and
es
les
fs
int3
outsl
xchg
xchg
jecxz
aad
nop
mov
je
shll
xchg
sti
ficompl
lret
cmc
jns
inc
notl
mov
or
shll
push
aad
sub
inc
imul
mov
mov
inc
sub
mov
sub
lret
pop
fucomip
jp
cmp
cmp
daa
sbbl
fildll
data16
scas
cmp
add
aam
cs
pushf
or
cmp
cmp
loop
lret
or
lahf
in
sub
fisttpl
decb
rclb
add
jge
ficompl
sub
scas
pop
popa
mov
push
xor
mov
pop
vmovupd
outsb
testb
or
inc
pop
xlat
into
add
mov
ret
stc
push
mov
cmc
shll
mov
mov
imul
jle
or
stc
fdivrp
push
enter
xchg
pop
aad
mov
imul
jb
sti
or
scas
jo
inc
fistps
xlat
lret
in
pop
aad
adc
xor
int
hlt
mov
lods
ret
into
jg
cmpb
add
mov
inc
add
or
popf
arpl
popw
cmpb
mov
loope
dec
mov
add
lea
mov
cmp
sbb
mov
adc
sub
lret
push
shr
fdivs
sbb
pop
mov
lds
addr16
sbb
pop
mov
jmp
push
add
jl
mov
cmp
cld
cmp
jecxz
cmpsb
inc
push
xchg
rol
mov
scas
test
stos
loope
adc
cmp
or
ficomps
movsl
imul
xchg
fwait
mov
sahf
lds
mov
cmp
or
inc
xchg
mov
dec
sub
les
popf
pop
je
sub
or
xchg
cmpsl
cli
mov
ljmp
mov
int3
dec
data16
mov
jae
pop
push
ds
movsb
cmp
jmp
mov
in
out
fistpll
xchg
fistpll
syscall
ss
or
inc
addr16
inc
pop
sbb
pop
popf
adc
and
cmp
bound
mov
imul
test
rcrl
out
testb
dec
cmp
mov
arpl
into
dec
test
pop
das
jle
xlat
xchg
fdivrs
mov
sarb
dec
jno
push
push
cmpsl
imul
stos
aaa
inc
sti
xchg
jmp
call
jnp
loop
cwtl
inc
add
fmull
mov
jae
mov
pop
xor
sti
and
nop
lods
stos
xlat
lea
inc
fbld
cmp
push
dec
add
mov
mov
xor
call
cmp
add
xor
imul
inc
xchg
pop
mov
mov
push
fnsave
sub
cmp
and
or
pop
adc
test
push
and
mov
call
enter
lcall
pop
cmp
inc
push
xor
in
out
test
jp
in
jns
lock
pop
loop
je
jae
xor
in
leave
pop
shl
mov
cmp
test
dec
push
test
or
sbb
pop
stc
pop
inc
pop
je
ds
sbb
ret
daa
iret
mov
fcompl
or
push
jp
jge
xchg
hlt
test
insb
jo
xchg
jo
pop
fidivrs
mov
aaa
xor
mov
std
insb
iret
xchg
hlt
jne
ficompl
push
popf
stos
sti
or
adc
or
inc
sub
cmp
push
dec
in
push
pavgw
xchg
push
jecxz
arpl
lcall
stc
movsl
idivb
sub
xor
scas
and
dec
cmp
out
out
filds
jb
not
bound
inc
outsb
or
loopew
and
jne
sbb
pop
jg
stos
mov
movsb
aaa
cmpsl
les
mov
xor
mov
sub
movl
xchg
jne
adc
pop
pop
mov
jnp
lods
jl
or
cmpl
stos
lret
mov
cmpsb
push
sbb
aam
xchg
ljmp
movsb
sbbb
rcrl
pop
jge
daa
adc
out
inc
fcompl
les
pop
ss
push
lret
pop
inc
lea
mov
lds
shrb
mov
fadd
aaa
mov
sub
sbb
add
adcb
mov
and
cld
xchg
jno
js
mov
inc
mov
xor
mov
shr
arpl
test
das
dec
cmp
sarl
adc
in
pushf
outsb
mov
lods
popa
pop
js
movsb
daa
aad
dec
out
ja,pn
pop
inc
inc
dec
mov
aad
inc
dec
test
mov
lret
sub
arpl
out
dec
or
and
mov
mov
iret
xchg
jno
fwait
icebp
dec
pusha
int
mov
stc
repnz
xor
dec
ret
sub
in
test
xchg
add
fimuls
mov
fildll
sbb
les
sbb
mov
push
stos
sub
pop
push
andl
test
mov
sub
in
add
in
inc
xor
mov
hlt
jne
adc
loope
dec
stos
and
shrb
dec
repz
iret
cld
sarb
pop
xchg
mov
out
mov
imul
aad
outsb
mov
mov
sbb
jecxz
popa
lret
sbb
daa
and
out
add
inc
mov
sarb
adc
push
xchg
lock
aaa
incl
sti
dec
ret
inc
cltd
adcl
fbld
or
pop
imul
cli
xor
or
cmpsl
in
sub
mov
fildll
movsl
test
outsb
sti
jbe
loop
push
pop
fisubs
push
rolb
adc
test
push
pop
out
outsb
push
mov
testb
loope
push
add
leave
addr16
mov
aad
iret
fcompl
or
pop
jb
ljmp
inc
mov
repnz
data16
mov
repz
mov
stos
cmp
data16
mov
pop
add
push
or
fisubl
adc
or
outsl
clc
pop
sbb
mov
mov
or
movsl
lahf
iret
icebp
stos
sbb
cmp
test
fistl
mov
pop
add
xor
popa
mov
sbb
hlt
xchg
cltd
xchg
mov
xchg
jge
fistpll
enter
sbb
mov
out
pop
cmp
movsb
mov
ds
dec
addr16
xchg
inc
jle
stos
ss
add
and
in
mov
clc
sub
gs
xchg
cld
enter
mov
push
push
lds
lods
add
adc
and
enter
cmpsl
pop
fisttpll
mov
pop
cmp
shll
int3
push
in
iret
mov
dec
mov
push
xchg
jg
jge
repz
int
shrl
or
ljmp
xchg
loopne
mov
adc
xchg
inc
scas
pop
add
mov
mov
push
pushf
and
sbb
jecxz
loopne
adc
shlb
jbe
dec
lods
add
cltd
jge
sbb
and
std
adc
arpl
pop
sbb
lret
jb
dec
pop
imul
cld
jns
insb
ror
imul
repz
sub
rcl
jnp
push
shl
icebp
cmpsb
add
sub
lods
fsubrp
sbb
xchg
push
lock
filds
dec
sbb
ds
cmp
popa
aad
lods
into
sbb
pop
sub
sbb
sbb
mov
in
mov
pop
mov
or
movsl
ljmp
mov
aas
xor
add
jp
imul
jne
addb
mov
push
jge
in
sub
jnp
rcll
dec
xor
rclb
or
inc
push
mov
cmc
lahf
add
mov
jmp
push
push
jns
sbb
fwait
sbb
mov
sub
bound
pop
xorb
in
or
or
lret
idivb
enter
test
sbb
mov
mov
stos
arpl
xchg
dec
sbb
scas
and
or
insl
mov
mov
mov
fcmovb
loopne
stos
xchg
ffree
in
xchg
mov
mov
mov
rcrl
lock
movsb
inc
dec
lock
or
pushf
test
add
add
outsl
jae
inc
jo
jge
test
xchg
xchg
in
andl
rorb
scas
aad
xchg
in
add
rclb
adc
sub
push
repz
cmp
or
pop
ret
lcall
je
sub
int3
sub
fsubs
and
les
sub
mov
cld
mov
xchg
mov
repnz
pop
outsl
ret
aaa
int
and
dec
jbe
popa
addb
push
jl
int3
push
in
outsl
sbb
in
inc
jl
cmc
mov
jg
jbe
stos
shlb
loope
or
into
mov
mov
insl
jmp
inc
push
adc
dec
and
inc
out
and
hlt
test
mov
test
cmp
aam
jb
inc
jge
repz
test
sub
das
ljmp
pushf
ds
dec
shlb
jne
jo
add
sbb
pop
cli
adc
xchg
out
in
and
mov
jp
fwait
stc
dec
fldt
pop
and
jo
shll
ret
jecxz
mov
push
sub
pop
cmc
fucomp
pop
mov
arpl
addr16
sbb
xchg
inc
fldenv
mov
cmp
scas
insb
cld
jmp
push
ljmp
jne
cmpsl
push
pop
push
rcrb
xor
roll
mov
push
sub
int
mov
inc
or
xchg
lahf
or
sbbl
pusha
push
adc
jl
push
pop
pop
xchg
lahf
pop
wrmsr
stos
sbb
shl
cmp
or
or
fsubr
or
scas
fyl2x
xor
lret
outsb
or
leave
jno
pop
pop
lret
jp
jns
and
shlb
xor
jo
mov
sbb
lods
mov
frstor
out
std
cld
mov
test
int
xor
sbb
mull
mov
mov
int3
adc
popf
data16
mov
in
insb
push
push
repnz
cmp
arpl
in
sbb
xchg
jno
ja
push
xor
push
sbb
in
lods
sub
mov
or
inc
jmp
mulb
cmp
or
in
fidivrl
sbb
aaa
in
push
pop
loop
lahf
sbb
xchg
cltd
pop
mov
outsb
jns
or
push
repz
adc
negb
mov
jo
shl
in
ljmp
inc
push
xchg
adc
enter
roll
outsl
sub
mov
and
int3
and
mov
and
inc
fstpt
std
stos
leave
out
pop
pushf
add
aas
jg
out
loop
int3
je
jne
lea
jl
mov
dec
ss
cmp
jmp
rcrb
add
fcmovb
adc
jmp
pushf
pop
xchg
out
xor
jno
jl
inc
fwait
sbb
ret
rol
inc
jp
pop
out
outsb
repz
xchg
sti
aas
jae
stos
push
add
push
jl,pn
inc
jae
lahf
xchg
pop
mov
mov
lcall
subb
inc
mov
jae
cli
lds
adc
fisubrs
push
jle
lret
sbb
jg
enter
in
mov
cmp
dec
dec
xor
rcl
lods
xor
lock
push
or
push
sbb
imull
iret
dec
sbb
pop
pop
add
sub
in
leave
lahf
cmp
mov
test
insl
mov
aad
fimuls
movsl
adc
int3
sbb
scas
ds
pop
pop
adc
pop
pushf
jo
shl
lahf
sar
mov
rcl
xchg
push
cmp
mov
xor
jge
or
cmc
inc
mov
rcrl
sbbb
lods
stos
and
call
int
jl
jmp
sarl
idiv
pop
mov
mov
mov
js
xchg
jne
mov
scas
jge
ret
jl
or
scas
pop
xor
push
mov
decb
cmp
outsl
dec
jo
dec
test
or
fbstp
dec
jg
mov
inc
popa
pushw
push
mov
cltd
out
imul
stos
fs
sbb
fsubl
sub
or
inc
incl
add
stos
mov
inc
leave
js
or
cmpsb
sub
gs
fxch
mov
push
fwait
jle
sar
or
jae
loope
aaa
enter
scas
xchg
insb
gs
nop
iret
inc
sbb
mov
xchg
xchg
xor
xchg
lea
pop
out
imul
xor
data16
and
adc
cmpsb
arpl
push
imul
jle
inc
lods
adc
aam
icebp
or
shl
mov
mov
in
xlat
enter
mov
sub
pop
mov
fstl
jnp
or
or
out
lods
in
test
andnps
sbb
mov
in
mov
ret
test
int3
lods
adc
negb
xchg
push
popf
jnp
aam
mov
or
jne
arpl
inc
adc
mov
hlt
push
call
arpl
loopne
mov
ret
mov
mov
push
jae
mov
pop
dec
xor
mov
push
popa
sti
jo
clc
mov
xchg
insb
pop
ret
imull
sub
sbb
std
aaa
pop
xchg
inc
ret
and
gs
push
js
out
movsl
add
mov
adc
xor
pushf
cmp
pop
dec
sub
sti
lds
hlt
pop
out
sbb
and
nop
push
mov
mov
jmp
mov
hlt
addr16
shrl
sub
clc
sub
cltd
cltd
pop
mov
xchg
push
dec
jg
cmp
repz
roll
icebp
je
maskmovq
negl
outsl
cmpsl
cmp
std
cmp
rorl
inc
mov
movsl
jp
in
mov
dec
pop
jl
adc
into
lea
clc
dec
div
outsb
inc
pop
cmp
test
add
pusha
jae
outsb
inc
js
fidivrl
cmpsl
daa
jne
push
jle
xorb
mov
es
cltd
or
inc
out
or
sbb
xor
jmp
add
arpl
out
inc
or
xchg
mov
fwait
aas
inc
in
icebp
mov
jo
daa
mov
mov
xchg
and
das
dec
mov
mov
jecxz
mov
in
scas
mov
mov
aam
cmp
pop
jnp
jo
xchg
shl
das
mov
jne
outsl
adc
fs
stc
fstp
cmp
pusha
ja
test
cmp
sub
sbb
pop
adc
pop
jno
jnp
dec
les
cs
scas
mov
out
jae
scas
pop
xchg
adc
sub
cld
xor
push
and
adcl
sbb
mov
mov
mov
out
iret
insl
pop
in
rcll
stos
lods
mov
out
jnp
insl
push
dec
loopne
or
ret
push
mov
call
xor
mov
setbe
movsb
xor
jg
popa
arpl
pop
imul
mov
call
outsb
les
cmpsl
cmp
mov
xor
push
out
push
xor
dec
leave
mov
rorl
mov
and
insl
cmp
lcall
add
dec
int
repnz
fidivl
dec
mov
fistpl
dec
add
mulb
mov
xchg
cmp
inc
ret
xchg
rol
cs
lds
stos
ljmp
dec
mov
lcall
loope
sub
and
aaa
xor
out
rolb
in
sub
cmpsb
std
lahf
and
or
daa
dec
leave
cmp
lahf
adc
bound
xchg
repz
popa
in
ss
or
xchg
sahf
xor
pop
cmpsl
out
push
mov
fstpt
mov
loope
clc
push
adc
and
dec
xchg
push
loope
push
xchg
mov
cmp
push
jecxz
xor
jecxz
and
int3
adc
and
lods
pop
jns
mov
xchg
sub
pushf
push
sub
lcall
pop
jb
cmp
pop
into
push
test
bsr
or
repnz
and
fsubrl
pop
adc
shrb
pop
int
stos
enter
or
push
popa
div
mov
mov
inc
stos
push
cli
sbb
fisubl
mov
mov
mov
cltd
xchg
xor
sbb
and
rol
push
stc
lret
mov
cld
adc
loopne
jnp
mov
andb
jmp
adc
jmp
jae
push
jb
cmp
jle
sub
dec
cmpsl
sbb
lret
or
pop
dec
jge
inc
cld
sbb
rcrb
fisubl
mov
sysenter
outsl
ss
dec
xorl
hlt
pop
push
dec
inc
inc
or
and
lret
pop
inc
mov
es
jecxz
mov
aaa
pop
sarl
shlb
mov
stos
outsl
in
sbb
xor
mov
shl
or
mov
ds
pop
in
ljmp
jecxz
arpl
addr16
xchg
lret
pop
pushf
outsb
das
adc
in
int3
sbb
mov
in
and
into
jns
std
jo
movsl
jecxz
aaa
xchg
xchg
pushf
rorl
lahf
push
add
nop
fdivs
sub
xchg
out
cli
shll
stc
mov
mov
push
clc
inc
sub
stc
push
dec
imul
nop
sub
cmp
test
dec
mov
cmp
mov
lods
xadd
pushf
andl
jo
jno
and
aam
sbb
ret
pop
mov
negb
dec
dec
or
leave
sub
or
sahf
in
jg
jae
lds
and
mov
enter
or
adc
or
iret
jg
cwtl
sbb
jmp
lods
aam
aad
jmp
sahf
jno
enter
push
pop
mov
cmc
dec
xor
gs
mov
xchg
push
and
cmpsb
sub
xor
ret
aas
inc
jg
inc
pusha
xor
and
xchg
mov
fsubrs
or
push
dec
xor
xlat
cmc
loopne
out
btc
in
adc
and
notl
lock
popa
out
add
in
pop
cmpsb
scas
scas
std
lret
xor
in
push
jge
pop
icebp
dec
out
lods
adc
push
xchg
push
sub
icebp
push
xor
sub
sbb
dec
rorb
nop
or
fistps
scas
jo
sbb
cmp
or
loope
fsts
adc
cmpsl
dec
out
or
frstor
mov
stos
push
sahf
inc
cli
mov
pop
mov
jbe
mov
push
xchg
dec
ret
outsb
fsub
aam
mov
inc
cmp
adc
ljmp
push
cmpsb
pop
imul
pop
in
jo
xor
add
pop
cmp
and
les
in
pop
aad
fs
cmp
sub
lods
inc
sbb
cld
inc
aam
inc
sbb
mul
les
out
cli
adc
mov
movsl
mov
mov
mov
pusha
push
out
cmc
das
sub
xor
cmp
call
repnz
inc
push
je
sub
inc
cwtl
add
scas
cli
jbe
push
push
js
mov
xor
add
lods
std
sbb
add
mov
fisttpl
ret
xchg
test
nop
sarb
dec
or
mov
in
xchg
add
mov
es
push
ret
stc
push
std
xor
and
push
dec
mov
xchg
ss
pop
cltd
mov
stc
mov
sub
cld
outsb
fwait
xchg
jae
push
cmc
int
bswap
cwtl
jns
pop
and
lcall
dec
pop
movsl
push
dec
dec
add
loope
cs
cld
loopne
in
sti
inc
sbbl
ja
lcall
ljmp
insb
xchg
lods
cmp
inc
pop
mov
jno
pop
out
mov
imul
xchg
int
adc
adc
in
cmp
sbb
xchg
jp
push
ljmp
sahf
push
jge
cmpsl
push
mov
imul
sahf
int
arpl
cwtl
pop
iret
fcmovnb
inc
ds
and
arpl
add
fstl
addr16
mov
xchg
mov
imull
out
dec
dec
in
fdivl
or
add
add
or
jns
mov
jb
dec
fdivrl
out
lods
cmpsb
sar
mov
sub
shlb
shl
and
bound
and
pop
or
adc
enter
pop
in
test
jae
ds
enter
int3
idiv
and
das
xor
stos
sahf
dec
bound
push
cmpsb
pop
aad
ljmp
xlat
inc
fwait
enter
dec
lods
cmp
mov
inc
sbb
push
jbe
cltd
pop
mov
mov
push
arpl
adc
lea
pusha
adc
fisubl
inc
lahf
fdiv
push
add
rol
test
cmpsb
mov
add
sahf
lods
je
jg
mov
dec
ret
dec
in
dec
push
mov
and
push
repnz
scas
enter
sbbl
mov
and
adc
mov
or
stos
fcoml
xlat
test
add
cmpl
sahf
insb
and
push
sub
pop
popa
sub
loope
pop
cwtl
mov
inc
jne
std
jo
mov
loope
in
daa
adc
test
ja
scas
jb
test
fmuls
dec
push
rol
xchg
lea
mov
pop
fisubs
in
mov
int3
lods
jmp
or
mov
int3
adc
loop
and
pop
xor
and
cmpsl
fadd
mov
mov
xchg
mov
orl
fptan
cmp
jge
popa
dec
or
inc
push
dec
sub
pop
lahf
lods
jb
lret
idivl
pop
sti
test
mov
xchg
jecxz
lea
mov
jae
jnp
popa
sti
jg
loop
adc
cwtl
out
pop
push
jp
inc
mov
inc
sub
sbb
add
pop
outsl
imul
and
fdivr
out
shll
xchg
and
push
int
inc
adc
or
inc
std
xchg
sub
adc
ljmp
cmp
xchg
jg
or
aaa
ret
xlat
sbbl
pop
rolb
and
jne
jne
ljmp
rolb
shrb
pop
inc
in
mov
mov
adcb
out
add
lds
aas
dec
xchg
inc
mov
cmp
in
outsb
subb
push
mul
movsl
fildl
adc
in
mov
mov
aas
add
faddl
dec
fdivl
call
add
lods
fcmovnb
loope
or
test
sbb
mov
roll
inc
mov
adc
cmpsb
cwtl
sbb
outsb
pop
lds
in
ljmp
cmp
cld
sbb
or
mov
fldcw
xor
inc
mov
test
call
jmp
xlat
subb
cmpsl
nop
jl
jbe
dec
mov
sub
mov
cmp
jns
pop
inc
pop
shrb
fdivr
or
test
add
rdpmc
xchg
data16
inc
mov
out
int3
adc
js
add
fisttpl
outsb
adc
push
fbld
mov
lret
and
adc
nop
jo
xchg
test
fidivrl
into
xchg
sbb
sbb
leave
sti
js
cmpsl
imul
ret
shrl
and
outsl
loope
movsb
jne
cmp
fcmovbe
cwtl
fisubrs
daa
sarl
dec
popf
jae
sub
movsb
aaa
inc
and
inc
sbb
in
enter
stos
aaa
cmpsl
lret
idiv
dec
lods
push
enter
add
jnp
daa
adc
scas
iret
mov
and
cli
popf
xchg
xchg
xchg
movsb
mov
pusha
cmp
push
aas
outsb
xchg
cmpsb
insb
cmp
jo
push
js
cmp
hlt
cs
pop
popl
pop
fwait
repz
aam
lret
inc
idiv
sub
pusha
pop
jmp
mov
sbb
nop
jbe
leave
sub
xor
push
xchg
sub
imul
mov
clc
cltd
hlt
dec
inc
call
or
pop
xchg
sar
bound
sbb
mov
sbb
dec
shll
cwtl
mov
mov
movsb
mov
jns
jb
mov
lea
pop
pop
fdivrs
inc
jnp
negl
add
sub
xor
jno
jg
push
pushf
dec
fsubr
shrl
out
lcall
pop
outsl
aaa
aad
push
add
bound
inc
pop
int
test
stos
jmp
cltd
aaa
mov
fidivs
sahf
mov
xchg
push
xchg
outsl
add
scas
inc
das
mov
mov
pushf
mov
inc
clc
sub
fs
sbb
and
lcall
rcrl
xor
xor
jb
pop
out
cmp
and
cwtl
js
pop
arpl
push
rol
jg
mov
adc
imul
push
jg
lret
add
dec
mov
sbb
movsl
pushf
push
jbe
or
inc
and
repnz
jmp
insl
mov
adc
mov
mov
cmpsl
pop
push
les
xor
or
pop
mov
pop
adc
jns
fmul
je
push
mov
jns
jae
aam
leave
inc
data16
hlt
inc
cmpsb
sub
add
aaa
cltd
out
jp
fistps
leave
add
jo
aas
dec
jno
and
xchg
or
jle
cld
add
fcmovbe
cmp
mov
adc
lock
or
insl
test
ss
fidivrl
loop
fldenv
setno
jns
xchg
leave
push
mov
loope
jle
push
cmp
int3
dec
push
inc
mov
std
js
mov
adc
mov
cmpsl
fisubrl
into
mov
lahf
xlat
notl
inc
jge
loopne
nop
in
scas
jae
push
in
call
sarb
push
jns
nop
mov
mov
push
pop
xchg
sbb
sub
push
enter
je
int
dec
or
push
or
cmp
add
lea
shl
pop
xor
sub
in
aam
fmull
pop
jmp
add
lods
mov
stos
adc
ljmp
lods
mov
xor
repnz
popa
xchg
lea
ss
push
dec
xor
and
in
je
dec
int
stos
lods
jmp
pop
inc
rcl
mov
ret
add
aas
sbb
daa
jecxz
xor
pop
dec
mov
lea
adc
ds
out
cwtl
inc
sub
pop
or
add
cmp
adc
and
out
pop
pop
ljmp
hlt
imul
sub
call
mov
inc
jae
inc
dec
lock
stc
cwtl
dec
js
inc
adc
lea
aad
fucomi
movsb
lea
insl
jne
pop
dec
mov
out
ds
pop
dec
cmp
lahf
outsl
stc
loopne
jmp
mov
in
test
and
aad
or
add
decb
iret
xorb
xor
cmp
data16
pop
push
in
inc
jl
xchg
aaa
and
test
mov
out
jl
sahf
ljmp
cwtl
jecxz
jns
cmp
or
in
aaa
mov
jle
repnz
mov
scas
dec
ds
idivb
and
mov
in
jae
int
cmp
xor
and
jns
mov
lock
mov
cmpsb
rcrl
sbb
add
dec
add
dec
and
cmp
popf
mov
lods
pop
sbb
lcall
mov
std
pop
sub
add
mov
cmpsb
adcb
testl
xchg
jb
dec
adc
leave
xchg
leave
pop
lret
xchg
sti
int
push
out
fcmovne
std
int3
jl
add
popf
push
lea
fstpl
movsb
mov
pop
mov
mov
es
imul
dec
mov
mov
push
mov
xchg
je
pop
movsbl
je
push
repz
or
mov
call
xor
sbb
cmp
movsb
or
and
lods
in
out
dec
mov
into
mov
adc
fbstp
movsb
xor
xor
inc
cmpsl
sub
jp
outsb
idivl
and
mov
idivl
push
std
stos
mov
int
and
imul
pushf
mov
mov
mov
aad
pop
out
pop
jmp
pop
sbb
cmp
and
std
dec
je
add
pop
mov
push
sbb
shlb
cmc
push
test
fnstcw
sub
in
fmuls
push
mov
paddusw
jp
xchg
sub
or
ret
xor
shll
filds
mov
pop
scas
adc
lret
lods
filds
mov
lret
mov
xchg
jl
dec
jl
mov
cmp
sub
inc
jns
repnz
insb
mov
push
jl
push
call
cltd
dec
test
sub
inc
clc
push
and
and
fdivl
clc
push
addr16
pop
or
loopne
je
cmp
ret
int
js
mov
inc
mov
fwait
arpl
mov
popa
hlt
jle
mov
rol
int3
mov
js
dec
shl
mov
hlt
fs
sbb
mov
pop
dec
std
fldcw
faddl
sbb
adc
cmp
in
xchg
icebp
pop
push
mov
adc
push
mov
and
test
sub
test
mov
sub
mov
add
add
clc
icebp
scas
xor
mov
push
lods
and
repnz
pushf
enter
sbb
addb
gs
pop
push
stos
push
mov
push
sub
or
cmp
ds
lea
pop
repnz
daa
jmp
or
mov
fists
jbe
stc
mov
cmp
adc
mov
ja
pop
xor
and
fbld
in
adc
pop
pop
or
sbb
inc
push
lock
xor
inc
in
mov
gs
rolb
cltd
dec
jo
loopne
mov
lret
lcall
out
xchg
jae
sbb
inc
loopne
cmp
dec
xor
cmpsl
push
sahf
mov
call
dec
sti
fwait
mov
imul
out
lods
sarb
mov
mov
sub
mov
paddusw
cmp
dec
das
inc
adc
sbb
loop
loop
sub
xor
mov
insb
dec
sbb
xchg
loop
jb
jns
or
fisttps
sbb
sub
es
dec
adc
cmp
hlt
cmp
jp
jl
mov
pop
push
inc
push
mov
mov
stc
push
lds
popa
mov
add
jmp
int3
int3
or
aaa
add
enter
cli
or
dec
cmp
mov
outsb
in
cltd
or
in
jns
lahf
lret
push
jno
sbb
call
movl
sub
out
scas
jns
scas
xchg
repnz
shlb
pop
lea
mulb
jnp
cltd
fisttpl
repz
mov
xor
pushf
xchg
push
push
mov
cltd
mov
gs
int3
push
dec
fstpt
push
daa
stos
add
mov
ds
mov
mov
mov
sbb
and
int3
shl
xchg
fst
mov
mov
inc
dec
sub
outsl
mov
test
add
cmp
xchg
mov
fdiv
adc
adcl
mov
je
testl
cmpl
iret
shl
jnp
mov
sahf
xchg
add
mov
mov
jns
push
mov
aas
push
and
cli
and
mov
push
fadds
out
pop
push
push
push
mov
inc
push
sub
xchg
inc
jae
add
stos
add
or
imul
add
repz
jae
dec
stc
das
fcmovu
fwait
xor
inc
pop
stc
scas
xchg
xchg
mov
orl
pop
mov
dec
insl
jne
pop
mov
cltd
sub
sbb
movsb
sbb
cmp
sahf
jecxz
mov
lods
ja
xor
xchg
add
xchg
ljmp
cmp
sahf
add
jne
adc
pop
mov
nop
out
sar
and
xchg
sub
nop
bound
sahf
in
repnz
ss
mov
jb
mov
rcr
pop
lcall
add
mov
das
movsb
xchg
mov
bound
es
mov
jp
mov
jg
xchg
repnz
sub
dec
fs
pop
or
das
jle
xchg
xchg
jle
pop
and
push
xchg
pop
adc
or
cmp
insl
clc
test
outsl
enter
jbe
fbstp
jmp
mull
cmp
pop
jl
mov
insl
sub
arpl
sub
dec
std
pop
fldt
mov
and
xor
and
add
sub
pop
or
and
cmp
sbbl
cmp
clc
popf
xor
dec
lods
xor
cmpb
hlt
inc
aad
lret
ret
xchg
jl
out
xchg
pushf
shrl
mov
or
xor
test
jno
enter
clc
and
sahf
push
hlt
cmp
sub
loope
pop
sub
sub
mov
push
push
jl
sub
aam
xor
jge
sub
lcall
lea
push
push
xor
popa
mov
testl
mov
sti
pop
push
dec
ret
cmpl
or
in
inc
mov
out
dec
mov
push
sub
xlat
sahf
lock
push
pop
jmp
lcall
inc
pop
test
mov
dec
fdivl
jmp
cmp
test
out
shl
adc
or
sub
rolb
das
push
negb
inc
jb
sub
rolb
test
cli
in
pop
fwait
dec
mov
mov
repnz
push
push
lret
in
or
jg
push
lds
ds
or
inc
lcall
int3
scas
xlat
nop
xchg
ficompl
in
cld
fidivrl
stc
pusha
xchg
shlb
aad
daa
inc
push
lcall
insb
cmp
pop
aaa
dec
dec
add
xlat
lds
fimull
inc
or
jns
fistps
mov
push
push
add
lock
cmc
fcoms
fdivl
sbbb
mov
jbe
ret
add
and
in
icebp
insl
xchg
fs
les
test
sahf
ja
jb
fwait
cmp
mov
push
lcall
in
shlb
fidivrs
mov
pusha
or
lret
jle
xor
adc
xor
mov
ja
cmp
sub
in
mov
in
pop
stc
mov
test
leave
mov
xchg
cmc
sub
mov
jge
sub
xor
imul
sub
xlat
icebp
push
bound
inc
jnp
movsl
test
aam
or
xor
xlat
push
mov
add
and
lock
dec
lahf
arpl
clc
cli
out
into
loopne
adc
mov
cmp
jno
push
add
adc
add
lods
mov
and
outsb
dec
push
ljmp
xchg
pop
lahf
add
dec
dec
adc
lods
test
scas
ret
test
xor
mov
sub
jb
out
out
shrl
jo
stos
dec
sub
add
lahf
pop
and
or
stos
je
xchg
lods
jo
mov
addl
movsw
out
shrl
add
cmpb
jne
lods
push
test
xchg
fdivs
sbbb
xchg
sub
popf
jg
out
fnstenv
pop
add
bnd
mov
xchg
nop
mul
pop
inc
dec
mov
mov
push
std
xchg
mov
sbb
lret
ret
push
iret
outsb
adc
fidivrl
cmp
xor
mov
mov
nop
mov
xor
mov
dec
dec
lea
inc
xor
jo
jp
mov
cli
push
sub
dec
test
inc
loop
je
xchg
inc
push
shrl
fmuls
clc
aaa
inc
sbb
aad
xor
lock
sbb
pop
or
mov
bnd
pop
pop
pushf
mov
in
cmc
or
lods
adc
out
addl
push
push
dec
int
insb
or
mov
inc
int
lds
mov
adc
cwtl
mov
sbbl
mov
pop
push
ds
mov
orl
dec
jb
or
int
push
mov
mov
stos
lds
xor
repnz
je
popa
in
cli
mov
pop
push
test
pusha
movb
mov
popa
dec
jb
das
and
add
movsb
push
pop
fs
rcl
xchg
cmpsb
mov
mov
mov
addr16
movsl
and
sbb
out
fildl
push
scas
dec
push
fidivrs
mov
jle
dec
mov
mov
ds
inc
mov
ja
sbb
or
call
mov
mov
jge
stc
cld
mov
sub
xchg
dec
dec
pop
faddl
subl
stos
push
xor
addr16
ret
add
xchg
fistl
out
sbb
js
stos
push
mov
dec
into
jge
inc
outsl
fiadds
sub
out
xchg
push
out
sbb
imul
add
gs
imul
push
xor
dec
xor
mov
aaa
xor
mov
sub
loop
pop
cmpsl
popa
mov
cmp
dec
and
inc
sbb
idivb
sub
push
xor
or
pushf
icebp
dec
cli
push
ds
cmpsb
call
lea
stc
adc
push
push
add
test
ljmp
cmc
in
pop
mov
movsb
adc
int
mov
loope
push
in
jne
rcrl
inc
clc
fisubl
push
fwait
xor
jl
insb
stos
popf
mov
incl
adc
pusha
inc
mov
mov
pop
jge
inc
jmp
cmc
pop
jmp
inc
inc
pop
sub
mov
or
dec
daa
and
hlt
mov
pop
and
data16
int3
fcmovu
call
cmc
xchg
jmp
js
add
ret
fistpll
ja
outsb
sbb
flds
addl
fmull
cmpsl
repz
addl
rclb
leave
imul
cmp
mov
xchg
dec
pop
or
into
dec
int3
adc
rclb
cwtl
sbb
jle
mov
shr
popa
lret
addr16
fcmovne
fs
sbb
sub
jnp
and
sub
and
cmp
xlat
fsubrl
sbb
xchg
verr
inc
bound
add
lcall
push
add
inc
movsb
lret
mov
mov
repnz
mov
fs
fcoml
rolb
popf
sbb
sub
cwtl
lret
hlt
aaa
fwait
dec
std
and
jmp
dec
jb
dec
mov
mov
dec
fists
subb
add
flds
mov
lods
cld
test
adc
mov
xor
and
in
push
xor
rorb
xor
xchg
and
jmp
lods
dec
sub
notl
fildll
mov
lret
adc
sub
inc
in
or
popf
inc
rorb
mov
push
ss
xchg
mov
orl
cmpsb
or
push
adc
ret
icebp
shll
jg
sbb
jno
mov
mov
mov
sub
lock
xor
xorb
jb
mov
aam
add
jns
sub
imul
sub
dec
ret
cmpsb
loope
add
sbbb
popa
dec
push
mov
loope
movsl
divb
popa
lahf
jge
loopne
fs
divb
xor
dec
sbb
into
cmp
fcomps
popf
mov
or
mov
xor
add
jne
mov
mov
es
xchg
sbb
xor
xchg
lock
loopne
add
mov
adc
insb
ret
mov
pop
pop
in
mov
inc
into
lahf
sarb
and
jne
lods
popf
or
in
sub
push
ret
or
lods
xor
repz
aad
pop
adc
scas
sub
sbb
mov
inc
xor
in
fnsave
pop
clc
rcr
mov
sub
popa
push
dec
jge
mov
mov
sar
xchg
cs
dec
outsb
rcrb
jmp
mov
mov
push
lret
xchg
in
and
mov
adc
push
pop
fstpl
push
bound
mov
movsl
dec
sub
out
mov
inc
add
popa
lea
or
repnz
pop
mov
dec
inc
mov
fisttpl
mov
dec
orl
mov
fiaddl
jo
xchg
adc
fistpl
push
mov
icebp
sub
mov
sbb
pop
fcmovnb
loopne
xchg
sbb
aas
add
or
loope
add
leave
cmp
pushf
jp
cmp
sar
paddusb
or
inc
pop
imul
pushf
loopne
push
add
adc
lods
flds
in
mov
pushf
rcrb
mov
fstps
xchg
sbb
sub
fcomip
lock
push
mov
sar
ja
jmp
cmpsb
xor
or
dec
mov
cs
pop
pop
sarl
popf
cmp
jns
lea
push
mov
in
out
popf
sbbl
fnsave
cmpsl
aam
lret
xor
shll
ficoml
les
cltd
dec
stc
xor
cmp
pop
inc
int
mov
arpl
lahf
cmp
xorb
les
or
mov
or
pop
inc
test
xchg
and
decl
test
stos
movsb
repz
js
xchg
xor
insb
mov
adc
jne
data16
mov
lock
push
lock
mov
orl
ret
cwtl
std
add
stc
enter
cmpsl
mov
addl
inc
or
fxch
dec
add
not
pop
or
and
xchg
mov
inc
and
dec
jmp
bound
sbb
fstps
cld
mov
repz
fiaddl
jecxz
lea
or
dec
int
loope
sbb
push
jo
dec
pop
les
pop
inc
inc
jle
xor
aas
sbb
jno
iret
xchg
mov
std
outsb
sbb
add
add
ror
cmc
fwait
mov
sub
inc
int3
push
xor
adc
idivl
adc
push
dec
call
js
cmp
inc
popa
cmp
inc
push
cltd
mov
sbb
cmpb
mov
not
jl
sub
fbstp
pop
mov
test
jnp
and
push
mov
pop
mov
cmpsl
mov
cltd
insb
mov
xchg
xchg
fdivrl
outsb
movsl
push
xor
stos
jge
addr16
xorl
inc
ret
shr
lds
out
stos
cmp
sbb
jno
in
xor
mov
imul
std
add
adc
sbb
repz
mov
stos
dec
or
imul
mov
push
rcrl
lods
mov
imul
xchg
inc
or
sarb
jne
stc
cmp
insb
pop
cmp
ljmp
adc
roll
int
mov
sbb
rclb
cmp
mov
cmpsb
push
movsl
jg
into
sub
fadds
test
inc
sub
mov
cmp
or
or
push
shll
mov
xchg
and
add
push
clc
or
cmp
aam
jb
icebp
add
nop
pop
cmc
ljmp
mov
aaa
dec
movsb
stos
insb
pop
stc
adc
test
lea
inc
pop
icebp
popf
add
cmp
lret
fisubrl
dec
rcrb
mov
and
cmp
lret
stos
out
xor
stos
jno
enter
fxch
jp
out
jg
adcl
mov
std
scas
je
ret
mov
in
mov
flds
out
dec
clc
inc
std
loope
or
pop
pop
or
xchg
xorl
js
jb
fchs
adc
loopne
mov
lret
mov
aad
inc
fs
ja
inc
xor
scas
lods
pop
jge
sub
push
cmp
add
mov
shrb
aad
push
ja
dec
addr16
inc
imul
int3
loopne
inc
or
pop
mov
cmp
jl
imul
push
pop
in
mov
add
pop
cld
and
mov
mov
mov
negl
in
cli
ret
mov
lahf
sbb
insb
add
adc
mov
jg
or
mov
imul
sbb
hlt
jne
fadds
and
jmp
jecxz
xchg
addr16
mov
fimull
cmpsb
lahf
sbb
xchg
fxch
fisttps
adc
mov
fbstp
xchg
inc
push
out
scas
fldt
pop
stos
xchg
inc
cmp
stos
lcall
cltd
cmp
adc
stos
jecxz
sbb
xor
and
fwait
das
cwtl
sub
pop
lock
in
push
lods
inc
andnps
outsl
jno
stos
test
xchg
leave
insb
fstps
fistpll
and
aas
xlat
pop
inc
push
nop
dec
sub
mov
inc
or
cmp
into
test
push
and
mov
mov
cmp
push
pop
subl
sbb
jecxz
and
in
mov
inc
idivb
jae
cmpsl
test
jb
xlat
rorl
jecxz
pushf
dec
mov
mov
push
lods
cmp
cmp
mov
mov
pop
stos
add
inc
jb
mov
pop
popa
jb
mov
push
xchg
add
fcomps
shll
push
fbstp
rol
cmpsl
xchg
cmpsl
imul
mov
mov
in
loope
sub
adc
push
pop
das
dec
mov
xor
arpl
lret
cli
push
es
inc
pop
insb
imul
arpl
jle
bound
filds
imul
icebp
jge
push
mov
ds
imul
pop
xor
or
imul
push
loope
sbb
push
inc
jno
mov
mov
and
and
xchg
xchg
pop
shrb
pop
ja
cmp
stc
push
mov
add
sbb
or
cli
mov
jns
sahf
mov
sub
push
mov
mov
leave
mov
and
pop
push
jge
shll
cmpsl
out
xlat
nop
test
test
adc
cmp
xor
lea
and
int3
fstpt
xor
dec
pop
inc
push
sbb
das
inc
or
mov
dec
fs
int
dec
pop
adc
jmp
movsb
pop
mov
pop
xor
adc
adc
cmpsl
cwtl
or
jbe
inc
add
push
and
out
shrb
mov
cs
add
imul
test
pop
mov
addl
clc
mov
push
and
mov
sbb
push
sub
push
or
ljmp
cs
clc
xchg
pop
jae
cmp
xchg
or
fcoms
mov
jbe
jecxz
sti
mov
xor
hlt
aas
std
mov
arpl
lahf
xor
mov
mov
or
loope
sahf
push
cld
int
loopne
cwtl
jmp
mov
bound
adc
mov
ror
adc
fbstp
mov
cli
fisttps
push
stos
stos
dec
sbb
push
loope
cmpsl
scas
loopne
stc
idiv
xchg
es
ds
lcall
cmp
and
loop
mov
mov
movsb
cmp
mov
ret
sub
in
in
fnstenv
rclb
xor
aaa
mull
xorb
mov
daa
ja
leave
mov
sti
mov
inc
push
popa
sti
mov
xor
mov
loop
fsubr
adc
in
outsl
push
push
cmp
mov
xor
cwtl
jns
rclb
ja
sbb
pop
outsb
sbb
ret
dec
mov
dec
test
loope
dec
jns
scas
jae
std
sub
stc
xchg
in
and
jb
sub
outsl
xlat
aaa
add
scas
enter
scas
push
dec
fnstenv
adc
lcall
pop
loop
repz
addl
imul
cmc
or
or
add
mov
flds
cmp
push
test
lock
jg
or
push
dec
mov
enter
repz
dec
aam
inc
in
mul
inc
outsb
cs
mov
fwait
fwait
mov
sahf
cli
mov
add
addr16
and
jae
ss
dec
jg
xchg
jl
hlt
adc
sub
gs
inc
jp
dec
mov
pop
arpl
inc
push
daa
and
mov
repz
and
or
fimuls
xor
xchg
imul
jp
stos
cmp
add
xor
sub
gs
int3
pop
mov
sub
mov
std
and
jo
xor
enter
scas
mov
push
popa
add
mov
xor
lcall
cs
lret
sub
pop
inc
out
mov
pop
or
mov
aam
lret
mov
insl
pushf
sub
inc
mov
lahf
clc
xchg
mov
adc
jmp
pop
iret
or
push
orb
iret
jecxz
jbe
movsl
leave
int
stos
push
ror
outsl
dec
dec
pusha
dec
ja
and
xor
mov
mov
jmp
je
push
xor
repz
xchg
inc
mov
mov
cmc
mov
cmpsb
scas
mov
into
add
mov
and
pop
pop
inc
je
out
dec
adc
loope
jnp
add
outsb
pop
jg
mov
jae
push
add
test
ret
in
dec
jae
or
pop
pop
in
mov
cltd
cmp
icebp
inc
mov
mov
in
add
push
rcr
inc
js
bound
stos
lods
cltd
xchg
scas
push
outsl
or
push
movsb
hlt
mov
adc
aam
jecxz
arpl
xchg
mov
mov
sbb
sub
add
sbb
jle
mov
cmp
aaa
mov
cmp
ret
sbb
inc
mov
dec
or
jmp
push
pop
and
inc
call
adc
shr
lahf
or
cmp
xchg
test
jae
xchg
mov
dec
test
icebp
fnstsw
mov
movsb
sub
scas
inc
adc
roll
out
push
in
insl
cmp
mov
fidivrl
ret
lods
sbb
sbb
insb
fsubr
sub
imul
xor
sahf
cwtl
cltd
dec
js
mov
bound
in
pushf
and
insl
mov
iret
imul
insl
adc
inc
jae
repz
xchg
and
call
push
mov
jae
push
xlat
add
pop
int
insl
push
fcoms
jns
pop
repz
inc
fnsave
add
inc
xor
insl
xchg
or
ret
mov
data16
test
cltd
cwtl
les
pop
loope
aad
sbb
mov
mov
ljmp
cld
add
mov
nop
mov
mov
cltd
mov
sahf
mov
les
sub
lret
push
inc
jecxz
cmp
stos
andl
sbb
rclb
inc
xchg
js
ljmp
shll
and
jge
lcall
mov
pushf
hlt
lret
lahf
int3
int3
jb
das
fisttpll
cmpsl
mov
in
rcrb
shll
mov
rcll
mov
repnz
in
jnp
aad
xor
adc
ds
leave
enter
mov
mov
fsts
pop
in
pop
xchg
test
lods
in
addl
add
inc
sbb
or
in
xchg
sub
sbb
neg
xor
mov
out
call
and
jge
or
push
mov
fiaddl
xor
pmaxub
stos
dec
enter
testb
sbb
or
mov
ljmp
jg
mov
and
jns
inc
icebp
or
xchg
lahf
xchg
js
stos
push
xchg
mov
dec
dec
shll
insl
or
enter
repz
or
imul
fs
mov
stos
frstor
into
push
call
sub
xchg
xlat
test
mov
ror
push
fs
or
jb
cmpsb
add
xchg
rcr
repz
nop
push
inc
xchg
clc
lods
mov
mov
insl
icebp
das
xor
mov
xchg
pop
adc
mov
push
sbb
cmp
ds
fcoml
mov
repz
mov
leave
dec
adc
loopne
fwait
and
in
or
cmp
aam
push
outsl
mov
xchg
cmp
jge
adc
jl
arpl
adc
scas
movsb
loope
repz
cmpsl
add
int3
sahf
ljmp
test
add
fstpl
add
adc
scas
shl
std
into
adc
ja
sbbb
ret
fisttpll
movsb
sbb
sahf
loop
cwtl
mov
jmp
sub
lahf
in
dec
ret
push
popa
out
jge
adc
ss
mov
pop
xchg
std
cs
out
mov
mov
rcrl
stos
gs
push
mov
dec
imul
je
es
int
jmp
shr
mov
rcll
mov
mov
mov
aaa
cld
out
inc
jle
cld
negl
mov
addr16
push
lret
xor
dec
in
out
into
xlat
shlb
daa
inc
out
sbb
and
sbb
loope
inc
dec
fdivl
or
repz
cwtl
or
cmpb
adc
mov
adcb
popa
push
and
xchg
sbb
lods
add
and
cwtl
lods
or
adc
cmpsl
mov
lock
outsl
push
cltd
dec
add
jae
xchg
hlt
sbb
xchg
sbbl
sbb
add
mov
jl
pushf
ret
adc
xor
xor
in
pop
sub
int
stos
push
es
pop
dec
jge
imul
stos
in
fs
jns
pop
shrl
scas
imul
scas
add
jl
push
mov
out
xchg
sub
out
mov
iret
sahf
xor
pushf
mov
jb
add
gs
mov
mov
sub
pushf
int3
xchg
sub
cli
xor
inc
arpl
dec
mov
divb
mov
subl
inc
adc
push
test
pushf
ljmp
sti
data16
xchg
cld
xlat
cmp
mov
sbb
mov
inc
mov
xor
and
and
pop
popa
xchg
pop
out
cmp
loop
push
dec
fistl
sahf
mov
or
push
popa
cmc
enter
insb
leave
rolb
mov
pop
out
mov
sbb
and
xchg
scas
mov
add
jnp
mov
inc
pushf
or
xor
sbb
aad
imul
xor
mov
loopne
or
mov
int3
push
and
cmp
xchg
mov
mov
pop
loope
sub
cmpsb
ja
add
mov
stos
out
jle
dec
mov
call
repz
pop
sub
aaa
pop
push
fucomi
sbb
sahf
xor
xor
imulb
enter
push
push
mov
mov
inc
data16
or
mov
jbe
mov
test
mov
cmp
cmpsl
in
sti
adc
dec
adc
adc
xlat
cld
push
in
test
mov
xchg
pushf
fs
mov
adc
imul
repnz
imul
clc
xchg
mov
mov
add
fwait
push
stos
dec
test
fisttps
test
jne
inc
jmp
push
in
mov
xchg
push
mov
jmp
out
test
rcl
add
rcl
mov
mov
in
rcrl
inc
jbe
loope
push
mov
mov
jg
jnp
pop
xor
loopne
int3
aaa
test
sub
sbb
pop
adc
lds
inc
jns
cmp
jae
lret
hlt
pop
popa
out
or
repz
outsb
test
add
pop
and
orl
adcl
mov
in
sub
imul
or
cmp
push
pop
pop
and
in
add
fimuls
jb
test
mov
movsb
or
cli
jae
and
bound
or
inc
hlt
xchg
xchg
nop
in
cltd
call
jnp
cltd
mov
pop
xchg
popa
push
leave
jl
stos
aad
inc
sbb
mov
adc
mov
cld
loopnew
xor
not
inc
hlt
add
xchg
lds
ret
daa
outsl
and
in
xchg
push
pusha
in
jbe
xor
or
xor
sbb
mov
or
push
ret
sub
push
lds
push
sbb
mov
xor
clc
mov
sub
into
jbe
stc
inc
sarl
xorl
pop
push
xor
inc
cmpsb
call
dec
sub
ljmp
xor
out
push
adc
mov
insl
cmpsb
mov
xor
mov
in
jle
lods
mov
jmp
repz
add
push
lods
xor
mov
cmp
push
stos
or
mov
repnz
mov
jg
lock
jg,pt
mov
fstpl
adc
push
dec
divl
mov
notl
hlt
inc
fdivrl
xor
jp
xchg
into
adcb
mov
shrb
add
add
mov
flds
adc
in
das
popf
sub
inc
outsb
pop
push
sbb
add
sub
fbld
imul
addl
push
jo
or
dec
jo
fistl
clc
mov
repnz
divb
add
bt
inc
bound
cli
ja
shrl
gs
popaw
sub
les
pop
cli
and
aas
repz
test
push
popf
dec
sbb
movsl
inc
fs
lahf
cld
xchg
xchg
bound
push
into
dec
xor
and
fdivrs
movsl
mov
xchg
jbe
jnp
pop
fcoms
in
add
fdivr
cltd
adc
insb
mov
push
adc
sbb
jp
dec
cld
sub
mov
roll
cmpsb
scas
jo
sbb
xlat
inc
or
cld
xor
inc
popf
push
mov
loop
call
divl
lahf
pop
pop
mov
inc
pusha
pop
sbb
xor
xchg
aaa
dec
cwtl
adc
ljmp
ja
flds
shlb
test
pop
sbb
pusha
imul
sarb
pop
fistl
mov
fidivrl
sti
push
add
add
or
fsubs
lds
jmp
out
xor
int
loope
pop
pop
int
mov
ror
fwait
ljmp
rorl
jg
push
inc
es
sbb
push
xorl
mov
stos
cmp
pop
fdivrl
rcll
in
loopne
dec
pop
push
push
outsb
add
xor
hlt
fcompl
ljmp
out
mov
jbe
dec
pop
cmp
push
add
jecxz
rorl
adc
frstor
add
pop
sub
xchg
cmp
popa
pop
aaa
loope
mov
outsb
sub
int
into
stos
scas
and
push
sbb
pop
inc
inc
push
cs
xchg
xor
mov
ret
push
out
sbb
pop
push
aam
xchg
pop
cmp
pop
mov
dec
repnz
loope
lret
stc
loopne
dec
adc
and
stc
popf
mov
or
in
dec
push
xchg
sbb
xchg
loopne
jb
popf
xor
inc
xchg
int
jnp
shlb
lods
ja
gs
andb
mov
and
movsb
stos
lods
lods
push
cli
mov
in
dec
je
pop
push
cmp
dec
mov
fdivl
dec
negb
nop
cmp
xchg
mov
out
stc
add
stos
mov
xor
addb
pop
xor
jo
lcall
adc
int
jb
inc
mov
call
push
adc
cmc
lcall
es
sbb
in
adc
mov
repnz
ja
jo
dec
adc
shlb
mov
push
jmp
pusha
xchg
stos
dec
fcomps
adc
in
test
lcall
sbb
cmpsb
lods
inc
lea
cli
pop
sub
and
dec
adc
in
mov
aam
mov
or
jno
cwtl
cltd
sti
push
add
mov
divb
ret
push
cmp
jne
mov
pushw
icebp
push
push
stc
and
fsubs
cwtl
aaa
mov
scas
lock
cmpsl
out
xchg
pop
mov
jl
adc
adc
mov
les
mov
sub
sti
in
inc
cmpsl
xor
mov
rclb
push
subl
sub
mov
clc
repnz
repz
fadds
sbb
dec
xchg
dec
sbb
je
or
leave
push
lahf
inc
cmp
inc
out
les
xchg
xchg
add
outsb
mov
mov
insl
imul
test
xchg
in
mov
sub
jg
adc
nop
movsl
push
movsl
por
ret
cs
popa
imul
arpl
rcl
xchg
jo
das
sub
push
adc
xchg
pause
ret
pusha
sbb
mov
push
jbe
push
je
nop
in
iret
movsb
mov
and
jp
sbb
sti
push
pop
rcll
xchg
cmpsl
inc
incl
pop
push
jnp
sbb
jp
popf
imul
aas
out
xchg
icebp
subb
push
mov
test
push
push
cmpsb
stos
mov
mov
mov
aad
or
or
int3
or
jne
sar
sti
insb
add
jb
pop
mov
mov
pop
lea
iret
fsubr
and
andb
in
je
push
fiaddl
test
stos
jle
insb
faddl
aam
xor
and
popf
mov
incb
push
cmp
inc
rcr
jg
inc
mov
fs
aas
push
fmuls
or
sub
arpl
mov
mov
mov
push
adc
je
jle
imul
or
inc
mov
mov
dec
dec
inc
sbbw
aas
xchg
inc
mov
cmp
outsl
sbb
dec
cmp
inc
bound
stos
int3
in
pusha
sbb
out
loopne
les
dec
ret
stos
cmp
mov
shr
pusha
push
in
fldt
xchg
adc
mov
fistpll
popf
bound
js
sub
shrl
add
std
rcll
fnstcw
scas
es
iret
and
lea
inc
ja
je
mov
add
add
xor
ret
inc
repz
std
mov
repnz
sub
mov
or
int3
movsl
movl
mov
test
xor
push
mov
pop
jae
inc
movsl
inc
push
inc
cmpsl
adc
sbb
xchg
outsb
mov
sub
xorl
mov
mov
cmp
cmpsb
jbe
sub
sub
push
adc
sub
or
mov
fistpl
addr16
push
cmpsb
inc
sbb
sub
xchg
fcoms
fnstenv
insb
loopne
mov
cmp
jp,pt
and
xchg
cmp
inc
out
jbe
cmpsl
fcomip
cmp
mov
es
hlt
or
adc
inc
cltd
jb
jecxz
mov
fsubl
out
imul
lds
dec
lret
sbb
mov
xchg
gs
lcall
push
mov
lret
sbb
cmp
mov
in
loopne
jae
scas
les
mov
in
repnz
cwtl
sub
dec
cltd
int3
ret
pop
arpl
lods
std
insl
xchg
pop
dec
insb
inc
add
js
idivl
pop
pop
data16
dec
xchg
fdivr
adcl
iret
sub
and
inc
pop
fisubrl
add
fnstsw
inc
or
sub
pop
adc
push
testb
sbb
inc
or
enter
mov
inc
shll
mov
sub
push
lds
mov
pop
add
mov
cli
mov
fadd
cwtl
inc
mov
xchg
hlt
push
inc
sbb
adc
xchg
sub
rolb
mov
je
iret
pop
and
jp
pop
call
cmpsl
cmp
pop
mul
in
lock
sti
sub
xchg
psadbw
insl
outsb
fsubp
adc
movsb
dec
inc
clc
lcall
out
and
inc
loopne
add
xor
lcall
in
iret
cmc
or
addr16
pushl
inc
or
push
add
mov
mov
aad
jbe
mov
lods
call
push
mov
cmp
inc
push
xchg
dec
sti
dec
popf
shll
inc
movsl
faddp
pusha
std
dec
push
push
in
lods
adc
je
xor
test
cli
mov
jo
daa
add
add
adc
mov
inc
inc
in
lea
push
push
negb
data16
jae
ja
inc
dec
sbb
addr16
lods
push
inc
sub
out
xchg
mov
mov
inc
cmp
rep
fistl
or
sbb
stos
jo
mov
or
cli
xchg
push
mov
pop
sub
fmull
pop
idiv
mov
aas
fcoml
movsl
stc
pop
popf
movsb
dec
xchg
xor
out
int3
testl
adc
in
adc
adc
fistps
cli
adcl
pop
xchg
push
mov
rcrb
or
adc
mov
mov
push
mov
push
int
ret
sbb
adc
push
sbb
dec
ror
adc
add
scas
negl
sub
add
sub
sub
mov
inc
repz
fisttpll
loopne
jmp
mov
hlt
nop
cmpsb
sub
idivb
lea
adc
jbe
cltd
mov
fists
xor
xor
lods
pop
mov
pop
jl
movsl
sub
pop
icebp
inc
cli
out
jb
enter
jl
out
lret
adc
cmp
jle
xchg
int3
les
mov
cmp
or
outsb
loopne
ja
push
and
dec
jmp
enter
jp
test
xor
mov
enter
popa
dec
ja
leave
push
mov
sub
push
inc
arpl
pop
mov
push
jp
inc
out
lret
mov
popf
inc
push
movsb
adc
sahf
xor
jl
or
mov
insl
ret
sbb
mul
sbb
pop
jp
enter
dec
wbinvd
les
jmp
repnz
sbbl
enter
aam
stos
lods
sbb
push
add
out
jp
add
leave
xchg
mov
cmp
fwait
mov
jnp
xor
cmp
or
iret
mov
inc
aaa
loopne
adc
jae
mov
cmp
sbb
jl
mov
imul
sbbl
cwtl
shlb
movl
loopne
mov
stos
andl
inc
sub
or
mov
sahf
ds
bound
inc
movsb
mov
xchg
pop
xor
icebp
lahf
push
mov
notb
int
cmp
mov
fisubrs
lds
push
xchg
xchg
add
pop
out
jge
ficomps
ds
je
jne
jg
mov
push
invd
jl
xchg
mov
lock
push
dec
mov
jno
pop
xor
ljmp
pop
mov
adc
cli
pop
icebp
clc
sub
loope
mov
popf
or
adc
xchg
pop
xchg
pop
add
fs
and
jp
cltd
dec
ds
inc
dec
bnd
cmc
ljmp
pop
cltd
xor
or
scas
fsubl
sub
loope
pop
hlt
push
xor
aas
imul
cmpsb
lods
jle
push
andb
cmp
xor
fcmovb
lret
pusha
stos
lret
adc
outsl
xor
adc
and
into
cltd
push
mov
jae
sbb
movsb
jl
fucomp
xor
inc
mov
or
cmp
mov
push
nop
cmpsb
or
cwtl
jp
jge
fidivl
dec
adc
sbb
lds
out
lds
jecxz
push
sbbb
mov
lret
xchg
je
dec
cmp
push
sub
push
or
into
xor
lret
cmp
pop
imulb
pop
sub
stos
test
lock
clc
idiv
movsl
das
push
add
je
push
cmpsl
mov
cwtl
in
jno
fs
sub
fisubs
hlt
loope
insb
pop
cmp
iret
jp
add
shlb
addr16
test
and
popa
xchg
pop
in
scas
pop
sub
pop
mov
fcomip
push
out
push
mov
rol
loop
pop
enter
hlt
sbb
je
mov
push
cmp
icebp
or
ficoml
push
dec
pop
sbb
ja
in
dec
rclb
ret
pop
mov
out
pop
jg
pop
xchg
push
mov
mov
adcl
aam
ficompl
lds
insb
mov
repz
pop
das
test
hlt
xor
mov
dec
ljmp
clc
sarl
and
popf
jnp
imul
outsb
ljmp
add
pop
out
pop
rolb
lret
cmp
cmp
xchg
adc
sbb
adc
and
std
jmp
adc
ret
cmp
stos
js
add
cmc
push
test
mov
les
push
jp
test
xor
jp
out
and
std
add
adc
test
inc
pusha
add
jo
gs
xchg
jle
push
sub
mov
xchg
dec
adc
movsl
or
inc
test
pop
ljmp
sbb
and
repz
cmpsl
dec
call
arpl
test
fsubrl
add
xorl
mov
inc
sbb
jecxz
loop
xor
imul
lcall
jb
adc
adc
pop
stos
fbld
dec
mov
adc
mov
mov
int
insl
dec
jle
out
ja
mov
movsl
and
push
push
sub
push
pusha
rcll
sub
das
sti
stos
scas
ret
loop,pt
lock
in
popa
lret
test
test
mov
ds
xchg
enter
adc
sub
jge
jnp
cld
mov
int
sar
fists
mov
in
lods
cmp
out
out
test
push
int
scas
mov
push
jo
andb
out
ljmp
push
je,pt
push
mov
xchg
popf
out
mov
mov
xor
bswap
std
mov
pushf
mov
fwait
jb
mov
jo
sub
in
mov
sti
lret
cmp
push
xor
adc
es
or
pop
leave
jmp
shrb
push
lea
lock
ret
or
mov
loope
xchg
pop
cwtl
incl
daa
mov
sub
js
or
dec
mov
adc
push
std
lcall
push
dec
sub
js
punpcklbw
and
push
les
mov
jecxz
dec
dec
mov
cmp
inc
inc
repnz
out
sbbb
pop
out
sbbl
or
out
sbb
dec
test
std
loope
sbbl
cmp
mov
push
xchg
test
and
dec
rcrl
mov
fisubrs
jmp
cmp
daa
xor
inc
or
jmp
mov
in
nop
push
jg
push
fisttpll
or
inc
lret
pop
popa
adc
push
cmc
bound
dec
jns
push
cli
add
mov
into
adc
rcrb
pop
xor
cmc
cltd
push
add
aad
popf
or
pop
xor
push
xchg
add
in
cs
lret
aad
sbb
jnp
sub
inc
aam
sub
mov
addb
adc
test
lret
data16
ljmp
clc
lret
push
in
js
repz
dec
in
faddl
xor
cmp
fcmovbe
jl
xchg
pmaxub
jmp
aas
pusha
inc
lret
jnp
mov
jmp
aas
adc
inc
dec
push
xor
push
xchg
out
xchg
je
je
sub
pop
lods
add
mov
xchg
jbe
incl
xor
stc
dec
or
lahf
scas
insl
pop
sbb
push
xlat
scas
clc
lcall
or
clc
mov
scas
pop
jmp
fcomps
mov
xor
cmp
inc
pushf
jg
jge
cmp
xor
cltd
push
jb
in
dec
cmp
adc
xorl
test
out
shrl
xlat
pop
leave
xchg
ljmp
js
jo
sub
in
lods
movsl
sbb
and
mov
dec
jmp
xchg
aam
dec
out
pushf
fsubp
repnz
mov
and
loop
sub
sbb
sbb
int3
inc
aad
das
aas
outsl
repz
arpl
and
mov
jb
mov
fisubrs
lahf
ljmp
cmp
inc
mov
mov
inc
cli
loop
or
orl
insb
fdivr
sbb
mov
orb
mov
dec
in
or
adc
cs
add
jle
mov
xchg
mov
bound
sbb
mov
in
lret
es
xor
scas
jb
add
mov
pop
sub
mov
gs
or
push
andl
test
pop
pop
inc
dec
jb
test
hlt
mov
mov
hlt
lea
jl
and
inc
ficoml
insb
mov
loope
or
lret
xchg
daa
pop
mov
movsb
imul
movsb
push
repz
xchg
iret
out
add
xor
jns
in
shll
lret
loope
dec
loopne
je
dec
mov
jmp
mov
lret
ja
adc
xchg
btc
addb
scas
insb
jo
mov
mov
fisubs
cmp
ficompl
out
jo
mov
xchg
or
sbb
or
xlat
push
addb
mov
pop
insl
jns
mov
icebp
xor
cmpsl
sbb
inc
add
movsb
cmp
dec
dec
in
fbld
insb
aad
and
scas
pusha
in
ja
and
cltd
jne
fcmovb
xor
stc
add
xchg
popf
mov
repnz
in
xor
rorb
pop
rcrb
rorl
rclb
sub
sub
xchg
js
xor
inc
mov
addl
mov
dec
inc
cltd
ds
aam
dec
xor
inc
push
add
cwtl
or
jmp
shll
out
jle
cs
shlb
jbe
outsb
sub
xor
cmp
std
and
dec
or
rcrb
lret
add
fdivr
or
pop
ds
sub
dec
arpl
dec
loopne
pop
sbb
ret
int
jo
mov
xchg
insl
scas
mov
adc
and
sub
mov
sbb
add
mov
mov
add
fstpt
gs
inc
mov
xor
rcr
pusha
mov
cmp
add
sub
add
jecxz
loopne
nop
loopne
mov
in
ret
pop
xchg
cmpsl
js
shlb
sbb
ljmp
lds
shlb
mov
sub
pop
cltd
and
push
or
addr16
adc
jne
sahf
or
aad
pushfw
push
or
xchg
jmp
lahf
mov
pushl
pusha
pop
jns
pusha
lds
push
adc
mov
mov
sub
into
daa
pop
loop
cmpsl
popf
cmpsb
cmp
mov
hlt
in
mov
push
add
mov
sub
push
movb
dec
xchg
sub
xorl
mov
popa
cmp
jl
push
aaa
js
mov
arpl
mov
xchg
mov
push
ds
dec
inc
aad
pop
paddd
add
iret
dec
xor
call
add
imul
push
shl
or
sti
xchg
mov
xchg
imul
ds
push
out
sub
and
dec
lods
inc
roll
mov
enter
notb
imulb
mov
cli
sbb
dec
cwtl
push
insb
jae
lret
or
icebp
jno
loope
lods
pop
jp
iret
ljmp
stos
pushf
cmc
or
pop
icebp
lock
push
sbb
scas
mov
sbb
inc
mov
xor
out
clc
popa
add
cmp
cmc
dec
dec
push
add
mov
pop
movsl
in
ja
int3
sarl
mov
add
dec
mov
adc
dec
push
inc
add
mov
mov
aam
mov
testb
ljmp
sbb
iret
push
jmp
sbb
mov
and
adc
je
mov
es
leave
and
cmpsb
fildl
les
ljmp
push
in
mov
lahf
dec
sbbl
scas
mov
mov
mov
loopne
aas
mov
sub
mov
cld
mov
adcb
addr16
fsubrl
divl
cmp
fneni(8087
loopne
icebp
into
test
cmpsl
xlat
lds
sbb
flds
shll
cltd
pop
stos
xchg
xchg
sbb
or
das
fisttpl
xchg
cwtl
dec
lcall
cmpsb
push
push
xor
sti
push
mov
inc
jb
repz
repz
pop
shll
ret
nop
mov
sbb
dec
and
jge
int3
jp
leave
jbe
das
and
adc
aaa
in
and
mov
out
cmp
push
cwtl
ja
andb
dec
mov
and
movsl
mov
insb
and
fimuls
push
pop
std
testb
jmp
hlt
lea
xchg
mov
fnstenv
jne
ret
lds
xchg
scas
es
cmp
cmc
leave
and
lcall
cmp
imul
jne
sbbl
repz
push
push
sbb
imul
in
nop
imul
sub
dec
ret
stos
cmpsl
push
or
mov
in
push
xchg
dec
xchg
insl
or
imul
insb
fwait
sbb
in
sahf
cs
mov
fcoms
lods
loop
ret
mov
push
icebp
mov
mov
or
cld
add
in
int3
sbb
stc
xor
jge
mov
sub
icebp
incl
xchg
aad
push
aad
gs
sbb
cmp
enter
loope
aas
jp
lcall
pop
arpl
je
dec
add
pusha
inc
cwtl
pop
hlt
data16
push
cmpsl
or
outsb
inc
jo
repz
xchg
sahf
inc
pop
repz
sahf
mov
sti
mov
fidivl
inc
bound
mov
mov
test
mov
xchg
sub
sbb
mov
lret
jge
push
adc
aas
mov
inc
mov
mov
mov
loop
mov
mov
mov
push
lds
cmp
jae
jle
mov
int3
adc
push
add
inc
cs
lds
xchg
mov
mov
ja
push
jo
sahf
bound
mov
cmp
hlt
aas
sub
mov
pop
jmp
push
push
mov
gs
add
cli
fsubr
insl
and
aam
push
lret
or
mov
lahf
lahf
adc
arpl
or
hlt
loopne
sbb
pop
int
dec
xchg
bound
ret
cmp
and
mov
pop
pop
sub
sub
jge
in
std
hlt
sub
in
out
mov
sbb
lea
adc
xorl
test
mov
leave
or
inc
int
data16
push
pop
pop
push
cmp
lret
push
out
inc
test
fidivrl
insl
arpl
pop
mov
or
and
sbb
pop
push
adc
ret
sub
jge
fsubs
sbb
inc
inc
jbe
inc
xor
js
mov
imul
jnp
bound
lea
das
sti
jns
cmpsl
dec
pop
xor
test
stc
jb
hlt
mov
lret
ss
push
mov
stos
sbb
nop
mov
mov
sub
sbb
adc
imul
subl
aam
sub
pushf
push
test
add
repnz
out
lahf
fwait
jmp
cmpsl
dec
ja
lret
mov
testl
add
or
addl
int3
out
mov
cmp
mull
xor
test
cmpsl
in
mov
gs
adc
mov
out
mov
int
out
subb
out
cmp
xchg
pusha
ficoms
push
mov
mulb
xchg
dec
push
jno
add
enter
iret
xchg
mov
imul
out
insb
fs
loop
ret
cld
ja
insb
and
stos
push
ds
scas
cmovg
xchg
imul
mov
mov
jae
sbb
cmp
aad
andl
push
leave
adc
dec
cmpsb
mov
push
in
jns
cmpsl
jecxz
cli
mov
movb
fistpl
aam
mov
jg
mov
rcrl
and
dec
out
mov
aam
into
stos
loopne
aas
pop
pop
pop
jnp
mov
ficompl
push
insb
push
clc
xchg
sub
sbb
xchg
ficompl
repnz
inc
loop
icebp
inc
xor
cs
jle
fsubrl
xor
ljmp
int
fldl
aad
shl
cli
or
ror
es
pop
xchg
movb
stc
inc
js
push
test
push
cmp
les
daa
dec
in
dec
orb
mov
test
cltd
iret
mov
fcompl
rol
adc
cmp
xchg
jp
xchg
data16
mov
or
in
das
cwtl
dec
mov
js
mov
in
leave
daa
sub
jge
cmpsl
sbb
popf
std
adc
pop
test
mov
cltd
mov
not
jb
ret
lret
xor
mov
bt
lea
mul
bound
add
je
pop
xchg
rol
sub
jge
xchg
push
call
out
ficoms
sub
lods
jle
dec
push
test
mov
xchg
mov
inc
mov
mov
xor
adc
sbb
call
ret
out
notb
shll
adc
shl
fiaddl
data16
lahf
test
mov
xor
insb
push
cmp
and
adc
icebp
sarb
add
cmpl
rcl
jle
cmc
hlt
gs
push
adc
data16
cs
loope
xor
dec
adc
adc
mov
imul
jp
in
inc
push
subb
test
jl
push
addb
daa
daa
adc
enter
cmp
xchg
insl
gs
lea
inc
cs
mov
outsb
sbb
test
cltd
mov
pop
add
and
insl
dec
sbb
iret
mov
mov
cmpsw
fnstenv
sbb
movsl
cmp
enter
sarl
xchg
jae
adc
aam
xchg
mov
cmp
repz
adc
pusha
outsb
lds
or
outsb
repz
pop
sti
ss
dec
scas
into
sbb
pop
ficomps
xlat
arpl
cmpsl
jl
dec
jno
mov
cltd
or
sbb
je
jp
xchg
mov
pop
mov
sub
rclb
ljmp
push
adc
rolb
push
jge
sub
pop
push
sbb
clc
cmp
jns
dec
shlb
out
mov
add
jl
pop
pop
fcompl
popf
cmpsl
roll
mull
popa
movsb
rcl
imul
out
int
adc
aam
xchg
inc
ror
lret
sbb
cs
mov
or
mov
sub
shl
mov
push
inc
out
mov
les
test
inc
jnp
int3
fcoms
dec
es
push
sub
push
ja
pop
xor
xchg
sbb
gs
lds
cmc
mov
jmp
or
xor
sbb
add
sbb
cmp
jp
push
xchg
or
mov
jle
fs
shrb
sub
adc
inc
jecxz
add
rolb
jge
dec
inc
shl
repz
out
xor
movnti
inc
lret
cltd
aad
jb
frstor
lods
out
stc
mov
arpl
adc
mov
lock
pop
push
insb
fldcw
push
adc
data16
xchg
inc
dec
lods
xor
push
adc
popa
scas
scas
ret
inc
cmp
inc
in
pop
xor
jae
arpl
je
xor
dec
ljmp
test
mov
int
hlt
enter
lods
scas
rcrb
jle
rcrl
lcall
adc
and
push
xor
rolb
jbe
jp
mov
ffree
cmc
jp
cmpl
push
hlt
filds
adc
mov
inc
xchg
push
jb,pn
dec
adc
mov
in
jge
fld1
sub
push
fwait
add
pop
pop
lcall
stos
mov
xor
pop
jecxz
testl
mov
mov
cmp
dec
mov
int
inc
addr16
fucom
shlb
adcb
and
mov
and
push
inc
push
sbb
xchg
fidivs
mov
out
jge
repnz
fcompl
mov
mov
aam
loope
nop
add
ss
jb
add
pop
mov
push
jns
rorb
jnp
mov
sti
pop
insb
or
out
xor
fsubr
dec
xor
aaa
xchg
pop
pop
dec
push
sub
fstp
cmp
jno
subb
std
mov
and
adc
sbb
mov
xchg
xchg
mov
in
inc
js
std
mov
sbb
adc
popa
add
lock
mov
mov
cmpsl
pop
das
lret
xor
dec
jnp
adc
mov
dec
aam
xchg
xorl
in
sub
movsb
mov
mov
call
mov
pop
or
inc
mov
adcb
sub
test
mov
push
or
movsl
or
imul
fmuls
cs
das
and
mov
pop
movsb
adc
jmp
sbb
outsl
cli
push
or
jle
fcompl
or
adc
jmp
stc
mov
xchg
pop
mov
pusha
mov
int
cvtps2pi
jge
jo
mov
push
popa
and
call
push
xlat
test
xor
loope
pop
loopne
imul
aas
fsts
jecxz
pop
push
outsb
cmp
pop
push
sub
mov
lds
pop
jns
sbb
cmp
xor
jns
xchg
daa
jae
and
push
pop
jp
into
add
xor
mov
mov
mov
cmc
push
mov
xchg
popa
lods
std
xor
repnz
shufps
lahf
cmp
gs
data16
xorb
jecxz
pop
int3
jmp
lods
pop
mov
inc
pushf
faddp
movsl
or
and
mov
mov
lret
ljmp
je
mov
push
out
pop
xchg
pop
mov
jae
cmp
sub
mov
xchg
pop
flds
add
xchg
out
cmpl
or
sbb
xor
mov
jp
sarb
jp
and
sti
cwtl
pushw
push
dec
cli
rcll
sub
outsb
iret
stos
leave
std
jg
cmp
add
or
ljmp
mov
xor
mov
lock
sti
test
loop
jb
pop
sub
xor
imul
lahf
sbb
inc
pop
stc
lock
mov
mov
mov
data16
mov
pop
adc
sbb
sub
lods
cs
cmp
fldenv
sbb
insb
inc
mov
ljmp
jnp
or
or
repz
ret
sbbl
inc
jge
stos
xor
push
and
mov
shll
pop
mov
int
out
aam
aas
repnz
pop
sub
xchg
clc
out
test
xchg
cmp
loop
mov
lds
push
repz
cs
ret
jle,pn
mov
and
lods
add
or
sub
xchg
xorb
cmp
push
pop
xchg
inc
mov
dec
rcrb
sbb
out
mov
and
clc
and
mov
mov
int
test
cmp
jno
rcr
mov
mov
sti
fildl
testl
clc
pop
lock
sbb
ljmp
mov
out
sbb
mov
ss
push
test
sbb
lahf
adc
lea
aaa
inc
cmp
xchg
aad
je
loopne
mov
lock
jne
out
popl
nop
xchg
out
jge
cmc
outsb
popa
int3
bound
es
rorl
add
rolb
out
sub
or
xchg
sub
leave
mov
pop
popf
xor
cmp
ljmp
loopne
jbe
mov
mov
push
std
push
mov
imul
cmp
in
mov
jge
ja
pop
pop
popf
dec
lret
push
repz
mov
xchg
push
jae
test
je
movsl
xchg
add
jge
insl
jl
push
xor
xchg
imul
stos
gs
mov
mov
fucom
rcll
in
add
mov
lret
mov
adc
push
cmc
in
test
imul
dec
pop
mov
icebp
jns
ret
sub
test
fdivrs
mov
pop
and
mov
clc
add
in
push
xchg
add
inc
mov
ret
pusha
adc
mov
jle
sti
lret
mov
and
jge
mov
or
push
sahf
in
inc
mov
xchg
mov
xchg
and
pushf
loop
push
out
into
mov
test
roll
cli
pop
lods
push
ret
test
pushf
xor
fs
daa
ret
inc
jno
pusha
dec
jp
fildll
or
push
pusha
dec
les
ljmp
addr16
mov
mov
clc
mov
dec
sbb
xchg
or
out
add
outsb
je
fbld
cmp
daa
int3
pop
mov
lcall
mov
in
inc
dec
push
and
mov
cli
or
push
movsl
sbbb
mov
scas
pop
cmc
mov
movsb
mov
stos
dec
loop
and
add
sti
outsb
iret
dec
mov
fmul
lahf
sbb
loop
or
int
sbb
cmpsb
cltd
and
clc
push
mov
inc
mov
sub
mov
mulb
xchg
mov
mov
xor
xlat
push
hlt
pop
sub
rclb
push
xchg
sbb
sub
mov
repnz
repnz
pop
mov
push
xor
dec
into
call
pop
cli
fs
movsl
cmp
xor
rorl
cmp
mov
mov
idivb
mov
jl
sub
sub
push
in
das
mov
mov
add
in
clc
scas
out
mov
sub
xchg
pop
das
jge
xchg
mov
jae
movsl
inc
add
and
rclb
push
and
push
add
arpl
jae
ffreep
dec
xor
dec
cmp
sahf
rorb
push
mov
inc
jo
jp
arpl
inc
or
inc
push
jno
xchg
pop
jbe
movsb
into
out
xchg
repnz
loope
mov
xor
stos
pop
lcall
cmp
dec
mov
pop
es
popl
sub
mov
cmp
mov
out
pop
sbb
lret
mov
fidivs
ss
arpl
in
scas
xor
stos
jb
cwtl
in
pop
jnp
fildl
inc
cmpsb
xchg
push
jge
dec
repnz
jle
jo
adc
jno
mov
icebp
sbb
iret
add
xchg
mov
adc
push
test
mov
lds
repz
rorb
nop
pop
daa
testl
rorl
jne
divb
push
lret
cs
pushf
ds
pushf
inc
jnp
pop
mov
out
push
in
mov
xor
cmp
je
stos
sbb
gs
mov
dec
sub
sti
jo
stc
cmpsb
mov
and
mov
jp
in
and
or
add
dec
mov
jnp
ret
dec
mov
ret
repz
fwait
ss
dec
lock
and
xor
adc
pop
mov
jmp
dec
incb
xchg
cmp
movsl
cli
aad
movl
inc
adc
cmp
fsubrl
jns
sub
xchg
pop
shll
mov
movsl
xlat
rclb
in
dec
mov
xchg
in
mov
sub
mov
xchg
sub
fimull
dec
roll
aaa
pop
fldenv
mov
sub
mov
xor
into
push
lahf
and
fnstcw
lock
cltd
negl
or
cmp
mov
mov
or
sbb
out
rcl
or
cmp
stos
mov
mov
jp
out
add
mov
xchg
and
xchg
adc
mov
fidivl
shrb
add
mov
push
mov
push
out
inc
das
out
jecxz
push
leave
mov
iret
push
aas
movsb
xchg
push
cwtl
loop
add
sbb
or
push
ficoms
movsb
js
out
aaa
int3
test
and
xor
lea
push
fmul
fwait
stos
sbb
sahf
lods
xchg
insb
lcall
test
xor
icebp
cmp
xchg
fisttpll
inc
dec
pop
nop
rcrl
jecxz
shrl
dec
xchg
mov
sub
adc
into
cmp
stos
jl
xchg
xchg
aas
or
inc
or
test
fs
or
negb
ds
aam
imul
ljmp
call
ds
adc
lahf
fs
shl
sbb
push
loopne
xor
outsb
imul
or
lcall
mov
mov
adc
movb
lahf
out
ja
in
jmp
mov
mov
mov
xchg
imul
sbb
jg
in
mov
test
imul
push
mov
jp
dec
out
push
inc
je
incl
mov
idivb
cmp
lret
add
push
push
adc
jmp
jecxz
fiaddl
out
or
mov
cmp
ss
lahf
jge
adc
aaa
pop
sbb
neg
xor
push
lahf
ret
pushf
ljmp
ret
push
sbb
cmpsl
cltd
adc
leave
ja
pop
sub
enter
lods
pop
jg
pop
dec
xor
push
add
or
pop
in
mov
xor
inc
mov
orl
add
xchg
push
out
jge
jne
inc
sbb
jle
mov
int
int
jbe
imul
jae
pushf
pusha
mov
push
inc
mov
movsl
xchg
mov
ds
pushf
imul
push
mov
jecxz
xchg
sbb
sub
mov
or
cmp
test
ds
sbb
mov
and
and
pushf
pop
call
mov
dec
sbb
hlt
shrl
lea
gs
add
xor
and
insb
gs
outsb
cmp
adc
push
movsl
xorl
enter
arpl
jl
sbb
adc
ds
bnd
out
sahf
add
cld
es
adc
push
dec
and
test
jb
mov
xchg
int
cld
dec
inc
rcrl
outsl
adc
aad
xor
push
sahf
mov
mov
adc
lock
lods
pop
or
imul
mov
push
scas
loopne
inc
xor
fstl
hlt
int3
jns
out
or
das
mov
nop
icebp
loop
dec
sbb
push
in
cli
add
and
pop
mov
in
pop
add
pop
outsb
dec
xor
jns
xorb
inc
es
mov
jg
mov
je
dec
lahf
xchg
add
clc
out
xchg
inc
out
pop
jae
outsb
or
mov
jp
scas
dec
cmp
int3
add
add
mov
pop
rcrb
pop
adc
scas
jge
ret
jmp
and
cmc
imul
jmp
push
cld
pop
and
js
test
add
mov
insb
test
mov
adc
addl
inc
jp
repnz
aad
inc
pop
shlb
test
fwait
lret
xor
out
icebp
dec
push
out
mov
push
movsb
dec
aam
pop
out
jmp
cli
push
pusha
xor
inc
jnp
jo
pop
push
mov
shl
subb
test
mov
or
fcmovnu
adc
addr16
insb
cmp
mov
insl
xor
sbb
or
data16
jnp
cmp
adc
repz
xor
pop
xchg
ret
push
dec
mov
sbb
scas
jnp
push
lret
xchg
xor
and
cmp
lods
jb
and
mov
mov
std
sahf
or
dec
aad
mov
mov
jbe
add
sti
arpl
and
xor
aas
xchg
or
sbb
xor
pop
jno
jb
inc
add
pop
imul
idiv
and
mov
push
movsb
adc
xchg
movsbl
push
push
ja
xchg
or
jnp
sbb
stos
fldl2t
lahf
lds
sbb
pushl
mov
mov
adc
inc
cli
fildll
out
pop
in
addr16
xchg
mov
mov
or
ss
dec
loop
or
andb
sbb
xor
scas
aad
jl
pushf
pop
jl
pusha
stos
cmp
rcll
stos
sub
push
stc
ret
scas
or
push
adc
xchg
jmp
xchg
cmp
mov
inc
fbstp
lods
dec
xor
jne
stos
push
and
or
repnz
sub
mov
inc
fisubrs
sub
int
jmp
or
inc
push
in
mov
aam
xor
push
lods
lock
test
xchg
pop
imul
lret
pop
aad
dec
sub
in
orl
mov
pop
pop
icebp
pop
or
mov
push
mov
in
adc
cmp
aaa
addr16
lret
popa
ret
push
test
mov
mov
xchg
pop
or
xor
inc
int
jno
push
mov
add
aam
rcr
incb
mov
dec
mov
pushf
push
ficomps
cmpsb
push
sub
enter
mov
xor
daa
das
imul
xchg
scas
inc
test
xlat
setne
mov
push
lods
jbe
cld
mov
in
xchg
mov
mov
xor
pop
in
jle
mov
jns
or
scas
test
mov
popa
fstpt
adc
aas
test
dec
cmp
mov
mov
xchg
lcall
cmp
stos
sbb
movsl
gs
mov
jmp
loope
push
das
sub
mov
cmp
mov
xchg
adc
add
popa
stos
sub
enter
das
jae
xor
mov
jg
test
ret
sbb
jmp
xlat
inc
pusha
jns
xchg
fildll
test
sbb
mov
push
mov
ret
and
dec
sbb
or
jge
pop
or
or
rcrb
out
cli
add
mov
movsl
testl
lods
jne
rorb
or
repnz
cmpsb
data16
xchg
test
add
ret
cmpsl
mov
cld
insb
xor
iret
xchg
in
add
nop
mov
sti
icebp
out
fidivrs
push
mov
ss
jmp
pop
lock
das
pop
or
mov
dec
lods
xlat
pop
fwait
cmp
or
popa
push
popf
setbe
dec
xor
add
movsl
dec
shr
and
imul
sbb
pushw
ljmp
xchg
push
negl
nop
int
lcall
addr16
pop
pop
dec
aas
test
xor
mov
xchg
adc
dec
loopne
insl
lcall
dec
mov
sub
and
js
pop
sub
mov
xor
imul
cmp
aad
ret
cmpsb
ds
adc
inc
sti
cli
loope
out
sub
adc
fstpt
lods
dec
sbb
and
pop
adc
or
sbb
les
jmp
stos
int
loope
cld
nop
push
inc
pop
sub
sbbb
imul
mov
dec
ljmp
ds
shl
dec
addr16
dec
lea
inc
push
or
out
pop
mov
insl
stos
push
mov
sbbb
pop
sahf
jmp
negb
mov
je
inc
jb
xor
add
mov
adc
pop
loop
andb
arpl
xor
xor
pushf
jecxz
fwait
add
mov
pop
xor
imul
mov
add
mov
dec
insb
or
ds
fisubrs
lods
push
push
sbb
xor
enter
jle
push
out
jno
mov
cmpsl
out
sbb
movsl
jmp
std
lret
inc
out
and
jecxz
xchg
pop
and
xchg
popf
xor
xchg
jno
or
mov
sti
int
push
xchg
add
adc
lea
je
fcoms
push
pusha
or
ljmp
lcall
xchg
aas
push
test
jge
sub
hlt
mov
mov
mov
rdpmc
sahf
pop
cld
mov
pop
fcmove
cld
or
andl
aad
dec
sub
out
ret
lea
dec
arpl
cmp
aad
mov
mov
cmp
jb
or
pushf
sub
out
mov
cmp
pushf
jge
jb
push
shrb
aad
mov
push
pop
cmpsb
push
stc
cmp
mov
dec
pop
add
jp
push
or
stos
jae
xchg
roll
cmc
push
sub
stos
push
loope
pop
insb
and
aam
cmp
adc
pop
lods
cmp
std
push
xor
fcompl
xchg
and
stos
dec
sbb
ss
xor
xchg
cmpsb
mov
scas
jle
cld
mov
lods
ret
data16
stos
scas
xchg
inc
filds
add
pop
mov
pop
add
and
out
jge
or
int
cmp
mov
jmp
ret
mov
aad
addb
lcall
js
and
loop
sahf
push
push
adc
mov
xchg
jle
mov
sbb
or
clc
loop
clc
mov
cmp
cmpb
mov
test
mov
das
xchg
cli
enter
push
ret
clc
test
popw
stos
lcall
addr16
xchg
push
ret
pushf
mov
and
mov
jecxz
int3
xlat
or
jb
aaa
les
test
cmpsl
jp
adc
mov
gs
jle
dec
enter
aas
push
inc
add
xor
mov
mov
mov
jge
rorl
std
dec
xchg
ret
in
inc
nop
sub
inc
into
sahf
push
jb
cld
cld
test
lret
xchg
jo
das
mov
sahf
pop
int
out
and
adc
adc
lea
dec
mov
adc
fs
outsl
mov
push
insl
in
push
repnz
out
mov
das
xlat
jl
mov
push
clc
cmp
inc
mov
xchg
lcall
sahf
into
outsb
clc
mov
test
or
xchg
punpckhbw
mov
mov
push
push
loope
mov
inc
arpl
jmp
mull
adc
lods
lds
and
aam
ret
in
dec
lods
pushf
das
popa
push
adc
aam
sbb
cmp
cs
test
leave
sub
jmp
jmp
jo
fiaddl
and
aaa
inc
or
mov
mov
ljmp
sbb
inc
push
mov
pop
mov
hlt
flds
loop
daa
loopne
mov
lret
ss
loopne
fisttpll
in
sahf
aas
ret
inc
jmp
mov
hlt
cmpsl
ljmp
pop
test
shrb
and
clc
enter
sbb
daa
bound
cmpsl
adc
scas
xchg
cmp
pop
aad
jmp
nop
jnp
xlat
add
jge
sub
jns
push
mov
or
push
scas
testl
nop
sar
lret
push
pushf
ja
ret
cmpsl
call
or
cltd
mov
jbe
sub
adc
and
pop
adcl
or
mov
loop
or
dec
in
mov
cs
mov
or
jg
cmovge
ja
cmpsl
or
jmp
bound
les
and
jno
jl
and
pop
jns
sbb
push
arpl
fsub
mov
adc
push
cmpsl
rcll
mov
xchg
outsl
xchg
imul
inc
jno
xor
cmp
push
lods
mov
ljmp
pop
pushf
or
and
push
ss
int
pop
rol
jmp
jns
add
out
sub
sub
lods
in
int3
addr16
mov
mov
pop
imull
inc
sbb
jmp
test
mov
sbbb
push
sarl
ja
mov
imul
pop
add
js
insl
pop
mov
add
push
imul
cmp
dec
or
jne
mov
push
in
push
pop
inc
pop
int3
in
insl
cmp
ss
mov
cmp
ljmp
outsb
adc
dec
xor
test
js
repz
call
push
clc
mov
or
enter
pop
loope
adc
adc
rcrb
int3
or
test
adc
jl
cmpsb
nop
cld
add
xchg
jo
pop
mov
push
repz
arpl
or
adc
xor
pop
stos
sub
cwtl
mov
fisubl
mov
out
pop
cmp
cmp
pop
test
ds
in
mov
mov
push
xlat
mov
jae
mov
dec
and
lock
int3
aad
inc
stos
mov
xchg
cmpb
addb
in
mov
ret
add
add
imul
aam
es
stos
adc
int3
mov
inc
loop
sub
push
mov
and
call
andb
cld
mov
sbb
push
popa
jno
repz
lret
movsl
std
leave
cmpl
add
xchg
jg
frstor
fiaddl
jb
pop
pop
cmp
sub
ret
jle
leave
sbbl
xor
xchg
ljmp
aaa
cmp
dec
les
dec
push
mov
mov
imul
pop
jns
fnstenv
movsb
mov
data16
cmp
shl
rclb
inc
lcall
pusha
ja
hlt
jbe
push
ds
idivl
scas
sbb
sar
insl
jnp
push
inc
jo
xchg
adc
mov
scas
sbb
push
mov
pushf
hlt
mov
mov
stos
outsl
int
xchg
mov
shrl
movsl
lret
sbb
xchg
adc
aad
rol
call
ja
and
pop
mov
out
test
test
or
push
mov
jp
mov
jae
mov
aas
mov
or
cmp
xchg
mov
icebp
lret
notl
cmp
dec
sbb
inc
int3
xchg
adc
dec
or
gs
popa
cmp
xor
imul
pop
pop
jmp
je
inc
iret
or
mov
dec
jg
test
popa
or
stc
call
nop
mov
imulb
sti
fstl
push
adc
mov
mov
and
test
ret
movsl
pop
lahf
aam
fs
jle
jp
cwtl
mov
dec
push
in
pusha
pop
cmp
mov
jo
mov
sub
data16
add
jmp
loopne
cmp
fidivrs
fcomps
imul
push
ret
aas
mull
lea
notl
test
and
pop
mov
xor
in
mov
adc
mov
std
stc
mov
jge,pt
xchg
dec
cmp
mov
jmp
jp
add
xor
sub
jmp
hlt
add
push
inc
add
xorl
data16
cmp
dec
cmc
jg
jo
imul
sar
and
xchg
dec
insl
cmp
xor
int3
aam
ss
mov
inc
fnstsw
jae
aad
xchg
push
in
sub
mov
ret
dec
inc
inc
or
mov
ljmp
loopne
cli
ficomps
test
arpl
int
pop
mov
cmp
dec
jge
mov
jle
insl
or
dec
sub
add
cltd
sbb
addl
stos
into
mov
lcall
fdivrs
inc
pop
out
idivl
rol
jae
xchg
adc
dec
lahf
push
aas
add
adc
hlt
cltd
addb
pop
sarb
sahf
mov
and
lods
xor
imul
fstl
dec
fnstcw
push
lret
ja
jnp
dec
gs
pop
sub
rorl
fildll
call
stos
mov
mov
cmp
shll
ret
xor
cwtl
jno
cld
cmp
jmp
jno
aam
cmp
out
lahf
shll
lcall
fsts
fbstp
addr16
mov
fs
jae
cmp
and
jb
in
sarl
imul
ja
add
and
push
sub
stc
arpl
dec
in
push
popa
jecxz
int
lea
and
orl
lcall
and
repz
pushf
mov
movsb
mov
fisubl
mov
push
lret
in
lds
jp
inc
cs
stos
in
lahf
sub
pop
mov
mov
fwait
jp
pop
dec
aas
and
add
and
push
popa
icebp
in
mov
push
mov
adc
daa
popa
pop
cwtl
sbb
push
sub
push
shll
leave
xor
add
mov
inc
jmp
inc
ja
int3
addl
arpl
inc
dec
insb
call
jnp
cmp
dec
nop
je
inc
mov
xchg
inc
test
pop
and
cwtl
or
mov
push
push
mov
icebp
xchg
jg
lret
movzwl
adc
inc
push
mov
add
and
lcall
lea
mov
pop
jmp
add
push
add
add
lret
jg
cltd
xchg
stos
leave
cltd
fst
xchg
es
aas
nop
xchg
fidivrs
sbb
lea
jo
mov
int3
int
in
mov
imul
mov
push
pop
hlt
adc
and
ret
addr16
sbb
mov
ficomps
mov
jno
popa
fs
dec
aas
lcall
xchg
ficoml
je
mov
mov
movsl
or
in
cmp
inc
fbld
pop
mov
aam
adc
cmp
cmp
je
js
sbb
hlt
icebp
test
fwait
dec
pop
in
dec
add
inc
pop
pop
cmpsl
scas
xchg
adcl
adc
dec
popa
jmp
add
out
pop
fs
sub
call
cmpsb
inc
bound
lods
aad
mov
mov
hlt
push
push
inc
push
mov
mov
pop
sub
adc
xchg
insl
push
sbb
outsb
fnsave
pop
lret
cld
sahf
mov
jno
xor
adc
repnz
out
and
inc
je
lea
shll
rcr
mov
inc
mov
xor
rolb
push
enter
inc
sub
or
pusha
mov
pop
aaa
adcb
insl
std
mov
push
out
push
aas
out
int
or
dec
push
mov
pop
mov
mov
cmpsl
lds
stos
mov
pop
insl
sbb
mov
fbstp
es
cmpsl
cli
std
sub
cs
shl
and
pop
test
pusha
fisttpll
xor
scas
ret
nop
das
dec
mov
sbbl
movsb
js
lret
or
mov
shl
jge
push
sbb
into
sub
push
dec
pop
ja
xor
inc
sbb
cmp
jge
dec
das
pop
or
mov
loop
push
loop
fsts
push
loopne
pop
lcall
cmp
jp
pop
push
das
mov
or
int
das
lea
push
mov
insl
mov
xor
mov
mov
inc
inc
adc
add
stc
and
cmp
es
or
xchg
cmpsl
aas
jg
mov
loopne
loop
cwtl
jmp
roll
stos
pop
and
push
and
ret
mov
xchg
lods
mov
inc
ffreep
addr16
stos
roll
mov
or
popa
jns
adc
insb
mov
fisubl
push
test
mov
lock
sbb
pusha
add
imul
adc
and
or
cmc
sub
shrb
scas
mov
bound
lret
pop
xchg
test
imul
jg
sbb
mov
into
mov
dec
mov
shrl
mov
xor
mov
inc
imul
clc
ss
cmc
cltd
and
scas
imul
and
inc
mov
data16
lods
add
repnz
leave
outsb
xchg
cmp
test
jg
mov
mov
pop
jns
sahf
pop
les
pop
inc
sbb
outsl
addb
cs
sbb
ret
imul
inc
adc
shlb
push
sbb
flds
movsb
movsb
dec
data16
mov
in
pusha
fwait
dec
inc
xchg
ljmp
lds
arpl
or
sub
cmp
push
loop
sub
sbbl
flds
insl
jnp
enter
out
cmp
mov
psubsb
push
in
mov
jge
hlt
push
and
test
inc
or
add
dec
and
test
das
cmp
inc
mov
shrb
in
and
outsb
insl
push
shl
std
fisubrl
scas
push
setl
dec
pop
and
dec
push
jbe
gs
rclb
lock
insb
mov
xchg
in
dec
add
push
mov
roll
mov
nop
jne
ljmp
jge
pop
xchg
aas
rorl
lds
sub
lahf
add
xchg
jmp
xlat
jg
les
mov
loopne
jne
mov
leave
int
fbld
stos
jmp
leave
and
dec
fstpt
outsl
arpl
mov
insb
je
movsl
ds
lods
arpl
jns
cli
les
mov
pop
fldl
cmpsl
add
lahf
mov
lcall
pop
jge
inc
lock
sub
xchg
adc
scas
add
hlt
xchg
push
pop
ds
popa
mov
mov
subb
popf
in
mov
movsb
jl
repz
pop
push
push
xchg
stos
enter
out
insb
out
fcom
sti
or
cmpsl
nop
loope
loopne
jns
inc
cli
adcb
pop
cltd
int
cli
fimull
adc
or
inc
jns
aad
dec
stos
call
push
inc
inc
push
or
inc
jmp
xchg
ja
in
mov
pop
scas
imul
sbb
lret
les
jge
add
nop
test
lret
outsb
arpl
daa
out
cmpsb
mov
mov
add
jmp
xor
pop
cmp
cmp
ss
lods
test
sbb
sub
xchg
xchg
push
data16
imul
cmpsl
or
sub
mov
dec
xchg
cli
push
mov
push
clc
mov
xchg
lret
pop
sahf
insl
sub
or
daa
or
cmpsl
mov
idiv
aas
push
lcall
test
inc
jbe
jmp
inc
lock
pop
fcmovbe
add
push
call
pop
lods
sbb
inc
xor
nop
push
lds
mov
aas
fwait
mov
xchg
mov
push
cmpb
outsl
xor
test
xlat
and
adcb
mov
mov
or
push
or
ret
scas
dec
adc
hlt
lcall
adc
lret
xchg
repz
mov
in
imul
daa
inc
scas
push
lds
fistl
lcall
inc
scas
das
and
xor
adc
add
test
jbe
xor
std
dec
pop
clc
fs
in
push
add
cs
sbb
xor
fstpt
repz
or
cmp
out
mov
jp
jb
rol
pop
xor
in
jo
mov
mov
push
xlat
jg
das
cmp
pop
sub
xchg
or
mov
sub
mov
mul
icebp
out
adc
pop
mov
cld
lods
idiv
pop
mov
cmp
rolb
enter
inc
aaa
hlt
adc
mov
sub
hlt
and
nop
data16
shll
jb
int
mov
add
pop
das
add
loopne
adc
push
gs
sub
js
cmp
popf
jnp
xchg
in
sbb
push
xor
mov
and
in
jo
cmp
inc
outsl
in
in
mov
test
or
enter
pusha
push
loope
rcrb
addr16
sub
das
into
push
repz
xchg
popa
jno
pop
fdivrl
das
enter
into
pop
mov
inc
cmp
ret
ljmp
mov
mov
or
push
or
jle
cmp
orl
inc
sbbl
lea
jns
lret
jb
rorb
int
xchg
rolb
cmpsl
add
adc
dec
clc
popa
test
sahf
insb
sub
out
mov
mov
sbb
enter
cld
add
outsb
jmp
add
mov
dec
cli
stos
andb
in
xor
push
ret
lret
jp
xchg
test
in
pushf
push
push
fiadds
inc
pop
in
cwtl
add
xor
or
or
arpl
pop
lahf
adc
lret
subl
pop
in
dec
fisubrs
adc
aas
push
cld
xchg
mov
push
imul
or
ljmp
mov
mov
jno
outsb
sub
fwait
sbb
dec
and
sti
dec
loop
shll
nop
lods
xchg
dec
pop
test
mov
cmc
loop
ficompl
mov
cmp
lahf
lret
mov
stos
xorb
add
xchg
in
sbb
addr16
stc
ljmp
mov
mov
mov
add
mov
movsl
fs
mov
into
mov
cmp
push
sub
jne
xchg
repz
repz
lea
jb
adc
dec
ja
mov
xchg
lcall
repz
fucom
pushf
incl
add
and
mov
shl
mov
jg
lods
cmpsl
mov
loope
lods
dec
cmpsb
xorl
add
movsb
fistpl
mov
stos
popf
adc
push
aaa
call
loope
nop
lret
shll
cmc
mov
dec
adc
ficompl
stos
cmpsl
subl
push
jo
or
push
loopew
into
cmp
adc
pop
dec
mov
jg
mov
out
aas
pop
and
leave
cmp
loope
aad
mov
xchg
xlat
cmpsl
inc
ja
popf
adc
inc
adc
enter
icebp
into
in
push
iret
xchg
mov
std
cmp
push
ret
nop
sbb
sub
xchg
inc
lcall
repz
pop
pop
popa
jbe
icebp
and
in
dec
adc
loop
popf
jmp
mov
push
push
push
inc
mov
pop
dec
daa
mov
xchg
jno
mov
test
jb
or
imul
int
sub
hlt
aaa
fisubl
aad
jg
xchg
pop
xor
fistpll
je
stos
and
push
jb
test
cmp
pop
mov
imul
push
int3
call
roll
hlt
add
xor
sub
xchg
out
movsb
ret
rol
cmp
movsl
iret
push
jge
xor
cs
inc
xor
inc
jg
ficomps
sbb
and
jle
and
dec
pop
js
xor
mov
leave
mov
cmp
insl
xor
fdivrs
pop
ficomps
icebp
sbb
std
nop
add
shrb
xlat
push
rol
nop
inc
pop
jl
insb
lds
lods
pop
sub
dec
pop
fs
stc
xor
es
sahf
enter
imul
or
add
fisttps
cltd
mov
cmpb
push
xor
repnz
scas
xor
mov
nopl
mov
sti
stc
stos
call
adc
push
call
pop
jmp
mov
mov
mov
mov
movsl
push
sub
sbb
jnp
insl
out
je
mov
insl
dec
sub
pop
push
ja
jbe
mov
jo
or
mov
ficomps
fsqrt
cmp
adc
fstps
aam
or
les
dec
xchg
imul
push
das
add
shrl
stos
pop
into
jp
pop
stos
jno
fsub
fwait
hlt
inc
mov
scas
sbb
dec
das
adc
lret
push
push
jbe
sar
push
pop
pop
xchg
pop
out
fs
jecxz
sbb
push
mov
mov
sub
dec
fimull
xor
out
das
ljmp
or
sahf
dec
cmp
les
push
dec
scas
sub
hlt
fldlg2
movsl
into
push
pop
pop
fsts
pushf
adc
and
sub
xchg
cmp
out
repnz
lea
cmp
dec
loop
adc
je
pop
sub
insb
call
insb
mov
int
sbb
push
ss
cmp
popf
mov
cmp
push
clc
mov
pop
je
in
and
test
mov
hlt
mov
mov
je
inc
test
in
xor
sub
aas
mov
cli
mov
and
ret
addl
push
scas
mov
xor
cs
mov
icebp
mov
gs
setns
pop
sub
mov
mov
mov
cld
jne
and
mov
add
and
insb
pop
mov
xchg
pop
sbb
cmc
leave
test
add
aas
icebp
dec
inc
sarb
enter
imul
in
mov
notl
out
dec
nop
jg,pn
hlt
pop
jp
and
cmc
jns
and
inc
jmp
out
pop
in
xor
out
outsb
loopne
mov
xchg
cltd
and
retw
jle
lea
lock
or
leave
ret
push
lret
sub
hlt
pop
and
push
xchg
sbb
push
xchg
dec
lret
mov
jnp
int
dec
pop
faddp
into
xchg
mov
hlt
jae
popf
sbb
or
pushf
sub
cld
imul
ja
inc
aas
sbb
and
mov
jg
jecxz
loope
jg
call
fiadds
xchg
lret
jecxz
dec
mov
in
std
sub
mov
cmp
push
mov
int
cmp
dec
mov
and
jge
stos
hlt
or
imul
cli
jle
scas
and
push
cmp
xchg
sub
shlb
xor
fmuls
cli
mov
sub
testl
mov
add
inc
mov
cmc
add
dec
xchg
push
test
mov
out
repz
mull
mov
cwtl
jbe
jg
daa
shr
sbb
paddd
xlat
xchg
xor
stc
jns
rol
in
push
pop
mov
mov
cmp
push
testb
jbe
or
je
pop
ja
cmp
sbb
cmp
push
sbb
jge
inc
sub
aad
cli
mov
movsl
or
idiv
dec
pop
cmpsb
loop
xlat
xchg
loope
ud0
fdivrl
lds
cmp
inc
xor
jle
adc
imul
push
lds
pop
mov
lods
inc
xchg
dec
popf
outsb
lods
cwtl
jo
test
in
jns
fnstcw
mov
negb
push
ljmp
inc
push
cmp
pop
sbb
cmpsl
add
mov
repz
mov
lcall
xchg
add
repnz
nop
inc
jge
push
pop
inc
xor
lahf
loope
xchg
loop
out
mov
sbb
loope
jb
mov
mov
cmp
or
push
mov
or
dec
sarb
jecxz
sub
dec
jo
adc
add
adc
mov
outsl
popf
sub
xlat
lods
or
dec
cmpl
mov
xchg
dec
ret
push
cmp
les
in
push
scas
pop
mov
in
dec
dec
inc
inc
xor
cmp
pop
cmp
and
scas
mov
adc
cmp
loope
js
mov
lods
adc
jge
inc
push
push
add
dec
movsb
aad
lret
call
pop
rcl
loopne
lcall
mov
xchg
jmp
hlt
sbb
adc
fs
nop
and
mov
data16
sbb
sub
jb
int3
in
in
fs
ss
lods
fisubrs
mov
adc
inc
sub
cmp
or
aas
mov
jp
ja
js
insb
inc
jge
shrb
je
insl
scas
sbb
aaa
inc
xchg
jle
out
mov
xor
inc
rcl
cmp
mov
movsb
mov
adc
push
xor
jbe
iret
sbb
xor
cmp
pushf
frstor
dec
inc
lods
es
stos
jns
xchg
and
pop
cmp
out
fldt
not
xchg
mov
gs
fnsave
fldl
cmpsw
mov
stc
sub
idivb
nop
idivl
movsl
mov
ret
leave
aad
mov
dec
jnp
xlat
lds
add
or
rorb
shl
std
mov
lea
and
or
or
iret
jge
ljmp
loop
push
scas
mov
test
mov
jmp
cmpsb
lock
and
pop
xlat
adc
js
pop
push
xor
mov
es
mov
faddl
sarb
pop
bnd
mov
mov
cld
lock
mov
test
sbb
mov
pop
or
sub
adc
into
mov
xchg
lahf
js
leave
popa
cmp
loopne
in
stos
rorb
in
cli
std
jo
icebp
mov
xor
xor
fnstcw
mov
mov
xlat
pop
xchg
pop
jbe
fidivrl
mov
jp
inc
cmp
les
jns
aaa
stc
pusha
popl
and
add
inc
mov
push
jge
jae
mov
sahf
ss
mov
push
fadds
icebp
push
test
ss
rolb
mov
jne
or
sbb
lea
xor
add
dec
and
lahf
rcrl
inc
in
mov
push
fnstcw
xor
pop
adc
scas
test
push
test
imul
jne
sahf
mov
test
lea
lret
and
or
sti
xchg
aas
add
push
push
mov
push
lea
test
clc
pop
push
push
lcall
ds
fildll
loopne
mov
dec
add
xor
enter
popf
dec
mov
inc
cmp
scas
popa
stos
rclb
push
scas
cwtl
lds
add
inc
shlb
ret
out
mov
call
xorl
mov
out
xchg
sub
dec
lock
pop
adc
lahf
and
xor
xchg
xchg
lret
cltd
cmpl
push
rolb
outsl
pusha
mov
movl
in
pop
loope
push
dec
xchg
call
in
add
jno
sbb
in
mov
mov
inc
rdpmc
repz
mov
divl
and
ds
les
inc
rorl
adc
mov
imul
arpl
push
leave
movsl
sub
addr16
out
sub
inc
adc
add
sbb
mov
enter
mov
inc
sub
jecxz
stc
sbb
data16
das
xchg
adc
pop
fcomi
xor
cmp
imul
into
mov
add
push
in
mov
flds
mov
dec
fdivr
mov
xor
cmp
inc
rolb
pop
out
jge
leave
das
dec
sub
jle
movsb
out
rorb
idivb
into
xchg
sbb
fidivrl
js
pusha
rorl
mov
xchg
cmp
jne
sbb
and
lahf
ret
ffreep
mov
adc
in
sub
and
xor
mull
or
arpl
std
dec
hlt
xor
outsb
fsubrp
and
sub
out
sbbb
rorl
jle
mov
push
loope
and
push
sbb
in
icebp
loope
mov
add
jnp
aad
or
adc
std
inc
daa
je
test
xchg
sbb
movsb
ds
xchg
lret
cltd
fsubrl
push
dec
jge
dec
scas
mov
sti
sbb
xor
aad
push
outsl
cmpsl
cmc
jmp
mov
mov
adc
movb
rclb
cmp
inc
pop
mov
inc
and
mov
cs
rolb
lret
sub
mov
jmp
in
or
dec
dec
add
sbb
es
mov
jb
inc
lcall
hlt
dec
pop
andb
stos
push
insb
cltd
ja
lahf
aam
dec
mulb
decb
rorl
adc
cmp
out
out
loope
cli
sti
push
xor
sahf
dec
andb
lcall
xlat
out
cmpsl
sbb
add
lcall
notl
fsubrs
adc
shll
push
leave
daa
jecxz
sbb
dec
cmc
jg
ljmp
add
ret
aam
sbb
test
icebp
popf
out
sahf
jle
sub
cli
aad
inc
xor
mov
shl
push
sub
int
clc
pop
or
jns
out
push
cmpsb
pushf
sbbb
mov
dec
sbb
psubusw
xchg
popa
dec
mov
aas
mov
repnz
bound
jg
repnz
and
xchg
mov
and
shlb
addl
push
rorb
aam
mov
pop
fcmovb
shl
or
stc
adc
pop
sub
inc
xlat
leave
cmc
jg
xchg
jnp
add
pusha
pop
push
int3
dec
cmpsb
xor
xchg
sbb
dec
xchg
lret
dec
xchg
or
in
jnp
xchg
mov
or
div
mov
cmp
lea
or
xor
call
lea
ljmp
pop
sub
ret
iret
jmp
xorb
ret
and
or
and
xor
jl
push
in
push
decl
cs
testb
mov
jbe
int
iret
aam
out
mov
dec
xor
shlb
pop
fucom
mov
shrb
sbb
adc
fisttpl
lahf
mov
call
sbb
mov
fcmovnbe
ss
lea
fcoms
arpl
pop
call
pop
lock
out
shrl
arpl
pop
push
cmc
loopne
repnz
inc
add
push
fmull
rol
mov
arpl
push
or
push
xor
cmc
dec
aas
insb
sub
push
push
adc
out
dec
xchg
sub
mov
jo
out
loopne
outsb
fwait
aaa
lods
cmp
cltd
ss
int
and
in
das
sub
push
or
cmpsb
adc
scas
jb
mov
or
leave
mov
mov
mov
pop
insl
dec
xchg
sub
cmovle
mov
xor
xlat
dec
leave
inc
and
and
sbb
sbb
iret
xorb
add
outsb
movzbl
inc
dec
sub
pop
lret
les
cltd
adc
repz
mov
ret
lahf
add
bound
or
stos
in
pop
ss
jmp
jne
or
push
js
iret
pop
xor
push
fidivl
ret
xchg
out
lock
push
jmp
lahf
xchg
sti
mov
sbb
cvtpi2ps
rorl
add
insb
clc
cmp
int3
lret
cmpsb
jle
jnp
push
js
ljmp
adc
sub
mov
int
or
push
sub
mov
scas
call
ja
cmp
xchg
loop
inc
fldl
out
add
jnp
aam
ljmp
cld
jmp
adc
sub
out
sbb
scas
sub
rcl
xchg
das
cmp
inc
pop
jecxz
cltd
sbb
test
xchg
loop
jo
mov
sub
cli
fidivrs
shr
cmpsb
jo
mov
cmc
cli
inc
popa
pop
sbbl
adc
cmp
or
mov
mov
fistpl
push
jbe
xchg
rcrl
cmp
imul
mov
dec
repnz
aaa
push
mov
push
pop
scas
pop
bound
inc
inc
aam
cwtl
pop
in
inc
push
cmpsl
test
addr16
shlb
pusha
or
dec
sub
xorb
sbb
out
push
stos
jmp
out
out
movsl
out
lea
das
lods
pop
jae
das
popa
jle
sub
dec
mov
movsb
pusha
xor
sbb
xor
xchg
and
push
mov
push
inc
jecxz
or
inc
cmp
add
mov
in
jbe
cld
outsl
and
pop
mov
cmp
or
xchg
xchg
ficomps
and
pop
jns
xor
mov
or
cmc
leave
sub
push
mov
lahf
mov
mov
rcrl
das
push
in
add
cwtl
jmp
cmpsb
call
movsb
fdivp
insl
add
mov
fistpl
xor
and
mov
pusha
mov
cli
les
mov
test
jnp
and
jp
or
dec
imul
aas
xchg
xor
ljmp
xchg
adc
adc
pop
andl
clc
lret
loope
mov
jle
jae
ficompl
inc
clc
nop
pop
lea
stos
fbld
or
mov
jmp
push
test
fdivrs
mov
scas
mov
or
cld
push
adc
sbb
addb
ds
add
outsl
adc
fisubrl
pop
mov
cmc
mov
sti
lods
add
ljmp
xchg
xlat
ja
inc
mov
xor
jbe
xchg
pop
negb
mov
vpackuswb
sbb
mov
in
dec
fninit
pop
movb
sub
jae
stc
mov
cmpsl
jb
xorb
lret
or
mov
mov
loope
jl
mov
ja
lock
xchg
and
outsl
pop
and
shr
mov
adc
push
dec
jae
pop
dec
cmp
ja
loopne
push
dec
lds
cmpsb
rolb
adc
cmpsl
clc
inc
rorl
jno
push
pop
fucom
sub
into
lea
aam
mov
push
push
jne
int3
bound
sub
adc
mov
mov
lret
das
popf
sub
std
insl
pop
pop
pop
and
fnstsw
add
sub
loope
in
and
ds
mov
dec
push
dec
jo
aam
gs
mov
xchg
push
frstor
cs
adc
lods
pop
cmpsl
jmp
jge
cltd
jle
sub
adc
xor
sub
sahf
mov
lahf
repnz
add
fsubrs
fwait
push
sbb
add
divb
mov
aam
cmc
push
add
fcomps
inc
in
dec
pop
jo
mov
push
cmp
or
adc
push
jecxz
add
sbb
ss
ja
adc
push
cmp
jbe
mov
popa
fisubs
movsl
daa
lods
xor
and
xor
dec
jbe
mov
loope
or
jnp
and
add
movsb
popf
sub
shll
pop
xchg
push
in
inc
pop
mov
inc
mov
push
call
inc
cmp
pusha
add
imul
fcmovne
mov
mov
dec
test
test
call
outsb
xor
mov
jno
clc
movsb
jl
lds
shl
aam
lret
and
loope
adc
xchg
fidivrl
dec
adc
shl
push
jmp
lods
int
push
mov
cmp
and
cmp
jbe
and
inc
ja
mov
mov
jp
pop
popa
popf
icebp
jae
cmpsl
mov
mov
into
push
cmp
push
aam
add
cwtl
push
data16
add
data16
xor
dec
inc
outsl
sbb
int
out
xor
js
fisubrs
sub
in
jge
hlt
sbb
shl
adc
xor
or
pop
ds
sbb
sbb
popa
sub
cmc
out
sub
dec
adc
fadd
fmull
xor
roll
inc
fstl
xchg
push
mov
fcomps
test
inc
bound
jecxz
andb
sahf
outsb
ret
sti
sbb
outsl
adc
push
cmpsl
or
xor
xchg
test
mov
dec
popf
iret
cmpsl
movsl
dec
xchg
lods
es
mov
imul
xchg
in
nop
adc
mov
adc
addr16
and
stos
pop
add
pop
mov
or
hlt
dec
inc
sub
std
pop
push
pop
insb
xlat
mov
in
ljmp
mov
pop
outsl
je
out
push
jp
lea
cs
inc
in
add
add
call
sbb
xchg
gs
push
mov
imul
mov
jne
sbb
out
dec
lods
push
mov
inc
mov
hlt
push
lods
adc
or
sbb
sbb
dec
push
jno
mov
cmp
out
mov
mov
push
jle
daa
call
rol
sbb
dec
ss
pop
add
lret
in
jno
xchg
mov
xchg
enter
mov
cld
pusha
mov
leave
lret
cmp
test
fdivrl
je
aaa
dec
pusha
mov
xor
cltd
std
data16
pop
fcmovb
pop
popa
mov
in
cmc
sbb
push
in
pop
mov
mov
push
imulb
xchg
add
arpl
ds
adc
in
subb
mov
lods
pop
add
or
dec
int3
mov
cwtl
inc
pop
jg
in
dec
popa
mov
dec
in
outsl
mov
cmp
mov
pop
add
insl
mov
mov
daa
data16
jp
fwait
rorl
sbb
test
jg
inc
dec
mov
cs
outsl
sbb
jmp
mov
pop
and
pop
std
test
mov
out
stc
dec
cltd
cltd
shlb
cld
xchg
fst
xchg
jecxz
adc
test
sub
fwait
xor
jnp
imull
mov
sbb
daa
loop
call
repnz
psrlw
testb
dec
jg
test
pop
pop
addl
cmpsb
dec
mov
cmp
outsl
lea
pop
leave
test
pop
adc
scas
xchg
mov
add
add
dec
aam
outsb
mov
sbb
sti
sbb
sub
scas
stos
pop
adc
cmp
add
xor
cmpsb
jo
imul
icebp
xchg
cwtl
xchg
loopne
mov
lods
in
leave
fistpll
mov
xchg
pusha
add
mov
repnz
pop
and
push
jmp
cmp
leave
aam
mov
jl
daa
cs
mov
xor
mov
ds
jbe
sub
push
sub
pop
add
xor
mov
pop
xor
or
sub
jg
push
cmp
dec
mov
rep
pushf
rol
mov
rorb
or
xchg
mov
out
pop
fdivr
pop
cwtl
rcrb
dec
icebp
sub
pop
dec
sub
mov
cmp
stc
ds
lods
test
mov
scas
je
sub
sub
jge
rcll
cmpsb
mov
fwait
pop
jle
xchg
test
sbb
scas
loope
mov
insb
cmp
pop
rolb
ret
pop
wrmsr
popf
adc
jo
mov
filds
cwtl
mov
outsb
rorb
jp
xchg
loopne
pop
leave
inc
pop
mov
sbb
je
test
out
inc
xchg
add
cmpsl
in
pop
sbb
and
popa
test
or
loopne
dec
inc
and
popa
pop
cld
pop
leave
jg
mov
lret
mov
fwait
cmp
movl
insb
mov
out
out
sti
leave
add
push
repnz
add
clc
roll
jmp
fistpl
mov
cmp
rcll
dec
les
adc
mov
xchg
sbb
cltd
xchg
inc
add
xor
lret
or
mov
xlat
pushl
test
and
pop
sub
fildll
mov
mov
fbstp
pushf
mov
cltd
repz
add
addr16
mov
mov
inc
push
xchg
mov
xor
mov
mov
bound
adc
neg
loope
jle
ljmp
pop
fs
jnp
cmc
pushf
cltd
and
sbb
in
dec
arpl
and
jo
mov
fstl
aas
xchg
mov
push
fdivrs
in
xchg
imul
cwtl
rcl
ss
jle
in
bound
fidivrl
pop
push
repz
les
rorl
js
jmp
cmp
push
cltd
cltd
jl
das
addr16
ja
sbb
pushf
clc
xlat
insl
adc
sti
negb
jo
clc
sahf
enter
push
aaa
push
push
mov
imul
into
mov
dec
dec
fildl
mov
sub
rclb
jl
stos
in
dec
inc
ja
cld
xor
mov
mov
mov
xchg
ret
pop
mov
and
test
or
movzbl
sub
sbb
sbbb
out
xor
sub
rclb
adc
add
or
and
fs
mov
pop
mov
addl
sub
addb
xchg
xor
inc
mov
pop
loopne
fs
lds
dec
fidivl
loop
icebp
and
xchg
scas
pop
inc
jb
cmp
subb
mov
add
cmp
adc
fcoms
mov
mov
insb
and
adc
cltd
mov
stos
clc
cmpsb
sti
pop
fdivrl
add
add
mov
rorl
mov
ds
rcrb
out
int
jo
lock
push
scas
lds
sbb
out
cmp
fwait
jns
leave
scas
scas
mov
cmp
sbb
ds
jno
leave
jb
fcmove
xchg
ljmp
rcrb
loop
xor
push
sbb
popa
cwtl
nop
sub
inc
mov
inc
aas
jbe
or
mov
pop
pop
push
inc
sub
js
loopne
mov
cmp
adc
push
or
xchg
lret
jnp
nop
out
xchg
les
mov
push
or
pop
sarl
adc
lahf
pusha
cwtl
in
push
mov
inc
aas
xor
add
stos
mov
mov
rcl
imulb
ss
xor
jmp
ds
adc
mov
imul
push
add
mov
mov
mov
int3
mov
adc
inc
inc
mov
icebp
jp
jge
rcr
and
in
int3
jno
adc
les
outsb
ljmp
dec
mov
mov
jnp
aaa
imul
es
cmp
xor
pop
clc
dec
and
mov
add
xor
adc
xchg
mov
inc
insl
ja
mov
in
imul
inc
or
jo
fimull
mov
lcall
mov
xor
jb
js
cmpsl
fcmovbe
jno
or
sbb
push
and
cmp
jle
mov
testl
jbe
cmpsl
or
xlat
inc
xchg
pop
jle
mov
xor
fisubs
adcw
nop
push
push
iret
sti
xor
xor
test
lock
push
cmp
pushf
int
cmp
int3
push
xchg
sbb
fcomps
dec
mov
mov
and
or
xor
or
mov
fdivrl
lods
lods
icebp
enter
mov
sbb
and
ja
push
sub
cli
adc
fists
stos
enter
and
js
or
fistl
pop
sti
sbb
dec
and
in
mov
push
inc
dec
xor
fisubl
sub
cld
in
add
cmp
xchg
jle
inc
inc
test
cmp
xchg
dec
dec
lds
shlb
sti
cwtl
sbb
lahf
jbe
adc
sbb
dec
dec
lahf
dec
xor
call
mov
data16
cmc
mov
push
ljmp
pop
fidivl
adc
js
enter
fcompl
cmp
ffreep
inc
es
jns
add
loope
lret
mov
xorb
ficomps
mov
ficompl
mov
repz
mov
push
sub
mov
aad
out
imul
and
mov
dec
ja
cs
cli
test
cmpb
sbb
mov
pop
ljmp
sti
add
je
xchg
cltd
sbb
int
xchg
or
sarl
lret
pusha
lds
cmp
xor
hlt
enter
inc
lret
call
pop
test
mov
inc
scas
stos
xchg
cmp
sub
pop
xchg
lea
div
test
in
xchg
leave
ljmp
cld
lods
ds
je
ret
and
out
xchg
mov
dec
ss
mov
adc
cld
dec
aad
xor
mov
add
in
adc
arpl
sub
fistpll
sub
and
adc
ret
push
aad
pop
or
mov
jo
out
insl
push
frstor
mov
cmpsb
cmp
sub
cmp
ljmp
mov
fistps
mov
out
xchg
es
rolb
enter
out
or
sbbb
sbbl
stos
sbb
mov
mov
stc
cmc
cli
mov
incw
xacquire
add
sub
pop
inc
xor
stos
and
ja
stos
notl
incl
inc
cwtl
push
mov
add
ljmp
mov
inc
fisttps
int
mov
sub
pop
push
sub
lock
jae
aaa
push
out
dec
mov
adc
xor
jecxz
jg
dec
test
das
movsl
lret
cltd
dec
mov
jle
jge
pop
sub
dec
mov
test
push
hlt
jmp
xchg
bnd
and
push
mov
xor
rorl
xor
or
cwtl
lods
adc
test
addb
dec
sub
cltd
imul
addb
add
dec
cmp
dec
jb
adc
push
nop
inc
rclb
loop
mov
mov
arpl
pop
test
cmc
push
cmpsl
or
xor
cwtl
out
or
push
fs
cmp
jnp
and
js
adc
adc
cmpsl
xor
shlb
mov
mov
adc
nop
or
fucom
mov
fcoml
outsb
jae
mov
add
cwtl
lahf
and
mov
pop
imul
dec
lahf
jbe
mov
test
mov
sbb
sub
inc
pop
into
or
push
fwait
out
into
add
cltd
dec
jle
loop
pop
fidivrl
sub
lds
or
enter
inc
ljmpw
add
leave
subb
int3
out
inc
test
lcall
outsb
sub
adc
push
sbb
push
repz
lcall
and
and
xchg
or
sub
out
data16
xchg
dec
sbb
fldt
ret
and
pop
xchg
push
fsub
pop
adc
jnp
lcall
lods
push
jae
xor
loope
and
in
cld
xor
out
movsb
cld
and
push
add
orl
leave
sbb
mov
mov
aam
xchg
xchg
push
out
and
xor
jmp
or
xchg
fcmovnb
aad
mov
or
mov
xchg
dec
clc
scas
jp
hlt
pop
lock
insb
outsl
int
cmpsl
rcrb
xchg
in
push
out
cmp
lds
scas
push
mov
xor
push
jl
test
jns
pushf
mov
loope
movsl
out
out
adc
sbb
dec
mulps
popf
out
adc
sub
dec
jp
pop
in
jge
lcall
xchg
cmp
mov
in
push
jg
arpl
and
scas
push
xchg
jg
sahf
xchg
xchg
cmpsl
xor
xor
addb
mov
xchg
cmp
jno
shrl
add
shll
gs
call
sbb
push
adc
push
lcall
xor
and
mov
sub
out
sbb
pushf
test
stc
int3
push
xlat
fcmovnu
push
insl
mov
movsl
sbb
cs
or
mov
pmulhuw
je
jmp
mov
mov
mov
mov
gs
adc
xor
adc
pop
dec
push
add
in
sub
jbe
sahf
jnp
aas
testb
js
add
scas
ficoms
loopne
fwait
sub
sbb
lock
nop
lret
xchg
popf
hlt
mov
mov
sti
mov
mov
inc
mov
dec
test
pop
flds
mov
leave
aam
xchg
pop
add
inc
scas
aas
xchg
jl
push
push
daa
xor
dec
mov
or
push
jmp
mov
loop
cmc
cli
mov
faddl
lods
add
lock
cld
into
lahf
in
jmp
add
ds
in
push
addb
cmpsb
cmp
jmp
shrl
rclb
mov
dec
or
orb
sub
mov
mov
adcb
call
outsl
stc
pop
mov
cmpsl
adc
mov
push
sahf
fwait
pusha
jne
inc
dec
mov
andb
jne
int3
test
cld
dec
mov
aad
pusha
mov
xchg
test
inc
push
jns
dec
sbb
pop
xchg
mov
mov
out
popf
push
pop
lds
mov
ja
test
repz
inc
call
pop
ret
jmp
popf
pushf
mov
test
push
sti
icebp
dec
bound
and
iret
jmp
movsl
push
mov
jmp
cld
scas
xchg
xchg
push
call
icebp
das
xchg
call
loopne
xlat
dec
add
dec
mov
out
out
andb
js
and
out
stc
push
les
add
cmpb
dec
pop
bound
loopne
jno
add
add
rolb
pop
shll
imul
in
push
jbe
xor
test
inc
test
mov
lcall
sti
add
fidivrs
xchg
mov
dec
les
ds
jmp
push
cmp
aad
out
inc
mov
mov
mov
and
jl
push
nop
mov
pop
or
nop
iret
mov
fs
push
push
mov
test
and
loopne
or
insl
add
outsb
fdivrl
push
mov
shrl
push
adc
stc
push
ss
sub
pop
es
xor
movsb
andb
inc
jp
or
aad
roll
test
test
pop
dec
xchg
cmpsl
mov
or
idivl
push
arpl
sbb
rcl
push
popf
adc
xor
pop
and
inc
decb
in
decl
fildl
lods
mov
pusha
adc
xchg
dec
repnz
test
jns
pop
lret
mov
and
sbbb
in
adcl
or
mov
loopne
lea
sbb
inc
imul
mov
stos
push
gs
mov
adc
loope
mov
pop
xchg
fstl
jle
pop
xchg
fwait
lods
enter
cwtl
jns
in
and
push
dec
shl
mov
hlt
mov
and
cmpsl
pushf
fidivl
testb
cmpb
int3
push
and
es
mov
cmc
mov
insl
in
lock
aad
pop
outsl
and
imul
lods
orb
push
mov
cwtl
outsb
mov
pushf
mov
mov
out
xlat
ds
sub
roll
jg
nop
daa
stos
shrl
push
imul
and
sysexit
orl
scas
add
ret
add
gs
adc
adc
mov
and
lock
push
fwait
popa
mov
mov
adc
sub
dec
jmp
in
cmp
pop
cmp
movsl
and
inc
ret
ljmp
sbb
cmp
mov
sbb
pop
lock
push
xchg
adcb
xor
pop
xor
dec
clc
jg
sub
lret
push
lea
lret
inc
rorb
xor
xlat
andl
rcrb
dec
adc
aam
cs
icebp
shll
mov
lods
jbe
xchg
push
insl
mov
aaa
stc
mov
add
les
jmp
repz
adc
nop
mov
or
repnz
mov
push
mov
xchg
or
fldln2
popf
insl
fmull
filds
nop
arpl
ror
call
in
push
adc
scas
mov
sub
cmc
add
cmp
inc
mov
adc
and
sbb
sub
leave
sbb
es
adc
pop
cmpsl
mov
scas
xchg
dec
lret
popa
stos
popa
gs
jge
xchg
push
lcall
int3
je
lret
pop
mov
fdivl
sbb
pop
je
imul
and
jo
popa
cmp
mov
xor
adc
pop
mov
mov
or
jecxz
adc
int3
sub
les
lods
scas
adc
mov
jbe
pop
dec
lock
and
add
pop
dec
lods
xchg
popa
fstl
rcrl
in
bnd
xchg
pop
into
in
add
dec
jl
fimuls
add
in
dec
jg
orb
xor
xor
imul
dec
jne
sti
stc
sbb
movsb
daa
add
imul
loop
stos
scas
hlt
rcl
mov
inc
cmp
adc
xchg
mov
out
mov
out
sbb
inc
rcll
dec
rorb
test
xor
aad
test
sbb
cmc
mull
test
inc
jb
add
add
mov
pop
sbb
jae
insb
push
push
stos
jae
mov
repz
dec
mov
out
lods
mov
sbbl
popa
xchg
scas
fs
int
mov
cli
mov
mov
dec
xlat
in
bound
movsb
or
not
scas
sub
jp
pusha
cld
jb
add
lds
push
fstpl
enter
test
push
les
pop
jne
push
jecxz
mov
push
push
ret
out
mov
sbb
sahf
cmp
adc
mov
cmp
inc
add
sbb
dec
inc
std
rcrb
loop
cmp
sub
in
push
stc
lea
xchg
jl
test
rol
mov
sbb
mov
mov
and
cmp
adc
or
push
mov
or
dec
sub
movsb
jmp
push
in
adc
shll
adc
aad
nop
ficoms
dec
test
pop
imul
sbb
test
lock
fucomi
jecxz
push
and
daa
cmp
xor
xlat
xchg
fsubrl
mov
aam
sbb
xor
in
mov
pop
mov
in
adc
mov
cwtl
scas
xor
rorl
xchg
ret
cltd
mov
test
or
mov
cmc
aas
cld
jbe
call
inc
xor
fimuls
jg
pushf
push
add
jae
push
stc
pop
jmp
call
mov
dec
dec
sbb
xor
sbb
inc
xchg
mov
shr
jmp
in
icebp
sbb
bound
sbb
push
fisttpl
xor
daa
xchg
xchg
dec
xchg
das
outsl
pop
testl
xchg
adc
or
mov
frstpm(287
push
jg
sbb
cs
int
mov
inc
js
add
push
cmp
mov
pop
adc
mov
xchg
add
in
jne
cld
mov
mov
push
xchg
xchg
les
aaa
mov
ret
sub
and
js
loope
mov
xchg
mov
in
lods
jg
mov
mov
fnstsw
dec
nop
dec
dec
arpl
jne
mov
or
cli
mov
mov
addr16
pop
sub
xchg
pushf
sbb
loop
and
clc
pop
jns
call
dec
and
or
dec
cld
les
sub
lret
test
sub
xchg
and
inc
out
fcoml
mov
sti
mov
mov
jge
cmpsb
imul
and
adc
std
fs
push
call
lea
decl
jp
sub
loopne
ja
cmp
xchg
jge
push
in
jp
dec
out
sub
retw
cmp
pop
inc
add
adc
mov
xor
test
inc
sub
xor
mov
rcrl
pop
pop
jno
mov
dec
sbb
sbb
fidivrs
push
popf
rol
inc
cltd
push
sub
sti
sub
std
int
das
mulb
test
fimull
adc
enter
sbb
cwtl
jae
in
repz
inc
cmp
daa
ja
lahf
inc
adc
mov
shlb
mov
mov
sbb
loope
mov
jg
jns
mov
movsb
inc
mov
pop
fdivrs
inc
inc
fcmovnb
sub
lea
adc
out
fwait
jl
mov
pushf
je
ljmp
call
adc
jg
enter
and
push
fists
xor
cmc
dec
jle
insb
les
mov
mov
cmp
xor
add
xor
push
and
je
loop
aam
lock
lea
or
mov
xchg
lret
insl
adc
jmp
mov
into
sub
shl
in
push
fwait
insb
pop
cli
sbb
xchg
jle
gs
or
dec
jb
sbb
jo
lret
sub
aas
xor
int3
dec
test
das
or
sbb
es
inc
jmp
ret
dec
pop
incb
into
call
out
insl
cmp
fs
pop
cltd
mov
jge
cmp
into
popa
xor
xchg
ret
ja
sbb
add
cmpb
cli
push
mov
inc
mov
popa
fistps
jge
pop
scas
mov
dec
decl
sub
jbe
jl
les
aas
pusha
xor
mov
lock
int3
xadd
stos
fwait
add
inc
aas
push
sbb
mov
pop
push
enter
or
add
push
jecxz
cmc
adc
leave
ror
dec
adc
cli
incb
lds
dec
icebp
mov
adc
xor
jne
js
jbe
clc
push
test
mov
jns
out
repnz
ss
sub
jle
mov
testl
stc
daa
out
sbb
mov
cmpl
orb
fdivl
mov
pop
arpl
sarl
js
rcll
or
sbbb
push
sbb
mov
test
mov
int3
call
cli
push
inc
arpl
dec
cmp
arpl
xor
mov
std
ss
sbb
pop
cmc
jbe
xchg
mov
xor
sbb
int3
jae
insb
or
inc
stc
mov
call
and
add
push
and
in
xchg
xchg
pushf
imul
or
or
fistl
jg
bound
adc
ljmp
mov
call
in
jl
stc
inc
push
adc
mov
pusha
xor
insb
pusha
push
add
lods
inc
mov
lahf
lahf
sar
dec
sbb
ja
push
xor
pop
shrb
in
dec
sbb
in
add
inc
into
jbe
clc
sbb
sarl
jnp
pop
mov
add
inc
cmc
dec
out
push
int
adc
sub
add
sbb
sub
arpl
in
pop
mov
jne
pushf
roll
ret
mov
cmp
push
stc
jns
pusha
cmp
jge
mov
inc
lods
mov
mov
or
add
mov
dec
mulb
xchg
add
lret
push
shlb
cmp
cld
push
lock
mov
jnp
mov
push
bound
xchg
sub
mov
andb
fisttpll
aaa
mov
mov
in
jecxz
leave
mov
sarb
lcall
push
jg
jp
xchg
jp
scas
mov
sbb
roll
rcrb
cs
in
and
imul
filds
and
xchg
mov
add
sbb
sbb
jge
jno
push
inc
scas
dec
mov
add
fsubrp
dec
jg
jge
das
adc
add
push
jmp
pop
inc
lods
mov
std
repz
push
iret
shll
and
out
dec
push
push
movsl
inc
mov
movsb
fdivl
jno
rolb
test
mov
call
or
and
movsb
insb
xor
test
dec
push
rcrb
imul
mov
inc
test
mov
loope
xor
or
sbb
push
outsl
xor
cli
dec
pusha
aas
out
sub
sahf
dec
int3
dec
mov
rorl
lahf
imul
sub
adc
mov
cmpsl
lcall
test
pushf
mov
shll
rclb
mov
cmp
mov
lods
filds
xor
aam
icebp
xor
and
rorb
pusha
adc
pushf
jnp
addr16
adc
sub
rclb
arpl
mov
imul
and
mov
push
sub
cmp
sti
sub
sbb
cltd
and
shll
js
mov
inc
and
addr16
pop
daa
andb
and
xchg
push
jmp
shll
xchg
fnstcw
push
jp
adc
push
insl
pop
adc
cmp
loop
push
enter
dec
je
ficoms
stos
movsl
inc
mov
out
out
insl
setae
dec
dec
imull
pop
scas
xor
and
insl
aad
and
bound
dec
hlt
movsb
mov
or
iret
repz
mov
pop
lds
push
aas
push
mov
inc
int
jb
sub
js
cmp
mov
mov
xor
cltd
imulb
scas
lds
out
add
lods
mov
paddsb
xchg
mov
gs
jae
push
clc
movsl
out
repnz
jnp
cmp
fsts
cltd
push
and
inc
ret
mov
out
jge
push
enter
into
rcl
add
add
int
dec
imul
fldenv
nop
fistpl
fildl
add
cmp
popa
add
add
push
cs
mov
mov
dec
idivb
movsl
cmpsb
adc
clc
sbb
lods
cmp
lcall
dec
mov
mov
rorb
xorb
or
popf
push
lods
mov
pop
scas
inc
xor
scas
xchg
adc
sbb
fcomps
mov
sub
lea
sub
lea
and
out
out
mov
or
rorl
ret
cmpsb
in
sysenter
xor
push
insb
loop
ret
cmp
scas
xlat
mov
into
ja
mov
sub
in
xchg
imul
mov
mov
mov
and
mov
aam
pop
das
jbe
push
pusha
iret
ljmp
sbb
or
hlt
mov
xor
cmp
mov
push
xor
sbb
das
mov
mov
xor
adc
pop
dec
scas
add
xor
imul
xchg
jno
dec
xchg
stos
data16
pop
xor
aaa
and
fistpll
lds
jle
popf
nop
inc
aaa
jnp
jmp
in
lods
movsl
outsl
test
xchg
loop
adc
add
fdivs
daa
mov
popf
sbb
sbb
lahf
cli
pop
movsl
jae
pop
xor
ret
cmp
inc
xchg
mov
fistpll
aad
in
mov
cmp
cmc
dec
dec
push
sub
mov
fldpi
scas
mov
icebp
test
lahf
loop
mov
push
mov
mov
dec
xchg
aaa
mov
sbb
inc
add
jns
test
xchg
xor
mov
fnstenv
enter
jno
loopne
jg
sub
mov
mov
mov
les
add
cmp
shrb
jmp
dec
mov
jae
jne
cs
loopne
push
lret
insb
cwtl
into
sub
loop
lret
cmp
icebp
stc
fidivl
ljmp
xchg
lods
jecxz
jne
pop
inc
aad
adc
call
cmpsl
insb
fdivrp
cltd
test
clc
pop
mov
hlt
pop
aad
int
bound
das
cmp
jb
mov
in
ja
mov
divb
scas
cltd
test
cwtl
sbb
movsl
test
sbb
adc
lea
jae
movsb
add
push
addl
call
imul
push
mov
in
lea
add
push
scas
sbb
rol
xor
lret
dec
fidivl
mov
inc
mov
cmp
jg
lret
pop
push
outsb
shll
lret
je
mov
repz
aaa
cmpsb
mov
mov
insl
stos
jno
mov
outsl
jmp
fdivs
xor
imul
xor
dec
add
mov
mov
in
lcall
pop
mov
sbb
dec
imul
xor
mov
loop
repnz
jb
mov
mov
cmp
push
push
mov
test
movsl
aad
icebp
inc
mov
call
push
icebp
out
mov
sbbb
push
repz
pusha
or
clc
int3
jbe
scas
lcall
out
cmpsb
mov
or
sub
pop
push
pop
mov
lcall
enter
dec
adc
je
fldl
leave
imul
push
dec
call
rclb
mov
cltd
aaa
xchg
adc
aas
xor
lahf
call
push
daa
rcrl
das
jne
fimuls
fs
shrl
in
or
mov
bound
mov
cmpl
cltd
and
hlt
push
dec
insb
stc
mov
pop
inc
cmp
adc
cmp
lret
int
mov
fistps
repnz
jnp
xor
cs
jmp
rclb
div
pushf
std
mov
js
mov
stos
xor
test
sbb
inc
mov
adcl
cld
mov
add
jne
scas
jns
fimull
movsl
cld
shl
lds
movsl
sarl
push
pop
ljmp
sbb
sbbl
inc
dec
add
push
adc
das
pop
pop
fbld
clc
addr16
add
repz
mov
aam
cli
call
loop
xor
in
jno
sahf
mov
xlat
or
inc
iret
cmpsb
aam
sub
mov
clc
cmp
lret
add
call
popa
push
push
sub
mov
push
in
fisttps
adc
mov
and
sti
mov
mov
leave
call
jl
int3
mov
mov
and
lret
into
movsb
je
xor
scas
mov
cmc
leave
sarb
aaa
dec
and
sahf
call
loop
jmp
mov
jne
mov
sbb
xor
add
or
inc
pop
pop
mov
xchg
movsb
inc
jae
mov
ret
push
and
or
add
loopne
cmp
pop
je
pusha
insl
jo
sbb
inc
sbb
add
sbb
sti
xchg
subl
rcrl
sbb
cmp
mov
jl
pop
sub
movsb
imul
push
popa
xchg
cs
rcl
out
lahf
mov
push
mov
add
mov
or
mov
icebp
fildll
sub
roll
cld
sti
fimull
xchg
xor
icebp
adc
into
dec
sub
lods
and
or
movsb
sub
or
cmp
xor
sub
inc
jne
push
push
loopne
dec
push
std
push
xor
sub
xchg
orb
mov
push
popa
inc
jne
mov
cmpb
mov
jl
outsb
bound
dec
add
dec
mov
jle
push
xor
dec
test
imul
sbb
and
cwtl
or
ret
into
xor
insb
add
in
push
sub
in
ret
iret
xchg
mov
imul
xchg
and
jne
xor
pop
mov
xor
icebp
outsl
jno
ret
inc
push
adc
sahf
push
adc
mov
pop
call
popa
dec
popa
testb
jp
adc
dec
ficompl
std
mov
sti
push
mov
pop
add
xchg
adc
inc
lahf
and
pop
ds
cs
xchg
jb
bound
cwtl
pop
insl
dec
cld
adc
leave
mov
mov
pop
roll
jae
cmp
imul
in
lods
adc
iret
imul
leave
ret
mov
sub
dec
fs
sub
scas
ss
push
sub
push
adc
pop
pop
xor
jmp
jle
inc
dec
add
orl
icebp
mov
lods
push
mov
push
pop
lods
js
je
dec
ljmp
jae
lds
fwait
xor
inc
lcall
jg
lods
xor
cmp
in
adc
and
inc
jg,pt
and
pop
mov
aad
sbb
push
loop
loop
cmp
adc
mov
mov
dec
xor
xchg
mov
leave
jl
sub
aas
dec
imul
adc
mov
mov
lods
pop
dec
mov
rcl
scas
scas
inc
mov
shl
lea
or
mov
les
mov
sbb
ds
inc
mov
mov
mov
mov
push
jecxz
dec
int
pop
test
fdivrp
daa
push
sbb
or
and
adc
addb
lods
icebp
repz
push
lea
sarb
dec
jg
repz
js
int3
movsb
test
addb
pop
dec
lcall
jno
into
imul
repnz
push
test
movsl
addr16
add
mov
outsb
cmpsl
mov
push
sub
dec
and
ret
test
jmp
data16
fisubl
jne
mov
insl
sub
sbb
ret
add
jnp
mov
lcall
rclb
and
inc
xor
mov
mov
addr16
jl
das
arpl
lahf
jnp
inc
sub
fidivrs
loop
mov
xor
add
popf
jge
div
outsl
pusha
push
test
lret
cli
in
mov
push
cltd
out
jo
push
pop
mov
mov
in
add
jns
decl
aam
jno
xor
das
es
inc
ja
push
push
pop
add
mov
pop
lahf
ret
jae
and
mov
cmp
gs
popa
sbb
add
dec
movb
cwtl
sub
sbb
clc
push
pop
int
adc
or
aad
dec
lods
pop
gs
jmp
pushf
mov
loop
ror
imul
daa
jbe
and
shlb
mov
or
mov
dec
mov
call
bound
mov
ds
cld
lock
dec
dec
dec
inc
out
shrl
outsl
or
in
sbbb
test
jbe
cmpb
scas
xchg
xor
fs
pop
push
lea
pop
push
push
sub
jp
mov
loopne
and
cmpsb
inc
cmp
repz
rol
jno
fisttpll
adc
lock
or
sbb
mov
mov
ret
fwait
nop
lret
sub
test
xchg
or
ficompl
sbb
je
and
in
mov
cmp
stc
adc
sbb
and
fildll
into
mov
cmp
pop
les
jbe
nop
adcb
cmpsb
pusha
stc
jge
mov
fs
jle
sbb
vmovlpd
dec
aaa
or
mov
daa
out
ret
pop
rclb
in
loop,pt
mov
dec
add
popf
cmp
sub
sbb
sbb
cmp
pusha
mov
rcr
inc
in
add
leave
mov
sbbl
rolb
push
ds
dec
mov
mov
dec
pop
lret
ror
and
cmp
xchg
dec
mov
mov
addr16
mov
sbb
js
cld
push
push
mov
pop
adc
mov
mov
cld
xchg
xchg
sub
clc
ja
xchg
lods
int3
bound
inc
xor
es
adc
popf
arpl
or
mov
leave
mov
fnstenv
push
paddd
inc
mov
int
mov
sub
inc
shlb
lods
lret
cmp
add
pop
movsb
dec
fwait
cmpsl
iret
out
xor
sbb
mov
out
int
and
arpl
pop
insl
xchg
in
xor
cli
ds
frstor
jnp
dec
cmp
mov
bound
fs
mov
mulb
pop
xor
negl
ds
adc
push
leave
or
sub
test
aam
xor
repnz
dec
shlb
out
pop
jne
fsubs
in
push
mov
mov
fwait
cmp
aaa
mov
cmpsb
repz
cld
icebp
test
sbb
xor
dec
movsl
xor
dec
ss
ss
add
lods
xchg
gs
inc
lds
fs
push
inc
fldl2e
in
lret
dec
and
popa
in
pop
inc
adc
or
sub
ljmp
jl
aam
in
lret
lret
fs
sti
popf
fistpl
ss
lret
mov
inc
push
sub
shrb
or
inc
sbb
mov
stos
ss
jo
sub
pop
push
orl
jmp
icebp
popa
ret
lock
mov
and
loope
les
iret
and
xchg
adc
das
ds
sahf
cmpsb
pop
js
ljmp
sbb
gs
push
xchg
or
inc
or
sbb
dec
sarl
lret
xchg
int3
das
mov
out
jg
xchg
xor
outsl
mov
jne
test
fadds
mov
and
das
adc
mov
pop
adc
pop
add
sti
mov
inc
das
subl
mov
jb
test
cmp
mov
cli
jnp
insl
jae
add
cwtl
jbe
in
out
xchg
pop
add
fnstcw
in
xchg
mov
adc
push
sub
movsb
sti
jbe
sahf
jns
push
ds
fidivrl
mov
jbe
test
je
push
inc
outsb
push
sub
adc
push
lret
shl
or
insl
clc
sbbl
mov
popa
pop
cmc
inc
out
push
inc
xor
jmp
xor
add
out
pop
mov
inc
ret
pop
std
xchg
inc
push
mov
in
in
push
push
mov
cmp
cwtl
xchg
add
jge
xor
pop
das
lahf
sub
les
pop
pop
add
mov
mov
rcrl
in
xchg
daa
xor
test
in
ret
call
jp
dec
in
xchg
sub
pop
mov
fimull
jp
sti
cmpsb
sub
and
fnstenv
mov
aad
push
aad
xchg
idivb
and
mov
xchg
pop
mov
mov
cs
push
pop
es
enter
test
ret
adc
or
mov
cmp
arpl
sbb
in
push
adc
inc
jne
flds
loope
sub
xchg
cmp
adc
xorl
adc
xchg
filds
push
jne
aas
add
mov
sbb
lods
pop
or
movsl
xchg
test
fidivrl
add
or
imul
pushf
fwait
cmp
cli
mov
dec
mov
add
mov
in
adc
add
xor
xor
icebp
pushf
inc
sti
inc
adc
mov
mov
pop
xor
roll
xlat
ss
sub
ss
fcmovnu
sbb
jo
cmpsl
pop
pusha
push
xor
pop
mov
pusha
out
inc
dec
xchg
cld
inc
orb
push
mov
dec
hlt
jle
jno
sbb
push
lods
xor
dec
lods
popf
in
mov
int
inc
je
lods
add
cmp
or
add
lods
jmp
cmp
xchg
mov
ret
cmp
push
xchg
data16
fcompl
loope
lret
push
arpl
jmp
hlt
mov
insb
jne
lock
repnz
push
mov
popf
jl
xchg
mov
xor
dec
sbb
es
mov
cli
jno
push
mov
xor
aam
jno
orb
inc
mov
ss
xchg
fisubl
lea
rcl
push
xor
add
aas
push
xchg
add
hlt
cmc
mov
lock
adc
cmpsb
cmp
into
lret
or
lock
mov
push
cmc
mov
or
jno
shlb
into
rolb
add
add
mov
and
into
adc
mov
mov
imul
push
and
add
lock
xor
xchg
loop
dec
and
pop
fdivrs
rolb
sbb
arpl
fcmovu
in
loopne
jne
add
mov
jmp
and
lods
mov
out
mov
dec
frstor
jp
push
adc
data16
jge
xchg
cmp
ret
jno
sub
inc
mov
jg
or
jne
sbb
jl
iret
pop
fimull
fidivrs
xchg
sarb
fisubl
imul
scas
push
mov
mov
jecxz
test
xor
outsl
cltd
cmp
pop
mov
lcall
fldl
outsb
mov
scas
sbb
out
xchg
ja
jp
loope
cmc
inc
fnstenv
xor
add
cs
fwait
xor
jge
xchg
push
fidivl
sub
out
pop
lds
test
jp
addb
and
push
das
fwait
cmpsl
push
loope
faddl
ret
push
lahf
mov
pusha
clc
test
mov
pop
aas
cs
sub
xor
dec
pushf
insb
nop
push
jle
repz
mov
addr16
test
mov
sahf
xor
add
out
jo
and
stc
push
xor
repz
xchg
ss
test
push
leave
pop
out
pop
imul
push
xchg
std
and
inc
lods
jge
jb
pop
sub
cmp
fsubrl
and
fstpt
xchg
addr16
lods
inc
cmpsl
adc
nop
shll
insl
mov
jbe
ret
or
pop
mov
xchg
mov
jne
insb
movsl
in
fcoml
xchg
jnp
pop
scas
push
aad
or
jl
stc
mov
cmp
jae
lahf
outsl
xorb
jnp
cld
orb
or
pop
iret
iret
rep
xor
cltd
cwtl
leave
jmp
push
lods
icebp
movsb
sti
sbb
push
out
mov
xchg
ja
leave
mov
sbb
into
push
out
or
or
sbb
popa
int
aas
ja
rolb
nop
ljmp
subb
movl
aad
jle
gs
or
xor
push
mov
int3
cli
mov
push
adcb
sub
nop
jbe
jmp
mov
fidivrl
lods
and
imul
cld
pop
inc
ljmp
sub
and
mov
lds
dec
sbb
mov
xor
dec
mov
enter
fbld
imul
push
popa
add
sub
dec
jns
sub
push
xchg
pop
cmp
jb
sbb
aas
cmc
cli
pop
pop
dec
aas
fs
iret
jb
mov
inc
mov
mov
lods
shll
push
stos
pushf
push
cmovg
iret
jno
inc
mov
push
shl
lods
mov
push
sbb
fcmovbe
push
lds
mov
ds
fwait
sbb
cmpsb
xchg
add
or
push
xor
inc
dec
pop
add
testb
js
call
call
or
add
leave
enter
idivb
mov
sti
and
in
aaa
push
gs
clc
imul
xor
jno
xchg
inc
rorb
stos
xchg
jg
cmp
mov
aaa
lods
xor
fistpl
sub
adc
std
mov
in
mov
decl
movsb
std
xchg
mov
cmp
sbb
mov
fstpt
pop
test
inc
mov
xchg
divl
repz
jmp
lea
jmp
add
dec
push
jle
lcall
cmpsb
out
and
mov
push
pop
ljmp
daa
ja
add
es
aaa
dec
xlat
mov
les
jbe
and
push
inc
dec
shll
call
movsl
xchg
aad
cmp
movsl
and
lock
pop
jle
lock
addr16
xor
mov
cwtl
nop
imul
ss
dec
xchg
es
mov
cld
stos
dec
addr16
fwait
decl
and
jns
jns
adc
adc
and
addr16
fldl
mov
sar
or
arpl
in
sbb
cmc
xor
pusha
dec
mov
xor
adc
xor
cmp
fldenv
clc
jae
ss
imul
mov
inc
xchg
jecxz
in
cmp
sbb
in
jo
inc
mov
mov
pop
sbb
dec
pusha
mov
out
and
mov
sbb
movsb
push
push
jae
popa
test
jb
mov
add
cmpsb
mov
lcall
test
loop
in
ljmp
leave
xor
lea
out
cs
cmpsb
fwait
dec
adc
repz
adc
pusha
repz
fsubrs
out
in
pop
adc
cli
test
cmp
sub
int
fisttpll
js
fmul
push
sub
push
cmpsb
xchg
mov
adc
fstps
cmp
jns
popf
mov
fmull
push
mov
or
mov
mov
les
notb
call
mov
fmuls
loopne
andb
enter
lods
cmc
mov
pop
mov
lock
dec
mov
xchg
ficomps
out
lcall
and
ds
loopne
outsb
inc
leave
mov
xor
sub
add
or
mov
add
clc
dec
ljmp
xor
xchg
pop
fcoms
cld
dec
clc
cmpsl
movsl
call
test
jae
mov
sbb
mov
data16
sbb
xor
add
out
add
insl
jmp
cmpsl
xor
or
outsb
add
sub
mov
mov
rolb
mov
stc
scas
jmp
dec
and
push
sub
mov
mov
pop
dec
cmpl
mov
adc
adc
push
faddl
shlb
sarl
mov
insb
xchg
pop
jno
sub
jmp
insb
cltd
jns
lcall
scas
aad
call
lahf
pop
inc
dec
or
out
adc
adc
fbstp
test
push
adcl
into
sub
scas
and
xchg
mov
or
out
and
inc
ret
filds
add
stos
out
add
iret
sub
push
fs
jae
fdivr
clc
mov
xchg
repz
inc
cmp
and
pop
fists
repz
sti
cs
mov
arpl
pusha
xchg
jmp
pop
cmp
daa
mov
lahf
jp
and
dec
or
sbb
adc
ret
out
stc
ss
jbe
push
stos
add
aas
ja
cwtl
adc
and
jge
lds
je
push
je
je
ja
xor
add
addr16
mov
fs
imul
ja
jge
imul
in
out
xor
mov
ljmp
ss
push
test
pop
inc
pushf
sub
mov
test
jg
test
sub
and
dec
ss
rolb
lods
sub
cmp
xchg
ja
mov
shrb
repz
outsb
notl
xor
mov
clc
out
sbb
pop
fxam
adc
aad
adc
adc
jae
mov
pushl
and
jb
and
fsts
or
repnz
push
or
pushf
cmpsl
push
test
jecxz
mov
ds
xor
nop
mov
sbb
insl
pop
hlt
xchg
xchg
xor
jl,pn
xchg
jl
push
inc
cmp
mov
jns
cmp
jns
addl
lcall
lods
push
xor
push
into
inc
roll
std
hlt
adcl
xchg
sahf
sbb
mov
or
push
iret
rcll
imul
push
stc
xchg
imul
jb
cli
add
jl
dec
lock
imul
cmpsb
mov
cltd
inc
mov
push
mov
ds
outsl
mov
test
mov
inc
cmpsl
jle
jge
xchg
enter
ds
or
pop
and
ret
jl
adc
ss
out
mov
mov
in
sub
mov
mov
int
cli
xchg
pushl
hlt
push
mov
and
daa
in
iret
or
inc
jb
cs
sbb
mov
xor
and
pop
ret
pop
or
push
inc
pop
jns
nop
popf
fdivrs
add
sbb
push
push
xchg
aad
pop
insb
pusha
ret
fildll
test
xor
shrl
enter
mov
inc
hlt
cs
push
xor
push
aam
sub
dec
lock
xchg
pop
movsb
shlb
jp
inc
hlt
insl
pop
in
imull
jo
lea
mov
popa
jmp
cld
mov
lock
push
test
push
xor
scas
or
mov
adc
cmc
in
inc
xchg
cmp
adc
leave
push
jg
das
imul
push
jge
insb
pop
xchg
cld
addl
push
insb
std
mov
mov
icebp
mov
fcoms
lods
push
adc
arpl
push
fs
push
in
xchg
push
xchg
cli
loope
xchg
and
xchg
enter
dec
insb
cmp
pop
mov
cmc
in
sub
sbb
int3
jmp
cli
sarl
lret
push
std
push
xor
dec
lret
sub
or
xor
in
mov
in
sahf
popa
mov
and
inc
lock
inc
cli
insl
stc
mov
call
or
test
sbb
lods
sub
aam
mov
int3
jl
mov
and
adc
dec
orb
clc
mov
jbe
mov
pop
scas
pop
loope
pop
fnsave
and
in
int3
fistpl
lods
std
push
enter
hlt
stos
lcall
mov
add
or
xor
jbe
xchg
cmp
pusha
movsl
aas
dec
mov
lret
ret
pop
loop
dec
mov
fcoml
jmp
mov
mov
hlt
sbb
mov
and
out
cmp
or
int3
addr16
jge
insl
out
cmpsl
mov
test
fwait
lret
sub
mov
int3
adc
enter
jmp
pop
lods
stos
xchg
mov
jno
pop
leave
shrl
shr
xchg
jnp
fs
xchg
jmp
mov
pop
out
popa
add
add
mov
es
cmp
jle
sbb
out
out
inc
notl
pop
dec
dec
sub
sbb
scas
mov
mov
sbb
sahf
aad
lret
in
or
stos
add
jnp
push
xorb
mov
scas
jecxz
ljmp
xchg
adc
int
add
std
shrb
hlt
sbb
nop
scas
xchg
nop
sarb
add
shll
lea
push
aam
inc
push
jne
pop
inc
cmp
call
dec
lea
xchg
dec
nop
cli
dec
adc
mov
cmc
cltd
mov
movsb
fcoml
pop
scas
insl
sub
lcall
enter
iret
push
mov
ljmp
les
jnp
sbb
and
gs
ljmp
call
adc
pop
push
in
mov
cmp
jbe
in
loop
mov
movsb
push
dec
pop
jecxz
clc
dec
aaa
shlb
test
mov
and
data16
jnp
fdivl
les
cmp
in
ror
es
xor
cmp
into
lcall
and
rolb
stos
inc
adc
jg
pop
and
outsb
bswap
dec
mov
pushf
popf
mov
jle
sahf
xchg
mov
dec
insl
mov
or
push
pop
mov
leave
imulb
jg
clc
jne
call
sub
rorb
cmp
dec
jb
adc
imul
jb
dec
push
fs
mov
and
mov
jnp
insb
pusha
jae
mov
pop
fcoms
shll
lcall
cmp
cmp
lods
jno
jb
cmp
mov
jnp
flds
imul
jmp
enter
repz
inc
sub
in
xor
add
fnclex
and
push
les
ret
out
and
out
imul
hlt
mov
cmp
das
mov
push
scas
mov
into
loop
out
cwtl
xor
cld
addr16
lcall
lods
sbb
outsl
jg
bound
add
cmc
inc
divb
cmpsb
dec
add
mov
pop
mov
ret
dec
pop
cli
dec
fstpt
cmp
test
dec
mov
and
outsb
repnz
rol
roll
pop
inc
repnz
lock
or
fdivrs
mov
cmp
sub
xchg
push
lret
fsubrl
dec
test
mov
or
fwait
ret
fcoms
jl
in
sub
out
loopne
xchg
cmpsb
rcll
mov
ret
jne
fs
adc
test
iret
sbb
xchg
mov
and
xor
cmp
test
lods
add
ljmp
dec
or
pop
stc
fs
or
icebp
les
push
outsb
aam
cwtl
stc
cld
push
mov
mov
iret
sbb
stc
and
pop
aam
inc
repz
ret
imul
inc
test
mov
xor
xor
push
xlat
add
gs
test
jae
scas
dec
jmp
stc
f2xm1
mov
loopne
mov
aad
in
xchg
scas
or
cli
divb
jne
insl
test
in
sar
mov
imul
mov
ja
mov
stos
pop
push
pop
mov
xor
or
adc
mov
xchg
mov
fstpt
adc
loope
int3
mov
lahf
stos
sbb
and
js
jmp
mov
ret
or
mov
shrl
std
xchg
push
jne
shll
fdivs
int
cs
dec
aad
xchg
mov
adc
scas
mov
adc
xlat
and
mov
add
xor
sbb
cmp
fmul
adc
shlb
mov
mov
or
adc
and
leave
jns
jne
cmp
in
sbb
inc
push
adc
and
movb
push
test
dec
jle
pop
lods
shlb
or
dec
out
das
jl
add
hlt
fisubrl
fistl
xor
cmp
in
push
dec
loop
or
add
fsub
push
fidivs
in
ja
sub
mov
inc
mov
sub
sub
or
pushw
sbb
pop
aad
or
add
jmp
inc
orb
mov
xchg
jecxz
in
test
push
ror
and
mov
aad
sahf
sub
outsl
dec
cli
out
jno
pop
es
addr16
loopne
push
addl
mov
mov
cmp
sti
rclb
popf
cmc
push
dec
andb
je
mov
repz
or
push
test
rol
push
dec
mov
ja
es
mov
jp
mov
sbb
mov
int3
insb
adcl
nop
aaa
jns
sahf
and
jmp
and
mov
cmpsl
sub
mov
mov
stc
push
scas
bnd
sub
inc
cmp
lret
jnp
jl
dec
imul
jg
mov
or
les
xchg
cwtl
mov
arpl
mov
out
sbb
or
pop
pop
fcompl
push
scas
int3
push
push
mov
shl
sub
dec
into
out
inc
iret
insb
add
add
mov
or
cmpl
push
cld
push
push
or
popf
enter
push
pop
or
clc
mov
adc
test
jmp
xor
jecxz
xchg
cmp
loope
xorl
dec
iret
test
lahf
ret
cmp
or
or
fs
cmp
mov
loope
incl
fcmovbe
sahf
lcall
aaa
aad
fcmovnu
mov
dec
mov
out
push
int3
packsswb
adc
sub
frndint
cmp
jmp
and
testl
push
cld
loop
sbb
shlb
mov
add
mulb
repz
xchg
rcr
iret
arpl
gs
pop
jl
xchg
out
out
into
dec
inc
lahf
fmul
call
push
aaa
sahf
popf
push
jl
xchg
or
jmp
notb
cli
or
addl
daa
insl
cmp
push
gs
sbb
cmp
jl
or
incb
mov
les
fstpl
xchg
cmp
push
enter
test
in
ret
rcr
enter
popl
fwait
rorb
or
lcall
sbb
jmp
push
lret
jnp
shlb
add
aad
inc
ljmp
jbe
xchg
cld
pop
scas
jp
stc
aaa
inc
mov
js
fstps
push
insb
cmp
xchg
data16
xchg
xchg
xchg
cwtl
xchg
dec
cmp
mov
pop
xchg
out
pop
sbb
fwait
mov
adc
mov
test
stos
pushl
mov
fstpl
insl
mov
repz
cld
mov
inc
jne
mov
sti
faddl
mov
movsl
mov
sub
mov
shlb
mov
imul
push
adc
lret
pop
ret
mov
shlb
push
repz
lock
in
adc
sub
sub
ds
ljmp
lea
loope
cmc
mov
xor
sub
call
mov
out
ds
dec
loopne
addr16
fisubrl
call
leave
shll
rcll
jno
rorl
cs
out
loop
test
outsl
test
fcmovu
mov
aaa
add
push
sbb
aaa
mov
iret
stc
jnp
and
jb
jae
jo
lea
push
dec
mov
iret
mov
xor
dec
les
popf
cld
fbstp
mov
sarl
lods
sarb
ljmp
aad
push
je
push
mov
js
adc
stc
imul
jnp
jo
cmpsl
addr16
mov
mov
xchg
pop
push
and
cmpsl
enter
add
or
fdivp
pop
sbb
jp
push
ljmp
pop
xchg
jno
xchg
movsb
mov
mov
sub
dec
rolb
pop
and
push
cli
sbb
push
push
adc
aaa
mov
mov
and
fcmove
add
or
cltd
mov
enter
xor
sub
mov
or
rcl
xchg
gs
outsb
lahf
jae
lods
aas
sbbl
xor
dec
ds
sbb
ret
jae
mov
jle
xchg
enter
je
xor
sbb
add
pop
cmp
in
movsl
push
int3
cmp
inc
mov
mov
and
mov
ljmp
scas
mov
push
pop
popf
call
mov
orb
xchg
fwait
lcall
sbb
and
cmpsb
dec
test
and
cwtl
mov
cmpl
or
pop
je
inc
lret
cld
jecxz
inc
xor
dec
dec
movsb
or
sti
scas
loope
pushf
scas
fistpll
mov
inc
jbe
sbb
std
dec
jo
xchg
jle
cmc
out
data16
jmp
adc
jecxz
cmc
pop
sbb
fdivl
mov
out
fwait
inc
add
mov
es
push
dec
push
loope
repz
mov
sub
sub
out
mov
cmp
mov
cmp
gs
pop
inc
fmuls
insb
sbb
sbb
dec
sub
sbb
outsl
xchg
add
cmovb
pusha
and
ret
enter
push
jp
jnp
loop
test
adc
cmpsl
lahf
popf
mov
hlt
xchg
mulb
ds
mov
ucomiss
xchg
int3
sbb
xor
std
xchg
sub
xchg
test
sahf
pop
sbb
stc
push
out
ficoml
mov
idivl
push
jae
adc
cmpsl
mov
gs
sub
bound
mov
mov
cltd
mov
mov
ljmp
xchg
cs
fnsave
mov
scas
fwait
sub
imul
mov
jne
enter
jg
mov
dec
push
aam
int
xchg
dec
mov
shlb
jnp
mov
inc
rcrb
fsubrp
dec
fdivs
mov
cmovp
cmpsl
testb
rcl
jg
adc
je
test
pusha
push
adc
loop
dec
inc
xor
dec
in
in
ss
inc
out
inc
lea
push
pop
fidivl
dec
lahf
mov
test
call
imul
dec
aaa
outsl
jl
fiadds
ret
xchg
ss
negb
jle
popa
pusha
fs
xchg
lret
roll
cmp
jnp
dec
shrb
fldt
cli
loopne
or
clc
push
out
aam
jp
push
aaa
stos
xor
scas
adc
rorl
rcl
ret
popa
lret
ss
or
leave
imul
rcll
mov
hlt
inc
call
int
dec
xchg
sbb
mov
xchg
and
jb
adc
aam
dec
mov
inc
mov
stos
sub
jp
scas
test
adc
in
or
inc
shrb
test
mov
repz
mov
dec
fcmovu
cmc
mov
mov
movsb
xchg
into
loope
data16
mov
add
add
mov
lods
fildll
push
lcall
mov
sub
fnstenv
sub
cli
pop
xor
hlt
shrb
scas
enter
mov
out
hlt
sbb
les
pop
rolb
fwait
out
dec
jl
sub
repnz
aas
out
popf
pushf
xor
dec
dec
xchg
mov
push
and
inc
push
or
jne
stos
cli
mov
loop
cs
lahf
jb
sti
fisttps
dec
mov
jae
pop
rcr
cmpsb
cmc
jg
movl
cmpsl
mov
mov
pushf
repz
fstps
adc
sbb
movsb
adcb
rolb
xchg
xchg
icebp
inc
xchg
iret
cmp
add
lahf
shlb
addb
pop
or
pop
mov
inc
mov
xor
inc
mov
pusha
shrl
push
popf
push
adc
cli
out
xchg
mov
dec
add
lret
mov
mov
lods
add
sub
enter
lcall
and
fxch
push
scas
adc
mov
hlt
frndint
mov
lds
lods
and
sbb
pop
sub
sbb
xor
cld
pop
jmp
xchg
xor
or
mov
mov
adc
jg
mov
outsb
pop
imul
int
testl
xchg
and
and
cmp
js
push
sbb
mov
adc
sti
push
pop
dec
fnstenv
sbb
mov
sbb
imulb
test
sub
and
das
fwait
inc
jp
cmp
in
mov
jmp
jne
adc
rcrb
push
adc
mov
int
cmp
jns
xchg
int3
rcrl
sub
inc
orl
adc
pop
xchg
push
push
xlat
stos
stc
dec
sbb
mov
les
or
incb
dec
fldcw
jb
mov
add
adc
pop
xchg
mov
out
ss
fisttpl
mov
in
dec
lods
or
lret
xchg
cmc
xchg
andl
stos
test
shld
push
sbb
les
xchg
shll
outsl
in
jg
and
data16
xchg
cmpb
inc
xor
mov
push
xor
lods
add
push
repz
dec
into
xchg
mov
cs
mov
cs
mov
pop
mov
dec
and
mov
das
lods
sbb
inc
sbb
inc
shr
out
push
sub
fs
iret
call
xchg
insl
mov
cmp
or
sbb
out
movups
cld
mov
lea
and
imul
lea
and
cmc
rolb
add
rcl
pop
pop
jmp
push
jmp
into
sub
sub
jne
adc
cs
mov
adc
dec
dec
push
xchg
test
testb
ja
lods
pop
mov
out
cmpsl
stc
xchg
jno
xor
rcl
insl
mov
dec
pop
xchg
lahf
rorb
mov
pop
enter
es
shr
aad
stc
and
mov
inc
mov
orl
sbb
sub
les
adc
into
pop
pop
sbb
js
inc
xor
sti
adc
xchg
sub
enter
call
pop
enter
mul
cmpb
pop
pop
out
pop
fnsave
push
cmc
mov
xchg
inc
daa
sub
cmpsb
pop
pop
test
movsl
xlat
sbb
xorl
xor
hlt
sahf
and
lock
jg
xchg
mov
rol
mulb
aad
cld
ds
stos
mov
xor
cmp
movsb
sbb
jmp
movsl
into
bound
add
fistps
dec
mov
jo
scas
repz
lea
movsb
adc
data16
arpl
test
fidivrl
addb
js
push
and
cmp
inc
insb
add
jp
sbb
insb
dec
jecxz
rol
cwtl
and
lcall
push
ret
dec
in
loop
sti
pop
sub
xor
repz
inc
mov
cs
or
popa
xchg
add
ja
jnp
jge
mov
insl
push
js
pop
imul
cmp
mov
into
mov
xchg
push
push
pop
adc
mov
jns
cmp
addb
popa
mov
inc
push
cmp
loope
fadds
xchg
xchg
ds
jge
cwtl
mov
outsl
xlat
sub
fsubl
adc
int
pop
pop
mov
push
mov
mov
adc
and
test
rolb
pop
jo
mov
mov
mov
push
sbb
push
jno
cmp
add
pop
cmc
daa
in
jnp
mov
pop
mov
adc
test
imul
jo
stc
push
mov
iretw
add
fldenv
int3
or
shlb
cmp
sbb
pop
jnp
sahf
sbb
mov
ss
jns
push
loop
pop
hlt
sub
sub
daa
test
sti
adc
shrb
push
mov
pop
in
cmpsl
mov
sub
jno
lcall
sti
lcall
mov
jge
pop
scas
mov
jne
push
mov
xchg
push
subl
fbld
push
pop
xchg
cmp
or
xor
inc
add
std
xchg
mov
mov
sub
sub
push
add
add
pop
in
cmpb
dec
adc
lret
repnz
mov
pusha
filds
push
mov
push
cmp
mov
adc
imul
fsubs
loope
mov
insl
or
rcl
loope
imul
scas
mov
pop
adcb
fsubrs
std
movsl
push
out
mov
and
shrl
cwtl
into
sbb
fisttpll
mov
dec
stos
repz
push
or
mov
cmp
push
jno
fldt
sub
aas
cltd
sub
jp
outsl
cld
test
frndint
mov
sti
cmc
or
mov
sahf
mov
push
jle
pop
faddp
cmp
testb
mov
incl
xchg
jbe
inc
ja
push
fstpt
pushf
popf
adc
xor
ret
mov
mull
enter
iret
xchg
mov
bound
mov
sti
repz
jnp
sarb
inc
jbe
clc
insl
jns
mov
pop
xor
jmp
ror
out
gs
add
xchg
xor
push
xchg
sahf
or
iret
mov
or
push
mov
movsl
insl
push
js
hlt
lods
mov
lods
xor
push
or
jg
fnstenv
loopne
sahf
popa
xchg
movsb
outsb
xchg
popf
xor
cltd
leave
mov
xor
push
addr16
dec
mov
mov
mov
xor
inc
inc
xchg
es
xchg
sbb
and
inc
stos
xchg
mov
xchg
dec
hlt
xlat
rcl
scas
sbb
sub
and
lds
test
lret
push
out
sub
cwtl
loop
add
pop
int3
lods
hlt
in
xchg
push
push
and
and
mov
jecxz
jge
add
fiaddl
je
jmp
stos
les
lcall
dec
test
mov
xchg
mov
outsb
mov
dec
sahf
push
and
or
mov
addl
pop
mov
loopne
mov
pop
xchg
xchg
push
sbbl
mov
inc
cltd
enter
mov
mul
pop
dec
mov
divl
mov
or
mov
lret
jns
xchg
xchg
jne
ja
ucomiss
and
lods
out
jnp
mov
inc
dec
sbb
mov
adc
adc
mov
shll
test
mov
adc
mov
mov
ljmp
sbb
jl
rorb
in
push
cld
aam
dec
btr
pop
mov
aad
inc
xor
inc
jno
cmp
outsl
into
xchg
mov
jae
jp
jns
cmp
call
gs
jno
rolb
in
jge
xor
adc
sbb
or
sub
sarb
push
fucomip
insl
adc
pushf
ss
cmpsb
add
jbe
repz
cs
rcrl
sub
jecxz
mov
xlat
scas
out
stos
push
push
lcall
sub
cmp
fwait
mov
lods
scas
cmp
or
test
rcll
mov
adc
jg
fsubp
enter
cmp
dec
pop
pop
push
das
cmp
cwtl
jp
sbb
into
pop
insl
mov
mov
in
dec
sub
hlt
and
mov
mov
push
push
into
stos
test
inc
popf
push
pop
pop
mov
push
or
mov
cmpsb
xorl
adc
inc
cwtl
ficoms
adc
inc
js
mov
push
sub
inc
jbe
aas
or
lods
cmp
xchg
inc
sbb
je
xor
and
push
xchg
js
aaa
dec
lahf
cmpsl
sub
inc
out
shll
aam
idivl
and
das
mov
cmp
call
scas
data16
lods
mov
fmull
push
mov
sbb
cmpsb
cmp
imul
jl
jns
rcr
sarb
sub
fildl
dec
mov
mov
popf
add
sub
es
daa
mov
mov
pop
std
stc
movsl
aas
addr16
movsb
mov
sbb
aam
push
fwait
mov
xchg
inc
mov
test
mov
inc
movsl
jmp
loopne
adc
sarl
cld
jle
push
pop
clc
pop
push
xorb
iret
xchg
in
or
ljmp
clc
pop
aad
imul
fisttpll
stos
scas
shlb
addb
push
clc
icebp
and
mov
inc
pop
popa
aas
cmpl
loopne
sbbb
xchg
scas
sbb
fisttps
scas
es
nop
aam
lods
imul
icebp
shlb
mov
test
sarl
das
mov
push
lret
test
mov
cmp
fsubl
mov
into
insl
movsl
enter
push
fwait
popf
pop
rclb
cld
adc
outsl
dec
cs
or
stos
lods
cmp
pop
mov
push
in
jp
scas
outsl
dec
jbe
testb
xor
jns
imul
sbb
mov
sbb
jmp
add
inc
stc
mov
mov
popf
mov
adc
pop
in
outsl
sub
pop
jle
roll
pop
fisubrs
bound
lods
call
xor
dec
fidivl
leave
dec
movsl
jmp
aaa
jmp
sbb
fmul
cmp
pop
pusha
push
cmpsb
fbld
gs
jge
jle
jbe
xchg
es
xchg
ret
add
sbb
inc
hlt
shll
jbe
adc
das
or
lods
in
outsb
clc
xchg
mov
adc
into
incb
jl
movsb
dec
mov
cmp
sbb
mov
dec
cmpsl
sbb
push
xor
pop
xchg
mov
jle
iret
mov
inc
mov
dec
add
test
inc
ss
pop
and
push
inc
std
xchg
pop
cmc
imul
es
sbb
es
stos
sub
dec
adc
adc
dec
aad
and
push
stc
jno
call
sti
xchg
shrb
xchg
sbbl
dec
or
sbb
xchg
out
lods
pop
mov
jae
aaa
push
adc
jecxz
add
jnp
pop
mov
pop
scas
jne
mov
mov
pop
or
sbb
or
pop
adc
jbe
jg
add
inc
iret
rcrl
adc
xor
scas
popf
out
mov
inc
push
or
or
test
push
push
sub
adc
xor
and
xor
push
adc
xchg
mov
dec
lea
push
es
cs
sbb
pusha
jecxz
mov
pop
mov
push
push
inc
and
cmpsb
daa
pop
push
sub
in
xor
inc
and
or
jae
adc
dec
jb
jg
mov
xchg
ds
jbe
sbb
cmpsl
jae
out
outsb
fdiv
cmp
cli
mov
xor
lret
jne
lock
faddl
inc
daa
daa
sub
mov
scas
cmc
lods
mov
cmpsb
lcall
aad
repnz
lret
inc
or
imul
pop
cltd
xchg
mov
jle
cmp
hlt
xor
loope
icebp
jl
mov
or
xchg
push
inc
ds
pop
pop
cmpsl
adc
mov
popa
out
popf
mov
push
insb
adc
imul
lods
push
sub
push
mov
cmp
xor
repz
iret
xchg
add
nop
cmp
push
xor
pop
loop
das
push
pushf
push
out
notl
data16
pop
xor
mov
loope
pop
outsl
in
add
mov
test
gs
ds
pop
mov
add
int3
iret
add
xchg
xorb
nop
push
and
xchg
ds
fistps
xchg
nop
sub
dec
push
adc
mov
pop
or
mov
xor
icebp
jle
movsb
shll
lret
mov
sub
jns
mov
mov
sbb
push
mov
popf
rorb
or
aam
adc
fisubl
clc
or
xchg
dec
xor
adc
xor
pop
mov
fwait
mov
dec
call
fldt
arpl
pushf
clc
scas
jne
mov
mov
lret
dec
pusha
jl
xchg
cmp
lods
or
and
mov
pop
popf
es
movsl
icebp
sbb
outsl
test
std
lods
pop
aas
clc
xchg
inc
xchg
stc
inc
test
movsl
test
cltd
out
insb
xor
imul
je
cmp
fstpl
ds
cmc
fucomi
push
repnz
scas
sub
inc
icebp
je
dec
in
or
insb
xor
loop
adc
scas
or
cmpsb
fwait
push
outsb
or
int3
lcall
clc
cmc
pop
jle
xchg
mov
cltd
sti
cmp
xchg
and
sbbl
mov
mov
test
mov
mov
sub
push
xchg
push
inc
lret
mov
xor
testb
mov
test
mov
or
stos
loopne
push
cmp
subl
ret
stos
mov
vpmaxsw
cmpsb
push
jb
xchg
jae
out
frstor
jmp
jp
das
jmp
neg
jns
aaa
cmp
das
cmpsb
mov
stc
jae
loopne
das
lret
mov
adc
dec
xchg
push
pop
daa
imul
mov
pop
out
sub
pop
mov
mov
lods
jle,pt
push
push
mov
arpl
mov
adc
cmp
add
imul
adc
and
cwtl
adc
fs
mov
xchg
mov
dec
mov
aam
push
sub
ljmp
stos
lods
xor
mov
pop
fnstcw
nop
and
enter
xchg
sub
add
cld
pop
mov
popf
mov
or
hlt
mov
pop
mov
mov
mov
xor
dec
mov
fsubl
leave
mov
inc
and
aaa
xchg
sahf
hlt
enter
mov
outsb
mov
in
mov
insb
daa
mov
insl
and
sbb
test
sbb
xchg
cmp
cmp
jp
xor
mov
xor
sub
mov
test
pop
mov
xchg
jecxz
es
fs
mov
push
ljmp
data16
or
adc
mov
sti
cwtl
add
mov
push
push
sub
test
add
sbb
sarb
pop
add
mov
mov
in
pushf
scas
ret
aaa
push
shrb
int3
cmp
push
aaa
lods
es
arpl
stos
add
jae
in
jb
push
lret
jmp
fistl
jmp
das
add
stos
mov
jge
ret
jmp
and
add
outsl
je
adc
lahf
outsb
sub
cmpsb
cmp
roll
flds
add
jno
jl
sbbb
sar
lock
fadds
comiss
jmp
insb
jmp
sub
fdivrs
dec
fwait
pop
sbb
in
stc
sub
scas
outsl
or
push
mov
push
mov
mov
sub
lock
dec
dec
les
push
and
push
and
aas
dec
popa
mul
hlt
insb
icebp
ja
mov
sub
bound
lock
adcb
adcb
addr16
cld
mov
lret
int
pop
xchg
aad
ss
fistpll
test
imul
pop
mov
arpl
fwait
xchg
fstps
adc
mov
iret
push
push
je
xchg
int3
outsl
pop
in
addb
pushw
xchg
add
mov
push
cmc
pop
nop
xchg
xchg
fildll
fwait
push
decb
pop
xchg
jae
rcrb
mov
mov
popf
repnz
jecxz
dec
xchg
dec
jns
loop
lods
cmpsb
loope
je
stos
jnp
mov
inc
fwait
lret
cmp
mov
mov
popf
xlat
jg
fldt
cmpsl
cmp
fwait
xchg
cmp
pop
or
int3
dec
scas
insb
lret
call
mov
mov
cs
ljmp
pop
xchg
push
js
ret
add
imul
push
or
push
mov
xor
cld
jnp
lods
xor
call
lret
int
aaa
xchg
cmc
mov
mov
movsb
inc
fistps
imul
cvtdq2ps
ret
xchg
lods
mov
lahf
cltd
sarb
jle
dec
idiv
out
jg
sub
add
sub
cwtl
dec
std
jle
push
int3
lods
fmuls
push
cmp
in
jb
push
ja
jg
pusha
loopne
cmp
jmp
mulb
dec
ficoms
cld
test
ja,pn
or
xchg
fcos
xchg
lcall
fwait
xchg
mov
repz
ljmp
mov
dec
sbb
inc
or
cmpb
jno
ret
ficompl
cmp
sahf
sahf
sahf
cmpb
jns
fldcw
dec
and
xchg
jnp
push
xlat
pop
mov
scas
cwtl
push
inc
mov
pop
inc
mov
movsb
jno
mov
xchg
lods
fnstsw
mov
mov
add
or
insb
lods
or
xchg
push
xor
xchg
dec
in
stos
xor
int3
inc
push
out
inc
in
xchg
pop
mov
mov
inc
shl
lock
std
or
popa
jle
sbbb
leave
fisubrs
in
cmc
mov
push
or
hlt
shll
add
nopl
ss
mov
test
lcall
or
leave
jbe
and
andl
xchg
addr16
addr16
push
fucomi
adc
push
imul
into
cmp
adc
and
push
les
faddl
dec
inc
ljmp
pop
mov
fxtract
jb
xor
sti
and
sarl
ds
adc
cmp
fucom
fs
dec
repnz
rcrl
fs
insl
mov
lret
sbb
fistpl
adc
dec
and
xor
add
scas
inc
or
ljmp
sbb
sar
dec
sbb
jnp
call
sbb
adc
mov
xchg
repnz
andl
sbb
pop
imul
push
enter
dec
mov
adc
mov
jecxz
and
test
or
out
ss
mov
cs
aam
cltd
xor
lret
jbe
add
dec
loopne
roll
mov
push
fnsave
ja
fxsave
xor
mov
ja
push
and
cmpsb
addb
xchg
into
lret
mov
iret
pop
push
pusha
ss
xor
loopne
jno
or
sbb
into
sub
xor
xor
in
sbb
enter
sti
les
into
das
scas
sbbl
jecxz
xchg
jae
dec
xor
mov
lock
stos
inc
mov
nop
adc
js
cmp
mov
dec
pop
ret
mov
mov
xchg
cmpsl
mov
xor
or
repnz
adc
jb
jne
dec
or
add
leave
daa
shrl
es
mov
in
movsl
cltd
sub
jns
pop
pushf
cmc
testb
inc
inc
sub
or
out
daa
push
pop
cwtl
scas
and
int3
mov
enter
dec
in
jne
dec
lods
rclb
lahf
sti
adc
mov
pusha
in
and
lret
cs
movsl
pop
pusha
push
loopne
sti
outsb
xchg
mov
pop
mov
sbb
mov
nop
in
aaa
out
push
jns
inc
shr
scas
jl
push
xchg
jbe
xchg
mov
push
cld
push
addr16
call
loope
mov
add
xor
cli
fstpl
mov
xchg
arpl
cmp
jns
inc
aad
dec
jg
subb
je,pt
lret
xor
or
sbb
sbb
outsl
divb
ljmp
dec
cmpsl
adc
insb
std
fwait
inc
pushf
jnp
sub
cli
aaa
ret
sti
mov
std
inc
or
jl
dec
shll
mov
mov
mov
ret
xchg
cmp
push
mov
mov
and
out
dec
mov
mov
push
orl
repnz
xchg
pop
imul
mov
imul
mov
fnsave
push
lcall
push
aam
orb
jns
fwait
ret
sbb
popf
dec
or
sbb
gs
fsubrs
xchg
push
subl
push
out
cmp
push
adc
mov
jg
ss
mov
jp
test
out
push
aas
shlb
leave
mov
sub
dec
jge
adc
xchg
xor
daa
add
mov
pop
lods
sbb
mov
mov
icebp
inc
xchg
out
out
arpl
out
es
adc
fmull
mov
iret
cmp
loope
add
sub
into
xchg
adc
fs
sbb
push
cmpsb
jge
stc
test
sub
inc
outsl
push
das
push
jno
jo
xor
mov
insb
sbb
sbb
lret
push
xchg
pop
push
jbe
mov
or
repz
int
daa
cmc
scas
negl
rolb
out
fcmovnb
jecxz
ret
mov
rolb
mov
sub
loope
sub
mov
sub
loop
xchg
ret
add
xchg
clc
out
mov
out
outsb
or
dec
push
sub
cli
mov
sub
js
push
fwait
cmc
cmp
fldenv
push
inc
pop
ds
push
cmc
jmp
inc
in
adc
lds
jmp
les
data16
mov
push
out
xchg
or
cltd
je
push
inc
sub
sbb
jbe
lea
and
pop
jb
push
mov
jecxz
lea
outsl
mov
push
mov
jp
popf
les
mov
push
shr
dec
neg
mov
xchg
xlat
pusha
imul
mov
in
xchg
lds
adc
xchg
dec
sarl
or
mov
sub
enter
popf
sub
pop
mov
in
push
add
jp
dec
lea
lods
pop
in
xchg
cmpsb
cwtl
scas
sbb
fwait
cmc
outsl
adc
or
sarb
cmp
cld
movsl
push
pop
mov
stc
stc
jns
mov
sbb
imul
adc
sub
out
loopne
fwait
and
mov
and
dec
gs
dec
outsl
repnz
xchg
mov
pop
gs
test
push
jg
pop
push
mov
sahf
mov
sbb
lahf
stos
je
sti
ss
push
jmp
pop
fxtract
in
jecxz
inc
out
inc
xchg
pop
imulb
leave
out
scas
push
or
sahf
mov
je
test
sub
xor
xor
push
outsl
arpl
imul
cmp
pslld
mov
fsubrp
sar
into
out
rorl
fiadds
shlb
mov
xlat
fstpl
pop
push
clc
cmp
test
jnp
fwait
and
outsb
enter
pop
pop
sub
adc
nop
int3
xor
dec
in
ret
in
lock
sbb
xor
jg
or
cltd
cmp
scas
xor
sbbl
ficompl
mov
into
sub
in
jb
mov
inc
push
lcall
cltd
fcmovb
rorl
es
sbb
inc
imul
push
jnp
les
cmc
das
cmp
mov
adcb
xchg
je
outsb
into
or
add
add
stos
xlat
popf
cltd
fs
inc
flds
int3
cmp
addr16
mov
xchg
or
push
pop
mov
push
movsb
xor
and
rolb
cli
sbbb
dec
push
call
jbe
and
jno
shll
and
subl
xchg
enter
lret
movsl
adc
push
bts
std
push
inc
cli
lret
dec
insl
pop
mov
loopne
cmp
sbb
mov
clc
loope
mov
fcoml
jle
adc
or
shr
xchg
adc
sbb
sbb
jns
mov
xchg
cmc
pop
shll
xchg
decl
add
sbb
and
jbe
adc
pop
push
dec
in
jmp
in
mov
fsub
jg
dec
push
dec
mov
adc
stos
movsl
out
es
and
loopne
xor
adc
shll
sahf
decl
jmp
sub
dec
and
repnz
sbbb
mov
jmp
xor
arpl
xchg
and
bound
test
and
jne
push
push
mov
inc
shlb
mov
out
mov
cmp
fcmovnu
sti
cld
mov
add
jl
bound
xchg
push
iret
cli
mov
lret
or
and
xchg
inc
js
test
dec
in
rcl
test
cmc
enter
adc
ss
leave
inc
popa
push
xchg
inc
sbb
pop
pop
lcall
lret
scas
mov
pop
sub
lock
bound
pop
adc
adc
xor
mov
mov
aad
jecxz
stos
push
and
or
in
repnz
jecxz
flds
jne
movsl
pusha
frstor
xchg
mov
push
lds
rcrb
fidivs
xchg
fucomip
testl
in
sub
push
lret
ja
rorb
stc
adc
pop
loop
and
int3
sub
test
adc
mov
lods
fs
hlt
arpl
les
repz
shl
jp
bound
mov
or
iret
pop
jo
mov
cmpsl
xchg
inc
test
inc
ja
lds
sub
cmc
imul
lock
mov
push
imul
add
jge
xchg
outsb
ret
aad
mov
jmp
mov
aaa
sbb
pop
xchg
and
xor
cmpsl
shr
add
pop
push
in
lods
push
mov
into
fstpt
mov
repz
push
dec
mov
mov
sbb
mov
push
cwtl
inc
cmp
das
fcompl
shlb
inc
out
dec
dec
in
test
xchg
inc
lods
out
sbb
fs
jl
add
mov
inc
mov
jns
leave
aas
int
in
leave
cwtl
xor
imul
inc
sbb
fidivs
nop
in
mov
jp
pop
pop
rcl
add
push
sub
mov
dec
popf
xchg
push
dec
push
mov
push
aaa
mov
lods
cmpsl
push
in
sub
jg
rcrl
cmpsl
inc
fisubrs
and
ret
and
add
sub
pop
add
push
jg
cmp
and
mov
mov
and
outsl
test
xchg
push
outsb
mov
popa
les
pop
leave
sbb
pop
jmp
ret
in
add
adc
in
fistpl
inc
sbb
jge
push
push
pop
cmp
sbb
aaa
push
call
negl
xor
in
test
push
emms
dec
or
xchg
mov
ret
cltd
xor
orb
sub
repz
mov
cmp
or
pop
mov
mov
mov
ret
rorb
sub
push
gs
xchg
sub
sbb
pop
imul
and
stos
inc
es
adc
stc
lahf
mov
addr16
aas
inc
lret
cmpsl
mov
xlat
fldt
inc
sbbl
jb
sbb
pop
add
push
loopne
repz
and
pop
dec
imul
jo
outsb
cmp
mov
pop
jno
mov
roll
push
xchg
jb
mov
mov
sbb
sub
repnz
in
cmc
adc
xchg
aam
mov
sub
sub
fistpl
aaa
aaa
inc
xchg
je
jge
jl
inc
or
add
lock
daa
sbb
jp
fstl
push
jne
jbe
int
jecxz
adc
adc
jns
pop
mov
dec
add
pushf
jecxz
jae
insl
add
mov
xor
add
sub
outsb
clc
mov
cld
jo
pop
add
cmpsb
mov
test
inc
out
test
jecxz
and
xchg
call
in
icebp
adc
push
inc
ja
jne
sub
jo
scas
add
mov
fsts
jb
jge
sbb
push
jne
lret
bound
cmp
or
insl
stc
dec
xlat
lods
xchg
popf
push
adc
and
es
sahf
push
push
mov
ficoms
lahf
out
adc
dec
mov
int
fdivs
sti
or
cmp
or
xchg
fcoms
or
les
or
es
scas
mov
sbb
xor
pop
add
push
arpl
xor
jg
pop
adc
lock
andl
insb
leave
and
imul
or
flds
lods
faddl
xchg
addl
in
inc
push
adc
outsl
popf
cmp
cmp
mov
rolb
movsb
pop
sbb
mov
stc
mov
sub
and
push
popaw
mov
dec
out
repnz
mov
jle
mov
cmpsb
test
add
push
and
push
jbe
into
js
xor
cmpsl
into
les
mov
sbb
inc
repnz
push
sbbb
lcall
push
rorl
addr16
in
std
pop
ds
repnz
mov
ret
push
jmp
inc
jmp
scas
dec
pop
inc
jb
mov
faddl
jge
sbb
cmp
lret
push
aam
push
xchg
out
pushf
sbb
xor
addr16
loop
mov
cmpsl
cmc
dec
inc
push
xorb
xor
mov
pop
inc
xchg
jecxz
mov
rcrl
mov
lahf
or
cwtl
lret
divb
ss
out
cmpsb
add
pop
sbb
filds
add
pop
cli
xchg
cltd
sbb
mov
xor
into
jnp
jge
mov
jbe
mov
cmc
outsl
arpl
ret
lcall
pop
ljmp
ret
and
sub
popa
jle
dec
clc
loop
dec
add
dec
aam
dec
repnz
inc
xlat
jnp
inc
pop
xchg
push
add
adc
sub
int
outsb
loope
sub
or
lret
adc
and
cmp
or
lret
je
movsb
imul
mov
sbb
scas
rcrl
mov
popf
sub
ret
push
decb
adc
in
idivl
inc
movsb
adc
jp
in
outsb
test
xlat
cmc
and
sbb
mov
pop
xlat
pop
out
stos
xor
and
inc
xchg
cltd
push
pop
xchg
jbe
stc
les
aam
push
repz
jl
pop
mov
test
xlat
mov
les
add
pop
scas
or
aaa
outsb
push
add
pop
pop
fcmovbe
adcl
sub
inc
outsb
mov
pop
enter
mov
mov
iret
mov
idivb
test
adc
cmp
sub
pop
inc
bound
cli
and
sbb
cmp
dec
add
ljmp
cmp
or
test
mov
dec
cs
jmp
insb
add
pop
dec
lea
scas
mov
test
sbb
cwtl
xchg
imul
pushf
cmp
repnz
push
push
jecxz
aas
fnsave
adc
lea
add
add
ljmp
push
mov
add
or
cld
add
out
aaa
int3
cmp
cmp
pop
aas
bound
test
cmp
inc
xor
aaa
mov
mov
add
loop
test
jl
adc
mov
push
lahf
test
sbb
jle
ds
or
mov
addb
nop
subb
sbb
jae
dec
cmp
sbb
aad
fs
stos
cmc
inc
mov
cwtl
lcall
add
fnstenv
push
mov
in
ficoml
pop
or
jp
in
out
ljmp
repnz
repz
or
xchg
dec
sahf
dec
pop
and
push
xor
inc
subb
lock
and
out
ljmp
sub
mov
icebp
shlb
add
xchg
add
das
add
std
xlat
pop
xlat
in
inc
inc
in
or
push
lret
std
push
push
aas
pushf
out
das
sub
fldenv
es
out
add
sub
into
imul
stos
mov
xchg
add
lock
das
lds
jmp
fcoml
mov
nop
cltd
ss
les
mov
inc
in
push
mov
test
push
ds
fcoml
xorb
xlat
test
inc
repnz
mov
adc
or
xchg
cmpsl
jle
xor
pop
mov
ret
fsubrl
push
dec
orl
and
in
xor
xor
call
or
cmp
insl
ss
xchg
imul
psrlw
mov
les
arpl
and
rorb
fisttps
cmp
aam
lcall
lahf
push
in
filds
ds
leave
fimuls
es
loopne
mov
adc
add
jb
daa
jge
pop
adc
ja
xchg
jb
int3
frstor
and
xorb
adc
inc
jo
pop
and
push
pop
pop
js
sub
pop
mov
je
sbb
jg
je
push
lods
or
mov
mov
push
insb
ror
add
sub
ljmp
push
subb
cmp
js
fidivl
push
and
xor
inc
sbb
aaa
test
test
dec
add
pop
mov
inc
enter
addl
xchg
cli
js
das
sub
xadd
push
fwait
dec
out
loopne
push
inc
std
movsb
xlat
int
mov
mull
std
xor
mov
dec
es
mov
dec
cmpsb
mov
repnz
mov
and
jnp
mov
imul
sub
or
pop
and
sbb
jmp
jae
aad
jbe
mov
mov
or
into
decl
js
cmp
push
adc
mov
dec
aam
pop
fs
out
aad
movsb
cmp
shrl
and
sub
js
popa
dec
roll
xchg
adc
mov
fdiv
or
sbb
icebp
sbb
insl
pop
les
lahf
pop
push
cmp
cmpsl
insb
mov
das
cld
cmp
lahf
jg
lahf
ret
pop
adcl
sbb
sbb
repz
aaa
movsl
ficomps
ret
pop
les
adc
pop
pop
aaa
outsl
in
inc
or
mov
test
jmp
loop
es
pop
lods
dec
pusha
insb
gs
lds
call
test
into
mov
and
movsl
adc
push
xchg
pop
stc
loopne
decb
iret
jle
add
cvttps2pi
fists
ror
adcl
roll
xor
mov
loope,pt
sub
es
mov
nop
and
dec
cli
addl
mov
ja
xchg
aas
mov
push
inc
mov
push
fsubr
and
int
scas
dec
inc
and
rorb
lods
cmp
mov
popf
xor
adc
add
inc
jbe
xchg
outsl
shr
cmp
sbb
push
flds
mov
fisubrs
cmp
sbbb
stos
jnp
das
jl
fistpll
xchg
mov
sti
cmc
and
scas
pop
pop
xchg
movsb
dec
xor
mov
jb
dec
sbb
mov
xchg
insb
mov
inc
pop
jnp
xchg
addl
adc
xchg
ret
lods
je
out
fimull
dec
div
adc
dec
xor
std
inc
daa
fs
fdivrs
sahf
lret
test
or
xor
mov
lcall
push
clc
adc
inc
and
xchg
sarb
shlb
jle
aam
pop
mov
scas
lods
sti
cmp
xchg
sbb
dec
push
sbb
xchg
lahf
add
mov
inc
and
mov
xchg
aad
std
and
popf
xchg
push
inc
pop
pop
cmp
inc
outsl
cmpsb
mov
push
or
jb
aas
sbb
std
push
rcrl
and
mov
add
and
mov
xchg
pop
sahf
outsb
mov
mov
in
mov
push
xor
xor
jge
lds
mov
dec
cmp
or
movl
loope
fs
sarb
mov
lock
cmpsl
mov
xor
rorl
cmpsl
mov
scas
popa
sbb
cltd
cmp
test
cmp
adc
dec
cmc
cltd
add
sub
mov
cli
sub
pushf
mov
push
cmp
mov
loope
xchg
call
icebp
mov
call
nop
scas
sbb
andl
jmp
bound
cs
mov
adc
xchg
jno
movsb
jnp
xor
or
add
lret
pop
sub
aam
enter
pusha
bound
add
xorl
mov
dec
cs
in
aad
rorb
lock
ret
or
mov
mov
fs
in
cld
or
insb
lea
idiv
in
inc
les
mov
mov
mov
mov
push
adc
rorb
mov
mov
cmp
jl
fists
or
sbb
test
lret
jg
inc
inc
mov
or
shl
sub
scas
push
pop
mov
mov
mov
enter
mov
jns
out
addr16
sti
and
mov
movsl
jo
pop
add
jmp
or
jle
leave
push
insb
cmp
insb
add
stos
add
or
xchg
adc
xchg
or
push
jg
sub
jmp
stos
jp
push
aas
sbb
lcall
sbb
mov
outsb
xchg
ficoml
inc
cmp
pop
push
aaa
inc
xor
arpl
push
sarb
fisubs
or
cmc
dec
das
jmp
pop
sub
lret
jo
sub
adc
mov
xchg
mov
adc
xor
mov
or
orl
into
jne
lcall
enter
pop
jl
int
pop
mov
inc
adc
fcoms
fists
into
bound
jp
iret
in
pushf
es
orb
lcall
ror
add
xchg
lods
adc
aad
std
fstpl
xor
rcr
jbe
add
add
inc
cmpb
or
lret
int3
pop
fstl
mov
mov
cmp
mov
addr16
rolb
xchg
inc
out
scas
lods
je
inc
push
mov
mov
or
sti
mov
stc
sub
jp
mov
mov
sbb
xor
mov
or
enter
jp
cmp
mov
call
data16
loopne
pop
push
cwtl
pushf
cwtl
mov
aad
clc
jecxz
push
rorb
std
imul
and
mov
mov
xor
xchg
inc
and
aas
loop
mov
jp
xchg
and
or
xor
cli
push
sarb
fldcw
ljmp
push
or
scas
adc
nop
shl
lahf
rcrl
mov
aam
cmp
adc
adc
sub
push
jg
insb
fwait
pop
mov
fdiv
jmp
sub
dec
nop
enter
sbb
repz
sub
lcall
mov
into
je
push
cmpsl
andl
mov
mov
ds
inc
pop
bound
push
addl
mov
or
lods
sub
addr16
push
dec
adc
xlat
jg
adc
test
or
aaa
mul
mov
sbb
nop
lods
std
shll
and
cmc
cmc
mov
mov
sbb
and
push
rcr
mov
mov
cmovs
sbb
pusha
mov
sbb
sbb
sub
inc
daa
outsb
mov
cltd
xchg
mov
lahf
iret
mov
arpl
mov
push
jo
cmp
sub
inc
xor
lcall
hlt
jg
adc
adc
jno
dec
add
dec
pop
fcmove
mulb
push
xchg
js
lds
out
mov
adc
push
shl
or
les
movnti
pop
stos
mov
mov
cltd
add
lock
aaa
hlt
fstl
aas
inc
js
inc
js
rorb
jmp
mov
push
insl
or
in
into
hlt
and
xor
jns
dec
jns
cmp
mov
cmp
into
push
lock
xor
std
iret
mov
shll
fidivrs
ja
int3
mov
sbb
xchg
mov
dec
cwtl
or
mov
sahf
lock
mov
mov
adc
xchg
xor
push
push
fiadds
test
fwait
mov
push
sti
sub
scas
adc
lcall
push
fstpl
xchg
push
pop
sub
or
cmpsl
inc
pop
repnz
cmp
lret
shr
xor
push
outsl
or
int3
fcomps
mov
fdivs
aad
and
and
or
or
popf
js
jl
push
pop
cmpsl
fdivrl
jnp
mov
insl
xchg
aaa
sbb
aas
xlat
bound
mov
fwait
mov
je
test
jns
mov
adc
or
cli
std
je
inc
sbb
addr16
fwait
inc
adc
aas
lea
mov
roll
sub
je
xchg
xor
aas
or
inc
stc
lret
fucomi
daa
jmp
adc
aam
int3
cmpsb
inc
and
popa
or
mov
xchg
xchg
imulb
and
gs
pop
fildl
fwait
mov
adc
xlat
jp
cmp
cs
mov
inc
cmp
repz
sub
push
popa
add
xor
and
imul
das
xchg
ret
cs
xchg
inc
pop
stos
dec
adc
dec
and
add
mov
sbb
dec
jae
add
ret
or
or
int3
adc
adc
int3
cmpsb
outsb
lcall
inc
jecxz
aad
roll
cmpsb
sbb
push
cmp
sbb
mov
js
push
gs
clc
xlat
cld
das
fnstenv
das
subl
mov
test
inc
adc
add
and
push
popf
push
xor
dec
push
cmp
rclb
lds
cmp
dec
pop
xchg
sub
push
ja
jo
fmuls
out
test
xchg
and
gs
xor
and
push
out
js
pop
int3
cwtl
bound
add
divl
push
adc
in
out
jb
xchg
cwtl
mov
out
adc
lds
sbb
add
mov
xor
clc
out
ret
and
lods
lds
xor
pop
jge
push
pop
mov
iret
dec
mov
mov
clc
dec
rcrl
lods
cs
fcomi
int
cmp
cmp
adc
lret
rcrl
aam
inc
or
mov
pusha
xchg
push
cltd
in
and
inc
scas
sbb
loopne
lods
test
or
pop
pop
dec
test
in
or
xchg
adc
ljmp
clc
and
testl
lret
sub
ljmp
lcall
icebp
mov
pop
inc
add
jmp
xor
popa
lea
lods
imul
pop
pop
inc
fs
xor
es
push
outsb
popa
fcoml
into
cmp
xchg
leave
xor
dec
mov
jbe
daa
frstor
jno
xor
rcrb
fnstcw
addr16
jecxz
sahf
clc
mov
ljmp
fildl
xchg
jns
enter
sub
mov
mov
mov
mov
sti
and
and
mov
fidivrs
adc
test
insl
lds
mov
ds
xor
push
jl
ret
outsb
and
xor
stc
test
mov
ffree
test
lock
daa
push
nop
cmpsb
pop
cwtl
stos
fsubs
lea
and
cmp
sub
mov
jp
sub
ja
push
rclb
sub
mov
pop
imul
out
xchg
fs
mov
mov
out
sti
jae
mov
test
out
mov
xchg
sti
loop
leave
in
ss
cmp
mov
nop
iret
call
sbb
cmp
xorl
ja
adcb
cli
and
sub
sub
dec
mov
dec
adc
sbb
fdivl
sbb
mov
scas
sahf
in
stos
clc
mov
fists
rcr
mov
sbb
fsubr
mov
cs
push
sub
inc
test
movsl
dec
in
int3
mov
pop
jbe
sahf
push
out
jg
jmp
shll
das
sub
mov
or
in
jecxz
mov
xchg
das
or
jo,pt
cli
ds
lea
test
inc
gs
pop
sbb
outsb
lahf
xchg
mov
nop
movsb
sub
data16
scas
mov
mov
ja
mov
shlb
xor
inc
cmc
fidivs
mov
mov
lea
hlt
add
jp
jecxz
cmp
push
mov
push
jp
or
inc
int3
mov
test
shlb
je
push
adc
jns
cmpsb
sub
mov
cmpsb
jl
mov
arpl
add
sub
add
outsl
add
or
shrb
pop
push
inc
mov
cmpsb
cmp
sbb
dec
insb
sbb
mov
dec
cltd
loop
xchg
xchg
arpl
mov
repnz
xchg
cli
and
cmpsb
mov
xchg
jbe
add
pusha
mov
pop
mov
dec
cmc
gs
fcomp
pop
mov
or
jp
movsb
sub
mov
jae
stos
dec
stc
frstor
fisttpl
clc
mov
mov
mov
dec
or
and
xchg
push
aad
test
icebp
pop
push
pushf
and
xchg
jecxz
mov
lods
add
mov
bound
adc
push
pop
and
xlat
stc
in
sar
adcb
jg
jo
push
cli
cwtl
out
repz
les
leave
lahf
sub
mov
and
xor
jae
inc
icebp
imul
popa
js
lds
mov
aaa
push
fsubs
mov
cld
pop
inc
ja
stc
mov
aas
mov
sub
cmpsb
mov
mov
cmp
fsubr
repz
shrb
mov
xchg
jae
cmpsb
mov
adc
dec
add
jo
int
or
bound
dec
sub
pop
jmp
jnp
rcll
dec
data16
and
fcoms
cmp
pop
sub
pop
sub
dec
lret
mov
pop
push
sbb
xchg
mov
lods
dec
out
aam
xor
mov
sbb
lds
push
dec
pushf
inc
stc
loopne
pop
sub
les
push
adc
xchg
mov
pop
push
dec
mov
sahf
inc
or
sbb
xchg
daa
xor
and
xor
sub
and
cmpsb
test
cpuid
mov
jo
push
xchg
lods
mov
sti
jge
bound
stc
jb
fildl
add
pusha
insb
jne
jle
ja
inc
stc
leave
mov
scas
sarl
and
testb
xor
and
es
lods
pop
sbb
cli
pop
addb
cld
push
idivl
mov
dec
rorb
mov
sbb
popa
in
outsl
dec
imul
mov
adc
sti
push
gs
test
scas
xor
loop
in
jmp
outsl
rorl
mov
push
mov
dec
mov
xchg
cmp
ljmp
mov
mov
pop
pop
test
pop
sub
jns
outsb
pusha
fdivl
neg
insb
jmp
dec
clc
or
fcoml
or
fsub
inc
inc
xorl
push
push
movsl
dec
jno
aaa
xchg
add
roll
or
mov
adc
inc
rolb
cmp
dec
orl
push
inc
xchg
adc
add
clc
cwtl
test
sub
mov
pop
mov
push
and
sbb
outsl
fisubl
mov
xchg
sbb
test
hlt
enter
inc
mov
test
nop
sub
jp
in
ret
adc
testl
and
cwtl
cmp
nop
mov
adc
pop
jae
shll
sub
loopne
stos
inc
in
dec
sbb
inc
jne
bound
int3
lds
add
inc
cmc
ljmp
call
mov
scas
sub
int
mov
mov
int
adc
pop
sub
adc
add
clc
mov
jmp
sub
imul
mov
mov
andl
push
rcl
lds
inc
xchg
xchg
dec
cmp
lods
push
out
push
cwtl
push
lods
into
cmpsb
popf
fs
js
icebp
xorl
xchg
pop
imul
repnz
fisttpll
pop
fsubrl
xchg
jo
in
lret
mov
jg
inc
cli
dec
popf
out
sbb
shlb
arpl
and
pusha
inc
and
cmpsl
mov
fldt
test
lods
xor
inc
jmp
cmp
insl
cltd
cwtl
dec
xchg
stc
popa
jge
iret
aad
xchg
popf
push
mov
aad
popf
cmc
test
aaa
xchg
and
pop
mov
hlt
in
jecxz
xor
lds
sub
jge
in
jg
mov
push
dec
ss
mov
int3
clc
mov
adc
pop
mov
pop
xchg
inc
out
fldcw
leave
mov
sahf
lea
mov
mov
pusha
xchg
insl
out
daa
push
call
ffree
addr16
jecxz
add
pop
lods
sbb
mov
in
pop
inc
movsb
push
add
mov
sahf
cld
outsl
and
int3
mov
ret
fisubs
and
lea
dec
pop
xchg
incl
mov
sbb
shr
xchg
add
sub
pusha
jns
in
decb
jo
mov
xchg
push
xchg
or
dec
xlat
fmulp
insl
repnz
inc
cmp
dec
stc
pop
mov
mulb
and
push
dec
push
xor
fucomip
fisubl
push
jb
push
mov
or
outsl
adc
mov
lock
mov
xor
adc
ret
sub
or
decl
test
pop
mov
dec
in
add
mov
sbb
lods
push
pop
jb
fs
cmp
jg
xor
dec
or
in
pusha
cwtl
sub
push
pop
test
sub
les
aas
das
dec
andb
out
or
into
insb
pop
cmp
fs
jmp
adc
jmp
imul
cmpsb
notb
cmp
mov
push
mov
jg
push
test
sti
xchg
mov
pop
addr16
push
sbb
cltd
dec
cmp
stos
into
adc
daa
xchg
sbb
jge
in
sahf
std
popa
push
popa
ss
into
xor
jae
sar
jo
pop
out
dec
sti
iret
adc
rcrl
xor
inc
push
stos
addr16
ljmp
in
orl
inc
aam
and
mov
lret
and
pop
test
subl
fsubs
push
leave
outsb
movsl
mov
cld
mov
xchg
pop
out
imul
movsl
pop
adc
in
mov
sbb
push
in
jnp
lock
sbb
cli
das
sti
dec
pushf
lods
stos
dec
mov
out
mov
pop
dec
aas
xor
adc
mov
add
mov
adc
shrl
mov
in
std
stc
fs
dec
scas
xchg
popf
mov
jns
je
adc
sbb
inc
stos
cld
mov
int
fldl
mov
mov
dec
jbe
in
addl
mov
add
push
or
pop
int3
cmp
adc
and
ds
pushl
cmpsb
adc
ljmp
fbstp
in
scas
orb
stc
jae
xor
sti
std
adc
es
mov
daa
loop
lea
push
xchg
loope
lds
cmc
mov
pop
mov
inc
cmp
cwtl
or
insl
and
into
cmp
cmp
jno
sub
push
out
stos
ror
enter
fdivrs
mov
cmp
sahf
xor
iret
ficomps
or
std
mov
xchg
cmp
fcmove
sbb
test
jno
mov
mov
jbe
mov
inc
inc
adc
call
or
add
rorl
lret
lret
aaa
sbb
jge
jnp
mov
fistpl
in
cld
je
xor
xor
cwtd
push
out
inc
hlt
or
pop
loopne
lea
fimull
fdivs
mov
shrb
lock
push
loope
add
lds
jecxz
fcoml
cmpb
daa
cmp
xor
push
and
test
popf
jns
and
lods
push
cmp
jb
outsl
sbbl
xchg
mov
in
sbb
lret
sub
aam
dec
pusha
fs
loop
mov
push
mov
push
inc
fwait
xchg
add
add
xchg
dec
nop
std
outsb
mov
xor
lock
push
ljmp
sbb
xor
in
into
mov
mov
mov
dec
clc
adc
xchg
cltd
fstpt
and
or
aam
das
adc
out
and
scas
fadds
mov
shl
or
push
fnstenv
mov
test
test
xchg
ljmp
imul
imul
push
xor
inc
pop
dec
adc
adc
ret
pop
repnz
aam
xchg
sub
sbbl
lea
dec
dec
js
inc
xor
dec
mov
fidivs
rcr
mov
adc
scas
hlt
adc
inc
fstl
and
cmpsl
mov
ljmp
scas
mov
sbb
adc
pop
pop
fnstsw
sbb
pop
mov
dec
cs
dec
loope
sub
es
or
int3
inc
jbe
repz
sub
pop
lock
cmpsb
mov
pop
popf
push
cltd
cld
xchg
rcrb
int
cmovne
mov
mov
or
add
loop
and
movsl
mov
push
cmp
fwait
adc
cli
aas
jp
dec
jle
icebp
aam
ds
rcl
fisubs
aas
push
test
inc
dec
cmp
cwtl
loope
in
xlat
les
lods
popf
push
sti
movsb
or
push
dec
les
push
jb
inc
enter
sbb
xchg
std
sar
jg
push
loope
roll
dec
int
gs
mov
loop
sbb
dec
loopne
fwait
outsb
into
test
test
pop
sti
pop
decl
call
leave
les
lahf
and
mov
loopne
lea
lods
into
movsb
repz
loope
lret
adc
mov
jmp
bnd
jecxz
popf
fs
add
std
sti
sbb
inc
cmp
or
test
rcl
pop
out
inc
iret
ss
and
clc
push
xor
xchg
addr16
iret
jno
in
fcompl
es
inc
xchg
sbb
ds
lods
xlat
xchg
icebp
cmp
stos
jno
mov
cmpsb
fwait
sbb
lods
stos
push
inc
iret
leave
cmp
xchg
push
popl
and
jecxz
or
jmp
mov
dec
push
cmp
xchg
jmp
xchg
rclb
ret
mov
aam
jecxz
daa
popa
cmp
dec
outsb
jo
fsubrl
daa
mov
xor
loopne
jnp
fcmovbe
add
push
xor
movsb
or
int
and
mov
jp
pop
out
cmp
cmp
adc
jge
xor
out
les
sbb
nop
and
add
xor
imul
cs
orl
jae
popa
jne
outsb
xchg
inc
test
inc
add
mov
call
lcall
int3
into
pop
fwait
mov
out
mov
or
xor
push
mov
fs
jnp
icebp
pop
and
lret
shlb
jmp
mov
pop
test
push
cmpsb
movsl
pop
fadds
ficomps
stc
nop
xor
or
push
xchg
xor
adc
and
mov
out
icebp
adc
mov
cmp
leave
add
xchg
xor
andb
xor
jmp
dec
pop
jno
push
addr16
adc
pop
sub
dec
repnz
iret
adc
test
sub
or
jbe
and
jecxz
rcrb
js
mov
mov
pop
test
icebp
scas
xchg
xchg
enter
icebp
mov
push
icebp
mov
mov
sub
loope
cmpl
adc
sbb
ljmp
push
arpl
adc
popl
stos
fnsave
adc
test
ljmp
inc
insl
cmp
lds
adc
dec
inc
cmp
xchg
cli
cmp
xchg
pop
xchg
in
xchg
and
cs
mov
std
and
lods
push
lods
lock
xchg
or
cmp
cmp
sbb
sahf
ja
jnp
or
sbb
xor
or
sub
mov
push
fsts
jnp
lds
div
imul
insb
rep
inc
lahf
xor
arpl
stos
pop
mov
mov
add
or
outsb
ss
xchg
mov
lcall
cs
mov
lock
mov
iret
xchg
jbe
add
idivl
fadds
stos
jmp
cmpsb
hlt
movsl
cmp
or
and
inc
les
and
sahf
mov
jne,pt
cltd
hlt
dec
data16
movsl
repnz
add
pcmpgtb
mov
addr16
dec
pop
adc
fsts
push
mov
jno
sbb
add
pop
mov
inc
sbb
pop
dec
mov
call
mov
je
push
je
mov
pop
sbb
sbb
mov
data16
or
rcrl
mov
jmp
sti
xchg
lret
cmpsl
xchg
call
loop
and
mov
inc
mov
mov
push
and
pop
cwtl
imul
adc
mov
push
sub
xchg
jbe
xchg
pop
add
cmp
jb
mov
outsb
idivb
pushw
or
jnp
dec
or
mov
add
jl
jae
jne
xchg
jmp
push
xorl
inc
jne
mov
pop
xlat
pop
mov
dec
push
or
mov
es
cli
sbbl
and
mov
loopne
adc
mov
rorb
ret
sub
fildl
pop
call
jle
lahf
cwtl
fdivrs
pmullw
sub
push
icebp
jae
fisubrs
cmp
add
or
inc
pop
jg
or
dec
adc
scas
std
flds
outsb
into
lret
cwtl
fnsave
in
test
adc
sub
mov
mov
inc
mov
adc
out
pop
aas
mov
ja
popa
aaa
adc
mov
sti
iret
loopne
push
xchg
pop
into
shrb
xor
data16
out
rorb
into
dec
addl
leave
sbb
jb
orb
clc
cs
sbbb
cmp
sbb
out
add
ja
shlb
sbb
push
lret
adc
xchg
cmpsb
lods
fcompl
ljmp
cmp
dec
mov
cmp
stos
mov
mov
push
jge
pop
xchg
hlt
mov
stos
loopne
hlt
mov
and
sbb
mov
out
adc
arpl
ss
lcall
fildl
mov
cmp
or
xor
fcoml
mov
xor
js
cmp
xchg
and
inc
cmpsb
lret
stc
in
fs
mov
ds
loop
loopne
in
xor
sub
lcall
int3
inc
fs
pop
sub
scas
jl
daa
movsl
lahf
aaa
mov
push
mov
mov
dec
jnp
push
lcall
jg
popf
andl
rcll
jg
ja
dec
jb
xor
popf
sbb
pop
or
shll
pop
dec
insb
loop
arpl
inc
push
je
jmp
stos
cmp
pop
shlb
pop
inc
movsl
arpl
sub
add
xchg
jecxz
xchg
nop
outsl
xchg
push
or
leave
cmp
pop
inc
out
mov
mov
and
inc
sbb
xchg
mov
test
call
mov
subb
jo
repz
divl
inc
jo
cmpsb
mov
insl
das
pop
cmp
push
jecxz
mov
inc
js
insl
dec
pop
cmp
pop
mov
cmc
push
bound
pop
inc
dec
icebp
imul
inc
call
or
rorb
test
add
scas
xchg
adc
or
xchg
mov
pop
lock
mov
test
aaa
jbe
and
and
dec
xor
fisubl
sbb
cld
es
inc
or
fwait
add
adc
or
aad
repnz
jo
test
dec
ret
outsl
fwait
in
icebp
popf
das
xchg
orl
pop
rorl
pop
mov
dec
add
fdiv
jmp
stos
jae
out
loop
sub
out
stos
sbb
cmp
scas
cltd
addr16
loop
rcll
in
leave
lea
adc
adc
lret
jg
into
pop
imul
ret
loope
jbe
mov
lcall
aaa
stos
xchg
lcall
outsl
call
insl
push
neg
jl
sub
inc
mov
aam
das
notb
lock
jo
dec
mov
mov
xchg
iret
sbb
les
lahf
mov
mov
xchg
add
sbb
mov
inc
xchg
or
int3
add
pop
out
adc
cmpsb
ja
lret
je
or
inc
cs
lahf
mov
push
fwait
ret
js
cmp
lock
mov
mov
ds
xchg
lcall
pusha
push
jnp
jmp
dec
or
sti
mov
andl
inc
mov
test
dec
lret
sbb
mov
outsl
jno
int
adcl
mov
ret
mov
lret
mov
fs
cmc
pop
xor
es
lds
mov
outsl
in
and
mov
scas
dec
jo
inc
xor
enter
dec
cmp
outsl
outsl
inc
fcmove
add
cmpsb
mov
mov
loopne
cmc
adc
daa
add
mov
jbe
push
mov
mov
mov
inc
fcmovnu
sbbl
fwait
push
jne
push
stc
xor
andb
addl
xchg
lds
aad
jns
sub
lock
repz
shrb
push
ja
and
imull
fucomp
in
sub
sub
mov
leave
add
dec
idivl
mov
das
or
nop
jp
movsl
inc
mov
xor
dec
int
lahf
sbb
mov
cmp
mov
int3
jge
xor
dec
adc
jae
ficoml
insl
repz
mov
xchg
leave
mov
in
dec
leave
outsb
call
dec
je
repnz
xchg
fwait
ljmp
jnp
popf
loopne
clc
pop
pop
add
sub
in
out
xorb
shrl
mov
loopne
xchg
sub
sub
push
xor
icebp
xchg
or
adc
rcrl
loopne
out
pop
sub
xor
negb
in
nop
out
dec
mov
xchg
daa
cmpb
movsl
mov
push
mov
jbe
xchg
dec
jmp
mov
lret
xchg
mov
mov
mov
pushf
xchg
adc
loop
insb
adc
int
inc
jno
ss
fnstcw
cmp
movsb
and
scas
in
jb
shrl
mov
push
mov
cmp
xchg
mov
cli
xlat
je
shrb
idivl
add
sahf
iret
and
mov
nop
in
lcall
lods
jnp
or
stos
in
leave
push
ljmp
sti
aad
fcomps
cmp
mov
in
push
pop
ret
scas
or
pushf
sub
pop
push
in
mov
mov
test
inc
mov
hlt
add
add
sahf
orl
jp
callw
cmp
push
scas
lret
sbbl
jno
adc
xor
pop
jg
add
mov
dec
xchg
aas
dec
imul
mov
jbe
fs
jp
int3
insb
rcrb
jle
fidivrl
jb
lds
pushf
or
adc
addr16
jmp
sahf
pop
dec
jge
xchg
mov
movsb
push
subb
cwtl
xor
and
divl
inc
xlat
cmc
inc
jl
pop
mov
cld
sti
fisubs
jle
sbb
sub
mov
pop
pusha
test
jp
jl
loopne
addl
pop
lods
pop
push
ds
add
adcb
or
loop
push
adc
loope
rcrl
xchg
cmp
adc
jae
test
inc
aas
cs
inc
imul
sbb
in
test
push
mov
jbe
add
imul
shll
mov
push
rcr
cwtl
cmpsl
out
in
test
mov
or
xor
xor
jb
unpckhps
shl
int
data16
les
mov
addr16
mov
cmp
lahf
jne
icebp
pop
repnz
enter
add
jae
mov
pop
xchg
daa
in
sbb
sub
sbb
add
in
je
cli
icebp
outsl
orl
cld
xchg
adc
cmp
mov
push
mov
xlat
sahf
sub
setb
or
xchg
aam
out
lea
mov
jne
xchg
in
sbbl
lods
mov
mov
int3
push
pushf
cmpsl
inc
imul
lret
idivb
and
in
cmp
add
xchg
mov
js
fdivp
mov
inc
roll
add
roll
and
bound
sar
scas
andl
and
addr16
jo
in
xorl
loop
ds
add
lock
ss
aad
js
mov
cmpsl
divl
test
jg
xchg
lahf
adc
movsl
lret
shrb
sbb
stos
inc
mov
inc
sbb
push
test
mov
push
lock
repz
jns
mov
jo
xor
insl
sub
jl
mov
lcall
ss
pop
push
pop
outsl
cli
outsl
adc
push
or
loop
enter
jmp
sarl
shlb
or
push
pop
mov
insb
outsl
adc
call
inc
sbb
fnstsw
mov
sbb
pop
inc
icebp
xchg
int3
push
out
and
int
fwait
dec
in
push
in
mov
or
mov
testb
daa
testb
pop
loope
jg
pop
pop
inc
and
sub
adc
or
daa
mov
or
mov
and
dec
int3
jl
xchg
daa
sbb
jae
xchg
lret
adc
enter
bound
mov
push
add
loopne
aam
addr16
or
mov
inc
or
insb
mov
out
push
out
mov
xchg
add
mov
int3
insl
sbb
orb
sbb
mov
clc
fstps
fnstsw
jp
iret
inc
inc
in
nop
jnp
inc
cmp
rclb
pop
jb
mov
mov
leave
mov
xor
cmp
scas
sbb
mov
sbb
sub
test
xor
pop
or
sbb
cmpsl
les
enter
xchg
inc
sub
imul
mov
mov
and
cmp
cmp
mov
movb
clc
cmp
loopne
and
nop
subl
popa
test
lahf
mov
imul
les
stc
push
push
add
mov
mov
xor
mov
ret
dec
in
ds
dec
cs
xor
jle
test
xchg
cwtl
inc
out
xlat
aad
mov
jp
inc
insb
mov
sti
stos
aam
pop
notb
iret
jnp
adc
and
cmp
push
jno
sub
ffreep
xor
repz
adc
pop
mov
pop
jns
adcb
and
and
mov
push
mov
lods
mov
push
mov
ret
adc
xchg
push
scas
icebp
and
jb
ret
clc
out
push
sarl
dec
xor
cmpsb
xor
das
sbb
cmp
push
test
pusha
ja
sarl
inc
sbb
and
scas
mov
sub
out
pop
jmp
aam
xchg
or
and
scas
daa
arpl
or
pop
rol
gs
out
mov
popl
or
sub
shr
xchg
xchg
cmp
mov
and
push
dec
pop
xchg
ss
xor
ror
pop
push
icebp
decl
sub
xor
dec
mov
and
aaa
cmpsb
dec
ds
cmp
ljmp
addb
adc
add
xlat
rorl
and
mov
out
adc
pusha
pusha
loop
scas
pop
int3
movsl
mov
orl
gs
cmpsb
and
fmuls
adc
addr16
push
dec
jo
pop
lcall
daa
cmp
mov
xchg
stos
cmp
dec
out
xchg
leave
adc
sub
fildl
lea
xor
fadd
lea
lcall
or
and
adc
lods
pushf
mov
fisubs
mov
loopne
inc
int3
or
nop
inc
pushf
aad
lea
lds
rol
gs
mov
and
aam
jb
mov
rolb
bound
fxch
xor
inc
scas
scas
sub
pop
popf
cmp
shl
pop
push
mov
int
test
mov
mov
lea
subb
xchg
aaa
sbb
inc
mov
popf
jo
jae
sbb
jmp
idivl
jl
leave
clc
mov
cmp
jns
mov
jg
lret
outsb
mov
in
pop
adc
arpl
mov
xorl
aaa
adc
adc
jp
js
xor
mov
lods
push
and
jecxz
dec
and
lods
mov
stos
mov
mov
sahf
sbb
and
loopne
cmp
fldl
add
inc
mov
ret
jnp
in
mov
ja
xor
mov
sbb
leave
sub
test
mov
ffree
aaa
sbb
sub
lret
shl
adc
mov
aad
fcoml
insb
stc
aam
daa
fsubrs
bound
cwtl
mov
xlat
pop
jp
lea
mov
inc
mov
and
fsts
cwtl
pop
inc
and
mov
lods
lods
les
jl
xchg
adc
jns
xchg
aam
mov
mov
aad
pop
enter
cmpl
out
mov
push
mov
or
jg
jnp
aaa
fcoms
movsl
mov
int
jmp
sti
push
fwait
sub
in
pusha
and
loopne
dec
inc
adc
sub
lds
jbe
xchg
or
dec
xchg
lods
jmp
jge
aas
test
mov
pushf
stc
cmp
incb
insb
lods
xchg
push
dec
dec
mov
pop
pop
cmp
repnz
mov
jno
hlt
or
mov
inc
or
inc
mov
inc
sbb
xchg
daa
mov
sub
and
fwait
mov
ret
xor
mov
sbb
fdivrs
inc
push
sbbb
movb
ret
jle
stc
pop
rorb
popa
dec
dec
in
jae
repnz
ror
push
movsl
loope
ss
fstpl
push
scas
stc
ss
push
addl
out
pop
xchg
mov
loop
loop
movsl
scas
jg
hlt
shll
sub
inc
pop
mov
sub
dec
jecxz
repnz
jae
and
xchg
movsb
or
test
scas
clc
inc
imul
sub
sti
fisttpl
mov
cmp
in
and
cli
cmp
mov
push
or
cmpsl
in
test
push
ret
cmp
arpl
push
aas
test
push
mov
inc
jl
xchg
cmp
cli
out
pusha
xchg
push
stos
pushf
cmp
jle
imul
out
fs
pusha
test
mov
int
movl
and
mov
cmp
inc
lea
clc
mov
pop
out
stc
lock
jbe
add
aad
cmpsb
mov
into
les
aad
cmp
fcomp
enter
sar
dec
mov
adc
ja
mov
mov
sbb
inc
sarl
sbb
mov
insb
out
fs
cmp
cli
dec
cmp
adc
nop
into
jmp
addr16
push
imul
mov
jae
jmp
mov
dec
push
sbb
hlt
insl
in
test
idiv
fdivrs
and
aam
cwtl
sbb
call
and
addr16
test
xchg
push
test
or
cwtl
sti
jp
lea
aam
jl
insb
ja
mov
test
mov
in
imul
mov
test
fists
int
dec
mov
std
push
les
and
out
addr16
leave
shll
cmp
xor
pop
cli
out
jecxz
sub
add
mov
jecxz
testl
std
dec
jae
xor
cmp
stc
ret
pop
cmp
xor
pop
sub
jmp
into
clc
mov
sub
jl
mov
cli
cmpsb
sbb
je
mov
lods
repz
sub
mov
add
inc
mov
mov
and
or
and
stc
dec
aaa
jl
stc
and
sub
fistl
sbb
mov
out
sbb
sub
pop
dec
test
outsl
xor
std
pop
inc
clc
lods
jecxz
sbb
add
in
shl
sbb
rcrb
pop
out
push
pop
mov
loopne
mov
jle
lret
popa
or
popf
fs
pop
or
nop
inc
dec
push
jmp
cltd
movsl
mov
pop
loop
mov
je
inc
jecxz
xchg
repnz
adc
sub
pop
jmp
repz
arpl
outsb
mull
mov
push
cmc
stos
jmp
lods
jecxz
sti
popf
cwtl
fs
inc
pop
movsl
cmp
shll
push
imul
insb
xor
inc
and
pop
les
pop
and
inc
sub
mov
stos
jmp
out
xor
fs
pop
dec
cmp
mov
push
ljmp
mov
push
mov
inc
xchg
push
hlt
pop
insb
movsl
cmp
fdivrs
pop
aam
adc
and
icebp
sub
push
in
in
pop
inc
mov
iret
xchg
ret
cmc
into
xchg
and
or
js
.byte
sbb
cmp
and
ja
scas
fistps
jae
pop
out
insl
insb
outsl
leave
ds
pop
std
ret
cmc
jmp
scas
add
arpl
scas
pop
mov
pop
jns
mov
mov
stc
mov
iret
pop
lods
mov
and
sbb
add
inc
outsl
arpl
cmp
jecxz
mov
imul
sbb
mov
adc
or
in
mov
inc
xor
sahf
imul
xchg
dec
repz
sti
push
data16
ficoml
adc
repnz
lods
addr16
into
insb
pop
adc
aad
ljmp
nop
and
pop
xchg
outsb
je
pop
test
stc
mov
mov
and
sub
cltd
lods
or
inc
xorb
repz
jg
jb
jge
inc
aam
and
cmp
or
lds
or
adc
loopne
cmp
decb
or
dec
pop
xor
imul
sar
call
test
and
xlat
push
insl
mull
js
fistpll
jge
inc
imul
xor
test
jno
nop
pusha
adc
fcomi
fsubr
push
jl
and
push
adc
adc
pusha
out
jmp
insb
out
call
inc
daa
mov
lret
adc
push
cli
cmp
aas
stos
fldt
add
mov
std
ds
mov
or
cmp
sub
fstpl
adcl
adc
xchg
je
xor
lods
jmp
push
fiaddl
in
pop
lds
outsb
daa
out
mov
jg
xor
and
mov
inc
fimuls
lahf
mov
jmp
jle
jg
pop
out
ficoml
dec
pop
pop
shrl
enter
outsl
inc
stc
cs
shll
mov
cmp
fcomip
mov
jmp
orb
test
cld
inc
icebp
mov
sub
cmp
mov
xchg
push
jno
cmpb
xor
mov
loope
cmp
adc
mov
fdiv
dec
mulb
js
cmpl
test
mov
or
pop
fdivl
and
lret
test
cld
hlt
lcall
scas
sub
lods
push
adc
mov
adc
je
dec
out
scas
cmc
pop
and
call
push
or
je
nop
cmpb
sahf
mov
lods
movsb
in
xchg
cltd
mov
sub
push
and
adc
rorb
lret
cmp
xor
fcompl
pop
lcall
dec
mov
push
push
inc
jno
xchg
pop
adc
loop
ret
lods
push
xor
mov
dec
sub
fsubrs
pop
mov
aad
sbb
and
into
jl
repz
jmp
test
es
fstps
iret
ret
pop
hlt
sbbl
divl
movsl
push
insl
add
and
daa
lods
mov
sub
push
jle
es
mov
push
out
add
pushf
xor
push
jmp
fdivl
mov
lock
out
cmp
andl
jge
or
fistps
ss
xor
ftst
clc
mov
mov
or
mov
iret
inc
mov
fcmovu
mov
in
mov
mov
pop
shll
cmpl
inc
aaa
std
lods
jecxz
pop
shrl
mov
mov
popa
or
or
leave
jge
add
out
mov
pop
in
dec
pop
jp
icebp
cmp
or
imul
ret
sub
rorl
pop
cmp
cmp
push
scas
or
cmp
cmp
mov
jmp
icebp
movsb
pushf
fs
in
adcb
cli
sbb
inc
sub
div
and
out
addl
jne
es
mov
in
rorl
imul
fldl
mov
loopne
fildll
fcoms
or
mov
xchg
loopne
add
sub
sahf
jecxz
jl
xlat
add
add
ljmp
test
movsb
test
mov
enter
dec
pusha
out
cmp
sbb
pop
jp
and
xchg
jecxz
and
pop
into
jle
ret
cli
loope
out
and
imul
xchg
test
add
push
dec
out
fcmovnb
sbb
dec
push
mov
gs
adc
push
lcall
ljmp
xchg
adc
pop
and
movsb
repnz
mov
pop
mov
aaa
mov
lock
pop
cmp
adc
in
xchg
mov
aam
in
dec
or
cmp
push
push
int3
pop
and
or
mov
mov
hlt
in
mov
rcrb
adc
nop
sub
sub
dec
sub
leave
or
clc
gs
pop
and
stos
sahf
jmp
imulb
push
add
cli
lock
inc
fcoms
popa
arpl
outsl
jnp
lds
aas
pop
jns
push
je
pop
push
into
addb
mov
mov
pop
mov
ss
dec
jmp
scas
adc
pop
pop
popa
testl
xchg
mov
dec
add
sbb
pop
inc
rclb
sub
sbb
lcall
loop
mov
pop
push
addb
mov
mov
xchg
add
dec
mov
fbstp
iret
sbb
pop
pop
sti
shrb
inc
jge
sub
pop
insb
dec
jbe
xchg
xor
in
enter
sbb
test
inc
mov
div
imul
push
push
push
mov
out
xlat
cld
mov
pop
es
cmc
outsb
adc
cmpsb
pusha
les
and
bound
shrb
xchg
fadd
aas
xor
mov
mov
sbb
or
pop
add
xor
pop
add
ds
sub
and
mov
add
cmp
movb
aam
mov
dec
push
addr16
lds
adc
push
int3
insb
arpl
pop
push
jns
mov
xor
and
fwait
sbb
leave
push
loope
cwtl
out
cld
add
push
kmovw
mov
enter
and
pusha
push
repnz
inc
or
imull
cmp
lea
push
dec
or
mov
xor
fsubr
add
hlt
es
mov
or
pop
xchg
pusha
xor
das
aas
mov
xor
into
arpl
sti
push
movsb
aas
jno
std
mov
xchg
lret
xor
inc
stc
adc
icebp
sbb
sti
xlat
out
div
mov
cmp
xchg
dec
loop
leave
call
mov
inc
test
cmpsb
sti
shrb
dec
pop
cmpsb
loopne
shlb
or
ja
inc
inc
fs
adc
mov
sbbb
aas
popa
mov
and
cmp
push
sub
dec
and
mov
sub
jmp
dec
jl
jge
pop
ljmp
nop
addr16
outsb
ja
es
xchg
mov
mov
std
mov
add
inc
mov
mov
aam
xor
data16
hlt
jns
sub
jl
in
shrl
lcall
jle
cmp
vandnps
enter
push
orb
in
shlb
lods
adc
std
out
lret
scas
les
aas
sub
test
ljmp
sbb
xchg
icebp
jle
mov
push
leave
lods
jecxz
or
lods
ljmp
pusha
sbb
jg
mov
jns
ss
ds
lods
cmp
enter
loop
dec
popa
cmc
stos
pop
in
cmc
adc
cmpsb
sub
js
js
sbb
lret
mov
dec
xor
mov
xchg
mov
gs
loopne
data16
lret
and
loope
repz
xchg
xchg
pop
fldl
rcr
push
and
in
push
push
das
shr
out
dec
test
dec
adc
add
inc
or
stos
rolb
in
aas
sbb
xchg
push
lahf
fisubrl
adc
fisubs
mov
cmp
fldln2
sub
jns
cmp
imul
shll
lods
dec
mov
sub
push
std
scas
lds
and
and
jg
push
add
sub
mov
scas
inc
sub
add
add
pop
adc
jo
mov
fucom
out
in
inc
sub
in
push
and
pop
das
imul
out
mov
dec
test
mov
mov
nop
push
outsb
xor
lahf
mov
jno
or
adc
xchg
sti
mov
shll
leave
lds
loopne
jbe
sti
cmp
push
pop
or
scas
sub
add
ret
loope
and
or
cmpl
push
sub
in
loop
clc
addr16
cmpsb
lock
mov
iret
add
pop
imul
nop
lahf
pop
xchg
adc
dec
sub
jp
xchg
jle
ds
scas
cmpl
adcl
sbb
dec
add
cmp
pushf
push
arpl
push
cmpsl
xchg
push
mov
in
hlt
clc
outsb
or
fwait
mov
arpl
mov
out
jecxz
cmp
fnstsw
push
xor
leave
push
fstpl
inc
xchg
ret
ds
pop
or
mov
inc
div
push
call
push
andl
pop
push
int
ljmp
adc
roll
pop
sub
std
inc
sbb
popa
or
pop
jno
lods
mov
ret
jg
fidivs
fstpl
or
mov
xchg
loopne
cmp
sub
push
in
jecxz
pop
je
test
arpl
mov
mov
mov
jmp
jge
pop
popf
jbe
adc
inc
jmp
shll
adc
ret
test
mov
out
out
inc
lds
fildl
cltd
pop
jg
jbe
cmc
scas
stos
aaa
cmpsb
loope
movsl
scas
xlat
test
std
outsl
mov
mov
popa
mov
sub
iret
xorl
incb
bound
lret
mov
and
or
popf
xor
pop
dec
mov
aad
or
add
lahf
loopne
jecxz
mov
test
sbb
dec
add
in
adc
sub
bnd
mov
cld
and
dec
out
lahf
scas
mov
orb
inc
pop
aam
dec
repz
incb
test
push
push
xchg
sbb
into
call
cmp
xor
mov
sti
or
sub
fdivl
jecxz
mov
cmovs
repz
stos
push
jecxz
pop
pop
mov
fs
adc
mov
aaa
sbb
and
jmp
ror
cmp
jb
jno
fnstcw
or
out
repnz
pop
je
bound
mov
movsl
mov
push
add
sub
loope
in
xor
pop
cmp
test
push
test
jno
mov
jno
fwait
jbe
xor
pop
push
inc
andl
out
xchg
setle
pusha
sti
mov
add
pushf
push
cld
arpl
iretw
pop
outsb
aad
or
out
cmp
rcrb
push
add
shlb
inc
out
inc
insb
inc
std
test
add
jno
fcomp
sbb
fiadds
lahf
mov
xchg
sbb
inc
js
pop
add
xchg
mov
out
mov
mov
sbb
sbb
mov
jbe
movsb
pop
adc
ret
jmp
cmpsl
push
repnz
sbb
sbb
cmp
or
jbe
xor
or
inc
shll
jmp
les
iret
dec
xor
mov
mov
jecxz
fdivl
and
adc
shlb
push
mov
test
in
inc
xchg
mov
push
lret
in
sbb
mov
arpl
hlt
test
repnz
xorl
cmp
es
mov
jle
cmc
ja
fisttps
ds
mov
jbe
and
mov
dec
mov
cltd
mov
inc
sbb
andl
lods
add
inc
jnp
inc
repz
and
cld
in
aaa
sbb
xchg
jb
dec
jns
aas
or
mov
imul
dec
and
jae
mov
test
pop
xchg
mov
sbb
dec
inc
jns
popf
mov
mov
cmc
jle
xor
or
ja
mov
push
pop
cmc
jnp
sub
push
cwtl
sbb
cmp
test
adc
int3
roll
or
mov
mov
jg
adc
adc
inc
jge
jne
inc
lock
pop
xor
arpl
jecxz
sbb
adc
xchg
lret
das
mov
mov
les
aas
sub
sub
and
in
fistps
mov
jbe
pusha
mov
push
mov
iret
xor
xchg
repz
popf
mov
cmp
inc
rcr
insl
in
pop
jb
pop
test
fsubr
ljmp
insb
push
pop
mov
inc
outsl
mov
mov
das
xchg
push
pushf
cmp
sbb
dec
clc
pop
insl
pop
xchg
push
xlat
add
popa
je
add
imul
cmp
jo
mov
shlb
mov
jo
cld
mov
mov
cmpsb
mov
call
xor
inc
ret
push
pop
daa
push
outsb
scas
mov
mov
inc
imul
iret
in
insl
stc
fcomps
cmp
fnstcw
test
int3
arpl
shr
loopne
mov
aam
jbe
lcall
inc
cli
dec
cwtl
sbb
fnstenv
sbb
jp
push
push
lret
jne
mov
or
xchg
push
jno
inc
daa
xchg
mov
out
fiadds
cmp
mov
sti
xorb
fcmovnb
adc
pop
pop
adc
call
out
in
add
mov
jno
bound
xchg
loop
ljmp
cltd
mov
jp
scas
mov
push
cmp
cmp
push
aad
add
lods
shll
int
je
mov
fcos
repnz
dec
test
adc
add
push
mov
idivb
das
aam
xor
sbb
xchg
call
jbe
pop
xchg
loopne
cmp
xchg
mov
pop
incl
out
jg
dec
stc
mov
icebp
cs
in
imul
inc
cli
loope
mov
rorl
mov
cmpsl
mov
mov
and
pop
xchg
scas
inc
mov
jg
fimull
iret
cmp
icebp
bound
add
jb
pop
fildl
pop
scas
push
pop
divb
sub
scas
int3
popa
xchg
xor
pop
and
sub
mulb
mov
mov
jnp
push
adc
mov
sbb
and
fwait
int
enter
rorb
popa
icebp
sub
mov
lret
fs
sahf
add
push
jae
aad
es
aas
lods
mov
mov
push
test
or
or
add
add
xor
int3
cmpsl
or
int
push
mov
sub
sbb
jecxz
mov
push
jno
xchg
sbb
bound
add
sub
je
cmp
xchg
and
and
inc
icebp
add
das
or
cmpsb
mov
jnp
shll
sti
lods
and
push
notl
mov
cmpsb
jbe
enter
stos
sub
dec
pop
jne
and
outsb
pop
mov
dec
cmpsb
inc
dec
cmp
inc
cmp
cmc
cmp
adc
cmpsb
fisttpl
xchg
xchg
pop
shll
jmp
in
push
mov
pop
int
shll
adc
xor
loop
mov
push
cmp
ja
xchg
cmpsl
dec
cmp
xchg
sbb
jae
cld
test
out
cli
shll
inc
hlt
and
rol
.byte
.byte
mov
ds
and
add
jnp
mov
sub
push
or
sbbb
sub
lock
xchg
std
push
add
xchg
jae
xorl
jbe
push
in
push
inc
inc
mov
shlb
fsubrp
add
xor
gs
lock
mov
mov
fwait
xor
cs
out
mov
aas
sbb
fwait
xor
mov
movsb
pop
popa
cmp
pop
and
dec
in
pushf
es
and
push
das
test
out
push
pop
daa
add
in
jp
xchg
subl
subl
ds
mov
lods
aas
mov
ud0
push
loopne
mov
rcrl
sbb
mov
rcll
push
xchg
gs
mov
and
mov
add
xchg
xor
jb
and
cmp
or
dec
je
mov
or
sub
dec
into
je
xchg
or
lds
sbb
lods
sub
jl
leave
ja
jae
add
xchg
popl
fcomp
mov
mov
xor
sbb
push
adc
inc
lea
jge
pop
in
cmc
cwtl
mov
and
insl
inc
pop
pushf
lret
cmp
mov
ss
jecxz
fmull
xchg
insb
push
inc
lods
int
pop
pop
call
lcall
fcmovnbe
addr16
xchg
movsl
lods
inc
aad
jp
adc
fwait
mov
and
cmc
dec
cmpsb
mov
clc
push
xchg
add
adc
jp
insb
push
mov
xor
sahf
cltd
lahf
lea
je
xchg
mov
cs
hlt
or
aas
jbe
xor
sbb
fdivl
xchg
and
xor
imul
lock
add
adc
pop
adc
cld
cmp
imul
and
sbb
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
movswl
pop
call
xor
imul
mov
and
add
push
mov
pop
mov
add
sbb
mov
sub
xor
mov
xor
jmp
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
xor
mov
mov
push
jnp
mov
pop
sub
movzwl
add
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
add
jne
mov
jmp
mov
jmp
jmp
and
xor
shlb
int3
adc
lcall
mov
int
xchg
ror
into
out
cld
test
mov
sub
mov
scas
shrl
mov
fnstenv
sub
out
mov
jp
jge
jnp
and
mov
push
sub
aad
mov
xchg
xchg
mov
jge
idivl
push
or
fnsave
lea
mov
mov
cli
pop
add
into
out
adc
insb
dec
xlat
les
stos
push
sub
mov
sahf
dec
mov
and
push
xchg
push
xchg
push
jp
pop
mov
nop
xchg
and
xchg
push
push
mov
cmpsl
jmp
xlat
add
push
jno
lods
int
add
cmp
orb
add
or
mov
inc
pop
adc
fstpl
fucom
fisubrl
mov
sub
outsl
push
rcll
dec
adc
mov
ljmp
jmp
jp
push
scas
mov
bound
mov
jl
push
das
push
jae
adc
xlat
lds
ret
js
adc
movsl
jmp
adc
mov
mov
mov
add
clc
xchg
jmp
sub
xchg
jmp
xchg
rcr
fisubrs
lahf
outsl
lret
repz
or
leave
push
push
mov
or
or
adc
adc
mov
mov
inc
xchg
push
push
nop
lods
mov
mov
hlt
inc
or
push
popf
mov
mov
xchg
sbb
ja
nop
into
leave
fcmovnu
frstor
shl
dec
cmpsl
lea
mov
loopne
or
testb
lea
sub
inc
adc
jae
scas
mov
out
adc
pop
mov
mov
jmp
shll
xor
fisttpll
aad
cmpl
sub
stc
and
lea
push
mov
lea
and
xchg
mov
or
out
pop
mov
mov
mov
dec
sub
jl
fnstcw
mov
rolb
jge
mov
cs
mov
stos
pushf
fldenv
jl
sub
fsub
mov
mov
negl
and
cmc
test
fsave
mov
clc
mov
mov
inc
jle
mov
add
xlat
dec
xlat
movlhps
mull
mov
cs
scas
or
push
cmp
adc
xchg
ss
add
adc
xchg
jno,pn
jnp
cwtl
lea
jo
and
jl
lret
add
dec
loopne
add
mov
sub
jl
sub
divl
add
mov
jmp
cltd
add
mov
pop
add
roll
jl
cli
or
mov
pop
push
jl
mov
and
pop
jns
sub
mov
mov
stos
mov
mov
stos
or
push
jl
std
icebp
mov
lcall
mov
fisttpl
jl
shrl
push
add
fnstsw
mov
lcall
pusha
lcall
pop
push
add
jg
mov
mov
out
ds
mov
movsl
push
add
xorl
add
mov
and
jge
cli
popl
jl
or
andl
pop
add
sub
jp
mov
movsb
jmp
add
lret
movsl
shll
xor
outsl
jl
mov
add
add
add
add
add
call
loope
scas
jns
mov
mov
in
bound
sbb
daa
push
ret
jbe
cmp
sub
ja
insb
bound
sub
jl
sbb
daa
push
ret
jbe
faddl
push
cmp
fdivs
in
outsb
add
pop
sub
int
adc
bound
jge
add
push
mov
jl
cs
ss
sub
int
adc
bound
inc
add
mov
pop
ss
sub
int
adc
bound
in
add
mov
ficoml
jmp
jl
gs
sbb
add
push
cmp
fdivs
in
int
ss
sub
push
xor
pop
mov
sub
cmp
mov
jo
adc
je
fstl
leave
sub
cmp
mov
push
xchg
je
mov
mov
cs
cmp
lods
or
roll
lcall
mov
je
xor
jmp
add
mov
pushf
dec
pushf
jge
mov
add
add
clc
adc
fxch
enter
xchg
mov
in
jge
jg
mov
out
das
mov
outsl
push
jl
jmp
add
mov
add
inc
fstpt
push
inc
pop
gs
add
mov
sub
movsb
mov
mov
repz
xchg
xor
ja
inc
fildl
scas
rolb
xchg
cmp
push
loopne
mov
in
jge
out
cmp
xchg
rclb
or
pop
mov
arpl
notb
mov
repz
or
push
jae
fcoml
lret
int3
out
out
add
add
add
add
add
add
add
add
and
shll
add
add
add
add
add
jns
aad
mov
add
add
add
sub
stc
enter
lcall
ja
mov
jne
mov
pop
sarb
aad
test
fwait
jb
test
enter
and
in
xchg
ret
push
daa
aas
jl
jg
addr16
push
pop
sbb
pusha
stos
gs
pop
xor
aad
push
push
fsubrs
dec
and
mov
push
bound
call
aad
dec
add
stos
pop
dec
jecxz
adc
mov
adc
add
js
ja
xor
xchg
xchg
shll
in
cmp
jbe
jecxz
sub
jmp
add
mov
pop
lea
sbb
imul
push
jmp
xchg
hlt
movsl
dec
ljmp
icebp
mov
mov
push
inc
xchg
fsubl
mul
popa
lock
imul
cmpsb
jmp
icebp
ss
cmpsb
scas
test
mov
push
mov
sbb
mov
mov
jp
add
or
xchg
mov
icebp
jecxz
jle
pop
inc
repz
xchg
sub
mov
hlt
pop
mov
pushf
pop
sub
jle
mov
xchg
xchg
sarb
dec
xlat
push
lret
xor
fisubrl
add
out
mov
mov
xchg
inc
jmp
or
les
pop
inc
push
ret
iret
inc
adc
mov
mov
dec
mov
xchg
jnp
sub
ret
shrb
jo
xchg
mov
and
shrl
add
lahf
xor
js
pop
shll
stos
fidivl
and
mov
ret
cmp
mov
push
mov
imul
lods
cmp
in
bsf
cs
mov
push
and
aaa
xchg
and
xor
out
stos
jo
inc
aaa
add
ror
lods
sub
gs
iret
adc
scas
add
jnp
incb
movsb
mov
and
aas
adc
jno
or
test
jge
sbb
jb
dec
jmp
pop
xor
sub
mov
xchg
xchg
andl
mov
je
pop
daa
sub
push
or
arpl
mov
fsubrs
shl
pushf
in
jl
pop
jp
insb
mov
shrb
jecxz
inc
push
pop
add
inc
cmpsb
inc
dec
ja
out
pop
ss
gs
mov
cli
xor
push
mov
testb
ret
or
outsb
or
dec
iret
adc
std
mov
pop
mov
arpl
lahf
sahf
imul
cmp
mov
xchg
dec
jne
sarl
lods
lds
loope
lahf
dec
adc
cmpsb
mov
popa
xor
mov
adc
fcomps
xorps
xlat
mov
add
add
add
or
add
adc
sub
add
sub
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sub
add
sub
add
sub
add
push
add
sub
push
add
sub
push
add
sub
push
add
sub
push
add
sub
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
sub
add
fildll
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
add
add
add
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
cwtl
imul
sbbl
nop
nop
nop
and
add
add
mov
mov
cmp
insb
fs
cmp
shll
subl
popl
scas
scas
scas
add
leave
sar
cmpl
jge
pop
aaa
int
push
out
push
dec
dec
and
dec
je
ret
and
inc
imul
jno
jno
in
fdivrp
in
fmul
jmp
aam
call
ret
mov
xchg
mov
mov
mov
ret
jo
mov
mov
xchg
xchg
xchg
or
in
sar
out
fst
in
fxch
ljmp
call
ret
sub
loop
jecxz
lods
pop
jge
jge
loopne
icebp
jecxz
out
jmp
enter
ret
jmp
sarb
jmp
jae
mov
xchg
add
fcomp
hlt
jmp
out
out
loopne
jmp
rol
jmp
sarb
push
in
jmp
jge
fcmovnb
lods
call
mov
popa
popf
xchg
mov
add
add
fcmovu
push
in
in
repz
sar
call
iret
mov
call
mov
inc
movsl
ja
jecxz
mov
shll
addr16
jbe
fcmovnu
in
jmp
jmp
jmp
int
in
mov
jmp
mov
in
frstor
fnstcw
push
inc
mov
push
or
push
push
ror
into
hlt
stc
hlt
icebp
push
icebp
in
push
in
in
jmp
int3
mov
jmp
enter
xchg
ljmp
mov
je
mov
push
jmp
scas
sahf
push
popf
pushf
fwait
push
loop
fsub
div
in
cld
imul
jmp
jmp
enter
ret
scas
jmp
lret
jecxz
xchg
fidivrl
pushf
call
mov
cli
cwtl
jp
mov
jecxz
jecxz
int
int3
jecxz
clc
ffree
mov
fcmovnb
test
call
mov
cltd
call
scas
xchg
ljmp
mov
add
call
movsb
mov
xchg
lds
lahf
shll
inc
fwait
jl
mov
jg
add
add
push
je
lret
movsb
test
inc
mov
test
mov
push
lahf
mov
jmp
add
repnz
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
pop
add
incb
add
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
push
dec
sbb
sub
pop
push
push
push
push
inc
cmp
stos
shll
push
loopne
pop
mov
aaa
push
outsl
popl
pop
push
push
adc
sub
outsl
mov
dec
mov
pop
sub
sbb
mov
filds
call
lods
dec
incl
xor
push
aas
aas
aas
add
arpl
jnp
jns
push
sbb
pop
add
add
add
add
add
inc
daa
test
xor
fdivs
push
fcmove
xchg
cmp
sbb
dec
dec
push
test
jle
sti
loopne
fidivl
cmp
push
add
movups
add
add
cmp
pop
cmc
cmc
cmc
call
ror
inc
mov
insl
mov
sbb
aaa
pop
pop
pop
add
outsl
add
sbb
test
scas
pop
mov
or
add
add
add
mov
in
dec
cmpsb
inc
ljmp
and
add
add
add
add
and
and
mov
in
in
call
int
ret
ret
mov
cld
jae
push
xor
pop
add
lret
lds
adc
mov
jg
add
inc
adc
in
in
in
sarl
shrl
or
add
add
jg
jg
push
push
push
jnp
hlt
hlt
fcom
sar
out
fst
jmp
int3
jmp
aam
fmul
mov
mov
popaw
cmpsb
and
and
cltd
mov
fstpt
xchg
add
add
hlt
rclb
rep
jmp
ret
ret
scas
dec
dec
dec
add
popl
sbb
sbb
call
ror
out
fst
in
fcmovne
in
fcmove
ljmp
fcmovne
mov
mov
imul
iret
jecxz
mov
rclb
cld
repnz
imul
popf
fistpll
inc
pop
pop
pop
add
lcall
sar
lock
out
in
fmul
in
fcmove
jmp
leave
jmp
jmp
iret
mov
dec
mov
mov
inc
lods
pop
mov
out
aad
fdivrl
hlt
add
add
add
pop
pop
xor
call
loope
loop
iret
out
loope
out
in
in
fcmove
jmp
enter
ljmp
call
int
call
ret
jmp
stos
in
xlat
mov
cli
idivl
pushl
add
add
aas
aas
add
xchg
xchg
mov
rcl
int
repnz
push
loope
out
loopne
out
fst
in
fcmove
jmp
ljmp
ljmp
jmp
iret
mov
cld
sti
mov
fistpll
fwait
sub
daa
sbb
add
add
icebp
icebp
fcmovu
in
aad
repnz
push
jecxz
out
loope
out
jmp
lret
jmp
aam
jmp
sarb
jmp
sarb
cld
cld
sar
lret
jo
shlb
test
lock
dec
dec
andl
lahf
add
add
add
and
or
call
into
push
jmp
icebp
in
push
loope
out
ljmp
jmp
rol
call
sarl
jmp
lret
out
out
push
out
lods
out
fistl
fadd
mov
fcmovnb
mov
sarl
xchg
in
push
dec
inc
jge
and
adc
add
add
dec
dec
outsb
icebp
icebp
icebp
call
rcl
ljmp
push
out
push
in
push
loop
out
fst
ljmp
call
sarl
jmp
iret
mov
fmulp
scas
sti
clc
mov
push
loop
call
lods
push
call
mov
mov
loope
mov
fcmovb
lods
call
mov
sub
inc
xor
add
add
add
add
add
iret
iret
jmp
rcl
into
push
in
out
hlt
jmp
push
call
fdivr
icebp
jecxz
in
fcmove
jmp
rol
jmp
sarl
jmp
into
mov
jmp
lret
call
idivb
call
mov
cmp
sahf
pusha
faddp
scas
jmp
lret
jecxz
mov
ffreep
stos
dec
mov
hlt
mov
frstor
add
add
jg
jg
addr16
out
out
dec
int
out
call
call
push
ljmp
icebp
in
ljmp
jmp
sarb
jmp
int
jmp
int3
mov
fadd
scas
clc
out
scas
jmp
int3
test
mov
mov
push
fsubl
dec
lods
mov
loop
scas
jmp
scas
jmp
lds
aam
andl
add
add
add
add
adc
sub
loopne
neg
fstp
call
rcl
clc
icebp
in
push
out
jmp
push
jmp
push
call
out
ret
rol
jmp
iret
mov
jmp
int3
mov
jmp
leave
mov
loop
movsl
std
divb
ljmp
lods
ffree
lahf
call
mov
incl
mov
test
jmp
mov
add
add
pop
add
out
dec
enter
out
ljmp
lock
imul
call
push
jmp
xlat
jmp
rol
jmp
iret
mov
jmp
lret
mov
jmp
leave
mov
fcmovnb
lods
push
loopne
jmp
rcll
mov
ja
faddp
lods
dec
mov
jmp
test
ljmp
xchg
xchg
addb
add
rcl
shl
call
rcl
stc
cmc
icebp
clc
repz
push
repnz
push
out
ljmp
ljmp
in
mov
jmp
int3
mov
jmp
mov
ffreep
mov
fld
mov
jmp
inc
and
lret
mov
fnstcw
ja
in
int
fnstenv
pushl
jae
leave
ror
leave
sbb
add
add
add
add
aas
aas
add
cmp
pop
mov
repnz
cli
div
stc
hlt
lock
clc
repnz
push
lock
cmc
out
call
in
jmp
into
mov
jmp
lret
loopne
mov
faddp
scas
fdivrs
fwait
std
icebp
movsl
std
rep
mov
nop
je
call
mov
fstpt
test
aam
mov
lret
negl
push
pop
pop
pop
add
push
push
sub
hlt
lock
stc
stc
cmc
repnz
clc
repz
icebp
in
push
out
ljmp
fst
jmp
int3
mov
jmp
mov
ffreep
mov
fadd
lods
jmp
into
xchg
stc
jecxz
push
fisttps
jmp
xchg
call
mov
lahf
fdivrs
fwait
call
mov
ljmp
push
rorl
add
add
scas
test
in
in
icebp
in
jmp
div
in
push
out
call
jmp
lret
loopne
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
fwait
call
mov
call
mov
mov
call
mov
call
mov
call
mov
inc
mov
inc
mov
mov
mov
xchg
xchg
mov
fcom
jecxz
out
repz
out
jmp
jmp
leave
mov
ffreep
mov
ffree
scas
fadd
lods
fstpt
cmpsb
fnstcw
fdivrs
sahf
call
mov
call
mov
call
mov
call
scas
nop
cltd
je
roll
add
add
add
mov
shl
out
fld
scas
cmc
ffree
mov
fadd
lods
fcmovnb
stos
fidivrl
movsb
call
mov
lahf
call
mov
call
mov
call
mov
call
scas
nop
call
lods
pushl
pusha
cmp
cmp
add
add
jp
push
dec
subl
mov
fdivrs
call
mov
call
mov
call
mov
call
scas
xchg
call
lods
dec
test
test
mov
mov
push
cmp
mov
push
push
daa
push
inc
xor
mov
xlat
mov
pushf
call
mov
call
scas
xchg
dec
lods
mov
into
test
dec
movsl
test
mov
push
xor
insl
push
sbb
es
mov
stos
mov
mov
dec
lods
dec
test
dec
movsb
test
rcrb
movsb
push
ds
arpl
inc
sub
pop
aas
cltd
lods
mov
movsl
xchg
enter
xchg
push
sub
addl
sub
jae
sub
lahf
lahf
lahf
add
lea
lock
add
add
add
incl
cld
pop
filds
pop
incl
add
incl
add
incb
add
cld
add
cld
add
aas
clc
add
aas
clc
add
jg
add
pop
lock
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
loopne
add
clc
add
paddd
add
incl
add
cld
add
incl
jg
inc
push
ljmp
add
add
add
add
add
add
and
add
add
andb
add
pop
pop
add
sub
push
cmp
pop
pop
pop
push
cmpb
cmp
inc
sub
mov
movsl
dec
in
xchg
aas
stc
mov
fiaddl
adc
pop
pop
pop
or
add
add
add
add
or
mov
leave
outsb
in
lock
lock
in
into
jo
in
popa
fnstsw
push
push
and
addl
pop
sbb
sbb
and
push
push
stos
xchg
dec
mov
adc
inc
add
xchg
mov
lret
jnp
sti
filds
out
iret
jae
shrl
cld
test
add
add
dec
dec
dec
add
push
push
adc
sbb
addr16
add
add
cmp
sbb
pop
xchg
daa
movsl
stos
mov
iret
aam
push
out
call
fisttps
mov
sbb
inc
add
push
add
stc
fldl
shrl
inc
fwait
jge
lret
add
add
adc
add
add
cmp
add
and
dec
mov
mov
ret
ret
ret
jmp
outsl
imul
clts
outsl
outsl
outsl
add
add
add
sbb
aas
mov
mov
pop
in
int
in
into
jo
mul
in
xchg
outsb
fs
xchg
or
add
or
outsl
add
int
pop
sti
fisttps
dec
mov
inc
sti
cmp
adc
add
inc
add
add
jg
jg
add
add
test
test
hlt
hlt
hlt
loope
loop
mov
stos
cld
insb
arpl
pop
cmp
add
pop
ja
ja
add
add
daa
daa
daa
add
jle
ss
mov
insl
pushl
mov
adc
add
inc
add
add
add
cmp
push
sub
cld
out
in
imul
cmpsb
inc
jmp
or
cmp
add
xor
add
sbb
jg
pop
pop
pop
add
inc
inc
je
lock
repz
leave
call
leave
mov
inc
mov
mov
test
adc
xor
dec
dec
dec
add
add
je
jle
inc
in
shlb
lea
mov
xor
inc
cmp
pi2fd
add
add
add
add
inc
cmp
xchg
idiv
jmp
fnstenv
ljmp
and
add
and
add
add
sub
sub
xchg
xchg
xchg
add
add
ret
call
in
in
ror
sar
leave
fmulp
ret
enter
ret
mov
pushf
icebp
popa
pop
pop
sahf
or
lock
xchg
mov
xor
fadd
xchg
sub
add
add
pop
pop
pop
add
mov
mov
fnstenv
dec
repnz
or
add
add
add
add
add
add
pop
pop
pop
add
add
add
or
pop
pop
pop
xchg
stc
stc
stc
out
out
out
dec
lret
lock
jmp
int
jmp
aad
fmulp
sar
mov
inc
mov
popf
negb
push
xchg
adc
adc
and
and
mul
icebp
les
dec
test
imul
add
add
add
sti
out
or
cld
hlt
lods
call
mov
pushl
add
pop
aaa
aaa
aaa
add
arpl
pop
pop
pop
add
aam
out
repz
fdivrp
leave
in
fst
in
fcmovne
in
fcmovne
jmp
lret
enter
lret
mov
dec
mov
stos
ljmp
push
dec
xchg
adc
mov
cltd
in
jle
ret
cmc
loopne
mov
add
repz
repnz
sti
cli
repnz
jmp
mov
push
clc
movsl
inc
add
add
jnp
jnp
clc
clc
clc
jmp
lret
leave
out
in
fst
out
in
fcmovne
in
fcmove
in
fcmove
ljmp
jmp
rol
fmul
mov
dec
mov
stos
cmpsb
cltd
nop
jmp
repz
test
dec
dec
cmpsl
push
movsb
add
add
cld
icebp
mov
cld
divl
jmp
mov
pop
int3
clc
repnz
das
das
das
add
out
clc
out
out
out
fcmovnu
lret
out
out
in
in
fcmovne
in
fcmovne
in
fxch
ljmp
jmp
rol
jecxz
mov
aad
mov
int
scas
inc
mov
fxch
sahf
out
mov
iret
cmpsb
inc
hlt
cmpsb
xchg
pop
dec
sti
divb
jmp
mov
xchg
imul
add
add
add
pushf
pushf
pushf
lret
repz
jmp
jmp
int3
leave
out
loope
out
loopne
out
in
out
in
fcmove
jmp
lret
fmul
jmp
jmp
aam
jmp
rol
jmp
into
mov
call
shll
imul
scas
fdivs
mov
sti
stc
mov
jmp
ret
fstpt
leave
sbb
add
add
aaa
aaa
add
xor
repnz
lock
aad
loopne
int
lock
out
loope
out
out
in
fmul
in
fcmove
in
fxch
jmp
ljmp
ljmp
ljmp
out
mov
xlat
ret
mov
loope
test
imul
stos
cld
cld
mov
jecxz
pop
scas
xchg
inc
movsb
rol
add
add
add
or
push
mov
mov
cmc
cmc
cmc
jmp
in
dec
mov
icebp
jecxz
out
loopne
out
loope
out
in
fmul
in
fcmovne
jmp
leave
ljmp
ljmp
ljmp
jmp
rol
jmp
sarb
fcmovb
scas
push
in
mov
cld
cld
sar
cmc
mov
out
pusha
fidivrs
inc
xchg
push
push
push
pop
inc
inc
inc
add
add
add
or
add
cmc
cmc
cmc
in
in
in
dec
into
iret
jmp
fcmovnbe
push
in
lock
push
loop
out
loope
out
out
in
fcmove
ljmp
ljmp
ljmp
jmp
rol
jmp
sarl
fcmovnb
mov
jmp
mov
cld
sti
mov
loope
pop
call
mov
mov
popl
insb
or
dec
dec
add
add
add
jnp
or
int
ljmp
int3
leave
hlt
jmp
icebp
in
icebp
jecxz
out
loopne
out
loopne
out
jmp
lret
xlat
ljmp
jmp
rol
jmp
rol
call
sarb
out
mov
clc
repz
cld
cld
int
fistpll
sarl
dec
mov
jge
xor
sub
add
add
add
add
je
je
div
idiv
jecxz
jecxz
int3
int3
int3
jmp
out
push
out
repnz
push
jecxz
icebp
loop
push
loope
in
fst
jmp
enter
call
aam
jmp
sarb
call
sarb
jmp
iret
mov
in
scas
cld
cli
mov
push
out
fcmovnb
mov
fadd
mov
fadd
scas
call
mov
movsl
cwtl
mov
xor
sub
add
adc
inc
add
add
add
dec
add
sbb
aas
in
in
jmp
jmp
fdivrp
int
push
ljmp
repz
icebp
in
push
in
icebp
jecxz
out
loopne
out
fst
ljmp
jmp
aam
call
sarb
jmp
iret
mov
out
mov
fcmovb
mov
cmc
in
mov
cld
sti
sar
shlb
repnz
fstpt
fs
mov
mov
loope
mov
fadd
scas
xlat
mov
movsb
inc
mov
sti
mov
lret
and
push
pop
pop
pop
add
add
add
or
jnp
icebp
icebp
in
in
mov
loopne
hlt
jmp
hlt
ljmp
repnz
icebp
in
lock
out
loope
in
fcmovne
jmp
aam
jmp
rol
out
mov
out
mov
out
mov
loop
mov
stos
cld
clc
mov
fsubrs
jp
out
loop
dec
mov
mov
ffreep
mov
in
mov
jecxz
mov
loopne
mov
fcmovnb
stos
mov
fwait
inc
mov
cld
test
mov
push
push
push
add
add
add
and
add
xor
pop
ljmp
call
xlat
fdivr
iret
int3
lret
out
out
cmc
in
in
hlt
ljmp
repz
push
in
icebp
in
push
loop
ljmp
jmp
rol
out
mov
jmp
iret
mov
jmp
into
mov
in
mov
out
loopne
std
cli
mov
call
test
call
mov
hlt
in
mov
iret
scas
pop
inc
sahf
push
sarb
mov
in
mov
jecxz
mov
loop
mov
ffreep
lods
fidivrl
xchg
clc
mov
insl
jecxz
addr16
mov
add
add
add
add
test
repnz
loopne
loopne
out
call
call
push
jmp
push
ljmp
repnz
repnz
out
loope
jmp
aam
jmp
rol
jmp
sarl
jmp
into
mov
out
mov
jmp
int3
mov
fcmovb
test
cli
icebp
mov
cld
cli
mov
inc
fwait
inc
inc
test
loopne
mov
ljmp
mov
lods
jmp
enter
enter
enter
lods
faddp
test
mov
insl
fsubrs
xor
add
add
daa
daa
add
inc
inc
js
lock
jmp
iret
iret
ror
int
clc
icebp
in
imul
call
cmc
in
in
repz
repnz
icebp
in
out
loopne
jmp
rol
out
mov
in
mov
in
mov
in
mov
in
mov
ffree
mov
out
movsl
cld
divb
mov
lea
dec
mov
fld
cmpsl
mul
fwait
mov
jnp
dec
mov
loopne
lods
jecxz
scas
loop
lods
loop
lods
dec
scas
mov
scas
mov
cwtl
jns
mov
addr16
pop
pop
pop
lret
lret
lret
in
out
out
out
call
xlat
xlat
inc
ret
ret
push
out
jmp
div
ljmp
in
in
hlt
jmp
hlt
ljmp
repnz
in
fmul
jmp
rol
out
sar
sarl
in
mov
jmp
lret
mov
jmp
lret
mov
loope
mov
fadd
test
imul
cmpsb
std
divl
ljmp
mov
fnstcw
scas
jmp
leave
xchg
jmp
push
and
test
fs
fdivrs
stos
jmp
les
cli
mov
data16
mov
popa
leave
cwtl
mov
adc
adc
bound
xchg
hlt
hlt
hlt
jmp
loopne
call
rcl
aam
sar
clc
repz
push
icebp
in
div
jmp
imul
jmp
push
in
in
repz
repnz
jmp
rol
out
sar
iret
mov
in
mov
jmp
lret
jecxz
mov
loop
mov
ffree
scas
loopne
mov
clc
lock
xchg
fs
xchg
push
jnp
faddp
scas
ffreep
scas
call
mov
ja
scas
xchg
dec
call
pop
mov
mov
fnstcw
loop
mov
mov
lods
aam
rolb
ja
ja
sbb
sbb
xlat
xlat
xlat
repnz
out
fcomp
fdivr
mov
repnz
clc
repz
clc
repnz
div
in
imul
ljmp
in
in
hlt
jmp
repz
fdivrp
out
out
sar
iret
mov
in
mov
loope
mov
loop
mov
loop
mov
loopne
mov
xlat
mov
popf
cld
repnz
inc
lods
js
jne
sbb
sbbb
into
mov
ffree
lods
xlat
mov
xchg
jmp
shll
xchg
inc
popf
jbe
xchg
jo
lcall
leave
cmpsb
sbbl
outsl
fs
add
add
push
push
jl
lock
loopne
loopne
leave
lret
aad
stc
cmc
repnz
stc
hlt
icebp
clc
repnz
clc
repnz
push
icebp
jmp
imul
jmp
hlt
in
in
repz
out
ret
iret
mov
jmp
into
mov
loope
mov
loop
mov
loopne
mov
loopne
mov
ffree
scas
call
mov
sahf
cli
lock
jge
xor
pop
cmp
call
mov
cmpsb
fnstcw
jbe
in
int
loop
pop
call
test
cmp
mov
mov
call
insl
push
xchg
ljmp
add
or
add
sub
dec
xlat
xlat
xlat
in
rcl
sar
mov
hlt
icebp
cli
div
stc
hlt
icebp
clc
repz
clc
repz
push
icebp
in
push
out
ljmp
in
in
repz
in
mov
in
mov
jmp
lret
loop
mov
loope
mov
faddp
mov
ffree
scas
call
mov
cwtl
std
out
mov
pushl
nop
pop
lcall
scas
cwtl
call
mov
jl
in
iret
je
repnz
jmp
mov
imul
xchg
popa
repnz
jns
iret
fwait
js
shlb
add
addl
or
jp
jp
aad
clc
cli
div
cli
div
stc
cmc
repnz
stc
hlt
lock
clc
repz
div
in
div
jmp
cmc
out
jmp
hlt
jmp
lock
in
mov
jecxz
mov
loope
mov
loopne
mov
ffreep
mov
ffree
scas
mov
cwtl
sti
ljmp
std
repnz
std
lock
cld
in
popf
movsl
mov
jns
cmp
iret
mov
aam
sahf
mov
mov
shll
cwtl
aam
cwtl
std
cmpsb
test
sahf
jp
mov
in
in
in
add
add
add
jnp
sysret
add
add
test
in
ljmp
div
stc
hlt
icebp
stc
hlt
lock
clc
repz
push
icebp
in
push
out
ljmp
in
out
lock
jmp
into
mov
loope
mov
loope
mov
loopne
mov
ffreep
mov
ffreep
mov
fadd
lods
out
xchg
cli
loop
cld
jmp
nop
sti
loop
push
fisttpl
jmp
leave
xchg
call
mov
call
mov
fidivrl
sahf
call
mov
fdivs
cltd
mov
jne
mov
mov
add
add
add
dec
inc
ror
lret
aad
in
in
out
ljmp
stc
cmc
icebp
clc
repz
push
icebp
in
push
lock
imul
jmp
icebp
out
jmp
int
jmp
lret
loope
mov
loopne
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
nop
ljmp
call
mov
lcall
mov
lahf
fdivrs
sahf
call
mov
call
mov
xlat
mov
call
mov
cld
lcall
mov
push
add
mov
mov
jmp
out
lock
out
jmp
clc
repz
div
in
imul
ljmp
jmp
mov
loope
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
lods
fadd
stos
fstpt
movsb
call
mov
mov
fnstcw
mov
fdivrs
pushf
aad
cltd
call
mov
call
mov
shll
insb
fcoml
pop
aas
movsl
mov
scas
push
movsb
movsb
movsb
push
jno
outsb
dec
scas
stos
test
loopne
out
fsubrp
icebp
jmp
div
icebp
in
cmc
out
jmp
loop
mov
ffreep
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
test
fnstcw
fdivrs
mov
xlat
mov
pushf
mov
aam
xchg
aam
xchg
aam
xchg
shrb
xchg
nop
imul
imul
test
test
pusha
pop
pop
cmp
ror
fsubp
fstp
ljmp
jmp
faddp
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
stos
fnstcw
movsl
fidivrl
xlat
mov
mov
aad
fwait
call
mov
call
mov
call
mov
shll
call
lods
mov
mov
arpl
lods
jbe
cmp
imul
jns
jae
iret
lret
loop
xlat
jmp
mov
faddp
mov
fadd
scas
fcmovnb
lods
fcmovnb
stos
fidivrl
cmpsb
fnstcw
call
mov
lahf
call
mov
call
mov
aad
cltd
call
mov
call
scas
xchg
call
scas
xchg
shrb
mov
pusha
cmp
stos
mov
add
bound
push
pusha
pop
pop
push
mov
mov
aad
cmpsl
icebp
ffree
scas
fnstcw
cmpsb
fnstcw
mov
sahf
aam
pushf
aam
lcall
mov
shrb
nop
dec
stos
mov
int
mov
into
test
xchg
imul
pop
cmp
fcmovnu
fildl
xchg
sub
pop
dec
cmp
sahf
cmpsb
mov
into
mov
in
fidivrl
mov
call
mov
pushf
shll
cwtl
call
mov
shrb
nop
dec
stos
mov
int3
cmpsl
mov
int
xchg
mov
push
jle
xor
jnp
xor
sahf
xchg
nop
add
add
test
es
cmp
gs
dec
lcall
xchg
out
mov
popf
call
mov
shll
xchg
dec
lods
xchg
shrb
dec
cmpsb
xchg
int3
movsl
test
mov
ds
push
xor
lock
add
add
add
aaa
xor
push
imul
mov
pushf
test
aam
fwait
cli
shlb
xchg
dec
lods
dec
stos
mov
int3
cmpsb
xchg
lret
movsb
test
lret
mov
push
das
mov
cmpsl
mov
add
aas
cmp
sbb
dec
xor
addr16
test
xchg
jbe
int
test
cmpsb
xchg
lret
dec
mov
jne
jl
xor
gs
inc
pop
out
out
out
add
add
add
push
or
pop
adc
push
cmp
jbe
pop
inc
test
andb
movsl
xchg
lret
inc
mov
dec
je
sub
lret
adc
add
add
arpl
sbb
and
sbb
pushf
nop
push
inc
mov
dec
sub
addr16
dec
dec
pop
pop
pop
add
sbb
push
pusha
ds
insb
inc
daa
xchg
pop
inc
xor
xlat
aad
or
add
add
ret
int3
enter
loope
push
clc
pop
add
inc
sldt
sti
orb
add
incl
add
add
clc
add
pop
add
push
push
add
sldt
push
add
add
add
jmp
add
add
add
inc
add
sldt
inc
add
cmpb
add
addb
cmp
add
cmp
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
pop
add
clc
add
add
pop
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
loopne
add
add
add
clc
add
add
aas
add
incb
add
add
add
addb
add
add
lock
add
add
cld
add
add
add
incl
add
incl
add
inc
add
incl
add
clc
add
incl
add
incb
add
add
incl
jmp
ud0
add
clc
ud0
add
lcall
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
cmpsb
xchg
insb
add
lea
mov
jge
mov
jbe
shrb
outsl
add
movsl
ja
lret
add
mov
push
add
jge
out
shll
mov
test
add
movsb
sahf
add
stos
cwtl
add
mov
add
mov
addb
mov
test
shrb
add
scas
xchg
add
mov
add
mov
xchg
add
mov
add
mov
add
mov
add
mov
lahf
add
mov
cmpsl
add
mov
movsl
add
lea
loope
mov
jecxz
xchg
add
iret
xchg
add
lret
out
xchg
add
loop
add
ret
fcmovnb
test
add
ret
scas
add
ret
mov
ffree
mov
loopne
movsb
add
frstor
add
mov
jecxz
mov
loopne
mov
jecxz
mov
jecxz
mov
add
int
add
iret
mov
add
sarb
add
in
add
les
ror
roll
ror
add
rcl
add
fcmovu
add
fcmovu
add
rol
add
aam
add
rol
add
aad
add
aad
add
xlat
enter
enter
lret
fcmovne
add
fmul
add
fcmovnbe
add
add
fstp
add
hlt
lds
out
loopne
add
loope
add
loope
add
jecxz
add
out
add
call
in
hlt
ljmp
imul
jmp
add
hlt
icebp
add
or
add
or
add
add
add
add
add
adc
add
add
push
add
add
add
add
push
cmp
add
add
add
add
dec
pop
pop
pop
push
inc
xor
add
sbb
bound
push
dec
dec
nopl
add
add
dec
popa
bound
push
inc
inc
dec
adc
sub
add
sbb
addr16
push
inc
inc
or
or
add
dec
gs
inc
cmp
adc
add
imul
add
or
add
push
xor
sub
add
add
cmp
sub
and
add
and
and
sbb
add
pop
push
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
inc
and
xchg
nop
je
add
test
add
mov
add
dec
add
cwtl
inc
add
adcb
mov
stos
nop
outsb
add
lea
test
nop
jne
stos
xchg
jl
mov
jbe
mov
jnp
mov
jge
mov
mov
dec
add
cmpsb
inc
add
movsl
dec
add
lods
dec
add
lods
push
add
lods
push
add
scas
pop
add
mov
add
mov
add
mov
add
mov
pop
add
mov
pusha
add
pushf
jl
shlb
push
add
mov
add
mov
pop
add
ret
jecxz
popa
add
les
loopne
insb
add
leave
push
add
int
add
lret
jo
in
into
jae
call
enter
sarl
out
aad
add
popf
addl
mov
addb
fwait
addb
popf
lea
mov
fwait
cwtl
add
mov
mov
test
mov
xchg
add
test
fwait
add
movsb
mov
add
test
add
mov
add
movsb
test
ret
add
cmpsb
mov
int3
stos
mov
shrb
add
mov
add
mov
add
mov
add
mov
mov
ret
add
scas
xchg
add
mov
add
mov
fwait
add
mov
xchg
add
mov
lcall
mov
popf
add
mov
add
mov
test
shll
add
mov
scas
add
mov
mov
add
mov
mov
add
mov
mov
iret
mov
test
mov
xchg
add
les
add
int
add
int3
test
in
xlat
mov
ljmp
add
fisttps
add
into
xchg
add
rcll
loop
fwait
add
fcompl
add
loope
add
loopne
add
jecxz
add
loope
add
in
add
loop
add
jmp
mov
add
shrl
fcmovb
lods
add
ret
ffree
scas
add
leave
scas
add
ret
rol
mov
fcmovb
mov
faddp
mov
fcmovnb
mov
rol
mov
add
int3
mov
add
lods
add
shrb
add
fisubrs
add
mov
loopne
mov
jecxz
mov
in
mov
loope
mov
in
mov
jecxz
mov
add
int
add
into
mov
add
sarb
add
loopne
add
out
add
out
mov
add
out
scas
add
icebp
movsl
add
rep
add
rep
add
out
add
divb
add
idivb
add
sti
mov
add
mov
add
int
add
into
ret
int
add
ror
add
ror
add
rcl
add
rcl
add
aad
add
aad
add
fcmovu
add
add
fstp
add
rol
add
aam
add
rol
add
aam
add
lds
ljmp
add
fmul
add
fcmove
add
fcmove
add
fcmove
add
fmul
add
fst
add
fst
add
add
cld
roll
cmc
leave
add
loopne
add
loope
add
loop
add
loop
add
loope
add
jecxz
add
in
add
out
add
loope
add
out
add
out
add
call
call
add
call
loope
hlt
jmp
add
in
out
hlt
out
call
add
repnz
add
icebp
icebp
add
repnz
hlt
hlt
add
hlt
icebp
pop
xor
add
add
xchg
push
sbb
push
push
add
add
add
and
add
dec
jnp
add
add
pop
and
add
add
sbb
add
hlt
lret
jno
add
add
mov
shl
movsl
lahf
jno
add
sub
add
shlb
add
hlt
into
xlat
mov
sbb
add
int
out
fcmovu
mov
jae
cmp
lock
fsub
jecxz
fcmovu
fidivrl
les
add
in
in
out
fcmovu
mov
xchg
daa
dec
shl
in
out
jecxz
fcmovu
fidivrl
in
sub
dec
add
int
in
in
in
out
fcmovu
mov
sarl
dec
ljmp
fidivrl
pushf
xor
xchg
je
add
add
add
lock
div
in
in
mov
scas
stos
les
subb
scas
scas
pushf
sbb
add
push
hlt
leave
repnz
div
cmc
in
fcmovnu
mov
mov
mov
mov
push
pop
lods
cmpsl
cmpsl
push
insl
add
add
ror
sti
cli
cli
div
in
xlat
mov
mov
mov
cmpsb
ret
pushf
subb
je
arpl
add
push
lock
idiv
in
in
mov
mov
mov
xchg
stos
mov
push
pushf
cmp
add
add
iret
iret
sti
cli
cli
div
out
mov
mov
lar
cmp
add
add
add
sti
cli
cli
cli
jecxz
mov
lea
pusha
jge
pop
inc
add
add
add
add
cli
cli
cli
mul
mov
mov
xchg
insb
insb
sbb
leave
repnz
cli
cli
cli
jecxz
mov
insb
imul
inc
add
add
aam
cli
ljmp
xchg
xchg
jne
insb
addr16
dec
add
lret
mov
jne
imul
add
jbe
jne
jne
imul
dec
gs
imul
add
add
imul
add
inc
push
push
adc
aas
adc
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
sbb
jge
and
jnp
aaa
add
data16
jnp
add
jo
add
jne
add
xorb
mov
add
mov
add
xchg
cmp
fsubrs
dec
add
xchg
inc
add
pop
add
nop
pop
add
fwait
pop
add
mov
cwtl
pusha
add
cwtl
imul
mov
jae
lods
nop
jne
stos
cwtl
jae
movsl
xchg
jp
stos
xchg
jl
mov
jl
mov
lcall
mov
mov
jle
les
add
mov
dec
add
test
add
stos
dec
add
mov
add
stos
push
add
movsb
pop
add
scas
pop
add
lods
push
add
mov
add
mov
add
mov
add
mov
push
add
mov
data16
lods
fs
test
pusha
add
mov
imul
les
js
lret
mov
add
rcrl
ret
ffreep
jl
in
pusha
add
insb
add
lret
in
into
jb
loopne
jl
out
jnp
in
shlb
jmp
jl
lock
aam
add
cwtl
add
xchg
addl
scas
fwait
xchg
test
cltd
mov
stos
fwait
mov
mov
test
test
xchg
add
mov
mov
lods
mov
cwtl
add
cmpsl
xchg
add
test
pushf
add
mov
add
stos
add
mov
add
mov
addl
lret
add
cmpsl
mov
stos
mov
into
stos
mov
shrb
add
mov
add
mov
add
mov
test
mov
mov
leave
lods
xchg
add
scas
nop
add
mov
add
mov
add
mov
add
mov
add
mov
lcall
mov
sahf
add
mov
add
mov
add
mov
stos
add
mov
stos
add
mov
mov
add
mov
mov
int
mov
faddp
nop
add
lret
fwait
add
lret
out
mov
jmp
fimull
add
fiadds
add
fisttps
add
rcll
add
ficoml
add
fcompl
add
loope
add
loope
add
out
add
jmp
cltd
add
in
add
jmp
add
shlb
stos
add
shrl
add
sarl
ffree
mov
mov
aam
mov
add
leave
mov
add
lds
jecxz
stos
add
mov
loop
mov
in
mov
add
sarl
add
loope
add
loopne
add
in
add
ljmp
hlt
in
add
jmp
add
icebp
movsb
add
icebp
stos
add
loop
add
in
mov
cld
out
mov
cli
hlt
mov
stc
idivb
add
ret
ret
add
mov
add
int3
lret
add
enter
int
add
iret
int
ror
add
ror
add
aam
add
xlat
aad
xlat
xlat
fadds
fcmovnu
fildl
out
roll
aam
add
lret
add
enter
int3
add
fcmovnbe
add
fst
add
add
sti
ret
cmc
lret
add
loopne
add
loope
add
loope
add
in
add
call
jecxz
ljmp
add
jmp
add
jmp
add
out
jmp
add
repnz
add
repnz
hlt
icebp
add
clc
testl
add
das
cmp
or
add
add
push
push
push
dec
cmp
add
addb
add
outsb
sahf
mov
arpl
add
inc
push
stos
stos
inc
add
add
mov
add
add
add
add
xor
push
stos
cmpsb
data16
add
movsb
mov
add
add
cltd
jae
add
add
add
outsb
inc
push
or
add
pushf
scas
dec
xor
add
cld
fcmovnu
mov
add
add
add
sbb
add
add
mov
cmp
add
fnstsw
add
add
into
dec
sldt
add
enter
cmp
add
add
cld
fucomi
jmp
mov
jb
add
add
add
rcll
jge
add
add
cld
hlt
loopne
jmp
fnstsw
add
add
roll
outsl
push
jmp
jmp
out
mov
lret
xor
inc
push
hlt
cld
jecxz
out
jmp
jmp
call
xchg
pushf
cmpsb
xor
add
add
je
neg
out
out
out
jmp
jmp
call
mov
xlat
int3
inc
dec
cld
cld
jecxz
repnz
out
jmp
jmp
out
call
ret
xlat
push
dec
addb
add
out
out
out
out
jmp
call
out
call
in
xlat
dec
ds
add
outsl
cld
mul
ljmp
jmp
out
out
mov
mov
inc
insb
add
add
add
cld
jecxz
repz
repnz
out
jmp
out
out
out
out
mov
push
ds
xchg
xchg
xchg
bound
add
hlt
fcomi
repnz
out
jmp
out
out
out
mov
in
iret
cmp
mov
hlt
div
clc
repnz
icebp
jmp
call
mov
shr
inc
aad
inc
mov
mov
pop
add
hlt
mov
repnz
icebp
jmp
out
out
mov
mov
aad
push
leave
xor
mov
xchg
add
add
add
add
mul
fdivrp
clc
clc
clc
repnz
out
out
out
mov
lret
xor
cmp
xchg
mov
mov
sub
add
add
add
hlt
mov
clc
repnz
out
out
mov
rol
xlat
cmp
inc
mov
rol
rol
sub
add
add
add
neg
fdivrp
cli
clc
clc
clc
clc
repnz
out
out
mov
rol
leave
adc
mov
rol
rorb
add
jecxz
cli
cli
cli
stc
clc
clc
clc
repnz
out
mov
rol
int
cmp
sbb
pop
xchg
rol
ja
add
add
add
hlt
fninit
cli
cli
sti
stc
stc
clc
clc
clc
bnd
mov
rcl
push
push
sub
mov
mov
add
add
jecxz
jecxz
cli
cld
sti
sti
stc
stc
clc
clc
repz
rcrb
mov
pop
or
sub
add
add
cld
hlt
fninit
cld
sti
sti
sti
sti
stc
stc
clc
clc
bnd
rol
mov
add
or
xchg
adcl
xor
imul
add
add
jecxz
jne
std
std
sti
sti
sti
stc
stc
clc
clc
repnz
shlb
push
test
inc
inc
and
sub
add
add
add
add
std
std
std
std
sti
sti
sti
stc
clc
cli
repnz
mov
xchg
movsl
int
ror
mov
add
xchg
mov
popa
jb
jne
std
std
std
sti
sti
sti
stc
stc
clc
repnz
les
movsb
lods
mov
mov
sub
add
jecxz
idiv
std
sti
sti
sti
cli
clc
repz
les
push
fwait
mov
mov
sub
add
div
cli
cli
cli
cli
clc
clc
ffree
les
cwtl
xchg
mov
mov
jbe
pop
mov
cli
clc
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
xchg
mov
test
sub
add
mov
lds
cwtl
cwtl
cwtl
xchg
xchg
mov
test
pusha
add
in
mov
mov
cwtl
xchg
xchg
mov
mov
sub
jae
insb
cwtl
mov
mov
mov
sub
add
add
xchg
cwtl
mov
mov
sub
sub
add
bound
xchg
xchg
mov
jns
js
sub
add
imul
sub
gs
js
sub
sub
add
add
jns
dec
and
pop
add
pop
and
sub
add
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
pop
add
add
add
add
add
add
mov
or
add
add
mov
mov
push
mov
clc
clc
mov
mov
mov
add
mov
add
add
xchg
add
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
add
add
jo
call
add
add
addb
push
jo
add
add
add
mov
or
add
mov
add
add
add
xchg
or
add
add
add
add
clc
mov
call
add
or
vpmacssdd
add
add
mov
add
add
add
mov
add
add
mov
add
add
jg
mov
add
add
mov
add
add
clc
clc
clc
clc
mov
mov
clc
decl
mov
jo
clc
clc
mov
jle
mov
decl
jbe
xchg
decl
mov
push
add
mov
clc
clc
mov
mov
add
decl
mov
out
mov
add
ud0
clc
mov
call
add
mov
decl
mov
add
add
mov
add
add
add
or
xchg
add
add
add
mov
js
add
loopne
add
js
jle
add
add
add
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
or
add
add
ja
mov
rolb
mov
add
outsb
mov
xchg
add
add
add
add
add
decl
call
mov
add
psubb
or
add
call
add
add
add
add
jo
or
add
clc
mov
add
add
add
decl
jo
mov
add
clc
mov
clc
out
add
mov
jle
add
add
add
add
mov
or
mov
mov
call
add
mov
clc
clc
mov
mov
add
add
add
add
clc
mov
mov
add
add
add
clc
mov
mov
mov
or
decl
mov
xchg
add
add
clc
mov
mov
add
add
mov
mov
call
xchg
add
add
clc
mov
mov
mov
jg
mov
mov
mov
mov
mov
mov
clc
clc
decl
mov
call
mov
add
or
clc
clc
clc
mov
mov
enter
call
clc
clc
mov
mov
mov
add
clc
decl
mov
call
add
clc
mov
decl
clc
call
call
add
add
clc
clc
mov
divl
jle
js
loopne
add
or
mov
mov
add
add
clc
mov
mov
mov
add
add
or
clc
clc
clc
mov
mov
jo
add
add
add
clc
clc
mov
mov
mov
ja
add
add
add
add
mov
js
ja
or
mov
xchg
add
add
add
add
mov
js
xchg
add
mov
js
xchg
addb
add
add
js
call
xchg
add
add
xchg
enter
add
or
xchg
add
in
ja
add
add
add
add
addb
xchg
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
roll
cmp
add
add
xor
dec
popa
inc
add
in
inc
cwtl
pop
push
dec
insl
add
or
shl
jb
fstps
xor
ret
sbb
sarl
inc
mov
sub
add
iret
xor
jno
pop
cmp
dec
ss
lods
repz
sub
nop
jecxz
xchg
ret
sub
jecxz
aad
icebp
pop
mov
sub
loopne
dec
pusha
ds
xor
std
test
dec
sub
mov
and
out
mov
bound
cmp
je
pushf
xor
mov
cmpsb
inc
test
loopne
push
fs
dec
loope
movsb
adc
mov
mov
in
fisubl
cmc
or
lret
inc
push
cmpsb
sbb
sahf
xor
loope
fucomi
out
pop
scas
js
mulb
push
push
mov
out
push
mov
pop
push
repnz
stos
xor
aad
sub
imul
into
in
and
inc
outsb
push
dec
mov
jmp
out
lret
fstl
jmp
lea
lahf
loopne
or
pop
pop
push
or
mov
mov
loopne
pushf
cld
cwtl
mov
in
and
out
and
mov
aas
scas
add
push
cs
dec
sbb
repnz
cmc
mov
cli
nop
adc
add
sub
out
cli
add
stc
push
push
ljmp
loope
inc
cs
lret
ds
sub
mov
sbb
mov
ds
inc
iret
insb
leave
movsl
mov
mov
cmc
mov
push
fstps
shll
stos
ficomps
push
inc
adc
mov
add
add
insl
pop
jp
mov
sbbb
fwait
xor
cmc
sub
movsl
xchg
rorl
push
dec
pop
mov
lret
adc
dec
mov
mov
add
or
stc
sub
popf
loop
popf
add
outsb
pop
adc
loope
sbb
xor
ret
xor
mov
push
cld
cwtl
adc
add
sbb
adcb
xor
ljmp
insb
ljmp
pop
cmpsl
clc
and
sbb
sbb
jmp
ds
je
xor
outsl
mov
and
mov
mov
das
sbb
pushf
fistpll
xor
outsb
insl
lcall
push
xchg
in
dec
cmpsl
mov
cmp
clc
pop
mov
sub
mov
jb
jne
xor
xor
test
xor
mov
pop
sahf
mov
mov
xor
sbb
mov
adc
fdivrs
pop
lods
adc
jp
sti
pop
dec
jae
repz
inc
xorl
mov
jnp
sub
lea
push
and
test
sub
push
cmp
repnz
repnz
adc
add
adc
xorb
mov
addr16
testb
and
xor
push
cmpsb
jbe
push
push
xlat
ja
popl
aad
loopne
out
inc
arpl
es
add
and
test
fs
data16
outsb
cli
out
mov
jecxz
scas
sbb
in
inc
mov
pop
jmp
sub
or
arpl
xor
adc
and
lret
jl
in
iret
call
adc
cmc
mov
loop
or
mov
arpl
pop
and
sahf
cmp
pusha
and
out
scas
daa
mov
dec
inc
cmpsb
or
mov
or
add
push
push
mov
mov
xchg
inc
out
or
push
ss
fstp
xchg
mov
push
icebp
jae
arpl
jb
inc
mov
jb
gs
cmp
sti
stos
fs
cmp
faddl
mov
cmp
jno
pop
push
pop
aaa
out
cld
aaa
xchg
jge
jb
cmp
mov
push
leave
mov
test
cmc
cmp
jns
in
iret
or
and
cmp
out
sbb
mov
js
xor
push
ss
lods
and
jmp
or
push
push
mov
or
and
adc
repz
ficoml
pop
out
xchg
arpl
jae
add
mov
aas
imul
pushf
lea
aaa
jbe
lahf
iret
mov
lods
lret
scas
mov
cmc
or
add
pop
xchg
les
pop
inc
inc
adc
shlb
xor
sub
xor
jns
and
or
cwtl
mulb
cmpl
mov
push
xchg
and
mov
ror
jp
xor
insb
enter
pop
mov
pop
inc
scas
inc
push
xor
mov
hlt
outsb
push
cmp
pop
lret
cmp
fsts
scas
xchg
aad
push
mov
pop
mov
jns
xchg
mov
out
mov
cs
fwait
adcl
mov
add
popa
cli
into
cmp
ficompl
pop
or
sbb
imulb
sbb
push
push
mov
cmp
cmpsl
ss
and
pop
mov
mov
push
test
pop
loop
mov
adcl
outsb
and
sbb
add
inc
lahf
cmp
out
mov
jge
daa
and
test
jl
nop
mov
lods
dec
inc
sub
lds
xchg
insl
dec
imul
sbb
lods
stos
stc
dec
sub
cmc
dec
cmpsb
iret
push
andb
loopne
fldl
in
leave
mov
mov
ret
lea
sub
scas
push
push
push
sbb
mov
mov
scas
enter
pop
and
outsb
xlat
addr16
push
aad
xchg
loop
mov
aad
inc
xchg
or
xchg
dec
sbbb
aad
pop
adc
in
xorl
or
xor
into
mov
rcrb
lret
dec
pop
mov
jo
mov
adc
pushf
inc
or
pusha
and
test
mov
nop
repnz
sbb
xor
test
lret
mov
inc
in
add
shrl
jmp
cli
outsl
adc
je
jle
jg
repnz
push
iret
shll
ss
psubq
adc
add
mov
out
sbb
dec
sahf
test
dec
mov
pop
mov
pop
sub
in
in
push
xor
into
xchg
xor
xchg
lds
push
inc
adc
push
mov
mov
movl
es
cmpsb
testl
lods
inc
xchg
ret
mov
imul
std
or
leave
fcom
pop
out
add
add
imul
dec
push
xlat
xchg
adc
xchg
adc
ret
mov
jmp
out
jle
cmp
dec
sub
icebp
mov
sbb
adc
inc
lret
cmpsb
iret
xlat
test
xor
adc
imull
dec
lods
push
xor
jle
inc
push
neg
loop
or
xchg
incb
add
mov
bound
push
mov
adc
in
inc
cwtl
jo
pop
mov
jo
push
popa
cwtl
jne
popl
xchg
cs
xchg
outsb
push
xorb
out
idivl
mov
bound
cmc
cmp
andb
es
xor
adc
repz
and
shrl
add
fsubp
enter
xor
sub
pop
add
shll
mov
pop
or
jb
xor
and
leave
mov
xchg
push
stc
adc
xor
xchg
testb
push
inc
ret
sahf
rcr
cmpsb
cmp
and
pop
fwait
and
cmc
hlt
aaa
mov
adc
fnsave
test
nop
icebp
push
ret
shll
mov
add
aaa
inc
mov
xor
jae
outsl
inc
cmp
sbb
ljmp
push
dec
test
xor
daa
subb
xor
dec
jo
and
cltd
mov
xchg
mov
jns
adc
dec
xchg
fwait
sub
pop
in
sbb
adc
mov
mov
arpl
popf
push
inc
lcall
mov
push
lahf
shrb
js
lahf
dec
fcomi
xchg
insb
cmp
or
and
sbb
iret
or
xor
in
std
mov
xlat
add
cwtl
lcall
inc
std
jne
dec
repnz
inc
popa
push
nop
jmp
into
jge
clc
sti
xchg
decb
xorl
out
push
es
inc
movsl
je
inc
movsl
push
gs
mov
daa
sub
sarb
and
jae
dec
sbb
test
pop
scas
stos
sbb
jb
add
orl
stos
add
into
fnstsw
xor
cmovs
mov
insb
cld
ss
enter
dec
and
lcall
mov
inc
lcall
imul
ficomps
mov
popa
loope
data16
sahf
mov
lret
sbb
out
xchg
repz
mov
or
psubsw
adc
xchg
insl
sbb
sbb
pop
or
fadd
int3
jl
push
lea
push
pmullw
or
nop
xchg
push
lahf
adc
mov
scas
ja
enter
js
push
sti
adc
dec
or
mov
outsl
push
pushf
push
inc
sub
xchg
sbb
sub
int3
es
out
mov
inc
push
xor
push
lds
pop
orl
in
sbb
scas
gs
xchg
cmp
nop
mov
call
push
loope
movsl
xchg
int3
add
add
add
pop
mov
inc
test
push
sti
inc
add
div
repz
pop
sub
mov
fildll
lret
xor
mov
xchg
pop
repnz
sub
rclb
daa
out
popa
sbbb
std
mov
pop
xchg
mov
jo
and
mov
sub
orb
sahf
scas
mov
in
pushf
ret
xchg
pop
lea
sbb
xchg
aas
popf
and
sahf
das
cmpsl
fdiv
nop
lods
push
insb
inc
inc
jno
outsb
adc
cltd
inc
xchg
cmpb
push
xchg
push
or
pop
cltd
pop
or
adc
ss
clc
push
and
cld
mov
outsb
xor
sbb
addr16
xor
fimull
aas
das
pop
dec
ficomps
sub
mov
xchg
out
out
aam
scas
mov
jns
adc
xchg
scas
outsb
jmp
stos
jb
sti
add
inc
popf
jno
adc
pop
daa
adc
dec
inc
jbe
pop
int3
ret
adc
and
mov
jae
add
lahf
fisubrs
xchg
or
movsb
mov
push
mov
xchg
addb
cmc
popl
sub
rcl
pop
out
adc
mov
sbb
add
lds
adcl
add
add
dec
ja
sbb
loop
jmp
ret
xor
and
call
shrl
mov
lret
sub
or
mov
cmp
stos
xchg
jne
mov
mov
pop
imul
ljmp
cmpsl
mov
xchg
call
push
rol
mov
xor
out
in
jae
scas
jno
or
lea
and
je
or
sub
lea
aam
push
pop
inc
adc
xchg
stc
rcll
loopne
cmp
dec
xchg
cmp
je
movsl
inc
mov
sub
lds
mov
push
ret
mov
xor
or
or
cmp
lods
or
adc
jne
inc
xchg
lods
and
xchg
gs
pop
push
add
loop
sub
enter
sahf
popf
push
mov
outsl
cltd
inc
inc
push
jnp
push
or
sub
lds
add
cmpsb
pushf
sbb
jbe
rcrl
hlt
into
xchg
fwait
sbb
loopne
ljmp
rorl
cmp
fdivl
fwait
xchg
lods
lds
lea
aam
call
ficompl
xor
rcll
mov
inc
add
pop
xor
mov
jnp
pusha
sub
je
xchg
pop
sti
pop
xchg
cmp
daa
sahf
lea
mov
mov
push
push
movsb
hlt
push
rcrb
inc
inc
bound
orl
cmp
rol
mov
push
ret
push
adc
in
mov
sarl
or
cltd
inc
and
std
xchg
mov
scas
adc
pop
jle
loopne
mov
shll
jg
pop
cmc
and
or
mov
js
cmpsl
cld
cld
sub
xor
jns,pn
or
sbb
cmp
sub
scas
or
mul
push
xor
int3
add
neg
push
push
and
icebp
lret
fiadds
shll
imul
mov
mov
movsb
out
ss
rorl
push
pop
das
je
dec
jg
push
lock
push
inc
and
push
inc
iret
int3
fs
xor
sbb
scas
loopne
outsl
decb
add
fstps
xchg
pusha
add
inc
aas
popa
jmp
jmp
jp
pushf
lahf
sbbl
jle
dec
andl
add
sbb
push
mov
es
cmp
rcrb
mov
dec
push
sbb
imul
jnp
insb
subb
xlat
repnz
lcall
dec
in
test
and
out
xchg
inc
fstpl
push
out
sub
inc
daa
mov
sbb
push
and
nop
pushf
out
pusha
aad
outsb
push
cmp
insl
mov
subb
xlat
mov
or
jmp
add
fwait
adc
ss
js
das
bound
mov
stos
inc
sbb
int3
les
dec
pop
ss
mov
lret
inc
fistpl
test
shlb
lcall
and
add
jp
das
mov
jnp
aam
lds
sub
mov
pop
add
dec
rclb
sub
cli
testl
test
pop
lea
stos
adc
add
xchg
imul
inc
cmp
sbb
jae
pcmpgtd
test
or
popa
in
lret
adc
xlat
mov
lret
rcrl
gs
fists
mov
ret
xchg
inc
push
mov
push
into
jge
fs
stos
pop
rcrl
lods
clc
lcall
insl
sahf
mov
jecxz
or
scas
adc
mov
fcomps
and
sub
sbb
pop
test
imul
jno
imul
call
icebp
mov
pop
in
push
pop
ja
xchg
add
or
or
adc
movsb
dec
popa
idivl
pop
test
mov
xchg
add
add
add
popf
mov
adc
out
and
jae
aaa
insl
int
add
push
mov
xchg
dec
fucomp
mov
addl
adc
push
addr16
xor
cmc
ja
fpatan
sub
mov
dec
cmp
mov
iret
mov
mov
loopne
insb
mov
mov
jbe
dec
insb
in
shrl
test
xchg
inc
aas
push
in
in
sahf
ret
test
iret
sub
adcb
in
push
xor
fwait
subb
mov
fs
dec
sbb
pop
into
loope
inc
mov
jmp
rol
push
mov
mov
xchg
test
cmp
mov
pusha
aam
or
jmp
data16
sub
jecxz
push
mov
mov
loopne
dec
xlat
add
jnp
mov
fsubs
test
ss
jl
out
jp
jge
xor
or
cmpsb
xchg
xchg
ficoml
and
mov
test
xchg
lds
mov
gs
popl
lret
xor
popa
xor
mov
ret
cmp
jbe
lock
test
fidivl
dec
mov
scas
mov
xor
shll
mov
jnp
sub
xor
rol
add
mov
cmp
fcom
and
dec
outsl
push
xor
rcr
pop
add
sub
cmpxchg
mov
fisubrl
mov
lret
call
xchg
mov
add
cli
pop
lock
addb
sbb
out
movsl
or
scas
gs
push
in
aad
pop
mov
mov
pop
cwtl
and
mov
push
push
pop
cld
outsb
dec
xchg
pop
loope
xchg
jns
push
xchg
add
std
bound
scas
clc
addr16
mov
dec
mov
and
aas
pusha
scas
sbbb
mov
xor
sti
push
int
sahf
stos
in
andb
and
shl
gs
lret
andb
imul
daa
enter
popf
xor
pop
cmc
scas
xchg
lds
imull
bound
and
scas
outsb
cltd
fwait
push
and
cld
mov
fsubrl
and
dec
inc
mov
adc
fxch
repnz
dec
or
test
out
stos
imul
outsb
or
jb
sbb
insl
outsb
pop
fbld
jecxz
push
jno
dec
xchg
repnz
and
push
and
jg
or
out
daa
int
mov
shlb
mov
xor
mov
push
push
sar
stos
pusha
enter
mov
iret
inc
sbb
cmp
pop
cmpsb
mov
out
jle
jp
movsb
sub
cmp
jle
clc
stos
imul
push
fsubrl
lea
dec
dec
sub
xor
ret
pop
push
out
inc
jge
ljmp
ja
jbe
shrl
inc
cmpsb
hlt
fisubl
mov
xchg
fwait
scas
daa
adc
push
and
xor
jns
pop
jo
jbe
pop
js
xchg
outsl
push
inc
test
sub
adc
sub
sahf
in
outsb
add
adc
add
fs
sbb
testb
jg
mov
iret
pop
xchg
lret
test
mov
jge
jne
icebp
into
enter
int
cmp
rcrb
hlt
jecxz
push
or
sub
icebp
mov
mov
sahf
outsb
push
jo
mov
bound
jmp
and
xor
les
hlt
xchg
and
xchg
rclb
arpl
sbb
pop
cli
ror
cmpl
daa
push
mov
scas
sub
cli
push
mov
fidivrs
loopne
fmull
dec
notb
into
xchg
enter
loopne
ja
ret
or
pop
xchg
jo
xor
sub
sbb
lret
iret
xchg
jb
arpl
inc
lret
mov
rorl
add
std
and
scas
cli
mul
cmpsb
mov
addr16
and
dec
mov
in
in
pusha
insl
mov
idivl
mov
insl
push
orl
adc
add
and
inc
xor
mov
xchg
mov
fsubrs
mov
repnz
xchg
adc
xchg
lret
cmp
mov
aas
mov
pushf
scas
leave
xchg
loope
sub
test
movsb
inc
or
rcll
cli
adc
pop
dec
pop
jno
xor
fdiv
push
loopne
mov
mov
aad
jmp
adc
bound
div
dec
pop
jne
sbb
clts
in
out
jne
inc
pop
inc
jb
addr16
mov
ja
sahf
sbb
adc
imul
int
inc
mov
orb
fisubrs
inc
push
or
jns
adc
xor
mov
ds
rolb
or
lock
pop
int3
enter
stos
in
aaa
sahf
pop
lods
jle
hlt
and
cltd
shlb
out
pop
aas
pop
sbbl
xor
test
push
pop
test
mov
add
mov
out
mov
inc
insb
sbb
je
shlb
cmc
out
inc
adc
add
sbb
inc
cmp
and
dec
xchg
xchg
and
mov
add
mov
outsb
out
xchg
pop
inc
jnp
push
popf
mov
pop
scas
jbe
flds
inc
sbb
insl
aam
pop
xchg
xor
les
es
int3
add
mov
js
roll
cmpsb
dec
sub
push
sti
sub
iret
loopne
mov
push
loop
rolb
mov
mov
leave
sub
xlat
jp
mov
pop
inc
pushf
mov
add
ds
inc
outsl
inc
insb
out
mov
test
mov
mov
mov
push
bound
ljmp
jns
int3
pop
aam
inc
add
popf
dec
addr16
or
sub
aam
pop
jmp
hlt
into
test
gs
subb
fdivl
sahf
test
out
movsb
push
lds
dec
lds
adc
dec
add
add
sarb
daa
cmp
lret
sarl
xor
repz
jne
adc
aaa
and
sub
pop
dec
pop
or
sti
out
pop
sbb
mov
mov
and
jo
inc
shl
push
out
je
cmp
mov
in
push
popa
fimull
popa
stos
fcmovbe
stc
dec
je
test
xchg
mov
dec
hlt
dec
jecxz
cwtl
or
hlt
xchg
fimuls
xor
push
in
and
movsb
mov
mov
lods
aaa
hlt
mov
lcall
cmp
and
js
ljmp
inc
cld
jecxz
mov
ficomps
test
lahf
ss
test
add
xchg
pushl
push
les
mov
fisttpl
jmp
push
movsb
xchg
adc
xlat
fcomps
sbb
push
mov
sti
in
push
mov
adc
push
mov
das
and
jno
sbb
jmp
inc
lds
sbb
pop
cmp
inc
xchg
sub
cmp
fwait
sbb
fwait
enter
sub
imul
sub
popa
sbb
sub
sbb
enter
xor
fdivr
mov
inc
pop
mov
cmp
cmpb
mov
dec
roll
add
cld
rcrl
sub
cmp
jmp
cmpsl
lahf
inc
mov
xchg
pushf
mov
iret
push
cmp
sub
sub
test
stos
jnp
rcrl
mov
addr16
mov
add
pop
jp
mov
inc
mov
fcomi
ror
pusha
sbb
inc
jp
xor
dec
push
std
imul
jge
cwtl
sahf
and
mov
inc
pop
aad
add
dec
mov
out
and
jle
aam
icebp
xlat
add
addr16
mov
mov
sbb
clc
adc
cmp
mov
das
stc
call
adc
pop
inc
xorl
imull
mov
es
scas
cmpsb
lcall
pop
loopne
mov
sti
mov
lcall
jge
mov
jb
cmp
xor
push
xor
mov
jae
loope
loopne
and
cmp
sub
inc
add
orb
dec
sbb
jnp
fistl
push
mov
and
and
stos
rcrb
cmp
push
mov
add
cwtl
cmp
clc
mov
je
rolb
test
or
lret
inc
pusha
sbb
addr16
popa
es
shll
or
popf
movups
fistpll
pop
sub
leave
lods
jne
cmpsl
adc
inc
sbb
pop
arpl
inc
cmp
pop
in
lds
out
popf
js
les
scas
aam
sub
dec
pop
adc
mov
ret
add
jo
shll
push
int3
push
and
dec
aaa
rcrb
hlt
cltd
xor
movsb
mov
js
mov
adc
jecxz
shrb
aad
sahf
data16
or
xchg
sbb
aam
pop
cmp
xchg
jge
outsb
jmp
xor
in
aam
push
sub
mov
leave
cmp
cmp
outsb
adc
es
std
dec
jne
mov
lods
xchg
inc
inc
out
push
les
sbb
xchg
aad
inc
xor
push
ret
int3
cli
jmp
or
sbb
mov
aas
pop
out
imul
jg
sbb
test
xchg
subb
test
pop
aam
in
push
test
cmp
es
out
pop
xor
insb
jmp
inc
pop
mov
push
iret
push
ja
icebp
stos
or
rclb
adc
cmp
mov
in
adc
push
movsl
out
or
shll
stos
jbe
or
in
fstpl
mov
test
and
clc
dec
push
movl
repnz
fwait
cmpsb
sbb
xchg
and
add
jno
ret
or
jne
mov
mov
test
add
xchg
xchg
ret
sub
fcoms
dec
fistl
cmc
adc
dec
or
aad
shll
and
mov
xor
sbb
hlt
sub
fsubrl
mov
xchg
mov
dec
enter
fimull
es
cmp
fisubrs
fcoms
mov
xchg
xchg
add
sub
cmpsl
repz
sub
lcall
add
mov
cmpsb
inc
adc
fiadds
sbb
in
sbb
into
sub
cwtl
inc
push
arpl
adc
loop
shl
test
jg
add
or
add
shlb
dec
loopne
call
sbb
addr16
out
je
ret
aam
mov
inc
imul
push
pop
jge
or
cmpl
jo
cmpsb
shl
jb
pop
and
test
sarl
push
outsb
cmp
mov
cmp
xlat
pushf
push
mov
in
push
pop
mov
loop
stc
mov
and
popa
and
clc
mov
xchg
mov
mov
cmp
xor
fdivl
lcall
cmp
dec
in
ret
fildll
ret
sub
sbb
idivb
arpl
mov
leave
ret
test
mov
or
xchg
xchg
jp
lret
in
insl
arpl
xor
icebp
ret
popa
lods
repnz
and
aaa
sbb
dec
aas
mov
jle
arpl
dec
mov
inc
sub
push
mov
jo
test
lds
mov
je
pop
arpl
mov
out
sti
shlb
test
out
jge
sbb
mov
sub
dec
pop
add
xchg
call
fidivrl
leave
gs
lahf
dec
out
sti
mov
int3
ret
in
add
xor
add
daa
enter
cmp
cmc
aad
push
push
repz
jo
aad
mov
mov
insl
into
add
enter
push
imul
int3
push
mov
and
testl
mov
subl
xchg
fstpt
and
imul
pop
add
push
mov
out
fcomi
jns
lcall
mov
xchg
push
aas
lret
ja
mov
cld
outsb
and
orl
pop
cmpsl
lret
cmp
adc
jnp
xchg
push
xchg
mov
jne
cwtl
mov
mov
push
push
lea
ret
add
push
mov
cmp
inc
fstl
lcall
jg
das
stc
xchg
test
mov
or
in
xchg
jns
push
jae
sbb
aam
cltd
sti
and
mov
mov
push
pop
test
bound
std
push
adc
leave
inc
lods
jmp
ret
addr16
pop
mov
fdivrs
pop
bound
loope
adc
pop
sbbl
out
scas
mov
mov
shrb
mov
repnz
fimuls
jle
inc
out
dec
cmp
aaa
ja
adc
jp
imul
xchg
jne
inc
add
adc
xor
sub
inc
arpl
shll
dec
sahf
push
cwtl
xor
js
movsb
outsl
cli
dec
xchg
or
sbb
aaa
adc
or
push
repnz
jo
out
xchg
add
xchg
sub
scas
cmc
mov
cmp
insl
ret
push
cmp
sub
cs
bound
cli
jge
add
mov
daa
repnz
neg
mull
loopne
icebp
dec
mov
push
cmp
push
adc
dec
sahf
jl
bound
sahf
jmp
fisttpl
inc
or
jb
cs
pop
push
in
mov
les
inc
lods
xor
sbb
xlat
jo
sbb
dec
aam
jae
fisubrs
ja
iret
lea
cld
mov
adc
sahf
clc
repnz
fdivrs
jecxz
cmp
stos
out
mov
jnp
sti
lahf
jge
jne
testl
daa
push
and
outsl
mov
out
mov
jp
add
stos
xchg
push
call
push
push
cmpsl
pop
sbb
imul
pop
fwait
rorb
cmpsl
push
jecxz
out
xor
cmp
sbb
mov
stc
mov
push
test
mov
dec
xorl
fs
pop
inc
xchg
push
cwtl
push
dec
add
clc
pop
inc
sbb
dec
add
cmp
mov
orb
sbb
fldcw
cmpsl
sub
test
mov
fwait
clc
push
cmpsl
lea
adc
lahf
push
xchg
ret
push
imulb
or
or
lret
imul
iret
or
mov
sbb
sub
je
ljmp
pop
sub
sbb
xchg
push
push
sub
xor
or
cmc
in
cltd
stc
in
and
pop
test
nop
pop
xor
cmpsl
pop
das
iret
lret
loope
fstl
inc
pushf
mov
cmp
cmp
adc
clc
cmc
xchg
or
shrb
jle
dec
add
and
sbb
mov
jbe
fcmovnu
scas
ljmp
clc
rclb
sub
dec
sub
int3
inc
mov
aaa
flds
mov
cwtl
mulb
and
mov
mov
or
dec
jne
sbb
in
faddp
in
pushf
aad
outsl
xlat
jmp
xchg
imul
in
scas
jo
and
in
pop
jno
xchg
cltd
lods
bnd
lock
cs
repz
adc
test
mov
out
mov
cmp
push
sub
orb
push
iret
inc
mov
popf
fnstsw
subl
mov
rclb
push
jae
xor
imul
cld
sahf
mov
dec
jmp
loopne
sbb
scas
dec
push
dec
imul
sbb
pop
push
add
aad
inc
or
inc
daa
call
cmovbe
cwtl
scas
push
cs
pop
add
mov
popl
arpl
andl
inc
cld
jmp
xchg
icebp
push
insl
and
pop
push
cmp
pop
flds
in
cmpl
push
es
and
jg
adc
pop
fstl
cmc
or
jle
jns
mov
mov
pop
mov
push
sbb
or
inc
adc
adcl
pop
jecxz
dec
jp
sub
sahf
and
mov
lods
pop
fcompl
jle
shll
fimull
loop
and
pushf
cmpsb
dec
sbb
in
or
data16
jle
or
shrb
aaa
xchg
mov
lahf
andb
and
or
adc
mov
xchg
shrb
push
shr
scas
cmp
dec
dec
arpl
add
pop
cltd
ljmp
ret
pusha
jo
jge
mov
xchg
push
iret
mov
jbe
dec
push
jmp
or
pop
sbb
shrl
and
cmp
addr16
stc
call
jl
shl
xor
mov
lret
cltd
cmc
lcall
imul
xlat
add
lret
jns
lcall
stc
lahf
movsb
jle
or
mov
insb
jecxz
mov
sbb
mov
mov
into
fdivrs
push
mov
cwtl
xchg
out
xor
mov
xchg
lret
jp
add
xchg
stc
int
dec
jne
loopne
lret
pop
inc
je
scas
sub
add
aas
ret
sub
mov
fcompl
movsl
rorb
cmc
fiaddl
lock
int3
rorl
jns
cmpsb
cld
sahf
aas
or
cmpsb
int
lahf
ja
sub
push
or
int
inc
jge
and
stos
stc
imulb
call
inc
add
add
popl
pop
rclb
mov
dec
popf
negl
xchg
cmc
mov
or
push
inc
push
lret
out
lea
shr
or
jns
mov
pop
jne
dec
enter
mov
fdivrl
xlat
or
pop
jns
andl
into
xchg
fidivs
repz
dec
out
push
mov
mov
pop
scas
jl
sbb
shrl
mov
mov
rorl
std
jl
fidivrl
test
or
das
mov
inc
sbb
jns
push
jbe
inc
jnp
or
pop
cmpsb
ficompl
mulb
jg
popa
xchg
mov
pop
mov
test
out
out
jmp
and
xchg
ljmp
xchg
inc
repz
mov
fs
sarb
sbb
dec
gs
mov
mov
ret
xor
xchg
mov
or
and
pop
cmc
cmp
ret
dec
mov
push
rolb
bound
push
in
xchg
das
gs
pop
cmp
imul
and
pop
jns
inc
iret
ret
add
push
and
xlat
push
test
mov
xor
push
mov
in
xor
pusha
sub
lret
adc
aad
or
jecxz
push
cs
repnz
mov
push
jnp
push
sahf
jl
xchg
or
mov
xchg
pop
xor
xchg
push
inc
js
pop
sub
mov
sbb
sub
inc
sbb
or
xor
lods
fmuls
repz
fsubs
lret
cmp
dec
xor
pop
cmpb
jne
add
adc
repz
xchg
ja
mov
mov
xchg
dec
xchg
jge
mov
mov
ret
lods
out
xchg
insb
aam
pop
adc
fs
fwait
inc
insl
pusha
add
add
xchg
pushf
push
sbb
and
aam
gs
lcall
xchg
int3
mov
fs
shll
sbb
xor
popf
push
pop
popa
xchg
mov
or
rclb
add
into
mov
push
lds
adc
cmp
jb
jmp
push
sub
mov
ljmp
pop
jns
lods
iret
nop
fdivr
push
or
pushf
jmp
lea
xchg
ret
rolb
mov
xchg
mov
add
movsb
clc
je
xor
xchg
and
xor
cmpsl
ljmp
jo
add
sub
pop
fstpt
or
lret
xor
xor
dec
push
mov
xchg
inc
pop
push
xchg
mov
imul
mov
jae
xchg
lods
pop
mov
icebp
stc
mov
sbb
je
push
pop
jp
and
into
mov
push
popa
xor
push
and
ret
ret
jb
andps
pusha
lahf
dec
sub
fcoms
cmpsl
cs
or
rcrb
mov
aad
cmpl
cmp
pop
cmp
jae
loope
mov
jnp
int3
push
xchg
inc
test
push
pop
outsl
cmpsl
sub
cmp
inc
pop
pop
inc
jne
cmp
sbb
push
out
pushf
les
cli
push
addl
dec
loopne
pusha
test
push
shlb
adc
sbb
pop
mov
jle
test
add
cmpsw
add
mov
sti
aaa
aam
fidivl
lea
push
jb
faddl
cmp
jmp
inc
roll
mov
mov
popa
dec
imul
mov
rclb
cmpsb
icebp
cmp
in
and
jb
or
inc
jmp
icebp
fldl
ret
fistpll
mov
pop
mov
jns
xchg
lds
pop
ss
andb
sahf
add
or
pop
fdivrl
filds
std
inc
jne
stos
jnp
pop
adc
push
mov
push
gs
lock
scas
dec
pop
add
jmp
fisubrl
fwait
jne
xchg
xor
add
lock
push
pop
push
jne
fsubrs
shl
mov
pop
ror
loopne
cmpsl
loop
mov
flds
sbb
notl
push
push
dec
adc
mov
xor
sbb
push
jmp
adc
dec
jle
mov
call
ret
adc
add
xchg
xchg
rcrb
ficoml
imul
or
aam
outsl
int
lock
ja
and
pop
test
inc
in
push
sbbl
loopne
in
cwtl
insb
inc
jle
sub
pop
movsl
stos
lds
adc
pop
data16
xchg
xor
ljmp
sarl
iret
add
out
xchg
sbb
inc
lret
movsl
cmp
lods
jl
repnz
mov
pusha
aad
cltd
cltd
pop
push
mov
and
addr16
lret
pop
mov
cmp
xchg
cmp
xor
xchg
jb
mov
cmpsl
iret
lods
dec
xchg
cmc
aaa
mov
adc
add
ds
data16
test
or
xchg
pop
mov
pop
adc
int3
dec
shr
outsl
test
and
push
frstor
and
fadds
adc
fwait
insb
es
out
mov
jo
aam
cmp
push
outsb
call
ljmp
and
loope
call
hlt
movsb
mov
lahf
loop
ljmp
add
pop
or
leavew
call
sub
fildll
inc
cmp
lret
sub
mov
shl
xor
cwtl
and
lods
test
pop
mov
popl
push
jle
not
ds
stos
push
mov
mov
xor
daa
pop
cmp
lret
and
cld
test
jmp
add
jo
shl
sub
add
jmp
mov
inc
mov
jmp
idivl
sub
sub
jle
cmp
lcall
push
pop
mov
sbb
cmp
pop
aad
pop
xchg
test
std
sub
cmp
pop
pop
xchg
add
sub
loopne
xor
cmp
loope
and
mov
sub
sub
jp
mov
bound
fmuls
insl
mov
leave
mov
sub
clc
fistps
out
pop
sahf
enter
int3
sub
push
int
cmp
das
out
adc
shrl
and
and
fisttpll
or
stos
dec
loop
fadds
sti
dec
les
lods
lcall
jmp
jno
addl
outsl
das
xchg
outsb
gs
outsb
cmp
es
xchg
cmpl
mov
lret
sbb
inc
or
adc
repnz
mov
adc
add
add
mov
and
shll
sahf
jge
fstpt
and
sbb
and
clc
stos
push
popf
fwait
out
mov
jle
popa
int
adc
rcll
xchg
sbb
push
popf
xchg
out
sbb
popa
daa
push
pop
inc
insl
test
ljmp
push
imul
addr16
push
mov
mov
and
gs
lahf
xor
fsubrl
mov
mov
mov
mov
and
pop
cmc
xchg
sbb
jb
lea
int3
aad
mov
push
fistpl
sbb
xlat
lret
arpl
inc
xor
leave
stos
outsb
mov
in
inc
adc
lods
push
mov
pop
int3
fnsave
push
inc
xchg
cmp
cltd
adc
dec
mov
mov
pop
mov
fcoms
stc
imul
mov
xor
insb
leave
and
leave
inc
cmpxchg
inc
fsubrl
inc
cmp
rcr
mov
pop
popa
mov
jo
xchg
out
jg
mov
stos
clc
mov
lock
rclb
js
push
repnz
add
and
movsl
pusha
ljmp
testl
sbb
lock
shl
movsl
pop
mov
xor
mov
sub
enter
movsb
and
and
fs
pop
adc
jp
mov
sub
cld
dec
mov
mov
fisubrs
inc
sbb
ds
mov
test
sub
lret
adc
test
add
outsl
ds
pop
ret
mov
cmp
xor
jae
pusha
xor
cmpsb
das
cwtl
xor
push
push
pop
pop
xor
sub
pop
pop
and
mov
and
or
xchg
popa
sti
cmc
ret
leave
outsb
or
sar
dec
cwtl
xchg
scas
aad
adc
mov
mov
mov
pop
cmp
out
imul
mov
repz
shlb
mov
add
jl
cli
hlt
cli
int3
push
test
insb
push
and
xchg
lea
or
jg
push
or
pusha
xor
mov
mov
jns
or
dec
push
cmp
shlb
scas
insl
adc
pop
fcomps
cltd
mov
sbb
rcll
test
pop
dec
mov
andb
mov
shr
cmp
clc
mov
pop
pop
cmp
sub
leave
push
and
popa
dec
adc
loopne
jmp
mov
add
mov
clc
add
push
lret
or
and
enter
adc
pop
sbb
push
xlat
and
mov
lcall
hlt
mov
fsubp
mov
push
rcl
mov
cmpsl
or
mov
xor
stos
dec
mov
sub
mov
call
xlat
pop
movsb
sbb
adc
pop
loope
push
mov
dec
dec
decl
subb
jle
push
pop
pusha
mov
jno
jns
and
push
xchg
pop
cmp
sub
jl
jp
xor
mov
test
int3
addr16
hlt
fcom
movsl
adc
cmc
or
faddl
push
cltd
fcompl
and
pop
outsl
xchg
andl
loope
or
ja
dec
insl
std
sbb
mov
das
std
jle
jmp
xor
out
cmpsb
shll
jnp
xor
cli
xchg
jmp
jnp
repz
adc
mov
ds
pop
fcompl
mov
push
inc
hlt
inc
sti
in
fldl
jno
cmp
icebp
shrb
lret
jle
loopne
pop
repnz
dec
insb
and
out
loopne
jmp
or
or
cltd
lret
stos
into
sbb
cld
mov
mov
fwait
test
xlat
ja
das
sbb
mov
out
aam
adc
out
jo
pop
in
xchg
push
mov
out
cmp
in
nop
xchg
lret
push
dec
mov
mov
push
xchg
ret
cld
xor
aas
fs
fidivrs
out
ret
jne
adc
dec
adc
addr16
or
jle
mov
leave
mov
mov
xor
or
in
mov
mov
out
mov
shrb
sbb
xlat
and
lock
mov
outsb
pop
mov
sbb
sbbb
xchg
push
mov
fsubs
gs
loop
or
iret
je
out
aas
mul
bound
xor
movsb
jecxz
and
mov
inc
cmp
adc
rcrl
add
enter
sbb
rcrl
cld
xor
fstps
adc
dec
pop
sbb
ja
jae
outsl
push
xchg
inc
push
inc
jl
pop
add
lods
xchg
popa
or
std
mov
sarb
and
jbe
cmp
cmc
cmp
arpl
cmpsb
sub
mov
dec
test
ja
shll
push
sbb
mov
cmp
mov
mov
test
nop
fists
in
enter
xchg
lods
loopne
in
arpl
inc
sbb
ja
xabort
fisttps
repz
add
loop
jnp
sub
addr16
lahf
xchg
sbb
punpckhwd
or
pushf
repz
ss
rorl
adc
aam
js
stc
fcmovnbe
std
or
repz
shl
ret
movsl
sub
jo
mov
dec
cmp
mov
mov
sub
mov
orl
rorb
push
ds
sub
sub
int3
pushf
push
and
xor
cmp
push
adcb
mov
cmp
push
pop
das
insb
jo
ffreep
gs
sbb
mov
out
jmp
mov
xchg
sahf
in
fstpl
jns
pushf
pop
stos
es
push
scas
xor
mov
je
jg
sbb
movsb
adc
cmc
test
add
popf
and
and
lods
fs
lahf
dec
popa
xor
dec
and
int3
jno
mov
leave
add
lds
add
and
cmp
jb
mov
dec
xor
xchg
and
pop
inc
sti
adc
fwait
lret
and
or
push
stos
icebp
mov
test
push
mov
mov
int3
addr16
enter
fsub
fsubrs
insl
inc
dec
cli
clc
test
inc
popa
mov
mov
jo
xchg
fwait
popa
adc
cmpsl
loope
add
popa
or
or
imul
mov
sub
lret
pop
fcompl
js
or
sub
inc
adc
repz
jmp
je
ret
push
les
sti
in
pushf
jp
sub
sbb
int
xchg
ja
inc
sub
aaa
out
iret
adc
xor
push
leave
bound
pushl
pop
rol
adc
pop
in
fcos
clc
and
aam
jae
adc
pop
sahf
and
pop
inc
add
fs
mov
lods
cmc
insl
scas
sahf
adc
xchg
das
mov
jno
inc
arpl
mov
cld
and
adc
xorl
arpl
rclb
mov
paddq
jmp
xchg
fdivl
cmp
sub
push
or
jne
fcomps
adc
ret
loop
xchg
test
sti
dec
inc
in
pop
mov
ss
imul
mov
inc
ret
es
std
int3
xchg
and
cmp
cmpsl
xchg
int
lret
add
mov
push
ljmp
fmull
out
pop
and
je
outsb
mov
loop
ljmp
push
dec
lahf
push
push
stos
push
out
fstpt
inc
addb
cld
mov
and
or
add
mov
add
xchg
andl
loope
or
or
add
mov
rorb
sbbb
push
in
mov
add
into
mov
xorb
hlt
aam
inc
fucomip
sub
sbb
loop
cmp
mov
pop
jae
push
cmc
dec
popa
adc
les
je
mov
rorb
xlat
xor
xor
iret
in
xor
outsl
mov
dec
mov
xor
in
out
dec
nop
mov
and
das
outsb
xor
movsl
loop
xchg
dec
add
scas
repz
lret
aas
lret
adc
push
arpl
adc
rcll
repz
xlat
filds
insl
sub
cmp
lret
xor
jecxz
cmc
mov
sub
adc
stc
adc
jbe
cmp
std
movsb
ljmp
movsb
dec
add
fsubl
jae
fimull
sarb
out
or
inc
mov
xorl
mov
lea
add
xchg
cli
data16
popa
aad
cmpsb
arpl
and
out
mov
mov
sub
sub
and
add
push
dec
sub
sbb
out
mov
jg
cmp
in
out
popa
or
jle
std
sbb
std
in
lea
adc
sub
enter
mov
fimull
add
mov
ret
data16
sub
fidivs
or
xchg
leave
dec
sub
cmp
rclb
rcr
mov
icebp
mov
jnp
sbb
add
mov
shll
and
add
fidivs
out
shll
sub
push
dec
mov
xchg
adc
mov
data16
out
jl
mov
and
insb
add
fidivrl
mov
jecxz
repnz
subb
dec
cmp
or
shr
stos
jle
jno
mov
jbe
lods
in
ret
lea
out
xor
push
cmp
pusha
pushf
xchg
push
inc
out
adc
in
call
jmp
fisttpl
je
imul
in
xor
loope
call
push
mov
imul
add
dec
mov
fwait
loopne
cmp
and
sbb
push
pop
sbb
push
fsub
inc
pop
xchg
popa
pop
shl
cltd
mov
cmp
inc
icebp
and
fs
push
call
js
out
roll
pop
cld
repnz
and
pop
fxch
mov
inc
push
mov
push
rclb
xor
xchg
push
out
mov
push
mov
add
push
sub
js
fmull
mov
inc
je
addr16
sti
mov
js
ret
add
lods
pusha
mov
push
inc
loop
lret
fsubrl
stos
outsl
pop
mov
cs
gs
out
cltd
shll
push
adc
jb
xchg
std
jne
cwtl
pop
jp
fstps
dec
cmp
adc
pusha
or
mov
jnp
inc
loopne
jne
nop
int
jmp
xchg
andl
jo
aaa
jnp
adc
dec
sarl
shrb
aad
inc
xchg
inc
testb
mov
stos
jecxz
add
lods
pop
mov
sub
ljmp
jp
stos
mov
sub
add
and
cmp
aas
pop
ret
daa
lahf
popf
daa
and
cmpsl
push
aas
inc
adc
jecxz
test
out
sahf
aad
test
call
jecxz
push
out
adc
xor
jecxz
xchg
pop
idivb
xlat
jnp
add
mov
es
push
les
mov
jge
loope
push
addr16
cli
es
mov
ficoml
int3
cmp
mov
sbb
popf
mov
jo
push
adc
sbb
push
jo
clc
push
adc
mov
dec
adc
mov
enter
fdiv
xor
and
xchg
lret
mov
cmc
add
insl
imul
push
mov
xchg
imul
idivb
shlb
js
cmp
cltd
push
xchg
push
test
xchg
ret
add
shll
and
fcomps
jp
ljmp
push
cltd
xor
push
push
insb
sub
xor
mov
stos
push
cli
imul
jno
insl
cmp
adc
mov
cmpl
pop
incb
mov
inc
test
stc
outsl
push
hlt
in
cmp
push
jmp
lea
inc
pop
xor
and
push
pop
add
orl
xchg
push
jmp
adc
sub
cld
mov
out
cwtl
lock
xorb
clc
call
xchg
push
aam
scas
into
loope
pop
mov
add
jns
sub
repz
adc
insl
mov
jae
adc
hlt
and
das
ret
and
sahf
xchg
push
rol
repnz
stc
test
push
add
jae
mov
dec
cmc
push
cld
add
aad
das
test
inc
mov
jb
push
mov
lcall
mov
push
cli
jecxz
add
daa
push
xchg
ljmp
push
rclb
cmp
or
sub
sbb
repz
loop
arpl
cltd
xor
lahf
incb
aas
pushf
jae
es
jecxz
sbb
inc
loop
mov
int3
push
out
xchg
xchg
enter
dec
xlat
rcll
out
in
fisttpll
add
sbb
stc
mov
fnstenv
lret
mov
fdivs
pop
add
dec
jae
cmc
mov
lds
push
push
or
dec
dec
xor
cltd
jecxz
ja
mov
pop
cld
andb
test
insb
negl
setnp
js
mov
sar
mov
lret
lahf
and
xchg
std
and
insl
sbb
xor
aas
cwtl
ret
call
and
dec
mov
push
lods
and
add
dec
sbb
and
mov
mov
lea
sub
sti
dec
jns
push
mov
push
sarb
ret
push
inc
test
cmp
imul
leave
xchg
movsb
aaa
or
jae
jl
icebp
pop
clc
iret
ds
dec
cmp
mov
test
roll
mov
mulb
mov
add
jo
fistl
icebp
stos
ljmp
test
repz
aad
inc
jns
aas
mov
pop
sub
popf
scas
mov
dec
std
lock
mov
aaa
adc
imul
jle
loope
add
cmp
jae
fistl
mov
xchg
pop
xlat
xchg
cmp
xor
out
dec
push
add
or
movsb
aas
mov
sbb
int3
sbb
fs
xchg
in
sub
lock
add
fs
jge
add
aam
insb
xor
pop
cmp
sahf
mov
or
mov
push
in
pop
xchg
jns
sub
lods
push
imul
adc
jg
cmp
data16
mov
repnz
iret
fidivrl
jbe
movsb
inc
and
jbe
xchg
bswap
test
push
xchg
pop
jge
pop
cld
pop
bound
repz
or
push
in
leave
daa
scas
pusha
cmp
pop
scas
rol
xchg
pop
icebp
push
cmpsl
lgs
pop
push
pop
sbb
adc
or
xor
cmpsb
xor
pop
pushf
mov
dec
inc
daa
ret
jo
pop
gs
cmp
hlt
fmul
aas
dec
mov
mulb
sbb
cwtl
mov
test
sub
xchg
repz
repnz
fidivrl
sbb
inc
fs
sbb
fidivs
roll
mov
push
and
lea
popa
dec
rol
les
lods
or
jg
sbb
and
xor
jne
or
mov
int
inc
cmp
xlat
sub
addr16
iret
push
sub
push
and
ffreep
icebp
ss
iret
adc
adc
aas
dec
jmp
dec
sti
stos
adc
adc
movsb
fld
jno
rclb
dec
xchg
push
pusha
mov
mov
pop
mov
inc
aad
das
pop
popa
mov
lea
fcoms
jmp
xor
fwait
mov
repnz
cmp
xor
std
stos
xchg
mov
notb
ret
fwait
cs
and
gs
sbb
inc
addl
roll
adc
jge
mov
mov
add
stc
xchg
jbe
mov
xlat
fld
sbb
lcall
xor
xchg
loopne
outsl
xchg
outsb
into
mov
scas
xchg
loope
mov
jnp
cmpsb
mov
lea
and
xor
and
jbe
pop
jo
test
lret
aad
cmp
scas
rcr
gs
repz
popa
in
fldenv
pop
mov
xor
mov
inc
mov
jo
inc
pop
lret
sbb
mov
stos
rclb
sub
aas
or
int3
inc
mov
mov
mov
adc
out
imul
aaa
and
jecxz
add
push
jb
cmp
lret
add
in
and
test
jb
int3
mov
xchg
lock
push
or
out
cwtl
push
ja
insl
push
lret
je
add
push
sarb
inc
je
jmp
xchg
jne
mov
cmp
testl
lret
movb
jnp
sub
fsts
sahf
stos
cmp
imul
loopne
jge
jne
arpl
push
xchg
cltd
aad
es
iret
mov
xchg
jecxz
std
aas
ljmp
es
mov
das
cmc
ss
cs
push
jae
rolb
jno
push
xchg
inc
mov
and
leave
jnp
or
mov
dec
fistps
sub
shlb
fsubr
iret
jb
sub
mov
cmp
and
lea
adc
inc
cltd
sahf
push
mov
adcb
sbb
push
add
pushf
xlat
jb
scas
push
jnp
insl
aad
aad
adc
mov
push
push
inc
push
xchg
adc
cmp
ss
jns
or
xorl
sub
add
jo
xor
popf
test
and
push
xor
loope
das
std
sbb
test
out
mov
pop
pop
sahf
fucom
test
fsubl
negb
sbb
pop
dec
pop
lret
xchg
scas
sar
insb
push
inc
mov
sti
lds
cmp
mov
push
test
lods
jnp
call
ds
jmp
mov
fimull
pop
jb
adc
pop
sahf
xchg
sub
insb
sbb
sub
xchg
mov
scas
add
popf
stos
add
lret
insb
pop
clc
loop
xor
adcb
lahf
mov
in
mov
aaa
leave
rorb
jmp
add
mov
dec
fisubl
adc
and
bound
rclb
sub
push
insl
cmp
ret
fwait
and
cmp
xchg
aad
sahf
lea
or
pop
dec
push
int3
cmpsl
jne
fwait
out
cmc
mov
jmp
scas
aaa
add
xchg
hlt
lahf
loopne
sub
xchg
rcrl
je
jbe
dec
xchg
mov
xchg
test
cmp
ffree
mov
xchg
sti
adc
add
shll
aas
mov
dec
add
pop
or
das
dec
xor
adc
cmp
in
aas
adc
jp
add
out
test
pop
jb
in
dec
xor
sub
jo
imul
sbb
call
pop
jp
add
or
push
cmp
jns
pop
rclb
repz
lods
popa
jno
inc
mov
es
cmp
arpl
dec
add
enter
cmp
fstp
cmp
dec
dec
ljmp
jns
pop
push
insl
adc
cmpsl
int
sti
and
xor
mov
xchg
pop
bound
movsl
mov
sbb
aas
push
xchg
dec
in
or
in
lret
mov
ret
jno
cmp
shrb
add
out
test
add
pushf
lods
jmp
pop
daa
push
sarl
add
cmpsl
ss
cld
xchg
mov
jae
dec
cmpsl
roll
xlat
pop
ljmp
sub
hlt
fimull
in
or
imulb
scas
outsl
dec
jecxz
inc
std
bound
jnp
cmp
xchg
icebp
mov
sub
sbb
out
xor
sti
dec
pop
adc
daa
adc
adc
loopne
mov
push
pop
fwait
ds
aaa
jo
adc
cmpsb
mov
lock
loop
push
pop
and
mov
sub
mov
nop
popa
mov
add
cmpsl
mov
xchg
or
pusha
js
data16
push
fistps
jmp
sbb
fsubrs
push
add
xor
xchg
sbb
leave
sahf
fisttpll
aas
fwait
data16
bound
je
iret
loop
mov
loopne
dec
push
xchg
jg
pop
xor
or
divb
xor
push
pop
sub
mov
imul
xchg
mov
roll
shr
sbb
push
add
dec
mov
push
in
cmpb
out
jmp
add
mov
lcall
xchg
inc
mov
arpl
push
andl
enter
enter
je
mov
pusha
out
lods
les
push
mov
add
xchg
pop
call
lods
movsb
mov
lea
mov
xchg
push
xlat
mov
lock
xlat
cmp
mov
cmpsb
ret
jmp
fs
lcall
pusha
out
je
xlat
jbe
mov
mov
ret
xor
pop
aad
shlb
mov
int3
sub
loopew
mov
pop
decl
mul
sbb
xor
es
push
incb
xchg
insl
or
in
dec
mov
cli
out
cmp
cmp
add
loope
out
lret
lcall
and
and
in
addr16
into
addl
or
pop
imul
loopne
pop
push
add
push
push
nop
push
in
cli
les
add
mov
xchg
mov
mov
adc
imull
test
out
or
add
fwait
mov
fstpl
add
iret
xor
pop
sbb
stos
repz
xchg
cld
cmp
adc
xchg
pop
mov
lahf
das
mov
int
xchg
jmp
cmp
push
test
pop
fwait
mov
mov
sub
imul
loope
das
test
dec
add
sub
cs
ljmp
push
cmp
push
xchg
idivl
xchg
sbb
mov
inc
imul
sub
addr16
cmp
push
add
sbb
dec
xlat
das
lock
scas
sbb
xor
icebp
push
or
fcomps
sbb
mov
mov
les
or
mov
jne
mov
mov
les
jmp
inc
mov
stc
jle
nop
or
jmp
shlb
sahf
mov
and
xchg
cmpsl
clc
ret
les
call
or
mov
cmp
sub
dec
int3
mov
ljmp
jle
jno
in
or
sub
push
rolb
aaa
das
ficomps
xor
mov
inc
sarb
shrl
clc
lods
dec
loopne
cwtl
repnz
mov
mov
push
hlt
leave
cli
xlat
push
jne
and
enter
lea
cld
and
or
inc
loopne
out
mov
in
pushf
or
sbb
sbb
orl
adcl
or
dec
pop
addr16
mov
jae
mov
xchg
out
sub
aad
movsl
int3
fwait
pop
and
xchg
cmp
xchg
mov
fldenv
xchg
lcall
add
mov
je
ret
mov
adc
xchg
inc
mov
leave
mov
jle
aas
sub
pushfw
jns
mov
jge
notb
inc
jp
sub
cmpb
jge
add
mov
xchg
stos
pop
in
inc
cli
ja
add
fadds
stos
pop
mov
pop
lahf
mov
sbb
pop
nop
xor
pop
lods
arpl
insl
insl
cmp
jnp
xor
add
sbb
fiaddl
push
jb
fstl
cwtl
mov
inc
pop
fs
push
and
push
pushf
mov
sbb
xor
repz
add
inc
mov
faddp
lea
addr16
lea
inc
rolb
push
stos
inc
sub
out
sbb
adc
fiaddl
cmc
mov
lret
shrb
movsb
jne
cmc
cmp
pop
dec
in
cmp
xor
sarl
cmp
lret
fimuls
push
loope
pusha
fwait
mov
jo
hlt
sbb
dec
ds
inc
jno
push
ja
fwait
pop
adc
or
das
hlt
pop
lahf
fs
push
ret
or
in
mov
fwait
nop
test
jae
jne
divl
xor
test
movsl
clc
pop
popa
mov
out
and
js
mov
inc
movsb
ja
or
or
clc
lret
jecxz
xchg
push
xor
mov
in
out
pop
push
iret
ss
ja
jb
cld
orb
mov
jle
and
sbbl
sbb
jbe
xlat
cmpsl
stc
cmpl
das
jo
pop
clc
sbbb
adc
popl
mov
mov
ss
mov
cmpl
xor
pop
mov
pop
loop
push
inc
ljmp
icebp
add
push
push
mov
add
push
mov
xlat
and
cmp
push
sub
inc
lods
add
lcall
sub
or
push
adc
push
sub
cmp
dec
movsl
je
lds
lea
repz
fwait
and
push
push
das
adc
xor
mov
lret
cmp
ds
lock
je
in
daa
std
fwait
mov
xchg
cmp
sbb
les
adc
out
cmp
loop
enter
clc
imull
pop
or
push
sbb
pop
fiaddl
inc
shll
dec
cmp
mov
xlat
mov
repnz
xorps
pop
push
aam
dec
jmp
jp
mov
xchg
push
imul
pop
push
sbb
shll
push
xchg
icebp
push
arpl
fbld
jmp
xchg
rcrl
jp
xchg
leave
cs
ss
stc
shll
addr16
lcall
dec
sub
lcall
outsb
repz
push
sbb
cmp
jns
hlt
fistl
call
das
mov
and
stos
lret
out
inc
or
scas
ret
pop
clc
jb
dec
mov
cmp
sub
add
mov
cmp
cmpsl
pop
xor
add
dec
mov
jae
xchg
jp
es
ficoms
pop
scas
pop
das
cwtl
push
inc
ss
sub
pop
adc
sub
insl
negb
jp
addb
ds
dec
add
loop
invd
pop
out
in
or
inc
hlt
and
movsb
push
xor
cwtl
mov
mov
sbb
fs
jo
adc
jle
in
cmpsl
mov
push
test
mov
test
repnz
xchg
iret
pop
mov
daa
dec
cmp
inc
dec
stos
into
mov
mov
mov
jbe
inc
mov
aad
sub
xor
imul
jo
into
loope
mov
int3
push
sbb
in
lea
mov
sti
in
std
jg
xor
or
push
sti
and
pop
or
scas
mulb
and
inc
and
cwtl
stc
inc
insl
mov
jne
or
push
xchg
scas
sbb
jg
mov
and
aas
addl
and
cltd
imul
jp
sarb
ds
cmp
mov
cwtl
pop
shlb
fstpt
aaa
lea
loopne
add
lea
add
jns
jns
les
push
inc
scas
int3
testb
dec
cmpl
sub
js
push
fsts
mov
and
push
and
movsl
filds
jge
xor
fistpl
clc
jo
xor
ss
scas
subb
test
lret
movsl
cmp
inc
cwtl
mov
sub
ja
mov
dec
cmc
xor
mov
jne
test
dec
cltd
inc
test
nop
push
cmpsb
dec
xlat
ss
cmp
xchg
in
mov
xchg
pop
lret
popf
cmp
loope
popa
sub
out
outsb
and
hlt
je
xchg
lret
mov
test
mov
push
sub
fldcw
mov
and
mov
dec
jge
sarb
mov
sahf
xchg
mov
add
outsl
add
jb
insl
movsl
pusha
ret
mov
std
cmpsb
insb
mov
std
cmp
aas
es
fstpt
js
imul
movsl
popf
mov
dec
jae
add
sti
pop
xchg
ljmp
icebp
sti
xchg
adc
pop
sub
xor
push
rorl
inc
adc
pop
xchg
and
push
and
gs
sub
ret
dec
shl
xor
mov
fdivrl
hlt
add
dec
and
cmp
pop
out
out
jp
lahf
push
cltd
dec
fildll
das
ljmp
into
filds
outsb
or
mov
in
sarb
adc
nop
fistps
stos
insl
add
aas
push
jno
pusha
sub
and
sub
jae
sbb
movsl
mov
cmp
adc
inc
jmp
sub
divl
cmp
mov
xlat
mov
dec
in
lods
popf
in
sub
nop
fists
repnz
int3
or
mov
jno
cmp
insb
inc
sbb
negb
rcll
mov
mov
dec
sahf
inc
xchg
cld
sbb
or
sbb
pop
lods
aas
xchg
or
daa
inc
leave
data16
repnz
pushf
dec
and
shl
push
mov
fwait
push
test
pushf
ds
pop
sub
add
inc
fsub
and
aas
pop
pop
mov
jnp
xchg
stos
enter
jns
ds
push
push
daa
cmp
mov
and
jge
call
lock
scas
pop
pop
cli
movsb
lret
jb
or
pop
fdivl
pop
or
clc
jne
cmp
jp
lock
ljmp
cmp
mov
insl
fisubrl
dec
shl
cmpsb
adc
pop
mov
and
pop
test
jmp
hlt
mov
sbb
xchg
push
pop
lahf
addr16
stc
mov
test
je
pusha
dec
pop
loope
fcompl
call
cmp
subl
faddl
fistps
cmpsl
add
repz
cmp
pop
cmp
pushf
iret
xchg
push
push
push
shll
lods
sti
jo
dec
add
jbe
in
hlt
and
adc
loope
mov
add
adc
repnz
pop
add
push
and
icebp
mov
lods
sub
mov
cmp
cs
test
jb
pop
cmp
ret
je
and
mov
xor
stos
insl
mov
imul
sti
sub
pop
loope
mov
mov
lcall
cmp
daa
sub
jno
pop
fisubs
mov
rorl
pop
xchg
movb
jae
imul
rolb
jp
cmp
sbb
cmp
daa
mov
xor
and
scas
aad
dec
stos
and
loope
xor
inc
data16
inc
lcall
jmp
and
mov
sub
dec
cli
add
jge
push
rolb
dec
add
sti
je
xlat
mov
cmp
mov
dec
fcmovb
xchg
xor
inc
cmp
xor
fsubs
lods
dec
dec
mov
mov
push
dec
es
jo
sbb
dec
imul
mov
adc
movsl
jne
pop
inc
pop
adc
test
push
test
mov
or
push
into
rcrb
int3
adc
lea
mov
mov
ss
mov
scas
cwtl
cmp
movsb
cmp
cmpsb
and
es
ds
mov
mov
mov
cltd
add
pushw
out
fisttps
fcmovnb
xor
push
jg
mov
or
jmp
xor
or
jno
and
loope
sbb
popa
ja
sub
mov
popa
pushf
mov
icebp
mov
add
xor
adc
scas
fsubs
test
push
hlt
xor
stos
or
mov
inc
mov
jns
ss
ret
inc
push
les
add
fldcw
enter
orl
push
ljmp
add
mov
jnp
fnstsw
outsl
shlb
js
mov
adc
sbb
or
adc
push
add
cwtl
popa
sbb
sahf
aam
cmp
pop
je
stos
mov
jle
jo
jle
jno
test
mov
jecxz
fistl
mov
xorw
xor
je
xor
inc
cld
jge
das
enter
sub
negb
subl
inc
fwait
mov
addr16
dec
push
jne
add
and
mov
push
jmp
hlt
imul
jno
lods
mul
adc
jo
adc
in
leave
cld
cmp
popa
fbstp
inc
cmp
and
hlt
mov
shll
lea
jnp
hlt
cld
pop
lret
fstl
mov
cmpsl
pop
inc
call
pushf
sahf
xor
gs
cwtl
or
pop
fmuls
pop
or
xor
outsl
addr16
mov
mov
jmp
xlat
push
pop
mov
imul
pushf
sbbl
aad
ret
fildll
je
out
jns
ljmp
mov
pop
inc
dec
pop
sbb
in
je
icebp
cs
and
jp
addr16
push
out
mov
popf
mov
jae
jno
dec
push
xchg
mov
inc
or
test
popa
lret
inc
add
mull
xchg
add
adc
sahf
outsl
pop
or
inc
hlt
inc
repz
sbb
cmp
xchg
outsl
sub
xchg
push
jo
or
sub
or
push
subl
scas
xchg
pop
aam
and
fistpl
pusha
jne
cmp
sbb
cmp
jmp
mov
mov
push
sub
lds
mov
out
pushf
adc
ljmp
dec
dec
push
push
jmp
cmpsl
mov
pop
into
icebp
stos
mov
push
lea
xor
cmp
jbe
gs
andl
dec
jg
lahf
hlt
mov
mov
fisttps
add
es
xchg
call
sbb
pop
fwait
or
dec
leave
cmpsl
sub
pop
mov
sbb
rorb
xor
adc
push
cmp
inc
xchg
cld
dec
cli
cltd
push
fbstp
cld
addr16
es
sbbl
stc
std
cmpsl
adc
mov
repz
inc
enter
cmpsl
mov
mov
sahf
inc
fisubrs
xchg
sahf
stc
icebp
push
into
inc
pop
push
or
jns
dec
testb
jbe
xchg
and
adc
jne
aam
movsl
xlat
add
rcrb
add
cli
or
push
leave
loopne,pt
ja
mov
sub
popa
jnp
mov
ret
rol
outsl
add
cltd
pop
in
fisubl
mov
notb
enter
pop
popf
iret
jp
mov
jns
cmp
ds
add
add
je
sub
movsl
filds
pop
adc
push
xor
sub
je
jge
mov
lods
sbb
imul
sbb
cmp
enter
add
sarb
pop
mov
mov
jae
je
fldl
int3
or
call
mov
mov
jecxz
in
sub
stc
lret
mov
pop
pop
mov
cltd
or
hlt
je
sbb
fucomip
out
into
paddsb
lods
out
aaa
sub
mov
xor
sub
cmp
stos
out
rolb
xor
xor
dec
add
pop
jmp
and
cltd
stos
adc
sbbl
test
xor
es
addr16
adc
xor
pusha
decb
mov
repz
hlt
jle
in
mov
push
sub
pop
test
cltd
xchg
pop
mov
xor
cs
cli
dec
sub
fmull
pop
mov
lds
enter
sete
dec
mov
fstpl
fidivrs
jg
ret
push
shll
into
xchg
or
push
jae
imul
and
pop
adc
call
clc
add
jnp
push
sub
shrb
add
jecxz
cwtl
fcoml
and
inc
xlat
aaa
fdivrl
ret
lahf
and
adc
sub
mov
lcall
inc
sub
pop
flds
inc
fwait
data16
arpl
sbb
ds
mov
push
dec
push
or
and
xchg
icebp
mov
cmp
mov
pop
inc
lock
orb
push
insb
into
jb
jmp
movsb
and
cmpsl
popf
jno
fwait
push
pop
stc
call
add
mov
and
pop
fsubp
dec
gs
faddl
xchg
test
sbb
adc
add
daa
push
pop
inc
jmp
leave
sub
sbb
lds
cmp
sbb
subb
push
mov
sbb
lods
mov
insb
inc
push
gs
push
sub
sub
push
test
clc
ljmp
xor
outsb
loope
sti
rclb
mov
lods
pop
ret
nop
jmp
std
add
ret
aas
xor
cwtl
pop
sbb
clc
inc
pop
std
js
jecxz
loope
sub
lds
stos
mov
ret
add
inc
popf
aam
xor
or
mov
mov
ds
and
mov
push
jb
hlt
cld
or
mov
and
mov
ds
test
add
jne
arpl
in
fwait
lds
in
lea
push
cli
cmpsl
jnp
call
js
or
ror
jne
xchg
pushf
std
pop
xchg
xor
dec
scas
out
shl
push
push
test
scas
in
push
adc
popa
shrb
push
cmp
and
add
cld
test
stos
push
test
ja
adc
repnz
mov
jae
inc
sbb
jne
push
sub
mov
fidivs
scas
cmpb
add
mov
mov
sub
dec
roll
push
arpl
pop
test
sbb
in
repnz
aas
arpl
addb
pop
les
frstor
cmpsl
xor
push
push
fldenv
imul
jl
out
adc
sub
pop
lock
loopne
dec
pop
lods
or
mov
daa
int
or
sbb
jne
cld
push
lods
adc
inc
sbb
lds
inc
add
xor
out
cmp
dec
rcll
and
cmpw
inc
mov
out
fnstcw
nop
inc
xchg
dec
push
or
test
xlat
lret
mov
mov
sarb
xor
in
cmp
subb
jle
or
hlt
daa
fisttpll
addb
fldcw
rorl
jno
lds
xchg
icebp
mov
mov
dec
add
push
int
jo
cmp
leave
sar
mov
imul
bound
pop
xchg
cmp
cwtl
dec
fsubp
jnp
dec
mov
enter
mov
leave
mov
jp
cli
arpl
xchg
ficompl
cli
loop
lods
pop
insl
incl
dec
xchg
xchg
lahf
mov
sahf
icebp
dec
je
aam
jmp
push
fcmove
pop
jae
call
jp
mov
pop
xchg
mov
dec
pop
lods
addr16
push
adcb
xchg
xor
pop
fwait
into
adc
lea
rcrb
sub
adc
fcoms
frstor
sbb
cld
repnz
out
pushf
mov
shrb
dec
aad
sbb
or
andb
nop
mov
or
dec
xorb
add
cmpsb
ljmp
mov
lods
inc
ljmp
scas
paddb
dec
mov
movsb
fisubl
sub
cmp
lock
iret
ds
aam
adc
sbb
hlt
fidivl
dec
popf
pop
scas
popf
pop
sbbb
xor
out
add
and
shlb
int
xchg
js
fiaddl
outsb
pop
test
fldt
out
inc
mov
adc
adcb
add
test
jbe
pop
fdivs
xchg
xlat
inc
mov
add
and
jno
arpl
jne
pop
sbb
out
cmp
call
fdivrl
roll
adcl
adc
jmp
clc
cmp
mov
pusha
xchg
and
lods
pop
mov
imul
sti
imul
les
or
lods
and
xlat
lcall
rorl
mov
flds
pop
inc
lock
push
adc
icebp
push
sbb
mov
stos
pop
mov
fwait
mov
insl
jle
mov
jne
push
mov
scas
aam
add
jae
aad
dec
mov
add
js
in
imul
aaa
jno
sarl
icebp
repnz
jb
fisubs
dec
xchg
pop
imul
push
xor
cmp
sbb
sub
push
jmp
jp
aam
jecxz
jle
mov
sbb
pop
add
and
call
push
std
lds
xchg
push
cwtl
cmp
shrl
out
cmp
jae
lds
jne
mov
pop
nop
rcrb
pop
sub
loope
ret
add
lods
out
add
and
sbb
sahf
ja
jo
lret
data16
sbb
mov
push
jae
pop
mov
insl
mov
sbb
jp
sbb
inc
xchg
adcb
adc
pop
inc
inc
mov
iret
outsb
pop
repz
push
pop
jg
sbb
sub
fisttpll
adc
scas
jge
clc
cmp
inc
das
andb
faddl
movq
mov
adcb
loope
mov
push
pop
cld
mov
adc
xor
aaa
cld
fidivs
shll
int
pop
mov
dec
mov
or
clc
or
popa
and
ficoms
enter
xor
out
in
andl
imul
or
inc
mov
pop
das
jne
rorl
ja
shrl
into
dec
loope
jle
mov
int
and
inc
out
mov
push
movsl
dec
fnclex
jo
pop
cmp
xlat
nop
lret
int3
xor
mov
xchg
aaa
out
es
cmp
or
fldenv
scas
and
out
jno
nop
pop
scas
cmp
pop
dec
xor
ret
pop
aas
jne
mov
pop
mov
daa
ret
leave
test
lea
pop
add
jb
int
addr16
push
xor
sub
push
outsb
xchg
mov
add
jecxz
int3
in
pushf
mull
call
mov
and
pop
xchg
sbb
repz
mov
jo
xchg
ss
mov
jns
aad
lea
cmp
enter
idivl
fldcw
mov
into
out
call
mov
xchg
or
dec
inc
or
mov
jmp
jge
mov
push
inc
xor
andb
gs
gs
inc
lock
add
pop
in
mov
adc
cli
mov
add
mov
mov
mov
cltd
aaa
lods
lahf
dec
mov
sarb
rol
pushf
aaa
test
test
loop
inc
and
repz
jo
push
push
subl
xchg
add
stc
sbb
cmp
push
cltd
push
push
push
pop
movsl
outsl
inc
adc
loop
shlb
push
jbe
mov
sbb
xchg
mov
mov
mov
add
push
insl
sub
adc
rcrb
inc
scas
sbb
jo
pop
ror
xor
or
iret
push
paddsb
mov
adc
out
aam
das
jb
mov
jge
jbe
cld
int
ja
ret
addr16
xor
mov
and
pop
scas
lret
into
xchg
or
ds
xchg
push
inc
mov
mov
pop
mov
jb
jno
test
sub
mov
les
push
add
xor
imul
ja
pop
cs
mov
dec
adc
shl
mov
mov
movsl
xchg
ja
lods
xchg
add
shrl
sub
xlat
adc
pop
stc
shlb
jbe
nop
cmp
add
and
cmp
gs
inc
insb
mov
lds
mov
mov
add
shll
sub
adc
inc
bnd
and
cmpsl
out
adc
cmc
mov
jne
fmull
add
xchg
sbbb
push
sbb
stos
jge
hlt
loop
daa
cs
dec
push
test
mov
test
dec
pop
shrl
fnstsw
inc
dec
rcll
sub
pusha
push
test
popa
loope
enter
notl
mov
lds
mov
sub
cmp
divb
adc
mov
sub
add
dec
mov
fdivrs
pop
and
xchg
xchg
or
pop
outsl
mov
aaa
stc
sub
stos
in
fld
adc
popa
out
lods
movsl
push
jge
mov
xchg
mov
dec
xor
pop
subl
out
inc
jmp
jge
inc
cmp
jecxz
add
push
bnd
scas
inc
mov
lea
and
jnp
xchg
adc
stos
push
or
ja
cmc
ret
lea
mov
fimuls
inc
cmp
xchg
cmp
push
cwtl
sbb
xchg
jmp
std
out
vmovss
push
ja
lds
xchg
cmp
or
loopne
adc
and
gs
push
test
xchg
and
adc
mulb
xor
adc
and
and
and
cwtl
sub
scas
cmp
daa
cmp
leave
xchg
dec
lods
push
jge
add
pop
out
adc
sahf
xchg
inc
enter
nop
scas
jecxz
jge
mov
mov
psrlq
shrb
dec
sbb
outsb
in
lods
cld
mov
hlt
cld
sbb
mov
fistpll
pusha
cmp
mov
icebp
mov
scas
add
mov
dec
inc
adc
cs
or
mov
mul
push
loop
push
or
jecxz
outsb
ret
mov
jno
xchg
das
jg
test
into
xchg
stos
mov
shlb
mov
shrd
push
movsl
xchg
jg
andb
dec
pop
cmp
sbb
pop
insb
sub
sti
sbbb
loope
jne
sbb
xor
jp
aam
adc
popf
sbb
xchg
insl
roll
sarl
mov
movsl
sahf
out
inc
repz
ljmp
mov
mov
movb
pop
or
out
int
dec
jo
scas
or
push
inc
jg
ret
push
push
or
mov
pop
loope
daa
add
cmp
push
push
fs
xor
or
and
jbe
enter
in
fwait
clc
jmp
or
add
cld
and
mov
clc
imul
popa
sub
sub
js
push
mov
mov
fcoms
mov
xor
and
mov
jns
nop
popa
mov
out
fisubrs
outsb
addl
sbb
push
adc
dec
rcrl
and
frstor
xchg
sub
imull
and
jecxz
inc
dec
negl
jmp
mov
jo
out
ret
cli
xchg
or
leave
sub
data16
js
icebp
add
and
call
mov
data16
in
into
cmp
pop
test
push
jle
mov
orb
pop
pop
popf
mov
jmp
sahf
xchg
aas
fisttpll
sti
xor
cmp
jns
nop
inc
fmuls
jb
fsin
faddl
cmc
sub
push
bound
push
push
adcb
pop
arpl
je
fisttpl
jno
inc
cmp
mov
mov
imul
fimull
lock
cmp
fwait
push
cmpsb
mov
push
sbb
ja
fistpll
mov
xchg
mov
xchg
imulb
cld
cmpl
icebp
and
sbb
pop
cmp
int
shrb
add
fsubr
jb
mov
int
sbb
cmc
xor
cmp
xlat
lcall
ja
sbb
cmp
add
mov
repnz
inc
cmp
jle
loop
fs
iret
push
imul
cmp
out
lea
push
imul
or
inc
dec
ja
jle
or
inc
out
mov
mov
cwtl
jp
dec
aam
in
push
outsb
mov
aaa
jle
or
aas
pushf
arpl
mov
cmp
jp
add
data16
out
inc
mov
notl
fsubrl
aas
call
mov
inc
jp
out
jno
fldcw
call
std
inc
lock
inc
arpl
insb
imul
repnz
mov
aaa
cli
ret
mov
into
shl
adcl
test
push
xchg
or
mov
adc
xchg
xchg
dec
cmp
outsb
aad
mov
pop
push
xchg
xchg
sub
jmp
cmp
mov
mov
pushf
xchg
int
mov
cmp
push
cmpsl
xor
lahf
and
mov
mov
add
jno
inc
cmp
jle
lock
sub
dec
jge
push
daa
xor
arpl
insb
subl
rorl
enter
in
clc
mov
or
mov
out
or
mov
inc
adc
sub
pop
push
dec
test
sub
repz
rcl
repz
inc
mov
fwait
rolb
mov
lahf
and
adc
pop
push
fs
shll
add
xlat
andl
bound
outsl
jmp
loope
mov
sbb
stc
bound
dec
cmp
push
jbe
mov
iret
imul
mov
call
mov
addr16
mov
add
movsl
daa
int
push
cli
shrb
xchg
loopne
ffreep
sub
ror
lock
orl
rorb
mov
clc
dec
inc
and
push
jle
ret
and
popf
popa
inc
loopne
enter
pop
into
pop
mov
ja
push
ja
pop
pop
insl
sti
push
sbb
stos
out
stos
roll
icebp
rclb
adc
gs
testb
push
inc
bound
sub
addr16
fstl
scas
bound
repz
cmpsl
xor
jae
xor
fsts
lret
pop
rcll
fldenv
mov
lea
je
stc
jbe
mov
add
pop
mov
rcr
push
dec
inc
repnz
dec
fcmovb
loopne
jae
and
mov
sub
mov
mov
xchg
int
ret
aam
mov
add
jecxz
cmp
addr16
gs
insb
mov
mov
imul
sbbb
bound
data16
in
lahf
xor
scas
jmp
dec
aas
dec
pop
dec
mov
lds
dec
mov
fildll
mov
scas
sahf
shrb
and
stos
push
out
and
mov
lea
mov
cmp
sbb
push
aas
shll
sarb
xchg
and
or
je
cmp
mov
stc
inc
aam
adc
call
and
stc
dec
mov
mov
pop
lock
mov
push
jo
jge
or
cmp
loope
pop
cmpsb
xor
push
nop
add
mov
mov
dec
xor
les
test
xor
int
enter
cmp
and
insl
xchg
push
out
mov
dec
inc
adc
mov
shl
insl
dec
adc
pop
outsl
xor
ljmp
movsl
adc
sub
iret
cmp
xor
out
jg
mov
repz
mulb
jo
out
test
cwtl
push
das
jbe
push
js
push
jle
out
and
pop
jmp
scas
sub
int3
pushf
mov
pop
cmp
inc
es
mov
test
shll
jne
or
adc
cmp
xor
cli
rcl
mov
lea
das
or
out
sub
outsl
fwait
pop
bound
mov
leave
out
pop
ds
std
jmp
testb
sbb
test
adc
xor
push
scas
dec
add
mov
shll
test
push
outsl
dec
dec
dec
int
adc
add
push
mov
or
jo
sbb
push
mov
cmp
imul
dec
mov
mov
loop
add
loop
enter
push
push
enter
sub
mov
addb
out
cmpsl
into
shlb
into
mov
ret
lds
jle
jns
lods
mov
push
xchg
xor
into
jnp
in
fucomi
sti
xchg
cmp
cmp
mov
sbb
sarl
insl
gs
sub
cmovne
shll
xor
sbb
int
cmpsl
imul
cmp
push
sarl
popa
mov
cmc
sbb
mov
fidivrs
xchg
out
lea
loopne
adc
lods
or
js
cltd
xchg
repz
jle
rcll
sub
aam
sub
dec
ror
or
call
mull
popf
sub
outsl
daa
add
push
push
out
fiadds
outsb
insb
xor
jge
popf
enter
xchg
lcall
dec
or
xor
addr16
sbb
dec
out
imul
cld
imul
push
mov
fistpl
jecxz
cmp
aas
or
xor
das
push
shlb
in
lahf
pop
stos
cmp
sub
pop
in
adc
pusha
pop
pop
outsb
fwait
movsl
rcll
mov
enter
jl
in
movsl
stos
inc
xor
add
loop
iret
xchg
add
shlb
xor
fstpt
sub
or
pop
cmp
iret
outsb
fbstp
cmp
cs
jl
add
scas
lds
adc
jge
push
xor
cmc
cmp
mov
dec
push
outsl
inc
lcall
insl
sbb
sub
or
outsl
adc
jp
xchg
jb
xor
inc
sbb
fcoml
lret
into
dec
pop
mov
loope
test
pushf
xor
and
std
jmp
call
sub
es
enter
leave
rcr
jae
ret
aas
sub
sub
cmp
add
mov
daa
mov
cltd
dec
rcrl
es
push
add
jo
aad
cmpsb
test
ret
adcl
cmp
lds
or
cmp
repz
cmpsl
or
cmp
inc
int
inc
mov
sbb
mov
popa
fsub
xorb
pop
bound
xchg
xchg
inc
xchg
je
lea
adc
and
adc
push
mov
test
or
stc
std
in
and
rolb
dec
inc
jb
test
push
mov
jp
loope
jnp
aam
loopne
out
mov
and
cwtl
sahf
mov
mov
jle
xchg
cld
popf
push
mov
dec
xor
loope
ss
jl
and
inc
inc
cwtl
mov
and
pusha
adc
repz
int3
dec
ss
nop
into
bound
xlat
fisubs
mov
and
insl
mov
push
pop
pop
jb
fstpl
jo
mov
lret
pop
aaa
mov
popa
sbb
mov
fwait
pop
out
jle
outsb
and
xor
in
ret
shrb
out
js
sti
mov
test
push
jno
dec
pop
sbb
lahf
jns
push
inc
pop
xchg
std
adc
lods
sbb
jne
shrb
add
push
add
stos
das
lcall
es
adc
xchg
sbb
pop
out
dec
dec
roll
xchg
test
loopne
add
mov
movsb
lods
mov
sub
cmp
add
inc
xor
mov
pop
jo
js
sbb
mov
orl
lret
ljmp
xor
pop
mov
popf
or
into
rolb
movsb
push
pop
jns
roll
jge
fcomps
gs
lods
inc
jg
inc
in
sbb
push
idiv
cmpsb
mov
outsb
lret
imul
std
es
inc
aam
repnz
in
lods
push
jnp
clc
xchg
es
sub
dec
in
lock
idivl
mov
mov
fsubrl
ljmp
insb
loopne
jbe
push
pop
pop
movsl
leave
xchg
loop
xlat
jae
mov
mulb
mov
aad
adc
ss
fdiv
test
ja
test
mov
adc
and
and
cmp
jno
mov
popa
mov
ficomps
mov
ror
dec
mov
std
movsb
push
adc
xchg
scas
shll
xor
scas
daa
es
ljmp
int3
jmp
insb
jecxz
mov
fldenv
outsl
mov
xchg
sub
fwait
mov
fisubrs
and
subl
pushf
and
fisttpll
scas
jp
fidivs
popa
sbb
xor
test
pop
dec
sub
sub
js
lods
or
ds
pop
stos
repnz
sbb
ret
cmc
mov
xor
pop
popf
seta
aam
xchg
xor
cmp
out
xchg
enter
push
mov
repz
iret
out
inc
fs
sbb
adc
dec
int3
jb
push
push
fmulp
adc
dec
call
ljmp
mov
xchg
pusha
ds
fdivr
mov
movsl
adcl
push
cmp
icebp
mov
ror
out
jp
pop
stc
xlat
inc
mov
test
xor
inc
mov
iret
xchg
xor
pop
mov
jb
sbb
mov
dec
add
xchg
cmpsb
loop
cmpsl
sub
leave
sbb
insl
scas
add
popf
mov
enter
push
mov
jno
out
push
cmp
push
test
adc
and
insb
push
dec
pop
hlt
movsb
sub
dec
jl
daa
cmp
add
scas
sahf
outsl
add
fwait
xchg
push
adc
or
scas
in
mov
adc
inc
sti
pusha
mov
lret
test
lods
aaa
aam
aaa
lcall
popf
jmp
xorl
fadds
repz
lea
int3
xor
cmc
adc
dec
pop
inc
ds
les
lock
dec
and
inc
add
jae
pusha
dec
orb
ss
dec
inc
cmp
das
dec
fs
addr16
pop
mov
push
call
addr16
jb
enter
push
jns
mov
dec
lcall
adc
jge
adc
insb
mov
fdivrl
sub
int
push
mov
lods
push
push
push
notl
aaa
mov
push
cmp
and
hlt
xor
mov
fldl
sbb
test
dec
pop
sub
add
jns
mov
jg
inc
dec
sub
int3
fadd
push
test
mov
sub
stc
test
mov
pop
fcomi
adc
mov
sbb
movsl
mov
jne
lds
lods
sti
cmp
pop
mov
aas
aad
adc
hlt
test
cmp
iret
and
fldt
in
lahf
rcrb
xchg
mov
jp
leave
xor
icebp
add
aaa
lret
cmp
pop
std
lret
xor
pop
xor
andb
fwait
into
xchg
pop
nop
out
fisttpl
xchg
out
fcomip
fnstsw
cmp
dec
enter
mov
lock
inc
bound
and
nop
fdivs
jl
int
xor
push
int3
scas
or
clc
jo
out
das
sarb
xchg
fs
aaa
out
push
add
mov
fwait
jae
mov
cmpsl
outsb
fildl
cmc
lods
call
testb
fwait
por
adc
mov
test
gs
jno
aas
outsl
push
pushf
adc
sbb
jp
xor
lret
and
adc
cmp
jae
jmp
int3
cmp
mov
jns
sbb
lods
push
cwtl
outsb
adc
xchg
push
push
jmp
add
mov
mov
push
insl
fsubs
and
lods
mov
les
xor
or
jae
scas
pop
pushf
dec
pop
jge
jo
xchg
pop
mov
or
inc
das
stos
in
and
lret
inc
rcll
xchg
sbb
jae
push
int3
out
push
sub
cli
les
add
add
sahf
imul
les
sbb
rcll
rol
pop
mov
adc
pop
jle
or
lcall
loopne
std
or
xor
out
jl
lret
or
aad
mov
jns
subb
cli
xchg
out
addb
and
aad
dec
mov
mov
xor
mov
xor
stos
insl
popf
aad
repz
mov
and
mov
jnp
cmpsl
out
or
mov
push
inc
and
mov
imul
in
add
cld
insb
ret
ljmp
lds
adc
cmc
sbb
aad
push
adc
into
pop
dec
add
mov
push
incb
outsl
mov
adc
xchg
push
mov
mov
leave
adc
mov
shll
fcmovbe
push
jo
stc
jb
mov
inc
and
mov
pop
jecxz
adc
cs
nop
repnz
inc
jge
ljmp
xchg
xchg
int
mov
push
cmp
vshufps
pop
jp
sub
hlt
sub
pop
inc
mov
xchg
jne
pop
pop
inc
mov
int
leave
repz
dec
cmpb
xchg
cmp
scas
xchg
je
out
cmp
setg
push
lcall
mov
pop
sbb
movsl
mov
pop
std
jne
leave
push
xor
add
les
pop
mov
cmpsb
xchg
cmp
out
push
cs
jb
mov
jbe
jo
fsubrl
mov
cmpsb
movsl
inc
mov
lods
mov
je
dec
mov
ret
loop
push
in
pop
lahf
mov
aam
pop
sub
dec
pop
scas
ss
dec
or
call
fidivl
add
sahf
sbb
jnp
shl
sbb
jg
mov
xchg
stc
in
out
jb
adc
add
aad
fidivl
jae
popa
mov
jmp
or
and
setne
arpl
test
inc
aam
sbb
xchg
mov
das
andb
stos
mov
add
mov
pop
cwtl
out
sbbb
jg
xor
pop
push
mov
rorb
push
pusha
loopne
insb
arpl
pop
mov
mov
sbb
sbb
add
push
and
xor
push
aad
cli
xor
enter
test
pushf
mov
jmp
fcompl
push
push
int3
ja
cmpsl
mov
sub
test
nop
fsubrl
inc
shl
lods
mov
loope
mov
shl
ss
leave
les
pop
add
fildl
add
xor
xor
jecxz
fldt
icebp
std
in
pusha
stos
lret
cs
add
outsb
lods
insb
dec
jne
int3
sub
sbb
mov
sbb
imul
or
jno
jno
lea
sbb
mov
mov
test
push
push
fwait
add
dec
push
out
jecxz
xchg
mov
cltd
ficoms
xor
in
insb
add
mov
popf
sub
out
cmp
out
push
into
xchg
jnp
daa
arpl
xchg
test
xchg
out
fsubs
orl
pop
daa
sbb
lahf
out
mov
fstpl
in
sbb
dec
mov
xor
imul
or
mov
push
pop
lret
push
rorl
xchg
pop
jp
inc
xor
or
icebp
xchg
dec
mov
and
pop
push
push
sub
bound
and
push
lret
subb
loopne
out
xchg
jae
cli
cmp
sub
mov
mov
push
mov
gs
dec
rcll
cmc
xchg
xlat
or
mov
adc
push
or
pop
das
scas
sub
sti
das
push
lds
push
xlat
sarl
jo
dec
lahf
movsb
push
aad
sbb
lea
push
and
dec
repnz
xor
mov
loop
inc
push
movl
lods
cmp
xlat
push
bound
jno
call
xor
int
cmp
cmc
pop
jns
out
jmp
adc
jl
jp
xchg
lea
arpl
mov
subl
pop
aam
mov
lea
lahf
aam
push
inc
outsl
mov
mov
cmpsb
out
rcrl
push
adc
dec
js
xchg
add
dec
popa
or
lock
enter
jge
push
push
mov
gs
rclb
insl
rol
pop
insl
ret
xchg
add
sub
mov
aaa
sbb
movsl
cmp
inc
fdivl
test
gs
mov
fsub
sbb
data16
cli
jbe
scas
and
popf
cwtl
add
mov
cmc
imul
popf
jp
add
fsubrl
fidivrs
adc
cmp
lcall
mov
pop
rorl
xchg
sub
in
in
xor
mov
xchg
and
out
push
fsqrt
cmpsb
mov
mov
rolb
adc
mov
dec
mov
jns
jg
pop
nop
xchg
cwtl
out
mov
cwtl
sub
in
add
jmp
pop
cmp
aas
loopne
out
rol
push
push
jnp
js
sub
lret
xchg
in
gs
inc
in
sbb
stc
fcmovb
pop
pop
xchg
mov
cmp
push
adc
scas
pop
pop
inc
aad
ret
jecxz
xchg
es
andl
dec
mov
gs
xchg
or
pop
lods
jb
mov
sti
xchg
pushf
out
mov
pop
loope
rorl
aam
fimuls
mov
and
sub
sbb
cmc
popa
or
mov
lret
xorl
xor
in
adc
int3
or
mov
shlb
stc
popa
push
sahf
andl
or
cmp
xor
cli
arpl
inc
sub
pushf
hlt
int
pop
xchg
fldl
sub
movsb
ds
sarl
cmpsb
sub
xchg
and
xchg
mov
insb
aad
mov
gs
mov
pop
aas
cmpsb
mov
jmp
sbb
jg
cmpsl
mov
cltd
adcb
jmp
arpl
mov
movsl
ss
int3
cmp
push
lcall
push
fnstenv
mov
pop
and
xchg
pop
in
bound
inc
xchg
bound
jl
add
pop
imul
pop
mov
pop
aaa
int
cmp
aaa
adc
mov
aad
or
repnz
mov
cmc
and
inc
add
mov
sbb
cli
cmp
xlat
popf
hlt
adc
repnz
lea
inc
ss
or
shlb
gs
subb
push
int3
xchg
nop
jg
jno
dec
pop
outsb
sbb
xchg
adc
mov
dec
mov
addb
scas
push
scas
pop
or
fistps
jns
aas
jp
insb
int3
mov
andb
outsl
lods
rcrb
sbb
out
pop
cmp
in
cmpsb
xor
movsl
jp
mov
ljmp
or
into
leave
call
shll
aam
mov
fists
push
sbb
cmpsb
push
mov
jno
pop
fldt
pop
xchg
mov
and
test
add
cld
sti
or
inc
in
imul
sbb
ret
imull
imul
push
and
mov
lret
int3
pusha
negb
sub
pop
or
imul
jge
loop
stos
movsl
ret
pop
les
push
ja
loop
mov
jmp
dec
fistps
pop
in
dec
xor
js
scas
mov
pop
jle
mov
cmp
incl
repnz
imul
sbb
push
xor
mov
fistpll
lock
push
or
sbb
movsl
daa
dec
dec
add
dec
pop
push
mov
ret
les
fidivs
mov
cs
jo
and
and
xchg
bound
pop
fsubrs
testl
addb
je
jne
enter
push
shr
fcompl
cmpsl
maxsd
pop
dec
inc
mov
out
andl
xor
enter
push
jp
shrb
lods
add
daa
lds
icebp
push
test
decb
xchg
cmc
test
inc
dec
mov
jl
dec
icebp
nop
ret
add
and
push
jb
cmp
push
add
fadd
jmp
outsb
mov
mov
add
pop
fbld
inc
mov
lahf
lret
dec
mov
pop
clc
mov
cmpsl
pop
cli
icebp
int3
test
fs
pop
mov
outsl
jp
mov
jo
inc
jns
or
mov
mov
popa
mov
sbb
and
cmp
push
rcrb
add
ja
pushf
pop
test
sub
add
mov
js
push
cmp
rorb
and
mov
pop
shrb
mov
and
xchg
sbb
sbb
imul
aaa
mov
inc
std
stos
mov
sbb
hlt
data16
jecxz
repnz
mov
fstps
repz
mov
loope
repnz
sti
scas
out
push
icebp
dec
arpl
sbb
and
add
testl
fists
fs
arpl
insl
in
stc
xor
inc
add
out
xchg
or
mov
dec
pop
adc
adc
push
sub
cmp
xchg
insb
xchg
imull
xchg
push
and
ja
dec
dec
add
repnz
cmp
push
adc
xcrypt-ctr
cmpsl
cwtl
out
push
rcrb
jo
outsl
mov
sbb
add
cli
ss
ret
addr16
push
sub
dec
sub
les
rcr
xor
out
xor
jle
je
sub
push
cmp
dec
movsb
inc
das
and
sub
lea
shll
push
cs
push
shrl
lret
push
in
in
addr16
mov
pop
xor
sub
xchg
lret
adcl
call
jmp
fstpl
sbb
sbb
outsl
cmp
xchg
mov
push
mov
divl
lods
jge
sub
fcmovnu
add
xchg
mov
out
xchg
imul
mov
shlb
mov
dec
dec
cs
or
sbb
dec
in
jge
add
push
sbb
call
bound
or
xorb
hlt
pop
int3
es
adc
in
adc
xchg
jbe
mov
or
xchg
adcl
pop
fdivl
call
sbb
pusha
in
adc
xchg
cwtl
mov
clc
in
cmp
cmp
aam
rorb
push
stos
sbb
adc
enter
mov
aad
mov
in
lret
sti
fsub
cmp
arpl
aam
sub
aas
sub
jb
push
xchg
outsb
fdivs
fs
inc
or
jg
xchg
gs
rorl
cli
ret
xor
addr16
mov
movsl
ss
cmpsl
mov
xchg
jbe
movsb
mov
aaa
or
sub
cwtl
jmp
mov
mov
inc
push
cmc
in
scas
ds
call
pusha
mov
mov
jmp
mov
scas
std
push
cmpsl
pop
bound
jecxz
sub
xchg
cwtl
outsb
pop
std
mov
and
inc
fiadds
push
sbb
aaa
mov
and
imul
push
push
adc
cld
fstpl
rorl
or
dec
cmpxchg
and
pop
lahf
and
fcmovnu
das
xchg
pushf
push
out
in
faddl
imul
fcoms
sbb
nop
not
sahf
and
pusha
ljmp
or
add
adc
adc
inc
cmpsl
mov
out
mov
xchg
jbe
adc
stos
lahf
jo
scas
pop
lds
mov
cli
push
out
sarl
testl
out
imul
lret
push
cwtl
dec
dec
inc
mov
test
leave
lods
adc
in
xchg
imul
sbb
jae
sub
fisttps
dec
xor
inc
stos
jo
push
cmpsl
xchg
js
mov
ficoms
cmp
ret
xchg
cltd
mov
in
sarl
inc
cmp
push
pushf
push
mov
mov
xor
stc
jmp
mov
sbb
add
inc
add
mov
cmp
jl
mov
clc
mov
aaa
dec
outsl
ja
fsts
cmpsl
movsb
das
rep
and
addb
push
out
sub
dec
mov
mov
xor
cmp
push
outsb
sub
dec
shlb
push
bts
xchg
es
out
in
aad
and
iret
pop
icebp
mov
cli
sbb
cmpsb
insb
lret
adc
cmpsl
repnz
jnp
jp
clc
enter
push
lods
push
push
fld
push
shrl
iret
rcl
jnp
inc
jl
data16
shlb
clc
dec
pop
jg
adc
mov
cli
dec
addb
xlat
in
jecxz
dec
mov
jns
negb
inc
pushf
mov
pop
mov
imull
xchg
out
int3
pusha
fwait
pushw
shlb
cmp
in
jge
mov
push
xchg
push
jnp
pop
add
push
jb
icebp
jno
aas
adc
shlb
sbb
sahf
lock
add
cmp
ja
fcomip
mov
push
adc
inc
aad
roll
cmovns
in
and
or
mov
jb
jns
and
push
cmp
hlt
fisttpll
cli
in
xchg
mov
xchg
push
ficoml
mov
mov
xchg
mov
push
xchg
movl
cmp
imul
sahf
sbb
inc
xor
insl
out
jnp
ss
int
or
test
xor
adc
dec
mov
push
out
rclb
rcrb
in
adcb
fucomp
push
repz
aaa
xchg
mov
mov
ret
int
aas
addr16
ja
adc
push
cld
add
ds
paddq
ss
in
shll
inc
xor
push
sub
lods
cmp
test
adc
push
inc
cmp
mov
cmp
sbb
xchg
xchg
add
loop
decl
mov
push
fisubrs
add
xor
aam
roll
cmp
jp
mov
mov
ficompl
cmp
inc
loop
push
jl
testb
add
lock
xchg
sbb
incl
jne
and
sub
pop
daa
push
ds
not
pop
adc
sahf
dec
sbb
xlat
jge
xchg
das
cld
addr16
mov
repz
repz
cld
cld
sarb
aaa
inc
data16
or
jmp
add
in
jae
rcll
ja
push
add
push
mov
add
xor
mov
rolb
fidivrl
adc
mov
out
stos
xchg
aad
cmc
push
loope
in
and
push
push
scas
pop
fdivs
cs
mov
js
dec
add
and
pushf
dec
movb
lods
orb
sub
add
int
cmp
pop
js
dec
ss
adc
popf
into
mov
cmpsb
pop
dec
push
push
lahf
xchg
out
fbld
adc
jecxz
mov
loope
or
dec
sbb
fbstp
pusha
insl
in
js
aaa
and
xchg
jle
inc
mov
jbe
ljmp
and
dec
sbb
repnz
in
out
aas
iret
rcrb
inc
push
lcall
rcll
fs
and
xor
xor
push
lahf
jnp
mov
dec
mov
dec
sub
orb
outsl
in
push
fsubrl
push
sarb
movsb
xor
bound
push
mov
pop
movsb
lea
aam
pop
les
lahf
xchg
sbb
inc
mov
lods
jne
mov
mov
inc
xor
push
jg
or
lret
jl
fwait
shrb
pop
cltd
dec
daa
push
push
test
pop
out
subl
pop
push
aaa
and
fnstenv
dec
push
adc
pop
sub
dec
loopne
mov
mov
sbb
out
push
sbb
scas
int
in
mov
push
inc
push
jmp
ret
mov
adc
fwait
fwait
xchg
testb
pop
sub
imul
lahf
test
bndldx
lds
jne
push
mov
in
fstl
mov
enter
pop
mov
imul
jle
loop
movsb
cli
dec
lcall
xchg
pop
inc
pop
sbb
inc
or
push
in
push
xlat
sub
mov
test
mov
or
aam
dec
inc
lods
das
scas
cmp
pop
daa
loope
ja
or
lds
insl
in
clc
mov
arpl
adc
xchg
pop
mov
add
cmp
sub
pop
sti
mov
dec
loop
movsl
push
in
push
out
mulb
or
pushf
mov
mov
push
je
daa
adc
out
cmpsb
push
out
stos
fbstp
es
pop
scas
ret
jne
aas
pop
pmullw
sarb
xchg
sub
stos
fcmovu
mov
mov
pop
gs
mov
pop
mov
pushf
cmp
lods
mov
cmpsl
in
inc
in
sub
sbb
sbb
sbb
out
shll
inc
xor
xchg
out
mov
lods
out
addr16
repnz
into
sub
mov
dec
lock
cli
sbbb
inc
cmp
hlt
xchg
mov
add
and
mov
das
sub
cmp
mov
sub
mov
mov
xchg
outsb
addr16
fwait
sarl
pop
clc
xchg
movsb
ror
cmp
xor
divl
pushf
cmp
stos
sbb
ja
pop
add
mov
addr16
xchg
bnd
inc
es
or
mov
in
inc
sub
dec
mov
sti
mov
pop
popf
add
ljmp
das
out
jae
push
repnz
sbb
divl
cmp
cmp
jmp
sbb
dec
movsl
or
popf
out
jge
jle
sub
popa
les
pop
push
push
inc
out
push
pop
push
mov
xchg
shlb
std
outsl
inc
sub
hlt
xor
sti
jnp
pushf
out
cmp
mov
cwtl
mov
mov
in
loopne
inc
faddl
test
divb
js
mov
sarl
xchg
cli
fcom
repz
xchg
iret
jl
dec
cmpl
sbb
out
push
or
mov
mov
xchg
mov
dec
scas
push
sbb
fwait
jl
adcl
dec
xor
mov
in
pop
sti
xchg
dec
dec
push
popl
sahf
xchg
aaa
pop
mov
or
xchg
fnstsw
cmp
je
mov
or
gs
aaa
std
mov
js
test
lods
aad
cmp
inc
mov
pop
inc
mov
ljmp
ljmp
test
mov
sub
xchg
adc
pop
mov
mov
inc
popf
scas
rclb
clc
jge
mov
pushf
mov
lahf
scas
jle
push
mov
leave
notl
cmp
fwait
jg
dec
adc
sub
push
mov
lds
lds
int
and
popa
lods
outsb
clc
outsl
push
fnstcw
aad
pop
sbb
ja
mov
ret
xchg
fcoml
in
dec
mov
push
mov
or
stos
inc
hlt
cs
mov
dec
pop
fs
push
insl
rcr
inc
sub
cmp
mov
mov
test
and
mov
push
mov
repnz
in
out
repz
iret
roll
out
je
jge
adc
ljmp
pop
dec
dec
xlat
loope
aas
adc
int3
movsl
roll
xchg
bound
je
out
andb
sub
sbb
jg
dec
stos
push
testl
imul
mov
xchg
int3
jnp
aas
movsb
loopne
pop
fimuls
ret
cld
subb
sbb
lods
lea
out
dec
mov
dec
or
popa
mov
lahf
or
mov
jp
mov
pop
mov
xchg
scas
movsl
test
add
fmulp
push
outsl
cld
pusha
cmp
imul
div
test
outsl
ja
dec
leave
or
xor
clc
ljmp
cmp
jno
iret
cltd
dec
cmp
in
testl
sarb
dec
inc
lahf
push
dec
sti
cwtl
jo
repnz
mov
and
mov
mov
fstpt
stc
mov
mov
inc
js
add
bound
or
mov
push
push
gs
mov
int
icebp
xor
mov
ret
cli
fstps
icebp
scas
dec
jmp
and
inc
loope
leave
jns
dec
inc
aad
in
in
xchg
ljmp
adc
push
jmp
cmp
pusha
clc
bound
rcrl
out
mov
ds
jbe
jb
jns
cmp
enter
insb
ret
movsl
adc
push
jno
ja
outsl
leave
pop
add
jae
inc
or
pop
cli
pusha
aam
jnp
test
xor
xchg
scas
mov
call
or
in
shll
or
or
mov
xchg
cmp
aam
fs
psubsw
loop
gs
add
adc
out
add
dec
and
insb
pop
jl
inc
mov
scas
add
cmpsb
mov
aaa
jo
lret
pop
fdivrl
jo
xchg
xor
pop
fwait
lock
pushf
leave
sbb
xchg
imul
ret
orl
lahf
lds
ljmp
add
lea
cli
lock
ljmp
jp
ja
push
out
into
xor
push
je
mov
lret
sbb
mov
jae
mov
mov
push
xorl
inc
pop
ds
sti
out
sti
fsqrt
push
aad
es
or
and
mov
cli
loop
rcr
clc
bound
bound
ja
and
lret
add
loop
jmp
mov
mov
sub
pop
mov
adc
int3
aad
sbb
inc
mov
insl
or
pop
and
xor
int
dec
sub
add
es
pop
loopne
xchg
jg
scas
push
leave
cli
push
repz
mov
dec
push
mov
xor
jno
add
clc
pop
push
pop
push
xchg
test
sbb
inc
jmp
sbb
inc
arpl
pop
dec
mov
or
push
push
clc
aam
mov
hlt
lds
adc
dec
test
add
push
dec
mov
lea
push
in
in
hlt
xorb
ds
lods
mov
orl
jb
nop
cmp
mov
inc
jbe
xor
aam
notb
enter
in
outsl
mov
loope
dec
mov
jge
pusha
xchg
push
iret
sub
jbe
mov
xor
or
push
adc
cli
pop
repz
mov
and
jbe
cmp
test
test
push
jmp
mov
mov
jg
jno
mov
fildll
stos
and
or
inc
dec
cmc
int
outsl
jp
les
movsb
mov
clc
popa
cmp
push
mov
xchg
enter
xchg
xchg
outsl
fidivrl
das
xor
scas
shr
jp
jne
dec
pushl
inc
in
pop
and
dec
or
aam
fcomps
movnti
inc
shrl
pop
int
cmpl
jp
stc
jne
push
mov
and
enter
add
and
mov
add
cs
pop
dec
roll
mov
mov
adc
in
jp
test
flds
je
xchg
fidivl
mov
imul
or
not
jmp
inc
mov
push
test
add
push
push
push
pop
hlt
inc
insb
sbb
sub
rcr
cmp
sub
mov
repnz
fidivs
ja
add
jle
mov
xor
sbb
cli
jno
outsb
aam
in
fistpll
add
xchg
sub
add
sbb
xchg
xchg
ret
sbb
arpl
cld
fneni(8087
int3
sbb
je
aam
xor
iret
bound
sub
mov
lcall
call
xchg
ret
imul
jns
mov
lea
out
inc
dec
sub
pusha
push
or
mov
and
pop
stos
mov
out
mov
mov
jle
adc
cmc
imul
adcl
push
cltd
iret
push
fiadds
stc
mov
xchg
xorl
adc
cmpsb
cmp
pop
aad
call
ret
jle
inc
inc
sbb
sti
add
push
pusha
dec
dec
lods
sbb
mov
sbb
rcll
pop
outsl
push
jmp
pop
cmpsl
fisubl
loop
cmp
sbb
shl
pop
imul
daa
jge
aad
mov
xchg
shll
dec
sbbl
xchg
xchg
icebp
cmp
xor
loopne
adc
std
xlat
pop
xor
dec
sbb
mov
mov
mov
jecxz
mov
pop
mov
xchg
insb
out
hlt
rorl
or
jle
jae
ljmp
mov
ds
dec
sbb
out
sahf
pop
fbstp
lcall
mov
mov
jmp
pop
sub
fsubp
hlt
mov
xchg
xchg
inc
ret
in
rclb
dec
add
icebp
sub
cmp
adc
or
xchg
stos
sti
rcpps
nop
mov
out
and
icebp
xchg
mov
insl
arpl
xor
adc
inc
flds
mov
shr
dec
mov
sti
pushl
sbb
push
outsb
dec
mov
ret
fs
cmpsb
add
xor
orb
xor
sub
divl
jg
or
clc
dec
adc
cs
in
dec
hlt
in
lahf
push
and
push
loopne
cmp
xchg
dec
fstpl
add
imul
mov
and
mov
lcall
mov
cmp
or
add
xchg
pusha
popf
mov
aad
in
repnz
jbe
aad
mov
rorl
and
jle
adcl
lds
add
test
mov
adc
mov
repnz
jb
jmp
add
push
mov
jmp
mov
sub
push
mov
push
cmp
lret
flds
dec
xor
outsb
mov
pop
push
and
sbb
aaa
xlat
outsb
dec
sbb
sbb
add
movsl
xor
insl
rcrb
xchg
inc
mov
ret
jl
push
jbe
lock
shlb
cmp
or
mov
addl
shll
pop
add
into
push
mov
or
add
data16
and
fucom
dec
mov
stos
add
movsb
fld1
js
sub
test
push
or
mov
fcmovnbe
xor
xor
cmpsl
mov
rolb
sbb
nop
adc
sti
fisubs
mov
fnstsw
ds
lea
xor
pop
shl
cwtl
into
pop
xchg
jp
pop
add
lret
xor
int
bound
jb
pop
xchg
inc
cmp
and
xchg
fiaddl
es
cmp
pop
clc
ret
das
mov
loop
jl
inc
loopne
push
sub
fidivrs
ss
mov
out
push
cmpsb
stc
cmpsb
les
insl
fbld
pop
arpl
pop
ret
adc
xor
test
pop
into
test
jle
adc
das
mov
xchg
mov
jo
mov
xor
xchg
pop
es
inc
and
sahf
pop
pusha
lods
in
cmc
lret
test
mov
jle
cmp
push
dec
ljmp
loope
or
xchg
lea
bound
push
mov
mov
sub
sub
pmaxsw
nop
sbb
mov
pop
inc
cld
sub
or
mov
or
xor
aas
mov
in
repz
sub
scas
leave
mov
sar
push
mov
fcomi
lret
pop
lahf
mov
fucomp
mov
repnz
cs
dec
iret
popf
mov
inc
push
adc
cs
adc
cmp
sbb
jae
xor
dec
or
insl
fstpt
mov
sbb
into
pop
xchg
orl
push
fsubrl
mov
pop
adc
jl
aas
aaa
shll
mov
and
lcall
ds
xor
jo
mov
sub
add
rcrb
ret
or
in
lret
lds
xor
shl
xchg
in
push
fadds
xorl
shlb
sub
mov
xchg
mov
mov
ljmp
dec
lahf
jl
sub
lds
int
pop
ficomps
adc
mov
in
pop
test
cmp
jl
lcall
subb
lahf
call
mov
mov
sahf
call
sbb
dec
lcall
lds
in
cmc
or
ja
out
pop
adcl
pop
stos
repz
jg
pop
lret
and
inc
adc
mov
movsb
addr16
mov
inc
pusha
mov
xchg
mov
xor
xor
jo
fsubrl
lods
stos
mov
in
aam
call
push
movsb
call
scas
cwtl
aad
rorb
sarl
xor
mov
sub
sbb
pop
jo
or
insb
or
jecxz
stos
pop
xchg
decb
fisttps
pusha
jge
enter
movsb
push
dec
insb
cltd
dec
xor
adc
mov
mov
push
pop
out
stos
dec
jns
les
loopne
inc
mov
jg
add
xlat
dec
adc
jg
adc
pop
bnd
ret
sbb
lea
fstps
outsl
adc
out
adc
ret
dec
clc
cmc
hlt
test
imul
add
movsl
in
mov
dec
inc
lods
sub
xor
hlt
arpl
rcl
js
rcll
adc
test
insb
push
push
fildll
jae
pop
xchg
stos
cmpsb
jno
sub
jnp
mov
jg
xor
stos
arpl
adc
ja
outsb
push
inc
fstl
sub
and
sarb
sbb
xchg
mov
mov
insl
lret
sbb
insl
bound
push
pop
loop
jmp
push
cwtl
mov
cmp
repz
pop
mov
out
jo
movsb
push
cmp
inc
and
shrb
outsl
mov
push
dec
mov
fdivs
out
xchg
mov
mov
insb
mov
addr16
mov
idivb
push
xor
test
out
mov
outsb
imul
fstl
in
in
inc
mov
sub
push
les
jecxz
setne
adc
in
lds
test
xlat
stos
sahf
mov
and
sbb
pop
fdivrs
loop
push
lret
sahf
mov
cmc
sarl
mov
sbb
daa
sub
call
lahf
mov
push
repz
int
rol
paddusb
ljmp
xchg
js
fsubs
xor
cmp
mov
mov
xor
sbb
mov
inc
adc
mov
adc
nop
pushl
nop
lock
dec
data16
mov
sub
dec
and
xchg
jns
dec
xor
push
fiaddl
aas
insb
daa
dec
inc
or
fwait
cli
nop
cmp
jl
xchg
xchg
jbe
mov
dec
push
jecxz
arpl
ret
mov
iret
and
jnp
push
mov
enter
push
data16
mov
mov
idiv
loope
jp
out
mov
orl
sbb
mov
pop
and
fnstcw
mov
cmp
adc
jp
in
mov
lds
lcall
mov
adc
std
mov
xchg
push
and
cld
adc
pop
inc
pop
int3
mov
xor
mov
movsl
dec
ja
addr16
jl
adc
jno
out
sbb
bound
lods
bound
cmp
inc
cmp
cmpl
cwtl
push
jbe
dec
xchg
add
test
loope
xor
jg
push
aas
xchg
rclb
xchg
sbb
sarl
and
jo
shr
daa
lea
adc
dec
cmp
mov
jmp
cmp
ret
mov
dec
shlb
adc
mov
jle
xchg
call
dec
insl
push
mov
aas
roll
push
clc
shlb
pop
cmpsl
mov
jl
hlt
out
push
dec
xchg
inc
in
push
mov
loope
xor
bound
insb
stos
es
mov
and
inc
xchg
xlat
aad
cltd
cmpsb
int
mov
loop
arpl
push
mov
cmp
stos
js
sbb
fildl
stos
xchg
lret
leave
cli
into
adc
cmpsb
and
sub
pushf
inc
lcall
movsb
lea
bound
xor
mov
pushf
mov
leave
cmp
mov
pop
test
into
je
cmpsl
pop
iret
cmc
sbb
inc
ret
push
adc
inc
scas
or
jnp
test
pusha
cmpsl
sub
cmp
sbb
in
push
inc
mov
or
sbb
add
in
test
xor
pop
sub
pop
mov
stos
push
sti
inc
cmp
fiaddl
xor
ret
rorl
cmpsb
add
pusha
addl
push
sub
jg
fisttpll
loop
in
dec
stos
clc
ja
add
fadd
daa
int3
dec
add
cmp
mov
sbb
cltd
repz
cmp
es
pop
movsb
fsubl
and
dec
cmp
lods
xor
loope,pn
lods
idivb
daa
push
pop
and
or
jne
ds
lea
mov
popa
js
push
clc
adc
pop
lcall
mov
dec
scas
je
jne
arpl
push
dec
mov
int3
inc
mull
adc
mov
outsb
jmp
mov
mov
shl
cs
sub
test
pop
sbb
repnz
ja
mov
fwait
adc
lret
xchg
int
call
into
sbb
aaa
add
in
push
and
jnp
aad
xchg
mov
scas
xor
lods
mov
testl
jns
pop
dec
cli
push
xchg
pop
lods
push
mov
movsl
sbb
lcall
icebp
pcmpeqd
adc
cmp
pop
sub
push
and
push
mov
push
jno
push
sbb
movsl
ret
rclb
mov
nop
lret
mov
icebp
into
pop
inc
lcall
cltd
xchg
pop
loope
shlb
subl
mov
lcall
ds
pop
inc
lcall
pop
fs
fwait
test
std
fiadds
movsb
or
push
xor
jge
mov
sub
loope
mov
push
movsb
pop
int
arpl
lock
mov
pop
jle
fdivl
cltd
fistl
addr16
rol
jne
data16
fdivrp
pop
je
pop
fs
inc
inc
repnz
jge
sarb
add
lock
lret
fisubs
mov
xor
jl
mov
jg
sbb
sbb
in
into
sub
pop
inc
movsl
mov
ljmp
das
sub
cmova
or
adc
movsb
sub
stos
lcall
mov
out
or
pop
sub
cli
mov
pop
in
repz
test
rsqrtps
dec
imul
in
and
sbb
shrb
js
dec
cmp
in
xchg
jnp
mov
rcr
jle
lcall
jo
ss
fnsave
out
mov
add
stc
mov
dec
pop
test
push
jl
into
mov
lret
out
std
cmp
mov
inc
mov
aam
push
leave
leave
sbb
ds
inc
sub
fidivrl
mov
mov
mov
mov
sub
mov
mov
iret
fcmovb
in
sub
adc
cmp
loope
sub
jns
dec
push
nop
lods
and
or
jb
sahf
lods
push
iret
xchg
xor
mov
mov
test
sub
rcrl
out
pop
lods
sar
adc
sbb
outsb
jne
and
loopne
shrl
das
and
mov
adc
mov
sub
hlt
inc
aaa
push
mov
dec
int3
mov
xor
inc
cmp
jno
lret
dec
jl
xchg
add
add
ds
test
push
fisttpll
push
repnz
mov
inc
jl
imul
popa
aad
mov
call
xchg
ds
adc
cmpb
into
lods
push
sub
push
mov
mov
lock
shl
xchg
mov
or
jecxz
xor
xchg
das
cmpsl
push
fsubrp
add
enter
sbb
push
lds
loopne
pop
and
testb
or
into
scas
cmp
rcll
inc
in
jecxz
mov
mov
das
push
push
push
mov
push
test
push
into
ljmp
cli
sub
rorb
jl
dec
stos
adc
out
out
jnp
mov
clc
cmp
or
test
cwtl
xor
lea
add
pop
xchg
andl
je
lahf
fsubrl
popa
cmp
add
cmp
or
or
sahf
jecxz
in
ja
rcrl
loop
jno
ret
cltd
test
pop
dec
loop
mov
shll
test
je
xchg
enter
adc
daa
pop
out
es
enter
jmp
fisubs
adc
and
xorl
aad
mov
mov
add
push
xor
movsb
and
mov
xorb
mov
adc
add
sub
scas
pop
aaa
dec
test
cld
ja
or
cmp
jnp
sti
jecxz
xchg
ret
add
sub
mov
mov
stos
clc
or
jmp
icebp
sti
pusha
cwtl
aam
das
cmp
jnp
outsl
jbe
adc
sub
and
jecxz
xchg
jno
dec
push
orl
js
mov
mov
push
and
sti
clc
lcall
iret
cmp
xchg
push
xchg
shr
psubusb
and
jp
inc
fldcw
sub
out
ja
xchg
add
xchg
pop
pop
cltd
xchg
push
or
jecxz
lret
movsb
ds
mov
pop
add
xchg
adc
jl
jl
int3
inc
mov
sub
jo
mov
rclb
adc
pop
mov
xor
lods
dec
ljmp
xchg
dec
mov
xor
mov
mov
into
and
dec
dec
xor
in
push
movsl
jle
pushf
in
dec
pop
test
popa
std
push
in
jl,pn
outsb
fisubl
pop
xchg
push
mov
aaa
out
add
push
sbb
xchg
xor
in
cmp
xlat
idivl
cmp
jle
test
sub
cmp
icebp
call
mov
pop
and
push
sbb
loop
in
add
out
jl
push
mov
mov
inc
int
test
add
mov
push
lods
aas
push
fnstcw
cmpsl
add
sahf
mov
mov
pop
ljmp
mov
ljmp
xor
mov
lahf
mov
push
aam
dec
pushf
in
imul
in
cmp
jne
push
ret
cmc
popf
sbb
fwait
cmp
sub
pop
push
notb
lock
jg
xchg
sbb
adc
call
push
push
enter
mov
movsl
and
mov
dec
and
adc
iret
mov
cmp
add
dec
jmp
xchg
addr16
and
push
in
lods
jg
inc
cld
loop
or
push
gs
lret
int3
imulb
cs
sbb
sarl
das
inc
das
adc
cmpl
and
cmp
jl
sbb
mov
and
mov
out
adc
mov
movsl
popf
xchg
jmp
xor
mov
mov
and
test
jl
fsubl
mov
in
pop
cld
and
rcr
xor
inc
into
dec
xor
popf
in
inc
push
aad
mov
jo
push
les
cmpsl
mov
and
mov
push
jp
clc
lds
stos
je
cmp
ds
adc
cmp
mov
sub
daa
dec
xchg
push
push
lods
mov
mov
sbb
mov
test
insb
pop
ss
arpl
pop
xorl
sub
loopne
sbb
repz
sub
inc
jg
sbb
push
xor
xlat
lea
lret
rcrb
es
fsubl
mov
pmaxub
iret
lea
pop
daa
sub
adc
inc
shld
xchg
js
les
bound
cmp
jle
push
ss
sbb
int3
push
rcrb
dec
lock
js
adc
xorps
add
loope
xor
adc
sub
incl
into
in
scas
or
outsb
addr16
jb
mov
push
push
sbb
ret
jo
mov
xlat
lods
xlat
lret
dec
shl
jns
lock
sub
xchg
sahf
mulb
out
sbb
lock
inc
dec
or
sbb
fwait
setb
imulb
or
popf
mov
xchg
jmp
pop
jns
inc
adc
adc
sbb
js
aam
or
add
dec
mov
shlb
daa
das
xchg
cmp
jg
cmp
decb
inc
and
cmp
jne
and
shlb
sub
mov
jecxz
int3
push
lods
nop
dec
repz
lret
pop
jno
test
sbb
mov
mov
xchg
xchg
xchg
flds
xor
mov
sbb
out
mov
mov
mov
addr16
sbb
fidivs
sbb
scas
das
xchg
testb
mov
loop
mov
addr16
and
loop
add
mov
mov
imul
xor
sbb
xchg
cli
insl
xchg
push
rolb
jno
sub
shlb
mov
ficomps
and
test
lcall
fldcw
jno
xchg
sub
loopne
dec
mov
mov
out
icebp
cmpsb
fcoms
cmp
jg
xchg
xchg
sahf
fcoms
xchg
jo
inc
sub
insl
pushf
pop
jb
and
xchg
lds
or
add
add
mov
and
mov
mov
push
ficompl
jmp
aaa
xchg
mov
rcl
add
out
sub
adc
push
sarl
mov
jg
sub
xor
sbb
mov
jp
xor
sahf
xchg
and
stos
negl
or
jb
push
jne
scas
icebp
sbb
sbb
xchg
hlt
jne
xchg
or
imul
dec
das
dec
jmp
push
aaa
fcoml
test
or
and
rcll
sub
outsl
lcall
gs
lcall
inc
mov
xlat
imul
int
xchg
sbb
ret
add
in
je
fcmovbe
mov
lods
adc
leave
loopne
push
mov
test
sub
and
inc
lea
das
popf
cltd
lret
mov
lahf
mov
adc
sub
sub
lds
adc
shll
dec
cwtl
not
ja
jge
test
or
fistpl
sbb
pop
adc
mov
xchg
js
sbb
xchg
or
sub
mov
test
xchg
stos
add
inc
cmp
insb
cli
or
or
movsl
mov
jl
sbb
movsl
clc
cld
int
int3
mov
dec
or
pop
test
xchg
dec
test
fldenv
dec
sub
sbb
jbe
orl
pop
add
setnp
stc
jp
imul
ret
loope
jecxz
push
or
bound
ret
mov
cmc
cmpsl
outsb
or
stos
das
dec
pop
and
sbb
pop
ljmp
inc
iret
fcomp
fldt
xor
mov
ret
dec
repz
xchg
outsb
inc
adc
stc
mov
inc
mov
push
mov
xorl
mov
inc
rorb
xor
xchg
es
jmp
test
movsb
pop
das
cmp
or
mov
sbb
pop
cmp
and
pushl
cmpl
xor
enter
xchg
pop
sbb
shrb
shlb
dec
sar
test
sbb
mov
cmp
sbb
adc
repz
popa
mov
mov
push
adc
cld
shll
jns
push
stc
adc
or
sahf
stos
test
xchg
es
pop
xor
dec
popf
push
push
xchg
xor
mov
push
mov
fs
pop
fs
cwtl
mov
cwtl
out
loope
rcl
cmp
roll
into
pushf
ds
std
in
dec
jl
mov
in
sbb
push
jl
pop
sti
rolb
int
xor
idivb
pop
xchg
dec
in
insb
insb
test
or
cmc
cmp
xchg
cli
dec
cld
das
push
test
mov
icebp
test
pop
sbb
push
dec
loopne
les
mov
sub
pop
mov
pusha
lds
rcl
divb
jae
sbb
dec
adc
ret
ret
or
xor
pop
xchg
and
cmp
mov
js
rcll
imul
push
cmp
test
outsb
or
enter
add
lods
hlt
push
pop
jg
jecxz
into
fidivrs
xchg
inc
pushf
pop
adc
push
leave
adc
mov
lcall
pop
or
mov
ljmp
dec
push
dec
lahf
xor
rcr
add
pop
lcall
decb
and
testb
lock
mov
or
sarb
jecxz
outsl
sbb
push
divb
cmp
mov
sub
cmp
sbb
dec
mov
jnp
jne
data16
mov
imul
bnd
dec
jae
xchg
xor
aam
add
movsb
mov
jge
les
add
std
loop
push
sbb
inc
js
fsub
dec
movntq
push
fldl
sbb
scas
or
and
popa
mov
fstpl
loope
shlb
adc
push
add
pushf
lret
sbb
xor
or
adc
leave
dec
movsl
mov
cwtl
or
setnp
adc
push
je
xor
mov
and
xor
jl
sti
pop
xchg
cmp
xor
xchg
mov
pop
orl
and
and
out
xorl
out
fnstenv
hlt
movsl
stos
add
test
je
outsb
adc
push
out
dec
adc
pop
in
dec
and
aad
sti
push
cmp
mov
sub
pop
into
or
inc
and
lret
push
and
push
sbb
mov
stc
inc
fists
cmp
sub
inc
sbb
mov
pop
arpl
sub
fiaddl
lds
adc
jp
adc
popf
ljmp
xchg
in
insb
xchg
jbe
push
stos
loopne
addr16
imul
xchg
rcrl
dec
inc
push
ror
push
fs
xchg
insl
std
dec
push
jne
outsb
add
inc
aaa
inc
es
scas
adc
xchg
insb
adc
push
jnp
xor
mov
add
arpl
daa
sub
add
testl
mov
mov
sti
lcall
adc
cli
cltd
sbbb
adc
pop
xor
into
dec
cmc
prefetch
xchg
movsl
in
xchg
push
into
mov
pushl
insl
or
xchg
dec
mov
jle
sub
sub
andl
outsb
lcall
xor
mov
adc
cmc
mov
pop
cmp
sbbl
add
addr16
shrl
push
test
xor
adc
xchg
sub
lods
pop
fucomi
pop
jnp
adc
push
div
cltd
idivl
inc
xchg
ror
pop
and
or
push
loop
rcrl
jnp
adc
loop
fdivs
dec
xorb
addb
daa
in
mov
int3
stc
cltd
maskmovq
idivl
lcall
add
ret
das
sub
xchg
js
sbb
shl
sub
test
adc
or
dec
pushf
and
popa
cmc
cmp
and
es
add
lock
mov
push
insl
aaa
sub
inc
xorl
pop
push
out
or
fsubrl
insb
add
out
mov
out
or
decl
pop
adc
jo
cmpsl
cmp
push
pop
dec
and
mov
or
mov
lea
add
or
lahf
lahf
lods
insl
cld
btr
and
xchg
or
jae
mov
icebp
xor
or
inc
push
fs
and
push
scas
xchg
inc
mov
arpl
notb
or
xchg
jb
loopne
mov
cmpsb
nop
aad
push
lods
or
inc
call
lods
dec
iret
rol
pop
lods
movsb
ljmp
rcrl
jno
xchg
lods
popa
into
mov
mov
sbb
push
nop
stc
inc
aam
fs
inc
cmp
add
lds
lea
xor
mov
lods
mov
stos
mov
jnp
dec
pop
inc
jmp
iret
pop
push
push
pop
sub
fwait
icebp
mov
inc
xor
arpl
mov
push
lds
add
ljmp
sub
js
inc
jmp
sub
jae
mov
sahf
add
pushf
test
outsl
mov
ror
sbb
add
js
jmp
ret
ja
mov
outsb
out
mov
cs
out
clc
inc
int
mov
movsb
out
push
scas
mov
and
sti
icebp
or
gs
mov
inc
pop
xor
test
ja
push
mov
in
sbb
bound
clc
mov
add
in
fisubl
test
out
pop
fnstenv
sbb
and
fs
mov
ret
mov
jbe
mov
push
push
or
gs
fisubrs
xchg
mov
sub
outsb
nop
es
loop
into
into
push
imul
arpl
test
jp
ja
xchg
cmp
xor
cs
movsl
and
lret
fisubrs
xor
lcall
test
sub
xor
lahf
push
mov
jae
xchg
stos
cmc
mov
iret
sub
mov
outsl
jae
lret
jle
adc
adc
pop
int
cmp
arpl
jo
push
jle
or
jo
daa
adc
add
xchg
push
mov
push
pop
shlb
push
ds
jg
in
mov
sti
lock
pop
fcoml
sti
or
shlb
push
inc
jecxz
mov
cmp
xor
or
and
fsubrs
mov
fldenv
fs
sbb
adc
in
clc
dec
dec
dec
add
inc
jno
xor
fnsave
fdivrl
lret
add
popa
jp
outsl
rcll
sub
cmc
andps
adc
push
sub
push
or
nop
jl
dec
aam
mov
cmc
pop
enter
mov
test
xor
rol
fucomi
push
repnz
fwait
xor
mov
adc
cmp
in
cli
jp
xor
pop
clc
mov
xchg
jae
aaa
mov
cmp
dec
xchg
and
imul
dec
cmp
clc
out
mov
jbe
pop
leave
sbb
lcall
ds
cmpb
add
cmp
xor
data16
ljmp
and
jo
das
mov
adc
hlt
cs
cmp
adc
insl
xor
aaa
scas
xchg
aam
fldl
sub
xor
ret
jb
icebp
jne
xor
mov
dec
jb
inc
mov
mov
out
outsb
mov
movsl
mov
mov
cmpsl
pop
in
pop
clc
dec
pop
test
out
in
out
mov
dec
pop
fstpt
fcmovu
inc
mov
ja
lret
or
xor
jg
inc
mov
or
mov
cmpsl
gs
dec
mov
outsb
jnp
sub
aad
in
mov
fimull
cs
mov
pushf
fs
adc
pop
fisttps
in
test
inc
or
mov
movsl
enter
pop
xor
lret
out
mov
xor
bound
fbstp
push
mov
orb
ja
adc
in
xor
push
jge
pop
sub
incb
ret
mov
out
xchg
bnd
scas
mov
shrb
arpl
pop
and
je
push
xchg
mov
inc
add
in
inc
mov
sub
mov
pop
adc
test
jo
ss
xchg
pop
pushf
lret
mov
push
jmp
mov
sub
xchg
jns
cmp
rclb
lret
leave
pop
push
punpcklbw
fs
inc
inc
lahf
ficoms
mov
sub
js
xchg
adc
jmp
add
xadd
fcom
das
jns
dec
cmpsl
pop
js
dec
jnp
or
mov
push
call
dec
push
pop
insl
cli
testb
pop
inc
imul
ss
inc
push
xchg
push
js
enter
jl
sbb
into
aaa
sbb
imul
and
mov
cmp
pop
push
mov
shlw
inc
push
jmp
cmc
jle
xlat
xchg
stos
or
enter
jl
sbb
inc
xor
xor
or
lods
js
data16
inc
mov
mov
adc
shll
orps
fcmovne
out
lds
into
stc
mov
fs
dec
push
cltd
xor
jmp
mov
cmpsb
dec
adc
scas
insb
aaa
test
mov
xchg
push
inc
pop
sbb
xor
rcrb
ficomps
adc
adc
fs
xor
in
cmp
mov
shrl
add
nop
add
and
add
or
fmull
mov
cld
jge
frstor
orl
cmp
idivb
and
out
in
pop
push
jp
popa
sub
xchg
xor
outsl
xor
fs
bound
and
lretw
jmp
test
popa
mov
fsts
out
das
add
in
sbb
jbe
addl
dec
dec
ret
enter
movsb
or
je
jmp
mov
xor
iret
sub
and
jge
mov
inc
data16
fsubrl
pop
scas
add
inc
jmp
dec
pop
sbb
hlt
pusha
js
fucomi
jge
sbb
mov
aam
adc
adc
fmuls
lds
nop
lcall
xor
rcl
scas
mov
mov
push
push
mov
ljmp
ret
cmp
ja
cmpps
sbb
frstor
pop
adcl
inc
mov
mov
dec
call
gs
sbb
dec
iret
inc
jo
test
test
inc
bound
mov
add
pop
notb
test
cvttps2pi
jle
incb
or
mov
jmp
pop
adc
test
out
cmc
hlt
mov
dec
adc
cmpsb
jle
push
insb
cmp
cmp
pop
out
cmp
fs
and
xchg
push
stc
mov
aam
push
inc
mov
mov
std
and
scas
lock
cmp
jp
pop
mov
mov
add
int3
xchg
adc
jo
dec
pop
arpl
iret
inc
or
lods
gs
fimull
mov
mov
imul
sarb
stc
rcll
insb
xchg
test
mov
das
jle
and
jnp
mov
nop
jecxz
inc
movsb
push
sub
rcr
inc
and
leave
mov
lea
fisttps
mov
jno
sub
lcall
lahf
lods
imul
xchg
xor
or
outsb
test
push
ljmp
pop
shr
cmc
push
cmp
or
xchg
test
mov
sbb
mov
mov
xchg
in
mov
fnsave
popf
pop
hlt
xchg
cmpsl
jle
roll
xor
out
sub
xchg
out
cli
stc
andb
iret
jmp
inc
rolb
sub
jbe
dec
in
push
push
movsb
aaa
mov
push
jnp
or
and
xlat
mov
add
mov
addb
aam
fstl
bound
jle
jl
push
cmc
xor
repz
daa
pop
imul
movsl
les
xchg
fldpi
add
dec
pusha
xchg
lock
icebp
addr16
adc
jecxz
mov
rorb
dec
test
ficoms
sub
xor
push
outsl
sub
popf
adc
clc
mov
arpl
xor
push
arpl
movsl
mov
xchg
repz
lcall
xchg
sub
and
xor
pop
lds
xchg
inc
xchg
scas
jmp
xchg
popa
dec
cwtl
mov
or
fldl
iret
bound
in
or
pushf
in
adc
bnd
mov
pop
cmp
pusha
sbb
add
adc
or
hlt
cs
mov
ljmp
push
mov
pop
bnd
sub
mov
in
dec
push
in
iret
xchg
popa
in
pop
fs
sbb
fistpl
addr16
xlat
push
scas
adc
out
adc
arpl
adc
dec
aad
and
jge
adc
push
aam
cli
sub
and
jnp
in
js
inc
in
test
pusha
and
jecxz
cltd
shl
daa
movsb
clc
imul
mov
add
cs
mov
dec
ja
fsubl
jo
pop
sbb
pop
call
cmp
mov
je
pop
cld
fnstsw
xchg
hlt
leave
mov
into
test
sub
sahf
movsb
jmp
xor
stos
movsb
int
sti
call
nop
in
adc
dec
inc
dec
fcoml
into
leave
adc
scas
push
pop
or
mov
mov
insl
pop
push
jnp
in
out
std
jns
sbb
push
sub
shrl
jle
insb
stos
sub
inc
pop
push
add
jmp
push
test
arpl
or
cmpsb
lcall
iret
and
cmp
push
test
insl
pop
dec
orb
fcompl
clc
dec
pushf
mov
loop
cmp
divl
das
insb
sti
cld
push
ss
pop
in
sahf
mov
jmp
out
mov
movsl
shl
movsb
pop
jbe
test
push
dec
and
sbb
mov
arpl
push
or
adcl
sti
mov
or
inc
jnp
push
pop
movsl
outsl
sub
sub
lret
mov
sub
jbe
cmp
mov
shlb
rorl
sbb
xchg
cli
and
clc
mov
mov
sti
and
shll
push
imul
negb
std
es
sub
sbb
add
pop
ret
push
xlat
add
mov
ljmp
cmp
gs
xchg
cltd
sbb
and
ret
mov
jmp
cmp
cmp
inc
out
sub
out
mov
insb
outsb
testl
pop
in
je
imul
lods
xor
ss
ja
out
cmc
xor
cmpsb
mov
mov
add
xor
jp
push
pop
push
push
sbb
insl
js
les
out
push
sub
mov
int
push
andb
xor
testb
sub
jo
dec
add
jge
movsl
dec
fisttpll
inc
mov
outsl
push
shlb
pushf
daa
cmp
jmp
popf
sub
mov
imull
jge
loope
sahf
sahf
lret
notb
das
stc
sbb
notb
stos
cmove
call
js
sahf
inc
dec
ss
dec
push
mov
sbb
out
icebp
and
push
or
mov
mov
lret
add
xchg
pop
mov
inc
jnp
dec
xorb
fnstenv
mov
xor
rcll
fs
pusha
dec
jg
hlt
sub
mov
daa
or
ficompl
sarl
push
mov
xchg
cmpsl
mov
push
outsl
xchg
in
hlt
mov
rorb
sbb
cltd
mov
mov
daa
fcompl
call
inc
imul
jge
call
push
shll
push
pop
adc
or
loope
in
or
xrelease
and
subb
xchg
adc
ficompl
push
scas
cmc
loope
mov
push
push
cmp
fldenv
pop
cmp
outsl
inc
subb
or
pop
cwtl
mov
add
cwtl
sub
pop
test
mov
clc
pushf
cli
cltd
dec
rcrb
fdiv
xchg
aad
jmp
mov
out
jns
inc
int3
mov
and
inc
cltd
test
cmp
fisubrs
mov
int
js
es
pop
add
and
leave
pop
and
and
mov
jnp
add
out
clc
and
mov
pop
lea
push
in
jp
out
jmp
sbb
cmp
subl
jae
in
mov
push
sbb
into
lahf
sub
mov
mov
lea
out
cltd
pop
and
in
scas
mov
rcrl
inc
push
dec
xchg
inc
inc
xorb
push
pushf
sub
sbb
mov
pushl
cmp
push
xchg
fldpi
mov
insl
loop
push
and
cmpsl
lret
add
in
scas
xchg
pop
xchg
test
test
dec
stc
and
and
sbb
outsb
outsb
and
jecxz
aas
mov
lods
test
cmp
push
mov
push
ficompl
repnz
loopne
ret
push
adc
int
lods
andb
mov
and
sbb
lea
jnp
push
mov
ja
dec
jle
sti
aad
inc
cmp
cltd
addr16
fdivrl
pop
imul
xlat
pop
cmc
loope
dec
jge
jge
scas
rorb
cmpsb
add
icebp
data16
mov
xor
and
es
jns
mov
lea
incl
into
xor
push
mov
sub
call
xchg
iret
test
inc
in
inc
out
xor
push
or
inc
and
scas
pop
js
in
stos
sahf
pusha
inc
or
sbb
mov
xchg
mov
push
xor
in
sub
add
ret
mov
sub
add
cmp
lock
test
adc
in
sbb
inc
lret
cli
sub
mov
sub
lcall
repz
sbb
adc
imul
out
gs
cmp
fistpll
xchg
pop
jnp
push
cld
movsl
and
fisubrs
shll
sar
xor
pushf
idivl
jno
out
das
add
mov
sbb
sbb
mov
outsl
adc
dec
aad
jns
add
inc
iret
sub
adcb
in
dec
push
mov
fwait
gs
pop
mov
fsubs
mov
jmp
jecxz
xor
ss
adc
or
cmpsb
sub
fiaddl
mov
lods
ds
xor
adc
push
cmp
dec
stc
xor
add
mov
jns
fdivr
pop
adc
imul
lods
and
ss
adc
push
int
push
cmp
or
lahf
xchg
pop
add
jmp
stos
adcl
pop
xor
rcrb
xchg
xor
xchg
lret
jae
cltd
call
insb
xchg
jne
jno
mov
scas
sbb
loop
pusha
ret
jnp
mov
jmp
sbb
or
mov
push
fs
mov
cmp
enter
insb
leave
push
fistpll
push
push
pop
sbb
push
cld
fiadds
scas
mov
outsl
andl
dec
pop
mov
addr16
or
outsl
adc
rorl
lds
xor
xor
mov
lea
out
ret
loop
jae
mov
xor
jae
dec
leave
pop
rcrb
fwait
xchg
leave
loop
pop
sti
or
push
jg
jge
cmpsb
adc
dec
insl
fldt
xchg
call
adc
adc
pushf
and
xchg
repnz
int3
inc
dec
inc
lret
and
push
imul
sub
mov
cmc
test
sub
dec
popa
lahf
popf
mov
adc
sbb
xchg
mov
or
adc
psllw
inc
cltd
pusha
jns
xchg
xlat
cmp
sbb
dec
jecxz
sub
push
xor
gs
sbb
loop
shl
dec
out
vmptrld
fsts
stc
ret
push
imul
int3
xchg
sbb
xchg
and
ljmp
add
sbb
aad
cmp
in
xor
mov
notb
adc
pop
shlb
and
adc
pushl
jl
sti
jo
mov
mov
mov
in
cld
aam
fbstp
test
xor
push
cltd
jge
data16
pop
jg
mov
stos
add
dec
lret
mov
add
outsb
insb
mov
addr16
xor
loopne
add
les
gs
aad
pop
mov
adcl
jle
rcll
mov
inc
xor
push
pop
test
xchg
jbe
test
out
sub
and
jmp
mov
fs
js
add
sub
or
mov
sbb
xorl
jmp
andb
repnz
dec
dec
cmc
repz
int
pop
dec
pop
push
inc
orb
mov
sub
jg
cmpb
push
ljmp
sbb
pop
and
xchg
pop
mov
adc
jmp
jg
fldt
push
mov
cld
mov
cmp
out
cmp
sahf
jle,pn
mov
push
lea
pop
lea
lods
cltd
jbe
mov
jno
pop
pop
jb
jnp
ss
mov
inc
scas
push
mov
jmp
out
lahf
dec
mov
pop
cli
sar
fistpl
dec
dec
cmc
fisttpll
loope
cmp
and
iret
mov
dec
negb
testb
ret
arpl
out
inc
inc
lahf
out
xor
in
mov
sbb
mov
lcall
xchg
or
sub
adc
and
sbb
or
inc
lcall
adc
xchg
lods
jb
cmp
sub
dec
pop
cwtl
mov
jnp
fs
popf
xlat
repz
pop
jo
sub
xor
cmpsb
mov
jnp
jmp
and
loop
dec
sub
nop
xor
mov
lret
cmp
pop
fdivl
mov
sbb
inc
jae
stos
jne
push
icebp
mov
mov
mov
sti
sbb
loopne
daa
fcoml
out
pop
mov
out
pop
fadds
cmpsb
mov
jno
arpl
mov
cmp
sub
in
mov
sub
fists
rcl
push
fidivs
sub
or
fnstcw
loopne
pushf
test
mov
orl
outsl
push
push
pop
ja
ja
xorb
test
inc
mov
loopne
shrl
cld
push
fs
jg
mov
iret
test
mov
mov
hlt
pop
sbb
jle
adc
out
xor
push
and
dec
dec
mov
enter
or
daa
push
lret
pop
sbb
insb
mov
aad
xchg
das
mov
ljmp
fnclex
shll
dec
jmp
das
pop
push
or
push
fwait
jle
mov
sbb
cmpsb
mov
sbb
movsl
pop
sbb
subl
aad
inc
dec
xchg
aad
daa
loopne
aam
sub
add
iret
jno
cltd
cmp
xor
orl
inc
lret
cwtl
inc
push
movl
push
mov
outsb
enter
call
je
cmpsb
jp
out
mov
cmpsb
dec
push
xchg
imul
and
sub
inc
or
push
ja
dec
sbb
stos
fisubrs
push
push
mov
es
faddl
fcmovbe
lret
lahf
lret
aam
lahf
imul
cli
and
sbb
add
jmp
pop
sub
mov
mov
cltd
mov
aaa
mov
stc
aas
cmp
pushf
repnz
call
inc
jg
pop
je
fdiv
rol
mov
and
and
dec
mov
fiaddl
sub
pop
scas
jmp
pop
pop
or
in
xchg
sbb
les
jne
mov
add
add
jle
dec
jns
jecxz
cmp
mov
into
iret
pusha
add
shll
fdivr
dec
iret
mov
jbe
push
jb
aad
xchg
dec
pop
insl
dec
mov
lcall
leave
xchg
idivb
mov
test
les
add
cmpsl
push
pop
mov
js
lds
rcrl
jae
stos
jmp
ret
and
mov
mov
inc
arpl
call
data16
out
leave
js
sbb
imul
fldenv
xor
das
cwtl
stc
inc
push
pop
movsb
loope
dec
adc
popf
test
and
popa
test
je
and
lock
loopne
adc
xchg
negl
cmpsb
shll
roll
pop
outsl
jne
sub
jmp
jbe
jecxz
dec
gs
rclb
sub
lods
and
lea
mov
pop
dec
ja
call
out
mov
scas
lahf
out
add
lods
mov
loop
iret
scas
push
xchg
adc
adc
or
mov
mov
cmpsl
test
cmp
insl
cmpb
or
call
repnz
loope
inc
fucom
or
sub
movb
mov
add
and
clc
mov
outsl
pop
mov
shll
mov
pop
pop
mov
pop
fstl
mov
daa
fdiv
negl
mov
xchg
iret
jge
and
repz
adc
sub
jo,pn
adc
or
inc
inc
lea
lret
xor
lret
add
mov
out
and
inc
adc
hlt
notb
orb
or
mov
cld
jp
shll
aas
jp
mov
and
decl
xchg
jle
jge
rcrb
mov
call
mov
mov
fwait
add
adc
lods
ds
ds
jbe
push
int
ret
mov
push
push
idivb
push
mov
xor
sti
xor
fucomip
gs
imull
repz
add
sbbl
cmpsl
imul
xlat
arpl
sbb
lea
stos
mov
jae
adc
xorb
inc
pop
arpl
and
pop
std
jo
push
call
shlb
jae
and
subl
pop
repz
stc
lahf
daa
cmpsb
push
mov
push
ja
cmpsl
cmp
lahf
xorb
pusha
ds
mov
mov
inc
jecxz
std
and
std
ret
jne
shr
xorl
inc
xchg
pop
mov
scas
imul
push
xchg
stc
lahf
inc
inc
aad
cmp
inc
cld
mov
das
call
xor
stos
lcall
dec
fcoml
mov
lods
cwtl
fwait
outsb
adc
pop
jmp
ljmp
rorb
jmp
push
push
imul
mov
pop
leave
cmp
dec
ljmp
test
add
xor
adc
adc
leave
mov
adc
mov
js
rcl
xlat
movsb
xchg
ss
cmpsl
fisubrs
dec
jmp
push
aad
scas
pop
fistl
rorb
jle,pt
nop
mov
inc
je
out
jge
addr16
gs
imul
loope
inc
in
into
lods
xchg
or
outsb
mov
leave
inc
fistpl
push
cmp
mov
sarb
or
mov
jge
lods
mov
movsl
out
inc
lcall
enter
and
push
push
xor
lahf
out
test
mov
loopne
sub
mov
xorb
sub
xchg
push
pop
mov
adc
sub
cmp
nop
es
or
mov
push
int3
mov
repz
pop
sbb
lock
adc
stc
xor
inc
mov
mov
in
cmpsl
xorl
fs
or
mov
fs
jge
mov
movsl
fimull
pop
sti
lds
vucomiss
adc
int
hlt
shlb
popa
push
or
pop
and
cmp
loop
daa
stc
hlt
out
push
fmull
xor
loopne
les
fwait
cmp
ds
rcl
sar
mov
lods
sti
xchg
cltd
je
lea
mov
push
in
in
in
pop
leave
pop
ret
or
iret
rcl
sbb
lods
hlt
divl
lcall
jle
faddl
lret
cmp
inc
dec
sbb
xchg
mov
xor
mov
add
pop
stos
shll
les
cmp
ja
xchg
inc
mov
fcomp
dec
xor
cmp
neg
out
gs
in
adc
ja
add
test
jecxz
mov
aaa
jo
dec
push
and
fmuls
push
mov
mov
mov
dec
push
jb
into
cmp
jnp
dec
add
and
mov
pop
lret
clc
inc
pop
cmpsl
orb
stos
fwait
inc
out
inc
pop
xchg
clc
cwtl
xor
fsts
cltd
push
inc
lcall
lahf
pop
or
xor
sbb
sahf
lahf
push
mov
pop
mov
imul
push
mov
jns
add
lea
ljmp
repnz
jb
test
mov
gs
stos
sti
adc
jge
fsubl
sbb
mov
in
cmc
mov
ss
jl
add
data16
fsts
and
movsb
clc
popf
mov
push
mov
cmp
mov
fdivl
popf
js
push
clc
sbb
mov
aad
insb
and
fbld
xor
inc
adc
or
xchg
and
jnp
jg
and
adc
mov
inc
insl
stos
push
leave
dec
iret
push
cwtl
dec
pop
push
cwtl
and
mov
dec
inc
pop
dec
cmp
sub
lods
push
add
stos
xchg
dec
ret
jge
dec
cltd
pop
xchg
xchg
fsubs
add
sub
adc
in
scas
cmpxchg
scas
mov
xor
ret
lcall
mov
cmp
fwait
pop
jo,pn
out
and
rcll
adc
mov
mov
jno
sarb
or
rorl
sub
bound
fs
xchg
test
mov
cltd
pop
ret
les
and
add
add
inc
mov
adc
out
xchg
jecxz
bound
shll
out
lods
movsl
jb
add
inc
xchg
clc
leave
xor
inc
inc
insb
and
or
stos
or
iret
mov
xor
aaa
repz
jnp
xor
les
mov
jl
mov
jg
js
inc
dec
mov
jnp
push
inc
lods
cltd
call
mov
mov
add
jge
dec
or
subb
insl
cmc
cmpsb
mov
test
push
gs
lods
push
adc
xchg
push
test
aam
add
xor
push
and
mov
dec
test
push
stos
mov
sahf
adc
add
add
add
cmp
mov
mov
arpl
mov
mov
push
incb
sub
inc
dec
decl
mov
push
mov
jnp
movsl
mov
popf
out
cmp
push
lock
test
and
xchg
sub
out
ror
iret
jg
adc
add
adcb
mov
dec
and
pop
mov
dec
pushf
xor
adc
xchg
dec
cwtl
int
add
movsb
xlat
adc
adc
dec
divb
sbb
push
pop
inc
popf
aad
adc
xchg
xchg
jg
bnd
add
xor
xor
andb
xor
or
inc
xchg
ljmp
sahf
jg
sbb
push
sub
mov
dec
or
mov
sbb
jno
aam
xlat
loop
xchg
push
pop
mov
cmp
orps
inc
jbe
and
pop
push
std
ds
and
test
cld
int3
pop
adc
scas
adc
pop
push
adc
popf
and
ja
fisttps
sbb
es
mov
rol
xor
jecxz
xor
mov
lods
xor
dec
cli
arpl
out
pop
outsl
cmp
mov
adc
sbb
in
cltd
sbb
out
test
push
stc
addr16
mov
jns
stos
xchg
jmp
imul
mov
add
jbe
out
dec
clc
sub
push
out
push
ja
cwtl
pop
inc
pop
insl
mov
or
icebp
addb
fs
movsl
lret
cltd
push
pushf
xchg
pop
imul
lods
pcmpgtw
xor
cmpsl
and
dec
jnp
jmp
out
push
and
arpl
lret
dec
and
sub
dec
sub
test
pop
add
in
adc
cwtl
mov
lea
mov
push
mov
cmp
mov
jae
adc
cmp
cld
stc
dec
cmpl
or
or
xchg
xor
inc
cmp
mov
jnp
cmp
sbb
or
orb
mov
fstp
jge
or
ret
cmc
int3
cmp
decb
and
in
jl
sahf
sti
fdiv
enter
push
call
sub
xchg
icebp
push
popa
jmp
fs
icebp
sbb
jnp
and
or
rcrb
repz
mov
faddl
loop
jmp
fldt
cwtl
inc
addl
and
jg
das
add
jl
push
pusha
sbb
push
out
fwait
mov
xor
repz
in
call
mov
push
and
icebp
and
mov
xchg
lcall
adc
xor
sbb
jno
lds
inc
scas
fdivs
jno
divl
fsub
stc
inc
loop
ds
jg
in
nop
xlat
inc
dec
mov
fsubl
sub
das
sub
pop
divb
mov
sbb
and
jns
filds
push
mov
insl
sbb
xchg
xor
pop
andb
mov
mov
cmp
cmpsl
sbb
negb
test
mov
sbb
cmc
fmul
sbb
sub
int
mov
mov
xor
js
test
fildll
sub
add
fcompl
inc
in
call
ds
mov
cmp
loopne
inc
std
ret
jle
scas
push
scas
cwtl
rolb
adc
leave
int
push
pop
insb
sbb
mov
dec
rcrb
lock
sbb
aaa
sahf
mov
cmpsb
cmp
or
neg
sbb
scas
cmp
test
rcrb
rclb
fninit
mov
pop
sbb
je
sbb
push
aam
js
dec
xorl
mov
test
fwait
mov
cmp
cmc
mov
pmulhw
sti
pop
mov
ret
sub
lea
leave
sbb
pop
pop
pop
add
enter
test
in
jmp
idivl
hlt
mov
jns
mov
or
ffree
cmp
pop
dec
sub
out
outsb
into
in
dec
aad
jb
aam
jp
cwtl
cs
adc
jne
mov
sub
out
xchg
ret
dec
lods
xchg
adc
ret
ljmp
sbb
fcompl
and
adc
push
dec
pop
push
std
stc
repz
jp
cmp
ret
stos
pop
xor
pop
add
jmp
jo
push
jge
cmpsl
sahf
cwtl
mov
cltd
fisubrl
test
ret
aas
xor
ljmp
fsts
shrb
mov
es
sbb
popa
jmp
sti
dec
popa
dec
out
fs
lods
pop
and
inc
hlt
fsubrp
bound
inc
clc
repnz
adc
stos
sub
mov
sbbb
call
inc
push
out
ss
data16
lcall
popf
pop
data16
xor
ret
cmp
cmp
inc
xor
fistpl
fwait
inc
ret
repnz
lret
dec
mov
pop
and
dec
mov
pop
in
cmp
jbe
nop
jge
in
and
mov
pusha
jecxz
mov
adc
movsl
loopne
shl
mov
cld
scas
lock
sbb
vpmacsdql
mov
loope
jno
insl
and
mov
and
jle
ret
punpcklwd
dec
inc
sub
je
ljmp
push
sub
mov
lret
lret
sbb
clc
hlt
mov
fidivrs
pop
push
xor
mov
andl
das
push
sub
add
xchg
mov
push
sub
lret
cli
or
cmp
mov
movsl
dec
loope
dec
pop
xlat
pop
jae
mov
pop
loope
jne
sbb
lcall
lea
aam
inc
inc
clc
mov
pop
mov
movsl
cmp
divb
icebp
test
xchg
rcrl
mov
mov
push
fiadds
idiv
loop
es
mov
push
mov
xchg
pop
mov
push
sbb
in
scas
ljmp
pusha
cmp
outsl
push
outsb
pop
jg
jbe
adc
or
adc
das
inc
int
xchg
data16
pop
add
sub
fidivs
into
movl
pop
jg
xchg
fs
cmp
inc
imul
push
out
jge
pop
adc
cld
test
pop
jmp
push
in
fcmovnu
in
pop
add
or
sidtl
xor
ljmp
iret
insb
fimuls
rep
push
hlt
xchg
fcomps
mov
cld
mov
and
mov
mov
push
ret
push
pop
pop
movsl
add
push
movsb
dec
int
mov
and
and
es
sbb
sbb
jb
rol
push
fmuls
push
int3
lds
aad
adc
js
hlt
adc
push
push
fldt
mov
icebp
mov
mov
cmp
out
pushf
test
xor
rcr
loop
xchg
xchg
sub
xchg
mov
clc
and
sbb
fs
mov
out
rcll
and
insb
xor
shrl
jecxz
cld
mov
push
mov
into
push
mov
test
mov
sbb
cmp
or
mov
mov
icebp
orl
out
pop
stos
pusha
inc
lret
lds
sbb
mov
movsb
and
adc
dec
sahf
dec
xor
jo
push
mov
dec
jge
mov
xor
insb
out
loopne
ja
mov
ds
decl
ds
dec
inc
and
pop
cmc
orl
je
repz
sub
mov
pop
inc
dec
mov
rorl
xor
clc
aas
loope
dec
in
push
lahf
fisubrs
test
cmp
pusha
cmpsl
mov
mov
aaa
push
out
test
xchg
insl
and
shlb
push
ss
sbb
pusha
sbb
pop
les
cs
mov
dec
inc
lret
in
iret
sbb
das
sub
shll
das
push
cmp
mov
sbb
xchg
enter
jne
or
mov
pusha
out
sbb
mov
lcall
adc
pop
and
inc
aas
jle
scas
ljmp
ljmp
cmpsl
push
and
xchg
lret
or
dec
mov
enter
mov
dec
cmp
adc
out
push
mov
aam
sub
jb
mov
or
mov
lret
mov
test
in
addr16
daa
daa
inc
or
jp
pop
fs
push
cmpsl
and
mov
xlat
adc
dec
push
mov
mov
arpl
leave
inc
or
cmp
out
pop
jno
fidivl
xor
mov
mov
fwait
mov
scas
mov
fucomip
inc
testb
fbld
sub
or
xor
xchg
add
pushf
sbb
imulb
xchg
stos
bound
lcall
popf
xchg
pop
mov
arpl
ja
mov
loop
insl
loopne
lahf
stc
mov
lret
shll
sahf
sub
and
fstpl
add
add
clc
fbstp
push
mov
movsl
pop
clc
es
jmp
stos
mov
out
cmp
sub
sbb
inc
add
test
aam
mov
xchg
cmp
gs
rorb
xor
or
sub
daa
mov
test
das
jno
xchg
push
or
mov
shl
jmp
sbbb
mov
sub
or
xchg
jge
pushf
fstpl
in
push
mov
adc
ds
pushf
jmp
movsb
cmpsb
mov
out
sub
imul
imul
pop
push
test
pop
lods
mov
cwtl
pushf
arpl
shrb
clc
or
nop
xchg
dec
mul
jecxz
je
sbb
mov
das
sub
pop
push
jno
imul
aam
pop
iret
xor
rorb
fbstp
add
lret
inc
sti
and
mov
push
xor
fst
sub
int3
cs
das
add
mov
in
cs
test
aaa
xchg
push
and
test
xchg
dec
jno
out
push
xor
xchg
cmp
dec
test
aad
pushf
xor
call
imul
gs
aas
rolb
cmp
repz
or
jbe
adcl
ret
pop
adc
xchg
push
imul
mov
pop
ljmp
mov
adc
test
rcr
push
jle
adc
xchg
or
fdivrs
sbb
dec
psubb
sub
sbb
mov
pop
pop
imul
xor
loope
pop
out
stos
cltd
mov
and
repz
subb
scas
in
jp
mov
pusha
pop
fwait
mov
dec
std
divl
cli
sbb
mov
rol
mov
scas
shr
mov
jnp
add
bnd
sub
inc
arpl
sti
mov
xchg
mov
mov
or
es
jmp
mov
add
fcompl
lcall
push
dec
mov
lock
daa
sbb
inc
in
mov
fdiv
cmp
sub
sub
xchg
scas
jmp
jp
test
sub
data16
aam
shrb
xchg
test
movsb
int
jmp
ss
insb
cmpsb
mov
aam
jge,pt
out
mov
or
xchg
sbbb
sarl
cmpsb
pop
mov
aaa
stc
and
xor
jp
or
or
jne
jmp
jp
mov
sbbl
mov
mov
bound
or
pop
in
out
subl
mov
sbb
cmp
dec
mov
mov
xchg
or
inc
rcll
pusha
insl
xor
xchg
rorb
je
add
movsb
pop
push
mov
pusha
sub
iret
push
adc
dec
cmp
int3
push
pop
in
xchg
mov
inc
rcrb
jne
lahf
mov
aas
pop
mov
out
dec
sbb
nop
and
rclb
popf
scas
add
cld
test
mov
add
xor
add
insb
in
scas
jmp
and
lret
das
mov
inc
out
aad
sbb
jecxz
adc
pop
test
scas
and
pop
ret
fsubs
lcall
and
inc
clc
pop
sub
jge
sub
or
jnp
xchg
cmp
dec
cmc
mov
fcomps
fisttps
dec
jge
fldt
out
xor
out
ss
fildll
lret
leave
aaa
faddl
int
nop
mov
adc
stc
cmpb
insb
mov
out
mov
sbb
or
xor
mov
jae
enter
and
jmp
pusha
xchg
rcr
outsb
fidivs
out
mov
push
jecxz
cmp
ret
mov
shrl
lret
or
andl
or
mov
insb
test
jno
rolb
das
xchg
cmp
pop
icebp
dec
xor
enter
js
hlt
out
test
jmp
pop
ss
jge
inc
and
adc
hlt
adcw
aam
and
pop
mov
stos
stc
sub
jne
jb
mov
movsl
mov
and
fidivl
and
xchg
movsb
xchg
cmp
sub
mov
into
lea
add
pop
sahf
inc
fcmovnb
mov
js
inc
mov
sub
mov
into
adc
stos
subb
call
mov
movsb
popf
xor
jecxz
cmp
and
insl
roll
sti
in
and
pop
dec
imul
lret
dec
fidivl
sub
scas
and
mov
push
mov
loop
sbb
out
mov
aam
push
adc
into
push
inc
mov
push
outsb
xchg
jmp
pop
scas
dec
mov
rclb
inc
ret
imul
aaa
movsb
jp
xchg
sbb
aas
outsb
mov
xor
jno
repz
sbb
dec
inc
inc
mov
or
add
mov
and
cmp
xchg
jp
push
pop
ror
notl
pop
fstpt
mov
push
pop
shr
sbb
flds
fs
sti
inc
push
stos
pop
in
gs
push
ljmp
out
fs
je
mov
sub
sub
movsb
cmp
subb
and
sub
mov
js
inc
adc
lret
lock
push
sbb
pop
mov
aaa
inc
imul
xchg
mov
addr16
cmpsb
in
inc
aaa
adcb
dec
push
ss
rolb
shll
mov
dec
orb
cmp
xor
mov
repz
mov
movsb
filds
rolb
lcall
pushf
nop
shlb
imul
lock
mov
scas
negl
adc
cmc
pop
aam
js
mov
mov
cs
cmpsb
sbb
mov
push
xchg
inc
push
int
jl
xacquire
or
sbb
sbb
pusha
adc
out
js
nop
shrb
loope
or
popf
jg
xchg
repz
call
jp
adc
xor
clc
iret
pop
lret
stos
aad
loop
cmpl
outsl
into
test
sub
pop
out
add
xor
stc
adc
sbb
xchg
push
xchg
mov
in
xor
or
mull
leave
int
pop
inc
insb
push
scas
in
in
push
cmp
jno
jmp
pop
mov
jb
stos
pusha
testb
js
iret
mov
fcompl
into
lahf
and
xor
inc
mov
out
cs
cmp
pop
add
or
test
loop
stos
adc
cwtl
lahf
movsl
mov
loop
pusha
sahf
nop
or
ja
jge
imul
les
push
sbb
cmp
es
lret
or
jmp
movsb
in
mov
dec
push
sub
dec
jg
adc
and
xchg
mov
adcb
mov
scas
adc
cmp
dec
cmp
pop
das
dec
sbb
mov
lea
cmpsl
rcr
mov
pop
mov
jns
jnp
inc
inc
add
call
iret
mov
daa
push
jmp
mov
jo
mov
and
or
popa
pop
mov
aaa
popa
inc
lock
xchg
push
ficompl
inc
inc
into
or
jmp
in
aaa
int
pop
cli
jo
pop
jp
fwait
pop
lcall
bound
das
lret
ds
cmp
and
scas
mov
nop
loope
sub
push
adcl
xor
lods
je
sub
push
add
mov
or
std
fistpl
dec
jg
pop
xchg
mov
aad
gs
arpl
aad
jno
shrl
loopne
pop
in
in
mov
add
xchg
in
jmp
dec
mov
addr16
es
cmp
data16
mov
es
adc
xlat
dec
push
ret
or
jp
or
adc
mov
cmp
pop
jne
mov
xchg
push
xor
lds
xor
xchg
xchg
popf
in
and
sbb
xor
fisttps
les
sbb
outsb
inc
adc
cmpsb
lret
adcb
mov
clc
mov
jge
push
test
loop
cwtl
mov
jl
mov
adc
xchg
push
jne
inc
or
popf
fisubs
ficompl
push
ret
movsl
dec
adcb
adc
outsb
mov
out
or
mull
loop
and
xchg
jg
sahf
stc
das
in
jnp
pop
or
roll
or
cmpsl
jle
push
aaa
sbb
push
mov
lcall
mov
movsl
sub
jle
data16
jg
jecxz
pop
pop
mov
adc
add
lcall
cld
jle
jmp
and
adc
ss
call
cwtl
push
imul
lock
jb
xlat
les
pop
insl
lcall
xchg
sub
xchg
inc
fs
int
sub
pop
lcall
dec
in
mov
scas
xor
sub
cwtl
mov
mov
aam
xchg
mov
xchg
leave
mov
mov
inc
jne
jbe
or
jl
cmovne
mov
sub
imul
lea
out
add
je
cmp
xor
imull
xor
sbb
push
shl
mov
hlt
pop
sub
sub
pop
jmp
and
mov
int
xor
jne
or
rorl
inc
fdivr
ds
fstl
pushl
or
mov
cmp
sub
pop
out
aas
mov
stos
sbbl
pop
loopne
add
sub
in
adcb
inc
pusha
mov
pop
in
jb
out
int3
shll
insl
adc
mov
push
notl
out
mov
popf
and
mov
aas
arpl
push
fld1
xor
stc
pusha
cmp
loopne
push
popa
jp
cltd
push
cs
outsb
push
mov
xor
cs
push
call
adc
push
lds
pop
data16
push
and
ficomps
mov
inc
test
hlt
jne
jns
in
lea
xlat
push
inc
add
lahf
cwtl
fisttpl
cmpsl
dec
inc
adc
inc
pushf
adc
cmp
pop
cmp
xor
aaa
add
xor
add
out
mov
mov
lock
and
add
inc
jecxz
xchg
and
jl
inc
ret
mov
fistl
jae
pop
cmp
mov
mov
loope
in
dec
stos
imul
xchg
xor
push
in
adc
xchg
xchg
push
je
je
fdivl
jl
aad
and
clc
xchg
xchg
mov
daa
xor
in
xorb
pop
push
and
enter
push
sbb
data16
cmpsl
and
data16
xor
ja
mov
add
decl
enter
sbb
ret
jmp
aam
xchg
mov
mov
xorb
inc
out
arpl
daa
or
jnp
sbb
add
mov
ds
addr16
lock
push
andl
mov
fcomps
movsl
scas
sbb
shrb
mov
andl
or
rcrb
popf
pop
aad
xchg
push
pop
mov
fildl
ja
aas
sub
test
dec
and
jecxz
movsb
inc
loop
pop
jg
nop
dec
xor
sbb
mov
test
dec
mov
jae
sbb
jne
push
xor
mov
mov
add
cmp
fidivl
aaa
sbbl
cmc
repz
or
movl
push
pusha
in
cld
pop
dec
xchg
lcall
std
scas
out
and
xor
mov
mov
aam
adc
mov
mov
jbe
out
add
mov
inc
jae
xor
and
jp
mov
push
push
call
enter
mov
dec
mov
and
sbb
sub
cs
jbe
lret
mov
ds
push
jecxz
loop
jmp
sbbb
std
ja
mov
add
test
sbb
lods
fcmovb
dec
pop
xchg
pop
inc
mov
push
or
mov
xchg
cmp
mov
fwait
cli
mov
mov
xchg
test
mov
jl
inc
mov
lea
out
pushf
leave
sbb
scas
push
jge
pop
in
and
and
fwait
jae
pop
cmp
into
add
aad
iret
mov
cmp
mov
lods
cli
mov
pop
add
data16
rclb
ret
fcoms
add
mov
mov
sbb
iret
popf
sti
lods
sti
mov
or
jmp
mov
ror
jno
xchg
mov
ret
loopne
dec
mov
dec
inc
inc
cmp
pop
sub
or
dec
dec
ss
int
rclb
mov
arpl
mov
clc
xchg
xor
push
cwtl
aad
imul
sbb
push
inc
xor
mov
in
adc
xor
fsubrs
mov
mov
nop
icebp
xchg
cmp
fsubs
jl
fisubrs
setae
and
adc
xchg
cmp
cmp
cmp
xchg
push
pop
ds
ljmp
xor
xorl
sti
sbb
out
stc
lret
out
cmp
push
dec
cwtl
filds
rcr
in
lock
mov
adc
enter
mov
xchg
arpl
pop
add
aam
insl
mov
lret
jo
dec
lahf
mov
jns
pop
xor
lods
jecxz
je
mov
pop
lret
lcall
lret
stos
imul
es
add
jmp
nop
stos
aas
lds
outsl
ljmp
imul
or
call
inc
jo
insl
lock
pop
push
sbb
fldt
mov
or
inc
and
adc
xlat
mov
push
int
lcall
movsl
push
mov
mov
stc
sub
pop
xchg
add
fidivl
je
cwtl
xor
imul
out
iret
jp
lods
imul
mov
xor
mov
xchg
das
lahf
jns
lcall
aas
and
popf
push
movsl
pop
push
pop
xor
push
sub
jg
push
ja
jecxz
mov
add
insl
lahf
pusha
xor
sbb
pop
aam
add
sbb
pushw
in
jbe
pop
xor
lret
xor
mov
mov
pop
pop
sbb
dec
sub
insb
mov
lock
fildl
jle
lods
mov
fcmovbe
pop
dec
lods
adc
xchg
push
mov
hlt
pop
js
or
inc
neg
into
nop
mulb
je
xor
jg
dec
mov
xor
stc
mov
lret
xchg
mov
mov
push
jle
repz
cmpsl
adc
in
daa
icebp
jp
xor
jo
mov
xchg
fcmovbe
or
jp
and
cmc
cmpsl
arpl
mov
cmp
xchg
aam
jmp
dec
ret
mov
push
adc
bound
xchg
inc
cmp
repnz
add
insb
movsl
dec
repnz
popf
into
mov
dec
out
dec
fwait
inc
fwait
pop
sbb
fistpl
lret
mov
scas
push
fnstsw
arpl
fidivrs
std
adc
xchg
or
or
jmp
ss
enter
int
dec
jecxz
inc
arpl
in
popf
movsl
shl
mov
inc
pushf
mov
test
jns
aaa
ficompl
cmp
sbb
scas
push
adc
xlat
push
adc
aam
fmull
sub
int
jp
xchg
in
iret
ret
sti
jecxz
fnstenv
test
test
mov
hlt
andb
popf
addr16
add
sti
push
mov
lahf
popa
cmp
stos
sub
or
sbb
pop
pop
adc
dec
das
inc
add
or
mov
cmp
addr16
leave
out
icebp
and
inc
shll
pop
sbb
call
push
adc
aad
mov
or
int
or
arpl
mov
cmp
in
das
pop
cli
adc
sbb
gs
lods
inc
mov
cmp
pop
insl
mov
push
cmp
dec
sar
das
jns
lret
stos
pusha
pop
add
sub
mov
loop
push
cmpsl
adc
outsb
cmpsb
loop
mov
push
xchg
mov
and
dec
decb
mov
xchg
insl
lahf
mov
arpl
notl
or
lcall
xchg
xchg
fs
inc
jns
dec
or
lock
xor
pop
pop
in
lods
sbb
push
fisttps
mov
roll
push
sarb
out
mov
cmp
xchg
orl
shl
in
and
add
imul
in
mov
rep
into
lcall
cld
loopne
jmp
jmp
sbb
mov
fwait
mov
xchg
pop
out
adc
xchg
xchg
neg
mov
inc
xor
xor
dec
mov
mull
jmp
inc
nop
xor
ret
cmc
xor
mov
mov
iret
loopne
dec
mov
jmp
mov
sub
repnz
cmpsb
aad
xchg
mov
cmp
data16
bound
pop
sahf
adc
ja
notl
mov
pop
andb
cmp
push
mov
xchg
mov
jg
aad
mov
data16
or
mov
push
in
cmp
add
xor
pop
pop
inc
ds
jmp
cmp
sub
repnz
mov
mov
int
dec
dec
cmp
jbe
lods
jb
jb
aad
mov
mov
loopne
xor
cmp
push
pushf
sti
jl
fs
test
es
imul
mov
lcall
sub
pop
fsub
lods
xchg
jo
adc
xor
push
lds
push
addr16
push
jae
imul
into
xor
push
mov
dec
mov
mov
enter
fiaddl
mov
mov
mov
mov
add
test
jae
pop
lcall
lods
stos
push
mov
int3
sub
xchg
jg
in
imul
cmp
arpl
es
cmp
in
adc
stos
aad
sbb
aad
cs
inc
xor
std
cmpsl
jg
je
cs
pop
mov
out
jmp
mov
xor
test
cmp
dec
fcmovnbe
xlat
sbb
loopne
xor
into
jns
mov
inc
mov
out
ds
popa
and
pop
xchg
xchg
jle
outsb
and
mov
and
and
mov
jae
inc
lds
add
cmc
sub
into
clc
mov
pop
mov
pop
je
popa
xchg
aaa
push
add
xchg
push
dec
ffreep
out
push
es
jae
lcall
jmp
mov
in
popf
jae
push
pop
rcll
mov
cmp
out
gs
dec
into
add
js
data16
cmpsb
mov
gs
daa
xchg
mov
sub
jecxz
js
or
pop
popf
mov
and
dec
push
aaa
loop
insb
aam
sub
loop
add
xchg
scas
rol
sub
jbe
inc
repz
mov
loop
cli
out
cmp
push
push
call
xor
mov
xchg
cmc
icebp
stc
mov
stos
and
das
addr16
cmpsb
addb
mov
mov
dec
lods
and
or
lods
nop
push
jno
lods
pop
cmp
push
jmp
and
mov
pop
cmp
sub
jle
arpl
xchg
decb
imul
push
mov
pusha
stc
dec
inc
mov
int
lods
into
pop
js
adc
fstpt
cwtl
and
adc
push
cltd
mov
cltd
bound
add
inc
xchg
ss
insb
xor
subb
jns
and
add
inc
sub
addb
cli
ss
push
inc
xor
or
les
imul
adc
arpl
data16
insl
push
pop
addr16
gs
cmp
sub
jge
je
push
sub
pusha
icebp
push
shlb
pop
add
dec
gs
std
xchg
pop
loope
cltd
jns
mov
inc
jnp
dec
iret
nop
loop
xchg
push
cmp
jl
pop
mov
dec
cltd
hlt
int3
int3
cltd
fidivs
js
lret
fwait
cmp
in
popf
or
pop
cli
cmp
out
in
je
ss
xchg
dec
ficoms
push
lea
scas
mov
insl
lret
mov
xchg
push
ret
lret
push
aam
mov
fistpl
inc
push
lods
sbb
pop
cmp
jbe
mov
push
push
push
dec
xchg
inc
and
add
lock
in
cmp
clc
call
xchg
inc
gs
add
xlat
and
sarb
push
push
jns
fcmovne
jp
dec
adc
adc
popf
mov
out
inc
mov
int3
add
aam
xchg
sub
dec
fcmovne
test
mov
jp
mov
imul
sbb
sarb
adcb
movsl
cmpsl
les
pop
lock
loop
imul
push
mov
cld
dec
rcrb
and
mull
mov
fdiv
xchg
push
mov
jns
mov
pop
mov
pop
pop
and
icebp
xlat
push
fwait
in
jg
repnz
imulb
hlt
sbb
xor
push
cmp
add
aad
test
pop
adc
test
inc
js
ret
and
rorb
mov
sahf
stc
or
xchg
sub
xchg
and
jbe
and
fsubl
ss
lcall
dec
adc
xchg
and
sti
xor
pop
loope
retw
dec
test
push
xor
pop
push
les
loope
or
jmp
scas
cwtd
imul
rorl
dec
fisubs
mov
cwtl
inc
pop
std
inc
rcll
push
push
fwait
xlat
jno
pop
add
or
mov
jno
aam
adc
jo
fsubrl
movsb
add
into
push
test
test
shlb
cmp
push
inc
sahf
in
stos
push
es
ucomiss
mov
xor
push
aas
mov
push
xlat
mov
jae
mov
inc
lods
fdivs
mov
xchg
cmp
jb
mov
xchg
add
mov
or
cmpsb
mov
sbb
xchg
pop
inc
xor
int
push
sub
fisttpl
push
adc
roll
mov
iret
cmp
loope
pop
fidivrs
cmp
jnp
jl
rcr
repz
push
mov
aam
lods
xchg
subl
nop
xor
mov
in
stos
movsb
cmp
inc
jg
adc
prefetchwt1
cs
inc
xchg
cmp
mov
push
cmpb
sub
dec
mov
iret
mov
push
daa
loope
icebp
adcl
mov
addr16
cmp
inc
loop
pop
add
lcall
mov
or
xchg
aad
or
jp
xchg
push
movl
xchg
sub
testb
xlat
mov
mov
ljmp
fstpl
call
sti
outsl
adc
jp
pusha
subl
jne
mov
xchg
push
jnp
stc
cltd
xchg
adc
push
push
aaa
xchg
loop
push
and
repnz
sbb
xor
mov
js
mov
insl
xor
insb
dec
sub
filds
icebp
xor
gs
xlat
cld
mov
adc
outsl
fmulp
and
enter
mov
fnstenv
xor
pop
dec
inc
lock
inc
jno
loopne
out
fldt
and
ja
inc
push
out
push
pop
in
add
adc
sub
sbb
ds
movsl
and
adc
push
push
loop
or
test
cmp
mov
lods
jp
fdivrl
inc
bound
inc
test
cmc
mov
or
sbb
enter
cmpl
rol
cmp
pop
arpl
imul
das
mov
sbb
fucomip
cmp
xor
cmc
test
data16
test
mov
jp
js
xor
rorl
jo
in
sub
leave
mov
cmp
xchg
ss
push
adc
mov
js
cmp
insl
mov
adc
mov
pop
out
mov
xor
mov
cltd
dec
div
les
jbe
mov
lds
insl
mov
aaa
xchg
add
xor
aas
hlt
add
xorb
lret
call
std
ret
fsub
jge
sbb
fistpll
div
cmc
pusha
mov
imul
cwtl
mov
mov
cmp
js
mov
iret
push
cmc
scas
and
sub
mov
jg
aam
push
mov
inc
mov
movlps
inc
dec
mov
mov
dec
outsl
mov
leave
mov
and
lods
ja
mov
cmp
notb
add
test
in
loope
xchg
pop
outsl
inc
lcall
pop
sub
shr
and
mov
imul
and
rclb
jne
jo
mov
imull
push
cld
int
shll
xchg
push
xchg
pop
mov
jbe
mov
andl
mov
xchg
or
test
ljmp
add
push
dec
adc
repnz
test
and
adcb
or
sbb
rcrl
fs
inc
inc
stc
sub
mov
decl
rcll
scas
test
fisttps
add
xor
addr16
dec
push
cmp
cmp
pop
repz
mov
and
loopne
inc
ja
orb
jno
and
movl
jae
xlat
in
lahf
je
in
xchg
xchg
out
xor
sub
add
sbb
mov
rclb
xor
xchg
roll
cs
lret
cld
cmc
xchg
pop
fwait
push
outsl
je
jle
int
jo
out
push
shll
xor
in
or
into
rcrb
je
mov
daa
fbstp
arpl
cmp
inc
mov
repz
inc
addb
inc
aad
pop
and
sub
mov
outsl
or
mov
out
jnp
addl
aaa
mov
movsl
push
inc
ja
outsl
mov
push
cmp
aam
adc
cli
and
inc
enter
push
mov
and
jno
jge
jno
rcl
jl
cli
mov
mov
push
in
push
sub
mov
outsl
inc
leave
out
pop
insl
negl
fwait
add
sub
push
int3
push
xor
or
mov
addr16
pop
shlb
cs
sbb
jp
ja
mov
mov
idivl
xchg
dec
daa
or
push
adc
fstpl
mov
loopne
lock
lods
jb
out
sbb
hlt
lret
aaa
fadds
cld
ret
scas
das
ss
jbe
cmpl
cltd
scas
mov
call
unpcklps
std
mov
dec
cwtl
cmp
sbb
wrmsr
xchg
pop
cmp
inc
xchg
mov
orl
jmp
jecxz
and
pop
sub
int
jb
ds
loope
add
bound
pop
pop
xchg
or
lcall
pop
aad
pushf
push
scas
test
or
insb
int
and
roll
sub
std
es
enter
aas
xchg
insl
fnstsw
addr16
das
cmp
inc
mov
pushf
pusha
hlt
jp
push
je
data16
mov
xchg
jecxz
adc
or
in
push
jmp
fbstp
pop
sbb
push
inc
out
pop
outsb
add
sbb
mov
lcall
les
fnstenv
cmc
mov
push
sub
clc
loope
inc
fildl
out
scas
xchg
mov
dec
mov
movsl
push
ss
mov
sbb
lahf
out
sbb
insl
jae
mov
and
mov
ljmp
imul
imul
repnz
cmp
fildll
mov
call
push
cmc
cmp
xchg
dec
mov
cltd
mov
sbb
mov
sub
scas
scas
cmc
sti
movsl
je
and
jae
pop
shlb
mov
rcll
xlat
sub
rcrl
sbb
jbe
xchg
test
out
inc
lds
jb
dec
dec
and
jmp
push
les
out
popf
daa
push
mov
jne
pop
mov
adc
mov
inc
bound
shrl
inc
adc
pushf
int
cmpsb
jb
call
adc
push
mov
mov
jle
pop
mov
mov
add
inc
decl
inc
fcompl
push
fnstcw
out
adc
pop
jp
fnstenvs
adc
dec
adc
and
cltd
push
lock
pop
mov
add
mov
test
jno
cmpsl
fmul
jae
loop
add
or
xchg
xchg
sub
outsl
cmc
sbb
int
repnz
pop
insl
push
xor
inc
adc
xchg
mov
cmp
push
adc
xor
sbbb
mov
pop
jnp
xor
andb
xchg
das
dec
movsl
add
cwtl
xor
fistps
mov
mov
pop
in
sub
push
inc
popa
in
sbbb
push
fmulp
sub
movsl
mov
adc
adc
roll
fsubl
stos
hlt
fldenv
or
adc
and
popa
mov
mov
imul
mov
lcall
mov
cmp
jae
das
bt
push
aas
shl
push
stos
jle
pop
cmp
inc
insl
not
sub
xor
xor
movsb
xchg
xor
mov
dec
aas
jge
movsl
lahf
xchg
lods
ds
mov
mov
in
and
push
sub
notl
jg
pop
push
add
inc
gs
fbld
insb
popf
mov
data16
outsl
adc
shll
add
pop
add
loop
shll
sbb
test
add
fdivs
out
popa
jp
cmp
int3
inc
loop
or
fwait
scas
cmc
jmp
push
add
cmp
or
in
add
mov
sbb
inc
push
rcrl
xorl
mov
dec
xchg
lahf
je
loopne
stc
mov
rorl
add
maxps
jb
es
shlb
cmc
mov
and
add
push
xor
cmp
loope
pop
or
pop
dec
pop
mov
xor
pushf
data16
adc
lret
cmp
push
push
sub
aad
clc
ret
cmc
stos
clc
clc
or
adc
jnp
ss
lret
mov
imul
nop
imul
push
leave
xor
stos
leave
movl
inc
out
cwtl
mov
andl
push
adc
mov
shrb
lcall
dec
sbb
into
lcall
sbb
int3
inc
loop
int
or
push
dec
pop
dec
push
rcrl
ja
or
clc
jno
mov
outsb
mov
lcall
test
leave
ror
mov
xchg
mov
inc
push
jno
loopne
cltd
icebp
push
movsl
and
mov
jae
push
shlb
jle,pn
in
and
push
pop
and
iret
sbb
dec
cs
xorb
mov
xlat
cmc
pop
cmp
push
stos
cmp
inc
iret
clc
imul
mov
cmp
sbb
fdivrs
cmc
stos
mov
xor
xor
mov
adc
sub
sahf
mov
into
je
out
out
mov
pop
jl,pt
ret
test
bound
ljmp
aas
sarb
push
jp
or
jae
ja
in
or
roll
in
imul
or
or
out
push
aad
mov
inc
sbb
mov
aas
add
mov
das
inc
mov
sarl
or
rolb
add
arpl
loopne
mov
jns
sbb
outsb
mov
sarb
imul
stos
mov
je
enter
shll
mov
jl
lahf
xchg
dec
lahf
and
movsb
pop
into
jge
cmp
pop
xchg
hlt
sub
aam
sbb
nop
mov
or
ds
pusha
xor
xlat
dec
or
dec
sub
and
and
hlt
fs
pop
out
and
jl
leave
mov
add
loope
testl
in
dec
mov
cmp
shlb
add
ret
outsb
inc
push
pop
dec
fcoms
mov
xchg
sbb
inc
lds
movlps
mov
addr16
cmc
jmp
out
push
ds
sbb
cmp
addr16
lret
dec
mov
mov
in
clc
data16
jg
xchg
arpl
orb
iret
push
or
inc
mov
xor
cmpsb
mov
pop
sbb
sbbb
pop
outsb
jge
movsl
xchg
mov
lea
pusha
dec
inc
mov
sarb
lahf
lret
lea
and
adcb
mov
loop
inc
insl
xor
pop
dec
add
test
dec
sub
out
push
push
cmp
add
aaa
loop
loope
sub
dec
and
popa
adc
sub
adc
imul
orb
jp
in
repz
popf
and
mul
repz
or
inc
and
push
ret
jae
mov
dec
std
addr16
mov
mov
dec
jae
xchg
pop
scas
sub
mov
in
push
add
aaa
mov
clc
or
out
test
test
mov
iret
cmpsb
mov
ret
aas
cld
push
push
fsin
pushf
xor
in
mov
mov
xor
xor
nop
inc
mov
aas
fs
mov
gs
pop
stos
mov
js
shll
jae
fucomip
cmpsb
push
xor
add
popf
movsl
inc
fcomps
pop
jl
cs
adc
hlt
out
pop
lcall
add
sub
movsb
pop
popa
or
ja
add
enter
pushf
lret
mov
sub
inc
pop
cltd
arpl
daa
inc
xchg
mov
and
pop
mov
dec
int3
out
rcl
imul
les
jae
fisubs
mov
bnd
jne
pusha
pusha
arpl
popf
adc
movsb
jge
cmpsl
kmovb
out
xchg
and
adc
xlat
mov
push
cs
jb
mov
mov
push
test
inc
testb
push
pop
mov
push
xor
pop
int
push
pop
leave
or
lock
loop
data16
or
in
xor
fisubrs
pop
nop
hlt
push
cmp
test
nop
push
loope
das
cltd
jg
sub
int
push
mov
ljmp
inc
cs
sahf
arpl
adc
cmpl
jle
out
jnp
dec
scas
xor
push
lret
inc
dec
lea
dec
roll
popa
sbb
push
roll
ss
adc
jb
out
sub
shll
int3
popf
mov
sbb
clc
sbb
jmp
jnp
xchg
aas
and
lahf
xchg
mov
imul
push
pusha
popa
xchg
and
sub
mov
lea
ficompl
xchg
jg
loope
jge
jo
out
jb
scas
xor
in
inc
icebp
mov
xchg
sbb
cmc
or
inc
cmp
leave
push
cmp
add
sahf
dec
dec
das
flds
test
insb
sub
mov
mov
or
cmp
stc
and
xchg
enter
add
in
das
jne
repz
mov
popa
push
dec
adc
cmp
out
mov
sbb
aam
inc
add
cmp
insb
cs
pusha
cli
scas
jns
fdivrl
ss
sub
mov
adc
jnp
pusha
jo
sbb
cwtl
add
mov
insb
mov
push
outsl
js
js
or
xchg
pop
popa
mov
cld
aas
add
add
sti
pop
adc
pop
mov
xchg
mov
jb
or
jge
out
movsl
hlt
test
adc
push
clc
sbb
mov
sub
cmpsb
push
jo
dec
icebp
lods
add
pop
iret
loop
ret
sbb
cmp
enter
xor
dec
or
jae
repnz
lds
cld
or
inc
js
in
mov
xor
xor
leave
sarl
and
mov
or
sti
mov
ret
adc
shrl
add
lea
shlb
call
fsubp
inc
add
std
jmp
les
cmpb
icebp
pop
hlt
nop
jnp,pn
inc
mov
sti
mov
rcrb
lods
ds
fisubrs
mov
mov
mov
sti
std
or
repnz
inc
stos
cld
xor
mov
orl
sbbl
sub
outsl
mov
mov
xor
inc
dec
inc
jp
fwait
leave
mov
das
dec
xchg
cmp
fld
pop
or
loop
push
or
andb
xchg
mov
nop
mov
out
pop
ljmp
or
movsl
jne
xor
sbb
adc
stc
js
mov
add
xchg
mov
fwait
sbb
outsl
insl
mov
hlt
mov
add
rcrl
lahf
cmpsb
mov
push
cmp
out
call
dec
mov
xchg
xchg
fcmovbe
rcrl
adc
jle
stc
xor
sbb
outsl
pop
mov
push
mov
sbb
jne
mov
mov
mov
push
aam
movsl
ds
es
out
lods
adc
add
adc
dec
leave
push
out
fdivrl
add
mov
lds
pop
ljmp
pop
pop
stc
int3
js
adc
incb
mov
nop
sub
outsb
mov
xchg
cmpsl
stc
xchg
aad
les
cmp
push
das
out
cltd
xor
jae
mov
push
and
sub
adc
popf
dec
shlb
in
mov
lret
push
mov
or
or
test
push
or
rcll
cli
hlt
mov
ss
sbb
subb
insb
xor
mov
std
inc
sub
jge
cmp
and
nop
add
jle
je
xchg
enter
pop
xor
loope
jne
and
in
loope
in
cmc
jne
test
lret
lods
jb
out
lods
les
test
aad
lahf
sarb
loopne
out
ret
mov
jns
outsb
leave
mov
and
test
mov
hlt
les
cmpsl
repnz
mov
push
outsl
xor
scas
repnz
sarb
clc
xchg
mov
test
cltd
addr16
leave
mov
cmp
mov
lea
add
mov
lret
pop
jbe
loop
es
and
movsb
into
in
mov
daa
xor
cmp
pop
mov
sub
aaa
scas
push
int
push
lret
mov
push
fsts
aas
cmp
mov
clc
push
test
mov
mov
enter
sbb
jb
inc
xlat
sub
mov
xchg
ja
xchg
enter
ss
stos
cmc
jb
les
cmpsb
fwait
mov
pop
xor
scas
mov
fdivs
mov
jnp
inc
xor
jp
gs
sbb
xor
aas
sarb
or
jmp
and
aad
mov
jecxz
xor
inc
out
mov
iret
push
pop
or
cmp
or
jmp
mov
imul
jnp
cmc
js
ret
xadd
xor
popf
or
push
add
xchg
xchg
sbb
jbe
xor
mov
pop
mov
loope
divb
push
sub
and
jnp
loopne
fmul
test
sbb
ljmp
out
inc
push
mov
cmpl
in
push
out
xor
cmp
lea
dec
fiaddl
xchg
into
or
mov
or
cmp
popa
push
push
out
sub
mov
pop
rorl
sub
pushf
lock
dec
test
adc
mov
sbb
sub
sbb
enter
mov
mov
and
and
or
les
adc
sti
and
add
or
lret
ffreep
ss
stos
into
insl
pop
cli
outsb
and
sbb
lods
rcrb
fldcw
out
xor
sub
dec
sub
cmp
and
test
xchg
jno
dec
loopne
push
mov
mov
pop
mov
fdivs
sti
popa
sbb
ret
inc
mov
push
dec
shll
mov
gs
icebp
mov
push
sbb
ret
cltd
in
jno
lahf
add
lahf
in
jbe
pop
adc
addb
dec
adc
xor
test
push
add
dec
push
or
inc
mov
push
repnz
cmp
push
pop
out
out
inc
rol
jle
jno
lods
repnz
fnstenv
cld
xor
std
sub
dec
mov
pop
inc
xor
stos
adc
cltd
lea
cli
js
cmpb
mov
mov
lods
push
cmp
clc
mov
mov
fwait
in
and
push
cli
lret
mov
mov
jle
repz
pushw
out
lods
sbb
jae
push
enter
pop
sbb
sbb
sub
push
and
stos
fisttpl
aam
cmp
ljmp
and
pop
jg
outsb
fwait
popa
adcb
es
mov
ss
dec
xor
cwtl
sbb
sub
addr16
movsb
fcomp
xor
xlat
std
lods
in
loope
and
mov
jecxz
stc
xchg
add
cld
adc
out
pop
dec
std
or
hlt
and
sbb
adc
dec
xchg
or
aas
test
dec
ret
add
into
push
sub
or
pop
cmp
jns
pushf
cmc
test
dec
repnz
xchg
arpl
stc
arpl
fmulp
in
jae
push
lret
xchg
inc
int
mov
in
pop
lahf
pushf
adc
out
mov
lds
pop
add
mov
mov
jmp
cltd
xchg
add
decl
loop
mov
inc
lods
scas
repz
ret
mov
jnp
bound
add
leave
test
aam
xchg
cmp
inc
std
test
push
push
aam
out
inc
push
icebp
mov
fidivl
mov
test
bound
inc
imul
jmp
aas
xchg
in
xchg
sahf
dec
movsl
into
add
add
hlt
and
scas
pop
clc
or
scas
in
aas
adcb
push
imul
dec
std
cltd
test
pop
lds
mov
adc
pop
ja
cmp
mov
xchg
xor
jl
push
mov
jmp
pop
sbb
adc
mov
mov
adc
in
adc
inc
add
xchg
out
sub
or
add
xlat
cmp
leave
jb
mov
push
in
and
test
addr16
jle
push
fdivl
pop
mov
cmp
sbb
mov
lock
rcrl
and
adc
nop
movsb
mov
rorl
fs
adc
ss
stc
xchg
adc
xchg
mov
inc
xor
xchg
mov
lcall
sahf
pop
adc
mov
push
lret
sbb
lods
xor
or
jne
dec
pop
rol
jbe
jmp
movsl
mov
aas
mov
add
cmp
sbb
ljmp
cmp
pusha
in
cwtl
push
jmp
sub
cmp
add
jb
mov
stos
mov
jbe
cld
outsl
mov
test
mov
iret
idivl
popf
icebp
dec
or
adc
mov
cmp
fdivrs
jae
enter
cmp
imul
push
js
push
clc
xchg
xchg
popa
stos
mov
mov
cmp
int3
in
adc
lock
push
mov
mov
and
outsb
bsr
add
pop
sbb
or
nop
test
jae
push
movsb
lahf
stc
inc
inc
sub
dec
or
jbe
imul
movsl
cmpsl
cli
and
mov
dec
jo
enter
adc
test
dec
leave
jb
or
mov
cmp
pop
xchg
xor
xchg
ss
insl
fwait
cmp
repnz
repz
mov
in
dec
in
in
sbb
lret
inc
pop
dec
cltd
adc
pop
aas
inc
div
jge
inc
ret
outsl
add
jno
pop
pop
insb
scas
xor
xchg
cmc
inc
mov
ds
insl
xor
cmp
pop
mov
les
shl
cmp
lret
jecxz
das
and
cmp
jb
mov
inc
in
pop
data16
dec
xor
pop
jmp
in
imul
dec
cmpsl
iret
mov
pushf
enter
cli
jns
xor
xchg
and
out
outsl
sbb
xchg
or
sbb
and
jp
sbb
push
push
loop
xor
addr16
sbb
imul
push
xchg
stc
aas
cmpb
aad
dec
add
lret
and
insl
das
addr16
adcl
stos
push
adc
out
pop
pop
jg
mov
inc
xchg
sbb
roll
xlat
jp
js
lret
sub
lods
jo
inc
inc
in
add
sub
push
cs
daa
xor
int3
add
cmp
imul
leave
in
mov
mov
shl
dec
in
cmp
jne
arpl
movl
push
pop
cltd
push
sbb
cmc
stos
inc
jno
shrl
inc
or
push
jnp
stc
int3
xchg
dec
sbb
in
fsts
mov
adcb
fadd
leave
jbe
aad
and
hlt
cwtl
and
xor
cmp
lea
mov
push
leave
inc
cmp
pop
in
and
cmc
add
test
sbb
mov
ljmp
push
push
xchg
xchg
fimull
sbb
sbb
stos
bound
stc
shrd
mov
cmp
mov
xlat
inc
xchg
or
movsl
add
push
orl
inc
sbb
ljmp
rorb
outsl
pop
add
or
out
movsb
fdivs
data16
pop
negl
push
or
mov
or
and
je
pop
inc
push
push
pop
mov
in
pop
dec
leave
lea
imul
pop
add
pop
aad
xchg
jecxz
int
mov
sti
mov
shrb
and
lea
dec
mov
jno
arpl
pop
stos
sub
xchg
xchg
jle
pushf
shr
jae
outsl
rolb
mov
fwait
data16
movsl
lds
xchg
lahf
pop
cli
clc
push
mov
mov
jmp
rcll
clc
movsl
sbb
pusha
jmp
jbe
jle
leave
call
fnstsw
mov
dec
sub
fisubrs
mov
adc
mov
add
sub
pushf
xor
jne
push
or
mov
jo
inc
inc
stos
in
cs
lcall
stos
icebp
add
and
sbb
out
jge
mov
inc
pop
call
mov
pop
push
cwtl
cltd
pusha
loope
mov
gs
pop
repz
mov
cmc
jns
mov
outsb
arpl
cltd
lret
dec
inc
jl
add
xchg
enter
push
rdtsc
dec
aaa
das
jne
jmp
lret
outsl
sbbl
iret
sti
fadd
gs
or
dec
mov
push
push
sahf
push
pop
mov
stos
in
mov
add
cs
jge
or
sub
xchg
or
mov
mov
stc
pop
pop
mov
add
cmpsb
or
incb
cltd
push
dec
cmpsl
and
cmp
in
fstpl
mov
fbld
out
imul
xorl
mov
hlt
loope
sub
cmc
stc
sti
adcl
or
insb
dec
in
inc
push
popa
mov
mov
lret
dec
sub
jne
sbb
fsub
inc
push
enter
sub
in
mov
mov
jecxz
lods
repz
xor
xlat
mov
push
aad
addb
clc
aaa
shrl
fcomps
push
ret
or
ficompl
fnstenv
pop
sbb
lcall
gs
cmpsb
es
fs
adc
mov
shrb
scas
xchg
pop
popa
jl
outsl
pop
addr16
or
arpl
inc
popf
lahf
jmp
cwtl
push
inc
jne
in
push
das
mov
dec
rcr
pop
hlt
sbb
xor
jbe
lret
inc
mov
push
inc
pushf
int3
aad
inc
pop
and
lods
imul
in
and
movsb
mov
stc
hlt
jp
mov
adc
dec
notl
dec
inc
mov
std
add
sarb
mov
pop
cld
stos
aad
xor
inc
gs
mov
mov
xchg
push
push
cli
adcl
lret
dec
sbb
int3
or
loopne
jg
mov
call
add
add
divl
xchg
scas
mov
je
jno
push
sub
mov
shr
movsb
adcb
mov
mov
clc
jg
ds
jno
pop
sti
test
movsb
call
mov
xchg
push
and
not
jae
js
aad
push
xor
xchg
adc
shrl
sar
fwait
sub
imul
sub
adc
push
shrl
jb
in
add
popa
movsl
stos
pop
jmp
inc
mov
aaa
call
cltd
jbe
mov
or
out
sbb
inc
scas
popf
pop
mov
repz
and
movsb
sbb
shlb
cmp
cmp
rol
fstl
and
ret
mov
jg
sbb
dec
cmpsl
imul
cmp
dec
ljmp
pop
lods
rorb
mov
adc
jnp
pop
jl
xor
xchg
or
les
outsl
in
push
sbb
filds
push
in
ds
in
lcall
in
sub
ret
mov
cltd
ljmp
and
ss
xor
jns
jle
or
rcr
inc
pop
dec
repz
mov
mov
jb
aad
xchg
xor
ljmp
mov
mov
mov
cmp
jne
add
xor
in
lret
sbb
and
mov
nop
jnp
adc
adc
cs
jmp
loope
cmp
cmp
push
jmp
aam
pop
stc
gs
adc
int3
js
cmpsb
stos
push
in
mov
cmp
ljmp
cmp
lcall
dec
add
mov
mov
xor
pop
push
push
stc
dec
out
lock
mov
ficoms
es
jg
sub
hlt
add
hlt
filds
mov
in
movsb
mov
jg
imul
cmc
sbb
fnstcw
pop
mov
stos
sub
jno
sbb
sub
andb
outsb
shrw
adc
cmp
mov
xchg
mov
cld
mov
out
xchg
or
inc
in
mov
jb
rorl
sub
push
in
loopne
xchg
stos
xchg
shl
int3
or
xchg
sub
dec
out
shlb
xchg
or
mov
dec
push
dec
outsl
jae
rolb
popa
iret
in
xchg
ljmp
sbb
xchg
xor
out
in
xchg
and
sbb
lret
mov
inc
js,pt
test
mov
imul
cmpsb
rorl
adc
je
adc
cli
mov
sub
sbbb
dec
adcl
jge
mov
sbb
and
and
cltd
and
movsl
sub
inc
jg
call
adc
pop
lods
out
mov
push
sbb
add
loop
or
insl
int3
mov
sarl
out
jge
ret
push
mov
repz
int3
incb
shr
fadd
sub
das
fimuls
push
in
add
fs
sub
sub
imul
mov
push
dec
cltd
cli
mov
or
mov
add
push
adc
scas
push
fmull
fsubp
loop
movsb
inc
std
xchg
ljmp
pushf
sbb
imul
sub
dec
aaa
inc
pop
imul
cli
push
stos
jae
mov
jp
popf
pop
enter
cld
cmc
jmp
push
imul
ds
push
jnp
les
xchg
sub
lret
cli
fdivp
jb
xchg
stos
mov
jg
test
push
sbb
push
sub
inc
out
ret
fisttpll
popf
loopne,pt
insl
xchg
push
pop
cwtl
xchg
cmp
or
clc
pop
imul
repz
pop
sarb
inc
dec
popf
mov
fldenv
cmp
jb
aaa
push
addr16
aam
jmp
in
cmp
push
imul
mov
push
pop
mov
adc
int
shr
dec
dec
push
enter
add
inc
inc
fbstp
movb
xchg
iret
dec
inc
xor
addr16
xor
mov
ret
das
rcr
iret
jecxz
and
adc
lret
dec
bound
sbb
das
and
mov
add
cmp
push
pop
jns
js
call
fimull
mov
int
cmp
pop
fisttps
cwtl
push
push
xchg
sub
fadds
addr16
pop
rcrb
clc
aas
jae
xor
and
rcrl
push
mov
mov
pushf
jg
fs
xchg
js
inc
loop
ljmp
dec
out
icebp
aad
es
sub
cli
xor
dec
jne
aad
adc
push
out
aad
adc
iret
cmp
rolb
out
ljmp
in
bound
clc
dec
push
pop
repnz
fsub
jle
mov
stos
data16
or
sbb
lret
push
jnp
inc
imul
dec
pop
adc
in
lret
mov
clc
push
inc
popf
pop
lret
shrb
sahf
imul
and
js
pop
das
pop
aam
inc
dec
push
leave
and
jl
rcrb
pop
out
dec
cmp
pop
sbb
sbb
scas
jo
mov
hlt
inc
pop
dec
cmp
push
mov
jb
test
push
dec
lock
popf
mov
popa
or
add
adcb
mov
mov
dec
lods
std
xorb
cmpb
jp
pop
mov
js
jl
sbb
jnp
inc
sub
xchg
shl
cmp
mov
sarb
ret
mov
test
fiaddl
int3
sub
pop
sbb
jb
xor
pop
ret
adc
lods
pop
push
or
lret
or
inc
mov
xchg
mov
jns
aad
cmp
xor
icebp
jp
push
repz
push
cltd
dec
and
les
dec
add
xor
pop
movsl
jge
inc
mov
push
mov
clc
xor
fadds
mov
sar
jmp
add
movsb
sub
pop
push
add
and
call
mov
out
decb
sbbl
loop
enter
js
js
cmpsl
pop
mov
push
pop
add
fs
pop
cmp
push
dec
mov
jno
dec
je
inc
test
scas
outsl
xchg
insl
pop
xor
jecxz
stc
pop
or
add
adc
shll
insl
lods
xlat
inc
fimull
adc
pop
lds
sbb
pop
bound
sbb
mov
sbb
outsl
lea
xor
inc
in
pop
enter
lods
xor
xlat
in
jnp
adc
movsl
fnsave
movsb
fistpl
cmp
lret
lods
cwtl
sub
ja
cmpl
pop
int
pop
xchg
lret
or
rol
or
les
outsl
js
nop
dec
jne
jmp
inc
or
aaa
sbb
ljmp
lret
dec
xor
cmp
sub
cmp
inc
xchg
dec
loop
xor
mov
inc
pusha
rcll
lock
cmp
sbb
jmp
push
mov
sub
das
pop
lock
or
sbb
hlt
jae
imul
mov
ds
repnz
sbb
test
inc
sub
adc
cld
insl
aad
xor
xchg
inc
mov
lret
jl
outsl
or
in
push
loopne
pop
sub
daa
pop
nop
push
xor
js
int
lret
jl
iret
or
loope
stc
sarl
jecxz
notb
decl
vprotq
lcall
fcomps
adc
xorl
into
cmpl
repnz
sbb
stc
pop
mov
flds
daa
xchg
fdivrs
pop
mov
mov
push
lods
arpl
lret
adc
clc
push
in
push
sti
ret
out
ret
andb
into
or
and
scas
and
mov
pop
ljmp
fsubs
jno
and
insb
mov
rorl
adc
inc
pop
push
mov
ret
test
mov
pop
mov
cmp
mul
out
lock
xor
inc
jno
add
clc
out
and
jg
mov
jl
std
lea
push
cltd
add
inc
inc
pusha
jbe
aam
or
loope
inc
and
push
pop
inc
outsb
sahf
sbb
pop
shl
pop
jnp
ss
daa
das
lret
iret
addr16
pop
lret
out
xchg
pop
into
dec
data16
nop
jnp
ficompl
inc
mov
jne
ret
add
jg
push
fistps
ljmp
aam
xchg
dec
in
inc
icebp
jge
fcoml
mov
jmp
mov
ljmp
jmp
dec
into
add
dec
push
or
fs
pop
mov
jne
loop
add
mov
f2xm1
div
insb
mov
psubd
fisubl
xlat
scas
mov
or
xchg
and
lret
lret
test
cmp
mov
test
mov
xor
stc
shrl
out
xchg
ret
jg
js
fwait
lds
or
cmpsl
addl
inc
bound
sbb
psubsb
push
add
call
leave
adc
ljmp
add
mov
jns
stos
sbb
js
add
add
cltd
loope
mov
sub
mov
ret
push
movsb
icebp
ret
jae
sub
inc
xchg
mov
pop
add
push
or
inc
fnstsw
sbb
adc
mov
int3
and
js
cmp
pop
jmp
fcmove
mov
mov
mov
dec
mov
clc
pop
push
das
dec
cmp
into
scas
and
xor
stc
loopne
ffreep
scas
lock
mov
or
mov
vmovd
mov
ret
sbb
push
sub
mov
fstpl
xor
jbe,pn
mov
xchg
outsl
fs
cltd
mov
add
mov
mov
loope
xor
xlat
stos
nop
cmpsb
test
fidivrs
push
int3
adc
out
shll
stos
in
ror
lcall
jns
add
insl
cmpsl
int
fimull
cli
cmp
dec
xor
or
pop
fbstp
and
adc
cmp
scas
dec
repnz
jo
pushl
aaa
and
mov
jno
dec
fs
mov
hlt
and
lcall
mov
pop
pop
mov
in
mov
jno
test
jne
cwtl
cmp
push
sti
sbbl
push
ds
sub
stos
mov
shr
stos
test
ds
rcll
sbb
dec
inc
loop
stos
pop
addb
adc
imul
lahf
out
inc
mov
loopne
gs
jge
jns
jmp
fcmovbe
sbb
movsl
fs
add
pop
adc
call
nop
inc
mov
mov
jg
pushf
lcall
adc
inc
inc
outsb
mov
dec
leave
or
in
and
xchg
repnz
jae
in
int
xchg
push
dec
mov
mov
dec
jge
push
orb
pop
inc
sbb
mov
sub
bound
test
jecxz
pop
push
pop
call
je
mov
jb
jae
popl
outsl
pop
mov
inc
rcrb
in
xor
pushf
fistpll
jmp
push
int3
fbstp
rcll
and
cltd
outsl
add
push
xchg
xor
lret
stc
pop
and
xor
inc
dec
adc
or
push
outsl
sbb
pop
lods
outsb
sbb
inc
out
fldt
ret
jle
ds
xchg
ljmp
aas
push
pop
pop
imul
iret
and
mov
jae
sub
mov
sbb
jnp
mov
clc
mov
jbe
pop
cmp
cmp
lds
mov
mov
push
xor
and
rcrb
in
inc
cs
aam
gs
inc
cmp
insb
mov
mov
add
jle
stos
add
repz
out
push
jmp
int3
in
sbb
and
or
insl
int
adc
or
cld
xorl
dec
mov
jp
leave
mov
mov
push
xor
dec
xlat
jne
in
xchg
rol
or
jb
xor
mov
sbb
push
xor
jl
add
pop
push
aad
jae
jnp
imul
hlt
outsb
jge
pop
in
test
into
and
jbe
sbb
add
mov
xor
jecxz
dec
in
sbb
adc
adc
push
pusha
testl
int3
push
pop
push
adc
out
js
mov
scas
mov
xor
mov
jle
mov
fdivrp
jo
out
rcl
mov
ret
cmc
jp
into
push
xor
adc
into
scas
jp
stc
leave
sub
jae
aad
stc
icebp
lock
mov
inc
xor
sbb
int3
mov
adc
aas
ja
fistpl
stc
insb
pop
fcompl
data16
sub
cmp
mov
jnp
fdiv
loopne
daa
mov
jl
sarl
push
pushf
add
pop
sub
ljmp
jge
adc
mov
jmp
mov
inc
mov
dec
shlb
jns
das
push
mov
pop
dec
lret
outsb
es
inc
mov
xor
xor
sub
mov
add
push
jg
lods
mov
out
aaa
ljmp
cmpsb
js
mov
jae
ljmp
inc
cld
jns
loop
adc
call
iret
ret
mov
cmp
and
pop
movsb
movsb
and
xchg
cld
lcall
je
jnp
cmp
mov
adc
lods
push
mov
mov
push
inc
add
or
pusha
or
shrl
push
mov
scas
sub
mov
enter
scas
add
adc
gs
jmp
incl
cmpsb
xchg
adc
xor
jge
mov
test
sbb
add
popf
iret
cli
cmp
fxam
pop
sub
or
xorb
mov
mov
das
push
add
out
lret
std
sbb
arpl
inc
mov
pushf
xchg
cmp
adc
js
scas
pop
xor
in
adc
jg
shrl
leave
rclb
sbb
xchg
into
add
inc
sarb
shr
les
push
sub
cli
sub
fbld
or
cmpsl
cli
xorl
cmp
mov
or
ss
ja
pop
dec
aad
xchg
jo
push
mov
lcall
inc
or
jae
jo
sub
pop
add
repnz
pushf
popf
mov
jecxz
add
mov
or
and
outsb
dec
mov
sti
pop
cli
cltd
jo
mov
mov
mov
sub
leave
hlt
push
popa
std
jae
and
sub
or
outsb
scas
sub
das
lcall
fidivl
sbb
adc
dec
jb
cmp
mov
xor
iret
mov
adc
cmp
pop
push
pop
cmp
bswap
cs
dec
inc
push
mov
or
push
inc
jo
dec
ret
leave
mov
out
push
pop
sbb
push
mov
push
outsl
xchg
loopne
cltd
mov
sbb
pop
xor
push
movsb
sbb
dec
xchg
lea
or
xchg
testb
xchg
lahf
mov
ret
pusha
mov
movsb
cmp
mov
add
mov
aad
scas
add
pop
mov
cwtl
gs
lods
xor
das
add
lret
lea
xchg
je
shlb
pop
inc
mov
add
cmpsb
iret
addr16
lea
test
aas
rcl
xor
xchg
or
ljmp
cmpsb
stos
sub
hlt
rcr
gs
out
adc
or
nop
dec
push
bound
pop
pop
rclb
es
pop
inc
jmp
iret
mov
mov
rorl
jge
mov
xchg
jae
mulb
or
dec
cmp
mov
adc
inc
fstl
imul
addr16
out
shrb
clc
mov
mov
icebp
movsb
sub
sbb
notl
scas
dec
push
mov
pop
ss
outsl
cld
sub
into
jnp
pop
inc
sub
jp
lock
cs
push
aas
mov
shrl
nop
jnp
and
jmp
mov
or
inc
sub
inc
stos
enter
aam
ds
divl
data16
or
xor
sbb
call
adc
adc
push
add
xchg
pop
push
arpl
lods
inc
push
test
mov
cmpsl
pushf
cltd
rcr
mov
push
cmpsl
les
push
mov
pop
out
es
je
mov
pop
jge
lret
mov
scas
test
div
gs
pushf
sub
je
test
movsl
movsl
sbb
sub
adc
or
mov
mov
ljmp
divb
out
outsb
push
fldcw
mov
cmp
jns
loop
mov
mov
or
dec
inc
mov
hlt
imul
leave
cmp
and
ss
stos
sub
out
pushf
dec
add
add
lods
fdivs
pop
push
lods
jbe
add
and
inc
lods
test
push
lahf
xchg
jae
adc
out
call
xor
cmp
outsl
xchg
rolb
pop
cmp
jbe
cmp
jmp
xchg
out
or
sbb
inc
scas
ret
mov
into
mov
xor
mov
xchg
or
in
sahf
imul
inc
inc
stc
js
and
fcomi
aam
xlat
repz
mov
fidivrl
add
cwtl
lret
cmp
das
aas
outsl
or
or
inc
aam
test
jae
movsl
sbb
mov
je
sahf
mov
lret
scas
mov
inc
test
xor
push
into
rclb
push
lahf
sti
fildl
xchg
sub
mov
gs
stc
xor
addl
imul
sub
int
fisttpl
adc
or
test
enter
aam
and
std
adc
push
xor
or
lahf
jge
ret
sbb
data16
fucom
sbb
sub
leave
inc
or
dec
pop
add
inc
mov
out
mov
xchg
icebp
inc
cld
add
std
fwait
jbe
rolb
jle
or
scas
pushl
or
sahf
cmp
jnp
pop
or
mov
popf
lods
xor
bsf
jg
jae
shrl
int
pusha
cmp
push
rol
sub
adc
pusha
ds
sahf
mov
push
aas
fsub
sarb
inc
mov
sub
sti
lods
xchg
test
cs
mov
and
loope
sbb
lea
pop
outsb
fs
cmp
jle
ja
mov
fstpt
test
scas
jmp
lahf
punpckhbw
movsl
jle
add
xchg
lods
bound
mov
adc
cmp
in
add
cmc
pop
mov
scas
loope
xchg
sbb
aas
rcll
mov
jb
outsb
adc
mov
out
push
mov
inc
xor
sti
sbb
lea
loop
pushl
xchg
shll
fwait
out
out
pushf
rorl
lods
aad
sub
jo
push
xchg
aas
sbb
aaa
lret
inc
into
and
loope
cwtl
xchg
out
out
dec
mov
cmpsb
sbb
add
xor
adc
sub
cmp
mov
xlat
popf
mov
jbe
xchg
xchg
subb
cwtl
mov
mov
mov
mov
xor
stos
jo
jbe
out
jb
idiv
lcall
arpl
fwait
adc
mov
mov
shll
mov
cmp
add
xor
jae
shrl
sbb
and
or
clc
or
push
push
or
mov
xor
mov
xchg
in
lock
subb
mov
pop
loopne
fmuls
sub
call
pushf
adc
pop
inc
sbb
dec
ficompl
or
adc
seta
xchg
outsb
inc
sar
inc
lret
sbb
jp
dec
and
jge
leave
inc
sbb
push
dec
adc
lcall
mov
mov
testb
jg
xchg
sahf
dec
add
movsl
adc
sub
mov
cmp
cli
call
jno
push
outsb
aad
rcrb
jle
pushf
and
je
lds
stc
popf
dec
cmc
mov
and
mov
sub
aad
out
fnstsw
push
mov
or
mov
add
sub
sub
bound
cmp
ss
push
mov
les
cmp
das
not
inc
mov
aam
std
mov
add
outsb
mov
mov
mov
pop
xchg
sub
adc
jns
mov
push
andb
cmp
pushf
xchg
add
push
scas
adc
rolb
jb
pop
call
sub
bound
xchg
mov
imul
call
filds
out
fidivl
js
adc
ds
and
out
sbb
lcall
push
xchg
pop
bnd
inc
adc
jo
ret
dec
and
frstor
push
push
pop
add
add
dec
dec
fld
fisubrs
mov
adc
adc
hlt
loope
xchg
int
cs
mov
and
mov
and
and
outsl
sub
outsb
pop
xlat
push
xor
push
inc
lret
cmp
jbe
pcmpgtw
lock
into
pop
and
sbb
jl
sub
jnp
mov
xlat
jb
out
outsl
sub
and
icebp
mov
xchg
xchg
and
das
stos
mov
push
mov
cmp
inc
lock
int
adc
movsl
in
inc
cmpb
xchg
sub
push
fucomi
aaa
and
repnz
lret
push
insb
in
mov
rclb
jne
add
xor
aas
pusha
jno
and
adcb
push
ds
daa
xchg
jne
push
mov
rcrb
inc
adc
xor
aas
push
jl
pop
inc
test
inc
sbb
fsubrl
je
sahf
mov
jns
jno
jge
mov
jae,pt
dec
dec
mov
xlat
jnp
adc
nopl
inc
cmc
or
mov
mov
sub
push
clc
push
jb
leave
lods
mov
imul
icebp
inc
or
stos
jg
ret
mov
pop
push
push
int3
cmp
insl
addb
data16
and
mov
fidivrl
into
out
jns
test
or
je
movsb
add
adc
scas
fsubrl
stc
jnp
movsb
or
rcrl
ficompl
adc
int3
xchg
sar
shl
cmp
push
adc
mov
loopne,pn
add
mov
sbb
clc
cmp
pop
pop
lock
mov
and
dec
xor
or
leave
mov
sbb
cmp
leave
pop
lret
emms
mov
in
or
lret
xchg
je
adc
ljmp
iret
test
jb
pop
in
iret
add
or
cmp
pop
hlt
jmp
popa
pop
dec
sub
mov
jo
inc
pop
push
dec
iret
int
ror
lods
jl
pop
popa
loope
pushf
xchg
wbinvd
stos
inc
aaa
or
call
aam
add
sbb
add
ljmp
cltd
pop
js,pn
push
mov
sub
pop
nop
jecxz
rcrb
mov
xor
stos
xor
arpl
rorl
jmp
imul
mov
fstpt
add
pop
shlb
sbb
outsl
push
cmp
dec
adc
orb
into
out
jno
push
rcrl
xchg
lcall
sub
bound
stos
sbb
lods
cmp
int
mov
leave
insb
call
sti
movsb
mov
fbstp
pop
mov
push
cli
sbb
ret
das
fbld
jmp
xor
gs
jbe
push
mov
in
aam
mov
mov
fsts
inc
jnp
xchg
push
test
or
call
inc
out
add
fwait
sti
imul
dec
xchg
and
xchg
lahf
mov
xor
or
shlb
sub
out
and
jle
inc
pop
add
add
mov
push
aas
out
loopne
loope
stos
out
add
mov
inc
or
push
pop
cld
jno
insw
pop
push
fcomip
jne
inc
imul
and
xor
mov
cli
cmp
xchg
dec
popa
fsts
scas
xchg
push
fistpl
jmp
mov
mov
xorl
jge
out
repz
insl
scas
bound
and
pop
js
pop
mov
insb
das
cmp
out
jmp
fwait
outsb
push
and
std
and
test
sbb
adc
pop
mov
stos
or
rcrl
jne
jb
icebp
lahf
push
dec
inc
test
xchg
push
aad
pop
cmp
fmuls
sub
sbb
push
sti
data16
fsts
inc
das
shl
enter
and
cmp
and
sub
gs
sbb
add
xor
adc
push
incl
add
lds
cli
je
dec
mov
mov
jae
jg
andl
push
pushf
int
mov
xchg
fs
testl
scas
fwait
dec
sub
flds
pop
lds
sbb
xor
xchg
imul
push
ret
out
pop
add
lods
loop
jb
xchg
mov
xor
mov
jne
adc
dec
enter
sbb
test
mov
or
adc
sub
push
pop
sarl
arpl
outsl
push
femms
sbbl
outsl
js
out
icebp
imul
add
fmulp
mov
cmpsb
add
or
ljmp
adc
mov
mov
inc
push
xor
mov
int3
pusha
xchg
stos
adc
cmp
sub
scas
jae
out
cmp
dec
cmp
pop
and
xor
inc
subb
mov
xchg
loop
movsb
out
and
aas
fldl
jl
xor
bt
and
into
rorl
pushf
inc
lods
dec
scas
mov
dec
jge
and
or
jns
jo
cs
js
sub
fdivrs
or
jl
fisubrl
xchg
scas
fistps
mov
je
lock
out
adcl
adc
fcmovnb
es
jno
dec
xchg
adc
or
and
out
sbb
testb
adc
cwtl
sahf
ja
xchg
jb
and
mov
call
shrb
iret
jo
inc
loopne
mov
sub
popf
repnz
cmp
bound
mov
das
or
jne
xchg
aam
mov
cld
inc
pushf
sub
cmpsl
hlt
xchg
movsb
ret
or
shll
ret
leave
fisubl
dec
push
popf
mov
pop
xor
inc
test
fsubs
jle
pop
cmp
pop
outsb
ljmp
mov
rsqrtps
pop
xor
mov
test
fildl
xor
loop
dec
adc
xor
or
out
inc
xor
scas
cwtl
cwtl
mov
add
add
xchg
test
mov
xchg
sbb
add
movb
push
push
pop
dec
pop
jnp
fisttps
pusha
or
sbb
inc
shrl
mull
xlat
inc
xor
add
and
push
pop
lock
cs
and
and
lret
or
iret
push
jmp
lcall
push
cmpsb
xchg
or
push
ret
xchg
sub
or
icebp
xchg
dec
mov
les
push
cmpsl
sub
fadds
xchg
cmp
scas
popa
pushf
fs
push
mov
popf
jecxz
dec
test
imul
or
jge
add
cwtl
cmpsl
mov
into
push
xchg
scas
and
hlt
mov
xchg
xlat
imul
jecxz
push
inc
xchg
xor
popf
push
and
test
xchg
pop
dec
push
sahf
push
shlb
test
cld
xor
imul
pop
sahf
lret
and
cmp
sbb
cltd
inc
mov
dec
mov
lcall
sbb
xchg
or
mov
xchg
lds
mov
pop
in
mov
cmp
out
xor
inc
lret
addb
flds
push
push
mov
and
inc
sbb
and
add
xchg
loopne
sub
or
daa
ja
mov
test
xchg
shl
sub
lods
ret
and
pop
push
or
pusha
test
add
cwtl
inc
cmp
sub
test
aas
sub
and
jae
loope
mov
pop
negl
es
lcall
or
jno
cmp
mov
or
mov
pop
add
mov
mov
insl
repz
imul
pop
daa
pop
decl
out
and
pop
mov
push
sub
dec
push
lods
outsl
lods
shll
aaa
test
lret
addl
xor
lahf
jnp
sbb
sub
lret
sbb
jl
pop
sub
cmpsl
cld
adc
data16
daa
cld
sub
add
pop
test
xor
or
inc
rcr
test
jnp
sbb
mov
lret
cwtl
pop
aam
inc
xchg
dec
cli
mov
cmp
lret
sbb
hlt
pop
and
adc
rcl
insl
push
push
rorb
int
fs
mov
mov
xor
dec
test
push
pop
mov
cmp
mov
rclb
sub
outsl
pop
xor
test
je
adc
pop
inc
xlat
push
push
call
or
mov
or
mulb
aam
cmp
xchg
mov
mov
jno
ret
sbb
sti
lret
in
mov
xchg
cmp
xor
gs
dec
jnp
sub
fwait
mov
pop
xchg
int
push
orb
pop
xor
push
flds
outsb
sub
fst
aas
call
sub
cltd
repz
sbb
loop
in
js
xchg
loopne
std
movsb
sahf
movsl
ret
xchg
sub
push
push
in
stos
xchg
xchg
push
sub
fwait
dec
cli
iret
in
sub
xchg
pop
in
inc
bound
gs
jecxz
add
int3
mov
bound
and
mov
cmpsb
loopne
loop
push
xchg
mov
cmp
dec
sbb
mov
je
adc
or
nop
push
xchg
inc
fistpl
mov
cs
or
dec
shll
sub
inc
push
push
int3
adc
pop
mov
sbb
lock
add
in
dec
stc
aad
icebp
xchg
mov
out
inc
jo
mov
aam
sub
and
push
push
iret
and
sarl
test
mov
lods
cmp
jle
int3
jne
mov
in
lcall
cmc
cmc
out
lahf
addr16
sbb
aas
push
loope
mov
push
xchg
mov
jmp
adc
mov
js
adc
xchg
sub
mov
mov
in
cmpb
mov
push
xchg
clc
nop
stc
jl
lret
or
scas
mov
xor
jnp
sbb
xlat
popf
dec
and
sbb
negl
aaa
adc
or
mov
jb
push
lds
je
sub
cmp
mov
in
iret
pop
push
push
push
shrl
pusha
xor
fwait
xorb
or
in
and
fs
jb
mov
scas
sbb
outsb
cmp
mov
mov
cmp
mov
mov
fldt
mov
adc
push
lods
dec
jle
xchg
mov
xchg
mov
ud0
add
aad
lock
sub
mov
xlat
jl
or
push
push
sbb
xor
in
stos
mov
add
pop
inc
jge
and
sbb
xchg
sbb
sbb
mov
push
rep
inc
mov
mov
lea
cltd
mov
fldcw
pop
jp
xor
adc
push
dec
adc
push
xor
pop
xchg
mov
mov
cmp
das
push
lcall
inc
insb
subl
test
inc
lret
daa
mov
sbb
std
sub
dec
shld
add
jg
push
dec
lock
loopne
lret
push
lret
push
loopne
out
push
and
leave
jb
mov
xchg
lds
ds
sbb
push
in
push
jecxz
or
ljmp
ds
dec
mov
fwait
hlt
sbb
sub
icebp
pop
test
push
jg
jno
xchg
inc
xchg
or
cmp
sbb
or
or
mov
adc
sub
jecxz
insb
jmp
and
push
xor
push
cltd
sub
or
xchg
outsl
dec
sbb
popa
jns
cli
rep
push
sti
movsl
pop
fnclex
jbe
lods
xchg
negl
test
outsl
mov
mov
xrelease
imul
sbb
cltd
js
fildl
loop
dec
roll
pop
jbe
mov
addl
mov
jnp
cmpsl
and
cmp
cs
add
addl
mov
rorl
sub
push
jmp
cmp
es
and
icebp
pop
fstp
dec
pusha
fdivrs
or
inc
mov
pusha
int3
loope
sbb
mov
movsl
shlb
stc
cwtl
jbe
jbe
ficompl
jns
adc
pop
iret
int3
or
inc
mov
adc
sti
jl
data16
pop
andb
mov
test
adc
movsl
adc
dec
sti
repnz
mov
push
xchg
fdivs
movsl
fcompl
int3
repnz
mov
es
jmp
test
movsl
ficoml
sbb
scas
adc
std
in
mov
sahf
pop
iret
jno
jb
mov
sbb
and
and
xchg
xchg
mov
es
push
and
mov
jg
ljmp
mov
dec
adc
push
lea
mov
mov
xchg
stos
aas
icebp
dec
cmpsb
loop
cmpsb
pop
flds
mov
xchg
in
pusha
iret
inc
pop
clc
test
je
xchg
dec
mov
movsb
bound
mov
xchg
or
inc
adc
es
add
mov
jnp
int
add
scas
xor
push
push
jle
pop
jl
sbb
lods
int
push
pop
rcll
push
pop
in
fistpl
scas
cmp
mov
roll
sbb
mov
inc
xlat
scas
aas
jmp
pop
ss
inc
push
adc
pmaxsw
sbb
xor
pop
mov
sbb
sbb
cwtl
inc
pop
cmp
mov
jb
dec
fwait
and
js
push
mov
addr16
pop
xchg
scas
nop
inc
aam
lea
sti
xlat
shrl
cmpsb
lcall
dec
ja
stc
int
push
in
shr
test
ljmp
add
xchg
and
sub
pushf
outsb
stos
pop
fldcw
jge
pop
sbb
shll
adc
pop
sub
or
sahf
mov
inc
mov
lea
push
add
es
mov
popf
je
cmp
bound
add
xchg
pop
sarb
mov
out
mov
xor
jge
dec
jb
mulb
pusha
mov
cmpb
add
sbb
sti
enter
sbbl
push
mov
pop
fs
adc
or
jo
movsb
pop
xchg
sbb
jle
scas
jae
xor
loopne
mov
fdivrl
jecxz
sahf
js
test
out
iret
pop
mov
mov
mov
xor
dec
pusha
es
jb
xor
into
mov
ficoml
mov
test
mov
mov
xor
dec
rcrl
imul
mov
jmp
enter
push
xor
cltd
ret
jae
mov
lods
jnp
aaa
jecxz
sti
test
lods
dec
clc
add
mov
mov
aaa
cmp
in
or
test
push
add
xchg
fs
cwtl
ret
fldl
les
pop
xchg
movsb
movsl
add
insl
add
gs
dec
sub
mov
rorb
xor
or
sub
push
js
inc
jl
push
xlat
sbb
test
movsl
push
ds
push
stc
repz
mov
push
daa
push
pop
stos
into
scas
in
lea
fisubrl
std
out
sbb
push
rorb
mov
lret
xchg
push
into
mov
sbb
jle
inc
and
sbb
daa
addr16
jnp
dec
push
sbb
negl
push
imul
fsubrs
gs
dec
mov
inc
dec
and
sarl
and
ja
dec
and
pop
dec
test
sahf
stc
sub
nop
mov
nop
fwait
hlt
mov
ljmp
jle
sub
dec
jb
pop
mov
pusha
sub
add
fidivs
pop
imul
add
cmpl
push
pop
movsb
xor
or
jecxz
pushf
dec
cmp
push
dec
clc
js
lds
enter
or
add
sbb
adc
mov
test
outsl
mov
rcrl
push
shll
add
jl
xor
mov
loope
scas
jl
mov
call
ss
pop
jmpw
mov
test
mov
adc
pop
into
xchg
fists
loope
mov
clc
mov
mov
mov
pop
xor
cmp
inc
push
pop
add
xchg
jne
cmc
movsb
mov
andl
cmp
sub
or
test
push
mov
and
dec
cmp
into
jmp
dec
fisttps
mov
xor
sub
push
xchg
out
adcb
or
data16
repnz
mov
jbe
dec
sub
cmp
xor
loopne
icebp
sti
jnp
inc
fmull
adc
sbb
mov
cmp
test
call
ror
or
addr16
push
test
mov
push
data16
movsl
sub
cmp
add
inc
movsl
stos
data16
lock
pop
inc
sarb
je
and
in
push
xchg
arpl
fldl
add
repnz
roll
inc
mov
xchg
pop
push
push
lcall
movsb
inc
aad
cmpsb
lahf
mov
jle
inc
sbb
into
and
xchg
mov
js
aad
mov
lods
cli
jne
cwtl
les
cmp
push
adc
sub
leave
pop
adc
mov
pop
push
mov
push
dec
pop
mov
bts
add
jo
dec
mov
repnz
pcmpeqw
sbb
loopne
xchg
bound
xor
xor
jno
cmp
add
aaa
push
or
fcmovb
pop
hlt
lea
in
daa
movsb
adc
mov
jae
shlb
popa
sbb
cltd
clc
roll
nop
test
inc
xor
pop
in
pop
push
jmp
sbb
sbb
xor
mov
mov
lret
pop
rclb
or
ret
mov
adc
or
xchg
xor
in
fcmovnb
push
cmpsl
ljmp
aaa
inc
dec
add
and
sahf
jge
mov
repnz
jmp
ret
pop
jl
fmull
xchg
dec
xchg
and
jnp
les
nop
bound
xlat
sbb
sub
xchg
arpl
xor
and
mov
jo
int
ljmp
lret
sti
sbbb
inc
mov
xchg
in
loope
dec
es
addb
orl
xchg
adcb
rorb
divl
sub
clc
outsb
jg
cwtl
xor
cmpsl
mov
mov
xchg
call
mov
test
adc
add
ret
lock
jae
ret
cld
pusha
mov
pop
push
add
ja
add
pop
xchg
ss
gs
xchg
mov
int
scas
adc
in
mov
sbb
rorb
cmp
in
test
sbb
shl
sub
xor
lea
test
dec
sub
loop
sub
out
sub
jo
outsb
lods
mov
lock
stos
push
lods
leave
stc
jbe
push
jmp
into
mov
xchg
pop
fbstp
sub
xor
pusha
loop
jecxz
or
push
lcall
mov
adc
loop
and
cltd
popf
imull
cmp
push
ja
loop
inc
jl
test
mov
and
adc
jg
in
std
mov
into
stos
cmp
scas
mull
mov
jns
lods
jnp
push
adc
scas
or
icebp
ret
xchg
lret
add
cmpl
into
xchg
negb
sbb
std
in
in
outsl
mov
cmp
js
sbb
lret
push
lods
pop
daa
dec
xor
fdivrl
mov
mov
call
inc
cs
inc
repnz
aaa
imul
xor
cld
mov
and
mov
and
pop
ss
jb
adc
lret
aas
loopne
bnd
cltd
fucomi
pushf
push
and
dec
dec
mov
push
push
loopne
in
fwait
push
les
ja
clc
add
cmpsb
jmp
int3
repz
leave
push
and
in
jne
xchg
daa
pop
jmp
adc
xor
aam
inc
enter
fwait
jg
cmp
cvttps2pi
fiadds
out
jmp
push
imul
lcall
sub
mov
lahf
outsl
aam
inc
sbb
dec
add
iret
inc
ss
jno
push
or
push
inc
sub
lahf
xchg
or
mov
sarl
call
es
iret
icebp
inc
repnz
xchg
in
fdivp
popf
call
mov
cs
cmp
jmp
stc
inc
push
push
lcall
test
enter
stc
outsl
mov
xor
pop
dec
mov
in
jbe
sbb
cwtl
fnsave
push
popa
je
mov
xchg
ret
popf
or
push
imul
add
push
lahf
pop
ljmp
sub
sbb
jne
mov
loope
mov
ret
data16
movsl
dec
out
cmpsb
loope
sub
lock
cmp
popf
pop
add
js
outsl
incb
ret
push
popf
jno
mov
jae
cltd
push
push
inc
nop
lods
ror
pop
push
dec
cmp
jmp
push
fdivl
jno
sbb
xchg
pop
pop
imul
push
in
scas
cwtl
dec
pop
or
lahf
sub
and
add
addb
pop
jae,pn
std
xor
jnp
daa
nop
test
pop
xchg
test
fs
gs
imul
mov
jnp
xchg
mov
and
pop
in
out
push
xchg
pop
mov
stc
hlt
inc
ficoms
cmp
mov
dec
mov
pop
xchg
jnp
push
mov
ljmp
bound
push
loopne
addr16
add
je
xchg
or
popf
out
addr16
js
outsb
or
xor
adc
adc
lea
int
aas
jae
and
bound
pop
movsb
les
mov
dec
fs
repnz
lahf
push
out
mov
adc
movsb
je
aam
xor
cmp
xchg
cmp
sub
pop
inc
out
inc
leave
ret
out
xchg
les
jmp
lret
pop
inc
jnp
lods
and
lods
xchg
cwtl
fyl2x
stos
adc
mov
repz
jl
add
jmp
mov
cmp
jmp
dec
sbb
jp
or
mov
mov
inc
inc
and
sub
fwait
or
pop
push
orb
dec
out
roll
jl
add
xchg
ljmp
in
adc
movsl
add
rcrb
adc
mov
mov
arpl
test
test
mov
in
and
je
movsl
mov
fmulp
dec
mov
xchg
jns
lret
fwait
in
jle
dec
test
xor
shll
sbb
dec
mov
stc
mov
xchg
mov
dec
movsb
pop
xor
dec
out
adc
pop
xchg
mov
or
aas
insb
in
subl
dec
pop
fucom
daa
ret
loop
adc
es
mov
push
stos
mov
xlat
push
mov
dec
mov
push
mov
leave
and
lret
adc
and
daa
call
inc
mov
shl
xchg
sbbb
pop
mov
mull
adcl
or
xor
jle
jg
aas
mov
adc
inc
outsl
test
test
ret
mov
lods
test
xor
cmp
and
insl
add
jmp
fcomip
cmp
pushf
jne
imul
sbb
push
lock
mov
inc
xor
or
xchg
addr16
in
dec
sbb
xorl
popa
js
cmp
frstor
test
stc
sub
xchg
into
and
je
lahf
or
dec
cmp
adc
push
fistpll
addr16
xorb
scas
in
lcall
sub
and
sub
push
jbe
mov
xor
call
fsubrs
shll
les
fcomip
mov
xor
adc
dec
enter
pop
pop
out
jo
lret
divl
lahf
rdpmc
int3
xchg
in
fisttpll
inc
xchg
mov
jg
repnz
cltd
xchg
add
aas
push
and
stos
pop
mov
call
shrb
xchg
xchg
lds
stc
outsl
mov
adc
test
adc
shll
push
cli
dec
add
cltd
mov
adc
testl
in
jae
fsqrt
mov
std
aam
xchg
scas
rcll
jnp
xchg
inc
iret
mov
ret
mov
int3
jo
call
js
in
and
mov
push
gs
gs
push
mov
inc
push
xlat
mov
and
in
ficompl
das
xchg
mov
xor
push
sbb
adc
push
push
loope
mov
stos
mov
test
xchg
les
dec
mov
test
pop
jno
stos
call
sbb
les
add
mov
xor
push
xor
push
pusha
sub
adc
cld
add
xor
dec
adc
push
pop
inc
into
lods
call
pop
xchg
sbb
lret
mov
xchg
jno
adc
enter
aad
xchg
rcr
insb
jmp
loop
jns
pop
or
sar
push
loope
inc
xchg
ja
jae
shr
adc
mov
or
rcll
xchg
sahf
push
xchg
sub
cmp
movsb
fxch
cli
mov
lahf
out
out
jb
movsl
sbbb
cmpsb
imul
xlat
pop
pushf
fmull
sbb
pop
icebp
testb
test
mov
jnp
push
cmp
mov
fisubrl
or
add
cld
mov
sub
xchg
jb
test
xor
loope
adc
shlb
push
add
popa
mov
jne
add
push
stos
and
jg
pop
jae
mov
or
nop
adc
push
adc
insb
dec
jmp
pop
daa
sbb
orl
es
lock
pop
das
test
fildll
xor
pop
out
inc
mov
mov
push
mov
aam
cmp
gs
out
sbb
call
in
mov
mov
xor
rorb
dec
jp
cmpl
pop
mov
insl
mov
outsl
push
and
xchg
mov
test
lahf
sub
imul
scas
or
out
and
shrl
push
lock
lret
or
imul
mov
xchg
jmp
mov
jbe
test
imul
or
mov
adc
mov
les
xor
xor
pop
arpl
dec
pop
adc
sarb
add
push
and
cmp
jl
ret
fbstp
add
mov
fdivr
xchg
cmpsb
mov
sbb
movl
ret
loope
cld
arpl
or
jns
ja
scas
sub
jl
imul
stc
cmpsb
cmp
ret
out
fdivrl
test
lods
fcmovnbe
xor
pop
stc
and
pop
pop
dec
ret
xor
sbb
add
inc
adc
mov
sub
jns
xchg
jne
sub
popa
loope
push
fmull
inc
hlt
popa
or
sti
lods
xchg
into
inc
push
fdivrs
push
sbb
negl
and
subl
lret
daa
jmp
xchg
jge
mov
sti
ja
jae
mov
fcomps
add
call
and
dec
sub
jnp
push
ds
dec
outsb
mov
loop
push
mov
adc
inc
cltd
cmp
adc
clc
adc
loope
rclb
es
xor
adc
pushf
xlat
sbb
and
into
push
xor
sahf
jg
mov
mov
fdivl
xchg
ss
pop
cltd
movsb
xchg
push
pop
bound
jge
jge
and
jae
arpl
or
loope
loope
pop
popa
insl
cmpsl
pop
cmpsl
cmp
xchg
jae
out
lret
dec
pop
add
rcll
loope
mov
ror
flds
imul
ja
jge
xchg
cs
sub
icebp
mov
adc
leave
lret
push
icebp
inc
xchg
mov
fs
mov
popf
jl
jae
push
xor
mov
repnz
call
push
inc
add
jae
hlt
insl
sbb
jl
mov
aad
lock
test
cmp
xor
pop
mov
fbstp
mov
mov
or
inc
cmpsb
push
jmp
push
data16
mov
add
ret
inc
inc
jne
out
fildl
repz
cmp
aas
push
popa
xchg
pop
mov
fcomp
xchg
movsb
lcall
stos
push
outsb
pop
mov
sahf
bound
gs
stos
push
popa
aaa
out
leave
in
dec
dec
xlat
mov
xlat
push
add
mov
negl
add
mov
inc
in
sbb
test
jnp
adc
mov
cmp
xchg
push
sub
arpl
add
or
jp
xchg
nop
lret
out
mov
pop
inc
lret
xchg
clc
mov
adc
scas
arpl
pop
clc
jmp
mov
dec
mov
leave
push
jp
xchg
dec
shr
dec
out
fsubrs
jb
rcr
pop
inc
or
out
jne
mov
sbb
sbbb
xor
jns
movsb
push
data16
mov
cmp
inc
lea
lret
ljmp
xchg
stos
cs
outsb
in
std
cmc
jnp
lds
sahf
add
adc
call
sub
pop
add
js
xchg
in
out
js
mov
jle
xor
dec
adc
pop
pop
mov
dec
sub
fcoml
call
mov
dec
jne
sbb
inc
fisubl
hlt
cmp
inc
mov
push
xchg
mov
popa
dec
jbe
in
roll
mov
push
adc
push
push
movsb
in
adc
mov
aam
xor
xchg
mov
push
loop
ret
or
lds
adc
mov
cmp
fmuls
mov
jb
jno
ret
xchg
sub
es
lods
or
insl
inc
outsl
add
push
cltd
out
outsl
test
push
inc
adc
jbe
add
aaa
jle
push
jb
cmp
loope
not
lods
jecxz
lods
ret
imul
jecxz,pn
lret
out
dec
cmpsl
loop
test
xor
xchg
lds
xlat
into
xor
mov
mov
pop
cmpsl
push
in
push
test
cmpsl
xor
sub
jge
mov
cwtl
fcomi
xor
aam
mov
sub
dec
rclb
sub
push
loopne
gs
ret
sub
aaa
shll
or
mov
aam
xor
test
inc
or
faddl
movsl
ss
or
mov
lods
hlt
mov
mov
lret
xchg
mov
adc
cmp
in
out
sub
push
pushl
orl
addr16
push
pop
add
xchg
and
invd
movsb
lahf
xchg
notb
ja
dec
shlb
and
and
fwait
xor
adc
cmp
adc
mov
inc
ja
and
clc
or
orl
into
mov
smsw
sti
inc
ret
dec
xlat
outsl
jmp
ss
ja
sbb
mov
mov
pop
or
sbb
sbb
pop
ret
icebp
or
xor
insl
notl
fwait
ret
jnp
or
mov
loope
mov
push
lds
fists
sbbl
pushf
push
shlb
add
dec
std
adc
jnp
outsl
and
shrb
xchg
cld
clc
jle
cmp
dec
mov
cmpsb
xchg
sbbl
jo
aas
insl
xor
jbe
push
sub
pop
xchg
pop
jae
inc
xor
jmp
jl
in
xor
sub
mov
inc
stc
out
in
xor
jns
push
popf
in
test
mov
ds
popa
das
sub
cltd
js
cmpsb
inc
xchg
mov
repnz
test
cmp
int3
repz
xchg
dec
push
lods
jb
inc
xor
leave
sbb
adcb
inc
xor
push
xchg
mov
cmp
je
cwtl
das
inc
push
fcomps
mov
push
je
or
xchg
inc
sub
jle,pt
aaa
sbb
sbb
mov
mov
inc
sbb
dec
popl
mov
xor
iret
pop
imul
pop
cmp
cmp
pop
je
inc
jns
scas
leave
dec
sti
dec
inc
pshufw
xor
jns
jae
jecxz
ljmp
lcall
data16
fld
bound
mov
ljmp
jl
mov
insb
xchg
scas
push
das
or
sbb
and
mov
ret
sti
xchg
jg
outsl
cmpsb
ljmp
mov
pop
jns
jo
and
les
sub
jp
jmp
scas
cmc
std
pusha
mov
pop
pop
imul
xor
or
push
test
in
clc
pop
dec
mov
rcr
fcoml
mov
dec
cwtl
sub
out
cld
movsb
fsubrp
fcom
dec
inc
inc
jmp
push
shl
stc
icebp
sbb
cltd
data16
fdivs
and
test
sub
cmpsb
fdivl
cmp
jae
mov
jnp
mov
mov
popa
popf
jno
repz
rolb
pop
jp
jnp
inc
mov
and
stos
loop
adcb
fmull
mov
adc
in
mov
jo
mov
loope
or
div
movsb
outsb
cmp
daa
mov
out
or
ret
lods
nop
jne
rorl
jne
jno
xchg
aaa
loope
lds
int3
popa
pushf
nop
cmp
sub
jge
ljmp
inc
loopne
daa
cmpsl
sub
mov
sahf
add
hlt
push
mov
mov
sbb
hlt
loopne
inc
add
jg
mov
sbb
shrb
aaa
pop
mov
cmp
stos
adc
sbb
push
cmp
dec
pop
mov
sbb
lock
les
xor
and
jnp
fcmovbe
rorl
sub
pop
mov
es
adc
xor
add
fistpll
push
mov
add
sub
stos
sahf
dec
pop
adc
mov
mov
adc
adc
push
xchg
or
or
jmp
mov
xor
stc
leave
xchg
mov
outsl
mov
cltd
popw
inc
xor
inc
ret
popa
hlt
fldt
test
and
loopne
lods
ficoml
and
mov
cmp
lods
adc
fcomp
sub
ss
lock
and
popf
add
adc
mov
in
xchg
aad
enter
test
popf
jmp
arpl
das
mov
mov
and
jae
mov
daa
int3
dec
mov
push
cmc
push
shlb
inc
pop
cmp
jmp
mov
push
pop
mov
dec
cs
cmp
mov
xchg
sbb
and
xorl
aad
das
divb
stc
dec
int
pop
and
dec
mov
sbb
ljmp
stc
daa
jle
out
mov
sub
pushf
jg
mov
lret
xchg
pop
push
xchg
in
cmp
jge
test
cmp
enter
hlt
scas
in
cld
cmp
sti
and
fbstp
adc
je
leave
push
imul
adc
scas
sub
sub
test
aam
loop
sbb
jo
cmp
mov
cmp
rolb
popf
stos
xchg
fs
daa
sub
pop
ds
decb
mov
mov
cmp
fcom
add
ret
insb
cmpb
aam
int
outsb
jl
jnp
ja
mov
sbb
add
adcb
mov
test
nop
xchg
adc
xchg
sbb
enter
or
cmp
push
ret
mov
push
jbe
insb
and
pop
push
mov
lcall
sub
inc
lods
loop
push
xor
xorb
or
cmp
jge
ds
out
mov
insl
loopne
cmp
inc
rclb
test
jmp
jecxz
add
call
cmpsb
sahf
lret
cmp
push
xor
into
mov
and
xchg
jle
adc
and
je
dec
mov
pop
div
fdiv
adc
pop
cli
sub
inc
cmp
aad
lret
movsb
stc
rcrl
and
jo
mov
sub
cmpsl
dec
inc
cs
pushf
mov
stos
push
iret
imul
lods
dec
or
xchg
adc
shll
xor
push
aas
test
mov
inc
cmp
loop
adc
stos
pop
xchg
xchg
cmpb
xor
and
dec
adc
sub
cs
mov
inc
mov
push
mov
test
or
xor
popa
dec
sub
inc
into
sahf
or
pop
enter
fadd
mov
lahf
out
fildl
shrl
push
jmp
push
lahf
lret
xor
ja
movsb
push
and
int3
sub
imul
add
push
mov
and
sarb
mov
mov
sti
adc
mov
dec
xchg
rcrl
test
lahf
shlb
hlt
jo
jns
xchg
mov
mov
lahf
xchg
into
das
push
sbb
hlt
and
lds
outsl
xor
sahf
inc
inc
pop
fcmovnb
sti
pop
mov
lcall
adc
popa
cmpsb
cli
xchg
dec
xor
inc
fstp
pop
fwait
scas
lds
xchg
push
adc
rol
dec
sarb
cld
mov
scas
mov
pop
sub
xchg
inc
inc
shll
xchg
xchg
ja
xchg
push
and
mov
sub
jle
push
mov
int
cltd
shlb
cmc
jmp
xchg
mov
mov
jno
fs
add
inc
pop
or
sub
rcr
les
inc
pop
ss
sbb
sbb
xor
mov
cwtl
out
sub
fimull
mov
mov
stos
mov
sub
les
insb
add
jb
test
pop
repz
hlt
xchg
mov
jo
les
sub
xor
lock
xor
cltd
lods
mov
shrb
inc
fiadds
bound
js
xchg
sub
lcall
sub
mov
mov
mov
mov
mov
push
fistpl
jge
cmp
cmp
das
pop
jne
or
jle
out
ficompl
dec
xor
pushf
fdivl
pop
inc
cmpsb
xchg
mov
cmp
rcr
dec
and
test
push
test
test
add
stos
jno
sub
push
std
lahf
ret
inc
push
aaa
bound
mov
mov
in
cmp
fdivl
fnstenv
pop
xor
mov
iret
mov
jecxz
mov
mov
xor
loop
imul
sbbb
push
int
jle
mov
fwait
ljmp
pop
sub
jle
xor
aad
xchg
lods
ss
icebp
jg
mov
insb
mov
jne
mov
push
repnz
cs
lret
movsl
cmp
inc
inc
push
loopne
test
mov
enter
xor
cmp
sbb
ljmp
stc
popf
push
negl
imul
orb
jns
mov
out
mov
mov
jmp
xchg
mov
das
ret
sbb
push
and
or
jmp
test
push
pop
dec
mov
inc
pushf
cs
add
xor
xor
mov
mov
mov
out
test
mov
sbb
inc
add
cmpsb
xor
mov
fisubs
xor
jnp
subl
mov
and
push
mov
out
jne
loope
cmp
shlb
loopne
or
mov
out
adc
xchg
repz
add
sub
jne
xchg
inc
ret
mov
ss
and
pushf
gs
mov
fcmovb
xor
dec
iret
xchg
inc
pushf
test
ds
in
push
add
loope
js
nopl
sti
js
aad
mov
push
mov
xchg
xchg
imul
inc
bound
or
aad
daa
popa
mov
inc
insl
into
xlat
lcall
mov
inc
fistpll
clc
push
je
and
pop
or
push
fsubs
and
or
mov
lea
lcall
add
cmp
addb
inc
adc
icebp
or
into
imul
lods
cmp
add
das
movl
loopne
jbe
or
inc
push
mov
xlat
push
and
sti
neg
jno
xlat
push
xor
mov
sub
insb
lahf
inc
xor
xchg
lods
addb
aas
push
adc
lret
mov
lds
testl
es
mov
mov
call
imull
or
shrl
js
xchg
mov
mov
dec
mov
rorb
push
outsb
rorl
mov
cmpsb
mov
stos
fs
out
lret
mov
stos
cli
imul
in
imulb
dec
pop
jg
mov
pop
out
cltd
and
ljmp
ret
jle
push
dec
dec
stc
in
repnz
pop
jae
add
test
mov
or
movsb
jl
xor
or
insb
cmc
es
inc
sarb
xor
pop
cltd
dec
xorb
xchg
jbe
scas
sbb
jne
and
sbb
stos
test
arpl
nop
push
aaa
inc
and
and
cmp
mov
pushf
es
xchg
sbb
hlt
lods
fstl
cmp
pop
out
jecxz
mov
add
mov
dec
fisttps
dec
enterw
outsb
std
pop
mov
arpl
out
aas
ss
sahf
jb
lahf
aaa
movsb
or
jb
sub
dec
and
xor
scas
sub
mov
les
popf
in
in
jo
call
inc
push
dec
push
add
lock
jo
and
cmpsb
testl
int3
cli
stos
sub
ljmp
xor
es
dec
and
mov
sbb
lods
push
or
mov
movsb
and
mov
hlt
aas
and
mov
adc
adc
loopne
test
cwtl
aas
pop
sub
movsl
mov
inc
movsl
js
les
movsb
aad
gs
cli
sub
stos
pusha
xlat
push
sub
bound
fiaddl
loopne
fisubrs
js
sbb
mov
jmp
std
inc
clc
stos
stos
test
push
push
jae
sub
xor
cmpsb
mov
in
out
push
repnz
call
lods
sbb
jp
inc
loopne
adc
adc
push
movsb
pop
xchg
pop
fadds
adc
loop
aad
fnstsw
mov
add
nop
jle
add
or
or
inc
iret
insb
mov
jle
imul
xor
dec
jns
call
testl
mov
sti
mov
mov
filds
mov
ficoml
gs
lea
inc
mov
and
add
sti
cli
mov
sbb
lahf
mov
ret
in
mov
mov
cmp
lods
inc
pop
rcl
test
aaa
fldenv
add
ret
xor
shrb
add
xchg
cmp
ds
jmp
hlt
mov
shll
fisubrs
push
stos
outsb
push
arpl
jg
inc
jp
xchg
ret
adc
movsb
popa
adc
mov
sbb
mov
and
mov
aad
je
push
push
xlat
add
or
ds
movsl
call
pop
add
ja
xchg
cmc
sub
sbb
movsb
mov
xor
loop
pop
pop
add
mov
mov
cmp
sbb
cmp
cmp
movsl
scas
call
and
test
mov
or
mov
aaa
ret
jae
fwait
jnp
adc
outsb
inc
sahf
dec
xlat
xchg
push
aam
mov
popf
repnz
cmpsb
add
adc
or
inc
or
fs
jno
mov
lahf
iret
cmpsl
hlt
stos
out
sub
into
add
xlat
jg
repnz
call
fistpl
or
add
ss
mov
les
in
out
xor
or
dec
and
fs
xor
sbb
and
int3
jo
in
jo
sub
jge
mov
jge
or
dec
dec
enter
mov
mov
lret
add
fwait
push
mov
jl
lahf
mov
ljmp
cli
lret
or
or
dec
int
out
mov
mov
sbb
nop
test
mov
adc
add
xor
and
sub
ja
jbe
mov
not
jbe
and
mov
andl
mov
push
push
stc
int
or
popf
ja
loope
sbb
push
fsub
lret
adc
jecxz
jle
mov
lret
negb
push
iret
cmpl
out
inc
mov
nop
jmp
fs
sub
mov
hlt
pop
out
ficomps
repnz
lahf
cmpsb
jle
push
jp
out
xchg
mov
arpl
jbe,pn
repnz
xchg
pop
push
ds
xor
adc
jecxz
aad
cli
push
fldt
enter
pop
push
adc
jbe
lds
test
lar
jmp
lret
imul
inc
xchg
xor
test
pusha
int3
stc
pop
jo
xchg
xchg
sub
fnstenv
imul
movsl
push
jae
mov
xchg
mov
das
inc
inc
lods
push
aad
jecxz
leave
mov
int
sub
bound
test
mov
insb
mov
jl
push
daa
popa
hlt
inc
test
outsl
or
inc
sbb
dec
in
or
inc
nop
jne
cmp
jns
sub
dec
jge
bound
jle
sub
and
fstl
pop
push
push
dec
pop
es
add
jne
movsb
testl
stos
push
cmc
add
mov
mov
fwait
push
mov
jb
push
leave
sub
ljmp
jns
mov
mov
cmp
bound
xchg
jle
ret
clc
mov
dec
pop
aad
push
push
scas
pop
data16
xchg
les
jbe
fdivr
fnstenv
ret
mov
das
mov
dec
mov
cmp
aam
push
ljmp
cmp
dec
movsb
sbb
repnz
mov
push
mov
mov
mov
mov
cs
push
jnp
mov
repz
sbb
pop
sub
add
fldl
jmp
insb
or
pop
testb
out
add
lods
sub
stc
jno
jo
cmp
jle
inc
cmp
jnp
data16
cmp
outsb
out
cmp
jno
loope
popa
xchg
push
leave
loop
test
movsb
lods
les
orl
scas
xor
popf
push
sbb
fbstp
dec
cltd
jge
mov
or
lds
jbe
add
xchg
jb
arpl
inc
cs
push
sbb
aas
cld
sub
mov
push
cld
adc
add
movaps
xor
popa
lret
idivl
jecxz
incl
int3
push
xchg
arpl
sub
inc
outsl
sti
pop
push
add
adc
jl
adc
or
popf
xor
leave
inc
xor
cli
ljmp
push
insl
out
ds
jge
insl
mov
iret
mov
mov
pop
xchg
and
xchg
pop
jmp
aam
push
cmp
imul
sub
jl
arpl
push
lahf
mov
fs
mov
fcomp
xor
and
push
imul
repz
imul
ds
in
xor
mov
and
movsb
daa
jb
add
mov
xor
jle
jne
in
into
jmp
cmp
sub
jl,pn
add
sub
fsubl
call
push
mov
flds
lock
fisttps
andl
negl
add
push
aas
sbb
inc
and
scas
imul
fidivrs
lds
cltd
repnz
mov
out
add
mov
aam
sti
inc
jno
ret
iret
jecxz
jle
jae
neg
clc
sub
dec
jno
push
call
out
sub
cmp
inc
sub
adc
xor
xor
dec
pop
pop
mov
ret
repnz
mov
popl
push
mov
or
sahf
mov
fcompl
mov
pop
out
loope
icebp
jbe
push
or
mov
adc
aad
imul
dec
jl
mov
cld
dec
dec
sub
add
xor
loope
cmp
cli
inc
jmp
jbe
ret
mov
push
xchg
sub
cmc
je
sar
jle
dec
mov
pop
dec
jbe
mov
mov
mov
in
pushf
lahf
ds
and
cld
or
das
xor
testl
mov
adc
das
push
mov
cmc
push
das
andb
movsl
ja
sub
cwtl
cmp
out
mov
pop
xor
and
rorb
idivb
lock
add
lcall
fs
xlat
popa
fcomps
sbb
jbe
ror
aad
popa
shr
pop
jg
push
dec
int3
das
in
and
orl
ja
pop
lods
ret
jp
rcrb
jmp
aas
pop
push
adc
jns
mov
adc
rcl
ljmp
add
subl
add
ds
data16
ljmp
popa
pusha
lods
inc
push
adc
hlt
leave
pop
insb
xchg
out
xor
sbb
xchg
movsl
jl
outsl
scas
scas
out
sbb
cmpsb
add
test
mov
inc
arpl
cmp
pop
mov
fwait
adc
loope
pop
jge
iret
rcll
adc
or
xchg
mov
mov
aaa
or
out
cmp
fists
xor
sbb
cmpsb
mov
iret
jg
cmp
or
jnp
cli
pop
xlat
inc
ret
xorb
lret
pop
mov
jae
xlat
or
sub
fimull
mov
test
mov
add
cmp
sub
mov
roll
push
adc
cmp
aaa
jns
jp
cs
and
mov
js
mov
mov
and
aad
mov
rclb
imul
std
xchg
es
push
xor
imul
xor
jmp
xlat
into
cmpb
mov
jo
xor
repnz
jle
lock
xchg
or
sarb
pop
jnp
lods
aam
xlat
sbb
sbb
daa
cltd
dec
mov
mov
popa
sub
mov
cwtl
out
sub
loopne
push
fnstcw
jl
inc
test
cs
cmp
shl
mov
into
test
push
mov
out
push
fcoml
fwait
cmp
out
pop
stos
add
rcl
adcl
mov
in
jmp
lea
xchg
aas
and
cmp
mov
js
cmc
or
stc
loopne
inc
jmp
ret
movsb
pop
sub
mov
xor
xchg
and
repnz
jl
adcb
scas
shll
mov
or
imul
dec
sarb
and
out
scas
add
mov
adc
xchg
and
call
sub
popa
and
push
scas
cltd
fs
mov
push
xchg
iret
jnp
and
nop
mov
jge
cli
mov
xchg
pusha
outsl
daa
and
js
daa
ret
or
mov
jp
push
and
xchg
iret
ds
cld
jne
jne
push
in
pop
lea
xor
or
add
cmp
sub
cmp
cli
inc
call
jp
movsb
cli
dec
rclb
sub
aas
sti
sbbb
repnz
push
jle
pop
mov
mov
sub
mov
or
aas
xor
jne
push
inc
pop
pop
scas
rcrb
xor
fldcw
mov
lea
imul
pop
mov
iret
inc
lcall
jmp
mov
and
lds
inc
xor
pop
pop
nop
or
in
xchg
push
stos
or
in
mov
cmpsb
xorb
xor
not
cmpsb
dec
push
mov
js
cmp
shrl
je
pop
fcoml
pop
les
pop
dec
mov
and
jo
cmpsb
lods
push
cmp
sarb
dec
aad
inc
int
pushf
fdivr
in
adc
test
idivb
rcrl
cmp
stos
sbb
bound
sbb
adc
mov
pusha
adc
arpl
lock
rcrl
into
pop
scas
imul
jmp
and
add
cmp
push
sub
out
xchg
out
mov
pop
imull
mov
cmpsl
into
jmp
jno
jae
imull
dec
lahf
jmp
roll
jg
lret
mov
outsl
sbb
mov
mov
fsub
aam
dec
add
test
mov
out
jnp
xor
add
lods
mov
int3
add
scas
jle
cmp
ss
mov
adc
sub
mov
or
jnp
dec
xchg
repz
add
mov
in
xor
ss
cmc
aaa
pop
lock
and
iret
adc
or
cmpsb
or
repnz
jp
mov
jns
sti
sub
inc
cld
testb
push
sti
incb
cmp
rclb
pop
and
js
push
sarl
xor
int
cmpsb
mov
cmp
xor
adc
sbb
mov
mov
pusha
int3
fidivs
mov
shrb
repnz
mov
xchg
loopne
stos
jecxz
mov
cmp
push
sbb
push
scas
mov
jp
inc
pop
loop
pop
data16
aas
in
or
and
hlt
cmc
xchg
fs
xor
mov
mov
rcr
icebp
stos
dec
les
cmc
test
jl
pop
repnz
pshufw
push
cmp
rolb
and
mov
xorb
icebp
mov
push
xor
or
outsb
cli
pop
lods
sti
push
sbb
mov
xchg
pop
xchg
pop
sbb
push
popa
sbb
dec
pusha
sub
loope
movsl
inc
mov
stos
mov
stos
jno
lock
sbb
inc
inc
lret
xor
sbb
stc
or
sbb
and
js
in
sub
xor
pop
adc
in
mov
dec
out
add
push
xor
xchg
adc
das
subl
jb
add
outsb
pop
rolb
shr
movsb
dec
push
lods
in
mov
add
adc
jb
stos
or
leave
stos
in
sbb
stc
ror
loopne
pusha
bswap
sub
aas
pop
dec
dec
lods
xor
mov
mov
bound
mov
add
or
cmp
adc
cwtl
ja
mov
jmp
dec
mov
lret
gs
shl
push
jne
sbb
jmp
ret
out
je
inc
gs
out
pop
and
ret
dec
xchg
jno
push
es
jg
aaa
lret
enter
pop
dec
andb
sahf
lret
jns
xorb
mov
shll
jno
in
push
imul
pop
stos
outsl
ret
mov
rolb
push
push
lock
movsl
popf
gs
push
movsb
jl
xchg
nop
jecxz
fistl
push
addb
test
dec
sbb
js
mov
popf
inc
cmpl
in
test
dec
mov
aas
fidivl
es
outsb
mov
mov
test
add
xor
arpl
aam
aaa
ss
ficomps
or
cmp
push
sbb
movl
xchg
insb
stos
andl
daa
outsb
pop
jmp
inc
insb
and
ss
fistps
imul
sahf
mov
aas
mov
popa
pop
loope
cmp
xchg
and
mov
dec
andb
mov
jge
sbb
mov
xlat
dec
scas
mov
inc
lret
sub
fists
add
rcrl
push
mulb
nop
scas
mov
xchg
push
mov
jb
outsl
test
leave
in
dec
push
ds
mov
setno
add
scas
jge
xor
mov
push
add
loopne
or
push
add
in
jne
lock
scas
push
idivb
rcll
mov
mov
add
xor
jbe
out
fdivr
push
mov
das
or
test
sarb
out
xor
sarl
clc
push
sub
bound
mov
subb
dec
dec
fistpll
or
add
mov
icebp
into
lds
lret
jb
std
lods
pop
and
in
push
or
fistps
idiv
fldl
xchg
jle
in
cs
inc
sbb
inc
ljmp
shll
xor
test
andl
push
cmp
divl
stos
cmp
cmp
sar
bound
xor
mov
test
gs
cmp
cltd
cmp
ja
jnp
mov
add
jnp
mov
xchg
incl
bnd
cmp
arpl
push
mov
cs
das
cmc
ret
mov
add
adcb
daa
sub
dec
stos
jge
ret
leave
pop
pop
sbb
iret
inc
cmp
andl
push
adcl
push
dec
arpl
imul
jecxz
aad
sbb
dec
inc
std
push
mov
pop
dec
lock
rcll
mov
inc
imul
movsl
or
mov
rclb
cmp
pop
sub
push
sub
xchg
insb
es
xlat
sub
dec
or
nop
push
das
sub
mov
test
sbb
push
ja
arpl
aad
popa
cmp
xchg
ret
cmp
sub
dec
test
or
les
lock
imul
fisubs
mov
insl
mov
dec
sbb
roll
and
call
aaa
dec
fs
jl
mov
sbb
and
or
hlt
lods
inc
mov
cmp
inc
jp
xlat
aam
jmp
lock
mov
xor
cld
movsl
pop
mov
mov
sub
pusha
jo
cmp
push
mov
int
pop
cmpl
push
imul
mov
aaa
inc
aad
dec
das
inc
mov
cmp
add
dec
xchg
lret
or
add
xchg
outsb
ds
outsb
lahf
pushf
xchg
mov
paddsb
add
mov
lret
push
or
or
sub
jns
inc
push
gs
jbe
mov
xchg
ljmp
addl
fnstcw
adc
or
fistpll
jns
in
mulb
rcll
test
adc
repnz
add
pop
add
repz
cmp
stos
fninit
xlat
subl
fcoml
xor
flds
cs
sahf
push
js
jbe
lods
sub
test
clc
sub
enter
or
lcall
xchg
pop
or
add
rorb
out
mov
push
xor
in
imul
mov
cs
stos
inc
inc
das
je
out
in
movsl
adc
popf
aaa
and
xchg
fnstcw
sbb
lock
dec
daa
out
mulb
mov
das
sbb
shl
movsl
insl
xchg
adc
jno
xor
in
fs
sbb
jge
push
out
popa
inc
stos
mov
sarl
mov
xchg
loope
dec
dec
sbb
jbe
shl
cmp
mov
fstl
nop
jl
add
fs
dec
or
inc
arpl
jmp
lret
mov
push
jl
call
sbb
mov
mov
dec
dec
adc
inc
repz
ret
xchg
cmp
fsubs
inc
inc
xor
sbb
mov
push
out
addr16
repnz
jo
mov
mov
ret
cld
mov
data16
ss
cli
and
sub
cwtl
dec
aaa
out
mov
mov
xor
repnz
mov
push
shl
and
faddl
lods
xchg
push
lret
push
xlat
mov
push
add
add
dec
lods
mov
dec
jp
cmp
or
dec
mov
push
enter
adc
cld
mov
xchg
sub
sub
jmp
into
and
das
imul
pop
in
cwtl
lea
jmp
je
push
in
add
test
jo
pop
repnz
sahf
lock
int
fisttpll
inc
mov
cmp
int
and
cs
imul
push
push
decl
ret
cli
call
mov
out
fistps
mov
xlat
or
push
nop
sarb
loope
xchg
inc
cmp
cmp
mov
mov
int
test
int
dec
dec
xor
test
cmpsb
bound
cli
dec
xchg
roll
dec
fs
movsb
sub
cwtl
and
cmp
add
sarl
or
repnz
enter
sub
add
add
cmp
push
aad
aad
lock
test
pop
divl
inc
mov
out
lahf
pop
push
push
mov
push
dec
jbe
mov
imul
pop
scas
flds
lods
loopne
cmp
xchg
call
repz
stos
aad
cmp
mov
sub
push
mov
pop
or
push
dec
and
inc
daa
xchg
sub
scas
in
hlt
in
xchg
push
mov
push
ret
jae
jge
out
cmc
cmpl
shll
xchg
cli
repnz
ja
fwait
das
fsts
xchg
pop
nop
nop
pop
mov
lock
repnz
movsb
repnz
ret
push
mov
int3
mov
test
sub
lcall
inc
add
and
std
int
push
xchg
mov
mov
sbb
push
test
push
jg
and
in
mov
nop
mulb
xor
xor
jle
or
sti
pop
mov
xchg
pusha
out
negl
sbb
out
mov
es
in
mov
cmpsl
pushf
test
or
mov
rolb
mov
mov
repz
in
rorl
lret
jbe
and
or
jmp
loop
jecxz
xor
dec
test
fbld
jmp
cmpsl
push
lret
out
fwait
add
imul
pop
sti
jmp
rorb
popf
mov
insl
push
dec
test
mov
adcb
lcall
in
mov
insb
nop
or
mov
adc
pop
mov
sbb
pop
xor
stos
mov
cmp
shlb
jg
xlat
ja
add
js
ret
mov
cmp
jle
sti
xor
add
xchg
popf
test
repnz
loop
xor
in
insl
mov
movsl
mov
and
push
lret
fimull
les
jg
fwait
insb
cmp
in
or
xchg
inc
jns
sahf
adc
pop
xchg
ffreep
mov
xchg
cmp
insb
inc
jl
es
lods
push
testl
xlat
loopne
out
rcrb
sarb
sbb
cld
xchg
sahf
das
imul
mov
or
out
push
push
cmp
cld
lahf
xor
hlt
int3
mov
int3
shrb
loopne
test
aaa
sub
pusha
push
xchg
inc
xor
push
fimuls
push
cs
and
je
or
pop
fimull
test
xor
add
fwait
lret
adc
movsb
sbb
mov
and
mov
xor
cli
leave
stc
test
fs
push
mov
jno
mov
push
dec
sbb
pop
dec
sub
ss
outsl
xor
jmp
out
sbb
push
aam
outsb
mov
jg
cld
hlt
xor
je
icebp
mov
pop
cmpsl
in
pop
fiadds
pop
test
leave
fiadds
lds
sbb
cwtl
mov
cmpsb
mov
push
push
iret
ret
cs
jge
lods
ret
add
je
inc
add
add
fidivl
mov
subl
push
adc
jp
in
lea
jle
fcomi
mov
and
shlb
jo
arpl
sub
sbb
testb
and
adc
aaa
lods
roll
pushf
inc
inc
scas
icebp
out
sub
pop
iret
mov
lds
jle
push
or
notb
test
shll
test
jle
enter
int3
mov
in
ficoml
sub
stos
loopne
ret
sub
jle,pn
shlb
mov
sbb
push
push
or
pop
mov
lods
das
repz
jb
adc
pop
mov
inc
sbb
roll
test
lods
es
and
xchg
ja
ret
push
in
lret
ret
cld
or
adc
cmp
sub
adc
pusha
ret
sub
popf
jmp
sahf
sbb
sub
loope
mov
mov
pop
fistl
jbe
xchg
ret
push
je
inc
cmp
fsubr
and
or
pop
das
xor
ljmp
adc
jmp
sbb
outsb
neg
mov
adc
or
xchg
adc
imul
int
mov
pusha
cmpsl
out
xor
dec
mov
push
sahf
shrb
push
leave
sbb
xchg
push
je
ljmp
loope
js
testb
cmc
pop
sub
sub
repnz
sti
mov
loopne
data16
lahf
dec
lcall
fcompl
add
cmp
cmp
or
pop
hlt
sahf
das
scas
out
mov
jle
jmp
bound
sub
dec
jae
je
push
jbe
cltd
cmp
popa
jp
mov
das
mov
ret
in
sar
push
scas
fs
ficoml
cmp
push
dec
adc
adc
mov
add
cmp
fnsave
cmp
sarb
adc
xchg
in
sahf
sbb
fwait
int
push
icebp
leave
mov
les
inc
cmp
test
cmp
popl
pop
add
mov
sub
ficoml
fsubr
dec
mov
mov
in
pop
aam
pop
into
pushf
in
cli
movq
xchg
lock
enter
sub
adc
loopne
mov
leave
push
dec
push
and
popa
scas
in
inc
adc
xchg
and
dec
in
in
mov
rol
je
cli
call
inc
scas
das
mov
test
mov
lahf
ja
arpl
and
lret
sti
bnd
pop
mov
xchg
jecxz
hlt
ret
or
mov
repz
cmp
shl
push
xchg
icebp
jno
xor
fdivr
faddl
loopne
mov
mov
mov
sub
sub
pop
sub
and
dec
and
jae
ret
xchg
pop
inc
cmp
jmp
jecxz
or
xchg
lahf
cli
rorb
loope
lods
int3
push
cmp
ret
rcr
inc
aam
mov
or
add
xchg
inc
sbb
xchg
jnp
xchg
mov
mov
es
lods
jae
stos
and
das
jge
into
and
movsl
nop
fcomip
repz
pusha
aad
jecxz
mov
scas
inc
fldcw
cmp
push
cmp
sti
xchg
fcmovnb
and
sahf
aad
or
es
cmpxchg
push
mov
and
repz
rorb
bound
mov
jge
pusha
sub
xlat
cli
xor
out
or
leave
cmpsb
lcall
bndstx
push
xlat
stos
sub
cld
xchg
arpl
aam
in
xchg
mov
das
xor
add
test
pop
out
incl
mov
bound
stos
xchg
sub
enter
pop
imul
mov
ds
int3
or
imul
rolb
repnz
jno
insl
je
mov
sbb
cmp
jge
int3
subl
repz
push
pop
cwtl
es
jp
jb
mov
in
xchg
stos
out
push
ljmp
xor
aas
aam
fists
mov
cld
or
mov
mov
sbb
pop
adc
push
repz
mov
cltd
int3
mov
mov
sbb
mov
jo
rcr
sbb
fdivrl
mov
lcall
lock
div
rolb
mov
dec
cmp
cli
push
call
mov
or
jns
cmp
xchg
clc
arpl
out
pushf
inc
jle
sub
push
cmc
or
and
loope
mov
pop
rclb
ja
dec
mov
push
out
xchg
xchg
into
subb
lods
inc
push
fwait
push
pop
xchg
push
or
fldenv
dec
cmp
cmp
out
icebp
mov
push
xlat
jae
mov
and
push
push
sbb
lea
in
sub
hlt
adc
jae
fisubrl
add
incl
jmp
push
rcr
or
in
rep
pop
aaa
jne
and
mov
fistps
fisubl
shlb
sahf
imull
popf
sbbl
jae
xchg
mov
stc
jmp
pop
push
pop
or
or
add
lahf
cwtl
xchg
mov
push
add
jge
insl
ja
jecxz
out
jp
es
and
data16
aam
cwtl
stos
pop
inc
and
mov
orb
xchg
push
mov
test
insb
xchg
pop
loop
mov
adc
mov
fistl
loope
pusha
out
test
push
lods
lock
sahf
test
inc
std
aas
pop
repz
push
pop
mov
testl
xor
xor
ss
test
lcall
enter
das
addr16
repz
mov
stos
sub
add
pop
jg
int
cmpsl
enter
mov
es
call
stc
xor
dec
cmp
movsb
xchg
add
gs
or
add
xor
imul
into
cmp
push
shrl
add
cli
sahf
loop
mov
jns
mov
std
mov
fwait
jl
mov
daa
dec
pop
adc
dec
dec
dec
xor
or
mov
nop
xchg
adc
xor
jo
pop
push
lods
cwtl
dec
test
pop
ljmp
movsb
mov
adc
sub
push
outsb
insl
inc
jg
aas
mov
stos
pop
les
sub
adc
mov
idivb
std
push
adc
or
sbb
inc
push
sub
dec
ljmp
and
and
jp
sbb
imul
lret
das
in
dec
push
jp
movsl
jo
push
or
sbb
sbb
out
pop
stos
dec
add
in
xchg
xchg
xlat
stos
sub
mov
loope
adc
jp
jo
out
pop
stos
lcall
int
add
xor
sahf
mov
addl
popa
xchg
enter
aaa
sub
jns
fs
scas
fldcw
cmc
shrl
int3
and
orb
mov
mov
mov
dec
sahf
adc
jl
dec
push
pop
orl
out
add
xlat
rclb
sbb
cmp
lock
cmp
test
dec
movsl
int
adc
xchg
push
test
or
aam
test
mov
pop
push
addl
jo
pushf
inc
test
mov
cmpsl
jl,pn
dec
sbbb
or
clc
mov
xor
mov
shll
mov
pop
push
mov
dec
in
ror
push
fsubs
push
mov
pusha
mov
cmpsb
cmp
mov
ss
daa
lock
inc
or
js
jae
sub
bound
std
dec
pop
sub
sub
insl
dec
sub
aas
inc
xor
imul
pop
jne
pop
aad
jg
jbe
sbb
xor
ret
or
jb
sahf
xorb
pop
popf
jp
cmp
adc
repnz
jmp
jl
pop
out
ret
push
lret
mov
jb
adc
mov
pop
ret
jl
mov
sub
scas
dec
xchg
jge
cmp
inc
or
and
and
aam
in
js
call
imul
push
cmpb
push
pop
mov
test
xchg
imul
aaa
out
jne
mov
mov
xchg
inc
cld
cli
repz
mov
imul
loope
outsl
cmp
jnp
dec
pushl
fs
xor
push
imul
idivl
addb
imul
jne
jle
push
pushf
ficompl
xchg
sahf
fldcw
adc
xchg
in
push
ret
jp
xor
sahf
jg
xlat
clc
sahf
movsb
inc
in
cwtl
icebp
inc
mov
push
sub
xchg
adc
dec
sbb
xor
lods
mov
sbb
call
es
inc
lahf
mov
leave
sarl
out
in
pop
outsb
cld
and
push
mov
jge
ret
inc
sbb
cmp
addb
call
push
out
cmpb
ds
test
inc
push
sti
mov
jne
cld
sub
pusha
out
jl
sub
lds
dec
adcb
stos
mov
ja
mov
cwtl
xchg
jns
or
push
lret
cld
push
lret
jecxz
push
ret
mov
jo
leave
out
fsubs
or
or
push
mov
pop
jecxz
fstpt
into
mov
mov
mov
push
sti
sub
clc
push
adc
popf
or
add
inc
lods
popl
es
jl
loop
jne
loope
mov
mov
add
add
enter
repnz
out
pushf
add
cmpsl
leave
es
push
jo
jb
loopne
mov
out
div
call
push
lcall
dec
dec
xchg
cmp
cmp
lcall
and
mov
fsts
icebp
test
pushf
push
insb
jecxz
jp
jbe
dec
pop
out
xchg
jnp
dec
xor
inc
popf
mov
ljmp
and
or
inc
xchg
icebp
lods
xor
popf
add
mov
xor
xchg
jo
dec
dec
or
insb
or
addr16
movsb
shr
call
enter
cmc
outsl
repz
or
popa
inc
jne
hlt
or
mov
mov
aam
arpl
dec
ret
gs
add
xchg
jp
jmp
insl
clc
mov
ss
into
js
mov
xchg
jp
sub
lret
mov
mov
xchg
outsl
int
popa
inc
fwait
jge
nop
decb
mov
push
push
ret
std
sti
cwtl
es
stc
pop
pop
ds
pop
cmp
or
mov
cmp
lods
stc
test
jge
ss
push
push
sahf
gs
in
push
xchg
push
adc
jno
jmp
sub
xchg
repz
je
push
aaa
bound
xchg
popa
das
and
ret
dec
movsl
sub
sbb
xor
sbb
in
xchg
aas
addr16
mov
nop
and
pop
adc
ret
pop
mov
xlat
shrb
cmp
lret
mov
scas
loop
sti
mov
loopne
insb
and
xchg
jnp
jp
pusha
cmp
movlps
push
fcmovne
mov
loop
jno
adc
xchg
jecxz
orl
notb
popfw
pop
fsts
adc
imul
loop
push
pop
cmp
push
and
or
dec
cmp
pop
inc
incl
or
and
je
inc
adc
movsl
repnz
sarb
jbe
int
mov
ja
ss
mov
sub
push
lret
loop
add
test
cmpsb
std
rcrl
jg
out
sahf
pushf
inc
clc
xchg
pop
incb
xor
and
xchg
arpl
mov
test
daa
sub
out
pop
jle
push
lret
cmp
testb
cld
sub
add
xor
mov
cmp
xor
hlt
insb
mov
adc
dec
pop
jnp
sti
mov
sbb
addr16
call
mov
call
stos
fldenv
int
mov
or
test
aad
fsubr
xor
subb
scas
es
jg
loop
push
mov
mov
addr16
aam
pushf
fstpt
cmp
sbb
jle
andb
lock
cmc
jmp
test
fsubl
xor
insl
jg
pop
pop
push
mov
adcb
lds
xlat
in
mov
loop
push
cld
xor
sub
push
pop
add
adc
hlt
and
jp
call
xchg
bts
stos
fisubrl
inc
cld
mov
loope
stos
mov
sbb
add
pop
jbe
cmpsl
xor
cmp
stc
xchg
lods
out
pop
or
stos
lock
testl
xchg
call
pushf
push
cmp
jne
psrld
in
loopne
jge
push
lret
lahf
dec
inc
adc
popf
cmpsb
or
xor
lahf
xor
enter
pop
inc
lds
jno
dec
xchg
in
inc
shr
scas
jecxz
call
xlat
push
cmc
inc
sbb
inc
xchg
push
mov
out
out
sarl
mov
int
or
jmp
push
and
cmp
jno
jb
pmuludq
xor
sbb
mov
and
aad
mov
stos
xor
pop
sti
cmp
mov
sbb
dec
rolb
jle
pop
mov
in
sbb
outsl
mov
mov
sub
incl
les
push
push
dec
dec
imul
gs
xor
lds
fwait
clc
pop
popa
test
aam
xor
pop
sub
sti
sbb
lcall
push
and
or
les
insb
mov
adc
pop
lret
jge
mov
adc
ror
jmp
jecxz
xchg
xchg
xor
push
je
mov
test
call
pop
push
orb
lahf
xchg
dec
jl
nop
cmp
mov
inc
xlat
inc
xchg
dec
push
pop
out
cs
popf
sub
insb
mov
push
cltd
jno
xor
movsl
mov
arpl
iret
call
ret
push
and
push
rol
cmp
cld
fldt
leave
orb
popa
mov
lcall
mov
aad
stc
push
push
and
and
sbb
aad
mov
inc
mov
xchg
loopne
push
pop
icebp
repz
mov
das
push
inc
sahf
ret
cltd
inc
and
lock
mov
mov
cmp
jns
pop
xchg
sbb
test
inc
xchg
push
mov
xchg
jno
pop
xchg
and
and
adc
jecxz
int3
imul
ja
cmc
lods
out
cld
inc
xchg
pop
push
mov
sahf
sahf
mov
or
lock
sub
ret
mov
outsb
cmpsb
hlt
pop
scas
push
adc
sbb
xor
push
imul
xor
ret
popa
adc
das
inc
testl
and
xorl
clc
mov
test
test
cmp
mov
es
push
add
cmpsb
pusha
pop
js
cwtl
into
cli
dec
negl
idivl
in
leave
daa
test
xchg
fsubrl
sub
clc
sbb
sbb
and
fcompl
in
pop
adc
cmp
ljmp
push
lods
pop
adc
inc
mov
push
xor
sahf
xchg
ret
cltd
into
mov
fwait
sbb
insb
scas
pop
add
jbe
adc
mov
jb
and
insb
loope
subb
lea
into
cli
fsub
mov
xchg
iret
cmp
pop
xor
lds
loop
adc
cltd
fcmovb
inc
push
cli
adc
pusha
in
into
in
adc
mov
insl
test
dec
pop
xchg
pop
rclb
fistpll
pop
adc
inc
push
mov
lds
pop
addr16
cmp
xchg
pop
adc
mov
and
gs
adc
xchg
pop
pop
cmp
out
sub
lcall
popa
fidivs
sbb
mov
ret
sbb
mov
outsb
leave
shrl
add
incl
xchg
mov
fcomps
mov
cmpb
inc
cmp
stos
xchg
or
in
std
cmp
sbb
dec
add
mov
sub
push
xchg
cmp
inc
dec
arpl
in
pop
pop
dec
xlat
call
dec
out
mov
clc
shrl
je
fdivp
dec
cmp
in
dec
pop
mov
adc
xchg
jo
jno
test
fistpl
mov
mov
or
inc
or
into
pop
cmp
xor
sub
fstp
mov
inc
idivb
daa
sbb
out
and
jbe
das
addr16
addr16
fsubrp
outsb
into
ficoml
ljmp
vmulpd
mov
cmp
xor
fimuls
out
andl
call
loope
xchg
pop
and
xor
inc
test
push
pop
jae
in
adc
mov
and
test
daa
aas
or
lods
xor
std
nop
sbb
js
imul
icebp
dec
inc
nop
jbe
jb
mov
stos
and
jae
sbb
sub
int
int
sbb
jp
pushf
test
andb
and
in
fwait
scas
fwait
sbbb
or
sbb
mov
xchg
xchg
sbb
jne
outsl
rclb
mov
in
xchg
mov
mov
cmpsl
ror
mov
mov
mov
lcall
divb
in
jo
push
inc
sti
xchg
fadds
daa
stc
mov
push
mov
xchg
push
scas
pop
addl
insb
xlat
lahf
pushf
jbe
in
filds
pop
daa
or
mov
push
add
xchg
mov
mov
pop
mov
cmp
push
loop
int3
test
and
out
dec
addr16
mov
cmp
es
sbb
ficoms
add
int
arpl
dec
push
dec
inc
ror
shrb
call
xchg
gs
or
sbb
call
rcrb
je
fsts
call
mov
repnz
jl
icebp
lea
imul
cmpsl
adc
adc
arpl
inc
sbb
jbe
cltd
gs
dec
sub
xchg
addb
cmc
call
ficompl
jo
add
jle
sbb
dec
into
mov
inc
test
cli
stc
shll
pop
lret
sti
aam
subl
fwait
sbb
clc
into
jg
mov
cmpsl
outsl
aas
pop
pop
shl
inc
or
cmp
loopne
test
loopne
fdivr
test
ja
insb
xor
inc
jmp
test
sarl
inc
inc
push
add
rcll
xchg
aas
je
loopne
pop
scas
jne
sub
mull
out
ja
pop
out
inc
mov
punpckhbw
mov
xchg
popa
lods
mov
add
push
loopne
test
mov
sbb
hlt
insb
cltd
cltd
sub
pushf
cmp
outsb
push
adc
inc
dec
or
stc
test
sbb
cli
sbb
xchg
lods
pop
pop
jmp
pop
inc
sub
test
cmp
cmp
outsb
mov
or
dec
cmp
out
mov
icebp
add
adc
push
lods
cmp
jns
jnp
scas
loop
jno
cmp
shl
mov
adc
pop
dec
test
sub
lcall
jecxz
dec
mov
dec
lcall
test
out
push
pop
sarb
and
adc
mov
and
and
xchg
sub
in
rclb
test
xor
leave
lret
inc
scas
sub
iret
pop
dec
int3
cmp
inc
mov
loop
test
cmp
enter
loop
aam
mov
ja
je
cmc
cmpsb
sti
out
dec
mov
inc
pop
or
lret
mov
test
lcall
aaa
and
lret
add
mov
push
stc
mov
jle
sub
push
push
xchg
insb
int
shll
xchg
sbb
filds
daa
pop
std
or
imul
fsubr
cs
xchg
dec
pop
shrb
or
sub
movsb
cmp
and
dec
shll
and
pop
xor
dec
popf
push
jo
lods
cmpb
rcrl
adc
insb
sahf
sarl
pop
lods
leave
loopne
cmpsb
mov
out
push
xor
lods
adc
bound
push
adc
fnsave
pop
mov
ret
fbstp
add
mov
pop
push
fwait
int
sbb
lods
imull
icebp
xchg
xchg
inc
das
es
adc
and
lds
test
push
out
mov
mov
mov
scas
es
cmpl
decl
dec
xor
je
ja
repnz
adc
pop
lds
nop
pop
mull
cwtl
rcrl
mov
ret
xchg
jp
imul
or
or
inc
clc
pop
lods
inc
mov
loope
repz
lcall
push
inc
add
mov
pop
loop
fmul
sahf
cmpb
aad
mov
add
mov
fnstcw
out
cltd
and
xchg
ret
rcrb
add
mov
mov
push
sbb
mov
lea
pushf
pop
stc
scas
xor
ja
push
sahf
and
inc
mov
in
cmp
sub
cmp
pop
xor
ds
scas
xor
push
js
ds
mov
movsb
dec
push
sub
lds
inc
or
xlat
dec
repnz
sub
jne
cmpsb
dec
push
lret
xchg
adc
dec
jl
adc
push
sub
mov
mov
movsb
mull
adc
sbb
jbe
sub
aad
ds
arpl
add
push
stc
add
jecxz
cwtl
mov
sub
or
cltd
xchg
repz
jg
jecxz
adc
jnp
xchg
ret
and
push
push
xchg
mov
cltd
xchg
xchg
lods
push
xchg
or
popa
jle
mov
adc
xchg
xor
jp
dec
sub
ds
mov
cmp
pop
ret
int
mov
pop
insb
ja
or
pop
sub
out
and
jg
stos
sbb
jns
clc
js
jae
into
mov
sti
in
arpl
mov
push
inc
mov
adc
pusha
test
jno
stos
push
ja
mov
sbb
cmpb
fistpll
sub
mov
inc
push
or
movsb
loope
add
sahf
enter
fisubs
aas
sbb
inc
cli
cltd
outsl
outsl
repz
add
mov
test
pop
xor
sti
xchg
insb
nop
clc
sub
cltd
xor
sub
pop
xchg
cmp
xchg
lock
xor
lds
cltd
movsb
shll
jmp
outsl
inc
ds
dec
jo
icebp
es
loope
adc
stos
icebp
aaa
sub
jno
ja
pusha
cld
inc
mov
pop
jmp
testb
or
std
sub
fldl
fdivrs
inc
aas
sub
out
ja
aam
mov
and
mov
xor
and
jl
loop
mov
iret
insb
jae
fs
xchg
int3
in
aad
bound
lock
mov
dec
xor
dec
dec
adc
dec
push
cmp
mov
cmpsl
add
xlat
lods
xchg
jge
add
inc
pop
leave
scas
repnz
add
movsb
jo
xchg
dec
repnz
out
mov
repz
sarl
mov
test
jns
mov
jns
and
out
loopne
inc
jle
adc
jl
add
xor
pop
cmp
xor
into
loopne
mov
xor
lea
repz
pop
jne
popa
out
mov
add
sbb
jecxz
mov
dec
mov
dec
daa
pop
outsb
xor
fwait
adc
shll
stos
repz
lea
push
sarb
pushf
pop
mov
and
mov
dec
mov
cmp
inc
mov
cmp
stos
or
lea
les
stos
dec
fbld
sub
ficoms
sbb
adc
das
add
and
ret
sub
iret
mov
cmpsb
mov
jl
mov
pop
hlt
pop
pushf
add
xlat
inc
fists
xchg
xchg
mov
sarb
adc
or
roll
outsb
insl
mov
fildll
ljmp
and
sti
scas
dec
jbe
in
sti
sbb
sub
test
out
out
or
sbb
cld
inc
mov
ret
scas
pop
inc
leave
and
int
test
add
sub
add
pusha
mov
push
in
aas
das
jge
out
dec
push
lods
push
inc
add
test
mov
inc
pop
dec
and
fwait
leave
stc
mov
inc
pop
shlb
dec
sbb
test
mov
push
adc
jne
cmp
add
scas
add
mov
mov
scas
testb
mov
out
ret
pop
js
jmp
push
leave
dec
push
mov
push
ljmp
call
push
inc
push
fimull
stc
fistpll
pop
jbe
ds
push
pop
mov
mov
pop
xchg
lea
iret
outsb
dec
lods
test
adc
cmpsb
lods
mov
and
lea
jecxz
jb
and
xor
gs
jno
test
in
sub
add
sub
mov
fisubs
mov
jo
xchg
into
add
int
shlb
add
jg
sbb
push
mov
pop
test
dec
and
adc
ret
lea
mov
rcll
add
aaa
dec
pop
out
xlat
jg
fucom
out
mov
mov
mov
push
add
cs
xor
add
rcr
ja
mov
cmp
sub
adc
leave
leave
orl
mull
test
imul
pop
pop
add
rcrb
stos
sbb
imul
test
daa
clc
dec
xor
cmc
or
inc
pusha
cmpsl
adc
arpl
jl
jle
movb
or
jnp
mov
sbb
pushf
je
cmp
mov
out
aam
sub
outsb
pop
or
push
insb
leave
sti
clc
xorl
and
sub
xor
stc
sub
pop
in
xchg
std
loopne
cmc
mov
sbb
jle
fwait
mov
iret
cmp
movsb
push
in
mov
in
lods
loop
jmp
xchg
adc
dec
jp
ret
hlt
sub
dec
jo
mov
dec
and
aam
sub
dec
imul
fs
mov
out
sbb
movsl
movsl
arpl
pop
arpl
adc
movsb
shl
jp
add
test
lods
dec
mov
out
dec
ja
mov
into
dec
lcall
fwait
jb
pop
fs
and
inc
sysexit
or
inc
cli
insl
in
pop
sub
ja
mov
and
gs
lods
sub
popf
or
push
out
inc
dec
xor
push
or
sbb
sbb
cmpsl
mov
or
inc
jl
push
add
rorl
xchg
sub
cmp
push
pop
dec
js
call
inc
sti
push
add
sbb
std
fnsave
add
mov
mov
rorb
jge
sarl
and
jmp
lock
mov
test
sti
dec
mov
rclb
mov
hlt
jge
xor
pop
lahf
and
adc
and
fnsave
mov
mov
adc
sbb
sub
cmp
mov
mov
scas
push
cmp
sbb
in
add
out
les
mov
shrl
dec
jp
push
stos
mov
push
add
dec
enter
ss
dec
pop
sub
push
repz
lret
mov
jg
test
ret
test
and
out
adc
lahf
pop
dec
int3
lds
filds
mov
rcll
popf
test
ss
pop
arpl
data16
dec
out
or
add
push
jmp
arpl
push
ss
dec
add
nop
pop
inc
and
jb
mov
movsl
mov
jle
dec
subb
pop
push
add
adc
mov
and
sbb
xchg
adc
pop
imul
push
into
ds
mov
dec
pop
lret
xor
in
or
movsl
fstl
mov
sahf
jecxz
pop
scas
shll
push
jb
inc
and
insb
and
and
cmc
cwtl
xor
lea
pop
ds
cltd
dec
fildll
inc
std
xchg
lods
call
jns
pop
mov
push
mov
lock
jle
movsl
or
add
sbb
pop
vcvttps2dq
imul
scas
xor
gs
push
ja
outsb
lea
ljmp
out
in
ret
dec
mov
shll
sub
pop
push
pop
or
add
clc
ret
pop
or
clc
mov
ljmp
and
adc
sbbb
test
mov
and
stc
dec
stc
aaa
xchg
dec
xor
ja
ljmp
test
mov
ss
leave
adc
mov
cmp
test
xor
cmc
das
add
sub
xchg
inc
out
gs
mov
test
jmp
pop
xchg
test
jmp
scas
lret
xchg
pop
ss
insb
test
fstps
jge
cmp
push
or
and
enter
clc
dec
or
fnstsw
aam
int3
aam
add
dec
imul
jnp
cmp
mov
inc
inc
shl
adc
mov
mov
std
nop
les
lea
inc
cmc
mov
push
dec
fbstp
and
jne
je
xchg
cmp
sub
push
cmpb
jae
push
pop
bound
xor
pushf
cld
and
flds
call
pop
shlb
cmpxchg
in
xchg
je
test
bnd
or
in
out
and
add
pop
jno
or
jb
shr
mov
mov
bnd
sti
mov
int3
pop
sbb
mov
mov
push
and
mov
pop
adc
loop
push
mov
and
and
imul
lods
dec
push
sub
push
mov
cs
orb
andb
test
cli
sub
push
mov
xor
adcb
fbstp
test
mov
dec
insb
fstps
inc
nop
int
sub
adc
dec
int3
stc
cli
gs
mov
xchg
jb
stos
test
jns
fisubrs
fcmovbe
fwait
dec
loop
das
aad
test
jbe
xchg
lock
xor
xor
aas
es
fs
sti
fadds
pop
scas
cmp
inc
jl
enter
gs
lcall
and
enter
pop
push
add
inc
lahf
mov
testl
or
ret
movsb
imul
stos
sbbl
testl
into
cmp
rcrb
rcrl
mov
int3
cmp
or
and
mov
outsl
pop
sub
pop
in
jge
or
jo
out
add
pop
out
cmpsl
repz
or
stos
mov
bound
jg
jl
mov
js
xor
xchg
xchg
lret
int
notb
mov
movsl
jle
iret
cmp
xor
movsl
xor
fldenv
out
jp
leave
xchg
fs
lock
jmp
mov
out
sub
hlt
pop
inc
out
fdivl
or
scas
fldenv
mov
fstp
daa
pop
popa
xor
fs
fnstcw
push
les
ret
fnstcw
negb
mov
int
push
xor
sub
push
jb
test
mov
pop
in
xchg
sbb
ljmp
mov
pop
mov
das
sti
cmp
sar
lock
xor
xchg
push
xchg
or
sti
test
imul
pop
orb
outsl
adc
dec
push
xor
cmp
je
push
sarb
lds
push
ja
or
xor
add
stos
push
mov
sub
pop
inc
ret
mov
jno
test
test
movsb
xor
sub
pusha
pop
pop
in
sub
xchg
or
jmp
xchg
mov
enter
add
bound
repz
mov
and
adc
not
mov
xor
sarl
xchg
mov
mov
and
inc
fs
dec
std
cs
popa
fs
lea
sbb
cmp
orb
adc
push
pop
xchg
dec
rolb
or
mov
xorl
enter
or
mov
test
add
popf
lcall
aaa
into
lcall
fs
sub
mov
imul
mov
insl
sbb
mov
fimull
jnp
shll
xor
mov
adc
lods
push
push
nop
mov
cmp
pushf
or
sbb
leave
add
xchg
out
sub
cmpsl
icebp
inc
sbb
inc
xchg
pop
sbb
mov
in
sub
mov
das
ror
test
jg
out
lock
enter
pop
dec
mov
stc
aaa
xabort
mov
gs
mov
enter
pop
aam
inc
clc
repnz
in
nop
and
xor
movsb
pop
fwait
inc
addl
xchg
ret
cwtl
repnz
push
add
ret
jo
add
int3
push
cs
mov
add
mov
and
lock
rep
fidivrs
notl
xchg
cmpsl
pop
stos
cmpsb
sub
sub
adc
iret
stc
xor
xor
push
sub
xchg
das
test
ss
or
scas
xchg
mov
mov
fldcw
lea
insb
out
dec
sahf
sbb
mov
fstpl
pushf
xor
lcall
insb
movsb
js
mov
jne
lcall
rcll
cmpsl
dec
mov
imul
xorl
fisttps
pop
xchg
dec
jns
aas
and
inc
jnp
mov
xchg
xor
clc
iret
and
or
add
jno
push
mov
mov
sbb
jae
or
pop
dec
aas
pop
mov
ljmp
pop
cmp
outsb
jnp
shll
lret
movsb
mov
sub
sub
clc
mov
sbb
dec
xor
out
imul
int3
test
int
xchg
dec
mov
stos
clc
rcrl
mov
xlat
jbe
lret
rorb
jno
dec
pop
dec
pop
aam
xchg
dec
mov
adc
incb
add
pusha
fbstp
mov
dec
pop
push
fldcw
inc
adc
fsubl
jns
add
push
nop
js
into
sub
andb
clc
scas
stos
adc
in
arpl
and
sbb
test
scas
push
iret
stos
fimuls
xchg
mov
lret
data16
mov
std
fisubs
stos
push
gs
popf
jo
jecxz
repnz
into
xchg
and
aad
fimuls
cmpsb
cli
adc
jne
xchg
add
adc
cmpb
je
jecxz
lds
cs
movsl
push
aam
sbb
aas
mov
stos
fs
xor
or
or
push
jmp
fwait
test
mov
mov
sub
sub
lcall
nop
scas
aad
sub
fstpl
movsl
or
dec
pop
pop
push
jp
adc
outsb
std
out
or
out
cmpl
pop
cmpsl
rclb
push
in
pusha
adc
test
repz
xchg
lret
xor
adc
orb
shrb
xor
pop
adc
hlt
hlt
xchg
push
sub
data16
sub
cli
push
aaa
cmp
push
lahf
pop
cmp
push
dec
notb
imul
add
jo
push
push
cmp
test
shll
xchg
jge
or
pop
and
push
pop
jb
in
fucomi
cwtl
call
xchg
bound
pusha
pop
jnp
jns
add
mov
insb
or
mov
mov
or
pop
push
inc
test
in
call
mov
cmpsb
not
out
jns
mull
mov
adc
xchg
sub
mov
push
cmp
outsl
mov
xor
addb
pop
push
movb
repnz
push
sub
or
add
push
jmp
xor
cmp
dec
pop
mov
inc
repz
mov
int
dec
lret
pop
aas
add
adc
adc
mov
dec
or
aas
xchg
into
movsl
mov
mov
dec
or
jge
ret
cwtl
and
sbbb
cmp
fstp
ds
push
mov
sbb
fwait
and
mov
push
stos
sbb
rcrl
stos
incl
dec
or
adc
ss
cmpsl
fcmovnu
mov
mov
rcrl
scas
shr
mov
or
dec
shlb
bound
push
daa
cmpsb
jge
jae
lcall
sbb
pusha
adc
ljmp
jmp
sub
sbb
mov
xchg
aad
psubusb
scas
popa
cmpsb
push
xchg
shl
sarl
adc
int
inc
daa
icebp
push
mov
jle
inc
push
push
push
fcomp
pop
add
adc
add
fistl
in
dec
fdivr
je
in
sbb
mov
add
push
mov
sti
movsb
mov
xchg
add
fsubrs
std
sbb
inc
repz
inc
stos
imul
lret
sbbl
xor
outsb
cld
mov
mov
or
fdivrs
int3
mov
jg
or
das
adc
jge
adc
sbb
and
mov
out
cmp
mov
pop
shl
cmp
ficoml
or
xchg
imul
adc
lret
movb
fiaddl
mov
push
ss
lahf
and
fstpl
out
iret
cs
cli
shrb
and
jle
jecxz
call
sub
in
aas
hlt
xorb
xchg
lcall
push
std
aaa
jmp
sbb
aaa
xor
outsb
mov
pushf
fwait
and
loopne
nop
and
popf
inc
imul
sbb
xchg
mov
fwait
shl
jno
add
in
sbb
test
mov
lret
in
arpl
notb
rorb
icebp
fabs
bnd
push
cld
dec
add
push
add
xlat
stos
fidivrs
sub
mov
add
scas
arpl
rsm
loop
stos
popl
sub
aas
cmp
or
lea
in
or
dec
mov
cmp
mov
or
mov
int3
shlb
fisubs
test
mov
movsl
es
das
lret
sahf
js
inc
mov
movsb
inc
cld
mov
fimull
movsl
cmpl
adc
cltd
sbb
mov
subb
shlb
orb
jmp
mov
push
in
in
cmp
cld
mov
ja
add
xlat
adc
roll
shlb
push
repnz
repz
add
dec
roll
scas
jae
pushf
or
pop
popf
sub
pop
mov
iret
inc
adc
xchg
xor
enter
mov
ret
jnp
or
pop
dec
hlt
in
test
mov
jp
aas
imul
dec
add
dec
jns
push
pop
pusha
jbe
dec
jge
out
mov
xor
mov
adc
add
daa
fstpl
cwtl
xchg
dec
mov
push
fstpl
adc
stos
adc
adc
inc
outsb
push
fldln2
jmp
out
xor
jp
pushf
mov
rcll
pop
mov
push
xchg
and
push
aad
push
mov
fadd
imul
cmp
add
in
cmp
pop
mov
dec
fsts
cmp
push
notb
ret
loop
movsb
into
std
jns
pop
mov
hlt
in
fildll
dec
xchg
and
inc
sub
fsubrl
add
rorl
pop
adc
adc
stc
xchg
lahf
xchg
insl
movsb
loopne
cmp
push
inc
shr
mov
out
es
mov
mov
xchg
cmp
lods
pop
inc
dec
sarl
test
cmp
dec
gs
insl
lret
push
in
and
cli
cli
data16
outsl
lock
ret
xchg
std
outsl
addb
push
nop
xchg
aaa
loopne
jbe
outsl
leave
cwtl
sti
mov
jl
out
leave
lock
jecxz
out
scas
push
pop
dec
mov
or
mov
inc
test
loop
mov
shrl
mov
pusha
fs
xor
mov
cmpsl
mov
lret
cmpl
mov
test
jae
jb
mov
jne
sub
andl
sbb
sbb
imul
out
lock
or
dec
jno
ficomps
jecxz
jns
jl
shr
mov
mov
in
daa
inc
call
push
lcall
and
and
out
stos
aas
rcr
arpl
fildll
pop
sti
add
jns
dec
sub
mov
in
add
int3
push
push
fistps
outsl
jns
arpl
shlb
repnz
addr16
pusha
pop
jo
xor
lods
stos
mov
dec
cmp
mov
cmp
sbb
test
lret
loope
jecxz
push
dec
sbb
scas
mull
xchg
popa
mov
dec
loopne
mov
adc
movsl
insb
shll
bound
fidivl
xor
out
in
mull
fldlg2
mov
inc
xchg
xor
fstpt
lock
jb
sahf
jle
popa
sbb
sbb
movsb
push
mov
ss
test
lret
dec
sbb
cmp
mov
pop
ret
push
adc
add
jb
popa
push
lret
lret
das
and
mov
addr16
test
mov
test
jecxz
sbb
mov
outsb
pop
in
lods
xchg
pusha
inc
mov
dec
lods
fisttpl
push
dec
out
hlt
mov
cmc
jns
push
pop
inc
mov
pusha
jecxz
pop
mov
repz
or
fidivl
add
push
mov
inc
jle
add
jecxz
es
mov
imulb
jb
idiv
dec
mov
gs
sbb
sarb
movsl
mov
cli
inc
iret
fptan
scas
lds
lret
unpcklps
arpl
call
test
mov
sbb
jle
aad
inc
insl
loopne,pt
mov
ret
insb
test
xor
sub
es
or
inc
mov
mov
sbb
mov
cli
dec
xchg
mov
movsl
mov
subb
imul
fisubl
lds
std
pop
js
dec
xchg
mov
cli
bound
mov
dec
xor
subb
push
mov
in
push
je
leave
add
inc
dec
mov
hlt
push
fldl
and
leave
sub
into
xchg
add
imul
vunpcklps
pop
stc
cltd
and
xor
add
insl
mov
fsts
rcl
aaa
push
adc
addr16
scas
xlat
sub
jae
std
sbb
outsl
adc
in
ret
mov
shl
int3
pop
lahf
or
mov
mov
dec
call
icebp
adc
mov
jp
xchg
in
xor
xor
cmpsb
dec
outsl
mov
out
mov
mov
sub
sbb
lods
inc
stc
fcoml
cmp
mov
add
je
in
ja
push
ja
ljmp
out
add
scas
sub
push
sbb
gs
xchg
daa
repnz
mov
in
movb
fdivs
fiadds
xlat
mov
or
int3
xchg
fwait
mov
cmpsb
pop
mov
cltd
or
mov
cmp
pop
dec
fimuls
xchg
frstor
xchg
sahf
in
aam
and
jbe
sub
dec
clc
fdiv
jno
mov
aas
shll
add
push
ljmp
es
cwtl
sahf
cmp
cmp
dec
jl
jb
and
out
mov
jne
fnsave
pxor
mov
repnz
loope
adc
ljmp
xchg
testl
push
mov
jne
push
rolb
fidivrl
inc
mov
mov
inc
pop
and
clc
mov
adc
xchg
jns
aas
pop
lods
cli
je
jae
mov
xorl
mov
sbb
mov
adc
mov
ds
push
hlt
pop
xchg
flds
jo
mov
sub
les
mov
mov
sbb
adc
call
cld
hlt
rolb
adc
insl
dec
repz
mov
lahf
adc
or
pop
pop
arpl
cmc
xor
data16
mov
test
push
xchg
addr16
xchg
pop
sub
jno
jnp
xchg
push
andb
lcall
stos
iret
pop
mov
leave
cmp
lods
add
daa
insl
fidivs
pusha
mov
lret
mov
jle
add
jmp
inc
test
movsb
fdivrl
add
adc
pop
ret
bound
icebp
and
test
dec
inc
stc
inc
push
test
sti
dec
mov
lods
push
pop
push
enter
adc
cld
or
and
xor
or
or
lret
insl
jb
test
mov
sahf
int
mov
outsl
pop
lret
out
inc
jmp
jmp
or
jnp
inc
sbb
call
pop
push
mov
mov
clc
adc
lret
sbb
xchg
mov
xor
lds
mov
mov
mov
dec
sarl
cmp
push
pop
mov
outsl
cmp
mov
jnp
inc
pop
or
testb
aad
pushf
in
movsl
mov
inc
pop
cmp
add
loopne
iret
cmpsb
rcrl
and
das
les
mov
mov
push
into
cld
aaa
fsubrl
pop
pop
mov
popf
int
mov
xor
dec
mov
fs
popf
xor
adc
xor
push
inc
pop
cmc
and
cmc
sbb
mov
dec
mov
and
xchg
movsb
add
jecxz
lret
mull
aas
mov
cmp
call
mov
inc
outsl
loopne
or
pop
push
mov
push
popa
dec
es
xor
mov
in
sbb
mov
mov
or
xchg
push
xchg
lar
or
lock
scas
shll
xor
jnp
stos
movsl
cmp
mov
xor
jne
in
jmp
adc
inc
jo
cmp
cs
sbbl
mov
cmpsl
mov
sti
jo
sbb
hlt
and
call
push
add
xor
adc
mov
fcomi
mulb
sti
out
shll
sbb
adc
imul
je
mov
cmp
std
jb
mov
loopne
mov
inc
in
jns
jno
jl
stos
lret
fidivs
shll
and
pusha
add
cmpsl
cmp
xor
fnstenv
add
dec
cmp
mov
mov
dec
ds
and
sub
add
inc
std
cmp
dec
daa
adc
jbe
rep
mov
sbb
push
or
fs
sub
dec
dec
das
popf
mov
pop
adc
or
arpl
fimull
jge
push
das
outsb
stos
cld
fldenv
iret
xchg
and
cld
jp
mov
daa
add
jecxz
cmp
xchg
and
out
cli
or
mov
cmp
jne
and
sarl
dec
shl
sbbl
and
push
shll
mov
mov
inc
ljmp
push
sbb
orb
xor
mov
jmp
test
sub
inc
fiaddl
push
stos
repz
pop
insb
mov
jae
and
mov
cmp
fadds
jno
mov
int
aas
cmp
mov
add
repz
jmp
jb
fimuls
add
or
loope
or
mov
cmpl
pop
stos
aad
mov
push
insl
mov
mov
push
fsts
aas
xor
ret
dec
cmp
xor
jle
and
xchg
xchg
add
pop
push
dec
xchg
jg
shll
add
imull
jmp
cmpsl
in
ds
push
mov
cltd
inc
xchg
xchg
mov
sub
stc
push
dec
int
mov
push
and
add
cmp
mov
int3
lret
mov
adc
sbb
sub
nop
or
movsb
hlt
test
pop
xlat
cmpsb
lock
popa
pop
lea
cli
and
out
inc
loop
xlat
ret
ret
ds
fisubrl
add
mov
adc
inc
pop
fs
push
sub
mov
or
or
ret
add
adc
test
aaa
add
pop
frstor
xor
mov
jecxz
push
fistpll
insl
jecxz
inc
push
sub
int
fstl
push
jmp
pushf
iret
scas
js
cli
fs
dec
lahf
lret
dec
mov
sub
push
shll
out
sub
sarb
jle
mov
fldt
fldl
jl
xchg
and
inc
test
or
inc
int3
scas
xchg
aas
fldt
cltd
je
and
mov
cmp
or
push
pop
cld
popa
pop
or
mov
dec
call
mov
push
test
xchg
adc
aad
push
pusha
mov
ja
inc
push
mov
loopne
adc
sbb
out
fwait
or
xchg
loop
das
leave
or
xor
ja
inc
pop
iret
fstps
inc
or
push
sub
and
cltd
xchg
dec
cmp
dec
xchg
test
lock
fs
cmpsb
into
int
dec
inc
xchg
jns
xchg
adc
movsl
pop
aas
ds
mov
pop
cli
imul
or
xchg
jecxz,pt
sti
mov
pop
and
imul
data16
call
data16
dec
lret
pop
push
ljmp
repz
shlb
mov
ljmp
sbb
xchg
jge
movsb
lret
mov
scas
icebp
mov
leave
je
dec
imul
shl
sub
mull
dec
rcrl
fisubl
pop
cmp
pop
adc
repnz
repnz
call
rclb
jmp
inc
xlat
insl
jle
inc
sarb
int3
data16
pop
cs
mov
lcall
icebp
mov
pop
xchg
cmp
mov
leave
mov
adc
imul
loop
outsl
inc
pop
mov
fwait
lods
not
addr16
negl
jecxz
sahf
push
aaa
mov
fwait
les
je
inc
mov
push
jbe
xlat
sub
dec
push
inc
icebp
mov
xchg
out
sbb
pop
fwait
cmpsl
ficoms
jecxz
or
mov
xchg
loop
into
clc
fisttpl
fcmovnu
dec
les
push
mov
inc
ljmp
xchg
and
movsb
mov
dec
sarl
test
test
push
mov
cltd
rcl
lcall
lock
stos
mov
clc
push
jne
inc
inc
loop
into
lods
mov
popa
sbb
rcll
mov
or
jmp
pop
pop
ret
nop
out
sbb
clc
dec
pop
cmp
mulb
test
add
dec
mov
fbld
lcall
lds
xchg
mov
xlat
xlat
ja
mov
loope
dec
cmp
lret
dec
lahf
mov
cs
cmc
aam
test
mov
out
jbe
sbb
loop
jmp
in
lcall
dec
or
dec
jns
in
xchg
and
mov
dec
mov
iret
add
lret
out
pop
or
decb
rcl
or
mov
mov
rorl
inc
mov
shrl
pop
outsl
mov
add
push
sahf
bound
dec
fmulp
pop
hlt
xor
stos
mov
roll
add
decl
addr16
adc
mov
mov
repz
in
dec
cltd
sub
add
sbb
outsl
cli
inc
pop
xchg
xchg
mov
mov
and
sahf
shl
arpl
rcrl
mov
popf
fldt
mov
ds
push
imul
xchg
jae
fdivl
imul
icebp
ds
hlt
sbb
test
add
insb
or
scas
enter
fisttpl
mov
addr16
js
jb
loop
jo
push
jmp
jo
push
movsb
or
sbbl
mov
sub
dec
fidivrl
xor
sub
add
iret
inc
jmp
pop
dec
cmp
call
dec
notb
adc
mov
insl
movsl
adc
mov
dec
add
mov
fwait
push
sbb
aam
daa
test
adc
cld
dec
dec
mov
dec
xchg
add
aad
jne
ss
push
out
nop
inc
pop
fbstp
xor
cmpsl
outsb
sbb
xor
outsl
movsb
addr16
in
dec
push
mov
xchg
sbb
mov
scas
in
imul
fstl
adc
loopne
jno
hlt
xorb
xlat
aad
mov
mov
adc
out
in
mov
cmp
ja
sub
insb
out
adc
fisubs
mov
mov
scas
pop
xchg
ja
inc
jp
in
movb
cmp
jle
out
subb
test
repnz
std
sub
add
jle
out
pop
lret
movsb
sub
sbb
test
xor
leave
orb
int
xchg
mov
push
addb
or
cmp
enter
imul
aam
data16
gs
mov
outsl
pop
jb
in
movsb
dec
xor
hlt
std
in
leave
xchg
add
mov
mulb
stos
ret
int3
fisubs
lock
dec
pop
jmp
add
pop
xchg
inc
mov
inc
aas
push
repnz
inc
mov
jle
push
call
xchg
pop
cli
mov
fistpl
pop
pmovmskb
leave
dec
les
pop
mov
push
push
loopne
jb
inc
and
pop
cmpsl
mov
test
jmp
mov
push
in
aas
repz
call
adc
xor
iret
dec
int
mov
daa
inc
xchg
inc
jo
loope
sbb
js
test
xchg
cli
mov
or
out
imul
lock
in
lods
adc
sahf
shl
or
sub
pop
mov
mov
dec
ret
push
hlt
push
andl
clc
je
nop
fsts
dec
stos
aas
sbbb
mov
and
ret
push
and
popa
in
sbb
xor
sbb
pushw
test
xor
xchg
mov
jbe
aad
loop
adc
and
adc
or
scas
andl
popf
sbb
and
adc
faddl
dec
mov
enter
std
cmp
mov
and
dec
ds
sub
test
cli
lahf
sub
call
mov
cmp
cmp
xor
xor
inc
dec
aaa
lahf
insb
movq
sbb
divb
mov
nop
ret
add
movsl
nop
cmp
lods
sti
repnz
jl
inc
pop
mov
mov
sti
lret
sub
aaa
mov
pusha
mov
fdiv
icebp
cmp
dec
pop
or
xchg
icebp
cmp
and
aas
pusha
shl
sbb
ljmp
inc
out
sbb
call
ret
test
push
inc
push
ljmp
xchg
push
adc
xlat
mov
jg
pusha
jp
xor
push
addr16
pop
xlat
push
cmpsb
call
orl
cmc
mov
cld
dec
inc
aam
cltd
pop
push
insl
mov
mov
jae
adc
pusha
mov
dec
xchg
sbb
push
int3
mov
repnz
loop
push
jmp
xchg
enter
mov
jno
pop
mov
outsb
push
mov
fstpt
mov
push
jmp
push
mov
movsb
sbb
sub
test
xchg
xor
inc
outsb
hlt
sub
into
dec
adc
jb
sti
adc
dec
xlat
fwait
or
sub
dec
xlat
adc
jns
lods
mov
mov
push
negl
ljmp
sbb
inc
shll
adc
and
dec
popl
loopne
cmp
iret
shl
inc
pop
les
push
dec
dec
mov
lahf
movsb
rclb
pop
ja
pushf
inc
jbe
pop
mov
add
jmp
xlat
outsb
add
push
lret
into
mov
add
jnp
jmp
fistl
sbb
inc
mov
lahf
adc
mov
lahf
mov
das
xchg
sub
in
daa
ja
xchg
jp
mov
push
loop
push
cmpsb
pop
mov
xchg
jle
jnp
pop
push
mov
lcall
lods
adc
adc
popl
cmp
xchg
lods
in
int
mov
mov
or
xchg
pop
sbb
data16
sahf
adc
fdivl
inc
mov
adc
in
sub
sub
add
pop
cmc
jbe
mov
pop
test
jns
xchg
and
call
pop
cs
or
push
push
and
inc
loope
sbb
nop
pop
insb
outsl
or
insb
lcall
imul
aaa
rcrl
sarb
aaa
mov
mov
shlb
mov
daa
out
fisttpll
icebp
add
icebp
popf
je
int
dec
pop
sub
int3
inc
int3
mov
ret
insb
or
mov
xchg
pop
lds
or
push
add
xor
xor
nop
bound
data16
or
fcmove
test
std
leave
inc
data16
jnp
mov
int3
jge
out
outsb
mov
cmp
jl
scas
cmc
pop
mov
jne
lds
add
sbb
in
aad
xor
ss
xorl
repnz
mov
mov
xchg
gs
sbb
clc
and
lds
es
enter
jecxz
mov
inc
add
loop
dec
dec
fdivrs
push
or
in
rcr
dec
fnstcw
ja
inc
pop
mov
outsb
jle
push
push
lds
fidivrl
and
fbstp
movl
incl
cmp
jno
pop
enter
in
les
movsl
aam
arpl
push
ret
outsl
inc
loop
sub
adc
xchg
pop
jecxz
and
jge
les
in
je
stc
test
sbb
mov
rorb
fcoms
push
bound
sbb
aad
ret
cli
std
insb
mov
xchg
popa
sub
sbb
arpl
arpl
or
orl
mov
push
add
sbb
loope
rep
pop
fnstenv
shlb
inc
mov
leave
jle
mov
push
mov
pop
cld
out
sti
les
rclb
repz
pop
push
mov
cmpsl
jb
andl
bound
dec
sbb
mov
pop
cmp
inc
call
loope
mov
sub
xor
imul
inc
cmpsb
aad
fdivrl
push
lahf
iret
scas
jno
subl
or
daa
cmpsl
outsb
insl
push
jo
jbe
lock
jmp
fwait
cli
push
ljmpw
cmp
add
and
sbb
jle
out
cmp
xor
cmp
fsts
sti
jae
shrb
mov
cmp
pop
fdivrl
test
mov
das
pop
mov
rcr
repz
xor
dec
fidivs
outsb
sarl
sbb
pop
sub
sbb
mov
lods
pop
nop
cmpsb
iret
mov
mov
mov
jmp
xor
push
imul
pop
or
addr16
pushf
and
pusha
sbb
or
mov
sbb
test
jp
std
addr16
clc
mov
fwait
testb
imul
js
in
inc
dec
into
lahf
mov
cld
mov
and
jle
adc
imul
dec
dec
fsubrs
jae
lock
push
int3
push
sub
mov
addr16
shrl
icebp
dec
jbe
lods
jo
adc
xor
mov
mov
rcrl
pop
xor
cmpsl
dec
jno
test
or
xor
mov
xor
mov
inc
mov
mov
sbb
fcmovnu
cltd
or
imull
add
mov
cmp
add
sub
jnp
jne
push
fldcw
mov
jl
sub
mov
cmp
stc
fsubrs
jbe
ss
or
shl
sbb
mov
stc
leave
lret
push
xor
sub
and
adc
jae
and
out
stos
pop
arpl
mov
ret
imul
popf
jbe
inc
pushf
insl
ja
xlat
mov
bound
and
mov
repnz
dec
lcall
cmp
adc
insl
jno
cmp
or
pop
rcl
mov
mov
adc
pop
mov
push
jbe
xchg
ss
mov
inc
enter
jmp
sti
hlt
mov
add
jle
int3
filds
cwtl
aam
or
pushf
inc
cld
xchg
push
in
jns
int3
push
sbb
sub
cwtl
cli
cmp
cmp
dec
daa
js
rorb
movsl
mov
repnz
pusha
mov
mov
or
jg
scas
cwtl
cmp
addb
fisubrl
mov
add
mov
pop
jb
fs
mov
xchg
sarb
das
dec
inc
cmp
ljmp
push
inc
dec
inc
and
xchg
nop
dec
out
inc
adc
fdiv
add
and
and
jb
jg
pusha
outsl
cmp
in
int3
xchg
cltd
mov
dec
xchg
xor
rolb
popa
jecxz
cmp
mov
cmpsb
orl
out
jno
shlb
cmp
ja
aas
push
data16
leave
popa
sarl
cld
xor
dec
shrb
sub
adc
push
xor
jae
std
cmp
pop
or
or
insl
xchg
fists
mov
das
adc
lret
loope
dec
xchg
cmp
mov
shl
mov
adc
call
dec
icebp
sub
xor
xor
xor
push
push
jne
sub
sub
inc
sub
adc
das
outsl
sub
or
dec
scas
jae
mov
shll
mov
data16
add
pop
push
call
dec
cld
repnz
pop
or
imul
push
dec
lock
into
loope
icebp
jecxz
ret
mov
pop
fadds
pop
das
mov
dec
mov
cwtl
fadd
fcompl
aad
push
jo
jns
mov
push
xchg
mov
push
sbb
mov
in
out
ret
push
jg
sbb
into
dec
push
rcll
add
arpl
sub
mov
rolb
jne
xor
lods
out
mov
jns
leave
popf
pushf
add
and
push
cmp
es
js
adc
ret
out
push
cmp
lret
or
scas
roll
mov
ljmp
adc
adc
xchg
and
hlt
mov
div
es
out
push
and
gs
jp
shlb
push
and
jb
cltd
xor
sbb
push
mov
xchg
sub
jg
pop
mov
and
repz
push
dec
xor
pop
pop
std
xor
sub
stc
push
shll
xor
cs
lock
call
icebp
or
jbe
not
jge
out
cmp
dec
aam
daa
jnp
stc
imul
cmpsl
jp
aas
xor
add
fcmovnb
jnp
rcrl
xor
jne
jge
leave
cltd
xor
dec
and
or
test
in
test
sbb
cmp
cmp
notb
hlt
and
xlat
cld
cld
pop
popf
mov
sub
popa
notl
or
sub
sbb
inc
fldt
pop
pusha
xchg
xor
push
inc
out
in
sbb
xor
out
ds
push
push
int
jae
sub
inc
inc
adc
rcrb
cmp
mov
mov
mov
lcall
push
nop
push
clc
repnz
pop
stos
flds
xchg
cmpsl
test
fwait
pop
dec
outsl
sti
mov
sub
ret
int
stos
adc
mov
in
jns
push
add
insb
pop
sbb
adc
pop
sub
jmp
or
or
cli
mov
cmc
out
jo
dec
lock
or
and
popa
or
dec
and
out
sbb
and
jns
test
cmp
adcb
mov
pop
rorl
mov
jae
test
pop
inc
xchg
repz
and
mov
dec
lds
mov
leave
xor
lret
sti
pop
sbb
xchg
pop
or
cmpsl
lahf
in
sub
sub
mov
clc
outsb
adc
dec
and
pop
jle
in
testb
sbb
inc
adc
mov
mov
lret
in
aam
and
inc
lahf
into
mov
jl
jo
je
push
inc
jp
inc
mov
repz
xchg
mov
enter
movsl
ja
mov
xor
fmuls
cltd
jg
lods
xchg
push
out
in
add
sub
pop
inc
pushw
inc
lods
and
jbe
push
ret
inc
into
outsl
add
jecxz
jo
es
ss
mov
in
loope
cmp
rclb
test
push
sub
pop
jae
shrl
daa
jns
rol
add
cmp
incl
lea
inc
jecxz
inc
add
test
out
lcall
inc
int
pop
sbb
push
lcall
adc
sbb
movsb
subl
daa
shl
cli
lret
pop
sbb
cwtl
jo
movsb
or
mov
push
mov
jg
sti
inc
aaa
sbb
insl
in
jp
out
lods
stos
pusha
dec
jno
jb
push
shlb
pop
dec
xchg
arpl
mov
fidivrs
adc
incl
xchg
push
call
pop
xor
adc
sbb
call
in
pop
call
mov
adc
and
rclb
jmp
xchg
pop
xor
sub
fmuls
mov
push
ja
pop
popa
leave
jp
inc
pop
aam
lret
repz
sbb
or
andb
mov
aaa
mov
stc
adcl
pusha
in
and
inc
dec
xor
sbb
mov
or
fimull
mov
push
mov
pop
jne
ds
adc
ret
add
cmp
cmpsb
mov
pop
repnz
andl
cs
push
arpl
scas
and
add
cltd
popf
scas
pop
push
jbe
lret
nop
sbb
scas
mov
test
mov
dec
imul
outsl
inc
idiv
pop
mov
mov
es
outsb
push
pusha
pop
call
cs
sarb
and
stc
add
or
or
push
leave
jmp
push
fcmovnu
jecxz
sahf
xchg
pop
mov
jp
int3
insb
insb
das
sub
pop
std
push
mov
hlt
bound
lods
pusha
jmp
xor
aas
inc
decb
fnstcw
or
stos
fwait
stos
push
inc
mov
add
data16
jo
flds
xchg
pop
cmp
jne
lods
and
cmp
xchg
es
push
adc
push
sti
xchg
ret
push
imul
mov
dec
mov
push
mov
jb
jl
and
sahf
cmpsl
ret
pop
xlat
out
cmp
jmp
in
adc
jmp
pop
iret
adc
test
loop
mov
int3
jl
repnz
pop
xor
pop
in
adc
ja
into
mov
loopne
clc
and
imul
cmp
fcomp
pushf
shr
pop
jmp
test
fstl
clc
icebp
leave
push
iret
jmp
add
dec
and
inc
out
add
leave
les
inc
stos
mov
jo
or
lods
push
dec
jge
mov
dec
add
movsb
pop
push
divb
sahf
testb
lea
xor
nop
mov
int3
lock
enter
sbb
dec
mov
repnz
repnz
je
data16
loopne
in
sub
and
cmpsb
shll
xlat
or
test
mov
mov
out
sbb
lcall
mov
mov
aas
xchg
xlat
sbb
pop
ds
ljmp
fs
and
add
mov
push
pop
popa
pop
insb
mov
mov
mov
xchg
fmuls
jecxz
mov
xchg
frstor
mov
cmp
xchg
and
mov
es
or
aad
mov
sub
popf
sbb
clc
mov
jae
jmp
sbb
mov
cli
xor
jbe
lds
rclb
jge,pn
xchg
push
sub
in
xchg
sub
movsb
lret
pop
xor
shr
xor
add
imul
pop
mov
mov
mov
sbb
inc
in
xchg
push
sub
out
js
jge
mov
int
add
jmp
aas
cmp
mov
lods
jo
into
in
inc
mov
mov
cld
sub
stos
adc
xchg
adc
mov
jnp
shlb
ret
xor
xchg
pop
test
mov
xor
ljmp
int3
insb
aad
xor
fs
or
xchg
jle
notl
movsb
xchg
pop
jg
pop
rcrb
mov
mov
jo
loopne
mov
movb
mov
dec
sub
mov
imul
pop
dec
xor
sbb
lds
ljmp
xor
movsl
ficoml
lret
enter
loope
lret
jbe
push
and
pop
jl
ret
pop
inc
jo
inc
inc
sub
dec
push
or
icebp
imul
inc
or
sub
scas
mov
or
pop
scas
int
jmp
inc
mov
sbb
mov
or
inc
int3
sub
insb
test
es
cwtl
dec
inc
std
inc
mov
lods
add
popa
push
popl
loop
imul
push
into
pusha
jg
add
mov
cwtl
xlat
dec
add
mov
out
mov
xchg
pop
js
int
adc
or
das
jl
ret
aam
cs
xchg
inc
ss
add
cmpsb
in
inc
cld
lret
jp
add
sbb
stc
jle
lahf
leave
shll
and
out
mov
sub
out
and
out
jns
cmp
push
stos
in
mov
stos
sbb
adc
jns
xchg
inc
dec
pop
outsb
mov
pop
lret
pop
pop
dec
stos
lods
xchg
enter
je
shll
shlb
fs
lret
and
pop
pop
andb
mov
pop
imul
das
movsb
mov
fsubl
cli
out
cmp
push
jo
sub
sbb
out
testb
fcomp
and
fisubrs
fnstenv
inc
lret
jb
sbb
mov
dec
mov
jg
cs
jmp
fsubrl
stc
test
xlat
dec
imul
out
repz
fbld
dec
and
jns
adc
int
cmpsb
movsb
adc
stos
xor
mov
push
mov
addl
rorl
xlat
sbb
dec
xor
inc
ret
xchg
icebp
xchg
mov
arpl
jb
data16
aaa
insl
pop
ret
mov
addr16
add
jge
inc
cli
xchg
nop
xor
xlat
pop
cmp
jecxz
fs
lods
lret
sbb
or
mov
int
xor
mov
stos
cmp
jne
mov
addl
sbb
sbb
xor
outsl
fwait
pop
inc
jno
xchg
cmp
repz
mov
mov
mov
lds
xchg
scas
sub
stos
push
push
xlat
mov
mov
pop
jge
adc
cmp
ljmp
int3
arpl
ljmp
sbb
stos
add
inc
cmp
pop
sti
sbb
dec
bound
out
adc
or
aas
test
adc
fdivl
jle
push
in
leave
pop
bnd
dec
outsl
push
stos
mov
dec
mov
lods
sub
jmp
outsb
adc
subb
xchg
push
jno
fwait
or
movsl
cmovle
add
or
inc
lret
cmp
rolb
mov
or
out
jmp
cmp
loope
adc
pusha
mov
lcall
mov
iret
movzwl
dec
dec
jmp
and
fcoms
lcall
lcall
inc
mov
orb
mov
pop
xchg
aad
inc
insb
cwtl
imulb
xchg
jecxz
ja
add
out
xor
pop
jp
inc
mov
ret
lods
int
jb
cmp
cli
mov
rcrb
sbb
das
ja
xlat
movsl
fcoms
out
in
je
sti
daa
xchg
aam
subb
push
mov
adcb
jl
mov
nop
add
push
mov
xchg
movsl
cmp
and
jmp
add
mov
xor
rcl
shl
sbb
movsl
int3
add
or
add
mov
jb
fs
or
inc
adc
clc
mov
notl
hlt
dec
rcll
sbb
mulb
xchg
mov
push
and
cltd
fsubl
pop
in
insb
cmp
sbb
sahf
cmp
push
jp
mov
shll
repnz
inc
fldcw
pop
adc
outsl
and
jp
and
or
push
pop
sub
push
mov
dec
dec
or
add
movsb
jle
or
scas
and
out
lret
and
insl
xchg
mov
push
xor
es
aas
ja
fcoml
inc
cmp
mov
cwtl
or
in
enter
pushf
lret
ret
in
jne
movsb
in
sub
or
sbb
mov
inc
jne
pop
jg
jmp
aaa
sbbb
mov
ss
cltd
jno
ja
lahf
int3
fstl
cmp
sti
mov
das
pop
pop
inc
test
out
adc
iret
addr16
jns
lahf
out
inc
das
idivl
stc
aas
out
fildl
sahf
sbb
adc
mov
dec
int3
mov
mov
clc
lods
push
and
je
lea
pop
dec
in
lods
movsb
emms
ret
push
mov
in
inc
pop
out
daa
pop
and
mov
jne
cmpsl
je
inc
dec
js
scas
divl
push
xchg
fnsave
aad
push
les
imul
pusha
in
enter
xor
out
in
xchg
cmc
dec
fbstp
jmp
cli
xorb
leave
out
mov
lock
adc
rolb
repz
data16
push
and
in
sbb
dec
xor
xlat
data16
cmp
imul
jb
popf
andl
mov
mov
jne
lods
jns
mov
lods
gs
sbb
test
jmp
insb
jns
push
std
sbb
and
mov
std
xor
mov
ljmp
mov
scas
cwtl
push
dec
jge
std
mov
pop
or
cld
sbb
xchg
mov
mov
lds
cmp
rcrl
popa
jb
div
fucomp
and
dec
jecxz
mov
xor
shlb
loope
lcall
add
adc
fs
ss
repnz
or
mov
shlb
orb
and
inc
lock
andl
xor
in
nop
sbb
push
in
jo
lret
ljmp
push
sbb
jecxz
adc
or
sarb
and
sti
sub
mov
sub
cmp
fidivl
mov
pop
dec
jne
sbb
push
mov
xor
add
push
dec
js
lods
mull
add
ret
stos
mov
cs
aad
push
rcll
sbb
add
popf
pop
lret
ja
or
cmp
sbb
loop
mov
arpl
aas
mov
mov
sub
ljmp
mov
push
movsl
xlat
addb
out
orb
push
pushf
out
jne
mov
jae
mov
sar
mov
jmp
test
adc
iret
pop
jnp
sbb
push
lcall
pop
mov
and
rorl
adc
mov
bnd
or
mov
cmpsb
in
dec
xchg
pop
mov
int3
adc
bound
in
hlt
fdivrs
lret
sub
or
jno
loope
cmp
sub
dec
enter
mov
in
sbb
bound
mov
lret
mov
mov
adc
lock
inc
test
mov
pop
popf
lahf
lcall
xor
xor
add
mov
shr
js
mov
dec
adc
packsswb
dec
mov
adc
rclb
notb
ficoms
test
or
dec
jae
mov
adc
fadds
scas
jb
lods
stos
enter
std
cld
mov
jmp
pop
outsb
ror
das
mov
loope
ss
adcb
dec
pop
das
fwait
sub
cwtl
adc
cmp
in
in
sbb
push
mov
mov
aaa
insb
pop
sub
adc
scas
or
cmc
aaa
out
inc
daa
add
sahf
pusha
cmp
pop
xchg
pop
xchg
inc
xchg
fwait
sub
dec
xchg
inc
pop
mov
stc
fs
in
jns
shr
cli
out
lds
add
into
inc
ds
add
mov
aas
mov
repnz
sti
or
cmp
es
inc
and
pop
popf
pop
ret
aad
xchg
enter
dec
or
dec
inc
jl
call
aam
in
mov
sbb
fldl
xor
leave
jp
sbb
jno
cs
push
ret
aas
dec
in
cmp
adc
sub
fnop
push
aam
pop
cmp
dec
movsl
test
mov
stos
inc
in
push
stos
adc
shll
and
stos
fnstenv
in
inc
add
adc
in
mov
inc
mov
cmp
dec
adc
push
cmc
int
arpl
cmp
fistl
ds
xlat
pop
sbb
arpl
and
das
push
inc
leave
jecxz
lods
mov
cmpsl
adc
push
cmp
movb
lods
adc
outsl
dec
mov
push
fwait
lods
sbbb
mov
lods
sub
mov
or
lret
push
xchg
lcall
xchg
frstor
mov
adc
es
test
popa
dec
daa
cmp
add
xchg
xchg
aad
test
cwtl
adc
xchg
mov
jge
adc
aad
repnz
out
fwait
or
fsubs
or
cmpsb
mov
pop
lds
dec
xchg
popa
popf
lods
repnz
mov
fsubl
or
pusha
xchg
jge
push
popf
pop
or
mov
jb
and
mov
ja
push
daa
movsb
cmp
cmp
cmp
adc
in
xchg
loop
jg
mov
fmul
sub
cmpsl
and
aaa
clc
addl
loope
scas
enter
jbe
cmpsl
stos
out
and
rcll
fsubrl
or
mov
mov
pop
icebp
inc
xchg
ret
repz
jb
add
mov
jge
outsl
rcrl
xchg
insl
fwait
pop
inc
andnps
add
sub
data16
into
mov
daa
pop
in
mov
dec
cld
lret
cmpsl
xchg
or
lods
inc
aad
push
ror
inc
loope
mov
stos
mov
lock
hlt
stc
pusha
stos
das
mov
sbb
lods
pop
mov
mul
xor
add
sub
push
rorl
mov
lods
movsl
js
xchg
repz
dec
mov
mov
out
test
cld
and
pop
or
add
jno
andl
pusha
mov
sbb
inc
andb
das
jns
mov
xor
das
cmp
add
jp
out
fbld
into
xor
mov
sub
test
fwait
pop
sbb
out
jmp
xchg
adc
jns
movsb
mov
cmp
movsb
movsb
mov
inc
and
loopne
adc
push
into
mov
pop
adc
inc
mov
repz
cltd
cmp
jbe
shrl
rolb
jp
push
pop
outsl
fcomps
sbb
adc
orl
cltd
or
pop
loop
lcall
xlat
lods
loopne
dec
ficomps
mov
call
repz
sti
in
fildll
fnstsw
cmpsl
lods
fs
xchg
into
pop
ficoms
dec
jb
jnp
fs
cmpsb
or
aas
das
ljmp
mov
insl
xorl
mov
adc
push
out
stos
add
xor
lods
add
aad
js
jns
mov
sbb
mov
test
adc
mov
add
mov
push
push
xchg
lods
push
jmp
dec
ds
daa
push
cmp
push
cmp
push
insb
lahf
sub
sbbb
test
ljmp
cmpxchg
loope
cwtl
mov
jns
mov
cmp
adc
pushf
pushf
jns
sbb
and
mov
sahf
adc
pusha
cmp
push
cmpsl
mov
dec
movsb
cltd
fwait
pop
andb
push
jle
inc
in
les
imul
stc
adc
jbe
sub
push
cmpsl
jo
mov
in
out
pmaxub
mov
fdivl
sahf
into
stc
jl
fwait
mov
dec
imul
mov
mov
in
arpl
push
sub
bswap
push
fwait
xchg
dec
mov
pop
lds
leave
push
arpl
fdivrl
insl
cmc
mov
or
mov
jge
or
push
shrb
xchg
dec
popa
and
jb
inc
xchg
jne
jmp
pop
movsb
cmp
jmpw
popf
pop
cmp
xor
mov
aas
cmp
vsubss
sbb
mov
stc
out
or
pop
jl
cmp
inc
hlt
sub
push
mov
dec
jge
mov
scas
sbb
fucomp
lret
out
push
in
es
addb
nop
insb
js
add
fucomip
loope
and
sub
fsubl
stc
ja
xor
aaa
pop
and
pop
mov
cltd
sbb
cli
cmpsl
xlat
pop
xchg
jl
mov
lret
mov
cmp
insl
xchg
notl
inc
push
push
fnstenv
dec
sbbb
adc
fdivl
aas
into
and
scas
xor
cmp
or
out
lods
lret
sbb
mov
lods
loop
dec
lcall
mov
stos
sub
add
xchg
sbb
sti
lret
mov
test
lret
movsl
out
stc
mov
jmp
mov
mov
cli
aas
add
shl
jg
shlb
test
shr
jae
adc
mov
lods
psrld
xchg
lods
insl
push
shr
jmp
sub
pop
mov
and
push
lds
js
cmp
dec
mov
mov
ret
ss
scas
stos
icebp
loop
scas
addr16
aas
adcl
es
leave
jae
pusha
inc
and
imul
mov
pop
and
pop
vpackssdw
in
das
mov
lret
test
jp
push
icebp
frndint
push
int
cs
mov
mov
stc
adc
sarb
clc
cmc
loopne
inc
psadbw
and
cmpsb
in
scas
cs
cli
imul
addb
cmp
mov
xchg
sub
testb
movsb
loopne
adc
nop
fwait
add
rol
xchg
in
xor
fwait
sub
sub
mull
je
lret
out
mov
pop
cmp
xor
xchg
mov
loope
add
mov
cmpsb
lods
loop
repz
or
lods
jl
push
ret
aaa
sbb
push
iret
neg
ud2
fdivrs
out
sbb
lock
jne
add
mov
fists
mov
jb
aas
lahf
mov
xchg
xchg
test
add
popa
sub
pop
push
adc
addr16
and
mov
icebp
out
fcompl
incl
movb
cmc
or
lahf
repnz
xchg
cmp
xchg
mov
aam
loope
xchg
popf
aam
rdrand
dec
inc
sub
inc
mov
push
push
shll
out
call
repz
out
xlat
mov
in
jno
imul
dec
jge
ds
inc
mov
test
cmc
or
mov
fistps
jnp
push
cmp
ss
xor
fnop
jne
imul
out
xor
cld
mov
xchg
hlt
cmpb
mov
out
addl
stc
xchg
push
enter
pushf
fwait
mov
test
jae
mov
inc
sti
movsl
xor
icebp
shll
jns
mov
cld
shlb
mov
xchg
pop
xor
bound
fnsave
jmp
out
mov
add
ficoms
adc
insl
pop
shll
push
iret
loop
nop
in
dec
mov
mov
stos
nop
sub
push
pop
inc
xor
mov
lods
and
mov
js
dec
pusha
ret
subl
jecxz
jmp
fwait
lahf
pusha
xchg
imul
push
pop
out
cmp
add
push
clc
mov
push
idivl
das
leave
popa
mov
lret
into
push
cmp
xchg
lea
mov
sub
and
add
lret
scas
addr16
in
xchg
lea
shlb
push
stos
orb
fstpt
adc
mov
nop
mov
and
mov
mov
mov
stc
cmp
or
cmc
shl
aad
mov
pusha
out
mov
adc
ret
arpl
shrb
jo
ljmp
xor
pop
negl
icebp
xchg
mov
int
insl
jo
mov
sti
in
insb
push
scas
adc
jne
jp
data16
rcrb
push
iret
add
or
out
jge
pop
test
fstpt
cmp
rcr
dec
jmp
inc
lds
in
scas
stc
xor
push
fistpl
rol
cmp
xchg
fdivrp
aam
jns
push
inc
sub
inc
xchg
fsts
push
xchg
rol
add
dec
movsl
adc
add
dec
in
adc
mov
adcl
stc
add
mov
pop
in
mov
sub
mov
mov
mov
dec
inc
sub
mov
sub
les
lods
shl
mov
sbb
repnz
cmpsb
cltd
push
push
and
roll
loopne
jno
inc
rcrl
das
aaa
daa
cmp
and
xor
int
sbb
cli
inc
push
add
aam
and
sti
mov
pop
jbe
fdiv
arpl
out
push
xorl
lods
gs
jnp
cmpsb
test
xor
jns
addr16
inc
mov
aad
mov
enter
int
cmc
movsl
lahf
or
rcrl
insb
popf
fisubl
and
das
daa
lret
pop
aam
dec
addr16
nop
push
mov
test
jnp
sub
lea
jecxz
les
insl
in
inc
xlat
and
xor
jnp
push
adc
xor
cltd
sbb
jmp
cwtl
pop
mov
pop
sbb
out
push
iret
inc
out
or
pop
test
mul
aad
lods
and
das
pop
pop
push
dec
inc
dec
cld
xor
add
fisubs
repnz
in
or
test
dec
lock
cmp
sub
lods
push
bound
mov
fldcw
rorb
es
mov
mov
aad
push
mov
push
stos
lds
mov
out
inc
and
sarb
pop
inc
dec
js
sbb
push
aas
fcomps
dec
cmp
out
ja
outsl
mov
mov
pop
sbb
mov
push
dec
jg
push
jmp
xchg
loop
dec
jns
rclb
xor
in
nop
mov
loop
out
add
and
push
xchg
js
out
cmp
xor
mov
ljmp
je
jb
ficoms
leave
sub
js
hlt
push
loopne
ljmp
fbstp
js
call
aas
std
sbb
sbb
adc
jg
or
icebp
repnz
movsb
jnp
cmp
add
xchg
iret
cmpsl
scas
xor
jg
cwtl
notb
xlat
outsl
sub
loop
fcomps
and
push
inc
and
fidivrl
bound
cmp
aaa
ss
outsl
iret
mov
loopne
movsb
mov
iret
nop
insl
decl
adc
or
mov
das
jne
xlat
inc
loop
pop
sub
lea
mov
or
sub
and
idiv
in
mov
shll
fwait
outsl
insl
jne
cltd
ret
mov
repz
lods
icebp
push
sub
cmpsl
fs
push
or
mov
in
inc
or
out
pusha
jnp
xchg
aaa
lods
cld
push
scas
pop
xor
or
rcll
adc
es
cmc
icebp
cltd
dec
insl
je
imul
fldcw
rcl
lea
arpl
pop
sbb
enter
add
mov
mov
into
jge
cmp
shrl
ficoml
xor
mov
sub
cli
jp
mov
push
jae
fcom
cmp
mov
or
inc
out
jecxz
or
mov
and
stos
lods
push
add
fldl
out
xchg
push
stc
jmp
mov
mov
and
pop
xor
fistps
pop
pop
add
mov
sbb
sub
shll
dec
add
clc
rcrb
and
mov
push
jbe
addl
adc
fwait
sbb
mov
incb
aaa
mov
ds
loope
xor
popf
jg
repz
dec
jae
lods
dec
ret
or
out
repz
ficomps
cmp
mov
cmc
push
gs
and
xchg
push
xchg
mov
cwtl
lahf
fsubrs
imul
fstpt
aas
cmp
aaa
decl
mov
jp
jnp
jle
sti
lret
jns
movsl
in
adc
pop
enter
dec
push
jo
add
pushf
cs
in
lret
dec
inc
lret
cmp
ss
clc
mov
sub
dec
aaa
fdivr
and
push
xorb
test
rorl
and
insb
push
scas
fidivrl
cmp
into
pop
mov
cmp
test
jne
sbb
cmpsb
and
outsb
pop
es
push
xor
jle
xor
jle
dec
or
es
mov
daa
aas
mov
stc
hlt
or
cmp
or
pusha
outsl
inc
push
fs
lea
out
mov
lods
gs
mov
jl,pn
mov
mov
ret
loopne
sub
cmp
fimuls
mov
test
jl
ret
in
daa
out
push
jmp
test
divb
jo
mov
push
dec
js
push
mov
out
adc
pop
andl
push
aad
pop
cmpsl
shl
mov
dec
cmp
pop
add
pop
mov
fmul
push
jge
jnp
xor
sbb
jbe
cwtl
cmp
cmp
popl
fisubrl
dec
sbb
push
jg
mov
sbb
pop
lock
addl
pop
cmp
mov
mov
cs
scas
mov
mov
out
mov
sub
je
jl
imul
xchg
je
mov
loope
and
xchg
cmp
sbb
push
into
andl
sbb
inc
mov
mov
mov
inc
xchg
add
insb
inc
dec
repnz
or
ds
mov
insb
jg
mov
jge
lock
sbb
xchg
cmp
mov
fdivrs
inc
mov
jnp
or
icebp
je
inc
clc
cmp
test
icebp
addl
cmpsb
sbb
aam
sbbb
mov
pop
cmp
bnd
movsb
je
push
lahf
jo
cld
out
xchg
outsl
mov
cwtl
sbb
repz
mov
mov
in
stc
mov
adc
clc
dec
loope
rcr
xchg
sub
or
mov
cli
test
jo
in
ret
aas
into
test
dec
test
divb
fwait
cmp
sbb
push
mov
mov
pop
ret
mov
lock
sub
lods
cmp
outsl
outsb
leave
cmc
cmp
pop
or
xchg
mov
mov
add
ret
jmp
outsl
scas
pop
adc
xor
adc
dec
sbb
pop
jns
cmp
add
jnp
aam
xor
insl
aad
pop
jle
jnp
xor
ret
insl
lods
jns
jnp
jge
dec
xchg
out
mov
add
data16
pop
lea
lret
pop
inc
and
jg
fsubrs
aam
cmpsb
and
mov
or
mov
ret
xor
dec
mov
test
stos
jge
loope
fstps
dec
rclb
pop
or
inc
ja
cwtl
mov
xchg
inc
loopne
insl
insl
popl
jne
in
js
cltd
pop
or
adc
mov
xlat
lret
jno
mov
test
inc
sub
pop
jl
xor
test
es
cmpsl
hlt
or
pop
xchg
pusha
lods
dec
jecxz
popf
fldcw
lods
out
movsl
pop
add
subb
leave
sbb
shrl
push
and
mov
sub
imul
or
pop
stc
test
push
adc
jbe
xchg
sbb
in
jmp
out
inc
ficoms
outsl
pop
addr16
cmp
push
fs
and
or
fcmovnu
imul
dec
clc
repz
xchg
fsubrs
pop
cmpsl
jecxz
std
jmp
aam
inc
sbb
mov
aas
mov
leave
mov
in
das
enter
ret
cmpsl
pop
shlb
dec
adc
xor
jb
lods
enter
dec
dec
push
mov
mov
cmp
mov
dec
xchg
jmp
adc
xchg
mov
jge
out
lds
xlat
inc
out
sub
hlt
daa
lods
sbb
int
arpl
push
mov
in
or
jno
dec
dec
ret
sub
add
rcll
and
add
pop
test
dec
mov
adc
push
xchg
sub
into
data16
mov
out
loope
jmp
cld
fdivrl
xchg
outsb
mov
xchg
loopne
shll
xchg
imull
sbb
pushf
fisubl
mov
mov
loope
orl
popa
jbe
and
jmp
add
fstps
push
mov
jecxz
aam
fcomps
sub
shlb
inc
pop
push
inc
and
rcrb
out
dec
pop
jmp
pop
mov
mov
shrb
push
jmp
adcl
xor
iret
jns
mov
add
testl
jmp
mov
dec
int3
vcvttpd2dq
in
sarb
mov
js
mov
stc
push
pop
or
test
mov
int
or
stc
mov
pop
out
or
loope
std
xchg
push
mov
mov
movsb
jmp
sarl
movb
pop
mov
out
enter
mov
stc
push
pop
out
adc
hlt
jae
dec
dec
outsb
dec
and
leave
imul
insl
ds
es
dec
mov
test
jne
xchg
mov
mov
out
and
xchg
sbb
add
inc
insb
and
dec
mov
mov
pop
push
mov
push
mov
out
mov
stos
jbe
aad
lds
js
out
mov
rol
inc
xchg
inc
cmpsl
rcl
popf
test
pop
push
sub
push
push
imul
enter
je
or
mov
subl
push
mov
fstl
mov
test
xor
sub
test
mov
sti
pop
pop
mov
mov
inc
and
dec
jnp
sbb
mov
mov
in
sti
xor
push
and
in
inc
sub
adc
fildl
pop
stos
and
rcl
xchg
push
clc
xlat
ret
in
and
andl
out
inc
bound
mov
in
js
out
and
mov
mov
loop
sarb
mov
pop
data16
jmp
shll
inc
int
inc
mov
fdivp
sbb
aas
aad
adc
rolb
jge
jo
pusha
jge
dec
ret
xchg
pop
sub
lea
mov
iret
sbb
aad
ss
and
pop
mov
lret
or
pop
clc
sti
inc
jns
mov
mov
std
mov
jo
xchg
xorl
insl
scas
pop
stos
popa
lret
ds
inc
or
imul
sbbb
jecxz
mov
cmpsl
mov
xor
add
pop
ret
jae
sar
cmp
mov
mov
cld
mov
cltd
cmp
loopne
dec
mov
out
repz
clc
xor
add
mov
rcr
push
mov
lods
mov
fsubrs
je
sbb
imul
fbld
aaa
loope
bound
inc
ret
out
roll
out
xchg
lcall
adc
int
hlt
sub
movsl
xor
rolb
dec
scas
or
mov
xchg
sub
mov
dec
or
dec
mov
dec
jo
inc
or
out
pop
into
mov
pop
imull
push
sub
inc
loop
push
mov
out
mov
mov
sbb
mov
or
sahf
ret
pop
add
popa
inc
jae
mov
jge
and
test
in
sbb
repz
int
push
sub
jno
sbb
sbb
inc
out
add
popf
hlt
push
jne
sbb
int3
add
jns
movb
mov
inc
inc
jp
hlt
aaa
gs
dec
mov
sub
jns
cmpsl
mov
xor
lcall
dec
pop
adc
adc
dec
mov
aad
add
lret
xlat
xor
xchg
ljmp
pop
jle
repz
mov
push
adc
xchg
ja
xor
fwait
stos
popf
jae
out
imul
cmp
push
jbe
test
leave
mov
popa
sub
ret
mov
psubd
ds
leave
sub
pushf
pop
call
mov
mov
movsl
inc
jl
mov
mov
pop
mov
and
mov
jo
scas
gs
orb
push
and
test
in
mov
nop
cmp
mov
test
cli
nop
in
cltd
mov
adc
mov
insl
mov
sbb
out
aad
and
sbb
jmp
loopne
push
jecxz
jg
and
jge
pop
sbb
dec
jmp
jns
daa
out
mov
sbb
fstps
dec
mov
scas
pop
jg
in
pop
sti
aas
lahf
and
daa
push
push
jmp
jl
fadds
std
not
movsb
xchg
insl
pop
xor
mov
or
cwtl
rcrb
mov
daa
xchg
jg
popa
jbe
sub
xchg
sbb
or
arpl
inc
pushf
or
cmp
fiaddl
pop
pop
and
lcall
sti
sub
cmpsb
jo
aaa
into
inc
jnp
lds
notb
lea
std
adc
push
outsl
lods
iret
pop
inc
sub
mov
jmp
testb
push
mov
adc
in
lock
scas
push
mov
stos
cmp
fdivrp
jg
jno
xor
leave
js
mov
or
mov
insl
repz
mov
mov
or
xor
inc
imul
sub
mov
add
xchg
cmpsb
xchg
cmp
std
sbb
sarb
xchg
sbb
into
ffreep
xchg
mov
cmpsb
not
mov
jbe
adc
mov
push
test
dec
data16
add
xorb
or
into
cmc
in
mov
cmp
xchg
fwait
aam
mov
add
pop
mov
jl
cmp
or
sbbl
jmp
mov
fisttpll
scas
loope
and
cmp
pop
fbld
adc
outsl
stos
aas
and
sub
lods
inc
mov
push
cmpsb
push
pop
fidivrl
xchg
es
ret
and
test
mov
jmp
loop
dec
adc
lock
push
rorl
jg
fnstenv
cmpsb
mov
jp
dec
clc
xchg
sub
mov
mov
inc
jg
dec
jge
inc
not
xor
cs
push
ss
aad
sti
mov
aam
xorb
ds
and
jne
mov
sahf
jne
bound
jl
mov
xlat
or
orb
push
mov
mov
outsb
or
push
mov
je
add
addb
dec
out
push
arpl
sub
mov
mov
aam
and
mov
lahf
leave
mov
mov
aas
mov
dec
cld
rcr
sub
xlat
out
pop
in
lahf
inc
jo
std
iret
mov
inc
sbb
adc
xchg
jb
out
xchg
enter
add
and
jle
orl
das
rolb
fst
jge
sub
pop
incl
iret
shll
iret
movsb
sub
mov
or
dec
insb
lret
stos
pusha
int3
adc
loop
cmp
mov
ds
lret
pop
bts
andl
dec
cmp
jae
rol
stos
call
jne
cmpsl
arpl
mov
pop
jbe
rcll
mov
test
adc
fisttpll
xchg
and
out
lret
inc
sti
repnz
jl
lret
fwait
mov
lret
aam
cmp
fwait
mov
mov
sti
push
test
imul
cmpsl
test
xlat
inc
xchg
inc
and
pop
ret
cmpsb
push
adc
lret
mov
js
imul
andb
push
bound
push
jmp
out
mov
sahf
imulb
lods
sub
xchg
js
adc
scas
push
lret
subb
lahf
sarl
shlb
push
dec
movsl
mov
cmpsl
sub
jb
and
mov
mov
in
popa
je
daa
pop
or
test
mov
cmp
addl
sub
sbb
or
pop
packsswb
dec
add
jecxz
leave
or
adc
dec
lret
push
mov
ret
ret
aad
lock
in
dec
xchg
pop
inc
xor
lret
dec
fistpl
and
add
cld
push
imul
daa
inc
divl
push
jno
cmp
outsl
pop
clc
mov
xorb
cmc
incb
adc
push
pop
fcmovnb
or
xchg
inc
movsl
bnd
jbe
je
cmp
cmp
and
sub
shll
sbb
and
int3
push
cltd
jge
mov
adc
pop
in
and
inc
movsb
sub
lods
inc
fidivl
movsb
mov
cmp
js
jp
out
lods
scas
cltd
mov
pop
mov
xor
pusha
pushl
pop
dec
into
push
enter
mov
aas
int3
lds
add
test
push
or
adc
pushf
ret
sysret
jae
dec
mov
mov
adc
gs
out
ljmp
pop
or
dec
inc
or
mov
jmp
push
cmp
cwtl
std
add
add
pop
mov
aas
xor
mov
ds
jnp
xchg
sbb
in
push
out
xchg
xchg
das
xlat
push
and
inc
in
in
lods
mov
mov
aam
ja
dec
adc
out
stos
mov
es
call
xchg
shlb
sub
das
cmp
push
call
cld
sbb
dec
aaa
lods
loope
movsb
dec
mov
mov
inc
imul
adc
jecxz
jge
xchg
xchg
pop
push
int
js
das
out
jb
scas
roll
add
pop
xchg
mov
in
fcmovne
jl
mov
xor
adc
mov
sarb
sub
enter
mov
xor
dec
shrl
mov
in
mov
mov
sbbb
add
cmp
andl
lods
dec
xchg
xchg
mov
sub
jno
push
adc
jne
leave
push
inc
cmp
cmp
xchg
mov
xchg
rcll
loope
jg
fwait
sbb
test
mov
out
push
xchg
mov
aas
jb
mov
es
cmovnp
outsl
cs
ror
mov
syscall
xor
pop
add
shl
pop
mov
dec
add
pushf
das
in
pop
xchg
xor
dec
aad
jns
dec
push
mov
cmp
push
xchg
adc
dec
pushaw
cmp
lcall
adc
dec
insl
movsb
int3
push
xchg
in
stc
and
mov
or
pusha
rclb
out
ret
add
popa
stc
sub
pop
scas
adcb
insl
cld
cwtl
arpl
ja
mov
fdivrp
insb
xchg
jg
lret
mov
ljmp
mov
mov
adc
push
negb
pushf
out
je
test
add
adc
and
jecxz
sbb
push
mov
jge
inc
mov
mov
stc
int3
aas
cmc
leave
inc
adc
xchg
popf
dec
lahf
cmc
jno
xchg
mov
test
jle
add
dec
mov
xchg
cli
adc
fst
rclb
lds
fldl
iret
add
add
ljmp
dec
sbb
push
add
aam
push
mov
repnz
dec
out
test
and
add
sbb
pop
or
adc
xchg
call
scas
pop
xchg
sti
insl
dec
mov
xchg
dec
dec
int
xchg
mov
mov
ljmp
ja
sub
adc
out
ret
popa
stos
dec
scas
loope
mov
mov
xchg
push
push
cltd
enter
push
adc
push
rcpps
push
fbld
sbb
add
inc
div
adc
jno
cmp
xchg
mov
mov
in
cmp
out
adc
and
jg
push
aas
stc
mov
mov
andb
mov
repz
dec
inc
push
fnstcw
data16
repnz
pop
dec
fiaddl
lods
or
and
sub
inc
out
push
mov
mov
add
push
dec
push
mov
pop
sbb
clc
cmpsb
jne
int
mov
xchg
js
ss
cmpsl
cmpsl
jg
push
imulb
std
xchg
or
adc
push
cltd
jl
mull
dec
dec
std
add
push
fistpll
dec
std
or
scas
mov
rorl
mov
adc
lcall
jecxz
rolb
mov
sbb
stc
add
jo
data16
sbb
dec
fisttpl
cli
jle
xchg
xor
dec
stc
or
cwtl
fs
sub
xor
and
test
adc
cmp
adc
enter
dec
ss
mov
prefetch
movsb
cwtl
sarb
je
adc
in
jns
jg
bound
pmulhuw
mov
insb
loop
add
scas
subb
out
pop
sbb
mov
lcall
adc
cld
sarb
push
scas
icebp
cwtl
or
jecxz
or
fstpt
add
jecxz
shlb
pusha
sub
or
mov
js
sub
xchg
inc
scas
mov
jle
mov
shr
aam
add
clc
test
and
cmpsl
addr16
test
pop
insb
loopne
inc
inc
shll
js
mov
into
in
xor
xor
jle
inc
lods
pusha
mov
test
inc
div
arpl
adc
mov
dec
sahf
loop
push
adc
adc
jo
mov
jno
into
ficompl
mov
repz
adc
iret
mov
sbb
ret
xlat
fildl
adc
adc
pushf
cwtl
push
xchg
inc
jg
mov
aas
xchg
xor
iret
adc
and
in
mov
sub
repz
mov
mov
in
and
loope
test
jle
jbe
mov
call
test
les
cmp
push
fnstenv
test
lcall
into
pop
and
fistps
add
xchg
pop
cwtl
les
cmc
or
and
in
aam
mull
rcrb
or
sbb
pop
sub
shlb
mov
out
les
fmull
xlat
and
add
je
inc
dec
sub
push
and
inc
mov
or
cmp
xchg
push
notl
shlb
adc
inc
out
mov
ljmp
aad
test
inc
or
inc
lret
mov
pop
xchg
pop
dec
dec
adc
inc
sbb
gs
andl
subl
inc
addl
mov
push
pushf
add
outsb
sub
mov
push
std
jo
loope
or
fcoml
xchg
daa
pop
rcrl
ret
cwtl
fdivp
or
pop
mov
sti
push
mov
and
fs
into
sbb
jno
cmp
sbb
cs
push
fdivrl
cltd
je
push
jb
in
insb
test
sahf
mov
stos
add
cmp
sub
pop
repz
adc
enter
inc
xor
and
lds
sub
cmpsl
jb
rcl
mov
adc
adc
call
mov
mov
out
lods
cmpsl
test
mov
aad
clc
pop
ror
xchg
es
mov
lcall
cmpsb
xor
fcmovne
mov
out
or
movsl
insb
push
dec
shl
scas
inc
mov
scas
hlt
ljmp
pop
jecxz
aad
xor
das
je
xor
cmpsb
jno
pop
shll
in
mov
jg
pop
icebp
push
in
jns
in
adc
and
mov
fisttps
hlt
jl
add
cmp
add
cwtl
xor
loope
fnstcw
xchg
dec
mov
lret
xchg
mov
xchg
jb
xchg
aad
cs
or
mov
rcl
fwait
adc
inc
push
test
push
sub
push
pusha
cmpsl
test
xchg
mov
adc
adc
scas
icebp
cmp
imul
inc
xsha256
cmpsb
adc
pop
out
orb
pop
sar
ret
adc
xchg
insb
test
cmpsw
cs
push
mov
inc
popf
or
decl
out
dec
dec
pop
nop
ljmp
movsb
pop
cmpsb
mov
cmp
lds
xor
daa
inc
loopne
lret
and
mov
out
and
stc
scas
pusha
push
test
daa
jne
jno
jl
je
fldl
imul
sub
pop
loope
out
popl
popf
or
xor
out
mov
out
in
xor
fcmovu
out
and
das
cmp
popa
inc
fdivrl
nop
push
push
jmp
iret
push
cltd
sub
adc
pop
hlt
cmp
mov
std
jmp
nop
call
add
test
xor
orl
data16
repnz
ja
add
mov
mov
stos
mov
sub
js
lea
xor
xchg
dec
mov
push
adc
inc
in
test
and
ja
into
pop
adc
stos
push
les
xchg
adc
call
sub
sbb
aam
outsl
xchg
mov
and
adc
das
test
push
xor
push
push
xchg
or
adc
dec
cmpsl
pop
lds
in
mov
mov
jnp
addb
adc
mov
aaa
lahf
dec
xchg
mov
add
rcll
dec
sub
and
adc
cmp
mov
and
sbbb
pop
mov
mov
push
shll
dec
in
mov
add
adc
or
fwait
stos
xchg
aaa
mov
or
pop
das
ror
into
call
popa
negl
ret
out
rcll
adc
and
sbb
mov
add
pop
xor
stos
fiadds
and
les
inc
add
in
outsl
xchg
and
add
mov
orb
push
jbe
icebp
mov
sub
movsl
mov
dec
repnz
das
xchg
mov
pop
xchg
js
or
stos
mov
aaa
mov
insb
sbbl
out
dec
sbbl
or
ss
ret
dec
repnz
jo
pushf
pop
dec
test
cmp
call
lock
add
xor
sarb
fstpl
and
inc
add
lcall
sub
pop
push
xor
mov
mov
adc
sub
mov
sbb
and
cmp
mov
ss
icebp
shll
sub
xchg
pop
inc
insb
test
fs
xorl
mov
out
loope
syscall
stos
bound
es
xchg
inc
push
mov
or
fldl
or
adc
fnstcw
pop
das
sbbb
inc
addr16
and
mov
sub
lret
sub
icebp
jae
frstor
dec
or
sbb
pop
mov
pop
adc
movsl
repz
sub
xor
js
mov
xor
adc
xchg
inc
imul
test
add
push
rcrl
stos
cmp
bound
adc
mov
shl
lcall
xor
jle
mov
scas
sti
and
fildll
sbb
push
scas
xor
pop
jecxz
dec
ss
inc
xor
inc
shrb
pop
aam
sbb
int3
push
stos
inc
add
cmpsl
aad
cmpsl
dec
xchg
add
into
add
sbb
jo
push
adc
jmp
lahf
pop
adc
jns
cld
testb
pop
push
call
xchg
std
outsl
ss
mov
stc
lock
sub
imul
inc
stos
xor
adc
sbb
jnp
xchg
xchg
ficoms
adc
fwait
movsb
jecxz
fwait
cli
cmp
ljmp
lret
int3
lcall
xlat
in
xor
in
mov
mov
xor
jae
mov
add
stos
sbb
and
pop
mov
jge
into
cmp
cmp
lret
sbb
stc
push
insl
lret
mov
xchg
push
sbbl
sbb
pop
fs
es
sti
vmovaps
mov
mov
lret
cltd
ds
xchg
and
sbb
pop
sub
pop
inc
int3
adc
rcrb
sub
or
jl
sbb
pop
xchg
icebp
pusha
adcl
bound
dec
loopne
loopne
jle
adc
adc
movsb
repz
jb
sbb
add
and
ja
sbbl
cmp
pop
mov
stc
stos
and
bswap
mov
cltd
add
lods
fs
mov
push
dec
int3
arpl
cmpb
push
or
loopne
cmc
pop
lock
in
arpl
jno
push
jns
cmp
ret
push
jge
or
add
add
mov
test
push
mov
push
sub
sub
lahf
mov
inc
and
adc
lahf
in
or
cltd
ljmp
mov
imul
mov
xchg
inc
loop
dec
in
adc
dec
sbb
mov
loope,pn
bound
dec
lds
test
jmp
rolb
fsubrs
inc
mov
sub
sbb
outsb
pop
cmp
imul
js
hlt
and
add
shl
add
cmp
mov
xor
jne
std
pop
mov
in
mov
push
lcall
into
and
orl
pop
xchg
shl
enter
out
push
loope
andb
sub
sub
and
leave
adc
scas
mov
sub
fstpl
insl
mov
add
pop
cli
jno
adcb
fldt
subl
pusha
push
pop
sahf
mov
sbb
data16
daa
mov
iret
mov
fs
mov
cmp
mov
fs
inc
test
bound
add
lods
sarl
pop
xor
scas
sub
adc
lock
adc
ss
test
xlat
inc
push
jnp
pop
pusha
test
xchg
ljmp
push
in
and
mov
rol
ljmp
jg
out
scas
lds
test
pop
int3
je
nop
push
rorb
in
stos
xor
add
mov
into
push
hlt
sbb
out
jbe
cmpsl
xor
sub
cmc
icebp
pop
out
je
stos
xlat
jecxz
push
das
repz
bound
or
lret
xor
adc
nop
cmp
add
mov
sub
lock
repz
jb
add
js
daa
shll
mov
xorb
scas
rcll
xlat
mov
shrl
in
push
pop
loop
fstl
test
outsb
and
scas
cmp
data16
dec
insb
lea
mov
push
jp
jmp
mov
jmp
xchg
cmp
icebp
jno
sti
sahf
in
sub
push
jbe
xor
int
jb
xor
lcall
lods
out
lcall
adc
mov
dec
mov
pop
fst
je
movsb
and
or
push
adc
mov
cli
sbb
outsl
cmc
idivl
cmp
addr16
xor
iret
outsb
pop
inc
into
adc
inc
xor
pop
inc
jle
out
mov
or
loop
gs
pop
push
int3
stos
jno
cmp
xor
mov
and
fsubrs
xor
add
jne
push
idiv
mov
sarb
fsubr
scas
and
cmp
jne
add
sub
xor
mov
pop
shr
scas
repz
jns
fwait
sbb
das
scas
ret
and
imul
adc
je
cltd
inc
xchg
sti
stos
and
in
mov
adcl
les
jp
adc
scas
cmpsl
iret
fsubr
lret
add
test
push
test
into
lcall
cmc
aas
push
or
addr16
popa
scas
pushf
jle
and
shll
adcb
dec
scas
das
add
dec
loop
and
cli
hlt
dec
shll
jnp
sti
sbb
stc
push
imul
mov
inc
pop
xchg
gs
fildll
into
repnz
clc
cmp
sbb
pop
adc
jmp
mov
pusha
mov
std
daa
adc
fst
pop
cmp
fs
push
sub
pop
push
and
cld
dec
pop
jns
pop
outsl
data16
sbbb
xchg
scas
mov
repnz
push
mov
mov
xor
xor
fwait
mov
aam
sbb
jp
push
push
adc
push
fildl
jecxz
in
das
out
stos
push
or
shl
sub
sub
jnp
dec
mov
leave
scas
cli
dec
xor
scas
sbb
mov
mov
lcall
jge
mov
xchg
push
and
mov
add
loop
mov
pushf
movsb
repnz
aad
or
fidivs
pop
cmp
mov
pushl
js
jnp
incb
insb
xchg
inc
testb
cmp
icebp
push
lahf
sbb
aad
and
push
jnp,pn
in
xor
test
leave
out
xchg
xchg
ret
xor
or
outsb
fidivrl
jno
in
jns
test
data16
mov
test
xchg
sahf
mov
jo
hlt
pusha
pusha
sti
rorl
inc
call
insb
xchg
pop
inc
fdivrs
jl
stos
pop
mov
cmp
xchg
std
inc
sub
les
push
gs
lcall
pop
popf
inc
mov
xlat
mov
lods
int
lds
sub
mov
and
mov
adc
push
in
or
mov
lcall
xor
movsl
push
shl
daa
push
cli
out
es
push
pop
mov
add
mov
mov
out
arpl
mov
lods
sbb
popa
ds
enter
mov
out
pop
mov
lods
add
cmc
enter
lret
pushf
loop
stc
shrl
int
xor
mov
sar
jecxz
bound
add
bound
pmaddwd
cld
iret
sbb
das
jns
and
mov
popw
and
aaa
mov
aam
push
lods
or
jmp
and
popa
jmp
or
andl
insb
std
shll
test
movzbl
in
fs
stos
mov
faddp
test
xorl
aas
sub
lcall
jecxz
das
fisubrl
pop
in
arpl
adc
int3
lahf
mulb
in
mov
xchg
mov
push
xchg
fnstsw
neg
add
test
add
sarb
mov
inc
stc
sbbb
bound
repz
inc
jp
push
push
cmpsl
fstp
add
xchg
cmp
ret
pop
xchg
les
add
daa
sbb
je
dec
test
adc
pop
in
call
cmp
sub
pushf
loope
bound
push
xchg
insl
fxch
mov
aam
cmp
cmp
shlb
and
loop
rorl
xchg
fnstsw
mull
bound
and
cmp
add
cld
push
xchg
adc
dec
test
cld
fisttpl
jge
test
outsl
cli
out
jp
fs
xlat
std
scas
mov
adc
ret
mov
sti
pop
hlt
sub
lds
sti
pusha
dec
test
les
movsb
jne
imul
and
test
xor
sbb
sti
mov
shlb
xchg
imul
pop
movsb
lock
inc
xchg
xor
cmc
nop
mov
outsb
mov
iret
jp
outsl
cmpsl
lock
int3
stos
mov
pusha
ds
xor
inc
pop
pushf
out
int
xor
dec
inc
addl
xchg
dec
push
xchg
mov
pop
lret
lahf
mov
xchg
test
inc
mov
pop
xor
frstor
push
jne
push
jae
push
movl
rorl
sti
loop
jp
xchg
cmpsb
shrl
out
insb
xor
or
ds
clc
lcall
inc
dec
sub
out
adc
sub
int3
out
ret
or
lods
icebp
jae
mov
repz
adc
add
and
pop
gs
sbb
scas
xchg
push
inc
mov
iret
dec
iret
push
push
cmp
movsl
fs
xchg
mov
andb
xchg
popf
cmp
ja
fisubrs
or
mov
mov
outsl
test
sar
inc
mov
dec
pop
into
iret
push
cmpsl
cmpsb
cld
gs
ss
xor
in
mov
adc
shrb
ret
pop
shl
test
outsb
loop
out
dec
adc
jb
faddl
xchg
pop
add
scas
xor
xchg
xchg
mov
aad
lock
je
or
mov
xchg
pop
xchg
cwtl
inc
cmp
add
pop
adc
or
mov
xor
in
cmp
inc
cmc
adc
sbb
jnp
jp
aas
adc
icebp
addl
sub
jae
xchg
adc
adcb
add
xor
push
adc
cmpsb
mov
mov
dec
sbb
pop
pop
call
jle
aad
sbb
dec
es
cmp
and
xor
loope
dec
push
loop
mov
out
loop
test
adc
scas
adc
dec
jg
and
scas
jmp
mov
push
in
loop
cmp
lret
in
loop
int3
push
sub
outsl
push
push
scas
testb
sub
mov
jge
in
dec
fxtract
sbb
mov
movsl
pop
idivl
lock
test
aad
xor
ss
mov
mov
cltd
push
ret
mov
mov
cmp
xlat
in
add
ja
les
xchg
ds
imul
test
pusha
call
rcr
pusha
pop
gs
mov
adc
cld
pop
push
es
and
icebp
or
test
test
mov
lret
pop
cwtl
sbb
cmp
and
and
popf
mov
xor
lock
jo
mov
lock
push
mov
mov
scas
add
and
cs
out
jge
fstps
dec
push
std
jb
xchg
stc
dec
lods
ljmp
out
pop
dec
or
sub
lahf
lea
xchg
mov
push
mov
cmp
push
sahf
outsl
mov
mov
sbb
xchg
jnp
dec
mov
sub
sub
imul
jge
loop
lods
pop
js
dec
push
loop
incl
negl
add
dec
jge
cli
repz
pushf
mov
dec
insl
pop
cmp
dec
sbb
lods
stos
mov
test
jecxz
sbb
aaa
lods
jle
adc
lret
push
sbb
cmp
negb
sub
call
xor
jno
push
dec
aam
mov
push
mov
lahf
jnp
enter
mov
adc
mov
jne
sbb
lahf
mov
mov
repnz
adc
cli
jbe
xor
mov
xchg
push
add
pop
xor
mov
mov
cltd
or
sub
pop
push
in
push
push
ss
mov
in
in
add
gs
inc
jge
dec
mov
fnstsw
or
xor
rolb
icebp
or
icebp
mov
jmp
sahf
lret
in
mov
adc
xor
lods
out
cmpsb
fdivrs
push
jle
and
mov
into
jle
cmp
sub
mov
add
or
lret
sub
and
adc
jae
out
in
lea
sub
movsb
inc
cltd
xor
repnz
fdiv
in
mov
vmread
cli
das
inc
or
mov
fcoml
fdivp
mov
and
jae
shl
jmp
call
stos
stc
pop
xchg
ret
jge
ret
jbe
filds
xchg
jecxz
in
fiaddl
andb
sub
imul
xlat
fsubp
add
mov
mov
arpl
shl
xchg
jae
lock
enter
pop
or
inc
and
cmp
ret
adc
lock
jb
test
cs
mov
xchg
gs
jge
xor
lock
test
mov
and
movsb
shll
into
push
shl
je
sub
xchg
push
in
or
sbb
sbb
jb
rorl
dec
dec
insl
xchg
jno
test
ss
test
pop
mov
dec
fnsave
stos
pop
fsubrl
adc
pushf
cwtl
xlat
sub
js
imul
xor
pop
insl
xlat
xor
push
pop
ds
std
xchg
pop
mov
sti
aaa
or
push
pop
lock
hlt
mov
outsl
jl
push
aad
mov
cmp
push
cmpsb
mov
adc
stos
aad
fsubrs
push
dec
push
adc
lahf
ss
imul
mov
adc
cmp
popa
not
lods
mov
fisttpll
xor
sub
mov
insb
fldcw
test
mov
dec
cmpsl
mov
jo
mov
mov
xchg
insl
jno
nopl
bound
push
lcall
leave
inc
xchg
out
imul
mov
lds
js
sbb
sbb
dec
rcrb
jo
loopne
shll
psrlq
dec
push
adc
ss
cmp
jp
in
ss
aas
xchg
out
or
testb
pop
loope
sub
aas
jno
inc
faddl
aas
icebp
xor
rcll
lea
lret
daa
jns
fs
repnz
mov
pop
movsb
lret
fs
out
pop
push
mov
adc
icebp
stos
repz
movsb
repnz
adc
nop
add
lods
enter
sbb
mov
into
aad
sahf
ret
adc
cmp
iret
and
jmp
inc
sbb
sysenter
xchg
xchg
pop
hlt
sbb
ja
mov
lret
push
push
js
enter
lods
jmp
jl
inc
sub
push
inc
mov
xchg
iret
aas
jb
aas
jns
cld
pop
ljmp
sub
ficompl
mov
sub
and
cltd
jae
in
in
push
jo
scas
sbb
outsb
outsl
js
lcall
pop
dec
adc
xchg
adc
sbb
pushf
decb
push
fwait
xchg
data16
add
mov
sub
xor
mov
jb
push
vmovshdup
ss
outsb
push
test
lods
mov
push
arpl
out
sub
ficoml
push
imul
inc
test
add
mov
fidivs
xchg
aam
xor
fwait
jae
and
je
in
lret
mov
adc
push
lds
pop
fistl
cmpl
cmp
xor
mov
mov
aam
dec
leave
mov
sbb
sub
dec
arpl
sub
pusha
sub
cmp
int3
inc
mov
mov
xchg
mov
cs
xchg
xorb
mov
pop
mov
ret
or
fs
add
outsl
aaa
inc
mov
xchg
push
mov
xchg
fisttpll
dec
jbe
testl
fnstenv
jo
fsubrp
shrb
popa
xor
or
inc
mov
mov
and
rcr
fstpl
mov
out
addr16
rcrb
sub
mov
fisubrl
aad
sub
loop
jge
push
add
daa
call
hlt
xor
stos
into
das
out
test
inc
lret
adc
lcall
pop
and
mov
push
jge
push
mov
jae
scas
mov
push
nop
sbb
mov
aad
pop
dec
mov
cmpsl
or
fistpl
into
xchg
adc
cmpb
sti
inc
mov
jno
call
out
push
mov
mov
adc
dec
mov
xor
or
sbb
je
xchg
pop
xor
lret
xlat
sub
lret
xor
jl
imul
les
into
outsl
mov
cmpsb
imul
les
adc
rcl
jo
out
sub
sarb
movsb
inc
xchg
inc
lret
mov
lret
or
in
repz
mov
inc
mov
ret
jmp
xchg
hlt
lods
lcall
stos
insl
enter
pop
adc
in
xor
inc
test
mov
add
mov
jbe
movsb
aad
add
jg
jns
cmp
xchg
add
mov
call
mov
aad
push
sbb
cmpsb
mov
push
icebp
cmp
cmpsb
cmp
dec
cmp
xchg
icebp
stc
ret
ljmp
les
sbb
adc
divl
xchg
pop
repnz
pop
push
cwtl
mov
lods
outsl
xchg
mov
inc
out
aam
xor
pop
add
jl,pn
jnp
das
fsubl
test
out
fisttps
mov
xchg
imul
jae
mov
jmp
push
cs
enter
mov
sub
add
push
mov
mov
movsb
adc
push
call
insl
rcrl
mov
mov
xor
xchg
pusha
and
pop
jle
sti
lods
xchg
fimuls
pop
jno
lods
jns
sub
inc
fisttpl
mov
cmpsl
inc
push
or
rcrl
popa
jo
mov
adc
jl
xchg
loopne
pop
cld
test
jecxz
aaa
adc
sub
stos
inc
sub
bound
out
cwtl
cmp
push
pop
xorl
daa
sti
jmp
sub
push
lods
xlat
jecxz
pop
aad
movsl
cwtl
add
dec
fisttps
std
repnz
xor
dec
adc
out
jmp
or
adc
aad
mov
jecxz
fwait
ret
cmpsl
mov
sar
jle
add
mov
push
in
dec
jl
aam
xor
es
adc
lods
aaa
stos
cmp
xchg
push
xor
mov
clc
add
fs
adc
sbb
into
mov
jl
in
stos
push
scas
mov
aad
js
add
mov
or
push
sub
push
pop
ds
add
push
cmpsb
sbb
pop
ja
adc
and
test
insl
fists
aam
pusha
outsb
xor
out
jle
cwtl
je
xchg
andl
sub
xor
pop
std
jmp
aas
fwait
scas
push
loop
dec
inc
sub
sbb
imul
fs
jno
and
cmpsb
fildl
aaa
test
mov
push
push
push
stos
inc
mov
lea
add
test
mov
mov
pushf
cwtl
or
jb
lods
inc
adc
push
lods
push
dec
int
gs
dec
inc
in
adc
mov
stc
test
pop
push
pop
mov
pop
dec
loope
fdivp
out
pushf
xchg
movsb
sub
lcall
inc
imul
setae
cmp
fistpll
imul
ja
add
ficomps
mov
lock
push
sub
pushf
mov
or
ds
lcall
inc
rcl
cmp
clc
pop
fs
push
inc
xchg
sbbl
test
jno
push
and
and
push
xchg
clc
mov
xlat
imul
xor
xor
daa
add
pop
xchg
fisttps
pop
jp
sahf
add
sub
mov
xor
fildl
push
loop
aaa
push
mov
mov
ja
dec
mov
push
leave
rcrl
adc
add
gs
insl
in
scas
push
scas
sahf
daa
pusha
add
jo
push
ss
bound
xchg
jne
adc
push
cld
mov
sar
ret
jns
xlat
lds
in
add
xor
cmp
push
inc
pop
shrb
out
xchg
sub
mov
mov
icebp
cmc
sbb
out
sbb
bound
push
in
inc
xchg
js
aad
lds
and
jo
mov
imul
cs
imul
lods
or
icebp
adc
inc
ds
insb
cmp
ss
std
ds
cmpl
and
pop
mov
addr16
adc
rcr
int
pop
pop
mov
inc
xor
hlt
fwait
inc
js
leave
xchg
pop
mov
dec
ds
fwait
cmp
cmp
das
shlb
repnz
sub
fwait
out
aad
cmp
jp
mov
sub
jmp
js
dec
incb
xor
add
cld
scas
cltd
cmpl
fld
jp
ret
and
ret
sub
pushf
xlat
jo
cvtdq2ps
cmp
mov
push
pop
and
adc
mov
push
outsl
cs
lock
pop
pop
les
arpl
aad
mov
test
cmc
in
movsb
sbb
fisubs
fstpl
dec
mov
mov
lret
bound
jecxz
xchg
pusha
test
into
xchg
out
lock
into
mov
add
jns
pop
pop
push
mov
inc
dec
pop
mov
call
inc
xor
pop
jmp
cltd
push
fwait
pushf
nop
cli
jmp
scas
xorl
jb
mov
test
sti
mov
or
sbb
loopne
vmovd
outsb
adc
cmpsl
dec
and
gs
xchg
arpl
dec
push
mov
cltd
xlat
dec
jle
ret
mov
dec
lcall
out
bnd
ret
outsl
rcll
andl
and
xor
ud2
adc
mov
mov
jne
lcall
fisubrs
jge
mov
jmp
aam
loopne
adc
mov
and
jo
sbb
aam
imul
out
jl
fsts
mul
sbb
mov
fincstp
rorl
adc
and
loop
pop
jmp
add
test
or
hlt
sbb
mov
pop
hlt
pop
jo
xor
dec
jg
dec
mov
mov
push
cmp
movsb
xchg
cmc
cmc
push
stc
sub
loopne
cmp
sub
int3
and
jg
dec
cmpsb
mov
mov
mov
mov
enter
roll
sub
cld
jg
sub
fsub
shrb
lds
dec
ficomps
imul
ljmp
cli
mov
dec
test
int3
mov
push
pop
sbbl
and
in
xor
add
aas
shll
jecxz
cmp
mov
lds
pop
stc
push
adc
cmp
xor
mov
lahf
mov
xchg
aad
dec
fmuls
out
xor
jnp
loop
shrb
mov
sbb
sbb
xchg
into
dec
out
in
and
mov
stc
mov
ljmp
dec
je
jno
addr16
imul
fldenv
je
push
cmpsb
mov
ljmp
xchg
adc
popf
lret
cli
jns
jno
movsl
push
das
add
popf
fmull
fnstcw
adc
jo
xchg
imul
dec
mov
fistpl
mov
pop
cld
cmp
ss
test
add
scas
mov
inc
popf
dec
add
lahf
lods
sti
adc
pop
data16
addr16
arpl
lret
dec
jno
sahf
pop
cli
inc
mov
pushf
negl
pop
sarl
inc
rclb
je
aad
sub
jns
adc
loop
pop
icebp
call
ret
pop
jne
mov
cwtl
out
mov
push
xor
rcr
rorb
adcb
inc
jmp
inc
popa
ret
add
in
cmp
sarl
cmc
test
mov
in
enter
mov
push
clc
fcmove
fcmovb
insb
push
repnz
xor
xor
into
cmp
push
mov
xchg
dec
sub
and
cmp
pop
outsb
jmp
scas
bound
in
sbb
adcb
out
sbb
fnstcw
xor
mov
jnp
scas
test
pushf
mov
in
cmp
outsb
or
push
push
or
dec
out
jp
or
sub
les
scas
mov
cmpsl
push
mov
scas
inc
cmp
mov
movsb
aas
sbb
scas
gs
and
adc
push
xchg
arpl
fnstenv
adc
or
popf
xchg
mov
subb
cmp
movsl
pop
and
loop
adc
sbb
div
mov
fildl
inc
insb
mov
mov
mov
mov
cmp
and
add
sti
hlt
dec
mov
in
mov
inc
stos
je
lock
loope
add
push
ret
mov
push
iret
aam
cmc
mov
push
stc
lods
pop
xchg
repnz
add
jmp
mov
leave
out
lods
leave
push
arpl
push
outsb
adc
test
mov
pop
mov
mov
cmpl
dec
rcrl
mov
add
iret
lret
jle
pop
lea
movsb
adc
pop
push
sub
pop
or
jnp
sub
mov
dec
cmp
pop
mov
sti
popa
ja
jne
sub
sub
shlb
mov
subl
imul
ds
xorl
jle
iret
inc
stc
xchg
or
jnp
dec
cmc
adc
test
jg
iret
out
loop
test
nop
mov
cwtl
mov
dec
jbe
bound
push
sti
cltd
rcr
ss
bound
ljmp
mov
jb
test
adcl
mov
cmp
aaa
outsl
loope
inc
pop
mov
dec
scas
or
bound
cmc
cs
fsubs
jmp
pop
or
xor
jbe
mov
lcall
or
test
bound
sbb
pop
push
outsl
jno
arpl
daa
add
aam
jp
jno
lahf
mov
mov
add
xlat
mov
mov
pop
mov
cmpsl
sub
sbb
add
xchg
dec
sbb
push
adc
push
dec
mov
sub
push
xor
inc
xor
xchg
mov
cmpsb
dec
loopne
pop
daa
xchg
or
cld
fs
stc
pop
mov
inc
push
cmp
xlat
out
insb
enter
mov
repz
jp
out
pop
icebp
and
mov
hlt
cmp
scas
or
add
pop
mov
hlt
adc
push
mov
shll
or
push
or
fwait
je
test
and
mov
inc
jge
in
cmp
insl
not
or
loop
jae
and
test
mov
or
pop
lcall
test
call
add
xor
sub
add
sar
test
cmpsb
pop
cmp
pusha
mov
push
icebp
sbb
inc
clc
daa
add
sub
movsb
js,pn
mov
in
leave
sub
and
pop
imul
and
mov
aaa
add
xor
add
test
add
sbb
repnz
loopne
mov
aas
lds
fnsave
xchg
and
adc
sbb
fmull
scas
jg
mov
jns
pusha
test
jnp
addb
mov
sub
cmp
inc
xchg
inc
int
dec
outsb
and
mov
mov
jl
mov
dec
xchg
lret
pop
in
xorl
inc
or
jl
jbe
lahf
adc
or
adc
push
add
inc
and
jg
pusha
inc
cmc
mov
xchg
in
mov
test
testl
pop
outsb
sahf
int3
sbb
xchg
jbe
pop
jmp
mov
or
xchg
mov
into
fcmovu
adc
jnp
pop
fdivr
xchg
sbb
add
cmp
pop
stos
dec
cmp
push
pushl
mov
or
dec
rolb
pop
enter
sbb
jl
xor
add
jl
dec
cmp
sub
loopne
popf
jb
sub
push
cltd
shlb
mov
inc
ret
lahf
jno
jg
adc
leave
aaa
pusha
data16
inc
lret
iret
jp
out
inc
or
sahf
sub
dec
mov
adc
mov
add
lds
push
push
mov
out
aas
push
adc
mov
lods
out
fadds
ja
stos
xlat
rcrb
cmp
mov
cmp
xor
jge
orb
sarb
adc
fisttps
xor
stos
lds
adc
inc
bound
loopne
mov
int3
mov
in
pop
sub
sti
cmp
fidivl
push
xsha256
cmpsb
xchg
out
inc
add
jnp
add
pop
bound
inc
inc
add
pop
jmp
mov
jmp
add
in
mov
ret
test
mov
stc
pop
adc
leave
in
shlb
mov
or
and
mov
call
fnstcw
mov
add
lret
iret
fwait
and
sbb
cmp
lret
stos
in
and
outsl
sub
adc
push
inc
test
in
sbbl
jl
je
cwtl
jns
mov
in
fidivrs
pop
leave
pop
aam
fwait
mov
popa
xchg
push
call
jecxz
movsb
mov
popl
mov
icebp
inc
jle
lock
fisubl
rolb
mov
mov
pop
ds
pop
sbb
lock
fstl
loope
mov
into
or
xchg
and
and
rcrb
cwtl
push
movsb
or
dec
dec
inc
mov
sahf
push
mov
fildll
out
dec
pop
sub
cmpsb
push
cwtl
imul
inc
movswl
sysret
fstpl
inc
incb
mov
jecxz
push
xor
pop
inc
iret
mov
loope
push
loope
stc
jle
mov
lret
icebp
ljmp
call
inc
call
xor
bound
xchg
aas
repz
ret
repz
lret
lea
jo
mov
cmp
loope
pop
sub
pop
ret
popa
mov
fwait
sbb
mov
and
movsb
jp
das
scas
mov
lock
push
ret
xlat
fwait
and
cmp
dec
sbb
inc
ffreep
mov
pop
or
pop
dec
sarb
jmp
hlt
mov
jl
xchg
out
test
test
mov
scas
lcall
mov
popf
sbb
hlt
fldcw
les
adc
xchg
je
bswap
fwait
cltd
cwtl
icebp
or
loop
shlb
and
cmpsb
dec
dec
arpl
popa
arpl
jp
xchg
mov
push
dec
shrb
in
ss
bound
xlat
mov
insl
xchg
xchg
push
and
stos
adc
mov
dec
into
xchg
pop
gs
mov
sbb
mov
jp
int3
out
out
cmp
xor
call
sbbl
and
cltd
incb
sub
cmp
fisubl
test
ret
mov
pop
sub
repnz
cmp
nop
dec
cmc
dec
cmp
xchg
adc
jecxz
lods
shll
jecxz
and
int3
or
adc
inc
pop
flds
xor
sbb
xchg
push
out
and
and
mov
mov
jl
pop
mov
cmp
movsb
stc
pop
jge
mov
jbe
jecxz
jns
dec
imul
push
lret
pop
jo
lcall
xchg
dec
fidivrl
gs
cmpl
dec
mov
sti
or
jl
mov
mov
arpl
lahf
dec
mov
push
adc
mov
cli
xor
das
pop
adc
mov
inc
inc
sbb
aad
pop
dec
hlt
imul
inc
inc
sbb
jo
nop
or
push
mov
or
xor
out
sbb
dec
mov
mov
filds
fbstp
and
pusha
cmpsb
xchg
shr
je
add
xchg
leave
jae
scas
es
dec
sub
cmc
dec
cmpsl
imul
pop
add
imul
ret
dec
cmp
dec
stos
ja
xor
lock
mov
adc
test
movsb
fldenv
pop
bound
mov
loopne
jae
pop
dec
int3
js
addb
flds
push
mov
mov
and
pop
subb
mov
int3
fcmove
or
adc
pop
fsts
or
jns
add
cmp
push
out
insb
xchg
pop
insb
inc
jmp
jmp
in
and
je
ret
popa
icebp
gs
pushf
popf
add
cmc
cmovbe
pop
scas
fcmovnu
add
aam
dec
sub
in
mov
lahf
xchg
pop
mov
cli
push
xor
ljmp
add
xchg
mov
jae
rcll
gs
pusha
ja
sbbl
lahf
sub
test
pop
stos
sbb
push
imul
push
xchg
adc
and
xorl
std
jnp
faddl
cli
nopl
sub
pop
sub
dec
stos
orl
jae
jb
movsb
or
cmp
mov
jge
xchg
xor
pop
aaa
nop
push
pushf
mov
int3
out
ror
sbb
lret
sub
adc
loopne
and
jecxz
dec
xor
aaa
rcr
pop
pop
out
in
xor
ljmp
mov
mov
sub
jg
aas
pushf
shrb
mov
or
xchg
sbb
sub
push
sbb
xor
pop
je
shrl
shlb
popf
das
sbb
aaa
xlat
jno
test
sub
enter
aas
adcb
mov
ficomps
jg
gs
xchg
xor
les
jns
out
dec
ljmp
push
mov
mov
jle
pop
aas
clc
jne
lods
and
mov
fldenv
and
jl
mov
jne
test
mov
or
aam
fcoms
push
jo
push
insb
sub
jnp
insb
in
cltd
sbb
arpl
mov
push
inc
ljmp
mov
jbe
xchg
lea
daa
insl
insl
mull
lods
or
fnsetpm(287
outsb
fdivl
lret
andb
mov
movb
xchg
in
inc
jns
and
outsl
mov
xchg
adc
jb
push
mov
and
adc
test
mov
bound
loopne
xlat
daa
mov
mov
pop
out
mov
faddl
cmc
scas
cmp
jge
or
add
jmp
daa
cwtl
push
lcall
es
xor
push
mov
punpckhdq
dec
js
lods
lock
mov
add
sbb
icebp
xchg
sarl
xor
imul
jecxz
sbb
test
sub
idivl
jl
xor
mov
hlt
add
fsubs
inc
xchg
leave
mov
pop
sti
push
cmp
inc
mov
xor
mov
js
fucomip
insl
dec
outsl
ret
cmp
inc
rorb
jp
dec
xchg
mov
push
pop
sub
xchg
ret
adc
sbb
fisttpll
cwtl
call
std
insb
cld
jl
push
rol
pop
jg
adc
stos
fistpll
push
adc
lea
dec
adc
cmpb
jno
rol
xchg
jb
mov
and
cli
jmp
idivb
sub
fwait
pop
or
push
jo
push
xchg
xorb
movsb
mov
pop
jo
lock
out
das
sbb
lret
outsl
or
xlat
orl
add
jp
jmp
aad
into
adc
dec
xor
sahf
outsb
mov
xchg
cmp
mov
dec
inc
ficoml
xchg
cmpsb
jmp
push
add
push
pushf
fsts
mov
mov
fisubs
xchg
bound
inc
sarl
in
pusha
ds
hlt
push
adcb
mov
cmp
mov
adc
or
rcr
outsl
mov
ds
dec
int
out
pop
jns
xor
mov
jb
xor
sbb
mov
push
sbb
and
ror
in
xor
negb
out
hlt
je
leave
and
or
fs
data16
clc
or
xchg
xor
xor
and
popf
mov
shl
stos
lock
cli
outsl
sub
cltd
movsb
shl
aas
mov
int3
mov
jmp
adcl
into
cmp
repnz
mov
pop
jg
lcall
and
int3
in
scas
xchg
and
mov
jmp
or
or
jg
clc
cmpsl
dec
fiadds
mov
mov
out
loopne
negl
pop
dec
punpckhbw
xchg
imul
rclb
cld
xchg
pop
dec
cmpb
push
jnp
pop
dec
decb
and
add
outsb
in
cld
jp
pop
push
stos
jns
roll
loopne
rolb
add
jge
lcall
xchg
jae
mov
sub
movb
push
dec
fsts
xchg
xor
sub
and
dec
add
mov
mov
add
leave
pushf
sub
pop
mov
push
jmp
shlb
sbb
inc
ret
inc
jmp
or
pop
popf
popf
test
xchg
push
xchg
scas
int
jbe
mov
mov
jp
sbb
pop
sbbb
mov
jnp
cmp
add
popl
add
aad
das
inc
xchg
mov
repz
incb
ss
pop
adc
cmp
or
int3
xchg
mov
push
sbb
push
adc
jecxz
ret
adcb
mov
sub
jno
jge
adc
mov
jbe
ffreep
mov
pop
dec
xchg
jl
out
and
iret
addr16
cmp
jge
es
or
push
and
ja
dec
push
xor
sub
stos
ret
pop
mov
out
xchg
add
pop
int3
loope
pop
dec
inc
imul
inc
lcall
ficoms
push
xchg
add
aaa
int
in
es
rcl
push
mov
cs
sub
std
addr16
xchg
loope
add
sub
lret
add
inc
ja
cmp
sub
or
mov
cmp
inc
cltd
mov
sbb
and
out
aaa
dec
pushf
scas
test
push
add
test
filds
aaa
push
sub
mov
sbb
inc
inc
push
sbb
xchg
inc
test
dec
xchg
shl
mov
test
inc
mov
orl
nop
jp
aad
pop
lods
jp
adc
sbb
loop
jns
sub
pop
cmpsl
jge
push
bound
data16
sub
out
repz
and
and
scas
xor
pop
es
test
or
scas
rcrb
mov
add
or
mov
adc
jmp
out
push
outsl
dec
xor
andb
aas
cmpsb
test
sbb
loope
dec
shr
mov
loop
jno
pop
inc
pop
mov
inc
jb
inc
call
fsub
xorb
adc
mov
jne
sbb
outsb
sbb
xlat
scas
daa
xchg
push
lret
sahf
sub
sbbl
pop
in
jmp
jae
lock
rorb
int3
lds
lahf
mov
add
fwait
mov
sub
loopne
pusha
pop
dec
sub
test
jge
in
add
jg
push
sahf
shlb
lahf
mov
jne
push
fstp
ret
in
push
sbb
mov
std
jo
pop
lods
xchg
sbb
test
out
pop
pop
repz
cwtl
inc
sub
inc
dec
mov
mov
addb
inc
sarb
add
dec
out
and
or
mov
sub
add
push
scas
push
dec
sub
cwtl
inc
aaa
xchg
xor
xchg
bound
pop
fldl
adc
pop
push
push
int3
les
aam
sbb
xchg
dec
stos
xor
mov
push
push
adc
popa
lret
xor
loope
je
sbb
or
cmp
jge
add
into
out
inc
xchg
mov
hlt
js
aad
das
jb
lods
pop
push
push
or
mov
add
pop
pop
adc
pop
jns
mov
aaa
popa
jge
lods
add
inc
adc
mov
dec
cmp
inc
push
out
mov
lock
outsb
nop
or
cmpsl
inc
mov
mov
inc
adc
and
and
jecxz
lahf
ljmp
lds
fwait
jge
mov
into
inc
data16
repz
mov
inc
add
mov
or
mov
gs
add
movsl
mov
jnp
dec
or
xchg
mov
out
outsl
ds
xchg
loope
iret
cmovp
cltd
popa
repnz
fildll
fisubl
cwtl
insl
xchg
nop
dec
mov
mov
out
aad
fadds
nop
lret
test
scas
jns
xorl
aas
jg
std
inc
mov
test
xchg
stos
sahf
push
mov
pusha
jb
data16
cmp
aaa
or
dec
in
sbb
jl
pcmpeqw
cltd
outsl
lods
add
push
dec
or
stc
shlb
mov
clc
and
cltd
xchg
adc
nop
hlt
imul
shll
popa
inc
cld
and
sbb
stos
sub
fnstsw
es
dec
fiadds
das
cmp
adc
mov
pop
mov
mov
mov
cmp
loope
sbb
movsl
out
pop
sbb
jne
shlb
xchg
out
xor
fdivp
dec
pop
dec
scas
add
or
lcall
push
mov
dec
pop
cltd
sbb
jnp
sub
jae
fwait
jno
mov
les
cwtl
clc
cmp
add
dec
or
stc
or
repnz
pop
into
inc
test
sahf
fwait
sub
inc
lret
pop
pop
pop
and
test
dec
pop
pop
cmp
leave
cmpsl
movsb
jecxz
sbb
or
sbb
aas
cli
adc
dec
cmc
xor
mov
jmp
sti
arpl
clc
dec
cmpsl
pop
dec
or
mov
stc
sub
data16
push
xchg
adc
inc
pushf
aaa
orb
fwait
sbb
sahf
aaa
sub
dec
js
daa
out
int
scas
pop
jg
sbb
xor
cmp
xlat
xlat
and
arpl
ds
inc
mov
xchg
pop
sub
jne
cmp
mov
cld
add
mov
sbb
inc
xlat
es
cmpsl
and
icebp
divl
jae
push
mov
lock
clc
imul
addr16
fstpt
fcompl
pop
repz
aaa
sbb
ja
repz
int3
push
sub
push
mov
and
xor
push
in
mov
aad
push
scas
push
out
addr16
outsb
adc
pop
icebp
imul
and
std
repnz
imul
cmpsl
or
out
xchg
sub
ljmp
cmp
mov
cltd
xchg
push
inc
xor
cltd
xchg
in
out
or
sbb
push
inc
stos
aaa
xchg
fs
insb
jle
mov
mov
fwait
jnp
fldt
and
dec
inc
je
cmp
iret
mov
subl
mov
add
ds
cmp
fnsave
dec
es
insb
push
fwait
and
into
cmp
scas
clc
rcrl
push
ja
incb
lods
shl
inc
xlat
jo
cmp
ret
pop
inc
jae
pop
adc
outsb
pop
sbb
aaa
adc
adc
idiv
cmpsb
test
test
fldenv
cmpsb
shr
test
dec
push
cwtl
notb
mov
inc
xchg
sbb
in
sti
jae
aaa
or
repz
cmp
jg
push
xor
stos
out
outsb
insl
mov
int
sub
and
sbb
mov
add
sub
or
adcb
loop
mov
lret
pushf
adc
iret
imul
and
jp
pop
inc
pop
adc
in
adc
lcall
xchg
cli
inc
pop
je
lock
mov
sub
movsb
aam
sub
sti
test
aas
xchg
cmp
adc
int3
mov
out
cltd
push
sbb
or
mov
jecxz
ds
scas
sub
dec
aas
cmpsb
in
fsubs
xchg
inc
insb
mov
addr16
mov
jle
rorl
inc
popa
movsb
popf
icebp
sbb
out
imul
jl
ss
mov
adc
nop
mov
data16
add
pusha
ljmp
aam
pop
fs
adc
adc
mov
iret
and
sub
dec
dec
adc
or
cli
pop
cli
add
outsl
iret
xchg
lahf
add
mov
jl
mov
aaa
sub
cmp
cmp
pop
mov
cmp
push
sbb
lret
push
push
pop
cmp
add
xlat
mov
mov
lods
add
pop
cli
jecxz
or
xor
mov
out
repnz
mov
into
lock
sbb
cs
fidivrs
ficoml
cwtl
lahf
xchg
jl
pop
aam
and
fs
lret
lret
out
popa
jl
adc
insl
sbb
mov
or
mov
pop
xchg
jae
aam
mov
add
cld
cmp
dec
mov
int3
dec
movsb
loopne
js
push
pop
data16
dec
sbb
mov
ds
sub
jmp
mov
inc
mov
sti
xor
scas
dec
mov
pop
lret
add
mov
mov
rolb
insb
sub
sub
xchg
sbb
dec
lods
lds
inc
fwait
push
push
inc
jle
test
andl
mov
into
sbb
outsl
sti
adc
lret
mov
clc
and
cmp
ret
mov
scas
push
or
dec
jl
mov
xor
dec
scas
cmp
ret
jnp
sahf
imul
sbb
dec
imul
adc
mov
lods
push
sub
xor
mov
mov
fcomps
add
mov
ja
lea
dec
xchg
clc
dec
cli
mov
inc
and
inc
and
mov
pusha
fcomp
mov
int
pushf
dec
push
adc
cmpsb
lds
mov
addr16
add
push
push
pop
pop
mov
mov
scas
pop
mov
lds
dec
arpl
mov
imul
pop
pop
mov
jmp
or
sub
out
sbb
and
xchg
les
subb
rclb
adc
mov
fwait
dec
js
gs
imul
test
popf
int3
mov
cmp
mov
or
mov
iret
lea
cmp
jne
popf
sub
into
jo
dec
aaa
mov
mov
js
and
sub
pop
cmp
push
and
mov
sbb
add
dec
popf
stos
or
or
mov
xor
enter
ja
fmul
inc
in
in
pop
pop
into
inc
lds
mov
pop
inc
jbe
mov
push
push
pop
xchg
add
push
xchg
cli
add
test
sub
mov
sbb
fisttpl
outsb
fisubrs
test
push
lods
popf
pop
cli
jo
inc
imul
mov
cmp
int
aas
or
aaa
dec
jne
dec
jp
es
and
mov
xor
jae
sbb
lret
fdiv
insl
jmp
test
repz
jmp
dec
shll
inc
shlb
mov
inc
sub
add
mov
mov
sub
sub
push
shrb
fmull
mov
pop
inc
ljmp
push
or
in
push
stc
dec
pop
ret
dec
inc
ja
mov
push
sub
sub
mov
nop
xchg
insl
sbb
ficoml
int3
push
xor
dec
push
mov
lods
addl
cmpsl
movsb
cmp
mov
lret
mov
jecxz
fsubl
push
push
fdivs
mov
lahf
hlt
rorb
or
repz
mov
scas
jb
mov
sbb
sbb
mov
scas
fldcw
insb
into
lret
inc
push
inc
loopne
or
clc
and
jmp
fsubr
xor
xor
mov
ret
push
es
loop
leave
mov
pop
push
rorb
jne
push
in
shll
push
adc
xor
sbb
lret
loopne
cwtl
in
imul
sahf
xor
xor
aam
sub
xlat
test
mov
into
adc
scas
lret
leave
scas
fbld
cmpsl
shlb
das
insl
xor
sbb
jg
push
jge
icebp
ss
push
mov
or
cmpsl
mov
push
mov
ljmp
loope
clc
mov
fisubs
outsl
adc
aad
insb
sbb
adc
cmp
leave
push
adc
arpl
cmc
lea
and
cmp
in
mov
and
jge
test
xchg
pop
mov
or
mov
push
sti
sti
sbb
or
cmpb
mov
fsts
in
sub
mov
test
std
dec
dec
xlat
and
or
ja
sbb
stc
je
jl
xchg
mov
stc
inc
daa
fmuls
cmp
push
jp
push
xchg
sahf
jmp
dec
sbb
mov
and
in
jno
adc
mov
dec
add
xor
das
movsb
lret
fbstp
mov
dec
mov
data16
and
js
pusha
dec
push
xchg
movsb
add
in
sbb
mov
pop
xchg
outsl
add
ljmp
pop
mov
push
je,pn
call
add
aam
sti
mov
jp
xchg
dec
ficompl
add
ss
sar
imul
aas
movsb
push
movlps
addr16
ljmp
std
push
in
mov
arpl
lods
jo
jb
test
dec
adc
pop
pop
lods
cli
xchg
dec
dec
jle
push
jl
outsb
lcall
fnstenv
cmc
nop
xor
push
fnstcw
stc
out
pop
fstps
and
insb
js
mov
in
pop
shlb
ds
ret
mov
sbb
loope
aaa
lock
loopne
pushf
or
in
sbb
inc
js
sahf
xchg
stos
inc
fistps
iret
add
mov
popa
sbb
xor
shll
sbbl
sbb
dec
adc
in
add
loope
mov
jns
mov
out
or
loope
add
arpl
cld
pop
or
fildl
add
sbb
leave
in
in
in
xchg
push
in
xchg
sub
jl
xchg
mov
mov
jle
mov
stc
sbb
jge
jo
pop
mov
or
fcomp
pop
fcmovne
jl
pop
rcll
mov
sub
xchg
movsb
xlat
cmc
inc
popf
inc
mov
es
int
lods
enter
push
xchg
cs
cmpl
cmc
sti
arpl
mov
cmpsb
mov
inc
xchg
subb
mov
pop
mov
lret
mov
mov
and
cmp
imul
sarb
dec
in
leave
pushf
fs
xchg
mov
mov
or
into
mov
xor
lcallw
push
inc
lea
mov
test
xlat
mov
push
sbb
movsb
insl
jmp
fwait
or
and
andl
cld
insl
ds
call
jbe
mov
fsub
push
cmp
mov
jae
cmp
pop
ror
cmpsl
add
test
sub
push
sbb
pop
ret
or
leave
int
jg
or
outsl
cmpsb
push
and
ss
jmp
jns
test
sbb
pop
lods
cmc
loopne
jne
aam
lea
push
scas
nop
pop
lods
das
dec
lds
or
adc
lods
jl
push
arpl
xchg
mov
fnsave
fwait
xchg
stc
dec
and
cli
xor
subl
jb
lcall
clc
adc
add
or
jp
test
push
stc
ret
sbb
pop
fiaddl
lahf
push
addr16
add
ds
sbb
in
lea
movsl
mov
popf
inc
lahf
imul
xlat
xchg
std
pushf
and
jecxz
lea
mov
inc
push
mov
mov
cmc
lds
test
pop
adc
jbe
icebp
push
adc
cwtl
lret
shlb
jno
and
fnstenv
stos
xlat
cltd
cmp
std
adc
inc
insb
sahf
mov
sub
mov
jmp
sbb
rolb
testb
ss
test
nop
fsincos
push
mov
cmp
scas
lods
dec
les
jge
lock
mov
pop
out
push
cli
rcrl
inc
mov
inc
dec
ficoms
sarb
dec
cmp
push
mov
adc
mov
shll
mov
add
cmp
mov
adc
inc
pop
aad
rcrl
xchg
xchg
mov
into
adc
jge
ss
jb
mov
fldenv
jnp
xor
stc
xor
jbe
jnp
mov
in
jnp
cmp
mov
inc
mov
ljmp
fisubrl
cmp
dec
loopne
adc
addr16
jmp
cmp
icebp
fs
and
dec
mov
add
adc
test
and
push
push
cmp
or
leave
std
inc
mov
adc
data16
dec
dec
data16
inc
and
daa
js
add
rcr
lahf
xor
icebp
mov
stos
mov
sbb
lret
fdivrs
cmp
aaa
cmpsl
dec
mov
in
sbb
mov
jbe
push
imulb
pmulhuw
xchg
push
std
push
iret
lret
popa
dec
inc
add
orl
stos
jle
outsl
pusha
rcll
daa
aad
repnz
mov
adcl
add
or
in
fnstsw
stc
and
pop
jecxz
and
mov
scas
sub
lret
lret
insb
push
addr16
ss
jb
cmp
pop
xchg
movsb
ret
inc
stos
push
dec
mov
xchg
pop
in
pop
sub
mov
into
aaa
jecxz
mov
jo
jge
test
add
pop
push
orl
lret
insb
cmp
xchg
loope
mov
cmp
leave
push
cltd
jae
sbb
lock
cmp
sbb
add
jns
rclb
xor
add
push
mov
adcl
bnd
insb
mov
dec
mov
cmp
xlat
fimull
inc
sub
xchg
push
cltd
sti
sti
pushf
nop
fcoms
add
dec
adc
inc
inc
or
push
push
or
bound
push
in
mov
pop
jnp
mov
and
icebp
sub
and
pop
aam
dec
movsl
loop
imul
scas
dec
mov
pop
cmp
in
icebp
scas
cmp
std
sarl
dec
cmp
repz
mov
and
push
dec
and
xor
gs
push
jp
mov
lock
int
mov
shll
ffreep
pop
cmp
pop
pop
repz
sbb
sbb
pop
sbb
sub
mov
pop
or
jp
jmp
sbb
movsl
jae
scas
mov
dec
push
sub
andb
mov
data16
dec
popa
add
adc
lock
add
mov
pop
pop
subb
push
int3
sar
or
push
and
or
xchg
pop
repz
fs
fldl
xlat
xchg
cli
std
inc
ss
imul
push
stos
mov
fsubrs
pop
test
jecxz
cmp
ljmp
ds
in
out
jb
lds
lds
push
dec
xchg
enter
xchg
sub
sbb
loopne
sbb
rorl
sar
pop
repz
jns
jb
mov
outsb
sbb
shll
repz
out
and
xchg
ja
add
lock
das
dec
cmpsl
mov
xchg
daa
sub
test
add
jae
lock
cmp
aad
dec
fs
fs
or
adc
les
bound
and
pop
fcomp
fdivp
xchg
add
adc
or
push
pop
sbb
decb
stos
sarl
mov
lcall
repz
mov
dec
mov
or
push
cmpsb
lods
rolb
dec
sub
cltd
cld
add
mov
ljmp
ss
inc
loop
sbb
mov
stos
mov
imul
out
push
xor
dec
cltd
cmc
cmp
xchg
pop
outsb
inc
icebp
add
in
or
pop
cmp
nop
pushf
mov
inc
mulb
aam
pusha
lods
gs
ficoml
in
dec
adc
popf
pushf
clc
push
and
pop
jbe
pusha
in
insl
lret
jp
mov
mov
mov
sub
add
rclb
adc
xchg
jne
lcall
mov
xor
sub
mov
filds
popf
aas
stc
mov
loop
out
lds
dec
insb
push
inc
dec
dec
mov
xchg
jle
mov
aam
add
and
jmp
lcall
jmp
sub
mov
insl
test
xchg
jle
cwtl
sbb
pop
iret
ss
sub
add
mov
add
gs
repz
scas
xchg
in
cwtl
xor
test
fildl
push
in
fwait
xor
mov
xchg
pop
repnz
pop
in
jns
pop
pop
jecxz
and
notb
pop
popa
insb
in
iret
cmp
jo
movsl
xor
push
psubw
xchg
sub
mov
cmc
sahf
push
ret
add
orb
scas
cld
mov
fldt
jmp
jge
nop
sbb
shl
call
nop
fldt
je
cmp
imul
jae
test
mov
test
mov
sarb
mov
push
mov
cmc
jg
das
sarl
cli
or
mov
push
push
call
divb
jl
mov
add
aaa
jo
xchg
lock
mov
mov
ds
sbb
inc
icebp
push
js
mov
xchg
pop
lods
js
dec
sahf
adc
cld
add
push
or
mov
rcll
jbe
and
cmp
dec
subb
pushf
mov
cmp
lock
sub
sarl
scas
inc
pop
fcmovbe
push
or
jp
or
adc
inc
mov
push
rolb
in
jns
cmpsl
sti
xor
xchg
xchg
xchg
faddp
in
insl
adcb
mov
sbbb
pop
fisubl
dec
test
stos
push
insl
lods
cmp
push
adc
lcall
ja
mov
mov
rorb
shlb
ret
mov
out
push
dec
dec
mov
sbb
mov
repz
ficoms
pop
xor
adc
or
cmp
mov
sbb
div
jns
sar
cltd
scas
and
popa
mov
dec
movsb
test
push
mov
daa
xor
mov
sub
outsb
es
stc
jle
iret
jmp
mov
ds
adc
cmc
inc
mov
or
cmc
push
mov
fnstsw
subb
ret
cmp
fdiv
cwtl
pop
inc
lods
cmp
cmc
lcall
adc
jg
xchg
sub
mov
aaa
hlt
cmpsb
gs
fiaddl
mov
add
out
dec
xchg
fnstenv
add
outsb
mov
sub
ss
movsl
fidivl
adc
ds
subb
lds
sub
lods
es
rol
insl
add
aad
sub
jo
cmp
vmaxps
pop
repnz
jns
outsl
mov
sbb
add
adc
fstpt
push
pop
xor
loop
dec
lea
add
cmp
and
int
popf
daa
mov
js
rorl
lret
jle
movsb
ja
jmp
fisttps
push
mov
shlb
and
or
sub
outsb
jle
adc
mov
xchg
dec
imull
lahf
scas
dec
clc
add
out
loop
xchg
stos
movsl
sbbl
data16
sbb
lods
mov
mov
jp
sti
mov
lods
movsl
mov
adc
pop
adc
add
stos
mov
dec
ret
outsl
xor
aam
push
es
and
adc
push
or
mov
movsb
loopne
lahf
mov
sbb
push
cmpb
into
cmpsb
dec
mov
int3
mov
xor
rcrl
pop
mov
repz
sbb
daa
mov
push
or
jmp
dec
jnp
testb
addr16
or
ja
ret
sub
je
mov
pusha
out
pushf
shl
jae
xchg
sub
lods
push
xor
dec
fcomi
mov
addr16
dec
sti
enter
sbb
arpl
xor
fcmovu
xchg
lock
fldt
mov
and
xor
int3
stos
dec
dec
ja
test
orl
jle
fmull
lret
enter
inc
or
mov
lods
push
ds
test
xor
andl
and
adc
mov
ret
fisubs
insl
outsb
hlt
les
mov
xor
sbb
dec
xlat
nop
rcrl
xlat
inc
jns
xchg
stos
fisubs
call
push
jmp
xchg
test
adc
and
jmp
jmp
test
mov
mov
pop
pop
outsb
je
add
mov
mov
ja
jg
push
sbb
test
mov
push
loop
xlat
dec
push
mov
sbb
inc
nop
and
push
and
insl
and
pop
negl
xchg
fs
mov
dec
sbb
mov
cmp
fldl
popf
movsl
jbe
imul
andl
push
lret
adc
lcall
jno
xor
adc
cmp
imul
sti
jg
mov
into
mov
push
xchg
sbb
mov
mov
pop
into
push
push
jns
mov
adc
jne
andl
sub
inc
pop
icebp
insb
mov
lds
outsl
cmp
jns
xorb
pop
out
in
push
push
out
mov
mov
or
fildll
push
dec
push
cs
into
pop
mov
out
xchg
imul
fisubrl
or
mov
inc
pop
je
add
hlt
cmp
sbb
scas
pop
call
dec
lcall
shld
mov
arpl
add
mov
hlt
mov
rorb
cwtl
out
dec
repz
add
cwtl
out
jns
jmp
xchg
rol
mov
out
or
in
mov
cmp
jle
dec
and
sub
sti
test
aas
pop
push
adc
rorl
shlb
xchg
xchg
inc
arpl
fcomps
in
scas
fstl
mov
jle
les
imul
repz
and
pop
or
scas
or
cmp
pop
add
insl
cli
aaa
inc
jp
cmpsl
inc
push
mov
xor
addr16
es
mov
push
pop
jno
or
inc
jne
ss
adc
bound
icebp
sub
mov
sub
nop
and
arpl
jo
pop
popa
jbe,pt
sarl
mov
pop
in
scas
and
or
vpacksswb
xchg
mov
fdivl
push
and
push
outsl
std
sub
add
rol
dec
mov
push
lcall
repnz
add
int
xchg
shlb
mov
imul
add
cwtl
rcrl
scas
jl
pusha
jo
je
sahf
int
lahf
or
repnz
xor
ror
mov
les
lock
xor
adc
add
test
dec
pop
adc
jle
data16
ljmp
pop
jne
inc
jmp
repnz
xchg
xchg
dec
xor
mov
es
add
push
insl
inc
int3
roll
fcompl
hlt
sbb
push
inc
mov
jge
daa
js
jbe
dec
mov
sti
rol
cmp
mov
sub
mov
mov
sbb
dec
jecxz
aad
sbb
pop
sti
dec
sub
xor
pop
arpl
jmp
mov
lahf
sbb
and
out
push
adc
test
xchg
pop
adc
aas
ja
sti
clc
and
jae
ljmp
out
subl
sbb
xchg
test
mov
jb
adc
ss
lock
add
les
add
jecxz
fidivl
dec
xor
mov
repz
mov
cmp
xlat
xlat
or
sub
adc
dec
in
dec
mov
mulb
pop
lea
xchg
les
push
fisttpll
and
mov
jge
mov
nop
dec
sub
push
cmpsb
mov
and
pop
mov
cmpsl
inc
in
xchg
mov
popf
lds
push
pop
lods
stos
rorl
arpl
xchg
mov
jl
test
dec
in
push
ficoms
mov
dec
mov
fidivrs
mov
add
popa
dec
cmp
sti
push
adc
adc
lock
pop
mov
ret
push
lret
mov
mov
and
pop
adc
rol
inc
out
push
jo
loop
inc
fdivr
add
outsb
test
xchg
mov
clc
cli
inc
loop
dec
mov
and
or
or
sti
mov
or
mov
in
cmp
pop
and
xchg
cmp
lods
iret
dec
push
into
loope
xchg
cwtl
popf
outsl
xchg
stos
xchg
shlb
mov
jle
out
push
mov
fbstp
jo
inc
lock
push
and
xchg
out
sub
mov
pop
test
cmpsb
cmp
add
xchg
outsb
xchg
adc
vmovddup
adc
rclb
orb
mov
test
xor
stos
sarb
xchg
pop
test
jae
sbb
jp
add
scas
rorb
add
or
or
rolb
aas
movsl
push
sbb
fbld
les
adc
cmp
call
clc
movsb
fmull
bound
mov
sarl
aaa
in
scas
dec
inc
ret
push
aaa
enter
xor
aaa
insb
xor
push
pop
loop
jg
daa
lret
add
fiaddl
adcb
lret
mov
in
sub
push
inc
popa
adc
push
femms
movl
insb
xchg
aam
jl
int3
jp
insl
pushf
adc
jg
jmp
pop
out
and
shrl
inc
xchg
pushf
fistps
xchg
jge
mov
jg
sbb
ret
leave
in
roll
cmp
dec
pop
cmp
aaa
sbb
xchg
ret
inc
rorl
add
jg
loop
cmp
add
int3
sbb
mov
inc
xchg
pop
sub
or
std
pop
sub
ljmp
roll
xchg
dec
xor
push
mov
mov
jmp
std
jno
call
inc
lea
ljmp
outsl
loopne
outsl
add
in
popa
movsb
cmpsb
data16
sbb
jp
sbb
test
sbbl
jno
aaa
sbb
std
pop
daa
cmp
push
int3
sbb
into
fimuls
and
outsl
push
xchg
cmp
or
adc
push
xlat
pushf
mov
jbe
das
js
push
fs
lock
sub
sub
loopne
and
xor
add
adc
scas
gs
pop
jbe
push
mov
push
test
or
push
mov
imul
jnp
or
cmp
icebp
jb
xchg
push
add
cli
test
int3
mov
inc
sbb
es
dec
mov
xchg
dec
icebp
cmp
aam
aad
mov
xor
negb
xor
or
add
pop
cmpb
cwtl
mov
leave
adc
sbb
jb
shll
xor
push
inc
sbb
cmp
adc
sub
add
push
lcall
imull
out
mov
cmp
xchg
fcompl
push
test
jle
mov
sub
inc
mov
mov
mov
popf
in
pop
inc
mov
iret
adc
jecxz
test
adc
adc
popf
cmp
fildll
mov
mov
sbb
xchg
aam
mov
jg
je
insl
lcall
fdivl
cmp
adcl
jle
mov
dec
sti
cmp
xchg
pop
xchg
ret
pop
addb
addr16
movsb
jle
out
mov
fnclex
pop
sub
mov
movsl
icebp
jae
mov
insb
xchg
andb
daa
mov
out
or
cmp
mov
and
add
lods
hlt
cmp
test
pushf
mov
into
mov
sub
pop
mov
test
leave
sti
lods
pop
mov
jo
adc
cmp
lods
decl
cs
hlt
fwait
enter
sahf
lods
mov
into
sbb
xor
jl
cwtl
daa
test
scas
push
push
stos
test
mov
mov
jae
sbb
test
mov
dec
dec
mov
push
mov
jae
pushf
pop
outsl
lret
push
lahf
mov
in
in
aas
and
push
hlt
cmp
mov
jmp
pushf
sub
mov
push
or
ljmp
pop
ficoms
mov
test
insl
jae
mov
sti
lret
std
nop
cld
add
fists
adc
int
pop
test
and
shrl
and
jmp
outsb
pop
mov
jbe
cmpsl
mov
push
leave
in
add
pop
les
mov
mov
mov
insb
mov
cmp
loop
shrb
fcompl
lods
ljmp
ss
push
mov
pop
call
jl
pop
xchg
mov
pop
lock
aad
stc
inc
xlat
icebp
mov
pop
lods
jle
movd
add
ror
decl
pcmpgtd
sti
cmp
jg
test
add
sarl
les
call
add
and
out
push
test
stos
xor
andb
shrb
mov
sub
add
and
push
ret
jecxz
scas
xorb
stos
push
add
daa
inc
movsb
mov
in
test
push
fs
imul
add
cmp
xchg
lea
xchg
pop
leave
stc
add
mov
sub
clc
ja
sub
mov
or
cmp
xor
push
inc
insl
sbb
arpl
inc
dec
dec
insl
stc
sub
jne
arpl
mov
imulb
in
lock
sub
out
jns
xchg
lea
mov
xor
daa
xchg
jae
fldenv
xchg
rcr
cmovno
test
ret
fstpt
jb
sbb
in
xchg
outsb
jbe
insb
arpl
add
outsb
roll
lcall
xchg
add
or
ds
mov
sahf
hlt
dec
sbb
xchg
xchg
sarl
xchg
add
fidivl
or
lret
fmulp
xchg
push
ret
fmuls
push
out
cmp
repnz
fwait
movsb
push
fldt
sbb
cmp
jg
add
jbe
xchg
xor
ss
push
sub
pushf
dec
scas
sbb
outsl
lahf
inc
or
sarl
jecxz
insb
jmp
out
xchg
sti
sbb
adc
test
mov
pop
repz
mov
pushf
ret
inc
or
test
push
add
ret
add
jecxz
lds
inc
xlat
adc
push
mov
lret
call
dec
aas
jbe
iret
mov
sahf
jbe
insl
cmp
pop
add
sub
pop
insl
cmp
imul
xor
fmuls
into
inc
aam
stos
mov
orl
mov
inc
fdivs
xchg
data16
insl
sub
mov
pop
pop
or
mov
das
out
stc
sub
orl
mov
jb
add
je
bound
adc
and
jecxz
dec
cmp
and
and
fidivrs
sub
mov
cld
push
jbe
jbe,pn
push
add
cmpsl
mov
ret
dec
out
push
lock
lods
and
push
dec
xlat
dec
stos
and
pushf
and
out
pop
push
lock
mov
jb
mov
cld
test
lret
sti
lods
lcall
dec
iret
xor
test
sarl
xor
jne
fidivs
inc
mov
hlt
test
test
incl
jl
inc
jbe
push
hlt
rcrb
adc
push
iret
icebp
sub
enter
lea
xchg
cmp
fstpt
repnz
and
pop
push
dec
mov
insl
xchg
insb
movsb
aas
out
mov
leave
cmc
pushf
addr16
push
inc
adc
lret
cmp
and
das
and
sbb
in
mov
push
shl
inc
sub
out
inc
and
jb
loopne
test
adc
pop
ror
mov
dec
xor
mov
lods
inc
dec
xor
push
jb
data16
or
rol
ss
cmp
jo
adc
mov
cmpsb
imul
int3
inc
pop
dec
mov
mov
mov
mov
fldl
mov
mov
das
movsl
xchg
call
aam
nop
and
in
jmp
stc
xor
or
sbb
cmp
inc
js
xor
mov
or
lds
sub
cmp
mov
xchg
xchg
sbb
mov
scas
outsl
insl
bnd
adc
push
iret
add
fwait
lahf
popf
or
add
inc
mov
push
push
ja
mov
lahf
bound
pop
push
push
mov
or
and
addr16
leave
sub
mov
cltd
int
fdiv
add
pop
pop
mov
mov
xor
lcall
mov
adc
in
shrl
imul
fisubrs
dec
cmpsl
fisttpl
setle
les
cmpsb
andl
jg
mov
add
clc
das
scas
inc
push
mov
jmp
mov
bound
aaa
xchg
adc
rolb
mov
adc
cmpsl
test
xor
dec
jg
jge
call
movsl
mov
add
sub
pop
adc
xor
cmpsl
mov
xchg
pop
mov
aaa
cmp
btc
out
pop
inc
jmp
mov
arpl
mov
push
pop
scas
fwait
std
int
stos
inc
loop
shrd
mov
mov
xor
mov
test
clc
clc
popf
sub
cmpl
sarb
push
insb
lods
pop
insl
jle
push
push
push
pop
pmaxub
es
das
mov
idiv
cmpsl
add
aam
aam
mov
jo
and
leave
call
sub
jg
fldl
aam
push
ss
mov
frstor
xor
xchg
into
nop
ja
stos
addr16
negb
adc
xchg
xor
jns
push
jbe
repnz
insl
mov
push
inc
aaa
std
dec
cmpsb
rorb
mov
lods
cwtl
fwait
jl
lods
das
and
hlt
arpl
cmp
mov
jl
out
sub
fildl
pushf
movsl
sbb
or
cmp
push
insl
mov
pop
mov
dec
loopne
add
pop
std
inc
inc
in
leave
jg
xor
vaddsubpd
lcall
push
int
cmpsb
dec
sbb
push
std
pop
push
imul
jecxz
repnz
pop
xor
add
sahf
jo
push
add
add
jnp
mov
ss
push
xchg
popf
lret
cmp
mov
push
addr16
movsl
aaa
pop
ror
ljmp
sub
sub
pop
jl
iret
lea
push
mov
mov
in
xchg
add
call
gs
and
arpl
out
sub
xor
out
sbb
jb
push
movsb
clc
icebp
add
jne
mov
cmpsl
in
jg
mov
addr16
sub
mov
mov
push
or
sub
pushf
push
sti
sub
adc
mov
clc
je
sbbl
aas
fwait
std
out
sbb
fistpll
xchg
add
sbb
mov
loope
das
fists
fimull
fdivrp
inc
xchg
notb
push
mov
push
shll
fisubrl
inc
test
popa
pop
or
mov
dec
cmp
push
daa
es
fs
jae
add
sbbl
pop
aad
xor
mov
scas
movsl
sahf
mov
mov
call
fildll
or
sarl
mov
repz
fcmovb
jg
rcll
add
jl
hlt
pop
and
or
cmp
inc
sti
dec
cmp
cld
subb
rcl
push
jp
push
sbbl
insb
popa
jecxz
aas
and
xor
stc
shrb
rorb
test
inc
sti
adcb
mov
stc
sbb
negb
sbb
sti
add
hlt
mov
subb
jns
insb
cmpsl
cwtl
fildl
sti
jmp
push
sarb
sub
mov
stos
cmp
lock
xchg
outsb
xlat
into
lds
lcall
sbb
mov
mov
push
push
jg
pop
pop
jno
stc
xor
cmp
adc
ret
pop
fcompl
pop
adc
mov
mov
popf
jo
fnstenv
addr16
test
rolb
rcll
inc
out
xor
sub
or
xchg
stc
and
xchg
cmp
movsl
inc
add
mov
mov
test
pushf
or
lods
scas
in
push
lahf
xchg
push
pop
negb
fmull
bound
negb
mov
push
mov
out
imul
outsl
out
and
repz
daa
add
rcl
sbb
push
mov
test
inc
sub
push
sbb
add
cmpsb
lahf
jns
or
mov
or
inc
adc
push
je
movsb
fstl
push
int
lds
adc
fdivrp
stos
data16
mov
pusha
ror
cmp
pop
inc
add
push
mul
add
mov
adc
cltd
repz
frstor
adc
scas
jmp
fisubrs
mov
fsqrt
cmp
icebp
push
mov
adc
mov
sub
add
cs
mov
cmp
mov
jle
push
ret
cmp
aaa
or
cwtl
push
repnz
or
sub
push
or
ljmp
adc
ds
lret
mov
cmp
sub
jp
arpl
in
mov
adc
fadds
cltd
dec
adcb
shl
filds
adc
xchg
or
aas
nop
mov
mov
andb
push
aaa
add
and
leave
test
jle
repz
cmp
jbe
cld
xchg
gs
mov
mov
xor
pop
icebp
or
cmp
mov
sub
les
mov
lret
loope
mov
mov
dec
dec
sub
cs
sub
jl
roll
fcoms
outsb
dec
jmp
stos
lret
jecxz
lods
addl
mov
repz
popf
test
mov
jp
add
pusha
fs
cmp
and
roll
and
lahf
or
mov
fsts
out
sub
push
mov
mov
mov
out
push
sub
add
aas
roll
pop
insb
aad
xchg
out
or
cld
fisubl
jne
cmp
loope
es
sbb
ljmp
xor
andl
or
dec
push
xchg
call
lret
xchg
inc
inc
rorl
je
lock
shrl
scas
mov
jae
addr16
insb
push
inc
mov
loop
push
pop
ficomps
lcall
cs
xchg
insl
gs
mov
xor
jnp
or
sbb
fwait
int
and
mov
pop
jns
and
ret
mov
push
sub
test
ret
inc
into
push
push
mov
sub
pop
ret
popf
ljmp
cld
insl
cmp
popa
std
mov
mov
mov
jecxz
cmp
inc
mov
pop
inc
loope
aaa
aad
mov
lock
adc
iret
xor
sub
jb
dec
cmp
cmpsb
jae
and
aaa
adc
xchg
inc
test
stos
cmp
and
js
enter
scas
shlb
mov
leave
jg,pt
nop
jle
dec
repnz
hlt
iret
mov
mov
mov
movsl
mov
push
cwtl
arpl
je
adc
int
mov
cmp
in
add
dec
cmp
jns
mov
pop
inc
std
add
sbb
push
dec
jge
lds
or
xchg
test
add
arpl
pop
in
stos
mov
inc
inc
rcll
jne
push
pop
imul
inc
test
inc
popa
je
ret
clc
xor
iret
bound
or
dec
shll
ret
and
pop
inc
int
xor
repz
xchg
mov
cmpsb
dec
leave
adc
mov
add
leave
sbb
rcll
inc
xchg
movsl
jecxz
jae
lods
mov
xchg
mov
insb
and
push
mov
and
adc
cmp
sub
xor
fs
sbbb
or
mov
ret
out
sbb
dec
jne
xchg
xor
fmuls
lret
roll
mov
outsb
xchg
addl
iret
test
pop
std
lret
call
je
test
movsb
sub
hlt
je
mov
cmp
iret
xor
fistpll
push
inc
in
test
add
adc
mov
sbb
pop
jge
dec
shl
iret
inc
xchg
ds
pushf
les
shrl
xor
and
fwait
push
std
loopne
into
out
mov
mov
dec
bound
dec
jae
lods
inc
gs
or
mov
lock
or
or
push
loope
outsb
btcl
xlat
fmull
push
push
int
leave
inc
jle
repz
icebp
inc
adc
int3
fadd
inc
adc
cli
mov
inc
dec
pop
fs
cld
xlat
xchg
jmp
sbb
in
test
inc
xor
fstl
stc
pop
jb
mov
stc
push
jo
call
xor
aas
lret
dec
sbb
ret
xchg
outsl
test
in
and
push
lods
xor
int3
sub
adc
cmpsb
mov
cld
rcrb
pop
ljmp
inc
cltd
push
sbb
outsb
negl
negl
sbbb
mov
pop
push
jge
in
push
test
pop
pop
out
ss
imul
jge
add
rclb
push
xlat
dec
pushf
cmp
pop
xorl
add
fs
xchg
lds
or
xor
inc
sub
and
cmp
hlt
loop
mov
dec
or
xor
hlt
loope
call
sbb
xchg
aam
push
fwait
cwtl
movsl
jge
xchg
scas
dec
into
aas
or
in
movsl
xchg
mov
push
mov
cmp
in
mov
in
cmpsb
mov
and
or
push
xchg
push
enter
pop
out
inc
mov
sub
imul
push
sbb
roll
rcl
test
cmp
mov
inc
inc
adc
ret
jecxz
xchg
andb
bound
mov
cmp
out
pop
stc
pushf
pop
dec
popf
pop
aam
je
es
mov
fildl
and
push
mov
inc
ret
pop
inc
lahf
aam
pushf
push
das
mov
jmp
xor
add
jb
sbb
out
inc
aad
popf
out
es
dec
adc
sbb
jg
cmp
loope
push
mov
push
mov
mov
fsubl
push
pop
test
cld
mov
lods
scas
push
sbbb
jns
cwtl
pushl
mov
sub
sub
mov
int3
add
lock
push
popf
pop
push
or
shr
aas
add
arpl
pushf
stos
imul
movsl
stc
xlat
lcall
cmp
sbbb
lret
add
jne
xchg
sub
pop
in
push
mov
faddl
mov
sub
add
and
push
lcall
pusha
mov
mov
and
mov
icebp
push
mov
add
ljmp
das
lahf
pop
js
dec
add
mov
inc
sti
out
lret
or
jge
add
mov
cmp
iret
lret
je
lds
shlb
mov
iret
adc
push
sbb
push
out
popf
mov
repz
call
outsb
movsl
scas
fwait
adc
jne
test
enter
cwtl
cmp
mov
bound
mov
mov
cmc
arpl
mov
in
or
add
stc
xor
xchg
and
push
stos
rcrb
cmp
imul
cmp
lods
xchg
inc
push
push
pop
mov
sub
adc
or
ret
lcall
cltd
lock
ljmp
dec
aas
les
dec
jb
sbb
xchg
xchg
jg
imul
cmp
nop
stc
in
or
inc
loope
data16
leave
dec
shlb
cmpsl
cli
xchg
mov
xchg
and
sbb
addl
std
out
or
fs
pop
icebp
mov
ret
and
xchg
outsb
and
enter
fnsave
pandn
mov
adc
push
inc
insl
mov
jae
push
push
mov
add
xchg
xor
xor
sbb
in
sbb
lret
push
imul
jbe
in
inc
in
inc
cmp
cmp
scas
mov
push
sub
jmp
xchg
mov
pop
imul
or
jl
stos
ret
xchg
mov
gs
mov
pop
in
dec
js
sub
in
roll
mov
xor
shlb
push
out
rolb
push
pop
daa
inc
cmp
subb
sahf
packssdw
pop
xchg
out
jns
mov
or
sahf
shrb
sub
inc
loopne
sbb
pop
push
xchg
xor
pop
hlt
cmp
adc
sbb
fildll
pop
xlat
sbb
adc
xchg
xchg
mov
jle
mov
adc
cmp
fdivs
mov
xlat
ds
jmp
mov
fimull
sahf
punpcklbw
test
and
loop
mov
je
pop
repz
aad
cs
or
outsb
fidivs
out
je
push
mov
dec
jle
pop
bound
jecxz
outsl
pop
scas
scas
lcall
cmp
push
jg
dec
pusha
jb
or
dec
add
mov
scas
jnp
arpl
roll
adcb
ret
adc
dec
dec
mov
pop
xchg
mov
mov
pop
leave
das
cmp
fnsave
das
jnp
imul
sub
and
dec
popf
sbb
in
bsf
repz
dec
xor
jmp
andb
out
jmp
add
sub
jbe
cmpsl
inc
add
pop
pop
outsl
les
roll
dec
add
cmpsb
lcall
push
cmp
repnz
jb
jp
jns
inc
dec
popf
insl
and
cmpsb
jmp
lock
push
pop
mov
xchg
aas
cmp
xchg
les
outsl
and
mov
outsb
mov
rcrb
add
or
dec
mov
adcl
sub
sub
or
inc
cmp
mov
push
push
xor
sahf
bnd
jbe
movsb
rorb
js
pop
bound
movsb
subl
jl
pop
jns
push
adc
or
mov
mov
mov
enter
call
fwait
ds
push
dec
mov
adc
cmp
call
push
sbb
sub
sar
rorb
inc
xchg
dec
out
inc
lock
aad
sbb
stc
and
jle
je
sti
repnz
xchg
xchg
nop
repnz
jecxz
ficomps
sub
xlat
ss
ret
inc
out
mov
push
ds
daa
add
xchg
loope
jecxz
mov
test
sub
xor
lods
loope
cmp
adc
and
das
xchg
sub
movsl
movsl
add
sti
and
inc
xchg
bound
mov
stos
sbb
sbb
movsl
mov
xor
cmp
ret
out
dec
cltd
cmp
mov
sub
mov
bnd
rcrb
lock
lret
sub
adc
lods
xchg
pop
add
rcrb
insl
mov
std
test
fnsave
inc
xor
call
cwtl
aas
dec
add
scas
sahf
xor
bound
cltd
jo
ret
mov
add
push
addr16
mov
cmp
xchg
into
int
idivl
lds
mov
mov
pushf
cmpsl
sub
in
cld
fcmove
shrl
shrl
push
stc
xor
inc
movsb
movsb
leave
pop
adc
pop
ds
cwtl
jmp
popf
push
clc
xor
sbb
popa
push
aad
pop
jle
nop
jg
clc
mov
and
adc
in
or
adc
mov
lods
push
pushf
adc
xor
mov
fdivrs
sbb
or
ljmp
jae
adc
addl
mov
negl
movsl
scas
jmp
repnz
orl
test
inc
out
pop
add
xor
jecxz
pop
popl
jns
lret
or
lret
orb
add
cmp
fcomps
stos
push
mov
add
add
sub
roll
ja
repz
inc
sub
dec
pop
sub
add
les
stos
mov
jge
lods
dec
pop
cwtl
push
jno
jb
jns
mov
sub
out
pop
push
inc
test
xchg
jno
sarb
cmp
add
cmpsb
and
stc
inc
xchg
inc
fstl
pop
in
fldcw
loope
ja
cltd
in
jecxz
sub
idiv
mov
mov
jecxz
mov
xchg
xchg
popf
mov
test
imul
mov
arpl
icebp
pop
mov
jnp
scas
jnp
sub
idiv
sbbl
pop
repnz
mov
push
rorl
jno
pop
stc
adc
cmp
push
and
pop
mov
pusha
sub
repz
add
fdivrs
add
enter
push
ljmp
xchg
push
mov
jbe
sbb
or
cmp
mov
imul
push
lods
sub
mov
sbb
ljmp
jb
int3
andb
push
fsubrs
adc
in
xchg
cmp
mov
xor
dec
fists
subl
mov
loopne
and
xlat
cmp
out
addr16
or
xor
mov
roll
push
sub
jno
mov
das
je
pop
sahf
into
cli
pusha
pop
and
dec
jp
dec
inc
sti
add
mov
popa
dec
mov
add
xor
iret
mov
add
negb
push
sub
pop
or
leave
clc
cmpsl
jb
out
loopne
mov
and
xchg
arpl
mov
idivb
iret
sti
lret
insb
sub
aam
loopne
lock
and
fistpll
sub
cltd
and
sub
sarl
lcall
jns
xchg
cmp
cmp
dec
xorb
add
mov
sub
cld
inc
jb
xchg
adc
push
out
and
and
stos
push
fmuls
pop
dec
jb
jge
das
sub
aam
shl
lahf
test
dec
and
xor
scas
cmp
lods
pop
ljmp
and
sbb
fcomps
out
jnp
imul
cmp
dec
push
xlat
xchg
xlat
sahf
hlt
cmpsl
imul
hlt
or
popa
add
loope
aad
in
scas
rorl
adc
or
iret
pop
dec
or
call
inc
loop
add
lods
xor
mov
stos
loop
fdivrl
cs
inc
popf
mov
int3
add
and
and
cmp
xor
mov
rcrl
mov
add
sbb
loop
mov
repz
icebp
insl
pop
arpl
push
scas
pop
out
and
add
mov
ljmp
andb
pop
push
cwtl
mov
xchg
lock
jecxz
mov
fs
in
in
movsl
adc
fwait
xlat
jae
popa
pop
xchg
jo
shrl
insl
pushf
xchg
sbb
jge
jp
mov
xlat
jge
icebp
stos
dec
push
invlpg
push
imul
test
test
jp
sahf
mov
movsl
cmp
hlt
sti
inc
xchg
jecxz
shl
mov
mov
sbb
sub
mov
sar
inc
xorb
xor
in
gs
xchg
aam
jg
mov
mov
pop
clc
aas
pushf
and
stos
iret
daa
or
inc
loope
stos
and
push
xchg
jle
cmp
pop
push
cmp
es
push
mov
push
jmp
mov
mov
sub
scas
xchg
push
push
mov
jp
nopl
int3
adcl
jg
mov
push
repz
jns
lock
inc
mov
shll
mov
mov
and
mov
in
jp
in
sub
leave
or
or
cld
outsb
pop
stos
sbb
sarl
jp
pop
lret
test
xchg
xchg
pusha
dec
loop
mov
iret
sbb
ror
outsl
mov
shl
xchg
mov
jbe
mov
pop
iret
imulb
sub
cmp
orb
xor
fwait
add
les
daa
xchg
jns
mov
xchg
add
adc
xchg
xchg
adc
xchg
roll
test
push
imul
call
sub
or
mov
pushf
xchg
test
push
jo
nop
ret
aaa
in
xchg
cli
pushf
sub
lea
mov
mov
fsubr
push
scas
push
pop
ffree
adc
and
jg
xchg
inc
xchg
cmc
outsb
pop
xchg
mov
mov
leave
fldenv
and
aam
clc
mov
add
xor
push
ret
adc
xlat
mov
repz
aad
mov
adc
sahf
data16
jbe
iret
outsb
sub
std
test
xor
mov
clc
mov
or
xor
gs
push
sbb
cwtl
xchg
xlat
int
in
rcr
mov
inc
loope
push
mov
cwtl
add
imul
cmp
jmp
mov
cmp
lret
xor
xchg
fmull
ss
add
or
lea
lods
fwait
clc
push
sub
mov
add
cli
sbb
and
or
push
loope
fidivs
repnz
cmp
mov
mov
shl
add
pop
xchg
pop
jmp
inc
dec
or
inc
shll
jne,pt
push
xchg
shl
cmp
outsl
or
fcmovne
cltd
add
loope
arpl
xchg
and
cmc
loopne
and
mov
cs
push
or
jno
repz
push
ss
fs
jmp
outsl
aad
popf
mulb
push
push
mov
xchg
ret
sub
ficomps
scas
cmpl
outsl
add
xchg
mov
stos
cwtl
jno
shrl
xchg
adc
mov
sbb
or
xlat
ja
mov
pop
fisubl
lret
mov
int
mov
fsubrs
pop
adc
jns
jp
cmpb
popf
fnsave
mov
fsubrs
loopne
mov
xlat
nop
jmp
inc
lods
arpl
adc
mov
dec
nop
pop
ljmp
mov
push
lret
mov
fwait
dec
mov
arpl
nop
xchg
stos
jmp
jp
out
xor
int
sub
stos
pop
mov
xchg
xor
mov
jle
or
mov
mov
les
add
mov
xchg
xchg
pop
lods
xchg
cmp
out
lahf
out
dec
adc
ficoml
pop
pushf
cld
and
mov
dec
ss
jns
int3
push
les
sub
in
cmpsl
lret
insl
jge
or
icebp
das
xchg
in
add
sub
mov
xchg
repz
and
loop
pop
out
test
pop
rcll
mov
iret
cmp
lret
clc
or
clc
jle
inc
lahf
jnp
out
cmp
pop
lcall
scas
pusha
loope
roll
dec
gs
xor
out
lock
rcrb
jle
stc
bound
shrb
inc
pop
mov
xchg
mov
popa
mov
dec
pop
int
cwtl
mov
loop
mov
pop
inc
jp
pushf
popf
push
clc
cwtl
daa
mov
and
cmp
cltd
push
lret
push
movb
pop
aad
ret
fisubrs
push
insl
outsl
ja
and
xchg
cmpsl
inc
jnp
and
imul
dec
cmp
arpl
adc
inc
adc
adc
mov
aas
arpl
test
sub
adc
mov
pop
movl
andb
xlat
addb
lods
outsl
dec
mov
adc
mov
call
insl
negb
push
push
adc
imul
movsl
ljmp
outsb
pop
scas
mov
jge
xchg
adc
int3
bound
push
fwait
shlb
adcb
imul
cmpsb
fwait
or
jne
fistpll
rclb
dec
sub
stos
cmp
pop
push
xor
xchg
push
push
leave
xchg
test
mov
or
icebp
dec
mov
cli
inc
mov
push
cli
sub
jmp
stos
add
push
sahf
aas
push
std
add
or
or
incb
sub
inc
mov
test
and
scas
ret
xor
lret
insb
lahf
rorl
clc
sbb
inc
jl
mov
jbe
xchg
push
dec
pop
dec
jmp
pop
shrb
jmp
mov
inc
jo
fimull
mov
add
lahf
cmp
stc
int3
repnz
sub
ret
mov
pop
dec
xor
call
jae
cli
sbb
in
jle
insb
sub
push
psllw
add
inc
inc
movsl
push
mov
ret
cmp
mov
xor
mov
sub
pop
out
mov
jns
loop
dec
mov
das
push
icebp
sub
lds
xor
enter
dec
push
pop
mov
or
or
shrb
adc
add
sbb
test
ljmp
pop
dec
xor
push
mov
mov
in
mov
xchg
movsl
jbe
hlt
pushf
mov
stos
insb
fcmovu
jg
rep
cltd
fisubl
scas
and
lcall
cs
or
int3
shll
sbb
add
loope
movsl
cmp
ss
jmp
repz
inc
adc
sub
cmp
shl
stc
sbb
pop
fisttpl
sub
ljmp
ja
sub
stc
iret
xlat
js
xchg
pop
outsl
aad
jg
loope
addl
dec
add
imul
in
and
dec
pop
leave
loopne
pop
out
push
jl
ss
jmp
jnp
push
push
movsb
mov
je
hlt
jg
les
fs
js
xor
xchg
pop
and
mov
shrb
xchg
mov
xlat
sub
in
out
inc
mov
push
dec
mov
mov
mov
jae
xor
xor
data16
scas
mov
mov
in
lock
out
mov
rclb
mov
mov
in
cmp
jecxz
jmp
js
jmp
in
sbb
pop
nop
push
pop
cmp
or
jbe
jge
mov
popa
or
in
jg
shrb
dec
ljmp
inc
mov
push
xor
push
pop
nop
jmp
cmp
push
sti
ret
gs
mov
scas
and
inc
xchg
jl
lods
sbb
cmpsb
test
test
adc
sbb
aam
sub
aam
rcl
xchg
scas
inc
lret
js
repnz
inc
xor
or
shll
jg
outsl
push
or
and
sub
popf
pop
clc
pusha
les
xor
dec
sbb
jnp
ret
les
ficoms
mov
xchg
jbe
fsubrp
icebp
cmp
adc
and
ds
out
test
add
add
out
mov
ror
xor
mov
mov
hlt
gs
ret
mov
push
cmp
imul
xchg
xchg
movsl
iret
mov
iret
imul
aas
jg
aas
xchg
aam
fwait
loopne
cmc
push
dec
fcomp
push
fdivrl
pushf
test
scas
iret
add
lds
jb
in
inc
test
mov
popf
xor
push
leave
loopne
cmpsl
pop
jne
push
push
dec
cmp
imul
adc
and
sbb
lret
test
mov
push
sbb
stos
xor
cmpsl
push
cmp
dec
mov
jno
jp
mov
pop
ja
xchg
and
pusha
push
scas
in
mov
in
test
mov
in
push
data16
scas
jnp
std
stc
insb
pushl
cmp
movsb
mov
push
ljmp
mov
stos
ret
or
sti
and
sbb
leave
cmp
aaa
sub
cmpsl
push
push
add
imul
mov
test
leave
add
or
inc
cmpl
adc
push
xchg
cmp
inc
jbe
sbb
push
sub
inc
xchg
bswap
push
push
rcrl
loop
jns
add
ja
popa
sub
ret
mov
sub
xchg
bound
test
lds
loop
sahf
sarl
cwtl
push
or
adc
xor
mov
jge
jo
xchg
jecxz
sbb
push
jno
xor
iret
or
fmul
fwait
xor
inc
popf
stos
js
ret
test
or
adc
int
jbe
sahf
stc
jns
movl
fisubrl
xchg
mov
icebp
fcmovbe
lock
add
out
mov
pop
jg
lds
and
imul
adc
daa
xchg
repz
stos
mov
cmp
adc
add
into
or
dec
mov
jno,pt
mov
push
movl
jns
cmpsl
xchg
push
and
mov
xor
inc
and
pop
out
push
scas
add
mov
lea
inc
pop
stos
sub
stos
mov
xor
mov
notb
in
xchg
push
inc
mov
call
cmp
jno
psrad
jecxz
jo
push
icebp
pop
cmp
aam
aaa
jecxz
je
test
pop
aad
dec
and
test
mov
pushf
push
cmp
cmp
bound
add
loop
dec
lahf
jns
mov
sbb
push
icebp
lds
pop
bound
adc
jmp
xor
stos
sbb
cmp
das
or
jns
sarl
in
inc
jge
iret
pusha
imul
inc
xchg
jg
popa
pop
adc
push
sti
insb
dec
sbb
xchg
pop
xchg
lret
movsb
cmp
pop
mov
arpl
popa
xadd
push
jecxz
punpckhwd
xor
sbb
rorb
lahf
push
std
sbb
ljmp
sub
es
repz
mov
filds
and
pop
ljmp
push
jecxz
jmp
mov
icebp
popa
mov
je
xor
push
aas
ret
sub
fbstp
js
and
pop
pop
jle
jns
gs
push
inc
jbe
fcmovne
pop
cltd
and
outsl
shrb
cmpsb
icebp
sbb
pop
imul
insb
mov
xchg
shlb
inc
into
nop
or
cmp
aaa
ret
mov
lret
xchg
jo
xor
add
jb
or
icebp
or
add
ds
jge
ljmp
mov
sub
mov
pop
pop
out
xor
dec
ss
daa
push
les
mov
inc
push
inc
dec
stos
or
jb
cmpsl
lods
das
jmp
jmp
dec
aas
mov
invd
inc
pusha
int
mulb
pop
cmp
mov
outsl
negl
fdivs
jae
inc
push
xchg
mov
movb
sbb
imul
out
cmp
ja
out
bound
sub
or
int3
int3
daa
nop
mov
and
ja
sub
pushf
jnp
sarl
js
loop
cmp
push
scas
test
mov
movsb
shlb
cmp
nop
sub
and
jl
mov
pop
mov
mov
add
lret
xor
adc
addr16
or
jae
add
aaa
pop
cmp
jge
sub
js
jecxz
dec
clc
and
lods
dec
and
adc
mov
popa
add
cmp
cli
adcb
xchg
adc
or
sub
popa
mov
fadd
iret
push
cmp
in
cmp
sahf
nop
pop
ja
push
sti
sub
cltd
scas
xchg
cld
popf
rclb
mov
cs
leave
sub
bt
enter
aas
popf
inc
cmp
out
lahf
cli
or
rcrb
add
cmp
or
jno
ljmp
popf
xchg
lcall
out
and
jnp
and
jl
fildl
fistpl
lret
les
ret
jg
iret
jmp
popf
stos
fstpt
or
mov
jg
push
jecxz
mov
push
bswap
filds
mov
icebp
push
call
int3
xchg
mov
gs
or
aas
sbb
or
push
fs
scas
inc
std
lods
mov
test
addl
dec
clc
int
fistpl
cmp
mov
adc
xor
lods
adc
lods
fimuls
fimull
xor
xchg
cwtl
xchg
push
inc
decb
push
fsubr
hlt
loop
dec
sahf
cmp
jg
mov
mov
mov
fsts
mov
cs
cld
pusha
fnstsw
pop
lcall
repz
out
jns
popw
mov
dec
and
outsl
addb
adc
int
and
pop
arpl
fsubl
add
jge
dec
cmc
pusha
outsb
xor
sbb
cmp
mov
test
xchg
icebp
jl
push
mov
shll
push
jecxz
enter
sbb
arpl
xchg
sub
std
add
sbb
daa
ret
scas
test
repz
inc
push
sub
push
aaa
aad
xchg
loopne
ljmp
cmc
sub
xchg
pop
jmp
and
or
mov
xchg
mov
insb
add
sbb
rcr
cs
daa
mov
sbb
aad
stos
jo
push
mov
dec
dec
inc
in
adc
lock
mov
pop
insl
mov
aas
cmp
aas
adc
lods
shl
inc
andb
mov
testl
loope
add
push
push
mov
gs
test
pop
mov
jl
fistps
scas
pop
out
sub
insb
and
rol
ret
and
xchg
xor
loope
lret
mov
jns
mov
jnp
pushf
add
jnp
clc
lret
rorb
add
or
sub
inc
jg
mov
icebp
cltd
dec
int3
lods
push
sbb
jbe
cmp
cmc
pop
outsl
and
popf
in
sub
das
sbb
jo
imul
outsb
std
loope
inc
addl
mov
pop
cmc
adc
std
sbb
xor
mov
stc
notl
cmpb
movsl
mov
call
inc
test
or
cmpsw
and
cmp
adc
ss
adc
jl
leave
stos
and
or
xchg
out
push
aas
lock
dec
pop
or
pop
and
xchg
scas
push
stc
mov
mov
or
or
mov
in
mov
sbb
fwait
in
pop
jae
fxch
inc
adc
jge
xor
into
repnz
xchg
xchg
sub
cmc
fsts
cmp
pop
roll
mov
pop
cmpsb
sub
pop
out
std
push
lods
mov
into
push
sbb
shlb
xchg
imul
mov
rorl
xchg
mov
subb
sarb
xorb
sahf
and
push
and
push
mov
cmp
mov
pusha
das
imul
jo
adc
sti
leave
test
gs
addr16
jo
inc
sbb
hlt
ja
scas
movsl
mov
adc
cmp
in
in
push
sub
lret
rcll
jo,pt
xchg
pusha
push
sbbb
popf
mov
xor
movsl
out
or
push
mov
ss
lods
adc
mov
rcll
lcall
lods
dec
xorl
aad
insb
stos
fimull
idiv
xchg
pop
insb
push
push
pop
dec
mov
aas
sahf
xor
movsb
jae
mov
in
adc
inc
pop
adc
fildll
aas
sti
adcl
xchg
sbb
or
sbb
psllq
lods
fistl
and
mov
add
fadd
imul
lods
push
test
or
jmp
xlat
leave
and
scas
jno
rol
bound
cmp
sbb
lds
jne
inc
outsl
aam
jns
mov
out
push
adc
dec
popa
fistpl
jno
jne
xchg
sbb
je
pop
mov
pushf
rorl
jns
fprem
jns
pop
and
js
push
push
and
cmc
push
dec
xor
fidivrs
roll
sub
and
pushf
fistps
xchg
dec
xchg
sarb
iret
sbb
dec
and
out
popa
out
jge
fwait
mov
pop
js
aam
pop
adc
fiadds
and
test
addb
cli
outsb
loop
lahf
cmp
bswap
pop
popa
jmp
rclb
ljmp
pop
lds
cld
shr
jno
sub
insl
data16
dec
cmc
stc
sbb
flds
cli
xor
cmp
in
lret
mov
decb
inc
out
int3
fwait
rcrl
cmc
push
or
lcall
outsb
mov
inc
fdiv
sahf
jbe
or
outsb
insl
xchg
nop
sub
lds
popf
dec
push
shrl
sub
shrb
pop
adc
inc
fistpll
int
or
lds
gs
loopne
int
fcompl
outsb
xchg
arpl
cmp
test
pushf
and
leave
mov
adc
xchg
sbb
push
inc
out
popa
mov
push
cmpsl
adc
in
adc
adc
inc
and
and
idiv
pop
xchg
rorb
cwtl
mov
in
mov
inc
cmp
out
pop
test
push
adc
dec
dec
add
xlat
iret
mov
jle
rorl
lahf
adc
dec
hlt
mov
fucomp
pop
imul
sti
xchg
movsl
xor
outsl
push
xor
shrl
sahf
cld
cmpb
mov
adc
subl
jno
int3
mov
outsl
movsb
repz
sbb
mov
ror
rcrb
cwtl
push
jl
xchg
bound
inc
subb
lahf
add
scas
jae
mov
addr16
stos
sbb
out
out
imul
jb
inc
and
addr16
sub
add
ret
jno
inc
test
mov
add
aaa
sti
dec
or
sbb
adc
cmp
jl
lret
xchg
into
xchg
jmp
dec
cld
cli
add
mov
xor
and
push
push
leave
or
aas
out
cmpsb
pushf
jne
fldt
push
shll
adc
bound
sub
dec
addr16
pusha
mov
sbb
lcall
cmpsb
jns
aaa
pop
aad
jg
addb
hlt
pushfw
jmp
lahf
jnp
iret
xor
sbb
mov
in
clc
repnz
je
mov
out
mov
stc
fnsave
jae
add
test
xchg
jp
mov
jp
cmpsb
movsb
aas
mov
out
mov
lcall
mov
and
sub
push
sub
xchg
push
sahf
out
ds
mov
imul
jge
cmp
dec
mov
fisubrl
jmp
int3
cmp
jb
insl
divl
call
lret
inc
fwait
cmp
test
dec
and
adc
jns
mov
jbe
enter
call
loopne
outsl
stc
mov
lods
notl
push
test
jnp
or
subb
mov
xor
mov
push
mov
decb
dec
cwtl
mov
fsubrp
adc
subl
jmpw
in
dec
aas
cmp
and
sbb
sbb
imul
call
test
dec
dec
jbe
out
xchg
push
mov
fsubrs
mov
int3
insl
in
dec
push
inc
scas
iret
pop
push
pop
pop
mov
mov
inc
sub
mov
cmp
add
xor
or
fcomi
dec
sub
pop
mov
fcoml
imul
and
lods
lods
cmp
mov
iret
xchg
cmpsl
cli
xor
out
clc
push
addb
add
dec
daa
jmp
jns
jp
ds
xchg
mov
adc
leave
fimuls
and
xchg
mov
xchg
inc
pop
push
test
sbb
pop
xchg
add
cmpsl
enter
adcb
cli
dec
sbb
sahf
repz
insb
mov
movsb
xchg
js
cli
xor
popa
pop
in
push
inc
and
dec
adc
cmpsb
ud2
out
jge
mov
lcall
inc
pop
hlt
ljmp
leave
into
pop
inc
inc
mov
imul
and
xchg
out
xchg
adc
mov
pop
icebp
xor
add
sub
and
dec
xor
in
orl
mov
xor
fisubrl
or
inc
jmp
adc
or
pop
popa
jg
mov
xchg
sub
hlt
mov
adc
or
mov
or
or
or
push
dec
jns
aad
shlb
shr
inc
loope
and
scas
or
pop
hlt
dec
or
je
pop
fs
jns
test
arpl
shl
pusha
jp
enter
movsb
ljmp
cmp
pop
mov
mov
test
add
sbb
sti
cmp
xchg
jecxz
push
xor
ds
stos
cs
ror
jmp
add
xlat
mov
out
test
jb
loop
and
faddp
adc
stos
inc
in
lret
adc
jl
sbb
aas
daa
lcall
mov
push
cmp
or
ljmp
mov
ret
xor
mov
dec
repz
ret
or
fcmovne
xchg
mov
or
jl
jecxz
jmp
mov
fwait
movb
cmp
aad
push
pop
shll
cmp
add
popf
and
cmpsb
adc
xchg
pop
fs
jnp
shlb
in
xchg
adc
ficoms
fdivl
sub
cmp
imul
mov
sbb
and
inc
lret
stos
aad
push
lea
ds
jg
sbb
test
outsl
mov
movsl
mov
inc
mov
sub
lea
push
pop
pop
std
pop
lock
leave
lret
das
pop
mov
in
adc
and
xchg
rcr
adc
lret
jo
adc
cmpsl
outsl
lock
in
lods
push
leave
out
mov
xchg
insb
orl
iret
pmuludq
out
dec
lds
sbb
xor
test
sbb
gs
jae
in
mov
jb
jno
into
std
cwtl
out
jle
pop
cmpsb
push
enter
pop
icebp
xor
push
aas
xor
xchg
and
push
popf
add
stos
mov
test
cwtl
inc
arpl
notl
mov
dec
lahf
in
mov
in
lcall
ret
out
push
and
sub
inc
pusha
sbb
push
js
and
or
dec
lret
aam
inc
fidivl
ss
incb
xchg
fwait
pop
shlb
or
jl
loop
xchg
div
mov
out
out
inc
scas
xor
xchg
sahf
fmul
xchg
int
jb
gs
push
cmp
jp
leave
pop
push
stos
loope
xlat
mov
enter
outsl
mov
xchg
sbb
loopne
popf
scas
push
scas
lahf
push
rclb
je
cmc
aaa
cmpsb
jne
shlb
xchg
loopne
sbb
negb
repnz
inc
xchg
xchg
js
and
pop
imul
mov
jo
jae
push
loop
push
sub
leave
arpl
push
add
or
or
dec
mov
push
in
out
or
sbb
sbb
addr16
fistl
leave
aad
aad
cli
adc
sbb
jl
xchg
arpl
cmp
movsb
rcrb
and
call
inc
mov
aas
pop
add
and
shll
fildl
or
mov
pop
lods
movsl
inc
std
shll
jecxz
cmpsb
jae
mov
jno
sub
mov
mov
addl
cmc
rorl
pop
insb
movsl
out
jnp
xchg
mov
lock
fisttpl
stos
lock
movsb
out
leave
in
jno
and
cmp
les
inc
mov
and
fistps
mov
inc
fists
mov
xchg
mov
je
ds
and
lret
repz
lock
push
in
insb
lret
sub
add
pop
mov
repz
inc
cld
popf
adc
std
jnp
sbb
out
imul
push
lahf
call
imull
jae
adc
or
sbb
adc
stos
xor
icebp
in
movsl
mov
push
mov
sar
sbb
and
movsb
xlat
test
icebp
iret
data16
xchg
mov
call
icebp
cld
cmp
decl
loope
testb
sbb
pop
xor
xor
jg
adc
and
lods
dec
pop
ja
xchg
gs
out
xchg
mov
movsb
imul
add
ret
pop
lods
add
popa
sub
adc
add
mov
dec
xor
fidivs
jo
daa
mov
loope
roll
or
inc
insb
xor
shlb
mov
pop
scas
xor
movsb
repz
pop
jp
or
fimuls
xor
in
test
loopne
aas
vmread
loope
mov
outsl
mov
push
rclb
or
or
xor
addr16
jl
stos
loop
inc
xor
xor
pop
mov
movsb
fdivrs
push
xor
out
leave
dec
add
xchg
repnz
movsb
push
js
mov
jp
dec
cltd
popf
dec
in
push
inc
pop
cmp
repnz
stos
jno
les
lds
cwtl
pop
or
pop
add
lds
adcb
mov
add
push
test
push
add
cmpb
lock
or
mov
out
sub
clc
sti
push
jp
lock
jp
lods
out
adc
push
xor
inc
data16
nop
add
imul
cli
cmpb
sub
push
jmp
xor
ficoml
jp,pn
cli
push
sbb
jae
mov
jne
push
inc
pop
cwtl
iret
mov
inc
and
mov
sub
push
mov
sub
or
js
or
xchg
lods
ret
pop
cmp
jmp
xchg
mov
iret
jmp
dec
add
dec
push
nop
out
enter
mov
inc
loope
inc
jmp
push
add
outsb
lea
test
cmp
loopne
or
mov
ret
mov
jle
rcrb
leave
pop
movsl
or
inc
dec
jbe
push
jl
mov
orb
ljmp
in
cld
or
out
pop
cmpsl
add
mov
xor
xchg
js
dec
push
jl
jbe
gs
add
jb
pmaxub
cmp
iret
inc
int3
clc
int3
jle
sbb
in
ret
pop
inc
sarl
and
cli
push
gs
jge
mov
xorb
mov
shlb
jmp
jnp
int3
mov
jmp
inc
sbb
push
cli
sbb
push
xor
aad
dec
dec
and
stc
add
sbb
sbb
out
sub
inc
adc
jg
adc
lods
sahf
mov
fmul
ljmp
push
dec
shrb
cli
int3
pop
mov
data16
scas
mov
xchg
ret
ds
leave
int3
ret
cwtl
outsb
lds
scas
jo
push
push
cmp
or
mov
pop
and
addr16
lock
outsb
inc
fdivrs
mov
or
addr16
and
sbb
test
loope
shll
into
aaa
fcmovnu
jmp
pop
add
popa
es
mov
insb
out
sbb
test
sbbl
fwait
and
adc
dec
mov
push
pop
inc
or
cmpsl
in
mov
mov
iret
jo
scas
mov
sbb
fisttpl
mov
add
sub
cmp
stc
stos
cmp
andb
pop
mov
pop
retw
cmpsl
into
mov
jecxz
jbe
ficomps
in
pop
pusha
scas
popa
mov
and
rcrl
xor
adc
aaa
jecxz
adc
leave
sbb
notb
jne
xor
dec
sbbb
test
movsb
ja
jp
fists
dec
imul
dec
and
loop
addr16
sbb
mov
aas
fsubrl
lock
adc
and
and
ret
cs
out
fsub
cmc
pusha
nop
fimull
insb
hlt
add
negb
out
sub
movsl
jp
and
in
inc
or
jg
cs
jp
xor
divl
adc
sub
adc
nop
add
or
jle
cmp
data16
scas
scas
lret
jp
lret
test
push
adc
xor
bswap
add
or
aam
xor
sub
sbb
dec
dec
dec
jecxz
pop
dec
cmp
iret
sub
cmp
cli
fwait
add
xchg
out
jp
test
or
jp
out
ret
xchg
push
sbb
or
hlt
jp
stos
data16
shrl
clc
lock
push
jbe
inc
jg
sub
inc
lret
inc
mov
mov
push
pop
les
outsb
push
mov
data16
xlat
stos
sahf
inc
mov
arpl
inc
mov
mulw
roll
and
or
int
daa
imul
loop
cs
sbb
stos
ja
xchg
mov
rcrl
sub
mov
mov
mov
cmp
pop
mov
aaa
orl
inc
sti
es
shr
nop
jecxz
div
and
lods
xchg
mov
test
dec
pop
xor
subl
mov
ret
mov
sbb
mov
inc
stc
insl
cmp
sarb
addr16
popa
mov
pusha
int3
pop
mov
sti
cmpsb
push
rcl
sub
popa
scas
into
mov
ret
inc
xor
ja
jmp
and
and
jnp
pushf
jmp
out
cmc
pop
jecxz
jnp
test
scas
imul
xor
cltd
ss
daa
fidivs
fisttpll
cld
xchg
jne
and
ljmp
xor
ret
jbe
loop
dec
and
popf
inc
and
pop
je
jb
pop
mov
cli
insb
jle
imul
xchg
gs
xor
add
adc
fistps
dec
andb
and
outsb
pop
fwait
inc
in
repnz
push
and
jl
addl
int
in
xchg
aam
cmpsb
ss
mov
and
or
jge
sub
bound
mov
xlat
xchg
xchg
testb
push
or
stos
mov
test
rorb
pop
test
jmp
js
dec
mov
xchg
sub
orb
fucomip
jns
dec
lahf
call
outsb
cmp
loop
jns
clc
mov
shrl
push
jnp
mov
movsl
loope
call
push
push
rcrb
and
sbb
adc
or
xor
add
cmp
in
or
adc
pop
mov
clc
fimuls
or
into
imul
jl
fnstsw
push
cld
frstor
int3
ds
inc
mov
pop
dec
jns
sub
mov
repz
or
test
movsl
mov
push
add
sbb
xchg
repnz
mov
jecxz
pop
iret
and
imul
mov
pusha
sarl
dec
cli
mul
pop
cli
jmp
pop
scas
fstpl
cwtl
clc
rcll
jno
push
into
push
xor
loopne
in
or
std
mov
and
mov
aam
ss
push
popa
les
pop
jnp
jb
je
and
shrb
fisubl
subb
out
or
xor
sub
ret
ret
mov
gs
sbb
pop
xorl
jmp
and
movq
lahf
stos
jno
iret
cs
push
add
adc
mov
mov
mov
lods
btr
imulb
ss
les
inc
sub
gs
icebp
stc
popf
inc
pop
push
mov
sti
int3
inc
adc
and
inc
add
fcompl
xlat
jl
mov
ret
out
shll
imul
inc
pop
sbb
aam
add
pop
sar
mov
movsb
adc
push
mov
sahf
jno
movl
cmp
jns
and
push
cmp
xchg
out
popf
rcll
push
out
rcr
or
sub
lods
jle
mov
enter
mov
jge
or
inc
and
jb
cmp
cmpl
imul
imul
push
aam
hlt
sbbb
mov
lret
lret
xor
in
inc
xchg
fidivl
mov
out
inc
jl
and
lret
cltd
test
imul
stos
push
stos
pop
cmp
push
jle
mov
push
mov
popa
adcb
xor
mov
ljmp
fdivs
cli
fnstsw
sbb
inc
pmulhw
in
test
adc
sar
loopne
das
xchg
add
push
int3
outsb
shrb
movsl
pop
out
sub
mov
and
push
xor
cmpsb
lds
dec
sahf
je
std
cmc
cmp
pop
lods
loopne
or
flds
lods
imul
out
mov
pop
in
cli
popa
ret
and
into
mov
cmp
leavew
out
aam
adc
into
das
shlb
dec
push
sbb
sub
dec
addr16
pusha
xchg
pushf
mov
out
sarl
inc
in
repnz
jecxz
cli
mov
lret
or
sahf
sub
testl
pop
lock
add
xchg
test
mov
dec
loop
notb
iret
jecxz
out
outsl
nop
cmp
xchg
or
mov
xchg
lret
data16
xchg
sbb
fnstsw
and
fdivrl
and
imul
inc
lods
fiadds
fwait
adcl
and
addr16
add
loop
es
in
sbb
mov
sbb
popw
jp
push
fsubrs
dec
mov
pop
roll
scas
jae
sub
pop
sbb
shrl
rorb
and
inc
or
mov
js
repz
sbb
sub
dec
movsl
call
int
xor
and
inc
stos
iret
inc
cmp
sbb
mov
sbb
dec
push
clc
sbb
push
cmpsb
jb
mov
adc
jp
cltd
sub
cmp
pop
dec
xlat
push
aam
adc
sub
call
push
js
jo
pop
mov
xchg
mov
mov
stc
test
mov
mov
lods
in
or
pop
push
jno
inc
in
in
mov
std
cmp
rclb
dec
movsl
jb
xchg
xor
dec
movsl
jecxz
xor
push
or
ret
test
dec
mov
cmp
add
nop
adc
cmp
out
in
pop
mov
xor
sub
jle
in
adc
jge
movsl
pop
sbb
xchg
ljmp
and
mov
adc
jne
cld
loopne
in
fstps
sahf
or
cs
cld
filds
cmpl
cmp
add
insb
jmp
jbe
fdivrl
mov
mov
cs
enter
xor
jnp
sub
add
ss
xlat
add
push
out
add
and
mov
cld
and
pushf
test
mov
pop
sbb
xchg
dec
loope
ret
mov
sti
popa
mov
nop
fldenv
xchg
fidivl
and
bound
lret
jnp
jge
cmp
scas
and
or
xchg
lock
sub
mov
and
fimuls
repnz
sub
mov
repz
push
push
inc
lret
pop
aas
clc
pushl
ret
xor
cli
add
pop
int3
sub
pusha
in
movsb
outsb
push
in
xor
dec
cmpsl
xor
dec
gs
insb
or
gs
out
or
add
adc
mov
or
je
mov
adc
mov
mov
rcll
inc
jnp
sbb
outsl
cmp
adc
sar
xchg
or
loopne
js,pt
mov
xchg
sbb
aad
incl
pop
je
pop
int3
mov
orb
pop
sarb
outsb
add
pop
int3
adc
shlb
sbb
sbb
ss
mov
inc
stc
xor
div
jno
mov
push
dec
adc
cmp
nop
clc
mov
inc
jle
pop
mov
in
xor
inc
loopne
or
sarl
out
andl
cmp
push
imul
or
cltd
xor
add
sub
or
es
in
jns
loopew
cmpsb
dec
jo
or
inc
add
js
add
xchg
mov
mov
mov
shlb
jno
insb
xchg
call
fidivrl
push
xor
push
fs
daa
fimuls
sbb
xor
call
fwait
xor
cmpsl
lods
jl
shrl
pop
test
out
add
lock
stos
cld
je
in
adc
call
ret
mov
leave
call
dec
lods
cmpsl
add
pop
and
ljmp
push
sbb
xor
shrl
ljmp
push
dec
mov
test
adc
insb
mov
dec
ja
mov
jp
jae
mov
loop
mov
popa
pop
adc
pusha
jecxz
xor
fs
xchg
outsb
cltd
xlat
and
test
jns
cmpb
pop
sub
in
jl
mov
cmp
mov
mov
jns
hlt
jecxz
adc
pop
lds
cmpsl
pop
fistpll
mov
lret
inc
inc
call
pop
dec
enter
es
inc
pop
adc
popf
in
jb
fwait
or
fldcw
les
or
fcomp
int
negl
shll
aas
pushf
mov
int3
loopne
cld
sub
xor
and
insl
ss
sbb
adc
xor
sti
fcmovne
dec
repnz
xchg
sub
cmpsb
pop
add
and
mov
popf
sub
jge
xchg
sarb
lret
pop
inc
ja
cmc
and
aam
aam
aad
mov
inc
cmp
ret
pop
ja
cmc
scas
insb
pop
ljmp
popf
jecxz
test
pop
cmp
push
jmp
dec
out
mov
mov
sub
test
add
mov
mov
and
mov
mov
inc
mov
cli
xchg
pop
cmp
sbb
sahf
push
iret
push
cmp
adc
test
inc
and
pop
ds
jmp
jns
std
sbb
add
scas
stc
adcb
sub
push
je
cmp
jb
xchg
int
incb
test
mov
xchg
ret
mov
mov
mov
out
add
es
jg
lret
imul
bound
xchg
loope
inc
fdiv
pop
inc
xchg
and
loopne
push
test
cmp
movsl
cli
inc
mov
repnz
fcmovne
xchg
mov
pop
lods
sub
ret
pop
test
mov
lods
ja
loope
call
add
jae
scas
pop
xor
imul
mov
pushf
and
outsl
ds
dec
mov
lret
push
sbbl
repnz
jge
mov
movsb
es
lret
xchg
xor
rcr
mov
test
jo
and
xor
add
outsb
shlb
stos
xchg
scas
ja
out
into
push
fucomip
dec
add
daa
mov
iret
push
gs
cmp
jne
jp
ficoml
outsl
rcrl
gs
adc
dec
or
pop
jle
loopne
dec
and
arpl
fcmovnbe
into
adc
je
outsl
xor
jae
test
std
mov
mov
in
sbbl
sbb
js
movsl
push
pushf
insl
pop
push
mov
outsl
jnp
xchg
lods
jne
repz
lahf
xchg
xor
pop
inc
pop
rcr
cmc
pop
sub
lods
jmp
aam
lea
sbb
xchg
sub
cmpb
aaa
or
out
push
xchg
imul
aas
dec
sbb
daa
and
bound
or
rolb
jle
sub
sarl
xor
mov
dec
inc
in
fwait
sti
xor
push
ret
pop
aas
test
jge
mov
test
add
and
lret
pop
sub
aad
mov
sub
inc
mov
sub
add
stc
and
jp
out
jo
pop
inc
xchg
test
push
sbb
imul
jecxz
fneni(8087
shlb
lock
or
cmp
xchg
shrb
dec
mov
cli
adc
sub
loope
adc
pop
sub
push
pop
cmp
push
fidivrl
adc
pop
dec
sbb
out
lods
sub
mov
inc
fidivrl
int3
or
aam
pop
add
sub
push
jne
inc
aas
mov
sub
push
or
mov
dec
movsl
mov
cmpsl
das
pop
inc
dec
push
aaa
xor
addr16
les
adc
js
xlat
scas
lret
add
test
divl
iret
imul
sbb
mov
inc
std
and
adc
subb
sub
rcrl
andb
lret
mov
pop
loope
mov
pop
es
inc
mov
inc
pop
iret
shl
mov
cmc
rclb
insl
adc
push
jg
movsl
xchg
ljmp
sub
adc
ss
repz
nop
and
xchg
lcall
xor
insl
sbb
or
lods
aam
clc
xchg
or
pop
adc
sti
mov
les
aas
sbbl
lcall
dec
inc
jl
leave
add
rcrl
pusha
and
sbb
cli
loope
fnstsw
xlat
shll
mov
pop
imul
xor
jp
nop
mov
or
xchg
push
mov
push
ret
mov
push
stos
add
push
outsl
push
jo
dec
sub
mov
arpl
in
mov
jns
dec
fwait
mov
js
iret
xchg
mov
pop
clc
mov
pop
lret
bnd
mov
lcall
movsb
jge
shrb
clc
fistps
pop
shl
xor
pop
test
xchg
cs
mov
add
imul
jno
dec
icebp
jecxz
push
push
mov
add
cwtl
mov
or
add
push
loope
mov
jecxz
in
cmpb
add
movsl
jno
fs
sahf
xchg
lret
pusha
les
mov
push
mov
cmc
fcoml
cmpb
mov
ds
fnstenv
rclb
pop
outsb
xchg
into
xor
ds
push
into
xor
insb
das
insl
push
test
mov
or
fbld
rcrl
int
xchg
hlt
xchg
jb
negb
mov
cmp
cmp
in
clc
stos
testl
vpcmov
add
inc
mov
and
and
pop
mov
orl
frstor
inc
sbb
ds
test
mov
movd
clc
jecxz
mov
mov
stos
cmpsl
sbb
cmp
xorl
sarb
cmp
stos
xchg
outsl
add
adc
mov
push
mov
negb
inc
pop
mov
jbe
cmpsb
jb
in
mov
clc
lock
jle
int3
mov
jae
push
inc
jne
push
insb
lahf
lods
sub
jge
pop
add
popf
inc
cld
push
cwtl
insl
xchg
jb
or
cltd
loope
mov
test
adc
int
in
ret
xchg
dec
and
cmpb
mov
shl
add
mov
arpl
push
fs
xor
adc
hlt
test
jo
int3
into
sbb
popf
fwait
out
jecxz
andb
rolb
loopne
xchg
rol
into
push
mov
mov
mov
shll
cmpsl
jno
lock
cmpsb
xchg
xchg
xchg
adc
rcrb
or
fcoml
mov
call
sbb
pop
fs
aas
cltd
hlt
xchg
rol
div
xchg
repz
jmp
sbb
push
fsub
call
fdivrp
xchg
enter
std
jg
lock
shrl
or
std
cmp
clc
push
leave
mov
ret
sahf
inc
popl
ss
adc
repnz
dec
add
sbb
or
dec
mov
mov
jo
jae
ret
aam
jge
fadds
mov
data16
sub
ror
inc
jo
lods
rcrl
sub
inc
into
rclb
stc
shl
pop
out
and
cmc
push
adc
add
test
stos
in
out
iret
adcb
out
pop
shl
sahf
test
test
push
dec
popf
into
push
pop
mov
mov
sbb
or
xor
pop
shrl
test
iret
addb
cmp
push
pop
xor
out
nop
adc
push
cs
push
and
pop
push
xlat
outsl
inc
jge
inc
xor
mov
or
or
std
cmp
loope
aad
lahf
fnsave
or
xlat
test
mov
inc
movsb
jp
ljmp
cmp
out
imul
scas
cmpsl
mov
scas
lret
push
jbe
lret
fcoms
pop
lcall
in
das
hlt
filds
shr
dec
push
fs
jnp
add
ficoms
lds
sub
insl
xor
stos
push
cmpsb
scas
jp
or
mov
ret
imul
in
sbb
leave
and
inc
mull
movsl
pushf
cld
mov
dec
xor
aaa
mov
mov
push
pop
inc
xchg
es
lea
cmovno
adc
dec
jne
shll
cmp
xlat
mov
ret
mov
loopne
cs
jbe
inc
jne
aam
fmul
inc
push
lahf
aam
cwtl
cmp
pop
mov
mov
and
aad
adc
enter
adc
mov
pop
scas
js
cmpsl
jp
lds
arpl
cmc
or
sub
ja
cs
or
callw
popf
lret
push
jb
js
imul
mov
sub
mov
inc
inc
inc
jle
sti
adc
lahf
mov
inc
or
out
leave
test
ss
std
inc
out
arpl
pop
shrb
daa
jnp
leave
negl
sub
mov
mov
out
leave
mov
lods
lahf
push
mov
mov
lea
mov
std
cwtl
xor
fbstp
les
fcomip
mov
lods
int
jnp
dec
out
ljmp
or
mov
jbe
in
shr
inc
iret
push
dec
out
scas
mov
aad
cmp
js
shl
mov
jle
push
hlt
nop
inc
dec
iret
jg
push
xor
sti
lret
mov
rcrb
xchg
lock
push
je
jp
jno
orl
pop
jg
pop
mov
mov
dec
pop
and
lahf
mov
pop
orb
mov
mov
iret
push
or
nop
push
lahf
mov
lea
and
mov
xchg
in
pusha
pop
xchg
or
in
mov
outsb
test
mov
rcl
out
rclb
mov
cmp
fxch
push
jle
and
add
sub
mov
dec
fistpl
mov
das
or
mov
mov
push
das
iret
shll
mov
add
mov
push
lahf
mov
test
test
push
jns
push
sbb
mov
jae
jp
pop
lea
or
mov
mov
call
bound
xor
out
pop
xlat
movsl
popa
mov
ss
push
mov
mov
mov
cmp
fmuls
int3
rep
dec
push
es
jns
in
xchg
pusha
lcall
jmp
daa
sub
mov
mov
and
das
subb
rcrl
negl
cmc
jae
cmp
dec
out
sub
mov
popf
pop
mov
cs
sub
pushf
test
aas
std
jns
sub
popf
adc
cwtl
lods
cs
cltd
mov
jns
sbb
xor
sub
mov
jmp
ss
mov
movsl
mov
shr
pop
divb
pop
dec
inc
mov
jo
fwait
inc
lods
mov
fcoms
mov
dec
push
adc
mov
xor
xchg
xchg
xchg
adc
cmc
mov
leave
mov
mov
mov
sahf
add
xor
xchg
int3
shll
adc
sarl
adc
out
push
xchg
sbb
fsts
cmp
iret
sbbb
pop
fcoml
dec
xor
into
ss
and
loope
enter
ss
lret
stc
les
movsl
mov
mov
mov
cltd
outsb
push
mov
cmp
pop
inc
cmp
nop
lret
fistl
cs
mov
xorb
xchg
or
inc
and
cmp
or
jnp
push
hlt
dec
add
je
sti
jl
fbstp
jecxz
jo
adc
mov
into
and
insb
mov
pop
xchg
test
push
ss
lods
or
popa
jl
xor
aad
jmp
test
adc
insb
rclb
pop
add
or
sub
pop
inc
cmpsl
mov
cmp
or
je
jns
cltd
xor
cltd
ljmp
xchg
cmpsl
jl
testb
pop
push
movsl
inc
inc
cmc
mov
sbbb
lea
xchg
in
les
outsl
mov
jmp
push
sub
int3
fxch
fnsave
cmp
mov
rclb
push
lret
jecxz,pn
sbb
sbb
and
mov
jb
adc
xor
mov
and
pusha
push
or
jg
imul
or
cli
loop
push
rorb
cmpsl
test
dec
xchg
cmp
dec
aaa
sub
aaa
lock
in
adc
add
ss
movl
mov
aaa
jp
xchg
add
xchg
sub
sub
push
cmp
shlb
inc
stos
xchg
mov
xor
test
subb
mov
sbb
mov
cmp
inc
mov
pop
sarb
inc
sub
jmp
sub
out
sbb
addb
mov
les
mov
cmp
cmpsb
add
ss
aaa
dec
sbb
test
xlat
jmp
adc
mov
pop
bound
outsl
outsb
sbb
dec
test
push
xchg
or
or
clc
pop
sbbl
fisubl
cmp
mov
cmpsb
test
scas
sarb
incl
pop
lahf
int
rorl
mov
add
adc
nop
sub
leave
add
or
inc
dec
or
sub
xchg
lock
mov
js
pop
or
jp
cld
xor
cmp
or
std
insb
pop
mov
dec
sub
ret
adc
jae
mov
push
aas
mov
sbbl
out
mov
xchg
test
repnz
call
rcr
push
ss
je
sbb
xchg
fildll
shll
mov
push
xchg
ds
mov
fsubl
pop
sbb
xchg
std
mov
pop
and
cmp
cmc
jecxz
and
fists
push
out
adc
stos
ficomps
sub
jle
aad
out
push
arpl
dec
or
inc
mov
cmp
push
aam
adc
xlat
insb
cs
adc
or
push
ret
decb
inc
xor
or
xchg
or
or
insl
pop
and
jne
adcb
imul
or
adc
mov
stos
jmp
push
pusha
jg
shll
mov
or
dec
and
mov
xchg
aaa
ljmp
add
jne
cmp
adc
pop
jp
mov
or
test
insl
xchg
aam
xchg
jl
jae
clc
sub
mov
in
and
add
loope
mov
ret
mov
lea
loopne
scas
jmp
imul
and
rcll
sti
fiadds
jne
push
jo
dec
mov
mov
lret
xchg
xchg
or
xchg
ja
sbb
psadbw
stos
mov
insl
pop
into
sbb
xor
ja
dec
pushf
push
and
inc
arpl
loopne
stos
and
ret
cmp
cwtl
nop
push
and
or
icebp
mov
pop
or
add
adc
inc
jne
push
jae
mov
je
or
mov
aam
adc
arpl
adc
lods
out
cmp
add
out
ds
scas
hlt
cmp
sub
loop
adc
and
xchg
sarl
xor
leave
outsl
or
push
div
enter
cli
stos
je
imul
sub
fsubl
push
cmp
pop
inc
xchg
mov
lret
and
cmp
imul
out
and
clc
push
scas
scas
data16
adc
jl
mov
cli
pop
test
pop
movsb
xchg
sub
cmpsl
mov
lods
icebp
fimuls
cmp
mov
push
ret
call
inc
in
insb
mov
jne
cltd
gs
or
stos
aaa
xor
adc
mov
sti
xor
stos
add
add
call
cmp
add
leave
inc
addr16
cmp
ja
test
cmpsb
xor
add
inc
xchg
sbb
icebp
push
mov
imul
int3
ljmp
dec
mov
hlt
mov
adc
jecxz
xchg
cmc
insl
in
cs
lods
ds
loop
xor
mov
jle
jp
pop
imul
gs
sbb
mov
clc
loopne
inc
jbe
call
push
icebp
cmc
mov
enter
aam
cmc
stos
and
xchg
divl
popa
sbb
data16
fildll
aam
in
addl
mov
aaa
cmp
mov
jns
stos
and
lret
cld
or
and
cmc
mov
add
pop
add
xchg
xlat
pop
js
addb
xorb
in
arpl
push
addr16
scas
push
popf
adc
sbb
cmp
shll
shll
or
in
movsb
pop
sti
sbb
jmp
mov
mov
dec
outsb
data16
xor
mov
pop
loope
adc
shl
sub
cld
out
push
jge
prefetch
hlt
dec
jge
test
push
sub
mov
cmp
pop
mov
cmp
add
xor
push
push
lahf
js
inc
push
mov
loop
cwtl
add
shll
jp
sbb
jo
adc
xchg
pop
mulb
xchg
pop
xor
pop
pop
and
bound
test
and
sbb
cmpsl
mov
insl
pop
xor
xchg
sahf
push
mov
add
outsl
xor
movsl
nop
inc
stos
shr
xchg
push
orb
ds
xchg
and
daa
aaa
pusha
lea
and
call
mov
mov
test
pop
cmpsl
xchg
mov
jge
int3
mov
fs
dec
out
daa
test
lds
push
and
lock
pushl
loope
push
bound
nop
mov
jg
rcll
jno
out
fimuls
std
mov
sub
movsl
mov
daa
clc
pop
loop
mov
into
insb
sub
pop
sbb
scas
call
sbb
add
dec
push
jns
clc
lock
sub
stc
and
cmp
cmpsb
imul
dec
mov
add
pop
fwait
sbb
push
mov
cmp
cvttps2pi
cs
clc
pop
adc
xor
ljmp
popa
add
mov
ja
push
in
push
pushf
fisttps
lods
sbb
xor
inc
xor
incb
ss
mov
inc
movl
pop
jmp
push
or
stos
xor
add
scas
mov
insb
sti
xchg
flds
push
and
arpl
xchg
dec
rcl
mov
ja
inc
fisttpll
shrb
je
adc
pop
jae,pn
push
add
mov
ja
mov
dec
mov
xor
mov
or
inc
cmp
push
icebp
jecxz
jp,pn
push
cmpsb
call
clc
add
and
popa
xorl
mov
mov
fisttpl
push
fisttpl
xchg
test
sub
mov
or
mov
gs
out
sbb
test
in
inc
cmp
push
mov
cmp
dec
nop
dec
shll
xchg
and
movsl
adc
adc
xchg
mov
lcall
push
decb
push
or
sti
xor
cmc
sub
dec
lods
pop
arpl
orl
iret
mov
test
cmp
mov
in
add
xor
mov
cmp
mov
pop
cmp
mov
lds
or
aaa
iret
shl
push
jg
jbe
dec
mov
ja
scas
mov
and
pop
dec
mov
mov
stos
repz
cmpsl
ljmp
mov
lods
jmp
jmp
pop
out
xchg
cmpsl
je
lea
push
jne
inc
pop
shlb
and
or
shll
sbb
mov
sub
mov
sbb
into
cld
lock
or
sub
push
arpl
jnp
or
popl
pop
test
xchg
addr16
int
xchg
xor
mov
and
out
mov
lods
jo
add
sbb
ds
test
cs
add
cmpb
rolb
and
cs
cmpsb
and
add
cmpsl
aaa
shrb
mov
mov
or
fcmovb
int
cmp
add
mov
outsb
mov
and
lret
call
out
imul
xor
mov
hlt
mov
icebp
dec
ljmp
pop
insl
push
sub
mov
aad
jle
dec
ja
arpl
lcall
stos
jo
jbe
mov
sub
mov
sub
lret
mov
push
pop
mov
push
hlt
mov
dec
push
mov
cmp
outsl
cltd
jle
cmp
loopne
cmp
cmpsl
xchg
add
dec
add
mov
mov
je
cs
imul
daa
jae
es
icebp
inc
push
dec
das
rep
xchg
insb
sbb
pop
std
stc
pop
jp
lahf
pop
sahf
das
mov
mov
cltd
aam
cmp
fsubr
sbb
xchg
lea
inc
std
out
cmp
out
lock
mov
je
mov
pop
scas
mov
push
leave
or
inc
add
mov
pop
addr16
in
popf
sbb
lods
pop
lods
push
xchg
ljmp
jno
lret
mov
xor
xor
mov
sbb
push
popa
frstor
or
imul
sbbb
int3
push
xchg
xlat
inc
jmp
inc
fcomip
push
pop
sti
xchg
leave
popa
push
leave
mov
js
xor
or
pop
xor
insb
mov
imul
add
popa
test
push
jne
int
pushf
hlt
and
fwait
xlat
lock
and
adc
inc
push
stc
imul
mov
leave
push
ss
jmp
cli
repnz
sbb
rorl
aam
ja
push
sbb
push
xchg
mov
in
sub
mov
mov
out
loopne
cwtl
mov
cmp
out
ja
mov
punpckhbw
mov
outsb
data16
mov
mov
adcl
lods
inc
in
cltd
and
jnp
sub
lret
hlt
add
xchg
scas
mov
mov
outsl
lret
ret
xchg
ficomps
mov
call
cmovno
pop
popa
adc
jae
push
hlt
out
ficompl
xchg
adcl
lret
xor
add
pop
xor
mov
sar
icebp
adc
dec
fs
out
xor
aam
or
ret
pop
hlt
mov
or
ja
sahf
fs
loopne
loope
or
adc
mov
fbld
pop
sub
call
sbb
ret
rolb
imul
cmp
in
lods
daa
scas
cmp
pop
jne
pop
std
xchg
xlat
push
jge
sub
jo
fmull
leave
mov
into
sbbl
xchg
jmp
out
pop
push
and
jbe
inc
iret
inc
inc
mov
mov
adcb
data16
je
lods
jmp
and
and
xchg
adcl
mov
sub
mov
cmp
inc
test
mov
pop
push
lret
lret
outsb
js
mov
xchg
inc
cmp
add
mov
mov
push
loope
mov
push
test
fdivl
into
aaa
mov
popa
mov
rcrl
inc
add
lock
ficoml
aam
xor
sub
jmp
mov
ss
test
movsb
xor
repnz
pop
or
push
inc
lret
push
loope
fisttpll
mov
outsl
cmp
outsb
scas
and
push
mov
vcvtpd2dqy
and
dec
jg
pop
ja
cmp
ret
test
sti
rolb
jg
push
push
xchg
outsb
push
aam
aad
push
jo
jp
sub
and
cld
in
push
pop
ss
inc
mov
adc
mov
test
and
cmp
fsts
mov
rcrb
jmp
in
fcoml
test
jns
push
add
sbb
cmp
pushf
mov
jp
mov
add
xor
popf
fildl
dec
pop
sarl
std
fs
adc
jne
fnstsw
pop
push
push
lds
ja
bound
mov
mov
dec
mov
ret
nop
inc
xchg
insl
fstpl
mov
js
psraw
fldl
dec
shl
ja
sbb
push
loop
cltd
inc
jmp
movsb
fwait
into
shrb
jp
cli
add
xor
cmc
pop
inc
sub
or
cmp
hlt
scas
movsl
stos
xchg
or
push
pop
push
xor
lret
test
xchg
or
mov
cmp
xor
jl
inc
iret
aas
icebp
or
rclb
jns
add
add
mov
mov
adc
dec
dec
pop
push
subb
ret
mov
ret
ret
sbb
aam
push
xchg
sarb
push
ret
sub
outsl
aam
lock
xlat
aam
pushf
cmp
out
or
pop
out
test
dec
loopne
cmc
lds
jae
std
sbb
mov
xorl
outsb
or
sar
insl
sbb
mov
test
aad
bound
mov
jmp
push
iretw
sub
dec
jg
pop
nop
mov
insb
adc
mov
push
sti
shll
sbb
pop
rcrb
popa
pop
sub
or
loopne
dec
fistps
test
dec
inc
stos
aad
pushfw
jmp
insb
jo
mov
push
push
sub
adc
mov
or
inc
stc
jg
ljmp
lods
pusha
mov
xorl
sbb
xchg
inc
or
jl
mov
cmp
fistps
cmpl
push
mov
cs
sahf
fisubs
dec
je
stc
addb
imulb
pop
jb
sub
mov
xor
pop
adc
jl
sub
shll
int
rcrl
pop
loop
add
mov
in
fstps
loope
scas
outsl
sbb
fmull
push
in
pop
xor
xor
xchg
pop
fisubrs
xor
test
ds
inc
jmp
insb
test
mov
stos
out
xchg
jl
push
movsl
mov
repz
push
jbe
and
push
nop
nop
xor
nop
add
xor
pop
imul
lock
inc
cmp
lock
mov
push
add
xor
ret
or
mov
pop
xsha1
cmpsb
dec
adc
lea
repnz
push
bound
loope
push
mov
pop
and
push
jge
call
out
dec
jge
jno
and
out
lret
inc
jp
pop
push
or
cmpsb
inc
ret
cld
adc
pop
adc
adc
mov
cmp
fdivrl
pop
or
xchg
adc
jle
inc
adc
test
adc
pop
movsb
out
xchg
sti
mov
pop
addr16
pusha
push
push
pop
jl
test
sbb
bound
push
cmp
lods
jl
shll
sub
repnz
sahf
inc
sbb
cmpsb
mov
push
popa
mov
adc
lock
gs
sub
mov
jo
add
jg
lea
lahf
cwtl
inc
push
cld
cmp
imul
cmp
cmp
mov
aad
ficomps
test
ret
mov
sahf
lods
fidivs
pop
xor
loop
add
mov
jge
negl
sub
call
mov
and
dec
rorb
stos
dec
dec
lds
repz
mov
nop
loope
out
xchg
mov
cmpsl
xchg
cmc
sbb
cmp
xchg
push
mov
das
in
sub
lahf
and
push
jns
push
xchg
mov
xor
mov
adc
mov
push
xchg
jno
jle
push
insl
mov
sub
iret
push
xchg
cmpsl
mov
hlt
insl
dec
test
mov
call
out
inc
repnz
repnz
in
cmpsb
sti
mov
incb
or
adc
ror
aaa
std
shl
fwait
jnp
cli
cmpsl
cmpb
cmc
enter
in
xlat
cmp
xor
mov
repnz
mov
mov
jno
in
cmp
lret
pop
push
push
arpl
jl
sub
add
stos
popa
xor
ficompl
sub
mov
push
pop
or
mov
add
cld
push
jbe
arpl
mov
rol
cld
mov
xor
test
jo
filds
loope
lret
dec
in
test
add
jmp
pop
mov
pop
mov
fnstenv
fstpt
hlt
repz
dec
fwait
dec
scas
sub
pusha
sbb
mov
mov
sbb
pop
push
fs
call
daa
sub
call
sahf
push
mov
xchg
cmpsb
rolb
aam
push
cmp
ret
add
xorb
in
imul
or
mov
push
fsubrl
dec
mov
aas
ja
cwtl
cs
mov
mov
cs
mov
pop
je
mov
fs
mov
xor
jp
pop
leave
mov
jmp
or
ds
adc
and
outsb
mov
xor
idivb
jo
mov
or
test
jmp
faddl
pop
or
loope
daa
inc
adc
mov
mov
enter
pop
pushf
int
cmp
sub
orb
cmp
in
and
out
scas
add
icebp
hlt
mov
lods
outsl
mov
fsubrs
stos
sbb
xlat
loop
sub
adc
cltd
popa
inc
sub
shlb
jp
out
inc
push
add
mov
jecxz
add
push
dec
xor
test
test
fwait
sub
and
inc
or
add
rorb
mov
cmpsb
dec
mov
mov
mov
xchg
test
add
and
lahf
fcomps
sub
fbstp
gs
rcrl
push
es
repz
sub
mov
pop
incl
mov
mov
cmp
xor
pop
mov
movb
mov
mov
in
jbe
pop
cmp
in
mov
das
dec
sahf
repz
addl
into
xchg
sbb
jno
xchg
dec
aad
cmp
lea
sbb
dec
add
gs
in
ror
sub
inc
sbb
mov
nop
push
adc
cmp
out
xchg
push
shll
cs
mov
popf
call
dec
add
lcall
cltd
mov
push
lods
push
cmp
shll
push
clc
scas
push
addr16
add
mov
xor
sub
ficompl
jmp
adc
and
xor
cmc
scas
lret
sub
pop
sbb
daa
arpl
cwtl
fwait
jbe
xor
shlb
mov
pushf
cli
push
loope
dec
mov
mov
rolb
out
push
mov
pop
iret
add
ret
dec
popf
inc
adc
add
sub
repnz
mov
inc
push
xchg
fs
cmp
addr16
and
mov
inc
sbb
dec
cli
je
scas
jmp
loop
lea
je
sbb
notl
cmp
hlt
xchg
jbe
push
repnz
data16
aas
jecxz
push
hlt
loope
jle
nop
dec
movsb
cmp
sarb
sti
dec
xor
dec
clc
mov
add
xchg
bound
push
xchg
in
cmp
jne
pop
jae
rclb
scas
dec
sbb
lods
adc
in
les
test
scas
dec
data16
push
leave
add
jae
pop
mov
cmpl
in
aad
mov
jl
adc
cmp
mov
aad
cli
pop
xchg
fnstcw
lret
push
lea
or
les
adcb
adc
sahf
ja
push
inc
sub
sbbl
push
pop
stos
fsts
pushf
sub
daa
ds
cmc
push
ret
mov
mov
pop
pop
movsl
push
ret
je
stc
pop
aaa
ljmp
pop
push
and
xor
mov
pop
mov
xchg
push
inc
dec
mov
icebp
cltd
out
jmp
repnz
mov
push
ss
sub
repnz
and
dec
pop
scas
pop
adc
mov
pop
aaa
and
lods
inc
movsl
xchg
out
mov
jmp
push
ficomps
jg
int
pop
addl
push
sub
pop
enter
and
cmp
xor
or
mov
mov
sub
mov
call
pop
pop
insb
pop
jns
movl
loop
cwtl
pop
test
ds
push
in
outsb
mov
aam
mov
mov
mov
push
and
iret
ret
pusha
cmp
mov
inc
sub
cwtl
rolb
aaa
jmp
mov
mov
repnz
inc
fcompl
leave
mov
sbb
mov
or
mov
ret
xchg
sti
daa
int3
imul
cmp
push
xor
lcall
cmpsb
mov
filds
sbb
inc
cmpsb
js
fwait
shll
jae
je
movsb
cmpsb
jge
pop
pusha
xor
ss
mov
sub
and
cwtl
adc
push
out
fsubrl
outsb
jp
bound
mov
lock
lods
and
jmp
xor
and
mov
push
test
test
push
pushf
lock
ss
mov
into
xor
imul
mov
mov
insl
or
je
mov
sbb
out
fstl
xchg
mov
aaa
rcrl
mov
or
fildl
mov
xor
mov
mov
sub
bound
inc
mov
cld
inc
push
jge
xor
xchg
rorb
mov
inc
push
bound
push
fs
pop
adc
cmpsb
lock
cli
and
addr16
fldcw
es
push
cld
push
cmp
jne
fstps
ficoml
mov
std
mov
shl
mov
out
test
mov
outsb
xchg
xor
jne
int3
inc
sbb
stos
xchg
arpl
pop
jbe
aam
insl
arpl
lds
and
cmpsl
xchg
mov
cmpsl
inc
add
xchg
inc
mov
imul
mov
mov
lods
std
or
dec
or
mov
sub
mov
mov
insb
into
mov
and
sbb
hlt
mov
and
xor
xchg
xor
jg
mov
fstps
jge
xchg
fimuls
adc
sub
icebp
add
or
push
aaa
fdivrp
mov
ret
gs
jb
out
imul
mov
mov
subb
outsl
push
mov
push
pop
mov
jle
sti
popa
roll
lret
out
dec
cmp
mov
in
ficompl
mov
sahf
inc
cli
fldt
sub
repnz
cmpsl
loope
mov
andb
stos
jae
pusha
movsbl
inc
pop
pusha
mov
adc
or
pop
ja
xorb
mov
repnz
ja
sbb
cmp
repz
mov
movsb
cld
mov
push
sbb
sbb
ret
push
js
mov
jmp
ficoms
ret
jle
push
lahf
and
sbb
mov
rolb
fisubs
rorb
fldl
lret
ffree
dec
adc
mov
adc
out
enter
jmp
sub
adc
popa
sub
fbld
pop
adc
pop
iret
xchg
or
xlat
dec
je
call
call
sti
mov
leave
sbbb
mov
mov
mov
push
stos
pop
idivb
dec
xlat
and
call
int
xlat
mov
lods
into
or
dec
popa
and
scas
es
int
aad
add
stc
ret
pop
scas
sahf
imul
mov
adc
adc
inc
orb
test
aaa
mov
lods
mov
sbb
cmp
cmp
sbb
sub
or
pop
jp
pop
add
xor
xchg
ret
nop
hlt
fsubl
jle
scas
jg
clc
push
xor
sti
sahf
mov
cmp
sub
je
lahf
xchg
mov
push
daa
and
sbb
stos
push
and
rcll
into
sub
clc
add
and
inc
adc
shll
dec
fsubl
pop
adc
pop
push
adc
fcom
orl
jmp
insb
pop
out
dec
ds
add
enter
mov
test
adc
xor
mov
nop
mov
ret
pop
jg
daa
mov
and
mov
in
cmpsb
gs
dec
in
call
mov
flds
ficoml
cwtl
sub
mov
cmp
xchg
adc
iret
jl
pop
dec
mov
jmp
outsb
mov
bound
mov
int3
std
in
adc
pop
sbb
decl
jp
addr16
pop
push
sub
xchg
cmpl
lahf
sbb
test
jnp
jne
adc
adc
xchg
mov
data16
daa
jg
insl
push
or
jg
mov
mov
test
pop
xchg
lods
lock
dec
subl
dec
lcall
stc
in
cltd
dec
js
inc
add
shlb
std
inc
fsub
cld
mov
jns
fimull
lock
mov
cmpsl
insb
lcall
lret
push
fmull
cmp
notl
js
ljmp
pop
dec
jl
pushf
jns
je
dec
push
in
mov
sub
mov
test
xchg
xchg
outsb
rorl
pop
mov
push
dec
jecxz
pop
jns
jg
jle
mov
rcrl
pop
repz
fs
mov
jns
mov
lahf
or
divl
ret
dec
lahf
sub
je
pop
popa
jmp
gs
lock
fistps
push
jo
sub
scas
jl
enter
and
sbb
jmp
or
cmpsb
xchg
inc
loopne
xchg
mov
xlat
outsb
ljmp
add
iret
shlb
mov
dec
push
ljmp
adc
mov
xchg
in
pop
ss
stos
sbb
cmp
xchg
enter
ja
fistl
imull
je
lea
sub
mov
xlat
and
xor
xchg
cmp
jmp
sub
pop
inc
test
js
fs
fwait
cmp
inc
lea
clc
sub
addr16
xchg
inc
cs
dec
rcrb
out
jo
sbb
ljmp
imul
pop
inc
bound
sbb
sbb
insb
xor
pop
cmp
jle
fistpl
cwtl
out
dec
ds
pop
nop
inc
outsl
inc
mov
roll
mov
adc
mov
rcll
adcb
dec
inc
int3
cmp
in
xchg
cmp
subb
fisttpl
xorl
scas
and
xchg
mov
negl
lret
mov
or
movsl
jle
repz
daa
repnz
or
lods
xchg
adc
pop
pop
push
jle
and
aad
jecxz
dec
push
loopne
andb
das
pop
out
pop
aas
popl
jmp
jp
repnz
pop
xor
mov
lahf
fcmovnb
push
ret
test
lret
clc
lcall
xchg
rorb
rol
repz
insb
or
pop
mov
cmp
mov
dec
js
xchg
imul
mov
fs
xlat
lcall
or
movsl
push
fidivrl
shrl
shlb
or
pop
xchg
dec
imul
int
pop
or
imul
sbb
in
ljmp
divl
jb
jl
add
adc
or
sahf
sti
out
ret
jl
cwtl
je
xchg
inc
sbb
sbb
dec
cmp
xchg
xchg
ret
movsb
inc
fsts
cmp
pushf
test
pop
in
pusha
add
iret
inc
inc
mov
adcl
aam
sbb
mov
add
cli
mov
pop
jne
repnz
test
out
xchg
rcl
mov
repz
pop
jb
cmp
mov
mov
add
push
test
mov
push
insl
mov
stos
lahf
aad
pop
sbb
inc
js
gs
leave
les
in
pop
jecxz
inc
int3
or
jnp
aas
push
pop
dec
leave
ss
scas
or
or
or
mov
movsb
pushf
dec
xchg
negl
jae
push
imul
dec
fs
std
xchg
imul
into
and
lock
push
in
cmp
add
mov
pop
xchg
test
dec
add
or
mov
and
add
push
shl
pop
sub
outsl
jb
pop
lret
in
mov
out
pop
test
sbb
xor
jne
and
icebp
jl
mov
loop
lds
and
test
cmpl
push
push
cltd
push
fwait
inc
push
push
shl
mov
cmp
or
push
dec
mov
out
lcall
loop
jnp,pt
xchg
lcall
xchg
rcr
xchg
inc
repnz
mov
push
adc
inc
leave
cmp
cs
add
repz
in
repnz
sub
and
sbb
js
aaa
addr16
jno
fs
sbb
jl
je,pn
adc
je
pop
cmp
jge
dec
repz
leave
xor
fdiv
loope,pn
and
lock
mov
in
fidivrs
push
cmp
mov
mov
andb
rcl
addr16
xchg
adc
mov
xchg
xchg
pop
inc
lds
out
add
mov
cmpsb
sbb
xor
xor
cli
mov
jmp
sub
std
popa
push
jp
test
push
jb
inc
lea
or
and
mov
mov
jmp
inc
inc
fsubs
rorl
decb
fdivl
shlb
and
pushf
aam
inc
popf
adc
aam
add
loopne
cltd
jb
call
jno
shrb
add
cmp
mov
lcall
xchg
cmp
mov
lret
dec
sahf
or
loope
pop
dec
mov
stos
cmp
subb
jb
cmp
cmp
xchg
outsl
mov
mov
mov
cltd
push
and
rcrl
pop
jmp
dec
mov
or
sub
rcrb
scas
shl
cld
adc
dec
daa
mov
cmp
jmp
test
jp
and
call
fwait
add
adc
sub
je
cmpsl
int3
stos
pop
mov
out
pop
imul
fmuls
fisubrs
lahf
orb
pop
add
pop
in
faddl
adc
jp
push
inc
ja
pop
xchg
cmpsl
pop
loopne
insl
icebp
sub
dec
mov
insb
inc
sub
fld
pop
add
dec
push
rcrl
add
mov
scas
loop
loop
lcall
js
mov
shll
xlat
mov
push
cwtl
inc
sub
pop
jg
jge
push
sub
mov
into
insl
ljmp
xchg
rcl
adc
clc
andb
imul
sarl
mov
inc
xchg
xor
rcl
xchg
in
lret
enter
insw
shlb
outsb
imul
add
decb
int
sub
push
dec
or
dec
dec
cmpsl
inc
sub
in
popa
cmpsl
jl
mov
fildl
outsb
dec
in
cmpsl
push
out
push
xor
push
dec
loope
pop
imul
sub
scas
enter
in
sub
sahf
xchg
add
push
xor
mov
das
lods
movsl
rol
imul
cmp
out
or
add
xchg
popa
push
pop
arpl
repnz
ljmp
cmpsl
pop
cmp
xchg
add
iret
sbb
sar
xor
dec
mov
adc
jp
mov
pop
shrl
mov
das
insb
fucomi
pusha
lods
insb
je
scas
fcompl
out
pop
jnp
sub
dec
leave
cmp
push
add
idivb
inc
stos
dec
mov
jge
sbb
or
mov
xchg
dec
adc
inc
addr16
and
stos
lret
in
cli
inc
sbb
xor
add
sbb
hlt
xchg
pop
lds
ljmp
jle
std
mov
dec
mov
and
das
mov
fmuls
inc
cmp
outsb
adc
mov
cld
adc
or
int3
and
mov
dec
or
popf
mov
dec
inc
xchg
repnz
add
pop
test
xchg
lea
cmp
popa
imul
jno
fisttpl
mov
iret
dec
aaa
int3
xchg
xchg
cld
ss
mov
or
pop
dec
stos
loope
cli
enter
sbb
movsl
repnz
xor
mov
ss
mov
add
fs
jne
mov
ret
loopne
jns
clc
ret
and
push
pop
or
data16
decb
int
dec
push
adc
mov
fs
cmp
mov
xchg
mov
imul
mov
adc
shlb
sbb
mov
rolb
mov
inc
sbb
enter
das
bound
fsubrl
push
push
or
add
cmp
lods
add
sbb
jne
mov
pop
enter
sbb
addr16
lods
in
fwait
mov
addr16
pop
jmp
in
stc
mov
iret
ret
sbb
inc
sub
leave
flds
fadds
sub
mov
mov
dec
cmp
pusha
add
cmp
cli
in
jne
xor
xor
insb
jmp
mov
out
and
pop
xchg
call
lods
jo
pop
mov
sub
std
adc
loop
test
mov
push
enter
sti
jmp
or
into
jge
mov
sbbb
cmp
jl
dec
out
test
sub
push
pop
mov
jge
ret
pop
aas
ljmp
in
mov
fnsave
inc
mov
inc
mov
push
mov
call
loopne
loop
imul
inc
shll
sbb
sbb
xorb
icebp
mov
insl
loop
dec
xor
and
adc
adc
jo
dec
cmpsl
push
call
mov
stos
xchg
aad
rclb
sub
or
push
arpl
aam
jo
loopne
sbb
aaa
mov
pop
xor
push
dec
xchg
subl
dec
subl
adc
pop
jge
push
sbb
dec
sbb
insl
ficoml
mov
cmpsl
ljmp
cs
sbb
daa
js
xchg
dec
mov
cmpsb
sub
cltd
xor
loope
sbb
pop
cld
inc
jl
sub
ror
add
jae
dec
sbbl
sahf
dec
sbb
daa
inc
lcall
leave
ljmp
xlat
in
in
popa
sub
test
cltd
jle
sbb
adc
pop
repz
clc
push
movsb
ljmp
les
in
mov
insl
push
sbb
or
xchg
out
aam
pushf
pop
and
xchg
mov
popl
mov
scas
dec
rcr
mov
stos
push
jb
dec
ss
gs
imul
fnsave
lods
mov
enter
sbb
pop
out
xchg
pop
outsb
jg
aas
int
pusha
mov
lock
idivb
fldenv
mov
mov
call
mov
or
sub
ljmp
push
pushf
sub
adc
push
or
xchg
inc
xchg
jnp
fs
jnp
cmpsb
rclb
ja
dec
dec
mov
mov
xor
add
into
fidivrs
sub
cmc
ja
rcrb
in
jp
div
or
pop
mov
cmpsb
outsl
inc
cmp
mov
pop
and
jbe
xchg
add
mov
sub
lods
pop
and
sub
test
mov
mov
frstor
and
dec
iret
mov
xor
pop
lahf
inc
add
cwtl
push
add
incb
mov
xchg
mov
inc
sub
scas
push
imul
mov
inc
jmp
cwtl
jno
xchg
notb
test
in
jecxz
mov
lds
scas
imul
fsts
push
inc
call
xor
add
shll
pop
jecxz
inc
clc
jnp
or
push
pop
scas
mov
ljmp
rcll
cli
xor
test
xchg
arpl
push
push
xchg
mov
and
into
lret
insb
and
mov
nop
jecxz
mulb
adcb
mov
or
or
cli
jns
xchg
fistl
mov
inc
ror
sub
faddp
adc
push
jge
fs
pop
mov
mov
js
repz
pop
fsubr
lods
dec
jp
mov
daa
and
jge
sahf
and
jne
mov
cmpsl
hlt
xor
inc
push
jmp
xchg
loope
shlb
mov
jae
jbe
mov
fsubl
mov
daa
and
js
sub
fs
push
insl
fs
decw
and
sbb
push
dec
insb
cmpb
jl
or
inc
inc
inc
jne
jne
adcb
fsts
ljmp
pop
rolb
inc
arpl
pop
jmp
mul
and
push
jbe
cwtl
lcall
inc
aam
test
call
dec
jns
xchg
rcrl
outsl
mov
jp
frstor
mov
int
pop
xchg
cmpsb
mov
xchg
fiaddl
xlat
cmpsb
scas
lock
push
xchg
scas
inc
cmp
pusha
out
dec
and
mov
mov
pusha
or
push
cltd
sub
dec
cmc
jecxz
pop
lock
pop
jg
test
and
in
inc
xchg
push
dec
dec
pop
lds
addr16
int3
xlat
in
movsb
push
jp
pop
enter
test
bound
add
lods
divl
pop
outsl
ja
xor
jp
adc
pop
insl
mov
sbb
sub
insb
sbb
mov
out
mov
stos
ret
pop
fstps
pop
push
or
sub
ficoms
cmp
mov
cmp
fistps
call
nop
pusha
cwtl
pop
movsb
pop
ljmp
lcall
lock
jnp
aad
movsl
dec
jl
sti
movl
sbb
pop
lea
cli
inc
fcompl
add
mov
and
fs
mov
fcoms
mov
cli
xchg
mov
test
out
or
mov
or
outsl
daa
fnsave
sub
loope
rorl
jle
iret
fsts
ja
xlat
shl
pop
pop
ffree
pusha
fcoms
push
mov
adc
sub
mov
jg
lock
or
mov
xor
test
fmull
pusha
pusha
inc
ret
inc
lods
xchg
nop
push
inc
adc
in
ret
les
in
jle
inc
out
int3
jns
movsb
mov
cmp
jp
lret
xchg
outsb
pop
jb
dec
xorl
loopne
loop
pop
cld
je
xchg
sbb
fstpl
lods
movsl
push
adc
jl
pusha
push
out
and
aaa
icebp
std
imul
or
in
imul
outsl
pop
push
loopne
mov
sub
push
aad
fisttpl
mov
aad
jnp
imul
cld
adc
mov
fidivs
mov
push
insl
out
sub
lods
push
int3
cmc
movsl
cltd
test
outsb
stos
push
push
call
mov
add
inc
mov
pushf
xchg
add
int
xchg
mov
inc
test
sub
push
xchg
fstps
dec
fadd
push
mov
mov
dec
popa
jp
cmp
push
push
aam
jg
mov
dec
call
and
je
jbe
cmp
mov
and
jmp
mov
sub
xor
sarb
sbb
dec
mov
inc
pavgw
mov
xchg
shlb
loopne
lock
cmp
mov
ja
or
push
popa
je
push
and
sub
sbb
cmp
fdivl
inc
adc
xor
jecxz
cmp
mov
jno
mov
shl
dec
cwtl
jge
int3
lock
push
push
aas
add
loop
fisubrl
sub
sub
mov
ret
ficoms
lods
aad
into
cmpsl
dec
push
out
inc
jle
sbb
jne
cltd
ret
xchg
sbb
lods
aas
mov
loope
outsb
mov
cmc
bound
xor
pusha
sub
lcall
or
fdivrs
and
or
cmp
insb
mov
adcb
xor
add
push
ficomps
mov
test
fimull
cmp
jns
or
xor
add
jg
adc
and
iret
sub
push
inc
cld
fs
nop
insl
add
xor
scas
push
push
inc
lock
aaa
push
inc
add
fildl
pop
xchg
push
insb
cmpsl
stc
mov
js
aam
cmp
test
cmp
inc
cmpsl
bound
fadds
sub
xor
pop
jg
mov
stc
outsl
jp
adc
or
ret
psubsw
and
into
into
daa
adc
xor
mov
pusha
xchg
cli
shll
or
cmp
pop
xchg
mov
sub
xchg
ret
out
roll
lahf
sti
cwtl
fldt
mull
shr
mov
xor
xchg
xchg
call
iret
sbb
xorl
push
and
aas
inc
or
push
and
ret
pop
fsubs
sahf
inc
int3
je
pop
setbe
lods
daa
mov
jg
dec
push
push
push
clc
lock
repz
cwtl
inc
sbb
out
xchg
jbe
mov
jno
xor
or
add
mov
jns
pop
cltd
push
out
push
cmp
insb
push
out
push
or
pop
jle
push
lcall
xor
es
out
data16
popa
out
je
xchg
adcl
sub
jl
inc
xor
stc
pop
fstpt
sar
push
in
bound
or
pop
inc
mov
out
mov
and
shll
stc
add
fst
inc
vcmppd
lock
adc
fsubrp
stc
xchg
pop
or
test
jg
cmpsb
test
and
inc
pop
or
mov
dec
xor
sbb
mov
xchg
add
mov
mov
mov
fisttpll
out
cmpsl
xchg
push
in
jo
les
adc
in
mov
sahf
int3
xchg
xchg
jns
scas
jne
icebp
dec
cwtl
fistl
lret
cmp
dec
sbb
test
xor
or
mov
les
lcall
aaa
mov
jg
adc
mov
addr16
xor
pop
fcompl
loop
jp
int
test
cmpsb
and
cmp
sbb
jns
xchg
add
xchg
leave
imul
test
mov
and
dec
shll
adc
mov
ljmp
adc
popa
xchg
cmp
pusha
arpl
shr
out
std
ret
or
xor
icebp
outsb
sub
fidivrs
jecxz
push
push
xor
add
or
stos
and
std
mov
test
xchg
fimull
or
lds
ja
enter
xchg
cmpl
test
leave
sar
xchg
adc
xchg
pop
xor
xchg
fisttpl
sub
neg
stos
jnp
out
adc
rorb
push
lods
sub
mov
and
shlb
aaa
pop
js
push
lcall
pop
cwtl
add
jle
popf
jo
cmp
out
adc
popf
clc
xor
hlt
or
mov
or
push
repnz
fwait
out
xchg
or
mov
ds
loope
movsl
jae
push
push
insl
lds
cmc
pushl
jno
ljmp
inc
xor
daa
or
scas
mov
inc
mov
nop
jp
mov
test
push
stos
push
fildl
or
jmp
adc
jmp
cmc
mov
mov
xor
je
mov
mov
cli
jae
shl
fstpt
adc
aad
scas
mov
test
push
rcll
inc
roll
inc
mov
ret
aad
sbb
sbb
cmp
push
mov
lahf
dec
jb
inc
clc
ret
int3
fsubp
jg
orl
mov
testb
or
jnp
dec
xchg
dec
out
das
mov
cltd
aaa
sbb
fstpt
cli
jl
cwtl
scas
mov
pop
dec
cmp
jmp
pop
inc
jno
xchg
mov
rorb
or
jns
mov
lahf
mov
mov
subl
insb
add
inc
dec
mov
jnp
cmpb
icebp
push
rcll
push
xchg
inc
stos
in
add
loop
leave
pop
mov
pop
inc
rorl
fsubrs
enter
mov
aam
xchg
xor
xor
test
aam
and
sub
xor
ja
sbbb
pop
fidivrs
sbb
mov
mov
in
fnstsw
rcl
xchg
test
push
xchg
add
nop
mov
dec
stc
inc
shrl
dec
das
lcall
add
pop
push
mov
inc
pop
cmp
mov
in
pop
dec
shrb
mov
popa
and
inc
pop
xlat
xor
dec
inc
jmp
dec
dec
jnp
ljmp
aas
push
jg
sahf
addb
fmuls
repz
bound
and
xor
fsubr
decb
xlat
push
pop
sub
dec
xchg
inc
jg
mov
fdivrl
xchg
cmpsb
aaa
int3
jle,pt
xchg
cmp
cli
in
rcll
dec
int3
jno
test
xchg
cmpsb
add
cmp
jecxz
pop
and
mov
and
arpl
or
or
jl
mov
addl
popf
movsb
cmp
addr16
movsb
jne
pop
sbbl
scas
leave
cltd
fistps
dec
mov
out
and
push
xlat
push
push
fisubrl
mov
stos
jbe
cmpb
mov
dec
lret
xor
sub
insl
iret
dec
cwtl
jge
sub
dec
es
xchg
cmp
push
shlb
dec
sbb
inc
movsb
xchg
sar
aad
js
roll
add
pop
and
sub
or
daa
xor
and
or
fidivrl
shrl
cmp
dec
mov
rcll
hlt
loop
shl
int
add
jnp
push
ret
dec
pusha
sbb
fimull
shrl
xchg
repnz
push
pop
ja
and
aam
jae
pop
mov
or
mov
fwait
pop
mov
dec
leave
pop
cli
cmp
out
mov
mov
xor
adc
xchg
sti
pop
mov
add
imull
xor
mov
adc
sub
ficoml
in
pop
xchg
sbbl
xchg
gs
lahf
sbb
xchg
mov
test
push
out
push
jle
lea
push
mov
ficoml
mov
adc
out
jne
outsb
aad
mov
cmc
fdivs
pop
popa
cmp
cli
loop
iret
and
jp
popfw
jo
jo
das
in
pop
jp
xchg
jl
sub
mov
sbb
push
mov
sub
jmp
popf
xchg
push
push
adc
xchg
ds
mov
ljmp
je
mov
in
stos
dec
xchg
add
test
xchg
in
js
xor
bound
in
add
mov
mov
jge
jae
pop
mov
add
cmpsl
or
fs
sbb
hlt
xchg
push
and
and
cmp
sbb
fistps
mov
andl
cmpsl
cmp
cwtl
out
cmp
dec
fs
jge
mov
mov
and
cmp
cmp
stos
sub
fiadds
dec
adc
stos
shrl
xchg
sarl
push
xor
fsubs
je
and
jno
dec
sti
xchg
les
xchg
mov
xchg
jmp
mov
xchg
ret
xor
sbb
pop
lods
rcll
jmp
aam
push
call
jns
mov
cmc
mov
add
mov
inc
stos
pop
fisubs
adc
inc
mov
mov
mov
or
cld
mov
scas
xor
sub
mov
mov
add
jle
pop
and
pop
test
into
es
and
xchg
pop
das
insl
sbb
fldcw
jmp
pop
lods
add
push
jl
