jbe
add
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
jge
add
xchg
adc
mov
call
add
cli
adc
mov
call
fcmovnb
jecxz
add
movzbl
add
loopne
add
sti
add
add
add
add
std
or
or
or
or
or
or
cli
fadds
test
incl
add
lock
sub
cmc
mov
xor
mov
div
mov
mov
adc
repz
loope
cli
ja
sub
loopne
or
pop
pop
pop
ret
push
pop
cmp
jl
mov
mov
and
mov
xor
inc
inc
cmp
nop
sub
push
push
lea
push
pushl
xor
mov
sar
shl
call
push
push
add
add
sbb
cmp
or
inc
cld
shlb
add
xor
push
push
push
call
cmp
hlt
jb
in
push
loopne
push
push
push
mov
call
rorb
push
cmp
test
and
cmpl
mov
lock
addb
adc
inc
mov
ficoms
push
call
pop
mov
je
xor
inc
inc
lock
cmp
xor
clc
lea
push
dec
loope
cs
inc
popl
inc
or
xor
test
and
pop
dec
mov
push
xchg
call
mov
inc
roll
jbe
subl
inc
jo
mov
pusha
lea
push
call
testl
test
add
inc
pusha
push
pusha
mov
addb
inc
inc
push
call
les
jmp
inc
adc
and
inc
orl
inc
add
mov
call
insl
or
mov
cmp
pop
push
add
jle
ds
test
xchg
pop
xor
xor
mov
pop
cmp
dec
ret
rcrl
or
push
call
adc
je
mov
inc
mov
inc
mov
mov
pop
add
mov
cmp
mov
dec
rorb
mov
xor
push
sub
call
add
dec
inc
jo
dec
xor
dec
dec
inc
nop
test
pop
je
push
cmp
jne
lea
push
push
call
pop
mov
push
xchg
lock
call
and
call
adc
push
add
stc
inc
imul
push
push
push
push
sub
inc
xor
or
add
cmp
pusha
push
pop
cmpb
movsb
push
mov
dec
add
call
lock
cli
inc
movb
inc
loopne
ret
jne
inc
and
inc
and
push
push
add
aam
jmp
push
mov
jne
sub
adc
inc
adcl
cmp
cmp
je
push
jno
inc
mov
sbb
jne
mov
call
add
stc
jp
push
jmp
push
push
jne
push
call
pop
xor
pop
leave
ret
mov
push
xor
push
mov
ret
push
je
mov
mov
mov
mov
jne
push
loopne
jne
pushl
pushl
call
pop
pop
cmpl
push
push
insl
lock
inc
sub
shlb
adc
mov
dec
xor
je
push
push
push
call
sub
pusha
mov
pop
pop
pop
ret
push
inc
inc
push
push
push
pushl
call
mov
cmp
mov
inc
push
inc
add
inc
xor
sub
inc
jne
adc
inc
adc
pushl
inc
xor
push
shlb
jmp
andl
add
mov
dec
rclb
push
push
adc
call
orb
in
sub
dec
add
push
mov
dec
xor
inc
add
pop
mov
mov
popa
shr
call
enter
jae
sub
dec
jmp
sbb
clc
pop
lock
cmp
ja
and
adc
inc
add
pop
cmp
jae
cmpl
je
mov
mov
andl
decl
shl
or
inc
addl
jmp
mov
and
mov
shr
and
sub
mov
je
dec
je
rorb
dec
je
lahf
shrl
sub
mov
jmp
lea
push
push
loopne
fchs
push
call
push
pushl
shl
shl
rcr
call
les
mov
test
je
add
push
sbb
jmp
lock
mov
addb
loope
shr
shr
sub
dec
loopne
sub
dec
icebp
stc
and
dec
inc
cmp
sbb
or
mov
inc
mov
shll
jmp
test
xor
cmp
push
mov
add
or
sbb
dec
inc
mov
jmp
repz
adc
adc
dec
sub
dec
clc
jne
push
adc
je
mov
jae
sub
dec
push
lock
sub
mov
inc
shll
pushl
mov
lock
push
call
xor
mov
pop
sar
jae
mov
sub
inc
orb
push
sub
push
clc
mov
adc
adc
push
cmp
je
inc
jno
sub
dec
inc
pusha
inc
rcl
inc
add
test
dec
push
mov
mov
dec
addl
hlt
jne
cmp
loopne
jne
push
jbe
pop
sbb
mov
inc
cld
add
call
inc
add
test
jg
jmp
push
adc
push
adc
inc
add
push
xor
sbb
add
stc
cmp
enter
add
add
test
add
jns
jno
inc
or
adc
inc
pusha
adc
pusha
adc
data16
movl
call
cmp
jae
dec
mov
sbbb
push
or
popa
or
mov
mov
mov
add
inc
jb
or
jmp
cmp
jb
cmpl
jae
and
test
and
add
jmp
push
lea
pushl
lea
push
push
clc
or
add
add
push
push
rorb
hlt
add
and
movl
dec
add
dec
add
ljmp
add
cmp
jae
cmp
xchg
addl
mov
ja
loop
push
ja
add
lock
add
dec
lock
roll
mov
movzbl
pop
inc
jae
shrl
rorl
jg
or
jmp
cli
adc
push
pop
jmp
lea
xor
sbb
and
add
loopne
mov
lea
cmp
xchg
dec
mov
inc
push
or
mov
dec
or
inc
ror
inc
adc
add
or
add
jnp
cmp
ja
in
adc
cmp
jb
mov
jmp
xor
pop
jo
push
inc
decl
jne
mov
jmp
lea
push
inc
inc
pusha
andl
movl
sub
f2xm1
fldlg2
push
mov
pop
rolb
add
inc
xor
inc
lock
inc
jno
call
outsl
mov
xchg
and
les
jge
jnp
mov
jne
rcl
shl
shr
call
nop
push
rol
inc
push
adc
sbb
adc
sbb
cld
mov
mov
sub
push
mov
push
add
adc
call
cmp
jne
rclb
add
mov
inc
xor
pop
mov
mov
pop
lock
pop
mov
adc
xor
jae
sub
dec
jmp
sbb
sub
cmpl
ss
add
inc
cli
jns
inc
gs
dec
rol
call
xor
inc
dec
and
add
jmp
inc
mov
mov
pop
push
dec
out
xchg
push
mov
jle
adc
andl
mov
dec
rolb
cmpsl
dec
push
inc
div
jno
add
mov
push
hlt
jge
std
pop
pop
jmp
inc
push
dec
inc
mov
inc
mov
ret
push
orl
sub
inc
push
inc
icebp
jne
inc
adc
hlt
sbb
dec
mov
andb
xchg
dec
and
jl
dec
lock
xor
call
dec
xor
jo
dec
pop
xorl
and
call
dec
add
lret
sub
inc
nop
dec
outsl
pusha
clc
sub
jmp
movl
add
inc
inc
incb
push
dec
pusha
dec
xor
pop
leave
ret
jno
inc
add
pop
fcomps
adc
xchg
sbb
jb
fdivrs
push
mov
push
mov
push
push
call
pop
adc
push
and
rolb
imul
xor
pop
pop
ret
push
mov
mov
push
push
pushl
push
and
test
je
mov
andl
mov
adc
adc
adc
adc
sbb
xor
mov
sarb
mov
insl
bound
push
insb
loopne
mov
mov
insl
jno
sbb
jno
xor
shrb
ret
add
jo
or
sbb
aaa
and
add
adcb
xchg
push
mov
loopne
push
jo
addb
mov
push
sub
mov
add
push
xor
jae
movzbl
lock
stc
adc
xor
mov
dec
cs
adcb
inc
hlt
je
dec
pusha
dec
neg
sbb
and
add
mov
jmp
orl
add
add
or
inc
or
dec
mov
je
cld
bound
add
dec
clc
movzbl
shl
or
ljmp
addl
jmp
mov
dec
or
sub
in
movzbl
fadds
sub
sbb
insl
or
or
jne
mov
movl
lock
jmp
xor
rcll
adc
loope
mov
inc
add
inc
inc
add
jmp
xor
test
adc
sub
insl
push
jmp
mov
dec
js
xor
dec
jo
dec
nop
add
mov
dec
jo
xchg
push
sbbb
adcl
addl
dec
dec
dec
push
add
push
jmp
jno
xor
mov
lea
dec
jo
ficoml
dec
jp
pop
and
dec
jae
dec
jb
inc
sub
adc
enter
adc
sub
add
in
jmp
inc
mov
jnp
inc
inc
hlt
je
rorb
xchg
inc
sub
rorb
data16
je
mov
data16
xor
test
jne
pushl
imul
and
inc
inc
push
inc
pusha
xor
inc
shr
imul
dec
lock
inc
adc
inc
inc
or
jmp
dec
mov
push
test
dec
orb
inc
in
dec
pop
inc
xor
jne
inc
adc
decl
jne
and
jmp
icebp
addb
lods
push
cmpb
pop
inc
dec
nop
dec
inc
jo
pop
dec
inc
xor
inc
and
or
sbb
data16
jmp
movl
inc
sbb
pop
inc
cmp
std
inc
push
call
pop
ror
sub
mov
add
push
xor
rolb
inc
inc
dec
inc
inc
jmp
inc
pop
inc
inc
dec
jo
jp
inc
adc
or
inc
clc
decl
xor
mov
dec
mov
push
cmp
je
mov
push
mov
addr16
call
dec
add
cld
mov
sub
mov
add
loope
dec
movl
adc
xorb
incb
sub
pop
pop
pop
leave
ret
repz
inc
add
fsubs
sbb
and
mov
fsub
fldcw
fcos
je
add
inc
and
pushl
call
pop
pop
ret
push
mov
sub
push
push
mov
push
mov
mov
xor
pop
and
clc
mov
mov
cld
pop
add
add
jl
lock
shlb
dec
adc
call
pop
dec
push
push
add
fcoms
add
jmp
jle
mov
and
lea
jg
mov
test
clc
dec
add
test
rcl
inc
mov
rcll
rcll
and
mov
push
or
inc
mov
lret
add
inc
xchg
jmp
and
adc
sbb
inc
loopne
jmp
roll
jae
dec
xchg
inc
lock
enter
cmp
adc
ret
xor
dec
xor
shrl
jo
popa
test
jne
loopne
xor
pop
xchg
or
inc
inc
dec
or
inc
loopne
dec
addb
and
shr
rolb
jae
pop
lock
lock
mov
shl
or
mov
push
push
inc
xor
roll
jo
push
addb
or
lret
inc
orb
sbb
adc
mov
mov
mov
inc
inc
lock
sub
push
loopne
pop
cmpb
hlt
inc
shlb
dec
pusha
pop
sbb
inc
rcrb
and
inc
push
inc
add
hlt
jne
mov
nop
sbb
push
push
arpl
sbb
adc
lock
cmpl
xor
sub
ss
ja
insb
jo
sub
jae
shr
cmp
jae
inc
mov
movl
push
inc
gs
testb
test
je
inc
mov
cmp
inc
enter
or
outsl
popa
push
shl
sub
mov
mov
add
jne
jo
ds
mov
jo
insl
jo
xor
cmp
je
mov
cmp
je
push
mov
rorb
rcrb
mov
push
neg
sbb
push
and
mov
sbb
jo
call
jae
xor
pop
ret
push
pop
ret
push
mov
test
je
mov
test
je
cmpl
je
mov
sbb
push
push
call
pop
pop
pushl
shrb
call
andl
sbb
loopne
inc
push
push
push
xor
cmp
je
add
add
test
sbb
adc
fs
and
cmp
jne
push
jmp
and
movl
jle
and
sbb
xlat
sbb
pop
push
inc
adc
dec
mov
mov
jne
push
jmp
mov
mov
dec
sarb
clc
or
or
neg
mov
cmp
jl
loopne
jg
and
jecxz
dec
adc
mov
neg
sbb
push
not
and
push
push
call
dec
sbb
inc
mov
push
cmp
jne
push
pop
xor
pop
sbbb
jmp
adc
inc
mov
shr
push
pop
push
jo
pushl
fisubrl
jmp
mov
push
mov
push
push
mov
xor
cmp
push
je
inc
sbb
testb
clc
out
stc
cmpl
push
pop
mov
je
mov
push
pop
dec
mov
xchg
cmp
sub
dec
add
leave
je
incl
pop
add
mov
movzbl
mov
inc
add
jg
incl
cmp
je
mov
arpl
fcoms
xor
inc
add
gs
stos
inc
adc
jmp
cmp
jbe
inc
and
inc
and
fcmovnb
add
mov
test
je
or
inc
xor
mov
mov
push
add
movzbl
inc
xor
data16
shl
add
pop
div
test
je
push
outsl
and
cmp
inc
sbb
aaa
push
and
ret
and
test
inc
adc
add
inc
popa
sbb
xchg
dec
in
push
mov
push
mov
adc
cmp
andl
jmp
dec
add
add
test
dec
repnz
lea
push
inc
rclb
loopne
loopne
or
je
movl
inc
nop
adc
dec
divl
inc
dec
repnz
xor
shl
mov
sar
movl
inc
mov
mov
inc
shl
add
aad
inc
aad
pop
subb
or
or
xor
lahf
inc
gs
push
cmp
test
inc
rcrb
push
xor
inc
dec
pusha
mov
jmp
or
add
inc
aam
or
add
mov
inc
xchg
xchg
or
pop
and
fs
adc
push
dec
out
mov
and
pop
inc
dec
pusha
test
pop
mov
jb
pop
ret
inc
push
pop
and
jmp
push
jmp
add
inc
add
outsb
shlb
pop
flds
das
xor
fsubs
nop
fnstcw
fnstenv
push
andl
jbe
sbb
push
pushl
call
jl
inc
sbb
cld
pop
jmp
push
push
lea
push
pushl
rorb
adc
enter
mov
or
cmp
push
or
and
jno
pop
sbb
je
mov
cmpl
jne
push
das
add
pop
pushl
inc
add
mov
pop
pop
pop
leave
jle
sub
or
push
mov
jb
push
mov
nop
rclb
mov
shrb
mov
rol
ror
mov
mov
add
incl
lock
jno
inc
sbb
adc
and
xor
push
xor
ret
mov
push
pop
lea
mov
mov
mov
cmp
jne
inc
add
cmp
jbe
cmp
mov
jae
loopne
push
lea
pop
cmp
jne
dec
sub
cmp
jne
cmp
call
jne
shl
cmp
mov
jae
lea
sub
js
add
shrl
jb
mov
shl
mov
lea
fisttps
push
inc
adc
sti
mov
cmp
leave
dec
je
xor
add
add
dec
mov
push
sub
xor
mov
sub
test
mov
inc
mov
xor
inc
cmp
jb
mov
orl
inc
or
inc
sub
push
hlt
adc
adc
neg
cmp
mov
ljmp
decb
mov
lea
push
orl
enter
sbb
je
and
ret
cmp
jle
incl
add
add
mov
xor
sub
cmp
adc
push
loopne
or
cld
mov
push
sub
pop
shl
inc
cmp
jbe
mov
or
sub
add
cmp
jae
inc
ljmp
loopne
adc
sub
jmp
push
jmp
push
pop
mov
shl
dec
loopne
xor
cmp
xchg
mov
and
add
call
lea
mov
loopne
ja
xor
jne
mov
mov
dec
fmuls
sub
mov
shr
mov
nop
fsubrs
stc
sar
sub
mov
mov
jmp
adc
dec
in
stc
int3
dec
icebp
and
xor
mov
or
ret
inc
rclb
mov
lock
jb
movb
jmp
mov
cmp
jae
cmp
sbb
and
add
inc
shr
sbb
xor
add
dec
adc
mov
addl
push
mov
pop
shl
mov
shr
cmp
jae
inc
rorb
add
mov
mov
shl
mov
add
aaa
jb
xor
cmp
push
push
nop
clc
hlt
test
je
xor
shr
jmp
call
pusha
je
add
jne
cmp
je
decl
sub
sub
jmp
mov
sbb
test
jne
inc
cld
addl
pusha
loopne
aam
lock
rorb
test
and
cmpl
adc
adc
pop
jmp
idivb
push
andl
push
mov
push
push
repnz
sub
cld
pop
jmp
push
push
lea
push
imul
and
add
jne
rcrb
test
add
loope
push
sbb
call
inc
mov
cmpl
je
sub
inc
mov
lea
call
js
inc
addb
push
mov
sti
inc
xchg
jl
sbb
jne
cmp
ja
xor
jmp
cmp
jne
movl
jmp
sbb
inc
shlb
je
sbb
xchg
insb
inc
rorl
inc
mov
sbb
std
pop
mov
dec
mov
mov
pop
pop
pop
pop
leave
ret
mov
mov
bound
fmuls
movl
adc
adcl
rol
adc
loopne
push
mov
mov
mov
mov
cmp
mov
mov
jbe
push
sub
adc
fnstcw
fdivs
mov
test
je
cmpl
jne
andl
add
sub
mov
mov
insl
add
push
push
pushl
call
push
push
add
and
add
add
pop
or
inc
sub
cld
xor
inc
or
pop
mov
cmp
inc
xor
mov
inc
bound
bound
inc
rorl
jmp
adc
pop
leave
dec
mov
in
cmp
dec
lock
loopne
jo
andl
adc
adc
adc
adc
mov
push
call
cmp
jl
adcb
negb
pop
pusha
cmp
push
and
cmp
pop
je
daa
and
hlt
and
push
jmp
mov
mov
inc
mov
aaa
pop
pop
pop
nop
pushl
loope
add
pop
pop
inc
icebp
or
push
add
enter
mov
push
movsb
and
jo
mov
mov
push
test
mov
inc
test
je
inc
jecxz
icebp
mov
mov
add
xor
xor
add
test
je
mov
inc
pusha
and
incl
je
icebp
clc
je
jmp
lea
jmp
loopne
jmp
loopne
jmp
loopne
inc
add
inc
test
je
mov
inc
inc
and
jmp
mov
add
inc
jb
add
mov
inc
mov
inc
lock
divb
ret
adc
inc
mov
and
inc
add
add
inc
adc
call
orl
in
dec
jecxz
dec
in
rclb
xor
xor
and
xor
dec
aaa
inc
push
push
sub
ret
adc
inc
xchg
std
inc
xchg
push
and
push
pop
push
cmp
push
pop
data16
arpl
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jmp
cmp
jb
rep
jmp
mov
add
or
loopne
add
cs
xor
lock
fdivrs
lock
sbb
inc
fldenv
rorl
inc
add
inc
pusha
adc
add
add
ret
lea
mov
push
add
rolb
cmpsb
inc
push
nop
inc
xor
adc
xchg
mov
mov
fstps
test
jl
icebp
inc
mov
mov
stc
call
stc
in
stc
lock
lock
hlt
stc
hlt
stc
clc
stc
clc
stc
cld
stc
cld
lea
add
push
xchg
decl
loopne
in
flds
and
pop
pop
leave
ret
nop
dec
roll
dec
xchg
inc
adc
xor
push
mov
xor
lea
push
hlt
and
testl
inc
jno
fsts
adc
stc
pop
repz
push
inc
rcll
mov
dec
inc
orb
mov
push
pop
aaa
out
shr
push
rorb
inc
inc
pop
mov
add
sbbb
incl
adc
sbb
and
sub
xor
cmp
inc
fsts
push
inc
mov
jo
stc
sbb
sbb
adc
adc
adc
adc
or
or
or
or
add
add
jnp
repz
js
mov
pushf
inc
adc
inc
add
pop
js
repnz
cmp
pop
jp
push
mov
push
imul
adc
loopne
fidivs
test
jne
push
pop
add
and
xor
sub
cmp
ss
call
clc
pop
test
jne
push
push
pushl
adc
clc
sub
cmpl
sbb
arpl
clc
test
pop
je
jmp
push
push
push
call
les
pop
pop
pop
ret
xor
jmp
inc
mov
test
loopne
call
test
push
je
push
call
pop
ret
push
inc
in
inc
loopne
jle
push
push
aam
loopne
mov
mov
push
push
push
mov
call
rorb
dec
mov
incl
mov
or
lret
inc
mov
stc
xor
push
call
loopne
or
call
mov
call
adc
push
dec
pusha
call
inc
inc
adc
rorb
or
jne
lea
push
call
xchg
or
inc
pushf
testb
je
movzwl
jmp
push
pop
cmp
push
push
call
call
mov
adc
in
mov
mov
mov
push
push
call
ret
mov
cwtl
fmuls
dec
cmpb
add
lock
add
ja
push
rcrb
inc
lock
inc
and
push
adc
push
dec
inc
push
ret
push
rolb
or
jne
inc
push
jl
add
ja
inc
loop
and
cmp
je
inc
xor
rol
mov
xor
call
sbb
ficoml
daa
popa
adc
int3
int3
enter
push
and
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
repnz
lret
call
rep
inc
mov
inc
xor
pop
ret
jmp
dec
pusha
test
je
dec
xor
shlb
add
add
adc
push
dec
icebp
push
xchg
rcrb
dec
jo
shlb
pop
dec
adc
dec
push
push
arpl
push
sti
inc
jo
sbb
ret
andl
repnz
mov
cmp
inc
nop
add
mov
andb
shll
add
push
or
cli
add
jb
add
jmp
inc
shrb
in
cmp
mov
js
inc
adc
pop
cld
add
push
shr
mov
mov
imul
mov
lea
pop
hlt
mov
mov
test
adc
jne
sar
push
dec
pop
push
or
iret
jbe
mov
mov
add
fmuls
jne
mov
cmp
jae
mov
out
lea
not
and
decb
jne
inc
push
and
jmp
add
inc
in
rolb
mov
inc
push
inc
inc
jns
inc
adc
mov
mov
fcoms
add
sbb
dec
rorb
cmp
jbe
push
pop
mov
and
jo
jne
push
cld
and
mov
dec
pop
cmp
dec
pusha
jbe
push
or
lret
ss
inc
add
cmp
jbe
mov
cmp
je
mov
mov
cmp
fdivrs
mov
and
adc
inc
in
aad
and
and
mov
mov
mov
dec
or
and
cmpl
jne
cmp
je
lock
inc
xchg
inc
mov
pusha
mov
sbb
or
cmp
add
jmp
mov
inc
mov
jae
cmpb
jne
mov
shr
inc
pusha
or
inc
lea
or
jmp
inc
inc
adc
inc
push
pop
add
pop
aad
dec
jb
cmp
mov
mov
decl
jne
addr16
test
je
cmp
mov
loope
add
mov
add
push
push
call
inc
repz
and
or
inc
loop
xchg
inc
adc
inc
inc
pop
decb
inc
mov
inc
push
xor
adc
insb
push
jno
jo
call
inc
and
adc
cmp
outsl
inc
mov
shl
mov
inc
subb
lea
push
lea
push
push
call
inc
or
inc
icebp
cmp
sub
mov
je
jmp
inc
inc
mov
dec
rcrl
leave
jb
inc
push
push
lea
inc
shlb
pop
and
jno
data16
push
or
shr
orl
mov
jmp
bound
enter
shr
sbb
inc
xchg
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
xor
stc
jne
mov
cmp
inc
popa
adc
pusha
jmp
xor
inc
inc
jae
cmpl
jne
daa
inc
nop
jmp
inc
jno
inc
jne
inc
mov
repnz
inc
lock
call
fadds
push
call
dec
adc
cmpl
jne
xor
jmp
dec
push
sub
push
cld
je
mov
nop
inc
dec
test
mov
jo
push
and
andl
lea
or
mov
jne
mov
cld
cmp
and
or
je
mov
lret
imul
mov
inc
add
dec
hlt
mov
into
jne
inc
fs
inc
inc
pop
test
jl
shl
inc
jmp
mov
push
stc
add
or
dec
lock
mov
incb
cmp
jle
sbbb
je
inc
popa
jb
jge
jno
cld
lea
not
mov
and
mov
decb
jne
mov
or
xor
inc
mov
mov
not
and
decb
inc
pusha
jne
inc
les
bound
adc
cmpl
mov
add
or
or
test
icebp
add
or
mov
mov
cs
cmp
and
jge
inc
cmpb
mov
jne
js
mov
shr
or
inc
cmpsb
dec
lock
jmp
inc
mov
or
dec
adc
out
or
sub
test
je
mov
mov
dec
and
jne
add
lea
inc
and
cld
pop
lock
test
lea
jne,pt
cmp
inc
mov
jp
jne
andl
mov
lea
jo
jo
or
xor
cmp
jne
lea
ja
push
pushl
jne
jns
cmp
je
addl
roll
mov
add
je
inc
add
xor
xor
push
push
loopne
adc
adc
jne
pushl
inc
inc
jg
xor
jmp
orl
mov
mov
incl
andl
pop
pop
jnp
push
mov
push
push
push
mov
mov
xor
test
fs
fs
push
imul
test
push
inc
or
add
rorb
push
loopne
push
shl
add
push
and
mov
shlb
jmp
add
cmp
ja
lea
orl
orl
mov
icebp
movl
sbb
decl
call
inc
popa
lea
cmp
jbe
mov
lea
add
add
pusha
mov
lea
adc
adc
fs
inc
add
mov
mov
inc
test
mov
mov
jne
or
mov
ljmp
ret
pop
mov
push
mov
call
push
or
call
add
loope
inc
loope
push
add
ret
push
enter
or
adc
add
inc
add
add
dec
pusha
cmp
adc
or
adc
lock
cmpl
push
mov
mov
sbb
mov
mov
jno
cmp
jb
mov
dec
jae
out
add
xor
pop
push
dec
inc
sub
pop
pop
push
inc
add
inc
add
inc
mov
adc
ret
push
mov
or
jmp
pop
ret
jne
call
pop
je
or
cmp
jne
andl
mov
add
xor
jl
or
dec
jg
or
inc
mov
dec
add
stc
or
test
inc
shlb
and
push
cmp
jge
lea
sub
loopne
lock
es
or
jne
mov
mov
mov
add
jne
movl
nop
inc
sub
xchg
inc
sub
lock
test
aaa
cmp
inc
and
inc
and
cmp
inc
and
push
call
pop
mov
pop
pop
jmp
dec
mov
mov
jmp
pushl
call
pop
ret
mov
mov
adc
mov
dec
mov
mov
rorb
jae
cmp
jne
lea
pop
fmuls
inc
and
rol
cmp
jne
call
mov
cmp
jne
mov
inc
clc
je
test
je
movzbl
push
call
je
inc
jmp
cmpb
jne
clc
or
jbe
inc
sbb
ja
mov
inc
addb
mov
pop
ret
push
xor
cmp
inc
mov
inc
mov
xor
decl
adc
call
pop
lea
jmp
lea
imul
mov
pop
cmp
mov
push
call
cmp
je
push
push
call
call
cmp
ss
add
ret
pop
mov
inc
loop
repnz
loopne
pushl
call
loopne
add
cmp
jne
pop
decl
call
sbb
pop
pop
movl
inc
push
push
dec
inc
mov
add
xor
call
push
xchg
mov
cmp
je
mov
lea
push
fdivr
push
push
push
push
call
mov
lea
push
call
lock
cmp
dec
adc
call
cmc
mov
lea
push
push
push
call
add
dec
mov
pop
mov
dec
orl
add
jge
dec
push
bound
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
inc
mov
inc
mov
into
inc
ret
add
add
jmp
inc
adc
movzbl
testb
push
inc
inc
push
and
push
or
or
adc
dec
jmp
inc
mov
sbb
cmpb
je
adc
add
jmp
inc
jb
add
mov
incl
movl
cmpb
jne
inc
inc
jmp
dec
and
ret
add
xor
cmp
je
cmpb
lea
add
ret
mov
push
shlb
cmp
sete
mov
shr
mov
dec
test
je
inc
dec
add
add
repz
dec
jo
cmpl
jne
dec
mov
cmp
or
je
inc
sbbb
sub
push
repz
mov
push
or
sub
inc
jmp
push
add
loope
cmp
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
xor
xor
xor
jne
aad
lock
je
movl
jl
push
mov
cmp
je
add
jmp
add
test
inc
repz
push
mov
je
inc
inc
adc
jne
hlt
repnz
mov
clc
push
push
inc
rclb
fmuls
xlat
mov
cmp
je
push
call
sub
je
cmp
pushl
inc
push
call
test
jne
sbb
call
pop
adc
je
loope
jmp
cmp
jne
cmp
dec
push
dec
push
je
cmp
mov
je
inc
cmp
jne
loop
sub
inc
mov
push
call
jne
xor
jmp
push
push
push
call
les
call
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
inc
mov
sbb
or
pop
mov
andb
shlb
mov
cmp
jae
andb
orl
movb
mov
or
lea
push
call
cmpl
push
lds
sub
test
push
mov
push
inc
mov
add
xor
mov
repz
test
pop
je
addl
pop
lea
sbb
inc
inc
add
rorb
roll
insl
push
inc
xchg
jl
jmp
mov
xor
jle
mov
cmp
je
mov
test
je
loopne
jne
dec
push
mov
test
je
mov
mov
sar
and
mov
enter
or
mov
inc
inc
add
cmp
jl
xor
dec
ret
cmp
decl
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
inc
orb
je
push
addb
and
ds
add
orb
jmp
adc
jno
adc
jmp
jmp
add
dec
cmp
test
pop
xchg
add
ret
int3
int3
int3
push
mov
push
push
push
push
push
enter
inc
add
call
pop
outsl
lock
pop
ret
mov
testl
outsb
and
inc
or
add
loopne
adc
push
pushl
repnz
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
jl
add
jne
push
inc
mov
call
push
adc
ret
popl
dec
rol
shlb
icebp
cmpl
mov
mov
cmp
jne
dec
mov
push
push
mov
or
mov
mov
inc
add
imul
ret
int3
int3
push
inc
xor
pop
inc
xor
dec
jo
in
or
cld
mov
mov
testl
push
loope
clc
and
call
inc
cld
mov
mov
dec
adc
or
cmpl
je
push
push
lea
call
pop
inc
adc
shlb
inc
push
push
call
add
push
sbb
inc
ret
pusha
push
mov
call
add
mov
inc
mov
inc
add
mov
sbb
xchg
jmp
inc
shrl
call
inc
bound
push
pop
push
or
push
fcomps
push
call
adc
clc
add
shlb
cmp
jne
push
sbb
mov
arpl
arpl
inc
xor
sub
or
leave
mov
adc
jo
cmp
icebp
push
mov
shl
cmp
sbb
mov
call
or
pop
cmp
jle
test
push
push
pusha
and
shlb
inc
je
gs
call
pop
inc
and
lea
loopne
pop
cmp
jbe
inc
xchg
push
call
inc
roll
add
push
call
adc
push
pusha
push
inc
push
inc
add
xor
push
and
mov
dec
xor
and
add
push
pop
inc
xchg
sub
jmp
lea
lea
push
pushl
call
push
jp
jp
or
pop
leave
jne
shll
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
je
jne
shr
and
cmp
jb
rep
jmp
mov
add
or
loopne
add
test
lea
cli
mov
add
and
mov
mov
mov
mov
call
add
inc
ret
lea
mov
push
add
rolb
cmpsb
inc
push
nop
inc
xor
adc
xchg
mov
jg
insb
fldenv
fsts
flds
dec
icebp
inc
mov
mov
stc
call
stc
in
stc
lock
lock
hlt
stc
hlt
stc
clc
stc
clc
stc
cld
stc
cld
lea
add
push
xchg
decl
mov
inc
adc
pop
pop
leave
ret
nop
dec
roll
dec
xchg
inc
adc
xor
push
mov
xor
lea
push
hlt
and
testl
inc
jno
fsts
rclb
repnz
cmc
stc
pop
repz
sub
nop
cmp
pop
flds
and
mov
dec
inc
orb
mov
push
pop
aaa
out
shr
push
rorb
inc
inc
pop
mov
add
sbbb
inc
mov
ftst
fldlg2
fxtract
frndint
flds
mov
jo
stc
sbb
sbb
adc
adc
adc
adc
or
or
or
or
add
add
jnp
repz
cmp
dec
fstps
pop
mov
add
pop
js
repnz
cmp
pop
jp
add
add
je
or
add
loope
or
movzbl
mov
mov
lea
jne
cmpl
je
movzwl
cmp
jmp
xor
test
jne
ret
push
pop
ret
ja
sub
push
push
push
pushl
call
lock
cmp
mov
je
cmp
adc
xchg
sarb
xor
shlb
cmp
icebp
lea
push
push
call
clc
add
test
nop
push
xor
pop
mov
jge
add
stos
mov
xchg
dec
loopne
jge
adc
mov
test
sbb
fcom
cmp
ja
jb
inc
jmp
inc
daa
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzbl
sar
cmp
ja
mov
mov
nop
inc
popa
inc
es
inc
inc
cmpb
jne
incl
add
cmpl
jb
push
rol
add
nop
add
dec
shr
dec
xorl
pop
mov
push
inc
add
add
test
lock
and
or
add
jb
push
call
inc
inc
jmp
mov
inc
shrb
cmp
call
mov
cmp
add
pop
leave
ret
mov
and
jne
movl
mov
inc
inc
cld
jne
mov
inc
xchg
sub
and
loopne
je
dec
je
xor
ret
mov
adc
add
ljmp
pop
dec
mov
inc
push
jb
dec
push
dec
ret
pop
arpl
sub
inc
in
push
push
lcall
pusha
test
arpl
mov
add
inc
cmp
jb
mov
movb
je
push
push
lea
movzbl
rol
cmp
ja
sub
lea
and
mov
jl
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
xor
push
and
push
call
xor
inc
xor
sub
in
inc
inc
call
cld
inc
aas
push
cmp
xor
lea
adc
ret
push
pop
mov
inc
inc
mov
sbb
add
mov
mov
jecxz
mov
inc
inc
push
add
cmp
jb
loopne
ja
inc
mov
add
mov
popa
jb
loopne
ja
inc
in
jmp
lds
pop
leave
ret
cmpl
push
call
movl
sbb
jne
push
add
loopne
clc
cmp
je
mov
sub
shlb
inc
add
gs
mov
mov
mov
shlb
mov
test
je
mov
push
inc
adc
je
sbb
fisubl
adc
ret
insl
jo
mov
push
test
je
push
push
mov
mov
adc
imul
adc
pop
and
jmp
mov
inc
mov
inc
dec
je
popa
pusha
sub
jne
pusha
add
and
je
inc
add
das
dec
jne
insl
jo
pop
pop
pop
ret
test
inc
mov
inc
adc
inc
mov
cli
pop
pop
inc
add
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
or
adc
mov
jmp
and
push
adc
inc
xor
rorb
loopne
pop
inc
icebp
jne
dec
add
dec
xor
push
aam
loopne
mov
mov
push
push
push
mov
xor
cmp
inc
push
push
push
pop
push
push
jb
call
nop
or
and
push
push
mov
inc
mov
test
inc
mov
add
add
jge
jle
pushl
rclb
call
mov
mov
add
sub
rcrb
inc
repz
or
fimuls
jnp
roll
xor
inc
and
inc
jecxz
inc
and
fcomps
rolb
and
adc
mov
cmp
je
cld
lea
add
and
call
loopne
les
cld
jmp
push
pop
ret
mov
mov
adc
je
push
pushl
inc
adc
inc
jbe
inc
dec
dec
rolb
push
push
mov
fdivrs
divl
inc
or
jge
je
jne
jg
dec
mov
test
gs
mov
leave
ret
movl
ss
xor
sbb
fmull
adc
xor
dec
and
fbstp
inc
inc
in
jle
pushf
dec
lock
push
jne
fsubr
push
dec
ret
push
push
push
push
js
repnz
je
mov
jmp
or
add
rclb
dec
pushl
cmp
je
inc
mov
dec
test
jne
sbb
add
ret
dec
orb
fs
in
inc
xor
cmp
jne
lea
push
push
pop
push
adc
adc
mov
jmp
inc
mov
fs
jnp
sub
inc
nop
push
pop
mov
and
inc
sbb
nop
add
cmp
xor
lahf
arpl
arpl
sbb
sbb
and
mov
arpl
pop
ret
loopne,pt
ret
je
mov
lea
mov
push
ret
outsl
add
hlt
mov
push
push
push
call
add
jmp
pop
xor
xor
repz
pushl
push
inc
repz
inc
push
inc
and
push
xor
dec
shr
add
int3
pop
pop
int3
int3
enter
cmp
dec
and
jb
sub
test
inc
jb
in
sub
mov
sbb
inc
add
ret
int3
jmp
negl
push
push
push
mov
jge
lea
or
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
inc
ljmp
sbb
movsbl
jmp
mov
inc
repnz
inc
icebp
pop
inc
cmp
je
push
push
call
add
call
cmp
je
push
nop
fdivr
pop
pop
pop
leave
popa
loope
cmpl
jne
mov
cmp
jl
jg
and
cltd
inc
jno
or
add
fistps
and
inc
add
push
push
call
jmp
mov
add
and
test
jne
mov
jmp
mov
clc
or
mov
testb
je
andb
adc
or
or
add
or
lea
push
push
push
lea
push
push
pushl
cli
pop
and
push
jne
movzbl
jmp
jmp
shl
or
pop
add
loopne
dec
add
or
or
add
jmp
mov
push
mov
dec
adc
inc
push
add
incb
mov
mov
push
dec
cmp
mov
push
enter
jno
call
sbb
jo
leave
ret
movzwl
and
adc
inc
std
sbbb
cmpb
cmpb
sti
xorb
fcomps
push
js
test
cwtl
fldcw
fldenv
push
push
flds
fstps
push
pop
fldcw
jl
mov
cwtl
fldenv
fsqrt
fsts
imul
pusha
fnstcw
xchg
fldenv
into
ftst
f2xm1
fnstcw
inc
xor
clc
dec
jo
inc
xor
adc
adc
adc
flds
flds
flds
add
or
fnstcw
add
inc
sar
incl
inc
jno
xor
inc
mov
xor
mov
jno
mov
icebp
inc
jno
fsts
fstps
fstps
fldenv
fldcw
fnstenv
fnstcw
flds
push
fldenv
jae
sbb
fnstcw
jecxz
xor
andl
decb
dec
jno
decb
inc
xor
inc
clc
dec
stc
push
jne
icebp
dec
mov
fldenv
fnstenv
flds
popa
flds
inc
add
add
inc
inc
add
push
rolb
inc
add
add
fldenv
fnstenv
flds
pusha
and
dec
cmp
pop
cmc
pop
xor
pop
cmc
ficompl
fimull
dec
cmp
inc
add
jne
je
insl
and
jb
jb
lock
dec
push
push
inc
adc
add
dec
inc
inc
call
inc
and
pop
push
xor
cmp
sub
bound
je
and
imul
push
jae
jno
inc
jno
outsl
je
gs
addr16
arpl
inc
mov
outsl
ja
inc
mov
outsl
outsb
inc
ja
xorb
jae
xorb
xor
jb
and
jb
jne
insb
and
outsb
arpl
and
insb
inc
addb
sbbb
outsl
outsb
gs
je
popa
je
and
inc
divb
cmp
outsl
jo
inc
subb
outsl
pop
fs
arpl
push
xor
js
arpl
push
xchg
push
jns
xor
inc
cmp
insb
je
je
jb
popa
push
insb
outsl
arpl
std
adcl
popa
je
inc
loopne
popa
bound
insl
push
add
outsl
addr16
insl
and
imul
orb
push
adc
insl
clc
je
loopne
mov
repnz
popa
jb
jne
xorl
mov
insb
outsl
inc
loopne
and
call
fs
repz
imul
sub
jae
mov
push
push
dec
imul
jno
xor
inc
push
loope
and
inc
cmp
cs
push
outsb
fsubs
add
outsl
ja
ds
gs
popa
jae
inc
pusha
and
push
outsl
jo
jo
xor
push
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
jp
jae
cs
inc
add
flds
loop
out
mov
pop
clc
push
nop
inc
imul
loopew
lock
inc
xor
push
call
jo
fldcw
js
test
cwtl
fldcw
fldenv
push
push
flds
fstps
inc
lock
pop
fldcw
jl
mov
cwtl
fldenv
fsqrt
fsts
imul
pusha
fnstcw
xchg
fldenv
into
ftst
f2xm1
fnstcw
inc
xor
clc
dec
jo
inc
xor
add
andb
fs
xor
add
pop
movsb
inc
push
sbb
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
add
imul
push
sbb
arpl
shlb
icebp
push
gs
jo
xor
sbb
push
insl
adc
add
push
ss
mov
jb
xor
adc
inc
inc
add
mov
outsl
fs
inc
add
push
inc
adc
push
dec
inc
dec
pop
cmc
mov
add
jo
inc
shlb
push
inc
push
inc
push
cltd
add
jo
adc
arpl
lahf
inc
mov
jb
dec
adc
inc
pop
dec
repz
lock
inc
xor
popa
jb
jne
dec
outsb
outsw
and
roll
insl
insl
inc
and
inc
inc
je
xor
jb
ja
add
jge
inc
js
push
inc
push
add
je
jns
fwait
inc
rorb
add
mov
jo
insb
inc
loop
inc
aad
addl
inc
mov
gs
jecxz
add
gs
movsl
add
dec
xchg
jne
jb
jo
inc
lods
add
push
js
jo
dec
xor
push
repnz
inc
addl
shlb
inc
add
add
add
fs
push
dec
jne
je
inc
jns
mov
out
add
adcb
push
add
insl
pop
rcll
inc
outsl
jle
jle
push
xchg
arpl
xchg
push
jns
sbb
add
insb
push
outsb
ja
lock
loope
mov
add
inc
icebp
dec
inc
dec
inc
mov
add
push
outsl
dec
add
inc
dec
popa
jo
inc
pop
mov
inc
stc
dec
xor
adc
inc
xor
push
inc
sbb
or
adcb
subb
sbbb
mov
cmp
cmp
cmp
addb
push
inc
andb
inc
jb
outsl
jb
inc
popa
imul
jb
popa
clc
fs
je
and
insl
and
adc
and
inc
push
and
and
jbe
insb
imul
dec
inc
mov
push
pop
and
gs
popa
arpl
and
outsb
gs
and
jb
jb
ss
jne
inc
mov
push
pop
add
je
gs
outsl
arpl
cmp
xor
inc
mov
outsl
je
outsw
jne
inc
and
dec
jno
and
data16
push
sti
fs
jo
gs
dec
addb
outsb
jae
data16
je
insl
gs
outsl
inc
mov
pop
dec
and
outsb
daa
cmp
je
imul
gs
jo
dec
shlb
arpl
inc
jae
jo
push
js
add
outsb
addr16
inc
xorb
je
je
outsl
and
outsb
jns
test
imul
jns
bound
jae
imulb
dec
xor
push
nop
inc
hlt
cmp
inc
xorb
rcrb
lds
fs
xor
fcomps
adc
inc
fs
shlb
cs
outsb
gs
push
imul
loopne
xor
dec
adc
arpl
pop
nop
inc
mov
jne
popa
fs
xchg
inc
xor
ja
jae
jp
add
imul
inc
adcb
mov
outsl
fs
jae
flds
add
or
push
inc
cmp
dec
rcll
inc
je
std
xor
icebp
push
aas
or
pusha
std
and
mov
stc
cmp
push
aas
loopne
hlt
push
inc
je
jno
sbb
nop
icebp
push
aas
cmp
js
cmp
shl
push
aas
adc
push
mov
hlt
dec
and
mov
dec
inc
hlt
lock
hlt
add
je
std
adc
push
stc
jecxz
hlt
sub
arpl
cli
xor
hlt
enter
inc
je
mov
test
hlt
inc
cmc
test
inc
inc
hlt
call
outsl
icebp
cli
sbb
hlt
cwtl
pop
jno
push
inc
je
std
cmp
hlt
fcomps
pop
inc
je
std
sub
hlt
mov
mov
dec
inc
hlt
clc
inc
hlt
add
push
std
adc
mov
je
jno
xor
les
or
std
and
movsb
inc
hlt
add
cmp
inc
hlt
in
hlt
push
std
sbb
xchg
dec
hlt
inc
inc
je
std
cmp
aam
hlt
adc
push
sub
mov
hlt
imul
hlt
hlt
inc
hlt
jo
inc
jno
std
push
icebp
shrb
icebp
jp
inc
jno
std
ss
hlt
int3
dec
hlt
cmovno
es
hlt
lods
inc
hlt
insl
cmc
xchg
inc
inc
hlt
in
inc
hlt
js
inc
jno
std
push
inc
hlt
pushf
dec
hlt
arpl
jle
ds
hlt
fmull
sbb
outsb
std
cs
hlt
mov
mov
dec
inc
hlt
cld
icebp
pusha
push
roll
jae
inc
hlt
je
pop
icebp
addl
inc
je
std
xor
ret
push
cmc
popa
std
and
mov
cli
cmp
inc
hlt
push
cmc
pop
std
sbb
xchg
push
hlt
cmp
jns
cmp
rclb
dec
icebp
inc
jno
std
sub
mov
hlt
push
cmc
mov
dec
inc
hlt
repnz
hlt
jns
push
std
adc
dec
addb
inc
je
std
xor
hlt
or
and
hlt
gs
test
inc
inc
hlt
ljmp
std
sbb
hlt
push
inc
je
std
cmp
hlt
pop
inc
je
std
sub
hlt
dec
cmc
std
dec
inc
hlt
cli
inc
hlt
add
inc
jne
icebp
pop
icebp
ret
push
hlt
and
jae
jo
inc
lock
dec
hlt
or
push
inc
repnz
cmpsb
inc
hlt
inc
cmc
fs
cli
jl
aas
out
hlt
push
std
insb
repnz
xchg
dec
hlt
inc
repnz
jnp
pusha
repnz
dec
hlt
dec
icebp
inc
jno
std
pop
repnz
mov
hlt
dec
cmc
mov
dec
inc
hlt
testb
cmc
push
std
push
icebp
rcrb
repz
repnz
ja
aaa
inc
hlt
into
dec
hlt
cmovno
daa
inc
hlt
scas
inc
hlt
dec
cmc
xchg
inc
inc
hlt
out
inc
hlt
imul
sub
jg
aas
inc
hlt
fimuls
push
repnz
outsl
std
das
inc
hlt
mov
std
dec
inc
hlt
icebp
pusha
dec
sarl
push
inc
hlt
adc
pop
hlt
inc
icebp
dec
repnz
jo
xor
rorl
inc
je
std
and
mov
stc
cmp
inc
hlt
loope
hlt
push
inc
je
std
sbb
xchg
push
hlt
pop
repnz
js
cmp
rcll
adc
push
mov
hlt
jne
mov
dec
inc
hlt
icebp
inc
hlt
add
je
std
adc
hlt
jecxz
hlt
fs
je
xor
hlt
leave
inc
hlt
jne
fs
and
hlt
test
test
inc
inc
hlt
jmp
pop
std
sbb
hlt
cltd
pop
hlt
jns
jl
cmp
hlt
fstps
push
inc
jno
std
sub
hlt
mov
mov
dec
inc
hlt
stc
inc
hlt
jns
push
std
adc
mov
pop
jb
xor
lds
jne
std
and
movsl
inc
hlt
add
cmp
inc
hlt
in
hlt
jno
pop
std
sbb
xchg
dec
hlt
inc
inc
je
std
cmp
aad
hlt
adc
push
sub
mov
hlt
imul
hlt
cmc
inc
hlt
add
push
icebp
shrb
icebp
xor
jbe
ss
hlt
int
hlt
jne
data16
es
hlt
lods
inc
hlt
insl
cmc
xchg
inc
inc
hlt
in
inc
hlt
adc
push
inc
hlt
popf
dec
hlt
arpl
jle
ds
hlt
fisttpll
sbb
outsb
std
cs
hlt
mov
mov
dec
inc
hlt
std
icebp
pusha
push
roll
jae
inc
hlt
je
pop
icebp
addl
inc
je
std
xor
ret
dec
hlt
push
cmc
popa
std
and
arpl
inc
icebp
inc
loope
cmp
icebp
inc
icebp
push
cmc
pop
std
sbb
xchg
push
hlt
cmp
jns
cmp
rcll
dec
icebp
inc
jno
std
sub
mov
hlt
push
cmc
mov
dec
inc
hlt
repz
hlt
jns
push
std
adc
dec
addb
inc
je
std
xor
hlt
or
and
hlt
gs
test
inc
inc
hlt
jmp
hlt
data16
inc
hlt
fwait
pop
hlt
push
inc
je
std
cmp
hlt
pop
inc
je
std
sub
hlt
dec
cmc
std
dec
inc
hlt
sti
inc
hlt
add
inc
jne
icebp
pop
icebp
pop
icebp
dec
icebp
and
jae
jo
inc
lock
dec
hlt
or
push
inc
repnz
cmpsl
inc
hlt
inc
cmc
fs
cli
jl
aas
out
hlt
push
std
insb
repnz
xchg
dec
hlt
inc
repnz
jnp
pusha
repnz
xlat
dec
hlt
dec
icebp
inc
jno
std
pop
repnz
mov
hlt
dec
cmc
mov
dec
inc
hlt
testl
push
icebp
rcrb
repz
repnz
ja
aaa
inc
hlt
iret
dec
hlt
cmovno
daa
inc
hlt
scas
inc
hlt
dec
cmc
xchg
inc
inc
hlt
out
inc
hlt
imul
sub
jg
aas
inc
hlt
fisttps
push
repnz
outsl
std
das
inc
hlt
mov
std
dec
inc
hlt
incl
dec
sarb
cli
outsb
icebp
stc
je
pop
inc
icebp
adc
stc
push
icebp
pop
inc
icebp
jb
push
stc
jnp
pop
inc
icebp
inc
inc
repz
icebp
pop
inc
icebp
add
stc
and
pop
inc
icebp
and
stc
dec
icebp
pop
inc
icebp
inc
mov
stc
adcl
repz
pusha
inc
repnz
inc
repz
icebp
inc
repnz
inc
repz
inc
cmc
inc
hlt
jnp
inc
repnz
addb
inc
cmc
xor
outsl
icebp
inc
repnz
repz
outsb
arpl
jo
gs
and
popa
insl
imul
and
je
jae
je
gs
gs
jne
jae
jb
bound
andb
inc
mov
popa
insb
das
inc
repz
jecxz
jge
and
gs
jo
jns
imul
inc
inc
and
cmp
dec
cmp
inc
mov
mov
icebp
pop
xor
popa
mov
icebp
xor
popa
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fdivrs
fdivs
test
je
pop
inc
mov
jae
je
bound
dec
jno
outsl
outsb
inc
icebp
bound
data16
shlb
jb
repz
imul
insl
gs
sub
fs
je
inc
adc
insl
inc
mull
inc
lock
mov
push
inc
inc
fs
mov
and
clc
dec
mov
loopne
or
sbb
mov
inc
mov
mov
jae
inc
mov
inc
mov
inc
mov
jne
sbb
add
jbe
xor
inc
jns
add
jae
or
inc
jno
fs
dec
jno
stc
jns
mov
adc
fs
adc
cmp
jb
and
inc
inc
fsubs
sbb
mov
stc
sbb
inc
stc
js
xor
jns
and
jp
xor
cld
stc
or
pop
icebp
cld
bound
bound
movsb
dec
andb
cmpb
icebp
cmpsb
mov
loopne
and
inc
jle
sti
test
lock
inc
test
cld
inc
std
mov
das
and
mov
lock
mov
in
call
push
jle
inc
xchg
push
pusha
add
pop
fisubl
add
push
xor
rcr
fsubp
stc
clc
xor
xchg
in
sub
enter
sub
fcmovu
inc
mov
xor
inc
fildl
sbb
jl
inc
std
incb
or
jmp
addr16
incb
incb
adcl
pop
pop
orb
fldcw
std
orl
cmp
cmp
cmp
or
push
dec
andb
repz
roll
add
mov
sbb
stc
sub
add
sub
fcoms
and
inc
mov
jle
mov
stc
xchg
fldenv
fxch
ftst
fprem1
fldcw
outsb
insb
outsb
or
xor
xor
cmp
cmp
cmp
ss
popa
data16
arpl
xor
xor
or
mov
cmpsl
mov
mov
js
or
xor
fs
xor
gs
gs
cmp
fs
or
test
ret
out
adc
add
insb
imul
inc
cmp
cmp
cmp
xor
cmp
sbb
xor
inc
fdivs
xor
pop
push
mov
mov
and
gs
gs
aaa
xor
arpl
aaa
xor
xor
xor
ss
cmp
data16
data16
xor
inc
mov
stos
int
dec
aam
outsl
arpl
inc
ss
cmp
xor
cmp
inc
xor
xor
inc
inc
inc
aaa
inc
ss
xor
cmp
cmp
inc
int
ret
test
mov
test
push
dec
or
xor
xor
inc
enter
cmp
xor
inc
inc
xor
rclb
cmp
or
mov
test
cmp
pop
and
arpl
jae
xor
fsubrs
flds
pop
add
pop
push
jb
addr16
insl
and
insb
gs
push
imul
dec
push
pop
imul
add
data16
popa
jb
pop
dec
imul
push
pop
inc
jne
outsb
je
gs
imul
xor
xor
data16
mov
xor
adc
xor
xor
add
insb
je
jo
pop
arpl
jae
xor
sub
sub
ja
imul
add
xor
arpl
je
jno,pn
arpl
add
inc
inc
fs
ja
push
fs
loop
je
jo
das
das
imul
gs
shrb
jb
xor
outsb
inc
xor
arpl
dec
loopne
jae
pop
icebp
gs
and
inc
pop
inc
dec
adc
inc
dec
dec
dec
arpl
and
inc
dec
mov
jae
xor
cs
insb
add
adc
dec
inc
inc
outsb
jne
push
and
inc
gs
mov
inc
loope
push
mov
sbb
jae
dec
sbb
sbb
gs
insb
inc
js
arpl
sbb
rorb
cmp
push
gs
imul
insb
outsl
jae
dec
popa
outsb
fs
arpl
outsw
jb
xorb
add
iret
fcmovu
data16
adc
enter
fcoms
std
add
dec
fdivs
sbb
or
in
addr16
add
xchg
flds
fadds
das
fldcw
fnstcw
inc
xchg
xlat
fsts
ror
cmp
mov
icebp
inc
mov
push
fcomps
mov
stos
adc
xor
fnstenv
dec
dec
jno
inc
xchg
inc
jmp
orb
jl
and
shll
pop
push
sbb
sbb
aaa
sbbb
cmp
adc
mov
int3
cmc
xor
pop
icebp
or
addb
adc
andb
mov
inc
inc
inc
xchg
adc
jno
add
inc
mov
andl
hlt
loope
jg
xor
pusha
inc
mov
addl
adc
and
int
ret
divl
xor
jne
fnstcw
in
inc
std
jb
and
and
test
xchg
enter
pop
aam
pop
mov
mov
and
xor
xor
cmp
xor
jno
arpl
andl
inc
mov
xor
adc
sbb
ja
bound
jo
xorb
pusha
add
adc
popf
fcomps
push
pop
fcoms
ret
fld
fld
fnstenv
insl
fldenv
fstps
pop
flds
fmuls
fsubs
fsubrs
insb
rclb
cmp
fadds
mov
and
fcomps
fcomp
dec
mov
cmc
sbb
ficoml
inc
cli
adcl
jb
or
inc
inc
je
je
je
orl
push
push
xor
xor
and
inc
icebp
stc
popa
inc
icebp
addb
mov
pop
test
push
inc
cmc
or
fwait
sub
sbb
xorb
push
aaa
dec
nop
fdivr
loopne
adc
dec
inc
and
sub
daa
fildl
inc
add
add
roll
add
add
add
call
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
fildl
dec
add
and
add
add
sar
les
pop
dec
loopne
dec
rorb
dec
in
dec
xor
pop
or
or
inc
add
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
dec
jno
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
dec
cmp
add
xchg
imul
std
or
mov
mov
fmulp
aad
enter
int
outsb
aad
outsb
fmull
leave
xorl
inc
xchg
xchg
sub
cmpsl
or
incl
push
rclb
mov
jecxz
jae,pn
dec
repz
push
cmpsb
lods
push
fs
sarl
xchg
orl
and
push
jb
fcoms
clc
scas
jecxz
mov
or
xor
setbe
lahf
aam
jns
out
cli
out
jno
stos
dec
xor
ud1
incl
iret
cmp
jp
loopne
test
aaa
xchg
lods
and
sti
inc
jbe
test
cwtl
cld
ljmp
incb
lret
out
aas
je
cmp
add
imul
pop
push
jmp
hlt
repnz
outsb
mov
or
mov
cmp
imul
pop
xchg
ret
jecxz
mov
push
cmp
loop
push
aas
sbb
sub
xchg
mov
sbb
jns
sbb
idivb
ja
lret
fildl
cmp
stc
mov
aaa
mov
fmulp
mov
daa
aad
fcmovne
sub
mov
lahf
lea
mov
aaa
insl
shl
xor
jge
mov
jge
scas
mov
fstl
xlat
movsl
cld
xor
xchg
sub
movsb
dec
aaa
and
jbe
jg
jg
cmpsl
enter
push
lcall
cld
iret
into
xor
or
gs
mov
fisttps
mov
push
test
pop
inc
xchg
pop
adc
mov
push
mov
cmp
int
lcall
push
sbb
pop
xchg
inc
push
push
lods
jmp
push
ss
cmpsl
dec
test
push
dec
cmp
push
idiv
aad
sub
jnp
dec
pop
mov
xor
stos
ds
stos
xor
shr
fldt
inc
dec
nop
aad
xor
add
adcb
stos
jo
xchg
ror
cwtl
pop
xchg
jp
xlat
mov
sub
jle
inc
cmp
out
pop
out
jl
pop
out
sub
repz
cmp
iret
push
push
mov
leave
daa
push
mov
lcall
sub
mov
xor
scas
ds
daa
mov
call
psraw
daa
jmp
mov
sub
test
jne
inc
pop
out
cmp
mov
lcall
pop
inc
jp
push
pop
pop
jbe
dec
dec
or
in
mov
adc
cmc
pop
popf
outsb
pop
js
xlat
push
les
popf
dec
jne
inc
push
insb
mov
cmp
mov
cmpsl
cmp
mov
inc
ds
test
lahf
or
in
push
fistps
ljmp
call
jge
dec
pop
push
ss
bound
mov
loopne
fidivs
push
xchg
xor
movsl
mov
jmp
inc
push
sub
sub
jge
add
scas
inc
aam
sub
push
sub
nop
xor
mov
jo
pop
mov
mov
cmp
mov
iret
push
imul
sahf
xchg
pop
in
fwait
shrb
rcrl
inc
mov
xchg
or
lahf
dec
movsl
adc
adc
xchg
add
xor
mov
std
hlt
ds
lods
push
inc
ljmp
dec
dec
int
fdivs
fsubrs
pop
sub
pop
cli
in
enter
hlt
cmc
xchg
out
and
cmp
pop
movsl
cwtl
lahf
adc
outsb
cld
pop
insl
adc
add
cmpsl
xchg
cwtl
out
and
pop
mov
mov
xchg
jnp
jno
addr16
pushf
cli
mov
mov
push
and
cmpsl
stc
jg
mov
aaa
add
popa
pop
sbb
data16
xchg
xchg
sti
xchg
pop
xor
je
inc
xchg
loopne
lcall
mulb
std
xchg
jl
jns
xchg
and
mov
subb
or
data16
xchg
add
in
lock
lret
add
mov
js
mul
std
xchg
hlt
cmp
fists
mov
outsb
in
sub
cmp
outsb
add
push
sbbl
int
popf
dec
into
imul
out
notb
aas
jg
fisttps
call
aas
lds
adc
inc
ret
repz
repnz
out
nop
add
jbe
bound
sbbb
sar
loopne
lds
xchg
das
lock
popa
mov
out
cld
push
loop
sub
lret
mov
dec
loopne
mov
or
dec
andb
add
fistl
pop
sbb
cld
pop
mov
mov
or
fsubrl
movsl
scas
pop
into
es
pop
movl
stos
sub
add
sarb
xchg
xor
ds
xor
scas
push
fwait
pop
mov
xchg
fistpl
loope
cltd
sarl
adc
sub
cld
pop
stos
push
fwait
dec
adc
xchg
ds
add
ds
rorl
test
jmp
dec
dec
js
sub
test
sbb
cmc
imul
out
pop
push
incl
roll
jmp
in
shrb
loop
xor
push
fsubrs
push
sub
ret
andb
dec
and
imul
cmpsl
rol
pop
push
std
lock
jge
ret
push
jns
mov
xor
fadds
imul
les
ficoms
jle
push
xchg
cmp
jecxz
add
insb
paddw
mov
jb
rol
loopne
into
pop
in
imull
aaa
icebp
push
push
cmp
lods
sub
negl
jg
xor
pop
fcmovnu
fcmovnb
and
adc
shlb
jns
jbe
push
push
sbb
dec
add
pop
frstor
mov
xor
imul
insb
xor
jecxz
fldl
jbe
inc
jo
stos
mov
fists
cld
outsl
jecxz
dec
add
ds
mov
mov
mov
icebp
rorb
push
jg
ds
pop
cmp
fisubs
aam
mov
or
or
and
popf
mov
add
push
scas
mov
xchg
xlat
mov
ret
aam
bound
dec
leave
and
lock
pop
push
xor
movsl
fwait
push
pusha
jno
mov
jno
rolb
jnp
xlat
sahf
pop
jmp
imul
sbb
pop
int3
xchg
int3
out
stos
mov
fcos
add
xchg
pop
pop
mov
paddb
push
clc
inc
adc
pop
je
daa
xchg
and
sbb
iret
gs
outsl
dec
or
std
mov
lds
mov
test
xor
cmpsb
and
and
in
les
ja
pop
scas
aam
sbb
movsb
out
outsl
daa
jge
ljmp
cmp
gs
imul
rcr
in
sar
pop
pop
lock
xor
sub
or
xor
xchg
dec
sbb
scas
and
lds
cld
push
movsl
xor
pop
and
and
jo
xchg
xchg
rcrl
add
jecxz
pop
incl
push
out
fs
cmp
xor
jae
fsubr
stc
add
add
add
lds
lock
pop
pop
sbb
iret
sbb
and
rcl
ss
jg
pop
pushf
xchg
adc
dec
lock
out
sub
js
sub
sub
push
mov
bound
inc
xchg
ja
mov
push
lock
xorl
jl
loope
pop
aam
int
lret
and
bound
or
and
add
lea
pop
sbb
lods
mov
lods
mov
in
test
or
pop
mov
outsl
cmpb
icebp
fldl
into
add
and
inc
nop
adc
add
lea
lock
xlat
inc
loope
popf
dec
and
inc
out
gs
mov
popf
sub
push
jns
fists
mov
cmp
mov
andl
push
lahf
dec
aad
popf
push
push
lahf
dec
je
mov
gs
cmp
or
in
pop
push
pop
inc
ret
fnstenv
push
cmp
mov
lock
xor
sbb
roll
xor
arpl
fidivrs
mov
sarl
popa
jg
jbe
xchg
dec
add
int
push
test
dec
pop
nop
movsl
mov
sti
sub
add
movsb
arpl
mov
or
mov
andl
xor
push
scas
push
inc
pushf
pop
dec
mov
dec
je
clc
ja
lods
xchg
imul
hlt
cmp
notb
aam
push
pop
jle
mov
mov
hlt
stc
mov
iret
add
imul
insl
lock
push
enter
fisubs
js
sub
mov
movsl
clc
jno
ret
lock
in
mov
adc
pop
pop
and
jmp
lahf
mov
clc
pop
jp
mov
loopne
jb
jecxz
xlat
xor
mov
push
xchg
hlt
mov
mov
loope
push
incl
lods
mov
jg
fldl
clc
push
lods
js
pop
mov
cmp
xchg
insl
and
out
add
rcr
je
iret
push
add
xchg
inc
adc
push
dec
and
add
aas
xchg
jge
lock
aas
mov
mov
inc
sarb
jge
daa
ret
cli
add
int3
lea
or
leave
les
test
push
dec
xor
dec
xor
mov
mov
ret
push
push
mov
fnclex
es
repnz
cwtl
and
cmp
push
lea
js
pop
lock
mov
mov
cmpsl
mov
outsb
bound
cwtl
lret
cmp
out
adc
push
cmp
outsb
out
and
pusha
xchg
nop
adc
sar
insl
lods
insl
jle
inc
add
fs
fcomps
xor
sub
and
test
cmp
lods
mov
pop
rclb
dec
fists
xor
push
inc
cmp
jge
scas
inc
xchg
lret
dec
pop
ljmp
adc
add
dec
cmp
mov
in
sahf
sub
lret
jne
adc
cli
adc
cmp
ljmp
roll
push
movsl
adc
dec
lret
rclb
xchg
and
popf
mov
insl
jecxz
pop
stc
stos
xchg
fsubl
inc
xor
inc
mov
scas
jl
popl
insl
inc
cmp
inc
mov
cmp
mov
jb
adcl
or
jmp
dec
outsl
addr16
and
adc
pop
mov
lds
lock
stos
insb
mov
je
pop
xchg
mov
lret
mov
xchg
adc
out
and
pop
pushf
adc
movl
lcall
dec
aaa
cli
cld
mov
outsl
insl
xor
fcoml
in
bound
rcl
xlat
int
ficoms
cmpsb
scas
lods
sti
je
jecxz
cmc
in
imul
movsl
cmp
xchg
cmc
stc
hlt
addr16
mov
das
in
ficomps
cmp
sbb
push
dec
push
inc
cmp
sarl
sbb
push
cmpsb
jmp
adc
cmp
mov
add
scas
popa
dec
sbb
xchg
sahf
inc
mov
cmp
or
jae
mov
loopne
dec
aam
pop
dec
int
push
ja
daa
gs
gs
inc
jp
push
fsubrl
icebp
call
imul
cld
and
fsubr
lea
sbbb
leave
movsb
xchg
aam
cli
jmp
ds
jl
mov
imul
xor
arpl
sahf
aad
xchg
ljmp
and
dec
lock
out
mov
mov
push
xor
mov
or
scas
fwait
pop
std
lahf
cmp
movsl
imul
sahf
pop
lods
jge
sti
sub
and
int3
pop
mov
dec
jns
pop
insb
inc
dec
jmp
fidivs
aas
adc
xor
outsl
or
pop
lds
inc
je
add
repnz
add
gs
or
xlat
out
out
mov
mov
fucomp
imul
mov
mov
sahf
and
adc
daa
jnp
jmp
add
mov
xor
xor
in
subb
push
sti
pop
js
mov
fistpl
sbbb
mov
mov
cmp
jae
adc
loop
lret
or
stos
xor
aaa
pop
outsb
pushf
pushf
and
and
incl
dec
push
stc
or
pop
outsb
shrb
cmp
xchg
push
aam
out
and
push
dec
movsb
mov
pop
xchg
inc
lock
xchg
inc
sub
jae
mov
jp
xchg
cmp
cli
scas
xchg
test
lods
cltd
sub
out
mov
jl
fwait
dec
pop
xor
or
insb
inc
cmp
jge
outsb
inc
add
ds
mov
lea
dec
and
jp
and
jbe
sbb
fidivrs
jp
sub
cmpsb
or
push
ljmp
mov
jge
xchg
inc
notl
test
inc
cmp
fldenv
negb
aam
mov
aaa
cld
lods
push
inc
fistps
add
outsl
mov
repz
adc
xchg
push
mov
inc
cmp
in
test
jg
sbb
push
xchg
fwait
popf
dec
push
aam
cmp
mov
ss
mov
mov
push
insb
inc
ss
pop
xor
dec
icebp
sbb
inc
sahf
mov
ret
push
cmp
je
sbb
popf
icebp
mov
sub
nop
jecxz
mov
iret
test
aam
pop
aad
sub
inc
cmpsl
pop
dec
movsl
cltd
cwtl
ret
xchg
enter
mov
lcall
lea
xor
push
xchg
push
jle
idivl
test
lret
clc
cli
outsb
sahf
and
gs
cmp
filds
sbb
inc
outsb
xor
jg
push
ret
clc
lock
mov
rorl
pop
and
cmp
movsb
sarl
insl
pop
xchg
mov
xor
lds
sbb
or
or
loope
fwait
or
push
scas
ds
xor
leave
incl
jge
scas
ds
in
movsl
lds
and
mov
dec
or
dec
repz
shll
add
insl
sti
psubsb
mov
lea
jmp
lods
mov
out
mov
xor
sub
sarb
adc
mov
mov
add
pushf
loop
outsb
test
les
inc
jnp
jg
aaa
mov
cmp
dec
mov
shlb
ja
pop
cmp
xor
rolb
cmp
pop
ret
lcall
jecxz
inc
jne
push
adcb
inc
orl
xchg
cmp
shlb
mov
xchg
mov
cmp
jge
mov
cli
lods
or
movsl
push
fwait
mov
dec
out
pop
jbe
scas
cmc
jp
adc
jg
push
jno
pop
mov
xor
mov
out
mov
rcll
cli
inc
mov
mov
adc
leave
sbb
jo
push
cmc
scas
ja
jae
push
fists
lret
push
xchg
cmpsl
dec
xlat
and
es
rolb
pop
repnz
pop
shr
loopne
mov
das
insl
sbb
outsl
cmp
inc
sbb
out
ficomps
out
mov
icebp
cs
outsb
pushf
push
leave
pop
pop
test
loope
loopne
or
in
fwait
out
pushfw
outsl
out
aas
xchg
mov
hlt
lahf
fldenv
les
jle
inc
test
xor
test
dec
sbb
mov
mov
mov
daa
test
cmp
outsb
je
push
in
outsb
mov
sbb
icebp
add
dec
pop
jne
notl
stos
mov
ret
inc
icebp
pushf
cmp
cmp
sti
inc
jl
mov
je
sbb
lret
dec
fwait
dec
imul
pop
pop
nop
mov
xchg
xchg
pop
jge
push
ret
pop
dec
xor
test
sbb
lea
adc
imul
inc
movsb
ljmp
pop
xlat
sub
push
ds
push
adc
orl
mov
lods
pop
mov
sub
xchg
pop
pop
mov
lahf
outsl
out
add
mov
negl
insl
push
clc
fninit
testl
ffreep
loop
mov
mov
mov
lcall
cwtl
add
sarl
sahf
in
scas
push
dec
pop
pop
mov
or
pop
shll
mov
xchg
adc
fidivl
es
fidivrl
popa
mov
rcrl
cmc
repnz
in
outsb
mov
movsl
or
adc
xchg
lret
fdivp
dec
int
js
ret
cmp
lods
pop
into
imul
mov
aas
mov
js
jo
jbe
jnp
xor
pop
icebp
sub
in
mov
pop
out
aas
jae
das
lret
sub
sti
push
jo
aam
sahf
arpl
dec
xor
int
js
mulb
dec
mov
cmpsb
inc
mov
cmp
dec
icebp
in
sub
cmpb
test
loope
pop
push
cmp
scas
pop
imul
not
pop
mov
dec
cs
and
adc
push
jb
jbe
push
sub
dec
pop
inc
dec
aad
or
notl
imul
xchg
fisubrs
or
xchg
popf
mov
jnp
popf
xor
loope
lahf
icebp
pop
jecxz
mov
lods
inc
negb
inc
loop
mov
cwtl
add
orl
mov
cmp
push
clc
fisttpll
out
lcall
into
dec
or
cmp
mov
lea
lock
shl
pop
inc
pop
sbb
leave
gs
cltd
xchg
and
inc
dec
cmp
pop
lods
lahf
mov
scas
sete
outsl
and
inc
es
loope
sahf
cmp
jb
pop
add
shrl
mov
rorb
push
fwait
cmpsl
and
insl
dec
ss
test
push
das
jg
dec
pop
insl
pop
loop
sub
loopne
xchg
sub
test
push
cmp
add
mov
pop
lock
rcr
mov
pop
ret
xor
out
and
mov
jno
xor
aas
adc
mov
push
fwait
mov
pop
or
jb
fs
push
mov
xor
push
icebp
test
mov
xchg
imul
xchg
xlat
inc
xlat
xor
jle
out
lds
pusha
push
pop
xchg
pushf
jb
sbb
mov
fs
aaa
sar
jecxz,pt
push
xchg
xchg
dec
xor
xchg
mov
clc
imul
jns
pop
or
ret
into
mov
jae
dec
mov
pop
mov
leave
aas
out
adc
nop
inc
push
loop
cmc
adc
test
or
lock
and
jg
jb
cs
jl
pop
jae
aam
and
call
lods
clc
lahf
push
mov
cmp
jns
push
rolb
es
nop
mov
scas
adc
aad
xchg
push
mov
push
fisttpl
test
push
outsb
pop
es
adc
sti
xor
mov
mov
push
mov
push
pop
es
mov
fxch
test
in
xchg
jae
mov
aas
pop
jecxz
adc
pop
dec
pop
loope
mov
dec
push
pop
or
outsb
outsb
insl
in
testl
cmp
pushf
push
push
testb
mov
loop
dec
pop
mov
and
mov
aas
mov
sub
push
outsl
cmp
inc
daa
mov
fstp
into
in
std
mov
out
mov
iret
xchg
sbb
mov
xor
idivb
cltd
ds
ja
or
push
pop
aaa
xor
add
pop
push
pop
scas
jle
mov
mov
icebp
mov
jo
fsubrp
int
xor
xchg
xor
sub
into
fwait
test
fisubrl
cltd
loope
cltd
cmp
sti
dec
das
inc
imul
fs
movsl
mov
sbbb
leave
insb
ja
ja
jge
jl
and
outsb
fs
pop
push
scas
jg
int
push
lea
stos
insl
fnstcw
xor
sbb
lods
push
cmpsb
lahf
dec
popa
or
int3
pop
gs
jge
pop
ss
fldz
or
aas
push
pop
cmpsl
mov
jge
repnz
and
mov
lods
mov
aam
sbb
cli
mov
out
sahf
cmpsb
mov
iret
loop
xchg
out
loope
int
xchg
cmc
scas
jb
xor
adc
ja
les
mov
test
push
jno
and
ss
clc
test
xor
cmp
mov
out
dec
inc
add
mov
pop
aas
add
jl
xchg
inc
fdivl
sub
jo
dec
ficomps
aaa
nop
test
mov
scas
imul
das
mov
lret
repnz
pop
data16
in
daa
xchg
ljmp
dec
les
push
sahf
push
lcall
or
lea
jl
jecxz
jne
jne
inc
fimull
hlt
jmp
insl
mov
xor
dec
or
fwait
xchg
sahf
push
mov
cmp
arpl
xlat
jbe
scas
sahf
fwait
stc
in
ja
jo
stos
push
xchg
dec
cli
mov
aas
sbb
push
xor
jae
dec
mov
or
push
aam
inc
add
add
movb
mov
and
sbb
ret
xchg
pop
jp
mov
pop
clc
out
icebp
jge
mov
push
lahf
inc
pop
aam
outsb
mov
mov
insl
in
inc
cs
and
and
cs
adc
rcrl
icebp
pop
mov
pop
adc
mov
cs
ficompl
rcrb
mov
pop
lret
bound
push
aad
fmuls
cmpsb
test
shr
shll
dec
idiv
aas
scas
lret
push
arpl
mov
incl
or
aas
loop
inc
lahf
adc
cmpsb
int
in
inc
addr16
jne
scas
cmp
mov
push
aam
sbb
fstps
jle
out
in
in
xchg
lea
fcmovu
xor
lcall
sbb
cmpsl
sub
loopne
sbb
negl
repnz
push
and
incl
addr16
sbb
pop
andl
arpl
pop
int3
inc
jg
inc
mov
pop
add
or
into
inc
pop
stos
imul
mul
cmpb
inc
sti
outsb
mov
mov
outsb
into
out
adcl
aam
aas
xchg
pop
icebp
push
lcall
cmpsb
lcall
inc
xchg
xor
xchg
cld
roll
push
pop
sub
cltd
lods
ffree
outsl
or
cld
leave
xor
inc
xchg
push
mov
fs
fmuls
aad
mov
pop
movsl
push
cmp
push
outsb
imul
mov
in
mov
sub
pushf
sbb
mov
mov
fidivrs
jg
pop
fisubrs
sti
inc
jmp
mov
mov
out
mov
aam
adc
in
mov
inc
sub
es
test
and
inc
push
mov
insl
pop
fstps
notb
fbld
dec
xchg
fldcw
insl
sbb
rclb
push
cld
push
cli
mov
jl
jecxz
xchg
lret
les
jl
sbb
js
test
and
outsl
mov
pop
in
push
movsb
out
dec
push
cmc
rcr
pushf
push
xchg
mulb
lahf
cld
mov
mov
push
mov
xor
lods
inc
loopne
adc
mov
adc
xchg
cmpb
sar
add
fidivrs
std
add
fwait
cld
js
or
jp
lcall
scas
xchg
push
pop
sarb
lock
jae
dec
aad
push
lods
aad
fidivs
lret
lcall
pop
mov
ja
dec
test
dec
and
jbe
xor
loope
fs
sbb
xchg
sbb
das
ds
jne
mov
shll
hlt
cmp
mov
jnp
pusha
pop
push
jne
cmp
and
jmp
out
sbb
lock
movsl
xchg
popf
leave
bound
mov
xor
rol
fcomip
dec
imul
inc
lods
xor
mov
int3
cmp
xor
or
outsl
notb
addr16
or
daa
push
scas
out
aam
in
pushf
fists
ret
clc
mov
sub
mov
jns
push
mov
arpl
sarl
mov
lods
xorb
test
jp
and
in
js
dec
insl
es
jmp
sbb
xchg
or
mov
inc
inc
pop
movsl
lock
aaa
mov
jmp
insl
int
mov
jae
pop
jbe
les
mov
cmpsl
mov
std
xchg
mov
push
ret
popa
in
mov
imul
pop
aas
aaa
cmpb
cmp
rolb
jecxz
call
xchg
ffreep
ds
mov
lock
inc
inc
sbb
xchg
leave
es
fs
fs
fnstcw
pop
fdivr
cmp
fistps
lods
inc
mov
lahf
fcomps
daa
pop
and
incl
pop
fwait
and
mov
outsl
divb
aas
jno
and
pop
lock
xchg
pop
out
add
std
in
jge
cld
mov
daa
cmp
sub
or
imul
pusha
cmp
lahf
mov
shl
sbb
jne
dec
mov
test
add
dec
jp
idivl
xchg
clc
daa
dec
dec
sub
js
les
mov
pop
mov
faddp
add
inc
push
lock
dec
push
push
sbb
push
xchg
arpl
jge
ds
in
in
sub
push
dec
lret
mov
std
incl
lock
out
sub
push
je
mov
jmp
sub
jl
sbbl
outsl
stos
push
mov
test
xchg
or
mov
shl
add
adc
sbb
iret
add
jne
xor
ret
std
shr
push
mov
aas
push
push
mov
test
dec
dec
fdivl
insl
mov
cmc
es
jge
testb
xchg
adc
ds
fdivr
push
cld
imul
stos
movsb
xor
arpl
pop
iret
in
cmpsl
push
mov
fisubrs
pop
aad
scas
fwait
gs
pop
imul
pop
arpl
inc
xchg
dec
sub
int3
stos
test
stos
clc
and
aaa
mov
push
push
lea
jge
in
ror
mov
scas
leave
sub
push
push
fs
rorb
into
divps
xor
sbb
cmpsl
sbb
insl
lods
in
xor
ljmp
sbb
pop
cmc
add
jmp
int3
das
sub
xchg
leave
lahf
lret
cltd
push
imul
fsubrl
mov
mov
cld
push
loopne
sub
xlat
ds
cmc
or
ljmp
cmp
lea
or
push
testl
pusha
lret
mov
push
xlat
mov
and
roll
xor
push
mov
mov
aad
mov
and
and
inc
lea
orb
out
incl
mov
aad
mov
fldt
cmp
mov
jno
jg
mov
test
sbb
addb
push
add
out
clc
nop
outsb
loope
jg
push
leave
adc
jo
inc
jnp
cmp
insb
mov
popl
lea
imul
xchg
bound
dec
xor
cs
outsb
lahf
repnz
pop
jge
mov
ljmp
pop
frstor
jbe
jae
notb
push
mov
xor
cmp
or
xchg
sub
mov
lods
sbb
push
mov
inc
icebp
imul
clc
adc
jp
push
test
xor
in
xchg
add
flds
nop
lret
xchg
pop
das
ljmp
adc
movsb
iret
loop
dec
mov
in
test
or
inc
cmpsb
shrl
mov
lret
pop
aam
sub
mov
and
cli
or
dec
xchg
mov
stos
inc
mov
inc
jl
and
daa
sub
adc
mov
mov
loopne
jg
inc
push
lret
loop
fnsave
jl
shrb
mov
xchg
cli
repnz
hlt
int
imul
fimull
add
or
xchg
nop
mov
add
pop
xchg
jecxz
das
outsb
scas
mov
jmp
dec
inc
push
sbbb
add
stos
pop
fneni(8087
sbb
xchg
pop
jbe
insb
cltd
xlat
loop
mov
fistpl
int3
mov
and
pop
xchg
push
aad
in
or
or
push
test
xor
mov
sbb
fsub
cs
add
add
add
sub
cmp
push
aas
das
jmp
loope
sbb
test
popa
popf
cmp
out
cld
xor
jmp
add
xchg
sbb
xor
shrb
push
shrb
hlt
xchg
push
lcall
sub
mov
inc
mov
and
pop
cmp
push
loopne
addr16
sub
xor
push
outsb
mov
lods
jmp
ds
subb
add
jno
imul
push
jg
clc
mov
popf
mov
jmp
or
mov
sbb
out
jae
adc
daa
mov
cmpsb
imul
lods
pushf
mov
dec
nop
dec
arpl
arpl
cwtl
push
jno
dec
or
leave
int
lretw
xchg
pop
stos
sub
jl
lcall
sbb
push
fwait
mov
mov
das
jns
ds
mov
jl
jge
addr16
push
cli
jnp
lcall
out
cmp
jecxz
mov
dec
loope
push
std
cwtl
push
aad
int
cmp
xchg
cmp
das
sbb
lods
gs
mov
lret
lcall
push
pop
xchg
lcall
cld
cmp
fcmovnu
push
adc
fcmovnb
imul
shlb
xor
into
cmp
add
js
lds
adc
or
sahf
jnp
dec
add
jbe
push
int3
push
mov
cmp
push
push
pop
jno
sub
stos
mov
sbb
push
shl
outsl
sbb
stos
clc
dec
xlat
dec
aad
push
mov
iret
imul
xor
pop
cmp
fs
add
nop
xor
shrb
and
sbb
xchg
inc
adc
dec
dec
out
and
loope
xor
ja
add
adc
sahf
sub
mov
lds
scas
or
push
out
and
popa
xchg
pop
scas
jns
out
ret
mov
or
mov
aad
and
push
nop
test
outsb
jp
jae
gs
sub
and
insl
inc
mov
cmpsb
stc
pop
fnstsw
dec
lock
test
xchg
aas
les
sbb
jae
out
pop
int3
repnz
inc
mov
mov
mov
push
jg
and
inc
fmul
cmpsl
imul
cmp
inc
out
pushf
sub
and
mov
fucomip
adc
push
cmp
aam
mov
loop
sbb
xchg
ret
jns
mov
cmp
jecxz
push
mov
mov
shr
je
mov
mov
pop
xchg
and
mov
out
and
pushf
add
push
movsl
sbb
fwait
popa
mov
out
sub
sarl
sarb
push
jecxz
ficompl
mov
fidivrl
cli
add
sub
gs
aas
jno
cmp
inc
jo
mov
jle
lods
loope
sub
sub
xor
sbb
or
push
adcl
out
arpl
push
iret
dec
outsb
shl
mov
and
push
stos
stos
cld
push
clc
jae
pop
push
mov
lds
ja
jmp
loop
jnp
loopne,pt
cmp
inc
pop
xor
push
pop
cltd
shl
aas
or
mov
push
xlat
fidivrs
lcall
mov
frstor
inc
frstor
and
adc
ret
mov
test
fisttpl
inc
pop
adc
cmp
stos
lret
icebp
sti
pop
ja
rcrl
xor
jp
mov
test
lock
mov
stos
push
cmpsb
jg
jge
jae
popf
movsl
jp
ror
jg
jbe
pop
clc
pop
loope
adc
ljmp
push
or
dec
mov
mov
int
decb
sub
mov
int
ljmp
push
pop
xlat
fistl
xlat
adc
add
cmp
enter
push
inc
and
in
mov
daa
or
cwtl
arpl
test
daa
sbb
mov
mov
lret
sub
xchg
adc
jno
pop
nop
scas
int3
push
pop
mov
out
lcall
pop
mov
mov
das
shr
sti
cwtl
pop
ret
or
outsl
in
fwait
add
iret
jl
xor
loope
inc
lds
xor
or
cmp
sub
lds
or
cmp
jg
fnsave
xchg
imul
movsl
push
xchg
pop
into
sbb
pop
mov
loop
sbb
lods
insl
adc
mov
jp
adcl
test
scas
cmpsl
adc
mov
sbb
popa
aas
mov
pusha
add
inc
shl
sub
jnp
dec
pop
xor
cmp
jns
mov
imul
sub
fwait
sarb
js
jmp
out
add
dec
imull
das
xchg
jno
cmc
je
and
cld
into
addr16
aas
popa
std
jmp
jp
shlb
cltd
ja
xchg
shrl
or
xchg
icebp
sub
jo
aad
jge
fistpll
enter
sar
xchg
ja
jno
clc
fxch
shr
lcall
pop
dec
jae
aad
lret
sbb
xchg
jnp
pop
pop
or
dec
lcall
sbb
adc
push
leave
sbb
jge
ficomps
gs
outsl
sarl
aas
movswl
pop
sarl
hlt
xchg
sub
stos
repnz
pop
sti
lds
aas
int3
stos
mov
mov
sub
add
xchg
cwtl
and
and
add
incl
ret
mov
or
aas
incb
lds
lds
or
ret
xor
adc
pop
pop
loopne
pop
sti
sub
insl
dec
stc
xchg
fidivs
aas
inc
push
inc
cld
sub
or
lret
mov
cld
push
push
lret
mov
out
jns
push
pop
sub
pop
lock
sub
loopne
icebp
jg
push
jnp
adc
not
mov
inc
jae
add
jg
dec
in
stos
jg
sti
sbb
negl
inc
mov
cld
scas
out
jo
ja
mov
or
adc
cmpsb
push
xchg
jle
cmp
loope
push
mov
test
gs
fsubrs
imul
cmpsb
jg
hlt
pop
repnz
clc
xchg
sar
nop
xchg
xor
sti
inc
mov
scas
lret
adcb
inc
jle
jg
mov
jg
and
fsts
das
std
loop
clc
lahf
out
sar
sbb
adc
icebp
imul
cmp
jmp
cmc
jmp
and
inc
repnz
pop
cs
and
popa
jns
gs
sbb
jp
sub
mov
adc
pop
mov
imul
push
pop
fimuls
pop
pop
fnstenv
lcall
pop
lahf
jne
loop
bswap
add
mov
mov
hlt
sub
mov
jbe
inc
icebp
dec
mov
icebp
mov
add
pop
imul
loopne
adc
fistps
in
ret
jne
ds
and
into
mov
incl
fucomi
clc
dec
cmp
mov
pop
loop
clc
inc
out
and
mov
lods
cld
divl
fwait
call
sub
andb
jl
sti
aaa
js
les
mov
cmc
jnp
dec
sub
mov
xor
pop
mov
pop
cmpsb
andl
pusha
movsb
ficoml
dec
fildl
sub
mov
mov
incl
mov
lcall
jl
loopne
dec
inc
aam
mov
cmp
les
loope
sub
out
aam
sbb
sahf
dec
push
fsubrl
pusha
mov
dec
notl
scas
imul
add
lret
aaa
cmpl
mov
sub
xchg
sub
pop
push
cmp
xor
add
fisttps
xchg
inc
xchg
aas
cli
sub
sbb
jmp
jae
dec
or
outsl
push
mov
jge
lods
lods
stos
sub
bound
ds
push
add
mov
inc
das
adc
add
xor
loopne
xor
jge
leave
pop
pop
pushf
mov
iret
mov
shrl
mov
pop
outsl
clc
dec
cmc
fildl
imul
xor
bound
inc
shr
repz
mov
xorl
fidivl
or
aaa
lock
in
mov
jo
sub
push
call
or
mov
das
in
push
mov
ja
add
cmp
lea
mov
or
pop
xor
lret
test
jno
fwait
push
ljmp
and
jne
jle
fistps
dec
pop
lds
icebp
dec
pop
imul
cmp
cmp
fidivrs
fcomps
fsubrs
jge
mov
mov
out
mov
xchg
das
mov
adc
jo
xchg
mov
idivl
stos
shr
pop
mov
add
shl
pop
fidivs
sbb
cld
loop
xchg
sub
mov
xchg
cmp
lds
ds
std
repz
and
cmp
js
fists
ds
loopne
push
insb
das
mov
repnz
mov
into
push
call
es
jge
pop
out
in
pushf
mov
scas
mov
repnz
rorb
mov
mov
pop
sbb
push
inc
cld
and
outsl
cld
stc
inc
and
test
dec
mov
sbb
aas
cmpsb
loopne
xchg
aas
test
adc
int
loope
mov
jb
jg
aaa
rcr
or
fwait
loopne
push
fcomp
xor
out
sbb
mov
inc
pop
xor
inc
mov
push
inc
xor
xchg
js
idivb
jne
mov
cli
std
mov
adc
lods
frstor
imul
mov
scas
xor
test
mov
bnd
and
xchg
movsl
dec
sahf
in
sub
pop
pop
mov
xor
adc
orb
adc
loopne
pop
rorl
pop
test
fildl
cmpsl
addr16
shrl
lds
or
push
sbb
jge
mov
frstor
cmp
gs
push
mov
pop
xor
loopne
shlb
enter
xchg
jmp
fnstenv
mov
push
cmp
push
dec
incl
cmp
push
nop
jl
cmpsb
and
xchg
fcmovnu
pop
leave
or
movsb
out
and
inc
ret
fcomp
sbb
lods
sub
add
pop
clc
mov
lea
push
mov
subb
loop
in
sti
xchg
sbbl
pushf
and
xchg
adc
sti
inc
push
insb
icebp
pop
jno
lock
imul
cli
pop
jbe
jnp
bound
pop
pushf
xchg
std
xchg
outsl
lcall
mov
inc
jecxz
xchg
repz
and
jns
fistl
mov
sbb
lret
leave
xlat
leave
aas
jae
mov
xor
xchg
lock
sti
sub
xchg
dec
cmpsb
in
inc
mov
ja
mov
jp
and
mov
mov
sahf
stc
pop
lds
or
stos
movsb
pop
fcmovnu
mov
pop
pop
hlt
loop
cwtl
push
adc
cmp
sbb
xchg
std
inc
dec
mov
insb
jne
insl
dec
sbb
mov
add
rcll
fidivs
rclb
mov
mov
mov
imul
jns
loop
sbb
into
in
insb
insl
pop
int
dec
sub
icebp
out
dec
or
mov
adc
inc
das
enter
icebp
cmp
repz
cs
scas
cmpsl
inc
mov
test
mov
test
adc
int3
mov
mov
repnz
cmpsl
xchg
shrb
mov
mov
hlt
mov
adc
std
cmp
int
mov
iret
cmpsb
jne
push
jmp
fldt
cld
lahf
in
fwait
adc
in
in
lahf
aaa
xadd
mov
cld
mov
icebp
push
cltd
movsb
jmp
in
imul
fildl
jb
fcoms
jecxz
xor
jb
in
mov
mov
sbb
mov
cmp
jo
lret
pop
fwait
pop
push
sbb
xchg
loopne
jbe
sub
ds
icebp
xchg
pop
push
sbb
pop
or
xor
pop
movsl
mov
pop
cld
nop
pop
out
xchg
out
and
inc
xchg
ret
push
jb
repz
mov
stos
fstpl
leave
imul
ss
dec
push
popf
sahf
mov
jnp
out
iret
in
jmp
dec
inc
push
mov
xchg
xor
sbb
jno
mov
mov
test
or
out
scas
cmpsb
mov
jecxz
pop
adc
push
cmc
fwait
imul
pop
jne
jae
pop
inc
jne
dec
cltd
rolb
nop
lahf
add
imul
repz
xor
dec
cltd
xor
lea
incb
push
mov
rcll
cmp
cli
add
xor
aas
mov
mov
dec
incl
in
lahf
ret
pop
adc
aas
andb
inc
jle
jg
mov
jg
and
fsts
lock
decb
ret
out
sti
push
hlt
iret
std
and
mov
add
jp
ret
mov
or
add
movsl
loopne
jbe
fidivl
sub
inc
sbb
push
jbe
sbbb
sub
test
xchg
dec
dec
mov
pop
push
lds
lret
xchg
pop
adc
push
mov
pop
fcompl
ss
into
lret
mov
mov
pop
or
mov
ss
mov
sub
addl
popf
jg
xor
mov
cmpsl
call
es
pop
scas
and
xchg
mov
pop
xchg
movsl
pop
push
push
sti
inc
jns
lret
lock
jnp
stos
je
jg
stc
stos
sbb
sbb
jl
loope
xchg
xlat
push
jno
add
jne
sub
pop
pop
shll
gs
sub
dec
repz
arpl
mov
lds
lock
pop
stc
out
jg
mov
incl
mov
test
jmp
sbb
rorl
jp
sub
ljmp
outsb
aaa
jp
aas
lock
jl
lret
sarl
sahf
mov
cmpb
xor
sub
pop
jns
pop
clc
and
sub
inc
mov
xlat
stc
adc
stos
negl
and
xchg
xor
aas
mov
std
xlat
fsubl
stc
and
or
inc
loopne
jp
decb
out
jg
int
mov
pop
in
fidivrl
dec
outsl
inc
sub
inc
sbb
mov
fnstsw
sub
push
popf
mov
cmc
incb
mov
data16
int
push
cwtl
inc
lods
mov
mov
ret
lock
and
push
andl
mov
mov
xchg
and
jne
adc
test
movsl
outsl
rcrl
xchg
lcall
xor
imul
int
cmp
clc
push
mov
and
lahf
clc
sub
out
fiaddl
push
dec
notl
dec
imul
arpl
test
ret
add
daa
lcall
lods
in
in
out
xchg
sbb
sub
xor
out
pop
push
movsl
pop
push
jne
in
push
ss
xchg
movl
add
add
mov
aas
mov
jmp
xchg
dec
in
outsb
mov
mov
sub
pop
sub
push
push
outsb
lods
inc
stc
xchg
mov
lods
push
ret
lahf
imul
test
test
outsl
xchg
repz
out
pop
in
jl
ljmp
outsb
or
ljmp
mov
test
outsb
outsl
push
push
push
push
int
lods
jb
mov
fwait
pop
inc
rcrb
jecxz
xchg
mov
mov
mov
mov
faddl
mov
push
xchg
adc
xchg
movsl
das
mov
adc
jbe
push
mov
clc
decb
aad
xor
aas
mov
cmpsl
lock
jl
loopne
or
add
sbb
jge
ficomps
gs
outsl
sarl
aas
movswl
pop
sarl
hlt
xchg
sub
stos
mov
icebp
push
cld
dec
repz
incl
push
mov
mov
clc
jecxz
lock
cmc
pop
cmp
outsl
stos
fstps
ficomps
push
imul
push
cmp
int3
nop
ret
jno
xor
repnz
lea
sub
sbb
and
test
lcall
cmp
loop
popf
add
aas
cmpb
addr16
imul
fimull
sub
imul
and
out
je
xchg
inc
cmp
icebp
xlat
lcall
jl
das
mov
popf
aas
dec
lock
adc
outsl
shlb
xchg
ror
jg
jne
xchg
imul
xor
inc
repz
clc
repz
mov
jge
xlat
outsl
fisubrl
xor
cmp
icebp
push
test
lds
mov
insb
mov
mov
mov
sub
mov
outsl
jb
mov
loop
cld
xchg
dec
adc
add
fsubrs
jmp
dec
data16
out
arpl
xchg
mov
xchg
test
mov
lock
jg
std
pop
lock
incb
fmuls
les
int3
not
cli
insb
jbe
ret
std
xchg
aaa
cltd
push
mov
frstor
mov
sub
repnz
or
add
mov
fwait
dec
mov
mov
jnp
pushf
add
jl
cmpsb
sahf
test
dec
leave
and
in
repnz
sub
incl
add
cmp
outsb
pop
clc
sbb
mov
and
pop
hlt
cmp
adc
and
cld
jle
clc
inc
cmp
push
inc
mov
jmp
lock
mov
ljmp
lods
movsl
mov
jns
push
aaa
sub
insb
or
scas
inc
shr
adc
adc
scas
mov
jecxz
ret
dec
sub
sub
out
jg
cmp
adc
cmpsl
sbb
mov
icebp
cli
aas
loope
icebp
xchg
std
push
cmp
or
pop
scas
inc
mov
mov
pop
jg
jg
jae
in
cmp
test
inc
movsl
nop
jg
popa
call
jne
scas
repnz
arpl
inc
std
popf
xchg
idiv
pop
aas
decb
filds
insl
add
mov
pop
lret
push
mov
sti
fists
jg
sbb
sub
in
outsl
das
cld
push
aas
in
and
and
mov
loop
pop
imul
pop
pop
lods
scas
mov
fs
push
mov
jp
xchg
add
cmc
dec
push
cmp
mov
and
in
inc
in
out
repnz
inc
nop
mov
sbb
mov
xchg
push
dec
inc
mov
in
xchg
out
sub
rcll
jbe
xchg
jp
pop
cmp
outsl
mov
pop
ds
ficoml
dec
mov
mov
cmpsl
dec
mov
dec
rcr
pop
inc
ljmp
push
lea
xchg
push
jl
scas
fnstsw
add
insl
xor
ja
xchg
xchg
sbb
push
dec
mov
sbb
in
add
js
xor
rolb
pop
or
jae
dec
push
dec
sub
iret
pop
int3
iret
jmp
stc
jns
insl
pop
fstpt
nop
in
xchg
push
mov
mov
mov
clc
jg
mov
pop
ss
inc
js
ljmp
and
pop
je
and
imul
clc
stos
jecxz
pop
or
sbb
repnz
push
in
push
push
mov
mov
dec
aaa
out
movsb
sub
fwait
insb
test
fcoml
test
mov
mov
xor
incl
stos
mov
jne
mov
xor
push
das
mov
push
mov
push
sbb
and
jbe
inc
lret
push
imul
lds
jbe
js
aas
push
cmpsb
ljmp
ja
push
pop
sbb
adc
xor
mov
or
cmpsb
mov
xchg
push
mov
daa
mov
repnz
dec
js
jne
sub
jnp
mov
mov
scas
and
or
pop
repnz
icebp
std
pop
jecxz
lea
pop
ds
jg
popa
jo
cld
ds
rorb
mov
aaa
loopne
cld
xchg
lahf
xchg
imulb
adc
xor
daa
stc
pushf
hlt
jg
pop
inc
adc
subl
loope
imul
add
pop
xchg
sar
outsl
lods
dec
outsl
test
dec
jne
filds
aas
push
fsubp
std
sbb
xchg
rcll
pop
aam
scas
inc
scas
insb
popf
popf
iret
xchg
jle
clc
pop
pop
lock
test
push
push
shlb
lods
dec
pop
ljmp
in
insb
hlt
imul
fwait
inc
mov
and
movsb
mov
imul
jecxz
aad
pop
popa
sbb
incl
fadds
popf
jb
ret
scas
fwait
aaa
xchg
sub
jge
dec
lahf
or
or
or
test
add
xor
in
sub
xchg
inc
inc
and
popf
lahf
ds
push
clc
xor
fs
sahf
xchg
loope
sub
lds
dec
aad
sub
mov
cmp
lcall
outsb
popa
fimuls
pusha
mov
xlat
aad
sub
pop
std
jns
repnz
mov
inc
loop
push
sti
dec
sahf
inc
mov
mov
add
pop
cmp
aad
sahf
leave
scas
int3
in
push
test
test
movsl
negl
les
cmp
jns
imul
ffree
fs
push
jecxz
sub
sbb
mov
dec
and
or
in
sub
mov
cmpsb
test
xchg
and
aad
inc
arpl
mov
cmc
paddsb
incl
sar
test
loopne
jle
lea
loop
cli
pop
xor
jle
stos
ljmp
movsb
xor
xchg
stc
sbb
push
test
stc
ret
xor
jae
lock
dec
jecxz
xchg
repnz
rclb
sub
out
pop
add
in
pop
movsl
jns
divb
mov
add
jl
aas
lock
addr16
test
icebp
pop
std
setp
clc
aad
aad
outsb
outsb
movsb
outsb
pop
push
ror
popf
rol
mov
lahf
loopne
jo
dec
mov
lds
ds
clc
das
mov
jecxz
jg
js
incb
idivb
push
ljmp
inc
loopne
cli
cld
mov
dec
decb
sub
and
inc
out
loopne
sti
aas
xor
lcall
stc
adc
je
out
in
inc
mov
pop
js
idivb
hlt
pop
dec
das
dec
aam
scas
jnp
cs
aad
sub
ret
xchg
inc
ret
add
mov
imul
cmp
sub
xchg
or
mov
jle
dec
push
dec
pop
std
das
in
pushf
adc
aam
bound
mov
cltd
sar
aam
or
adc
lcall
cmp
mov
or
loope
repnz
ret
add
and
imul
inc
loop
imul
add
iret
addr16
mov
leave
test
sbbl
and
iret
lea
sub
cmpb
cltd
xchg
jp
adc
push
mov
shrb
notb
lcall
loopne
push
mov
cmc
xlat
pop
jmp
cmp
adc
sti
jmp
lock
incl
adc
dec
aaa
inc
pop
je
repnz
mov
mov
cmp
mov
jle
xchg
inc
loopne
mov
lds
dec
fcmovnb
mov
sbb
lods
cs
pop
inc
imul
arpl
mov
mov
fisubs
push
testb
dec
mov
pusha
test
incl
sbb
scas
cli
dec
repz
adc
adc
lcall
aaa
adc
jns
icebp
pop
pop
into
test
inc
enter
and
inc
pop
dec
sarb
aam
dec
dec
push
aam
and
fimull
sub
dec
jge
test
mov
mov
inc
xor
sbb
imul
sbb
cmp
das
inc
mov
jnp
or
push
ja
out
add
xchg
roll
add
adc
call
lods
pop
sarl
jecxz
das
stc
sbb
dec
loopne
or
sbb
jge
ficomps
gs
outsl
sarl
aas
movswl
pop
sarl
hlt
xchg
sub
stos
mov
icebp
push
cld
dec
repz
incl
push
mov
mov
xchg
test
in
lahf
cmpsl
pop
ret
aaa
xchg
push
lods
push
rcll
addr16
fisttpll
dec
rolb
pop
xchg
lods
xchg
fisubl
mov
jno
lcall
arpl
adc
dec
sbb
aaa
add
pushf
sbb
movsl
vpmulhw
jmp
int3
stos
sbb
and
pop
in
inc
sbb
and
stos
sub
pop
adc
pop
cmp
push
fildll
or
sbb
lods
sub
loop
ret
stos
sbb
mov
inc
fisttps
out
scas
scas
in
lods
insl
mov
cmp
sub
cmp
add
scas
jl
dec
rcr
fs
xchg
ljmp
inc
adc
push
adc
dec
ljmp
outsl
mov
mov
pop
stos
cmp
fcompl
outsb
rcrl
adc
jmp
iret
push
and
adc
pop
jbe
fiadds
mov
xchg
mov
xchg
rcl
xchg
inc
roll
vpminub
inc
push
xchg
mov
int
and
mov
idivb
sub
std
cmpsl
iret
sti
aas
xchg
mov
in
out
sub
lahf
test
divb
jo
ret
outsb
rcrb
and
and
xor
and
jecxz
cmp
xor
sbb
and
sub
in
in
daa
mov
out
or
gs
inc
sbb
push
add
or
adcl
xor
pop
push
mov
pop
mov
dec
or
mov
fnstcw
cmp
fwait
ja
repz
fdivrl
inc
add
and
lods
loop
lock
jnp
push
dec
rcl
lods
cmc
pop
and
adc
enter
mull
inc
fdivl
xchg
mov
sbb
imul
mov
aad
adc
dec
mov
inc
bound
and
popf
divb
mov
cmpsl
push
incl
test
clc
daa
mov
pushf
in
mov
jbe
push
cmc
cmp
fisubrl
je
xor
into
into
cmpb
stos
add
xchg
sbb
cmp
hlt
hlt
mov
mov
imul
arpl
and
and
adc
xor
cltd
imul
insl
push
cmp
push
lds
aas
in
push
out
add
incb
iret
out
popf
stos
in
outsb
scas
xchg
ss
pusha
jno
inc
int
sub
adc
nop
inc
ds
jecxz
push
ljmp
lret
push
andb
enter
mov
es
cmp
js
loop
add
cmpsl
clc
mov
fisubs
jne
push
or
xor
test
into
xor
mov
ret
lock
or
orl
lahf
adc
fucomp
mov
fsubr
mov
pop
and
or
sbb
sbb
cmc
mov
add
push
mov
fsts
iret
clc
decb
aad
xor
aas
mov
lahf
ret
les
xchg
lahf
xchg
imulb
adc
pop
incl
xchg
xor
sti
inc
mov
scas
lret
jg
adc
sahf
lock
cmpb
icebp
out
xchg
std
mov
sbb
sti
or
mov
mov
jl
outsl
sti
ds
cli
dec
fldpi
fisubrs
das
lds
sarl
lea
fcmovbe
mov
je
pop
into
imul
outsl
xor
dec
fwait
xchg
xchg
xchg
and
lods
insb
popf
popf
iret
xchg
jne
add
sbb
mov
mov
pop
cmp
add
mov
sbb
sub
cmc
imul
jp
pop
jb
fs
push
push
xchg
arpl
mov
sbb
js
dec
xchg
insl
loopne
xchg
mov
scas
outsb
mov
mov
xlat
push
push
ds
mov
insb
xchg
xchg
testl
push
insl
roll
pop
jge
incl
or
ret
pop
lock
and
fwait
sbb
aas
mov
ja
out
adc
mov
mov
int
out
push
pusha
out
sbb
push
mov
cmc
cmp
jne
sub
ljmp
ljmp
lods
out
xchg
dec
mov
push
inc
and
or
push
push
cmp
loopne
mov
pop
dec
icebp
subb
add
jle
pop
lcall
icebp
or
iret
testb
mov
in
sbb
sbb
sbb
ljmp
jne
lods
das
loope
mov
data16
xchg
and
out
xchg
mov
pop
out
xor
push
loopne
cmpl
xor
insl
in
into
pop
xchg
lcall
jns
in
xchg
ljmp
mov
subb
pop
adc
push
xor
hlt
lods
stos
push
jne
into
xchg
jbe
dec
pop
je
fmul
jle
push
loop
dec
ret
mov
mov
pop
ljmp
andl
arpl
test
inc
cmp
fmulp
cs
stos
fsubr
icebp
stc
repz
test
aaa
xor
nop
sbb
in
lds
cld
adc
dec
popf
stos
cmpsb
cmpsl
outsl
mov
inc
push
and
or
push
inc
pop
mov
aam
rorl
xor
mov
leave
sub
push
movsb
stos
dec
imul
cmp
lcall
jl
lock
lds
fidivrs
icebp
mov
scas
subl
ret
fisubl
jle
andb
lods
popa
mov
dec
mov
mov
pop
insl
push
mov
hlt
push
xor
fcomi
ja
out
mov
incl
pusha
mov
adc
and
jl
cld
and
pop
shr
hlt
rorb
enter
mov
movsb
mov
insl
hlt
dec
pop
add
das
sbb
sbb
sar
shrb
notb
repnz
cltd
je
jmp
xor
mov
jbe
out
push
arpl
xchg
lods
add
ret
xorb
add
jae
sahf
out
xlat
fimuls
xlat
mov
sub
and
movsl
mov
mov
leave
mov
xchg
in
lock
inc
jne
adcb
cmc
cmc
push
xchg
mov
ljmp
jae
push
xor
imul
dec
fiaddl
add
mov
cmp
add
les
movsb
iret
insl
lods
fucomip
adc
xchg
sbb
pop
cmp
adc
dec
xchg
add
sbb
out
sbb
lret
mov
jne
das
jge
in
dec
stos
fcmovu
mov
loope
cld
and
adc
xchg
loop
into
mov
mov
jb
pop
std
test
insl
cs
dec
jecxz
divl
sbb
clc
adc
dec
scas
jle
clc
in
loopne
add
lcall
and
insb
and
out
and
inc
jb
inc
ljmp
push
movsb
jle
pop
rcrb
ret
cmpsb
fistl
aad
or
outsl
and
test
popa
cwtl
pop
mov
sub
jns
sbb
lahf
cmp
loope
gs
jg,pt
lds
fdivl
xor
xor
in
cltd
xchg
push
adc
aaa
leave
adc
inc
addl
sub
mov
test
jmp
mov
or
movsb
mov
cs
insl
cmc
jg
out
in
mov
fwait
negb
loope
dec
fs
les
pop
cmp
pop
mov
test
rcrb
jcxz
arpl
shll
scas
mov
xchg
and
xchg
xor
hlt
dec
daa
xchg
pop
mov
mov
clc
sub
sub
fdivrl
mov
imul
fisubs
lods
mov
adc
pop
and
inc
adc
push
add
inc
daa
daa
cmp
ret
imul
shll
aam
push
xor
xchg
outsl
mov
dec
jo
frstor
and
adc
fnstsw
adc
idiv
add
std
data16
jns
xor
inc
aam
nop
jmp
xor
imul
mov
fs
xchg
das
jle
shrl
xchg
mov
clc
jns
js
les
xlat
ja
ds
xchg
cmc
sub
inc
and
mov
iret
and
in
enter
dec
fcoms
push
or
mov
cmpsb
pop
dec
sbb
mov
mov
add
mov
adc
stc
adc
lret
loop
mov
insl
mov
pop
inc
cmp
dec
inc
mov
jmp
incl
shl
lods
loopne
mov
incb
stos
dec
fisubrl
sti
stc
and
mov
sub
clc
cmp
cmpsb
filds
xor
scas
test
jp
out
add
sti
addr16
and
sti
outsl
cld
and
outsl
fstpt
loope
ljmp
xor
pop
int3
bnd
repz
mov
sarb
in
stos
jno
fistpl
cmpsb
popf
out
fstpt
daa
push
cltd
iret
add
pop
imul
psubb
loope
mov
ds
testb
scas
clc
dec
xor
iretw
daa
lret
fildll
addr16
mov
sbb
insb
in
fwait
repz
ffreep
aas
adc
insl
aas
imul
xor
dec
mov
mov
mov
mov
popw
std
ds
adc
das
ffreep
sbb
jns
sub
and
jnp
adc
insl
stos
incl
ret
cmp
imul
adc
cli
and
jnp
push
jbe
loop
cli
imul
mov
lods
arpl
cmp
mov
mov
dec
xchg
push
inc
or
stc
xchg
inc
mov
leave
adc
mov
push
jecxz
sub
xadd
or
push
fdivl
and
inc
std
fdivrl
aam
jge
dec
and
inc
or
jo
icebp
stos
int
and
loop
cltd
pop
mov
dec
popa
lods
dec
lods
inc
addr16
and
mov
dec
adc
cmpsb
lcall
xchg
inc
mov
outsb
jmp
push
mov
xchg
or
sti
push
ljmp
push
call
notb
cmpsl
js
inc
lahf
push
mov
xchg
cmp
push
data16
lods
push
lret
jo
xchg
push
mov
xchg
aas
fs
rcrb
pop
fisttpll
jg
sti
dec
cld
es
jbe
mov
int3
repnz
jne
scas
iret
xchg
cmp
mov
cmp
mov
dec
loop
dec
sub
cmp
repz
mov
sbb
shl
ljmp
sub
cmp
repz
push
insl
sti
sub
lds
aad
je
sbb
jge
cmp
sub
stos
inc
stos
jge
fidivrl
arpl
adc
nop
enter
aas
nop
repz
pop
mov
add
xchg
jg
inc
std
xchg
arpl
mov
push
cltd
ds
insl
sti
cld
lahf
aaa
sbb
cmp
xor
int
mov
push
inc
adc
sbb
mov
jg
hlt
pop
repnz
icebp
std
pop
jecxz
lea
pop
ds
jg
incl
in
cld
ds
rorb
mov
sub
pop
test
pop
cld
sub
sbb
pop
int
femms
imul
loop
pop
adc
cmp
cmp
mov
mov
dec
jp
stos
or
addr16
dec
mov
mov
adc
incl
rcl
lds
or
mov
loopne
adc
stos
xchg
fdivrs
call
hlt
sbb
iret
mov
mov
pop
cld
push
pop
lock
pop
ja
rcll
push
sub
jmp
cmp
clc
dec
sub
loopne
inc
fcoms
lock
xor
andl
iret
inc
inc
into
push
fwait
dec
adc
lods
fisubrl
push
add
sarl
fcoml
ja
mov
cld
pop
jg
incl
sbb
mov
mov
mov
sar
mov
xchg
cmc
cwtl
idivb
sbb
mov
mov
sti
cli
inc
inc
stc
lods
loope,pn
and
addb
mov
icebp
xor
ljmp
add
jae
pop
int3
aad
clc
dec
in
jg
popa
xchg
dec
fdivs
fnstenv
shr
scas
cmp
test
xlat
incb
jg
push
jg
ja
and
aas
clc
sbb
stos
cmp
icebp
cmp
iret
aas
loope
mov
lock
gs
popf
fisubl
ret
pcmpgtw
push
mov
iret
inc
fwait
gs
mov
faddl
pop
addr16
jg
clc
and
pop
insl
pop
lea
mov
dec
arpl
rolb
pop
daa
test
pop
in
xchg
pop
into
in
mov
mov
dec
or
cmpsl
pop
cmp
pop
stos
cmp
loope
incl
mov
dec
sti
push
hlt
mov
iret
add
aad
shr
mov
xchg
dec
jno
or
aas
or
ficoms
outsl
xchg
sar
imul
sub
mov
gs
jp
jns
int3
lret
add
dec
mov
jnp
cld
and
std
repz
jge
insl
dec
lds
imul
push
jmp
fwait
js
outsb
sbb
movsb
xchg
pop
push
mov
adc
fwait
jg
inc
adc
js
dec
lahf
dec
xlat
xor
sub
out
push
jmp
lret
mov
push
xor
and
aad
sti
adc
jle
adc
mulb
lods
ja
sbb
je
mov
push
jge
jne
jmp
sub
and
iret
and
mov
out
arpl
scas
xor
fsubr
sahf
adc
sub
mov
jbe
test
out
ret
sub
sub
and
lret
xchg
fstpl
adc
sar
aam
cld
or
dec
pandn
mov
inc
xchg
jg
inc
sub
ja
shl
jmp
adc
stos
jae
inc
add
sbb
sbb
in
rcll
aas
lea
sarb
jne
fisubrl
push
test
adc
mov
push
jmp
dec
mov
mov
push
divb
js
pop
jae
pop
cmpl
incl
imul
filds
aas
mov
shl
dec
aaa
popf
out
jle
insl
cltd
and
xchg
jno
int3
dec
fisubrs
jo
aas
not
jl
sti
and
jmp
pop
sarl
hlt
jg
pop
fistps
sub
flds
mov
xor
sti
ds
stc
enter
and
fistpl
sbb
dec
clc
dec
ret
add
dec
dec
push
insb
jo
mov
in
push
test
sbb
jmp
cs
in
mov
jle
out
cltd
inc
and
cmp
xorb
imul
mov
push
jmp
pusha
aam
push
hlt
mov
fdiv
sub
addl
in
dec
cmp
jmp
inc
xchg
pop
sbbb
xorb
xchg
xor
pop
fcmovne
sub
inc
sub
mov
insl
out
pop
mov
test
add
fidivl
pop
jg
and
aas
cld
std
imul
cmp
out
and
ss
push
pop
add
jp
stos
fcomip
xchg
mov
stos
sahf
mov
leave
lods
cmp
ss
sub
pop
aad
lock
imul
loopne
jnp
lahf
lods
loopnew
push
jg
jbe
adc
lahf
js
push
shr
inc
aam
inc
mov
jnp
mov
xorl
cmp
mov
inc
outsb
mov
testb
scas
lcall
cmc
jl
icebp
repnz
jbe
jp
xchg
dec
clc
jne
mov
jl
je
push
enter
roll
fidivs
xchg
sub
inc
sub
xchg
mov
cmp
iret
sbb
mov
js
adc
add
push
stc
push
std
loope
mov
pop
adc
sbb
sub
mov
lods
push
xchg
loop
inc
insl
xor
xor
xor
daa
cmp
xor
divb
mov
mov
jle
clc
fnstsw
clc
data16
push
aad
sbb
in
cmp
jle
mov
fs
in
pop
imul
pop
mov
nop
lods
sub
push
xchg
cmpsb
clc
mov
add
add
mov
xchg
imul
adc
pop
pop
lods
dec
sub
mov
pop
imulb
mov
outsb
jmp
adc
sbb
popf
aas
push
dec
arpl
pop
fsubrs
adc
xchg
out
je
lock
xchg
jno
jno
imul
fcoml
aas
jno
out
je
xchg
lret
insl
cmp
icebp
std
out
cld
enter
dec
fadd
cmp
pop
in
call
loopne
pop
iret
decb
scas
clc
clc
in
pop
lock
cmc
lods
loopne
ljmp
or
jg
clc
dec
pop
sti
aad
mov
jg
divl
out
jg
adc
clc
subl
sub
mov
out
sahf
je
insb
scas
and
xchg
inc
popa
nop
call
pop
jg
pop
cld
push
push
lahf
lock
std
add
mov
mov
or
incl
stc
and
mov
sub
mov
call
jb
jo
test
lea
push
mov
shl
adc
orb
xchg
lds
lock
mov
cmp
dec
lds
push
sbb
jae
and
sub
test
cmp
addb
rcl
mov
ds
addr16
shll
cmpsl
fcomps
imul
jbe
adc
and
xchg
cmp
or
dec
adc
jle
lahf
sbb
sbbb
test
rcrb
jns
mov
cmc
cmp
xor
aam
jecxz
jbe
mov
dec
and
cmp
addr16
push
pop
out
jmp
loopne
dec
daa
loopne
xchg
jg
push
pop
lock
adc
jg
pop
aaa
and
push
shl
fcmovu
sbb
insl
xchg
add
pop
cld
bound
mov
subb
xor
and
push
pusha
push
fsub
or
ffreep
jbe
fstpl
repz
xchg
inc
mov
mov
inc
xor
aas
clc
sub
and
stos
loopne
inc
int3
inc
cld
ss
pop
cli
sbb
shll
faddl
sti
jg
ficompl
jg
sti
jecxz
adc
incb
xor
jg
sub
dec
scas
adcl
call
or
sahf
xchg
scas
cld
cld
cmpsl
sbb
dec
push
orb
cld
aaa
imul
jge
ret
adc
jnp
or
adc
pop
mov
mov
movsl
mov
dec
and
pop
sahf
lahf
andl
lcall
aas
incb
jg
jp
pop
jb
mov
lret
das
addl
ja
mov
lret
adc
stc
add
mov
popf
movsl
imull
decb
sub
repz
sbb
das
std
or
pop
xchg
push
fmuls
xchg
jg
dec
inc
pusha
sub
fadd
jbe
fcoml
and
fisubrs
movsb
push
pop
mov
inc
in
rcr
sub
xorl
add
paddsw
daa
imul
jl
cmp
cld
rclb
clc
and
aas
clc
es
mov
imul
mov
cld
adc
icebp
mov
loop
out
inc
repnz
jo
incb
add
rcrb
xchg
pop
push
pop
inc
mov
int3
fadd
lret
xchg
ss
cmp
pop
faddp
or
push
pop
pop
repz
jg
mov
add
dec
scas
test
xorl
popf
lds
mov
mov
dec
xor
push
imul
stc
mov
and
adc
jmp
enter
jo
push
xor
stc
call
andb
std
mov
cld
xchg
pop
out
fists
or
jmp
jle
iret
sti
icebp
jg
leave
aam
ret
clc
lahf
popf
xor
cld
pop
clc
bnd
and
test
out
adc
xchg
paddsw
jl
in
push
xor
inc
iret
aas
out
aas
lock
in
repz
and
stc
lahf
jns
lock
pop
mov
inc
add
pop
data16
push
mov
jne
adcb
mov
or
jp
xchg
fldt
hlt
adc
fists
fwait
daa
in
mov
mov
cmp
pop
mov
cld
lock
sub
jns
aam
out
dec
jmp
popa
xlat
inc
cmp
push
xchg
push
jmp
adc
flds
add
fisubrl
add
jecxz
loopne
lods
mov
pusha
fldl2t
call
pop
add
inc
pop
add
xchg
push
adc
sub
mov
lds
mov
inc
lods
inc
cmp
adc
fdivr
loopne
adc
dec
inc
cmp
add
dec
adc
fildl
inc
add
add
roll
add
add
add
call
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
sbb
dec
add
and
add
add
sar
les
pop
dec
mov
add
add
push
pop
or
or
inc
add
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
dec
jno
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
xlat
inc
shlb
jge
ljmp
test
out
fidivrl
bound
jp
mov
clc
inc
in
mov
jbe
cld
mov
push
push
aaa
mov
add
add
movsb
mov
mov
jl
scas
push
push
pop
frstor
xchg
aaa
mov
xchg
std
pop
xor
mov
aaa
scas
ljmp
mov
and
mov
movsl
arpl
in
aad
adc
jl
push
arpl
lret
adc
stc
scas
xchg
jne
mov
sub
jge
loopne
pop
jg
clc
mov
pop
xchg
inc
fsubrl
pop
sub
scas
xchg
pop
outsb
nop
sbb
push
icebp
mov
and
negb
notb
jge
lods
push
inc
filds
cld
inc
mov
outsl
cld
mov
xchg
mov
mov
sarb
faddl
xchg
lds
ja
jg
jl
lods
fucomi
sbb
lds
aaa
jns
cmp
cmpsl
pop
dec
cs
sub
stos
loopne
add
pop
jmp
paddw
jge
pushf
pop
sbb
aad
mov
add
jne
inc
ja
cs
shrl
mov
dec
or
test
adc
mov
add
adc
mov
jmp
fldl
inc
jne
cltd
daa
mov
repnz
sbb
mov
out
mov
outsl
sbb
inc
mov
nop
les
xchg
jle
xor
rorb
mov
add
and
out
lcall
fwait
repnz
push
pop
xlat
hlt
dec
je
cmp
fucomi
xchg
xchg
data16
xchg
lret
xchg
lods
jl
lea
jle
imulb
insl
outsb
mov
mov
cmp
inc
pop
sbb
rol
cmp
ja
int3
lds
dec
xchg
pop
loop
mov
push
xor
fstpl
sbb
mov
movsb
insb
adc
sahf
push
cmp
test
mov
add
sbb
mov
add
push
pop
bnd
lahf
stc
jecxz
xor
sahf
mull
jnp
jge
push
icebp
sbb
jae
fcmovb
pop
jns
into
icebp
sub
dec
push
cmp
movsl
mov
and
sbb
add
imul
cld
fwait
jne
test
adc
xor
adc
cmpsb
fistpl
jnp
pop
mov
js
jo
mov
xor
push
sbb
in
mov
inc
loope
sbb
clc
dec
and
sahf
out
add
adc
push
enter
mov
xor
inc
push
fdivrs
addl
repnz
in
cmpsl
js
jg
daa
mov
jge
pop
cmp
sub
pop
imul
jae
insl
sub
pop
adc
movsb
jae
mov
mov
and
add
mov
add
fstps
push
add
fdivr
loopne
adc
dec
inc
add
add
add
daa
fildl
inc
add
add
roll
add
add
add
call
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
sbb
dec
add
and
add
add
sar
les
pop
add
add
adc
pop
add
push
pop
or
or
inc
add
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
dec
jno
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
sbb
adc
xchg
lds
loope
je
rorl
stc
mov
in
mov
pop
jo
popa
pop
pop
lock
dec
incl
xchg
jb
jl
stos
cmpsb
cltd
icebp
aas
sbb
data16
sub
js
shr
loope
xchg
jnp
enter
sub
stc
arpl
pop
es
stc
sub
pop
fcmovnb
into
push
sbb
stos
cs
mov
jno
int3
clc
inc
jle
sbb
pop
imul
pop
cmp
cld
and
stc
sbb
sub
mov
mov
xchg
loop
test
idivl
test
lahf
cmp
je
sti
jge
dec
aam
or
imul
rol
lods
test
in
or
test
pop
fcomps
aaa
incl
and
lret
add
jg
lahf
cld
xor
adc
loope
sti
imull
clc
sbb
adc
mov
fcomip
xlat
std
sti
xchg
clc
mov
jle
aaa
cli
scas
in
xchg
lock
jp
xchg
in
in
les
xlat
sbb
sbb
aad
mov
out
ret
sub
leave
dec
jg
xchg
sub
mov
scas
xchg
mov
dec
cmpsb
add
mov
in
ss
fcmovne
jno
fcmovnu
dec
sub
cmp
xchg
dec
sub
into
int
scas
cld
fwait
incl
xchg
xor
movsb
outsb
xchg
mov
decb
enter
ret
aas
sti
sbb
jb
icebp
lret
adc
lahf
std
adc
clc
in
mov
cmp
test
and
push
repnz
inc
mov
cli
test
in
mov
repz
jmp
pop
or
shlb
mov
mov
xchg
fs
jb
lahf
cltd
cwtl
adc
jecxz
mov
mov
imul
xor
push
aad
scas
inc
xor
test
pop
jge
jmp
cltd
lret
movsb
cmp
das
mov
icebp
das
mov
lock
iret
adc
test
enter
push
push
inc
adc
popa
dec
incl
test
das
sti
call
roll
push
daa
dec
jbe
mov
push
push
out
fstpt
jg
loopne
lock
psubd
jge
icebp
scas
sqrtps
jne
popa
mov
popa
sbbl
movsl
lahf
push
xor
mov
cmp
push
adc
mov
or
sbb
jg
testb
lret
clc
add
js
out
clc
daa
pop
sub
dec
or
cmc
leave
hlt
push
jb
fwait
pop
inc
jae
and
adc
ret
and
in
sub
sbbl
movsb
pop
mov
fiadds
icebp
cmpsl
mov
mov
repnz
inc
jae
dec
sbb
xchg
or
lret
xchg
jno
fistpl
push
push
idiv
add
adc
xor
aas
call
aas
clc
pop
mov
ds
in
adc
adc
pop
mov
pop
jl
cld
cld
pop
ja
adc
mov
js
lret
dec
fwait
in
repz
stos
pop
into
jmp
fnsave
jecxz
add
neg
sub
aad
mov
xor
push
xchg
push
cld
pop
std
inc
dec
xchg
mov
cmp
call
add
jmp
add
dec
inc
dec
inc
add
add
add
daa
fildl
inc
add
add
roll
add
add
add
call
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
sbb
push
add
and
add
add
sar
les
pop
add
add
adc
pop
add
push
pop
or
or
inc
add
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
dec
jno
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
pop
les
popf
jmp
xor
pop
gs
lock
pop
fldenv
in
and
dec
mov
iret
xor
incb
imul
cs
std
mov
cmp
dec
cli
imul
pop
xchg
jnp
stos
imul
ja
jne
cli
or
cmpsl
cmp
roll
loopne
xor
aas
sub
clc
jecxz
fwait
stos
sbb
add
outsl
xchg
les
pmullw
pop
shrl
inc
mov
test
lods
jbe
fstl
dec
sbb
pop
adc
cmc
cld
dec
je
push
mov
jp
andb
add
sub
xor
mov
lock
cmpsb
loope
jb
sbb
movsb
dec
dec
cmp
scas
sub
test
faddl
sub
out
int
or
leave
add
lcall
xchg
fcmovb
pop
push
adc
dec
icebp
push
jbe
push
mov
lcall
or
pop
mov
cwtl
insb
sub
inc
repnz
xor
jle
cmp
cli
pop
inc
jge
push
lock
fidivrl
cmp
out
in
in
sahf
fimuls
imul
dec
lock
roll
cwtl
sbb
jb
adc
dec
mov
add
mov
stos
cmp
in
pop
negl
jbe
push
stos
stos
fistps
fs
and
push
in
test
or
sbb
sbb
mov
clc
inc
pop
xchg
add
shrl
lock
cmc
shr
scas
lcall
jl
and
pop
sbb
sbb
fiaddl
mov
mov
mov
sub
repz
or
stos
xor
xchg
jo
mov
loope
pop
dec
incl
add
mov
mov
in
aam
mov
dec
cld
xor
xchg
mul
mov
adc
add
outsl
xor
push
les
pop
icebp
push
test
test
cmc
lea
ret
out
sub
inc
cmp
jae
aaa
test
loopne
push
rcrl
cli
sub
sub
cmp
ret
ds
loopne
mov
xlat
mov
inc
sti
sub
lds
and
lods
jns
cmp
rolb
dec
int3
push
ficompl
sub
movsl
ds
movsl
jle
aas
or
jge
cmp
mov
dec
xchg
jnp
jmp
add
xchg
out
xchg
inc
out
push
aam
addr16
add
xchg
adc
leave
js
out
adc
pop
loope
or
sahf
sbb
das
cs
xchg
xchg
jbe
add
mov
aad
xor
cmp
and
add
pop
pusha
adc
ret
pop
mov
jg
int
inc
inc
aad
fstl
pop
push
js
inc
xlat
jl
lods
imul
ret
ja
scas
out
mov
add
and
lahf
lret
cmp
movsl
jnp
sahf
lods
push
push
xlat
pop
adc
ret
mov
out
flds
add
add
fsubrs
jecxz
mov
lds
fsts
lods
add
leave
orb
pop
adc
fdivr
loopne
adc
dec
inc
cmp
add
pusha
enter
inc
add
add
roll
add
add
add
call
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
push
add
add
and
add
add
sar
les
pop
dec
mov
add
add
push
pop
or
or
inc
add
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
dec
jno
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
sub
call
inc
cmpsl
xchg
dec
and
dec
mov
int
pop
rol
mov
add
cmp
cmp
mov
jae
mov
fwait
inc
xchg
aad
add
aaa
fsubl
popf
mov
cmp
jnp
ret
or
push
out
push
push
arpl
jb
iret
ja
mov
mov
movl
xchg
cmpsl
int
push
xchg
sbb
xor
out
xchg
stos
mov
xchg
add
sbb
cltd
lock
loop
xchg
sub
shll
cmp
outsb
jne
bound
xchg
xor
pusha
mov
and
push
cmp
addr16
punpckhwd
notb
jae
adc
inc
xchg
icebp
jae
mov
loop
cmp
stc
dec
xor
inc
jo
or
xchg
adc
adc
in
out
xor
sti
sbb
push
fwait
movsl
cmp
lods
xchg
or
repnz
and
xchg
push
nop
stos
push
mov
in
sub
sub
inc
repz
jmp
mov
jmp
daa
dec
xor
gs
cmpsb
fld
imul
lods
push
roll
mov
test
shlb
xor
pop
fldcw
fldenv
mov
adc
push
xorl
sub
jg
fidivrl
loop
add
or
shrb
sbb
mov
add
sahf
cld
inc
icebp
in
iret
cmpb
lret
xor
lods
or
and
jno
or
push
dec
or
arpl
icebp
mov
pop
mov
xchg
jmp
ja
sbb
das
fidivl
mov
ret
bound
test
dec
shll
jl
mov
stc
jbe
cmp
mov
insl
insb
xchg
loop
mov
cli
jnp
pop
pop
incl
mov
mov
in
jge
incb
and
mov
cmpsb
call
cltd
push
mov
les
in
loop
aas
test
andb
jno
cmp
add
dec
jecxz
mov
lds
fwait
ret
lods
lea
pop
ficoms
xchg
imul
dec
jo
adc
mov
fdivp
in
jae
shll
hlt
mov
sub
test
inc
cmp
out
in
imul
add
js
mov
pop
lahf
cli
mov
add
pop
mov
stos
arpl
mov
pop
sbb
mov
and
add
mov
mov
sub
sahf
les
jp
jns
and
mov
push
fidivl
mov
mov
or
mov
shll
cmpl
pop
pushf
add
inc
cmp
adc
xor
push
dec
test
notb
repz
push
dec
clc
push
mov
imul
or
sbb
pop
push
xor
jbe
cli
jmp
cld
out
dec
mov
cmp
dec
out
mov
inc
xchg
daa
negl
scas
imul
out
test
add
add
popl
xor
into
and
scas
pushf
adc
ficompl
sti
fdivs
mov
icebp
shrl
inc
sbb
xchg
inc
mov
subb
mov
jp
fnstcw
jl
and
jg
jecxz
mov
shll
inc
mov
stc
sbb
inc
xor
push
cli
add
cmp
inc
adc
adc
call
push
cmpb
mov
xor
dec
fstps
sbbl
dec
xchg
aad
sbb
jmp
add
dec
inc
dec
inc
and
sub
daa
fildl
inc
add
add
roll
add
add
add
call
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
pushf
add
and
add
sar
les
pop
dec
loopne
dec
rorb
push
test
dec
xor
pop
or
or
inc
add
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
dec
jno
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
ja
xlat
lahf
adc
xor
ret
cmp
pop
adc
ja
loop
imul
mov
repz
inc
jo
mov
and
sub
lds
lods
int3
int3
mov
lock
pop
cmpsb
popf
lock
cmp
imul
js
inc
jnp
scas
sbb
push
add
cwtl
mov
add
mov
cmp
sub
ficompl
insl
jae
js
pop
mov
mov
mov
adcl
inc
sbb
mov
aaa
mov
push
aad
fsts
orl
aas
xchg
mov
shrb
mov
mov
push
sbb
adc
shrl
adc
shl
call
clc
cmp
and
loopne
clc
repz
jecxz
add
sub
addr16
or
push
sbb
pop
imul
in
xor
pop
push
js
js
out
icebp
xchg
lcall
loopne
push
push
in
push
fcompl
and
push
xor
loop
mov
aam
shll
mov
ja
mov
test
lds
leave
sub
pop
idivb
in
xchg
add
insl
pop
stc
cltd
ror
adc
or
loope
cli
or
fists
or
jae
xchg
sub
xchg
std
add
out
adc
xchg
int
pop
mov
ret
mov
das
jne
std
xor
dec
aad
xor
mov
dec
xor
fnsave
test
enter
add
inc
or
cmpsb
dec
lea
insb
lods
xor
jge
aas
mov
sbbb
mov
out
adc
adc
lods
sbb
jl
xchg
xlat
ss
xlat
pop
imul
jg
popf
cmp
incl
inc
pop
sbb
loope
scas
jg
gs
lock
sahf
adc
mov
mov
mov
popa
jecxz
mov
std
decb
push
mov
push
loope
dec
xchg
enter
shll
arpl
mov
es
jnp
jbe
push
stos
loop
dec
fcomps
ffree
cmpsl
fcmovb
sbb
pop
pop
pop
pop
lret
orb
push
xchg
imul
add
cmc
mov
push
push
cld
xor
jecxz
cld
das
xor
sbb
ret
adc
lcall
jg
ja
movsl
stc
icebp
pop
xchg
es
out
leave
mov
subb
out
jb
mov
jecxz
outsb
loope
or
mov
push
aaa
jge
mov
ds
clc
inc
jl
sub
jg
xor
mov
mov
mov
iret
jb
sbb
les
mov
mov
and
fistpl
xchg
jg
cmp
incb
repz
loopne
lret
cld
outsb
shll
or
xlat
pop
xlat
xor
pop
rcl
cmp
insl
cmc
test
cmp
inc
testb
pop
es
xchg
mov
outsb
inc
sbb
lea
aam
and
shr
cmpsb
inc
push
mov
test
ljmp
or
xchg
mov
cld
iret
out
push
dec
imulb
aas
pop
bound
negb
inc
popa
mov
xchg
out
repz
xchg
dec
push
mov
jbe
and
insb
jo
sub
outsl
mov
adc
or
popa
and
imul
je
syscall
jmp
and
jns
mov
out
negl
test
test
mov
xchg
enter
stos
cmp
incl
cltd
xchg
sbb
popa
out
je
mov
ljmp
mov
scas
pminub
gs
das
xor
xor
fwait
jns
adc
wrmsr
dec
ficompl
dec
sub
cmp
ret
leave
mov
jae
sub
repz
inc
mov
cwtl
cwtl
jge
jecxz
aam
fwait
push
add
mov
push
dec
divb
dec
loopne
ja
xor
push
mov
jle
cld
xor
shll
cld
aas
cwtl
data16
push
mov
iret
sub
dec
roll
nop
cwtl
roll
ret
addr16
mov
inc
scas
pop
push
arpl
fisttps
shrb
mov
jl
jecxz
adc
sarl
pop
jmp
sbb
in
mov
gs
scas
es
ja
sbb
enter
lret
stos
aas
xchg
aam
sbb
push
hlt
and
sar
add
mov
pop
imul
lahf
jns
fcmovnu
ficompl
mov
cmp
or
andl
xlat
dec
pop
jae,pn
aaa
jl
inc
jg
js
dec
mov
mov
push
mov
jno
outsb
div
dec
in
test
xlat
in
incl
cmp
mov
mov
insb
pop
out
push
ljmp
mov
lods
push
sbb
movsl
cmc
pop
pop
data16
outsl
repz
sub
xor
in
jo
xchg
pop
imul
iret
movsl
scas
ret
dec
arpl
and
mov
lods
mov
lods
pop
mov
mov
cmp
inc
or
dec
lods
incl
jge
bnd
clc
mov
int
addr16
adc
dec
xor
aas
xor
cld
cmp
sti
lret
lahf
or
outsb
xchg
movsl
leave
xor
lds
jo
mov
sbb
movsb
rcrl
sbb
repz
xchg
jno
jle
aad
adc
aas
mov
andl
aam
jne
adc
pop
push
and
mov
aaa
xor
and
inc
add
fisttpll
sub
mov
sti
lahf
int3
shll
fcmovu
xlat
inc
xchg
ds
mov
es
fcomp
pop
loope
xlat
mov
and
insl
test
daa
dec
orl
in
push
fistps
leave
and
xor
sub
xchg
pop
add
stc
ljmp
push
mov
adc
jb
push
lock
movsl
mov
jmp
icebp
inc
mov
out
dec
mov
lods
div
fldcw
or
inc
xor
dec
mov
lcall
mov
xlat
shrb
daa
lea
push
popl
imulb
lods
adc
add
or
testb
fisttpl
mov
out
jns
xor
mov
adc
imul
jmp
mov
jo
or
incl
test
int3
mov
es
repnz
xchg
xchg
je
pusha
cltd
ja
mov
aad
dec
sbb
mov
int
sarb
xlat
outsb
je
das
mov
gs
sbb
pop
in
dec
ds
std
fwait
cmp
mov
or
push
or
jne
icebp
dec
gs
dec
cmpsl
loop
test
loop
xchg
adc
loope
push
ret
test
jge
ljmp
mov
jbe
insl
cs
repz
imul
jl
repnz
in
fucomi
jg
inc
fbstp
lcall
cmpsl
inc
mov
xor
jo
mov
add
shr
outsl
je
dec
rcll
cmc
in
jbe
mov
xchg
lods
mov
cltd
rolb
sbb
ss
lahf
or
sahf
adc
incl
or
loope
fdivrs
addr16
cmp
adc
out
imulb
iret
in
in
and
sbb
leave
out
pop
mov
mov
iret
push
inc
sbb
out
negb
ficompl
cmpsl
icebp
mov
lock
xchg
or
popf
stos
outsb
lcall
sub
sti
push
roll
push
or
cmp
mov
adc
das
and
jl
and
push
rcr
scas
xchg
adc
and
mov
push
xchg
out
loop
add
mov
sbb
adc
ss
mov
push
xchg
movsl
leave
xor
cmp
clc
xor
pop
push
outsl
jne
sbb
cmp
mov
fildll
arpl
dec
add
repz
xchg
sbb
addr16
push
insl
in
cmpsb
sbb
mov
cs
pop
xor
cmp
push
ds
lock
mov
pop
mov
mov
clc
mov
cmpsb
aad
jecxz
cmp
mov
scas
dec
xchg
popa
mov
sub
add
fildll
addr16
pop
stos
jns
shll
or
pop
sarl
jl
lock
adc
dec
icebp
push
lods
cmpsl
push
out
push
xchg
push
aam
jmp
cs
mov
jns
jmp
nop
xchg
mov
inc
dec
pop
ss
dec
cwtl
subl
pop
stc
aaa
jg
mov
sarb
call
shll
lods
inc
push
mov
mov
outsb
out
cmpsb
adc
add
or
mov
and
jo
es
cmp
add
cmp
and
pop
inc
mov
inc
stos
pop
and
inc
add
add
xchg
fbld
mov
add
push
cmp
daa
clc
imul
push
icebp
dec
test
cld
pusha
icebp
xor
jmp
or
xchg
xchg
lret
cmp
lds
cmp
es
mov
les
dec
call
pop
es
imul
clc
out
inc
sahf
push
cld
or
outsb
push
aad
mov
xorl
sbb
outsl
or
mov
ret
fisttps
cmp
negl
lahf
movsl
pop
dec
mov
pop
jecxz
add
mov
loopne,pn
xor
scas
jp
jecxz
test
insl
mov
fcmovb
int3
mov
dec
nop
arpl
cmpsl
lret
xchg
aas
xchg
test
xchg
cmpsl
pop
mov
xchg
lea
inc
fcmove
push
or
or
inc
xchg
out
shrb
jnp
lods
fs
scas
or
rorl
push
dec
fisttpll
pop
sub
pop
mov
or
xor
mov
mov
jns
loop
shrb
and
test
xor
sub
xor
xchg
loope
xchg
pop
jb
aaa
mov
inc
pusha
mov
pusha
imul
xchg
fcmovnb
or
negl
nop
xor
and
xchg
repnz
xchg
loopne
adc
pop
clc
mov
loop
adc
and
ret
pop
xchg
lret
cs
loope
stos
inc
sub
jge
sbb
mov
add
fcoml
pop
lcall
dec
lahf
push
fcomps
jnp
adc
lahf
stc
out
frstor
xchg
movsl
pop
incl
xchg
cmp
js
dec
mov
enter
add
psraw
sbb
dec
xor
std
shlb
fcoms
jno
or
cmp
mov
push
incl
mov
jg
je
push
lahf
ja
jl
int3
iret
adc
ret
pop
jl
adc
daa
pop
loopne
cmp
out
inc
or
lock
mov
mov
ds
inc
orb
popf
lcall
cld
jne
xsaves
or
loope
pusha
jmp
sub
je
pop
and
rcr
pop
loope
or
cmp
lea
inc
pop
gs
jle
mov
shll
sbb
lret
das
pop
push
cmpsb
xor
shlb
fs
and
aam
or
add
cmp
hlt
push
mov
and
sbb
sub
test
and
jge
push
scas
mov
dec
outsb
test
xor
push
int
rcrl
xchg
jno
jb
aaa
or
or
pop
xchg
pop
mov
pop
or
popf
inc
popf
mov
and
cld
loope
rol
mov
sbb
xchg
ss
ror
data16
ret
mov
add
adc
incb
push
add
scas
push
inc
cmc
jp
ja
addr16
adc
cs
mov
aaa
in
in
lods
inc
jecxz
mov
ffreep
fimuls
aam
sub
mov
mov
cmpsb
jge
dec
xchg
fs
cmpsb
mov
jl
and
add
mov
jl
clc
dec
gs
jmp
pop
pop
mov
bound
popa
pop
jae
ljmp
jbe
lds
rcrl
int3
xor
nop
enter
lcall
or
out
cld
dec
adc
stos
push
xchg
movsb
fcoml
js
inc
sub
push
and
jmp
scas
inc
adc
mov
sti
stc
gs
xor
ret
lock
mov
stc
es
mov
cltd
cmpsl
test
and
dec
outsb
adc
push
xlat
aas
out
in
adc
inc
int
scas
push
lret
out
pop
out
pop
movsl
iret
cld
mov
cmp
pop
loopne
xchg
pop
cld
xchg
inc
cld
daa
mov
hlt
sub
lahf
div
lret
and
push
push
ja
aas
repnz
sub
incb
pop
jg
dec
pop
lock
frstor
mov
das
decb
ljmp
cmc
stos
pop
or
stos
aam
sti
xlat
stc
xchg
insl
inc
ror
jl
and
add
jecxz
mov
shll
inc
mov
adc
inc
mov
pop
add
cmpb
inc
adc
adc
mov
rolb
cmpb
mov
xor
ret
inc
flds
fnstcw
ja
enter
decl
xchg
pop
sbb
jmp
add
dec
inc
dec
inc
and
sub
daa
fildl
inc
add
add
roll
add
add
add
call
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
mov
add
add
adc
add
inc
add
dec
loopne
dec
rorb
push
test
dec
xor
pop
or
or
inc
add
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
dec
jno
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
aas
clc
sub
pop
mov
mov
pop
lods
loope
outsl
mov
mov
stc
and
fcmovb
cmp
movsl
mov
insl
insl
imul
xor
mov
add
orb
lahf
mov
lock
pop
clc
lret
push
jl
addr16
scas
ljmp
push
and
mov
sub
lea
add
jge
incl
add
clc
inc
cmpsl
ljmp
fcomps
ficomps
mov
repz
test
pop
mov
mov
rcll
cs
ss
and
stc
pushf
cmpps
jmp
mov
loope
mov
sbb
in
lods
data16
loop
nop
jno
push
push
sub
pop
cmp
mov
jbe
ds
ljmp
xor
inc
mov
sbb
cli
je
and
xchg
xchg
cld
adc
mov
sub
mov
daa
in
mov
jge
sahf
xor
gs
lock
mov
ljmp
or
jnp
or
rcrb
adc
pop
push
pop
sub
out
jl
pmaxsw
ljmp
jle
cwtl
fdivrl
enter
fcmovnu
adc
cltd
inc
push
jg
stos
cltd
mov
xchg
mov
pop
and
jg
stc
sahf
xchg
or
or
stos
sarb
add
adc
neg
mov
mov
lods
cs
data16
test
mov
popa
popa
test
shl
outsb
popf
mov
pop
das
lock
mov
fisubs
lahf
ret
mov
dec
adc
xchg
test
hlt
fcomps
mov
mov
mov
xchg
sub
mov
dec
scas
cmc
mov
jnp
and
sub
push
xlat
mov
mov
lds
jp
mov
std
mov
dec
into
movsl
mov
push
xor
mov
jg
and
lcall
loope
mov
cmpsl
ljmp
js
xor
push
dec
adc
mov
jle
cltd
jb
lret
cmpsl
adc
aaa
fs
xchg
sub
adc
clc
mov
sub
bound
loope
jle
cld
bswap
jg
incl
mov
je
adc
lcall
and
mov
and
jns
outsb
xor
mov
pop
xchg
cmp
and
sbb
cmc
sub
jge
jmp
mov
cmc
scas
mov
cmpsl
sbb
int
incl
adc
ds
sarl
adc
jae
mov
push
int3
je
lcall
xor
ja
scas
in
mov
sahf
cltd
lods
clc
daa
loopne
movsl
loope
mov
xor
cli
push
fldenv
in
xchg
in
add
pop
popf
cmp
aam
filds
cmpsb
push
lretw
jns
mov
loop
xchg
fwait
jmp
mov
add
xchg
pushf
addr16
loope
add
and
cltd
fadds
in
rcll
into
icebp
push
mov
xor
mov
sbb
adc
iret
imulb
mov
imul
inc
xlat
add
mov
fists
iret
mov
ss
or
or
mov
sbb
dec
fildll
in
pop
arpl
dec
xor
test
adc
pop
je
cmp
sahf
jae
movsl
es
jmp
imul
ds
mov
jp
loope
lock
les
les
mov
sub
mov
adc
and
pop
xor
sti
iret
push
mov
filds
icebp
cmp
dec
jb
bound
mov
sbb
pusha
repnz
push
jnp
rcll
rcl
bound
jno
dec
movsl
insl
jg
out
das
mov
xor
xchg
push
rclb
std
fwait
in
sub
shl
das
adc
push
shrb
mov
mov
lahf
lods
call
aaa
loope
jg
jl
xchg
lds
mov
lcall
mov
call
sub
scas
mov
mov
ja
xor
mov
adc
cmp
loop
xor
int3
pop
push
push
add
jne
and
gs
and
imul
mov
adc
aam
enter
or
xchg
xor
and
cli
pop
xchg
fimull
mov
push
cmp
xorl
pop
pop
inc
sub
iret
imul
push
pushw
rcll
lret
add
jns
shll
sahf
xor
rolb
push
fwait
stos
or
mov
push
repnz
jb
leave
rorl
andl
dec
sub
stos
daa
cwtl
or
mov
sub
loop
cmp
adc
rcrb
fsubrp
ja
dec
cwtl
fnstcw
insl
sbb
xchg
jecxz
and
dec
xchg
movl
xor
in
iret
ret
lahf
mov
ss
jno
dec
mov
pop
das
fsubrs
xlat
pushf
outsb
fnsave
jae
push
imul
mov
imulb
cmc
push
and
scas
sbb
add
dec
stos
js
jle
clc
out
sbb
mov
dec
push
cmp
inc
mov
add
ds
cld
xchg
ret
mov
movsl
sbb
jns
dec
jne
cmp
out
cs
repz
js
pushf
imul
stos
dec
push
mov
jae
ret
loop
das
add
cs
dec
mov
xchg
xchg
cmpsl
jmp
mov
mov
repz
sub
adc
fs
sbb
mov
jle
std
mov
lock
lds
je
das
jle
dec
lock
cmc
imul
jmp
dec
push
sbb
and
dec
cltd
jno
cwtl
lods
mov
mov
add
sahf
adc
lahf
fcmovnu
dec
ficoms
repnz
pop
das
xor
jbe
stc
fistl
js
lds
mov
ds
cmpsb
mov
cli
xchg
jmp
xchg
repnz
mov
jae
add
mov
roll
stos
mov
les
pop
pop
push
sahf
cmp
leave
outsb
cmpsl
rcll
ffreep
lcall
dec
sbb
mov
jnp
fidivrs
pop
popf
sub
or
jns
lret
pushf
push
jecxz
mov
clc
pop
icebp
and
cmp
loop
jbe
push
mov
sarb
jnp
movsl
fldt
mov
dec
hlt
stc
mov
ds
imul
adc
enter
in
mov
pop
loopne
mov
and
pop
sar
cmp
mov
dec
push
cltd
jae
jno
add
pop
dec
mov
sti
inc
fisubrl
mov
xor
add
mov
mov
xor
fs
loopew
out
xor
sub
mov
bound
pop
test
xchg
fldenv
movsb
adc
test
shrl
sti
dec
imul
outsb
cmp
fisubrl
in
je
fldenv
call
shll
jnp
mov
mov
lea
adc
push
addr16
xorl
lahf
adc
pop
fidivs
adc
in
outsl
inc
mov
and
lea
xchg
incl
imul
divl
mov
sbb
pop
in
addl
shlb
jge
mov
pop
jmp
push
mov
in
out
scas
xchg
dec
mov
mov
mov
mov
pop
movsb
xor
or
xor
jmp
lcall
lret
pop
ret
sbbb
subl
mov
xor
loope
shrb
lea
insl
jl
inc
sbbb
jnp
mov
lahf
ffree
push
add
jmp
push
vunpckhps
ds
jg
ljmp
mov
jp
mov
sbb
inc
rcrb
movsb
push
mov
mov
jmp
popf
icebp
jl
lock
push
pop
push
lods
into
mov
into
jmp
in
cmpsl
xor
out
dec
outsb
and
adc
iret
lcall
lret
pop
mov
cmp
shrb
inc
rolb
sub
xor
pop
xchg
jg
movb
addb
gs
xor
pop
movsl
inc
cli
push
xchg
jg
push
mov
jnp
je
xor
into
insl
dec
bnd
add
push
int3
push
adc
cmpsl
ret
jo
cs
mov
jb
add
cmpsl
addl
in
out
lods
fisttpl
clc
dec
cld
aas
test
mov
scas
insl
fldenv
shrl
pop
out
test
or
pop
scas
std
xchg
mov
rcrb
icebp
add
push
push
lcall
inc
insl
imul
pop
ljmp
xchg
lret
sbb
xchg
loopne
sbb
jnp
mov
pop
mov
dec
lahf
loope
adc
adc
dec
addr16
pop
lods
cmp
loopne
dec
and
mov
in
lods
push
int3
in
jno
paddw
clc
outsl
loop
or
fisubl
dec
jbe
aaa
xchg
jle
sarb
ret
add
arpl
xchg
add
xchg
dec
mov
dec
inc
das
out
test
ds
jg
js
push
icebp
iret
lea
and
push
mov
movsl
loope
iret
lahf
outsl
sbb
xchg
shrl
enter
or
mov
in
pop
sbb
xchg
sbb
clc
pop
mov
push
rcl
dec
shrl
xchg
dec
fs
testb
dec
fbstp
xchg
push
push
sti
sub
jle
std
xchg
cmpsl
mov
mov
ss
adc
jbe
loop
jae
push
incl
addr16
std
cltd
outsl
pusha
adc
jne
mov
push
adc
mov
fdivrp
inc
sar
popa
loopne
arpl
fisubrs
jl
sbb
in
es
imull
cwtl
mov
push
add
cmpsb
push
cmp
loope
mov
filds
outsl
jl
daa
pop
adc
xchg
sti
inc
ret
mov
cmpsl
mov
jne
bswap
jnp
test
dec
dec
xchg
mov
push
add
inc
mov
loope
pop
lea
adc
and
adc
jb
xor
jnp
jnp
or
dec
testb
sbb
les
pmullw
jle
cld
dec
clc
jae
sti
dec
lock
mov
insl
mov
cltd
cmp
adc
mov
aam
bound
das
xchg
repz
jo
sbb
mov
icebp
sbb
cmp
loope
imulb
fildll
add
dec
loopne
fidivrl
shl
std
cmpsl
idiv
repz
jno
gs
mov
lret
jl
test
cld
incl
adc
mov
shl
mov
cmp
pop
sub
insl
outsl
dec
xor
sbb
loop
jno
mov
ja
imul
adc
ret
inc
in
xor
loope
lods
mov
lods
dec
cmp
adc
sahf
lret
mov
dec
cmpsl
jg
xchg
mov
jno
stc
rolb
sbb
enter
inc
sar
data16
pushf
cmc
lahf
mov
pop
sbb
leave
xor
mov
out
mov
int
mov
nop
lret
mov
pop
scas
and
push
xor
mov
dec
test
jp
cmpsl
jg
cmpsl
pop
jns
dec
mov
scas
inc
rolb
pop
cwtl
xchg
cmp
movsb
mov
xor
and
cs
push
push
push
mov
movlhps
cld
inc
clc
dec
loopne
adc
mov
popf
int3
push
rcll
aad
adc
les
dec
cmp
dec
scas
mov
mov
xor
push
pop
test
aas
pop
test
pop
mov
insl
and
xchg
lea
add
les
sbb
mov
hlt
into
ja
sub
mov
dec
in
fwait
icebp
and
lods
jecxz
or
mov
aad
shrb
stc
add
cmpsl
mov
insb
out
icebp
push
loop
jo
push
sub
ret
fistpl
inc
lret
sbb
out
sbb
jle
xchg
push
xchg
aad
leave
in
gs
pop
and
push
or
aas
int3
shrl
aas
js
lcall
scas
adc
mov
push
push
out
sbb
jg
and
sbb
in
stos
sbb
pop
cwtl
dec
jbe
jp
lods
test
inc
dec
imulb
push
push
add
jl
icebp
aad
lea
icebp
mov
inc
sub
popa
sbb
in
loope
fcmove
push
subb
popf
fwait
or
and
pop
add
cmpsb
popf
adc
std
mov
cld
stos
xchg
clc
fwait
lock
clc
mov
inc
cmpsl
jmp
cmpsb
loop
imul
and
sbb
int
and
dec
cmpsl
mov
cmp
out
mov
jno
dec
pop
out
out
aas
mov
fwait
jno
dec
add
lahf
xor
fldcw
loop
sub
sti
lods
inc
adc
aas
pop
stc
jmp
std
lcall
clc
push
testb
lcall
mov
jno
sbb
into
and
xchg
jns
or
mov
fstps
cmp
mov
dec
mov
add
cmp
sub
jb
in
add
xlat
das
iret
and
hlt
add
int
popl
push
test
gs
add
sbb
fisubl
cli
pop
lea
push
mov
fs
mov
pop
sub
xchg
js
gs
test
test
mov
xchg
sbb
movsl
mov
adc
bound
ja
push
xor
mov
sbbl
incl
enter
fs
dec
std
jge
into
cmpsb
insl
fistl
cmpsl
lods
lret
into
mov
add
incl
ret
mov
loopne
cmp
push
aas
mov
aas
icebp
jl
jg
popf
sarb
clc
int
std
cltd
push
stc
xchg
jecxz
inc
pop
pop
pop
enter
repz
adc
lods
cmp
mov
pop
or
xor
pop
xor
inc
imul
dec
sarl
xchg
out
loopne
out
loopne
push
lret
icebp
adc
cli
ljmp
ret
dec
pop
outsl
cmp
int
les
dec
iret
ds
outsl
cld
sub
popf
out
adc
mov
pop
adc
mul
or
and
mov
pop
insl
inc
testb
cli
ljmp
sub
or
mov
and
bswap
movb
out
dec
push
aas
lock
dec
push
pop
lock
jg
iret
cli
ja,pn
clc
dec
imul
ficompl
pop
xlat
push
repnz
ret
cld
iret
movsl
leave
dec
inc
push
outsl
cmpsb
cmp
inc
and
imul
inc
call
pusha
jae
loopne
and
mov
jg
cld
jg
ds
sub
testl
push
jns
lcall
sub
incl
jb
push
push
push
mov
idiv
aaa
push
out
andl
mov
repz
cld
mov
dec
cld
aas
int3
cli
cmp
jmp
pop
cmp
movb
mov
pop
fs
fildl
add
dec
xor
adc
push
push
dec
add
jnp
pop
std
mov
nop
cli
call
and
and
xor
mov
es
sub
xchg
imulb
jge
pop
arpl
mov
daa
dec
je
movsl
mov
mov
imul
xchg
stc
incl
xchg
popf
pop
jae
sbb
aad
xor
push
icebp
xor
cli
cmpsb
mov
jae
pop
fcmovnb
adc
jae
into
icebp
stos
mov
add
mov
ss
cmpsl
pop
xor
pop
imul
xor
xor
je
pop
lds
cmpsl
lret
cmpsl
jg
ficoml
pushf
clc
mov
add
iret
add
cli
and
iret
jns
movntq
push
icebp
sub
xlat
out
shlb
cmc
push
sbb
xor
mov
incb
cld
cmpsb
jg
ljmp
filds
xor
dec
pop
repz
cld
inc
pop
mov
push
and
testb
sbb
sbb
std
cmp
push
cs
cmpsb
push
jg
je
inc
aas
repnz
aam
stc
clc
imull
inc
hlt
inc
test
mov
icebp
adc
daa
jmp
pmullw
das
clc
arpl
push
pop
sbb
xchg
loop
dec
and
cli
jb
mov
out
inc
inc
xchg
into
mov
cmp
dec
repnz
aas
mov
push
mov
dec
jbe
xor
jg
lds
pop
ret
inc
ds
ret
xchg
iret
movsb
dec
loop
adc
xor
adc
mov
movl
out
decb
xchg
scas
ret
stos
aaa
sub
push
or
pop
shll
jne
xor
das
lock
push
icebp
insb
jp
fwait
dec
rolb
xchg
repnz
push
aam
xor
int3
int3
or
xor
jns
push
arpl
mov
rcl
hlt
mov
mov
mov
xorl
dec
jb
and
imul
dec
and
mov
in
jp
std
and
incb
and
shlb
jbe
cltd
push
xchg
sti
das
lock
les
mov
sub
sbb
fdiv
inc
pop
fcmovu
sub
mov
leave
jg
and
and
mov
push
rcrb
sbb
mov
pop
lds
adc
aas
lock
das
sub
std
lods
loop
cli
or
pop
clc
sub
sbb
sub
repz
sbbb
mov
push
pop
repnz
notb
jle
sbb
repz
sub
aas
fdivrl
lret
sub
adc
fcmovne
imul
add
enter
add
jecxz
mov
test
fnstcw
xor
adc
pop
add
fcos
dec
inc
inc
aad
cld
inc
jne
pusha
rolb
or
aad
mov
jmp
andb
fnstcw
andb
cs
xlat
mov
aad
mov
push
inc
cli
dec
pop
mov
push
adc
stc
and
andb
adc
incl
icebp
add
fdivr
loopne
adc
dec
inc
and
sub
daa
fildl
inc
add
add
roll
add
add
add
call
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
test
add
add
adc
add
inc
add
dec
loopne
dec
rorb
dec
in
dec
xor
pop
or
or
inc
add
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
dec
jno
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
ret
pop
mov
pop
pop
mov
scas
scas
sar
fldl
mov
push
xchg
mov
xor
jbe
mov
add
push
inc
fidivl
fildl
push
movsl
sub
shll
xchg
stc
xor
cmpb
daa
std
repnz
lea
mull
dec
incl
cmp
fdivrs
js
adc
mov
repnz
in
adc
or
out
xchg
and
adc
divb
mov
sar
add
repz
in
testb
out
lahf
test
jge
out
addb
cmpb
inc
fadds
inc
enter
jae
pop
adc
sub
jecxz
mov
lds
mov
inc
and
add
rolb
inc
aad
pop
or
pop
adc
pushl
loope
jmp
add
dec
inc
dec
inc
cmp
shlb
daa
fildl
inc
add
add
roll
add
add
add
or
pop
push
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
dec
add
and
add
jnp
dec
mov
push
adc
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
jp
and
scas
and
div
jnp
dec
jo
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
xlat
ret
ficompl
mov
lods
cld
xchg
pop
or
push
lods
mov
add
mov
push
mov
std
xchg
loope
cli
pop
hlt
lahf
cld
add
ds
inc
test
inc
jg
sub
nop
sti
push
stos
push
push
push
outsl
int3
bnd
in
fstps
loopne
jg
pusha
rorb
clc
lcall
mov
jae
out
int
or
pop
repz
ja
mov
and
sub
movsb
popa
in
mov
imul
jl
loope
arpl
rcr
iret
jecxz
or
lret
cs
scas
scas
ljmp
sub
je
inc
adc
insl
nop
inc
nop
xchg
inc
push
xchg
inc
popf
orb
arpl
sub
lods
sbb
lea
movsb
mov
jnp
aad
popf
cmpsl
dec
cmpsl
enter
imul
enter
and
mov
out
and
inc
cld
xor
lock
xchg
loope
sbb
xchg
mov
clc
mov
or
scas
cmpsl
sub
into
cwtl
push
adc
or
dec
cmp
lahf
mov
pop
mov
push
jg
imul
lret
cwtl
loopne
xchg
repnz
outsb
and
jae
fwait
and
and
xor
js
jp
test
push
aad
shll
mov
push
sub
icebp
add
stc
push
and
sub
in
push
cltd
fistl
pop
sbb
hlt
das
jmp
sbb
pop
inc
cld
and
fimull
gs
cltd
mov
mov
movl
arpl
lret
dec
adcl
mov
lcall
aam
jle
call
addr16
mov
dec
sbb
mov
cmp
adc
ret
ja
into
lret
jno
shlb
and
sbb
mul
xor
adc
aaa
dec
incl
shll
lcall
pop
les
hlt
or
daa
sbb
rcr
or
cmpsb
adc
fimull
inc
mov
cmp
clc
inc
mov
aaa
loopne
sarb
sub
cmp
mov
and
pop
sub
inc
int
inc
pop
adc
xor
in
xchg
xlat
rcr
int
mov
insb
xchg
lds
mov
cs
nop
sub
add
cmp
jne
push
inc
pop
bound
jg
fsts
add
fdivr
loopne
adc
dec
inc
add
pusha
enter
inc
add
add
roll
add
add
add
add
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
sbb
dec
add
and
add
sar
les
pop
add
add
adc
pop
add
push
pop
or
or
inc
add
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
dec
jno
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
sti
rcrl
loop
out
mov
testb
push
lcall
aad
mov
pop
dec
cld
sub
dec
incl
sbbl
clc
stos
in
push
clc
subb
scas
and
popf
outsb
in
cmc
cld
mov
out
xor
xor
jecxz
hlt
js
mov
cmp
mov
mov
cwtl
jp
imul
pop
daa
insl
mov
mov
icebp
das
decb
incl
loop
leave
sub
jno
xchg
sti
dec
xchg
push
pop
adc
jle
mov
mov
les
mov
addb
jge
push
icebp
jge
mov
or
fidivrs
int3
roll
push
js
and
add
gs
mov
fnstcw
inc
xlat
jle
mov
pop
inc
dec
insl
inc
fistpl
sti
cmp
mov
insl
dec
push
xchg
sub
scas
pop
loope
in
or
cmp
rorl
outsb
mov
daa
sub
imull
stc
sbb
or
or
fdiv
inc
fisubs
lock
mov
adc
pop
lods
sahf
push
mov
jne
dec
and
xchg
lret
jo
inc
loopne
inc
sbb
ret
ficoms
clc
subl
ret
test
mov
jno
imul
sbb
push
mov
pop
inc
sbb
add
sub
lret
enter
push
xchg
lcall
outsl
in
test
loopne
pop
push
jmp
dec
rol
jo
dec
gs
enter
loopne
lods
or
push
lret
ss
adc
das
adc
pop
mov
out
mov
subl
xchg
dec
mov
pusha
ret
dec
pop
adc
inc
in
adc
mov
pop
clc
or
enter
int3
xchg
lahf
incb
aas
decb
lret
adc
std
or
rorl
stos
out
cld
es
cld
jp
clc
dec
xlat
sti
mov
jmp
inc
fucomi
js
out
jg
jae
add
mov
push
lock
fisttps
jl
loope
sbb
push
aad
cmc
inc
popf
mov
cmpsb
cmp
pop
aam
ds
inc
scas
icebp
aas
sarl
fcmovbe
cmp
repnz
pop
jo
xchg
in
jp
inc
nop
mov
in
sahf
xchg
insl
hlt
pop
pop
fxch
fdivrl
xlat
jne
mov
addr16
mov
mov
mov
mov
outsb
loope
bnd
incl
inc
je
clc
sbb
mov
mov
xor
mov
fwait
outsl
cmpsl
push
ja
mov
or
test
xchg
mov
adc
lret
sub
sbb
aas
loope
hlt
and
incl
rcrb
xor
fstps
stc
jle
lock
ja
adc
mov
stos
xor
clc
inc
aas
call
aas
mov
mov
cld
fnstsw
idivl
icebp
xchg
loopne
addr16
sbb
add
inc
adc
add
popa
push
add
add
incl
and
jg
jle
jg
repnz
xchg
adc
cmp
mov
mov
lock
inc
jmp
inc
loope
mov
adc
notb
lahf
xchg
cld
aas
enter
or
lahf
push
icebp
xchg
stos
ljmp
and
and
sbb
add
aaa
div
xchg
mov
cmpsl
dec
push
dec
pop
fistps
fnstcw
fdivr
loopne
adc
dec
inc
add
add
add
daa
fildl
inc
add
add
roll
add
add
add
call
or
or
or
or
or
adc
adc
push
adc
adc
pop
sbb
adc
adc
adc
inc
add
inc
xor
or
or
incb
inc
pop
inc
add
or
pop
add
add
add
adc
add
inc
add
add
add
adc
pop
add
push
pop
or
or
inc
add
add
add
dec
push
cmp
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
dec
jno
add
dec
arpl
dec
jl
dec
jo
add
es
dec
jno
ja
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
dec
mov
and
xchg
fiaddl
or
add
add
add
add
mov
fcompl
pop
fcmovu
dec
xlat
ja
gs
pop
dec
mov
inc
add
fcomip
add
add
es
repz
imul
xchg
xchg
push
iret
cld
and
sti
xchg
cmp
inc
dec
es
in
inc
sub
cmp
pop
xchg
dec
sti
sub
testb
sub
jns
xchg
lods
jb
add
ss
adc
mov
add
call
testl
mov
dec
sbb
jno
cmp
test
movsl
fnstsw
popf
jb
mov
mov
mov
stos
push
icebp
rol
sbb
push
sub
push
out
cmpsl
mov
adc
jle
dec
mov
hlt
fistpl
cmp
shll
fwait
add
pop
cltd
or
mov
stc
aad
sbb
loope
adc
inc
cli
ljmp
dec
insl
and
push
loop
int3
mov
lea
imul
adc
and
mov
add
jnp
mov
loop
adc
adc
shl
push
push
mov
sub
xor
adc
xor
lods
dec
and
inc
xchg
loope
push
aaa
jns
out
cmpl
psubb
jge
push
shll
push
aad
mov
icebp
jmp
push
in
movsb
mov
fcoms
fisubrs
mov
sub
out
push
sbb
clc
inc
hlt
out
cli
add
jg
add
and
pop
cmpsl
loopne
sar
mov
ret
pop
sti
dec
fwait
jnp
ja
xlat
dec
shll
in
sub
cmpsb
sbbb
mov
adc
repz
add
shrl
cmp
mov
mov
sub
ja
in
pop
out
and
and
lea
incl
push
lock
movsl
insb
outsb
es
ja
insb
lea
sub
addl
push
mov
add
pop
sarb
and
inc
lock
fstpt
sub
pop
lock
jmp
hlt
sub
xchg
adc
dec
jl
adc
add
in
sub
xor
jg
jmp
lock
xchg
cld
cmp
jle
mov
xor
sub
sbb
xor
dec
out
mov
pop
jb
cmpsl
and
add
adc
cld
sbb
pop
cmpl
push
ss
mov
shrb
in
cwtl
loopne
dec
cmp
test
clc
arpl
adc
jg
test
xor
sub
stos
push
in
aas
lods
push
out
push
aam
xor
lods
jge
cmpsb
ret
arpl
pop
test
mov
dec
sbb
je
mov
and
stc
cmp
push
push
mov
flds
add
jbe
or
add
jecxz
mov
xor
mov
sahf
add
inc
pop
add
jo
pop
xor
cmpb
or
jns
cld
inc
mov
jns
mov
mov
dec
mov
and
inc
mov
stc
adc
sbb
cmp
icebp
inc
mov
and
lret
into
int3
in
mov
add
adc
std
jg
mov
mov
and
cmp
push
xchg
dec
icebp
push
fsts
inc
cmp
fldcw
cmp
push
push
inc
add
xchg
aam
jae
gs
jo
mov
xor
fldenv
jo
fcompl
sbbb
inc
inc
mov
outsl
fs
fsts
fadds
xor
push
loopne
imul
outsl
adc
aaa
jmp
cltd
fldl2t
sbb
sbb
loope
pusha
shll
pop
jo
fsubrs
cs
das
inc
xor
fdivr
inc
fcoms
xor
mov
dec
fdivr
dec
fdivrs
rorb
jo
fdiv
das
cmp
or
mov
inc
mov
inc
mov
cmp
jns
mov
aas
jo
test
xor
jno
dec
jo
jmp
xor
xchg
inc
xor
xor
fldl2e
fldenv
fcomps
fldcw
lods
fcomps
mov
mov
scas
fmuls
js
test
test
jne
xor
ret
mov
test
jp
je
inc
jecxz
icebp
mov
mov
add
xor
xor
add
test
je
mov
inc
pusha
es
je
inc
sar
inc
xor
je
jmp
lea
sub
ret
call
cld
jmp
roll
add
loopne
cmp
push
movl
or
push
call
add
mov
add
dec
jne
pushl
call
les
clc
pop
lea
push
lea
mov
add
xor
dec
jne
movb
pop
mov
pop
ret
inc
bound
rolb
adc
scas
add
cmc
ret
dec
repnz
inc
repz
inc
fimull
in
js
push
adc
cld
mov
mov
enter
arpl
pop
push
addr16
dec
inc
call
inc
inc
or
insb
inc
inc
lock
inc
jb
hlt
mov
dec
mov
mov
test
je
push
call
lock
repz
inc
repz
add
roll
mov
test
jne
mov
cmpb
inc
adc
pop
cmp
adc
inc
repnz
adc
inc
lock
fildl
dec
mov
rclb
pop
cld
push
push
lds
push
int3
and
test
add
test
je
push
push
call
inc
pusha
pop
dec
jne
call
push
icebp
pop
cld
call
xor
push
lea
mov
pop
inc
push
push
mov
push
cmp
jg
loope
cmp
dec
jns
dec
mov
call
pop
cmp
jl
pop
loope
inc
inc
and
add
mov
push
enter
xchg
push
dec
mov
add
add
add
push
mov
icebp
adc
pop
pop
pop
jmp
xor
push
push
inc
pop
call
push
inc
es
inc
add
inc
mov
icebp
push
ret
test
inc
adc
mov
inc
pop
dec
jb
inc
push
imul
das
add
dec
inc
push
adc
pop
adc
jno
sbb
icebp
bound
bound
add
shrb
push
dec
inc
fs
out
popa
mov
inc
adc
gs
inc
adc
inc
pop
jae
inc
jbe
jae
push
and
inc
mov
bound
push
mov
inc
ret
call
loope
loop
push
sbbb
inc
nop
xor
or
push
es
pop
orb
ret
mov
ret
inc
add
dec
and
test
jne
xor
push
push
push
cmpb
je
dec
ret
adc
or
cmpb
inc
ret
test
mov
cmp
jne
or
je
cmp
and
in
sbb
call
jne
sub
sub
jne
add
add
xor
shlb
rol
rcl
inc
loope
xor
add
lock
inc
mov
es
shll
add
int
popa
lret
inc
pusha
les
dec
rolb
mov
rclb
loopne
mov
pop
mov
pop
push
pushl
call
push
inc
loope
hlt
call
cmp
rorl
xchg
shlb
addl
inc
insl
jns
insb
xchg
fwait
addr16
sbb
push
mov
pop
add
loopne
aam
js
arpl
pop
movsl
adc
fnstcw
mov
or
inc
loopne
insl
cld
fistpll
insl
jo
mov
inc
fs
jo
adc
inc
mov
clc
mov
enter
inc
ret
loop
dec
lock
mov
add
pushl
leave
push
es
mov
pop
inc
push
push
mov
push
cmp
jg
loope
stc
cmp
push
mov
dec
jns
jp
call
mov
pop
cmp
jl
pop
sub
loopne
add
mov
insl
test
pushl
jns
fs
jns
in
push
call
push
rclb
es
adc
loopne
pop
movd
inc
push
inc
loopne
cmp
mov
inc
inc
xor
inc
fmull
std
or
je
jo
dec
jle
inc
arpl
out
and
aam
jbe
dec
jp
inc
push
dec
jo
mov
fucomp
call
cli
dec
add
shrb
mov
call
xchg
gs
mov
dec
inc
pop
dec
inc
mov
mov
add
add
shlb
dec
push
outsl
clc
dec
pop
inc
dec
pop
xor
orl
jmp
pop
jmp
mov
loope
inc
loopne
call
pop
addr16
add
addr16
dec
push
mov
inc
jecxz
adc
pop
mov
jnp,pn
js
mov
mov
pop
subb
dec
nop
inc
xchg
call
sub
or
insb
inc
and
fsubr
je
lcall
fadd
loope
add
push
call
mov
rep
dec
addb
dec
movsl
inc
icebp
dec
add
daa
inc
xor
dec
icebp
or
inc
pusha
add
jle
add
add
pop
mov
call
or
inc
and
idiv
decl
clc
movl
add
roll
stc
cmp
je
repz
js
inc
push
lock
push
jle
mov
clc
add
and
pop
loope
clc
cld
mov
pop
xchg
jmp
dec
push
add
push
push
push
lea
sub
mov
cld
mov
call
pop
pop
push
cmc
jge
movl
push
xchg
test
and
inc
loopne
pop
jno
adc
inc
adc
dec
mov
gs
inc
inc
pushl
rorb
dec
bnd
cs
cmc
in
inc
rorl
test
je
pop
add
cmc
incl
call
popa
jbe
repz
inc
hlt
popa
mov
inc
inc
dec
mov
pop
adcb
mov
hlt
dec
mov
subb
adc
jecxz
inc
push
or
inc
adc
int
add
gs
ljmp
push
push
xchg
inc
inc
dec
roll
and
addr16
xchg
arpl
inc
xchg
sbb
ret
pop
push
dec
jne
jmp
inc
xchg
sbb
push
inc
pusha
or
inc
xor
push
call
or
xchg
sarb
mov
dec
jae
pop
adc
cmpl
lock
pop
rorl
ljmp
push
inc
rcrb
jmp
xchg
pop
inc
cmpsb
mov
loop
rolb
pop
mov
push
inc
xchg
in
cmpl
mov
adc
rolb
pop
nop
fs
lahf
pop
xor
scas
data16
inc
js
inc
mov
rorw
pop
xchg
or
mov
push
lods
ljmp
inc
test
xor
push
add
mov
jne
push
std
clc
mov
repnz
and
inc
in
push
jbe
inc
push
add
hlt
inc
repz
inc
cmc
lock
repz
inc
repz
inc
add
dec
inc
mov
inc
mov
inc
test
dec
and
adc
pop
push
push
push
gs
push
adc
mov
xchg
call
inc
push
inc
inc
jo
mov
inc
rolb
dec
push
lcall
repz
call
cmc
in
repz
repz
call
inc
js
mov
cld
rclb
sbb
jnp
xor
xor
ja
or
cmpl
andl
pushl
push
sub
mov
inc
loopne
dec
or
mov
test
inc
addl
or
inc
push
jns
jle
jl
stos
pop
lock
add
insl
movsb
adc
inc
xchg
jnp
xchg
jle
dec
push
adc
dec
push
and
decl
cmp
and
xor
loope
nop
add
and
roll
mov
mov
enter
inc
add
hlt
repnz
and
jb
inc
and
inc
jo
mov
add
test
je
mov
adc
add
cmc
mov
and
rcll
mov
push
xor
dec
xor
pop
call
pop
dec
jne
call
dec
icebp
pop
cld
call
xor
push
lea
mov
pop
inc
push
push
mov
push
cmp
jg
loope
cmp
dec
jns
data16
add
jae
repz
pop
cmp
jl
push
add
pusha
inc
and
loopne
add
mov
inc
orb
mov
imul
icebp
mov
inc
inc
pop
adc
push
in
call
or
xchg
shlb
ss
insl
addb
jge
xor
out
dec
std
roll
dec
stc
rolb
hlt
dec
roll
dec
ret
push
call
and
dec
lock
ret
popa
xchg
rcrb
dec
testb
pop
pop
pop
jmp
or
or
inc
in
adc
fs
jno
inc
test
mov
dec
inc
inc
repz
pusha
inc
gs
xor
xchg
push
mov
bound
andb
inc
and
jb,pt
fadds
inc
hlt
mov
inc
mov
jne
mov
xchg
lock
xchg
scas
inc
mov
inc
adc
inc
and
adc
add
push
inc
push
dec
and
dec
xchg
fcmovnbe
fstpl
call
add
loopne
adc
mov
repz
mov
inc
loopne
jmp
aam
int3
sbb
call
push
push
inc
mov
inc
rclb
pop
test
add
mov
in
and
inc
sub
inc
mov
bound
push
push
add
inc
push
sub
mov
xor
test
cmp
jg
ret
jg
or
rorb
add
sub
mov
cmpl
jne
xchg
inc
pushf
cli
and
mov
inc
roll
adcb
xchg
mov
or
inc
mov
clc
mov
enter
inc
adc
inc
add
ret
cld
fninit
call
push
push
xor
cmp
call
and
pop
jecxz
inc
arpl
call
mov
imul
jmp
jmp
jmp
jmp
jmp
jmp
adc
dec
inc
call
xor
sbb
cmp
repz
adc
jbe
jb
loope
jecxz
roll
dec
push
inc
xor
arpl
inc
jb
insb
outsl
arpl
inc
jle
cmp
sub
inc
aaa
cmp
mov
and
fstps
nop
pop
fnstcw
fcmovu
inc
je
inc
fsts
dec
add
fnstcw
flds
jb
ja
rcr
fstps
icebp
fcoms
mov
fxtract
fstps
pusha
pusha
fnstenv
frndint
mov
sub
aas
adc
inc
fnstenv
jne
inc
push
inc
dec
fldcw
je
lods
fnstenv
sbb
fldcw
flds
pop
inc
jo
push
roll
fadd
or
or
loop
cmpsl
inc
lock
inc
jo
inc
xor
add
push
lock
lods
dec
lock
dec
xor
pop
shrl
push
roll
subb
sbbb
mov
subb
rolb
stc
inc
sti
or
outsl
xor
mov
insl
lock
stc
jg
add
stc
add
add
addb
sbb
jne
xor
inc
sti
and
inc
add
roll
adc
adcb
mov
adcb
rolb
adc
das
lock
sbbl
push
roll
mov
push
sub
idivl
and
pop
adc
push
jb
mov
inc
notl
roll
jg
jbe
cwtl
sub
inc
loope
xor
inc
xor
inc
test
inc
roll
loopne
rol
call
repnz
jmp
xor
adc
xor
clc
mov
sub
mov
cmp
sti
stc
setns
stc
adc
cltd
stc
cltd
xchg
adc
nop
clc
adc
mov
lock
clc
dec
mov
pop
punpckhwd
inc
repz
fcmovb
das
fiaddl
xor
fcmovu
inc
mov
loopne
fdivr
aas
push
jae
xor
loop
add
js
mov
sbb
sbb
add
xor
add
fstps
sub
add
and
add
das
add
sub
das
sub
xor
sub
cmp
push
aaa
xor
add
xor
add
xor
aas
cmp
add
ss
xor
dec
cmp
push
cmp
push
inc
clc
pop
inc
aas
add
sbb
inc
fsubs
dec
add
inc
es
fsubs
pop
add
sub
xor
xor
inc
add
sbb
nopl
sbb
fdivs
aaa
data16
and
sub
pop
ss
sbb
adc
jae
dec
inc
inc
add
inc
add
dec
push
dec
dec
add
push
push
dec
dec
add
dec
add
dec
add
stc
push
es
pop
add
fsubs
add
ds
pop
push
pop
pop
bound
pop
arpl
gs
clc
push
push
imul
imul
jo
add
jo
jb
fdivs
fdivrs
jne
je
jnp
jp
js
jle
jns
test
cmpb
cmpl
push
pop
popf
add
and
add
aaa
xchg
add
pop
stos
add
push
mov
sbb
sub
add
sub
adc
test
adc
inc
xchg
sbb
cs
add
dec
mov
or
add
pop
fsubrs
inc
mov
add
insl
lods
add
jae
add
add
inc
cwtl
add
add
fcomps
add
addb
jnp
push
push
lods
add
add
add
mov
jno
push
pop
pop
lret
push
add
sub
add
and
add
sub
add
int3
add
cmp
add
cmp
add
loopne
add
ljmp
ss
sar
or
std
add
cmp
add
cmp
sub
inc
movb
inc
filds
or
fdivrs
jo
roll
or
pop
xor
add
inc
in
push
out
daa
inc
sti
add
repz
push
clc
add
lock
movl
jp
ret
push
add
push
jo
aam
jb
filds
inc
push
in
dec
fs
add
sbbl
pop
xchg
mov
js
clc
mov
add
sbb
adc
add
jecxz
pop
test
clc
lahf
out
add
repnz
xchg
cmc
add
xchg
clc
add
xchg
icebp
add
xchg
loope
or
or
std
clc
stos
clc
push
mov
push
mov
add
sbb
add
add
movb
lahf
loopne
les
add
fcomps
ret
ss
clc
sbb
clc
sub
out
add
xbegin
rcr
das
rcr
xor
fadds
fmuls
fcomps
fmuls
fdivs
fdivrs
fmuls
xchg
add
lea
add
popf
add
fwait
mov
cmpsb
cmpsb
test
add
mov
add
mov
iret
ret
clc
rol
mov
add
enter
lds
leave
add
xlat
iret
add
fcmovnu
call
rolb
jmp
add
in
add
aad
add
jecxz
add
out
fsubr
out
out
in
in
add
pop
icebp
ljmp
cmc
icebp
ds
repnz
hlt
icebp
add
clc
testb
jg
inc
std
cmc
jb
gs
mov
jo
mov
arpl
imul
insb
mov
mov
mov
cmp
daa
mov
mov
mov
mov
loopne
ljmp
ret
lret
into
mov
imull
loopne
out
lock
pop
mov
idivl
out
xor
stc
enter
div
fistpl
rorb
out
lock
std
dec
std
stc
ds
sbb
dec
stc
xor
cld
inc
loop
adc
lock
mov
fmuls
fwait
sahf
lahf
popf
inc
or
or
dec
dec
inc
icebp
or
ds
or
pushf
xchg
xchg
xchg
lock
xor
add
inc
repz
test
cmc
cmc
out
inc
add
icebp
or
cwtl
xchg
cld
enter
aas
add
or
sti
lcall
mov
cmc
cld
ds
dec
xor
ficoml
push
jns
test
test
dec
or
push
inc
dec
add
or
addb
icebp
xchg
push
or
push
dec
add
jle
jge
aas
xchg
xchg
nop
xchg
inc
icebp
xchg
cmpl
or
xor
pop
cmpb
xchg
jae
and
and
xchg
xchg
or
mov
mov
pop
add
jnp
inc
negl
push
add
movsl
mov
mov
lea
jle
out
jle
add
mov
rcl
rcl
int3
inc
add
add
roll
push
add
or
mov
cmp
add
clc
add
inc
or
outsl
bound
or
inc
clc
inc
loop
in
faddl
or
icebp
adc
inc
icebp
push
loop
xor
dec
inc
icebp
cmovno
dec
inc
rorb
aad
aas
dec
cmp
cmp
jmp
mov
push
or
incb
xor
inc
repz
ds
inc
cli
xor
adc
or
bound
cmp
pop
mov
pop
adc
or
fdivrl
inc
loope
out
push
cmp
nop
aaa
or
fdivs
js
push
cmp
popa
jo
xor
push
inc
icebp
cmp
push
add
inc
or
inc
dec
cld
add
aas
clc
adc
cld
fdivrs
fcmove
fdivs
rcr
fadds
fmuls
inc
lock
sti
inc
jo
neg
fcmovu
jg
fiaddl
addb
loopne
fdivr
ud0
dec
xor
and
add
or
adc
inc
mov
hlt
and
pop
add
pop
and
sub
push
sub
das
and
add
push
xor
das
add
aaa
add
xor
sub
add
add
cmp
and
inc
add
cmp
add
inc
add
inc
jle
dec
inc
inc
add
dec
add
cs
dec
dec
add
push
add
ja
imul
jb
insb
add
je
jp
add
fsubrs
fcoms
sub
add
xor
add
mov
add
mov
add
mov
xor
mov
add
and
add
sub
push
and
aam
pop
das
fsubs
jmp
imul
incb
and
in
and
add
ja
fdivrs
add
jg
add
out
add
dec
es
divb
inc
incl
sub
push
dec
clc
cmp
add
in
dec
data16
mov
pop
subb
xchg
int3
add
xchg
add
nop
rolb
ss
add
add
clc
push
cmpsl
jmp
add
adc
add
int3
add
aad
jbe
ret
cmpsb
filds
jle
in
add
out
sbb
fmul
incl
sub
ss
fcoms
fcoms
mov
add
mov
fsubrs
lds
lcall
int3
lret
fst
enter
roll
out
out
add
lret
loop
add
jmp
add
out
call
add
out
add
icebp
testb
cmc
repnz
clc
clc
hlt
repz
rolb
adc
arpl
mov
jmp
cmp
lock
arpl
pop
gs
addr16
push
arpl
push
push
pop
insl
jae
ja
outsl
imul
push
inc
outsb
jbe
cmp
jno
sbb
dec
jns
aas
inc
add
add
add
add
jne
inc
jbe
push
js
adc
adc
xor
inc
pop
push
sbb
or
xor
inc
inc
inc
inc
cmp
xor
sbb
xor
and
add
xor
sub
and
push
and
adc
pop
bound
push
push
pop
or
repnz
adc
imul
sbb
and
add
inc
repnz
pop
inc
repnz
inc
rolb
sbb
or
push
inc
rolb
sbb
add
sbb
addl
fadd
flds
sub
addb
psubusb
pop
fmuls
or
or
or
inc
test
push
icebp
pop
jb
callw
dec
inc
inc
push
js
in
mov
jns
cmp
mov
data16
xchg
in
xchg
mov
arpl
insb
and
inc
outsb
adc
pop
dec
add
push
mov
sahf
test
dec
jb
dec
and
cwtl
fucom
add
or
jnp
push
insb
pop
xchg
add
insb
imul
cmp
fst
imul
sti
jecxz
fcmovu
xor
stos
cmpsl
push
aad
mov
ljmp
shll
or
rcrb
inc
pop
or
mov
cmp
inc
dec
or
sub
push
enter
lea
mov
in
out
iret
add
fisubs
and
pop
and
test
jmp
add
addl
sub
inc
mov
inc
jmp
add
push
insl
xlat
inc
aad
lcall
imul
cmpsb
add
mov
pmaxsw
das
addr16
inc
pop
xor
arpl
lret
cmp
xor
mov
mov
cld
jmp
scas
jp
sub
add
pop
add
scas
out
add
pusha
das
lret
pop
rcrb
andb
xchg
mov
mov
cwtl
fyl2x
dec
xchg
rorl
sarb
cltd
add
sub
out
cwtl
in
cmp
mov
ja
mov
dec
or
add
fmuls
mov
rorl
sbb
sbb
test
mov
movl
shll
xor
test
pusha
pusha
bound
push
add
add
xchg
inc
sub
adc
mov
add
or
or
dec
jecxz
xchg
jno
mov
add
or
in
pop
push
xchg
imul
popa
pop
cwtl
ret
xlat
je
xor
inc
sub
pop
movsl
add
movl
dec
and
add
or
xchg
shll
or
or
mov
lea
mov
shlb
xchg
mov
hlt
les
ficoml
out
js
aas
cli
dec
bound
mov
sbb
loope
cmpsb
test
loopne
rolb
pop
sbb
leave
int3
jg
gs
pop
xchg
or
pusha
pusha
push
mov
out
add
xchg
and
xor
movsb
inc
movb
jmp
sub
mov
scas
scas
btsl
push
inc
lahf
sarl
dec
pop
push
and
movsb
out
cvtps2pi
call
or
jmp
cwtl
pop
sub
rcrb
rcl
int
insl
mov
je
jl
mov
xchg
push
mov
adc
jge
pop
sub
jns
scas
sbb
lock
loope
sub
test
orb
subl
sarb
add
cmpsl
pop
lret
add
push
xor
mov
movsl
mov
sbb
scas
mov
stc
es
adc
insl
shrl
cmp
inc
repz
ja
push
imul
das
cmp
orl
mov
and
insl
arpl
lea
cmpb
das
rorb
hlt
cmc
scas
mov
mov
or
jmp
sbb
dec
jp
iret
out
stos
in
xchg
add
icebp
pop
rorb
and
call
mov
pop
jae
lock
xchg
sbb
fisubrl
outsl
mov
add
push
xchg
push
add
lock
cmpsb
lds
scas
inc
dec
nop
sub
test
or
xor
jl
adc
dec
lcall
orl
and
nop
mov
pop
mull
mov
loopne
aas
inc
pop
clc
stc
jnp
popa
pop
lods
pop
xor
adc
fdivp
cmp
mov
xchg
dec
add
dec
stos
push
jecxz
scas
sub
daa
ret
hlt
pop
adc
adc
test
and
sbb
mov
push
int3
xchg
js
adc
mov
jo
cmp
popl
subb
inc
xchg
adc
jo
xchg
movsb
mov
inc
movsl
push
mov
pop
aas
push
daa
inc
pop
pop
or
or
add
repz
or
sub
jp
xchg
mov
inc
xor
pop
sbb
add
xorb
pop
mov
insb
inc
xchg
jnp
inc
mov
mov
rolb
add
popf
pop
or
xor
cmp
xor
call
sub
addb
bound
adc
outsb
cmpsl
dec
jmp
inc
sar
sub
cmpsb
aad
lock
dec
push
sbb
sbb
inc
outsl
xchg
aas
xchg
sbb
mov
add
mov
shlb
rcll
jno
mov
ror
or
aaa
loopne
rorl
cmpl
scas
sbb
orb
inc
and
les
insb
jb
fmuls
mov
mov
aam
sub
or
jecxz
mov
out
arpl
pushf
stc
flds
and
inc
and
mov
dec
cltd
and
xchg
mov
pop
mov
xchg
mov
or
sbb
cmpsl
mov
cmpsl
adc
hlt
sbb
outsb
shlb
jne
mov
lret
sub
adc
lds
je
ljmp
cltd
xchg
cmp
pop
icebp
imul
add
dec
mov
loop
jge
mov
dec
fwait
cs
dec
movsl
ret
adc
dec
dec
push
scas
push
nop
sahf
pop
cltd
hlt
les
sarb
add
je
inc
add
jnp
cwtl
mov
adc
sub
mov
pushf
xchg
pop
or
testb
fldenv
sbbb
push
imul
data16
lret
mov
lret
scas
mov
mov
por
ret
sub
cmp
les
loopne
icebp
xchg
push
in
sti
stc
inc
repnz
addr16
inc
dec
movsl
ret
mov
and
or
dec
mov
stos
push
sub
ss
cs
jp
fidivrl
mov
push
cmpsb
sbb
sti
or
mov
lock
pop
mov
add
vpsrlw
pop
xlat
or
adc
clc
loopne
mov
lea
stos
lea
xor
je
adc
sub
inc
outsb
inc
cld
push
add
nop
inc
xchg
sarb
cwtl
push
xchg
or
sbb
je
lock
hlt
lret
push
inc
es
in
dec
lahf
inc
mov
sub
xchg
dec
push
pop
out
push
lret
sub
inc
popa
mov
sti
jmp
mov
ret
sbb
mov
divl
push
and
dec
int3
clc
das
sbb
movsl
test
js
pop
cli
cld
mov
in
ret
xor
int3
add
push
ljmp
dec
or
xlat
jne
sbb
popa
cmp
jg
jecxz
popf
adc
test
jle
fstps
adc
jle
in
fs
xor
push
sub
pop
mov
sub
or
je
adc
xchg
in
sbb
xor
fwait
sub
sahf
pop
shl
cmpsl
dec
or
dec
pop
aaa
sti
fisttpl
sub
loopne
adc
ja
faddl
cmp
sbb
movl
roll
loope
mov
add
pop
je
adc
push
push
lods
aad
cwtl
test
cmp
mov
ds
cltd
add
cltd
pusha
outsb
insl
or
adc
or
adc
lcall
xor
push
cltd
test
scas
aaa
and
fisttpll
and
fdivs
je
ret
cmp
sbb
jne
jnp
pusha
pusha
pusha
mov
adc
xchg
shlb
std
pop
out
pop
mov
jl
jno
sbb
push
sti
loop
pop
lds
testl
std
xchg
jbe
inc
add
adc
adc
dec
loopne
inc
nop
dec
xor
in
pop
mov
mov
out
push
push
cs
jno
mov
in
push
rolb
cltd
stc
inc
push
mov
add
mov
pusha
fsubrl
cmpb
outsl
or
add
loopne
pusha
push
enter
mov
fwait
cs
pop
loope
jb
ret
sti
add
cs
adc
pop
adc
test
and
hlt
icebp
dec
roll
lret
or
add
popf
xchg
xchg
add
sub
stc
inc
pop
jmp
pop
sbb
sub
pop
xor
or
mov
xlat
and
cmp
test
mov
cwtl
out
dec
push
xor
stos
or
imul
out
or
mov
ret
rcl
out
mov
int
or
hlt
mov
mov
mov
in
cld
icebp
cwtl
out
fldl
movb
jae
inc
pop
or
add
aas
pusha
dec
pop
or
mov
dec
pusha
sbb
movsl
sahf
fisttpll
sbb
lods
push
lahf
insl
cmpsl
pop
mov
jp
xchg
sub
and
mov
or
int3
and
or
and
inc
je
insb
mov
and
mov
icebp
testb
ljmp
jbe
push
push
jl
or
test
mov
insl
and
push
push
xchg
mov
jb
and
jnp
test
das
and
push
pop
add
xchg
push
js
rolb
and
das
bound
cmp
dec
push
mov
sbbb
inc
or
xchg
loop
xlat
mov
add
push
sub
jg
pop
iret
mov
push
pop
sbb
test
aad
test
adc
push
in
push
in
cmpsb
jle
stc
jecxz
cli
fsub
xor
int
jg
out
pop
lahf
scas
imul
clc
jnp
jmp
mov
pop
pop
sub
push
fs
inc
dec
add
lcall
jp
jle
mov
sbb
mov
clc
ret
loop
mov
popa
mov
pop
push
add
inc
mov
inc
pushf
add
fildll
paddd
sub
jb
push
xor
scas
dec
mov
inc
dec
pop
jno
std
cmpsb
popa
bound
mov
es
lret
fcompl
fsubl
adc
mov
rolb
loopne
daa
andb
jp
nop
dec
movsl
sbb
or
mov
push
xchg
fdivr
push
bound
cmc
imul
inc
add
loop
mov
and
jae
aam
cwtl
test
loop
int
or
xchg
inc
lret
dec
adc
fwait
das
add
shrl
and
jle
or
dec
cmpsl
mov
mov
xor
in
mov
and
mov
das
lcall
inc
mov
fbstp
or
lods
pop
popa
pop
dec
movsl
lock
xchg
mov
es
or
cmc
fcoms
adc
jmp
ret
or
inc
xor
xor
jp
jmp
sbb
std
rclb
fldt
fisttpll
rol
cmp
sbb
sbb
jne
aam
push
shr
sub
dec
dec
add
adc
jmp
insb
add
mov
repnz
scas
mov
pop
lahf
cmp
sbb
clc
fistpll
jecxz
sbb
xchg
sub
aad
hlt
popf
loope
mov
or
lods
sarb
std
in
cmp
cmpsl
sub
scas
outsl
xor
or
jmp
mov
xrelease
std
insl
xchg
int3
add
lods
jg
in
pushf
push
or
adc
mov
fstpt
repnz
icebp
lds
faddl
push
shll
or
test
mov
jne
or
repnz
mov
mov
sti
lods
fdivl
mov
inc
nop
out
sub
test
jne
ss
xchg
addr16
cmp
ficomps
fsubl
pushf
and
stos
std
xor
or
sahf
inc
mov
adc
sbb
test
pusha
ds
jno
and
inc
and
lahf
inc
insb
mov
mov
insb
fnstsw
ret
pop
ljmp
outsl
fcomip
sbb
xchg
fiaddl
mov
test
mov
jl
cmp
mov
lea
ds
repnz
out
jl
add
dec
add
test
mov
xor
mov
jae
adc
movsl
push
in
clc
add
fistpll
adc
cmpsb
mov
pop
adc
adc
and
sti
arpl
jnp
adc
aas
add
movsl
lret
mov
pop
nop
mov
sub
dec
out
mov
pop
cmp
imul
pushf
bound
decl
movsl
xor
test
mulb
stos
mov
sbb
in
imul
sbb
aas
rclb
and
jl
fstpt
dec
or
dec
jne
fidivrl
call
inc
loope
mov
enter
out
sahf
xchg
jno
xchg
add
pop
cmp
pushf
out
sub
pop
lock
mov
popa
cmpsb
scas
ffree
pop
adc
aas
xchg
addr16
sti
into
sbb
sub
lock
ret
out
inc
lret
js
sub
clc
aas
xor
out
repnz
test
mov
stos
dec
shrb
and
lods
test
shl
pop
dec
inc
cmp
dec
lahf
and
pusha
mov
mov
ret
inc
test
or
icebp
cmpsl
data16
and
jl
aas
or
mov
dec
movsl
repz
adc
adc
jg
dec
pop
sbb
dec
and
adc
or
add
push
repz
in
lahf
cli
in
lahf
in
mov
das
inc
sub
jge
fisttpll
mov
scas
inc
mov
cmpsb
push
sub
popf
out
jle
xor
popf
xchg
pop
jle
mov
std
or
and
cmp
test
xchg
addb
mov
add
push
loopne
stos
add
lret
jge
orb
xor
and
imul
out
xchg
cmp
stos
hlt
inc
xchg
js
and
icebp
icebp
std
inc
imul
shrl
iret
pop
stc
clc
ds
iret
call
js
repz
pop
jge
mov
cmpsl
inc
or
inc
sbb
jne
stc
out
dec
jl
jecxz
or
jbe
add
jo
loope
and
nop
test
fdivl
fbld
pushf
and
adc
aas
sub
imul
lods
sub
cwtl
mov
mov
jecxz
mov
jg
cld
sub
ds
rorl
push
sub
loope
jecxz
sbb
jecxz
jo
mov
dec
repz
mov
pop
subb
scas
xlat
cwtl
sahf
lock
xor
or
ja
loope
and
rep
aaa
std
or
and
lock
add
dec
adc
sbb
cmp
dec
push
pop
add
mov
scas
fneni(8087
ljmp
xor
iret
pop
sub
adc
imul
sbb
or
out
jl
int
rcll
clc
int
cld
out
or
push
loop
out
add
push
and
std
cmc
xor
inc
sub
lret
lock
addl
add
push
stos
pop
test
sub
cmp
and
orl
sbb
push
mov
mov
lret
call
psubq
scas
fstps
scas
stos
dec
jnp
outsb
fcmovne
jne
pop
mov
sub
or
push
popf
loop
cltd
out
cmpsb
std
inc
mov
in
xlat
or
or
xor
xor
decb
cld
mov
imul
cmp
imul
mov
adc
xchg
popf
sbbb
or
scas
leave
dec
mov
lods
jmp
pop
shl
push
lods
addb
loope
cs
xchg
scas
hlt
mov
ja
adc
mov
mov
mov
push
loope
rorl
adc
ds
xor
movb
sbb
and
sbb
inc
sub
popf
jle
cs
mov
and
mov
adc
scas
pop
lods
xchg
inc
sub
lock
pop
lock
out
mov
pop
int
outsl
popf
dec
xchg
imul
pop
xchg
dec
and
sub
pop
ja
lcall
xor
inc
scas
rcrb
cmp
inc
inc
out
jecxz
decb
shlb
mov
cld
cmp
cmp
xchg
cld
dec
mov
inc
inc
popf
sub
fwait
adc
loopne
pop
mov
or
sbb
rcl
sub
das
mov
jmp
fbld
push
popa
mov
dec
and
cwtl
imul
push
jo
adc
xor
fbstp
or
scas
out
es
in
inc
rorb
xchg
sub
clc
dec
dec
sbb
and
xor
adc
fbstp
in
imul
insl
pop
mov
mov
cmp
lock
mov
fbstp
and
jmp
xlat
dec
jmp
dec
movsl
ret
xchg
and
dec
loopne
in
pop
cmp
mov
cli
ret
rcll
or
lods
mov
into
adc
in
adc
sub
jne
xchg
cmp
icebp
mov
aas
call
or
xchg
and
cli
pop
sbbb
lcall
in
cmp
repz
out
dec
jmp
insb
mov
cmp
push
pop
loop
repnz
hlt
loop
sub
mov
shl
add
in
mov
in
fbstp
das
aas
adcl
repnz
stc
jmp
cli
sub
aas
xlat
xor
mov
mov
repnz
add
pop
dec
sub
lods
sbb
rcl
stc
das
vlddqu
xor
dec
and
mov
jecxz
pop
inc
mov
test
nop
in
push
inc
push
sbb
cmp
mov
mov
es
out
cmp
sti
lahf
pop
xchg
lods
pop
cmp
inc
sbb
mov
loopne
xchg
shlb
mov
and
mov
das
jge
pop
cli
mov
push
data16
test
xchg
xlat
mov
fcmovnu
sahf
xor
hlt
dec
jns
movsl
xchg
cli
negl
out
inc
lds
mov
mov
push
mov
addr16
addb
mov
repz
aas
test
sarl
inc
jmp
sub
mov
test
push
cmc
xor
cmp
pop
cs
jae
jl
xchg
pop
cmpsb
gs
pop
xchg
adcl
pop
lods
sti
fdivp
xchg
mov
push
fidivs
pop
fs
dec
mov
pop
neg
mov
or
test
mov
adc
lods
cmp
repz
shll
jle
scas
xor
adc
pushf
add
jbe
and
test
jmp
sub
aaa
mov
lods
dec
or
call
jo
fdiv
es
test
mov
and
test
lcall
mov
sub
mov
scas
lahf
das
push
sub
or
cwtl
test
pusha
sbb
xchg
mov
sub
push
scas
es
aam
insl
cwtl
xchg
vmaxpd
sbb
or
cmp
mov
adc
pop
lock
iret
fcomip
daa
in
fscale
mov
push
sub
mov
pop
xchg
mov
lods
inc
cmpl
cmpsb
xor
insl
push
pop
fistl
fnsave
scas
pop
pop
lds
outsb
test
inc
in
mov
test
addr16
push
rclb
inc
adc
aad
jg
ss
push
lret
adc
in
jge
push
sti
xchg
mov
les
js
ret
push
pusha
sti
dec
adc
lahf
das
and
popa
or
mov
mov
or
arpl
jp
cwtl
sar
fsubr
lahf
or
sbb
xchg
shrl
or
mov
imul
sbb
scas
das
fstpl
pop
pop
js
push
cmp
jmp
repnz
dec
jmp
pop
out
out
inc
divl
inc
mov
adc
cmp
cld
mov
push
xchg
dec
in
or
pusha
fldl2t
loopne
addr16
sbb
adc
dec
add
pop
mov
or
mov
insl
push
jg
push
testb
hlt
rcrb
jle
sub
cmp
push
dec
add
add
pusha
cmp
cs
sti
pop
push
mov
mov
aaa
ffree
lret
mov
jo
out
popa
fstps
std
sti
push
and
popa
cmpsl
or
jge
outsl
xchg
sbb
dec
jge
scas
jg
jnp
out
das
icebp
popf
out
incl
push
push
xchg
mov
iret
aas
push
mov
pusha
std
cld
scas
lods
mov
mov
sarl
rcl
mov
inc
xchg
mov
add
mov
and
xor
int3
cmpsl
xchg
cmpsl
dec
add
push
and
test
mov
rolb
cmpb
pop
mov
dec
dec
or
jbe
test
xchg
out
jmp
aas
fstp
jno
in
sahf
fucomp
in
dec
inc
add
jo,pt
loop
fcomip
jbe
testl
jmp
push
or
cld
jmp
scas
xlat
ror
scas
push
or
cltd
fst
mov
jle
in
inc
push
je
adc
lods
xorb
mov
jecxz
mov
test
shr
in
fs
loop
popf
add
cs
in
add
mov
sbb
xor
xor
popl
lret
mov
ror
add
out
mov
dec
mov
pop
jns
xor
xlat
jno
pop
xchg
fisttpll
aas
xor
repz
sbbl
and
xor
inc
mov
cmp
sub
into
pop
add
scas
pop
lods
std
mov
in
pop
add
data16
iret
jg
popa
dec
das
rcrb
push
adcl
xor
jle
mov
je
inc
inc
fdivrl
cs
mov
ret
std
rcrl
cmp
int3
and
mov
fldt
jnp
jo
sub
outsb
inc
mov
mov
jmp
pop
data16
add
orl
pushf
int
mov
mov
xor
lcall
push
cmp
jg
mov
or
xchg
or
pop
add
nop
add
cmpsl
fstpt
adc
movsbl
das
fdiv
movsl
cmp
roll
out
mov
loope
ds
jno
cmc
mov
dec
fwait
cli
inc
out
xchg
mov
mov
push
xchg
outsl
orl
mov
loop
inc
inc
add
xor
popf
adc
jns
setge
or
inc
jns
mov
imul
mov
repnz
rorl
test
mov
or
cmc
sub
cmp
lret
cmp
add
scas
jo
les
dec
sbb
mov
fwait
test
dec
ja
shll
repnz
jbe
mov
data16
std
or
jl
mov
nop
cmp
test
mov
loopne
mov
out
cmp
add
xor
and
aad
mov
cmp
mov
mov
sub
mov
leave
jmp
push
sub
sbb
insl
out
sbb
arpl
shll
mov
pop
jns
xor
scas
arpl
pusha
add
xchg
nop
add
dec
pop
lds
mov
xchg
mov
mov
andb
mov
mov
mov
insb
in
ret
pop
dec
add
jmp
cltd
incb
shr
jle
jle
mov
or
cld
sbb
in
lahf
cmp
dec
mov
adc
xchg
dec
sbb
dec
inc
popa
cwtl
cmpsl
sub
push
add
inc
popa
adc
sub
insb
fnstcw
adc
add
lods
sub
or
mov
bound
adc
jge
test
sub
jnp
xchg
in
cmp
lods
add
inc
pusha
mov
test
js
mov
add
push
movsl
or
or
inc
jo
push
test
and
shrl
ret
sbb
cmc
push
xchg
out
cli
leave
cs
daa
test
sub
add
aas
shl
fstpl
inc
xchg
in
ds
xor
push
pop
jecxz
pushf
or
js
and
or
adc
cmp
xchg
xchg
jp
add
cmp
cmp
adc
out
mov
mov
insb
sbb
in
mov
and
ret
mov
mov
outsl
jns
stc
pop
ljmp
imul
in
sub
mov
cli
aad
test
cli
pop
aas
out
into
mov
std
xchg
cld
std
in
lahf
lea
add
shlb
cli
scas
testl
stc
adc
cltd
std
jge
and
movlps
mov
pop
aas
xchg
sub
pushf
jne
mov
call
jmp
sub
gs
or
idivb
mov
xor
sti
add
sub
fdivrp
idivb
loop
scas
jl
xchg
sub
mov
fdivp
inc
lcall
out
adc
rcrl
jno
jbe
lcall
mov
fucomp
leave
pop
mov
add
push
stc
popf
outsb
loopne
sti
pop
rolb
data16
pop
sarb
lock
into
inc
lret
push
shlb
clc
add
test
ss
je
ljmp
fistpll
inc
and
cmp
xchg
movsl
pop
test
or
ret
mov
push
sti
outsb
sti
adc
jmp
xchg
arpl
fsub
imul
daa
push
lea
mov
out
mov
testl
dec
int3
lea
enter
mov
bnd
outsl
jle
fwait
mov
dec
mov
ja
mov
adc
add
dec
mov
mov
pop
push
test
cmp
adc
mov
inc
inc
inc
arpl
jo
push
sbb
and
mov
lret
popa
xchg
outsl
aad
test
lock
mov
or
mov
jo
mov
inc
adc
sub
sub
sti
and
and
jmp
insl
xchg
mov
cmc
ds
jmp
insb
shlb
jmp
int
xchg
shll
cltd
enter
or
scas
push
dec
mov
mov
movsl
sarb
lods
push
push
imul
vpunpckhbw
pop
push
and
cmc
lahf
jl
add
fdivs
or
out
or
aam
or
jl
ljmp
mulb
lret
fldenv
xchg
mov
fcmovbe
mov
xor
lret
pusha
int
jl
inc
and
adc
popa
leave
je
mov
fistl
decl
lock
jl
adcb
push
add
add
repnz
inc
push
ret
xchg
jbe
into
inc
add
popf
jns
lock
and
mov
mov
push
push
es
mov
test
cli
into
repz
or
pop
clc
ret
sti
jbe
sti
setne
or
or
add
je
dec
mov
push
jno
outsl
pop
cli
movsb
jmp
addr16
dec
fildl
lahf
fsub
test
rcrl
lret
mov
ja
push
and
push
leave
je
mov
in
adc
aas
int3
cmp
mov
push
andl
rcrb
pop
add
cld
out
inc
ss
jl
aad
fs
adc
fwait
pop
xlat
ret
add
cmp
xor
stc
sbbl
insl
dec
push
loope
stc
outsl
arpl
sub
in
shlb
jbe
js
jge
add
add
loopne
lods
push
dec
je
push
ds
inc
ficompl
fidivrl
mov
ja
mov
fcomps
add
pop
push
jmp
aas
push
ja
nop
neg
xor
out
or
cmp
xchg
insl
inc
shrb
idivb
int
neg
cmpsb
inc
or
jnp
std
xchg
jg
and
std
pop
movsb
push
jle
ds
out
push
sub
aam
mov
mov
pusha
ds
pop
pusha
xor
pop
je
push
and
push
push
xchg
pop
mov
add
and
dec
inc
inc
push
jbe
adc
mov
jno
adc
add
sub
pop
push
ss
xor
xor
jnp
ljmp
je
iret
sbbl
das
mov
inc
or
idivb
incb
xor
lcall
pop
insb
fnclex
dec
mov
imul
and
add
inc
rcll
movsb
push
sub
adc
push
dec
loopne
inc
clc
push
dec
xchg
pop
lret
xor
fwait
pop
out
or
out
rcll
inc
lcall
int3
pop
cwtl
subl
fsubs
scas
adc
rolb
inc
rcrb
mov
pop
cwtl
fnstenv
aaa
mov
ss
or
adc
dec
and
addr16
ljmp
test
ljmp
mov
and
xor
incl
insl
xchg
pop
sbb
xchg
roll
push
loope
scas
cld
or
bnd
add
dec
jmp
push
inc
pusha
cmpsb
and
fldt
fs
xchg
push
scas
cltd
imul
xchg
dec
addr16
jbe
sbb
adc
xor
adc
test
popa
or
repnz
stc
fistpll
shll
jmp
mov
inc
adc
push
scas
movsb
push
cwtl
dec
cmp
lea
push
cmpl
xchg
int
fistl
mov
fidivrs
inc
inc
jg
xor
mov
xchg
orl
sbb
iret
lds
cmp
jl
jmp
dec
lret
leave
sbb
or
dec
cmpsl
or
repz
cmp
xor
in
hlt
jne
mov
adc
lahf
sub
hlt
fcmovbe
jno
jbe
xor
xor
jl
jg
fisttpl
mov
outsl
out
jae
cmpsl
bswap
xor
cli
xlat
mov
xor
or
out
in
sbbb
rcrb
popa
cltd
or
sbb
addl
push
clc
xor
pop
movsl
nop
pminub
scas
jg
sbb
insl
push
xchg
cwtl
push
call
mov
icebp
test
jg
sbb
in
cmpsl
test
mov
mov
jo
mov
pop
pop
incl
xchg
mov
inc
add
sti
sub
or
out
jmp
mov
cld
sbb
pop
pop
cmpsl
nop
xor
cwtl
mov
fnstcw
push
into
lahf
mov
addr16
push
sub
adc
sahf
mov
add
inc
rcrl
inc
clc
cmp
adc
dec
loopne
out
nop
jg
mov
dec
shlb
xchg
dec
fwait
jp
cwtl
in
es
inc
fwait
adc
push
addl
in
pop
add
cmp
stc
jecxz
mov
inc
inc
imul
into
mov
add
movsb
pop
pop
adc
movb
push
or
mov
data16
mov
cli
shrl
ret
mov
in
mov
jge
fists
adc
leave
jl
mov
ss
rorl
cmp
test
std
int
xchg
mov
jp
es
jmp
sti
adc
icebp
negb
mov
adc
movsl
sbb
jmp
sbb
cwtl
add
mov
je
data16
cmc
inc
pop
cld
sbb
into
in
and
out
or
ss
adc
add
out
iret
mov
cs
fisubs
div
lock
psllq
inc
hlt
lock
cmc
or
push
std
ss
cmc
push
sbb
lods
daa
nop
dec
addr16
loope
lahf
cltd
aam
xor
push
cmpsb
popf
and
dec
gs
jmp
dec
sbb
aad
scas
aas
jnp
rcr
out
cmpsb
cmpsl
sbb
add
les
pop
ja
das
mov
mov
in
cmpsb
lahf
dec
cwtl
fwait
out
insb
ret
je
push
imul
sub
xchg
mov
iret
das
dec
cmp
cld
and
jp
dec
or
rorl
into
in
xor
push
jmp
pop
or
stos
push
leave
jnp
mov
repz
iret
lea
into
fiadds
pushf
push
xor
popa
cwtl
in
mov
push
jp
mov
test
je
or
jns
jl
test
xchg
dec
cmp
inc
push
sbb
int3
stc
sbb
sbb
inc
fmul
adc
jnp
iret
cmp
aam
iret
mov
idiv
sbb
mov
outsb
test
lcall
fwait
jo
xor
dec
ficompl
test
test
and
ds
fdivrl
rcpps
or
mov
xor
repz
std
inc
or
cmp
sbb
adc
adc
es
imul
xchg
int
add
into
or
mov
pop
pop
jp
in
dec
sbb
cmp
sub
stos
shlb
sub
fnstenv
push
sub
fld1
push
in
subl
ss
sub
fdivrs
pop
pop
popa
push
cmp
jg
testb
xlat
add
fcmovne
insb
push
mov
ds
cmpsb
pop
aaa
fdivs
popf
jl
cwtl
testb
add
stos
push
push
lock
out
call
outsl
jge
mov
xchg
pop
int3
je
sub
add
sbb
test
repnz
dec
call
cmp
pop
out
jb
and
jmp
sub
decl
mov
in
aad
leave
jo
push
mov
loop
xchg
inc
mov
lods
div
mov
cmp
imul
dec
lcall
dec
sbb
fistps
jp
adc
gs
jp
push
cmp
and
or
arpl
rcr
out
mov
jle
mov
pop
rclb
shrb
and
dec
sbb
push
lods
push
jl
pop
ljmp
push
mov
pop
cmp
bound
jb
andb
sub
cld
inc
mov
cld
mov
or
mov
test
jl
and
jp
std
shll
pop
dec
sahf
ja
sub
lret
int3
out
mulb
jo
xchg
mull
sbb
fadd
mov
icebp
cmpsl
xchg
push
rclb
add
cmpsb
push
cld
mov
jg
pop
mov
lock
xor
add
ret
xchg
push
mov
pop
sti
dec
mov
ret
shll
pop
adc
jmp
xchg
sub
cli
into
push
push
repnz
ljmp
jb
pop
and
pusha
sbb
add
or
mov
mov
or
push
rorb
fmull
enter
pop
lret
repz
xor
jnp
pop
imul
xor
xorb
ficompl
es
in
pop
add
mulb
cmp
pushl
inc
lea
ja
fidivrl
sub
dec
dec
fld
stc
sbb
sbb
lods
sbbb
rorl
outsb
stos
jb
xchg
jne
or
pusha
mov
je
lds
ss
push
or
fmuls
adc
push
mov
cli
sti
sbb
imul
icebp
sub
mov
xchg
cmpl
xchg
push
jnp
jle
sti
sub
out
arpl
negl
out
cmp
mov
push
add
and
mov
xor
sbb
ret
sub
lcall
push
dec
addl
mov
lock
sub
mov
aam
dec
sbb
mov
cmpsb
xchg
int3
sub
dec
pop
hlt
xor
cmp
test
arpl
fbstp
test
mov
subb
clc
add
mov
jl
mov
pop
jge
cmp
fimuls
cmp
mov
pop
icebp
in
sbb
lret
mov
stc
cmc
std
test
fidivl
cmpsl
cmp
push
movsb
jmp
test
imul
inc
jmp
adc
jmp
cmp
cmpb
imul
lock
popa
dec
adc
pop
mov
pop
mov
out
cld
fs
lods
loop
icebp
arpl
shr
pop
inc
cmp
jnp
test
cs
mov
rcl
jle
insl
inc
fiaddl
lret
add
sub
sbb
jg
and
loope
insl
and
sub
push
pop
iret
repz
adc
mov
or
test
jge
and
pop
jns
enter
mov
sti
sbb
add
inc
and
rcl
ret
aas
rorl
cmpsl
lds
sub
shrl
mov
out
sti
sbb
pop
or
loop
sbb
rolb
xor
fwait
les
test
fcmovb
imul
or
jmp
jecxz
iret
sbb
ret
mov
movsl
xor
pop
in
mov
mov
and
jnp
rcrl
and
jbe
pop
lods
adc
imul
pop
sub
enter
mov
jne
adc
inc
or
mov
bound
shll
int
roll
push
mov
std
dec
jg
leave
push
sbb
mov
mov
sub
out
ljmp
cwtl
sbb
jp
outsl
clc
insb
aaa
sbb
ret
sbb
lods
mov
and
movsl
fisubrs
jbe
das
jns
sbb
lcall
xor
cmpsl
sti
cli
inc
or
add
loopne
lret
mov
lret
sub
jg
push
xchg
or
sbb
imul
jge
adc
rcll
movsb
rcll
jbe
add
fcomip
mov
das
shlb
incl
dec
es
int
jmp
mulb
or
mov
jg
and
inc
xor
jmp
pop
out
jge
outsb
sti
inc
das
pmaxsw
jmp
xor
push
sbb
mov
lcall
cli
test
push
les
ret
insl
push
jns
pusha
test
xchg
fistpll
sbb
ret
insl
xchg
cmc
aad
xor
cmpsb
cmp
or
mov
sbb
cmp
lods
cwtl
add
pop
test
imul
dec
mov
sub
sub
pop
adc
mov
xlat
in
loope
or
mov
dec
and
cmp
mov
push
mov
jp
pop
mov
jmp
imul
add
std
inc
pop
mov
xor
pop
sbb
mov
cmp
in
pop
xchg
ret
adc
xchg
insl
push
aas
jns
dec
inc
push
inc
pop
repz
jl
jle
arpl
push
or
pushaw
sbb
jg
shlb
adc
lods
pop
lods
pop
shll
test
and
jno
movsb
push
pop
dec
jae
pop
sti
sub
xor
pop
rorb
xchg
jmp
enter
gs
ds
sar
rcrl
dec
gs
pusha
cwtl
or
testl
jae
sbb
leave
jne
popf
adc
mov
test
add
orl
adc
rcrl
dec
pop
sbb
clc
xor
jg
aas
jp
or
ljmp
xchg
jle
xor
xchg
jmp
ret
mov
sbb
adcl
pop
mov
mov
repz
xor
xchg
loope
nop
jmp
cmp
push
pop
mov
adc
shl
arpl
add
xchg
cli
sti
dec
lock
jmp
dec
iret
faddl
sub
insb
jg
xchg
cmp
outsl
fldt
in
sbb
movsl
bound
sub
cmpsl
out
push
and
jno
cmp
cwtl
call
mov
jno
or
push
call
jmp
daa
stc
out
push
inc
inc
cli
int3
dec
insb
sbb
inc
mov
shr
les
xchg
lret
sub
pop
repnz
arpl
add
or
push
pop
je
shlb
outsb
xorl
or
popa
cwtl
mov
mov
lret
mov
nop
xchg
xchg
xchg
push
dec
iret
jae
cmp
pop
fistl
mov
into
fistpll
shlb
ljmp
stc
xchg
mov
fwait
push
sub
outsl
inc
cmpsb
jl
cld
into
pop
cmp
inc
or
push
xor
or
jbe
leave
cmp
cmp
add
xlat
loope
adc
mov
fisubrs
dec
adc
insb
ss
cmp
cmp
scas
mov
inc
pop
jo
push
mov
testb
xchg
sub
enter
iret
cmp
push
jge
jg
dec
inc
call
and
int3
jp
cmp
stos
pop
push
enter
cmpsb
jmp
dec
mov
repnz
jns
xchg
jle
inc
clc
popf
in
daa
dec
jge
add
repnz
adc
pusha
repnz
inc
lcall
mov
rorl
inc
imul
clc
cmp
cld
dec
out
or
mov
inc
loope
loop
mov
xor
ja
jno
outsl
sbb
mov
sub
dec
stos
lds
repz
repnz
mov
aad
sbb
cmp
xchg
push
push
add
push
in
aad
add
sbb
ret
or
movsb
repz
mov
mov
xchg
js
daa
sub
stc
or
pop
popf
out
in
push
mov
dec
pusha
lret
lcall
pop
xor
sbb
call
jb
scas
add
sbb
das
scas
xchg
adc
call
test
jp
mov
movsb
add
std
addb
test
loop
add
imul
dec
jns
or
pusha
sti
xchg
ja
and
aas
sub
imul
jno
call
enter
jp
adc
std
dec
pop
sub
hlt
jo
arpl
pop
mov
dec
ljmp
sub
fisubs
pop
sub
adc
pop
add
test
dec
jnp
xchg
shll
sbb
fs
stos
xor
dec
mov
jecxz
cmc
sub
mov
lods
sbb
leave
push
sbb
mov
rolb
shll
ja
shrl
imul
imull
daa
mov
jnp
cmpb
jo
das
pop
pushf
push
in
sub
mov
xor
sahf
lahf
dec
mov
push
jns
jg
sub
mov
mov
add
imul
ljmp
insl
dec
pop
gs
inc
testb
test
in
inc
push
jmp
daa
sub
jbe
nop
and
cmc
add
xchg
mov
fimuls
add
or
insl
loop
pop
mov
jle
sub
dec
and
mov
dec
push
xchg
mov
lds
push
mov
xchg
fdivrs
jg
clc
cmpsb
mov
cli
mov
add
inc
or
pop
loop
jle
popf
jg
mov
adc
mov
push
adc
es
iret
daa
mov
stos
lods
pop
xlat
cmc
stos
add
push
cmp
dec
add
dec
adc
mov
cmp
jp
lds
jne
pop
xor
in
mov
cmc
xlat
push
das
arpl
ficoms
sti
xor
and
add
leave
xchg
jnp
lock
lods
daa
xchg
das
add
fmuls
add
test
add
popa
sbb
and
and
fdivp
repnz
mov
out
loopne
pushf
pop
xchg
ss
mov
sub
push
or
fisubrs
mov
outsl
mov
shrb
out
pop
jecxz
mov
cmpsl
mov
and
in
fsub
cmp
or
mov
mov
clc
movsl
rorb
sahf
mov
jg
iret
sub
repz
scas
ss
outsl
xor
adc
int
and
jbe
lret
les
leave
xchg
add
fiadds
push
cmp
mov
xlat
xor
jge
adc
push
adcb
stc
bound
test
loope
scas
add
fidivl
inc
inc
ret
hlt
push
imul
aad
xchg
mov
xchg
icebp
sbb
ds
call
pop
mov
insl
fistps
inc
add
imul
or
inc
pop
adc
scas
xchg
xchg
cld
lea
xor
pop
call
int
testl
push
adc
xor
push
add
sbbb
call
test
fs
xor
in
rorl
cmp
ret
in
jge
mov
mov
cmpsb
mov
sub
jbe
out
ret
cmpsl
dec
jne
lcall
aas
sbbl
add
stos
js
nop
sub
add
or
repz
imul
xchg
mov
lea
push
pop
mov
mov
jnp
xchg
sub
sbb
pusha
pop
pop
fidivs
jecxz
gs
ret
stos
cmp
or
orb
lcall
add
jp
cmp
cmp
mov
mov
shrb
in
fdivrs
cmp
test
mov
fsub
cli
dec
sub
jae
push
sbb
repz
add
lods
xlat
popf
cwtl
cmp
push
in
fistps
fcoms
in
mov
outsl
sub
fistpl
stos
insb
xor
sub
out
hlt
lahf
and
and
fbld
leave
lods
call
dec
mov
in
rclb
inc
pop
pop
add
dec
pop
jg
pop
push
out
test
cli
pop
ljmp
stos
js
mov
ljmp
xor
push
scas
jb
in
enter
jl
fdivp
lea
mov
jle
sti
dec
sub
pop
inc
push
push
fcompl
mov
cmc
add
cmc
inc
and
mov
icebp
aas
xchg
rorb
mov
or
sbb
and
mov
xchg
outsl
cmp
ficompl
jns
xlat
push
outsb
cwtl
cld
fisttpll
decl
icebp
sbbl
xchg
daa
push
test
sub
jo
xchg
int3
mov
shlb
data16
subb
pop
arpl
shll
add
adc
mov
lea
dec
xor
adc
in
add
mov
std
enter
pop
imul
mov
dec
or
test
enter
aam
jae
mov
cmp
sub
dec
xchg
ror
jae
hlt
dec
lcall
xchg
mov
mov
and
scas
sbb
psrad
pop
sarl
pop
sub
adc
sub
pop
inc
negl
cmp
pop
lahf
pop
sbb
testl
lahf
pop
imul
ret
loopne
out
pop
leave
xchg
shll
icebp
and
mov
jle
mov
int3
jle
iret
icebp
sbb
scas
lret
leave
shl
xor
or
mov
fistps
mov
shll
or
push
loope
clc
jns
adc
inc
fiadds
pop
or
add
push
or
dec
or
xchg
jecxz
cmc
dec
lock
sti
and
mov
pop
jb
mov
iret
clc
cmc
scas
filds
push
cmc
hlt
mov
aas
jle
stos
push
ret
adc
pusha
arpl
push
data16
fsts
jnp
and
pop
aas
movb
dec
xchg
push
aam
adc
ret
and
sbb
ds
add
dec
icebp
gs
xchg
call
ss
loope
sub
insl
push
fcoml
pop
xor
leave
xor
cmp
lock
insb
inc
adc
insl
out
shll
inc
add
lahf
adc
out
push
pop
jle
roll
pop
pop
stos
jge
shlb
lahf
push
sti
iret
into
add
jae
int
dec
pop
jbe
scas
cltd
in
xchg
stc
sub
cmpsl
cmp
lret
mov
mov
jno
mov
xchg
push
clc
cltd
aam
push
inc
dec
loopne
mov
xchg
push
cld
ret
jns
sub
outsl
inc
in
std
inc
sub
mov
push
inc
daa
aaa
dec
add
sbb
clc
fwait
mov
adc
ret
scas
lods
push
lcall
xor
lds
push
call
popf
and
andb
jne
test
ret
adc
inc
cmp
or
lret
cmc
cmp
push
lods
aad
imul
movl
addr16
or
lret
movsl
push
bnd
adc
aas
fcoml
xor
aam
xchg
rol
fwait
mov
sub
add
popf
mov
sbb
loop
sbb
stos
movsb
jo
stos
adc
xlat
stos
xchg
or
into
cltd
test
data16
in
pop
rcrl
cmp
mov
ljmp
gs
aaa
push
icebp
jmp
add
jp
out
mov
xchg
dec
push
sub
leave
cmp
lock
mov
jne
jmp
fs
add
scas
std
test
aaa
movsl
and
pop
lods
fidivs
sub
cltd
in
outsb
sbb
push
cmpsl
fldcw
shll
mov
mov
push
push
adc
popf
add
xor
test
aas
mov
fsubrp
and
inc
add
js
jbe
pop
mov
cwtl
stc
and
xchg
cmpsl
mov
xlat
sarl
andl
jl
push
mov
jl
push
xchg
pop
out
lret
push
enter
fldl2e
cmp
xlat
popa
fsubl
adc
in
cld
jns
pop
ds
loope
dec
pop
lods
or
push
mov
push
or
leave
lods
subb
lcall
in
jmp
ja
mov
jbe
mov
into
fistpll
int3
stos
jl
mov
jl
addr16
pop
daa
sbb
or
int
daa
inc
loope
dec
clc
rcll
shll
jb
mov
push
sbb
cld
dec
lods
es
dec
xor
xchg
fadds
or
lods
iret
and
lods
movsl
sbbb
pop
inc
xor
push
stos
push
idivb
xor
xchg
adc
in
add
ret
xor
pusha
ret
arpl
mov
or
rolb
mov
jbe
xor
xor
push
imul
ret
rcrb
mov
push
push
js
sub
clc
push
daa
push
dec
shrl
es
mov
fwait
mov
mov
jns
xchg
mov
push
mov
mov
pop
sub
mov
jae
in
xlat
in
jbe
outsl
stos
bound
mov
or
or
andl
or
cld
repz
pop
clc
int3
stos
dec
int3
xchg
sbb
mov
repnz
and
ljmp
orb
movsl
sbb
push
cltd
sub
sahf
clc
repnz
sub
xor
jnp
or
cmp
clc
mov
ss
lods
push
add
jle
lcall
fs
and
sbb
and
jb
mov
or
imul
call
xchg
addr16
pop
pop
jp
fdivrs
or
cmpsb
add
add
pop
add
inc
fs
popfw
xchg
gs
jns
aad
js
out
cs
pusha
or
mov
jb
fs
cmp
push
pop
cld
pop
sahf
arpl
and
sahf
loopne
jge
mov
jl
lret
fisttpll
cmc
push
enter
xlat
cmp
sub
push
inc
xlat
movsl
fstl
xor
dec
iret
cld
das
aaa
or
incb
outsl
cmpsl
xor
jecxz
in
sbb
adc
mov
pop
jns
loop
push
repnz
jl
std
adc
cmp
jle
repnz
loopne
xchg
push
jg
lret
pop
xchg
sub
mov
movsb
mov
jb
sub
mov
mov
jae
roll
push
mov
inc
mov
daa
lret
arpl
inc
cwtl
ljmp
jge
mov
sbb
shl
aas
in
adc
les
jbe
jle
icebp
push
xchg
adc
xor
enter
pop
call
push
imul
nop
aas
jl
sub
fimuls
dec
shrl
shrb
out
or
notb
mov
fadd
mov
inc
fstpt
js
idivb
jo
cmpsb
dec
add
clc
mov
cli
mov
pop
pop
mov
dec
lret
arpl
xchg
js
addr16
jo,pt
leave
mov
fildll
pop
sub
add
or
ror
mov
roll
sahf
test
loopne
sbb
sub
add
xlat
test
negl
mov
xchg
mov
out
cmpl
std
test
push
lock
lret
rorl
inc
add
sbb
mov
fnstsw
inc
or
inc
test
push
xor
test
ret
dec
sub
test
movsl
mov
repz
inc
cmpsl
pusha
xchg
sbb
pop
stc
iret
push
jns
xchg
xchg
movsl
fdivrs
ja
out
clc
adc
daa
push
adc
lock
mov
jl
inc
jge
stc
lahf
mov
icebp
sbb
mov
popa
roll
int
xchg
jb
dec
pop
stc
xchg
or
mov
inc
imul
adc
iret
lea
pop
js
ret
or
sub
sub
push
sahf
or
sbb
lods
out
push
js
push
mov
shll
idivl
outsl
shll
lret
add
xchg
adc
add
jnp
in
or
mov
pusha
or
cmp
add
outsl
sbb
dec
add
pop
ret
or
stos
xchg
icebp
movb
or
clc
sbb
adcb
or
cmp
push
popa
dec
xor
sbb
clc
inc
nop
lcall
sbb
cwtl
jl
ja
mov
jno
sub
push
and
ja
out
bound
add
out
lods
xorb
divl
jle
jne
push
fcoml
mov
mov
jns
sbb
jo
xchg
dec
jae
inc
push
push
daa
ret
jne
push
scas
add
mov
lods
lret
xor
int
push
and
mov
bound
sbb
test
in
mov
pop
xchg
jge
push
bsr
jle
mov
scas
cmpsl
daa
inc
into
mov
jmp
and
fisubl
frstor
cmp
and
pop
popf
ret
lea
xor
cmp
jmp
mov
or
lds
adc
dec
mov
aaa
pushf
aas
enter
jle
scas
jno
mov
test
orb
cmp
lret
repnz
push
pusha
in
mov
repz
push
mov
cs
inc
add
cmp
cmp
sbbl
movsl
mov
cld
faddl
or
sub
stc
fadd
jge
mov
test
add
mov
insb
ljmp
inc
or
ljmp
cmp
pop
repz
mov
fwait
arpl
sahf
jl
sub
mov
add
notl
push
mov
lock
push
fdivl
or
mov
repnz
jae
ficomps
rcrl
or
setle
xchg
faddl
add
clc
fldcw
shr
test
adc
inc
push
adc
ljmp
sti
sahf
sbb
jg
jp
pop
push
cmp
push
jmp
dec
rcrl
in
sbb
cmp
lods
in
fucomi
insb
aas
mov
sub
push
aam
adc
mov
call
mov
xchg
push
mov
stos
daa
cld
pushf
jp
scas
mov
movb
in
loop
inc
lcall
cmp
xchg
cmp
xor
cmpsl
aad
imul
pminsw
push
movsb
and
pop
into
fmuls
mov
add
mov
fwait
js
ljmp
or
iret
fidivrs
mov
ficomps
or
test
xchg
hlt
add
pop
jne
fisubrl
mov
imul
pop
rcrb
jb
mov
push
mov
fs
hlt
add
and
dec
inc
inc
push
push
jmp
or
xchg
inc
inc
and
mov
cltd
push
push
in
and
push
pop
insb
shr
add
fdiv
data16
rorb
stc
sub
lock
push
fstps
cmp
xchg
or
xchg
add
xor
mov
popf
lret
xchg
subl
xchg
mov
sbb
imul
jmp
xchg
lcall
imul
pop
sti
data16
fwait
loop
fwait
push
jb
rcrb
call
jmp
in
jp
in
call
or
push
jo
ljmp
cmp
xchg
out
jne
mov
loop
stos
cmpsl
jmp
pop
xor
decl
in
jb
pushf
cmp
loopne
sti
inc
imul
popf
aad
mov
pop
sub
cmpb
shlb
and
mov
mov
leave
xor
repnz
add
cmpsb
cli
sti
jge
cwtl
push
lret
xchg
lret
mov
cld
sbb
or
sub
std
dec
adc
jl
pop
jl
fistpll
test
mov
xor
shrb
inc
daa
sub
iret
shll
jns
mov
dec
lds
sti
cmpsl
xchg
jmp
in
rcrl
mov
aam
jne
mov
push
insl
jmp
repnz
icebp
push
xchg
cmc
imul
cli
mov
pop
adc
into
movsb
cmp
adcb
sarb
lods
stc
shll
hlt
sti
sti
adc
inc
push
in
cmp
ret
sbb
das
pop
rcll
xchg
dec
sbb
loope
dec
outsb
inc
push
add
clc
mov
jmp
mov
sbb
xchg
pusha
mov
add
cmpsb
mov
push
jne
mov
mov
jp
sub
daa
nop
xchg
mov
mov
mov
scas
es
mov
xor
push
inc
arpl
jg
sar
sub
jnp
mov
push
dec
or
loop
iret
adc
jns
jmp
xor
lea
jmp
dec
sbb
mov
outsl
push
adc
fldenv
rclb
xlat
mov
push
xchg
faddl
nop
arpl
dec
imul
xchg
enter
dec
imul
push
adc
jg
movsb
divb
cld
inc
adc
loope
or
aaa
stc
dec
call
mov
jecxz
xor
jne
jo
lock
mov
mov
jbe
sbb
mov
jo
lret
inc
dec
sub
andb
ja
jp
gs
mov
or
fistps
jns
jno
je
rorb
dec
and
jmp
ss
fneni(8087
cmp
imul
fwait
sbb
dec
xor
xor
mov
insb
test
jne
in
add
daa
cs
push
dec
lcall
lret
pop
test
mov
mov
sub
ja
pop
jg
jne
jb
dec
popf
nop
push
mov
aam
or
inc
cmp
aam
pop
rcl
push
incl
adc
cli
or
jne
mov
pop
movsb
inc
nop
mov
lcall
pushf
add
lock
and
sbbb
scas
sbb
cmp
dec
adc
lods
add
dec
roll
adc
in
arpl
imul
pop
pusha
rcl
add
ret
sub
xlat
pop
xchg
mov
or
xchg
xor
lahf
cwtl
xor
movsb
push
pusha
imulb
mov
sub
and
xor
xor
into
fisttpll
pop
out
in
mov
in
je
call
sarl
imul
shrb
aad
add
pop
mov
sbb
cmpsl
xchg
mov
jle
es
push
sbb
cmp
sarb
sbb
inc
sub
add
xlat
cmp
scas
pop
push
and
add
sbb
push
push
inc
lcall
push
jae
loope
cld
mov
test
push
test
jae
pushf
push
sub
loopne
jp,pt
or
adc
sar
push
pop
or
add
ja
fisttpl
or
mov
pop
pop
enter
rorb
popa
mov
push
int3
sbbb
test
cmp
cmpsl
incl
je
out
inc
mov
jns
aad
mov
inc
movsl
fnstsw
mov
popf
add
or
pusha
lcall
or
lods
add
cwtl
jg
xchg
push
loop
push
mov
aaa
icebp
or
mov
sub
sbb
data16
pop
push
push
inc
mov
sbb
xchg
mov
rcrb
into
xor
add
dec
ss
pop
or
jbe
sti
call
dec
repz
dec
fcoms
lahf
push
push
jo
popf
rcll
das
stc
sbb
cmpsl
push
sub
jno
inc
adc
mov
jg
add
xchg
mov
orb
jle
test
pop
sub
hlt
sahf
les
add
divb
out
mov
fldcw
pop
jo
add
ss
mov
lcall
frstor
notb
or
mulb
and
jns
adc
add
adcl
jae
jnp
adc
adc
in
aas
ret
rcll
xchg
pop
sub
mov
jmp
mov
loope
and
lock
push
push
push
loop
lods
lds
shl
mov
inc
aas
cmp
pushf
gs
cmpb
xchg
adcl
push
sbb
fisubs
lods
pop
xchg
mov
adc
ds
sub
dec
cmp
imul
fistpll
fiaddl
add
pushf
jl
push
push
sbb
adc
out
loope
call
daa
int
fucomip
pop
cmpps
add
cli
out
popa
cwtl
sbb
mov
adc
aam
negb
push
mov
inc
pop
adc
or
adcb
lahf
out
aaa
je
out
mov
cmp
fsubp
mov
add
mov
out
sqrtps
mov
cmpsl
xor
add
xor
arpl
es
adc
addr16
mov
cmp
dec
daa
jbe
sbb
lds
adc
loope
inc
hlt
in
xlat
or
pop
mov
mov
mov
pop
lods
icebp
xchg
jge
mov
cmp
push
imul
fisttpl
je
das
fmuls
insl
dec
jae
lds
lret
lds
leave
in
dec
in
call
sub
lds
inc
jmp
insl
add
aas
mov
push
lods
mov
jl
adc
dec
mov
cld
pop
fadds
mov
jl
cld
mov
inc
dec
lss
stos
xor
mov
dec
and
adc
xchg
nop
sub
shlb
insb
dec
lgs
xchg
add
imul
cmp
fcomps
jae
push
adc
mov
xor
das
mov
mov
ret
push
jb
out
fcmovnb
arpl
push
xchg
xchg
cld
cltd
ljmp
fsubr
jmp
nop
xchg
mov
mov
lcall
fstp
inc
xor
fwait
sar
push
in
mul
add
ljmp
faddl
mov
fnstenv
in
sub
dec
lock
xchg
fdiv
aam
sti
mov
nopl
cmpsl
xor
xchg
mov
in
dec
pop
popf
cmpb
sub
pop
mov
xor
sub
jb
sub
inc
mov
sub
push
stc
fnstcw
cmp
scas
stos
mov
out
mov
xchg
aam
sub
and
lret
data16
arpl
adc
xchg
inc
fidivrs
jl
pop
cmp
adcl
loope
and
or
or
pop
lock
fmuls
adc
xchg
sub
mov
push
push
jne
aad
mov
cmp
jge
jnp
aad
mov
jge
fnsave
cltd
xchg
negb
das
stos
adc
pop
out
adc
in
inc
inc
movsl
add
pop
addr16
test
mov
sub
je
scas
mov
sub
test
xchg
xor
pop
nop
es
sbb
xchg
rolb
dec
sbb
xchg
inc
inc
mov
movsb
fbstp
repnz
lock
loopne
jmp
jmp
add
ja
push
test
lret
mov
xchg
dec
fs
jp
add
xchg
leave
fnstsw
cmp
sahf
xor
inc
test
test
fisttpll
int
lcall
outsb
mov
lret
mov
into
and
shrb
pop
sarb
or
clc
adc
fiadds
mov
pusha
js
pop
pxor
mov
out
rcrb
test
cmp
lret
jno
add
fwait
dec
rcrl
xor
add
pusha
sbb
lcall
cmpsl
cmp
xor
xchg
xchg
xor
or
adc
add
push
cmp
pop
xorl
test
add
jge
pop
mov
cmp
jno
xor
ret
pop
ret
cwtl
mov
movsb
mov
mov
out
mov
or
movsb
clc
lea
sbb
adc
enter
insb
cmpsb
ficoms
and
cmp
cltd
addr16
lods
out
into
mov
scas
sbb
xorb
clc
lret
mov
pop
xchg
adc
dec
adc
xchg
xchg
lods
push
stos
or
outsl
add
lahf
outsb
fcmovne
pop
das
mov
or
stos
pop
out
sbb
xchg
pop
adc
push
fidivrs
nop
add
cmc
xchg
sbb
dec
jb
push
inc
mov
add
jecxz
and
cmpsl
adc
bound
inc
insb
filds
aaa
subl
pusha
jl
jp
xchg
mov
pushfw
and
jae
cli
ret
sub
ret
pop
mov
push
insl
dec
rorb
or
or
mov
xor
movsl
mov
andl
les
rcrb
inc
or
insb
dec
sbb
gs
mov
rol
stos
pop
pop
jmp
stos
xchg
sbb
cmp
or
sub
add
jp
pop
ss
inc
in
mov
addb
cld
xor
push
data16
fistl
sub
mov
cmpsl
imulb
adc
dec
pop
push
mov
mov
adc
or
or
jo
or
insl
or
mov
fisttps
pop
lds
inc
pop
sahf
daa
cmp
aad
mov
jno
or
enter
sbb
cmpsb
inc
fs
cmc
es
cmp
mov
jge
cli
int
clc
cs
xchg
xchg
sub
pop
sahf
shlb
jle
addr16
dec
std
cs
cmp
loopne
sbb
fs
daa
add
punpcklbw
test
inc
pop
dec
inc
test
mov
sbb
sbb
mov
jbe,pn
xor
xchg
or
lods
lea
fcom
pop
sub
adcb
mov
lcall
fwait
mov
xchg
sbb
xor
fbld
or
mov
dec
icebp
inc
or
clc
repnz
adc
pop
pop
in
inc
jne
mov
clc
scas
xor
test
push
cmpsb
insb
mov
dec
inc
leave
pop
sub
ss
add
pushf
xchg
xchg
mov
jae
mov
lret
das
into
ret
jmp
mov
xor
ds
pop
fisttpll
filds
adc
adc
and
push
stos
cwtl
pop
xchg
stos
mov
inc
out
pop
cmp
test
adc
add
xlat
inc
xchg
push
adc
and
and
or
mov
fwait
pushf
fs
cld
stc
insb
jl
pop
imul
mov
iret
pop
push
xchg
xor
cli
sti
mov
fiadds
test
cltd
pop
out
sub
xchg
in
repnz
jmp
cmp
pop
xchg
jbe
fwait
jecxz
sub
orl
pop
pusha
xlat
shrl
xchg
fiadds
push
out
fsubl
jno
push
cltd
rcr
and
inc
or
and
mov
push
ja
mov
lret
push
sub
xor
shr
or
test
daa
push
cmp
ret
cld
lds
pop
xor
xor
test
daa
in
jno
lea
or
mov
inc
das
stos
add
mov
scas
pop
and
fistpll
mov
jnp
fstl
test
test
push
and
and
inc
and
xchg
cmp
in
in
movsl
leave
rorl
inc
aam
jecxz
mov
fucomi
mov
xor
aam
rolb
imul
aad
lret
pop
ret
inc
std
and
mov
addb
scas
scas
lret
dec
sbb
ss
fs
dec
aas
push
icebp
std
mov
aas
nop
lret
imul
xlat
out
stc
adc
popf
inc
lret
aad
mulps
or
push
add
bound
fcmovne
cmp
loopne
pop
shlb
adc
xchg
fstl
xorl
mov
sub
inc
or
les
cmpsl
xor
cmpsl
sub
aas
mov
jl
jmp
push
pop
pop
mov
call
stos
test
loope
inc
add
test
fldcw
and
arpl
dec
movsl
lock
nop
std
imul
mov
jns
xchg
loope
and
push
mov
push
cs
sub
add
nop
or
add
xor
cmp
daa
call
xchg
cmpsl
iret
repz
int3
imul
imul
add
jbe
cld
cmp
mov
lds
ror
mov
adc
imul
push
mov
movsb
cwtl
aas
or
add
and
ret
mov
add
insl
insl
jecxz
pushf
es
jge
outsl
clc
mov
mov
fidivrs
mov
mov
inc
cmp
imul
scas
jne
push
add
push
in
add
sub
cltd
push
pop
cmpsb
cmp
decb
aas
jle
addl
xchg
fidivrl
aas
jge
in
test
hlt
sub
or
pop
jge
jp
push
mov
cmpsl
fisubrs
idivl
out
pop
push
sbb
and
sub
rolb
jp
xchg
in
sub
jnp
insb
or
invd
mov
push
inc
inc
std
xchg
inc
aad
and
sub
xor
xchg
in
push
mov
xchg
xchg
mov
lret
lret
fdivs
dec
out
and
loopne
stc
sahf
xorb
repz
pusha
pop
dec
rorl
jmp
xchg
push
inc
inc
adc
lods
psubusb
push
adc
fsubrl
rclb
cltd
inc
xor
xor
rorl
test
mov
stc
dec
mov
xor
out
enter
xor
xor
dec
or
jp
sub
in
cmc
inc
loopne
cmp
and
mov
add
arpl
mov
and
add
push
cwtl
aas
es
mov
bound
shll
and
jle
pop
ljmp
xchg
inc
movsb
sbb
mov
scas
bound
sbb
and
lcall
add
loop
call
loope
sub
mov
das
test
mov
or
push
das
inc
jl
xchg
push
vmread
push
mov
negb
jg
je
mov
cmp
mov
add
and
insb
jb
jnp
pop
negl
adc
jb
add
inc
lea
imul
inc
cwtl
xchg
sahf
lahf
adc
in
pop
xchg
int3
or
je
pop
ja
std
fnstsw
in
or
cmpsl
js
adc
cmp
dec
sub
or
pop
pop
inc
imul
sbbb
xchg
and
movsb
adc
and
icebp
sbb
dec
push
inc
aad
lret
mov
in
push
int
pop
inc
clc
bound
dec
mulb
jg
out
mov
in
jmp
and
xchg
mov
inc
pop
mov
repz
sub
sahf
out
out
push
ljmp
inc
jle
call
stos
add
mov
scas
add
lret
xchg
sarl
jo
push
fs
jge
rcl
out
daa
jo
and
push
adc
or
mov
cmp
jecxz
ret
in
mov
jle
jge
mov
rorb
sub
dec
mov
mov
pusha
cwtl
out
xor
pusha
pop
dec
test
ror
sub
pop
data16
lods
cmc
jnp
dec
lock
mov
dec
call
in
cli
rcrl
push
lret
jge
sbb
ret
inc
dec
adc
inc
add
rcl
cltd
adc
loopne
pop
xchg
fsubr
mov
and
jbe
cmpsb
jbe
add
cli
mov
cmp
in
adc
xor
jo
lods
push
xchg
adc
cli
mov
into
out
jnp
adc
lock
cld
xchg
pop
loop
shll
dec
cwtl
shl
mov
dec
and
cmpsl
decb
inc
movsb
xlat
pop
cmc
add
insl
movb
sbb
jl
test
roll
push
mov
xlat
loope
and
pop
scas
mov
mov
dec
loopne
adc
jle
cmpb
mov
insl
out
sti
and
mov
mov
ja
and
lahf
lds
mov
popa
adc
push
jecxz
xchg
pop
cmp
dec
adc
fsubrp
divl
jge
push
lods
repz
imul
loop
pop
sti
notl
ss
sbb
or
pop
jg
out
xchg
cmp
mov
divl
out
pop
cmpsb
test
dec
rol
xor
mov
mov
loop
jns
fldenv
push
mov
sbb
jg
xchg
add
iret
inc
and
mov
enter
popa
jge
ja
add
mov
jle
jl
jl
stos
ret
je
inc
or
dec
or
mov
pop
xor
jge
and
and
fidivrl
repnz
popf
ss
mov
mov
add
fisubs
dec
jmp
dec
sub
movsl
fcmovb
jno
push
ljmp
jle
arpl
mov
enter
les
xchg
push
sub
dec
xchg
std
push
ds
pushf
cld
call
inc
pop
pop
dec
adc
mov
insb
xlat
popa
jl
ss
repnz
fisubs
pushf
jle
shll
int
int
xorl
arpl
push
sbb
std
btr
pop
push
subl
ret
pop
mov
std
sbb
mov
leave
push
fisttpl
jne
js
ror
ret
cmc
imul
or
roll
pop
or
inc
mov
cmc
push
and
cmp
mov
sub
xchg
sub
inc
mov
xlat
mov
jl
negl
pusha
filds
cmp
push
lods
test
jmp
insl
jnp
dec
mov
movsl
fisubrl
jecxz
mov
xchg
into
sar
sbb
stc
or
sti
mov
pop
aas
int3
adc
push
mov
cmp
cmpsb
lock
jns
stc
lods
psrld
jo
or
sbb
mov
cmp
fnstenv
mov
cmp
sbb
into
insb
dec
aad
mov
xchg
inc
sub
inc
add
mov
test
je
sbb
fwait
movsl
sar
std
dec
inc
add
jae
push
sub
das
or
repz
dec
movsl
in
pop
or
fwait
dec
and
jge
push
es
fdivrs
lret
mov
enter
mov
pusha
push
sbb
mov
gs
cmp
jbe
in
mov
mov
push
or
add
daa
je
dec
lret
bound
lret
repz
fimuls
pop
sub
sbb
fs
cmc
xchg
int
jmp
mov
jbe
shrb
mov
sbb
sbb
cmpsb
addr16
cmp
sbb
scas
pop
movsl
fcmovnb
adc
jge
out
xchg
jg
push
fstpt
add
iret
cltd
xchg
sbb
fsubrs
mov
js
cwtl
add
popf
adc
adc
stos
xor
mov
sbb
jl
shlb
test
add
dec
adc
pop
leave
and
loopne
xchg
xchg
cmc
cmpsl
xchg
cmp
stc
mov
loop
ffreep
aam
mov
lret
mov
sbb
lret
ror
pop
jno
insl
pop
lret
jbe
sbb
shll
jns
sbb
enter
ja
mov
int3
int
sub
jl
add
cmp
in
stc
js
icebp
jge
outsb
jle
hlt
lea
rclb
call
js
jbe
add
dec
cwtl
fucomip
not
out
das
mov
scas
jge
fimull
jno
insl
or
cmp
cmp
mov
mov
sub
stc
and
imul
xchg
ds
jae
jb
cmp
ja
jmp
pop
jmp
push
call
jmp
add
xchg
inc
push
cmp
lock
sahf
dec
into
jmp
push
ljmp
addr16
push
mov
jno
add
aas
inc
jne
push
insb
fcmovnb
mov
sub
shll
mov
or
add
xor
mov
inc
repnz
mov
sub
inc
pop
movl
push
insl
xor
sbb
inc
cmp
pop
pop
xlat
sub
stos
addl
cmpsb
dec
imul
xchg
hlt
xchg
in
jecxz
adc
push
jnp
dec
cmpl
mov
gs
fmuls
shl
sbb
fbstp
negl
mov
push
mov
push
mov
sbb
adc
es
mov
adc
add
push
daa
pop
cmp
test
push
mov
ljmp
and
ret
xor
add
or
mov
shlb
pop
mov
xchg
lods
mov
mov
fs
popa
pop
nop
push
iret
dec
aam
mov
pushf
out
add
in
mov
jmp
xor
jne
imul
fcmovnb
jne
aad
stos
negl
inc
cli
cmc
fdiv
ljmp
pop
mov
pop
cmpsb
shrl
xor
jcxz
push
fdivrl
popf
cmp
mov
inc
add
sbb
jge
mov
lahf
fcoml
push
shrb
adc
mov
lock
push
scas
jmp
cmp
mov
xchg
daa
dec
push
xchg
adc
adcb
imul
pop
jmp
stc
jns
sarb
pop
fcomps
pop
mov
ljmp
ljmp
dec
sub
insl
test
movsl
mov
mov
cmp
push
in
sbbb
inc
iret
dec
mov
hlt
jae
jo
push
add
xchg
add
outsl
mov
pop
sbb
lret
push
pop
mov
cmpsb
movsl
insb
jg
add
lret
shll
stc
fcompl
adc
rorb
popa
ss
ret
xor
lods
push
and
inc
add
insb
jns
nop
sub
add
sarl
jb
sub
sti
jnp
xchg
push
leave
fwait
and
push
push
cli
stos
out
mov
arpl
aaa
ljmp
loopne
lock
popa
dec
inc
and
adcl
and
jbe
mov
iret
jecxz
aas
bound
sbb
lds
test
inc
lds
sbb
sub
push
inc
fsubr
and
add
cmp
inc
ljmp
cmc
mov
cmp
push
out
cld
ds
fcomip
push
pop
cld
es
out
jle
ret
pop
shll
mov
insb
pusha
mov
aaa
sub
sub
out
push
insl
pop
outsl
mov
scas
jle
sbb
push
push
sub
cli
sbb
lcall
add
cmp
popa
sbb
pop
cltd
add
mov
or
stos
add
mov
pop
test
xor
cmpsb
mov
shr
and
shlb
push
push
xchg
adc
inc
and
sub
cmp
test
loop
push
pop
iret
lds
cmp
test
lret
cmpsl
add
mov
adc
enter
jge
frstor
inc
and
jb
push
and
scas
aam
pop
addl
les
push
push
jae
add
pop
fimull
fs
dec
cmc
aad
test
lea
mov
mov
dec
insl
neg
les
rol
mov
aad
outsb
cmp
testb
mov
xchg
push
test
push
data16
int
stc
repnz
mov
pusha
cli
pop
mov
pop
clc
sub
bnd
pop
and
mov
fnsave
rcll
mov
mov
xlat
fbld
icebp
jb
rcl
add
incl
lock
jbe
ficoms
inc
mov
or
xchg
pop
cmpsl
sbb
jmp
pop
inc
addb
xchg
lea
adc
inc
popa
inc
fcomip
icebp
jp
lret
inc
les
insl
js
push
lahf
jo
test
mov
xor
cmp
mov
xor
inc
push
xchg
js
das
out
out
adc
ja
mov
subl
outsb
pop
or
je
into
cli
push
sbb
mov
jmp
xlat
jecxz
lea
dec
mov
stc
sub
in
inc
sti
fwait
cmpsb
movsl
cmp
xchg
inc
and
cli
lcall
outsb
mov
call
pop
jno
ss
sbb
sti
add
xchg
fsubrl
mov
push
adc
cmp
pop
test
fwait
push
movsb
pop
and
lcall
idivl
and
xchg
inc
nop
test
in
sahf
rclb
sbb
push
cmpsb
or
inc
adc
or
inc
inc
or
add
stos
inc
pop
jne
std
add
xchg
add
jb
movl
pop
or
or
popa
fists
inc
sub
xlat
shl
inc
repnz
add
xlat
mov
out
insl
xor
sub
push
pop
sbb
mov
ret
and
shlb
xchg
gs
xor
movsl
icebp
jl
add
mov
mov
and
je
cmp
add
push
fldt
mov
mov
sub
push
mov
or
cmp
lret
shlb
mov
popa
adc
mov
sbb
and
sbb
dec
lea
jl
aas
notb
movsb
xchg
jmp
dec
add
aas
outsl
fstps
out
pop
call
cmp
cmc
push
mov
int
cmpsl
jge
pop
jp
dec
or
imul
inc
and
and
sub
jo
lods
shl
jge
inc
inc
sub
xor
add
cmc
test
cltd
sahf
sbb
sti
js
test
mov
or
mov
or
ret
jg
jne
subb
jl
dec
mov
sub
adc
sbb
fsubl
adc
das
pop
int3
mov
xor
arpl
inc
jle
cwtl
icebp
cmp
ljmp
xchg
fiaddl
aas
ja
mov
imul
jge
ret
imul
mov
fnstenv
not
mov
cmpsl
xchg
dec
out
sub
push
push
or
in
dec
mov
jnp
jb
mov
loope
push
sti
and
test
stos
lods
and
sub
andl
jo
mov
jmp
pop
movsl
push
push
mov
or
dec
aas
imul
sub
sub
call
mov
jg
rolb
xchg
addb
stc
inc
or
push
add
or
xlat
xor
mov
push
test
fwait
lock
sahf
lret
test
addr16
cmp
aaa
lahf
add
and
xchg
inc
pop
or
popa
jl
bound
and
movsb
inc
js
mov
sahf
leave
pop
pop
mov
gs
aaa
add
inc
cmp
pop
sbb
stc
ja
adc
sub
pop
sub
enter
rcl
mov
ds
dec
rcll
rol
mov
insl
fstps
out
jne
sahf
cmp
in
sub
xchg
dec
fcoml
lods
add
and
dec
inc
inc
push
lahf
and
clc
jmp
cmp
or
daa
mov
inc
gs
loopne
sub
jns
xchg
xchg
into
popf
fdivs
add
loopne
jecxz
dec
test
cmp
fcomip
scas
mov
test
pushf
jg
sbbl
insl
add
lahf
sti
sbb
fstl
sbb
xchg
and
or
inc
add
or
and
mov
addl
mov
xlat
adc
xchg
gs
lock
loop
lds
sub
lret
xorb
in
sbb
xchg
pop
movsl
dec
inc
inc
mov
dec
mov
loope
mov
shll
aas
jp
sti
pop
jecxz
pop
daa
fnstcw
mov
xchg
test
movsl
lret
test
fdivp
sub
xchg
imul
xor
or
arpl
outsl
fsts
out
jno
pop
push
inc
mov
inc
xchg
sub
hlt
in
xor
out
test
sbbb
icebp
loopne
pop
in
or
push
subb
arpl
adc
or
lret
into
mov
test
add
mov
loopne
sub
leave
push
outsb
xor
iret
cli
call
mov
xor
int3
int3
adc
cwtl
mov
data16
filds
xchg
xor
adc
or
push
call
mov
rclb
or
and
sub
mov
jle
andb
xlat
inc
sub
lock
mov
dec
and
jmp
pop
aas
dec
pop
outsl
jle
daa
sbb
clc
jbe
fwait
ljmp
leave
repnz
jmp
loopne
lds
cmp
push
and
push
js,pt
lret
jecxz
sub
jnp
pop
xchg
subl
and
adc
pusha
imul
inc
adc
mov
sarw
xor
lods
arpl
or
adc
fmuls
push
mov
dec
push
dec
add
iret
fsubrs
add
mov
push
shll
mov
and
and
jno
adc
xchg
bound
sub
mov
mov
das
adc
mov
inc
adc
xor
fsubs
mov
or
sbb
sbb
out
pop
mov
repz
mov
adc
push
rcrl
cwtl
aam
push
mov
fs
and
dec
mov
call
sbb
jb
fmull
std
aaa
loope
mov
pop
cmp
dec
jle
lret
ret
sub
aad
cmpsb
gs
aad
lods
in
push
popa
push
or
rclb
ficomps
repz
cmp
push
stc
cli
and
or
bound
inc
popa
mov
add
insl
jcxz
push
fdivr
or
imul
ja
loopne
insl
cmp
pop
xchg
enter
lods
and
or
adc
mov
adc
jg
mov
lea
scas
adc
mov
in
daa
call
mov
dec
cmp
sbb
dec
xchg
addr16
mov
in
notl
adc
sub
add
lods
and
insl
fwait
sbb
dec
lock
lahf
cmp
xor
lock
or
jle
jns
mov
les
and
loopne
fs
insl
fdivs
sbb
ret
jnp
pop
inc
mov
xchg
dec
adc
mov
in
push
jmp
mov
cltd
mov
mov
test
test
cli
cli
xor
cmp
ljmp
or
mov
daa
xchg
and
jp
fmul
mov
adc
and
push
sub
dec
in
lcall
ss
sub
inc
fs
insb
mov
or
fwait
add
loop
push
gs
scas
mov
lret
outsl
mov
fsts
mov
or
std
popa
mov
fnstsw
xchg
insl
xchg
and
sub
test
lret
inc
or
jle
lds
mov
pop
mov
xchg
aam
sbb
sahf
lcall
inc
into
stos
xchg
pop
call
jnp
mov
jp
notb
cmpsb
xor
jno
lods
cmpl
jne
add
add
mov
ljmp
xor
cltd
dec
rol
xor
cmp
xchg
lods
mov
aaa
es
hlt
mov
das
arpl
sbb
sub
pop
mov
fcompl
jl
inc
testb
push
ja
pop
test
adc
ret
jge
ss
or
loopne
flds
cwtl
or
shl
pop
outsl
push
andnps
pop
insl
and
push
dec
push
sahf
jl
out
cltd
push
mov
inc
push
or
sbb
mov
cwtl
jb
push
aas
jge
add
push
push
jns
pop
mov
mov
fsubrs
aas
add
call
ret
mov
loopne
aad
out
mov
pusha
mov
fisubl
rcrl
push
test
cmc
out
mov
mov
xor
hlt
cmpsb
imul
jbe
xchg
sbb
ret
cmovl
sub
pop
mov
insl
and
xchg
mov
scas
addl
xchg
or
cmpl
rcll
xor
in
movsb
les
loop
fnsave
adc
pop
jg
or
out
popa
push
and
fdivrl
or
jle
mov
lret
outsb
xchg
cmpsb
arpl
dec
lea
test
mov
mov
pop
xchg
mov
stos
mov
sub
jle
and
xchg
add
inc
sub
jo
lods
dec
cs
sti
xor
orb
movsl
push
mov
push
sahf
icebp
movsl
and
aam
sub
push
sbb
xor
subb
pop
lds
sti
cmpsl
inc
inc
and
sahf
mov
adc
fs
pusha
repnz
and
sub
imul
enter
add
push
and
and
jecxz
lds
add
sub
popa
sbb
shlb
push
insl
lods
std
mov
cmp
inc
nop
outsb
mov
icebp
sahf
jg
dec
mov
xor
xorb
mov
scas
xor
mov
insb
and
mov
push
xor
ret
xchg
mov
fidivl
insl
adc
adc
add
lock
xchg
push
stos
xor
or
push
lds
xchg
dec
data16
dec
mov
add
inc
int3
faddl
xchg
inc
xor
push
addb
and
or
int3
inc
dec
push
xchg
icebp
gs
xchg
inc
cwtl
in
rep
movsb
insl
mov
inc
jns
shrl
repz
mov
std
mov
dec
mov
insl
xor
xor
aas
shrb
xor
cld
add
xor
cld
pop
cmp
add
in
jbe
push
aam
nop
adc
mov
pop
cmp
lea
mov
scas
or
sub
loop
pop
mov
add
inc
stc
or
push
or
popf
push
inc
mov
mov
ss
xor
mov
leave
xorb
inc
add
in
mov
cltd
or
cltd
inc
add
mov
push
enter
ds
jp
sub
adc
leave
in
adc
inc
ja
data16
add
xchg
outsb
lea
imul
lahf
clc
ljmp
insl
inc
fimuls
inc
sub
push
ds
fdivrl
or
mov
mov
add
push
cmpsb
inc
sbb
add
shrl
cld
in
or
push
xor
mov
stos
cmc
sub
jp
mov
mov
fiaddl
or
inc
or
xor
push
fs
aam
pusha
out
scas
or
rsqrtps
aas
pusha
jmp
cmpsb
pusha
xchg
dec
aas
mov
arpl
sub
mov
jmp
cltd
jnp
xor
jle
and
pop
add
das
mov
inc
mov
lret
inc
adc
fcomip
xchg
push
jmp
movsl
pop
pop
cmc
cmp
sahf
dec
pop
test
es
dec
pop
jno
push
lds
and
xchg
xchg
xchg
or
xchg
subl
scas
lods
and
daa
jbe
insl
inc
add
add
mov
adc
jecxz
add
iret
sti
add
in
pushl
movsb
mov
nop
jnp
sub
sarb
mov
cmp
cmp
in
jnp
scas
test
and
das
sarl
jnp
sub
mov
and
sub
cmp
jno
push
shll
pop
xchg
mov
cmp
aam
push
outsl
inc
mov
repnz
mov
xchg
or
cwtl
and
cld
sub
xlat
and
int3
popf
mov
dec
add
test
cwtl
dec
and
notb
cwtl
jg
jmp
into
gs
adc
popa
call
cmp
mov
add
adc
pushl
push
insb
test
and
jns
adc
repnz
rcr
mov
sub
test
jnp
inc
pop
ret
out
mov
sub
adcb
cmc
into
xchg
lcall
sbb
sbb
cmp
adc
notb
or
jmp
jmp
jb
aas
sub
inc
nop
dec
adc
subl
fistps
xor
mov
or
adc
ss
push
jmp
pop
dec
insb
pop
leave
in
insl
xorb
pop
cmp
fdiv
jns
aas
mov
push
dec
pop
jmp
mov
ficoms
shr
bound
jge
jg
hlt
loopne
push
enter
andl
mov
rorl
xchg
pop
xchg
inc
add
iret
stc
fiaddl
fmuls
stos
cmp
addl
popa
cmp
scas
pop
add
push
sbb
inc
in
sub
jae
std
mov
mulb
mov
arpl
xor
dec
xor
sub
or
arpl
or
lock
mov
xchg
dec
cwtl
jmp
push
cmpsb
sub
cmpsl
add
push
xchg
scas
incb
mov
ds
or
push
or
dec
fdivrp
adc
pop
out
push
cmp
mov
dec
adc
inc
mov
lret
stos
insb
es
pop
mov
scas
cwtl
add
sub
mov
fisttpll
insl
into
or
jg
in
mov
sub
or
test
pop
mov
test
and
lods
fcompl
cmp
hlt
shr
cmpsl
or
xor
fdiv
and
popf
int
movsb
cld
pop
and
mov
jp
repz
sub
test
out
mov
cmc
divl
mov
mov
test
fdivrl
cmp
and
mov
out
pushf
andb
mov
jno
jne
or
mov
imul
cmp
fdivs
cmpsb
add
sbb
leave
test
in
outsl
stc
pop
push
dec
ret
xor
mov
repnz
iret
int
das
or
dec
mov
mov
lods
mov
sub
call
pop
mov
int3
sahf
aad
pop
jmp
mov
dec
movsb
cmpl
cmp
pop
add
test
lods
adc
mov
xor
cltd
pop
jge
lret
jmp
std
mov
subb
and
and
rorb
nop
stc
in
xchg
loopne
cltd
repnz
and
and
imul
movsl
sti
aad
or
lock
jno
jae
iret
jo
inc
add
inc
inc
push
nop
mov
ljmp
and
dec
sarl
or
rcll
popa
sbb
pop
roll
stos
sahf
cmp
mov
addr16
out
jnp
push
ljmp
xchg
movsl
out
mov
push
notb
hlt
repz
mov
lea
addr16
sub
pusha
fnsave
add
imul
jl
mov
cmp
lahf
cli
pop
inc
xor
ds
and
pusha
mov
xchg
mov
fstps
jne
lea
scas
sbb
xor
negb
loope
fldt
repz
pop
push
or
sbb
xor
ret
pop
pop
popfw
adc
inc
test
aaa
repnz
xor
subl
fidivs
addl
shll
add
insb
aas
mov
push
mov
xchg
sub
out
inc
lods
lods
mov
scas
stos
cmpb
mov
mov
mov
les
mov
fcoms
push
scas
inc
mov
pop
xchg
arpl
insb
sti
cmp
je
test
pop
sbb
add
push
jl
clc
mov
fsubl
das
pushf
sahf
flds
inc
jl
inc
mov
adc
add
jge
mov
repz
fdivl
mov
jns
pop
orb
es
nop
jg
aam
mov
outsl
stos
iret
stc
push
mov
mov
xor
adc
jno
lock
push
pop
pop
add
and
clc
in
stc
xchg
pop
fstpt
jp
mov
test
mov
js
sbb
mov
shrl
cltd
imul
mov
jge,pt
xor
sbb
xchg
and
mov
insl
pop
popf
push
pop
mov
cmpsl
shrl
xchg
push
inc
pop
xor
fsubl
sbb
ret
dec
subl
in
push
mov
lret
mov
pushf
mov
dec
push
sarb
fwait
lods
lcall
rcll
setl
std
hlt
and
nop
sub
cmp
push
test
dec
mov
and
fimuls
pop
lea
ret
jg
repnz
dec
sub
xor
pusha
out
js
dec
clc
jmp
loope
mov
mov
inc
inc
xor
imul
repz
sub
pusha
or
cmp
scas
lds
xchg
jl
mov
dec
cmp
nop
data16
xor
sbb
cwtl
imul
and
shlb
ljmp
adc
jg
mov
js
mov
and
adc
mov
adc
ljmp
ret
jno
pop
sub
pop
adc
sbb
in
orl
leave
xchg
aaa
jg
or
movsl
or
inc
sti
daa
cmp
inc
add
mov
jl
mov
xorb
mov
aas
pop
mov
es
loope
lock
repnz
mov
add
inc
jg
dec
pushf
jle
sbb
xchg
aad
mov
decb
inc
ds
mov
and
js
dec
jae
enter
ret
mov
and
mov
xor
sbb
inc
fists
dec
pop
lret
adc
sti
push
or
sarb
sahf
xchg
mov
nop
mov
test
iret
je
leave
fmull
add
in
jbe
add
xor
xor
idiv
test
jg
sbb
pop
sub
imul
cld
in
mov
lcall
push
or
pop
aas
jno
jmp
ret
push
je
insl
sahf
jg
test
sub
or
pop
sub
sub
pop
pop
adc
add
mov
jb
cltd
fwait
add
test
xor
adc
shrl
and
or
aas
gs
jle
mov
imul
mov
mov
fwait
nop
pop
inc
mov
push
ret
xchg
imul
xor
pop
add
ret
in
jmp
ds
inc
sub
stc
xchg
dec
jg
push
out
jno
and
in
sar
scas
jg
jae
dec
lods
call
in
fmuls
xchg
loope
pusha
xlat
jle
dec
out
sti
scas
inc
cmpsb
dec
addr16
jmp
cmpsb
jp
and
xor
and
pop
mov
cli
sbb
xchg
int3
xor
inc
pusha
mov
mov
fnstcw
and
mov
mov
jno
ret
pushw
stos
rorb
lahf
and
adc
loopne
aas
incl
mov
inc
add
jno
fdivrp
pop
mov
dec
sub
movnti
test
out
and
ret
dec
or
sahf
xchg
insl
sbb
movb
lahf
pop
inc
inc
cmpsb
push
int
sub
aam
enter
cmp
mov
outsb
xchg
or
adc
jbe
mov
repz
data16
lret
in
test
pop
xchg
stos
hlt
pop
pop
sub
out
imul
in
test
jge
ds
xor
xchg
mov
cwtl
add
into
popf
jecxz
pop
pop
aad
fnstenv
mov
pop
jmp
or
pushf
and
sahf
add
fldcw
mov
pop
pop
loopne
popf
jo
add
fwait
or
insb
ja,pn
int3
pop
mov
lds
into
sbb
mov
jns
mov
adc
push
repz
movsb
pop
dec
sar
idivl
dec
cmpsl
push
inc
add
inc
sahf
imul
out
and
shll
cmp
mov
idivl
mov
dec
scas
mov
xor
push
cmc
jmp
nop
push
xor
xor
roll
mov
sub
inc
les
sbb
dec
jl
loopne
addr16
mov
cmp
out
push
sub
jnp
mov
shl
sub
sti
push
pop
jge
xchg
lods
repz
jb
push
hlt
leave
jnp
xchg
cld
dec
jle
int3
jns
xor
xor
push
add
das
ds
sar
adc
add
ja
mov
cmp
jnp
hlt
arpl
xlat
cmpsl
pop
inc
jle
cmp
ds
mov
loope
or
popf
cmp
hlt
arpl
outsb
sti
loope
cltd
add
add
in
stos
nop
shrl
sbb
data16
paddd
jecxz
js
seta
nop
in
and
lahf
and
cli
jecxz
das
jl
jns
and
jmp
pop
jb
add
gs
arpl
ja
xchg
jp
pop
add
cwtl
jle
fldenv
out
add
icebp
aaa
and
loopne
mov
pop
ds
mov
xchg
cmc
jp
out
jp
dec
jo
add
int3
dec
and
adc
cwtl
clc
shlw
mov
push
clc
mov
daa
dec
aas
std
popl
js
jmp
cmp
and
xor
jnp
mov
pop
outsb
dec
aaa
sub
or
jo
add
mov
cld
push
call
xor
std
xchg
lds
bound
repz
mov
adc
push
inc
mov
iret
mov
cltd
es
jns
cld
stos
xchg
add
js
cmc
xlat
mov
pop
pop
jne
pop
inc
cmc
inc
filds
gs
lahf
icebp
add
inc
leave
jbe
int3
sbbb
mov
fistps
or
xor
cli
fcomps
or
repnz
push
add
pushf
mov
or
int
jmp
inc
repz
psubsw
cmpb
outsl
imul
movsl
or
add
sub
jmp
add
mov
rorb
cmc
popf
dec
push
lahf
mov
shll
mov
pop
inc
sbb
mov
aas
repnz
xorb
cmp
adcl
sbb
add
xchg
ret
cwtl
aas
paddsw
loopne
xchg
leave
pusha
cmp
loope
ret
das
jno
negb
cmp
jnp
clc
xchg
jg
fldt
mov
dec
ljmp
mov
xor
pmulhrsw
push
xchg
cmpsl
loop
xor
jmp
inc
lock
ds
jbe
scas
lods
fs
jge
fstpl
aaa
push
mov
dec
pop
dec
test
adc
iret
int
jns
jp
mov
pop
xchg
das
imul
int
cld
adc
mov
pop
outsb
cmpsb
inc
orb
popf
neg
int
pop
mov
xchg
push
aad
and
push
imul
clc
lcall
ss
add
pop
lret
mov
push
push
lret
cs
in
mov
ret
lret
fstpl
repz
cmp
fmull
mov
imulb
mov
decb
sar
ret
cwtl
aas
xchg
pop
out
xchg
flds
xor
xor
hlt
mov
and
out
dec
ds
dec
notrack
lret
mov
mov
or
iret
pushf
mov
pop
mov
and
addr16
sub
jbe
mov
imul
and
sarb
inc
fdiv
inc
imul
inc
nop
lahf
mov
xor
push
jle
out
mov
test
lods
jmp
mov
jnp
je
je
sbb
xchg
ds
fadd
fdivrl
cli
adc
add
pushf
test
inc
mov
and
into
jnp
outsl
mov
push
out
jge
not
ss
jno
ret
push
sub
aam
in
roll
lret
addr16
sbb
pop
push
inc
mov
sbb
lcall
sub
jg
and
dec
scas
out
mov
aas
and
dec
loopne
stos
lods
je
mov
jae
push
out
cmp
movsl
ss
or
insl
fcomip
adc
shll
int
cltd
fldlg2
mov
leave
mov
mov
aaa
adc
mov
mov
loopne
jg
aas
jb
mov
adc
icebp
jl
test
jnp
jp
cs
out
js
pop
loopne
js
push
call
jl
sub
dec
aas
xchg
ror
lds
int
mov
mov
lret
insl
arpl
push
cmpb
int
xor
lret
pop
test
sub
mov
adc
cs
pushf
push
enter
sti
test
inc
dec
or
dec
test
sub
hlt
daa
lahf
cli
and
aaa
aas
cltd
mov
cmp
mov
out
cmp
ret
fldcw
sahf
inc
sbbl
outsb
jbe
into
xchg
movsl
sub
sbb
add
sbb
and
push
push
sbb
pop
pop
les
cmp
std
sub
jnp
push
push
ret
rclb
add
es
sbb
push
sahf
xlat
daa
hlt
jge
aad
inc
mov
movsb
jb
mov
test
mov
lea
iret
mov
sub
pop
test
sti
fs
shl
out
nop/reserved
std
lahf
xor
pop
push
add
mov
in
or
and
leave
xor
aaa
ja
mov
fcomi
sbb
ds
adc
cmp
jl
push
sahf
sub
aam
cmp
out
scas
jno
call
mov
icebp
xor
mov
lret
jmp
add
fdivrl
push
repnz
add
mov
add
xor
hlt
add
fbld
push
push
add
sub
push
adc
cmpsl
mov
add
pop
bound
in
lds
pop
add
popf
add
fisttpll
push
fs
and
pop
mov
jae
and
data16
adc
outsl
sbb
sbb
call
pop
mov
or
arpl
out
mov
aaa
xchg
mov
sti
popl
mov
or
fwait
fwait
popf
mov
mov
cmp
jl
popf
andl
aaa
repz
enter
xor
inc
or
movsl
data16
add
or
addb
sub
ror
pop
push
fnsave
sub
sti
ljmp
xchg
lret
shl
imul
jg
andb
or
std
ret
xor
out
out
sti
mov
sub
adc
xor
lahf
in
adc
mov
mov
dec
xlat
dec
inc
mov
scas
das
push
fidivl
sti
push
data16
enter
jno
in
lahf
out
fdivrp
ja
mov
dec
cmc
rorb
push
test
sub
inc
and
inc
xchg
addl
inc
push
loop
mov
gs
mov
adc
idivb
add
jae
adc
mov
jecxz
cmp
cli
ds
cmp
adc
cwtl
es
add
mov
add
ja
xor
faddl
and
cmp
std
xor
or
outsl
std
push
arpl
and
xchg
movsb
fldenv
gs
ss
cs
inc
mov
mov
shr
cmp
push
bnd
movsb
xor
and
clc
jge
jp
test
add
loope
jg
mov
or
jp
mov
adc
add
or
mov
scas
cwtl
cmp
pop
push
xor
mov
das
sub
sbb
arpl
addl
lcall
cmpsb
and
leave
iret
scas
adc
pop
lret
mov
sbb
xchg
xchg
add
xchg
fsts
mov
dec
roll
daa
sti
pop
cld
xor
and
adc
in
das
xchg
push
jmp
call
stos
loope
adc
cs
add
ja
jnp
jmp
pop
or
loop
pop
outsl
bound
shlb
test
cltd
jecxz
mov
mov
push
ret
or
std
sbb
dec
sbb
lock
inc
inc
add
xor
fldln2
and
cld
mov
test
xchg
xor
iret
dec
lock
fildl
shrl
das
adc
icebp
out
je,pt
dec
in
jl
call
mov
xor
arpl
add
loopne
mov
jle
insl
cmp
pop
jne
sbb
add
dec
fs
daa
xchg
and
jns
pop
adc
sub
push
mov
fldenv
and
jge
out
iret
repnz
repnz
loope
sahf
dec
repnz
mov
lock
jge
push
aas
je
outsb
mov
fld
cmc
dec
aaa
movsb
add
pop
pop
lcall
jnp
adc
mov
mov
repz
inc
mov
mov
in
push
and
nop
fld
imul
or
cmp
xor
adc
cmp
jle
mov
ficoms
gs
pop
popa
inc
push
add
pop
cmp
mov
outsl
ja
cmp
outsw
sub
add
cwtl
sbb
icebp
jno
jnp
mov
pop
decl
mov
mov
scas
lret
lret
pop
pop
push
lds
sub
mov
in
insl
movups
sbb
sbb
mov
or
or
inc
addl
adc
pop
stos
jle
sub
ljmp
pop
jg
aas
xor
mov
int3
mov
out
mov
mov
pop
jl
sub
mov
add
sti
mov
sub
mov
mov
gs
fisttps
cltd
cmp
adc
call
mov
bound
nop
addr16
pop
pusha
xchg
sub
inc
sbb
repz
repz
xchg
idiv
inc
push
adcb
mov
testl
adc
or
sub
insl
cmpl
xlat
adc
rolb
add
imul
repz
xchg
jg
aaa
mov
mov
aad
shlb
fs
test
sbb
insl
lret
and
cltd
popa
shlb
xchg
sbb
inc
es
lcall
ficoms
sub
xor
and
in
mov
pop
adc
jg
push
sub
sar
cmpsb
ljmp
cmc
pop
outsb
mov
decl
jl
inc
adc
push
cmpsb
imul
jge
push
jmp
je
or
add
mov
mov
inc
jns
adc
stc
shlb
rcrb
nop
jmp
orl
sub
sub
imul
sub
dec
cwtl
push
outsl
nop
cs
push
cwtl
ror
xor
sti
xchg
aad
adc
cli
aad
inc
push
add
mov
add
xchg
test
gs
xor
sbb
jle
pop
incl
pop
iret
lahf
dec
lret
icebp
add
ret
dec
cld
repnz
fsubr
iret
cld
int3
jmp
pop
decl
sti
ret
or
aas
clc
out
cli
mov
js
mov
cmpsb
clc
loop
cmpsb
push
aas
inc
jecxz
add
add
inc
push
pop
xor
out
mov
out
mov
jno,pt
push
xor
daa
pop
into
test
es
xchg
ss
orb
inc
adc
mov
or
daa
lret
lahf
inc
or
mov
mov
leave
xchg
mov
adc
push
or
std
popa
jle
mov
imul
fisttps
and
and
sarb
mov
lahf
loopne
jg
sub
and
out
jmp
mov
mov
pop
mov
ds
jne
cmp
xlat
mov
jbe
clc
in
aam
test
sti
or
jecxz
and
in
cmp
sbb
pop
scas
sub
in
lahf
icebp
xchg
sub
cwtl
stc
push
je
mov
mov
xorl
enter
mov
add
dec
inc
sbb
fs
stos
xor
popa
adc
lcall
xchg
inc
gs
push
add
add
mov
mov
or
dec
loop
and
adc
xlat
jle
cmc
pop
push
iret
push
xrelease
insb
imull
hlt
clc
xchg
scas
mov
pop
mov
icebp
and
xor
and
in
cmp
into
inc
jnp
rorl
fucomi
out
pop
sbb
add
sbb
adc
mov
addr16
cmpsb
fcmovnu
int3
jbe
sahf
mov
add
repnz
mov
push
sbb
popf
push
xor
adc
je
pop
cbtw
mov
fwait
aad
cltd
sub
sbb
cwtl
adc
out
jle
out
dec
mov
push
sbb
sti
pop
jl
and
mov
sbb
dec
andl
insb
cwtl
stc
repz
in
jge
ret
xor
xlat
adc
cmpsl
push
aas
inc
cmpsb
jge
ret
cmp
imul
test
push
repnz
jle
adc
in
aas
jae
cwtl
pop
aaa
or
clc
pop
xor
mov
push
cmp
sbb
and
ja
out
mov
adc
jge
pop
lahf
js
pushf
push
push
add
mov
leave
inc
and
sti
xor
add
lea
add
cltd
dec
fistl
lahf
xchg
pop
ja
sbb
pop
and
gs
ret
pop
fistl
push
xor
lods
inc
pusha
dec
jg
cmpsb
stos
dec
and
test
and
dec
mov
mov
flds
xchg
mov
push
sti
fidivrs
outsb
sub
movsl
int
dec
jp
xchg
xchg
data16
int3
inc
sbb
mov
adc
and
cmp
mov
or
xor
adc
loopne
jge
std
push
and
mov
mov
mov
cmpsb
mov
fucomi
push
mov
or
cmpsl
and
or
inc
adc
mov
cltd
mov
mov
inc
int3
cmp
cmp
jnp
mov
mov
jmp
jg
xchg
in
je
inc
sti
pop
loopne
sub
jecxz
dec
in
jl
cmp
jne
gs
mov
or
xchg
cwtl
add
pop
or
xorb
xchg
sar
mov
es
int3
out
xchg
cmp
dec
pop
jns
pop
or
lods
xchg
rcr
xchg
leave
into
push
hlt
fildl
xor
cmp
mul
scas
pop
xor
fisttpll
sbb
jnp
and
arpl
hlt
add
ja
xlat
pop
and
mov
jo
cmp
lods
or
mov
insl
jae
xchg
xor
and
repz
shlb
jno
enter
in
pop
std
ret
mov
rcrb
enter
cli
fnsetpm(287
and
shrl
pusha
adc
clc
sub
pop
cwtl
ds
push
adcl
xlat
repnz
les
xor
inc
inc
or
sub
push
sub
das
jg
inc
pop
sub
pop
cwtl
pusha
push
shrb
mov
add
and
add
mov
push
loopne
push
movsb
in
fidivs
jae
ja
imull
mov
clc
scas
pmullw
and
mov
in
mov
jae
test
xchg
push
jg
popl
call
dec
fld
mov
inc
cmp
sti
push
lock
jb
sbbl
mov
or
mov
std
data16
fs
mov
or
popa
ficoms
xor
movl
out
inc
sub
adc
subb
fisttpl
and
js
cwtl
dec
in
add
arpl
lahf
jns
inc
mov
push
add
add
mov
mov
shr
sub
sub
dec
push
stc
mov
into
leave
fistpll
cli
adc
xlat
lods
add
cmc
mov
aas
bound
push
jne
js
pop
xchg
jmp
or
inc
push
dec
cltd
mov
je
mov
pusha
push
lret
out
mov
xor
cld
in
xchg
push
sub
je
lret
stc
loop
xor
fldt
lock
mov
out
imul
jnp
pop
push
or
ja
or
inc
out
xchg
inc
imul
mov
insl
stos
lods
dec
push
lret
sti
inc
dec
adc
jecxz
jg
ret
call
movsb
or
gs
aas
jmp
shll
mov
pop
mov
cmp
mov
sar
nop
lock
pushf
cld
std
jecxz
xchg
adc
fistps
rorb
xchg
mov
dec
int3
sbb
push
gs
fnstenv
and
push
mov
xor
cmp
das
sub
xchg
hlt
xchg
pop
cld
and
rolb
loope
cmp
decl
insl
jp
out
mov
dec
adc
pusha
rcrb
test
lret
jl
fsubrp
iret
or
loop
inc
data16
addr16
insb
sbb
fwait
mov
out
and
das
add
cld
fmull
add
clc
mov
iret
mov
ret
cmpsl
fidivs
mov
push
lcall
mov
and
add
sbb
xor
lcall
cmp
xchg
repz
in
jge
shlb
add
sbb
inc
orl
rcr
and
xor
scas
xor
inc
mov
sbb
in
ret
xchg
and
popf
outsl
mov
popa
jns
cld
cld
and
and
outsl
incb
cmp
cmp
jbe
dec
lahf
xor
ljmp
test
or
pushf
popa
cli
clc
aaa
ret
cwtl
fs
jo
fstpt
aaa
xchg
xchg
stc
lock
fidivrl
or
repnz
add
add
xchg
leave
push
add
ror
mov
lret
in
ss
bnd
add
jg
lcall
inc
fidivs
lahf
xchg
push
int
mov
cmp
sti
add
mov
push
xchg
pop
scas
mov
jb
repz
dec
clc
xlat
inc
loop
jmp
add
mov
sbb
push
pop
pop
test
jge
sub
mov
in
ljmp
popa
test
add
and
dec
mov
mov
dec
pop
and
sbb
fcompl
repnz
in
movsl
movsb
mov
cld
bound
daa
mov
std
jbe
cmpsb
cmpsb
repnz
mov
in
pop
popa
xor
fwait
xor
pop
andb
stc
jns
pop
lret
jmp
xchg
ret
sbb
aam
mov
dec
std
lcall
repz
cli
jle
adc
in
std
cmpsl
mov
pop
jg
or
into
and
jecxz
mov
out
std
orl
sbb
loope
test
out
jbe
xor
and
dec
subb
mov
pop
push
addb
hlt
add
roll
test
mov
inc
ret
pushf
lock
mov
xchg
mov
repnz
sbb
adc
rorb
andl
enter
fs
and
push
xor
ret
cwtl
jle
xor
or
in
pusha
dec
cmpl
mov
xchg
lock
arpl
xchg
add
xor
orl
sub
pop
mov
arpl
shrb
push
cld
mov
jb
outsb
iret
insb
das
gs
add
pop
cmp
and
dec
cltd
repz
in
ss
mov
push
adc
jge
jne
cltd
xchg
jge
sub
incl
out
jnp
das
and
add
lcall
out
dec
mov
jnp
dec
movsl
stc
fwait
loopne
xorl
test
nop
add
test
push
ljmp
aam
inc
push
sbb
or
aas
cmp
pop
repz
mov
pop
popf
rcll
sub
cmp
add
add
adc
mov
sub
mov
or
xchg
push
mov
adc
mov
in
or
add
aas
shl
mov
inc
mov
pop
fisubs
jne
in
mov
sahf
repz
cmp
fcomps
pop
ss
call
sbb
ret
cld
lods
mov
ds
xchg
mov
inc
xor
clc
jge
sbb
loop
cltd
jl
xchg
aas
std
orl
orb
clc
lds
xor
ret
inc
pop
push
test
jo
sbb
imul
mov
mov
xor
das
mov
pop
and
fwait
cmp
cmp
sub
dec
sub
fidivs
scas
jno
scas
add
cmp
cmp
sub
mov
pushf
mov
jne
sbb
mov
mov
cs
insl
shld
adc
ret
ret
jo
nop
jge
loopne
and
jns
imul
xor
xchg
pop
pop
ss
outsb
rcrb
lea
enter
pop
xchg
out
andl
fs
inc
xchg
loope
ss
mov
lcall
out
or
cltd
jecxz
push
fisttpl
push
inc
xor
cmc
dec
jge
mov
aam
jg
mov
jl
xor
sub
or
lahf
mul
or
push
mov
test
test
xor
lods
icebp
push
test
in
in
arpl
cmpb
add
or
sbb
pop
sbb
add
cmpsl
mov
inc
dec
ds
aas
push
add
repz
in
jo
inc
jo
shrb
pop
cmp
mov
movsl
outsl
lods
aam
cmovo
inc
jp
pop
dec
mov
mov
push
icebp
sbb
add
mov
icebp
rclb
rep
pop
sbb
shrl
mov
push
pop
fists
inc
add
in
pop
inc
add
jne
dec
cmp
pop
push
inc
enter
push
xor
scas
cmp
lcall
testl
gs
pop
jmp
fisubrs
movb
sub
pop
mov
xchg
or
pop
test
bound
cmc
sbb
mov
pop
arpl
xor
add
xor
or
fs
cmp
sub
pop
rcrl
and
jecxz
lods
repnz
pop
or
test
mov
or
add
inc
and
jae
or
div
pusha
mov
rcll
inc
inc
add
pop
cmp
mov
cmc
mov
jge
scas
hlt
jp
rolb
sub
mov
data16
push
data16
add
ja
jp
cmp
xor
pop
hlt
or
cld
add
daa
xchg
sbb
xlat
mov
call
sbb
pop
in
sub
sti
xchg
xchg
adc
fisubrl
cmpsl
push
sar
mov
jp
test
fiadds
cmpsl
out
and
test
pusha
aam
lods
cmpsb
xorl
test
test
sub
pushf
add
adc
mov
sub
mov
adc
es
cmpb
addr16
dec
out
lcall
sbb
sbb
paddusb
aam
mov
xor
jl
mov
mov
mov
jp
mov
mov
aad
or
add
push
or
dec
mov
ds
das
lahf
lods
icebp
pop
xlat
jbe
cmp
repnz
orb
jl
jecxz
int3
stos
pop
std
ljmp
cmp
dec
xchg
xchg
push
cld
adc
loope
cmc
push
out
and
lcall
andl
xor
adc
test
call
jge
sbb
das
aad
mov
add
insl
mov
scas
xchg
pop
nop
mov
dec
fsubs
push
mov
out
push
out
incb
ret
fcomp
add
andl
lahf
sub
sarb
lea
push
add
pop
sti
add
and
or
aas
xchg
sbb
and
hlt
inc
lahf
outsl
iret
or
clc
das
aas
pop
aaa
or
out
out
ja
dec
ror
add
or
mov
repz
and
punpcklbw
in
jg
aas
push
sbb
rorb
adc
adc
adc
or
rorb
pusha
outsl
lret
out
pop
cmpsb
loope
cld
aad
test
adc
cmp
xchg
jo,pn
nop
scas
aas
icebp
add
cmpsb
cmpsl
xlat
push
dec
mov
es
mov
xor
je
in
push
add
pop
mov
lods
sub
and
adc
mov
repz
inc
ret
cld
xor
in
loopne
mov
test
lcall
repz
or
cmpsb
int
mov
rol
push
xchg
jge
mov
mov
jno
pop
cmp
or
imul
dec
dec
mov
mov
cwtl
fildl
test
and
or
call
icebp
or
icebp
dec
popf
repnz
jmp
add
lea
loopne
std
jo
add
jns
outsb
mov
mull
jbe
pop
add
int3
jnp
add
sbb
std
sbb
add
pop
mov
icebp
cmp
addl
adc
xchg
inc
ds
pop
cmp
jl
pushf
pop
cld
loop
jne
push
push
inc
add
mov
cmp
xchg
xchg
enter
push
nop
sbb
roll
and
add
test
sahf
push
pop
cltd
daa
xchg
add
icebp
jg
mov
in
daa
mov
cmp
aas
jg
gs
insb
hlt
cmpsl
mov
inc
outsl
mov
divb
ljmp
or
xchg
arpl
cltd
mov
lahf
add
inc
xchg
inc
addb
mov
lds
or
pop
cld
aas
mov
pop
mov
addb
inc
rcr
and
dec
sti
sbb
xchg
sbb
adc
es
cmp
mov
jbe
pop
dec
popa
inc
mov
pop
or
jo
daa
cmc
rcrl
adc
stc
sub
repnz
push
iret
loopne
mov
pop
aaa
ja
jl
or
sbb
hlt
mov
movsb
xlat
xchg
addr16
popa
push
outsl
pop
fs
xor
frstor
adc
or
std
leave
cmpsl
daa
outsl
rcrb
ja
cli
imul
cmpsl
cld
mov
sbb
jl
in
sbb
pop
jecxz
pop
jmp
add
or
adc
dec
orb
sub
sbb
mov
ljmp
repnz
or
push
js
shlb
sahf
inc
add
lock
insb
andb
divps
into
lods
repnz
mov
leave
inc
sub
inc
insl
add
xor
inc
mov
ljmp
int3
sub
into
cmp
sti
jp
test
adc
dec
or
sbb
loop
fprem
and
fs
test
pop
push
push
pause
test
push
scas
jb
es
or
and
loop
pop
add
orb
pop
out
lret
leave
ret
cmp
and
test
dec
das
out
out
jge
jl
sbb
and
decl
or
fidivs
adc
sub
add
jo
scas
jns
xchg
hlt
cmpsl
cmpsb
push
rcl
test
popa
repz
int3
xlat
aas
aas
ret
push
aas
jle
jg
jbe
jns
pushf
adc
rcll
cmc
fsubs
hlt
xor
clc
repnz
stc
aam
jg
shll
ljmp
pop
pushf
cmc
cld
lret
nop
mov
mov
nop
inc
inc
push
mov
mov
out
stos
cmpsl
aas
ja
sbb
cmp
call
sahf
ds
dec
std
xlat
pop
fidivl
enter
aad
int
rclb
pop
pop
mov
inc
cmp
cmc
imul
pop
adc
into
dec
dec
cmc
xchg
cmpsb
mov
or
test
xchg
mov
das
add
stc
cmp
bound
pop
into
push
mov
adc
shlw
mov
and
inc
xor
push
pop
push
mov
and
jno
mov
fisubrl
or
test
loopne
and
cwtl
test
add
xlat
pop
lcall
pop
sbb
rcll
mov
out
sahf
cmp
mov
jns
outsl
cmp
call
das
idivl
adc
pop
or
jne
mov
jge
xchg
loop
adc
cltd
push
mov
jnp
cmp
pushf
sub
mov
push
leave
jg
jge
out
jnp
pop
sahf
stc
fists
xchg
repnz
popf
lret
cld
icebp
sbb
pop
jns
daa
sahf
jle
iret
or
ja
pop
or
stc
aam
lret
and
cmp
lahf
pop
sbb
mov
loopne
xor
adc
movsl
jle
orb
sbb
push
les
incb
popl
lahf
mov
gs
add
dec
mov
push
add
test
push
add
imul
rcrb
jae
inc
or
add
mov
and
test
cs
adc
adc
mov
pop
push
out
rep
xor
cmc
aam
repz
xor
ret
divl
ficomps
and
push
dec
sub
insl
scas
popa
cmc
mov
fnstcw
and
lahf
add
fmulp
loop
adc
pop
jp
pop
idivb
int
inc
ljmp
xor
addr16
pop
mov
sbb
push
mov
out
into
pop
shr
jle
dec
xor
stos
sbb
xor
dec
and
and
scas
cmpsl
pop
jmp
sub
cmpsb
pop
ljmp
ljmp
or
inc
std
xchg
leave
aad
or
into
cs
jle
andb
xchg
mov
out
mov
add
ret
add
pop
sbb
dec
les
jo
lock
ds
cmp
xor
mov
mov
cmp
pushf
scas
repz
xchg
jns
fsubrs
add
repnz
push
push
add
in
in
jnp
loop
mov
mov
xlat
xchg
jnp
inc
stc
retw
popf
sbb
pop
push
pushf
jecxz
mov
dec
daa
jbe,pt
sub
bsf
jge
pop
or
push
pop
jl
addr16
insl
jbe
mov
inc
jns
dec
dec
lock
fwait
adc
fwait
aad
das
and
push
nop
popl
pop
mov
sub
test
xchg
and
gs
and
jl
aam
lds
dec
sbb
mov
out
lods
pop
adc
adc
jle
mov
cmp
in
sarb
out
xlat
push
loop
inc
sahf
jle
mov
arpl
ja
inc
in
dec
inc
stc
dec
mov
cwtl
mov
inc
js
adc
mov
adc
ja
call
mov
mov
dec
sbb
out
arpl
ret
nop
loopne
sub
imul
arpl
mov
fdivrl
mov
cmp
icebp
inc
sbb
scas
push
into
popf
cmp
mov
jo
int
cmp
add
mov
xchg
mov
xor
cmp
lods
movsl
sbb
sub
push
adc
mov
aam
scas
inc
cmp
loope
inc
daa
out
jecxz
jo
push
out
mov
push
out
jle
jp,pt
push
xchg
in
ja
add
lea
adc
pop
sub
test
pop
mov
push
push
cmp
adc
cmp
push
enter
fdivs
loopne
daa
lock
cmp
orl
jmp
or
test
popf
add
push
cmc
hlt
mov
and
nop
inc
adcl
and
mov
popf
and
in
or
cmp
dec
fildll
les
sub
ja
xor
insb
sbb
int
sbb
jo
inc
out
pop
jmp
lret
das
add
into
iret
pushf
sbb
pop
aaa
or
movsl
dec
insl
sub
test
test
out
rorl
fwait
inc
cmp
stc
mov
mov
scas
pop
scas
add
push
xchg
push
mov
fnstcw
lods
mov
dec
dec
fimull
in
push
jmp
inc
mov
lahf
inc
daa
adcb
imulb
in
and
dec
stos
dec
add
js
rep
out
imul
jmp
clc
aam
lock
xchg
sahf
mov
mov
inc
and
pop
notl
xchg
dec
pop
push
js
pop
mov
repnz
popl
adc
movsl
cmp
cmp
faddl
add
add
mov
aam
dec
mov
ret
sbb
jo
push
push
add
inc
shr
fstl
inc
pushl
push
mov
push
scas
test
jae
out
pmaxub
sub
push
clc
sbb
vpmacssdql
add
cmpb
adc
vmovaps
mov
fldt
cld
mov
sarb
scas
bound
aad
cli
lods
shlb
sub
mov
xchg
jo
push
clc
fsubrp
cli
jecxz
jno
ja
divb
mov
pop
or
push
sarb
enter
pop
loopne
pop
test
mov
sub
or
push
mov
repz
ja
push
push
addr16
pop
test
sub
inc
pop
mov
push
dec
mov
and
cli
push
testl
cmp
das
pushf
push
out
test
enter
adc
mov
inc
jnp
jne
ja
lret
scas
test
shrb
cmp
in
testl
inc
shll
sbb
xlat
mov
mov
nop
xor
iret
add
xlat
ficoms
adc
scas
mov
xchg
inc
mov
ds
stc
dec
cli
pop
add
mov
fs
stc
imul
jmp
jmp
call
mov
notb
pop
jle
mov
adc
jg
stc
leave
lret
enter
adc
and
push
repz
jb
push
or
add
xchg
sbb
pmaddwd
fsubrp
test
xor
jb
push
lea
dec
and
mov
daa
jo
mov
outsb
fnstcw
fisubs
dec
int3
into
mov
mov
arpl
cmc
push
push
cltd
ret
sahf
cmpsb
mov
test
mov
add
add
cs
ret
inc
insl
ret
mov
lods
mov
add
mov
pop
dec
jne
stos
push
cmp
mov
testl
ret
rolb
rorb
pop
jp
pop
add
push
pop
or
rorb
jg
fdivrl
mov
std
xchg
adc
iret
dec
pop
adcb
ja
shll
xchg
out
xorl
test
out
sbb
lret
or
inc
dec
pop
jo
xchg
lret
adc
add
push
push
jbe
mov
sub
pop
pop
repz
jmp
push
adc
aaa
or
cld
loopne
iret
roll
push
or
pop
pop
dec
enter
xchg
pop
loopne
push
add
int
push
cmc
mov
cmp
cmpsl
mov
add
daa
out
aaa
mov
add
mov
mov
mov
pop
mov
adc
sti
adc
or
mov
ds
pop
mov
xchg
push
std
dec
sahf
dec
adc
loop
mov
inc
psubsw
shrl
pop
pop
push
push
stos
scas
sahf
adc
lcall
mov
add
adc
add
lock
out
jo
mov
das
or
dec
in
mov
add
daa
hlt
bound
dec
nop
sahf
push
add
and
jns
mov
fidivl
add
inc
sbb
push
mov
insl
in
jae
ja
movsl
enter
jp
sbb
mov
aad
push
or
outsl
xor
push
jmp
xchg
sbb
repnz
sti
fxam
movsb
pop
leave
push
xchg
inc
pop
push
outsl
sbb
popf
rol
lret
es
loope
xor
ficoms
add
push
inc
sbb
mov
mov
adc
xor
lods
lods
mov
les
adc
adc
out
inc
push
add
and
jnp
push
shrb
sbb
rcrl
call
lock
or
mov
scas
cli
or
mov
std
out
leave
xor
xchg
int
in
adc
pusha
jecxz
int3
jge
and
push
out
arpl
xor
bound
push
jmp
pop
stos
lahf
mov
ret
nop
mov
imul
cmp
out
cmp
sahf
enter
sahf
dec
cltd
push
into
mov
add
hlt
lods
mov
lods
call
lahf
mov
aad
rcll
dec
test
lock
add
xchg
dec
sub
sbbl
mov
adc
sub
insl
orl
andl
popf
fbld
xchg
lret
inc
mov
scas
cmpsl
lods
jp
dec
shrb
out
pop
mov
fnstcw
loope
ret
mov
std
adcl
lahf
jne
push
cmpsl
pop
in
sub
fimull
pop
test
push
add
bound
out
jo
int
mov
push
mov
mov
xchg
enter
inc
mov
and
push
push
jecxz
popa
inc
and
xlat
in
fmull
dec
loope
sub
cmp
aam
and
cld
add
xchg
loop
ja
in
cmp
shlb
jecxz
inc
inc
std
gs
movsl
outsb
pop
jno
mov
maxps
fimuls
xchg
dec
xchg
sbb
inc
daa
push
hlt
xchg
es
je
cmp
fnstcw
xor
xchg
testb
adc
sub
sub
cltd
js
cmp
and
push
cltd
mov
adc
push
movsl
cli
dec
enter
hlt
xchg
inc
inc
fnstcw
test
clc
pop
rcll
je
lret
jg
sbb
dec
out
inc
dec
mov
mov
daa
dec
jno,pt
loopne
jle
das
pop
cs
adc
rolb
andl
jle
daa
cmp
pop
fnstcw
in
insl
fbld
or
fbld
mov
lret
sub
add
leave
or
mov
xor
xchg
pop
test
dec
dec
and
pop
sub
or
jo
inc
shlb
into
cs
aas
rorl
cmp
fstpt
jno
pop
add
aam
sub
shrl
add
push
clc
ret
pop
sub
int3
call
inc
leave
stos
daa
sti
in
test
rol
outsl
dec
popa
mov
push
xlat
mov
shlb
push
and
fisttpl
mov
js
in
xchg
add
mov
adc
mov
movzwl
or
xchg
sub
push
cli
incl
adc
add
fwait
sbb
enter
xchg
cmc
lock
or
cwtl
cmp
xchg
push
js
sub
add
nopl
sbb
cmp
ja
mov
popf
xchg
js
aad
mov
bound
mov
add
mov
repnz
mov
mov
test
icebp
rcrb
xchg
sarb
out
mov
push
scas
fstpl
or
inc
and
push
cmpsb
loop
inc
pop
in
popa
jns
or
adc
and
cmp
addr16
push
bnd
sbb
inc
inc
add
or
dec
inc
inc
push
or
shld
mov
gs
sub
loopne
add
movsl
movsb
sub
cltd
call
xchg
push
mov
push
jp
mov
sbb
xor
and
andb
sbb
mov
cwtl
jg
out
clc
mov
and
outsb
pushf
test
xchg
dec
in
or
mov
repz
int3
sbb
dec
cmpsl
xchg
push
lret
icebp
or
movsl
adc
movsl
inc
add
inc
gs
mov
mov
ds
mov
sub
rcrb
call
scas
sub
stos
fwait
jmp
dec
loope
stos
xchg
inc
add
stos
sbb
jg
out
js
mov
mov
fsts
xor
lods
mov
movsl
hlt
xlat
cs
cmp
push
pop
addb
test
movsb
rcrb
into
inc
xchg
inc
xor
and
and
mov
dec
mov
bound
dec
sub
pop
popf
jg
in
movsb
pop
shll
pop
cmpsb
or
add
sbb
adc
pusha
adc
add
ja
xchg
mov
sbbl
jne
adc
mov
add
test
outsb
inc
cltd
fdiv
gs
popf
iret
mov
xor
push
rorb
sub
and
fs
jb
in
mov
enter
push
das
lahf
ljmp
or
ja
mov
push
cmpsb
ljmp
lds
std
xchg
cmc
xor
iret
dec
xchg
repnz
out
fiadds
mov
leave
add
mov
push
loope
pop
stos
das
mov
loope
pop
mov
jbe
push
sbb
jmp
xchg
subl
and
push
mov
adc
fs
popa
xchg
jmp
jge
inc
cmpsl
jnp
cmp
imulb
add
sbb
scas
ss
insl
inc
add
hlt
add
push
rcl
mov
imull
push
pop
fcomip
mov
mov
sbb
aas
out
jl
cmp
add
test
int
rol
cwtl
or
xchg
aas
dec
xor
outsl
sti
push
mov
jae
mov
cmp
ds
je
ja
xlat
imull
negb
rorb
sub
pusha
into
xor
jae
xchg
push
in
xlat
std
icebp
mov
clc
cmp
daa
imul
sub
or
add
int3
sub
mov
das
lds
fiaddl
jecxz
sbb
add
mov
xchg
test
or
inc
icebp
negb
into
mov
or
sbb
in
repz
ret
outsb
mov
stos
add
add
idivb
or
pop
xorb
mov
aaa
xchg
hlt
ja
push
or
pusha
push
cmpsb
xchg
ljmp
jne
pusha
aad
pop
gs
test
push
jl
push
pop
xlat
pop
loope
add
jns
les
adc
test
ds
mov
jbe
push
pop
pop
call
adcl
aaa
aaa
xchg
fbld
push
add
pop
cwtl
jnp
enter
mov
mov
lock
shll
cltd
push
dec
test
sbb
fs
loopne
mov
sub
pop
add
cmp
pop
mov
test
lret
jo
dec
xor
sbbb
mov
rorb
jmp
jnp
in
movsl
fs
lods
hlt
testb
repnz
jns
xchg
or
mov
add
add
add
adc
filds
insl
xlat
test
imul
out
mov
outsb
adc
mov
jecxz
push
fdivs
dec
mov
iret
sub
ret
out
push
addr16
jle
outsb
stos
out
mov
call
xchg
mov
cli
sub
aad
cmpl
scas
pop
mov
popf
icebp
adc
mov
js
into
loope
iret
xchg
rclb
add
inc
xor
cmp
and
in
scas
push
cmp
sbb
rclb
mov
bound
mov
add
pop
call
mov
sbbb
stc
pop
mov
lahf
imul
out
xor
repnz
in
addb
xchg
sbbl
pushf
outsl
fnstsw
mov
add
sub
xor
out
out
or
jp
add
mov
inc
xor
mov
mov
mov
nop
movsl
sub
icebp
mov
hlt
les
cmp
js
ds
and
and
mov
rol
push
add
cmp
imull
sub
xchg
cs
icebp
ja
xchg
mov
sbb
push
notb
pop
cmpsb
scas
movsb
push
inc
xor
sbb
sahf
cwtl
pop
pop
or
cmpsb
lods
mov
cmp
inc
or
out
daa
jge
aam
jb
enter
loope
icebp
sbb
mov
fs
dec
pop
lds
add
mov
stos
mov
lods
lods
adc
mov
xadd
dec
fnstsw
or
inc
mov
xchg
jp
loope
scas
stos
lret
cmpsb
icebp
rcr
sbb
pop
inc
ja
and
sti
lret
lods
dec
mov
aad
mov
pop
pop
cmp
mov
pop
mov
add
add
ljmp
jle
jno
loopne
push
fdivp
and
xchg
pop
mov
jge
fistpl
mov
xor
adc
add
push
adc
hlt
in
dec
pop
cmp
dec
into
sbb
cli
jno
nop
mov
pop
ja
jg
add
hlt
xchg
repnz
cmp
fists
out
aad
std
and
sub
adc
rclb
or
xlat
push
or
or
jg
add
xor
fidivs
mov
cmpsl
mov
stos
jae
push
jne
cmpb
cmp
jne
pop
lahf
push
mov
mov
or
mov
nop
inc
pusha
jae
arpl
xchg
cmc
ja
mov
frstor
aad
in
sbb
push
or
pop
pop
clc
xlat
add
js
ret
mov
push
push
add
add
push
int
push
xor
adc
mov
mov
aad
arpl
jle
sbb
stos
clc
adc
add
xorb
inc
push
mov
stos
xor
ja
sub
and
loopne
add
mov
or
in
adcb
dec
sub
mov
into
pop
xchg
sub
mov
mov
mov
add
out
stos
lret
stos
dec
push
shrl
adc
pop
out
scas
inc
lret
mov
add
sub
lock
jle
add
ret
lret
stos
xchg
mov
add
push
xor
add
xor
sub
jae
push
lock
add
mov
mov
mov
sbb
mov
jmp
jae
mov
pop
scas
imull
lahf
inc
sti
fisttpl
adc
subl
imulb
push
pop
add
pop
xor
inc
into
or
push
push
xchg
mov
fldcw
cmp
mov
enter
out
mov
mov
mov
sub
mov
lahf
xchg
sub
push
jl
cld
and
mov
and
inc
cmpl
fmull
cmpl
xor
xchg
pop
arpl
subb
mov
enter
add
repz
fxam
pop
mov
mov
pop
leave
cmc
das
pop
je
rcrl
movsl
fcoms
out
incl
imul
mov
out
mov
sbb
mov
push
push
or
sbb
fdivrs
mov
loopne
xlat
test
rorb
test
push
mov
test
dec
push
in
jmp
push
jo
mov
mov
imull
mov
es
mov
xor
xlat
add
mov
inc
xchg
add
add
adc
repnz
cmp
lea
movsbl
xor
data16
pusha
add
cmp
cmp
jbe
push
xchg
and
sbb
addr16
dec
push
sbb
or
sub
add
fdivrs
inc
pop
pop
das
shlb
pop
jo
push
data16
gs
mov
addr16
mov
mov
cmp
mov
jle
out
inc
sub
and
cmp
enter
or
ret
lret
popf
jmp
mov
scas
fcompl
sub
adcl
into
mov
or
fwait
sbb
cmp
lds
lods
stc
das
inc
insb
push
pop
bswap
lret
mov
pop
xchg
imul
leave
xor
lret
sbb
aad
lock
add
dec
inc
dec
inc
scas
inc
pusha
subb
xor
pusha
flds
add
inc
mov
jecxz
xchg
adcb
inc
push
add
or
pop
fldenv
flds
and
push
fsts
orb
fsts
fstps
dec
addl
xorb
xor
dec
fldenv
add
jge
push
pop
mov
pop
sbb
add
sbb
add
push
popl
add
jl
adcb
fnstenv
fsts
dec
mov
jno
fstps
fldenv
push
and
inc
mov
add
or
add
cwtl
add
mov
push
sbb
aas
mov
mov
cmp
dec
xor
push
push
test
and
or
xchg
call
or
lret
decl
rcr
fmuls
pop
leave
decl
dec
mov
or
xchg
out
or
sbb
fldcw
fldcw
jb
add
xchg
or
dec
enter
jmp
dec
mov
or
decl
sar
or
int3
decl
push
mov
ljmp
push
mov
inc
pop
hlt
cmpl
lods
or
enter
clc
decl
lahf
decl
test
stos
fldcw
fadds
jg
ja
incl
push
iret
incl
and
add
push
mov
rorb
popf
add
push
incl
jns
lock
decl
cwtl
incl
or
movsb
fstps
fsubs
es
bound
addl
incl
incl
mov
xor
rcr
mov
add
jo
xchg
aaa
and
or
lcall
xor
sub
xor
cs
daa
daa
loop
and
repnz
push
incl
pop
mov
add
dec
jo
inc
jo
inc
lock
pop
or
or
push
mov
cmpsl
lods
and
cmp
fsubs
rcr
or
dec
jo
dec
xor
add
stc
movsl
decl
insl
mov
ljmp
dec
lcall
scas
sahf
call
mov
jmp
ror
fxch
sar
mov
xchg
jae
popa
pushl
outsl
incl
data16
dec
mov
mov
jae
inc
jo
inc
xor
rcr
dec
aam
pop
pop
lock
int3
cmpb
sub
jge
inc
xor
fcomps
fistl
enter
call
das
dec
pushl
sbb
pusha
dec
mov
aam
repz
clc
jecxz
in
loop
in
loope
fsubr
loop
icebp
in
push
jmp
clc
in
loopne
jecxz
mov
xor
or
pop
fs
add
sbb
std
call
mov
flds
xor
scas
cmpb
push
jae
ljmp
push
mov
inc
xor
mov
idiv
sbb
jg
push
or
ds
mov
lock
jmp
in
loop
in
in
out
in
fiaddl
in
daa
ljmp
out
dec
mov
icebp
out
in
int
jl
pop
lcall
push
push
decl
push
xchg
call
into
lcall
push
xor
mov
decl
lcall
inc
pushf
or
pusha
shlb
call
mov
ljmp
cmp
or
ja
arpl
ljmp
lock
xor
fdivrp
icebp
jmp
out
hlt
out
out
jmp
xor
ljmp
mov
ljmp
cli
out
in
movsb
xchg
mov
and
push
decl
aas
push
fmul
fs
lret
popf
push
cmpb
or
pusha
jge
or
and
dec
jmp
dec
mov
imul
bound
out
dec
jb
jmp
push
out
jmp
stc
cmc
repnz
cli
div
fdivr
cmc
fdecstp
inc
mov
xor
repz
push
lock
loopne
in
dec
xor
fst
lock
cli
lock
stos
lahf
xchg
jmp
adc
adc
pop
incl
lretw
dec
stos
adc
mov
pop
xor
pop
dec
dec
pusha
lock
lock
lock
xor
lock
clc
cmc
icebp
sti
stc
idiv
std
sti
cli
std
call
inc
xor
cld
sti
inc
xor
inc
mov
xor
dec
xor
gs
loopne
stc
out
loop
xchg
xchg
lcall
pop
xor
fisubrl
sbb
test
sbb
pushl
es
rol
mov
clc
icebp
out
clc
jmp
inc
push
dec
push
std
std
cld
pop
jo
push
repnz
gs
out
push
jg
push
dec
dec
lcall
adc
push
adc
sub
pop
and
mov
xor
push
decl
hlt
jmp
inc
mov
into
jl
aad
xchg
fdiv
icebp
out
add
cld
cli
stc
clc
repz
in
dec
xor
repz
mov
push
pop
jmp
sbb
sbb
dec
jne
pop
sbb
sbb
sbb
pop
scas
fcos
fnstenv
inc
xor
scas
sub
pop
push
mov
iret
push
in
jns
lcall
xor
lcall
xor
jmp
ds
jmp
inc
std
lcall
lods
sti
add
fimull
jae
jae
in
jo
pop
jno
in
lcall
dec
lcall
pop
sbb
and
sbb
sbb
xor
lcall
pop
fcmovbe
fnstcw
lock
adc
jmp
pop
stc
jmp
lcall
ds
lcall
cmp
push
sub
add
fdivs
fimull
hlt
cmpb
xor
jo
jge
jmp
aad
hlt
out
lcall
push
jmp
sbb
fxch
dec
xor
fimull
cmpb
in
push
and
and
pop
call
icebp
pushl
incl
add
incl
cs
lcall
cmp
and
and
jne
fstpt
cmpb
stc
cmc
bnd
in
jo
leave
mov
and
and
cli
and
sbb
and
sbb
mov
push
dec
xor
andl
dec
notb
ljmp
lock
sbb
mov
jle
sar
sbb
loopne
sub
jmp
inc
and
idiv
adc
idiv
or
imul
inc
icebp
cmpb
div
in
pop
xor
loop
cmp
xor
sbb
and
sbb
dec
jno
cmpb
xor
sub
and
sub
fcomps
inc
nop
stc
incl
or
incl
and
decl
sub
or
ss
jmp
fnstsw
std
out
push
inc
clc
cld
sti
repz
jo
fdiv
pop
xor
testb
clc
hlt
icebp
jo
out
int
dec
ds
lcall
sbb
es
xor
push
ljmp
sub
dec
icebp
sub
and
into
mov
nop
std
jmp
and
ljmp
inc
idiv
ss
sti
ljmp
xor
lcall
xor
jmp
mov
mov
mov
xchg
xchg
mov
jle
mov
je
fnstenv
jle
es
mov
inc
mov
fdivr
hlt
icebp
jmp
sti
clc
cmc
es
out
out
in
jmp
inc
inc
lcall
pop
jmp
push
dec
xor
fsubrs
es
jmp
push
and
cmp
jg
xor
decl
mov
mov
sbb
jo
mov
enter
push
lret
and
decl
and
decl
adc
incl
jg
decl
sbb
decl
sbb
call
sub
clc
sbb
fcoms
pop
fdivr
sbb
fcos
or
int3
decl
pop
mov
lcall
lcall
rcl
clc
imul
cld
idiv
div
in
push
jmp
into
incl
cmp
push
adc
push
aaa
cs
sbb
adc
sbb
xor
cmp
das
ljmp
sbb
dec
repnz
pop
adc
dec
repnz
in
call
or
lcall
pop
iret
ljmp
inc
ljmp
cli
fdivs
cs
gs
fadds
sub
data16
dec
inc
hlt
and
lcall
sbb
mov
imul
push
ljmp
fmul
push
xor
sub
and
sbb
jmp
and
ds
cmpb
mov
aas
cmp
arpl
jno
in
jmp
stos
call
xor
decl
daa
push
mov
jmp
add
icebp
ljmp
xor
add
cli
incl
sub
ljmp
lock
add
inc
repz
lock
xor
pop
hlt
fcomps
fdivr
sub
mov
fcmovnbe
test
sbb
daa
imul
jnp
cmp
xor
cmp
cs
and
sbb
aaa
inc
cmp
cld
xor
outsl
mov
sbb
cmp
push
pushf
incl
adc
ljmp
in
call
in
push
and
push
xor
ljmp
dec
hlt
call
ss
lock
dec
xor
push
dec
decl
dec
icebp
daa
dec
lock
lock
icebp
or
sub
or
dec
lock
add
idiv
daa
inc
icebp
push
or
test
jmp
adc
sub
sub
dec
xor
and
inc
cmp
ljmp
push
and
das
and
pushl
and
jmp
pop
and
call
sub
push
xor
call
and
jmp
stc
lcall
cmp
mov
xor
dec
jo
pop
fcomps
push
xor
adc
fdivs
pop
or
fadds
gs
cmp
dec
icebp
gs
lock
cmp
inc
lock
push
and
lcall
movsl
jp
xor
mov
ljmp
push
xor
sub
sub
sbb
and
adc
and
jmp
sbb
decl
sub
ljmp
inc
loop
add
dec
lock
push
xor
jmp
inc
lock
sub
call
cmp
cmp
pushl
dec
mov
fdivs
jns
sub
pop
jmp
and
ljmp
xor
sbb
xor
jno
std
incl
inc
idiv
pop
xor
mov
fdivr
or
in
xor
decl
sbb
pushl
and
pushl
jl
mov
sbb
das
and
in
adc
jns
lock
add
int
xor
decl
sub
pop
xor
dec
xor
incl
jecxz
sub
xchg
jmp
sub
and
and
jmp
adc
sbb
sub
fsubs
and
adc
and
add
push
adc
lcall
pop
sbb
sbb
inc
call
xor
pushl
push
pop
jo
clc
imul
sub
push
push
iret
incl
adc
ljmp
push
enter
or
sbb
daa
cmp
incl
pop
incl
adc
lcall
cmp
lcall
xor
xchg
sbb
or
adc
sub
push
fcomps
pop
jns
call
lcall
or
sahf
jmp
mov
imul
es
push
jmp
adc
or
and
decl
and
fldt
xor
push
xor
incl
sbb
ljmp
daa
push
sub
or
decl
mov
lock
sbb
dec
call
lsl
and
sbb
fcoms
and
dec
decl
xchg
decl
mov
decl
mov
mov
push
scas
bound
lock
lcall
dec
jae
pop
push
jge
sbb
call
sbb
idiv
adc
mov
lcall
sub
test
add
insb
add
test
and
incl
jecxz
adc
adc
daa
push
or
pop
mov
incl
mov
decl
mov
jmp
fsubrs
rcr
sub
fsubrs
aam
and
dec
mov
xor
test
lock
flds
add
incl
lcall
and
lcall
adc
call
insb
incl
sbb
mov
sub
sbb
test
add
jne
cmpb
adc
pusha
mov
lods
call
ljmp
push
sbb
sub
clc
sbb
add
lock
rcr
fstp
dec
in
fcoms
fcoms
fcoms
inc
jmp
lock
jo
mov
fwait
dec
je
ficompl
push
push
jnp
sub
pop
jmp
sbb
pop
pop
scas
pushl
inc
iret
decl
adc
pop
cmpb
jmp
adc
sub
sub
and
pop
and
sub
sbb
and
decl
jl
dec
repnz
ss
lock
out
fcoms
fcomps
fcoms
inc
repz
loop
das
rcr
sbb
xor
pop
xchg
lcall
inc
jmpw
push
and
sub
and
sbb
ljmp
xor
incl
or
add
add
lea
and
adc
sub
and
sub
fcmovu
sub
pop
dec
jo
jmp
cmp
pop
push
call
xchg
into
lcall
mov
dec
lock
sub
and
outsl
jo
fadds
sahf
stc
incl
mov
decl
outsb
test
sbb
and
jg
and
and
and
and
xor
and
push
push
jge
add
xor
push
add
sub
sub
push
dec
xor
dec
jno
xor
or
sub
inc
lcall
cmp
outsl
fsubrs
jmp
imul
push
outsb
call
inc
pop
jns
lcall
push
ljmp
dec
mov
sbb
and
dec
jo
fldenv
push
inc
xor
decl
or
add
add
and
mov
fstps
adc
call
dec
call
ror
jmp
fcompp
decl
or
sub
adc
sub
or
dec
cmp
inc
mov
mov
lcall
adc
jmp
push
mov
mov
cli
inc
icebp
pop
xor
ss
and
outsl
cmpb
scas
dec
mov
fimull
daa
sbb
jmp
loop
std
shrl
lcall
adc
jmp
sub
jmp
loope
icebp
inc
mov
in
call
lcall
sbb
dec
testb
xor
xor
jmp
and
data16
std
sbb
js
dec
cmp
jmp
xchg
mov
pop
sbb
sbb
adc
jns
ja
xchg
push
repnz
inc
xchg
mov
mov
pushl
xor
jmp
and
inc
cmpb
sub
push
cmc
sub
test
fcmovu
fdivr
das
xor
pushl
xor
lcall
sub
popf
sahf
call
mov
jg
stc
clc
clc
inc
mov
push
and
and
pushl
sub
lock
sbb
cmpb
sub
and
das
push
jo
and
fldenv
sti
and
scas
dec
mov
int3
into
cmp
inc
call
mov
lcall
dec
lock
mov
bound
decl
popa
addr16
cld
cld
cld
dec
leave
enter
sbb
and
daa
sub
sub
inc
fs
mov
sub
cmp
sub
sub
sbb
fwait
xchg
xchg
dec
repnz
stc
stc
ljmp
jbe
imul
mov
mov
and
adc
lahf
popf
popf
call
rcl
lcall
pusha
inc
enter
lods
scas
lcall
adc
dec
xor
dec
aaa
es
jo
and
sbb
cmpb
cmp
inc
xor
fdivs
fadds
xor
cmp
pop
push
push
jns
jp
xor
adc
pop
bound
push
sbbb
imul
sbb
ds
testl
pop
sbb
cmpb
and
lret
cmp
dec
aaa
xor
fmuls
xor
ss
call
std
std
push
mov
lods
jmp
mov
popa
mov
push
dec
xor
mov
mov
and
sbb
and
and
hlt
and
and
pop
pop
sbb
cmpb
ds
inc
inc
lcall
cmp
push
cmp
call
aaa
decl
mov
dec
xor
dec
fcoms
jmp
sbb
daa
sbb
ljmp
dec
lock
sbb
jmp
dec
lock
popa
ljmp
pushw
dec
mov
sbb
xor
pop
sbb
cmpb
jge
ds
imul
pop
inc
cmp
xor
lock
xor
pushl
and
sub
sub
dec
mov
cmc
fcomps
daa
push
and
sbb
adc
daa
daa
dec
stc
dec
mov
jo
fstps
cmpb
pop
inc
inc
ljmp
dec
pop
jb
dec
icebp
xor
cmp
lock
ljmp
dec
mov
stc
sub
std
dec
mov
fdivrs
and
xor
push
pop
sbb
cmpb
and
dec
dec
mov
dec
dec
call
cmp
inc
das
cs
cmp
cmpb
dec
mov
dec
mov
dec
mov
cmpb
sbb
cs
push
inc
inc
decl
cmp
sub
xor
and
repnz
icebp
dec
mov
daa
dec
jo
mov
and
lcall
mov
cmpb
and
lea
xor
cmp
pushl
es
das
and
ljmp
and
dec
xor
and
fsubrs
and
jmp
and
cld
push
xor
mov
dec
jle
sbb
and
sbb
and
and
and
repnz
repnz
repnz
xor
rcrb
push
mov
dec
jo
xorb
orb
add
clc
incb
jg
sar
cli
aas
inc
jg
std
incb
inc
fadds
cli
sbb
jno
inc
jno
shl
cli
xchg
loopne
pop
incb
sbbb
lock
cli
clc
push
ret
stc
dec
repnz
jne
inc
std
dec
js
jb
dec
lock
repnz
dec
hlt
dec
icebp
decb
dec
cmp
add
cli
dec
orb
pop
cli
inc
add
cli
rolb
jg
and
inc
flds
inc
xchg
enter
mov
fnstenv
inc
dec
fnstcw
fsts
fcmovu
or
and
dec
flds
xor
sbb
cmpb
icebp
aaa
or
popa
fwait
or
fisttpl
pop
mov
decl
gs
or
decl
inc
mov
test
add
jo
jo
fstps
add
push
test
mov
decl
popa
sar
or
decl
pop
mov
sub
mov
and
push
mov
or
std
incl
mov
scas
fadds
subb
gs
call
sub
clc
prefetchwt1
push
or
adc
imul
jp
fadds
fsubrs
lods
std
decl
xchg
or
fisttpl
and
xor
inc
push
xchg
icebp
cmp
lcall
iret
fadds
decl
nop
sbb
call
pop
call
stos
mov
lods
movsl
lcall
arpl
adc
sbb
incl
jmp
rcr
inc
rcr
push
dec
lock
xchg
pusha
loope
jg
cmp
jle
pushl
fsubrs
jb
dec
inc
inc
inc
xor
jmp
loopne
fsub
xlat
in
loop
in
in
call
mov
call
push
test
push
mov
lcall
incl
fmuls
xor
int
adc
cmp
cmp
jno
call
xlat
out
out
push
jmp
push
out
call
inc
icebp
inc
jno
jecxz
out
in
fmuls
pushf
xchg
mov
sbb
inc
incl
int3
push
lock
fadds
test
pcmpeqw
mov
daa
das
pushl
mov
inc
lock
clc
hlt
lock
sti
stc
idiv
cld
sti
cli
std
loopne
push
imull
icebp
inc
repnz
jno
jno
nop
pop
jo
xor
or
mov
push
scas
cmpl
sub
ss
leave
inc
xor
fsubr
out
repz
cli
cli
stc
dec
in
cld
cli
clc
push
repnz
push
jmp
ljmp
jmp
and
inc
lock
sub
xchg
xchg
ljmp
jno
incl
in
dec
fs
pushl
repz
repz
xor
jmp
inc
mov
ljmp
daa
sub
pop
sbb
push
sbb
adc
xchg
sbb
ud0
fnstcw
lock
iret
pushl
aam
xor
inc
std
lcall
fsub
in
cmpb
pop
xor
lock
repnz
inc
inc
jmp
sbb
dec
jo
dec
xor
inc
std
das
and
cmc
ljmp
dec
dec
push
jmp
ret
aaa
icebp
ljmp
inc
std
ljmp
inc
cmc
cmp
call
aad
cmpb
cli
div
push
ljmp
jmp
pop
and
and
sbb
jo
inc
std
xor
sub
xor
dec
xor
pop
push
push
fs
lcall
xor
lcall
xor
fcos
cmp
mov
out
in
in
in
fiaddl
cmc
hlt
cmc
popa
mov
pop
jp
icebp
jns
test
jmp
sbb
sbb
push
push
push
inc
std
cmp
sub
ss
sub
inc
hlt
push
push
fs
jmp
pushl
inc
fbld
cmp
sbb
sahf
jmp
sub
pushl
inc
ljmp
dec
fmuls
pushl
fsubrs
jecxz
stc
clc
clc
push
push
jnp
jmp
sub
and
xor
sub
sub
cli
cmc
inc
lock
ret
pop
popf
decl
pop
stos
incl
pop
lret
inc
call
lcall
cmp
push
sub
daa
dec
fmuls
ljmp
inc
in
pop
sub
ljmp
mov
int
iret
jmp
jnp
insb
jmp
sbb
fcomps
fdivrs
xor
pushl
sub
lods
cmpb
push
inc
aas
in
jo
sub
sub
mov
and
jmp
cmp
decl
in
pushl
idiv
sub
push
xor
call
sub
daa
dec
fcomps
fmuls
xor
add
and
lcall
lods
decl
aas
ljmp
sbb
ljmp
inc
xor
cmp
jno
addl
inc
ss
lcall
cmp
incl
sbb
jecxz
cmp
inc
cli
and
push
lcall
inc
fdivrs
pop
fmuls
dec
xor
inc
lock
ljmp
inc
repnz
sub
call
iret
jmp
and
mov
sub
cmp
adc
push
mov
dec
lock
sbb
mov
push
xor
call
das
in
ss
in
pushl
push
lods
cmp
sub
xor
sub
sub
ljmp
dec
loopne
adc
sti
pushl
dec
jo
push
and
loop
pop
sub
fcomps
arpl
daa
sub
push
cmpb
pop
mov
sub
adc
jmp
xor
jmp
loop,pt
ss
int3
pushl
aaa
lcallw
sbb
push
jne
adc
xchg
pop
jo
icebp
decl
mov
adc
call
pop
xorl
sbb
sbb
dec
jmp
cmp
jmp
cs
aad
or
lcall
pop
aaa
lahf
cmpb
jp
and
mov
jmp
cmp
ljmp
aaa
xchg
lcall
sub
lods
incl
pushf
clc
mov
call
mov
sbb
fcomps
enter
fcoms
mov
add
or
push
mov
call
inc
pusha
decl
sbb
out
inc
add
cmp
sahf
jo
jg
adc
mov
sub
decl
sbb
xor
push
addl
lahf
fsubrs
fmuls
fmuls
fadds
xor
fcoms
dec
xor
sahf
dec
xor
ficompl
sub
decl
sbb
popl
add
sbb
sub
jo
fstps
xchg
lcall
mov
fmuls
fmuls
fadds
fsubrs
inc
lock
inc
clc
or
mov
jmp
jo
and
push
and
sub
cmpb
jns
pop
adc
std
sub
xor
inc
decl
jmp
push
jmp
sbbl
sbb
call
xorl
das
jmp
icebp
fidivl
sub
incl
jnp
cmc
sub
inc
mov
dec
leave
cli
repnz
jmp
das
cltd
xchg
xchg
sti
hlt
lock
mov
inc
xor
inc
cld
cmp
xor
xor
sub
sub
and
sub
mov
fiaddl
cmpb
cld
clc
cmc
pushl
cmpsb
test
dec
mov
std
cld
push
out
out
out
jmp
jle
jns
testb
xor
jmp
pop
sbb
and
lahf
sub
and
xor
and
mov
lcall
pushl
clc
push
push
dec
xor
pop
decl
enter
mov
sti
inc
xor
sub
jmp
pop
sbb
daa
and
pusha
xor
sub
sub
cmp
sub
xchg
lea
popa
arpl
imul
dec
inc
inc
pushl
imul
out
decl
and
inc
repnz
daa
and
cmp
sub
dec
xor
decl
xor
dec
xor
lcall
dec
inc
repnz
lock
repnz
xor
loope
inc
jbe
push
push
push
lock
mull
cmpl
pusha
push
cmp
cmp
push
cmp
decl
pushl
imul
inc
dec
jno
jno
dec
inc
inc
lcall
pop
jmp
and
and
push
scas
cmpb
cmp
dec
lcall
aas
call
aaa
incl
pushl
es
sub
jo
cmc
sub
daa
fcmovu
inc
mov
cmc
inc
mov
pop
pop
sbb
imull
adcb
cmp
dec
dec
lcall
aas
inc
testl
dec
jo
lock
push
pop
sbb
daa
and
out
dec
ds
cmp
inc
neg
sub
sub
and
xor
jl
adc
and
jo
sub
mov
xor
sub
sub
and
and
pop
inc
jb
adcb
rcrb
lock
inc
xor
cld
fdivrs
rcr
inc
mov
inc
mov
aas
fcmovu
jg
fiaddl
add
loopne
ljmp
dec
xor
fnstenv
flds
add
pusha
or
sub
sbb
pop
sbb
pop
adc
inc
bound
fsts
fsts
push
fldenv
pop
adc
pop
pop
adc
jb
sbb
inc
lock
xor
sbbb
outsb
jae
outsb
int3
in
or
cli
decl
xchg
clc
incl
mov
mov
and
pop
push
mov
cs
decl
xchg
cli
fmuls
int
or
xorb
sbbb
jge
lock
decl
fmuls
test
incl
decl
mov
mov
mov
pop
inc
outsb
cwtl
decl
xchg
incl
leave
pushl
int3
fcoms
jge
push
mov
sbb
jne
call
lock
dec
jmp
sar
jmp
aad
in
jecxz
fsub
fsubr
pop
mov
movsl
jmp
pop
test
cmp
in
cmp
or
fcomp
sbbb
insl
int3
pusha
or
dec
mov
loop
push
jmp
push
repnz
stc
cmc
repnz
repz
repz
push
out
call
inc
mov
dec
incl
sahf
fucomip
or
pusha
subl
and
mov
dec
mov
jmp
repnz
std
dec
std
std
cld
clc
inc
lock
jmp
mov
scas
adcb
pop
and
fstps
sub
lcall
pushl
in
call
icebp
push
cmc
sti
inc
cli
in
stc
div
push
call
sar
push
dec
dec
jmp
sbb
push
sbb
lahf
sbb
fimull
out
outsb
bound
fdivr
and
out
inc
std
lcall
ds
call
inc
adc
push
mov
push
jb
insl
outsb
jmp
push
and
inc
xor
pop
flds
xor
sub
push
and
jl
jb
ror
jmp
and
in
pop
ss
call
aam
push
lock
out
out
out
sti
div
notb
push
xor
stc
testl
jmp
sbb
cmp
and
jge
jne
mov
push
ss
lcall
sub
mov
call
sub
cmp
aaa
dec
lret
imul
mov
out
in
in
pusha
xor
decl
sbb
jmp
sbb
pushl
sub
inc
sti
das
popl
xor
repnz
pop
lcall
and
lcall
xor
lcall
aas
clc
xor
xor
ds
lcall
jmp
inc
mov
sub
aas
xor
and
cmp
xor
and
call
es
lcall
xor
clc
xor
clc
cmp
decl
push
jmp
push
outsb
jo
fsubs
pop
add
sti
ljmp
inc
add
ljmp
and
xor
inc
jno
fs
daa
and
or
ss
call
loop
ds
loopne
cmp
popf
cmp
imul
cmp
sub
ljmp
dec
jl
xor
inc
movsl
lcall
in
ljmp
inc
hlt
call
sub
lcall
and
das
and
sub
scas
out
or
mov
cmp
ljmp
xor
adc
call
push
cmp
xchg
loope
mov
fmuls
scas
fadds
icebp
call
pop
xchg
push
push
mov
sbb
cmp
cmp
call
and
mov
pop
adc
sbb
fbld
cmp
lcall
and
sbb
add
cmp
fadds
fsubrs
shlb
mov
mov
fiaddl
test
lcall
sbb
decl
sbb
les
inc
push
add
addr16
and
sub
and
lcall
dec
jne
adc
incl
fadds
fsubrs
fcoms
inc
lock
jmp
das
notrack
mov
sbb
mov
pop
sbb
jp
gs
sub
fcmovu
dec
inc
inc
lcall
push
jmp
pop
insl
decl
cmp
es
and
sub
call
push
push
push
sbbb
sub
and
sub
clc
ror
leave
inc
rol
cmpsb
movsl
cmpsl
jmp
sbb
sar
loopne
flds
cs
pop
sbb
and
xor
and
xor
ljmp
js
std
cld
ljmp
ljmp
push
sbb
mov
das
std
jmp
jp
inc
icebp
fisubrl
sub
jmp
pop
sbb
sub
and
das
das
incl
xor
inc
stc
loop
loopne
ljmp
dec
icebp
rcl
call
fabs
loope
jmp
lock
dec
xor
and
lahf
sbbb
inc
xor
fistps
cmp
push
cmp
jmp
push
jmp
inc
dec
ljmp
dec
jo
push
push
jmp
push
push
push
lock
and
and
pop
pop
sbb
sbbb
pop
pop
xor
inc
out
bound
decl
cmp
sub
sub
xor
inc
lock
sub
es
and
mov
sbbb
and
push
xor
inc
fists
inc
cmp
sub
inc
cmc
fdivr
push
xor
pop
xor
and
push
adc
sub
xorb
xor
dec
xor
and
fistps
push
pop
sbb
psubusw
std
fcmovu
lock
add
inc
mov
inc
mov
std
fiaddl
clc
fiaddl
aas
add
add
incb
incl
sub
dec
inc
pop
roll
enter
mov
cmp
jno
je
aam
jno
xlat
das
jbe
fsubl
data16
xor
jg
or
pop
cmpsl
mov
cmp
stc
ss
loopne
jnp
jp
stc
sub
fldpi
inc
aam
jmp
into
lcall
xchg
inc
xchg
lret
scas
mov
repnz
xchg
iret
call
int
sub
aad
inc
stc
adc
xor
jmp
int
jmp
xlat
sti
clc
idiv
stc
div
push
lock
out
out
inc
ss
jbe
daa
dec
cmp
in
xlat
in
in
push
repz
jbe
loopne
std
cld
sti
clc
hlt
push
lock
jecxz
xor
jns
pop
and
fsts
andb
das
inc
repnz
dec
lock
div
dec
cli
div
out
in
call
pushf
jmp
sbb
push
sbb
out
inc
icebp
xor
es
icebp
lcall
ja
out
stc
ljmp
in
incl
lock
jmp
repnz
lock
cmc
cld
cld
cld
inc
adc
push
out
jmp
jmp
sbb
dec
jb
xor
lods
sub
inc
ljmp
sub
ret
pushl
out
decl
repz
jle
in
jmp
lret
jmp
es
icebp
and
mov
cmp
das
cmp
sub
lcall
ss
daa
inc
repz
cmp
pushl
push
pop
xor
fmuls
xlat
ljmp
push
sub
xor
aas
xor
dec
push
xor
sbb
sar
or
jmp
dec
mov
pop
daa
fwait
call
sub
clc
sub
sbb
sbb
xchg
ljmp
daa
addr16
sub
sbb
xor
xor
decl
push
mov
incl
mov
call
mov
fadds
mov
and
mov
push
sub
jns
sbb
pop
jp
or
lcall
fsubrs
stc
adc
incl
test
and
pop
pop
inc
decl
std
sub
and
sub
jle
mov
add
add
inc
icebp
es
and
in
pop
sbb
and
pushl
and
mov
subl
inc
repnz
daa
xchg
addl
and
push
cmp
call
cmpb
inc
lock
and
xor
dec
cmp
pusha
dec
dec
decl
xor
xor
and
xor
fldenv
and
and
pop
addb
sub
inc
cmp
mov
das
and
and
daa
and
cmpsl
and
push
cmp
rcrb
das
fiaddl
inc
xor
loopne
fdiv
pop
inc
adc
add
add
adc
stc
add
sub
shlb
and
test
add
aaa
inc
shrl
xor
jno
inc
push
xchg
stos
clc
add
xor
inc
repnz
jae
inc
adc
add
sbb
mov
clc
pop
inc
push
sbb
nop
inc
pusha
addl
addb
xchg
sti
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jnp
sti
mov
fdivrp
fucomi
fucomp
ljmp
jle
mov
mov
xchg
jbe
in
fcomip
fs
jnp
cli
mov
jle
jmp
mov
out
inc
std
pop
scas
cmpsb
or
aad
ljmp
out
lcall
push
mov
hlt
xchg
icebp
out
mov
jg
lahf
idiv
sti
out
mov
ja
lahf
mov
sti
out
repz
mov
jg
mov
notl
out
sti
push
xlat
std
imull
dec
daa
iret
stos
mov
mov
vhaddps
mov
jnp
jg
hlt
scas
pop
pop
sti
fcomip
mov
js
pop
scas
es
cld
out
repz
out
idivl
aaa
loopne
es
xchg
xchg
jge
stc
jg
repnz
mov
mov
ljmp
scas
jmp
jnp
mov
aas
out
imull
mov
jmp
out
mov
mov
negb
ds
std
in
out
jge
jg
repz
jmp
out
lret
jmp
jl
bnd
call
xchg
xchg
pushl
pushf
xor
mov
out
sti
ret
fidivrs
lcall
rcll
ja
jno
fnstsw
mov
jmp
add
cld
pop
call
out
std
jg
pop
sti
out
cli
out
pushl
pushl
std
jge
fildll
sti
push
mov
jmp
repz
idiv
sti
mov
std
out
arpl
sub
jge
test
outsb
jb
es
lahf
call
stos
lahf
jg
ljmp
mov
stos
stos
scas
mov
mov
jge
idiv
out
jmp
jnp
sti
std
jg
imul
out
mov
pushl
mov
mov
cli
fsub
jg
sti
out
cli
pushl
mov
mov
idivl
jg
mov
jp
pop
ljmp
fildll
scas
push
push
jg
jg
jg
enter
stos
lods
jg
idiv
pop
jecxz
out
sti
out
mov
fucomip
scas
jmp
stos
test
jg
out
lcall
push
push
push
std
push
push
push
mov
mov
aam
jle
stos
ljmp
mov
sti
scas
mov
ja
hlt
jge
sti
mov
outsb
fnsave
idiv
jg
divb
aas
dec
cmc
in
cmc
cmp
jg
mov
fldt
out
jnp
mov
push
sti
sti
mov
cmp
scas
idivl
mov
call
outsl
int3
cld
icebp
adc
jg
lret
mov
outsl
sbb
out
mov
push
idiv
fcmovu
outsl
ds
out
out
jg
std
mov
fdivrp
jmp
mov
mov
fucomip
lret
jg
jne
jle
ljmp
jg
idiv
fistps
ljmp
imul
out
scas
fsubr
sti
fstpt
pushl
in
idivl
jg
ja
stc
jg
ja
sti
lcall
mov
cli
stos
xlat
stos
out
out
jg
jge
scas
scas
cmc
mov
push
fnstsw
cli
cmc
pop
jne
jle
lahf
out
std
fidivrl
ljmp
out
std
sti
jmp
imul
out
jg
in
stc
pushl
insl
mov
out
jg
fdivrl
cld
cli
fbstp
negl
out
jg
sti
mov
pop
cld
sti
stc
outsl
lret
mov
cmp
out
push
mov
out
out
ljmp
stos
jg
mov
jns
neg
decl
sti
scas
sti
sti
push
push
repz
out
idivl
push
mov
idiv
out
imul
icebp
sti
mov
push
jg
lods
jg
in
sti
aad
out
jmp
out
sti
in
xlat
mov
fdivp
std
into
dec
pop
imul
imull
aad
imul
mov
addr16
push
push
std
push
push
push
mov
jge
push
push
test
push
in
push
push
push
push
dec
cmpsb
pop
aas
jg
out
pop
div
mul
mov
xlat
fsubr
mov
icebp
ffreep
mov
fcos
fpatan
stos
jecxz
jg
xlat
xchg
das
jl
std
push
std
in
jmp
out
jnp
idivl
jle
out
xlat
std
mov
fisubs
lcall
out
in
int
std
iret
stc
sbb
jg
inc
cmp
jbe
ljmp
mov
jle
jg
std
icebp
lahf
out
cmp
out
std
out
lods
sti
fisttps
repz
out
lock
mov
jmp
clc
neg
mov
cmp
mov
dec
push
std
mov
mov
jmp
pop
jg
push
stos
stos
mov
stos
stos
stos
aad
push
push
xchg
push
push
push
dec
addb
add
push
add
mov
xchg
jmp
jg
ficompl
aaa
jnp
clc
aas
testl
out
mov
jg
cld
stc
pop
fnstenv
stos
stos
mov
push
push
cmpsb
jl
cli
aaa
pop
pop
repnz
mov
stc
push
aas
imul
outsl
xor
mov
fstpt
adc
out
mov
ret
ljmp
aas
in
out
jg
fxch
idivl
cmp
mov
xor
std
orps
adc
push
push
push
mov
test
stos
mov
inc
stos
movsl
inc
push
push
push
push
adc
inc
dec
xchg
sub
sub
adc
movsb
test
xchg
sub
push
adc
push
adc
stos
sub
mov
stos
xchg
push
push
sub
push
push
push
push
push
sub
push
push
push
test
push
push
push
test
push
adcl
push
push
test
sub
mov
ljmp
xchg
out
add
stos
stos
std
stos
test
fildll
stos
push
jecxz
fs
adcl
cmpsb
imul
xlat
int
out
mov
add
inc
or
fisubrl
push
sti
std
call
outsl
iret
out
fistps
jge
push
pop
fs
stc
out
jg
sti
mov
cmp
fsubrp
jnp
fucomip
out
push
out
movsl
jg
out
dec
fistpll
push
imul
push
rorb
enter
xchg
xchg
jg
inc
push
pop
jmp
inc
sub
pop
push
push
push
push
fldt
insl
lods
inc
mov
jg
repnz
cmpsl
idivb
std
data16
pop
push
mov
push
pop
dec
clc
mov
push
sti
mov
sti
mov
push
out
std
sti
sti
push
out
sti
mov
idivl
cli
push
out
std
jg
stc
idivl
lret
out
out
decl
jg
out
out
jg
push
jg
sti
mov
idiv
mov
mov
sti
out
mov
idiv
sti
scas
jmp
imul
out
push
push
jg
jg
std
mov
ljmp
std
xlat
jg
push
jg
fisubrs
repz
jg
push
ja
sti
out
jg
out
mov
push
out
push
jmp
sti
ja
mov
sti
out
sti
mov
sti
mov
jg
std
jecxz
std
out
sti
out
mov
std
push
jg
mov
mov
push
jg
std
fucomi
fucomi
mov
std
push
sti
out
mov
std
sti
push
std
std
std
in
jg
mov
mov
std
out
std
fstp
mov
sti
std
mov
mov
fcomip
mov
mov
push
mov
ljmp
fdivr
pushl
pop
std
out
cmp
fistpll
mov
std
call
scas
cmc
push
aas
cmc
fwait
lock
fimuls
fcompl
jmp
ds
mov
mov
aas
out
out
jg
push
sti
pop
jg
mov
ud0
cld
pop
out
cld
mov
mov
inc
jge
fdivrp
sti
out
sti
imul
std
call
sti
fdivrp
sti
std
push
jmp
idivb
std
data16
pop
push
clc
das
jg
pushl
mov
mov
sti
in
jle
std
std
out
out
std
sti
pushl
repz
pop
jg
mov
ud0
sarl
lret
sti
mov
cld
inc
push
jmp
push
jg
std
arpl
sahf
cltd
stos
cli
mov
pop
jg
mov
bsr
mov
inc
jge
push
in
jg
jg
jg
ljmp
ljmp
std
push
out
sti
sti
jg
mov
out
jg
pushl
std
fucomp
mov
out
push
std
sti
jg
push
sti
out
out
div
std
idiv
idiv
sti
push
sti
pop
pop
and
adc
out
sti
jg
outsl
shl
call
std
and
std
out
mov
sti
out
std
sti
mov
sti
mov
std
jle
jg
mov
pushl
sti
mov
sti
std
mov
mov
in
mov
mov
jg
mov
mov
cli
jl
sub
jg
mov
movswl
inc
sti
ljmp
out
cs
push
pop
jg
mov
idiv
fucomip
idiv
jnp
sti
mov
mov
sub
addr16
std
lods
pushl
pop
jnp
stc
jg
std
dec
jno
mov
mov
push
idiv
in
jg
out
mov
sti
ljmp
push
jg
fucomip
jmp
mov
ud0
pop
mov
loop
jg
call
idiv
mov
jg
sti
idiv
sti
idiv
mov
cld
xlat
idiv
ljmp
add
out
cs
push
pop
jg
mov
push
mov
out
std
std
idiv
std
std
jo
test
mov
movsl
ljmp
pop
mov
pop
fldcw
pop
push
pop
lods
dec
fldcw
push
pop
stos
push
push
std
jg
std
hlt
jg
mov
mov
std
decl
aas
mov
stos
int
ljmp
jns
pop
mov
cli
std
jg
push
out
out
cltd
cld
push
imull
jnp
xor
movsl
push
and
stos
and
fcmovnu
mov
negb
outsl
xchg
stos
bswap
aas
std
imul
cmpsl
outsb
cmpsl
sti
stc
mov
lahf
outsb
dec
outsb
mov
je
pop
test
mov
mov
sbb
fucomip
jmp
stos
mov
sub
adc
aas
mov
cmpsl
inc
jmp
xchg
pop
inc
push
adc
cmc
push
xor
xlat
shrb
xchg
inc
xchg
or
daa
movsb
out
es
push
jl
jle
stc
ja
int
int3
mov
add
in
adc
cmc
push
dec
and
jmp
dec
jne
mov
popf
mov
mov
push
or
add
push
stos
stos
stos
test
mov
push
push
push
ss
cmpsb
stos
xchg
add
adc
cmpsb
fbstp
je
sti
lods
stos
sbb
mov
push
jg
fistpll
push
in
idiv
out
jmp
out
mov
std
fcomip
out
std
mov
std
std
push
jg
sti
out
mov
out
std
idiv
imul
mov
idiv
mov
neg
pop
insl
mov
std
mov
push
sti
ljmp
loopne
jg
jg
jmp
imul
mov
neg
aas
fucomip
call
dec
mov
mov
idiv
int
repz
in
call
call
dec
in
jg
decl
fisttps
push
add
outsl
cs
out
mov
push
push
mov
std
pushl
std
fildll
jle
std
in
mov
out
pushl
jg
lods
sti
out
mov
stc
fnsave
stc
imulb
mov
jg
push
jg
jg
std
mov
jle
mov
std
out
jg
push
push
out
idiv
std
std
mov
sti
out
std
jg
out
sti
push
push
out
out
sti
out
std
push
out
push
push
jg
push
push
aas
out
jg
push
std
out
jg
out
std
out
jg
idiv
mov
push
out
mov
mov
jg
mov
sti
push
mov
mov
mov
sti
std
sti
out
push
out
sti
sti
mov
mov
out
out
out
push
sti
jg
out
mov
jg
out
std
idiv
out
push
std
sti
push
sti
sti
sti
ljmp
sti
jg
sti
mov
sti
std
out
cli
mov
mov
xchg
sub
ljmp
std
call
ljmp
push
in
push
outsl
out
fldcw
sti
test
fildll
push
lods
scas
jg
mov
mov
out
cli
fstpt
jmp
std
ljmp
call
jmp
cli
jmp
sti
out
in
aas
out
mov
call
aas
jmp
mov
sti
mov
cli
stos
jnp
jmp
movsl
jg
push
cmpsl
mov
mov
jg
mov
std
cmc
out
std
fnclex
ja
cld
mov
out
cli
cld
out
inc
sti
jecxz
in
mov
jg
ljmp
cld
insl
jge
hlt
das
jg
fistpl
scas
cli
jg
sti
jg
call
std
mov
out
ljmp
scas
push
out
std
idiv
jnp
lahf
sti
jmp
mov
in
jle
jmp
push
pushl
sti
push
cld
out
sti
lods
aad
sti
mov
std
fldt
jg
jle
fistpl
pop
std
mov
pop
insl
mov
mov
mov
push
stos
pop
pushl
jg
aas
out
mov
cld
icebp
decb
out
push
lcall
jge
out
xchg
std
jmp
mov
out
sti
cli
sti
ljmp
out
loop
jge
pop
mov
jmp
jp
call
stc
lcall
jmp
into
cmp
pop
enter
repnz
repz
cli
add
aas
lcall
push
stos
cmc
sub
add
gs
push
push
push
stos
mov
jmp
fidivrs
stos
idiv
out
in
cli
mov
xlat
aas
out
pushl
ja
push
fdivr
jg
out
mov
repz
jmp
mov
push
movsl
mov
mov
jmp
idiv
imul
jmp
inc
push
outsl
cli
fistpll
jg
push
mov
std
jg
std
idiv
arpl
mov
pushl
pop
mov
sar
out
std
div
push
out
mov
ja
out
fnsave
out
std
mov
sti
mov
sar
out
loope
addr16
std
pop
iret
xchg
jg
iret
idiv
std
std
mov
std
xchg
aas
stc
into
in
out
jg
pop
jg
dec
clc
jmp
stc
pop
push
mov
outsl
fisubrs
ljmp
sti
sti
fistpll
std
mov
xchg
fistpll
jg
fistpll
mov
cmpsl
mov
sti
popf
push
std
fistpll
push
pop
push
ljmp
jg
mov
std
ljmp
pop
dec
std
std
mov
idiv
mov
cld
sti
mov
std
repz
out
mov
jg
lcall
clc
cmp
idiv
mov
icebp
aaa
sti
fucomip
mov
inc
mov
ljmp
ljmp
jg
ljmp
jmp
sti
ljmp
std
sti
lcall
stc
fsubrl
decl
ljmp
in
mov
testl
sub
pop
test
sti
fs
shl
out
nop/reserved
std
lahf
xor
pop
push
add
mov
in
or
and
leave
xor
aaa
ja
mov
fcomi
sbb
ds
adc
cmp
jl
push
sahf
sub
aam
cmp
out
scas
jno
call
mov
icebp
xor
mov
lret
jmp
add
fdivrl
push
repnz
add
mov
add
xor
hlt
add
fbld
or
push
add
sub
push
adc
cmpsl
mov
add
pop
bound
in
lds
pop
add
popf
add
fisttpll
push
fs
and
pop
mov
jae
and
data16
adc
outsl
sbb
sbb
call
pop
mov
or
arpl
out
mov
aaa
xchg
mov
sti
popl
mov
or
fwait
fwait
popf
mov
mov
cmp
jl
popf
andl
aaa
repz
enter
xor
inc
or
movsl
data16
add
or
addb
sub
ror
pop
push
fnsave
sub
sti
ljmp
xchg
lret
shl
imul
jg
andb
or
std
ret
xor
out
out
sti
mov
sub
adc
xor
lahf
in
adc
mov
mov
dec
xlat
dec
inc
mov
scas
das
push
fidivl
sti
push
data16
enter
jno
in
lahf
out
fdivrp
ja
mov
dec
cmc
rorb
push
test
sub
inc
and
inc
xchg
addl
inc
push
loop
mov
gs
mov
adc
idivb
add
jae
adc
mov
jecxz
cmp
cli
ds
cmp
adc
cwtl
es
add
mov
add
ja
xor
faddl
and
cmp
std
xor
or
outsl
std
push
arpl
and
xchg
movsb
fldenv
gs
ss
cs
inc
mov
mov
shr
cmp
push
bnd
movsb
xor
and
clc
jge
jp
test
add
loope
jg
mov
or
jp
mov
adc
add
or
mov
scas
cwtl
cmp
pop
push
xor
mov
das
sub
sbb
arpl
addl
lcall
cmpsb
and
leave
iret
scas
adc
pop
lret
mov
sbb
xchg
xchg
add
xchg
fsts
mov
dec
roll
daa
sti
pop
cld
xor
and
adc
in
das
xchg
push
jmp
call
stos
loope
adc
cs
add
ja
jnp
jmp
pop
or
loop
pop
outsl
bound
shlb
test
cltd
jecxz
mov
mov
push
ret
or
std
sbb
dec
sbb
lock
inc
inc
add
xor
fldln2
and
cld
mov
test
xchg
xor
iret
dec
lock
fildl
shrl
das
adc
icebp
out
ds
ja
dec
in
jl
call
mov
xor
arpl
add
loopne
mov
jle
insl
cmp
pop
jne
sbb
add
dec
fs
daa
xchg
and
jns
pop
adc
sub
push
mov
fldenv
and
jge
out
iret
repnz
repnz
loope
sahf
dec
repnz
mov
lock
jge
push
aas
je
outsb
mov
fld
cmc
dec
aaa
movsb
add
pop
pop
lcall
mov
mov
mov
repz
inc
mov
mov
in
push
and
nop
fld
imul
or
cmp
xor
adc
cmp
jle
mov
ficoms
gs
pop
popa
inc
push
add
pop
cmp
mov
outsl
ja
cmp
outsw
sub
add
cwtl
sbb
icebp
jno
jnp
mov
pop
decl
mov
mov
scas
lret
lret
pop
pop
push
lds
sub
mov
in
insl
movups
sbb
sbb
mov
or
or
inc
addl
adc
pop
stos
jle
sub
ljmp
pop
jg
aas
xor
mov
int3
mov
out
mov
mov
pop
jl
sub
mov
add
sti
mov
sub
mov
mov
gs
fisttps
cltd
cmp
adc
call
mov
bound
nop
addr16
add
inc
xchg
sub
inc
sbb
repz
repz
xchg
idiv
inc
push
adcb
mov
testl
adc
or
sub
insl
cmpl
xlat
adc
rolb
add
imul
repz
xchg
jg
aaa
mov
mov
aad
shlb
fs
test
sbb
insl
lret
and
cltd
popa
shlb
xchg
sbb
inc
es
lcall
ficoms
sub
xor
and
in
mov
pop
adc
jg
push
sub
sar
cmpsb
ljmp
cmc
pop
outsb
mov
decl
jl
inc
adc
push
cmpsb
imul
jge
out
jmp
je
or
add
mov
mov
inc
jns
adc
stc
shlb
rcrb
nop
jmp
orl
sub
sub
imul
sub
dec
cwtl
push
outsl
nop
cs
push
cwtl
ror
xor
sti
xchg
aad
adc
cli
aad
inc
push
add
mov
add
xchg
test
gs
xor
sbb
jle
pop
incl
pop
iret
lahf
dec
lret
icebp
add
ret
dec
cld
repnz
fsubr
iret
cld
int3
jmp
pop
decl
sti
ret
or
aas
clc
out
cli
mov
js
mov
cmpsb
clc
loop
cmpsb
push
aas
inc
jecxz
add
add
inc
push
pop
xor
out
mov
out
mov
jno,pt
push
xor
daa
pop
into
test
es
xchg
ss
orb
inc
adc
mov
or
daa
lret
lahf
inc
or
mov
mov
leave
xchg
mov
adc
push
or
std
popa
jle
mov
imul
fisttps
and
and
sarb
mov
lahf
loopne
jg
sub
and
out
jmp
mov
mov
pop
mov
ds
jne
cmp
xlat
mov
aaa
movsb
add
in
aam
test
sti
or
jecxz
and
in
cmp
sbb
pop
scas
sub
in
lahf
icebp
xchg
sub
cwtl
stc
push
je
mov
mov
xorl
enter
mov
add
dec
inc
sbb
fs
stos
xor
popa
adc
lcall
xchg
inc
gs
push
add
add
mov
mov
or
dec
loop
and
adc
xlat
jle
cmc
pop
push
iret
push
xrelease
insb
imull
hlt
clc
xchg
scas
mov
pop
mov
icebp
and
xor
and
in
cmp
into
inc
jnp
rorl
fucomi
out
pop
sbb
add
sbb
adc
mov
addr16
cmpsb
fcmovnu
int3
jbe
sahf
mov
add
repnz
mov
push
sbb
popf
push
xor
adc
je
pop
cbtw
mov
fwait
aad
cltd
sub
sbb
cwtl
adc
out
jle
out
dec
mov
push
sbb
sti
pop
jl
and
mov
sbb
dec
andl
insb
cwtl
stc
repz
in
jge
ret
xor
xlat
adc
cmpsl
push
aas
inc
cmpsb
jge
ret
cmp
imul
test
push
repnz
jle
adc
in
aas
jae
cwtl
pop
aaa
or
clc
pop
xor
mov
push
cmp
sbb
and
ja
out
mov
adc
jge
pop
lahf
js
pushf
push
push
add
mov
leave
inc
and
sti
xor
add
lea
add
cltd
dec
fistl
lahf
xchg
pop
ja
sbb
pop
.byte
add
add
add
add
and
add
jo
add
add
or
add
add
mov
add
mov
add
add
add
add
add
addb
add
add
add
sbb
add
xor
add
add
add
addl
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
add
add
addb
add
add
add
add
nop
add
add
add
add
add
mov
add
add
add
mov
add
add
add
rolb
add
add
add
add
rolb
add
add
add
loopne
add
lock
add
sub
add
sbb
add
rcrb
add
mov
add
mov
and
add
add
add
data16
add
add
add
add
add
addb
mov
add
xchg
mov
add
add
decb
add
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
xor
adc
xor
add
mov
add
mov
add
cmp
sti
xor
add
cltd
incl
add
setns
incl
add
movups
add
cltd
cltd
cltd
cltd
add
add
nop
add
adc
mov
add
mov
add
add
lock
add
add
add
pop
sldt
add
add
lock
add
add
pop
add
addb
add
pop
add
rolb
add
add
add
add
add
add
add
add
addb
add
pop
add
rolb
add
pop
add
rolb
add
sldt
loopne
add
clc
aas
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
add
push
and
push
sub
and
sub
and
and
das
add
sub
das
sub
add
sub
cmp
das
add
xor
add
xor
add
xor
aas
cmp
add
add
add
xor
dec
cmp
add
add
cmp
pop
inc
aas
add
sbb
inc
add
and
xor
sbb
and
sub
add
xor
xor
inc
add
sbb
nopl
sbb
jno
xor
data16
and
sub
pop
add
inc
arpl
sbb
add
push
jae
dec
inc
inc
add
inc
add
dec
add
dec
add
inc
add
dec
add
dec
add
dec
add
add
push
add
pop
add
pop
add
add
dec
add
pop
add
bound
pop
arpl
bound
push
arpl
imul
jae
imul
jnp
insb
add
jo
jb
jo
ja
jo
jns
jne
je
jnp
jp
js
jle
jns
test
add
cmpl
push
pop
popf
add
and
add
aaa
xchg
add
pop
stos
add
push
mov
sbb
sub
add
sub
add
test
adc
inc
xchg
sbb
add
push
add
dec
mov
or
add
pop
mov
add
scas
add
insl
lods
add
jae
add
mov
sub
inc
cwtl
add
add
lea
pop
outsb
xchg
add
addb
jnp
add
lods
add
add
add
mov
add
mov
add
push
add
sub
add
and
add
sub
add
int3
add
cmp
add
cmp
add
push
loopne
add
ljmp
ss
add
clc
add
std
add
cmp
add
cmp
add
inc
movb
inc
filds
or
add
jnp
add
roll
or
add
inc
incl
sub
add
inc
sti
add
repz
push
sti
add
lock
movl
jp
ret
push
add
roll
jo
aam
jb
filds
inc
push
in
dec
fs
add
sbbl
pop
xchg
mov
js
add
mov
add
sbb
add
xchg
add
mov
add
jecxz
pop
test
add
xor
add
xchg
repnz
pushf
incl
push
xchg
repnz
xchg
icebp
add
xchg
loope
or
movsb
incl
or
std
add
stos
incb
push
mov
add
mov
testb
mov
add
mov
flds
push
popf
fadds
jg
movb
lahf
loopne
push
incb
add
incb
sbb
incl
adc
incb
sbb
incl
sub
out
add
incl
cmp
incl
daa
sar
add
sar
add
sar
add
incl
dec
jmp
incl
dec
lock
jo
incl
jle
incl
lea
addl
popf
xchg
mov
mov
xchg
add
popf
popf
add
fwait
mov
cmpsb
cmpsb
test
add
mov
add
mov
add
ret
mov
add
scas
fadds
mov
enter
rol
add
ror
add
xlat
iret
add
fcmovne
add
fmul
add
add
loope
add
in
add
aad
add
jecxz
add
out
add
jmp
add
in
in
add
out
add
ljmp
cmc
icebp
in
add
repnz
add
repnz
hlt
icebp
add
clc
testb
incl
add
jb
gs
mov
jo
add
add
arpl
add
add
mov
mov
cmp
daa
mov
mov
mov
mov
loopne
ljmp
ret
lret
into
mov
add
loopne
out
lock
pop
mov
add
out
lock
stc
stc
stc
cmc
cmc
lock
fistpl
add
or
lock
std
std
stc
div
lock
sbb
xor
cld
std
cmc
lock
add
add
add
add
fwait
sahf
lahf
popf
std
cmc
lock
add
dec
dec
add
add
or
ds
or
pushf
xchg
xchg
xchg
cli
lock
xor
add
add
add
or
or
cmp
jg
xchg
xchg
xchg
repnz
cmc
out
inc
add
add
add
stc
cwtl
xchg
cld
cld
cld
cli
lock
add
add
add
or
lcall
mov
cmc
cld
lock
add
or
add
add
ficoml
cltd
push
push
jns
test
test
dec
or
push
inc
add
add
add
or
addb
test
mov
push
or
push
add
add
add
ficoml
jge
adcb
xchg
sub
or
add
add
xor
pop
cmpb
xchg
jae
and
and
xchg
xchg
or
add
add
add
orb
mov
pop
add
jnp
add
adcb
mov
mov
mov
lea
jle
add
add
mov
rcl
rcl
int3
mov
pop
add
jle
add
add
or
mov
int3
mov
add
add
add
or
or
and
mov
or
insl
add
add
or
or
or
or
std
jmp
add
add
push
loop
xor
dec
add
dec
or
or
dec
cmp
cmp
jmp
or
or
incb
xor
inc
repz
add
xor
adc
or
repz
cmp
add
pop
sbb
adc
or
fdivrl
add
add
add
sbb
adc
add
xor
push
cmp
or
or
add
xor
add
add
pop
push
or
or
or
add
add
inc
or
push
cld
add
aas
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
cld
add
aas
cld
add
aas
int3
add
xor
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
psubb
add
clc
add
pop
clc
add
psubb
add
cld
add
pop
cld
add
aas
cld
add
aas
cld
add
aas
incb
add
incb
add
add
jg
add
incl
add
clc
ud0
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
and
sub
push
sub
das
and
sub
sub
sub
xor
das
add
aaa
add
xor
sub
add
add
cmp
and
inc
add
cmp
add
inc
add
inc
jle
dec
inc
inc
add
dec
add
inc
add
dec
add
push
add
ja
imul
jb
insb
add
je
jge
jp
xchg
subl
pop
sub
add
xor
add
mov
add
push
mov
add
mov
and
mov
add
mov
add
sub
add
and
aam
pop
das
aam
and
sbb
add
or
add
sub
add
incb
and
in
and
add
ja
add
jg
add
jg
add
out
add
dec
jmp
sub
testb
inc
incl
sub
add
incl
cmp
add
in
dec
data16
mov
add
stos
add
mov
add
xchg
int3
add
xchg
add
nop
rolb
ss
add
add
incl
push
cmpsl
jmp
add
add
mov
into
add
int3
add
aad
jbe
ret
cmpsb
filds
jle
in
add
out
sbb
incb
sbb
incl
sub
incl
ss
incl
push
fdivr
add
mov
add
mov
add
rol
lcall
add
lret
fst
enter
roll
out
out
add
lret
jecxz
jecxz
in
jmp
add
out
call
add
out
add
icebp
testb
cmc
repnz
clc
testb
repz
add
incl
add
sub
add
cmp
add
gs
addr16
push
arpl
add
push
pop
insl
jae
ja
outsl
imul
add
add
inc
outsb
jbe
pushl
dec
add
add
dec
jns
aas
pushl
add
add
add
jne
inc
jbe
js
adc
adc
data16
ds
pop
push
sbb
or
xor
inc
inc
inc
inc
cmp
xor
sbb
xor
and
add
xor
add
sub
and
push
and
add
add
add
pop
bound
push
push
pop
or
add
add
add
adc
imul
add
add
pop
add
add
add
add
add
imul
sbb
add
add
sbb
or
push
sbb
add
add
add
add
add
sbb
add
add
add
add
pop
add
inc
add
add
add
add
add
add
addb
rolb
add
pop
add
rolb
add
pop
add
rolb
add
sldt
lock
add
mov
inc
or
add
or
add
add
add
add
or
add
add
data16
and
dec
inc
inc
push
js
in
mov
jns
cmp
mov
data16
xchg
in
xchg
mov
arpl
insb
and
inc
outsb
adc
pop
dec
add
push
mov
sahf
test
dec
jb
dec
and
cwtl
fucom
add
or
jnp
push
insb
pop
xchg
add
insb
imul
cmp
fst
imul
sti
jecxz
fcmovu
xor
stos
cmpsl
push
aad
mov
ljmp
shll
or
rcrb
inc
pop
or
mov
cmp
inc
dec
or
sub
push
enter
lea
mov
and
out
iret
add
fisubs
and
pop
and
test
jmp
add
addl
sub
inc
mov
inc
jmp
add
push
insl
xlat
inc
aad
lcall
imul
cmpsb
add
mov
pmaxsw
das
addr16
inc
pop
xor
arpl
lret
cmp
xor
mov
mov
cld
jmp
scas
jp
sub
add
pop
add
scas
out
add
pusha
das
lret
pop
rcrb
andb
xchg
mov
mov
cwtl
fyl2x
dec
xchg
rorl
sarb
popa
cltd
add
sub
out
cwtl
in
cmp
mov
ja
mov
dec
or
add
fmuls
mov
rorl
sbb
sbb
test
mov
movl
shll
xor
test
pusha
pusha
bound
push
add
add
xchg
inc
sub
adc
mov
add
or
or
dec
jecxz
xchg
jno
mov
add
or
in
pop
push
xchg
imul
popa
pop
cwtl
ret
xlat
je
xor
inc
sub
pop
movsl
add
movl
dec
and
add
or
lret
xchg
shll
or
or
mov
lea
mov
shlb
xchg
mov
hlt
les
ficoml
out
js
aas
cli
dec
bound
mov
sbb
loope
cmpsb
test
loopne
rolb
pop
sbb
leave
int3
jg
gs
pop
xchg
or
pusha
pusha
push
mov
out
add
xchg
and
xor
movsb
inc
movb
jmp
sub
mov
scas
scas
btsl
push
inc
lahf
sarl
dec
pop
push
and
movsb
out
cvtps2pi
call
or
jmp
cwtl
pop
sub
rcrb
rcl
int
insl
mov
je
jl
mov
xchg
push
mov
adc
jge
pop
sub
jns
scas
sbb
lock
loope
sub
test
orb
subl
sarb
add
cmpsl
pop
lret
add
push
xor
mov
movsl
mov
sbb
scas
mov
stc
es
adc
insl
shrl
cmp
inc
repz
ja
push
imul
das
cmp
orl
mov
and
insl
pop
es
shll
das
rorb
hlt
cmc
scas
mov
mov
or
jmp
sbb
dec
jp
iret
out
stos
in
xchg
add
icebp
pop
rorb
and
call
mov
xchg
pop
jae
lock
xchg
sbb
fisubrl
outsl
mov
add
push
xchg
push
add
lock
cmpsb
lds
scas
inc
dec
nop
sub
test
or
xor
jl
adc
dec
lcall
orl
and
nop
mov
pop
mull
mov
add
aas
inc
pop
clc
stc
jnp
popa
pop
lods
pop
xor
adc
fdivp
cmp
mov
xchg
dec
add
dec
stos
push
jecxz
scas
sub
daa
ret
hlt
pop
adc
adc
test
and
sbb
mov
push
int3
xchg
js
adc
mov
jo
cmp
pop
addb
xchg
adc
jo
xchg
movsb
mov
inc
movsl
push
mov
pop
aas
push
daa
inc
pop
pop
or
or
add
repz
or
sub
jp
xchg
mov
sbb
jo
ficomps
sbb
addb
xorb
pop
mov
insb
inc
xchg
jnp
inc
mov
mov
mov
test
or
xor
cmp
xor
call
sub
addb
bound
out
addl
add
dec
jmp
cmpsb
sub
cmpsb
aad
lock
dec
push
sbb
sbb
inc
outsl
xchg
aas
xchg
sbb
mov
add
mov
shlb
rcll
jno
mov
ror
or
aaa
loopne
shl
fwait
cmpl
scas
sbb
orb
inc
and
les
insb
jb
fmuls
mov
mov
aam
sub
or
jecxz
mov
out
arpl
pushf
stc
flds
and
inc
and
mov
dec
cltd
and
xchg
mov
pop
mov
xchg
push
xchg
fimuls
lcall
jg
push
cmp
sbb
outsb
shlb
jne
mov
lret
sub
adc
lds
je
ljmp
cltd
xchg
cmp
pop
icebp
imul
add
add
dec
mov
loop
jge
mov
dec
fwait
cs
dec
movsl
ret
adc
dec
dec
push
scas
push
nop
sahf
pop
cltd
hlt
les
sarb
add
je
inc
add
jnp
cwtl
mov
adc
sub
mov
pushf
xchg
pop
or
testb
fldenv
sbbb
push
imul
data16
lret
mov
lret
scas
mov
mov
por
ret
sub
cmp
les
loopne
icebp
xchg
push
in
sti
stc
inc
repnz
addr16
inc
dec
movsl
ret
mov
and
or
dec
mov
stos
push
sub
ss
cs
jp
fidivrl
mov
loopne
cmpsb
sbb
sti
or
mov
lock
pop
mov
add
vpsrlw
pop
xlat
or
adc
clc
loopne
mov
lea
stos
lea
xor
je
adc
sub
inc
outsb
inc
cld
push
add
nop
inc
xchg
sarb
cwtl
push
xchg
or
sbb
je
lock
hlt
lret
push
inc
es
in
dec
lahf
inc
mov
sub
xchg
dec
push
pop
out
push
lret
sub
inc
popa
mov
sti
jmp
mov
ret
sbb
mov
divl
push
and
dec
int3
clc
das
sbb
movsl
test
js
pop
cli
cld
mov
in
ret
xor
int3
add
push
ljmp
dec
or
xlat
jne
sbb
popa
cmp
jg
jecxz
popf
adc
test
jle
fstps
adc
jle
in
fs
xor
push
sub
pop
mov
sub
or
je
adc
xchg
in
sbb
xor
fwait
sub
sahf
pop
shl
cmpsl
dec
or
dec
pop
aaa
sti
fisttpl
sub
loopne
adc
ja
faddl
cmp
sbb
movl
roll
loope
mov
add
pop
je
adc
push
push
lods
aad
cwtl
test
cmp
mov
ds
cltd
add
cltd
pusha
outsb
insl
or
adc
adc
lcall
xor
push
cltd
test
scas
aaa
and
fisttpll
and
fdivs
je
ret
cmp
sbb
jne
jnp
pusha
pusha
pusha
mov
adc
xchg
shlb
subb
movsb
mov
pop
mov
jl
jno
sbb
push
sti
loop
pop
lds
testl
std
xchg
jbe
inc
add
adc
adc
dec
loopne
pop
orb
repz
fbld
push
in
pop
mov
mov
out
push
push
cs
jno
mov
in
push
rolb
cltd
stc
inc
push
mov
add
mov
pusha
fsubrl
cmpb
outsl
or
add
cltd
add
das
mov
mov
fwait
cs
pop
loope
jb
ret
sti
add
cs
adc
pop
adc
test
and
hlt
icebp
dec
roll
lret
or
add
popf
xchg
xchg
add
sub
stc
inc
pop
jmp
pop
sbb
sub
pop
xor
or
mov
xlat
and
cmp
test
mov
cwtl
out
dec
push
xor
stos
or
imul
out
or
mov
ret
rcl
out
mov
int
or
hlt
mov
mov
mov
in
cld
icebp
cwtl
out
fldl
movb
jae
inc
pop
or
add
aas
pusha
dec
pop
or
mov
dec
pusha
sbb
movsl
sahf
fstpl
sbbb
xchg
fisttps
lahf
insl
cmpsl
pop
mov
jp
xchg
sub
and
mov
or
int3
and
or
and
inc
je
insb
mov
and
mov
icebp
testb
ljmp
jbe
arpl
insl
mov
mov
insl
and
push
push
xchg
mov
jb
and
jnp
test
das
and
push
pop
add
xchg
push
js
rolb
and
das
bound
cmp
dec
push
mov
sbbb
inc
or
xchg
loop
xlat
mov
add
push
sub
jg
pop
iret
mov
push
pop
sbb
test
aad
test
adc
push
in
push
in
cmpsb
jle
stc
jecxz
cli
fsub
xor
int
jg
out
pop
lahf
scas
imul
clc
jnp
jmp
mov
pop
pop
sub
push
fs
inc
dec
add
jp
jle
mov
sbb
mov
clc
ret
loop
mov
popa
mov
pop
push
add
inc
mov
inc
pushf
add
fildll
paddd
sub
jb
push
xor
scas
dec
mov
inc
dec
pop
jno
std
cmpsb
popa
bound
mov
es
lret
fcompl
fsubl
adc
mov
rolb
loopne
daa
andb
jp
nop
dec
movsl
sbb
or
mov
push
xchg
fdivr
push
bound
cmc
imul
inc
add
loop
mov
and
jae
aam
cwtl
test
loop
int
or
xchg
inc
lret
dec
adc
fwait
das
add
shrl
and
jle
or
dec
cmpsl
mov
mov
xor
in
mov
and
mov
das
lcall
inc
mov
fbstp
or
lods
pop
popa
pop
dec
movsl
lock
xchg
mov
es
or
cmc
fcoms
adc
jmp
ret
or
inc
xor
xor
jp
jmp
sbb
std
rclb
fldt
fisttpll
rol
cmp
sbb
sbb
jne
aam
push
shr
sub
dec
dec
add
adc
jmp
insb
add
mov
repnz
scas
mov
pop
lahf
cmp
sbb
clc
fistpll
jecxz
sbb
xchg
sub
aad
hlt
popf
loope
mov
or
lods
sarb
std
in
cmp
cmpsl
sub
scas
outsl
xor
or
jmp
mov
xrelease
std
insl
xchg
int3
add
lods
jg
in
pushf
push
or
adc
mov
fstpt
repnz
icebp
lds
faddl
push
shll
or
test
mov
jne
or
repnz
mov
mov
sti
lods
fdivl
mov
inc
nop
out
sub
test
jne
ss
xchg
addr16
cmp
ficomps
fsubl
pushf
and
ret
les
imul
inc
mov
adc
sbb
test
pusha
ds
jno
and
inc
and
lahf
inc
insb
mov
mov
insb
fnstsw
ret
pop
ljmp
outsl
fcomip
sbb
xchg
fiaddl
mov
test
mov
jl
cmp
mov
lea
ds
repnz
out
jl
add
dec
add
test
mov
xor
mov
jae
adc
movsl
push
in
clc
add
fistpll
adc
cmpsb
mov
pop
adc
adc
and
sti
arpl
jnp
adc
aas
add
movsl
lret
mov
pop
nop
mov
sub
dec
out
mov
pop
cmp
imul
pushf
bound
decl
movsl
xor
test
mulb
stos
mov
sbb
in
imul
sbb
aas
rclb
and
jl
fstpt
dec
or
dec
jne
fidivrl
call
inc
loope
mov
enter
out
sahf
xchg
jno
xchg
add
pop
cmp
pushf
out
sub
pop
lock
mov
popa
cmpsb
scas
ffree
pop
adc
aas
xchg
addr16
sti
into
sbb
sub
lock
ret
out
inc
lret
js
sub
clc
aas
xor
out
repnz
test
mov
stos
dec
shrb
mov
aas
shl
pop
loopne
and
cli
cmp
dec
lahf
and
pusha
mov
mov
ret
inc
test
or
icebp
cmpsl
data16
and
jl
aas
or
mov
dec
movsl
repz
adc
adc
jg
dec
pop
sbb
dec
and
adc
or
add
push
repz
in
lahf
cli
in
lahf
in
mov
das
inc
sub
jge
fisttpll
mov
scas
inc
mov
cmpsb
push
sub
popf
out
jle
xor
popf
xchg
pop
jle
mov
std
or
and
cmp
test
xchg
addb
mov
add
push
loopne
stos
add
lret
jge
orb
xor
and
imul
out
xchg
cmp
stos
hlt
inc
xchg
js
and
icebp
icebp
std
inc
imul
shrl
iret
pop
stc
clc
ds
iret
clc
jg
dec
outsb
js
repz
pop
jge
mov
cmpsl
inc
or
inc
sbb
jne
stc
out
dec
jl
jecxz
or
jbe
add
jo
loope
and
nop
test
fdivl
fbld
pushf
and
adc
aas
sub
imul
lods
sub
cwtl
mov
mov
jecxz
mov
jg
cld
sub
ds
rorl
push
sub
loope
jecxz
sbb
jecxz
jo
mov
dec
repz
mov
pop
subb
scas
xlat
cwtl
sahf
lock
xor
or
ja
loope
and
aaa
std
or
and
lock
add
dec
adc
sbb
cmp
dec
push
pop
add
mov
scas
fneni(8087
ljmp
xor
iret
pop
sub
adc
imul
sbb
or
out
jl
pop
int
rcll
clc
int
cld
out
or
push
loop
out
add
push
and
std
cmc
xor
inc
sub
lret
lock
addl
add
push
stos
pop
test
sub
cmp
and
orl
sbb
push
mov
mov
lret
call
psubq
scas
fstps
scas
stos
dec
jnp
outsb
fcmovne
jne
pop
mov
sub
fisttps
inc
lods
push
popf
loop
cltd
out
cmpsb
std
inc
mov
in
xlat
or
or
xor
xor
decb
cld
mov
imul
cmp
imul
mov
adc
xchg
popf
sbbb
or
scas
leave
dec
mov
lods
jmp
pop
shl
push
lods
addb
loope
cs
xchg
scas
hlt
mov
ja
adc
mov
mov
mov
push
loope
rorl
adc
ds
xor
movb
sbb
and
sbb
inc
sub
popf
jle
cs
mov
and
mov
adc
scas
pop
lods
xchg
inc
sub
lock
pop
lock
out
mov
add
popf
dec
xchg
imul
pop
xchg
dec
and
sub
pop
ja
lcall
xor
inc
scas
rcrb
cmp
inc
inc
out
jecxz
decb
shlb
mov
cld
cmp
cmp
xchg
cld
dec
mov
inc
inc
popf
sub
fwait
adc
loopne
pop
mov
or
sbb
rcl
sub
das
mov
jmp
fbld
push
popa
mov
dec
and
cwtl
imul
push
jo
adc
xor
fbstp
or
scas
out
es
in
inc
rorb
xchg
sub
clc
dec
dec
sbb
and
xor
adc
fbstp
in
imul
insl
pop
mov
mov
cmp
lock
mov
fbstp
and
jmp
xlat
dec
jmp
dec
movsl
ret
xchg
and
dec
loopne
in
pop
cmp
mov
cli
ret
rcll
or
lods
mov
into
adc
in
adc
sub
jne
xchg
cmp
icebp
mov
aas
call
or
xchg
and
cli
pop
sbbb
lcall
in
cmp
repz
out
dec
jmp
insb
mov
cmp
push
pop
loop
repnz
hlt
loop
sub
mov
shl
add
in
mov
in
fbstp
das
aas
adcl
repnz
stc
jmp
cli
sub
aas
xlat
xor
mov
mov
repnz
add
pop
dec
sub
lods
sbb
rcl
stc
das
vlddqu
add
dec
and
mov
jecxz
pop
inc
mov
test
nop
in
push
inc
push
sbb
cmp
mov
mov
es
out
cmp
sti
lahf
pop
xchg
lods
pop
cmp
inc
sbb
mov
stc
sbb
pop
mov
mov
and
mov
das
jge
pop
cli
mov
push
data16
test
xchg
xlat
mov
fcmovnu
sahf
xor
hlt
dec
jns
movsl
xchg
cli
negl
out
inc
lds
mov
mov
push
mov
addr16
addb
mov
repz
aas
test
sarl
inc
jmp
sub
mov
test
push
cmc
xor
cmp
pop
cs
jae
jl
xchg
pop
cmpsb
gs
pop
xchg
adcl
pop
lods
sti
fdivp
xchg
mov
push
fidivs
pop
fs
dec
mov
pop
neg
mov
or
test
mov
adc
lods
cmp
repz
shll
jle
scas
xor
adc
pushf
add
jbe
and
test
jmp
sub
aaa
mov
lods
dec
or
call
jo
fdiv
es
test
mov
and
test
lcall
mov
sub
mov
scas
lahf
das
push
sub
or
cwtl
test
pusha
sbb
xchg
mov
sub
push
scas
es
aam
insl
cwtl
xchg
vmaxpd
sbb
or
cmp
mov
adc
pop
lock
iret
fcomip
daa
in
fscale
mov
push
sub
mov
pop
xchg
mov
lods
inc
cmpl
cmpsb
xor
insl
push
pop
fistl
fnsave
scas
pop
pop
lds
outsb
test
adc
or
add
push
rclb
inc
adc
aad
jg
ss
push
lret
adc
in
jge
push
sti
xchg
mov
les
js
ret
push
pusha
sti
dec
adc
lahf
das
and
popa
or
mov
mov
or
arpl
jp
cwtl
sar
fsubr
lahf
or
sbb
xchg
shrl
or
mov
imul
sbb
scas
das
fstpl
pop
pop
js
push
cmp
jmp
repnz
dec
jmp
pop
out
out
inc
divl
inc
mov
adc
cmp
cld
mov
push
xchg
dec
in
or
pusha
fldl2t
loopne
addr16
sbb
adc
dec
add
pop
mov
or
mov
insl
push
jg
push
testb
hlt
rcrb
jle
sub
cmp
push
dec
add
add
pusha
cmp
cs
sti
pop
push
mov
mov
aaa
ffree
lret
mov
jo
out
popa
fstps
std
sti
push
or
lahf
int3
xchg
out
cmpsb
popa
cmpsl
or
jge
outsl
xchg
sbb
dec
jge
scas
jg
jnp
out
das
icebp
popf
out
incl
push
push
xchg
mov
iret
aas
push
mov
pusha
std
cld
scas
lods
mov
mov
sarl
rcl
mov
inc
xchg
mov
add
mov
and
xor
int3
cmpsl
xchg
cmpsl
dec
add
push
and
test
mov
rolb
cmpb
pop
mov
dec
dec
or
jbe
test
xchg
out
jmp
aas
fstp
jno
in
sahf
fucomp
in
dec
inc
add
jo,pt
loop
fcomip
jbe
testl
jmp
push
or
cld
jmp
scas
xlat
ror
scas
push
or
cltd
fst
mov
jle
in
inc
push
je
adc
lods
xorb
mov
jecxz
mov
test
shr
in
fs
loop
popf
add
cs
in
add
mov
sbb
xor
xor
popl
lret
mov
ror
add
out
mov
dec
mov
pop
jns
xor
xlat
jno
pop
xchg
fisttpll
aas
xor
repz
sbbl
and
xor
inc
mov
cmp
sub
into
pop
add
scas
pop
lods
std
mov
in
pop
add
data16
iret
jg
popa
dec
das
rcrb
push
adcl
xor
jle
mov
je
inc
inc
fdivrl
cs
mov
ret
std
rcrl
cmp
int3
and
mov
fldt
jnp
jo
sub
outsb
inc
mov
mov
jmp
pop
data16
add
orl
pushf
int
mov
mov
xor
lcall
push
cmp
jg
mov
or
xchg
or
pop
add
nop
add
cmpsl
fstpt
adc
movsbl
das
fdiv
movsl
cmp
roll
out
mov
loope
ds
jno
cmc
mov
dec
fwait
cli
inc
out
xchg
mov
mov
push
xchg
outsl
orl
mov
loop
inc
inc
add
xor
popf
adc
jns
setge
or
inc
jns
mov
imul
mov
repnz
rorl
test
mov
or
cmc
sub
cmp
lret
cmp
add
scas
jo
les
dec
sbb
mov
fwait
test
dec
ja
shll
repnz
jbe
mov
data16
std
or
jl
mov
nop
cmp
test
mov
loopne
mov
out
cmp
add
xor
and
aad
mov
cmp
mov
mov
sub
mov
leave
jmp
push
sub
sbb
insl
out
sbb
arpl
shll
mov
pop
jns
xor
scas
arpl
pusha
add
xchg
nop
add
dec
pop
lds
mov
xchg
mov
mov
andb
mov
mov
mov
insb
in
ret
pop
dec
add
jmp
cltd
incb
shr
jle
jle
mov
or
cld
sbb
in
lahf
cmp
dec
mov
adc
xchg
dec
sbb
dec
inc
popa
cwtl
cmpsl
sub
push
add
inc
fldt
pop
push
mov
adc
add
lods
sub
or
mov
bound
adc
jge
test
sub
jnp
xchg
in
cmp
lods
add
inc
pusha
mov
test
js
mov
add
push
movsl
or
or
inc
jo
push
test
and
shrl
ret
sbb
cmc
push
xchg
out
cli
leave
cs
daa
test
sub
add
aas
shl
fstpl
inc
xchg
in
ds
xor
push
pop
jecxz
pushf
or
js
and
or
adc
cmp
xchg
xchg
jp
add
cmp
cmp
adc
out
mov
mov
insb
sbb
in
mov
and
ret
mov
mov
outsl
jns
stc
pop
ljmp
imul
in
sub
mov
cli
aad
test
cli
pop
aas
out
into
mov
std
xchg
cld
std
in
lahf
lea
add
shlb
cli
scas
testl
stc
adc
cltd
std
jge
and
movlps
mov
pop
aas
xchg
sub
pushf
jne
mov
call
jmp
sub
gs
or
idivb
mov
xor
sti
add
sub
fdivrp
idivb
loop
scas
jl
xchg
sub
mov
fdivp
inc
lcall
out
adc
rcrl
jno
jbe
lcall
pop
mov
fucomp
leave
pop
mov
add
push
stc
popf
outsb
loopne
sti
pop
rolb
data16
pop
sarb
lock
into
inc
lret
push
shlb
clc
add
test
ss
je
ljmp
fistpll
inc
and
cmp
xchg
movsl
pop
test
or
ret
mov
push
sti
outsb
sti
adc
jmp
xchg
arpl
fsub
imul
daa
push
lea
mov
out
mov
testl
dec
int3
lea
enter
mov
bnd
outsl
jle
fwait
mov
dec
mov
ja
mov
adc
add
dec
mov
mov
pop
push
test
cmp
adc
mov
inc
inc
inc
js
mov
push
sbb
and
mov
lret
popa
xchg
outsl
aad
test
lock
mov
or
mov
jo
mov
inc
adc
sub
sub
sti
and
and
jmp
insl
xchg
mov
cmc
ds
jmp
insb
shlb
jmp
int
xchg
shll
cltd
enter
or
scas
push
dec
mov
mov
movsl
sarb
lods
push
push
imul
vpunpckhbw
pop
push
and
cmc
lahf
jl
add
fdivs
or
out
or
aam
or
jl
ljmp
mulb
lret
mulb
mov
xchg
mov
fcmovbe
mov
xor
lret
test
adc
jecxz
xchg
xchg
adc
popa
leave
je
mov
fistl
decl
lock
jl
adcb
push
add
add
repnz
inc
push
ret
xchg
jbe
into
inc
add
popf
jns
lock
and
mov
mov
push
push
es
mov
test
cli
into
repz
or
pop
clc
ret
sti
jbe
sti
setne
or
or
add
je
dec
mov
push
jno
outsl
pop
cli
movsb
jmp
addr16
dec
fildl
lahf
fsub
test
rcrl
lret
mov
ja
push
and
push
leave
je
mov
in
adc
aas
int3
cmp
mov
push
andl
rcrb
inc
inc
inc
clc
cld
out
inc
ss
jl
aad
fs
adc
fwait
pop
xlat
ret
add
cmp
xor
stc
sbbl
insl
dec
push
loope
stc
outsl
arpl
sub
in
sti
pop
pusha
out
jbe
js
jge
add
add
loopne
lods
push
dec
je
push
ds
inc
ficompl
fidivrl
mov
ja
mov
fcomps
add
pop
push
jmp
aas
push
ja
nop
neg
xor
out
or
cmp
xchg
insl
inc
shrb
idivb
int
neg
cmpsb
inc
or
jnp
std
xchg
jg
and
std
pop
movsb
push
jle
ds
out
push
sub
aam
mov
mov
pusha
ds
int
jl
and
pop
je
push
and
push
push
xchg
pop
mov
add
and
dec
inc
inc
push
jbe
adc
mov
jno
adc
add
sub
pop
push
ss
xor
xor
jnp
ljmp
je
iret
sbbl
das
mov
inc
or
idivb
incb
xor
lcall
pop
insb
fnclex
cmp
clc
imul
and
add
inc
rcll
movsb
push
sub
adc
push
dec
loopne
inc
clc
push
dec
xchg
pop
lret
xor
fwait
pop
out
or
out
rcll
inc
lcall
int3
pop
cwtl
subl
fsubs
scas
adc
rolb
inc
rcrb
mov
pop
cwtl
fnstenv
aaa
mov
ss
or
adc
dec
and
addr16
ljmp
test
ljmp
mov
and
xor
incl
insl
xchg
pop
sbb
xchg
roll
push
loope
scas
cld
or
bnd
add
dec
jmp
push
in
push
cmpsb
and
fldt
fs
xchg
push
scas
cltd
imul
xchg
dec
addr16
jbe
sbb
adc
xor
adc
test
popa
or
repnz
fsub
stc
fistpll
shll
jmp
mov
inc
adc
push
scas
movsb
push
cwtl
dec
cmp
lea
push
cmpl
xchg
int
fistl
mov
fidivrs
inc
inc
jg
xor
mov
xchg
orl
sbb
iret
lds
cmp
jl
jmp
dec
lret
leave
sbb
or
dec
cmpsl
or
repz
cmp
xor
in
hlt
jne
mov
adc
lahf
sub
hlt
fcmovbe
jno
jbe
xor
xor
jl
jg
fisttpl
mov
outsl
out
jae
cmpsl
bswap
xor
cli
xlat
mov
xor
or
out
in
sbbb
rcrb
popa
cltd
or
out
repz
or
clc
xor
pop
movsl
nop
pminub
scas
jg
sbb
insl
push
xchg
cwtl
push
call
mov
icebp
test
jg
sbb
in
cmpsl
test
mov
mov
jo
mov
pop
pop
incl
xchg
mov
inc
add
sti
sub
or
out
jmp
mov
cld
sbb
pop
pop
cmpsl
nop
xor
cwtl
mov
fnstcw
push
into
lahf
mov
addr16
push
sub
adc
sahf
mov
in
add
inc
rcrl
inc
clc
cmp
adc
dec
loopne
out
nop
jg
mov
xor
addr16
dec
fwait
jp
cwtl
in
es
inc
fwait
adc
ret
jle
outsl
mov
lret
repnz
add
cmp
stc
jecxz
mov
inc
inc
imul
into
mov
add
movsb
pop
pop
adc
movb
push
or
mov
data16
mov
cli
shrl
ret
mov
in
out
nop
idiv
cmc
sti
jge
fists
adc
leave
jl
mov
ss
outsb
jl
aaa
cmp
test
std
int
xchg
mov
jp
es
jmp
sti
adc
icebp
negb
mov
adc
movsl
sbb
jmp
sbb
cwtl
add
mov
je
data16
cmc
inc
pop
cld
sbb
into
in
and
out
or
ss
adc
add
out
iret
mov
cs
fisubs
div
lock
psllq
inc
hlt
lock
cmc
or
push
std
ss
cmc
push
sbb
lods
daa
nop
dec
addr16
loope
lahf
cltd
aam
xor
push
cmpsb
popf
and
dec
gs
jmp
dec
sbb
aad
scas
aas
jnp
rcr
out
cmpsb
cmpsl
sbb
add
les
pop
ja
das
mov
mov
in
cmpsb
lahf
dec
cwtl
fwait
out
insb
ret
je
push
imul
sub
xchg
mov
iret
das
dec
cmp
cld
and
jp
dec
or
rorl
into
in
xor
push
jmp
pop
or
stos
push
leave
jnp
mov
repz
iret
lea
into
fiadds
pushf
push
xor
popa
cwtl
in
mov
push
jp
mov
test
je
or
jns
jl
test
xchg
dec
cmp
inc
push
sbb
int3
stc
sbb
sbb
inc
fmul
adc
jnp
iret
cmp
aam
iret
mov
idiv
sbb
mov
outsb
test
lcall
fwait
jo
xor
dec
ficompl
test
test
and
ds
fdivrl
rcpps
or
mov
xor
repz
std
inc
or
cmp
sbb
adc
adc
es
imul
xchg
int
add
into
or
mov
pop
pop
jp
in
dec
sbb
cmp
sub
stos
shlb
sub
fnstenv
push
sub
fld1
push
in
subl
ss
sub
fdivrs
pop
pop
popa
push
cmp
jg
testb
xlat
add
fcmovne
insb
push
mov
ds
cmpsb
pop
aaa
fdivs
popf
jl
cwtl
testb
add
stos
push
push
lock
out
call
outsl
jge
mov
xchg
pop
int3
je
sub
add
sbb
test
repnz
dec
call
cmp
pop
out
jb
and
jmp
sub
decl
mov
in
aad
leave
jo
push
mov
loop
xchg
inc
mov
lods
div
mov
cmp
imul
dec
lcall
dec
sbb
fistps
jp
adc
gs
jp
push
cmp
and
or
arpl
rcr
out
mov
jle
mov
pop
rclb
shrb
and
dec
sbb
push
lods
push
jl
pop
ljmp
push
mov
pop
cmp
bound
jb
andb
sub
cld
inc
mov
cld
mov
or
mov
test
jl
and
jp
std
shll
pop
dec
sahf
ja
sub
lret
int3
out
mulb
jo
xchg
mull
sbb
fadd
mov
icebp
cmpsl
xchg
push
rclb
add
cmpsb
push
cld
mov
jg
pop
mov
lock
xor
add
ret
xchg
push
mov
pop
sti
dec
mov
ret
shll
pop
adc
jmp
xchg
sub
cli
into
push
push
repnz
ljmp
jb
pop
and
pusha
sbb
add
or
mov
mov
or
push
rorb
out
fmull
enter
pop
lret
repz
xor
jnp
pop
imul
xor
xorb
ficompl
es
in
pop
add
mulb
cmp
pushl
inc
lea
ja
fidivrl
sub
dec
dec
fld
stc
sbb
sbb
lods
sbbb
rorl
outsb
stos
jb
xchg
jne
or
pusha
mov
je
lds
ss
push
or
fmuls
adc
push
mov
cli
sti
sbb
imul
icebp
sub
mov
xchg
cmpl
xchg
push
jnp
jle
sti
sub
out
arpl
negl
out
cmp
mov
push
add
and
mov
xor
sbb
ret
sub
lcall
push
dec
addl
mov
lock
sub
sbb
sar
sub
pop
dec
sbb
mov
cmpsb
xchg
int3
sub
dec
pop
hlt
xor
cmp
test
arpl
fbstp
test
mov
subb
clc
add
mov
jl
mov
pop
jge
cmp
fimuls
cmp
mov
pop
icebp
in
sbb
lret
mov
stc
cmc
std
test
fidivl
cmpsl
cmp
push
movsb
jmp
test
imul
inc
jmp
adc
jmp
cmp
cmpb
imul
lock
popa
dec
adc
lods
jp
mov
pop
mov
out
cld
fs
lods
loop
icebp
arpl
shr
pop
inc
cmp
jnp
test
cs
mov
rcl
jle
insl
inc
fiaddl
lret
add
sub
sbb
jg
and
loope
insl
and
sub
push
pop
iret
repz
adc
mov
or
test
jge
and
pop
jns
enter
mov
sti
sbb
add
inc
and
rcl
ret
aas
rorl
cmpsl
lds
sub
shrl
mov
out
sti
sbb
pop
or
loop
sbb
rolb
xor
fwait
les
test
fcmovb
imul
or
jmp
jecxz
iret
sbb
ret
mov
movsl
xor
pop
in
mov
mov
and
jnp
xchg
rcrl
and
jbe
pop
lods
adc
imul
pop
sub
sub
insb
fists
cld
jne
adc
inc
or
mov
bound
shll
int
roll
push
mov
std
dec
jg
leave
push
sbb
mov
mov
sub
out
ljmp
cwtl
sbb
jp
outsl
clc
insb
aaa
sbb
ret
sbb
lods
mov
and
movsl
fisubrs
jbe
das
jns
sbb
lcall
xor
cmpsl
sti
cli
inc
or
add
loopne
lret
mov
lret
sub
jg
push
xchg
or
sbb
imul
jge
adc
rcll
movsb
rcll
jbe
add
fcomip
mov
das
shlb
incl
dec
es
int
jmp
mulb
or
mov
jg
and
inc
xor
jmp
pop
out
jge
outsb
sti
inc
das
pmaxsw
jmp
xor
push
sbb
mov
lcall
cli
test
push
les
ret
insl
push
jns
pusha
test
xchg
fistpll
sbb
ret
insl
xchg
cmc
aad
xor
cmpsb
cmp
or
mov
sbb
cmp
movsb
lods
cwtl
add
pop
test
imul
dec
mov
sub
sub
pop
adc
mov
xlat
in
loope
or
mov
dec
and
cmp
mov
push
mov
jp
pop
mov
jmp
imul
add
std
inc
pop
mov
xor
pop
sbb
mov
cmp
in
pop
xchg
ret
adc
xchg
insl
push
aas
jns
dec
inc
push
inc
pop
repz
jl
jle
arpl
push
or
pushaw
sbb
jg
shlb
adc
lods
pop
lods
pop
shll
test
and
jno
movsb
push
pop
dec
jae
pop
sti
sub
mov
push
mov
xchg
jmp
enter
gs
ds
sar
rcrl
dec
gs
pusha
cwtl
or
testl
jae
sbb
leave
jne
popf
adc
mov
test
add
orl
mov
rcrl
dec
pop
sbb
clc
xor
jg
aas
jp
or
ljmp
dec
xchg
jle
xor
xchg
jmp
ret
mov
sbb
adcl
pop
mov
mov
repz
xor
xchg
loope
nop
jmp
cmp
push
pop
mov
adc
shl
arpl
add
xchg
cli
sti
dec
lock
jmp
dec
iret
faddl
sub
insb
jg
xchg
jg
in
fldt
in
sbb
movsl
bound
sub
cmpsl
out
push
and
jno
cmp
cwtl
call
mov
jno
or
push
call
jmp
daa
stc
out
push
fs
xchg
int3
dec
insb
sbb
inc
mov
shr
les
xchg
lret
sub
pop
repnz
arpl
add
or
push
pop
je
shlb
outsb
xorl
or
popa
cwtl
mov
mov
lret
mov
nop
xchg
xchg
xchg
push
dec
iret
jae
cmp
pop
fistl
mov
into
fistpll
shlb
ljmp
stc
xchg
mov
fwait
push
sub
outsl
inc
cmpsb
jl
cld
into
pop
cmp
inc
or
push
xor
or
jbe
or
scas
adc
mov
flds
pusha
mov
loope
fistpll
int3
mov
fisubrs
dec
adc
insb
ss
cmp
cmp
scas
mov
inc
pop
jo
push
mov
testb
xchg
sub
enter
iret
cmp
push
jge
jg
dec
inc
call
and
int3
jp
cmp
stos
pop
push
enter
cmpsb
jmp
dec
mov
repnz
jns
xchg
jle
inc
clc
popf
in
daa
dec
jge
add
repnz
adc
pusha
repnz
inc
lcall
mov
rorl
inc
imul
clc
cmp
cld
dec
out
or
mov
inc
loope
loop
mov
xor
ja
jno
outsl
sbb
mov
sub
dec
stos
lds
repz
repnz
mov
aad
sbb
cmp
xchg
push
push
add
push
in
aad
add
sbb
ret
or
movsb
repz
mov
mov
xchg
js
daa
sub
stc
or
pop
popf
out
in
push
mov
dec
pusha
lret
lcall
pop
xor
sbb
call
jb
scas
add
sbb
das
scas
xchg
adc
call
test
jp
mov
movsb
add
std
addb
test
loop
add
imul
dec
jns
or
pusha
sti
xchg
ja
and
aas
sub
imul
jno
call
enter
jp
adc
std
dec
pop
sub
hlt
jo
arpl
pop
mov
dec
ljmp
sub
fisubs
pop
sub
adc
pop
add
test
dec
jnp
xchg
shll
sbb
fs
stos
xor
dec
mov
jecxz
cmc
sub
mov
lods
sbb
leave
push
sbb
mov
rolb
shll
ja
shrl
imul
imull
daa
mov
jnp
cmpb
jo
das
pop
pushf
push
in
sub
mov
xor
sahf
lahf
dec
mov
push
jns
jg
sub
mov
mov
add
imul
ljmp
insl
dec
pop
gs
inc
testb
test
in
inc
push
jmp
daa
sub
jbe
nop
and
push
add
xchg
mov
fimuls
add
or
insl
loop
pop
mov
jle
sub
dec
and
mov
dec
push
xchg
mov
lds
push
mov
xchg
fdivrs
jg
clc
cmpsb
mov
cli
mov
add
inc
or
pop
loop
jle
popf
jg
mov
adc
mov
push
adc
es
iret
daa
mov
stos
lods
pop
xlat
cmc
stos
add
push
cmp
dec
add
dec
adc
mov
cmp
jp
lds
jne
pop
xor
in
mov
cmc
xlat
push
das
arpl
ficoms
sti
xor
and
add
leave
xchg
jnp
lock
lods
daa
xchg
das
add
fmuls
add
test
add
popa
sbb
and
and
fdivp
repnz
mov
out
loopne
pushf
pop
xchg
ss
mov
sub
push
or
fisubrs
mov
outsl
mov
shrb
out
pop
jecxz
mov
cmpsl
mov
and
in
fsub
cmp
or
mov
mov
clc
movsl
rorb
sahf
mov
jg
iret
sub
repz
scas
ss
outsl
xor
adc
int
and
jbe
lret
les
leave
xchg
add
fiadds
push
cmp
mov
xlat
xor
jge
adc
push
adcb
stc
bound
test
loope
scas
add
fidivl
inc
inc
ret
hlt
push
imul
aad
xchg
mov
xchg
icebp
sbb
add
mov
call
pop
mov
insl
fistps
inc
add
imul
or
inc
pop
adc
scas
xchg
xchg
cld
lea
xor
pop
call
int
testl
push
adc
xor
push
add
sbbb
call
test
fs
xor
in
rorl
cmp
ret
in
jge
mov
mov
cmpsb
mov
sub
jbe
out
ret
cmpsl
dec
jne
lcall
aas
sbbl
add
stos
js
nop
sub
add
or
repz
imul
xchg
mov
lea
push
pop
mov
mov
jnp
xchg
sub
sbb
pusha
pop
pop
fidivs
jecxz
gs
ret
stos
cmp
or
orb
lcall
add
jp
cmp
cmp
mov
mov
shrb
in
fdivrs
cmp
test
mov
fsub
cli
dec
sub
jae
push
sbb
repz
add
lods
xlat
popf
cwtl
cmp
push
in
fistps
fcoms
in
mov
outsl
sub
fistpl
stos
insb
xor
sub
out
hlt
lahf
and
and
fbld
leave
lods
call
dec
mov
in
rclb
inc
pop
pop
add
dec
pop
jg
pop
push
out
test
cli
pop
ljmp
stos
js
mov
ljmp
xor
push
scas
jb
in
enter
jl
fdivp
lea
mov
jle
sti
dec
sub
pop
inc
push
push
fcompl
mov
cmc
add
cmc
inc
and
mov
icebp
aas
xchg
rorb
mov
or
sbb
and
mov
xchg
outsl
cmp
ficompl
jns
xlat
push
outsb
cwtl
cld
fisttpll
decl
icebp
sbbl
xchg
daa
push
test
sub
jo
xchg
int3
mov
shlb
data16
subb
pop
arpl
shll
add
adc
mov
lea
dec
xor
adc
in
add
mov
std
enter
pop
imul
mov
dec
or
test
enter
aam
jae
mov
cmp
sub
dec
xchg
ror
jae
hlt
dec
lcall
xchg
mov
mov
and
scas
sbb
psrad
pop
sarl
pop
sub
adc
sub
pop
inc
negl
cmp
pop
lahf
pop
sbb
testl
lahf
pop
imul
ret
loopne
out
pop
leave
xchg
shll
icebp
and
mov
jle
mov
int3
jle
iret
icebp
sbb
scas
lret
leave
shl
xor
or
mov
fistps
mov
shll
or
push
loope
clc
jns
adc
inc
fiadds
pop
or
add
push
or
dec
or
xchg
jecxz
cmc
dec
lock
sti
and
mov
pop
jb
mov
iret
clc
cmc
scas
filds
push
cmc
hlt
mov
aas
jle
stos
push
ret
adc
pusha
arpl
push
data16
fsts
jnp
and
pop
aas
movb
dec
xchg
push
aam
adc
ret
and
sbb
ds
add
dec
icebp
gs
xchg
call
ss
loope
sub
insl
push
fcoml
pop
xor
leave
xor
cmp
lock
insb
inc
adc
insl
out
shll
inc
add
lahf
adc
out
push
pop
jle
roll
pop
pop
stos
jge
shlb
lahf
push
sti
iret
into
add
jae
int
dec
pop
jbe
scas
cltd
in
xchg
stc
sub
cmpsl
cmp
lret
mov
mov
jno
mov
xchg
push
clc
cltd
aam
push
inc
dec
loopne
mov
xchg
push
cld
ret
jns
sub
outsl
inc
in
std
inc
sub
mov
push
inc
daa
aaa
dec
add
sbb
clc
fwait
mov
adc
ret
scas
lods
push
lcall
xor
lds
push
call
popf
and
andb
jne
test
ret
adc
inc
cmp
or
lret
cmc
cmp
push
lods
aad
imul
movl
addr16
or
lret
movsl
push
bnd
adc
aas
fcoml
xor
aam
xchg
rol
fwait
mov
sub
add
popf
mov
sbb
loop
sbb
stos
movsb
jo
stos
adc
xlat
stos
xchg
or
into
cltd
test
data16
in
pop
rcrl
cmp
mov
ljmp
gs
aaa
push
icebp
jmp
add
jp
out
mov
xchg
dec
push
sub
leave
cmp
lock
mov
jne
jmp
fs
add
scas
std
test
aaa
movsl
and
pop
lods
fidivs
sub
cltd
in
outsb
sbb
push
cmpsl
fldcw
shll
mov
mov
push
push
adc
popf
add
xor
test
aas
mov
fsubrp
and
inc
add
js
jbe
pop
mov
cwtl
stc
and
xchg
cmpsl
mov
xlat
sarl
andl
jl
push
mov
jl
push
xchg
pop
out
lret
push
enter
fldl2e
cmp
xlat
popa
fsubl
adc
in
cld
jns
pop
ds
loope
dec
pop
lods
or
push
mov
push
or
leave
lods
subb
lcall
xchg
in
jmp
ja
mov
jbe
mov
into
fistpll
int3
stos
jl
mov
jl
addr16
pop
daa
sbb
or
int
daa
inc
loope
dec
clc
rcll
shll
jb
mov
push
sbb
cld
dec
lods
es
dec
xor
xchg
fadds
or
lods
iret
and
lods
movsl
sbbb
pop
inc
xor
push
stos
push
idivb
xor
xchg
adc
in
add
ret
xor
pusha
ret
arpl
mov
or
rolb
mov
jbe
xor
xor
push
imul
ret
rcrb
mov
push
push
js
sub
clc
push
daa
push
dec
shrl
es
mov
fwait
mov
mov
jns
xchg
mov
push
mov
mov
pop
sub
mov
jae
in
xlat
in
jbe
outsl
stos
bound
mov
or
or
andl
or
cld
repz
pop
clc
int3
stos
dec
int3
xchg
sbb
mov
repnz
and
ljmp
orb
movsl
sbb
push
cltd
sub
sahf
clc
repnz
sub
xor
jnp
or
cmp
clc
mov
ss
lods
push
add
jle
lcall
fs
and
sbb
and
jb
mov
or
imul
call
xchg
addr16
pop
pop
jp
fdivrs
or
cmpsb
add
add
pop
add
inc
fs
popfw
xchg
gs
jns
aad
js
out
cs
pusha
or
mov
jb
fs
cmp
push
pop
cld
pop
sahf
arpl
and
sahf
loopne
jge
mov
jl
lret
fisttpll
cmc
push
enter
xlat
cmp
sub
push
inc
xlat
movsl
fstl
xor
dec
iret
cld
das
aaa
or
incb
outsl
cmpsl
xor
jecxz
in
sbb
adc
mov
pop
jns
loop
push
repnz
jl
std
adc
cmp
jle
repnz
loopne
xchg
push
jg
lret
pop
xchg
sub
mov
movsb
mov
jb
sub
mov
mov
jae
roll
push
mov
inc
mov
daa
lret
arpl
inc
cwtl
ljmp
jge
mov
sbb
shl
aas
in
adc
les
jbe
jle
icebp
push
xchg
adc
xor
enter
pop
call
push
imul
nop
aas
jl
sub
fimuls
dec
shrl
shrb
out
or
notb
mov
fadd
mov
inc
fstpt
js
idivb
jo
cmpsb
dec
add
clc
mov
cli
mov
pop
pop
mov
dec
lret
arpl
xchg
js
addr16
jo,pt
leave
mov
fildll
pop
sub
add
or
ror
mov
roll
sahf
test
loopne
sbb
sub
add
xlat
test
negl
mov
xchg
mov
out
cmpl
std
test
push
lock
lret
rorl
inc
add
sbb
mov
fnstsw
inc
or
inc
test
push
xor
test
ret
dec
sub
test
movsl
mov
repz
inc
cmpsl
pusha
xchg
sbb
pop
stc
iret
push
jns
xchg
xchg
movsl
fdivrs
ja
out
clc
adc
daa
push
adc
lock
mov
jl
inc
jge
stc
lahf
mov
icebp
sbb
mov
popa
roll
int
xchg
jb
dec
pop
stc
xchg
or
mov
inc
imul
adc
iret
lea
pop
js
ret
or
sub
sub
push
sahf
or
sbb
lods
out
push
js
push
mov
shll
idivl
outsl
shll
lret
add
xchg
adc
add
jnp
in
or
mov
pusha
or
cmp
add
outsl
sbb
dec
add
pop
ret
or
stos
xchg
icebp
movb
or
clc
sbb
adcb
or
cmp
push
popa
dec
xor
sbb
clc
inc
nop
lcall
sbb
cwtl
jl
ja
mov
jno
sub
push
and
ja
out
bound
add
out
lods
xorb
divl
jle
jne
push
fcoml
mov
mov
jns
sbb
jo
xchg
dec
jae
inc
push
push
daa
ret
jne
push
scas
add
mov
lods
lret
xor
int
push
and
mov
bound
sbb
test
in
mov
pop
xchg
jge
push
bsr
jle
mov
scas
cmpsl
daa
inc
into
mov
jmp
and
fisubl
frstor
cmp
and
pop
popf
ret
lea
xor
cmp
jmp
mov
or
lds
adc
dec
mov
aaa
pushf
aas
enter
jle
scas
jno
mov
test
orb
push
cmp
lret
repnz
push
pusha
in
mov
repz
push
mov
cs
inc
add
cmp
cmp
sbbl
clc
lahf
movsl
mov
cld
faddl
or
sub
stc
fadd
jge
mov
test
add
mov
insb
ljmp
inc
or
ljmp
cmp
pop
repz
mov
fwait
arpl
sahf
jl
sub
mov
add
notl
push
mov
lock
push
fdivl
or
mov
repnz
jae
ficomps
rcrl
or
setle
xchg
faddl
add
clc
fldcw
shr
test
adc
inc
push
adc
ljmp
sti
sahf
sbb
jg
jp
pop
push
cmp
push
jmp
dec
rcrl
in
sbb
cmp
lods
in
fucomi
insb
aas
mov
sub
push
aam
adc
mov
call
mov
xchg
push
mov
stos
daa
cld
pushf
jp
scas
mov
movb
in
loop
inc
lcall
cmp
xchg
cmp
xor
cmpsl
aad
imul
pminsw
push
movsb
and
pop
into
fmuls
mov
add
mov
fwait
js
ljmp
or
iret
fidivrs
mov
ficomps
or
test
xchg
hlt
add
pop
jne
fisubrl
mov
imul
pop
rcrb
jb
mov
push
mov
fs
hlt
add
and
dec
inc
inc
push
push
jmp
or
xchg
inc
inc
and
mov
cltd
push
push
in
and
push
pop
insb
shr
add
fdiv
data16
rorb
stc
sub
lock
push
fstps
cmp
xchg
or
xchg
add
xor
mov
popf
lret
xchg
subl
xchg
mov
sbb
imul
jmp
xchg
lcall
imul
pop
sti
data16
fwait
loop
fwait
push
jb
rcrb
call
jmp
in
jp
in
call
or
push
jo
ljmp
cmp
xchg
out
jne
mov
loop
stos
cmpsl
jmp
pop
xor
decl
in
jb
pushf
cmp
loopne
sti
inc
imul
popf
aad
mov
pop
sub
cmpb
shlb
and
mov
mov
leave
xor
repnz
add
cmpsb
cli
sti
jge
cwtl
push
lret
xchg
lret
mov
cld
sbb
or
sub
std
dec
adc
jl
pop
jl
fistpll
test
mov
push
lret
cmp
test
inc
daa
sub
iret
shll
jns
mov
dec
lds
sti
cmpsl
xchg
jmp
in
rcrl
mov
aam
jne
mov
push
insl
jmp
repnz
icebp
push
xchg
cmc
imul
cli
mov
pop
adc
into
movsb
cmp
adcb
sarb
lods
stc
shll
hlt
sti
sti
adc
inc
push
in
cmp
ret
sbb
das
pop
rcll
xchg
dec
sbb
loope
dec
outsb
inc
push
add
clc
mov
jmp
mov
sbb
xchg
pusha
mov
add
cmpsb
mov
push
jne
mov
mov
jp
sub
daa
nop
xchg
mov
mov
mov
scas
es
mov
xor
push
inc
arpl
jg
jg
sub
jnp
mov
push
dec
or
loop
iret
adc
jns
jmp
xor
lea
jmp
dec
sbb
mov
outsl
push
adc
fldenv
rclb
xlat
mov
push
xchg
faddl
nop
arpl
dec
imul
xchg
enter
dec
imul
push
adc
jg
movsb
divb
cld
inc
adc
loope
or
aaa
stc
dec
call
mov
jecxz
xor
jne
jo
lock
mov
mov
jbe
sbb
mov
jo
lret
inc
dec
sub
andb
ja
jp
gs
mov
or
fistps
jns
jno
je
rorb
dec
and
jmp
ss
fneni(8087
cmp
imul
fwait
sbb
dec
xor
xor
mov
insb
test
jne
in
add
daa
cs
push
dec
lcall
lret
pop
test
mov
mov
sub
ja
pop
jg
jne
jb
dec
popf
nop
push
mov
aam
or
inc
cmp
aam
pop
rcl
push
incl
adc
cli
or
jne
mov
pop
movsb
inc
nop
mov
lcall
pushf
add
lock
and
sbbb
scas
sbb
cmp
dec
adc
lods
add
dec
roll
adc
in
arpl
imul
pop
pusha
rcl
add
ret
sub
xlat
pop
xchg
mov
or
xchg
xor
lahf
cwtl
xor
movsb
push
pusha
imulb
mov
sub
and
xor
xor
into
fisttpll
pop
out
in
mov
in
je
call
sarl
imul
shrb
aad
add
pop
mov
sbb
cmpsl
xchg
mov
jle
es
push
sbb
cmp
sarb
sbb
inc
sub
add
xlat
cmp
scas
pop
push
and
add
sbb
push
push
inc
lcall
push
jae
loope
cld
mov
test
push
test
jae
pushf
push
sub
imul
or
lock
sub
push
pop
or
add
ja
fisttpl
or
mov
pop
pop
enter
rorb
popa
mov
push
int3
sbbb
test
cmp
cmpsl
incl
je
out
inc
mov
jns
aad
mov
inc
movsl
fnstsw
mov
popf
add
or
pusha
lcall
or
lods
add
cwtl
jg
xchg
push
loop
push
mov
aaa
icebp
or
mov
sub
sbb
data16
pop
push
push
inc
mov
sbb
xchg
mov
rcrb
into
xor
add
dec
ss
pop
or
jbe
sti
call
dec
repz
dec
fcoms
lahf
push
push
jo
popf
rcll
das
stc
sbb
cmpsl
push
sub
jno
inc
adc
mov
jg
add
xchg
mov
orb
jle
test
pop
sub
hlt
sahf
les
add
divb
out
mov
fldcw
pop
jo
add
ss
mov
lcall
frstor
notb
or
mulb
and
jns
adc
add
adcl
jae
jnp
adc
adc
in
aas
ret
rcll
xchg
pop
sub
mov
jmp
mov
loope
and
lock
push
push
push
loop
lods
lds
shl
mov
inc
aas
cmp
pushf
gs
cmpb
xchg
adcl
push
sbb
fisubs
lods
pop
xchg
mov
adc
ds
sub
dec
cmp
imul
fistpll
fiaddl
add
pushf
jl
push
push
sbb
adc
out
loope
call
daa
int
fucomip
pop
cmpps
add
cli
out
popa
cwtl
sbb
mov
adc
aam
negb
push
mov
inc
pop
adc
or
adcb
lahf
out
aaa
je
out
mov
cmp
fsubp
mov
add
mov
out
sqrtps
mov
cmpsl
xor
add
xor
arpl
es
adc
addr16
mov
cmp
dec
daa
jbe
sbb
lds
adc
loope
inc
hlt
in
xlat
or
pop
mov
mov
mov
pop
lods
icebp
xchg
jge
mov
cmp
push
imul
fisttpl
je
das
fmuls
insl
dec
jae
lds
lret
lds
leave
in
dec
in
call
sub
lds
inc
jmp
insl
add
aas
mov
push
lods
mov
jl
adc
dec
mov
cld
pop
fadds
mov
jl
cld
mov
inc
dec
lss
stos
xor
mov
dec
and
adc
xchg
nop
sub
shlb
insb
dec
lgs
xchg
add
imul
cmp
fcomps
jae
push
adc
mov
xor
das
mov
mov
ret
push
jb
out
fcmovnb
arpl
push
xchg
xchg
cld
cltd
ljmp
fsubr
jmp
nop
xchg
mov
mov
lcall
fstp
inc
xor
fwait
sar
push
in
mul
add
ljmp
faddl
mov
fnstenv
in
sub
dec
lock
xchg
fdiv
aam
sti
mov
nopl
cmpsl
xor
xchg
mov
in
dec
pop
popf
cmpb
sub
pop
mov
xor
sub
jb
sub
inc
mov
sub
push
stc
fnstcw
cmp
scas
stos
mov
out
mov
xchg
aam
sub
and
lret
data16
arpl
adc
xchg
inc
fidivrs
jl
pop
cmp
adcl
loope
and
or
or
pop
lock
fmuls
adc
xchg
sub
mov
push
push
jne
aad
mov
cmp
jge
jnp
aad
mov
jge
fnsave
cltd
xchg
negb
das
stos
adc
pop
out
adc
in
inc
inc
movsl
add
pop
addr16
test
mov
sub
je
scas
mov
sub
test
xchg
xor
pop
nop
es
sbb
xchg
rolb
dec
sbb
xchg
inc
inc
mov
movsb
fbstp
repnz
lock
loopne
jmp
jmp
add
ja
push
test
lret
mov
xchg
dec
fs
jp
add
xchg
leave
fnstsw
cmp
sahf
xor
inc
test
test
fisttpll
int
lcall
outsb
mov
lret
mov
into
and
into
and
pop
sarb
or
clc
adc
fiadds
mov
pusha
js
pop
pxor
mov
out
rcrb
test
cmp
lret
jno
add
fwait
dec
rcrl
xor
add
pusha
sbb
lcall
cmpsl
cmp
xor
xchg
xchg
xor
or
adc
add
push
cmp
pop
xorl
test
add
jge
pop
mov
cmp
jno
xor
ret
pop
ret
cwtl
mov
movsb
mov
mov
out
mov
or
movsb
clc
lea
sbb
adc
enter
insb
cmpsb
ficoms
and
cmp
cltd
addr16
lods
out
into
mov
scas
sbb
xorb
clc
lret
mov
pop
xchg
adc
dec
adc
xchg
xchg
lods
push
stos
or
outsl
add
lahf
outsb
fcmovne
pop
das
mov
or
stos
pop
out
sbb
xchg
pop
adc
push
fidivrs
nop
add
cmc
xchg
sbb
dec
jb
push
inc
mov
add
jecxz
and
cmpsl
adc
bound
inc
insb
filds
aaa
subl
pusha
jl
jp
xchg
mov
pushfw
and
jae
cli
ret
sub
ret
pop
mov
push
insl
dec
rorb
or
or
mov
xor
movsl
mov
andl
les
rcrb
inc
or
insb
dec
sbb
gs
mov
rol
stos
pop
pop
jmp
stos
xchg
sbb
cmp
or
sub
add
jp
pop
ss
inc
in
mov
addb
cld
xor
push
data16
fistl
sub
mov
cmpsl
imulb
adc
dec
pop
push
mov
mov
adc
or
or
jo
or
insl
or
mov
fisttps
pop
lds
inc
pop
sahf
daa
cmp
aad
mov
jno
or
enter
sbb
cmpsb
inc
fs
cmc
es
cmp
mov
jge
cli
int
clc
cs
xchg
xchg
sub
pop
sahf
shlb
jle
addr16
dec
std
cs
cmp
loopne
sbb
fs
daa
add
punpcklbw
test
inc
pop
dec
inc
test
mov
sbb
sbb
mov
jbe,pn
xor
xchg
or
lods
lea
fcom
pop
sub
adcb
mov
lcall
fwait
mov
fidivl
push
xchg
sbb
xor
fbld
or
mov
dec
icebp
inc
or
clc
repnz
adc
pop
pop
in
inc
jne
mov
clc
scas
xor
test
push
cmpsb
insb
mov
dec
inc
leave
pop
sub
ss
add
pushf
xchg
xchg
mov
jae
mov
lret
das
into
ret
jmp
mov
xor
ds
pop
fisttpll
filds
adc
adc
and
push
stos
cwtl
pop
xchg
stos
mov
inc
out
pop
cmp
test
adc
add
xlat
inc
xchg
push
adc
and
and
or
mov
fwait
pushf
fs
cld
stc
insb
jl
pop
imul
mov
iret
pop
push
xchg
xor
cli
sti
mov
fiadds
test
cltd
pop
out
sub
xchg
in
repnz
jmp
cmp
pop
xchg
jbe
fwait
jecxz
sub
orl
pop
pusha
xlat
shrl
xchg
fiadds
push
out
fsubl
jno
push
cltd
rcr
and
inc
or
and
mov
push
ja
mov
lret
push
sub
xor
shr
or
test
daa
push
cmp
ret
cld
lds
pop
xor
xor
test
daa
in
jno
lea
or
mov
inc
das
stos
add
mov
scas
pop
and
fistpll
mov
jnp
fstl
test
test
push
and
and
inc
and
xchg
cmp
in
in
movsl
leave
rorl
inc
aam
jecxz
mov
fucomi
mov
xor
aam
rolb
imul
aad
lret
pop
ret
inc
std
and
mov
addb
scas
scas
lret
dec
sbb
ss
fs
dec
aas
push
icebp
std
mov
aas
nop
lret
imul
xlat
out
stc
adc
popf
inc
lret
aad
mulps
or
push
add
bound
fcmovne
cmp
mov
shlb
adc
xchg
fstl
xorl
mov
sub
inc
or
les
cmpsl
xor
cmpsl
sub
aas
mov
jl
jmp
push
pop
pop
mov
call
stos
test
loope
inc
add
test
fldcw
and
arpl
dec
movsl
lock
nop
std
imul
mov
jns
xchg
loope
and
push
mov
push
cs
sub
add
nop
or
add
xor
cmp
daa
call
xchg
cmpsl
iret
repz
int3
imul
imul
add
jbe
cld
cmp
mov
lds
ror
mov
adc
imul
push
mov
movsb
cwtl
aas
or
add
and
ret
mov
add
insl
insl
jecxz
pushf
es
jge
outsl
clc
mov
mov
fidivrs
mov
mov
inc
cmp
imul
scas
jne
push
add
push
in
add
sub
cltd
push
pop
cmpsb
cmp
decb
aas
jle
addl
xchg
fidivrl
aas
jge
in
test
hlt
sub
or
pop
jge
jp
push
mov
cmpsl
fisubrs
idivl
out
pop
push
sbb
and
sub
rolb
jp
xchg
in
sub
jnp
insb
or
invd
mov
push
inc
inc
std
xchg
inc
aad
and
sub
xor
xchg
in
push
mov
xchg
xchg
mov
lret
lret
fdivs
dec
out
and
loopne
stc
sahf
xorb
repz
pusha
pop
dec
rorl
jmp
xchg
push
inc
inc
adc
lods
psubusb
push
adc
fsubrl
rclb
cltd
inc
xor
xor
rorl
test
mov
stc
dec
mov
xor
out
enter
xor
xor
dec
or
jp
sub
in
cmc
inc
loopne
cmp
and
mov
add
arpl
mov
and
add
push
cwtl
aas
es
mov
bound
shll
and
jle
pop
ljmp
xchg
inc
movsb
sbb
mov
scas
bound
sbb
and
lcall
add
loop
call
loope
sub
mov
das
test
mov
or
push
das
inc
jl
xchg
push
vmread
push
mov
negb
jg
je
mov
cmp
mov
add
and
bound
jnp
pop
negl
adc
jb
add
inc
lea
imul
inc
cwtl
xchg
sahf
lahf
adc
in
pop
xchg
int3
or
je
pop
ja
std
fnstsw
in
or
cmpsl
js
adc
cmp
dec
sub
or
pop
pop
inc
imul
sbbb
xchg
and
movsb
adc
and
icebp
sbb
dec
push
inc
aad
lret
mov
in
push
int
pop
inc
clc
bound
dec
mulb
jg
out
mov
in
jmp
and
xchg
mov
inc
pop
mov
repz
sub
sahf
out
out
push
ljmp
inc
jle
call
stos
add
mov
scas
add
lret
xchg
sarl
jo
push
fs
jge
rcl
out
daa
jo
and
push
adc
or
mov
cmp
jecxz
ret
in
mov
jle
jge
mov
rorb
sub
dec
mov
mov
pusha
cwtl
out
xor
pusha
pop
dec
test
ror
sub
pop
data16
lods
cmc
jnp
dec
lock
mov
dec
call
in
cli
rcrl
push
lret
jge
sbb
ret
inc
dec
adc
inc
add
rcl
cltd
adc
loopne
pop
xchg
fsubr
mov
and
jbe
cmpsb
jbe
add
cli
mov
cmp
in
adc
xor
jo
lods
push
xchg
adc
cli
mov
into
out
jnp
adc
lock
cld
xchg
pop
loop
shll
dec
cwtl
shl
mov
dec
and
cmpsl
decb
inc
movsb
xlat
pop
cmc
add
insl
movb
sbb
jl
test
roll
push
mov
xlat
loope
and
pop
scas
mov
mov
dec
loopne
adc
jle
cmpb
mov
insl
out
sti
and
mov
mov
ja
and
lahf
lds
mov
popa
adc
push
jecxz
xchg
pop
cmp
dec
adc
fsubrp
divl
jge
push
lods
repz
imul
loop
pop
sti
notl
ss
sbb
or
adc
out
xchg
cmp
mov
divl
out
pop
cmpsb
test
dec
rol
xor
mov
mov
loop
jns
fldenv
push
mov
sbb
jg
xchg
add
iret
inc
and
mov
enter
popa
jge
ja
add
mov
jle
jl
jl
stos
ret
je
inc
or
dec
or
mov
pop
xor
jge
and
and
fidivrl
repnz
popf
ss
mov
mov
add
fdivrp
popf
dec
jmp
dec
sub
movsl
fcmovb
jno
push
ljmp
jle
arpl
mov
enter
les
xchg
push
sub
dec
xchg
std
push
ds
pushf
cld
call
inc
pop
pop
dec
adc
mov
insb
xlat
popa
jl
ss
repnz
fisubs
pushf
jle
shll
int
int
xorl
lcall
push
sbb
std
btr
pop
push
subl
ret
pop
mov
std
sbb
mov
leave
push
fisttpl
jne
js
ror
ret
cmc
imul
or
roll
pop
or
inc
mov
cmc
push
and
cmp
mov
sub
xchg
sub
inc
mov
xlat
mov
jl
negl
pusha
filds
cmp
push
lods
test
jmp
insl
jnp
dec
mov
movsl
fisubrl
jecxz
mov
xchg
into
sar
sbb
stc
or
sti
mov
pop
aas
int3
adc
push
mov
cmp
cmpsb
lock
jns
stc
lods
psrld
jo
or
sbb
mov
cmp
fnstenv
mov
cmp
sbb
into
insb
dec
aad
mov
xchg
inc
sub
inc
add
mov
test
je
sbb
fwait
movsl
sar
std
dec
inc
add
jae
push
sub
das
or
repz
dec
movsl
in
pop
or
fwait
dec
and
jge
push
es
cs
jp
lret
mov
enter
mov
pusha
push
sbb
mov
gs
cmp
jbe
in
mov
mov
push
or
add
daa
je
dec
lret
bound
lret
repz
fimuls
pop
sub
sbb
fs
cmc
xchg
int
jmp
mov
jbe
shrb
mov
sbb
sbb
cmpsb
addr16
cmp
sbb
scas
pop
movsl
fcmovnb
jno
cli
jge
out
xchg
jg
push
fstpt
add
iret
cltd
xchg
sbb
fsubrs
mov
js
cwtl
add
popf
adc
adc
stos
xor
mov
sbb
jl
shlb
test
add
dec
adc
pop
leave
and
loopne
xchg
xchg
cmc
cmpsl
xchg
cmp
stc
mov
loop
ffreep
aam
mov
lret
mov
sbb
lret
ror
pop
jno
insl
pop
lret
jbe
sbb
shll
jns
sbb
enter
ja
mov
int3
int
sub
jl
add
cmp
in
stc
js
icebp
jge
outsb
jle
hlt
lea
rclb
call
js
jbe
add
dec
cwtl
fucomip
not
out
das
mov
scas
jge
fimull
jno
insl
or
cmp
cmp
mov
mov
sub
stc
and
imul
xchg
ds
jae
jb
cmp
ja
jmp
pop
jmp
push
call
jmp
add
xchg
inc
push
cmp
lock
sahf
dec
into
jmp
push
ljmp
addr16
push
mov
jno
add
aas
inc
jne
push
insb
fcmovnb
mov
sub
shll
mov
or
add
xor
mov
inc
repnz
mov
sub
inc
pop
movl
push
insl
xor
sbb
inc
cmp
pop
pop
xlat
sub
stos
addl
cmpsb
dec
imul
xchg
hlt
xchg
in
jecxz
adc
push
jnp
dec
cmpl
mov
gs
fmuls
shl
sbb
fbstp
negl
mov
push
mov
push
mov
sbb
adc
es
mov
adc
add
push
daa
pop
cmp
test
push
mov
ljmp
and
ret
xor
add
or
mov
shlb
pop
mov
xchg
lods
mov
mov
fs
popa
pop
nop
push
iret
dec
aam
mov
pushf
out
add
in
mov
jmp
xor
jne
imul
fcmovnb
jne
aad
stos
negl
inc
cli
cmc
fdiv
ljmp
pop
mov
pop
cmpsb
shrl
xor
jcxz
push
fdivrl
popf
cmp
mov
inc
add
sbb
jge
mov
lahf
fcoml
neg
push
shrb
adc
mov
lock
push
scas
jmp
cmp
mov
xchg
daa
dec
push
xchg
adc
adcb
imul
pop
jmp
stc
jns
sarb
pop
fcomps
pop
mov
ljmp
ljmp
dec
sub
insl
test
movsl
mov
mov
cmp
push
in
sbbb
inc
iret
dec
mov
hlt
jae
jo
push
add
xchg
add
outsl
mov
pop
sbb
lret
push
pop
mov
cmpsb
movsl
insb
jg
add
lret
shll
stc
fcompl
adc
rorb
popa
ss
ret
xor
lods
push
and
inc
add
insb
jns
nop
sub
add
sarl
jb
sub
sti
jnp
xchg
push
leave
fwait
and
push
push
cli
stos
out
mov
arpl
aaa
ljmp
loopne
lock
popa
dec
inc
and
adcl
and
jbe
mov
iret
jecxz
aas
bound
sbb
lds
test
inc
lds
sbb
sub
push
inc
fsubr
and
add
cmp
inc
ljmp
cmc
mov
cmp
push
out
cld
ds
fcomip
push
pop
cld
es
out
jle
ret
pop
shll
mov
insb
fcmovnb
mov
aaa
sub
sub
out
push
insl
pop
outsl
mov
scas
jle
sbb
push
push
sub
cli
sbb
lcall
add
cmp
popa
sbb
pop
cltd
add
mov
or
stos
add
mov
pop
test
xor
cmpsb
mov
shr
and
shlb
push
push
xchg
adc
inc
and
sub
cmp
test
loop
push
pop
iret
lds
cmp
test
lret
cmpsl
add
mov
adc
enter
jge
frstor
inc
and
jb
push
and
scas
aam
pop
addl
les
push
push
jae
add
pop
fimull
fs
dec
cmc
aad
test
lea
mov
mov
dec
insl
neg
les
rol
mov
aad
outsb
cmp
testb
mov
xchg
push
test
push
data16
int
stc
repnz
mov
pusha
cli
pop
mov
pop
clc
sub
bnd
pop
and
mov
fnsave
rcll
mov
mov
xlat
fbld
icebp
jb
rcl
add
incl
lock
jbe
ficoms
inc
mov
or
xchg
pop
cmpsl
sbb
jmp
pop
inc
addb
xchg
lea
adc
inc
popa
inc
fcomip
icebp
jp
lret
inc
les
insl
js
push
lahf
jo
test
mov
xor
cmp
mov
xor
inc
push
xchg
js
das
out
out
adc
ja
mov
subl
outsb
pop
or
je
into
cli
push
sbb
mov
xlat
jecxz
lea
dec
mov
stc
sub
in
inc
sti
fwait
cmpsb
movsl
cmp
xchg
inc
and
cli
lcall
outsb
mov
call
pop
jno
ss
sbb
sti
add
xchg
fsubrl
mov
push
adc
cmp
pop
test
fwait
push
movsb
pop
and
lcall
idivl
and
xchg
inc
nop
test
in
sahf
rclb
sbb
push
cmpsb
or
inc
adc
or
inc
inc
or
add
stos
inc
pop
jne
std
add
xchg
add
jb
movl
pop
or
or
popa
fists
inc
sub
xlat
shl
inc
repnz
add
xlat
mov
out
insl
xor
sub
push
pop
sbb
mov
ret
and
shlb
xchg
gs
xor
movsl
icebp
jl
add
mov
mov
and
je
cmp
add
push
fldt
mov
mov
sub
push
mov
or
cmp
lret
shlb
mov
popa
adc
mov
sbb
and
sbb
dec
lea
jl
aas
notb
movsb
xchg
jmp
dec
add
aas
outsl
fstps
out
pop
call
cmp
cmc
push
mov
int
cmpsl
jge
pop
jp
dec
or
imul
and
and
and
sub
jo
lods
shl
jge
inc
inc
sub
xor
add
cmc
test
cltd
sahf
sbb
sti
js
test
mov
or
mov
or
ret
jg
jne
subb
jl
dec
mov
sub
adc
sbb
fsubl
adc
das
pop
int3
mov
xor
arpl
inc
jle
cwtl
icebp
cmp
ljmp
xchg
fiaddl
aas
ja
mov
imul
jge
ret
imul
mov
fnstenv
not
mov
cmpsl
xchg
dec
out
sub
push
push
or
in
dec
mov
jnp
jb
mov
loope
push
sti
and
test
stos
lods
and
sub
andl
jo
mov
jmp
pop
movsl
push
push
mov
or
dec
aas
imul
sub
sub
call
mov
jg
rolb
xchg
addb
stc
inc
or
push
add
or
xlat
xor
mov
push
test
fwait
lock
sahf
lret
test
addr16
cmp
aaa
lahf
add
and
xchg
inc
pop
or
popa
jl
bound
and
movsb
inc
js
mov
sahf
leave
pop
pop
mov
gs
aaa
add
inc
cmp
pop
sbb
stc
ja
adc
sub
pop
sub
enter
rcl
mov
ds
dec
rcll
rol
mov
insl
fstps
out
jne
sahf
cmp
in
sub
xchg
dec
fcoml
lods
add
and
dec
inc
inc
push
lahf
and
clc
jmp
cmp
or
daa
mov
inc
gs
loopne
sub
jns
xchg
xchg
into
popf
fdivs
add
loopne
jecxz
dec
test
cmp
fcomip
scas
mov
test
pushf
jg
sbbl
insl
add
lahf
sti
sbb
fstl
sbb
xchg
and
or
inc
add
or
and
mov
addl
mov
xlat
adc
xchg
adc
lock
loop
lds
sub
lret
xorb
in
sbb
xchg
pop
movsl
dec
inc
inc
mov
dec
mov
loope
mov
shll
aas
jp
sti
pop
jecxz
pop
daa
fnstcw
mov
xchg
test
movsl
lret
test
fdivp
sub
xchg
imul
xor
or
arpl
outsl
fsts
out
jno
pop
push
inc
mov
inc
xchg
sub
hlt
in
xor
out
test
sbbb
icebp
loopne
pop
in
or
push
subb
arpl
adc
or
lret
into
mov
test
add
mov
loopne
sub
leave
push
outsb
xor
iret
cli
call
mov
xor
int3
int3
adc
cwtl
mov
data16
filds
xchg
xor
adc
or
push
call
mov
rclb
or
and
sub
mov
jle
andb
xlat
inc
sub
lock
mov
dec
and
jmp
pop
aas
dec
pop
outsl
jle
daa
sbb
clc
jbe
fwait
ljmp
leave
repnz
jmp
loopne
lds
cmp
push
and
push
js,pt
lret
jecxz
sub
jnp
pop
xchg
subl
and
adc
pusha
imul
inc
adc
mov
sarw
xor
lods
arpl
or
adc
fmuls
push
mov
dec
push
dec
add
iret
fsubrs
add
mov
push
shll
mov
and
and
jno
adc
xchg
bound
sub
mov
mov
das
adc
mov
inc
adc
xor
fsubs
mov
or
sbb
sbb
out
pop
mov
repz
mov
adc
push
rcrl
cwtl
aam
push
mov
fs
and
dec
mov
call
sbb
jb
fmull
std
aaa
loope
mov
pop
cmp
dec
jle
lret
ret
sub
aad
cmpsb
gs
aad
lods
in
push
popa
push
or
rclb
ficomps
repz
cmp
push
stc
cli
and
or
bound
inc
popa
mov
add
insl
jcxz
push
fdivr
or
imul
ja
loopne
insl
cmp
pop
xchg
enter
lods
and
or
adc
mov
adc
jg
mov
lea
scas
adc
mov
in
daa
call
mov
dec
cmp
sbb
dec
xchg
addr16
mov
in
notl
adc
sub
add
lods
and
insl
fwait
sbb
dec
lock
lahf
cmp
xor
lock
or
jle
jns
mov
les
and
loopne
fs
insl
fdivs
sbb
ret
add
pop
inc
mov
xchg
dec
adc
mov
in
push
jmp
mov
cltd
mov
mov
test
test
cli
cli
xor
cmp
ljmp
or
mov
daa
xchg
and
jp
fmul
mov
adc
and
push
sub
dec
in
lcall
ss
sub
inc
fs
insb
mov
or
fwait
add
loop
push
gs
scas
mov
lret
outsl
mov
fsts
mov
or
std
popa
mov
fnstsw
xchg
insl
xchg
and
sub
test
lret
inc
or
jle
lds
mov
pop
mov
xchg
aam
sbb
sahf
lcall
inc
into
stos
xchg
pop
call
jnp
mov
jp
notb
cmpsb
xor
jno
lods
cmpl
jne
add
add
mov
ljmp
xor
cltd
dec
rol
xor
cmp
xchg
lods
mov
aaa
or
hlt
mov
das
arpl
sbb
sub
pop
mov
fcompl
jl
inc
testb
push
ja
pop
test
adc
ret
jge
ss
or
loopne
flds
cwtl
or
shl
pop
outsl
push
andnps
pop
insl
and
push
dec
push
sahf
jl
out
cltd
push
mov
inc
push
or
sbb
mov
cwtl
jb
push
aas
jge
add
push
push
jns
pop
mov
mov
fsubrs
aas
add
call
ret
mov
loopne
aad
out
mov
pusha
mov
fisubl
rcrl
push
test
cmc
out
mov
mov
xor
hlt
cmpsb
imul
jbe
xchg
sbb
xor
cmovl
sub
pop
mov
insl
and
xchg
mov
scas
addl
xchg
or
cmpl
rcll
xor
in
movsb
les
loop
fnsave
adc
pop
jg
or
out
popa
push
and
fdivrl
or
jle
mov
lret
outsb
xchg
cmpsb
arpl
dec
lea
test
mov
mov
pop
xchg
mov
stos
mov
sub
jle
and
xchg
add
inc
sub
jo
lods
dec
cs
sti
xor
orb
movsl
push
mov
push
sahf
icebp
movsl
and
aam
sub
push
sbb
xor
subb
pop
lds
sti
cmpsl
inc
inc
and
sahf
mov
adc
fs
pusha
repnz
and
sub
imul
enter
add
push
and
and
jecxz
lds
add
sub
popa
sbb
shlb
push
insl
lods
std
mov
cmp
inc
nop
outsb
mov
icebp
sahf
jg
dec
mov
xor
xorb
mov
scas
xor
mov
insb
and
mov
push
xor
ret
xchg
mov
fidivl
insl
adc
adc
add
lock
xchg
push
stos
xor
or
push
lds
xchg
dec
data16
dec
mov
add
inc
int3
faddl
xchg
inc
xor
push
addb
and
or
int3
inc
dec
push
xchg
icebp
gs
xchg
inc
cwtl
in
rep
movsb
insl
mov
inc
jns
shrl
repz
mov
std
mov
dec
mov
insl
xor
xor
aas
shrb
xor
cld
add
xor
cld
pop
cmp
add
in
jbe
push
aam
nop
adc
mov
pop
cmp
lea
mov
scas
or
sub
loop
pop
mov
add
inc
stc
or
push
or
popf
push
inc
mov
mov
ss
xor
mov
leave
xorb
inc
add
in
mov
cltd
or
cltd
inc
add
mov
push
enter
ds
jp
sub
adc
leave
in
adc
inc
ja
data16
add
xchg
outsb
lea
imul
lahf
clc
ljmp
insl
inc
fimuls
inc
sub
push
ds
fdivrl
or
mov
mov
add
push
cmpsb
inc
sbb
add
shrl
cld
in
or
push
xor
mov
stos
cmc
sub
jp
mov
mov
fiaddl
or
inc
or
xor
push
fs
aam
pusha
out
scas
or
rsqrtps
aas
pusha
jmp
cmpsb
pusha
xchg
dec
aas
mov
arpl
sub
mov
jmp
cltd
jnp
xor
jle
and
pop
add
das
mov
inc
mov
lret
inc
adc
fcomip
xchg
push
jmp
movsl
pop
pop
cmc
cmp
sahf
dec
pop
test
es
dec
pop
jno
push
lds
and
xchg
xchg
xchg
or
xchg
subl
scas
lods
and
daa
jbe
insl
inc
add
add
mov
adc
jecxz
add
iret
sti
add
in
pushl
movsb
mov
nop
jnp
sub
sarb
mov
cmp
cmp
in
jnp
scas
test
and
das
sarl
jnp
sub
mov
and
sub
cmp
jno
push
shll
pop
xchg
mov
cmp
aam
push
outsl
inc
mov
repnz
mov
xchg
or
cwtl
and
cld
sub
xlat
and
int3
popf
mov
dec
add
test
cwtl
dec
and
notb
cwtl
jg
jmp
into
gs
adc
popa
call
cmp
mov
sub
loop
adc
pushl
push
insb
test
and
jns
adc
repnz
rcr
mov
sub
test
jnp
inc
pop
ret
out
mov
sub
adcb
cmc
into
xchg
lcall
sbb
sbb
cmp
adc
notb
or
jmp
jmp
jb
aas
sub
inc
nop
dec
adc
subl
fistps
xor
mov
or
adc
ss
push
jmp
pop
dec
insb
pop
leave
in
insl
xorb
pop
cmp
fdiv
jns
aas
mov
push
dec
pop
jmp
mov
ficoms
shr
bound
jge
jg
hlt
loopne
push
enter
andl
mov
rorl
xchg
pop
xchg
inc
add
iret
stc
fiaddl
fmuls
stos
cmp
addl
popa
cmp
scas
pop
add
push
sbb
inc
in
sub
jae
std
mov
mulb
mov
arpl
xor
dec
xor
sub
or
arpl
or
lock
mov
xchg
dec
cwtl
jmp
push
cmpsb
sub
cmpsl
add
push
xchg
scas
incb
mov
ds
or
push
or
dec
fdivrp
adc
pop
out
push
cmp
mov
dec
adc
inc
mov
lret
stos
insb
es
pop
mov
scas
cwtl
add
sub
mov
fisttpll
insl
into
or
jg
in
mov
sub
or
test
pop
mov
test
and
lods
fcompl
cmp
hlt
shr
cmpsl
or
xor
fdiv
and
popf
int
movsb
cld
pop
and
mov
jp
repz
sub
test
out
mov
cmc
divl
mov
mov
test
fdivrl
cmp
and
mov
out
pushf
andb
mov
jno
jne
or
mov
imul
cmp
fdivs
cmpsb
add
sbb
leave
test
in
outsl
stc
pop
push
dec
ret
xor
mov
repnz
iret
int
das
or
dec
mov
mov
lods
mov
sub
call
pop
mov
int3
sahf
aad
pop
jmp
mov
dec
movsb
cmpl
cmp
pop
add
test
lods
adc
mov
xor
cltd
pop
jge
lret
jmp
std
mov
subb
and
and
rorb
nop
stc
in
xchg
loopne
cltd
repnz
and
and
imul
movsl
sti
aad
or
lock
jno
jae
iret
jo
inc
add
inc
inc
push
nop
mov
ljmp
and
dec
sarl
or
rcll
popa
sbb
pop
roll
stos
sahf
cmp
mov
addr16
out
jnp
push
ljmp
xchg
movsl
out
mov
push
notb
hlt
repz
mov
lea
addr16
sub
pusha
fnsave
add
imul
jl
mov
cmp
lahf
cli
pop
inc
xor
ds
and
pusha
mov
xchg
mov
fstps
jne
lea
scas
sbb
xor
negb
loope
fldt
repz
pop
push
or
sbb
xor
ret
pop
pop
popfw
adc
inc
test
aaa
repnz
xor
subl
fidivs
addl
shll
add
insb
aas
mov
push
mov
xchg
sub
out
inc
lods
lods
mov
scas
stos
cmpb
mov
mov
mov
les
mov
fcoms
push
scas
inc
mov
pop
xchg
arpl
insb
sti
cmp
je
test
pop
sbb
add
push
jl
clc
mov
fsubl
das
pushf
sahf
flds
inc
jl
inc
mov
adc
add
jge
mov
repz
fdivl
mov
jns
pop
orb
es
nop
jg
aam
mov
outsl
stos
iret
stc
push
mov
mov
xor
adc
jno
lock
push
pop
pop
add
and
clc
in
stc
xchg
pop
fstpt
jp
mov
test
mov
js
sbb
mov
shrl
cltd
popf
cmp
repnz
mov
jge,pt
xor
sbb
xchg
and
mov
insl
pop
popf
push
pop
mov
cmpsl
shrl
xchg
push
inc
pop
xor
fsubl
sbb
ret
dec
subl
in
push
mov
lret
mov
pushf
mov
dec
push
sarb
fwait
lods
lcall
rcll
setl
std
hlt
and
nop
sub
cmp
push
test
dec
mov
and
fimuls
pop
lea
ret
jg
repnz
dec
sub
xor
pusha
out
js
dec
clc
jmp
loope
mov
mov
inc
inc
xor
imul
repz
sub
pusha
or
cmp
scas
lds
xchg
jl
mov
dec
cmp
nop
data16
xor
sbb
cwtl
imul
and
shlb
ljmp
adc
jg
mov
js
mov
and
adc
mov
adc
ljmp
ret
jno
pop
sub
pop
adc
sbb
in
orl
leave
xchg
aaa
jg
or
movsl
or
inc
sti
daa
cmp
inc
add
mov
jl
mov
xorb
mov
aas
pop
mov
es
loope
lock
repnz
mov
add
inc
jg
dec
pushf
jle
sbb
xchg
aad
mov
decb
inc
ds
mov
and
js
dec
jae
enter
ret
mov
and
mov
xor
sbb
inc
fists
dec
pop
lret
adc
sti
push
or
sarb
sahf
xchg
mov
nop
mov
test
iret
je
leave
fmull
add
in
jbe
add
xor
xor
idiv
test
jg
sbb
pop
sub
imul
cld
in
mov
lcall
push
or
pop
aas
jno
jmp
ret
push
je
insl
sahf
jg
test
sub
or
pop
sub
sub
pop
pop
adc
add
mov
jb
cltd
fwait
add
test
xor
adc
shrl
and
or
aas
gs
jle
mov
imul
mov
mov
fwait
nop
pop
inc
mov
push
ret
xchg
imul
xor
pop
add
ret
in
jmp
ds
inc
sub
stc
xchg
dec
jg
push
out
jno
and
in
sar
scas
jg
jae
dec
lods
call
in
fmuls
xchg
loope
pusha
xlat
jle
dec
out
sti
scas
inc
cmpsb
dec
addr16
jmp
cmpsb
jp
and
xor
and
pop
mov
cli
sbb
xchg
int3
xor
inc
pusha
mov
mov
fnstcw
and
mov
mov
jno
ret
pushw
stos
rorb
lahf
and
adc
loopne
aas
incl
mov
inc
add
jno
fdivrp
pop
mov
dec
sub
movnti
test
out
and
ret
dec
or
sahf
xchg
insl
sbb
movb
lahf
pop
inc
inc
cmpsb
push
int
sub
aam
enter
cmp
mov
outsb
xchg
or
adc
jbe
mov
repz
data16
lret
in
test
pop
xchg
stos
hlt
pop
pop
sub
out
imul
in
test
jge
ds
xor
xchg
mov
cwtl
add
into
popf
jecxz
pop
pop
aad
fnstenv
mov
pop
jmp
or
pushf
and
sahf
add
fldcw
mov
pop
pop
loopne
popf
jo
add
fwait
or
insb
ja,pn
int3
pop
mov
lds
into
sbb
mov
jns
mov
adc
push
repz
movsb
pop
dec
sar
idivl
dec
cmpsl
push
inc
add
inc
sahf
imul
out
and
shll
cmp
mov
idivl
mov
dec
scas
mov
xor
push
cmc
jmp
nop
push
xor
xor
roll
mov
sub
inc
les
sbb
dec
jl
loopne
addr16
mov
cmp
out
push
sub
jnp
mov
shl
sub
sti
push
pop
jge
xchg
lods
repz
jb
push
hlt
leave
jnp
xchg
cld
dec
jle
int3
jns
xor
xor
push
add
das
ds
sar
adc
add
ja
mov
cmp
jnp
hlt
arpl
xlat
cmpsl
pop
inc
jle
cmp
ds
mov
loope
or
popf
cmp
hlt
arpl
outsb
sti
loope
cltd
add
add
in
stos
nop
shrl
sbb
data16
paddd
jecxz
js
seta
nop
in
and
lahf
and
cli
jecxz
das
jl
jns
and
jmp
pop
jb
add
gs
arpl
ja
xchg
jp
pop
add
cwtl
jle
fldenv
out
add
icebp
aaa
and
loopne
mov
pop
ds
mov
xchg
cmc
jp
out
jp
addr16
mov
dec
and
adc
cwtl
clc
shlw
mov
push
clc
mov
daa
dec
aas
std
popl
js
jmp
cmp
and
xor
jnp
mov
pop
outsb
dec
aaa
sub
or
jo
add
mov
cld
push
call
xor
std
xchg
lds
bound
repz
mov
adc
push
inc
mov
iret
mov
cltd
es
jns
cld
stos
xchg
add
js
cmc
xlat
mov
pop
pop
jne
pop
inc
cmc
inc
filds
gs
lahf
icebp
add
inc
leave
jbe
int3
sbbb
mov
fistps
or
xor
cli
fcomps
or
repnz
push
add
pushf
mov
or
int
jmp
inc
repz
psubsw
cmpb
outsl
imul
movsl
or
add
sub
dec
scas
jmp
add
mov
rorb
cmc
popf
dec
push
lahf
mov
shll
mov
pop
inc
sbb
mov
aas
repnz
xorb
cmp
adcl
sbb
add
xchg
ret
cwtl
aas
paddsw
loopne
xchg
leave
pusha
cmp
loope
ret
das
jno
negb
cmp
jnp
clc
xchg
jg
fldt
mov
dec
ljmp
mov
xor
pmulhrsw
push
xchg
cmpsl
loop
xor
jmp
inc
lock
ds
jbe
scas
lods
fs
jge
fstpl
aaa
push
mov
dec
pop
dec
test
adc
iret
int
jns
jp
mov
pop
xchg
das
imul
int
cld
adc
mov
pop
outsb
cmpsb
inc
orb
popf
neg
int
pop
mov
xchg
push
aad
and
push
imul
clc
lcall
ss
add
pop
lret
mov
push
push
lret
cs
in
mov
ret
lret
fstpl
repz
cmp
fmull
mov
imulb
mov
decb
sar
ret
cwtl
aas
xchg
pop
out
xchg
flds
xor
xor
hlt
mov
and
out
dec
ds
dec
notrack
lret
mov
mov
or
iret
pushf
mov
pop
mov
and
addr16
sub
jbe
mov
imul
xchg
das
jmp
add
inc
fdiv
inc
daa
dec
aas
std
orl
mov
xor
push
jle
out
mov
test
lods
jmp
mov
jnp
je
je
sbb
xchg
ds
fadd
fdivrl
cli
adc
add
pushf
test
inc
mov
and
into
jnp
outsl
mov
push
out
jge
not
ss
jno
ret
push
sub
aam
in
roll
lret
addr16
sbb
pop
push
inc
mov
sbb
lcall
sub
jg
and
dec
scas
out
mov
aas
and
dec
loopne
stos
lods
je
mov
jae
push
out
cmp
movsl
ss
or
insl
fcomip
adc
shll
int
cltd
fldlg2
mov
leave
mov
mov
aaa
adc
mov
mov
loopne
jg
aas
jb
mov
adc
icebp
jl
test
jnp
jp
cs
out
js
pop
loopne
js
push
call
jl
sub
dec
aas
xchg
ror
lds
int
mov
mov
lret
insl
arpl
push
cmpb
int
xor
lret
pop
test
sub
mov
adc
cs
pushf
push
enter
sti
test
inc
dec
or
dec
test
sub
hlt
daa
lahf
cli
and
aaa
aas
cltd
mov
cmp
mov
out
cmp
ret
fldcw
sahf
inc
sbbl
outsb
jbe
into
xchg
movsl
sub
sbb
add
sbb
and
push
push
sbb
pop
pop
les
cmp
std
sub
jnp
push
push
ret
rclb
add
es
sbb
push
sahf
xlat
daa
hlt
jge
aad
inc
mov
movsb
jb
mov
test
mov
lea
iret
mov
sub
pop
test
sti
fs
shl
out
nop/reserved
std
lahf
xor
pop
push
add
mov
in
or
and
leave
xor
aaa
ja
mov
fcomi
sbb
ds
adc
cmp
jl
push
sahf
sub
aam
cmp
out
scas
jno
call
mov
icebp
xor
mov
lret
jmp
add
fdivrl
push
repnz
add
mov
add
xor
hlt
add
fbld
or
push
add
sub
push
adc
cmpsl
mov
add
pop
bound
in
lds
pop
add
popf
add
fisttpll
push
fs
and
pop
mov
jae
and
data16
adc
outsl
sbb
sbb
call
pop
mov
or
arpl
out
mov
aaa
xchg
mov
sti
popl
mov
or
fwait
fwait
popf
mov
mov
cmp
jl
popf
andl
aaa
repz
enter
xor
inc
or
movsl
data16
add
or
addb
sub
ror
pop
push
fnsave
sub
sti
ljmp
xchg
lret
shl
imul
jg
andb
or
std
ret
xor
out
out
sti
mov
sub
adc
xor
lahf
in
adc
mov
mov
dec
xlat
dec
inc
mov
scas
das
push
fidivl
sti
push
data16
enter
jno
in
lahf
out
fdivrp
ja
mov
dec
cmc
rorb
push
test
sub
inc
and
inc
xchg
addl
inc
push
loop
mov
gs
mov
adc
idivb
add
jae
adc
mov
jecxz
cmp
cli
ds
cmp
adc
cwtl
es
add
mov
add
ja
xor
faddl
and
cmp
std
xor
or
outsl
std
push
arpl
and
xchg
movsb
fldenv
gs
ss
cs
inc
mov
mov
shr
cmp
push
bnd
movsb
xor
and
clc
jge
jp
test
add
loope
jg
mov
or
jp
mov
adc
add
or
mov
scas
cwtl
cmp
pop
push
xor
mov
das
sub
sbb
arpl
addl
lcall
cmpsb
and
leave
iret
scas
adc
pop
lret
mov
sbb
xchg
xchg
add
xchg
fsts
mov
dec
roll
daa
sti
pop
cld
xor
and
adc
in
das
xchg
push
jmp
call
stos
loope
adc
cs
add
ja
jnp
jmp
pop
or
loop
pop
outsl
bound
shlb
test
cltd
jecxz
mov
mov
push
ret
or
std
sbb
dec
sbb
lock
inc
inc
add
xor
fldln2
and
cld
mov
test
xchg
xor
iret
dec
lock
fildl
shrl
das
adc
icebp
out
ds
ja
dec
in
jl
call
mov
xor
arpl
add
loopne
mov
jle
insl
cmp
pop
jne
sbb
add
dec
fs
daa
xchg
and
jns
pop
adc
sub
push
mov
fldenv
and
jge
out
iret
repnz
repnz
loope
sahf
dec
repnz
mov
lock
jge
push
aas
je
outsb
mov
fld
cmc
dec
aaa
movsb
add
pop
pop
lcall
mov
mov
mov
repz
inc
mov
mov
in
push
and
nop
fld
imul
or
cmp
xor
adc
cmp
jle
mov
ficoms
gs
pop
popa
inc
push
add
pop
cmp
mov
outsl
ja
cmp
outsw
sub
add
cwtl
sbb
icebp
jno
jnp
mov
pop
decl
mov
mov
scas
lret
lret
pop
pop
push
lds
sub
mov
in
insl
movups
sbb
sbb
mov
or
or
inc
addl
adc
pop
stos
jle
sub
ljmp
pop
jg
aas
xor
mov
int3
mov
out
mov
mov
pop
jl
sub
mov
add
sti
mov
sub
mov
mov
gs
fisttps
cltd
cmp
adc
call
mov
bound
nop
addr16
add
inc
xchg
sub
inc
sbb
repz
repz
xchg
idiv
inc
push
adcb
mov
testl
adc
or
sub
insl
cmpl
xlat
adc
rolb
add
imul
repz
xchg
jg
aaa
mov
mov
aad
shlb
fs
test
sbb
insl
lret
and
cltd
popa
shlb
xchg
sbb
inc
es
lcall
ficoms
sub
xor
and
in
mov
pop
adc
jg
push
sub
sar
cmpsb
ljmp
cmc
pop
outsb
mov
decl
jl
inc
adc
push
cmpsb
imul
jge
out
jmp
je
or
add
mov
mov
inc
jns
adc
stc
shlb
rcrb
nop
jmp
orl
sub
sub
imul
sub
dec
cwtl
push
outsl
nop
cs
push
cwtl
ror
xor
sti
xchg
aad
adc
cli
aad
inc
push
add
mov
add
xchg
test
gs
xor
sbb
jle
pop
incl
pop
iret
lahf
dec
lret
icebp
add
ret
dec
cld
repnz
fsubr
iret
cld
int3
jmp
pop
decl
sti
ret
or
aas
clc
out
cli
mov
js
mov
cmpsb
clc
loop
cmpsb
push
aas
inc
jecxz
add
add
inc
push
pop
xor
out
mov
out
mov
jno,pt
push
xor
daa
pop
into
test
es
xchg
ss
orb
inc
adc
mov
or
daa
lret
lahf
inc
or
mov
mov
leave
xchg
mov
adc
push
or
std
popa
jle
mov
imul
fisttps
and
and
sarb
mov
lahf
loopne
jg
sub
and
out
jmp
mov
mov
pop
mov
ds
jne
cmp
xlat
mov
aaa
movsb
add
in
aam
test
sti
or
jecxz
and
in
cmp
sbb
pop
scas
sub
in
lahf
icebp
xchg
sub
cwtl
stc
push
je
mov
mov
xorl
enter
mov
add
dec
inc
sbb
fs
stos
xor
popa
adc
lcall
xchg
inc
gs
push
add
add
mov
mov
or
dec
loop
and
adc
xlat
jle
cmc
pop
push
iret
push
xrelease
insb
imull
hlt
clc
xchg
scas
mov
pop
mov
icebp
and
xor
and
in
cmp
into
inc
jnp
rorl
fucomi
out
pop
sbb
add
sbb
adc
mov
addr16
cmpsb
fcmovnu
int3
jbe
sahf
mov
add
repnz
mov
push
sbb
popf
push
xor
adc
je
pop
cbtw
mov
fwait
aad
cltd
sub
sbb
cwtl
adc
out
jle
out
dec
mov
push
sbb
sti
pop
jl
and
mov
sbb
dec
andl
insb
cwtl
stc
repz
in
jge
ret
xor
xlat
adc
cmpsl
push
aas
inc
cmpsb
jge
ret
cmp
imul
test
push
repnz
jle
adc
in
aas
jae
cwtl
pop
aaa
or
clc
pop
xor
mov
push
cmp
sbb
and
ja
out
mov
adc
jge
pop
lahf
js
pushf
push
push
add
mov
leave
inc
and
sti
xor
add
lea
add
cltd
dec
fistl
lahf
xchg
pop
ja
sbb
pop
and
gs
ret
pop
fistl
push
xor
lods
inc
pusha
dec
jg
cmpsb
stos
dec
and
test
and
dec
mov
mov
flds
xchg
mov
jge
sti
fidivrs
outsb
sub
movsl
int
dec
jp
xchg
xchg
data16
int3
inc
sbb
mov
adc
and
sti
fdivp
mov
or
xor
adc
loopne
jge
std
push
and
mov
mov
mov
cmpsb
mov
fucomi
push
mov
or
cmpsl
and
or
inc
adc
mov
cltd
mov
mov
inc
int3
cmp
cmp
jnp
mov
mov
jmp
jg
xchg
in
je
inc
sti
pop
loopne
sub
jecxz
dec
in
jl
cmp
jne
gs
mov
or
xchg
cwtl
add
pop
or
xorb
xchg
sar
mov
es
int3
out
xchg
cmp
dec
pop
jns
pop
or
lods
xchg
rcr
xchg
leave
into
push
hlt
fildl
xor
cmp
mul
scas
pop
xor
fisttpll
sbb
jnp
and
arpl
hlt
add
ja
xlat
pop
and
mov
jo
cmp
lods
or
mov
insl
jae
xchg
xor
and
repz
shlb
jno
enter
in
pop
std
ret
mov
rcrb
enter
cli
fnsetpm(287
and
shrl
pusha
adc
clc
sub
pop
cwtl
ds
push
adcl
xlat
repnz
les
xor
inc
inc
or
sub
push
sub
das
jg
inc
pop
sub
pop
cwtl
pusha
push
shrb
mov
add
and
add
mov
push
loopne
push
movsb
in
fidivs
jae
ja
imull
mov
clc
scas
pmullw
and
mov
in
mov
jae
test
xchg
push
jg
popl
call
dec
fld
mov
inc
cmp
sti
push
lock
jb
sbbl
mov
or
mov
std
data16
fs
mov
or
popa
ficoms
xor
movl
out
inc
sub
adc
subb
fisttpl
and
js
cwtl
dec
in
add
arpl
lahf
jns
inc
mov
push
add
add
mov
mov
shr
sub
sub
dec
push
stc
mov
into
leave
fistpll
cli
adc
xlat
lods
add
cmc
mov
aas
bound
push
jne
js
pop
xchg
jmp
or
inc
push
dec
cltd
mov
je
mov
pusha
push
lret
out
mov
xor
cld
in
xchg
push
sub
je
lret
stc
loop
xor
fldt
lock
mov
out
imul
jnp
pop
push
or
ja
or
inc
out
xchg
inc
imul
mov
insl
stos
lods
dec
push
lret
sti
inc
dec
adc
jecxz
jg
ret
call
movsb
or
gs
aas
jmp
shll
mov
pop
mov
cmp
mov
sar
nop
lock
pushf
cld
std
jecxz
xchg
adc
fistps
rorb
xchg
mov
dec
int3
sbb
push
gs
fnstenv
and
push
mov
xor
cmp
das
sub
xchg
hlt
xchg
pop
cld
and
rolb
loope
cmp
decl
insl
jp
out
mov
dec
adc
pusha
rcrb
test
lret
jl
fsubrp
iret
or
loop
inc
data16
addr16
insb
sbb
fwait
mov
out
and
das
add
cld
fmull
add
clc
mov
iret
mov
ret
cmpsl
fidivs
mov
push
lcall
mov
enter
popa
inc
sbb
xor
lcall
cmp
xchg
repz
in
jge
shlb
add
sbb
inc
orl
rcr
and
xor
scas
xor
inc
mov
sbb
in
ret
xchg
and
popf
outsl
mov
popa
jns
cld
cld
and
and
outsl
incb
cmp
cmp
jbe
dec
lahf
xor
ljmp
test
or
pushf
popa
cli
clc
aaa
ret
cwtl
fs
jo
fstpt
aaa
xchg
xchg
stc
lock
fidivrl
or
repnz
add
add
xchg
leave
push
add
ror
mov
lret
in
ss
bnd
add
jg
lcall
inc
fidivs
lahf
xchg
push
int
mov
cmp
sti
add
mov
push
xchg
pop
scas
mov
jb
repz
dec
clc
xlat
inc
loop
jmp
add
mov
sbb
push
pop
pop
test
jge
sub
mov
in
ljmp
popa
test
add
and
dec
mov
mov
dec
pop
and
sbb
fcompl
repnz
in
movsl
movsb
mov
cld
bound
daa
mov
std
jbe
cmpsb
cmpsb
repnz
mov
in
pop
popa
xor
fwait
xor
pop
andb
stc
jns
pop
lret
jmp
xchg
ret
sbb
aam
mov
dec
std
lcall
repz
cli
jle
adc
in
std
cmpsl
mov
pop
jg
or
into
and
jecxz
mov
out
std
orl
sbb
loope
test
out
jbe
xor
and
dec
subb
mov
pop
push
addb
hlt
add
roll
test
mov
inc
ret
pushf
lock
mov
xchg
mov
repnz
sbb
adc
rorb
andl
enter
fs
and
push
xor
ret
cwtl
jle
xor
or
in
pusha
dec
cmpl
mov
xchg
lock
arpl
xchg
add
xor
orl
sub
pop
mov
arpl
shrb
push
cld
mov
jb
outsb
iret
insb
das
gs
add
pop
cmp
and
dec
cltd
repz
in
ss
mov
push
adc
jge
jne
cltd
xchg
jge
sub
incl
out
jnp
das
and
add
lcall
out
dec
mov
jnp
dec
movsl
stc
fwait
loopne
xorl
test
nop
add
test
push
ljmp
aam
inc
push
sbb
or
aas
cmp
pop
repz
mov
pop
popf
rcll
sub
cmp
add
add
adc
mov
sub
mov
or
xchg
push
mov
adc
mov
in
or
add
aas
shl
mov
inc
mov
pop
fisubs
jne
in
mov
sahf
repz
cmp
fcomps
pop
ss
call
sbb
ret
cld
lods
mov
ds
xchg
mov
inc
xor
clc
jge
sbb
loop
cltd
jl
xchg
aas
std
orl
orb
clc
lds
xor
ret
inc
pop
push
test
jo
sbb
imul
mov
mov
xor
das
mov
pop
and
fwait
cmp
cmp
sub
dec
sub
fidivs
scas
jno
scas
add
cmp
cmp
sub
mov
pushf
mov
jne
sbb
mov
mov
cs
insl
shld
adc
ret
ret
jo
nop
jge
loopne
and
jns
imul
xor
xchg
pop
pop
ss
cwtl
cmp
in
push
lea
enter
pop
xchg
out
andl
fs
inc
xchg
loope
ss
mov
lcall
out
or
cltd
jecxz
push
fisttpl
push
inc
xor
cmc
dec
jge
mov
aam
jg
mov
jl
xor
sub
or
lahf
mul
or
push
mov
test
test
xor
lods
icebp
push
test
in
in
arpl
cmpb
add
or
sbb
pop
sbb
add
cmpsl
mov
inc
dec
ds
aas
push
add
repz
in
jo
inc
jo
shrb
pop
cmp
mov
movsl
outsl
lods
aam
cmovo
inc
jp
pop
dec
mov
mov
push
icebp
inc
notb
add
mov
icebp
rclb
rep
pop
sbb
shrl
mov
push
pop
fists
inc
add
in
pop
inc
add
jne
dec
cmp
pop
push
inc
enter
push
xor
scas
cmp
lcall
testl
gs
pop
jmp
fisubrs
movb
sub
fisttpll
aas
hlt
xchg
or
pop
test
bound
cmc
sbb
mov
pop
arpl
xor
add
xor
or
fs
cmp
sub
pop
rcrl
and
jecxz
lods
repnz
pop
or
test
mov
or
add
inc
and
jae
or
div
pusha
mov
rcll
inc
inc
add
pop
cmp
mov
cmc
mov
jge
scas
hlt
jp
rolb
sub
mov
data16
push
data16
add
ja
jp
cmp
xor
pop
hlt
or
cld
add
daa
xchg
sbb
xlat
mov
call
sbb
pop
in
sub
sti
xchg
xchg
adc
fisubrl
cmpsl
push
sar
mov
jp
test
fiadds
cmpsl
out
and
test
pusha
aam
lods
cmpsb
xorl
test
test
sub
pushf
add
adc
mov
sub
mov
adc
es
cmpb
addr16
dec
out
lcall
sbb
sbb
paddusb
aam
mov
xor
jl
mov
mov
mov
jp
mov
mov
aad
or
add
push
or
dec
mov
ds
das
lahf
lods
icebp
pop
xlat
jbe
cmp
repnz
orb
jl
jecxz
int3
stos
pop
std
ljmp
cmp
dec
xchg
xchg
push
cld
adc
loope
cmc
push
out
and
lcall
andl
xor
adc
test
call
jge
sbb
das
aad
mov
add
insl
mov
scas
xchg
pop
nop
mov
dec
fsubs
push
mov
out
push
out
incb
ret
fcomp
add
andl
lahf
sub
sarb
lea
push
add
pop
sti
add
and
or
aas
xchg
sbb
and
hlt
inc
lahf
outsl
iret
or
clc
das
aas
pop
aaa
or
out
out
ja
dec
ror
add
or
mov
repz
and
punpcklbw
in
jg
aas
push
sbb
rorb
adc
adc
adc
or
rorb
pusha
outsl
lret
out
pop
cmpsb
loope
cld
aad
test
adc
cmp
xchg
jno,pn
nop
scas
aas
icebp
add
cmpsb
cmpsl
xlat
push
dec
mov
es
mov
xor
je
in
push
add
pop
mov
lods
sub
and
adc
mov
repz
inc
ret
cld
xor
in
loopne
mov
test
lcall
repz
or
cmpsb
int
mov
rol
push
xchg
jge
mov
mov
jno
pop
cmp
or
imul
dec
dec
mov
mov
cwtl
fildl
test
and
or
call
icebp
or
icebp
dec
popf
repnz
jmp
add
lea
loopne
std
jo
add
jns
outsb
mov
mull
jbe
pop
add
int3
jnp
add
add
push
add
sbb
mov
xchg
cmp
addl
adc
xchg
inc
ds
pop
cmp
jl
pushf
pop
cld
loop
jne
push
push
inc
add
mov
cmp
xchg
xchg
enter
push
nop
sbb
roll
and
add
test
sahf
push
pop
cltd
daa
xchg
add
icebp
jg
mov
in
daa
mov
cmp
aas
jg
gs
insb
hlt
cmpsl
mov
inc
outsl
mov
divb
ljmp
or
xchg
arpl
cltd
mov
lahf
add
inc
xchg
inc
addb
mov
lds
or
pop
cld
aas
mov
pop
mov
addb
inc
or
and
dec
sti
sbb
xchg
sbb
adc
es
cmp
mov
jbe
pop
dec
popa
inc
mov
pop
or
jo
daa
cmc
rcrl
adc
stc
sub
repnz
push
iret
loopne
mov
pop
aaa
ja
jl
or
sbb
hlt
mov
movsb
xlat
xchg
addr16
popa
push
outsl
pop
fs
xor
frstor
adc
or
std
leave
cmpsl
daa
mov
ja
cli
imul
cmpsl
cld
mov
sbb
jl
in
sbb
pop
jecxz
pop
jmp
add
or
adc
dec
orb
sub
sbb
mov
ljmp
repnz
or
push
js
shlb
sahf
inc
add
lock
insb
andb
divps
into
lods
repnz
mov
leave
inc
sub
inc
insl
add
xor
inc
mov
ljmp
int3
sub
into
cmp
sti
jp
test
adc
dec
or
sbb
loop
fprem
and
fs
test
pop
push
push
pause
test
push
scas
jb
es
or
and
loop
pop
add
orb
pop
out
lret
leave
ret
cmp
and
test
dec
das
out
out
jge
jl
sbb
and
decl
or
fidivs
adc
sub
add
jo
scas
jns
xchg
hlt
cmpsl
cmpsb
push
rcl
test
popa
repz
int3
xlat
aas
aas
ret
push
aas
jle
jg
jbe
jns
pushf
adc
rcll
cmc
push
pop
popa
jecxz
xor
clc
repnz
stc
aam
jg
shll
ljmp
pop
pushf
cmc
cld
lret
nop
mov
mov
nop
inc
inc
push
mov
mov
out
stos
cmpsl
aas
ja
sbb
cmp
call
sahf
ds
dec
std
xlat
pop
fidivl
enter
aad
int
rclb
pop
pop
mov
inc
cmp
cmc
imul
pop
adc
into
dec
dec
cmc
xchg
cmpsb
mov
or
test
xchg
mov
das
add
stc
cmp
bound
pop
into
push
mov
adc
shlw
mov
and
inc
xor
push
pop
push
mov
and
jno
mov
fisubrl
or
test
loopne
and
cwtl
test
repz
xlat
pop
lcall
pop
sbb
rcll
mov
out
sahf
cmp
mov
jns
outsl
cmp
call
das
idivl
adc
pop
or
jne
mov
jge
xchg
loop
adc
cltd
push
mov
jnp
cmp
pushf
sub
mov
push
leave
jg
jge
out
jnp
pop
sahf
stc
fists
xchg
repnz
popf
lret
cld
icebp
sbb
pop
jns
daa
sahf
jle
iret
or
ja
pop
or
stc
aam
lret
and
cmp
lahf
pop
sbb
mov
loopne
xor
adc
movsl
jle
orb
sbb
push
les
incb
popl
lahf
mov
gs
add
dec
mov
push
add
test
push
add
imul
rcrb
jae
inc
or
add
mov
and
test
cs
adc
adc
jp
inc
mov
pop
push
out
rep
xor
cmc
aam
repz
xor
xor
jge
divl
ficomps
and
push
dec
sub
insl
scas
popa
cmc
mov
fnstcw
and
lahf
add
fmulp
loop
adc
pop
jp
pop
idivb
int
inc
ljmp
xor
addr16
pop
mov
sbb
push
mov
out
into
pop
shr
jle
dec
xor
stos
sbb
xor
dec
and
and
scas
cmpsl
pop
jmp
sub
cmpsb
pop
ljmp
ljmp
or
inc
std
xchg
leave
aad
imul
into
cs
jle
andb
xchg
mov
out
mov
add
ret
add
pop
sbb
dec
les
jo
lock
ds
cmp
xor
mov
mov
cmp
pushf
scas
repz
xchg
jns
fsubrs
add
repnz
push
push
add
in
in
jnp
loop
mov
mov
xlat
xchg
jnp
inc
stc
retw
popf
sbb
pop
push
pushf
jecxz
mov
dec
daa
jbe,pt
sub
bsf
jge
pop
or
push
pop
jl
addr16
insl
jbe
mov
inc
jns
dec
dec
lock
fwait
adc
fwait
aad
das
and
push
nop
popl
pop
mov
sub
test
xchg
and
gs
and
jl
aam
lds
dec
sbb
mov
out
lods
pop
adc
adc
jle
mov
cmp
in
sarb
out
xlat
push
loop
inc
sahf
jle
mov
arpl
ja
inc
in
dec
inc
stc
dec
mov
cwtl
mov
inc
js
adc
mov
adc
ja
call
mov
mov
dec
sbb
out
arpl
ret
nop
loopne
sub
imul
arpl
mov
fdivrl
mov
cmp
icebp
inc
sbb
scas
push
into
popf
cmp
mov
jo
int
cmp
add
mov
xchg
mov
xor
cmp
lods
movsl
sbb
sub
int3
jge
mov
aam
scas
inc
cmp
loope
inc
daa
out
jecxz
jo
push
out
mov
push
out
jle
jp,pt
push
xchg
in
ja
add
lea
adc
pop
sub
test
pop
mov
push
push
cmp
adc
cmp
push
enter
fdivs
loopne
daa
lock
cmp
orl
jmp
or
test
popf
add
push
cmc
hlt
mov
and
nop
inc
adcl
and
mov
popf
and
in
or
cmp
dec
fildll
les
sub
ja
xor
insb
sbb
int
sbb
jo
inc
out
pop
jmp
lret
das
add
into
iret
pushf
sbb
pop
aaa
or
movsl
dec
insl
sub
test
test
out
rorl
fwait
inc
cmp
stc
mov
mov
scas
pop
scas
add
push
xchg
push
mov
fnstcw
lods
mov
dec
dec
fimull
in
push
jmp
inc
mov
lahf
inc
daa
adcb
imulb
in
and
dec
stos
dec
add
js
rep
out
imul
jmp
clc
aam
lock
xchg
sahf
mov
mov
inc
and
pop
notl
xchg
dec
pop
push
js
pop
mov
repnz
popl
adc
movsl
cmp
cmp
faddl
add
add
mov
aam
dec
mov
ret
sbb
jo
push
push
add
inc
shr
fstl
inc
pushl
push
mov
push
scas
test
jae
out
pmaxub
sub
push
clc
sbb
vpmacssdql
add
cmpb
adc
vmovaps
mov
fldt
cld
mov
sarb
scas
bound
aad
cli
lods
shlb
sub
mov
xchg
jo
push
clc
fsubrp
cli
jecxz
jno
ja
divb
mov
pop
or
push
sarb
enter
pop
loopne
pop
test
mov
sub
or
push
mov
repz
ja
push
push
addr16
pop
test
sub
inc
pop
mov
push
dec
mov
and
cli
push
testl
cmp
das
pushf
push
out
test
enter
adc
mov
inc
jnp
jne
ja
lret
scas
test
shrb
cmp
in
testl
inc
shll
sbb
xlat
mov
mov
nop
xor
iret
add
xlat
ficoms
adc
scas
mov
xchg
inc
mov
ds
stc
dec
cli
pop
add
mov
fs
stc
imul
jmp
jmp
call
mov
notb
pop
jle
mov
adc
jg
stc
leave
lret
enter
adc
and
push
repz
jb
push
or
add
xchg
sbb
pmaddwd
fsubrp
test
xor
jb
push
lea
dec
and
mov
daa
jo
mov
outsb
fnstcw
fisubs
dec
int3
into
mov
mov
arpl
cmc
push
push
cltd
ret
sahf
cmpsb
mov
test
mov
add
add
cs
ret
inc
insl
ret
mov
lods
mov
add
mov
pop
dec
jne
stos
push
cmp
mov
testl
ret
rolb
rorb
pop
jp
pop
add
push
pop
or
rorb
jg
fdivrl
mov
std
xchg
adc
iret
dec
pop
adcb
ja
shll
xchg
out
xorl
test
out
sbb
lret
or
inc
dec
pop
jo
xchg
lret
adc
add
push
push
jbe
mov
sub
pop
pop
repz
jmp
push
adc
aaa
or
cld
loopne
iret
roll
push
or
pop
pop
dec
enter
xchg
pop
loopne
push
add
int
push
cmc
mov
cmp
cmpsl
mov
add
daa
out
aaa
mov
add
mov
mov
mov
pop
mov
adc
sti
adc
or
mov
ds
pop
mov
xchg
push
std
dec
sahf
dec
adc
loop
mov
inc
psubsw
shrl
pop
pop
push
push
stos
scas
sahf
adc
lcall
mov
add
adc
add
lock
out
jo
mov
das
or
dec
in
mov
add
daa
hlt
bound
dec
nop
sahf
push
add
and
jns
mov
fidivl
mov
or
mov
insl
in
jae
ja
movsl
enter
jp
sbb
mov
aad
push
or
outsl
xor
push
jmp
xchg
sbb
repnz
sti
fxam
movsb
pop
leave
push
xchg
inc
pop
push
outsl
sbb
popf
rol
lret
es
loope
xor
ficoms
add
push
inc
sbb
mov
mov
adc
xor
lods
lods
mov
les
adc
adc
out
inc
push
add
and
jnp
push
shrb
sbb
rcrl
call
lock
or
mov
scas
cli
or
mov
std
out
leave
xor
xchg
int
in
adc
pusha
jecxz
int3
jge
and
push
out
arpl
xor
bound
push
jmp
pop
stos
lahf
mov
ret
nop
mov
imul
cmp
out
cmp
sahf
enter
sahf
dec
cltd
push
into
mov
add
hlt
lods
mov
lods
call
lahf
mov
aad
rcll
dec
test
lock
add
xchg
dec
sub
sbbl
mov
adc
sub
insl
orl
andl
popf
fbld
xchg
lret
inc
mov
scas
cmpsl
lods
jp
dec
shrb
out
pop
mov
fnstcw
loope
ret
mov
std
adcl
lahf
jne
push
cmpsl
pop
in
sub
fimull
pop
test
push
add
bound
out
jo
int
mov
push
mov
mov
xchg
enter
inc
mov
and
push
push
jecxz
popa
inc
and
xlat
in
fmull
dec
loope
sub
cmp
aam
and
cld
add
xchg
loop
ja
in
cmp
shlb
jecxz
inc
inc
std
gs
movsl
outsb
pop
jno
mov
maxps
fimuls
xchg
dec
xchg
sbb
inc
daa
push
hlt
xchg
es
je
cmp
fnstcw
xor
xchg
testb
adc
sub
sub
cltd
js
cmp
and
push
cltd
mov
adc
push
movsl
cli
dec
enter
hlt
xchg
inc
inc
fnstcw
test
clc
pop
rcll
je
lret
jg
sbb
dec
out
inc
dec
mov
mov
daa
dec
jno,pt
loopne
jle
das
pop
cs
adc
rolb
andl
jle
daa
cmp
pop
fnstcw
in
insl
fbld
or
fbld
mov
lret
sub
add
leave
or
mov
xor
xchg
pop
test
dec
dec
and
pop
sub
or
jo
inc
shlb
into
cs
aas
rorl
cmp
fstpt
jno
pop
add
aam
sub
shrl
add
push
clc
ret
pop
sub
int3
call
inc
leave
stos
daa
sti
in
test
rol
outsl
dec
popa
mov
push
xlat
mov
shlb
push
and
fisttpl
mov
js
in
xchg
add
mov
adc
mov
movzwl
or
xchg
sub
push
cli
incl
adc
add
fwait
sbb
enter
xchg
cmc
lock
add
adc
cwtl
cmp
xchg
push
js
sub
add
nopl
sbb
cmp
ja
mov
popf
xchg
js
aad
mov
bound
mov
add
mov
repnz
mov
mov
test
icebp
rcrb
xchg
sarb
out
mov
push
scas
fstpl
or
inc
and
push
cmpsb
loop
inc
pop
in
popa
jns
or
adc
and
cmp
addr16
push
bnd
sbb
inc
inc
add
or
dec
inc
inc
push
or
shld
mov
gs
sub
loopne
add
movsl
movsb
sub
cltd
call
xchg
push
mov
push
jp
mov
sbb
xor
and
andb
sbb
mov
cwtl
jg
out
clc
mov
and
outsb
pushf
test
xchg
dec
in
or
mov
repz
int3
sbb
dec
cmpsl
xchg
push
lret
icebp
or
movsl
adc
movsl
inc
add
dec
inc
gs
inc
out
sub
jno
mov
ds
mov
sub
rcrb
call
scas
sub
stos
fwait
jmp
dec
loope
stos
xchg
inc
add
stos
sbb
jg
out
js
mov
mov
fsts
xor
lods
mov
movsl
hlt
xlat
cs
cmp
push
pop
addb
test
movsb
rcrb
into
inc
xchg
inc
xor
and
and
mov
loope
sbb
bound
dec
sub
pop
popf
jg
in
movsb
pop
shll
pop
cmpsb
or
add
sbb
adc
pusha
adc
add
ja
xchg
mov
sbbl
jne
adc
mov
add
test
outsb
inc
cltd
fdiv
gs
popf
iret
mov
xor
push
rorb
sub
and
fs
jb
in
mov
enter
push
das
lahf
ljmp
or
ja
mov
push
cmpsb
ljmp
lds
std
xchg
cmc
xor
iret
dec
xchg
repnz
out
fiadds
mov
leave
add
mov
push
loope
pop
stos
das
mov
loope
pop
mov
jbe
push
sbb
jmp
xchg
subl
and
push
mov
adc
fs
popa
xchg
jmp
jge
inc
cmpsl
jnp
cmp
imulb
add
sbb
scas
ss
test
push
add
hlt
add
push
rcl
mov
imull
push
pop
fcomip
mov
mov
sbb
aas
out
jl
cmp
add
test
int
rol
cwtl
or
xchg
aas
dec
xor
outsl
sti
push
mov
jae
mov
cmp
ds
je
ja
xlat
imull
negb
rorb
sub
pusha
into
xor
jae
xchg
push
in
xlat
std
icebp
mov
xlat
std
cmp
daa
imul
sub
or
add
int3
sub
mov
das
lds
fiaddl
jecxz
sbb
add
mov
xchg
test
or
inc
icebp
negb
into
mov
or
sbb
in
repz
ret
outsb
mov
stos
add
add
idivb
or
pop
xorb
mov
aaa
xchg
hlt
ja
push
or
pusha
push
cmpsb
xchg
ljmp
jne
pusha
aad
pop
gs
test
push
jl
push
pop
xlat
pop
loope
add
jns
les
adc
test
ds
mov
jbe
push
pop
pop
call
adcl
aaa
aaa
xchg
fbld
push
add
pop
cwtl
jnp
enter
mov
mov
lock
shll
cltd
push
dec
test
sbb
fs
loopne
mov
sub
pop
add
cmp
pop
mov
test
lret
jo
dec
xor
sbbb
mov
rorb
jmp
jnp
in
movsl
fs
lods
hlt
testb
repnz
jns
xchg
or
mov
add
add
add
adc
filds
insl
xlat
test
imul
out
mov
outsb
adc
mov
jecxz
push
fdivs
dec
mov
iret
sub
ret
out
push
addr16
jle
outsb
stos
out
mov
call
xchg
mov
cli
sub
aad
cmpl
scas
pop
mov
popf
icebp
adc
mov
js
into
loope
iret
xchg
rclb
add
inc
xor
cmp
and
in
scas
push
cmp
sbb
rclb
mov
bound
mov
add
pop
call
mov
sbbb
stc
pop
mov
lahf
imul
out
xor
repnz
in
addb
xchg
sbbl
pushf
outsl
fnstsw
mov
add
sub
xor
out
out
or
jp
add
mov
inc
xor
mov
mov
mov
nop
movsl
sub
icebp
mov
hlt
les
cmp
js
ds
and
and
mov
rol
push
add
cmp
imull
sub
xchg
cs
icebp
ja
xchg
mov
sbb
push
notb
pop
cmpsb
scas
movsb
push
inc
xor
sbb
sahf
cwtl
pop
pop
or
cmpsb
lods
mov
cmp
inc
or
out
daa
jge
aam
jb
enter
loope
icebp
sbb
mov
fs
dec
pop
lds
add
mov
add
stos
mov
lods
lods
adc
mov
xadd
dec
fnstsw
or
inc
mov
xchg
jp
loope
scas
stos
lret
cmpsb
icebp
rcr
sbb
pop
inc
ja
and
sti
lret
lods
dec
mov
aad
mov
pop
pop
cmp
mov
pop
mov
add
add
ljmp
jle
jno
loopne
push
fdivp
and
xchg
pop
mov
jge
fcmovnu
lock
xor
adc
add
push
adc
hlt
in
dec
pop
cmp
dec
into
sbb
cli
jno
nop
mov
pop
ja
jg
add
hlt
xchg
repnz
cmp
fists
out
aad
std
and
sub
adc
rclb
or
xlat
push
or
or
jg
add
xor
fidivs
mov
cmpsl
mov
stos
jae
push
jne
cmpb
cmp
jne
pop
lahf
push
mov
mov
or
mov
nop
inc
pusha
jae
arpl
xchg
cmc
ja
mov
frstor
aad
in
sbb
push
or
pop
pop
clc
xlat
add
js
ret
mov
push
push
add
add
push
int
push
xor
adc
mov
mov
aad
arpl
jle
sbb
stos
clc
adc
add
xorb
inc
push
mov
stos
xor
ja
sub
and
loopne
add
mov
nop
mov
push
push
rorb
dec
pop
mov
into
pop
xchg
sub
mov
mov
mov
add
out
stos
lret
stos
dec
push
shrl
adc
pop
out
scas
inc
lret
mov
add
sub
lock
jle
add
ret
lret
stos
xchg
mov
add
push
xor
add
push
push
xor
sub
jae
push
jae
mov
call
mov
cmpsl
adc
mov
mov
sbb
mov
jmp
jae
mov
pop
scas
imull
lahf
inc
sti
fisttpl
adc
subl
imulb
push
pop
add
pop
xor
inc
into
or
push
push
xchg
mov
fldcw
cmp
mov
enter
out
mov
mov
mov
sub
mov
lahf
xchg
sub
push
jl
cld
and
mov
and
inc
cmpl
fmull
cmpl
xor
xchg
pop
arpl
subb
mov
enter
add
repz
fxam
pop
mov
mov
pop
leave
cmc
das
pop
je
rcrl
movsl
fcoms
out
incl
imul
mov
out
mov
sbb
mov
push
push
or
sbb
fdivrs
mov
loopne
xlat
test
rorb
test
push
mov
test
dec
push
in
jmp
push
jo
mov
mov
imull
mov
es
mov
xor
xlat
add
mov
inc
xchg
add
add
adc
repnz
cmp
lea
movsbl
xor
data16
pusha
add
cmp
cmp
jbe
push
xchg
and
sbb
addr16
dec
push
sbb
or
sub
add
fdivrs
inc
pop
pop
das
shlb
pop
jo
push
data16
gs
mov
addr16
mov
mov
cmp
mov
jle
out
inc
sub
and
cmp
enter
or
ret
lret
popf
jmp
mov
scas
fcompl
sub
adcl
into
mov
or
fwait
sbb
cmp
lds
lods
stc
das
inc
insb
push
pop
bswap
lret
mov
pop
xchg
imul
leave
xor
lret
sbb
aad
lock
add
add
dec
inc
scas
inc
pusha
subb
add
xor
add
pusha
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
or
push
pop
mov
pop
sbb
add
sbb
add
push
popl
add
jl
add
pusha
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
pop
add
or
add
cwtl
add
sbb
add
sbb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
test
and
or
xchg
call
or
lret
decl
sar
or
sar
or
decl
dec
mov
or
xchg
out
or
sbb
add
insb
add
add
add
imul
add
jb
add
xchg
or
dec
enter
jmp
dec
mov
or
decl
sar
or
pop
int3
decl
push
mov
ljmp
push
mov
add
inc
add
add
add
add
add
add
push
pop
push
lods
or
enter
clc
decl
lahf
decl
test
decl
stos
decl
test
decl
mov
sti
incl
incl
push
iret
incl
and
add
push
mov
add
add
add
push
incl
jns
incl
decl
lahf
decl
mov
decl
movsb
decl
popf
decl
mov
decl
bound
add
add
push
sbb
or
incl
incl
mov
incl
sar
push
mov
incl
incl
xchg
incl
and
decl
dec
xchg
lcall
xor
sub
xor
cs
daa
daa
loop
and
repnz
push
incl
pop
mov
incl
mov
incl
lods
incl
mov
incl
mov
incl
mov
decl
stos
decl
and
or
lods
and
jmp
sar
decl
int
incl
lret
incl
incl
add
decl
insl
mov
ljmp
dec
lcall
scas
sahf
call
mov
jmp
ror
fxch
sar
mov
xchg
jae
popa
pushl
outsl
incl
data16
xchg
incl
incl
lret
call
decl
call
movsb
decl
inc
cmpsb
int3
pop
inc
mov
incl
call
lcall
incl
enter
add
push
das
dec
pushl
sbb
pusha
dec
mov
aam
repz
out
jecxz
in
loop
in
loope
in
loope
out
loop
push
in
push
jmp
clc
in
loopne
jecxz
mov
xor
or
pop
incl
sar
add
std
call
pushl
incl
decl
nop
lock
inc
mov
add
xchg
dec
push
jae
ljmp
ljmp
ljmp
cmp
idiv
sbb
jg
push
or
ds
mov
lock
jmp
in
loop
in
in
out
in
out
in
in
in
in
loop
ljmp
jmp
in
sti
icebp
out
in
int
jl
pop
lcall
push
push
decl
push
xchg
call
into
lcall
incl
mov
or
lcall
add
add
inc
pushf
or
pusha
shlb
call
mov
ljmp
cmp
or
ja
arpl
ljmp
in
jecxz
out
out
push
jmp
out
hlt
out
out
hlt
out
jmp
push
out
call
push
ljmp
in
jecxz
ljmp
push
call
in
movsb
xchg
mov
and
push
decl
aas
push
incl
int3
incl
imul
push
or
or
pusha
jge
or
and
dec
jmp
or
js
push
push
out
out
out
push
jmp
push
out
jmp
stc
cmc
repnz
cli
div
cli
clc
cmc
cli
clc
idiv
cli
div
stc
cmc
repnz
repz
push
lock
call
fcos
jmp
loope
cli
lock
stos
lahf
xchg
jmp
adc
adc
pop
incl
lretw
dec
stos
adc
add
add
pop
xor
pop
dec
dec
in
loop
push
out
push
ljmp
clc
cmc
icebp
sti
stc
idiv
std
sti
cli
std
std
std
cld
sti
sti
stc
idiv
clc
cmc
icebp
push
lock
icebp
jmp
out
in
jmp
loopne
stc
out
loop
xchg
xchg
lcall
pop
xor
add
sbb
test
sbb
pushl
es
rol
mov
clc
icebp
out
clc
jmp
push
std
std
std
cld
cli
clc
idiv
div
out
push
in
out
out
out
ljmp
out
jecxz
call
dec
lcall
adc
push
adc
add
cs
and
pop
and
cs
and
sub
adc
decl
hlt
jmp
inc
mov
into
jl
aad
xchg
fdivr
repnz
out
cld
cli
stc
clc
repz
in
out
out
in
jmp
out
mov
push
pop
jmp
sbb
sbb
sbb
pop
sbb
cs
and
cs
and
cs
and
add
add
sub
sbb
pushl
es
fxch
push
in
jns
lcall
xor
lcall
xor
jmp
ds
jmp
inc
std
lcall
lods
fcos
sti
cld
cli
stc
push
repz
push
jmp
in
jecxz
ljmp
lcall
dec
lcall
pop
sbb
and
sbb
add
sbb
xor
push
sbb
lcall
add
add
pop
and
cs
and
cs
and
cs
and
cs
and
adc
jmp
pop
stc
jmp
lcall
ds
lcall
cmp
incl
sub
incl
push
pushl
push
sti
clc
idiv
div
jmp
lock
aad
hlt
out
lcall
push
jmp
sbb
pop
sbb
pop
sbb
lcall
sbb
movl
add
add
pop
and
cs
and
cs
and
cs
and
cs
and
sub
adc
call
push
pushl
incl
add
incl
cs
lcall
cmp
jmp
inc
jmp
pushl
std
sti
lock
std
std
stc
cmc
repnz
in
out
in
in
out
jecxz
dec
mov
and
and
cli
and
sbb
and
sbb
and
sbb
and
sbb
pop
sbb
das
and
das
and
cs
and
cs
and
sub
push
and
and
sbb
mov
push
jle
sar
sbb
loopne
sub
jmp
inc
lcall
idiv
adc
idiv
or
ljmp
cld
icebp
cld
cli
clc
push
icebp
in
push
call
cmp
xor
and
sbb
and
sbb
jmp
sbb
and
sbb
and
sbb
xor
fbstp
and
cs
and
sub
sbb
ljmp
sbb
mov
incl
or
incl
and
decl
sub
decl
ss
jmp
sbb
std
out
clc
cld
sti
repz
cld
cli
icebp
cld
cli
repnz
std
sti
repz
idiv
sti
std
cld
clc
hlt
icebp
push
jmp
in
jecxz
jmp
fcmove
decl
aas
lcall
sbb
jmp
sbb
jmp
sbb
ljmp
add
xor
and
ljmp
pop
and
cs
and
sub
sbb
ljmp
push
and
into
mov
std
jmp
and
ljmp
inc
idiv
ss
sti
ljmp
xor
sar
pop
xor
jmp
mov
mov
mov
xchg
xchg
mov
jle
mov
je
mov
je
mov
jle
mov
mov
inc
mov
fdivr
hlt
icebp
jmp
sti
clc
cmc
push
out
out
out
in
jmp
inc
inc
lcall
pop
jmp
push
jmp
sbb
jmp
sbb
ljmp
es
jmp
push
and
cs
and
xor
pushl
and
ljmp
and
sub
sbb
ret
mov
dec
enter
push
lret
and
decl
and
decl
adc
incl
jg
decl
sbb
decl
sbb
call
sub
incl
sbb
incl
adc
incl
push
fdivr
sbb
fcos
or
int3
decl
pop
mov
lcall
lcall
rcl
clc
imul
cld
idiv
div
in
push
jmp
into
incl
cmp
push
adc
push
jmp
sbb
pushl
cs
sbb
add
sub
and
cmp
das
ljmp
sbb
ljmp
and
sub
and
pop
adc
jmp
loope
call
or
lcall
pop
iret
ljmp
inc
ljmp
and
ljmp
push
decl
sub
incl
sub
ljmp
xor
incl
and
lcall
sbb
mov
imul
push
ljmp
fmul
ret
es
and
sbb
sbb
jmp
and
ds
push
data16
add
ss
sub
sub
push
and
sub
and
push
adc
in
jmp
stos
call
xor
decl
daa
fdivrp
add
jmp
add
icebp
ljmp
xor
incl
daa
cli
incl
sub
ljmp
incl
sub
incl
sub
decl
incl
sub
incl
push
incl
xor
incl
pop
hlt
incl
sbb
ljmp
mov
fcmovnbe
test
sbb
sbb
jmp
sbb
jmp
sbb
cmp
cs
and
sbb
add
ss
xor
ljmp
sbb
ljmp
push
and
sub
sbb
cmp
push
pushf
incl
adc
ljmp
in
call
in
incl
and
incl
and
hlt
call
ss
add
stc
incl
sub
ljmp
dec
decl
xor
incl
daa
incl
sub
ljmp
incl
sub
decl
xor
ljmp
dec
incl
sub
stc
call
idiv
daa
inc
icebp
incl
or
test
jmp
adc
sub
and
sub
and
inc
cmp
ljmp
push
and
das
and
pushl
and
sbb
and
and
call
sub
fdivrp
add
call
incl
and
incl
and
jmp
stc
lcall
cmp
incl
xor
pushl
pop
lcall
decl
call
cmp
pushl
pop
decl
ss
incl
sub
call
cmp
ljmp
dec
incl
sub
incl
es
lcall
cmp
jmp
cmp
ljmp
movsl
jmp
push
xor
sub
and
cmp
sub
sbb
and
add
add
and
xor
and
jmp
sbb
decl
sub
ljmp
inc
loop
add
incl
sbb
out
es
lock
sub
call
cmp
cmp
pushl
dec
mov
jmp
xor
sub
sub
and
pop
ljmp
xor
sbb
xor
ljmp
push
std
incl
sub
jmp
inc
idiv
pop
xor
incl
sbb
decl
daa
in
xor
decl
sbb
pushl
and
pushl
sbb
jl
add
add
pop
sbb
das
and
in
adc
jns
add
sar
add
int
xor
decl
sub
incl
sbb
call
cmp
incl
jecxz
sub
xchg
jmp
sub
and
and
jmp
adc
jmp
sbb
jmp
sub
jmp
and
lcall
push
adc
and
add
push
adc
lcall
pop
sbb
sbb
inc
call
xor
pushl
push
decl
clc
incl
sbb
call
inc
out
add
iret
incl
adc
ljmp
push
enter
or
add
add
sbb
daa
cmp
incl
pop
incl
adc
lcall
cmp
lcall
xor
xchg
pop
sbb
jmp
or
adc
sub
push
ljmp
sbb
jmp
inc
pop
call
jns
call
lcall
or
sahf
jmp
or
mov
jmp
push
push
jmp
adc
or
sbb
sub
incl
and
pop
xor
incl
sbb
incl
sbb
ljmp
daa
push
sub
add
add
mov
inc
into
decl
mov
add
sar
sbb
dec
call
lsl
and
sbb
lcall
push
jge
and
dec
decl
xchg
decl
mov
decl
sar
adc
decl
incl
scas
incl
test
decl
or
lcall
dec
jae
pop
push
jge
sbb
push
adc
or
idiv
adc
mov
lcall
sub
test
add
insb
add
add
jmp
xor
incl
jecxz
adc
adc
daa
push
or
incl
mov
incl
mov
mov
call
mov
ljmp
sar
ljmp
jmp
call
mov
incl
test
incl
sahf
incl
mov
stc
decl
lcall
and
lcall
adc
call
insb
incl
sbb
mov
sub
sbb
test
add
jne
add
jns
unpckhps
decl
and
sub
sbb
sub
sbb
sbb
add
incl
mov
incl
decl
call
call
call
incl
cmp
ljmp
lcall
mov
incl
fwait
incl
sahf
incl
sahf
incl
sahf
incl
test
jnp
sub
pop
jmp
sbb
incl
pop
scas
pushl
inc
iret
decl
adc
pop
add
jbe
add
jmp
adc
sub
sub
and
sub
and
sub
sbb
and
decl
jl
incl
mov
pushl
decl
call
lcall
call
decl
aas
loop
ljmp
sar
lcall
test
incl
lahf
incl
movsb
incl
mov
aam
sbb
jmp
push
and
sub
and
and
sbb
sub
incl
or
add
add
add
jmp
adc
sub
and
sub
and
sub
and
sub
and
sub
pop
ljmp
sbb
and
dec
call
push
call
xchg
into
lcall
mov
ljmp
call
ljmp
loop
jmp
aad
call
mov
incl
sahf
stc
incl
mov
decl
outsb
test
sbb
and
sbb
jmp
and
and
and
and
and
xor
and
incl
push
jge
add
add
push
add
sub
sub
push
ljmp
pop
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
or
and
sub
inc
lcall
cmp
outsl
jmp
imul
imul
adc
outsb
call
inc
pop
lcall
sub
push
ljmp
sbb
jmp
sbb
jmp
pop
and
and
and
and
and
and
and
sub
decl
or
add
add
add
add
and
mov
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
pop
adc
call
dec
call
ror
jmp
fcompp
decl
or
ljmp
adc
sub
or
dec
cmp
inc
mov
mov
lcall
adc
jmp
pop
and
and
pop
and
and
and
and
and
and
and
and
ss
and
add
add
and
scas
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
sbb
jmp
loop
std
ljmp
lcall
adc
jmp
sub
jmp
loope
push
in
call
lcall
sbb
jmp
pop
and
and
pop
and
and
and
and
and
cmp
jmp
and
data16
add
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sbb
js
cld
jmp
xchg
mov
pop
sbb
sbb
adc
jns
ja
push
repnz
decl
adc
jmp
pop
and
and
pop
and
and
and
and
and
and
xor
jmp
and
inc
daa
pop
and
and
sub
and
sub
and
sub
pop
and
sub
adc
test
fcmovu
fdivr
das
xor
pushl
xor
lcall
sub
adc
sahf
popf
sahf
lcall
pushl
jg
stc
clc
clc
inc
mov
sbb
and
pop
and
and
pop
and
and
and
sub
pushl
sub
lock
sbb
es
and
sub
and
das
and
xor
and
pushl
jmp
adc
scas
dec
int3
into
cmp
inc
call
mov
lcall
adc
mov
mov
bound
decl
popa
addr16
cld
cld
cld
dec
leave
enter
sbb
and
pop
and
and
pop
and
and
and
sub
and
add
sub
and
cmp
sub
cmp
sub
cmp
sbb
lcall
clc
stc
stc
ljmp
jbe
imul
mov
mov
and
movhlps
lahf
popf
popf
call
rcl
lcall
pusha
inc
enter
ljmp
adc
jmp
pop
and
and
pop
and
and
ljmp
and
sbb
and
pop
push
cmp
sub
inc
xor
incl
xor
inc
xor
incl
xor
cmp
push
jp
ja
sbb
adc
pop
adc
push
ljmp
imul
and
pop
and
and
pop
and
and
jmp
and
pop
sbb
and
push
push
sub
lret
cmp
dec
aaa
xor
decl
xor
pushl
and
call
std
std
ljmp
sbb
ljmp
push
and
push
adc
mov
pushl
sbb
and
pop
and
and
pop
and
and
pop
and
pop
pop
sbb
and
xor
pop
inc
inc
lcall
cmp
push
cmp
call
aaa
decl
xor
xor
dec
dec
call
push
jmp
sbb
daa
sbb
ljmp
pop
and
sub
and
es
jmp
sbb
fs
popa
ljmp
jmpw
pop
and
and
sbb
jmp
pop
and
and
pop
and
and
sbb
add
add
add
push
push
jge
ds
imul
pop
inc
cmp
push
cmp
decl
xor
pushl
and
sub
sbb
sub
and
sub
and
sub
and
sub
and
sub
and
daa
push
and
sbb
adc
jmp
pop
and
es
and
and
pop
and
and
and
pop
pop
sbb
pop
pop
sbb
and
push
lcall
dec
lcall
cmp
dec
aaa
xor
cmp
sub
xor
ljmp
pop
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
pop
and
daa
pop
and
es
and
es
and
es
and
and
and
pop
pop
sbb
push
pop
sbb
and
sbb
dec
cmp
dec
call
cmp
inc
das
cs
cmp
sub
xor
ljmp
pop
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
pop
and
daa
pop
and
daa
and
jmp
and
pop
pop
sbb
push
pop
sbb
pop
sbb
pusha
ss
push
inc
inc
decl
cmp
cmp
sub
xor
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
and
jmp
and
lcall
pop
sbb
pop
sbb
sbb
and
lea
xor
cmp
pushl
es
das
and
ljmp
and
ljmp
and
ljmp
and
ljmp
and
jmp
and
cld
pop
pop
sbb
sbb
add
add
sbb
sbb
and
and
and
repnz
repnz
repnz
pop
jecxz
pop
sbb
push
pop
sbb
add
add
orb
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
incb
add
add
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
rolb
add
add
incl
add
jecxz
add
add
add
loope
add
add
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
pop
add
lock
add
sldt
clc
add
add
sldt
clc
add
add
pop
add
cld
add
add
pop
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
add
add
jg
add
addb
add
add
incl
add
incl
add
incl
add
incl
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
push
add
pop
incl
add
clc
add
ud0
add
clc
add
pop
incl
add
incb
add
incl
add
incl
add
incl
add
inc
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
add
sbb
add
xor
add
inc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
xor
add
sbb
add
add
add
add
or
popa
fwait
or
fisttpl
pop
mov
decl
gs
or
decl
inc
mov
test
add
jo
add
pop
add
add
add
push
test
inc
mov
decl
popa
sar
or
decl
pop
mov
fisttpl
sub
mov
add
add
add
or
push
mov
or
std
incl
mov
incl
scas
incl
xor
or
leave
call
sub
clc
prefetchwt1
push
or
mov
sub
or
incl
lock
repz
movsl
decl
stos
incl
mov
incl
lods
std
decl
xchg
repz
push
mov
or
pop
sbb
add
add
mov
xchg
icebp
cmp
lcall
iret
incl
sar
or
jo
push
push
pop
call
stos
mov
lods
movsl
lcall
arpl
adc
sbb
incl
jmp
sar
incl
call
xchg
repnz
xchg
inc
or
xchg
and
test
jle
pushl
ljmp
jb
dec
inc
inc
pushl
fcmovne
jmp
loopne
jmp
xlat
jmp
xlat
jmp
xlat
in
loop
in
in
call
mov
call
push
test
push
mov
lcall
incl
decl
cwtl
xor
add
add
jae
mov
cmp
cmp
jno
call
loop
out
out
push
jmp
push
out
call
push
out
call
out
out
in
jecxz
out
in
out
in
lcall
inc
incl
int3
decl
jle
fadds
add
add
dec
test
pcmpeqw
mov
daa
das
pushl
jmp
out
push
out
call
sti
stc
idiv
cld
sti
cli
std
cld
sti
cld
sti
cli
sti
stc
idiv
clc
hlt
icebp
push
out
call
in
jecxz
in
jecxz
call
xor
or
mov
push
scas
adc
add
add
ss
leave
out
out
out
jmp
push
lock
cli
cli
stc
cld
cli
clc
push
repnz
push
jmp
fdivr
ljmp
jmp
and
cs
and
cs
and
cs
and
push
and
mov
scas
fdivr
push
sar
inc
push
in
dec
fs
pushl
repz
std
cld
sti
push
repz
push
out
jmp
inc
mov
ljmp
daa
sub
pop
sbb
push
sbb
adc
sbb
xchg
sbb
add
add
pop
and
cs
and
cs
and
sub
and
loope
iret
pushl
aam
xor
inc
std
lcall
jmp
in
cld
sti
cli
push
lock
in
in
call
inc
inc
jmp
sbb
pop
sbb
push
sbb
out
das
and
cs
and
cs
and
sub
dec
dec
push
jmp
ret
aaa
icebp
ljmp
inc
std
ljmp
inc
cmc
cmp
call
aad
cli
div
push
ljmp
js
push
daa
pop
and
and
sbb
jmp
sbb
xor
sub
xor
and
cs
and
sub
and
pop
push
push
push
out
jmp
lcall
xor
lcall
xor
fcos
cmp
mov
out
in
in
in
in
in
in
out
out
out
push
hlt
cmc
cli
cli
cli
std
cld
sti
push
out
jmp
incl
sbb
sbb
jmp
push
and
cmp
sub
ss
sub
sub
push
and
pop
push
push
push
repnz
jmp
pushl
inc
sub
lcall
and
call
pushl
inc
ljmp
dec
decl
pushl
mov
jmp
jecxz
stc
clc
clc
push
repnz
in
in
incl
sbb
jmp
push
ljmp
and
pushl
sub
incl
add
add
sub
sub
push
and
pop
push
push
push
repnz
jp
ret
pop
popf
decl
pop
stos
incl
pop
lret
inc
call
lcall
cmp
cld
incl
sub
jmp
dec
cld
decl
repnz
inc
in
pop
sub
ljmp
mov
int
iret
jmp
jnp
insb
jmp
sbb
jmp
sbb
cmp
das
pushl
sub
lods
cs
and
push
inc
aas
in
es
sub
and
sub
mov
and
jmp
cmp
decl
es
pushl
idiv
add
clc
decl
aas
incl
sub
jmp
dec
decl
xor
jmp
dec
incl
sub
jmp
cmp
lcall
lods
decl
aas
ljmp
sbb
ljmp
sbb
cmp
sbb
dec
cmp
ljmp
sbb
sub
lret
incl
sbb
jecxz
sbb
jmp
add
in
pushl
idiv
add
clc
jmp
push
lcall
inc
cmp
decl
decl
inc
incl
sub
ljmp
inc
repnz
sub
call
iret
jmp
and
sub
sub
cmp
add
sub
es
and
mov
incl
pop
call
das
in
ss
in
pushl
push
lods
cmp
sub
ljmp
xor
sub
sub
ljmp
xor
mov
call
aaa
sti
pushl
idiv
add
loopne
and
loop
pop
sub
call
sbb
xor
sub
sub
add
sub
and
sub
adc
jmp
xor
jmp
loop,pt
ss
int3
pushl
aaa
lcallw
sbb
es
jne
adc
xchg
decl
mov
call
jae
call
pop
cmp
pop
sbb
sbb
dec
jmp
cmp
jmp
cs
aad
or
lcall
pop
aaa
lahf
add
jp
and
mov
jmp
cmp
ljmp
aaa
xchg
lcall
sub
lods
incl
pushf
decl
mov
call
mov
lcall
lcall
enter
ret
adc
incl
pushf
decl
jnp
incl
inc
pusha
decl
sbb
out
add
mov
cs
sahf
jo
add
adc
mov
sub
decl
sbb
and
sbb
incl
pushf
incl
lahf
ljmp
decl
decl
decl
incl
pushl
sar
call
mov
incl
sahf
incl
pushf
incl
pushf
incl
pushf
lcall
sub
decl
sbb
add
popl
add
jns
sbb
sbb
ljmp
pop
and
sbb
xchg
lcall
mov
decl
decl
incl
ljmp
sar
call
mov
incl
sahf
incl
pushf
decl
dec
jmp
and
and
and
sbb
add
add
add
jns
pop
adc
ljmp
pop
and
sub
and
sub
and
sub
and
xor
inc
decl
jmp
push
jmp
sbbl
sbb
call
cmp
and
das
jmp
pop
and
and
and
and
and
xor
incl
add
add
and
ljmp
pop
and
sub
and
sub
and
sub
and
xor
sub
iret
leave
cli
repnz
jmp
and
sub
and
cltd
xchg
xchg
sti
hlt
lock
leave
ljmp
sub
es
and
and
pop
and
and
and
cmp
xor
xor
sub
add
add
and
iret
sub
and
sub
and
sub
and
sub
and
cmpb
cld
clc
cmc
pushl
cmpsb
test
pushl
sub
std
cld
push
out
out
out
jmp
jle
jns
es
and
and
pop
and
and
and
aaa
xor
jmp
pop
sbb
add
and
lahf
sub
and
xor
and
decl
lcall
pushl
lcall
push
decl
dec
call
pop
decl
enter
mov
and
pop
and
and
and
pushl
sub
jmp
pop
sbb
add
and
pusha
xor
sub
sub
cmp
sub
xchg
lea
jmp
push
imul
dec
inc
inc
pushl
imul
out
decl
pop
and
and
pop
and
sub
and
daa
and
mov
sub
fisttps
xor
dec
xor
xor
pop
push
dec
push
lock
sub
es
loope
call
push
jmp
pop
and
and
pop
and
and
and
add
and
pusha
push
cmp
cmp
push
cmp
decl
pushl
imul
dec
inc
dec
ljmp
pop
and
sub
and
dec
inc
inc
lcall
pop
jmp
pop
and
and
pop
and
and
push
scas
cmp
dec
lcall
aas
call
aaa
incl
pushl
es
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
pop
and
es
and
es
and
and
pop
push
iret
pop
pop
sbb
cmp
dec
dec
lcall
aas
incl
pushl
es
sub
and
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
and
jmp
and
jmp
pop
sbb
adc
add
add
cmp
out
dec
ds
cmp
and
sub
and
sub
and
sub
and
sub
and
sub
and
and
pop
sbb
push
pop
sbb
and
sbb
jo
sub
mov
xor
sub
sub
and
jmp
pop
fbld
pop
sbb
push
pop
sbb
clc
add
pop
lock
add
add
add
psubb
add
clc
add
pop
cld
add
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
add
add
psubb
add
clc
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
aas
incb
add
incb
add
add
jg
addb
inc
add
jmp
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
pop
sbb
pop
adc
inc
bound
add
daa
add
add
add
add
add
add
add
add
pop
adc
pop
pop
adc
jb
sbb
push
sbb
add
add
add
add
or
outsb
jae
outsb
int3
in
or
cli
decl
xchg
clc
incl
push
mov
mov
add
addb
pop
mov
push
mov
decl
mov
decl
xchg
cli
decl
in
decl
outsl
int
or
xorb
add
sbb
lock
decl
ret
decl
test
incl
decl
mov
mov
mov
xchg
xchg
incl
cwtl
decl
xchg
incl
leave
pushl
int3
call
jge
lock
add
push
sbb
jne
call
lock
dec
jmp
sar
jmp
aad
in
jecxz
in
in
in
jecxz
in
in
out
in
pushl
test
cmp
in
cmp
decl
add
or
pusha
or
dec
mov
loop
push
jmp
push
repnz
stc
cmc
repnz
stc
div
push
repz
push
out
call
out
out
inc
mov
dec
incl
sahf
fucomip
or
pusha
sub
jge
in
in
out
jmp
repnz
std
std
std
cld
clc
cmc
repnz
jmp
lods
mov
and
cs
and
cs
and
cmp
sub
lcall
pushl
in
call
icebp
push
cmc
sti
stc
div
push
call
sar
push
dec
dec
jmp
sbb
push
sbb
lahf
sbb
add
add
pop
and
cs
and
sub
bound
fdivr
and
out
and
lcall
ds
jmp
call
push
repnz
in
loop
js
outsb
jmp
push
and
and
sbb
pop
sbb
xor
sub
cs
and
sub
jno
call
iret
jmp
and
in
pop
ss
call
aam
push
lock
out
out
out
push
lock
div
std
std
std
sti
stc
idiv
lock
jl
and
sbb
incl
add
add
and
jge
jne
mov
ljmp
into
lcall
sub
daa
aaa
mov
call
sub
cmp
aaa
dec
lret
imul
mov
sar
out
in
in
push
jmp
decl
sbb
jmp
sbb
pushl
sub
cmp
xor
ljmp
and
gs
pop
lcall
and
lcall
xor
lcall
aas
decl
aas
decl
inc
cli
decl
sub
lcall
jmp
sbb
pushl
sub
aas
xor
add
cs
and
dec
cmp
out
xor
and
call
es
lcall
xor
call
xor
lcall
cmp
decl
push
jmp
push
decl
jmp
dec
incl
sub
ljmp
inc
icebp
incl
sbb
ljmp
sbb
xor
daa
sbb
cmp
add
add
and
pusha
daa
and
or
ss
call
loop
ds
loopne
cmp
popf
cmp
imul
cmp
ljmp
push
mov
sub
xor
inc
movsl
lcall
in
ljmp
inc
hlt
call
sub
lcall
and
das
and
add
xor
cmp
ljmp
xor
adc
call
push
cmp
xchg
loope
adc
decl
scas
incl
icebp
call
pop
xchg
decl
push
mov
sbb
cmp
cmp
call
and
mov
adc
add
add
sbb
fbld
cmp
lcall
and
sbb
add
cmp
jmp
ljmp
sar
call
mov
incl
pushf
incl
pushf
incl
test
lcall
sbb
decl
sbb
incl
add
addr16
and
sub
and
sub
and
sbb
call
nop
ljmp
sar
incl
incl
ljmp
call
mov
incl
xchg
icebp
decl
insl
lods
jmp
das
notrack
and
sbb
cmp
mov
add
es
ljmp
pop
and
sub
and
sub
and
dec
inc
inc
lcall
push
jmp
pop
insl
decl
cmp
es
and
and
pop
and
xor
sub
push
push
push
push
sub
and
sub
and
sub
and
sub
and
ror
leave
inc
rol
cmpsb
movsl
cmpsl
jmp
sbb
sar
loopne
fcos
es
and
and
pop
and
xor
jmp
pop
sbb
add
and
xor
and
xor
ljmp
push
and
std
cld
ljmp
ljmp
push
sbb
mov
std
std
jmp
sbb
jmp
sub
jmp
pop
sbb
add
and
push
inc
das
das
incl
xor
inc
das
das
jmp
loope
inc
enter
lods
jmp
sbb
sar
rcl
sar
loope
loope
and
and
and
and
jmp
and
lahf
inc
xor
fistps
cmp
push
cmp
jmp
push
jmp
inc
dec
ljmp
pop
and
pop
push
push
jmp
push
push
jmp
pop
and
and
pop
and
pop
pop
sbb
and
inc
inc
out
bound
decl
cmp
sub
sub
and
sub
and
sub
and
xor
sub
es
and
and
jmp
and
pop
pop
sbb
and
push
xor
inc
fists
inc
cmp
sub
sub
and
sub
and
sub
and
sub
and
sub
and
and
pop
sbb
and
push
adc
sub
xorb
xor
xor
sub
sub
and
fbld
pop
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
incl
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
jp
jno
je
aam
jno
xlat
das
jbe
fsubl
data16
xor
jg
add
or
pop
cmpsl
mov
cmp
stc
ss
loopne
jnp
jp
add
add
fldpi
inc
aam
jmp
into
lcall
xchg
inc
xchg
lret
scas
mov
repnz
xchg
iret
call
int
ljmp
mov
aad
adc
xor
jmp
int
jmp
xlat
sti
clc
idiv
stc
div
push
lock
out
out
inc
ss
or
daa
aaa
mov
in
in
push
repz
std
std
std
std
cld
sti
clc
hlt
icebp
push
call
jecxz
xor
add
add
pop
and
cs
and
andb
das
inc
repnz
dec
lock
div
cli
div
out
in
call
pushf
jmp
sbb
push
sbb
out
add
add
xor
ljmp
pop
and
pop
push
stc
ljmp
in
incl
lock
jmp
repnz
hlt
cmc
cld
cld
cld
push
out
jmp
jmp
pop
jmp
push
incl
add
add
xor
inc
aas
inc
ljmp
sub
ret
pushl
out
decl
repz
jle
in
jmp
lret
jmp
out
jmp
sbb
jmp
das
cs
inc
xor
dec
cmp
das
cmp
sub
lcall
ss
daa
inc
repz
cmp
pushl
push
lcall
aas
decl
cmp
ljmp
push
sub
xor
aas
xor
dec
das
sub
sbb
sar
or
jmp
dec
mov
pop
daa
fwait
call
sub
call
sub
lcall
and
lcall
xor
xchg
ljmp
daa
addr16
sub
add
add
add
sbb
xor
xor
decl
push
mov
incl
mov
call
mov
incl
incl
stc
decl
sbb
call
xor
push
add
jns
sbb
pop
ljmp
pop
and
or
lcall
ljmp
iret
call
mov
jmp
add
lcall
pop
inc
decl
add
add
and
enter
ljmp
pop
and
mov
incl
add
mov
pop
and
and
cs
add
add
add
es
xor
and
incl
add
call
add
jmp
sbb
jmp
daa
daa
xchg
sub
cmp
call
ss
mov
incl
add
mov
pop
and
and
and
xor
dec
cmp
pusha
dec
dec
decl
xor
xor
and
ljmp
pop
and
daa
pop
and
and
jmp
pop
pop
addb
add
xor
sub
inc
cmp
mov
das
and
and
daa
and
cmpsl
and
push
cmp
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
pop
add
rolb
add
sldt
lock
add
add
add
or
adc
adc
add
add
sub
add
add
and
add
add
or
test
add
add
adc
add
add
or
push
add
add
add
inc
push
xchg
stos
add
add
xor
add
add
and
test
add
add
add
add
add
add
sbb
add
add
add
add
adc
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
rclb
add
add
add
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
gs
popa
addr16
gs
mov
push
mov
push
push
call
add
add
add
add
add
inc
add
addb
push
data16
popa
cmp
add
push
add
add
add
add
add
add
add
and
add
jo
add
lock
add
add
add
add
pop
sub
cmpl
jne
push
call
call
pop
call
mov
add
mov
lods
or
je
pushl
pushl
pushl
call
jmp
mov
pop
pop
leave
ret
push
push
call
mov
push
push
pushl
push
call
mov
mov
add
push
pushl
push
call
pop
mov
xor
rep
lea
mov
lods
mov
lods
or
je
xchg
add
mov
pusha
rep
popa
push
xor
repz
inc
pop
xchg
jmp
push
push
pushl
push
call
mov
or
je
add
mov
add
mov
or
je
add
push
push
push
call
mov
push
mov
or
jne
mov
mov
add
lods
or
je
jns
and
jmp
add
add
push
push
call
stos
jmp
pop
add
jmp
mov
or
je
add
lea
push
call
pop
ret
mov
test
js
mov
mov
lods
mov
jmp
mov
mov
ret
push
lea
mov
mov
mov
mov
lea
pushl
add
xor
dec
xchg
xor
lods
add
rol
xor
inc
cmpb
jne
inc
xchg
cmp
jne
mov
add
movzwl
shl
add
add
mov
add
stos
lods
orl
jne
pop
pop
ret
push
sarb
leave
test
mov
stos
mov
ror
jg
add
add
in
movl
movl
mov
lods
add
mov
mov
push
call
cmp
jne
lods
stos
jmp
lods
mov
and
or
jne
mov
and
add
and
shr
inc
jmp
cmp
jne
mov
and
add
and
shr
inc
mov
sub
jmp
cmp
jne
mov
lods
mov
and
add
and
shr
inc
jmp
cmp
jne
mov
lods
and
inc
push
xor
lods
add
mov
pop
push
mov
sub
rep
pop
pop
cmp
jne
leave
ret
push
push
push
mov
add
mov
mov
and
jne
incl
shr
and
decl
pop
pop
pop
ret
mov
sub
inc
add
inc
add
add
nop
inc
add
add
